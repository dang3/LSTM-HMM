push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
xor
mov
mov
pusha
call
add
pop
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
pop
lea
xor
jmp
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
pop
lea
xor
jmp
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
jmp
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
jmp
ret
mov
sub
sub
mov
mov
mov
shl
sub
mov
movl
mov
cmp
je
sub
sub
je
sub
lea
mov
sub
jb
mov
sub
jg
mov
jle
mov
popf
dec
call
add
jne
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
stos
push
mov
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
subl
mov
add
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
lea
mov
push
mov
xorl
pop
sub
or
xor
cmp
je
sub
xor
movl
add
and
neg
addl
clc
sbb
pushl
lea
lea
pop
repz
jmp
mov
pop
pop
lea
xor
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
jmp
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
jmp
incb
movsb
and
add
and
add
and
add
and
add
add
sub
add
mov
add
inc
and
add
add
jp
add
cwtl
and
add
and
add
add
fisubs
add
add
add
and
add
add
repnz
add
add
add
add
add
jl
add
adc
add
movsb
and
add
and
add
and
add
add
lret
add
add
and
add
add
add
and
add
add
or
add
and
add
add
add
and
add
add
add
add
dec
and
add
and
add
add
test
add
pop
and
add
add
add
add
int3
and
add
and
add
add
sub
add
mov
add
inc
and
add
add
jp
add
cwtl
and
add
and
add
add
fisubs
add
add
add
and
add
add
repnz
add
add
add
add
add
jl
add
adc
add
movsb
and
add
and
add
and
add
add
lret
add
add
and
add
add
add
and
add
add
or
add
and
add
add
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
je
jb
jbe
je
push
jb
imul
push
add
inc
insb
gs
jb
outsl
insl
insl
inc
jb
popa
imul
repnz
imul
jb
je
arpl
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
cmp
fs
imul
add
out
inc
gs
imul
bound
gs
add
dec
add
insb
outsb
inc
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
add
je
jb
jbe
push
jns
gs
add
inc
gs
je
imul
inc
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
add
popa
jo
jb
add
jle
dec
jo
outsb
dec
jne
gs
add
je
push
gs
popa
jae
inc
jb
outsl
jb
add
add
je
jne
jb
outsb
je
jb
arpl
jae
rolb
dec
gs
jo
gs
jb
jns
enter
jae
gs
popa
insb
jne
add
add
gs
inc
imul
gs
jb
arpl
jae
gs
jo
add
push
gs
insl
gs
push
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
je
push
outsl
outsl
insb
add
jns
inc
gs
push
jns
push
imul
jo
outsb
push
push
popa
je
add
inc
gs
imul
gs
add
add
ja
push
popa
arpl
jb
jne
add
add
ja
push
fs
add
outsl
jae
push
push
popa
je
add
jl
inc
gs
push
gs
dec
gs
imul
gs
push
outsl
insb
outsl
jb
jnp
inc
gs
push
gs
inc
js
outsb
je
add
push
imul
gs
add
addb
jae
push
arpl
add
jae
push
push
popa
je
add
push
pop
push
dec
inc
dec
inc
cs
insb
add
add
arpl
push
dec
inc
insb
insb
outsl
arpl
insl
je
add
push
jb
arpl
push
dec
inc
imul
add
push
jb
arpl
push
dec
inc
insb
insb
outsl
arpl
outsb
outsb
arpl
add
push
jb
arpl
push
dec
inc
insb
insb
outsl
arpl
jbe
add
inc
inc
push
push
inc
inc
cs
insb
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
add
test
add
clc
jbe
add
add
add
add
add
or
add
xchg
add
add
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
push
sub
sub
xchg
xchg
xchg
add
scas
scas
lods
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
lods
mov
mov
fwait
pop
xchg
xchg
xchg
or
jle
jl
jnp
lods
lods
lods
add
cmpsb
push
mov
mov
mov
ret
les
int3
int
rcl
in
rcl
shl
iret
ror
hlt
into
int3
int3
hlt
leave
repz
mov
in
mov
mov
stos
stos
lods
lea
lcall
add
add
add
add
add
add
add
add
add
add
add
add
mov
lahf
add
mov
mov
leave
lret
rcl
cld
fcomp
std
xlat
fdivr
fcom
aam
rcl
sar
int3
int
aad
dec
ror
inc
ret
mov
mov
lods
iret
movsl
movsb
movsb
xchg
mov
and
add
push
add
add
add
add
add
add
add
add
lods
lods
lods
add
scas
sbb
mov
jnp
mov
mov
dec
lret
iret
rcl
aad
fcom
call
fdivr
aad
aam
into
int3
int
into
int3
into
call
aad
dec
into
into
inc
rol
mov
mov
scas
std
cmpsb
cmpsl
cmpsl
ljmp
pop
or
inc
add
add
add
add
add
pop
add
add
add
add
add
add
pop
pop
pop
add
dec
add
push
add
push
or
inc
or
sbb
push
add
add
or
or
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
inc
enter
int3
int
rcl
sar
fcom
call
xlat
xlat
call
aam
dec
into
int
lret
dec
int
inc
rol
mov
mov
ljmp
mov
cltd
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
push
imul
pop
pop
pop
fs
sbb
das
or
push
sbb
cmp
ss
cmp
cmp
and
and
push
push
pop
pop
add
add
add
add
fs
mov
pop
mov
mov
mov
mov
mov
rol
ret
ret
enter
rcl
call
call
aad
dec
iret
sar
enter
mov
inc
ret
ret
mov
mov
ljmp
mov
pushf
xchg
xchg
xchg
lcall
addl
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
push
add
jo
jge
jle
jge
jle
jno
jo
bound
mov
cmp
inc
inc
mov
outsb
jo
nop
bound
pusha
inc
inc
inc
xor
add
add
add
add
movsb
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
leave
leave
dec
lret
leave
dec
lret
leave
dec
leave
leave
inc
ret
ret
mov
mov
ljmp
mov
fwait
call
xchg
xchg
xchg
xchg
xchg
cltd
fwait
fwait
in
addb
push
or
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsb
outsb
outsb
add
pop
or
jnp
xchg
mov
incb
jp
idivb
jp
outsb
jo
out
push
push
ret
jle
js
jns
arpl
inc
inc
inc
cmp
sbb
sbb
adc
or
stos
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsl
cmpsl
test
popf
sahf
sahf
call
xchg
decl
xchg
xchg
mov
mov
xchg
mov
jns
jns
xor
das
das
add
add
add
add
add
add
add
add
add
add
mov
pop
push
test
lahf
in
mov
incl
mov
std
mov
jle
jb
jno
je
jae
jge
jg
addb
xchg
addr16
cmp
ss
and
cmp
movsl
movsb
movsb
shrb
stos
stos
sti
lods
lods
lods
stos
lods
lods
test
mov
cltd
xchg
xchg
xchg
decl
jge
js
jp
jnp
jp
mov
cwtl
mov
mov
sti
mov
mov
mov
mov
mov
scas
scas
stos
xchg
push
adc
add
or
add
add
add
add
add
add
push
pop
adc
movsb
test
mov
mov
xchg
xchg
incl
test
std
xchg
xchg
xchg
std
cwtl
xchg
cwtl
stc
xchg
xchg
xchg
in
mov
or
lea
mov
pop
pop
push
push
push
or
dec
insl
insb
imul
test
fwait
cltd
fistps
fwait
fwait
stc
xchg
std
mov
xchg
mov
mov
mov
fwait
jmp
lods
lods
mov
mov
mov
mov
mov
std
mov
mov
movsb
mov
jnp
lods
cmpsl
lods
add
pop
adc
test
mov
incl
test
decb
xchg
xchg
sahf
popf
pushf
std
movsl
movsl
mov
out
xchg
xchg
xchg
in
xchg
nop
xchg
in
test
push
jne
femms
dec
add
or
inc
daa
es
dec
dec
dec
outsw
jb
test
xchg
xchg
rclb
xchg
xchg
std
nop
xchg
decb
xchg
xchg
lcall
movsl
cmpsb
ljmp
scas
pushl
lahf
scas
mov
xchg
mov
mov
ljmp
sahf
adc
add
add
pop
pop
adc
mov
jmp
pushf
xchg
pushf
decl
mov
xchg
nop
call
xchg
xchg
sahf
popf
popf
movsb
mov
test
notl
jl
movsl
push
push
push
outsl
dec
dec
dec
pop
pusha
popa
jne
jae
mov
lahf
addl
int
xchg
xchg
in
nop
xchg
testl
mov
jmp
mov
mov
pop
mov
xor
jbe
mov
movsl
mov
mov
mov
lods
stos
stos
mov
movsb
add
mov
add
pop
adc
mov
ljmp
pushf
decl
call
xchg
xchg
call
xchg
xchg
fwait
cltd
fwait
lcall
mov
mov
fwait
out
xchg
xchg
xchg
xchg
les
cltd
fwait
in
xchg
xchg
out
lea
nop
stc
xchg
xchg
std
xchg
jb
lcall
jmp
inc
jge
mov
jnp
mov
jae
mov
outsb
ljmp
adc
lods
or
stos
or
pushl
mov
mov
pushf
movsb
movsb
mov
add
mov
add
pusha
adc
mov
ljmp
popf
call
xchg
xchg
lcall
pushf
popf
lcall
pushf
popf
lcall
xchg
xchg
decl
xchg
nop
call
xchg
cltd
cld
cltd
cltd
sahf
stc
lahf
fwait
sahf
stc
mov
mov
xchg
imul
xchg
dec
jp
fwait
je,pt
lcall
sahf
sbb
adc
arpl
test
ljmpw
ljmp
adc
mov
imul
push
insl
mov
cltd
scas
mov
scas
lods
scas
mov
movsb
movsl
add
add
add
add
add
pop
pop
adc
mov
ljmp
popf
call
sahf
lcall
movsl
movsl
jmp
mov
decl
mov
decl
ja
fwait
jb
lcall
call
sub
popa
decl
or
xchg
add
pop
lcall
add
ljmp
pushl
pop
outsl
pushl
sbb
je
mov
pop
jne
mov
xchg
lods
mov
scas
scas
mov
lahf
mov
movsb
add
pop
pop
adc
scas
mov
shll
pushf
popf
sahf
jmp
cmpsl
test
test
cmpsb
ljmp
cmpsl
test
lcall
decl
inc
outsl
decl
sub
mov
pop
incl
add
push
decl
add
popl
push
call
add
lahf
add
or
mov
outsb
pushl
sub
mov
sub
inc
sub
inc
sub
cmp
enter
leave
lea
cld
scas
mov
lret
mov
add
add
add
add
stos
movsb
test
adc
test
ljmp
popf
jmp
test
ljmp
lods
stos
pushl
scas
scas
jmp
mov
mov
incl
or
incl
add
push
incl
push
decl
add
add
xchg
add
fwait
add
lahf
add
mov
adc
mov
ss
cmp
dec
cmp
call
cmp
mov
roll
dec
mov
std
mov
mov
movsl
mov
mov
add
dec
dec
adc
cmpsl
ljmp
popf
jmp
scas
lods
pushl
mov
pushl
mov
ljmp
js
decl
or
mov
pop
decl
or
xchg
push
incl
add
lea
push
decl
add
sahf
add
mov
add
stos
add
sbb
xchg
lret
dec
inc
mov
rolb
call
inc
call
dec
xchg
call
dec
xchg
fisttpl
fmull
fsts
call
test
mov
mov
movsl
movsb
movsl
arpl
mov
add
add
add
lcall
adc
jnp
movsb
sahf
mov
jmp
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
outsl
decl
sbb
nop
pop
popa
decl
adc
or
lea
push
call
add
sahf
add
mov
add
test
popa
pushl
and
call
push
cltd
fcoms
fistl
fistl
ficoms
ficoms
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
test
test
mov
mov
add
add
add
cwtl
xchg
cwtl
add
adc
jns
mov
mov
sahf
ljmp
mov
pushl
mov
mov
pushl
xchg
mov
call
and
push
call
or
nop
add
add
cltd
add
mov
add
stos
add
mov
fs
mov
xor
fisubl
jmp
arpl
in
test
in
cmpsl
jmp
addr16
jmp
push
stos
fildl
mov
test
mov
mov
add
add
add
xchg
xchg
xchg
add
inc
aas
adc
jae
cltd
xchg
lcall
fwait
popf
ljmp
mov
pushl
mov
mov
mov
mov
cmp
sub
fwait
xor
fwait
jo,pn
cwtl
sub
cwtl
sbb
pop
call
add
mov
add
lods
add
mov
pushw
call
inc
xchg
fsubrl
jmp
outsl
lods
jmp
jo
jmp
jo
call
jne
in
jne
out
je
out
jne
in
jae
jmp
mov
mov
cmpsl
test
mov
lahf
mov
add
add
add
jg
ds
adc
outsl
js
mov
lcall
mov
pushl
mov
mov
inc
rol
mov
cmpsl
scas
lcall
jo
sahf
cmp
lahf
cmp
sahf
xor
fwait
push
call
call
add
add
test
pusha
pushl
add
add
sbb
fsts
jmp
jbe
jmp
jge
in
cmpl
push
xchg
push
test
jmp
mov
inc
mov
test
daa
mov
sahf
mov
add
add
aaa
cmp
pop
pop
pop
jne
jle
out
xchg
xchg
xchg
xchg
pushl
mov
mov
mov
ret
ret
mov
lcall
cmp
movsl
inc
jl
movsb
inc
jge
movsl
cmp
lcall
lcall
add
add
lods
add
add
add
ret
call
es
call
mov
push
mov
push
pop
push
nop
xchg
push
xchg
push
pop
out
mov
inc
ret
lods
stos
mov
sahf
popf
xor
popf
add
add
add
inc
aas
add
xor
push
inc
dec
inc
jb
pop
dec
in
push
call
mov
mov
mov
sar
ret
ret
inc
mov
mov
jle
lcall
dec
jg
stos
dec
test
movsb
xor
lcall
add
mov
add
lods
add
mov
arpl
mov
add
movl
mov
out
mov
out
xchg
push
cltd
enter
lcall
negb
cld
sahf
int
sti
popf
int3
cli
cwtl
lret
xchg
ret
fistpll
enter
mov
lahf
mov
nop
add
add
add
cs
cmp
dec
jecxz
pusha
popa
call
mov
mov
mov
sar
ret
mov
inc
enter
mov
mov
ljmp
push
xchg
movsl
sub
cltd
push
pop
lcall
add
lods
add
mov
popa
mov
add
movl
jbe
filds
out
mov
push
movsb
int3
push
cmpsb
into
clc
test
sti
test
sti
cmpsl
sar
cld
cmpsl
iret
cld
stos
sar
std
stos
sar
cmpsl
iret
push
sahf
mov
dec
enter
mov
into
mov
xchg
xchg
add
lcall
xor
xor
or
bound
push
xlat
je
jo
mov
rol
ret
mov
ret
leave
inc
rol
mov
cmpsb
jmp
mov
lods
dec
xchg
mov
add
mov
add
mov
fs
mov
add
into
add
add
ficoms
jl
in
pop
test
negl
aam
cld
mov
sti
mov
cli
mov
mov
cld
mov
cld
mov
cld
mov
std
mov
mov
push
movsb
mov
dec
leave
int3
mov
mov
mov
xchg
xchg
or
add
add
xor
add
dec
dec
ss
jo
cltd
lcall
fcom
jmp
fcomp
test
int3
into
dec
leave
leave
dec
lret
leave
leave
lret
leave
mov
scas
jmp
push
mov
stos
cmp
jmp
add
stos
add
mov
arpl
mov
add
rolb
outsl
call
add
add
call
jno
cli
lods
sar
mov
mov
mov
cld
mov
xlat
mov
fcos
clc
mov
jmp
mov
call
leave
int3
mov
lahf
mov
or
add
add
xor
add
add
add
or
enter
jecxz
call
out
test
in
leave
fstp
fsubp
fcmovnu
fdiv
fdivr
fcom
std
int
iret
mov
push
test
test
jno
mov
add
mov
popa
mov
add
lret
call
add
fildl
ja
jecxz
ja
out
das
xchg
push
mov
sti
mov
loope
inc
inc
loope
std
inc
loopne
std
enter
dec
std
dec
sti
mov
leave
call
lret
sar
mov
mov
xchg
adc
add
add
incl
std
incl
incl
hlt
div
or
out
in
pop
jmp
out
sub
in
in
dec
ljmp
xchg
out
out
in
out
fcmovu
fucomi
ret
mov
xchg
cmpsl
cmp
movsl
adc
pop
ljmp
add
mov
add
int
outsl
fadds
je
loopne
ja
call
inc
popf
cld
mov
jecxz
cld
int3
loop
dec
in
dec
in
std
into
in
std
int
std
int3
loope
shl
std
shl
shl
shl
cli
out
mov
xlat
inc
cmpsl
cmpsb
mov
xchg
cwtl
add
add
add
std
add
incb
idiv
clc
add
hlt
lock
repz
out
icebp
lock
in
icebp
icebp
cmp
in
out
pop
fnstsw
loop
les
sti
sahf
and
pop
jmp
add
mov
data16
mov
add
add
fiaddl
jbe
in
jnp
in
movd
negl
cld
mov
std
shl
shl
std
shr
call
out
call
jecxz
std
aam
xlat
out
std
jmp
std
fucomi
fucomi
dec
loop
repz
aad
jecxz
lret
lret
lret
repz
xchg
xchg
and
xchg
cwtl
add
std
cld
add
std
testl
repz
or
shlb
sarb
lcall
ljmp
add
mov
add
lret
add
roll
jb
fldl
ja
out
js
out
sbb
clc
jbe
sti
ret
loopne
xlat
call
fldl2e
fucomi
std
fucompp
fucomp
fucomp
fsubr
std
fucomip
std
loopne
fucomip
std
aam
push
ret
call
rcl
clc
lods
stos
stos
lods
xchg
xchg
xchg
outsb
jo
add
add
add
loop
add
mov
xchg
lods
jl
repnz
and
mov
add
mov
popa
mov
add
into
add
aam
jno
loopne
je
ljmp
cli
mov
shr
fcomip
std
fsubr
fldl2t
std
fucomi
fsub
cld
aad
cld
shl
sti
shl
cli
iret
loop
stc
int
push
int3
fdivrp
test
in
mov
jmp
rcr
fcom
sti
mov
mov
fwait
lcall
fwait
cltd
lcall
add
add
xlat
add
mov
lahf
jmp
sub
add
test
add
mov
add
rolb
jo
fadds
je
loopne
js
ljmp
cli
xchg
cli
leave
cld
int3
loope
sti
fdivrp
clc
rcl
idivl
sar
repnz
into
in
mov
lret
call
ret
jmp
ljmp
in
mov
mov
xchg
add
add
add
int3
add
rol
mov
cmpsl
loopne
xor
jmp
add
mov
addr16
mov
add
dec
or
rorb
jne
ficoml
ja
loope
cmp
dec
cwtl
call
mov
ljmp
std
loop
ret
cld
loopne
ret
mov
neg
mov
enter
int3
in
enter
rcl
shl
fcmovnb
out
loop
jmp
call
popf
jmp
lret
lret
push
lods
lods
lods
adc
cmpsb
cmpsl
cmpsb
add
ret
mov
lods
aam
dec
cmp
sbb
test
imul
and
mov
ja
mov
inc
test
ret
stc
lret
test
mov
out
mov
mov
enter
lret
rcl
int
aam
shlb
fcom
aad
fcmovnu
fnstenv
loopne
gs
jecxz
out
call
xor
div
cmc
and
lock
sbb
fstp
or
mov
int
mov
add
mov
sarb
mov
test
lock
xchg
ljmp
mov
sarb
stos
mov
les
rcrb
lret
jp
int3
shlb
rcl
push
rcl
rorl
inc
rcr
aad
aam
fldenv
fistpl
fcoml
fsubp
loop
fucomip
jecxz
out
jmp
add
cld
testb
cld
add
incl
std
std
add
mov
shrl
mov
mov
mov
scas
xchg
mov
mov
mov
mov
ret
push
rol
inc
ret
xor
into
leave
daa
int
shlb
rcl
rcrl
iret
rclb
iret
aad
or
push
aam
xlat
add
add
loopne
add
in
add
in
jmp
lret
add
incb
mov
mov
add
ret
les
rol
sub
mov
mov
push
rol
or
enter
movl
leave
aam
add
fcom
add
xlat
aad
aad
add
aad
add
fabs
add
aad
add
loop
add
add
out
add
repnz
add
std
incl
std
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarl
les
ret
mov
mov
mov
ja
stos
test
and
add
add
add
add
add
add
add
add
mov
push
rol
mov
rcl
shr
aam
aad
aam
aam
iret
ror
cli
int3
lret
int
lret
lret
mov
mov
iret
stos
stos
stos
fwait
xchg
xchg
xchg
dec
ds
add
sbb
add
adc
add
push
add
add
addb
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
leave
cld
iret
iret
into
xlat
xlat
call
xlat
aad
iret
iret
iret
dec
int
dec
lret
lret
sarb
lods
stos
stos
icebp
xchg
cltd
xchg
mov
or
or
add
add
add
add
add
add
add
add
add
add
jae
jne
je
jne
gs
dec
dec
dec
cmp
sub
sub
aaa
aaa
xor
dec
sub
inc
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
ret
dec
lret
rcl
sar
rcl
aam
int3
int3
lret
rol
pushl
test
popf
cwtl
xchg
xchg
jmp
jo
xchg
pop
pop
adc
xor
add
add
add
add
addb
test
jns
imul
movsb
push
push
push
stos
push
outsb
outsb
push
pop
pop
cmp
cmp
pop
outsl
jo
adc
mov
fstpt
mov
sar
mov
mov
mov
cmpsl
test
lcall
xchg
xchg
xchg
xchg
cltd
lcall
dec
dec
dec
dec
adc
adc
add
add
add
add
add
pop
cltd
cltd
cltd
add
popf
xchg
cltd
fcoml
addl
jmp
jns
sarb
jns
jnp
jnp
jb
jae
push
push
push
cmp
jae
popf
sahf
popf
mov
lods
scas
rep
lods
lods
sti
scas
scas
scas
std
test
test
call
xchg
call
mov
scas
jmp
lods
lods
leave
movsl
movsl
movsl
cltd
je
jae
adc
adc
add
add
add
add
outsb
insl
outsl
pop
nop
mov
loop
cltd
pushf
incl
mov
sti
xchg
xchg
xchg
lock
xchg
nop
fimuls
mov
jp
pop
pop
inc
inc
inc
inc
dec
outsl
outsb
outsl
orl
cwtl
repnz
xchg
xchg
std
mov
call
pushf
sahf
ljmp
mov
mov
mov
stc
mov
mov
movsl
mov
addl
add
add
pusha
pop
pop
or
lods
mov
movsl
lahf
mov
decl
nop
lcall
lahf
sahf
sti
sahf
mov
cwtl
call
push
push
push
jo
push
pop
outsl
imul
jge
subb
xchg
lock
mov
lcall
mov
pushl
pop
mov
jge
mov
scas
stos
insl
test
add
add
add
add
pop
or
mov
in
mov
xchg
call
xchg
xchg
lcall
cltd
cltd
cltd
popf
lcall
xchg
xchg
jmp
xchg
xchg
aam
mov
xchg
jbe
notb
jg
popf
dec
jp
mov
xor
jae
mov
insl
ljmp
sbb
mov
lods
mov
mov
mov
mov
add
add
add
add
pop
or
mov
in
mov
xchg
lcall
mov
mov
decl
addl
cld
cwtl
pop
cmp
dec
jns
xchg
cmp
xchg
sub
xchg
sbb
call
punpcklwd
test
ljmp
pushl
sbb
mov
and
rcrb
mov
lods
scas
xchg
lahf
sahf
lahf
adc
add
add
pusha
pusha
popa
or
stos
mov
stos
mov
mov
ljmp
cmpsl
test
decl
imul
mov
pop
incl
or
mov
decl
add
fwait
add
or
mov
je
mov
sub
jle
enter
leave
xor
inc
test
mov
test
test
pop
popa
pop
or
movsb
test
cmpsl
mov
cmpsl
ljmp
mov
pushl
mov
decl
addps
xchg
push
incl
add
nop
add
xchg
add
mov
add
mov
insb
inc
cmp
dec
inc
call
inc
nop
call
inc
xchg
call
arpl
stc
mov
mov
movsb
movsb
movsb
daa
std
add
add
add
pusha
or
popf
mov
ljmp
mov
mov
mov
ljmp
jge
mov
arpl
xchg
sbb
mov
pop
decl
push
call
add
test
pop
ljmp
and
rorl
call
push
pushf
fcompl
fistps
jmp
pop
mov
jmp
outsb
cmpsl
dec
cmpsb
mov
ret
cmpsl
xor
add
add
dec
pop
jle
jl
fwait
xchg
cltd
jecxz
mov
mov
mov
mov
mov
mov
mov
sahf
fs
xchg
sub
insl
call
cvtdq2ps
xchg
add
popf
add
add
scas
add
or
int3
xor
jecxz
test
ljmp
out
jae
jmp
test
mov
inc
jg
addb
add
dec
dec
dec
pop
outsl
outsb
insb
bound
cwtl
cwtl
pushl
mov
mov
mov
je
lcall
jbe
sahf
sub
call
add
movsb
add
stos
add
mov
gs
or
xlat
inc
xchg
jmp
jns
jmp
test
push
mov
out
xchg
mov
cmpsb
test
fwait
lcall
sub
sub
push
push
dec
pop
imul
mov
mov
mov
mov
inc
mov
pushf
jmp
inc
cmp
sub
fwait
pop
pop
jmp
add
mov
arpl
mov
push
jbe
loopne
mov
push
xchg
push
cltd
push
xchg
stc
lcall
negl
inc
mov
lods
popa
mov
add
add
xor
pop
pop
pop
fisttpl
mov
mov
rol
ret
pushl
pop
xchg
lods
dec
cmp
and
add
pusha
pushl
add
lret
fldenv
cmp
mulb
into
clc
stos
iret
cld
test
iret
cld
lods
sar
cli
cmpsb
int
out
inc
mov
stos
jne
popf
popf
or
add
add
dec
push
dec
aaa
jae
je
stos
test
into
out
int
cmc
lret
sti
lret
std
enter
mov
pusha
mov
stos
inc
jg
mov
add
mov
gs
add
into
add
fildl
je
call
xchg
mov
mov
std
mov
xlat
std
mov
fcos
std
mov
ljmp
repz
scas
scas
mov
add
add
add
add
pop
or
aam
dec
loopne
loope
loopne
fcmovnu
fadd
fcmovnu
aam
xlat
out
mov
data16
test
je
movsl
pop
pop
pushl
add
lret
call
add
or
dec
mov
std
loopne
inc
loopne
inc
loope
std
leave
loopne
dec
fdivrp
dec
sti
lock
lret
divb
pushf
sahf
sbb
add
add
std
add
incb
jmp
or
in
in
sbb
in
in
xor
loopne
loop
lds
mov
mov
add
mov
inc
add
int
outsb
fildl
je
jmp
outsb
mov
sti
ret
cld
shl
call
out
shl
shl
std
xlat
out
std
xlat
out
cld
shl
push
xlat
fcmove
sar
mov
mov
add
std
incb
incl
cld
incb
aad
aam
mov
pop
xchg
lahf
or
pusha
pushl
add
rolb
jo
filds
jne
out
pop
mov
cli
mov
shl
fsubr
std
fucompp
fldl2t
cld
xlat
call
cld
xlat
out
std
aam
push
xlat
jmp
rcl
sti
mov
sahf
popf
das
add
add
int3
into
into
or
arpl
ljmp
add
enter
roll
jno
loope
jns
out
das
nop
push
fwait
leave
sti
lret
loop
cli
leave
fdivrp
test
bnd
bnd
out
sar
in
aad
out
vpsadbw
shl
in
fucomp
enter
test
test
std
add
add
add
aam
push
mov
jb
push
addr16
mov
imul
pop
jae
int3
and
xlat
sub
fwait
clc
loop
mov
out
jecxz
lret
mov
loope
mov
int3
leave
faddp
sarb
in
ficompl
out
call
rorl
mov
add
stos
stos
stos
add
xchg
mov
ljmp
fidivrl
jg
rol
lods
mov
lahf
mov
iret
mov
nop
rol
enter
int3
insl
aad
int
rcl
rorl
cmp
loopne
das
in
fisubs
in
lock
in
in
or
std
add
add
add
incl
mov
mov
outsb
scas
mov
lods
data16
mov
mov
mov
xor
leave
enter
aam
pop
sarb
or
or
int3
int
lods
stos
stos
add
std
add
incl
lcall
pinsrw
or
int3
into
int3
add
std
std
add
add
add
add
add
lock
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
fwait
fwait
lcall
rol
mov
xchg
enter
mov
mov
scas
mov
insb
stos
stos
stos
xor
jae
add
add
add
add
add
add
add
add
add
add
add
add
stos
stos
stos
add
mov
jmp
aam
std
rcl
sar
iret
into
iret
std
stc
mov
test
roll
sbb
add
add
add
add
add
add
add
add
jae
jb
push
inc
dec
das
das
das
cs
inc
inc
inc
and
add
add
mov
mov
cmpl
dec
into
into
call
aam
dec
into
into
inc
enter
mov
lods
lcall
mov
push
add
add
add
add
jae
je
xchg
adc
outsb
outsl
ret
popa
mov
push
insl
jb
pusha
bound
pusha
pop
pop
sbb
mov
in
mov
mov
mov
lods
stos
lcall
xchg
xchg
lcall
cwtl
cltd
lds
jno
and
add
pop
add
add
jae
jae
popf
xchg
pushf
mov
xchg
xchg
xchg
test
addl
push
dec
dec
inc
mov
popf
into
mov
lahf
lahf
sti
xchg
xchg
xchg
decb
lcall
lods
cld
mov
mov
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorl
cmpsl
stos
mov
mov
mov
xchg
cld
popf
pushf
sahf
cmc
lcall
mov
push
push
imul
jle
mov
notl
mov
pushl
push
mov
test
call
stos
stos
stos
add
add
add
mov
scas
cmpsb
lods
cld
xchg
xchg
xchg
lcall
fwait
fwait
call
cltd
cltd
std
xchg
xchg
xchg
out
xchg
mov
loope
je
out
xchg
fs
push
jp
fwait
inc
jne
movsl
cmp
lods
sub
jo
mov
insl
pushl
sahf
lods
lock
mov
imul
into
add
xchg
pop
lods
movsb
stos
test
sahf
pushf
popf
jmp
movsl
movsl
call
imul
popl
decb
call
or
mov
push
outsb
pushl
and
jp
les
xchg
mov
mov
subl
je
push
movsb
fwait
mov
cld
test
scas
scas
pushl
xchg
decl
or
xchg
push
decl
add
mov
adc
shlb
int3
ds
iret
inc
mov
aam
call
dec
xchg
dec
cwtl
mov
mov
mov
movsl
mov
add
push
xchg
xchg
test
mov
lods
pushl
mov
ljmp
outsb
call
sbb
mov
push
call
add
lods
add
mov
push
xchg
fistpl
loopne
mov
jmp
cmpsl
call
pushf
mov
mov
mov
cmpsb
cmpsb
cmpsb
pop
add
add
arpl
adc
popf
fwait
lcall
mov
mov
lcall
jo
lcall
lcall
add
mov
xor
call
jp
out
jle
out
jg
fistpl
mov
mov
add
add
adc
push
cmp
mov
mov
ret
sar
mov
jmp
inc
jge
mov
add
pop
pushl
outsb
fmull
out
mov
push
xchg
cwtl
clc
xchg
enter
inc
mov
movsl
sub
aas
aas
inc
adc
push
xchg
mov
mov
inc
vcmpsd
ljmp
sbb
cmpsb
add
mov
arpl
ret
call
adc
in
insl
scas
push
cmpsl
iret
clc
lods
iret
cli
scas
sar
std
scas
sar
cld
scas
iret
in
mov
inc
mov
movsb
ds
std
incb
xor
xor
mov
mov
aad
aam
aam
aam
rcl
shr
lret
cli
mov
mov
jmp
arpl
ret
call
add
out
xchg
testl
fdivr
cld
ret
std
ret
cld
ret
icebp
mov
shl
test
dec
addl
lods
add
jmp
or
call
out
outsb
fcomp
fldenv
mov
add
mov
add
faddl
jne
lock
xchg
cld
mov
dec
in
call
in
call
in
aad
shl
push
fdivr
aam
int
lods
scas
scas
popa
jg
jg
incb
incl
lret
lret
shrb
lahf
sbb
lods
add
mov
add
jecxz
jp
cmc
push
cmpsb
std
loopne
std
jmp
aad
cld
aad
sti
aam
push
xlat
fcmovne
shl
mov
mov
xchg
xchg
xchg
pop
ret
adc
mov
add
push
iret
or
fstpl
cmp
lock
aam
ljmp
jmp
in
rcl
jmp
fcmovnu
scas
push
lcall
add
rol
mov
stos
xchg
inc
and
push
mov
ret
int3
int3
jbe
mov
mov
int3
adc
int
fxch
iret
pop
aad
jecxz
loope
call
out
out
sbb
mov
mov
cmp
movsb
scas
arpl
lods
mov
les
les
rol
sbb
bswap
into
int3
or
aad
push
incl
jg
addb
std
std
add
add
add
mov
incb
std
incl
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
xor
fwait
loope
int
mov
xchg
and
sbb
mov
xchg
cmp
lds
adc
lock
test
lret
ja
push
push
call
mov
fbstp
cmp
xor
push
add
loope
push
xchg
test
lret
sti
jge
loopne
sbb
rorl
incb
outsl
pop
icebp
mov
sarl
je
cmp
mov
dec
cltd
sbb
ja
mov
xchg
lahf
or
sbb
icebp
pusha
adc
inc
mov
pop
lock
add
in
mov
push
call
or
and
pop
mov
mov
cmpsl
ds
imul
add
mov
push
montmul
cmpsb
xchg
add
fiaddl
mov
sti
dec
loop
lcall
jg
pop
repnz
jns,pt
jo
movsl
cmp
xchg
xchg
les
pop
jns
mov
pop
fwait
loope
int
shrl
test
lods
xchg
adc
enter
sbb
aam
fsubrs
idiv
xchg
daa
push
lea
adc
out
pop
xor
dec
repnz
push
call
inc
mov
add
inc
mov
lods
inc
xchg
mov
mov
ficomps
adc
call
xchg
arpl
popf
pushf
test
mov
lods
and
cmp
pop
add
lret
push
in
pop
push
push
call
adc
outsb
add
sub
inc
fidivrl
stos
inc
or
pop
popf
or
cmp
out
lock
jle
adc
xor
arpl
mov
xor
push
fnstenv
xchg
pop
test
in
sbb
aad
das
sub
lcall
and
ror
aas
add
cmpsl
ds
pop
hlt
push
inc
lds
popa
clc
jns
cmpsl
mov
rol
pop
add
sahf
jl
jecxz
pop
popf
and
cwtl
stos
out
inc
mov
frstor
mov
decb
mov
push
popa
sub
pop
mov
mov
int
ljmp
es
xor
insb
negb
mov
dec
dec
out
ss
into
data16
push
in
mov
fidivl
or
cmpb
out
pushf
pop
sahf
int
insl
add
out
and
and
inc
fidivl
test
clc
les
pop
stos
in
push
pop
int3
in
cmp
fwait
push
mov
mov
adc
inc
xlat
cmc
xor
mov
pop
testb
lods
mov
jge
lcall
xor
sub
pop
push
inc
jp
push
lods
fsubrs
int
and
mov
out
lods
inc
push
or
popa
movsl
pop
xor
mov
call
call
dec
outsl
push
xor
popf
push
lea
mov
stos
inc
adc
inc
test
pop
xchg
dec
out
jl
sahf
xor
into
or
mov
popl
fdivs
stc
nop
loop
pop
test
sbb
pop
push
ss
cmp
jmp
mov
or
xlat
outsb
adc
daa
xorb
mov
inc
roll
int3
arpl
fdivs
enter
cmpl
or
scas
in
es
add
test
stc
ret
jbe
pop
test
adcb
lret
cld
aaa
sahf
xor
dec
mov
mov
ret
repz
bound
testb
lods
mov
jge
cwtl
aad
lret
push
mov
push
jmp
aas
jns
pop
lods
in
mov
mov
jg
jno
in
push
sbb
test
jbe
andl
add
push
cmp
sub
adc
arpl
je
inc
test
je
jns
or
cmpsl
test
inc
ficoms
je
mov
je
inc
test
jne
jecxz
or
push
movsl
scas
add
inc
jle
cmp
js
fildll
cwtl
das
cmpsl
sarl
dec
jmp
jno
pop
push
mov
xchg
leave
sub
movsb
cmc
and
popl
fsubrs
push
push
hlt
mov
stc
nop
inc
push
es
inc
ficoms
mov
add
lods
stos
inc
fiaddl
mov
xor
leave
pusha
sub
inc
fistl
cli
pop
imulb
add
mov
sub
mov
jnp
hlt
call
sbb
popa
clc
xor
xchg
sub
cwtl
sbb
aas
or
hlt
mov
mov
loope
jno
sbb
or
clc
jmp
aaa
into
pop
adc
inc
lret
adc
add
dec
loopne
sbb
xchg
sti
fiaddl
sahf
or
test
jge
mov
mov
fistpl
mov
cmp
shrb
fimull
ja
jmp
outsl
push
or
pop
jne
in
push
mov
xchg
sub
jb
adc
ror
hlt
mov
inc
int
jbe
cli
xchg
pop
mov
ds
inc
cmp
jno
es
fdivl
push
out
jns
cld
xchg
insl
mov
nop
in
test
icebp
xor
jb
sub
rorb
hlt
int3
js
add
ret
pop
inc
shrl
rorb
jp
adc
mov
add
adc
aad
add
sarb
hlt
mov
add
jle
hlt
pop
hlt
sub
sti
xchg
adc
pop
hlt
and
movl
cmp
or
fnstenv
sbb
stos
push
jecxz
dec
adc
adc
jns
sub
je
out
mov
add
lea
adc
xchg
inc
out
or
or
fs
inc
sbb
push
add
mov
adc
jbe
push
sarl
aaa
repz
jae
and
jecxz
fisubrl
or
mov
sti
sbb
lcall
xchg
sub
mov
mov
push
xor
mov
shl
add
arpl
push
mov
lods
xchg
push
test
int
stos
fs
fsts
mov
test
mov
ja
jne
pop
test
scas
inc
lahf
push
hlt
mov
xchg
stos
inc
ret
mov
jg
fidivs
mov
aad
jno
out
sub
repnz
mov
fsubrs
pop
das
movb
andb
xchg
mov
push
out
in
mul
jnp
adc
sbb
shr
xchg
cwtl
mov
jg
ljmp
cmp
pushf
xor
out
jbe
jmp
loope
cmp
xchg
insb
add
mov
out
mov
pop
add
pusha
divl
ljmp
and
dec
loopne
sti
mov
sub
out
xchg
mulb
es
stos
inc
ss
mov
xchg
sbb
jbe
pop
or
je
add
xor
push
out
adc
fnstenv
adc
mov
add
cltd
xor
into
gs
adcb
adc
je
loopne
test
or
mov
jne
push
lods
pop
lods
jmp
loope
sub
cmp
push
call
nop
stos
out
fisttpl
mov
mov
loope
sbb
shrb
popf
xor
mov
lret
loope
stos
xor
bound
jle
mov
jns
stos
xor
lret
aas
mov
jp
and
xor
push
cli
cmpl
dec
fsubrp
xchg
outsl
adc
shlb
or
mov
fsubl
add
mov
cmp
mov
leave
xchg
xor
shlb
addr16
pop
jo
add
push
push
push
pop
push
xchg
push
pop
test
mov
mov
inc
pop
sub
push
movsl
pop
dec
test
mov
fnstenv
cli
pop
xor
lods
std
push
shrb
sbb
cmc
mov
outsl
mov
mov
mov
aam
test
mov
movsl
cmp
rcrb
sbb
movsb
mov
ja
xor
xor
push
inc
pop
mov
dec
fs
shr
fstpt
jo
cs
out
push
ret
dec
jnp
and
sbb
gs
mov
sbb
fimuls
push
data16
pop
hlt
test
mov
mov
jns
imul
lahf
sub
shlb
mov
push
pop
pop
repnz
ficompl
mov
mov
sbb
jno
mov
mov
jle
fisubrl
jb
push
mov
les
jl
sbb
push
mov
das
mov
rorb
push
lahf
into
lds
mov
add
stos
in
mov
mov
or
sbb
lcall
imul
scas
push
out
test
stos
pop
loopne
insl
loop
je
fiadds
inc
inc
lret
add
and
into
outsl
es
gs
sbb
xor
ret
cld
test
and
rorl
out
inc
pop
jb
inc
mov
jns
xchg
fsubl
xchg
dec
push
into
push
cmp
subb
jl
repnz
loopne
add
loope
rcrb
inc
fdivl
les
sub
lret
and
pop
lret
sarl
push
lods
adcb
cmpsl
in
mov
push
jbe
mov
stos
xlat
cmp
pop
mov
push
dec
scas
ss
and
ss
sbb
cs
mov
sub
mov
add
dec
and
sbb
jg
repnz
sbb
sub
pop
ja
xchg
mov
fisubl
hlt
sub
and
stos
aas
mov
in
ret
imul
mov
inc
pop
addr16
dec
dec
inc
loopne
cmp
cmp
push
inc
les
dec
into
pop
test
jne
dec
and
hlt
push
pop
scas
xchg
add
or
push
fisttpl
test
out
add
jecxz
cmpsb
cmc
rorb
jecxz
lret
out
pop
xor
xchg
arpl
push
mov
test
out
xchg
xor
xchg
mov
bound
adc
cmpsl
mov
shll
int3
test
or
dec
and
cwtl
hlt
xor
pop
movsl
test
in
insl
xchg
dec
pop
push
xor
daa
cmpb
xor
sbb
sub
jge
sbbb
mov
sbbb
int
aad
addr16
out
mov
mov
icebp
dec
lcall
mov
aad
mov
sbb
call
jno
into
xor
mov
jo
mov
add
loop
mov
pop
cmp
mov
ljmp
sarb
pop
loopne
inc
out
jno
lret
gs
sbb
rorb
inc
sbb
cmp
lahf
imul
push
xor
adc
sbb
movsl
jo
xor
and
push
daa
cmp
fs
in
in
mov
xchg
cs
mov
popa
mov
cmp
imul
call
in
xchg
inc
jns
jnp
sub
aaa
mov
arpl
outsl
subl
dec
cmp
xor
lahf
dec
sarl
sub
jge
fbstp
sahf
add
iret
sar
mov
add
add
scas
cwtl
lahf
gs
lret
mov
jae
loope
inc
xlat
testl
jg
lea
jnp
scas
cltd
xor
mov
pop
scas
mov
or
enter
sub
sub
fwait
dec
fs
cmp
orb
adc
cs
fistpll
pop
mov
pop
lock
push
jg
orb
fistpll
movsb
sahf
xor
adc
mov
mov
or
fsubrs
call
add
add
or
nop
daa
idivl
xor
mov
scas
inc
xor
int
mov
add
test
sbbb
mov
or
sub
mov
nop
lock
fdivr
mov
fs
pop
sbb
sti
js
sbb
mov
aaa
into
iret
push
out
call
outsb
add
movsl
lods
mov
int
xchg
sti
test
sbb
fstpl
ret
mov
lret
das
ljmp
jnp
xor
inc
xchg
xchg
hlt
or
cmp
sbb
ret
pop
dec
in
and
popa
loope
fwait
pop
mov
xchg
ficoml
outsb
sti
hlt
sbb
cltd
xchg
icebp
cmp
mov
pop
icebp
inc
mov
ret
or
vmread
dec
loope
xchg
xchg
sub
cltd
stc
mov
out
xchg
ds
xchg
sub
pop
icebp
mov
dec
mov
fsub
js
adc
push
or
xchg
jnp
clc
mov
lret
sbb
sub
cwtl
xor
xor
mov
loope
cmpl
jno
mov
clc
scas
aas
xchg
sub
enter
sti
pop
mov
xor
and
in
cmp
jmp
imul
mov
dec
and
inc
mov
lret
add
js
jecxz
call
cs
pop
out
les
pmulhw
loop
in
addl
mov
and
inc
dec
aas
subb
sbb
dec
loope
ss
jno
js
mov
int3
xchg
sub
mov
rclb
aad
adc
jne
cmp
mov
out
test
adc
clc
movsl
das
fcoml
sub
shl
dec
in
stc
dec
loopne
push
insb
add
push
pop
sahf
xor
mov
jb
and
push
mov
xor
jo
mov
testl
out
and
lret
aaa
fstpt
jmp
jns
jo
lods
lahf
jmp
and
mov
lods
inc
inc
xlat
adc
mov
xor
pop
mov
pusha
testl
jle
push
jl
mov
loopne
inc
fidivl
loopne
clc
adc
jg,pt
pop
fs
cwtl
jbe
and
shl
out
stos
inc
iret
adc
or
leave
pusha
pop
cs
fdivrs
jle
xchg
pop
divb
add
adc
add
mov
mov
fldcw
mull
pop
lods
dec
jle
dec
int3
shrl
push
lock
mov
push
fnstenv
sbb
mov
fsubrs
test
roll
testb
nop
adc
push
cmp
or
pop
and
out
into
ret
pop
aas
sarb
pop
shlb
ds
cs
je
test
push
mov
mov
mov
cmpsl
shrl
mov
rorl
icebp
mov
aas
lods
cmp
shufps
movsb
sbb
int
pop
lea
add
imul
mov
sub
mov
test
cmp
push
push
lds
inc
xlat
sti
ja
jp
adc
not
movl
adc
aad
mov
push
cmp
inc
int3
xchg
mov
in
fidivl
push
cmp
push
clc
pop
test
mov
aad
or
sti
dec
xchg
sub
stc
les
pop
xor
mov
xchg
push
lods
inc
cld
mov
fbstp
cmp
shll
std
xchg
xchg
pop
dec
fbstp
or
std
loope
sub
leave
or
loopne
push
mov
jp
rcrl
and
jbe
sbb
xor
andb
out
mov
sahf
jmp
outsl
push
or
mov
sbbb
test
shll
push
fnstenv
sbb
sbb
test
and
push
inc
movl
xchg
cli
xchg
mov
aam
scas
testb
pop
aaa
into
push
adcb
adc
outsl
lret
aam
or
in
lea
xchg
sub
bound
addr16
scas
inc
push
nop
inc
fldenv
push
call
mov
jo
cmc
loopne
lods
push
adc
xor
inc
lret
mov
jmp
imul
sahf
dec
mov
pop
mov
inc
fisttpl
or
bound
jmp
or
ret
loopne
and
push
loop
inc
or
jne
add
jle
cld
xchg
pop
cwtl
adcb
jnp
mov
es
mov
movsl
xor
lret
lds
push
call
jne
adcb
sahf
add
out
add
mov
aad
aad
jae
outsb
pop
repz
adc
daa
or
jnp
adc
loopne
xor
cmp
pop
popa
clc
bound
orb
test
inc
cli
xor
loope
mov
out
jmp
pusha
out
push
insl
add
or
jg
fwait
lret
ficompl
mov
jmp
test
pop
or
mov
leave
pop
notb
mov
stc
faddl
adcb
leave
test
xor
mov
mov
push
push
hlt
out
xchg
stc
nop
cltd
jge
mov
mov
scas
int
cmp
add
xor
out
xor
lods
pushl
xor
jno
notl
aaa
and
test
lea
fdivs
xlat
outsb
push
mov
cmc
mov
add
jle
stos
nop
xor
enter
inc
mov
lret
pop
popf
outsb
add
push
out
and
xor
inc
pop
stos
inc
xchg
arpl
mov
mov
ds
loopne
jge
adc
dec
add
xchg
ret
mov
int3
mov
ja
inc
fmuls
mov
mov
sub
jge
sbb
push
xor
xchg
adc
test
mov
lods
pop
rolb
ret
in
adc
loopne
cmp
lcall
and
push
sbb
inc
js
sub
pop
cmc
test
mov
dec
ret
ret
imul
dec
in
lcall
sub
test
fdivrl
hlt
mov
inc
adc
call
movl
xchg
mov
rsqrtps
xchg
sub
or
sbb
or
ss
lock
push
jmp
orb
hlt
push
jb
in
sub
cmp
mov
imul
xor
xchg
sbb
jle
xor
mov
jl
pop
mov
adc
fcoml
xor
int3
cmc
call
inc
sbb
mov
gs
fs
rcrl
mov
test
loopne
cmp
adc
pop
idivl
push
in
gs
outsb
test
je
fcmovnb
cmc
mov
lret
jle
mov
cmp
into
gs
iret
pop
test
in
sub
jge
cmpsl
add
mov
lock
cmpsb
cmp
mulb
mov
sbbl
aad
inc
mov
xor
mov
test
out
push
sbb
aas
aad
aas
pop
pusha
inc
dec
hlt
jno
int3
arpl
roll
cwtl
shl
enter
mov
push
mov
shlb
out
repnz
imul
mov
jne
xchg
cltd
das
dec
out
xorb
ret
jb
push
and
mulb
push
adc
dec
arpl
nop
mov
and
mov
add
add
aaa
cli
pop
loop
mov
call
fldl
lods
sub
xor
add
lds
mov
je
stos
cmc
jo
daa
int
and
dec
mov
xor
inc
je
sbbb
sbb
sbb
cmc
add
lds
inc
xlat
sbb
imul
cmp
xor
shlb
iret
xchg
lea
mov
fs
push
or
ds
sub
and
add
stos
inc
out
mov
mov
fdiv
fiadds
daa
fidivl
test
inc
mov
add
and
imul
pop
testl
jl
xchg
push
daa
pop
xchg
inc
mov
adc
repz
sub
ror
ret
jae
xchg
push
dec
jnp
and
pop
icebp
ja
ljmp
outsl
sbb
out
xor
in
jbe
adc
call
cmp
jmp
jle
es
test
push
stc
push
mov
pushw
and
xchg
cmp
xchg
sarb
aaa
fdiv
jno
xor
cmpsb
gs
cmpsb
sbb
inc
lret
xchg
mov
pop
pop
cs
sbb
dec
xorb
add
bound
bound
sub
aaa
bound
sub
test
loope
dec
and
icebp
mov
adc
js
in
scas
push
fiadds
lahf
clc
lock
xchg
das
cmp
sbb
cmc
into
inc
pop
sub
shll
xchg
mov
jns
repz
lods
sbb
xor
or
mov
or
rolb
loop
cs
dec
mov
adc
push
and
insb
xchg
imul
pop
bound
leave
and
sbb
insb
dec
loopne
and
pop
adc
lret
orb
adc
lahf
cmp
les
jmp
inc
pop
mov
sub
sbb
imul
pop
xchg
or
mov
push
out
jae
cmp
sti
test
pusha
xchg
in
out
out
imul
mov
test
repnz
and
sub
fmul
cmc
or
push
mov
bound
sbb
filds
adc
push
cmp
dec
aam
pusha
lds
fidivl
out
std
cmpsb
out
pop
ja
xor
jp
imulb
inc
push
pop
cmp
mov
dec
cmc
shrb
cmpsl
or
or
std
pop
add
sub
adc
pushf
imul
cmp
test
pop
mov
stos
in
leave
sti
add
and
mov
pop
sub
mov
mov
dec
mov
mov
scas
jmp
mov
inc
push
lahf
popa
dec
adcl
cli
insl
daa
xorb
test
xor
test
inc
xchg
gs
jbe
repz
and
repz
negl
xorl
out
cmp
daa
imul
rorl
or
stos
mov
pushf
cmp
push
jmp
push
ljmp
aaa
stos
roll
lock
leave
sarb
ret
mul
nop
jb
decl
fisttps
cltd
ja
add
bound
pusha
and
xor
xlat
dec
push
in
daa
enter
loope
aaa
ja
push
scas
js
dec
stos
sub
jge
jnp
cltd
dec
xchg
adc
sub
pop
cld
je
mov
jnp
cmpsb
testl
mov
addl
jne
dec
and
xchg
cmp
mov
stos
clc
shrb
dec
add
adc
mov
mov
jo
std
add
mov
or
cmp
aaa
xor
or
cmp
sahf
dec
inc
clc
pop
sub
pop
scas
cmp
sub
fs
nop
jb
sub
cli
outsl
rcl
adc
in
loop
and
sbb
sbb
push
jp
loopne
inc
mov
xchg
int3
cmp
or
pop
xchg
or
es
fs
fidivrl
mov
cmp
and
add
lods
mov
mov
mov
xor
aam
adc
std
or
pop
ja
scas
test
and
cld
lock
adc
dec
adc
xlat
mov
inc
xchg
cmp
sti
or
or
xchg
and
test
xlat
insl
jmp
fisubs
and
dec
jl
xorl
push
mov
or
shll
decl
enter
pop
xchg
inc
in
clc
pop
adc
inc
lea
in
push
xorl
orl
lahf
or
scas
mov
fucomip
adc
inc
jne
jg
fsts
jge
xchg
ret
mov
pop
cli
xchg
xchg
push
or
cmp
scas
xchg
icebp
xchg
mov
call
adc
and
push
adc
out
fwait
std
cmc
insb
movsb
xlat
negb
stos
rclb
jbe
int
lods
or
pushf
arpl
scas
mov
bound
xchg
lds
and
adc
vpcmpeqw
jg
jmp
xchg
mov
fldcw
push
cwtl
mov
mov
in
scas
out
dec
jae
cmp
mov
clc
shlb
xchg
test
pushl
icebp
das
inc
or
add
push
out
xor
fnstcw
in
mov
ss
or
pop
and
cmp
adcl
cmpb
dec
jnp
or
shrl
ljmp
mov
cmp
ds
in
ret
jg
and
xchg
pop
add
mov
sub
push
jle
inc
stos
mov
pop
lahf
in
jnp
mov
or
pop
es
outsb
cwtl
lods
sub
xchg
mov
cmp
ret
jge,pn
mov
icebp
cli
fiaddl
in
daa
inc
jae
loopne
push
js
push
xor
nop
into
call
sbbb
push
cli
rclb
inc
xchg
outsb
pop
int
and
push
add
pop
ljmp
dec
in
cmp
mov
dec
das
bound
inc
and
sub
addr16
push
lods
cli
fbld
popa
out
daa
mov
push
test
mov
jle
mov
aam
aaa
adc
mov
xor
pop
cli
out
jbe
inc
cmp
jg
repz
mov
dec
rol
push
xchg
rorb
and
call
jnp
lret
popl
cmp
xchg
cmpsl
mov
jl
pop
push
or
ljmp
jmp
mov
push
ljmp
xor
inc
and
adcl
insb
or
sahf
xchg
shlb
aas
test
and
xor
jmp
imul
test
call
out
cmpl
test
cmp
repnz
push
mov
ds
dec
cmp
fnsave
lahf
sbb
xchg
stos
mov
mov
dec
roll
pop
sbb
dec
incl
push
or
mov
xor
rcll
dec
stos
inc
inc
xor
push
addb
mov
ja
jae
jae
xchg
push
sbb
add
aad
lock
jb
data16
lret
loope
jmp
movl
in
inc
adc
mov
and
xor
in
mov
pop
cmpsb
push
bound
iret
clc
mov
repnz
cmp
add
repnz
shll
sub
insb
push
mov
test
jge
adc
cmp
stc
xchg
xchg
pop
ffreep
pop
loopne
adc
lods
pop
xchg
inc
inc
or
and
mov
jno
xor
and
lea
jb
icebp
mov
fdivs
sahf
jne
es
jb
das
mov
std
xor
cmpsl
das
mov
cs
push
std
xor
push
insb
div
push
sbb
sbb
addr16
cmp
stc
std
sbb
pop
or
imul
leave
adc
out
in
faddp
adc
pop
movsb
and
dec
cld
ss
ret
dec
mov
xchg
ja
adc
std
fdivl
cmp
lock
cmp
sbb
adc
movsb
sub
pop
cs
or
out
xor
js
sub
sahf
inc
pop
fdivrl
repz
ret
adc
cmp
cmp
shrb
push
dec
sbb
scas
and
add
xor
and
xchg
addr16
shl
pusha
fwait
shll
jne
icebp
test
inc
push
sbbb
int
icebp
lret
iret
sbb
paddusw
shl
jmp
scas
stc
lcall
sub
dec
mov
outsb
insl
mov
push
popf
add
push
in
leave
and
mov
inc
inc
shlb
pop
add
fldenv
cmp
or
out
push
xor
inc
test
dec
cmp
sub
outsl
lret
inc
repnz
iret
aam
popf
bound
mov
bound
adc
xchg
mov
add
xchg
jae
cwtl
push
dec
aas
cmp
sbb
sbbb
xchg
movsb
cld
jns
or
xor
dec
test
loope
or
push
sub
fucomp
std
scas
mov
mov
mov
push
xchg
add
lahf
mov
sti
adc
bound
or
inc
push
bound
nop
cs
or
shll
aad
jb
mov
dec
jp
cmp
sub
pop
xchg
pop
inc
shll
jno
pop
adc
fcomp
mov
sbb
dec
scas
sub
xor
jmp
ficoml
imul
sti
jns
inc
sub
lret
mov
movl
mov
cmp
cld
clc
rcr
sete
lret
add
stos
stos
or
mov
fcmovnu
mov
add
jae
dec
imul
inc
push
arpl
mov
add
dec
pop
cmpb
pop
inc
push
push
pop
sub
sub
gs
nop
ret
ds
out
pop
repnz
sbb
fcmovnu
xchg
testb
cmc
push
test
loopne
dec
cmpsb
ret
push
jb
into
dec
pop
cmc
cmp
mov
push
ffreep
in
xchg
mov
test
cld
lahf
clc
mov
jbe
cmpsb
mov
insl
sub
push
icebp
ret
lds
or
hlt
mov
rcrb
mov
in
bound
rclb
xor
dec
fisttps
pop
mov
mov
ljmp
adc
mov
fldenv
add
cwtl
xor
pop
nop
scas
mov
dec
or
mov
cld
loop
add
cmp
cwtl
jne
leave
rorb
or
dec
fucomp
in
stc
sub
push
cmovp
jp
ja
inc
push
xchg
xor
mov
repnz
shrb
jo
jns
cmp
loopne
inc
mov
negb
gs
jbe
cli
or
pop
cwtl
dec
lret
shll
fistpll
pop
gs
mov
xchg
cmc
mov
push
fst
add
mov
add
sub
stc
fbld
pop
push
lret
dec
adc
adc
repz
fs
mov
push
dec
popa
ja
add
in
jp
pop
out
ror
cmp
es
push
add
and
cmp
add
iret
out
idivl
add
xchg
inc
out
push
add
pushf
cmp
xchg
mov
lret
sahf
arpl
or
in
adc
cmc
movsb
lahf
into
or
push
test
clc
mov
or
cmp
popf
xor
mov
mov
aaa
clc
shr
rorl
fistps
mov
adc
pop
dec
testb
sub
mov
dec
xchg
mov
adc
bound
pop
imul
push
jno
es
mov
push
clc
mov
lea
lea
mov
dec
and
hlt
es
sub
lahf
mov
aam
and
clc
xor
and
fidivrs
ret
mov
xor
and
push
cmc
mov
push
xchg
add
jnp
adc
fwait
cmp
out
cmc
gs
mov
adc
repnz
cmpsb
add
lret
adc
aam
push
mov
adc
loopne
jmp
jb
lret
push
xchg
sbb
insb
test
sub
test
in
cli
mov
stos
dec
xchg
stos
jecxz
movsb
lcall
inc
popa
mov
mov
test
in
xchg
testb
sbb
inc
jne
or
ljmp
cmpsl
loope
jo
mov
xchg
fstps
dec
mov
sbb
or
cltd
pop
and
dec
jae
push
sbb
sbb
mov
js
mov
sarb
dec
xchg
inc
in
jo
faddp
mov
jo
sub
popa
jp
fld
push
pop
les
rcr
fsubrs
out
test
adc
push
lea
neg
imul
push
jle
stc
cli
insl
mov
scas
mov
sub
xor
push
nop
jo
inc
mov
out
push
and
mov
jmp
es
pop
and
fdivrs
add
or
sti
movsl
ret
pop
cmp
dec
jns
cld
pop
jecxz
or
cmp
mov
mov
add
std
and
cmp
lret
faddl
scas
insl
bound
enter
lcall
movsl
mov
les
mov
icebp
push
popl
add
xchg
cmpsb
push
or
or
cmp
xor
inc
pushf
imul
jns
js
mov
shlb
mov
out
imul
cmp
inc
fcompl
popf
push
dec
jle
or
pop
sahf
inc
arpl
sbb
mov
test
orb
or
jne
push
push
and
sbb
jge
loopne
aam
rcll
stc
push
outsl
and
dec
nop
xchg
mov
stos
mov
jg
je
fldl
mov
das
pop
repz
repnz
xchg
mov
xor
test
nop
mov
insb
icebp
adc
and
and
push
xlat
add
mov
aas
xor
push
push
push
jnp
pushf
xchg
leave
ret
sub
or
jmp
arpl
push
icebp
aaa
push
loop
jb
mov
insl
dec
cltd
push
pop
testb
or
mov
imull
cmp
add
pop
ja
xchg
adc
pushf
inc
or
pop
push
jnp
ret
je
iret
cmp
mov
leave
or
push
jae
jl
fcoms
in
jmp
std
sub
pop
mov
stos
push
push
and
mov
cmp
nop
and
push
jae
jns
cmpsb
adc
outsl
gs
enter
rorl
mov
inc
pop
lret
jp
fldenv
scas
fs
testl
lea
movsl
add
jb
enter
or
xor
sub
movsl
arpl
sbb
adc
cmp
repz
xchg
es
sbb
inc
sbb
dec
mov
sarl
jle
mov
mov
adc
ret
cmp
adc
mov
setge
mov
adc
lahf
int
mov
out
xchg
not
fld1
outsb
mov
push
push
pop
jp
movsb
push
mov
inc
jne
in
push
mov
and
leave
aad
int
cmpsl
repz
xchg
push
mov
idiv
mov
xchg
fisttpl
jmp
mov
mov
ljmp
orl
add
xor
aad
aad
xchg
jae
mov
outsb
jge
imul
stos
cld
aam
sarb
ljmp
es
aaa
jl
and
or
sub
push
inc
test
mov
aaa
jnp
aad
in
cli
mov
pop
xchg
pusha
jge
movsb
add
xchg
inc
movhlps
fisttpl
ret
xor
push
sti
andb
data16
bound
inc
fildll
testb
outsl
cwtl
sub
mov
mov
test
ss
sub
mov
or
es
mov
orl
sti
jb
xlat
cmc
ficoml
inc
pusha
xchg
enter
hlt
add
in
xchg
rol
or
add
sbb
add
add
sub
sub
mov
sarb
ror
mov
fwait
iret
ds
ret
das
push
sbb
test
and
fimull
pop
jg
adc
cli
int3
sub
dec
sti
cmp
stc
int3
out
xor
xor
push
repz
cmc
mov
inc
dec
enter
out
int3
pushl
ds
insl
test
push
es
mov
outsb
mov
cmc
cmpsb
fistpll
popf
mov
frstor
fs
push
icebp
and
pusha
fadd
outsb
scas
scas
lods
mov
sahf
adc
and
fdivs
adc
xor
scas
pop
out
xchg
xor
leave
repnz
in
ffree
adc
sub
cmp
inc
mov
mov
cmp
mov
iret
ljmp
outsl
pop
fucomi
enter
cmp
daa
mov
shr
fidivl
cmp
jnp
mov
and
setns
movsl
pop
test
in
enter
sub
pop
cmp
mov
sbb
enter
jle
push
sbb
stos
mov
cmp
jbe
fcmovbe
cmp
mov
in
inc
scas
js
inc
lds
cmp
movsb
hlt
xchg
sub
mov
xchg
pop
push
into
sahf
repz
jno
sbb
sub
adc
xor
jmp
push
jnp
push
or
fistpll
sbb
add
pop
lea
push
out
sbb
sbb
pop
dec
pushf
sub
mov
mov
icebp
int3
add
push
pop
xor
and
push
xchg
mov
stos
xchg
sub
cmp
add
mov
sti
cmp
sbbb
jno
cli
mov
in
add
in
aam
cwtl
xor
sub
lds
push
mov
das
andl
and
cmp
das
pop
add
movsb
or
cmp
mov
in
repnz
pop
inc
jns
cmpsl
std
decl
pop
cmp
mov
shrb
scas
mov
pop
std
mov
and
lock
pop
add
xlat
add
rcll
inc
cmp
push
mov
mov
cmpb
outsb
insb
fs
sub
mov
mov
cmp
jecxz
cli
mov
mov
in
xchg
leave
cmp
adc
push
mov
imul
inc
add
ja
adc
ja
push
outsb
sub
lahf
out
inc
test
clc
adc
pop
adc
pusha
mov
mov
mov
negl
aas
adc
notl
sbb
sub
ret
mov
cwtl
add
popf
or
mov
cmp
sub
outsl
mov
test
mov
xchg
inc
movsb
sar
out
sti
leave
dec
push
xor
adc
inc
adc
pushf
scas
push
add
mov
mov
xchg
xor
mov
jl
ljmp
or
outsb
sbb
or
xchg
pop
inc
gs
mov
or
sbb
jp
loopne
mov
dec
mov
ds
and
and
dec
test
into
dec
sbb
cmp
adc
stc
popa
ljmp
inc
jo
int3
cmp
inc
insl
sub
xchg
push
sbb
shlb
les
inc
lret
inc
or
dec
xor
inc
jb
mov
pop
cli
xlat
test
pushf
push
cmp
cmpsb
mov
iret
lret
dec
int
mov
imul
movsb
or
mov
jo
push
dec
add
xchg
outsl
mov
push
xor
outsb
scas
add
push
dec
fs
xchg
push
mov
pop
outsb
out
rcrb
das
dec
inc
mov
dec
fwait
sbb
lret
out
xchg
mov
xor
enter
push
das
xor
push
mov
or
inc
idiv
adc
push
mov
fidivrs
test
jns
imul
leave
fisubs
cmpsl
mov
push
jmp
or
jl
test
mov
ljmp
outsl
bound
jns
xchg
in
fsts
mov
stc
xchg
jne
push
add
enter
push
xchg
inc
push
inc
dec
nop
cmpsb
das
lret
bnd
sti
jo
push
xchg
cmp
mov
add
and
out
jae
mov
xorl
xchg
xor
cmp
jae
imul
stos
jmp
stc
inc
adc
jp
imull
aam
jo
adc
push
sub
test
popa
inc
or
cmpsb
std
dec
sbb
cmp
cmp
push
lods
lods
cmp
iret
stos
lock
hlt
xchg
and
push
add
imul
push
mov
cli
inc
push
insb
int
jb
mov
sahf
fwait
into
mov
cmpsl
xor
clc
cmp
mov
push
addb
icebp
ret
xchg
or
mov
mov
mov
mov
mov
lret
add
pop
dec
sub
jbe
fistl
sub
cmp
inc
negb
dec
ret
push
sbb
stos
enter
push
jp
cmp
cmpsb
mov
in
fdivrl
and
jmp
mov
mov
add
into
sti
xchg
jl
cmpsl
sbb
cmp
insb
divb
mov
and
xor
ret
adc
movsl
xor
jnp
or
push
js
pushf
xchg
ljmp
insb
push
fisttps
in
test
cmpsb
inc
adcb
insb
cmp
push
mov
testl
add
add
xchg
xchg
xor
popf
lods
add
xchg
mov
sub
sub
in
inc
outsl
dec
out
data16
cmpb
mov
mov
shlb
xchg
movsb
mov
ss
adc
enter
cld
push
add
movsl
lock
imull
loopne
mov
loopne
pusha
iret
stos
in
fdivl
in
dec
cmpsl
int3
push
movsb
cli
dec
cmp
cwtl
stos
or
inc
shll
jo
adc
jg
inc
fs
fidivrl
ljmp
and
lods
into
jge
mov
das
mov
mov
fdivs
jno
and
pop
fcmovnu
ret
rclb
fldcw
xchg
push
ja
mov
or
addr16
mov
nop
adc
jle
dec
xchg
jne
or
mov
inc
cmp
movsb
adc
das
rol
mov
add
out
jno
mov
lcall
add
push
sbb
std
cmp
push
insl
add
xor
xchg
insl
add
std
mov
push
xor
cmp
dec
mov
sub
imul
aam
mov
xor
jle
push
dec
cld
aam
movsl
loop
leave
mov
or
add
aas
lret
insl
and
or
ds
sub
loopne
andb
lea
lret
ficompl
xchg
jmp
je
loope
arpl
jg
pushf
sub
loop
xchg
pop
cltd
add
lds
iret
stos
mov
adc
jo
and
mov
fisttps
pop
addr16
test
sub
push
pop
call
push
cli
mov
dec
sahf
mov
inc
lds
mov
outsb
lret
rolb
mov
stos
xchg
divl
or
les
push
clc
inc
and
mov
mov
fwait
and
mov
mull
xchg
and
mov
sbb
js
repz
jecxz
js
sub
sub
popa
cld
jns
movzbl
xchg
mov
and
sti
jl
jnp
dec
out
cmp
es
mov
push
sub
out
xchg
pop
xor
imul
push
jnp
xor
movsb
mov
adc
mov
adc
dec
pop
or
cmpsb
mov
lret
negb
xchg
fbstp
sub
test
cltd
popf
je
insb
pop
mov
imul
or
pop
push
lret
and
std
cmpsb
mov
jnp
fsubr
rolb
lahf
mov
repnz
cmpl
js
push
scas
dec
ja
and
push
les
aad
stc
in
shrb
shll
arpl
push
roll
in
cli
fdivp
xlat
stc
add
stc
or
jmp
pop
and
js
pop
out
cs
fsubs
icebp
ljmpw
hlt
mov
pusha
mov
in
xor
push
aas
enter
sti
inc
sbb
xchg
adc
add
jno
adc
mov
jno
mov
lret
jecxz
mov
es
mov
cmpsl
cmp
mov
inc
gs
add
inc
push
popf
xchg
xor
sbb
jno
or
dec
insl
add
pop
cmp
dec
dec
movsb
mov
pop
mov
inc
fcoms
cmpl
out
xor
pop
inc
js
cwtl
bound
dec
adc
fstp
fwait
mov
mov
stc
ficoms
or
dec
shl
xchg
jae
and
nop
or
sbb
test
pushf
adc
sbb
jns
fistl
icebp
insl
mov
fsubl
jg
lahf
jae
movsl
pop
mov
jne
mov
mov
mov
cmpsl
or
mov
mov
push
sahf
cmp
into
or
jp
dec
cmp
movsl
xor
cli
mov
mov
call
stos
inc
pop
adc
jle
orl
sub
arpl
call
and
popf
cmc
enter
mov
sbb
leave
hlt
out
mov
mov
sbb
mov
incb
push
push
adc
xchg
push
sub
mov
xchg
and
adc
fs
lods
add
add
enter
pop
scas
lret
sub
das
pop
int
cmp
call
cmp
adc
xchg
xchg
insl
out
lock
scas
cld
cmp
and
or
or
out
sub
lret
ds
mov
shll
lcall
push
mov
loopne
je
es
xchg
rcrl
and
xchg
imul
mov
out
adc
lods
out
in
pop
fwait
pop
jecxz
adc
or
or
rorl
rolb
test
adc
outsb
imul
fadd
or
or
xchg
sti
call
outsb
insb
dec
jae
das
mov
stos
sbb
jge
pop
push
sbb
mov
aam
cmp
push
xor
andb
dec
hlt
dec
call
and
mov
test
or
xor
bound
aad
repz
mov
jle
xor
ret
test
cmpsl
jp
iret
fsubl
dec
dec
lods
psraw
cmp
push
lcall
icebp
mov
imul
fildll
mov
add
cmp
mov
mov
cmc
pop
into
test
mov
or
cli
rclb
stc
dec
popf
call
in
ss
das
sarl
dec
add
mov
inc
push
xchg
test
dec
pushf
pop
xchg
sub
sbb
mov
stos
pop
pop
outsl
lods
add
movsl
add
mov
jae
test
mov
adc
jno
lahf
aas
jg
cs
mov
in
in
mov
push
or
mov
xchg
xor
inc
leave
dec
rcrb
mov
shl
push
into
dec
and
and
ret
dec
iret
sbb
cs
roll
fadd
mov
cs
subl
scas
xor
sub
das
out
or
mov
outsl
cwtl
xchg
test
loope
cld
jp
test
xchg
addr16
pop
dec
adc
dec
mov
or
xchg
inc
fs
and
cmpb
fdiv
mov
jecxz
xchg
dec
mov
ljmp
sti
adcb
je
les
mov
cmpsl
mov
and
adc
sub
push
mov
jb
sub
icebp
js
xchg
dec
inc
sbb
dec
mov
mov
roll
std
in
int
pop
inc
test
les
clts
xchg
lret
xor
lds
rclb
cmp
mov
inc
pop
in
or
pop
inc
enter
rcrb
pop
subl
cmpsb
mov
pop
jb
pop
stos
adc
push
cmp
xor
adc
fldcw
ja
cmp
lret
jge
test
rorl
or
lods
aam
pop
cld
xor
pop
lret
addr16
inc
fisubl
out
test
inc
popa
clc
je
or
adcb
rcl
popf
xor
testb
cmp
push
outsb
dec
gs
jns
fidivl
lcall
adc
mov
stos
addr16
mov
mov
fimull
call
addr16
pop
cmp
lods
insb
jg
sbb
shlb
loopne
es
pop
pop
xor
jns
jbe
test
addb
dec
sub
dec
into
gs
xor
mov
in
add
dec
out
out
mov
push
cmp
mov
test
lret
cld
frstor
push
push
les
das
jp
popa
jno
jge
sbbb
not
mov
scas
dec
sub
jae
push
fwait
jnp
cltd
lods
mov
pop
scas
decb
insl
add
pop
sub
push
popa
xchg
sub
jno
out
mov
inc
out
jno
cmc
pop
shrl
push
lea
pop
in
orl
mov
out
ljmp
mov
inc
push
inc
fldl
mov
and
out
sbbb
or
cmp
aaa
jp
popa
clc
mov
jg
fsubrp
fdivl
add
jae
mov
lods
int
in
loopne
cmpsl
sbb
mov
adc
ljmp
test
or
fidivrs
xor
push
dec
lock
rcrl
inc
fld
iret
imul
in
ret
sbb
ds
fbld
es
mov
push
popf
stc
shlb
mov
sbb
pop
inc
sub
repz
inc
ficompl
ror
cli
shlb
or
roll
adcb
callw
jne
subl
adc
inc
sub
adc
test
scas
rorl
or
lock
cli
xchg
mov
ret
cld
rorb
or
pop
repnz
sub
push
push
dec
jecxz
mov
mov
testl
mov
sbbb
sbb
jo
or
xor
les
mov
nop
jmp
stos
inc
fmuls
test
stc
insl
and
sub
mov
testb
jmp
add
cmpsb
cmp
int
ljmp
in
inc
fstl
cmp
shll
add
lret
mov
adc
and
rclb
std
sbb
outsl
push
adc
fidivs
xchg
jns
xchg
lret
lret
loop
out
in
lcall
cmp
fidivl
rcrb
xor
cs
mov
sub
jns
js
jge
jne
jle
ret
imul
shrb
cli
dec
sub
lcall
push
scas
mov
mov
rorb
push
cmp
out
test
push
mov
jbe
mov
stc
or
push
ljmp
push
popf
xorl
scas
movsb
iret
data16
iret
data16
pop
repnz
lcall
jbe
pop
mov
das
sahf
xor
cmp
ss
pop
push
movsl
test
jns
movsl
iret
data16
jmp
or
sbbl
sub
dec
in
ja
fidivs
shrl
rorl
adc
push
pop
inc
xlat
mov
scas
stos
lret
aad
pop
lock
mov
inc
push
push
and
mov
les
xor
and
pop
ja
sub
mov
les
out
dec
fists
and
sbbl
push
call
int
stos
inc
add
and
pop
cmp
scas
fs
inc
test
lret
cmc
loope
sbb
sub
dec
cmp
stos
data16
imull
lret
repz
aam
jb
push
pop
lock
das
mov
pop
jno
dec
stos
jp
mov
hlt
or
push
and
dec
lods
jge
push
cmpsb
into
cmp
clc
enter
sbb
inc
adc
in
dec
cli
xchg
popf
jo
mov
lret
push
in
repz
dec
dec
push
cld
xchg
mov
mov
mov
mov
dec
ds
cmp
mov
leave
lcall
cld
out
sti
xchg
cs
mov
dec
dec
jecxz
push
fs
mov
mov
jmp
in
sbbl
add
push
jnp
mov
sbbl
fsubr
cmp
adc
xor
daa
xor
sti
outsb
inc
dec
in
sti
xchg
mov
fldenv
jmp
in
and
dec
insb
jge
fwait
movsl
mov
test
fidivl
pop
pop
and
cmp
movsl
xorb
mov
fstpl
add
and
push
jmp
sbbb
leave
mov
dec
pop
adc
mov
std
xchg
pusha
jo
push
stos
xorb
neg
mov
rolb
xor
pusha
bound
xchg
adcl
out
loope
dec
in
add
shll
mov
orb
popa
loope
cmpsl
pop
clc
shlb
cmp
outsl
push
push
popf
xchg
sub
shr
xor
pop
repz
in
inc
adc
ja
dec
fbstp
push
in
rclb
inc
xlat
daa
out
sti
adc
shll
push
insb
xchg
leave
pusha
int
fdivl
out
sub
pop
outsb
add
jmp
sub
ljmp
aam
scas
add
enter
ds
push
jecxz
dec
js
fildll
iret
dec
loope
mov
jnp
dec
or
es
pop
stc
nop
mov
jle
out
fsubrs
pop
pushf
xor
add
pop
subb
jnp
add
aad
stc
std
xchg
cs
dec
out
dec
push
mov
scas
jl
fcompl
es
stc
sbb
cmpb
imul
cmp
sub
inc
or
pusha
xchg
sbb
mov
xor
and
push
mov
dec
data16
sub
lret
push
xchg
xchg
xor
jp
jecxz
loop
popa
and
jbe
push
dec
hlt
je
movsb
aas
popa
cltd
or
mov
sbb
or
cs
pop
cmpb
shlb
scas
out
dec
ficoml
pop
ljmp
outsb
idivl
fadds
adc
daa
mov
pop
or
stos
pop
outsl
mov
push
scas
cld
test
jge
adc
mov
sub
rcrb
mov
add
cwtl
push
cmpsl
movl
das
mov
push
les
cmp
addr16
fisttps
and
das
ficompl
push
inc
push
bnd
outsl
notl
test
iret
jp
pop
cmpsl
loope
push
and
pop
notl
adcb
adc
loopne
int
lods
adc
cltd
cmp
call
pushf
mov
or
or
shrl
fcoms
icebp
mov
mov
inc
in
lret
jg,pn
inc
cwtl
pop
pop
xlat
jb
loopne
in
mov
sbb
lahf
xor
xorl
dec
or
subb
mov
shr
leave
es
int
sbb
fnstenv
std
jge
xchg
in
lea
ret
or
imul
pop
bound
test
xlat
sub
cld
inc
shlb
pop
fisttpl
testb
push
and
div
push
push
out
push
inc
addb
cwtl
in
scas
dec
and
ficomps
adc
js
mov
push
inc
in
mov
mov
out
mov
or
and
mov
aam
enter
mov
inc
js
int
jl
jmp
out
lret
je
hlt
or
xor
cmpsb
inc
inc
pop
jnp
xchg
je
test
add
sub
inc
call
jg
subb
mov
push
pop
in
lods
and
inc
jmp
mov
xchg
adc
xor
inc
jns
mov
push
cmpsl
rcrb
aas
mov
in
outsb
scas
dec
stos
sub
jno
fistps
xchg
outsb
dec
ljmp
xchg
pop
jne
lods
jmp
out
hlt
cmpl
and
or
mov
xor
pop
mov
rcr
xorb
jecxz
xlat
mov
add
jle
loop
push
test
shrb
popf
movsb
jmp
add
sub
push
jae
cmp
ret
enter
mov
in
pop
fsubs
sub
shll
call
mov
jp
lret
add
push
xor
xchg
cmpl
stos
movsb
movsb
cmp
lret
loope
std
test
popf
push
dec
loop
jl
sbb
mov
ret
inc
lock
inc
inc
xor
jae
jnp
lcall
push
in
out
out
pop
psubsb
cmp
imul
ret
mov
fdivrl
rorl
cs
pusha
pop
rcrl
testb
aam
stos
add
es
push
push
push
mov
js
jmp
fmul
jbe
cld
stc
dec
in
push
mov
push
dec
jl
jge
mov
push
rol
in
test
icebp
cwtl
das
and
insb
add
ss
imul
xchg
push
jmp
mov
jb
pop
adc
nop
daa
popaw
and
inc
sarl
arpl
stc
cmp
adcb
cmp
lahf
imul
mov
fcomp
inc
fildl
daa
push
out
addr16
icebp
mov
mov
mov
ljmp
out
and
xor
stos
aaa
into
jp
test
xor
pop
jae
sbbl
mov
es
add
mov
adc
negl
sarl
xchg
cmp
pop
or
es
adc
mov
loopne
jl
sub
push
popf
arpl
push
test
sbb
sub
sbb
mov
mov
jmp
inc
jecxz
add
test
xchg
imul
imul
into
mull
dec
adc
mov
pop
xor
jnp
jl
ja
jp
lea
ret
push
add
mov
daa
sub
mov
ret
pop
hlt
adc
data16
hlt
xor
mov
out
aad
mov
incb
mov
or
push
or
fcom
push
jecxz
cmp
push
in
push
loope
mov
js
lods
inc
mov
lret
pop
sub
adc
jmp
inc
and
aad
or
sbb
sti
adc
scas
int
fidivrs
adc
jne
cli
cmp
stos
pop
lods
xor
in
mov
lock
lret
adc
fnsave
out
xor
test
pop
sti
pop
mov
dec
adc
ja
push
fs
repnz
in
ljmp
push
mov
es
jno
loopne
adc
jbe
aas
push
mov
pop
mov
fsub
jnp
pop
pop
hlt
nop
das
add
in
sbb
cmp
ds
pop
sbbl
pop
lods
les
jp
stos
icebp
inc
fldenv
int
adc
inc
pushf
xor
jns
inc
xchg
popf
xor
fs
xchg
jmp
rcrb
gs
call
or
cmp
cmpsb
cmp
loope
fistl
mov
jne
xor
mov
xchg
xchg
addl
addr16
sbb
aam
dec
out
inc
xor
jmp
push
jmp
lods
aam
cmc
scas
mov
outsl
js
ret
xlat
int
leave
sub
xor
das
sbb
push
movsl
push
xor
test
fldcw
mov
xor
jg
ret
imul
ret
cmp
sbb
sbb
hlt
adcb
cld
outsb
stos
cmp
and
cmp
stos
fadd
je
into
icebp
sbb
adc
jge
mov
pop
pop
add
nop
mov
popf
and
or
adc
sub
add
sti
rcrl
xchg
adc
orb
sub
push
dec
push
outsl
adc
es
notl
cmpsb
cmc
scas
push
sub
lock
mov
popa
mov
jbe
xchg
std
jl,pt
push
test
mov
jnp
scas
pusha
neg
sahf
add
xchg
cli
movsl
cmp
aad
xor
jne
mov
jl
jne
jae
call
xchg
or
lds
scas
scas
nop
add
sbb
cs
fbld
mov
scas
inc
mov
sbbl
fimuls
pcmpeqd
jl
insb
lods
inc
pop
jg
sbb
fldt
lds
fs
push
and
pusha
push
xchg
testl
dec
enter
mov
lods
cld
adc
inc
inc
incl
out
outsl
dec
fistps
mov
jbe
jecxz
adc
add
xor
pop
push
mov
lret
mov
push
mov
pop
divb
xor
nop
movsb
pop
clc
cmpsb
pop
movsl
xlat
daa
inc
fstl
test
in
inc
es
test
xchg
pop
mov
scas
xchg
and
and
and
mov
jbe
pop
imul
sub
adc
mov
popf
inc
sbbl
hlt
xchg
clc
test
and
pop
push
sbb
push
mov
mov
xor
mov
clc
inc
cmp
rolb
adc
outsl
add
push
mov
mov
inc
fnsave
push
cmp
js
test
sbb
out
and
pop
jp
ss
xchg
popa
clc
int
add
mov
mov
popf
cmpsb
xchg
inc
ffree
movsl
ss
lock
and
sbb
dec
xchg
cli
cwtl
and
ljmp
lea
push
imul
fnsave
fldl2e
orl
and
pop
push
addr16
into
push
jns
add
roll
push
dec
pop
sbb
orb
pop
push
aaa
into
bound
js
pop
adc
inc
insl
cmp
jp
cmp
dec
scas
mov
sbb
scas
and
and
inc
and
adcl
dec
in
mov
sti
out
sub
aas
jp
pop
insl
push
mov
outsb
arpl
lods
inc
push
jecxz
xor
test
lea
jg
movsl
and
stos
std
les
stos
movsl
cmp
dec
arpl
jns
clc
push
xchg
add
rcll
cmp
xor
test
jecxz
mov
flds
dec
and
mov
add
std
xchg
xor
cmp
test
lods
adc
cmpsb
pop
ja
dec
rolb
mov
je
sub
mov
aaa
js
sbb
ret
and
pop
sbb
pop
dec
pop
push
in
push
addr16
stc
xchg
xchg
cmp
add
add
scas
xor
mov
push
test
inc
fistl
shl
repz
je
push
sbb
xchg
and
cmp
in
test
push
fwait
xchg
pop
and
lock
push
out
add
inc
fmull
or
jns
aaa
push
jmp
mov
or
dec
pop
jnp
dec
les
popl
cli
loope
js
icebp
or
jg
push
mov
fldcw
jge
clc
jecxz
sub
sub
test
je
fbstp
sahf
and
push
insb
fidivs
inc
stc
jne
xchg
adc
out
xchg
mov
psubb
fdivl
call
iret
lea
in
pop
pop
adc
xchg
cmpb
or
xchg
mov
xchg
dec
fucomp
orb
outsl
push
insb
and
call
mov
jo
push
faddl
movsl
hlt
adc
stos
inc
aad
inc
fildl
stos
jecxz
in
gs
push
push
test
test
mov
ror
lds
mov
stc
outsw
pop
cmc
pop
nop
add
fwait
sti
fldenv
xor
adc
xor
inc
fsubr
pop
loope
cmp
jno
stos
xchg
push
and
jbe
lds
ret
fldenv
cli
sbbl
adc
popf
inc
bnd
in
mov
xor
lret
inc
sbb
ret
loop
inc
iret
fsubrs
outsb
test
add
mov
addr16
pop
inc
retw
insb
popa
clc
sahf
pushf
push
in
push
mov
sti
xchg
add
sub
lods
cmp
sbb
pusha
shrl
hlt
test
xchg
jnp
add
and
aaa
lods
lds
mov
stc
daa
lods
push
in
sbb
pusha
shrl
test
push
jmp
and
dec
loop
jle
push
call
lret
rcl
mov
and
and
pop
outsb
push
shrb
xchg
jbe
in
push
insb
lret
bound
jecxz
pop
sahf
push
jmp
stos
push
lret
les
mov
mull
lds
in
jnp
cli
stos
adc
add
repz
sbb
sub
xor
mov
mov
test
dec
push
mov
mov
repnz
pop
in
ds
or
out
xlat
push
add
mov
xlat
outsb
mov
iret
pop
hlt
mov
iret
aam
rcrb
lock
gs
sub
shrb
inc
add
cs
movsl
cmp
sub
inc
fldenv
ficomps
rorb
jl
adc
outsb
test
xor
mov
sub
pop
jle
jo
pushf
cwtl
gs
lret
loop
in
lcall
movsb
cmp
ret
pop
sahf
mov
inc
fcmove
mov
in
pop
push
cmp
inc
aas
sbbl
xchg
mov
in
in
pop
push
lock
fsubp
inc
fs
jno
pushf
xor
cltd
add
and
cmp
ret
mov
inc
fidivl
pop
sub
sbb
sbb
ret
ss
int3
arpl
fldcw
or
or
and
mov
lods
subb
and
dec
jecxz
and
mov
sub
sbbb
add
mov
movsb
add
sub
add
int3
push
imul
cmpsb
lahf
jbe
adc
or
add
inc
sub
push
divb
cmpsb
cmc
adc
addb
cli
xchg
fisubrl
mov
pop
sbb
nop
mov
ret
clc
mov
mov
insb
add
out
xchg
fldl2t
or
lods
inc
repnz
test
dec
jecxz
jns
subb
sbbb
mov
in
hlt
mov
cvttps2pi
aas
dec
jmp
bound
mov
ljmp
pop
hlt
mov
lods
inc
lea
dec
loop
inc
icebp
mov
cmp
test
fdivr
xchg
iret
xchg
and
sub
cli
xchg
mov
arpl
push
jmp
fwait
mov
sti
xchg
xchg
frstor
test
sub
or
xchg
jg
jecxz
cmpsl
jle
xorl
sbb
jne
cltd
sub
mov
pop
jbe
pop
test
ret
hlt
dec
loopne
inc
push
add
test
lods
repnz
lds
cmc
call
jecxz
dec
in
fdivl
gs
loop
add
xchg
xor
sbb
and
lds
push
in
sub
jae
jl
add
iret
xor
cmpsb
arpl
scas
inc
and
aad
inc
int
jne
dec
loop
xchg
jmp
leave
push
jp
xchg
or
fidivrl
sub
imul
dec
loop
dec
shrl
fisubrs
adc
mov
testb
sub
cs
jl
lret
lahf
dec
loope
sub
sbbb
sbb
cmp
stc
xchg
cmpsb
cmp
push
dec
in
call
push
jge
les
xchg
les
lods
inc
inc
loope
mov
arpl
cwtd
xor
push
lea
mov
fistpll
adc
rcll
dec
test
xor
push
test
sub
xchg
mov
movsl
scas
std
rcrl
sub
add
jbe
and
push
ret
mov
in
test
mov
clc
sub
iret
cltd
adc
lds
ljmp
jbe
jle
outsb
add
pop
push
or
pusha
outsl
lods
inc
mov
lret
cld
dec
out
cmp
out
test
sti
xchg
lods
popa
mov
xchg
mov
mov
mov
inc
fistl
aam
cmc
pop
insl
add
adc
pop
xchg
mov
inc
aaa
pop
mov
mov
add
cld
xchg
xor
cmp
lahf
test
lods
adc
pop
inc
fmull
sub
out
dec
lret
js,pt
mov
insl
add
rcrl
pop
mov
dec
and
sub
jae
orl
xchg
fucomi
test
and
andl
lds
movsb
pop
notb
int3
lret
sub
fwait
sbb
dec
stos
mov
mov
push
mov
fwait
xor
dec
loope
inc
xchg
cmp
test
lods
mov
fisubrs
sub
es
lret
fiaddl
cmp
std
rclb
inc
fcoml
out
push
popf
loopne
loop
jo
cmp
rcrl
adcb
in
mov
mov
mov
stc
mov
roll
pop
sub
pop
dec
mov
mov
lods
lret
lods
inc
cld
mov
shll
pop
dec
loop
and
xchg
outsl
in
andl
mov
cld
add
sub
out
outsl
lret
popa
push
out
push
int3
mov
notl
inc
fisttpll
push
in
push
gs
xchg
inc
pop
repnz
cmp
stos
sbb
mov
sbb
xchg
pop
dec
in
shlb
pushf
pop
testb
push
popf
dec
inc
dec
out
bound
xchg
inc
pusha
divl
mov
ds
pop
scas
inc
cmp
ds
dec
filds
lods
fbstp
jae
imul
sub
jbe
lods
mov
out
into
cld
aas
sub
inc
fsubrs
test
push
roll
out
xchg
or
sti
inc
lahf
ss
sub
jnp
cmp
rorl
iret
sub
push
jg
push
data16
mov
movsl
stc
cwtl
das
sub
sahf
xor
je
jmp
ljmp
out
mov
pop
imulb
roll
inc
clc
jne
adc
es
roll
sbb
enter
mov
es
lret
add
xchg
int3
dec
jecxz
and
xlat
ret
mov
hlt
adc
clc
sbb
mov
push
out
mov
out
sahf
pop
mov
pop
ljmp
scas
xor
pop
scas
inc
mov
pop
cmpsl
dec
fwait
pop
or
loopne
xor
pop
inc
pop
ja
lea
pop
gs
xchg
ficoml
outsl
push
and
mov
stos
push
sbbl
iret
scas
cmpsb
cmp
mov
inc
fnstsw
jmp
inc
fcoml
js
pop
mov
nop
stos
xchg
fadd
lods
inc
mov
and
mov
lret
cmpsl
ds
into
xlat
outsb
shl
jle
repnz
in
adcb
call
lds
sar
xchg
repz
xchg
sbb
adc
jns
jns
out
test
daa
mov
pop
loopne
sub
mov
and
inc
mov
push
movsl
testb
mov
cmc
arpl
in
mov
fidivrl
insl
add
hlt
mov
push
lret
mov
shlb
jne
cmp
and
sub
fwait
or
cmpsb
mov
and
jge
rorb
incb
orb
mov
mov
mov
inc
fisubrs
inc
loopne
jbe
insl
add
mov
adc
jge
adc
repnz
cmpsl
je,pt
push
call
shl
ljmp
pop
xchg
sub
inc
jo
jbe
sub
sarb
mov
fisubs
rcl
insb
ret
addr16
hlt
test
out
addr16
sbb
adc
addr16
xchg
cs
jmp
in
xor
sbb
xor
xchg
sub
pusha
test
ljmp
jnp
nop
daa
push
andb
mov
or
or
and
dec
jecxz
addb
mov
push
popf
mov
xchg
or
xor
push
pusha
inc
fcoml
jle
mov
lcall
ret
adc
scas
inc
testl
fdiv
mov
add
je
rclb
lds
push
out
mov
sbbb
cmpsb
lock
mov
xacquire
and
sti
xchg
icebp
dec
and
xchg
mov
leave
call
push
out
in
inc
fcomp
cmp
jle
lock
xchg
jecxz
adcb
adc
pop
test
pop
scas
add
cs
pusha
pop
sub
mov
aam
ja
inc
and
bound
adc
adc
pop
mov
push
mov
scas
stc
jnp
outsb
lods
cld
lahf
ss
lds
imul
or
push
imulb
mov
std
sbbl
les
mov
push
cld
mov
out
jns
jle
sti
es
cmc
incl
scas
dec
out
mov
lcall
loopne
shll
ret
adc
test
pop
subb
popf
shlb
mov
out
add
inc
jmp
jno
imul
pop
cmp
mov
mov
into
add
adc
pop
dec
in
jg
clc
outsl
cmpsl
jmp
dec
adc
mov
xor
inc
out
xchg
xchg
into
jne
dec
shrl
loope
add
cmp
stos
cmp
mov
fistl
mov
rorb
add
pop
lock
jmp
aas
fisttpl
jne
aam
rolb
data16
shll
bound
dec
ja
imul
push
fwait
hlt
mov
mov
jp
addb
mov
shlb
loop
push
mov
sbb
fdivl
jae
mov
or
pop
cld
ret
mov
cli
dec
mov
stos
daa
arpl
xchg
es
xchg
cltd
mov
aam
iret
push
inc
pushf
inc
push
adc
mov
shrb
flds
test
xor
pusha
shrl
fcoml
stos
into
mov
xlat
outsb
jle
adc
insl
push
mov
xorl
arpl
ds
push
testb
bound
into
inc
mov
lods
inc
div
xchg
sub
or
into
jns
xor
jae
stos
inc
cli
fwait
aam
int
aaa
into
jle
jae
pop
xchg
test
add
stos
jno
push
in
cmpsb
pushf
pop
out
int
mov
outsl
sbb
dec
out
xor
xor
popf
xor
shlb
mov
decb
and
dec
xchg
and
xchg
push
mov
or
cmp
jge
adc
into
aas
cmp
mov
dec
mov
push
mov
ss
fstpl
push
xchg
mov
xchg
pop
cmp
lods
jae
xor
int
aam
adc
movb
rclb
outsb
add
imul
es
mov
xchg
mov
xlat
and
or
aas
lods
cmp
loop
fnstenv
xor
pop
scas
pushf
push
mov
mov
je
or
jge
dec
pop
jno
cwtl
xchg
pusha
neg
fs
aad
cmp
sub
mov
sbb
rcrl
add
clc
push
sbb
rcrl
add
sbb
std
and
nop
xor
sbb
cmp
cmp
popa
mov
pusha
xchg
daa
je
out
popf
mov
cmp
shl
movsb
sahf
xchg
push
fstl
and
scas
inc
xchg
mov
mov
and
sbb
ja
cmp
shrb
push
cmp
sti
and
scas
daa
dec
pop
and
adc
outsl
sti
ss
dec
cmp
sbb
jecxz
addl
pop
sbb
cmpsb
pop
leave
popa
xor
cmp
add
sbb
sbb
jo
cmp
dec
mov
lds
mov
push
ret
sbb
sbb
cwtl
hlt
cmp
fisubs
cmp
mov
dec
mov
lcall
pop
rcrl
std
mov
and
add
int3
push
ljmp
and
push
subl
pusha
mov
mov
add
test
push
std
sub
and
lea
ds
leave
sub
popf
pop
pop
xchg
sub
cmpsb
rolb
mov
inc
xor
cmp
pop
dec
push
and
or
jl
sub
add
and
int3
imul
loop
add
lcall
jb
daa
lret
test
dec
push
cmp
in
cld
mov
repnz
mov
xor
popa
cmpl
mov
pop
icebp
add
test
es
pop
sub
sub
lods
int3
mov
gs
fbstp
xchg
es
fcmovbe
insb
or
lods
inc
cmpsl
sub
lret
cli
adcb
mov
ljmp
outsl
or
push
shll
bnd
add
enter
gs
lret
es
push
in
sbbb
jns
sbb
int3
mov
push
les
rcrl
fdivl
jae
outsl
mov
fcomip
lea
pop
xor
lea
adc
arpl
xor
lods
add
xor
push
mov
outsl
adc
lods
je
testb
test
lods
pop
mov
adc
fistps
pusha
shlb
mov
fs
out
and
or
mov
fstp
outsl
cmovo
lods
jno
testb
adcl
pop
mov
adc
mov
clc
loope
fwait
xor
adcb
jl
push
scas
push
sahf
clc
int
cld
jg
lds
dec
popf
xor
sbb
mov
mov
test
cmc
fnstenv
mov
testl
int3
gs
adcl
or
jo
sub
inc
ffree
pop
mov
stos
mov
imul
mov
adc
arpl
pushf
and
mov
leave
pop
or
inc
shl
orl
add
add
mov
movsl
jle
mov
cld
mov
dec
aam
rclb
push
ljmp
jno
jns
cld
xchg
call
or
mov
in
lods
inc
pop
pop
cmp
lea
bound
push
out
fists
jbe
xor
pop
sahf
pop
push
xchg
sub
cmpsl
mov
shlb
frstor
push
dec
out
test
mov
popf
xor
repz
and
mov
fbstp
fnstenv
cwtl
data16
leave
jl
mov
rclb
cmp
xor
pop
or
je
mov
paddsw
mov
cwtl
pop
jae
je
ret
shrb
or
aad
imul
mov
xor
cmp
mov
mov
out
and
dec
ss
cltd
push
dec
lods
lock
fnstsw
push
notb
test
pop
in
jnp
imull
or
mov
push
int3
sub
sbb
sub
inc
loopne
pop
cltd
loopne
dec
stos
cmove
dec
jg
mov
or
aaa
add
sbb
jo
sbbl
daa
push
sbb
rolb
movsl
xchg
inc
push
rcrl
adc
rcrl
sbb
inc
scas
lods
dec
push
movsl
lock
fidivl
adc
inc
loop
xchg
adc
xor
insb
add
test
shlb
fcoms
or
inc
xchg
xor
fs
pusha
call
or
jg
fsubrs
popf
mov
int
pop
scas
and
scas
incl
bswap
or
and
les
xchg
sub
aam
dec
or
outsb
add
sub
arpl
lea
push
jp
subb
or
mulb
sub
push
fxch
popa
or
lods
movsb
sub
jle
lds
leave
testb
pop
push
jmp
sub
sub
psubd
xor
popf
add
lods
in
adc
arpl
imul
add
sbb
sbb
pop
insl
mov
clc
out
ret
pop
add
adc
jns
push
mov
jo
dec
mov
pop
out
and
loop
js
xor
mov
ljmp
loop
add
in
push
andnps
out
xchg
adc
test
mov
scas
pop
nop
mov
int3
icebp
sub
cli
popf
leave
mov
call
inc
cmp
gs
pop
sub
es
mov
cmpsb
stos
pop
xor
add
push
sbb
mov
ss
mov
xchg
ds
jge
jae
cmc
scas
mov
pop
inc
add
inc
mov
enter
and
jmp
adc
pop
movsl
cmpb
xchg
movsb
sub
bound
insl
sarl
mov
dec
outsb
lock
push
sbb
rolb
int
fisubrl
push
add
mov
add
jle
dec
out
xor
mov
movsl
mov
addr16
out
data16
add
jmp
notb
imul
jge
ret
loope
in
cmp
or
jae
repnz
push
stos
int3
test
add
mov
test
inc
sbb
nop
hlt
push
or
lods
stos
xorb
push
popf
jge
lahf
mov
xchg
aaa
cmpsl
add
inc
insb
sbb
cmp
adc
dec
lahf
cmp
fmul
mov
cmp
mov
aaa
and
mov
jmp
scas
clc
or
andb
loopew
shlb
lret
cmpsb
adc
cmpsb
daa
adc
and
ds
and
into
sub
in
rolb
ja
or
mov
mov
push
scas
pop
mov
mov
popa
jmp
test
jnp
cwtl
cmpsb
jns
out
sbb
es
jp
mov
jmp
pusha
psubw
fiaddl
inc
mov
pop
add
mov
sbb
dec
ja
stc
adc
sbb
es
in
stos
mov
sar
mov
sbb
test
xor
sahf
pop
xor
xchg
testl
enter
pop
cli
rorl
inc
ja
cmc
jg
push
out
shll
dec
mov
mov
pop
stos
cmp
xorb
pop
sahf
icebp
cmpsb
or
fldl
repnz
stc
pop
xor
inc
mov
ds
fidivl
testb
mov
pop
loope
lret
push
sub
xorb
cmp
dec
int3
dec
inc
jo
pop
syscall
enter
out
hlt
cwtl
insb
in
or
pop
sub
stos
js
and
cmovns
xor
inc
dec
lahf
lahf
out
ja
jo
std
xchg
mov
add
push
ret
cmp
or
icebp
lods
push
or
rorl
mov
cmp
dec
stos
popf
enter
cld
loop
dec
mov
adc
sbb
mov
shrb
aad
inc
xchg
mov
dec
lods
xchg
mov
mov
lahf
fs
cld
xor
push
and
popf
filds
aam
sbb
rcl
jae
pop
divl
cmp
test
movsl
cwtl
insb
into
mov
xchg
movsl
fistpll
daa
adc
xor
in
push
lahf
loope
in
test
xor
std
out
or
clc
dec
int3
mov
push
add
or
cmp
add
out
imul
and
pop
add
xor
and
dec
cmp
dec
test
mov
pop
aam
mov
aam
mov
rolb
or
or
scas
test
mov
or
pop
jo
jbe
adc
ficompl
mov
jp
leave
outsl
inc
adc
inc
jno
lret
pop
cmp
sub
mov
or
mov
mov
adc
and
pop
cld
icebp
cmp
xor
and
push
out
arpl
lcall
cmp
mov
in
fstpt
push
lret
jb
inc
mov
adc
lods
lods
fdivrs
mov
cs
jl
popf
popa
dec
dec
xor
sub
lcall
cwtl
cs
inc
or
jecxz
push
inc
adc
push
shl
addr16
rorb
mov
lods
push
out
mov
mov
mov
sub
xchg
lock
mov
shrb
push
push
lock
inc
sub
out
inc
aad
xchg
inc
xchg
adcb
jge
push
subl
jae
aam
jne
xchg
mov
xor
mov
xchg
cmp
jns
push
pop
adc
lods
loopne
addr16
push
pop
push
ret
xchg
cmp
shrb
std
je
add
add
mov
dec
cmp
cld
fs
mov
andb
lods
jns
xor
pop
xchg
xchg
jo
adc
fistps
mov
inc
loopne
dec
dec
test
fnstcw
pushf
lock
das
flds
stos
mov
xor
mov
xchg
mov
int
mull
je
out
enter
leave
add
cmp
mov
call
mov
daa
or
fs
xchg
dec
and
fisubs
scas
adc
push
mov
loop
mov
inc
jbe
cltd
dec
or
sub
lods
xor
pop
mov
mov
es
fmulp
in
in
jmp
cmp
dec
aaa
jl
ljmp
xchg
fsubl
cmp
mov
push
fbstp
or
or
or
loope
push
aad
dec
mov
push
xor
and
xchg
xchg
and
lds
pusha
testl
ds
push
in
arpl
mov
xor
scas
sub
in
sub
and
push
out
call
push
mov
jle
add
mov
sub
xchg
and
mov
inc
xor
insl
adc
test
xorb
imul
mov
mov
push
xchg
cli
adc
xchg
xor
inc
in
push
sti
test
out
or
cli
xchg
fmull
xlat
ds
sbb
xchg
dec
ss
mov
adc
mov
mov
es
lods
inc
jnp
lahf
ss
lret
lcall
and
inc
push
mov
ss
lret
mov
xchg
stos
lds
sub
ljmp
jno
and
xor
loop
push
lods
or
repz
leave
aaa
mov
inc
fisttpl
or
das
jno
cwtl
inc
outsl
adc
pop
jae
sbb
lcall
dec
jnp
bound
subl
mov
adc
adc
xor
pop
xor
dec
out
xchg
int
add
flds
and
mov
inc
cmpsb
jg
push
mov
enter
fdivl
sbb
jle
and
add
scas
test
lret
sti
adc
inc
sbb
in
dec
fs
notl
mov
adc
repz
inc
inc
pop
mov
gs
scas
fnstcw
stos
lahf
leave
int
jbe
test
add
mov
icebp
movsl
fsubrl
std
roll
pop
mov
cld
dec
jns
jle
dec
loope
pushf
pushf
cli
xchg
popa
jo
rorb
ss
inc
aaa
leave
xchg
add
dec
mov
xor
cmpsl
jno
fidivs
lods
icebp
mov
xchg
bound
xchg
iret
rolb
cmpsb
fistpll
lds
adc
jecxz
lods
inc
xchg
movsb
push
mov
mov
sub
cmpl
pop
or
iret
mov
mov
and
xchg
je
arpl
xchg
sbbl
sbb
lahf
ss
imul
orl
sub
sub
mov
gs
pop
scas
jp
shrb
fwait
xor
xchg
out
push
ljmp
movsb
repnz
xchg
sub
inc
mov
js
cmp
mov
flds
lret
inc
mov
dec
nop
daa
jg
movsl
cmp
sbb
inc
adc
and
sub
movsb
out
push
mov
jbe
aaa
and
sub
leave
xchg
sub
faddl
jno
out
xchg
sub
call
xor
jae
mov
out
xchg
adc
mov
ds
push
jle
mov
insb
add
insb
add
mov
ss
push
call
imull
insl
popa
xchg
testl
xchg
adc
sbb
sbb
jle
push
cmp
jg
mul
ja
int
gs
loopne
sbb
xchg
int3
arpl
repz
jmp
addr16
js
push
test
xchg
jl
or
mov
adc
mov
mov
das
test
xchg
mov
lcall
arpl
push
das
xor
pop
jbe
mov
popf
xor
mov
out
sti
sbb
cltd
xor
mov
dec
and
fwait
inc
jno
xor
push
pop
lock
std
lret
bound
fbstp
lret
test
test
lds
stc
nop
xchg
and
xor
ljmp
push
lods
dec
inc
out
cmp
fs
pop
pop
nop
daa
dec
mov
popf
out
movsb
cmp
xchg
sub
pop
cmp
mov
enter
clc
insb
cmpsb
cmp
pop
or
inc
cmp
cwtl
das
stos
loopne
movsb
sbb
mov
mov
fistps
mov
jle
insb
test
push
and
jne
int
insl
xchg
test
or
xchg
sub
sbbl
lods
sbb
inc
jle
mov
push
or
pop
shll
mov
sti
lods
mov
fcomps
jp
xorb
scas
js
and
movsl
inc
fbstp
inc
mov
test
roll
jge
arpl
cmp
test
dec
jp
pusha
insb
out
outsb
add
add
pushf
xor
and
cmpsb
xchg
xchg
sahf
xor
and
inc
cmpsb
cmp
cmp
popf
dec
shrl
adc
pop
mov
xor
outsl
mov
out
add
ret
in
xchg
dec
std
xchg
xchg
mov
inc
daa
cmp
jbe
dec
sbb
pop
pop
push
movsl
dec
mov
pop
out
pop
ja
cwtl
js
pop
mov
adc
iret
inc
xchg
cmpsb
cmp
sub
pop
repz
mov
or
cmp
fs
mov
inc
fisttpll
shrb
outsl
mov
popa
sub
and
inc
adc
pop
xchg
adc
sbb
add
lods
xchg
cmc
mov
int
out
mov
fisttps
test
repnz
stc
jecxz
inc
fisttpl
or
adc
or
sub
fwait
pushf
mov
cs
hlt
mov
xor
stc
outsb
bound
mov
aas
je
sahf
gs
sub
add
cmp
ficomps
daa
mov
test
mov
push
inc
int
jb
mov
mov
push
adc
aad
xchg
or
test
push
out
inc
fsubr
lea
mov
push
pop
out
mov
mov
fbld
ret
mov
sbb
enter
xchg
jmp
mov
insl
sti
insl
add
pop
test
lods
jg
mov
or
push
in
xor
stos
movsl
jle
jle
mov
mov
fxch
lretw
push
sbb
ds
stc
nop
lcall
mov
mov
add
es
pop
cwtl
pusha
cld
xchg
cwtl
mov
and
cmp
xor
dec
pop
lods
inc
dec
out
repnz
jns
int
hlt
leave
test
xor
pop
cmpsb
cmp
fwait
stos
mov
sbb
lahf
ss
adc
roll
xorb
in
aam
add
out
and
lcall
xor
or
adc
popf
xor
addr16
push
lods
cmp
cmp
xchg
sub
testl
imul
push
lods
scas
sbb
sbb
scas
xor
and
mov
xor
in
es
mov
inc
int3
or
pop
fwait
cmp
iret
jnp
add
test
lret
bound
dec
lods
inc
mov
pop
repz
daa
mov
push
mov
repz
leave
pusha
and
je
iret
es
pop
mov
dec
xchg
loope
insb
sbb
pop
push
sbb
inc
fisubrl
sbb
add
nop
daa
cli
and
lret
jle
int3
mov
push
daa
adcb
dec
sahf
xor
test
clc
dec
sub
cmp
insl
jle
pop
xchg
sub
repz
incb
add
pop
inc
cld
xchg
cmpl
jb
jo
pop
repnz
fcoml
cmpsl
int
ret
pop
das
out
inc
fneni(8087
sarl
add
jae
das
out
sbb
in
es
cwtl
test
mov
push
dec
in
dec
sbb
arpl
pop
dec
adc
roll
andl
lahf
adc
in
pop
pop
xrelease
mov
test
push
jmp
scas
push
icebp
mov
mov
shl
push
xor
outsl
push
aad
adc
pop
call
or
je
mov
das
inc
das
mov
and
loope
mov
add
enter
fucompp
out
fldt
jp
test
out
or
mov
cmp
inc
ficoml
out
ret
test
enter
cmp
inc
fistl
scas
int3
clc
jne
cs
outsb
add
add
push
in
jae
mov
fsts
xchg
movsl
testb
mov
sbb
push
dec
or
cmp
pop
mov
pop
jns
ret
pop
arpl
cmpsl
xor
cmp
pop
inc
fmull
stos
shlb
mov
int
scas
cwtl
fwait
xor
rolb
shll
lods
loop
pop
aam
jecxz
xchg
lds
imul
jns
sub
cmp
cli
xchg
repnz
fsubrs
rorb
mov
inc
frstor
push
mov
outsl
push
xor
ds
xchg
jmp
or
sbb
sahf
mov
adc
out
test
les
or
cltd
dec
js
enter
ds
repz
cld
xchg
out
orb
orl
mov
pop
push
popf
xor
ret
inc
in
mov
fisubl
lret
addr16
idivl
out
ficoms
mov
inc
incl
xor
push
mov
and
popf
xor
movsl
pop
xlat
cmpsb
mov
dec
mov
repnz
cs
mov
std
dec
movsl
mov
fidivl
sub
jecxz
out
mov
ret
add
mov
fisubs
rclb
inc
icebp
xor
in
fs
cmp
sub
xchg
pop
mov
addr16
sar
mov
arpl
sbb
sub
mov
jge
or
test
inc
push
cmpsb
sub
push
dec
sub
dec
ret
fsubrl
push
xor
push
mov
push
outsb
decl
pop
pop
sbb
adc
jnp
pop
repnz
or
lea
adc
sbb
xchg
dec
loopne
test
or
jmp
add
push
pop
push
sahf
sahf
subl
jge
add
addr16
js
sbb
icebp
mov
jo
inc
mov
ret
push
xor
xchg
in
test
push
in
fsubrs
lahf
lcall
out
popf
xchg
sub
sub
mov
pop
dec
aas
jl
xchg
sub
xchg
sub
xlat
cmp
enter
fwait
orb
icebp
sub
jecxz
stc
jne
shll
push
out
inc
int
cmpsb
fisttps
repnz
fstpt
out
push
push
push
xor
xchg
pop
sahf
mov
ss
xlat
jne
pop
and
inc
xchg
pop
hlt
jmp
cli
mov
ficompl
mov
cwtl
loop
and
dec
fists
aas
out
mov
pop
xchg
fs
xchg
mov
xor
jmp
or
test
daa
or
adc
int3
fstpt
aad
pop
jne
dec
bound
push
mov
cld
out
out
fcomps
adc
mov
shll
jno
imul
in
sbb
dec
loopne
mov
daa
sub
mov
in
pushf
xor
mov
xchg
and
jae
inc
movsl
mov
jnp
fwait
jbe
add
sub
lahf
fstl
add
inc
call
pushf
fucomi
mov
inc
cmp
addr16
orb
cmp
mov
xchg
ja
in
mov
pop
fadds
outsl
popf
sub
mov
mov
lahf
mov
push
push
xchg
mov
cmpb
push
mov
fldl
xchg
and
imul
pop
outsb
pusha
negl
cmp
lds
ret
mov
push
ljmp
repnz
mov
movsl
pop
add
ret
loopne
negb
hlt
mov
enter
sub
scas
inc
or
pop
mov
xchg
lcall
sbb
jns
cmp
test
mov
in
dec
fwait
xor
adc
xor
jnp
scas
arpl
pop
js
dec
out
cwtl
stc
nop
or
pop
pop
inc
inc
lds
in
test
adc
pushf
scas
pop
push
std
fs
lcall
jae
or
lret
bound
jmp
dec
cmp
push
jmp
ljmp
jo
jp
jmp
sarb
int
and
test
cmp
adc
insb
cwtl
movsl
in
adcl
jecxz
xchg
dec
pop
scas
inc
shlb
ljmp
pop
notb
pop
mov
pop
aaa
push
mov
jnp
es
mov
testl
xor
scas
xchg
jo
out
inc
mov
sti
mulb
lahf
xor
pop
mov
push
jb
insb
shlb
add
xor
xorb
jno
mov
popf
xor
cmp
mov
ret
and
int3
icebp
and
paddusb
mov
inc
imulb
daa
push
pop
lock
mov
sbb
sbbb
fdiv
mov
movsl
lock
das
sub
lahf
cmp
in
data16
mov
rcll
sub
mov
dec
sub
inc
jno
xor
es
add
push
ja
jmp
dec
xor
ret
inc
cli
lods
inc
xor
ret
xor
mov
out
push
lds
test
cmp
andb
stos
inc
lea
test
call
xor
pop
and
or
mov
adc
stos
inc
mov
xor
arpl
sub
or
xchg
gs
daa
push
inc
add
jp
jbe
and
sbbb
mov
fbstp
scas
cmp
and
mov
adc
jl
adc
bswap
mov
scas
xchg
pop
push
jmp
insb
mov
js
mov
test
or
and
mov
es
popf
xor
stc
sbb
sub
outsl
in
dec
testl
leave
aas
jp
mov
rcrl
push
lods
push
orl
mov
xchg
fwait
sahf
icebp
mov
mov
aad
cld
mov
out
sbb
pop
test
in
test
mov
xchg
xchg
cwtl
jo
in
inc
lods
mov
fidivl
mov
or
rcll
ss
je
int
rcll
cmpsb
movsb
fadds
pop
jmp
push
ljmp
cltd
or
cmp
mov
add
gs
jp
xchg
aaa
out
fdivs
sbb
clc
pop
push
ljmp
add
mov
cmp
mov
jnp
sub
ljmp
popa
clc
fwait
aaa
cltd
xor
pusha
xchg
push
iret
pop
idivb
adc
jb
movb
cltd
roll
in
stc
test
jl
cli
adc
pop
inc
add
sub
aad
jle
jp
adc
xchg
cmpsb
cmp
repnz
iret
data16
dec
in
scas
mov
inc
adc
lods
decl
xor
hlt
mov
push
or
lds
add
insl
cmp
mov
lahf
repnz
xor
adc
adc
aaa
lcall
mov
xor
xchg
sub
insl
or
fwait
xor
test
jge
jbe
scas
push
jmp
cmp
adc
xchg
pop
lea
mov
leave
repnz
into
notb
inc
enter
vmaxps
sbb
mov
shll
fnstcw
push
out
int3
or
pop
xchg
in
and
or
push
out
sub
push
jnp
push
lods
ret
pop
sub
or
jle
sub
cs
pushf
xor
shlb
xor
ret
pop
scas
push
pop
icebp
iretw
mov
std
adc
mov
xor
mov
xchg
das
xchg
rclb
outsb
add
push
xchg
mov
fldcw
loope
pusha
testl
and
call
or
xchg
mov
sub
lock
adc
movb
test
arpl
into
cmp
inc
fistpl
test
jnp
or
mov
xchg
sub
adc
mov
les
xchg
out
xchg
and
inc
fcomps
mov
imul
mov
andb
fsubp
push
xchg
in
push
mov
inc
cmpsl
ret
pop
add
dec
inc
and
push
test
inc
aaa
movsl
mov
dec
push
mov
jle
cmp
in
not
shrl
sbb
lret
shl
ja
in
fidivl
or
fsubrs
mov
insl
or
mov
daa
xlat
int3
arpl
pusha
fsubrs
cmp
imul
lea
and
adc
out
nop
fcomps
in
dec
adc
inc
mov
mov
dec
mov
cmp
pop
hlt
jo
in
repnz
jge
shrb
push
or
testb
xor
imul
cwtl
jo
xor
xlat
outsb
xor
mov
shl
sbb
aas
sbb
inc
fdivrl
loope
cmp
rcrb
adc
xchg
and
jnp
add
in
pop
pushf
xor
mov
pop
jmp
clc
xacquire
jo
xchg
dec
or
rcrl
aaa
add
es
push
pop
inc
fisttpl
mov
stc
and
inc
fcoml
fnstenv
rcrl
test
test
clc
or
cmp
dec
in
test
add
loop
mov
scas
fs
mov
mov
pop
add
mov
scas
shl
je
xchg
push
add
fnstenv
adc
xchg
pop
mov
xor
bound
es
andl
jmp
or
movsl
mov
adc
repnz
mov
adc
test
scas
inc
lock
rorl
xor
push
int3
pop
aad
pop
repnz
divb
sarb
mov
in
pop
xor
outsl
push
mov
inc
nop
sub
shll
xchg
loop
call
out
imul
or
cmpb
int
cmp
mov
add
movsl
inc
out
cmp
and
cmpsb
mov
mov
jmp
adc
push
icebp
stos
inc
in
jecxz
ljmp
xchg
push
pop
icebp
adc
mov
shrb
rorb
ret
xchg
sbb
icebp
sarl
sbbl
hlt
js
rolb
ss
mov
lods
inc
outsl
mov
nop
sbb
xchg
xor
pusha
not
das
jns
popf
mov
or
sbb
sbb
cmc
cmp
cmpsb
enter
adc
inc
fmuls
xor
rclb
pmuludq
fnstenv
lea
or
les
mov
adc
inc
subb
push
xchg
cs
push
ljmp
cs
sub
mov
cmpb
mov
jbe
mov
sub
pop
xchg
add
jge
sbb
xchg
push
jbe
mov
imul
dec
pop
rcrl
mov
es
into
dec
mov
mov
insb
cltd
mov
jg
mov
out
dec
enter
xor
or
and
movsb
mov
stos
jne
decb
mov
lcall
stos
jo
inc
int3
aaa
aaa
pop
rorl
cmove
inc
insb
orl
inc
cs
inc
pop
push
aas
sub
or
add
aas
out
jne
repnz
xchg
adc
inc
jne
mov
pop
ja
out
dec
into
push
push
in
sub
rorb
cmp
add
test
data16
in
sbb
cwtl
cld
add
enter
push
loope
or
push
cmpsb
fwait
addb
fisubrs
jo
je
and
lret
inc
das
negb
lods
jnp
pop
cmp
insb
or
loop
pop
je
xchg
or
sarb
jnp
out
inc
mov
hlt
sbb
xchg
cmp
pop
push
pop
mov
cmp
addb
mov
out
subl
loope
cmp
fnstenv
ljmp
std
lods
insb
lea
push
xchg
sbb
sub
xchg
dec
fdivp
cmp
imul
jnp
hlt
cld
mov
movsl
loope
ljmp
mov
loopne
or
xor
sbb
je
div
sub
idivb
and
lods
cwtl
cli
test
adcb
mov
fidivl
sub
fists
test
clc
mov
pop
sbb
mov
mov
pop
mov
stos
cmpsl
ds
or
or
testb
sbb
cmpsb
push
sub
insb
int
mov
sub
cmp
dec
add
jo
pop
ss
cmp
add
push
fs
cmp
cmp
fisubs
sbb
mov
fcmovne
add
sbb
pusha
push
jmp
xor
xchg
sub
dec
fists
je
sub
and
cmp
pop
mov
mov
push
pop
push
xchg
js
cmp
sub
pushf
jl
addr16
inc
cmp
mov
inc
mov
loope
mov
pushf
insb
ret
inc
enter
jecxz
mov
mov
cld
mov
cs
mov
jl
cwtl
cltd
subb
xchg
xchg
xor
lock
negb
decl
cltd
lds
jmp
test
dec
std
and
stos
jb
inc
pop
ret
iret
inc
lret
or
xor
adc
inc
mov
mov
jecxz
pop
repnz
add
xchg
lcall
adc
lds
rcll
mov
lea
in
ret
repz
add
xchg
cmp
mov
ds
jo
pop
dec
loop
arpl
push
jno
stos
arpl
stos
pop
mov
push
push
rcll
cli
jp
sbb
jmp
ret
and
ljmp
mov
aad
mov
add
fcompl
je
mov
sbb
xor
add
fnstcw
xchg
cmp
imul
fstpl
loope
xlat
outsb
jae
jle
imul
jp
loope
sbb
add
arpl
loopne
jg
push
movsb
push
mov
test
lahf
out
push
mov
pusha
sub
inc
sbb
pop
inc
sti
bound
ret
jmp
xlat
out
mov
xor
mov
fldl
outsl
fcos
lea
mov
insb
sarl
xor
or
adc
rcr
or
cmp
fistps
mov
sbb
int
jae
out
pop
mov
add
mov
push
enter
dec
mov
loopne
gs
push
add
out
ds
pop
and
inc
mov
xor
cs
out
adc
out
xchg
push
xor
xchg
hlt
dec
in
mov
sti
mov
arpl
loopne
aam
mov
pop
fcmovne
push
fistpl
push
push
or
dec
outsb
xor
pop
push
les
sub
insb
pop
sahf
mov
lcall
out
pop
mov
lock
int
mov
jns
push
out
sbbl
scas
inc
push
sub
cmp
test
je
out
fistps
mov
lret
mov
inc
frstor
int3
xor
pop
jne
pop
stos
cmp
lret
add
xchg
sti
movsl
imul
xchg
mov
jp
mov
leave
pushf
inc
xchg
sub
stc
ret
aaa
into
mov
dec
xlat
loopne
sti
out
sub
into
cs
sub
in
adcl
jns
mov
ja
mov
fs
fnsave
xchg
pop
dec
test
mov
fnsave
jmp
dec
jecxz
ds
test
stc
int
movsl
and
pop
pop
add
arpl
jmp
rorb
shl
adc
call
scas
insb
add
cs
sbb
add
outsl
push
fwait
xor
imul
xchg
sub
test
cli
inc
lret
cld
sub
and
mov
or
mov
test
arpl
out
sbb
fldpi
jnp
leave
pusha
pop
sbb
stos
push
aad
xchg
pop
or
mov
clc
inc
cmp
stc
mov
leave
in
ljmp
jge
popf
scas
pop
mov
sub
sub
push
aad
push
stc
nop
les
test
jge
xchg
or
push
sub
lock
xor
xor
adc
sub
pop
movsb
and
incb
jno
je
xor
fsubs
push
add
or
shlb
cwtl
inc
lods
call
dec
movb
lods
mov
mov
push
stos
popl
and
dec
loopne
jns
mov
fildl
mov
dec
lret
imul
mov
movsb
dec
mov
add
add
cmc
in
sbb
dec
push
jge
in
int
out
dec
nop
adc
or
shlb
pop
ljmp
inc
das
mov
pop
mov
nop
push
cwtl
xchg
cmpsl
xor
adc
cmpsl
and
bound
push
or
sbb
push
movsb
cmp
mov
lcall
ljmp
fs
jnp
xlat
xchg
xchg
insb
xchg
cmp
shll
add
sarl
mov
addr16
mov
add
fildl
xchg
inc
cmp
xor
les
xchg
cli
ds
loopne
stc
cmpsb
hlt
jge
push
out
ds
je
inc
and
sub
insl
popf
test
fs
xchg
xchg
jecxz
and
test
sahf
nop
repz
das
jle
lods
popf
add
mov
fimuls
adc
jmp
pop
inc
xchg
lcall
cwtl
mov
cmc
outsb
push
in
jmp
loop
add
lds
sub
mov
adc
xchg
mov
inc
cld
repz
ficoml
mov
and
dec
sbb
and
jb
incb
pop
stos
out
jnp
outsl
sub
stos
cmp
cmpsb
inc
lahf
mov
push
pop
mov
push
hlt
jnp
cmpb
je
dec
pop
icebp
jnp
sti
cwtl
popa
mov
nop
fs
xor
sub
or
enter
lcall
test
mov
inc
push
and
cmovo
mov
push
cmp
xor
sub
outsl
jecxz
cmp
into
out
sbb
jo
shl
push
cmp
shrb
pop
lahf
in
pop
xsha1
cmpsb
mov
push
aaa
push
xchg
shlb
insl
mov
ja
pushf
sub
mov
jg
imul
arpl
lcall
sub
mov
adc
fs
pop
xchg
pop
and
xlat
inc
cmp
jne
mov
std
ja
in
out
mov
mov
pop
aad
add
cli
push
mov
fnstcw
int3
int
inc
mov
in
jle
push
xor
negl
push
in
push
push
repz
jne
leave
jl
outsl
mov
sbb
or
jnp
push
add
mov
jmp
repnz
dec
pop
add
es
dec
sti
js
in
sub
fs
imul
bound
mov
arpl
push
jmp
mov
out
sub
hlt
cwtl
test
mov
pop
xchg
sub
jbe
and
loopne
add
popf
or
mov
fsubrs
mov
adc
xchg
dec
xlat
test
fimuls
aam
mov
aas
pop
dec
push
dec
and
aas
lods
jno
push
jno
fdivrs
add
jge
pusha
cltd
dec
xorl
add
adc
push
in
outsb
popa
cwtl
mov
cmp
mov
inc
mov
test
sbb
mov
pop
loop
loop
out
insb
jp
sahf
sysret
loop
cmc
int
adc
sub
xor
dec
lret
stc
arpl
pop
xchg
push
lock
xchg
mov
mov
sub
jecxz
stc
adc
or
into
jnp
shrl
push
jno
push
testl
addr16
sub
test
std
xchg
mov
shlb
rorl
cld
rolb
jmp
push
cld
sbb
push
add
sbbl
call
push
fs
test
push
sarl
fisubl
sbbb
adc
and
mov
fs
mov
imul
or
jl
sti
enter
fdivl
adc
and
mov
fbld
in
stc
lea
or
xchg
stos
jo
outsb
mov
mov
stc
nop
inc
push
add
fs
jp
and
jecxz
cli
xchg
stos
sub
scas
pop
call
mov
xor
jnp
pop
mov
jmp
xchg
iret
shl
inc
mov
push
xchg
cmpl
bnd
addr16
push
jb
push
sbb
cmp
xor
mov
push
mov
inc
ja
popf
xor
cwtl
mov
xchg
data16
xchg
mov
jge
or
popf
movsl
movsb
jbe
in
jge
mov
mov
enter
icebp
add
xor
mov
sbb
stc
jle
sbbl
lahf
xor
dec
outsl
xor
lods
xor
fisubrs
loope
push
mov
add
fld
dec
add
popa
mov
push
inc
jmp
mov
mov
popf
lods
cmc
pop
insl
ja
jb
inc
cs
xor
pop
push
popf
jno
stos
stc
pop
xlat
mull
in
shll
xorb
cmp
mov
xor
xchg
add
pushf
movsb
adc
imul
scas
rcrb
sub
dec
bound
sbb
mov
sbb
fidivrl
xchg
xchg
sub
fadds
cmc
rorb
sbb
movsb
inc
push
aas
or
mov
jne
mov
mov
popa
sub
jmp
jnp
cs
xchg
dec
jne
cmp
inc
aas
jbe
mov
sti
int
fnstcw
inc
mov
in
push
lret
lds
aas
movsb
sub
loope
dec
push
sbb
sbb
loop
mov
dec
add
mov
jge
push
cmpsb
stos
cmp
mov
call
in
mov
dec
out
push
es
pop
repz
imul
add
add
dec
imull
out
stos
cmp
ficompl
cwtl
xchg
dec
lock
cmpl
mov
fbstp
or
pushf
cmp
xor
leave
mov
inc
lea
adc
test
mov
xchg
jp
mov
mov
push
insl
lock
frstor
lock
out
xor
cmc
add
imul
or
cmp
mov
cmp
inc
lret
push
lods
xchg
pop
inc
fstps
test
inc
sbb
lods
jb
ljmp
cmp
mov
and
adc
sbb
in
jne
cmp
and
push
in
or
subb
and
mov
inc
push
popf
leave
pusha
aaa
jmp
data16
lret
dec
sbb
cmp
loope
cltd
mov
cmp
mov
and
inc
addr16
xor
xor
jmp
mov
rorl
mov
lcall
gs
scas
adc
repnz
mov
scas
pop
and
mov
popf
test
mov
mov
cs
sub
enter
xorl
add
loopne
add
mov
in
ss
or
enter
ss
push
movsb
ret
dec
loop
test
add
lods
add
add
inc
mov
jne
dec
mov
andb
arpl
scas
dec
lock
repnz
inc
mov
xor
ret
inc
in
push
cmp
sahf
pop
xchg
gs
cmpsl
movsb
inc
fildll
fbstp
adc
out
xor
pop
mov
xor
sub
sahf
mov
cmp
bound
inc
jecxz
pop
repz
mov
mov
or
rclb
xchg
jns
sub
call
dec
jp
rcrb
inc
mov
and
jae
aas
rorl
pop
xchg
mov
mov
lock
jb
idivb
xor
push
push
or
add
fdivs
je
andl
add
popf
sub
cmc
jbe
inc
xchg
mov
jecxz
aaa
sbb
test
mov
push
adc
mov
sub
pop
jmp
inc
jge
jb
in
xchg
mov
mov
xchg
sub
std
mov
xchg
lahf
jg
lods
rcrl
stos
sbb
push
mov
cmp
adc
jb
stc
push
bound
xchg
cs
sub
bound
ja
sub
jg
adc
sbb
mov
jb
pop
enter
sti
out
sub
pop
mov
jg
cmp
add
lcall
cmc
mov
xchg
sub
mov
mov
and
shll
repnz
scas
mov
negl
jmp
into
and
les
mov
sbb
jmp
scas
test
dec
dec
bsr
push
pop
pushf
clc
xchg
pop
xor
and
enter
pop
ret
shll
xchg
hlt
cmp
mov
out
std
test
repnz
or
loopne
inc
test
adc
push
scas
mov
popa
das
out
sahf
scas
pop
mov
dec
nop
mov
cmp
pop
inc
mul
loop
xorl
xor
stos
jl
jge
imul
mov
mov
loope
out
std
popa
out
jle
addl
ret
xor
push
push
mov
cmp
and
sub
aam
cmp
dec
lock
jbe
aam
in
mov
arpl
cltd
sbb
mov
or
or
pushf
std
and
stos
aam
movsl
cmp
xchg
ljmp
add
fst
out
dec
jg
aam
repnz
jg
adcb
inc
shll
adc
inc
neg
out
lret
or
in
dec
sub
bound
add
mov
pop
rclb
loope
int3
jae
in
jb
xchg
cltd
mov
pop
inc
shll
and
movsb
lock
in
movsb
sub
cmpsb
cmp
out
pop
pop
fsubl
mov
xor
xchg
dec
rcll
pop
jno
imul
fprem
or
mov
pslld
enter
loop
rol
mov
dec
push
xchg
push
jmp
scas
cwtl
subb
sbb
nop
cld
fiadds
in
push
lahf
sbb
jp
inc
in
sub
imul
andl
dec
jb
add
fucomp
inc
push
arpl
dec
xor
jle
rclb
pop
add
ja
or
insb
or
mov
pop
ja
int
push
or
loop
scas
inc
clc
arpl
cmp
imul
jnp
jbe
push
pop
shrb
cmpsl
je
jns
add
shlb
lcall
xchg
rcll
or
xorl
fdivl
cs
rorb
mov
xchg
xor
mov
fiaddl
dec
loope
sti
sbb
iret
rolb
jg
add
ljmp
insl
sub
rorb
testb
and
int
mov
loopne
push
insl
ljmp
cltd
xor
or
nop
fildl
jl
movsl
les
shl
sub
xchg
jne
push
sbb
xor
jmp
pop
cs
cwtl
sbb
inc
icebp
sub
and
cmp
in
mov
and
push
cmp
test
in
pop
hlt
outsb
ljmp
mov
shl
pop
pop
pop
mov
daa
mov
subb
inc
jae
cli
mov
mov
adc
push
loop
in
ss
stos
stos
je
jl
popa
scas
daa
xchg
popa
jnp
mov
mov
inc
push
mov
push
xor
and
mov
mov
mov
rcrl
cltd
outsl
mov
movsb
outsl
add
cld
xchg
or
cmc
lahf
jmp
fistpl
in
idivw
lds
test
xor
push
inc
fadds
jecxz
add
jmp
fwait
dec
sahf
test
jg
mov
sub
shll
arpl
stos
add
inc
and
push
push
popf
jecxz
mov
lcall
jo
rol
mov
mov
mov
xchg
dec
fdivl
call
dec
push
mov
sub
mov
testl
mov
adc
sub
into
into
sbb
scas
inc
push
cmp
lods
inc
hlt
movsl
inc
roll
mov
push
fstpl
lds
int3
cs
jne
idiv
cmp
enter
dec
jmp
dec
sarl
stc
nop
or
pop
lret
pop
cmp
mov
incl
pop
lret
sbb
push
cs
cltd
bnd
mov
stos
inc
cmp
repnz
aam
xchg
movb
mov
fneni(8087
ja
cmp
iret
imul
xchg
pusha
mov
mov
fidivs
aam
roll
es
out
push
test
or
or
xchg
sub
sub
sbbl
dec
lea
in
scas
shrl
shrb
xchg
sub
sarl
xchg
scas
mov
fs
push
jmp
mov
jecxz
jb
add
push
push
mov
mov
repnz
inc
jnp
cmp
fwait
ss
mov
pop
arpl
jo
pushl
enter
into
mov
ljmp
jbe
add
ret
and
stos
jbe
sahf
andb
sub
mov
add
fs
dec
and
pop
cmc
cmp
in
sti
xchg
cmp
xchg
mov
add
sub
lahf
jb
cmp
mov
jae
jbe
test
stos
arpl
lret
nop
dec
scas
pop
out
loopne
pop
hlt
inc
mov
enter
dec
and
scas
test
mov
mov
jns
inc
gs
cs
xlat
out
jmp
push
push
icebp
orb
and
adc
pop
fwait
sbb
jbe
and
pop
mov
adc
outsl
enter
jbe
dec
daa
fadd
pop
iret
cmp
mov
nop
mov
push
lods
lock
cmpsb
into
icebp
in
and
stos
sbb
add
jge
xchg
xor
movsb
xchg
test
lea
mov
fdivs
pushf
push
lock
out
mov
add
xor
in
mov
mov
fidivl
ss
and
das
mov
sbb
inc
aam
add
mov
call
jp
ficomps
repnz
xchg
push
shl
mov
pop
loope
adc
cli
push
ret
xor
adc
xchg
lcall
leave
add
in
pop
mov
test
jecxz
pop
jo
mov
cmp
cmc
stc
cmp
and
leave
mov
dec
cwtl
stos
dec
cmpsl
es
jb
inc
in
mov
andb
insl
gs
pop
cmp
cli
lea
stos
ficoml
stc
xor
sub
push
fimuls
push
arpl
das
add
push
xchg
scas
int3
out
sub
int3
pop
jmp
push
adc
ja
test
out
std
inc
pop
cmp
in
cmp
pop
cs
cmp
test
dec
ss
cmpsl
cmp
mov
or
sahf
jle
and
out
lods
inc
aaa
mov
sarl
sbb
dec
sbb
mov
loop
add
push
sbb
cmp
or
ss
and
sub
mov
jno
ret
lret
adc
adc
adc
jl
xor
fwait
sbb
mov
aas
test
xchg
sub
shll
sub
pop
lods
xchg
je
mov
jmp
test
repz
into
in
lea
push
push
and
incb
cmp
xchg
mov
push
roll
dec
imul
ret
pop
xchg
sbb
ja
jnp
imull
inc
jle
jns
xchg
mov
jle
push
sbb
stos
mov
pop
jp
push
int
stos
sbb
and
je
mov
pop
push
adc
inc
testl
or
icebp
push
lods
and
fnstenv
xchg
lcall
sti
push
out
jno
xor
adc
push
lret
adc
js
add
daa
sub
fstpt
stos
pushf
push
inc
mov
clc
push
sbb
mov
and
xchg
hlt
sbb
mov
adc
fucomip
jp
cmp
or
xchg
jecxz
inc
aam
dec
jg
imul
nop
push
shlb
int
sbb
and
add
or
adc
insl
push
fs
xchg
adc
xchg
loop
and
imul
push
mov
pop
insb
cmp
adc
mov
adc
lock
mulb
fisttpll
push
add
lret
adc
jbe
lcall
in
loope
mov
fwait
sbb
and
cld
das
inc
and
inc
mov
cmp
xor
loop
xchg
cmp
insb
inc
mov
and
pop
sbb
into
mov
mov
lods
pop
or
out
jae
mov
pop
jo
scas
mov
mov
xor
cmp
dec
cmc
xchg
adc
out
mov
pushf
cmpsb
sbb
mov
xor
lret
mov
dec
imull
jne
adc
adc
lock
add
xlat
and
mov
add
mov
xor
jnp
mov
das
dec
loope
mov
fdivr
nop
movsb
stos
inc
xor
and
enter
mov
mov
add
loop
test
hlt
push
test
cmp
sub
clc
mov
mov
loop
stos
inc
sub
data16
push
cwtl
out
xor
xchg
xor
jbe
adc
sub
mov
or
add
add
ds
repz
xchg
daa
lcall
je
dec
int
pop
push
jl
pop
sbb
push
or
and
xchg
clc
icebp
pop
lcall
sub
int3
adc
cli
mov
gs
pop
xchg
jp
divl
test
adc
lods
in
dec
lcall
mov
jl
pushf
scas
xor
mov
cltd
push
subl
mov
pop
or
cmc
push
lret
int3
jbe
call
sbb
les
xchg
ja
popf
mov
cmpsl
mov
out
sub
mov
insl
fnstenv
cs
mov
or
cmp
or
add
xchg
nop
and
cmp
cltd
sbb
cmc
mov
and
inc
stos
mov
push
sbb
fcoms
jns
mov
xchg
iret
pop
repnz
mov
jns
mov
xchg
cs
inc
cltd
or
mov
andb
adc
jne
mov
lock
loope
mov
in
outsb
call
mov
fdivrs
imulb
repz
in
fisttps
fwait
push
test
and
js
out
mov
test
sub
dec
mov
jl
cld
adc
adc
rorb
out
jp
insb
rcl
dec
jle
nop
dec
or
xor
pop
and
and
outsl
enter
jle
lds
push
lea
mov
adc
in
dec
pop
inc
popa
mov
or
xor
inc
gs
add
test
sbb
outsb
pop
pusha
in
scas
cmc
mov
aaa
inc
fsub
mov
and
or
push
idivl
les
mov
add
js
or
jle
sub
adc
nop
cmp
dec
jb
cmp
int
push
push
xorl
cmp
sub
pop
cmc
xor
mov
xchg
xlat
jne
or
push
insl
cmc
jmp
adc
sbb
push
dec
inc
sub
jg
pop
sub
inc
ljmp
or
lea
mov
das
add
or
test
mov
out
lea
xchg
mov
cwtl
es
popa
popf
push
clc
popl
mov
shlb
pop
mov
push
xlat
adc
call
xor
mov
add
xor
or
stc
insl
movsb
arpl
adc
jb
sti
adc
xor
pop
mov
xchg
dec
bnd
sub
jl
fnstsw
or
int3
insb
insb
mov
outsl
mov
add
jle
cmpsl
test
ret
clc
enter
ret
jnp
cmp
cmc
jge
add
pop
adc
dec
data16
push
jb
fs
mov
push
movsb
dec
add
sbb
mov
in
add
push
js
push
fwait
mov
rolb
sbb
cmpsl
lahf
xor
hlt
mov
and
inc
ficoml
sahf
dec
int
ds
xor
cmp
jmp
and
cmpsl
das
and
stos
xchg
pop
mov
mov
js
shlb
ret
dec
sbb
inc
fisubs
inc
gs
mov
pop
mov
sbb
xor
mov
cli
xchg
xchg
sub
jge
mov
fidivl
shrl
rcll
xchg
xchg
adc
jl
jns
pop
xor
mov
popf
inc
mov
adc
xor
jle
or
mov
pop
das
repz
mov
dec
mov
pop
icebp
cld
out
imul
mov
imul
push
jge
ret
hlt
cmp
or
cltd
xor
lret
pop
je
loopne
xchg
xlat
jne
dec
pusha
push
xchg
pop
repz
fimull
lock
sbb
push
xor
das
shlb
fwait
jg
or
push
test
andb
jno
sbbb
push
ficomps
mov
jmp
dec
dec
and
jnp
inc
nop
xchg
xor
mov
pop
aaa
cli
test
pop
fistps
fistps
idivb
add
inc
addr16
jl
sahf
or
adc
jno
add
pop
xor
jle
hlt
inc
jmp
nop
sbb
dec
add
sbb
mov
xor
insb
lret
xor
pop
cmpsb
cmp
mov
lcall
out
xor
xor
sub
cmp
sub
inc
mov
fs
imul
je
xor
int3
pop
jb
dec
push
es
push
dec
inc
xchg
sub
cmp
or
das
lds
scas
jae
xor
mov
adc
inc
xlat
xchg
mov
in
mov
cmc
out
inc
faddl
lcall
cmp
outsb
push
lcall
and
mov
sti
or
push
sbb
fdivrs
mov
push
adc
idivb
jle
adc
cmc
add
mov
mov
xorb
out
aad
ja
xchg
dec
andb
mov
sbb
in
push
arpl
jno
mov
lods
in
push
andl
adc
add
fsubrp
or
je
jne
mov
and
scas
arpl
mov
dec
mov
daa
movsb
add
gs
lods
pushf
enter
andb
inc
out
test
test
imul
xchg
jp
dec
jmp
rcrb
call
sbb
aas
dec
or
out
stos
adcl
sbb
or
dec
setne
aad
stos
or
mov
jb
outsl
cli
pop
das
pop
lods
jbe
clc
daa
push
fisubrl
mov
shrb
mov
mov
imul
push
and
mov
mov
movsl
or
ret
pop
std
and
sti
pop
lock
das
ds
scas
jb
rclb
mov
pop
mov
je
pop
cmpsb
repnz
pop
mul
daa
imul
pop
cmp
lods
inc
mov
lret
jb
aad
mov
jns
nop
jg
mov
mov
sbb
jp
jecxz
fcomps
cmc
inc
cltd
xchg
cwtl
inc
mov
jb
dec
cmp
subb
test
dec
push
mov
hlt
mov
xchg
jnp
fisubl
arpl
cmpsb
or
inc
push
fnstcw
xchg
in
cmp
dec
ja
jo
push
pop
in
sbb
jno
cmp
and
sub
sti
mov
movsl
push
mov
leave
icebp
sbb
fadd
xor
aaa
jl
lds
pusha
jl
push
in
xchg
inc
fcmove
dec
icebp
fbstp
popa
cli
dec
cmpb
pop
pop
pop
push
mov
dec
mov
sbb
jne
loop
and
rcr
insl
mov
xor
push
cwtl
inc
push
movsl
dec
mov
jg
push
lret
lret
push
push
call
ja
call
sbb
and
jecxz
xchg
test
ret
mov
loop
or
mov
test
mov
push
mov
imul
cmp
and
push
dec
xchg
inc
dec
out
xor
dec
loope
jl
jo
fldcw
dec
adc
mov
lcall
sub
in
jnp
cmp
mov
mov
xchg
sbb
dec
xor
sub
lret
inc
cwtl
adc
jbe
xor
push
push
or
stc
stc
jl
push
jmp
cli
aad
imul
push
mov
scas
popf
bound
rcll
enter
dec
jne
cmp
fwait
dec
popf
out
cld
data16
push
xchg
and
sbb
adc
pop
rcl
xchg
les
mov
dec
mov
add
and
push
xchg
movsl
insb
add
sbb
inc
mov
movsl
xor
cli
jg
cmpsb
pop
cmc
int3
inc
dec
ja
jnp
push
adc
ja
icebp
lea
or
rol
xor
jmp
mov
daa
or
push
mov
mov
xbegin
scas
push
push
jp
jnp
jb
fs
mov
mov
lret
and
jmp
fistps
sbb
aad
pushf
mov
sub
adc
xor
jne
xlat
inc
adc
xor
push
popf
push
inc
dec
xchg
out
movsb
inc
dec
or
and
inc
push
out
in
test
push
outsb
aas
subb
movl
les
daa
push
insb
xchg
fs
repz
push
imul
or
shll
xchg
les
mov
adc
popf
cmp
sub
addl
popf
lock
push
iret
aad
add
andl
leave
xor
inc
je
pop
or
cltd
idiv
xchg
sub
mov
int
bound
std
xchg
out
gs
inc
in
cs
dec
xchg
xchg
test
int3
std
sahf
sbb
adc
or
mov
push
dec
into
ficompl
sbb
mov
stos
leave
fdivrl
cmp
mov
roll
int3
add
push
loope
and
adc
lods
dec
popa
jbe
es
mov
je
test
add
imul
loopne
scas
cmc
fbld
mov
cmc
or
sti
mov
jbe
cmp
movsl
mov
popf
mov
arpl
scas
inc
fists
sub
dec
jmp
push
push
pop
stos
das
mov
test
out
xor
or
push
imul
mov
arpl
ja
inc
movsl
scas
cwtl
xchg
sub
cld
shll
insl
push
dec
xor
divl
pop
mov
daa
mov
jg
fisubs
cmpsl
and
nop
add
test
int3
gs
std
stos
xor
out
in
scas
push
mov
mov
xchg
mov
mov
stos
shrb
jge
ss
mov
out
cwtl
les
cmc
dec
int
jecxz
sbb
repz
sub
mov
pop
fiadds
fisubrs
pop
scas
or
adc
rclb
sbbl
xor
sbb
xchg
sub
dec
add
dec
mov
repz
loopne
cmp
call
stos
mov
cmpsb
fcompp
das
push
das
mov
aam
push
jmp
ljmp
push
jns
or
xor
jg
jns
imul
cmp
inc
xchg
dec
scas
jge
inc
into
loop
mov
or
test
fimuls
lahf
iret
movl
sbb
outsb
add
outsb
add
mov
inc
clc
mov
mov
sub
xor
pop
dec
and
sti
mov
insb
fwait
ss
int3
in
or
xor
in
push
inc
out
fsts
push
in
mov
inc
jo
push
lcall
xor
enter
xchg
xor
adc
pop
sub
ds
sbb
das
xor
ret
xchg
int
dec
mov
jl
jno
mov
xor
push
jecxz
loop
add
jno
fucomp
sarl
int3
inc
aad
pop
pop
xor
xor
loopne
inc
mov
fcmovne
popa
lods
mov
call
sbb
call
cmp
aad
jg
lret
mov
inc
lods
insb
rcrl
push
or
pop
push
lahf
lods
scas
lahf
int
sbb
jo
loope
out
test
sub
rcl
fsubrl
nop
repnz
outsl
lods
sbb
inc
sbb
cs
loop
push
scas
add
mov
fidivs
sub
lods
pop
xlat
ret
adc
sarb
xor
mov
shll
mov
xchg
test
add
pusha
mov
mov
cmpb
lcall
mov
or
add
sub
or
lock
inc
xchg
adc
xchg
mov
sahf
add
or
das
mov
rorl
repnz
int
sub
jge
fcmovnb
fdivl
cld
fists
andl
mov
imul
das
mul
jnp
push
pop
std
add
sti
sub
and
rcrl
mov
aad
sub
das
push
pop
icebp
dec
dec
push
aas
jb
or
xchg
imul
fcmovne
sub
jno
sbb
cli
imul
xor
jbe
negb
mov
push
sub
in
jne
call
xchg
dec
outsl
jmp
mov
ret
fists
mov
cmpsb
bound
mov
inc
cmc
repnz
lahf
or
ror
shrl
xor
call
shll
sub
clc
mov
sbb
lods
cmp
leave
push
sti
sbb
into
adc
adc
sub
mov
pop
gs
loop
or
fdivp
sub
cwtl
pop
or
mov
pop
pop
subl
cld
xchg
jmp
rcrl
dec
addr16
and
mov
push
incb
inc
and
xor
fadds
adcb
out
jmp
jmp
in
lret
pop
mov
inc
in
add
jae
adc
into
mov
fistl
test
xchg
sub
cmp
xor
pop
adc
out
mov
cmp
decb
jb
cmp
sub
push
adc
jp
insb
xlat
inc
faddp
std
add
sub
rcrl
popa
negl
ss
cmpsb
repnz
sbb
push
fcomi
insl
loopne
ds
xor
ljmp
pusha
push
lcall
jae
sarb
pop
adcl
cmpsl
add
mov
in
sbb
cltd
in
add
jno
sbb
ljmp
adc
jl
test
mov
iret
push
sbb
jmp
hlt
jmp
notl
in
test
push
movsb
loop
and
push
pop
dec
rolb
test
cltd
push
cmp
ss
cmp
dec
add
leave
jmp
or
les
out
sub
lahf
sbb
sbb
bound
and
leave
test
sti
out
and
cmp
outsb
add
add
adc
in
cmp
stc
mov
push
fwait
iret
fldpi
incb
cmp
in
into
or
jg
xor
hlt
dec
or
negb
cmc
mov
ds
stos
inc
insl
push
pop
rcrl
mov
stos
xchg
repnz
xchg
mov
enter
popa
icebp
js
das
imul
rclb
and
jbe
stc
repz
and
movsb
roll
fs
mov
or
jl
enter
xchg
xchg
pop
xchg
repnz
mov
rorb
jge
push
lods
cwtl
xlat
pop
das
aaa
adc
xchg
lret
jne
jb
sahf
arpl
movsb
sub
test
das
adc
test
lret
adc
jns
sbb
shrl
add
mov
dec
ljmp
xchg
aad
iret
mov
xchg
loopne
aaa
sub
inc
movsl
add
mov
xor
aad
ficompl
sbb
fs
loop
loopne
jmp
and
adc
inc
or
jne
xor
mov
sbb
ret
loop
pop
lock
sub
xchg
push
addr16
int3
jge
in
movsb
mov
shrb
ficoms
repnz
stos
mov
aam
pop
lret
sub
in
daa
out
cli
dec
add
pusha
push
insl
lret
xor
call
insb
scas
cmp
data16
inc
inc
dec
push
sbbl
adc
sbb
fnstenv
mov
dec
in
js
cs
xor
and
cwtl
pusha
mov
mov
jmp
push
or
enter
nop
jmp
push
pop
push
arpl
cltd
gs
and
out
pop
insl
insl
push
popf
jp
pop
cltd
aaa
aaa
fwait
pop
inc
jl
mov
dec
in
das
mov
push
test
dec
and
pop
ljmp
sub
and
add
mov
pop
cltd
push
pop
mov
popl
fstp
aas
xchg
fwait
xor
subl
insl
adc
dec
and
sbb
lcall
lds
add
push
mov
sub
sahf
rorb
dec
jge
pop
scas
outsl
adc
sbb
ds
push
movsb
icebp
mov
xlat
dec
loop
aam
popf
arpl
idivl
call
push
add
shr
jne
push
add
mov
fs
sub
aad
nop
mov
cmpb
pop
cld
jle
sbb
mov
xchg
mov
fcomi
dec
mov
lock
sarl
lds
and
sti
mov
mov
jge
inc
cld
inc
cld
adc
ljmp
scas
dec
pop
aam
mov
dec
add
add
stos
hlt
sub
mulb
addl
sub
pop
imul
or
sub
out
cs
in
mov
fnstenv
cmpsl
pop
push
xlat
push
pop
xlat
outsb
inc
test
imul
mov
sbb
mov
dec
mov
inc
sbb
xchg
mov
and
fstp
pop
hlt
mov
pop
jnp
pop
pop
inc
adc
stc
jae
sub
push
arpl
push
lds
popa
divl
pop
mov
or
jle
lds
push
sub
mov
pusha
int
mov
fucomp
inc
sti
data16
out
jmp
mov
loop
mov
hlt
les
ja
add
data16
dec
ss
aaa
leave
xor
repz
inc
cltd
xor
jne
and
push
inc
loope
xor
std
test
mov
leave
pop
or
aam
scas
push
jb
jnp
les
lods
and
sbb
push
shlb
inc
and
push
gs
fldl
add
arpl
popf
in
stos
mov
sub
cs
jmp
mov
and
sarb
ds
push
sbb
jo
repz
stos
jle
and
push
lods
test
pop
insb
repz
scas
incb
jecxz
int
xor
enter
mov
shl
add
push
sub
jno
mov
xor
push
scas
pushf
mov
sub
testb
dec
cmp
cmp
jae
inc
xor
popf
stos
push
into
jne
dec
test
dec
pop
jnp
aas
lods
xchg
pop
jae
repnz
pop
mov
stos
jae
sub
hlt
es
pop
push
imul
jnp
add
jecxz
in
cltd
or
and
pop
xchg
pop
xlat
lds
mov
in
lcall
cwtl
das
xchg
pop
inc
sahf
add
mov
sub
inc
mov
je
mov
jge
lcall
sub
sub
push
push
aam
sbb
test
sub
shlb
xor
out
push
jp
pop
movsb
mov
pop
popa
int
sbb
inc
add
mov
pushf
sbb
lcall
ja
lods
sub
jo
mov
xchg
and
add
xchg
xchg
sub
mov
mov
sub
inc
sbb
int
data16
or
sbb
jle
xlat
adcl
test
rcl
popf
or
xchg
xor
jp
test
cwtl
mov
jb
icebp
ss
mov
adc
int
inc
out
fisubl
and
dec
dec
and
jp
push
fwait
inc
lea
mov
sbb
dec
add
imul
and
mov
div
lea
cs
mov
ja
jl
mov
xchg
mov
pop
ret
push
jg
sub
icebp
mov
xchg
fwait
js
fldl
adc
pop
cld
outsl
jge
jno
cltd
sub
pop
rcrl
and
dec
or
test
inc
out
jno
jno
xchg
xor
sbb
lahf
das
cmp
stos
jmp
sub
or
xchg
cmpsl
push
pusha
xorb
lret
lret
lods
test
mov
leave
cltd
xchg
xlat
lods
std
in
push
sub
xchg
mov
shl
fsts
adc
lds
sbbb
dec
leave
mov
xlat
mov
das
ret
cmp
mov
jg
out
cmc
int3
xor
in
push
fwait
hlt
cmp
js
sub
push
imul
xchg
frstor
in
fcomip
mov
test
imul
xor
daa
pop
xor
inc
adc
sbb
sbb
inc
pushf
in
mov
pop
cmp
xlat
add
lods
cmp
lret
cld
mov
adc
mov
sbb
fucomp
push
pop
adc
cld
or
inc
test
dec
inc
fnstsw
xchg
push
out
nop
fwait
nop
push
test
leave
adc
mov
lahf
mov
repz
insl
jp
xor
cmpsb
imul
inc
mov
movsl
cmp
dec
sbb
ljmp
sbbb
into
cmc
dec
pop
ror
push
pop
mov
ficoms
mov
jb
inc
add
cmc
cmp
pop
jl
stos
inc
pop
scas
xor
daa
xchg
push
and
lret
fnsave
add
cltd
xor
jbe
imul
cmp
cmc
adc
adc
ljmp
out
mov
mov
mov
cmp
cmp
loop
push
iret
addl
movsb
arpl
test
dec
sub
mov
sub
stos
scas
inc
fcoml
mov
shl
lcall
sub
xlat
and
leave
lret
daa
nop
jmp
inc
inc
mov
ljmp
cs
lret
mov
mov
jmp
dec
fs
xchg
jecxz
jecxz
adc
mov
mov
enter
mov
jb
mov
pushf
dec
pop
mov
mov
fdivs
pop
test
fistl
and
jae
shlb
addb
and
arpl
pusha
cmpsl
das
fadds
rcrb
push
popl
cli
popf
xor
xchg
inc
or
test
repnz
pushf
push
jno
adc
add
or
out
dec
lret
mov
and
mov
dec
sarl
repz
or
mov
test
adc
xchg
adc
cld
lcall
cmp
ja
xor
cmp
sahf
das
add
popa
mov
sub
negb
loopne
push
movsl
shrl
xorb
adc
into
sub
incb
sub
popf
je
mov
clc
xchg
and
lcall
stos
sbb
cmp
mov
dec
push
lods
jnp
mov
add
fldcw
shrl
mov
pusha
jecxz
scas
mov
sub
and
xchg
inc
push
mov
ss
dec
ljmp
cmp
sbb
fbstp
cltd
jl
leave
or
aad
mov
jg
lcall
mov
dec
pop
mov
push
stos
mov
and
cmc
dec
incb
cmp
mov
add
xchg
adc
inc
repz
add
lret
or
imul
lret
testb
and
lock
jae
imul
int
clc
sub
sub
iret
mov
fcomp
jo
in
cmp
testl
out
xchg
es
push
scas
inc
sub
sti
sti
out
out
mov
mov
test
adcl
xor
outsl
xor
mov
pop
mov
jecxz
and
pop
call
adc
or
xchg
jae
xlat
jle
pop
cli
adc
xchg
pusha
pop
ret
in
sub
adc
cmp
je
movsb
jb
push
or
lods
das
and
out
push
mov
stc
fs
fistpll
ljmp
movsl
int3
cmp
cmp
jg
sub
inc
mov
xchg
sub
xchg
cltd
mov
sbb
lods
dec
jns
jae
stos
scas
dec
rcrl
ljmp
jle
lods
in
add
je
inc
mov
mov
into
enter
lret
stos
cmp
dec
adc
push
xor
flds
cld
in
scas
je
mov
adc
xchg
lods
or
cmpsl
lret
sub
and
in
jbe
add
push
lods
inc
xchg
jne
data16
sbb
scas
pop
outsl
call
mov
jb
mov
mov
cmpsl
sub
inc
out
xchg
test
mulb
and
enter
adc
xor
or
jne
ja
push
shr
lahf
ret
sub
mov
ficompl
movsb
push
inc
mov
lret
xor
jbe
push
pop
and
jmp
inc
rolb
fldl
aas
mov
jmp
mov
movsb
or
xor
sar
aaa
dec
pop
dec
sub
dec
adc
scas
mov
xchg
xchg
pop
adc
mov
data16
sbb
nop
mov
mov
adc
add
mov
je
mov
jnp
test
jp
pop
jns
pop
stos
push
stc
js
lods
lret
ljmp
xchg
stos
out
loop
and
adc
xor
sub
pop
in
dec
outsb
lret
cmpsl
pop
cmpsb
mov
mov
mov
ret
adc
jmp
add
mov
pop
mov
lods
mov
pop
inc
pop
sbb
mov
sbb
mov
sub
negb
shrl
fwait
xor
imul
jmp
dec
inc
xlat
jle
jle
dec
mov
mov
shl
mov
dec
push
sbb
or
jmp
rclb
mov
imul
jne
dec
fwait
add
jns
pop
imul
inc
dec
inc
cwtl
add
or
jne
or
rcrl
rclb
out
in
pushf
mov
shl
cmpsl
cmp
xor
fnstcw
cmp
mov
xchg
xchg
stos
xchg
sub
das
aaa
mov
xchg
lds
xor
mov
bound
xchg
ja
sbb
stc
rcr
xor
pop
cmp
mov
pusha
pop
jp
nop
xchg
sahf
jno
out
pop
rolb
rcrb
das
mov
inc
sahf
pop
jnp
cmp
cmpsb
movl
mov
in
mov
int3
sbb
xor
jecxz
inc
mov
iret
mov
dec
nop
jle
data16
mov
sbb
xor
jl
rcrl
mov
lcall
sbb
xchg
pop
sbb
ret
mov
sub
es
sbb
das
lock
iret
popa
data16
mov
xor
dec
pop
test
push
xor
push
or
das
aaa
int3
pop
adc
jnp
sbb
ljmp
and
sub
dec
movsb
pop
ja
outsl
dec
mov
adc
hlt
jle
cmpsl
cmp
add
pop
inc
jle
outsl
es
inc
jmp
or
cltd
mov
out
or
outsl
fcmovne
add
sub
mov
inc
jns
or
jb
into
gs
xchg
mov
ficompl
ds
sub
popa
clc
jo
mov
mov
ljmp
xlat
push
push
stc
pop
je
or
jle
dec
pop
sahf
jg
xchg
ja
dec
ret
mov
xchg
xorl
mov
pop
mov
sbb
lea
mov
mov
inc
andb
mov
sbb
push
mov
leave
pusha
mov
or
cmp
outsb
lret
or
testl
daa
ds
aad
aas
cmpsb
sub
test
and
dec
ja
roll
mov
jg
imul
ss
jecxz
fisubrs
stc
mov
push
push
mulb
addb
adc
pop
aad
inc
inc
idivl
js
insl
inc
popf
stos
mov
mov
push
and
jl
cmp
and
xchg
insb
inc
or
dec
lret
jae
sub
shll
enter
shl
push
ja
aaa
pop
xor
pop
sarl
dec
scas
jecxz
and
mov
push
lcall
cwtl
das
arpl
sub
dec
negl
pop
fwait
push
test
imul
inc
lea
int
loopne
popl
mov
push
adcb
and
movsl
sbb
sub
xchg
pop
in
imul
add
repnz
xchg
cli
popa
xchg
add
dec
adcb
pushf
shl
clc
add
mov
repz
push
and
push
insl
into
aad
adc
mov
sub
mov
iret
inc
push
dec
sub
jnp
andl
push
iret
pop
data16
and
push
lcall
pop
mov
sahf
lret
mov
xchg
mov
cmp
mov
adc
ss
and
mov
dec
cltd
xor
jb
out
fnstsw
mov
fdivs
fsubs
int
or
popa
sbb
mov
pop
dec
jecxz
dec
jge
cs
out
lcall
xor
mov
dec
cmp
cmp
flds
imul
lcall
pop
jno
mov
aaa
push
jns
iret
jge
out
test
pop
pop
shlb
pop
and
and
push
in
aas
pop
int
push
out
outsb
and
mov
pop
testl
xor
ljmp
inc
mov
push
xor
mov
xor
mov
xor
inc
inc
cmp
cmp
stos
push
jg
data16
test
add
int
cwtl
lods
mov
arpl
js
fsubrl
inc
pop
push
jno
xlat
rcrb
sbb
jge
out
lods
lcall
jns
xor
cmpsl
or
ja
icebp
sbb
push
jmp
sub
sbb
adc
pop
jle
inc
dec
repnz
out
lret
fdivs
into
adc
and
subb
push
in
xchg
sub
ret
or
dec
xchg
push
jecxz
push
jmp
lret
punpckldq
pop
adc
dec
shll
int3
dec
xor
iret
jbe
scas
and
mov
fdivrp
xchg
adc
adc
jae
cwtl
testl
daa
jl
or
jne
test
add
sbb
pop
jo
cmp
inc
mov
mov
ret
leave
and
adc
notl
add
and
out
push
add
dec
daa
push
ficompl
inc
inc
into
test
and
notb
mov
cs
xor
push
cmp
popf
cmp
in
stos
loopne
popf
out
inc
in
inc
shlb
jl
dec
pop
dec
push
scas
int3
loope
gs
xor
repz
jg
jo
in
pop
lods
ds
push
add
xchg
mov
jno
mov
test
pop
sbb
repnz
aas
stos
jne
lahf
leave
dec
add
pop
adc
mov
adc
lcall
mov
scas
xor
shlb
or
mov
xor
push
add
imul
dec
fs
sbb
xlat
aaa
insl
push
stc
mov
iret
cmp
cli
movsb
mov
decb
negl
and
cli
fs
mov
ret
jno
cmp
jmp
inc
jne
fnstcw
pop
mov
shll
mov
xchg
or
sub
popa
or
sbb
sub
negl
roll
push
jb
sub
sbbl
and
mov
add
adc
test
sahf
fs
jb
push
adc
scas
lcall
sarl
adc
not
adc
jmp
repnz
inc
sti
jns
jns
insb
adc
mov
push
push
jg
jo
jne
mov
mov
mov
cmp
icebp
xchg
jbe
scas
fmul
int3
jg
and
jo
jmp
push
mov
or
sbb
lds
mov
testb
jne
lods
and
dec
push
iret
mov
adc
or
cmp
out
mul
aam
pusha
mov
jno
and
int3
mov
int
cmp
out
mov
inc
int3
inc
push
dec
xchg
push
in
mov
int
ja
jne
jne
scas
adc
push
pop
daa
daa
out
daa
or
cmpsl
xchg
and
cmpsl
int
push
inc
xchg
stc
fdiv
and
mov
scas
jno
adc
dec
cltd
cld
xor
add
filds
shlb
aad
enter
jno
mov
adc
ss
cmp
or
ss
dec
push
adc
ja
popa
push
ficomps
iret
jge
rcr
push
pop
pop
xchg
fistps
test
and
popf
xchg
pop
shrl
out
mov
cld
call
outsb
xor
data16
dec
push
jmp
test
test
pop
mov
lods
dec
mov
rcl
lock
inc
dec
iret
call
test
mov
sbb
jle
fucomi
int
or
sub
addr16
dec
sahf
lea
pusha
scas
dec
pop
jp
mov
jle
jmp
mov
fcmovbe
sub
add
testb
mov
jo
sbb
aas
inc
ficompl
cli
popa
shrl
add
lock
xsha1
cmpsb
dec
add
out
dec
pop
mov
mov
jae
sub
mov
sub
xchg
xor
pop
hlt
xchg
jne
cmc
sub
mov
push
push
and
in
xor
fs
push
jae
mov
lahf
subl
fmull
and
jg
ljmp
mov
jmp
mov
stc
mov
jno
mov
enter
int3
adc
dec
add
cmp
mov
icebp
push
jnp
push
dec
rorl
push
leave
sahf
push
jecxz
fidivl
pop
add
pop
lret
pop
bound
dec
mov
sub
sbb
mov
lods
and
or
jmp
out
fmul
inc
je
adc
repnz
or
fcomps
xor
movsl
or
loope
outsb
out
lds
cmp
aaa
xchg
lods
scas
arpl
pop
dec
loopne
add
lahf
dec
aam
repnz
test
ror
pusha
xchg
gs
adc
add
jo
popf
leave
push
movsl
push
and
sub
cwtl
inc
dec
shl
adc
sbb
bound
jl
push
mov
arpl
and
xchg
and
dec
out
xchg
jge
stos
shl
pop
add
outsb
lret
and
mov
xchg
xchg
das
push
in
add
cmp
sbb
xor
add
insb
dec
xchg
dec
dec
js
daa
add
sub
or
popf
or
std
sbb
mov
fsubrl
shll
pop
xchg
dec
loopne
jmp
repz
inc
push
call
in
mov
cmp
shlb
jl
repz
fbstp
add
pop
sbb
aas
in
jns
shll
dec
pop
fldenv
jecxz
cmp
lods
cld
dec
dec
fsubrl
inc
fcoms
xor
xor
mov
stc
std
cmp
xor
pop
insb
addr16
out
xchg
ret
repnz
push
push
cwtl
dec
cmpsl
mov
cmp
outsl
outsb
das
rol
test
xchg
div
pop
ret
sbb
or
push
push
movsb
repz
and
and
jns
jb
shrl
rcrb
add
idivl
mov
push
shl
icebp
movsl
mov
enter
es
push
lahf
lret
xchg
sbb
cmpl
cmpsb
rorl
testb
mov
pop
scas
or
sub
jbe
xor
incb
fcoms
aaa
add
bound
iret
push
xchg
sub
adc
sub
out
imul
pusha
pop
movsl
mov
sbb
popa
and
iret
pusha
test
sub
sbb
cmpb
daa
pushf
dec
movsl
mov
mulb
std
and
fs
mov
stos
inc
inc
leave
mov
sahf
outsb
cmp
push
nop
jle
cmpsl
out
out
cmc
pop
das
mov
mulb
xchg
int3
ret
mov
dec
adc
push
in
pop
xor
cld
mov
mov
jbe
adc
aam
cmpsb
push
or
pop
jo
sub
subb
imul
push
icebp
sbb
mov
test
popf
add
add
and
cli
mov
sub
cmp
xchg
mov
hlt
cmp
dec
push
jbe
add
xor
repnz
inc
mov
sbb
fadd
cs
pop
leave
adc
aad
add
and
dec
sahf
dec
fisubrs
idivl
xchg
das
bound
repnz
loope
pop
push
add
mov
lcall
xchg
push
inc
clc
shll
dec
mov
push
pop
sub
out
add
mov
push
cmpsl
jne
shll
dec
in
dec
das
stc
push
stc
insl
cmpsl
les
push
ret
clc
jecxz
imul
push
mov
sub
push
mov
hlt
mov
movsl
jl
inc
cli
iret
dec
push
add
aaa
jo
pop
pop
cmpb
jbe
pop
xor
lds
insl
data16
cmp
andb
push
daa
mov
add
xor
mov
sahf
clc
nop
add
jne
mov
inc
cmp
lds
bound
loop
pop
aaa
shl
divb
sbb
in
out
fwait
jne
pop
xorl
mov
mov
mov
sub
mov
inc
push
imul
xor
push
sbbb
popa
inc
pushf
pop
cmc
scas
hlt
jb
les
push
jb
decb
xchg
mov
ss
stc
jo
adc
testl
pop
xlat
jbe
lea
cld
fldcw
push
mov
cmpsl
dec
adc
enter
rep
jl
inc
xchg
adc
mov
push
arpl
sub
nop
lock
add
and
and
xchg
adc
into
insb
cmp
xchg
push
mov
out
sbb
sub
fcmovb
jae
pop
sarb
outsb
int3
mov
or
pop
dec
push
rclb
shlb
xchg
out
lods
push
aaa
int3
jmp
mov
jge
repnz
mov
popf
rcrb
and
mov
sbb
add
lret
add
add
in
mov
arpl
shrl
ds
aad
pop
stos
inc
add
xchg
ljmp
loopne
andb
mov
jp
xor
pop
jg
out
ret
jae
test
movsl
dec
sbb
insb
cmpsb
cmp
dec
shl
sbb
sbb
inc
notb
movsb
fcomps
mov
std
xchg
dec
mov
pop
mov
push
ret
mov
fcmovu
xor
aam
xor
fimull
xchg
in
mov
xlat
add
add
test
pop
dec
loopne
aam
add
stos
notb
loopne
lea
mov
mov
xor
mov
sub
or
xchg
adc
cmp
orb
sbb
out
lea
push
out
test
mov
push
hlt
sub
sbb
or
repnz
sahf
popf
ds
int
dec
inc
cmp
aam
mov
loopne
lods
roll
jmp
mull
out
jne
imul
subb
xor
aad
jecxz
rcll
imul
pushf
fbld
xchg
cmp
lds
clc
mov
push
and
mov
push
xor
jp
test
ds
mov
outsb
imul
inc
pop
sub
out
and
add
es
jecxz
fdivs
cmp
adc
rorb
add
pop
repz
cwtl
imul
clc
jle
lea
rcll
push
mov
jnp
pop
push
lret
cmp
cltd
in
lds
testb
or
fldcw
ss
inc
lea
inc
add
out
aas
cmpsl
imul
mov
push
mov
lea
cltd
call
or
outsl
mov
jmp
mov
test
push
and
call
bound
std
cld
dec
jecxz
pop
xor
and
dec
pop
pop
mov
jmp
push
aam
push
jmp
xor
movsl
gs
cmp
test
pop
stos
mov
lock
stos
data16
push
mov
js
push
imul
inc
mov
push
fdivs
out
les
repnz
mov
mov
les
testl
jnp
inc
lods
xchg
add
int3
arpl
mul
dec
data16
cmpl
or
and
lahf
or
sahf
push
sub
sub
ret
mov
jae
mov
xchg
aaa
into
ret
nop
outsb
push
andb
data16
jnp
sbbb
mov
jne
cmp
push
mov
add
in
pusha
push
stos
ss
test
jno
test
loop
xor
addl
mov
sbb
scas
sbb
testb
popl
or
jmp
lods
push
xchg
fsubp
jb
pop
movsb
mov
jge
jg
daa
sbb
and
xor
pop
cmpsb
pop
lret
push
sub
sti
pop
xchg
stc
xor
sub
outsl
ret
xor
aaa
pop
mov
push
fistpll
mov
sub
or
mov
mov
mov
shll
xor
dec
mov
scas
mov
xor
push
adc
sarl
mov
cltd
adc
fcomp
sub
mov
std
xor
out
in
dec
mov
mov
add
sub
repz
enter
ficomps
lds
ljmp
iret
mov
mov
or
cmp
mov
pop
add
lds
adc
pop
push
repz
adc
dec
lahf
inc
fcompl
push
imul
and
movsb
cmp
in
ja
inc
aaa
movsb
lods
cmpsl
adcl
fnsave
xorl
mov
dec
in
aam
incb
leave
adc
testb
push
jno
fdivl
xchg
fldcw
das
shrl
scas
hlt
in
fidivs
inc
rclb
loop
pop
lock
inc
out
loope
sub
mov
fdiv
aam
dec
mov
mov
fwait
cmp
fsubrs
pop
repz
or
rcrb
xor
mov
out
inc
das
and
push
or
aas
bound
jbe
sbb
push
inc
inc
dec
adc
and
mov
add
ror
test
lret
jo
es
je
and
pop
dec
cmp
jg
movhlps
jl
xor
rcrb
mov
inc
and
and
adc
stc
popf
nop
int
fsts
and
and
into
jno
jge
push
dec
stc
mov
inc
sub
mov
sub
cmp
aam
es
push
cmp
xchg
sub
and
push
dec
xlat
loopne
ret
xchg
sahf
adc
cs
pop
movsl
ret
dec
sbb
rcrl
dec
pop
int3
ret
enter
outsb
into
mov
rclb
xor
mov
sbb
fucomi
cmp
enter
stos
ficomps
or
sub
sub
xchg
lods
pop
lcall
dec
movsb
push
call
sub
nop
mov
mov
add
movsb
push
pop
rorb
dec
out
mov
fidivrs
pop
ss
mov
inc
stos
jecxz
mov
add
test
mov
push
mov
xchg
cs
mov
rorb
das
adc
fisubl
out
mov
and
cmpsl
or
dec
inc
jb
add
and
clc
adc
pop
je
inc
pop
mov
sti
add
arpl
cmp
lock
std
xor
xor
mov
pop
push
xchg
pop
cmp
xchg
dec
push
pop
or
or
mov
and
cmp
xchg
adc
or
fadd
xor
insb
sub
mov
dec
mov
loop
fisubl
shlb
enter
popl
fdivs
pop
pop
out
nop
stc
in
ret
or
jecxz
stos
and
movsl
fs
xor
daa
jb
pop
test
mov
push
ret
jbe
aad
mov
frstor
ljmp
cmp
daa
push
inc
or
dec
sub
pop
add
outsb
jno
cmp
mov
xlat
ds
mov
clc
mov
lret
or
xor
lds
mov
daa
jnp
or
inc
testb
jl
cltd
pop
mov
hlt
push
faddl
mov
lret
mov
rol
insl
pop
jno
insb
pop
jne
pop
adc
xor
mov
push
inc
testb
movsl
mov
insb
or
pop
xchg
sahf
jno
iret
mov
xchg
xchg
pop
notb
add
sbb
ljmp
cli
fsubs
pop
mov
mov
mov
shlb
mov
inc
test
and
popf
push
fmull
pop
push
into
movsl
add
mov
lods
adc
adc
loop
arpl
test
out
jge
sub
jbe
cmp
lcall
and
xchg
andl
or
lods
cmp
les
ds
insb
in
mov
ret
inc
sti
mov
sub
iret
les
movsb
das
sbb
push
lods
ss
add
sub
dec
fucomip
rorl
mov
fildl
fistpll
mov
xor
dec
fiadds
jge
ss
in
push
arpl
or
imul
pushf
icebp
mov
xor
xor
inc
adcb
cmp
pop
jge
xchg
and
xor
hlt
popa
or
roll
cmp
out
xlat
gs
insl
into
cmp
lcall
fmuls
xor
dec
mov
int3
dec
pop
shrb
sub
pop
mov
pop
je
lods
mov
add
je
cmp
push
jmp
psubb
push
movsl
fisttpll
loopne
sbb
jo
xor
shrl
fistps
fnstenv
dec
sarl
fdivrl
mov
adc
out
mov
xchg
imul
call
xlat
jl
into
stos
fidivrs
mov
mov
mov
fildll
shrl
xchg
aas
jo
cmp
mov
mov
test
push
push
faddl
or
scas
xchg
in
inc
ljmp
jno
or
leave
mov
gs
mov
inc
add
outsl
out
jge
push
mov
add
mov
pop
adc
mov
mov
fsts
dec
lea
dec
xor
or
push
rol
xchg
mov
ss
xor
insl
pop
sarb
push
fbld
les
mov
pop
mov
sub
push
push
imul
mov
popa
call
cmp
dec
vucomisd
hlt
jecxz
out
out
int3
fsubrp
scas
aas
mov
test
hlt
mov
push
sub
sbb
push
mov
cmc
xor
push
in
xor
adc
pop
lcall
repz
add
mov
jl
fiadds
test
push
or
movsl
imul
mov
sar
lret
imul
mov
mov
push
call
in
fxam
pop
cmpsb
ficomps
xor
xor
adc
fdivp
xchg
in
lcall
mov
jp
or
xchg
xor
sub
packssdw
cld
mov
dec
stos
mov
fwait
xor
pop
mov
xor
sbbl
insl
ja
add
or
stc
rcll
xchg
mov
dec
pop
movsb
rcl
and
xchg
cmp
aas
xor
xchg
mov
cli
jnp
rcrb
enter
stc
icebp
gs
loop
sub
mov
int
loope
inc
sbb
add
rorb
adc
rol
sub
into
daa
cmpl
and
into
jp
pop
jle
sahf
inc
shll
pusha
mov
enter
xchg
jns
cmove
inc
xchg
lahf
or
xlat
aad
add
push
xchg
stc
addr16
std
mov
add
pop
sub
mov
inc
and
xor
ficoml
movsl
jle
push
popa
fidivs
fldenv
pop
inc
push
andl
call
outsl
std
jo
sbb
stc
movsb
pop
xlat
xchg
lods
add
stos
or
sbb
mov
push
out
in
jmp
or
mov
test
lea
mull
in
ja
ja
sub
and
in
push
aaa
lcall
insl
in
add
fisubrl
les
lods
jg
ss
rcrb
shlb
enter
frstor
sub
xor
adc
dec
ud2
jns
sub
mov
shr
sbb
mov
sbb
push
push
pop
fildll
pushf
sbb
cmc
sahf
stos
and
and
jo
mov
jbe
xchg
xor
sbb
aam
push
push
popa
mov
adcl
jle
test
shll
fisubl
rcrb
push
stc
pop
adc
dec
mov
dec
int
mov
jbe
or
mov
add
or
test
push
xchg
mov
out
inc
loope
pop
jp
aas
enter
lock
xchg
adc
adc
aad
test
jbe
aam
and
pop
cmpsb
jb
sti
jp
push
mov
push
cmp
clc
mov
cmp
mov
imull
xor
clc
lcall
stc
push
leave
pusha
enter
add
out
dec
mov
xchg
cmc
sbb
loope
dec
push
lret
mov
js
mov
mov
icebp
stos
stos
sub
lock
pop
mov
in
mov
movsb
ja
movnti
dec
pop
and
rorl
jbe
repz
imul
test
ds
imul
inc
cmp
cmp
aad
pop
adc
jg
cmp
and
push
xlat
mov
mov
shll
int
mov
sub
iret
mov
add
repz
jl
dec
xor
test
xchg
and
cmp
icebp
sahf
xor
inc
lahf
xchg
inc
add
and
iret
bnd
xor
imul
xor
cmp
call
sub
add
mov
add
push
lock
mov
insb
out
inc
sbb
push
jo
aaa
push
jae
imul
sbb
daa
jno
movsl
sbb
sbb
in
int
cmp
pop
xor
loopne
fstl
rcl
bnd
in
std
pop
mov
lods
mov
mov
jl
dec
jecxz
popf
and
mov
pop
fstl
cmp
xor
xor
js
rcrb
pop
mov
cmpsb
mov
enter
sarb
cmp
loop
fmull
cmp
ja
popa
jg
sbb
push
jne
cmp
sub
pop
jne
stos
sahf
cmp
sub
push
fisttpll
repnz
mov
loope
int
push
or
sub
pop
push
lea
jbe
push
add
push
lcall
nop
inc
sbb
mov
sti
rcrl
out
les
cwtl
arpl
mov
loop
sbb
std
cmp
cmpsb
psubsw
cmpsl
test
testl
sbb
outsb
push
xor
insl
jmp
insb
add
or
dec
ret
or
mov
test
mov
mov
push
clc
mov
aas
pop
xchg
or
cltd
add
lret
std
popa
pop
stc
xchg
stos
outsl
pushf
fldl
ret
pop
popf
es
and
shlb
cmp
xchg
pop
inc
sub
outsl
pop
shll
jmp
lcall
xchg
lods
ret
cltd
jmp
push
add
mov
movsb
or
dec
shll
aaa
mov
jns
pop
xchg
cmp
or
test
sub
cmp
add
imul
enter
lock
xchg
daa
cmp
movsl
pop
dec
lea
sub
mov
adc
popa
jle
mov
add
jae
adc
mov
ja
push
loopne
int
adc
les
mov
push
enter
cmp
enter
cmp
mov
sub
pop
test
es
pop
sub
push
cmp
fistpl
xchg
outsl
xorl
enter
out
xorl
or
xlat
loopne
cli
dec
mov
inc
subl
mov
mov
dec
fists
lcall
fldcw
push
test
lea
and
jbe
sbb
mov
stos
mov
mov
shl
pop
lret
imulb
in
call
sbb
push
out
pop
test
pop
and
jbe
es
es
mov
xchg
sbb
pushf
xor
jp
mov
ficoms
and
cmp
rorl
mov
dec
ja
nop
setnp
cmp
xchg
icebp
ss
pop
out
pushf
push
xchg
add
or
push
inc
call
and
add
fucomip
call
xor
dec
aad
nop
popf
cmp
sub
push
add
sub
jge
lea
lret
sub
into
xchg
mov
mov
fldl
mov
inc
gs
mov
cmpsl
inc
mov
fisubrs
pop
lea
in
dec
jl
cltd
jle
dec
fwait
jle
arpl
fcomp
push
or
stos
into
jne
push
mov
jmp
neg
das
jne
aad
movsb
cmp
pop
je
bound
mov
lcall
xor
repnz
cmc
aaa
loope
cmp
sub
je
je
push
jb
inc
pop
add
mov
aaa
ss
icebp
dec
adc
jae
sub
jbe
jecxz
jae
js
mov
out
arpl
notb
cmp
sub
pop
fcoml
enter
lret
jl
icebp
js
jl
and
js
lods
ret
pop
push
ss
dec
dec
inc
in
push
lock
mov
hlt
jp
sub
aam
fmull
jp
repnz
out
and
test
in
pop
and
adc
xor
ljmp
loope
inc
push
popa
int
or
clc
lods
mov
pop
sub
stc
jmp
aaa
mov
and
jmp
inc
sahf
jb
nop
mov
mov
icebp
addr16
lret
lret
test
stos
js
or
inc
pop
daa
test
sub
fcompl
mov
cmp
test
in
sub
jns
gs
or
es
repnz
mov
imul
sti
daa
popf
and
or
mov
jns
push
add
mov
lcall
jne
jb
inc
adc
jmp
mov
fnstenv
imull
and
imul
add
roll
repnz
loop
push
sub
aaa
call
lret
inc
pop
nop
je
std
xchg
stos
mov
fucom
mov
mov
mov
jecxz
imul
sub
mov
insb
mov
sbb
push
pop
orb
inc
push
mov
insb
fs
pop
dec
aad
cmpsb
pop
cmp
imul
pop
mov
pop
xchg
test
cmp
dec
jo
int
sub
movsl
dec
mov
rcl
jae
imul
inc
inc
mov
loop
clts
and
jo
adc
andb
in
and
stos
jno
sub
idivl
and
pop
movsb
xchg
xchg
hlt
pop
mov
jns
mov
pop
clc
jae
mov
and
out
inc
aam
lea
pop
lods
inc
cmp
adc
ljmp
fsubl
pop
es
lods
in
out
jne
dec
in
ret
loope
xor
clc
mov
push
xor
loopne
mov
inc
push
mov
shrb
or
jmp
jle
push
mov
outsb
clc
or
sub
mov
xor
into
sbb
aad
in
add
inc
in
pushf
popa
pop
gs
jl
dec
sahf
enter
cmp
mov
fnstenv
dec
pusha
sbb
out
adc
cmp
in
push
lahf
stos
jl
sub
add
iret
jecxz
pshufw
fwait
push
in
sub
es
cmp
cld
mov
xor
popf
jecxz
jl
or
mov
add
mov
hlt
sub
pop
push
test
icebp
je
and
sub
cld
pop
adc
ret
add
mov
push
test
pop
push
mov
lods
fisubrs
pusha
push
clc
sub
ds
std
scas
or
clc
inc
pusha
testl
je
mov
xlat
int
xchg
push
divb
mov
idivb
ret
dec
dec
insb
xor
push
icebp
movb
xchg
aas
lret
and
pop
ss
cmp
je
nop
push
add
in
and
stc
or
xor
push
add
xor
loopne
lret
push
inc
mov
test
or
cmpsb
nop
sub
out
fcomps
mov
lcall
cs
jl
fisttps
and
push
daa
pop
cmp
int
mov
sub
pop
push
clc
xchg
sbbl
pop
mov
mov
xchg
xchg
cmpsl
popf
decb
push
mov
mov
ret
sub
std
pop
add
pop
les
sub
pop
xor
jg
aam
mov
orl
or
mov
iret
sub
out
test
lods
cmp
subl
enter
shlb
dec
call
or
mov
dec
out
aam
in
mov
and
mov
adc
inc
inc
insl
push
test
pop
jmp
xchg
and
shlb
movsl
rcr
sbb
mov
insl
cmpsb
out
jg
js
cli
sahf
xchg
in
sub
pop
out
in
mov
in
rcl
cwtl
out
mov
jae
jne
push
cmpsl
lods
cli
dec
push
int3
jns
fs
lock
scas
jne
sbb
cmc
popa
and
and
aam
sub
xchg
nop
mov
popa
pop
icebp
dec
jge
lods
xchg
pop
jb
bound
dec
ljmp
into
test
sbb
sbbb
push
ds
aaa
lahf
add
dec
inc
fsts
dec
mov
ret
sbb
pushf
xor
dec
mulb
cmp
mov
into
sub
in
jecxz
cltd
pop
lods
jno
xchg
cld
sub
lods
mov
ss
xchg
mov
enter
push
dec
jecxz
imul
sbb
xlat
das
inc
or
xchg
mov
shll
dec
lret
push
cmpsl
dec
loope
mov
jnp
push
xchg
and
dec
lret
lret
sbb
enter
movsl
mov
ficomps
cmp
fstpl
inc
sti
nop
repz
jns
pop
scas
fsubrs
ss
mov
lret
xor
pushf
stos
pop
cld
shl
mov
xchg
xchg
jbe
jg
lret
sti
mov
xchg
mov
ja
adc
jecxz
jo
jl
bound
into
and
lea
jbe
rclb
dec
js
mov
mov
pop
adc
dec
mov
fabs
sbb
push
movsl
mov
out
loope
out
push
in
test
daa
jb
pop
sub
xchg
nop
or
cli
pop
inc
repz
popf
adc
push
xchg
add
cltd
or
add
xchg
adc
scas
rcrl
pop
or
popf
mov
pop
arpl
sub
dec
idivb
ret
push
repnz
jnp
or
mov
mov
pusha
cwtl
lds
outsb
cmp
roll
sub
pop
ljmp
lret
shlb
in
and
add
rcll
adcl
lds
sbb
jns
xlat
and
push
mov
ret
push
js
jl
imul
jg
inc
jb
sbb
shll
js
xor
stos
stos
popa
and
bound
and
jnp
arpl
cmp
sti
pop
jp
cmp
pop
out
repnz
adc
fwait
inc
inc
dec
bnd
out
call
jb
rcpps
mov
dec
popa
clc
jge
into
pop
sbb
lcall
and
stos
divb
and
fwait
imul
add
fistpll
movsb
cmp
fs
mov
sub
xchg
shrb
fwait
mov
adc
data16
leave
das
mov
inc
into
fdivl
shl
incl
imul
cld
lock
lods
add
cltd
std
xchg
lods
pop
pop
pop
add
mov
dec
or
iret
fldenv
jne
shr
mov
pop
push
insb
nop
xor
xlat
lods
popa
fdivr
or
inc
punpckhwd
and
adcl
shrb
pushf
into
dec
repnz
mov
out
imul
mov
add
popf
movsl
sbbl
push
fcmove
xor
repz
fs
stos
mov
ror
cltd
mov
clc
xchg
pop
lods
jge
not
mov
pop
mov
hlt
into
jo
cld
pop
out
cmp
jns
daa
pop
jle
addr16
sub
jne
fsts
lods
pop
xchg
int
mov
mov
movsb
sarb
push
lcall
ret
hlt
adc
pop
mov
aaa
repnz
bound
testl
mov
sub
pop
clc
or
sbb
push
pusha
mov
or
sbb
mov
aaa
mov
test
cmp
mov
and
aam
lret
rol
jmp
mov
leave
jmp
lret
sbb
fdivs
mov
pusha
inc
rcrl
mov
jle
cs
rcr
dec
add
js
adc
arpl
xchg
sub
adc
pop
dec
in
jmp
mov
js
and
push
fsubs
sahf
inc
popf
or
ljmp
and
and
pop
xchg
push
sub
jno
or
or
mov
dec
insl
mov
mov
mov
cmp
add
xchg
inc
pushf
and
out
adc
cld
test
or
xchg
shrb
mov
jbe
mov
cld
sbb
pop
mov
push
jp
stos
push
sub
cmc
mov
or
or
adc
gs
jge
and
inc
cmpsb
cmc
xor
add
popl
movsl
jno
mov
sub
popa
pop
xchg
sub
jle
repnz
xchg
in
cltd
cld
data16
mov
into
sub
addr16
fisubrs
lock
adc
push
jle
sbb
stos
sub
ja
xchg
out
push
fidivrl
or
and
addr16
lods
rolb
sbb
sub
jns
pushf
mov
pop
mov
in
pop
add
shll
mov
outsb
inc
ljmp
add
das
xchg
xorl
sahf
fsub
inc
in
jbe
xor
ret
xchg
test
jns
sbb
leave
adc
call
sbb
rorl
jmp
or
mov
push
mov
or
call
pop
cli
dec
jle
mov
xor
and
cmp
jne
inc
scas
cld
xchg
adc
ljmp
mov
jns
js
and
cmp
lret
outsb
sbb
sbbb
mov
mov
and
push
mov
mov
adc
addl
mov
xchg
add
pop
sahf
popa
sbb
sbb
sub
push
mov
jbe
xor
jge
hlt
adc
sbb
and
xchg
and
rol
popf
subb
popa
aaa
test
subb
push
je
cmpl
test
xchg
mov
cwtl
rcr
xor
hlt
arpl
cmp
push
bound
fs
xor
sub
outsl
dec
cmp
ljmp
sbb
mov
xchg
and
call
in
loope
lret
cli
fisubrs
ja
pop
inc
cltd
outsb
ss
push
fcoml
jb
xchg
mov
hlt
lods
or
stos
test
sub
lock
inc
add
jne
ds
jp
in
inc
push
sub
call
pop
dec
mov
pop
stc
in
and
sbb
jl
jp
and
das
js
insb
and
adc
dec
or
sti
jp
insl
lods
sbb
sarl
cmpsl
out
mov
sets
inc
dec
push
xchg
loopne
push
or
cltd
add
ljmp
inc
lds
pop
dec
adc
data16
out
mov
push
sar
cld
sub
out
shll
outsl
mov
jle
push
sub
or
stc
pop
cmp
mov
aam
jl
mov
pop
xchg
insl
rol
cmp
pop
fs
fs
ljmp
das
pop
shlb
xchg
or
loopne
loop
imul
jb
test
decl
testb
pop
inc
fmull
jne
sub
gs
dec
out
cmc
jge
ds
pop
cmp
pushf
mov
jge
jo
sub
xchg
test
xor
shrl
pop
mov
ljmp
je
addl
pop
scas
jge
dec
mov
pop
stos
xor
test
or
dec
lods
cmp
imul
mov
xchg
int3
mov
jmp
add
xchg
mov
jp
sahf
sub
dec
lret
fldl
lcall
sar
into
cmpsb
mov
cmc
mov
insb
scas
fmuls
insb
sarl
or
stc
cmp
add
add
jg
shrl
or
stc
repz
push
mov
fs
inc
jl
mov
inc
fldenv
xchg
dec
xchg
jne
test
inc
shlb
leave
adc
bound
pop
cmp
add
mov
mov
gs
pushf
pop
sub
xor
imul
cld
and
and
sti
inc
push
xor
imul
xchg
fidivl
dec
xchg
test
xor
aas
sub
ljmp
mov
sub
fidivrl
loope
shrb
pop
add
dec
enter
mov
in
mov
push
cmp
dec
inc
mov
jl
or
leave
movsb
sbb
out
jnp
adcb
mov
popa
push
push
rol
out
mov
add
or
add
loop
lock
lcall
xor
imul
in
mov
loop
out
add
rcll
mov
jb
in
mov
call
pop
jp
lds
pop
imul
test
xchg
jbe
clc
ljmp
sbb
imul
fiadds
inc
movsl
and
inc
push
or
jecxz
inc
adc
addr16
inc
dec
lret
enter
lret
leave
sub
jo
subl
cmp
sub
cwtl
pop
pop
inc
fmuls
imul
fisttpll
ret
mov
pop
shl
lea
or
fcoms
lret
lahf
out
adc
arpl
sub
fbstp
jns
push
inc
test
mov
fisttps
jg
xchg
mov
push
jmp
not
jb
aaa
in
pushf
push
lret
push
and
movsl
in
inc
mov
jne
pop
fs
sbb
dec
jl
test
pop
push
jbe
lds
fwait
dec
cmp
fwait
insl
and
in
test
push
stc
mov
dec
and
mov
cs
lds
test
dec
pop
jns
lock
ret
icebp
cmp
loope
scas
and
iret
push
xchg
xor
mov
aaa
std
nop
pushf
and
fnstsw
or
jecxz
cmp
inc
scas
loopne
or
rcl
push
inc
mov
fwait
mov
or
mov
jge
in
repnz
repz
mov
stos
out
push
sub
xor
pop
pop
repz
and
sub
jle
xor
lahf
fwait
or
mov
inc
out
xchg
mov
xchg
sub
push
xchg
pop
test
mov
insb
and
push
lea
mov
sub
jg
or
jle
add
xlat
pop
or
ret
test
cmp
roll
mov
sbb
lahf
cmp
cld
mov
mov
push
push
in
in
lea
sub
or
xchg
insl
jge
xchg
arpl
stos
xchg
pusha
lret
mov
and
xlat
sbb
mov
push
test
pop
lds
cmpb
xor
int3
pusha
adc
jae
cs
insl
cmp
lods
add
adc
sti
mov
xor
jp
in
scas
mov
outsl
loop
pop
imul
gs
pusha
leave
pusha
out
or
dec
mov
das
mov
dec
out
shl
pushf
add
repz
adc
int3
arpl
mov
shll
ljmp
pop
jbe
lds
cli
add
into
xor
nop
sub
loope
or
repnz
pop
push
jo
dec
pop
fisubs
xchg
fdivl
adc
hlt
push
dec
cli
sar
jno
adc
xor
aad
fnstenv
inc
pop
cltd
cli
cmc
mov
dec
adc
inc
xchg
mov
in
dec
in
mov
mov
sbb
imul
mov
mov
xor
stos
in
stos
stc
sub
inc
jne
push
xor
inc
je
and
popf
xor
test
aaa
cli
push
and
xchg
scas
jno
lahf
xor
cmpsl
xor
cwtl
sbb
test
lcall
in
test
dec
cmpsb
xor
adc
mov
test
lock
arpl
push
sub
inc
sahf
std
mov
mov
jnp
aas
push
or
aaa
cli
imul
shrb
mov
and
out
cmp
add
mov
fldl
shll
adc
inc
push
fwait
in
push
adc
scas
inc
xchg
dec
out
mov
inc
sbb
test
outsb
loope
fimuls
push
inc
jbe
or
ljmp
fnstsw
lock
jne
leave
xchg
adc
xchg
inc
mov
ret
popa
and
xchg
xchg
and
push
mov
ret
loope,pt
aaa
cmp
shl
and
push
xchg
mov
jo
xor
jbe
xor
xor
repz
imul
push
leave
xor
lea
cmp
mov
test
int3
mov
fimull
loope
push
stos
cmpsb
inc
sti
cmp
mov
pushf
outsb
push
sbb
push
cmp
sub
jns
sti
jl
scas
cmovs
add
push
ret
andl
lret
xchg
loopne
and
pop
insl
sbb
dec
sub
mov
cs
lret
into
inc
out
cli
in
cli
and
in
push
adc
movsb
add
jne
pushf
adc
jae
ljmp
and
mov
fwait
into
out
in
lcall
mov
aam
push
pop
push
dec
mov
lods
push
loope
xor
cmp
sbb
loop
dec
testb
loop
fistl
pop
fiaddl
in
ss
adc
push
sbb
rol
rcrl
rorb
jge
jns
imul
ja
mov
push
jb
mov
scas
or
dec
xorl
cmpsl
int
test
js
or
jo
sbb
add
mov
sbb
jl
sti
push
push
dec
movsl
jle
cwtl
flds
in
in
ljmp
sub
push
iret
pop
pop
cmpsb
pop
and
sbb
mov
sub
pop
std
mov
or
lods
int3
js
push
lds
outsl
mov
sub
xor
in
mov
adc
icebp
inc
and
arpl
jb
sub
rcrl
lock
cmp
stc
dec
jl
cmpsl
aam
mov
sbb
mov
pop
xlat
and
sbb
inc
test
sbb
leave
push
mov
add
aam
imul
lcall
and
inc
lods
inc
inc
frstor
jb
push
pop
imulb
orb
add
pop
repz
js
dec
cmpl
insb
cmp
test
mov
push
mov
sbbb
push
das
mov
inc
dec
shll
pop
xor
cmpsl
repz
xlat
fwait
cmp
out
lret
pop
scas
cmp
fildll
loope
inc
mov
add
jno
mov
test
enter
in
mov
or
sub
adc
add
inc
shll
cwtl
adc
pop
data16
inc
or
pop
xchg
mov
dec
ret
lret
push
stos
stos
icebp
and
dec
jecxz
inc
xlat
pusha
call
pop
cmc
mov
rcrb
add
out
aaa
out
sbb
push
andl
lret
lock
xor
sahf
push
mov
test
dec
lret
and
or
push
xchg
pop
and
xor
cmp
jg
movsl
and
out
mov
popf
arpl
sbb
sbb
dec
xor
jbe
out
jno
pusha
jnp
jl
out
pop
lret
add
mov
and
jle
push
pop
sbb
stos
pusha
fcomp
dec
sahf
xchg
and
xor
add
repz
inc
or
lahf
mov
clc
out
cmp
jo
sub
xchg
sbb
shll
loopne
or
mov
mov
jb
pop
out
mov
adc
jp
cwtl
ret
cwtl
pushf
stc
cmp
sub
loope
cmp
inc
into
jo
lahf
push
pop
sbb
addr16
fs
push
add
test
sub
lea
lcall
mov
movsl
lods
or
fisttpl
cltd
loope
and
sbb
shrl
test
int3
sub
into
cmp
insl
push
rcll
adc
add
out
dec
jmp
add
call
sti
xor
push
sahf
sbb
fdivr
push
dec
pop
dec
xchg
inc
lods
rorb
mov
pop
movups
fidivl
fists
xchg
pop
divb
popf
xor
xchg
adc
push
or
cmpsl
pop
xor
idivb
scas
xchg
mov
mov
pop
cld
outsl
popa
sahf
mov
out
je
adc
dec
cmp
stos
or
pop
sbb
jmp
jno
push
into
in
je
dec
insb
jp
sahf
stc
sbb
stos
arpl
cmpsl
outsb
push
sub
inc
test
lods
sub
sbb
push
jg
xor
outsb
out
dec
repz
popf
aad
sbb
jp
sbb
sub
aas
cmc
mov
xchg
dec
jge
adc
xchg
fcmovnbe
gs
lea
mov
arpl
xchg
or
xor
mov
aaa
pop
fdivl
add
push
pop
ds
inc
push
jle
out
das
inc
pop
cmc
icebp
lods
xchg
and
jecxz
jb
dec
mov
ja
imul
mov
nop
cmpsb
test
xchg
scas
rorl
dec
pop
xor
scas
mov
fbstp
jnp
out
fimuls
out
or
cmpsl
mov
repz
aad
ja
addr16
pop
cltd
inc
sti
adc
pop
sbb
cmp
outsl
xchg
lret
jmp
out
inc
jo
jns
xor
jo
adc
inc
lcall
add
mov
and
mov
cmp
scas
xchg
jecxz
aas
stos
and
dec
jge
sti
mov
sbb
rcrl
aad
data16
fsubrs
ljmp
sbbl
inc
fiaddl
mov
scas
push
mov
mov
push
or
daa
xchg
lcall
pusha
enter
push
rorl
sbb
add
jno
fs
jae
test
out
and
mov
and
xrstors
je
and
adc
call
fcoms
dec
add
cmp
pop
mov
cmp
in
mov
fdivrl
aas
add
mov
sbb
mov
mov
jbe
inc
daa
sub
sbb
jmp
pop
stc
xor
push
nop
mov
add
icebp
add
xor
lods
xorb
push
icebp
mov
jbe
insb
lods
lea
repnz
pop
jns
aam
dec
mov
mov
dec
cmpsl
pop
mov
je
and
outsl
xor
lret
xor
push
insl
data16
cwtl
cltd
cltd
out
enter
out
add
xchg
sbb
in
enter
mov
or
lret
jb
cmp
adc
inc
cmp
out
cmpsl
mov
lods
cmp
fldcw
in
adc
mov
sub
pop
mov
and
inc
hlt
mov
shl
adc
adc
ss
pop
loopne
adc
cwtl
sbb
xchg
and
jo
loopne
fimuls
pop
pop
xor
jns
cmp
adc
test
dec
mov
jg
or
pop
nop
das
mov
mov
divb
lcall
ja
inc
xchg
push
mov
jnp
and
jcxz
ss
and
imul
and
dec
repz
sbb
pop
sub
fadd
cmp
mov
dec
hlt
inc
es
pop
pop
sbb
jns
int
idivl
dec
add
jp
mov
hlt
cmp
movsl
lds
dec
loopne
add
flds
push
out
pop
lock
mov
and
mov
jecxz
and
sub
jge
int3
fmuls
lahf
mov
mov
clc
leave
test
and
dec
ljmp
mov
jbe
clc
shlb
aad
jecxz
clc
and
pop
dec
cmp
jecxz
fwait
clc
outsl
push
add
mov
stos
imul
lods
jmp
or
xchg
pop
into
repnz
mov
pop
adc
pushf
inc
int
jne
dec
push
xchg
push
lcall
stos
fidivrl
and
iret
mov
mov
xchg
fidivs
fcoms
bound
inc
fs
mov
test
cmp
jbe
clc
dec
push
lcall
jo
movsw
xor
jg
dec
stc
pushf
dec
jns
pop
and
ljmp
mov
mov
cld
jl
sub
mov
out
mov
push
sub
jmp
and
xchg
int3
rol
mov
in
ret
nop
xchg
mov
and
jno
xor
out
and
in
andl
scas
repz
cwtl
pop
test
rol
ljmp
and
inc
pop
popa
xchg
push
inc
pushf
mov
mov
or
push
jne
out
pushf
fsubrl
push
pushf
mov
bound
xchg
mov
ss
add
negl
pop
add
cmp
xchg
sub
push
push
sbbb
in
cmp
cmp
stc
inc
cmc
cmp
xchg
push
in
les
je
pop
es
jmp
bound
xchg
fwait
xor
inc
loopne
leave
outsb
mov
inc
cmp
mov
ficoml
div
push
imul
mov
push
xor
int
jae
xor
jnp
in
insl
adc
sbb
out
out
pop
cmp
adc
pop
dec
add
aaa
iret
pop
negb
lock
sub
mov
sbb
loopne
sub
lret
push
jno
mov
test
xor
fs
arpl
std
jne
or
push
or
test
push
mov
jge
cmpsl
test
loop
sti
imull
lcall
jb
inc
scas
out
sub
add
ss
cld
stos
cmp
fcompl
aaa
adc
push
sbb
fiadds
ficoms
popa
mov
add
test
out
xchg
jb
imul
pop
mov
dec
sahf
push
ds
cmpsl
xchg
rorb
xchg
ljmp
adcb
mov
push
sub
sti
lcall
in
xchg
mov
fistpl
xchg
mov
mov
jge
xor
das
mov
pushf
fsubs
out
cmp
mov
mulb
sub
jnp
or
adc
outsl
sti
push
jge
sub
lods
pop
icebp
ficomps
js
mov
sub
add
dec
add
jae
cltd
mov
rcrb
mov
test
inc
test
in
mov
stos
mov
test
push
mov
adc
mov
sbb
or
lcall
mov
ret
cmp
adc
pop
dec
bound
daa
in
and
add
popf
push
scas
lods
lret
fmulp
jae
adc
push
imul
repnz
adc
mov
loopne
add
mov
or
jns
xorb
push
mov
mov
sti
repz
dec
dec
inc
ret
jp
cmc
sbb
or
or
sub
push
cltd
dec
pop
mov
mov
push
insb
or
jecxz
sub
lcall
cmp
jne
adc
dec
push
test
dec
loop
popf
push
les
xchg
out
sub
into
pop
jmp
pushf
cld
clc
shlb
mov
cmp
mov
mov
pop
mov
addr16
ror
sub
and
and
loopne
mov
movsb
xchg
pusha
call
push
mov
jo
sub
bnd
subl
imul
push
or
push
pop
pop
hlt
nop
adc
jl
lcall
in
jns
cs
push
icebp
fnsave
stos
jne
xchg
sti
jbe
xchg
add
ja
icebp
inc
stos
lods
sti
lret
add
xor
pop
in
fs
sub
scas
push
xor
mov
fcmove
loopne
cmp
fdiv
mov
movsl
push
jle
add
aas
aas
andb
fldt
fisubrs
mov
movsb
addr16
push
fidivrs
jno
mulb
pop
push
xlat
push
xor
jp
mov
jne
xchg
jne
rorb
fimull
adc
sub
sub
xor
cmp
add
add
mov
mov
xchg
xchg
dec
add
push
scas
sub
xchg
add
aaa
mov
inc
lret
xor
cltd
add
fcom
movsl
in
notl
aam
roll
mov
test
push
lods
pushf
push
std
cmpsb
mov
test
sbb
adc
ss
stc
lea
mov
push
loope
xchg
adc
push
mov
andb
popa
mov
pop
lds
xor
stos
ljmp
int
je
int
in
lods
aaa
into
jecxz
inc
aad
test
dec
xor
sbb
push
es
inc
lret
outsb
inc
xchg
mov
in
pop
test
cltd
orb
ja
xor
mov
xor
fwait
stos
adc
sbbb
push
jne
xor
mov
imul
inc
push
fwait
xlat
jb
or
cmpsl
and
les
jo
arpl
pop
and
mov
mov
ret
enter
out
lahf
inc
mov
fxch
fidivrl
jo
or
and
sub
rclb
cmp
out
inc
xchg
loopne
cmp
cmp
or
and
iret
push
sti
pop
lods
cld
mov
xor
jle
cmp
inc
lds
fdiv
dec
sbb
sbb
sub
daa
outsb
stos
das
add
mov
sub
fimull
mov
cmpsl
or
cld
aam
inc
push
mov
xchg
into
or
lock
daa
std
inc
pop
adc
lds
mov
jbe
jecxz
out
fcomps
xchg
mov
andb
mov
xor
mov
push
aaa
imul
jns
add
xor
enter
mov
fneni(8087
or
and
cmc
js
push
inc
fmuls
adc
imul
xchg
jmp
adc
cmpsl
mov
pusha
push
bound
mov
std
add
dec
lcall
je
mov
inc
cmc
jns
out
test
mov
rol
and
dec
orl
push
sub
sbb
mov
cmpsb
sub
aas
hlt
jno
mov
js
adc
enter
lods
outsb
les
pop
into
iret
xor
mov
push
gs
lahf
push
pop
pop
mov
xchg
aam
pop
push
inc
fimuls
jle
push
mov
mov
sbb
mov
sbb
pushf
addl
push
dec
aad
je
dec
loop
xchg
sub
dec
jecxz
in
mov
dec
decl
outsl
add
ret
dec
push
mov
dec
pop
jge
scas
mov
lcall
and
fadd
popf
mov
jecxz
dec
adc
cmovg
cmp
inc
sahf
push
and
jb
inc
inc
inc
jbe
int
pop
dec
dec
stc
jl
test
outsb
mov
imul
mov
roll
cmp
sbb
xlat
xorb
sub
mov
jno
mov
sbb
mov
fmuls
movsl
push
ds
or
in
int3
leave
sub
jne
shrl
ja
test
scas
dec
hlt
andl
and
push
and
flds
cwtl
in
aas
inc
and
rorl
daa
push
test
lea
jg
jb
or
cwtl
scas
outsl
mov
mov
or
das
cmp
fisttpl
in
jo
out
js
stos
rol
test
sub
ja
sub
cwtl
ss
jae
cmp
arpl
std
push
mov
xlat
dec
xor
cwtl
insl
cmp
arpl
xchg
sbb
popf
cmc
jno
aaa
subl
or
dec
xor
out
mov
int3
jge
mov
aam
inc
xlat
leave
int
loopne
mov
adc
mov
mov
xchg
xchg
les
pop
sbb
cmp
movsl
cmp
jg
add
in
mov
pop
hlt
mov
push
jnp
xchg
fimull
dec
sti
adc
xor
xchg
adc
ficomps
dec
push
push
inc
fstl
sbb
hlt
test
ss
adc
inc
stc
fwait
add
add
push
pop
sahf
popf
adc
out
sti
xor
popa
idivl
cmp
mov
in
push
aam
inc
mov
sahf
mov
jbe
mov
inc
leave
and
xorb
data16
xor
sub
mov
xchg
lods
xchg
cwtl
fs
jge
mov
and
xchg
jne
lret
popa
out
xchg
in
lods
mov
mov
imul
lret
mov
dec
bound
leave
mov
imul
enter
push
data16
xor
xor
sahf
sti
cmpsb
and
push
jnp
adc
inc
add
inc
ret
jnp
mov
pop
or
sbb
xchg
jmp
test
and
daa
jo
aad
lret
push
ljmp
jb
cmpsl
inc
jmp
gs
stos
or
popa
jle
push
sub
mov
test
arpl
xchg
sub
push
push
pushf
in
xchg
outsb
xchg
repnz
in
xor
aad
loopne
jnp
inc
and
cmp
aam
inc
pop
mov
mov
inc
push
int3
inc
cltd
js
les
dec
in
jb
sbb
jmp
jg
add
xchg
push
and
push
mov
jg
dec
sahf
nop
or
shll
enter
mov
out
test
push
stos
in
dec
sub
lcall
aad
add
out
mov
pop
rep
and
outsl
cmp
and
shrl
push
out
arpl
test
sub
nop
cmp
adc
push
fidivs
es
bound
push
cld
push
mov
jmp
sub
cmpsl
push
iret
movsb
cmp
insb
mov
dec
mov
mov
mov
jmp
aam
push
testb
jbe
data16
mov
and
in
jp
sub
rcll
or
test
adc
shl
loopne
shll
loope
lock
pop
out
xchg
into
cmpsb
data16
lret
pop
je
mov
sub
packuswb
icebp
mov
std
adc
adc
mov
sub
cmpsb
xchg
mov
sbb
aas
mov
jo
addr16
out
aad
es
lods
jae
sub
shrb
int3
mov
aad
and
jl
sbb
xchg
mov
jo
push
mov
xchg
stc
pop
push
and
xchg
jnp
jp
mov
dec
scas
mov
repz
jmp
and
add
or
jb
adc
cli
xchg
or
ret
jle
movsl
jo
sbb
ret
sbb
ret
dec
pop
jbe
push
inc
clc
imul
insb
sbb
jg
xor
movsb
pop
icebp
xchg
addr16
sahf
mov
shl
fsubs
pushl
stos
inc
sub
repz
sbb
ja
les
inc
mov
and
leave
pop
cmc
mov
lret
andl
cmp
sub
fstl
sub
push
lods
adc
imul
jne
cmpl
pop
lret
add
sarb
dec
and
lahf
mov
push
je
test
mov
mov
shll
test
sbb
mov
push
xor
xor
push
paddd
lods
mov
sub
adc
je
js
clc
mov
sub
inc
mov
cld
scas
mov
inc
or
loope
movsl
daa
es
iret
dec
jecxz
cmp
mov
push
push
add
sbb
das
aam
inc
xlat
add
push
lret
ret
dec
pop
ja
cmpsl
bnd
fidivrl
stos
cmpb
jmp
or
cmc
lds
jecxz
pusha
popf
add
mov
and
stc
shlb
std
nop
out
cmp
es
push
mov
scas
xchg
adc
and
sbb
insb
sub
sti
push
test
pop
push
ret
outsb
mov
or
pop
cwtl
loop
std
or
cli
addb
and
enter
dec
dec
or
sbb
orb
jmp
and
mov
out
aad
xor
repnz
jmp
aas
pop
pusha
test
jmp
xor
cwtl
jae
sahf
arpl
xor
sub
sbb
sub
cmp
cs
jns
adc
stos
out
xchg
lcall
scas
ljmp
xor
lret
add
hlt
mov
mov
jb
and
das
jl
sub
inc
and
xchg
imul
mov
xchg
cmp
je
add
je
daa
xor
stos
fsubr
sub
aam
sub
es
sbb
inc
pop
mov
push
lcall
cmp
rcpps
pop
mov
in
jp
jnp
stc
jb
sub
xor
movl
popa
in
movsl
jo
push
test
mov
and
mov
icebp
xlat
or
imul
add
xchg
jb
push
cli
xchg
arpl
inc
or
sarb
repnz
sub
dec
fsubr
xchg
cs
dec
hlt
xchg
sbbl
jno
mov
loopne
mov
or
xchg
cld
mov
cmp
sahf
leave
fimull
fbld
arpl
out
ret
or
pop
push
push
or
mov
cli
mov
jp
jo
orb
jp
push
and
shll
into
flds
stos
sub
mov
cltd
cld
call
ftst
sub
lods
add
testl
jle
sbb
sahf
lcall
sub
push
inc
pop
xor
js
xchg
scas
pop
mov
cmp
jne
fstpl
das
add
shll
push
jns
iret
and
pop
pop
dec
jb
xor
jo
scas
cltd
cs
fucomp
xchg
push
scas
mov
jae
stos
movsb
popa
stc
jge
or
lock
mov
jg
push
mov
outsb
jl
lods
fnstsw
test
mov
push
dec
xor
outsb
les
dec
int3
ss
jae
push
cmp
mov
dec
cmp
add
les
push
nop
push
push
or
imul
xor
jno
push
repnz
sbb
mov
cmpsb
push
ret
jmp
fnstsw
sbb
test
cld
or
mov
xchg
jae
push
pop
push
lods
add
mov
dec
ss
pusha
pushl
ss
leave
lcall
movsl
repz
push
dec
outsl
jnp
stos
hlt
cs
adc
inc
enter
push
fsubrl
in
icebp
pop
ljmp
xor
sbb
hlt
popa
mov
sbb
mov
jno
mov
scas
add
sub
pop
arpl
push
decb
fnstenv
xlat
mov
lock
sbb
inc
insb
scas
mov
push
xor
mov
lock
cli
and
in
popf
xorb
sub
daa
or
jmp
in
cmpsl
enter
add
mov
xchg
andb
dec
fadds
aad
inc
outsl
repz
cmp
shlb
or
mov
pop
stos
stos
inc
aad
mov
leave
andb
sti
cmpsb
int
add
gs
repz
test
in
cmpsl
jb
and
stc
popf
mov
sar
fsubrl
repz
jae
push
xchg
mov
cmc
adc
pop
insl
push
mov
and
cmp
loop
and
cld
leave
in
jmp
push
add
call
push
movsl
add
arpl
addr16
xchg
xlat
cltd
and
in
jne
dec
cwtl
xor
and
mov
mov
push
sbb
mov
addr16
xor
cmp
out
jno
cwtl
sub
ds
iret
bndstx
jno
xlat
rorb
std
mov
ret
loop
test
mov
pop
add
push
cmp
mov
ss
push
out
lock
mov
outsb
sarl
add
jl
loop
and
sbb
dec
or
inc
cmp
cmpsl
adc
xor
fldenv
lods
xchg
xchg
or
sar
mov
and
xor
leave
clc
cltd
jp
pop
shrl
push
add
xchg
ds
dec
pop
cmp
jge
outsl
mov
push
xor
xor
xchg
test
jmp
mov
pop
clc
insb
xchg
movsl
lds
pop
aas
test
mov
jbe
lahf
out
iret
and
aam
fidivs
dec
and
fidivl
out
daa
icebp
xchg
in
sub
dec
push
push
fcomi
repz
lods
mov
icebp
sbb
test
xchg
jo
hlt
mov
xchg
je
inc
scas
add
inc
mov
imul
mov
sahf
xor
cwtl
xor
mov
sbb
jno
sbb
xchg
lods
inc
sbb
and
rorb
dec
add
call
add
or
sub
lock
outsl
loop
add
sub
jns
pop
cmp
jge
jg
push
sbb
cmc
les
push
fcom
sub
add
xor
ret
cmp
pop
dec
xchg
fdivp
sahf
pop
cwtl
arpl
in
aaa
lcall
lahf
enter
decl
pop
lcall
lock
adc
or
mov
adc
inc
ljmp
std
sbb
xchg
mov
sub
mov
mov
cmp
movl
lahf
movsl
dec
push
lods
repz
jle
add
xchg
stos
fmulp
ds
fcmove
sub
arpl
int
or
out
jo
in
imul
jecxz
les
push
mov
cli
and
cltd
inc
or
and
es
cwtl
push
dec
popa
xor
adc
xchg
popa
sub
cld
rcll
xchg
int3
xorb
or
sbb
cmp
cld
adc
mov
shl
cmp
loopne
rcll
adc
dec
push
mov
fwait
imul
and
mov
sub
orl
push
lods
lea
mov
dec
gs
add
add
xchg
insl
and
scas
dec
paddsb
bound
mov
lret
iret
dec
and
push
fldt
fisubrl
loope
ss
and
mov
pop
jb
nop
stos
adc
push
je
addr16
pop
or
fisubs
cld
imul
push
inc
xor
xor
add
sahf
inc
scas
or
cwtl
in
popa
sbb
jnp
addr16
mov
les
xor
nop
cwtl
push
cli
pushf
mull
dec
mov
dec
mov
push
mov
mov
mov
fldt
lret
mov
lcall
pop
ret
jp
cwtl
lock
lock
or
mov
xor
daa
inc
inc
arpl
in
xchg
jne
je
mov
outsb
cmp
lahf
xchg
mov
inc
test
fwait
cmpsl
scas
std
fldl2e
or
xor
in
clc
dec
shrl
jge
gs
out
into
inc
and
popf
sarl
and
add
movsl
jno
jae
rol
pop
mov
gs
adc
push
out
sbb
andl
cmp
jle
sub
jo
loope
test
lcall
and
push
adc
lahf
repz
mov
ret
sbbl
mov
jg
jmp
mov
out
ljmp
repz
xor
jecxz
push
jle
rcll
repnz
push
loopne
aad
pop
mov
push
sub
mov
movsl
popa
inc
stos
mov
inc
mov
xchg
nop
sub
sti
mov
push
sarl
stos
sub
push
jg
xor
dec
lahf
push
mov
imul
mov
aam
std
xchg
xchg
sub
adc
dec
push
jb
and
xor
mov
push
lcall
loopne
xlat
repz
insl
imul
insl
mov
cmpsl
jge
ds
xor
shlw
lret
mov
and
loope
inc
out
inc
incb
in
pusha
popf
pop
insb
push
mov
adc
imul
xor
data16
xchg
loop
mov
fs
dec
rcrl
pop
rcll
loopne
or
test
jp
movsl
lea
or
ja
lret
dec
dec
scas
imull
insl
shrb
int
push
or
push
int
orb
push
inc
popf
xor
pop
jge
xor
mov
and
mov
push
pop
lea
jbe
incb
sub
data16
mov
pop
mov
sti
dec
aam
pop
mov
mov
or
cmpsl
pop
test
jns
jo
icebp
dec
inc
mov
push
clc
dec
movsl
outsl
push
outsb
iret
push
mov
addr16
xchg
pop
daa
xlat
call
cmp
and
in
pop
out
imul
cli
dec
ret
pop
xor
leave
ret
ss
pop
notb
rcr
xor
dec
call
add
bound
push
push
mov
cmp
add
dec
int
outsl
aas
cwtl
fxch
and
add
ja
cmpsl
jge
adc
fadd
mov
and
push
scas
repnz
das
stos
inc
mov
push
push
aas
sub
xor
leave
push
dec
cmp
adc
mov
popa
stos
mov
out
cmpsl
sbb
mov
int
and
or
push
cmc
or
mov
les
cli
loope
sub
xchg
sbb
mov
or
lahf
inc
out
lds
test
imull
or
adc
or
add
imul
cmp
sbb
arpl
arpl
xchg
enter
stos
lods
jns
lcall
addr16
jo
nop
cmp
inc
sub
dec
cmp
pop
movsl
js
popa
xchg
sub
shll
in
and
and
loop
jl
lcall
and
or
aas
xchg
mov
pop
std
pop
adc
dec
mov
sbbl
int
scas
stc
jecxz
aam
jns
pusha
cmpsb
pop
test
cmp
mov
sub
clc
pusha
xchg
scas
lods
jbe
sbb
mov
jbe
in
test
mov
dec
dec
cwtl
sub
pusha
adc
xchg
jne
ret
pop
xlat
insl
xlat
popa
aam
fcos
lahf
ss
in
or
daa
mov
jae
dec
mov
push
adc
lds
mov
pop
ffree
jae
push
loop
js
call
jae
push
pusha
es
lods
mov
add
daa
pop
sub
hlt
fbstp
or
or
cli
mov
lods
ror
fsubrl
inc
fcmovne
hlt
stc
loope
add
loopne
sbb
adc
test
or
out
cmp
xor
mov
lds
cwtl
mov
cmp
xchg
sbb
push
fcoml
xor
ljmp
dec
jp
cmp
adc
inc
lahf
jb
in
inc
mov
jg
mov
or
lcall
cmc
push
jne
jp
lret
lret
mov
fists
or
cmp
iret
imul
mov
xchg
fsubs
adc
js
iret
loop
aam
mov
scas
dec
jns
les
and
sub
call
test
imul
dec
out
lret
adc
addb
repz
je
popf
in
add
mov
outsl
bound
pop
hlt
rcll
imul
xor
xchg
sub
mov
adc
ss
inc
movsl
inc
pushf
mov
xor
jle
rcrb
and
cmp
gs
xchg
jmp
inc
fsubr
push
repnz
out
push
and
pop
sti
into
pop
mov
and
shrb
jg
popf
and
sub
outsl
lahf
add
test
mov
stos
mov
mov
push
or
push
int
aad
mov
adc
jnp
fnsave
enter
adcb
addps
jp
dec
out
fildl
jnp
xor
bound
imul
mov
xchg
jnp
or
fcoml
imul
mov
inc
sub
lret
rcll
outsb
lcall
pop
pop
pusha
pop
nop
into
mov
mov
das
and
mov
aaa
ss
pushf
xor
fbld
jne
lea
mov
insl
loope
imul
pop
popa
add
das
xor
dec
mov
mov
fwait
pop
xchg
ljmp
jbe
jne
das
push
fwait
xor
mov
jle
sbb
sahf
loopne
nop
int
mov
add
aad
mov
jmp
popa
ret
pop
cmp
mov
add
ljmp
ja
rolb
imul
sub
movups
jl
add
leave
adc
xor
aaa
adc
inc
in
repz
mov
into
femms
and
push
push
ret
cmp
add
ror
test
lret
jb
mov
andb
cmp
mov
sbb
enter
sbb
push
dec
ds
and
bound
inc
test
js
sbb
fnstsw
insl
adc
mov
push
mov
and
dec
push
pop
sub
call
test
aaa
xchg
adc
dec
pop
imul
cmpsb
lret
aam
roll
push
repz
je,pt
pop
push
loop
mov
ficomps
xor
jg
imul
xor
mov
mov
ds
mov
mov
ljmp
rorb
adc
push
js
jns
mov
or
and
jnp
cltd
aaa
loope
cmp
pop
repz
push
clc
jae
jmp
add
inc
xchg
pop
in
lcall
lods
test
sbb
pop
icebp
loopne
dec
ret
pop
sub
scas
addr16
push
and
or
sbb
and
std
pop
test
mov
push
xchg
sub
arpl
mov
arpl
push
daa
pusha
mov
ljmp
sbb
jbe
movsb
repnz
mov
movsl
frstpm(287
or
sbb
loope
add
aas
cmpsb
xor
pshufw
sub
inc
xchg
sub
loop
das
push
and
push
icebp
cmp
and
cmp
sub
inc
cmp
movsb
rcl
sbbl
sbb
imul
in
movsl
clc
adc
insb
jnp
mov
dec
movsw
in
aad
repnz
scas
and
jmp
push
pusha
inc
pop
roll
dec
pop
jb
pop
repnz
fimuls
test
and
push
mov
movsl
add
ljmp
iret
inc
arpl
cwtl
das
xor
mov
xchg
subl
clc
add
jg
gs
inc
repz
pop
cmpsl
out
add
aad
test
outsb
inc
popa
mov
adc
and
mulps
add
mov
cmp
add
js
xchg
xchg
scas
idivb
jecxz
push
push
and
or
lds
ds
aas
in
icebp
repz
ret
test
xchg
ret
das
inc
fsubrs
mov
sub
test
movsb
insb
mov
mov
ret
data16
int3
shr
cmp
outsl
outsl
aas
sbb
in
mov
pop
adc
dec
in
cmp
ja
mov
pop
imul
xorl
jae
mov
dec
dec
jnp
movsb
bnd
mov
scas
stos
popa
sbb
icebp
jecxz
js
mov
mov
jp
ficomps
mov
aaa
cltd
lret
cmc
in
add
ja
dec
jne
push
jecxz
outsl
int
fsubp
mov
or
pushl
dec
dec
dec
jb
adc
mov
or
outsl
jnp
loope
fisubrs
rclb
jno
test
in
xchg
daa
inc
or
fnstcw
push
icebp
jo
add
add
sbb
notl
ret
int3
cmpsb
inc
xor
ficompl
cli
sbb
andl
int3
shl
jl
cs
sub
jl
pop
inc
in
cmc
jae
std
movsb
push
push
arpl
adc
mov
movsl
add
jnp
lods
jnp
js
in
cmc
push
decl
sbb
popa
ja
testb
hlt
in
xor
dec
frstor
or
jle
add
adc
cmpsl
pushf
daa
jge
leave
or
xor
inc
mov
add
mov
jl
fdivr
inc
push
sbb
addr16
sub
add
and
shrb
pop
mov
ja
or
push
mov
ret
ljmp
fisubs
xchg
dec
and
ss
fbld
ret
pop
mov
mov
mov
or
sub
and
cmp
clc
mov
lds
loopne
mov
mov
insl
push
stc
push
fbld
sahf
lea
loopne
in
jge
es
jns
xor
pop
dec
add
sti
or
in
dec
pop
sbb
xchg
inc
clc
mov
dec
jno
notb
jbe
hlt
mov
mov
imul
out
add
pop
lods
push
xlat
rcrb
mov
out
das
dec
pop
mov
cld
adc
xlat
sbb
or
pop
cmp
mov
mov
mov
adc
bound
aad
cltd
orb
es
jb
mov
cmp
scas
pop
inc
push
stos
or
mov
or
inc
dec
pop
nop
out
push
bound
or
rcrl
pop
mov
nop
dec
mov
rolb
cli
ret
dec
jge
sbb
adc
pop
jbe
push
es
mov
mov
push
lods
in
test
sub
mov
cmc
mov
test
leave
iret
mov
cmpb
aas
mov
pop
mov
jge
cmp
jl
adc
test
aad
stos
lea
pop
aam
cltd
or
les
hlt
push
leave
mov
enter
and
test
jo
ss
xchg
shll
out
sti
mov
jo
rcrl
cltd
sarl
das
insb
hlt
aaa
shlb
xchg
mov
cltd
jp
xchg
cmp
inc
inc
lea
jb
jnp
shrb
sbb
gs
adc
inc
pop
ljmp
cwtl
lds
inc
cmp
sub
pushf
pop
mov
cs
adc
mov
addl
stos
cmp
pop
in
imul
push
mov
inc
aaa
test
shrl
call
cmp
xor
call
mov
inc
jl
xor
fcoml
mov
mov
cltd
xor
out
mov
out
sti
cwtl
das
sub
or
inc
mov
dec
sahf
cmp
ds
pop
jo
mov
test
push
jns
dec
idiv
xchg
xor
imul
push
sbb
cmp
roll
pop
mov
xor
ficoml
push
orb
sub
xchg
mov
popf
cld
lret
in
jp
push
and
dec
aas
pop
cmp
outsb
mov
push
rcr
fcmove
das
cmp
pusha
imul
sub
jae
out
cli
adc
jns
pop
jecxz
pop
or
xchg
subl
xchg
mov
adc
test
int
mov
cmp
ss
mov
ljmp
cmpsl
push
fs
pop
xchg
inc
std
or
cmp
popa
mov
xor
imul
les
sti
push
ret
cmp
pop
cli
inc
pop
add
inc
sahf
mov
sub
inc
jecxz
sbb
bound
cmpsl
lcall
xchg
cmpsl
or
sarb
sbb
loop
addr16
fstpl
repz
pop
daa
bound
sahf
xor
test
scas
sbbb
fsubl
nop
pop
mov
mov
stc
cmp
aaa
sub
cmpsb
popf
inc
cwtl
arpl
push
mov
in
sbbb
xchg
shrb
rcrb
sahf
and
fcoms
jnp
out
test
sti
mov
inc
pop
push
adc
mov
in
outsb
fildll
and
cmp
ficoml
adc
inc
testl
mov
mov
clc
mov
mov
push
mov
cmpsb
adc
popa
lods
fstpl
cmpsl
mov
sbb
in
js
icebp
lea
sete
dec
sarb
es
xlat
mov
dec
jp
cli
stos
in
shrb
add
push
dec
int
mov
xchg
xchg
sbb
mov
push
cs
clc
addl
sub
movsb
shrl
add
dec
dec
pop
push
sbb
add
dec
add
dec
push
out
cmp
mov
popf
inc
in
ffree
leave
or
je
arpl
xchg
xorl
lcall
iret
fstpt
es
mov
ljmp
mov
xor
xchg
jmp
mov
adc
fidivrs
cmp
sbb
out
jmp
jmp
jecxz
jae
mov
sbb
dec
mov
lret
dec
and
mov
call
dec
imul
cmp
pushf
in
mov
sbb
xchg
mov
xor
mov
mov
xchg
repz
sub
ss
jb
mov
adc
incl
out
jge
out
mov
insb
mov
inc
out
into
gs
inc
mov
in
jne
xchg
mov
jp
inc
and
call
int
sbb
into
jno
mov
sahf
or
test
pop
loop
dec
arpl
scas
adc
add
sbb
xchg
or
mov
imul
ljmp
or
adc
stos
dec
jbe
push
xchg
sbb
dec
push
js
inc
outsb
fs
iret
push
scas
add
xor
jne
pop
loope
dec
mov
xchg
mov
add
clc
xor
inc
ftst
iret
pusha
add
das
bound
or
imull
int3
or
dec
icebp
or
lods
cmpsl
ret
xchg
jb
cmp
aad
add
mov
dec
loopne
jo
sahf
outsl
dec
fs
mov
scas
imul
jg
cmpsl
mov
pop
movsb
movsb
pmaxsw
imul
xor
sti
cwtl
fdivl
dec
xchg
adc
loope
sbb
mov
hlt
out
pop
mov
xchg
xchg
aaa
rcrl
mov
dec
loope
call
or
jne
mov
fsubrl
inc
out
ljmp
mov
jp
inc
add
jmp
ja
outsb
pop
aam
add
pusha
js
xchg
xchg
fmuls
sbb
in
xor
iret
loop
aam
pop
nop
shrb
add
dec
lds
jbe
je
subl
es
mov
cmc
inc
xchg
sub
cmpsb
dec
dec
mov
xor
sbb
popf
sbb
cld
sahf
fxch
ret
stc
jecxz
aaa
pop
loopne
out
mov
add
xor
xlat
lcall
push
std
loop
pop
outsl
sub
mov
stc
test
adc
ret
addr16
shlb
xor
mov
pushf
addl
out
lret
xchg
rol
jg
icebp
dec
clc
sahf
mov
es
in
shlb
jg
add
js
push
fldl
test
xchg
lret
fs
fsubs
test
dec
out
or
imul
les
mov
fcomi
imul
add
inc
ret
xlat
mov
inc
sti
mov
mov
cmpsl
std
pop
hlt
mov
pop
sbb
adc
pop
cwtl
nop
sbbl
push
arpl
iret
dec
fs
ds
imul
icebp
mov
jmp
cli
or
adcl
sbb
xlat
cmp
inc
gs
pop
lret
adc
cwtl
and
imul
test
xor
push
mov
enter
push
les
xchg
mov
dec
xlat
repnz
mov
inc
into
dec
dec
lds
notb
xor
push
push
sbb
fnsave
ds
je
cltd
push
mull
cmpb
aas
mov
mov
imul
call
mov
inc
mov
mov
loope
ljmp
es
xor
out
xchg
mov
adc
xchg
xor
pop
pop
jne,pt
mov
lcall
mov
outsl
out
add
mov
iret
sub
inc
lods
dec
mov
pop
mov
fucom
test
fcmovb
pop
or
je
sbb
push
fists
aas
add
push
sbb
sbb
pop
rol
rcr
jnp
sarb
bound
sbb
cmpb
jbe
fdivrs
or
push
jmp
jmp
push
je
cmp
ret
popf
sub
int
sub
ss
sbb
push
dec
iret
fs
mov
push
shrb
adc
mov
shll
movsl
pop
jp
pop
lods
cmpb
add
xchg
popa
dec
lods
inc
fs
aas
sbb
pusha
movsl
and
rcll
imul
xlat
push
insl
addr16
popf
lds
cli
cld
cli
jg
adc
in
cmc
inc
in
fcompl
xchg
cmpsl
imul
jg
xchg
mov
test
xchg
int
loopne
mov
adc
cmpsl
jo
fnstenv
notb
int
jle
jae
rclb
clc
dec
add
or
pop
std
jge
in
and
xchg
pop
jne
aad
rcl
pop
imul
or
cmp
fwait
cmc
inc
int
loop
and
cmpsb
ret
lahf
divl
xlat
imul
lea
jmp
repnz
shrb
push
in
xor
frstor
push
add
xchg
jecxz
adc
xor
aaa
pop
test
scas
mov
mov
lret
jae
xor
mov
sbb
mov
js
dec
int3
lret
mov
sub
stos
in
adc
or
outsb
loopne
lods
mov
push
in
frstor
adc
mov
dec
jbe
rclb
mov
adc
mov
cmp
insl
push
sbb
insb
and
adc
repnz
and
sbb
sub
xchg
aas
jae
jno
insl
sub
lcall
push
lret
dec
jecxz
repnz
push
aaa
mov
icebp
pop
push
pop
sti
cmp
push
mov
lret
cmpsl
pop
outsb
test
adc
push
inc
adc
push
cld
xchg
or
push
sbb
cmpl
sub
jecxz
inc
push
xchg
outsl
sbb
int
mov
jg
dec
aad
incb
adc
leave
das
mov
negl
cmp
xor
negb
sub
sahf
and
mov
insb
das
inc
adc
mov
pusha
inc
mov
cmp
outsb
inc
insl
mov
pop
pop
outsl
xchg
mov
stos
jnp
repz
mov
or
jns
es
push
sbb
push
pop
into
addl
and
cld
mov
jge
lcall
in
mov
pushl
cmp
nop
test
add
xor
pop
dec
and
push
leave
fwait
icebp
mov
fdivrs
in
jle
jb
hlt
jnp
outsb
push
icebp
popa
clc
and
ret
pop
xlat
ljmp
ljmp
imul
pushf
xor
mov
nop
mov
in
add
repz
sbb
dec
add
sub
pop
pushf
cli
sub
add
aad
aam
mov
pop
jp
jns
sub
xchg
add
mov
adc
lahf
pushf
add
mov
jns
pop
rcrl
lock
xor
add
cmpsl
mov
adc
cmpsb
out
leave
and
leave
pop
movsl
in
stos
mov
lahf
das
in
mov
mov
movsb
mov
or
pop
ds
jge
orb
shll
inc
or
addr16
mov
ds
adc
mov
jnp
mov
cmp
test
mov
in
std
pop
ss
test
andl
sbb
fbstp
push
iret
movl
cmp
add
imul
dec
adc
cmp
cmp
test
cs
cmp
push
sahf
push
cli
or
inc
loope
pop
xchg
sub
dec
add
lcall
ljmp
dec
inc
xchg
cltd
test
mov
loopne
das
lahf
mov
scas
jge
outsb
push
pop
push
into
fcmovb
mov
repnz
adc
mov
jecxz
and
popa
dec
lret
jno
push
les
adcl
jle
popl
cli
bound
in
pushf
lods
fbstp
adc
fldcw
repnz
ret
outsl
into
loopne
fs
fsubrl
jnp
rorb
pushf
mov
cmp
nop
pop
push
pop
daa
test
adc
xor
jl
dec
scas
mov
jmp
cld
add
or
shll
daa
push
cmp
scas
fst
pop
icebp
mov
cld
inc
sahf
mov
mov
jge
stos
xchg
xor
imul
sarl
or
jne
mull
cmp
movsb
or
mov
fwait
aas
mov
mov
push
push
xchg
xlat
xor
shlb
sub
cli
mov
pop
sub
dec
cmpsl
mov
sub
cwtl
cmc
adc
adc
sbbl
dec
cltd
xor
cmp
cmp
jnp
mov
imul
adc
mov
stos
test
xchg
fcmove
pop
imul
pop
ss
in
pop
int
mov
xchg
add
shl
sbb
mov
push
mov
cmp
mov
test
les
mov
leave
jl
insl
add
mov
push
mov
mov
jecxz
mov
fidivl
push
test
cmp
adc
insl
popf
sbb
sbb
mov
jo
idivl
mov
push
mov
push
sbb
std
push
mov
sti
mov
sbbl
fcomp
cld
xchg
jecxz
xchg
cmp
mov
push
cmpsl
call
stos
xor
and
sbb
nopl
pop
nop
lods
stos
aaa
loopne
in
cmp
call
sbb
je
cld
pusha
pop
mov
xlat
mov
jno,pn
iret
mov
sahf
gs
adc
lock
pop
jae
sbb
repz
pop
or
inc
popa
mov
int
outsb
pop
adcb
push
cmp
bound
shrb
cmc
aaa
pop
jns
lods
loope
push
hlt
mov
mov
jmp
dec
jle
mov
js
jae
shrl
repz
cmpb
xchg
push
nop
lahf
and
aad
mov
loopne
subl
push
or
adcb
pop
lret
out
je
push
sbbl
sub
pop
pop
pop
icebp
cmpb
popa
xor
pop
pushaw
xor
lret
push
fucomp
mov
mov
pop
push
mov
cs
add
mov
dec
pop
jo
push
popa
mov
ret
and
xchg
pop
push
mov
test
je
inc
cmpsb
xchg
push
push
add
loopne
jmp
xchg
adc
add
mov
add
jb
jne
testb
sub
sbb
scas
add
and
movsb
std
je
jmp
loope
je
dec
out
scas
adc
mov
mov
jmp
push
push
outsb
test
lcall
sbb
adc
inc
push
js
mov
movsl
test
or
cmp
sub
jg
imul
rcrb
mov
and
ret
les
stc
dec
push
nop
jnp
jmp
dec
in
in
fsubr
lahf
inc
data16
bound
mov
and
sub
mov
lods
xchg
sub
fistl
sub
push
sbb
adc
add
sbb
loope
rclb
cmp
sbb
and
jecxz
cli
pusha
mov
in
adc
mov
pop
into
mov
and
loop
fdiv
mov
cmp
mov
xor
scas
test
sbb
adc
dec
add
or
jle
and
negb
add
jns
sub
stos
gs
cmp
lahf
testb
add
das
sub
std
cmp
inc
mov
mov
add
or
je
and
ds
dec
sti
push
cli
lock
push
pop
cld
dec
shrl
movsl
cmp
es
pop
fldl
ret
pop
xor
add
cmpl
sub
ret
repz
pop
divb
xchg
xchg
sbb
sub
mov
sbb
or
jns
ds
sbb
mov
mov
sbb
fnstsw
adc
jmp
test
push
imul
cmc
aam
adc
mov
dec
mov
in
mov
dec
loopne
jns
push
es
imul
ds
sbb
into
scas
mov
daa
or
push
xchg
incb
sub
roll
pop
sbb
inc
pop
cmp
repz
daa
inc
mov
push
int
add
fldl
and
andl
adc
pop
cmpsb
mov
or
mov
rcr
out
das
enter
ret
cwtl
jb
jg
ret
cli
push
or
add
push
rcll
dec
add
pushf
lret
mov
fiaddl
push
xchg
decb
mov
das
movsb
inc
dec
mov
lds
stos
mov
or
sbb
xor
das
enter
pop
jmp
popa
andl
xlat
push
or
dec
cltd
cmp
js
push
ret
xlat
inc
jecxz
loop
jl
xor
sbb
f2xm1
cmp
push
fstp
jno
cmp
fwait
movsl
cmp
insb
and
pop
or
xchg
or
mov
mov
inc
push
insb
push
adc
inc
mov
bound
pop
xor
sub
push
inc
out
dec
mov
xor
loopne
sub
push
call
pop
jmp
xchg
inc
insl
sbb
cmpsl
or
xor
inc
lods
repnz
test
xchg
mov
dec
dec
mov
imul
lds
cmc
fisttpll
pop
mov
or
add
sub
lret
xchg
fistpl
inc
bound
das
leave
adc
pusha
ss
sbb
jnp
jne
jmp
loop
xchg
lcall
cwtl
daa
fcompl
fs
jnp
scas
mov
push
or
mov
lret
cmp
loope
inc
popf
push
jge
ds
and
xor
push
cmp
in
ljmp
cmp
add
dec
mov
sbbb
enter
shld
adc
fistps
cmpsb
jle
push
cld
loopne
xchg
jg
sub
cwtl
xor
xor
inc
outsb
lahf
or
xchg
fs
int3
jb
test
loopne
mov
push
sub
mov
imul
lret
adc
sub
jl
mov
cmpsl
clc
adc
xor
push
mov
fcomi
push
stos
sti
rclb
push
je
pop
sbbl
je
shll
scas
cmp
xchg
mov
mov
sub
add
mov
xlat
push
jbe
lret
xchg
cmp
int3
or
push
push
jecxz
sahf
push
scas
mov
or
cmpl
mov
fwait
and
and
sti
and
dec
or
cmp
ja
mov
jne
jmp
sbb
and
push
les
cmpsl
mov
ljmp
jbe
or
std
xchg
sub
es
mov
mov
lods
jmp
andl
or
inc
xchg
add
je
sub
adc
pushf
cli
push
push
and
mov
cli
mov
jbe
loop
sub
stos
lahf
dec
cmp
inc
or
adc
call
pop
sbb
mov
mov
sbb
sbbl
jne
mov
ss
cmp
pop
or
and
call
xchg
pop
outsl
xor
mov
adc
pop
test
lock
pushf
pushf
or
push
cltd
rol
or
jp
and
cmp
sub
xor
loop
in
mov
out
mov
cmp
imul
pop
jo
daa
stos
mov
sub
sub
jnp
xor
stos
rolb
cld
test
xor
icebp
inc
test
push
mov
push
mov
je
cmp
add
or
cli
lea
aaa
sbb
push
xchg
sbb
mov
scas
mov
das
mov
cltd
sub
mov
jo
pop
cmp
aad
xor
pop
mov
int3
xchg
mov
sbb
pop
dec
adc
aaa
push
xchg
outsb
jbe
stc
sbb
cmp
popl
sub
rcrl
xor
mov
mov
push
rcl
stos
inc
pop
adcb
jne
add
cld
pop
scas
mov
mov
js
mov
ret
inc
and
push
mov
and
jbe
dec
test
cmp
dec
mov
js
push
mov
fwait
fwait
xor
in
add
pop
ss
mov
jmp
push
pop
popa
addr16
dec
scas
cmp
dec
test
or
in
mov
cltd
xchg
ja
cwtl
sbb
test
cltd
fwait
add
mov
mov
sub
pop
mov
inc
sbb
ja
xlat
repz
mov
xchg
dec
iret
ja
xor
cwtl
mov
rorb
mov
cmc
call
scas
push
push
divl
lret
and
mov
adc
orb
sbb
lcall
or
cmpb
mov
jg
jg
pusha
mov
inc
sbb
and
movsl
sbb
test
imul
jns
decl
jns
mov
and
cmc
push
xchg
jnp
int
loope
loopne
and
stos
add
stc
shl
inc
or
adc
mov
lods
fstpt
push
rcrl
daa
add
sub
fmull
xlat
sbb
inc
pop
and
sti
into
imul
addl
ja
pop
mov
or
push
mov
cmp
sub
cmpsl
mov
fstl
xchg
adc
adc
iret
push
push
add
pop
mov
sub
leave
sbb
or
jne
loopne
push
stos
shl
mov
mulb
iret
test
sbb
jle
cwtl
scas
and
mov
jmp
inc
lret
add
xor
jnp
sub
notb
mov
mov
mov
add
aam
cmpsl
jae
sub
leave
out
xor
inc
scas
add
pop
mov
test
stos
stos
cli
ja
cmp
pop
dec
or
packssdw
add
push
cltd
iret
jbe
movb
dec
add
mov
outsl
mov
jmp
or
mov
je
xchg
mov
shrb
jb
add
fcomps
inc
and
addr16
out
cmovns
and
xchg
loope
shr
sbb
inc
scas
std
fnstsw
lock
gs
fwait
or
sub
inc
scas
xchg
sbb
push
addr16
lcall
sub
pop
pusha
mov
insb
inc
inc
clc
xor
frstor
sbbb
imul
pop
xor
dec
xchg
add
test
dec
leave
pusha
jns
push
arpl
mov
loop
das
sahf
ret
jle
rcrl
inc
out
pinsrw
or
aas
outsb
add
inc
fnstsw
rorl
adc
mov
nop
mov
push
dec
into
inc
add
out
shrl
xchg
xor
jne
aas
mov
outsb
aaa
inc
stos
test
ret
pop
arpl
sub
repnz
ficoms
pop
scas
push
cmp
mov
mov
mov
sbb
cmpsb
dec
dec
mov
iret
es
mov
pop
clc
aaa
lods
dec
cmp
mov
popf
loopne
or
mov
into
sbbl
aam
cltd
or
mov
into
inc
insl
sahf
mov
fsubs
and
in
int
data16
and
das
repnz
adc
mov
mov
sbb
jne
dec
sub
cmp
lods
adc
lea
cwtl
cld
mov
mov
xchg
addr16
sahf
lods
rclb
inc
cmp
test
test
push
pushf
add
inc
sbb
insb
jne
lcall
adc
pop
leave
pop
stos
lea
mov
in
inc
cmc
jmp
lret
stos
orl
sbb
sbb
and
inc
lcall
and
xchg
xor
fisttpll
aad
fucomi
call
sbb
or
out
insl
aam
sbb
mov
jno
jnp
notb
stos
cmp
xchg
imul
sub
mov
mov
jne
adc
repz
jb
cmp
shr
pop
cmp
aam
cmpsl
adc
test
out
cs
cmpsl
sbb
inc
in
es
ja
mov
pop
insl
mov
nop
out
adc
xor
ljmp
movsb
add
adc
aad
imul
push
mov
in
xor
cmp
push
push
imul
inc
std
cli
or
aad
into
cs
push
imul
gs
mov
inc
sbb
fbld
or
test
mov
cmp
xchg
or
in
jb
or
int
mov
jo
leave
pusha
and
mov
icebp
push
stos
popa
lods
mov
jbe
dec
add
sbb
cli
cmp
and
xchg
push
cmp
and
mov
lret
sub
jns
add
dec
jae
jecxz
xchg
fsubs
fdivs
cmp
dec
aad
and
adc
nop
sbb
inc
bound
ljmp
cmp
aam
and
test
ja
popf
sahf
xor
add
adc
xor
cmp
ljmp
cmp
ss
aam
jmp
pop
or
xor
dec
popf
sub
movsl
iret
mov
icebp
dec
jp
lea
pop
xor
outsl
inc
popf
mov
cli
mov
gs
loop
dec
out
mov
pop
out
popf
add
inc
pop
mov
xor
sub
ja
jp
les
repnz
aad
jmp
mov
jg
sub
test
je
dec
sbb
fisubrl
mov
aad
jle
push
mov
mov
xor
rorl
push
insl
scas
push
cmp
mov
lret
pop
lock
pop
mov
pop
aad
fsubl
jne
mov
sarb
adc
pop
pop
cltd
aaa
pop
pop
das
mov
dec
loop
xchg
mov
je
pop
cmpsb
sub
ja
or
adc
xor
jl
pop
ffree
pop
push
mov
fisubrs
outsb
mov
mov
xlat
int
sbb
push
jnp
push
test
jle
mov
rcr
inc
lret
pop
push
push
loopne
xchg
loop
xchg
adc
pusha
notl
jae
sarb
clc
cli
dec
cmpsl
fdiv
or
mov
push
fwait
rcr
dec
repnz
jmp
xchg
dec
cmp
sbb
mov
or
mov
xor
addl
cmp
stc
add
imul
inc
scas
add
clc
push
or
mov
testl
cmp
pop
sbb
pop
or
add
xor
aad
sti
jl
nop
pop
sbb
xchg
repnz
fs
inc
pop
cmc
mov
cli
lahf
mov
mov
pop
adc
xor
fstpl
mov
movsl
push
popf
and
and
icebp
popf
xor
testb
inc
inc
lock
dec
mov
pop
test
inc
popa
jns
mov
jl
pop
xchg
call
orl
out
into
aas
outsb
jg
sbb
xchg
sub
mov
lods
xor
mov
jne
push
test
adc
dec
dec
push
adc
pushf
fwait
adc
pop
lcall
push
cmc
mov
ljmp
jp
stc
dec
mov
jl
popa
sub
jb
jnp
imul
push
mov
fs
dec
push
mov
out
pop
xchg
jmp
sti
jg
sub
mov
movsb
aaa
clc
xor
pushf
or
in
test
in
std
xlat
aad
add
rol
nop
mov
stos
pushf
xor
xchg
je
mov
jge
aaa
mov
dec
les
cmp
shrl
insl
add
ret
adc
ss
jnp
xchg
sub
jl
ret
add
xor
pop
mov
xlat
pusha
cli
pop
jl
jmp
outsl
test
mov
xor
fst
imul
and
cmpsb
push
push
dec
mov
xchg
pop
cmp
sbb
repnz
pop
sbb
dec
xlat
icebp
xchg
sub
sub
call
sub
mov
popa
jns
aad
cli
lock
sub
mov
stos
push
stos
adc
fs
add
fs
out
mov
mov
mov
add
bound
xchg
ja
test
insb
fwait
adc
pop
test
mov
pop
test
cmp
mov
hlt
mov
int3
aas
add
aas
mov
cwtl
stos
cld
add
nop
sbb
insb
jle
cmp
out
pusha
hlt
or
sahf
add
mov
or
xor
fwait
aas
loope
dec
cmp
sti
inc
sub
outsl
and
iret
fildl
pop
rdtsc
inc
fwait
sti
xor
xchg
sti
mov
lcall
leave
cmp
add
push
mov
rcl
icebp
aas
ret
dec
lock
inc
xlat
pop
xor
cmp
lock
mov
xchg
push
cld
sahf
dec
xchg
and
leave
fcoms
xchg
bound
push
hlt
mov
xchg
aaa
push
mov
scas
ret
lret
xchg
mov
lcall
out
xchg
pop
in
cmp
jbe
aas
aaa
clc
jo
jmp
fdivs
enter
fisubrs
jecxz
mov
add
mov
jbe
jle
sti
pop
mov
fnstenv
incb
xor
mov
iret
xor
inc
fnstenv
cmp
jne
mov
sahf
insl
push
or
orl
push
stos
or
pop
cltd
add
lods
ds
scas
cs
mov
fxtract
xchg
test
push
sahf
dec
jae
mov
das
sbb
push
sub
mov
push
pop
inc
sahf
call
popf
fs
in
clc
jae
pop
mov
pop
mov
mov
inc
pop
cmpsb
pop
mov
das
test
pop
and
icebp
sbb
or
add
insl
in
push
out
faddl
rol
mov
in
sbb
xchg
cli
mov
popf
cmpsb
push
enter
ljmp
fcmovne
push
aad
push
call
xchg
stos
int3
call
mov
daa
pop
movsb
add
inc
pop
xorl
aad
or
insb
jge
xor
add
jo
sub
sub
daa
push
shll
stc
repz
arpl
mov
int3
leave
mov
push
push
repz
fisubrs
clc
leave
push
mov
xor
stos
sbb
aas
rcr
mov
movsb
dec
sbb
in
push
xchg
sbb
dec
dec
jecxz
cmpsb
and
xlat
mov
ss
jae
or
cmp
cmp
aaa
out
test
dec
or
sub
cmp
lds
inc
dec
push
inc
dec
aaa
xchg
insb
push
fdiv
addr16
addr16
movsl
mov
add
cwtl
xchg
jo
cmc
xchg
inc
adc
mov
jl
add
test
xor
es
pop
mov
inc
or
adc
in
push
test
mov
jb
fidivs
aaa
xchg
sti
test
lods
mov
das
pop
sub
popf
push
fwait
imulb
shr
push
outsb
inc
inc
lahf
sub
mov
stos
pop
cmp
inc
ret
add
push
ljmp
pop
fsubrs
popa
clc
mov
xchg
fstpl
push
push
jnp
xchg
imul
out
lds
pop
adc
adc
mov
mov
xor
xchg
arpl
jne
notb
cwtl
daa
sahf
cwtl
xchg
sub
mov
fbld
mov
loopne
inc
stc
lods
cmp
fstl
dec
cmp
push
add
movsl
aas
fs
jb
cmp
pusha
mov
ljmp
mov
push
test
lds
add
xchg
mov
adc
mov
push
in
bound
xor
inc
xor
adc
cmp
jo
add
test
pusha
outsb
inc
cmp
je
call
xchg
push
movsb
stc
test
test
lock
in
adc
arpl
push
add
cmp
xlat
imul
out
pop
push
out
adc
stos
pop
xchg
nop
cmp
repnz
stc
je
cmp
mov
inc
and
xchg
add
out
jle
jl
shrb
add
cltd
inc
sub
fwait
xor
stos
inc
add
dec
add
adc
insb
cwtl
jecxz
sbb
and
shrb
mov
insb
cmp
movsl
aam
xchg
or
mov
xor
sbb
mov
mov
jp
in
in
fisubs
mov
or
cmpsb
sbb
xor
mov
pop
jbe
or
cmpsl
scas
test
mov
fsubs
dec
xor
mov
xor
inc
jg
mull
push
test
insl
xchg
jg
xor
sahf
pushf
outsb
sbb
cli
xchg
lds
popa
imul
loopne
jne
cs
loope
mov
fwait
mov
mov
les
mov
dec
mov
sbb
cmc
mov
aaa
and
inc
shr
outsl
sub
xor
shrb
inc
repz
xchg
int
fsubr
and
sbb
icebp
push
xor
xchg
loope
rcrl
leave
dec
repz
movsl
push
mov
pop
fs
cld
inc
mov
stos
cwtl
pop
sbb
aad
jp
fisubs
mov
cmp
jmp
sub
popf
pop
sub
mov
inc
add
out
sbb
cmp
in
pop
xorb
mov
xchg
ss
jp
fbstp
loope
outsl
sahf
mov
lcall
jecxz
gs
addr16
dec
loope
dec
xor
lcall
mov
rol
xchg
loope
addr16
jg
xor
mov
mov
shl
cmp
pop
sbb
fldcw
insl
xor
sti
mov
adc
leave
stc
les
cwtl
pop
popa
push
insb
push
jge
ja
add
xor
cmp
push
mov
push
cmp
cli
lods
sub
enter
test
subl
enter
sbb
movsb
cmp
xor
cwtl
cmpsl
adc
lret
cmp
aas
icebp
out
sbb
cmpsl
movb
pop
push
push
stc
mov
jae
xor
ret
cli
inc
mov
xchg
sti
jg
jmp
sbb
imul
mov
cli
and
cmp
aam
mov
dec
mov
hlt
push
sbb
shll
mov
mov
mov
adc
xchg
lcall
loopne
xor
fists
popa
int3
je
add
mov
popa
jmp
call
mov
aas
sbb
arpl
jp
push
imul
cmc
test
sub
leave
add
mov
inc
pop
jp
push
aad
xchg
add
es
sbb
adc
push
movsl
xchg
and
fwait
in
les
ds
notb
lods
push
pop
scas
enter
pop
cli
adc
ljmp
inc
negl
dec
out
add
test
insl
aam
ret
dec
out
mov
jle
test
jne
stc
je
sbb
sahf
pop
out
inc
xchg
insl
inc
inc
gs
aas
adc
shrb
int
pop
xor
add
mov
xlat
and
aam
push
and
mov
push
mov
add
mov
push
stos
addr16
xchg
sbb
inc
rep
arpl
mov
nop
daa
sbb
sub
call
mov
xchg
in
or
lcall
cwtl
aaa
aad
scas
nop
or
mov
lahf
pop
sbb
cmp
ret
mov
sbb
movsb
dec
add
sub
fnstsw
outsl
dec
popf
jo
nop
out
data16
mov
outsb
sbb
mov
mov
and
lret
testb
dec
daa
mov
fs
mov
sbb
fsubrs
out
sahf
fcompl
adc
push
sti
test
cmp
imul
jl
aaa
jle
sub
hlt
mov
popa
sbb
xchg
mov
or
push
fstpl
mov
jp
push
popf
push
in
into
push
jne
dec
fs
add
jg
jp
cld
ja
cmpsb
and
mov
adc
jp
leave
cs
cmp
testb
mov
std
mov
icebp
mov
inc
psadbw
sub
pop
add
pop
mov
push
scas
and
push
adc
mov
dec
add
cltd
or
mov
adc
fidivl
xchg
orb
adc
aas
int
lods
mov
xchg
add
jns
sahf
jmp
adc
fldcw
pushf
push
idivb
push
stos
pop
fbstp
fsubr
clc
shrb
adc
test
push
pop
cwtl
fbstp
jle
loop
test
cmp
jl
int
leave
cmp
jbe
push
mov
pushf
mov
movsl
cmp
xor
je
jl
mov
mov
loop
ds
cmc
dec
ret
call
mov
nop
daa
movb
fcmove
aam
cld
cld
ljmp
push
mov
int3
xlat
scas
inc
punpckhdq
pop
out
and
xchg
add
hlt
int3
pop
popf
mov
pop
adc
clc
ret
xor
xchg
pop
repnz
jge
std
xchg
pop
sahf
mov
inc
jle
test
xor
lods
orl
mov
das
mov
pop
cli
mov
lods
in
push
cli
into
cmp
js
rcl
xor
mov
ret
jmp
add
stc
or
mov
and
dec
xchg
mov
dec
imul
push
imul
pop
add
fdivs
aam
in
push
jmp
rol
push
mov
rolb
out
sub
fs
push
pop
pushf
mov
shll
repz
fsts
ret
sub
pop
fcomps
xor
or
out
xchg
mov
cmp
xor
in
mov
mov
dec
push
push
lods
insb
mov
xor
scas
add
vpsrad
sub
xchg
dec
dec
mov
in
mov
add
insb
inc
jmp
mov
sarl
and
sbb
ljmp
xor
imul
jae
pop
pop
push
mov
scas
jo
daa
vcomisd
outsb
mov
in
sbb
sub
add
push
sti
test
push
xchg
xor
mov
mov
loopne
ds
add
andl
pop
es
xchg
call
fsubrs
nop
insb
mov
iret
daa
pop
sbb
and
shrl
bound
cmpsb
pop
shll
rclb
ss
rcl
push
push
call
fisubl
bswap
rclb
sbb
mov
nop
popa
shll
mov
mov
inc
inc
sti
lea
test
imul
sub
lods
icebp
fistpll
les
dec
dec
neg
jo
das
les
sbb
mov
sbb
pop
cld
rolb
loopne
imul
inc
jle
outsb
inc
jb
dec
pop
cmp
adc
movsb
inc
push
inc
dec
pop
js
pop
aaa
cmp
dec
out
jns
jo
int
dec
xor
subb
inc
cmp
sub
pop
push
xchg
xchg
pushf
add
scas
popf
lock
loope
lcall
ss
aas
xchg
clc
dec
xor
insb
pop
out
rolb
mov
sbb
call
inc
adc
fidivl
pop
mov
push
in
add
cmpsb
mov
dec
dec
mov
cwtl
xlat
int
cmp
ljmp
sub
xchg
cmpsl
cmp
fnsave
mov
or
pusha
add
jecxz
pop
push
outsb
xlat
daa
stos
jne
pop
je
pop
xor
lcall
ja
pushf
in
outsb
jp
out
jae
icebp
in
mov
xchg
cmp
add
add
stos
mov
loop
mov
or
ret
xchg
mov
sbb
xchg
cli
cli
pushf
mov
aaa
mov
aad
xor
es
jbe
popf
test
add
mov
mov
in
dec
out
mov
cmp
insb
in
iret
fldlg2
sbbl
arpl
aad
call
adc
mov
xor
add
push
dec
lods
cwtl
jne
xor
sub
jae
add
nop
cmp
sub
mov
inc
pop
pusha
lods
cmc
mov
sbbl
sti
lods
sub
dec
sub
dec
sbb
pop
pop
xchg
jle
xorb
sub
add
test
shrl
in
rcll
jge
pop
mov
mov
push
ljmp
lds
mov
pop
rcrl
mov
push
mov
sbb
xchg
lock
inc
mov
mov
scas
shrl
sbb
sub
or
pop
ja
mov
mov
adc
imul
popf
ret
xchg
mov
insb
testb
pop
adc
mov
cmp
mov
jmp
jecxz
shl
push
cmp
push
or
mov
jno
les
lock
sub
xor
bnd
testl
add
movsl
sbb
in
push
dec
fimuls
and
add
mov
iret
fsubrs
notl
shlb
jo
mov
out
xor
sarl
bound
mov
push
lds
push
inc
flds
sub
pop
add
test
iret
adc
xor
dec
enter
sub
std
fidivs
mov
jp
into
or
pop
rcrb
lahf
and
inc
cli
mov
or
dec
rolb
rorb
mov
nop
pop
cltd
xor
out
jle
and
inc
cld
enter
sub
aaa
adc
ds
mov
cmpsb
pop
mov
cmp
mov
loop
aaa
sti
dec
popf
cmpsl
dec
sbb
iret
aad
data16
out
test
aaa
mov
cmpsl
sub
shrl
mov
ds
sub
xor
inc
in
int
movsb
inc
xchg
pop
lock
pushf
mov
fidivrl
in
test
mov
mov
mov
in
pop
cwtl
frstor
mov
xor
cmpsb
mov
ja
push
pop
sub
lahf
mov
pop
es
lds
jecxz
adc
push
sbb
outsb
mov
cmc
lea
pop
loope
push
and
lahf
cmp
repz
daa
xor
jp
jp
fnstcw
mov
xor
leave
outsb
loop
rcrl
sub
mov
pop
add
popf
or
xchg
jle
fistpll
rclb
dec
scas
push
jg
jecxz
cmp
mov
call
inc
enter
pushf
pop
mov
mov
mov
sbbl
cmp
add
lock
adc
rcll
xchg
mov
stc
lds
fimuls
cmp
rcrl
pop
call
movsb
aaa
iret
or
push
or
mov
mov
inc
js
hlt
es
pop
cltd
scas
pusha
lea
jo
or
lret
ret
xchg
ds
jnp
mov
insb
orl
mov
cltd
mov
push
xchg
ret
outsl
mov
repnz
mov
sbb
mov
jg
sbbb
iret
loop
out
loope
jns
testl
adc
jae
pop
xor
mov
int
fld
push
in
jle
pop
jne
scas
jge
fdiv
lds
mov
repz
push
das
jnp
popa
inc
das
xchg
icebp
adc
stos
or
cmp
add
insb
sub
pusha
jo
lea
xor
xlat
and
mov
cmpsl
add
inc
mov
std
sbb
sti
lahf
dec
inc
cli
ss
imul
mov
insb
out
xchg
jmp
in
call
sbb
out
scas
scas
loop
xchg
pop
pop
movsl
inc
loope
outsb
jmp
in
pop
push
mov
sub
mov
out
mov
lock
lods
sub
fcomp
shll
cmp
js
outsl
jp
out
inc
pop
xor
jns
subl
ds
hlt
mov
pusha
xchg
sub
and
xor
enter
sub
mov
outsb
ds
dec
and
push
daa
shrl
mov
data16
mov
test
lahf
push
lret
pop
push
mov
in
mov
pop
sub
or
add
jae
inc
push
orl
stos
inc
ja
ljmp
call
mov
xchg
add
les
dec
xlat
icebp
addr16
repnz
dec
fstpt
xor
push
adc
pop
ljmp
fildl
mov
jle
outsl
roll
daa
gs
sbb
and
stc
jno
shrb
std
ja
sub
pop
in
sub
and
fildl
sahf
cmpsl
jmp
cmpsl
push
and
push
fcmovu
xor
adcl
js
sti
mov
in
cmp
clc
pop
dec
pop
adcl
adc
xchg
imull
dec
stc
or
push
jne
mov
mov
repz
jle
scas
xorb
addr16
sub
lret
mov
loop
leave
dec
mov
cmp
aas
into
jle
imul
mov
jmp
cltd
rorl
sahf
adc
jnp
push
movsl
data16
mov
rcll
into
sub
push
and
jb
sub
sbb
cmp
pop
sbb
lret
cld
inc
fisubs
add
testl
loope
push
test
addr16
dec
in
push
cmpsl
cmpsl
cmp
imul
jge
mov
dec
rorb
pop
cld
jg
in
arpl
mov
inc
cmpsb
cmpsl
add
jge
adc
imul
pop
xchg
scas
dec
fidivrs
push
add
dec
sub
pusha
xchg
jbe
sub
sub
push
inc
or
adc
cmpsl
out
cmp
mov
data16
mov
pop
push
mov
push
add
mov
stos
or
xor
in
pop
xchg
fdivl
ficompl
cli
jno
pusha
push
add
mov
jbe
bound
xchg
lods
cld
cmpsb
mov
test
jae
and
or
inc
sub
fisubrl
fistl
sbb
imulb
cmp
jg
push
inc
push
gs
jnp
arpl
jb
lret
ljmp
jp
push
cwtl
stos
fstps
sbb
movsb
shl
aam
sub
test
mov
add
push
mov
pusha
and
jmp
iret
andb
and
fildll
push
push
adc
fdiv
shll
movsb
call
mov
aaa
or
lcall
pop
push
push
jl
fs
cmp
pop
out
sahf
push
adc
sbb
or
sub
mov
mov
adc
dec
pop
in
xchg
sbb
mov
dec
and
loop
push
xchg
je
and
enter
lret
fwait
xchg
adc
hlt
loope
daa
cmp
bnd
jmp
rcrb
sbb
bnd
les
jae
pop
adc
pushf
testb
and
dec
xlat
pop
pop
pop
lea
sub
enter
mov
push
je
es
fisubs
xor
cmpsb
leave
push
add
mov
in
jne
rcl
and
mov
hlt
pop
pop
mov
pop
jbe
xlat
stos
rcl
arpl
sub
cmpsl
cmp
test
and
add
cmpsb
mov
leave
and
das
cli
push
dec
mov
pusha
cmp
xlat
lods
rcll
mov
adc
lods
lahf
and
dec
dec
fs
and
call
repnz
movsl
or
pop
inc
pop
dec
mov
stos
aas
rcrb
test
lahf
je
in
in
and
insl
pop
dec
xchg
dec
inc
repnz
xor
scas
in
jmp
xchg
add
jno
int3
jg
sbb
stc
pop
movsb
repnz
push
ss
cltd
movb
xchg
add
mov
shlb
fadd
pop
cmp
jnp
dec
repnz
pop
xchg
idivb
inc
ret
inc
adc
movsl
dec
sub
mov
dec
fldenv
sub
mov
movsb
or
sahf
negb
mov
leave
push
addr16
into
inc
in
and
cmp
inc
or
js
repz
rolb
dec
cmpsb
adcl
sahf
mov
jg
ss
push
cmp
cltd
or
jmp
rcll
int3
push
jo
nop
dec
sbb
hlt
mov
xchg
out
aad
fnstenv
xor
jge
loop
or
mov
dec
pop
xor
cmp
loopne
test
mov
icebp
jp
cs
jmp
jl
pop
insb
es
fnstcw
loope
and
out
inc
add
mov
loope
insb
mov
adc
or
aad
mov
sbb
sbb
xchg
jmp
inc
jbe
inc
mov
jae
cwtl
mov
or
frstor
sbb
cmp
scas
mov
stc
or
mov
dec
stos
orb
jno
call
push
xor
fwait
push
mov
fwait
mov
stos
push
lock
mov
hlt
inc
xchg
icebp
fcomp
mov
lods
repz
ficomps
xor
cmp
loop
dec
sub
pop
aaa
add
sbb
or
and
mov
aaa
into
sub
jmp
and
pop
xor
cmp
or
cmpsl
or
inc
clc
xor
pop
dec
cli
lcall
addl
sbb
icebp
adc
xor
xchg
mov
push
ja
adc
xchg
dec
fwait
jge
mov
test
push
sub
dec
mov
lret
vcvtsi2sdl
mov
mov
add
in
test
filds
adc
popa
push
jb
fwait
mov
jno
fadds
sarb
mov
insl
jbe
or
and
adc
xchg
in
mov
hlt
lret
inc
out
dec
sbb
iret
frstor
aam
jp
nop
repz
daa
repz
inc
jmp
in
pop
add
mov
scas
sub
push
mov
stc
or
iret
cmpsb
inc
ja
cmp
jo
js
push
ret
sbb
dec
dec
in
test
jno
and
mov
sarb
sarl
mov
hlt
and
mov
imul
call
lret
jl
shlb
lret
outsb
push
test
and
int
das
movb
daa
dec
add
mov
icebp
sbb
fs
add
dec
sub
or
stos
ljmp
add
shrb
mov
loop
mov
mov
arpl
cmp
mov
aam
xor
sub
xchg
scas
jae
dec
inc
in
lods
xor
sti
jecxz
inc
dec
and
or
push
loopne
int
gs
ss
fs
jb
frstor
out
xchg
loop
or
pop
add
and
call
dec
mov
cli
loopne
sbb
lahf
cs
lahf
sub
fdivs
add
scas
ffree
int
andl
mov
push
xchg
int
je
sub
adc
xchg
sbb
inc
vucomisd
dec
out
out
hlt
mov
pop
aam
xor
push
mov
rol
cli
clc
test
out
shl
push
nop
out
mov
notb
jmp
sub
mov
jp
add
adc
and
mov
rcrb
ret
mov
imul
xor
les
mov
and
adc
jmp
mov
jp
setbe
and
jnp
cmp
ret
out
dec
add
mov
aam
cmp
insl
scas
pop
sbb
cmp
sub
ret
lcall
adc
subb
sbb
psadbw
in
sahf
or
pop
cmpsl
outsl
or
mov
cmpsl
jecxz
cmpb
stos
mov
pusha
mov
test
or
add
pop
cmp
cmp
fists
loop
mov
pop
out
test
mov
sbb
ja
adc
mov
xchg
ljmp
mov
sbb
ljmp
adc
mov
sub
mov
mov
jns
push
cltd
shl
mov
cli
inc
inc
fwait
cmp
int3
jne
mov
xchg
xlat
jns
inc
adc
lret
and
xchg
lcall
cmp
dec
outsl
insl
call
fwait
dec
and
pushl
lods
inc
arpl
movsb
cld
push
into
pop
out
dec
dec
arpl
bound
push
cmpl
mov
mov
and
mov
jl
cmp
loopne
mov
cmpsl
icebp
sbb
mov
lods
outsl
xor
in
mov
xchg
outsl
sbb
cmp
scas
dec
das
stos
jae
sbb
pushaw
lods
lret
xor
cltd
push
xchg
out
xchg
jnp
dec
pop
jne
enter
shl
pusha
mov
or
lcall
frstor
sarb
loopne
adcl
ja
jns
rcrb
inc
mov
insl
jl
data16
add
xchg
fs
dec
in
sub
cmp
in
cld
or
push
ds
call
xor
jne
and
pushf
sbb
ret
push
insl
fimull
push
mov
jmp
movsl
fisubl
push
inc
inc
jmp
out
or
faddl
mov
in
push
addr16
mov
cmp
xchg
outsb
mov
xor
sahf
mov
test
and
adc
cltd
inc
loop
outsb
cltd
je
push
lret
dec
or
loope
pop
fmulp
fimuls
sbb
inc
cmp
fisubl
xchg
sti
push
jno
stos
mov
imul
cmp
insb
dec
adc
jl
imul
stos
sub
and
repnz
cmpsl
dec
mov
in
es
push
mov
jmp
push
fucompp
hlt
adc
fxam
mov
inc
aad
mov
jnp
mov
mov
imul
jmp
jle
mov
lods
int3
ds
add
popa
pop
jno
mov
clc
jno
incb
cmp
aad
daa
push
ljmp
icebp
push
mov
fcomps
pushf
jecxz
jnp
sub
pop
mov
pop
movsb
mov
push
add
cmp
mov
add
sub
mov
fmull
pop
jp
or
mov
jge
sbb
cmc
addr16
out
xchg
sbb
inc
sarb
mov
push
popf
sbb
sbb
bound
iret
daa
idivb
nop
outsb
ds
ret
clc
ds
pop
mov
popf
mov
lret
pop
xchg
sub
aam
out
lods
add
add
pushf
das
ja
inc
adc
sub
fidivrl
xlat
xchg
mov
push
adc
fcoml
cmp
push
add
jns
loop
out
mov
pop
mov
test
jno
into
dec
dec
dec
pop
dec
fmul
lret
inc
notl
imulb
cmpsl
popa
adc
push
dec
iret
daa
jge
iret
fisttpl
add
pop
jmp
aad
pop
mov
push
or
dec
movsl
add
js
inc
mov
jno
fcoml
aas
xchg
js
lret
lods
inc
mov
sahf
inc
leave
cmpsb
mov
dec
out
rcrb
xor
out
insb
inc
out
sub
jle
dec
xchg
pop
or
aad
movsb
mov
lahf
inc
cwtl
mov
adc
jbe
dec
lret
imul
test
sub
pusha
jnp
lea
pushf
stos
inc
or
push
sbb
mov
hlt
aaa
mov
adc
add
sbb
jmp
sbb
mov
inc
or
leave
sbb
fs
pop
mov
add
imul
xchg
push
sub
fsubl
or
test
fildll
lods
jo
test
je
xchg
adc
fisttps
shlb
add
cmp
cmp
cli
lret
add
pop
cs
scas
das
punpcklbw
mov
adc
xchg
fdivr
aam
sub
cmp
sbb
mov
and
push
dec
mov
lea
mov
lcall
ljmp
adc
push
out
arpl
xchg
lods
ljmp
xchg
jo
xchg
sbb
mov
inc
jg
push
fwait
jo
enter
cli
xchg
add
sbb
xor
popa
out
stos
cli
push
loope
iret
or
push
jb
xchg
test
cmp
adc
dec
cmp
iret
mov
loopne
adc
ljmp
jbe
jns
loop
sbb
push
repnz
scas
add
add
lret
fcmovne
and
push
jmp
stc
scas
icebp
push
push
or
in
add
sub
fistpl
sbb
cmp
idivb
icebp
mov
bnd
addr16
sub
xor
sub
mov
or
ds
test
iret
loopne
jno
stos
repz
push
movsl
iret
cmpsl
imul
or
and
sbb
shrb
das
and
insb
divl
dec
lcall
sbb
pop
mov
cmpsb
fsubrs
cmp
jmp
sbb
mov
icebp
cltd
dec
out
inc
fldl2t
push
insl
add
add
jb
in
mov
leave
insl
jle
sbb
rol
movsl
rcrb
insl
subl
jb
hlt
and
add
xchg
lock
pop
sar
popf
jp
movzbl
inc
jecxz
pusha
add
aaa
movsl
aad
cltd
sub
adc
sub
insl
mov
pop
and
add
scas
fwait
xor
fstl
add
pop
adc
sbb
push
lret
mov
testl
mov
push
mov
cmp
stos
mov
repnz
iret
gs
add
cltd
xor
je
push
jmp
out
test
iret
mov
add
ds
xchg
repnz
and
in
in
dec
push
push
orl
sahf
jno
in
push
mov
pusha
push
in
sbb
scas
dec
fists
ficompl
xchg
fs
pop
or
adc
ss
mov
push
pop
xchg
cmp
lret
out
push
stc
sbb
push
mov
pop
clc
jae
adc
cs
insb
pop
inc
inc
je
je
in
xchg
xchg
inc
inc
add
mov
xchg
aad
enter
cmp
push
pushf
xchg
add
aas
xchg
sbb
mov
in
inc
daa
or
adc
mov
xor
fistpll
into
subb
shr
or
jns
mov
fsubrl
or
test
cmp
inc
jmp
sahf
mov
insl
jmp
mov
or
xlat
mov
dec
sbb
push
ds
mov
bnd
stos
popa
dec
dec
adc
insl
jge
mov
in
fisubrs
mov
nop
outsl
pop
adc
pop
test
dec
enter
adc
aad
scas
mov
pop
test
push
lock
and
daa
shl
lea
ljmp
push
inc
jle
push
xor
cs
cmp
sub
mov
mov
mov
in
push
mov
out
mov
gs
cmp
push
xlat
jae,pn
mov
mov
mov
andnps
dec
inc
xor
fadds
daa
mov
dec
scas
jg
loopne
imul
pop
mov
aaa
outsl
arpl
insl
push
das
pop
xchg
shl
in
xor
ljmp
fdivrp
xchg
mov
xor
and
incb
lea
xor
pusha
scas
sti
adc
cwtl
push
mov
or
cs
mov
sub
insb
xor
or
subb
cltd
xorl
sub
mov
mov
mov
push
in
addl
push
push
adc
or
or
enter
mov
int
pop
mov
sub
test
sub
or
ljmp
mov
xchg
pop
aaa
scas
scas
nop
sub
jp
sub
jns
mull
aaa
inc
fimuls
jmp
stos
xchg
cmp
jecxz
push
movsl
sub
mov
shll
pop
scas
or
dec
mov
aas
das
pop
inc
aad
into
inc
loope
fwait
arpl
arpl
add
xor
dec
mov
inc
inc
xor
xor
fstpl
mov
sub
sbb
fcmovb
fisttps
mov
in
adc
leave
push
ficomps
arpl
cmp
ror
jae
inc
fcoms
pop
xchg
int3
jno
sbb
data16
pop
xchg
sbb
sbb
loope
xchg
mov
je
xor
mov
out
rolb
adc
arpl
pop
mov
push
shlb
mov
addr16
ljmp
nop
inc
aaa
mov
push
mov
sbb
cmp
push
loop
add
insb
or
adc
xor
mov
sbbb
cmp
lods
inc
push
ds
cltd
jno
xor
fidivrs
and
inc
mov
mov
jmp
dec
add
add
pop
xlat
stos
inc
leave
xchg
enter
in
mov
dec
push
jmp
and
andb
repnz
aam
sahf
js
pop
mov
or
call
jecxz
sbb
insb
shl
movsb
or
dec
dec
sub
in
or
cli
es
sub
xor
mov
mov
push
loope
xchg
in
mov
mov
jns
roll
ficompl
andl
add
cs
jecxz
adc
xor
jnp
cmp
daa
pop
insb
xchg
arpl
sub
mov
jnp
mov
mov
sarb
es
and
pop
fisubrl
add
sbb
mov
mov
mov
sahf
or
cmp
cmp
stc
lcall
fwait
pop
xchg
dec
or
jmp
xchg
leave
pop
xor
push
out
icebp
dec
loop
adcl
push
cltd
xor
fcomps
inc
aam
lods
mov
adc
cmp
aam
aam
ret
insl
pop
movsl
and
lods
repz
insl
or
adc
fldl
inc
ret
mov
aad
inc
push
fwait
orb
out
sbb
jbe
rcll
dec
insl
jo
mov
sub
loope
or
mov
xchg
xchg
test
clc
mov
or
add
sbb
sub
mov
push
sub
jge
xor
icebp
dec
andb
sub
lret
addr16
and
adc
dec
or
daa
cli
or
cwtl
and
xor
into
test
sub
mov
lcall
mov
or
popa
dec
cmp
inc
or
push
cmp
add
nop
mov
cltd
jno
ficompl
push
xor
mulb
gs
shlb
inc
mov
enter
shlb
pop
push
shl
orb
mov
lahf
enter
mov
scas
outsl
lret
lret
addr16
and
inc
movlps
sub
and
pop
xchg
add
fldl
fmuls
imul
pop
movsb
jb
dec
out
sbb
sbb
inc
lods
fnsave
push
pop
inc
sub
pop
rcrb
sub
test
adc
das
sbb
pop
and
shrl
out
cmpsb
pop
lahf
addl
scas
push
mov
out
pop
mov
popf
insb
inc
cmp
orps
or
and
mov
cli
mov
adc
sbb
es
pop
mov
xchg
push
or
push
mov
icebp
xchg
repz
imul
xor
es
scas
pop
xlat
xchg
test
mov
jnp
aad
stos
xchg
or
pop
jl
rorl
xchg
mov
arpl
mov
out
or
nop
adc
push
sar
or
xchg
adc
ds
pop
fdivl
cmc
xorl
dec
jmp
or
cmp
and
in
mov
xchg
in
test
and
dec
fucomip
pop
xchg
scas
pop
out
mov
mov
xor
xchg
and
cmc
stc
xor
or
push
jns
mov
pushf
or
scas
sbb
dec
fdivl
sbb
rcl
scas
popl
repz
cld
mov
mov
mov
mov
jo
jmp
lret
inc
test
cs
and
push
mov
js
notl
hlt
les
jp
sbb
adc
dec
push
push
xchg
aas
or
jnp
test
push
movsl
cmp
sub
cmpsl
jmp
ret
enter
sub
mov
out
mov
adc
xchg
add
sub
mov
mov
cmp
ljmp
js
add
sub
repz
mov
aaa
jge
xchg
es
std
and
jmp
rolb
nop
push
mov
lret
dec
and
jno
push
lods
jmp
gs
subb
mov
mov
daa
mov
add
push
inc
xor
addr16
push
inc
pop
lock
pop
sub
adc
sub
mov
jmp
push
and
sbb
add
mov
cmc
mov
leave
fnstcw
push
les
push
push
mov
sbb
adc
rolb
movsb
add
es
or
pop
sub
xor
ja
push
xor
insb
mov
adc
adcb
mov
cs
pop
icebp
sub
addb
jecxz
sbb
movsl
insl
out
cmpsl
test
pop
pushf
mov
mov
and
mov
sub
inc
lods
or
outsb
inc
lcall
jnp
repz
mov
imul
pusha
cmpb
shll
ret
mov
cli
inc
inc
stos
or
dec
out
mov
push
mov
popf
pop
loop
mov
jl
jbe
adc
je
fldenv
aas
movsb
popf
std
stc
sti
fisubl
pusha
inc
xchg
aaa
into
ret
jne
push
int3
dec
pop
pop
adc
inc
sub
repz
inc
fisttps
decb
or
xchg
ret
aad
and
aad
aam
jb
stos
mov
scas
push
into
in
mov
nop
call
or
movsl
mov
daa
in
or
and
fwait
cmpsl
es
mov
adcb
sub
pop
or
pop
leave
push
test
push
mov
dec
leave
xor
mov
mov
fstps
sbb
insl
sub
xchg
lds
outsb
jae
jl
mov
xchg
aaa
inc
mov
loopne
movsl
lds
mov
or
movsb
pop
mov
mov
xchg
test
sbb
loopne
add
ret
add
push
xor
xchg
mov
add
out
ja
and
cld
movsl
adc
mov
jnp
fcmove
fsts
shll
paddw
mov
shl
push
sbbb
dec
push
ds
adc
aas
jg
or
adc
adc
add
mov
add
sbb
dec
xchg
inc
repnz
add
push
in
les
rorb
stos
imul
mov
xchg
and
sub
dec
aad
jl
jp
sarb
sbb
pop
mov
scas
fdivs
dec
add
out
push
stos
cmpsb
cmp
jecxz
cmp
arpl
loope
jns
xor
sbb
out
pop
sarl
ret
outsl
movsl
or
popa
hlt
pop
pop
add
mov
push
pop
dec
jecxz
in
mov
scas
pop
mov
xlat
xchg
adc
dec
dec
std
jecxz
jmp
and
fcoms
xchg
or
lock
cmp
cld
or
inc
mov
je
xor
sbb
ret
shrl
int
jo
sbb
adc
sarl
jnp
sub
pusha
push
push
insl
clc
jl
xchg
add
and
push
inc
jg
sub
mov
cmp
jl
push
xchg
pushl
xor
push
lods
add
jge
cs
fldt
sbb
mov
lahf
hlt
mov
out
aad
or
aad
test
call
int3
cmp
loopne
daa
out
sub
out
loop
xchg
xchg
popa
stos
popf
in
nop
add
cmp
mov
push
ss
jns
dec
xchg
pop
dec
fcompl
ds
cmp
clc
push
call
jg
lret
call
scas
das
outsl
jnp
iret
sub
jne
rclb
push
lods
mov
bound
lds
inc
in
movsl
mov
pop
das
js
popa
cmp
cmp
push
dec
int
cmc
cmp
lods
dec
inc
push
outsl
repnz
int
std
shlb
dec
xchg
push
lods
movl
adc
pop
es
and
xchg
cmp
adc
mov
cmpsl
icebp
dec
in
leave
cmc
mov
xor
xor
imul
rcrl
imul
bnd
adc
movsb
cmpsl
jge
flds
fsubs
testb
std
data16
push
int3
shrl
adc
inc
mov
push
mov
out
jnp
fsubrs
imul
mov
xor
inc
test
push
mov
inc
add
nop
add
ja
sti
xchg
jl
and
mov
lods
arpl
imul
mov
pop
mov
pushf
sub
add
cmp
fsts
out
test
insl
add
pop
je
adc
xchg
sub
jmp
xlat
mov
shlb
dec
loope
jnp
sub
sbb
inc
dec
xchg
xlat
outsl
cltd
mov
fstpt
bnd
in
subb
stos
inc
pop
out
cmp
cltd
or
fnsave
add
rep
and
and
mov
cltd
and
adc
sub
in
aam
cwtl
mov
daa
jmp
dec
xor
push
insb
inc
push
shll
push
dec
loopne
das
pushf
lea
ds
jmp
adc
mov
sti
push
push
push
or
cltd
pop
jmp
mov
imul
sbb
inc
or
adc
rclb
xor
rclb
nop
das
jg
outsb
es
pop
cmp
or
dec
add
out
test
jl
in
or
stc
mov
sub
imul
icebp
movsl
jge
mov
sub
push
out
mov
popf
hlt
mov
sub
rcrb
lcall
in
inc
pop
mov
lret
mov
xor
dec
cmp
je
out
out
and
dec
pop
and
dec
arpl
lea
mov
test
inc
enter
sub
aas
stos
inc
push
inc
mov
out
and
ja
sbb
pop
pop
and
push
inc
xchg
das
daa
imull
jae
push
jo
pop
jbe
fsubrp
sbb
jecxz
das
into
sbb
mov
adc
rorl
aas
adc
mov
imul
sub
repnz
in
mov
jne
mov
sbb
sbb
mov
mov
adc
push
in
ficoml
ja
xor
bound
mov
ret
hlt
lea
jl
popf
and
adc
loopne
add
lcall
dec
xchg
dec
rorb
clc
mov
jne
imull
in
push
push
adc
fidivs
scas
inc
ljmp
rcrb
lcall
xchg
xchg
sub
mov
sub
jo
dec
xchg
sub
sbb
cli
push
out
bound
rcrl
test
xchg
sub
hlt
test
xchg
dec
cmp
jl
mov
add
in
dec
das
cmp
cmp
outsb
ja
fwait
fs
aas
or
negb
xlat
pop
scas
insl
nop
jmp
shlb
shl
int
push
xlat
add
fmuls
nop
pop
adc
ret
add
mov
cmp
inc
fistl
or
push
mov
decb
dec
call
int
movsl
bnd
mov
addb
ja
cmp
xlat
cli
shrl
xchg
sub
mov
dec
pop
pusha
mov
ret
pop
jge
adc
fstpl
add
xchg
js
push
lahf
dec
pop
add
mov
push
addr16
mull
push
sub
cmp
sarl
adc
xor
mov
mov
jns
icebp
stos
mov
jns
lods
and
pop
mov
insb
push
lock
sti
jbe
movsl
sub
adc
sub
out
cs
or
mov
das
stos
test
push
scas
lcall
xor
sahf
inc
daa
dec
dec
xchg
lret
iret
mov
mov
or
sbb
rcl
rclb
mov
ret
mov
or
or
es
test
stc
or
add
lcall
decl
inc
sbb
insb
xchg
sbb
hlt
aas
adc
xchg
inc
daa
mov
daa
pop
out
vandps
mov
lcallw
cmp
push
adc
dec
mov
lret
pop
or
pop
imul
ja
mov
cmp
lea
push
mov
stos
inc
jmp
dec
push
mov
or
sbb
sub
lret
inc
pop
jl
jb
and
mov
pop
adc
jle
loopne
cmc
add
add
ret
fs
out
xchg
xor
add
lods
adc
inc
mov
add
leave
faddl
mov
mov
stos
gs
mov
dec
and
test
cli
jns
fisubrs
dec
fmull
ljmp
mov
sbb
into
or
mov
pop
sub
xchg
push
in
mov
fstpl
mov
xor
inc
sub
adc
mov
sbb
cmp
addr16
xlat
xlat
popa
and
stc
fidivl
es
pop
or
adc
jnp
jnp
popa
add
mov
faddl
cli
enter
inc
pop
jae
leave
int3
arpl
lahf
arpl
push
lds
cwtl
pop
sub
jecxz
lods
dec
cmpsb
cmp
pusha
das
les
popa
adcl
ds
popa
enter
sub
pop
ret
mov
push
shrb
dec
in
cmpsl
or
cli
pusha
fwait
cwtl
lds
push
xor
in
aad
push
mov
icebp
dec
mov
dec
fistps
shlb
idivb
mov
pop
repnz
sbb
and
iret
hlt
pop
notb
arpl
and
fidivs
insl
data16
loope
xchg
adc
faddl
and
push
mov
dec
ss
sub
inc
repnz
bound
xor
je
mov
icebp
les
adcl
sub
adc
sub
pop
dec
aas
cmp
pop
add
jecxz
lods
jl
fldt
negb
cld
test
ljmp
inc
imul
popf
pop
push
std
xchg
outsl
xchg
adc
insl
pop
cmp
mov
jae
in
movsb
es
sbb
or
sub
push
cmp
xchg
xchg
rorb
add
sub
pusha
mov
xchg
cld
push
xabort
sub
fs
mov
shll
cmpsl
xchg
cmp
xor
push
std
and
enter
or
stos
xchg
push
rcll
sbb
mov
dec
in
aad
push
lret
dec
bnd
das
mov
enter
mov
push
lds
aad
js
repnz
xor
adc
adc
mov
addr16
push
cmpsl
or
mov
cmp
insl
mov
inc
adcl
mov
lret
mov
test
into
push
mov
xlat
inc
or
ja
sub
xchg
imul
inc
mov
dec
in
data16
dec
jne
add
gs
inc
and
loop
cmp
call
cmc
pop
popa
stc
rcrb
repnz
dec
push
insb
add
cmpsb
dec
pop
xchg
cmove
add
scas
jb
rclb
test
movsb
push
pop
popf
push
pop
or
shrl
rol
gs
jp
scas
cmpsl
out
cmpb
xor
push
mov
test
les
sbb
add
stos
pop
or
mov
mov
jae
dec
push
jnp
xchg
mov
pop
scas
js
xorl
mov
mov
pop
nop
cmp
loop
dec
mov
sbb
lods
inc
push
mov
lret
bound
or
hlt
mov
push
push
or
lret
and
cld
sub
call
xchg
pop
fadd
or
sahf
xchg
das
or
movsb
ljmp
aam
call
xchg
hlt
test
ds
and
outsb
call
cmp
imul
mov
lret
xlat
jnp
jp
inc
rcll
pusha
pop
xchg
pop
cmp
dec
in
sbb
int
ret
cmp
xchg
push
lods
mov
xchg
repz
xor
dec
ds
jbe
into
in
cmp
imul
lahf
imul
and
lea
test
out
sub
fidivrs
cmp
pop
les
push
inc
test
repnz
rcrl
inc
jmp
and
cmc
addr16
daa
test
insl
xor
push
sti
push
xchg
loop
jne
ret
sbb
push
fstpl
js
push
ds
pop
cmp
dec
sti
dec
push
dec
jp
in
mov
mov
mov
cmc
cmp
dec
pop
int
push
cmp
sbb
shlb
sbb
and
adc
je
lret
movsb
repnz
mov
rcl
outsb
rcr
pop
dec
jl
or
pop
jne
mov
inc
jecxz
jge
scas
sub
outsl
sbb
mov
or
mov
mov
rclb
in
mov
add
xchg
hlt
pop
or
mov
or
push
xchg
jns
add
sbb
arpl
push
std
or
inc
mov
fnstenv
je
xor
mov
dec
fists
cmp
scas
lods
jo
stc
pop
push
lea
pop
and
mov
test
and
or
pop
outsb
xchg
mov
mov
mov
sbb
lods
adc
lahf
scas
pop
xor
sbb
je
mov
mov
mov
mov
push
pushf
out
test
dec
pop
sahf
inc
mov
dec
pop
in
sbb
dec
ds
lds
sbbl
ffreep
mov
mov
data16
pop
popa
xor
cmp
je
ss
mov
xor
lock
inc
in
pushf
jae
mov
rcll
dec
mov
lcall
aas
lds
neg
js
nop
dec
mov
cmc
lcall
scas
cld
outsl
or
jl
cwtl
lods
andl
aam
and
push
jno
push
fldt
addb
kunpckbw
push
popf
divb
xchg
xchg
fstpl
mov
ss
loope
mov
pop
cmp
xor
mov
dec
std
sbb
ja
cmp
imul
pop
mov
pop
xchg
xchg
lret
stos
mov
inc
xchg
jno
inc
cwtl
icebp
inc
or
dec
aad
inc
pop
sub
shll
ss
je
mov
push
sub
aas
clc
pushf
sbb
ret
cmc
movsb
pop
jecxz
loope
stos
add
lea
or
mov
ret
jmp
push
icebp
out
pop
les
lcall
int3
jo
mov
mov
insl
xchg
cmpsb
push
std
cmpsb
pop
push
rcl
cmpl
fs
insl
dec
sbb
in
pop
jbe
push
cwtl
fisubrl
mov
fs
and
add
inc
call
xor
ljmp
sbb
mov
jae
mov
pop
mov
lock
lods
fisubrl
xor
je
pop
cmp
xorb
xchg
gs
hlt
packsswb
outsl
subl
notb
faddl
lds
inc
in
out
inc
cmp
xlat
int3
cmp
pusha
pusha
add
call
or
mov
rcl
js
xor
push
inc
ficomps
cmp
sub
gs
test
rcl
stos
pop
je
xor
pop
mov
push
xchg
sub
pusha
loope
rolb
test
cmp
lahf
mov
imul
sbb
push
fisubrs
push
movsb
xor
int3
loop
lcall
pop
sbb
out
mov
mov
je
xlat
mov
jno
aaa
into
arpl
push
push
aad
ja
xchg
rorl
loop
mov
xorb
dec
in
inc
pop
js,pn
repz
xchg
ljmp
movsb
sbb
movsl
push
cld
loop
mov
mov
push
pushf
rclb
mov
cmp
add
in
xor
and
sub
jnp
fsubs
jo
sbb
popf
sbb
mov
out
inc
push
jne
testl
or
add
scas
xchg
sbb
push
test
loop
inc
in
jbe
pop
sub
pop
xchg
lea
adc
xor
xor
pop
pop
mov
imul
insb
add
or
cmp
mov
int
xchg
in
rcrl
jl
and
inc
inc
pop
cmc
adc
clc
or
push
out
jnp
iret
and
shrl
rcl
das
mov
ja
andl
jno
test
dec
nop
push
jp
popf
and
dec
ss
xor
sub
lret
in
and
call
leave
mov
or
es
int
repnz
je
xchg
mov
lret
adcb
arpl
add
jne
adc
xor
lock
mov
and
mov
stos
inc
sbb
subb
pop
jne
and
fsubs
add
xchg
xor
sbb
xchg
shl
jno
xchg
test
inc
in
push
je
jne
lret
mov
in
cli
lock
sbb
cltd
push
xchg
loope
sbb
in
xchg
and
shr
push
or
aas
mov
pop
mov
cli
cmp
in
pop
js
loop
sub
call
mov
mov
xor
push
push
test
cwtl
test
and
push
cld
mov
pop
jnp
outsl
add
mov
inc
out
inc
mov
stos
mov
xchg
lods
lods
mov
mov
mov
mov
rcrb
or
movsl
leave
cs
fnsave
aad
pop
push
dec
lcall
ja
mov
pop
mov
sub
mov
cld
dec
aas
out
inc
pop
adc
add
jns
adc
inc
cwtl
or
dec
inc
adc
aad
and
pop
sbb
fwait
dec
es
shll
push
or
shl
sub
stos
dec
sub
sbb
sub
sub
mov
push
das
jle
lret
push
adc
les
push
adc
mov
cs
popf
or
inc
and
lea
loope
xchg
adc
sbb
jle
mov
shll
ret
jge
scas
push
adcl
xchg
jno
xor
iret
push
mov
mov
bound
or
mov
imul
mov
enter
das
rolb
push
popf
mov
dec
fs
xchg
push
nop
cltd
out
lret
xchg
mov
sbbb
lods
insl
clc
sub
xlat
hlt
mov
imul
mov
imul
inc
inc
in
jg
pop
arpl
xor
push
fildll
push
fbstp
inc
movsb
inc
mov
cld
xchg
xchg
popf
dec
add
cmp
test
mov
aas
enter
pop
xchg
inc
std
incb
popa
stos
inc
push
pop
hlt
fninit
sub
adc
aad
pop
int
cltd
push
ljmp
fwait
ljmp
aas
roll
mov
xchg
imul
into
cmp
pop
fsubs
ret
or
xchg
cmp
mov
mov
lods
aas
sub
icebp
into
cmp
jns
iret
sbb
lcall
and
and
scas
inc
jge
out
pop
mov
leave
andb
inc
mov
jns
test
lods
jle
mov
int
jne
imul
pop
in
mov
int3
cmpl
or
adc
enter
inc
movsl
shll
mov
out
test
mov
mov
xor
stos
bound
pop
imul
andb
mov
dec
pop
sahf
push
sbbl
addr16
outsl
and
jg
out
cmp
adc
lods
pop
push
sbb
cld
fidivrs
or
and
push
aaa
or
cmpsl
cwtl
cmp
icebp
ret
out
and
ja
push
jmp
adcl
jmp
out
stc
shlb
aas
int3
inc
cwtl
in
rcr
aam
fidivl
jmp
cmp
std
fwait
xor
add
pop
in
ror
mov
adc
pop
std
jmp
add
jmp
add
sub
repz
fists
fs
jbe
imul
movsb
dec
dec
lea
sbb
enter
push
cmpsl
mov
leave
xor
and
inc
pop
or
mov
cmc
mov
repnz
or
dec
loope
lods
add
inc
fistps
xchg
arpl
popf
jno
jbe
inc
mov
cmpsb
jp
cmp
loopne
xor
sti
andb
pushf
sub
and
stos
insl
and
or
nop
add
fcomi
les
insl
subl
push
mov
sub
inc
push
aaa
lret
inc
int
jmp
push
sahf
adc
clc
cmp
rcrb
push
out
pushf
add
orb
mov
and
adc
pop
arpl
xchg
pop
or
sbb
sub
stos
mov
cmpb
mov
out
arpl
adcb
dec
push
xlat
test
pushf
rcrb
inc
dec
cmc
inc
aas
dec
pop
lcall
inc
call
dec
faddl
mov
and
sbb
lret
mov
in
test
push
ret
data16
scas
fsubrs
xchg
fiaddl
aam
xor
jb
fisubrl
mov
and
cld
push
clc
xchg
mov
sbbb
or
mov
xchg
sub
cld
mov
ja
pop
push
movsb
shl
xchg
lret
dec
test
outsl
pop
xor
mov
pusha
add
fdivs
jae
test
lahf
jp
shlb
into
outsl
aaa
mov
aas
aad
jnp
mov
out
push
stos
aam
rcll
xor
mov
imul
or
inc
lcall
push
loopne
adc
mov
pop
notl
icebp
dec
icebp
adc
aaa
and
mov
loope
out
jmp
jae
out
or
aam
aam
orb
lret
dec
push
xor
push
jo
loop
int
mov
dec
pop
out
mov
movsb
out
xor
mov
lock
sahf
scas
inc
shll
add
in
dec
jae
out
test
rcrl
aas
ja
insb
sbbl
inc
dec
out
test
sbb
hlt
sbbb
and
in
rcrl
mov
stc
fdivr
jno
sbb
or
clc
pop
ljmp
cmp
push
into
lret
dec
jne
jg
inc
aad
pushf
pushf
roll
test
out
mov
adc
dec
movsb
int3
jecxz
cmp
dec
pop
das
hlt
insl
mov
loope
clc
adc
rep
ret
sub
repz
cmp
mov
sahf
pop
mov
inc
fmulp
adc
xorl
and
and
or
xor
push
outsl
add
inc
testl
mov
or
testb
stos
jne
loope
negl
in
outsb
addb
lret
loopne
or
jmp
and
xchg
jle
or
lcall
iret
cmpsl
fsubrs
cltd
pop
popf
nop
mov
jle
cmp
and
insb
mov
icebp
pop
jmp
sti
jbe
cmp
insb
jmp
pop
out
inc
daa
mov
mov
xor
aaa
rorl
or
sub
loope
scas
addr16
ret
mov
cmp
dec
adc
cli
or
mov
sbb
aad
in
shrl
xlat
stos
jns
out
or
jmp
sarb
hlt
das
and
out
pop
mov
mov
mov
sbb
mov
cwtl
xchg
repz
repz
push
scas
xlat
mov
mov
shrb
or
mov
jg
mov
xchg
in
or
push
push
push
cwtl
cmp
ror
repnz
in
or
mov
leave
in
add
xchg
fcomip
shll
fmul
mov
push
scas
xchg
xchg
out
sub
out
ret
stc
mov
pop
sahf
int3
pop
psllw
mov
in
arpl
pusha
xchg
test
js
insl
sub
dec
in
jmp
xchg
stos
inc
add
ss
aam
pop
inc
or
test
stos
in
mov
sub
out
inc
dec
orl
adc
sub
in
jg
lock
add
jp
repz
fidivl
stc
repz
add
xor
sahf
inc
inc
enter
push
in
xchg
pop
es
mov
jae
inc
mov
rol
cld
pop
lahf
mov
sbb
out
in
jmp
ficompl
mov
inc
stc
mov
loopne
out
sub
adc
cmp
dec
xchg
lods
dec
in
fbstp
jo
movsl
mov
popa
loope
iret
jo
je
rcl
repz
fsubrs
lds
mov
daa
add
inc
pop
xchg
mov
sbb
push
push
xchg
cmp
mov
test
cmpsb
rcll
pop
enter
int3
imul
jp
jne
sbb
es
adc
aas
mov
add
lds
out
jo
pop
insb
loop
bound
and
push
nop
ret
data16
mov
aaa
outsl
sbb
inc
testb
jg
mov
inc
cltd
je
lret
jmp
nop
out
gs
cmp
mov
xor
in
inc
mov
imul
mov
cmp
jo
dec
pop
lock
clc
xchg
jp
push
cmp
lcall
push
popf
push
pop
aaa
int
pop
std
jo
imul
inc
or
inc
pop
and
ss
test
jb
movsl
mov
loop
clc
and
ja
cld
and
add
sbb
or
fs
int3
push
addr16
data16
and
mov
cmp
in
repz
pop
imul
notb
xor
out
push
frstor
xor
pop
adc
add
sbbl
ljmp
or
jl
fistl
sub
jb
imul
subps
jnp
ja
outsl
enter
arpl
xchg
or
bound
sbb
adc
xchg
mov
pop
xorl
dec
jno
mov
sbb
mov
aaa
and
jno
sub
lcall
ret
jl
rclb
xor
aaa
cmp
xchg
xchg
inc
cwtl
rcl
icebp
rdtsc
xor
pop
pop
mov
lods
add
lret
in
clc
lock
mov
test
sbb
shlb
adc
adc
int3
pushf
push
shll
jmp
in
cltd
imul
xchg
xchg
pop
jmp
ds
mov
iret
in
dec
rclb
popa
out
sub
repnz
dec
mov
stos
sub
int3
fdiv
mov
jae
push
push
out
in
mov
lods
js
lods
jecxz
cmc
adc
rorl
aad
imul
cmpsb
ja
in
fxam
sbb
inc
leave
push
aaa
push
js
jmp
cmp
popl
add
int
or
sbb
sub
dec
and
and
push
lea
rclb
xchg
cmp
mov
enter
cmp
movsb
push
aas
mov
push
pop
adc
cmp
adc
aas
push
jae
cltd
cmp
jo
ret
mov
jmp
loope
cmp
stc
jp
jmp
adc
push
clc
or
cmpsl
stos
mov
add
pusha
or
push
mov
pop
mov
mov
inc
xchg
test
bound
inc
fcmovb
andb
sbb
add
gs
fwait
inc
sub
jbe
fimuls
cmp
aam
jne
adc
dec
fsubrs
stos
push
adc
cmpsl
xchg
adc
sti
repz
loopne
push
pop
mov
mov
push
subb
cmp
and
cmp
sbb
mov
jno
inc
mov
daa
mov
or
jge
test
pushf
mov
ljmp
dec
mov
mov
or
add
fwait
addr16
add
out
out
push
aam
mov
add
cmp
add
inc
enter
idivb
enter
mov
sti
sahf
pop
outsb
jl
ret
sbb
mov
leave
jbe
pop
mov
iret
xchg
mov
xchg
lret
xlat
or
js
sahf
aad
cmpsl
jp
mov
enter
and
test
stos
mov
ret
xor
adcb
jecxz
int3
push
push
sahf
inc
fildl
cmpb
mov
nop
push
jmp
dec
imul
mov
sub
mov
cli
std
pop
push
test
test
in
out
push
lcall
sbb
and
sti
test
lahf
ss
movsb
test
test
cwtl
jns
lret
push
and
cwtl
das
ds
sub
mov
mov
arpl
in
sbb
stos
jg
jae
cmpl
insl
movsb
mov
fidivrs
rcr
enter
sbbb
call
cmpsl
insl
cmp
fwait
sbb
ljmp
pop
sub
cmpsb
dec
adcb
mov
fbstp
lcall
and
int3
movsb
jns
imul
and
test
cmp
mov
sub
fidivs
inc
cmp
sbb
inc
sbb
outsb
loopne
out
mov
mov
gs
es
pop
mov
mov
mov
jl
test
jge
mov
outsl
pop
insl
mov
incb
lods
ret
push
fsubs
fdivs
mov
xor
ret
pop
and
ret
xchg
inc
sub
jg
sbb
js
inc
pop
cld
dec
cmpb
sub
les
cs
mov
outsb
jnp
lods
jb
sbb
inc
je
stc
test
sub
ds
stc
mov
fisubs
sahf
add
ret
aas
xchg
negl
add
add
scas
out
cwtl
les
imul
pop
dec
arpl
jae
pop
cmp
push
out
and
es
sbb
sbb
inc
sbb
push
mov
xor
mov
cmpsb
pop
dec
sarb
dec
lock
jp
clc
popa
or
sbb
inc
lret
xchg
xor
or
xchg
cs
mov
lret
imull
out
pop
repz
inc
sub
and
aad
fsubrs
aaa
mov
fisttpl
and
sub
jb
loope
dec
sbb
mov
dec
add
mov
je
dec
and
cld
cld
mov
fcoms
xlat
sbb
push
push
aad
adc
adc
xor
std
ret
fisubs
inc
cmp
ja
loopne
movsl
in
rcrl
movl
lret
cwtl
mov
sti
sbb
xor
xor
cltd
mov
cmp
push
jecxz
adc
xchg
pop
daa
fldenv
jmp
mov
cltd
sbb
and
stc
jmp
sbb
ss
cmp
mov
fcmovne
nop
sub
cmp
push
lahf
iret
jae
sbb
mov
hlt
int3
sub
in
cmp
pop
jp
clc
xor
xor
adc
std
scas
aad
loop
gs
cltd
arpl
mov
push
push
popf
aaa
adc
push
sti
fstl
loopne
xlat
aam
xor
and
out
xchg
out
incl
mov
shl
lret
rorb
icebp
fbstp
mov
jle
mov
in
xchg
stc
xor
adc
daa
dec
ja
jp
stc
je
adc
pop
aam
mov
std
imul
inc
fdivs
in
xor
out
sub
add
add
jo
cmp
jns
mov
movsl
push
xor
pop
test
lret
les
add
push
jecxz
xor
pop
ja
in
nop
lock
incl
cmp
repnz
lea
daa
scas
aas
xchg
dec
dec
or
cmpsl
jns
xchg
inc
shll
sbb
ret
ljmp
lods
aas
neg
jle
lods
push
mov
jnp
nop
aas
jl
jl
and
ljmp
das
rdtsc
scas
xchg
shll
or
push
add
mov
sub
inc
aad
cltd
aad
fsubs
pop
xchg
xchg
sbb
loope
orl
int3
pop
sub
push
bound
ret
js
fdivr
lds
push
lea
jnp
lahf
mov
mov
std
xor
outsl
cs
pop
sahf
mov
je
aaa
sub
data16
sbb
mov
dec
dec
xor
aad
cmpsb
push
movsb
add
jmp
or
jge
das
outsl
das
xchg
add
add
mov
sub
adc
jae
loopne
dec
and
jl
dec
gs
sbbb
jbe
addb
pop
nop
iret
lock
lock
fidivl
mov
loope
iret
or
add
in
dec
rcl
cmc
faddl
mov
add
imul
cli
jo
imul
ret
add
into
xorl
adcl
es
sti
cli
inc
bound
add
mov
aad
mov
mov
aaa
push
push
mov
movsb
pop
mov
fstpl
push
dec
or
mov
pusha
cld
outsl
inc
pop
loop
dec
out
rcrb
icebp
push
cli
or
pushf
shl
dec
dec
and
push
int3
add
mov
notb
xor
dec
push
mov
inc
lods
lods
movsl
cmp
orl
ja
fisubrs
lret
movsb
sarb
ss
push
pushf
dec
pop
inc
scas
or
jb
add
int
ds
xchg
jge
iret
add
mov
mov
test
mov
or
into
adc
mov
in
cs
aas
pop
dec
insl
fisttpl
lahf
cs
or
sti
sub
dec
lods
mov
push
es
push
push
lcall
loop
incb
add
fadds
fs
enter
lods
or
stos
xor
jae
movsl
int3
lds
cmc
scas
je
fimuls
shrb
push
das
mov
mov
jne
arpl
xchg
push
test
imul
inc
aas
test
push
sbb
cli
mov
andb
jne
test
cmpsb
mov
jmp
sbbb
push
sbbb
jno
jp
aaa
cmp
add
dec
cmp
out
shlb
push
and
inc
in
inc
out
mov
ret
int3
popf
js
js
or
mov
add
aam
ss
xor
sti
jae
jnp
loope
add
in
cld
mov
jnp
dec
jbe
xchg
sub
jle
sbb
xor
push
pop
pusha
jge
mov
push
sbb
imul
sub
dec
sahf
stos
jmp
jmp
enter
fadds
loop
pop
adc
lds
out
adc
pop
cmp
mov
shlb
lea
imul
insb
mov
movsb
mov
shlb
xchg
test
subb
cmp
mov
lods
call
into
lods
pop
sub
in
sbb
inc
fcmovnu
mov
xlat
jno
repnz
adc
push
pop
ja
iret
jnp
bound
and
sub
bound
mov
nop
mov
jg
dec
sub
pop
ret
ja
inc
mov
and
adc
xor
mov
stos
pop
mov
addr16
dec
and
out
mov
subb
aaa
push
mov
inc
fildl
inc
popa
xor
cmpsb
andb
add
sbb
dec
xchg
dec
mov
jg
out
loop
mov
inc
popf
jmp
cmpsb
and
push
mov
xor
pop
int
push
sbb
cltd
dec
dec
loopne
iret
sbb
xor
out
stc
hlt
ds
pushf
mov
adc
test
mov
out
mov
ljmp
mov
or
jno
mov
out
or
cmp
pop
cmpsb
add
jecxz
notl
mov
mov
shlb
sub
mov
push
mov
shlb
cmpsb
add
and
or
lret
hlt
adc
in
dec
rolb
scas
call
push
loope
inc
ljmp
push
mov
cmpsl
or
xchg
pushf
sub
lock
mov
mov
inc
arpl
fmulp
dec
gs
mov
push
add
mov
mov
aam
aad
ljmp
jg
mov
out
inc
data16
fdivl
cmpsb
negl
das
hlt
jae
push
dec
in
inc
mov
les
sbb
mov
loope
inc
shrb
call
xchg
scas
sub
push
fadds
or
enter
jge
and
jns
nop
jo
xchg
cmpsb
cmpsb
rcrl
pop
dec
push
aam
cmc
add
movsb
call
pop
sbb
push
xlat
lock
cmp
fcom
imul
jbe
icebp
or
dec
cltd
in
roll
push
dec
fwait
pop
out
nop
ljmp
xor
xlat
lods
ds
test
das
outsb
mov
lock
jl
jmp
stc
push
push
jmp
add
add
ss
out
jle
insl
jle
call
lods
xlat
push
popf
or
and
outsl
inc
pop
inc
sub
cmp
cmc
dec
scas
sub
sbb
aas
int3
loopne
fcoms
push
das
aas
popf
xor
dec
popf
sbb
push
inc
add
leave
int
addr16
pop
jno
xor
mov
int
out
push
cwtl
in
sahf
gs
sbb
in
or
cmpb
push
lock
adc
ss
cwtl
dec
test
lods
jmp
mov
cmp
fld
icebp
loop
push
jg
mov
xchg
cmp
mov
push
jl
seto
clc
mov
daa
mov
fistpll
inc
cltd
pop
lahf
inc
mov
fdivs
lret
add
icebp
mov
adc
adc
frstor
incl
or
pushf
andb
sahf
fs
hlt
cli
inc
add
jo
sbb
int
ret
in
insl
loopew,pt
or
sbb
dec
fdivs
clc
out
sub
adc
pop
imul
imul
sti
aam
scas
out
inc
js
xor
divb
int3
jg
int3
pop
pop
inc
fldenv
mov
mov
add
pop
data16
jg
push
push
add
mov
push
inc
call
movsl
lods
outsl
add
inc
sbb
imul
pop
sbb
popa
dec
xchg
push
jmp
sbb
push
pusha
nop
push
cmpsb
xchg
repz
add
js
mov
cmp
mov
cmp
cmp
test
ljmp
and
ret
cmpl
out
loop
loop
sub
loop
enter
or
jmp
cmp
push
dec
les
ds
xchg
jo
loopne
or
add
mov
rorb
sbb
xchg
sti
xchg
xchg
and
or
and
cmp
dec
pushf
push
stos
fsts
or
ret
test
pop
sbb
xchg
repz
ja
ljmp
cmp
xor
outsl
mov
dec
or
cmc
aas
jp
cltd
or
push
subl
cmp
mov
pop
mov
xchg
mov
sarb
fwait
jbe
sahf
popf
push
mov
xor
loopne
pop
mov
addr16
outsl
shrl
lds
add
popa
int
gs
jb
enter
inc
cmc
cmp
cmp
js
aam
jb
pop
sub
dec
add
rcl
dec
mov
cmpl
je
rcrb
rorl
cmp
aam
aad
movb
aad
jo
push
dec
sti
inc
add
movb
inc
stos
mov
mov
fisubl
in
lods
inc
mov
push
dec
jne
sti
inc
pop
inc
xchg
das
pop
popa
lcall
fisubl
lds
js
scas
and
mov
dec
adc
inc
adc
push
test
inc
sbb
cmp
push
xchg
add
cmp
or
jae
mov
jmp
sbb
mov
add
dec
sbb
inc
sbb
jecxz
aas
mov
fisubrs
xchg
sbb
pop
xchg
lds
jle
mov
jl
pushf
dec
pop
hlt
icebp
rcrb
lret
int3
test
mov
es
adcb
inc
repz
shrb
jecxz
stos
dec
outsb
sbb
adc
mov
in
hlt
inc
out
push
dec
cld
inc
in
jmp
pop
dec
adcl
mov
jne
adc
scas
inc
push
mov
cltd
sbb
imul
imul
fisubrs
rcrl
sahf
aaa
sub
cmp
jle
lods
mov
pop
jne
pusha
flds
xor
leave
mov
pop
mov
mov
sub
xchg
sahf
mov
push
mov
sahf
mov
jnp
mov
stos
cmp
sbbl
lods
subb
lock
jecxz
dec
subb
test
mov
mov
pop
aad
jl
xchg
inc
bound
addr16
hlt
pop
adc
call
movsb
gs
push
shrb
adc
jae
mov
lea
push
dec
cmc
pop
jge
cmpsb
mov
les
aaa
push
jle
leave
aam
je
lea
xchg
jne
sti
fwait
subb
jo
sub
repz
out
sub
adc
out
push
mov
mov
movsb
jo
xor
movsb
xor
out
hlt
push
dec
add
popf
mov
fldcw
fs
ja
jle
insl
iret
mov
pop
xlat
cs
mov
cli
call
iret
xorb
scas
pop
out
sub
popa
pop
arpl
out
push
test
sbb
inc
and
loope
fsubrs
popw
cmp
mov
fstl
addl
scas
mov
fwait
sbb
insb
loopne
dec
push
mov
add
inc
je
lods
mov
lods
push
push
ljmp
pop
pushf
or
jl
call
fbld
add
push
jne
adc
jb
sbb
adc
popa
call
xchg
fbstp
fisubs
data16
adc
dec
mov
arpl
aad
add
shlb
sub
std
ja
int3
aam
push
dec
push
fdivs
js
sub
jge
test
jg
lds
ret
shrb
push
mov
jmp
adcl
cmp
roll
lods
mov
cmp
int
out
sbb
test
daa
outsl
outsb
cwtl
or
std
push
sbb
or
mull
ret
dec
mov
ljmp
imulb
pusha
stos
xchg
pop
mov
movsl
cmp
ljmp
in
outsb
sub
mov
xchg
cltd
or
out
jp
pop
in
rcrl
lds
and
outsb
lcall
aad
orb
dec
divb
adc
jno
data16
addb
push
jg
test
arpl
out
pop
add
sbb
jnp
ja
cmp
mov
mov
ss
adc
call
sbb
push
xchg
sti
add
inc
lods
stc
adc
movsw
in
lret
pop
push
icebp
cmpsb
xchg
fwait
rol
xchg
les
mov
cmpsl
mov
test
pop
daa
sub
pop
testb
shll
pop
in
jp
pusha
inc
jmp
adc
mov
inc
xchg
ret
xchg
in
aam
add
mov
sarb
pop
mov
xchg
int3
imul
insl
mov
icebp
xchg
test
add
xchg
add
test
cmc
jno
stos
mov
mov
mov
mov
push
dec
cmpsl
aaa
adc
dec
dec
loop
inc
adc
xor
xor
adc
jecxz
stc
enter
addl
jle,pt
sarb
or
aad
xorl
sarb
push
popa
popf
stc
pop
stc
push
hlt
scas
add
dec
xor
and
lock
inc
test
popa
sbb
pop
push
std
packssdw
popa
clc
cmc
mov
add
sbb
pop
addr16
addr16
out
or
andb
sub
dec
xchg
jnp
inc
jae
fidivl
imul
jne
test
pop
add
xor
sbb
push
cmp
arpl
call
mov
xchg
mov
nop
psadbw
or
ret
popf
scas
add
enter
imul
and
mov
inc
jbe
stos
xchg
orl
mov
inc
or
xchg
in
sbb
sub
es
adc
push
mov
cmp
testl
mov
cmc
adc
mov
xchg
sahf
sbb
sub
rorl
idivl
movsl
mov
das
pop
addr16
cmp
pop
fwait
mov
pop
push
fisubs
mov
xchg
inc
inc
pusha
jmp
lock
cli
pop
xor
sbb
push
and
sub
insb
ficomps
int3
cld
xchg
fiaddl
call
ljmp
push
inc
xchg
jb
cli
lea
pop
lods
xchg
test
dec
loop
mov
les
jle
and
or
inc
sbb
dec
cmpsl
sub
xor
ret
movl
arpl
xor
mov
outsl
out
cmp
sub
push
xchg
jns
int3
lret
stos
or
pusha
pop
fs
imul
fwait
xor
inc
jb
mov
or
ss
xchg
in
sti
add
mov
cmpsb
cmp
mov
pop
jo
pop
xchg
jle
insl
xor
into
or
dec
aad
push
lret
cmp
xchg
imul
push
int
jp
sti
sub
sbb
pop
js
jo
adc
and
and
js
dec
das
add
ret
fisttps
repnz
dec
adc
loop
aas
outsb
pop
mov
pop
lret
ja
movsb
scas
and
or
insb
aaa
mov
lcall
pop
enter
xor
nop
add
push
ljmp
jb
rclb
push
push
and
sbb
loopne
adcb
sbb
shrb
je
jl
xor
mov
movsb
cltd
jno
addl
test
es
dec
sub
sub
lods
cmpsb
mov
jle
push
mov
mov
imul
jb
js
pop
lds
mov
pop
lea
push
adc
fwait
int3
lret
jb
dec
push
sbb
xchg
pop
mov
inc
lds
xchg
or
jmp
push
pushf
lahf
dec
pop
jnp
int
jb
ja
mov
jo
xchg
das
insb
ret
in
jno
popf
or
or
mov
push
xchg
iret
enter
enter
fiaddl
mov
push
sub
pop
pop
cmp
fmuls
push
mov
in
jne
stc
jno
inc
or
sbb
addl
xchg
adc
test
jns
jb
stos
pop
mov
sbb
jnp
sbb
mov
mov
icebp
adc
jecxz
xor
dec
dec
push
push
mov
add
add
add
mul
jp
mov
pop
int3
arpl
rorb
and
out
mov
xchg
mov
jecxz
ds
jecxz
jne
mov
add
test
jne
cs
and
fwait
repnz
inc
inc
pop
in
leave
add
sub
cmp
pop
inc
push
dec
jae
mov
fmull
ds
and
jb
test
push
idivb
loop
mov
call
fs
ret
test
sbbl
lods
inc
sahf
push
mov
sbb
mov
xchg
sub
cltd
push
mov
sbb
ja
jge
sbb
pop
repnz
jns
cmp
jle
inc
cltd
or
xchg
adc
cmpl
mov
jecxz
cmp
xor
push
in
test
dec
ja
jecxz
mov
pop
cmpsl
sub
data16
push
adc
dec
jns
dec
or
in
sub
mov
jmp
mov
xor
gs
push
mov
in
or
stos
add
repnz
dec
sub
xor
adc
cltd
mov
sbb
pop
adc
loope
or
push
orl
push
in
xchg
out
lcall
shrb
stos
mov
xor
add
mov
push
inc
sarl
ficompl
orb
push
in
fisubl
iret
add
popa
mov
mov
jp
cmp
aam
push
jns
sbb
out
dec
mov
hlt
movsl
insl
jmp
jl
stc
xchg
das
xchg
mov
jmp
or
dec
in
repnz
add
sub
add
aas
jmp
and
xchg
inc
ljmp
repnz
inc
popa
ljmp
push
cmpb
mov
jo
test
jle
lret
mov
ja
ffree
sahf
popl
inc
xor
sbb
dec
or
pusha
pop
out
fcmovnb
sbb
es
mov
fsubp
jne
out
movsl
jne
lcall
and
mov
or
push
loop
in
adc
add
and
mov
and
sbbl
xor
push
lock
jle
pop
mov
mov
cmp
popa
cld
sbb
movsl
dec
ljmp
adc
jno
sub
jne
movsl
mov
mov
sbb
cwtl
das
imulb
mov
pop
rolb
sub
out
push
hlt
dec
cmp
lds
sub
dec
daa
add
xor
cmc
ds
stos
cltd
addr16
in
dec
out
jnp
xchg
in
xchg
sub
rorb
insl
ud2
out
dec
ret
push
mov
shlb
or
setp
stos
push
sbb
ss
jp
cmp
push
add
loop
lods
imul
pushf
lret
rclb
xchg
scas
cmpsb
fildl
add
movb
clc
mov
sub
pop
xchg
inc
pop
dec
adc
xchg
pop
mov
stos
xor
jmp
int3
push
jae
imul
pop
out
mov
enter
in
test
sub
ret
sbb
clc
dec
pop
repz
mov
lret
mov
pop
xor
lret
lock
test
mov
popa
imul
xchg
cs
ja
add
fs
xor
xor
loopne
push
inc
mov
neg
dec
in
pop
push
xchg
adc
out
sub
fs
aaa
outsl
out
sub
pop
push
mov
icebp
mov
and
das
mov
cmp
adc
push
ja
aam
adc
push
movl
and
push
loope
cmp
jg
adc
rolb
jb
and
arpl
dec
insb
shlb
mov
cld
fstl
push
push
or
inc
loopne
pop
add
adc
mov
fs
cmp
test
in
fistl
pop
mov
xchg
scas
jnp
loope
xchg
mov
decl
dec
out
call
lods
aam
cmp
int
mov
pslld
mov
cmp
rolb
cmpsl
sub
es
push
lds
mov
stc
sahf
add
sub
cmc
lret
loop
push
adc
movsl
mull
pop
or
mov
xchg
aaa
test
mov
test
enter
push
mov
adc
sub
pusha
clc
call
jge
sbb
sbb
sub
jge
popa
inc
pop
push
addr16
cltd
add
lahf
sbb
loop
ds
xchg
pop
xor
sti
dec
sub
fdivs
push
fcoml
pop
stos
mov
hlt
inc
out
popa
addr16
mov
lcall
subb
sub
cmp
adc
lret
push
jp
inc
inc
xchg
xor
sbb
insb
add
mov
mov
xchg
push
jne
mov
test
lock
lahf
push
cmpsb
mov
or
lds
xor
mov
clc
dec
or
mulb
sbb
dec
adc
icebp
or
movsb
test
push
ljmp
push
pop
mov
xor
dec
fdivr
or
fs
call
mov
sbb
mov
stc
cmc
jns
xlat
mov
lret
fnsave
push
pop
xchg
adc
in
aam
cli
loop
push
mov
mov
mov
test
jecxz
xor
test
fs
imul
dec
jb
push
jbe
lods
jo
jae
scas
dec
loope
xchg
xlat
sbbb
and
and
adc
mov
dec
add
push
mov
inc
enter
cmp
xchg
and
and
adc
pusha
cmovs
ss
inc
push
add
sbbb
and
and
inc
cli
and
dec
mov
cli
lods
scas
inc
fiadds
sbb
gs
adc
xchg
jae
jl
out
es
sar
clc
push
cmp
mov
xor
clc
lret
out
push
xor
in
add
fnstenv
enter
jg
scas
push
imul
ret
push
xor
xchg
jb
mov
cmp
cmp
sbb
pop
xor
divb
fbld
cmp
js,pt
mov
roll
rcrl
fldcw
movsl
fistpll
ret
lahf
add
cltd
pop
dec
lret
loop
les
stc
cmc
jb
cwtl
movsb
rolb
adc
mov
lcall
adc
inc
dec
sub
fnstenv
push
xchg
mov
mov
stos
negl
popa
notl
xor
outsb
fsubp
js
cmp
add
jnp
xor
mov
pop
cli
push
stos
inc
test
leave
fldcw
mov
inc
adc
pop
push
test
mov
fidivrl
mov
lock
push
dec
mov
testl
add
dec
cmp
dec
inc
push
ficoms
fdivl
add
sti
xchg
xor
and
je
push
cmpsl
inc
sarl
or
stc
add
sub
loopne
pop
sub
into
pushf
mov
xchg
test
and
cmp
addr16
xchg
sub
inc
xchg
dec
test
in
xchg
lods
xchg
jle
xchg
daa
xchg
xchg
jae
jl
lds
fmulp
aas
sub
icebp
mov
pop
pop
push
std
aad
xchg
mov
div
enter
std
push
out
mov
leave
pusha
jge
cld
movsl
mov
and
cmp
addr16
sbb
idivb
push
decb
xor
lret
aam
mov
orb
lcall
stc
shrb
leave
mov
inc
les
ret
inc
test
mov
and
jp
cld
pop
mov
out
and
cmp
jmp
and
adc
ds
movsl
pop
insl
test
mov
cli
addr16
lcall
movsb
sub
imul
dec
dec
or
cld
insl
ror
push
mov
lret
daa
mov
scas
adc
imul
and
cld
push
addb
xlat
mov
xchg
mov
les
mov
mov
xchg
add
pop
cmp
das
call
fnstenv
lret
pop
dec
pop
in
push
inc
inc
aaa
push
sub
jb
out
pop
repnz
shll
mov
dec
adc
insb
add
mov
daa
shrd
mov
push
lcall
pop
push
add
mov
lock
jecxz
out
outsl
add
nop
jmp
push
jnp
test
pop
es
pop
push
jb
in
pop
psraw
sub
push
scas
add
inc
je
xor
mov
and
mov
loopne
or
movsb
mov
dec
pop
adcb
addr16
movsb
bound
xor
or
iret
xor
in
xchg
mov
stc
jg
lahf
adc
loopne
mov
cwtl
cmc
int3
jae
xor
pusha
stc
add
rorb
subb
cltd
shlb
aas
mov
icebp
addr16
les
mov
ljmp
out
pop
aad
pop
aaa
sarl
data16
out
andl
adc
arpl
mov
fcmovnb
into
mov
insl
loop
insb
mov
inc
lea
xchg
lods
sbb
shl
xor
je
sbb
add
mov
popa
sti
fwait
lcall
mov
jge
jg
ja
mov
dec
les
mov
pop
pop
insl
cmp
rcrb
pop
repz
repz
dec
ljmp
je
mov
ss
sbb
add
jno
add
xor
cwtl
push
add
fnstcw
ret
test
hlt
in
mov
ret
jl
fcmovbe
pop
mov
add
sbb
lahf
out
xor
jno
push
outsl
mov
jnp
test
or
outsl
add
pop
mov
bound
sub
ret
mov
into
gs
in
pop
dec
mov
dec
lret
push
repnz
cs
rcr
lods
clc
push
pop
push
mov
or
adc
cwtl
pop
stos
test
sarl
jmp
sub
data16
jp
dec
or
or
daa
lcall
adc
dec
lret
rorl
ja
and
jns
mov
mov
xchg
push
insb
adcb
aaa
inc
inc
hlt
push
mov
loopne
subl
adc
mov
in
pushf
or
add
add
das
pop
imul
and
add
aas
popf
cs
roll
test
in
cmp
inc
rclb
xchg
push
and
in
ss
shrl
loop
or
mov
xchg
sti
pop
cwtl
mov
movsb
inc
mov
ds
mov
aaa
sbb
sub
push
mov
in
sbb
inc
pop
xor
dec
fists
flds
mov
shl
jo
movsl
jns
sub
adcb
insl
ja
ds
push
push
sarb
cwtl
push
and
pop
mov
int
imul
inc
cmp
imul
test
repz
push
sbb
and
mov
popa
call
pop
sub
call
cltd
pop
push
pop
cmp
adc
inc
inc
lea
int
push
jmp
jmp
xchg
pop
mov
pop
adc
test
sub
dec
jo
cltd
add
sbb
int
in
stos
pop
adc
cltd
xchg
dec
daa
ret
cmpsl
int
lock
sub
or
aad
inc
xchg
jg
inc
fbstp
sub
sahf
cmpsb
lock
fs
std
sub
cli
fwait
pop
pusha
mov
cmp
cmpsb
dec
loopne
xor
jno
or
pop
pop
es
xor
pop
repnz
ficoms
xchg
jns
add
fsubl
dec
add
mul
fsubrs
lock
jecxz
mov
mov
scas
xchg
jge
test
stos
add
daa
cmp
sub
inc
clc
lret
enter
popa
dec
ficoms
mov
xor
popa
nop
mov
mov
pushf
out
pop
mov
mov
outsl
fxch
mov
aas
mov
fisubrl
add
push
enter
je
fwait
cmpsb
push
mov
push
dec
and
fcmovnu
xor
loopne
push
add
push
jne
pop
stos
mov
push
cmp
push
mov
add
lret
or
cmp
dec
pop
loop
aam
jg
fwait
or
jl
mov
fsubrp
cltd
xchg
xchg
sub
mov
sub
lahf
cld
dec
dec
es
push
insl
rcll
add
mov
pop
adc
stos
or
test
loopne
jae
sahf
mov
arpl
lock
imul
xchg
scas
sbb
or
int3
and
insb
sub
lcall
ret
dec
es
adc
or
call
dec
push
fsub
fwait
mov
sbb
clc
jg
sbb
jns
dec
dec
popf
push
cmp
test
ret
xor
loopne
push
cmpb
adcb
add
mov
test
enter
leave
push
sahf
insl
cmpsb
lock
stos
movsb
jnp
mov
lea
in
inc
dec
jb
cwtl
dec
add
adc
out
lods
cli
and
and
mov
dec
push
lret
xlat
lcall
mov
int
inc
inc
fists
cmp
sarb
cmc
adc
add
jno
add
fidivl
data16
pop
and
fwait
dec
stos
add
xlat
insl
faddl
outsl
lcall
cwtl
mov
push
int3
fdivs
sti
stos
sti
jbe
jnp
xchg
sahf
cmp
and
ss
aaa
push
rcll
ret
jecxz
lds
repz
notl
arpl
sub
push
test
sbb
rcll
xchg
mov
pop
lea
clc
or
icebp
shl
push
popa
shll
pop
cmp
ret
pop
ljmp
push
test
push
or
xor
adc
cmpl
stos
xchg
fdivrl
cmp
push
loope
xor
dec
cmp
jb
ja
lahf
pop
jb
xchg
ret
mov
movsl
adcb
sub
js
mov
push
xchg
icebp
cs
pop
sub
pop
pop
hlt
push
add
test
jno
das
lds
jo
cld
loop
test
les
mov
loopne
int
fcoml
cmc
cli
aad
faddp
dec
push
inc
mov
je
fldcw
int
lcall
out
mov
mov
icebp
adc
cmpsb
xor
mov
cmp
jl
pop
mov
lahf
dec
xchg
popa
clc
sub
lahf
aas
push
xchg
insb
stos
jbe
xor
ret
repz
addl
jle
test
and
pop
repnz
pushf
inc
mov
ja
xor
enter
in
mov
cltd
ljmp
or
inc
jl
or
and
mov
jg
cmp
inc
scas
les
push
aam
fildl
inc
cli
mov
fldenv
test
mov
lods
inc
xlat
repz
outsb
lcall
and
stos
lds
mov
and
push
mov
cmp
pop
pop
mov
inc
cmp
jle
in
sub
idiv
push
in
inc
sbb
add
les
or
mov
cld
xor
in
mov
push
insl
mov
ret
cld
test
enter
loope
push
nop
jne
dec
jecxz
mov
push
push
fnstcw
mov
and
ret
stc
mov
xchg
inc
add
mov
dec
pop
push
mov
leave
iret
decl
incb
cwtl
or
lods
jne
out
xchg
adc
leave
das
or
popf
out
in
dec
pop
mov
sub
arpl
mov
adc
add
daa
repnz
daa
inc
jp
mov
dec
lahf
xchg
shll
hlt
and
and
xchg
sub
test
mov
gs
pop
and
outsb
out
push
call
in
test
inc
pop
sub
mov
test
mov
sub
jae
dec
insl
jge
out
pop
sub
rclb
cmp
addr16
cmpsl
pushl
lock
std
xchg
sahf
push
sbb
int
cmp
ret
lods
addr16
mov
rorb
aam
es
xchg
in
loopne
dec
cmc
push
mov
and
aam
xor
fldl
sub
sbb
sbb
jecxz
insl
pop
sti
push
push
data16
icebp
movsl
cmp
sbb
push
jmp
test
inc
lcall
inc
lret
mov
lock
cmpsb
popa
jl
jae
xchg
fwait
pop
inc
push
adc
ja
fidivl
nop
jmp
test
push
adcl
lock
jecxz
out
cltd
vpunpckhbw
cmp
andb
mov
jecxz
add
cvtpi2ps
mov
jno
inc
pop
inc
stc
popa
xor
aad
cmp
lret
out
add
xchg
mov
dec
sub
aam
pop
int3
xor
daa
mov
hlt
jo
imul
fisubs
xorb
mov
jecxz
daa
shrl
roll
rorl
mov
test
sub
lret
cld
push
xchg
adc
int
and
mov
sub
and
jle
sbb
jp
mov
jmp
shlb
xor
pop
sbb
or
nop
pop
xor
push
xlat
insb
inc
sub
lea
sub
movsb
out
pop
shlb
pop
loope
pop
push
repnz
lahf
test
push
inc
das
push
insb
popf
xor
dec
jg
and
pop
and
push
je
inc
push
inc
negb
into
popf
mov
or
push
es
push
ja
push
push
inc
ljmp
movsl
into
mov
adc
inc
test
jmp
test
rcrl
xchg
iret
call
imul
cs
test
imul
pop
ljmp
call
sbb
push
mov
mov
pusha
jne
and
jb
cmpsl
fidivs
push
xor
mov
jge
dec
inc
addl
pop
or
adc
mov
fcom
pushw
sar
repz
push
in
lcall
fmulp
sub
sti
xchg
or
xor
scas
cmpsb
mov
xor
arpl
sbb
jae
jle
dec
push
stos
lahf
inc
xlat
ror
orb
loopne
in
out
jecxz
in
lcall
inc
loopne
icebp
andb
popa
iret
in
out
stos
cmpsl
cli
pop
mov
mov
sbb
add
popf
and
adc
lds
loope
mov
push
adc
out
jle
rcrl
jb
or
mov
call
dec
ret
into
lods
mov
fisubrl
clc
fbstp
mov
mov
test
lea
sbb
cmp
shll
sub
inc
push
in
fld
mov
inc
faddl
rcrl
dec
dec
dec
lret
pop
out
aam
cmp
or
jne
mov
adc
sub
add
test
adc
ljmp
std
xor
and
inc
jg
cld
cmp
jnp
and
push
dec
push
scas
cltd
push
dec
xor
xor
out
test
int3
sub
pushl
std
pop
sub
and
mov
call
add
or
pusha
mov
int3
int3
mov
test
stc
in
bnd
xor
orb
pop
out
add
push
sbb
orl
xchg
adc
into
scas
sub
sub
sbb
addb
hlt
xchg
push
les
and
in
push
mov
xchg
push
out
lcall
and
sbb
xor
cmc
cmp
imul
arpl
dec
push
dec
aaa
dec
subb
mov
ss
loop
push
xor
mov
rcrl
mov
adc
jb
cmpl
mov
rol
es
cltd
fdivl
cmp
repnz
pop
and
fidivrs
xchg
cltd
ret
mov
out
mov
push
mov
dec
jae
mov
aad
sbb
or
leave
daa
add
mov
mov
mov
sub
cmp
add
enter
pop
pop
jmp
addl
xchg
sub
xchg
ja
mov
aam
loop
jae
push
nop
mov
push
mov
pop
outsl
in
xor
mov
out
dec
pop
outsl
mov
outsb
test
jb
mov
aaa
imul
inc
mov
lods
mov
inc
pushf
inc
sahf
dec
cmp
push
and
xor
fadds
fidivrl
sub
pop
jno
mov
xchg
push
ja
push
pop
mov
xchg
and
dec
ja
mov
push
flds
cli
adc
gs
xor
imul
subb
clc
jl
lea
cmp
cmp
sbb
mov
add
les
leave
or
xor
pop
sahf
test
add
adc
or
sbb
das
ds
ljmp
mov
outsb
in
roll
or
pop
in
jbe
negl
push
jno
pop
xor
call
out
scas
adc
or
xorl
stc
xchg
mov
or
ret
mov
in
sarb
pop
inc
cmp
push
cmp
lock
outsb
xchg
mov
hlt
jo
ss
mov
adc
adc
cltd
and
pop
pushf
xor
ret
stos
aaa
int
and
ss
loope
pop
xchg
popf
xor
cmpsl
stos
push
mov
ds
pop
fsubl
cld
loope
negl
scas
pop
cmp
test
test
lret
sarb
divl
imul
inc
xchg
sbb
es
icebp
xchg
ja
test
les
in
xchg
and
std
pop
hlt
jge
adc
xor
jae
or
push
adc
push
sbb
ja
mov
arpl
pop
mov
jmp
or
fnstcw
test
xorb
leave
xor
xlat
pop
flds
ljmp
xor
or
int3
cmp
das
cmp
mov
aas
adc
out
push
dec
int
pop
iret
push
sbb
push
sbb
sub
push
cli
imul
mov
jle
shrl
leave
test
js
xchg
push
pop
pop
repnz
hlt
mov
adc
mov
pop
add
aaa
pop
fs
push
push
and
mov
loopne
ret
pushf
repnz
les
dec
shlb
cmp
insl
cmp
aam
out
hlt
jnp
les
insl
mov
aad
inc
mov
mov
cmp
cmpsl
jecxz
insb
mov
mov
lcall
addb
scas
or
scas
cmp
jp
imul
subb
mov
dec
aaa
out
mov
xchg
pop
jns
xor
mov
fcomps
push
scas
pop
loope
cmp
push
and
sub
xchg
adc
or
into
jg
cmpsb
pusha
mov
outsb
sub
sbb
les
pop
les
fmull
les
add
or
fcmovbe
mov
test
add
es
and
push
add
lahf
sub
enter
xor
mov
out
rcll
jecxz
data16
jbe
jge
or
sub
fistl
jge
jnp
and
int3
inc
inc
mov
xor
xor
xchg
in
fisttpl
xchg
sbb
add
sub
pop
and
fs
inc
lods
add
add
in
ss
loop
pop
out
cld
mov
or
aas
mov
push
out
nop
icebp
ret
outsb
dec
sub
mov
cmc
mov
mov
push
add
clc
out
movsl
mov
add
mov
arpl
pop
xchg
pop
inc
sti
pop
mov
das
andl
or
repz
sbb
xchg
mov
jmp
or
mov
xchg
aad
mov
ss
add
jne
shrb
mov
mov
ss
push
mov
fsubl
mov
je
ret
pop
push
iret
adc
xor
inc
loopne
jp
jae
in
out
pop
jno
cli
out
and
push
test
icebp
mov
clc
mov
jns
push
mov
ja
pop
addb
jbe
and
push
pop
test
lock
push
js
jb
cmp
jno
jecxz
jno
jno
push
cmp
xor
enter
clc
xchg
stc
ds
arpl
mov
cmp
movsl
jle
in
xchg
fwait
sti
sbb
jne
sbb
addb
insb
imul
insb
cmc
pop
fcmovu
sbb
and
iret
mov
jbe
shrb
lahf
and
sbb
es
cmp
cmp
mov
daa
stc
ss
inc
push
jle
push
nop
and
cmpsb
loopne
fwait
cmpsl
test
lret
rclb
jo
jo
aas
and
int
dec
xchg
loopne
jne
cmp
dec
or
lcall
into
push
aaa
push
push
rcll
mov
add
inc
push
lods
mov
js
mov
fisttpl
das
xchg
xchg
test
cmpsl
adc
pop
xor
xorb
ja
std
xchg
das
xchg
and
dec
push
ljmp
push
into
popa
and
iret
scas
inc
rcl
roll
arpl
sarl
pusha
or
sub
jp
dec
xchg
les
insb
in
jo
push
je
sbb
xor
outsb
ror
outsl
pusha
clc
scas
push
stos
jne
dec
jg
jo
xlat
ficomps
movsl
nop
in
inc
pop
dec
push
mov
inc
pusha
and
xchg
mov
jg
add
jbe
sbb
lcall
and
imul
pop
push
jp
cmp
repz
add
enter
mov
pusha
or
jge
adc
and
lret
push
add
push
testb
insb
lret
call
mov
push
jmp
lock
push
fbstp
fstps
add
jmp
pop
inc
divps
cwtl
call
lds
out
sbbb
inc
add
sbb
jo
fs
and
add
addr16
push
xor
jnp
aam
xchg
arpl
sti
sub
rcrl
sub
testb
sub
pop
inc
int
mov
mov
cmpsb
push
xor
jp
fdivrl
sub
pop
jl
bound
lds
jp
push
adc
xlat
js
add
lods
push
add
xor
xchg
or
or
mov
mov
cld
arpl
push
push
rcl
into
or
push
clc
sbb
lea
mov
shr
pop
and
push
lret
inc
loop
inc
pop
loopne
jl
sub
mov
push
cmp
test
cs
sbb
pop
scas
rcrl
cwtl
push
xor
pop
sub
cmp
xor
fucomip
daa
xchg
jns
pushf
xor
sbbb
daa
dec
sti
xor
jge
dec
xorb
fistps
dec
out
movsb
lock
shr
addl
xchg
lods
xchg
out
daa
sbb
mov
lods
inc
mov
cmp
int3
add
int
push
and
cmpsb
imul
sbb
ret
add
mov
loope
mov
sub
das
mov
lret
cld
cmp
leave
mov
divl
fs
aaa
push
sti
push
clc
mov
push
xchg
dec
dec
jnp
sbb
or
aam
jp
pushf
dec
dec
bound
pop
shl
fsts
cmpsb
rol
or
push
sti
pop
in
jo
dec
mov
shr
mov
lock
lea
sub
lods
inc
mov
loop
stos
loope
adc
mov
loopne
and
dec
add
mov
inc
push
mov
cmpsb
pop
sub
lret
jb
push
pusha
xlat
mov
xchg
imul
mov
xor
fistps
inc
sub
inc
dec
daa
cmp
fists
pop
aaa
loop
sbbb
test
mov
ljmp
adc
in
test
lret
bound
shr
mov
or
nop
insl
adcl
pop
mov
mov
out
jmp
lea
sbb
dec
sbb
pop
mov
adc
jecxz
lret
dec
ds
mov
in
and
or
xchg
push
cld
cmp
inc
adc
push
dec
or
outsb
outsb
sub
imul
mov
adc
xchg
mov
lret
lcall
cwtl
stos
mov
pop
leave
test
push
and
sahf
daa
fsubr
lahf
adc
cltd
mov
outsl
pop
and
imul
push
fdivrp
inc
mov
mov
test
inc
mov
xchg
push
cmp
scas
mov
test
jae
mov
ss
daa
iret
xor
gs
add
mov
test
into
in
mov
iret
data16
inc
int
nop
adc
mov
scas
pop
or
or
sub
lods
cwtl
cwtl
stos
clc
into
enter
repz
imull
out
add
adc
out
call
xchg
jle
mov
enter
inc
ficoml
jnp
dec
mov
out
push
pop
adc
xor
xor
movsl
pop
ret
lock
repnz
decb
fmul
push
test
shrb
hlt
das
shlb
push
sbb
sub
sub
xchg
test
imul
lods
xor
es
pop
sahf
mov
or
stc
inc
or
push
push
roll
pop
jge
repnz
dec
adc
jg
mulb
push
in
pop
repnz
std
mov
xchg
rorl
cltd
push
in
cmp
fbld
mov
mov
inc
inc
shl
enter
jns
mov
pop
sub
sarl
out
adc
subb
dec
movsl
dec
sbb
imul
xchg
out
xchg
inc
inc
enter
lods
sbb
add
mov
mov
sub
mov
xchg
pusha
in
sub
xchg
xchg
dec
mov
xchg
hlt
and
sub
and
lds
pop
inc
adc
add
cmp
lods
push
test
cmpsl
sub
adc
bound
std
hlt
ja
lcall
cltd
clc
fwait
mov
xor
mov
xchg
out
popa
add
insb
jb
lods
inc
shll
lret
mov
xor
in
ja
adc
les
xsha1
cmpsb
or
insl
test
aad
test
js
lods
inc
cmp
dec
pop
ficompl
aas
sbb
into
fs
wrmsr
outsl
cmp
xor
push
and
push
lods
mov
xor
leave
sbb
lret
xor
add
lock
stc
and
pop
push
sbb
ret
loope
fcomps
pop
iret
sbb
dec
enter
lock
mov
loop
mov
sub
sub
inc
lcall
mov
clc
sub
test
out
mov
test
movaps
icebp
iret
dec
mov
adc
int3
mov
inc
sub
cmpsl
fwait
in
cmp
cmp
and
in
adc
xchg
xor
xlat
inc
test
cmp
in
in
sbb
enter
or
xchg
test
mov
push
and
dec
imul
repz
ss
sub
mov
pop
sbb
push
xchg
shll
arpl
lret
cs
mov
inc
fs
pop
ficoms
scas
in
jae
xchg
popf
dec
or
jp
out
out
mov
jbe
mov
fdivrl
lock
sbb
mov
adc
mov
dec
daa
adc
and
sub
in
pusha
mov
scas
lret
xlat
cs
adc
add
push
pusha
ss
or
push
jmp
dec
xchg
stos
mov
bound
jp
movsl
sub
xchg
sub
lret
imul
out
lret
int3
mov
cmp
jb
stos
cmp
ja
mov
and
testb
jge
mov
bound
mov
pop
outsb
stos
xlat
mov
mov
or
subl
insb
mov
aam
daa
fsubrl
cmc
push
dec
fldcw
int3
addb
fistpl
shl
ret
or
push
enter
int3
push
and
enter
jecxz
lock
insb
imul
in
test
inc
jmp
sub
sub
add
inc
sub
dec
add
xor
mov
push
mov
ljmp
push
inc
pop
or
mov
mov
imul
push
push
push
test
inc
cmp
stos
jbe
in
mull
mov
insl
cmp
sub
and
icebp
daa
push
sbb
decl
lods
sbb
clc
and
out
jbe
jl
adc
jbe
xor
imul
in
xchg
pop
ja
push
mov
jne
icebp
shrl
cmp
add
clc
es
cwtl
stos
ds
arpl
cmp
arpl
pop
or
mov
inc
clc
data16
add
mov
sub
xor
pop
xchg
jmp
mov
pop
int3
out
xor
add
xchg
push
jecxz
test
mov
jecxz
mov
ffreep
jnp
daa
cmpsl
or
or
les
push
jnp
xor
jecxz
add
push
mov
fdivrl
add
imul
mov
adc
in
pop
insl
nop
lods
sahf
push
sbb
pop
jp
and
aaa
stc
nop
push
add
fstps
stos
or
adc
sbb
lret
adc
sub
jecxz
cs
ljmp
repz
and
adc
or
push
add
mov
loop
rcl
mov
inc
addb
xor
pop
loopne
cwtl
inc
std
movsl
sbb
in
xor
fiadds
adc
aam
push
xlat
repz
xor
pop
cs
adc
hlt
pop
repnz
mov
xchg
rcrl
xor
outsb
dec
out
pop
mov
into
jne
clc
outsl
push
xchg
push
in
iret
je
mov
repz
sub
dec
adc
rcrl
mov
xlat
and
insl
inc
mov
pop
adc
sub
cmpsb
add
les
in
mov
push
adc
js
rcrl
cmp
in
mov
mov
inc
mov
lret
or
divl
shrb
lret
into
mov
dec
mov
int3
mov
js
mov
popf
jl
sbb
pop
sbbb
les
or
loopne
inc
lcall
movsl
xor
or
inc
fildl
test
sbb
mov
and
and
cld
jno
insb
imul
into
fistpl
adc
sub
push
jg
mov
mov
rol
out
mov
lods
xlat
rcrl
mov
add
lret
xchg
leave
adc
xchg
push
dec
rcrb
lds
aam
xchg
sub
dec
push
add
xor
jae
xor
xor
out
cld
add
push
cmc
cmp
aad
mov
mov
jno
sbb
insb
mov
shl
icebp
lahf
mov
repnz
or
fdivrs
fstpt
add
inc
fdiv
mov
jne
push
stos
dec
mov
lea
mov
mov
xor
dec
cmc
cmp
ds
cmp
nop
push
in
jg
sub
scas
pop
jle,pt
arpl
mov
lods
mov
hlt
mov
inc
js
inc
lock
push
loop
mull
ret
inc
or
add
cli
inc
nop
sub
lea
inc
pop
bnd
cmpsl
push
dec
mov
notb
roll
mov
push
push
nop
mov
pop
insb
clc
stos
add
cmpsl
in
scas
xchg
dec
mov
jge
xor
sarl
pusha
xchg
add
mov
shrb
and
lock
stos
int3
jne
jns
mov
xor
sbb
jbe,pt
outsl
mov
mov
dec
add
xor
inc
jle
and
ljmp
add
or
pop
and
roll
or
pop
add
imul
pop
xor
mov
out
xchg
out
sarb
jnp
mov
call
sub
arpl
les
movsb
loope
ss
sub
sti
movsl
push
std
cltd
aaa
int3
xchg
decl
xor
adc
dec
inc
jle
dec
loope
dec
test
pop
lret
cs
inc
adc
add
icebp
mov
lahf
mov
insb
sub
lock
lods
sub
jb
dec
mov
dec
stc
in
cmp
pop
clc
out
xchg
outsb
push
out
daa
into
fbld
and
hlt
adc
add
dec
push
out
xlat
pop
jmp
adc
mov
and
imul
push
lock
insl
test
lods
xchg
mov
clc
jae
jmp
repz
adc
nop
mov
fstps
cmpsb
sub
divb
add
cld
jg
cli
sub
cmp
mov
mov
lds
rcl
inc
push
xor
mov
lcall
inc
mov
aam
in
xchg
dec
rclb
lock
mov
rorb
test
pop
cli
or
mov
cwtl
mov
mov
xchg
aaa
adc
mov
or
daa
pop
xchg
testl
cwtl
and
shl
push
sub
pop
push
xchg
or
icebp
loop
lock
cmp
mov
popa
mov
mov
cmp
mov
sub
pop
pop
dec
fisubs
into
jno
dec
fdivl
and
cmpl
stos
mov
mov
inc
enter
into
jmp
xchg
inc
cmp
ljmp
push
or
imul
test
jl
ror
mov
and
mov
in
inc
push
inc
testb
lods
jae
lret
lret
add
lret
xor
mov
pop
mov
sub
dec
sbb
mov
or
test
inc
test
pop
fsubrs
shrl
arpl
sub
lcall
jbe
xchg
mov
test
scas
pop
movsl
jne
test
xchg
sub
push
add
dec
mov
mov
adc
addb
jnp
sbb
aad
fwait
mov
shl
pop
out
clc
loop
pop
add
cmp
pushf
pop
popa
aam
scas
mov
js
ja
hlt
test
mov
les
popa
jo
popa
mov
pop
xor
mov
orb
push
loopne
lahf
push
mov
gs
dec
xchg
sbb
or
push
jmp
js
push
jmp
lcall
push
cmp
xor
cmpsl
outsl
das
into
lahf
ret
popf
inc
cmc
in
pusha
cmpsb
jnp
xlat
addl
cwtl
lods
push
frstor
jbe
inc
popf
stos
and
insl
fcmovne
jo
cmp
jge
or
aas
mov
mov
adc
xor
ljmp
cmp
aam
aam
push
inc
mov
les
iret
and
dec
inc
inc
idiv
mov
and
in
inc
fldenv
cmc
dec
cmc
mov
inc
push
hlt
mov
fists
std
push
lods
sub
push
xchg
pusha
or
and
daa
xchg
stos
xchg
test
scas
int
mov
or
jecxz
punpckhdq
mov
lret
adc
cli
leave
pop
out
mov
dec
lock
mov
mov
fisubl
sbb
sub
mov
xchg
inc
inc
xor
jb
mov
dec
push
aam
or
pusha
push
pushf
and
loopne
mov
xor
mov
and
push
dec
loopne
xlat
mov
movsb
jecxz
imulb
out
int3
sub
sbb
or
sti
pop
shll
sub
nop
out
add
cmc
dec
pop
push
mov
pop
pop
lods
js
fnclex
xchg
xor
rclb
add
movsb
mov
xchg
pop
push
or
jne
movsb
jmp
stos
adc
add
pop
inc
and
fadds
pop
sti
mov
int
leave
push
mov
cld
push
subb
jl
out
mov
leave
adc
mov
shll
leave
and
pop
test
ret
imul
ds
dec
pop
xor
sahf
xchg
cmp
mov
scas
inc
arpl
and
rcrb
push
imul
dec
lret
jo
mov
fs
jmp
mov
sbb
popf
sub
stc
or
lods
jecxz
call
into
lds
adc
fwait
or
dec
ret
jg
cmpsb
imul
lods
or
stos
inc
rcrb
test
mov
dec
mov
arpl
add
add
decb
lcall
inc
mov
not
cmp
imul
lds
push
mov
shlb
test
xor
call
xlat
or
inc
test
shr
cs
popa
divl
dec
xor
icebp
dec
roll
xchg
es
dec
pop
ljmp
call
jb
jno
add
insb
and
sub
cmpsl
sbb
mov
nop
std
or
test
xlat
mov
ja
scas
jmp
idivl
data16
nop
push
cmp
push
or
jge
jns
cmc
pop
cmp
pop
lods
cmpl
push
pop
sbb
fwait
lahf
mov
divb
popf
lods
pusha
and
add
mov
xchg
pop
push
jns
stos
jmp
cmc
mov
lret
ret
stos
inc
mov
or
add
sub
adc
ja
loop
ret
xchg
mov
inc
xchg
xchg
out
push
ljmp
jno
cltd
pop
seta
and
dec
cmp
cmpsl
pop
sbb
movsl
sbb
hlt
adc
out
stos
adc
mov
sub
incb
imul
add
rcrl
setg
mov
addr16
pop
fidivrs
xchg
inc
xor
mov
cmpsl
pop
sub
add
bound
sub
push
andl
test
icebp
mov
add
fnstenv
sub
push
push
adc
mov
rcrb
inc
push
cmpsl
push
mov
lahf
out
adc
xchg
lock
ror
push
add
rcrb
sub
leave
push
sub
inc
xchg
or
sub
inc
fucom
sub
stos
rorb
fdivrs
fcos
xchg
pusha
xor
lods
or
cmpsb
inc
call
push
rcll
mov
addr16
in
daa
clc
push
leave
in
lret
lcall
rorl
sub
or
adc
jl
adc
mov
fsubr
repz
dec
or
ret
fabs
jecxz
add
lea
stos
add
push
and
jmp
xchg
sub
push
pop
push
mov
push
mov
mov
mov
ret
lcall
sbb
ss
mov
scas
inc
scas
xchg
in
adc
dec
xor
mov
js
xchg
add
xor
xchg
inc
push
xor
mov
cld
gs
push
frstor
pminsw
xlat
pop
scas
inc
inc
fidivl
fmul
loopne
adc
dec
push
xchg
cmpsl
or
pop
stos
add
xchg
mov
sub
cltd
sbb
dec
and
out
jno
cmc
in
cltd
adc
aaa
and
out
pop
popf
repz
adc
mov
call
sbb
int
out
mov
mov
movb
mov
out
test
bound
fistps
out
dec
mov
stos
push
add
dec
lahf
or
mov
push
incl
pop
xchg
add
out
hlt
xchg
test
pusha
popf
push
pop
cwtl
das
cli
mov
iret
mov
pop
test
gs
adc
dec
jg
pop
scas
adc
fisttps
loope
xchg
out
mov
fprem1
adc
pop
aad
xchg
or
sub
or
inc
mov
orl
loop
fisttpll
mov
pop
lahf
pop
in
mov
sbb
adcl
push
push
sbb
pop
xchg
stos
mov
test
enter
out
dec
lret
sub
popa
xor
scas
mov
jp
adc
enter
insb
push
les
jp
hlt
js
dec
aam
cmp
dec
dec
cltd
imul
xchg
mov
lea
loopne
or
ja
inc
fisttpll
mov
adc
inc
and
hlt
dec
cmp
add
jae
clc
shll
push
leave
fnstenv
jg
jae
mov
dec
sub
push
rol
pop
mov
mov
ds
cmpsl
sub
dec
sub
dec
mov
inc
inc
adc
xchg
inc
pop
sti
roll
and
stc
ljmp
sahf
shrl
sti
shlb
icebp
jp
mov
dec
in
add
test
loopne
and
scas
leave
mov
dec
jbe
cmp
imul
ja
xor
hlt
out
xchg
xor
xchg
jb
mov
lahf
xchg
xchg
xchg
pop
mov
roll
faddl
jns
shll
and
jecxz
and
fcoml
cmc
ja
jbe
mov
leave
sub
mov
das
jne
pushf
jo
cmp
clc
mov
inc
push
divb
push
mov
dec
mov
es
test
imul
int
addr16
ss
adc
addr16
pop
imul
out
or
cmp
or
mov
lock
add
in
jmp
push
aam
mov
mov
pop
ljmp
push
lret
add
addl
xor
inc
fmuls
xchg
js
jmp
jl
hlt
fbstp
xchg
mov
shll
cli
and
imul
dec
pusha
inc
cmc
or
shlb
bound
lcall
xchg
push
addl
cli
out
ret
or
add
cltd
pop
pop
mov
insl
cwtl
mov
lret
lahf
fs
dec
pop
push
outsl
enter
pushf
scas
mov
add
mov
gs
loopne
pop
shrl
sbb
and
fisttps
and
lret
push
lods
jo
test
fs
or
cmp
insl
std
js
jge
dec
dec
std
rcl
bound
into
dec
mov
cmp
scas
shll
xrelease
incl
test
add
test
or
gs
int3
hlt
mov
and
out
mov
test
or
loope
pop
jb
and
xor
cmp
push
cmc
inc
fsubrp
inc
test
inc
push
mov
cmpsl
test
sub
pop
pop
cmpl
mov
rcl
ret
xor
xor
sbb
imul
or
les
sub
stos
pop
arpl
aam
fmull
dec
dec
repnz
adc
and
cld
push
jge
test
fbstp
aad
shrb
fwait
pop
add
mov
mov
jo
inc
mov
ljmp
out
push
jae
sbb
xchg
mov
inc
ret
loopne
mov
ja
mov
xor
xchg
mov
xor
adc
inc
and
sub
lret
xchg
iret
imul
stos
mov
xchg
es
pop
movsb
sbb
ret
inc
mov
test
rcr
les
sbbb
sbb
cmp
and
push
stos
flds
shll
andb
shll
imul
aad
push
fists
out
add
adc
es
mov
je
cmp
or
or
mov
dec
cmpsb
adc
pop
popf
gs
adc
mov
test
sub
sbb
aaa
xor
aas
add
clc
jle
adc
clc
pop
or
orb
mov
in
lea
add
push
mov
pusha
out
pop
insl
shll
sbb
fsub
xor
mov
xor
sbb
lds
iret
pop
or
xor
mov
cs
xor
mov
adc
test
mov
lock
xchg
pop
xor
repnz
stos
flds
jo
out
movsb
sbb
push
nop
sub
inc
out
sahf
pop
dec
sbb
mull
movl
roll
shl
enter
stc
aaa
mov
inc
inc
inc
fistl
add
jg
sub
xchg
mov
shl
xlat
std
je
xor
shr
pop
xor
cmp
mov
clc
out
lods
jmp
shll
add
sub
adc
mov
adc
stos
xchg
in
cmpsb
popa
pop
popf
add
out
add
and
add
or
ss
xor
scas
and
push
mov
xor
ds
inc
push
jb
and
aad
nop
and
cmp
xchg
dec
filds
adc
loope
dec
jl
mov
insl
std
test
jns
pop
pop
cmp
int3
and
add
stos
sub
scas
int3
fcomp
or
and
outsb
pop
sub
push
push
add
mov
test
push
addr16
repz
mov
loopne
daa
dec
push
xchg
mov
or
mov
ret
dec
xor
cmp
sub
in
and
and
push
mov
dec
mov
inc
push
in
ret
sub
je
or
xchg
xor
add
add
loopne
stos
inc
mov
movsl
push
xlat
lret
bound
leave
and
imul
xor
xchg
dec
cwtl
nop
dec
push
in
inc
push
jg
lret
stos
xchg
jmp
jmp
pusha
add
adc
mov
pop
adc
ror
jo
sahf
das
fildl
mov
out
test
fmuls
and
lock
xchg
xor
and
pop
bound
pushf
js
lcall
mov
into
insb
inc
shlb
lcall
cwtl
push
xchg
jbe
mov
sbb
xchg
arpl
push
cmp
test
sbb
jbe
adc
imul
sbb
fisttpll
push
add
mov
sahf
stos
xor
push
push
cmp
xorb
jae
test
sbbl
or
sub
aam
mov
ja
jae
jecxz
outsb
lods
xchg
xor
cmpsb
mov
fidivrl
mov
pop
insl
sbb
push
adc
arpl
inc
adc
dec
add
mov
jne
es
stos
xor
lods
cmp
xor
push
cmc
stc
lahf
mov
push
inc
frstor
imul
xchg
dec
ret
loope
xlat
ds
rorl
data16
dec
movsl
scas
pop
lds
je
push
xchg
ficomps
add
js
test
daa
push
fs
xchg
pop
xor
ds
aad
les
mov
adcl
test
and
cld
rcr
aad
repz
cld
pop
lret
mov
pop
test
lea
fmulp
add
adc
inc
adc
add
ljmp
outsl
mov
pusha
loop
rcl
outsb
out
fisttpl
mov
push
stos
out
fdivl
cli
cmpl
pushf
xchg
or
push
aaa
jge
adc
mov
xor
push
mov
js
lods
jmp
hlt
lods
mov
fists
andb
jmp
hlt
xchg
jo
cmc
lds
lcall
and
sbb
jge
dec
sub
jle
dec
les
xchg
push
sub
cmp
cmc
clc
dec
es
fldl
inc
mov
dec
dec
jecxz
xchg
mov
mov
mov
adc
mov
add
mov
test
stos
pop
repnz
add
data16
push
mov
sahf
pop
ds
sbb
mov
gs
add
jae
adc
jns
cmp
dec
sub
imul
in
lret
insl
js
stos
lcall
adc
mov
fimuls
push
int3
and
jo
cwtl
shlb
sub
jns
int3
push
outsl
rorb
mov
jge
mov
in
xlat
sub
js
int3
jnp
mov
inc
inc
sbb
xchg
add
leave
adc
dec
in
sbb
imul
mov
out
and
int3
movsb
mov
push
out
ss
rcrb
aad
push
push
movsb
aaa
out
test
scas
inc
cmc
or
js
popf
int
or
stos
mov
adc
xchg
je
imul
cmc
xor
fsubl
push
push
adc
or
fiaddl
out
lret
call
lret
mov
lds
mov
add
es
stos
ret
ss
mov
or
inc
sahf
clc
jmp
iret
clc
mov
mov
add
test
mov
mov
xchg
daa
mov
in
or
cmp
pop
adc
push
cmp
or
jns
sub
jg
ret
pushf
cmpsb
cmp
dec
loopne
mov
ljmp
pop
or
js
dec
jge
cmc
daa
in
data16
cmp
lock
fwait
jmp
ja
mov
cmpsb
mov
aad
arpl
rorb
out
aaa
mov
ret
push
sbbl
jns
xchg
or
push
dec
sarl
push
cmp
icebp
movsl
in
rclb
mov
into
in
les
stos
adc
pop
lret
xor
enter
pop
int3
or
pop
or
test
jp
insb
cmpsl
xchg
mov
ret
fstl
dec
add
mov
hlt
mov
loope
aam
in
mov
xchg
sbb
lcall
mov
out
xchg
xchg
pop
cmp
mov
int
cmp
and
popf
mov
xchg
cmp
lahf
xor
push
insl
jnp
jno
nop
and
mov
lahf
fcompl
hlt
inc
test
cmp
aaa
into
push
xchg
cmp
cmp
adc
adc
pop
lods
pushf
mov
inc
xchg
sub
mulb
mov
shll
cwtl
and
arpl
andb
xor
mov
pop
inc
in
sub
cmp
xchg
pop
jnp
xorb
xchg
clc
subb
add
fisttps
and
dec
lods
mov
out
and
movsl
or
xchg
mov
sti
test
outsl
push
jbe
sub
pop
loope
outsl
pop
ror
mov
ss
inc
lods
sarb
sub
xor
sub
dec
mov
aad
insb
adc
inc
negb
mov
push
and
movsl
jns
loope
sbb
or
inc
idivl
pusha
ror
pop
ret
jmp
imul
push
scas
ja
mov
stos
push
sub
js
incb
push
and
shr
and
mov
popf
out
stc
jg
testl
les
jne
push
lods
pop
clc
fnsave
cli
sub
negb
pop
sub
dec
mov
mov
rclb
or
repz
scas
jg
sbb
mov
movsb
rol
jecxz
negl
sub
inc
push
sub
es
or
pop
repnz
xchg
add
inc
push
and
mov
subl
icebp
add
sbb
push
and
cmpxchg
in
dec
pusha
push
push
sub
cmp
pop
imul
hlt
hlt
mov
leave
jp
mov
popa
xchg
in
std
or
cmpsb
jg
inc
sahf
call
fisubs
xchg
push
inc
fwait
xchg
mov
loope
pop
fdivs
xorb
idivl
adcl
dec
loop
mov
jg
adc
flds
sbb
gs
jle
sbb
stc
addr16
lret
jecxz
jae
push
adc
mov
push
cmp
mov
es
sub
or
inc
xorb
cmp
mov
popf
bound
imul
in
gs
mov
or
cltd
sub
js
mov
ret
insl
in
cmp
addl
mov
in
insb
jl
inc
pop
mov
pop
addr16
add
jno
loopne
or
jns
lds
add
jnp
ss
pusha
mov
inc
pop
insb
decb
sbbb
mov
pop
and
mov
mov
out
outsb
or
mov
insb
add
lret
lock
rclb
fadds
and
mov
mov
inc
push
mov
leave
jecxz
inc
adcl
int3
pusha
rcrb
shlb
insb
js
and
frstor
mov
or
and
cld
and
add
and
or
push
push
shrl
jae
mov
adc
sub
popa
cmpl
cmc
negl
xchg
out
adc
stc
rcl
addr16
fcmovu
jno
mov
jmp
pop
mov
fisubl
push
xlat
mov
mov
sub
ljmp
test
mov
pop
or
dec
cs
adc
daa
adc
or
test
insl
int3
pop
jnp
fldenv
mov
in
pop
pop
clc
mov
ss
movsl
cmc
add
dec
aam
and
jne
fxch
sbb
cmc
cmp
add
out
cmp
xor
in
pop
fcmovnu
ja
sub
dec
xchg
sub
shll
mov
dec
sahf
push
jno
stos
lcall
sub
adc
adc
je
inc
jg
jbe
test
mov
or
push
test
lcall
jbe
ss
loopne
sti
jl
inc
sub
insb
ror
sub
pop
sahf
or
lock
out
mov
xor
mov
xor
mov
scas
call
mov
inc
imul
int3
sub
mov
scas
xor
inc
sub
inc
jp
in
dec
pusha
xchg
es
mov
mov
fldenv
insl
fwait
or
sbb
aas
icebp
les
bound
dec
outsb
cmp
pop
or
push
jae
sahf
leave
int
jmp
scas
mov
lods
stc
scas
mov
outsl
cwtl
xor
push
stos
xor
imul
int3
mov
add
iret
push
xor
mov
pop
or
and
sub
xor
lds
andb
jbe
xor
pop
push
fwait
xor
ljmp
pop
mov
pop
fildl
mov
mov
into
push
ljmp
js
mov
xchg
or
mov
stc
inc
sub
out
sti
push
cmp
jl
out
scas
or
dec
je
shlb
and
enter
stos
cmpsb
push
test
jne
out
sbb
add
scas
jge
push
subb
ja
add
xchg
cwtl
sbb
or
in
enter
sub
leave
jp
mov
repnz
jno
fsubs
jecxz
mov
mov
pop
push
js
sub
orl
cmp
inc
sub
pop
jmp
sbb
jo
cmp
fwait
push
jbe
jg
or
sbb
sbb
insl
test
xchg
scas
dec
sbb
outsl
bound
stos
in
leave
mov
out
fwait
cltd
incb
mov
and
and
stos
aaa
inc
sbb
xor
adc
hlt
into
ret
sbb
xor
or
pop
push
jecxz
cmp
cmp
mov
mov
sarl
or
mov
jle
xchg
jne
sar
mov
pop
mov
cmp
sbb
push
and
jmp
inc
inc
jo
fnstsw
dec
mov
out
adc
sub
rolb
sti
push
jge
cltd
xor
movsb
pop
and
mov
cli
cmpsl
push
pop
mov
pop
sub
add
cmc
pop
push
pop
ss
pop
sub
sti
dec
stos
sbbl
ljmp
dec
add
sbb
or
mov
cwtl
pop
sub
sarb
lods
push
testb
jae
sub
pusha
or
insl
or
fadd
sbb
mov
or
jo
mov
fisubrs
pop
inc
or
fbstp
jmp
and
jo
mov
notl
stos
lret
jbe
and
pop
fidivl
lret
addr16
mov
mov
mov
gs
repz
lret
loopne
push
popa
fcompl
xor
std
inc
rcrb
sbb
cwtl
jno
jns
sbb
push
mov
xchg
pop
imul
and
jnp
xchg
cmpsl
in
jl
ret
and
rcll
sbb
add
notb
subb
add
add
jb
sbb
and
push
out
sub
push
sub
dec
pop
fwait
test
cmp
in
sti
mov
mov
addr16
nop
or
cmpsl
lret
dec
int3
sub
mov
sbb
nop
cmp
arpl
inc
iret
xorb
mov
adc
cmp
mov
mov
push
pop
cmc
test
pop
xor
push
mov
lahf
pop
insb
notl
sub
lods
jns
lods
and
repz
outsb
hlt
fucomi
sub
sahf
sbb
xchg
adc
mov
divb
shlb
fmull
fidivs
push
js
inc
cmp
sbb
ljmp
adc
mov
cwtl
in
mov
xchg
mov
add
mov
push
sbb
push
test
pop
arpl
data16
sbb
out
imul
imul
adc
movsb
cwtl
mov
popf
or
int
xor
mov
adc
sub
xor
lret
jb
lock
enter
sbb
pop
test
insl
mov
loopne
sub
add
pop
adc
outsl
add
sub
loop
mov
sbb
sbb
sbb
je
xchg
imul
push
in
fwait
push
popf
adc
push
fsubrl
jle
dec
cmpsb
sub
ljmp
sub
inc
mov
jecxz
sarl
cld
mov
popf
sub
mov
xor
shll
mov
loope
push
movsb
xor
jle
ja
sub
mov
nop
and
adc
jg
mov
add
mov
xchg
cs
outsl
sub
xor
lcall
sub
lds
sbb
in
dec
dec
in
gs
ja
xchg
mov
test
imulb
sub
sbb
or
pushf
inc
subl
push
xchg
sub
incl
imul
aas
in
xchg
loop
enter
mov
je
adcb
pop
ja
add
mov
adcl
mov
dec
dec
cmc
insb
push
sbb
lods
movsb
ret
mov
jns
mov
inc
call
adc
lahf
or
shlb
dec
or
jnp
in
push
es
jecxz
insb
cmp
push
pop
scas
dec
jle
in
push
sub
lods
je
jbe
add
aam
xor
insl
push
lock
add
sbb
lret
and
outsl
je
xor
xor
out
pop
repz
xor
xchg
imul
out
or
idivl
mov
nop
sbb
pop
addr16
xchg
outsl
cmpl
rcrb
sbb
adc
pop
add
mov
ret
out
sti
push
mov
repnz
mov
push
jg
pop
mov
test
and
xchg
xchg
sub
ret
mov
adc
shl
mov
push
test
pop
sbb
lods
dec
jbe
add
dec
mov
clc
add
fidivrl
imul
loopne
imul
jae
cmp
pop
mov
sub
lock
mov
adc
dec
mov
or
pop
rcl
movsb
adc
enter
jg
sti
lret
mov
jno
into
in
lret
sub
test
std
inc
sahf
in
out
mov
nop
jg
aad
xchg
repnz
or
or
jge
sub
or
adc
daa
mov
sahf
js
enter
sub
stc
dec
adc
shl
cld
sub
popa
repnz
jne
dec
xchg
xchg
aaa
sub
cmp
mov
sidtl
insb
sbb
mov
fldenv
test
adc
pop
cmpsb
sbb
imul
ret
inc
in
push
fsave
push
mov
mov
sar
xor
cmp
lods
mov
adc
sbbl
jg
data16
dec
arpl
shlb
fcoms
sbb
fs
fsubs
xchg
adc
scas
shr
xchg
mov
sub
sbb
icebp
mov
cltd
add
mov
mov
fsubrl
push
jg
fstpl
icebp
sbb
mov
mov
notb
cmp
int
dec
ret
fmull
mov
xchg
aas
loopne
lret
adc
jae
je
xchg
pop
scas
jp
out
sahf
sahf
pop
out
test
mov
fiadds
add
movsb
hlt
jno
ja
ret
sub
add
jnp
adc
leave
rcl
data16
inc
dec
loopne
mov
clc
in
cs
fdivrl
gs
mov
push
jp
push
out
sar
out
ljmp
push
sub
loopne
daa
push
xor
jle
imul
dec
in
and
pop
cmp
and
jl
sub
ss
and
cmpl
fcmovnu
add
mov
mov
dec
inc
scas
mov
mov
lret
cld
jg
jge
mov
imul
repnz
dec
loop
pushf
fidivs
or
cmpl
push
stc
push
vcmpps
loopne
std
inc
xor
lds
dec
pop
push
xchg
xor
adc
shrb
sbb
mov
popa
repnz
cmp
loop
and
addl
or
push
cmp
mov
je
arpl
out
into
shr
push
idivl
xor
dec
loopne
mov
xchg
repz
push
jnp
xchg
hlt
test
cmpsl
ja
mov
pop
je
test
test
in
test
push
orb
decl
cwtl
inc
pop
filds
pop
mov
popa
aam
cmp
aad
fisttpll
fists
aaa
xlat
jne,pt
pop
outsb
pusha
enter
add
inc
cmp
pusha
mov
push
out
fbstp
js
jmp
fadds
or
fisttps
test
xchg
sbb
and
pop
dec
xor
lds
fs
pop
int3
dec
movsl
jb
test
jge
sarl
leave
inc
mov
pop
mov
cld
sub
inc
enter
daa
mov
lret
dec
insl
xor
inc
leave
cmp
sti
in
vpor
repz
cli
pusha
adc
dec
hlt
je
sub
dec
mov
enter
cmp
add
fsts
sbb
fdiv
sti
test
jns
dec
lods
mov
or
mov
and
sbb
lea
mov
insb
jmp
mov
frstor
cmp
push
cwtl
sub
push
popf
or
addb
ja
das
test
push
jae
mov
and
push
adc
arpl
outsb
sbb
sbb
mov
adc
and
xor
mov
neg
ffreep
js
jl
int
mov
push
in
movhps
or
jge
mov
into
enter
mov
sbb
vunpckhps
enter
push
jmp
adcl
add
jp
roll
lods
mov
add
into
aam
ds
xchg
stos
cmpl
ret
inc
fs
add
loopne
jl
push
inc
jmp
lds
mov
loop
mov
int
dec
dec
inc
and
clc
adc
inc
push
in
adc
pusha
push
pop
bound
call
cmp
push
mov
loope
fwait
aam
xchg
sbb
repz
into
adc
insb
sbb
cltd
push
int3
fidivrs
mov
and
gs
and
cmp
daa
push
fs
imul
cmc
or
daa
pop
dec
movsl
ret
xor
add
sbb
ret
out
sbb
cwtl
push
int
mov
cmp
cmpsl
fsubrs
mov
sub
sub
test
in
pop
movsl
aad
movsb
sbb
es
mov
mov
rcll
lods
push
xor
lods
or
outsb
mov
sahf
imul
mov
lcall
inc
test
inc
lea
adc
ret
aaa
stc
and
sub
movsb
fdivr
xchg
mov
push
into
enter
ljmp
out
test
cmpsb
xchg
pop
rcrl
test
popf
sbb
outsl
or
es
mov
int
pop
cwtl
scas
and
xor
mov
in
xchg
cmp
js
or
icebp
ja
and
pushf
rorl
call
sub
push
xchg
sbb
in
push
icebp
sbb
mov
lret
add
push
and
add
push
push
mov
and
jae
lock
loop
daa
sub
mov
push
lds
inc
add
cmp
mov
cld
jg
pop
add
mov
loopne
arpl
testb
jnp
adc
mov
xor
es
orb
pop
mov
imul
pop
addr16
jbe
push
xor
leave
push
mov
push
cs
btr
das
mov
test
ret
xor
fbld
ret
jno
inc
mov
xchg
mov
pop
mov
inc
fs
mov
ljmp
fwait
scas
es
pop
cmp
cltd
or
in
dec
push
lds
mov
mov
add
and
xchg
pusha
daa
data16
cld
adc
fwait
loop
adc
sbb
fsubr
cmpsl
shrb
cmp
jle
dec
in
jecxz
je
xchg
xchg
data16
dec
push
lods
jle
xor
jbe
scas
xchg
fwait
arpl
inc
xor
cmp
push
sbb
push
leave
or
pop
cmp
xchg
shl
pop
mov
pop
adc
mov
inc
shlb
adc
scas
and
jb
sahf
fsubrs
xor
pop
push
imul
pusha
mov
dec
ja
or
mov
test
and
xchg
popa
clc
clc
and
jnp
sbbb
ror
xor
or
loopne
mov
push
inc
inc
sti
andb
call
jl
inc
iret
push
mov
push
arpl
out
div
stos
xchg
pop
aaa
jb
lods
movsl
cmp
xor
ja
stos
icebp
jp
sbb
ja
mov
sub
pop
ja
cmp
xchg
jnp
jg
test
inc
push
les
fs
push
mov
mov
adc
out
mov
outsb
sub
mov
pop
cmp
int3
and
decb
sbb
mov
jp,pt
daa
jp
xor
or
sub
and
aam
lahf
aam
push
xor
lods
es
pop
loopne
ret
and
imul
inc
sub
inc
insl
mov
in
bound
pusha
mov
out
push
xchg
sub
and
add
bound
test
das
movsb
fistl
fstpt
insl
ret
dec
or
push
add
fimull
or
icebp
jb
jge
cmp
mov
or
mov
pop
add
imul
mov
add
sub
cmc
lcall
test
sti
mov
aam
std
sub
outsb
jmp
in
push
push
cmp
jg
cmp
xchg
fcompl
ja
mov
ds
inc
sarb
push
lcall
stc
pushf
sti
xor
lods
lahf
fnsave
out
repnz
dec
loop
in
out
jmp
or
or
in
dec
ja
fs
xor
test
or
push
sub
dec
inc
push
outsb
aam
xchg
movsb
sub
in
or
add
sub
fwait
hlt
ja
add
in
nop
cmpsl
loop
int
or
mov
sub
jp
out
jno
push
inc
pop
repnz
jge
out
lock
xor
jnp
fildll
mov
lea
jnp
adc
sub
fistl
xchg
mov
movsb
pop
sbb
loop
sub
push
out
add
cmp
sbb
or
dec
pop
xchg
mov
call
iret
es
stos
jbe
dec
lods
and
out
popa
out
mov
xor
ss
mov
sti
add
adc
sub
sahf
or
cmp
xchg
jp
jae
loop
and
mov
or
stos
push
call
xor
int3
pop
jmp
push
out
mov
push
fmuls
xchg
outsl
pop
rclb
sbb
push
xchg
rcrl
lds
jg
mov
jp
mov
mov
jno
push
movsl
dec
push
das
mov
mov
xchg
lea
inc
fcomps
jo
adcl
jg
aad
adc
scas
adc
or
sbb
cmpl
lock
add
scas
push
mov
mov
mov
das
lds
mov
mov
ds
and
xchg
and
repnz
adcl
sub
or
into
and
and
loope
in
js
mov
push
shll
scas
bound
ljmp
dec
mov
cld
es
xor
mov
add
dec
repnz
mov
lcall
mov
je
gs
fnsave
data16
and
je
andl
outsl
daa
pop
sub
mov
loopne
mov
dec
inc
js
push
cld
xchg
dec
popa
negl
jl
notl
icebp
popa
xchg
insb
stos
stos
sub
pop
int3
jb
mov
lahf
adc
pop
popf
push
mov
pop
mov
adc
jno
pop
inc
popf
out
mov
daa
shll
add
mov
xchg
hlt
in
lock
inc
lods
jg
movsb
jb
fsts
outsl
test
imul
mov
arpl
ret
add
push
lret
rcl
in
fisubrs
xchg
mov
pop
jge
xchg
sub
lea
fidivl
add
xchg
xor
lock
dec
pop
push
lret
iret
inc
and
pop
lret
das
push
std
jnp
mov
into
jmp
jge
sbb
pop
fidivrs
jle
pushf
push
leave
dec
iret
repz
imul
mov
bound
aas
xchg
dec
in
data16
je
lock
add
jbe
cmpsl
cmp
pop
mov
aas
add
mov
adc
lods
push
shll
lret
or
lods
push
or
fcoms
mov
or
push
decl
xchg
push
push
aam
movsb
jae
lock
push
sub
fsubl
fistl
xchg
dec
subl
fildl
dec
add
mov
cmpsb
cmp
dec
imulb
jnp
jg
lea
inc
sbb
stos
inc
ret
mov
cmp
xor
push
add
add
pop
push
cli
pop
cmp
int
sub
cmpsl
data16
mov
cs
ljmp
adc
cli
test
int
js
pop
jg
mov
mov
sbb
inc
jmp
cmp
push
ss
test
pop
cmp
pop
jecxz
jle
mov
xchg
push
ret
mov
loopne
fs
mov
shlb
cmpsl
push
pop
lds
and
call
cmp
inc
push
jno
stc
add
cmp
jge
sub
mov
int
js
lea
mov
mov
and
repnz
lahf
mov
ret
cmp
push
pop
pop
or
pop
cld
mov
cmpsl
jo
add
adc
mov
cs
xorb
add
adc
xor
xchg
jle
adc
adc
out
mov
enter
aad
sbb
jge
neg
jp
into
sahf
insl
loopne
gs
popa
dec
inc
sbb
nop
mov
add
xor
or
lahf
mov
jp
xchg
push
fldt
xor
cmp
int
rcrb
movsl
push
stc
or
cs
aam
test
shrb
lods
xor
fucomp
lock
in
dec
std
jo
scas
std
js
hlt
push
dec
cltd
lret
lahf
test
sub
dec
ds
jmp
xchg
pop
mov
xchg
jns
rclb
push
mov
or
cmp
pop
fisttpll
inc
cmpsl
pop
and
push
jo
pusha
jle
call
xor
adc
push
data16
adc
push
pop
repz
fsts
in
xorl
push
push
fwait
or
inc
aad
mov
rorl
sub
bound
test
mov
fwait
scas
jb
icebp
adc
mov
cmpsl
lds
push
mov
lods
mov
push
adc
inc
mov
jnp
xlat
inc
sub
inc
call
push
stos
int
cmp
fs
push
inc
pop
sbb
dec
pop
pop
jo
jns
in
add
cmp
sub
ret
push
aam
xchg
adc
push
movsl
enter
xlat
and
and
pop
cld
int
lods
pop
sbb
inc
scas
xchg
scas
xchg
fldt
push
sbb
aas
lea
jle
jg
shlb
pop
jbe
pop
cwtl
adc
mov
xor
pop
mov
add
mov
cld
gs
mov
mov
mov
pusha
jecxz
sbb
dec
mov
xchg
inc
int3
ja
in
insb
incb
push
out
or
inc
ja
in
arpl
push
cmp
mov
inc
adc
aas
sub
dec
or
leave
xorb
lea
xor
or
cmpsl
dec
loopne
add
sti
xchg
fstps
xchg
sbb
sbb
sub
data16
daa
mov
sbb
adc
push
fstl
lods
adc
or
daa
mov
mov
dec
cmpb
sbb
pop
rcll
xchg
jmp
repnz
xchg
loope
cmp
aam
xchg
pop
jb
ret
push
inc
xchg
add
pop
loopne
aam
loop
push
and
cwtl
notb
add
add
pop
mov
jb
push
in
cmp
outsl
push
adc
push
hlt
dec
add
fbstp
mov
scas
lock
mov
xchg
cmp
mov
sbb
mov
fsubs
mov
inc
movsb
movsb
cmp
imul
loopne
stc
call
or
ja
add
xor
imul
in
loop
or
cmpsl
daa
mov
pop
dec
cmp
inc
adc
lds
shl
mov
push
lds
sbb
push
lds
rcl
push
std
or
jmp
pop
loopne
push
xchg
bt
sub
mov
mov
testb
loop
inc
sub
aad
cs
les
fimuls
mov
gs
xlat
in
out
or
jbe
add
xor
jl
pusha
ljmp
add
pop
es
lsl
xor
sub
nop
xchg
sar
dec
loop
pop
fwait
cld
out
jbe
jmp
xchg
ret
rolb
adc
insb
jne
mov
mov
dec
xchg
in
rcll
aas
mov
jno
lret
bound
jnp
inc
xor
inc
std
mov
push
sub
daa
pop
xor
mov
mov
repnz
mov
fdiv
inc
inc
fcompl
dec
bound
mov
sub
sbb
es
in
cmp
xchg
jmp
mov
and
cmp
jnp
popf
mov
jmp
jns
stos
rorb
es
sub
adcl
fadds
xchg
mov
aad
mov
cltd
mov
lret
mov
shll
and
sbb
jge
ret
sub
jo
mov
inc
out
loope
inc
adc
add
mov
pusha
mov
pop
loope
nop
jnp
xchg
lcall
dec
mov
int3
or
aam
sahf
sub
push
push
cmp
mov
mov
xchg
fucomip
lds
fbstp
pop
sub
inc
mov
cld
adc
sub
cmp
pushf
xor
call
shrl
add
cmc
inc
test
xlat
xchg
cli
clc
daa
ss
rorl
insl
and
stos
nop
cmovg
stos
mov
call
pop
arpl
fnstcw
pop
loop
fisttpl
into
xor
cld
sbb
adc
jg
adc
daa
xchg
ret
push
or
xchg
and
mov
or
xchg
aas
or
adc
incl
add
lret
push
sbb
mov
into
mov
cmp
jp
das
pop
idivl
and
xchg
sub
out
pop
loope
rcrl
or
add
fdivrs
xchg
push
fucom
je
sbb
xchg
pop
je
lea
dec
das
sbb
mov
pop
xchg
out
inc
loop
xor
mov
lcall
xchg
xchg
jecxz
cmpsl
loope
add
out
add
xchg
stos
xor
lods
lds
stc
je
std
inc
fsubr
sbb
fldcw
dec
jle
dec
pop
bound
clc
mov
pop
xor
std
mov
pop
loop
xchg
jb
and
cltd
std
inc
shlb
lcall
in
stos
inc
xor
mov
out
lret
mov
addps
mov
je
enter
aad
shll
cmp
xor
push
cld
stos
mov
enter
pop
cmp
push
ljmp
loope
mov
fidivs
lock
mov
pop
mov
dec
adc
xor
lahf
add
and
rorb
sbb
pop
xor
add
sub
shl
add
mov
jnp
movl
mov
inc
inc
sub
jbe
shrb
insb
arpl
in
out
sub
xchg
sub
jns
jbe
xcrypt-ecb
cmpsl
lret
aas
pop
in
in
push
fiadds
jne
sub
int
inc
int3
xlat
pop
xchg
je
push
pop
mov
push
cmpsb
and
leave
outsb
pop
add
mov
les
mov
jmp
ret
jae
and
dec
and
test
pop
fwait
sti
sarb
jae
pop
pop
push
pop
into
mov
fnstsw
push
fs
iret
repnz
out
adc
pop
sub
stos
jae
jo
xchg
sbb
lods
test
mov
pusha
mov
into
arpl
mov
sbb
push
push
aaa
into
inc
xor
inc
xor
arpl
jge
xchg
mov
xchg
cmp
pop
jp
xchg
mov
imul
shlb
xor
jae
inc
fsts
loopne
lds
sub
outsl
mov
sbb
dec
mov
test
mov
andb
push
xor
dec
sub
andl
mov
icebp
outsl
jl
pop
fwait
rol
xchg
cmp
mov
in
sbb
push
dec
push
mov
xor
push
mov
fildl
or
fisubs
adc
sbbl
xchg
out
cmp
mov
jg
in
pop
in
pop
inc
imul
std
scas
lods
aas
fisttpll
pushf
pop
jp
inc
dec
out
jbe
subb
or
and
add
fbstp
xor
rcrl
fisttpl
jmp
mov
xchg
das
or
fucomp
les
jecxz
sbb
adc
incl
movsb
mov
xchg
shll
cmp
loop
nop
pop
mov
mov
adcl
xchg
shl
insl
jb
lods
sub
or
int
insb
mov
inc
mov
fidivs
outsl
push
pop
mov
lea
cwtl
scas
xchg
and
push
or
jnp
mov
add
test
or
mov
or
mov
mov
cmp
insb
pop
sbb
ret
cs
jl
inc
xchg
imul
popf
int
jg
sub
repz
scas
xchg
jnp
lods
clc
inc
fldl2e
cmp
fs
mov
or
aas
jne
xor
data16
and
ss
enter
dec
stos
xor
loope
and
cmpsb
xchg
cmp
aam
sbb
ret
sbb
imul
push
out
les
jns
std
or
pop
xchg
dec
xchg
scas
jns
imul
xor
xor
dec
add
sub
notb
stos
cwtl
cmp
dec
lcall
nop
xchg
test
push
adc
ficompl
cli
xor
subb
mov
pop
notb
sub
xor
bound
xabort
inc
mov
jbe
xchg
xlat
jge
jg
mov
lock
dec
and
and
pushf
repz
arpl
inc
adc
xchg
and
inc
add
pop
imul
shrb
xchg
pop
jge
lods
fs
xor
mov
add
lock
es
scas
cmp
pop
pop
xor
enter
jns
mov
rcll
add
leave
mov
shrb
subl
push
out
dec
sub
incl
pop
out
jge
jno
movsb
ffreep
rclb
aad
cmpsb
ret
repz
fiadds
sub
xchg
gs
cmp
adc
push
push
movsb
mov
xchg
pop
and
loop
and
ds
lods
xchg
jle
es
fbstp
ds
add
inc
into
scas
xor
scas
loopne
push
sub
xchg
xor
mov
jp
push
lret
movsb
test
stc
adc
insb
xchg
or
sub
cltd
add
adc
xor
or
into
gs
leave
jae
addr16
insl
psubd
fmull
pop
mov
mov
push
jmp
pop
rcrb
inc
out
xor
imul
enter
sbb
idivb
scas
scas
mov
inc
sbb
push
jne
mov
mov
fisubl
stos
lret
inc
and
in
mov
fstp
pusha
or
mov
insl
stos
mov
outsb
adc
aad
shl
mov
jae
out
cmp
mov
add
add
les
or
dec
adc
dec
xchg
pop
mov
cmp
dec
mov
fstl
jmp
das
lods
rclb
xor
subb
lcall
cltd
scas
push
lds
leave
iret
lret
shr
ret
push
faddp
insb
add
jecxz
sbb
sbbl
cmc
rorb
mov
jne
mov
cmp
cmpb
mov
repz
dec
mov
arpl
insl
mov
loope
mov
push
push
lea
xchg
dec
mov
sbb
orl
adcb
add
sahf
mov
fnsave
mov
or
mov
shrb
pop
mov
jmp
int
leave
mov
fnstsw
xor
or
dec
mov
xchg
dec
clc
ja
cmpsb
test
lahf
stos
cmp
in
test
les
addr16
push
pop
xchg
out
es
pop
adc
sub
ja
test
inc
sbb
jmp
mov
jb
mov
xchg
jge
adc
mov
xor
cld
fs
inc
mov
ret
mov
adc
push
test
js
sbb
mov
fldcw
mov
testl
cli
jmp
xor
adcl
dec
dec
adc
aam
loopne
rol
mov
loop
pop
fwait
lret
and
fdivr
in
push
cmp
stos
cmp
clc
inc
in
lea
mov
call
std
mov
imul
imul
cmp
ja
fucom
in
clc
pop
call
or
aaa
jbe
push
clc
popl
outsb
loope
pop
or
sbb
dec
andb
xchg
js
push
leave
test
outsl
push
pusha
lods
adcl
inc
subb
sbb
scas
lcall
mov
addr16
insb
mov
dec
scas
or
aas
cmpsb
lods
pushf
xor
sub
jg
push
mov
lock
jp
scas
das
hlt
push
and
push
mov
inc
sub
inc
xor
popa
ret
jo
std
cmp
push
xchg
and
std
aam
lret
outsl
ret
sarl
repnz
movsb
lds
pop
pmulhw
or
int
sbb
pop
jecxz
add
mov
xchg
aad
xor
push
cli
fadd
lods
fcomip
mov
lret
mov
xchg
sbb
adc
push
xorl
add
inc
mov
sub
jmp
cmp
sub
adc
in
lods
mov
int
scas
imul
out
inc
or
pop
fsubs
jnp
inc
cs
jne
jmp
mov
jb
sbb
pop
sub
push
add
cmc
std
and
das
adc
adc
pop
cwtl
imul
xchg
xor
dec
scas
dec
jge
pop
stos
add
inc
sbb
mull
jb
mov
stc
lcall
les
or
aas
dec
hlt
addr16
cmp
mov
faddl
push
ds
inc
outsb
lret
les
dec
lahf
insl
dec
fwait
mov
popa
clc
repz
gs
and
cld
inc
push
or
mov
sub
inc
fdivs
xchg
jno
lret
cs
stos
mov
aam
int3
or
repz
sbb
imul
std
cmp
lahf
imul
and
in
in
inc
add
jle
jo
pop
cli
xchg
cltd
jl
mov
test
jno
repnz
sbb
ds
fldenv
enter
imul
stc
or
xchg
add
bound
mov
dec
dec
dec
arpl
add
jle
xchg
sbb
and
mov
cmp
jo
jg
icebp
lds
pop
mov
scas
fidivs
in
or
pusha
mov
int3
lret
out
jp
data16
dec
or
loop
lret
daa
aas
icebp
xorb
decl
mov
cmp
sbb
int3
xor
insb
xor
jo
out
cld
sahf
inc
mov
cld
ljmp
sub
mov
dec
inc
int
cmp
mov
aas
sarl
aad
add
fisubs
leave
mov
xor
mov
cmpsl
pop
xchg
xor
jns
and
repz
insl
fnsave
mov
aad
aas
push
add
bound
sahf
xchg
xor
ljmp
add
mov
cmpl
insb
iret
sub
adc
xchg
jmp
in
cli
mov
rcll
daa
dec
loope
xor
jb
cmpsl
adc
subl
je
ljmp
mov
pushf
cmp
hlt
sub
pop
push
cs
sub
cmp
mov
shlb
jge
or
lock
mov
stc
mov
inc
mov
dec
imul
xlat
adc
std
pusha
sbbb
arpl
stc
lcall
in
lds
fwait
cld
push
add
cmp
imul
in
dec
sub
loopne
subl
mov
sub
clc
adc
js
pop
movl
adc
mov
int3
xchg
adc
push
push
daa
cmp
mov
xchg
pop
mov
sbb
jne
adc
jecxz
insb
dec
jbe
pop
in
and
imul
fistl
insb
out
dec
sub
fs
jg
and
jl
aaa
sub
inc
xchg
lock
fs
mov
ret
repz
hlt
adc
adc
addr16
xor
mov
dec
arpl
push
jae
mov
xchg
xchg
inc
es
push
dec
mov
les
out
dec
jns
sti
mov
jp
jmp
xchg
add
mov
dec
into
mov
mov
cmp
fistl
outsb
add
std
xchg
adcl
xor
push
cmp
inc
push
ret
fbstp
sub
imul
fcoms
scas
jno
pop
and
jnp
sub
sub
and
mov
mov
sbb
lea
dec
sbb
pop
xor
aaa
mov
jg
jbe,pn
sbb
xchg
loope
push
insl
and
jle
mov
sbb
adc
mov
hlt
pop
stos
cmp
dec
dec
fisttpl
mov
push
mov
inc
adc
stc
mov
sbb
mov
daa
xor
cltd
add
mov
es
mov
sbb
push
or
jae
xchg
sub
mov
sub
mov
sub
leave
mov
repnz
inc
mov
jb
ljmp
sahf
sub
or
push
mov
inc
gs
aad
mov
movsl
daa
pop
dec
movsb
cmp
jo
aaa
lock
test
push
push
pop
xchg
or
cs
add
xor
insl
push
dec
jnp
call
in
mov
jnp
and
pop
dec
cwtl
stos
xor
push
push
or
dec
add
arpl
int
xlat
int3
add
js
fwait
pop
jae
inc
sti
es
ljmp
filds
icebp
mov
mov
call
adc
cwtl
sbb
sub
mov
push
inc
inc
fnstcw
lcall
ret
add
fs
and
std
aam
cli
fistpl
add
fnstenv
ljmp
leave
inc
jecxz
dec
jmp
sbb
jp
fptan
cmp
or
adc
or
cmpsb
mov
shlb
jo
mov
pop
push
out
bound
rcrl
sbb
add
sub
mov
xor
push
jbe
mov
es
inc
jns
cli
cmp
test
xor
ficompl
adcl
push
popf
inc
lcall
mov
mov
pop
mov
fwait
sti
les
push
inc
shll
ds
negl
repz
mov
out
into
and
pop
negb
mov
pop
lcall
dec
mov
cmp
xchg
ljmp
bound
je
out
xor
jns
lods
movsb
cmc
dec
adc
das
mov
inc
push
pop
dec
mov
push
cmpsb
jge
fcoml
xchg
add
in
inc
ss
xor
xor
inc
push
mov
movsl
sbbl
iret
or
jmp
es
mov
adc
addb
sbb
add
sub
xorb
loop
sbb
enter
jb
mov
es
add
call
in
ljmp
shll
sahf
cwtl
das
rorb
mov
subl
mov
jmp
xchg
pop
cmp
mov
in
nop
xor
shrb
inc
pop
mov
dec
bound
adc
loop
cmpsb
in
jae
adc
jp
outsb
mov
jns
pop
aas
test
loopne
fbstp
inc
andb
test
insl
ds
pop
jo
jno
cld
sub
xchg
dec
lahf
jp
xchg
arpl
dec
popf
sbb
cmpsl
cmp
cmp
push
flds
or
inc
lahf
push
xlat
outsb
subl
sti
inc
jge
add
mov
push
daa
lds
mov
lahf
subl
shrb
mov
jg
add
inc
fucomp
aaa
jge
push
mov
sbb
mov
movsb
pop
inc
pop
mov
int
xchg
dec
loope
xchg
mov
add
jge
in
lcall
in
jg
int3
xor
push
aas
jnp
jno
mov
stc
cmp
addb
pop
in
nop
lods
filds
fisubl
cld
xchg
stos
jmp
cli
push
adc
inc
mov
inc
fcomps
push
subl
jle
dec
or
adc
dec
xchg
pusha
xchg
cmp
cmp
dec
js
lods
inc
imul
dec
xchg
mov
sub
dec
sarb
test
sarl
cmp
sbbl
lahf
pop
aam
mov
xchg
or
out
in
scas
lahf
pop
in
or
cmp
iret
add
je
push
sbb
mov
imul
mov
mov
inc
xchg
je
adc
mov
repnz
push
mov
cld
push
lods
dec
cmp
lods
add
pop
xchg
imul
aas
aam
out
sub
adc
xchg
out
stc
fldcw
ljmp
inc
cmp
pop
mov
adc
ret
xor
enter
pop
dec
cmp
test
pusha
jne
mov
xor
out
xor
xlat
ret
arpl
hlt
and
add
imul
in
ja
lods
push
lcall
in
aas
lods
xor
lahf
loopne
std
xchg
in
add
js
mov
fldenv
xchg
bound
xor
cmp
es
leave
leave
es
ds
and
shl
in
sti
mov
cmp
jg,pt
mull
hlt
stc
push
stos
addr16
add
xor
dec
and
push
shll
ror
sti
sub
shlb
add
push
ja
out
push
cmp
pop
repz
sbb
mov
push
dec
dec
mov
insb
and
push
mov
xor
insl
mov
jle
rcl
insl
cmpsb
jle
daa
lret
cmp
ds
push
mov
and
addr16
cmp
pushf
sbb
jb
jp
cmc
stos
inc
stc
or
je
sbb
xrelease
adc
xchg
out
mov
popf
xchg
xchg
mov
adc
jmp
jno
popf
cmpsl
emms
or
xchg
dec
push
cltd
add
pop
test
mov
pop
push
sbb
jg
repnz
xchg
xchg
inc
mov
inc
and
xchg
out
cmpsb
xchg
push
jl
or
pop
les
inc
addr16
fldcw
in
outsb
lcall
pop
mov
or
cltd
mov
lods
jecxz
std
and
push
push
sahf
rolb
js
jg
push
push
lret
les
loop
stos
in
push
in
inc
mov
jbe
pop
mov
fcomps
push
push
add
cmp
sub
sbb
dec
mov
xlat
jmp
xchg
insl
mov
dec
cmp
hlt
push
mul
sbb
or
test
sbb
test
fcmovb
pop
push
fdiv
dec
aaa
pop
fwait
out
inc
nop
jbe
mov
xor
cmc
arpl
dec
bound
outsb
mov
jnp
stc
leavew
inc
pusha
cli
inc
sti
lods
arpl
lods
jmp
xchg
cmc
shll
std
aaa
pop
dec
into
punpcklwd
mov
cmp
int3
xor
ljmp
mov
inc
and
xchg
push
pushf
mulb
pop
ljmp
inc
bound
push
add
sbb
cmp
push
test
pusha
lock
popf
mov
cmpsb
jns
scas
std
and
cs
xchg
scas
stc
adc
mov
ja
jl
sub
fiadds
ja
fisubl
or
mov
adc
test
add
fwait
shll
loope
push
sub
aas
pop
jne
push
sub
xchg
mov
stc
imul
cltd
fs
mov
faddl
data16
imul
dec
lret
sub
insb
add
and
mov
and
pusha
mov
out
lret
bound
int3
pop
bound
lcall
lcall
adc
int3
xchg
out
xor
lods
cli
inc
cld
scas
inc
adc
push
sbb
ds
bound
cmp
sbb
inc
lds
jle
xor
push
les
pop
loope
mov
add
hlt
add
mov
arpl
jae
in
inc
in
fstpt
rcl
mov
daa
sub
inc
xchg
lret
shlb
mov
fldcw
jne
push
cmp
xchg
insb
ja
sbb
lahf
jb
xor
outsl
rcr
jnp
dec
mov
shlb
sbb
sbb
pop
dec
mov
add
scas
lret
xlat
hlt
and
jno
add
xor
outsl
inc
cbtw
cmc
aam
sub
jmp
or
pop
aas
test
loopne
pop
inc
movsb
lods
jno
add
xorb
in
outsl
cmpb
mov
aaa
fsubrl
push
scas
shrl
dec
shll
jbe
or
mov
scas
and
mov
xchg
data16
jmp
mov
jmp
cmp
repz
cld
mov
arpl
stos
inc
imul
scas
cs
cmp
pop
clc
mov
xorb
divb
push
push
lea
mov
je
inc
frstor
jg
push
and
xor
xor
ljmp
push
xchg
push
js
mov
mov
ss
fmuls
cmp
scas
push
pop
sar
jb
stc
nop
out
adc
jnp
sbb
test
lds
adc
dec
xchg
insl
jo
test
mov
mov
adc
pop
add
pop
xlat
stos
sub
negl
bound
sub
add
ja
mov
mov
adc
int
xchg
jo
push
push
clc
test
jp
mov
add
mov
or
and
push
sub
lcall
popf
into
and
mov
mov
out
scas
je
loopne
or
push
pop
and
xor
jmp
adc
aam
inc
mov
sub
test
mov
and
iret
pop
mov
cmp
push
jecxz
push
popf
sub
pop
imul
cmpsb
cmp
add
mov
outsl
mov
add
test
in
ja
xchg
test
mov
xor
pop
jb
ret
and
xor
push
add
loop
stos
jo
lock
insl
stc
inc
shrb
repnz
add
pop
and
mov
or
add
xchg
pop
mov
out
iret
push
repnz
outsb
out
lods
lds
and
inc
popa
clc
ja
sub
jne
add
js
in
arpl
fs
out
xor
mov
adc
mov
outsb
es
push
aas
or
fidivs
push
adc
lock
cs
add
pop
add
inc
pop
imul
push
sbb
je
xchg
cmp
ret
jb
cmp
push
rol
push
outsl
stc
adc
or
cs
pop
and
fstpl
xchg
ret
shlb
icebp
sbbb
sbb
pop
push
cmpl
or
jo
fstl
push
fwait
and
outsl
push
jb
jge
dec
into
xor
jg
mov
jb
or
adc
ja
jecxz
or
fcmovnu
sub
iret
xchg
pop
stos
push
dec
xlat
out
in
xor
cli
mov
cltd
xchg
pop
mov
mov
mov
call
push
push
outsl
lret
xchg
push
jle
in
mov
mov
pop
jmp
fs
insl
ja
popa
xor
bound
mov
push
mov
xor
cmc
mov
xor
dec
sbb
mov
in
or
sbb
ret
leave
push
int
hlt
ja
add
int
and
arpl
mov
xchg
sar
int
leave
mov
push
ds
nop
mov
mov
imul
sbb
inc
dec
adc
dec
out
hlt
in
sbb
inc
pusha
cmpsb
inc
xchg
xor
inc
cs
call
out
pop
push
mov
xchg
xchg
xor
sarb
push
jmp
xor
fwait
dec
incl
sub
int
lods
jb
outsl
jle
xchg
test
pop
mov
shll
sbb
dec
pop
jge
dec
ds
pusha
push
out
xchg
mov
inc
pop
pop
in
cwtl
or
jo
mov
add
aad
popf
push
movsb
or
pop
cmpb
ret
xchg
mov
int
jmp
add
test
cmp
in
mov
jae
pop
lret
idivl
enter
repz
je
imul
lods
inc
xor
test
out
push
int
xor
cmp
inc
ljmp
adc
jb
jmp
add
es
adc
sub
imul
lock
and
mov
xchg
pop
cmp
xchg
inc
andb
or
loope
dec
pop
pop
ficoms
test
inc
js
sbb
mov
and
rcr
jb
mov
stc
or
push
push
cmp
insb
insl
cmpsl
aad
cmpsl
repz
jmp
in
inc
mov
hlt
dec
fsubs
cltd
in
popa
pop
push
stos
sbb
enter
das
pop
das
jecxz
mov
jbe
pop
test
andl
ret
hlt
mov
jnp
ret
test
mov
xchg
adc
rcrl
icebp
mov
imul
cmpsb
jns
scas
fstl
push
adc
jge
stos
insb
cmpsb
xchg
xchg
rol
imul
in
jl
adc
test
mov
out
cmpsb
mov
lock
add
xor
and
lahf
push
outsb
outsl
mov
mov
cltd
lds
enter
inc
dec
mov
push
test
jns
lods
gs
mov
add
sbb
and
syscall
or
jae
mov
cli
jne
cld
popa
das
lock
jno
pop
lea
les
pop
out
arpl
jnp
testb
jg
out
xor
shll
pop
neg
adc
jb
mov
leave
adc
mov
xor
in
sarb
lcall
lock
jg
ficoms
xchg
mov
or
cmpsl
cmp
push
popf
pop
and
lret
test
mov
sub
movb
testb
daa
cmp
fnstcw
popf
popa
outsb
les
cld
pop
in
loop
dec
adc
stos
jle
cmp
outsl
andnps
sbb
jmp
mov
and
pushf
dec
jecxz
adc
mov
cltd
in
roll
dec
cmpsl
mov
mov
fucom
cmpsb
aad
jmp
pop
xchg
jo
leave
or
sbb
sub
pop
ds
push
mov
les
jge
cmpsb
ret
fisttps
iret
loop
shr
aaa
sub
sub
cmp
mov
xchg
insb
call
dec
inc
mov
mov
movsb
cmp
pop
das
xor
das
ret
pop
pusha
stos
popf
in
push
push
loope
out
fs
push
sarb
ret
call
pop
inc
addr16
lds
mul
add
adc
jmp
cmp
sub
outsl
or
div
or
xchg
data16
loopne
mov
push
xor
insb
sbb
nop
push
cmp
xor
cmp
adc
and
mov
mov
daa
dec
and
adc
addr16
popa
dec
mov
shrb
roll
dec
add
leave
pusha
mov
pop
testb
ret
test
stos
mov
mov
scas
dec
idivb
add
mov
loope
push
test
fnsave
sti
adc
in
xchg
cli
inc
repnz
fistps
cwtl
aad
dec
in
cld
cld
fbstp
or
arpl
mov
loopne
aas
mov
push
or
bnd
pop
divb
add
pushf
xor
hlt
test
mov
or
and
jne
jno
fwait
das
rcrl
cmp
push
clc
push
jp
pushf
cli
cli
dec
fwait
xor
aad
movsl
push
jnp
xor
dec
mov
aaa
pop
and
jl
mov
jb
stos
xlat
fwait
add
fs
adc
das
inc
mov
mov
cwtl
or
lods
stc
mov
sub
or
and
int
fs
das
and
pop
and
push
ds
lret
push
push
xor
push
jb
fldcw
fs
push
mov
imul
mov
push
xor
push
fsts
ss
stos
inc
dec
in
jns
xor
imul
imul
xor
das
lahf
testl
das
cmp
lret
in
dec
aaa
sub
ss
dec
xorps
fcmove
pop
push
dec
xor
jge
jb
imul
addl
test
jp
sbb
inc
fimuls
es
testl
fnstsw
in
std
mov
pop
push
or
lock
pop
or
jno
xor
lret
pop
pop
jmp
ljmp
jno
popf
adc
mov
cmp
push
mov
lahf
jle
push
cmpsl
xchg
xchg
push
je,pn
sub
ljmp
lret
int
pop
scas
adc
dec
aaa
dec
jne
push
fs
cmp
dec
or
rolb
xlat
mov
ror
sub
jae
and
movsl
pusha
testl
inc
add
je
test
sub
movsb
subl
pop
add
pop
push
sub
leave
mov
or
fsubrs
push
shrb
or
testb
jl
xor
and
add
test
loop
andb
orb
movsb
lock
and
out
popa
jl
lcall
jg
addr16
xchg
add
enter
sbb
push
mov
sbb
pusha
xor
in
xchg
pop
or
addr16
add
sti
fwait
scas
arpl
aad
insb
testl
mov
fcmovu
pop
xchg
adc
in
mov
and
pop
mov
jae
insb
pop
jae
ficoms
cmp
push
lahf
sti
scas
inc
push
loopne
es
ds
inc
push
lahf
loop
sbb
mov
aas
test
cmp
adc
dec
sbb
add
out
sub
rclb
cmpb
sub
mov
cmp
shl
subl
mov
pop
sti
or
addl
lds
sbb
jmp
out
sbb
cld
fisubl
stos
mov
jnp
inc
jecxz
add
fwait
cli
lret
aas
push
daa
ds
repz
jle
out
xchg
incl
adc
xor
aaa
jne
icebp
mov
cmc
xor
push
push
lock
lods
lret
sti
into
sub
lahf
imul
add
jae
and
mov
js
sarl
xchg
loope
fimuls
cli
out
out
or
pop
sub
sub
int
in
test
adcb
pop
loop
pop
or
mov
loop
sbb
sub
xchg
sub
xchg
popf
mov
rorb
cmpsl
pop
jnp
test
ja
arpl
leave
fsts
mov
adc
add
out
push
loop
mov
pop
loope
sub
fwait
shl
icebp
movsb
std
loop
das
pop
or
rclb
sbb
mov
mull
push
jnp
clc
pop
xchg
idivl
inc
lcall
ds
adc
or
jp
sub
sbb
js
enter
dec
in
insl
cwtl
fsub
test
or
outsb
in
nop
pop
dec
adc
mov
pop
fstl
jns
push
fiaddl
test
dec
test
imul
sbb
mov
mov
inc
aas
cmp
inc
enter
and
es
xor
xor
insb
sti
xchg
sahf
rolb
ret
mov
loope
xchg
dec
dec
inc
punpckhwd
fidivrs
lahf
or
sub
push
mov
outsl
jns
fisubrs
and
cmpsl
mov
shlb
test
dec
lods
xchg
sub
sub
out
or
mov
insl
popf
daa
mov
dec
mov
jne
jns
loope
int
scas
push
and
cmp
dec
fimull
xchg
enter
lods
adc
ret
inc
jmp
pop
cltd
mov
shll
push
mov
inc
loopne
jmp
addr16
jae
inc
out
leave
loopne
sti
pop
sbb
mov
pop
push
shl
or
inc
mov
dec
dec
sbb
or
je
jne
adc
aam
dec
cld
push
mov
sbb
mov
mov
push
mov
cld
xchg
clc
sbb
mov
mov
daa
daa
adc
pop
pushf
lods
inc
into
fwait
sti
test
negl
enter
sub
test
andl
dec
xor
lcall
ja
dec
mov
push
jno
and
cmp
loope
inc
pop
sarb
movsl
inc
jno
stos
inc
add
dec
fisubl
jecxz
call
rorl
push
xor
pop
mov
pop
adc
lcall
jb
inc
lds
mov
sti
insb
pop
imul
xchg
mov
call
xor
xor
mov
dec
adc
dec
aad
movsl
push
add
out
cmp
cmp
sub
jbe
int
xchg
cmp
adc
jbe
jb
bt
jge
mov
daa
xchg
inc
cs
inc
push
ret
insl
xchg
mov
stc
cmpsb
mov
fidivrs
cmp
pop
adc
add
mov
into
bound
push
insl
ror
push
adc
lcall
xor
cmp
xchg
adc
jecxz
mov
loope
rcrl
insb
push
pop
pushf
lret
xchg
inc
data16
inc
mov
arpl
gs
pop
cld
lcall
in
outsb
js
jmp
sub
hlt
fwait
mov
lahf
push
cmp
jg
in
pop
jno
xchg
call
cmpsl
imul
stos
inc
fucomip
icebp
mov
mov
loop
test
sub
lods
add
out
daa
mov
mov
inc
pcmpeqd
or
aas
mov
xor
mov
je
mov
adc
mov
das
lret
outsb
jmp
cmp
cmc
or
fcoms
sub
mov
sbb
jne
mov
adc
dec
js
addr16
mov
add
push
xor
jbe
pop
ja
xor
xchg
sub
xor
bound
xchg
sub
jo
in
and
imul
shl
adc
sbb
add
repnz
fsubrs
repz
test
bound
adcb
xchg
sbb
adcl
scas
jl
pushf
push
dec
movsb
repz
ljmp
popf
inc
fcmovne
fs
imul
push
bound
test
or
mov
faddl
or
inc
mov
sbb
out
in
repnz
js
and
shlb
mov
cmp
or
mov
bound
pop
fistpll
xor
in
inc
inc
mov
add
push
mov
dec
fdivs
out
add
pop
push
xchg
jb
jl
mov
cmp
xchg
push
outsl
mov
sub
int
mov
lock
out
int
data16
inc
jb
dec
sub
jns
dec
mov
xchg
lcall
dec
insl
jl
sub
mov
js
adcl
jp
push
out
or
mov
cmp
aas
mov
stos
mov
lcall
mov
xchg
pop
push
xchg
in
mov
sarb
cltd
in
call
inc
loop
cwtl
mov
pop
test
movsb
add
mov
sub
jne
mov
cltd
data16
sbb
inc
xchg
push
cltd
xchg
sbb
push
mov
daa
mov
mov
dec
jecxz
mov
push
xor
pop
int3
loopne
jns
push
das
dec
cmpsl
ret
jns
lret
jle
sub
mov
out
mov
js
mov
mov
pop
or
adc
loope
or
mov
addr16
inc
or
aas
mov
mov
sbb
push
mov
or
icebp
mov
add
pop
test
mov
inc
fs
inc
sbb
hlt
call
ret
aaa
push
test
jne
jg
loopne
cld
or
insb
adc
xchg
std
sbb
add
jnp
dec
mov
lds
out
push
fdivrs
ljmp
mov
out
stos
pushf
lds
hlt
arpl
pop
inc
sahf
ja
cmpsb
and
xchg
pop
xor
lods
mov
push
test
sbb
imull
or
sbb
adc
add
jns
cli
mov
mov
dec
mov
sub
and
mov
mov
mov
je
jecxz
jl
sahf
xlat
pop
xlat
push
xchg
sub
and
pusha
shll
jne
movb
mov
mov
lcall
sub
adc
cli
stos
add
sbb
bound
ds
pop
out
mov
cmpsl
mov
das
stos
and
push
incb
test
mov
xor
into
inc
clc
xorb
or
loop
pop
cmovo
mov
sub
arpl
mov
lahf
jle
xchg
aam
mov
adc
insb
adc
mov
sub
outsl
daa
jg
std
xchg
mov
xor
or
and
divl
push
inc
push
aaa
decl
popa
data16
xchg
daa
mov
lods
jne
mov
movsl
fwait
ljmp
inc
adc
pop
daa
fs
pushl
adc
and
add
sub
mov
mov
or
fidivs
xchg
imul
mov
shr
push
inc
or
pop
push
adc
cmpsb
out
outsb
push
jmp
mov
xor
or
pcmpeqw
shll
lcall
fwait
and
insl
cwtl
pop
jnp
xor
push
cmp
mov
xchg
mulb
push
sbb
fcmovnb
pop
or
xor
pop
outsb
shll
std
pop
negb
cmpsb
cmp
dec
mov
pop
xor
jo
pop
jge
rcl
ficompl
nop
or
mov
js
das
xor
dec
or
xor
or
push
sub
nop
cmp
jno
mov
jno
incb
nop
scas
push
aad
lahf
loopne
aam
loopne
lock
push
sub
stos
and
xchg
inc
movsb
shlb
lods
fisttpll
push
jns
or
in
or
iret
cmp
fcmove
and
xor
fnstenv
push
scas
pusha
jmp
lret
push
mov
push
jmp
add
jo
or
and
push
cld
pop
sub
stos
and
adc
cwtl
or
mov
cmp
jmp
cli
add
orb
cmp
pop
sahf
push
mov
lods
mov
mov
imul
cmpl
daa
iret
pop
pop
stos
shl
scas
and
or
mov
lcall
gs
xchg
xchg
sub
xor
xor
mov
rorb
add
inc
divl
lods
outsb
add
cmp
lea
fadd
or
pop
xchg
push
inc
xlat
mov
jmp
jle
scas
bnd
jp
jmp
loope
enter
loopne
mov
lret
rcrb
xor
xlat
cmc
mov
std
xchg
int
mov
mov
leave
mov
nop
leave
pusha
ret
pop
add
xlat
mov
jle
lods
ljmp
insb
sarb
push
shll
xchg
sub
scas
inc
pushf
xor
push
fistl
leave
das
inc
sti
mov
ret
pop
sbb
outsb
jge
cmp
sti
jle
int
add
dec
lahf
or
in
and
push
or
cltd
std
xor
inc
cltd
imul
stos
jge
dec
fldt
xchg
jae
xor
push
test
push
push
pop
out
aam
cwtl
add
scas
push
cmpsb
adc
sbbb
jae
ja
and
xchg
in
fwait
notb
cmp
lcall
mov
sarb
cld
lcall
in
repnz
loop
in
pop
cs
cmp
repnz
adc
jns
lock
jge
sub
lret
push
cs
cmp
dec
sub
cmp
add
scas
mov
add
stos
movsb
sti
leave
mov
inc
cltd
aam
jge
imul
ss
les
push
test
pop
test
ljmp
rcl
out
xor
pusha
inc
imul
daa
mov
mov
mov
xchg
std
push
int3
inc
clc
push
and
pop
sbb
lds
icebp
inc
test
mov
mov
add
enter
shlb
add
and
sti
imul
cltd
sub
inc
mov
je
add
fs
mov
enter
arpl
fwait
inc
push
and
hlt
xlat
inc
add
enter
ds
mov
repnz
jns
xchg
sti
adc
sub
xor
popf
or
arpl
into
sub
enter
lret
pop
mov
fbstp
and
jnp
mov
outsb
sub
add
add
inc
out
and
shlb
or
push
adc
fimuls
leave
push
jle
scas
jle
stos
scas
rcrb
rcrl
pop
push
shll
sbb
aaa
out
mov
lcall
and
adc
inc
pop
jmp
outsl
orl
and
pop
cmp
xchg
stos
pop
popf
insl
mov
sbb
xor
inc
je
js
mov
sarb
fsubr
pop
add
mov
mov
insl
scas
cmc
fisttpl
push
sub
mov
adc
int3
lret
or
ss
adcb
jecxz
dec
sub
cmp
mov
js
cmp
cmpsl
out
enter
mov
lcall
loopne
jns
gs
sub
cmpsl
add
mov
addr16
lea
adc
lret
fwait
movsl
scas
sbb
mov
sarb
fwait
das
mulb
sub
ret
dec
pop
sub
es
testl
mov
cmpsl
aas
jo
ffreep
scas
adc
mov
and
add
add
jecxz
movsl
clc
xchg
idiv
pop
movsb
negl
sub
loop
adc
fistl
adc
jbe
adc
cld
cmp
mov
sub
sar
adc
call
in
and
mov
xor
jo
xchg
and
ret
xor
ja
fadds
mov
lret
fdivrl
ret
fimuls
xrelease
jno
mov
jne
enter
loopne
add
insl
cmp
mov
out
nop
dec
xlat
jmp
aad
fsubrs
mov
in
mov
ror
shll
pop
jbe
mov
aaa
mov
test
insb
sub
mov
mov
cmp
mov
pop
xlat
stc
test
mov
addl
or
lret
popl
mov
negl
xor
cmp
sbbb
divl
jge
adc
jg
out
popa
fsub
mov
pop
jnp
repnz
out
jno
ret
stc
jnp
idiv
shlb
push
test
insl
dec
lock
test
jmp
cmpsb
push
jb
lahf
mov
xchg
xor
pop
icebp
mov
lret
cld
fwait
lds
jle
add
mov
test
mov
aas
inc
repz
cwtl
stos
pushf
es
mov
loopne
lods
cmp
xchg
jl
dec
enter
divb
in
sbb
or
sahf
inc
sbb
or
sub
inc
pop
sbb
mov
cmp
inc
add
hlt
dec
aaa
inc
xchg
inc
cmp
xchg
jg
and
outsl
push
shrb
mov
mulb
xor
mull
xchg
jmp
xchg
pushl
xor
aaa
push
in
test
popl
sub
xchg
into
ss
mov
pop
lcall
jle
jecxz
xchg
lahf
inc
ljmp
jno
jle
leave
lret
and
and
inc
nop
xchg
add
xchg
sub
dec
mov
rcrl
lds
inc
jge
lods
mov
repnz
cmp
rorl
out
insl
xchg
ja
cmpsb
and
jmp
jmp
cmp
in
mov
rcr
scas
mov
imul
les
rcrb
jnp
push
xchg
insl
add
imul
sbb
addb
mov
push
or
test
lret
repnz
cmpsb
push
adc
mov
mov
mov
mov
loopne
mov
insl
add
xlat
test
mov
jno
xor
fs
or
daa
outsl
pop
and
or
test
imul
mov
lret
out
bound
sbb
jp
sbb
insb
pop
cmc
idivl
cmp
jecxz
mov
push
mov
arpl
mov
pop
cmpb
mov
in
ljmp
jg
test
fldt
dec
and
mov
jae
pushf
jno
les
sbb
imul
adc
ret
lea
cmpsl
fwait
scas
push
rcrl
xor
addr16
and
test
add
mov
or
mov
push
les
pop
mulb
stos
mov
lock
in
imul
adc
xor
lea
or
inc
lahf
inc
aaa
or
mov
cltd
xor
movl
push
pop
pop
icebp
dec
loopne
aad
cmp
pusha
mov
mov
lods
push
mov
mov
aaa
pop
mov
pop
mov
mov
shlb
dec
push
hlt
inc
or
add
or
push
sbb
pop
mull
stc
clc
add
scas
xor
and
test
rorb
push
repnz
cmp
sub
test
pop
push
mov
cmpsb
jl
dec
push
pop
les
insb
dec
push
dec
movsb
or
xor
aas
pop
out
xor
pop
or
test
dec
push
adc
shlb
xchg
aam
mov
fmull
add
lock
push
cmp
bound
jb
push
scas
cmc
es
repnz
push
and
andb
inc
fsubl
fwait
scas
addb
cli
pop
ja
lods
xchg
lahf
inc
gs
notl
inc
jle
inc
jo
es
xchg
fcmove
in
mov
inc
dec
sub
push
mov
inc
out
xchg
fdivrs
pop
xchg
out
in
int
pushf
add
jne
mov
fsubrs
mov
in
out
leave
pusha
or
test
lods
out
call
adc
and
mov
ss
pop
test
xlat
leave
dec
adc
jb
push
cwtl
fmul
sbb
daa
add
mov
bound
sub
cmp
out
inc
mov
push
lea
jne
loop
jo
jge
dec
cmc
and
test
mov
mov
fsubrl
and
jl
mov
nop
mov
shr
mov
pop
ficoms
mov
lods
xor
adc
into
adc
idivl
inc
xchg
cli
test
inc
nop
and
and
int
sahf
mov
scas
in
inc
or
ret
sbb
mov
ret
xlat
neg
and
lods
das
lds
push
push
jbe
aas
dec
popa
jnp
aam
and
fnstenv
inc
cmp
shl
ficomps
ja
sub
mov
pop
cltd
mov
mov
jo
and
pop
lahf
push
sbb
cmc
adc
out
pop
push
inc
ret
ds
addr16
test
repz
xchg
mov
aas
in
sbb
jge
dec
adc
xchg
add
pop
ljmp
notb
jg
icebp
movsl
rolb
icebp
sti
fwait
add
in
in
mov
push
inc
cmp
inc
adc
cmp
lds
daa
push
insb
pop
aas
push
mov
lds
mov
sub
add
out
mov
popf
xchg
fstps
cmp
push
push
jmp
mov
adc
out
cmc
sbb
jne
add
out
push
aas
ret
pop
jno
push
inc
dec
adc
inc
xor
jp
add
pop
test
rolb
add
inc
rcll
and
pop
pusha
sbb
pop
mov
inc
jl
arpl
fdivrp
mov
pop
rclb
ss
pop
mov
dec
push
xchg
adc
cmp
add
ss
shr
das
jl
xorl
dec
popf
xorb
xchg
sbb
mov
or
xchg
add
stos
pop
fcompl
fildl
sub
fisubs
pop
dec
mov
dec
lret
mov
add
repnz
mov
add
test
mov
pop
cmp
repz
mov
loop
cmp
mov
sahf
fadds
push
mov
mov
flds
mov
jae
hlt
mov
dec
adcb
icebp
push
xchg
negl
pushf
mov
out
cmpsl
mov
xor
ret
inc
pop
cli
pop
dec
dec
sbb
lods
nop
inc
jns
out
test
pop
stos
gs
nop
insb
mov
insl
popf
adc
sub
sbb
cmc
sti
stos
push
sub
mov
ds
adc
push
mov
mov
loope
cmp
sub
cli
mov
repz
mov
sbbb
inc
xchg
and
sarl
dec
inc
jno
jecxz
movsl
inc
test
jle
cmp
sub
loop
mov
and
lock
loop
cmpl
imul
out
sbb
jb
out
and
add
inc
ret
sub
fstl
mov
fs
inc
cmovno
je
fidivrl
orl
pop
inc
push
inc
ljmp
jecxz
cli
or
add
jne
jbe
test
inc
cmp
and
jns
inc
push
fistpl
insl
jo
sbb
sahf
into
aad
je
call
test
incl
ja
dec
or
push
push
cmpsb
fimuls
movsb
pop
addr16
aam
jg
cltd
sub
stos
xchg
and
inc
sbb
fsubrp
cmp
imul
je
daa
pushw
pop
xchg
subl
mov
dec
jp
sub
xor
jle
and
push
pop
or
addr16
movsw
shld
flds
popf
dec
sub
pusha
sbb
and
ret
adc
inc
add
xor
jnp
popa
xchg
mov
cld
data16
pop
xchg
mov
push
inc
aad
iret
popa
testb
je
xchg
test
inc
and
clc
cmc
std
jo
xchg
or
cmp
jne
jl
pop
call
into
loope
pop
or
andl
pop
pop
or
loop,pn
add
pop
fwait
sbb
dec
loope
in
add
dec
or
cmp
mov
mov
es
sub
inc
and
int3
sahf
pop
fs
fmull
jmp
jmp
test
xor
or
lea
push
icebp
adc
addr16
sub
cld
xchg
pop
pop
out
mov
add
scas
stos
jbe
mov
pop
mov
pusha
pop
push
sub
out
icebp
enter
sub
enter
loopne
dec
arpl
rolb
xchg
sti
xchg
cmp
and
sahf
clc
call
adc
and
mov
out
ret
insl
sub
je
or
es
lret
push
inc
mov
mov
movsb
mov
push
iret
rcrl
movsb
lret
mov
cwtl
jp
xchg
push
shr
shl
adc
leave
dec
sbb
scas
popf
mov
repz
push
push
mov
fst
lock
push
add
inc
lods
test
je
popf
sbbb
push
scas
mov
cmp
mov
movsb
sbb
sti
push
xor
adcl
into
jle
xor
pop
jp
adc
les
outsb
ret
or
bound
pusha
ret
sbb
and
cld
int
push
xor
cmp
mov
fnstcw
pop
adc
xchg
aaa
test
jl
push
rcrb
es
enter
push
cmp
pushf
repz
int3
jns
push
xchg
jae
test
pop
sarb
sbb
rcrl
push
js
andb
cltd
push
sti
sarl
adc
push
or
adc
mov
mov
shlb
jno
jo
pop
dec
shrl
xlat
shlb
les
mov
sarb
ja
push
ss
jge
jns
xchg
sarl
mov
loop,pn
add
test
sahf
test
add
cmp
cltd
sub
push
mov
das
insb
jnp
xchg
xchg
dec
popf
sub
cmp
mov
inc
insb
push
pop
xchg
jno
and
jge
push
loopne
stos
dec
ror
mov
seta
push
lcall
sub
test
nop
fidivs
inc
mov
cmp
andb
in
repnz
and
rol
adc
repz
fmulp
fcoms
add
decb
xor
sbb
push
iret
fcomps
inc
pushw
sbb
dec
jns
add
jle
and
fwait
jns
mov
xor
test
imull
adc
out
out
test
out
adc
leave
add
out
dec
jecxz
imull
les
mov
outsl
add
cmp
xchg
sub
pop
aam
push
stos
icebp
movsl
and
shrb
rcrb
and
inc
and
jmp
xchg
sub
mov
fnsave
xchg
pop
fnstsw
insl
sbb
clc
push
insl
sub
pop
xlat
testb
mov
sahf
sbb
int
mov
test
cmp
xchg
jbe
mov
xchg
and
inc
std
and
mulb
inc
addr16
js
xor
inc
sub
inc
int
push
pop
andl
loope
jne
push
adc
lcall
dec
push
out
jbe
loope
into
mov
push
enter
mov
test
out
and
inc
jne
nop
dec
or
out
mov
aas
mov
mov
call
cmp
jbe
pop
das
add
test
push
movsl
cmp
aaa
mov
adc
icebp
imul
adcl
in
pop
xchg
mov
pushf
adc
movl
adcl
xor
mov
scas
dec
push
pop
movsl
dec
pop
xlat
jge
je
adc
addb
push
jle
jmp
loope
mov
cmpsl
cmp
outsl
inc
les
mov
stos
jecxz
mov
xchg
js
mov
sbb
sub
divl
pop
lods
xchg
sub
or
in
push
pop
push
inc
test
cmp
dec
dec
test
mov
pop
add
cmpsb
sbb
adc
lcall
add
in
inc
xor
xor
inc
cli
stos
in
sub
fs
mov
arpl
mov
sbb
cwtl
and
in
cmp
cmovg
aas
lahf
cmp
mov
in
push
jbe
cmp
jns
adc
test
mov
rcl
mov
repz
gs
enter
jg
testl
ret
cs
mov
jmp
cwtl
das
lock
jne
inc
sub
js
fsubs
addr16
lods
popa
hlt
pusha
ss
adc
push
or
jb
mov
pop
or
add
dec
or
cmp
popl
jno
lock
mov
cld
mull
daa
insl
stc
cmp
push
nop
sti
cs
sbbl
or
and
pop
bound
pop
fdiv
push
hlt
dec
cwtl
lods
dec
or
jb
iret
sub
push
add
or
or
pop
sub
dec
push
out
shll
pushf
aad
jae
icebp
push
lods
xor
adc
xor
xchg
jg
inc
movsl
lds
add
xor
sub
inc
push
sbb
fsubrl
aam
xchg
repz
add
dec
jecxz
test
cltd
lods
xor
in
jbe
stc
mov
inc
jecxz
cwtl
dec
or
and
mov
push
jmp
scas
pushl
xchg
test
pop
adc
incl
dec
in
cli
popf
sub
shrb
loope
scas
push
push
xlat
popa
sbb
dec
pop
mov
ja
xchg
int3
imul
push
dec
mov
cmpsb
jmp
sub
mov
out
mov
lock
add
scas
inc
pop
mov
sbb
push
fxch
mov
outsb
push
adc
outsl
pop
push
push
rorl
pop
stos
in
scas
sbbb
enter
cmp
cmpsb
adc
sub
scas
inc
clc
or
rcl
xor
test
push
out
sub
pop
test
mov
loope
mov
jmp
lods
fsubl
icebp
jmp
inc
mov
enter
jnp
iret
loope
pushf
dec
mov
aas
mov
ss
mov
jne
es
lods
das
dec
dec
dec
jmp
dec
push
inc
out
fbstp
aaa
dec
jp
gs
xlat
sbb
js
pop
mov
dec
sbb
lret
and
sbb
addl
xchg
and
cmp
xchg
or
and
or
int3
clc
mov
or
jmp
jmp
push
or
adc
xchg
xor
dec
mov
ds
dec
cmp
jg
sahf
dec
dec
loop
fldt
xor
push
rolb
xor
push
cwtl
stos
mov
pop
mov
mov
sub
aad
pop
sti
fwait
roll
je
mov
xchg
add
push
dec
mov
push
inc
call
push
in
push
int
cltd
mov
jns
test
mov
cmp
xlat
iret
or
pusha
andb
fs
pop
xchg
test
popf
and
leave
sub
jae
sub
mov
scas
ja
jg
jns
in
xor
rcrb
adc
insb
fbstp
cwtl
in
xchg
and
lock
inc
push
fstpl
or
test
shrl
jo
push
ficompl
mov
popa
clc
popf
in
out
push
lea
mov
pusha
mov
or
addl
std
push
push
divb
imull
dec
ds
mov
lcall
mov
xor
adc
int3
jmp
xor
jp
imul
and
inc
test
xor
or
push
cmpsl
jg
push
jmp
or
cmp
iret
sub
fbstp
shll
test
cmpb
arpl
out
and
mov
lock
jb
xor
mov
xchg
or
mov
add
iret
hlt
std
daa
stos
or
shrl
ficomps
add
dec
in
inc
mov
insb
jle
inc
mov
push
jp
push
test
pushf
mov
cmp
not
ss
sbb
into
xorl
or
pop
addb
push
sub
into
inc
cmpsl
cwtl
cmpsb
cmc
lods
cmp
out
test
sbb
fimuls
leave
out
push
sbb
nop
sub
pop
pop
movsl
dec
or
test
or
mov
ret
sub
ja
mov
jp
push
inc
repnz
gs
fucomip
adcl
add
mov
sub
sbb
mov
dec
clc
mov
addr16
rorb
add
xor
adc
mov
pop
mov
or
dec
push
lds
xlat
decb
pop
lods
ljmp
in
testb
adcb
nop
lods
mov
out
or
repz
sub
push
push
mov
fmull
jge
pop
repnz
mov
xor
aaa
or
jne
fldenv
pusha
rcll
inc
push
inc
xor
addl
jbe
popa
or
cmpsl
mov
pop
das
pop
add
xor
fdivr
call
dec
xchg
or
mov
aad
stos
and
adc
jne
mov
jb
test
mov
or
addr16
sub
jecxz
lahf
out
add
lods
push
dec
mov
pushf
lret
aad
cmpsb
pop
push
aam
add
idivl
fnstcw
pop
notb
sub
pop
js
sub
inc
stos
xor
mov
adc
push
mov
push
push
fwait
mov
jne
cmp
xchg
ds
scas
mov
pop
sbb
mov
cmp
jno
lcall
cmpsb
icebp
push
sbb
mov
sub
inc
xchg
mov
mov
sub
jge
stos
daa
adc
test
pop
push
data16
cmp
cli
xchg
imul
jle
dec
loope
inc
outsl
xchg
or
jp
inc
mov
out
xchg
lcall
in
mov
outsb
in
push
jmp
inc
pop
insb
or
in
movsl
sbb
jo
in
aas
clc
add
jo
lcall
icebp
mov
enter
out
stos
in
inc
sti
pushf
xor
adc
ret
orl
and
cmp
sub
das
and
push
xchg
mov
enter
push
stos
sub
cmp
iret
test
js
ret
push
aam
cs
add
pop
imul
mov
push
leave
mov
jnp
sub
pop
and
cmp
aaa
data16
out
sbb
outsl
jnp
adcl
clc
xchg
push
push
mov
lds
stc
pop
iret
xor
call
or
cmp
andb
fmulp
or
inc
pop
mov
loope
arpl
and
std
in
push
insl
je
adc
repz
lds
lcall
dec
mov
push
inc
fst
nop
sub
scas
mov
and
push
dec
adc
sub
ss
dec
sbb
int3
lods
test
lods
or
int3
cltd
pop
sahf
lret
push
inc
hlt
sub
insl
js
lahf
ret
iret
mov
or
mov
rolb
pop
repz
subl
incl
insb
xor
jns
inc
push
loopne
lea
lret
sbb
shld
into
mov
ss
aam
pop
inc
pop
test
scas
mov
xchg
push
ss
mov
mov
mov
sub
jae
jmp
xchg
addr16
mov
mov
dec
mov
ss
shl
std
mov
lock
mov
fisttpl
xchg
inc
gs
pop
mov
fsubrs
adc
xchg
popa
mov
sub
mov
sti
jno
outsl
test
adc
es
or
fisttpll
push
inc
dec
roll
or
and
sub
or
mov
es
cwtl
xor
inc
push
aaa
pop
hlt
push
repz
and
xor
lods
test
push
or
push
in
insl
or
popf
jbe
push
dec
mov
lcall
ss
xchg
mov
cmp
and
lock
cmpsb
ja
lock
lock
mov
ja
push
inc
das
add
push
push
lods
push
sub
or
in
daa
xchg
insl
jo
ret
sbb
jl
je
js
sub
shrl
fdivs
inc
lock
add
mov
into
cmp
dec
push
scas
fwait
mov
xor
mov
ds
outsb
pop
mov
cmc
dec
aad
cltd
jb
gs
pushf
sahf
stc
push
cltd
mov
les
adc
pop
fnsave
es
push
stos
dec
cli
jb
es
pop
jae
dec
movsb
gs
mov
mov
ljmp
dec
sbb
sbb
sbb
call
mov
jo
popf
add
out
and
adc
pop
lahf
sub
icebp
lcall
or
addl
leave
adc
sbb
repz
cmpsb
sbb
pusha
push
les
ljmp
sub
jns
leave
jle
adc
daa
mov
or
pop
js
pop
add
push
repz
cwtl
sub
insb
sub
fisubrs
mov
mov
sbb
std
push
add
mov
and
fdivr
cld
push
adc
add
lock
repnz
mov
cmc
nop
mov
jl
aaa
subb
data16
js
cmp
or
lds
pop
dec
movsl
test
jbe
add
dec
in
mov
dec
mov
inc
ror
sbb
pop
or
es
test
lods
xchg
sbb
insl
or
push
xor
xchg
mov
cmpsb
jge
std
push
stos
mov
fnsave
test
cwtd
mov
xchg
mov
in
inc
lret
sbb
es
jge
and
lods
xchg
aaa
pop
mov
fmuls
adc
insl
mov
pusha
dec
pop
xchg
retw
pop
pop
xlat
pusha
mov
jecxz
test
sti
inc
xor
icebp
in
hlt
mov
rol
js
ret
push
mov
push
in
mov
enter
mov
and
js
in
and
xchg
xchg
aas
in
sub
lret
xchg
call
cmp
push
mov
lahf
test
ljmp
or
fdivrl
mov
movsb
xor
push
inc
mov
ljmp
cld
leave
es
insl
addl
dec
test
jg
jle
jmp
add
lock
jp
pop
sbb
jnp
jg
push
mov
out
subb
addr16
mov
mov
outsb
cmp
xor
pop
adc
cld
mov
ljmp
and
jp
imul
repnz
pop
mov
mov
xchg
stc
or
mov
push
or
lods
mov
loope
push
int3
xchg
rcl
pop
addr16
out
mov
notl
iret
sbb
cmp
iret
and
pop
mov
dec
in
xchg
fcomp
xor
sub
stc
and
sub
jbe
or
or
ret
mov
jns
clc
in
out
xchg
or
mov
mov
xor
sub
xchg
or
int3
mov
adc
js
insb
inc
fisubs
push
jo
fidivl
xor
in
jecxz
insb
lcall
push
es
and
iret
mov
cmpb
mov
xor
xor
xchg
cld
and
cmpsl
ficompl
in
pusha
or
and
outsl
push
sbb
xor
xor
hlt
pop
xor
jp
hlt
das
jge,pn
pusha
push
fcmovne
ret
inc
add
xor
cmp
sbbb
andb
lods
xor
loope
sbb
out
popa
adc
or
and
mov
popf
sbbl
or
fwait
cmp
push
inc
arpl
ljmp
dec
loopne
flds
es
mov
icebp
dec
or
adc
xchg
ja
xchg
add
popa
sbb
pop
test
pop
xor
in
or
sarl
loopne
mov
ljmp
rorb
test
xor
mov
frstor
push
push
aaa
into
adcb
mov
imul
mov
jb
enter
or
ljmp
lea
outsl
xor
cmc
mov
stos
aaa
xchg
mov
rol
fstps
lods
data16
xlat
lds
int3
rcll
mov
add
loope
decb
fcmovne
adc
cmpsl
ds
icebp
outsb
loope
inc
in
es
xlat
mov
lcall
icebp
sub
push
shl
cmc
mov
lods
pop
jnp
jo
sbb
add
sub
mov
addr16
cmpsb
out
or
sub
nop
fistpl
outsl
dec
out
sub
jmp
jp
in
out
pop
jnp
pushf
inc
ljmp
cld
xchg
in
int
add
jno
call
add
in
cwtl
cwtl
ljmp
cmc
fildll
insb
add
jo
add
inc
fisubl
outsb
insl
loopne
jg
out
stc
jne
popf
mov
ret
fstps
gs
cmp
jno
xchg
mov
inc
sbb
sahf
cmp
test
fs
fwait
jno
sbb
mov
lret
fsub
out
xchg
sahf
pop
ss
sub
data16
jle
jns
pop
inc
xor
xchg
mov
jno
cld
arpl
jns
adc
out
inc
sub
popf
in
inc
fyl2x
orb
jae
inc
xor
addr16
cmp
addb
inc
push
testl
push
sahf
in
jnp
mov
stos
out
jg
ja
jne
es
lock
pop
add
fidivs
and
test
into
loop
add
in
pop
mov
push
lret
movsl
xor
mov
int3
arpl
fidivrl
or
ljmp
pop
cltd
outsl
dec
push
mov
add
imul
lods
mov
adc
lret
dec
add
cmp
sbb
inc
or
filds
adc
xchg
arpl
ds
aaa
add
iret
scas
add
mov
mov
xchg
adc
add
add
daa
xchg
and
outsl
xorb
scas
in
cmp
movsl
xor
pop
fisubrl
out
pop
jge
pop
cld
jne
cs
mov
xchg
addb
fdivrl
cltd
inc
adc
insl
pop
xchg
and
imul
sbb
and
subb
ja
mov
into
cwtl
enter
in
addl
inc
lea
into
adc
sub
xor
cld
adc
xchg
lods
pop
mov
mov
xchg
test
mov
push
adc
test
xchg
mov
stos
mov
push
pop
shlb
sub
sub
sub
sbb
jo
lods
and
test
push
or
cmpsb
push
lret
popa
adcl
push
mov
gs
rcll
mov
aam
test
mull
mov
cli
and
pop
pop
mov
insl
aas
sub
pop
stc
out
xlat
lahf
int
inc
clc
add
dec
js
je
cli
movsb
push
in
nop
lcall
insb
idivb
sub
cmp
push
xchg
loopne
jecxz
sarb
push
popf
lock
aas
mov
int
test
fistl
cmp
daa
xchg
or
or
test
jmp
mov
je
mov
gs
xor
mov
xchg
and
xchg
sahf
add
lahf
and
cmpl
out
inc
cmp
mov
jg
and
xchg
sbbb
fldt
movsl
enter
sub
scas
xchg
dec
add
and
add
jmp
rcll
mov
dec
sti
out
jmp
rcrl
dec
add
mov
ss
xor
cmp
mov
les
int
lea
dec
mov
shr
adc
xor
stc
push
adcl
mov
popa
movsl
cmp
mov
arpl
ret
rcll
add
xchg
popa
xor
jmp
or
popa
fst
xchg
orl
mov
out
dec
inc
aam
call
inc
jmp
adc
nop
lock
out
cmc
mov
cs
negl
ljmp
repnz
pop
push
frstor
push
adcl
push
sub
sbb
hlt
sbb
dec
movsb
xor
rol
clc
nop
outsb
jno
mov
mov
sub
pop
add
outsb
loope
das
and
pop
pop
push
std
add
push
int3
mov
jl
mov
cmc
sarl
cld
xchg
daa
sbbl
outsl
bound
lret
and
push
fld1
xchg
test
frstor
mov
loopne
xchg
jg
jecxz
repnz
in
test
addr16
dec
adc
jle
int
sbb
or
and
sub
cmp
scas
ds
daa
jmp
mov
pop
mov
hlt
call
add
das
in
sbb
cli
int3
ret
sbb
jo
xlat
das
pop
push
fmull
and
push
jg
lcall
cmc
xchg
jo
or
popf
mov
mov
mov
push
push
out
xor
xchg
or
ret
or
pushf
dec
add
into
xchg
jns
mov
out
and
lds
add
xor
and
sbb
push
in
in
mov
or
stos
inc
jb
add
loopne
je
or
and
jne
add
cmp
in
test
rcll
sbb
jg
test
pop
inc
sub
cltd
pop
jo
xor
pop
mov
mov
out
sti
push
movsb
sub
jae
inc
loopne
js
stc
nop
pop
mov
xchg
insl
popa
pop
jmp
out
push
movsl
mov
stc
push
adc
aam
mov
sub
add
pop
scas
jmp
mov
gs
inc
jne
negb
shll
add
cmp
jg
and
sub
pop
xchg
stc
movb
or
scas
cli
cmp
inc
sbb
inc
sub
xor
sti
push
sub
mov
or
push
push
nop
popa
jle
xlat
in
shll
adc
xlat
pop
mov
lret
cs
push
inc
repnz
jno
push
addl
push
inc
dec
mov
test
or
das
add
neg
mov
imull
shlb
push
or
and
loope
push
inc
push
mov
dec
pop
stos
add
inc
jp
sub
inc
shlb
adc
cltd
std
dec
dec
push
imul
mov
shlb
inc
adc
stc
mov
fwait
push
test
pop
das
in
push
stc
mov
jecxz
sbb
jl
fisubrs
mov
js
mov
enter
scas
and
movw
ss
lea
mov
sbbl
xchg
loope
sbb
push
shll
push
jb
ljmp
fs
xchg
cs
xchg
inc
sti
or
inc
in
aas
mov
dec
stos
lock
sub
pop
shll
movsb
mov
pop
fstpt
out
mov
push
xor
fwait
das
scas
xchg
lret
popa
les
push
cmp
call
decb
mov
movsl
mov
adc
jo
clc
data16
addr16
pop
fdivrs
fsubl
aas
aas
jge
mov
pop
and
int3
arpl
or
jl
inc
sub
repnz
aad
aas
aam
js
outsl
sub
inc
dec
je
mov
cmp
mov
clc
pop
adc
xor
roll
xchg
inc
loop
pop
jp
enter
jo
fwait
push
and
das
ds
sahf
outsl
add
jo
mov
mov
push
mov
in
inc
jnp
outsb
fwait
imul
pop
leave
adc
addr16
test
mov
cmc
shlb
push
call
jne
jg
cli
pop
push
inc
add
fdiv
sahf
xchg
sbb
jecxz
mov
cld
jge
cmp
lds
ds
subl
and
clc
call
fwait
sbb
ss
xchg
push
daa
lea
adc
push
dec
test
sub
daa
filds
jno
scas
pop
cmpsb
loopne
cmp
stc
fnsave
notl
jns
jge
mov
testb
adc
fimull
jmp
xor
imul
adc
push
iret
jmp
cmp
ret
insb
jns
mov
sub
mov
sti
js
mov
cmp
mov
enter
pop
push
push
jae
lds
pop
out
mov
imul
lods
and
mov
js
dec
leave
int3
cmp
fbld
je
mov
adc
inc
mov
mov
fisubrl
lahf
adc
and
push
sub
dec
lds
push
aam
mov
lds
popa
push
add
int
out
jge
mov
stos
test
adc
pop
ljmp
rcrb
ljmp
sub
je
mov
std
lret
sbb
pop
es
inc
push
mov
xchg
xchg
mov
mov
shll
mov
iret
inc
inc
aaa
mov
inc
jecxz
icebp
mov
lret
push
inc
addr16
and
jmp
push
lods
clc
or
call
adc
lods
sub
pop
rorl
lret
lods
push
out
mov
shlb
push
pop
les
lds
cmp
aad
xchg
fadds
inc
jg
repz
pop
repz
cpuid
adc
shll
adc
ljmp
xchg
mov
aaa
stos
scas
and
jg
ret
pusha
sub
out
dec
fcompl
out
jbe
gs
in
mov
imul
xchg
mov
arpl
stos
xor
sbb
mov
mov
mov
fnstcw
out
pop
xchg
push
adc
xchg
insl
fidivs
ja
inc
insl
xor
outsl
test
lret
addr16
jno
or
stos
xor
xor
jno
out
repnz
xchg
das
adc
das
add
fldcw
dec
repnz
andb
dec
mov
bswap
test
lods
stos
inc
mov
inc
cmpsl
add
lret
bound
inc
mov
adc
inc
inc
test
int3
add
es
jb
ret
ja
xor
cmp
adc
push
js
scas
and
or
movsl
cmp
jae
testl
lea
or
mov
sbb
cmp
and
je
sub
lret
les
mov
mov
lods
scas
mov
mov
sbb
lret
outsl
cmp
lods
mov
xchg
fildll
inc
cld
addr16
lods
icebp
and
mov
and
push
rcl
or
push
pop
stos
dec
xchg
aad
out
cld
cmpsb
int
sbb
pop
dec
fists
insb
or
das
repz
xchg
addb
mov
sbb
inc
pushf
je
push
movsb
jl
push
scas
add
fnstenv
pop
dec
and
filds
mov
pushf
dec
in
data16
mov
bound
adc
push
jecxz
push
les
call
cmpsb
xchg
mov
lods
add
scas
out
ret
std
cltd
or
icebp
test
adc
scas
xor
popf
dec
popa
fdivrs
aaa
fldl
xor
fbstp
arpl
popf
push
out
xchg
das
inc
repnz
jbe
aam
lea
mov
pushf
das
pop
jle
sub
sub
fstl
sbb
sbb
jns
adc
cvtss2si
icebp
fwait
fwait
mov
movsl
fcoml
mov
in
lods
xor
xor
shlb
xor
das
cmp
movsb
fisubrl
sub
fdivrs
in
and
xchg
sub
int
and
push
popf
mov
insl
dec
cmp
repz
outsl
cli
fwait
popa
cld
mov
push
call
call
lret
jb
out
shrb
push
pop
adc
xchg
aaa
aas
push
adc
push
jae
rcll
xchg
inc
mov
clc
adc
mov
and
add
lahf
jge
lods
add
sarl
imulb
mov
out
ss
test
sahf
push
arpl
lcall
mov
je
xor
xor
inc
push
or
or
inc
call
scas
addr16
sbb
imul
push
jg
or
je
std
cmpsb
mov
mov
or
imul
pop
lahf
push
int
jbe
aaa
push
mov
jbe
cwtl
loop
loopne
in
pop
ja
mov
out
cli
push
into
pop
inc
xchg
jle
shlb
fldenv
lods
ds
dec
lret
jae
popf
xor
nop
dec
xor
fsubs
mov
xor
lret
push
pop
rcrb
mov
fcmovu
je
jle
cld
scas
cli
decb
pop
arpl
rcrl
mov
arpl
fistps
xchg
sub
sbb
push
jae
loope
sbb
ss
in
cmpsl
ds
lock
bound
and
cmp
inc
nop
repz
pop
stos
nop
inc
fcoml
jle
and
jb
push
dec
mov
lret
and
loope
arpl
loope
leave
and
lods
push
xor
test
jp
fsubrl
jp
arpl
push
cmpsb
mov
xlat
xor
pop
arpl
daa
pop
push
xchg
cmp
lahf
iret
jb
lret
test
data16
push
and
arpl
adc
not
mov
and
cmp
cmp
insl
cmp
mov
daa
lret
lret
movsl
sub
pop
out
jmp
lods
scas
insl
jno
cmpsb
mov
inc
push
dec
scas
inc
inc
and
inc
mov
adc
loop
ss
push
add
mov
mov
aam
inc
sub
test
pop
jl
test
jo
into
mov
mov
push
jmp
ret
mov
aam
dec
fcompl
add
mov
cmp
push
dec
push
mov
clc
in
inc
or
sub
rorb
cmc
fstl
test
and
xchg
mov
inc
fcomps
es
shr
arpl
stos
in
cmp
fistl
mov
shrl
xchg
rcrl
mov
xchg
mov
jmp
jne
xchg
out
fwait
xor
jb
dec
pop
ja
push
movl
xlat
repz
push
in
pcmpeqd
ficompl
xchg
sub
call
pop
in
xchg
sub
pop
cmp
and
cmp
jecxz
jnp
lea
sbb
jbe
mov
dec
mov
pop
loope
mov
dec
lods
iret
cld
xchg
add
sbb
mov
jl
int3
adc
dec
adc
neg
nop
movsb
xchg
sub
in
rclb
push
es
out
push
rolb
push
test
cltd
and
idivl
and
jl
sahf
mov
in
cwtl
imul
pushf
mov
inc
gs
cs
push
lahf
xor
pop
mov
jmp
xchg
pushf
cmp
mov
cmp
xor
out
insb
popa
and
xor
cli
pop
addl
popf
addr16
pop
in
xor
sub
pop
sbb
xor
pop
jp
cmp
push
imul
loop
cmpsb
dec
pop
call
cmp
lcall
add
push
lods
loope
shlb
dec
jge
ret
mov
jne
pop
pop
dec
mov
add
rorl
fnsave
inc
inc
cs
mov
fnstcw
cmc
adc
xor
push
push
call
adcl
cld
or
out
mov
frstor
sub
enter
mov
pop
imul
xor
lcall
aad
aaa
ljmp
xchg
jle
icebp
mov
jns
nop
xor
jg
jecxz
and
or
pop
mov
loopne
mov
daa
inc
jnp
jmp
sub
lods
add
fstpt
pop
out
aaa
fnstcw
imul
inc
outsb
sti
out
mov
cltd
ret
aaa
dec
dec
out
shl
mov
aad
adc
pop
push
pop
clc
inc
jl
xchg
mov
pop
jbe
scas
or
pop
gs
jg
dec
aad
jl
icebp
popa
push
dec
pop
mov
dec
pop
shlb
or
jg
dec
hlt
scas
pop
sub
shlb
in
std
jg
inc
push
mov
inc
in
imul
scas
stos
fwait
sbb
rorb
xor
gs
xchg
mov
stc
mov
into
test
in
ret
arpl
inc
sahf
xor
adc
xchg
outsb
mov
and
imul
ss
jb
insl
cmp
dec
mov
lahf
mov
out
inc
pusha
iret
and
fwait
pop
test
inc
lea
jge
push
sub
imul
adc
scas
call
inc
ret
addl
cmp
mov
fstl
rep
jge
data16
inc
pop
cmp
mov
in
push
sarl
insb
mov
xchg
scas
inc
jp
xchg
dec
xchg
in
inc
dec
xchg
testb
or
and
cld
aas
or
ficompl
sbb
loop,pt
insb
icebp
adc
mov
pop
adc
ffreep
pop
cmp
xchg
cmp
filds
add
test
or
imul
push
push
cmp
adcl
inc
mov
fistl
push
inc
or
pop
inc
push
mov
scas
popf
push
movsl
cmpsl
movsb
or
mov
push
ja
push
movsl
orb
repnz
xor
jno
xor
sub
xor
cmp
data16
lret
std
and
xchg
loopne
pushf
sub
jp
int
mov
int3
xchg
adc
lock
daa
clc
mov
jp
mov
std
push
sub
test
sti
push
out
sub
fbstp
loope
adc
nop
loopne
adc
lcall
pop
add
test
push
or
movsb
gs
jp
scas
cmpsl
adcl
outsl
ss
imul
add
cmp
hlt
mov
xor
fmul
mov
fcoml
mov
in
xlat
cmp
add
bound
loop
test
sbb
push
inc
mov
mov
fists
bound
lcall
add
mov
and
in
loope
dec
in
fldenv
sarl
aas
sub
jecxz
xlat
lcall
sub
adc
dec
js
mov
mov
fnsave
mov
jp
and
jg
xchg
push
pushf
enter
stc
in
cwtl
cmp
sub
pop
mov
sbb
push
ljmp
cmc
jl
xchg
lods
push
test
mov
sahf
mull
cltd
sbb
mov
add
cmc
daa
call
dec
inc
push
mov
push
stos
stos
mov
lret
aam
and
scas
rorl
lret
sti
xchg
rcrl
loop
inc
hlt
mov
fmulp
lods
inc
lods
cld
push
pop
sbbl
sarl
xchg
cltd
push
mov
out
mov
adc
add
jo
les
add
mov
cmp
arpl
popf
jb
test
and
cmp
xchg
fs
je
lods
adc
into
fucomp
sbb
mulb
inc
sub
inc
inc
inc
filds
testb
dec
adc
jle
inc
ja
insb
lods
cmpsb
add
adc
cmp
lds
or
repz
insl
fstpt
push
fs
bound
ds
scas
out
sbb
and
out
jle
scas
inc
gs
les
int
push
fcompl
push
in
xor
test
movsb
push
mov
aas
repz
stc
push
fucomp
push
hlt
sub
out
adcb
rol
push
in
push
outsl
dec
fistps
aad
pusha
divb
lea
jne
jne
mov
dec
loopne
sbb
out
sub
incb
mov
mov
xchg
pop
fstl
std
pusha
fs
int3
ret
or
push
mov
fmuls
psubd
push
hlt
rcll
lcall
and
xor
xor
or
push
popf
and
mov
iret
and
int3
pop
lret
mov
cltd
std
adc
mov
jo
dec
pop
jnp
popa
jns
subb
add
xchg
lcall
pop
cmp
jecxz
les
or
mov
pop
popf
arpl
sahf
cs
jmp
cmp
pop
dec
and
fs
das
jmp
pop
push
cmpsb
sbb
pop
and
aaa
xchg
outsl
in
mov
dec
movsl
jmp
cmc
mov
hlt
mov
imul
test
mov
xchg
movsl
popf
jb
mov
mov
jo
test
push
cs
enter
pop
outsl
mov
mov
stos
mov
adc
cmc
fcompl
inc
pop
fs
jecxz
popa
push
jb
mov
mull
and
sub
inc
inc
int
mov
shr
jnp
in
push
fcmove
jnp
add
repnz
addr16
xor
add
push
cwtl
and
test
push
dec
pop
pop
xor
out
lret
pop
testb
jge
roll
std
call
in
adc
stc
add
cmp
std
shl
xor
add
jecxz
fcoms
movsl
xor
es
pop
scas
cltd
nop
fmulp
test
dec
xchg
adc
mov
inc
insl
adcb
push
dec
addb
cmc
dec
jecxz
sub
sbb
xchg
subb
repz
push
test
push
pop
popf
push
hlt
faddp
pop
out
hlt
loop
or
cmc
lods
inc
push
pop
sub
jbe
cmc
cwtl
jnp
js
jb
sti
out
popa
scas
inc
or
dec
fistps
fidivl
das
jo
and
add
or
push
mov
jo
mov
jne
dec
fldcw
cmp
xchg
imul
icebp
pop
and
ret
pop
repz
jb
mov
mov
rorb
call
rol
xor
push
xor
pop
cltd
imul
lods
aam
fwait
push
bound
leave
mov
sub
dec
out
or
test
mov
sbb
imul
repnz
test
mov
jle
fcomi
adc
or
mov
xchg
fdivl
movsl
sbb
cwtl
lods
push
mov
or
xchg
outsl
adc
stos
cmp
adc
pop
lret
lds
push
std
loop
scas
push
cmp
pop
fwait
dec
pop
push
cli
inc
jp
dec
loope
adc
sarb
push
xor
mov
and
add
sahf
das
data16
cmc
cli
mov
test
or
ds
sti
pop
cwtl
pop
xor
out
xor
mov
pop
rcrl
inc
ja
jb
ficoml
cltd
push
fwait
std
xchg
or
imull
cmp
add
add
mov
in
inc
aas
ret
pop
add
test
setge
mov
cwtl
es
call
fnop
cmc
addb
adc
xchg
repz
sbb
lods
dec
fbld
into
mov
xor
sbb
xchg
arpl
int
cmc
ja
push
push
ljmp
lock
adc
andb
insb
std
sub
pop
push
push
or
jg
xchg
shlb
xchg
pusha
shl
xchg
imul
stc
shlb
inc
push
imul
lret
mov
shrl
add
adc
cmpsl
cs
jne
jae
pop
test
inc
fdivrs
popa
outsl
loop
dec
mov
lods
and
shll
mov
cmc
leave
add
jae
into
or
imul
lock
lahf
sub
scas
inc
hlt
fisubs
mov
mov
fstpl
xchg
push
mov
xor
mov
pop
cltd
mov
ret
ja
xchg
imul
jne
or
in
lret
xchg
sahf
jge
push
sub
aas
adcl
adc
int3
jae
repz
mov
idivl
jae
jmp
adc
inc
add
cmp
dec
pop
sti
push
gs
dec
mov
std
loop
push
xchg
dec
out
in
bound
shl
repz
jecxz
jmp
jge
xor
xor
mov
stos
test
nop
jae
scas
and
std
mov
testl
cltd
lds
lock
andl
in
shrb
popa
xchg
push
pusha
imul
lods
movsl
icebp
sub
imul
mov
mov
sbb
sbb
lds
stc
cmpsb
sarb
clc
mov
or
inc
subb
pop
sbb
aad
push
cmp
inc
rcrl
jl
pop
mov
mov
int
int3
shl
enter
inc
mov
sti
jp
testl
cmpsb
sti
das
or
xchg
mov
ret
lahf
push
out
loop
lea
popa
cmpl
cmp
imul
push
mov
out
ret
inc
loopne
inc
adc
popf
aad
sarl
push
mov
enter
loopne
nop
push
daa
std
out
fidivrs
setae
loopne
cmp
leave
pop
push
mov
cmp
out
push
cmpsb
repnz
ficoms
mov
in
mov
scas
mov
out
outsb
xchg
pop
hlt
add
ds
cmpsl
imul
aam
or
imul
lods
js
repz
sti
or
mov
leave
pusha
dec
in
jecxz
test
adc
out
imul
out
cld
pop
mov
sbb
dec
push
xchg
sbb
jae
add
shlb
and
fstps
add
sub
movl
mov
adc
xor
sbb
mov
and
inc
lret
cmpsb
mov
int3
cmp
mov
fadd
pop
mov
hlt
jecxz
out
shll
sti
cwtl
fidivrl
frstor
andb
xlat
mov
adc
adc
push
and
jbe
jmp
dec
or
mov
mov
lahf
jb
adc
rcr
jg
aaa
hlt
push
mov
jnp
and
mov
sub
pop
stos
stos
in
int3
xor
leave
xchg
add
fistpl
ret
inc
sbb
stc
inc
test
cmp
fidivs
jb
movsb
mov
pop
popa
out
arpl
lret
adc
mov
push
jae
aam
insb
sahf
jge
ret
repz
xor
cwtl
adc
add
loopne
imulb
ja
xor
adc
test
scas
fst
inc
enter
push
popf
lcall
jns
mov
outsl
add
sbb
test
out
pop
mov
scas
and
repnz
jmp
xor
push
or
push
pop
out
jl
movsb
cmp
in
xchg
push
xchg
ret
mov
lods
aad
ficoms
cli
jmp
or
mov
jge
ljmp
dec
int
out
adc
xchg
dec
xor
mov
mov
test
jge
insb
jle
jp
pop
xchg
ds
adc
inc
adc
jmp
xchg
mov
dec
insb
add
mov
inc
push
adc
push
lea
add
bound
cmpsb
cmp
imul
push
std
aas
in
sti
xchg
cwtl
insb
adc
sbb
subb
adc
stc
cltd
push
lret
pop
mov
jge
cmp
pop
mov
xor
sub
push
sbb
je
jb
dec
cltd
push
push
xchg
leave
int
lahf
adc
pop
nop
mov
xor
fwait
xchg
int
fdivrl
or
sbb
punpckhdq
add
sub
lock
pop
adc
aad
lahf
popl
pop
in
xchg
scas
loop
insl
jb
in
mov
cmp
pop
and
loop
out
dec
in
out
std
ficompl
pop
inc
in
mov
popf
push
movsb
movsl
in
xchg
dec
dec
mov
out
dec
loope
cmc
inc
push
sub
or
fwait
outsl
inc
adc
push
xchg
divb
or
ret
xor
hlt
ficomps
scas
pand
test
cld
ja
or
faddl
test
inc
aad
leave
fucomi
ret
fsts
and
xchg
das
xchg
lcall
cmpsl
loope
rcrb
imul
add
popa
jno
imul
xchg
outsl
push
lret
aam
out
fistl
ss
movsl
rolb
xor
mov
mov
cmp
js
sbb
xor
daa
dec
cmp
lcall
mov
popa
std
mov
adcb
sub
imul
gs
jne
xor
sbb
mov
push
iret
data16
arpl
jl
clc
ss
or
popf
push
add
add
jmp
cmpsb
xchg
sub
push
jno
fmull
dec
js
fdivrs
iret
sbb
inc
fildl
pop
mov
xor
push
cmp
push
sbb
stos
adc
mov
push
jl
pop
scas
js
jmp
mov
dec
call
push
sub
pop
fisubs
aam
inc
mov
jnp
fidivrs
dec
push
sub
mov
adc
scas
sub
xchg
inc
jae
std
jp
mov
jl
xor
sbb
test
stc
fidivrl
mov
iret
out
jne
jno
cli
pusha
fldenv
bound
lea
push
je
push
and
jne
inc
fnstenv
mov
pop
bnd
int
stos
sbb
orl
in
cmpsb
inc
xor
les
sbb
jns
mov
out
push
fstl
cmp
std
and
xor
jmp
iret
xchg
loope
mov
mov
aas
out
stc
push
lock
scas
js
out
lcall
push
int
ljmp
mov
pop
and
xchg
sbb
aaa
sub
fwait
test
dec
mov
arpl
push
jo
inc
jno
ja
jmp
ja
dec
inc
fcomps
jo
xor
xchg
sub
sbbb
repz
aas
popf
push
mov
mov
test
lea
loop
out
cmp
clc
adc
and
lahf
aaa
insb
popf
xchg
ljmp
not
lret
inc
adcb
adc
adc
inc
and
pop
and
roll
sbb
in
sti
idivl
idivb
into
das
lret
cmp
push
push
adcb
mov
imull
mov
jmp
jo
fnsave
push
pop
mov
repnz
fcomip
clc
lcall
loopne
leave
xor
and
dec
dec
inc
aas
dec
pusha
js
xchg
sbb
and
orl
cmp
mov
popf
addr16
std
faddl
fldl
hlt
push
inc
cmp
inc
jmp
sbbl
aad
inc
rclb
cmp
outsl
push
arpl
rcl
icebp
adc
xchg
adc
xor
push
add
clc
int
jge
ds
sbb
movsl
sub
sub
push
nop
jmp
test
hlt
lds
aam
incb
sub
pop
xor
lock
sub
pop
outsl
sub
loope
cmp
pushf
scas
pop
imul
sbb
mov
in
and
shr
jecxz
pop
jo
call
sub
and
insb
add
gs
addr16
aam
jne
les
cmpsl
dec
movl
sbb
cmpsb
xor
js
ret
fnsave
add
jns
push
mov
out
movsl
pop
cmpsb
dec
out
bound
xchg
repz
push
mov
shrl
push
mov
fldenv
mov
mov
mov
repnz
inc
fldt
stos
dec
test
loopne
xor
mov
insb
adc
jne
or
push
jge
or
pop
sub
jne
mov
in
xchg
inc
pop
mov
cwtl
sub
shll
xchg
sbb
in
fildl
stc
repz
sbb
mov
or
cmp
mov
mov
jecxz
cmpsb
enter
bound
rcrb
ss
xor
pop
mov
xchg
mull
cmp
rcl
inc
test
outsb
das
cmpsb
aam
sbb
jmp
inc
fwait
add
sahf
sbb
call
inc
shrb
inc
int
and
xlat
mov
jmp
push
inc
jge
inc
mov
incl
orb
inc
jb
cld
pop
cs
inc
std
jns
pop
mov
cltd
pop
fistps
mov
leave
js
mov
popf
lcall
add
ja
sbb
sbb
sbb
insb
mov
inc
popa
mov
hlt
xchg
lret
mov
push
push
adc
leave
lcall
ret
hlt
sbb
int
push
mov
push
push
pop
scas
subb
mov
repz
push
fs
movsl
jge
xlat
or
aad
je
fwait
or
cmp
divl
cld
inc
inc
xlat
pop
lahf
mov
inc
popf
popf
dec
xor
xor
sub
out
pushf
jnp
dec
mov
sub
xor
pop
das
aad
dec
pop
rclb
xchg
movsl
cs
ljmp
pop
mov
andl
fcomip
dec
imul
repnz
stos
aam
lock
stc
and
stc
nop
test
ret
push
mov
in
aad
cltd
std
lcall
or
out
mov
orl
or
push
mov
lret
stc
out
bound
sarl
add
mov
push
inc
int
fisubs
addr16
movsb
inc
fucom
dec
aas
movsb
scas
xchg
lcall
cmp
mov
arpl
ds
nopl
and
cwtl
lahf
insb
insb
add
inc
negl
mov
mov
jecxz
cmpsb
std
xchg
add
cmpsl
jbe
mov
mov
xchg
jns
push
push
test
push
mov
and
repnz
rcl
adc
push
out
sub
repz
mov
icebp
imul
arpl
popa
ds
mov
imul
dec
loope
daa
mov
cs
mov
les
ret
jo
shlb
adc
xchg
add
pop
jno
sub
pusha
insl
mov
and
push
jne
inc
sub
imul
xor
and
cmp
test
push
push
popf
ja
stc
int
fcomps
dec
pop
or
jns
aaa
xchg
push
mov
jbe
nop
movsl
inc
ljmp
jno
jl
dec
mov
sub
push
sti
sbb
imul
or
mov
sub
jge
sub
cmp
add
cld
repz
sbb
mov
imul
out
jnp
jge
pop
push
stos
and
orb
dec
mov
leave
sub
bound
inc
or
lock
sbb
sub
and
xor
imul
mov
jp
jp
fbld
sub
bound
lret
xor
cmpsb
lahf
inc
cmp
jp
mov
daa
aad
popl
dec
sbb
rorb
mov
repz
inc
shll
jmp
sbb
movl
bound
bswap
and
aas
mov
ss
push
ss
test
test
test
jg
mov
mov
push
leave
pop
sbb
jo
dec
pop
mov
cmc
xor
cwtl
mov
outsb
push
mov
loopne
or
dec
mov
mov
push
fwait
inc
lcall
push
rcrl
loop
into
scas
lods
add
lea
adc
cmpsl
pop
fcmovne
lcall
lcall
pop
insb
jns
sti
outsb
pushf
js
dec
ret
test
cltd
aas
pop
pusha
jl
loope
sub
dec
mov
dec
sub
hlt
cmp
hlt
xchg
dec
mov
fldt
xlat
mov
xor
jnp
stos
cmp
and
mov
int3
pop
inc
pop
xlat
in
sbb
xchg
sub
cmp
pop
in
addl
outsb
daa
aad
in
jnp
xor
sbb
clc
cmp
aas
mov
xlat
dec
add
shlb
inc
lea
pop
cmp
scas
push
repz
or
mov
sub
pop
sub
cmp
lods
jp
mov
les
mov
in
pop
ret
and
stos
call
xorb
stos
jbe
fstpl
dec
push
stc
test
popa
and
icebp
test
dec
pop
insl
add
jg
mov
jae
sahf
bound
std
inc
stos
cs
inc
push
lea
dec
jb
mov
ret
mov
jg
lds
inc
andl
scas
cmc
mov
pusha
jae
js
fcmovnbe
fidivl
xchg
call
mov
mov
addb
std
idivl
in
jne
mov
enter
dec
cmpsl
jecxz
mov
lock
push
dec
jg
data16
aam
push
pop
int
arpl
push
xchg
inc
pusha
dec
mov
in
pop
pop
jp
into
mov
rcrb
xchg
loope
adc
adc
lret
pop
sbbl
mov
hlt
out
mov
lock
mov
or
cwtl
xchg
or
and
mov
iret
push
cltd
int3
mov
addr16
loopne
and
adc
and
inc
and
mov
lea
scas
mov
xchg
fnsave
insb
push
mov
test
lock
test
iret
das
arpl
in
or
jbe
aaa
jl
imul
pop
repz
mov
movsb
mov
sub
cli
pop
repnz
rsm
call
std
scas
loopne
repz
inc
inc
or
popa
xor
sub
rep
add
aas
inc
mov
nop
cmp
jmp
sbb
jns
cltd
mov
lret
sahf
sbb
dec
addr16
cmp
test
int
jp
mov
test
mov
dec
loope
pop
push
je
int
imul
mov
addl
aas
out
push
and
loopne
jns
pop
addr16
insb
call
fcmovb
or
lods
inc
rcr
call
xor
or
shll
xchg
jbe
lds
adc
idivb
insb
stc
ja
push
xor
pop
jmp
or
cmp
pop
dec
or
inc
or
mov
cmp
add
push
shl
shrl
pop
mov
ficompl
or
adc
je
data16
outsl
jmp
rcr
pop
aam
xor
arpl
pop
out
inc
rolb
jecxz
xchg
and
sub
ret
push
mov
push
lods
mov
jmp
or
mov
jnp
sbb
jmp
jo
push
sbb
xchg
fsubrs
mov
mov
in
sub
sbb
aam
adc
test
popa
out
jo
dec
push
lods
and
pop
sub
push
lock
aas
cmpps
cli
pop
fisubrs
movsb
mov
add
push
xor
ss
pop
adc
jne
sbb
nop
pop
inc
cld
xchg
cmp
ret
push
fisttpll
sarl
aad
test
mov
inc
adcl
or
das
push
sub
jb
outsb
cmc
repnz
fcoml
test
daa
mov
fdivr
ja
imul
mov
sbb
ds
fidivl
add
mov
and
out
aas
loop
adc
mov
clc
ljmp
dec
mov
pop
push
stos
dec
test
sbb
ljmp
xor
cwtl
out
xor
mov
fidivrs
call
setle
dec
jb
jg
mov
or
lods
push
cmp
sti
dec
adc
lods
andb
sub
jo
xchg
push
std
sbb
sarl
lods
int3
jns
lock
in
imul
mov
mov
push
mov
adc
lods
xchg
aad
pop
into
pop
shl
jge
es
dec
mov
jne
xchg
repz
mov
xchg
lods
daa
mov
push
outsl
ret
mov
cld
addr16
movsb
cmp
pusha
add
in
fisubl
mov
push
cltd
arpl
fbld
jbe
pop
in
push
lret
popf
fnstcw
adc
dec
mov
movsb
aam
push
xchg
jmp
out
jne
pop
sahf
faddl
push
mov
sub
mov
push
adc
push
adc
xor
aad
jmp
into
dec
das
jl
add
mov
into
mov
jg
stos
lret
cltd
in
nop
dec
scas
stos
mov
jp
add
jl
adc
lods
sti
cmp
push
jecxz
mov
push
lcall
mov
in
mov
mov
push
adc
push
mov
pop
data16
or
jo
dec
sub
cld
push
inc
test
dec
inc
in
xlat
dec
loop
hlt
sbb
mov
and
outsb
xchg
cs
lods
repnz
xor
xlat
mov
inc
inc
ret
ja
inc
fnstsw
fsubr
popf
inc
and
add
cltd
pusha
and
ds
pop
sbb
in
sub
sub
lcall
xor
js
push
mov
pusha
repz
test
subb
lcall
adc
outsb
cmp
jnp
data16
les
inc
mov
cmp
xchg
test
faddl
fwait
into
pop
or
cwtl
dec
pop
jl
ficompl
or
adc
rorb
imul
repnz
ret
sti
jo
mov
dec
xchg
pop
mov
ficompl
mov
sbb
jbe
dec
fdivr
mov
add
insl
fucompp
jae
pusha
mov
xchg
jb
insb
movsb
xchg
clc
stos
leave
xchg
xor
jb
daa
sub
add
mov
pop
jnp
xor
xor
push
sti
shrb
mov
dec
cmpsb
clc
jns
jne
jmp
test
out
pop
push
pop
xor
lds
rorl
cmp
rclb
sub
mov
sub
rorl
test
shll
pushf
xchg
lret
enter
inc
fnstenv
pop
xchg
test
mov
sub
int
ljmp
dec
jge
cmp
inc
mov
rcll
aas
mov
andb
adc
mov
popa
cmp
rcr
lea
mov
in
push
mov
mov
mov
sbb
popa
push
fmull
pop
ret
add
out
leave
cli
pushf
push
in
push
js
inc
outsl
out
cmp
xor
in
fdivl
sbb
ja
and
insb
pop
jbe
mov
sahf
jg
mov
sbb
cs
xchg
sub
push
dec
test
mov
insb
mov
arpl
sub
insb
cmp
sbb
mov
stos
jne
test
arpl
sub
arpl
pop
push
clc
xchg
lods
ljmp
pushf
cli
push
nop
loope
adcl
scas
pop
cmpsb
mov
pop
call
mov
push
push
out
cmp
xlat
cmc
dec
or
repnz
insb
jle
fdivl
loopne
mov
nop
pop
aas
repz
out
lods
sub
inc
mov
jmp
cmp
mov
xchg
movsl
popf
fnstenv
mov
jl
add
popf
sbbb
pop
stos
xchg
scas
sub
jbe
cmp
xchg
xchg
mov
stc
out
adc
out
sbb
mov
ret
out
jns
pusha
mov
mov
inc
add
mov
add
pop
pop
test
xchg
sbb
jbe
mov
push
xor
mov
inc
mov
xchg
ret
adc
jg
sub
mov
insb
fs
adc
jmp
shll
int3
adc
sub
sub
mov
js
sub
sub
and
imul
xchg
rcl
out
pop
insb
sub
sub
dec
outsb
int3
jo
cmp
into
stos
repz
mov
loope
or
xchg
pop
cmpsl
push
repz
leave
jbe
dec
adc
mov
popa
shrl
pop
sti
inc
mov
xchg
lcall
nopl
and
loopne
in
xor
fwait
subl
sbb
out
pop
inc
fimuls
cwtl
fsubl
inc
scas
pop
mov
test
dec
and
push
inc
pop
in
aaa
mov
movb
cmp
mov
xchg
test
lahf
fnstcw
arpl
xor
and
adcb
inc
iret
repz
popa
add
in
jbe
cmc
enter
sbb
mov
dec
cmp
adc
ljmp
xchg
pusha
clc
sub
mov
pop
jne
in
pop
xor
cmp
jl
inc
out
xor
mov
roll
in
pop
mov
pop
mov
xchg
lods
dec
popa
mov
and
sbb
xor
push
inc
repz
pop
xor
fsts
and
in
popa
int3
es
clc
cli
mov
cld
movsb
mov
sub
loop
call
imul
cmp
push
bnd
into
mov
or
cmp
xchg
push
aam
fidivrl
movsl
js
mov
cld
or
mov
out
fbld
movsl
icebp
notl
and
iret
mov
jle
sub
iret
cmp
jmp
and
addb
test
jae
pop
add
sarb
sub
jge
fadds
fwait
rcrb
adc
arpl
rep
adc
imul
push
mov
push
in
testb
cmp
dec
add
inc
clc
pop
aad
and
jo
cli
or
in
les
ss
idivl
jb
sbb
mov
xchg
jo
mov
mov
jl
and
sbb
and
xchg
jns
insb
pop
movsb
jp
es
mov
or
push
outsl
cmc
in
and
shrl
cmpsl
stos
sub
rorb
ja
clc
cmpsl
push
fnstenv
inc
jecxz
push
add
imulb
add
and
pop
xchg
inc
xchg
ss
in
call
xchg
adc
int
inc
dec
add
dec
push
jmp
xchg
daa
jo
ds
push
out
sub
cmpsb
xor
int3
sbb
inc
aam
or
jmp
sti
mov
flds
adcl
cli
es
xor
mov
out
popf
push
lods
pop
scas
fidivs
mov
icebp
mov
xor
pop
scas
mov
mov
mov
dec
dec
adc
ds
inc
jbe
mov
jb
call
mov
push
lods
mov
imul
mov
adc
cltd
jp
in
fwait
inc
dec
mov
nop
pop
imul
scas
rcrl
fbld
jns
sub
in
jae
jb
std
mov
adc
sub
xchg
repz
and
dec
je
dec
mov
pop
clc
loop
add
lret
dec
adc
adc
sbb
enter
xor
mov
dec
mov
jmp
jle
sub
es
sbb
lds
fsubrs
out
push
lods
pop
jo
mov
push
cmpsb
fwait
ret
add
mov
and
pusha
mov
sub
jl
inc
sbb
fnstcw
les
jnp
sbb
push
fdivrl
bound
int3
jg
or
les
out
jmp
orl
cmp
push
jo
adc
loope
ret
dec
mov
cmp
cmp
lret
lret
mov
pop
xchg
mov
outsl
out
add
inc
xchg
bound
popa
jb
add
insl
in
aam
dec
mov
or
xor
in
test
pop
mov
jg
push
aam
pushf
hlt
pop
jns
xor
call
add
push
dec
mov
push
aad
enter
fisubs
ljmp
sbb
jbe
mov
adc
sbb
jno
add
adc
lahf
test
jmp
dec
stos
sub
sbb
aaa
clc
pop
imull
ljmp
cmpsb
add
fsubr
xor
aad
sbb
shll
leave
sub
popf
xchg
arpl
lods
sti
int3
cld
stos
cmp
sarb
jecxz
mov
xor
push
pop
xchg
in
repnz
or
fnsave
andb
jb
lcall
rcrl
mov
sbb
bound
xchg
push
int3
dec
fnstenv
or
cmpsl
jae
xchg
insb
jae
ss
hlt
js
jg
push
cwtl
pop
rcrb
gs
and
jl
mov
popf
xor
xchg
clc
inc
mov
push
fidivrl
inc
sbb
test
hlt
mov
cmc
mov
or
stos
cmp
jg
mov
ret
xor
mov
fsts
scas
stos
jmp
sub
js
gs
ss
inc
in
jmp
push
sbb
push
test
fwait
add
repz
cli
cwtl
cmp
leave
fstps
pop
stos
pushf
jae
scas
cmp
mov
pushf
adc
jg
in
stc
nop
fildll
dec
lcall
and
push
inc
sbb
int3
pop
add
in
sahf
jecxz
push
lahf
push
repnz
popa
rorb
pop
dec
pop
jp
mov
and
xor
adc
mov
ret
sahf
popf
gs
lret
rcll
inc
xchg
dec
jbe
push
cmp
add
or
jno
scas
jb
push
jno
fwait
mov
ja
leave
gs
cs
les
imull
add
mov
pushf
stos
hlt
dec
inc
push
filds
je
fwait
lds
mov
inc
xchg
mov
fstps
adc
sub
jo
outsl
movsb
jmp
aaa
dec
jg
dec
loop
jl
popa
mov
cmp
rcll
mov
inc
shl
bound
lds
divb
or
sbb
outsl
jp
mov
jb
mov
cmc
mov
shr
popa
outsl
pop
addr16
ss
sti
mov
jg
sbb
popf
jns
add
cmp
in
enter
rcrb
enter
iret
lahf
push
in
xchg
cmp
sbb
std
je
xchg
sbb
cmp
inc
out
clc
mov
arpl
shr
je
add
nop
jnp
es
dec
movsl
cwtl
out
cwtl
jl
bound
add
add
inc
daa
mov
cmpsl
lods
inc
adc
das
push
push
cmp
int3
pop
dec
outsb
jbe
movsb
cmpsl
jmp
mov
fsubrs
pop
dec
dec
out
popa
outsb
sar
je
mov
xchg
dec
fists
lods
mov
scas
sbb
pop
hlt
pop
pop
xor
mov
mov
jns
add
pop
xchg
and
lret
movsl
lret
mov
push
movsl
xor
daa
ja
clc
test
push
lea
jno
lret
jle
div
jnp
sub
lahf
scas
cmp
cmp
sub
fwait
in
sbb
add
ljmp
add
lods
or
fs
push
je
cwtl
cmpsb
adc
sub
in
mov
or
ret
pop
ds
mov
pusha
loopne
je
and
mov
mov
scas
and
icebp
xchg
push
push
and
nop
dec
fdivrl
cld
and
subl
jecxz
pop
inc
push
adc
addr16
cmp
adc
add
cmp
add
icebp
inc
int
or
xchg
insb
xor
jge
push
pop
pop
adc
sub
xchg
ret
outsl
jl
mov
out
xor
mov
leave
adc
mov
sub
int3
shlb
mov
dec
adc
sub
dec
pop
fs
pushf
scas
and
sti
call
cli
push
clc
dec
sarb
mov
arpl
push
sub
mov
jbe
dec
adc
cmp
sbb
adc
push
xor
xor
pusha
push
adc
xchg
xor
sbb
add
pusha
cmp
inc
cmpsl
daa
dec
call
sub
push
pop
fsubl
adc
xchg
arpl
fildl
add
nop
std
or
out
or
push
xchg
jle
add
sti
test
in
or
push
test
lahf
xor
adc
int
sub
lret
outsl
xor
inc
sub
je
daa
add
lods
cmpsl
ret
fst
in
movsb
ret
hlt
add
imul
ljmp
fistl
pushf
xor
cwtl
out
leave
pushf
out
test
out
xor
rolb
out
repnz
std
mov
test
outsl
fisubrl
or
jns
jp
ret
jp
inc
in
ja
test
jno
pop
stos
pop
popf
ljmp
incb
cmp
xor
cmpsb
clc
adcl
add
cld
adc
jno
int3
jne
xchg
data16
dec
movsb
jl
int
test
and
mov
sbb
xor
jne
cwtl
jo
push
adc
stos
xchg
fnstcw
dec
repz
adc
push
mov
loope
out
xchg
repz
and
in
mov
xchg
jmp
rcrl
mov
pop
mov
dec
jge
push
and
dec
out
jg
jnp
xor
push
mov
push
call
mov
xor
pop
sub
es
or
xor
movsb
stos
fsts
cli
add
jmp
jmp
jle
adc
push
cmp
scas
repnz
shll
inc
rclb
inc
and
mov
mov
negb
push
add
inc
dec
mov
inc
inc
imul
adc
dec
loope
xor
vprotw
mov
scas
out
xor
nop
call
xor
int3
outsl
or
repz
es
rcrl
jb
mulb
or
shlb
outsb
mov
lret
and
cmpsl
mov
leave
test
dec
loope
test
mov
aam
cmp
pop
xchg
pop
into
in
pop
frstor
mov
fidivrs
jb
in
cmc
ret
mov
int
sub
mov
in
out
test
orl
xchg
jl
shl
dec
insb
sbb
mov
iret
pop
iret
daa
nop
mov
add
jmp
ret
fstpl
push
stc
fmulp
daa
cli
push
jmp
cmp
and
lcall
les
push
repz
sub
nop
jecxz
mov
xchg
mov
push
ljmp
call
aaa
mov
in
add
mov
in
adc
int
jecxz
bound
inc
add
add
das
not
push
jmp
xor
pop
cmpsl
ror
aam
sbbb
je
aas
lret
pop
cmc
rclb
fldl
inc
int
jns
xchg
lret
mov
fsubr
jg
lds
testl
and
and
aad
insb
xor
aas
mov
mov
in
arpl
lea
imul
xor
cmp
mov
sahf
fisttpll
ds
jge
add
and
mov
scas
xchg
arpl
ret
or
jne
push
cld
xchg
imul
jb
xchg
jae
pop
sub
jmp
xor
push
sub
push
mov
mov
jg
cmp
test
xor
mov
mov
daa
int
sub
fisttps
das
repnz
jnp
mov
aad
addr16
mov
and
scas
jns
lcall
inc
fmul
xchg
mov
in
fdivrs
and
call
or
sahf
lds
inc
popa
pop
dec
dec
pop
sbbb
push
adc
xlat
outsb
push
leave
jb
cmp
pushf
xchg
adc
sbb
out
and
push
aaa
mov
push
jno
pop
adc
sbb
jae
enter
push
lahf
ss
mov
loope
or
imul
xor
mov
roll
bound
aad
jmp
or
push
scas
fnsave
jbe
jmp
adcb
mov
leave
sbb
mov
jl
mov
xchg
idiv
jle
das
xchg
cmp
out
js
int
test
adc
xlat
aam
jne
and
rcrl
jne
mov
aad
adc
jae
push
dec
sub
xorb
cmpsl
pop
lds
xor
les
das
andb
test
push
jne
inc
in
mov
fldcw
arpl
into
adc
rol
add
push
mov
mov
les
repnz
shrb
aas
adc
imul
mov
jp
int
std
sub
pop
push
mov
sbb
push
ds
mov
push
ljmp
pop
icebp
fldenv
movsb
mov
ja
adc
jbe
iret
inc
fsubp
and
mov
fs
xchg
push
fcoml
or
xor
inc
lret
scas
ljmp
roll
lds
and
push
adc
jmp
mov
jg
mov
dec
shl
sub
and
sti
xor
sub
or
push
push
lds
and
bound
push
into
xor
push
out
sahf
lret
and
xchg
arpl
ljmp
inc
dec
repnz
shl
pop
or
cltd
fs
cmc
sub
movsl
mov
push
sub
pop
or
xchg
scas
jns
mov
fstp
jb
rorl
cmc
rcrl
mov
add
pop
vpavgw
sbbb
add
jl
lahf
mov
ds
stc
mov
addb
iret
bound
test
pop
imul
je
or
enter
lret
cmpsl
leave
and
sbb
mov
clc
je
jge
sub
inc
ljmp
shll
rcl
shlb
fs
mov
stos
popa
outsl
loop
dec
cld
push
daa
test
push
sub
or
cs
mov
addl
int
out
sbb
dec
test
movsb
pop
cmp
shrb
jecxz
mov
cltd
je
test
sti
jne
mov
aad
insl
leave
sub
cli
dec
daa
pop
dec
lret
sbb
negb
in
sbb
push
jge
rclb
jno
cmp
ja
jnp
xlat
dec
mov
jae
push
clc
mov
xchg
sub
xor
cwtl
subb
hlt
gs
insb
ss
adc
jno
roll
mov
sub
push
push
or
lret
mov
xor
mov
xchg
push
es
push
cmp
dec
dec
ljmp
mov
cmp
insl
gs
orl
or
rclb
aaa
int
push
pop
lahf
xor
push
clc
outsb
rcrb
mov
popa
insb
add
sub
inc
loope
mov
mov
aam
xor
jp
mov
mov
mov
xorb
mov
dec
dec
pop
cmp
hlt
push
jecxz
test
cli
stos
inc
sub
pop
xor
mov
jno
fcom
push
ljmp
sub
pusha
sarb
enter
stos
ret
sbb
xor
sbb
dec
add
add
repnz
pop
mov
mov
jnp
xlat
lods
cmp
pop
mov
sub
mov
dec
scas
aam
xchg
lret
or
inc
pop
xor
dec
jle
enter
sbb
cwtl
bound
lds
jbe
repnz
shlb
shrb
out
inc
icebp
lret
mov
mov
push
scas
sbb
loop
cwtl
adc
jecxz
test
fistl
out
dec
orl
insl
pop
out
cmp
jb
fwait
notb
add
add
movsb
mov
ret
jne
fs
es
xchg
push
xlat
jg
aaa
sti
divl
pop
jp
cmp
gs
xlat
mov
sub
test
mov
xchg
fiadds
pushf
xchg
cmpsb
cmp
and
lds
or
lds
pop
adc
jl
imul
repnz
ret
ret
jns
and
inc
stos
mov
out
lcall
clc
add
and
test
cmp
je
pop
mov
push
mov
into
les
jle
out
jne
cmp
subb
out
ja
push
sbb
hlt
movsb
sub
and
jo
scas
jno
push
arpl
mov
dec
pusha
pop
jg
test
mov
or
cmp
stc
push
sub
push
mov
adc
pop
cmpsl
daa
mov
test
push
mov
in
and
jno
inc
push
xor
js
adc
adc
cmpl
ljmp
mov
and
inc
pop
sub
or
lcall
cmpsb
and
push
xor
loop
xchg
cmp
js
xchg
jecxz
ljmp
inc
jg
inc
shl
add
dec
js
scas
insl
loope
pop
filds
cmc
pop
xlat
sbb
aas
imul
pop
sahf
add
mov
mov
sbbl
jnp
loop
enter
xor
mov
cmpsl
loope
repnz
loopne
adc
mov
mov
push
mov
xchg
pushf
nop
adc
xor
mov
ja
xchg
xchg
imul
sub
mov
std
popa
dec
cmpsb
decl
mov
and
test
push
pop
jmp
mov
jne
pop
addb
jg
xor
ljmp
jno
push
mov
add
or
ljmp
aaa
mov
mov
or
mov
into
adc
les
pusha
ss
xorl
je
and
es
out
fs
xor
fsub
sub
js
es
sbb
adc
pop
fsubrs
sub
cld
js
push
add
lcall
jl
lahf
cmc
sub
adc
mov
mov
cmp
pop
iret
cmpsb
fidivrs
jns
pop
sub
cmp
push
jmp
jbe
push
in
mov
pop
je
stos
fcomps
sub
jp
lds
push
lea
je
push
xchg
adc
adc
aad
dec
pop
out
pop
or
mov
in
dec
ds
mov
jnp,pn
cs
mov
movsb
gs
shrb
xor
add
add
ja
sti
sub
call
push
lods
rorb
push
inc
loope
xlat
iret
in
paddusb
sub
jp
int
pop
test
dec
jae
iret
fcos
fbstp
push
sub
pop
addr16
cmpsl
roll
sbb
push
sub
xor
or
es
mov
xor
jecxz
mov
cmpsb
aas
mov
fs
mov
shrb
xchg
dec
jge
dec
adc
aam
push
movsl
inc
stos
insl
clc
lcall
mov
mov
outsl
iret
xor
popa
sbb
mov
sub
popa
clc
jge
adcl
push
outsb
cli
add
mov
rcr
loope
loope
ficoml
scas
test
pop
ds
and
outsl
push
lods
mov
sbb
mov
push
or
daa
ds
mov
inc
cwtl
iret
lretw
stos
jge
in
test
mov
fucomp
add
daa
je
adcb
sbb
outsb
or
mov
imul
add
and
mov
dec
int
and
sub
addr16
mov
or
nop
adc
sub
fs
jl
push
ss
push
jg
push
loope
mov
ss
pop
mov
ja
jns
inc
mov
xor
jbe
push
adcb
fbstp
outsl
std
add
popf
divps
mov
pop
mov
fwait
push
lea
xor
pop
ja
fs
aam
bound
testl
sarl
sbb
jmp
lcall
mov
mov
rcl
push
add
stos
fcmovbe
pop
add
mov
mov
setbe
fwait
add
jecxz
aas
adc
push
add
cmp
and
push
cmp
push
je
or
pop
sbb
mov
xor
stc
mov
enter
stos
addr16
outsb
mov
in
pop
inc
sbb
data16
xchg
lods
jl
cmc
sbb
test
pop
add
loope
dec
clc
mov
aad
push
and
insl
sarb
dec
dec
mov
lds
mov
cltd
or
xchg
rcrb
mov
les
in
ret
add
sbbl
inc
push
loopne
fs
or
icebp
xor
mov
out
xchg
scas
cmpsl
mov
push
sub
push
jle
test
arpl
dec
popa
addl
sub
pop
push
stos
cmp
adc
dec
mov
sbb
inc
sub
test
sub
push
test
adc
xor
lret
gs
mov
sbb
mov
idivl
pop
xchg
scas
out
ljmp
push
ss
inc
jnp
mov
dec
jne
imul
test
and
lods
js
jno
mov
mov
jae
ret
xchg
dec
or
xlat
aam
or
fidivl
sub
mov
pop
and
inc
int
push
ljmp
jnp
push
lods
data16
ficoms
jae
adc
es
testb
lret
lods
lock
js
push
lcall
daa
xor
add
test
inc
sti
out
push
pop
cmp
addr16
add
icebp
xor
mov
xchg
push
ret
call
xor
pop
inc
pop
sahf
pop
inc
dec
in
jne
mov
add
int3
ss
push
mov
jne
faddl
sahf
sbb
mov
nop
daa
pushf
adc
pop
scas
mov
ret
aam
add
mov
mov
loopne
lret
fwait
mov
push
lcall
sahf
pop
out
sbb
mov
mov
push
ret
shrb
test
orb
and
cmp
sub
cmpsl
and
fadds
dec
dec
scas
testb
sbb
sbb
xchg
scas
push
jae
xchg
xchg
xchg
bound
mov
shll
in
adc
adc
or
imul
cmpsl
repnz
das
pop
xlat
mov
inc
aas
cmpsl
es
and
cmc
mov
adc
push
add
xor
xchg
flds
dec
adc
pop
pop
dec
or
imul
scas
hlt
mov
fs
xchg
inc
inc
fcmovu
jns
mov
cli
fadd
pop
mov
sbb
mov
jno
iret
push
mov
dec
and
push
cmp
dec
outsl
xor
insl
in
montmul
cmpsb
xchg
in
push
add
popa
cs
shr
stc
add
mov
adc
mov
jge
sbb
or
mov
mov
leave
nop
mov
mov
sub
jo
cld
cs
dec
fists
gs
add
les
clc
mov
aam
fs
dec
sbb
lea
stos
sti
push
xlat
testb
imul
cltd
das
xor
sbb
push
mov
add
lods
xchg
pop
imul
test
xor
popf
pop
pop
sub
mov
popf
leave
add
cld
dec
dec
sbb
out
mov
mov
enter
or
out
dec
and
mov
stos
gs
xor
lods
push
add
dec
jo
push
lds
adc
inc
xchg
sbb
sbb
mov
stos
push
imul
add
dec
mov
fwait
test
insl
aaa
ljmp
mov
cmp
and
arpl
out
sbb
fstps
aam
adc
jnp
pop
or
jnp
push
test
inc
or
adc
mov
mov
cmp
sbb
test
das
mov
fmull
or
std
jbe
repz
je
sti
push
mov
push
leave
scas
push
addr16
lahf
cmp
sahf
aaa
test
mov
cmp
jno
stos
xor
arpl
into
out
cld
jbe
or
cmp
inc
sub
jns
cmp
inc
test
repz
xchg
repz
dec
push
test
xchg
cmp
sub
sbb
scas
scas
xor
sbb
xchg
ds
sbb
pusha
or
mov
or
mov
jo
mov
mov
andb
mov
aaa
push
and
inc
stos
mov
test
cmpsl
mov
inc
aam
loope
insl
xorl
dec
pop
and
les
or
roll
or
das
jl
stc
lods
push
adc
mov
adc
pop
push
nop
cmc
cwtl
cmp
cli
inc
adc
inc
scas
jg
ljmp
jb
mov
push
stos
xchg
jno
std
ds
inc
xlat
or
pop
test
insl
jecxz
dec
pop
mov
insb
out
sbb
mov
sarb
mov
or
mov
push
lret
popa
jmp
and
cmpb
mov
mov
add
repz
fldl
enter
popa
sbb
jns
aaa
into
in
enter
lret
stc
cs
push
mov
je
pop
cmp
adc
xchg
push
xor
sahf
xchg
pop
pop
jecxz
xchg
xchg
insl
add
sbb
pop
sub
rolb
jae
mov
sbbb
loope
jmp
xchg
sbb
dec
sbb
cs
dec
ret
in
adc
mov
fst
mov
cld
cld
mov
into
and
or
lret
jae
or
mov
cmp
fimull
add
rorb
aaa
loop
lret
out
mov
nop
mov
fadds
sub
lods
mov
jecxz
mov
and
je
andb
mov
shll
fdivrl
xchg
mov
jle
push
mov
push
mov
xchg
and
mov
push
adc
hlt
lods
mov
das
push
out
inc
or
aaa
in
jo
bound
cltd
cmp
cltd
cmp
mov
inc
bound
lods
mov
add
jb
sub
mov
call
test
jp
movsb
and
pop
pop
or
jle
sub
notl
loope
test
nop
adc
stc
or
mov
nop
jae
mov
xor
lods
fidivs
les
sub
pop
stos
jbe
sbb
push
sbb
lret
push
inc
outsl
jg
adc
cmp
mov
pushf
xor
clc
inc
gs
shrl
mov
or
pusha
dec
push
dec
gs
cltd
bound
cs
and
sub
incl
adc
jbe
cmc
fwait
or
add
mov
sub
fildll
cmpsb
cmpsb
sub
sub
arpl
mov
lods
mov
push
adc
jb
iret
loop
add
cmp
scas
cwtl
stos
loopne
shl
cmp
test
int
rcl
pop
add
mov
into
inc
pop
push
cmp
repnz
or
jmp
imul
shr
sbbl
popf
or
icebp
push
add
adc
inc
mov
loopne
ljmp
mov
pusha
mov
adc
dec
clc
and
mov
add
es
jnp
mov
lcall
push
frstor
sub
mov
xchg
mov
sbb
repnz
mov
fldcw
jg
aam
adc
hlt
add
lret
and
sbb
dec
loope
lock
fsubrs
lcall
push
jnp
cmpsl
push
mov
repz
and
movl
shll
aaa
ja
test
ret
fucomip
int
and
bound
bound
xchg
cmp
jecxz
push
add
mov
test
and
fbstp
add
fisubrs
adc
mov
mov
and
lahf
push
dec
push
cld
push
popa
mov
pop
je
bound
xchg
loopne
jecxz
popa
mov
or
mov
mov
or
mov
pushf
clc
sbb
or
arpl
xchg
lret
or
outsb
outsl
cmp
mov
or
push
or
jae
xor
lds
push
mov
lds
xor
mov
mov
das
cmpsb
lods
inc
pop
sbb
inc
push
insl
mov
dec
adc
les
inc
js
jl
dec
ret
inc
popa
ret
inc
lcall
sub
mov
outsb
fistl
leave
movsl
inc
push
pusha
push
add
mov
mulb
in
stos
mov
adc
xor
leave
call
fistpll
std
inc
popa
push
xchg
jns
outsl
lods
pop
pop
nop
pop
or
xchg
sub
jbe
lret
or
sub
dec
loop
ljmp
or
fistl
or
dec
mov
jb
cmp
jo
sbb
or
cmpsb
cmp
jne
dec
mov
add
sbb
cmp
ja
push
xchg
rcll
ret
mov
in
cmp
jae
daa
jl
dec
sub
push
or
fcompl
bnd
mov
mov
loope
out
sub
or
in
add
ss
xchg
mov
push
ret
jle
in
loop
ret
mov
loopne
cmp
or
aaa
push
cwtl
sub
sbb
or
mov
lods
ds
sarl
push
lock
js
dec
lock
insl
call
and
gs
loope
test
test
lock
adc
aaa
jge
out
stos
mov
lods
int3
rolb
repnz
sbb
and
add
imul
fiaddl
lock
insl
lock
jg
mov
inc
or
xchg
test
mov
scas
notb
sub
sbb
mov
ret
addr16
mov
mov
sarl
sbb
pusha
not
mov
test
dec
sti
xchg
jge
mov
mov
sbb
pop
dec
push
mov
jo
in
in
jno
fnstsw
mov
gs
mov
nop
aaa
add
mov
push
add
jmp
mov
sbb
lock
repnz
sbb
xchg
jmp
push
je
lds
xchg
lock
pop
lret
pop
ljmp
push
or
imul
iret
lret
aas
xchg
mov
lds
add
mov
addr16
jb
dec
fwait
out
cld
or
mov
push
xor
sahf
dec
sbb
scas
or
hlt
mov
mov
lea
pop
cmc
dec
mov
mov
icebp
jecxz
push
jmp
jmp
mov
sbbl
xchg
mov
sbb
icebp
mov
xchg
subl
jecxz
in
sti
mov
lret
cs
andl
aaa
mov
stc
fadds
call
sub
push
sub
daa
push
test
adcb
jp
les
or
pop
cwtl
icebp
test
mov
repz
mov
test
sbb
sub
or
mov
sbb
nop
jmp
fs
mov
inc
idivl
test
cmp
dec
stc
and
scas
pop
fsubrl
jae
or
xchg
inc
sbb
test
mov
fxch
inc
mov
cs
repnz
mov
xchg
test
incb
inc
das
inc
fmull
int
inc
cmp
dec
int3
stos
sbbl
and
pop
or
push
sbb
out
pusha
pop
cmp
sub
mov
mov
fwait
stc
push
inc
adc
in
cwtl
push
or
mov
push
sub
inc
lock
stos
xor
jmp
out
dec
nop
or
xchg
out
es
arpl
mov
push
or
jl
mov
ss
pop
pop
dec
gs
push
and
mov
in
inc
std
pop
mov
lcall
sahf
clc
les
mov
mov
lods
inc
test
shl
sti
imul
insl
add
inc
mov
mov
aam
out
add
mov
push
jecxz
mov
repz
incl
popf
xchg
dec
aam
mov
out
pop
mov
cmp
rolb
xchg
dec
js
test
cmc
cmc
das
sub
cmpsl
jp
mov
in
loope
ret
add
sbb
arpl
pop
dec
cmp
loope
incb
bound
and
lea
mov
ficompl
push
mov
pop
js
leave
xor
xchg
mov
mov
sti
pop
xchg
stc
jo,pt
jo
lret
adc
insb
fucomip
in
adc
xchg
fildl
fs
pop
je
mov
cmp
xor
push
pop
out
mov
loopne
cmp
stos
ret
rol
out
mov
sub
mov
jo
jg
cmp
and
in
leave
pusha
idivb
cs
xchg
out
outsb
xor
lret
xor
mov
pop
mov
xor
mov
sbb
insl
xchg
xchg
cs
mov
outsb
shl
push
mov
pop
sbb
push
scas
and
or
mov
xchg
pop
sahf
or
aaa
loopne
add
gs
ja
test
mov
push
ja
pop
fs
dec
jmp
insb
sub
lods
add
leave
pusha
dec
xor
mov
pop
movsb
test
into
cli
xchg
outsb
jmp
in
dec
mov
test
dec
fstpl
cmpsl
fidivs
xchg
ja
pusha
fwait
cmp
cmp
cbtw
lods
xchg
pop
and
xchg
mov
inc
mov
xchg
in
jns
aam
icebp
dec
inc
dec
sub
es
jle
dec
ret
push
or
loop
jp
xchg
mov
je
xchg
lea
es
dec
loop
iret
inc
idivl
add
add
jmp
inc
clc
cmpsl
push
divb
dec
add
imul
push
outsb
aad
sbb
call
imul
mov
dec
out
fdiv
repnz
mov
adc
jnp
cmp
shrl
dec
movsb
mov
ret
nop
push
mov
pusha
lea
adc
idiv
les
je
dec
in
sbb
enter
stos
stos
xchg
das
jnp
daa
xchg
jl
cmp
mov
mov
out
jo
scas
ds
adc
ss
repnz
dec
jmp
lret
sahf
adc
push
pop
push
push
insb
push
jno
mov
mov
sahf
mov
lcall
push
pop
daa
adc
jae
xor
inc
xlat
or
outsb
dec
cmpsb
jae
xor
clc
xchg
sub
pop
out
sbb
insb
mov
fnsave
fmull
lods
and
scas
sub
sbbl
or
lahf
daa
mov
xor
sahf
and
andb
das
mov
push
mov
mov
mov
xor
out
mov
aas
mov
out
out
xchg
add
xor
mov
sub
xchg
jnp
mov
test
inc
sub
pop
sti
dec
leave
data16
adc
scas
shlb
sub
clc
cmpsl
cmp
mov
or
ds
jg
aaa
repnz
fwait
push
cmpsl
cmp
cmp
out
mov
mov
scas
mov
fcmove
sub
cmp
or
xor
xlat
inc
add
mov
pop
mov
sub
mov
lcall
jae
sub
std
and
les
sbbb
push
dec
enter
and
std
hlt
inc
pop
pusha
dec
fbld
shlb
and
dec
gs
inc
sub
repnz
inc
hlt
mov
out
push
aaa
mov
cmpsb
adc
push
cld
xchg
lcall
cmpsb
repnz
adc
pop
mov
cmp
pop
sub
mov
pop
hlt
cmp
dec
in
mov
sbb
cmp
pop
ja
jp
cmp
andl
or
lahf
ss
and
in
xchg
push
mov
pop
insl
imul
sub
and
dec
inc
or
jle
xchg
pop
inc
aaa
ja
xchg
push
or
jl
jle
dec
repz
sbb
jp
scas
mov
xchg
mov
aad
loopne
inc
dec
ljmp
mov
add
dec
stos
stos
mov
and
std
aam
inc
loope
dec
aam
addr16
mov
mov
std
fs
and
jmp
stos
adc
jle
lahf
xor
subl
dec
jp
jl
test
xchg
popf
jecxz
repz
jp
mov
cmc
cmpsb
sub
or
test
sub
icebp
cltd
mov
mov
sti
and
adc
pop
mov
nop
out
ffree
mov
in
xchg
insb
mov
adc
imul
mov
and
aad
xor
std
mov
sbb
cmp
sbb
shll
cmpsl
ret
sbb
jmp
cmp
gs
cli
arpl
sahf
es
stos
rclb
adc
jae
xchg
mov
stos
testb
mov
js
jl
pop
sub
dec
in
jmp
pusha
pushf
xchg
and
mov
push
int3
fsubr
lahf
repz
test
js
mov
pop
dec
inc
loope
jne
sbb
inc
lahf
mov
repnz
bound
xchg
and
ret
pop
push
repnz
addr16
mov
cmpsl
xor
mov
push
dec
fadds
xor
xchg
adc
stos
fildl
cmpsl
cli
jg
mov
sbb
xlat
out
out
call
xchg
sub
das
dec
mov
repz
lret
or
stc
andl
sahf
push
dec
push
clc
into
lea
lret
jae
lods
inc
aam
xor
jo
fbstp
shrl
mov
lods
inc
sub
in
lcall
sbb
sbb
and
xchg
inc
or
or
jno
jle
cmc
cmp
mov
icebp
dec
pop
lea
push
rorl
addr16
hlt
cli
or
insb
jg
xor
pop
ds
push
pop
out
jo
rol
jmp
pop
shll
je
mov
shlb
rcl
divl
dec
sahf
loopne
pop
cmc
cli
dec
jae
inc
lds
sti
divb
jg
cmp
inc
jmp
loopne
rcrb
scas
xor
pop
stc
push
xor
add
lahf
jg
and
cli
xchg
pop
cmp
pop
pushf
repnz
stos
jle
adc
cmpl
pusha
or
push
xlat
and
dec
mov
cwtl
xchg
add
popf
xchg
hlt
or
or
cmp
pop
fs
dec
push
push
inc
and
fnstsw
dec
inc
add
call
mov
cmp
inc
hlt
leave
xchg
addr16
push
in
mov
pop
sub
or
popa
add
cs
mov
adc
sub
sbbl
xchg
lock
jne,pn
push
xchg
push
or
adc
movsl
js
into
jb
js
xchg
inc
fdivrs
lret
pop
repnz
ja
lods
int
dec
filds
rcrw
jns
andl
iret
dec
dec
iret
outsb
arpl
data16
cmp
mov
popa
inc
lahf
imul
mov
mov
loop
addb
and
mov
movsb
repz
add
sub
mov
rcl
inc
xchg
sub
push
aad
inc
push
xor
push
fstpl
rep
inc
lret
les
adcb
xor
sarl
jno
cwtl
je
jbe
test
add
cmp
bnd
and
pop
mov
jbe
int
arpl
xchg
lds
movb
loop
aam
cmp
or
decl
adc
das
out
movsb
fwait
ljmp
pushf
xor
inc
shrl
xor
insl
and
test
push
stc
xchg
call
xor
pushf
imul
icebp
mov
or
mov
incl
push
pop
or
mov
xchg
sub
or
pop
ret
inc
std
testb
stos
inc
movsl
xchg
fsubrl
cs
push
mov
bndstx
push
pop
cld
andl
outsl
subb
test
arpl
popa
roll
mov
adc
sbb
int3
lahf
mov
rolb
or
sbb
pop
xor
mov
cmpsb
sub
xorb
leave
push
decl
xchg
mov
sbb
and
and
cmp
jecxz
incl
aad
in
cmp
and
xchg
lea
cmp
dec
push
add
popf
jo
dec
mov
pusha
fildl
inc
sub
popf
xor
sub
loop
jo
aad
ss
test
mov
fdivl
imul
scas
mov
sarl
jbe
jns
push
jmp
jmp
imul
mov
inc
cs
in
adc
pop
hlt
int
enter
out
ret
out
rcl
add
inc
stos
xchg
out
pusha
mov
and
push
mov
jp
mov
mov
dec
pop
mov
ror
inc
out
arpl
mov
clc
adc
jg
scas
and
repnz
repz
insl
and
sub
shrl
mov
aam
iretw
mov
sbbb
mov
cltd
or
out
pop
jge
dec
mov
push
popf
lods
xor
jmp
mov
jl
xchg
pop
sahf
pusha
xchg
xchg
sti
pop
popf
subb
xchg
push
inc
dec
and
out
add
jne
and
les
inc
inc
lds
cmp
pop
out
rcrl
jns
push
fdivs
push
xor
and
push
cmp
inc
pop
js
xor
rcl
mov
outsl
ffreep
loope
das
cmpl
fs
mov
push
jns
out
test
pop
jae
mov
cmp
out
fistpl
mov
jecxz
enter
outsb
jne
fildll
mov
daa
sti
shrb
int3
pop
movsb
lret
shl
mov
loop
cmp
cmp
push
mov
cmpsb
cmp
notl
sub
or
jb
outsb
sbb
xchg
mov
pushf
mov
into
mov
fwait
and
push
icebp
fwait
ret
repz
xchg
push
lahf
sub
mov
jmp
dec
push
mov
call
test
lret
std
lret
add
ret
sbb
popf
fisubs
outsl
push
fdivr
outsl
ret
scas
push
add
inc
lret
and
mov
mov
cmpsl
cmp
inc
rorb
sbb
jge
xor
xor
cld
or
xchg
jnp
repz
fidivrl
imul
sub
dec
jae
mov
pop
xor
dec
out
int
sub
add
mov
loopne
repnz
or
cmp
inc
nop
push
sub
pop
stos
sti
aas
dec
insl
jne
mov
or
jo
int
push
aas
icebp
mov
rcrb
imul
mov
push
outsw
ljmp
insb
xor
ror
in
sbb
mov
sbb
mov
jg
lea
hlt
xchg
int
andb
cmp
in
pop
fsubrl
into
cmp
addr16
sti
xchg
jnp
fsubrl
or
inc
sub
pop
pop
es
fimuls
das
and
addb
aaa
jg
fs
das
sub
movsb
aam
pop
xchg
push
inc
inc
test
sti
or
sbb
mov
and
or
aas
push
sub
neg
mov
mov
push
stos
outsl
rolb
shlb
mov
fsubrs
popa
insl
cmp
sub
adc
int3
mov
or
es
movsb
dec
push
mov
xchg
mov
mov
std
xchg
shlb
repnz
jb
lcall
jg
sub
xorl
data16
data16
dec
fsubrs
xchg
jg
push
scas
inc
and
popf
je
sti
add
pusha
sub
push
fmull
fnstenv
pop
lds
xchg
shll
sti
shr
in
jnp
or
adc
into
cwtl
ds
stos
fucomip
fnstsw
lods
add
dec
aas
sub
xor
mov
outsb
cs
sbb
jbe
xchg
out
je
out
ret
rol
jl
mov
pop
xlat
dec
out
xchg
dec
mov
outsl
jns
sbb
aam
mov
xlat
imul
adc
jns
and
or
sub
loope
push
push
out
mov
into
lahf
test
rclb
fisubs
xor
sub
sub
popf
test
dec
jmp
xchg
sub
xlat
inc
mov
cli
clc
outsb
stc
out
xchg
in
dec
xchg
cltd
push
insl
adc
jecxz
pop
fsubr
xor
icebp
push
xchg
pop
das
add
sti
lods
xchg
sub
mov
sub
jno
push
fdivl
xchg
in
cmp
fsubr
xor
outsl
push
fsubs
pop
stos
or
les
jmp
mov
fwait
je
outsb
int
loopne
add
push
je
ret
mov
leave
cli
xchg
out
jle
aaa
mov
insb
mov
mov
sub
nop
push
or
les
out
gs
clc
rorl
xchg
subl
sbb
mov
xlat
fstpt
cmp
push
mov
mov
aad
xchg
repz
xor
and
lods
xchg
inc
cwtl
xorl
push
sti
rcl
xchg
or
andb
gs
adc
dec
icebp
push
es
adc
cmp
cmpsl
outsb
mov
inc
inc
insb
dec
pop
sahf
fs
cld
mov
rclb
fwait
imul
rolb
fs
test
ja
mov
dec
shr
and
in
inc
insb
leave
ja
add
insb
lret
dec
loopne
xor
xchg
push
cltd
jecxz
call
sub
jno
dec
movsb
cmp
mov
ret
pop
add
data16
mov
dec
sbb
jecxz
push
xchg
popa
sarb
mov
cli
jge
shrb
cmp
dec
mov
inc
sahf
movsb
push
adc
xor
popa
rcr
mov
fs
insb
inc
repz
inc
gs
lcall
jp
mov
out
push
movlhps
dec
jns
popa
inc
push
stos
dec
mov
add
cs
xor
sbb
sub
cmp
pop
mov
cmpsl
inc
sub
add
push
fwait
pop
mov
and
push
daa
xor
cmpsl
fidivs
inc
mov
mov
clc
test
inc
jnp
bound
xchg
lcall
jl
push
fdivl
ss
pop
sub
xchg
dec
dec
leave
out
outsl
daa
sbb
aaa
fisttpll
push
aad
das
mov
add
lds
pop
fdivrp
push
push
ret
xor
dec
mov
gs
rol
das
loope
outsl
xchg
notl
mov
or
and
pop
pop
jp
adc
ficomps
xchg
insb
das
adc
jp
je
xchg
into
mov
push
movsl
jns
add
in
daa
addb
and
mov
lds
add
hlt
dec
jbe
mov
cmc
mov
mov
pop
stc
andb
sbb
xchg
jge
mov
sub
sbb
mov
adcl
sub
mov
xchg
int
ss
out
and
loop
sbb
pop
stos
inc
mov
xor
aad
mov
hlt
cmp
dec
push
repz
aad
scas
cmp
mov
mov
jae
in
lods
pop
pop
or
nop
mov
rorl
adc
jl
and
xchg
cmp
aad
leave
test
dec
mov
cmpsb
fcompl
add
xchg
rorl
fsubrl
jbe
inc
mov
sarl
mov
fld
lds
stos
enter
dec
loope
movsl
and
cwtl
cmp
lret
inc
add
int3
movsl
jg
or
cmc
and
das
test
lahf
push
jae
dec
int3
and
lret
jae
daa
outsl
insl
imul
add
imul
rcl
out
xchg
sbb
fistps
daa
out
cld
xchg
into
lock
repz
or
das
pop
hlt
mov
cmp
adc
xchg
dec
popa
sti
sti
and
stos
in
push
xchg
jns
push
aad
pop
ror
dec
fwait
ja
aam
mov
jno
fwait
es
aaa
mov
xchg
scas
inc
fstpt
out
bound
mov
shlb
test
push
mov
jae
adc
mov
add
xchg
shl
cli
jl
mov
add
dec
mov
push
lock
test
testb
cmp
insb
mov
push
daa
mov
cmp
xor
cmp
sbb
mov
sbb
lods
cmpsb
xorb
add
mov
push
xchg
xlat
inc
outsl
push
mov
callw
mov
mov
mov
mov
fwait
push
movsl
and
sub
pop
cmp
push
mov
icebp
push
into
gs
push
dec
test
jno
jo
fs
xchg
mov
lahf
in
shr
cmpsl
adc
jb
inc
xor
add
movsb
iret
mov
out
push
addr16
push
jnp
xchg
or
testb
fsubrl
sarb
xchg
loopne
xchg
mov
dec
xor
ret
xchg
loopne
cmp
idivb
push
jmp
jno
jo
dec
inc
sbb
out
mov
cmpb
test
xchg
and
xor
test
push
fcmovnbe
stos
and
ds
mov
shl
fists
stos
jo
clc
test
lcall
and
lods
bound
int3
mov
add
adcl
scas
push
pop
cmp
mov
mov
test
jb
cmp
out
andl
add
push
or
fldcw
push
jl
mov
lock
jmp
xchg
insl
in
mov
inc
lock
aaa
out
mov
lods
dec
out
pop
cmp
push
lods
xchg
xlat
mov
mov
and
xor
mov
incl
mov
dec
fiadds
out
sbb
jge
loopne
out
dec
mov
insb
test
sti
jbe
jae
lods
cmp
sbb
dec
loop
sbb
into
mov
shrb
movb
ljmp
dec
cmp
mov
jecxz
cmp
into
and
adc
and
aaa
jo
push
push
lods
dec
inc
push
push
xchg
jg
repnz
inc
push
loope
add
pusha
push
leave
test
pop
scas
cmp
or
ret
jbe
lret
lahf
imul
inc
stos
out
lahf
sub
cmp
push
lods
push
xlat
insl
scas
pop
loope
call
cmp
and
xchg
in
mov
ja
lcall
fbld
ljmp
dec
cmp
ret
pop
lahf
loope
sbb
lods
mov
scas
jnp
js
jno
arpl
scas
sub
sbb
mov
mov
add
sub
insl
sub
xchg
mov
adc
data16
xor
inc
mov
out
add
add
js
mov
dec
inc
fnstcw
negb
movsl
jmp
jno
fstpt
test
sahf
imul
push
movsb
or
and
mov
sti
push
scas
ss
imul
icebp
insl
pusha
pop
mov
or
sub
or
pop
cmp
jle
add
pop
inc
add
xor
mov
xor
outsb
rcl
xchg
call
sub
iret
sub
mov
repnz
mov
mov
lods
inc
fadd
xor
jo
mov
sbb
dec
pop
add
cmp
jecxz
cli
in
pusha
cmp
hlt
mov
push
jl
mov
dec
daa
push
or
mov
dec
out
xchg
aam
or
and
arpl
and
cmp
mov
pop
es
stc
jno
xor
psadbw
call
rcrb
sti
dec
sub
dec
lahf
repz
pop
mov
mov
ds
dec
imul
push
les
sub
push
sbb
into
enter
cs
sbb
inc
dec
sub
aad
ljmp
fistps
cld
or
data16
xor
fstpl
dec
cmp
dec
test
clc
test
add
push
ds
pop
sbb
aaa
adc
xor
xor
mov
mov
dec
aam
adcl
push
and
xchg
js
mov
stc
nop
dec
pop
out
test
loopne
jns
cmpsl
inc
mov
into
add
lock
fs
gs
jno
ret
or
hlt
jnp
popa
jns
xchg
xor
sub
loopne
pop
lahf
cmp
and
callw
pushl
jae
pop
cld
movl
icebp
mov
out
lahf
clc
sahf
pop
mov
or
mov
jecxz
cltd
cltd
inc
inc
and
scas
inc
pop
and
aad
and
hlt
jg
rcl
mov
or
dec
xor
xchg
mov
jle
je
out
mov
lret
jno
jno
ficoms
push
add
jno
mov
fcoml
push
add
sub
cmp
mov
hlt
lods
addb
orl
push
xchg
xchg
add
inc
std
push
mov
xorl
and
mov
mov
mov
jge
ficomps
int3
sbb
std
cs
subl
mov
orl
adc
and
lret
aam
fwait
nop
add
xor
cmpsb
lcallw
fs
or
and
hlt
hlt
push
adc
leave
loope
xchg
or
lea
cmp
sub
or
stos
inc
push
adc
xchg
cmp
mov
clc
fstl
push
xchg
je
popf
lods
mov
pusha
pop
xchg
subb
lret
mov
xlat
jmp
cmp
jb
or
pop
jne
out
xchg
adc
paddq
xor
mov
stc
fwait
je
xor
jmp
sbb
adc
push
jae
pop
mov
into
and
xor
pop
xchg
and
fsubr
dec
sahf
xchg
or
daa
flds
test
out
push
aas
mov
std
inc
cmp
popw
rcll
dec
loop
dec
int
jmp
imul
sar
shrb
loop
inc
rol
and
jns
int
loopne
data16
or
repnz
test
mov
je
push
xchg
xchg
dec
loope
jl
lock
push
repnz
fsts
loop
add
in
add
adc
inc
in
pop
xor
mov
cmpl
pop
fmull
jp
jb
add
rcrl
fnstcw
cli
scas
mov
lds
rclb
gs
mov
vpunpcklqdq
dec
xor
cmp
sbb
ss
idivb
shlb
xchg
sub
inc
loop
jne
cmpsl
mov
fmull
lret
or
xor
call
lret
out
and
inc
add
cltd
cmp
xchg
shrl
dec
sbb
inc
pop
sub
pop
fistl
fdivs
cwtl
es
and
dec
push
inc
xlat
lods
outsl
jp
jge
fidivrs
jae
push
xchg
or
fdivrs
push
dec
inc
xor
xchg
xlat
outsb
leave
xor
jmp
loop
cmp
out
push
in
mov
push
cmp
andl
cwtl
or
out
adc
imul
fmul
push
sbb
jecxz
mov
inc
enter
sbb
gs
sahf
jge
sbb
lods
add
xlat
xor
xor
xor
pop
jl
into
xchg
sbb
fwait
dec
sub
sbb
gs
jp
ja
and
rcll
ficompl
lahf
push
call
mov
in
push
xchg
cmp
pop
inc
stos
lods
add
dec
scas
or
testb
outsb
inc
pop
push
adcb
xchg
lods
jg
enter
mov
shll
sub
dec
mov
mov
push
xchg
pop
icebp
lea
add
lea
cmp
jp
lret
cmp
mov
sarl
flds
jg
lea
test
pop
mov
scas
sbb
mov
jns
xor
lcall
inc
mov
rorb
into
sub
bound
ja
mov
pslld
or
pop
repnz
aam
nop
lret
jb
daa
mov
cmp
sub
cmp
jmp
cld
aas
push
in
and
fs
repz
aad
xchg
push
loop
dec
xchg
push
call
or
xor
inc
mov
or
es
jle
cmp
sub
pusha
mov
dec
repz
xchg
fsubr
ret
or
or
and
cmp
andl
pop
int3
cmp
mov
mov
and
fs
repz
mov
neg
into
movsl
nop
pop
icebp
mov
xor
sub
xchg
fcompl
popa
xchg
test
mov
fwait
cld
or
dec
inc
mov
in
or
xor
test
aaa
out
or
scas
dec
cmp
jg
or
xor
jg
push
insb
pop
jns
mov
rclb
out
jnp
fnsave
clc
pop
sub
js
sbb
aas
lret
orb
dec
lods
jg
cmp
popa
mov
dec
clc
pop
push
push
add
repz
outsl
jmp
or
jb
daa
sub
imul
mov
lea
daa
sbb
xor
sbbl
adc
and
jg
xchg
xchg
sub
in
xor
dec
mov
sub
pop
push
mov
rcrl
pop
hlt
jns
xchg
pop
lods
jbe
mov
xchg
adc
push
sbb
push
and
sub
fldt
fildl
stc
inc
mov
fldcw
lret
xchg
sarl
inc
test
mov
pop
adc
test
sub
mov
and
push
dec
ret
stos
nop
cmc
imul
xchg
dec
jg
pop
std
in
mov
and
lahf
ss
cmpsb
lods
pop
mov
arpl
loopne
loopne
or
pop
fnstcw
rorb
dec
cli
jne
mov
loopne
mov
movsl
cmp
adc
data16
cmp
jecxz
adc
add
mov
movsb
sbb
jp
xor
jg
subb
pop
loop
cwtl
push
mov
jge
sub
fmuls
dec
cltd
icebp
push
inc
movsb
and
sub
push
mul
jnp
pop
loop
sbb
lock
push
ret
mov
jo
fadd
test
sub
stos
inc
push
mulb
mov
mulb
sarl
push
xlat
pop
dec
loope
adc
mov
push
xchg
inc
xchg
push
ljmp
popf
mov
dec
mov
xchg
pop
dec
in
pop
rcr
in
shl
mov
pop
xchg
push
shrl
test
imul
mov
movsl
lds
mov
ss
pop
stc
sahf
arpl
stc
lds
adc
add
cmc
fs
and
mov
pop
mov
insl
aam
xchg
sbb
out
and
sbb
inc
arpl
sub
aam
sbb
sub
xchg
or
cltd
mov
and
mov
shlb
mov
or
dec
aad
lcall
test
std
cwtl
daa
stos
in
or
lcall
push
fists
cmpsb
aaa
out
daa
pop
shll
rep
ret
inc
mov
sbb
sbb
pop
jg
cmpsl
aas
cmpsl
ds
mov
vpmaxub
pop
imulb
push
lcall
and
nop
setge
mov
clc
out
ret
xlat
nop
lret
clc
push
jo
cmc
aas
mov
mov
loope
aad
mov
inc
pop
push
pop
inc
fiadds
jns
jmp
out
jns
dec
pop
dec
filds
push
imul
lods
jge
xor
push
mov
repz
pop
mov
xor
push
test
push
rcrl
loopne
addl
push
sub
dec
inc
adc
outsb
test
imul
jp
and
popf
xor
mov
xchg
stos
dec
arpl
ss
mov
mov
scas
nop
sbb
das
fbstp
inc
xchg
dec
repz
ficoml
fisubl
xor
rolb
mov
and
daa
in
push
popa
leave
xor
push
mov
or
push
out
sub
mov
jge
lcall
sbb
or
out
cs
mov
inc
cmp
pop
and
enter
shrl
ljmp
add
aas
add
imul
jbe
jb
mov
inc
sahf
lret
arpl
pop
shlb
or
imul
mov
out
inc
lret
icebp
loopne
in
sub
insb
aas
mov
xor
inc
pop
mov
ds
xchg
aam
ds
cmp
mov
dec
jle
test
and
mov
aaa
dec
fwait
daa
outsl
sbb
lret
lahf
jae,pn
dec
dec
jns
pop
adc
dec
and
ja
lahf
out
out
mov
lds
sub
inc
aad
imul
sub
icebp
pop
jecxz
xlat
ret
pushaw
les
bound
and
sub
add
pusha
jmp
idivl
jo
es
das
push
pop
or
jne
clc
sub
loope
inc
push
mov
or
fwait
je
aas
xchg
jp
jge
ja
pop
int
scas
cltd
xor
es
cmc
pop
jp
outsl
mov
hlt
pop
scas
and
out
xor
sbb
insl
cmpsb
cmp
pushf
lods
jmp
aaa
add
and
imul
push
ljmp
inc
js
mov
in
mov
negb
lret
gs
push
out
jae
and
dec
mov
push
cwtl
add
int3
outsl
loop
push
add
push
fnstenv
arpl
in
cmpb
cltd
mov
push
call
fstps
fiadds
adc
add
adc
pop
adc
inc
jg
jne
out
or
mov
and
mov
inc
fsubrl
jecxz
mov
fisttps
xchg
mov
fs
movsb
or
addr16
cltd
mov
dec
notb
mov
pop
adc
inc
stos
cmp
loopne
paddusb
add
outsb
cmpsl
ret
mov
xchg
aaa
cmpsb
pop
cli
out
adcl
dec
mov
jg
push
adc
mov
xchg
and
outsl
subl
insb
xchg
jmp
lea
xor
cmc
xchg
loop
fs
sbbb
add
adc
pop
stc
mov
lods
inc
outsb
add
adc
out
xchg
mov
shlb
cmp
loop
jnp
pushl
cltd
xor
lea
imul
lock
mov
lahf
ret
iret
mov
sub
lods
sbbb
push
sub
xchg
push
lds
out
int
in
xchg
and
imull
adc
xchg
shl
push
test
pop
jae
and
jge
xor
test
dec
jns
fidivs
mov
sarb
sub
or
mov
lds
aad
pop
and
sbb
mov
push
pop
push
stos
aaa
jecxz
push
cmp
into
pop
lcall
adc
rol
ds
mov
pop
popa
cli
test
sub
cli
mov
ret
add
insl
xor
and
notl
test
in
dec
mov
sti
inc
in
test
in
xor
add
or
xlat
gs
sbb
pop
scas
lock
fcomps
ret
out
lret
add
in
add
popa
or
xor
dec
jge
ds
ljmp
mov
push
rorb
lea
notb
lea
out
gs
mov
dec
jge
lods
out
add
gs
movsb
pop
xor
pop
ja
test
das
or
push
jbe
jns
cmpb
pop
sahf
or
cs
xor
sbb
mov
inc
popa
out
xchg
and
or
stos
inc
jno
or
jl
push
jne
insb
push
add
xor
and
sub
icebp
insl
lahf
loopne
sbb
data16
ficoms
insb
aaa
and
aas
push
xchg
ds
icebp
cmpsb
and
xor
pop
xor
sti
sar
addl
clc
ss
cli
out
fs
loopne
xchg
adc
iret
testl
push
pusha
and
mov
or
out
mov
mov
sbb
out
pop
xor
loope
jno
add
movsl
cmp
repz
stos
mov
out
mov
mov
lds
repz
adc
jb
test
das
cmp
sbb
pop
sub
pop
xor
xchg
ja
lret
fisubl
aam
test
mov
fwait
pop
sub
rcrb
lret
shlb
in
xchg
imul
adc
sbb
enter
push
rcrb
mov
lods
and
cld
xlat
outsb
add
sbb
imul
push
cmp
mov
inc
or
jl
inc
fdiv
jb
xchg
pop
scas
xchg
stos
sub
jp
push
addb
push
mov
mov
and
cmp
sbb
xor
pop
cltd
and
insl
ja
das
test
mov
dec
out
add
ret
jnp
sbb
into
insl
add
outsb
and
imul
inc
mov
or
fs
aad
insl
loopne
pop
xor
or
push
mov
lretw
xchg
xorl
sub
xor
fbld
jmp
push
lds
dec
pop
call
or
mov
mov
lret
fnstsw
jbe
jo
sarl
and
scas
daa
lea
stos
push
xchg
fdivl
in
js
jecxz
fdivrs
inc
cmp
mov
dec
in
pop
cmp
jmp
lea
scas
push
shll
jge
das
jne
nop
jl
out
or
aam
ret
jb
pop
or
andl
into
xorb
imull
cmp
adc
js
mov
in
cs
and
pop
ret
pop
repz
dec
sub
cmp
mov
add
xor
stos
add
push
lea
xor
hlt
fscale
aas
xor
popa
and
add
mov
mov
pop
pop
mov
sub
testl
js
jecxz
test
sub
mov
cld
or
xchg
mov
or
lds
dec
inc
imul
leave
sbb
mov
sbb
push
outsb
lods
jns
dec
iret
outsb
push
fsubrp
jnp
rol
rcrb
jp
gs
pop
mov
add
scas
push
inc
icebp
adc
test
inc
cmpsl
fisttpll
and
add
sbb
lret
pop
insb
and
les
push
pop
stos
scas
mov
dec
mov
mov
or
dec
push
sbb
xchg
push
cmc
in
jmp
adc
or
call
shrl
lret
xchg
jne
pop
add
dec
sbb
jg
fucomi
cs
push
inc
fbld
mov
daa
shl
mov
inc
mov
test
push
push
aad
scas
negb
scas
add
push
xlat
repz
test
aas
pusha
sbb
mov
fwait
cmp
sub
ljmp
or
cld
lcall
in
mov
mov
rolb
lods
dec
add
inc
cmp
ret
sub
xchg
iret
pop
cltd
sarl
push
movaps
xlat
dec
sbb
repnz
mov
rorl
push
fucomp
mov
cmpsb
jae
stos
add
xchg
sub
mov
icebp
inc
into
and
mov
add
cmp
cmp
adc
push
or
add
mov
jmp
addr16
push
call
or
mov
xchg
and
or
lods
sub
xor
cs
mov
mov
cmp
add
jno
outsl
scas
mov
adc
js
pop
stos
inc
std
xchg
pop
push
xchg
jno
jbe
push
mov
addr16
xchg
jo
das
sbb
push
mov
dec
loopne
clc
sub
jo
xchg
mov
mov
sbbl
sbb
jmp
sbb
cli
dec
pop
cli
mov
xchg
xchg
pop
in
ja
cltd
enter
call
sbb
movsb
inc
and
mov
sti
dec
fdivl
sbb
outsb
pop
dec
lcall
loopne
call
xor
out
add
rcrb
xor
jne
push
adc
xchg
in
cmp
cmpsl
in
fimull
fdivl
lods
jmp
mov
pop
lods
mov
cmp
fsubr
cmpsl
mov
in
mov
imul
pop
je
popa
xor
fidivrl
ret
xor
cmp
sbb
dec
movsb
movsb
mov
popf
aad
sub
mov
xor
outsl
cld
or
in
inc
mov
dec
add
ret
pop
jno
fcompl
in
and
jns
xchg
mov
leave
sbb
sbb
jl
arpl
insl
les
xchg
add
dec
repnz
or
sarb
jb
in
inc
xchg
fsubrs
jecxz
repnz
lret
push
mov
repz
add
and
bound
or
push
loopne
pop
int3
loopne
and
push
sub
cmp
inc
dec
pop
xchg
fs
inc
data16
lahf
mov
mov
adc
outsb
xchg
xchg
and
mov
insl
add
add
ds
enter
cmp
aaa
mov
mov
shlb
dec
sbb
lret
hlt
mov
sbb
cltd
mov
jle
and
adc
mov
fstl
push
inc
xchg
cmp
in
fmul
in
cwtl
mov
xchg
jno
xor
add
lret
in
je
or
cltd
cmp
mov
cld
mov
cltd
sbbl
mov
data16
xchg
shll
pop
and
xlat
hlt
out
cmp
add
jno
roll
mov
scas
pop
pusha
stc
cmp
jge
les
inc
sbb
popa
pop
enter
cmc
cmp
sub
mov
xor
cmp
dec
xlat
push
dec
sbb
jae
sub
adc
mov
addr16
and
jmp
xor
lea
test
into
stos
jne
push
push
and
loope
mov
xchg
mov
add
inc
adcb
fs
mov
sub
bound
les
in
xchg
mov
fwait
je
ret
fidivl
and
push
lcall
inc
xlat
inc
cld
roll
bound
xlat
insb
cmpsl
xor
cvtps2pi
daa
jmp
aad
adc
xor
int
popf
leave
sahf
xchg
aaa
test
inc
jae
xor
scas
mov
fs
cs
push
and
fistps
jo
leave
test
adc
sahf
xchg
dec
ss
int
jns
stc
test
adc
push
push
fbld
xchg
inc
mov
jecxz
cmp
shrl
sti
and
add
push
inc
cmpsl
xor
call
loope
xchg
adc
sbb
push
xor
or
jecxz
faddl
sbb
fwait
bound
dec
mov
fs
mov
push
jno
push
sub
or
clc
push
mov
mov
push
pop
imul
xor
ljmp
call
imull
xchg
adc
mov
pop
xor
jmp
push
add
xchg
xor
das
insb
sub
sbb
push
push
xor
jg
push
xchg
cmpb
add
gs
mov
bound
push
daa
sub
cmp
pop
enter
mov
dec
stos
call
adc
lods
orb
lock
sub
dec
xchg
rcll
leave
cs
push
out
mov
xorl
aad
cmc
push
ret
ds
out
lods
inc
and
jp
push
lret
jb
loope
movsb
mov
rorl
mov
xchg
xchg
sbb
or
cmp
pushf
mov
fidivs
lods
lods
lea
push
mov
aas
call
loope
xor
adc
lds
jno
mov
xchg
push
push
jge
pop
mov
mov
sti
xchg
sbb
sbb
cwtl
jno
daa
mov
fisubrs
test
adc
xchg
cld
sbb
lcall
enter
movl
sbb
orb
icebp
sbb
pop
sar
mov
scas
jg
or
dec
adc
addr16
jp
inc
out
out
test
fsts
arpl
aas
xchg
adc
hlt
or
xchg
aaa
xor
call
aas
dec
push
cltd
xor
lods
cmp
and
or
mov
dec
outsl
cld
imul
das
cmp
sub
les
pop
bound
xchg
outsb
fdivp
scas
mov
pushf
push
pop
push
or
fildll
or
clts
push
xchg
adc
dec
mov
out
or
nop
xlat
lock
xchg
bound
push
push
cs
mov
mov
push
imul
sub
mov
shrb
aad
pop
sbb
or
in
sti
adc
or
or
ja
jne
sahf
xor
int3
adc
sub
or
mov
mov
andb
mov
xor
pop
sahf
mov
cmpsl
repz
jp,pt
int
cmp
add
mov
les
pop
loopne
imul
movsb
or
xchg
jo
jle
jae
sub
mov
out
or
xor
int
adc
hlt
sub
shlb
pusha
mov
pushf
pop
mov
sbb
cmp
jmp
fists
sub
fstl
push
sbb
mov
xchg
mov
in
bndstx
imul
dec
fsubrp
in
jp
inc
and
jmp
aad
sub
in
dec
sub
xchg
fldenv
cwtl
daa
imul
sub
lahf
and
mov
xchg
shlb
mov
repz
jnp
mov
lcall
fldl
xchg
inc
jge
sub
addr16
je
ss
mov
cmpsb
push
push
int3
icebp
jp
daa
pop
lcall
pop
xor
fistl
int3
mov
inc
sbb
xchg
cmp
outsl
jne
sbb
addb
xchg
xchg
xchg
stos
rclb
int
ret
repz
shll
sbb
mov
dec
add
les
je
inc
sub
inc
gs
pop
sub
pop
jb
sahf
dec
xor
popf
stos
imul
ds
nop
outsb
imulb
pop
dec
dec
cmp
test
popa
je
movsb
xchg
incb
mov
imul
or
mov
inc
fisubs
fsubl
jo
pop
shrb
clc
and
and
mov
cmp
cmp
dec
jge
addr16
mov
push
sbb
shll
cs
addr16
out
enter
loope
test
in
cmp
push
cmp
andb
jae
sub
bound
repz
dec
push
leave
fs
xor
fldcw
in
test
jl
dec
sahf
js
or
sub
into
adc
fadds
push
out
sbb
das
into
das
aas
int
icebp
sub
outsl
pop
adc
dec
mov
xchg
mov
test
sbb
dec
call
mov
mov
mov
mov
xchg
cmc
outsb
or
pop
or
sbbb
shr
aam
push
jnp,pn
inc
xchg
lret
mov
cmp
call
int
mov
les
mov
xor
inc
pop
push
scas
add
sbb
cmp
inc
pop
aam
mov
out
jmp
and
and
fcompl
pusha
add
popa
stos
out
jp
js
out
lea
xchg
jmp
incb
aam
rorl
repnz
mov
stos
not
leave
repz
rcr
sub
and
xchg
dec
ljmp
aaa
pop
mov
dec
insb
sub
test
popa
sahf
ljmp
and
and
fiadds
add
mov
iret
out
sbb
jae
incb
push
mov
add
jb
sub
arpl
mov
add
std
imulb
adc
in
das
outsl
sub
mov
xor
movsl
pop
aas
insl
pop
push
adc
mov
dec
dec
scas
loope
sbb
fildl
add
stos
push
in
test
in
push
and
adc
xor
add
mov
cmpsb
stc
add
sub
lods
mov
cmpsb
and
mov
mov
mov
bound
ja
xchg
idivb
ficoms
xor
enter
les
repnz
pop
push
cmc
sarl
push
popf
push
and
xor
push
popl
add
and
aaa
shl
imul
adc
lds
and
and
inc
scas
je
and
adc
or
mov
push
add
out
mov
fnstsw
xlat
push
cmpsb
fdivs
adc
mov
mov
sbb
pop
sarl
rol
sub
mov
xor
adc
cmp
aaa
inc
bound
outsl
aas
mov
lods
inc
mov
imul
xor
pop
cld
mov
mov
loop
out
mov
not
div
sahf
or
mov
popw
lret
ljmp
aad
loop
in
in
loopne
mov
pop
cmc
jge
and
adc
mov
lcall
dec
loope
sub
int3
sub
mov
lods
add
adc
xchg
in
stc
xchg
scas
push
sahf
cmp
fwait
lea
mov
pop
add
bnd
mov
sub
lret
popa
mov
popa
sbb
call
jnp
pop
xor
dec
sbb
pop
inc
sub
shll
leave
pop
jnp
stc
mov
xchg
add
cmpl
jne
or
test
sub
jns
test
mov
xlat
add
test
dec
xchg
test
lret
inc
jns
mov
and
sub
push
outsl
incb
daa
pop
sbb
arpl
in
pop
enter
pop
cmp
movsl
cmpsb
or
mov
add
testb
and
iret
fildl
sub
pop
ja
dec
mov
pop
cmp
sbb
lret
sti
movsl
mov
mov
xor
scas
movsb
mov
xchg
jg
sub
aas
setns
in
out
mov
push
jns
sub
popf
lea
mov
mov
andl
pop
out
cmp
adc
js
xor
mov
call
xor
adc
ss
ljmp
inc
fs
dec
cmp
mov
idivl
mov
cltd
push
inc
dec
neg
mov
push
jecxz
jl
add
mov
cmpsl
mov
lods
or
dec
inc
inc
sti
xchg
mov
fsts
adc
sub
lds
and
insb
test
out
stos
inc
int
jl
mov
fidivs
fsubrl
or
mov
xor
popa
mov
and
xor
jmp
xor
aam
cmp
repnz
lret
rcrb
addr16
popa
mov
cld
jns
imul
push
jmp
cltd
jae
mov
rorl
es
sub
jecxz
sub
push
fmull
imull
cmc
sub
or
lods
add
ret
cmpsb
pop
out
adc
mov
lahf
add
dec
pop
int3
sbb
jb
sub
jg
adc
jae
ss
xchg
add
ss
out
lds
addr16
jp
mov
mov
repnz
cmp
xor
xor
inc
sub
or
mov
addr16
lods
fdivl
into
enter
pusha
lcall
mov
push
mov
mov
push
dec
fidivs
cwtl
sti
aas
mov
mov
adc
test
inc
ficomps
add
cmp
fwait
in
mov
inc
inc
sub
xor
dec
mov
xor
fiaddl
mov
mov
loopne
or
testb
aad
jno
mov
jp
xchg
pop
add
pop
xchg
xchg
adc
xchg
and
and
jl
clc
lcall
and
add
imul
out
jne
dec
cmpsl
insl
inc
mov
jo
outsb
mov
pop
scas
xor
push
fsts
sub
repz
test
mov
or
push
ret
fcoml
fsubrs
mov
xchg
je
icebp
cmp
mov
in
mov
pop
outsl
push
lcall
in
fwait
cld
inc
fwait
xor
push
lods
and
xlat
mov
mov
lods
pop
cmp
dec
mov
mov
add
shl
enter
jl
inc
in
fimuls
cmpsb
cmp
je
xchg
or
cmp
add
push
mov
pushf
inc
in
jb
leave
lret
sbbl
and
rorl
mov
inc
loop
call
cmp
cmp
sbb
mov
adcb
jl
push
leave
mov
mov
mov
cwtl
pop
dec
xchg
push
dec
mov
fmull
lahf
dec
push
jg
and
xchg
ljmp
insb
sbb
lret
imul
aaa
or
stc
aam
and
pop
das
xor
push
call
xchg
popa
repz
jo
popf
icebp
jp
sbb
adcb
dec
dec
mov
xor
ds
dec
addr16
push
aas
idivl
repz
insl
or
repz
inc
pop
sarl
or
lret
sbb
add
test
adc
sbb
push
outsl
ds
jmp
jg
stos
lds
dec
out
xchg
mov
jp
std
stos
je
sbb
push
or
imul
cld
push
mov
fxch
jge
test
aaa
sarb
sbb
test
loopne
aad
leave
push
xchg
mul
addb
lds
adc
lds
ds
mov
push
sub
add
adc
fistps
push
icebp
xor
ja
xlat
lods
xchg
pushf
sbbl
mov
hlt
mov
add
test
subb
and
xchg
mov
clc
cmpps
and
loop
xchg
sub
push
daa
inc
cs
out
xor
daa
jbe
pop
insl
addl
xchg
mov
outsb
decb
mov
popf
push
mov
jp,pt
test
add
test
jle
jmp
enter
iret
call
bt
add
insl
in
xchg
add
je
mov
mov
fcmovb
mov
jle
pop
or
mov
hlt
rolb
jmp
pop
mov
negl
loope
jne
inc
and
cmp
xchg
outsl
pop
and
sub
fcoms
fdivl
ret
push
ftst
pop
loopne
mov
outsb
dec
pop
aaa
push
xchg
xchg
mov
xchg
lret
cmp
icebp
fisttpll
pop
out
xchg
push
int
in
fildll
add
mov
into
aas
adc
adc
inc
adc
xor
dec
test
lods
cli
out
dec
fcoms
push
jno
or
adc
out
inc
popa
sbbl
xor
outsl
jmp
movsl
mov
imul
loope
pop
cmpsb
push
dec
test
push
sub
inc
xchg
in
pop
adc
sub
clc
imul
lock
push
out
cmpsl
orb
sub
adc
adc
dec
lea
jno
and
xor
cli
mov
fbstp
setle
iret
mov
mov
mov
fistl
or
or
push
inc
out
ja
dec
fsubs
inc
push
sub
xchg
sbb
lahf
mov
sbb
mov
mov
mov
gs
pop
popa
jae
leave
xor
and
mov
stc
daa
lcall
adc
or
out
test
cmp
mov
inc
pop
sub
adc
xor
pop
pop
ljmp
scas
aam
popa
rorb
imul
js
jbe
aas
dec
add
fstps
or
cmp
nop
or
in
inc
insl
mov
arpl
push
les
sar
sbb
pop
sub
outsb
xlat
jge
imul
pop
aam
jo
sahf
xchg
int3
push
sbb
icebp
push
fdiv
mov
inc
test
add
push
cltd
fs
add
mov
ret
sub
loope
std
or
mov
int3
jle
out
inc
xor
int
inc
ss
dec
int
test
lret
pop
mull
and
and
hlt
cmp
out
sbb
jb
add
fnstsw
ficomps
jecxz
mov
dec
cld
mov
into
cmpsb
mov
fldcw
mov
add
xorl
movsb
rorb
and
test
jp
jmp
mov
jp
xor
pop
adc
xor
bound
daa
mov
lods
nop
inc
fadd
iret
xor
test
or
repnz
xor
data16
ret
mov
int3
loope
jecxz
xchg
sub
push
inc
cli
or
xchg
xchg
xchg
sub
insl
xchg
int
mov
inc
idivl
lret
fisubl
or
outsb
loope
lods
adc
or
xor
xor
bound
cs
pusha
sub
ret
outsb
gs
out
pusha
pop
inc
or
pop
repz
jl
xchg
cmpl
sbb
mov
jno
out
mov
dec
push
jl
data16
adc
mov
dec
push
into
jns
adc
push
and
es
dec
icebp
xchg
push
inc
stos
cli
pop
inc
cmpsl
lds
jne
aam
dec
pop
imul
cltd
mov
cs
fldt
or
mov
mov
daa
lcall
xor
sbb
subl
out
leave
notb
call
sub
inc
fdivl
hlt
mov
add
aaa
rclb
lods
sbb
pop
xchg
pop
dec
inc
and
mov
addb
sbb
jo
sbb
mov
add
jnp
cs
subl
sub
shll
jne
jns
mov
daa
enter
lea
pop
sbb
inc
fsubr
out
dec
and
nop
xor
pop
js
inc
sub
pop
adc
rclb
mov
pop
outsb
test
imul
stos
fs
mov
inc
pop
outsb
lret
mov
xor
cltd
push
lock
cmpsl
outsb
cld
inc
add
pop
inc
insb
popf
pop
dec
dec
fst
or
xchg
repz
lret
push
test
adc
mov
std
pop
repz
je
je
or
inc
fiadds
jae
mov
pop
lahf
push
test
in
stos
outsb
adc
jno
xchg
cmc
es
mov
add
and
int3
arpl
lret
push
pop
push
push
lods
or
inc
sbb
out
mov
out
mov
jecxz
xor
ja
stos
data16
dec
or
cs
jbe
jecxz
mov
or
testb
mov
mov
cwtl
push
jo
aaa
mov
mov
cli
scas
icebp
or
push
insb
and
jle
pop
ljmp
rcll
lods
add
mov
xor
xor
jmp
or
roll
jnp
push
sub
enter
inc
pop
mov
shrl
push
push
xchg
sub
loope,pn
idivl
imul
cmp
cmp
jmp
ds
aaa
sub
cmpsb
addr16
dec
imul
out
sbb
mov
test
repz
stos
pop
xchg
and
movsb
fadds
in
inc
je
ds
and
push
cmp
sahf
cli
mov
mov
in
addl
or
mov
lret
insl
add
cmpsl
in
and
jne
inc
mov
push
lock
jns
jno
lds
popa
clc
cmp
jae
xor
pop
scas
and
xchg
xor
lahf
test
xlat
xor
fimull
aad
or
test
fnsave
xchg
mov
inc
sti
xchg
jns
mov
fimuls
jge
cmp
cltd
imul
outsb
out
rorl
mov
testb
leave
adc
add
daa
xor
mov
push
xchg
iret
jb
stc
jno
sub
mov
fisttps
lea
pop
dec
and
mov
sub
addb
or
call
ret
arpl
sub
mov
xchg
test
stos
js
fmul
cmp
jbe
and
lea
decb
dec
push
mov
sub
and
xor
fucom
int3
mov
or
bound
iret
jmp
mov
movsl
sub
or
mov
loop
fisttpll
sbb
cwtl
and
cltd
or
xchg
insb
xlat
cmpsb
lea
mov
mov
scas
xchg
xor
arpl
jb
mov
pop
lds
xchg
sbb
subl
shll
movsl
outsl
daa
lahf
out
xchg
ret
les
pop
out
mov
shll
mov
int3
pop
sub
jbe
mov
inc
scas
mov
int3
add
test
sub
mov
mov
push
mov
mov
sub
aad
in
aam
mov
xchg
fstpl
data16
fsubrs
in
test
lret
rolb
cld
dec
sbb
mov
dec
mov
add
inc
and
mov
mov
in
ss
popa
adc
add
xchg
clc
movsb
push
pop
lea
fidivrl
rorl
and
enter
pushf
pop
push
loop
add
mov
faddl
out
fdivrs
push
aas
sarl
movsb
clc
bound
in
mov
xor
in
dec
fists
into
fs
adcl
or
jo
xchg
call
dec
mov
sub
pop
mov
imul
fcomps
cmpsl
mov
scas
les
or
out
in
leave
mov
test
pusha
mov
mov
mov
sub
jle
sahf
and
mov
push
movsl
in
insb
and
fimuls
test
testl
loopne
fnstenv
call
shll
insl
push
es
xchg
pusha
jp
nop
ljmp
inc
sti
inc
arpl
stc
add
daa
jg
or
sub
aam
sbb
lock
xchg
add
out
xchg
sub
pop
mov
push
jne
shll
sub
sbb
xchg
push
ret
xchg
testl
aam
loope
fadds
call
movsb
pop
shld
lret
sub
aad
xchg
xchg
icebp
ds
mov
cmp
lock
jp
xchg
lods
and
sbb
in
bound
adcl
push
outsl
or
mov
push
or
push
sub
pop
hlt
pop
ja
dec
mov
ret
out
xchg
pop
xchg
inc
sub
pop
and
mov
int
lds
jo
arpl
sub
movsl
fsubrs
mov
pop
push
pop
lahf
sub
xor
and
mov
xor
push
xlat
imul
lret
test
mov
mov
insl
test
rcrb
add
outsb
xor
shrl
loopne
xor
inc
add
cmpsl
jno
subl
cmp
mov
inc
fucomi
xor
adc
dec
loop
and
int
cmp
out
or
xor
fstpl
xor
jecxz
pop
bound
testb
cmp
femms
push
mov
loop
push
sub
pop
and
mov
mov
insl
add
ret
xor
mov
jmp
stc
rorb
mov
mov
mov
lods
ja
xchg
iret
sbb
xchg
pop
out
lea
mov
inc
into
std
inc
push
out
lret
add
mov
addr16
inc
push
out
insl
inc
scas
pop
ja
in
xchg
or
loopne
add
sbb
adc
cmc
je
adc
cmp
xchg
cwtl
xlat
inc
popf
mov
iret
bound
arpl
fwait
cmpsl
addr16
xor
lahf
or
popf
stc
adc
divl
add
inc
cmpsl
pop
xchg
push
push
movsl
loopne
mov
aaa
daa
inc
repz
decl
mov
push
pop
and
jno
out
lea
or
std
cltd
mov
out
jns
dec
dec
fldcw
subl
mov
xor
and
push
sahf
xor
shlb
jbe
mov
out
inc
cltd
xor
or
int
ret
add
rcrl
aam
dec
xlat
leave
dec
xchg
sbb
or
mov
aaa
push
lock
scas
inc
cltd
shrb
testb
ljmp
cmp
push
adc
mov
push
xor
xor
jbe
icebp
mov
mov
mov
aam
popa
push
icebp
movsl
inc
cmp
test
lods
ja
push
and
inc
rorl
mov
jno
push
or
dec
cld
leave
pusha
idivl
out
popl
xor
mov
test
fmulp
xor
nop
sahf
jne
sbb
cmpb
or
stos
fimuls
mov
mov
and
sbb
lret
and
out
mov
xor
adc
sub
pop
and
das
jg
xchg
or
adc
push
lea
adc
push
hlt
add
xchg
jl
push
in
stos
rcrb
sub
jbe
xchg
cmpsb
loope
cld
xchg
sub
or
inc
dec
icebp
jne
xchg
fcoms
sbb
mov
outsl
mov
push
mov
or
stos
test
mov
inc
inc
inc
popf
loopne
aam
das
push
jp
cwtl
mov
add
cwtl
jp
pop
ds
pop
aaa
push
aad
stos
mov
mov
add
inc
fsubl
aaa
arpl
jnp
xor
nop
cwtl
or
jl,pt
fists
insl
scas
jno
xchg
cmovnp
fisubl
fwait
xchg
sbb
or
stos
sub
sbb
push
gs
xor
jl
mov
mov
add
out
sbb
daa
and
add
jnp
out
push
fsubrs
pop
sub
loope
pop
adc
dec
cmp
out
mov
add
cmpsb
cld
xchg
int
movsl
int3
sbb
pusha
jmp
fidivs
aaa
ss
in
in
push
movsb
cli
test
adc
fs
enter
sbb
and
dec
dec
sub
sbb
int3
fcom
lock
pop
rorb
sbb
in
jle
inc
popf
sbb
cmp
push
imul
ds
out
xor
push
aam
addl
orb
xchg
mov
push
dec
and
es
stos
test
mov
popf
lods
int3
sub
pop
add
ljmp
sub
scas
loop
pusha
jns
repz
lret
xlat
mov
xor
mov
mov
mov
mov
fstps
xlat
orl
movsb
gs
shl
iret
sbb
int
pusha
inc
fildl
pop
or
cmp
pop
and
sarl
insb
fdivrp
adc
jbe
xchg
movsb
mov
inc
sbb
add
mov
sbb
fildll
or
sti
shl
jo
mov
mov
out
mov
fiaddl
mov
in
jp
ja
shrl
inc
pop
push
push
pop
cli
xchg
hlt
xchg
movsb
push
and
test
hlt
lret
clc
sarl
fnstenv
pusha
movsl
push
dec
pop
roll
std
and
mov
cli
pop
insl
xchg
inc
pop
icebp
in
pop
cmp
ret
aas
loope
or
pop
movsb
pop
push
or
leave
xor
and
mov
push
cld
push
pop
xor
inc
pop
into
in
and
xor
cmpsl
cltd
xor
ljmp
xchg
scas
enter
inc
cmc
mov
sub
repz
icebp
rcr
jge
or
adc
adc
iret
xchg
shl
and
xchg
add
inc
jl
cltd
lods
arpl
xchg
movsb
add
xor
adc
mov
call
mov
push
inc
fimuls
add
or
movsl
sbb
pop
call
shrb
mov
sbb
push
addr16
cmp
pop
scas
aaa
dec
fcomp
outsl
jns
stc
xchg
outsl
cmpsb
jns
loop
push
push
mov
xchg
stos
mov
pop
imul
aam
xlat
mov
pop
push
out
mov
out
ja
pop
dec
out
jbe
pop
cmp
inc
aam
insl
outsb
fs
push
xchg
repz
lahf
mov
js
push
xor
ficoml
push
icebp
and
add
adc
imul
push
pop
xorb
cli
adc
in
sahf
dec
inc
cltd
cmp
daa
inc
and
mov
out
outsb
aam
ficomps
les
in
xchg
cltd
jo
mov
negl
add
cmp
mov
insb
repz
or
inc
push
test
leave
mov
jnp
rolb
inc
fucom
jl
push
imul
xor
pop
imul
mov
jns
mov
jns
sbb
add
in
mov
add
jne
nop
mov
mov
test
add
jmp
and
sub
cmp
dec
push
mov
xchg
out
inc
jge
xchg
cmpl
mov
pusha
popa
lods
mov
lods
clc
mov
repz
jle
inc
cmp
stos
xor
fwait
rcrl
scas
sarb
iret
in
and
xor
unpcklps
push
push
pop
scas
add
jle
add
lods
test
shrl
enter
jp
push
xchg
mov
cmp
jb
call
mov
sub
test
inc
repz
sbbl
testb
cltd
push
inc
cld
xchg
adcl
test
cmp
sub
int
int
test
cmpsb
lahf
lret
mov
iret
jbe
and
std
mov
and
hlt
test
adc
cmp
scas
xchg
push
xchg
bound
ljmp
shll
dec
and
inc
fldcw
push
dec
jno
popa
clc
addr16
sub
or
fldt
inc
push
push
addr16
push
pop
push
cwtl
pusha
dec
pusha
mov
pusha
jp
cmpsl
inc
es
or
mov
scas
inc
xchg
jmp
dec
cmpsl
stos
push
lods
and
xorl
aas
lret
out
lods
jmp
push
outsl
inc
dec
loopne
nop
es
outsl
movsl
inc
sbb
in
xor
repnz
adcb
cmp
sbb
or
ret
ja
jo
lcall
mov
and
add
lcall
in
push
dec
jge
push
inc
lds
pop
sahf
or
insb
xchg
ja
lds
inc
frstor
dec
xor
test
add
test
and
push
loope
popa
adc
pop
and
mov
mov
dec
fists
add
dec
shrb
enter
push
in
ljmp
jge
dec
decb
loopne
mov
insl
shlb
mov
mov
imul
push
mov
xor
pop
push
push
imul
sub
pop
add
loop
push
dec
pminub
pop
insl
jo
or
das
mov
mov
clc
push
push
sub
cmp
rcl
out
pop
das
cwtl
lret
jnp
mov
test
lret
sub
dec
idivb
mov
call
orl
stc
mov
push
cmp
sub
arpl
insl
pop
jae
push
jb
push
mov
and
ljmp
jno
test
inc
test
popa
in
push
nop
sysenter
sbb
lods
dec
push
sarb
scas
mov
adc
sub
rcr
jo
xor
dec
xor
ret
pop
enter
and
pusha
negl
mov
push
mov
push
out
pop
scas
das
mov
push
lock
scas
data16
cmpsl
out
add
andl
mov
mov
aas
subl
mov
sbb
mov
ret
outsl
mov
sbb
adc
xor
cs
mov
mov
sbb
jle
lea
lahf
popf
mov
ror
loope
stos
rolb
aad
push
mov
mov
andl
orb
lea
or
sbb
jl
js
or
jbe
retw
in
in
mov
and
jmp
daa
xchg
leave
jno
insl
call
jg
sub
ja
cmp
mov
add
sti
sbb
lcall
xchg
je
ja
aam
fnstcw
jae
rcl
repnz
movsl
in
std
or
or
and
popf
mov
dec
fstps
neg
mov
inc
sub
fbld
in
mov
sahf
push
add
icebp
push
and
mov
aad
sahf
xlat
cmpsl
xor
or
iret
xor
lret
push
cmpsb
mov
jno
cld
jnp
sub
ret
jp
mov
notl
xor
or
xchg
push
mov
cmp
mov
clc
mov
dec
mov
xor
jmp
cmpsl
clc
cld
int3
scas
fadds
mov
pop
jmp
sub
jmp
mov
ret
addl
add
pop
daa
cltd
and
cmpsb
xor
cmpl
pop
mov
and
pop
lahf
jle
or
lods
out
rcrb
aad
sub
loope
jp
add
loop
jne
je
dec
xlat
mov
push
sbb
jge
push
into
push
sti
test
mov
dec
xchg
icebp
adc
cmp
or
cmp
mov
pop
fists
xchg
jo
and
sbb
xchg
fcmovnbe
lods
call
cmc
movsb
sub
mov
fistpll
push
push
cwtl
mov
mov
mov
stos
fcmove
pop
pop
or
dec
cmc
pop
cmpsl
test
mov
pop
inc
rcrl
int3
fdivrp
or
je
mov
sub
insb
or
loopne
push
out
pop
inc
or
fsubl
outsb
sbb
shrb
loop
sub
xchg
mov
mov
in
jle
lret
cltd
test
stc
inc
into
gs
push
add
dec
cld
mov
push
or
insl
sub
xor
xlat
imul
or
or
xchg
scas
or
icebp
pop
mov
dec
push
cli
xchg
sub
lcall
into
or
imul
and
push
xor
sahf
xchg
pop
ds
ja
xor
inc
inc
adcl
shlb
popa
cltd
es
int3
stos
pusha
fisttpl
jno
xchg
aaa
sub
ds
lahf
clc
push
dec
mov
movsb
mov
psubsb
xchg
fisttps
mov
ret
adcb
mov
ficompl
icebp
mov
add
es
outsb
mov
stc
pop
mov
sar
xlat
inc
test
scas
fs
scas
inc
jb
aam
fidivrs
adc
dec
add
mov
mov
imul
add
mov
cmpl
repz
push
mov
out
mov
push
stos
es
fiaddl
mov
push
mov
les
icebp
sub
xor
hlt
mov
in
mov
es
rcl
rorl
mov
inc
or
in
mov
mov
push
movsl
sub
jg
mov
xchg
mov
sarl
mov
adc
dec
in
je
and
out
lds
and
clc
clc
ja
fists
add
sbb
ss
mov
mov
jecxz
hlt
push
fs
outsl
xor
testb
shr
push
or
jl
jmp
lock
push
sbb
xchg
jno
and
and
insl
fs
inc
pop
jae
dec
jmp
jle
xchg
mov
or
in
mov
adc
dec
out
mov
repnz
clc
and
sub
cmpsb
add
lods
test
or
and
xor
popa
bound
ja
xor
lcall
mov
jge
fwait
push
popa
sahf
ret
sub
pop
out
test
jo
add
fcoml
pop
out
mov
sub
adc
xchg
mov
cmp
mov
or
xchg
mov
outsl
stos
dec
mov
adc
int3
push
mov
adc
mov
and
cmpsl
ja
mov
inc
xchg
push
xchg
in
mov
or
ds
xor
jecxz
push
and
fwait
andb
movsl
xor
dec
int3
pop
push
add
jo
cmp
adc
adc
sbb
pushf
jmp
addr16
and
imul
dec
in
and
stos
inc
xlat
xchg
sub
je
push
mov
pop
jo
mov
adc
mov
adc
xchg
add
enter
dec
inc
testb
bound
lret
push
and
push
lahf
or
daa
arpl
mov
xor
popa
jecxz
lcall
jnp
push
push
mov
sahf
xchg
lods
pop
jmp
ret
mov
lret
add
bound
mov
hlt
jnp
push
out
mov
arpl
addr16
lcall
cmp
je
test
sub
add
mov
jmp
dec
dec
xchg
xchg
cmpsl
into
sub
aad
lock
adc
fdivrl
mov
pop
or
lds
fsubrs
cmp
mov
inc
mov
jo
and
push
jp
add
jno
mov
and
es
aam
mov
mov
pop
outsl
sub
lret
shlb
jne
push
addr16
cmc
aad
cmpsb
inc
sbb
mov
mov
jmp
sub
sahf
sbb
inc
or
mov
xchg
dec
pop
jb
add
aas
dec
adc
mov
data16
pop
mov
sbb
sub
pop
mov
aad
mov
xchg
sub
stc
adc
mov
mov
sbb
cs
stc
popf
push
out
dec
pop
outsl
add
mov
push
sbb
psllq
fldenv
pop
fidivl
fwait
add
and
adc
mov
test
mov
push
dec
mov
pop
das
addr16
cwtl
or
sbb
out
xchg
jl
cmp
add
pop
fwait
sti
shrb
mov
leave
enter
mov
mov
cmp
loopne
ja
jmp
adc
mov
bound
int3
mov
outsb
mov
push
sbb
les
xor
mov
pop
scas
in
in
mov
loope
lret
sub
fwait
push
jo
adc
xsha256
pop
sub
dec
sub
repnz
push
dec
jl
pop
mov
sbb
in
idivl
sub
movsl
sbbb
int3
bound
sub
cmc
stos
fdiv
fcoml
mov
out
les
push
shll
lret
xchg
adc
call
loope
sbb
cltd
pop
lcall
out
clc
or
dec
out
loope
and
inc
iret
addb
xchg
les
fisubrs
sbb
ds
movsl
rcrb
fcomps
rolb
fnstcw
int
cmpb
add
mov
movsl
xor
enter
aam
jg
jl
out
popa
mull
js
jne
cmp
test
dec
std
nop
data16
pop
popf
pushf
inc
pop
cmp
mov
dec
in
out
push
iret
fwait
jne
mov
es
pusha
incl
add
movsb
or
adc
pop
scas
call
inc
arpl
in
sbb
xor
ljmp
cltd
sub
out
in
out
js
or
test
test
sbb
leave
mov
leave
cmp
hlt
pop
add
mov
mov
xor
popf
test
mov
cld
push
and
xor
das
lret
sbbl
stc
mov
loop
xor
daa
adc
mov
mov
add
sbbl
cld
adc
arpl
jbe
xor
fwait
adc
xor
mov
mov
xchg
or
dec
ds
xchg
push
push
dec
faddl
stos
loopne
push
add
pop
fnsetpm(287
repz
adc
loopne
add
pop
xchg
or
sub
icebp
aam
popf
andb
sub
or
mov
popl
loopne
ljmp
pop
arpl
cmpsb
aaa
and
icebp
cli
cmp
scas
out
sti
sbb
xor
mov
inc
adc
jp
adc
xchg
in
jg
movsl
mov
or
int3
mov
push
mov
jg
cmp
popa
cmpb
aas
xchg
pushf
jg
rcr
mov
iret
scas
and
mov
dec
arpl
hlt
test
mov
fisttpll
sub
cmpsl
push
mov
test
shll
nop
sti
mov
xchg
test
fisubl
adc
rclb
push
jns
pop
stos
data16
cmp
test
jno
and
ja
ja
xorl
sub
mov
jnp
push
pop
jae
cmp
xchg
mov
lret
aam
and
les
lock
ret
out
shll
mov
out
shl
and
or
dec
and
xor
fstps
out
addl
xor
cmpb
mov
aas
idivl
and
cmp
jl
or
fildl
sbbb
and
test
shrl
dec
jmp
mov
cwtl
pop
sub
out
jns
pusha
jecxz
xchg
lcall
dec
adc
dec
fsub
pop
loopne
push
mov
lret
mov
inc
fwait
sub
pusha
inc
es
cld
test
flds
divl
pop
out
push
mov
xchg
gs
pop
cmp
xor
aad
adc
sbb
and
xor
pop
aaa
sbb
outsl
mov
push
jbe
test
xor
stos
pusha
xor
or
push
lds
popa
mov
sub
push
push
inc
mov
push
repz
add
call
mov
mov
out
lods
fnstenv
mov
add
loope
cmpsb
sbb
rcrb
in
iret
xchg
stc
test
add
or
rcll
cmp
jnp
aas
mov
rcrb
stos
inc
out
fwait
sti
cmc
inc
xor
xor
pop
cli
dec
mov
sbb
and
addr16
inc
dec
outsb
mov
movsb
stos
pop
frstor
dec
or
ljmp
test
sbb
mov
sbb
xor
divl
mov
xor
sbb
out
mov
ja
mov
adc
stos
sahf
add
out
sub
mov
dec
cmc
dec
aam
mov
popa
out
shrb
mov
mov
mov
xchg
adc
fs
jo
rorb
divl
fsubr
ds
add
inc
ds
loopne
add
xchg
pop
insl
iret
popf
adc
fisttpl
pop
mov
int3
lcall
mov
rorl
test
sub
push
mov
push
push
daa
mov
push
into
mov
ret
xchg
shrb
and
out
ljmp
push
xchg
lods
jne
arpl
sbb
mov
stc
into
daa
gs
push
movsl
xor
jo
push
xchg
loop
dec
jne
add
pusha
ds
mov
cmp
mov
push
loopne
repz
andl
in
pop
fsubr
mov
jg
jle
cs
inc
sbb
sub
pushf
cmp
insl
mov
mov
rclb
push
cli
pop
pop
push
mov
insb
adc
incb
mov
jle
loope
sahf
jbe
push
mov
jne
jp
cmp
dec
xchg
fs
imul
xchg
jecxz
aad
movsl
les
or
lahf
add
shlb
lcall
xchg
ds
sub
lret
test
mov
ds
sarl
xchg
push
push
sub
stos
cmp
inc
push
inc
xchg
hlt
cmp
lods
mov
mov
int
sbbl
aad
sub
inc
pop
mov
xor
loope
mov
aas
pop
xchg
in
insl
lea
out
out
inc
mov
subl
mov
and
aad
loope
stos
out
aas
cld
jmp
cmp
cmp
pop
cmp
loop
mov
testb
fwait
xchg
sub
or
jne
mov
mov
fdivrs
xchg
or
pop
cmp
js
inc
faddl
cmp
jo
arpl
adcl
fldenv
cwtl
mov
int3
inc
add
aad
jmp
dec
mov
sbb
add
js
inc
inc
adc
cmp
lods
int
fstpl
cmpsl
ds
jmp
fildll
data16
push
xchg
aam
loope
fsubrs
xor
imul
push
out
ds
shr
pop
imul
in
and
cmpsb
cmp
pop
loope
sbb
repz
add
imul
mov
sbb
ss
jne
mov
cmpsb
cli
out
aas
jmp
mov
imul
mov
sub
mov
pusha
or
adc
andb
xor
outsl
mov
cli
popa
mov
in
insb
aad
fsubrl
mov
adcl
cmp
lahf
stc
mov
push
xchg
inc
sahf
dec
jae
insl
lods
cwtl
aad
inc
jmp
pushf
mov
lods
stos
jl
sbb
sub
mov
lock
push
mov
data16
mov
fstpt
pushf
movsb
repnz
inc
gs
in
cmp
and
push
out
call
and
test
sub
sbb
sub
pop
cmp
inc
dec
sbb
mov
lret
inc
cmp
fucompp
pushf
sub
add
test
jp
aam
push
aaa
jp
scas
aad
pushf
mov
dec
sbb
xchg
pop
out
aas
or
orb
jecxz
adc
adc
xchg
and
mov
stos
jnp
mov
mov
jns
sub
dec
mov
mov
push
inc
fiaddl
stos
loop
out
pop
mov
fs
movsb
daa
push
xchg
outsb
cli
lahf
sbb
sbb
cwtl
inc
add
clc
cs
push
negl
xor
testb
pop
sti
jno
stos
outsl
xor
mov
insl
pop
jo
jge
data16
or
xor
pusha
cmp
sub
or
mov
inc
inc
clc
jl
push
insb
pop
shrl
mov
cs
jle
je
cmp
jo
xchg
or
bound
xor
add
fnstsw
gs
testl
adc
daa
or
xchg
idivl
fs
dec
clc
cwtl
cld
int
add
test
test
jmp
jecxz,pt
xchg
push
ss
test
cmp
nop
inc
sbbl
loope
pusha
pop
jb
xchg
addr16
jb,pn
loope
push
jecxz
adc
push
xchg
in
lea
xor
in
add
and
mov
inc
push
xchg
shlb
js
cmp
leave
dec
jecxz
mov
ljmp
pop
or
mov
outsl
mov
xor
mov
mov
iret
inc
lahf
push
mov
push
pop
adc
push
sub
insb
push
cmp
mov
jmp
ja
dec
in
js
mov
pop
imul
xchg
adc
cs
pop
pushf
mov
in
mov
aas
shlb
int
jg
xchg
adc
push
add
fwait
hlt
insb
xchg
or
mov
cmp
xchg
push
call
xor
jmp
data16
shr
add
inc
loopne
cmpsl
or
pusha
lret
movsl
test
test
pop
push
nop
outsl
add
int
push
pop
xor
outsb
mov
js
jmp
and
cwtl
sbb
inc
insb
push
xor
pop
gs
fwait
aas
jge
repnz
aad
mov
in
test
sub
mov
das
sti
inc
dec
lods
out
scas
xor
notb
xchg
adcl
add
dec
decb
mov
icebp
xchg
push
and
pop
ret
loop
lea
sub
push
pop
jle,pt
mov
push
nop
scas
add
mov
mov
xchg
inc
jns
out
ds
outsb
dec
fisubrs
aaa
sti
sub
add
lahf
ss
rorl
push
fs
outsl
add
sub
test
sahf
into
adcl
cmp
fmul
stos
add
mov
sbb
push
mov
cmp
xchg
popf
aaa
inc
and
pop
push
sub
push
rolb
lret
loopne
xlat
cs
aad
pop
outsb
sub
aad
jno
aas
mov
jo
scas
mov
jo
mov
stos
and
lock
int3
pop
or
adc
sbb
out
pop
popf
fiaddl
sti
jae
aas
pop
push
scas
mov
push
les
adc
push
js
add
incl
sub
mov
cmp
sahf
xor
xor
out
adc
dec
adc
mov
lds
xor
cmp
push
inc
adc
push
xchg
xchg
ds
repnz
hlt
clc
fiaddl
xor
and
jnp
and
pushf
cli
add
jb
jecxz
jmp
or
cltd
jge
add
or
xor
cmp
inc
decl
cs
or
lock
mov
pop
xchg
jns
jnp
mov
or
es
nop
mov
jl
jp
imul
std
push
xchg
out
or
ret
aam
mov
cs
pop
mov
movsl
in
jne
fdivrl
das
pop
mov
aas
gs
cmp
xor
mov
lock
aaa
cmc
roll
fmuls
popa
mov
jge
inc
loop
test
sbb
scas
insb
test
xchg
hlt
cmpsl
adc
or
inc
xchg
dec
xchg
add
jge
mov
mov
in
push
cmp
xchg
sbb
mov
dec
xor
mov
rclb
or
rcrl
push
jo
fsubrs
ret
stos
jmp
mov
pop
and
in
xchg
imul
icebp
fistpl
in
idivb
int
adc
lcall
sbb
jmp
xor
sbb
jg
clc
cmp
jns
push
movsb
mov
xchg
ret
jns
jne
cmc
xchg
or
inc
fisubrs
lcall
in
lods
lcall
lods
call
cmp
int
stc
adcl
mov
in
xchg
and
out
in
stos
fmull
lret
cmp
shrb
mov
mov
xchg
sbb
sub
dec
leave
fdivrs
xchg
dec
push
push
cmp
sahf
out
imul
push
out
pop
sub
pop
js
add
inc
dec
cmc
xor
pushf
push
loope
or
mov
and
sub
lahf
cld
xchg
dec
lods
pusha
or
add
jnp
ret
push
inc
jne
or
rcl
inc
mov
shll
sub
inc
adc
jns
mov
aam
push
mov
popf
mov
sub
inc
outsl
out
mov
jo
sbb
dec
fdivr
inc
iret
loope
jecxz
mov
mov
and
fmull
fs
sub
xor
pop
dec
sub
pop
out
xor
jae
dec
ljmp
rcrb
js
sbb
xorl
in
adc
sub
sub
jb
scas
push
lcall
pushf
stos
xchg
aas
push
out
pop
aam
sub
icebp
insb
or
pop
adc
stos
jmp
inc
lods
fdivs
insl
jecxz
sahf
insl
cmp
xchg
push
adc
mov
js
int
jne
repz
fldl
mov
es
or
jg
jbe
jb
xchg
jo
or
je
scas
and
jle
aad
or
pop
stos
cmp
cs
popf
or
xchg
or
cs
movsb
cmp
hlt
add
lock
adc
hlt
mov
jmp
test
sbb
pop
mov
lahf
cmp
sbb
fpatan
jge
pushf
cli
add
sub
xchg
add
sub
cli
add
dec
cmp
sub
xchg
push
ss
xor
popf
xor
and
jae
mov
jne
testb
ja
aad
ret
rolb
mov
jp
loope
shlb
cwtl
movsb
and
adc
push
orl
mov
xchg
jae
pop
pop
scas
repz
mov
into
push
push
fldl
fisubrl
mov
jnp
xlat
imul
cmp
xchg
xchg
les
es
and
mov
pop
fldcw
cmp
js
xor
fisubrl
imul
repz
xor
mov
cmp
aad
out
push
sub
push
xchg
sub
outsl
sahf
xor
in
inc
rcrl
and
les
psrad
popa
add
xorl
push
std
cmp
gs
test
push
push
fwait
mov
jmp
mov
xchg
les
or
mov
mov
ja
enter
xchg
shlb
mov
cmpsl
shll
fsubrl
in
ljmp
pop
xor
adc
lret
hlt
pusha
lock
pusha
sahf
jmp
or
push
call
xchg
addl
adcb
xchg
xor
ret
inc
loope
inc
std
stos
xchg
or
lods
addb
xor
std
or
cwtl
out
std
pop
std
std
inc
fs
xchg
dec
fidivs
push
ss
enter
test
lock
idivl
push
movsb
daa
decb
das
xchg
sub
dec
mov
xor
add
jb
das
inc
movl
pop
ds
and
dec
fbld
data16
clc
nop
aaa
iret
fcomps
stc
popf
sbb
shlb
mov
imul
int3
imul
pop
or
add
imul
xorl
ret
dec
pop
out
sbb
scas
cmp
pushf
cli
dec
xchg
aas
mov
mov
rcrl
or
pop
scas
lea
xchg
push
decl
pop
in
xchg
push
xchg
pop
call
dec
cmc
mov
push
ret
test
jbe
inc
test
enter
addl
cltd
cmpsl
sbb
inc
push
xchg
movsb
jmp
popl
xor
lock
mov
in
xchg
aaa
aaa
stos
push
repz
pushf
xor
push
imul
and
pop
std
lret
push
out
mov
add
scas
add
sub
lcall
movsb
pop
fcomps
dec
ljmp
mulb
aas
mov
sub
inc
hlt
mov
jp
movsl
jbe
jle
ret
loopne
mov
sub
and
adc
repnz
cmp
popa
imul
jo
or
hlt
mov
hlt
add
js,pn
jnp
scas
mov
add
bound
jmp
ret
push
nop
daa
inc
inc
mov
xor
fidivs
cmp
in
dec
sbb
lods
out
jae
fistpll
scas
insl
push
ds
mov
pop
test
aam
je
cmp
dec
test
or
rcll
adc
xor
and
xchg
dec
xor
data16
rcll
mov
xchg
push
ss
xchg
sub
in
push
fcomps
in
orl
adc
sbb
cs
sahf
mov
mov
mov
mov
clc
xlat
sbb
xchg
pusha
cmp
push
lea
imul
or
cmp
push
movsl
xlat
adc
pop
mov
clc
cmp
out
xor
ds
xchg
scas
inc
mov
cmp
outsl
out
xchg
sub
mov
aaa
into
inc
add
out
mov
and
or
fmuls
lret
mov
cmp
push
das
sbb
insb
cmp
test
hlt
mov
or
imul
push
roll
hlt
cltd
jo
rcrl
jno
sub
dec
ret
vmread
test
scas
xchg
arpl
push
mov
test
jnp
mov
push
pusha
fldt
mov
ja
cmpsb
mov
shrb
inc
mov
jecxz
imul
lods
test
add
dec
loop
pop
xchg
sarl
ds
ficomps
popa
cmpsb
adc
cmpsb
fwait
shlb
push
subl
jno
test
ret
out
lcall
inc
lret
sub
es
inc
lret
fwait
clc
xchg
data16
test
dec
in
lods
insl
push
or
hlt
pusha
mov
cltd
cli
iret
enter
fcompl
fxtract
iret
push
or
xchg
pop
cwtl
ds
jle
adc
jns
lods
lods
arpl
or
push
imul
out
push
int
push
repnz
je
imul
or
jp
cmpb
jns
js
or
test
ret
mov
pop
mov
dec
dec
stos
sarb
sbb
clc
pmaddwd
stos
dec
leave
jl
sub
mov
pusha
lret
sbb
xchg
jecxz
fnsave
jns
repnz
stos
xchg
adc
ret
add
xor
test
aam
dec
sub
sbb
sbb
xchg
cs
add
lds
mov
xchg
rorb
gs
xchg
sub
loop
cmp
jge
enter
dec
data16
inc
shr
dec
sbb
shl
cmp
mov
and
popa
lret
push
jnp
or
cmp
pop
in
shrl
aam
movsl
mov
call
or
push
sbb
adc
push
sbb
and
mov
pop
mov
xor
andl
movsl
test
cmp
or
cmpb
or
pop
mov
xchg
bound
adc
iret
out
mov
int
stos
nop
lea
xchg
mov
xor
cmp
mov
ret
outsl
inc
mov
dec
mov
add
pop
xlat
test
outsb
mov
daa
adc
mov
rcl
fimull
cmp
test
push
mov
xlat
jnp
cld
push
out
cmpsb
sbb
dec
jb
or
adc
in
sub
dec
add
xor
ficomps
adc
inc
movsl
cli
pushf
push
fildl
sbb
dec
sbbb
xchg
xchg
js
fwait
decl
fsubr
push
or
fs
orb
cld
or
cmpsb
inc
add
xlat
push
xor
fwait
pop
cmp
push
inc
out
fiaddl
leave
push
add
fidivrl
mov
shll
insb
out
out
inc
mov
inc
adc
lcall
cltd
scas
test
xchg
mov
xor
dec
mov
add
mov
xchg
mov
jbe
in
popa
stc
push
xor
mov
fidivrs
sti
fwait
icebp
inc
pop
ljmp
pusha
and
jmp
mov
sbb
xor
mov
dec
movsl
xchg
push
leave
inc
aaa
pop
lods
out
push
sbb
daa
clc
js
or
nop
insb
subl
int
aad
mov
mov
pushf
in
leave
pop
imul
xor
dec
rcrl
or
fnstenv
loopne
push
mov
call
mov
out
outsl
inc
fisttpll
mov
push
or
jle
jns
lahf
jle
adc
sti
fisubrs
inc
fucomi
add
adc
xlat
or
scas
xor
insl
arpl
std
data16
ss
xor
sub
add
scas
dec
sbb
cmp
pushf
andl
flds
pop
mov
inc
hlt
pop
lock
testl
mov
mov
mov
rcrb
mov
test
frstor
clc
test
test
xor
dec
dec
test
cwtl
jmp
movsb
push
out
out
sbbb
sub
cmp
push
push
xor
fcomip
sbb
cwtl
stos
push
inc
sbb
into
cli
adcl
xchg
mov
jecxz
nop
push
daa
mov
jecxz
ss
xor
aam
aas
xchg
xchg
mov
popf
xchg
inc
fcmovb
lret
int
popa
adcl
mov
mov
lahf
data16
insl
xchg
sbb
adc
mov
mov
and
pop
out
movsl
push
lret
xchg
jo
xor
sarl
adc
or
add
and
and
xor
fcoml
jg
hlt
call
repnz
bound
and
xor
leave
dec
and
ds
mov
roll
fsubl
lret
xchg
jmp
mov
adc
jae
mov
pxor
inc
imul
adcl
sbbb
pushf
icebp
popf
push
cmpsl
xor
les
jl
enter
lea
cli
add
je
test
lea
jne
xor
outsl
subb
cwtl
mov
inc
flds
loope
sbb
cmp
xchg
jae
mov
js
or
shrb
sub
xor
xor
adcl
fdivrl
pop
jg
add
mov
je
cmp
or
dec
cli
dec
sub
dec
adc
xlat
inc
lea
mov
fcmovnb
fs
inc
aaa
fwait
jnp
je
fistl
jecxz
int3
add
xor
bound
outsl
mov
shl
repz
cmp
in
sub
leave
pop
fstpt
push
repnz
xor
les
push
xor
stc
cmp
rcll
pop
cltd
xor
stos
inc
xchg
dec
or
jne
dec
loop
xchg
sbb
enter
adc
movsb
in
test
stc
out
push
daa
dec
sahf
xor
les
insl
add
push
pop
xor
or
and
sbb
pop
or
add
fiaddl
mov
aam
or
movsl
lds
pop
dec
mov
iret
test
in
push
ds
pop
xor
xlat
xor
sub
cwtl
div
mov
mov
out
xchg
shll
ja
bound
sub
iret
sub
sub
inc
xor
fdivp
xor
loop
or
mov
cmp
mov
ljmp
mov
stc
scas
aad
mov
and
lods
icebp
xor
sti
adc
adc
pop
mov
jge
dec
scas
jno
ss
adc
fnstsw
push
xchg
push
mov
fdivs
sahf
je
mov
dec
pop
out
cmpsl
andl
lea
inc
mov
lods
dec
aas
and
inc
jp
pop
jb
xor
sar
mov
cmp
aaa
inc
mov
xchg
sbbl
dec
sub
imul
fdivl
jmp
andb
pop
repz
insl
fcomps
sub
rcll
outsl
rcrl
add
add
xorb
sub
pop
mov
int3
fidivrs
fisubrl
scas
inc
dec
jb
mov
ds
dec
repz
repz
xorb
pop
leave
cltd
xchg
shrb
js
mov
movsb
repnz
insb
adc
in
test
push
lcall
dec
mov
ljmp
push
jg
orb
pop
outsl
and
pop
mov
and
pushf
cmc
sbb
dec
push
sbb
push
mov
mov
mov
lds
outsb
std
sbb
or
xchg
mov
push
es
sbb
push
test
sbb
cmp
mov
jl
jo
pop
push
ret
shl
mov
xchg
add
pop
add
out
sub
sbb
dec
loop
cmp
lock
lods
xchg
adcb
test
mov
add
ds
pop
mov
imul
jecxz
je
xchg
in
fld
adc
mov
pop
scas
xchg
and
jne
ja
sbb
or
pop
xchg
add
mov
in
clc
je
jbe
cmp
cmp
xlat
sub
cld
add
test
insl
popf
ja
sbb
xchg
insl
fdivs
shll
fstpl
test
pop
hlt
hlt
push
sub
and
and
push
popf
fnsave
dec
pop
icebp
clc
sar
test
fiadds
sbb
push
inc
xlat
andb
xor
push
sbbl
mov
cs
inc
mov
mov
ds
incb
sub
out
sbb
incl
push
mov
rcrl
mov
icebp
or
push
lock
or
xor
or
ret
stos
daa
mov
rclb
xchg
iret
test
call
loop
cltd
ret
rcll
xlat
xor
sarl
mov
je
sub
push
cld
cltd
push
loopne
cltd
int
in
ja
mov
test
push
adc
dec
xor
lods
mov
hlt
mov
jno
pop
pusha
mov
leave
enter
mov
push
jmp
or
or
cld
or
jp
insl
push
test
mov
in
cmp
je
shrb
in
mov
xchg
mov
pcmpgtd
and
pand
mov
sub
subl
and
jno
loopne
popf
cmp
aaa
add
or
fdivl
sahf
push
mov
ljmp
dec
push
jne
ss
shlb
mov
orb
enter
mov
ret
pop
in
jno
and
fnstenv
fs
cs
jl
xlat
std
aas
repnz
push
hlt
fcmovb
std
xchg
cmc
mov
xchg
and
sbb
xor
test
cmpsl
jl
cwtl
loop
lds
mov
push
lods
mov
call
cs
ss
cmpl
sbb
push
daa
inc
lcall
adc
lea
inc
mov
sbb
hlt
loope
sub
popl
ret
lea
cld
lods
mov
fwait
sbb
sarb
jmp
add
int3
ror
or
mov
and
clc
mov
cmpsb
sti
push
dec
adc
in
push
arpl
jbe
cmp
dec
jns
pusha
inc
popf
pop
mov
mov
test
add
mov
and
bound
lds
jno
in
or
jl
clc
cs
scas
lds
jp
jle
jne
mov
icebp
push
pop
lock
repz
or
cmpsl
xor
push
hlt
pop
sahf
in
sub
pushf
ret
or
push
shrl
or
push
jo
mov
mov
nop
into
push
jno
or
mov
mov
insl
fstl
adc
orl
xor
aaa
mov
sub
cld
mov
fistps
in
xchg
adc
push
mov
cmp
xchg
fwait
pop
call
outsl
shlb
add
imul
adc
cld
je
xor
xor
shr
testl
add
das
test
dec
pop
add
mov
repnz
fsts
xor
or
test
push
cmpsl
adcb
out
inc
std
shll
add
push
dec
outsl
test
xor
fimuls
and
mov
sub
xchg
sarl
std
sbb
repnz
add
leave
sbb
fidivrs
test
jbe
sahf
mov
jo
inc
jp
pop
les
xchg
mov
in
fsubr
imulb
daa
mov
and
pop
jbe
lcall
outsl
es
xchg
mov
cmpsl
pop
mov
xchg
std
cmp
pusha
mov
in
dec
rcr
add
mov
add
loop
lods
xchg
std
data16
je
je
pop
repnz
pop
jecxz
out
inc
sahf
xchg
dec
sub
mov
pop
movsl
fneni(8087
pop
loope
out
loope
pop
mov
mov
push
or
mov
in
cmp
fwait
xor
push
xlat
gs
jns
in
xchg
test
mov
out
dec
mov
rorb
add
divb
push
imul
sbb
dec
dec
or
xchg
add
pop
jbe
bnd
and
pop
scas
xor
xchg
in
xchg
jp
xchg
pop
xchg
mov
mov
dec
mov
sahf
mov
popa
push
addr16
push
add
cmp
out
ret
mov
les
jne
sub
subl
iret
mov
or
sub
jne
es
inc
adc
test
in
pop
cmpsl
sub
push
popf
xchg
xchg
pop
mov
mov
js
mov
insb
cld
pop
in
lcall
dec
nop
bound
xorb
cmp
mov
lds
sbb
jbe
xchg
pop
outsl
pop
cmp
rcrl
sub
les
sar
jb
fisubs
mov
popa
fldl
test
lcall
dec
lock
sbb
outsb
sub
pushf
les
push
sub
mov
xchg
push
xor
push
dec
push
lahf
mov
gs
push
add
dec
add
dec
dec
pop
xchg
adc
lock
ret
jle
xor
cmp
loope
xor
mov
cwtl
dec
movsb
jl
pop
mov
cli
mov
mov
push
fidivrl
pusha
popf
inc
sbb
js
notl
imulb
in
push
sub
lahf
mov
pop
out
imul
cwtl
pop
pop
sbb
popa
shr
jns
or
test
cmp
mov
mov
mov
cmp
adc
mov
imul
iret
es
mov
in
xchg
cmpsb
mov
outsl
ret
and
jmp
sbb
push
add
les
rcll
sbb
xor
or
pop
aad
jne
cmp
jl
notl
xchg
fistl
jbe
dec
pop
cmc
stos
jo
fcmovnbe
rcrl
out
iret
cmpsb
fwait
sbb
adc
mov
mov
sub
cltd
fwait
mov
int
jge
jg
adc
aad
push
in
movsb
les
cmpsl
xor
cmp
leave
jbe
outsl
push
mov
imul
mov
cmp
push
int3
arpl
dec
pusha
loopne
hlt
ret
sub
adc
add
or
ja
cld
int3
out
add
xor
inc
inc
out
cmp
lds
imul
push
add
scas
insl
arpl
test
or
icebp
adc
mov
imul
dec
pop
dec
cmp
fsubrl
mov
nop
test
fldt
test
call
fidivs
jp
sarl
ja
add
sti
lahf
dec
rcl
clc
ret
xlat
push
or
int
lock
jmp
loopne
ss
add
jecxz
outsb
push
xor
adc
inc
sub
pop
cmp
pusha
sbb
in
dec
inc
xchg
jmp
adc
fsts
cmp
xor
loopne
push
pop
sub
jecxz
leave
and
pusha
mov
pop
icebp
in
daa
dec
insb
xchg
addr16
mov
loop
push
shr
xor
pop
shl
roll
push
cwtl
gs
pop
pop
mov
nop
jne
xchg
cmpsl
icebp
repz
push
imul
push
mov
push
cmp
int
add
out
int3
lods
ja
idivl
xchg
add
fildl
dec
stos
xchg
and
roll
and
adc
shl
jg
mov
out
ljmp
outsb
inc
jae
mov
fidivs
and
mov
and
fistl
xor
pop
adc
pop
incl
inc
daa
jb
stos
nop
sbb
add
mov
ror
cli
aad
cmp
xor
out
sbb
sbbl
imul
pop
xor
push
lods
push
test
pop
sarl
fbstp
lods
fs
mov
jns
in
ljmp
jne
outsl
jmp
pop
mov
iret
jns
mov
jnp
nop
add
sub
addr16
push
test
leave
cmp
mov
fsubs
clc
daa
mov
outsb
jl
pop
xlat
je
sbb
inc
mov
imul
imul
jae
push
je
test
xor
in
lock
cmc
sbb
ljmp
xor
cmp
push
dec
pushf
je
xchg
mov
das
adc
sub
stos
push
repnz
sbb
insl
cli
adc
rorl
sahf
mov
call
lret
ds
xor
mov
pop
sub
out
inc
ljmp
imul
cmp
jo
subb
mov
mov
cli
sbb
xor
sub
push
mov
iret
push
ljmp
lock
jbe
mov
xor
push
rorl
xlat
xor
pop
fs
mov
sub
in
mov
shlb
test
les
cmpsl
rorb
mov
pop
in
ret
out
xchg
dec
pop
mov
push
dec
pop
jg
push
pop
out
mov
lds
insl
dec
jo
nop
lret
or
aam
sbb
push
lds
call
lods
mov
dec
in
fsubr
push
outsl
jg
iret
lock
mov
push
and
cmc
adc
cmp
cmpsb
in
push
outsb
jp
sub
push
dec
xchg
mov
repnz
cwtl
dec
jecxz
call
data16
repnz
pop
fistps
pop
jmp
cli
pop
cmc
mov
push
inc
jp
in
int
jnp
add
sub
insl
bnd
aaa
stos
adc
pop
dec
adc
outsl
pop
xchg
adc
or
lea
and
xor
add
test
int3
jl
pop
ljmp
mov
js
inc
push
test
xchg
scas
sbb
lea
dec
cmp
or
jg
sbb
shlb
sub
mov
mov
fistpll
dec
pop
mov
or
mov
fistpll
or
xor
int3
arpl
sti
jae
dec
ljmp
sbb
adc
sub
pop
and
outsl
xorl
mov
jno
lcall
dec
mov
test
fwait
dec
jno
jge
dec
call
mov
lock
mov
scas
adc
lcall
and
pop
push
mov
incb
jmp
adcb
jno
push
and
rcl
mov
cli
shr
in
adc
xor
xchg
stos
mov
jnp
mov
jle
adc
vmwrite
or
test
add
popa
into
and
into
sbb
jno
iret
stc
push
mov
fnstsw
jmp
out
in
push
inc
sarl
push
mov
fdiv
cmpsb
test
sahf
rcrl
enter
es
pop
jle
xor
add
cmp
movsl
xor
insl
mov
aam
mov
sti
gs
inc
adc
pop
inc
sub
test
xlat
push
sub
or
scas
aaa
pop
fsubrs
or
mov
mov
pop
ja
pushf
sbb
mov
fisttps
mov
jns
rol
sbb
js
and
and
jecxz
lcall
push
std
stos
cmp
rorb
repnz
inc
add
add
sbb
mov
in
cmp
mov
mov
mov
ja
in
inc
dec
push
add
inc
cmp
pop
cmp
lcall
outsb
clc
cmp
jb
in
push
push
add
and
nop
into
jge
jl
fidivs
inc
in
mov
xchg
mov
lock
add
jl
aaa
push
mov
sbb
sub
mov
addr16
negl
xorl
fwait
and
pop
xchg
les
shl
iret
xchg
sbb
sub
std
add
push
xor
mov
xchg
mov
dec
sahf
roll
fadd
push
call
popl
xorb
leave
cs
cmpsb
jl
fdivrs
into
mov
lods
sub
cmp
das
in
ret
sub
dec
clc
dec
cmpl
jg
bound
sbb
cld
nop
imul
pop
push
sub
mov
ja
mov
lahf
sbb
pop
lcall
ret
mov
or
jo
pop
data16
je
add
cmp
and
mov
sub
jns
divb
in
das
push
and
inc
outsb
jmp
enter
jo
int
jno
ljmp
lret
addr16
mov
ljmp
dec
xlat
inc
scas
arpl
stos
xchg
adc
sbb
les
stc
nop
cmp
mov
and
adc
inc
mov
into
xor
cli
or
int3
fs
imul
mov
dec
ret
sbb
aad
jo
or
add
dec
dec
fidivl
scas
sbb
clc
inc
mov
ljmp
pusha
clc
xchg
and
adcb
dec
mov
or
scas
test
sbbb
sbb
mov
data16
imul
lods
or
out
and
cmpsl
push
daa
push
aaa
bound
fwait
mov
gs
jae
mov
sti
enter
fldl
and
push
xor
cmp
inc
push
cli
mov
pushf
jnp
cld
pop
jecxz
ds
inc
mov
gs
arpl
xlat
xor
fsubs
lcall
test
xchg
add
xor
clc
sahf
dec
in
aam
addr16
and
mov
adc
push
addr16
xor
bound
mov
and
pop
sahf
decl
add
push
inc
data16
mov
and
jne
cld
andb
std
adc
mov
lcall
mov
bound
mov
inc
push
pop
push
cmpsl
ret
xor
mov
mov
cmpsb
push
xchg
std
aad
mov
shrl
divb
push
sub
pop
ret
rcll
mov
dec
dec
mov
and
gs
addb
adc
in
fadd
insb
xchg
jmp
ja
insb
cli
and
daa
mul
loop
sbb
mov
icebp
adc
jge
mov
repz
xlat
test
inc
cmp
xlat
cmc
mov
mov
jmp
inc
inc
aas
fwait
and
inc
sbb
xchg
out
inc
aam
cmpsl
xorb
dec
mov
out
cmp
jae
mov
int3
jmp
ja
or
push
jmp
jmp
push
cmp
mov
cmpsl
in
jnp
or
out
xchg
test
stos
mov
push
inc
aaa
mov
mov
or
inc
adc
sbbb
dec
loop
dec
xor
movsl
icebp
dec
int3
xor
cmp
shll
pop
add
xor
push
inc
je
mov
add
popf
scas
cmp
in
test
addb
pop
adc
jae
mov
sbb
scas
not
addr16
sub
repnz
popa
jl
push
in
jmp
mov
outsb
jb
and
dec
pop
push
andb
or
mov
rorl
rcrl
xor
push
iret
loope
mov
pop
je
ds
or
adc
pop
sub
jbe
adc
lcall
in
push
gs
push
push
mov
mov
rcr
in
pop
bnd
aaa
mov
call
lea
mov
lcall
gs
into
and
ss
adc
lret
push
insl
sub
arpl
enter
push
shl
repnz
mov
xor
jp
cmp
cmc
or
or
or
mov
add
mov
addr16
in
xchg
sub
push
movsl
add
mov
sub
sub
rorb
mov
fwait
xor
or
or
sub
fst
pop
jo
sub
jbe
rcrb
ljmp
cmpsb
lock
adc
lahf
insb
scas
nop
fs
cli
push
cmp
jp
dec
xchg
jecxz
hlt
mov
sbb
addl
int
and
push
sti
leave
cmp
jle
xchg
loopne
dec
inc
add
mov
int
pop
aas
jno
inc
enter
xor
movsb
pushf
jbe
loope
sarb
ss
jo
pop
mov
test
inc
push
inc
jae
repnz
gs
test
mov
add
packsswb
pop
sbb
loopne
cmp
pop
js
out
out
shrl
cmpsb
les
mov
scas
scas
pop
cmp
fsubrl
inc
xchg
popa
cmpsl
jnp
sbb
call
sub
fs
je
imul
pop
mov
stc
andl
shlb
or
mov
or
pop
repnz
cs
lods
mov
mov
lea
jns
ds
jg
push
mov
pop
push
scas
push
pusha
inc
sub
and
adc
xor
inc
sbb
outsb
sub
bound
inc
mov
adcl
bound
xlat
pop
xchg
cwtl
sub
dec
mov
imul
xor
cmc
aad
popf
outsl
adc
jmp
out
idivl
mov
mov
and
lret
cmp
push
in
inc
rcr
outsl
jnp
jbe
jb
mov
lea
dec
mov
not
lods
xchg
pop
nop
and
iret
testb
xor
stos
sbb
inc
rcrb
fnsave
mov
mov
cli
xchg
mov
jae
mov
fnstenv
into
xchg
push
in
fidivrl
aas
testb
movsl
adc
repnz
stos
dec
sub
xchg
repnz
dec
xchg
lcall
mov
add
std
xchg
inc
adc
adcb
inc
ficompl
shr
inc
stos
lock
in
xlat
jmp
and
rorl
int3
inc
popa
mov
push
nop
cld
scas
xchg
loopne
scas
dec
loop
dec
pop
jb
fucomip
adc
mov
push
inc
dec
mov
push
rorb
add
mov
pop
scas
inc
inc
inc
lods
xchg
js
lret
dec
dec
loop
stc
cmc
cmp
cmpsb
call
and
pop
pop
xor
out
mov
addb
and
xor
inc
pop
xchg
add
iret
fldcw
adc
mov
pushl
pop
add
imul
mov
mov
out
sbb
jg
and
push
mov
pop
xchg
popf
enter
pushf
push
lcall
and
iret
push
sarb
leave
int
cmpsb
xor
mov
jno
cmp
xchg
jnp
and
mov
enter
dec
sahf
adc
int3
xchg
sbb
int
mov
out
ret
data16
and
pop
out
adcb
mov
repnz
inc
lahf
pop
jne
faddl
sub
roll
dec
popl
cmp
insb
shrb
nop
pop
lahf
ret
ds
sbb
jnp
into
or
lods
push
mov
sbb
aas
lret
or
and
mov
xchg
test
jle
fcmove
fcmovnb
mov
inc
sbb
sub
aam
jae
inc
dec
pop
cmp
imul
pop
lock
jmp
mov
movsl
jo
xlat
adc
add
idivl
sbb
jl
inc
pop
scas
fbld
mov
movsb
scas
add
outsb
jle
dec
mov
test
daa
jne
shlb
push
hlt
fstpt
adc
das
cmp
jne
xchg
test
mov
cli
xchg
pop
ds
adc
dec
mov
pop
fmuls
dec
and
imul
jbe
out
scas
negl
addl
out
pushf
lea
call
loop
and
pop
inc
lods
aas
pop
adc
out
scas
jb
sub
js
imul
adc
mov
xor
or
sahf
loopne
dec
dec
test
dec
test
adc
imul
iret
cld
mov
shll
push
xlat
outsb
subb
cmp
mov
mov
dec
pop
loope
shlb
add
sub
jp
repnz
inc
outsl
testb
sbb
add
jp
cld
sti
test
xchg
mov
pop
inc
pop
pushf
xor
mov
loope
pusha
sbb
mov
lock
pop
adc
sbb
and
outsb
dec
lret
jp
imul
xor
xor
out
cld
cmpb
ds
leave
pop
loopne
test
add
dec
pop
test
sbb
push
pop
pop
xchg
pop
jecxz
adc
cmp
dec
xlat
les
cmpsb
inc
jge
pop
fimuls
lods
dec
dec
or
adc
out
sbb
add
das
aam
neg
push
mov
iret
mov
lcall
pop
pop
lahf
jb
cmp
decb
fs
push
rcrl
mov
sub
mov
clc
das
mov
mov
cmp
inc
imul
mov
adc
adc
pop
jl
xchg
jmp
mov
xchg
stos
mov
fsubl
xchg
and
sub
xor
inc
popa
mov
in
xor
orb
jns
popa
dec
fsts
add
jae
mov
cli
mov
movsl
and
adc
pop
lods
dec
jne
adc
outsb
scas
push
inc
cwtl
push
jnp
inc
xor
cltd
sbb
push
xchg
lcall
andl
mov
sub
adc
loopne
insl
fdivp
xchg
push
test
test
fldcw
fisubrs
in
subl
adc
jle
push
push
out
mov
and
and
rorl
int
sub
dec
daa
ljmp
jmp
mov
xchg
inc
loop
cmp
cmp
loope
mov
ficoms
testl
cmpl
aaa
pop
fistl
out
and
insl
test
push
lahf
xchg
mov
mov
inc
pusha
or
or
xor
sti
mov
dec
lahf
lahf
dec
aad
rcl
fwait
mov
xchg
push
mov
xor
inc
pop
popf
outsl
sub
insl
dec
popf
lods
rorl
xor
scas
js
test
movsb
inc
lods
andb
repz
adc
mov
int
jno
xor
ficompl
push
mov
jnp
and
pop
mov
add
pop
push
xchg
test
fildll
jg
mov
xchg
cmc
inc
push
dec
sub
xchg
push
lock
in
daa
push
in
stc
lret
xchg
lcall
mov
call
aad
ss
leave
ljmp
sub
popa
fiaddl
push
je
in
mov
sti
and
and
aad
cwtl
or
adc
mov
mov
xchg
mov
enter
push
sahf
mulb
mov
push
mov
ja
call
sbbl
imul
es
sbb
leave
int
mov
fisttpll
xchg
xlat
test
xchg
jnp
dec
aad
jbe
and
sbb
and
jae
or
cmp
sub
ja
cmp
in
jne
in
dec
js
lods
into
sub
ja
sbb
adc
cmp
fidivs
bound
and
adcb
icebp
push
enter
push
pop
das
sbb
insl
sbb
jecxz
jmp
pop
mov
xchg
lods
call
adc
push
push
inc
aaa
push
jb
fcmove
dec
daa
xchg
sub
jmp
bound
mov
loop
lock
orl
xchg
jge
or
mov
pop
lds
adc
daa
mov
xchg
ss
test
add
xchg
pop
lods
mov
lcall
inc
pop
jp
fmull
sti
adc
enter
pop
bound
lods
xchg
pop
lds
inc
fs
pop
imul
lahf
mov
outsl
test
adc
aad
sbb
leave
xchg
jg
shlb
cmpsl
add
loopne
xchg
insl
das
repnz
rclb
aad
jno
aad
jne
jecxz
cmp
sbb
outsb
add
ja
mov
fiaddl
adc
xor
ds
push
adc
scas
and
push
lcall
outsb
out
dec
shlb
into
push
pop
daa
xor
jp
fwait
mov
jge
cmpl
jge
xlat
inc
jle
jns
mov
and
loope
cmpsl
out
gs
stc
dec
cltd
iret
jmp
popa
xchg
sbb
inc
mov
pop
icebp
data16
mov
xor
std
lcall
mov
in
jg
sub
repz
sbb
outsb
mov
pop
adc
ret
out
jmp
inc
cli
jae
sub
lret
mov
mov
bound
adc
in
mov
aad
sbb
add
repz
shl
pop
inc
push
out
movsl
cmp
jno
xchg
sub
ret
add
in
and
aaa
mov
xor
or
cmp
lds
sub
mov
inc
xor
jb
or
jg
jne
fidivl
fwait
arpl
lock
lds
insb
pop
cmp
dec
mov
jl
ret
adc
nop
sub
sbb
mov
shrl
insb
popf
push
fdivrl
adc
mov
in
mov
mov
xor
cli
outsl
push
aad
mov
sar
push
ljmp
mov
repz
mov
add
popa
add
mov
cmp
mov
pusha
imul
ret
and
cmp
bnd
filds
jg
aaa
push
mov
insb
fwait
lds
imul
pop
data16
aaa
lea
shll
lods
cld
popf
scas
jg
pop
cmp
xor
outsl
adc
fisubs
mov
dec
push
add
js
and
inc
fwait
mov
int
mov
bound
popa
loopne
and
pop
ja
incb
nop
fdivl
lea
int3
cltd
xchg
insl
pop
push
lock
and
sti
dec
lret
or
xchg
jae,pn
or
bound
mov
es
push
xchg
mov
add
sbbl
js
sbb
jmp
test
daa
and
out
sahf
push
xchg
cld
lcall
cwtl
lock
lods
enter
adc
cmp
pop
sahf
fwait
leave
and
jl
cld
xchg
jl
adc
push
sbb
mov
jbe
sahf
push
shl
pop
or
pop
and
pop
add
pop
ds
shlb
xchg
test
and
popf
dec
inc
idivl
mov
xlat
inc
int
cmp
add
lea
ja
ret
dec
dec
nop
push
fnsave
aad
fdiv
in
stos
in
xor
or
addr16
pusha
mov
xor
xor
jmp
push
mov
cmp
jbe
dec
cmp
xchg
clc
xlat
mov
push
push
movsl
cmc
sbbb
push
mov
cld
xchg
fnsave
push
ss
sbb
mov
int
das
ret
loop
and
or
testb
notl
mov
and
jbe
mov
push
rorl
mov
lods
pop
in
push
aas
repz
aad
mov
jg
push
mov
lods
inc
test
lret
push
xchg
mov
adc
aad
adc
lret
inc
pop
push
adc
add
repnz
and
jmp
adc
jno
mov
fistpl
pop
daa
sbb
pop
cmp
insl
jle
cmp
aam
ss
xchg
adc
movsl
leave
mov
mov
test
cmpl
dec
in
pop
scas
add
mov
int3
adc
aad
lret
push
call
addr16
adc
pushf
scas
loopne
sub
in
inc
inc
insl
call
out
cmpsl
sbb
add
sbb
lds
mov
adc
inc
xlat
or
bswap
in
inc
ja
test
push
xchg
inc
fwait
lcall
and
addr16
pop
jmp
or
jl
fnstcw
sbb
lods
mov
mov
inc
bound
in
push
lret
push
pop
adc
push
call
out
xchg
sub
adc
inc
xor
sbbl
movsb
mov
fdiv
adc
xor
sbb
cli
cmp
ja
mov
jae
and
xchg
sub
inc
mov
sub
fsubrs
mov
dec
outsl
add
mov
nop
jbe
in
clc
and
dec
in
test
es
out
mov
lods
push
rol
xchg
insb
es
cmp
push
push
fucomi
repz
dec
xor
or
and
je
adc
cmpsb
xchg
jns
repnz
fcomps
or
outsl
lods
sub
push
or
cmc
sub
aaa
stc
pop
call
stos
jg
push
xor
stos
inc
mov
sarl
mov
scas
inc
pop
pushf
fwait
xlat
loopne
mov
jmp
sbb
stc
orl
mov
sbb
and
stos
cs
inc
xlat
idivb
pop
testb
dec
shrl
dec
mov
cmpsb
lea
add
ss
mov
arpl
mov
aas
dec
fbstp
add
pop
fnstenv
or
pop
mov
clc
xor
out
pop
bound
jns
or
sub
lahf
inc
fsubp
scas
mov
popa
or
mov
mov
mov
fisubl
mov
repz
add
repz
adc
mov
jg
daa
int3
sub
sbb
int3
flds
mov
inc
bound
mov
vpsubq
jbe
jae
movsb
sbb
rcl
adc
push
sahf
mov
jle
pop
inc
mov
loope
pop
jb
aas
push
mov
addl
insl
std
int
mov
jbe
mov
sub
lds
cli
data16
mov
fs
enter
or
cmpb
insl
inc
ret
mov
popf
dec
rcl
cmp
mov
fsts
hlt
popf
int3
mov
shlb
pop
inc
imul
lret
mov
push
push
xchg
sub
adc
mov
sbb
mov
outsb
inc
rorl
pop
in
aam
movsl
add
lahf
and
fxch
into
gs
or
int3
jl
push
xor
shl
ljmp
cmp
ljmp
jecxz
rcll
mov
xchg
sub
push
add
sbb
mov
iret
out
ja
loop
adc
mov
jbe
push
cmp
fcoms
push
push
pushf
jmp
mov
mov
dec
lods
sub
stos
daa
jg
pusha
cmp
xchg
jle
push
out
andl
mov
inc
aas
outsb
jb
call
fbstp
notb
movl
cwtl
insl
scas
shrl
rcl
rol
orb
sub
add
push
nop
sarb
js
negb
cltd
ret
cmp
int3
dec
les
in
fsubrp
push
mov
repnz
cmp
jo
mov
mov
jecxz
rcll
addl
addb
outsb
and
adc
push
addb
jo
xor
jo
aam
stos
push
insb
xlat
js
outsl
stos
notl
xor
xchg
mov
movsl
dec
pop
cmpb
cmp
adc
jnp
sub
mov
ss
mov
icebp
xchg
jge
add
in
pop
int
data16
pushf
pop
mov
nop
movb
imul
cld
adc
mov
dec
or
aaa
hlt
outsl
xchg
jg
testl
jno
add
push
outsl
mov
movsl
mov
lea
xchg
pop
sub
addr16
sbb
pop
lahf
cltd
dec
lahf
inc
rorb
cwtl
pop
test
ds
cmpsb
mov
jl
mov
jge
sub
subb
into
pop
scas
dec
jno
call
and
les
movsb
cmp
arpl
cltd
addr16
cwtl
ficoml
mov
dec
leave
dec
mov
cli
nop
loop
lods
xchg
rcrb
aad
push
ret
int3
fsubrp
lods
insl
jnp
in
and
xchg
jmp
sbb
jae
pop
movsl
pop
mov
insb
and
mov
in
mov
icebp
adc
vhaddpd
and
add
stos
call
lret
pusha
lahf
clc
out
xor
mov
mov
faddl
test
rolb
scas
jbe
jbe
dec
mov
iret
shlb
ret
in
mov
add
arpl
addr16
fcom
cmp
cs
daa
dec
fldl
lahf
daa
test
cmp
cmpsb
ret
loopnew
ds
xchg
inc
sarb
nop
int
js
sbb
jns
dec
in
inc
call
rorl
mov
call
push
sub
aam
mov
ficoms
xchg
inc
or
push
pop
nop
jmp
push
cmp
pop
pop
scas
inc
add
mov
fwait
push
test
bound
lret
ss
mov
imul
and
sub
std
sub
cli
ret
push
repnz
bound
lahf
inc
jbe
aam
negb
jbe
negl
outsl
ds
cmp
js
add
jno
es
xorb
adc
ja
or
pop
cltd
fstpt
sbb
jno
mov
dec
push
inc
jge
xor
pop
xchg
lret
bound
enter
inc
or
ds
xchg
or
negb
movb
and
push
rcll
lea
cwtl
dec
xchg
pop
leave
fmul
pop
mov
dec
cld
mov
fnstsw
pop
popa
iret
iret
sbb
inc
lods
aad
shlb
add
or
ljmp
sbb
mov
inc
pop
cmp
mov
call
jae
loop
loopne
add
mov
adc
fnsetpm(287
lret
xor
cmc
aas
xchg
imul
sti
xchg
mov
adc
cli
sbb
gs
adc
and
sub
push
nop
bswap
inc
sub
or
aam
cmpsl
lds
mov
sbb
mov
repnz
mov
mov
inc
nop
xchg
adc
shll
sub
loop
push
clc
outsb
cmpsl
ret
push
add
out
cmpsl
arpl
inc
repnz
lds
mov
sbb
sbb
jb
outsb
sub
int
jge
pop
lcall
fbstp
mov
inc
pop
dec
std
or
jbe
imul
inc
adc
in
sbb
inc
pop
dec
insb
adc
mov
cwtl
jg
or
jge
pop
cmp
insb
add
inc
mov
sbb
pushf
or
js
stos
icebp
mov
mov
inc
cld
data16
pushf
push
std
sub
shlb
pop
scas
and
cmpsb
push
rcrb
imul
scas
sub
stos
fadd
pusha
xchg
addr16
cmp
lret
bound
mov
push
rol
ficoml
cli
or
gs
xorl
push
incb
push
push
xor
mov
add
xor
lods
push
in
or
mov
int
add
sbb
xchg
inc
or
stos
sub
clc
mov
sub
data16
sbb
add
sub
out
cmc
push
push
add
xor
dec
je
shrl
aaa
jns
jl
data16
out
iret
push
les
shrl
sbb
ja
ss
arpl
mov
cli
sub
stc
cmp
mov
adc
dec
mov
insb
pop
dec
and
sub
add
subb
adc
xor
cmp
mov
les
cmc
push
shrb
popa
flds
dec
aas
dec
iret
add
in
inc
mov
mov
fmulp
fidivrl
and
inc
sub
push
add
adc
xchg
inc
or
int
cmc
ja
lcall
push
lcall
fmuls
xchg
test
lret
arpl
add
mov
lock
lods
outsb
jb
and
and
inc
cmp
mov
scas
out
ds
or
sbb
adc
mov
stos
sbb
jo
mov
out
in
cmp
lods
push
out
je
mov
adc
cmp
shrb
imul
pop
and
xchg
jge
sti
in
jmp
and
cmpsb
fucompp
ljmp
daa
sbbl
pop
aas
sbb
call
sbb
add
jecxz
mov
xchg
jbe
pop
mov
das
fdivl
or
fsts
sub
ficoms
shll
out
stos
mov
add
lods
data16
fcoml
inc
sbbb
or
sahf
clc
add
fwait
outsb
xor
add
daa
arpl
imul
leave
mov
test
add
fdivl
mov
test
push
repz
cmp
xlat
mov
pop
sub
imul
insl
jmp
sub
inc
repnz
jl
jg
xchg
sub
les
test
enter
jg
xchg
dec
pop
sbb
loope
lahf
ljmp
addl
mov
pop
jp
jnp
js
cmp
lods
xorl
sbb
jg
pop
pushf
cli
push
rcrb
ror
mov
dec
es
xchg
adc
dec
add
jns
sub
imul
lock
syscall
push
gs
es
sub
mov
sub
sub
cmp
pop
rcrb
out
nop
jno
mov
jle
mov
lock
cld
add
fidivrl
shrl
jbe
sbb
xchg
adc
mov
stos
push
xchg
fiaddl
cmpsl
push
xor
jp
push
aad
aam
inc
repz
and
inc
test
mov
sbb
montmul
cmpsb
dec
fbstp
mov
repnz
test
outsl
scas
sti
inc
mov
roll
push
jecxz
cmp
or
mov
fldcw
mov
out
mov
xchg
scas
iret
jg
test
push
shlb
add
jns
testl
sub
xchg
push
mov
out
ss
cmp
fldt
cwtl
adc
in
daa
jae
shll
dec
int3
cmp
jecxz
dec
or
sub
in
inc
jle
xor
pop
notb
scas
lock
jg
sbb
outsl
mov
mov
cmp
add
loope
pop
sbb
adcb
out
push
or
pusha
dec
fbld
mov
test
icebp
sahf
fs
inc
xchg
rorb
dec
pop
mov
push
lret
or
mov
adc
test
xor
sbb
sti
xor
je
dec
xor
enter
aas
nop
mov
mov
pop
and
into
fstpt
testb
xor
imul
jle
fisubrl
pop
xchg
mov
inc
imul
jno
sbb
mov
push
icebp
dec
or
cs
aad
push
outsl
mov
mov
into
sahf
and
bound
push
insl
ljmp
cwtl
add
push
push
fs
insb
stos
mov
mull
mov
pop
mov
and
js
leave
ss
inc
jae
fsubrs
xor
and
and
xor
ss
xlat
adcb
lea
insl
cld
or
or
inc
mov
xchg
sti
addr16
lret
fisubrl
add
fdivs
mov
or
adc
dec
aaa
cwtl
jg
mov
cmp
xchg
add
enter
jo
push
sahf
xor
call
ds
imul
xchg
lds
js
test
xor
scas
addl
add
dec
dec
sub
inc
dec
repnz
loop
push
out
inc
dec
cmp
mov
fwait
pmulhw
inc
push
je
je
sbb
add
jl
bound
mov
dec
pop
stos
mov
stc
addr16
jbe
cmp
cld
imul
mov
push
adc
push
mov
popf
cmp
xor
lahf
pusha
icebp
pusha
repz
sbb
push
fstpt
jns
aas
pop
push
xlat
jmp
arpl
mov
xor
test
jne
mov
popf
adc
call
leave
in
ret
mov
pushf
or
arpl
sahf
popw
cltd
sub
mov
leave
int
imul
and
movsb
add
bound
dec
sub
add
std
bound
arpl
int3
test
mov
jne
pop
lahf
sahf
adc
leave
jne
das
sti
pop
mov
icebp
das
push
ret
call
adc
pop
sahf
insb
sti
add
push
xchg
cmp
adc
das
and
pushf
test
and
outsl
daa
test
mov
popf
jge
mov
iret
call
lret
fldl2t
inc
sbb
adc
jg
xchg
mov
sarb
ljmp
adc
adc
pop
testl
in
mov
pop
mov
xor
in
call
int3
jo
lds
clc
push
push
inc
orl
sbb
mov
dec
jge
mov
dec
outsl
cmc
mov
lret
rol
pop
push
testb
pop
and
ljmp
push
or
xor
push
pop
pushf
xor
push
in
in
out
add
add
movsl
mov
jno
test
dec
xchg
loopne
push
test
out
push
xor
xor
push
sbb
xchg
mov
pop
fisttps
repnz
es
and
mov
xchg
cs
mov
add
inc
mov
aad
inc
rcrl
dec
pop
repnz
call
int
sbb
cs
idivb
ret
or
pop
push
add
or
jl
adc
aad
outsl
mov
jb
out
add
data16
fnsave
push
popf
int
mov
std
or
aad
push
jo
idivl
dec
mov
or
stc
mov
mov
pop
xchg
jge
mov
shl
xchg
sahf
cli
push
add
rol
jnp
xchg
mov
cwtl
cmp
ret
mov
pop
mov
int3
imul
ficompl
call
test
je
mov
push
ss
mov
rcrl
add
jne
enter
addr16
or
movsl
mov
mov
or
pop
cmp
xchg
cmpsl
test
dec
cmp
int3
mov
mul
iret
fucomi
pop
jge,pn
stos
bound
or
cmp
cmp
cld
lret
push
and
repz
enter
imul
in
sub
adc
fstpt
popa
mulb
jmp
adc
stos
jmp
or
inc
gs
sub
test
iret
gs
or
decb
test
ficoml
cmp
div
pop
arpl
shll
es
out
test
mov
or
jbe
fldt
into
xor
int3
mov
xor
xor
cmp
test
xor
xchg
fwait
pusha
fcomi
or
stos
cli
arpl
lods
add
jne
cmc
stos
aas
loopne
ja
imul
jb
mov
shl
loop
adc
dec
fdivrl
mov
insb
pop
pop
mov
test
push
add
out
pop
dec
mov
xchg
ret
repz
psubw
movsb
pop
xor
or
cmpsb
adc
loop
dec
cmp
or
jne
clc
jge
sub
std
jo
lret
inc
fwait
jae
fldt
jl
add
add
frstor
js
jecxz
cld
iret
gs
jbe
mov
cmpsl
cwtl
fists
pop
cmp
sub
sbb
push
sub
jp
lret
push
sbb
out
cmp
jne
sub
sub
jne
pop
sahf
jae
mov
lock
call
shrl
popa
pop
pop
outsb
lds
fisttpl
inc
pop
push
cmp
mov
mov
data16
insb
ret
inc
push
xchg
lea
movsb
lret
scas
add
sub
lret
sbb
push
popf
stc
xchg
adc
mov
xor
mov
adc
ds
jmp
mul
xor
mov
fbstp
dec
rorb
movsb
popf
arpl
or
cmp
inc
pusha
push
pop
imul
xor
les
cmp
sahf
imul
cmp
test
jae
loop,pn
xchg
adc
jae
enter
pop
jbe
out
daa
mov
and
mov
sub
out
pop
sbb
dec
loope
xchg
loop
xor
popa
sub
push
rolb
cld
dec
ss
jo
es
and
aas
pop
rorl
test
mov
negl
pop
in
cmp
xor
xchg
pop
popf
addr16
cs
mov
ss
popa
ret
xchg
adc
cmp
mov
test
popf
stos
out
and
insb
jmp
mov
push
dec
sbb
ljmp
jge
stc
pop
cmp
push
sbb
ret
fisttps
insl
shr
out
mov
js
xor
sub
mov
daa
and
fists
mov
loopne
mov
cmpsb
lock
test
push
mov
ljmp
sarb
mov
lahf
test
xchg
jl
adcl
ffreep
out
popf
adc
sub
cli
jns
adc
jp
xchg
mov
or
mov
or
dec
cmpsb
arpl
out
js
movsl
sbb
and
in
jg
aas
push
test
mov
test
mov
cwtl
iret
rcl
inc
lret
fs
cld
bound
fs
sub
divl
pop
xchg
mov
mov
push
jg
addr16
out
mov
xor
and
stos
mov
xchg
es
add
cmp
call
sbb
push
xor
xor
inc
and
inc
push
push
ljmp
std
xor
cs
mov
mov
fldl2t
push
hlt
sbb
scas
jne
xchg
popa
stos
negl
sbb
scas
fistps
xlat
mov
adc
or
mov
mov
jp
jbe
iret
xchg
xchg
call
aas
mov
fwait
adc
das
loope
push
mov
fwait
lods
test
jo
pop
in
clc
sahf
fiaddl
dec
aaa
dec
xchg
ljmp
test
daa
in
adc
mov
mov
sti
loopne
jmp
nop
in
flds
bound
adc
adc
dec
arpl
rol
ficompl
subl
jecxz
rclb
inc
xchg
sbb
pop
dec
leave
int
sbb
push
repnz
lcall
ljmp
cs
mov
dec
pop
enter
jg
dec
jns
sti
adc
inc
cwtl
jno
dec
into
out
int3
outsb
mov
dec
lods
jmp
xchg
xor
mov
xchg
jns
into
ljmp
pop
mov
scas
test
jecxz
rorb
and
cmc
pop
out
movsl
sub
inc
jno
jns
jge
inc
ljmp
xor
cwtl
cwtl
int3
fs
pop
jmp
inc
jl
cmpsb
popa
dec
loopne
enter
jle
or
sarb
add
push
pop
xchg
fcoml
cmp
dec
pushf
xlat
mov
push
pop
lods
mov
mov
scas
xor
jp
and
inc
inc
mov
pop
pop
cmc
lea
in
xchg
movsb
les
das
cmp
sub
pushf
or
jmp
cwtl
lea
push
in
pop
jns
lea
and
fnstenv
idivb
dec
and
cmc
adc
cmp
xchg
xlat
xchg
sub
mov
shrl
sahf
push
jb
xchg
xchg
hlt
push
inc
xchg
add
lcall
and
imul
bound
mov
loopne
lcall
sti
cmpsl
das
movl
add
inc
adc
fildl
adc
bound
xchg
fmull
popf
and
add
jp
shrl
in
in
xchg
cli
icebp
mov
stos
outsl
jecxz
sbb
sbb
imul
shll
or
dec
fnstenv
pop
pop
push
popf
lret
sub
in
or
sub
inc
lret
roll
insl
std
push
mov
aad
xor
jg
lock
mov
ret
jle
inc
fwait
dec
jp
dec
and
scas
negl
fwait
cmp
and
xchg
sub
sbb
aaa
sub
push
in
shll
mov
push
sbb
sub
test
inc
and
pop
popa
sub
shrb
adc
jo
mov
ss
cmp
test
stc
lods
push
pop
mov
shl
sarb
inc
sub
and
dec
mov
sbb
aas
xor
xchg
jp
xchg
rorb
fistpll
cmp
sbb
add
mov
and
xchg
cmp
orb
mov
add
dec
cmpsl
sbb
xchg
jp
adc
pop
xchg
lret
xor
cld
pop
testb
jae
push
mov
inc
or
inc
gs
mov
sarb
adc
shll
ja
mov
rcll
push
fmuls
push
int3
jae
clc
movhps
mov
mov
jp
popa
stc
mov
pop
jno
rclb
aaa
ret
add
decb
cwtl
decb
jns
sbb
loopne
mov
xchg
add
pop
andl
or
mov
popa
mov
mov
rclb
mov
mull
push
ret
pop
loop
jo
stos
jne
dec
xor
call
cmc
jp
aam
out
dec
bound
popf
sub
filds
jmp
dec
mov
xchg
add
lcall
push
outsl
out
cmpsl
ret
mull
clc
xchg
outsl
out
int
loopne
mov
inc
out
mov
cmp
pop
lcall
movb
jle
ljmp
test
push
xor
lret
sbbl
lea
cli
and
orl
lcall
ja
mov
dec
jmp
popf
mov
ret
les
push
ss
in
mov
or
cwtl
je
add
push
inc
mov
dec
ffreep
and
rcrl
data16
add
sti
fiaddl
aaa
mov
cli
sbb
jns
mov
add
stos
pop
test
adc
xchg
add
ss
repz
or
pusha
mov
es
jecxz
out
or
pop
scas
icebp
xorl
notl
jb
jne
shlb
clc
mov
sub
sbb
rcll
pop
decl
sbb
sahf
or
pop
add
sub
lahf
es
scas
and
cmpsb
sub
cwtl
test
popf
sub
mov
jns
out
cmpsb
std
lcall
in
mov
mov
lret
les
and
push
lcall
sub
dec
xchg
xchg
dec
add
jns
aam
mov
cmpsl
imul
cmp
xchg
bound
outsb
daa
hlt
xchg
outsb
inc
sub
imul
push
loope
cltd
xchg
push
fwait
push
mov
aam
ds
mov
and
orl
pop
mov
dec
xchg
call
jmp
dec
push
mov
cwtl
mov
test
inc
lcall
aaa
pop
popa
lds
jae
mov
push
inc
xchg
in
and
mov
pop
ret
jg
mov
mov
adc
xchg
repz
out
ds
mov
mov
cmpsl
or
add
jo
ret
pop
xor
lods
test
xchg
mov
sbb
dec
jecxz
mov
cmp
repnz
xchg
repz
fscale
jmp
aad
lcall
mov
inc
stos
mov
lods
pop
mov
ljmp
pop
stc
adc
loopne
popa
push
jo
mov
sbb
inc
repnz
subl
dec
adc
add
hlt
mov
push
je
push
shl
mov
inc
jl
ds
or
inc
lods
lods
cmp
stos
add
sbb
xchg
jns
cli
pop
pop
and
cltd
repnz
daa
pushl
fwait
lcall
dec
sub
mov
mov
lods
mov
in
les
adc
and
mov
test
xchg
dec
mov
sub
mov
xchg
sbb
mov
jno
jge
std
jbe
scas
sbb
and
movsl
push
jl
jnp
adc
clc
sahf
jb
jne
xor
xchg
pop
iret
xor
ds
mov
les
adc
shll
mov
mov
cmc
jno
xchg
pop
hlt
inc
jl
pop
les
and
add
xchg
xlat
mov
das
out
mov
filds
nop
dec
jne
insl
mov
in
sbb
fcmovu
leave
inc
testl
pop
xchg
mov
xchg
cmp
jmp
jnp
sub
fists
out
int
xchg
outsl
mov
pop
mov
into
bound
scas
xor
push
loope
test
fiaddl
dec
jecxz
and
aaa
scas
xchg
inc
and
repz
sbb
add
int
fwait
jge,pt
push
inc
loop
ljmp
imul
xchg
pop
dec
dec
sub
daa
cwtd
test
or
pop
idiv
xchg
sbb
inc
pop
pop
mov
inc
imul
out
cld
cmp
xchg
xchg
inc
popf
dec
sbb
stc
les
inc
shrb
adc
inc
int
mov
xor
jmp
dec
movsb
ss
or
jl
mov
push
insb
scas
notl
imul
pushf
sbb
pop
adc
cs
add
out
je
mov
pusha
dec
movntps
push
sub
pop
lahf
add
addps
std
push
mov
sti
xchg
jns
enter
sbb
insb
adc
push
add
xor
and
or
mov
cmp
iret
pop
out
je
pop
mov
xchg
jbe
scas
jnp
dec
mov
or
xchg
jecxz
cmpsl
sbb
std
mov
inc
cwtl
dec
popa
cltd
fpatan
or
push
sub
xor
std
pop
inc
cmp
cwtl
adc
xor
test
ds
push
repnz
sti
lcall
icebp
mov
push
mov
xlat
cs
pop
out
add
jge
scas
iret
data16
hlt
dec
mov
pop
les
inc
notb
data16
mov
or
or
add
scas
jae
clc
sub
mov
pop
ja
bound
pop
xor
sbb
cmp
stc
adc
subl
les
mov
mov
lods
cmpsb
add
cld
fwait
clc
push
repnz
aas
xor
in
cmp
jbe
mov
mov
inc
fldenv
and
sbb
dec
out
mov
ljmp
int
dec
mov
mov
shr
test
repz
mov
aad
mov
push
jne
mov
xorb
gs
mov
ljmp
sub
push
rcll
mov
ds
js
rcl
jo
xchg
add
mov
sarb
rcll
test
addr16
xor
adc
xlat
out
insl
jg
jle
push
jp
mov
xor
or
mov
adc
sbb
test
rorb
jmp
xor
negb
push
lcall
and
cld
mov
xor
xchg
xchg
ret
rcl
or
pop
jne
pop
sbb
cld
push
daa
fists
mov
loope
std
dec
iret
push
mov
sub
lea
orb
sti
mov
stos
jnp
mov
dec
jbe
call
or
fldcw
inc
inc
imul
fwait
lahf
mov
mov
cmp
iret
pop
push
mov
mov
pop
push
lret
mov
clc
push
fwait
or
lcall
aas
xchg
cli
jecxz
lock
xor
ficompl
arpl
int
xor
sti
dec
orl
or
arpl
or
jp
sahf
stos
js
and
and
imul
sbb
arpl
xchg
sub
xchg
jb
pop
loope
xchg
adc
push
pop
pushf
pop
mov
xchg
sbb
or
in
dec
in
jle
je
sbb
and
cmp
pop
mov
ficoms
sub
mov
jge
xchg
jg
mov
jns
mov
mov
es
and
movsb
pop
mov
inc
push
mov
pusha
ret
daa
test
mov
out
repz
and
shlb
sub
jmp
nop
push
sub
push
fisubs
mov
push
lea
xchg
rcrl
sbb
repnz
mov
test
xorl
das
psubd
adc
test
loopne
ficomps
ja
sub
pop
hlt
sbb
jnp,pt
mov
imul
pop
dec
jne
dec
cmp
icebp
dec
pop
pop
movsl
push
int3
jg
popf
jo
pop
into
jo
cmpsl
jl
mov
and
imul
jno
or
aaa
aas
xchg
mov
mov
xchg
xchg
dec
sbb
daa
pop
xorb
rol
stc
pop
mov
pop
jp
lahf
mov
jg
ljmp
popa
adc
cmpsl
jecxz
mov
dec
add
mov
nop
ret
mov
push
pop
aam
xlat
rol
flds
or
and
out
pop
inc
xchg
stos
aad
jne
dec
cmp
xchg
imul
rorb
push
cmp
sub
loopne
or
push
mov
xor
lret
idivb
icebp
nop
push
shll
cmc
scas
sbb
xchg
mov
idivb
mov
imul
xchg
pop
hlt
mov
pop
loop
jecxz
jge
negb
xlat
jg
pop
cmp
mov
sarl
xor
out
les
rcrb
adc
adcl
pop
push
test
sbbb
jmp
insl
sub
js
mov
dec
mov
lret
push
xchg
stos
dec
push
mov
fistps
arpl
std
xlat
jbe
mov
aas
push
in
pop
ja
mov
int3
loope
inc
inc
mov
push
repnz
add
pop
popf
orb
mov
int
lret
fldenv
in
push
jb
lods
mov
push
daa
data16
push
out
dec
and
mov
or
inc
inc
inc
xlat
xor
scas
jno
hlt
jbe
mov
add
aas
in
and
jmp
fnstsw
stc
das
clc
fidivrs
mov
push
repz
repnz
push
mov
call
mov
cmc
fistps
add
jge
daa
inc
xchg
cmp
add
cmp
pop
shlb
push
cmc
ja
dec
dec
data16
shlb
mov
dec
pop
pop
scas
mov
xchg
stos
xlat
and
cmp
inc
into
aaa
push
dec
fists
sub
cmp
mov
nop
aam
ds
lahf
mov
popa
cmpsb
or
lea
test
cmp
jmp
jae
cmp
mov
cmp
out
mov
mov
or
rcl
mov
sbb
mov
js
out
sbb
std
xor
jmp
mov
sub
dec
test
aam
sub
mov
out
sbb
imul
mov
les
fiaddl
mov
mov
adc
cld
lret
adc
mov
dec
popa
fisttpl
out
std
mov
mov
mov
dec
adc
aaa
iret
push
push
adc
arpl
subl
bnd
insl
jnp
movsb
sub
push
in
rclb
stc
adc
les
mov
xor
repnz
in
sub
fwait
push
fcoml
mov
cltd
adc
push
or
mov
cmp
es
adc
mov
icebp
jmp
movsb
repnz
ss
mov
dec
mov
dec
push
pop
xchg
das
psadbw
cltd
jbe
inc
ja
mov
aaa
adc
mov
cld
add
ljmp
adc
lret
js
pop
push
dec
pushf
imul
cwtl
out
dec
mov
cmp
mov
inc
adc
cmp
clc
cmc
data16
cltd
cmp
scas
sub
jg
and
xor
jbe
add
adc
bound
aas
adc
cmc
or
cmp
push
in
xchg
xor
scas
inc
cmp
pushf
or
leave
mov
fs
inc
add
ret
gs
insb
gs
daa
icebp
lret
push
xor
inc
dec
jecxz
lahf
pop
testb
loop
jl
push
and
mov
push
inc
pop
xor
push
js
icebp
sbb
push
sahf
xor
je
mov
daa
lahf
ret
cmp
mov
sti
testb
ficomps
lcall
in
inc
mov
in
sub
inc
push
mov
bound
lret
mov
adc
sub
les
inc
neg
mov
test
xor
mov
push
ds
fiadds
cmp
aas
push
sub
dec
fdiv
loop
jle
or
mov
sbb
js
lods
adcl
cmovp
pop
shll
add
loopne
push
cmp
loop
xchg
mov
shll
pushf
cmpsl
jmp
scas
xor
data16
jmp
mov
rol
jle
cmp
push
in
lods
jne,pt
repnz
out
mov
push
mov
ret
aam
insl
dec
shr
pop
cmp
jge
add
pop
test
mov
cmp
sub
mov
repz
int3
jge
mov
loop
out
mov
sub
negl
pop
loopne
adc
imul
dec
bound
add
add
sub
and
je
mov
pop
sub
cwtl
sar
lret
outsl
jo
shll
shlb
and
mov
pop
mov
or
mov
ror
icebp
scas
lret
fwait
adc
int
insb
inc
mov
xchg
mov
sbb
lods
sbb
stos
iret
cmp
push
sbb
inc
int
jecxz
in
addr16
fiaddl
pop
xor
inc
pop
mov
ja
mov
push
inc
aam
xor
ret
mov
loopne
cld
sub
outsl
flds
pop
out
cmp
jle
adc
mov
mov
mov
or
jo
es
jbe
inc
pushf
push
cmpsl
dec
je
stc
and
and
test
popf
shr
adc
pop
sbb
fcmove
xor
aam
push
xor
mov
mov
adc
pop
xchg
or
xor
loop
pusha
adc
daa
int
and
add
cmc
adc
iret
adc
cmp
push
mov
sub
cs
ficompl
movsb
jecxz
jmp
fists
cwtl
xor
push
jg
dec
pop
sarl
push
sub
pop
push
call
aad
mov
dec
fsubl
push
adc
sbbb
lods
pop
scas
push
xor
lods
outsl
test
ljmp
or
pop
cwtl
push
stc
dec
mov
add
mov
pop
sub
cmp
dec
rol
xchg
add
data16
jl
in
rol
push
fcmove
cmpsb
nop
push
sbb
xorb
pop
lret
or
or
cmp
loop
add
mov
out
push
out
jmp
push
mov
xchg
dec
ror
pop
aaa
lock
into
cmc
pop
or
test
ret
mov
stos
jbe
mov
jae
scas
add
lret
push
mov
stos
and
fwait
in
xchg
subl
jmp
gs
into
dec
shl
call
sbb
pusha
std
push
or
cs
xor
ds
dec
pop
gs
test
jne
fdivp
lea
popf
test
sbb
jle
jb
add
stc
mov
mov
adc
mov
xor
cmp
sbb
add
pop
mov
cmc
xor
dec
jg
rorb
loop
xchg
pop
out
loope
mov
inc
or
scas
pop
sub
mov
lods
jp
cmpsb
in
sbb
test
add
pop
xorl
xchg
push
scas
add
cmpsb
pop
and
cmp
scas
add
mov
adc
xchg
jp
add
sbb
adcl
dec
pop
js
add
dec
or
jae
and
mov
cmc
iret
push
jmp
jbe
pop
cmp
mov
ret
hlt
and
push
adc
ss
sti
pop
sahf
sub
clc
shrb
lret
cmp
inc
fisubrl
pop
je
push
or
inc
mov
mov
shrb
sti
inc
les
fiadds
mov
out
rclb
push
movsl
adc
loop
test
mov
imul
lds
lock
sbb
mov
mov
ja
xchg
add
mov
cmpsl
jecxz
mov
fistpl
out
shlb
jp
mov
inc
fidivrl
xor
push
jno
das
lret
je
adc
jge
push
outsb
mov
cs
add
xchg
xor
cmp
push
sbb
fmull
arpl
adc
and
mov
dec
movsl
fisubrs
loop
mov
cwtl
ds
stc
pop
jbe
add
adc
idivl
lea
mov
or
cld
scas
xchg
pop
xlat
adc
inc
inc
add
push
mov
adc
mov
sbb
stos
push
push
inc
push
lea
loop
push
xchg
out
fistpl
push
cld
scas
sub
adcl
push
or
mov
lock
test
mov
decb
adc
jl
push
addr16
ret
mov
bound
mov
cltd
cs
popf
test
cs
jmp
out
mov
mov
shrl
cmp
lock
fstpt
lret
cld
and
stos
ds
dec
nop
push
jo
inc
out
xchg
inc
mov
add
jne
ficoms
and
sbb
jl
out
int3
pop
mov
sub
jmp
mov
stc
jmp
or
add
mov
xchg
and
ljmp
jl
push
or
adc
xchg
int
iret
jb
cs
aam
and
movsl
popf
mov
call
clc
jo
pop
test
out
imul
cli
cmpsl
inc
shll
dec
jle
imul
adc
dec
push
inc
xchg
cltd
repnz
jp
mov
adc
leave
jge
int
pop
jl
xchg
shlb
inc
push
add
int
or
jo
pop
mov
mov
scas
xchg
lret
xor
ss
jp
mov
fnstcw
in
test
xchg
mov
bnd
fldcw
sub
and
mov
ss
xor
xchg
aad
mov
aam
js
leave
dec
mov
fstpl
add
xchg
in
and
inc
js
bound
dec
int
repz
jge
push
and
sahf
adc
xchg
sbb
xchg
jnp
outsl
sbb
push
push
mov
fstl
mov
inc
rolb
outsb
cs
inc
pop
mov
test
mov
popf
or
out
adcl
pop
dec
cmp
cmp
pop
imul
lcall
sahf
idiv
add
inc
popf
and
add
xor
and
adc
sbb
jne
pop
pop
hlt
stos
mov
in
cmp
fwait
push
shll
in
and
cli
add
stos
mov
mov
in
pop
cmp
loop
in
jecxz
aam
sbb
or
pop
adc
mov
sub
sub
mov
in
jl
pop
jge
pushf
mov
popf
ss
pop
push
jo
dec
out
push
test
mov
xor
insb
fnsave
mov
mov
xor
xor
std
popf
jne
push
andb
aas
xor
pop
or
in
test
sti
pushf
mov
push
fsubrl
pop
push
mov
pop
enter
mov
jo
call
push
movsl
pop
call
and
jo
dec
pop
lahf
jnp
insl
out
in
pop
sub
stos
stos
dec
lods
daa
push
dec
in
add
push
stc
pop
insb
ror
fisubl
mov
push
cld
stc
mov
jns
mov
xchg
adc
int
imul
xchg
adc
popa
inc
int
push
pop
sub
gs
imul
loop
call
mov
cmpsb
lock
rol
inc
loopne
push
daa
mov
fdiv
sbb
pop
je
in
xor
andb
push
lods
xchg
lods
in
loope
or
add
add
pop
xchg
xor
test
dec
fistl
fwait
cmp
fisubrl
lds
testb
pushf
or
movsl
xor
push
stos
negl
scas
daa
shll
inc
jnp
jns
and
mov
int
or
cmpsl
pop
lret
sub
dec
jb
cmc
add
dec
loopne
dec
add
or
cmpxchg
pop
cmc
insl
inc
jo
data16
notl
inc
mov
ljmp
hlt
mov
loopne
sbb
inc
stos
sub
outsb
iret
push
inc
test
xchg
and
call
orl
jle
pop
or
sti
xorl
jnp
cmp
sbb
adc
inc
xor
cli
xor
leave
call
cmp
push
mov
shlb
lea
arpl
leave
sbb
xor
xchg
push
cmp
pop
jae
mov
push
xchg
mov
out
in
mov
lock
fidivl
cld
xchg
jns
jg
lea
pop
sahf
xor
repnz
out
jge
shr
inc
jbe
pushf
das
jecxz
lret
notb
das
cmpl
test
out
sub
popl
inc
push
sub
jns
enter
inc
fs
sub
and
jge
xor
in
dec
xchg
push
js
jo
adcl
frstor
inc
out
dec
dec
or
lcall
jne
push
push
sub
xlat
sbb
xchg
aaa
and
sti
xchg
sub
xchg
mov
push
fistpll
pop
imul
xlat
cmc
push
inc
sbb
sub
flds
lahf
sub
or
cmp
pop
mov
xchg
jge
addr16
js
aad
cltd
cmpsl
test
gs
xor
gs
xorl
mov
xchg
pop
pop
sbb
pop
jge
and
loop
sbb
test
iret
in
stos
xchg
ss
adc
pushf
cmp
fdivs
mov
xchg
mov
cmpl
add
lods
pop
dec
mov
flds
cmpsl
jns
jge
test
lds
mov
iret
lock
aad
fcoms
icebp
mov
push
stos
jle
int3
push
shlb
push
ljmp
pop
mov
cli
incb
dec
aad
push
cmp
jno
inc
dec
mov
jle
stos
inc
shlb
in
push
adc
push
xchg
roll
imul
popa
sub
stc
test
adc
daa
push
leave
push
repz
push
or
xor
xchg
pop
insb
pushl
dec
xchg
add
loop
xor
ja
inc
ror
xlat
and
daa
push
inc
fcomps
and
stc
inc
frstor
enter
dec
and
adc
or
repz
sbb
pop
loop
xchg
adc
call
subl
pop
dec
xor
mov
ret
jp
sub
push
adcb
lcall
cwtl
ds
jp
cmpsl
mov
jg
and
dec
mov
scas
pop
inc
add
gs
sbb
pop
std
push
ret
push
cmpsb
jge
jg
andl
dec
popf
mov
gs
es
sub
or
jo
dec
pop
cmp
insl
aas
dec
fldl2e
lds
push
jb
sub
rcl
mov
push
mov
hlt
or
mov
mov
xor
push
pmaxub
xor
gs
bound
xchg
and
imul
or
or
scas
imul
xchg
sti
push
sahf
sub
cmpsb
loope
loope
jmp
push
fsubs
roll
in
imul
xchg
pop
rcrb
jae
outsb
in
and
jbe
out
stos
cmpb
and
inc
and
pusha
les
cmp
and
ds
inc
movsb
mov
mov
jb
xchg
popa
sbb
repz
dec
lock
xlat
mov
jg
jmp
lods
stc
cwtl
stos
inc
or
stos
ds
aaa
test
pop
repz
dec
mov
ds
sahf
mov
cmpsl
stc
in
jp
scas
out
cltd
sbb
add
mov
clc
rcll
cli
xor
mov
xchg
les
popa
jmp
movsl
icebp
jo
call
mov
inc
or
mov
negb
mov
xchg
outsl
push
sub
mov
mov
repnz
fcmove
xchg
scas
fistpl
adc
sbb
jne
jl
cltd
cwtl
std
fs
cmp
cltd
jmp
sahf
mov
sarb
out
aad
ljmp
xchg
cmp
icebp
sbb
adc
lahf
sti
xchg
xchg
nop
cmp
or
aam
aaa
mov
rcrb
daa
push
cli
rorb
jle
push
loope
cmp
lds
mov
inc
sbb
out
pushf
stos
push
jmp
in
add
xchg
push
mov
or
js
sub
mov
outsb
sub
mov
into
roll
or
test
jp
or
dec
sub
xor
pop
cmc
iret
or
jnp
cmp
lds
or
xchg
or
mov
mov
shlb
repz
gs
xchg
push
lret
sbb
addr16
sbb
repnz
shll
mov
jne
pop
jb
fdivrs
inc
mov
jne
in
cwtl
dec
fcomps
paddw
repz
cltd
test
push
mov
sub
imul
dec
iret
adc
push
xchg
cli
incb
cmp
pushf
imull
jnp
lcall
and
subl
stos
ror
int3
rolb
movb
and
or
rorl
cli
popf
push
test
push
sarb
cmpsb
push
sbb
xor
rorl
pushf
iret
insl
pop
pushf
mov
xchg
out
mov
pop
movsb
add
je
sbb
data16
sbb
imul
add
mov
xor
cwtl
dec
lock
xor
popa
sub
push
pushf
mov
pop
int
dec
bound
jnp
enter
jp
cmpsb
out
sbb
xor
loope
push
fmulp
popf
cli
fs
test
scas
mov
or
jg
pop
out
lds
ret
xor
mov
jge
sbb
push
ljmp
cmp
inc
shlb
mov
dec
pop
ret
pop
and
add
cmc
push
in
pop
pop
ja
sbb
push
insb
xchg
in
loop
pop
lret
pop
repz
adc
fbstp
cmp
fsubs
dec
into
int
enter
int
jge
cwtl
sbb
fstpt
mov
in
inc
jmp
mov
arpl
movsb
mov
jno
jge
xor
shr
cld
pinsrw
sbb
cli
pop
cmp
and
sub
fistpl
fsubl
dec
pop
ds
pop
sti
mov
dec
pop
lock
pop
out
sub
sub
out
cmc
cli
jp
fidivs
push
rorl
pop
mov
in
mov
pop
call
and
xor
lods
aam
adcl
dec
fcmovu
out
les
mov
jl
or
pop
and
sub
nop
ljmp
scas
mov
shll
popa
outsl
lret
adc
sbb
scas
rorl
sub
insb
jl
pop
lret
jbe
ds
pop
xchg
sub
scas
mov
push
push
push
jno
mov
lea
enter
pop
jo
adc
and
push
xchg
mov
rclb
dec
mov
imul
sbb
push
xchg
mov
enter
xorb
das
in
adc
push
sub
rcll
cmp
insb
jl
and
pop
daa
mov
sbb
mov
add
jmp
fisubs
loope
add
inc
adc
inc
and
jecxz
outsl
int3
dec
loope
cmpsb
mov
repz
and
or
aas
ds
inc
ficomps
stc
aaa
mov
andb
lret
pop
inc
mov
out
cs
rcrl
add
mov
icebp
idiv
and
movsl
jb
cmpsb
xor
mov
repnz
jl
xor
push
notl
lds
sbb
pop
das
push
ret
mov
pop
test
mov
jge
pop
cmpsl
jecxz
leave
add
dec
shrl
data16
push
cwtl
xor
push
jmp
and
cmp
xor
add
gs
bound
add
cmp
dec
lods
pop
es
jl
adc
mov
mov
leave
jb
ret
das
shl
push
push
cltd
xor
and
sub
int
lahf
push
test
gs
cwtl
mov
pop
jmp
lock
pop
xlat
stc
mov
movsb
out
stc
mov
lds
sarl
pop
jmp
loope
loope
lret
cs
jmp
push
insl
fstpt
mov
mov
fdivs
clc
inc
inc
sbb
loop
add
aam
in
fwait
arpl
xor
jge
call
mov
iret
or
js
adc
repz
and
add
push
cmp
jmp
dec
sub
leave
shll
sbb
decl
sti
testl
push
sbb
test
gs
test
mov
ret
in
lahf
pop
rcll
sar
icebp
pop
fidivl
lahf
dec
mov
mov
pop
mov
sub
or
dec
aam
xchg
fidivrl
push
push
push
sbb
push
push
js
dec
cmpsb
xchg
test
pusha
movsb
repnz
mov
and
inc
popf
jle
jle
stos
sbb
inc
ret
into
push
cmp
imul
mov
jle
stos
ret
add
mov
adc
lret
sub
icebp
pop
ret
stos
jnp
jl
lret
jae
inc
cmpsl
add
popf
popf
pop
pop
dec
cmp
push
jmp
mov
in
add
cwtl
fs
xor
pop
push
dec
inc
cmpsl
cmc
sub
test
in
sub
xchg
repnz
inc
aas
notb
xchg
ds
inc
iret
xor
mov
mov
sbbb
adc
in
cmc
sbb
movsl
roll
bound
mov
addr16
pusha
mov
shrl
lock
ret
rol
movsb
xchg
mov
dec
mov
arpl
out
xchg
loope
ficompl
xor
addl
add
jb
jp
fldcw
nop
loope
inc
idivb
dec
cmp
pop
imul
ret
pop
je
inc
imul
sbb
mov
cld
cli
cmp
jmp
add
and
imul
cmc
xor
push
nop
pop
xchg
cmpsb
cmp
imul
stc
scas
gs
push
pop
adcl
inc
xor
mov
jae
lods
xchg
rol
popf
jae
mov
xor
add
out
mov
rclb
push
or
iret
adc
ret
push
jo
loopne
sub
or
shrb
add
lods
inc
push
add
sbb
push
push
fnsave
jbe
inc
js
dec
iret
xor
xor
mov
loop
test
out
fdiv
mov
mov
jne
je
pop
cmp
jl
or
xchg
sub
cmp
ret
inc
cmp
mov
inc
mov
daa
insl
popf
cmpsb
les
mov
pop
push
pop
orl
xlat
xor
imul
push
sub
sbb
push
movsb
hlt
mov
push
sub
dec
push
addb
sbb
aad
pop
jb
jg
in
pop
mov
inc
adc
fldpi
cmovge
inc
mov
add
loopne
dec
pop
cltd
pop
lods
add
scas
addr16
xor
popf
outsb
xor
and
cmc
sbb
dec
out
cmpsl
mov
movsb
js
mov
adc
and
jp
stc
adc
cmp
cmc
in
popa
enter
cmp
imul
sbb
in
mov
dec
jecxz
mov
xchg
mov
xchg
pop
add
addr16
or
xor
sbbl
dec
cmc
mov
xor
test
mov
scas
xchg
mov
test
js
jno
xchg
lods
cmpsb
and
pop
hlt
hlt
dec
mov
jge
jle
add
push
mov
sbb
bound
sbb
push
ret
jb
mov
inc
nop
cmp
movsb
dec
call
mov
ljmp
rdtsc
add
fadd
and
jmp
ret
cmp
pushf
mov
lea
xor
jnp
sbb
cmc
rol
loopne
push
daa
mov
pusha
stos
in
fcoml
repz
cmp
pop
ret
ljmp
movsb
sti
cmp
pop
push
mov
in
sub
lahf
in
cs
mov
push
sub
inc
popf
lret
fisttpll
das
inc
and
repnz
push
pop
notb
jbe
mov
int3
std
out
ret
outsl
movsb
push
push
divb
mov
push
push
mov
cmpsb
leave
push
sub
lret
xchg
jno
in
or
cmp
subl
dec
test
xchg
xor
outsb
and
sub
sbb
ds
mov
xchg
cltd
mov
outsb
sub
push
xchg
mov
ja
add
int
inc
loop
insb
addb
dec
jecxz
sub
fsubrs
out
sti
fdivrl
lahf
std
ss
adc
mov
mov
pop
ret
cmp
in
mov
xchg
pop
pop
adc
repz
add
and
mov
push
add
cmp
sbbb
pop
push
outsb
imul
mov
cs
adc
fldl
pusha
add
jns
pop
rcll
dec
and
repnz
fs
clc
mov
pop
mov
fisubl
shll
mov
test
lock
addr16
add
xchg
or
arpl
shll
xor
cmp
call
mov
cwtl
movsl
lods
mov
xor
mov
js
scas
xchg
pop
js
xchg
sub
insl
jbe
push
mov
inc
push
inc
pusha
stc
inc
xchg
dec
push
std
cmp
cltd
xchg
mov
mov
lret
adc
cmp
xor
test
mov
mov
cmp
stos
shll
pushf
jmp
push
pusha
mov
scas
dec
fisttps
cmp
mov
js
outsl
daa
mov
mov
aaa
ret
rolb
fbld
in
push
lret
adc
fidivs
popa
mov
sarl
xor
push
mov
cwtl
inc
mov
jbe
mov
xchg
scas
data16
data16
fildll
pop
ret
dec
push
pop
pop
inc
icebp
pusha
xchg
addr16
push
out
imul
mov
pushf
jbe
sti
fwait
xchg
mov
lahf
stos
cmpsb
int3
mov
jg
pop
mov
push
inc
aas
shlb
jp
je
xchg
add
and
inc
inc
xor
fisubs
into
loop
push
adc
xchg
sub
jno
jge
jno
dec
mov
push
xor
popf
mov
mov
negb
jnp
xchg
jae
dec
sbb
or
decl
mov
inc
loop
add
sub
cmc
cwtl
in
mov
cmp
and
jno
jmp
mov
imul
mov
ret
outsb
jb
push
in
hlt
shll
pop
pusha
testb
clc
and
jmp
lds
js
clc
and
fdivrl
adc
das
jl
sbb
xchg
in
sbb
frstor
pop
lahf
adc
insl
lahf
cmp
cmc
jp
mov
add
push
cld
adc
push
pop
lods
mov
pop
lret
sub
mov
xor
sbb
jp
gs
cs
cmp
jns
adc
lret
inc
ret
jbe
popa
es
in
push
or
data16
add
aam
inc
out
mov
jae
pop
add
dec
mov
stos
xchg
scas
aam
loop
ret
into
out
aaa
sbb
cwtl
cmp
les
shrb
push
dec
loop
xchg
sbb
adc
cmp
iret
pop
pop
jo
rcrb
test
cli
push
stos
cld
sahf
xor
push
out
or
jg
inc
call
dec
pop
mov
pushf
fwait
dec
in
jg
in
mov
and
fmul
int
repnz
cld
or
test
test
test
cmc
mov
int
js
cmp
cs
int
add
or
bound
mov
movsl
clc
jno
cmp
lods
dec
popa
stc
push
jae
dec
dec
pop
std
mov
pop
xchg
lahf
movsl
inc
sbb
out
cmp
add
xor
sahf
xor
movsl
mov
aas
sub
outsb
push
adc
clc
je
pop
push
sbb
addr16
fs
test
imul
leave
sbb
lahf
mov
shl
xlat
es
mov
lret
ret
pop
xor
into
xlat
iret
repnz
mov
loope
mov
fsts
jae
pop
icebp
out
ss
pop
sbb
in
ljmp
dec
mov
loope
dec
fidivs
cs
dec
fldt
or
inc
fcoms
adc
push
add
aas
mov
add
imul
data16
push
mov
in
out
insl
ficoml
les
insl
mov
daa
jg
mov
mov
pop
jecxz
outsl
aaa
leave
dec
mull
cmp
std
cwtl
in
push
dec
nop
dec
test
ja
aad
sub
sub
movsl
xchg
test
scas
movsb
jno
mov
jb
pop
add
sbb
jp
cmp
fldt
test
std
mov
das
call
shlb
movsb
or
rcrb
js
dec
push
cmp
push
aad
fadds
leave
in
addr16
shlb
aam
dec
pop
xlat
jle
dec
repnz
repnz
test
or
out
lea
stc
pop
imulb
gs
dec
jbe
fdivrl
xchg
mov
cmc
mov
cmpsl
dec
lods
jo
inc
addr16
mov
mov
cmp
je
popf
js
mov
and
cs
or
or
sbb
out
cmpsl
jne
cmpsb
ja
stos
fistpll
fistpll
inc
pop
jl
cs
push
sub
mov
sbb
mov
or
scas
pop
sub
xchg
nop
test
cmp
jmp
push
sbb
cmp
lcall
cwtl
stos
sbb
push
lret
mov
push
leave
dec
lods
mov
cmp
int3
mov
mov
sbb
add
iret
fistpl
and
outsb
lcall
stos
jno
lods
mov
aam
add
out
test
mov
or
sub
insb
jl
shl
aaa
mov
push
out
push
inc
dec
lods
mov
jle
stc
jecxz
loope
or
pushf
lods
and
mov
dec
std
sbbb
pop
loope
dec
dec
mov
fildll
in
xchg
enter
sbb
or
popf
test
ficomps
ljmp
lods
popf
shlb
push
xor
icebp
jb
xor
rcrl
adc
imul
fsubr
push
dec
sub
jnp
jbe
pop
sub
add
sbb
sub
loopne
sub
into
adc
mov
pushf
hlt
jle
outsb
mov
push
cs
jg
sbb
mov
or
sub
mov
daa
es
xchg
fs
jg
add
sbb
sbb
or
dec
arpl
jno
push
fisubrs
in
mov
stos
aas
jo
mov
leave
push
add
lods
aaa
pop
sahf
push
setge
pop
arpl
add
mov
ljmp
out
add
fnstsw
cmpsb
lea
fs
or
sbbb
cmc
dec
jae
mov
dec
in
nop
rcll
stc
insb
add
and
cld
sahf
mov
dec
dec
jl
mov
movsb
push
mov
dec
add
cmp
jg
pop
push
loope
pop
xchg
sbb
sbb
mov
insb
lds
mov
cmp
shll
mov
jbe
mov
cmp
add
mov
ret
out
cli
repnz
add
xor
ret
sbb
pop
int3
dec
xchg
in
loope
pop
xchg
fcomps
inc
lcall
iretw
stc
jg
lock
inc
enter
sbb
push
jno
xchg
aas
sub
lds
xchg
stc
push
jg
loope
rclb
ret
pop
xchg
mov
mov
loope,pt
cmpb
mov
mov
inc
in
call
mov
enter
lahf
fs
sub
dec
mov
xchg
adc
cli
xchg
mov
loopne
pop
jne
nop
push
sbb
lret
std
pop
out
dec
daa
pop
jno
hlt
and
lret
mov
xor
cmpsb
es
mov
pop
push
add
sbb
sub
mov
push
sbb
dec
jbe
adc
scas
fs
or
adc
rcrb
in
cs
fiaddl
movsl
dec
rclb
mov
gs
ret
bound
xor
adc
or
adc
mov
xchg
mov
xchg
inc
push
fistpll
adc
sahf
std
enter
push
es
mov
adcb
cltd
xchg
pop
in
aam
outsb
pop
mov
int3
mov
mov
jl
mov
mov
add
cmp
xchg
adc
loope
je
xchg
scas
and
mov
clc
inc
inc
inc
inc
sbb
dec
and
inc
pop
out
ja
jmp
or
imul
adc
xchg
les
dec
xor
sbb
jbe
or
int
arpl
loope
mov
mov
adc
mov
xchg
sbb
sti
cmp
sbb
es
mov
push
push
jecxz
adc
push
aas
or
fwait
xchg
pop
je
leave
outsb
xorb
pop
fs
sub
xor
push
cmp
jp
dec
mov
push
cmp
jbe
sub
loope
sbb
clc
add
mov
fstps
jg
mov
pop
mov
push
pop
std
xchg
xchg
sbb
cmpsb
fidivrl
jp
nop
mov
cmp
xchg
sbb
add
xor
inc
hlt
push
lock
sbb
rolb
nop
or
mov
imul
mov
push
inc
cmpsb
sti
adc
cmp
push
inc
push
add
arpl
inc
xlat
dec
inc
push
jmp
popa
ret
rorb
push
ret
outsl
loope
rcll
xchg
mov
nop
lret
icebp
push
cmp
fcoms
shlb
lods
iret
dec
repnz
push
enter
push
ss
push
push
or
inc
aam
out
pop
jl
sbb
insl
inc
enter
add
lret
aad
xchg
mov
imul
movsb
lret
inc
rorl
jle
dec
push
sub
lock
xor
push
pop
jbe
faddl
addr16
cmpb
or
mov
push
arpl
scas
in
sti
shll
mov
scas
stc
push
xlat
pop
call
pop
out
inc
push
lds
cld
es
xor
aaa
shlb
xchg
gs
dec
inc
loopne
lahf
or
xchg
jl
xchg
jns
and
jnp
or
mov
sub
and
cmp
imul
and
xor
inc
shl
imul
sbb
mov
mov
jge
sbb
in
lahf
rorb
sub
bnd
cwtl
xchg
pop
mov
or
jle
inc
and
jmp
or
jo
inc
lods
xchg
add
ds
in
nop
xchg
add
fdivrs
fs
cmp
xchg
push
mov
cmc
cwtl
imul
in
test
fcomp
mov
push
into
xchg
adc
popa
jmp
or
mov
andb
mov
adc
add
pop
outsb
xlat
sbb
lret
jle
stos
in
jecxz
int
shrb
cmc
loopne
leave
push
rolb
ljmp
ss
fisttpl
es
mov
mov
add
sbb
dec
enter
stos
sbb
fldt
adcl
mov
not
sti
in
stos
xor
popa
fdivl
out
fsts
rol
testb
mov
push
loop
leave
insb
dec
dec
mov
shl
fldcw
andl
inc
jl
dec
inc
mov
and
mov
test
repnz
mov
loopw
leave
jg
and
jle
data16
inc
cli
andb
jmp
and
adcl
cmc
ss
scas
cmc
jae
cmp
sar
or
mov
insl
cmpsl
leave
lods
add
add
sbb
sbb
jg
sub
cmpb
mov
fmuls
mov
pusha
push
dec
loopne,pt
fistl
jge
andb
lock
push
scas
scas
mov
xorl
adc
or
mov
push
call
adc
sub
sub
or
add
lods
dec
jp
out
and
pop
enter
pop
xchg
add
xor
fdivr
add
mov
adc
pop
mov
movsl
push
inc
int
cmp
mov
inc
dec
fisttps
aaa
imul
mov
dec
mov
xchg
in
sbb
fists
push
or
outsl
mov
fsubrs
sub
push
xor
call
loope
fwait
xor
jp
sub
call
jg
xchg
pop
lods
mov
popa
xchg
outsb
std
or
mov
stos
xchg
test
push
lret
data16
jl
test
mov
push
popa
aas
dec
sbb
iret
aam
clc
inc
loopne
scas
movsl
and
cs
xor
testb
inc
jge
and
fsub
xchg
les
lea
mov
in
jbe
adc
cmp
mov
mov
fisubl
icebp
mov
shll
dec
cmc
scas
loop
xor
mov
sub
jle
mov
sbb
lcall
dec
push
dec
sahf
mov
jo
fmul
dec
or
testl
sbb
inc
rcll
sti
stos
jno
test
loop
insl
jg
inc
hlt
inc
jl
inc
push
popa
push
cmp
jl
sub
mov
mov
and
push
arpl
xor
ljmp
popf
xlat
rorl
push
add
mov
andl
and
dec
pop
jo
add
ljmp
lock
cmpsl
pop
and
sub
in
mov
ds
push
insl
xchg
daa
or
jbe
insb
cli
fs
or
or
pop
jnp
sbb
fdivl
xchg
pop
sbb
lods
fsts
pop
jae
ficoms
fdivrl
and
inc
lea
shlb
mov
loope
inc
pushf
cmp
mov
and
loop
xchg
js
lea
xor
jp
jg
inc
flds
fnstenv
xchg
fucom
cmpb
jp
imul
ljmp
jno
sub
sti
fwait
dec
fsubr
addl
xchg
xor
in
js
rcrl
data16
xchg
scas
mov
ret
hlt
ljmp
inc
vpavgb
test
xchg
imul
sub
pop
push
dec
lret
bound
dec
or
stos
pusha
cli
test
xchg
stc
mov
insb
push
inc
sub
mov
fildll
fcompl
test
xor
les
jecxz
and
leave
jo
repnz
sub
push
ljmp
xor
mov
sub
lea
and
in
xor
dec
push
shl
push
int
sbb
int3
arpl
out
rcrl
push
out
lcall
jl
pop
mov
and
cmpb
jnp
mov
mov
test
ficomps
mov
mov
sti
cs
ds
mov
sbb
mov
pop
mov
push
mov
addr16
lcall
pop
mov
jbe
icebp
fdivl
stos
inc
cmp
push
mov
push
push
mov
sbb
push
sub
mov
add
sub
sbb
push
lods
arpl
inc
mov
xor
cmc
aad
cwtl
dec
push
sbb
scas
pushf
and
imul
and
xor
cmpsl
mov
adc
sahf
pop
fs
mov
mov
mov
cli
test
cmp
int
mov
ljmp
and
lret
test
mov
sub
dec
notb
imul
mov
mov
fwait
or
dec
ja
mov
xor
jmp
aas
lcall
aad
ss
gs
fsubs
and
sbb
sti
mov
out
jl
pusha
adc
pop
roll
jle
iret
adc
test
xchg
push
lahf
sub
pop
aad
fildl
jno
mov
out
loopne
mov
leave
into
xor
mov
stos
jmp
call
test
cld
shlb
repz
jae
adc
cmp
dec
and
int3
xchg
push
hlt
adc
dec
fmull
shrl
jp
jbe
dec
and
cmp
dec
xlat
icebp
dec
or
adc
sarb
add
outsb
lahf
mov
mov
insb
cltd
jmp
mov
mov
es
lret
sahf
ret
push
hlt
xchg
out
sbb
sbb
and
psllw
out
xchg
jns
decb
xor
into
xor
in
les
jmp
sbb
and
pop
xchg
xchg
lahf
sbbl
aaa
or
mov
out
mov
add
mov
loopne
inc
repnz
cmp
push
and
and
dec
pop
rcrb
pop
mov
lret
addb
sbb
add
fldt
xchg
sub
lods
icebp
das
mov
popa
mull
testb
cmp
jle
adc
sbb
mov
mov
and
lock
sub
data16
imul
bound
push
cmp
pop
filds
xlat
outsb
and
leave
cmp
arpl
fsts
movsb
adc
stc
or
mov
int3
dec
pop
adc
mov
bound
loopne
add
imul
pop
lock
icebp
add
test
shll
rcrb
test
hlt
popa
mov
ficoms
fsub
punpckhbw
add
mov
lret
mov
call
movsl
jle
dec
lock
mov
std
or
xor
mov
dec
push
xor
dec
stos
outsl
jge
cs
cmp
or
clc
or
inc
or
add
fimuls
sbb
adc
sub
mull
pop
sti
xchg
shlb
fists
test
mov
mov
jne
sub
pop
loope
push
mov
shrl
jbe
adc
mov
ret
test
dec
xchg
pop
out
adcl
inc
ficompl
dec
lock
xor
mov
push
mov
stos
cmp
out
nop
adc
mov
arpl
xchg
repnz
in
clc
sbb
push
jne
imull
sub
stos
lea
das
dec
push
push
sbb
or
mov
mov
cmc
maskmovq
lea
lea
and
pop
mov
adc
pop
call
sbb
pop
push
xchg
and
mov
gs
jecxz
clc
xchg
or
mov
jbe
popa
and
mov
jmp
pop
mov
ret
js
sbb
dec
jl
cmp
cltd
mov
jbe
les
mov
adc
push
imul
lea
cwtl
mov
and
lods
push
sub
movb
cmp
push
sub
sub
in
jecxz
adc
inc
ficoms
sti
in
dec
bound
adc
add
jne
xlat
xor
out
stos
popf
jecxz
out
in
mov
xor
push
lahf
xchg
ret
or
sub
cmc
xchg
xor
test
push
stc
xor
andl
add
xchg
enter
imul
in
popa
mov
mov
mov
and
lods
das
shll
aaa
int
in
cli
xchg
sarl
fyl2xp1
push
jmp
inc
mov
dec
sahf
pop
mov
scas
lods
xchg
cmp
cmp
pop
inc
cltd
push
loop
cs
cmpsb
or
shll
jae
stc
push
mov
movsb
jno
hlt
jb
jecxz
add
inc
flds
xchg
popa
call
jne
inc
paddusb
movsb
jle
sub
add
addl
adc
hlt
repnz
subb
inc
pop
push
push
mov
outsl
mov
push
jnp
push
and
pop
pop
movsb
shrb
std
inc
fs
jnp
add
xchg
sub
mov
push
cs
clc
push
out
fwait
daa
dec
pop
inc
outsb
add
sbb
aas
pop
lea
inc
xor
push
enter
sbb
in
fcompl
or
jl
jmp
test
rorb
scas
xchg
jp
jno
mov
in
sub
nop
mov
jmp
xchg
sarb
mov
sbb
daa
rol
stos
lahf
rol
inc
iret
mov
fs
cmp
aad
or
daa
add
ja
cmp
push
push
sub
jnp
adc
pop
mov
xor
insb
sbb
mov
or
push
sub
int
add
scas
sub
rcll
mov
fsubp
mov
push
jns
push
xor
or
xchg
xchg
add
ss
xorb
pop
jnp
addr16
adc
inc
sub
inc
jge
test
into
inc
int
dec
out
sti
cmp
fisttps
mov
and
insl
jae
insb
sub
adc
lcall
cs
lods
pop
adc
in
xchg
inc
add
xor
in
std
fisubs
cmp
je
dec
xor
xchg
mov
xchg
jmp
adc
jns
dec
lahf
ljmp
movhps
aad
push
lahf
int
inc
inc
inc
in
cli
inc
in
out
jmp
sub
pop
and
jecxz
add
mov
fists
push
xchg
data16
sti
mov
push
jle
xchg
rorb
imul
in
ds
aaa
dec
xor
repz
jno
adc
mov
pop
shlb
lods
pop
stos
inc
pop
into
inc
flds
jnp
push
outsb
lods
pusha
xor
xlat
outsb
mov
mov
push
push
cmc
adc
loope
je
sbb
mov
xchg
sti
add
sub
jb
aas
xor
fwait
xor
xchg
test
call
cmc
or
lcall
and
je
xchg
mov
push
in
pop
sbb
xchg
call
pop
aad
bound
jp
cmp
rcr
pop
insb
adc
popf
lea
mov
icebp
mov
mov
or
or
test
xor
jno
pop
call
or
sbb
mov
les
pop
jne
xor
imul
in
xchg
push
outsl
adc
repz
out
stc
pop
dec
inc
fnstenv
dec
and
push
jo
mov
adc
mov
and
movsb
idiv
loopw
jmp
jg
rorb
push
test
js
int
or
push
push
sub
adc
pop
js
sbb
lahf
mov
and
pushf
push
mov
nop
push
add
sbb
sti
enter
adc
mov
xchg
mov
sub
pop
sub
fistps
mov
ja
je
inc
push
pop
outsb
pop
xor
cli
aas
add
leave
xor
push
sub
out
je
js
push
sub
jne
addl
dec
add
push
divb
mov
cmp
inc
jmp
dec
mov
mov
mov
sub
pop
fwait
loop
jecxz
adc
jae
test
pop
xchg
sub
cmc
cltd
cmpsl
call
adc
movsb
lea
cmpsb
mov
add
mov
or
mov
dec
insb
repz
shll
mov
xchg
imul
test
or
rol
jae
pop
jg
sbb
pop
sahf
shrb
shl
add
dec
into
and
add
push
in
test
lods
inc
sbb
mov
insl
aas
xchg
outsb
dec
int
dec
mov
shrl
jo
dec
push
add
bound
or
jo
inc
enter
imul
lea
in
shlb
jns
mov
cmp
leave
pop
les
cli
test
mov
stc
pop
push
xchg
jmp
inc
push
enter
shrl
mov
mov
inc
and
js
mov
dec
cmp
jp
shl
or
add
nop
jge
sbb
xor
stos
dec
pop
dec
in
insb
stos
inc
lods
push
add
xchg
fimuls
out
mov
mov
out
mov
dec
repnz
push
call
push
call
mov
push
fiaddl
sbb
faddp
push
jmp
mov
xchg
imul
pop
xor
add
nop
iret
jecxz
add
add
movsl
push
into
add
out
rcrl
scas
daa
inc
jmp
ljmp
pop
int3
dec
loopne
mov
lods
cs
sbb
mov
mov
and
dec
sahf
push
lds
adc
mov
inc
test
jo
lods
icebp
cmp
sub
dec
dec
arpl
and
add
add
outsl
jnp
fs
xchg
and
pop
aad
aad
and
js
mov
xchg
stos
inc
and
sub
addr16
pop
or
adc
mov
jo
jmp
cli
movsb
pusha
xchg
cmp
jnp
cmp
pop
and
cmp
lds
cmp
stc
cwtl
pop
cmp
sbb
push
jne
mov
jecxz
stos
cltd
sub
test
mov
push
sarl
ds
ficompl
shrl
jl
pop
adc
xor
loope
test
sub
jl
add
call
cmp
push
insb
sub
in
sub
push
pop
mov
xor
adc
jo
int3
fcmovnb
sub
hlt
dec
mov
jae
mov
pop
adc
mov
iret
loop
lds
mov
aam
inc
adc
mov
cmpl
push
rolb
adc
in
fnstsw
inc
mov
incl
lds
inc
into
dec
inc
test
add
cmpsb
call
mov
insl
test
pushf
sti
add
shl
mov
lock
call
cld
mov
dec
dec
jecxz
adc
jo
dec
out
jae
fadds
or
inc
scas
cltd
jnp
loope
ja
cmp
imul
fstpt
mov
lret
pop
mov
push
inc
outsb
repnz
push
inc
sbb
fwait
scas
pop
sub
outsb
aam
jns
sub
or
shlb
out
ret
add
xor
mov
loopne
add
cmp
in
js
or
add
sahf
mov
push
mov
dec
mov
shll
dec
test
fisubrs
fnsave
mov
add
cmpsb
int3
pop
sbb
and
add
and
jmp
dec
dec
test
pop
sbb
mov
push
fwait
sbb
jns
nop
mov
cld
sub
lret
ja
or
stos
push
sahf
push
xor
pusha
fs
mov
out
add
pushf
sbb
cltd
test
int
or
or
jp
test
in
pop
les
mov
sub
repz
ja
lcall
mov
mov
into
sahf
loopne
and
popf
insb
jne
push
cmpsl
popf
test
mov
jns
pop
outsl
jo
mov
mov
mov
xchg
sarl
jg
push
outsl
or
jbe
sarb
fiadds
sbb
jne
mov
fdivs
dec
sub
mov
shl
inc
xlat
testl
pop
das
rolb
push
mov
enter
xchg
notb
outsb
xchg
pop
repz
push
jbe
pop
jp
lea
cmpsl
mov
das
das
xor
sbbl
in
clc
out
jg
or
repz
jg
add
and
add
mov
dec
ficoml
cld
adc
and
mov
pop
out
pop
mov
fists
xor
sub
xchg
mov
sbb
mov
jo
fwait
pop
out
mov
pop
test
xchg
jg
xchg
add
mov
dec
cs
xorb
sub
lods
aas
daa
insb
mov
cmp
cmpsl
jg
adc
aaa
and
xor
push
arpl
stos
jbe
dec
das
fiaddl
dec
jecxz
pop
loopne
leave
out
xchg
sub
sbb
inc
aaa
imul
sub
pusha
loope
out
cmp
mov
test
or
push
sub
inc
pop
jb
cmpsb
sub
jne
lods
jmp
dec
push
dec
movsb
xchg
cmc
xor
aad
gs
imul
mov
out
test
lret
xlat
lahf
pusha
xchg
push
je
call
stc
pop
fnstcw
sbb
subb
add
pop
packssdw
xor
mov
arpl
cld
insl
bnd
aad
push
cmc
cli
mov
cmp
dec
aam
clc
jae
out
push
xchg
jg
mov
or
xchg
mov
enter
mov
icebp
leave
pushf
clc
stos
mov
push
jb
fisubrs
in
stos
xchg
xor
int
cld
dec
movsb
test
push
outsb
mov
dec
mov
lret
and
push
sub
lods
insb
test
test
cltd
mov
icebp
push
adc
dec
mov
js
fimuls
sbb
aam
cmp
xchg
ja
cwtl
iret
lea
pusha
imul
or
lods
and
jle
call
imul
push
dec
fs
jle
push
into
mov
jnp
mov
ret
xchg
xchg
mov
push
xchg
sub
dec
test
je
cmp
mov
sbb
mov
sbb
inc
and
cmpsl
fsubr
push
push
lods
pop
out
jbe
mov
dec
push
pop
imul
scas
mov
lahf
clc
xor
fdivs
xor
xchg
int
or
cmp
arpl
lret
and
pop
outsl
ret
mov
pop
dec
jecxz
mov
ljmp
inc
cltd
aad
inc
sbb
das
or
fsubl
mov
jmp
inc
test
ret
iret
lcall
scas
pushf
test
iret
testl
and
mov
lods
iret
in
sbb
push
adcl
cmpsl
mov
inc
xor
repnz
xchg
call
or
into
cmp
repz
ja
out
inc
or
js
shrb
aam
sub
nop
pop
aas
mov
icebp
xor
mov
mov
add
fwait
cmpsl
and
mov
dec
jl
push
das
dec
out
jnp
xlat
insl
dec
out
clc
and
xchg
mov
push
jns
mov
imul
xor
dec
push
cmpsl
jl
push
mov
mov
cmp
jp
subb
sbb
xor
fidivl
xor
rcl
icebp
dec
add
cli
in
hlt
std
xchg
and
push
mov
popa
mov
dec
lea
popa
sti
push
bsr
jo,pt
fistl
cmpsl
sbb
dec
dec
enter
in
imul
sub
repnz
sub
enter
xor
push
push
xchg
dec
jb
jl
sbb
int
add
xacquire
sub
movsl
cmp
xchg
lahf
push
lds
jae
cmpsb
shr
push
pop
stc
or
sub
mov
ja,pt
cmp
rclb
inc
sub
pop
pop
addr16
sub
xor
mov
xlat
outsb
jl
enter
xlat
jns
pop
pop
cmp
xchg
pop
ret
push
push
add
mov
cmp
mov
inc
rcrl
xchg
clc
jg
xlat
mov
fstpl
scas
dec
adc
jae
push
mov
data16
or
cmp
data16
adc
xor
in
es
out
and
jne
jo
push
push
jg
sub
sub
sub
mov
inc
pop
decl
jmp
push
testb
inc
into
sbb
sbb
jmp
and
sub
out
sbbl
addr16
mov
adc
push
shrb
add
out
icebp
dec
mov
daa
outsb
sbb
cltd
sub
movsl
aaa
push
xchg
add
data16
pushf
jmp
cwtl
adc
fdivs
loopne
loop
loop
push
ljmp
mov
add
psubd
or
aam
iret
jmp
jg
sbb
mov
inc
push
fcomps
mov
inc
fidivl
lret
xor
aad
testl
mov
adc
popa
cmp
jnp
mov
and
stos
out
test
int
mov
pushf
outsb
insl
mov
jne
xor
push
idiv
dec
mov
jg
xchg
orb
push
cmp
into
pop
cmp
imul
mov
push
inc
mov
jp
or
and
add
xor
inc
adc
cmp
push
lds
in
push
in
mov
fwait
dec
or
shl
dec
mov
test
shll
pop
popa
push
or
imul
or
adc
or
aad
iret
loopne
inc
xchg
sub
sub
jb
xchg
mov
js
mov
xchg
lds
popf
xchg
cmp
xor
in
adcl
fsubl
es
gs
mov
and
arpl
int3
xor
jl
push
cmpsl
jecxz
js
bound
mov
sub
sub
dec
xchg
sbbl
jmp
and
sbb
cmpsb
in
dec
shlb
adc
fnstenv
push
outsb
sbb
jns
loopne
cmpsl
cwtl
sahf
mov
enter
pop
pop
icebp
mov
js
inc
movsb
push
shlb
xchg
bsr
aas
lods
xor
inc
fcoms
jle
out
jecxz
and
adc
test
arpl
pusha
push
pop
sbb
mov
or
stos
mov
fnsave
mov
imul
lret
sbb
popa
inc
loop
clc
sub
cmc
popa
cwtl
dec
jg
js
jmp
or
push
adc
xchg
sub
imulb
push
insl
dec
mov
cmpsl
and
addl
outsl
add
xchg
inc
add
incb
mov
fs
push
test
cltd
mov
leave
not
shlb
pop
fbstp
es
dec
mov
mov
jne
outsb
andb
adc
in
test
sbb
pop
xchg
out
repnz
xlat
stos
mov
ret
insl
fists
scas
ret
out
inc
out
adc
pop
fldt
xchg
bound
stos
jbe
fsubr
jle
push
lods
or
fwait
lahf
jbe
fisubrl
leave
gs
cmp
ss
pop
hlt
jnp
push
mov
nop
cmp
lds
inc
out
in
pop
and
mov
dec
xchg
popa
jg
and
or
popa
je
fisubs
lds
jle
ljmp
mov
xor
inc
out
xchg
sbb
out
xor
sahf
xor
lea
add
stos
stos
pushf
pop
stos
or
stc
pop
pushf
mov
push
or
inc
pop
cmp
pop
sbb
dec
inc
cmp
pop
mov
sbb
push
dec
jbe
das
cmp
int3
lods
xchg
push
cmp
or
add
int3
movb
mov
hlt
push
push
cmc
adc
roll
pop
jmp
push
mov
push
imul
push
scas
gs
pop
add
scas
loopne
fcomps
pop
fwait
dec
icebp
jb
icebp
call
xchg
mov
mov
push
outsl
outsb
adc
int
lds
jbe
sbb
pop
dec
andb
lock
les
sub
mov
loope
sub
andl
lock
inc
sbb
fidivrs
dec
in
add
push
mov
jnp
or
or
lahf
cmp
push
in
push
mov
aaa
insb
arpl
rorl
nop
call
shll
cmp
stos
pop
sarl
mov
add
bound
mov
mov
cmp
dec
int3
sbb
jns
cmp
fs
jns
fmull
add
notb
and
xchg
clc
dec
in
mov
cmpsb
in
stos
fcmovb
add
in
add
mov
pop
das
dec
push
popa
inc
mov
jb
and
xor
addr16
stc
dec
into
insb
jp
jg
adc
int
mov
adc
pop
out
adc
add
and
push
mov
ljmp
outsl
mov
pop
pop
popa
inc
movsl
fbstp
test
mov
mov
push
xchg
cmp
std
pop
push
orl
es
outsl
or
ret
mov
stos
insl
xor
fs
in
sbb
cmp
sti
pop
leave
sub
jbe
xor
push
scas
popf
push
push
jge
jb
frstor
loopne
cmp
adc
sbb
pushf
mov
xlat
sub
inc
jne
lods
add
push
das
jno
gs
pop
pop
push
mov
jne
ds
push
xchg
jmp
lods
xor
movsb
les
adc
sbb
in
add
ss
cs
xchg
mov
mov
aas
lahf
cld
push
xor
pop
adc
push
int3
pop
jg
daa
mov
pop
je
pop
ss
pop
sub
cld
or
adc
pop
in
xchg
inc
sbb
add
sbb
mov
loopne
fsub
add
mov
ret
jmp
shlb
ja
pushf
xchg
sub
mov
pop
mov
ja
jns
or
lods
cli
xchg
ficoms
sbb
rol
adcl
inc
jne
mov
push
aad
pop
push
xor
aaa
test
gs
stc
out
push
adc
inc
sub
sti
pop
pop
divb
jp
insl
enter
leave
xorb
or
xchg
mov
pop
popf
testl
xchg
out
or
adc
aam
popa
fmulp
xchg
scas
add
call
aad
pop
ds
lods
and
sbbb
stos
adc
fidivrl
dec
repnz
xor
xor
add
inc
mov
popf
mov
aam
addl
mov
jno
es
dec
or
dec
xor
imul
pop
clc
mov
dec
je
dec
mov
push
in
ret
repz
icebp
cmp
or
dec
out
or
stc
mov
fwait
mov
inc
mov
iret
inc
shlb
out
add
mov
push
fnstenv
das
cli
push
divl
jbe
hlt
fwait
pop
stc
rclb
cmpsl
sub
xchg
lea
jg
pop
pop
jo
pop
mov
push
pop
xor
fadds
lock
std
sbb
mov
xorb
dec
lock
push
add
xchg
fisubrs
rol
repnz
add
xor
cli
inc
in
mov
dec
imul
vminss
sbb
cmc
cmpsl
adc
lret
enter
jmp
mov
or
std
ret
fwait
mov
subb
xor
popa
pop
leave
mov
xlat
mov
stc
cmp
aas
xor
mov
inc
loope
test
mov
adc
test
jae,pt
dec
in
cs
clc
push
or
rorl
shl
sub
stc
xchg
pop
xchg
cmpsb
rcrb
inc
pushf
sbbl
adc
dec
test
jb
cmc
inc
jae
dec
dec
fisubrs
cmp
fidivl
lret
leave
jb
cld
xchg
inc
xchg
fidivrl
jge
or
push
sbb
add
aaa
cmp
nop
sub
rclb
sub
jno
aas
mov
inc
mov
jns
jne
fwait
sbb
jne
mov
js
jl
sub
mov
popa
sbb
push
add
mov
shrl
mov
add
mov
loope
xchg
fisubl
or
pop
stc
outsb
std
outsb
cld
xor
das
mov
pusha
mov
mov
lea
addr16
inc
xchg
lods
cmpsl
enter
xor
int3
not
repnz
aad
push
inc
ds
inc
cs
negb
mov
nop
jbe
xor
ss
imul
push
sub
push
sbb
into
xchg
repnz
lcall
xor
cs
popa
xchg
jle
stos
and
scas
xchg
sar
sub
repnz
and
cmpsl
jge
xor
pop
decb
pop
repz
xor
adc
mov
cmc
nop
dec
in
out
jmp
aaa
push
xchg
dec
or
sbb
and
cmp
jne
repz
ds
and
lret
add
fmul
inc
add
pushf
sbb
sub
hlt
dec
imul
lcall
dec
movsb
and
push
icebp
adc
aaa
int
daa
add
aas
sbb
in
mov
push
mov
into
fbstp
ja
mov
mov
pop
orb
mov
in
pushf
fdiv
xchg
stos
in
icebp
xor
jmp
xorl
mov
leave
sbb
or
sbb
inc
clc
or
fbstp
and
mov
cmp
stos
inc
or
mov
mov
test
mov
loope
nop
push
sub
hlt
mov
aad
in
add
or
out
std
push
outsb
std
test
fwait
pop
lock
pop
bound
fdiv
mov
popa
add
xlat
stos
xlat
mov
mov
cmpb
pop
adc
test
add
cmpl
addr16
dec
inc
inc
rcl
repz
pushf
push
jecxz
test
leave
pusha
loopne
add
add
bound
int
test
jecxz
jns
inc
add
xchg
dec
sub
dec
out
inc
aaa
sbb
es
push
daa
repz
clc
movsb
xchg
test
clc
mov
add
xchg
cld
adc
sub
mov
sbb
in
inc
pop
xlat
cmc
fdiv
sub
sub
xor
mov
inc
sub
cld
fsubs
js
jl
and
decb
xchg
and
in
sub
aam
xchg
mov
sbb
out
movsb
les
sub
faddl
pop
cmpb
add
or
sahf
or
out
sti
pop
jo
ds
lds
daa
cmp
fxtract
test
dec
pop
cli
clc
mov
cmp
and
ficoms
cmpsb
test
mov
shrl
scas
inc
testb
xor
mov
jmp
jge
xor
std
mov
in
xchg
add
out
int3
xor
js
lock
sbb
popa
jg
add
sarb
cli
daa
jle
jnp
arpl
dec
xor
push
imul
das
xchg
int3
jge
cmp
lea
mov
pop
arpl
cmc
xchg
mov
lret
mov
int3
pop
jns
ret
push
icebp
es
lret
jns
movsl
cmp
lcall
mov
pop
mov
sahf
cs
cmp
sbb
shll
nop
out
nop
sbb
dec
mov
mov
insl
xchg
sarb
outsb
sub
or
or
inc
mov
inc
leave
and
mov
lds
psubd
enter
xchg
rorl
push
inc
cld
test
negl
js
mov
jl
pop
jg
not
inc
aam
insb
dec
test
rorb
incb
mov
sub
adc
push
adc
jge
and
imul
addr16
and
cs
and
test
sub
testl
cmp
adcl
sbb
testl
cmp
xchg
cs
mov
sbbb
test
mov
popa
push
aad
stos
mov
cmpsl
push
cmp
jecxz
add
aam
lods
xor
rorl
int3
mov
loope
jno
shl
mov
lods
sub
xor
jne
adc
jb
or
scas
mov
push
lds
jecxz
in
stos
hlt
and
movsb
mov
jl
mov
jp
xacquire
sti
push
jnp
sahf
aaa
mov
movsb
mov
hlt
ds
push
arpl
xchg
mov
jg
ds
mov
fisubrs
xchg
jo
or
cs
je
sub
push
sarb
xchg
adcb
data16
cwtl
gs
out
imul
test
cmp
ja
mov
jge
sti
loopne
or
and
fisubrl
insb
add
stc
sbb
cs
jecxz
shlb
xor
pop
aad
push
jl
sbb
dec
out
jb
push
sub
daa
pop
lock
icebp
sbb
add
mov
jno
fcomps
divb
xchg
movsb
mov
sbb
inc
and
add
or
in
in
jne
dec
loopne
fmuls
cmp
test
fistps
pop
flds
call
fiaddl
and
jge
and
js
mov
into
test
sbb
sbb
movb
hlt
insl
cmp
jnp
roll
fldl
push
scas
cmc
cmpsl
jle
das
test
add
lret
inc
push
out
sbb
and
cmp
push
cmc
push
or
push
insl
sub
shrb
sbb
cmp
push
jge
ret
mov
sbb
out
imul
inc
enter
push
mov
and
push
jge
lods
xor
adc
inc
mov
pop
dec
cld
pop
int
mov
xor
insb
xchg
out
sbb
jecxz
ret
arpl
je
sub
adc
mov
les
cmpsl
sti
jne
xchg
mov
fsubr
xor
sbb
pusha
sub
das
outsb
xchg
jmp
shlb
cmp
insb
jg
fucomip
push
pop
outsb
fdivrl
inc
sub
inc
mov
aam
or
or
sti
adc
test
dec
pop
test
test
pop
cmp
push
pop
mov
mov
add
dec
adc
push
pop
sub
pop
pop
imul
add
or
mov
mov
pop
sbb
cmpsl
cmpsb
cmp
push
leave
add
sti
jne
dec
xor
aas
dec
imul
icebp
mov
movsb
inc
pop
das
ja
fwait
xor
mov
mov
pop
add
sarb
cmc
adc
fstpl
push
test
outsb
add
mov
fldl
sub
dec
push
fs
les
les
je
imul
mov
sbb
cmp
push
out
pop
ja
add
cmc
mov
loopne
loope
sub
out
push
movsl
sahf
cld
push
mov
mov
lods
push
ljmp
mov
fsts
hlt
test
lret
add
dec
test
push
mov
ffreep
mov
repz
mov
lods
cld
aam
sub
pop
or
mov
test
shrl
xchg
cwtl
sahf
jno
jo
mov
push
aas
mov
mov
lcall
stos
lods
xorl
lcall
in
push
push
mov
xor
js
push
arpl
jge
bnd
pop
in
rclb
cmp
push
outsl
sti
mov
repnz
les
push
out
push
mov
pop
sbb
in
mov
iret
or
sbb
sub
xchg
jne
sarl
mov
mov
pop
mov
push
loopne
nop
ss
xchg
call
cld
insl
sarl
xlat
pop
fmulp
xor
mov
pop
test
mov
leave
sbb
add
sub
xor
xchg
pop
ficoms
adc
stc
pop
scas
dec
cmc
popa
jg
scas
mov
mov
sbb
scas
dec
mov
fwait
in
xlat
mov
stc
ret
xor
aam
popa
push
arpl
inc
or
sbb
dec
cmp
es
cmpsb
js
xchg
mov
sub
add
or
xchg
dec
shll
int3
insl
repz
fistpll
es
loop
in
scas
ret
int3
int
gs
pop
jmp
xor
xchg
xor
adc
out
out
and
pop
sub
sub
jl
adc
aam
enter
lea
fnstenv
in
sti
adc
pop
push
xor
orb
pushf
sub
imul
push
stos
mov
xor
movsl
loope
jnp
inc
dec
mov
fiaddl
mov
xchg
sarl
data16
aad
icebp
fldcw
sbb
js
sub
xchg
cmc
dec
aas
cmpl
jmp
jp
dec
dec
cwtl
ret
xor
or
mov
dec
lret
data16
notb
xchg
stc
adc
movsb
add
dec
stos
xor
in
sub
cld
pop
or
imul
pusha
outsb
mov
cltd
repz
push
adc
push
outsb
jmp
pop
xchg
js
sahf
test
jmp
sahf
sub
adc
xor
push
jb
test
out
mov
xchg
out
outsl
xor
mov
in
arpl
add
repz
fisttps
call
push
adc
out
push
mov
xor
add
data16
gs
outsb
cmc
mov
cmp
jmp
stos
push
cltd
stos
mov
mov
ljmp
addr16
pop
cmp
insb
jns
sbb
int3
mov
adc
fidivrl
adc
fildll
push
pop
test
push
out
xchg
jo
or
inc
repz
xlat
pop
out
add
jg
pop
insb
sub
ret
sbb
sbb
cmc
mov
mov
dec
add
lods
test
mov
shrb
subl
xchg
ss
ret
roll
pop
push
mov
ljmp
ja
cmpsl
pop
dec
fsubrs
nop
vmovaps
adc
rcl
sub
lcall
lods
mov
jecxz
inc
or
outsb
push
ljmp
jae
sbb
aas
mov
jno
mov
or
das
ret
icebp
push
jecxz
aas
fdivr
mov
int3
push
es
scas
mov
repz
ret
dec
mov
xchg
dec
or
pop
in
test
xlat
ret
subb
adc
mov
jl
push
mov
dec
inc
mov
ja
mov
sbb
jmp
or
scas
movsb
loopne
cmpsb
js
cmp
test
or
addr16
popa
or
stos
cmc
xchg
jae
add
sahf
push
mov
cli
cmp
inc
cltd
cmp
sbb
imul
push
add
cmp
dec
fstps
fidivrl
sbb
pusha
notl
pop
out
pop
orb
jne
cmp
test
dec
inc
inc
mov
aas
ljmp
mov
mov
in
and
rcll
stos
mov
mov
xchg
daa
cmp
gs
push
ficompl
add
jb
mov
ret
andb
pop
xchg
adc
loopne
hlt
pop
push
dec
mov
dec
mov
push
mov
inc
jae
or
push
and
loop
sbb
cmc
pop
dec
dec
cmp
mov
frstor
sti
adc
sub
subb
rorl
mov
js
scas
out
xchg
and
cmp
test
mov
fsub
xchg
stos
js
test
dec
xchg
sbb
fs
arpl
or
repz
ror
adc
cmp
xlat
outsl
adcl
in
cmp
jmp
xor
daa
mov
pop
jne
push
xor
pop
in
cmc
cmp
xor
sbb
jb
stos
and
adc
ret
cmc
inc
jecxz
push
adc
xorl
cmp
mov
pop
cmc
out
scas
mov
mov
shl
fldcw
and
cmp
std
xchg
das
sub
push
push
xor
jmp
jmp
push
cmp
lods
mov
fisubl
mov
sub
in
cmc
out
das
sbb
dec
mov
mov
adc
setp
fldenv
cmp
mov
fsub
sub
pop
push
push
jecxz
pop
mul
add
dec
add
aaa
into
push
shrl
ljmp
rclb
adc
test
mov
cmp
scas
jge
bound
lahf
xor
cmpsl
pop
jmp
adc
insb
push
xor
fsubs
test
dec
and
sub
and
push
in
dec
les
clc
rcl
fldcw
jg
pop
mov
cs
push
loope
pop
xor
dec
and
aam
fiaddl
mov
jne
xchg
push
jmp
sti
sbb
inc
pop
jb
xchg
nop
imul
movsl
mov
cltd
xor
ret
mov
push
fmul
pop
or
mov
inc
push
inc
stc
adc
jnp
xchg
push
adc
test
cmp
jg
shlb
out
jbe
pop
push
imul
sbb
outsl
dec
jo
sahf
fisttps
pusha
adc
pusha
cmp
leave
mov
pcmpgtd
push
test
orl
cmp
jecxz
loop
repnz
lods
jne
mov
jle
roll
arpl
sbb
sub
scas
inc
stc
int3
lcall
adc
mov
push
loop
cmp
jnp
lds
les
mov
xchg
cmc
xor
mov
add
adcl
xlat
xchg
sbb
ljmp
nop
push
stos
lret
dec
lcall
popa
scas
jmp
push
mov
js
hlt
fwait
das
adc
push
fistpll
xchg
add
mov
cmp
rolb
data16
mov
xchg
jl
cmpsb
ss
jmp
xchg
fwait
mov
sbb
cmp
in
shlb
mov
pop
test
cwtl
ret
pop
lret
inc
sbb
loope
popa
cmp
aad
test
inc
pop
lds
imul
pop
mov
cmp
ljmp
out
es
cmpsl
ss
mov
repz
push
cli
idivb
inc
mov
sbb
mov
cmp
xor
dec
addb
pop
xchg
in
aas
clc
add
push
enter
ret
shlb
orb
sbb
push
gs
lret
inc
xor
xor
hlt
or
int3
mov
mov
or
inc
test
jle
lahf
stos
or
jnp
lret
es
dec
push
out
sti
aas
jo
ret
xor
jnp
aas
mov
jno
data16
aad
cmp
and
cltd
jne
rcr
ds
outsl
inc
adc
inc
xchg
jae
cwtl
outsb
test
int
enter
mov
mov
aas
xchg
add
subl
and
push
push
lahf
insb
cs
repz
jp
xor
mov
test
xchg
movsl
sub
pop
dec
int3
fcomi
cmp
les
leave
pop
xor
clc
cmc
adc
push
lock
jmp
pop
xchg
mov
inc
pusha
jbe
lods
push
sahf
mov
pop
jle
sub
cmc
hlt
push
jecxz
rclb
cmp
aas
dec
imul
push
int3
adc
ds
xchg
sbb
addb
or
cmpsb
mov
pop
icebp
push
jns
das
pushf
adc
xchg
jns
xchg
test
mov
js
mov
shl
adc
popa
mov
pop
leave
jle
push
out
cmpsb
std
xor
outsl
pop
stos
inc
nop
mov
testb
mov
loopne
sub
jge
sub
fnstenv
into
in
fldenv
movsl
push
pop
loope
mov
in
mov
sub
xlat
sub
jno
outsl
rcrb
adc
or
push
xchg
sub
into
pop
lock
push
sbb
pop
add
scas
repnz
test
mov
outsb
cli
mov
lock
fldl
sub
xor
lret
fidivl
fldcw
and
and
lods
cmpsl
mov
or
js
jne
cmp
jbe
jge
mov
add
scas
sub
jae
mov
adc
clc
xor
shll
lods
mov
cld
jno
fs
xchg
and
mov
leave
fwait
xchg
int
aaa
push
inc
xchg
ror
fucomi
xchg
bnd
mov
sub
cs
imul
sbb
in
add
popa
clc
and
enter
xor
cmp
nop
daa
sub
stc
aas
test
adc
xlat
jg
pop
test
inc
or
jae
mov
int3
es
fdivrl
sub
rolb
dec
data16
add
sub
sub
jae
cmp
into
arpl
loop
dec
loop
ljmp
mov
jo
jge
jle
add
sbbl
jno
jno
ja
cwtl
adc
std
push
mov
push
jne
out
xor
scas
inc
loopne
fs
data16
mov
fnsave
push
in
lahf
jns
pop
add
xor
es
movsl
movsb
imul
or
mov
int3
enter
pop
mov
xchg
aas
jns
iret
pop
ja
in
arpl
in
std
xor
dec
adc
xchg
mov
xchg
inc
mov
cmpsb
pop
jge
mov
inc
mov
ja
je
mov
fucom
mov
push
ja
adc
inc
xlat
jno
lcall
sbb
dec
add
dec
cltd
or
cltd
sub
stos
bound
mov
or
xlat
in
pop
cmp
jne
out
ret
dec
xor
push
cmpb
out
adc
ja
xchg
inc
clc
mov
push
out
or
dec
or
sub
pop
outsl
orb
jae
mov
xor
mov
dec
pop
inc
lods
pusha
pushl
sbb
cmpsl
pop
std
inc
pop
nop
mov
cmp
mov
rolb
loope
fcmovu
push
adc
mov
test
xchg
lret
xlat
nop
mov
icebp
jl
inc
dec
dec
push
lods
cmp
adc
mov
push
fcmovu
or
cs
testb
push
jmp
fadd
jo
je,pt
and
popa
mov
jp
inc
cmp
adc
mov
add
sbb
lock
adc
inc
inc
mov
mov
lahf
dec
and
mov
mov
pop
int
mov
mov
cmp
out
popf
xchg
aad
stos
outsl
mov
divl
xchg
xor
push
fcmovnb
pop
repnz
or
daa
addb
stos
loopne
pop
mov
sub
clc
cmp
adc
jbe
stc
xor
sbb
inc
xor
lds
aas
push
mov
dec
fdivp
insl
das
pop
lahf
adc
inc
mov
fdivl
lret
addr16
shr
push
push
loop
or
cmp
fnstenv
push
sbb
shrl
xor
jg
dec
mov
mov
in
loopne
in
aad
je
jle
jb
lret
stos
dec
push
mov
ds
jns
and
cs
xchg
sub
xchg
movsb
xchg
mov
test
jno
fcomps
pop
dec
in
call
push
out
imul
xchg
lea
scas
data16
xor
add
mov
aas
lea
lds
cmp
add
push
je
jle
shrb
sbb
sub
mov
pop
xor
push
sbb
push
push
add
sbb
and
call
leave
jge
pop
stos
arpl
cs
mov
inc
cs
sbb
aas
fsubrl
icebp
in
push
imul
out
out
xchg
cs
lret
adc
fwait
sbb
sub
mov
cmp
jb
jae
mov
outsl
aaa
inc
orb
cld
push
sub
ljmp
push
aad
mov
lds
out
out
xor
cld
repnz
mov
rcrb
jle
mov
xchg
jmp
pop
push
sarb
and
adc
js
dec
push
or
jo
ficoms
jb
xor
add
rcrl
xchg
call
lea
push
out
jmp
rcrb
lahf
xor
or
inc
add
ror
jle
ja
mov
sbb
mov
call
loope
jno
dec
imul
push
enter
subb
cmp
inc
cwtl
lds
ret
into
popa
push
mov
popf
bound
inc
sbb
sbb
or
inc
dec
lcall
mov
xchg
pop
ljmp
mov
cltd
push
ljmp
in
mov
jne
mov
loop
mov
js
call
fs
outsl
jnp
dec
dec
and
enter
or
js
jae
xor
daa
je
stos
cmp
fstpt
sti
xchg
insl
mov
xchg
stc
pop
sbb
test
mov
push
loopne
sbb
pop
sub
dec
bndstx
and
add
cmp
stos
adc
notb
push
jne
flds
lret
pop
test
inc
mov
xor
cltd
fldl2t
int
mov
lahf
gs
jns
jns
cli
gs
in
outsb
into
pop
scas
mov
mov
push
and
inc
push
xor
dec
out
sub
insb
and
and
mov
jno
push
cmc
mov
jnp
push
insl
or
push
gs
jns
xchg
outsl
mov
scas
or
xor
lret
jb
jmp
jne
jg
fsubr
pop
mov
jmp
jp
mov
xchg
pop
inc
push
mov
xor
sbb
popa
or
imul
fdivrp
mov
jge
inc
in
fidivs
pop
fsts
pop
cld
pop
mov
test
lea
movsl
fnsave
jae
popa
movsb
in
mov
les
cld
push
add
loopne,pt
jae
jecxz
ljmp
dec
cli
jecxz
mov
andb
lea
push
inc
dec
dec
xchg
fsubr
cmpsl
cs
add
repz
and
andps
js
sub
loop
push
adc
xor
xor
testb
rorl
cli
adc
fbstp
xorb
push
mov
dec
mov
pop
iret
fmuls
divb
out
pop
aas
mov
jmp
sub
mov
add
push
ja
xlat
cmpsb
cmpsb
in
mov
imul
cmp
lods
dec
sub
iret
jmp
outsb
scas
out
jmp
lret
cld
rcr
clc
cwtl
call
add
dec
lods
ljmp
pushf
cmc
mov
fiaddl
fsubs
xchg
mov
sub
push
xchg
jge
imul
jo
mov
push
test
mov
push
xlat
ficompl
mov
dec
in
in
push
pop
pop
out
add
outsb
inc
lock
cld
xchg
popa
cltd
insl
bound
push
inc
inc
shl
jb
pop
sub
lds
push
pop
xchg
mov
push
fwait
xor
inc
jmp
push
shr
pop
cmp
push
stc
mov
sbb
jbe
cmp
stos
adc
andb
test
or
fildl
xchg
jne
out
xchg
scas
mov
xchg
jno
sbb
notl
lret
lock
mov
call
xor
mov
in
jp
aam
outsl
or
dec
stos
xor
rorl
push
fnstenv
movsl
jae
jge
xlat
fs
adc
sbbb
sub
xchg
xor
movsb
push
sbb
pop
scas
ret
dec
dec
pop
and
ret
pushf
push
mov
mov
xor
or
mov
sbb
push
stc
push
lds
sahf
fsubl
scas
aad
call
push
aaa
pusha
sub
push
movsl
mov
movsb
fcomps
add
loop
ja
iret
mov
inc
push
add
mov
jge
int
emms
push
jle
mov
dec
jbe
and
test
movsb
cmp
das
mov
stc
enter
cmc
jbe
add
cld
sbb
jnp
sub
repnz
xchg
dec
rcl
mov
rclb
popa
clc
lods
jb
out
sub
inc
pop
pop
pop
lock
sbb
icebp
mov
xchg
sub
out
mov
push
fs
mov
push
sbb
mov
or
dec
pop
jg
jo
adc
andb
sub
aam
and
lds
test
outsl
dec
xlat
dec
les
imul
test
add
scas
xchg
ret
push
in
dec
movsb
lret
jmp
pop
sub
sub
jb
inc
sbb
dec
sbb
mov
cmpsb
add
xchg
sahf
mov
loopne
rorl
mov
rcrb
xorb
insb
push
cmp
ljmp
dec
test
int
mov
scas
adc
add
lods
and
sbb
cld
push
push
inc
leave
test
int3
imul
mov
jl
mov
pop
dec
into
xor
jns
in
cmpsl
jmp
test
daa
fisubs
fcmovnb
movsb
mov
pushf
scas
xor
loop
mov
out
insb
sub
xor
cld
imul
push
mov
iret
adc
adc
lahf
jle
adc
fwait
rclb
push
stos
cmp
pop
ds
lcall
inc
je
mov
mov
add
sbb
add
mov
stc
push
dec
iret
push
sub
gs
add
ljmp
mov
sub
dec
add
mov
andb
lahf
pop
insb
jae
sub
scas
xor
xor
lods
mov
gs
in
sbbl
imul
sbb
sbb
mov
jecxz
jae
xor
and
insb
xchg
fldenv
and
and
in
into
repnz
xor
adc
in
mov
ljmp
nop
movsb
push
lock
pusha
mov
rcrb
mov
add
je
xchg
cs
mov
test
loope
ret
bound
lcall
ret
popf
sub
into
in
fwait
dec
dec
push
insl
and
jns
xchg
pop
fcomps
push
in
cwtl
das
or
jl
sbb
xchg
scas
xor
xor
lea
xchg
clc
mov
add
add
adc
mov
or
aas
mov
out
sarb
das
dec
add
loopne
js
loop
pop
adc
push
inc
push
xor
pop
arpl
out
jmp
and
sub
fwait
add
mov
mov
test
inc
popf
mov
hlt
inc
and
popf
lahf
scas
push
jecxz
and
mov
les
mov
pop
mov
fsubl
xlat
mov
adc
in
add
sbb
mov
orl
call
add
xlat
add
pusha
addr16
xchg
dec
dec
add
inc
shlb
jae
and
jae
add
add
dec
sbb
mov
fldl
mov
iret
or
or
insl
adc
mov
fs
xchg
ja
xchg
pop
arpl
cs
out
jg
popa
adc
shrb
and
stos
into
jecxz
dec
in
jmp
mov
xchg
cmc
inc
mov
cli
add
jle
cmp
insb
cmp
fsubrl
add
cmp
sub
icebp
cmp
ret
push
xor
sub
mov
mov
inc
scas
lea
stc
inc
int3
arpl
cmp
inc
imul
lea
adc
in
cs
add
mov
jb
cmp
cmp
adc
push
aad
aaa
sarb
xchg
aad
adc
dec
pop
cmp
lret
push
add
jle
test
rol
fcomps
pop
mov
add
loop
sbb
stos
mov
cmpl
icebp
in
dec
test
popa
imul
push
out
push
adc
orl
fsubr
xchg
int3
int3
pop
xor
clc
insb
popf
xor
xchg
jb
rorl
lods
loop
stos
add
adc
icebp
and
in
insl
imul
mov
xor
xchg
xchg
jne
pop
inc
subb
out
out
inc
daa
jge
pop
fs
sbb
stc
popa
and
add
ljmp
dec
dec
leave
inc
mov
iret
fstl
lahf
and
rorl
sti
mov
pop
sub
shrl
xorb
lea
or
lret
aaa
lea
inc
mov
sub
adc
pop
repz
adc
aaa
pop
cmc
xor
es
fcoml
inc
pop
mov
adc
xor
mov
ficoms
push
into
lds
pop
jne
mov
add
jp
daa
lret
or
push
push
mov
pusha
mov
dec
rep
fadds
adc
insl
aaa
push
jne
cwtl
ret
inc
sahf
lea
cmp
and
insl
stos
mov
std
mov
sahf
mov
inc
movsb
ss
outsb
or
fbstp
and
xchg
adc
xor
adc
scas
and
jp
loop
imul
mov
in
and
xchg
out
hlt
jle
push
pop
stos
shl
cs
out
mov
xchg
aas
mov
push
mov
fucomi
int3
xchg
pop
jns
inc
shll
dec
fsubr
mov
dec
xchg
pop
je
sbb
icebp
into
fwait
sub
andb
les
ds
xchg
outsl
sti
add
dec
push
and
mov
movsb
add
daa
mov
sar
mov
fcoms
stos
or
and
pop
jns
inc
movsb
daa
loop
and
sbb
sub
mov
testb
mov
push
mov
ljmp
push
mov
std
xchg
mov
sbb
int
sahf
push
or
cmp
push
sti
xchg
pop
int
test
negb
ret
negb
jae
mov
sbb
in
mov
lret
cld
or
mov
gs
and
les
insb
adc
sub
cmp
pop
pop
rol
mov
out
push
sbb
jle
fcmovbe
sahf
xor
sbb
mov
mov
jb
inc
scas
std
das
rorl
lock
dec
ret
jecxz
inc
bt
mov
inc
pop
js
int3
jg
push
pop
testb
out
into
cld
xchg
mov
outsb
cld
add
xor
and
mov
jbe
lcall
cwtl
xor
xchg
push
lods
xchg
inc
fs
push
push
daa
in
jmp
iret
idivb
in
push
cmc
psubusb
cmp
into
jno
jo
lock
out
push
negl
inc
dec
pop
push
insl
out
aaa
fbstp
inc
repnz
or
test
rcrl
or
movsl
inc
inc
nop
jns
test
xlat
mov
lods
addr16
and
xchg
sbb
mov
and
xchg
fwait
add
scas
cli
push
addr16
jp
mov
mov
push
mov
loop
cmpsl
ja
xchg
rcrl
stos
pop
mov
pop
in
addb
in
pop
xchg
movb
roll
sar
push
in
cs
test
inc
fidivrl
rorb
test
arpl
cmpsl
lds
loop
sub
xchg
mov
sbb
inc
sub
enter
pushf
or
movsl
mov
dec
mov
out
pop
pop
jne
add
inc
push
xchg
push
sbb
test
cs
fstpt
fdivrl
sbb
mov
jecxz
inc
push
std
xchg
jmp
or
test
mov
xchg
add
iret
xlat
pop
or
fstpt
sbb
adc
orb
inc
pop
add
shl
xor
dec
xchg
mov
cld
cwtl
imul
mov
test
lahf
inc
rorb
and
es
roll
mov
pop
add
push
mov
icebp
shlb
add
daa
nop
or
or
mov
stc
sbb
je
lahf
push
mov
sub
sbb
into
xor
std
xchg
insb
mov
sbb
xor
push
add
xor
insb
ffreep
adcb
out
jbe
fdivr
sub
jb
xchg
sub
pop
xor
jns
scas
addb
aaa
push
sbb
sbb
sub
add
xor
xchg
sub
sti
pop
add
leave
xor
stc
in
fcompl
push
emms
push
inc
sbb
or
mov
inc
push
mov
push
loopne
xor
test
mov
lret
out
dec
xor
xor
cmc
sahf
inc
ja
popf
jb
pop
sub
les
dec
aad
jecxz
outsb
add
je
and
jl
sarb
test
cwtl
ret
arpl
call
pop
jnp
stos
xchg
gs
mov
movsb
inc
and
mov
pop
repnz
inc
inc
mov
push
int
fidivs
adc
pusha
fdivrp
fisubl
cmpsl
jmp
divb
shll
mov
in
ljmp
insl
xor
inc
insb
add
cs
imul
mov
je
add
ljmp
jnp
mov
push
sbb
xchg
loopne
push
enter
inc
mov
iret
adc
jnp
dec
pop
jb
mov
leave
cmp
push
mov
bound
mov
xchg
adcb
or
lret
inc
jb
dec
mov
out
icebp
pop
or
jno
sbb
mov
loope
mov
mov
int
pop
loop
inc
adc
mov
jo
pop
es
jnp
subb
mov
sub
push
subl
fstpl
and
jae
imul
dec
data16
aam
popl
aaa
dec
test
imul
mov
out
out
ret
test
icebp
mov
stos
xor
aaa
gs
ljmp
push
aaa
xchg
loop
xor
out
mov
cltd
pusha
jnp
push
dec
popa
adc
or
cmp
sbb
popa
addb
cltd
sub
cmp
js
mov
or
inc
mov
popa
ljmp
sbb
call
xchg
sbb
ret
psadbw
mov
or
lods
adc
and
out
fidivl
jns
aas
sub
clc
js
inc
mov
mov
add
cmp
dec
and
test
aas
inc
mov
int3
or
daa
js
pop
push
adc
into
and
aaa
dec
xchg
push
and
jmp
mov
bnd
cmc
push
cmpsl
push
add
pop
push
pop
mov
cwtl
hlt
daa
lret
push
imul
add
xor
xchg
push
icebp
in
hlt
sti
xchg
and
jnp
mov
ja
lret
pop
cmp
push
xchg
jecxz
pop
inc
mov
jns
inc
xchg
add
or
fistps
dec
xchg
dec
and
test
in
cmpb
daa
add
nop
add
outsb
mov
sbb
mov
mov
mov
sub
inc
push
push
pop
cwtl
lahf
rcrl
imul
pop
popa
arpl
cmc
mov
xchg
fs
lods
jne
xor
icebp
pop
cmpsb
in
rclb
in
cld
cmp
lret
popa
mov
fucomi
pop
xchg
xor
outsb
bound
xor
test
push
ds
ret
pop
in
inc
add
scas
out
in
mov
sbb
add
adc
out
jge
fsubrp
adc
call
xor
push
pop
scas
pusha
pop
fists
icebp
fstpt
lods
loop
push
fmull
cmp
outsb
or
inc
rcll
lea
pop
sub
insb
or
or
mov
xor
mov
repz
inc
ja
sbb
inc
int3
vpshufd
dec
sub
mov
dec
loopne
out
fwait
push
xchg
push
mov
fwait
mov
xchg
xlat
das
insl
xchg
in
lods
add
addr16
mov
cli
adc
jmp
xor
shl
mov
dec
mov
jb
int
and
mov
add
sbb
or
mov
and
insl
inc
sbb
es
call
or
pop
jecxz
cmpsl
dec
roll
sbb
cmp
ffreep
adc
stos
mov
leave
repnz
push
add
es
clc
paddsw
pop
xor
icebp
inc
lea
xchg
stos
inc
enter
cmp
jbe
in
aad
cs
xchg
outsb
and
mov
push
decl
cmp
or
mov
ja
sbb
sbb
lea
popf
sbb
sti
dec
out
stc
inc
inc
mov
or
and
sti
mov
out
std
fcomi
mov
fwait
pop
in
and
out
addl
pop
cwtl
or
pop
scas
xchg
out
jl
imull
xchg
fdiv
fdivr
in
push
call
push
sub
inc
fs
jb
aaa
mov
xor
aas
lock
add
jno
repz
psubw
mov
xchg
push
jbe
cwtl
dec
loope
mov
xor
inc
push
mov
jp
pop
mov
jle
jo
fnstcw
leave
shlb
js
addr16
fdivrp
xorb
or
fwait
xchg
cwtl
movsl
push
mov
je
addr16
xor
aas
xchg
pop
lret
imul
add
push
pop
xor
in
mov
cmp
addr16
into
faddl
xor
and
sub
inc
das
loopne
mov
ss
mov
and
leave
mov
push
filds
arpl
loopne
into
and
dec
pop
lahf
mov
test
movsl
cmp
lea
dec
mov
lods
rol
or
iret
loopne
loop
rcrl
lret
sbb
sub
mov
sbb
adc
jmp
xchg
jbe
lock
xchg
sbb
xchg
add
mov
push
sub
scas
cmp
fldt
out
push
ret
mov
out
sbb
outsl
hlt
lret
bound
js
sub
jmp
aaa
mov
jb
push
push
xor
and
mov
in
cmp
test
out
mov
inc
mov
xchg
jno
insl
dec
inc
fidivl
adc
mov
clc
stos
pop
xlat
testl
fs
mov
inc
in
cmp
inc
sbb
add
rclb
sbb
lods
and
sub
je
aas
sub
push
inc
cmp
dec
jne
xor
fisubs
out
shrb
mov
inc
and
push
fadds
mov
push
sub
mov
jmp
outsl
push
pop
push
sbb
call
roll
sub
loop
loope
scas
addr16
rolb
ret
movsb
stos
pop
cmpsl
fadd
outsl
lds
mov
push
mov
jmp
imul
mov
mov
or
andl
cltd
rorl
cs
flds
jl
adc
sub
mov
mov
outsl
push
add
je
add
mov
and
outsl
inc
imul
adc
dec
pop
enter
adc
ja
and
inc
jg
test
or
js
xor
inc
mov
jbe
mov
sub
mov
fstpl
dec
mov
fcmovbe
pop
cwtl
dec
xor
in
inc
aas
mov
sahf
sar
pop
inc
pop
bnd
cmpl
pop
xor
test
push
repz
dec
pop
xchg
mov
jg
xchg
sub
pop
push
xchg
ret
repz
xor
jae
inc
add
outsb
icebp
idiv
push
cmp
divb
stos
lret
mov
jnp
mov
pop
inc
loopne
sahf
mov
pop
sahf
jns
and
or
sar
repnz
leave
pop
xchg
adc
fimull
sar
das
adc
adcl
hlt
push
lea
adc
pop
adc
xor
mov
push
pop
dec
clc
mov
imul
cmp
mov
sbb
enter
xor
mov
stos
xchg
mov
dec
and
and
add
inc
push
xlat
xor
jnp
push
inc
in
std
fbld
aaa
ds
stc
nop
add
or
stos
jge
fdiv
out
stos
fstpt
outsl
xor
cmp
sub
mov
test
xchg
mov
sbb
ret
das
stos
and
das
push
out
mov
dec
in
xchg
sub
sti
mov
inc
dec
mov
lea
ss
outsl
mov
aad
int3
repnz
mov
mov
data16
lods
shll
adc
das
frstor
sahf
pop
insl
push
insb
jbe
fldt
dec
xor
fidivs
cs
mov
insb
loope
arpl
mov
push
cmp
into
out
xchg
or
mov
jl
mov
adc
push
movsb
cmc
mov
jo
out
lods
jl
and
repnz
sbbb
shlb
inc
cmp
xor
pop
lahf
dec
adcb
and
mov
jb
add
rcrl
test
testb
sub
pop
jmp
jne
call
mov
scas
push
arpl
test
sahf
jmp
sbbl
xor
popa
fwait
sbb
sbb
jecxz
push
xor
inc
fisubrs
jmp
cld
lret
dec
push
dec
test
sbbl
or
push
xor
pop
addb
push
mov
test
in
inc
jne
push
cmpsl
ja
outsb
test
mov
hlt
sub
je
mov
cmc
test
mov
pop
mov
or
sub
jecxz
push
enter
dec
jmp
jns
sbb
insb
add
ret
mov
mov
pop
lds
push
popa
scas
cmp
inc
adc
or
push
mov
gs
and
xchg
out
test
movsb
fsts
sbb
jl
mov
aaa
pop
imul
fadds
fwait
out
mov
in
cmp
fwait
shr
or
sub
pop
fldt
adc
lret
cld
jl
xorb
test
jo
into
shlb
movb
cmp
sarl
jb
js
pop
out
sarl
arpl
jle
jge
dec
jmp
mov
and
adc
movl
add
cmpsl
push
and
sub
and
pop
in
lret
fists
aad
adc
pusha
jnp
fisubs
or
cltd
loope
mov
fs
xor
fnstsw
repz
fstps
adcb
xchg
inc
lea
pmovmskb
mov
cmp
sarb
fisttps
cli
fildll
jecxz
data16
loopne
push
pushf
lods
xor
push
int
out
ljmp
adc
dec
loopne
jnp
dec
push
loopne
sbb
dec
pop
sub
stos
jns,pn
mov
jns
xchg
outsl
popl
out
out
push
push
shr
inc
jbe
into
jne,pn
out
lcall
pop
test
fidivs
les
add
add
sbb
cwtl
sbb
mov
scas
or
scas
test
xorl
add
xorl
push
xchg
loopne
mov
dec
push
in
mov
adc
ret
pop
and
xorb
out
mov
hlt
push
cmp
rcrb
xor
jb
mov
dec
ret
movsw
xchg
add
mov
xor
lret
fstpt
jg
fstps
add
inc
pushf
push
xor
loop
rcll
clc
mov
sbb
ss
mov
nop
sub
mov
rclb
fucomp
mov
push
mov
pusha
jns
movsb
and
test
mov
xor
push
dec
enter
jb
dec
out
xchg
cmp
movsl
inc
xchg
sbb
pop
inc
mov
lahf
ss
mov
xor
dec
add
xchg
xchg
insb
inc
fldcw
inc
pusha
aam
sbb
outsb
es
lahf
inc
or
xor
out
push
jae
pop
fs
fwait
sub
movsl
sahf
cwtl
stos
mov
sbb
mov
popf
ljmp
adc
xchg
fwait
adc
jb
rcrl
sahf
scas
adc
xor
jge
cld
into
jp
in
dec
scas
mov
data16
sahf
rorl
sbb
int
out
shll
idiv
push
mov
adc
adcb
testl
jbe
xchg
int
insb
mov
leave
je
push
xor
xchg
sti
adc
cmpsl
push
out
dec
pop
cmp
out
mov
bound
ja
xor
mov
fldenv
inc
or
jmp
mov
fdivr
gs
ljmp
stos
or
frstor
adc
xchg
pop
sub
mov
xchg
out
cmpsb
cmp
out
pop
pop
outsl
add
rcrb
lret
sti
xchg
es
into
push
lldt
repnz
cltd
adc
icebp
and
shll
fwait
clc
std
mov
aaa
dec
xor
test
inc
mov
arpl
lcall
outsb
js
jae
data16
into
pop
xor
push
movsl
jp
xchg
fdiv
and
mov
push
nop
gs
repnz
adc
je
andb
mov
popa
pop
jl
outsb
scas
jg
jl
dec
outsb
push
push
addb
cmp
push
lret
lret
in
jae
inc
daa
mov
fidivrs
mov
cwtl
adc
sub
dec
mov
ja
popa
test
pop
ja
int
inc
out
imul
xchg
mov
icebp
inc
pusha
mov
mov
nop
iret
jnp
ja
mov
mov
lods
xor
pop
test
inc
arpl
arpl
mov
push
cmp
std
or
pop
out
adcl
pop
lods
jecxz
loopne
mov
xchg
lock
lahf
repnz
xor
aaa
shr
push
push
loop
in
shll
xor
sub
aam
sub
pusha
add
jno
loopne
push
popf
gs
sahf
mov
push
call
sbb
ret
outsb
ljmp
dec
push
ss
cld
test
ficoms
jp
test
lahf
enter
xor
push
test
push
mov
jbe
cmp
xchg
sub
pop
insl
pop
testl
push
xchg
sahf
and
xchg
mov
mov
rolb
mov
popa
sahf
lcall
cmp
mov
cmp
aad
movsl
dec
xchg
movb
mov
and
rcrl
rclb
or
sbb
lods
or
pusha
mov
jmp
fcomps
or
jge
lods
pop
jbe
push
adc
jne
xchg
jns
xlat
cld
push
int
mov
cs
jns
rol
mov
jecxz
dec
roll
pop
in
jp
add
imul
bound
sub
or
mov
cltd
push
mov
sbb
leave
pop
jmp
cmp
scas
pop
aad
cmp
insb
cltd
shll
push
inc
popf
shlb
jns
lcall
and
mov
int
test
mov
adc
pop
clc
mov
test
jo
idiv
inc
scas
dec
neg
clc
jmp
out
xchg
cmc
mov
lods
mov
fidivl
or
jp
hlt
testl
push
ljmp
jmp
cwtl
pop
lods
fnstenv
jmp
inc
stc
or
shrl
not
ret
cmp
mov
pop
xchg
mov
arpl
sbb
adc
sub
xor
add
dec
les
cmpb
ss
mov
jecxz
mov
adc
je
insl
xor
ss
fildl
cwtl
sti
jns
mov
xor
popf
or
cmp
or
pop
inc
and
bound
rol
pop
jmp
arpl
test
in
ds
ljmp
or
mov
mov
insl
mov
gs
adc
sub
scas
push
cld
adc
outsb
and
adc
loope
pushf
sub
sub
xor
inc
fstpl
adc
mov
lock
mov
xor
out
out
sbb
jge
jno
pop
addr16
xor
repz
and
fs
aam
push
pop
in
sbb
mov
sbb
push
push
data16
push
or
xor
xor
dec
sbb
test
add
pop
mov
sbb
mov
mov
insb
sbb
popf
test
shrl
int3
pop
jb
ret
repnz
in
xorl
mov
cmp
js
jne
jl
inc
pop
mov
fs
mov
arpl
pop
cmpsl
push
div
adc
jg
imul
ret
push
scas
inc
shl
jbe
sbb
aam
mov
loopne
dec
jnp
sbb
test
sbb
mov
iret
faddl
mov
jns
movl
xorb
pop
sahf
or
push
imul
sub
hlt
sarl
push
out
in
cmp
sbb
out
out
xchg
push
lcall
sti
xor
repz
mov
gs
roll
xchg
mov
push
jo
into
mov
js
adc
fimull
jge
jbe
in
out
push
lahf
mov
es
movaps
push
test
pop
stc
xchg
lret
dec
mov
jno
stos
rcll
ja
mov
add
add
call
rcrl
mov
jge
test
cwtl
aas
sbb
idivl
cmc
mov
jecxz
cmp
rol
mov
jg
fldcw
sbb
pushf
adc
sub
xor
add
push
call
mov
rcrl
addr16
pop
inc
push
and
mov
push
shl
mov
test
loopne
sub
mov
sub
sub
call
pop
cmp
push
mov
dec
mov
cld
mov
cs
mov
scas
and
out
sahf
mov
into
jnp
cmpsl
das
push
lcall
repz
and
xchg
jae
mov
xlat
repz
fimull
mov
lahf
daa
outsl
xchg
jo
and
notb
jb
jg
fdiv
dec
int
lea
test
cmp
clc
push
leave
fistps
sbb
test
adcb
lock
imul
dec
stc
xor
loope
sbb
rcl
mov
sub
adc
xchg
pop
cli
jge
pushl
adc
inc
stos
stc
xchg
ficoms
nop
add
loopne
jge
shrb
lods
mov
fs
shl
jo
push
cmpb
jp
test
jecxz
iret
jbe
inc
pop
lcall
dec
repnz
pop
dec
mov
cmpsb
stos
cmp
xor
das
test
in
add
inc
xchg
lds
push
jmp
out
jmp
pop
jno
add
jb
mov
aam
aaa
pop
std
clc
inc
jge
test
mov
pop
out
pusha
jns
addb
lods
inc
lcall
cmpsl
and
mov
jnp
inc
scas
inc
xchg
lret
pop
sahf
sub
mov
mov
and
xchg
popf
out
cmc
xorl
cmp
sahf
gs
push
add
daa
out
ret
xchg
jae
lahf
loope
sbb
jns
cltd
mov
fwait
stos
cmp
xchg
inc
pop
adc
out
cmpsb
inc
mov
and
lret
sti
add
push
add
fcomip
dec
mov
mov
dec
sbb
pop
xlat
movsl
inc
int3
or
movsb
and
xor
mov
notl
lret
in
cwtl
sub
out
cmp
push
arpl
push
pop
movsb
adc
xor
cmp
push
xchg
fsub
cwtl
gs
pop
repnz
push
push
push
mov
sbb
repz
loopne
testl
cmp
push
das
ret
fisttpl
jmp
out
cmc
nop
sub
or
addr16
fmull
aam
jmp
mov
push
pop
mov
adc
cmp
testl
xorb
imul
adc
lods
jp
test
jbe
xor
jne
pop
xor
fdivrs
test
jp
cmc
es
nopl
in
jns
xchg
xchg
lahf
or
sbb
dec
cmpsb
data16
push
js
popf
cmp
mov
test
add
fcom
pusha
das
adc
in
and
mulb
scas
dec
xchg
mov
cmpsb
inc
pop
sub
popa
into
and
aad
sub
mov
jp
pop
jne
mov
out
or
enter
fucomip
pop
and
decl
cwtl
stos
fists
outsl
push
cli
outsb
inc
xchg
push
pop
les
mov
mov
add
jmp
jl
repnz
cmp
mov
fcomip
lahf
ds
iret
scas
mov
push
loopne
es
mov
xchg
lahf
sub
dec
fdivl
ss
cpuid
push
jmp
cltd
divb
idivl
fdivr
repz
xchg
mov
push
xlat
idivl
sub
add
dec
xchg
lret
push
test
lahf
pop
hlt
pop
into
and
repz
pop
sub
fisubrs
fstl
pop
ret
sti
shrb
push
xchg
repz
leave
flds
sbb
mov
jns
fisttpll
push
mov
orb
push
out
lea
bound
sbb
popf
push
lea
lods
lods
ljmp
sarb
xlat
in
shlb
je
pop
repz
cmp
mov
testl
dec
lock
or
xor
pop
or
dec
mov
loope
jno
jne
xor
push
mov
adc
sbb
les
push
cli
imul
out
add
and
mov
out
sbb
pop
cmp
push
insl
and
mov
ret
inc
scas
jns
pusha
shr
bound
ljmp
and
fsin
mov
or
xor
fcomp
jbe
cwtl
mov
xchg
imul
mov
add
nop
xor
cmp
orps
mov
xor
popa
test
enter
pushl
aad
push
pop
dec
mov
jle
push
aad
jp
push
lods
cmc
mov
daa
mov
jmp
jns
aad
cmp
dec
cmpsl
mov
jmp
jns
aad
cmp
dec
js
push
aad
cmp
dec
cltd
sub
or
xorb
mov
ret
sub
sub
test
faddl
cmpsl
push
adc
ds
daa
mov
fisubrl
cmp
bound
push
mul
mov
mov
fdivl
xchg
mov
std
jo
imul
andl
lods
jo
add
pop
xor
add
cmc
call
pushf
aas
mov
pop
adc
cmp
cwtl
stos
xlat
xchg
add
test
pushf
lods
popl
lret
cmp
xor
pop
gs
jae
cmp
jne
mov
pop
mov
push
cld
sub
gs
pop
shlb
xor
ret
ja
dec
xorb
mov
mov
cmp
popa
jno
sbb
pop
sahf
cmp
push
and
test
pop
lcall
inc
fsubl
pop
enter
es
dec
xor
popa
ret
and
push
outsl
dec
dec
xchg
mov
jl
lock
and
dec
lods
mov
dec
sbb
inc
jns
shrb
pushf
int
push
sub
fxch
shlb
lds
pop
jb
ja
inc
bound
add
cli
test
cmp
cmp
and
mov
rol
mov
adcb
add
push
pop
cmp
loop
pop
sbb
mov
call
loop
andl
jnp
push
dec
sarl
push
dec
pop
sub
xor
clc
xchg
mov
xchg
fiadds
lock
repnz
inc
dec
push
or
mov
inc
in
adc
jne
mov
out
push
test
sub
or
or
mov
adc
push
std
mov
mov
stc
clc
cmp
lods
rorb
dec
daa
ds
insl
and
movb
popf
fildll
scas
mov
cmpsl
ret
xchg
mov
lds
es
out
sahf
cmc
mov
add
pop
jne
jecxz
and
jp
pop
addl
cmpl
mov
repz
hlt
icebp
clc
or
les
pop
sbb
inc
insb
mov
mov
mov
push
ret
in
jb
and
pop
dec
sbb
vpunpckhdq
sub
dec
add
mov
lock
stos
xchg
cmp
mov
sub
cltd
jno
testb
fstpt
leavew
das
mov
or
fdivp
sbb
sbb
pop
fcompl
rcrb
int
xor
pop
loop
push
mov
repz
ret
sbb
mov
movsl
push
ds
dec
inc
push
out
and
test
clc
or
jl
fnstsw
push
sbb
iret
or
ss
into
std
or
iret
cmp
push
jbe
xlat
and
sub
jge
arpl
out
mov
push
movsl
push
out
dec
push
popa
or
jl
test
lods
in
sahf
or
loopne
clc
sub
test
js
inc
seta
cld
dec
ds
iret
jle
add
adc
pop
sti
sbb
stos
xchg
cld
mov
test
cmpl
ss
xor
test
jecxz
bound
push
sub
ds
xor
inc
cmp
mov
or
jle
pop
loopne
sub
rep
push
sub
adc
stc
das
cmp
outsl
xchg
mov
dec
jb
mov
mov
push
insb
es
adc
jg
ljmp
inc
and
arpl
in
call
xchg
push
xchg
sub
iret
fcmovbe
pushf
loope
sbb
repz
arpl
repnz
sub
or
sbbb
ret
or
pop
fdivs
jne
mov
xor
in
mov
pop
sub
fildll
push
nop
mov
addr16
xor
imul
lods
jo
test
cs
sub
pop
ret
out
sbbl
xchg
and
push
jl
jne
arpl
pop
cmp
sbb
inc
icebp
xchg
sub
push
xor
sbb
mov
test
stos
inc
push
test
mov
enter
xchg
jae
mov
lds
xchg
dec
mov
mov
cmp
lods
xchg
add
push
inc
xchg
or
push
and
pop
xor
mov
sarb
dec
pop
pop
fwait
int3
or
repz
stc
inc
dec
cld
loope
mov
push
cwtl
lcall
mov
or
imul
leave
cmp
jmp
push
movb
sbb
dec
shl
mov
test
push
in
inc
popa
cmpsl
cmp
std
lods
sbb
sub
xlat
ret
aaa
dec
test
in
fucomp
mov
xchg
and
fwait
push
jmp
dec
inc
es
adc
cli
aas
sbb
scas
pop
neg
dec
lea
movsl
cmp
cmp
movsb
insl
inc
pop
xor
cmp
orb
mov
jg
push
dec
cmp
mov
sbb
sbb
jo
fsubl
xchg
mov
fsubl
lods
and
loopne
scas
mov
pop
das
jg
mov
loope
loopne
ret
inc
pop
push
std
xor
xchg
fs
mov
jecxz
push
sbb
call
add
arpl
notl
push
int3
sbb
mov
adc
inc
orb
dec
xchg
mov
adc
adc
xor
iret
pop
sbb
push
sub
out
xchg
icebp
nop
stos
lock
sbb
pop
rcll
and
xlat
pop
lea
and
cmpsb
inc
dec
cmp
pop
daa
addr16
lret
aas
mov
fdivs
jns
jp
fwait
inc
mov
mov
xchg
data16
mov
scas
pop
and
lahf
sub
pop
out
inc
or
insl
jnp
test
adc
popf
in
and
jg
dec
xor
mov
cli
pop
push
arpl
ljmp
sbb
rcrl
stc
outsl
jge
dec
cmp
divl
lods
gs
pop
lock
adc
das
test
pushf
jne
or
jbe
in
sub
js
mov
fsts
movsb
scas
and
leave
rol
mov
xor
push
jmp
push
iret
fstpt
pop
mov
mov
lahf
add
jecxz
pop
adc
clc
sbb
ret
test
sbb
aaa
add
sbb
outsb
out
in
cmp
fcompl
lock
mov
ret
ja
push
sbb
jne
in
cwtl
lret
jbe
or
movsb
addr16
in
adc
in
hlt
push
out
push
xchg
push
cmpsl
pop
xlat
jbe
enter
subb
aas
push
mov
in
loope
ljmp
into
xor
adc
ds
xlat
jnp
push
lock
cmp
imul
sbb
jle
lock
movsb
push
test
mov
cmpsb
mov
mov
mov
and
jl
data16
clc
gs
lcall
jnp
push
scas
mov
stc
jp
xor
dec
popf
scas
push
in
loopne
sar
dec
jmp
mov
imul
repnz
stos
push
push
and
xlat
pop
fsts
jns
cli
loop
mov
dec
loope
cmp
cltd
shlb
sbb
add
jno
cmp
inc
sbb
jg
xlat
jecxz
pop
dec
jne
outsl
jp
icebp
mov
fwait
xrelease
mov
xor
mov
lret
mov
sbb
popa
subb
fdivrl
je
js
push
test
je
pop
push
stos
stos
jbe
insl
cwtl
pmaddwd
xor
stos
mov
fisubl
fs
and
sbb
out
push
xor
or
ja
inc
pop
cmc
fstl
add
push
cmp
sbbb
unpcklps
test
sbb
in
jecxz
movsl
ret
repz
xchg
jmp
pop
and
dec
jmp
sbb
mov
push
mov
and
inc
mov
cmc
mov
add
out
jne
scas
aad
lahf
in
jge
or
xor
or
icebp
jp
mov
adc
or
leave
adcb
daa
dec
xchg
pop
jecxz
repz
js
push
out
imul
push
addr16
mov
jo
push
flds
lea
or
insl
ja
and
sub
add
mov
cvtdq2ps
sub
stc
shl
mov
es
pop
rcrb
sub
insl
stos
scas
pop
es
or
orl
aam
sbb
xor
inc
mov
mov
push
test
int
pusha
shrl
cmp
xor
insl
stc
nop
mov
repz
lcall
cwtl
test
dec
adc
insb
inc
add
cwtl
dec
sarb
inc
popf
push
rol
fldenv
ss
jae
jo
js
jmp
test
dec
ds
sarb
rolb
add
inc
loope
xor
lds
sbb
insl
dec
sarb
insb
hlt
push
xchg
sahf
inc
scas
imulb
scas
mov
jbe
imul
dec
mov
dec
adc
lds
enter
jmp
xor
push
inc
aam
out
ljmp
dec
mov
mov
scas
xchg
enter
push
jp
inc
into
fsts
or
std
int3
shl
jno
cld
lcall
test
rorb
or
jnp
dec
jmp
fwait
cwtl
dec
imul
xchg
dec
mov
enter
mov
scas
mov
stos
mov
faddl
mov
insl
cli
mov
cltd
xchg
jl
pushf
sahf
push
fistpll
push
xor
mov
imul
sbb
out
iret
dec
inc
or
jecxz
not
add
adc
jmp
iret
arpl
add
mov
cmp
mov
inc
or
fisubl
adc
mov
imul
ret
imul
cvtps2pi
add
dec
mov
jp
sar
daa
jbe
cmpsl
push
rolb
jnp
lock
loopne
push
ret
jnp
lret
mov
stos
mov
loope
scas
inc
adc
push
sbb
lock
mov
mov
pop
hlt
lea
fwait
test
lods
lea
cwtl
sub
push
push
out
mov
lcall
jge
and
and
push
lods
or
sbb
rolb
pusha
xor
push
inc
dec
ljmp
sub
fsubl
sti
scas
repnz
pop
sbbl
loopne
inc
adc
outsb
scas
mov
add
cld
cmp
or
sbbb
push
jb
loopne
lahf
cmp
mov
push
test
pop
jb
lcall
adc
js
in
fdiv
sbb
adc
cltd
push
add
xor
adc
push
and
inc
mov
bound
cmpsl
lahf
sti
mov
sbb
outsl
mov
ret
xchg
outsl
dec
aas
bound
leave
testb
mov
jnp
cs
int
stc
cmp
movsb
in
inc
in
rcll
pop
cmp
pop
je
cmpsb
outsb
xchg
mov
lea
or
adcb
push
xlat
ds
stc
and
lea
stc
lea
cmp
sub
push
stos
mov
xchg
in
cwtl
dec
lea
daa
lcall
stos
stc
mov
xchg
and
je
std
jecxz
adc
fidivrl
inc
adc
push
push
fwait
jns
pop
loope
test
insb
jmp
movl
sbb
mov
outsb
mov
insl
movsl
outsb
sbb
cmp
push
leave
pusha
sar
data16
shl
decl
inc
call
push
push
pusha
mov
jno
fwait
jecxz
sbb
adc
mov
or
push
lret
xor
in
and
popa
push
sbb
inc
and
test
dec
mov
in
ja
inc
mov
push
inc
push
fistps
fxch
pop
aam
call
fst
dec
pop
dec
xchg
or
rorl
push
cltd
or
out
adc
add
jl
mov
push
imul
ja
fs
or
pop
jge
or
jecxz
push
in
push
lret
movsb
out
icebp
int3
mov
in
adc
cmp
cltd
sub
xchg
jl
xor
mov
divl
scas
pop
or
sub
xor
loop
xchg
dec
push
mov
mul
icebp
movsl
dec
sub
xchg
loope
cld
ret
jb
and
mov
fdivrs
pop
and
aad
repz
and
fucomp
loopne
push
nop
inc
aas
jb
jmp
mov
mov
xor
xor
push
aas
fimull
xlat
mov
cmp
sub
negb
mov
imul
pop
or
pop
test
hlt
mov
mov
loopne
mov
cmc
mov
cmp
sbb
add
cmp
insl
and
inc
cwtl
js
ret
mov
insb
lock
mov
jne
sub
rorl
dec
mov
leave
and
cmp
les
sub
test
aaa
insl
jo
jae
push
xchg
xor
std
dec
mov
ljmp
add
push
inc
repnz
cmpsb
dec
ror
imul
jl
adc
jg
mov
pushf
pop
mov
cwtl
bound
icebp
mov
sub
adc
xlat
and
mov
pop
mov
sar
dec
idivb
jmp
push
inc
xchg
loopne
dec
cmpsb
loop
jnp
push
out
fwait
not
shll
mov
and
inc
xor
dec
adc
push
push
je
sub
push
push
outsl
sub
aam
mov
pushf
nop
inc
inc
gs
and
lea
mov
cld
in
mov
xchg
mov
cmp
shrl
pop
sub
loopne
cld
mov
popa
jg
inc
dec
or
call
jg
jl
ja
repnz
adc
push
jmp
cmp
mov
xor
nop
xor
rcl
jb
in
pop
or
pop
mov
cmpl
dec
jecxz
mov
in
ss
inc
ja
test
push
or
and
dec
ret
jnp
and
repnz
add
or
pushf
sub
das
repnz
mov
fimuls
insb
mov
inc
iret
mov
popf
stc
jb
or
and
add
mov
and
jnp
add
pop
sub
mov
in
stos
ds
or
pop
data16
cli
jge
push
pop
mov
stc
inc
or
push
std
cmp
fidivrs
add
fcomi
pop
push
fmuls
aaa
lcall
jno
sbb
jge
bnd
stos
insl
add
pop
mov
andb
cmc
push
jae
mov
scas
inc
arpl
lret
dec
mov
and
popf
int
mov
pop
pop
hlt
lea
aas
pop
bound
sbb
loopne
out
mov
jns
cmp
xor
add
sub
test
inc
jge
fwait
sub
cmp
mov
loopne
inc
adc
jecxz
inc
mov
ds
pop
popl
pop
fsts
add
int3
lret
call
xchg
jmp
cltd
xchg
mov
inc
fcmovnbe
mov
and
xor
insb
dec
out
mov
xor
aas
cld
orb
lahf
mov
sbb
pop
ja
aas
xchg
cwtl
inc
loop
lret
add
jg
inc
pop
mov
inc
movb
push
test
dec
and
sub
clc
jo
and
mov
jo
dec
xor
jns
jg
xor
insl
add
sahf
ljmp
mov
or
jno
dec
inc
push
jmp
dec
pop
sub
outsl
insb
aaa
aad
lahf
stos
fimuls
repnz
xor
mov
inc
or
in
xorb
or
popa
fldcw
aas
lahf
cli
call
xlat
in
jmp
sub
inc
jl
cli
mov
xlat
sar
int3
push
fmull
sbb
mov
ja
cmp
decb
or
mov
ficomps
pusha
scas
les
fs
hlt
sbb
jnp
xchg
and
and
adc
lret
mov
lock
mov
mov
js
out
andb
iret
out
push
push
insl
jge
push
shrb
in
add
dec
cmp
xlat
scas
ljmp
add
push
xchg
das
xchg
sub
pushf
scas
mov
mov
pushf
shrl
and
icebp
pusha
clc
sub
mov
popa
jg
rep
jb
or
cmp
scas
aad
repnz
testb
add
and
scas
shlb
gs
or
or
fnsave
pop
sub
jl
push
pusha
and
jb
mov
sahf
std
clc
adc
xor
pushf
xor
cmp
or
mov
jnp
pop
jmp
fcmove
jmp
sti
adc
ljmp
mov
fdivrs
lods
cmp
jmp
jecxz
sub
adc
xlat
lock
and
loopne
lock
or
insb
fidivrs
mov
push
mov
and
ja
mov
add
sarl
loope
push
out
bound
pushf
aaa
jo
call
xchg
push
push
and
outsl
and
sub
push
adc
ret
jle
add
mov
imul
in
mov
bound
test
xchg
mov
lret
lret
cmp
out
or
lret
mov
test
out
ja
cmp
arpl
push
push
xor
push
fs
mov
ds
shlb
jbe
repz
das
addr16
sub
stc
or
push
inc
repnz
add
imul
push
mov
incl
mov
jecxz,pn
ret
fwait
dec
cli
xchg
cmp
sarb
add
stos
mov
dec
mov
mov
cmp
ja
or
stos
mov
fdivrl
inc
fsubrl
int3
push
cltd
mov
rol
pusha
enter
inc
std
dec
inc
stos
in
fnsave
xchg
xor
shll
push
mov
ja
outsb
inc
aas
push
xchg
pusha
int3
arpl
jb
ret
imul
loope
dec
loopne
adc
gs
push
lock
es
out
mov
inc
push
fdivrp
sub
adc
jg
scas
scas
inc
sahf
xor
inc
or
dec
cltd
adcl
les
idivb
push
fadds
stos
repz
mov
mov
ja
and
fs
xor
insl
sbb
into
or
xorl
fsubl
iret
aam
dec
lock
ss
inc
dec
pop
imul
mov
mov
mov
xchg
rolb
mov
dec
mov
xor
inc
imul
test
xchg
or
mov
jno
outsb
push
jae
out
das
pop
cmpsl
cmp
popf
mov
movsb
cmp
pop
inc
pop
lahf
cmp
add
push
xor
pop
inc
xor
imul
sub
mov
clc
cli
adc
shlb
sahf
movsl
add
adc
adc
sub
scas
jecxz
push
cmp
shrl
mov
gs
orb
stos
inc
insb
cmp
mov
mov
jl
cmpsl
pop
mov
gs
dec
push
adc
xor
push
sbb
fucom
push
scas
xchg
popf
sub
sbb
stc
jmp
jns
mov
pop
push
scas
pop
cli
inc
xlat
and
lods
jne
cmp
or
repnz
stos
arpl
push
fstps
cmp
mov
and
cld
jae
jmp
ljmp
cmp
pusha
fs
or
mov
fmuls
jne
rol
aam
je
pusha
scas
and
push
insb
jo
mov
push
mov
lret
mov
push
fldenv
les
lds
testl
clc
fwait
dec
cmpsl
pop
sub
popf
nop
mov
out
and
bswap
pop
stos
js
dec
fmul
xchg
adc
popa
fwait
and
sahf
add
call
cmp
out
int
dec
xor
sahf
aad
mov
mov
jne
xor
push
jmp
mov
dec
leave
push
call
lock
jbe
adc
or
mov
call
stos
imul
add
sub
idivb
sti
mov
sub
adc
sub
icebp
aaa
std
mov
fdivrl
jnp
cltd
mov
xrelease
pop
mov
xlat
mov
or
dec
push
cmp
mov
lods
and
lods
sti
xchg
fildll
pushf
xor
sbb
ljmp
push
sbb
mov
gs
daa
mov
xor
jp
test
or
test
inc
sbb
and
inc
fmuls
dec
test
jp
outsl
jnp
mov
sbb
iret
pop
rol
cmpsb
dec
in
mov
push
movsb
icebp
dec
popa
sub
cmp
mov
push
jl
out
aam
andb
mov
int
outsb
pop
sub
dec
lods
push
lcall
add
shlb
mov
mov
cli
jle
mov
fdivrs
repnz
stos
mov
cmp
outsl
cmc
pop
push
pop
shll
stc
push
lods
sbb
push
popa
adc
call
cmpsl
out
jb
repz
sub
adc
lock
sub
and
mov
lret
xor
dec
loope
sbb
dec
sarb
insl
ret
add
mov
and
inc
sbb
leave
int
push
inc
xlat
aaa
sbb
push
ljmp
clc
add
bnd
stos
inc
mov
xchg
sub
ror
int
xor
das
mov
mov
shll
leave
sub
mov
std
mov
aas
xchg
xor
jo
dec
mov
push
jg
enter
jle
dec
out
lahf
js
xchg
test
scas
mov
les
pop
dec
or
jl
in
mov
xchg
xchg
add
jno
jae
test
lret
addr16
add
xchg
arpl
jno
mov
test
lret
data16
pop
ret
sbb
pop
mov
lods
scas
stos
loopne
test
jno
cmp
inc
scas
sbb
into
enter
sub
push
xchg
sub
stos
mov
loop
jne
sbb
out
test
sbb
cltd
rcl
insl
les
mov
adc
xor
popw
mov
add
fnstsw
lds
outsl
lahf
jp
push
lods
shl
jo
js
push
rcrl
inc
sub
ret
sahf
imul
loop
xchg
xchg
xor
cmc
cltd
je
lret
push
push
jmp
and
push
lods
cld
push
call
mull
push
popf
fimull
test
jne
test
mov
mov
mov
int3
adc
xorb
inc
push
mov
pusha
mov
int
jle
mov
xchg
mov
ficomps
mov
into
lods
inc
add
jno
outsb
or
scas
cmp
pop
ss
pop
lods
inc
xchg
mov
mov
ret
rcrl
pop
mov
pop
sbb
push
lods
cmp
fnsave
xchg
test
dec
in
fistpll
push
call
pushf
xor
push
call
mov
jp
leave
stos
idiv
nop
sub
push
out
dec
test
mov
call
or
mov
loopne
rclb
inc
ficompl
fidivs
jg
clc
lods
repz
icebp
and
aas
or
mov
hlt
pop
inc
insl
jb
int
mov
loopne
mov
pop
repnz
aam
xchg
push
into
jns
cld
es
push
inc
rcrb
jno
and
repnz
fs
cmp
push
jmp
nop
fidivl
wbinvd
mov
and
ret
pop
add
jbe
loope
pop
xchg
or
les
xchg
ret
repz
dec
fildll
sub
inc
mov
mov
imul
rorb
add
loopne
fwait
and
jnp
lret
sti
adc
adc
push
pop
push
mov
data16
pop
xchg
and
leave
push
lea
pop
cld
pop
test
xchg
sub
in
ror
or
mov
cmp
pop
xchg
es
negb
pop
mov
rclb
add
mov
leave
push
mov
loope
pop
cmp
mov
pop
insb
xchg
cmpsb
cmp
out
les
or
pusha
xor
push
mov
lds
sbb
cmp
in
subl
mov
repnz
fmul
arpl
incl
and
into
gs
mov
mov
out
iret
shlb
popf
push
sub
pop
pop
or
push
sti
rcrl
sti
pop
adc
inc
lret
jbe
cli
roll
push
pop
adc
je
lret
sti
sarl
add
dec
jecxz
sbb
iret
dec
lret
sti
loopne
and
pop
dec
in
lret
sti
loop
adc
shlb
pop
fs
xor
loop
fstl
xor
xor
loop
pusha
adc
je
push
pop
out
cmp
push
jmp
sbb
mov
push
loope
cmp
mov
cmc
out
fbstp
and
popf
push
or
push
inc
enter
aad
push
or
sbb
dec
int
daa
add
std
xchg
movhps
inc
sbb
addr16
aam
sbb
fdivp
xchg
and
pop
push
sbb
dec
ret
sahf
xor
mov
jnp
sbb
ret
repz
lea
daa
xor
push
pop
shrl
les
adc
shlb
add
fidivl
loope
adc
data16
push
mov
dec
jecxz
cltd
xor
ss
in
data16
lds
mov
gs
add
push
ss
data16
outsb
cmp
jmp
sbb
inc
xlat
xor
sub
adc
xchg
jp
and
fndisi(8087
and
add
xor
aad
xor
bound
in
test
mov
xchg
jmp
cmp
imul
inc
mov
mov
add
push
jmp
adc
in
in
rcll
or
stc
inc
shlb
mov
popa
push
adc
adc
enter
ficompl
cltd
pop
sbb
dec
into
push
in
fidivrl
aad
xor
sbb
dec
mov
adc
jae
imull
test
pop
cmp
insb
rcll
movsl
dec
in
pavgw
pop
call
and
call
lods
lock
in
gs
ljmp
sbbl
js
jge
and
das
and
pop
lock
jmp
push
adc
outsb
ja
pop
lock
addr16
mov
lea
test
jge,pt
insb
sub
repnz
mov
jnp
adc
cmp
and
push
mov
sar
pop
scas
xchg
and
xor
mov
jne
inc
pop
pop
xchg
loope
mov
fbstp
es
push
xchg
scas
inc
leave
inc
pop
push
in
mov
insl
push
xchg
iret
enterw
stc
push
xlat
outsb
xchg
xor
dec
cli
dec
out
xchg
dec
fistps
sbb
ret
repnz
jne
jle
sbb
fnstcw
shrl
ss
cmpsb
sti
xchg
fmuls
sub
jl
adc
fmuls
jae
sub
or
xchg
idiv
nop
daa
nop
dec
in
decl
sub
cmc
push
call
call
push
xchg
testl
pop
xor
out
pop
cmc
push
popl
xchg
mov
data16
xchg
out
xor
sbb
ds
call
adc
xor
pop
fs
cld
adc
push
jmp
cmp
sahf
insl
fimuls
lahf
or
fs
pop
out
call
lods
cmp
outsb
sarb
push
mov
mov
fcmove
pusha
adc
popf
mov
les
sub
mov
ficompl
rcrb
dec
out
jg
out
adc
je
ror
loop
push
sti
xchg
pop
rorb
scas
sbb
push
dec
rclb
sahf
daa
mov
push
shlb
jne
jo
adc
adc
add
dec
mov
insl
in
sub
fwait
push
lock
cmp
cs
push
int
aas
mov
cld
loope
outsb
test
mov
es
push
sub
aaa
test
jl
pop
outsl
push
mov
sbbb
stos
testl
xor
stos
inc
fistl
fildl
mov
cmp
pop
sub
xchg
sub
dec
inc
fnstcw
dec
loopne
mov
jnp
sbb
nop
pop
loopne
inc
mov
pop
out
in
decb
es
jecxz
or
into
adc
aas
and
push
loope
addr16
mov
jg
and
or
js
mov
push
aaa
jg
push
jae,pt
sbb
pop
jle
xor
bound
mov
jge
lcall
adc
aaa
lods
outsl
cwtl
mov
ja
fs
addr16
lea
lea
fimull
jle
mov
imull
inc
xlat
enter
xor
data16
dec
or
lods
pusha
std
mov
mov
sarb
sub
addr16
adc
xchg
push
xor
jno
insb
pushf
push
cmp
xchg
xchg
popa
clc
aaa
push
jo
inc
push
insl
lahf
push
inc
inc
lret
arpl
outsb
push
jl
outsl
and
call
push
add
add
adc
cs
xchg
repz
aam
jns
in
push
cmp
sub
pop
call
cmp
data16
sbb
and
daa
imul
xchg
jne
sub
pusha
imull
sarl
dec
nop
les
push
push
in
addl
push
cmp
test
aas
dec
mov
rorb
jo
jg
pop
mov
pop
pop
push
or
mov
xchg
jle
sub
push
out
scas
jge
fsubrl
jbe
aad
inc
mov
adc
and
outsb
sub
push
push
add
subl
hlt
push
jb
loop
push
pop
or
ljmp
aam
push
loop
or
mov
xchg
mov
call
imul
push
dec
add
push
je
popa
inc
pop
or
jo
outsl
addr16
xlat
pop
mov
sbb
dec
inc
ret
call
sub
test
insb
in
test
mov
push
loop
cli
xchg
int3
sub
ret
out
das
jecxz
rorb
in
or
mov
cli
loopne
sbb
shlb
and
cwtl
sbb
mov
push
xlat
push
divb
cmc
ss
mov
and
xor
adc
inc
test
jl
arpl
dec
mov
push
clc
pop
arpl
in
test
adc
stos
inc
fwait
repnz
add
pop
bound
ss
xchg
sub
bound
mov
bound
jl
nop
js
loop
add
dec
aad
push
jne
jo
loop,pn
cmp
push
or
sbb
imul
inc
insb
sbb
xor
out
and
insb
lcall
orb
dec
adc
insl
inc
mov
mov
orb
and
jle
xchg
push
dec
mulps
fwait
inc
out
push
daa
int3
fs
and
jb
add
mov
mov
cld
mov
leave
push
mov
out
jo
sbb
xchg
xor
testb
push
ret
mov
xlat
clc
sub
fildl
adc
ret
test
dec
adc
push
dec
xchg
jns
inc
adc
lahf
xchg
lods
pop
add
xchg
mov
and
sub
jecxz
inc
jae
arpl
or
xor
out
cltd
xchg
adc
pop
divb
xor
and
or
and
clc
dec
jo
pop
mov
sbb
xor
std
pop
cmpsb
jne
adc
fisttpl
pop
and
inc
cwtl
jg
xor
cmp
inc
sbb
xchg
push
ja
mov
sub
test
jno
fcomip
xor
je
jp
shl
jge
test
adc
xchg
movsl
push
das
das
mov
je
mov
mov
jmp
fsubrs
sub
stos
jo
imul
push
iret
movsb
cmp
popa
fistl
and
dec
jge
test
xchg
xor
outsl
addb
pop
mov
nop
lea
loope
pop
mov
imul
cmpb
jb
jne
xchg
mov
adc
xor
icebp
fdivs
sbb
fbstp
add
leave
mov
sub
dec
push
fwait
outsl
inc
fs
jns
jae
sub
pop
xchg
push
enter
or
aas
adc
jl
pushf
dec
mov
or
insb
rorl
addr16
leave
pop
add
insb
fsubr
sbb
cltd
lret
aad
cli
xchg
cmp
rorl
pop
stos
imul
dec
push
je
mov
sub
dec
inc
test
pusha
xor
xor
jle
sbb
repz
xchg
aam
jle
cmp
in
mov
in
aad
lret
js
or
lods
inc
sbb
aas
int
mov
fnsave
scas
add
jns
cld
xchg
mov
push
dec
outsb
adcl
mov
jbe
mov
mov
hlt
cmpb
push
out
jmp
ficomps
rcrb
orb
xchg
stc
adc
or
stos
xor
or
out
lmsw
push
in
pop
xchg
or
xor
lcall
insl
add
mov
xchg
sahf
xchg
pop
jns
imul
in
mov
in
adc
clc
add
rcll
dec
scas
mov
fists
gs
cmp
mov
pop
xchg
push
mov
pop
arpl
pop
pop
sbb
dec
mov
lahf
sbb
out
pushf
ja
into
push
sbb
jo
movsl
pop
mov
push
mov
movsb
jae
ret
inc
divl
fisttps
inc
cltd
pushf
pop
cmp
stos
mov
mov
sub
orb
pop
dec
leave
aas
outsb
xchg
adc
mov
hlt
ret
dec
enter
scas
sbb
push
xchg
push
faddl
ljmp
fwait
jle
sti
xor
nop
xchg
cli
xchg
clc
or
push
sbbb
mov
lds
dec
rcll
sbb
cmpsl
addl
or
repnz
iret
mov
out
cmpl
pop
mov
fistl
in
stc
cmp
push
mov
nop
adc
mov
mov
data16
inc
mov
sub
pop
mov
aaa
jmp
leave
cmp
mov
push
or
seto
xlat
in
jge
mov
ss
cmp
ret
popf
loop
and
cmp
aam
add
cmpsl
movsb
and
sub
pop
or
das
repnz
negb
aam
pop
out
shl
mov
cmpsb
xor
lret
pop
shll
loop,pn
jge
movsl
scas
or
xchg
lret
xor
int3
push
cld
lods
sarb
aam
iret
fcoml
jl
iret
inc
ret
frstor
test
mov
mov
xchg
cltd
gs
lea
mov
jmp
ret
lock
xor
add
push
mov
cmp
jb
dec
dec
ret
ja
jae
aad
xor
jno
push
push
dec
lods
insb
dec
je
pop
push
dec
mov
in
mov
add
mov
out
pop
inc
push
icebp
mov
popa
les
push
into
jns
xor
aaa
ss
arpl
add
and
call
mov
pop
or
mov
popf
mov
jmp
sub
xchg
scas
jae
sub
jp
sbb
out
xchg
aam
ljmp
adc
daa
jnp
gs
popa
jmp
xchg
inc
mov
or
jle
sbb
adc
mov
pushf
xchg
and
dec
mov
cmp
fs
lret
imul
ret
outsl
add
push
sbb
push
repz
pop
adc
outsl
dec
int
cmp
addr16
sti
lcall
jmp
in
lcallw
jecxz
imul
sbb
jbe
sub
aam
pop
mov
mov
inc
sub
out
pop
dec
inc
cmp
push
inc
add
inc
les
dec
imul
xor
cwtl
jno
jp
fistl
popl
jno
outsb
add
out
inc
pushf
call
inc
pop
stos
rorb
pop
lds
push
sub
xorl
xor
enter
xchg
ret
clc
xchg
xlat
mov
nop
cmc
rcrl
call
ret
xor
fists
pop
mov
dec
sub
mov
and
and
cmpsl
jns
mov
sahf
xchg
cmc
mov
fistl
mov
xor
sub
aas
repnz
popf
jg
or
dec
fildll
movsw
es
out
pop
fs
rcrb
mov
rcll
dec
jecxz
pop
jecxz
adc
das
mov
and
insb
push
add
xchg
in
xchg
push
ljmp
cmp
xchg
lcall
cmpsl
test
sbb
jne
lods
adc
xor
jmp
movsl
outsb
ret
inc
mov
sbb
sbbl
js
sbb
aaa
daa
ljmp
pop
test
push
inc
subl
mov
jno
jnp
jne
add
sub
cmp
imul
or
push
push
inc
mov
pop
inc
pop
int
xchg
call
or
aad
sbb
mov
cwtl
stos
pop
sub
inc
insl
mov
js
push
lahf
xor
pushl
cmp
jb
and
jg
dec
push
cmp
dec
dec
xor
cmpsb
pusha
cmp
push
mov
sahf
lcall
dec
jb
jo
and
aaa
and
mov
loop
add
push
mov
lock
adc
frstor
lock
mov
rclb
std
cli
xchg
sub
fiaddl
jae
rorl
cltd
jae
pop
inc
fcoml
sbb
flds
cmp
call
mov
fbstp
sbb
inc
mov
call
inc
mov
jae
jle
sbb
mov
int
xor
add
lcall
sbb
rclb
bound
ja
sub
push
mov
repnz
sub
add
jno
xchg
mov
push
mov
sbb
imul
jle
flds
movlps
pop
cli
sub
push
loope
lea
pop
push
pop
lock
stc
xor
out
fstl
cmp
imul
repnz
or
insb
dec
push
add
insl
dec
stos
inc
jno
es
xchg
cli
xor
cmp
sbb
adc
aam
cmc
push
pop
fsubr
and
sub
fisttpll
xorb
es
xor
pushf
xchg
int
add
outsb
rorb
sbb
fs
jb
shrl
rcrl
cmp
les
test
sarb
mov
pop
test
cmpsl
mov
out
xor
roll
xor
xchg
mov
pop
in
inc
and
xrelease
dec
popa
or
adc
mov
test
push
xchg
cltd
addr16
push
mov
stos
push
shrl
push
mov
lock
lods
fisttpll
fistps
in
jmp
mov
repnz
test
cmpsb
push
adcb
pop
dec
mov
sbb
cmp
inc
cld
cmp
mov
repnz
mov
jmp
mov
je
sub
pusha
mov
cwtl
test
out
jg
sub
scas
std
xchg
mov
into
or
fcmovnu
repnz
loopne
xchg
mov
jno
sub
push
xlat
dec
outsl
ja
and
mov
cld
xchg
xchg
lret
jb
std
insb
orb
pop
xchg
je
xlat
lahf
xchg
mov
cmpsb
push
mov
outsb
xchg
cmc
push
cmpsl
sub
push
sbb
outsb
inc
fcompl
rorb
cmp
cwtl
or
mov
imul
push
arpl
mov
push
or
rol
push
xlat
mov
add
mov
clc
adc
in
in
inc
cwtl
lret
std
es
jl
outsl
adc
jle
push
hlt
dec
push
mov
jo
jne
addb
cmp
ss
cmpsb
shrl
mull
ret
stos
cmp
mov
jle
pop
lds
adc
xchg
jecxz
dec
fwait
in
out
push
mov
loop
or
jp
ss
push
subb
dec
je
mov
jae
mov
pop
push
fisubrl
aaa
les
xchg
dec
mov
sbb
dec
push
cmpsb
imul
mov
jge
outsb
movsb
xchg
pop
adc
rolb
test
and
dec
ret
dec
popf
adc
in
orb
sbb
xchg
add
daa
dec
es
inc
xor
decb
add
xchg
pop
adc
xchg
jle
push
cmp
jg
xchg
imul
push
add
xchg
and
xchg
divb
aad
mov
push
std
cmpsl
inc
enter
imul
mov
stc
mov
loop
cli
ret
sbb
out
out
adc
add
pop
push
frstor
xchg
xchg
cltd
mov
push
xlat
insl
cmpsl
inc
adc
pop
loop
cmp
mov
rolb
push
lods
cmp
inc
sarb
mov
inc
jnp
hlt
dec
push
cmp
dec
dec
out
xor
or
jae
loopne
xor
jl
aas
jno
cmpsl
pop
divl
loope
nop
cmpsb
nop
push
cmpsl
jae
cmp
lds
add
add
fsts
adc
sbb
jecxz
daa
aam
fadds
ret
cmp
push
xor
fiadds
pop
fidivl
test
ds
jge
and
cltd
cmp
lods
sbb
sub
mov
ficompl
pushf
ljmp
fwait
cli
mov
mov
cltd
cmpb
or
mov
add
insb
aas
mov
sub
cmpb
pop
negb
sub
add
cltd
xor
push
mov
inc
mov
add
cwtl
pop
and
movsb
push
jae
jo
sub
ret
sub
jno
adc
js
and
adc
std
xor
dec
jae
push
mov
enter
push
rcl
jmp
test
sti
xchg
push
into
pushf
sub
mov
test
xor
js
mov
icebp
pop
lock
dec
dec
add
popf
das
mov
mov
xor
loop
xlat
in
mov
inc
into
jno
fnsave
push
adc
lock
ljmp
popa
pop
mov
dec
pop
test
xchg
sub
pop
movsl
xchg
js
aas
into
gs
mov
xchg
jbe
in
sahf
xchg
into
add
imul
adc
test
call
sbb
test
pop
repz
mov
xor
rcrb
or
data16
aad
rorl
frstor
loope
lea
mov
scas
adc
sahf
enter
std
outsb
aas
lahf
lret
adc
leave
mov
adc
rorb
popa
fwait
xchg
cmpsb
fdivrs
stc
adc
inc
fabs
pop
mov
hlt
ljmp
cmpsl
in
sti
and
rcrb
and
jne
xlat
outsb
inc
xchg
push
lret
les
jbe
inc
lods
dec
xor
dec
mov
jmp
scas
rcll
add
adc
push
add
popf
jb
pop
movsb
jmp
adc
mov
and
fisubrl
mov
sbb
mov
jmp
cmpsl
inc
mov
fdiv
xor
into
xchg
xor
aam
xor
and
popa
adc
fs
ljmp
stos
add
loope
sub
stos
js
ret
and
mov
pop
xchg
wrmsr
cmc
jnp
aam
cld
sub
dec
out
xor
shrl
leave
cmpsl
test
into
mov
out
stos
dec
rcll
fbld
loop
or
add
mov
adc
lret
jp
je
xchg
sahf
orl
mov
mov
push
sarb
pop
out
dec
enter
inc
xor
pop
ret
loopne
ds
cmpsb
xchg
xchg
pop
mov
fwait
pop
int
in
pop
push
outsl
ds
dec
pushf
add
dec
out
pop
mov
pusha
cli
pop
mov
adcl
mov
mov
push
aaa
ljmp
adc
inc
mov
add
stc
push
add
rclb
inc
mov
or
push
int3
shrl
xor
xor
jg
pop
sar
fs
add
mov
adc
sbb
mov
clc
add
or
data16
outsb
mov
cs
test
adc
adc
and
xchg
clc
pop
xor
inc
test
adc
leave
out
mov
mov
lret
jecxz
nop
rcrb
fsts
aam
adc
aad
mov
sub
mov
add
test
out
cltd
aad
inc
int
mov
push
adc
and
lods
jns
cld
and
sub
and
mov
lods
pop
paddq
loope
mov
adc
mov
faddl
fbstp
mov
fidivrl
sbb
stc
push
pop
jno
inc
jo
mov
adc
pop
jae
movsb
push
push
mov
mov
sbb
and
out
xor
mov
mull
ret
and
push
lahf
into
loopne
lret
adc
cmp
mov
lret
in
pop
lds
adc
mov
mull
cld
xor
cwtl
into
cmp
mov
cmp
stos
repnz
fistpl
push
ds
jge
in
inc
sub
sti
jne
enter
sbbb
nop
jnp
lea
inc
sbb
aas
hlt
sbb
out
cld
cs
dec
mov
pusha
fptan
mov
xor
and
jns
mov
fcomps
pop
xor
pop
ljmp
mov
sbbl
push
ret
dec
loop
pop
sub
cmp
xor
cmp
cmp
mov
pop
outsl
adc
xor
mov
xchg
jle
add
cmp
clc
xor
pop
lea
or
inc
stos
dec
lcall
jae,pn
jl
push
mov
repnz
fstps
or
in
mov
fcoms
mov
aad
insb
xor
dec
iret
sbb
loopne
mov
sbb
cwtl
cmc
or
ret
push
flds
sti
test
cmpsl
movsb
cmp
ljmp
mov
dec
aam
clc
lret
sarl
fadd
ret
ficoml
std
in
add
adc
or
jge
das
add
add
jbe
in
pop
aaa
cmp
mov
push
mov
push
sbb
lock
sub
push
outsb
lods
loopne
sub
cmp
and
fcoml
rol
dec
call
movsl
xchg
xchg
testb
pop
mov
js
ds
stos
imul
ss
rcll
repnz
leave
jmp
push
cli
sub
sbb
cmp
test
lahf
adc
inc
mov
sbb
fildll
out
dec
aaa
lock
cli
sub
jle
sti
outsb
mov
sbb
push
jo
inc
imul
das
mov
sub
push
mov
xchg
jne
and
popa
cmpsb
icebp
sub
dec
mov
dec
mov
sub
and
mov
ds
adc
adc
xchg
es
sub
movsb
imul
mov
xchg
xchg
insb
imul
pop
test
cltd
dec
je
push
mov
lret
mov
mov
lods
pop
les
pop
mov
cmp
jns
das
loop
imul
sbb
jae
add
test
inc
sbbb
cwtl
jmp
pop
scas
or
mov
push
fsts
stos
or
outsl
popa
sub
sbb
out
out
pop
mov
fistpl
jge
test
mov
out
or
sub
out
rclb
icebp
inc
fstl
mov
mov
pop
mov
xchg
sub
call
xchg
or
stos
add
dec
mov
bnd
sub
call
jmp
inc
divl
andl
jl
push
push
mov
leave
insb
out
dec
sub
mov
pop
xor
push
addl
fiadds
int3
mov
outsl
std
fdivl
sbb
in
push
xor
push
les
scas
inc
fucom
pop
stos
imul
hlt
enter
mov
pop
in
cli
xlat
add
jecxz
pop
mov
mov
mov
pop
sar
movsb
sub
stc
mov
sbb
das
ret
test
add
mov
stc
adc
xlat
es
mov
adc
loopne
mov
jl
fucomip
adcl
fwait
xchg
cltd
notb
mov
stc
and
testb
xor
push
ja
pop
test
into
sbb
ljmp
imul
scas
test
clc
lods
mov
adc
int
jae
inc
loopne
enter
mov
in
sub
mov
mul
jle
sti
or
fisttps
test
fistps
in
push
dec
shlb
psubb
sub
fmul
es
cmpsl
out
adc
mov
in
pop
test
out
stc
and
test
aam
mov
push
call
adc
sbb
jecxz
in
cltd
adc
nop
fnstsw
pop
scas
das
nop
stc
rcll
and
push
ljmp
jno
daa
mov
jp
fidivl
pushf
lods
inc
into
das
clc
popa
out
lret
bound
adcl
mov
jmp
lret
push
xchg
pop
sahf
daa
push
jmp
sbb
pop
lods
cmp
imul
and
mov
fidivrs
shlb
cmp
mov
les
cmc
add
xor
xchg
add
daa
ds
aas
aam
jno
popa
clc
stos
xchg
repnz
loopne
cmp
adc
ja
mov
loope
inc
xchg
mov
ret
lods
inc
cmc
jmp
jmp
inc
int3
je
or
push
mov
outsl
jg
mov
add
leave
pusha
push
hlt
mov
mov
ljmp
inc
cmp
pop
out
xchg
and
pushf
jecxz
mov
cmpsb
and
clc
mov
cwtl
in
xor
addb
movsl
fsubr
ds
sub
das
inc
pop
mov
aam
mov
shlb
sub
pop
xor
lahf
gs
sbb
lds
push
lods
out
fwait
pop
into
fidivs
jecxz
mov
mov
pop
scas
xor
push
xor
icebp
loope
xchg
pop
cmpsb
dec
mov
push
jl
lahf
jbe
add
stc
lods
dec
dec
movsl
add
mov
mov
insl
in
push
test
jno
out
xchg
mov
cmc
ljmp
lods
test
jecxz
sti
xor
jb
push
aad
outsl
scas
call
pop
inc
clc
lods
lahf
je
cmp
cmp
cltd
mov
mov
dec
clc
inc
das
xchg
insb
cmp
add
dec
lret
mov
subl
icebp
inc
andb
add
lret
cmp
xchg
dec
movsb
push
scas
cmp
xor
rcll
xlat
xor
icebp
lock
cld
dec
inc
lods
aad
imul
xchg
repz
ds
push
test
sub
rcrl
adc
rorl
pushf
cmp
sub
mov
push
pop
aaa
das
xlat
loopne
mov
jp
sbb
test
pushf
xchg
cmp
lcall
frstor
push
pushf
mov
adc
pop
adc
outsl
xor
and
stos
or
subl
cmpsl
and
pop
mov
and
push
dec
and
fwait
and
push
sbb
inc
lock
je
inc
or
jno
mov
xor
lcall
xor
mov
mov
push
fnstcw
mov
ds
cltd
mov
pop
add
ds
aaa
ficoml
rcr
mov
daa
sub
mov
enter
push
daa
cltd
push
add
dec
mov
cmpsl
dec
or
xchg
xor
fs
pop
cmp
into
stos
dec
pop
and
shrl
dec
out
mov
adc
adc
sbb
fdiv
pop
cld
push
jb
cmp
xor
arpl
pop
lcall
dec
adc
cmp
and
in
jbe
mov
dec
scas
loope
push
add
mov
idivl
cltd
push
outsb
add
mov
in
dec
lock
stos
fidivl
and
lea
div
sahf
lret
pop
loopne
mov
mov
repz
push
orb
lret
pop
sarb
mov
dec
test
pop
andl
lods
ret
pusha
cmpsb
sti
test
sub
dec
divb
sub
loopne
push
jmp
orl
lcall
xor
stc
push
pop
int3
arpl
sub
popf
leave
mov
mov
pop
pop
out
dec
push
xchg
sub
lret
jecxz
scas
aam
sub
bnd
andl
in
jnp
fs
pop
sbb
mov
mov
inc
pop
out
xor
aad
std
push
in
inc
fnstcw
dec
or
inc
fiaddl
xchg
lret
pop
dec
loope
xchg
enter
inc
xlat
add
enter
dec
xlat
repnz
outsb
je
mov
rcll
adc
pop
xor
mov
mov
sbb
jecxz
push
in
test
pop
shrl
scas
sub
movsl
sub
in
aad
sbb
jno
out
fmuls
xchg
sbb
xchg
scas
daa
outsl
sbb
outsb
xlat
jno
mov
push
repz
addr16
pop
fmuls
push
lods
add
sbb
cwtl
inc
dec
pop
add
leave
mov
jl
test
notb
mov
aas
popf
iret
sub
xchg
aad
inc
fwait
les
inc
sub
clc
xchg
mov
cmp
mov
sub
inc
mov
popf
icebp
xchg
cmp
int
sbb
out
push
into
in
iret
xchg
add
xor
push
scas
lcall
jne
repz
lock
adc
in
mov
or
mov
stos
xchg
aaa
call
sti
lcall
in
add
loop
les
mov
lods
mov
arpl
fs
cmpsb
jb
lahf
pushl
loop
fs
or
mov
mov
clc
ficomps
insl
test
mov
xor
mov
orb
push
stc
gs
scas
push
in
in
loopne
mov
mov
or
lods
fldl
sti
xlat
pop
out
cmpsb
add
ljmp
xor
and
das
push
sbbl
push
cld
rorb
inc
adc
loopne
out
jl
mov
ss
pusha
mov
add
mov
mov
push
fbld
icebp
jge
mov
adc
jmp
xchg
and
push
pminub
out
test
xor
dec
or
imul
ret
lea
mov
int
testl
add
sbb
mov
push
xchg
inc
or
bound
add
jecxz
inc
or
mul
insl
lea
lcall
in
sbb
rorb
mov
inc
or
in
pop
lcall
add
pop
loope
pop
jns
dec
das
xchg
or
popf
gs
pop
pop
sub
add
iret
mov
fcmovnu
js
hlt
or
and
leave
mov
mov
lods
sub
test
adc
insb
cmp
cmpb
xor
adcl
inc
adc
aaa
push
add
adc
aas
popf
stos
pop
data16
mov
mov
mov
pop
test
lds
mov
movsb
cmp
mov
mov
sti
pop
daa
test
push
ds
or
cmp
jo
lret
mov
mov
push
scas
mov
rolb
xorl
fidivrl
repnz
js
inc
push
mov
pop
inc
inc
lock
sarl
repz
fs
sub
mov
fstpt
stos
sbb
cmp
xlat
subb
gs
stc
cmp
mov
mov
pop
ret
dec
or
loope
inc
aaa
xor
xor
sub
xor
jl
movups
jl
xchg
mov
bswap
aaa
lods
push
add
sub
test
push
add
hlt
add
rolb
into
mov
dec
cmp
sub
add
inc
adc
mov
leave
addr16
xor
add
popf
sub
scas
loopne
xor
loopne
xchg
xchg
or
inc
fnstenv
dec
jbe
adcb
sub
je
sub
mov
int
aad
es
or
jbe
add
or
lods
and
cmpsb
hlt
inc
test
push
in
rcll
aad
xor
adcl
push
xor
xchg
fisttps
out
fstpl
add
push
movsb
push
push
lcall
stc
pop
shlb
mov
mov
test
and
pop
stos
cwtl
cmp
mov
lret
push
inc
mulb
pop
mov
inc
test
stos
cwtl
or
popf
mov
mov
les
lret
or
dec
popf
push
outsb
call
leave
sahf
sub
sahf
xor
mov
lret
mov
or
popf
out
push
dec
pushf
sub
xchg
mov
gs
mov
or
inc
std
push
aad
xchg
jmp
mov
fs
mov
inc
or
je
add
lds
int
pop
in
in
cmp
push
mov
stos
sbb
cmpsl
je
xchg
mov
sti
popa
dec
push
cld
fs
mov
not
jge
test
cmp
mov
les
in
jbe
hlt
pop
int3
push
push
clc
in
add
mov
lods
mov
jle
pushf
ret
mov
mov
push
insb
cs
test
jge
mov
ret
mov
lods
push
shll
addr16
cmp
xor
pop
out
insb
scas
xor
push
incb
rcl
jp
lods
mov
xorl
jg
icebp
pop
icebp
insl
cs
jecxz
jle
mov
mov
push
adc
dec
jp
mov
and
sbb
xor
pop
icebp
fwait
pop
ret
cmp
push
incb
aam
jns
adc
mov
cmpsl
in
int
inc
mov
pop
jmp
sbb
mov
sarb
mov
jns
sbb
mov
mov
dec
push
dec
mov
sbb
mov
push
and
push
xchg
xchg
jl
ss
or
mov
lods
add
rcrb
dec
adc
push
and
jmp
test
imul
pop
xchg
cmp
add
or
pop
fwait
xor
mov
addl
popf
inc
push
cld
bound
fiadds
mov
dec
into
sti
push
mov
jl
jnp
push
insb
jnp
in
mov
xor
in
mov
scas
std
xchg
inc
fbstp
cltd
aaa
lods
in
pushf
cmp
mov
sahf
push
cmp
ja
das
lods
cmp
scas
pop
and
mov
mov
cmp
or
movsl
ss
sub
fst
fwait
cmp
xchg
inc
or
push
mov
sar
jae
sbb
adc
daa
adc
push
dec
cwtl
cmp
dec
or
scas
lret
cmp
adc
push
add
aad
pusha
fildl
push
jge
ljmp
pop
js
fcmove
test
lea
call
jb
insb
sbb
pop
add
cmp
mov
or
pop
lods
sub
cmp
incb
sub
mov
idiv
mov
mov
dec
push
je
or
xchg
imul
mov
jge
mov
mov
cmp
mov
xlat
hlt
rorl
into
sub
ret
scas
daa
lods
mov
and
dec
cmp
jle
sarl
outsl
popa
call
aad
ja
mov
stos
insl
hlt
and
add
or
enter
mov
iret
adc
lds
jnp
imul
jmpw
inc
fisubs
ret
sbb
sbb
lea
mov
push
cli
jae
jp
mov
out
rcrl
movsb
jbe
rcl
iret
mov
push
mov
cmp
inc
leave
mov
adc
int
mov
and
cmpsl
push
jge
pop
lea
out
outsb
testb
pusha
jmp
sub
mov
cs
sbb
cmp
insb
sub
loop
jge
lock
dec
imul
jbe
push
push
outsl
roll
sub
pop
testl
js
pop
rcl
repnz
std
cmp
cs
cmp
mov
subb
adc
mov
aaa
push
loopne
sub
push
shr
cmpb
sti
data16
fimuls
sub
adc
inc
add
in
jbe
push
cmp
jg
outsl
repnz
insb
mov
sub
mov
negl
aaa
jmp
sbb
std
test
and
or
xorb
mov
test
mov
fadds
sub
cmp
mov
mov
fldl
sbb
or
pop
jne
jne
sti
arpl
push
sti
pop
data16
cmpsb
mov
xor
xlat
dec
or
adc
adc
push
ljmp
add
fidivs
scas
dec
sbb
call
repz
and
cli
adcb
fdivrs
sub
rolb
hlt
lahf
add
fldl2e
pusha
hlt
movsl
add
loope
mov
std
push
inc
fsubs
mov
cltd
call
cmc
out
push
push
stc
test
adc
jae
out
mov
mov
mov
popf
cmp
into
mov
dec
adc
das
mov
xchg
orl
outsb
cmc
loope
outsb
cmc
inc
repnz
cwtl
xchg
xchg
leave
mov
xchg
enter
ret
mulb
stos
xor
inc
adc
ds
and
ss
outsb
jne
adc
decl
adc
add
lret
jg
xchg
jmp
add
jno
cmp
outsb
mov
mov
rcll
das
adcb
or
dec
jg
loop
xchg
add
mov
test
dec
outsb
jp
add
xchg
lods
xchg
inc
into
lret
nop
inc
sub
mov
aam
lret
cmpsb
pop
testl
mov
cld
push
aas
insl
jno
jmp
bound
add
push
pop
add
mov
sub
sub
xor
jmp
or
pop
mov
sub
push
cld
stos
daa
mov
rcr
cmp
orb
cmpsl
xor
outsb
dec
push
jae
sub
sti
mov
xor
ja
js
pop
insb
fnstsw
inc
dec
push
fdivrl
mov
mov
mov
cld
xchg
clc
lea
push
lock
or
sarb
mov
mov
scas
ljmp
sub
scas
push
adc
or
pop
movb
faddl
lock
orl
mov
push
enter
stc
xchg
push
fdivs
iret
ja
add
call
push
outsl
push
inc
adc
cmp
inc
adc
enter
pop
cmp
mov
mov
adc
xor
fwait
xor
mov
call
cli
repz
sti
dec
xor
ret
jns
xlat
or
das
mov
pusha
push
sti
fstl
mov
imul
jne
aam
test
dec
imul
mov
cmpsb
xchg
inc
push
add
jge
mov
outsb
xorb
popl
or
adc
arpl
push
sbb
inc
std
mov
pop
xchg
mov
xor
or
and
ror
mov
mov
xchg
cmp
push
jp
mov
loopne
bound
cmpsb
leave
jo
sbb
jns
mov
push
add
test
jecxz
jecxz
repnz
sarl
lcall
cmp
bnd
or
enter
push
in
imul
ljmp
cmpsb
mov
mov
test
mov
mov
repnz
sbb
loop
rcr
mov
mov
test
cmpsb
fidivl
imul
in
je
add
fwait
pop
das
add
jno
push
cli
addr16
jae
jbe
sub
lret
cmc
pop
stos
xchg
mov
push
push
and
mov
sarb
movsl
mov
xor
mov
xchg
js
and
inc
fsubs
mov
cltd
or
push
sbb
dec
pop
mov
mov
ret
nop
ds
js
or
adc
xchg
push
jl
ss
push
ret
jecxz
xor
jmp
sbb
fdivrs
push
mov
outsl
jmp
mov
jno
mov
mov
inc
hlt
sar
pop
jns
push
add
arpl
sarl
xchg
ja
sbb
cmp
lds
pop
mov
mov
rclb
rcr
adc
jl
adc
orb
xor
lods
pop
cmc
fucom
xchg
sub
lcall
add
mov
orl
in
inc
popa
cmp
dec
pushf
push
jp
jp
jo
xor
jne
adc
lods
movsb
sub
cmp
xor
mov
cli
sub
insl
out
mov
sbb
shr
imul
jg
and
pop
cmc
gs
and
dec
jbe
dec
adc
pop
pushl
cs
cmp
pop
rorb
push
xlat
and
loope
and
sub
push
sbbb
and
xor
xchg
mov
cltd
inc
fcomp
dec
adc
jbe
inc
mov
call
add
pop
test
in
push
das
lods
repz
sti
push
xchg
fidivrl
fldl
mov
push
fwait
xor
jmp
test
push
inc
or
push
xchg
cmp
out
fwait
aas
lcall
cmc
dec
pop
lret
or
sbb
rcll
in
xor
push
sbb
sub
iret
mov
push
push
mov
jge
push
add
jbe
cmpsl
pop
hlt
mov
jmp
movsl
imul
push
ja
outsb
imulb
fnstcw
ds
lds
icebp
push
testl
pop
sbb
sbb
nop
mov
mov
mov
incb
adc
add
and
lcall
loopne
dec
push
clc
mov
lods
mov
mov
fidivs
sahf
scas
inc
sarb
mov
and
aad
int3
pop
mov
cli
sub
jns
aas
cmp
jo
jne
mov
outsb
xor
mov
mov
lcall
or
cltd
divl
movsb
mov
mov
loop
mov
mov
or
xchg
ds
lods
ss
stc
cli
sub
in
jbe
xorl
sbb
or
lahf
dec
cmp
or
and
pop
cmpsl
sub
fdivrl
or
jp
notl
test
test
inc
fistpll
addl
cmp
lcall
add
rolb
outsb
scas
pusha
hlt
aas
je
mov
int3
add
in
xorb
dec
xlat
fidivrs
cwtl
cmp
jae
pop
sub
xchg
pop
mov
mov
stos
lea
daa
scas
jo
dec
adc
filds
mov
or
fsts
mov
mov
lods
and
test
negl
shrb
mov
inc
movsb
filds
ror
mov
sub
push
imul
dec
mov
xor
xchg
add
lret
cld
out
mov
mov
mov
pop
in
in
sbb
push
clc
dec
loope
mov
mov
cli
arpl
lret
push
cld
imul
lock
xor
jne
sub
cmp
loopne
cwtl
sub
inc
sub
mov
and
xor
dec
mov
inc
sqrtps
les
jge
push
add
int
xor
data16
stos
sub
push
pop
stc
mov
imul
lods
imul
cs
sbb
hlt
pusha
fmulp
insb
ljmp
mov
mov
aam
mov
mov
test
out
jecxz
repnz
jns
or
out
outsl
repnz
jae
movsl
sub
iret
adcl
std
xchg
pop
sbb
mov
mov
jmp
movsl
lea
shlb
lods
jae
pop
rcll
dec
mov
sub
fstps
mov
jle
inc
nop
lods
xor
pusha
pusha
xchg
cmp
mov
sub
int3
inc
or
mov
inc
adc
adc
jle
cmp
ret
cmp
lods
and
fbstp
inc
adc
mov
mov
cmp
test
add
or
push
push
mov
adc
pop
hlt
std
rcll
add
mov
leave
add
push
push
ljmp
mov
cmp
push
cmp
fiadds
rep
bound
test
out
jno
mov
std
stc
dec
je
stos
xor
arpl
sub
flds
dec
pop
add
call
bnd
es
add
aad
call
cli
pop
and
mov
add
jnp
mov
and
aad
push
xchg
outsb
mov
rcrl
xchg
ds
inc
loop
add
push
cli
adc
xchg
in
roll
lahf
insl
in
xlat
leave
fdivrl
adc
pushf
cmp
outsb
mov
out
dec
stos
sub
out
adc
idiv
in
insl
jmp
hlt
mov
iret
cwtl
lahf
mov
test
enter
in
testl
and
xchg
rcll
xchg
and
inc
or
cs
dec
mov
dec
frstor
fs
inc
push
add
jmp
faddp
xchg
xchg
cs
out
xor
rcll
ljmp
aad
mov
jge
mov
jp
or
jp
cmp
jl
lds
dec
add
mov
and
stos
xor
gs
roll
push
xchg
mov
sbb
mov
movsl
pop
clc
sbb
leave
icebp
cwtl
data16
fstpt
je
mov
movsl
pop
iret
aaa
pop
ss
sub
jmp
jl
nop
insb
jecxz
dec
dec
jge
cs
mov
inc
or
sbb
lahf
sbb
dec
leave
out
stos
sbb
xchg
add
cmp
dec
adc
sub
adc
out
push
std
sub
lock
xchg
mov
xchg
xor
dec
adc
xor
mov
lods
orb
rorb
or
fwait
aam
mov
rcrb
ret
popf
lahf
pop
mov
push
jge
sbb
pop
add
dec
ds
aad
mov
filds
call
aaa
lcall
lcall
mov
hlt
push
ss
lret
and
mov
adc
cmp
xchg
cmp
mov
or
mull
push
or
pop
inc
or
adc
sti
mov
mov
pop
rcr
mov
jo
sbb
int
leave
mov
iret
nop
jecxz
dec
adc
mul
xor
or
pusha
push
cmp
mulb
dec
in
add
scas
or
mov
mov
stc
pop
xchg
scas
lds
push
mov
xor
test
lahf
and
test
jbe
adcb
sbb
lods
aas
xchg
or
cmc
mov
sub
jne
lahf
inc
data16
xor
xor
outsb
andl
push
stos
rcr
addl
and
adc
xorb
and
xlat
stc
gs
loope,pn
mov
test
sub
dec
std
mov
mov
mov
xchg
in
mov
jmp
mov
mov
inc
fsubs
mov
push
add
subb
mov
addr16
mov
pop
add
imul
sbb
jbe
inc
dec
outsl
icebp
cmpsb
xchg
faddl
push
jp
lds
inc
or
movsb
push
mull
mov
ss
cmp
pop
add
jmp
loope
out
adc
push
cmp
adc
or
dec
pop
add
mov
xchg
cmp
cmp
jae
clc
data16
lods
xor
pusha
ret
or
subb
jle
jo
adc
fidivrs
lock
inc
or
sbb
sbb
or
and
outsb
xchg
cmp
jmp
jns
pop
subb
lds
fnstsw
sarl
push
sbb
test
mov
rorb
cmp
addr16
xchg
in
pusha
out
push
stos
sub
fnstcw
push
loop
cmc
cmp
pop
cmc
mov
mov
mov
mov
sti
outsb
and
and
sub
sbb
test
xor
notb
sahf
inc
pop
dec
inc
xor
test
mov
mov
jecxz
pop
test
std
std
pusha
cmp
push
fnstsw
in
js
hlt
pop
ljmp
mov
or
mov
sahf
mov
movb
xchg
inc
popf
pusha
cmp
inc
adc
test
mov
into
mov
or
lcall
pop
or
push
add
and
xlat
fidivrl
lcall
pop
mov
pop
in
ss
cmp
clc
inc
pusha
call
lods
jle
rol
mov
and
xor
inc
or
daa
xor
lret
or
mov
mov
test
dec
or
mov
enter
add
rolb
sti
xchg
push
orl
add
adc
inc
or
inc
mov
jge
xchg
aaa
subb
jae
cltd
inc
adc
inc
push
int3
pop
xchg
jb
mov
movsb
push
sub
sbb
mov
mov
sarb
add
add
sbb
fldt
jo
and
push
shl
insl
std
pusha
sub
fiadds
mov
mov
mov
bsr
addr16
sahf
inc
jle
jmp
test
fildl
sbb
dec
arpl
lahf
and
inc
or
inc
adc
dec
push
mov
cmp
jge
sub
adc
je
orl
jle
sbb
addr16
insl
push
jle
sar
dec
push
jae
add
bound
negb
ret
test
fnstsw
loopne
jne
lds
rcll
adcb
xchg
sub
mov
fsubrp
jbe
pop
int3
xchg
xor
mov
cmp
xlat
jge
cs
add
cmovl
jno
sbb
push
sbb
repnz
arpl
loop
xchg
out
cmp
call
adc
inc
mov
jno
adc
xchg
orl
pop
add
lods
aas
sahf
mov
cmpsb
fistpll
cmp
repnz
and
adc
dec
pop
mov
push
push
push
js
scas
cs
call
jmp
movsl
add
or
mov
mov
ss
sbb
xchg
dec
outsl
in
movsl
inc
jl
dec
mov
cmp
out
inc
push
shlb
jge
add
xor
sub
aaa
jmp
sbb
and
into
jnp
push
lret
cmp
adc
inc
pop
xchg
out
outsb
xchg
xor
xor
mov
xor
cmp
xchg
jle
je
or
push
insb
pop
stc
inc
mov
mov
insb
sub
rcl
stos
sbb
cmp
fcomps
int3
or
xor
and
mov
std
arpl
and
fstpt
imul
push
shll
dec
dec
push
inc
int3
cmpsl
sub
out
push
jo
pop
minps
fcompl
in
nop
or
stc
data16
lret
jb
xlat
hlt
sbb
mov
ja
and
movb
imul
imul
jns
iret
sub
movsb
in
popf
cmp
sbbl
lock
xor
inc
mov
dec
pop
sbb
or
roll
sarl
mov
mov
test
cmpsb
mov
testl
pop
mov
call
lods
xor
fs
shll
jl
add
pop
aam
cmc
and
sbb
stos
daa
iret
xchg
test
adc
jns
in
xor
and
cmp
mov
leave
popa
es
in
sbb
cmpl
aas
daa
sbb
mov
test
mov
adc
test
outsb
icebp
add
inc
test
add
ret
mov
lods
jae
out
int3
nop
xor
orb
callw
test
mov
xchg
mov
out
ds
add
cltd
and
rcll
adc
test
pop
imul
pop
push
jle
push
or
adc
or
sbb
hlt
jle
mov
jecxz
fisubrs
mov
or
shll
xchg
cmp
or
or
mov
insb
cmp
lret
and
popf
fisubrl
aas
mov
fistpll
push
call
stos
rcrb
jl
mov
aam
popa
nop
mov
jle
in
dec
push
add
inc
add
mov
movsb
xchg
inc
cwtl
repz
push
adc
lret
imul
or
xchg
add
mov
imul
jnp
xorl
pop
add
das
push
clc
push
cmp
mov
inc
inc
or
pop
mov
jle
imul
addr16
insb
inc
fbld
mov
sahf
fwait
cmp
pop
mov
cmp
or
push
mov
test
outsl
fmull
pop
add
push
sub
add
jmp
sbb
and
mull
popa
mov
dec
andl
dec
and
fwait
call
hlt
mov
pushf
inc
adc
addr16
jp
mov
xor
cli
pop
push
sub
mov
mov
lret
xchg
mov
fs
pop
ret
fiadds
ret
xchg
xor
mov
sub
outsl
and
das
stos
cmpl
or
sbb
jnp
cmp
and
test
mov
dec
or
and
xchg
push
add
dec
fs
fwait
cmpsb
lahf
cmp
pop
stc
daa
and
push
rclb
fiaddl
mov
lods
jl
xchg
sti
pop
mov
int3
popl
movsl
jne
out
push
or
and
test
cmp
gs
ds
pop
je
popf
cmp
insl
arpl
pushf
daa
dec
push
imul
jmp
jb
jno
adc
loope
add
iret
xor
xchg
xor
inc
adc
dec
dec
or
cmpsb
push
iret
mov
cs
and
rclb
cltd
stc
pop
ljmp
cmp
leave
push
mov
test
inc
adc
loopne
ds
mov
add
cmp
and
iret
adc
xchg
and
stos
or
cmp
ret
pop
mov
es
adc
cmp
add
cmp
popa
pop
jae
mov
lock
imul
shrb
jmp
mov
test
data16
jecxz
mov
subl
hlt
jo
aad
lahf
mov
ss
xor
push
mov
clc
mov
push
push
add
xchg
cmp
pop
cmpl
inc
pop
xchg
cmp
icebp
roll
cmp
mov
cmpsl
ljmp
js
add
xchg
out
push
add
push
lds
lcall
cs
les
sbb
xchg
ret
mov
mov
hlt
mov
jnp
movsl
inc
adc
or
xchg
cmp
fwait
xor
pop
pop
add
push
mov
xchg
inc
and
and
xor
mov
xchg
xor
aam
addr16
mov
jns
in
loope
mov
fs
daa
fcoms
mov
push
mov
hlt
test
rclb
les
push
mov
mov
mov
negb
mov
jle
cmp
pushf
sbb
jge
lret
fisubrs
and
adc
dec
sub
mov
xor
jl
cmp
addr16
lods
cwtl
dec
push
in
jns
push
idivl
sub
cmpsl
fsubp
push
mov
xor
ret
dec
or
iret
mov
out
fsub
cltd
cmp
mov
out
imul
ss
mov
sarl
test
mov
dec
sbb
nop
inc
stos
dec
mov
sub
ret
xor
mov
add
gs
popa
out
jbe
insb
in
sub
push
divl
mov
aaa
lcall
jnp
or
aaa
adc
xchg
push
stc
push
xchg
xor
or
add
or
and
out
sub
daa
test
lret
pusha
push
sti
arpl
jns
mov
pop
cld
lock
xchg
test
insb
mov
sbb
call
sbb
hlt
mov
sahf
and
adcb
inc
push
imul
xor
leave
in
jecxz
xor
mov
arpl
mov
cmp
test
jnp
roll
xchg
xchg
pop
add
mov
jle
jmp
ja
dec
repz
inc
ret
inc
cmp
lret
jno
in
pusha
sbb
ljmp
and
jg
fisttps
popf
xor
fldt
ret
mov
cmp
pop
sbb
adc
dec
or
jnp
cmp
add
lds
mov
adc
xchg
inc
pop
dec
mulb
test
dec
and
inc
xchg
repnz
ljmp
or
lahf
cmp
xchg
mov
xor
xchg
movsl
lcall
push
mov
dec
daa
mulb
xchg
lahf
cmp
in
leave
cmpsl
out
cmp
sahf
imul
stos
mov
mov
cmp
add
mov
xorb
xor
cmpsb
cmp
and
ret
cwtl
pusha
mov
pushf
stc
push
jg
subl
fwait
movsb
xchg
inc
sahf
ret
inc
mov
cmc
in
das
cld
cld
push
mov
pop
dec
in
push
sbb
test
jg
pop
mov
insl
in
lret
or
sub
sub
je
xchg
pop
push
jl
lods
mov
mov
fnstcw
stos
sbb
sbb
hlt
dec
in
cmp
xchg
jl
pop
rcrl
sub
pusha
ljmp
and
xor
or
out
cmpps
cld
mov
or
mov
dec
mov
out
imul
xchg
jp
imul
xchg
daa
stos
mov
orb
dec
adc
xchg
mov
sub
push
testl
lods
xor
push
leave
xchg
xor
and
incb
aam
jne
stos
xor
sarl
call
dec
push
mov
xchg
cmp
cmpsb
push
incb
rorb
dec
add
shlb
shrl
xor
push
bound
pop
xchg
jae
xchg
pop
sti
pop
push
stc
sbb
ret
xchg
mov
inc
or
sub
in
xchg
orb
sarb
jno
xlat
repnz
loop
jo
clc
inc
or
cmp
sarb
adc
sub
fwait
xor
fidivl
mov
nop
cmp
xlat
outsb
adc
scas
mov
int3
fldl
push
ljmp
jno
subl
pop
movsb
es
jle
add
imull
and
lret
bound
test
adc
pop
stos
icebp
pop
sahf
and
in
incb
mov
push
xchg
inc
fcmovb
jno
mov
sbb
inc
xlat
cmc
cmp
imul
testb
xor
push
mov
xor
xor
jo
push
inc
test
mov
fcoms
call
or
call
mov
outsl
push
add
lea
add
xor
cmpsb
push
mov
stc
cmpsb
lods
inc
fcomps
call
popa
sub
popf
lahf
dec
call
mov
rclb
inc
fiaddl
and
and
clc
xchg
inc
inc
fnstenv
push
jmp
or
adc
nop
cmp
jecxz
mov
nop
ss
outsl
adc
scas
mov
testb
xchg
mov
push
ljmp
jno
subl
es
outsb
add
daa
rorl
jnp
stos
inc
push
pushf
jmp
pop
test
lret
out
std
inc
and
pushf
dec
xchg
inc
fcmovb
jo
mov
push
ret
inc
fdiv
aaa
jg
imul
jle
cltd
fnstsw
xor
xor
jo
push
mov
mov
adc
mov
sub
lret
push
lods
cmp
call
mov
outsl
push
lods
push
jmp
push
jo
xor
inc
movsl
push
mov
clc
movsb
lods
inc
sbb
orb
popa
sub
sahf
sahf
dec
call
mov
into
adc
out
and
and
xchg
inc
inc
fnstenv
adcb
xchg
pusha
test
in
adc
cmp
loop
mov
xchg
xor
push
sbb
arpl
adc
mov
push
jmp
xlat
xor
or
or
mov
outsb
add
es
mov
add
arpl
stos
inc
push
fwait
ljmp
out
or
sti
inc
es
dec
xchg
inc
fcmovnb
outsb
and
adc
adcb
adc
inc
mov
adc
push
mov
fidivl
or
push
ds
mov
fnstenv
aad
lods
push
mov
mov
daa
xor
pop
push
push
lods
aaa
jns
jmp
mov
jo
std
stos
push
jmp
push
cld
jo
jb,pn
inc
movsb
dec
mov
mull
ljmp
insb
or
jp
es
int3
adc
inc
in
and
push
arpl
xchg
aas
inc
fnstenv
sbbl
ret
aaa
cmp
jle
adc
ss
xor
fdivl
mov
xchg
xor
fsubrs
push
sbb
popa
test
into
flds
push
in
sub
xor
push
dec
jae
jg
push
out
mov
outsb
add
and
inc
int
js
stos
inc
push
cltd
jmp
lret
jae
pusha
movsl
in
or
stc
ds
mov
dec
nop
inc
fadd
insb
and
popf
loop
cli
adc
sbbl
inc
xchg
push
xchg
fidivrl
xor
sub
mov
nop
mov
fidivl
rcll
scas
add
clc
jecxz
xor
scas
xor
push
xor
or
test
ljmp
jno
sub
scas
inc
mov
ret
int3
arpl
mov
jmp
dec
repz
bound
inc
jmp
mov
lret
fnstsw
jmp
mov
xchg
cmp
sbbb
popa
clc
rolb
cmp
loope
push
adc
push
mov
je
xchg
xchg
xor
fnstenv
push
sbb
pop
cmpsb
cmp
xlat
adcb
sub
xor
add
je
jge
push
call
shlb
push
test
lret
lea
push
lods
inc
push
xchg
in
or
lret
ljmp
idivl
mov
dec
mov
mov
loopne
sti
adc
sbbb
punpckldq
inc
test
pop
xchg
fdivrs
xor
pop
or
xchg
mov
rcrl
scas
add
ss
add
scas
xor
jmp
push
ss
jb
stc
cmpsb
push
jmp
sbb
or
outsb
scas
inc
mov
ror
repz
scas
inc
rclb
addl
arpl
push
ljmp
xchg
or
cmp
pop
gs
nop
cmp
mov
sbb
lea
mov
filds
push
mov
sahf
xor
fldl
cld
xchg
xor
fidivl
push
sbb
pop
movsb
cmp
aad
push
lods
mov
push
in
daa
shlb
add
or
push
jmp
into
jbe
pop
test
mov
and
mov
je
lods
inc
dec
xchg
in
add
lret
bound
jmp
mov
dec
mov
mov
fisubs
mov
sbbb
push
arpl
aas
andl
xchg
mov
ss
fdivl
pop
mov
xchg
scas
pop
fdivl
iret
sbb
loopne
ss
add
mov
jae
jmp
push
aaa
into
test
jb
mull
xchg
sub
jae
sub
sahf
dec
xchg
sub
fs
popf
scas
inc
iret
adc
addl
and
mov
jne
sub
or
cmp
daa
mov
mov
inc
fsubrl
sbbl
mov
mov
fiadds
push
mov
lahf
arpl
mov
xchg
cs
jb
push
sbb
pop
mov
pop
scas
scas
hlt
push
in
and
inc
je
jns
push
ljmp
jno
cmpsl
in
mov
pop
leave
es
inc
into
gs
scas
inc
dec
xchg
in
add
int3
arpl
ret
ljmp
push
or
mov
fsubl
mov
sbbb
or
mov
sbb
mov
aaa
in
fdivl
push
mov
xchg
lods
pop
fnsave
sbb
ficomps
aaa
into
push
lcall
mov
jb
in
mov
les
mulb
xchg
sub
jae
daa
imul
jp
into
gs
scas
inc
int
in
test
int
and
mov
jae
sub
call
or
cmp
daa
mov
lea
inc
fsubrl
test
loopne
arpl
mov
faddl
pop
xchg
lahf
ss
test
jbe
cmpb
sub
dec
sbb
pop
mov
pop
scas
lods
repz
out
and
xor
or
and
push
cltd
xchg
sub
jae
or
es
aas
iret
data16
scas
inc
dec
xchg
in
test
insl
int3
arpl
shr
repz
sub
push
mov
mov
or
inc
fsubr
sub
fs
cmp
mov
sbb
mov
aaa
jecxz
fnsave
mov
xchg
stos
push
fnsave
sbb
fcompl
cmp
dec
std
sbb
mov
ret
je
cmc
mov
xchg
sub
jae
and
inc
xchg
sub
iret
out
cltd
scas
inc
lret
adc
test
int
push
fs
xchg
aas
jmp
jno
sub
out
or
cmp
daa
mov
mov
inc
fsubl
test
mov
mov
fiaddl
pop
xchg
loopne
flds
xchg
sub
dec
sbb
jg
stc
nop
pop
mov
pop
scas
stos
repnz
out
and
xor
or
push
xchg
xchg
sub
jno
or
lds
outsl
sbb
test
imul
popf
jecxz
mov
icebp
xor
or
mov
fldenv
or
test
pop
or
cmp
cmp
rol
push
add
fidivs
add
push
xor
cld
xchg
test
lret
sti
test
xchg
ficompl
rorb
sbb
mov
shll
lahf
push
in
rclb
sub
je
and
dec
lcall
addr16
xchg
mov
leave
push
out
xchg
into
gs
or
subl
ret
or
aaa
loop
mov
mov
frstor
xchg
mov
movsb
cmp
flds
pop
test
aaa
pop
movsl
loopne
xlat
jg
push
mov
xchg
sub
fdivl
dec
sbb
jge
cli
xchg
pop
sahf
cmp
iret
jns
scas
stos
lock
out
and
ss
inc
jbe
je
push
in
dec
xchg
xchg
sub
jo
or
les
insl
pop
mov
dec
mov
test
push
gs
loope
mov
lock
shll
inc
test
mov
sub
xchg
xlat
data16
or
test
pop
or
cmp
scas
pop
test
mov
rclb
mov
jne
add
pop
xor
xchg
cmpsl
push
fbstp
enter
cmpsl
std
xchg
fstps
cmp
dec
cli
sbb
sahf
dec
cmp
jge
jne
icebp
sahf
push
out
iret
adc
and
dec
cwtl
inc
xchg
sub
shlb
xchg
mov
enter
ds
or
test
sub
jecxz
or
xor
push
push
fisubs
sbb
mov
movsb
cmp
fadds
pop
subb
cmp
loopne
aad
mov
xchg
sub
fnsave
sbb
jnp
sti
xchg
push
pushf
cmp
int
sbb
pop
lret
aaa
into
cld
inc
jbe
jb
push
in
dec
xchg
xchg
sub
outsl
je
mov
ret
xchg
sub
cmp
imul
mov
test
fisttps
adc
sub
bound
or
inc
orl
bound
rcll
dec
daa
test
pop
pop
addr16
cmp
cmp
rclb
mov
jbe
inc
pop
xor
cmpsb
push
fbstp
sbb
xlat
sbb
rorl
sbb
popf
dec
cmp
jnp
jbe
lock
push
out
int
xchg
sub
out
jne
and
dec
xchg
inc
xchg
sub
shrl
xchg
mov
or
xchg
pop
push
movsl
nop
cmp
test
ret
loop
or
xor
sub
adc
add
test
gs
mov
movsl
cmp
sbbl
push
ret
pop
subb
cmp
loope
aad
mov
xchg
sub
fnsave
sbb
xchg
push
pushf
cmp
int
sbb
pop
leave
aaa
into
cli
inc
ja
jb
push
in
dec
xchg
xchg
sub
insl
je
lahf
out
dec
sbb
xchg
sub
cmp
push
inc
mov
xchg
fisttps
test
xor
ret
or
aas
orl
pusha
sub
xchg
aad
incb
mov
daa
test
add
mov
sbb
int
pop
ljmp
loopne
push
std
rcrl
xchg
cmpsb
push
fbstp
sbb
clc
mov
cmp
dec
negb
mov
insb
pop
lock
dec
cmp
jns
ja
lock
inc
in
jne
push
gs
xchg
aas
xchg
sub
shrb
xchg
mov
les
icebp
mov
pop
xsha256
cmpsb
nop
cmp
test
sub
mov
xor
sub
push
push
push
mov
inc
fisubs
mov
fildl
cmpsb
cmp
push
push
les
daa
mov
jns
jp
push
lods
testb
daa
into
fnsave
push
mov
and
xchg
push
fwait
cmp
int3
je
mov
in
pop
icebp
push
aaa
into
clc
aas
js
jno
push
in
dec
xchg
xchg
sub
popf
in
dec
pop
mov
shrb
adc
xchg
fimuls
movsl
ud1
test
xor
popa
or
mov
mov
sub
aam
incl
xchg
xor
movsb
cmp
int3
ret
test
cmp
pop
loope
push
sti
rcrl
call
add
mov
mov
cmp
dec
hlt
sbb
pushf
inc
cmp
ja
js
out
cwtl
push
out
leave
adc
or
fs
xchg
cmp
shrl
nop
mov
ret
mov
iret
adc
cmpsl
ss
test
cs
or
xor
sub
or
imul
sub
mov
fidivrl
cld
mov
cmpsl
ds
dec
lds
mov
jp
js
push
stos
cmc
add
incb
mov
pop
cld
xchg
push
cltd
cmp
mov
jmp
repnz
cmp
idivb
push
out
dec
nop
xchg
cs
or
jecxz
dec
adc
shrl
adc
mov
fmull
cmpsb
or
cs
movsb
cmp
sub
shrb
add
dec
loopne
and
push
cmp
push
xchg
std
cmpsb
movsb
cmp
push
loop
push
stc
ret
jb
xchg
mov
les
mov
lahf
xchg
rcll
cmp
mov
imul
jne
jns
in
xchg
pop
out
push
cwtl
das
inc
call
mov
xchg
cmp
out
mov
rorb
mov
loope
adc
test
xor
test
das
filds
dec
in
fldcw
rorl
insb
add
cmpsb
mov
fdivrs
std
scas
stc
test
sub
test
add
pop
jg
mov
jnp
jbe
push
test
add
cld
inc
and
dec
xchg
ds
jo
mov
jmp
cmp
hlt
cmp
insl
adc
cwtl
das
shlb
cltd
loope
dec
adc
aam
pushw
mov
inc
xchg
mov
ficoml
cmpsl
or
lds
push
movsl
cmp
jecxz
pop
sub
mov
push
add
mov
push
ljmp
xor
cmp
or
pop
cld
movsb
movsb
cmp
sbb
ret
jno
cwtl
mov
ret
pop
mov
popf
xchg
iret
adc
sbb
and
repz
inc
cmp
jae
jp
in
xchg
pop
out
lds
jbe
sbb
dec
xchg
cmp
out
mov
mov
adc
test
lods
xor
fiadds
dec
in
fsubrs
rorl
insb
add
mov
xlat
jl
std
lods
clc
test
sub
test
add
jle
mov
jnp
jne
push
cmpsl
repnz
sti
inc
and
dec
xchg
ds
outsl
sbb
sbb
cmp
repz
insb
adc
out
inc
lea
or
adc
aam
gs
repnz
fsts
cmpsl
or
lds
movsl
cmp
jecxz
pop
sub
mov
push
add
pop
push
push
cmp
or
pop
sti
mov
jecxz
dec
test
sub
cwtl
mov
ret
repz
xchg
into
adc
aad
out
sbb
and
repz
inc
cmp
jb
jp
jmp
pop
out
les
xor
in
or
xchg
cmp
in
mov
mov
adc
test
arpl
mov
das
xlat
sub
or
add
movsb
mov
jnp
std
lods
imull
sbb
dec
pop
jge
mov
jnp
je
push
cmpsb
icebp
add
cli
inc
and
dec
xchg
ds
outsb
sbb
sbb
cmp
repnz
imul
out
inc
mov
or
adc
aam
fs
dec
ds
mov
fcoms
cmpsl
or
lds
push
movsl
aaa
jl
jecxz
pop
sub
mov
push
add
mov
push
std
push
cmp
or
movsb
cmp
sbb
jp
cmc
ret
outsl
add
jp
pop
mov
fwait
xchg
int
ds
out
sbb
pop
pop
repz
inc
cmp
jno
jp
ljmp
xor
pop
mov
xchg
aaa
xchg
sub
aad
in
mov
mov
fst
mulps
test
bound
or
mov
dec
in
sub
pop
push
insb
add
mov
data16
stos
imulb
sbb
dec
pop
jnp
mov
jnp
jae
pop
movsl
out
add
stc
inc
and
dec
xchg
ds
insl
sbb
sahf
in
repz
sarb
icebp
aaa
jp
imul
cwtl
das
mov
fnsave
sub
xor
imul
dec
cmp
pop
shrb
adc
in
lds
ss
jecxz
push
sub
add
test
mov
push
sti
imul
movsl
dec
xchg
add
pop
clc
mov
in
dec
hlt
ret
pop
es
add
jns
and
int3
adc
inc
in
sbb
hlt
xchg
aas
cmp
jo
jnp
call
or
push
adc
ss
sub
mov
insl
loop
mov
mov
cs
popf
sub
push
xchg
out
jne
pandn
ret
lods
inc
imul
loope
pop
jae
pop
in
les
ja
adc
loop
shlb
or
add
loope
jg
ljmp
sarb
xor
cltd
lods
lcall
xor
jecxz
inc
stos
outsl
lds
int3
xor
and
sbb
les
imul
test
popa
add
nop
push
cld
jns
push
add
sub
movsb
outsb
adc
add
adc
xor
cmp
outsl
jnp
sbb
andl
dec
mov
aad
cltd
add
mov
push
loopne
arpl
fbld
je
dec
dec
out
xchg
xchg
mov
es
or
adc
cltd
mov
dec
cmp
mov
cld
icebp
fists
push
push
ljmp
outsl
nop
aaa
pop
push
icebp
lea
cmp
sbb
pop
xchg
jmp
into
add
pop
push
mov
jno
inc
scas
mov
mov
imul
add
xor
dec
mov
xchg
lret
imul
lea
mov
arpl
cltd
pop
inc
and
aaa
xor
push
mov
xchg
mov
out
enter
push
inc
in
out
pop
and
xchg
les
int
xchg
fucomi
ja
inc
or
and
mov
mov
cmp
sbb
adc
xchg
std
lods
cwtl
pop
clc
imull
mov
inc
in
nop
lea
scas
adc
data16
fwait
push
aam
cmp
pusha
mov
push
in
or
xchg
inc
aam
mov
cli
mov
aad
aad
das
mov
ret
test
dec
push
mov
lock
mov
jb
movsl
leave
lret
test
fdivl
add
add
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
call
out
sbb
call
mov
push
stc
movsb
sbb
scas
pop
add
js
out
popf
in
sbb
sarl
loope
cmp
jnp
add
cmp
lret
les
dec
xchg
cmp
or
pop
and
stos
std
addr16
pop
jmp
hlt
adc
je
and
xchg
sarl
fnstcw
ljmp
pop
cmp
xor
pushf
push
or
mov
adc
jmp
frstor
mov
aad
in
es
arpl
xor
pop
data16
into
cmpsb
idivl
sub
sbb
push
rorl
fwait
scas
out
fcompl
or
dec
enter
mov
xchg
fisttpl
outsb
jecxz
jnp
ds
je
adc
out
sbb
pushf
stos
sub
imul
mov
mov
iret
sub
rcrl
orb
inc
jne
adc
pop
cmp
lods
mov
stos
ss
loop
adc
in
sahf
movsl
test
xchg
lock
cltd
sahf
and
rclb
icebp
push
fs
xchg
cli
add
xchg
lret
pop
fidivl
enter
inc
fstpt
mov
sub
adc
movsb
sub
mov
mov
xor
and
mov
push
cmpsl
cmp
into
cmpsl
pop
xor
movsb
mov
mov
leave
dec
shlb
clc
jbe
dec
or
jmp
outsb
xchg
scas
popf
mov
inc
test
mov
and
sbb
sbb
pop
xchg
hlt
adc
dec
scas
dec
add
push
ljmp
or
outsl
or
mov
in
stos
pushl
or
add
ja
scas
std
or
push
shlb
aas
push
mov
push
cmp
pop
dec
jbe
mov
xor
jb
mov
cli
jbe
jle
jnp
imul
mov
in
cmpl
fcomps
jne
sub
push
pop
aad
jne
xchg
test
jne
mov
adc
sbb
add
lods
cli
fcoms
dec
jb
int3
xor
adc
out
ret
leave
fidivl
fisttpll
push
mov
ret
in
cltd
cld
pop
fnstenv
out
insb
stc
lea
fcom
jp
jb
leave
mov
jmp
xchg
pop
js
cmp
push
dec
push
incl
and
ret
insl
pop
or
inc
out
fwait
sti
jl
cmp
insl
dec
xor
outsl
shrb
mov
aam
sbb
xorl
cmpsl
scas
push
pop
hlt
lcall
rcrb
insl
mov
out
pop
cmp
test
addl
lods
incb
jbe
jo
test
dec
mov
stos
ss
pop
sbb
out
or
jns
mov
xor
fiadds
adc
dec
rcrl
or
xchg
nop
pop
inc
xor
mov
inc
loop
cmp
fidivl
hlt
icebp
adc
jmp
rclb
push
shr
in
inc
sub
shr
pop
xor
js
jno
jecxz
sub
sbb
inc
cmpsl
jno
into
adcl
sbb
adcl
sub
push
out
jecxz
adc
adc
add
fisubl
popf
into
mov
push
sbb
push
in
arpl
loope
loop
orb
push
cmp
hlt
icebp
adc
xor
stc
cmpsb
jns
cs
dec
pop
sub
ret
pushf
inc
xchg
out
jo
jbe
adc
xlat
sti
mov
cmp
loope
loop
repnz
push
testb
jns
rorl
push
xchg
push
xchg
mov
cwtl
sub
xlat
addr16
loope
xchg
push
aas
push
and
lcall
cli
push
mov
lods
add
mov
repnz
lret
icebp
adc
in
pushf
fsts
push
mov
jno
stos
aam
or
push
or
sub
add
mov
sub
aad
scas
sub
fdivrl
enter
ds
lret
mov
adc
bound
loop
jmp
mov
push
fistl
mov
sub
nop
cld
mov
push
push
fisubl
pushf
mov
cld
lods
bound
je
cld
mov
ss
imul
pop
mov
mov
jg
xchg
filds
shlb
adc
imul
xchg
ret
cwtl
lea
test
sbb
push
je
iret
pop
sub
mov
dec
pop
pop
sbb
jbe
outsb
test
add
xlat
dec
or
and
add
add
sbb
and
int
fistl
outsb
fwait
push
dec
mov
adc
aaa
lahf
out
inc
mov
or
fidivl
xor
mov
dec
les
jbe
sub
push
dec
gs
push
mov
lahf
mov
mov
xchg
aam
dec
or
mov
or
mov
enter
lahf
das
xor
sbb
es
in
sub
cld
sub
jg
sarl
ret
es
in
pop
and
decl
fildll
jae
mov
icebp
cwtl
lret
add
notb
loopne
jmp
popa
pusha
jne
inc
jecxz
out
bound
cmp
in
dec
sahf
arpl
inc
add
add
sbb
jg
call
lret
std
jne
xchg
sub
pop
out
scas
mov
cmp
idivb
in
pop
jb
and
je
loop
sub
insl
nop
xchg
xchg
lods
rcr
shlb
sub
cmp
mov
xchg
rorl
hlt
sub
dec
scas
cli
xlat
or
sub
stc
divl
xchg
testb
mov
js
out
mov
lcall
adc
cmp
sub
cwtl
fs
dec
call
add
arpl
pop
xchg
sbb
inc
gs
dec
push
or
rep
fbld
ljmp
jle
fdiv
leave
or
xlat
test
jnp
popf
icebp
jmp
xchg
insl
mov
lds
mov
mov
mov
xchg
mov
test
mov
andb
out
pop
test
inc
lea
or
lock
mov
or
fcomip
push
lock
mov
les
cmp
mov
lahf
sub
jbe
int
in
movsb
bound
xor
mov
subb
jp
mov
out
lcall
nop
call
and
mov
cs
mov
sbb
xor
mov
cmp
sti
stos
out
xchg
fucomi
gs
fwait
inc
inc
pop
push
pop
push
out
push
xor
cmp
js
add
and
dec
add
pop
sub
and
ja
push
data16
jae
pop
sub
leave
inc
or
dec
repz
inc
imul
inc
les
stos
add
stc
in
xchg
repz
data16
xchg
repnz
lcall
jns
pop
ret
xor
loop
stc
lods
mov
jmp
js
cmp
imull
jb
test
xchg
ret
in
sahf
mov
call
push
ret
imul
or
sub
adc
fistpl
mov
adc
mov
out
sti
das
cmp
xchg
imul
rcr
xchg
mov
dec
add
cmc
sub
cmp
stos
gs
pusha
add
insl
push
cmp
imul
dec
scas
test
pop
xchg
push
and
shlb
sub
lcall
xor
mov
mov
cwtl
xchg
mov
fwait
or
jne
cmp
aad
rorl
out
shrl
sbb
mov
push
push
dec
push
cwtl
in
mov
pop
mov
orb
xor
test
lods
inc
sbb
mov
leave
bound
xchg
rolb
lret
call
hlt
pop
jmp
mov
jbe
jmp
xor
cmp
dec
mov
rorl
dec
call
and
pop
lcall
bound
add
aaa
jne
push
icebp
std
out
cmp
