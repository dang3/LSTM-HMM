add
inc
add
push
push
je
imul
pop
adc
add
add
add
add
enter
aam
inc
add
xor
fdivl
inc
add
xor
xchg
das
inc
add
das
inc
add
push
dec
bound
arpl
cmp
inc
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
push
inc
and
add
mov
and
mov
add
pop
ret
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
add
mov
cmpl
jne
push
push
call
mov
cmpl
jne
xor
mov
jmp
mov
mov
mov
mov
mov
xor
mov
add
mov
lea
mov
mov
mov
mov
mov
mov
inc
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
add
pop
ret
mov
mov
ret
mov
push
push
add
mov
mov
call
mov
cmpl
jne
xor
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
ret
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
mov
push
push
push
push
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
cmp
jne
mov
call
mov
mov
mov
mov
mov
add
jmp
add
cmp
jne
mov
call
mov
mov
add
mov
mov
cmp
jne
mov
mov
call
test
jne
xor
mov
pop
pop
pop
pop
pop
pop
ret
lea
push
push
push
push
add
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
add
mov
add
cmp
jb
cmp
jne
mov
mov
add
mov
mov
sub
mov
cmpl
jne
mov
call
jmp
mov
mov
add
mov
add
cmp
jne
mov
mov
sub
jmp
mov
add
mov
mov
mov
mov
add
sub
mov
sub
mov
mov
lea
mov
call
test
jne
xor
jmp
mov
jmp
mov
mov
mov
mov
cmp
jne
xor
add
pop
pop
pop
pop
ret
nop
push
push
push
mov
mov
cmp
jge
mov
jmp
add
and
mov
push
push
push
push
call
mov
mov
test
je
mov
mov
call
test
jne
push
push
mov
push
call
xor
mov
pop
pop
pop
ret
nop
push
push
push
push
mov
mov
mov
movl
push
push
push
push
call
mov
mov
test
jne
add
and
mov
push
push
push
push
call
mov
cmpl
je
mov
mov
call
test
jne
push
push
mov
push
call
xor
mov
pop
pop
pop
pop
ret
nop
push
push
push
push
add
mov
mov
movl
xor
mov
mov
add
mov
mov
mov
jmp
mov
mov
mov
mov
mov
cmp
jb
mov
mov
add
cmp
ja
cmp
jae
mov
mov
mov
mov
add
cmp
jbe
mov
push
push
mov
mov
push
call
test
jne
movl
mov
call
mov
mov
mov
cmp
jne
xor
mov
cmpl
je
mov
mov
mov
sub
mov
add
pop
pop
pop
pop
ret
mov
push
push
push
push
add
mov
mov
lea
lea
lea
mov
mov
and
mov
add
add
and
mov
mov
mov
mov
sub
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
mov
mov
cmp
jae
mov
mov
mov
cmp
jbe
mov
mov
mov
cmp
jae
push
push
mov
sub
push
mov
push
call
test
jne
xor
mov
jmp
mov
mov
mov
mov
cmp
jne
add
pop
pop
pop
pop
ret
nop
push
push
push
push
add
mov
lea
lea
lea
mov
mov
add
and
mov
add
and
mov
mov
mov
mov
sub
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
mov
mov
cmp
jae
mov
mov
mov
cmp
jbe
mov
mov
mov
cmp
jae
push
mov
sub
push
mov
push
call
test
jne
movl
mov
mov
mov
mov
cmp
jne
add
pop
pop
pop
pop
ret
mov
push
push
push
push
add
mov
mov
mov
mov
add
and
mov
mov
jmp
mov
cmp
jg
mov
mov
mov
mov
call
cmpl
je
mov
mov
add
mov
mov
sub
mov
cmpl
jne
mov
call
jmp
mov
mov
mov
cmp
jne
mov
mov
call
cmpl
je
lea
mov
mov
call
cmpl
jne
lea
mov
mov
call
xor
mov
add
pop
pop
pop
pop
ret
mov
push
push
push
push
add
mov
mov
mov
lea
mov
add
and
mov
mov
jmp
mov
mov
mov
cmp
je
mov
cmp
jne
mov
cmp
jne
mov
cmp
jle
mov
mov
sub
mov
mov
mov
add
lea
call
cmpl
je
lea
lea
mov
call
cmpl
jne
lea
mov
mov
call
mov
xor
mov
jmp
lea
mov
mov
call
cmpl
je
lea
lea
mov
call
cmpl
jne
lea
mov
mov
call
mov
xor
mov
jmp
mov
mov
cmp
jne
mov
cmp
jg
mov
mov
mov
call
mov
cmpl
je
mov
mov
mov
add
mov
mov
mov
sub
mov
cmpl
jne
mov
call
jmp
mov
xor
mov
add
pop
pop
pop
pop
ret
nop
push
add
mov
lea
and
mov
add
and
mov
mov
cmp
jbe
mov
mov
sub
mov
call
lea
mov
mov
call
mov
test
je
lea
mov
mov
call
mov
mov
mov
mov
cmpl
je
lea
mov
call
jmp
xor
mov
add
pop
ret
mov
push
mov
push
xor
push
push
pushl
mov
push
call
cmpb
je
push
call
mov
call
mov
call
mov
call
push
push
call
mov
cmpl
je
mov
mov
xor
mov
inc
cmp
jne
movl
mov
mov
mov
mov
mov
mov
mov
mov
movb
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
pop
ret
nop
push
mov
add
cmpb
je
xor
push
push
pushl
mov
cmpb
je
push
call
movb
mov
push
call
xor
mov
mov
mov
jmp
push
push
mov
mov
push
call
mov
mov
mov
mov
cmp
jne
mov
call
mov
call
mov
call
mov
mov
cmpl
je
mov
mov
mov
mov
push
call
mov
mov
cmpl
jne
xor
pop
pop
pop
mov
push
cmpb
je
push
call
push
call
ret
jmp
jmp
pop
pop
pop
ret
nop
push
add
cmp
jne
mov
mov
mov
mov
mov
cmp
jg
cmp
jne
test
jns
add
sar
mov
xor
mov
jmp
test
jns
add
sar
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
ret
lea
push
push
mov
mov
mov
jmp
mov
mov
cmp
jb
mov
add
cmp
jb
mov
mov
mov
mov
cmp
jne
movl
xor
mov
mov
pop
pop
ret
mov
push
push
mov
sub
lea
mov
cmp
jl
mov
movl
mov
call
pop
pop
ret
cmp
jl
mov
or
mov
mov
mov
pop
pop
ret
incl
mov
sub
mov
and
sub
add
call
ret
mov
cmp
jl
or
mov
add
call
ret
cmp
jl
mov
or
mov
add
andl
ret
push
push
push
mov
sub
mov
mov
and
cmp
je
movl
mov
and
sub
mov
xor
test
je
movl
testb
je
mov
sub
mov
sub
mov
mov
cmp
je
movl
mov
call
add
mov
pop
pop
pop
ret
push
push
push
mov
xor
mov
test
je
and
add
add
mov
test
jne
mov
mov
call
mov
mov
add
add
andl
mov
pop
pop
pop
ret
lea
push
push
push
push
add
mov
mov
xor
mov
call
mov
cmpl
je
mov
mov
mov
mov
add
mov
lea
sub
cmp
jg
mov
sub
mov
sub
cmp
jge
mov
mov
sub
add
mov
mov
call
jmp
mov
mov
sub
lea
call
mov
test
je
mov
sub
mov
call
mov
mov
mov
add
mov
add
cmp
jbe
lea
sub
call
mov
mov
call
mov
mov
add
pop
pop
pop
pop
ret
push
push
add
mov
mov
mov
mov
mov
mov
add
sub
mov
cmp
jg
mov
test
jns
add
sar
mov
mov
mov
cmpl
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jl
mov
mov
call
test
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
pop
pop
ret
nop
cmpl
jle
cmpl
jge
movl
jmp
mov
or
mov
mov
mov
add
call
xor
mov
xor
mov
ret
mov
push
push
push
add
mov
lea
movsl
movsl
mov
call
lea
mov
mov
call
mov
test
jne
xor
jmp
mov
cmp
jae
call
sub
add
mov
add
mov
add
cmp
jae
call
add
mov
add
cmp
jne
sub
mov
call
subl
mov
mov
mov
mov
mov
add
pop
pop
pop
ret
lea
push
add
mov
mov
lea
call
cmpl
je
mov
call
test
jne
xor
jmp
mov
pop
pop
pop
ret
nop
push
push
add
mov
mov
mov
lea
mov
call
cmpl
je
mov
call
test
jne
xor
jmp
mov
pop
pop
pop
pop
ret
lea
push
mov
xor
mov
test
jns
add
sar
cmp
jg
mov
mov
mov
cmpl
jne
inc
cmp
jne
mov
pop
ret
lea
push
push
push
push
add
mov
lea
mov
mov
mov
mov
mov
cmp
jle
mov
mov
mov
mov
cmp
jle
mov
mov
mov
mov
mov
mov
cmp
jg
mov
mov
mov
cmp
je
mov
mov
jmp
cmp
jg
mov
call
mov
cmpl
jne
mov
call
test
jne
xor
mov
jmp
cmp
jg
sub
cmpl
jge
add
xor
mov
mov
mov
add
mov
or
mov
mov
mov
add
mov
incl
sub
add
jmp
mov
call
mov
mov
mov
sub
cmp
jl
mov
add
xchg
call
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
add
mov
mov
andl
mov
mov
mov
or
mov
mov
mov
add
mov
incl
sub
add
mov
add
pop
pop
pop
pop
ret
push
mov
add
push
mov
cmpb
jne
call
test
je
cmp
jle
xor
mov
jmp
xor
push
push
pushl
mov
cmpb
je
push
call
add
and
cmp
jge
mov
cmp
jg
mov
test
jns
add
sar
mov
mov
mov
cmpl
je
mov
add
mov
mov
andl
mov
mov
mov
mov
cmp
jne
mov
xor
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
mov
mov
add
mov
incl
sub
add
call
jmp
cmp
jg
sub
cmpl
jge
add
xor
mov
mov
mov
add
mov
or
mov
mov
mov
add
mov
incl
sub
add
call
jmp
mov
call
mov
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
mov
pop
ret
nop
push
mov
add
push
mov
xor
mov
cmpb
jne
call
test
jne
movl
movl
jmp
xor
push
push
pushl
mov
cmpb
je
push
call
mov
mov
sub
mov
mov
mov
test
jne
movl
jmp
decl
mov
and
sub
sub
test
je
mov
sub
mov
cmp
jl
test
je
movl
jmp
mov
sub
mov
mov
cmp
je
movl
jmp
add
mov
mov
mov
call
and
mov
add
mov
mov
cmp
jne
sub
add
cmpl
jle
call
xor
mov
call
jmp
mov
mov
test
je
and
cmp
jge
movl
jmp
mov
orl
jmp
mov
mov
mov
cmpl
je
mov
cmpl
je
mov
cmpl
jge
movl
jmp
mov
mov
add
mov
call
mov
mov
call
mov
mov
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
mov
pop
ret
mov
push
push
push
push
add
mov
add
and
cmp
jge
mov
sub
mov
mov
mov
and
mov
add
mov
cmp
jne
mov
jmp
cmp
jle
mov
sub
mov
cmp
jne
sub
add
cmpl
jge
add
sub
mov
jmp
mov
mov
testb
jne
mov
mov
mov
add
mov
call
cmp
jl
mov
add
mov
or
mov
mov
mov
add
call
jmp
mov
jmp
mov
sub
mov
cmp
jne
cmp
jg
sub
add
cmpl
jge
mov
add
add
xor
mov
mov
sub
add
mov
mov
and
or
mov
mov
mov
jmp
call
mov
add
mov
mov
testb
jne
mov
mov
mov
mov
cmp
jle
add
mov
sub
jmp
mov
call
sub
cmp
jl
mov
add
mov
call
jmp
add
mov
add
mov
mov
andl
jmp
mov
mov
test
je
and
add
mov
mov
mov
call
test
je
mov
add
mov
jmp
xor
jmp
mov
sub
add
mov
mov
and
or
mov
mov
mov
add
pop
pop
pop
pop
ret
nop
push
mov
add
push
push
mov
mov
cmpb
jne
call
test
jne
xor
mov
jmp
xor
push
push
pushl
mov
cmpb
je
push
call
mov
mov
call
test
je
mov
jmp
mov
call
mov
mov
sub
mov
and
sub
cmp
jge
mov
cmpl
je
mov
mov
xchg
call
mov
call
mov
mov
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
pop
pop
pop
pop
ret
lea
push
push
mov
test
jle
mov
call
mov
cmpl
jne
mov
call
jmp
xor
mov
mov
pop
pop
ret
lea
push
test
je
call
mov
test
je
mov
call
jmp
xor
mov
pop
ret
mov
test
je
test
je
push
mov
call
pop
or
je
mov
ret
mov
jmp
mov
mov
call
or
jne
ret
mov
jmp
test
je
push
mov
call
pop
or
je
mov
ret
lea
mov
call
ret
push
push
mov
mov
and
cmpl
je
mov
mov
call
test
jne
call
mov
jmp
cmp
ja
xor
mov
mov
xor
mov
mov
call
pop
pop
ret
mov
and
mov
jmp
ret
push
push
push
call
cmpl
pop
pop
pop
jne
ret
xor
jmp
ret
lea
push
mov
call
mov
pop
ret
push
call
mov
call
xor
mov
mov
pop
ret
lea
push
push
mov
mov
mov
cmp
ja
je
sar
js
rep
mov
and
rep
pop
pop
ret
lea
lea
sar
js
std
rep
mov
and
add
add
rep
cld
pop
pop
ret
push
mov
sub
je
dec
sub
jae
mov
call
mov
jmp
xor
jmp
cmp
je
cmp
jne
xor
jmp
mov
test
je
mov
call
mov
pop
ret
lea
mov
call
ret
lea
push
push
mov
xor
mov
cmp
jb
cmp
ja
and
cmp
jne
mov
call
mov
test
jne
mov
call
mov
test
je
mov
call
jmp
cmp
je
mov
call
mov
pop
pop
ret
mov
push
push
push
mov
push
test
je
xor
xor
mov
mov
inc
cmp
je
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
inc
cmp
je
cmp
je
test
je
jmp
test
je
sub
cmp
ja
cmp
ja
lea
add
add
mov
inc
test
jne
dec
je
test
jge
jmp
inc
jmp
neg
jle
js
pop
sub
jmp
inc
mov
inc
jmp
mov
mov
inc
test
je
cmp
jb
sub
sub
cmp
jbe
sub
cmp
ja
add
cmp
ja
shl
add
mov
inc
test
jne
dec
jne
neg
pop
xor
mov
pop
pop
pop
ret
lea
push
push
mov
mov
and
repz
pop
pop
ret
lea
jmp
ret
mov
push
xor
test
jl
je
cmp
jge
mov
and
lea
fldt
fmulp
shr
je
mov
and
je
lea
fldt
fmulp
shr
je
lea
fldt
fmulp
jmp
neg
cmp
jge
mov
and
lea
fldt
fdivrp
shr
je
mov
and
je
lea
fldt
fdivrp
shr
je
lea
fldt
fdivrp
jmp
fstp
fldt
jmp
fstp
fldz
pop
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cli
or
add
add
add
or
add
add
add
push
ret
cmovo
add
add
add
adc
add
add
adcb
add
add
mov
add
add
sub
sbb
add
add
add
add
add
inc
mov
mov
add
adc
add
add
sub
test
add
sub
mov
xor
add
add
leave
sbb
add
cs
add
inc
jbe
imul
cmp
add
mov
mov
inc
add
bound
inc
add
xlat
fadds
nop
lods
outsb
xor
xchg
add
test
in
int3
into
sbb
rorl
mov
push
pop
test
enter
mov
inc
cmp
and
daa
lret
into
pop
inc
test
xchg
clc
js
aas
sbbl
pop
mov
addr16
leave
repnz
bound
and
cld
gs
sahf
mov
sub
inc
aad
iret
decl
js
roll
adc
lds
stos
mov
cmp
or
mov
pop
out
sub
imul
divl
jl
xor
cmp
call
mov
stc
popf
sti
jmp
stos
push
inc
mov
push
sbb
sarb
repnz
test
nop
fildl
daa
movsb
lahf
nop
inc
pop
stos
clc
scas
adc
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
bound
ds
push
cmpsb
scas
mov
pop
or
addl
cmp
xor
in
cmp
sahf
xchg
pop
cmpsb
lock
mov
popa
mov
fsubs
addr16
repz
mov
subb
and
and
outsb
bound
xor
jmp
mov
push
xor
push
call
cmp
jne
push
call
and
cmp
je
cmp
jne
mov
mov
pop
ret
nop
push
mov
add
movzwl
mov
lea
push
push
push
push
push
call
test
jne
xor
push
push
pushl
mov
movl
lea
push
lea
push
push
push
push
mov
push
call
xor
pop
pop
pop
mov
push
mov
push
call
ret
jmp
jmp
mov
and
mov
and
or
mov
mov
pop
ret
add
inc
push
push
inc
push
inc
pop
inc
outsl
jb
popa
outsb
fs
inc
gs
jo
imul
push
dec
popa
jae
push
popa
insb
jne
add
add
fninit
fldcw
ret
mov
push
push
mov
mov
xor
mov
inc
rep
pop
pop
ret
lea
push
mov
mov
call
call
mov
mov
call
pop
ret
mov
push
mov
mov
call
mov
call
pop
ret
nop
add
mov
ret
mov
call
test
jle
call
ret
nop
test
je
mov
mov
call
ret
push
push
push
mov
mov
stos
mov
xor
push
shr
dec
rep
pop
and
rep
mov
mov
mov
test
je
push
mov
test
je
mov
jmp
cmp
je
pop
mov
add
mov
test
je
mov
mov
add
dec
jne
cmp
jne
pop
pop
pop
ret
mov
push
push
mov
mov
mov
mov
mov
test
je
call
mov
test
jne
pop
pop
ret
push
push
mov
mov
test
je
mov
mov
call
test
jne
xor
pop
pop
ret
mov
pop
pop
ret
lea
push
xchg
jmp
mov
mov
test
je
movzwl
push
add
repnz
je
pop
mov
test
jne
pop
ret
pop
add
sub
mov
pop
ret
mov
jmp
mov
cmp
je
mov
test
jne
ret
mov
ret
nop
mov
ret
mov
ret
lea
ret
lea
ret
lea
push
mov
or
je
cmp
jae
push
mov
call
pop
je
mov
pop
jmp
pop
mov
jmp
ret
nop
push
push
push
test
jl
call
xor
lea
mov
mov
mov
movl
mov
mov
pop
pop
pop
ret
jmp
mov
mov
test
je
mov
mov
push
call
pop
call
call
ret
lea
mov
call
ret
mov
push
mov
mov
mov
call
mov
pop
ret
mov
test
jg
ret
push
push
mov
call
pop
pop
ret
nop
cmpb
jbe
push
push
push
push
call
ret
nop
cmpb
je
push
push
push
push
push
push
push
call
add
pop
ret
lea
push
push
push
push
call
add
pop
ret
lea
cmpb
jbe
push
push
jmp
ret
lea
test
je
mov
cmpb
je
cmpb
jne
movsbl
inc
inc
jmp
add
add
ret
mov
cmpb
jbe
push
push
push
call
push
push
push
push
push
call
pop
pop
pop
pop
ret
nop
cmpb
jbe
push
push
push
push
push
call
pop
ret
push
push
cmpb
jbe
push
push
push
push
call
pop
pop
ret
mov
mov
testl
jne
cmpl
mov
mov
je
cld
call
mov
test
je
call
test
je
mov
mov
cmpl
je
call
cmpb
jbe
cmpb
ja
lea
push
push
call
cmp
pop
je
mov
mov
mov
jmp
mov
mov
mov
cmpb
jbe
cmpb
ja
push
lea
push
push
push
call
cmp
pop
pop
pop
je
orl
push
xor
push
push
push
mov
push
push
push
push
mov
push
push
push
push
call
mov
call
pushl
mov
mov
mov
movl
add
call
jmp
jmp
call
mov
mov
mov
mov
jmp
mov
ret
mov
mov
mov
testl
je
mov
movl
push
push
push
push
mov
add
call
call
pop
pop
pop
pop
mov
ret
mov
or
jne
mov
call
pop
push
push
push
push
push
push
push
push
push
push
push
push
jmp
ret
mov
movl
call
mov
mov
mov
mov
andl
cmpl
je
mov
call
call
xor
add
mov
pop
mov
mov
pop
pop
pop
pop
mov
ret
lea
call
mov
mov
mov
mov
call
pop
mov
xor
pop
mov
pop
pop
call
jmp
ret
xor
mov
mov
add
mov
call
ret
ret
mov
push
mov
mov
mov
cmp
jg
je
cmp
jg
je
sub
je
sub
je
dec
je
jmp
add
sub
jb
je
jmp
cmp
jg
je
sub
je
dec
je
dec
je
jmp
sub
je
sub
je
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
and
mov
call
pop
ret
mov
testl
jne
cmpb
ja
lea
push
call
cmp
je
mov
cld
call
mov
push
push
push
push
call
mov
cmpl
mov
mov
je
mov
test
je
mov
call
test
je
mov
call
mov
test
je
call
mov
mov
mov
mov
jmp
xor
ret
lea
xor
lea
mov
mov
mov
movl
mov
mov
ret
lea
xor
mov
test
je
mov
cmp
jne
mov
mov
ret
mov
cmp
je
cmp
jne
mov
mov
ret
push
mov
add
push
push
push
mov
mov
test
je
mov
mov
mov
xor
push
push
pushl
mov
test
jle
dec
mov
mov
mov
mov
cmpl
je
call
test
jg
xor
pop
pop
pop
mov
jmp
jmp
call
call
call
pop
pop
pop
pop
pop
pop
ret
push
mov
add
push
push
push
mov
mov
test
je
mov
xor
mov
mov
xor
push
push
pushl
mov
cmp
jle
mov
mov
mov
inc
mov
cmpl
je
call
cmp
jg
xor
pop
pop
pop
mov
jmp
jmp
call
call
call
pop
pop
pop
pop
pop
pop
ret
movl
movl
mov
xor
mov
mov
mov
mov
call
movb
call
ret
push
xor
push
push
mov
lea
mov
mov
mov
add
call
add
dec
jne
pop
pop
pop
ret
lea
push
xor
push
push
mov
lea
mov
mov
mov
add
mov
add
dec
jne
pop
pop
pop
ret
push
push
push
mov
mov
mov
mov
mov
cltd
idiv
add
xor
mov
mov
mov
mov
cltd
idiv
mov
dec
test
jne
mov
mov
mov
and
mov
xor
mov
mov
shr
dec
test
jne
pop
pop
pop
ret
mov
xor
xchg
neg
sbb
inc
mov
mov
mov
pushl
pushl
mov
mov
rep
pop
pop
leave
ret
ret
mov
push
cmpb
je
cmpw
jne
cmpl
jbe
mov
call
push
lea
push
push
push
push
call
push
call
push
lea
push
push
push
push
call
push
call
pop
ret
cmpb
jne
push
push
push
push
call
pop
ret
add
incl
add
add
push
push
push
push
mov
mov
cmpb
jne
cmpl
je
mov
mov
xor
mov
call
cmpl
jne
cmpl
je
call
call
xor
mov
cmpb
jne
cmpl
jne
xor
mov
call
cmpb
jbe
cmpl
je
mov
test
je
mov
call
mov
mov
cmp
je
test
je
push
call
call
cmpb
jne
call
cmpb
je
call
cmpl
jne
cmpl
je
call
mov
push
call
mov
mov
mov
mov
rep
jmp
pop
pop
pop
pop
pop
ret
mov
call
ret
nop
popl
jmp
ret
mov
test
je
movl
mov
dec
jl
lock
jne
push
lea
call
pop
ret
nop
push
push
mov
mov
mov
test
je
movl
mov
dec
jl
lock
jne
lea
call
add
dec
jne
pop
pop
ret
nop
test
je
mov
inc
jg
push
push
mov
call
mov
pop
push
mov
call
pop
pop
jmp
lock
xchg
test
je
mov
dec
jl
lock
jne
lea
call
ret
nop
test
je
mov
inc
jle
lock
xchg
test
je
mov
dec
jl
lock
jne
lea
call
ret
lea
test
jle
push
add
and
push
call
pop
movw
add
pop
mov
movl
ret
xor
ret
nop
push
push
push
mov
mov
mov
mov
call
mov
mov
test
je
mov
mov
call
mov
call
mov
pop
pop
pop
ret
mov
push
mov
push
push
push
push
mov
push
push
push
mov
push
call
pop
ret
nop
push
push
push
push
add
push
add
mov
mov
mov
test
jg
mov
call
jmp
lea
cmp
jge
push
lea
mov
mov
call
mov
test
jl
lea
mov
mov
call
jmp
mov
add
mov
mov
call
push
mov
mov
mov
call
mov
test
jge
xor
mov
mov
call
add
pop
pop
pop
pop
ret
push
mov
mov
call
pop
ret
nop
xor
test
je
push
cmp
je
cmp
je
cmp
je
cmp
je
add
jmp
inc
inc
inc
mov
pop
sub
jmp
ret
lea
xor
test
je
push
cmp
je
cmp
je
cmp
je
cmp
je
add
jmp
add
add
add
mov
pop
sub
shr
jmp
ret
lea
push
push
push
mov
xor
repnz
jne
not
pop
add
pop
pop
jmp
ret
xor
test
je
mov
shr
jmp
ret
lea
test
je
mov
ret
test
je
mov
test
je
push
push
push
mov
mov
mov
mov
add
cmp
je
call
mov
mov
mov
add
call
pop
pop
pop
ret
call
mov
mov
jmp
ret
push
push
push
push
push
mov
xor
mov
test
je
cmp
jne
mov
mov
dec
jmp
xor
mov
test
je
add
cmp
jne
xor
dec
jne
test
je
mov
mov
mov
call
mov
pushl
add
dec
jmp
call
push
mov
mov
mov
test
je
mov
add
call
dec
jne
pop
pop
test
jne
test
je
decl
call
pop
pop
pop
pop
pop
lea
jmp
ret
mov
test
je
ret
add
ret
mov
test
je
mov
dec
je
push
mov
mov
call
mov
mov
mov
push
mov
call
pop
mov
dec
jl
lock
jne
lea
call
mov
pop
mov
ret
lea
jmp
ret
mov
push
test
je
mov
test
je
dec
jl
cmp
jge
sub
test
jl
cmp
jg
add
mov
call
jmp
xor
jmp
mov
jmp
mov
call
pop
ret
ret
push
push
push
mov
mov
xor
test
jle
mov
test
je
cmpl
jne
sub
add
push
mov
call
pop
add
mov
mov
movb
jmp
mov
call
mov
mov
test
je
mov
mov
cmp
jl
mov
call
mov
call
mov
pop
pop
pop
ret
mov
mov
test
je
movl
push
push
call
pop
ret
lea
push
push
mov
mov
mov
test
je
movl
push
call
add
dec
jne
pop
pop
ret
lea
xor
push
mov
push
push
mov
lea
mov
mov
mov
add
mov
mov
call
add
dec
jg
mov
pop
pop
pop
ret
lea
cmpl
je
call
ret
mov
call
ret
cmp
je
push
push
push
push
mov
mov
mov
xor
mov
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
jmp
cmp
mov
jg
call
jmp
mov
call
jmp
cmp
mov
jg
call
jmp
mov
call
jmp
mov
add
call
dec
jg
jmp
push
mov
mov
mov
add
mov
mov
call
dec
jg
pop
jmp
push
mov
mov
add
mov
call
dec
jg
pop
jmp
mov
add
call
dec
jg
jmp
mov
mov
add
call
dec
jg
jmp
pop
pop
pop
pop
mov
jmp
pop
pop
pop
pop
ret
mov
mov
jmp
ret
push
push
mov
mull
mov
mov
mull
add
mov
mull
add
pop
pop
ret
ret
mov
test
je
movl
lock
jne
push
mov
xor
mov
mov
test
je
mov
test
je
mov
call
sub
call
pop
ret
mov
push
push
add
mov
cmpl
jne
push
lea
push
mov
push
call
mov
mov
call
mov
mov
test
jne
mov
mov
mov
add
pop
pop
ret
nop
push
push
push
push
mov
mov
mov
mov
cmpl
je
mov
cmp
je
mov
cmp
je
mov
cmp
jne
mov
call
mov
jmp
mov
mov
mov
cmpl
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
push
push
push
lea
mov
jmp
mov
push
call
mov
mov
mov
test
je
cmp
jne
mov
pop
pop
pop
pop
ret
nop
push
mov
add
push
push
push
mov
mov
mov
mov
push
call
mov
test
je
push
push
call
mov
cmpl
je
push
lea
push
mov
push
call
test
je
mov
push
lea
push
mov
push
call
jmp
mov
cmpb
jne
mov
cmpb
jne
mov
add
call
mov
mov
cmpb
je
mov
inc
call
mov
mov
cmpb
je
jmp
mov
add
mov
mov
sub
lea
push
mov
push
lea
push
call
jmp
mov
inc
call
mov
mov
sub
mov
add
inc
cmp
jg
inc
push
mov
push
lea
add
push
call
lea
push
lea
push
call
mov
cmp
je
push
call
lea
push
call
lea
add
inc
cmp
jg
movb
mov
sub
dec
push
lea
push
lea
add
inc
push
call
lea
push
call
inc
add
mov
mov
mov
cmpb
jne
mov
push
lea
push
mov
push
call
mov
pop
pop
pop
mov
pop
ret
add
imul
gs
xor
cs
insb
add
add
inc
gs
outsl
outsb
addr16
popa
je
dec
popa
insl
gs
add
add
push
mov
add
push
mov
push
lea
push
push
call
movb
lea
push
push
push
push
push
call
test
je
lea
push
push
push
push
push
call
test
je
lea
push
push
push
push
push
call
test
jne
xor
push
push
pushl
mov
movl
lea
mov
call
lea
push
lea
push
push
push
lea
push
mov
push
call
test
je
lea
push
lea
push
push
push
push
mov
push
call
test
je
movb
movb
xor
pop
pop
pop
mov
push
mov
push
call
ret
jmp
jmp
push
mov
push
lea
push
call
push
lea
push
push
call
push
call
xor
cmpb
je
cmpb
jne
cmpb
je
lea
push
call
lea
add
mov
jmp
decl
mov
cmpb
je
lea
cmp
jne
lea
cmp
je
incl
cmpb
je
mov
sub
mov
sub
push
lea
push
mov
push
call
push
push
lea
push
call
mov
test
jne
cmpb
je
lea
mov
sub
mov
sub
push
lea
push
mov
push
call
push
push
lea
push
call
mov
test
jne
movb
lea
mov
sub
mov
sub
push
lea
push
mov
push
call
push
push
lea
push
call
mov
mov
pop
mov
pop
ret
add
push
outsl
data16
popa
jb
pop
inc
outsl
jb
popa
outsb
fs
dec
outsl
arpl
gs
add
add
data16
popa
jb
pop
inc
outsl
jb
popa
outsb
fs
inc
gs
jo
imul
jae
add
add
push
mov
add
push
push
push
mov
mov
mov
cmpl
je
xor
push
push
pushl
mov
mov
mov
call
xor
pop
pop
pop
mov
jmp
jmp
call
mov
mov
mov
cmpl
jne
pop
pop
pop
pop
pop
pop
ret
mov
mov
mov
mov
ret
mov
push
mov
add
mov
xor
push
push
pushl
mov
mov
mov
call
xor
pop
pop
pop
mov
push
mov
cmp
jne
mov
mov
mov
jmp
mov
mov
cmpl
je
mov
mov
cmp
jne
mov
mov
mov
mov
jmp
mov
mov
mov
cmpl
jne
ret
jmp
jmp
pop
pop
pop
ret
mov
test
je
movl
push
push
mov
call
pop
ret
lea
push
push
add
push
mov
mov
test
je
cmpl
jge
push
lea
push
mov
push
mov
mov
call
push
call
mov
mov
mov
call
jmp
mov
mov
call
add
pop
pop
ret
nop
push
mov
add
push
xor
mov
xor
push
push
pushl
mov
push
lea
push
push
push
call
lea
lea
mov
call
mov
lea
call
mov
cmpl
je
xor
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
mov
pop
ret
push
mov
xor
push
push
pushl
mov
incl
jne
mov
call
mov
call
mov
call
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
nop
subl
jae
movb
movl
movl
movb
movl
call
test
je
call
call
movw
movw
movw
call
mov
call
mov
call
and
cmp
je
call
and
cmp
jbe
movl
jmp
call
call
mov
jmp
call
call
mov
call
mov
ret
nop
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
push
call
ret
lea
mov
ret
mov
push
call
mov
test
je
cmpl
jne
mov
call
mov
call
test
jne
mov
call
jmp
push
mov
push
call
pop
ret
mov
mov
test
jne
mov
mov
ret
call
mov
push
call
test
je
ret
mov
ret
push
call
test
je
ret
mov
call
ret
nop
push
mov
xor
mov
push
call
mov
mov
mov
xor
mov
xor
mov
call
mov
mov
call
pop
ret
lea
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
pusha
cmpsb
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
cmpsb
inc
add
cmpsb
inc
add
cmpsb
inc
add
cmpsb
inc
add
inc
add
cmpsb
inc
add
cmpsb
inc
add
cmpsb
inc
add
cmpsb
inc
add
cmpsb
inc
add
cmpsb
inc
add
cmpsb
inc
add
inc
add
cmpsb
inc
add
cmpsb
inc
add
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
dec
inc
add
add
inc
add
add
or
inc
add
xor
aam
inc
add
xor
fdivl
inc
add
xor
xchg
das
inc
add
das
inc
add
add
add
add
add
add
adc
add
add
or
arpl
je
outsl
outsb
mov
add
add
add
or
add
xor
aam
inc
add
xor
fdivl
inc
add
xor
xchg
das
inc
add
insl
inc
add
das
inc
add
inc
dec
gs
jo
js
gs
imul
add
dec
inc
add
add
add
inc
add
xor
aam
inc
add
xor
fdivl
inc
add
xor
xchg
das
inc
add
insl
inc
add
das
inc
add
dec
gs
outsl
jb
lea
je
inc
add
add
add
add
dec
inc
add
xor
aam
inc
add
xor
fdivl
inc
add
xor
xchg
das
inc
add
das
inc
add
inc
dec
outsb
dec
jne
inc
jb
outsl
jb
dec
inc
add
dec
inc
add
add
add
dec
inc
add
xor
aam
inc
add
xor
fdivl
inc
add
xor
xchg
das
inc
add
das
inc
add
inc
inc
js
gs
popa
insb
mov
and
inc
add
inc
add
add
add
xor
aam
inc
add
xor
fdivl
inc
add
xor
xchg
das
inc
add
das
inc
add
inc
inc
js
gs
popa
insb
inc
js
gs
imul
add
add
orb
enter
aam
inc
add
xor
fdivl
inc
add
xor
xchg
das
inc
add
das
inc
add
inc
dec
outsb
je
jb
outsl
jb
rcr
inc
add
dec
inc
add
add
add
dec
inc
add
xor
aam
inc
add
xor
fdivl
inc
add
xor
xchg
das
inc
add
das
inc
add
inc
inc
imul
outsl
nop
xor
inc
add
inc
add
add
add
dec
inc
add
xor
aam
inc
add
xor
fdivl
inc
add
xor
xchg
das
inc
add
das
inc
add
inc
push
popa
outsb
addr16
jb
outsl
jb
push
inc
add
add
cmp
add
xor
aam
inc
add
xor
fdivl
inc
add
xor
xchg
das
inc
add
das
inc
add
jbe
jb
insb
outsl
ja
inc
add
push
inc
add
push
inc
add
add
add
xor
aam
inc
add
xor
fdivl
inc
add
xor
xchg
das
inc
add
das
inc
add
inc
dec
popa
je
inc
jb
outsl
jb
inc
push
inc
add
inc
add
add
add
inc
add
xor
fdivs
inc
add
xor
shlb
inc
add
inc
add
das
inc
add
inc
dec
outsb
jbe
insb
imul
add
add
add
inc
add
xor
fdivs
inc
add
xor
shlb
inc
add
inc
add
das
inc
add
inc
pop
gs
inc
imul
inc
add
push
inc
add
add
add
inc
add
xor
fdivs
inc
add
xor
shlb
inc
add
inc
add
das
inc
add
inc
dec
jbe
jb
insb
outsl
ja
rorb
add
inc
add
add
add
inc
add
xor
fdivs
inc
add
xor
shlb
inc
add
inc
add
das
inc
add
inc
push
outsb
fs
insb
outsl
ja
mov
add
add
add
add
inc
add
xor
aam
inc
add
xor
fdivl
inc
add
xor
xchg
das
inc
add
insl
inc
add
das
inc
add
inc
dec
outsb
jbe
insb
imul
jb
push
inc
add
push
inc
add
add
or
add
xor
aam
inc
add
xor
fdivl
inc
add
xor
xchg
das
inc
add
das
inc
add
insb
imul
add
inc
add
inc
add
add
or
add
xor
aam
inc
add
xor
fdivl
inc
add
xor
xchg
das
inc
add
das
inc
add
jbe
jb
inc
jb
outsl
jb
shlb
add
add
orb
enter
aam
inc
add
xor
fdivl
inc
add
xor
xchg
das
inc
add
das
inc
add
inc
inc
arpl
jae
push
imul
outsb
lea
adc
inc
add
inc
add
add
add
xor
aam
inc
add
xor
fdivl
inc
add
xor
xchg
das
inc
add
das
inc
add
inc
push
jb
jbe
insb
gs
insb
push
inc
add
add
add
add
xor
aam
inc
add
xor
fdivl
inc
add
xor
xchg
das
inc
add
das
inc
add
inc
push
je
arpl
jbe
jb
insb
outsl
ja
enter
enter
adc
add
orb
enter
aam
inc
add
xor
fdivl
inc
add
xor
xchg
das
inc
add
das
inc
add
inc
inc
outsl
outsb
je
outsl
insb
inc
mov
and
add
push
inc
add
add
or
add
xor
aam
inc
add
xor
fdivl
inc
add
xor
xchg
das
inc
add
das
inc
add
imul
outsl
jb
sarb
jl
inc
add
add
or
add
xor
aam
inc
add
xor
fdivl
inc
add
xor
xchg
das
inc
add
das
inc
add
inc
inc
jae
gs
imul
gs
fcoml
add
push
inc
add
add
or
add
xor
aam
inc
add
xor
fdivl
inc
add
xor
xchg
das
inc
add
das
inc
add
inc
inc
bound
jb
arpl
jb
jb
cmp
add
push
inc
add
add
or
add
xor
aam
inc
add
xor
fdivl
inc
add
xor
xchg
das
inc
add
das
inc
add
inc
dec
outsb
je
inc
popa
jae
inc
jb
outsl
jb
xchg
push
inc
add
add
or
add
xor
aam
inc
add
xor
fdivl
inc
add
xor
xchg
das
inc
add
das
inc
add
inc
push
popa
data16
insb
inc
js
gs
imul
add
add
aaa
xor
add
add
adc
dec
add
add
adc
or
jae
je
insb
jae
rcl
inc
add
add
cmp
add
add
adc
dec
add
add
adc
or
jae
je
insb
jae
sar
incl
add
add
add
push
push
push
mov
mov
mov
push
push
mov
mov
mov
call
call
pop
pop
pop
ret
mov
or
jne
or
jns
neg
call
mov
inc
dec
mov
ret
mov
push
push
xor
div
dec
add
cmp
jb
add
mov
or
jne
pop
pop
sub
sub
jbe
add
mov
sub
jmp
mov
dec
jne
mov
ret
or
jne
mov
testl
je
pushl
pushl
mov
negl
adcl
negl
call
movb
dec
inc
add
ret
push
sub
fnstcw
fnstcw
orw
fldcw
mov
fld1
testl
je
pushl
pushl
andl
push
push
fildll
fildll
fadd
faddp
add
jmp
fildll
filds
fld
dec
fprem
fistps
fdivr
mov
add
cmp
jb
add
mov
fld
fcom
fstsw
sahf
jae
fldcw
add
ffree
ffree
ffree
ffree
pop
sub
sub
jbe
sub
mov
add
jmp
mov
dec
jne
mov
ret
nop
push
push
mov
mov
call
cmpl
je
mov
pop
pop
ret
mov
incl
add
add
add
add
incl
add
add
push
push
push
mov
mov
mov
call
mov
mov
call
mov
test
jle
mov
test
je
mov
mov
call
test
je
mov
mov
call
cmp
jne
dec
dec
test
jg
mov
pop
pop
pop
pop
ret
nop
push
push
push
mov
mov
mov
mov
call
mov
push
lea
mov
mov
call
pop
pop
pop
ret
add
add
incl
add
add
add
in
add
push
mov
test
je
mov
jmp
xor
mov
lea
push
lea
push
lea
push
lea
push
mov
push
call
mov
mov
imull
xor
mov
mov
mov
xor
push
push
mov
mov
call
mov
mov
mov
mov
xor
push
push
mov
mov
call
mov
mov
mov
mov
pop
mov
pop
ret
mov
mov
mov
mov
xor
repnz
mov
sub
mov
ret
nop
push
mov
xchg
call
mov
pop
ret
nop
push
push
push
mov
mov
mov
xor
test
je
repnz
jne
inc
sub
mov
mov
mov
mov
shr
rep
mov
and
rep
stos
mov
pop
pop
pop
ret
lea
push
push
push
mov
mov
mov
xor
or
je
repnz
sub
mov
mov
xor
repz
je
mov
cmp
jb
cmp
ja
sub
mov
cmp
jb
cmp
ja
sub
sub
je
pop
pop
pop
ret
mov
push
mov
mov
jmp
test
jne
xor
mov
jmp
incl
mov
mov
cmp
jne
mov
pop
ret
nop
push
push
push
add
mov
mov
mov
cmp
jbe
mov
mov
dec
mov
call
cmp
jne
dec
mov
mov
mov
call
movb
mov
mov
movb
lea
mov
xor
call
add
pop
pop
pop
ret
push
mov
cmpl
je
mov
mov
call
pop
ret
mov
call
pop
ret
lea
push
mov
mov
call
pop
ret
push
mov
add
push
xor
mov
push
push
push
mov
mov
xor
mov
add
mov
xor
mov
mov
mov
or
je
cmp
je
lods
cmp
je
stos
dec
jne
mov
sub
jmp
cmp
je
lods
cmp
je
lea
mov
mov
cmp
jne
cmp
je
lods
call
cmp
jne
mov
cmp
je
lods
jmp
mov
mov
cmp
jne
cmp
je
lods
call
mov
mov
push
push
call
pop
mov
sub
jae
xor
cmpb
jne
sub
jae
add
xor
rep
xchg
sub
jae
add
xor
mov
rep
xchg
sub
jae
add
xor
rep
cmpl
je
push
lea
call
pop
pop
mov
jmp
xor
cmp
je
cmp
jb
cmp
ja
imul
sub
movzbl
add
cmp
je
lods
jmp
pop
jmp
mov
cmp
jg
incl
mov
cmpb
mov
je
xor
cmp
je
lods
ret
and
mov
mov
mov
cmp
jg
incl
mov
lea
mov
movzbl
jmp
lcall
add
pop
inc
add
pop
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
pop
inc
add
inc
add
pop
inc
add
add
shr
add
add
fsubrs
rorl
std
decl
faddl
xor
mov
sub
je
mov
cmp
je
mov
cmp
je
jmp
lea
mov
mov
cmp
jbe
xor
sub
je
mov
cmp
je
mov
cmp
je
jmp
cmp
jne
mov
ret
cmp
jne
cmpw
jbe
mov
lea
call
mov
jmp
xor
ret
cmp
jne
mov
lods
movzbl
jmp
mov
jmp
mov
add
cmp
jne
mov
lea
push
mov
call
pop
mov
mov
jmp
cmp
jne
mov
or
je
mov
cmp
ja
ret
mov
ret
cmp
jne
mov
push
mov
xor
mov
jecxz
repnz
jne
dec
mov
sub
pop
ret
cmp
jne
mov
mov
lea
jmp
mov
jmp
mov
mov
mov
cmp
je
mov
cmp
je
mov
cmp
je
mov
cmp
je
cmp
jne
mov
mov
mov
cmp
jbe
mov
cmp
jne
movzbl
jmp
mov
mov
cmp
jbe
mov
push
push
push
lea
mov
movzbl
mov
call
mov
lea
ret
push
push
lea
mov
call
pop
pop
ret
call
pop
pop
pop
pop
mov
pop
ret
mov
push
mov
push
push
push
push
mov
mov
mov
test
je
test
je
mov
call
push
mov
push
mov
push
mov
mov
mov
call
movb
mov
jmp
xor
mov
mov
pop
pop
pop
pop
pop
ret
lea
push
mov
push
mov
xchg
xchg
call
pop
ret
nop
push
mov
add
push
add
push
push
push
mov
mov
mov
mov
mov
call
cmp
jge
mov
call
push
mov
push
mov
push
mov
lea
mov
call
mov
jmp
mov
call
mov
mov
mov
dec
cmp
jl
jmp
add
mov
call
mov
mov
call
mov
call
push
mov
push
mov
push
mov
mov
dec
mov
call
mov
mov
dec
cmp
jge
mov
mov
call
jmp
lea
mov
mov
call
pop
pop
pop
mov
pop
ret
lea
push
xor
stos
or
jne
xor
jmp
or
jge
mov
neg
jmp
or
je
mov
stos
xchg
push
mov
xor
divl
add
mov
inc
dec
or
jne
or
jg
dec
mov
stos
cmp
jne
pop
pop
ret
nop
push
mov
add
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
cmp
jne
mov
cmp
jge
mov
cmp
jle
mov
mov
push
mov
cmpb
jb
mov
push
lea
call
mov
movzwl
sub
cmp
jae
mov
call
lea
add
mov
rep
jmp
lea
movzbl
cmp
je
cmp
ja
movswl
cmp
jle
mov
lea
add
mov
add
call
mov
sub
pop
pop
pop
jmp
movsl
pusha
inc
add
popa
inc
add
popa
inc
add
popa
inc
add
dec
inc
dec
inc
dec
lods
or
jne
mov
dec
ret
cmpb
je
mov
stos
ret
call
movswl
xor
cmp
jg
cmp
jl
or
jg
mov
stos
cmpb
je
mov
stos
neg
mov
rep
jmp
mov
inc
lods
or
je
stos
loop
lods
or
je
mov
mov
stos
lods
or
je
stos
jmp
mov
rep
or
je
xor
jmp
ret
call
call
mov
stos
mov
dec
call
stos
loop
mov
mov
cmp
jbe
xor
mov
mov
movswl
dec
call
ret
call
mov
cmp
jb
mov
movswl
or
jg
mov
stos
jmp
xor
cmpb
je
mov
dec
mov
div
mov
inc
call
stos
dec
je
dec
jne
mov
test
je
stos
mov
jmp
or
je
mov
test
je
stos
jecxz
mov
stos
dec
je
inc
jne
call
stos
dec
jne
ret
xor
mov
mov
cmpb
je
mov
mov
cmp
jbe
mov
add
lea
add
mov
mov
cmp
je
push
push
cmp
je
cmp
je
stos
jmp
call
jmp
call
pop
pop
inc
loop
ret
push
mov
test
je
mov
rep
pop
ret
and
inc
inc
inc
sub
inc
inc
and
sub
sub
and
inc
sub
sub
and
inc
inc
and
sub
and
sub
and
inc
sub
sub
and
inc
inc
sub
sub
sub
and
inc
and
sub
sub
sub
and
sub
sub
and
mov
pop
ret
nop
push
mov
add
push
push
push
mov
mov
movl
cmp
je
call
jmp
call
jmp
mov
mov
and
je
cmp
jne
testw
je
cmpl
jne
cmpl
je
inc
xor
movb
jmp
fldt
sub
imul
sar
inc
mov
mov
sub
fabs
push
mov
call
pop
frndint
mov
fldt
fcomp
fstsw
fwait
testw
je
fidivl
incl
fbstp
lea
mov
fwait
mov
mov
shr
and
add
stos
dec
jne
xor
stos
mov
add
jns
xor
jmp
cmp
jb
mov
cmp
jae
cmpb
jb
movb
dec
js
incb
cmpb
ja
jmp
movw
incl
jmp
mov
movb
dec
js
cmpb
je
mov
mov
shr
mov
mov
ret
xor
jmp
or
add
add
add
add
add
daa
add
mov
mov
mov
or
je
or
jns
neg
neg
sbb
xor
mov
or
jge
xor
cmp
jl
mov
inc
sub
sbb
jae
dec
add
adc
mov
mov
fildll
mov
mov
sub
je
mov
fidivl
fbstp
lea
fwait
or
jne
mov
mov
mov
shr
jne
mov
and
jne
dec
jne
jmp
mov
add
stos
mov
mov
mov
shr
add
stos
mov
and
add
stos
dec
jne
mov
lea
sub
movb
dec
cmpb
je
mov
shr
jmp
xor
xor
mov
mov
mov
ret
pop
pop
pop
mov
pop
ret
push
mov
add
push
push
mov
mov
push
lea
push
push
push
call
test
jle
mov
dec
lea
mov
call
jmp
mov
mov
call
pop
pop
mov
pop
ret
mov
push
push
push
push
mov
mov
mov
push
lea
push
push
push
call
test
jle
mov
jmp
mov
pop
pop
pop
pop
ret
push
mov
push
push
push
push
mov
mov
mov
mov
push
mov
mov
xor
mov
call
cmpl
jne
mov
mov
mov
call
pop
pop
pop
pop
pop
ret
nop
push
mov
xor
push
push
push
push
push
push
push
push
push
xor
push
push
pushl
mov
call
mov
mov
mov
mov
push
push
lea
push
mov
mov
dec
lea
dec
call
pop
mov
mov
call
push
push
lea
push
mov
mov
dec
lea
dec
call
pop
mov
mov
call
inc
add
add
cmp
jne
mov
mov
mov
lea
mov
cltd
idiv
mov
push
push
lea
push
mov
mov
dec
mov
add
call
pop
mov
mov
call
push
push
lea
push
mov
mov
dec
mov
add
call
pop
mov
mov
call
inc
add
add
cmp
jne
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
lea
push
mov
push
push
xor
mov
jmp
cmp
je
inc
cmpl
jne
lea
mov
call
mov
mov
pop
pop
pop
ret
mov
push
mov
push
push
push
xor
push
push
pushl
mov
xor
mov
jmp
cmp
je
inc
cmpl
jne
lea
mov
call
mov
xor
call
mov
mov
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
pop
ret
lea
push
mov
push
push
xor
push
push
pushl
mov
lea
push
call
mov
mov
call
mov
mov
call
mov
mov
add
sub
jae
push
push
call
push
push
call
mov
mov
movl
add
dec
jne
push
push
call
push
push
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
ret
add
incl
add
add
add
add
in
xor
push
push
push
push
push
push
push
push
mov
mov
xor
push
push
pushl
mov
mov
mov
call
lea
push
call
mov
mov
call
mov
mov
call
add
sub
jb
mov
sub
je
add
sub
jb
xor
jmp
mov
test
je
jmp
mov
sub
je
sub
je
lea
mov
call
mov
mov
call
inc
mov
call
cmp
jle
jmp
mov
mov
call
jmp
mov
and
bt
jae
mov
mov
call
mov
lea
push
mov
mov
mov
call
mov
mov
call
add
jmp
mov
lea
mov
call
test
jne
mov
mov
call
inc
jmp
mov
lea
mov
call
test
jne
mov
mov
call
add
jmp
mov
lea
mov
call
test
jne
mov
mov
call
inc
jmp
mov
sub
je
sub
jne
mov
mov
call
jmp
lea
mov
call
mov
mov
call
inc
mov
call
cmp
jle
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
incl
add
add
add
add
add
incl
add
add
add
jns
add
add
incl
add
gs
add
jns
add
incl
add
add
add
incl
add
add
add
test
je
sub
ret
mov
push
mov
add
push
push
push
mov
mov
mov
push
lea
push
push
call
cmpl
jne
push
lea
push
mov
push
call
test
jne
push
lea
push
mov
push
call
mov
call
mov
jmp
sub
mov
lea
mov
call
mov
inc
lea
mov
call
mov
mov
mov
mov
mov
mov
call
test
je
mov
call
mov
mov
call
test
je
mov
cmpb
je
mov
mov
push
lea
push
mov
mov
push
mov
call
push
call
lea
mov
call
lea
mov
movb
lea
mov
movb
mov
mov
movb
mov
mov
movb
mov
mov
movb
lea
push
push
lea
mov
mov
call
mov
call
pop
pop
pop
mov
pop
ret
add
add
add
add
ljmp
add
add
push
jmp
cmpb
je
mov
call
call
lea
push
lea
push
call
push
lea
push
lea
call
push
lea
push
push
call
push
call
push
lea
push
push
push
push
call
push
call
jmp
push
lea
push
mov
mov
push
mov
call
push
call
push
lea
push
lea
push
push
call
add
ret
add
add
incl
add
add
push
push
test
je
add
call
mov
mov
mov
lea
mov
call
mov
test
je
call
popl
add
mov
pop
pop
pop
ret
mov
push
mov
push
push
push
push
test
je
add
call
mov
mov
mov
xor
push
push
pushl
mov
lea
push
mov
mov
mov
call
mov
lea
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
test
je
call
popl
add
mov
pop
pop
pop
pop
pop
ret
push
push
push
test
je
add
call
mov
mov
mov
lea
mov
call
mov
test
je
call
popl
add
mov
pop
pop
pop
ret
mov
push
mov
push
push
push
push
push
test
je
add
call
mov
mov
mov
xor
push
push
pushl
mov
lea
push
lea
mov
call
mov
mov
mov
call
mov
lea
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
test
je
call
popl
add
mov
pop
pop
pop
pop
pop
pop
ret
nop
cmpb
je
call
ret
add
inc
add
or
jb
jb
arpl
add
add
add
add
adc
add
add
nop
push
push
add
xor
call
mov
jmp
inc
cmp
jg
cmp
jne
cmp
jg
mov
mov
mov
call
jmp
mov
movb
push
push
mov
mov
mov
call
mov
pop
pop
pop
pop
ret
mov
test
add
or
arpl
je
arpl
add
add
add
add
adc
add
add
push
mov
mov
dec
je
dec
je
dec
sub
jb
jmp
mov
jmp
mov
jmp
and
lea
mov
mov
mov
call
mov
jmp
call
mov
push
mov
jmp
pop
ret
mov
push
mov
add
push
push
push
xor
mov
mov
mov
mov
mov
xor
push
push
pushl
mov
test
je
lea
mov
call
jmp
lea
mov
call
mov
mov
movb
mov
movb
mov
movb
lea
push
push
lea
mov
call
mov
mov
mov
call
mov
xor
pop
pop
pop
mov
push
lea
call
lea
call
ret
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
mov
mov
mov
jmp
ret
mov
push
mov
call
lea
add
mov
call
pop
ret
mov
mov
mov
mov
call
call
ret
mov
cmp
jg
je
cmp
jg
je
sub
je
sub
je
dec
je
jmp
add
sub
jb
je
jmp
cmp
jg
je
sub
je
dec
je
dec
je
jmp
sub
je
sub
je
jmp
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
nop
push
mov
mov
call
and
mov
pop
ret
push
mov
add
push
xor
mov
mov
mov
mov
mov
xor
push
push
pushl
mov
mov
mov
cmpl
jne
lea
mov
call
jmp
lea
mov
call
mov
mov
push
lea
push
mov
push
call
cmpl
jne
push
lea
push
mov
push
call
test
je
mov
mov
movb
lea
lea
mov
call
mov
lea
call
mov
mov
movb
mov
mov
movb
mov
mov
movb
lea
push
push
lea
mov
call
mov
mov
mov
call
mov
jmp
mov
mov
movb
mov
mov
movb
mov
mov
movb
lea
push
push
lea
mov
call
mov
mov
mov
call
mov
xor
pop
pop
pop
mov
push
lea
call
lea
mov
call
lea
call
ret
jmp
jmp
mov
pop
mov
pop
ret
lea
push
mov
add
push
xor
mov
mov
xor
push
push
pushl
mov
mov
call
and
mov
add
sub
jb
je
dec
sub
jae
lea
mov
mov
mov
call
mov
jmp
push
call
pop
mov
jmp
mov
mov
mov
movb
lea
push
push
lea
mov
call
mov
mov
mov
call
mov
mov
mov
call
test
je
mov
mov
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
mov
pop
ret
lea
call
mov
call
ret
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
movl
mov
movl
mov
mov
mov
mov
movl
mov
movl
mov
mov
mov
mov
mov
mov
ret
mov
cmpl
je
mov
movb
mov
mov
call
xor
mov
cmpl
je
mov
movb
mov
call
xor
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
ret
lea
add
movl
push
call
test
je
mov
mov
mov
mov
mov
mov
cmpl
jne
mov
and
mov
jmp
mov
mov
mov
lea
mov
call
add
ret
mov
push
push
mov
xor
test
je
cmpb
je
test
jne
mov
and
bt
jae
mov
jmp
mov
dec
jmp
dec
test
jl
mov
and
bt
jb
mov
sub
and
jns
dec
or
inc
test
jne
mov
jmp
mov
and
bt
jae
mov
mov
pop
pop
ret
lea
push
push
mov
mov
xor
cmpb
je
mov
call
mov
dec
call
pop
pop
ret
nop
xor
cmpb
je
call
mov
mov
ret
lea
push
mov
cmpb
je
push
call
sub
pop
ret
mov
pop
ret
lea
push
push
mov
mov
mov
cmpb
je
mov
and
bt
jae
mov
call
add
dec
call
pop
pop
ret
lea
push
push
add
mov
mov
mov
mov
mov
call
mov
mov
mov
test
je
cmpl
je
mov
mov
incl
mov
mov
call
mov
cmpl
jne
mov
pop
pop
pop
pop
ret
nop
push
push
push
push
mov
mov
mov
mov
mov
call
mov
cmpl
je
mov
sub
mov
call
sub
jb
je
jmp
incl
incl
mov
mov
call
mov
cmpl
jne
mov
pop
pop
pop
pop
ret
push
mov
add
push
xor
mov
xor
push
push
pushl
mov
push
lea
push
push
push
call
lea
lea
mov
call
mov
push
call
mov
pop
call
mov
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
mov
pop
ret
mov
push
mov
push
push
push
push
mov
add
push
mov
call
push
call
xor
jmp
mov
mov
sub
jb
inc
mov
mov
and
bts
incb
dec
jne
add
cmp
jge
mov
or
jne
pop
pop
pop
pop
pop
ret
mov
cmp
ja
bt
setb
ret
lea
push
mov
add
push
push
push
movl
movl
movl
call
test
je
mov
test
je
mov
and
movzwl
mov
movzwl
shr
mov
mov
mov
mov
rep
cmpl
jne
call
test
je
movb
movb
jmp
push
call
pop
mov
mov
mov
call
setne
mov
test
je
movb
jmp
mov
lea
mov
inc
inc
cmp
jne
lea
mov
lea
push
push
mov
push
push
mov
push
call
mov
lea
cmpw
sete
mov
test
jne
add
dec
jne
jmp
push
call
test
setne
mov
push
call
test
setne
mov
test
je
push
call
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
push
push
dec
jne
push
xor
push
push
pushl
mov
call
call
cmpb
je
call
call
mov
lea
push
xor
mov
mov
call
mov
mov
call
lea
push
mov
mov
mov
call
mov
xor
call
mov
lea
push
mov
mov
mov
call
mov
xor
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
lea
push
mov
mov
mov
call
mov
xor
call
mov
mov
mov
mov
call
mov
lea
push
mov
mov
mov
call
mov
lea
call
mov
mov
call
lea
push
mov
mov
mov
call
mov
lea
call
mov
mov
call
mov
mov
mov
call
mov
lea
push
mov
mov
mov
call
mov
mov
call
lea
push
mov
mov
mov
call
mov
mov
call
lea
call
lea
call
lea
push
mov
mov
mov
call
mov
xor
call
test
jne
lea
mov
call
jmp
lea
mov
call
lea
push
mov
mov
mov
call
mov
xor
call
test
jne
lea
push
mov
mov
mov
call
mov
xor
call
test
jne
lea
mov
call
jmp
lea
mov
call
pushl
pushl
push
pushl
mov
mov
call
pushl
pushl
push
pushl
mov
mov
call
mov
mov
mov
call
mov
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
mov
pop
ret
add
incl
add
add
add
add
incl
add
add
fs
jns
add
decl
add
insl
insl
insl
insl
and
jns
jns
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
inc
dec
push
dec
add
add
incl
dec
push
dec
and
add
incl
add
add
insl
insl
add
incl
add
add
insl
insl
cmp
add
push
push
push
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
call
cmpl
jne
pop
pop
pop
ret
nop
push
push
call
mov
test
je
push
push
call
mov
cmpl
jne
mov
mov
pop
ret
add
imul
gs
xor
cs
insb
add
add
inc
gs
imul
push
jo
arpl
js
add
or
inc
mov
sbb
xchg
inc
add
xchg
inc
add
add
inc
add
xchg
inc
add
inc
add
xchg
inc
add
xchg
inc
add
inc
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
add
xchg
inc
add
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
add
add
xchg
inc
add
add
add
inc
add
add
add
xchg
inc
add
add
add
inc
add
add
add
xchg
inc
add
add
add
inc
add
add
add
xchg
inc
add
add
add
inc
add
add
add
xchg
inc
add
add
add
add
xchg
inc
add
add
add
inc
add
add
add
add
add
add
jo
inc
add
add
insb
xchg
inc
add
add
add
inc
add
inc
add
add
add
add
xchg
inc
add
add
add
inc
add
add
add
add
add
add
inc
add
add
add
add
add
xchg
inc
add
add
add
inc
add
inc
add
add
add
add
inc
add
add
add
inc
add
inc
add
add
add
add
xchg
inc
add
add
add
inc
add
add
cmp
inc
add
inc
add
add
add
xchg
inc
add
xchg
inc
add
add
add
inc
add
xchg
inc
add
add
add
xchg
inc
add
inc
add
add
add
inc
add
xchg
inc
add
add
add
xchg
inc
add
add
add
inc
add
add
add
xchg
inc
add
xchg
inc
add
add
add
inc
add
xchg
inc
add
add
add
xchg
inc
add
add
add
inc
add
xchg
inc
add
add
add
xchg
inc
add
add
add
add
inc
add
xchg
inc
add
add
add
nop
inc
add
xchg
inc
add
add
add
nop
inc
add
xchg
inc
add
add
add
in
xor
push
push
pushl
mov
incl
jne
mov
call
call
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
push
mov
xor
push
push
pushl
mov
subl
jae
mov
call
mov
call
cmpb
je
mov
mov
call
call
call
call
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
add
add
incl
add
add
js
add
pushl
or
add
adc
pop
sub
mov
lea
jecxz
xchg
in
cmp
push
inc
sbb
dec
test
pusha
adc
lahf
test
adc
insl
sub
ficomps
leave
dec
adc
add
jp
push
outsl
outsl
xor
jl
mov
fsubp
jg
std
pop
xor
and
aad
or
sbb
scas
cmp
cmp
dec
out
inc
sbb
mov
icebp
pop
pop
dec
xor
lods
loopne
pop
iret
orl
mov
cmpb
sbb
fwait
mov
in
push
mov
loopne
push
gs
mov
push
dec
mov
and
cmc
xor
xor
inc
loopne
or
dec
dec
mov
loopne
cmp
mov
sbb
inc
je
dec
and
push
xchg
imul
xchg
sti
and
addr16
test
ret
mov
pop
mov
push
jmp
dec
jmp
pop
adc
outsl
add
sahf
enter
cmp
push
add
jl
push
jnp
push
leave
insl
mov
jbe
les
inc
fiadds
xor
cwtl
mov
ds
push
sub
arpl
mov
cmc
xchg
adc
push
or
pop
xor
jae
roll
jbe
stos
cli
push
and
lods
mov
inc
xorl
nop
sahf
fisubrs
push
repnz
icebp
push
pop
test
cmc
inc
cmp
scas
mov
in
inc
popa
rorb
cld
outsl
xor
jne
xchg
lods
push
fnstcw
mull
test
lea
mov
aad
add
mov
out
add
out
or
pop
stos
sar
test
pop
mov
add
int3
repz
push
cmc
and
add
lds
dec
out
adc
inc
jmp
dec
enter
adc
pop
or
outsl
sbb
cmp
push
es
mov
leave
insl
test
cmp
mov
inc
inc
rorl
loopne
xor
add
xchg
jl
iret
sub
mov
faddl
jg
cli
adc
enter
insl
popf
mov
movsl
push
sbb
add
push
jg
fs
lcall
or
adc
hlt
dec
jo
push
sub
push
cmp
cmp
cwtl
jb
pushf
add
in
aas
loopne
inc
rorb
jo
cmpb
xchg
outsb
test
fdivl
mov
and
adc
sbbb
insb
fiaddl
mov
lods
mov
ljmp
pop
xor
dec
les
dec
push
xor
push
pop
inc
insl
add
cwtl
scas
xor
sub
mov
in
mov
jns
dec
xlat
outsl
cmpsb
arpl
jmp
fwait
ret
dec
repz
xchg
mov
pop
cmpsl
into
cmc
cmpl
mov
lock
test
negb
fiaddl
sub
dec
out
jmp
cmp
mov
dec
loopne
lds
xor
sbb
insb
or
jge
repnz
in
mov
lahf
pop
aam
mov
mov
jae
sarl
xlat
test
out
mov
mull
adc
mov
add
enter
pop
icebp
aaa
flds
daa
fimuls
ljmp
sti
and
scas
les
xor
xchg
mov
sbb
lcall
dec
push
nop
adc
mov
add
mov
rcll
add
mov
jp
pop
sub
std
mov
dec
jge
push
shll
sbb
cmp
add
std
or
adc
add
dec
and
push
test
sub
mov
dec
inc
cmp
adc
inc
rclb
test
outsb
and
inc
movsb
mov
adc
scas
dec
and
or
andb
lea
fdivs
push
jge
inc
lret
arpl
mov
push
in
lahf
jle
inc
rorl
ss
lcall
stos
sar
mov
jecxz
cwtl
popa
add
aam
ljmp
push
cmp
scas
daa
bound
movsl
push
adc
mov
push
sub
pop
xchg
cmp
jmp
stos
mov
xlat
mov
vpaddsb
sahf
inc
lahf
mov
adc
xchg
je
pop
subl
xchg
xchg
xchg
xor
shll
rorb
dec
sarb
mov
jno
mov
pop
das
lahf
jae
test
movsb
lret
cmp
push
js
iret
out
add
xchg
stc
shlb
in
xor
std
or
push
lods
mov
dec
xchg
les
or
mov
inc
test
shlb
sub
cltd
loopne
or
xchg
in
adc
lret
shll
bound
push
inc
mov
adc
xchg
mov
outsl
xchg
shrb
cmp
mov
ret
das
inc
jle
div
or
dec
xchg
mov
fstpl
jo
mov
inc
mov
insb
jbe
test
sbb
pop
outsb
mov
movb
jl
movsb
shll
add
mov
repnz
enter
lea
mov
neg
daa
outsl
inc
lahf
mov
dec
mov
out
or
jl
mov
push
mov
loopne
and
mov
iret
xor
scas
out
cmp
negl
jnp
scas
mov
sub
jbe
mov
sbb
jl
mov
inc
nop
std
incb
adc
or
push
mov
es
stos
mov
pop
andl
mov
sbb
cmpsl
test
or
inc
push
cmpsb
jecxz
and
push
mov
inc
inc
mov
lds
pop
pop
lea
test
stc
sbb
shl
inc
jg
xchg
cmp
jno
test
loop
push
push
xchg
mov
cmp
inc
pusha
test
jmp
cmp
mov
gs
pop
lea
dec
cmpsb
pop
cmp
xor
push
xchg
mov
jae
shr
cmp
icebp
xor
lock
fchs
das
jp
lods
test
add
insl
lcall
mov
dec
push
scas
out
in
push
jge
mov
and
lock
and
pop
popf
lods
fsubr
and
int
sbb
jno
test
ljmp
inc
push
mov
into
adc
je
mov
pop
lea
jge
int
adc
jge
sub
adc
mov
fdivs
push
ja
mov
inc
cmpsb
mov
pop
ss
test
xlat
iret
cmp
scas
cmpsl
out
or
clc
cli
das
add
adc
add
mov
loop
sbb
mov
into
in
adc
lods
cmc
testl
out
in
dec
jo
mov
push
es
dec
sahf
or
cltd
into
sub
jb
aad
adc
dec
fwait
cltd
ret
in
pop
jge
stos
out
sbb
addr16
jecxz
inc
inc
cmpl
mov
pop
subl
pop
flds
or
lret
bound
lock
add
movsb
into
ret
xchg
mov
xor
jmp
mov
inc
cmp
adc
lret
pop
push
scas
not
or
rorb
push
dec
popf
int
aas
add
cwtl
jmp
mov
je
imul
xor
sbbl
mov
jl
mov
imul
ret
and
push
cmp
cmp
adc
mov
rorl
or
mov
sti
add
dec
mov
out
and
xchg
hlt
add
insb
mov
ja
mov
repnz
es
mov
xlat
rclb
lock
jle
mov
lds
je
mov
jl
mov
dec
adcl
cmp
int
jl
lea
mov
pusha
xchg
gs
pop
stos
movsb
loope
das
dec
outsl
mov
sti
push
and
xchg
ret
jg
mov
sbb
ja
mov
mov
and
push
imul
xor
jb
lock
xor
or
push
xchg
xlat
cli
xor
orw
scas
lods
stc
cmp
dec
inc
fsubp
jg,pt
cmpsb
lahf
loop
push
inc
fs
divb
cmp
in
pop
cs
jg
in
flds
inc
mov
gs
test
xchg
mov
push
imul
adc
pop
xchg
mov
or
inc
mov
ret
sub
jmp
push
pop
ja
ror
cmp
cld
ljmp
cmp
into
and
loopne
adc
mov
jge
cmpsb
leave
ljmp
cmp
dec
mov
fmulp
aas
jg
lcall
nop
out
and
mov
dec
dec
cltd
aad
and
stos
popf
in
aaa
sbb
sarl
fwait
mov
insb
adcl
jg
mov
dec
mov
out
or
xchg
aas
sub
out
push
inc
mov
inc
dec
mov
js
test
aam
inc
jnp
mov
pop
add
push
jno
mov
push
lods
or
inc
lods
mov
pop
fwait
in
xlat
pop
push
stos
mov
aam
gs
test
push
mov
aad
and
jmp
mov
jmp
mov
push
mov
xor
push
push
pushl
mov
mov
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
or
add
or
inc
add
dec
inc
add
dec
inc
add
inc
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
add
rorb
in
add
push
push
push
mov
call
mov
mov
call
mov
test
jle
mov
mov
call
mov
movzbl
imul
xor
mov
inc
dec
jne
mov
call
mov
jmp
call
call
pop
pop
pop
call
add
add
add
add
xor
mov
add
inc
add
lea
adc
inc
add
inc
add
lret
int3
enter
enter
fcomp
fxch
loopne
jecxz
in
lea
inc
jb
outsl
jb
mov
push
jne
je
insl
and
jb
jb
and
and
popa
je
xor
xor
xor
xor
add
xor
inc
inc
inc
inc
inc
inc
incl
add
add
push
inc
add
add
add
inc
add
add
dec
inc
add
dec
inc
add
add
cmp
fidivrs
inc
mov
or
add
mov
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
fmull
add
add
add
inc
add
add
add
add
inc
push
inc
add
add
add
add
add
push
inc
add
add
add
inc
add
add
add
push
inc
add
add
add
add
adc
inc
add
add
add
push
inc
add
add
add
add
add
add
push
inc
add
add
add
push
inc
add
add
add
push
inc
add
add
add
push
inc
add
add
add
push
inc
add
add
add
push
inc
add
add
add
add
add
add
inc
add
add
add
push
inc
add
add
add
add
rcrl
and
add
add
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
dec
inc
add
mov
inc
add
dec
inc
add
mov
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
inc
add
dec
inc
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
inc
add
inc
add
dec
inc
add
inc
add
mov
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
mov
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
nop
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
call
mov
add
mov
add
add
add
pop
mov
add
mov
add
mov
add
mov
add
add
divb
add
dec
mov
add
mov
add
add
loopne
add
divb
add
es
add
mov
add
add
push
mov
add
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
inc
mov
add
add
push
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
mov
add
mov
add
mov
add
add
add
add
add
jb
add
xorb
sahf
mov
add
add
add
add
fdivs
add
add
add
mov
add
add
xor
add
inc
mov
add
add
push
add
jl
add
nop
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
add
add
add
js
add
add
add
imul
gs
xor
cs
insb
add
add
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
jbe
inc
jb
je
arpl
push
arpl
outsb
add
add
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
add
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
add
jb
jne
insb
inc
jb
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
add
popa
insb
inc
jb
add
add
popa
insb
inc
insb
insb
outsl
arpl
add
add
je
gs
imul
inc
gs
jne
jb
outsb
je
push
dec
add
add
push
imul
outsl
dec
jne
je
inc
jns
add
add
jb
outsb
inc
add
add
insb
jae
jb
jo
outsb
inc
add
add
fs
imul
js
add
add
inc
gs
push
dec
outsl
arpl
add
add
je
je
jb
jne
dec
outsb
outsw
inc
add
add
je
jb
arpl
fs
jae
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
fs
gs
imul
add
add
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
add
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
jb
gs
imul
add
inc
imul
je
imul
inc
imul
add
add
imul
jae
add
push
jb
je
inc
imul
push
gs
js
gs
imul
gs
add
add
insb
push
outsb
ja
outsb
add
add
imul
jo
imul
inc
gs
je
dec
popa
outsb
fs
add
jne
gs
xor
fs
insb
add
add
inc
gs
gs
outsl
popa
jb
push
jns
add
add
fs
je
imul
dec
gs
popa
addr16
outsl
js
add
add
popa
jb
gs
inc
add
jbe
jo
xor
cs
insb
add
add
push
gs
jne
jb
push
popa
insb
jne
inc
js
add
add
push
gs
jo
outsb
dec
gs
js
add
add
addr16
insb
outsl
jae
dec
gs
outsl
insb
gs
jne
xor
cs
insb
add
add
push
jns
inc
jb
gs
je
imul
outsb
gs
xor
cs
insb
add
add
push
insb
jae
gs
popa
insb
jne
add
add
inc
gs
popa
insb
jne
add
add
popa
insb
inc
insb
insb
outsl
arpl
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
imul
gs
xor
cs
insb
add
add
push
jb
je
inc
imul
jb
jne
insb
push
jne
jb
add
add
inc
gs
gs
imul
add
inc
gs
push
dec
outsl
arpl
add
add
je
je
imul
inc
js
add
add
inc
gs
je
dec
popa
outsb
fs
add
add
inc
gs
jb
arpl
fs
jae
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
fs
gs
imul
add
add
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
add
inc
gs
imul
push
jo
arpl
add
add
je
push
dec
outsb
outsw
add
add
je
inc
push
add
add
inc
outsb
jne
inc
popa
insb
outsb
fs
jb
outsb
outsw
inc
add
gs
xor
fs
insb
add
add
dec
gs
popa
addr16
outsl
js
add
add
fs
je
imul
inc
gs
jns
je
insl
dec
gs
imul
inc
push
js
inc
add
add
popa
jb
outsl
dec
gs
inc
add
arpl
fs
xor
cs
insb
add
add
inc
gs
popa
jbe
inc
imul
add
outsl
insb
xor
cs
insb
add
add
gs
jb
popa
je
dec
.byte
outsb
imul
add
inc
add
rolb
nop
inc
add
rolb
add
add
or
add
add
or
sub
cmp
cmp
inc
xor
xor
xor
xor
jb
jp
xorb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
outsb
xor
jle
xchg
mov
xchg
xor
xor
xor
xor
xor
xor
xor
add
shll
aaa
inc
aaa
out
aaa
bound
sahf
cmp
fidivrl
in
out
cmp
cmp
cmp
and
aaa
cmp
push
cmp
cmp
test
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
cmp
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xchg
ds
adc
sbb
aas
insb
aas
ja
cmpb
aas
xchg
aas
popf
aas
mov
add
add
add
xor
xor
xor
xor
jb
lea
xchg
xor
xor
xor
xor
dec
xor
mov
mov
xor
xor
xor
xor
xor
xor
dec
xor
xor
xchg
xor
xor
xor
xor
xor
or
sub
xor
xor
xor
xor
xor
xor
xor
xor
imul
xor
clc
xor
je
jl
test
mov
nop
ss
ss
movsb
ss
ss
js
cmpsb
aaa
les
shlb
fdivs
cmp
aas
cmp
jo
fwait
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
pop
cmp
cmp
cmp
cmp
and
ds
ds
adc
sub
aas
aas
jns
add
add
mov
xor
xchg
xor
xor
xor
xor
xor
xor
push
xor
xchg
xor
xor
xor
xor
cmp
inc
xor
scas
xor
xor
xor
outsl
xor
mov
in
in
xor
ds
ss
ss
add
or
or
adc
sbb
push
aaa
es
xor
mov
xchg
aaa
shlb
aaa
call
cmp
cmp
cmp
cmp
cmp
bound
ja
cmpl
stos
cmp
cmp
cmp
cmp
cmp
pop
cmp
cmpl
jmp
push
ds
add
add
add
add
xor
xor
xor
inc
xor
xor
xor
xor
imul
xor
scas
ss
ss
ss
ss
or
adc
push
aaa
sbb
and
es
sub
aaa
push
aaa
pop
aaa
imul
scas
aaa
shlb
aaa
shlb
fidivl
loop
ljmp
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
push
jb
jp
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
pusha
cmp
jo
js
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
cmp
inc
cmp
push
cmp
nop
cmp
mov
cmp
mov
mov
cmp
cld
cmp
or
or
adc
adc
sub
dec
ds
ds
ds
ds
ds
ds
cmpb
ds
lods
ds
mov
mov
les
enter
clc
add
add
or
or
adc
adc
sbb
sbb
and
cmp
pop
aas
pusha
aas
fs
push
aas
je
js
jl
cmpb
aas
mov
mov
aas
les
enter
sarb
aam
fdivrs
call
add
add
add
xor
xor
sbb
sbb
and
and
sub
sub
xor
inc
xor
push
xor
xor
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
and
and
sub
sub
xor
xor
cmp
cmp
dec
xor
xor
jl
xorb
xor
xor
int3
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
cwtl
xor
fdivs
fdivl
loopne
in
call
xor
xor
xor
sub
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
mov
enter
lock
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
adc
sbb
xor
pop
xor
push
xor
nop
xor
mov
xor
shlb
in
xor
sbb
sbb
and
and
sub
sub
xor
xor
dec
ss
ss
jl
xorb
mov
mov
nop
ss
mov
mov
ss
or
ret
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jge
test
aas
sarl
aas
add
add
xor
js
jl
xorb
xor
xor
xor
xor
xor
xchg
fdivl
dec
xchg
xchg
ss
shll
repnz
cs
inc
aaa
jae
xorb
aaa
scas
aaa
jmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
inc
ds
ds
cmpb
ds
mov
aas
sub
aas
jnp
into
aas
aad
add
add
add
add
cmpsl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
popa
xor
insb
xor
ja
jle
test
mov
xor
cmpsl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
push
ss
ss
ss
ss
aaa
inc
aaa
dec
aaa
pusha
aaa
jne
xorb
aaa
mov
xchg
aaa
lods
aaa
mov
aaa
lret
aaa
in
and
aas
cmp
cmp
cmp
cmp
cmp
jae
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
imul
cmp
out
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
adc
sbb
and
sub
xor
cmp
inc
cmp
dec
cmp
pop
cmp
fs
jo
je
js
jl
cmpb
cmp
cwtl
cmp
test
mov
mov
mov
cmp
fdivrs
in
cmp
cld
cmp
adc
adc
sbb
and
sub
sub
xor
cmp
inc
ds
ds
ds
ds
ds
ds
jl,pt
cmpb
mov
xchg
ds
mov
ds
mov
ds
aam
fdivrl
loopne
call
ds
add
add
or
adc
sbb
sbb
and
sub
xor
xor
cmp
inc
aas
dec
aas
dec
aas
push
aas
pop
aas
pusha
aas
fs
insb
aas
jo
js
jl
mov
xchg
aas
mov
aas
lret
aas
aas
loopne
jmp
cmc
aas
aas
add
add
add
add
xor
xor
xor
aas
xor
push
xor
imul
mov
xchg
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
cmp
inc
xor
ret
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
nop
add
dec
add
add
xor
xor
in
in
xor
xor
xor
xor
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
xor
xor
xor
or
adc
sbb
and
sub
xor
cmp
inc
xor
xor
xor
xor
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
rolb
add
add
add
add
or
or
add
add
add
add
add
push
add
add
add
orb
add
pusha
add
adcb
add
mov
add
add
add
add
add
add
add
add
sldt
mov
sldt
rolb
add
call
adc
add
add
addb
add
add
add
add
add
add
add
or
add
or
add
sbb
add
add
add
add
add
add
add
pusha
add
addb
add
add
add
add
add
add
add
add
add
js
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
cwtl
add
add
add
add
add
add
add
test
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
enter
add
add
add
add
add
add
fadds
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
or
add
add
add
add
lock
add
add
add
add
add
add
fadds
add
in
add
add
add
cld
repz
pusha
add
add
add
add
add
add
add
add
add
add
add
add
stc
add
mov
add
add
add
add
add
or
add
in
add
add
add
test
add
adc
add
in
add
add
add
xchg
cli
add
pop
add
add
add
add
add
add
cli
add
in
add
add
add
add
add
add
add
push
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
add
or
dec
add
jbe
add
bound
add
or
inc
add
arpl
add
bound
add
add
push
add
outsb
add
add
outsl
add
add
push
add
add
add
add
add
add
add
inc
add
imul
popa
add
add
jne
outsb
add
add
push
add
outsl
add
add
jns
pop
add
add
jae
add
jns
or
push
add
add
add
add
jns
or
push
add
jne
jb
jae
add
jns
push
add
jb
imul
jns
or
push
add
je
jne
jb
add
jns
add
add
dec
add
insb
add
add
jne
add
add
add
add
dec
add
je
add
dec
add
jbe
add
inc
add
arpl
pop
add
popa
add
jne
popa
add
jns
or
inc
add
bound
jb
jne
popa
add
jns
add
add
arpl
push
add
jb
imul
dec
add
jns
add
dec
add
outsb
add
add
dec
add
insb
add
push
add
jne
add
jae
je
or
push
add
jo
je
add
bound
add
pop
add
arpl
je
outsl
add
add
pop
add
outsb
add
popa
add
add
add
popa
add
imul
je
and
je
jns
jo
add
add
outsl
add
jbe
add
jae
imul
sbb
dec
add
jbe
popa
add
add
add
popa
add
imul
je
and
outsl
add
add
popa
add
add
outsb
add
add
outsb
add
popa
add
add
add
jb
add
insl
add
outsb
add
add
js
je
add
outsb
add
insb
add
add
js
arpl
add
je
imul
and
and
add
jae
jae
add
je
imul
and
data16
imul
add
add
outsb
add
add
data16
arpl
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
js
arpl
add
je
imul
and
imul
jae
popa
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
bound
jae
je
jb
popa
add
je
and
inc
add
jb
outsl
add
aas
add
arpl
arpl
add
jae
and
jbe
imul
popa
add
add
outsb
add
add
je
and
popa
add
add
add
jae
and
and
add
outsb
add
add
outsl
add
add
add
add
add
add
add
add
add
data16
add
add
add
jae
jae
and
and
add
popa
add
add
inc
add
bound
add
dec
add
jb
add
inc
add
jb
add
dec
add
jns
add
dec
add
outsb
add
add
add
outsb
add
popa
add
add
add
outsl
add
outsb
add
add
and
outsl
add
add
popa
add
add
outsb
add
add
outsb
add
popa
add
add
add
insb
add
jae
jae
and
je
jns
jo
add
popa
add
je
xor
inc
add
arpl
add
jae
and
jbe
imul
popa
add
add
outsb
add
add
je
and
popa
add
add
add
jae
and
and
add
add
add
data16
add
add
add
jae
jae
and
and
add
arpl
arpl
add
jae
and
jbe
imul
popa
add
add
outsb
add
add
je
popa
add
imul
add
jbe
add
data16
add
or
add
je
jb
outsl
add
add
and
push
add
add
jb
imul
insb
add
add
add
add
outsb
add
je
jb
jne
arpl
je
imul
sub
inc
add
arpl
add
je
imul
and
and
add
outsb
add
add
outsl
add
add
add
add
add
je
and
and
add
add
and
add
add
add
jo
jo
insb
add
arpl
popa
add
add
outsb
add
add
jb
jb
outsl
add
xor
inc
add
jb
insl
add
je
and
daa
add
add
add
outsb
add
popa
add
add
add
jb
and
imul
outsl
add
jo
popa
add
add
insb
add
and
ja
imul
and
popa
add
add
insl
add
outsb
add
add
outsl
add
add
jb
add
insl
add
outsb
add
add
outsl
add
and
data16
jb
insl
add
je
and
daa
add
add
add
popa
add
imul
je
and
insl
add
je
push
add
add
popa
add
add
and
outsb
add
je
and
jae
jne
jo
jo
outsl
add
je
add
add
add
add
add
je
add
inc
add
jb
outsl
add
and
arpl
jb
add
je
imul
and
jbe
popa
add
imul
je
and
outsl
add
and
jae
popa
add
add
add
jb
jb
popa
add
sub
push
add
jb
imul
je
and
outsl
add
and
jae
popa
add
add
add
jb
jb
popa
add
and
imul
add
and
outsl
add
je
and
outsl
add
and
bound
outsl
add
outsb
add
add
add
add
add
data16
add
add
outsl
add
jns
or
dec
add
add
and
add
jb
outsl
add
and
and
add
imul
and
outsb
add
je
and
data16
jne
outsb
add
add
outsb
add
popa
add
add
add
imul
outsb
add
insl
add
adc
push
add
outsl
add
add
popa
add
jns
and
outsl
add
add
and
data16
insb
add
jae
adc
inc
add
insb
add
and
popa
add
arpl
add
jae
and
add
outsb
add
add
add
add
add
add
add
outsl
add
add
add
outsb
add
add
data16
add
imul
or
inc
add
jae
imul
add
jne
insb
add
add
outsb
add
popa
add
add
add
jne
insl
add
jb
imul
imul
jne
je
adc
inc
add
jbe
imul
outsl
add
and
bound
jns
and
jp
add
outsl
add
add
popa
add
add
and
arpl
push
add
and
add
jb
outsl
add
adc
dec
add
je
add
add
and
outsl
add
add
data16
add
and
dec
add
jbe
popa
add
add
add
insb
add
popa
add
add
add
add
outsl
add
outsb
add
add
jo
add
popa
add
add
outsb
add
add
insb
add
popa
add
add
add
add
outsl
add
outsb
add
add
add
imul
outsl
add
and
bound
jns
and
jp
add
outsl
add
add
insb
add
popa
add
add
add
add
outsl
add
outsb
add
add
jbe
add
data16
add
sbb
inc
add
add
je
imul
and
jo
outsl
add
outsb
add
add
outsb
add
add
data16
add
mov
lock
scas
lds
scas
xchg
nop
mov
jb
lea
and
pop
mov
lock
outsl
test
mov
lcall
jno
les
dec
jmp
cmp
test
xor
jo
jge
in
arpl
pop
mov
sub
and
data16
lret
mov
jae
pusha
dec
xor
cmpl
sti
jl
shr
rorl
mov
push
outsl
fadds
jne
sub
inc
add
addr16
outsl
lret
les
inc
pop
outsl
cmovp
push
inc
cmp
stc
sbb
mov
lret
imul
sbb
or
dec
hlt
stos
cmp
stos
xor
imul
rorl
std
adc
inc
lods
ret
fstps
out
pop
jae
cmpsb
iret
push
loopne
or
jp
cmpsl
es
push
stc
dec
scas
loopw,pt
pop
jne
cwtl
int
loop
push
add
test
xchg
test
push
sub
push
mov
fnsave
gs
dec
popa
ja
lcall
dec
sub
mov
insl
sub
addr16
or
movsl
and
popf
push
adc
aas
ficoms
cmp
ret
flds
popa
fwait
inc
pop
jae
cmpsb
iret
loopne
or
jp
cmpsl
ss
push
stc
aas
scas
ds
dec
pop
jne
cwtl
int
loop
btr
sub
jl
test
push
sub
cmp
orb
sbb
adc
xchg
stos
push
out
xchg
mov
das
inc
out
std
es
fisttps
pop
lea
adc
std
adc
xchg
lods
dec
loopne
mov
dec
repz
mov
loope
xor
mov
jnp
sahf
popa
call
sub
dec
loop
mov
xor
dec
icebp
adc
pop
xchg
push
addr16
fcmovnb
outsb
ljmp
sub
and
ja
rol
popa
in
adc
xchg
xorl
inc
pop
jno
popf
sbb
inc
addl
repz
inc
dec
fwait
cld
xlat
movsb
ror
pop
nop
push
mov
push
xor
jae
movsb
sub
stos
xchg
or
cmp
ja
mov
sbb
aam
inc
nop
xorl
sbb
xor
mov
push
and
mov
insl
cmp
outsl
aaa
mov
or
lea
adc
cmp
stos
rcl
cmp
inc
pop
jno
movsb
leave
fcomp
cmc
or
movsl
and
sub
les
cltd
lods
ret
fnstenv
cmp
pop
jae
cmpsb
iret
loopne
or
jp
cmpsl
add
xchg
cmc
adc
inc
test
stc
mov
ds
dec
pop
jne
cwtl
int
loop
fxsave
sub
xchg
test
push
sub
mov
adc
ja
lcall
add
dec
jle
stos
pop
out
xchg
daa
sbb
inc
loop
std
mov
xor
dec
arpl
pushf
shl
std
adc
xchg
lods
jb
xchg
sbb
xor
dec
repz
or
adc
sbbb
sbb
dec
cli
dec
icebp
loopne
int
jno
pop
jnp
addr16
nop
add
mov
fwait
mov
in
xor
xor
lahf
mov
pop
push
push
imul
add
mov
popf
mov
out
xor
aaa
dec
jmp
cmc
xchg
mov
push
or
push
xchg
mov
popf
jle
inc
mov
and
dec
stc
inc
jmp
mov
push
jo
insl
orl
mov
mov
mov
and
push
cwtl
inc
jmp
test
push
adc
test
or
mov
mov
pop
es
out
xlat
in
popf
and
pop
jno
push
mov
mov
mov
pop
sub
push
clc
mov
out
xchg
and
pop
jae
add
xorl
nop
cmpsl
mov
sub
xchg
mov
icebp
scas
and
adc
jne
aaa
mov
mov
sbb
pop
sarb
sub
pop
in
loope
xchg
es
adc
lea
xorb
push
sub
dec
cs
pop
loop
out
enter
sbb
bound
cmp
sub
insb
adc
xchg
lods
ret
jno
jg
xor
mov
fcmove
loope
fwait
sbb
fs
sub
test
fldt
out
cwtl
scas
lds
jbe
dec
pop
clc
mov
jecxz
lahf
sbb
cmp
xchg
xor
pop
sub
lcall
xor
popa
sti
mov
fmul
in
mov
jg
xor
lods
mov
sbb
xlat
bound
in
mov
dec
int3
jno
ss
arpl
mov
fcmovnbe
out
xchg
adc
push
xchg
push
cli
mov
jmp
sahf
mov
jnp
ja
cmp
lock
ret
mov
sbbl
sbb
mull
jne
cmp
jecxz
rol
aam
add
fwait
or
pop
xor
mov
imul
imul
in
add
xchg
or
aaa
pop
add
movsb
mov
mov
scas
xlat
push
fsubr
add
jb
lahf
ds
addr16
cmp
pop
add
cmpsb
mov
movsl
inc
push
insl
push
mov
pop
xchg
xor
je
mov
push
and
sbb
insl
movsb
inc
pop
outsl
adc
repz
lea
adc
cmp
stos
rcl
cmp
inc
pop
jno
movsb
leave
dec
fdivp
or
push
aaa
ret
js
movsl
push
call
aas
iret
push
sti
or
lods
inc
pop
jae
cmpsb
iret
push
loopne
or
jp
cmpsl
daa
ljmp
push
stc
add
stos
dec
pop
jne
cwtl
int
loop
movswl
sub
jl
test
push
sub
cmpxchg
fisttpll
movsl
inc
ficompl
std
sub
popf
push
rclb
cmp
insl
cmp
jno
and
and
movsl
mov
sub
push
cmc
mov
out
mov
dec
sbbb
mov
xchg
jbe
mov
rolb
std
mov
icebp
fwait
and
mov
mov
mov
mov
sbb
pop
sarb
sub
pop
sarl
mulb
dec
mov
xorb
push
lea
call
mov
cmc
sbbb
mov
subb
insb
adc
ret
dec
jg
xor
call
loope
xchg
sbb
fs
sub
out
outsb
pop
imul
cli
xor
mov
push
int3
jecxz
cwtl
sbb
mov
jge
pop
xchg
mov
mov
jno
jae
xor
fnstenv
iret
in
test
inc
aam
jg
cmp
lods
imul
das
bound
add
jno
aaa
dec
arpl
mov
cmp
out
sahf
adc
imul
add
or
lahf
mov
jno
ja
cmp
hlt
test
sub
jmp
insl
sbbl
sbb
add
shlb
push
addr16
shll
aad
add
test
andl
cmp
dec
aaa
aad
negb
pushf
push
xchg
movsl
inc
das
fmuls
push
jno
push
aas
jb
xchg
or
aaa
lret
test
mov
push
imul
xlat
out
out
add
jno
lahf
cmp
fwait
aam
and
fistps
movsl
mov
or
insl
sbb
pop
xchg
or
inc
ja
mov
or
pop
push
test
insl
mov
pop
outsl
or
or
mov
adc
cmp
stos
rcl
cmp
inc
pop
jno
movsb
leave
pop
fcomip
or
movsl
inc
call
aas
push
sti
xor
popa
xchg
inc
pop
jae
cmpsb
iret
outsl
loope
or
jnp
cmpsl
and
xchg
pop
adc
stc
cmp
addr16
dec
pop
jne
cwtl
int
jecxz
setnp
sub
jge
test
pop
sub
xor
fnstsw
gs
dec
popa
ja
lcall
add
lds
stos
push
out
xchg
test
das
inc
rorl
mov
fbld
sahf
dec
arpl
pushf
sarl
adc
push
das
ljmp
test
xor
dec
xor
cmp
pop
mov
inc
sub
sub
push
test
adc
sub
cmp
mov
dec
icebp
mov
ss
cmp
jge
nop
lds
ljmp
test
hlt
push
xor
pop
mov
pop
push
imul
add
mov
and
out
repz
dec
flds
push
mov
push
leave
push
imul
add
bound
lea
inc
jmp
mov
push
dec
push
insl
xorl
sbb
mov
add
cmp
inc
jmp
lahf
cs
dec
pop
outsl
test
mov
mov
mov
pop
and
out
scas
ret
xlat
in
test
push
inc
pop
jno
and
and
je
lea
movntps
push
icebp
mov
out
popf
and
pop
jae
and
stos
jbe
arpl
test
sub
loope
jecxz
fcomi
popf
and
pop
pop
jne
adc
mov
test
add
xchg
fs
cmp
push
jg
xor
stos
lea
int
cmp
adc
jge
pushl
pop
jo
add
pop
rcll
or
std
jns
shl
ja
xchg
dec
aas
mov
call
mov
repnz
rorl
cmp
pop
add
outsl
pop
inc
push
insl
or
pop
mov
mov
or
pop
mov
cmp
inc
pop
outsl
adc
repz
lea
adc
cmp
test
arpl
out
leave
or
jle
aad
xchg
pop
cltd
push
imul
push
ret
leave
adc
lahf
mov
push
mov
ffreep
mov
add
mov
inc
jecxz
fcomi
mov
ret
add
or
ficompl
aad
cwtl
arpl
pop
outsl
test
lds
lods
cmp
mov
gs
push
imul
out
and
pop
jno
cmp
and
xchg
leave
stos
std
cld
adc
nop
and
cmpb
jmp
push
push
imul
shll
or
in
imul
fwait
test
inc
push
ret
scas
outsl
enter
and
and
mov
psllw
inc
loop
subb
ljmp
test
bound
into
rol
scas
loopne
adc
add
sub
test
jno
popf
sbb
mulb
sti
fistps
out
jmp
cs
mov
xor
push
add
cmp
cltd
cmp
gs
out
repnz
inc
clc
pop
stc
clc
stos
vdivsd
mov
aas
and
mov
adc
and
movsl
push
inc
sub
pop
shl
mov
fstp
jg
jb
sahf
add
in
arpl
push
imul
jns
das
inc
pop
fdivp
daa
mov
jge
fs
sbb
movsl
mov
sub
push
les
jae
xor
mov
mov
cmp
jnp
int3
adc
rorl
sbbl
lock
lret
lret
mov
dec
sub
inc
push
xchg
call
test
sahf
loope
mov
ja
hlt
lret
mov
adc
xchg
push
ret
sub
fnstcw
adc
in
jmp
or
stc
int3
or
out
adc
xchg
lods
ret
jbe
scas
inc
inc
cmp
lret
or
pop
push
mov
test
fucom
shr
mov
xorl
mov
cmpsb
mov
int
stc
jnp
xchg
les
outsl
in
arpl
cwtl
cld
mov
enter
jb
xor
mov
jbe
inc
dec
cld
out
leave
xchg
enter
enter
xchg
jnp
repz
add
shrb
into
push
cli
in
push
mov
cmpsl
mov
jns
rcrl
push
clc
pop
fs
stos
add
add
jmp
adc
mov
dec
dec
jbe
or
xchg
daa
stos
stos
movsl
in
pushl
add
mov
ljmp
popa
ja
dec
fdivr
sti
adc
mov
push
loope
push
mov
out
mov
xchg
jno
mov
fidivl
pop
mov
aam
daa
mov
adc
test
ss
rclb
lock
rol
insb
jmp
nop
fbld
imul
imul
or
xchg
push
add
lods
adc
push
test
aam
inc
pop
adc
or
and
jae
enter
imull
mov
fadd
lods
push
test
jne
jmp
and
test
hlt
push
dec
xchg
in
adc
dec
out
jo
in
ljmp
int3
pop
jae
xor
xor
or
test
iret
test
out
ret
xor
xor
sub
mov
or
jmp
jne
out
sub
jb
mov
jbe
mov
mov
pop
add
sub
cld
out
aas
cwtl
jno
popf
jbe
pop
jg
hlt
dec
arpl
sbb
xchg
xchg
push
les
sahf
add
xor
sub
mov
mov
xchg
dec
es
inc
mov
xchg
or
test
xor
adc
fidivs
dec
pop
add
sbb
cmp
xlat
mov
add
fisttpll
xchg
xor
mov
cmp
fidivs
mov
push
fadd
lods
sbb
movsl
push
outsb
in
xor
jle
dec
mov
aaa
loopne
pusha
or
jle
mov
sub
movl
pushf
mov
mov
cmc
or
push
sub
test
inc
push
xchg
jl
push
mov
jae
sbb
mov
mov
xchg
inc
and
push
fs
push
lret
scas
test
pop
sub
jmp
or
dec
mov
fimull
xchg
stos
mov
push
add
xchg
mov
hlt
xorl
xor
mov
ret
call
rcr
ja
mov
jmp
enter
push
cmpl
movsb
mov
push
cltd
add
sbb
dec
lock
mov
mov
dec
sub
xchg
test
gs
push
outsl
test
aaa
inc
icebp
add
jb
adc
icebp
push
adc
or
sbb
cld
sti
repz
dec
and
hlt
fmulp
mov
xchg
inc
sbb
in
shrb
es
in
mov
dec
xor
or
fadd
mov
test
inc
sub
add
aam
test
jl
push
cmp
clc
loop
mov
mov
xor
lock
scas
cwtl
subb
adc
call
jp
dec
cmp
or
loopne
mov
mov
inc
xor
add
fadd
lods
xchg
subb
sub
cld
out
mov
dec
and
hlt
fmulp
mov
xchg
inc
sbb
in
shrb
es
in
mov
dec
xor
or
fadd
mov
test
inc
sub
add
aam
test
jl
push
cmp
clc
loop
mov
mov
jne
pop
mov
and
dec
jnp
loop
push
shlb
sub
pop
ljmp
insb
mov
cmp
cmpsb
aad
mov
mov
push
jo
mov
inc
cmpsl
and
cltd
lahf
shll
xchg
mov
pop
or
in
inc
sub
ja
push
popa
jno
pop
inc
outsb
xchg
inc
mov
adc
cld
or
sti
cwtl
fdivrs
lock
push
inc
sub
mov
push
or
jmp
lds
fmuls
iret
lcall
cmpsl
add
mov
xor
jnp
leave
dec
lret
sti
mov
cs
popa
hlt
or
das
jmp
in
fistpl
bound
pusha
mov
loop
rolb
xchg
imul
pushf
out
pop
icebp
fistl
cmpsl
dec
pop
pop
dec
dec
mov
dec
sub
dec
or
pushf
jmp
xchg
dec
mov
lret
sub
sub
add
mov
mov
inc
or
mov
orb
sub
popf
dec
ret
test
fimuls
mov
bswap
xlat
lds
sub
dec
cmc
jl
add
mov
popf
mov
add
decl
or
mov
adc
xor
add
jns
addr16
sti
or
or
mov
arpl
lods
inc
mov
push
xor
and
xchg
jnp
imul
xor
adc
sbb
in
lahf
jnp,pn
push
fistl
lret
pusha
adc
push
test
inc
js
sbb
cwtl
cmp
arpl
and
jmp
mov
aad
pop
jg
cmp
jbe
outsb
mov
out
aaa
jmp
ret
xchg
jmp
xchg
stc
out
lods
cmpl
daa
mov
xchg
add
cmp
sbb
sar
out
cmp
mov
cmp
pop
and
lret
xchg
pop
sbb
add
mov
push
in
cmp
and
add
and
cmp
pusha
dec
push
jae
lods
scas
mov
outsl
inc
ret
xor
xlat
push
outsb
mov
mov
dec
clc
push
stc
sti
cmp
jae
mov
and
inc
cs
mov
jg
adc
dec
in
aad
stc
and
aas
in
mov
fcoml
mov
sub
dec
and
das
inc
jae
mov
sti
dec
and
pop
das
lods
or
lods
adc
pop
jns
lcallw
pop
jge
sbb
sbb
outsl
fsubrs
dec
jb
adc
loope
daa
iret
jns
pop
push
pusha
cltd
push
mov
jge
xor
or
pop
pop
mov
add
xor
out
jno
cld
or
or
mov
xchg
clc
icebp
mov
dec
pop
add
inc
pop
ljmp
inc
dec
imul
pop
sub
lret
lcall
pextrw
jne
pop
rolb
add
test
cmp
pop
in
add
repz
or
outsl
inc
lods
jae
pop
adc
mov
jl
fs
xchg
ja
iret
in
frstor
out
imul
sub
cmpl
adc
enter
outsl
rcr
sub
pop
inc
shrb
test
and
adc
pop
xchg
nop
stos
pop
bound
push
pop
or
aad
clc
xchg
popa
jbe
and
jmp
ja
xlat
pushf
pop
pop
jle
fwait
in
movsl
jmp
mov
adc
ret
fucomi
xor
fisubrs
ljmp
enter
ja
or
packssdw
js
mov
pop
scas
orb
andps
xorb
cwtl
arpl
sub
shll
fwait
iret
xor
fs
sbb
mov
pop
mov
js
aaa
jbe
addr16
ret
cld
add
adc
xchg
sub
sbb
push
test
loopne
push
cli
mov
sub
pop
xchg
fucomi
out
aam
rorl
mov
loopew
inc
push
je
rcl
dec
mov
push
mov
xchg
cmpsb
cld
std
sbb
sub
lcall
cmp
in
into
rorb
dec
sub
dec
imul
out
pop
adc
dec
push
loop
jle
negl
lods
mov
scas
jae
out
in
pop
mov
ret
mov
sub
pop
mov
testl
push
mov
mov
lods
jns
xor
nop
xor
leave
sbb
int3
fcmove
cmp
loop
cmpsb
dec
sbb
rclb
or
inc
fninit
lcall
inc
inc
mov
lods
fidivl
out
call
dec
test
ja
out
cmp
addr16
cmp
popa
fsubs
sbb
inc
push
cwtl
push
mov
into
jno
test
insb
or
hlt
and
aam
ret
dec
movb
lret
add
out
aad
push
adc
dec
mov
lods
lcall
mov
mov
inc
imul
lds
jnp
incl
mov
sti
xor
jmp
ss
orps
mov
mov
sti
call
imul
adc
clc
jo
sbb
push
sahf
addl
jns
mov
jbe
xchg
push
xor
xchg
inc
test
jecxz
es
fs
rolb
mov
push
stos
xchg
xchg
lock
js
lock
popf
scas
sbb
mov
jno
add
repz
fstps
xchg
data16
or
jns
push
cmp
int3
test
jp
aas
sbb
jo
rorb
sub
je
data16
dec
lcall
sub
test
jle
das
cmp
not
shlb
adc
xchg
mov
add
ret
and
mov
loop
pop
cmp
jb
mov
fstpt
stos
add
adc
cmpsb
dec
mov
loopne
add
mov
ja
jb
dec
mov
cmpb
add
ret
sahf
and
and
push
pop
pop
pushf
fiaddl
fnstsw
push
aas
jae
push
mov
xor
inc
cmp
pop
or
insl
mov
xchg
es
dec
stos
out
out
mov
sbbl
or
int3
sbb
inc
or
mov
or
cli
pushf
scas
lods
xor
mov
movsb
jb
ljmp
outsb
jnp
lods
cmpsb
fdivp
sbb
imul
xor
and
mov
mov
in
push
or
mov
js
daa
xor
scas
incl
inc
add
jl
stc
sahf
ja
sbb
ljmp
fidivl
popf
mov
jns
fdiv
scas
int3
adc
push
and
pushf
out
dec
jge
xchg
xchg
icebp
or
mov
imul
leave
adc
dec
arpl
xchg
or
pushf
cwtl
jbe
push
xor
lcall
inc
pop
shrb
and
lds
inc
stc
fwait
xor
hlt
in
mov
add
nopl
andl
mov
sub
call
aas
push
add
mov
cmp
xchg
xor
out
mov
aaa
and
sti
jl
and
push
dec
inc
pop
test
push
in
nop
pop
imul
mov
or
out
cmp
adc
outsb
jns
stos
jae
std
negb
dec
inc
push
scas
and
and
xor
pop
stos
cmpsl
push
lret
sbb
jp
outsl
dec
fidivrl
std
stc
pop
mov
xchg
mov
lret
sarl
outsb
aaa
fisubs
and
dec
movsb
bound
int
loope
cmp
push
dec
fistps
cmpsb
add
cmp
jns
shlb
sub
pop
and
mov
jge
xchg
rcl
rcll
inc
sub
roll
cwtl
mov
and
in
int3
out
int3
scas
movsb
inc
ds
sbb
inc
aam
mov
int3
pop
push
cmp
mov
pop
pop
mov
adc
sbb
dec
push
jns
lcall
nop
loopne
adc
aad
test
push
or
push
aaa
pop
push
je
shrb
or
sub
iret
inc
imul
and
jl
jno
cmpb
cmp
fwait
lods
lods
pop
jnp
cmp
aam
sub
mov
and
in
in
cmp
jge
pushf
subl
insb
iret
ja
cmp
xor
push
cs
lods
jmp
inc
mov
jp
iret
cld
testb
jl
adc
mov
sarb
xor
add
inc
or
and
scas
mov
lea
jle
adc
shl
inc
lcall
test
xchg
inc
push
and
ret
fwait
mov
inc
je
and
in
int
nop
xchg
js
or
scas
push
cli
inc
sub
jae
inc
xchg
xabort
jmp
mov
push
sbb
pop
movsl
mov
cmp
jnp
sbb
cld
mov
and
mov
adc
icebp
xor
addr16
fdivs
xor
add
loop
insl
mov
sub
jge
leave
out
bound
pop
movsb
adc
jb
fisubrl
jg
sub
clc
in
xchg
inc
mov
or
jl
xchg
sbb
jp
in
in
jae
arpl
cli
add
push
roll
mov
sub
iret
fwait
imul
sbb
adc
rol
mov
int3
adc
shl
iret
in
or
sbb
inc
fisubrl
cmp
xchg
xchg
shll
inc
imul
mov
lret
and
and
dec
jae,pn
mov
add
in
mov
in
lea
and
or
dec
popa
xchg
dec
xchg
loopne
jp
inc
movsl
cmpsb
cmp
into
sub
push
and
add
in
das
inc
out
mov
cmpsl
in
sub
gs
lock
in
test
sub
fcmovnbe
int3
jle
fs
aas
notb
sub
movsb
bound
adc
mov
push
sub
ds
add
mov
adc
jp
pop
add
pop
sbb
scas
or
je
rcrb
sub
fidivl
push
aam
adc
xchg
cld
out
sub
dec
sbb
push
mov
insl
cmc
jns
xchg
hlt
jbe
sbb
mov
pop
jnp
push
mov
js
pop
pop
cmc
mov
push
and
pusha
lods
inc
sbb
cmc
sbb
shlb
and
push
les
lret
jmp
xor
mov
je
sbb
enter
mov
into
das
xchg
test
jmp
cmp
jne
mov
out
das
sbb
sub
sarb
or
out
push
popf
popf
loope
out
or
lock
xor
rcl
out
andl
dec
jb
mov
cmp
push
mov
jecxz
mov
es
mov
lcall
push
cli
jae
adc
cmp
repz
pushl
jnp
sahf
add
push
sbb
ficoml
jp
push
mov
bnd
jbe
inc
cmp
add
sbb
inc
inc
rorb
or
in
sti
jle
in
inc
push
das
add
fsubl
add
xchg
add
adc
jmp
ljmp
dec
jp
inc
mov
aas
int
repz
scas
sbb
adc
lret
repnz
data16
shl
fbstp
sub
je
pop
rorb
cmp
ss
sub
xchg
sahf
mov
mov
popf
ljmp
jl
and
into
fwait
adc
dec
mov
lcall
push
cs
dec
fsubr
hlt
mov
scas
cltd
jb
das
cmp
jmp
cmp
jbe
or
pop
shrl
push
push
inc
inc
inc
pop
hlt
mov
cld
pop
fdivrs
and
jae
xor
pop
push
adc
sub
mov
bound
int3
xchg
inc
mov
shll
cmpsl
add
outsb
daa
adc
ret
push
cmp
or
jne
or
cmp
and
adc
push
insb
jl
mov
push
jb
aam
fwait
pop
mov
mov
in
clc
xor
xor
jge
call
cli
in
insb
mov
pop
and
sarl
push
test
dec
lret
in
mov
or
int
lods
test
sahf
dec
cmpsb
push
sti
pop
pop
aam
or
mov
shrb
cmp
push
inc
pop
jne
mov
xchg
mov
js
xchg
bnd
adc
dec
inc
cmp
mov
ret
inc
cli
scas
mov
mov
pop
mov
les
lock
inc
xor
mov
gs
js
leave
lret
mov
mov
leave
inc
add
pusha
in
and
mov
rolb
xor
stc
into
cltd
out
inc
je
lcall
movsl
sbb
adc
add
jmp
cmc
fsubrl
aas
adc
leave
test
test
nopl
test
call
outsl
add
jb
in
xlat
pushl
bound
repnz
sbb
jl
sbb
cmpsl
sti
mov
and
push
jnp
push
cld
fdivr
out
lods
sarb
jne
and
adc
in
jns
jge
xchg
call
es
and
gs
xor
ret
cmp
xchg
movsl
inc
sahf
fwait
mov
popf
int3
sub
popf
shrl
adc
jp
nop
test
adc
adc
jmp
xor
cwtl
push
jle
mov
or
xor
scas
fisubl
iret
xor
mov
push
and
or
push
aad
call
sbb
out
out
in
and
push
push
dec
out
enter
arpl
test
push
xchg
xor
add
incl
push
sbb
dec
xchg
test
popa
enter
in
out
adcl
jl
add
iret
mov
enter
jae
or
jg,pt
pop
or
movsb
xchg
mov
enter
leave
enter
cmp
push
jne
fxch
loope
jmp
das
and
sub
ljmp
jl
inc
scas
nop
enter
and
andl
cmp
in
int
mov
sahf
ret
cmpsb
mov
adc
xor
in
std
fdivl
mov
idiv
fs
mov
xchg
int3
fsubrs
bound
test
idiv
ficomps
adc
push
mov
sub
dec
lods
fwait
cld
aas
mov
mov
add
addr16
in
sti
in
pop
jne
pop
outsb
sbb
mov
daa
lret
push
nop
scas
inc
push
dec
sbb
xchg
rcr
loope
fcompl
xor
mov
xchg
enter
fisttps
or
movsl
stos
xor
sbb
fisubrs
movaps
ljmp
cmpsl
mov
mov
pop
cmc
mov
push
outsl
adc
mov
add
cmp
adcb
movsl
mov
xor
adc
popf
fcmovne
xorb
xor
xor
filds
aas
stos
pop
pop
xor
and
leave
fmul
mov
mov
pop
int
mov
mov
xchg
int3
out
jp
cmp
loopne
jmp
add
in
sub
jb
jae,pn
add
aad
xchg
xchg
mov
push
lock
mov
insl
stos
popf
xchg
jecxz
int3
sub
push
mov
mov
std
cmp
jg
dec
imul
xor
pop
faddl
inc
or
mov
or
mov
mov
imul
sub
lret
les
mov
cld
loop
jecxz
adc
sbb
repz
mov
pop
and
pop
lock
push
sub
add
push
push
outsl
push
mov
movsb
fidivrs
push
stos
pusha
insl
scas
sbb
aas
sbb
test
xor
pop
call
dec
dec
mov
cltd
mov
or
mov
sarb
adc
jp
ror
sahf
sbbb
jbe
xlat
fistpll
cs
outsb
int3
jle
sbbl
pop
lock
int
mov
mov
xor
fstps
sub
cmp
push
aas
xor
sti
jecxz
mov
dec
cmp
inc
jo
mov
add
icebp
gs
adc
in
xchg
push
insl
int3
pop
mov
jns
pop
dec
jne
popf
adc
adc
pop
mov
adc
push
pusha
adc
pusha
push
add
pop
push
addr16
push
int3
mov
imul
sbb
inc
push
mov
sub
mov
mov
shll
xchg
jge
xchg
in
mov
popl
and
cld
cmc
jae
popa
mov
sub
sub
call
movsb
jb
xchg
cmc
xchg
sti
sahf
cmp
iret
out
scas
adc
push
adc
aaa
pop
mov
stos
clc
loope
xor
into
fs
dec
and
add
bnd
jmp
popa
adc
test
dec
clc
xor
mov
repz
jae
cmp
pop
dec
jno
cmp
xchg
out
dec
test
mov
mov
jno,pn
icebp
movsb
outsb
push
sub
or
loop
movsl
scas
add
or
fdivp
push
xor
push
lods
dec
ds
add
mov
and
fstl
push
je
adc
ret
or
je
push
xchg
or
ficomps
imul
out
repnz
add
mov
mov
insb
aad
pusha
push
outsb
push
into
mov
outsb
test
cli
mov
or
aaa
xchg
push
test
or
inc
mov
lods
dec
lock
sbb
sbb
aam
jns
adc
enter
movsb
dec
cld
jns
xor
mov
push
imul
rcll
cmpl
xor
shll
test
mov
and
sahf
pop
dec
inc
das
aas
sub
out
cmp
or
add
sarb
inc
hlt
cmpsb
add
lds
sbb
xchg
push
jae
adc
mov
mov
hlt
aad
mov
nop
inc
push
mov
dec
lret
jge
xlat
mov
loop
inc
cmpsb
stos
mov
test
xor
pop
mov
lret
fwait
sbb
mov
call
push
imul
outsb
in
mov
andl
scas
dec
mov
mov
inc
sti
adc
lcall
sbb
push
imul
push
dec
adc
cmp
js
jg
push
in
out
lods
mov
adc
xchg
mov
jno
push
imul
inc
cwtl
dec
fcom
cli
add
pop
inc
mov
xchg
xor
sbb
jmp
test
hlt
shll
inc
sub
adc
cld
lahf
mov
in
lahf
ret
dec
pop
cmp
add
repnz
outsl
insb
jae
in
fidivrl
or
subb
jbe
inc
addr16
shlb
stos
movsb
lea
cld
shlb
and
xlat
sub
add
jb
cli
out
aas
sub
addb
sti
cmp
sbb
div
in
pushf
sbb
and
andb
adc
not
int
sbb
call
pop
or
fs
or
jecxz
xor
push
jns
cwtl
jne,pn
imul
xchg
ljmp
xor
loop
cmp
sub
mov
jmp
ret
mov
push
push
xor
arpl
xchg
sbb
add
mov
mov
andl
insb
or
pusha
xchg
dec
dec
mov
imul
js
out
pop
or
into
xchg
or
hlt
and
push
dec
jle
sub
ss
add
std
mov
adc
mov
sub
xor
lods
ljmp
sub
push
cmpsl
xorb
sbb
repz
xchg
lea
sub
repnz
icebp
fistps
push
mov
mov
or
cmp
nop
lock
aas
inc
inc
insl
cmp
jl
rcll
push
jmp
jmp
cwtl
js
pop
jno
pop
aam
mov
sbb
inc
jmp
xchg
out
pop
jbe
dec
std
in
xor
movsb
lock
pop
mov
int3
jo
aad
adc
js
sub
lret
mov
out
ret
bound
add
aam
cmc
into
xorl
jle
jecxz
int
cltd
and
enter
insl
pop
enter
cli
aam
mov
std
mov
jno
jnp
fcompl
mov
jb
test
or
nop
pushf
loope
and
fs
mov
out
and
dec
dec
outsl
mov
fsts
aaa
dec
jbe
jbe
fidivl
adc
and
addr16
sbb
icebp
jecxz
mov
lods
jl
push
sub
jecxz
les
cmp
sbb
cld
out
mov
adc
rorb
int3
movsb
xchg
jne
push
push
sbb
call
push
and
or
decl
cli
push
aas
ss
jg
call
rolb
sbb
iret
mov
and
mov
mov
xchg
mov
cmp
inc
leave
popf
add
xor
jp
iret
int
sti
jae
cmp
insl
xor
loopne
pop
mov
les
or
popf
lahf
pop
dec
sbb
push
dec
or
stos
insb
and
enter
xor
andl
or
mov
seta
in
lcall
mov
dec
inc
mov
jg
ret
sub
dec
icebp
dec
pop
or
filds
mov
aas
fisubs
mov
cmp
loop
add
outsl
and
scas
repnz
int3
or
adc
js
adc
mov
inc
dec
push
cmpsb
rcl
in
into
pop
hlt
xor
es
cltd
les
pusha
data16
lds
jmp
ja
push
subl
imul
cmp
jae
movsb
popf
sbb
sbb
leave
dec
inc
cmp
jae
std
jne
loope
jnp
out
stc
stc
ss
loop
push
jnp
sub
mov
and
xchg
lcall
and
test
inc
dec
into
inc
cwtl
aad
mov
cld
je
cmc
loope
in
bound
mov
mov
jbe
addr16
cmpsb
sub
sbb
adcb
dec
cmp
fs
icebp
loop
pusha
jmp
xor
cmp
sub
mov
jns
int
test
lret
and
loopne
js
out
mov
stos
sbb
rorl
adc
inc
sbbl
mov
push
mov
lret
repnz
stos
insl
cmp
xchg
jle
aaa
in
mov
push
call
fidivrl
dec
sub
push
nop
adc
adc
cmc
xchg
imul
pusha
stos
jecxz
fcmovu
xor
lods
sub
fs
rcrb
pop
daa
or
sub
sbb
andl
popf
add
add
adcl
cmpsl
shlb
pusha
mov
jl
inc
jb
xchg
je
mov
incb
or
adc
shrb
stos
jmp
cli
mov
xchg
in
xor
xchg
mov
popf
outsb
cmp
inc
fnstsw
push
mov
pop
inc
pop
mov
adc
in
xchg
popf
push
dec
ja
jl
ss
mov
cltd
mov
and
inc
nop/reserved
pop
or
repnz
mov
jns
call
scas
scas
outsb
sbb
imul
dec
movsl
sub
lock
add
scas
jl
cs
stos
mov
call
mov
test
adc
ss
lock
imul
aas
inc
lock
mov
xchg
pop
rclb
mov
pop
aas
xchg
mov
cwtl
shll
repz
dec
jp
jg
roll
adc
ljmp
addr16
inc
cmp
scas
inc
je
cmp
and
mov
xchg
adc
cld
mov
mov
mov
mov
mov
mov
pop
ret
aam
add
sahf
or
inc
ret
cltd
push
xchg
out
adc
jge
cltd
aad
xchg
ret
dec
stos
mov
cmpsb
into
iret
shlb
mov
or
sub
push
pop
add
nop
add
mov
xor
movsb
mov
jmp
ljmp
sbb
mov
je
out
fistpll
and
sti
sar
pop
pop
nop
or
std
pop
ja
mov
lret
mov
sbb
movl
test
inc
push
jbe
outsl
aad
cmp
jle
cmpsb
mov
dec
inc
sbbb
dec
lcall
out
and
std
xor
pusha
adc
adc
sub
outsl
aad
xchg
mov
xchg
xlat
or
ljmp
aam
das
mov
jnp
daa
cld
pop
jl
scas
pop
out
push
test
mov
roll
cmc
push
push
aam
cmp
or
std
cmp
fidivs
jae
rorb
mov
xor
lods
mov
inc
push
adc
jge
cld
clc
pop
mov
int3
ja
xchg
mov
adc
dec
icebp
push
mov
push
dec
outsl
sbb
push
add
scas
or
sbb
aam
push
clc
loopne
add
divb
xchg
fs
fisubrs
hlt
cmc
pop
push
jecxz
lret
shll
fwait
sbb
ret
or
cmp
cmp
mov
imul
mov
fildl
pop
xor
dec
cltd
adc
int
xor
push
inc
or
movsl
int
gs
inc
mov
shll
jns
mov
imull
cmp
cmp
cmp
outsl
popl
stc
popa
loope
mov
dec
mov
mov
adc
jb
inc
in
and
add
jb
shlb
xchg
insl
test
cmp
cmp
sbb
or
push
push
sbb
cltd
jo
int
mov
jle
hlt
add
iret
cltd
out
jle
ret
inc
fstpl
insl
je
push
adc
mov
call
out
xor
scas
cmp
std
ljmp
clc
out
mov
and
pop
jne
div
movb
pop
pop
mov
out
push
addr16
and
in
dec
mov
jnp
xor
mov
sbb
xor
sti
sub
ja
pop
movsl
add
cmp
arpl
imul
hlt
sub
cs
pop
das
push
fisttpll
dec
orps
popa
icebp
gs
pop
mov
stos
pushf
monitorx
ret
mov
outsb
cmp
push
cmpsb
jns
shlb
cmp
and
inc
xchg
sub
cmpsl
mov
sub
in
jg
repnz
push
xchg
sub
mov
sub
fiaddl
lea
arpl
push
call
sub
ss
scas
jl
in
lods
xor
push
int
jge
frstor
pop
xorb
sahf
or
insl
mov
inc
test
sub
movsl
hlt
sub
subb
jl
pop
pop
inc
jnp
pushf
mov
cs
xor
imul
cmp
in
xlat
push
or
aas
popf
push
cli
cwtl
fdivr
cmc
outsb
sbb
dec
cmpb
ss
mov
fbld
aaa
ficoms
mov
aad
inc
ficomps
pop
jo
adc
nop
add
or
ret
pop
loop
shlb
rcr
sub
add
jge
out
stc
andb
int3
out
push
xor
mov
and
popf
lods
lock
leave
push
pop
cmpsl
movsl
push
fnstsw
xchg
rcl
popa
aad
mov
or
test
clc
dec
pop
aaa
pusha
lea
push
dec
jg
loopne
rcr
fcmovnu
les
and
outsb
cwtl
pop
xor
push
pop
adcl
cmpsl
lret
jo
inc
int
dec
push
xorl
push
add
inc
mov
cmp
mov
push
push
lods
xchg
mov
cmpsb
mov
sub
imull
sbb
loop
sbb
adc
fidivrl
pop
loop
inc
in
mov
test
and
jp
lds
or
movsl
out
and
mov
outsb
mov
push
add
adc
pop
daa
gs
add
push
and
lods
dec
xor
je
sub
push
pop
arpl
in
fsubp
cld
shll
pushf
jns
mov
cli
xchg
cmpsb
xchg
lods
ret
test
movsb
dec
iret
mov
dec
xor
lds
jle
repz
inc
push
cmp
ds
xchg
mov
mov
push
mov
add
repnz
lret
jb
gs
ficompl
mov
adc
sub
inc
insb
inc
jbe
outsb
call
out
pop
jmp
sub
sbb
xor
xchg
into
lcall
rorb
dec
inc
fidivs
add
mov
btc
fsubl
xchg
adc
sbb
inc
mov
int3
andb
or
pop
push
sbb
fdivs
pop
scas
or
xchg
adcl
xchg
xchg
int3
into
pop
lret
fmull
inc
or
dec
enter
jae
movsb
orl
push
pop
mov
push
pop
loope
lds
or
dec
out
pop
mov
xorb
loop
jl
jbe
fistpll
int
mov
ss
lods
mov
ss
push
xlat
call
aad
and
cmp
clc
aad
shl
negl
push
adc
dec
mov
inc
jl
aaa
push
and
into
das
test
outsb
idivl
fdivs
icebp
add
push
inc
sbb
xchg
loop
or
lret
cmp
into
mov
nop
add
push
jle
cmpsl
jno
fiadds
dec
cmp
fnstenv
ds
mov
push
daa
seto
jb
bound
mov
sub
test
and
lcall
dec
mov
cs
dec
mov
xor
or
popa
outsb
lods
fs
daa
push
andb
mov
rorb
sbb
push
pop
cmpsb
jne
lcall
push
scas
arpl
in
fsubp
add
and
stc
and
pushf
int3
cmp
dec
adc
pop
xchg
lock
xchg
push
ret
adc
inc
outsl
push
dec
into
lcall
pop
pop
jne
das
pop
push
mov
mov
add
dec
lds
mov
jge
nop
add
cmp
enter
pusha
jb
adc
fimull
movsl
cmp
test
fisubl
fwait
insb
cmc
jbe
outsb
out
fsubrp
pop
out
jmp
cmc
andl
out
push
arpl
mov
dec
and
lods
call
int3
dec
mov
cmc
sub
mov
ds
mov
push
inc
les
rcrb
jle
je
pop
addr16
mov
loop
sbb
imulb
movsb
push
xchg
fldcw
jle
data16
jbe
loope
divb
lods
shrb
scas
xor
shrb
loopne
loop
shl
js
push
push
inc
out
pop
sarb
push
mov
adc
out
dec
push
dec
int
pop
das
inc
leave
in
push
add
std
hlt
addl
cmp
mov
dec
cmp
repnz
nop
jo
ja
mov
pushf
sub
jle
fwait
mov
stc
cmp
movsb
jno
iret
mov
sub
cmp
ljmp
pop
pop
or
stc
adc
mov
bound
aaa
inc
test
xchg
ljmp
push
popa
pop
out
fsubl
fisttps
fisubrl
das
aaa
sbb
or
mov
nop
rolb
adc
mov
jbe
orl
icebp
jo
sahf
mov
js
mov
or
jp
rcr
mov
jg
ss
xchg
into
outsb
mov
rcrl
movsb
fstpt
scas
adc
inc
enter
jo
aas
sub
lock
sbb
sti
sbb
push
js
mov
fwait
pop
fidivrl
adc
adc
out
test
push
cmp
dec
lock
mov
mov
mov
ret
pop
je
jl
sbb
imul
cwtl
jns
or
pop
imul
sbb
loopne
lcall
jge
cmp
mov
adc
frstor
mov
inc
cmp
mov
dec
enter
bnd
gs
pop
iret
cs
pop
std
sbb
lcall
arpl
subb
call
lea
je
push
push
and
movsl
pop
in
jle
xchg
lahf
aaa
xor
sbb
dec
push
push
jle
add
shrb
mov
add
mov
pop
outsb
rcrl
adc
test
push
sti
into
cmpsb
aad
xchg
jne
or
or
sub
stc
in
mov
jl
mov
sub
mov
cmc
jbe
repz
cs
insb
and
pop
cli
call
push
clc
insb
cli
mov
adc
repnz
inc
inc
pop
dec
int
inc
xor
loopne
dec
mov
inc
add
hlt
sub
sahf
dec
xor
sahf
dec
stos
xchg
daa
or
sbb
call
ficomps
xor
sbb
mov
dec
push
dec
sahf
ret
es
in
push
mov
fcmovne
jle
inc
into
rcll
pop
ja
sbb
enter
sbb
in
or
mov
pop
das
outsb
mov
psllw
cli
nop
movsb
lahf
mov
add
in
ljmp
xor
sub
js
pop
lahf
roll
adc
fs
in
jmp
in
sub
xor
pop
icebp
sbb
mov
lret
arpl
aas
aaa
jb
jge
cmp
out
jl
push
cwtl
cmp
ret
daa
mov
cmp
out
xorb
les
cli
decl
test
add
cmp
leave
pop
ljmp
fldt
outsl
popl
sub
repnz
jae
mov
in
out
xchg
loop
std
mov
stc
xor
mov
movsl
and
data16
add
adc
xchg
pop
in
das
mov
dec
enter
cmp
pop
orb
cmpsb
ficoms
xor
cmpb
test
fsubs
jns
mov
pop
adc
or
dec
inc
fwait
in
xor
adc
gs
mulb
sub
insl
pop
loope
faddp
insl
adc
scas
ja
sbb
scas
dec
push
sbb
push
mov
scas
lret
inc
aam
or
cmpsb
daa
insl
xor
mov
clc
fsts
sub
mov
pop
xor
mov
or
divb
loopne
mov
std
int
scas
gs
pop
test
loope
imul
sbb
hlt
jnp
and
dec
and
sub
inc
outsl
std
xchg
sbb
movsl
bound
inc
pop
or
mov
mov
sub
sti
int3
adc
add
ret
bound
fldcw
repz
cmp
add
or
into
adc
mov
icebp
jmp
ret
sub
decb
and
and
mov
clc
mov
into
xchg
dec
call
adc
and
movsb
pop
int3
pop
mov
fidivs
fs
add
prefetchnta
jnp
dec
pop
cmp
ret
sahf
and
xchg
add
pushf
pusha
lcall
nop
lcall
xlat
pop
aam
xor
or
rcl
adc
std
enter
pop
sbb
psrad
fwait
mov
cmp
out
outsl
fs
out
punpcklwd
cmp
subb
icebp
sub
mov
cmp
mov
sbb
int
or
enter
shl
cli
fldt
push
popa
xchg
push
outsl
push
mov
orl
int3
test
inc
fimuls
inc
es
lahf
push
rol
std
pop
pop
lods
cmp
adcb
sbb
push
leave
mov
es
cmp
pop
insb
inc
shrl
subb
inc
pushf
gs
pop
mov
fistpl
lds
ja
cwtl
insb
lret
lds
sbb
mov
push
mov
loopne
daa
ss
xchg
pop
cltd
mov
sub
fwait
cld
icebp
fwait
push
je
loopne
loop
rolb
add
push
aam
pop
and
imul
push
je
shlb
sahf
push
aad
js
inc
jns
sahf
lods
aam
pushf
xor
imul
add
sub
aad
and
dec
nop
and
out
fwait
xchg
hlt
adc
fwait
adc
dec
test
arpl
pop
pop
push
add
mov
mov
mov
add
les
dec
and
insl
lret
pop
add
into
sub
inc
das
jle
sti
jno
ficomps
sub
flds
jle
jmp
or
std
outsl
hlt
lock
call
lcall
inc
sti
out
push
or
xchg
or
mov
inc
test
xchg
imul
ret
int
or
mov
dec
sbb
jne
filds
cmp
mov
xor
push
mov
sbb
out
int3
sbb
dec
leave
mov
push
enter
push
sbb
inc
sub
inc
push
test
fisttpll
les
sub
mov
loopne
rcr
aam
jns
adc
cmc
cwtl
addr16
mov
dec
xchg
sti
into
xor
fimull
inc
cwtl
add
xchg
dec
jno
dec
subl
sbb
es
aaa
sub
je
arpl
or
iret
loopne
in
test
and
stc
jg
adc
xchg
aam
mov
or
jmp
add
pop
sub
xchg
jbe
inc
mov
cmp
outsl
lcall
jns
dec
mov
push
push
xor
jp
cmp
mov
push
dec
mov
outsl
packuswb
or
dec
icebp
inc
pop
mov
cmp
rolb
xchg
push
cmp
aam
mov
hlt
xor
scas
cmpb
insb
add
repnz
insb
in
rcl
and
and
xchg
mov
adc
popf
lret
cwtl
inc
fcoms
xor
in
out
test
jae
mov
ret
push
lea
lcall
xchg
dec
jo
adc
cmp
nop
mov
in
cltd
int
or
add
sub
xchg
ds
fildl
pop
mov
cmpsb
cmp
xchg
enter
je
inc
adc
inc
iret
add
sub
icebp
jbe
xchg
adc
gs
adc
cmp
scas
dec
mov
sub
and
jg
fsubs
mov
cmp
mov
daa
adc
movsl
lds
dec
mov
pushf
pop
inc
jbe
hlt
fwait
or
negb
stc
mov
cmp
movsb
popa
push
fdivs
scas
cmp
mov
out
push
push
aas
mov
jmp
nop
push
hlt
sbb
push
xchg
inc
js
sub
jecxz
sbb
and
add
mov
pop
rcrb
xor
mov
inc
cmp
in
jae
adc
push
jmp
jbe
addl
inc
cltd
pop
icebp
mov
mov
lock
push
cmpsl
dec
adc
push
jo
bound
mov
cmp
pusha
mov
stos
jnp
aam
mov
ss
scas
adc
je
insb
loopne
cmpsb
daa
aas
ds
or
jp
xchg
int3
clc
add
mov
pop
or
test
lret
and
repz
stc
test
mov
sbb
dec
repz
pop
mov
cmp
fs
xchg
xor
dec
sbb
jle
data16
sbb
loope
and
lods
pop
sub
scas
jne
cmpsb
pop
xchg
mov
mov
jmp
pusha
lret
aam
dec
mov
cwtl
pusha
test
imul
jl
lahf
and
sahf
pop
jb
sub
cmp
or
sahf
dec
aam
dec
insb
xor
shlb
cmpb
push
cmp
lcall
aam
or
scas
or
mov
pushf
mov
test
fwait
inc
cld
int
sbb
push
test
test
xor
ljmp
xor
push
clc
xchg
clc
add
push
lods
and
sub
mov
cmpsb
add
sub
push
xchg
popa
inc
out
fdivr
stos
fisttps
and
in
cli
sub
imull
popf
sbb
xchg
out
cld
cmp
mov
fsincos
out
pop
push
lds
ds
jno
inc
outsb
es
xlat
pop
cmpsb
js
push
cmpsl
gs
les
or
xor
repz
lahf
jmp
inc
xor
in
push
xchg
movsl
cwtl
xor
pop
sbbl
sbb
insl
mov
in
imul
sbb
pushf
xchg
jno
jae
shrb
in
fistpll
mov
lret
xchg
sbb
sbb
jbe
sbb
inc
xorl
ds
rcll
mov
pop
mov
sbb
sub
aaa
es
jl
shl
lahf
in
imul
inc
pop
xlat
xor
mov
push
mov
lcall
movsl
andl
int3
iret
leave
push
int3
inc
es
es
jge
xor
aas
inc
scas
pusha
cmpsb
stos
adc
loop
fimull
xchg
sbbb
add
sbb
jae
and
dec
icebp
ficoms
add
adc
lods
xor
mov
sub
push
jmp
ss
jmp
inc
repz
pop
pop
rcrb
mov
popf
sahf
gs
adc
pop
arpl
pop
push
cmovb
add
xchg
dec
loope
int3
xor
sbb
std
xlat
sbb
scas
movsb
popa
rol
dec
mov
mov
xchg
mov
cltd
rcl
inc
sub
push
or
enter
fbld
das
rclb
shl
cwtl
aam
and
sbb
cmpsb
add
pop
xchg
adc
inc
insb
pop
lcall
mov
jbe
mov
ja
push
mov
sbb
mov
pop
push
xchg
je
nop
inc
pop
fcomip
insb
inc
scas
fwait
aad
imul
xchg
or
shrb
mov
and
xor
xchg
in
out
xchg
jmp
das
nop
lods
and
or
je
out
mov
fstps
das
and
arpl
mov
cmpsb
jbe
push
mov
pop
dec
sbb
test
scas
pushl
sbb
repz
in
and
aam
fs
and
in
in
adc
in
sub
sbb
mov
jo
adc
and
les
sbb
lahf
xchg
or
ds
xor
orb
or
ret
push
mov
sbb
cmc
cmp
push
pop
xlat
sbb
ss
pop
xlat
pusha
cmp
mov
popf
xchg
cmp
adc
jnp
push
mull
ss
add
mov
add
fistpl
nop
mov
imul
lds
stos
mov
xor
push
insl
push
mov
fisubrs
adc
iret
fstpt
jl
stc
and
rcl
repz
outsl
insl
out
test
push
mov
lahf
mov
das
or
jb
sbb
pusha
xchg
sub
xor
push
cs
lcall
stos
push
dec
dec
and
cwtl
add
dec
jmp
loopne
ret
xor
inc
sbb
in
add
out
xor
push
push
sbb
sub
sti
nop
push
and
xchg
std
repz
mov
push
rcrl
xor
and
and
daa
push
mov
bound
roll
sub
jbe
idivl
add
ds
icebp
repz
and
cmp
gs
pusha
das
dec
pushf
loop
test
or
mov
arpl
test
pop
xchg
nop
enter
xchg
mov
fmuls
in
jmp
sahf
jp
repz
add
xchg
pushf
mov
push
mov
inc
call
loopne
and
lods
xlat
add
ljmp
cld
je
mov
test
dec
xor
and
addr16
jecxz
outsl
push
lods
adc
jo
data16
imul
push
and
jo
movsl
or
inc
add
sub
add
xlat
leave
mov
repnz
pop
jp
pop
dec
inc
call
fists
in
jmp
jne
cmc
dec
xchg
push
ja
test
cmpsb
xor
lock
cmp
sbb
int
inc
dec
mov
jg
inc
xor
or
movsl
aam
das
int3
movsb
out
pop
or
fnstcw
call
sub
shll
xlat
pushf
dec
sub
jecxz
or
cmp
dec
and
ds
sbb
ret
jmp
in
push
xchg
mov
subb
mov
test
nop
jg
xor
lods
xchg
xchg
test
stc
insb
push
push
mov
adc
adc
dec
mov
pop
in
iret
inc
xchg
add
lods
notl
pop
xor
add
mov
dec
movsl
mov
scas
and
leave
enter
in
jge
xchg
and
add
cmp
repz
and
lock
pop
inc
ja
stc
sahf
sub
dec
daa
pop
dec
add
mov
mov
pop
mov
xchg
jmp
popa
jns
out
inc
cld
fcomps
es
xor
pop
sub
mov
jl
adc
sub
lock
into
pushf
mov
psubd
mov
andb
sub
ja
sub
clc
orl
cmp
call
push
cmp
xchg
cmp
or
adcb
repnz
sub
mov
orl
mov
mov
adc
mov
aam
popl
xor
lcall
cmc
js
inc
cld
shrb
fimuls
inc
xchg
les
std
mov
pop
fists
iret
adc
fs
shrl
sbb
int
loopne
popf
sub
movsl
pop
adc
lock
lea
adc
hlt
ret
jmp
adc
push
inc
gs
stc
sar
outsb
pop
push
adc
inc
imul
lret
or
std
pop
loopne
push
lret
movsl
pop
imul
out
mov
shl
pop
sbb
sub
dec
sti
pop
loope
outsl
pop
mov
mov
mov
xchg
scas
cltd
lahf
testb
scas
test
cmpsl
mov
pop
movsb
jmp
sti
jns
and
outsl
movsb
das
xchg
in
pop
shlb
mov
int
and
sbb
pushf
aas
scas
jo
sub
mov
daa
pushf
mov
outsl
leave
mov
xchg
aas
jne
aad
fdivl
xorb
inc
out
lahf
shrb
das
sbb
mov
cmc
cmp
insl
cmp
test
fsubrl
or
xor
pusha
jo
jge
xlat
in
jno
pop
jbe
leave
or
cli
xor
pushf
adc
test
scas
and
leave
js
movsb
adc
popf
cld
mov
cmp
jno
popf
add
xor
ret
mov
clc
movsl
add
fdivrp
popf
addr16
xchg
sti
mov
mov
mov
lret
out
and
cmpsb
inc
shr
ljmp
scas
xor
cld
push
mov
mov
push
cwtl
cmp
xchg
mov
push
stos
inc
dec
push
loopne
in
pop
pop
adc
jb
int3
icebp
cmpsl
mov
das
out
push
rclb
mov
push
and
ljmp
inc
mov
imulb
shr
adcl
dec
sub
lock
test
repnz
mov
shr
and
pop
rcrb
adc
leave
hlt
mov
int
loope
adc
inc
mov
cltd
adc
rcr
mov
mov
aaa
sbb
cmpb
or
movsb
xchg
xchg
jo
adc
push
mov
call
lahf
inc
mov
lods
or
pushf
test
mov
out
cmp
and
add
add
data16
inc
aam
xchg
pop
pop
lock
stc
es
call
xchg
lods
les
push
pushf
cmp
je
pusha
lock
and
nop
mov
pop
aaa
inc
dec
and
out
sbb
or
xchg
out
pushf
mov
jnp
loope
xor
push
jae
xchg
fildl
push
xor
mov
inc
cmp
xor
mov
cmpsl
mov
pop
out
shlb
fwait
xchg
jmp
inc
popa
pop
aad
mov
jle
inc
inc
mov
in
pop
call
jno
mov
lock
jl
mov
sub
insb
push
push
test
add
xor
pop
jbe
nop
mov
in
or
cmp
pusha
jns
popf
mov
es
arpl
pushf
mov
aam
xor
cmp
andb
sub
push
js
lods
cld
rclb
lock
or
pop
andl
rdtsc
xchg
cmpsb
cltd
push
std
loope
adc
mov
stc
sub
mov
icebp
mov
or
fmull
sarb
xchg
mov
cmc
xor
lahf
mov
in
sbb
dec
insl
popa
push
xchg
test
or
xor
out
inc
pop
jns
lods
add
lahf
pop
push
movsl
rcr
or
ja
cmp
and
addl
sbb
mov
lods
adc
xchg
mov
jne
test
cmpsb
and
fisubrl
lods
dec
adc
fsubrl
inc
sub
clc
test
je
xchg
cmp
jecxz,pt
cld
gs
cmpsb
aad
mov
insl
into
pop
mov
fnstsw
mov
jne
cmp
cs
and
jge
dec
data16
icebp
inc
lea
mov
inc
out
sbb
sub
jbe
sub
fbstp
repz
push
fsincos
or
pusha
sub
cmovnp
dec
push
cmp
sbb
iret
add
aaa
ss
jmp
lahf
dec
mov
and
dec
xchg
ja
ljmp
jnp
mov
loopne
cmpsb
or
pop
adc
xchg
stos
sub
shr
mov
mov
loopne
pop
or
pop
call
pop
out
inc
icebp
cmp
jnp
inc
cltd
adc
dec
enter
adc
sbb
lahf
scas
imul
repnz
subb
in
mov
gs
aaa
xchg
popf
xchg
pop
mov
xchg
in
xor
cltd
add
push
mov
in
stos
pusha
xchg
mov
and
mov
dec
shlb
sbb
enter
inc
les
push
jg
push
lods
shrb
or
subb
fdivrs
or
xor
cmp
aaa
je
cmp
sbb
inc
xchg
cmp
outsb
push
scas
add
xchg
adc
int
cltd
mov
sbb
mov
dec
je
fs
mov
pusha
sti
or
cmp
int3
xchg
xor
arpl
inc
pop
pop
cmp
rcll
cmp
and
push
mov
dec
jp
daa
in
mov
popf
das
imul
jp
adc
int3
mov
sbb
mov
inc
outsl
sub
mov
fnstcw
dec
pusha
adc
scas
cltd
shlb
xor
shr
mov
xorl
add
adc
dec
cli
cmpsb
cmp
jle
sub
data16
pop
mov
lea
or
bound
cwtl
cmp
lahf
lods
fwait
shl
add
sub
incb
xchg
mov
shr
sti
cs
mov
shll
lcall
xchg
add
ss
pop
push
mov
or
ds
arpl
hlt
mov
adc
inc
adc
imul
rcrb
xor
cmp
daa
mov
cmp
inc
or
pop
push
int
cmc
fistl
push
imul
out
cmp
and
mov
lret
mov
lahf
out
sbb
shll
outsl
fs
mov
pmullw
jb
mov
pop
nop
pop
jb
mov
loopne
and
dec
push
jl
mov
aam
lock
and
test
cli
fdivrl
add
xor
pop
dec
mov
rol
out
xor
and
in
cmp
add
cmp
sbb
fnstenv
adc
mov
lods
leave
fsub
std
sbb
cmp
xchg
xchg
mov
jmp
pop
icebp
xor
nop
add
xor
pop
std
jmp
lock
orl
xor
popf
lcall
es
pop
iret
xchg
out
jl
pop
jns
lea
xchg
std
ret
dec
sbb
call
mov
mov
push
divb
jp
cmpsb
and
jbe
sti
mov
test
and
sub
inc
adc
inc
das
js
cmp
mov
sbb
jg
in
repnz
push
pop
dec
mov
mov
add
jle
mov
jmp
add
inc
xchg
mov
ret
jbe
and
std
lcall
int
sbb
gs
xor
ljmp
adc
fwait
sub
sbb
lds
push
test
mov
adc
pop
mov
push
icebp
and
fwait
pop
inc
mov
xor
cmp
push
int
scas
inc
in
mov
popf
push
jmp
mov
orl
call
ljmp
decb
stos
xchg
and
aas
rcpps
iret
fwait
shr
adc
dec
sbb
sbb
push
mov
push
jbe
push
gs
loopne
mov
sbb
into
inc
jo
push
push
cmp
adc
xor
fisubrs
add
stos
inc
arpl
les
es
sti
imul
int
inc
notb
or
nop
jecxz
sbb
fwait
dec
mov
jle
sbb
sub
mov
fstp
pop
shll
jle
xchg
loope
shlb
out
lds
mov
xchg
mov
sbbl
fwait
jle
mov
sarl
call
jge
cltd
jle
sub
sub
xchg
fnstenv
cmp
mov
bound
out
xchg
push
mov
jecxz
daa
out
dec
lcall
clc
lret
pop
mov
shlb
in
shrb
incb
push
mov
fidivl
xchg
lea
or
ss
loop
mov
lcall
les
repz
adc
pop
das
scas
inc
xor
sbb
jnp
popl
sahf
imul
or
scas
imul
adc
jp
out
pop
leave
adcb
sbb
repz
inc
mov
arpl
dec
mov
fs
cmp
sbb
or
stos
int3
adc
sub
aam
xorb
pop
mov
sub
sub
dec
pusha
xchg
or
cmp
in
nop
dec
mov
and
aas
in
mov
jmp
hlt
test
loop
rclb
push
js
out
rcr
push
test
or
xor
loopne
mov
adc
cmp
call
scas
insb
sbb
rol
lock
scas
dec
popf
je
and
int3
cmp
movsb
fistl
jl
sub
aam
adcb
pop
stos
add
xor
fcoml
pusha
mov
in
nop
outsb
mov
inc
rcrb
in
cwtl
jge
sub
sbb
enter
mov
fldenv
test
push
pop
add
sub
fdivs
pop
or
pushf
xor
popa
ja
mov
into
pushw
mov
xchg
mov
sbb
pushf
test
and
movsb
mov
sub
lods
pop
pop
loop
push
xor
xchg
mov
sub
or
cmp
lcall
adc
rolb
cwtl
cmp
popf
sbb
enter
mov
xchg
and
sarb
std
test
push
add
mov
fdivs
divb
cld
xor
loopne
mov
mov
sarl
mov
ja
lret
lock
pushf
leave
dec
mov
jo
fwait
clc
data16
ret
jl
sub
aam
cmpb
pop
addb
xor
mov
pusha
xchg
cmp
in
mov
fs
mov
xor
sbb
aas
inc
push
jne
mov
add
push
es
push
pop
xchg
pushf
js
frndint
sub
and
or
add
inc
stos
push
sbbb
lock
cmp
jp
out
orl
inc
dec
mov
push
cwtl
loopne
mov
and
int3
mov
push
mov
mov
call
lods
in
pop
mov
jo
mov
scas
scas
mov
push
mov
fisttpll
jp
pop
loop
fdiv
sub
cmc
add
sti
or
jne
and
lret
int
adc
sbb
xchg
jmp
cs
push
pop
mov
fsubr
mov
sub
adc
repz
xor
push
ret
cld
cltd
ret
pop
jge
cmp
mov
movsl
sub
xchg
repnz
add
sub
into
shlb
jp
push
out
sti
pop
mov
mov
xor
and
xchg
cltd
icebp
inc
cmpsb
lock
cli
adc
mov
dec
xchg
pop
add
pop
leave
ja
cwtl
lcall
xor
pop
cmovo
or
dec
pop
inc
mov
and
push
inc
lea
imul
aas
add
lods
pop
jno
int
sub
subl
mov
cmp
rcll
aas
or
imul
shl
fsubl
or
hlt
iret
add
jg
fcomp
mov
ljmp
inc
xchg
or
jmp
repnz
pop
sbb
pushf
and
cs
xchg
push
and
in
push
mov
in
fsub
jns
mov
add
rclb
sbb
mov
dec
mov
xchg
or
push
out
mov
ficomps
int3
mov
ficoml
test
mov
cmp
cli
sbb
test
in
cltd
pop
add
stos
and
fsubrl
xchg
sbb
call
mov
push
lahf
mov
ret
pop
mov
pop
cmp
add
jo
movb
mov
jnp
mov
les
adc
stos
outsl
inc
je
add
addr16
hlt
inc
flds
sub
and
mov
out
adcl
or
faddl
imul
push
sti
or
mov
rorb
sub
movsl
andw
js
sbb
fmul
bnd
and
xchg
adc
adcb
or
je
mull
aaa
add
aad
xchg
xor
lcall
or
pusha
scas
fs
lock
add
xor
add
pop
out
xchg
pop
mov
repnz
fadds
mov
loop
jge
cmp
cmp
jno
mov
jmp
inc
lea
gs
clc
cmc
add
push
pop
and
cltd
insl
ficomps
shlb
pop
mov
sbb
shl
pop
shll
xchg
mov
popa
and
sub
pop
imul
and
jae
jmp
jnp
mov
mov
and
inc
std
in
test
int
arpl
or
mov
mov
mov
ret
mov
ss
daa
sub
and
push
movsl
xlat
rcl
jbe
js
xor
dec
lcall
mov
mov
js
sbb
sbb
add
inc
xor
sub
mov
sahf
xor
sbb
out
je
imul
scas
sub
xlat
aam
inc
push
adc
or
jae
jne
jbe
iret
jmp
fwait
add
xchg
and
xlat
ds
inc
es
test
sbb
fistps
push
cmp
pop
aam
lret
leave
lds
push
insl
testb
pop
insl
push
stos
in
out
mov
sbb
cmpsl
insl
sub
rcll
add
orl
ds
das
loope
js
push
addr16
mov
inc
push
mov
mov
repnz
push
pushl
ret
pop
jbe
addr16
or
stc
mov
inc
int3
mov
sahf
daa
shll
jle
jnp
stc
mov
xchg
or
or
int3
dec
test
or
add
fists
out
not
push
xchg
push
inc
popa
adc
mov
xor
scas
xor
dec
test
jns
lahf
xchg
int
sub
int
sbb
sbb
fmuls
pop
je
jmp
mov
insl
or
in
inc
xor
xchg
adc
stos
out
mov
loopne
scas
adc
mov
data16
lods
repz
pop
sub
sbb
std
xchg
cmp
outsb
xchg
adc
scas
pop
out
aaa
out
test
es
lcall
mov
inc
cwtl
xor
enter
inc
imul
or
xor
js
xor
cmp
shl
xor
push
ss
cltd
sbb
xor
adc
mov
cmpsb
and
cli
subb
notl
adc
out
daa
mov
mov
cmp
test
scas
popf
and
pop
dec
mov
xchg
or
mov
xor
inc
pop
jbe
pop
sbb
add
imul
in
lcall
add
insb
or
int
mov
jecxz
je
pop
xor
xchg
test
adc
je
fcoms
daa
loop
xor
popa
sub
jl
das
test
add
insl
rclb
and
ljmp
pop
mov
add
cli
jg
aaa
bound
leave
jne
jo
rcrb
mov
mov
loop
inc
mov
xor
sbb
xor
call
cmp
std
dec
push
pop
mov
data16
pop
mov
adcl
sbbl
mov
out
push
or
inc
cmp
xchg
add
popf
call
insb
cmpsl
in
scas
stc
pop
mov
pop
pop
mov
add
inc
xor
mov
icebp
pop
addr16
cs
mov
popa
cltd
push
pop
fsubs
test
dec
add
dec
aad
mov
mov
mov
jmp
mov
aad
in
rcrl
jbe
pop
cs
test
into
call
push
jo
lcall
sarb
cmpsb
or
cwtl
cmp
xchg
jbe
mov
add
leave
scas
pop
push
cmp
out
lcall
cmp
test
in
xor
xchg
dec
out
sahf
out
cmc
push
gs
cmpsb
neg
mov
cmp
mov
test
sub
mov
data16
add
fwait
mov
mov
sbb
mov
push
or
loop
push
xor
xor
sub
adc
js
xchg
mov
jmp
shl
adc
mov
xor
and
cmp
and
cmp
loop
mov
add
lods
jecxz
inc
cmp
and
mov
dec
xor
pop
lahf
les
pop
je
fcompl
cmpsl
xor
jp
test
gs
lods
frstor
fnstsw
rolb
push
cmp
ficomps
jg
scas
bound
xchg
sbb
xor
pop
clc
cmpsb
xor
loopne,pt
cmp
inc
adc
in
shlb
pop
adc
out
xor
out
sbb
inc
outsb
jne
xchg
fisttpl
mov
cmp
push
out
call
loop
inc
push
bound
dec
dec
lods
jmp
lods
js
out
push
es
repnz
filds
and
mov
mov
in
jmp
ljmp
mov
push
xor
mov
test
loopne
aam
push
daa
mov
and
inc
leave
pop
inc
xchg
scas
lcall
jns
fldenv
jge
dec
inc
dec
lods
jb
ja
ficompl
add
jp
mov
sub
sbb
pop
ret
movsl
mov
hlt
adc
movsl
adc
xchg
subb
xchg
out
push
movhps
jne
inc
outsb
adc
scas
repz
mov
lods
inc
xchg
mov
fdivrs
fisubl
mov
out
inc
lds
ds
loopne
aad
push
ss
std
bound
test
dec
mov
data16
or
lcall
repnz
mov
dec
xchg
mov
cmpsl
fs
or
cwtl
mov
push
mov
push
mov
mov
cmp
sbb
js
jno
adc
pop
mov
ret
data16
rorb
cmp
lods
cmpl
fildl
jl
and
hlt
insl
aaa
jo
jno
outsb
mov
add
ret
and
inc
adc
adc
jo
das
fcomps
jp
push
ljmp
scas
int
std
or
mov
int
lret
cmp
add
mov
cmc
les
xchg
fs
mov
mov
fsubr
insb
inc
pop
xchg
pop
call
shll
push
mov
je
xchg
leave
mov
out
inc
adc
insl
mov
xor
inc
cmpsb
fmuls
pop
jbe
pop
data16
inc
iret
std
mov
daa
adc
cmp
xor
movhps
imul
jle
fcompl
lds
push
cld
outsl
lcall
jle
fwait
arpl
push
or
add
daa
rcrl
jle
andb
movsl
mov
dec
adc
lcall
inc
in
lock
cltd
repnz
cmp
fsub
dec
add
jle
outsl
jp
repz
jg
dec
or
lock
cld
std
clc
or
or
jae
ds
into
nop
sbb
dec
imul
fadds
inc
pop
aam
push
mull
lods
scas
daa
mov
push
add
push
add
push
or
mov
xchg
xor
test
inc
es
lods
testl
and
hlt
mov
push
push
pop
lock
or
xor
enter
dec
insb
in
stos
inc
scas
sbb
cmpsb
xchg
push
xchg
mov
inc
lock
hlt
mov
call
sub
jb
call
shl
or
and
cwtl
ret
mov
scas
pop
or
sub
xor
mov
stc
ss
pop
scas
xchg
outsl
lods
ret
dec
add
fsubrl
jecxz
sub
or
scas
sub
in
jmp
jmp
sbb
mov
jmp
lock
mov
inc
test
mov
cmpsb
sbb
mov
xchg
lret
shlb
mov
out
out
iret
xlat
and
mov
int3
call
sbb
xchg
in
neg
push
insb
push
xor
sub
sub
and
mov
leave
mov
das
push
lret
dec
loop
jb
js,pt
push
or
inc
cmpsb
push
lahf
js
mov
ljmp
cld
movsb
in
es
aas
sub
gs
add
shrb
popa
sbb
add
adc
xchg
xchg
testl
loope
in
mov
js
xorb
outsb
imul
xchg
ljmp
dec
push
mov
jl
sbb
outsb
pop
mov
out
std
out
mov
or
dec
mov
adc
add
mov
xchg
sbb
dec
mov
xor
push
insb
and
fwait
popf
pushw
fstps
dec
adc
push
cmpsl
jo
cmc
aad
xor
mov
cli
or
inc
or
bound
pop
adc
test
les
jae
mov
sbb
inc
pop
jecxz
xchg
cmp
push
repnz
mov
xchg
push
loop
xchg
sub
sbb
sub
pushf
sbb
scas
repnz
pushl
jno
pop
data16
and
sbb
mov
xchg
mov
add
mov
jg
jp
cld
out
enter
add
jne
jg
pop
jbe
adc
mov
lods
cmp
push
and
sahf
popf
loopne
fistl
push
cld
mov
jmp
jbe
jne
cwtl
enter
add
outsb
in
jecxz
sahf
lods
fdivrl
xor
cltd
xor
ja
mov
jmp
jg
in
ret
test
aad
cmp
icebp
lods
mov
sbb
push
push
cmp
mov
push
cmpsb
push
sbb
ret
cwtl
xorl
xor
mov
cmp
divb
and
scas
inc
out
mov
arpl
mov
add
ds
or
fidivrl
dec
push
sub
insb
xor
inc
xlat
lret
loopne
popa
push
pop
mov
shlb
xchg
stc
mov
mov
out
jne
imul
ss
test
repnz
lahf
mov
cmp
out
aam
push
xchg
repz
aam
adc
adc
shll
xchg
mov
and
or
inc
cmp
cmpsb
lods
sub
icebp
adc
fs
das
aas
std
push
data16
add
decb
lahf
sbb
and
bound
mov
int
xchg
sbb
jo
push
fwait
out
xchg
hlt
lods
in
xchg
dec
and
mov
push
outsl
jp
loop
cwtl
shr
fnstcw
sub
ja
pusha
cmc
loop
repnz
sub
imul
adcb
sahf
inc
and
fnstenv
xchg
pop
test
nop
xor
jb
sbb
jns
jae
fbstp
push
push
dec
dec
jmp
aad
frstor
pushf
dec
sahf
or
mov
fsubp
inc
sub
mov
cld
out
shl
jp
or
mov
aad
aaa
fnsave
frstor
dec
jl
clc
mov
jg
je
popa
mov
aad
adc
xchg
push
pop
stos
scas
ds
adc
je
es
cmpsl
jg
xchg
mov
stos
inc
jecxz
or
je
movsb
xor
ret
add
fistpl
sti
sub
xchg
sub
imul
sar
lcall
icebp
mov
lods
cmpsl
pop
ss
aad
add
jecxz
popf
jle
push
cld
dec
mov
xchg
cmp
jmp
inc
fcoms
sub
nop
ss
sub
lods
xor
push
into
sahf
jmp
push
jnp
mov
arpl
adc
add
movsb
and
sbb
clc
loop
mov
int
and
adc
outsb
push
xchg
rep
les
xorb
fcompl
add
cmp
movsb
lock
pop
mov
mov
pop
dec
test
xor
fnstenv
sub
cmp
dec
ja
mov
jnp
loop
ljmp
ds
xor
jge
ja
xchg
mov
jecxz
mov
or
mov
dec
rorl
out
ljmp
in
fists
into
adc
loope
icebp
and
punpckldq
scas
inc
add
pop
in
mov
in
jno
xor
fadds
imul
sub
inc
ret
dec
mov
ret
add
xor
icebp
outsb
and
dec
js
adc
sti
xchg
cmc
dec
inc
pop
int
test
hlt
jp
adc
cmp
mov
mov
jno
ljmp
xchg
mov
pusha
shlb
mov
pop
sub
xor
inc
and
sbb
fbld
push
mov
scas
mov
cmp
mov
fwait
jbe
outsl
add
cltd
inc
and
or
outsl
shlb
dec
push
aas
jb
test
ret
jmp
int3
fldl
out
or
adc
popa
cmp
cmpb
inc
cwtl
cmp
dec
add
add
dec
jmp
aaa
test
push
pop
pop
inc
incb
xchg
pop
xchg
cli
mov
mov
mov
pop
adc
xor
inc
mov
add
push
ret
dec
add
cmp
jns
sbb
dec
adc
jp
push
mov
cmc
lret
ljmp
jg
sub
fmull
je
or
mov
shll
mov
int
lock
movsl
push
add
xchg
or
add
rcrb
pop
scas
fwait
test
dec
cmc
addr16
stos
pop
push
dec
fwait
pop
out
adc
cmp
and
out
cmpsl
adc
in
lcall
push
sub
test
cmp
inc
ss
mov
xchg
popa
mov
jecxz
cltd
xor
inc
jge
mov
dec
and
insl
cwtl
mov
dec
lds
cwtl
sub
test
or
mov
divl
fs
add
and
test
into
movsb
pushf
sub
sub
ret
adc
xchg
adc
xor
push
hlt
movsl
add
stos
mov
in
inc
pushf
outsb
loop
lock
nop
mov
cmpb
lock
mov
lods
sbb
pop
adc
cld
lahf
inc
mov
daa
aaa
loopne
xor
enter
cmp
xchg
adc
mov
fsubrp
adc
lcall
mov
mov
dec
xchg
das
mov
push
mov
xchg
clc
outsl
xchg
stos
cmp
xor
or
out
push
scas
scas
lcall
jb
mov
jmp
lds
mov
out
mov
fnsave
fsubrl
std
fcompl
jle
in
jae
das
xchg
cld
ja
pop
add
cwtl
push
ficoml
xor
pop
jmp
pop
int
mov
iret
cmpsl
lret
jns
inc
pop
xchg
jp
pop
imul
dec
mov
loop
jne
sbb
sarb
push
cmp
mov
mov
imul
cmpsl
mov
fisubrs
movsl
mov
cli
mov
push
pop
stos
mov
sbb
dec
adc
pop
cmc
pop
stos
mov
fsubl
dec
leave
xchg
push
std
sub
jae
or
outsb
repz
jle
leave
pop
jo
ja
ja
js
insb
adc
inc
insb
test
push
pop
stc
in
clc
mov
cmp
cwtl
outsb
out
or
lea
xlat
loopne
sbb
sbb
scas
movsl
sbb
inc
mov
xchg
gs
ss
ljmp
mov
dec
xor
jmp
inc
mov
cmp
pop
mov
dec
jb
idivb
jl
jg
mov
push
sub
test
inc
mov
nop
add
sahf
inc
mov
and
imul
scas
cld
clc
xchg
sub
addb
cli
mov
stos
out
xor
sub
js
aam
stos
adc
call
xchg
inc
mov
adc
fucomi
jge
aam
mov
shlb
sbb
lods
cmpsl
jns
loope
enter
cmpsl
jg
mov
enter
in
test
push
ja
jp
sbb
outsb
adc
cld
mov
jp
mov
sahf
push
lock
mov
lahf
icebp
cmp
xchg
cmp
xlat
mov
mov
jle
jge
aad
fstpl
mov
push
inc
cli
aas
insl
ljmp
mov
xchg
cltd
rcrb
inc
cli
mov
cmp
bound
daa
out
cmp
popa
divl
mov
mov
xor
add
imul
pop
scas
mov
jno
push
ds
jmp
pop
cmp
xor
pop
adc
cmp
jne
leave
ret
leave
jae
push
into
shll
lret
or
dec
or
je
inc
jle
sub
xchg
inc
out
cs
mov
sbb
sub
adc
mov
or
test
jne
push
lods
mov
xchg
xlat
push
pop
mov
roll
je
cld
sti
ljmp
pop
sbb
lcall
push
lcall
and
inc
rcrb
iret
bnd
mov
fistpl
ja
push
aas
mov
mov
jmp
push
add
jne
dec
jge
adc
lods
push
fldl
adc
adc
movsl
imul
call
cs
cmp
add
lcall
push
pop
test
add
fwait
jmp
mov
jo
int
jne
fs
mov
andl
ret
fistpll
dec
cs
lods
or
jg
inc
mov
mov
add
sub
stos
bound
popa
xor
out
sub
mov
into
ss
push
data16
loop
shll
jecxz
pushf
dec
lods
popa
js
xor
leave
dec
push
fwait
mov
sahf
arpl
in
test
ss
repz
mov
std
movsl
dec
jbe
clc
pop
aaa
and
out
mov
push
add
in
out
fdivl
jmp
mov
aad
pop
daa
lds
dec
or
xchg
fs
mov
xchg
dec
mov
out
and
mov
and
cmpb
or
sub
jmp
mov
push
or
cmp
mov
inc
or
and
jg
in
leave
xchg
fistpl
fnsave
out
data16
add
xor
int
mov
pushf
xchg
or
dec
jle
sahf
sbb
js
test
call
mov
mov
xchg
and
hlt
jo
iret
sub
inc
push
pop
push
mov
outsb
add
or
mov
cltd
pop
jns
and
sahf
mov
stos
arpl
mov
sbbl
dec
push
mov
or
test
add
sbbb
mov
stos
inc
in
data16
adc
or
pop
add
mov
xor
xor
lret
xchg
pusha
cwtl
inc
cmp
lret
adc
mov
push
imul
push
std
imul
mov
xlat
movsb
mov
pop
jnp
ret
data16
mov
xchg
cwtl
lret
sbb
add
mov
jle
sar
sbb
insb
test
lcall
scas
push
or
mov
xchg
dec
ss
cmp
dec
xchg
mov
or
dec
and
push
pusha
lods
jle
mov
cmpsb
int3
aas
cmp
addr16
pop
test
stos
sbb
imull
push
stos
xchg
sub
stos
movsl
mov
out
jbe
jge
pop
adc
mov
sbb
ja
add
rcrl
cmp
test
jbe
ljmp
xchg
out
pop
mov
cwtl
sub
inc
xor
andl
inc
arpl
shl
jp
push
enter
imul
out
ret
out
adc
and
cmp
lahf
push
cmp
sti
mov
std
xor
sub
pop
jle
mov
iret
push
sbb
sbb
repz
xchg
xchg
add
lret
divl
inc
and
shlb
es
jge
notb
adc
mov
mov
iret
push
jg
fimull
xchg
sub
leave
clc
leave
dec
insl
push
push
cmc
jo
addb
into
pop
jns
pop
lock
call
je
xchg
repnz
jmp
add
mov
daa
or
or
inc
inc
stos
pop
push
fistl
xchg
ret
dec
rcrb
push
gs
adc
pop
lcall
pop
inc
and
arpl
jb
xor
dec
mov
pop
mov
lods
sub
inc
sbb
jb
pop
ret
adc
sub
inc
xchg
inc
testl
push
std
ja
sub
icebp
fstl
jno
xor
mov
cmc
mov
cmpb
push
subl
cmp
xchg
scas
push
mov
mov
pushl
arpl
cs
bnd
nop
sub
dec
ss
xlat
push
cli
cmp
dec
pushf
or
mov
cmp
fiadds
pushf
push
cmpsb
push
scas
int3
cmp
mov
mov
add
lret
mov
ds
repnz
lds
shlb
sbb
inc
decb
mov
push
fmuls
in
mov
adc
and
ds
loop
sbb
and
arpl
mov
mov
in
lods
mov
inc
sbb
push
or
add
jmp
add
xlat
es
icebp
add
mov
xchg
push
xor
adc
sbb
add
ficompl
outsb
lea
ljmp
add
ja
push
cmp
add
fldl
cltd
ljmp
dec
lods
outsb
sti
sub
sbb
cwtl
faddl
inc
out
cmp
subl
cmpl
int
adc
pop
xor
insl
jmp
inc
lock
shr
jb
popf
rcrb
push
inc
xchg
rclb
jb
out
adc
adc
sub
xchg
fwait
les
cli
lret
mov
sub
out
cmpsb
mov
movsl
pop
mov
mov
pop
add
sahf
push
push
push
cmp
jbe
in
pop
ljmp
je
leave
adc
rcll
xor
inc
shrb
sbb
sub
cmc
test
insb
gs
aad
shll
test
dec
rorl
mov
incl
push
push
sbb
push
fnsave
ljmp
jecxz
cmp
xchg
adc
push
pop
repnz
jp
pop
out
out
pop
fsubl
and
fistl
adc
lret
pop
aas
mov
stc
add
loope
jb
ja
xor
sbb
inc
repnz
mov
int3
lcall
add
dec
and
or
stos
sub
mov
cmp
mov
jnp
xorb
rol
push
add
aas
dec
in
repnz
mov
cmc
int
js
pop
cmp
adc
dec
scas
outsl
adc
fldenv
cmp
mov
adc
jno
or
pop
adc
loop
movb
in
pop
and
test
pop
mov
sub
pop
xchg
dec
or
out
int
mov
push
bndldx
iret
xchg
pmaxub
inc
xor
xchg
loope
adcl
loope
adcl
inc
pop
xchg
xchg
adc
mov
mov
push
add
repnz
movsb
mov
outsb
icebp
cmp
inc
rol
or
jae
sbb
out
add
jns
inc
iret
mov
push
add
inc
push
divl
pop
dec
test
dec
mov
dec
sub
or
mov
call
sub
lods
and
clc
test
cld
jno
addb
xor
adc
sahf
fisttpll
or
lret
sbb
sub
mov
xor
in
outsl
gs
rolb
dec
dec
or
mov
jmp
in
and
cmp
add
fsts
xchg
stos
sbb
fcompl
das
rclb
sub
adc
mov
cmp
pop
fs
inc
sub
fisttps
add
lock
inc
loopne
pushf
es
push
daa
inc
cld
ficompl
rcrl
xchg
or
mov
push
mov
xlat
mov
out
xchg
or
imul
arpl
xor
and
rorl
inc
das
lea
adc
xor
xchg
nop
or
pop
jb
cltd
in
enter
or
adc
lods
loope
out
xor
jno
push
jb
pop
cmp
push
ljmp
insb
xor
pop
jg
pusha
adc
icebp
sub
js
add
cmp
lahf
dec
movsb
xor
mov
rcrb
mov
inc
adcb
insl
repnz
stos
push
jae
jecxz
outsl
xchg
into
stc
mov
and
adc
adc
test
in
sub
lret
mov
and
inc
jae
pop
add
outsb
lcall
sub
in
stc
js
xchg
mov
dec
push
inc
negb
mov
movsb
jp
push
pusha
mov
pop
sbb
add
pop
sub
rol
push
mov
dec
repz
mov
jl
bound
popf
stos
std
lods
hlt
xchg
sbb
addr16
mov
addr16
ret
repz
out
dec
cmpl
xchg
lret
das
xchg
mov
inc
jno
jo
cmp
xlat
jge
lock
dec
insl
sbbb
jl
outsl
mov
shll
push
push
mov
add
xor
cmp
clc
xor
adc
out
lahf
les
inc
jnp
rorl
repz
mov
outsb
stc
jo
mov
mov
pop
cwtl
sbb
inc
loop
ret
push
popa
lcall
mov
xchg
outsb
add
data16
mov
aas
rorl
aaa
mov
or
lret
or
test
adc
in
ret
popf
add
shl
roll
insb
mov
daa
add
xlat
add
xor
ret
xor
jne
and
stos
sub
ror
aam
sti
mov
lods
dec
push
hlt
arpl
dec
mov
incl
lea
sbb
xchg
sbb
inc
pop
xor
out
inc
dec
mov
sbb
enter
mov
cwtl
xor
lods
cmc
shlb
pusha
sbb
inc
gs
jge
mov
pop
inc
out
stc
sub
inc
sub
jb
aas
adcl
into
mov
shll
pop
fstpl
cwtl
icebp
xlat
enter
inc
sbb
add
outsl
icebp
lret
rol
fnstenv
xchg
call
mov
cmpsl
add
mov
aaa
call
cmp
mov
pushf
adc
movsl
in
or
inc
outsl
lock
lret
pop
sbb
sub
in
aad
xchg
dec
mov
lret
hlt
jecxz
loopne
sub
inc
ds
mov
notb
in
inc
inc
mov
mov
mov
leave
push
push
aaa
add
add
or
cmp
xor
flds
stc
cs
xchg
cmp
mov
fcom
nop
lahf
clc
dec
repz
int3
rorb
xor
pusha
lods
fdiv
inc
push
repnz
or
mov
hlt
outsl
popf
add
out
sbbl
in
mov
loope
ficoms
cmp
inc
lcall
sar
mov
sub
bound
scas
mov
jae
ja
push
xor
xchg
cmp
fmul
jns
inc
sub
xor
cwtl
jl
ret
sahf
mov
out
sub
imul
in
jp
xchg
mov
in
lods
mov
add
jne
insl
insl
loopne
test
push
cmp
inc
mov
sub
push
xchg
dec
lcall
sub
push
cmc
lods
enter
and
faddl
lods
dec
enter
cmpb
and
sbb
lock
jmp
iret
es
cli
mov
je
jmp
mov
orl
test
sbb
ljmp
mov
arpl
cmpsb
mov
pop
xor
pop
fnstcw
adc
out
dec
dec
daa
pop
pop
mov
xor
addr16
mov
inc
pusha
data16
fsubr
stos
pop
movsb
cwtl
cmp
push
lret
mov
das
in
push
in
dec
fcomps
sarb
cltd
int
pushf
sti
and
push
into
into
cli
push
add
daa
pop
sub
sahf
sbb
push
das
movsl
sbb
stos
popa
es
ss
imul
push
mov
mov
inc
subb
adc
cli
es
leave
jns
pop
mov
decb
pop
outsb
leave
xchg
cmp
jg
sub
inc
ljmp
jmp
fcmovu
enter
push
xor
int3
movsb
jmp
leave
push
xchg
add
and
or
popl
fwait
lret
sysexit
cmpl
lea
push
frstor
bswap
inc
pop
pop
pop
in
ljmp
out
pusha
and
jo
adc
jns
rorb
jg
xchg
daa
addr16
pop
xchg
jns
mov
addr16
mov
adc
and
cmpb
push
lock
stc
outsl
pusha
push
mov
cwtl
test
mov
lea
call
ds
mov
xchg
add
cmpsl
frndint
les
loop
or
jo
sub
scas
stc
cmp
dec
xor
pop
in
filds
bound
imul
sbb
addr16
jle
gs
xlat
push
add
push
mov
inc
xor
ret
fstp
lods
mov
push
mov
test
xor
sub
cmp
call
push
cmp
in
jle
mov
mov
jle
out
aaa
add
push
dec
mov
cld
in
test
mov
inc
mov
pop
inc
incl
fadds
les
cs
pop
add
repnz
int3
ret
jbe
inc
adc
push
out
cmpsl
jb
xchg
popa
jbe
mov
sbb
cmpsb
adc
test
dec
mov
enter
lcall
inc
les
xchg
repz
ljmp
stos
and
insb
stos
and
push
jg
push
std
fsub
inc
pop
mov
cmc
repz
das
popf
dec
lock
mov
xchg
pusha
lea
shl
dec
mov
inc
pop
pop
xchg
inc
lods
xchg
sub
mov
aam
test
insb
fldcw
pop
cmp
lods
pop
mov
fdivrs
adc
orl
fwait
mov
jnp
ret
adc
jb
lea
add
and
pop
stc
mov
xchg
cld
inc
xchg
aad
sbb
in
ds
sub
jnp
xchg
mov
outsb
mov
cld
xor
push
xorb
and
mov
leave
scas
test
std
adc
out
jbe
inc
push
mov
imul
push
cmpsb
mov
je
xchg
in
shll
push
xchg
das
inc
fwait
pop
lcall
push
pop
aaa
push
sbb
push
sahf
scas
fimuls
mov
mov
push
add
ret
sbb
out
mov
or
jmp
push
cmp
push
imul
cmp
xchg
xchg
xor
or
mov
bound
sub
movsb
popa
push
lods
fimuls
lea
push
int
pop
in
mov
aam
nop
xchg
push
cmp
jb
subb
sbb
sub
shrl
andl
xor
sbb
push
xor
int3
dec
jno,pt
xor
mov
pop
push
or
and
int
fstl
mov
and
lcall
out
int3
je
je
icebp
mov
cltd
mov
arpl
push
mov
ljmp
lret
js
fcmovnbe
xchg
mov
mov
in
sub
enter
ss
or
xchg
lods
mov
test
loope
xchg
adc
shlb
pop
or
dec
sbb
lds
pop
sbb
mov
cmpb
push
xchg
cwtl
jge
pushf
fs
ja
jne
lret
jle
pusha
or
mov
cld
jecxz
xchg
cmp
fmul
sub
mov
and
xor
pop
out
mov
pop
pusha
cmpb
repnz
jg
jle
insl
addl
push
push
es
rclb
arpl
sbb
aas
push
jnp
jg
and
popa
or
dec
push
test
jp
mov
push
xchg
into
mov
dec
ds
inc
lea
shrb
sahf
fdiv
ljmp
scas
out
ja
add
fnsave
mov
inc
scas
xchg
pop
cmp
test
xor
or
pop
addr16
insb
push
popf
repz
into
pop
jmp
fsubrs
cs
pop
inc
pop
cmpsb
cmp
mov
xor
mov
je
sub
inc
jmp
ss
push
stc
mov
stos
or
inc
and
inc
mov
xchg
jge
out
sub
pop
pop
ret
mov
sbb
and
adc
ljmp
test
cltd
or
enter
ficompl
jmp
add
rolb
int
adc
or
in
push
push
in
cwtl
out
insl
mov
dec
push
push
rcrb
push
aaa
lea
fwait
pusha
fwait
mov
cld
sub
pushf
xchg
inc
les
mov
aas
and
mov
and
repz
sub
fcmove
je
mov
dec
jbe
xor
cmp
pop
and
mov
clc
imul
dec
stos
and
lods
xchg
bound
sti
loopne
sahf
xchg
inc
shlb
cs
arpl
inc
adc
std
and
lock
aas
sub
inc
xchg
adc
pop
xor
iret
and
es
jge
sub
insb
push
mov
jae
adc
pop
xor
pop
ficompl
int
add
inc
mov
movsb
inc
stos
xor
testl
lret
in
je
shr
repz
adc
jl
negb
arpl
push
xor
mov
fcmovu
jle
leave
shr
pop
pop
adcl
cs
jo
cmp
ret
fdivrl
lock
push
xchg
scas
mov
fwait
adc
xor
xchg
addr16
shlb
fsubl
popf
pop
push
ret
jno
scas
les
dec
sbb
fbld
movl
mov
fcomip
sbb
repz
jl
int3
jo
daa
or
jbe
mov
sbb
std
xchg
daa
paddw
cmp
jp
sub
mov
xchg
mov
adc
cmp
iret
dec
je
in
lret
mov
and
gs
push
dec
mov
pop
jne
aad
xor
mov
pusha
pop
mov
repz
addb
ja
insb
loopne
enter
push
mov
data16
insl
jecxz
xor
out
imul
mov
repz
sbb
add
les
sub
mov
xor
xor
add
dec
mov
inc
call
push
sti
adc
into
dec
fists
push
or
jecxz
shlb
mov
es
xor
cmp
push
cmp
loop
mov
imulb
mov
inc
pop
and
or
jbe
or
lea
mov
sahf
lds
push
mov
lods
dec
das
std
adc
outsb
push
or
xor
cmp
and
mov
mov
jecxz
rcll
jns
mov
pop
sti
addr16
mov
mov
mov
jne
test
sbb
jl
push
jno
jb
inc
inc
or
cmc
adc
jp
or
or
jnp
pusha
testb
dec
iret
outsb
jae
jge
mov
rcrb
sbb
or
cwtl
mov
mov
jge
lret
fs
das
daa
mov
push
push
cld
cmpl
push
mov
inc
sub
xchg
pop
fnstenv
and
stos
popf
movb
pop
ss
testl
les
dec
mov
je
and
aas
pop
xor
ficoms
enter
sti
jmp
pop
cmp
mov
jnp
cmp
mov
sub
not
add
cli
enter
jb
push
push
mov
outsb
add
ficoml
jne
jle
add
jg
js
loop
fdivrl
or
mov
outsl
dec
lds
push
inc
addr16
sub
push
cmp
sarl
scas
hlt
or
cmpsl
inc
sub
aad
cmp
loopne
xor
mull
movsl
inc
or
jg
test
aas
jno
out
mov
pop
lds
jecxz,pt
add
add
jae
pop
jno
out
enter
xchg
pop
sub
sbb
mov
lahf
cld
xchg
push
xlat
pushf
dec
ficoml
adc
jo
jb
mov
inc
xor
cs
pusha
sbbb
movsb
movsb
or
imul
xor
mov
insb
sbb
mov
scas
sub
and
cmp
add
sub
mov
xor
div
xor
xchg
and
xorb
loope
mov
mov
fisubs
insl
mov
mov
mov
dec
iret
pop
mov
lret
xor
arpl
inc
fldt
push
stos
or
mov
mov
lret
ljmp
dec
or
mov
mov
pop
jnp
jo
or
or
mov
cmc
jno
pop
int3
xor
jecxz
data16
stos
sbb
pop
adc
jg
shr
mov
arpl
popa
mov
xor
loop
mov
xor
inc
push
push
sahf
ja
mov
xchg
test
dec
jae
test
mov
enter
rclb
pop
pop
sbb
xor
shr
adc
sti
nop
pand
arpl
sub
in
mov
unpcklps
nop
sub
into
cmp
nop
and
mov
fnstenv
in
mov
stos
and
in
les
push
insb
pop
imul
jl
sub
jns
out
sub
sub
ja
mov
jo
notb
jle
inc
mov
ja
imul
popa
and
and
mov
movsb
jl
mov
sbb
leave
or
scas
mov
mov
movsl
insb
fstpl
rol
fistpl
fstps
and
out
cltd
iret
and
mov
xor
jno
mov
mov
xlat
jmp
frstor
adc
dec
sub
fisubrl
ficoms
je
dec
jae
data16
push
cmp
test
adc
push
and
jne
repnz
adc
push
mov
add
sub
gs
sbb
push
faddl
cld
adc
leave
jmp
cs
dec
or
xchg
out
xlat
sbb
ss
in
sbb
fstps
cld
in
cmp
loope
clc
push
xchg
loope
jp
cmpsl
pop
data16
sbb
add
and
out
xchg
push
mov
xor
popf
xchg
and
dec
pop
add
dec
sub
jle
inc
or
fwait
stos
es
xchg
push
pop
mov
lret
inc
insl
cwtl
leave
sbb
sub
add
test
cmp
ds
xor
push
jnp,pn
loop
mov
mov
inc
stos
rol
cmp
jg
mov
stos
cmp
clc
xor
jl
push
das
xor
xchg
mov
mov
add
rcll
std
mov
pusha
and
in
push
in
fs
jle
sub
add
mov
call
aaa
adc
cmp
inc
dec
mov
jecxz
lods
fbld
cmpsl
sbb
xor
jmp
mov
xchg
mov
inc
leave
xor
mov
dec
mov
dec
inc
int
xor
lea
int3
push
or
dec
repz
outsb
jae
cmp
sahf
pushl
mov
sub
in
dec
fisubs
imul
cmp
adc
test
mov
fistps
jge
sbb
sub
jo
test
sbb
into
and
push
mov
nop
outsb
adcl
lahf
and
pop
clc
smsw
scas
leave
lret
dec
push
sub
cwtl
scas
jl
inc
jl
jno
bnd
mov
jno
push
int
mov
sub
add
gs
and
icebp
stos
push
int3
scas
cld
and
stc
sbb
jg
jmp
jg
mov
call
jge
cmpsl
aam
inc
jg
pop
inc
mov
fs
pusha
je
lock
add
mov
lods
mov
mov
aaa
inc
hlt
mov
push
push
iret
out
arpl
jo
add
jmp
mov
or
cli
adcb
sub
xchg
push
out
clc
jmp
sar
repz
cmp
mov
push
inc
scas
or
movsl
xlat
jno
mov
mov
and
mov
lret
sbbl
leave
pop
inc
shll
adcb
test
inc
js
xchg
and
stos
lret
inc
ret
ss
adc
mov
jecxz
sbb
push
push
pop
dec
hlt
lods
sbb
mov
pop
scas
movsb
inc
cmpsb
mov
pop
ja
xchg
add
push
lods
clc
mov
sub
xor
inc
pop
outsl
pop
sbb
xchg
xchg
in
cwtl
popf
js
in
jb
or
and
add
aas
mov
and
cmc
mov
out
call
jle
and
push
iret
jb
pusha
cli
adc
jmp
aam
cli
xchg
fsubrs
out
sbb
ror
call
mov
cwtl
xchg
cmc
sahf
out
shlb
jns
sub
js
outsb
mov
fdivl
sahf
add
mov
mov
in
push
test
mov
es
push
push
sub
or
cmp
push
ror
insb
repnz
sbb
ljmp
sbb
ret
cmpsb
jnp
mov
pop
jg
or
mov
hlt
out
mov
iret
sub
sub
push
pop
subps
fldenv
cmp
push
jmp
adc
jbe
push
or
jl
dec
stc
mov
mov
js
lret
shll
hlt
push
stos
mov
test
sarl
enter
push
cmp
cld
push
pushf
imul
int3
adc
in
lods
push
hlt
and
lock
pop
sub
shlb
leave
mov
adc
adc
jae
nop
xchg
push
jb
sbb
cmpsl
stos
loope
je
das
xchg
xchg
clc
mov
jle
dec
jl
decl
cs
xchg
mov
xchg
lea
xor
pop
dec
pop
mov
xchg
je
insl
push
add
hlt
adc
sti
and
in
push
adc
mov
mov
and
cmp
adc
fs
pop
jno
fwait
ror
fsubrs
jmp
mov
leave
repz
xchg
pop
jbe
es
mov
push
ficoms
aam
cld
les
int3
or
ficompl
cwtl
cs
mov
dec
sbb
lock
mov
daa
aaa
cwtl
xor
inc
and
sti
jmp
mov
jbe
inc
jecxz
sub
data16
outsl
and
adc
mov
or
outsl
adcb
pop
dec
add
push
loopne
scas
and
and
adc
xor
out
out
xor
mov
cmc
mov
pop
xor
add
orl
xor
ret
rolb
cmp
inc
imul
pop
movsl
std
mov
push
movsb
push
in
imul
cld
mov
and
fstpt
in
cli
mov
lahf
xchg
or
xor
dec
mov
or
add
test
jg
shrl
push
pop
leave
xor
lods
mov
xchg
xor
decl
sbb
stos
insb
scas
xchg
xor
mov
stos
enter
mov
mov
insl
sahf
sti
xchg
gs
test
dec
loope
fisubs
imul
test
sti
inc
pop
loop
xchg
imul
incb
arpl
and
adc
add
sbb
in
mov
xchg
les
les
ljmp
gs
mov
iret
mov
fisubrs
jmp
xor
cmpsl
sbb
je
stc
add
mov
in
stos
jmp
dec
shr
inc
push
sub
cmp
add
lcall
sbb
jg
sub
push
jbe
xor
popf
xchg
jmp
jp
dec
ss
fsubl
jnp
adc
ss
ljmp
xlat
imul
xor
inc
jae
inc
fiaddl
loope
arpl
adc
add
or
ljmp
js
loop
and
into
aaa
push
xor
popf
in
in
pop
scas
mov
mov
scas
arpl
les
mov
xchg
pop
int3
orl
lods
pusha
das
xor
ret
sub
fiaddl
add
adc
push
jnp
cmp
xchg
addr16
push
andb
int
addb
cli
sbb
cmpsl
jb
sbb
test
inc
push
ljmp
mov
push
sahf
rcrb
icebp
jp
enter
xchg
bound
mov
pop
push
sub
std
sbb
or
mov
mov
mov
xor
imul
xchg
idivb
addb
bound
int
push
pusha
cmp
icebp
xor
mov
push
sbb
jl,pn
inc
push
into
inc
insl
fcoms
jge
xchg
adc
sub
std
js
loope
ret
iret
dec
mov
repnz
lods
aam
ljmp
out
scas
inc
cmpsl
popf
jl
pop
jmp
mov
push
adc
mov
lahf
jbe
mov
xchg
mov
in
jp
testb
push
insb
test
and
and
in
incl
movlps
lods
xchg
jbe
loopne
adc
xchg
ja
push
add
lods
pusha
out
ljmp
out
stc
or
cmp
xor
repz
mov
jle
les
movsb
idiv
loopne
into
aaa
addr16
xor
xor
jecxz
xor
cmp
test
sbb
shlb
cld
mov
xchg
dec
imul
test
fisubl
fdivrl
push
xchg
or
call
push
icebp
movsb
loop
xor
test
xchg
dec
fidivs
jl
sbb
ja
add
push
mov
jp
roll
data16
repnz
test
hlt
imul
inc
mov
dec
imul
lcall
aaa
dec
repnz
cld
jl
jae
shll
std
sbb
rcrb
sahf
mov
negb
fbstp
pop
idivl
aam
and
test
jl
sbb
mov
push
jg
mov
sub
test
adc
push
or
in
xorb
movl
insb
mov
mov
pop
sub
fnsave
repnz
cmp
insb
adc
xor
add
pop
mov
js
and
fdivrs
fnsave
mov
stos
push
and
cmp
dec
push
roll
mov
frstor
mov
push
xchg
adc
mov
js
or
cs
scas
ret
outsl
dec
adcb
insl
xchg
lret
scas
xchg
jno
jle
sub
adc
dec
jbe
sbb
sarb
stos
cli
push
sahf
mov
out
in
cwtl
push
popf
out
xlat
sbb
add
lods
push
jmp
dec
rcrb
xor
cmp
pop
mov
fiadds
mov
dec
test
stc
push
pop
nop
test
mov
sub
mov
fisubl
push
add
hlt
into
mov
loopne,pn
dec
dec
push
out
aas
loopne
sahf
xchg
in
es
fiaddl
jns
mov
mov
iret
fisubrs
decl
or
in
mov
lods
and
push
mov
jo
dec
and
and
ret
adcl
cli
mov
jl
repnz
mov
cmp
cmpsb
jl
pusha
and
sub
aad
and
rcll
push
xchg
and
and
add
stos
add
push
and
dec
mov
mov
push
pop
cmpl
sbb
ficompl
mov
outsb
jae
sub
jecxz
jb
in
mov
icebp
lret
pop
mov
xchg
int
mov
push
jns
jae
idivl
push
hlt
out
fdivrl
xchg
aas
and
clc
adc
sbb
xchg
test
hlt
mov
mull
pop
sarl
or
mov
stos
mov
loope
fbstp
in
and
in
sbbl
xchg
rcl
jl
sahf
cmp
xchg
test
jae
push
shll
loope
cmpsl
mov
sbb
xchg
mov
xchg
xor
bound
adc
cwtl
push
data16
or
mov
dec
leave
cld
es
xlat
cmpsb
in
or
push
jbe
xor
test
push
ror
iret
data16
in
leave
xchg
bound
orl
dec
jg
lahf
or
repnz
leave
fnstcw
into
ss
outsb
rorb
test
jp
and
mov
pop
nop
dec
adc
shl
dec
mov
mov
jo
pop
dec
arpl
pop
xor
adc
add
sahf
inc
int
out
out
push
jns
pop
adc
daa
push
pop
xor
mov
outsb
sub
xor
dec
das
in
imul
adc
cld
adcl
or
xchg
xorb
mov
push
pop
jne
dec
mov
inc
das
or
ss
and
xor
out
push
mov
jbe
and
leave
lret
scas
dec
push
or
mov
pop
and
push
mov
test
cmp
roll
cltd
test
pop
mov
xchg
es
bound
xor
xchg
mov
cmp
or
out
test
push
push
and
insb
es
add
loop
test
xor
movsb
push
fmull
fisttpl
jnp
jbe
push
data16
arpl
fisttpl
jl
out
push
mov
mov
sub
xchg
in
and
or
mov
jle
or
jno
test
push
ja
push
dec
mov
xor
out
inc
jge
imul
clc
test
addb
add
loopne
mov
lods
pop
dec
int
out
pop
and
cmp
insl
ret
or
insl
dec
pop
cmpsl
and
mov
xor
in
in
gs
sbb
data16
xor
in
mov
std
cltd
jae
xchg
shrb
scas
inc
insb
mov
ds
out
xlat
andb
lret
cmp
push
ja
lods
gs
xchg
lcall
jmp
mov
cmpsl
cli
loop
dec
loopne
popa
sbb
dec
sbb
mov
inc
fnstenv
pop
mov
outsb
adc
js
test
dec
loope
sbb
sbb
loopne
lock
rcll
repnz
movsb
pop
sub
insl
mov
jp
pop
fbstp
outsl
loope,pn
fucom
lcall
mul
shlb
mov
cmp
jle
cmpsl
dec
movsb
repnz
or
jge
push
pop
inc
mov
out
jecxz
pusha
sbb
and
push
mov
dec
aad
adc
push
data16
js
loopne
sbb
sub
inc
pop
jnp
mov
sbb
paddd
and
push
sub
adc
sbb
pop
lods
lods
or
std
fsubs
enter
test
xchg
out
imul
mov
xchg
fs
in
shlb
sbb
jb
adc
xor
mov
mov
sub
pop
rcrb
add
push
loopne
hlt
push
int
pop
aas
xor
nop
scas
sub
rcl
decl
push
jp
fsts
jl
pop
xor
xchg
cmpb
sbbl
push
cltd
rorb
push
mov
cwtl
cmp
adc
or
enter
mov
xorl
in
jbe
cmp
repz
add
sbb
decl
ret
mov
sbb
scas
icebp
sbb
jg
jmp
and
out
aad
std
lea
pop
test
adc
mov
or
sbb
jge
lock
test
testb
lock
fs
pop
pusha
call
jmp
adc
popf
hlt
adcb
outsb
inc
jne
cltd
push
dec
jmp
or
sbb
insb
rorb
test
fxam
push
ss
mov
divl
sub
gs
fisttps
jl
lret
cmc
mov
adc
sub
xchg
leave
push
repz
sarl
pop
xchg
jo
iret
jecxz
or
popf
push
or
mov
pushf
enter
cwtl
cld
fmull
jno
sub
mov
or
flds
fldl
mov
movsl
pop
xor
add
bound
andl
jo
call
jne
dec
iret
dec
in
and
shr
mov
xchg
cwtl
xor
cmc
les
pop
sbb
sub
out
call
test
sbb
orb
adc
fldcw
mov
scas
pushf
lds
inc
and
push
lret
push
dec
jno
shrb
xchg
xchg
xor
mov
pop
add
imul
popf
out
push
xor
popa
inc
fcoms
sub
jg
divl
arpl
icebp
shrl
ds
mov
repz
push
mov
pop
mov
in
mov
icebp
cmpsb
sahf
stos
mov
push
dec
out
mov
loopne
adc
or
xor
sub
das
sti
mov
arpl
or
dec
insl
or
xchg
push
js
ljmp
mov
in
negb
xlat
cs
push
dec
jg
pop
jp
daa
int
loopne
push
lea
and
add
icebp
fimuls
add
push
scas
xchg
lcall
mov
ret
push
iret
add
dec
push
inc
sarb
ret
pop
lcall
xchg
cmp
mov
xrelease
bswap
xor
inc
iret
and
mov
xlat
add
jb
gs
ret
inc
jne
aaa
stos
sub
jle
push
or
repnz
loope,pn
mov
lret
add
outsb
nop
mov
mov
lahf
cltd
sub
js
add
in
rolb
cmpsl
xor
iret
cmpsb
xor
loop
or
in
insl
sub
pop
pop
loope
adc
pop
pop
cmp
ds
sub
scas
push
jno
jae
cltd
jg
inc
rcrb
lods
inc
jle
dec
and
insb
loop
nop
xor
pop
rol
pop
leave
movsl
mov
loop
and
sbb
scas
and
fs
mov
les
jmp
lods
pop
add
fldcw
imul
inc
push
sub
cmp
or
pop
pop
lock
dec
ds
pop
sbb
jno
mov
ja
mov
mov
loope
push
stc
pushf
jnp
lret
mov
mov
in
outsl
and
rcl
mov
push
out
test
mov
sub
inc
cwtl
jp
dec
and
scas
stc
movsb
js
mov
outsl
push
dec
xchg
repnz
mov
testb
push
mov
mov
pusha
xor
jl
dec
dec
clc
cltd
decb
inc
stos
add
and
jecxz
sti
xchg
insl
push
rolb
or
test
sarb
inc
fdivl
xor
lahf
lea
insl
jbe
lret
jl
fimuls
and
rorl
mov
faddl
in
mov
inc
and
pop
and
int3
add
popa
adc
scas
xor
add
push
cmp
fwait
xor
adc
call
mov
enter
aam
jno
gs
cmp
mov
adc
xadd
pop
mov
bound
pop
aam
mov
std
push
inc
jae
adc
jmp
ret
cs
test
int
clc
fstps
push
and
xor
fstp
push
rcrl
inc
iret
dec
dec
sub
aaa
xor
cmc
test
cmp
xor
sarl
es
pop
outsb
hlt
xchg
mov
push
sbb
sti
fcoml
loope
loopne
cmp
subl
cld
daa
mov
push
push
mov
scas
insl
ret
dec
cmp
adc
xor
jbe
fmull
jle
movsb
push
das
add
cmpsb
aaa
sub
dec
push
adc
repz
data16
sbb
cli
inc
mov
lcall
mov
push
push
das
lea
addr16
pop
cli
xchg
xchg
jns
clc
dec
push
inc
pop
out
mov
cmpsb
scas
arpl
mov
and
stos
sub
mov
pushf
cs
sarl
stos
inc
loop
repnz
adc
rol
outsl
pop
or
xor
xchg
fadds
dec
or
lods
insl
mov
in
hlt
mov
fsubs
inc
test
loop
inc
test
je
scas
xor
push
movsl
stos
lods
inc
popa
fs
js
push
push
je
cmp
ds
push
inc
insb
push
mov
lahf
inc
xor
test
js
add
aas
das
fnsave
sbb
pop
fbstp
int
or
mov
stos
add
add
pop
clc
add
leave
jl
adc
cltd
sti
sbb
lcall
mov
ret
sbb
and
int3
lock
lods
or
jecxz
or
inc
xor
cltd
cld
cmpsl
inc
pop
bound
lahf
fwait
lods
xor
es
add
addr16
and
cli
in
pop
lret
ret
out
push
sub
mov
lods
and
push
outsl
pop
push
imul
test
ss
push
fists
mov
xor
or
sub
scas
movsl
xchg
leave
out
dec
out
cmpsl
mov
js
sti
mov
cs
xchg
add
mov
mov
jno
daa
lahf
addl
movsl
push
and
test
jmp
movsl
mov
pop
jecxz
mov
xchg
aad
add
xor
cs
arpl
gs
sub
ret
push
jno
add
xor
cld
jmp
mov
dec
xchg
iret
mov
lods
sysexit
jmp
add
push
cmp
sbb
xchg
int3
ja,pn
sbb
mov
push
insl
fiaddl
stos
mov
into
sbb
dec
jb
jle
ret
cmp
loop
shr
daa
es
mov
xchg
das
aad
cmc
cmp
xor
insl
cmp
inc
sub
and
adc
add
adc
cmp
jne
push
imul
lds
mov
jne
inc
mov
leave
mov
movsb
dec
or
jmp
fadds
outsb
or
call
aam
cmp
cmp
shll
rolb
inc
outsb
mov
mov
sbb
scas
rolb
gs
call
push
cmp
fnsave
push
cmc
cmpsb
cltd
test
test
ret
dec
in
hlt
mov
enter
mov
lods
xor
loop
pop
dec
xlat
icebp
repz
stc
or
lret
sub
std
add
and
xchg
cmpsb
mov
adc
adc
stos
mov
push
pop
and
push
enterw
test
scas
repz
inc
cmp
and
pop
mov
sbb
lea
jecxz
xchg
mov
mov
xor
add
pop
dec
js
jo
mov
or
xchg
lods
xlat
mov
pop
fdivr
push
sub
bound
iret
mov
and
bnd
jbe
ficomps
or
paddd
adc
stos
xor
ja
sahf
sbb
jg
add
call
lea
mov
adc
and
sahf
adc
mull
adc
xor
notl
cld
mov
xor
pop
lcall
xchg
mov
cmp
adc
pushl
js
rcr
test
sbb
test
cmp
clc
xchg
aad
hlt
xor
sbb
shl
hlt
mov
std
cmp
mov
dec
in
xor
pop
xchg
lea
mov
push
cli
fmuls
cmp
mov
pusha
adc
and
call
xor
rorl
cmpl
pop
dec
mov
push
sbb
out
nop
mov
mov
test
xchg
cmp
mov
cmc
dec
inc
add
ljmp
ljmp
jbe
mov
rolb
push
push
or
inc
ljmp
mov
mov
pop
push
push
bound
jae
and
xchg
mov
cmp
lock
mov
hlt
arpl
je
sbb
ds
lret
mov
adc
lea
xor
dec
add
movups
jp
cmpsl
pushf
add
add
loop
mov
jno
out
xchg
es
lret
movsb
and
pop
inc
push
mov
sub
dec
or
mov
push
rcl
in
insb
push
into
add
dec
out
inc
nop
mov
lahf
add
pop
mov
int3
xchg
dec
cmp
mov
and
mov
jecxz
cld
cs
fildl
jp
adc
int3
pcmpgtd
int3
xchg
in
fwait
xchg
or
mov
ret
call
mov
in
mov
cmp
push
jno
mov
shll
adc
push
repz
xchg
xrelease
sbb
outsb
add
push
shrl
cmp
test
adc
lock
adc
rol
or
es
fisttpll
shrb
stos
test
xchg
dec
lea
mov
arpl
mov
pushf
rorl
xor
sbb
leave
fdivrs
cmp
xchg
mov
cmp
lods
iret
sbb
loope
add
push
stc
pop
mov
repz
mov
mov
cmpsl
es
or
icebp
negb
jecxz
nop
inc
push
sbb
dec
in
mov
add
jg
in
cmc
cmpsb
jge
add
popa
mov
sar
in
outsl
ljmp
xor
dec
cmpl
int3
out
add
shll
and
aad
mov
out
lcall
movsl
or
and
cmp
mov
xchg
push
and
rclb
int3
rclb
lret
addr16
loop
in
dec
pop
mov
and
and
sbb
ss
add
mov
and
xor
adc
mov
movsl
and
loopne
inc
rolb
lds
xchg
cmpb
sbb
cmpsl
dec
adcl
mov
int
fisubl
movmskps
aam
cmp
jmp
inc
into
mov
jecxz
dec
insl
mov
test
push
add
mov
aad
inc
lea
mov
pop
insl
imul
sbb
scas
out
mov
jecxz
lock
push
mov
hlt
popf
mov
push
mov
cltd
adcb
insb
xchg
lea
jb
mov
sbb
rcll
jnp
call
adc
outsb
jns
outsl
lea
fcoml
xor
ljmp
loope
lods
shrb
mov
into
mov
sub
cmp
adc
add
call
lret
push
insb
and
jmp
std
add
mov
out
add
movsb
pop
adc
or
mov
hlt
adc
aad
rcrb
xlat
sub
hlt
and
mov
mov
add
sbb
xchg
add
or
pop
and
out
outsb
test
ficompl
jmp
sub
out
sahf
and
mov
add
add
xchg
xchg
mov
mov
push
pop
cmpsl
rcll
imul
xchg
into
sbb
add
cmp
mov
mov
scas
mov
jne
gs
movsl
xchg
js
frstor
cmp
fwait
sbb
dec
push
mov
mov
ds
in
mov
insl
pop
movsb
sbb
cs
bound
jns
clc
inc
stos
lds
popf
mov
fst
imul
and
mov
lock
lods
push
movsl
jge
sub
rorb
ja
repz
hlt
push
xchg
in
xor
repz
sub
ljmp
inc
jmp
xchg
jmp
std
rolb
xchg
scas
xor
bt
out
rol
mov
mov
dec
cmp
mov
cmpsb
repz
or
shlb
and
inc
leave
mov
xchg
scas
sub
and
push
push
outsb
addr16
mov
jmp
jne
pop
mov
xchg
mov
mov
xchg
add
popa
insl
aaa
sub
ja
imul
and
repz
fdivs
pop
std
xchg
lock
pop
push
mov
mov
or
int
jge
sti
imul
xchg
movsb
cmpsl
push
mov
arpl
jns
data16
mov
pusha
push
aas
cmpl
or
loopne
push
mov
ds
movsl
xchg
lods
mov
jle
hlt
insb
xor
add
cs
pushf
push
imul
mov
cwtl
pop
adc
test
pop
leavew
sbb
inc
jmp
scas
push
ret
cmp
stc
cwtl
cli
out
or
xchg
push
xor
lcall
jns
sub
test
das
daa
lahf
mov
ss
arpl
and
pop
loop
or
add
in
lods
iret
mov
ror
jg
jecxz
pop
mov
and
push
cmpsb
js
adc
fdivrs
lret
in
jo
leave
les
loopne
mov
lea
fisubs
jae
xchg
inc
push
nop
sti
sub
sbb
aad
pop
xchg
popl
inc
push
jns
iret
sbb
push
mov
sahf
sub
pop
repz
pop
mov
mov
sbb
or
inc
aam
enter
in
frstor
in
aaa
lret
mov
jbe
push
inc
test
fwait
jp
xchg
loop
dec
std
or
fs
and
jle
mov
jo
add
pop
pop
jo
jmp
in
nop
xchg
adc
push
mov
std
cli
adc
out
pop
fdivr
into
cmc
lcall
xchg
pop
hlt
sub
movsb
cltd
rclb
pop
cmp
icebp
cmp
sub
addb
adc
mov
repz
sub
gs
adc
in
hlt
sbb
mov
pop
cs
insb
xor
jnp
clc
cld
rorl
sub
test
mov
sub
xchg
clc
mov
outsl
cmp
pop
mov
or
leave
in
sbb
cmp
idivl
pop
mov
mov
adcl
repnz
sbb
daa
fisubrs
orl
or
mov
out
cltd
out
aam
push
fnsave
mov
xor
pop
or
cmp
in
ficompl
fbstp
cmc
add
roll
lret
popf
ret
sub
bsr
mov
dec
cmpsl
mov
jge
cmp
and
add
divl
adc
shr
data16
pop
mov
lret
jg
mov
pop
push
pop
sbb
cmp
fsubrs
imul
push
jae
into
pop
fs
xlat
mov
daa
dec
inc
fwait
lods
pop
cli
les
vmread
roll
divl
cmp
sbb
cmp
ret
cwtl
scas
lock
mov
inc
fbld
gs
push
sbb
add
pushf
mov
jbe
test
ret
inc
insb
shll
add
jae
mov
hlt
cld
out
mov
fdivp
in
cmpsl
lret
mov
mov
xor
or
pop
xchg
push
sub
das
xchg
xor
test
push
mov
data16
xlat
inc
cmp
pusha
dec
xor
ljmp
inc
jp
cmp
mov
cwtl
pop
push
aad
leave
or
jmp
adc
loopne
cmpsl
popf
gs
pop
int
orl
or
aaa
jns
js
icebp
xor
out
mov
push
jle
aad
cs
test
jmp
outsb
test
mov
xchg
adc
fiaddl
jno
sub
xor
imul
mov
sti
idiv
mov
cmpsb
push
repz
pop
loop
jge
adc
addr16
fisubl
scas
mov
movsl
mov
dec
loope
fdivrl
jo
push
aaa
push
xor
xchg
out
rcr
loop
mov
pop
lods
mov
sub
add
xcrypt-cbc
cmpsl
xlat
and
imul
and
and
stc
pop
or
dec
mov
and
les
push
out
and
add
lret
push
out
push
inc
jo
repz
mov
jge
add
inc
push
outsl
int3
xchg
enter
hlt
inc
mov
xor
clc
shl
xchg
rcrb
jno
and
push
int3
cli
xchg
je
fadds
sar
cmp
or
jmp
mov
incb
pop
cmp
mov
aad
push
aad
and
cmp
pop
data16
jb
xchg
aaa
scas
sub
jmp
add
jl
jecxz
cmpsb
xchg
subl
into
mov
cmc
lock
lret
and
jmp
jb
mov
pop
pop
lret
int
xor
movsb
insl
pop
inc
pop
cmp
repz
imul
xchg
movsl
xchg
jp
xchg
or
mov
xor
xor
fadd
jge
movsl
adc
xchg
ss
jb
adc
outsl
jno
pop
pop
stc
in
iret
or
and
xchg
daa
and
shl
int3
and
neg
mov
adc
mov
xor
and
leave
mov
sti
jg
push
mov
push
and
push
dec
stc
xchg
dec
push
ret
cmpsl
aam
push
mov
add
xchg
out
in
cmpsl
sub
imul
fs
and
ret
test
mov
xor
popa
bound
in
xchg
cmpsl
pop
inc
pop
and
addl
pop
iret
loopne
jle
push
mov
inc
outsl
inc
sbb
adc
mov
inc
aas
inc
iret
pop
pinsrw
ss
lea
stos
ljmp
in
aas
and
insl
bound
pop
ret
outsb
mov
add
int3
mul
mov
xchg
mov
fisttpll
lea
fadd
mov
push
ds
int
negb
jo
dec
aas
xor
clc
call
fcmovne
push
rcll
cli
xchg
add
xor
call
es
repnz
add
ja
lret
pop
push
pop
out
cli
mov
cmp
dec
dec
or
mov
inc
test
fs
mov
int
jmp
mov
sti
xor
lods
aas
mov
in
rclb
leave
roll
int3
jns
jnp
ss
ret
shll
incb
sahf
in
sahf
jbe
xchg
dec
adc
hlt
les
push
jle
dec
arpl
loope
jnp
sbb
inc
pop
or
dec
add
lds
sub
ret
movsl
test
call
inc
mov
cmp
sub
in
out
in
pusha
in
shrb
pop
test
bound
lea
cli
punpckldq
or
fcmovnbe
mov
mov
arpl
daa
push
mov
push
lods
cmpsb
sbb
inc
incb
and
mov
ja
pop
call
dec
push
mov
lock
gs
xor
mov
aad
or
pop
std
push
nop
jmp
push
mov
roll
fadd
test
pusha
repz
and
jne
jecxz
cmp
jg
and
mov
add
sarb
fists
add
jb
sub
in
mov
dec
pop
push
inc
imulb
in
dec
jle
ret
inc
cmpsb
or
ljmp
mov
dec
push
xlat
pmaxsw
minps
adc
xchg
or
xor
rcrb
adc
xchg
stc
int
ljmp
ja
adc
xor
repnz
cltd
adc
xor
movl
addr16
jne
cltd
cmpsb
pop
fwait
mov
int
and
sahf
mov
jbe
bound
data16
out
ret
mov
push
mov
sbb
popa
adc
xor
dec
mov
and
xchg
nop
aam
movsl
dec
jg
ljmp
aam
lret
pop
hlt
cli
sbb
push
rclb
mov
or
cmp
push
mov
mov
repnz
push
and
cmpl
aam
pop
mov
lret
imul
pop
inc
cmp
in
lret
pop
adc
mov
adc
movsb
pop
imul
add
pushf
cmp
xor
cltd
test
dec
call
pop
mov
pop
inc
loopne
add
js
aas
fsubrl
test
push
inc
in
and
loop
push
js
push
jae
je
and
jns
icebp
push
fisubrl
out
dec
lds
dec
jb
orb
pop
add
cmc
lds
jae
xor
mov
mov
dec
xchg
aad
inc
lahf
fildll
ljmp
jmp
dec
mov
dec
stos
jcxz
movsb
xchg
xchg
xchg
inc
dec
jnp
sbb
jmp
or
in
pusha
sbb
mov
test
test
call
mov
adc
push
xlat
ds
lds
mov
sub
add
sbb
sbb
cli
int3
clc
xchg
pop
push
jo
fwait
xchg
icebp
sar
inc
icebp
movsb
fstpl
outsl
lds
lock
mov
divl
inc
addl
inc
sahf
pop
and
ficompl
xor
ds
xchg
mov
push
in
jmp
jg
and
in
shr
xlat
jge
push
ss
andb
jecxz
adc
xchg
imul
loope
mov
jecxz
jl
pop
data16
pusha
mov
aad
xchg
mov
push
ret
movsl
cs
mov
dec
cmp
out
test
rcpps
add
adc
push
shll
mov
pop
xorb
and
jns
jmp
sti
dec
lahf
xorb
inc
inc
or
push
mov
inc
sub
cs
lock
das
mov
xor
cli
xchg
sbb
jb
pop
rcll
xchg
loop
sub
jo
dec
mov
cmc
mov
fstps
dec
fimuls
xor
pop
in
lcall
xchg
stos
lds
ret
xor
inc
jl
mov
inc
mov
fldz
fadd
add
mov
jns
mov
or
lcall
int3
jmp
mov
mov
xchg
mov
test
subb
sbb
add
mov
daa
arpl
divl
jecxz
push
or
adc
dec
xor
jle
add
pop
addl
call
loope
and
xor
in
shll
jle
ja
mov
lahf
insl
mov
scas
dec
gs
mov
push
cs
dec
fstpl
pusha
inc
pusha
loopne
xchg
or
pop
mov
rclb
jge
sub
sbb
ud1
mov
and
insb
testl
cs
push
and
insb
dec
fsubs
dec
sti
cmpsb
xor
jle
pop
loope
and
sbb
sub
mov
lcall
dec
and
push
fucomi
adc
jne
icebp
inc
cmpb
pop
sbb
pop
and
es
out
cmp
popa
int3
mov
lahf
out
mov
pop
fcmovb
inc
mov
lret
sub
mov
xchg
lds
dec
inc
arpl
repnz
mov
adc
or
call
mov
inc
add
orl
add
or
lret
and
mov
popa
test
out
mov
negb
icebp
out
bound
insl
xor
out
ja
lahf
and
jns
frstor
mov
notb
add
outsl
in
sbb
adc
xor
call
dec
mov
sarb
fdivl
jns
add
ja
fcompl
push
ss
xor
mov
rorb
jae
xchg
or
lret
adcl
sub
mov
add
lods
pop
cli
adc
sub
dec
mov
stos
mov
and
pop
mov
out
inc
testb
stos
jbe
mov
xchg
gs
in
jns
arpl
jbe
fmuls
clc
lea
mov
push
aam
fsubs
fmull
insl
in
in
jo
jecxz
xor
sbb
stos
xchg
out
jae
scas
sbb
jmp
call
roll
rcrl
push
xchg
jns
std
out
dec
repz
cmpsb
repz
cmp
sbb
in
sub
cmp
sbb
xchg
lahf
dec
repz
push
push
ret
and
outsl
mov
sub
adc
and
iret
ljmp
es
neg
cmpsl
in
sub
cmp
cmp
adc
push
xor
jbe
jae
cmp
pop
sbb
or
or
sub
aad
adc
pop
jno
mov
out
pop
mov
adc
adc
cmp
jo
jecxz
dec
std
iret
cmp
xor
js
or
fcmovb
xchg
jmp
lret
jnp
data16
mov
pop
add
dec
cmp
fsubrs
sub
clc
gs
cmp
cwtl
imul
leave
xchg
insl
add
mov
dec
jo
test
loope
sbb
out
call
hlt
sub
adc
pop
aaa
outsb
in
es
jo
call
mov
or
add
popa
add
push
out
cmp
aam
fdivs
int
inc
test
inc
cltd
mov
mov
rorl
sbb
leave
pop
sub
xor
js
xor
pop
bound
add
push
movsl
imul
dec
and
jb
jb
int3
sub
lea
xchg
sbb
repnz
stc
jp
push
push
pop
mov
orl
sbb
dec
dec
jge
inc
mul
dec
ficomps
jl
add
leave
aaa
push
inc
sbb
cmp
repnz
mov
les
lods
clc
inc
cmp
dec
xor
incb
sub
pop
mov
inc
cmp
insl
loop
push
imul
xor
sbb
in
mov
pop
stc
inc
push
cmp
dec
decl
jl
out
mov
mov
int
push
mov
push
lods
call
stc
push
aaa
addr16
loope
bswap
sti
xchg
jnp
push
mov
mov
push
imul
aas
addl
shlb
cmc
xchg
js
popf
incl
mov
sbb
daa
ret
jno
jp
shlb
mov
subl
pop
test
js
sahf
adc
ss
or
je
jns
xchg
mov
popf
or
dec
sbb
jns
movsb
sbb
aad
lock
fwait
sub
shrl
dec
cmpb
aam
notl
adc
mov
xchg
mov
repnz
add
xchg
leave
loope
pop
imul
jae
outsl
sbb
pop
mov
pop
stos
in
or
dec
or
jbe
mov
cmp
adc
les
and
mov
push
mov
fstpt
test
mov
in
pop
je
and
fsts
xchg
cmp
pop
outsb
inc
popf
popa
or
cld
cmp
mov
or
imul
xor
xor
outsl
pop
hlt
lret
cmp
sub
pop
lods
aaa
sbb
inc
mov
jg
mov
xchg
pop
mov
adc
testl
mov
jae
arpl
push
faddl
fnstcw
cli
arpl
push
or
xor
call
imul
cmp
xor
arpl
idivl
mov
xchg
cmp
jg
mov
adc
mov
test
pop
into
adc
add
pop
fsubs
lret
add
testl
sti
std
dec
pop
mov
xchg
xor
sbb
xor
xchg
aam
sahf
sub
aaa
dec
mov
stc
push
jnp
mov
into
imul
mov
leave
cmp
mov
outsb
insb
mov
mov
loope
and
rclb
call
sti
cmp
adc
xor
and
jecxz
js
cmp
call
sbb
jp
sbb
adcl
call
fs
push
push
popa
call
jmp
dec
jle
out
pop
popf
insl
rcll
popf
out
outsb
push
mov
mov
cmpsb
rcrb
or
add
and
mov
pop
wbinvd
pop
adc
int
in
test
rorb
leave
lds
jl
mov
xor
loopne
cmpsl
cli
pusha
ja
addl
xchg
jle
sub
mov
popa
mov
xchg
adc
lds
mov
divb
dec
and
fisubs
mov
out
cmp
and
lds
aad
xor
scas
mov
sarb
call
jb
inc
mov
pusha
mov
push
mov
es
pop
rorb
push
subl
outsl
icebp
int
popf
fbstp
int
and
mov
ljmp
add
mov
popf
fs
or
xor
fidivrl
aad
xor
in
cmpsl
sbb
adc
xchg
jae
jl
inc
mov
faddp
mov
jo
in
sbb
hlt
stos
in
inc
mov
sub
mov
sub
lock
int3
pop
sbb
icebp
das
out
addr16
repnz
lret
in
pop
pop
mov
test
jge
out
cmpsl
jge
mov
in
or
test
mov
outsl
test
fidivs
sbb
cmpsl
aam
mov
inc
or
inc
fadds
sbbl
jne
mov
shll
nop
int3
mov
movsb
jmp
and
cmc
stc
xchg
mov
mov
jmp
imul
push
roll
les
inc
outsl
pop
idiv
int3
fcomi
fwait
sub
xchg
jnp
cltd
arpl
lret
push
pop
add
push
aad
fisttpl
dec
mov
dec
lcall
pop
int
testl
jge
mov
arpl
rolb
icebp
mov
push
lods
iret
adc
sbb
push
hlt
xor
inc
out
sbb
stc
add
pusha
jbe
mov
gs
and
inc
inc
pop
mov
adc
pop
pop
sbb
push
out
cwtl
insb
in
aas
pop
dec
in
sbb
aaa
cltd
mov
pop
jecxz
xor
or
mov
pushf
mov
data16
fimull
pop
ret
add
fadds
cmp
inc
add
ds
dec
lret
dec
pushf
lret
fwait
jle
jmp
push
push
sub
mov
imulb
cmpb
jle
or
adc
cltd
xor
lcall
xor
fcmovnu
mov
movsl
pusha
ljmp
add
mov
and
int3
lahf
clc
mov
movsb
or
aaa
push
jecxz
icebp
test
adc
inc
dec
adc
jg
lods
aas
jmp
cmc
adc
pop
fwait
push
out
inc
xor
aas
jge
sub
sbb
aaa
dec
and
nop
mov
clc
aaa
xor
adc
mov
add
je
out
pusha
out
imul
jecxz
mov
out
push
push
xchg
fidivrs
pop
cmp
jnp
dec
mov
sbb
cmp
lahf
lods
mov
mov
push
cmc
sub
gs
xchg
mov
inc
shlb
xchg
cwtl
in
into
xor
test
pushf
dec
jmp
mov
repz
push
xchg
mov
scas
out
les
cmp
add
outsl
les
stos
pop
push
movsb
ret
mov
sbbl
into
xorb
or
add
ds
pushf
imul
dec
adc
cmp
orb
imul
push
in
inc
sbb
aam
cmp
mov
mov
mov
out
lods
pop
sub
sbb
cmc
iret
cld
sti
dec
sub
adc
iret
mov
mov
divl
in
jb
jmp
icebp
stos
dec
clc
bswap
cmp
insl
mov
xorl
pop
movsb
dec
pop
add
cmp
sar
add
outsb
cltd
pop
cmp
push
shlb
jge
movsl
or
pop
imul
imul
pop
adc
bound
adc
or
fbstp
pop
fnsave
ret
lods
cmp
sub
mov
xchg
sbb
dec
pop
and
inc
push
pop
lret
pusha
pusha
shr
push
sbb
daa
mov
repnz
inc
leave
test
add
jne
or
enter
aas
mov
lret
jmp
mov
test
or
fcomps
inc
push
sbb
add
jmp
stos
lock
and
inc
popf
int3
jmp
sbb
es
sbb
xchg
xchg
fstl
cmpsl
pop
clc
xchg
popf
mov
stos
idivb
cmp
add
ljmp
push
jo
mov
push
loope
cmp
sbb
hlt
enter
lods
cmpsl
mov
aaa
mov
add
aas
mov
mov
push
push
divl
stc
inc
aad
jmp
icebp
sub
imul
outsb
sbb
dec
lods
pop
or
sub
and
int3
shl
xchg
adc
clc
xor
lret
in
ss
push
cs
call
jns
adc
inc
scas
call
add
test
in
push
call
mov
shr
xlat
mov
push
mov
ret
mov
daa
mov
and
jg
lds
dec
movsl
rorl
and
leave
rorl
fldcw
repnz
add
cmpsb
mov
pop
jb,pt
das
scas
pop
mov
out
test
dec
xlat
jg
pushf
mov
xchg
cmp
and
mov
int
mov
jnp
call
dec
lods
jg
mov
mov
pop
inc
pop
lods
mov
add
rclb
imul
sti
mov
push
mov
es
test
adc
insb
inc
sbbb
add
mov
sbb
xor
aaa
aaa
xchg
ja
ss
pop
mov
adc
sub
lods
lods
xor
out
xor
stos
ljmp
lock
test
sub
jbe
cltd
addr16
out
sub
jno
jmp
test
gs
push
loope
hlt
sbb
add
int3
push
push
cmp
mov
outsb
jo
popf
cmp
dec
jno
mov
hlt
mov
leave
lock
adc
sbb
xchg
or
adc
mov
outsl
pop
mov
push
sbb
js
sti
in
inc
sub
jae
xchg
loopne
stc
repnz
xchg
or
jecxz
cmp
mov
push
dec
cmp
cmp
inc
mov
jne
inc
mov
fcomps
fcoms
inc
sbb
in
xchg
adc
lcall
cld
mov
out
filds
adc
jg
xchg
insl
shll
fists
cmp
pop
jne
fs
lods
or
mov
sbb
daa
sub
fstp
ds
jo
js
sub
lcall
jbe
scas
outsl
jl
js
loope
sub
cld
push
inc
clc
leave
enter
cmp
mov
arpl
lods
xchg
dec
fcompl
mov
cmp
cmp
dec
jne
push
xchg
js
adc
add
pop
inc
sub
mov
cmp
xchg
mov
fbld
sarl
jge
xchg
sahf
add
xor
mov
int
bsf
or
call
pusha
adc
decl
sub
mov
and
sbb
pusha
fstpl
pop
cld
lds
hlt
mov
jnp
adcl
stc
cmc
xchg
aad
push
adcb
sbb
mov
add
jae
rcll
mov
sbbb
pop
cwtl
pop
scas
lds
add
mov
cwtl
filds
jns
repz
aaa
jb
imul
rcll
ds
add
jg
push
insl
movsl
insb
cmpl
push
or
fwait
out
sbb
stc
xor
divb
cmpsb
mov
test
or
xlat
je
pop
mov
nop
inc
outsl
mov
xchg
ficomps
mov
clc
inc
push
std
loopne
add
sub
test
mov
ret
popa
into
push
nop
cmpsb
jge
popf
out
in
fwait
cwtl
push
icebp
jmp
cli
imul
lahf
cmp
push
pop
out
leave
mov
dec
and
cmp
and
cli
outsb
iret
popa
dec
hlt
mov
mov
shll
dec
lods
sbb
push
cmc
pop
sbb
mov
jmp
lds
das
jmp
push
cmp
int
pop
outsl
mov
aas
sbb
mov
jo
xadd
outsl
test
push
cmpb
mov
nop
test
cmp
mov
or
lea
fistl
in
dec
mov
test
or
inc
gs
dec
movsb
in
pop
and
stos
js
fchs
idivb
call
push
out
sbb
adc
xchg
mov
mov
mov
cs
jnp
inc
mov
in
add
xchg
pop
mov
sub
pop
jae
fstpt
adc
inc
je
outsb
push
mov
mov
adc
clc
add
movsl
jns
push
in
lahf
cmp
xor
out
adc
inc
push
in
dec
and
adc
in
and
sbb
movsl
add
dec
ret
out
adc
mov
xor
ret
lock
je
sbb
inc
jnp
add
arpl
xlat
cmp
in
push
push
mov
lret
push
popf
mov
ja
out
clc
pop
sbbl
push
add
jg
dec
inc
outsl
fisttpl
sahf
inc
les
xor
mov
adc
in
bound
and
mov
pop
and
inc
rcrb
and
pop
push
adc
stos
add
fildll
cltd
lds
jno
cmp
das
ljmp
mov
out
push
stc
adc
adc
nop
sub
dec
inc
and
lock
push
fucom
add
push
inc
ret
testl
enter
and
cmp
imul
and
xor
push
cmpsl
cmpsl
in
das
bnd
xlat
pusha
scas
out
insl
jns
std
jl
repz
jae
mov
rolb
pop
adc
popl
scas
out
inc
adc
sti
push
jnp
movsb
and
xchg
mov
jmp
xchg
add
dec
js
fs
aad
push
add
xchg
sub
adc
aam
mov
test
fwait
movsl
pop
jbe
fistpll
cmp
mov
fidivrs
test
pop
and
fs
xchg
scas
gs
and
shll
imul
xchg
cmp
loopne
lock
ret
xor
outsb
xlat
addl
outsl
jl
mov
adc
dec
imul
mov
scas
xor
insl
scas
leave
xor
fiaddl
and
xor
in
mov
outsl
push
jecxz
or
mov
std
cld
adc
pop
jmp
popf
xor
inc
add
stos
test
ret
or
cmp
notb
mov
rorl
fs
push
loopne
jns
cmp
dec
fldcw
movzwl
repz
pop
jnp
add
test
xor
movsl
popa
hlt
xlat
jbe
pop
jb
lock
ss
out
mov
std
mov
enter
test
xchg
loope
mov
out
das
adc
jae
pusha
cmp
sbb
mov
jecxz
gs
daa
sub
mov
rcrb
cltd
xchg
mov
pop
adc
push
aad
fcmovbe
in
mov
dec
add
mov
xchg
push
inc
xor
lret
movsl
movsl
or
mov
xchg
jl
xor
ljmp
sub
popa
and
inc
pop
aad
int3
add
pop
sbb
movsb
or
mov
cli
cld
mull
inc
dec
cmp
daa
mov
jg
push
sbb
lds
jmp
push
push
clc
imul
cwtl
mulb
insb
fwait
test
mov
scas
pushf
pop
test
jle
or
or
mov
mov
rol
cmpsb
sub
imul
out
pusha
inc
js
push
addr16
sbb
lret
jno
icebp
sbbl
jl
lods
in
fildl
or
xchg
fsubrl
das
fistpll
aas
or
lods
ret
jns
push
mov
nop
scas
or
call
mov
dec
aad
jmp
notb
lods
mov
movsb
popf
in
sbb
mov
repnz
push
mov
outsb
adc
test
jl
inc
inc
fsts
xchg
movsb
arpl
push
sahf
dec
inc
loopne
adcb
xchg
fsubr
pop
lahf
sub
jmp
dec
mov
insl
pop
out
inc
push
mov
inc
lods
out
shll
dec
cmp
sbbb
xor
xchg
stos
pop
mov
in
pushf
xchg
cld
int
pop
mov
fsubrs
cmp
push
jno
sbb
sarb
cmp
mov
in
repnz
push
mov
mov
and
inc
addr16
jno
xchg
adc
sahf
hlt
fnstsw
xchg
lret
in
arpl
adc
lret
loop
mov
lds
xchg
jecxz
cmp
mov
or
xchg
jae
dec
add
shll
arpl
sti
push
cmp
jg
out
xlat
inc
cmp
dec
in
lea
adc
lret
pop
ja
push
imul
sahf
inc
sahf
sub
mov
cwtl
call
or
mov
cli
add
pop
lret
clc
mov
jmp
gs
jno
and
inc
out
call
push
pop
fs
adc
fmuls
inc
movsl
inc
jae
mov
sub
mov
mov
out
jae
std
pushf
movb
loop
push
inc
or
cltd
insb
sarb
sub
pop
bound
ror
cmc
sub
test
es
cs
pop
ss
lcall
xor
inc
mov
cmp
sub
mov
jb
es
fdivrs
cmp
push
sub
jecxz
mov
or
test
push
mov
outsl
adc
insl
xchg
sbbl
jmp
and
xor
ja
cs
test
pop
mov
jmp
pop
and
repnz
xor
or
or
jmp
lret
mov
nop
mov
cmp
xor
inc
jbe
test
jnp
aad
inc
and
test
lret
mov
fiaddl
lcall
ja
int
pop
add
inc
outsb
arpl
or
and
or
orl
pop
cltd
int3
inc
push
sub
mov
mov
loop
xchg
sub
aad
imul
ret
addl
stos
outsl
ljmp
xchg
add
jecxz
ret
adc
inc
imul
and
out
in
insb
cmp
inc
pop
push
inc
push
push
es
pop
dec
push
pushf
mov
dec
and
test
xchg
mov
in
jb
aas
loope
dec
mov
into
mov
push
popa
inc
in
btc
loope
mov
in
jo
out
cs
clc
jmp
inc
push
add
stos
scas
mov
add
dec
sahf
xchg
xchg
cs
sti
add
fldenv
xchg
dec
xchg
test
movsl
inc
cmp
xlat
in
cmpsl
aaa
pop
in
icebp
xchg
fnstsw
pop
xchg
mov
sbb
xor
insb
in
cmpsb
cltd
pusha
insb
inc
dec
adcl
xchg
pop
push
aam
and
jnp
sub
xchg
outsl
cmp
loopne
mov
jle
dec
loop
lahf
ljmp
push
push
dec
sahf
mov
mov
pop
mov
add
inc
test
mov
lahf
and
jmp
ret
mov
repz
xchg
xchg
fs
inc
imul
cld
test
adc
cld
adc
or
cld
cmp
cmp
mov
mov
cmp
ret
inc
pop
jae
pop
popa
jge
mov
mov
pop
outsb
adc
push
mov
or
push
testb
cmp
lock
or
xchg
pop
mov
cmpsl
pop
jo
cmp
or
inc
cs
addl
mov
outsb
xchg
sahf
mov
das
int
fucomp
push
lret
mov
cltd
leave
addr16
pop
xor
mov
popa
fs
rclb
roll
test
fs
push
dec
test
or
jbe
xorl
fidivrs
orl
mov
std
fstps
pop
inc
outsl
shll
xor
dec
cmp
mov
lret
shr
jns
fs
sub
out
mov
inc
cmpsl
push
xchg
mov
sub
mov
rolb
dec
mov
xchg
pop
int3
shll
pop
loopne
cmp
or
inc
imul
in
fldcw
sbbl
mov
enter
jmp
je
cltd
sbb
or
dec
xchg
lret
sahf
fs
sahf
pop
push
mov
sbb
pop
mov
dec
pop
xchg
sub
fucom
imul
movsb
movsl
inc
rclb
imul
sbb
pop
adc
xor
mov
outsl
lods
mov
inc
sbb
lret
or
scas
xor
rol
inc
js
push
daa
jmp
imul
das
jns
inc
roll
loopne
fcoms
sub
insl
inc
mov
cld
sbb
sbb
es
jb
in
repz
sbbl
inc
pop
fidivs
ss
pusha
dec
shlb
pusha
dec
jne
push
cmpsl
popa
xor
push
add
stos
or
sbb
pop
je
push
sub
xchg
ret
int
cmp
adc
idivb
out
or
dec
inc
inc
enter
push
into
add
cmpb
adc
and
dec
cmp
mov
data16
adc
insl
pop
cmp
mov
out
xlat
int
pop
or
xor
ljmp
subb
test
ja
jno
xchg
popf
adc
mov
xchg
mov
daa
loop
xchg
inc
mull
push
pop
icebp
dec
xchg
dec
mov
or
je
lahf
aad
movsb
sub
cwtl
jl
xor
xchg
pop
hlt
fnsave
movsb
jo
mov
daa
mov
mul
shrl
imul
sub
jno
movl
lods
jae
adc
enter
cmp
scas
movsb
mov
lea
jge
sub
sub
and
inc
cmpsl
test
call
clc
mov
loop
mov
pop
jo
dec
push
xor
dec
in
lea
or
xchg
lahf
repz
shufps
and
sbb
xchg
nop
jecxz
xchg
add
test
loop
int3
test
jns
mov
jl
dec
sub
jle
inc
lods
xchg
fwait
fwait
int
int
stos
fmulp
mov
mov
adc
addr16
in
and
jmp
cmpb
jecxz
inc
pusha
hlt
movsb
shl
adc
fcom
sbb
pop
inc
push
addr16
btc
mov
les
dec
or
pop
pop
jecxz
pop
hlt
clc
cmc
dec
jbe
adc
cli
push
adc
mov
outsb
das
leave
shl
xor
sub
cmp
sarl
fsub
leave
jb
mov
lret
scas
sbb
push
cwtl
loope
dec
aad
fnstcw
mov
scas
sbb
mov
push
inc
add
xchg
data16
mov
pop
jl
push
ret
mov
mov
mov
rorb
push
and
ret
shlb
mov
pusha
sbbb
xchg
xchg
aad
sti
lahf
push
mov
scas
ret
sbb
mov
rol
add
and
jp
or
push
or
dec
jl
in
ret
inc
pop
leave
fsubr
sti
fistpl
add
push
scas
mov
notl
out
iret
rcrl
mov
addr16
das
mov
push
push
hlt
mov
sbb
xchg
nop
dec
and
cmp
mov
rcll
add
and
xlat
jecxz
data16
pop
das
shll
dec
insl
mov
filds
insb
rcrb
repz
out
push
call
push
xchg
sbb
dec
jno
test
ljmp
cmc
sub
and
popl
sub
xchg
push
imul
dec
adc
sarb
mov
sbb
add
pop
ljmp
cld
jp
bound
inc
lcall
mov
fyl2xp1
nop
gs
repz
mov
add
xchg
mov
nop
jbe
push
pop
lret
out
in
ja
int
loope
adc
mov
dec
jns
gs
jno
xor
mov
push
xorb
inc
scas
rcr
xchg
mov
pop
mov
std
dec
add
in
loopne
std
inc
cmp
and
mov
int3
adc
lods
into
xchg
aam
and
out
xchg
jmp
ret
lods
add
sbb
jns
movd
pop
adc
in
mov
aad
leave
pop
aas
test
xchg
or
or
in
jl
xchg
jae
push
lcall
pop
ja
sbb
dec
insl
cmp
cli
insl
popa
jp
cmc
shr
out
and
adc
pop
xchg
cs
mov
shl
stc
mov
adc
mull
aaa
pop
mov
leave
add
je
pop
push
pop
lahf
push
testb
and
push
cmp
xor
mov
in
dec
lret
mov
jecxz
popf
mov
daa
adc
pop
or
inc
dec
xchg
sbb
ja
mov
adc
or
cltd
mov
xchg
js
rcll
lds
cmpsl
jl
mov
popf
dec
and
stos
inc
aas
sbb
jo
inc
and
je
add
or
popa
addr16
clc
loop
sbb
incl
lahf
and
pop
sub
test
jb
adc
jge
xor
xchg
or
xchg
jnp
xchg
add
or
cli
lret
loopne
sbb
adc
ja
and
in
sub
pop
enter
in
jle
in
scas
std
cmpsb
sbb
loop
mov
mov
mov
sbbl
cmp
mov
or
cmpsl
int3
pop
roll
cmp
push
loope
dec
or
mov
clc
sub
jg
and
loop
and
jmp
push
add
mov
nop
xchg
lods
rorb
insb
enter
push
xor
in
stos
iret
outsb
xchg
insb
push
mov
mov
test
mov
xlat
dec
dec
dec
mov
push
icebp
jnp
sub
pop
or
jecxz
lret
xchg
mov
cmp
addl
and
mov
js
ret
xor
dec
loop
fimuls
push
sbb
movsb
test
xor
push
rcll
sbbl
xor
push
scas
inc
or
or
dec
fwait
sub
sub
adc
pop
or
outsl
add
test
es
int
adc
scas
das
push
inc
mov
shll
imul
cmp
mov
test
xchg
pop
mov
rolb
add
xchg
sbb
cmpsl
fmull
inc
in
psubsw
aas
mov
testb
jge
arpl
into
cmc
fcoml
dec
aam
xchg
data16
out
inc
push
mov
xchg
je
cmp
inc
sub
in
fisubrs
xlat
cwtl
inc
or
inc
and
jge
in
movsl
int
xor
daa
ljmp
mov
pop
mov
insl
out
xor
add
pop
or
and
mov
subb
mov
xor
mov
push
sbb
movsl
cs
mov
shlb
sub
add
loope
jle
xlat
xor
out
daa
mov
idivb
out
cltd
movsb
cltd
xchg
xor
mov
cld
mov
ja
pop
movsl
adc
les
fdivr
cs
mov
or
fldl
or
pop
sbb
push
leave
lds
or
pop
xlat
push
jge
add
sub
or
pop
lods
mov
inc
div
jl
push
push
imul
inc
push
pop
ss
shr
cmp
or
add
cli
jmp
mov
mov
sub
mov
popf
push
xorb
pop
or
cmc
out
rorl
imul
jns
into
in
into
movsb
mov
arpl
cld
fst
sub
jle
int3
and
add
xor
sub
sub
dec
xor
in
in
push
xchg
adc
jle
push
nop
and
loopne
rcr
popa
push
adc
repnz
mov
into
xlat
decl
mov
and
pop
out
mov
push
push
fsubr
mov
movsl
aam
shll
dec
mov
dec
ret
add
into
mov
mov
movsl
jno
xchg
fs
mov
in
dec
outsl
fists
cmpsb
into
or
sub
je
sbb
cmp
pop
pop
emms
jmp
insl
sbb
movsl
or
mov
pop
or
and
int
xor
outsb
push
fimuls
and
mov
js
xchg
nop
call
out
faddl
imul
testb
imulb
sbb
inc
scas
lods
mov
hlt
jnp
mov
adcl
and
mov
cmpsb
in
lods
subb
sbb
repnz
mov
dec
adc
dec
cwtl
outsl
lds
and
lock
pop
mov
shll
and
push
out
inc
adc
add
pop
push
mov
jl
add
mov
stos
inc
aad
or
pop
add
jmp
jge
loopne
push
neg
int
mov
daa
inc
cmp
outsl
sbb
inc
cltd
push
clc
cmp
and
fisubl
in
in
pushf
stos
add
jb
std
sbb
jb
push
mov
jg
and
dec
enter
and
xorb
les
or
push
movsb
div
pop
xor
aam
and
jo
cmp
cwtl
sbb
iret
xor
and
je
call
adc
rorl
mov
sbb
decb
insl
sub
cmpsl
shlb
add
jle
mov
pop
lret
sub
jmp
shrb
fs
jmp
notl
incb
xor
shrl
out
repnz
test
arpl
mov
stos
inc
out
cmp
out
scas
adc
add
decb
mov
push
pop
cmpsb
lds
xchg
sbb
push
add
xchg
std
mov
xor
xor
push
push
nop
inc
in
insl
dec
and
add
cmp
in
jmp
xchg
ljmp
or
lods
jecxz
mov
pop
mov
xchg
pushl
cmpsb
add
scas
mov
xor
jbe
mov
popa
gs
or
andb
add
lods
lds
jge
insb
cld
jecxz
lock
cli
daa
pusha
xchg
bound
pusha
out
in
mov
outsl
pop
inc
mov
ljmp
sbb
ret
mov
mov
push
cmpsl
in
mov
jno
jae
mov
adc
ja
add
std
adc
adc
and
daa
addb
clc
xchg
in
sbb
cmp
jle
lcall
imul
sbb
cmpsl
mov
xor
jns
or
xchg
insl
jg
xchg
push
cltd
add
push
cmp
xchg
fcoms
cwtl
rol
mov
or
iret
mov
xchg
push
jb
mov
and
loop
mov
or
sti
xor
jbe
pop
pop
jg
shrb
dec
add
and
aad
out
dec
inc
mov
repnz
dec
mov
out
push
cwtl
scas
mov
nop
inc
pop
pop
je
mov
pop
inc
sbb
sbb
inc
rclb
cmp
cwtl
call
loop
push
je
loope
insl
dec
loop
push
rcl
sub
xlat
movsb
call
lods
mov
inc
or
dec
push
mov
jge
mov
cmp
in
xchg
dec
out
inc
cmpsb
push
cmc
sub
sbb
sub
icebp
push
pop
push
mov
xchg
inc
add
mov
lds
insb
add
push
xor
ja
aad
roll
fisttpl
lods
aaa
mull
jl
cmp
xor
cwtl
es
sbb
push
xchg
mov
adc
mov
xchg
adc
sub
xchg
in
jo
stos
add
mov
js
push
lea
jge
push
push
push
fldcw
lahf
hlt
sti
ficoms
test
xchg
pushf
and
sbbl
dec
vcmpgess
sarl
sub
and
jl
leave
add
pop
mov
nop
xlat
js
out
push
sub
clc
jo
nop
popa
pop
or
out
mov
mov
xchg
imul
xlat
pop
mov
or
scas
rcrb
hlt
jp
enter
sti
int
lock
pop
movsb
sbb
cli
sub
int
mov
in
and
jne
adc
mov
test
mov
sub
in
rcrl
cmpsl
adc
mov
mov
jnp
hlt
mov
mov
dec
cltd
dec
jae
stc
or
adc
ja
push
and
pop
lods
lcall
gs
pop
jecxz
test
pop
idivw
sub
add
mov
in
pop
inc
push
sub
cltd
mov
in
inc
and
or
loopne
jns
out
outsl
jo
out
cmp
aaa
fnstcw
stos
in
rcrb
mov
rsqrtps
mov
shll
mov
divb
jns
lret
xchg
fldcw
lods
testl
mov
mov
push
fld
xor
mov
das
aaa
adc
xor
pushf
loop
dec
sti
int
mov
inc
xor
repz
or
pop
inc
mov
inc
push
and
aas
clc
lds
call
pop
insl
sub
gs
leave
daa
movsl
push
in
iret
dec
sarb
add
in
iret
cli
pop
push
cs
cmp
pcmpeqw
add
or
outsb
fcompl
xor
jl
loop
xchg
lcall
lods
push
xor
adc
or
adc
es
xchg
roll
call
mov
mov
jns
pop
pop
out
push
test
add
xlat
adc
pop
ret
pop
cwtl
push
inc
add
sti
stc
mov
inc
xchg
add
jne
fisubrl
pop
bound
xchg
in
mov
sbb
icebp
adc
mov
je
mov
mov
jae
into
dec
sbbb
jne
push
aam
push
push
pop
in
inc
ret
inc
dec
dec
mov
and
hlt
daa
jns
cltd
gs
stos
rclb
mov
xor
ljmp
out
lahf
jb
ret
sbb
movsl
negb
pusha
sbb
cs
inc
dec
mov
mov
cmc
pop
mov
push
dec
xchg
add
xchg
push
cmpsb
loope
xchg
mov
les
inc
dec
fmul
ss
scas
in
popl
mov
mov
jno
shr
sub
sub
mov
and
das
mov
pop
js
jmp
cltd
mov
xor
fidivrl
rorl
jge
pop
jge
cltd
data16
adc
and
add
ficoms
insl
push
into
pusha
loopne
fldl
out
flds
into
movsb
adc
lods
xchg
dec
out
jp
out
and
sbb
xor
test
nop
adc
lret
jnp
je
mov
inc
or
mov
adc
push
aaa
pop
mov
sar
js
dec
sub
out
lret
mov
xchg
insl
js,pn
icebp
imul
xor
arpl
xchg
in
fsubs
scas
cmpsl
mov
outsl
dec
sub
ret
sti
pop
lcall
xchg
repz
imul
loop
pop
sub
fidivs
push
std
or
adc
fsubs
push
ss
sub
cld
or
pop
inc
and
mov
leave
das
stos
repz
mov
loopne
push
or
push
mov
insb
mov
cmc
repnz
jmp
sub
or
or
cmp
ja
adc
adc
xchg
mov
je
lods
xchg
xor
cmc
or
mov
sarb
dec
xchg
lds
ficoms
dec
xchg
loope
repnz
sub
rorb
pop
sbbl
mov
pop
jnp
adc
mov
lret
in
sub
fwait
sub
jae
inc
les
xor
pop
inc
mov
repnz
cld
movsb
dec
add
fisubrl
and
jge
jmp
ljmp
inc
inc
mov
sbb
out
jae
xchg
push
aam
and
and
cmp
push
test
jns
push
push
push
mov
repz
cmp
jl
das
add
decb
into
rcrl
mov
dec
inc
dec
mov
sbb
push
xor
stos
popf
sbb
dec
nop
outsb
clc
jbe
imull
jne
inc
or
lods
shll
loope
and
scas
les
or
stc
notl
sbb
in
insb
dec
xchg
xor
jle
insb
jle
push
mov
fsubp
adc
jno
fchs
test
add
je
mov
frstor
scas
aam
mov
mov
fisttps
popf
shl
mov
insb
push
add
fwait
cs
mov
pop
xlat
pusha
mov
inc
dec
lds
shlb
cwtl
cmpsb
mov
pop
pop
std
out
mov
mov
sub
xchg
sbb
xor
test
inc
mov
scas
cwtl
rorb
push
adc
mov
shrb
shrl
dec
sub
mov
jecxz
jg
ret
xor
xlat
shrb
mov
inc
dec
add
or
dec
ret
aas
xor
repz
xchg
fistpll
cmp
dec
cld
dec
enter
add
popa
mov
out
or
jecxz
mov
test
sbb
loopne
ffreep
sub
cli
scas
hlt
insb
mov
push
daa
or
lds
ss
mov
mov
mov
cltd
pop
adc
pop
cmp
or
jnp
fsubrs
cmpsb
mov
cmpsl
xchg
push
lret
xor
mov
mov
xor
lcall
mov
leave
jae
cmp
mov
cltd
dec
mov
push
fcmovnb
mov
dec
mov
fistpl
rolb
gs
fdivl
or
cmp
adc
neg
dec
or
inc
inc
pop
jp
mov
loope
sub
repz
mov
in
inc
das
and
push
int
push
sti
rcl
add
push
insl
loopne
add
jne
cli
in
aas
push
stos
insl
ret
xchg
out
mov
mov
xlat
jmp
jae
jmp
pusha
pop
mov
ja
pop
dec
xor
xchg
jae
or
out
jno
sub
test
fwait
mov
sti
xor
xor
scas
jae
repnz
mov
push
lret
addr16
mov
and
dec
fisttpl
and
iret
sbb
pushf
stos
lcall
xchg
test
inc
and
jle
pop
jl
popa
test
pushf
inc
xlat
int
arpl
movsb
into
jmp
inc
shlb
cmp
or
mov
lods
addr16
cltd
lods
and
test
or
jmp
mov
call
mov
cmp
clc
sub
roll
rcll
or
adc
sub
ja
xchg
lods
rclb
pop
mov
pushf
cmc
cli
fs
cwtl
jno
jle
or
cli
out
or
aad
scas
je
add
pop
dec
jbe
mov
jnp
sub
ja
pop
shlb
dec
loope
sub
cmp
hlt
aas
sbb
push
mov
adc
add
outsl
in
out
push
roll
in
stos
repnz
inc
insb
iret
pop
xchg
mov
push
push
fidivl
adc
dec
inc
or
push
fdivrp
jnp
mov
std
fsubrs
movsb
icebp
test
push
test
xor
and
push
arpl
sub
gs
mov
outsb
int3
mov
rcll
mov
ss
arpl
add
lods
inc
outsb
pushf
popa
in
mov
call
sbb
dec
jge
jle
lcall
sbb
push
dec
inc
leave
pop
movsl
orps
stos
xor
jmp
dec
js
pshufw
sbb
pop
adc
test
jmp
notl
fidivs
outsl
mov
test
sub
xchg
jnp
pop
daa
mov
add
pop
jge
cmp
mov
dec
test
ljmp
fildl
pushf
test
mov
scas
mov
add
sbb
cmp
inc
inc
xchg
push
aad
and
xchg
shl
fisttpll
and
jae
dec
mov
in
cmp
push
inc
xchg
jle
jno
add
mov
sub
jmp
aad
inc
sbb
mov
push
ret
or
dec
mov
inc
std
loopne
mov
xor
ds
inc
push
clc
ror
add
dec
pop
stos
pop
mov
sub
cwtl
cmp
dec
out
rcrl
sbb
in
cmp
jmp
mov
leave
ja
cltd
ja
sbb
sub
mov
jl
xchg
pop
inc
mov
cwtl
xlat
mov
shl
pop
daa
scas
mov
inc
push
pop
pop
pop
shrb
pop
lods
cmp
push
cmp
out
jne
cmpsb
cmp
ljmp
push
pushf
add
in
sbb
jne
imul
clc
cmp
jmp
mov
mov
mov
orb
and
mov
sbb
sbb
pop
pusha
inc
adc
xchg
push
and
mov
fildl
push
mov
push
mov
lock
sbb
out
in
cli
inc
rorb
fisubrs
rcr
mov
scas
mov
mov
push
stc
les
push
out
xor
repz
inc
dec
mov
or
jnp
push
stc
xor
and
mov
movsl
pop
movsb
sub
ret
cmpsb
scas
mov
mov
in
add
scas
test
xor
mov
jmp
sub
cs
mov
shll
xchg
iret
cmc
xlat
push
in
mov
outsl
rcrl
lret
in
xchg
and
dec
mov
inc
push
mov
mov
cmpsb
inc
je
jb
jae
pop
pop
xchg
fwait
add
test
sbb
mov
cmp
or
push
pop
cmpsb
lock
xor
lds
push
xchg
jne
adc
in
add
ja
bound
mov
sub
inc
mov
dec
adc
or
inc
das
scas
out
or
mov
xchg
insl
jle
add
cmp
call
inc
sbb
fwait
shll
mov
frndint
cmpsb
mov
pop
repz
adc
jg
dec
cmpsl
or
xorl
xchg
xlat
cmp
jb
mov
jl
push
dec
push
pop
arpl
mov
and
pop
ficoml
jbe
iret
add
and
mov
icebp
xchg
inc
mov
pop
adc
sub
popa
push
scas
push
mov
pop
cwtl
push
sbb
dec
clc
adc
mov
mov
inc
sub
or
xchg
mov
mov
std
add
xor
cld
or
andb
push
sbb
cmc
dec
mov
cmp
or
push
xchg
test
lret
inc
arpl
mov
push
and
mov
pop
mov
rcrb
out
sub
or
push
xchg
inc
mov
jbe
xchg
daa
lcall
stos
daa
adcb
xchg
rclb
mov
into
dec
pushf
lret
pop
daa
push
or
push
arpl
lock
daa
addl
cli
dec
mov
nop
pop
stc
mov
fdiv
add
dec
sub
pusha
cmp
sbb
xchg
imul
add
xlat
push
ja
les
jnp
inc
imul
out
pushf
testl
ja
das
pusha
lret
call
into
xor
jo
fldt
ss
pop
adc
mov
mov
and
or
dec
repz
movsl
popa
aam
lret
stos
inc
mov
push
pushf
push
pop
and
xor
mov
nop
js
mov
pop
mov
pop
dec
aad
cmpsl
fisttpl
cwtl
aas
mov
stc
jge
ja
or
mov
xorl
dec
xchg
fistpl
inc
aaa
pusha
dec
mov
cmpb
inc
adc
mov
sub
mov
fdivp
aam
das
cmp
mov
je
jecxz
mov
adc
std
sbb
and
iret
xor
or
xor
jl
push
fadd
dec
ja
mov
push
xadd
push
xlat
adc
jmp
inc
sahf
adc
lods
movsl
or
out
ret
jb
jb
lcall
jmp
getsec
mov
fbld
sahf
and
add
dec
es
pop
mov
xchg
popa
dec
mov
cmc
out
mov
sub
or
scas
dec
jmp
jae
adc
or
xor
cmp
int3
in
aam
mov
adc
adc
pop
cltd
inc
mov
mov
cmc
cmp
hlt
cmp
mov
ficompl
xchg
mov
cs
ds
sub
cld
adc
je
sti
adc
push
dec
orl
and
push
xlat
aad
fbld
and
sbb
lcall
into
mov
lahf
xchg
adc
push
adc
sub
negl
fdivrl
lret
insb
cmpsl
cmp
push
int
and
sbb
fwait
loop
push
lcall
push
aad
aas
cmpsb
pop
ja
inc
int3
sti
out
push
pop
iret
imul
or
orl
inc
push
sarl
test
xor
dec
ret
sub
fstps
push
loope
sbbb
cmp
movsl
lods
push
scas
subl
inc
inc
mov
mov
mov
das
jmp
pop
sti
and
stos
jp
sub
cltd
jbe
in
scas
mov
and
cmpb
cmp
mov
pop
pop
pop
test
add
and
mov
push
jg
sub
fldenv
jbe
xor
ds
jne
outsl
aaa
ret
out
adc
int
push
xchg
mov
mov
dec
mov
pop
push
dec
and
push
mov
pop
jnp
push
sti
jo
into
cmp
jg
adc
cmpsb
inc
jg
idivb
sti
push
scas
fstl
scas
testl
incb
or
inc
test
lods
ljmp
dec
leave
mov
fnstcw
inc
jno
and
push
cmpsb
adc
inc
bnd
sti
pop
sub
wrmsr
dec
cmp
cli
dec
stos
pop
push
popf
lahf
dec
cmpsb
outsw
pop
ljmp
jmp
fsubrl
js
push
xor
lock
xchg
mov
fnsave
adc
push
stos
or
sbb
mov
sbb
stos
or
loope
cli
cmp
mov
mov
mov
ret
pop
jl
imul
stos
jecxz
inc
mov
jno
sub
rcr
sbb
jl
sbb
repnz
push
add
push
roll
aas
shll
xchg
push
ret
xor
cmp
xor
xchg
cmpsl
sbb
and
loop
or
adc
test
or
ds
dec
adc
cwtl
xor
xor
stc
mov
push
pop
xchg
rorb
fidivrs
stos
sub
mov
sahf
inc
shr
das
adc
out
call
aad
sbb
test
jbe
movaps
sti
dec
pop
arpl
fnstsw
mov
adc
cmp
sbb
xchg
cmp
push
sbb
adc
xor
dec
pop
mov
pop
xor
imul
push
mov
shrb
imul
cmpl
je
and
out
imul
enter
mov
pop
push
mov
push
je,pn
fimuls
push
ja
outsl
movsl
test
adc
fsubr
push
imul
in
sub
enter
pop
sarl
icebp
loop
inc
xlat
add
fimull
inc
push
test
stos
addr16
pop
cli
mov
loope
mov
jno
add
jo
bound
cmc
icebp
adc
sub
adc
mov
sbb
jp
mov
outsb
xchg
dec
rorl
arpl
out
push
das
jp
ret
scas
cltd
jbe
cmp
push
sub
les
sahf
mov
jnp
mov
scas
iret
addr16
xchg
xchg
add
push
div
push
jbe
mov
cmpsb
mov
nop
pop
js
pop
add
jmp
push
or
or
xchg
jae
xchg
add
fidivrl
imul
addl
ss
outsb
data16
outsl
test
push
and
cmpsb
insb
mov
popf
fdivr
jecxz
fs
jmp
popa
xchg
push
cmpb
fstl
cli
addr16
and
sub
repz
add
sub
cmc
inc
lea
sub
xchg
loopne
out
cmp
inc
out
sti
and
cwtl
push
pushf
add
mov
cmpsl
xor
jno
cs
imul
repnz
xchg
pop
subb
xchg
stos
sbb
mov
in
add
lea
subl
mov
xchg
rcr
lret
jg
pop
scas
in
dec
rorb
pushf
mov
sbb
sbb
jne
mov
mull
mov
imulb
je
push
mov
sub
cmp
rorb
sub
orb
push
xor
insl
xor
in
mov
jle
dec
xchg
xchg
lea
mov
mov
mov
ja
pop
pop
jmp
push
out
cmp
xor
push
icebp
xor
cli
lret
ret
mov
lock
and
shrb
mov
adc
in
sub
inc
xchg
call
pushf
fsubl
cli
js
mov
movsb
sbb
lahf
sub
add
xchg
jno
in
aaa
sub
and
add
xor
roll
push
loope
into
pop
cmpsb
mov
push
dec
roll
dec
inc
and
daa
lock
outsl
sahf
out
js
adc
cmp
stc
pusha
push
dec
out
nop
fs
enter
jnp
cmpsb
fdivrs
sti
or
add
cli
pop
jbe
or
add
cmc
addr16
push
add
imul
add
jae
in
jg
sbb
pop
das
xchg
mov
repnz
pop
xor
cmpsb
dec
mov
pop
cli
sub
ja
cmpsl
testl
push
pop
xchg
mov
mov
pop
repnz
xchg
xchg
fisubrs
les
lahf
xor
mov
mov
jg
pusha
leave
adc
test
dec
jmp
sub
int
push
or
xchg
insb
fwait
sbb
in
mov
or
jle
leave
movsb
dec
dec
insb
xlat
inc
shlb
pop
das
dec
inc
cmp
mov
dec
cltd
mov
xchg
push
mov
inc
jp
and
fsts
es
lcall
mov
out
pop
mov
pushf
test
mov
add
imul
cmp
iret
adc
stc
xor
cli
dec
cmp
push
fidivrs
or
jecxz
inc
fwait
scas
xchg
leave
pusha
mov
shl
or
pop
pop
add
pop
or
adc
or
push
cmp
mov
flds
add
leave
pushf
mov
push
pop
jb
imul
cmpb
imul
and
jmp
push
add
sub
dec
cmpsb
xchg
ret
inc
add
push
sub
sbb
movsb
xchg
sbb
rolb
mov
dec
xor
jge
mov
call
fld
lea
dec
imul
xchg
xchg
sbb
ss
mov
pop
xor
sbb
clc
les
ja
daa
sti
iret
xchg
ja
jbe
sti
fistps
adc
scas
xchg
jge
or
adc
enter
xor
enter
xor
into
nop
jecxz
jecxz
clc
ror
pop
jae
mov
xor
push
jecxz
test
mov
in
add
les
call
in
fistpl
loop
push
lods
mov
jnp
daa
sahf
aad
mov
push
cmp
rcrb
xor
lret
jle
lcall
out
shll
mov
pushf
ss
out
jg
cmp
sub
mov
out
nop
popa
pop
push
in
cltd
aaa
cs
stos
pop
add
lea
or
inc
jl
jo
jne
inc
cmpsl
stos
cmp
ja
loope
mov
push
sbb
xchg
sub
nop
xchg
cs
adc
dec
or
scas
sub
ds
dec
cmpsb
imul
adc
lret
mov
mov
lret
out
jae
jge
dec
test
shl
addl
lret
addb
push
inc
add
fdivrs
ret
insb
ss
push
je
jg
lea
and
stos
pusha
cmp
decb
test
aas
lea
cld
pop
sbb
fdivrs
pushf
popa
xlat
sub
mov
xor
sub
ss
ret
test
sub
lds
cmp
inc
imul
outsl
xchg
add
shrd
icebp
cmp
gs
in
cmpsl
lds
cmp
insl
cmp
push
sub
sti
sub
sbb
aas
fwait
movsl
xor
ss
fistps
fsubrl
jmp
cwtl
inc
push
neg
popf
stos
pusha
pop
dec
popa
xor
mov
ja
lahf
pop
xchg
sbb
push
fnstsw
jg
sbb
push
xor
lret
addr16
dec
pop
out
xchg
data16
stos
xor
out
rcr
jecxz
mov
stos
cmp
lcall
loope
daa
inc
lret
pop
dec
insl
dec
and
in
and
ljmp
mulb
jnp
pop
xor
stos
mov
push
xlat
fisubs
jge
cmp
notl
test
pusha
pusha
subb
mov
inc
popf
inc
insl
xor
movsl
aad
cmp
repz
or
add
jl
or
sbb
fnstsw
pop
jbe
sarl
add
pop
push
pusha
popa
sub
jnp
jp
jo
sub
pushf
pop
xchg
das
jns
mov
jge
pop
mov
orl
aam
in
testl
push
iret
sub
icebp
xchg
and
lcall
add
inc
addb
icebp
imul
repnz
cltd
mov
inc
dec
setae
insl
mov
loopne
in
ljmp
mov
imul
aad
jae
pop
cmpsb
mov
pop
shl
cmc
imul
insl
popf
pusha
lds
arpl
cmp
ss
push
add
jp
jmp
dec
std
rolb
gs
ds
dec
inc
fistl
inc
daa
bound
lcall
or
mov
xor
mov
data16
mov
jp
push
dec
jecxz
xlat
ja
mov
pop
cwtl
rcll
pop
sbb
mov
rcl
push
jns
add
int3
inc
sti
shll
pop
and
inc
xchg
pop
mov
cmp
lds
xor
jmp
lahf
push
dec
test
lock
cltd
jb
or
psllq
sahf
adc
cmp
jo
or
fnstcw
adc
jg
lods
dec
dec
daa
insb
push
or
cwtl
inc
pop
pop
cmpb
jle
cwtl
pop
mov
xor
xor
mulb
ja
pop
sbb
or
xchg
movsl
stos
or
sti
int
push
dec
out
jecxz
clc
icebp
or
lods
jne
fldt
idivl
orl
xchg
inc
sub
icebp
mov
stc
xchg
sti
mov
rcl
out
jle
clc
aas
or
push
or
sbb
jo
push
mov
pop
fbstp
mov
fs
push
sbb
shlb
xor
mov
inc
and
cmp
sub
cmp
or
inc
js
xchg
call
outsb
pop
fistl
or
xchg
jmp
pop
pop
shlb
add
leave
push
bound
das
mov
dec
push
cmp
inc
xchg
subb
into
mov
cmp
jno
sahf
stos
aaa
js
aad
int3
jmp
jnp
lcall
sbb
xchg
insb
and
or
sub
pop
scas
adc
inc
adc
fnstcw
lahf
repz
and
test
or
push
movsl
mov
sub
das
testb
mov
xchg
or
fisubs
and
pop
push
inc
div
stos
stos
cmpl
push
lret
and
in
mov
gs
pusha
sub
cwtl
mov
out
outsl
adc
sahf
push
and
mov
dec
xchg
xchg
sbb
imul
in
lock
shlb
sti
out
cmp
imul
fildl
lods
leave
and
clc
rclb
xor
xor
test
pop
pop
mov
xor
out
mov
adc
mov
mov
filds
add
jo
inc
pusha
sub
xchg
es
mov
or
cmpsl
sarl
mov
cmpsl
dec
sbb
xlat
add
xchg
inc
cld
xchg
rcll
xchg
push
inc
xor
fistpll
fists
push
cmpsb
adc
mov
cmpsl
in
jp
xchg
call
icebp
xchg
loope
bound
adc
cli
push
jne,pt
lcall
loope
lock
inc
pushf
dec
mov
adcb
test
push
lcall
std
and
mov
pop
pusha
adc
xchg
inc
in
jae
mov
push
out
in
dec
in
ss
gs
add
ds
iret
push
jno
jge
adc
mov
add
movsl
neg
repz
dec
mov
push
inc
mov
push
in
jmp
mov
int3
inc
int
insl
push
test
adc
dec
lret
rcpps
cmp
mov
mov
push
aaa
mov
pop
je
add
pop
rcrb
jne
loope
or
cmp
stos
aas
push
dec
pop
int
mov
call
lods
xor
sub
mov
outsl
or
push
stos
and
je
sub
movsb
in
icebp
out
sahf
xchg
or
pop
adc
mov
repnz
xchg
pop
ja
cltd
jbe
xor
mov
and
mov
ja
push
xchg
add
bound
dec
push
cltd
mov
lea
lock
loope
scas
in
fcoms
mov
cmc
xchg
jmp
xchg
sbb
gs
sub
cmpsl
inc
pop
dec
call
jge
mov
push
outsl
xchg
loope
push
mov
xlat
push
adc
bound
xlat
in
test
push
das
dec
outsb
in
adc
sub
repz
arpl
shrl
mov
lahf
ss
imul
adc
in
enter
out
dec
data16
mov
sbb
push
fsubs
push
out
or
jg
cmp
push
cs
jo
sbbb
lods
stos
add
popa
xchg
push
jno
mov
fidivs
nop
xchg
movsl
jo
test
mov
aad
mov
and
jae
mov
insb
push
les
mov
mov
cmc
or
cmp
jb
testl
xorb
xchg
sbb
xchg
cmp
push
sub
cmp
in
test
pop
xor
xorb
aam
ret
fsubrs
cli
ret
sub
sbb
mov
xor
inc
or
and
mov
xor
imul
inc
aam
roll
mov
mov
or
or
sti
out
fmul
in
rcrb
jnp
in
push
xchg
mov
aaa
sti
out
das
dec
stc
mov
mov
mov
rcrb
adc
imul
mov
xor
cli
mov
add
xor
mov
pushf
mov
enter
mov
fistpl
pop
adc
andl
xchg
sbb
jp
insl
sbb
addr16
mov
cltd
cld
test
outsl
fwait
dec
imul
cmp
mov
mov
cld
and
xor
out
rorl
mov
divl
mov
and
cmp
mov
cmp
fimuls
and
dec
lock
mov
cmp
fcmovb
pushf
mov
lret
pop
pop
cmp
popa
mov
aam
repnz
pusha
imul
jb
pop
rcll
mov
sbb
mov
cmpsl
daa
inc
pop
jo
aam
lds
rorw
mov
mov
repz
mov
pop
call
mov
fwait
xor
mov
and
movsl
call
mov
icebp
xchg
jns
fmull
rcrl
sub
sub
subb
pusha
xlat
xor
iret
and
push
pushf
mulb
mov
fisttps
fisubrs
jnp
add
lods
int3
data16
lock
mov
mov
scas
xor
hlt
ret
scas
es
loop
jl
in
stc
and
adcb
adc
fimuls
lods
orb
cmp
lret
xor
jp
dec
jecxz
imul
cmp
icebp
sub
inc
mov
mov
jg
dec
into
rcll
ret
and
ret
xor
xor
jle
call
mov
rclb
push
pop
sbb
dec
vmovd
lahf
sub
test
mov
push
push
push
jg
sub
mov
rolb
mov
fwait
insl
add
cmp
decl
sub
iret
aaa
fldcw
jg
xor
fimull
mov
or
mov
lds
push
xor
in
lods
rclb
aaa
stc
cmp
cmp
pop
shlb
xchg
add
adc
jle
push
test
or
pop
xor
mov
cmp
xor
imul
scas
and
adc
jae,pt
mov
adc
js
jmp
popf
les
loope
and
mov
mov
xor
xchg
jae
jb
cmp
ljmp
dec
push
add
jle
in
pusha
jmp
and
fisubs
pusha
fwait
cmp
in
and
fwait
push
stos
arpl
sub
nop
gs
push
jge
cmp
jg
pop
mov
add
mov
and
mov
inc
sbb
inc
cmpsl
outsl
subb
lds
jbe
mov
cmp
enter
rorb
mov
je
cmp
pop
push
enter
loope
stos
out
and
jge
lods
cmp
fs
cmpsb
int3
push
pusha
out
into
xchg
push
sbb
fcomp
adc
dec
xchg
test
das
mov
std
pop
into
nopl
out
rcrb
sub
dec
cltd
xchg
dec
mov
jnp
inc
std
mov
pop
fs
fwait
outsl
imul
xchg
cmp
mov
inc
pop
lret
push
je
mov
fstpl
pop
xadd
adc
insl
shrb
sub
inc
jg
adc
in
mov
dec
lret
xchg
pop
cmc
mov
shlb
icebp
adc
stc
push
dec
xchg
sub
ficompl
in
xchg
fisubrl
sbb
xor
mov
sub
mov
adc
cs
jge
out
mov
xlat
cmp
cmp
subb
ss
out
call
push
and
inc
mov
cmp
mov
es
mov
stc
hlt
inc
inc
adc
add
dec
in
shrb
adc
xorl
clc
lcall
xor
int
sbb
cmpsb
or
xchg
mov
cltd
insl
fs
popf
sar
cld
out
shll
test
pop
arpl
fdivs
push
iret
enter
xchg
cmp
data16
mov
enter
fs
out
iret
vcvtsi2sd
cmpsb
movsb
mov
sar
push
sbb
jmp
lods
in
mov
jns
mov
dec
es
inc
rcrl
push
mov
imul
fstl
std
xor
incb
cmc
and
lret
push
push
mov
rorb
lods
movsl
roll
jnp
stc
xchg
std
sbb
cmpsl
mov
and
out
mov
push
loop,pt
jge
xor
lods
loop
cmpsb
jecxz
roll
xchg
push
mov
jge
fbld
lds
pop
dec
repz
xor
dec
xchg
push
or
popa
mov
mov
add
int
and
aas
jnp
pop
cmpsl
or
notl
aam
js
or
scas
scas
fwait
int3
insl
movl
dec
into
dec
frstor
xor
fabs
push
insl
rcrb
dec
out
and
sti
aad
out
in
add
sbb
aad
in
jp
cltd
sahf
inc
push
test
insb
push
push
cmp
cmp
fwait
pop
hlt
sbb
ret
lock
movsl
cli
movsb
adc
xchg
test
push
movsb
add
movsl
mov
sbb
jbe
fsts
jno
arpl
dec
lea
add
pop
pop
pop
dec
push
dec
lods
cmc
fwait
loopne
push
popa
push
push
dec
in
rcl
jbe
les
mov
mov
lods
xor
cltd
adc
daa
fldl
mov
int3
adc
repz
divl
addb
inc
push
push
cvtpi2ps
push
test
sbb
in
insb
mov
lea
in
shrb
adc
out
aad
mov
or
mov
xchg
repz
sbb
pusha
xchg
mov
into
iret
test
and
mov
cmpsb
cmp
int
mov
sarl
mov
ljmp
cmpsb
sbb
cmc
pop
xor
arpl
lahf
dec
mov
lock
jecxz
cmpb
in
or
data16
test
push
cmp
stos
stos
pop
repnz
lds
enter
mov
ror
and
leave
jg
pop
je
push
push
hlt
inc
mov
pop
aad
sub
das
cmp
jae
ret
mov
cli
sti
or
dec
dec
adc
shll
js
sti
test
sub
repnz
fistpll
xor
fidivl
cmpsl
inc
int
rcr
sbb
jecxz
fidivl
inc
push
or
pop
pop
lock
out
xchg
bound
inc
pop
push
and
cs
mov
xor
inc
push
push
loop
test
rcll
fistps
add
aad
cmc
jp
stos
clc
push
mov
cltd
cs
push
mov
xor
ret
clc
xor
inc
dec
jnp
out
jge
xor
fwait
std
add
jmp
xchg
test
imul
sbb
mov
repnz
sub
push
icebp
push
xor
mov
stos
lcall
push
cmpsl
add
repnz
stos
call
outsb
roll
gs
pusha
in
lods
mov
leave
scas
jnp
cmpsl
push
test
dec
fs
adc
fs
xchg
arpl
cmp
cmp
cmp
je
lret
xlat
aas
das
rorl
cltd
insl
dec
js
arpl
cmpsb
jne
mov
in
cwtl
pop
mov
lret
das
add
stc
inc
out
aaa
fdiv
cs
jle
imul
xor
insb
xchg
mov
pushf
xor
pop
add
dec
imul
adc
sti
scas
ret
jle
xor
and
dec
lahf
ja
mov
ljmp
inc
ljmp
sbb
xchg
inc
jmp
je
push
push
repnz
dec
mov
cmp
fsubs
inc
bound
cmp
sti
adc
mov
imul
cwtl
sub
loope
ss
jecxz
hlt
mov
adc
pop
hlt
ss
sbb
sarb
cli
pop
xchg
push
je
jne
mov
mov
xchg
jp,pn
jno
xor
adc
or
sahf
jne
jg
sub
test
lods
sti
testb
sbbb
iret
mov
jmp
and
mov
outsb
push
adc
imul
lods
loop
pop
mov
rolb
lcall
imul
push
cmp
loopne
xchg
mov
jp
or
scas
or
mov
aas
and
call
dec
adc
out
ret
aam
sbb
bound
movsb
cmpsb
ret
or
xchg
mov
call
inc
jle
pop
jnp
mov
lret
clc
out
sbb
push
jbe
push
xor
loopne
sahf
popl
and
cmp
shll
xor
mov
or
jmp
sub
xchg
mov
or
fdivs
xorl
dec
mov
imul
data16
sub
imull
mov
inc
sub
insl
cmp
aas
sub
and
inc
aad
jnp
icebp
mov
out
int3
cmp
int
pop
leave
push
aas
sarb
mov
push
or
loopne
mov
pop
lock
leave
das
push
bound
add
fisubl
jnp
or
mov
adc
and
adc
out
test
inc
idivb
mov
adc
jp
add
in
hlt
stc
inc
shlb
loop
mov
add
es
sti
dec
in
push
insb
mov
cmpsb
sbb
icebp
cmp
dec
add
repz
push
mull
shll
scas
lret
inc
mov
push
jecxz
add
dec
out
lds
rolb
xor
sub
insb
in
out
fwait
movsb
in
mov
push
ds
dec
shlb
mov
ucomiss
push
leave
es
daa
lahf
ss
movsb
push
sub
fildl
and
pusha
xor
fsubrs
xlat
data16
pop
in
mov
and
ljmp
mov
idivb
clc
push
std
pop
mov
shlb
or
fbld
sbb
dec
sbb
ret
mov
push
insl
adc
pop
mov
or
xchg
inc
adc
scas
inc
mov
test
arpl
or
mov
mov
fdivs
inc
mov
outsl
and
jmp
push
loopne
lcall
push
in
bound
mov
or
inc
outsl
sbb
test
and
jbe
out
xchg
inc
lcall
into
jns
mov
pushf
inc
jo
les
and
dec
add
and
mov
cmc
in
lret
push
ret
lahf
and
mov
push
push
ljmp
out
repz
lret
and
ss
fwait
bound
inc
sti
xorl
dec
aam
lcall
cs
sbb
jo
add
adc
mov
cmp
fstpl
push
add
add
mov
mov
out
ret
inc
xchg
push
dec
ljmp
inc
into
aaa
ss
mov
std
test
scas
mov
inc
push
int3
ss
xchg
push
pop
dec
jg
stc
fidivs
dec
mov
fs
mov
add
lret
push
loopne
call
pop
mov
push
or
jns
icebp
in
push
push
lahf
cmp
add
and
out
push
fwait
lcall
fildl
fildl
add
cmp
pop
hlt
xchg
push
xchg
pop
mov
std
adc
or
push
and
test
pop
enter
jle
cmp
aas
mov
das
fmuls
or
aas
mov
sub
loop
inc
call
filds
std
andb
cmp
inc
arpl
pop
das
into
sub
hlt
dec
mov
and
pop
mov
es
xlat
cmp
xchg
mov
in
imulb
and
aam
dec
pop
pop
vmovlpd
out
sbb
or
pop
jp
inc
mov
xchg
in
sbb
mov
pop
cmp
hlt
rorl
fidivrs
mov
out
fwait
in
pop
icebp
jbe
lods
les
pop
aaa
mov
push
mov
jne
or
mov
sbb
rorb
and
mov
lods
outsb
scas
dec
stos
popa
inc
orl
cmp
int
orl
fcompl
jle
jg
popa
push
popl
ljmp
sub
fdivrs
or
in
les
stos
or
hlt
rol
cmc
movsl
mov
xor
aas
mov
lock
mov
jnp
pop
stc
fistl
lds
push
in
mov
jle
and
sbb
js
scas
ss
fwait
ds
and
das
inc
iret
enter
pop
fwait
or
cld
push
faddl
push
jl
cld
les
subb
push
pop
mov
lods
ss
dec
pop
pop
mov
les
fstpt
push
cmc
insb
xchg
push
jecxz
into
clc
out
filds
loopne
or
cmp
sub
std
icebp
lds
sub
mov
cwtl
mov
repz
jns
and
out
lods
arpl
out
push
lret
inc
outsb
inc
and
shlb
mov
sbb
sbb
xor
cmp
or
mov
mov
insl
outsb
in
ficompl
popf
mov
jl
fnstsw
inc
or
and
adc
sub
in
sarl
mov
pop
jno
stos
xchg
enter
xlat
subl
das
rorl
mov
mov
jmp
adc
lock
pushf
mov
in
and
lret
mov
fcom
sub
sti
lods
jb
stos
jno
lock
cmpsb
icebp
loopne
xchg
jnp
mov
fmull
test
jbe
mov
test
mov
enter
aad
and
ret
jg
ftst
repnz
inc
nop
std
jge
loopne
ds
sub
mov
insl
movsb
cmc
mov
icebp
mov
and
xchg
aaa
insb
push
sbb
pop
and
repz
lea
out
mov
flds
dec
lock
scas
jge
and
out
and
pop
cli
sahf
push
mov
push
les
mov
sti
ret
mov
rcrb
push
data16
cmp
inc
lods
inc
femms
xchg
movsl
mov
and
pusha
dec
sub
push
jmp
sub
std
jg
mov
cwtl
cltd
sub
push
sub
adc
mov
sub
dec
std
pop
mov
mov
out
inc
cld
into
sbb
mov
jnp
push
push
mov
or
mov
inc
ds
std
push
xor
pop
cs
orl
sub
inc
xchg
adc
sub
xlat
pop
adc
or
and
cltd
pusha
sbb
and
adc
cmp
int3
daa
ss
sti
clc
out
out
shl
nop
jg
ret
mov
inc
aam
fucomip
push
mov
lret
and
push
stos
xlat
adcl
lret
ss
aas
icebp
jl
fs
arpl
jno
lock
pop
pop
adc
push
into
adc
fdivs
mov
addr16
mov
jne
add
sahf
push
rcrl
addr16
scas
sbb
push
mov
fistps
lock
icebp
push
or
subl
add
iret
mov
icebp
mov
xor
jbe
lods
mov
push
repnz
dec
lret
and
mov
es
roll
inc
or
mov
pop
adc
jecxz
dec
mov
cmp
cmpsb
push
fisttps
jbe
stos
xor
test
and
sub
adc
dec
roll
pop
push
push
iret
addr16
mov
or
les
sub
adc
push
pop
fwait
pop
xor
subl
inc
dec
cwtl
ljmp
stos
or
loop
movl
fbld
jno
sar
iret
popf
and
or
into
sbb
test
pop
repnz
mov
fldenv
pop
ficoml
mov
stos
fistps
movsb
pop
lock
dec
push
test
adc
sbb
mov
mov
lret
loopne
push
imul
iret
pop
pop
mov
lret
add
pop
jmp
mov
mov
jp
or
mov
push
adc
jbe
push
pop
sub
lret
sub
mov
pop
xchg
pop
or
lret
sub
xorl
jno
cmp
out
lods
jg
test
sbbb
rclb
jecxz
adc
push
jg
imul
jb
mov
mov
xchg
aas
out
push
and
lret
xchg
sarb
ljmp
fmuls
ret
add
mov
or
xchg
cmp
ds
ficompl
sub
lea
jle
out
or
xchg
dec
mov
pop
movsb
lea
rclb
or
or
xchg
jae
mov
cld
pop
loopne
mov
je
out
push
ficoml
cmpsl
mov
pop
pop
gs
leave
add
xor
imul
sub
das
iret
daa
divl
mov
fwait
xchg
andb
dec
cld
mov
fs
jmp
loop
fcmovbe
push
jne
notl
repnz
inc
cld
inc
outsl
in
mov
ret
or
cmpsl
test
iret
in
push
in
pop
xor
jae
sahf
out
fcompl
out
sub
pop
cltd
out
data16
roll
pop
add
cmp
and
mov
cmpsb
and
pop
lret
mov
sbb
repz
nop
push
pop
cmpsl
and
cmp
es
lds
fnstenv
jns
push
rorl
push
scas
sbb
into
add
pop
mov
lahf
outsb
test
push
jmp
inc
xor
mov
mov
jnp
sbb
mov
cs
add
inc
test
test
ret
push
push
pop
dec
das
stos
jle
aad
or
dec
test
mov
loop
out
cli
ret
mov
mov
sub
sbb
inc
lahf
fs
and
xchg
outsl
loope
mov
pop
clc
dec
ret
rcrl
pop
mov
jb
push
int
sub
dec
add
jg
dec
or
cmpb
fstps
aaa
lods
xlat
add
inc
leave
mov
jno
shrl
mov
or
adc
add
lcall
jle
cmpsb
dec
pop
dec
inc
mov
xchg
mov
call
in
frstor
loope
cmp
repz
outsb
cmc
cmp
aaa
pop
js
inc
repnz
fisubrs
xchg
divb
mov
jecxz,pn
mul
daa
in
and
pop
mov
pop
push
cwtl
pop
jo
in
cmpsb
arpl
pop
mov
leave
push
push
lret
iret
mov
inc
dec
or
mov
mov
dec
loopne
fdivrs
out
lods
andl
pop
fmull
stos
lods
nop
mov
inc
push
xchg
mov
out
jb
rclb
bound
je
sub
dec
mov
sbb
mov
stos
add
aaa
adc
jecxz
mov
dec
pop
fisubl
ret
inc
xlat
push
jno
push
push
adc
push
inc
mul
enter
gs
mov
xchg
bound
popa
sbb
pop
mov
int3
jg
or
mov
bound
sahf
inc
lds
jg
sub
sub
mov
popf
jo
dec
xor
insb
std
push
aad
into
pop
in
push
mov
inc
rcrl
cmc
dec
dec
sbbb
cmp
lods
pop
faddp
dec
out
pop
cmpsb
xchg
inc
sbb
aam
xchg
cwtl
fs
add
lods
sub
lret
cmp
cli
mov
mov
mov
adc
movsb
outsb
fs
imul
in
jne
je
ret
ficoml
nop
rcrb
aaa
cmp
sbb
adc
inc
adc
or
lahf
mov
lahf
and
mov
js
dec
adcb
and
add
loop
and
xchg
sbb
out
rcrb
aaa
insb
cmp
lods
mov
adc
add
pop
mov
jae
cmp
scas
out
mov
jmp
mov
mov
idivb
cmpsl
add
inc
dec
lret
addr16
sbb
outsl
pop
call
cmp
dec
outsb
push
dec
mov
loope
jb
push
cmp
mov
nop
adc
adc
into
popa
cmp
push
cmpsl
xchg
push
sar
pop
inc
xchg
mov
jecxz
jle
in
lock
lcall
xchg
out
mov
inc
inc
filds
pushf
mov
jmp
aad
bound
push
add
cltd
inc
divb
push
jo
cmp
xchg
repz
fwait
cmpsl
xchg
gs
sub
movsb
mov
cs
xchg
fldln2
xor
mov
pop
arpl
mov
divl
incl
mov
jo
call
inc
xor
mov
xchg
outsl
lea
or
enter
dec
clc
sub
outsb
mov
addr16
decl
call
and
insl
scas
sbb
inc
rcr
rcrb
inc
push
inc
fwait
xor
clc
mov
mov
ret
sub
in
aaa
xlat
outsl
add
int
cmp
dec
pop
nop
lcall
sub
scas
fistpl
jns
out
adcl
iret
daa
addr16
cmp
arpl
mov
inc
pop
scas
pop
add
jecxz
rorl
shl
mov
xor
stos
mov
and
sbb
sub
jle
mov
fnstcw
push
cmp
jo
jae
mov
mov
xchg
mov
mov
fdiv
and
insl
mov
push
lods
mov
andl
testb
inc
fdivrp
lcall
sbb
mov
sbbb
jmp
push
sarl
adc
add
lock
fdivrl
ret
cmpsl
lcall
inc
fidivrl
lret
add
std
xchg
dec
add
mov
adc
bound
pushf
mov
std
and
jmp
cmp
mov
mov
arpl
adc
xchg
sub
jg
aad
dec
into
adc
out
out
lods
lods
inc
add
movsb
xor
xor
sbb
je
jge
xchg
xor
insb
adc
or
outsl
mov
outsb
push
jno
shrl
mov
int
mov
mull
xlat
rcrb
mov
jg
xchg
pop
fimull
arpl
mov
pop
cs
sahf
rcll
pushf
adc
arpl
push
jns
ficomps
lea
jae
sbb
out
test
dec
lret
popa
hlt
or
push
jnp
mov
enter
adcl
enter
or
inc
jg
ret
push
addb
out
clc
pop
cld
xchg
and
mov
je
push
enter
fldcw
sti
push
inc
xchg
or
insb
ss
daa
xchg
sbb
cmp
inc
dec
or
dec
ret
stos
rcr
lret
sbb
sarl
fsubs
and
or
mov
pop
push
pop
xchg
xchg
and
iret
xchg
or
xchg
dec
roll
xchg
sbb
push
jp
int3
push
cmp
and
fmull
sbb
and
outsl
mov
ds
xchg
ljmp
mov
sbb
hlt
xor
add
inc
in
inc
outsb
adc
shll
sbb
sub
or
aaa
mov
jnp
add
insl
pop
inc
and
pop
dec
cli
inc
pop
jne
xchg
jge
mov
rclb
or
loope
fwait
mov
jbe
mov
fstps
pop
fstl
inc
popa
pop
xchg
jb
cs
cltd
add
mov
fcompl
out
fwait
dec
out
stc
inc
outsl
lret
dec
idivb
loop
adc
ss
dec
in
scas
mov
aas
dec
mov
fiadds
mov
xchg
int
mov
pop
cmpsb
and
jae
add
dec
pop
mov
cs
bnd
xlat
call
iret
cmpsl
sbb
es
arpl
adc
mov
jmp
pop
and
xor
jmp
stc
insb
lahf
mull
out
test
pushf
cmp
dec
ds
inc
aas
lahf
xor
cmp
sub
jmp
jno
les
pop
xor
xor
mov
in
mov
out
cmp
xor
aas
hlt
dec
fwait
into
rorb
xor
adc
inc
xor
mov
push
addl
pop
or
inc
rcrl
lcall
mov
nop
fisttpll
cmp
xchg
mov
add
push
jns
popa
aaa
inc
mov
jge
and
dec
adcb
sbb
fnstsw
popf
jns
out
add
call
das
lods
jno
mov
cmp
fldl
jmp
int3
insb
scas
sub
nop
jge
push
scas
xor
gs
mov
add
cmpsl
pop
pop
out
pop
add
lds
popf
push
mov
or
push
add
xchg
cmp
or
mov
push
sub
cmp
cmpl
lahf
fdivs
rcll
add
nop
mov
and
insb
push
stos
inc
mov
scas
add
xchg
pop
out
mov
or
pop
int3
mov
test
lods
xor
jne
push
lock
mov
dec
stc
popf
xor
ret
es
imul
inc
and
movsl
in
cli
leave
cmp
mov
fs
fs
mov
jmp
int3
arpl
negb
out
push
icebp
pusha
pop
fdivrs
add
nop
out
shrb
pop
push
ret
lea
shlb
inc
arpl
mov
ret
ret
cmpsb
jmp
test
mov
sbb
inc
xor
shr
jp
mov
add
fldenv
cli
push
mov
imul
or
adc
add
scas
mov
mov
inc
pop
xlat
rol
les
daa
mov
icebp
lods
jge
mov
xchg
aad
mov
aaa
les
inc
dec
dec
dec
pop
jg
movsl
sbb
cltd
dec
popa
xchg
cmp
lret
push
jmp
cmp
std
pop
or
pop
xlat
jbe
outsl
xchg
pop
movsb
les
push
lea
loope
mov
es
push
mov
xchg
jo
adc
mov
nop
es
inc
imul
mov
inc
mov
fisttpll
mov
repnz
call
dec
cmpsb
stc
jecxz
jo
xchg
lret
pop
pop
adc
push
aad
jae
inc
xor
adc
adcl
add
inc
mov
or
or
movsb
mov
jnp
sbb
int
imul
xchg
call
push
sbb
sbb
jne
push
cmpsl
test
and
xor
sub
orl
xchg
inc
fsubrs
jp
mov
clc
or
or
scas
jo
mov
adcb
mov
mov
xor
ljmp
jo
fs
leave
xchg
add
lds
add
add
arpl
mov
mov
into
imul
je
push
sub
mov
jge
adc
in
mov
outsl
loope
adc
xor
sbb
mov
stos
test
and
aas
std
mov
push
data16
inc
adc
fisubl
scas
js
cmpsl
jns
push
cmpsb
lret
jl
fs
sub
sti
popf
xchg
adc
push
mov
call
pop
leave
sub
jno
loopne
pop
clc
mov
or
inc
stos
jecxz
imul
mov
push
inc
pop
jns
mov
les
shrl
in
imul
xlat
mov
out
xor
orl
into
shll
stos
movsl
jg
sub
mov
sub
imull
aad
ret
imul
sub
loopne
imul
jae
cmp
pusha
cli
js
call
push
pop
inc
xor
call
cli
adc
xchg
dec
fdivrp
es
ficomps
and
enter
shr
aas
add
in
bound
and
mov
shrb
add
sbb
insb
mov
scas
cli
or
mov
xchg
inc
push
xor
mov
pop
insb
roll
pop
int
pop
repz
fmul
mov
ja
in
in
rcl
aad
loopne
jp
cwtl
or
and
cmpsb
loopne
jp
popf
mov
push
sbb
iret
fisttpll
sbbb
test
xor
imul
in
fisubrl
and
ror
cmp
lret
and
loop,pn
loop
or
mov
lods
and
imul
and
jne
xchg
pop
lea
xor
vpaddsw
dec
rcll
and
data16
xor
lret
stc
xor
sbb
sarl
dec
rcrl
cld
push
pop
cmp
lahf
out
xor
fsts
stos
mov
aam
mov
and
or
out
or
mov
mov
jae
mov
dec
xchg
loope
cmp
mov
nop
sub
mov
or
mov
daa
push
out
shrb
xor
movsl
xchg
movsb
jp
mov
cmp
mov
das
cld
mov
in
mov
jecxz
mov
push
fstpl
das
daa
stos
adc
sbbb
jae
scas
mov
xchg
stc
and
push
xchg
inc
js
cmpb
dec
mov
or
js
nop
lea
fs
xchg
les
push
push
scas
gs
frstor
stos
cmp
jne
aas
or
push
push
xchg
cli
inc
and
mov
mov
hlt
ds
cmp
cld
in
mov
icebp
xchg
shl
scas
addr16
xchg
lds
sub
push
pusha
push
stos
sbb
stos
repz
push
cli
nop
jae
or
popl
inc
jmp
pop
and
dec
into
fnstsw
dec
nop
pop
jns
mov
mov
repnz
test
sarl
or
push
dec
out
mov
mov
aam
out
mov
dec
mov
sbb
push
and
xor
push
into
movsl
in
pop
in
data16
jae
cmpsb
testl
mov
movsb
jae
movsl
in
add
sbb
out
lea
jp
lcall
mov
jge
mov
add
mov
xchg
loopne
mov
nop
push
pop
ljmp
pop
in
push
mov
pop
iret
insl
mov
pop
shl
fisubrs
sub
loopne
out
push
int3
sbb
daa
and
call
sub
or
xchg
pop
dec
scas
and
push
push
pop
lock
and
mov
rcrl
sarb
jns
in
ds
mov
dec
testl
dec
loop
mov
test
call
ljmp
icebp
sahf
jle
mov
fisubrl
mov
pop
das
jl
cmc
cmpsb
mov
cmp
aas
mov
mov
push
arpl
fistpl
pop
cld
push
sub
xor
dec
push
pop
cmp
iret
mov
outsl
test
insl
jmp
jl
mov
mov
cmpsl
inc
insb
popf
aam
call
dec
stos
and
mov
and
enter
push
push
popa
ret
out
pop
fs
and
fmull
dec
ja
nop
add
fcmove
cmp
stc
xchg
inc
iret
jns
adc
or
out
add
cmpsl
sbb
nop
mov
dec
xchg
mov
sti
add
mov
xchg
shl
mov
icebp
icebp
sub
sti
xchg
add
mov
jae
inc
in
pop
mov
mov
test
xor
adc
xchg
adc
dec
mov
inc
lahf
cltd
and
mov
jns
jle
inc
or
lcall
jnp
mov
lods
mov
cmpsl
jle
ljmp
xchg
lret
or
imul
pop
mov
addr16
xchg
cltd
or
lea
sahf
fisubl
hlt
loope
pop
xor
in
loop
cmpsb
in
arpl
mov
arpl
loop
pop
aaa
inc
lds
jp
inc
bound
fs
test
cmc
rep
xchg
pop
popa
clc
cmp
mov
sub
sbb
fldt
dec
xchg
inc
fistps
add
loope
icebp
fiadds
push
in
cmpsb
jns
rcrb
insb
cwtl
cmc
and
cmp
shll
arpl
shrl
fld
and
mov
inc
inc
cmc
add
push
xor
call
gs
das
add
fldcw
push
addr16
add
into
fldenv
mov
insb
insl
inc
jo
add
jl
jecxz
jl
int
pop
out
or
nop
xor
pop
es
mov
jg
dec
jecxz
inc
int3
out
iret
cld
dec
mov
shll
xor
imul
test
es
shlb
cld
lods
sbb
sbb
mov
sbb
scas
xor
push
dec
inc
ror
rol
in
ret
popf
add
mov
adc
adc
fwait
repnz
loop
gs
mov
cwtl
xorl
mov
mov
jne
psubusb
and
inc
mulb
insb
stc
gs
xor
rorl
out
dec
and
rcll
imul
sub
mov
jo
orl
insb
push
movsb
loope
in
ljmp
xlat
fs
scas
mov
rcll
pop
dec
movsb
bound
sub
jp
sub
mov
test
add
test
cmpb
mov
ret
dec
dec
jge
or
fisubs
sahf
rorl
mov
xchg
cld
ja
test
ja
push
lcall
movsl
add
pop
jecxz
add
xor
imul
dec
push
mov
sub
or
imul
das
es
ficomps
xchg
fiadds
add
inc
dec
cwtl
arpl
cld
inc
scas
jle
add
mov
adc
stos
inc
data16
stc
pop
aad
scas
push
rolb
out
inc
fsubrl
mov
clc
mov
sbb
jge
xchg
cs
out
rolb
jg
or
fistps
xor
xor
ret
outsb
push
sbb
aam
push
mov
xor
loopne
xchg
andl
lds
dec
rcrl
or
jge
mov
into
dec
lock
sti
dec
xchg
shrb
jnp
movups
out
jecxz
lahf
fldt
call
scas
inc
stos
inc
stos
push
popf
das
ljmp
cmp
mov
mov
into
icebp
jae
lods
cmp
cmp
cld
and
aam
jmp
icebp
aam
test
or
push
loopne
fisubrl
cltd
jmp
sbb
adc
cld
shrb
jecxz
es
mov
dec
loop
add
hlt
cmp
data16
inc
shr
jg
and
pusha
lahf
imul
push
pop
shlb
rcrl
popl
loopne
out
or
call
sub
inc
mov
lcall
push
jae
test
ret
push
mov
jns
cli
pop
data16
push
fistpl
test
sbb
pop
sbb
pop
adc
push
xor
mov
sbb
orb
in
ja
jle
lret
sub
jle
mov
xlat
movsl
or
inc
sbb
mov
push
sbb
fsubl
or
in
mov
inc
ja
add
fwait
dec
push
mov
add
add
sbb
push
dec
cmpsl
enter
shll
cmp
push
sub
pop
jp
cld
sbb
inc
call
xchg
addr16
enter
mov
out
out
xor
aaa
std
ja
test
int
add
add
push
pop
addr16
mov
iret
xor
aam
movsb
lcall
in
mov
std
fimull
or
inc
sbb
out
xchg
mov
jge
lahf
cmp
cld
shrl
sbb
or
nop
stc
push
ds
add
or
fisttpl
fsubrl
push
inc
iret
jb
cmp
cwtl
imul
imull
mov
adc
shlb
add
xchg
mov
sbb
nop
inc
fwait
push
push
das
jbe
dec
sub
xchg
adcl
idiv
mov
icebp
cwtl
xor
xchg
imul
ja
pusha
int
ds
repz
xor
adc
js
dec
sarl
push
cmp
add
cld
jle
mov
aam
jmp
push
out
test
xchg
loop
add
cltd
dec
cwtl
mov
subb
in
sub
inc
cmp
xchg
aas
xor
test
or
xor
jl
inc
bound
dec
into
xchg
mov
pop
sarl
add
stc
daa
xchg
icebp
add
shll
lahf
sub
dec
sub
mov
fildl
cmp
jae
mov
out
lock
adc
xor
jno
sbb
cwtl
mov
int
pop
pushf
fs
lods
mov
addl
dec
or
and
inc
testb
cmp
mov
adc
or
leave
jp
dec
icebp
loopne
lock
jno
aaa
loope
in
xchg
push
insl
cltd
insb
rclb
cld
xchg
and
xor
mulb
outsb
repnz
outsl
lahf
pop
ret
xchg
cmc
or
outsb
dec
cltd
dec
popf
mov
fists
cli
stos
cli
push
enter
cltd
jmp
add
lods
in
insl
lock
and
dec
cmp
das
test
xor
mov
sub
dec
xor
mov
pusha
xchg
ljmp
es
lock
scas
movsl
xor
stc
ljmp
pop
sarl
pop
arpl
loop
scas
jb
es
jo
sub
pop
push
cwtl
pop
enter
and
and
lret
and
push
fdivp
movsl
lret
mov
scas
adcl
push
into
or
data16
pop
movb
je
inc
mov
mov
inc
add
mov
pop
imul
mov
xchg
insb
jae
dec
cmpb
push
sub
mov
adc
addr16
adc
in
repz
mov
cld
or
subl
bound
lea
jno
pop
test
mov
int3
inc
push
jge
stc
inc
xchg
jno
or
sti
cmpsl
cwtl
rcr
outsl
add
pop
stos
push
lahf
dec
movsb
popf
pushf
sub
add
dec
aas
dec
das
aas
sbb
dec
mov
jne
fisttps
push
cmpsl
sbb
cld
and
js
mov
lock
fildll
jb
pop
call
jmp
pop
mov
mov
popf
inc
and
sbb
hlt
sub
push
popa
lea
aaa
aam
imul
fs
sub
mov
adc
adcl
shrb
adc
movsl
arpl
inc
cwtl
repz
cmp
andb
mov
cwtl
adc
pop
cld
push
cmp
aad
sub
sub
jle
movsl
shll
push
dec
sub
in
test
inc
fwait
nopl
cmpsl
in
mov
cmpsl
popf
inc
hlt
pushf
pusha
das
push
idiv
cmp
rol
adc
mov
mov
out
jecxz
fmulp
lods
cwtl
adc
add
mov
cmp
rolb
mov
mov
push
adc
rcrb
push
shl
test
hlt
cmpsb
xor
sbb
mov
test
jns
stos
mov
mov
jmp
std
adc
outsl
mov
dec
add
push
mov
lea
pop
dec
mov
out
and
mov
inc
mov
sub
mov
and
clc
mov
dec
dec
and
or
adc
ret
mov
sbb
int
push
imulb
add
cltd
clc
and
mov
insl
cmp
xor
or
rcrl
cmp
or
cmpsb
arpl
loope
test
test
jge
sti
mov
cmp
test
call
cmpsl
jge
lds
int3
gs
psrlq
adc
jl
xor
push
pushf
cmp
lret
jns
call
pusha
xchg
fistl
std
mov
and
cmp
fisttps
cmpsl
mov
ss
stc
xor
or
push
or
sbb
mov
jo
and
xchg
and
int
or
nop
int
adc
push
lds
and
in
jne
int
out
mov
dec
push
cmpsb
pop
add
sti
jecxz
ficompl
in
push
loope
xor
mov
sbb
loop
mov
loopne
push
shr
insb
aad
and
hlt
ss
sbb
push
and
mov
arpl
out
cs
iret
lcall
out
mov
cmp
ja
js
mov
mov
fisubl
jecxz
sar
inc
cld
dec
pop
sub
nop
call
ja
sub
mov
sti
adc
lods
and
xor
das
inc
sbb
pusha
pop
int
xor
pop
dec
mull
das
mov
jecxz
sub
mov
aaa
ret
das
cli
jl
popa
inc
lock
ljmp
bound
sarb
xchg
loop
push
jbe
aam
fistpll
mov
cmp
dec
adc
aaa
xlat
jg
mov
imul
in
mov
pop
sub
jmp
mov
repz
mov
aas
push
movsl
lret
inc
pusha
push
in
cwtl
fisttps
or
xchg
bound
in
and
js
inc
into
xchg
lahf
leave
cmp
pop
sbb
mov
out
stc
push
jmp
inc
ljmp
sbb
inc
mov
sub
xor
fs
and
test
aaa
jg
lods
imul
push
rcll
push
cmp
mov
push
insl
jle
cli
lock
push
das
xchg
or
filds
add
aas
jle
arpl
js
test
inc
jle
jb
repnz
aaa
leave
and
jmp
mov
repz
add
cld
and
xchg
jbe
pop
incb
adc
mov
shll
mov
and
xchg
out
add
jns
inc
xlat
xlat
pop
add
movsb
push
and
cs
test
enter
ret
sub
pop
imul
push
mov
push
dec
xchg
pop
and
vmwrite
xorl
mov
cli
jge
insl
fmuls
cld
scas
sub
aas
shl
xlat
cmp
jge
jnp
jae
lret
icebp
fidivrl
andb
add
and
dec
fs
in
pusha
in
or
ret
loop
pop
xlat
imul
sarb
fwait
rcll
cmp
pop
call
pop
mov
mov
jns
lret
fisttpl
sub
bound
stos
leave
xchg
scas
movb
test
adcl
test
sarl
xchg
xor
add
pop
sbb
adc
xchg
add
push
fmul
andb
insb
stos
inc
jge
xchg
lock
fistpl
mov
jo
fwait
mov
sub
cltd
pop
out
jno
cmpsl
and
ret
xor
pop
xor
push
cmp
mov
adc
xchg
sub
bound
rorl
sbb
mov
inc
nop
ja
int3
aas
shl
pushf
lods
imul
ret
and
pop
xor
add
jno
rcr
pop
push
popa
or
and
sbb
sub
or
adc
fidivl
dec
push
add
or
outsl
out
dec
sub
dec
faddl
push
mov
mov
cli
xor
nop
les
jae
add
divb
repnz
sub
pop
divl
or
cld
lret
dec
sub
stos
stos
cld
sub
and
lock
xor
imul
xor
addr16
and
sbb
ds
sub
push
imul
ds
or
pop
and
or
sub
pusha
pop
lods
jns
ljmp
dec
enter
pusha
ja
movsl
testb
out
std
add
push
mov
pop
xor
jg
pusha
mov
pop
jl
cmp
cmc
out
mov
inc
sbbb
push
sahf
or
push
and
fistpl
pop
popa
adc
div
ljmp
hlt
push
mov
xchg
cmp
or
int
xor
jbe
mov
test
adc
cli
push
push
xor
inc
cmp
inc
inc
movsl
adc
xchg
or
xor
in
jb
cmp
enter
arpl
or
pushf
dec
addr16
pop
or
repz
cld
jns
mov
sahf
sbb
cs
test
jg
jg
dec
outsb
xchg
xchg
daa
jbe
xchg
xchg
in
frstor
mov
iret
inc
rol
stos
xchg
add
es
pop
flds
jns
mov
add
or
and
cld
mov
push
adc
mov
call
cs
fnstcw
loop
push
icebp
movsb
adc
xor
sub
cltd
inc
pop
inc
mov
out
inc
and
fcmovu
cmp
or
mov
mov
xor
inc
sbb
into
xlat
jle
sub
push
in
jo
rcl
jmp
jo
push
jno
and
mov
fs
out
fistps
adc
inc
mov
and
movsl
test
sahf
push
or
aam
pop
test
dec
pop
mov
clc
adc
mov
out
jl
subb
xchg
xchg
into
in
sbb
xor
fbld
sbb
insb
dec
lret
inc
je
adc
bound
enter
aad
arpl
jp
sub
jecxz
xchg
inc
or
jno
xchg
cmpsl
inc
and
add
das
mov
into
fwait
in
scas
jno
scas
fstps
mov
lret
stos
cmp
mov
ret
jge
shll
mov
mov
aam
mov
data16
into
mov
sub
into
sub
lea
std
fcoms
and
and
scas
cmp
fidivs
daa
fdivrl
rorl
repnz
inc
in
aaa
repnz
es
movaps
xchg
pop
imul
inc
cmpsl
fstpl
daa
and
jp
adc
adc
mov
mov
stc
mov
cmpl
jne
inc
out
cmc
aam
in
popf
pop
jp
cmp
movsb
out
lock
test
in
movsb
sarl
mov
xor
scas
dec
dec
sub
pop
andb
sbb
push
ret
pop
inc
xor
xor
int3
cmp
mov
out
cmp
aam
int
fwait
aad
dec
adc
sub
jnp
jge
testb
add
xchg
jbe
out
lods
xchg
mov
or
mov
jl
loope
outsb
mov
fnstenv
daa
fisubs
pushl
int
leave
loope
jae
leave
std
mov
test
pop
xchg
pop
sub
pop
shll
and
les
ffreep
sub
enter
aad
lds
and
mov
dec
test
ret
add
inc
dec
xlat
cmp
xchg
pop
xor
pop
iret
add
xchg
test
or
push
imul
popa
cmp
ds
push
insl
ljmp
sub
clc
dec
or
loop
mov
outsl
mov
mov
ficoms
inc
leave
lea
sub
mov
popa
or
fidivl
test
andb
pop
negb
jb
inc
fcmovnb
pop
jno
mov
pop
lahf
mov
or
outsl
push
fnstenv
jns
dec
fnstsw
rcrl
jbe
inc
cmp
push
out
push
cmp
pop
mov
cmc
bswap
xchg
dec
negl
xor
add
cmc
lods
pushl
push
call
adc
test
adc
push
fs
xor
leave
gs
or
mov
aad
cmp
mov
xchg
out
dec
repz
cmp
les
shrb
fwait
cltd
cmp
or
and
stc
and
mov
jbe
cwtl
data16
sbb
loope
out
or
adc
fists
inc
repnz
test
push
sub
test
xchg
adc
pop
or
jb
cmc
stos
and
push
sbb
sub
fmul
add
aaa
pop
shrb
sbb
mov
fwait
dec
mov
pusha
or
add
mov
xchg
cmp
or
sbb
scas
jbe
push
sub
sbb
mov
adc
in
fs
cs
push
jl
xchg
pusha
decl
mov
loopne
jge
push
jns
loop
insb
jb
rolb
xchg
or
data16
mov
cmp
jae
xor
fcompl
xchg
mov
vshufpd
aas
xlat
outsl
ret
adc
jnp
imul
outsb
daa
push
add
loop
mov
sub
scas
cmp
inc
sbb
stos
jno
inc
int3
add
jns
dec
fs
mov
cmp
pop
imul
push
adc
adc
add
push
shll
ficoms
push
outsb
jbe
mov
int
jg
fidivs
and
jne
idivl
out
hlt
add
lcall
shll
push
mov
fdivrs
shll
in
fbstp
std
mov
movsb
mov
and
fiaddl
add
and
mov
or
arpl
test
rorl
shrl
and
sbb
ljmp
adc
aad
sub
sti
add
cmpsb
jle
popf
jl
cli
inc
mov
rorl
es
mov
jns
mov
std
pop
out
mov
imul
sti
aaa
xor
inc
sbb
jb
sub
lret
inc
xor
push
iret
mov
xor
imulb
lret
cmp
jns
scas
rclb
ljmp
aad
in
inc
adc
fs
out
out
sub
mov
inc
pop
cs
insb
stc
pop
popf
std
cld
fcmovu
mov
mov
jbe
pextrw
sbb
out
mov
dec
inc
mov
push
mov
sbb
mov
lods
or
jl
imulb
xor
leave
out
sbb
lods
iret
or
sbb
mov
and
mov
jp
dec
div
daa
sarl
pop
cmpb
pop
jne
inc
mov
push
scas
roll
mov
imul
movsb
mov
mov
pop
cld
dec
inc
xorb
rorl
pop
inc
popa
stc
cmp
sub
mov
out
mov
movl
sub
cs
and
jmp
dec
aam
divb
fidivs
and
addl
sahf
xor
xchg
xchg
jno
bound
stc
ret
jg
lret
outsl
dec
pushf
iret
repnz
aas
push
movsb
push
mov
or
cmp
mov
jge,pt
push
sub
gs
sub
aam
push
je
out
or
and
adc
lods
aas
inc
scas
cmp
mov
sti
mov
pushf
out
push
test
sub
loopne
dec
jae
push
mov
sbb
or
inc
cmp
push
iret
pcmpgtb
into
cmp
cmp
lods
and
andb
sbb
movl
aad
lds
inc
shll
mov
sub
sahf
add
mov
and
movmskps
inc
sub
subb
xchg
in
cltd
notl
icebp
xor
pop
xor
repnz
cmp
sub
xor
mov
mov
test
mov
mov
bound
add
sbb
xlat
adc
pusha
movsl
inc
outsl
cmp
inc
fsubr
jno
loope
mov
bound
jne
fwait
pause
xchg
sbb
daa
bound
push
out
rcr
xlat
sbb
jp
push
movsl
push
sti
sub
xchg
roll
scas
jle
out
mov
pop
push
lods
enter
dec
ds
je
int
and
mov
dec
adc
xchg
jo
hlt
mov
pushf
sbbl
cmp
aas
jno
push
cmp
lcall
adc
or
pop
push
outsb
jae
mov
pusha
std
mov
fld
orb
lcall
cmp
lahf
xor
je
insl
add
loop
aaa
mov
cmp
mov
repnz
insb
mov
aaa
jg
stos
sub
imul
pushf
or
scas
add
loop
add
pop
xchg
mov
setle
sbb
inc
out
jecxz
icebp
pop
lods
cmpsl
xlat
cmp
fsub
push
lahf
call
hlt
mov
cmpsl
ret
test
lea
fcoml
xchg
outsl
cmpsl
sbb
inc
push
cli
stc
mov
icebp
xor
mov
fwait
mov
jb
lahf
rcrb
sahf
cmpsl
scas
jecxz
cmp
rcrl
pop
jmp
sar
cmp
push
cs
jo
test
out
in
enter
push
cmp
xor
popf
repnz
push
or
clc
in
addl
aas
adc
ss
xorl
das
sbb
cld
shll
shrb
cmpsl
ror
repnz
pop
xchg
icebp
push
testl
dec
xchg
leave
cmp
sbb
fisttps
push
call
test
cmp
cmpb
pop
xchg
xchg
sti
add
ds
sub
pop
shlb
shrl
xlat
iret
das
ret
mov
addb
and
sub
dec
jae
addb
outsl
sub
dec
daa
in
push
outsb
pop
gs
loope
mov
mov
aas
out
fidivl
add
and
jg
sub
pop
pop
push
sbb
mov
cmp
cli
cmp
fwait
ror
out
dec
sbbl
mov
sub
ljmp
xchg
sahf
inc
mov
negl
out
popf
adc
pop
jmp
shl
adc
loopne
pusha
fmul
or
in
jp
ljmp
push
xchg
or
sbb
lret
sub
push
data16
xor
jge
mov
add
out
dec
add
fsubr
adc
mov
aad
movsl
int3
dec
outsb
xor
mov
cmc
lock
push
sbb
adcl
inc
and
cltd
dec
add
lock
and
std
sbb
rol
dec
push
mov
xor
rol
inc
mov
repz
bnd
or
lret
cwtl
cmp
dec
shll
push
xor
in
sti
jb
jp
add
test
fistpl
adc
mov
enter
cmp
out
lock
js
xchg
aas
dec
sarb
xchg
dec
adc
rorb
inc
mov
jbe
int
loop
xchg
out
adc
jecxz
jo
pusha
shrl
in
sbb
xchg
cmp
addb
sub
xor
push
or
in
or
imul
sbb
stos
insb
iret
pop
repz
mov
dec
movsl
xorb
and
mov
cmpsl
sub
xorl
fcmovb
inc
shrl
xchg
sarl
and
xchg
pop
dec
push
mov
mov
pop
out
hlt
adc
ret
sahf
jno
je
negl
pop
pop
cwtl
adc
in
rorb
xchg
mov
mov
iret
push
outsl
movsb
xchg
nop
cmp
mov
test
mov
sub
jp
mov
cs
jno
cmpsb
sbb
mov
daa
in
ljmp
std
popa
cli
add
fidivrs
insl
inc
cmpsb
fs
xchg
test
sub
mov
je
stc
push
cmpsb
out
ror
mov
sub
jge
out
lods
jle
mov
sarl
adc
and
xor
dec
lcall
xchg
mov
das
jecxz
arpl
cmp
jb
jmp
in
lret
in
pushf
mov
pushl
mov
sbb
lret
adc
bound
pop
dec
es
and
into
in
sub
arpl
sub
xchg
les
push
push
and
rclb
enter
ss
lock
push
jp
aas
cmpsw
mov
jno
mov
xor
loop
xor
and
cmp
repz
sbb
pushf
das
sbb
cmpsl
and
int
test
data16
jnp
repnz
fstpl
inc
pop
cmp
fldenv
out
xchg
cmpsl
jl
popa
shlb
stos
loop
ret
mov
int3
pop
cmp
jo
sahf
xchg
and
xor
mov
jg
pop
xchg
insb
pop
adc
pop
mov
mov
gs
push
push
nop
in
lods
hlt
mov
xor
push
add
adc
mov
ror
insl
sbb
and
leave
dec
rcrb
frstor
mov
fs
jp
out
sbb
push
xor
add
cli
add
mov
gs
mov
outsb
lea
mov
sub
out
leave
jl
es
jbe
ret
fdivr
sahf
fs
inc
fiaddl
push
in
iret
sub
out
cs
adc
fwait
cmpsl
sub
xchg
mov
ffree
outsl
mov
frstor
test
or
cld
mov
jmp
arpl
js
popf
sub
subl
test
pop
cwtl
push
jp
xor
or
jp
lahf
sti
xchg
mov
call
xchg
std
adc
jb
cmp
cmpsb
idivb
or
add
sub
jbe
lods
and
into
sbb
push
mov
adc
lds
or
add
cli
test
pop
cld
jmp
movsb
mov
mov
cltd
cmp
shr
push
or
push
mov
mov
in
movsl
xchg
iret
add
dec
or
das
jecxz
nop
pop
push
sahf
outsb
inc
add
push
pop
pop
push
add
cmp
mov
sbb
lret
cmpl
push
mov
test
jo
or
nop
and
enter
and
sbb
aad
je
xchg
lahf
mov
add
incb
or
jnp
sub
add
negb
mov
mov
add
leave
push
das
cmpl
dec
inc
int
inc
aaa
je
test
std
mov
mov
inc
lret
add
aad
addr16
test
and
mov
gs
shll
dec
push
fsts
or
test
pop
fs
dec
dec
arpl
cmc
pop
popa
mov
dec
mov
sbb
jl
aas
pop
sbb
outsb
fdivp
push
popa
and
daa
sub
cmp
sahf
jo
xchg
aam
push
sub
jne
scas
adcl
cli
adc
fnstsw
jae
sahf
mov
clc
lods
dec
xchg
sbb
addb
dec
push
mov
add
jo
mov
ja
sbb
xor
aas
call
and
or
data16
insl
xor
dec
inc
stos
pop
jle
stc
das
pusha
xlat
sahf
adc
push
out
cmp
pop
enter
xchg
rolb
and
xor
stos
cwtl
and
inc
je
lea
mov
js
xor
out
fildll
xor
in
fisubs
dec
and
lods
sbb
in
leave
add
daa
add
add
lods
pop
mov
ret
sbb
incb
call
sarb
mov
lahf
fs
sbb
jno
testb
inc
and
xlat
movsl
ret
mov
mov
adc
xor
ja
mov
cli
gs
dec
push
mov
test
adc
adc
jle
fwait
imul
cmp
mov
je
inc
push
and
imul
repz
jns
adc
das
gs
jnp
add
jg
mov
shlb
loop
ljmp
mov
cli
mov
cli
je
fcompl
and
or
and
cwtl
push
and
mov
dec
inc
mov
scas
cmp
xchg
add
xor
dec
pop
or
loopne
or
mov
aad
lods
sub
dec
and
and
mov
mov
cs
mov
pop
cmp
test
test
inc
mov
push
stos
sbb
cmp
dec
fiadds
aad
or
mov
out
mov
sbb
xlat
roll
jns
xor
bound
inc
xor
hlt
adc
xchg
or
out
negb
mov
int
jge
ret
les
push
bound
scas
jnp
test
mov
xor
mov
aad
fisttpl
repz
push
sbb
ret
xchg
adc
mov
or
sub
jae
dec
bound
lods
daa
int
push
jo
mov
test
dec
cmpsl
nop
or
or
insb
out
sub
inc
je
scas
jb
jmp
mov
dec
pop
js
and
sub
repnz
xor
dec
cmp
push
std
pop
jle
rcrb
pop
xchg
pop
xor
mov
push
pop
ss
sbb
std
loopne
and
pop
mov
in
test
sub
sub
sbb
cltd
push
aas
pusha
loope
pop
popf
inc
mov
ds
fwait
mov
imul
and
push
push
sub
lods
aas
xorb
incl
subl
mov
inc
push
hlt
cmp
mov
fcmovnbe
movl
pop
jp
ljmp
data16
jae
sub
inc
rclb
dec
fcoms
inc
or
push
fisubs
xor
sahf
jg
and
stos
insb
outsb
fstl
mov
fneni(8087
sti
cmp
push
cmc
or
cmpsl
out
mov
xlat
mov
fwait
jle
test
jmp
shll
mov
mov
cmp
pop
or
inc
subl
lods
ja
dec
xor
pop
popa
xor
movsl
rcrl
jle
movb
adc
sub
lahf
mov
nop
fwait
mov
push
mov
pop
roll
dec
dec
xchg
xchg
jne
jle
mov
pop
ret
in
mov
scas
es
fidivrs
cmp
mov
xchg
les
fildll
sub
in
pop
sarl
out
mov
sbb
mov
xchg
lret
aad
mov
jae
jg
lahf
icebp
imul
or
push
cmc
jb
shl
mov
mov
xchg
fsubs
fcomip
loopne
repnz
jecxz
sub
mov
scas
jmp
int
cld
out
sub
mov
jae
xlat
mov
fdivrl
test
inc
notl
movsb
jecxz
jnp
ret
cmp
fsubl
popa
leave
addr16
mov
stos
repnz
push
dec
push
adc
dec
mov
jmp
stos
daa
out
cs
loop
insb
in
aam
out
cs
rcll
frstor
movsl
cmp
addr16
lea
sbb
pop
mov
add
dec
mov
aas
pop
fwait
mov
dec
pop
sub
lcall
imul
push
jmp
or
das
in
mov
adc
cmp
push
shl
pop
pop
imul
jecxz
andl
push
dec
mov
xor
je
xchg
xchg
inc
sub
stos
pushf
and
jbe
out
cltd
pop
push
jle
lret
les
mov
in
add
in
enter
xchg
loope
mov
jns
daa
xchg
sbb
fcmovne
xchg
in
jb
adc
dec
mov
xchg
repnz
push
jns
outsb
fcoms
or
ljmp
sub
fmuls
xor
pop
cmpsl
lods
lea
jns
push
pop
test
mov
jmp
decl
xor
mov
pop
xor
aas
mov
shl
out
or
fsubrs
call
dec
cmp
sarb
sbb
mov
mov
ja
loope
mov
repz
sub
nop
imul
mov
sbb
je
mov
xchg
scas
adc
out
pop
iret
and
fwait
xchg
xchg
lret
js
and
cs
xchg
xor
inc
and
or
or
repnz
repz
push
push
add
xor
subl
mov
lods
imul
in
je
or
cli
add
pop
dec
mov
xor
pop
cmp
fdivp
aam
repnz
jo
jge
sub
fistpll
xchg
data16
push
loope
sar
in
in
mov
dec
sti
subb
pop
pusha
xor
jecxz
popa
xor
mov
stc
ja
pop
mov
lret
clc
cmp
sbb
mov
dec
lods
aaa
cmc
sahf
test
adc
push
in
fistpll
dec
pop
or
xchg
out
movsb
test
dec
push
sub
sahf
mov
fsubrs
imul
mov
push
or
dec
in
xor
push
ret
inc
inc
leave
xchg
pop
xor
mov
lcall
std
lcall
xor
pop
gs
sbb
pusha
xchg
lcall
mov
xor
push
fsubrl
mov
das
xchg
adc
test
mov
movsl
div
decl
cmp
dec
clc
xchg
sub
adc
call
fdivl
or
mov
xchg
add
loopne
xorb
inc
cmp
cmpsl
popa
or
lds
out
imul
jl
push
adc
push
out
adc
sub
lcall
outsl
aad
or
mov
popa
jne
arpl
mov
out
repnz
mov
dec
mov
ljmp
jae
mov
mov
cmp
jle,pt
sub
push
push
rolb
xor
push
or
je
xor
leave
sbb
sbb
hlt
mov
jmp
push
lds
aaa
fdivrs
stos
bound
es
pop
mov
or
jae
push
or
inc
iret
cmp
nop
aam
stos
ljmp
xor
mov
push
push
jmp
mull
or
clc
and
sti
sbb
sbb
repz
fcoml
pop
sbb
cltd
nop
push
sbb
das
xchg
mov
xchg
cmp
call
scas
mov
inc
loopne
jae
xor
xchg
pop
sub
outsl
mov
pusha
mov
in
nop
dec
lcall
rcll
ja
jle
outsb
xor
lock
sbb
mov
xor
sbb
adcl
xor
inc
inc
xor
aad
inc
sbb
sub
fbstp
add
movsb
dec
hlt
fcoms
pop
pop
lock
dec
sub
xchg
fistl
adc
xor
in
faddp
sbb
push
jp
daa
lods
xchg
es
les
cmp
sub
jmp
repz
aas
cmp
test
cmpsl
repz
outsb
push
enter
jns
mov
mov
mov
mov
sub
aas
pop
inc
adc
mov
popa
aad
push
mov
xchg
data16
outsb
inc
adcl
push
lods
dec
fdivl
lds
mov
sub
push
mov
xchg
inc
ljmp
ja
fwait
js
lret
lock
outsb
icebp
ja
xchg
pop
mov
xor
adc
loop
dec
cmc
scas
cmp
cmpsl
dec
dec
inc
insb
aaa
sti
add
sub
out
ljmp
cmpsl
mov
mov
xchg
jl
imul
pop
push
insl
inc
sahf
dec
sarl
dec
sbb
repz
clc
push
dec
cs
mov
pop
push
sub
fcoml
mov
ret
rclb
mov
repnz
pushl
or
std
into
mov
mov
iret
mov
mov
or
sub
mov
pusha
dec
mov
mov
jecxz
setns
and
mov
aad
int
cmc
fiaddl
daa
dec
out
dec
and
dec
adc
fwait
pop
repz
jmp
or
pop
jbe
hlt
inc
out
aaa
cmp
daa
pop
inc
imul
outsl
dec
jmp
adc
mov
sbb
lahf
pop
leave
inc
mov
sbb
add
fmulp
mov
sub
mov
and
inc
ret
aas
ret
xchg
mull
jae
mov
leave
cmp
mov
inc
orl
or
add
cmc
adc
sbb
fsts
fmuls
jl
xchg
pop
enter
add
push
cmpsb
out
jne
cmp
pop
shrb
scas
inc
dec
push
arpl
mov
jle
inc
push
outsl
jne
sbb
inc
dec
in
and
mov
scas
cltd
mov
pop
xchg
sbb
mov
hlt
xchg
xchg
into
cwtl
mov
lahf
iret
sbb
mov
cmp
jmp
jns
aas
push
lahf
add
mov
into
enter
adc
mov
mov
sahf
mov
insb
notl
pop
push
xchg
out
out
mov
lret
adc
pusha
enter
or
lea
pop
push
sub
xor
inc
mov
xchg
jge
jbe
call
mov
vunpcklps
mov
data16
pop
pop
xchg
clc
cmpsl
sbb
mov
sbb
or
movsl
cltd
push
test
shrb
sub
stos
pop
pop
es
push
jg
lods
out
xchg
cs
std
lods
and
nop
cmp
loop
fldcw
repz
mov
jmp
inc
push
adc
mov
ret
pop
mov
xchg
push
in
repz
and
sub
rorl
sbb
sub
mov
sbbb
inc
shrl
mov
notl
std
mov
push
cli
in
cmp
fwait
inc
and
jge
push
inc
and
loop
adc
dec
loopne
mov
arpl
push
popa
bound
cli
fnsave
leave
mov
mov
sub
int
mov
mov
add
out
movsl
fisubrl
sbb
adc
add
or
data16
jne
add
negl
imul
mov
xor
cmp
jle
rcrl
sbb
xchg
test
cs
or
lods
shl
mov
push
stos
hlt
jmp
lahf
loop
cmp
das
pop
scas
inc
xchg
mov
hlt
add
push
adc
jno
adc
cmpsl
lods
fistps
jnp
pusha
and
in
jbe
test
pop
jns
jno
rcrl
imul
pop
xchg
loopne
pop
jecxz
fwait
sub
cmp
mov
jno
shrb
jg
jb
es
dec
xor
sbb
sti
xchg
push
or
test
arpl
icebp
and
lock
xchg
xor
xchg
imul
mov
jns
insl
adc
lret
pop
inc
fbld
dec
notb
push
jmp
mov
or
cmp
mov
mov
inc
sub
loop
adc
lods
mov
push
lods
or
jnp
hlt
aas
pop
adc
dec
fs
das
ret
and
sub
imul
fisttps
push
dec
cmp
fnstenv
mov
adc
ret
rcll
outsb
std
cmc
lea
add
xor
xlat
sub
insb
or
lea
shl
mov
sub
jnp
jb
lock
lahf
adc
pop
cwtl
jecxz
ret
mov
mov
rolb
das
sbb
outsb
cmc
rorb
ret
shrl
push
imul
inc
xchg
jno
mov
xlat
bnd
pop
pop
jge
adc
lcall
dec
stos
mov
adc
sub
sub
inc
adc
lret
into
dec
mov
lret
dec
fbstp
in
aas
pop
imul
insl
test
aam
push
ja
test
sbb
xchg
push
idiv
fbstp
imul
test
xchg
std
imul
fnsave
aas
stos
fdivrl
lods
out
mov
inc
cmpsb
pop
cmp
push
fdivs
pushf
lahf
and
add
arpl
jmp
mov
testl
lods
xchg
sbb
adc
ds
adc
movsb
cmp
xor
mov
out
outsb
xor
pop
outsb
inc
in
int3
int
or
mov
fidivrs
insl
xchg
dec
sbb
in
cwtl
out
push
push
repz
out
cmp
mov
cmp
mov
push
sub
sbb
mov
pusha
int
cltd
addr16
lods
push
mov
pop
std
sbb
dec
push
mov
lds
mov
ja
jns
insb
ficoms
push
mov
jl
cli
pop
and
mov
int
xchg
lods
xor
sub
or
add
testb
shll
xchg
jp
mov
adc
pop
into
repnz
movsl
or
and
mov
fnstsw
mov
aaa
shlb
adc
or
ss
movsb
int
movsb
sub
lcall
movsl
lods
lods
jne
fistl
dec
jne
repnz
add
in
cs
sti
shrl
lds
enter
cmp
loopne
sub
push
jmp
fistps
je
cmpsb
xchg
test
pop
and
test
mov
fstps
dec
into
les
cmp
sub
mov
mov
hlt
jmp
fisttpl
adc
mov
ljmp
dec
mov
jecxz
and
int
add
shl
inc
das
inc
dec
jl
mov
fnstsw
jns
mov
aas
test
iret
pop
pop
or
xor
fildl
jnp
ja
bound
push
adc
or
cmpsb
jb
mov
aad
stos
lahf
pop
ss
adc
int
sti
hlt
sti
jnp
inc
or
scas
test
popa
mov
push
cmpsb
je
sbb
pop
test
int3
dec
cmpsb
mov
adc
daa
cmp
mov
adc
inc
inc
pop
xchg
jno
dec
xchg
inc
mov
xchg
ljmp
idiv
cmp
fnstenv
imul
mov
sar
xor
mov
cmp
mov
jg
dec
cmp
sbb
xchg
mov
mov
fisubs
jns
iret
sbb
mov
mov
jge
mov
sub
inc
inc
mov
or
adc
aaa
cmpsb
cmp
out
jne
imul
ret
push
jne
loope
imul
sbb
push
dec
pop
mov
hlt
mov
in
xchg
leave
bound
mov
push
inc
scas
jecxz
jl
cld
imul
fstpl
mov
jg
fiaddl
fucom
scas
gs
sbb
mov
mov
dec
dec
jbe
jae
enter
ret
sbb
into
data16
fsubrl
movsb
mov
mov
xchg
scas
popa
adc
fwait
scas
sub
test
int
dec
push
fistl
ljmp
dec
test
dec
dec
daa
mov
subl
pushf
mov
dec
or
xchg
mov
cmpsl
ja
das
xor
lds
mov
shrl
loope
or
jg
lods
ljmp
rcrl
rorl
adc
adc
jmp
inc
movsl
sbb
inc
xchg
outsb
stos
outsl
lock
fistl
mov
or
mov
test
icebp
push
jb
and
es
jg
shld
mov
mul
xor
dec
push
lock
jo
push
repz
pop
inc
add
xchg
cmp
insb
das
lahf
add
fdivl
jge
popa
pop
xchg
enter
push
push
icebp
mov
or
icebp
push
call
xchg
sub
cmpsl
mov
and
push
pop
push
mov
xchg
and
leave
scas
xchg
subl
and
add
push
push
adc
loopne
cmp
dec
mov
movsl
push
pop
xor
fisttpll
mov
shrl
jg
xor
xchg
pop
add
stos
notl
sbb
and
mov
lds
xor
sbb
lahf
insb
aad
jmp
dec
cmpsl
jno
sub
fs
jbe
mov
and
sub
xor
adc
out
jnp
repnz
mov
int3
enter
cmc
arpl
stos
mov
pop
iret
pop
mov
cltd
popa
int3
inc
dec
lds
popf
push
mov
stc
mov
sub
es
xchg
adc
and
jns
stos
sub
fbld
das
inc
pop
imul
mov
icebp
repnz
pop
mov
gs
rolb
negb
aaa
movb
cmp
or
loopne
add
fs
dec
xchg
jmp
jbe
sub
fcoml
fcmovnbe
insl
sub
xlat
pushf
sub
test
movb
adc
push
cmp
fists
sub
out
sti
mov
mov
dec
les
lret
mov
movsl
add
push
dec
pop
sbb
pop
fbld
popa
lea
cmp
loopne
stos
dec
aad
jp
jo
lcall
add
sbb
enter
pop
add
adcl
pop
subb
sub
pop
jg
cwtl
pushf
icebp
clc
daa
adc
dec
mov
add
stos
xor
mov
jl
jmp
adc
jns
inc
and
and
inc
xor
xchg
int
adc
adc
pop
dec
mov
je
int
ds
and
inc
mov
addl
cmpsb
fwait
das
iret
rclb
orl
cmp
fs
rcl
ja
adc
enter
mov
xchg
leave
mov
sub
pop
jnp
dec
xchg
dec
or
push
call
xchg
dec
js
jecxz
mov
aas
push
adc
xorl
sub
mov
xor
mov
pusha
jecxz
ficoms
loope
and
adc
andb
sbb
mov
fcomps
dec
adc
in
xor
mov
mov
pop
inc
dec
add
divl
fistpll
dec
dec
or
sbbl
sbb
or
pop
lcall
or
and
pusha
mov
cmpl
inc
das
lcall
and
pop
push
rcll
adc
imul
jb
fdivl
je
and
mov
lea
mov
inc
dec
mov
add
pop
sbb
std
test
out
cmc
ret
and
pminsw
dec
mov
sub
push
xor
lock
sub
add
les
add
into
sahf
pop
int3
jnp
add
add
jecxz
mov
insl
mov
and
mov
pop
lea
pop
or
movsl
lret
ficoml
dec
mov
test
push
imul
cltd
icebp
movsl
add
fstl
push
sbb
lods
addr16
ja
and
inc
mov
mov
adc
jmp
xchg
dec
out
in
pop
imul
jl
or
in
out
lods
xor
lods
loop
sub
push
mov
cmp
push
adc
insb
ficompl
ds
cwtl
dec
pop
fcoml
dec
xlat
dec
dec
jb
add
and
mov
lret
sub
fstpt
imul
rcl
jb
sub
test
sbb
rcr
adc
pusha
data16
and
jnp
sbb
mov
std
push
shll
pushf
int
add
out
add
inc
jmp
lahf
icebp
icebp
xchg
shr
in
xor
xchg
sbb
xchg
jae
mov
loopne
push
fistpl
scas
in
xchg
inc
and
ret
xor
movsl
movsl
add
dec
sub
mov
loope
inc
xor
out
mov
sbb
test
mov
add
push
push
xchg
dec
cs
dec
adc
rcl
out
xor
imul
stc
cmpsl
xor
mov
cs
std
jmp
lods
sarl
pop
mov
lds
mov
cmpl
cmpl
fwait
gs
xchg
mov
xchg
pop
ret
gs
xchg
cld
mov
repz
sub
jb
and
lcall
imul
stos
outsl
mov
fldt
xlat
outsl
or
mov
dec
mov
loope
xor
aaa
les
pop
lds
imul
and
mov
xlat
push
add
add
ret
sub
cmc
pop
xchg
pop
je
or
push
lret
sbb
and
test
mov
sub
mov
push
sub
sub
jb
pop
pop
rorl
out
call
shrl
push
adc
inc
jp
jp
clc
xor
outsl
fldenv
xchg
push
adc
int3
or
add
stos
inc
mov
cmp
add
xchg
jns
shr
jg
fdivrs
fmuls
push
test
sub
xchg
fucom
sub
fwait
inc
xor
popa
jbe
pusha
xlat
in
lcall
jne
icebp
in
mov
mov
mov
mov
jmp
loope
call
fildl
pop
dec
and
adc
or
mov
jge
test
lret
hlt
nop
fsubrp
roll
xor
leave
stos
addl
or
and
jg
insb
add
fsub
mov
loopne
out
cmp
and
and
jae
aaa
rorb
xchg
je
xorl
fsubrs
push
mov
in
popf
cmpsl
lock
jnp
fbstp
repz
addr16
xlat
sti
test
jb
jmp
mov
sub
mov
ffreep
push
add
call
dec
fdivrl
jg
imul
insb
jecxz
sbb
cs
notb
sbb
dec
insb
inc
or
push
and
adc
sbb
inc
dec
mov
loopne
cmp
xor
adc
inc
push
xor
push
insb
test
ret
jp
cmc
out
pop
in
dec
cwtl
xchg
inc
add
dec
mov
xchg
test
and
aas
stos
pop
jbe
xor
sub
fidivl
adc
into
repz
or
xchg
es
andl
mov
testb
std
leave
xchg
lods
xchg
movsb
lock
cmp
rcrl
lret
dec
mov
lcall
sub
data16
ficoms
mov
or
sub
inc
mov
mov
in
pop
bound
shlb
xchg
adc
jmp
cmp
mulb
adc
repz
fucompp
mov
cmp
stos
jp
pop
daa
nop
in
shr
mov
mov
leave
fildl
jecxz
bound
add
fsts
test
js
sarb
cltd
rclb
mov
push
inc
icebp
mov
pop
cmc
cli
and
sbb
push
fwait
inc
movsb
mov
dec
mov
mov
jg
or
das
ret
inc
xor
sarb
inc
lods
cmp
popf
ljmp
loop
sub
jae
cmpsb
dec
inc
loop
push
xchg
mov
loop
xor
lret
dec
das
fisttps
mov
or
jp
mull
js
dec
inc
pop
pop
or
hlt
push
mulb
cmc
inc
mov
push
insl
call
gs
push
cmp
cmp
insl
push
imul
cltd
out
pop
ja
out
fstps
ret
enter
pop
xchg
cs
in
cmpsb
rorb
cltd
xchg
and
aas
insl
jns
loop
subl
inc
hlt
je
pop
stos
push
xor
adc
and
out
test
js
and
push
in
xchg
mov
pop
sub
xchg
jp
pusha
pop
fadds
insl
mov
pop
lods
xchg
jno
mov
cmp
jb
scas
push
lea
sbb
inc
mov
mov
pop
add
jne,pt
sub
xor
sbbl
push
pminub
xchg
jb
pop
cli
add
dec
sbb
shl
jnp
stos
sti
icebp
sti
mov
push
push
add
nop
push
pop
xor
fcoms
dec
sbb
dec
test
xchg
push
mov
jle
inc
or
subl
rep
out
add
push
std
subl
nop
in
dec
mov
mov
jne
mov
jae
add
rorl
mov
pop
lea
mov
cmp
lret
sbb
std
push
adc
loop
jns,pn
sub
xor
rcrb
dec
mov
int
mov
pop
cltd
pop
ljmp
sarl
lea
notb
in
cmpsb
icebp
xchg
rcrl
mov
inc
je
mov
sbb
jns
pop
jp
test
xor
fidivl
mov
je
push
mov
loop
lds
add
xor
dec
call
and
rorl
mov
mov
sub
std
fisubl
aad
out
and
mov
mov
cmpsl
dec
dec
jns
int3
pop
orb
loop
jne
push
int3
bound
mov
loope
pop
mov
dec
pop
or
sarl
dec
dec
rclb
cmp
and
xchg
pop
cmp
rcll
adc
push
pushf
icebp
daa
mov
jmp
add
aam
push
lods
sub
outsb
scas
lahf
pop
sbb
mov
pop
and
aas
fld
dec
mov
push
sbb
or
imul
mov
adc
pop
xchg
dec
mov
lds
and
jb
pop
jbe
mov
cmp
dec
push
push
insb
cmp
or
add
imulb
sub
insl
insb
adc
jns
cmp
lcall
cmp
fnstcw
lret
push
adcb
inc
mov
es
leave
mov
adc
xchg
pop
xor
push
jb
xor
inc
mov
lea
dec
xorl
mov
inc
mov
orl
push
sub
insl
gs
popa
enter
nop
fwait
push
xor
fiadds
fnstsw
sbb
scas
dec
lcall
mov
movsl
outsl
cld
pop
icebp
mov
das
xchg
stos
sahf
cmp
or
imul
mov
inc
add
mov
hlt
xchg
out
or
jg
push
and
enter
jmp
pop
adc
jnp
inc
xchg
cmp
jge
xchg
dec
addr16
cmp
cmpsb
dec
lret
sarb
xor
inc
jne
sahf
sti
pushf
push
cmc
dec
jbe
loopne
mov
xchg
add
divb
aad
sti
pop
cmp
aas
pop
enter
hlt
and
pop
mov
pop
aas
pop
out
outsl
insl
xchg
outsb
repz
fisttps
insl
imul
je
stos
cmp
xchg
jae
mov
das
shll
or
sti
and
into
push
shl
mov
jecxz
pop
xor
mov
iret
xchg
inc
test
dec
out
icebp
jp
test
pop
aad
push
pop
xchg
fcmovb
push
pop
pop
inc
gs
push
repnz
out
add
cmpb
fimull
adc
mov
insl
int
inc
mov
in
mov
btsl
test
sub
mov
das
xor
mov
or
sbb
xchg
and
jns
jl
int3
into
jns
loope
pop
sbb
movsl
mov
mov
lds
lods
out
cltd
inc
add
pop
aaa
sahf
mov
movsb
test
hlt
shr
outsb
cmp
mov
fs
xchg
or
or
dec
test
inc
out
dec
and
adc
lods
mov
in
je
dec
cs
cmpsl
pop
pusha
stos
xchg
data16
shlb
sti
aad
fstl
fs
loope
mov
and
aaa
imul
jbe
or
cmpsl
xor
add
mov
test
mov
cmp
out
xor
sbb
dec
test
outsl
shll
dec
je
xor
aad
and
sti
test
and
hlt
hlt
mov
insl
inc
adc
add
cmp
testl
shll
in
add
jg
aas
and
cmp
insl
in
cmp
sub
push
jmp
inc
or
mov
cmp
inc
xchg
out
pusha
dec
scas
loop
fs
je
test
jg
clc
cmp
test
ja
xor
inc
popa
sbb
in
adc
shl
into
and
mov
shr
sahf
repnz
in
pop
adc
mov
pop
gs
or
xchg
fnstsw
sbb
mov
popa
dec
adc
es
xchg
push
lea
inc
pop
sarl
cs
sbb
jne
cmp
xchg
dec
in
add
rcll
push
fsubr
lret
dec
inc
and
push
push
sbb
mov
inc
int
add
inc
bnd
repz
mov
mov
mov
pusha
loop
lea
push
push
rcrl
aas
adc
mov
test
jno
aam
xchg
int3
sbb
out
cmp
mov
into
cltd
adc
cmp
push
out
orl
aaa
or
call
loop
iret
dec
out
mov
in
sbb
bound
ja
inc
jecxz
das
xlat
addl
mov
fldcw
das
dec
dec
cwtl
push
sbb
in
mov
les
in
rol
and
and
out
mov
mov
jne
test
add
sbb
dec
arpl
push
roll
xor
cmp
or
movsl
movsl
lea
mov
test
cltd
jecxz
adc
mov
jae
sbb
inc
rclb
jo
imul
cltd
cmpsb
adc
pop
xor
lock
jg
inc
push
jns
inc
or
dec
pop
inc
sbb
sub
mov
inc
insl
adc
adc
dec
pop
mov
cld
add
ss
inc
adc
les
enter
pushf
in
cmp
je
adc
push
hlt
ja
aaa
int
out
daa
pushf
inc
pop
mov
pop
xorl
scas
xlat
xor
int3
mov
inc
add
mov
lahf
scas
dec
icebp
rorb
push
adc
shll
pusha
push
jne
negl
addb
icebp
adc
push
jge
pop
test
jp
pop
fldcw
cmp
add
aaa
jge
fcomp
cmp
sbb
lcall
and
sub
pop
mov
scas
scas
push
test
ja
mov
cmovle
mov
mov
dec
mov
push
cmp
pop
lods
inc
sbb
in
jg
push
je
cmp
and
cmp
pop
popf
mov
adc
adc
push
int3
inc
popa
and
cmp
nop
add
sbb
adc
pop
ja
mov
inc
jl
sub
lods
xchg
mov
sub
ja
in
jb
xchg
dec
add
add
pop
fwait
mov
cmpsb
movsl
imul
mov
sub
pop
cmp
arpl
gs
cmp
repnz
xchg
jne
insb
dec
in
lea
fidivs
out
sti
pop
cmpsb
lret
dec
adc
and
push
add
shrl
and
test
mov
stos
add
adc
jecxz
xorb
int3
cmpsb
cltd
sub
mov
and
jl
mov
jp
xor
pusha
stos
jl
idiv
mov
cld
adc
jg
mov
negb
repnz
roll
clc
rcrl
sbbl
mov
cmpsl
out
aaa
out
xchg
cs
cmp
mov
sbb
jecxz
or
xchg
dec
xchg
add
cmp
shrl
ds
stc
pusha
addl
xchg
testl
inc
movsl
sub
dec
test
mov
movsl
mov
lods
inc
jle
in
mov
mov
aas
sub
mov
ss
cmp
mov
add
push
ss
popa
mov
mov
nop
mov
mov
inc
cwtl
xor
stos
mov
xor
and
call
adc
int3
cmpsl
lcall
jae
mov
test
dec
pop
mov
lods
aas
add
imul
fstpt
mov
jg
xchg
inc
add
or
xor
mov
test
inc
sahf
cmp
add
jmp
scas
aam
movsb
inc
or
mov
outsl
push
pop
add
fnstcw
test
lds
mov
mov
mov
in
jmp
mov
aad
cmc
add
int
jge
fldt
fimuls
ja
rol
mov
sub
movsl
stos
inc
push
and
std
lods
jp
sub
cld
sbb
adc
add
in
sbb
inc
sub
cs
cwtl
in
ret
mov
fildll
aad
scas
mov
add
dec
inc
add
adc
lds
popa
mov
ret
and
push
and
pop
xchg
fcmovnu
ja
das
jge
sbb
pop
scas
push
push
jno
mov
jno
clc
cmpsl
xchg
jge
xor
dec
jecxz
push
das
int3
daa
or
shl
fistl
test
xchg
jge
xchg
in
xchg
scas
fcomi
mov
mov
pop
add
mov
pop
inc
jge
pop
inc
jnp
movsb
pushf
bound
rclb
sub
cs
sbb
pop
out
lea
cmp
decb
mov
rorb
push
inc
push
sbb
xchg
inc
jp
xor
scas
repnz
sbb
xchg
into
push
cwtl
dec
sbb
sbb
add
stc
das
and
into
add
sbb
push
jbe
icebp
aaa
aam
jnp
orl
adc
test
les
cmp
push
inc
aaa
or
jae
push
sahf
adc
xchg
inc
adc
cmp
mov
scas
pop
aaa
arpl
and
sti
dec
push
lahf
sub
mov
mov
out
call
testl
test
fists
sbb
pop
outsl
mov
mov
jb
outsb
aad
imul
sub
fstpl
fwait
push
add
test
cmpsl
int
sarl
repnz
xor
cwtl
pop
out
adc
cbtw
mov
or
test
adc
mov
cmpsb
dec
sbb
push
in
dec
mov
or
mov
jae
lret
jmp
clc
decb
in
xor
mov
mov
mov
addr16
pop
jg
fsubp
lahf
fmuls
outsl
rol
repnz
mov
loop
adc
pusha
nop
dec
std
xchg
inc
in
jns
test
std
ja
mov
hlt
fcoml
jle
cs
push
pop
mov
xchg
fldcw
je,pt
pop
pusha
inc
insl
and
xor
out
pop
aam
sbb
imul
and
mov
test
fiadds
pop
cmp
rolb
movzwl
mov
call
mov
insb
lret
sbb
mov
xor
cmp
cltd
push
rcrl
jg
aas
xchg
adc
testb
inc
cmp
orl
daa
sbb
rcrb
cmp
lahf
push
aas
int
jmp
inc
mov
dec
sub
jb
lcall
xor
add
add
cmp
mov
sbb
test
arpl
bound
add
mov
mov
fsubl
xchg
loop
mov
push
jle
and
ljmp
test
push
mov
lock
std
cli
pop
gs
lret
push
sub
ss
push
xchg
add
pop
pushf
jns
push
mov
or
mov
lret
sub
adc
push
jg
cli
jae
cmp
test
stc
adc
inc
adc
aas
mov
in
scas
and
in
sti
jge
adc
test
arpl
test
mov
mov
jl
incl
mov
jnp
sub
es
fbld
shlb
ss
mov
je
es
add
jb
cmp
mov
mov
jae
push
dec
inc
cmp
test
adc
outsl
xchg
mov
scas
out
test
sbb
shlb
sti
and
test
dec
push
shlb
sub
mov
push
jae
int3
xchg
pop
js
popf
or
in
add
xor
mov
mov
dec
lods
ja
out
inc
mov
fsubrp
push
cltd
push
insb
dec
pop
movsl
mov
scas
test
or
adc
idivl
scas
sbb
nop
inc
test
stos
sbb
ficompl
cmp
push
add
mov
adcl
push
in
enter
or
repnz
dec
add
pop
ror
xlat
lahf
arpl
pop
mov
pop
aaa
push
xchg
imul
rcr
and
mov
data16
movsb
lcall
les
rorl
add
mov
sarl
add
popa
negl
ss
and
insb
add
inc
aad
or
pop
jns
into
sub
mov
je
jge
stc
out
test
stc
push
pop
nop
dec
mov
rcl
ret
push
push
inc
call
popf
add
mov
pop
iret
push
xor
sbb
jno
jecxz
pop
xchg
lret
xorb
fdivrs
aas
mov
adc
aas
je
lds
lret
aad
das
mov
mov
in
push
push
nop
jge
es
pop
mov
lods
add
adc
imul
cmp
rorl
inc
in
std
mov
fdivrl
std
hlt
insb
push
inc
inc
clc
fldcw
jbe
je
sahf
jnp
sbb
xchg
into
pusha
mov
mov
stos
mov
hlt
addl
inc
mov
clc
addr16
pop
mov
enter
in
popl
cmc
xor
idivl
in
outsb
movsl
ljmp
jmp
adc
and
sbb
out
fdiv
xor
inc
mov
jge
xchg
mov
mov
data16
mov
push
sub
add
daa
scas
cmp
cmp
sbb
movsl
nop
es
add
xchg
in
xor
hlt
sti
cmc
insb
mov
arpl
sub
rcrl
mov
cmp
mov
in
aam
rcll
cmp
xor
fsubrs
push
pop
sbb
xor
push
inc
test
fnstenv
mov
pop
daa
xlat
lret
ret
cmpsb
int3
arpl
mov
imull
lcall
cmpsl
fiaddl
push
fcomi
mov
lods
jl
daa
and
stos
std
int3
movsb
insl
mov
adc
imull
sahf
jns
scas
fcomi
jge
sbb
mov
pop
push
push
iret
pop
mov
jecxz
xchg
dec
push
mov
sbb
daa
sbb
sub
cmpsb
ljmp
xchg
add
push
sbb
adc
jns
ret
outsl
ljmp
sbb
or
scas
xchg
pop
or
pop
jge
jae
mov
sahf
icebp
pop
mov
out
sub
mov
aam
mov
es
dec
push
int
fdivr
iret
pop
xor
dec
lds
dec
cmp
push
cwtl
or
pushf
in
mov
push
aas
mov
popa
adc
cmp
dec
push
mov
mov
daa
xor
jl
and
jno
cmpl
not
push
aad
call
pop
fwait
push
ficompl
icebp
ds
ret
cltd
jb,pt
aaa
rcrb
mov
stc
sbb
and
mov
enter
addr16
jns
xchg
mov
ljmp
and
push
xchg
imul
adc
push
pop
jp
xlat
arpl
mov
pop
mov
and
jnp
push
pushf
imul
out
push
pop
jnp
xchg
bnd
mov
adc
mov
jle
and
aam
ret
data16
call
in
mov
nop
jg
cmp
add
insl
add
and
scas
pop
adc
jmp
js
cld
push
jl
adc
dec
pop
add
pop
pop
cmp
push
push
xor
aam
out
hlt
ja
adc
jb
popf
repnz
pop
fwait
pop
je
aam
inc
push
movsl
mov
add
in
out
pop
pop
stos
outsb
xlat
lds
dec
fmul
lock
cs
pop
int3
pop
sbb
fs
fmull
and
jecxz
mov
dec
pop
lods
push
es
int
mov
lods
bound
or
sbb
mov
add
mov
inc
push
jno
fadds
stc
jecxz
lret
aaa
sbb
inc
mov
cwtl
add
cmpsb
adc
dec
je
push
or
push
hlt
lcall
dec
loop
jbe
filds
add
mov
popf
sbb
jecxz
xor
mov
repnz
dec
loope
inc
push
je
cmp
mov
out
cmp
pop
xor
repz
push
mov
ja
xchg
add
or
xchg
mov
fstl
pusha
shlb
test
sti
cwtl
inc
leave
adc
notl
sbb
inc
adc
movsl
pop
pop
pusha
popa
adc
fisttpl
popf
and
insl
arpl
cmp
xchg
cwtl
inc
xlat
out
xor
pop
sbbb
test
cmp
mov
mov
xchg
xchg
hlt
test
pop
shl
xlat
mov
incb
inc
test
les
push
adc
or
jns
mov
mov
pop
pushf
jbe
aas
fwait
lret
push
adc
sti
add
dec
pop
fcomi
stc
push
dec
bound
lret
push
jge
mov
iret
nop
xlat
inc
xor
mov
xchg
pusha
ret
dec
popf
sub
cmp
scas
std
push
inc
lret
scas
subl
add
ljmp
mov
stc
fwait
loopne
ljmp
clc
enter
dec
add
sub
and
pop
aas
fidivrs
movsb
adc
adc
mov
popa
cwtl
jge
sahf
cmp
loopne
in
es
iret
insb
in
mov
nop
es
xor
xchg
aaa
mov
xor
jbe
movl
in
or
dec
mov
lahf
sbbl
out
sar
out
fldt
and
hlt
into
inc
sahf
cmp
addr16
test
pop
jp
sub
jnp
sub
fnstenv
sbb
bound
push
scas
or
test
sti
lret
aad
or
jo
mov
or
cld
push
mov
icebp
xlat
sarl
jp
pop
mov
jo
cwtl
lea
adc
sub
jl
int3
scas
fldln2
cmc
add
push
push
push
xchg
or
push
int
pop
roll
add
push
in
sbb
jp
fbstp
push
push
inc
flds
ror
fstl
sub
shlb
and
sarl
xor
scas
loopne
rcrb
in
sub
data16
arpl
jl
push
add
shl
jb
ret
xchg
jge
xor
push
ds
and
dec
call
jbe
add
xchg
jmp
pop
lret
add
mov
test
lock
mov
xchg
ret
scas
push
mov
push
imul
lret
jne
icebp
sub
mov
repnz
sbb
push
xor
mov
lods
into
add
mov
mov
mov
jns
mov
add
fsubrl
lods
push
mov
xchg
mov
or
mov
cmp
inc
mov
clc
js
mov
xor
and
jp
int
jp
inc
or
add
and
jo
sub
xchg
hlt
push
add
lahf
push
mov
jae
scas
movsl
cmc
pop
xor
pop
dec
mov
aad
addr16
xor
lcall
pop
call
jb
xchg
fdivrl
lahf
adc
mov
scas
and
data16
decl
or
loop
in
sbb
inc
insl
jae
xchg
std
into
push
jnp
sbb
pop
aam
mov
adc
adc
scas
ret
inc
xor
insl
push
mov
add
gs
fwait
aad
jl
xor
movsb
push
mov
loope
add
cs
add
pop
addl
inc
xchg
jne
fbld
cmp
push
hlt
leave
sub
sti
loope
test
xorl
push
popa
inc
xchg
jne
mov
mov
ror
and
mov
mov
filds
addb
aas
loop
loopne
rolb
add
imul
movsl
pop
dec
test
inc
lea
push
adc
pop
shll
pushf
mov
dec
jle
stos
xor
add
xchg
mov
sub
fdivs
cmp
es
sahf
inc
cmp
mov
arpl
push
pushf
ret
les
icebp
mov
test
sarl
pop
scas
mov
je
insb
aas
imul
xlat
addr16
and
fisttps
mov
and
icebp
ret
push
scas
jno
ja
mov
pop
scas
sar
stc
xchg
test
xor
roll
cmp
jmp
lret
fsubrp
or
lret
push
fwait
test
or
cmp
xchg
push
std
sbb
jnp
imulb
xor
jmp
inc
orl
adc
aaa
dec
pop
push
adc
std
notb
jle
cmp
mov
and
xchg
or
mov
mov
adc
push
push
mov
xchg
jbe
sbb
inc
aaa
xchg
pop
int3
mov
mov
imul
mov
fimuls
fstps
imul
sbb
xchg
sbb
leave
aas
shl
cmc
fistpl
cwtl
inc
cmp
inc
mov
push
and
push
or
and
fisttpl
push
ss
sub
mov
in
inc
adc
inc
loope
dec
mov
sbb
mov
cmp
dec
add
cmp
outsb
push
cmc
and
adc
cmpsb
negl
fbld
sti
pop
fwait
or
adc
sub
and
jae
push
sti
dec
dec
out
adc
sahf
aas
xor
scas
inc
testl
stc
push
xor
add
push
dec
mov
or
xchg
enter
cmpsl
cmc
pop
inc
pop
add
mov
pop
mov
pop
push
add
mov
lods
cmp
ficompl
pop
movsl
or
jmp
cmp
sbb
fwait
adc
js
pop
dec
loope
xchg
addl
mov
xchg
shrl
cmp
aad
adc
in
mov
pop
popa
daa
js
mov
add
out
imul
xchg
xchg
daa
and
mov
sbb
mov
mov
dec
xlat
push
out
popa
aaa
out
fdivl
sti
push
mov
insl
cmpl
cmc
mov
and
push
scas
aas
popf
outsb
popa
pop
mov
mov
inc
sub
nop
xor
add
sidtl
or
jnp
stos
andl
jno
inc
imul
cmp
inc
dec
sar
dec
cltd
mov
xchg
enter
es
dec
in
mov
inc
scas
popf
push
movsl
mov
cmp
xchg
fs
xor
rclb
mov
lods
rolb
sbb
add
movsb
sub
mov
fwait
insl
hlt
inc
sahf
cmp
adc
dec
popf
mov
ret
mov
push
xchg
cmp
xchg
shl
mov
and
lods
jae
mov
test
ja
jne
dec
clc
adc
lea
mov
cmp
out
mov
test
test
fisttps
pop
add
xor
xlat
mov
clc
int3
sbb
dec
subb
ja
out
add
xchg
inc
jecxz
jne
xor
int3
ror
call
xchg
and
xorb
mov
mov
cmp
mov
mov
lret
out
iret
imul
lcall
or
mov
or
dec
filds
cmpsl
cltd
mov
sub
push
imul
arpl
ror
in
push
jge
movsl
mov
pop
and
stos
aas
in
out
mov
pop
fs
pop
psraw
mov
and
icebp
call
popa
push
push
and
jno
inc
mov
cmp
lret
push
fwait
lea
adc
push
popf
dec
jne
dec
aas
mov
dec
iret
or
cli
iret
stc
cmc
or
add
cltd
pop
leave
or
sbb
mov
xchg
out
adc
je
outsb
xor
popa
std
scas
xchg
mov
sub
test
int
pop
xchg
bound
push
pop
jg
rorb
mov
fwait
pmuludq
sahf
pop
movb
aas
adc
mov
orl
test
cmp
fildl
add
orb
jmp
mov
pop
clc
add
push
lods
fbstp
addr16
cmpsb
xchg
sub
or
pop
popa
stc
out
fsubrl
and
rcrl
arpl
xor
orb
stc
idivl
lret
inc
mov
and
mov
push
push
or
imul
cmp
es
xchg
mov
pushf
add
sub
fs
mov
mov
repz
add
pop
sub
xor
mov
sbb
mov
adc
mov
pop
sbb
movsl
in
push
add
sub
dec
aas
stos
pop
in
out
cmpsl
lahf
jecxz
fs
arpl
outsl
aas
rolb
outsl
and
mov
push
push
push
and
mov
jnp
or
movsl
test
outsl
and
insb
fbstp
outsb
scas
imul
out
stc
jmp
imul
jae
mov
notl
sbb
mov
inc
mov
push
and
stos
cld
stc
in
mov
inc
outsl
or
mov
cmpb
jo
popf
stc
ret
mov
inc
add
add
dec
sub
mov
add
ret
arpl
mov
xorl
jge
fisubrl
and
cmp
das
insb
xlat
jbe
outsb
xchg
imul
out
loope
shll
subl
cmpsb
add
pop
lahf
jnp
stos
lcall
imul
inc
in
mov
push
jge
adc
sbbb
push
pop
mov
inc
mov
lahf
ja,pt
mov
push
jmp
outsl
cmp
stos
das
cmp
stc
pusha
fldcw
repnz
and
cs
xchg
arpl
xor
mov
fdiv
stc
fstpl
mov
insl
jg
daa
mov
push
pop
add
shrb
loope
adc
or
mov
cmp
or
jmp
mov
pop
jl
jbe
cmp
mov
and
cmpsl
das
imul
test
and
mov
pop
out
fimuls
push
outsl
fsubrs
insb
cmpsl
cmp
ds
into
cwtl
lret
stos
or
inc
sbb
dec
push
xchg
xorl
xchg
cmp
xor
in
cli
movsb
push
loop
mov
mov
std
icebp
lcall
xor
shlb
mov
cmp
jnp
add
lahf
pop
xchg
sub
or
and
pop
fists
xor
push
nop
lock
out
jg
cmp
into
mov
xchg
movsb
lds
xor
mov
inc
imul
popf
outsl
sub
std
in
test
outsb
jns
jecxz
dec
sub
xlat
enter
push
pop
sahf
or
xchg
xchg
push
sbb
std
jge
mov
frstor
xchg
xor
leave
inc
jo
or
mov
adc
sbb
leave
adc
sbb
cmp
mov
subb
jecxz
cltd
mov
out
xor
pop
loopne
cmp
pop
lret
push
flds
repnz
pop
dec
or
bound
sub
clc
xor
push
fcmovu
mov
push
xchg
xor
cmp
sub
fsubl
xlat
jo
push
imul
fisubl
xchg
pop
cs
lods
movsb
stos
mov
fisttpl
jge
dec
ljmp
mov
mov
out
das
repz
fmul
lods
sti
mov
stos
mov
mov
lock
lds
mov
mov
cltd
sbb
ffree
leave
std
jle
pop
outsl
rorb
iret
dec
xor
gs
pop
daa
addr16
mov
xchg
mov
test
divl
cmpsb
cmp
cmp
iret
mov
pop
test
pop
js
push
mov
and
nop
jnp
into
out
sbb
pop
xchg
fwait
mov
push
xor
mov
mul
push
shl
in
cltd
and
cld
iret
bound
inc
in
cltd
lds
push
mov
sub
imulb
dec
adc
mov
fbstp
lods
sar
pop
repnz
inc
adc
lods
mov
jle
pop
sahf
sti
mov
leave
repnz
shll
xchg
push
stc
out
test
std
leave
repz
jne
int
xor
test
xchg
push
push
sub
mov
sub
das
jmp
mov
int
xchg
sbb
shlb
pop
xchg
popa
xchg
mov
test
lcall
cmc
stos
cmp
sbb
mov
out
sar
es
mov
loop
scas
fadds
mov
xor
in
push
jno
jbe
cmpsl
faddl
stc
cmp
insl
imulb
scas
push
rolb
jg
xor
jg
xchg
bound
aaa
clc
add
fcoms
sub
or
test
pop
jmp
jle
adc
xchg
xchg
mov
sub
add
sbb
pop
adc
mov
push
lret
lahf
notl
scas
aaa
adcl
leave
adc
ljmp
int
daa
or
sti
loopne
pop
mov
divb
imull
test
adc
or
icebp
js
lret
pushl
and
jg
mov
dec
loope
sbb
aad
xchg
mov
sbb
inc
imul
jp
or
cli
push
pop
es
cli
out
or
stc
outsl
sub
and
ljmp
popf
addr16
cmp
imul
adc
jne
insb
cmp
mov
jbe
sbb
and
add
pushf
rclb
xor
or
pop
loop
jns
fwait
lock
das
sub
sub
sub
sub
fimull
push
inc
and
fdivs
shll
and
outsl
sub
sub
sub
pop
cmp
pop
mov
loope
cmpl
push
dec
test
ljmp
push
lods
insb
adc
or
fmull
cld
inc
inc
imul
push
cli
stos
pusha
aad
bound
das
sub
lods
jg
ds
xor
stc
fwait
clc
daa
pop
xor
call
mov
iret
cli
xchg
and
jo
push
xor
add
jmp
inc
adc
outsb
mov
out
sub
dec
cmc
jbe
cli
xchg
xor
xchg
cwtl
mov
xor
ret
sub
xor
push
adc
mov
sbb
roll
aaa
popf
xor
aaa
cmp
jno
fstpt
dec
adc
jp
addr16
decl
push
and
mov
loop
addl
pusha
rcr
shll
jne
movsb
mov
and
jle
inc
mov
and
xchg
movsb
mov
pop
out
sub
xor
mov
pop
mov
cli
cmp
js
test
jnp
cwtl
clts
int3
pop
sbb
xchg
mov
stos
pop
push
outsl
or
imul
ja
ret
jo
mov
jmp
cmp
pop
mov
adc
lods
cmp
ret
mov
mov
sbb
or
rolb
jge
loope
stc
xor
aad
jno
xchg
repz
pop
or
add
push
pop
add
cmp
mov
aaa
jo
mov
lcall
and
sub
out
xchg
rcll
sub
jne
xor
pop
mov
lahf
push
sbb
xchg
or
pop
xor
xor
int
mov
add
inc
and
popf
jno
fiadds
test
cmp
fyl2x
loope,pt
cmc
test
sar
aas
push
mov
sub
stos
das
bound
imul
adc
mov
sbb
imul
lcall
arpl
pop
lcall
pusha
or
enter
fwait
xor
xor
sbbl
dec
dec
jae
stos
mov
and
inc
xchg
cmpsl
aaa
xor
stc
lahf
xor
or
jns
inc
dec
mov
stos
mov
cltd
push
and
ficompl
or
pop
test
repnz
pushf
daa
stos
loop
push
push
adc
pop
xchg
rol
aaa
mov
xor
int3
loope
pop
aas
pop
sbb
xchg
xchg
aad
or
das
or
inc
addr16
arpl
and
mov
sbb
mov
fistpll
and
pop
fwait
mov
sub
cmpsb
inc
das
sub
sbb
push
sub
fucomp
gs
outsl
adc
lret
mov
out
mov
in
lcall
sti
jmp
inc
sub
rolb
add
mov
push
mov
out
rdpmc
dec
pop
or
fldl
mov
cmpsl
aad
xor
adc
xor
xchg
xchg
pop
stos
and
jmp
xor
pop
lods
inc
sub
sub
jmp
pop
leave
scas
insl
pop
pop
testl
push
dec
xor
imul
sbb
shlb
push
add
mov
push
lret
negl
insb
inc
sbb
mov
mov
jb
jnp
sub
xor
cmc
cmpsl
popf
adc
cmpsl
loop
out
and
inc
outsl
xchg
repz
orb
pop
clc
inc
clc
or
jg
sti
mov
dec
mov
jns
jnp
and
in
pop
sbb
insl
dec
gs
sar
ss
lods
popa
add
sbb
push
lods
call
aad
and
ss
and
gs
and
scas
popf
xor
rorl
cmp
int3
scas
jmp
and
movsb
jns
add
jne
lods
mull
sbb
jne
lcall
or
movl
and
or
add
in
jmp
adcl
and
xchg
mov
mov
into
loopne
push
cltd
cmp
inc
or
adc
imul
jg
mov
mov
mov
hlt
lret
in
shr
outsb
or
mov
xchg
stc
insl
push
fnstcw
popa
imul
das
pop
ror
pop
sub
add
inc
xor
jnp
inc
repz
and
push
pop
xor
icebp
pop
sti
iret
inc
sub
and
out
gs
mov
dec
loopne
sbb
aaa
icebp
dec
testl
pop
jae
ror
add
push
jl
mov
mov
sbb
inc
adc
xchg
add
loope
jg
mov
pop
add
pusha
ljmp
pop
fmuls
dec
jp
std
int3
add
jmp
test
jl
loopne
inc
jge
push
out
cmp
ret
clc
int
jb
lds
cmc
dec
dec
inc
mov
mov
jns
outsb
cmp
ss
ficomps
mov
fst
sbb
dec
xor
into
shrl
xor
push
pop
inc
fsts
and
icebp
add
mov
lcall
lock
and
push
push
push
lahf
mov
nop
cmp
int3
mov
outsl
sub
hlt
movsb
lret
out
xchg
dec
ret
loopne
imul
pop
push
mov
sbbl
and
pop
mov
mov
stos
stc
cmp
int3
jnp
sbb
mov
imul
imul
rcrb
mov
inc
pop
call
rclb
xor
outsb
pop
insb
mov
movsb
dec
sti
jb
out
loop
dec
sub
and
sbb
push
addr16
mov
cmc
lret
fdivp
mov
mov
push
pop
pusha
repz
xchg
mov
sub
pop
mov
cmpsl
dec
xchg
push
imul
inc
mov
xchg
cmp
add
dec
cmp
dec
lock
dec
pop
sub
pushf
rcr
loopne
mov
cwtl
insb
pop
adc
xchg
cmp
out
imul
pop
js
xchg
andb
loopne
mov
push
push
cltd
ss
hlt
aam
insl
xchg
sbb
je
pusha
enter
cmpb
xchg
mov
filds
push
out
push
cmp
pop
in
call
sub
rcll
sub
jmp
pop
rolb
das
fimuls
ficomps
int
dec
fs
rolb
push
jno
pop
fwait
push
and
testb
push
or
and
jecxz
pop
ret
das
mov
ret
xor
and
push
int3
stc
mov
mov
popf
rcl
dec
push
popl
mov
imul
lret
lret
push
rcll
or
and
mov
icebp
push
std
pop
stc
add
dec
or
cmp
sbb
repnz
or
bound
inc
mov
mov
inc
dec
pop
shrb
mov
and
cltd
pop
cmc
and
addr16
xchg
insb
fprem1
add
out
shr
xchg
cmp
mov
adc
inc
ffree
xchg
lock
push
js
into
add
push
orb
and
mov
stos
mov
pushf
adcl
xlat
jl
in
mov
xchg
sub
hlt
out
push
sbb
int
repz
es
mov
bound
sbb
cmp
cmpsl
iret
mov
or
out
dec
ds
scas
dec
cld
cmc
lods
add
and
dec
adc
in
jno
pop
iret
or
loopne
rorb
mov
and
cmp
cmp
pop
xchg
enter
dec
push
dec
mov
outsl
sub
dec
divb
icebp
pop
call
dec
fstps
and
imul
ljmp
mov
add
mov
mov
sbb
fnstenv
cmp
out
push
and
push
icebp
andnps
jb
jnp
push
add
rolb
inc
jmp
jle
mov
add
mov
sub
push
popa
jg
push
pusha
addb
lea
mov
dec
push
mov
out
test
sub
xchg
pop
lret
pop
xchg
into
repnz
bound
xchg
mov
call
inc
push
stos
fnstsw
jg
inc
into
mov
jmp
adc
dec
call
iret
push
push
mov
lcall
out
cmp
lahf
stos
mov
jge,pt
stos
movb
cmpsb
push
out
pop
in
and
mov
out
imul
sbb
in
cmpsb
bound
dec
add
fs
test
or
jno
loopne
lods
xorb
cld
sarl
int
les
call
sub
push
jbe
pop
aad
xchg
push
popa
mov
sbb
add
cld
mov
dec
dec
hlt
cmp
test
in
and
jae
mov
into
mov
cmp
jg
dec
mov
push
dec
xchg
fsub
ljmp
xor
fs
out
out
es
dec
roll
int3
loope
and
ficoms
orb
xchg
and
iret
into
xchg
in
call
xor
loope
pop
dec
orl
push
and
mov
xchg
jbe
ss
bound
or
mov
and
test
cmc
es
sarl
pop
push
xchg
xor
xor
clc
insb
jae
jo
pop
data16
inc
adc
aas
ret
mov
fstp
out
dec
repnz
shl
cmp
inc
xchg
xchg
mov
dec
fs
int
xchg
fldt
movsb
or
icebp
push
xchg
mov
inc
sbb
outsb
imul
mov
inc
leave
pop
and
inc
or
cmpsb
push
into
cmp
mov
lock
inc
add
cwtl
dec
or
fmuls
stos
ljmp
dec
mov
jbe
scas
ds
fsubs
sub
mov
fdivrp
mov
inc
adc
push
bound
ljmp
push
cmp
lcall
mov
cwtl
je,pt
jo
nop
push
int
lock
out
insb
sti
and
or
pop
loop
repz
cmpsl
ds
std
or
loopne
out
inc
out
ret
jp
sub
shlb
add
mov
sbb
lock
and
cmc
jno
cmc
loop
push
test
das
aaa
push
test
ja
and
out
sahf
mov
roll
mov
pop
xor
fs
cmp
jmp
or
fs
xchg
push
orl
stos
add
aas
lds
push
addr16
mov
dec
push
jb
dec
inc
rorb
push
inc
movsb
cld
fidivl
or
add
cmc
sbb
outsl
out
cwtl
ljmp
pusha
push
sub
mov
fsts
or
enter
xchg
rcrl
mov
xchg
mov
or
dec
push
je
jp
pop
mov
or
ds
or
fmuls
or
cmpsl
scas
push
cmp
ds
xchg
push
fld
int3
pushf
stc
jne
into
fstps
ds
cmp
sub
dec
out
jo
mov
cwtl
mov
insb
aam
and
pushf
cmc
test
push
and
push
fidivl
cmp
sbb
ljmp
fidivl
inc
js
imul
xchg
jmp
jae
sub
in
in
push
iret
insb
dec
jl
mov
int
sub
xchg
push
rol
jg
push
push
push
ficoms
sbb
and
adc
pop
adc
popf
mov
xchg
dec
faddl
stos
bound
cmpsl
gs
iret
xchg
sbb
sbb
int
mov
xchg
mov
dec
fisttpl
cs
mov
mov
xchg
sub
cmp
add
mov
js
scas
add
in
cwtl
and
out
inc
mov
fsts
lea
jle
push
popa
call
dec
into
jne
inc
call
rcrb
scas
pop
push
test
cmp
lock
sub
aam
ret
stos
dec
xor
mov
pop
mov
sti
out
loopne
push
inc
hlt
nop
xor
sbb
js
adc
subb
xchg
jge
jecxz
push
adc
insb
int3
mov
mov
mov
iret
and
sub
ljmp
push
xlat
stos
xor
or
inc
cli
mov
testl
cmp
std
dec
fldcw
mov
mov
jp
mov
cmp
das
push
push
leave
dec
mov
out
lret
bound
and
mov
js
and
jp
and
push
fs
mov
dec
mov
or
adc
mov
cltd
sbb
sbb
rorl
add
test
data16
fcoms
mov
push
push
cmpsl
mov
dec
dec
imul
daa
add
fmull
mov
xchg
mul
int3
inc
sub
lds
orl
lods
xor
aam
ljmp
mov
and
stos
rclb
mov
xchg
jne
sbb
out
and
pop
daa
ret
sbbl
ret
mov
mov
mov
xor
jmp
sub
sbb
mov
or
popa
cltd
repnz
cmpsb
sbb
or
out
adc
jp
call
ja
lock
sub
addr16
je
cmc
inc
mov
int
cltd
cmp
aas
add
sub
mov
push
or
push
sbb
sub
sub
cli
mov
int3
jo
xchg
bound
rorl
lock
imul
rcll
outsl
dec
push
inc
insb
imul
mov
pop
in
jo
push
mov
push
mov
pop
ficoml
lods
lcall
dec
arpl
mov
dec
push
sub
roll
inc
mov
mov
mov
sbb
sub
mov
cli
inc
hlt
popa
mov
mov
mov
jle
bound
push
inc
mov
adc
cmc
les
mov
repnz
int
sub
mov
and
cwtl
xchg
aam
jne
jge
enter
add
fisttpll
push
jo
mov
or
repnz
jno
pop
adc
addr16
sub
push
add
es
pop
inc
subb
and
adc
sbb
jp
sahf
mov
std
sbb
or
pop
loope
mov
push
fimuls
add
mov
mov
push
xor
pop
mov
aad
aam
fcompl
jo
int3
sub
pop
inc
mov
mov
insl
outsl
mov
bound
mov
xchg
xor
push
insb
pop
pop
addr16
mov
or
loop
ja
inc
test
sti
fistl
mov
das
add
and
aam
add
xchg
sahf
mov
pop
add
xor
mov
into
cmpsb
adc
and
stos
adc
scas
sub
stos
inc
sbb
out
and
jnp
fst
xchg
and
sti
or
xor
ljmp
hlt
pop
imul
roll
ret
push
inc
mov
sbb
es
add
mov
and
xchg
out
enter
pop
push
dec
push
scas
gs
jecxz
add
insl
sbb
pop
sahf
sbb
mov
push
popa
sub
dec
jb
fcmovbe
and
sub
fdivrl
jl
pusha
and
andl
mov
jae
idiv
mov
ret
sarb
xor
test
lods
test
jmp
jl
popa
lret
daa
cld
push
dec
cld
sbb
jb
mov
das
nop
adc
push
icebp
scas
lret
xchg
or
jb
xchg
pop
mov
scas
aas
and
pop
mov
inc
mov
pop
dec
aad
jg
pop
movsb
sbb
aam
pushf
and
or
cmc
in
pop
movl
inc
shll
out
inc
push
sub
sbbl
mov
jmp
rcr
ds
dec
fdivrl
repnz
fisubl
test
js
mov
je
decl
xchg
jp
xchg
pushf
sbb
add
lds
mov
stos
adc
ds
xchg
in
dec
imul
fidivs
sahf
push
mov
clc
adc
mov
adc
movsb
push
xor
jne
jle
divb
repz
mov
ss
sahf
mov
xchg
in
jg
xlat
push
sub
hlt
sbb
cmpb
pop
cwtl
cmpsb
fnsave
inc
nop
xchg
ljmp
outsl
lcall
js
int3
sub
push
and
lds
repnz
in
addr16
fistps
pop
push
fwait
xor
jge
inc
push
aaa
int
cmp
sub
jmp
out
ret
les
arpl
aam
pop
lods
imul
daa
cmp
add
push
and
fmuls
mov
arpl
or
push
bnd
cmp
xor
sahf
roll
mov
xchg
fisttps
xor
jg
and
nop
fadds
dec
insb
mov
adc
bound
jne
mov
imul
jo
or
sbb
jmp
jg
rorb
and
jnp
rorl
fnstsw
into
mov
loopne
nop
inc
inc
mov
add
mov
popa
mov
and
fisubrs
cmp
sbb
add
pop
lahf
jnp
dec
jo
ret
add
and
mov
xor
cmc
call
mov
iret
xor
pop
jae
push
hlt
jp
ret
sub
push
aaa
cmp
xchg
mov
inc
add
mov
cwtl
adc
jbe
pop
cmp
into
sbb
pusha
popf
leave
adc
scas
and
dec
cld
xor
inc
out
adcb
adc
stos
mov
cmp
leave
movb
dec
shll
jmp
xor
divb
cli
mov
xchg
pop
mov
mov
xchg
pop
scas
lret
std
mov
adcb
jle
icebp
mov
lods
cmp
xchg
bound
sub
cmpsb
andl
cmp
sahf
ljmp
aaa
xor
movsb
daa
mov
popf
xor
int
mov
ja
pop
dec
cmp
scas
pusha
mov
push
loopne
adcl
xchg
mov
arpl
adc
cwtl
xchg
jo
cmp
enter
push
loope
cltd
rcrb
rcrb
lds
sar
clc
mov
out
pop
addr16
sbb
test
xor
scas
hlt
pop
in
cmp
jo
push
pop
xlat
adc
cltd
flds
mov
lods
nop
adc
leave
push
adc
mov
push
ret
mov
in
sbbl
add
and
push
sub
clc
int
jge
out
mov
adc
pushf
and
xchg
pop
adc
mov
das
das
ficoms
leave
shrl
xchg
in
stc
jns
pushf
mov
orb
xchg
lods
out
jae
sub
fxch
les
sbb
sbb
jb
movsb
pop
sbb
pop
mov
mov
out
push
jle
jle
jp
mov
jb
jns
ss
jne
sbb
pop
lahf
push
repnz
mov
sbb
mov
or
push
insl
inc
and
lds
push
hlt
add
mov
aaa
das
fmul
jno
pop
push
pop
xchg
mov
out
imul
adc
mov
mov
jns
add
clc
mov
test
ret
movsb
rcrb
push
sbb
pop
es
mov
dec
push
jae
dec
jb
ret
cld
outsb
mul
push
ret
inc
push
inc
push
pop
repz
sbb
adc
gs
popa
add
ss
and
add
dec
push
cmp
data16
xchg
jge
sub
push
fmull
push
call
pop
mov
shll
movsb
add
outsb
pusha
inc
lea
iret
mov
pop
nop
ficoml
data16
mov
sub
push
or
incl
inc
bound
mov
mov
jae
bound
js
mov
mov
push
pop
movsb
push
scas
jbe
mov
push
rcll
pushf
stos
lret
out
rclb
rol
or
rorb
repz
ja
dec
push
repz
xchg
xchg
test
add
sbb
mov
push
mov
cmp
inc
pop
std
std
mov
icebp
mov
mov
test
mov
bound
mov
pop
mov
add
lods
sub
push
jl
popa
pop
roll
adc
mov
mov
clc
jbe
or
push
js
sub
jo
fst
repz
icebp
cmp
jb
scas
call
adc
pop
cmp
xor
jne
int3
inc
movsl
cmp
pop
stc
adc
aad
je
cmp
sub
xor
or
or
mov
lods
mov
dec
push
push
out
jle
cld
jle
mov
xchg
dec
pop
and
loope
jne
arpl
xor
rcrb
cmp
mov
mov
jbe
push
push
pushf
jbe
pop
scas
scas
aam
mov
aaa
cmp
repz
nop
jge
popa
mov
sahf
rcrb
cmc
pop
fsubl
cmp
and
and
push
int
insb
loopne
ss
aad
mov
jecxz
cmp
jmp
cs
pop
pop
hlt
sub
adc
daa
idivl
lock
je
je
push
dec
jl
push
imul
sti
pop
stc
cmp
insb
cltd
sbb
bnd
int3
mov
mov
fs
mov
fdivl
jno
pop
inc
mov
inc
dec
cltd
mov
mov
leave
or
xchg
dec
add
mov
push
lods
lahf
stos
into
mov
hlt
xor
mov
xchg
inc
cli
bound
inc
xor
adc
jno
push
out
lock
push
in
jge
cmpsb
or
cmp
mov
cmp
jo
aad
mov
stos
dec
roll
pop
pop
pop
bound
mov
push
pop
arpl
push
sti
xchg
fildl
movsl
ja
out
aad
fidivrl
fisttps
sub
outsl
xchg
mov
das
add
or
stos
dec
mov
pop
fistpll
sbb
rorl
and
or
int
fucomi
enter
aas
fwait
jle
cmp
or
sub
imul
pushl
sti
outsb
aaa
jo
sbb
sbb
sub
imul
leave
andb
mov
mov
sub
mov
sbb
stos
iret
rol
stos
adc
push
lcall
cmp
dec
lea
cmpsl
mov
fsubrs
or
sarb
xchg
ss
pop
lock
xor
mov
cltd
out
adc
xor
push
inc
decb
mov
push
adc
pop
push
pop
pop
jne
cmp
inc
js
mulb
jmp
xchg
imul
leave
mov
call
jns
and
xchg
adc
xor
fistps
mov
lcall
and
fwait
or
adc
insl
cmp
jmp
fiaddl
pop
rorl
mov
data16
mov
mov
sahf
dec
insl
sahf
mov
and
pushf
stc
dec
cld
or
jns
jo
pop
mov
adc
pop
les
pop
cmp
pushf
decb
pop
dec
jmp
das
jl
ret
jns
out
loope
sub
fsubrs
shl
test
mov
adc
cmpsl
popf
mov
xor
sarb
out
popl
mov
ja
mov
or
dec
sti
dec
cltd
jl
fldl
dec
leave
push
xorb
fcoml
cwtl
push
jae
xchg
xchg
scas
scas
mov
aam
fiaddl
mov
in
stos
dec
fs
lret
push
inc
push
fbld
ds
call
and
sbb
test
jp
loopne
inc
insl
sbb
je
outsl
and
jno
cmp
pop
jle
in
cli
test
inc
lret
cs
das
in
cmp
int3
in
push
jne
and
scas
inc
mov
fmull
pop
adc
jmp
push
sbb
xchg
daa
dec
mov
into
inc
fcmovb
sbb
ja
pusha
xor
leave
sbb
xor
pop
adc
or
push
mov
insl
call
int
inc
rolb
fcmovnb
test
jns
popf
pop
lods
cmp
fsts
jmp
cmp
pop
arpl
daa
sarl
mov
leave
subb
inc
cmp
shl
push
mov
xchg
and
fdivr
lods
mov
in
push
in
sarl
sub
lret
popf
test
movsb
pop
mov
es
incb
popa
xor
push
xchg
mov
and
stc
cmp
lds
es
loopne
outsl
mov
mov
jl
push
adc
inc
fildll
mul
in
xor
xchg
ret
aad
in
jge
jmp
jbe
and
movsl
lahf
xor
pushf
aam
jno
insl
cmp
ljmp
in
jnp
orb
mov
ja
or
roll
dec
ja
dec
sti
insb
push
mov
ja
pop
scas
notb
aaa
je
adc
mov
add
jns
mov
adc
add
mov
xor
nop
add
popa
popa
cmp
push
int
mov
jg
cmp
ret
push
sbbl
and
out
hlt
mov
xor
pop
aaa
cld
xor
pushf
loop
push
jle
sbb
into
js
jbe
sar
jnp
loopne
push
or
mov
adc
push
call
rol
and
sub
orl
jl
jo
jnp
sub
popa
repnz
push
lahf
mov
scas
jmp
cli
inc
or
and
pop
dec
shlb
popa
jns
lahf
cmp
adc
inc
push
xor
movsl
mov
xlat
and
push
notb
fs
inc
xor
test
adc
outsl
movsl
cmpsl
dec
subl
lcall
or
jo
xchg
dec
cmpsl
pop
fbld
sub
or
push
ret
sub
push
sub
sti
mov
jp
aam
stc
xchg
mov
xchg
sbb
ror
mov
mov
pop
stos
sbbl
mov
mov
or
inc
loopne
mov
mov
outsb
mov
das
enter
push
mov
out
mov
cvtps2pi
andl
pop
or
cld
pop
pop
jl
sti
out
jl
xor
inc
daa
xchg
mov
fidivs
cli
in
sub
es
jne
jno
ret
imul
sub
cli
movsl
mov
add
scas
lock
xor
jg
das
test
outsb
aaa
stos
inc
jecxz
push
cltd
jne
push
aam
or
div
movsb
mov
mov
iret
or
imul
pop
push
mov
pop
dec
sub
scas
testl
subb
popa
fcmovne
ljmp
je
xor
aas
pmuludq
aad
add
test
inc
xchg
js
sti
push
push
test
mov
orb
jge
pushf
mov
dec
cmp
js
stos
pop
cmp
retw
lods
cmp
cmp
jb
jae
outsb
jle
aam
add
adc
in
jge
and
cmp
aam
insl
sbb
push
cmp
adc
shlb
aaa
lods
jecxz
test
fs
int
jne
out
out
js
xchg
stc
push
lock
dec
fmull
push
ret
lods
xor
push
cs
addb
in
pushf
mov
repz
in
add
fnstsw
negb
test
out
cmp
xchg
ret
pop
or
out
mov
xchg
gs
es
push
mov
call
or
push
mov
rcr
lock
mov
and
xchg
faddl
xor
fdivs
jae
push
insb
enter
or
in
mov
clc
andl
push
rcrb
xor
push
lret
in
xchg
xchg
xchg
push
sbb
outsb
or
test
bound
sbb
fimull
dec
cmpsb
add
ss
jbe
fisubl
mov
jle
push
cmp
mov
clc
mov
int
and
lcall
fnstenv
jbe
imul
iret
loopne
mov
add
bound
mov
sub
push
or
cli
jmp
daa
mov
bound
mov
and
xchg
mov
popf
rorl
mov
cmp
xorl
call
ja
cmp
sub
push
insb
pop
pop
sub
and
add
cltd
pop
push
into
dec
leave
dec
push
dec
pop
popa
cmc
inc
or
icebp
aaa
and
mov
add
jl
mov
sbbb
dec
pop
pop
and
mov
fsubrs
outsb
jb
jne
mov
inc
in
shlb
and
and
aad
push
sbb
rolb
add
mov
mov
add
fsubrl
aad
mov
cwtl
shll
mov
add
movsb
lods
into
sub
scas
inc
sub
dec
pushl
scas
and
push
pop
clc
and
cwtl
and
clc
lcall
ja
popf
xchg
add
inc
sub
cli
dec
lods
adc
cmp
xor
icebp
stos
cmp
jle
mov
xchg
faddl
jp
add
mov
and
aas
mov
test
in
out
dec
scas
in
outsb
lock
out
stos
mov
or
push
jne
pop
mov
xor
js
rcll
jg
arpl
jecxz
dec
fadd
test
cmpb
cs
das
sahf
or
mov
mov
mov
and
add
xchg
sub
add
mov
xor
cwtl
lcall
mov
scas
xlat
sahf
xchg
fisttps
cmp
xchg
into
in
and
sub
cs
sub
sub
fiaddl
adc
mov
lcall
js
jb
lahf
pop
add
adc
in
sub
bnd
rcll
movsb
mov
mov
jmp
dec
shll
push
dec
in
inc
aas
test
gs
rcl
jl
inc
clc
ja
mov
subl
xchg
mov
popa
aaa
push
mull
lock
mov
out
fcmove
sub
jo
ja
mov
dec
push
mov
or
pop
pop
mov
dec
ror
inc
imul
sbb
or
sbb
hlt
cmp
push
ss
icebp
je
mov
mov
ja
xchg
loop
mov
sub
daa
mov
ror
shll
icebp
pushf
push
sub
add
insb
cmpsb
jb
sbb
daa
fmul
xor
sub
sub
mov
cwtl
dec
insb
insl
enter
mov
lret
rcrb
xchg
aad
lds
fisubl
xlat
shlb
es
mov
xchg
pop
inc
outsl
cld
into
fdivp
mov
aaa
pop
shll
push
add
or
sub
movsb
and
xor
sub
dec
pop
call
xor
xor
sti
add
scas
mov
mov
dec
mov
cli
push
fcoml
movsb
fcmovbe
sub
sbb
ja
sar
imul
stos
pop
pushl
sbb
inc
and
rcl
leave
xchg
pushf
jle
lret
sahf
lahf
out
in
cld
dec
mov
rcrb
popf
inc
mov
push
jb
and
imul
cltd
jl
ret
or
cmpsl
sbb
jbe
ja
sub
add
movsb
cmp
out
dec
jmp
lret
fistpll
filds
aaa
daa
stos
pushl
ds
xchg
ret
aaa
dec
sbb
xor
push
inc
aam
aam
lea
sub
stc
adc
insb
push
int3
jl
adc
adc
aas
push
push
sti
outsl
add
stc
xchg
iret
add
dec
ret
push
int3
rcr
cmc
fisttpll
mov
sub
mov
iret
aam
jbe
cmc
mov
mov
in
fucomi
mov
sbb
mov
ja
push
mov
and
sbb
pop
es
mov
stos
out
sti
pop
mov
mov
iret
mov
divb
sub
lcall
shll
fdivs
rcrl
std
mov
cmp
jo
test
lods
xor
jecxz
adcb
xor
dec
xor
xchg
stc
ss
sub
hlt
and
mov
push
cmp
icebp
aam
mov
sub
or
jb
decb
cmp
pop
loope
shlb
xor
sbb
fwait
xchg
push
fimull
into
shlb
ljmp
movsl
or
mov
adc
sub
shrl
pop
push
sti
xchg
inc
sahf
addr16
out
dec
cs
in
fdivrs
test
int
dec
test
and
xchg
jle
insb
or
sub
imulb
std
outsb
fs
lock
xchg
fwait
sbb
xor
push
sub
pusha
fcomp
jle
fbld
out
and
jle
icebp
mov
add
cvttps2pi
mov
push
adc
mov
hlt
cli
adc
movsl
mov
cmp
fs
pop
mov
or
shl
outsl
inc
jg
sbb
dec
andl
jle
adc
rclb
lahf
divl
lock
jp
push
divl
cmp
and
sbb
in
add
mov
mov
lcall
mov
movsl
xlat
adc
push
push
jl
das
test
xchg
push
lcall
int3
cs
cmp
in
loopne
sbbb
test
popa
jbe
pop
cltd
mov
lea
cld
mov
or
sbb
repz
pushf
and
sahf
test
rol
push
repnz
pop
jle
sbb
sub
clc
scas
mov
dec
dec
mov
inc
pop
adc
sbbl
sbb
repnz
mov
jmp
sbbl
sbb
sbb
movsb
movsb
dec
sti
jle
adc
push
pop
shll
subb
das
and
cmp
rorb
test
sbb
mov
test
sub
adc
inc
jbe
xor
data16
dec
in
test
arpl
pushf
push
imul
and
fdivr
cmp
movsb
aaa
and
pop
cwtl
push
ret
inc
dec
push
stos
mov
hlt
pushf
mov
add
scas
sbb
dec
mov
xor
mov
dec
scas
mov
insl
jp
dec
xorl
cmpsl
or
mov
addl
add
rorb
inc
push
inc
sub
insl
mov
pop
daa
xor
sub
push
int
loopne
out
or
mov
inc
movsb
shrb
dec
pushl
and
ss
sahf
mov
shlb
push
fs
pop
mov
pusha
in
adcb
mov
gs
xor
testl
jecxz
lds
loope
ficomps
out
dec
mov
push
int
cmp
jbe
fsubs
dec
add
fstl
xor
ds
xacquire
xchg
mov
inc
push
test
icebp
ror
dec
xchg
xorl
mov
dec
dec
rorl
std
cmp
jo
add
push
sbb
negb
stos
xor
cmp
mov
das
ror
out
and
mov
pop
dec
cmp
shlb
pop
sbb
jge
xchg
cmpsl
ret
mov
jno
add
adc
inc
sub
adc
ja
adc
mov
xor
insl
push
jmp
popa
push
pop
push
pop
inc
jp
push
adc
test
shrl
adc
inc
xlat
testb
add
jmp
mov
push
jg
shll
dec
or
mov
ds
push
js
adc
xchg
add
add
pop
daa
arpl
mov
popf
or
add
xor
xchg
repz
loope
xchg
push
adc
test
subl
iret
or
scas
pop
js
mov
addb
aad
push
jno
addr16
sbb
push
hlt
sbb
pop
push
inc
mov
xor
addr16
movl
clc
dec
aaa
jno
jne
decl
mov
or
ret
aas
pop
mov
mov
sbb
mov
mov
call
xchg
ror
inc
call
outsb
jp
mov
cli
xchg
dec
test
mov
inc
scas
mov
popl
mov
jecxz
out
sahf
dec
and
cmc
sbb
icebp
add
lea
jecxz
xchg
ficomps
pop
loope
imul
pop
inc
dec
test
sub
or
xchg
enter
mov
sub
cmp
cmpsb
in
sbb
xchg
iret
add
sbb
fldcw
insl
cs
adc
je
je
nop
hlt
imul
pop
sub
aas
in
repnz
push
sbb
cmpsl
loopne
jbe
pop
pop
add
cmp
pop
xchg
shrb
inc
lock
push
popf
js
push
pop
popa
pop
add
and
fwait
inc
shrl
leave
sbb
cs
sub
push
cmpsl
popf
fstl
jae
gs
cmp
sbb
icebp
mul
xor
js
insb
shlb
sub
pusha
dec
xchg
sub
in
std
xchg
or
mov
or
scas
int
sahf
fnstsw
imul
into
xor
gs
fisubs
push
fmull
dec
inc
jno
sti
xchg
daa
test
dec
testl
fwait
lcall
insl
xor
neg
aas
cmp
mov
pop
pop
and
mov
adcb
addl
dec
scas
add
mov
xchg
icebp
pop
pop
push
pop
in
sub
jmp
jo
mov
mov
mov
stc
in
mov
pop
stc
and
imul
jae
mov
stos
sti
addr16
sbb
dec
sbb
stos
test
cmp
xchg
fstpt
test
jmp
jge
fisttps
or
jecxz
jg
ss
mov
stos
imul
xor
mov
pop
push
sub
jecxz
ja
imul
or
push
dec
mov
loop
and
mov
adc
add
add
out
sbb
mov
or
lods
test
or
xor
popa
mov
xchg
fstpt
cmpsl
jne
mov
sbb
orb
stc
rcl
xor
out
mov
xchg
add
add
mov
out
mov
and
mov
jl
out
jmp
popa
idivb
cs
stc
xor
ret
xchg
xorl
decb
enter
addl
push
adc
pop
test
imul
into
jo
fs
sbb
lcall
mov
out
jmp
add
sub
mov
ljmp
cmp
out
inc
in
or
xor
shlb
sbb
imul
loope
imul
add
roll
ficomps
jp
pop
das
jns
pop
insl
not
pop
push
lods
fdivs
adc
data16
sub
repnz
iret
leave
jmp
mov
cmp
sbb
jo
cltd
mov
and
fidivrs
or
lock
mov
mov
clc
or
jg
imul
pop
or
push
movsb
dec
jno
and
jp
leave
data16
lcall
and
inc
pushf
notl
popf
sub
or
ja
adc
aas
pop
arpl
gs
imul
sbb
call
inc
fldcw
push
ficoml
jmp
movsb
adc
sbb
adc
cmc
cmp
ja
dec
shlb
inc
push
push
xor
jnp
or
adc
pand
mov
xor
rcl
lcall
cmp
fwait
std
adc
adc
jmp
ja
dec
inc
pop
orb
loop
xchg
lret
inc
lods
mov
rcrb
shl
mov
lods
subb
xor
cwtl
inc
xor
out
out
mull
inc
mov
repz
or
sub
xchg
and
out
push
stos
testb
adc
add
mov
lret
into
dec
and
jmp
mov
je
lcall
pop
jmp
push
test
test
and
pop
xor
into
add
mov
fcom
shlb
and
inc
inc
scas
fldl
lods
cmc
dec
aaa
mov
lds
daa
xchg
inc
insl
lret
xorb
fists
stc
es
cs
fnclex
jl
lcall
add
negl
and
jmp
movsl
add
xor
cmp
push
xor
mov
add
push
xchg
adcb
sub
ss
push
jae,pt
nop
ret
adc
into
pop
xchg
out
add
out
mov
mov
mov
loop
cmp
test
jno
test
adc
push
fldl
jp
shrb
das
insb
shlb
cli
icebp
leave
int3
lods
std
sub
into
inc
icebp
icebp
lcall
lcall
aad
and
mov
mov
fldl
cmp
jnp
popf
xor
ljmp
lret
data16
jmp
cmp
fstpt
ss
inc
cmp
sbb
sub
fs
mov
pop
and
sub
mov
in
jne
aam
add
xor
in
loope
pop
mov
aam
mov
stos
push
or
les
cmp
pop
push
jb
loop
dec
add
fs
call
shl
mov
cwtl
xor
into
sbb
stos
pop
pcmpeqd
outsb
lods
add
outsl
vmovaps
fwait
dec
int3
js
ljmp
addl
bound
xor
loopne
test
or
mov
mov
insl
or
mov
icebp
or
pop
test
ficomps
enter
sbb
xchg
jnp
inc
inc
insb
pop
jbe
and
xchg
jge
or
bound
stos
incl
push
ljmp
bound
idivb
popf
sbb
adc
add
cwtl
cwtl
rorl
xor
mov
bound
cmpsb
xchg
sub
sahf
or
mov
and
cmp
ja
lock
xor
mov
dec
adc
int
stos
lds
jp
jns
pushf
movsl
sub
shll
pop
icebp
outsl
ljmp
jns
out
cmpsb
dec
les
push
mov
adc
shrb
sub
andl
mov
cwtl
subl
mov
jne
jno
jmp
andb
aas
add
add
jecxz
and
jne
dec
jns
or
xor
xchg
and
mov
sub
fistl
jge
xor
cwtl
dec
mov
sbb
adc
xchg
push
mov
mov
push
mov
in
inc
in
jns
cmp
cli
lcall
pop
dec
mov
daa
andb
and
sub
xchg
jns
add
divb
push
mov
mov
or
inc
xlat
xor
or
movsl
sbb
sbb
push
inc
pop
add
movsl
xchg
in
je
pop
pop
xor
mov
jle
es
insb
repnz
inc
pop
ja
sti
push
sbb
out
das
add
sbb
inc
jle
cwtl
test
sarl
push
jl
inc
jg
ret
xor
cmp
stos
jne
fdivs
jg
xchg
pop
aas
rol
aas
cld
test
enter
mov
pop
xor
movsb
lock
adc
popf
adc
cmc
aad
das
xchg
pop
mov
or
cmpsb
mov
xor
add
pop
push
rorb
and
nop
dec
ds
mov
out
enter
pop
mov
fildll
test
aam
mov
cmp
aam
add
xor
stos
outsb
xchg
mov
jl
outsb
sbb
enter
push
sub
xor
rcll
sub
movsl
cmc
mov
inc
xor
xchg
cmp
das
mov
ljmp
xor
dec
push
loope
incl
mov
pop
jmp
xchg
outsl
pop
cs
sbbl
shr
xchg
cltd
ss
sub
bnd
lahf
adc
add
into
test
ret
hlt
ljmp
cmpsl
cmp
jmp
jae
arpl
inc
mov
pop
ret
add
adc
mov
shl
mov
sysexit
mov
lods
js
add
mov
in
jo
and
push
xor
cmp
test
andb
mov
inc
push
es
push
cmpsb
fadd
rclb
loopne
ret
loop
mov
cmp
inc
jge
dec
stos
popf
sti
sub
mov
in
stc
test
inc
mulb
pushaw
sbb
iret
outsb
sbb
aam
movsl
xchg
cltd
xor
pop
cmp
cmp
or
jb
fildll
andl
fidivl
mov
lods
xchg
testw
stc
dec
clc
sub
jo
sti
loop
lret
outsl
addr16
jns
mov
fnstsw
mov
arpl
movsl
pop
or
mov
pop
add
pop
iret
dec
lods
jg
and
inc
adcb
icebp
out
mov
lods
fmull
das
pop
test
sub
mov
inc
mov
test
inc
and
xchg
fcomp
inc
or
js
fldcw
adc
test
dec
cltd
bnd
dec
add
mov
jmp
dec
out
rorb
aaa
in
rcr
pop
lods
orl
call
push
and
push
in
jno
pop
ficomps
mov
shlb
sahf
mov
cmp
es
and
push
divl
xlat
xor
jnp
cs
ret
adc
add
popa
test
adc
lods
enter
push
xchg
jg
std
jbe
push
add
scas
pushf
nop
aas
mov
pop
inc
sysret
mov
loop
mov
xor
push
and
and
add
out
dec
jbe
and
mov
test
loope
repz
xchg
aam
call
sbb
mov
xlat
stos
lahf
sbb
outsb
push
inc
rcll
mov
xor
cltd
les
xchg
push
lds
add
inc
lods
mov
cmpsb
jbe
xchg
jmp
pusha
imul
or
aad
ljmp
xchg
ss
pop
xor
or
xchg
orl
pushf
in
xchg
jno
adc
sbb
in
lahf
das
add
arpl
into
sbb
fnstsw
push
fwait
fwait
outsl
bound
lcall
push
hlt
or
rcl
jae
cmovg
and
pop
push
pop
arpl
lahf
jp
cmp
loopne
adc
jl
mov
in
mov
cltd
mov
out
and
cmc
mov
ret
loope
xchg
xor
mov
rclb
pop
mov
fstp
adcl
sub
test
pop
cmp
fstl
mov
pop
lret
mov
outsb
pop
jo
es
inc
imull
lds
mov
movsb
out
popf
add
fwait
lods
mov
jb
test
pop
stc
pop
xchg
jg
push
imul
lret
add
sub
out
movsb
jl
rclb
mov
shrb
inc
add
mov
add
and
or
imull
fmulp
and
stos
dec
das
mov
dec
and
pop
push
adc
mov
push
sbb
pop
sbb
mov
mov
outsl
aad
xlat
cmp
repnz
mov
ja
lret
mov
mov
pop
pop
lea
adc
cmp
ljmp
pop
sti
xor
adc
jb
and
jmp
mov
inc
xor
inc
push
dec
je
or
cmpsb
sub
inc
or
jle,pn
test
lods
pusha
jno
or
dec
nop
shl
mov
dec
push
jns
mov
pop
shl
aaa
insb
aam
std
jecxz
xor
dec
jb
push
sahf
cli
dec
gs
into
outsl
pop
mov
pushf
sarl
inc
push
xor
xorb
inc
mov
test
and
cs
push
mov
jb
mov
add
jnp
pop
add
cmp
cmp
xchg
pushf
test
punpcklbw
jmp
push
addb
dec
cmp
rorb
mov
fcmovnb
sbb
sbb
jge
adc
dec
dec
dec
mov
ss
lret
xchg
and
lcall
dec
out
mov
push
mov
jl
imull
rcr
jge
stos
or
push
and
mov
push
ljmp
push
das
xor
iret
fisubl
add
in
int3
cmpsl
or
ret
addr16
xchg
and
arpl
xchg
mov
movsb
inc
add
add
push
inc
jno
or
adc
enter
mov
ret
insb
sub
dec
add
push
daa
cwtl
lea
ret
scas
cmpsb
imul
sbb
inc
jp
sub
sub
or
cmpsb
adc
pop
jo
cs
je
dec
add
xchg
or
xor
clc
sbb
leave
sbb
loop
insl
xor
xor
lods
sbbl
arpl
stc
sub
negb
fimuls
stc
mov
jmp
push
xchg
xchg
daa
xchg
in
cmp
jmp
in
into
outsb
mov
xor
cltd
adc
mov
lds
in
or
stos
dec
push
testl
call
mov
inc
adc
sarl
mov
test
add
cltd
mulb
jge
push
ja
xor
add
jmp
cld
xor
adcl
and
mov
xchg
mov
lcall
mov
cltd
addr16
sub
mov
lods
out
in
mov
add
sbb
add
and
push
xor
outsb
xchg
push
sub
lahf
clc
lahf
adc
das
mov
cmpb
pop
insl
jnp
mov
mov
hlt
jle
inc
ret
fs
addr16
loopne
vmwrite
mov
pop
push
lods
mov
and
pop
bound
lahf
mov
mov
dec
popa
stos
and
loopne
cmp
push
aaa
test
je
xor
ljmp
mov
inc
scas
roll
inc
mov
pushf
mov
pop
xchg
adc
jo
sbb
fmuls
and
into
das
adc
punpckhwd
lret
lods
jge
xchg
test
cmp
or
xor
aad
sahf
and
cmp
in
enter
lods
mov
inc
mov
pusha
xlat
outsb
fistl
lds
loope
xor
cmp
add
push
jge
test
mov
xor
adc
sbb
arpl
imul
sub
push
xor
adc
jecxz
in
sub
jge
lret
enter
repnz
stc
mov
sbb
shll
xchg
test
sub
dec
add
dec
mov
pop
dec
gs
in
inc
adc
addl
fucomi
or
pusha
xchg
cmp
cld
std
cmpsl
xchg
xchg
loop
pop
xor
mov
pushw
enter
mov
jae
xstore-rng
cmpsl
addl
fstp
sub
jns
ret
aas
mov
repz
or
push
mov
lea
pop
sbb
add
mov
roll
xchg
jb
pop
loope
daa
ficomps
cld
jae
jbe
rolb
push
sub
daa
xchg
xor
in
or
or
lock
cmpsl
mov
nop
cmc
push
shlb
push
and
loope
lret
arpl
ljmp
mov
mov
mov
clc
out
add
lods
ret
cmp
cmc
fs
jmp
outsb
mov
in
push
ret
dec
cmc
mov
mov
add
ret
es
bound
and
test
out
adc
or
ja
add
add
mov
inc
xor
hlt
test
fs
loop
into
call
scas
pushf
insb
movsl
pushw
inc
cli
inc
ret
cmp
outsb
popa
cmp
fimull
test
cld
mov
xorb
jns
xchg
iret
pushf
in
dec
adc
cmp
sub
sub
cwtl
and
std
ljmp
sub
cmp
mov
das
psubw
lahf
cwtl
dec
idiv
xor
and
adc
lcall
fsubs
jl
pop
sbb
stos
cwtl
push
jecxz
inc
pop
xchg
dec
fadds
fnsave
xchg
pop
mov
jno
push
inc
scas
lds
lea
sub
dec
or
cmp
or
inc
mov
stc
dec
sbb
imul
movsl
mov
outsb
fistl
sub
int3
cmpsb
dec
inc
mov
sbbl
jmp
and
fists
mov
out
dec
outsb
std
xchg
mov
ret
js
fsts
inc
push
add
das
lods
pop
lds
mov
popa
addl
cmpsl
addb
xchg
inc
je
ss
xrelease
inc
mov
andl
add
inc
add
sbb
movsl
gs
ret
test
out
idivl
fstpl
mov
xchg
jge
ficomps
pop
int3
and
jns
mov
mov
mov
sub
inc
inc
movsl
test
mov
movsl
and
jg
adcl
xchg
inc
test
mov
xchg
adc
dec
or
arpl
pop
sub
mov
aaa
adc
fiadds
ret
call
jns
push
jmp
mov
pop
iret
arpl
push
outsb
mov
repnz
xor
popa
loop
cmp
dec
xchg
es
movsl
adc
lahf
sbb
dec
mov
inc
mov
daa
data16
mov
push
sub
xchg
mov
les
xchg
and
xchg
insb
cld
fisubrs
xor
dec
repz
rcrl
bound
adc
fsubs
insl
lock
cs
adc
inc
cmp
cli
pop
jmp
lcall
imul
push
in
jge
sti
sbb
imul
mov
pop
movsl
imul
lret
mov
insl
mov
pop
dec
std
lret
xchg
dec
out
mov
dec
into
inc
dec
jecxz
push
es
test
mov
rcrl
pop
inc
mov
jecxz
add
lret
jae
sbb
cs
mov
aaa
shll
call
gs
push
mov
mov
push
hlt
lea
mov
cld
add
push
mov
add
pop
js
cmp
or
mov
ret
mov
repz
ss
mov
mov
imull
rcll
dec
lret
xor
fisubl
cmp
in
addr16
cmpsl
js
mov
in
ret
sbb
mov
mov
mov
fwait
insl
mov
push
mov
jecxz
push
sbb
or
arpl
xchg
loope
repnz
push
arpl
imul
or
daa
mov
add
or
bound
inc
clc
jns
mov
out
mov
dec
imul
div
cmp
xor
jmp
add
test
cld
mov
lret
add
iret
or
adc
in
pusha
xor
add
fists
psllq
hlt
pusha
rorl
xor
ljmp
out
or
cmp
popa
iret
xchg
lods
insl
push
pop
sbb
in
clc
insl
int
pop
xor
inc
test
ret
test
jb
or
out
mov
loop
pop
pop
loopne
out
ss
push
scas
cmp
sarl
jbe
add
or
in
jno
mov
push
mov
push
dec
in
fdivp
ret
test
mov
push
test
cmpsb
push
cmpsl
or
movsl
and
inc
jmp
lret
sahf
sub
adc
test
cli
jnp
xor
inc
inc
hlt
jg
mov
push
insb
jg
lds
xor
push
cwtl
sub
jnp
and
add
xchg
fisubl
into
ret
xor
insb
and
fidivl
stos
push
push
xchg
jns
xorb
popf
in
ss
push
nop
dec
inc
andb
push
adc
dec
sub
xchg
es
xchg
mov
inc
loope
inc
insl
xchg
js
push
std
mov
mov
out
orl
cmpsl
sbbl
push
cld
sub
call
cmc
outsb
in
mov
icebp
imul
and
out
cwtl
inc
test
in
insl
jnp
mov
jge
in
or
fldcw
outsl
addl
dec
add
aas
dec
or
mov
clc
sbbb
sti
cmpsl
dec
xor
cli
loope
mov
xor
cltd
outsl
aad
shlb
add
jg
xchg
xchg
movsl
out
pop
push
in
jno
add
jle
fucomp
lods
cmp
cmpsb
push
xchg
mov
push
daa
pop
mov
dec
push
mov
dec
sub
pop
sbb
sub
sbb
or
sub
lods
sub
daa
das
pop
push
nop
inc
loope
lret
ret
xchg
je
dec
jo
add
iret
add
imul
mov
mov
outsb
andb
adc
es
push
sbb
jo
mov
and
mov
ret
add
push
test
jge
adc
popa
dec
pop
out
aad
arpl
xchg
cmpsb
cmp
xabort
lods
push
or
ret
add
lods
shr
sub
add
jns
cltd
mov
cmpsb
outsb
jecxz
inc
push
gs
loope
push
cwtl
cmp
cmp
push
mov
out
sub
loopne
in
scas
dec
in
mov
ds
push
xchg
daa
lret
dec
mov
pop
stc
bound
dec
scas
mov
mov
xchg
popl
jp
push
xchg
lock
mov
jne
scas
inc
imul
xlat
push
repnz
test
dec
insb
mov
cmc
add
sbb
push
shlb
ss
xor
pop
mov
movsb
mov
xchg
adc
sub
iret
xor
and
addl
jl
js
pop
cmp
sahf
neg
cld
mov
std
or
push
or
shlb
mov
aaa
push
outsb
jmp
add
enter
sbb
mov
xor
jp
or
mov
enter
mov
scas
xchg
adc
pop
movsl
aad
cli
rcr
dec
inc
test
stc
inc
das
mov
inc
movsl
mov
push
fwait
sbb
into
ljmp
rorb
xor
inc
in
sti
fcmovnbe
mov
out
mov
hlt
test
ljmp
xchg
add
mov
iret
popf
inc
add
sbb
popf
xor
mov
in
push
pop
sbb
push
jae
scas
in
es
jnp
stc
repz
or
mov
pop
popa
xchg
mov
testl
add
xor
mov
addr16
andb
int
arpl
shll
and
mov
push
inc
jle
jg
insb
fnsave
xor
iret
test
pop
push
cmpsb
inc
inc
lcall
push
jge
rol
cmp
push
std
lock
mov
stos
into
jnp
cltd
je
sar
xchg
bound
inc
cwtl
jbe
sbb
inc
lahf
insb
xchg
outsb
fldln2
pop
in
lds
or
mov
cmpsb
sbb
jne
inc
mov
pop
jge
push
cld
roll
dec
insl
fimuls
or
mov
ss
cwtl
lret
push
mov
inc
shrl
stos
add
inc
lret
dec
in
sub
gs
lahf
clc
sbb
mov
addr16
repz
cld
adc
pop
hlt
jp
addr16
xor
out
xchg
cs
sahf
or
outsb
jb
outsb
xchg
pop
xor
dec
pusha
cmp
mov
mov
orb
fisttpl
cmpsb
stos
add
push
movsl
andl
jmp
adc
mov
icebp
aaa
mov
mov
sbb
xchg
lds
jne
mov
mov
cmpsb
mov
xchg
xchg
xor
lods
xlat
fdivrl
es
push
std
jecxz
pop
or
ret
daa
shll
mov
cmp
bound
cmp
imul
test
dec
imul
mov
in
xor
and
insl
jmp
add
push
js
and
aam
cs
push
push
popa
jmp
mov
fisttpll
sub
mov
dec
enter
push
inc
cltd
pop
and
ljmp
pop
int3
pop
sti
xchg
xor
push
das
cli
dec
adc
arpl
fmuls
mov
stc
mov
sti
xchg
or
fdivrs
jb
push
je
xchg
xchg
cmc
test
dec
mov
andb
enter
mov
jb
and
pop
jg
xchg
daa
sti
imul
sbb
in
mov
mov
jns
sub
sbb
push
les
dec
jbe
pop
mov
in
sub
popf
testb
aam
repz
shlb
repnz
mov
mov
dec
xchg
jp
mov
jg
cmc
call
lcall
mov
jne
lahf
lret
or
add
mov
xchg
dec
cld
aaa
cmc
pop
andl
push
insl
mov
test
cli
and
xor
inc
sub
dec
loopne
add
mov
out
fcoms
dec
pop
sub
mov
jmp
dec
jno
inc
gs
or
jb
xchg
enter
jae
adc
loope,pt
xorb
xchg
cmp
push
fmuls
mov
adc
and
cld
addl
sub
jecxz
xchg
aam
icebp
mov
pop
sbb
sub
bound
pop
cmp
mov
sbb
xchg
dec
or
xor
je
jnp
xrelease
lcall
dec
push
add
cmpsb
popf
lea
push
insl
ljmp
mov
dec
push
in
addr16
sti
idivb
mov
push
push
faddl
stos
enter
mov
lret
pop
pusha
lcall
shl
movsl
outsl
mov
pop
cltd
int
and
mov
or
adc
or
icebp
ret
std
mov
mov
loop
mov
jno
fsubl
outsl
pusha
stos
jg
loopne
repnz
rclb
push
cmpsl
scas
xchg
in
scas
in
repz
lock
repz
mov
pop
and
lret
pop
ret
ja
movsb
push
outsl
jnp
movsl
jbe
mov
jae
scas
push
sub
push
pop
cmpsl
outsb
or
cltd
std
loop
bound
inc
inc
sahf
ret
jecxz
pushf
add
mov
sub
mov
push
rclb
fnstcw
test
push
mov
lods
jle
dec
jmp
mov
adc
and
mov
push
scas
mov
mov
ret
loopne
mov
dec
and
add
mov
xor
mov
xor
loopne
push
decl
fs
adc
insl
jno
pop
adc
pop
dec
jns
pop
lock
fadd
dec
adc
mov
pop
mov
push
mov
push
ds
sub
in
mov
xor
ret
out
dec
push
fcompl
ss
std
adc
add
in
in
adc
loopne
out
dec
outsb
lret
add
js
pop
jae
jecxz
xchg
adc
repz
inc
mov
iret
popf
jae
push
xor
cmpsl
int
incl
dec
lds
jmp
xor
movsl
jne
or
or
repz
pop
pop
int
sbb
int
aas
adc
int
sub
mov
arpl
adc
icebp
xchg
lahf
mov
leave
pop
int
ret
inc
mov
push
xor
jecxz
stc
stc
and
pop
inc
xor
mov
js
leave
in
das
lret
into
nop
mov
cld
je
and
shrb
mov
and
stos
sub
or
stos
xchg
adc
push
clc
out
jge
cs
jo
addr16
jp
cmp
mov
sub
or
cmc
push
movsb
enter
ficomps
sub
push
nop
rcrl
popf
or
inc
mov
dec
cltd
add
lock
sbb
fwait
mov
jnp
fwait
or
cmp
add
out
jnp
cmp
mov
jp
sub
jo
imul
lret
int
and
lahf
inc
xchg
cmpsl
mov
scas
add
insl
or
cmpb
imul
fisubl
lcall
pop
loopne
dec
or
andl
popf
ds
sahf
and
jg
push
cmp
or
stc
sub
mov
out
push
mov
and
mov
jecxz
enter
popf
fwait
imul
dec
mov
pop
in
and
cwtl
adc
call
dec
or
jecxz
clc
mov
and
pop
push
cmpb
gs
mov
adc
ja
jo
lret
je
sub
jae
je
aaa
insb
jmp
fbstp
fst
push
cwtl
sub
lds
ljmp
fnsave
int3
out
mov
ret
or
sub
mov
pop
lcall
cli
xor
jns
cmp
cmp
mov
and
add
adc
data16
mov
mov
adc
and
and
sbbl
out
test
pop
lock
outsl
stos
aam
aam
jo
loop
orl
xchg
push
rcrl
xor
sahf
gs
xchg
iret
dec
mov
mov
test
push
mov
mov
ss
mov
je
adc
cli
mov
push
or
imul
test
jecxz
fimuls
and
mov
nop
pushf
xor
sbb
jne
sbb
jb
sbb
adc
pop
mov
jmp
inc
inc
notb
cwtl
pop
inc
int
jp
jge
xchg
fbstp
test
lahf
push
test
add
or
inc
pop
in
fisttpll
das
pop
push
popf
jo
lret
lds
mov
mov
leave
xorl
push
jge
fwait
xchg
mov
sub
arpl
mov
push
gs
push
jp
inc
add
loopne
sbb
sahf
aas
pop
push
mov
mov
dec
push
insl
popf
mov
jo
jg
adc
fcompp
xorb
jno
test
sbb
repz
adc
cmp
jmp
lcall
stos
jmp
popa
xchg
cmp
icebp
pop
aas
in
sub
sub
xchg
pop
loopne
decl
sbb
ret
shrl
ret
jg
icebp
mov
addr16
mov
out
jnp
cmp
sbb
sbb
fnstsw
test
jns
cmc
xchg
sub
cmpsb
out
push
les
dec
push
sbb
test
push
lret
stos
adc
cmpsb
arpl
lds
pop
xchg
or
pop
aaa
or
andb
push
clc
loopne
push
mov
out
inc
push
roll
nop
call
rolb
cmpsb
and
mov
ret
sbb
std
addr16
outsb
pop
mov
add
jno
pop
or
loopne
cld
inc
xor
sbb
pusha
sbb
lcall
xchg
mov
mov
pop
xchg
dec
and
cmp
arpl
sti
and
xor
ds
js
sbb
xor
sti
xchg
mov
jp
dec
cmpsl
adc
adc
fdivs
mov
std
add
jmp
adcb
cmp
mov
mov
call
mov
jg
sahf
pop
in
loopne
pop
sbb
iret
cmp
aas
loop
sar
and
or
pop
cmpsl
sbb
xchg
stc
jne
or
dec
mov
out
mov
les
jp
xchg
insb
lcall
mov
add
sbb
jg
xor
xchg
call
lods
mov
jecxz
repz
push
fwait
dec
inc
aaa
scas
sti
aam
mov
dec
pop
mov
jo
sbb
repz
push
fwait
dec
inc
add
mov
jmp
cmpsb
adc
cmp
jnp
xor
icebp
movsb
jmp
jo
mov
popa
add
jno
pop
cmp
pop
jns
fcomps
jp
fs
push
in
sub
push
xchg
jae
popf
arpl
cmp
jmp
cld
into
jecxz
pop
add
sti
xor
jno
mov
cltd
data16
rol
push
adc
mov
in
jp
repnz
xchg
test
push
lcall
mov
das
out
mov
dec
pusha
dec
xchg
cmp
jmp
int
fnstsw
movsb
jp
pop
lcall
cli
inc
arpl
mov
adc
mov
pop
xchg
addr16
jmp
loop
lret
movsb
stc
ja,pt
ficoml
in
js
sub
pushl
jmp
jnp
or
dec
lods
mov
mov
add
sub
jbe
xor
fstpt
add
outsb
ljmp
xchg
ja
fists
pop
mov
fcompl
mov
stos
out
js
cmc
push
pop
jno
popa
pop
popa
jno
andl
push
rcl
rol
mov
test
rcr
jne
mov
inc
jl
push
xlat
xor
sub
inc
test
sbb
pop
jmp
in
and
inc
sbb
and
pop
fcom
mov
imul
jecxz
sub
sti
mov
movsl
mov
or
hlt
xor
jmp
in
movl
or
add
inc
pop
adc
sbb
or
or
loop
test
inc
xchg
sub
loop
jp
scas
mov
jns
rcrl
jbe
xor
adc
or
or
adc
adc
sub
repz
push
insl
lock
ret
icebp
sub
dec
or
or
sti
int3
push
mov
repz
jl
xchg
add
and
dec
sbb
cmp
jno
mov
leave
into
mov
cmp
mov
pop
xchg
pop
pusha
push
dec
fnstsw
mov
push
cmp
data16
lcall
arpl
test
mov
xchg
inc
shlb
pop
xchg
adc
jecxz
xchg
ds
sub
std
push
sbb
xor
ret
dec
add
pop
xchg
adc
or
push
decb
incl
test
jg
push
cmc
and
inc
repz
leave
stc
sti
loop
movsl
stos
in
mov
into
or
mov
xchg
aam
push
sbb
inc
orb
sub
xor
mov
subl
lret
dec
ljmp
or
dec
in
stos
cmp
pop
outsb
movsl
or
hlt
sbb
in
fisubrl
stos
mov
jno
lret
and
jne
mov
cmp
jle
mov
cmc
or
pop
test
dec
jnp
xor
jae
mov
fbstp
cmp
cltd
mov
add
inc
pop
xor
les
push
jne
cli
lahf
inc
clc
push
mov
pop
xchg
xchg
in
jl
lods
jecxz
xchg
ret
stos
mov
pop
scas
cmp
pop
mov
fidivl
cmp
adc
sub
fdecstp
add
mov
iret
pop
inc
or
lds
xlat
add
dec
adc
push
pop
outsb
mov
inc
or
in
in
lods
pop
inc
pop
mov
insl
add
pushl
arpl
cmp
adc
lret
icebp
add
cmp
ret
dec
daa
mov
aas
mov
xchg
cmpsl
in
out
and
push
cwtl
gs
emms
mov
or
inc
xor
mov
xor
dec
push
push
fists
xor
mov
mov
fbld
mov
mov
loopne
jg
testl
enter
cmp
mov
inc
push
lcall
sbb
cmp
ror
ret
stc
sbb
push
inc
test
lock
jg
pop
pop
dec
or
cld
inc
pop
aaa
cwtl
adc
sbb
push
jae
movsl
or
stos
pop
fdivp
inc
fs
xchg
and
idivb
sub
mov
ret
cmpsb
iret
mov
dec
outsl
cli
add
lock
pop
fildll
fimuls
mov
and
lea
gs
jl
stos
repnz
or
pop
call
mov
int
test
sbb
xchg
aas
cmp
decb
pmulhuw
mov
fidivrs
imul
in
stc
adc
jge
dec
mov
orb
push
ja
std
and
push
push
in
sub
mov
push
pop
adc
or
pop
hlt
lcall
stc
rclb
mov
bound
push
pop
push
mov
xor
and
das
arpl
mov
inc
aas
test
popf
mov
decb
dec
mov
clc
add
dec
inc
cmc
xor
xor
xor
sub
xor
push
rcr
pop
enter
outsl
sbb
test
dec
mov
lods
iret
sub
insl
push
mov
dec
pop
mov
pop
fmulp
stos
pushf
iret
scas
cmp
mov
mov
push
pop
cwtl
push
pop
mov
add
add
mov
pop
shl
mov
orl
shr
inc
mov
dec
xchg
sub
pop
mov
push
pop
add
mov
into
bswap
lods
lock
jb
jecxz
sub
jge
js
in
adc
enter
inc
jae
fmul
or
imul
jae
mov
addr16
xchg
sti
mov
cwtl
loope
pop
mov
sub
xor
xchg
pop
out
dec
popa
cmpsl
fldl
movsb
jnp
movsb
or
cli
pop
adc
or
clc
fwait
je
scas
dec
addl
leave
addr16
jecxz
fmull
repnz
jge
imul
std
stc
nop
mov
mov
mov
mov
imul
xchg
ret
and
push
sub
adc
sahf
test
adc
pop
ds
rcr
cs
loop,pn
mov
dec
xlat
frstor
or
sub
leave
out
mov
dec
pop
stos
scas
or
jp
jle
rcr
inc
iret
gs
push
dec
pop
sbbb
rorb
pusha
in
sub
test
ljmp
stos
subl
inc
insl
and
sbb
pop
xorl
mov
movsl
and
icebp
inc
cmc
imul
cmp
lock
adc
pop
imul
and
movsl
jbe
incl
or
jns
inc
push
out
imul
decl
imul
iret
jnp
in
sub
inc
push
cmp
je
sbb
lea
leave
or
test
popa
inc
add
mov
mulb
icebp
std
or
add
sbb
adc
out
cmp
out
dec
mov
jle
test
push
add
test
pop
ljmp
imul
mov
lds
mov
hlt
pop
aam
inc
jp
or
cmp
mov
mov
jns
xor
gs
rcrb
lods
adc
mov
stos
xor
aad
and
movsl
jl
xor
inc
cltd
sub
xor
mov
sti
repz
pop
ret
insl
jp
push
inc
adc
fiaddl
repnz
pop
jae
xchg
jge
setbe
out
mov
lea
ds
and
aad
sbb
pop
mov
sbb
mov
jb
add
insb
xor
insl
scas
push
and
outsb
add
adc
movsb
out
out
push
cmp
inc
pop
mov
fistpll
dec
into
mov
shrb
int3
jne
aam
stc
pop
xchg
and
jp
sub
lea
mov
movsl
fdivrl
lock
jbe
mov
pusha
dec
fwait
push
subl
cli
js
out
jns
or
dec
cltd
lcall
mov
out
mov
les
jecxz
mov
aas
push
jge
pop
mov
mov
test
bound
sbb
xchg
insb
pushf
cmp
lds
mov
sub
cli
adc
xchg
dec
pop
push
adc
bound
push
cmp
fs
push
shrl
or
sahf
lods
cmpsb
xchg
pushl
pop
pop
sarb
or
shr
mov
insl
fwait
ds
rorl
pusha
push
test
movsl
rorl
adc
push
inc
loop
mov
outsl
ds
aad
mov
jno
jle
jne
xlat
xor
stos
jns
inc
into
jl
sub
sub
pop
push
addr16
jo
cwtl
or
sub
pop
inc
inc
aad
xchg
out
sbb
and
and
push
fbstp
cmp
and
iret
popa
mov
sub
inc
pop
pop
aad
adc
or
push
aam
ret
das
cmp
pushf
cs
mov
shll
lahf
inc
adc
dec
std
jo
in
jb
les
repz
jg
scas
jle
ljmp
jb
cmp
cltd
or
sbb
loopne
fisttpl
lret
sbb
stc
sbb
push
fmuls
or
adc
jp
push
pop
pusha
mov
es
cs
call
sbb
sbb
lods
or
dec
lea
mov
loope
sarb
leave
and
enter
inc
push
int3
mov
adc
push
pop
gs
push
inc
mov
and
popa
sbb
fistpl
addl
mov
ficompl
adc
shrl
mov
dec
div
aad
icebp
sbb
sbb
scas
push
sub
in
mov
insl
out
outsl
cmp
lret
mov
bnd
pop
aad
in
push
fcoms
rcrl
jns
cmpsl
xor
fistl
lods
lds
pusha
inc
xor
orl
adc
mov
dec
imul
js
jo
mov
call
fiadds
jl
aad
jbe
push
sub
jecxz
add
sub
inc
cmc
scas
fldl
ret
pop
jns
sbb
adc
sbb
sbb
leave
repz
imul
cmp
cwtl
push
mov
xor
and
mov
sbb
lock
inc
xchg
nop
imul
lret
adc
enter
subl
gs
repnz
sarb
xchg
sbb
sbb
das
adc
inc
mov
sbb
jge
adc
pop
cmc
imul
add
add
adc
je
mov
inc
or
push
sub
push
inc
scas
dec
stc
xor
movb
add
test
mov
daa
fcomps
push
std
cmp
pop
cmc
sarl
pop
mov
and
fldenv
out
inc
ds
outsl
pop
jbe
inc
loope
pop
or
enter
mov
mov
mov
iret
loope
das
jnp
sbb
les
test
jae
rorl
jno
cld
pop
xchg
jge
inc
or
outsl
xchg
push
pop
push
gs
jno
insb
sub
cmp
mov
hlt
clc
dec
push
mov
sub
push
idivl
leave
fadds
inc
lea
js
dec
inc
test
cmc
loopne
lahf
popa
mov
aad
fidivrs
andb
jns
and
popa
filds
xor
pop
lcall
push
pop
xor
cmc
and
aad
in
mov
pop
dec
xchg
insl
scas
cld
push
push
sti
shrb
fwait
test
or
hlt
cltd
mov
test
vsubpd
xchg
push
add
sbb
roll
rorb
sti
scas
mov
pushw
add
sub
push
sbb
sub
rcl
xor
push
fsubrs
inc
arpl
fs
inc
add
int
cli
std
cmp
rdpmc
mov
shlb
sbb
repnz
mov
xor
ja
leave
icebp
add
pop
mov
cli
pop
dec
mov
lods
xorb
mov
push
xchg
and
mov
mov
cmp
test
pop
pop
jg
das
and
faddl
je
xchg
scas
mov
out
movsl
iret
pop
loopne
cltd
lods
int3
and
cmp
mov
fwait
rcrb
push
lea
mov
dec
mov
mov
aam
mov
incl
bound
pop
mov
jnp
loopne
or
mov
out
mov
add
lea
pushw
and
adc
or
dec
adc
dec
aam
xchg
icebp
mull
xchg
and
add
fstl
cs
scas
je
dec
pop
sub
idivl
fidivrl
scas
cwtl
cmp
insl
add
xchg
fwait
loop
cmpsb
inc
jle
sbb
or
cmpsb
mov
lds
pop
adc
push
rcll
jo
add
outsb
or
jne
cli
mov
loopne
lret
scas
sub
cli
xchg
adc
sub
fs
arpl
add
dec
or
dec
in
jne
out
jno
fistpl
call
xor
in
scas
pop
call
mul
push
and
xchg
stc
xor
push
xlat
jns
clc
out
mov
jmp
sbb
cmc
mov
sbb
push
dec
rcll
call
mov
or
and
jp
retw
int
mov
xor
jl
das
and
aam
pop
scas
sti
icebp
int
test
mov
add
mov
mov
subl
push
pop
andb
pop
fdivrs
pushf
in
mov
popf
in
cld
daa
mov
push
push
dec
bound
inc
popa
out
lahf
ss
jnp
aam
adc
test
repz
aad
mov
mov
and
adc
aad
test
mov
fisubrs
or
adc
hlt
out
in
xlat
jno
mov
imulb
lock
popf
push
fwait
stos
or
xor
and
pop
lds
xchg
aas
and
inc
sbb
sbb
and
pop
xchg
std
adc
mov
orb
add
cwtl
fdivl
fcomip
pop
incb
mov
push
fcompl
jns
insb
aas
xor
jns
pop
sbb
dec
mov
pop
xchg
scas
fsts
sarb
jecxz
mov
imul
loope
out
push
ret
xor
xchg
jns
lahf
loope
fxch
call
shrl
mov
ret
lods
and
cmpl
repz
jb
repz
jmp
inc
or
and
jno
mov
and
js
fsubrs
popa
sub
xor
jecxz
dec
push
fdivs
popa
pusha
and
xchg
je
lret
sub
inc
ficomps
jae
mov
and
or
js
fwait
scas
jnp
sbbb
xor
mov
sbb
sahf
inc
or
sbb
aad
insb
add
jp
fs
sbb
lods
stos
pop
rclb
dec
mov
lds
scas
adc
jnp
js
jle
rclb
push
les
stos
mov
xor
lret
push
lret
sbb
mov
ret
mov
scas
cmp
xor
dec
scas
xchg
pop
and
jmp
scas
lret
xlat
insl
adcl
adc
int
mov
inc
js
xchg
mov
push
imul
push
jle
jnp
mov
fistps
shll
outsl
js
push
mov
out
into
je
inc
pop
jecxz
mov
xor
or
pop
sysenter
xchg
mov
mov
dec
cmpsl
sub
nop
stos
shl
xchg
ss
inc
pusha
push
test
out
push
lock
das
mov
mov
lret
mov
and
lds
fistpl
jae
pmuludq
mov
pop
in
sub
pop
mov
in
add
lods
notl
push
cld
lds
popf
lret
inc
xor
leave
pop
into
xchg
xchg
or
sbb
pop
xchg
in
mov
out
ss
push
dec
xchg
jge
xchg
adc
fists
xchg
cmp
in
icebp
mov
leave
mov
jbe
push
jns
scas
aam
je
lret
push
cmpsl
xchg
mov
loop
mov
xchg
out
test
xchg
fimuls
loopne,pn
mov
out
add
loope
mov
aad
aaa
cmp
ds
push
stos
rorb
add
inc
int
cmp
shr
jae,pt
mov
mov
or
sub
xchg
insb
mov
lock
data16
arpl
mov
pop
sub
cli
aam
cmpsb
sub
shlb
and
sarb
xchg
sbbb
mov
lock
pop
pop
push
pop
ss
xchg
icebp
gs
xor
stos
push
mov
sahf
pop
and
inc
or
movsb
or
jge
orl
inc
clc
push
adc
loopne
mov
jmp
mov
pop
popf
mov
mov
jle
stc
fldl
cmp
dec
add
les
insb
jae
mov
shrl
sub
xchg
adc
push
addr16
loope
pop
push
add
scas
sub
mov
sbb
jecxz
popf
mov
jb
sbb
das
jge
pop
fnsave
bnd
push
mov
or
jnp
and
pop
lods
dec
icebp
sahf
or
jae
repz
dec
jno
mov
movsb
cmpsl
xor
xchg
inc
fcompl
sbb
mov
je
fistps
sbb
lcall
test
mov
out
in
mov
movsl
inc
push
pop
push
adc
icebp
push
clc
ljmp
fwait
inc
sbb
or
and
mov
dec
out
or
pop
int3
jno
pushl
icebp
jg
idiv
roll
push
pusha
pop
xchg
adc
fsubrs
mov
adc
addr16
bound
scas
dec
mov
repz
pop
jge
jnp
mull
sub
mulb
gs
int
mov
and
pop
and
mov
jno
push
push
xor
pop
sub
mov
pop
push
or
fiadds
shr
mov
aas
fistpll
or
mov
pop
jae
mov
pop
xchg
or
fiaddl
aas
add
xchg
xor
mov
xchg
push
scas
imull
push
mov
mov
mov
idiv
ficoml
dec
cmp
adc
dec
das
inc
enter
mov
sbb
sbb
xchg
lods
cs
ret
xchg
push
imul
shrb
andl
jae
fidivrs
jp
imul
fwait
cmp
ljmp
push
cmp
gs
loope
sbb
into
ret
cmp
inc
pop
push
mov
mov
xchg
iret
sub
mov
cwtl
les
int
repnz
pop
dec
jg,pt
adc
jb
int
or
fists
lret
xor
dec
shlb
xchg
test
adc
inc
cli
add
push
or
aam
pop
roll
mov
jno
sahf
mov
lcall
test
add
scas
orps
push
cmp
jmp
xorl
pop
xchg
subl
pop
stc
xor
push
mov
sub
inc
aaa
dec
jecxz
push
push
js
or
fidivrl
nop
mov
icebp
jnp
fnsave
and
out
lock
or
mov
jg
add
popa
cmpsl
push
adc
jmp
in
and
inc
iret
sbb
lock
in
shl
xchg
hlt
sbb
jmp
ja
enter
clc
push
mov
mov
jno
shr
lds
or
cmp
mov
movsb
mov
es
call
pop
shr
or
int
call
insl
ret
int
push
inc
pop
cmc
fcmovbe
inc
or
ljmp
add
push
sub
out
inc
inc
and
fwait
adc
rcrb
push
xor
mov
stos
ss
out
bound
negb
push
arpl
xchg
xchg
xchg
sub
pop
lahf
std
xor
mov
push
cli
stos
push
stc
add
xchg
sahf
jl
pop
jmp
out
lods
movl
fs
adc
test
cmpsb
iret
aad
inc
test
fs
aam
jp
push
daa
pop
orb
sbb
mov
leave
stc
sbb
xchg
adc
sbb
add
stos
sub
xor
lea
cmpsb
sbb
adc
cmc
adcb
add
add
or
icebp
cmp
sbb
lods
fstp
fdivs
call
cwtl
mov
push
inc
lret
ficomps
sbb
add
aad
in
push
fbld
test
mov
dec
ficoms
imul
fisubl
dec
roll
cltd
xchg
les
lret
push
mov
icebp
or
pop
sbb
pusha
das
dec
push
out
sbb
popa
add
dec
sbb
fidivrl
mov
ret
mov
ret
mov
mov
push
ret
mul
aas
aad
test
pop
in
push
pop
pop
shlb
jo
ret
in
lcall
lea
outsb
or
call
fwait
gs
push
out
mov
adc
dec
mov
mov
sub
repnz
add
sbb
inc
fwait
int
xchg
js
dec
jno
mov
stos
outsb
add
sbb
pop
jnp
cmp
int
push
lahf
pushf
add
inc
outsb
rcrb
jmp
pop
adc
push
ss
jp
fs
jmp
not
in
xor
mov
sahf
adc
cmpl
stos
sbb
xchg
repnz
mov
jbe
sbb
cmp
leave
fdivrl
addr16
ret
and
aaa
int3
mov
ja
mov
xor
xor
or
cmp
cmp
sub
xchg
xor
in
pushl
jmp
mov
fisubl
leave
add
mov
dec
cmp
mov
cmp
xlat
jne
push
stos
rcrb
mov
jo
push
push
sub
mov
and
push
insl
imul
pop
add
ss
push
sbb
scas
and
sbb
in
sub
leave
mov
jno
jbe
sub
paddq
mov
sub
sti
jge
enter
fucomp
jb
cltd
mov
cs
dec
cld
sub
lock
dec
pop
cmc
andl
sahf
fdivrl
shrb
iret
dec
outsl
lret
jg
add
stos
sub
jns
out
testb
dec
stos
add
sahf
jbe
iret
loop
dec
notb
rorl
cmpl
or
cs
in
out
xor
mov
jl
test
cs
sbb
or
fidivs
xor
pop
inc
test
je
cmpsb
imul
xchg
push
push
mov
in
push
nopl
or
and
aas
sub
pop
lahf
sub
fdivr
sahf
repnz
jb
and
stos
addl
xor
das
push
push
shrb
call
fistpl
mov
mov
pop
sahf
pop
mov
les
push
mov
jo
orb
sub
dec
decl
fcoml
lcall
movsb
add
shrl
je
mov
frstor
out
mov
jo
and
jbe
outsb
popa
cmpsb
xor
aas
out
fisttpll
in
mov
fwait
pop
shrb
je
outsl
pop
xor
cmp
inc
mov
adc
push
sub
cmpsl
sbbl
test
dec
sub
push
jl
or
dec
loop
pop
in
repnz
loop
adc
pushf
fnsave
fwait
outsb
push
cmp
je
inc
add
dec
push
bound
jmp
pop
jp
push
js
in
aaa
fisttpl
adc
cmp
mov
pop
adcb
jne
repnz
stos
ficoml
dec
int3
cli
push
daa
and
sub
mov
scas
lret
subl
push
aam
stc
lods
mov
inc
push
jmp
dec
add
sub
add
rcrl
imul
jae
jmp
repz
ja
ret
or
jmp
and
fsubl
push
sub
ds
cmp
pop
insl
jns
sbb
out
or
cmp
popa
shll
addl
jge
sub
in
push
fs
mov
jae
mov
sub
sub
mov
sbb
adc
mov
cld
push
dec
mov
sbb
push
imul
xchg
les
or
stc
scas
push
pop
subb
jecxz
xor
mov
and
xlat
sub
ja
loop
mov
imul
sub
test
outsb
shl
sbb
imul
pop
mov
scas
and
sarl
push
push
adc
dec
fwait
mov
popf
sbb
stc
jno
sub
test
dec
lea
and
jge
mov
movsl
pop
icebp
imul
movsl
jmp
or
mov
in
xchg
mov
mov
jmp
mov
push
jno
lods
dec
and
jmp
add
sub
jae
mov
mov
lret
stos
mov
arpl
xor
or
jecxz
mov
add
jmp
mov
add
pop
popa
adc
aad
mov
sbb
push
hlt
mov
pop
rorl
mov
fsts
test
add
xor
mov
shl
pop
fsubrs
insl
jns,pn
and
ljmp
popf
pop
shll
sbb
movsl
mov
and
das
jns
lods
xchg
shll
pop
inc
andl
fs
pop
sub
adc
stc
shlb
pop
dec
test
or
xor
pusha
popa
mov
adc
cmp
push
add
fstpl
mov
xor
and
lock
xchg
lahf
insl
enter
popa
ror
cmp
in
shll
dec
imul
test
or
cmc
in
orl
lea
and
push
or
inc
in
mov
sub
sbb
sub
inc
int
sbb
mov
test
mov
jne
orl
insl
test
jmp
push
insl
jns
and
pop
leave
xorl
cltd
xor
loopew
cmp
pop
push
cmp
movl
fwait
iret
fpatan
add
jle
jge
aas
insb
or
dec
adc
inc
pop
outsb
mov
repnz
push
xor
jbe
mov
jmp
lret
push
xchg
jle
stos
cmp
jecxz,pn
filds
jae
scas
in
ret
loop
add
adc
iret
ja
mov
pop
cmpsl
imul
pop
sbb
daa
scas
sbbl
es
ret
fdivp
aad
das
lea
dec
dec
leave
pop
popf
stc
dec
sub
fldl
push
mov
dec
lock
dec
aaa
les
push
or
adc
aam
scas
test
pop
fs
push
icebp
pop
ds
fisttpll
ja
mov
sarl
rol
mov
data16
dec
mov
pop
jb
push
cmpl
pop
insb
ss
rcrb
sbb
ljmp
pop
adc
inc
iret
push
out
jecxz
adcl
xchg
jno
jbe
inc
sbb
inc
repnz
std
insb
cmp
adc
sti
jle
xchg
hlt
jne
mov
aam
and
inc
mov
jl
sub
mov
sarl
pop
fxtract
push
cwtl
mov
push
adcl
and
test
enter
aad
daa
mov
add
test
notl
lea
add
xorl
xchg
and
and
icebp
sbb
ficoms
jbe
arpl
js
lcall
divb
sbb
insl
je
int
stc
jle
imul
and
fs
jno
popf
xchg
and
mov
insb
xor
sti
mov
lds
bound
stos
pop
adc
cmc
into
rcr
cmp
fs
jbe
dec
push
js
dec
in
stos
mov
mov
dec
push
pop
test
pop
jne
dec
mov
cmp
push
addr16
imul
jecxz
cmp
das
inc
push
sub
filds
aad
or
cmp
pop
insb
testl
lahf
in
out
xor
insb
popf
push
xor
dec
inc
outsb
popf
mov
imull
pop
sub
push
xorb
in
xor
imul
mov
pop
bound
sub
repnz
aas
jb
xor
cmp
xor
ret
push
in
lock
sub
mov
xchg
fdivr
push
imulb
mov
out
loope
aas
pop
imul
stc
xor
jecxz
aas
ss
xlat
outsl
loop
sbb
pop
push
ret
negb
pushf
dec
jne
or
jle
push
push
mov
add
sbb
lods
xchg
jo
xchg
out
sbb
pop
mov
mov
adc
lds
vmptrld
and
aad
push
adc
or
cmp
mov
add
in
mov
bnd
jg
fndisi(8087
xchg
in
sub
sbb
test
pop
push
adcl
mov
ret
mov
push
dec
iret
arpl
bound
sub
cli
and
push
arpl
sbb
xor
ds
arpl
addl
pop
xlat
popf
sbb
xchg
in
rcrl
xchg
or
mov
jb
enter
out
pushw
inc
pop
outsb
sbb
xor
andl
sbb
mov
and
inc
call
pop
lcall
ss
inc
sbb
orl
fdivrl
dec
jbe,pn
push
movsb
jo
outsl
popa
jle
mov
lods
negb
pop
xorl
filds
mov
shlb
fdivrl
or
fisttpll
inc
out
repz
lahf
dec
es
int3
enter
jne
xlat
lahf
mov
aas
add
lahf
arpl
scas
adc
pop
fcompl
xchg
ror
test
sahf
in
xor
cld
in
cmovo
dec
adc
dec
or
pop
jg
jns
mov
and
je
nop
push
mov
mov
ds
addb
cwtl
sbb
dec
fnstcw
ds
pusha
mov
sti
xchg
cmp
pop
sahf
out
sub
mov
inc
repz
mov
xchg
cmp
and
pop
pop
lods
add
sub
ds
jnp
and
arpl
sti
xchg
sbb
jnp
dec
addl
add
popf
clc
mov
es
sbb
add
lock
cld
mov
mov
loop
push
sub
out
mov
lahf
xor
loopne
pop
rcrb
xlat
stos
xor
int3
jecxz
push
imulb
adc
repnz
ljmp
ljmp
movsl
jl
imul
dec
xor
mov
push
xchg
hlt
pop
je
addl
pop
inc
mov
loope
movsb
movsb
dec
push
lods
lcall
xchg
imul
or
sbb
insl
jo
arpl
cs
xor
das
je
repnz
outsl
and
mov
pop
jae
std
xor
idivb
jle
xchg
clc
into
hlt
testb
dec
subl
xchg
sahf
cltd
lock
fsubl
adc
rcll
outsb
xchg
mov
push
lock
stos
fistpll
insl
imul
popf
jle
fdivr
push
cmp
dec
xchg
dec
mov
add
shrl
sub
mov
jmp
out
mov
mov
insb
fwait
aad
cmp
and
inc
cmpsl
movsb
data16
movsb
pop
adc
es
imul
push
sub
into
aad
cwtl
rclb
fdivrs
sbbb
push
les
and
add
insl
cli
mov
lret
out
pop
into
cmpsb
and
ljmp
insl
push
jns
inc
scas
xchg
cwtl
xchg
or
mov
in
mov
pop
add
push
insb
inc
insb
stos
inc
scas
xchg
mov
movb
push
xor
mov
pop
fdiv
xchg
out
fidivrs
pop
add
mov
dec
adc
pop
add
repnz
gs
sub
ds
pop
xor
xchg
jnp
js
xor
cmp
and
outsl
cmc
dec
sub
sub
push
call
jae
cmpsl
loopne
mov
push
dec
jnp
xor
call
pop
cmpl
inc
mov
out
sahf
sbb
pop
add
aas
add
test
dec
adc
js
xor
hlt
dec
jo
jp
mov
in
gs
xchg
xchg
lds
cmp
int3
push
mov
cmpsl
je
lods
jo
call
pop
fisttpll
lods
xchg
cmp
or
in
adc
xor
insb
jle
stos
cmpsb
adc
stc
mov
loope
xchg
adc
add
dec
lahf
dec
insl
xlat
push
sbb
movsl
cltd
icebp
rcr
aad
clc
cmp
push
stos
add
push
mov
jb
aaa
fisttpll
adc
sub
popf
ljmp
aam
mov
xchg
dec
cmp
pop
rcrl
dec
pop
pop
jnp
push
roll
outsb
jl
sti
push
xlat
lds
loopne
loopne
xchg
push
mov
pop
and
pminub
nop
cmpsl
lock
cmp
xchg
test
jne
dec
imul
dec
jae
out
and
dec
stc
dec
lods
xchg
sub
pop
xchg
or
jne
lock
mov
mov
mov
addb
jo
outsl
dec
add
xchg
cmp
icebp
rcll
add
push
jmp
in
inc
cwtl
sub
bound
test
js
lcall
je
inc
sbb
add
mov
push
divl
push
test
mov
sbb
pop
mov
call
jmp
sti
mov
mov
dec
jo
lcall
push
jle
test
lret
fildl
push
pop
lahf
xchg
lret
test
or
int
xor
fwait
movsl
adc
push
ja
mov
pop
in
ret
jno
mov
pop
je
jae
dec
insb
add
sbb
inc
arpl
sub
inc
ret
repz
mov
xchg
jbe
mov
shr
xadd
pop
push
mov
je
and
jl
out
xorw
push
pop
adc
mov
cwtl
imul
or
in
adc
mov
push
jp
add
dec
lods
repz
test
dec
repnz
sbb
add
xor
inc
cmpsb
aas
incb
out
dec
xlat
data16
in
out
lcall
inc
adc
xor
ljmp
cmp
popf
push
sub
jl
sub
mov
fdivl
addr16
dec
add
repz
hlt
fidivl
ds
jb
iret
jl
and
add
lcall
xor
outsb
inc
repz
ds
loop
mov
sbb
and
mov
pop
in
push
lock
xchg
ret
fadds
cmpsl
push
push
mov
cmp
pop
and
and
mov
dec
adc
sbb
sbb
rcl
jle
mov
rclb
cwtl
xchg
or
inc
xchg
cltd
mov
lods
xchg
fcmovne
lds
mov
mov
icebp
mov
imul
fsubs
outsb
stos
adc
decb
notb
scas
mov
and
and
dec
test
dec
or
shll
pop
fmuls
ss
data16
xor
test
push
add
jo
mov
and
mov
fisubl
xor
in
cmp
sbb
inc
in
loop
ret
pushf
jecxz
mov
push
addb
nop
in
into
mov
xor
cmp
fisubrl
in
shl
or
mov
inc
jge
les
xchg
sbb
xchg
int3
mov
call
jbe
push
out
pop
xchg
dec
hlt
js
dec
lods
mov
dec
ret
xchg
test
inc
pop
dec
xchg
dec
mov
xchg
paddsb
dec
sahf
adc
adc
cmpsl
jg
adc
jmp
arpl
xor
dec
js
and
mov
xchg
addr16
add
stos
xor
lods
jbe
jae
lods
rcrl
aas
pop
push
push
fldenv
jmp
rorb
mov
mov
adc
inc
lea
fcmovb
f2xm1
int3
push
or
sbb
sub
sub
scas
sbb
cwtl
das
sub
shl
loope
jmp
pushf
in
pop
mov
inc
xor
adc
sbbb
cli
or
sbb
sub
lahf
pop
cmp
mov
in
pop
hlt
dec
test
int
mov
daa
mov
rcrl
push
or
adc
lods
mov
push
pop
mov
loop
and
jo
sahf
jge
sub
aad
pushf
aas
es
daa
sub
push
inc
insb
bound
dec
imul
dec
test
xchg
nop
hlt
add
filds
adc
mov
inc
mov
fsubp
mov
mov
shll
mull
cltd
lahf
pusha
pop
mov
rorb
push
loopne
cltd
sbb
mov
repz
push
push
jl
sbb
inc
scas
mov
mov
faddl
adc
pop
add
dec
xchg
outsb
daa
dec
and
roll
cli
leave
add
inc
ljmp
cmpsb
cli
jnp
or
lret
mov
lahf
movsl
push
in
in
and
icebp
test
sti
cmpsb
mov
aas
shll
mov
or
adc
or
mov
mov
jmp
repnz
stc
shlb
fdivrl
imul
shr
int3
inc
mov
mov
sbb
repz
xor
pop
shl
push
sub
pop
jp
cmpsb
pop
or
aas
in
leave
sub
push
insb
incb
push
jl
mov
std
cmp
sbb
shrl
push
and
jg
stos
shrl
pop
adc
inc
pop
or
lods
adc
les
loope
ljmp
and
test
andl
add
lods
ljmp
aam
push
inc
arpl
cwtl
lock
aam
cmp
cmp
call
mov
mov
lods
out
adc
movsl
push
adc
mov
or
popf
push
insb
mov
pop
cmp
lea
aaa
lods
jbe
cli
ljmp
xchg
cmp
sbb
mov
cld
lret
sahf
pop
into
outsb
cs
int3
je
nop
es
push
pop
push
mov
mov
andl
push
es
test
aam
add
nop
jo
hlt
xor
aaa
sbb
inc
test
adc
and
mov
icebp
stos
sub
add
mov
clc
adc
mov
inc
push
mov
jno
pop
les
cmp
adc
mov
cmp
mov
outsb
jle
stos
test
loop
or
jb
je
mov
push
aam
xor
push
stos
jp
mov
jp
cmpsb
nop
out
add
xchg
test
mov
cmp
cmp
aad
push
pop
fwait
xchg
push
sub
pop
pusha
xchg
add
dec
push
ss
repnz
lahf
and
mov
jbe
or
arpl
pop
mov
pusha
imul
push
adc
aad
push
pop
lret
scas
outsb
or
mov
out
xchg
or
fwait
lods
mov
dec
lret
lods
cltd
fcompl
out
xor
sub
dec
nop
mov
lock
and
push
js
jo
pop
aam
insl
fstpt
in
divb
cmpsb
fnop
xor
enter
lods
lock
hlt
out
adc
pop
nop
or
and
cmc
add
push
xor
xlat
adc
fs
cld
lret
xor
dec
mov
jmp
and
scas
xlat
aam
lods
pushf
pop
inc
xchg
sbb
cmpsl
cmpl
xorb
decb
cmp
xor
clc
cltd
ret
ret
jno
or
jecxz
iret
push
sub
iret
lret
loop
mov
mov
or
xchg
loop
ss
std
imul
xchg
mov
sbb
enter
xchg
lods
rclb
and
in
ficoml
or
int3
sbb
in
in
iret
mov
add
mov
lret
imul
cmp
pop
cmp
mov
xor
rcll
lret
mov
mov
cmp
int3
pop
filds
call
into
mov
ret
fs
push
clc
xchg
out
sbb
jb
hlt
dec
addl
inc
test
mov
pop
xor
or
push
or
out
ds
pop
push
ljmp
or
cmc
or
es
jnp
jle
xor
outsb
cmp
in
int3
push
pop
je
sbb
xchg
mov
stc
fmul
outsb
out
push
mov
aas
out
mov
inc
cmp
pop
cs
pop
mov
or
sub
and
scas
sti
scas
or
add
mov
lcall
hlt
enter
and
testb
loopne
sub
mov
gs
xor
int3
pop
dec
ljmp
fldt
push
dec
xchg
push
les
dec
push
movl
js
jnp
jmp
add
ret
ljmp
push
les
inc
mov
jmp
or
pop
dec
jo
pushf
dec
mov
adc
fadds
mov
jp
add
sbb
ss
dec
lock
in
push
xor
in
cmc
js
orl
xchg
iret
push
xor
jp
mov
daa
mov
out
jno
mov
xchg
test
mov
iret
mov
push
pushl
xchg
and
push
xchg
pop
inc
js
ficoms
mov
insb
fdivr
cwtl
movsl
leave
adc
jle
stos
fwait
pop
jo
fdivl
dec
int
icebp
xchg
aam
mov
scas
mulb
dec
outsb
inc
pushf
and
outsl
arpl
mov
sub
mov
pop
push
cwtl
pop
adc
cmp
mov
fstpt
sbb
fwait
mov
pushf
fcoml
pop
aam
inc
fildl
adc
push
in
xchg
fwait
iret
mov
or
rcr
stc
adc
daa
aaa
cmp
lods
into
cmp
es
sarb
call
jle
add
or
inc
cld
sub
or
cmp
gs
pop
icebp
rolb
xlat
pushf
or
xlat
inc
push
pop
jno
inc
test
sahf
mov
inc
or
ljmp
jp
lods
bound
jne
jns
pusha
jo
sub
xor
dec
cli
je
mov
cs
or
insl
rcr
adc
inc
adc
sahf
inc
loope
movntq
scas
test
lea
cmp
inc
jbe
inc
fdivrl
pop
cmpsl
jl
sarb
leave
addb
dec
ficompl
xor
mov
fmul
fsubs
loop
int
xchg
mov
jo
or
mov
mov
or
pop
mov
lods
call
mov
push
or
lea
add
push
inc
lods
pop
sub
aas
xor
fwait
cld
cmc
mov
fs
pop
mov
add
or
std
lock
call
into
mov
xlat
push
loope
jnp
ficoms
sbb
or
adc
and
loope
cli
in
add
or
fldenv
mov
jmp
sbb
idiv
jb
pop
lret
mov
hlt
mov
mov
adc
jns
mov
pop
jecxz
outsb
insb
sub
js
movsb
inc
mov
decb
push
mov
pop
jle
xchg
fdivrl
add
scas
lcall
out
jmp
and
xor
out
lds
je
or
in
aam
inc
and
xchg
les
jge
mov
ss
nop
pusha
push
mov
fdivrs
cmp
mov
jge
inc
mov
sbb
leave
mov
shrw
mov
mov
lock
cmp
add
into
xor
pop
mov
sarb
rcrb
out
dec
mov
outsl
xchg
xchg
fwait
pop
cld
or
and
test
das
out
adc
lcall
pop
push
jle
inc
xchg
movsl
js
rolb
adc
cs
jge
mov
cmpsb
adc
idiv
ja
das
mov
arpl
lret
mov
sbb
imul
inc
sub
inc
fld
sbb
lret
xor
shlb
mov
pop
lahf
pop
gs
jns
push
out
mov
pop
test
enter
call
movsb
cmp
int3
lds
cmp
or
or
daa
cwtl
stos
negb
inc
jge
pop
aas
xor
lret
hlt
and
ret
imul
popa
idivb
sbb
push
out
pop
pop
cmpsl
or
lds
test
or
inc
cltd
mov
aas
xchg
dec
out
addl
imul
cmp
mov
mov
cltd
dec
pop
pushf
jnp
test
sbb
mov
mov
cli
sbb
push
cmpsb
xor
js
mov
fmull
jge
push
lret
enter
in
add
loop
icebp
insl
sub
pop
mov
cmp
sub
sub
testb
mov
push
movb
iret
js
test
mov
xorl
ss
scas
clc
es
cmp
xlat
gs
ret
pop
fstpl
push
cmpsb
testb
inc
sub
xor
ds
testl
jae
call
insl
xchg
inc
jne
out
pop
pushf
adc
lock
and
cmp
inc
push
cmp
mov
pop
mov
pop
xchg
sbb
outsb
jecxz
pop
fbstp
inc
xchg
xorb
cltd
lds
adc
push
sahf
aad
ja
xchg
sbb
rcrw
test
fmuls
inc
inc
outsb
int
fsts
pop
xor
xor
fmulp
dec
dec
stc
jne
nop
cmp
dec
fistl
fidivl
xlat
fs
adc
mov
push
pop
inc
cmpb
xor
jmp
add
leave
pop
inc
outsb
inc
and
mov
ss
je
loope
scas
cs
jno
clc
adc
mov
jle
adc
sarl
mov
repnz
dec
and
push
fimull
dec
xchg
cltd
out
xchg
mov
cld
data16
push
jle
sbb
je
add
sbbb
fidivrl
xchg
add
jns
add
test
decb
xchg
xchg
rclb
sub
mov
xor
push
xchg
push
add
jle
cltd
in
xor
cmp
outsb
push
adc
push
pushf
lods
push
mov
pop
loopne
cltd
into
cmp
movsbl
lods
or
or
xchg
add
rcl
jg
add
cli
xor
pop
ss
jne
mov
imul
xchg
test
xchg
dec
jb
add
adc
mov
out
hlt
out
push
es
or
xchg
cli
xor
bound
fwait
mov
pushf
add
and
pop
and
push
leave
insb
xchg
push
test
mov
xor
lods
insb
test
mov
cmp
insl
mov
test
and
popf
pop
enter
test
test
pop
inc
inc
sbb
adc
xor
std
sub
out
pushf
aaa
pushf
mov
xlat
lret
ss
xor
aam
in
sub
dec
push
jno
sti
fcoms
inc
lgdtl
cmp
push
loope
stc
sub
repnz
add
xchg
sub
mov
mov
xor
arpl
sahf
inc
xchg
scas
and
ds
sbbl
daa
filds
or
pop
mov
and
push
adc
push
popa
inc
movsl
lea
xchg
fs
jle
mov
and
sbb
fmul
or
xor
jno
das
push
push
clc
push
jns
fmulp
or
outsb
call
xchg
gs
mov
pop
mov
in
insb
mov
cmp
loope
in
pop
cmp
mov
jno
jns
pop
mov
cltd
mov
add
imul
or
mov
mov
mov
and
sti
ja
xchg
cmpsb
addr16
mov
mov
push
std
repnz
and
mov
pop
push
out
xor
mov
mov
jecxz
js
pop
pop
pushf
es
push
adc
mov
lods
out
int3
mov
jg
or
jl
xchg
add
mov
sbb
int3
inc
mov
imul
dec
cwtl
and
pusha
adcb
sbb
out
push
add
xor
out
mov
dec
cwtl
nop
add
sub
data16
stc
neg
dec
add
lods
xchg
pop
dec
xor
add
mov
bound
enter
icebp
outsb
inc
jb
add
subl
adc
jne
test
int
xor
sbb
sub
bound
push
sbb
xchg
mov
mov
gs
insl
push
mov
push
push
int3
mov
push
into
or
int
jl
out
dec
xorb
fs
push
jne
lcall
or
push
lods
lahf
mov
icebp
out
and
jne
pop
xchg
cmpsl
mov
aad
adc
cs
dec
popf
test
or
add
data16
mov
cmp
jl
mov
fadd
add
mov
fnstsw
xor
jp
ja
mov
cmp
and
addr16
lds
or
xchg
xchg
mov
xor
inc
jg
mov
out
jecxz
sbb
pop
push
fs
mov
cli
frstor
xor
push
pop
pop
movsl
lahf
test
int3
repnz
xchg
popf
in
jmp
pop
dec
cltd
lods
add
rorb
and
test
adc
mov
and
insl
dec
fwait
mov
daa
cmp
push
jl
mov
or
sub
mov
fisubs
add
pop
pushaw
mov
xchg
stc
fcomps
mov
cwtl
ljmp
inc
jnp
xchg
stos
lock
pop
or
pop
pop
dec
mov
xlat
sbb
lea
or
bound
lds
xor
pop
jns
mov
adc
pop
xchg
stos
fmul
adc
lcall
cmp
pop
inc
inc
adcb
xor
pop
test
fisubrs
or
mov
or
adc
stos
mov
sub
cmp
dec
xchg
xchg
mov
adc
jb
insl
fwait
addb
insl
jg
mov
sti
int
adc
lods
add
out
add
gs
mov
and
outsb
dec
gs
out
xor
jp
inc
xchg
mov
ror
enter
push
pop
jo
fwait
stc
ret
aas
sub
push
inc
fs
into
shl
aas
xor
inc
inc
pusha
mov
mov
cmp
js
mov
aad
cli
cmp
mov
mov
clc
in
add
sub
popf
mov
or
push
test
xlat
aam
add
pop
push
outsb
orl
or
push
mov
pop
push
add
arpl
or
ds
dec
popa
pushf
cmpsb
mov
add
jns
mov
int3
cli
sub
push
cmpb
adc
outsl
arpl
int3
das
xor
dec
jbe
mov
adc
ds
pop
push
mov
stc
stc
fistl
xor
xchg
xchg
cwtl
sti
stc
enter
pop
jg
test
sar
loope
invd
jge
outsl
lcall
xor
mov
adc
pop
dec
push
mov
cs
cmp
js
mov
stc
enter
and
cwtl
fucomp
fildll
add
jbe
bound
out
xor
test
daa
adc
jnp
mov
sahf
fucomp
fsubrl
sub
dec
je
xchg
sub
daa
popa
je
mov
in
sbb
scas
lahf
lret
jecxz
sub
movq
cwtl
mov
out
jmp
imul
test
sti
ss
pushf
test
call
sub
imul
cmp
and
jno
mov
sub
dec
jb
mov
cld
add
or
inc
cmpsl
mov
ret
sbb
or
mov
aaa
adc
jg
jbe
test
or
push
push
pushf
mov
push
push
jge
push
mov
and
mov
cmp
out
cmp
mov
mov
and
jnp
mov
sbb
inc
insb
jnp
xchg
test
add
and
inc
xchg
pushf
icebp
int3
lret
and
cmp
addr16
mov
sbb
sbb
dec
popf
xchg
test
cmp
inc
push
mov
xchg
aam
fldenv
and
jle
pop
mov
fcoml
xor
push
jno
cwtl
nop
das
sbb
push
mov
call
pop
movsb
mov
and
addr16
push
or
dec
jl
pushf
stos
mov
lret
or
push
js
stos
lods
lods
out
sub
pop
pop
outsl
adcl
adc
push
orb
or
jle
push
movsb
mov
cs
inc
mov
leave
xor
and
jnp
mov
sbb
sub
push
xchg
mov
ret
out
xor
dec
inc
arpl
fdivrl
xor
insb
pop
mov
leave
cmp
push
addl
popa
mov
loop
pop
add
outsl
mov
mov
clc
lock
and
dec
jge
mov
sar
jmp
adc
ja
mov
repnz
xor
insb
cmpl
jb
mov
and
dec
push
bound
lock
adc
dec
mov
mov
cmp
inc
mov
pop
sub
gs
inc
sbbb
xor
pop
jg
test
sub
add
push
xchg
test
add
jge
mov
push
and
inc
mov
xor
pop
jl
inc
xchg
mov
loopne
call
insb
outsl
xchg
mov
cs
pop
mov
in
and
dec
dec
dec
mov
flds
pop
andl
jl
xchg
test
loopne
sub
jg
cwtl
stos
in
negb
and
dec
cmpsb
xchg
movsb
ret
and
push
ja
jp
mov
fst
cmp
and
pop
fwait
xchg
scas
shl
and
adc
inc
test
adc
jl
gs
stos
test
cmp
addr16
mov
cli
push
and
mov
cmp
or
arpl
scas
jecxz
lds
sbb
mov
call
fs
xchg
sbb
fistpl
sub
gs
dec
mov
lret
and
push
scas
xchg
out
or
and
bound
loope
adc
jnp
gs
mov
cmc
repz
sub
imul
repz
and
scas
mov
aad
add
sbb
pusha
mov
sti
xor
mov
ficoml
adc
insb
dec
inc
mov
loopne
adc
insb
orb
sub
xchg
mov
es
push
dec
lcall
sub
outsl
push
ja
xchg
cmp
dec
stos
mov
adc
dec
xchg
xchg
xchg
ror
call
dec
jp
cmpsb
aam
hlt
adc
push
inc
mov
cmp
jns
jno
or
sub
int3
add
add
or
add
add
adc
outsl
outsb
jae
add
push
jns
je
insl
add
adcl
je
adc
jns
gs
add
push
jns
push
je
insb
jae
or
push
imul
or
dec
gs
popa
addr16
add
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rolb
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
scas
add
add
add
add
xor
cmp
xor
xor
inc
add
add
and
add
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
sub
add
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
xor
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
add
add
sub
add
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
add
add
and
add
add
push
add
outsl
add
add
je
dec
add
insl
add
xor
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
outsl
add
insl
add
outsb
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
inc
xor
