not
shl
lea
and
xor
nop
lea
sbb
add
not
xor
nop
ror
mov
lea
add
not
inc
jne
jmp
lea
mov
neg
nop
mov
xor
neg
nop
lea
rol
xor
mov
xchg
shl
lea
nop
lea
rol
nop
jmp
add
adc
adc
xor
add
xor
nop
not
mov
neg
mov
xor
nop
xor
xor
popa
jmp
not
mov
shr
neg
xor
nop
mov
sub
sbb
sub
neg
nop
not
xor
xor
mov
mov
mov
lea
xor
or
je
jmp
xor
mov
nop
mov
neg
nop
add
xor
lea
ror
lea
movw
cmp
mov
mov
not
movb
jmp
sub
not
sbb
shl
nop
lea
neg
xchg
sub
shr
nop
shr
mov
neg
lea
mov
nop
mov
xor
cmp
nop
mov
mov
xor
mov
xor
nop
jmp
xchg
shr
xor
neg
nop
mov
mov
sub
rol
mov
nop
and
adc
lea
nop
push
call
jmp
add
not
xchg
neg
lea
nop
not
mov
lea
not
neg
nop
lea
push
push
push
push
pushl
call
jmp
sub
mov
not
neg
nop
shr
mov
mov
nop
mov
mov
nop
mov
lea
neg
xor
nop
ror
mov
nop
neg
lea
rcl
nop
ror
mov
lea
mov
nop
push
push
call
jmp
leave
jmp
lea
mov
add
xchg
nop
not
lea
nop
lea
mov
nop
lea
lea
rcl
nop
jmp
or
sbb
lea
mov
call
lea
shr
nop
lea
push
jmp
not
xchg
not
not
nop
xor
xor
neg
xor
nop
lea
rcr
mov
nop
mov
mov
mov
nop
not
mov
nop
cmp
cmp
lea
lea
xchg
mov
jmp
mov
neg
neg
xor
nop
neg
lea
and
xor
nop
lea
push
push
push
pushl
call
jmp
xor
lea
neg
lea
xor
ret
mov
mov
xor
mov
call
xor
mov
xor
adc
movl
rcl
not
sbb
nop
mov
or
lea
not
xor
nop
lea
push
push
push
push
push
call
jmp
shr
xor
nop
xor
xor
rol
mov
lea
xor
rcl
rcl
nop
lea
mov
xchg
xor
nop
neg
xchg
lea
shl
nop
xor
not
nop
jmp
lea
not
xchg
lea
nop
mov
rol
nop
lea
push
push
pushl
push
pushl
call
jmp
mov
lea
rol
adc
nop
lea
not
nop
xor
add
or
movl
xor
xor
movl
mov
rcl
movl
lea
xor
xor
cmp
sbb
movl
mov
xor
mov
mov
xor
nop
jmp
xor
neg
xor
inc
jne
and
neg
dec
not
sbb
neg
xor
xchg
xchg
lea
not
jmp
lea
mov
neg
lea
movl
mov
mov
movl
mov
adc
not
lea
lea
movb
lea
push
jmp
mov
mov
sub
nop
rcr
lea
sub
nop
push
push
push
push
push
push
pushl
call
jmp
lea
xor
xor
nop
not
mov
neg
xor
nop
mov
xchg
xor
nop
call
push
jmp
mov
cmp
xor
nop
not
xor
mov
ror
shr
nop
lea
mov
mov
not
mov
xor
nop
neg
not
nop
lea
push
push
push
push
jmp
push
mov
add
pusha
push
neg
lea
cmp
not
ret
not
neg
neg
movl
jmp
mov
neg
xor
lea
nop
mov
xor
nop
call
shl
mov
or
jne
jmp
lea
mov
xor
neg
nop
not
mov
movl
push
push
call
jmp
fsubl
add
push
and
add
add
lret
add
add
add
and
add
and
add
and
add
and
add
and
add
add
add
push
add
js
add
test
add
nop
and
add
add
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
jl
add
xchg
and
add
add
add
and
add
and
add
and
add
and
add
add
and
add
and
add
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
add
dec
outsl
arpl
gs
jne
arpl
add
add
outsb
inc
jbe
outsb
je
add
add
push
gs
outsl
arpl
gs
outsb
outsw
push
add
add
push
imul
outsl
dec
jne
je
inc
jns
add
add
jb
jne
insb
push
jb
je
arpl
add
add
inc
outsl
insl
insl
inc
outsl
outsb
imul
insb
outsl
addr16
add
add
je
jb
arpl
fs
jae
add
add
inc
js
je
jb
arpl
jae
add
inc
insb
outsl
bound
inc
imul
je
insb
outsb
inc
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
inc
inc
push
inc
push
dec
xor
cs
dec
dec
add
add
inc
jb
jo
dec
popa
jae
inc
popa
je
add
add
jns
je
gs
jbe
dec
gs
add
add
jns
je
gs
jb
jns
gs
add
inc
jb
jo
inc
arpl
imul
gs
inc
add
add
inc
jb
jo
inc
jb
popa
je
dec
popa
jae
add
add
imul
jb
jbe
insb
gs
popa
insb
jne
push
add
add
jns
je
arpl
jo
add
add
inc
gs
imul
imul
je
outsl
jb
je
add
add
je
outsl
imul
outsb
outsw
jb
popa
je
outsl
outsb
add
add
jns
je
imul
inc
add
add
push
gs
jne
jb
dec
jne
je
jo
gs
popa
insb
jne
jae
add
add
jns
je
jne
insb
imul
jns
add
inc
jne
insb
fs
js
insb
imul
gs
push
imul
add
inc
inc
dec
xor
cs
dec
dec
add
add
je
outsl
jb
fs
jb
outsb
jae
outsl
jb
add
add
insb
jns
imul
add
push
gs
gs
inc
outsl
insb
outsl
jb
add
add
je
imul
outsl
jb
add
add
je
arpl
outsb
add
add
inc
gs
imul
add
je
inc
dec
jb
inc
js
add
add
imul
fs
jb
outsb
jae
outsl
jb
les
push
sub
ja
lods
mov
dec
lahf
test
aam
pop
subb
pop
xchg
lods
mov
ss
sbb
mov
jmp
push
and
mov
sub
out
dec
ficomps
add
add
adc
and
mov
lea
jbe
xor
sahf
cmpsl
jle
xchg
subl
movq
shrb
and
scas
cld
cmc
or
xchg
enter
mov
shrb
adc
lods
popf
xchg
outsb
xor
test
out
add
lods
and
movsb
inc
push
mov
mov
jle
nop
fs
stc
cld
jp
mov
or
pop
in
pop
orb
sub
mov
nop
lea
lock
out
mov
and
stos
xor
pop
out
cs
adc
int3
xchg
adc
fwait
sbb
lcallw
out
fisubs
mov
jbe
dec
cld
push
mov
aam
add
lret
vpaddw
lcall
lock
fucomip
shl
loopne
out
push
push
cltd
es
sub
loope
pop
lods
les
push
adc
and
and
mov
cmp
cmpsl
pushf
jne
jo
adc
aam
add
push
jl
and
or
psrlq
push
mov
cmp
bsf
sbb
loopne
outsb
clc
mov
adc
mov
and
jmp
xchg
ret
or
rcr
repz
hlt
testb
repnz
mov
cld
xchg
jo
sub
fisttps
scas
sarl
pushf
xchg
iret
dec
fnstenv
lds
sub
mov
pop
pop
divl
movlps
test
mov
mov
mov
repnz
xchg
xor
leave
aas
xor
fsubrs
cmc
add
out
cmp
sub
sub
lahf
cltd
and
sub
sbb
jle
add
mov
push
mov
lahf
aas
add
add
flds
mov
cld
dec
hlt
dec
movsb
mov
lods
sub
dec
add
clc
mov
fwait
adc
mov
data16
call
mov
inc
mov
lods
dec
xor
fbstp
jmp
clc
dec
lea
into
dec
push
lock
add
push
aaa
adc
out
xor
or
mov
jno
sbb
xchg
iret
ljmp
das
bound
gs
jns
fwait
or
mov
loopne
rclb
or
jle
jmp
pusha
shlb
cmp
sar
int3
int
jns
dec
movsb
mov
push
loop
push
mov
mov
sbb
das
add
mov
aad
cmp
das
jae
jl
es
cli
mov
push
dec
or
inc
enter
das
xchg
xchg
dec
and
outsb
fldt
les
lret
dec
fnstsw
daa
lds
repnz
xchg
inc
push
mov
cli
out
andl
imul
and
sub
push
rolb
push
xlat
fdivl
or
stc
push
dec
cmp
test
shrb
jg
repz
shrl
add
into
pop
xor
add
mov
push
mov
push
or
ss
jmp
incl
xor
stc
stc
cmpsl
sbb
mov
xchg
or
ja
xor
hlt
xchg
sub
pushf
icebp
fidivs
jb
call
out
dec
test
cmp
leave
mov
inc
push
sbb
pop
negb
cmc
mov
inc
int3
xlat
pop
xchg
stc
ret
leave
adc
and
jbe
scas
imul
dec
out
sub
jns
push
add
sbb
sbb
and
jmp
or
sub
ja
pop
jmp
xor
jle
add
sbb
xor
push
cs
cmpsl
xorl
xchg
sub
add
lahf
out
add
dec
enter
test
idivb
dec
jb,pt
push
cmpl
clc
cwtl
jmp
and
lret
mov
and
fmul
lods
dec
fnstsw
cwtl
sub
cs
imul
pop
mov
test
inc
lret
push
ljmp
in
push
fisubrs
dec
cmp
pop
repnz
jge
mov
es
imul
jmp
aaa
flds
js
inc
fidivrs
mov
adc
clc
lock
jb
inc
std
pusha
leave
dec
lods
and
jl
icebp
hlt
nop
loope
out
sbb
adc
mov
lds
dec
popf
or
or
insl
sub
hlt
push
xchg
shrl
xchg
adc
push
bound
xor
fistps
fxtract
je
ret
and
imul
jge
repz
pop
push
mov
ljmp
xor
add
outsb
rcrl
aad
mov
mov
inc
icebp
rcll
push
jmp
in
lock
push
imul
sarb
xlat
out
das
sub
push
sbb
lock
mov
cmp
xchg
inc
stos
in
sbb
dec
rolb
xor
add
or
dec
mov
xlat
sub
cmc
addb
sub
shr
inc
shll
xor
inc
cmp
lahf
test
lahf
push
out
sub
repnz
mov
ret
adc
push
mov
imul
ds
loop
into
mov
sub
pusha
sbb
stos
inc
xchg
or
inc
loop
out
jae
mov
nop
pop
xchg
aad
jbe
lret
mov
not
aam
hlt
cwtl
data16
repz
cli
arpl
inc
fmull
mov
jecxz
cmp
lods
and
cmp
mov
mov
bound
lret
lret
loope
outsl
dec
sbb
repnz
mov
test
mov
pop
ja
clc
sub
pusha
push
test
mov
add
arpl
mov
cltd
mov
cs
gs
shrl
popf
fidivrl
les
sbb
aad
hlt
pop
xor
xchg
hlt
inc
test
loopne
mov
arpl
arpl
mov
jg
les
ret
stos
lret
pop
test
mov
cmpsb
xchg
jne
mov
lret
lods
lods
pushf
enter
sub
mov
and
cli
cltd
mov
xor
pop
lock
orl
pop
pushf
pop
lea
stos
aas
dec
pop
loope
inc
pop
mov
add
shll
icebp
sbb
push
je
xlat
mov
ret
jnp
mov
cmp
aas
out
xor
movb
dec
mov
stos
insb
push
test
dec
xor
clc
test
cwtl
or
out
dec
scas
cmp
test
sub
arpl
adc
aaa
adc
and
das
adc
mov
push
add
lret
xchg
xchg
into
bnd
add
cmp
shll
fucomi
dec
cmpsb
add
jle
rcr
sbb
or
push
das
jno
lock
shlb
arpl
je
in
or
mov
aaa
or
jmp
and
adc
mov
jns
fwait
and
aad
xor
cmp
inc
clc
repnz
lahf
and
into
jbe
mov
add
movl
mov
mov
or
mov
sbb
add
dec
sahf
lods
in
push
daa
cltd
and
mov
push
push
xchg
jb
mov
inc
subl
cli
inc
mov
sbb
and
jle
or
pop
jmp
inc
in
mov
sbb
hlt
pop
lret
inc
dec
cmp
negl
jo
xor
ret
dec
lahf
mov
cmp
mov
into
in
sahf
sti
pop
es
sub
mov
and
shrb
and
insl
mov
int3
sbb
and
push
mov
fisubrs
in
adc
push
or
je
mov
dec
adc
in
xchg
jge
aaa
jmp
jnp
cli
fildl
adc
std
push
stos
and
jge
sbb
imul
pusha
push
in
mov
cmp
cmpsb
xor
loop
mov
push
sub
sub
push
shll
rclb
cmp
lea
pushf
sti
hlt
repnz
jae
ss
add
dec
nop
ja
aas
scas
clc
movsl
xor
or
out
pop
flds
or
jl
push
in
jmp
out
imul
xor
add
xchg
repz
dec
inc
scas
add
dec
sub
in
ljmp
loop
ljmp
cmp
jp
mov
adc
sbb
enter
lret
jmp
pop
je
daa
shlb
sbb
push
out
mov
test
shrb
shlb
inc
push
out
adc
push
sbb
mov
push
inc
arpl
xchg
les
xor
sbb
pop
sub
jnp
cmp
popa
push
mov
adc
adc
gs
popf
adc
push
jne
sub
into
nop
aad
lock
movsb
jle
add
ss
add
lea
cltd
faddl
decb
mov
dec
insl
push
pushw
jns
mov
push
in
jo
sbb
data16
ljmp
popa
adc
out
jecxz
aas
push
inc
xor
jb
imul
clc
inc
insb
mov
cmp
in
add
add
pop
xchg
call
mov
xlat
std
and
pop
call
hlt
add
dec
es
shll
outsb
xchg
sbb
dec
mov
sub
mov
push
cmpsl
stos
mov
hlt
add
and
mov
js
das
test
pop
fimull
inc
mov
push
mov
pop
js,pn
add
sbb
sub
test
push
sahf
mov
fstl
dec
fidivs
in
xchg
dec
push
sets
cli
pop
daa
cmp
fiaddl
push
adc
pop
ljmp
cmp
test
and
mov
testl
cmpsl
sub
addr16
outsl
out
and
jecxz
pop
pop
xor
push
movsl
mov
stos
adc
sahf
mov
fisttpll
sbb
cmp
jp
sub
in
sub
lret
ret
movl
sarb
inc
adc
mov
jmp
cmp
push
push
lret
std
stos
sub
cld
test
test
xorl
cmp
fsubr
ss
dec
sub
mov
cmp
movsl
fs
jp
stc
mov
pop
mov
cmpsl
aas
xor
sub
ja
jo
sub
imul
and
add
js
push
stos
mov
cli
pop
imul
add
dec
pop
nop
jmp
or
fbld
cltd
daa
enter
aam
jp
or
dec
pop
and
pop
loop
daa
and
xor
xor
mov
mov
mov
xchg
mov
call
insb
sub
cmpsl
scas
dec
inc
push
mov
test
out
dec
fwait
pop
cmc
sti
dec
ss
jl
push
fcomp
push
and
jbe
sub
add
add
clc
sub
jl
cmpsl
pop
stc
dec
push
inc
jl
shlb
pop
sub
inc
jns
testl
mov
jmp
mov
pusha
scas
stos
adc
adc
push
into
outsl
pop
int
add
inc
jl
cs
mov
or
mov
int
cmpl
jae
push
sub
popf
inc
test
stc
mov
and
icebp
aaa
mov
add
pusha
push
mov
push
sub
gs
data16
gs
or
negb
das
cmp
xor
jge
scas
ljmp
xlat
leave
fnsave
xchg
add
add
inc
mov
lahf
jmp
add
jae
dec
push
inc
mov
sti
iret
jo
aad
std
pusha
aad
mov
lods
pusha
mov
js
cwtl
mov
and
imul
xor
mov
jno
and
dec
cltd
call
cmpsb
sub
inc
lods
shlb
sbb
or
insl
lret
push
mov
ss
leave
imul
in
outsb
cmpsb
xlat
in
jp
sbb
les
cmpsl
nop
xor
or
jo
mov
jne
dec
inc
and
sub
sahf
xlat
out
jecxz
scas
inc
or
push
sti
int
xchg
jl
negb
xchg
aas
aas
add
or
push
mov
add
mov
dec
inc
push
dec
pop
cmpsl
std
mov
inc
pop
push
stos
add
sub
sub
cmp
lock
push
std
and
pop
push
pushf
jae
insb
js
pop
sub
or
inc
mov
imul
adc
in
popf
jns
cwtl
inc
inc
xchg
stos
mov
out
push
push
jne
push
fcomp
lahf
mov
jae
rorb
ficomps
orl
fidivs
jno
mov
rolb
out
and
adc
adc
clc
xchg
in
fcmovnu
gs
adc
ffree
dec
movsl
pusha
ss
xor
out
setle
sub
cmpb
into
inc
xor
icebp
ds
mov
mov
lds
jl
mov
cmpsl
adc
xchg
mov
mov
and
pop
or
rorb
and
pop
cmp
pop
test
push
mov
or
push
mov
sbb
imul
mov
les
cmp
xor
fwait
rcll
sahf
dec
xchg
mov
mov
aad
push
loope
icebp
xchg
mov
inc
add
push
lods
test
aam
pop
inc
cmpsb
mov
daa
xchg
fistpl
jne
sbb
lock
xlat
test
mov
xor
icebp
xorb
ja
jne
fwait
inc
xor
sbb
xor
sti
mov
jg
xor
add
add
mov
lods
sbb
leave
fdivs
stos
jae
loopne
push
pop
hlt
mov
jne
cld
daa
mov
inc
push
mov
dec
adc
cs
adc
pop
mov
gs
cmp
push
loopne
je
jne
ljmp
xchg
fcomps
pop
xchg
add
bt
push
in
add
sbb
jecxz
jae
sbb
enter
ret
pop
xor
in
dec
jbe
xchg
les
in
fs
mov
jp
lods
xor
pop
adc
pop
or
les
ss
aaa
pushf
loop
add
ucomiss
mov
fsts
pop
scas
xchg
and
shrb
mov
or
or
sbb
std
and
repnz
sub
sbb
subb
dec
mov
icebp
out
push
mov
je
dec
stc
jle
sub
xchg
gs
mov
dec
pop
lret
ds
jno
sahf
lret
xchg
movsl
icebp
cmp
gs
stos
fstpl
push
out
add
push
cmp
pop
push
iret
fmull
mov
jne
mov
jg
push
mov
push
insb
dec
push
push
cmp
mov
sub
jmp
push
fidivl
jb
xchg
mov
sbb
scas
adcb
rcrb
inc
pop
lret
sahf
or
repz
ss
scas
gs
es
lcall
jbe
pushf
mov
xor
cwtl
rcrl
fstps
sub
ret
dec
or
daa
loop
sbb
stos
sub
outsb
sub
mov
dec
sub
cltd
fs
dec
rcrb
or
sbb
pop
sbb
add
cmp
and
adc
xchg
cs
mov
cmc
or
sbb
add
inc
add
push
subb
std
imul
push
cmp
pop
and
adc
hlt
xchg
jno
inc
mov
aaa
imul
jmp
xor
mov
mov
jns
rol
and
int3
jmp
loope
lea
leave
xlat
les
ljmp
fidivl
mov
shlb
lret
add
push
adc
push
cmp
mov
mov
addr16
mov
dec
xchg
mov
subl
xor
jns
stos
movsl
push
and
sti
cli
or
jecxz
repnz
dec
iret
push
push
mov
cld
sbb
sbb
ret
push
xchg
lock
into
add
clc
clc
push
aam
add
xchg
jno
jecxz
inc
mov
fists
xor
or
xchg
sub
cmp
mov
int
jp
mov
jne
out
sahf
push
cs
repnz
pop
popa
stc
addl
mov
sub
les
and
cltd
stc
pusha
or
jnp
mov
insb
push
fstps
test
hlt
lret
pop
sbb
inc
pop
icebp
and
lahf
stc
sarl
loope
xchg
mov
out
or
mov
jle
inc
pop
shl
and
mov
ljmp
in
loope
stos
dec
mov
mov
pop
mov
xlat
jnp
call
cltd
daa
xor
std
ret
cwtl
fstp
cmc
int
in
xor
sahf
enter
daa
jbe
or
adc
adc
aas
sti
jae
das
shrb
ret
xchg
push
movsb
data16
bound
sbb
movsb
jg
cmpsb
arpl
lock
push
and
and
arpl
and
dec
xchg
bound
jge
mov
jne
cmp
or
int3
add
cmpsb
lds
adc
push
fdivrs
xorb
sbb
fldcw
jns
std
aas
test
xor
or
stos
xorb
push
fs
cmc
lcall
mov
ja
aad
je
hlt
lea
push
xor
cmp
sbbl
popa
popf
jo
jle
push
movsb
jne
cmp
ja
push
paddw
cwtl
orl
les
or
mov
std
push
cmpsb
sub
nop
stos
xor
jae
cltd
mov
es
sub
hlt
in
and
sbb
push
inc
mov
in
fmull
pop
idivb
push
xchg
stos
push
cmp
in
mov
enter
mov
fs
popa
inc
call
movsl
add
mov
sbb
insb
outsb
cmp
inc
jbe
cmp
push
clc
jo
int
fisttpl
cs
adc
test
jmp
idivb
mov
rol
lahf
ret
test
scas
testb
imul
mov
jle
pop
inc
pusha
imul
dec
outsb
pop
sahf
jmp
push
push
lods
aas
inc
pop
cmp
cmpsl
mov
iret
lret
mov
sbb
aam
xor
sub
sbb
and
int3
pop
mov
addr16
faddl
rcll
lahf
pop
out
xchg
lret
xchg
gs
lret
aas
cltd
adc
sbb
sti
add
sahf
fidivs
je
stos
cmc
jbe
nop
adc
pop
cmp
adc
ret
xor
jg
in
das
push
and
inc
call
lods
inc
xor
mov
ja
jae
xchg
sbb
mov
enter
ljmp
andl
push
fucomi
enter
and
hlt
add
cmp
inc
mov
ds
addb
shrb
mov
add
jnp
lods
gs
jne
push
cmp
ds
dec
mov
je
or
cmc
jnp
imul
fdivrs
icebp
pop
lret
loopne
mov
sub
pop
mov
push
sub
test
data16
cmp
std
das
fstpt
mov
scas
add
dec
xorb
pop
sbb
or
mov
adc
mov
cwtl
rdmsr
out
xchg
push
adc
insb
mov
lret
aad
popa
or
jle
call
mov
pusha
fxtract
sub
out
sub
adc
out
and
lea
jno
popf
inc
cmp
lcall
out
daa
rcrb
add
push
sbbl
push
cmp
ja
cld
imul
loop
sub
mov
xchg
jns
rclb
adc
rcrb
cld
mov
clc
out
push
movsl
push
mov
and
test
mov
adc
cmp
sub
loope,pt
inc
test
mov
fadd
push
lock
lods
jecxz
test
aam
sbb
out
ficoml
lods
pop
fnstenv
xchg
inc
outsl
dec
cwtl
push
jno
push
adc
or
cs
sbb
sarb
cmp
sarb
fldcw
test
adc
fidivl
or
cld
dec
mov
out
testl
xchg
push
pusha
lods
daa
test
push
int
jle
mov
mov
inc
or
xchg
lcall
inc
fidivrl
cld
mov
sbb
out
outsb
sbb
sub
in
push
int3
repnz
adc
push
adc
mov
into
sbb
fisttps
pop
inc
pop
idivb
dec
in
addb
std
or
mov
arpl
out
jbe
test
xchg
xchg
fwait
push
cld
cli
imul
xchg
stos
mov
sbb
repz
mov
repz
jmp
std
pop
test
bound
iret
ror
jns
mov
lods
pop
aas
ret
lcall
popf
lods
lret
enter
cmp
pop
loopne
stos
mov
nop
jne
xchg
inc
out
orb
shll
xor
stc
test
divb
pushf
dec
push
xor
ret
test
loopne
pop
sub
sti
sbb
outsl
add
xchg
test
sub
pop
lods
inc
xchg
add
mov
jge
out
stc
xor
arpl
pop
les
add
lds
jb
inc
mov
fistpll
daa
aas
inc
or
or
push
jno
outsl
cmc
xorl
scas
add
mov
xchg
lret
mov
push
call
push
push
dec
js
jae
jle
sbb
lret
cmp
rcrb
mov
pop
lahf
ror
add
push
orl
push
dec
lret
pop
sar
leave
fwait
xchg
iret
pop
lret
mov
sbbb
or
mov
mov
xchg
cmp
jl
xchg
push
outsl
je
out
or
dec
pushf
push
and
jno
add
out
jecxz
lods
xchg
ds
outsb
push
sub
in
pop
adc
xlat
push
jg
adc
rcl
and
addl
sub
xchg
movsb
sti
and
sahf
mov
sub
mov
or
sbb
mov
jb
mov
pop
filds
pop
sbb
push
add
leave
fsts
popl
shl
fwait
pop
repz
pusha
outsb
xchg
mov
pop
out
cwtl
ss
lds
xchg
lock
movb
mov
mov
adc
jecxz
int
mov
and
outsb
lahf
fdivl
inc
xor
hlt
mov
jnp
out
sahf
add
lods
xor
pop
inc
out
test
lret
cwtl
pushf
jno
jg
cltd
test
jmp
faddl
hlt
call
add
sar
mov
gs
xchg
mov
fmull
shll
push
das
and
sbb
pop
inc
jnp
cmp
movsb
mov
jmp
xchg
in
stos
jne
dec
out
mov
inc
loopne
pop
xchg
xor
in
pop
sub
ljmp
sbb
jne
std
dec
adc
cmp
leave
add
xor
push
or
lea
jg
add
mov
aas
loope
in
idiv
sbb
adc
xchg
sub
subb
lds
mov
int
repnz
leave
cmp
push
es
sub
lods
in
scas
xor
push
lods
pop
push
mov
lods
roll
gs
dec
and
test
push
aaa
dec
pop
xchg
and
xchg
jbe
cwtl
mov
pop
lods
repz
cs
sbb
xchg
jg
push
mov
rolb
cli
sti
repnz
push
pop
out
and
cmp
mov
call
shll
out
hlt
xchg
mov
js
and
into
xchg
leave
mov
roll
ds
push
pop
lea
xchg
rol
sahf
mov
in
test
data16
inc
add
cmp
clc
inc
shll
sub
jno
cmpsb
and
xor
popa
fildll
arpl
jo
insl
and
mov
lds
inc
mov
or
std
cmpsl
ror
jae
hlt
negb
lret
inc
pop
xchg
mov
test
cltd
fwait
bound
cmpsb
addr16
test
aam
mov
mov
in
fcompl
loopne
mov
aam
xchg
xchg
mov
in
mov
mov
adc
arpl
add
and
repnz
mov
cwtl
push
dec
mov
jnp
cmp
ljmp
imul
or
lret
test
jns
leave
int3
test
out
out
out
subl
xchg
sub
fwait
adc
cmp
test
jge
sbb
ja
mov
xor
jnp
cmpsl
or
pop
lcall
push
dec
cmp
mov
push
or
in
mov
mov
xchg
mov
rolb
jae
lods
cltd
nop
loopne
pushf
sbb
call
xchg
lods
or
jmp
push
push
fs
inc
pop
loop
scas
scas
pusha
leave
xor
mov
ficoml
in
cmp
jmp
cmp
into
xchg
push
pop
jne
cmc
dec
test
jbe
sbb
shrl
popf
out
xchg
flds
cld
aad
je
mov
add
stos
adc
notb
pop
adc
jl
pop
cwtl
out
xchg
xor
fsubr
xchg
push
cmp
xor
jl
fsubl
mov
rol
mov
shlb
dec
xchg
hlt
or
sub
push
movsl
or
adc
enter
shrd
and
mov
jne
push
ret
mov
in
pop
xchg
arpl
lods
stc
xchg
mov
movsl
loop
push
xor
push
dec
int3
ret
push
js
cmpsl
mov
pop
sub
push
daa
sub
idivl
cld
mov
sarb
dec
aam
push
idivb
in
into
ds
inc
jbe
cmp
loopne
leave
outsl
sub
pop
dec
and
enter
insb
and
aaa
or
or
aas
push
arpl
inc
adc
fisttpll
aad
mov
xchg
out
test
sub
fbld
pop
mov
fcmovne
push
stos
nop
or
jb
mov
inc
mov
xchg
pop
div
jecxz
repz
or
int
in
fsubrl
stos
pop
push
sbb
sarb
and
adc
in
mov
fstl
cmp
jns
mov
xchg
mov
pop
push
xchg
insl
push
insl
dec
loope
adc
pop
mov
repz
sbb
stc
fwait
imul
shll
loopne
ds
and
in
inc
in
or
in
std
push
hlt
lret
pop
cmp
fcomp
xchg
mov
pmulhuw
xlat
fwait
das
jecxz
dec
fnsave
mov
sarb
std
out
repz
jb
lods
aam
mov
add
lret
ret
cmp
jg
loop
testb
call
jmp
xlat
adc
mov
or
fwait
xchg
mov
sub
out
mov
sub
dec
mov
push
inc
pop
mov
sbb
jl
xchg
pop
test
jmp
pop
out
popa
sub
or
arpl
adc
pop
dec
sbb
push
arpl
jg
test
fcoml
outsb
xchg
jge
inc
xor
cmpl
mov
sarb
or
sbbb
outsb
cmp
loop
cmp
and
push
or
push
jg
scas
jno
loopne
fistl
mov
jg
icebp
repz
pushaw
xchg
daa
lods
into
cmp
cmp
popa
pop
loopne
xor
mov
push
jmp
rcrb
andb
pop
pop
addb
loope
sbbb
or
sbb
pop
test
push
pop
lret
mov
push
fdivs
fdiv
adc
xor
jb
je
daa
sbb
cltd
xor
les
and
cmp
imul
pop
and
mov
rol
sub
in
dec
sub
pop
mov
outsl
jmp
mov
ss
pop
loope
div
mov
adc
inc
mov
mov
fcmovnbe
mov
fwait
push
aas
mov
inc
sbb
mov
xorl
jb
mov
int3
dec
adc
test
pop
push
ja
iret
scas
repnz
enter
imul
add
mov
dec
xchg
aas
arpl
test
mov
push
mov
aaa
sub
xchg
fnstenv
dec
inc
cltd
ret
pop
mov
mov
jmp
cmp
stos
and
ja
andb
cmp
mov
sbb
xor
mov
in
insb
mov
mov
stos
mov
je
mov
js
cmpsb
or
cmc
cmpsl
jecxz
adc
and
jo
out
subl
xchg
cwtl
sbb
add
bound
lods
cmc
push
sub
add
or
fidivl
xchg
mov
filds
inc
push
sti
cld
push
ficoml
jle
add
xor
ss
call
mov
inc
add
sub
insl
sahf
cli
and
jnp
decl
mov
sarl
pop
lock
jo
hlt
mov
data16
mov
int
clc
test
mov
and
sub
push
dec
or
lcall
test
cs
rol
xor
shrl
je
fmulp
mov
dec
aaa
pop
int3
gs
imul
or
and
or
sahf
and
push
ja
out
shl
or
or
push
cs
movsl
jae
aaa
or
sarb
enter
lret
adc
add
iret
cmpb
add
dec
fwait
xchg
cmp
rolb
aad
mov
xlat
int
xor
shll
inc
ret
xchg
jl
stos
fcmovnb
jbe
test
push
mov
xchg
das
dec
roll
lahf
mov
push
dec
xor
pusha
bound
cmp
js
rorl
aad
jbe
movsl
roll
jmp
pop
and
in
cmp
stc
xor
cli
dec
repnz
les
les
aaa
add
xchg
xor
dec
or
outsl
push
scas
popf
lods
add
inc
ljmp
xchg
adc
jg
cmp
cmp
mov
lods
and
aaa
mov
mov
in
push
dec
dec
mov
cltd
icebp
rorl
test
jne
push
aad
adc
in
aam
loop
mov
aam
insl
js
adc
or
mov
pop
mov
pop
xor
adc
pusha
cmp
push
fnstsw
ret
or
inc
mov
ds
shll
imul
xchg
sbb
jmp
loopne
xchg
in
mov
ss
jns
repnz
sub
and
loope
and
jns
sub
dec
repz
shrb
mov
scas
dec
js
add
fistps
mov
inc
mov
bound
ret
xlat
fimuls
sarl
or
cmpsb
sti
rcrl
jne
psubq
call
inc
sub
cmp
ds
pop
in
subl
mov
aam
mov
mov
xor
sbb
in
sarb
cli
outsl
and
imul
std
ss
outsl
mov
or
loopne
movsl
mov
adc
jmp
inc
mov
pop
mov
das
sbb
in
cmp
mov
inc
cmp
mov
loop
and
lea
cmpsb
sub
xor
shlb
sbb
lahf
aas
sub
adc
jp
mov
std
push
les
andl
sub
push
pop
push
shll
jnp
iret
popf
cmp
orb
sbb
call
cs
das
inc
lea
mov
inc
repz
jmp
dec
xor
mov
movsb
adc
roll
pop
cwtl
leave
fnstsw
mov
icebp
push
inc
xor
lods
jle
subb
push
pushf
push
pop
add
std
inc
lret
pusha
in
int
es
jl
mov
ljmp
stos
sahf
or
lods
test
jns
pop
add
or
mov
jb
adc
fiadds
scas
inc
sbb
stc
pop
mov
mov
sti
mov
sti
xchg
and
stos
pop
xor
inc
mov
push
xchg
ror
cmp
testb
call
pcmpeqb
or
mov
push
dec
in
mov
movsl
jne
addr16
rcll
add
lea
stos
pop
test
fs
jge
jecxz
xchg
add
and
stos
dec
xchg
sbb
pop
lcall
ljmp
cmp
jp
push
aaa
ret
sbb
push
mov
je
in
iret
popf
pop
cs
dec
int3
dec
ret
fistl
xorb
movsl
jl
push
lahf
and
rolb
inc
pop
int3
adc
movsb
jne
adc
cmp
jae
insb
inc
and
or
sbb
movb
push
push
leave
push
xor
xchg
mov
push
pop
inc
fwait
lock
scas
mov
insl
mov
add
jecxz
lods
scas
and
movsb
jle
lea
cli
ror
in
fstps
adcb
rcrl
or
outsb
mov
lock
or
and
xor
sub
sub
test
pop
orb
pop
leave
aas
xchg
sbb
add
out
pop
lahf
dec
into
loopne
inc
mov
mov
jne
mov
lret
xchg
lods
xor
dec
lea
cmpsb
xchg
insb
push
mov
or
add
xchg
test
jecxz
stos
add
adc
push
pop
inc
lret
in
js
dec
push
xor
call
ss
popf
dec
nop
outsl
cmc
dec
pushf
or
xchg
sbb
addr16
add
sub
sahf
push
push
add
fucomip
aam
arpl
fistpll
sub
adc
rclb
dec
ss
lret
ja
mov
outsl
sub
dec
and
cmp
data16
push
or
cmp
adc
mov
push
push
loope
loope
mov
dec
push
cli
fsubrl
adc
push
pop
cltd
ss
enter
ds
jle
cmp
jge
testl
pop
lcall
push
or
and
fcmovnb
fstl
jno
lret
out
sub
pop
sbb
and
jne
movsb
pop
rcr
sub
cmpsl
mov
jle
fidivrl
jno
scas
lcall
lcall
mov
inc
cwtl
pop
icebp
jnp
and
sub
loop
jae
push
popa
pop
push
push
movsb
test
fidivl
out
fs
inc
test
pop
call
mov
add
dec
pop
es
mov
ss
addr16
aad
ss
rclb
fcoml
scas
inc
in
mov
shl
imul
mov
and
fdivs
lods
aaa
stos
fsub
mov
mov
cmpb
daa
xchg
mov
add
aas
mov
arpl
sti
push
shll
xchg
inc
dec
and
adc
pop
inc
movq
aad
scas
aam
xlat
sbb
aad
mov
test
lret
mov
stc
sahf
es
cld
and
cli
pop
sti
adcl
sbb
lret
cmp
shrb
sti
stc
mov
pop
ss
push
call
out
cli
push
into
sbb
xchg
clc
dec
cs
int
leave
xchg
out
mov
lds
aaa
pop
popa
sub
repnz
push
cmp
fcoml
xor
inc
mov
imul
sub
mov
xchg
sti
cmp
int3
mov
mov
adc
push
mov
pusha
aam
mov
scas
in
push
push
cmpsl
bound
inc
mov
popf
nop
jnp
sbb
in
xor
idivl
fmull
mov
cwtl
pop
mov
in
nop
or
inc
and
xchg
je
or
mov
cltd
fwait
sub
inc
add
jp
add
arpl
test
in
in
inc
inc
fnstenv
ret
sarl
scas
cld
lcall
add
jp
hlt
pop
xlat
mov
jecxz
mov
xor
mov
movsb
insl
movsb
lahf
jge
sub
inc
sbb
stc
xorps
sub
sbb
std
push
shrb
jne
mov
jae
mov
and
cmp
cli
and
xchg
inc
mov
pop
outsl
sub
jecxz
jle
jmp
dec
sub
nop
and
lcall
pop
pop
out
mov
mov
cld
aam
xlat
dec
jmp
movsl
cs
xchg
ret
jle
jno
sub
pop
mov
jne
mov
sub
jnp
jno
adc
ljmp
enter
pop
inc
addl
xor
and
jp
loope
xor
mov
or
cvtpi2ps
xchg
insb
lea
call
mov
out
sbb
repz
sbb
movsb
sahf
push
pop
lea
pop
aam
stc
ss
fadds
push
fisubrs
pop
mov
or
xchg
mov
sti
jne
mov
cmp
dec
pop
mov
hlt
fstpt
jno
jne
cltd
mov
mov
mov
fldenv
add
jne
pop
popa
outsl
and
insb
push
in
cmp
jae
sahf
dec
inc
dec
mov
mov
or
xchg
sub
sub
frstor
mov
scas
add
or
lods
js
dec
iret
jg
jecxz
rcrb
roll
mul
int
loope
xchg
ja
imul
inc
ror
pop
cltd
dec
dec
push
jnp
jb
rcll
cmpsb
dec
pop
and
jbe
popf
sbb
xor
mov
aaa
push
outsb
mov
jg
loop
clc
bound
lods
in
das
cli
mov
ljmp
mov
pop
pop
imul
adc
jb
fdivrl
sbb
jnp
cmp
repz
xor
cmp
pop
fdivs
icebp
int3
sti
mov
mov
sbb
adc
ds
and
fs
lods
mov
in
insb
dec
int3
jnp
jbe
sbb
lea
push
aam
jge
dec
mov
imul
popa
dec
jp
or
mov
inc
push
ret
or
cmpsb
push
lret
sub
add
sar
push
imul
icebp
test
inc
les
imul
int3
lods
add
sub
sbb
or
push
dec
aad
xchg
idivl
push
or
mov
push
xchg
sbb
shl
fwait
scas
aad
hlt
rcrb
je
stos
cmp
cltd
pop
movsb
adc
dec
lods
nop
rorb
lret
xor
xor
jmp
rclb
or
orl
or
xchg
call
add
add
aaa
mov
pop
mov
lea
xor
jne
cmp
mov
addr16
pop
imul
int
aaa
mov
add
push
icebp
dec
push
movsl
lahf
pop
pop
pop
js
push
sub
addr16
rcr
into
flds
jbe
xor
iret
test
sbb
in
jbe
jne
setae
stos
xchg
or
das
out
popf
pushf
cli
icebp
mov
stos
mov
fldcw
cmp
push
mov
dec
sti
stc
sbb
jl
lock
shrl
xchg
xor
out
cmp
mov
xor
sbb
lahf
dec
pop
lods
adc
cmp
mov
jg
push
dec
sbbl
stc
mov
mov
mov
call
push
xchg
in
jge
mov
jl
jne
sub
divl
les
push
or
bound
aaa
adc
adc
mov
xor
dec
repnz
dec
scas
xlat
test
jb
jg
add
cmp
loop
jl
jns
push
cmpsb
data16
rol
imul
sbb
xor
jmp
inc
add
shl
loope
cmp
out
out
adc
adc
dec
loope
mov
mov
insl
jo
sbb
mov
push
pop
xor
int
sbb
push
test
fisttpll
lret
dec
inc
clc
test
mov
pop
pop
enter
lcall
negb
mov
aaa
jle
jp
js
jge
fs
outsb
outsb
sub
arpl
clc
insl
lahf
movntps
xor
mov
inc
and
mov
push
adcl
mov
sbb
shr
mov
xor
nop
lods
lret
fmull
outsl
sbb
cmpsb
jge
ret
fwait
xchg
pop
fdivrl
jle
add
lahf
mov
cld
repz
inc
inc
mov
subl
ljmp
movsl
dec
xchg
push
mov
lea
sbb
and
jle
sub
adcl
inc
inc
sub
cmpsb
dec
jl
icebp
ret
sub
sub
pop
repnz
subb
test
cmp
add
xor
jns
sub
testb
adc
std
stc
in
mov
pop
sbb
std
inc
decl
in
mulb
adc
imul
xchg
inc
jp
mov
out
xchg
lret
popa
nop
daa
pop
scas
inc
cmpsb
ljmp
and
push
mov
in
adc
cmpl
and
bnd
test
sbb
mov
into
mov
and
sarl
cmp
repz
sti
ja
xchg
cmp
jbe
leave
mov
test
jne
cltd
leave
popa
outsb
pop
jnp
ja
xchg
insl
sbb
dec
ja
enter
mov
cwtl
inc
insb
pop
outsb
pop
jnp
jbe
add
dec
loopne
xchg
xchg
cmp
cmc
mov
xorb
mov
jmp
test
push
cmpsl
or
clc
adc
movsl
dec
mov
adc
pop
lcall
and
fists
adc
inc
or
jg
pop
pusha
xchg
push
add
inc
mov
es
mov
sbbb
cmp
mov
movl
jo
sahf
sub
imul
and
jo
pop
mov
and
lret
fsubl
mov
jp
flds
or
or
xor
pop
ds
outsl
rol
sub
jmp
sub
fwait
ds
not
stos
shr
or
out
sbb
cmp
std
popf
or
repz
dec
loope
xorl
add
mov
jmp
push
xor
xchg
inc
adc
iret
adc
cwtl
adc
roll
xlat
jns
loop
push
out
scas
call
sub
lahf
jp
insl
adc
xor
movb
test
ss
jne
addl
stc
inc
sub
mov
test
pushf
push
lret
cmpps
mov
cltd
lahf
cmp
imul
int3
mov
popa
insb
and
pcmpeqb
pmaxsw
loop
ret
sti
sub
scas
push
ja
jmp
rcll
daa
mov
and
outsl
test
fcomps
inc
in
test
cwtl
aaa
stc
inc
xor
jmp
lahf
vmread
inc
ficoms
aad
insb
jbe
and
inc
lret
sbb
mov
outsl
ljmp
adc
repnz
in
dec
mov
sub
test
adc
ds
sti
aad
inc
jae
rclb
les
and
and
jnp
outsl
jb
adc
out
cmp
fwait
jno
jbe
cltd
pop
inc
or
and
jo
inc
dec
push
sub
call
int3
xor
xchg
lcall
xchg
xchg
into
mov
and
jg
pushf
mov
sub
and
imulb
mov
mov
sbb
repnz
data16
shl
inc
sub
shll
mov
cmp
push
or
mov
jns
fs
sbb
loopne
jns
push
in
mov
js
pushf
nop
rcrl
nop
addr16
lods
lcall
push
push
mov
sub
imul
sbb
xchg
mov
xorl
sbb
leave
pop
mov
mov
dec
cmp
adc
xor
movsb
jbe
es
jl
sub
into
sub
inc
pop
in
xor
push
mov
test
aad
repz
xor
ss
push
adc
mov
mov
cmpsb
mov
sub
mov
pop
icebp
inc
pushf
cmp
lock
shll
lock
cmpsb
fs
outsb
mov
bound
arpl
das
test
cltd
mov
movsl
enter
popa
push
pop
cmc
into
pushf
adc
mov
mov
add
xor
push
std
dec
test
jmp
cld
sbb
repz
cmpsl
push
dec
das
fmull
jl
jne
call
pop
out
cmpl
inc
subb
bound
xor
or
adc
paddusw
insb
dec
call
jne
out
pop
or
and
in
sbb
jno
jp
fists
rcll
stos
push
add
push
jp
jp
pop
lret
push
pop
sbb
jae
sub
lods
mov
cmp
xchg
xchg
aad
in
dec
fwait
adc
push
and
testb
pop
setl
mov
mov
push
push
fnsave
mov
repz
mov
scas
or
mov
call
ret
push
loope
xlat
test
aad
xchg
mov
inc
jmp
rcrb
jg
fwait
jg
stc
push
inc
xorl
shr
cmp
insb
push
xchg
mov
and
rcl
dec
pop
cmp
lcall
hlt
cmp
xchg
and
jle
ljmp
call
mov
movsb
push
out
aas
repnz
mov
lock
ja
xchg
rcrb
sti
push
or
mov
add
inc
xor
sbb
fs
lahf
nop
push
jne
sbb
rorb
xchg
sub
and
inc
xor
add
scas
out
cmp
xchg
dec
mov
div
shlb
jb
dec
ret
cs
mov
outsb
push
or
dec
xor
fisttpl
xor
pop
or
lcall
sub
dec
and
out
imul
or
mov
stc
xchg
mov
iret
pushf
add
xlat
imul
jns
rcrb
hlt
loop
xchg
adc
sub
jb
mov
xor
pusha
xchg
roll
cltd
jge
cmp
aad
aad
add
jg
xchg
jecxz
outsb
mov
lock
lret
int
pop
mov
in
int3
push
movsl
pop
adc
add
lret
jle
testl
loope
lret
repz
adc
scas
outsb
push
and
dec
dec
mov
jp
dec
aas
cmp
add
test
cwtl
pop
push
es
out
fidivl
mov
fdivrl
mov
repnz
rolb
aaa
mov
shrb
xchg
pop
stc
add
pop
mov
mov
fisttpll
jne
jo
repnz
iret
xor
or
mov
jno
adc
mov
iret
jp
pop
cmp
aad
lahf
xchg
sbb
adc
inc
xor
stos
sha256msg2
hlt
cmpsl
push
lods
outsb
je
or
hlt
sub
push
pop
insl
idivb
mov
fs
jb
aad
test
or
push
xchg
mov
call
pusha
inc
adc
cwtl
sbb
iret
ret
stc
pop
mov
insl
add
sub
sbb
or
leave
mov
sbb
mov
cmp
lahf
mov
pop
cmp
or
mov
test
xchg
mov
pushf
jo
inc
sbb
mov
or
in
dec
loope
popf
sub
and
arpl
cmpsb
loope
mov
xor
sub
lcall
lahf
sub
loope
lock
pop
dec
push
jecxz
push
dec
into
fisubs
std
scas
into
stos
mov
lock
or
dec
js
rcl
push
mov
loopne
addl
mov
mov
fmuls
aad
into
sbbb
iret
fidivs
and
clc
xchg
mov
add
xchg
scas
lods
iret
sbb
cmp
add
fistpll
les
les
out
mov
cmc
lcall
sbb
mov
add
popf
inc
dec
arpl
iret
xor
shrl
xchg
sbb
sub
rorl
mov
ljmp
ret
add
call
fstpl
clc
std
and
dec
jnp
test
out
inc
repnz
cmp
xor
shl
stc
mov
pop
inc
mov
add
add
js
int
rcrb
push
lea
je
xchg
xchg
mov
lcall
js
adc
shrb
push
push
ficoml
lds
adc
inc
loop
shrl
add
cltd
dec
inc
inc
push
xor
cmpsb
sahf
jp
xchg
lods
daa
xor
mov
pop
mov
mov
mov
dec
sub
data16
inc
es
xchg
xchg
mov
or
jb
jle
jg
pop
gs
sbb
pop
mov
loope
arpl
lods
sbb
outsb
cmp
jne
ret
fst
adc
add
jecxz
icebp
mov
cmp
inc
cmpb
mov
dec
fsubl
inc
clc
mov
rorl
inc
loope
push
stos
iret
inc
aas
outsb
out
cmp
out
pop
idivl
xor
paddsw
ret
std
inc
adc
push
push
cmp
sub
sbb
push
push
add
adc
mov
mov
jae
dec
inc
insl
xor
loop
dec
stc
cltd
jmp
mov
xchg
and
jl
inc
push
insl
out
lods
mov
xchg
hlt
insl
inc
test
jl
outsb
js
insb
ds
cld
cltd
test
push
jecxz
sbb
cmp
fisttpl
jns
incl
repz
lret
aad
mov
jns
out
push
shlb
or
mov
loopne
jle
or
jmp
xor
dec
imul
mov
xor
sbb
out
and
dec
fistps
clc
out
cmp
nop
stc
cmpsl
rclb
imul
out
stos
aas
add
inc
pushf
push
jnp
call
sub
js
adc
lock
or
jl
adc
dec
cmp
sub
arpl
jno
add
pop
mov
imul
xchg
pop
mov
cwtl
rcl
daa
mov
je
mov
mov
inc
xchg
ljmp
popf
and
cmc
pop
inc
mov
ljmp
xchg
clc
jae
pusha
or
jg
lods
xchg
into
or
mov
push
xlat
sub
lock
jp
mov
push
loop
push
mov
pop
dec
jl
stc
jnp
and
lea
out
cmp
mov
inc
dec
pop
inc
sahf
sbb
mov
xchg
insb
ret
push
xchg
daa
mov
push
aaa
push
fstpl
inc
jns
xchg
dec
or
aaa
sbb
mov
lcall
testb
inc
inc
in
adc
jl
scas
je
cs
adc
mov
shrb
adc
pop
leave
dec
dec
stc
adc
in
inc
std
jnp
ljmp
push
enter
push
cld
xor
sub
std
mov
cmp
add
fucomi
adc
fiadds
cmp
ss
sub
test
xor
mov
jmp
xchg
psrlq
mov
cmc
xchg
das
add
push
mov
or
xchg
ljmp
imul
inc
mov
aam
push
xchg
imul
mov
sbb
out
dec
jbe
ficompl
in
sbb
jae
dec
jl
dec
in
sub
smsw
sbb
shl
xor
test
adc
sbb
sub
mov
or
into
push
adc
mov
xor
shlb
nop
jae
xlat
inc
lcall
rclb
inc
sub
mov
cmp
loopne
icebp
push
jecxz
sub
sbb
and
pop
dec
ret
mov
repnz
mov
mov
fbld
or
mov
cli
repz
ja
jmp
push
testl
lock
aam
out
in
mov
gs
inc
bsr
or
sub
push
push
xchg
pop
in
mov
add
and
sub
mov
bound
in
push
pop
xchg
pop
sbb
adc
dec
inc
pop
or
sbb
ret
test
jo
push
jmp
push
aaa
xor
mov
sti
sbbl
pop
cmc
push
push
push
repz
cmp
dec
rcrl
xor
scas
push
cli
adc
lret
outsb
xor
pop
cmpsl
mov
pop
js
cmp
frstor
and
inc
and
ja
pusha
gs
mov
enter
ds
dec
inc
ret
jmp
xor
mov
arpl
sbb
repz
hlt
xchg
xor
add
or
into
fwait
mov
stos
mov
int3
or
add
rorb
push
js
mov
and
ds
xchg
or
sbb
push
lock
cmp
shrl
lret
mov
cmp
xchg
xor
mov
jl
mov
fbld
sahf
pop
in
mov
adc
mov
xchg
pop
xor
sbb
push
adc
das
mov
jne
lcall
ret
mov
sub
inc
mov
les
out
enter
mov
imul
iret
add
lahf
xchg
ds
sbb
fsubrp
sub
dec
shll
xor
xor
jno,pt
mov
and
add
pop
test
lods
in
cmp
pusha
loop
xor
push
jno
cmpsb
ds
sub
sbb
ss
xlat
mov
shlb
add
pop
rclb
xchg
gs
aas
adc
adc
pusha
sbb
and
int3
aam
xchg
fildl
push
xor
cmp
clc
paddw
arpl
int3
cld
adc
mov
mov
lcall
sti
imul
out
jmp
jbe
fs
mov
iret
stos
bound
mov
xor
insb
adc
xor
outsl
push
movsl
in
mov
fldl2t
aaa
jb
pop
mov
and
jmp
les
mov
lret
mov
xchg
mov
call
repz
daa
test
scas
std
adc
in
or
sub
fcompl
mov
mov
adc
cmp
mov
mov
notb
pop
pop
push
pop
loope
pop
stos
inc
ret
shll
sbb
inc
pop
inc
loopne
mov
mov
and
push
inc
sub
ss
mov
insl
push
nop
incl
out
mov
fistl
loop
inc
icebp
dec
inc
das
pop
push
int3
data16
aad
std
enter
push
cmpsb
nop
lock
dec
gs
push
leave
loopne
mov
popa
xchg
sti
inc
stc
into
stos
cmc
cli
sbb
shl
mov
mov
mov
mov
push
out
mov
mov
adc
cmp
sbb
pop
orl
fldt
rol
mov
and
repnz
daa
fbld
xchg
outsb
movups
cmpsb
int3
cmp
sbb
in
xchg
push
xor
lret
or
mov
xchg
hlt
aas
pop
sahf
mov
xchg
xchg
inc
shl
push
pop
jnp
sub
push
ret
jne
inc
adc
sub
out
xchg
call
popa
imull
sarl
mov
jle
aas
cmp
es
sbb
int3
fdiv
mov
xor
mov
xor
cld
push
cmpsb
xor
js
sarb
mov
sarl
jle
and
sarl
adc
pop
inc
leave
or
gs
pop
js
insb
mov
arpl
fstpt
push
movsl
movb
jno
bound
inc
cmp
leave
inc
bound
xor
inc
mov
push
sbb
int3
je
mov
clc
sbb
or
lds
and
scas
push
cmpsl
mov
ja
push
leave
decl
add
sub
add
shrb
mov
sub
imul
adc
std
or
jns
repnz
or
jns
loopne
pop
push
dec
addl
int
out
stos
lret
sub
mov
xchg
fmuls
repz
insb
push
dec
daa
or
jo
rorb
sub
push
loop
mov
or
test
pushf
sarl
bound
movsl
jecxz
cmp
repz
jns
les
mov
icebp
jno
mov
xor
pop
enter
sbb
and
jo
push
push
lret
xchg
and
mov
sbb
stos
xchg
xor
mov
mov
mov
test
mov
pop
pop
push
cmpsl
test
cmp
loope
cmp
add
out
ret
xchg
daa
jbe
cmp
loopne
stos
lret
inc
pop
xchg
mov
jmp
mov
scas
andb
pop
flds
or
jecxz
xchg
and
das
das
sub
pop
test
mov
xor
push
mov
aaa
mov
mov
and
popf
movsb
popf
nop
mov
in
cltd
cmc
rcll
xor
inc
inc
scas
lods
xchg
pop
das
add
popf
or
adc
dec
test
mov
mov
arpl
rcl
or
outsb
inc
aad
sbbl
fucomi
out
xor
or
jne
push
fsubr
pop
mov
push
pop
pop
outsl
data16
mov
jnp
pop
xchg
xchg
sbb
mov
cmp
mov
cmpsl
in
dec
dec
cmp
stos
xchg
lock
in
xchg
std
push
movsl
ffreep
push
std
push
mov
sub
pop
cmpsb
lock
push
and
call
pop
push
cmpb
incl
out
je
xchg
sbb
inc
popa
fnsave
mov
inc
pusha
xlat
cmpsl
mov
adc
sbb
jg
inc
and
dec
lret
or
aaa
shl
push
mov
inc
ds
cwtl
cwtl
bound
add
mov
hlt
insb
sahf
jnp
mov
outsl
jae
ja
jbe
mov
mov
out
nop
popf
mov
ret
or
cmp
orl
test
and
jbe
mov
test
push
repz
fwait
pop
sbb
arpl
xor
jb
dec
les
sarb
cmp
cmp
xchg
jp
adc
xchg
es
frstor
and
les
imul
xchg
ret
in
jmp
inc
sub
lds
push
adc
fwait
inc
pushf
push
sbb
pop
cmpsl
clc
mov
and
aam
in
sar
sub
inc
and
popf
sub
or
or
jp
mov
loopne
sbb
test
outsl
mov
repz
les
lods
scas
jns
mov
sti
pop
xchg
adc
jmp
aam
jg
adc
mov
aam
imul
sar
pop
adc
mov
push
addl
cmp
insb
icebp
daa
ds
fwait
pop
mov
shlb
adc
dec
mov
xor
repz
xchg
push
pop
test
mov
loop
ss
xchg
jmp
test
pop
mov
mov
mov
mov
pop
mov
rcrl
popf
jge
imul
dec
rcll
inc
rorb
pop
jge
cwtl
xor
pop
sbb
movsl
xchg
ret
out
movl
test
jne
cmp
sbb
xchg
negb
sbb
xchg
js
dec
xor
daa
test
sbbl
mov
lds
or
jge
lahf
push
jmp
mov
jecxz
cltd
push
cwtl
push
ja
std
xor
pop
jnp
scas
xchg
pop
mov
xchg
lret
xor
jnp
test
dec
ret
or
jns
sarl
ljmp
popl
dec
dec
in
stos
sub
mov
mov
mov
push
lock
push
repnz
xor
fstpt
aaa
test
movsb
mov
jne
inc
pop
mov
int3
adc
mov
jns
or
xor
lret
xor
xor
movsb
mov
and
fstpt
mov
jecxz
cs
sub
fwait
cmc
subl
push
cld
add
add
cmc
ss
mov
or
adc
xchg
in
repz
jp
mov
dec
mov
mov
aad
orb
loopne
mov
push
aam
stos
sbb
in
push
cvtpi2ps
cmp
cs
cmpsb
mov
fsts
xchg
adc
jae
push
mov
enter
jle
push
xchg
scas
sbb
pop
pushf
adc
mov
mov
pop
gs
cmpb
inc
fwait
mov
stos
push
sub
negb
push
adcb
aad
and
inc
ss
mov
lock
cmc
mov
pop
mov
jmp
or
loope
aas
call
mov
cwtl
les
pop
mov
pop
es
mov
xchg
lret
xor
mov
aad
mulb
cli
add
outsb
xlat
int
adc
ss
jp
push
cmp
push
mov
add
iret
outsl
rcl
std
out
adc
adc
fnsave
lods
lret
into
add
loope
add
sub
outsw
movsl
fmull
sbb
push
das
mov
xor
push
lret
xorl
xor
push
ljmp
bound
fstps
cmpsb
fisubrs
pop
and
mov
sub
out
mov
mov
cmp
dec
jge
push
or
nop
jecxz
mov
loop
test
sahf
sub
sbb
mov
mov
xchg
xor
push
mov
pop
jae
lods
ljmp
scas
rorl
popf
sub
pop
or
pop
lahf
adc
xchg
cwtl
push
arpl
hlt
daa
and
jle
movb
xchg
jge
cmc
loopne
addr16
enter
scas
out
sbb
mov
mov
fnsave
in
pop
push
in
dec
out
aam
cmp
and
mov
xor
pop
xchg
and
lods
lock
cli
fldenv
fs
and
aas
sub
mov
cmp
adc
sbb
inc
aad
inc
aaa
mov
std
push
arpl
sbb
mov
outsb
dec
inc
jp
std
es
mov
enter
ret
fiadds
xorl
dec
jmp
ja
ret
push
mov
in
xor
popf
repnz
mov
and
xchg
dec
cmp
hlt
in
xchg
fwait
inc
pop
and
sbbb
inc
ds
sub
iret
pusha
popf
rcr
cmc
stos
fildl
mov
push
sbb
xchg
inc
mov
ret
lds
jmp
cmp
push
test
insb
jae
xlat
mov
stos
adc
xor
cmpsb
push
ret
add
addl
mov
cwtl
mov
decb
xchg
shll
lahf
cmp
inc
fadd
pop
fdivrl
sub
add
imulb
test
push
rcrb
aaa
mov
pop
adc
int
bswap
iret
push
outsb
mov
cwtl
sub
dec
fcomi
push
cmp
loope
mov
sub
fistpll
pusha
xorb
push
inc
push
test
or
inc
fisttps
and
push
divl
mov
mov
pushf
xor
loope
adc
xchg
add
dec
mov
cli
lahf
into
fbld
xchg
imul
mov
sbb
mov
int
stos
sub
and
les
mov
iret
mov
int3
rorl
jmp
lods
les
adc
int3
aam
push
in
jne
mov
add
cmp
notb
test
mov
dec
stos
dec
push
pop
xchg
bound
dec
imul
imul
pop
cs
movsb
fimull
shrb
xor
ds
sbb
jmp
in
lret
insl
imul
pop
popf
add
cmp
mov
xor
sbb
fwait
sahf
mov
out
sbb
imul
jmp
dec
cld
loopne
push
lret
or
ds
testb
ja
call
add
rorb
icebp
es
mov
mov
or
or
andb
roll
mov
lods
or
cmpsl
mov
je
aad
fistpl
mov
pusha
pop
inc
jmp
les
sub
cmc
sti
int3
ljmp
in
ret
test
outsb
cmp
es
call
push
xor
mov
mov
sbb
inc
loop
sub
inc
aas
jb
pop
outsl
in
xchg
inc
xor
loopne
std
sub
iret
lods
mov
inc
out
mov
nop
call
dec
pop
fsub
cli
aaa
push
and
xor
sbb
push
call
clc
push
xor
ja
xchg
pop
lock
or
movsl
mov
fisttpl
sub
and
push
mov
inc
addr16
mov
mov
push
inc
mov
mov
xchg
lcall
sbb
fs
cmp
sbb
inc
cmp
mov
ja
movsb
xor
cmp
xorl
repz
pop
lret
cwtl
aaa
pop
icebp
pushf
push
ja
enter
scas
dec
repz
mov
int3
popa
sti
mov
popa
mov
pop
xchg
lcallw
js
jp
pop
repz
inc
sahf
xchg
push
push
insb
xchg
stc
jg
adc
mov
mov
pusha
in
mov
stos
push
push
xchg
sbb
add
mov
mov
push
arpl
outsb
push
fisubrs
dec
movl
jbe
inc
pop
ret
sub
rcrl
in
mov
inc
jecxz
push
lock
xor
mov
sti
movsl
sub
into
mov
sub
leave
cmpsb
aad
add
loop
pusha
fs
fadds
outsl
std
arpl
push
and
pop
fs
mov
dec
add
xor
test
sbb
rclb
ret
jecxz
mov
in
shlb
push
adc
sarb
std
fucomip
inc
fidivrl
push
inc
sub
sahf
in
test
push
hlt
mov
jl
xor
inc
cmp
into
pop
aas
xchg
cmpsb
mov
xchg
or
mov
cmc
andb
cmp
mov
or
lret
lcall
jp
test
adc
in
mov
lock
es
dec
nop
sbb
xchg
mov
adc
and
inc
xorb
jno
xchg
test
insb
inc
xor
hlt
mov
xlat
pmaxub
lea
bound
add
lahf
insl
or
arpl
adc
mov
lock
sti
mov
pop
mov
inc
lods
jmp
mov
lahf
ljmp
jb
xor
inc
pusha
xchg
jp
subl
test
xchg
pop
inc
mov
fisttpl
xor
xchg
add
mov
notl
lret
mov
mov
scas
int
outsl
cltd
adc
stc
mov
push
jb
cmp
push
xchg
subl
cmp
adc
lcall
sub
mov
xor
mov
and
sbb
test
arpl
sbb
sub
lret
push
cmp
mov
test
push
xor
mov
add
cmp
sub
and
loopne
dec
shll
pop
xchg
jg
xor
lds
adc
dec
inc
roll
jbe
rcl
mov
fcomp
xor
dec
shlb
jmp
jae
cmpsb
jnp
sbb
and
push
adc
pop
and
xchg
push
scas
arpl
out
fstpt
inc
mov
xor
xchg
out
fwait
mov
sub
int3
xor
pop
jae
inc
pushf
imul
inc
push
stc
gs
jb
cmp
fidivs
sub
mov
clc
and
sub
add
or
lahf
mov
pop
mov
testb
dec
sub
dec
adc
rorl
ljmp
leave
daa
or
scas
inc
jmp
dec
push
frstor
adc
mov
and
out
xchg
jnp
scas
int
xor
lds
sbb
and
cmovb
movsl
stos
ret
inc
pop
cmovbe
sarb
sub
andb
cmp
lret
sub
xchg
xchg
xchg
sub
jmp
fwait
push
popa
add
mov
or
pop
add
mov
fs
xchg
fucomip
lahf
lock
cwtl
stos
pop
rcrb
inc
or
jle
mov
fstps
push
aas
das
imul
lcall
jnp
pandn
cmpsb
jl
dec
mov
les
mov
jbe
pop
inc
into
out
jle
in
daa
stc
aad
jns
jmp
std
into
stc
bnd
fildll
pushf
arpl
pop
sbb
pop
or
jb
push
stos
orl
test
jecxz
das
aas
cmp
cs
pop
pop
les
sbb
lret
mull
stos
add
imul
sub
incl
sbb
xchg
jo
arpl
pop
xor
sbb
or
inc
out
mov
dec
mov
xchg
jnp
jg
mov
jb
sarl
and
outsb
dec
lds
mov
test
add
ds
loopne
enter
aad
sbb
ret
jae
les
push
sbb
dec
or
cmp
mov
insl
daa
cmpsb
and
pusha
inc
pop
and
inc
popa
in
ss
inc
jo
mov
imul
jb
mov
shll
decl
cmp
or
int
push
push
sub
cmc
rclb
aas
jg
push
add
add
mov
add
xchg
and
pop
insb
test
push
dec
movsb
mov
push
test
adc
scas
loope
fcmovnu
and
mov
jmp
loope
sub
mov
cmp
and
xchg
sbb
les
and
mov
out
mov
loope
cmp
imul
xor
pop
test
rcrl
push
rcrb
in
imul
in
test
hlt
dec
or
inc
inc
pushf
aam
rcrb
or
mov
aaa
xor
inc
das
test
cmp
int3
outsb
fldt
mov
sub
cmp
cwtl
jbe
mov
jmp
hlt
lods
or
mov
xchg
out
mov
sub
lahf
mov
insl
sub
clc
fnsave
and
fstl
mov
test
inc
jp
xchg
inc
fisttps
inc
into
cwtl
je
and
loopne
inc
fstpl
stc
lea
pop
mov
lods
push
fiadds
xor
pop
popa
ljmp
out
roll
xchg
lcall
adc
mov
and
aas
pop
cltd
mov
ret
fwait
mov
stc
cld
and
cmc
les
pop
sbb
popf
inc
pop
jg
or
jg
mov
pop
xor
scas
rorl
xchg
mov
aas
fwait
sahf
xchg
in
lods
push
hlt
arpl
jo
cmp
cmp
inc
test
inc
cmp
rcrb
sub
inc
ffree
adc
mov
mov
sbb
sbb
iret
xor
jecxz
or
inc
jecxz
sbbl
dec
int3
test
xor
aam
mov
movb
cmp
or
rcl
stos
lret
int
dec
lds
inc
int
xor
dec
lea
sbb
push
int
push
cmp
cmp
xchg
scas
xor
popa
repz
cmp
jle
hlt
jno
fnstsw
pop
insl
cmp
sub
sti
push
adc
cmp
sub
push
lock
sahf
inc
sub
sarb
and
pop
xlat
add
in
jns
xlat
jbe
mov
in
sbb
mov
mov
xchg
inc
and
stc
jp
and
stos
pop
or
je
shr
popf
mov
sbb
cmp
and
lea
fmuls
das
fisubs
push
or
inc
xlat
in
jbe
pop
loop
add
js
sub
mov
fldenv
sbb
cs
cmpsb
mov
lea
push
push
dec
addr16
pushf
jmp
loope
pop
mov
mov
mov
pop
imul
clc
and
mov
js
xchg
jns
or
jge
pop
mul
cld
imul
mov
test
cmp
lds
mov
jb
pop
cmpsb
cmpsb
pop
push
scas
or
pop
loopne
or
mov
lds
mov
and
and
shrl
sbb
jp
sub
repnz
sbb
sbb
inc
pop
push
outsb
adc
fwait
enter
rclb
or
xor
out
jns
insb
inc
nop
popa
arpl
sub
push
jo
fcomps
and
movsb
cwtl
adc
scas
mov
mov
dec
xchg
jecxz
je
mov
adc
ss
mov
xchg
jo
adc
push
fstps
aaa
push
out
pop
push
test
cmp
xchg
push
and
daa
int
in
nop
xchg
out
cmc
fwait
pop
fwait
or
ds
sbb
mov
push
mov
add
adc
pop
inc
outsl
out
fildl
and
sti
call
enter
inc
in
pop
adcl
jns
cli
pop
mov
jne
mov
ret
sbb
movsb
cli
jns
or
leave
mov
mov
inc
aad
adc
or
mov
int3
fcoms
mov
sub
int
xorb
icebp
arpl
test
xchg
push
sbb
or
test
pop
call
mov
mov
mov
jg
loope
cltd
cmp
adc
out
imul
insb
and
xor
pop
cmp
mov
lahf
inc
inc
jg
sbb
and
dec
mov
inc
call
sbb
xlat
pop
mov
or
pop
cltd
mov
jl
inc
xchg
xorl
push
lods
xchg
sbb
scas
mov
cmp
cld
push
call
adc
je
inc
xor
fwait
ds
xchg
insb
in
gs
push
fstpl
sbb
mov
in
daa
xchg
dec
rorl
in
mov
push
mov
repnz
xchg
pushf
scas
xchg
mov
adc
call
xchg
sbb
ljmp
outsb
mov
pop
stc
ds
fdivrl
mov
dec
dec
daa
mov
push
sbbb
add
mov
or
lds
jno
dec
shl
pop
inc
aad
movsb
and
fwait
dec
in
inc
pop
mov
loop
imul
data16
int
or
xchg
gs
movsl
sbbl
aad
scas
aas
push
pusha
mov
es
mov
sbb
lret
adc
cmpsb
pushf
push
fldcw
add
xor
mov
cmp
fwait
and
mov
addr16
rcrl
into
rcrl
xchg
mov
loopne
mov
lods
jmp
aaa
sub
mov
jmp
jg
data16
fcmovbe
push
loopne
shll
fdivrs
xor
xchg
sbb
mov
stos
cmc
mov
stos
sub
ljmp
mov
pop
aas
mov
mov
adc
push
aad
sti
sub
jne
or
call
sbb
add
xchg
ds
jge
outsl
lea
sub
pop
inc
addr16
push
movsl
or
imull
mov
addr16
fsubrl
insb
popa
addr16
fildl
jl
test
mov
dec
add
scas
ja
adc
in
mov
testl
popa
jmp
mov
xor
imul
hlt
pop
mov
popf
pop
in
xchg
out
outsb
sub
push
je
cmp
or
ret
arpl
inc
cmpsl
pop
jae
stc
cs
out
mov
rcll
push
cs
sbb
mov
mov
jns
mov
xchg
je
and
arpl
negb
inc
aas
pop
arpl
push
les
in
jmp
mov
lret
mov
push
pop
jmp
adc
or
fistpll
rorb
xchg
pusha
test
pop
fisubrl
data16
mov
mov
loop
sbb
xchg
movsl
pop
xadd
cmc
ret
cmp
push
inc
movsl
sub
lods
js
mov
imul
dec
cmc
mov
inc
popa
shll
mov
jno
out
xchg
xchg
push
push
mov
and
js
add
pushf
shr
jp
jg
pop
sub
mov
jl
jb
pop
lahf
fdivl
pop
lds
xchg
xor
mov
loope
cmp
xchg
fs
sub
lods
out
in
cmp
mov
add
add
fdiv
mov
lret
rcll
lahf
jo
rcrb
mov
jbe
push
repnz
pop
jg
mov
fnsave
xlat
push
dec
aaa
adc
add
sbb
mov
push
cmp
xchg
lcall
mov
lahf
mov
pop
fcoml
in
je
rolb
movb
push
loope
fwait
mov
mov
mov
mov
sbbl
push
repz
jecxz
adc
mov
fwait
lods
pop
fildl
xor
test
sti
repz
les
mov
loop
icebp
jg
add
popf
out
lock
xchg
mov
adc
stos
bndstx
push
fldenv
ss
cmp
fdivs
movsl
xchg
daa
jbe
cmp
sarb
lock
and
sbb
out
clc
adc
idivb
sbb
inc
mov
xchg
lret
xchg
push
shlb
pop
lret
sti
mov
aad
jbe
repnz
gs
and
sub
lahf
sahf
mov
ficomps
and
and
into
and
ret
jno
mov
decb
sbb
cld
push
pushf
pop
lea
repnz
je
mov
in
insb
insl
inc
cmp
pop
icebp
fsub
xchg
lret
mov
fcoms
mov
inc
mov
xchg
inc
mov
pop
sbb
jge
movsb
ljmp
fwait
mov
cs
mov
dec
sti
fdivp
scas
jecxz
das
jp
int
jae
int
std
inc
pushf
jb
fildl
push
sarb
imul
xor
sub
inc
push
add
pop
push
call
pop
xlat
lea
test
or
fiaddl
pop
mov
out
outsb
inc
rdmsr
popf
and
xchg
popf
lea
cmp
sub
cmp
repz
jb
mov
cltd
iret
iret
lcall
add
lods
pop
jp
push
mov
stos
lahf
and
in
std
jp
mov
pusha
lret
outsl
push
dec
stos
mov
data16
cmpsl
subb
mov
fs
cmp
xchg
jae
xor
not
pop
stc
xor
sub
popw
repz
pminsw
fcompl
insl
outsl
pop
mov
ss
loop
pop
repz
fisttpll
aam
cmp
jg
addl
pop
sub
push
inc
std
and
inc
push
push
pop
push
pop
daa
int
xchg
sbb
mov
jne
scas
or
mov
mov
and
pusha
shlb
arpl
stc
adc
and
pop
pop
repnz
jg
lods
test
and
mov
mov
push
jmp
jbe
lret
jmp
sub
mov
dec
and
scas
and
shl
jl
sbb
jmp
popw
std
pop
inc
pop
inc
mov
test
xchg
outsl
mov
daa
imul
pop
push
ds
xchg
daa
repnz
fs
jnp
and
jo
int
mov
and
rcrl
and
popf
push
xchg
pop
into
dec
mov
ljmp
inc
jmp
les
leave
dec
push
int3
dec
mov
and
fildll
ja
lahf
stos
dec
mov
clc
rcrl
mov
sbb
mov
in
mov
js
subb
xchg
mov
pop
mov
mov
or
fiaddl
orb
fsubl
psrlq
cld
sub
ret
or
jmp
jl
out
sub
mov
in
pushf
adc
mov
aas
adcb
inc
sbb
pop
call
enter
loop
push
ds
hlt
mov
clc
mov
flds
jecxz
adcb
xchg
pop
das
pushf
cmp
inc
jnp
adc
outsl
mov
push
sub
adc
jo
add
dec
xchg
mov
sahf
cltd
fisubl
inc
outsb
sbb
xlat
pop
mov
xchg
xor
into
add
loop
cmpsb
test
mov
or
imul
sub
sub
add
ret
scas
fildl
xor
imul
inc
lahf
jns
cmp
lea
popa
insb
popf
scas
sub
rorb
fadd
inc
int
lods
mov
es
orl
int3
inc
sbbl
xchg
xor
mov
sbb
jbe
out
adc
es
pop
int3
negl
ret
mov
sub
mov
mov
insl
mov
and
push
shll
enter
rcl
por
call
sub
pusha
adc
nop
int3
cmp
cmovs
int
dec
mov
lcall
test
lcall
push
xchg
int3
push
mov
push
xchg
fists
cltd
xor
pop
pop
or
aad
call
movsl
jg
jbe
xor
inc
js
frstor
ds
lods
js
xor
inc
aas
bound
leave
addb
push
inc
lret
fldl
cmp
push
xchg
cwtl
arpl
call
mov
cmp
rorl
sbb
fxch
xor
ret
mov
cmp
inc
push
push
inc
daa
push
lods
int3
rorb
test
adc
outsb
xchg
fbld
xchg
test
lret
ret
int3
mov
mov
loope
mov
inc
lahf
mov
cmp
testl
subb
cmp
and
int3
and
push
jnp
sbbb
int
aaa
out
xchg
mov
mov
stc
pop
mulps
cmp
dec
out
ret
or
insb
sbb
aad
pop
add
sub
or
int
in
das
pop
out
jae
jl
pop
pop
loope
add
popf
and
add
cmpsl
mov
inc
sbb
mov
mov
inc
data16
jmp
scas
adc
add
sub
mov
mov
adc
pop
lcall
icebp
fs
cltd
adc
jns
jmp
movsb
leave
inc
icebp
jg
iret
arpl
pushf
lds
mov
mov
les
ret
leave
mov
bswap
icebp
add
and
xor
jns
aam
push
mov
pushf
xchg
pop
or
push
ds
mov
ja
fldenv
sahf
xlat
pop
mov
cmp
lahf
shll
or
test
out
orl
out
push
mov
fbld
sbb
aad
mov
mov
mov
sbb
sbb
lods
outsb
popa
inc
inc
orl
lcall
mov
shlb
adc
sbb
xor
jnp
int3
and
pop
mov
adc
cli
lcall
mov
rol
arpl
and
lret
inc
jb
cmpsl
cltd
or
xchg
test
cmp
sbb
mov
xlat
jge
movsl
mov
mov
mov
sub
les
inc
enter
addb
in
ss
or
cmp
ret
roll
rcrl
mov
cwtl
insb
lret
dec
insb
mov
aad
and
mov
jp
push
hlt
cmpl
cs
or
rcrl
pusha
jae
je
fnstenv
sbb
pusha
sbb
sbb
loop
mov
mov
fcomip
aam
popf
ret
in
fstpl
xor
jmp
ja
cmp
js
xchg
push
pop
insl
in
std
in
aad
jl
jl
cmp
stc
push
out
inc
adc
dec
js
push
outsb
sub
add
xchg
or
and
xchg
fidivrl
scas
andb
pop
sbb
std
pushf
jo
shrl
or
out
test
inc
dec
loop
fs
ss
jo
jg
sbb
rorl
and
cwtl
sar
push
mov
push
pop
lods
add
mov
sbb
nop
mov
shrl
popl
mov
mov
sbb
test
sub
jg
push
pusha
outsl
ret
or
cmp
jp
and
pusha
test
mov
cmpl
cli
push
in
push
das
in
cmpsl
xor
out
push
jmp
test
gs
xlat
push
inc
pop
xchg
push
add
addl
add
enter
mov
out
dec
loope
mov
lretw
or
insl
dec
mov
xor
sub
lahf
adc
sub
pop
sbb
fstl
scas
hlt
ret
addr16
push
bnd
out
xchg
in
iret
shll
mov
fdivrl
xchg
pop
mov
pop
mov
bound
add
inc
std
mov
movb
ds
cmp
fadds
push
mov
push
popa
adc
lock
pop
outsl
hlt
sub
adc
push
push
jmp
outsb
test
push
repz
or
sub
xchg
jle
in
jp
pop
mov
push
imul
and
cmpsb
nop
insb
daa
sti
inc
jae
sub
mov
arpl
lret
clc
movsl
mov
xchg
clc
ljmp
incl
or
mov
fwait
pop
sbb
xor
ss
xchg
and
jg
aaa
iret
fldl
and
cmc
idivb
aam
jg
xchg
add
inc
ffreep
adc
sbb
push
ss
xchg
fmul
pop
out
dec
mov
lret
testb
jle
jno
push
nop
mov
cmc
and
into
pop
push
xchg
sbb
xchg
imul
push
or
cmp
ret
test
cmp
aas
repnz
add
mov
mov
inc
adc
adc
imul
push
lods
xor
or
mov
iret
xor
push
sub
push
push
xchg
add
pop
or
mov
jne
lcall
mov
xor
xor
ret
fstp
xor
iret
mov
insl
scas
xor
mov
mov
dec
mov
pop
test
test
pop
cs
rcll
or
ret
adc
cltd
mov
cmpsl
push
push
jb
sti
push
rol
push
out
jae
enter
dec
jmp
cltd
outsb
jo
dec
repnz
or
into
fidivrs
fcmove
call
pop
mov
sbb
sbb
lret
pop
mov
cltd
mov
orb
sub
sbbl
push
cs
jbe
inc
or
push
xchg
jae
xlat
cmpsl
cmp
or
or
and
lcall
inc
cmp
cmp
pop
popf
mov
mov
aaa
xlat
jno
bound
aas
cmp
push
inc
pop
shlb
or
jbe
push
fs
mov
push
ds
xchg
movsb
pop
icebp
sub
and
xlat
dec
ds
out
jnp
cltd
aas
mov
gs
and
push
jge
mov
mov
mov
cltd
xchg
cs
cmpsb
lahf
shll
mov
loop
sbb
inc
dec
mov
mov
in
nop
dec
fstl
jne
sbb
xchg
xor
mov
jae
outsb
shlb
in
jmp
xchg
ss
push
adc
divb
inc
outsl
pop
add
inc
out
lods
inc
in
push
leave
jp
mov
and
xor
and
push
cmp
call
pop
cmp
xor
mov
or
ljmp
add
mov
mov
cli
pop
inc
sarl
cmpsl
push
mov
or
leave
shll
mov
pop
or
mov
and
cmp
and
ss
add
cmp
jnp
fistps
enter
or
pop
lret
iret
lret
jno
std
lea
mov
xchg
or
out
sbbl
xchg
dec
test
cmpsl
pop
fwait
lret
shll
inc
insb
shl
das
inc
lock
jmp
dec
adc
sar
arpl
mov
aaa
test
xchg
out
mov
pop
fmuls
inc
push
xlat
or
jne
fiaddl
stc
adc
scas
ja
pop
mov
cmp
push
pop
cmpsl
data16
lods
mull
or
stos
mov
push
or
and
pop
jl
sub
cmp
push
cmp
xor
lret
fstps
push
push
cmpsb
and
xchg
lock
mov
shl
cmp
pop
sub
cmp
mov
mov
pop
jno
daa
xor
fdivrs
mov
cmp
push
test
sbb
movsl
cltd
btrl
clc
xor
jmp
lods
ret
stos
adc
int
lcall
inc
test
lds
popf
call
rorb
dec
aas
mov
push
fildl
test
sbb
push
inc
js
pop
and
or
xor
clc
out
mov
cli
mov
cmp
or
jno
sbb
xchg
sbb
or
ds
jp
test
sub
insb
add
inc
xor
mov
insb
iret
or
stos
loope
andb
push
out
jmp
pop
in
inc
adc
lock
xchg
pop
push
in
in
es
jns
mov
out
add
js
test
call
adc
adc
cltd
and
dec
push
sbb
push
mov
mov
cmp
pop
aaa
in
repnz
test
imul
leave
dec
mov
lods
jo
jecxz
sbb
lea
xchg
daa
cmp
lods
push
aam
sub
mov
ss
sti
pop
ljmp
lcall
push
push
int3
xor
dec
cmpsb
push
jno
inc
shl
aas
shrl
popf
pop
imul
sbb
lods
cli
sub
lods
pop
stos
scas
mov
jmp
mov
or
test
lds
in
sub
xor
xchg
mov
xor
ret
insb
rol
mov
adc
jg
mov
mov
in
jg
sbb
adc
push
shr
fldenv
mov
test
or
jns
icebp
das
lret
jno
push
ret
scas
mov
pop
into
push
xchg
repnz
icebp
and
insl
jbe
mov
xchg
and
xchg
in
sbb
xchg
sti
pop
int3
fs
shlb
nop
push
inc
cmp
es
loop
mov
iret
lock
dec
js
cs
cli
lods
movsb
rcrl
std
loope
xchg
sub
sbb
mov
add
sub
aas
pop
mov
inc
loopne
jmp
pop
mov
pop
rcrb
or
mov
cmp
mov
adc
adcl
xchg
mov
jge
adc
clc
sub
fwait
push
shlb
jp
lock
mov
sbb
outsl
xchg
cmp
shrl
lahf
jl
aas
fdiv
iret
sbb
push
sub
inc
call
inc
pop
cmp
ljmp
lock
xor
push
outsl
sub
add
cwtl
hlt
leave
mov
popf
cmp
pop
scas
nop
push
jecxz
xor
dec
movsb
insl
xchg
cmpsb
inc
lds
fwait
push
mov
sub
in
stc
pop
push
push
rorl
lock
shr
lea
push
push
xor
cmpsb
add
ss
xchg
out
mov
xor
ljmp
mov
dec
mov
mov
or
sbb
adc
test
scas
sarb
xor
sub
fnstsw
mov
iret
out
icebp
sub
sahf
add
ret
out
mov
push
jge
ss
stos
imul
std
mov
pop
pushf
xchg
popf
mov
in
xchg
xor
sbb
bound
adc
push
add
cmpsb
inc
pop
aaa
mov
lahf
jl
sbb
ja
fnstenv
data16
cmpsl
and
outsl
push
sbb
lds
inc
insl
daa
aaa
dec
into
mov
rcrl
lods
or
jge
cli
jne
stos
mov
jne
sub
add
test
sub
sub
adc
mov
pop
loopne
inc
and
sahf
mov
xor
cmp
into
imul
mov
ljmp
jbe
mov
jne
push
pushf
scas
jge
add
cmp
jg
mov
jg
mov
mov
enter
mov
add
imul
pop
subb
push
or
push
or
jno
sahf
pop
mov
stos
push
and
rorb
movsl
cmp
mov
inc
sarl
dec
iret
std
push
mov
fistpl
inc
repz
outsl
std
aam
bound
jl
ja
scas
testl
ds
cmp
dec
es
in
pop
and
and
dec
inc
dec
dec
xchg
pop
fstpl
push
mov
scas
leave
mov
ss
add
fwait
jne
add
sahf
in
jmp
cs
fnstenv
lds
mov
stos
adc
xchg
rcrl
arpl
stos
shr
mov
fisubl
insb
xor
push
imul
mov
in
ret
or
gs
mov
out
and
rcr
test
mov
xor
xor
test
add
dec
push
mov
xchg
mov
push
xchg
dec
inc
jmp
fucomp
sub
roll
int
faddl
mov
push
xor
fst
adc
loopne
push
or
adc
pop
push
jmp
iret
jae
ljmp
cld
mov
pop
mov
add
add
out
cmc
call
test
push
fstps
push
movsl
dec
adc
jecxz
push
push
test
decl
cmpsl
stos
xchg
pop
stc
shlb
call
xor
wbinvd
cli
imul
mov
fisubrl
sbbb
imul
jae
sbb
sbb
orb
xchg
scas
and
fisubrs
mov
je
and
mov
mov
pop
cmpb
inc
addr16
insl
inc
outsb
mov
and
inc
add
faddl
out
cmp
pop
sti
lock
mov
mov
mov
ficoml
adc
mov
insl
insl
jb
dec
mov
cmp
nop
push
jo
pusha
jns
imul
je
sahf
adc
xor
cmp
add
ror
xor
and
orb
ss
add
lahf
icebp
inc
out
jl
loopne
mov
fs
sahf
in
inc
rcll
fisubrs
rcrb
aam
out
cmp
lds
jno
fsubr
pop
cld
cmp
adc
mov
lods
adc
test
lret
fwait
cli
xchg
and
repz
pop
inc
push
mov
enter
std
inc
loopne
pop
dec
pop
jae
ja
push
fstpt
or
sbb
xchg
imul
iret
cwtl
cmp
inc
lock
xchg
mov
dec
inc
shll
dec
xlat
inc
pop
pop
pop
loopne
xor
xor
out
xchg
xchg
xchg
push
subb
push
or
call
sbb
mov
gs
sub
repz
push
in
inc
sarl
mov
jmp
sbb
cmp
inc
scas
mov
cmpsb
outsl
mov
daa
sub
and
push
imul
xor
movsb
imul
xchg
xor
push
mov
in
mov
inc
ds
push
lods
sbb
cmc
cli
cmp
js
jbe
sub
rcrl
into
inc
or
mov
data16
mov
sahf
mov
mov
inc
arpl
cmp
dec
fidivrl
hlt
aam
mov
fsubrl
in
inc
les
cli
mull
pop
push
fstps
cli
repnz
ja
sbb
xor
sbb
lahf
push
je
outsl
add
aas
dec
stos
adc
aad
pop
and
add
xlat
fcompl
cli
movsb
outsl
mov
mov
data16
pushf
push
jmp
sar
das
jecxz
dec
dec
sub
aad
movsl
push
nop
cmpsl
icebp
movsl
lods
pop
imul
je
inc
pop
inc
add
bound
xchg
lea
andb
add
sub
sahf
mov
xchg
inc
adc
add
mov
cmpsb
lds
dec
or
out
sbb
xchg
cmp
push
jne
test
xchg
cmc
bound
js
add
ficompl
fiadds
jne
outsl
sub
cmc
push
mov
mov
out
pop
les
pop
int3
and
out
stc
fistl
mov
push
out
ja
daa
xchg
lret
or
cld
pop
mov
inc
ds
data16
flds
pop
fcoml
jp
or
pop
push
rol
das
ret
sbb
push
jl
lahf
or
pop
mov
cmpsb
and
loopne
cmp
aad
aas
cwtl
iret
add
enter
mov
sbb
fdivl
mov
addr16
mov
sub
loop
inc
int3
les
loop
cmp
nop
adc
dec
add
subb
or
pushf
mov
sub
or
call
add
mov
jne
inc
mov
pop
cltd
jnp
in
repz
xchg
dec
les
popa
add
arpl
xor
push
test
js
aad
fcmove
insl
sbb
pop
and
and
mov
les
add
mov
leave
pushf
add
lret
call
popa
loope
and
cmp
cs
adcb
stos
in
and
or
sahf
imul
pop
xchg
push
inc
popa
loopne
aas
fidivrs
cld
sbb
and
add
xlat
push
jl
and
inc
aad
out
test
pusha
jne
daa
mov
insb
vmwrite
push
or
subb
sub
hlt
or
push
pop
stc
popf
mov
and
aaa
dec
cmpsl
mov
outsb
pusha
mov
xor
cli
and
ss
add
cmp
xchg
pop
lret
movsb
out
mov
add
pop
fcompl
or
inc
add
into
pop
jno
out
lret
addr16
inc
jne
gs
sub
pop
imulb
lcall
inc
xor
push
bound
inc
dec
or
sbb
or
jmp
sub
ret
outsl
add
sbb
xchg
stc
fwait
add
mov
cmp
rorl
jb
fcompl
xchg
xor
mov
cwtl
xchg
aam
testb
cmp
test
test
mov
push
adc
std
test
test
andb
mov
cmpsb
and
sub
xor
dec
fcompl
ja
lcall
mov
or
pcmpeqb
movsb
mov
mov
pop
mov
mov
ja
loopne
add
in
movsl
jmp
adc
dec
repz
lret
push
fidivs
enter
xor
int
ss
xor
or
ljmp
shlb
and
int3
fidivrl
pop
sub
mov
sahf
hlt
and
push
sbb
sub
cwtl
popa
test
inc
sbb
mov
lret
nop
xchg
fcompl
dec
sahf
out
mov
xor
xor
mov
enter
js
adc
push
inc
sarl
cmpsl
out
sub
in
fdivrl
jne
daa
mov
dec
icebp
dec
fwait
cld
insl
out
inc
fisttpll
idivl
arpl
cmp
stos
pop
enter
cmp
sarl
mov
leave
pop
pop
adc
or
lock
repz
dec
test
jns
aas
sub
loopne
lcall
cli
xchg
jmp
xor
mov
or
mov
xor
xchg
test
test
push
call
xlat
iret
xorb
movsl
setns
aas
jp
fldl
lds
mov
inc
adc
add
xor
dec
xchg
xor
push
imul
fmuls
and
cmp
and
arpl
xchg
mov
dec
das
cmp
fistps
mov
subl
fstpt
std
xor
xchg
bound
ja
ds
pop
or
mov
pushf
xchg
xor
scas
scas
add
and
push
pop
mov
inc
into
push
push
aam
add
ljmp
push
xchg
dec
das
lds
aam
imul
mov
std
push
outsb
add
cmp
iret
in
lcall
adc
fwait
sbb
or
incb
ja
and
cs
push
cmp
dec
jmp
pop
sbb
popa
adc
in
andl
lcall
sub
jb
cld
push
mov
movsl
mov
and
shl
jp
dec
mov
push
cmpsb
inc
out
push
add
sbb
xchg
outsl
cbtw
fcmovu
in
stc
cmpsl
add
and
sub
xchg
jmp
call
sbb
sbb
rcl
fwait
sbb
lret
aas
pop
and
lock
in
cmp
jns
or
dec
cmpl
pushl
out
divl
and
fcmovnb
in
ss
adc
aas
js
mov
jno
ret
cmc
sub
push
enter
push
or
mov
out
mov
xor
push
inc
xchg
or
in
jecxz
mov
outsl
lds
jo
cmp
movl
dec
insl
icebp
pop
xchg
mov
mov
rcrl
dec
call
push
or
push
push
das
mov
js
sbb
cmpsl
arpl
jo
mov
mov
cmpsb
jmp
popf
and
pop
inc
pop
test
shrb
notb
xor
mov
mov
mov
xor
lds
jecxz
and
mov
mov
dec
add
mov
sbbb
dec
out
sbb
fdivrl
mov
loop
or
mov
out
repnz
je
bound
dec
and
mov
cmpsb
jne
loope
mov
addr16
stc
mov
dec
adc
xor
shlb
sbb
add
cld
xlat
lret
xchg
add
cwtl
xchg
loop
stos
clc
mov
and
mov
or
shrb
sbb
jl
addr16
inc
mov
mov
fnsave
sbb
rcr
repz
gs
aad
sti
in
mov
test
pop
jne
loopne
into
adc
and
in
and
xor
sub
mov
pop
adc
add
pop
dec
push
andl
fisttpll
or
int
daa
adc
lea
movsb
addr16
and
outsb
mov
scas
push
icebp
enter
push
pop
addl
ret
adc
inc
sbb
cmp
sub
adc
and
mov
jge
iret
push
call
out
mov
ss
lea
push
pusha
jnp
and
fs
adc
lret
pop
stc
int
push
dec
imul
pop
inc
sub
dec
dec
lahf
mov
out
lsl
sbb
push
ss
xchg
inc
mov
sub
jbe
add
stos
pop
mov
test
dec
mov
sbb
shll
test
ds
xchg
push
cmpsl
add
data16
imul
dec
jp
loope
lcall
mov
mov
jmp
sbb
dec
push
pop
sbb
inc
xor
nop
int3
imul
xorl
push
aaa
xchg
jno
daa
imul
test
mov
in
decl
jecxz
mov
arpl
mov
shlb
sbb
mov
sbb
out
nop
fldl
adc
out
mov
je
add
test
pop
mov
mov
test
into
mov
sbb
fdivs
sti
imul
push
xor
jl
mov
push
xlat
stos
jp
adc
outsl
jmp
pop
in
flds
iret
lock
mov
in
sbb
dec
jne
jp
xor
repz
js
lods
lds
jb
cmp
push
cmpsb
out
iret
jbe
in
inc
push
das
insl
jmp
cmp
pop
xchg
inc
test
call
insb
test
inc
dec
sbb
add
xor
ret
xlat
sbb
dec
adc
movsb
lret
lcall
subb
lret
dec
lret
sbb
sar
and
and
adc
hlt
in
lock
test
add
cmp
mov
xchg
rcrb
data16
nop
mov
jae
sahf
xlat
push
cmp
shll
mov
out
xorb
movb
lret
mov
aas
pop
shrb
fstpt
xchg
xchg
adc
insb
push
mov
sahf
adc
stc
mov
lods
outsl
pop
clc
cld
mov
push
cmp
les
addl
sbb
mov
ja
add
in
mov
push
mov
jp
nop
clc
mov
sbb
dec
xor
repnz
pop
or
inc
inc
cmp
aam
xchg
int3
daa
cli
xchg
cs
mov
fxch
lods
fdivl
inc
jecxz
insl
pop
xor
sub
call
sti
pushf
decb
repz
fs
pop
loop
sbb
pop
jo
or
mov
jno
ficomps
cmp
repnz
mov
sub
incb
dec
push
nop
jae
dec
jne
aam
adc
shl
popl
push
das
sti
jnp
dec
xchg
mov
test
cmp
jg
aaa
mov
and
aaa
xchg
clc
push
add
imul
sub
adc
mov
and
rorl
mov
rcr
pop
test
cli
cmp
xchg
push
stos
insl
pusha
test
cmpsb
jno
push
adc
data16
sbb
push
inc
das
hlt
xor
jno
or
xor
cmp
cmp
fcompl
loop
loopne
mov
ja
aas
jp
shrl
in
lods
cwtl
dec
sbb
pop
dec
insl
jg
push
or
push
mov
jo
in
jle
dec
rcrl
dec
cltd
call
das
in
push
cmp
pop
xor
push
clc
add
jmp
stc
fwait
xlat
and
cmc
mov
in
and
ja
add
or
cmpsb
inc
outsb
shll
cmp
jge
add
out
dec
add
dec
lods
fiadds
test
repz
sti
add
adcb
rcll
push
mov
xchg
push
sub
inc
stos
aad
inc
cmp
sub
pop
mov
mov
push
ds
cmp
mov
movsb
pusha
or
imul
sbb
inc
rorl
dec
imul
pop
sti
in
enter
fisttpl
xchg
push
cmpsl
adc
in
jnp
fptan
inc
sub
movsl
xchg
cs
mov
xchg
mov
push
add
jbe
outsl
mov
vpsrlw
in
mov
pop
jecxz
push
cmp
cmp
sub
js
insb
or
and
outsl
clc
pop
push
outsl
sub
inc
adc
lea
mov
mov
jmp
or
push
cs
and
dec
cwtl
pop
aaa
mov
mov
pop
sub
les
fs
xor
mov
std
in
cmp
sub
enter
lods
divl
hlt
pop
fwait
sti
dec
or
inc
fcmovne
sbb
roll
stos
inc
mov
scas
push
mov
pop
mov
cmpsl
sub
pop
nop
cmp
call
cmc
pushf
add
imul
nop
cmpsb
rorl
pop
arpl
jbe
cmp
jmp
cmp
stos
stos
push
je
adc
leave
adc
dec
add
iret
mov
stc
mov
push
pop
movsl
je
inc
push
ljmp
pop
mov
int
jae
xchg
xchg
mov
test
movsl
and
dec
or
inc
mov
mov
std
stos
push
insb
imulb
sbb
js
jge
jg
les
pop
cltd
xor
inc
cld
add
orl
jge
xor
push
repz
or
out
cmpsl
cmp
mov
repnz
incb
xchg
sbb
movsl
mov
nop
and
aam
lcall
push
fwait
dec
sbb
pop
ljmp
sbb
xlat
pop
inc
mov
pop
lock
mov
xorps
lret
cmp
adc
cmp
sbbb
leave
jecxz
das
xor
sbb
sbb
pop
std
fld
fcmovb
sti
aas
cld
pushf
xchg
movb
fisubl
xor
div
pop
aad
test
xchg
sarb
mov
daa
add
rcr
aas
lock
aam
cmpsb
outsb
sbb
mull
das
fcomip
in
push
xchg
popf
dec
mov
dec
into
cs
loop
or
add
and
leave
mov
jmp
in
bound
ljmp
repz
cmpsb
pop
dec
sub
xchg
inc
xchg
sub
mov
inc
rclb
in
imul
inc
pop
pop
cmc
add
cmp
xchg
mov
bound
cli
into
imul
daa
inc
clc
imul
daa
add
jns
andnps
out
cmp
xor
push
or
and
mov
into
ret
inc
testl
inc
mov
ja
in
mov
test
mov
jl
fcomps
jne
mov
pop
sbb
sbb
xor
jg
pushw
xchg
and
test
andb
fisubl
mov
and
push
inc
jns
xchg
cs
mov
mov
sub
pop
stos
lret
repnz
inc
jbe
mov
rcr
inc
addb
sahf
add
mov
test
in
cltd
dec
test
xor
mov
mov
mov
dec
push
dec
aaa
adc
mov
arpl
and
xchg
loope
mov
sub
sub
lcall
incb
adc
mov
sub
add
and
mov
incl
add
mov
dec
xor
cmp
push
xchg
mov
jne
mov
aad
inc
divb
inc
or
outsl
fsubs
es
dec
xchg
fildl
aas
inc
insl
iret
jl
out
jo
enter
pop
pop
negb
fstpl
fs
lret
xor
stc
pop
icebp
mov
das
insl
dec
sub
pop
les
aas
xchg
sbb
push
cmp
xchg
mov
cmp
lock
push
jle
daa
pop
or
sub
fcmovb
int
mov
and
mov
out
xor
xchg
mov
shl
and
test
or
push
stos
xchg
add
popa
cmpl
jbe
movb
add
jle
roll
test
pop
insb
pop
jl
popa
fcmovne
pop
loopne
or
pop
in
mov
push
popa
or
incl
popf
jo
push
add
push
sbb
xor
mov
in
fwait
into
jnp
negl
push
mov
mov
jbe
mov
push
inc
add
insl
xchg
jle
lods
sbb
gs
popa
cs
inc
mov
sub
lea
mov
adc
xchg
push
mov
adc
fcmovu
cmc
rol
jmp
mov
aad
mov
cmp
mov
dec
sub
inc
mov
les
dec
sti
insb
repz
daa
loope
nopl
into
dec
push
mov
lahf
dec
int
mov
pop
push
push
inc
sub
mov
push
out
jle
adc
out
adc
ficompl
rolb
std
xor
jp
cld
jbe
outsl
lret
push
xor
inc
pop
jns
stc
jg
movsl
fcmovnbe
mov
lds
or
mov
andl
loope
push
stos
add
imul
ret
test
cs
stc
rcrb
dec
add
or
shll
pushf
repnz
pushf
mov
xchg
cld
cmp
sbb
lods
sbb
add
mov
and
sbb
pop
cmpsl
lahf
dec
inc
fldenv
movsb
dec
dec
hlt
test
add
jae
mov
xchg
icebp
loop
adc
popf
pushf
push
or
scas
mov
dec
mov
es
push
mov
jno
dec
ljmp
pop
or
icebp
adc
sub
mov
push
ror
mov
iret
add
shlb
xlat
dec
js
dec
ss
pop
mov
test
in
lret
out
arpl
or
imul
pushw
mov
aam
adc
lahf
ret
int3
dec
sub
push
push
inc
adc
sbb
fdivr
test
in
jmp
push
xchg
dec
je
inc
push
bound
sbb
ficomps
dec
lret
mov
test
xchg
mov
arpl
aad
mov
lret
inc
out
pop
test
out
add
sbb
xchg
aad
out
mov
imul
jns
xor
mul
jecxz
inc
xchg
shlb
jbe
xchg
mov
pop
gs
xor
and
sub
add
xchg
out
scas
push
enter
js
shll
push
hlt
and
mov
hlt
out
stc
and
hlt
pop
iret
movsl
int3
xlat
leave
xor
inc
dec
xchg
mov
adc
cmp
add
pop
ljmp
popf
loopne
xchg
inc
adc
dec
or
addr16
dec
jle
xchg
inc
shl
sub
sbb
jl
add
jns
sub
addr16
and
mov
add
test
arpl
sbb
jge
xchg
sbb
dec
mov
enter
ret
pop
inc
out
pop
shlb
faddp
xor
push
mov
stos
cmc
out
dec
push
arpl
pushf
rcrl
hlt
into
fs
or
mov
push
dec
fcmovnu
ret
movsl
orb
sub
scas
pop
fldenv
cmpb
mov
ss
ret
add
sub
lock
je
mov
jmp
sbb
pop
and
mov
clc
in
fcoms
fisubl
add
out
pusha
mulb
xchg
push
cwtl
popf
mov
jns
call
sbb
mov
xchg
sub
data16
jecxz
cmp
push
mov
adc
orl
movsl
push
addr16
jbe
xor
pop
mov
loope
cpuid
lods
pop
sub
mov
xor
or
adc
push
sbb
or
shr
add
sub
testl
jnp
fadd
pop
mov
sbbl
not
push
inc
jmp
cmp
xchg
ss
sub
cmpsb
loope
cmp
or
lret
xchg
cli
out
and
xchg
int3
cmpxchg
aam
jg
in
jns
pop
jno
stos
pop
sbb
test
rcrb
ret
shll
into
in
push
push
arpl
loop
lock
cld
imulb
dec
xor
push
mov
jg
mov
jae
lods
mov
jb
lcall
out
das
ficoms
mov
ljmp
js
roll
daa
push
or
flds
call
es
mov
outsb
movsb
xchg
and
mov
faddp
add
cli
pusha
sbb
push
repz
xlat
cmp
enter
cmp
inc
imul
das
pop
xchg
jo
lahf
cld
mov
popa
imul
pop
icebp
xor
jns
mov
int
popf
adc
nop
faddl
cli
sub
xor
popa
jno
mov
push
inc
mov
add
xchg
sbb
inc
or
add
add
xor
pop
rorl
push
mov
daa
loope
and
out
dec
and
jae
lods
pop
int
push
inc
jg
push
js
daa
mov
xchg
les
adc
aam
mov
inc
mov
inc
mov
mull
and
sub
xchg
stos
cmp
cmp
mov
roll
repnz
cmp
or
pop
test
mov
mov
xchg
inc
pop
lea
les
push
pop
pop
pop
pop
mov
pop
ja
jp
sub
dec
add
xor
pop
daa
stos
push
xchg
int
mov
cmp
add
jae
adc
insb
dec
flds
push
cmp
inc
sbb
mov
scas
xchg
push
out
push
mov
add
sbb
cwtl
xchg
lea
int
push
js
inc
mov
sub
std
arpl
add
mov
imul
add
jg
js
shr
xchg
in
mov
jmp
mov
jecxz
and
fs
mov
scas
sub
jno
mov
xchg
imul
dec
cmpl
cmp
aas
rclb
adc
jo
sbb
add
inc
iret
dec
jecxz
and
jne
sbb
xor
les
loop
ds
sbb
fiadds
sub
lcall
sub
fldt
stos
add
xor
test
out
sbb
sbb
pop
push
stc
aas
push
jnp
mov
xchg
mov
ficompl
or
sub
into
stc
xor
mov
or
fwait
add
imul
in
cmp
xchg
shlb
mov
je
sbb
cwtl
stos
and
push
add
pop
movsb
rolb
adc
je
imul
ret
fwait
push
mov
outsb
mov
push
ja
xor
shrb
jg
cli
inc
and
jle
ficoml
sbb
aas
in
pop
fucomi
jbe
push
add
or
xlat
and
in
and
test
loop
jae
xchg
xor
or
pushf
mov
or
cmp
dec
gs
jne
inc
mov
jae
ja
mov
or
cmp
pmaddwd
testl
imull
cmp
rcll
pop
jns
or
test
adc
mov
or
sub
in
mov
scas
repnz
pop
les
pop
addr16
rclb
lret
popf
dec
cmp
or
mov
std
leave
cs
pop
lods
adc
mov
pop
shlb
jmp
ret
scas
dec
push
inc
or
mov
xchg
dec
out
lods
mov
ja
wbinvd
aam
mov
ljmp
dec
fcmovnbe
outsb
pop
cwtl
into
into
mov
stos
notb
push
mov
mov
outsb
aam
push
lods
xchg
movsb
push
fisubrs
cmp
mov
jae
jnp
lds
push
add
scas
or
and
sbb
inc
jg
xor
adc
sub
testl
in
xor
jle
fistpl
fstps
cmp
inc
or
arpl
or
sbb
shrb
mov
repz
in
incb
adc
nop
mov
jmp
mov
dec
aaa
mov
pop
loope
aam
orl
int
cmc
xchg
mov
aas
mov
mov
or
dec
leave
push
enter
jmp
wrmsr
push
or
sbb
ljmp
sbb
test
jmp
notb
filds
mov
aaa
cld
jl
and
xor
je
sbb
and
xchg
loope
mov
data16
lahf
dec
add
jns
add
jl
lods
pop
shll
cmp
je
div
mov
xor
push
lds
hlt
mov
mov
outsb
sahf
jle
jo
std
pop
loopne
mov
xor
xchg
adc
xchg
insb
in
int3
enter
xor
mov
addr16
inc
pop
sbb
or
iret
shll
daa
add
dec
mov
cmp
lds
push
xchg
addr16
mov
call
test
mov
mov
mov
testl
ret
fimuls
or
xchg
xor
mov
jo
xlat
cld
push
int3
push
mov
insb
mov
movb
lret
repnz
enter
cmp
sti
aas
bound
insl
pushf
outsl
adc
loopne
cmpxchg
or
orl
scas
movb
sub
push
jb
fnsave
js
add
cli
negb
dec
jo
in
dec
add
imul
add
mov
ss
aad
outsb
push
aaa
cmp
sub
push
ds
out
cli
in
popa
aad
pop
fdivrl
xlat
mov
cmp
shr
fs
stc
fidivs
mov
movsl
adcb
int3
jmp
xchg
fisttpll
jle
insb
jp
jp
sub
repz
push
pop
jbe
orb
icebp
add
jge
sarb
fnstsw
push
int
imul
lret
mov
sub
fcomip
and
xchg
push
and
aas
lods
xor
addr16
inc
dec
cmp
insb
pop
das
clc
fildll
mov
or
dec
push
sbb
ret
ret
ror
mov
xchg
in
add
lds
mov
mov
nop
cmp
arpl
sbb
mov
cmpsb
ret
xor
repnz
ss
mov
or
pop
mov
cld
push
cmc
cmpsb
loope
inc
in
xchg
cs
add
inc
jae
outsb
imul
fisttps
mov
jecxz
das
ret
jnp
rcll
xchg
or
mov
push
xlat
andb
lret
lods
pop
pop
cmp
adc
ficoml
fnstenv
or
movaps
jp
jnp
mov
aam
stc
lahf
add
xchg
add
jp
dec
inc
cmpsb
call
mov
jo
adc
cli
loop
shll
shll
insb
lds
cmp
subl
sub
rol
adc
cmpsl
pop
xchg
daa
cmp
lahf
lcall
or
out
hlt
pop
mov
pop
mov
fstpt
sbb
pop
mov
and
push
xchg
pop
xlat
xor
lods
inc
out
cmc
xchg
sbb
lods
stc
mov
adc
inc
sub
ret
pop
jns
in
lods
ret
inc
or
testl
mov
inc
adc
inc
sti
nop
cmpsb
shrb
mov
pop
inc
popl
jbe
xchg
push
in
xchg
addr16
jnp
jmp
push
mov
inc
sub
or
add
inc
loope
jns
cwtl
mov
dec
and
mov
cmp
xor
jle
xor
mov
scas
mov
cmp
cmc
ficoml
enter
push
sub
cmp
sub
mov
out
mov
clc
icebp
mov
repz
test
fiaddl
aam
jno
jo
sub
aad
mov
and
xchg
call
in
mov
sub
cmpsl
cmpb
hlt
mov
sub
insb
pop
sub
loopne
jb
xchg
jo
inc
sub
jle
cli
dec
mov
inc
mov
mov
push
das
movsl
push
sbb
mov
rorb
iret
mov
sub
push
push
lahf
je
aam
adc
push
add
daa
mov
cmp
cmp
popa
popf
sbb
sub
into
cmc
add
pop
add
pop
lock
loopne
inc
mov
lds
orl
out
lods
jecxz
xchg
add
loope
lock
mov
aam
icebp
sub
jmp
jl
jg
sub
mov
sub
sub
aaa
jno
dec
mov
pop
lea
daa
cwtl
in
mov
loopne
xor
pop
sub
and
mov
mov
andnps
mov
dec
sbb
out
scas
jnp,pn
pop
ret
and
popf
je
popf
clc
outsb
lahf
inc
or
mov
shlb
dec
push
add
and
xor
stos
jo
out
subb
mov
pop
out
inc
aam
test
test
push
outsb
ljmp
stc
subl
push
inc
subb
stos
push
and
fs
fsts
iret
mov
fcomps
out
cmp
xchg
movhps
or
xor
pusha
lods
stos
out
jae
jae
adc
aam
xor
mov
sub
fidivl
jl
icebp
movq
aad
aad
jo
mov
adc
bnd
inc
xor
pusha
pop
mov
iret
jne
or
lret
fistpl
sar
add
scas
adc
xlat
fcompl
mov
adc
out
or
cmpsl
lret
push
repz
fstl
jnp
sahf
xchg
mov
lahf
pusha
sub
mov
xor
andl
js
xchg
nop
push
out
std
push
ret
cmp
lret
pop
push
and
hlt
cwtl
sub
push
or
repz
outsb
call
ss
xchg
hlt
xchg
repnz
and
mov
and
aam
cwtl
jo
pop
pop
push
xlat
ss
or
cmp
push
xor
xor
leave
jbe
jae
shlb
mov
jmp
repz
adc
jns
mov
inc
rcr
imul
nop
xchg
jle
adc
gs
cmpsb
aad
arpl
xchg
push
out
push
sub
and
push
mov
movb
imull
sub
in
adc
insb
test
jae
add
jl
and
cli
das
dec
je
sbb
add
outsb
sub
push
fiadds
enter
movsb
push
in
sub
fwait
in
repz
push
rclb
das
adc
shrl
pusha
enter
ret
js
adc
pop
rorb
scas
int
push
lds
cmc
and
or
subb
out
mov
stos
pop
fisubrl
call
mov
sbb
lcall
push
adc
push
ss
loopne
and
push
sub
mov
sub
inc
loope
cmp
in
push
push
pop
test
xor
mov
and
ret
cmc
push
scas
mov
lds
mov
mov
fsubrs
xor
xor
xor
push
mov
jg
push
pop
dec
ret
xlat
sti
imul
dec
bound
mov
pop
ljmp
das
mov
dec
pop
sbb
dec
out
addr16
or
dec
fidivrl
sbb
sub
mov
orl
pop
push
cmp
fwait
mov
dec
push
dec
outsb
aad
push
mov
xlat
add
repz
push
xor
test
icebp
cmp
pop
xor
mov
call
inc
cmp
jbe
and
jne
imul
or
mov
sub
xchg
jp
inc
sahf
xor
pop
mov
lret
mov
push
inc
mulb
nop
adcl
shll
lea
test
scas
pop
xchg
xchg
in
inc
gs
pop
xchg
mov
lods
call
loopne
adc
xorl
or
push
jmp
xlat
and
or
xchg
hlt
or
lahf
cmp
push
push
inc
fcomip
pop
dec
mov
lret
lahf
leave
mov
fidivrs
xor
push
pop
jb
mov
push
les
pop
popf
sub
ror
incl
mov
cwtl
xor
cmp
and
scas
data16
insb
pop
insb
and
jo
mov
or
fisttpll
pop
adc
push
xchg
popa
leave
mov
add
sub
and
jmp
mov
or
dec
sbb
aaa
out
bound
imul
add
enter
jle
add
in
mov
sub
jmp
addl
stos
imul
outsl
mov
push
xor
sti
lods
call
mov
loopne
aad
insl
rolb
lret
mov
loop
pop
out
mov
fstps
inc
scas
decl
lods
sub
vrcpss
fisttpl
cmovbe
imul
jle
inc
jle
mov
dec
xor
movsb
cmp
fdivl
jg
xor
in
mov
in
fwait
lds
bound
outsl
fdivrl
in
into
daa
cld
sbb
imul
mov
testb
mov
add
jnp
sarb
pop
add
mov
lret
cwtl
repnz
push
insl
adc
inc
jp
lock
rcrb
in
inc
outsb
pop
shll
and
into
and
push
xchg
cwtl
insl
add
sbb
ss
in
pop
mov
jg
lea
shlb
sub
ret
dec
and
ret
jle
mov
cmc
scas
xor
ljmp
je
dec
stos
std
lods
push
mov
adc
std
xchg
push
or
push
iret
push
int3
sub
push
sbb
mov
gs
mov
popf
test
jecxz
add
inc
pushf
pop
std
add
shrl
repz
stos
xchg
mov
pop
mov
mov
or
mov
jne
dec
pop
inc
xor
add
addr16
fwait
loopne
and
mov
adc
cmp
jb
getsec
push
iret
dec
mov
mov
sbb
jnp
lret
popa
data16
mov
outsl
clc
jl
ja
jb
inc
push
xor
jp
push
push
loop
inc
mov
or
daa
mov
out
mov
outsl
sbb
dec
adc
dec
mov
out
test
mov
outsl
movsb
test
andps
xlat
and
sbb
loop
or
pop
adc
addl
lods
jb
adc
pop
dec
fisttpl
filds
testb
xor
outsb
xchg
cld
mov
in
lock
callw
jmp
dec
pop
mov
mov
pop
out
enter
push
mov
popf
insb
lock
insl
cwtl
dec
in
jns
xchg
inc
jge
add
shl
xor
jne
mov
or
int3
mov
arpl
sarb
data16
or
add
sub
shl
out
insb
fstps
push
mov
fisubrs
jge
mov
ss
xor
inc
inc
xchg
mov
sub
decb
push
outsb
nop
fistpll
push
mov
pop
mov
xor
dec
aam
lahf
popf
inc
mov
inc
imul
push
sbb
ja
jmp
jge
cmpl
ret
scas
pop
cltd
or
cmp
dec
sahf
push
dec
add
inc
scas
sub
pusha
fisttpl
sti
test
movl
jo
mov
test
stos
int3
int
in
adc
es
add
mov
jp
out
pop
inc
sub
mov
adc
shlb
shll
adc
sbb
ljmp
xor
push
cmpsl
cmpsl
or
xor
shlb
xchg
cld
test
movsl
sahf
xchg
imul
pop
ja
addr16
push
add
popa
push
pop
cmp
sbb
js
cmp
xchg
nop
cmpsl
arpl
xchg
pop
dec
insb
leave
dec
jo
pop
and
fcoms
push
loope
xchg
adc
xchg
repz
push
sub
addb
xor
in
or
mov
lret
jnp
mov
add
push
mov
movsl
in
pop
ret
adc
push
outsl
movsb
insb
stos
jnp
or
jno
mov
icebp
ss
icebp
mov
ljmp
fdiv
jmp
lcall
and
inc
add
xchg
mov
xchg
sbbl
add
or
addr16
mov
shlb
adc
in
ret
loopne
ret
movsb
mov
dec
add
xor
arpl
aaa
mov
xchg
out
sahf
cmp
push
out
jge
push
fdivl
sbb
std
shll
js
mov
pop
pop
insl
je
loop
push
cmpsb
dec
out
push
cmp
fcoml
jl
cmp
stos
fdivs
stos
into
sbb
int
clc
jns
sbb
inc
loope
daa
mov
adc
movsb
aas
push
mov
xchg
push
inc
dec
push
les
jb
jle
jno
xchg
xchg
fcomps
sbbl
jns
push
jmp
push
fstl
pop
dec
jbe
or
or
and
dec
movsl
pop
xor
lods
add
loopne
clc
push
movsl
xbegin
add
cmp
ljmp
jno
sbb
scas
jmp
fildl
in
divl
push
lret
mov
jge
jo
fs
mov
loope
mov
xchg
and
shll
lea
xchg
jg
and
mov
popf
hlt
je
icebp
inc
das
mov
sub
push
mov
sub
dec
inc
push
insb
jns
test
jmp
mov
jne
xchg
fisttpll
cmpsb
lcall
fisttpll
rorb
jp
sbb
inc
adc
mov
enter
push
dec
sbb
negb
out
imul
mov
push
test
push
sub
xchg
lods
or
adc
xchg
sbb
sub
in
rclb
pop
and
push
mov
add
dec
lcall
xor
mov
cmp
into
add
enter
dec
jns
lods
sbb
adc
out
xchg
ficoml
orl
loopne
popf
mov
in
and
mov
and
lahf
icebp
js
cltd
sub
loopne
pop
add
cli
rorb
stc
xor
fcoms
sbb
lds
xor
mov
call
mov
test
aaa
mov
xchg
dec
std
mov
js
dec
sbb
stos
lods
fs
ss
mov
push
test
stos
ret
mov
daa
pop
daa
or
inc
cli
dec
pop
aad
jae
movb
inc
sbb
hlt
or
jle
cmc
push
cld
mov
xchg
xchg
push
test
inc
mov
stos
pop
les
mov
sbb
sti
mov
cld
pop
aas
jp
adc
mov
xor
loop
test
daa
push
jns
push
adc
add
out
xlat
ja
inc
iret
and
xlat
pop
aam
rcrb
ds
mov
fdivr
pusha
test
mov
les
pop
addl
cmp
jge
adc
and
enter
jne
mov
inc
xchg
push
sub
subb
ss
out
jge
fwait
push
fwait
lcall
xchg
in
sbb
shlb
enter
xchg
shlb
push
push
gs
fwait
pop
adc
movsl
pop
sbb
dec
lds
and
lock
daa
xchg
rcll
in
sub
push
push
sub
inc
inc
sbb
jp
sub
bound
incb
push
lea
dec
sbb
push
inc
lods
movsl
dec
mov
orb
in
insl
ret
or
adc
sbb
inc
xlat
push
fldl
push
mov
rclb
adc
mov
or
jmp
leave
xlat
popa
fadds
das
inc
dec
aaa
frstpm(287
mov
and
or
cmp
lcall
arpl
cmp
fldcw
sub
xor
fsubs
movsb
adc
adc
push
and
outsl
mov
xor
jno
fstpl
push
xor
pop
rorl
mov
jnp
insb
iret
cmp
or
out
fsubrl
mov
jo
adc
ja
stos
cmpb
jno
lods
inc
sub
mov
cmpb
enter
jmp
add
ljmp
push
aas
push
push
pop
aad
imul
mov
rcl
xchg
pop
pop
mov
sahf
inc
fs
sbb
fnstcw
mov
in
scas
adc
push
pop
outsl
cmp
mov
mov
mov
cmpsl
mov
inc
adc
pop
js
shl
xchg
sub
xor
jne
ss
pop
pminsw
movsl
xorb
enter
push
dec
xchg
add
aas
mov
and
lds
lods
stos
js
ljmp
in
or
pop
gs
sub
pop
lea
add
dec
jecxz
mov
movsb
mov
lret
sbb
jbe
mov
icebp
call
mov
repnz
dec
cmp
std
mov
and
repz
rcll
scas
sahf
mov
sbb
ficomps
xor
js
in
or
dec
pop
mov
cwtl
outsb
popf
cmp
and
inc
shll
in
dec
shrl
jge
jg
pusha
insb
stos
jl
mov
pushf
push
add
jl
push
pop
imul
cwtl
jno
or
jmp
js
fsubr
mov
pop
out
mov
dec
pcmpeqb
imul
call
pop
pop
lds
mov
or
push
sub
cmp
adc
arpl
mov
shrl
mov
addb
inc
mov
sahf
testl
insl
das
push
push
jp
cmc
das
sub
inc
jnp
lahf
sahf
bound
mov
int
jg
xchg
mov
in
lea
xor
insl
data16
sbb
iret
hlt
movq
pop
clc
add
mov
mov
inc
js
cmpsb
push
std
cmp
xchg
repnz
pushf
jmp
sub
push
das
mov
ja
loop
xor
fiaddl
lods
in
out
lcall
das
and
pusha
popa
enter
add
movsb
enter
int3
hlt
loop
aam
pop
pusha
jbe
inc
sub
adc
scas
or
cmp
cmp
dec
cmp
sbb
ss
pop
xchg
decl
insb
xor
mov
movsl
xchg
fdivl
icebp
xchg
cmp
std
leave
out
mov
mov
popf
sub
in
or
clc
decl
sbb
std
lea
in
ret
jle
inc
sbb
test
dec
mov
xor
xchg
js
jae
mov
xchg
mov
gs
ret
rorb
ljmp
test
js
pusha
add
jecxz
ljmp
lcall
xchg
in
fnsave
test
cmp
push
jp
xor
and
out
and
or
fildl
push
jg
mov
push
nop
mov
mul
icebp
aas
mov
xor
xor
mov
lock
xor
hlt
push
aas
mov
out
mov
js
add
mov
sub
fidivrl
cmpsb
repnz
negl
inc
sub
mov
jne
das
iret
inc
test
sbb
inc
inc
push
loop
movsl
fdivl
xor
shrl
test
mov
mov
aas
sarb
sub
cmp
mov
enter
imul
sub
add
fnstenv
sti
cli
enter
ss
movd
icebp
imul
stc
call
mov
aaa
jbe
add
mov
out
dec
ficompl
vpcomub
insl
or
out
cltd
lahf
lock
imul
add
cmp
stos
aad
dec
mov
jge
outsb
and
sahf
jno
rorb
popf
icebp
mov
ss
mov
sbb
in
sub
mov
iret
mov
dec
repz
insb
imul
std
nop
sbb
add
loope
cmp
test
jp
xchg
add
andl
fs
cwtl
std
mov
cmpsb
mov
dec
pop
popf
aas
dec
outsl
daa
jecxz
push
mov
stos
es
pop
es
jl
orb
jp
repz
mov
negl
mov
push
nop
xor
inc
call
out
mov
loop
mov
cmp
xchg
test
sub
fisttpll
xorb
std
adc
mov
or
push
ja,pt
mov
mov
loope
call
dec
pop
add
and
flds
add
dec
ja
or
stos
push
fnstcw
pop
cltd
sahf
or
mov
cmpsl
aas
pop
cmp
std
test
out
shl
mov
and
adc
js
cmp
adc
addr16
jg
stos
int3
jb
push
jecxz
and
out
sub
sbb
in
cmpsb
lret
data16
fistl
add
icebp
movsl
cmpsb
movsl
lds
nop
insl
aam
dec
pop
mov
dec
out
enter
and
sarl
orb
cmpsl
out
loop
pop
aaa
mov
xor
in
cmpb
and
mov
dec
mov
mov
mov
imul
loop
loopne
adc
or
jmp
incl
sbb
cmpsb
int3
xchg
or
cmp
mov
xor
push
adc
jge
mov
dec
out
fsts
pop
jl
fnstenv
xchg
xchg
cmp
jno
pop
jno
lds
rolb
fsts
hlt
pop
loope
push
adc
cmp
or
inc
mov
sbb
pusha
lahf
icebp
repz
addr16
sti
cmpsb
mov
lock
insb
push
lcall
mov
mov
xchg
mov
loopne
cld
push
xor
pusha
jne
jmp
or
lcall
loope
xor
mov
int3
push
shrb
popa
ja
daa
xchg
stc
out
fndisi(8087
xchg
inc
mov
negl
rcr
addb
jg
xor
mov
test
fnstsw
in
jo
cli
lea
insl
test
xchg
in
adcl
xor
mov
fadds
fidivrs
push
xchg
jle
dec
jo
mov
or
popf
cmc
jns
movsb
add
inc
xchg
dec
icebp
fadds
jne
cs
arpl
lds
push
testl
or
dec
mov
jl
push
scas
cli
mulb
ljmp
xchg
mov
inc
dec
xchg
iret
imul
xor
js
aam
outsb
imul
ja
inc
ret
or
jbe
pushf
jnp
sub
movsb
fnstcw
mov
inc
rclb
or
jnp
jmp
fbld
and
and
lock
fsubr
lea
int
inc
sbb
pop
push
xlat
loop
add
popf
out
mov
imul
or
jp
clc
pushf
cmp
mov
pusha
inc
adc
inc
cmp
es
mov
push
fnstenv
cwtl
jecxz
jno
lods
inc
mov
adc
stc
or
xorb
in
outsb
negb
dec
ljmp
clc
repnz
pop
in
jnp
cmp
jae
inc
rorl
sbb
pop
mov
mov
jnp
out
mov
xlat
out
push
or
out
or
sub
cmp
mov
ss
xchg
stc
adc
mov
jo
xchg
push
pop
add
mov
sbb
les
es
push
ljmp
lea
pop
lock
in
xchg
add
cltd
mov
sub
mov
daa
pop
sar
aaa
std
cmp
pop
popa
mov
xchg
jecxz
rorb
xchg
loop
out
push
insl
fcompl
hlt
push
pusha
or
xchg
cli
mov
dec
hlt
jp
mov
int
push
xchg
outsb
or
jo
inc
fidivrs
xor
cmp
inc
test
mov
mov
ret
mov
jno
popa
mov
js
mov
pop
fimuls
stos
add
and
mov
mov
cmp
inc
mov
dec
sub
xchg
dec
jecxz
bound
xor
jo
mov
or
lahf
adc
or
in
dec
xlat
fmuls
das
sbb
clc
int
pop
lcall
jno
fwait
jnp
or
sbb
mov
pop
mov
lcall
adc
fucomip
inc
xlat
mov
idiv
mov
psubq
mov
dec
dec
xchg
xor
scas
push
data16
hlt
jo
dec
ljmp
icebp
movsl
popa
cli
es
lds
dec
adc
jnp
mov
inc
scas
and
push
lret
pop
adc
ds
pop
xchg
push
pusha
imul
ret
stc
cmp
sub
popf
aad
mov
out
add
dec
pop
fbstp
adc
cltd
inc
push
xor
mov
xorl
jmp
ss
js
push
dec
adc
push
jbe
jno
dec
push
and
and
lods
and
pop
ret
adc
xchg
cmpsb
adc
adc
repnz
pusha
mov
fisubl
mov
and
dec
mov
repnz
scas
add
cmpsl
jae
xchg
test
test
cmp
push
dec
icebp
xchg
hlt
js
dec
cmpb
add
addb
mov
jns
push
or
mov
mov
jecxz
insl
mov
imul
les
pop
mov
add
mov
iret
cmpsb
jb
xchg
add
sbb
std
test
mov
inc
add
sbb
mov
add
jbe
mov
fs
add
or
and
fsubl
in
and
add
cltd
mov
js
in
cmp
sahf
lcall
jecxz
js
xor
shll
and
out
movsb
aas
cltd
outsb
je
dec
mov
sti
dec
sarb
test
mov
sub
cmp
or
cmpsb
pop
add
inc
mov
and
lea
out
adc
movsb
out
lret
es
or
mov
mov
loope
mov
insl
ficompl
xlat
adc
pop
push
pop
adc
push
jbe
pushf
sub
outsb
mov
mov
push
sub
ljmp
sti
mov
insl
sub
out
dec
adc
jmp
outsb
pop
pushf
sbbb
aad
push
sub
clc
ljmp
sbb
mov
ja
int3
inc
mov
inc
fcoml
fldenv
add
call
leave
insl
mov
and
inc
jecxz
xchg
data16
std
fdivs
xor
inc
inc
jge
arpl
inc
insb
or
arpl
xchg
add
addl
roll
fsubrp
jns
pop
and
test
adc
insb
inc
push
sbb
repnz
push
out
or
cmpsl
fdivrl
dec
mov
lods
fmuls
enter
mov
mov
shrb
ret
and
flds
es
pop
imul
dec
jnp
push
pop
push
stos
adcb
mov
mov
cs
cli
insb
icebp
or
js
aam
loope
fs
aad
lods
movsb
cli
mov
mov
insl
rcll
lret
dec
pop
fs
fistps
or
divb
stos
ja
jbe
add
imull
push
jge
jl
push
mov
pusha
xchg
and
pop
mov
cmp
scas
mov
mov
adc
mov
cwtl
sbb
cmc
push
ds
dec
rcrw
icebp
cltd
pop
mov
sub
and
movsl
add
mov
sub
test
dec
mov
shl
fxch
fwait
xor
inc
pop
lods
push
fs
out
aas
adc
cmc
scas
dec
divb
xor
imul
and
and
shl
ss
xchg
shll
into
clc
test
in
push
cmc
test
jne
cvtps2pd
sti
sbb
les
les
fsts
cld
pop
jmp
decl
test
and
subb
jb
frstor
hlt
jb
jnp
sarl
pop
jl
mov
mov
and
mov
cs
dec
movsb
addr16
push
jo
ds
sti
cltd
lret
mov
ret
imulb
cmp
cmpsl
mov
add
fildll
frstor
ja
loopne
cmp
push
in
mov
add
mov
mov
sub
dec
cmpsb
mov
xchg
adcb
mov
loopne
mov
xor
popf
mov
adc
add
or
dec
xchg
xchg
out
mov
push
fdivrs
movsb
push
xlat
or
cmpb
je
sbb
dec
in
xor
mov
insl
adc
or
aad
cli
mov
xlat
pop
ret
add
outsl
les
cmp
ljmp
scas
bound
aas
das
and
inc
push
lahf
shlb
in
dec
pop
in
or
or
icebp
in
cmp
jmp
pop
or
lds
cmpsb
xchg
imul
cmpsb
sub
mov
pop
add
mov
gs
mov
rcrl
mov
dec
loop
pop
popa
pop
scas
test
sub
hlt
out
stos
outsl
jecxz
push
sbb
out
stc
mov
mov
push
xchg
hlt
add
lahf
lods
push
inc
fistpll
pop
mov
mov
addr16
out
xor
sbb
pop
or
leave
pop
jne
subb
ret
sbb
fstpt
dec
es
ret
cwtl
into
xor
rol
dec
add
sub
test
pop
mov
clc
hlt
inc
xchg
and
out
clts
xor
lcall
dec
aam
xchg
sub
inc
cmp
jbe
jnp
sub
sub
mov
cs
sub
pusha
sti
cmp
clc
dec
bound
das
mov
pop
mov
mov
sub
lahf
pop
fwait
lds
add
push
mov
fsub
shlb
lret
or
sahf
and
js
cmp
jnp
out
pop
clc
and
lcall
ret
xor
mov
sub
and
mov
push
daa
stc
outsl
xor
mov
lretw
mov
sub
aas
add
out
icebp
jl
pop
stos
int
pusha
ja
xor
daa
popa
sbbb
andb
jmp
jle
les
dec
xorl
lcall
loope
mov
sarb
test
test
out
gs
ds
sarl
repz
pop
mov
jle
stos
add
imull
loop
jns
jp
add
fbld
mov
loope
jmp
cmp
jo
jns
aam
mov
mov
sub
mov
loop
or
xor
push
mov
and
cmpsl
mov
mov
jp
cltd
or
sbb
adc
mov
outsb
add
push
repnz
xchg
push
lahf
rcrl
out
xchg
push
mov
jno
mov
faddp
int3
lea
mov
jae
decl
cmp
xchg
imul
adc
out
add
lods
jns
sbbl
gs
jl
in
enter
imul
fwait
cmp
enter
pop
xor
data16
inc
popa
fs
or
cmp
call
adc
and
jb
xchg
or
xor
sbb
cmpsl
mov
add
inc
sub
inc
in
lds
mov
mov
dec
cmpsb
mov
push
or
call
int3
sbbl
sahf
jo
pop
inc
mov
inc
mov
sbb
cmpsl
mov
mov
or
movsl
ds
mov
push
or
push
dec
or
incb
mov
gs
insl
dec
jb
in
je
in
lods
cld
fidivrl
pop
add
mov
or
sub
or
xchg
jge
insb
xchg
je
loop
sbbb
xchg
lods
jae
fnstcw
call
aaa
jbe
lods
add
add
aad
adc
sbb
add
stos
inc
lea
and
xchg
imul
test
push
jg
je
repz
loope
ja
or
jle
test
outsb
mov
cld
rcrb
inc
mov
xor
test
repz
aaa
xchg
sub
xor
test
jecxz
gs
inc
arpl
mov
adc
mov
rcll
icebp
mov
loop
lahf
xchg
inc
jne
int
add
adc
lcall
scas
loopne
and
dec
mov
mov
sbb
cli
cmp
data16
sub
or
push
pop
hlt
adc
push
ljmp
into
outsb
insb
fwait
xchg
adc
ja
mov
dec
loop
sarb
loope
out
aaa
notb
mov
pop
and
push
fstps
pop
sub
mov
xchg
loope
dec
pop
imul
jns
mov
int
and
popf
ljmp
inc
lea
rcl
inc
xor
std
adc
add
jae
fstpt
pusha
aas
adc
cwtl
xchg
jge
xchg
push
xor
or
loope
das
movsb
nop
icebp
cmp
leave
or
push
sub
lea
sbb
or
push
or
inc
pushf
push
test
clc
add
loopne,pn
fisubl
jnp
mov
inc
push
inc
test
or
outsb
mov
and
sarb
movsl
cmp
jne
cmpb
rclb
stos
add
dec
ja
cmp
pop
lods
stos
sarb
xor
dec
and
xchg
mov
ss
lods
fcoms
roll
cmp
test
pushf
mov
imul
negb
aas
ds
xchg
icebp
xchg
jne
stos
bound
loopne
mov
ss
push
xchg
test
jbe
dec
out
das
sbb
or
out
dec
lea
inc
popf
lcall
sbb
mov
repz
aad
outsl
cmp
jae
out
nop
shll
adc
inc
ja
pusha
lock
mov
int
sub
mov
sub
add
pop
add
and
and
cwtl
push
mov
or
and
repnz
fwait
cwtl
mull
or
and
mov
popa
add
mulb
add
fidivl
insl
out
cmp
push
or
cmpsl
mov
inc
jae
lret
jae
pop
pop
and
jg
inc
lret
pop
mov
mov
pushf
jg
xchg
imul
sbb
push
jo
dec
dec
push
sbb
decb
repz
js
movsl
xor
pop
popa
inc
mov
dec
out
push
arpl
push
jb
lret
repnz
stos
add
ret
sbb
rol
fwait
nop
mov
out
inc
adc
sub
aad
push
xchg
pop
cmovae
cmpsl
lea
dec
icebp
gs
andl
jp
shl
mov
adc
jecxz
rcl
shlb
mov
push
lea
mov
mov
lods
sbb
je
ret
mov
mov
cmp
imul
mov
clc
cld
xor
loop
imul
ret
cmp
xchg
dec
mov
packssdw
icebp
rolb
bound
mov
pop
movsb
or
fcmovbe
outsb
or
call
mov
dec
or
mov
jno
or
xchg
flds
fcomi
leave
dec
xchg
lret
mov
sub
jo
sub
out
jmp
lret
repz
ljmp
test
or
mov
cmp
jb
in
dec
and
out
aad
jecxz
push
pushf
aaa
jns
stos
shlb
shl
repz
jae
mov
imul
push
inc
test
adc
mov
imul
push
lcall
shlb
mov
pop
in
fisubrs
push
jnp
pop
push
leave
shlb
mov
adc
inc
std
push
fwait
stc
jbe
ss
lcall
in
adc
in
sub
sub
repz
sub
push
add
adc
mov
stos
inc
cmp
loope
inc
test
inc
xchg
jno
inc
lret
mov
out
sbb
in
lock
push
xchg
sti
imul
shrl
dec
push
fsts
mov
mov
push
sti
shl
and
xchg
push
adc
add
dec
das
mov
outsl
xor
test
rcll
lods
ds
push
clc
adc
xchg
dec
iret
xchg
cmp
pop
mov
jae
sub
imul
nop
xchg
xor
inc
in
repz
sti
lods
xchg
loopne
inc
sub
xchg
and
adc
pop
cmpsl
push
pushf
insb
cwtl
stc
push
sbb
push
in
out
aad
jbe
push
mov
sti
movsl
aaa
scas
sub
cld
cli
or
pop
and
iret
scas
fs
arpl
sbb
shl
mov
push
dec
mov
cmp
out
ret
out
dec
lret
inc
dec
jb
add
add
or
mov
adc
mov
cltd
lock
adc
gs
jae
sbb
pop
sub
mov
jl
dec
jmp
push
xchg
movsl
sbb
inc
pop
add
adc
and
nop
test
ja
das
scas
outsl
arpl
inc
push
roll
mov
push
pusha
gs
sbb
push
testl
ds
mov
jae
leave
mov
and
xor
inc
rcl
mov
lahf
aad
push
insl
jp
aad
cmp
sbb
cmc
push
in
jb
add
lods
imul
mov
das
push
pop
sub
mov
mov
fwait
lods
jmp
pop
inc
daa
fidivs
inc
cmp
adc
sahf
ret
sbb
xor
sub
add
clc
sbb
jne
cwtl
pop
adc
xor
mov
and
stos
andl
insb
popf
mulps
dec
fmuls
dec
xchg
jg
or
xchg
sub
orl
sub
xor
dec
sahf
and
inc
xor
jg
or
pushf
cld
mov
xchg
jle
cmpsl
bnd
jmp
das
not
ja
fiadds
jg
lea
inc
pop
fsubr
imull
stc
sub
loop
push
add
sub
test
stos
xchg
jbe
and
cmp
push
ss
cli
stos
stc
aam
cmp
or
shrb
push
xor
inc
imul
and
cmp
popa
je
repz
popf
mov
inc
push
icebp
test
scas
clc
sub
lret
fidivl
dec
jg
mov
mov
ffreep
xor
ja
pop
pop
into
test
sbb
xchg
movsl
mov
cli
xchg
fs
lea
jmp
pop
icebp
int3
xchg
cmpb
dec
std
push
ljmp
rolb
in
mov
hlt
dec
add
adcl
clc
add
pop
jmp
push
into
xchg
push
cmc
addl
testb
push
hlt
fdivrs
xchg
fcompl
in
sub
pop
sub
negb
in
cli
jmp
gs
lahf
xchg
mov
xor
xor
gs
jmp
aam
mov
or
inc
not
mov
cmp
jae
mov
rorb
adc
bound
and
jge
mov
mov
mov
sbb
and
test
int3
shrb
xor
lods
pop
cmp
pop
jae
ja
jmp
aaa
xchg
cwtl
pop
add
jo
clc
cwtl
scas
and
ds
dec
mov
xchg
jae
mov
fcom
js,pn
inc
cmpsb
cwtl
mov
lea
inc
xchg
inc
movsl
dec
aas
test
mov
jae
adc
mov
in
outsb
mov
mov
xor
loopne
dec
sahf
sbb
pop
imul
push
push
sub
mov
fsts
enter
hlt
cmp
xchg
fcom
aas
cmp
cli
mov
cmp
cwtl
dec
arpl
adc
mov
cltd
dec
mov
adc
jne
roll
add
xchg
subl
push
mov
cmp
jae
mov
inc
fwait
mov
enter
orl
push
sbb
cmpsl
xor
iret
xor
mov
and
hlt
sub
test
sbb
push
fwait
sub
das
xor
push
xor
sbb
cmp
lahf
inc
cmp
jge
ja
sbb
call
sbb
push
js
add
lds
adc
push
ss
mov
or
push
adc
sbb
push
leave
add
dec
jae
fldl
pop
lret
addl
mov
mov
mov
sbb
pusha
mov
out
xchg
adc
jb
fisubs
cs
out
sbb
rorb
sbb
mov
adc
jle
test
jbe
movsl
in
xchg
sbbb
cmp
addr16
pop
add
push
sub
test
xchg
mov
add
or
add
gs
mov
push
mov
xor
mov
std
pop
lret
das
js
push
or
ret
inc
int
stos
or
repnz
pop
ret
repnz
and
push
push
add
movsl
mov
fldt
mov
sub
cld
cld
pop
ret
cmp
cmpsl
cmp
cmc
mov
stc
ss
imul
idivl
mov
jg
dec
lods
lahf
cmc
jg
popl
or
xor
popf
cmpsb
xlat
inc
jp
lahf
cmp
lret
sub
mov
sub
adc
dec
out
lods
sbb
rorb
xchg
shrb
mov
ror
fs
pop
daa
insb
loop
sbb
daa
lock
mov
test
xor
dec
cmp
and
pop
add
lcall
insb
and
fsubl
push
mov
sub
mov
inc
xchg
lock
push
pop
hlt
pop
ror
stc
or
or
in
pop
mov
addr16
adc
call
xor
mov
dec
adc
push
mov
shrl
sbb
ret
sub
fistl
ret
add
ss
sbb
dec
and
dec
adc
mov
inc
ret
subl
jle
or
clc
addr16
mov
mov
iret
push
addr16
mov
push
clc
imul
test
movsb
les
inc
mov
sti
push
and
pusha
test
sbb
xor
push
xor
sbb
inc
mov
adc
mov
inc
imul
call
inc
popf
insb
sbb
push
mov
mov
adc
pop
pop
fstps
in
gs
dec
mov
popa
adc
jbe
xor
fwait
andl
repnz
mov
adc
sbb
cwtl
jge
push
pop
pop
mov
adc
repz
jge
xchg
iret
fisttpl
lods
test
inc
data16
faddl
movsb
jge
rorb
inc
mov
xchg
lods
pop
das
outsb
cmc
adc
aam
out
fdiv
imul
or
mov
ljmp
inc
jp
sbb
dec
scas
or
sub
xchg
cmp
fdivrl
in
jne
cmp
mov
jl
push
or
xor
mov
test
mov
and
movsl
es
dec
inc
jae
fcompl
mov
dec
and
cmpsb
fisubrl
push
aas
cmpsl
jno
sarl
aam
add
jne
mov
push
mov
and
sub
cmp
sub
pop
icebp
add
scas
lret
and
out
popf
mov
adc
xor
cmp
jge
fs
inc
inc
div
sbb
sub
aas
hlt
je
stos
repz
int
lds
push
jno
cmp
fldpi
xlat
lods
add
data16
test
insb
loope
inc
enter
sahf
test
cs
mov
daa
jae
push
pop
pop
jmp
test
inc
idivl
cs
xor
or
xor
out
add
loope
push
in
bound
fnstcw
out
and
les
or
lret
mov
jl
dec
movsl
ret
sub
or
mov
ja
push
lahf
enter
int3
fwait
or
dec
cld
addr16
pop
icebp
dec
mov
icebp
xchg
jp
and
je
imull
std
in
cmp
pop
stos
mov
sbb
rorb
nop
inc
daa
dec
push
je
jnp
jno
xchg
dec
shll
mov
mov
sbb
lea
popa
jecxz
dec
and
test
push
xchg
jmp
call
or
imul
addr16
pmaxub
pusha
and
xchg
sbb
lods
pop
mov
fistl
mov
pop
sbb
dec
popf
adc
decl
test
add
adc
cmpl
mov
or
dec
push
adc
xchg
inc
test
lcall
push
inc
xchg
cli
movsb
inc
jno
cmpsb
jne
xchg
xchg
ljmp
inc
add
lods
sbb
jmp
or
int
sahf
add
add
repz
xor
in
xor
negb
outsl
shrl
popa
stos
fdivrl
mov
mov
push
scas
cmpsl
mov
mov
pop
into
mov
ret
insb
sub
push
fcomps
add
add
repz
sub
jae
mov
and
sbb
ds
xchg
cwtl
dec
mov
lcall
adc
sti
lcall
test
mov
push
mov
test
aas
jne
cmc
push
and
pop
shlb
mov
dec
stc
add
pop
je,pt
jo
push
nop
ret
cmp
jnp
adc
push
into
fcmove
mov
inc
clc
fwait
and
jno
xchg
outsb
inc
xchg
dec
jae
aad
call
push
sbb
loop
and
int3
cmc
lret
push
fistpl
dec
ret
xor
ds
push
and
jno
push
ret
cltd
inc
loope
lock
cmp
sub
mov
repz
inc
dec
sbb
setno
mov
mov
mov
mov
imul
pop
jle
data16
xchg
jmp
imul
pop
xlat
test
mov
xlat
jno
cltd
mov
dec
stos
shrl
mov
popa
lret
rcrb
jg
mov
cmp
outsb
adc
int
inc
cs
ret
insb
push
cmpsb
xchg
pop
ret
rolb
inc
subb
jno
je
jno
into
mov
popf
inc
sbb
fsubr
cltd
or
dec
arpl
mov
popa
and
mov
in
jl
cmp
add
sbb
popa
fisubrl
sbb
call
ret
cmpsb
dec
stos
xchg
cmpsb
leave
sbb
lret
mov
xchg
cmp
icebp
test
mov
enter
push
push
int3
or
pop
je
or
mov
cmp
mov
call
and
xor
and
inc
mov
add
into
sub
loope
mov
ss
fs
test
test
fnstenv
ss
insb
stos
rolb
cmc
frstor
cli
ret
cli
jb
gs
adc
int3
mov
test
mov
dec
jmp
dec
std
js
mov
aaa
notl
push
and
mov
cmp
icebp
jae
mov
sbb
fidivs
in
fwait
and
pop
jmp
xchg
addr16
test
repz
setne
je
insl
popf
pop
hlt
fsubrl
or
aaa
mov
xchg
outsb
mov
jp
mov
ret
and
dec
out
pusha
add
fmul
cmp
xchg
xor
push
lods
cmpsl
stc
icebp
rep
ja
rorl
xchg
jp
mov
mov
clc
mov
adc
out
xchg
out
in
sarb
imul
dec
outsl
mov
mov
ret
mov
fstpl
movaps
sub
bound
xor
dec
lcall
mov
sbbl
dec
test
mov
mov
int
add
in
imul
pushl
fistps
mov
lods
in
into
xor
sbb
std
cwtl
not
push
daa
call
xchg
fists
mov
adc
pop
popf
bound
push
push
mov
mov
repz
sub
je
and
xor
int3
aas
rcrl
aas
xor
fs
sbb
iret
adc
inc
popf
mov
sahf
sbb
xchg
ss
fwait
call
test
outsl
mov
pop
mov
push
jns
lds
add
cmp
dec
xorl
pop
mov
adc
jmp
jne
shl
imul
jns
push
add
xor
xchg
mov
push
pop
int3
jl
or
pop
lret
xor
jp
enter
add
imul
and
mov
adc
ffreep
lods
push
fstpl
fbstp
cmc
mov
sub
add
and
imul
or
dec
scas
xor
sbb
xor
leave
js
lea
cwtl
mov
pop
aaa
push
and
pop
xor
inc
or
mov
test
cmpsb
xchg
imul
mov
imul
mov
and
jo
pop
push
imul
lods
cli
mov
push
imul
sarb
mov
jo
push
or
xchg
push
enter
push
xor
push
int
xor
and
aaa
jbe
mov
cmpsb
mov
pushf
mov
insb
lret
mov
aad
orl
or
insb
adc
mov
imul
dec
pusha
mov
mov
jno
push
inc
dec
inc
pushf
scas
sbb
mov
push
add
pop
std
mov
in
cmp
rol
sbb
mov
int3
or
xchg
cmp
in
aas
mov
outsw
push
cmp
pop
cs
push
mov
stos
mov
lcall
jg
addr16
push
or
mov
lods
sbb
push
mov
inc
xor
arpl
mov
xchg
cmpsb
into
pop
int
xlat
stos
xor
add
pop
mov
aam
xor
push
lock
test
pop
cltd
dec
fdivr
out
lds
mov
mov
xchg
xchg
and
sbb
mov
sub
repz
sbb
imul
mov
mov
or
sarb
jb
cmpsl
add
xchg
testb
jge
lahf
pusha
pop
mov
push
in
xor
fwait
lods
sarl
mov
push
dec
jecxz
ljmp
inc
mov
call
jbe
pop
insl
add
cs
sbb
pop
push
je
xor
int
mov
sbb
inc
enter
popf
fldt
inc
and
jne
scas
lcall
stc
enter
clc
xor
frstor
push
mov
mov
xor
or
into
jne
mov
ja
subb
mov
lock
lock
sbb
sub
xor
mov
xchg
xchg
daa
inc
mov
lock
add
dec
sbbb
xchg
adc
andb
push
mov
pop
mov
mov
repz
jno
push
mov
les
in
or
sarl
cli
fwait
or
jle
dec
pusha
cmp
pop
dec
stos
dec
cld
mov
call
out
into
push
out
or
sbb
jecxz
shrl
add
fstl
lods
add
ret
jg
scas
jl
xor
sbb
stos
mov
lods
jae
dec
adc
pop
mov
lea
add
mov
ljmp
and
xor
imul
aad
and
sub
adc
out
out
push
inc
pushw
insb
fcmovnbe
cmp
dec
xchg
ljmp
sub
dec
jbe
jp
jl
aas
repnz
nop
icebp
data16
xor
pop
out
pop
daa
or
add
xor
ss
daa
lea
dec
xchg
dec
mov
into
mov
insl
push
orl
cmpsb
and
cld
add
daa
das
mov
popa
push
xchg
add
jbe
add
sub
dec
sarb
sub
fdivl
imul
sub
int3
push
dec
or
mov
div
xchg
subb
mov
mov
stos
cmp
inc
add
rolb
fcom
in
push
iret
lcall
int3
add
xchg
inc
lock
jb
xor
divl
iret
cmp
lock
and
insl
jns
or
dec
stos
adc
daa
mov
jmp
sbb
lods
adc
pop
mov
push
mov
ret
nop
dec
mov
xor
or
cmpb
fld
pop
mov
pop
push
adc
jmp
jmp
imul
jl
fcmovbe
imul
daa
stos
cli
in
adc
ret
jl
add
cmpsl
and
pop
xchg
cltd
pop
inc
decb
xchg
cmp
mov
das
clc
ljmp
fistl
imul
cmp
std
or
das
and
mov
pop
push
loop
aaa
pop
and
ss
pushf
sbb
outsb
sbb
push
icebp
adc
repnz
mov
clc
mov
sbb
xchg
cmpsb
or
out
std
aam
scas
fcoms
sub
sbb
sub
sti
and
jae
insb
add
fistpll
cmp
mov
fsubrl
fwait
repnz
xor
loop
pop
dec
movsl
lret
fdivrp
into
fildl
sbb
add
cmp
mov
xor
loope
xchg
inc
jmp
out
inc
add
adc
xor
lret
pusha
sbb
sub
int3
inc
popa
push
or
je
dec
mov
pop
jg
sbb
nop
es
lret
clc
cld
pop
pop
xchg
gs
push
insl
mov
lret
xchg
rolb
push
or
and
xor
and
push
or
push
pop
xchg
shrb
jno
lret
adc
rcrl
mov
fcomps
in
gs
or
cmp
mov
xchg
nop
jg
outsl
int3
sahf
xchg
pop
inc
pop
fadds
lds
pop
std
pop
ret
sub
dec
jne
lock
inc
inc
sub
pop
dec
cmpsb
fsubs
push
mov
or
fnstsw
rclb
outsb
imul
ret
ja
push
jmp
test
dec
pushf
stos
cmp
adc
push
xchg
sub
jp
scas
xchg
fiadds
mov
or
dec
fidivs
arpl
add
rcrb
lret
loopne
cmp
out
mov
in
push
jp
jae
mov
cmc
xchg
dec
xor
xlat
leave
mov
rolb
mov
in
pop
mov
and
mov
add
xchg
xchg
push
cmc
mov
cli
and
cld
movsb
mov
jmp
mov
out
imul
or
push
mov
adc
lods
enter
nop
clc
cmp
ljmp
sub
adc
push
dec
in
pop
pop
in
jge
mov
cmpsl
mov
pop
dec
dec
fs
jns
inc
inc
out
sbb
nop
sbb
add
loopne
rorl
arpl
cmpsb
or
jg
or
xchg
hlt
stos
or
jns
dec
jp
clc
lods
lds
lods
or
push
data16
out
cwtl
out
mov
dec
dec
sbb
mov
and
adc
js
add
clc
ja
cmpl
shrb
add
mov
cmp
ret
mov
or
aad
leave
cmp
sbb
jecxz
push
pop
mov
imul
dec
mov
xchg
stos
jecxz
imul
in
iret
xchg
cmp
mov
push
and
out
add
xchg
jmp
std
stc
jecxz
je
rorb
sbb
shl
aad
cmc
adc
adc
sub
mov
xchg
sub
sti
mov
lods
fwait
in
cmpsl
push
vrsqrtps
add
jp
jge
and
imul
cmp
xor
mov
mov
sbb
jg
filds
ljmp
push
lcall
fdivs
ljmp
dec
repnz
mov
das
push
adc
fists
pop
pop
lcall
sahf
std
pop
push
scas
sub
lods
or
sbb
imul
stos
xor
gs
push
mov
adc
sarl
pop
sbb
out
movsb
mov
iret
js
sbb
scas
xchg
cmpl
pusha
lea
mov
in
inc
stos
rcrl
xor
and
shrb
xor
sahf
cli
bound
jmp
jo
xchg
ja
test
mov
pop
lods
into
mov
cmpsb
rcrb
inc
jmp
add
es
out
dec
dec
add
mov
enter
mov
and
clc
pop
stos
adc
aas
push
push
outsb
sbb
repnz
jno
idivb
icebp
add
jecxz
icebp
testb
mov
push
jecxz
adc
push
jns
test
sbb
rorb
out
invd
lock
or
shrb
mov
jl
stos
mov
jg
cmp
sub
insb
aam
js
jnp
aam
mov
shlb
repz
mov
js
or
push
hlt
pop
or
in
and
scas
push
xchg
adc
incb
test
lcall
in
pop
idivl
ret
lret
and
push
cmp
jnp
test
sbb
fwait
aad
mov
sub
pop
jno
mov
fiaddl
shrl
push
call
sub
add
psadbw
fisubrl
xchg
mov
cmc
in
jo
adc
cmc
movsb
mov
adcb
sbbl
inc
xor
sub
pop
xor
insl
dec
leave
sbb
or
cmpsb
roll
cs
jb
fadds
test
es
push
lea
lcall
pop
lods
push
pop
arpl
daa
pop
popa
jmp
scas
mov
cmp
jmp
jge
loope
test
jmp
insb
rorb
rolb
shl
jno
cmp
push
cli
push
adc
push
cmpsb
imul
mov
das
ja
fstps
dec
jo
or
jp
cld
mov
mov
jae
dec
mov
pop
or
out
inc
outsb
xor
bound
pop
arpl
add
dec
mov
loopne
push
iret
frstor
and
and
fcomps
mov
xorps
lret
mov
test
nop
cmp
cltd
add
outsl
ljmp
aad
sub
movsb
cmp
add
sahf
xor
push
das
cmp
out
outsl
out
cmp
mov
mov
add
xlat
xor
lahf
push
and
sbb
mov
add
jp
fs
sahf
push
or
aaa
sub
inc
and
cli
cmpsb
fwait
sbb
or
jne
insb
addb
pop
sbb
xchg
inc
push
xchg
pop
dec
fdivl
pushf
sub
add
mov
pop
or
cmp
das
mov
outsl
sbb
sbb
mov
jne
push
xchg
loop
xchg
cwtl
sahf
roll
inc
sbb
scas
mov
push
mov
repnz
mov
int
mov
out
pop
xchg
pop
cli
pop
sarb
push
jecxz
pop
cmpsl
fwait
mulb
icebp
dec
add
dec
and
mov
mov
les
fcmovbe
xor
fidivrs
movsl
fisttps
sub
hlt
mov
test
andl
rcll
xor
pushf
sbb
jecxz
call
sbb
add
push
and
sub
or
mov
mov
jecxz
adc
jge
sub
loopne
mov
xor
add
inc
mov
push
fisubl
addr16
push
dec
lret
outsb
popf
movsl
rcl
pop
pop
ljmp
adc
or
mov
mov
push
mov
push
iret
iret
in
rclb
mov
add
sbb
jp
pop
sti
sarb
mov
jle
std
stos
outsb
jae
xor
inc
jnp
cmp
outsl
sahf
or
loop
xchg
outsb
shll
cmc
mov
icebp
es
call
insl
adc
add
fs
icebp
insl
ret
divl
lods
ficomps
push
mulb
call
enter
inc
sub
dec
cli
aam
pusha
mov
fiaddl
ret
ljmp
inc
and
gs
sub
aad
add
inc
dec
push
dec
push
or
sub
jl
mull
mov
mov
add
push
enter
and
and
mov
imul
and
loopew
int3
dec
je
jle
push
jl
movsw
mov
imul
clc
mov
pop
jno
mov
pop
ret
jmp
cmc
fidivrs
push
push
adc
insb
fimuls
mov
inc
pop
ss
ljmp
adc
or
sbb
cmp
cmp
sub
adc
sub
mov
int
dec
pusha
cmp
stos
pop
push
mov
push
out
movsb
mov
mov
sbbl
jle
jb
pop
out
pop
pop
cmovne
sbbl
cmpsl
xor
rcrb
pop
cli
adc
out
hlt
mov
xor
stos
and
cmc
or
adc
xor
js
or
and
mov
mov
das
add
orb
ret
test
pop
insb
sbb
mov
or
jnp
add
push
push
or
add
or
js
xlat
lret
sbb
add
mov
stc
jno
popa
leave
and
sbb
pop
out
cld
pushf
and
mov
or
and
adc
movsb
xor
mov
xorb
pop
leave
ss
sti
outsl
rolb
orb
pop
sub
or
or
shlb
mov
mov
cli
inc
push
mov
mov
pop
xchg
sti
lods
push
pop
and
dec
mov
mov
inc
jo
xor
and
push
test
sbb
aaa
mov
enter
xchg
jp
xchg
add
shll
jb
mov
inc
xchg
inc
popf
sti
push
or
adc
dec
push
add
mov
insb
int3
in
jge
adc
mov
dec
ret
popf
movsl
sti
fsubs
ret
mov
pop
ja
sahf
pusha
adc
cmc
mov
dec
push
or
in
add
or
pop
es
ret
jl
jb
xchg
sbb
pop
addr16
or
shrb
movsb
jmp
push
jo
flds
popa
sub
test
jl,pn
xor
mov
xor
xchg
int3
stos
push
push
cmpb
and
xor
out
or
aam
insl
mov
imul
ja
xchg
movsl
movsl
cld
xchg
and
shl
fs
mov
xchg
mov
negb
fstps
sbb
mov
das
or
push
push
mov
into
mov
xor
xchg
and
mov
xor
or
xchg
or
sbb
push
out
in
push
fwait
scas
jne
push
xchg
in
in
inc
xlat
add
adc
in
loopne
mov
cmc
mov
aas
incb
mov
jl
das
rorl
outsl
mov
cwtl
pop
jb
mov
icebp
ja
out
in
cmpsl
aas
pop
leave
xchg
not
mov
out
clc
lcall
adc
mov
orb
jae
add
gs
xchg
test
arpl
es
inc
mov
repnz
sbb
pop
and
add
lock
mov
outsb
sarl
or
mov
jo
push
mov
mov
push
shrl
dec
xchg
mov
ret
and
xchg
clc
push
push
popf
mov
dec
mov
fldenv
jo
mov
ljmp
jae
sub
mov
sub
mov
xchg
fcmove
xor
sbbl
and
dec
int
jecxz
int3
dec
rcll
test
fisubrs
mov
xor
mov
iret
inc
jmp
adc
mov
xchg
and
jno
push
lea
push
dec
jbe
jbe
add
push
movsb
clc
popf
push
mov
cmp
jle
enter
mov
stos
ljmp
mov
and
call
jnp
push
inc
push
mov
mov
xlat
je
mov
adc
mov
adc
mov
hlt
xor
xchg
mov
mov
repz
mov
dec
fs
int3
jle
fsubs
das
mov
adc
out
stos
mov
mov
dec
ja
test
inc
fdivrp
add
mov
mov
icebp
int
jno
sbb
mov
bound
insb
cli
stos
dec
lahf
cmp
ss
lret
fildl
push
pop
sbb
sub
xor
mov
adc
test
ds
aam
rcrl
cld
mov
je
outsl
or
clc
sub
test
and
xlat
pop
xchg
jecxz
in
scas
aaa
push
fmuls
stos
jbe
imul
cmp
xchg
stos
push
cmp
call
fdivrs
inc
scas
outsl
lods
test
loopne
push
mov
mov
in
sub
pop
scas
jge
push
xlat
lahf
mov
sub
out
call
ficoml
je
sbb
xor
adc
or
les
mov
mov
mov
pop
push
testl
jno
push
orl
aas
dec
add
dec
std
loop
mov
cmpsl
adc
scas
js
mov
in
les
mov
stc
adc
jg
in
or
cmp
mov
in
es
and
call
mov
sub
fdivl
mov
cmp
push
dec
jo
in
xchg
lods
loop
repnz
movsb
iret
adc
rclb
push
into
dec
pop
adc
test
icebp
out
pop
aam
shlb
stos
pop
xchg
or
xchg
adcb
test
inc
daa
mov
mov
in
pusha
fistps
adc
out
push
dec
add
sbb
sub
and
int3
xor
adc
je
jl
data16
push
sbb
addr16
mov
addr16
inc
xchg
cmc
insl
nop
push
cmpsb
xor
xor
mov
sbb
neg
mov
vpunpckhdq
adc
inc
sarb
mov
sbb
push
leave
or
xchg
data16
xor
cli
or
adc
xor
dec
adc
fcmovu
mov
vpmaxsw
xor
pop
cli
sbb
xor
push
inc
or
mov
hlt
shl
sbb
into
mov
dec
xlat
cltd
xchg
mov
mov
js
call
cmp
add
mov
ljmp
pop
out
fcomp
jo
xchg
pop
pop
stos
jle
leave
sahf
js
hlt
divb
dec
es
adc
pmulhw
lock
or
push
bound
addl
icebp
mov
stos
cmp
testl
dec
fwait
sbb
rclb
and
xchg
xchg
fidivs
mov
mov
mov
incb
fimuls
pop
mov
inc
sti
lds
sub
data16
and
sub
cmp
sub
cmp
sbb
jnp
push
xchg
xchg
shlb
xor
mov
shl
xor
fwait
jmp
jns
or
xchg
mov
lods
cmp
test
xor
in
loop
adc
and
int
test
push
xchg
push
in
mov
sub
pop
je
cmpsl
pop
pop
or
jmp
jb
pop
mov
rcr
xor
das
or
insb
pop
loope
stos
mov
adc
jae
cmc
cmp
push
aam
inc
jecxz
sarl
jge
mov
adc
xor
stos
or
adc
fidivrl
mov
adc
cmpsb
mov
dec
frstor
jo
icebp
sub
leave
adc
gs
out
daa
xchg
aad
addl
cmp
mov
shlb
out
pop
xchg
push
lods
mov
lock
sbb
xor
daa
sub
daa
mov
dec
push
in
mov
sar
dec
xchg
mov
ds
and
sbb
addr16
mov
or
or
pop
mov
mov
je
fs
push
mov
ret
call
scas
jno
lods
cmpsl
imul
dec
jl
mov
pushf
leave
xchg
sbb
adc
xor
neg
imul
into
hlt
sbbl
pusha
jl
push
rclb
aam
mov
dec
inc
pop
adcb
cmpsl
add
adc
xchg
imul
ror
xchg
fmul
cmp
movsl
and
cld
mov
sbb
push
pop
cli
rclb
int
mov
in
movsl
jle
xor
cmpsl
fistpll
mov
xchg
je
adc
dec
inc
rclb
mov
inc
je
push
and
adc
xor
xchg
popa
cmpsl
roll
pushf
fsubl
data16
dec
ficoml
mov
jg
lcall
and
mov
fbstp
sbb
add
lea
and
mov
enter
iret
and
cbtw
mov
insb
push
or
pusha
ret
flds
call
jo
sbb
outsl
or
and
push
shll
adc
xor
mov
jb
mov
pop
cmp
mov
js
jno
jl
shlb
jns
pusha
sub
out
iret
fstl
or
lcall
dec
loop
imul
loop
shll
mov
call
mov
xchg
rcll
adc
mov
jne
int3
fildl
push
mov
clc
mov
sbb
push
int
adc
dec
add
jmp
lret
aad
push
nop
adc
mov
jmp
pop
xchg
push
int3
loopne
xchg
scas
in
adcb
and
int3
sub
movswl
lret
cs
js
cmp
ds
mov
xlat
es
enter
cmp
inc
and
mov
sbb
jae
mov
mov
fdivrp
inc
ja
cmpsl
sbb
adc
shrb
shlb
adc
ds
nop
aad
mov
jg
daa
sub
out
scas
cmpl
mov
dec
add
and
mov
mov
mov
pop
dec
in
inc
mov
mov
dec
int3
mov
loop
jg
test
and
pop
jl
pushf
pop
mov
cmp
mov
and
push
push
adc
jnp
int
and
loopne
imul
dec
jmp
jle
pop
adc
imul
fisubs
imul
mov
or
lds
mov
sub
add
outsl
lods
ja
pop
call
mov
rorb
xchg
xchg
ret
dec
or
and
push
nop
mov
fsubl
pop
inc
ret
mov
call
jge
add
ret
inc
adc
loope
jb
fnstenv
stos
lret
xlat
or
or
dec
adc
and
push
cli
inc
pop
stos
je
shll
cltd
jno
das
imul
es
lret
mov
xor
shll
add
lods
je
push
cltd
mov
mov
push
xchg
jae
push
pop
pop
dec
push
test
and
vmulss
inc
jno
and
add
dec
sarb
pop
sub
out
sub
hlt
add
mov
push
mov
lea
stos
call
mov
popf
pushf
shl
in
stos
loope
fstpt
in
push
xchg
inc
push
inc
cmp
lret
jg
and
pushf
in
mov
push
and
inc
add
mov
jmp
inc
icebp
push
cmpsl
xchg
lret
or
or
daa
mov
mov
mov
sbb
fwait
push
adc
xchg
test
push
lcall
adc
hlt
adc
lcall
fisubs
testb
jmp
dec
xor
sub
mov
das
outsl
and
pop
addr16
xor
xchg
xchg
and
pop
fmuls
mov
call
ds
fnstsw
add
pusha
push
or
pop
movsl
sbb
das
adc
mov
hlt
lret
in
add
push
lret
call
pop
ficoml
rcll
xchg
sbb
xor
imul
inc
sbb
sub
or
and
cmp
sub
mov
and
rclb
cwtl
loopne
idiv
sub
lahf
fistpl
jmp
bound
ljmp
fcoms
faddp
jne
in
and
mov
repz
add
mov
lea
cmp
cmpb
inc
push
jnp
popf
jmp
fmuls
das
and
std
xchg
nop
sbb
and
mov
dec
inc
into
push
jno
nop
pop
push
test
add
add
imul
mov
inc
lcall
daa
adc
ud1
xchg
test
fildl
repz
scas
out
cmpsl
jns
test
inc
or
and
nop
pop
test
pop
bts
push
bound
push
imul
adc
adc
pop
movsl
dec
adc
mov
sub
test
bound
stos
pop
mov
fdivs
cli
pop
jne
xor
mov
cmpsl
adc
dec
and
in
rcr
rorb
mov
jge
xchg
inc
lcall
fldcw
or
and
inc
push
mov
jne
test
cmp
cmpsb
xchg
insl
jmp
test
jmp
jno
cs
pop
imull
ret
sub
xchg
cmc
jl
std
ss
cltd
sbb
fldcw
or
repz
inc
fwait
inc
or
std
test
inc
fidivrl
lea
sbb
cmp
test
jg
xor
inc
inc
cli
mov
xor
inc
xor
and
shrb
lcall
jge
rorb
leave
test
imul
jl
stos
push
sar
jmp
inc
add
mov
push
rclb
pusha
adc
xchg
inc
frstor
stc
loop
mov
adc
inc
cli
outsl
arpl
arpl
lods
ret
scas
inc
pusha
mov
out
mov
shll
pop
outsl
jp
aaa
sub
loop
pop
or
insl
test
fnstsw
pushf
out
andb
cwtl
pop
and
ds
les
add
pop
xchg
push
or
dec
in
addr16
jle
mov
jno
out
or
xchg
out
cmp
add
lock
xchg
stc
cmp
xchg
inc
inc
lcall
jb
push
and
inc
lods
not
inc
pop
jp
insl
scas
adc
cltd
pop
jo
xchg
xchg
jp
cmp
jmp
adc
sbb
int
xor
and
xlat
xorb
ret
sahf
fimuls
aaa
add
cwtl
int
in
das
jb
test
mov
mov
fwait
call
sbbb
fsubrs
xchg
push
fadds
pop
and
loopne
or
lret
push
in
test
jmp
das
dec
mov
call
negb
dec
rcl
mov
fwait
test
jle
pop
sub
addb
sti
lods
lock
cli
adc
mov
cmpb
stos
mov
insb
es
bound
fs
pop
out
ret
jp
popa
fcmovnbe
jmp
mov
push
or
xlat
cmp
jns
out
in
jge
jno
sbb
inc
sbb
xchg
icebp
push
shlb
inc
sbb
loope
bound
mov
inc
push
push
add
mov
mov
data16
jbe
pop
sbb
mov
idiv
test
cmp
mov
in
jl
shl
data16
pop
iret
adc
rcrl
insl
and
mov
adc
add
jo
in
xchg
fildl
sahf
jno
loope
rolb
fisubrs
cmc
cwtl
jbe
or
cmp
dec
push
aaa
push
or
pop
cmp
adc
fbstp
jne
fistps
imul
sbb
ret
jmp
dec
xchg
xchg
call
ror
xor
cmpsb
in
loop
push
and
jo
in
mov
jb
dec
xchg
push
scas
dec
add
xchg
pop
xchg
xchg
mov
mov
mov
pop
rcrl
dec
cmp
daa
sbbb
inc
xor
sbb
xor
outsl
daa
adc
dec
ja
inc
imul
jle
outsb
pop
scas
stos
jmp
in
xorb
jbe
inc
mov
int
jecxz
pop
push
int3
mov
fdivl
sti
sbb
adc
cmp
add
outsl
in
lret
inc
push
pop
je
fadds
adc
popf
adc
in
fwait
lcall
mov
je
movsl
and
inc
loope
test
jge
daa
and
fdivr
push
pop
sarl
call
lcall
test
sub
stc
jns
outsb
lock
adc
pop
jle
mov
inc
xchg
mov
xorb
loope
jb
lods
cmpsl
xchg
ficoml
add
stc
sub
pop
or
xchg
cmc
sti
sbb
bswap
negl
ret
xchg
pop
add
xlat
cmp
outsb
movsb
movsb
xor
xchg
js
fildll
daa
dec
lahf
mov
jns
add
and
lret
xor
idivl
xchg
cmc
clc
sarb
int3
daa
test
leave
mov
mov
pop
loope
xor
mov
jne
cmc
pusha
mov
test
bnd
loopne
lock
lds
inc
add
dec
xchg
popf
push
pop
test
pop
or
adc
test
sbb
pop
rcr
andb
cmp
dec
test
out
or
stos
jo
xor
jo
js
xor
inc
cmpsl
out
jecxz
dec
jae
mov
dec
add
and
cs
scas
add
cmp
adc
adc
dec
lods
cld
cwtl
shrl
pop
dec
mov
sbb
out
loope
jg
push
push
cli
daa
rcr
in
test
dec
ja
adc
mulb
inc
inc
les
mov
incb
cmc
adc
mov
repz
andl
inc
ja
sbb
lods
push
ja
jmp
rolb
cmp
negl
lds
inc
mov
or
in
jg
inc
sarl
mov
and
cltd
jmp
fldcw
adc
jno
pushf
xchg
je
inc
xchg
xor
fimuls
xchg
ret
pushf
shrl
int
in
out
imul
mov
ds
lock
fimull
addb
sti
add
out
jae
pop
sbb
xor
lret
jo
pop
jnp
xchg
push
gs
mov
imul
and
sbb
data16
notb
popf
xchg
mov
aas
into
cs
sbb
repnz
jns
xchg
popa
dec
mov
sbb
in
out
xchg
addr16
into
inc
pop
imul
jp
jge
into
mov
lds
ja
add
mov
mov
lods
dec
jb
dec
xlat
pop
mov
je
mov
ficoms
shrb
inc
dec
lea
lret
jecxz
xor
add
cmpl
adc
ljmp
mov
sub
jmp
aad
out
push
movsb
xchg
mov
insl
xor
test
inc
xchg
inc
aam
inc
and
test
loope
lahf
jl
or
test
push
cmp
sbb
out
jbe
push
insb
xchg
xor
xor
mov
call
add
cmc
fcompl
cmpsl
ljmp
mov
cli
jg
roll
das
sbb
fs
mov
lds
sbb
dec
cltd
push
dec
push
sub
dec
sbb
lcall
cmpl
loope
pop
jns
aad
jae
cmpsb
into
fwait
loope
shrl
xchg
xchg
out
sti
movsl
adc
mov
inc
cmp
je
cmp
push
xbegin
test
loope
js
push
repnz
mov
arpl
mov
jae
adc
sub
adc
int
sbbl
pop
pop
out
roll
mov
fisubrl
and
and
addr16
push
out
test
stc
es
fimuls
sahf
push
dec
mov
sub
popa
mov
in
push
cmp
inc
into
ljmp
lods
xor
in
rcrl
sub
or
or
inc
dec
xchg
sbb
fcompl
pop
ja
cld
xor
or
les
lret
cli
incb
adc
inc
and
daa
sub
shlb
aaa
mov
pop
int3
sarb
fistpll
and
addb
scas
or
insb
js
cmc
cmp
andl
pop
fnstsw
xor
xchg
adc
pusha
jl
cmp
ret
loop
jns
lcall
xor
mov
xchg
and
and
gs
es
pop
outsl
push
or
push
xchg
xchg
mov
daa
into
jns
or
sbb
cmc
pop
push
cmp
jb
jle
aaa
push
pop
mov
or
sbb
mov
jno
push
cli
or
dec
decb
adc
mov
iret
sbb
shlb
cltd
cmpsl
sbb
pop
lret
xchg
cmp
aas
adc
push
jmp
or
mov
fidivrl
test
outsl
xor
repz
mov
xor
inc
arpl
or
and
int3
js
pop
xor
cmpsl
push
rcrl
aas
pop
lret
cwtl
lret
push
and
arpl
and
jge
inc
rcrb
cmp
pop
cltd
stc
test
jmp
std
adc
xchg
push
xor
lds
inc
cld
lea
mull
xchg
int
push
in
xor
dec
sarl
add
add
gs
ficompl
jg
pop
inc
push
in
add
add
repnz
outsb
or
push
enter
push
and
or
aam
test
and
push
mov
hlt
cmp
push
xlat
repz
jno
daa
fisubs
cmp
scas
adc
fdivrs
xor
inc
ds
or
arpl
sub
xchg
fs
test
push
movsw
in
pop
mov
xchg
mov
lds
shll
mov
mov
cmpb
clc
fs
cmp
mov
or
xor
sarb
fyl2xp1
jns
mov
roll
outsb
lcall
cmp
jg
cmp
testl
mov
adc
cmpl
mov
js
push
iret
inc
add
push
push
adc
and
test
adc
push
nop
push
pop
int
dec
sub
imul
fmul
ss
sub
add
dec
add
in
or
bound
ss
loope
pop
aam
into
sub
gs
pop
imul
mov
leave
xchg
dec
mov
mov
mov
sub
pop
pushf
dec
push
jno
sub
xor
pop
xchg
sahf
arpl
in
mov
insl
in
xchg
push
mov
imul
fsubrs
subl
xor
mov
adc
adc
xlat
std
xchg
or
rcrb
pop
sbb
cmp
mov
call
aad
stc
sub
jl
ret
xchg
xchg
cs
aam
jae
imul
fsubrs
rol
out
mov
ret
pop
icebp
mov
mov
aas
flds
pop
xchg
orb
out
addr16
mov
stc
xchg
adc
leave
push
mov
movb
cltd
lds
lods
mov
repnz
in
push
stos
adc
movsb
push
in
cmp
rcrb
fcom
insb
dec
idivb
and
and
or
sub
add
fs
lock
ljmpw
enter
dec
and
shlb
popf
and
aad
nop
movsb
inc
push
xorl
aas
and
lcall
or
mov
or
sbb
cmc
sub
daa
dec
std
mov
cmpsb
repnz
fs
add
hlt
pop
inc
jbe
mov
adc
add
int
or
cmp
and
adc
int3
popa
daa
jno
inc
jnp
ds
sbb
shlb
inc
nop
sbb
aaa
stc
mov
ror
sbb
out
jo
sbb
inc
inc
es
sbb
arpl
in
xor
add
dec
or
pop
fistps
pop
dec
sub
popf
test
popf
xor
xor
lahf
mov
test
mov
cmp
xchg
stos
outsl
xor
popf
sub
mov
testl
add
ret
clc
daa
lret
push
cmp
cmp
lods
push
inc
jb
lret
pop
pop
out
xor
loope
xchg
add
in
pop
cld
lea
cmp
dec
clc
sub
call
stc
leave
xchg
outsb
pop
push
scas
movsb
push
jle
dec
cwtl
stc
cmpb
push
test
or
fmull
xor
jp
mov
sbb
jno
jmp
mov
into
pop
pop
xchg
aas
repnz
subb
fidivrl
inc
mov
das
lahf
mov
iret
aam
jge
or
insb
dec
inc
pop
movsl
mov
lcall
cmp
pop
xchg
aad
xlat
addr16
adc
dec
mov
adc
mov
push
jmp
cmp
outsl
icebp
push
mov
lahf
scas
dec
int3
cmp
popa
sub
jo
ficomps
loopne
jmp
add
leave
cmp
out
movsb
insl
aam
pop
sub
adc
test
rcrb
insb
sarl
add
mov
js
lret
pop
push
pop
stos
outsb
xor
pop
out
lcall
lock
or
fstps
xchg
sbb
outsl
shrb
mov
mov
ljmp
adc
jns
ficoml
or
ret
mov
mov
movsb
xlat
jbe
icebp
push
adc
gs
sar
pop
stos
xchg
jns
pop
adc
jno
adc
dec
pushf
and
pop
pop
cs
outsb
lret
dec
stos
xchg
mov
pop
in
shr
mov
and
mov
stc
adc
inc
xor
add
mov
cmp
adc
divl
js
test
shrb
mov
lret
ja
jae
mov
scas
popa
mov
mov
adc
jmp
mov
or
clc
lods
pop
fdivl
pop
sub
std
std
inc
sarb
pop
inc
inc
or
lcall
fwait
sbb
fdivrp
jmp
xchg
mov
xor
das
pop
sub
ss
push
out
and
idiv
js
pop
cmpsb
pop
and
pop
push
nop
jmp
movsl
icebp
push
dec
imulb
lea
sbb
cmp
xor
xchg
shll
loopne
mov
cmpsl
bound
and
push
xchg
les
sbb
mov
push
add
sahf
cwtl
sub
push
js
je
push
jle
test
jle
loop
paddd
adc
pop
sbb
jae
loope
add
arpl
cmpsl
push
sahf
clc
jmp
adc
dec
cmp
jno
stos
sbb
inc
push
pop
insb
push
mov
fwait
inc
fadd
sub
cmc
mov
inc
adc
mov
lds
xor
jae
bound
dec
or
fucomip
sbbb
fistl
add
loop
dec
mov
lret
pop
xchg
xor
sub
xlat
popf
xor
insb
ret
out
sub
ret
pop
pop
push
popa
xchg
dec
sub
stos
enter
pop
movsb
mov
loope
lret
arpl
fstpl
push
jae
inc
jae
in
inc
les
cld
iret
iret
xchg
mov
aas
aad
inc
insl
test
mov
mov
xor
cmpsl
jno
and
or
cmp
ljmp
iret
and
in
jmp
lock
addl
mov
mov
sub
adc
ja
dec
adc
cmp
in
shlb
push
scas
pop
mov
stos
and
push
sti
cmp
je
insb
dec
add
jle
rorb
mov
sub
mov
mov
and
arpl
mov
dec
fwait
add
push
jle
dec
dec
cmp
pop
mov
dec
pop
and
fs
and
mov
inc
pop
fbld
xor
mov
dec
imul
mov
xchg
push
sbbb
int
ljmp
inc
lea
adc
mov
mov
fsubrl
jno
adc
cltd
pop
dec
mov
in
sbb
sarb
mov
add
jns
mov
faddp
mov
aad
imul
lods
inc
xchg
dec
add
jno
scas
mov
push
xchg
xor
adc
push
jb
sbb
jae
repz
jbe
mov
and
jg
lahf
imul
test
mov
es
test
out
push
fs
outsb
jl
aam
jno
mov
js
xchg
shrb
push
test
xor
sub
add
and
add
hlt
mov
and
push
add
in
mov
imul
int
loop
jmp
imul
mov
daa
fnstsw
sbb
adc
jbe
adc
movb
outsl
jo
and
adc
xchg
rcrl
leave
lret
orb
outsl
cli
push
pop
jg
aam
inc
mov
xchg
ret
lods
mov
push
cs
push
xchg
cs
hlt
andb
out
cmp
ret
clc
adc
jns
xchg
jle
cmp
jo
punpcklbw
movsb
int3
cli
fdivr
jns
mov
inc
shll
mov
xchg
ja
call
cltd
mov
jbe
insl
jo
popa
lret
jle
data16
lea
adc
xor
ret
cli
ret
xor
sub
fbstp
sbb
adc
pop
xchg
cmpsl
cmpl
mov
dec
mov
into
nop
adcb
mov
into
subl
outsb
xchg
scas
aaa
das
std
adc
cld
pushw
push
lds
sbb
pop
dec
fstp
pusha
in
ss
mov
idiv
jp
outsb
mov
sub
inc
fdivs
dec
adc
pop
add
in
xchg
sti
sarb
lock
and
movl
jne
std
pop
mov
add
push
pop
add
into
sti
lds
and
lds
dec
mov
ds
push
dec
push
lcall
loop
mov
xchg
xchg
repz
push
sahf
push
sub
fsub
leave
dec
xchg
push
arpl
lcall
jp
xchg
aaa
aas
mov
call
into
nop
dec
xchg
dec
popf
cwtl
add
popa
mov
iret
pop
xchg
or
movsb
ret
int3
jbe
pop
out
pop
inc
inc
xor
in
lret
fbld
inc
push
xor
test
mov
gs
mov
fcomi
cmp
sub
fcomps
addr16
dec
mov
lea
jnp
mov
enter
sub
test
es
call
xor
sbb
push
rol
dec
pop
and
fs
outsl
icebp
outsb
mov
gs
arpl
mov
clc
sbb
fwait
dec
lods
mov
ja
mov
ljmp
popa
cmp
movsb
pop
mov
cmp
in
dec
cmp
loop
push
xlat
pop
les
xchg
leave
cmc
adcl
pop
incb
test
mov
jbe
out
std
cmp
xchg
inc
push
add
inc
aaa
cmc
rcl
mov
dec
test
rorb
stos
mov
setl
xchg
lret
leave
lds
jp
mov
jmp
dec
inc
mov
jne
or
adc
cmp
and
xor
jae
sahf
cmp
shrb
mov
push
and
push
push
loopne
in
outsb
inc
adc
gs
xchg
fisubl
movsb
test
sub
shl
mov
shl
imul
js
iret
rcr
xor
and
sub
adc
rolb
cmp
fstl
adc
fisubs
jnp
arpl
mov
je
in
les
ds
adc
adc
mov
cmpsb
insb
orb
clc
mov
in
insb
lret
push
push
jecxz
fucomip
pop
mov
push
test
andl
push
jae
dec
mov
lods
in
dec
out
ror
fistpll
scas
sub
insb
cmpsl
fbstp
sub
mov
jg
xchg
xorl
adc
add
out
test
push
out
dec
jbe
cmpsl
xchg
pop
or
out
test
push
mov
aam
stc
pop
and
lret
dec
negb
repz
push
test
push
xor
sub
int3
clc
iret
ret
leave
xchg
lds
sti
pop
jmp
mov
and
sub
push
sbb
mov
add
xor
pop
jle
adc
fistl
or
out
cltd
pusha
cmp
push
mov
pop
adc
push
lahf
sarb
cld
fcom
push
jb
xchg
or
mov
jecxz
cmp
cmp
daa
push
je
add
fiaddl
in
push
pushf
pop
sbb
fs
or
lea
movsl
ja
pop
cmp
lahf
push
clc
pop
enter
shl
push
imulb
cli
add
xchg
jp
pusha
insl
pop
pushf
pop
push
fidivrs
and
sahf
pop
xchg
lret
call
int3
jmp
fwait
mov
aam
stos
imul
orb
pushl
pop
loope
dec
gs
cld
movsl
or
pop
jne
dec
jno
fstpl
sbb
jae
mov
and
adc
cmpsb
push
jnp
push
mov
movsl
dec
push
mov
push
xor
add
lcall
dec
and
enter
in
ja
jb
addr16
inc
mov
fsubrl
push
cs
sub
adc
xor
leave
cmpsl
sub
lods
add
insl
int3
in
fcompl
inc
add
sub
push
gs
icebp
sbb
lods
xor
pop
ficoml
dec
push
jge
mov
mov
rorb
ljmp
scas
mov
jmp
out
cmpl
sbbb
imul
enter
aaa
push
mov
fwait
mov
pop
insb
lahf
addr16
dec
stc
mov
add
lock
push
push
insl
or
mov
push
mov
cs
mov
das
mov
push
jo
lret
inc
cwtl
insb
rcrb
sbb
ljmp
jne
lea
xchg
mov
cmc
hlt
movsb
mov
adc
push
xchg
xchg
sbb
adc
push
rol
inc
sbb
sbb
dec
xchg
js
xlat
decb
or
push
mov
insb
and
cwtl
movsb
pop
mov
mov
pop
xchg
dec
fcmovnbe
add
jb
ds
in
jg
addr16
jnp
sti
cmp
cmpsl
push
mov
xchg
movsl
push
rep
mov
lods
loope
or
push
andl
mov
dec
lahf
nop
pop
lea
sarl
cld
ficomps
leave
int3
imul
ret
pop
mov
pop
and
shrl
rorl
fs
std
fwait
daa
stos
xor
push
or
push
sbb
add
push
ljmp
in
movsb
push
test
fs
ret
sarl
mov
nop
sub
xor
jns
mov
out
pop
call
je
sbb
sub
stc
jl
jp
pop
adc
sub
out
inc
mov
add
and
push
int3
stos
adc
repnz
sti
or
hlt
add
jecxz
xlat
adc
sub
jo
or
mov
xlat
adc
sbb
xchg
sbb
jg
adc
push
mov
or
mov
pop
aaa
movsb
in
inc
gs
jb
lock
jo
sti
stc
loope
sbbb
cmp
jno
ljmp
bound
mov
mov
pop
ret
inc
ss
pop
std
aaa
mov
xchg
jmp
mov
test
sub
popf
ss
inc
imul
pushf
xchg
cli
xchg
repz
ja
xchg
pop
orl
or
cmp
sbb
add
pusha
or
scas
push
mov
push
push
out
mov
xor
sub
mov
popa
outsb
xchg
js
xorl
pop
pushl
push
jmp
sub
jge
and
mov
jbe
pusha
stos
lcall
outsb
scas
imul
andb
jle
in
jmp
mov
fldcw
icebp
mov
sub
scas
pop
pop
outsl
aam
out
shll
test
mov
mov
inc
jno
xchg
cmpsl
imul
lock
je
jle
rcll
xchg
call
or
jg
ljmp
cmpsb
idivl
mov
or
lods
dec
andl
movsb
cwtl
insl
inc
mov
dec
aad
jg
dec
xor
idiv
fwait
pushf
out
stc
cmpsb
xchg
push
roll
jns
jecxz
xchg
and
sbbb
hlt
pusha
shlb
sahf
mov
jb
popf
inc
aam
mov
cmp
mov
jns
notl
xchg
and
out
pop
loop
addl
arpl
fcomps
in
pop
in
in
mov
xchg
lcall
push
sub
repnz
imul
sub
mov
or
sbb
int3
movsb
outsl
pop
arpl
jl
cli
fsubl
lock
cmp
dec
cli
ljmp
arpl
rolb
imul
inc
sub
sub
dec
push
sub
sbb
or
jge
xchg
inc
or
pop
mov
push
in
aad
mov
push
dec
imul
push
pop
jmp
sbb
stc
xor
test
mov
daa
in
xchg
dec
pop
popa
mov
push
stc
daa
rolb
mov
mov
js
clc
xchg
leave
jno
mov
mov
insl
xchg
xor
mov
iret
cmp
mov
xchg
pop
sbb
mov
mov
push
xchg
ret
mov
mov
and
xor
mov
nop
lods
les
call
lds
sbb
mov
inc
xorl
pop
mov
xchg
je
scas
mov
loop
jg
cld
icebp
lea
js
push
mov
imul
dec
xor
das
sub
ret
rclb
dec
daa
jmp
pop
dec
bound
cs
adc
sub
pop
fiadds
in
test
xchg
pop
sti
mov
idiv
test
mov
jle
mov
aas
pop
orb
std
push
in
pop
aam
jg
sti
pop
hlt
lods
cmp
inc
adc
xchg
fsubl
mov
insl
imulb
jns
test
in
push
sbb
mov
out
mov
ret
or
scas
pop
shrb
xor
jp
dec
les
in
adc
outsb
jno
je
sbb
movsl
inc
add
xlat
cmp
jle
ss
roll
cmp
cli
xchg
add
in
test
ja
dec
insl
or
clc
xor
dec
scas
mov
xor
sub
push
mov
mov
and
out
xor
fwait
mov
pop
inc
fsts
dec
scas
mov
cmp
loop
cmc
in
jbe
int3
xor
movsl
mov
loope
into
ds
stc
jecxz
insb
es
sub
stc
fdivrs
dec
cmp
cmpsl
mov
pop
cld
jmp
sbb
and
out
rclb
mov
movnti
cmp
idivl
push
insb
and
insl
mov
inc
xchg
mov
fmuls
stc
outsb
mov
sbb
mov
arpl
inc
shrl
test
repnz
xlat
push
dec
jae
loope
icebp
jo
call
pop
mov
insl
fimuls
mov
lea
sbb
movsb
push
mov
shlb
fsubs
xor
das
notb
loopne
test
dec
xor
daa
imul
hlt
ljmp
and
ljmp
cmc
jno
jge
mov
cmpsl
xchg
mov
push
cmp
sub
sub
scas
jmp
add
inc
cmp
imul
in
mov
int
mov
mov
adc
cmp
sub
int3
xchg
mov
in
and
xchg
xor
or
inc
icebp
shll
lret
xchg
xor
jns
sbb
dec
shrb
ljmp
repnz
add
dec
add
sbbb
push
mov
and
mov
ror
push
sub
xchg
mov
popf
fiaddl
pop
push
dec
adc
sti
in
leave
ljmp
add
push
shlb
jo
loop
push
push
and
fcomps
mov
out
mov
adc
mov
cwtl
dec
jno
cmpb
xchg
arpl
or
and
mov
sub
or
push
lea
lret
lcall
stos
test
sub
jecxz
sbb
aas
mov
adc
je
dec
cmpsl
mov
xchg
mov
inc
out
and
dec
xchg
mov
mov
push
shll
fisttps
filds
jge
push
cwtl
gs
loopne
pop
mov
jp
ret
cmp
in
icebp
fistpl
lret
cmpsl
mov
and
or
fstl
fnstsw
stc
js
mov
stos
mov
xor
mov
es
jb
sub
add
fs
push
shll
xlat
js
int
fcomps
pop
aad
fdivp
dec
jg
sbb
pop
or
xchg
addl
jb
cwtl
pushf
neg
clc
outsl
dec
or
in
das
scas
lahf
xchg
and
or
fcoms
push
fwait
lods
xlat
mov
add
icebp
aad
test
cmp
pop
ret
movsb
movsb
loope
shrl
lods
xor
push
mov
cmp
or
and
pop
mov
fstl
ret
sbb
xor
adc
insb
arpl
mov
int
jmp
mov
push
cmpb
pop
cwtl
sti
loopne
mov
test
scas
test
idiv
movsl
bound
dec
aad
mov
stos
add
xchg
add
and
in
adc
cmp
xchg
jae
mov
jmp
xchg
xlat
xor
sub
int3
add
lret
loope
movsb
fwait
stos
lea
push
pop
and
or
dec
push
out
outsl
jl
inc
ficoms
mov
adc
cmp
jnp
scas
daa
not
mov
mov
mov
sbb
and
cmpsl
in
leave
mov
add
leave
iret
pop
pop
nop
dec
push
sbb
dec
push
xchg
lret
fiaddl
ret
aad
dec
add
sub
adc
int3
xor
inc
xchg
mov
outsl
sahf
and
sbb
mov
xor
push
adc
jne
sbb
mov
jecxz
popf
incb
loopne
out
or
push
scas
cli
leave
clc
test
jne
mov
ret
dec
push
push
push
xor
fstps
mov
iret
out
sbb
cmp
test
fadds
fmulp
mov
add
jg
insb
dec
pop
insb
mov
loopne
out
inc
pop
scas
jnp
and
dec
in
js
cmp
push
fdiv
dec
and
dec
xchg
push
xor
mov
jns
test
sbb
pop
cmp
xorl
lods
cmpsl
ljmp
adc
test
add
dec
shll
aaa
jge
mov
popf
fdivrs
push
and
les
dec
aaa
add
loopne
xchg
sub
fisttps
fldt
inc
ljmp
movsb
loop
xchg
cmpsb
adc
into
fmull
and
lret
add
out
and
push
rolb
dec
xor
jbe
push
pop
dec
push
sbb
push
adc
mov
iret
mov
pop
or
addr16
loopne
and
jle
xor
inc
jno
shrl
mov
jecxz
mov
or
pop
pushf
pop
sub
mov
mov
pop
das
cmp
sar
fs
