rcrb
aam
add
aaa
xor
js
lret
loop
out
mov
xchg
jno
jl
jb
movl
mov
loopne
adc
enter
stos
adc
or
cmpb
insl
inc
daa
push
mov
xchg
push
inc
cmpsl
xchg
inc
popa
sub
push
or
shrb
cltd
add
sbb
inc
mov
out
and
cmp
sub
dec
clc
xchg
out
or
jnp
xor
add
imul
popa
mov
shlb
stos
pop
jp
stc
mov
or
jmp
xchg
adc
out
fs
fwait
sub
fildll
clc
enter
gs
bound
ja
cmpsl
call
xor
mov
pop
cltd
pop
push
bound
cmp
cmpb
repz
addr16
and
mov
mov
fstpl
pop
adc
add
or
test
jb
pop
add
adc
movsl
cwtl
fisubl
and
lcall
sub
aaa
jg
dec
xor
dec
rcrb
sub
aad
ret
pop
pop
les
lret
and
fimull
fs
adc
mov
cwtl
inc
movsl
repz
int
es
push
bound
clc
sub
pop
ret
pop
mov
cmp
int3
rorb
adc
scas
movsb
pushf
sub
loop
xor
xchg
cmp
outsl
jo
xor
daa
mov
je
xchg
xchg
lods
mov
adc
loopne
sub
rolb
mull
movsb
inc
or
ljmp
shl
push
mov
pop
shl
mov
in
stos
mov
lahf
sub
xor
jmp
rcrb
xor
jmp
out
out
aad
imul
xchg
cmpsb
in
or
xor
dec
jmp
dec
rcpps
push
pusha
adc
add
cld
jno
push
bound
add
std
gs
push
bound
mov
bound
xchg
fildll
imul
xchg
pop
and
mov
push
bound
lock
pop
push
not
add
loope
fbld
cld
mul
data16
cwtl
stc
out
mov
sub
incl
movsb
rorl
lock
push
jmp
dec
ss
pop
pop
clc
xor
add
xor
mov
aad
xchg
xor
jg
lret
aaa
push
clc
fs
imul
adc
sbb
adc
out
aad
pusha
xchg
xor
addr16
cltd
jl
shrl
pusha
and
std
pop
mov
ficompl
adc
jo
bound
adc
inc
bound
and
mov
and
ss
daa
in
shll
lahf
sbb
jns
pop
dec
imul
push
push
cmpsl
and
mov
adc
or
xchg
nop
dec
xchg
fisubrl
mov
lcall
lret
xchg
mov
sbb
gs
mov
push
leave
jmp
xchg
adc
out
fs
fwait
sub
mov
pop
cmc
or
xor
xchg
fsubs
bound
sub
fldenv
ret
push
mul
in
das
bound
cmpsw
jbe
das
xor
lcall
outsl
bound
repz
bound
xchg
pop
out
sub
dec
pop
xchg
push
and
stc
subl
js
or
imul
jg
outsl
cld
es
movsb
sub
loopnew
pop
pop
mov
jmp
stos
loope
mov
jne
jbe
cmp
data16
js
addr16
and
jnp
aad
pusha
sub
jne
clc
out
dec
test
test
sub
std
imul
jg
cmpsl
cld
cmpsb
and
fildll
bound
loopne
bound
adc
loope
es
mov
fsubr
cli
je
bound
inc
push
aad
mov
xor
mov
and
and
or
ficompl
cwtl
fs
cmp
cmp
cmp
sbb
pusha
xchg
pop
mov
mov
or
xor
mov
loop
add
bound
adc
ljmp
xor
out
jl
inc
sub
in
out
mov
mov
arpl
insb
shlb
out
fsubr
scas
lds
jl
xchg
mov
call
insb
or
jl
lahf
dec
pop
pop
shrb
mov
sbb
sbb
push
pop
jg
sbb
mov
pop
and
sub
pop
lahf
cmp
daa
bound
jo
xor
pusha
xor
aam
enter
pop
bound
mov
pop
ret
cmp
nop
push
hlt
daa
xor
mov
xchg
sbb
fldenv
add
mov
mov
mov
mov
repnz
bound
bound
scas
aaa
negl
call
mov
out
shlb
jmp
mov
das
mov
mov
sub
nop
dec
mov
cmpsl
xor
sbb
xchg
mov
iret
push
gs
mov
bound
ja
out
mov
pop
mov
movsb
sub
out
ud2
sub
adc
jbe
test
pop
outsl
pop
bound
negl
rcrb
in
out
push
cmpsl
and
add
mov
xorl
pop
and
fwait
addr16
loopne
repz
or
mov
xchg
cmp
fbstp
adc
addr16
push
xlat
outsb
popa
add
bound
fsubs
in
mov
and
mov
sub
rolb
and
loop
add
aad
jmp
push
bound
mov
out
mov
shlb
movsb
hlt
and
inc
pop
cmp
xchg
inc
push
or
sbb
xor
xor
shll
hlt
add
sbb
xchg
ret
pop
test
push
pop
in
hlt
push
insl
push
vpmovusqb
xor
lds
xor
sbb
add
and
push
inc
cmpsl
adc
jmp
adc
jg
pop
ja
add
and
fistl
mov
out
lock
mov
jnp
cltd
ljmp
dec
daa
mov
pop
mov
cmpsb
pop
add
out
xabort
lds
jnp
add
mov
mov
and
inc
mov
movsl
outsb
out
jecxz
bound
data16
int
psrlw
add
test
fcompl
jae
xchg
or
pop
xchg
xchg
ja
add
mov
jmp
gs
or
dec
xchg
inc
inc
enter
ja
ret
mov
hlt
push
and
aad
push
cmpsl
out
repnz
and
jae
sbb
pusha
jecxz
pop
pop
push
xor
out
gs
hlt
or
mov
inc
jp
mov
movsw
lock
hlt
push
xchg
add
nop
add
adc
xchg
rclb
xlat
insl
sbb
lds
mov
xchg
rorl
sub
loop
stos
push
bound
ljmp
adc
mov
rcrl
and
cwtl
out
nopl
int
divl
dec
shll
flds
popf
inc
jb
sub
and
lds
mov
jbe
xchg
aad
ds
pop
jbe
cmovge
fnstenv
push
jnp
and
push
jg
pusha
push
popa
fldcw
push
pop
pop
icebp
cltd
addl
stos
into
and
sub
mov
push
shrl
pop
xor
aaa
dec
mov
and
xor
data16
es
fs
pop
jb
cmpsl
loope
push
mov
and
mov
push
mov
les
fwait
cmp
jl
out
cmc
pop
xchg
test
out
inc
testl
test
ds
pushf
xor
push
or
mov
iret
jecxz
stos
repz
stos
dec
xchg
xor
add
hlt
addr16
add
or
cmpsl
mov
and
xorl
cmc
lahf
movsb
movsl
push
orl
pop
rorl
aas
pop
data16
inc
xor
fldenv
jo
mov
ja
xchg
and
ficoms
sarb
movsl
mov
pushf
pusha
xchg
test
jae
ja
lea
push
adc
add
aad
dec
outsl
gs
sbbl
cmp
sub
mov
mov
ficoms
or
fcomip
fwait
cmpsb
gs
cmpsb
mov
mov
ss
lods
lea
sbb
das
xor
imul
lahf
sbb
and
fsts
into
hlt
and
out
sbb
xchg
push
jp
shll
imul
mov
mov
es
mov
fdivr
test
or
push
pop
add
jge
push
sub
mov
aam
sbb
push
xchg
and
in
cwtl
movsb
push
jo
ja
dec
xchg
pushf
mov
or
ror
push
aad
or
aaa
mov
dec
mov
jg
ret
pop
cmpl
inc
pop
iret
mov
aam
gs
notl
jns
push
xchg
cld
xchg
in
inc
inc
pop
jmp
sub
or
and
cmp
outsl
xor
xchg
loopne
popf
scas
push
push
jl
daa
mov
rclb
daa
fildll
mov
in
out
sahf
push
adc
decb
in
push
out
xchg
pop
jecxz
into
lea
sbb
xchg
and
cwtl
and
xchg
xorb
clc
pop
and
fsubrl
rcrb
or
in
fs
xchg
jge
or
dec
xor
in
out
cwtl
inc
mov
push
out
mov
adc
xchg
and
imul
leave
nop
add
shrw
test
ja
mov
fsubs
or
jno
ficoml
lcall
call
dec
push
shll
pop
mov
ror
jnp
xchg
sbb
outsb
cmpsb
mov
mov
movsl
pop
lock
push
adc
shlb
out
pop
ret
lgs
cld
fs
mov
insb
pop
pop
lretw
not
or
rorb
bound
mov
fcomps
cld
stc
je
fisubl
pop
or
add
xchg
out
push
ja
push
mov
out
out
loopne
pop
xchg
rolb
push
outsb
jnp
jp
arpl
cltd
xchg
sbb
or
das
insb
test
xor
xchg
jo
mov
nop
pop
lret
mov
dec
mov
ret
xchg
gs
test
inc
sub
add
push
pop
pop
daa
or
push
mov
repnz
sub
jbe
bound
push
in
jb
push
add
jb
xchg
and
fadds
cmpsl
mov
in
mov
sub
cli
repz
jns
jo
push
xor
and
mov
pop
push
inc
pop
imul
push
shll
insl
out
arpl
adc
ljmp
mov
stos
sbb
aam
push
sbb
rcl
or
sahf
mov
mov
pop
mov
push
xor
out
jo
add
cmpsl
repnz
notb
lret
ja
cmp
xchg
aam
xchg
dec
sti
popa
inc
fldenv
mov
lahf
shlb
xchg
imul
mov
pop
jmp
in
loope
gs
and
mov
mov
pop
dec
adc
scas
push
cmpsl
cmp
or
in
sub
sub
inc
cmp
xor
pop
jle
mov
pop
icebp
ja
push
xor
in
sub
je
mov
mov
pop
push
and
or
insl
aad
sbb
xor
adc
scas
xor
enter
xchg
imul
hlt
jns
and
outsl
xchg
into
or
adc
test
mul
add
inc
sbb
mov
pop
inc
test
leave
mov
jnp
mov
jns
and
aas
xchg
inc
push
xor
popa
push
mul
test
xor
push
cmp
adc
jnp
popf
add
mov
popf
xlat
data16
std
inc
addr16
fcoml
fnstsw
cmpsl
jb
lahf
pushf
ret
jbe
insb
and
pop
mov
sbb
cmpsb
fwait
xchg
stc
pushf
rclb
or
out
in
nop
pop
outsl
insb
popa
int
rcrb
out
call
xlat
mov
cltd
push
adc
aaa
popl
outsl
test
jo
jg
cmp
and
addr16
shll
xor
sub
xor
jecxz
daa
lahf
adc
jb
adcw
jns
repz
popf
jb
jp
jl
je
jge
mov
lret
push
sbb
inc
xor
idivl
fs
mov
movsb
xor
xchg
cmp
jae
xchg
pushl
testl
mov
sarl
daa
xor
imul
loopne
test
stos
bound
aaa
jge
fwait
arpl
test
inc
and
pop
pop
jno
sarb
pop
popf
pop
mov
push
mov
aaa
jp
cli
lock
rolb
imul
movsl
addr16
addr16
or
cltd
xchg
stc
cltd
and
movsb
add
test
aas
int
mov
pop
xlat
mov
sub
inc
push
and
dec
loop
movsl
jecxz
push
test
jle
in
es
pushf
pop
cmpsl
pop
fcompl
fidivrl
and
sti
test
mov
adc
cmpb
dec
je
mov
outsb
gs
scas
bound
push
andb
pop
cmp
jmp
pop
sub
test
push
stc
cwtl
mov
xor
movsl
pushf
inc
daa
pusha
xchg
push
insb
ds
stos
jge
sti
daa
mov
in
outsl
jbe
push
xchg
mov
lea
ficoms
and
lods
in
loop
adc
mov
sub
imul
das
push
pop
jmp
add
jno
insb
push
mov
jns
pop
std
stc
popf
aad
jne
out
imul
rep
gs
in
or
rcrb
cmpsb
xor
pop
pusha
insb
add
ja
add
pop
or
fildll
je
test
and
pop
outsl
sub
and
inc
adc
gs
or
repz
adc
pop
fildll
je
sbb
lock
gs
dec
xor
pop
mov
js
xor
sbb
seto
pop
xchg
sub
sahf
out
xchg
cmp
xchg
push
aad
jmp
fcomp
push
sbb
gs
pop
imul
fst
adc
cmp
dec
sbb
xlat
ret
movsb
insl
push
and
ljmp
imul
iret
xchg
cmp
addr16
outsb
ret
hlt
mov
shlb
xchg
test
test
push
cmp
xor
bound
fstp
mov
dec
and
jb
dec
daa
pusha
or
jae
and
add
arpl
push
daa
arpl
stos
push
imulb
xor
inc
dec
lahf
xchg
outsb
cmpsb
cwtl
xchg
inc
popa
pop
idivl
and
punpcklwd
dec
addr16
int
das
jae
shlb
cmpsl
push
add
jge
les
sub
mov
sahf
and
jl,pn
test
xchg
adc
inc
mov
loop
mov
gs
cmp
pushf
lea
cmpsl
and
fisubl
sub
mov
fdiv
lahf
mov
out
sbb
add
xor
inc
adc
add
ret
andl
push
dec
cwtl
mov
mov
ja
sbb
je
pop
mov
cmpsb
xchg
mov
jg
sti
xor
out
pushf
dec
pop
imul
cld
aaa
add
jb
les
aaa
out
cmp
dec
clc
push
push
jecxz
inc
pop
mov
push
stos
imul
push
repz
lods
push
dec
fs
push
clc
insb
xor
and
cmp
fwait
xchg
dec
addr16
push
fsub
sub
fs
call
sbb
add
fs
dec
fsubl
lcall
ljmp
cmpb
inc
ss
push
aas
mov
and
pop
repz
scas
sbb
sbbb
mov
rorb
mov
and
sub
fldt
cmp
rclb
xchg
dec
fwait
pop
mov
and
pop
aad
jae
dec
inc
lret
bound
mov
xchg
outsb
and
push
je
xor
imul
dec
outsb
xorl
push
adc
lret
fcmovb
shll
sbb
mov
mov
push
add
sahf
push
icebp
push
insl
xchg
int3
or
and
lds
mov
xlat
stos
push
pop
pushf
sbb
cmp
pop
mov
mov
je
xlat
decb
stos
dec
inc
fwait
cmpsb
mov
or
mov
aad
gs
frstor
stos
jnp
push
lcall
jbe
cld
mov
std
cmc
mov
or
pusha
xchg
pop
data16
lods
movsl
lcall
lods
aam
pop
pop
push
int
jecxz
in
and
pop
push
enter
mov
add
xorl
fnstenv
pusha
push
xchg
ret
push
arpl
pop
sub
fwait
sbb
scas
in
aas
ja
xor
dec
in
sbb
in
imul
xchg
das
mov
out
sbb
negl
sub
ret
test
mov
cmp
movsl
out
negl
loop,pt
push
scas
mov
addr16
push
cmpsb
out
dec
xchg
leave
dec
ret
xor
outsb
inc
out
pop
push
in
adc
pop
aaa
pop
icebp
jmp
cltd
int3
jmp
movsb
in
cmc
dec
cwtl
jl
and
movsb
pop
xchg
pop
jg
sbb
and
cwtl
repz
shrl
xchg
lret
mov
popf
int3
nop
xor
orb
jnp
leave
ret
mov
xchg
ja
pop
dec
in
inc
add
xchg
fwait
sbb
cmp
in
out
rol
inc
jge
mov
daa
push
push
out
loope
nop
int
sbb
fidivs
sahf
out
shlb
and
fldl
adc
aaa
insl
mov
xchg
jmp
gs
sbb
inc
adc
call
jmp
mov
insl
cmc
repz
mov
add
pop
addr16
xor
aaa
cmp
leave
jmp
movsb
data16
mov
out
bound
push
enter
xor
cmp
add
dec
push
repnz
aaa
xor
push
jle
ss
push
jb
adc
lock
adc
test
lahf
testb
js
xlat
cmp
and
pop
sub
mov
cmpb
mov
cmp
dec
aas
mov
inc
cmc
dec
sbb
adc
shlb
jne
pop
jno
mov
xchg
arpl
xchg
hlt
dec
in
je
jl
ficoml
inc
jbe
jb
gs
js
push
repnz
lahf
outsl
jnp
adc
inc
push
push
adc
jecxz
mov
movb
add
cltd
es
out
push
sub
gs
dec
add
and
rolb
xor
xchg
dec
push
cmc
bound
lret
xchg
jb
push
and
pushf
mov
addr16
inc
js
stos
aad
shr
cmp
or
xor
pop
lcall
push
gs
push
xchg
push
cmp
adc
imul
loopne
mov
popaw
ja
scas
out
and
lock
aad
negl
cltd
insb
ret
sbb
jge
mov
sub
into
ljmp
das
dec
pop
int
push
jecxz
pop
imul
adc
cli
call
fnstsw
mov
jg
cld
pop
jo
xchg
pusha
jno
ret
cwtl
push
lret
test
pushf
dec
xlat
jb
xchg
push
fwait
xlat
daa
ja
pushw
int
insl
or
or
and
fisubl
dec
jae
dec
push
addr16
xor
addr16
idiv
nop
icebp
mov
out
sarl
push
outsl
and
xor
stos
cmpsl
lock
mov
jg
mov
or
in
cmp
test
sub
rcll
xchg
jno
stos
or
or
mov
pushf
cmc
outsb
pop
xchg
ret
repnz
or
out
std
inc
and
call
cli
sub
aad
hlt
lcall
mov
ret
jmp
jmp
mov
jmp
inc
jle
movsl
test
cmpb
lods
cmp
cmp
andl
dec
xor
add
inc
push
jns
nop
aaa
dec
jmp
xor
fisttpl
gs
push
hlt
sub
adc
cltd
push
movsb
js
pop
mov
jge
inc
cmpsl
ja
mov
ret
and
les
sbb
mov
repnz
adc
inc
divl
jne
jl
nop
mov
cmp
add
addr16
inc
jmp
dec
mov
sub
cmp
aam
aad
or
popf
test
aaa
mov
mov
xchg
es
adc
push
lcall
cmc
mov
adc
outsl
movsb
inc
jg
adc
rcll
fisubrl
in
ss
adc
mov
es
xor
clc
pop
mov
jo
jge
xchg
inc
ja
mov
fs
mov
or
daa
xchg
in
pop
movsb
loop
sub
mov
lahf
insl
and
adc
mov
inc
es
repnz
sbbb
popf
push
cmovle
sub
movsl
aaa
pop
jo
xchg
mov
jne
sbb
es
mov
mov
push
push
mov
push
inc
sub
out
das
sub
shrb
jns
imul
push
add
movsb
scas
mov
lods
sub
in
mov
push
leave
js
mov
mov
adc
rcll
rcrl
loop
loop
push
loop
adc
daa
jmp
adc
lea
test
sub
es
in
or
arpl
and
xor
and
mov
inc
movb
adc
sbb
or
mov
adc
ss
push
bound
mov
mov
js
dec
lds
dec
imul
popf
ret
in
es
sbb
aaa
inc
mov
cld
lcall
push
inc
jp
mov
int3
leave
add
add
push
jmp
test
push
mov
dec
pop
push
nop
data16
mov
adc
xchg
mov
push
mov
sahf
add
push
sbb
jae
std
in
icebp
push
lret
ja
loop
pop
sbb
inc
outsl
xchg
les
inc
in
call
and
pop
xlat
ud2
xchg
test
adc
test
push
dec
jno,pt
jbe
xchg
mov
jecxz
rep
sub
dec
jg
xchg
lret
push
sarl
pop
dec
mov
outsl
xchg
jb
outsl
les
adc
push
jmp
icebp
push
sarb
sbb
fwait
inc
negl
mov
js
cmp
xlat
pushf
mov
cmpsb
out
jnp
pushf
ret
jns
mov
push
sub
lahf
push
pop
call
and
ds
icebp
mov
add
adc
push
push
mov
push
jns
push
dec
bound
push
insb
pop
repnz
sbb
lds
fdivrs
stc
mov
in
pop
pop
mov
lods
cmc
jbe
ds
fcoml
sub
scas
ret
adc
mov
push
inc
sbb
sbb
in
adc
mov
jle
and
xor
mov
dec
mov
call
mov
daa
sbb
jmp
add
cmp
loop
addr16
add
pop
pop
push
xlat
and
add
fidivs
sbb
scas
bound
xchg
mov
popf
outsl
out
pop
daa
rcrl
mov
adc
push
int
cmc
mov
mov
xor
daa
xor
in
repnz
idivl
cmp
jo
mov
fistpll
xlat
add
cmpsl
pop
mov
lahf
outsl
jno
xchg
pop
in
jmp
cmp
pop
pop
lret
lods
xor
and
lahf
test
inc
es
pop
addr16
inc
mov
bound
loopne
mov
sub
jl
les
fcoml
and
mov
cmpsb
pop
mov
popf
fiaddl
movsb
cmp
adc
cmpsl
add
and
pop
dec
pop
adc
sbb
std
imul
sbb
icebp
inc
sbb
hlt
and
test
push
icebp
les
mov
xchg
dec
rcr
clc
pop
movsl
notb
out
inc
lods
cli
inc
inc
insl
push
sub
pop
insl
lea
inc
outsb
and
or
inc
leave
addr16
sahf
movsl
xchg
hlt
push
ret
xlat
jae
lahf
lods
mov
in
pop
icebp
aas
and
cmpsl
mov
or
mov
addr16
push
dec
cmp
pop
cli
fbstp
and
cmp
repz
cmp
sub
cld
bound
xor
push
push
shll
movsl
in
ret
pop
arpl
mov
inc
stos
inc
jecxz
sub
mov
daa
in
mov
inc
push
push
mov
or
ret
mov
and
aam
add
insb
adcl
xor
filds
inc
test
leave
pushf
fs
dec
sbb
xchg
bound
lds
jg
mov
insl
test
sbb
jp
popf
inc
pusha
roll
leave
cmp
fidivrl
xor
daa
adc
cwtl
fwait
repnz
or
aam
cmp
fwait
dec
movsb
adc
shrb
mov
push
xlat
add
cmpsl
out
mov
sub
vmmcall
jns
in
scas
jbe
call
das
and
fstpl
sub
fs
call
adc
mov
out
in
adc
jnp
fdivrl
sub
test
push
mov
mov
shrl
clc
xor
jo
xor
pop
mov
outsl
cld
out
mul
mov
subl
sub
in
push
sub
in
mov
stos
jnp
cmp
pop
in
cwtl
mov
mov
inc
outsl
xchg
and
or
loop
jmp
xchg
cmp
push
arpl
or
dec
dec
pop
add
mov
push
addr16
fcompl
pop
sar
in
dec
adc
sarb
data16
hlt
push
popf
push
jno
sbb
and
mov
sub
pop
cld
mov
inc
mov
jbe
cmp
test
xorb
dec
mov
nop
movsl
call
xor
xchg
paddusw
andb
mov
xor
sub
sahf
xor
insl
mov
addr16
cld
in
xchg
jge
loop
fiadds
shrl
push
iret
pop
enter
loope
dec
mov
mov
cmp
mov
iret
mov
test
jae
inc
aas
adc
fs
lods
lock
rol
push
addr16
pop
dec
mov
xchg
and
mov
call
fsubl
sbbb
pop
ja
cmp
mov
leave
jle
movsb
inc
xor
jle
addr16
cmc
das
sarl
mov
push
jge
in
test
xor
mov
icebp
xchg
sahf
sbb
mov
fstps
lock
dec
xor
mov
ficoml
jnp
fisubl
mov
add
and
rol
sbb
sub
fs
or
and
pop
insl
cmc
mov
cltd
les
dec
cmp
not
sbb
cwtl
daa
lahf
pop
mov
ds
push
arpl
xor
jno
daa
push
cmp
sub
out
cli
dec
outsl
cmc
xchg
cmc
push
mov
sub
cmp
xor
in
sbb
aam
in
sub
stc
addr16
cwtl
push
icebp
shrb
pop
out
or
mov
pop
and
mov
in
mov
xorb
push
popf
or
cmpsb
leave
pop
jecxz
fstps
jno
sub
push
loopne
popa
mov
repnz
ja
sbb
mov
xorb
pop
fs
cld
inc
aaa
add
das
mov
repz
outsl
movsl
gs
cmp
inc
pushf
scas
mov
repnz
test
push
fistps
cld
add
mov
addr16
jne
lahf
addr16
inc
lods
fsubrs
jecxz
jnp
fs
mov
pop
pop
mov
inc
or
divps
fidivl
adcl
frstor
mov
dec
mov
push
outsl
add
es
sbbl
xlat
push
bound
xchg
lods
and
test
add
jne
push
fdivs
daa
orb
jno
and
ss
arpl
inc
movsb
cmp
sbb
jp
je
sbb
pop
lock
xor
and
mov
cmpsb
pop
push
orb
sub
repnz
sub
bound
xchg
pushf
mov
jp
pop
out
fcmove
push
sub
leave
sbb
cmc
cmp
pop
xchg
lea
cltd
and
gs
mov
insb
inc
cmpsb
aaa
leave
jno
or
sbb
insl
xor
xchg
xchg
insl
cs
xor
and
add
adc
xor
int3
ljmp
push
sub
loop
inc
icebp
xor
scas
jbe
dec
rorb
pop
sub
out
ret
cs
xlat
xchg
popa
xchg
push
sub
dec
sub
push
push
in
mov
cli
mov
xor
jge
int3
mov
gs
sub
imul
stos
das
mov
fistpl
push
pop
and
jecxz
ljmp
test
and
pop
inc
cmp
adc
or
mov
lods
jae,pn
adc
jl
ja
repnz
xchg
xchg
insb
sub
adc
rorl
mov
dec
mov
mov
and
inc
es
xor
out
adc
mov
rolb
fnstsw
push
fimuls
add
xchg
sub
idivl
sbb
lahf
mul
add
pop
out
loopne
xor
cmp
and
xor
jmp
mov
sub
test
sbb
mov
daa
inc
lock
pop
aas
loop
cmpsl
aam
xor
scas
cltd
push
pop
xor
stos
fs
mov
and
gs
call
hlt
insb
pop
cmpsb
mov
dec
jno
jle
add
icebp
unpckhps
popf
pop
shr
mov
cltd
cmp
adc
xor
sti
popa
add
stc
std
pop
out
imul
and
dec
frstor
cld
inc
dec
inc
lods
out
xor
jmp
sub
lds
and
shrb
negb
pop
test
dec
out
movsb
xor
out
sbb
popa
rcrl
add
arpl
push
pop
test
loop
jp
into
mov
cmpsl
mov
xchg
or
and
mov
add
popa
andb
mov
inc
pusha
stos
aaa
sub
push
rolb
out
pop
movsb
test
divl
movsb
push
cmpb
jbe
fsubr
andl
and
daa
add
in
jns
into
sub
push
outsb
lahf
xchg
test
inc
aad
imull
test
rclb
jb
jmp
xorl
jns
lods
or
pop
hlt
or
or
mov
enter
sbb
test
enter
jge
icebp
pop
inc
pop
xor
xor
jns
xchg
aas
dec
pop
xchg
daa
xor
sbb
mov
test
cwtl
addr16
cmp
cmp
pop
xlat
outsb
xor
mov
test
dec
scas
insb
push
push
loopne
jmp
ja
add
mov
lcall
pop
mov
mov
stos
sarb
out
cmp
loop
ret
in
adc
repnz
in
movsb
pop
inc
fidivl
mov
sub
and
or
mov
cmp
popa
sub
jmp
mov
mov
xorb
cs
fsub
mov
mov
arpl
aaa
bswap
push
cs
sahf
pop
out
cwtl
fidivl
into
jp
push
stos
jne
jp
hlt
xchg
mov
fs
aaa
lcall
sarb
aad
and
mov
std
les
and
cltd
shrl
and
xchg
aas
sbb
xchg
adc
lods
inc
cmpsb
cmp
lods
and
fnstenv
outsl
gs
cmpsb
mov
mov
jmp
test
or
cld
lret
jne
scas
pushf
sbb
outsl
outsb
and
roll
mov
mov
rcrl
je
push
push
test
mov
push
pop
pop
popa
push
dec
mov
pop
lock
and
and
dec
add
imul
xchg
lahf
adcl
jno
cmp
arpl
push
pop
mov
out
movsl
jae
and
insb
dec
sarl
push
mov
push
sbb
fisubl
add
lret
js
inc
nop
jmp
stos
sub
mov
cmpsb
push
inc
add
mov
mov
adc
xchg
test
lret
cmp
addr16
repnz
push
or
sarb
sub
jbe
hlt
dec
dec
pop
inc
pushf
mov
loop
daa
and
adc
push
mov
inc
mov
adc
push
push
mov
mov
testl
fwait
leave
cmpsb
jp
mov
sub
add
push
sub
and
into
les
and
inc
add
mov
imul
xor
int3
out
push
subb
or
xor
repz
hlt
lods
pop
cmpsb
hlt
outsl
pop
mov
pop
mov
call
outsb
movsl
out
xchg
loope
rcl
push
outsl
sub
aas
mov
jne
xchg
xlat
clc
iret
mov
fs
ret
or
in
shrb
test
mov
aad
sti
cmpsb
push
adcb
cmp
imul
adc
inc
gs
xor
pusha
jmp
popf
add
subl
xchg
les
loop
mov
insb
bound
idivl
cmp
shl
xorl
repnz
push
sub
xorl
dec
mov
xchg
les
or
mov
ss
daa
and
mov
rcl
pop
negl
pop
ja
popf
shrl
mov
popa
das
sub
add
add
fsubl
sub
out
ja
repnz
xchg
pop
ja
lea
fbld
jne
jmp
xchg
jp
jne
clc
lods
ss
cmp
fwait
xor
dec
gs
pushf
mov
and
pop
testb
adc
cld
cmc
inc
xchg
dec
lahf
pop
jae
bound
enter
cmp
dec
jb
enter
aas
push
xorb
and
out
nop
enter
stos
outsb
fs
imull
xchg
and
adc
jns
test
inc
pop
push
cmpsb
push
or
adc
and
push
pop
cmc
or
push
jo
nop
bound
test
cmpsb
push
pop
xor
movsl
push
fdiv
pusha
jmp
rcrl
test
rcrb
push
dec
adc
jle
sub
push
xchg
or
outsl
aas
ljmp
push
inc
je
jno
mov
ja
pop
fldl
dec
es
test
push
jg
iret
xchg
pop
popf
pop
add
stos
into
into
jae
add
addl
xor
sarl
and
sbb
inc
xor
movsb
pop
sti
jno
out
cli
xor
dec
xchg
fbld
addr16
pop
inc
jne
xchg
dec
je
out
lret
gs
inc
aad
adc
popf
xchg
repz
cmp
mov
sbb
sub
addr16
fwait
add
sub
mov
cmp
outsl
ret
insb
push
push
fwait
imul
push
adc
fiaddl
and
xlat
dec
jne
aas
pop
movsl
insb
push
cltd
fs
lret
stos
mov
cmp
xchg
in
xor
cld
pop
push
ficoms
adc
xor
sbb
lcallw
addr16
cmp
sbb
xor
inc
dec
stos
imull
cmp
imul
xchg
mov
xchg
xorb
xchg
pop
fdivs
pop
aam
fwait
pop
inc
mov
in
shll
sub
xor
repz
lcall
push
popa
adc
cmp
ss
adcb
fs
enter
xor
xchg
and
adcl
mov
push
cwtl
rcrl
and
sub
mov
pop
scas
loopne
fidivl
fwait
movsb
sbb
add
mov
inc
xlat
inc
mov
nop
xor
push
fstpl
push
xchg
aad
push
loop
xchg
pop
jecxz
pop
addl
xchg
gs
and
push
xchg
lret
push
out
stos
mov
add
add
in
sub
outsb
jmp
ds
ja
mov
daa
push
sub
call
out
lods
mov
xchg
push
or
fwait
mov
sub
out
out
cwtl
push
jmp
mov
data16
push
dec
xchg
lods
mov
cmp
adc
adc
stos
out
dec
sbb
sub
cwtl
fcmovu
int3
std
pop
xchg
cltd
js
jb
sbbl
dec
and
stos
cld
adcb
mov
mov
inc
enter
in
xor
add
sbb
insb
push
add
dec
xchg
mov
lds
into
push
test
nop
sub
es
push
das
xchg
outsb
test
add
xchg
cmpsb
cmp
or
and
jnp
mov
and
jnp
push
push
xchg
and
xchg
fsubrl
or
cmp
jge
scas
addr16
popf
xor
or
notb
stc
push
pop
jl
cltd
imulb
and
push
cmp
xlat
sarl
lcall
js
cmpsl
inc
jg
push
popa
imul
and
fwait
sub
call
mov
xor
fwait
sub
scas
xlat
cld
shll
lcall
and
stos
pop
int3
inc
mov
movb
adc
fucomi
push
sbb
js
mov
push
sub
and
fsubl
inc
outsl
jne
pop
dec
mov
das
sub
subl
mov
outsb
cmpsl
mov
cld
sbbb
loopne
imul
dec
and
jnp
mov
push
iret
inc
jae
mov
xchg
pop
outsl
adc
push
test
loope
mov
pop
jecxz
pop
cmc
es
mov
push
dec
inc
sub
shrl
clc
mov
cwtl
addr16
addr16
mov
les
mov
imul
pop
add
cld
xchg
pusha
jmp
int3
fidivrs
xor
xchg
or
xchg
stos
ret
sahf
call
clc
negb
adc
push
mov
or
movsb
sub
sbbl
and
pushf
repz
inc
mov
in
subl
lret
xchg
pop
std
movsl
mov
sbb
push
cmpsl
xchg
mov
test
lds
test
lret
dec
addr16
cmc
out
adc
data16
dec
std
mov
push
bound
mov
sub
arpl
mov
lea
fnstenv
movsl
inc
in
dec
jo
lret
pop
and
pop
loopw
adc
test
sub
fldcw
les
jne
aas
or
movsb
js
sbb
addr16
lahf
xor
stos
int
mov
mov
dec
pop
ja
divl
imul
dec
es
xchg
jge
push
cltd
mov
fstpl
out
mov
pop
fcoml
loope
inc
nop
fwait
and
inc
movsb
call
sti
cmp
fiaddl
pop
inc
xchg
addr16
rcrl
push
mov
arpl
push
shl
and
push
ljmp
push
adc
sub
movsb
sub
add
or
lcall
stos
cmp
out
inc
cmp
cmpsl
imul
ja
js
xchg
scas
loop
xor
xchg
repz
xchg
and
data16
dec
pop
lds
and
jae
in
ljmp
addr16
cmpsb
lcall
mov
loop
xchg
stc
cltd
fldenv
and
xor
sub
cmp
mov
pop
insw
cmp
mov
mov
pop
jnp
enter
lret
jp
jb
outsl
and
sbb
add
loopne
jecxz
scas
and
sbb
xchg
imul
push
out
xchg
xor
inc
out
addr16
mov
inc
jg
in
adc
icebp
outsl
inc
pop
addr16
adc
push
push
mov
aas
dec
xchg
lret
leave
subl
sub
sbbb
or
out
and
sbb
loop
ret
ja
and
cmpsl
lcall
pop
ja
fnstenv
cwtl
inc
and
dec
inc
xor
and
out
dec
xor
arpl
repnz
orl
pop
je
fwait
fs
call
mov
mov
adc
jmp
data16
add
push
pop
cli
lcall
fwait
gs
add
out
inc
inc
or
jo
arpl
sub
outsb
lds
outsl
nop
arpl
sti
iret
cmp
sub
dec
or
sti
imul
pushf
or
test
cmp
lock
inc
scas
mov
imul
inc
fldenv
or
pop
pop
pop
daa
in
test
rcrb
pop
mov
icebp
fadds
fadds
pop
addr16
notl
jecxz
add
rorl
pushf
test
add
out
rcll
testl
sbb
fbstp
cmpl
cmp
pop
test
mov
hlt
jo
imul
xor
pusha
mov
punpckhwd
pop
xchg
xor
cmp
stc
add
xchg
lea
mov
popa
data16
sarl
lock
es
test
repnz
jp
mov
add
bound
or
out
out
out
rorb
lea
cmp
int3
repnz
movsl
repz
fistps
push
popf
out
cmp
jle
lds
mov
and
inc
rclb
pop
inc
ja
xchg
out
cld
inc
mov
outsl
les
mov
push
daa
inc
stc
fmulp
dec
push
dec
pop
push
movsb
or
adc
pop
cs
xlat
push
repz
mov
pop
sub
mov
in
mov
addr16
pop
mull
outsb
imul
loop
jne
mov
add
outsb
cmp
cltd
test
stos
xor
mov
adc
mov
int3
fcmovu
in
fwait
sbb
arpl
fldl
mov
subb
sub
xor
fs
rclb
add
add
pushw
dec
and
inc
lret
scas
pushf
data16
sbb
pop
outsl
xor
inc
cmp
rolb
arpl
lea
ljmp
add
mov
std
push
pop
dec
gs
sub
inc
xchg
xor
cmp
pop
cmp
pop
aaa
push
insl
sarb
inc
jg
lret
mov
and
xchg
sub
dec
movsb
dec
inc
bound
fwait
dec
push
dec
inc
sbb
lods
mov
and
insb
in
out
ret
dec
inc
fiadds
push
pop
mov
inc
inc
mov
aaa
jns
dec
popa
scas
pop
hlt
adc
xor
loopne
jg
add
sbb
cli
hlt
jecxz
mov
xchg
lock
aas
hlt
cmp
xor
xchg
gs
repz
mov
lcall
pop
idivb
lock
mov
xchg
pop
adc
mov
cld
xor
out
cwtl
and
lds
ret
pop
adc
pop
mov
mov
xchg
test
aad
pop
xchg
mov
ljmp
cmp
insl
stos
cmp
inc
imul
bound
pop
not
or
rcrl
mov
das
xchg
test
push
out
ljmp
mov
mov
test
pop
das
dec
push
jecxz
mov
mov
mov
enter
sbb
out
inc
fcoml
pop
xchg
xor
and
gs
mull
adc
mov
mov
daa
and
jno,pt
jne
adc
jecxz
add
cltd
jne
ds
mov
xlat
sbb
mov
mov
test
fnstenv
cmpsl
icebp
xchg
popa
scas
popf
lock
xchg
jb
outsl
in
or
push
sub
lock
mov
xchg
push
and
lcall
pop
push
pusha
and
test
xor
sbb
imul
cmpsb
xchg
dec
push
mov
push
mov
xchg
push
scas
icebp
jno
dec
inc
sub
jb
dec
icebp
je
or
xor
xchg
sub
fs
repnz
mov
xor
notl
and
loopne
pusha
sahf
imul
aaa
lret
inc
fwait
sbb
nop
fists
sbb
add
jl
lock
mov
sbb
out
movsb
mov
push
jmp
scas
adc
sub
dec
gs
shrl
insl
es
pop
dec
loop
adc
xchg
dec
div
adc
xchg
faddl
mov
insb
jne
aas
sub
xchg
push
push
lods
test
sbb
lcall
add
pop
cmpsl
jbe
mov
cltd
and
lods
iret
fs
scas
dec
inc
mull
scas
xchg
aas
enter
mov
lcall
push
mov
push
mov
sub
pop
sbb
adc
fldt
dec
and
jecxz
pop
js
ret
into
push
loope
mov
data16
daa
add
rcrb
jno
mov
popa
fisubl
int
pop
cmc
xor
outsb
pop
sbb
addr16
mov
scas
lods
mov
cmpsb
pop
stos
movsb
sub
sub
outsb
adc
jge
fwait
sub
add
or
fisubs
and
gs
popa
movsb
pop
pop
mov
outsl
das
jg
mov
jecxz
stos
dec
xor
popa
fsts
dec
out
pop
shlb
xlat
jb
aad
fldenv
inc
adc
adc
arpl
adc
iret
inc
sub
pop
in
aad
jo
aas
movsb
xor
pop
jbe
sbbl
push
mov
sub
loope
push
and
xchg
pop
cltd
inc
insb
rcll
incl
int3
call
push
and
add
cmp
adc
cs
lret
cmp
shlb
xor
mov
jmp
jbe
ss
inc
pop
lea
push
inc
in
mov
mov
mov
cmpsl
rclb
pop
int3
add
dec
mull
jb
call
loopne
popa
mov
inc
pop
call
int
in
inc
dec
sub
push
pop
mov
dec
adc
ja
notl
mov
pop
ja
and
or
xor
ffreep
and
pop
xlat
push
ret
or
lods
xchg
test
dec
or
mov
out
mov
mov
sub
mov
lahf
or
bound
rorl
aad
sahf
add
bound
loope
dec
cmpsl
xor
repz
jns
lret
nop
mov
xor
lds
push
aaa
sbb
rorl
mov
xchg
inc
pop
adc
xchg
jbe
negl
popf
add
push
stc
inc
ja
adc
pop
pop
sub
das
adc
sub
cmp
mov
ljmp
mov
imul
addr16
or
dec
jns,pt
push
push
jne
lds
ret
repnz
adc
xor
adcl
add
or
adc
xchg
andb
or
push
and
es
mov
push
or
add
addb
adc
sub
add
and
mov
and
addb
and
add
and
sub
and
and
enter
mov
adc
dec
add
xor
movsl
or
jo
add
add
addb
jo
adc
cwtl
and
mov
pusha
xor
and
push
rcl
or
dec
inc
adc
sbb
adc
sbb
add
xor
inc
add
dec
add
add
add
xchg
or
and
push
cmpsb
inc
and
or
push
sbb
push
dec
inc
add
add
and
jb
add
add
sbb
inc
add
push
sub
dec
and
inc
loop
and
cwtl
or
dec
add
andl
pop
add
add
add
or
inc
add
andb
add
or
xor
dec
push
add
push
add
adc
add
and
and
xor
inc
addb
add
dec
inc
push
and
rolb
dec
or
add
xor
add
add
mov
inc
pusha
cltd
add
lret
les
or
addb
add
jbe
or
sbb
mov
xor
add
push
mov
and
and
or
add
xchg
adc
jo
sub
lds
add
lea
shlb
sbb
sbb
adc
mov
mov
and
andb
add
or
and
jns
imul
add
add
add
sub
add
add
add
add
nop
add
and
pop
inc
and
and
leave
addb
push
adc
and
add
les
adc
test
adc
or
add
push
add
push
and
and
sbb
push
or
es
sub
loopne
or
adc
addb
test
cmp
addb
and
adc
or
xor
test
add
add
pusha
adc
dec
add
and
and
mov
pusha
sub
add
add
add
push
or
add
add
or
or
lea
add
and
xor
sub
mov
je
and
mov
adc
add
and
push
add
adc
adc
and
xchg
add
and
adc
lds
and
or
inc
adc
sbb
sbb
and
and
add
pusha
test
push
les
push
mov
xor
subb
add
movsl
les
les
dec
movb
sub
sub
add
addl
add
add
add
push
add
pusha
rolb
push
and
and
add
inc
mov
and
xor
add
and
add
stos
add
xor
push
jge
andb
add
adc
add
inc
and
xor
mov
sub
add
add
and
mov
stos
and
cs
and
shl
or
adc
movsl
and
add
xorb
mov
dec
push
add
add
add
sbb
dec
add
gs
or
add
add
add
add
nop
addb
sub
inc
add
adc
inc
or
add
inc
addl
nop
or
mov
and
roll
add
or
adc
or
arpl
mov
add
rcll
and
or
or
push
push
add
and
add
add
bound
push
add
add
push
pop
add
dec
add
inc
add
or
adc
and
and
addb
push
add
add
adc
add
inc
add
add
adc
loopne
ret
dec
sub
adc
and
lds
or
xchg
adc
add
inc
add
add
pop
rcrb
andl
add
add
inc
popa
xchg
addl
and
orl
pop
push
and
shlb
add
pop
push
inc
dec
test
dec
dec
xchg
add
repnz
adc
inc
and
inc
add
inc
mov
inc
or
sub
or
ret
sbb
and
add
inc
and
add
mov
mov
add
add
or
xor
dec
add
rolb
add
add
and
xchg
push
addb
add
orb
add
or
add
mov
add
xorb
or
add
and
or
sub
or
adc
lock
dec
or
mov
or
add
push
add
dec
roll
adc
adc
add
add
add
andb
adc
add
and
sub
add
xchg
and
sub
sbb
bound
rclb
add
and
add
or
add
inc
add
add
addb
add
roll
add
adc
or
inc
loopne
add
add
add
add
adc
sbb
and
xor
adc
add
add
orl
shlb
add
inc
and
or
or
xor
ret
jmp
or
add
mov
sub
xor
add
and
and
dec
and
mov
add
and
add
and
or
inc
add
adc
add
inc
ret
and
add
addb
add
addl
add
mov
test
or
and
or
cwtl
sbb
je
push
adc
or
pusha
add
inc
les
inc
ret
adc
add
and
xor
add
jb
adc
or
add
and
cltd
or
pushf
or
xor
or
mov
mov
add
add
push
ret
inc
add
and
and
add
mov
pop
push
pusha
add
xor
push
xchg
inc
sub
and
sbb
add
add
sbb
add
inc
inc
inc
add
sbb
xorb
addb
nop
add
add
adc
inc
add
pusha
mov
xor
orb
add
or
add
push
test
add
inc
inc
or
push
add
addb
add
mov
add
fs
and
pop
pusha
aam
or
adc
add
adc
and
jb
sub
js
andl
adc
inc
mov
or
xor
call
add
add
jo
add
push
add
or
pop
adc
or
adc
inc
adc
pusha
inc
inc
rol
add
add
xor
push
add
xchg
add
and
dec
enter
xor
and
and
add
add
jae
inc
xchg
or
mov
xor
and
sbb
inc
add
fs
xchg
cwtl
xor
adc
add
adc
add
cmpsb
add
mov
test
and
mov
push
adc
sub
adc
cmp
inc
mov
test
sub
add
nop
addb
xor
add
adc
adc
push
and
adc
insb
adc
add
adcb
add
or
inc
add
add
and
addl
or
add
adc
xchg
adc
xor
adcb
and
add
adc
and
add
add
inc
mov
andb
push
mov
pusha
test
adc
add
andb
and
push
push
add
cltd
adc
and
movsl
or
pop
cwtl
sbb
and
inc
inc
add
adcb
add
or
or
inc
adc
mov
and
test
mov
add
and
and
inc
add
inc
or
push
add
adc
and
mov
adc
adc
pop
inc
adcl
push
adc
inc
or
or
sbb
bound
addl
inc
xor
add
adc
add
adcb
add
add
inc
sbbb
add
popa
push
sub
add
adc
push
adcb
or
xchg
or
mov
xor
add
adc
and
add
add
add
sub
and
sub
ret
add
pusha
inc
inc
and
add
and
inc
mov
sub
mov
inc
add
insb
add
mov
ret
push
addb
add
popa
add
inc
add
jno
and
and
and
inc
and
sbb
inc
addl
andb
or
enter
add
and
xor
or
mov
adc
add
mov
pusha
inc
orb
or
or
add
js
mov
add
data16
jo
movups
add
addl
inc
add
adc
add
inc
mov
jno
xor
and
mov
inc
lds
daa
adcb
or
add
dec
roll
adc
inc
add
and
movb
rolb
subl
add
add
shl
sub
push
sbb
mov
add
add
adc
bound
and
add
add
and
sbb
adc
pop
and
add
sub
add
add
mov
cmp
and
push
addb
add
inc
add
add
adc
add
add
inc
add
or
adc
into
adc
and
add
and
adc
and
xchg
lock
inc
pop
sub
or
pop
add
orb
add
or
mov
push
add
add
mov
je
enter
and
addb
and
dec
push
add
inc
add
or
inc
adc
inc
adc
subb
inc
sbb
xor
adc
add
inc
adc
adc
add
adc
add
pushf
adc
add
add
or
add
and
add
pop
andb
pop
pop
add
inc
mov
xor
add
add
and
add
andb
or
addb
sbb
or
dec
push
roll
add
xchg
and
or
and
and
add
addl
lods
or
pusha
add
or
push
ret
add
add
nop
add
or
add
inc
add
add
add
aam
add
push
adc
shlb
inc
push
and
mov
pop
push
add
and
adc
pushf
add
add
add
adcb
push
sub
add
add
sbb
lahf
jns
sbb
sbb
inc
and
add
push
inc
adc
push
add
dec
and
adc
arpl
jns
shlb
add
add
xor
add
nop
adc
shlb
adc
and
add
push
add
inc
inc
jmp
add
add
mov
or
dec
jb
add
mov
add
adc
addb
and
adc
or
pusha
and
add
add
mov
xchg
lea
add
sub
inc
or
add
xor
or
push
dec
push
loope
jo
add
leave
inc
and
sub
mov
or
push
lea
loopne
and
add
sbbb
add
jo
add
loopne
or
push
mov
and
sub
inc
mov
push
add
inc
adc
add
mov
inc
adc
xchg
inc
mov
xor
xor
mov
lret
inc
sbb
or
sub
push
ss
add
add
push
pusha
inc
or
add
and
push
test
and
inc
and
add
add
or
and
add
addb
mov
sub
inc
inc
add
adc
lods
add
imul
push
mov
add
and
mov
mov
mov
rolb
movsb
inc
sbb
pusha
test
shlb
inc
add
adc
add
adc
push
adc
adc
and
ret
loopne
or
add
adc
or
add
add
add
inc
or
or
or
adc
popa
add
and
mov
adc
add
inc
add
xor
or
add
addb
mov
add
add
add
add
or
push
and
ror
xor
inc
and
popa
or
inc
inc
orb
or
or
and
cwtl
addl
add
add
inc
movsl
and
add
and
cmp
pusha
or
add
cltd
add
mov
dec
ret
adc
add
add
add
movsl
mov
or
and
or
orb
pop
inc
inc
inc
adcb
add
inc
and
addb
or
add
inc
cmp
adc
xchg
inc
push
and
pusha
add
andb
adc
add
and
or
push
andb
add
xchg
push
add
nop
push
adc
add
add
add
add
and
push
add
and
or
push
and
jmp
and
add
add
fwait
add
jno
mov
dec
adc
adcb
or
pusha
inc
add
lret
adc
xorl
add
cmp
rolb
sub
nop
or
inc
adcb
add
nop
push
and
bound
add
add
add
dec
or
push
add
push
push
add
test
or
or
adc
add
inc
push
add
test
adc
push
arpl
mov
xchg
add
add
sbb
push
loopne
mov
add
or
bound
ss
addl
push
xor
roll
and
and
dec
xor
add
adc
call
pop
adc
add
adc
push
or
add
adcb
les
push
mov
dec
and
and
inc
sbb
add
and
jns
mov
add
inc
dec
add
or
rclb
or
inc
inc
add
and
addb
test
test
pop
add
addr16
test
adc
add
nop
add
orb
inc
test
and
es
dec
sub
pop
inc
adc
in
add
add
addb
adc
or
adc
add
add
pop
add
sbb
adc
xchg
xchg
jo
movsb
add
add
test
pop
sub
add
add
test
cmp
addb
push
inc
adc
or
adc
adc
andb
inc
add
xchg
add
and
xchg
and
dec
ret
orb
xchg
inc
jns
sbb
add
dec
or
andb
daa
add
aas
adcl
add
addl
inc
push
and
mov
daa
add
and
add
inc
or
and
or
add
add
pop
xor
popa
and
inc
mov
adc
int3
add
add
movsl
inc
add
add
adc
mov
enter
add
and
or
add
add
dec
xchg
add
or
pop
adcl
add
push
add
add
sub
add
loopne
addb
add
mov
add
and
pop
add
subl
or
sub
adc
nop
and
adc
dec
jns
sub
mov
and
inc
test
add
inc
roll
or
xor
adc
and
inc
add
and
push
push
or
or
test
adc
and
mov
inc
add
inc
mov
and
adc
inc
add
and
add
orb
push
push
and
add
and
adc
adc
dec
inc
or
adc
push
and
data16
or
pop
add
sbb
orb
pop
es
add
adc
inc
inc
sbb
xor
and
xor
add
sub
add
and
or
orb
and
flds
lock
push
xor
push
and
ret
add
add
push
cltd
dec
add
inc
and
add
adc
mov
addl
mov
es
dec
adc
test
xor
adc
lods
adc
or
andl
and
dec
inc
add
fs
push
addb
adc
push
inc
add
add
add
inc
add
add
add
add
stos
xor
and
addl
ss
mov
or
ret
add
and
lcall
or
and
dec
sub
cmpsb
inc
adc
add
add
adc
or
or
nop
add
sub
addl
or
add
ret
andb
add
or
cmp
adc
cmpb
inc
mov
andb
mov
nop
addb
nop
add
or
adcb
sub
add
add
and
and
inc
adc
add
cmp
sub
popa
inc
adc
adc
add
inc
mov
sbbb
and
data16
xor
adc
nop
cwtl
rolb
cs
or
adc
add
inc
roll
adc
add
add
add
inc
jl
or
or
push
push
adcb
adc
cltd
adc
nop
cmp
xor
add
or
inc
add
add
addb
add
push
xchg
rcr
inc
and
rcrb
xor
xor
les
mov
add
xchg
inc
daa
sub
addb
fs
and
xchg
adc
test
add
jecxz
pusha
dec
adc
and
and
mov
inc
add
and
add
adc
or
adc
adc
adc
mov
pusha
or
add
adc
pop
add
dec
or
add
adc
inc
add
les
add
or
and
add
lea
add
add
and
or
movsl
imul
or
inc
sub
and
xchg
or
addl
dec
or
inc
add
add
xor
or
adcb
add
andb
add
add
add
add
mov
and
add
addb
jo
and
add
dec
push
mov
adc
add
adc
loopne
add
and
ret
add
or
mov
enter
dec
and
andb
inc
push
adcb
add
inc
mov
inc
add
faddl
add
and
andb
je
mov
xor
add
mov
inc
or
or
adc
add
inc
add
sub
add
pop
nop
add
or
and
add
das
inc
xor
inc
adc
mov
push
inc
add
iret
add
adc
and
xchg
sub
or
push
add
or
inc
add
sbb
push
add
inc
add
bound
adc
add
push
adc
addb
add
adc
dec
or
add
adc
in
add
inc
add
add
add
add
add
icebp
or
lea
or
and
adc
sub
add
mov
test
rolb
push
andb
addb
inc
add
dec
jo
xor
push
or
xorb
add
xor
or
add
sub
or
inc
push
sub
add
or
add
adc
mov
add
rolb
adc
add
add
push
push
adc
mov
les
adc
sub
rolb
inc
inc
add
push
adc
and
test
add
loope
add
sbb
call
js
addb
add
sub
add
adc
and
inc
add
mov
sub
add
or
lea
jo
pusha
addl
add
xor
dec
sbb
add
add
test
add
mov
add
mov
addb
and
add
and
push
add
add
jno
pop
add
mov
inc
mov
push
add
and
or
or
ret
xor
addb
add
inc
adcb
add
adc
push
jo
add
xor
outsb
inc
ret
sbb
or
add
xor
sbb
mov
adc
adc
add
xorl
add
inc
add
rol
push
and
push
nop
push
adc
and
push
and
les
and
es
add
jb
or
and
add
add
inc
push
test
add
push
mov
xor
inc
adc
add
inc
or
add
bound
add
adc
or
inc
adc
inc
mov
stos
pusha
add
mov
add
and
add
add
fadds
add
add
add
addl
mov
inc
adc
cmpsb
add
pop
push
add
add
mov
adc
outsb
mov
push
or
xor
lods
cmp
dec
and
adc
dec
mov
addb
imul
add
mov
inc
add
and
add
add
push
inc
add
or
addb
inc
add
add
add
cmp
adc
mov
xchg
cmpsb
addb
adc
addl
and
in
adc
sub
inc
add
sbb
add
and
add
addb
and
push
add
sbb
or
or
add
add
inc
adc
adc
rolb
xchg
sub
dec
hlt
add
adc
jo
add
add
mov
add
sbb
sub
add
jns
add
xorl
mov
add
push
mov
add
add
mov
popa
add
nop
add
inc
add
adc
mov
add
and
add
orb
and
add
and
inc
or
add
add
inc
movsl
add
and
add
push
add
xor
stos
ret
adc
mov
inc
shlb
inc
or
and
data16
adc
xor
add
or
inc
addb
sub
xor
add
xor
or
sbb
and
cmpb
inc
andb
adc
or
inc
and
mov
adc
mov
nop
cmp
mov
add
add
and
mov
mov
xor
sub
or
es
or
add
or
xchg
add
and
fadds
adc
add
dec
adc
and
adcb
xor
dec
and
adc
mov
sbb
or
add
dec
push
pop
add
push
or
rorl
xchg
int3
or
add
xor
inc
add
dec
orl
nop
add
adcl
inc
inc
andl
add
int
inc
pop
adc
add
add
andb
or
add
mov
and
and
dec
sub
cmpsb
or
push
push
popa
mov
and
dec
aam
addb
rolb
add
or
cmp
daa
add
inc
add
jae
inc
dec
cwtl
and
les
adc
inc
add
add
sub
add
and
addb
add
or
int3
add
orl
test
inc
add
add
loopne
and
adcb
cmp
push
add
jo
add
inc
inc
or
addb
xor
andb
pop
xor
add
or
add
xchg
and
xchg
dec
inc
sub
or
mov
xor
add
dec
and
adcb
adc
jbe
xor
adcb
or
xchg
add
mov
or
xor
inc
add
add
pushf
inc
add
cltd
add
adc
add
or
pusha
adcb
mov
add
and
push
pop
adc
sbb
and
add
lret
adc
mov
and
add
and
mov
mov
and
add
orb
inc
mov
add
dec
add
adc
push
inc
inc
add
add
and
inc
add
inc
add
adc
add
rclb
adc
pop
add
rclb
add
mov
and
loop
add
inc
sbb
add
leave
movsb
adc
andb
mov
enter
adc
addb
or
inc
or
add
hlt
or
add
xor
inc
inc
xorl
movsb
add
add
sub
inc
add
add
or
add
mov
add
adc
shlb
mov
test
add
add
inc
add
add
leave
daa
or
mov
sub
add
pusha
cmp
lea
sub
mov
leave
cmp
and
add
add
mov
mov
movsb
cwtl
add
insb
add
add
and
and
or
nop
or
addb
subb
addb
add
and
andb
add
sbbb
addb
mov
add
int3
add
or
addb
test
adc
cmp
add
or
xor
add
xor
xor
add
adc
sbb
sbb
test
inc
add
les
inc
and
xchg
add
rcll
push
and
add
orb
enter
adc
and
mov
add
adc
sbb
loop
rcrb
inc
sbb
test
adc
push
and
add
inc
sub
xor
pusha
and
or
mov
xor
or
xor
int3
adc
add
inc
addl
add
add
or
adc
or
add
arpl
sbb
adc
insb
add
add
or
mov
mov
or
nop
mov
add
enter
pusha
adc
add
adc
test
adc
mov
test
add
add
adc
push
add
and
jmp
or
add
out
add
sub
adc
push
and
mov
roll
or
or
xor
add
push
add
dec
or
nop
adc
inc
adc
xchg
or
inc
dec
add
sbb
add
or
push
pusha
es
mov
call
sbb
and
or
mov
push
and
sbb
dec
and
inc
adc
push
or
add
push
or
add
adc
add
cwtl
inc
add
rolb
inc
push
inc
and
inc
add
dec
adc
movsl
nop
pusha
add
add
mov
push
es
orb
mov
add
and
mov
and
mov
adc
sbb
mov
add
or
and
add
and
xor
and
or
mov
add
push
and
or
inc
adc
popa
add
adcb
sbb
or
sub
bound
and
adc
or
nop
add
rcrb
add
inc
adc
pop
rolb
mov
inc
xchg
lock
add
add
add
and
add
push
mov
inc
mov
movsb
sub
andl
test
add
add
addb
rcrb
add
add
push
or
inc
loop
add
push
or
fs
add
add
inc
or
loop
push
add
xor
or
xor
mov
mov
adc
dec
adc
mov
add
add
push
add
adc
or
ret
add
push
mov
add
add
add
adcb
push
mov
mov
xor
and
inc
adc
or
adc
mov
or
loop
add
sub
test
popa
mov
add
inc
add
dec
or
add
add
add
add
add
leave
addr16
add
andb
adc
mov
dec
or
aam
and
inc
test
push
cwtl
addb
cwtl
push
inc
add
addb
add
bound
xchg
add
rolb
xchg
addb
sub
xor
adc
xor
mov
or
adc
sub
loopne
and
or
jecxz
and
add
or
inc
shrl
mov
sub
push
push
cmp
cmovo
add
or
dec
shrb
adc
add
sbb
or
test
and
shlb
shlb
cmpsb
add
adc
add
rolb
and
sub
push
add
and
mov
add
add
add
add
cmp
add
add
mov
add
inc
inc
and
or
push
es
pusha
add
sub
ret
add
pusha
or
addb
sbbb
inc
xorb
add
add
lock
sbb
cmpsb
and
xchg
inc
xor
es
inc
add
xor
dec
movsb
add
add
shll
inc
inc
add
sbb
pusha
add
shlb
inc
mov
or
add
pusha
or
push
add
syscall
add
inc
adc
add
cmp
or
adc
mov
add
adc
test
andb
dec
push
adcl
or
add
andb
dec
sub
xor
gs
xor
sub
xor
inc
mov
add
add
jno
adc
adc
inc
and
add
add
add
inc
adc
sbb
stos
adc
or
adc
add
inc
mov
and
sub
and
adc
and
pusha
andl
addl
and
sub
push
push
xchg
ret
dec
add
dec
and
add
xchg
and
addl
and
add
adc
sbbb
rolb
and
or
add
roll
inc
and
or
inc
add
inc
cmp
add
push
or
and
es
add
adc
pusha
and
test
adc
push
inc
rolb
adcb
and
fldenv
and
add
inc
or
inc
arpl
or
andb
loopne
test
adc
js
adc
and
and
add
add
and
add
adc
sub
test
and
and
addl
add
add
add
inc
add
add
or
and
inc
add
shlb
or
andb
or
and
dec
add
adc
inc
jl
add
add
and
in
inc
adc
inc
xor
sub
inc
and
lea
lea
inc
mov
pusha
sub
add
pusha
sub
add
xchg
add
dec
aaa
rolb
inc
mov
add
stc
add
add
and
and
add
and
inc
add
test
out
adc
add
xor
and
addb
andl
mov
dec
or
add
lcall
and
add
add
sub
mov
add
add
lret
and
sbb
and
inc
add
test
movsb
add
and
subl
loopne
adc
add
inc
xor
test
adc
add
or
add
sub
addb
lds
xchg
xchg
addb
push
mov
add
or
nop
call
pop
sbbb
inc
add
add
push
lret
add
and
add
xor
add
mov
pusha
addb
and
add
mov
sbb
add
add
and
mov
adc
add
and
add
add
mov
or
add
mov
add
dec
or
andl
pusha
sub
inc
add
add
mov
inc
xchg
lea
ljmp
add
mov
add
dec
mov
and
or
inc
inc
pop
and
push
add
lds
push
inc
add
add
or
add
add
adc
add
rclb
and
or
into
adc
add
cmp
adc
mov
add
add
add
gs
add
and
or
subl
add
push
rolb
add
inc
or
and
add
xchg
and
add
inc
nop
adc
add
addl
adc
inc
movsb
push
add
faddl
xor
ret
xchg
andb
sbb
or
orl
inc
add
and
test
ret
out
sub
dec
test
xchg
test
nop
addl
and
jno
add
rol
add
adc
inc
adc
lds
adc
or
or
add
xor
lock
rolb
mov
test
push
subl
or
add
or
mov
addl
enter
mov
adc
andl
add
mov
cmp
push
sub
inc
adc
add
add
or
push
add
add
add
inc
add
jp
add
add
or
add
inc
add
push
cmp
and
add
adc
es
mov
pop
mov
add
popf
adc
adcb
or
nop
and
enter
shlb
addb
mov
xorb
push
add
jae
loopne
add
and
push
dec
add
add
or
add
inc
fs
pop
inc
orl
inc
add
mov
dec
sub
lcall
mov
nop
push
add
nop
xorb
or
xor
inc
xor
add
push
adc
movb
popa
add
adc
orb
clc
inc
mov
adc
add
inc
push
add
nop
inc
inc
add
inc
test
add
inc
adc
adc
mov
adc
sbb
js
mov
push
add
add
add
sbb
mov
call
add
push
sub
push
inc
jne
roll
nop
add
push
push
mov
or
sub
inc
cmp
push
or
dec
mov
bound
add
inc
add
sub
or
adc
mov
add
mov
nop
xchg
inc
cmp
or
addb
fadds
and
or
in
loopne
add
adc
loopne
stc
and
xorb
add
add
adc
add
sub
addl
add
adc
mov
add
inc
and
push
or
inc
mov
push
or
xchg
mov
sbb
pop
add
dec
and
inc
sbb
xor
and
or
and
xchg
cli
add
or
test
or
sbb
or
add
or
adc
add
or
nop
inc
or
adc
inc
adc
inc
addl
inc
adc
inc
into
imul
inc
add
xchg
adc
xor
adc
or
addb
push
adc
add
xor
test
addb
and
add
push
addb
add
lcall
or
dec
adc
addb
and
add
mov
push
addr16
sbb
add
ret
inc
dec
pusha
add
add
inc
add
add
sub
lods
bound
popa
xor
dec
inc
add
dec
adc
sbb
mov
dec
push
orb
or
or
add
inc
xor
add
add
adc
xchg
push
sbbb
and
add
or
or
test
add
add
add
and
xor
add
addb
mov
add
outsb
add
or
or
or
add
cmp
or
add
push
cwtl
pop
and
adc
xor
add
add
adcb
rcrl
es
cltd
cmp
add
add
call
sub
rolb
add
andb
dec
addb
outsb
and
adcb
dec
push
test
add
push
jge
add
or
addl
xor
and
add
invd
inc
test
or
inc
pop
sbb
shrl
push
es
add
or
inc
add
test
and
pusha
inc
sbb
add
add
inc
sbb
andb
sub
or
mov
and
xor
sub
loop
xchg
jbe
add
adc
inc
xor
add
or
sub
or
inc
inc
sbb
test
movsb
add
dec
sub
adc
in
add
inc
adc
inc
fiaddl
xchg
inc
push
mov
add
adc
inc
test
adc
add
and
rorb
mov
adc
test
nop
nop
sbb
adcb
enter
mov
sbb
or
and
or
andb
and
and
add
sub
and
inc
mov
inc
adc
adc
add
adc
add
and
add
les
nop
pop
addb
subl
test
inc
test
and
push
jmp
xor
adc
adc
popa
inc
mov
push
adc
add
add
sbb
add
add
or
inc
push
sub
inc
sub
add
or
mov
or
add
add
add
jae
and
nop
push
adc
orb
cmpsb
or
or
inc
and
add
inc
dec
inc
nop
and
add
push
rolb
andb
mov
xor
cmpsl
xor
add
adcb
push
add
call
push
or
inc
inc
jne
add
addb
orl
or
inc
add
movb
adcb
roll
sub
inc
inc
add
add
movsb
adc
add
xor
inc
add
add
rolb
and
add
inc
adc
add
or
cwtl
add
inc
or
pop
and
inc
inc
add
add
inc
xor
adc
fs
add
and
push
push
add
add
je
add
dec
adc
mov
lods
inc
mov
or
addb
les
andl
lret
add
sub
and
inc
ret
add
add
adc
xor
push
inc
jo
and
dec
add
push
and
push
adc
inc
loopne
push
test
xor
sub
mov
and
orb
pusha
sub
andl
cmp
ret
add
add
add
inc
add
xor
rolb
and
inc
sbb
adc
add
push
subl
and
dec
or
add
adc
nop
add
addb
adc
or
mov
push
inc
cmp
add
add
add
push
adc
jo
test
add
add
sub
adc
mov
and
add
add
pop
add
add
test
inc
and
add
add
inc
lcall
ret
add
ud2
push
dec
add
xchg
and
adc
inc
add
inc
adc
and
or
xchg
xor
or
or
sbb
add
inc
push
add
add
adc
add
or
add
test
mov
addl
dec
mov
inc
add
add
mov
add
add
or
inc
add
dec
les
test
lcall
xchg
mov
nop
add
dec
pop
inc
andb
inc
and
orb
adc
or
dec
je
sub
nop
add
orb
add
dec
adc
pop
and
add
sub
and
aam
add
push
or
add
inc
sub
xchg
lods
ret
inc
add
add
add
inc
add
or
dec
scas
jmp
mov
xor
and
add
add
inc
adc
add
push
and
call
add
add
xchg
inc
add
sbb
add
push
inc
add
xor
adc
add
andb
inc
andb
lret
add
add
add
sub
cmp
roll
inc
and
add
or
js
adc
add
xchg
add
add
add
fs
sub
loope
orb
add
clc
nop
add
add
add
inc
add
push
or
push
test
add
call
xchg
ret
lret
pusha
mov
sub
cs
or
loopne
xor
mov
add
cmp
add
add
and
adc
add
inc
and
add
adc
popa
dec
add
orb
add
or
and
pop
adc
adc
add
aaa
push
inc
and
pop
xor
add
inc
add
add
add
add
dec
adcb
add
nop
adc
mov
and
add
add
pusha
sub
add
addl
add
mov
prefetchnta
inc
push
addb
add
dec
les
movsl
inc
sbb
sbb
inc
enter
test
push
add
or
add
inc
add
and
ror
inc
insl
sbbl
sbb
add
loope
add
rolb
add
dec
inc
add
mov
test
inc
add
inc
inc
add
add
rolb
add
and
push
inc
add
add
add
dec
roll
or
imul
inc
cmp
and
bound
and
add
add
xor
das
push
add
add
and
add
or
push
sub
add
add
lock
adc
add
add
or
add
or
dec
inc
adc
shll
add
into
or
add
nop
add
dec
pusha
push
mov
add
or
or
mov
and
adc
xor
add
dec
adc
fs
adc
add
mov
or
addb
inc
and
pop
add
add
xor
and
add
add
add
add
sbb
add
adc
push
inc
add
rolb
and
sub
inc
add
add
add
add
outsb
sbb
add
add
or
mov
cltd
inc
and
add
and
xor
add
and
mov
loope
xor
add
inc
add
adc
sub
add
dec
and
add
add
add
adc
inc
orb
inc
sbb
or
les
in
add
or
add
ret
add
or
inc
or
adc
rolb
add
and
test
cmp
add
or
or
movsb
sub
add
addl
add
inc
add
popa
addb
add
add
add
arpl
xchg
and
add
mov
add
jb
or
or
or
add
add
or
add
inc
int3
adc
adc
add
add
add
pusha
orl
xor
add
xchg
inc
and
xchg
fmull
sub
pusha
pop
add
lds
add
and
xor
orb
add
add
add
add
mov
adc
mov
mov
add
adc
adc
inc
adc
adc
add
adc
xor
and
push
lret
and
rclb
add
sbb
inc
xor
jo
addb
inc
adc
or
jnp
or
adc
mov
or
addl
adc
inc
add
lods
add
adc
add
adc
add
addb
ret
adc
dec
and
or
xor
and
add
dec
test
addb
adc
add
inc
adc
push
andl
add
and
pusha
xchg
sbb
pop
and
andl
and
or
addb
push
xor
movsb
and
dec
adc
add
inc
add
xor
insb
nop
adc
pusha
add
add
adc
inc
inc
and
inc
add
int3
add
jno
adc
adc
and
add
add
roll
xor
add
test
sbb
inc
add
rolb
add
add
add
sbb
and
add
add
add
or
add
das
nop
add
jo
add
orb
or
add
or
nop
or
pop
mov
sub
inc
inc
or
adcb
push
add
add
adc
and
mov
inc
les
and
xor
or
add
addl
sub
inc
xchg
and
inc
adc
add
addb
or
adc
add
and
cmp
sub
test
add
adc
add
and
add
mov
mov
sub
mov
enter
pop
sub
or
nop
and
pusha
add
or
or
add
adc
sub
inc
add
loop
insb
add
or
add
xor
inc
andb
jo
push
inc
add
push
add
add
inc
addb
mov
inc
add
xor
inc
in
add
and
add
and
pop
xor
and
mov
xchg
push
and
inc
inc
adc
add
pusha
push
xchg
lcall
xor
or
addb
inc
test
add
adc
and
add
adc
and
test
mov
add
lods
test
add
or
mov
push
sub
add
add
les
add
adcb
add
push
add
cmp
sbb
sbb
shll
or
add
lock
sub
and
or
add
add
nop
adc
and
imul
or
add
bound
orb
add
add
test
push
add
add
mov
sbb
inc
dec
xchg
je
and
inc
sbb
or
add
movsl
add
add
orb
add
and
or
sbb
shlb
pusha
add
dec
add
mov
add
or
inc
jns
add
pop
and
cs
flds
andb
add
inc
icebp
add
add
push
or
orb
or
cmpsb
sbb
mov
xchg
add
add
mov
mov
inc
add
movsb
andb
adc
popa
add
adc
add
or
xor
stos
add
xchg
jmp
adc
sbb
int3
inc
mov
fs
add
xor
dec
add
add
and
add
or
push
add
push
addb
test
sub
and
xchg
mov
inc
adc
movsl
adc
movsb
or
adcb
inc
dec
and
xor
push
and
push
or
dec
inc
jo
js
add
or
inc
add
add
lock
add
inc
and
add
add
inc
movsb
pop
int3
movb
test
mov
xor
or
rolb
push
push
pusha
add
add
mov
call
add
cmp
or
inc
inc
add
xchg
or
add
inc
adc
test
pop
inc
sbb
add
pop
mov
mov
add
or
addb
inc
add
dec
add
pushf
add
adc
inc
and
adc
add
mov
add
inc
and
and
pop
and
or
pop
or
fadds
adc
mov
add
andb
mov
add
mov
xor
add
and
add
or
add
or
sbb
inc
daa
push
adc
or
add
inc
add
inc
add
mov
and
add
add
addb
add
or
mov
add
inc
sub
cmpsb
add
add
loopne
nop
and
test
push
rolb
push
and
push
add
add
dec
outsl
mov
inc
or
inc
add
cwtl
xchg
push
or
and
or
xor
add
add
adc
adc
and
push
add
or
add
or
mov
add
test
add
mov
push
sbb
and
adc
add
add
lock
mov
inc
add
or
and
addb
add
mov
xor
inc
test
or
mov
or
or
mov
popa
sbb
adc
adc
pusha
add
dec
add
add
or
ss
push
xor
sbb
cmp
add
xorl
nop
roll
bound
rorl
adcb
inc
sub
sbb
push
add
fildl
add
mov
addb
add
add
xor
and
andb
pushf
sbb
lds
or
or
loopne
xor
adc
inc
andl
mov
sub
inc
add
push
and
inc
adc
mov
daa
pop
add
mov
or
or
adcb
or
sub
or
adc
and
add
add
or
adc
sub
les
add
add
or
pusha
adcl
add
adc
add
xorb
pusha
dec
mov
loopne
or
test
adc
add
inc
and
adc
es
xor
dec
inc
and
xor
and
push
or
add
pusha
dec
inc
orb
mov
adc
addl
sub
add
add
add
push
and
and
add
xchg
add
xor
add
and
sub
ret
or
dec
inc
add
cmp
push
adc
inc
or
mov
add
inc
and
add
xor
adc
test
or
adc
add
xor
pusha
or
inc
loope
adcb
or
ret
add
or
inc
mov
add
bound
add
es
add
and
and
adc
adc
or
adc
mov
add
add
and
add
add
add
or
and
addb
add
fs
inc
cmp
adc
push
or
push
test
dec
inc
add
add
add
jns
add
add
mov
mov
loopne
addb
add
add
add
adc
add
add
add
xor
or
mov
jl
add
inc
data16
and
add
mov
and
or
inc
add
add
shlb
add
add
add
pusha
add
inc
add
ret
mov
mov
adcb
and
cmp
adc
xor
and
sub
andb
inc
sbb
add
pusha
inc
inc
test
loopne
jo
addb
push
inc
orb
push
or
adc
inc
inc
or
mov
inc
add
add
xor
inc
add
dec
add
dec
andb
add
sub
push
sub
sub
dec
add
push
ret
push
mov
adcb
or
roll
mov
or
inc
and
sbb
push
push
bound
adc
dec
add
add
or
and
add
or
cmp
cmp
and
pop
shlb
movl
xchg
adcb
sub
add
add
adc
daa
add
add
ret
dec
lret
adc
add
pusha
and
push
add
add
push
test
or
sub
cwtl
inc
push
add
addr16
xchg
inc
pop
add
inc
inc
add
add
mov
or
and
xchg
pop
sub
sub
or
adc
fs
add
sub
add
add
test
mov
and
push
and
or
addb
add
and
in
sbb
and
add
and
add
test
inc
ss
and
adc
mov
add
pop
cld
and
add
andb
and
xor
adcb
adc
xchg
mov
add
es
dec
inc
add
and
mov
and
pop
or
add
mov
xchg
adc
and
andb
mov
add
add
mov
pop
mov
fsts
add
add
inc
adc
pusha
or
and
add
add
test
adcb
adcb
inc
nop
pusha
xchg
and
adcb
pop
push
add
add
sbb
test
enter
inc
enter
add
add
add
add
add
add
or
add
andl
add
add
add
add
or
add
or
push
add
pusha
add
adc
pusha
pusha
or
inc
addb
push
add
add
add
and
pop
inc
loope
ret
mov
dec
xchg
add
add
mov
and
add
xor
shlb
andb
add
sub
sbb
add
dec
inc
inc
and
dec
add
add
add
mov
addb
rorl
add
add
add
add
sbb
rolb
add
rol
push
add
inc
add
inc
mov
add
loopne
add
addb
push
mov
sub
push
call
add
push
mov
mov
push
mov
cmp
jne
cmp
jne
sub
mov
cmp
jne
mov
cmp
je
mov
mov
push
mov
xor
push
call
add
cmp
je
push
push
call
add
mov
cmp
jne
mov
mov
mov
mov
mov
xor
push
push
push
call
add
lea
push
call
sub
push
call
add
push
push
push
push
push
call
add
mov
mov
sub
mov
add
push
push
push
push
push
call
add
cmp
jne
test
je
push
push
push
call
add
push
push
push
push
push
call
add
mov
and
push
push
push
call
add
mov
mov
cmp
je
push
push
call
add
mov
push
push
push
call
add
cmp
je
mov
push
push
call
add
test
je
and
call
mov
push
push
push
call
add
cmp
jne
mov
mov
test
jne
push
push
push
push
push
call
add
mov
cmp
je
cmp
jne
mov
mov
mov
sub
mov
push
push
push
push
call
add
push
push
push
push
call
add
cmp
je
sub
cmp
je
mov
mov
push
call
add
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
cmp
jne
sub
mov
mov
mov
push
push
push
push
push
call
add
mov
cmp
je
mov
push
push
call
add
add
push
push
push
push
push
call
add
mov
push
cmp
je
add
mov
push
push
push
push
push
call
add
mov
push
mov
sub
mov
mov
xor
mov
call
mov
mov
mov
xor
push
push
push
call
add
shr
mov
push
call
add
push
push
push
call
add
push
push
push
call
add
sub
cmp
je
call
add
mov
call
push
push
call
add
cmp
je
sub
mov
mov
cmp
je
mov
test
jne
mov
mov
cmp
jne
mov
push
push
push
call
add
mov
push
push
push
push
call
add
mov
cmp
jne
mov
push
push
push
call
and
mov
mov
mov
mov
mov
cmp
jne
mov
push
push
push
push
call
add
mov
mov
sub
mov
sub
mov
pushl
push
pushl
call
push
call
add
addl
cmp
jne
mov
push
push
push
push
push
call
add
mov
mov
sub
mov
test
je
mov
add
mov
cmp
je
mov
xor
cmp
jne
mov
mov
xor
cmp
je
mov
add
mov
mov
cmp
je
cmp
jne
mov
cmp
je
mov
mov
mov
mov
mov
call
cmp
je
sub
push
push
push
call
add
and
mov
mov
sub
mov
mov
cmp
je
mov
sub
mov
push
push
push
push
call
add
mov
mov
xor
call
push
push
call
add
pop
mov
mov
sub
mov
pop
cmp
jne
mov
xor
cmp
je
xor
call
pop
cmp
jne
mov
call
leave
ret
mov
push
push
push
push
push
call
add
sub
mov
cmp
jne
mov
mov
mov
cmp
jne
mov
push
call
mov
push
push
push
push
call
add
mov
cmp
jne
mov
sub
mov
push
push
push
call
mov
sub
cmp
jne
mov
push
push
push
push
push
push
call
push
push
push
call
add
push
push
push
push
push
push
call
mov
push
push
push
push
call
add
cmp
jne
mov
call
mov
push
push
push
push
push
call
sub
push
push
push
push
call
add
push
call
mov
push
push
push
push
push
call
add
push
push
call
mov
sub
push
push
push
call
add
mov
push
push
push
call
mov
push
push
call
add
push
call
mov
push
push
push
call
push
push
push
push
call
add
push
push
push
push
push
push
call
add
mov
cmp
je
sub
cmp
je
cmp
jne
mov
sub
cmp
jne
push
push
push
call
add
cmp
je
mov
cmp
je
mov
mov
xor
test
je
mov
sub
push
call
add
cmp
jne
add
mov
push
push
push
call
add
push
push
push
push
call
add
mov
mov
call
cmp
je
mov
cmp
je
mov
push
push
call
mov
sub
mov
push
push
push
push
push
push
call
and
mov
call
push
push
call
add
mov
push
push
push
call
add
pop
sub
mov
pop
mov
mov
pop
call
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
call
add
push
mov
push
mov
cmp
jne
mov
or
push
push
push
call
add
push
mov
add
mov
add
push
push
push
call
add
movl
mov
mov
call
add
cmp
je
mov
mov
mov
mov
mov
and
push
push
push
call
add
call
cmp
jne
mov
mov
cmp
je
push
push
push
push
call
add
call
mov
mov
mov
cmp
je
cmp
jne
cmp
je
cmp
je
cmp
je
xor
mov
mov
mov
mov
add
mov
cmp
jne
or
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
cmp
je
mov
sub
cmp
jne
xor
mov
cmp
je
mov
mov
test
je
test
je
mov
sub
test
jne
mov
cmp
jne
mov
xor
cmp
je
mov
xor
cmp
je
add
mov
cmp
jne
and
mov
mov
cmp
je
mov
add
cmp
je
xor
mov
mov
cmp
je
xor
mov
mov
mov
or
je
add
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
test
jne
sub
mov
cmp
jne
cmp
je
mov
mov
sub
mov
mov
cmp
je
cmp
jne
cmp
jne
mov
mov
cmp
je
sub
cmp
jne
sub
mov
cmp
je
cmp
jne
mov
mov
addl
mov
mov
lea
xor
cmp
je
mov
mov
test
jne
sub
mov
cmp
jne
mov
xor
mov
mov
inc
or
cmp
jne
xor
mov
mov
sub
cmp
jne
mov
sub
cmp
jne
cmp
je
cmp
jne
mov
cmp
je
mov
mov
mov
mov
mov
mov
sub
push
push
push
push
call
add
mov
add
push
push
push
push
call
add
mov
xor
mov
mov
mov
add
mov
mov
mov
cmp
je
cmp
je
mov
mov
push
push
push
push
call
add
push
push
push
push
call
add
pop
test
je
mov
mov
pop
add
cmp
jne
push
push
call
add
pop
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
xor
push
push
call
add
push
cmp
je
mov
sub
test
je
sub
mov
push
push
push
call
add
push
call
add
mov
push
and
mov
push
mov
xor
push
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
push
push
call
add
rdtsc
or
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
test
je
mov
mov
mov
mov
mov
push
push
push
call
add
sub
mov
add
mov
mov
cmp
jne
xor
mov
rdtsc
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
sub
cmp
je
mov
add
mov
add
mov
mov
mov
cmp
je
mov
sub
mov
cmp
je
mov
pop
and
cmp
jne
mov
add
cmp
jne
and
mov
mov
mov
cmp
jne
add
mov
mov
mov
mov
pop
test
jne
sub
mov
mov
cmp
jne
test
jne
test
je
mov
sub
mov
mov
test
je
mov
test
je
cmp
jne
mov
cmp
jne
test
jne
mov
xor
mov
mov
mov
mov
mov
mov
pop
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
push
push
call
add
push
mov
push
call
add
push
push
push
push
push
push
call
add
mov
call
mov
mov
mov
sub
mov
mov
mov
or
cmp
je
mov
sub
cmp
jne
xor
mov
cmp
jne
cmp
jne
or
cmp
jne
test
jne
add
mov
mov
mov
cmp
je
mov
test
jne
mov
test
jne
cmp
je
or
mov
cmp
je
sub
mov
mov
cmp
je
cmp
je
mov
sub
mov
cmp
je
mov
mov
add
mov
cmp
je
mov
mov
decl
mov
xor
mov
xor
or
mov
mov
roll
mov
addl
mov
cmp
je
mov
or
cmp
jne
mov
mov
add
mov
add
cmp
jne
mov
mov
mov
mov
mov
sub
mov
add
mov
cmp
jne
or
mov
mov
mov
jmp
mov
push
push
call
add
mov
mov
pop
mov
sub
mov
pop
mov
pop
xor
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
mov
mov
mov
cmpl
je
mov
mov
add
mov
mov
add
mov
jmp
mov
push
lea
push
call
lea
push
call
mov
mov
push
lea
push
call
lea
push
mov
push
call
mov
movl
mov
sub
mov
movl
mov
add
mov
movl
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
cmpl
je
movl
cmpl
jge
cmpl
jle
jmp
jmp
mov
mov
mov
movl
jmp
mov
add
mov
mov
mov
cmp
jae
mov
add
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
cmpl
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
je
mov
movzwl
mov
movzwl
cmp
jle
mov
mov
mov
cmpl
je
mov
test
je
mov
mov
mov
movsbl
cmp
jl
movsbl
cmp
jg
movsbl
add
mov
mov
mov
mov
movsbl
cmp
jl
movsbl
cmp
jg
movsbl
add
mov
movsbl
movsbl
cmp
je
jmp
movsbl
test
jne
mov
mov
jmp
mov
add
mov
mov
add
mov
jmp
mov
mov
mov
mov
cmp
jne
xor
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
cmpl
je
cmpl
je
cmpl
jbe
mov
movsbl
test
je
mov
mov
mov
mov
add
mov
mov
cmpl
je
mov
cmpl
je
mov
mov
mov
cmp
jae
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
ja
mov
mov
cmp
jb
mov
mov
mov
add
cmp
jae
mov
mov
sub
mov
mov
add
mov
jmp
jmp
movl
jmp
mov
add
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
add
mov
mov
movsbl
mov
movsbl
cmp
jne
mov
movsbl
test
jne
mov
mov
movzwl
mov
mov
add
mov
jmp
mov
add
mov
mov
add
mov
jmp
jmp
xor
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
cmpl
je
cmpl
je
mov
mov
mov
mov
mov
test
je
mov
mov
mov
mov
mov
mov
movzbl
movzbl
xor
mov
mov
mov
movsbl
sub
mov
mov
mov
movsbl
mov
movsbl
lea
mov
mov
mov
movsbl
test
jne
jmp
mov
add
mov
mov
add
mov
jmp
mov
sub
jmp
xor
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
push
call
add
push
push
push
push
call
add
push
mov
push
push
push
push
push
call
add
push
mov
mov
push
push
push
push
call
add
mov
sub
mov
mov
xor
mov
pop
sub
push
push
call
add
push
push
push
call
add
pop
and
mov
push
push
push
push
call
add
pop
call
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
call
push
mov
mov
push
push
call
add
push
add
mov
mov
cmp
je
mov
push
push
push
push
push
call
add
add
cmp
jne
xor
mov
mov
push
push
push
push
call
add
xor
mov
mov
mov
mov
sub
push
push
push
push
push
call
add
mov
mov
pop
mov
pop
push
push
push
push
push
call
add
pop
test
jne
push
push
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
call
add
push
add
mov
push
add
mov
cmp
je
xor
mov
push
call
add
push
mov
xor
cmp
je
mov
cmp
je
mov
xor
push
push
push
push
push
call
add
cmp
je
mov
mov
sub
mov
mov
xor
mov
push
push
push
call
add
or
mov
mov
mov
mov
mov
mov
mov
add
mov
cmp
je
push
push
call
add
pop
add
mov
pop
mov
pop
add
mov
cmp
jne
mov
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
push
push
push
push
push
call
add
push
push
push
push
push
call
add
push
mov
push
call
add
call
cmp
je
add
cmp
jne
mov
mov
push
push
push
push
call
add
mov
mov
mov
call
push
push
push
push
call
add
mov
push
push
push
call
add
cmp
je
sub
mov
cmp
je
sub
push
call
add
cmp
jne
mov
push
push
push
call
add
cmp
je
mov
sub
mov
cmp
jne
add
mov
mov
mov
mov
push
push
call
add
pop
push
push
push
call
add
pop
sub
push
push
push
push
push
call
add
pop
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
push
mov
call
push
and
mov
cmp
je
cmp
je
mov
add
test
jne
push
push
push
push
call
add
push
push
call
add
sub
mov
mov
test
jne
add
cmp
jne
mov
sub
cmp
je
mov
cmp
je
mov
xor
mov
cmp
je
mov
mov
mov
cmp
je
mov
pop
sub
push
push
call
add
pop
push
push
call
add
pop
add
mov
cmp
jne
mov
mov
cmp
je
mov
mov
xor
cmp
jne
cmp
jne
mov
add
cmp
jne
sub
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
call
add
push
xor
mov
push
add
mov
push
cmp
je
mov
mov
mov
mov
push
push
push
push
call
add
mov
push
push
call
add
mov
pop
mov
xor
cmp
je
mov
cmp
jne
mov
and
push
call
add
pop
and
mov
mov
pop
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
push
push
call
add
push
push
push
push
push
call
add
push
mov
push
push
push
push
call
add
mov
mov
mov
and
mov
sub
mov
mov
cmp
je
xor
push
push
push
push
push
call
add
mov
xor
cmp
je
mov
pop
cmp
je
mov
pop
mov
pop
add
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
push
call
add
push
mov
or
mov
push
test
jne
push
push
push
call
add
push
mov
mov
mov
mov
call
pop
xor
cmp
je
mov
add
mov
pop
mov
mov
pop
xor
mov
mov
test
je
cmp
je
xor
cmp
jne
mov
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
call
add
push
mov
test
je
push
push
push
push
call
add
push
mov
push
call
add
push
mov
mov
push
push
call
add
mov
push
push
call
add
mov
mov
sub
mov
test
jne
mov
xor
cmp
je
mov
pop
push
push
push
push
call
add
pop
push
push
push
call
add
pop
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
xor
mov
push
cmp
je
xor
mov
push
mov
cmp
je
mov
mov
mov
cmp
jne
mov
cmp
je
xor
mov
mov
mov
test
jne
mov
mov
cmp
je
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
sub
mov
mov
cmp
jne
mov
mov
xor
mov
mov
test
je
add
mov
add
mov
cmp
jne
xor
mov
cmp
je
add
cmp
je
mov
xor
mov
mov
test
jne
sub
mov
pop
mov
and
test
je
mov
add
test
jne
xor
mov
mov
cmp
je
mov
mov
mov
cmp
jne
sub
mov
mov
cmp
je
mov
mov
mov
mov
mov
pop
mov
pop
add
mov
mov
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
cmp
jne
add
mov
mov
cmp
jne
cmp
je
test
jne
cmp
je
cmp
jne
mov
mov
mov
push
mov
sub
mov
mov
push
mov
add
cmp
jne
mov
mov
mov
mov
xor
cmp
je
mov
cmp
jne
add
mov
mov
cmp
je
mov
mov
mov
mov
test
je
xor
cmp
je
cmp
je
mov
cmp
je
sub
mov
mov
mov
cmp
je
mov
mov
mov
or
mov
mov
mov
cmp
jne
cmp
jne
mov
sub
cmp
je
mov
cmp
je
cmp
jne
mov
and
cmp
je
mov
mov
cmp
je
mov
mov
cmp
jne
cmp
jne
add
cmp
jne
xor
cmp
jne
mov
cmp
jne
mov
mov
xor
cmp
jne
mov
mov
add
mov
mov
pop
mov
sub
mov
pop
mov
pop
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
push
add
mov
push
mov
mov
mov
sub
mov
mov
mov
cmp
je
xor
mov
mov
mov
mov
mov
sub
test
jne
mov
mov
test
je
and
mov
mov
mov
pop
sub
mov
mov
test
je
mov
mov
cmp
jne
mov
mov
test
je
mov
cmp
jne
mov
mov
add
mov
mov
mov
pop
mov
add
cmp
jne
add
mov
mov
cmp
je
mov
add
cmp
jne
add
test
je
cmp
je
sub
cmp
je
sub
mov
pop
mov
leave
ret
add
gs
fs
lods
fstps
lock
push
pushf
mov
mov
sbb
push
add
in
loopne
lea
inc
subb
xor
sub
mov
push
mov
stos
pop
or
xor
jo
push
in
or
push
pop
movsb
ret
jl
fwait
xchg
ret
push
fs
xchg
pop
subl
add
pop
daa
dec
mov
xchg
outsb
pop
cs
and
xor
sbb
lds
xchg
outsl
mov
fldl
pop
pop
negl
stos
xchg
stc
out
movsb
orl
shrb
pop
movsl
sti
sub
push
call
and
outsb
dec
push
push
fucom
adc
mov
mov
fucom
js
das
push
movsb
inc
adc
xor
inc
in
divb
pop
dec
inc
add
dec
das
bound
cld
test
adc
push
mov
push
mov
test
aad
outsb
xor
ljmp
xchg
cli
cmc
inc
push
test
mov
push
xchg
jne
outsl
xchg
movsl
xor
or
sub
fmuls
daa
jo
push
sub
cmc
pop
xchg
scas
les
movsb
cmp
xchg
xor
pop
loopne
je
stc
cs
jb
ja
add
push
jb
mov
mov
vsqrtsd
and
stos
jne
fsubrl
stc
fwait
sbb
ja
or
ds
mov
jmp
jg
je
xchg
enter
int
adc
xchg
rcrl
jle
insl
daa
stos
imull
pop
jmp
fs
dec
ret
ficoms
test
push
sbb
repz
scas
pop
sub
xchg
aam
test
fimull
shr
rcrb
loope
aam
aas
and
movsb
xor
mov
pop
mov
iret
jnp
pop
lea
ret
and
repnz
cmpsb
in
es
adc
loopne
mov
xchg
and
sub
int3
loopne
inc
pusha
cmp
push
out
cld
gs
loope
or
mov
pusha
pop
addr16
arpl
or
or
pop
pop
inc
inc
loope
insl
sahf
mov
dec
insl
adc
xchg
pop
push
outsl
jp
and
inc
pop
in
dec
add
mov
ret
sub
aaa
icebp
movsl
int
inc
xchg
adc
push
mov
fcompl
push
push
les
and
xor
jno
andb
int3
lods
inc
xor
lret
lock
popf
cs
mov
mov
pop
daa
xchg
rorl
mov
bound
dec
xchg
push
and
icebp
xchg
or
sub
mov
mov
sub
inc
fiadds
sti
mov
xchg
jecxz
mov
or
mov
loop
push
and
jns
cmpsb
pusha
pop
inc
adc
jae
push
inc
xor
mov
lcall
inc
xor
pop
addr16
lock
pop
stc
daa
mov
sbb
xor
sbb
and
repz
gs
movsl
cmp
inc
cmp
cltd
outsl
rcrb
adc
pop
mov
out
mov
mov
ret
test
das
pop
xlat
hlt
cmp
ljmp
sub
sbb
adc
inc
push
cmc
loope
in
mov
lods
popa
jl
pop
je
mov
inc
jle
and
fisttpl
xchg
outsb
adc
mov
sub
or
xchg
and
jb
aam
std
push
js
push
and
rcrb
icebp
sub
xor
dec
popa
sub
jecxz
mov
lret
dec
addb
xchg
cmpsb
data16
inc
sbb
add
sbb
or
sti
iret
enter
in
push
sub
movsb
cmp
xchg
jmp
xor
and
pop
add
andb
sub
lret
gs
xchg
push
xchg
outsl
xchg
out
pop
jbe
xchg
sub
fcmovnb
mul
xchg
out
inc
mull
aas
pushf
jmp
jnp
dec
xchg
sbb
fcmovb
push
nop
cmpsb
mov
jnp
daa
movsb
mov
jmp
push
dec
roll
inc
lods
and
jo
pop
mov
pop
push
jo
clc
sbb
loopne
pop
xchg
in
loope
arpl
nop
jns
arpl
lock
frstor
cmpsb
pop
adc
xlat
lods
mov
or
insb
jo
gs
repz
movsl
push
lods
mov
pushf
sti
sti
jno
std
out
and
and
popf
inc
imul
imul
aaa
icebp
repz
mov
imul
push
jl
pop
jno
insl
jne
les
aaa
lret
mov
lock
aas
test
and
jle
dec
xor
js
in
test
dec
dec
xlat
subl
xchg
jmp
shlb
mov
scas
cwtl
ljmp
cmp
cmp
sub
mov
je
out
test
sub
cwtl
mov
jns
adc
jbe
and
pop
in
sahf
inc
mov
push
pop
sbb
xchg
add
sub
adc
mov
scas
jg
jbe
leave
dec
inc
adcl
fwait
ret
xchg
lods
fidivrl
xchg
mov
scas
jae
insl
sub
cmp
in
jmp
mov
adc
sub
dec
mov
pusha
or
and
add
addr16
lea
std
movsl
addr16
rclb
fs
xchg
mov
lahf
aas
dec
lds
adc
movsb
cmpsb
xchg
dec
lret
movsb
repnz
sub
call
and
jmp
inc
loopne
push
popa
loope
ret
sub
js
mov
data16
sbb
mov
cwtl
jo
inc
inc
leave
int3
out
jae
sub
jae
xchg
jg
cmpsb
add
je
jno
cltd
clc
mov
sub
pop
ret
jle
cmp
xor
and
repnz
pushf
xchg
inc
mov
dec
and
dec
cmpsb
inc
mov
test
jb
popf
or
xchg
sbb
sbb
mov
jl
fcoms
aas
outsb
push
popa
pop
mov
aad
testl
cld
dec
das
andb
fmulp
out
jno
and
nop
dec
mov
inc
ret
daa
mov
ds
in
sbb
lds
push
repnz
call
ret
add
hlt
cmp
sahf
fdivrs
gs
add
mov
xchg
cmp
mov
ret
mov
jecxz
push
cmpsl
test
jl
out
xchg
stos
lret
mov
and
flds
jecxz
push
stc
mov
xchg
mov
sbbb
xor
mov
outsb
insb
in
push
pop
aaa
and
pusha
jp
and
adc
xchg
mov
push
daa
cmp
sub
push
loop
lds
je
xchg
es
cltd
jns
cmpsl
sub
xor
xchg
bound
pop
movsb
into
outsb
xchg
lock
add
negl
push
jne
ret
jno
jae
jp
insb
jne
jp
pop
add
data16
sub
dec
fstpl
mov
fcoms
sbb
add
jne
lea
push
imul
cmp
addl
lods
stos
xchg
addb
imul
pop
xchg
sbbl
inc
cmpsl
dec
pop
cmpsl
decb
and
xor
icebp
mov
testl
hlt
jnp
jmp
mov
shrb
int
mov
dec
ja
mov
jbe
or
pop
dec
jecxz
stos
into
mov
xor
pop
adc
outsb
in
lret
xor
or
sbb
cmp
inc
rorb
std
test
int
in
insl
cmp
lds
add
iret
subb
popa
cmpsb
mov
mov
cld
aas
mov
xlat
mov
xlat
fmuls
popf
inc
xor
push
call
adc
movsl
cli
add
rcrl
add
pop
emms
push
ret
or
mov
mov
mov
faddl
aas
in
mov
loopne
shll
or
add
sbb
push
cld
adc
push
lcall
inc
es
cmp
jecxz
aas
mov
rolb
shll
adc
js
sub
imul
mov
jl
sub
push
negl
mov
cmp
dec
jg
xor
and
add
push
test
test
mov
xchg
sub
xchg
lods
outsb
jmp
pop
mov
xchg
arpl
or
loope
insl
and
sub
sahf
sti
dec
fldenv
push
push
hlt
cmp
iret
xchg
test
xchg
fldl2t
hlt
add
push
ds
imul
pusha
mull
out
adcb
lcall
jle
push
pop
into
and
out
mov
movsb
cwtl
addb
inc
push
outsb
sbb
in
cmc
mov
cmp
adc
pop
pop
jne
push
xchg
add
fcompl
and
adcl
inc
or
addr16
movl
scas
jne
test
mov
mov
mov
sub
sahf
inc
aaa
ss
enter
add
cmp
or
cmp
pop
lahf
imul
sbb
xchg
mov
jmp
rclb
cmc
movsl
sub
in
notl
out
pop
push
sahf
cmp
xor
mov
daa
pop
mov
mov
dec
and
dec
shlb
jb
jl
adc
or
addb
enter
pop
out
daa
add
jb
add
movsl
xchg
adc
out
test
das
inc
cs
loopne
movsl
inc
ds
pop
sbb
inc
jmp
cmp
in
arpl
push
add
pop
jae
push
or
sub
cld
insb
cmc
popf
pop
push
std
jp
jo
shrl
inc
mov
xchg
cmp
cmpsl
iret
dec
fldenv
fldl
movsl
sahf
scas
xor
out
jle
test
ret
jb
in
loop
stos
sbb
sti
sahf
sti
popf
inc
rcrb
and
rolb
insb
lret
mov
pop
in
mov
mov
test
mov
lock
ret
and
imul
enter
mov
nopl
and
cmpsl
pop
lret
add
cld
mov
popa
push
push
and
data16
pop
inc
jecxz
push
stos
adc
sbb
sub
sbb
notl
sbb
cmp
mov
and
xrelease
add
lds
js
xor
aaa
call
in
jo
xor
vcvtsi2ssl
ja
test
adc
push
mull
xchg
testb
pop
lds
les
dec
lret
ret
inc
ja
ljmp
clc
dec
loope
and
lds
inc
gs
aaa
mov
pop
mov
jae
pop
sti
cmp
sub
ss
outsl
loope
cmp
and
pusha
fisubrl
mov
js
popf
es
sbb
xlat
inc
sub
and
ret
loop
mov
shrb
push
cli
and
insl
aad
xor
pop
dec
xor
push
in
loop
ud0
pushf
pop
pop
cmpsb
xchg
mov
lock
sub
cmc
inc
xor
push
shrl
out
fisubs
and
lea
jne
aad
push
pop
pop
mov
push
mov
push
bound
mov
fsubrs
cli
test
xorb
mov
xchg
add
fcompl
movl
shrl
ret
mov
fidivrs
cmp
cmp
int
dec
and
loope
xchg
or
ret
mov
arpl
insb
in
mov
mov
mov
ret
mov
jbe
dec
xor
adc
ret
sub
mov
enter
adc
je
mov
dec
cs
adc
das
mov
add
xchg
hlt
daa
push
outsb
and
sub
add
dec
pop
sti
xor
shlb
cmpb
inc
scas
or
pop
adc
testb
push
hlt
mov
cmp
and
cli
xlat
inc
scas
jmp
sbb
outsl
leave
sub
cmp
sbb
ja
es
sarb
outsl
das
inc
cmp
xlat
clc
mov
sbb
std
cmp
jecxz
shlb
inc
cltd
push
pop
out
fs
pop
call
nop
lcall
rcll
jo
cmp
inc
loop
xchg
push
push
jns
jne
and
cmp
dec
push
inc
dec
and
adc
movsl
call
mov
add
lods
cmpsl
ret
dec
les
xchg
adc
cld
shrb
push
aad
jne
mov
cmp
ret
sti
lds
dec
pop
inc
pushf
test
mov
cltd
add
jl
cmpsl
call
add
sbb
loop
sbb
shrb
loop
dec
popa
push
pop
lret
mov
into
xchg
jl
sub
out
pusha
sbb
xchg
outsb
addb
push
xchg
mov
hlt
push
outsb
out
ljmp
xor
call
int3
addr16
and
xor
cli
loopne
inc
pusha
mov
fdiv
pop
push
ljmp
xchg
and
and
xchg
in
ret
xchg
popf
mov
shlb
dec
xor
xchg
push
rorl
dec
gs
inc
pusha
mov
shlb
fwait
push
push
in
arpl
popf
add
sub
push
jnp
sbb
outsl
sub
cltd
ja
cmp
out
and
cmpsl
ljmp
lea
pop
mov
aad
into
imul
pushf
test
ss
or
pop
imul
daa
dec
xchg
mov
xchg
enter
push
movsb
mov
out
pop
cmp
in
lods
jge
test
mov
sahf
mov
pop
lahf
faddl
cltd
push
test
addr16
mov
dec
movsb
js
jle
pushf
jp
sub
xchg
add
cmpb
insl
xor
push
mov
jne
xchg
mov
lock
outsl
mov
insl
adc
or
addr16
rorb
scas
daa
mov
pusha
daa
or
mov
addr16
or
sub
dec
andl
shl
mov
inc
sub
pushl
shl
aaa
jns
sahf
int
mov
pop
xor
jbe
es
gs
xchg
and
mov
jmp
cmpsl
je
pop
test
mov
lret
mov
je
mov
sub
mov
es
iret
inc
mov
push
and
push
insl
sub
push
dec
gs
or
push
jl
testb
push
out
and
sub
in
or
or
mov
pop
bound
jbe
and
pop
xchg
pop
inc
aaa
sbb
or
jp
repnz
cmp
mov
sub
xchg
scas
out
push
and
xor
blci
jo
fucom
mov
cmpsb
pop
sbb
xlat
clc
push
push
xchg
lods
insl
mov
mov
iret
mov
xchg
les
jmp
pop
push
pop
adcl
xchg
push
sbb
mov
lahf
dec
in
es
sarb
imul
inc
aam
jbe
sbb
jne
icebp
pop
ljmp
mov
bound
cmpsb
sub
sahf
popf
jne
push
test
xchg
adc
jle
insb
cmp
mov
or
in
push
daa
pop
add
push
outsl
xchg
mov
je
xchg
sti
sbb
jns
mov
aaa
loop
ja
adc
fs
nop
out
and
mov
cmpsw
int
and
push
lret
and
xor
push
out
inc
cld
incb
fcomi
push
cmpsl
push
cmp
and
rcl
and
clc
test
imul
xor
es
cs
iret
int
fdiv
das
cmpb
sub
stos
mov
aas
xchg
add
inc
out
or
push
dec
add
sbb
test
test
ror
arpl
xlat
pusha
xchg
push
stos
xlat
and
mov
cs
jne
lret
jo
xchg
divl
ja
cmp
dec
addr16
mov
aaa
fadds
add
mov
mov
lahf
mov
mov
daa
test
lcall
xor
jns
jne
push
pop
xchg
aam
and
mov
iret
fdivs
roll
push
xchg
mov
mov
sub
arpl
push
push
ljmp
out
mov
ret
mov
add
cmpsl
pop
push
or
sub
imulb
fldenv
mov
cli
pusha
imul
testl
mov
cmpsb
cwtl
or
outsb
jo
jae
test
repnz
int
sbb
notl
in
mov
in
test
mov
fs
sub
movsb
sub
pop
int3
cmp
aam
mov
pop
mov
pop
pop
movsl
fwait
cs
fwait
or
decl
pop
les
jmp
ljmp
out
mov
scas
bound
bound
add
subw
cld
pop
adc
out
pop
iret
imul
adc
pushl
scas
xchg
fwait
sbb
lds
push
or
sub
loopne
movsb
jmp
cs
fnstenv
stos
jae
xor
aaa
fidivrl
gs
stos
iret
sbb
lds
xchg
mov
push
pop
adc
call
insl
cltd
xchg
ja
das
fldenv
jb
das
sbb
shrb
jns
xchg
and
sub
pop
cmp
roll
mov
outsl
and
ror
outsl
in
movsb
jbe
out
cmp
insb
lahf
mov
pop
xor
inc
test
mov
sbb
pop
mov
push
out
and
sbb
mov
js
inc
loop
pop
cmp
add
sub
jp
xchg
inc
or
sub
jl
call
pushf
test
jle
ficomps
sub
frstor
popf
jmp
push
mov
out
iret
std
loopne
cmc
imul
fwait
idivl
pushf
or
movb
push
push
inc
mov
sti
fstps
xchg
roll
push
popf
push
pop
fs
insb
sbb
push
cmp
cmpl
jge
adc
pop
dec
push
mov
mov
mov
cmpsl
cs
sub
rolb
or
lds
popa
jo
sub
xchg
mov
ss
xchg
mov
lods
sbb
das
repz
push
shll
scas
jb
cld
xchg
mov
mov
or
cmp
push
sti
xor
arpl
mov
arpl
push
das
iret
mov
outsb
in
and
jb
adc
test
push
mov
fiaddl
sub
mov
pop
aaa
add
data16
repz
in
cmp
sub
fs
icebp
stos
sub
sub
and
popf
xlat
cmpsl
sub
adc
add
scas
mov
js
cmpsl
icebp
in
inc
push
lcall
or
cmp
ja
aam
or
iret
pop
popa
mov
test
mov
enter
xchg
adc
add
push
jo
enter
lds
cmpsb
xchg
inc
and
cmp
inc
jns
fsubs
into
lahf
hlt
call
ror
inc
xchg
lock
and
fistl
mov
in
mov
push
mov
fstpl
rclb
rol
pop
test
xchg
ficoms
in
sub
cld
push
hlt
pop
sub
popf
adcl
dec
fildll
push
jnp
cmpsl
sub
stc
aad
shrb
push
push
add
sub
xchg
shlb
pop
sahf
inc
xor
sbb
int3
add
mov
pop
push
jp
popf
jbe
cmp
add
ret
cmp
inc
pop
pop
inc
push
mov
or
fucomip
imull
test
ret
push
jae
test
arpl
fucomp
outsb
pop
cmc
std
lcall
dec
lcall
loope
aad
test
xchg
mov
aas
cmpsl
dec
data16
or
cs
adc
pop
pusha
xor
push
push
pop
addr16
sbb
xor
and
cltd
aaa
jbe
xchg
and
cmp
icebp
mov
jl
pop
jmp
mov
cmp
js
scas
push
ret
cmpsb
ja
dec
cwtl
push
popf
pop
sahf
push
out
push
and
dec
pop
fmuls
cmp
in
scas
sarb
pop
ficoml
inc
negb
or
jecxz
mov
and
pop
cld
test
inc
sub
or
lret
lcall
mov
and
add
or
and
mov
sub
jb
inc
adc
cmp
mov
mov
movsb
lret
into
cltd
push
mov
pusha
mov
inc
jnp
lods
icebp
sbb
repnz
push
xchg
mov
cltd
adc
lods
lock
outsb
adc
imul
aaa
mov
imul
repnz
test
sub
add
popf
adc
in
bound
jl
pushf
or
or
fwait
mov
xlat
sahf
cld
cmpsl
dec
clc
scas
std
addr16
push
cwtl
jo
push
mov
cmpsb
xchg
sub
les
mov
mov
bound
icebp
movsb
sbb
push
mov
pop
ficomps
mov
shlb
xchg
pusha
shlb
push
out
mov
xchg
test
mov
jmp
inc
and
cmp
xor
loope
add
lds
stos
nop
and
jmp
dec
loopne
movsl
addr16
lods
push
xchg
and
mov
xor
testl
jecxz
imul
cli
adc
push
outsb
dec
push
and
les
mov
xor
stos
or
nop
and
jge
adc
add
and
mov
sub
repnz
sub
and
adc
sbb
dec
sub
out
adc
movsl
nop
repz
ret
nop
cmpsl
mov
inc
pop
push
fnstcw
xchg
lcall
es
xchg
lock
sarl
mov
pushf
fstpt
lret
and
cmp
repnz
repz
dec
push
pop
andl
add
xchg
push
mov
bound
push
ja
push
sti
fidivl
mov
loopne
and
std
push
repz
push
mov
in
repz
adc
push
xchg
les
and
push
inc
xor
bound
jg
jecxz
repnz
xor
daa
push
inc
pushf
shr
out
pop
cmpsl
mov
pop
pop
daa
dec
mov
xlat
fsub
xchg
xor
dec
cmp
outsl
xor
ljmp
inc
addl
pusha
daa
outsb
or
shlb
test
es
mov
sub
jo
ljmp
and
xlat
in
or
sub
jl
xor
daa
stc
icebp
bound
fcomi
inc
push
dec
sub
push
cmp
test
xchg
sbb
sti
fnstsw
push
dec
mov
movsb
cmp
shlb
and
pop
add
scas
test
xor
xchg
mov
mov
pop
push
cli
mov
ja
addr16
adc
mov
out
mov
or
mov
je
fwait
lock
jns
add
orl
push
loope
hlt
hlt
push
loop
cmp
fabs
loopne
iret
arpl
xor
xchg
ret
push
std
cmp
lods
push
imul
dec
push
push
cmpsl
in
cmp
adc
pop
jmp
pop
push
arpl
data16
mov
mov
push
adc
add
fcomps
and
adc
xchg
or
mov
addb
sahf
enter
lods
cmp
adc
fisubs
xor
and
xlat
fucomi
inc
popa
in
sub
outsb
es
divb
mov
xchg
xchg
pushf
pop
push
xor
pop
xchg
dec
out
sti
addr16
outsb
cmp
test
xchg
lret
aam
fnstcw
cmpsl
push
ret
cmpsb
test
daa
rclb
outsb
push
add
insl
scas
mov
clc
fwait
push
push
mov
xchg
xrelease
sbb
jmp
nop
fs
loopne
outsb
add
xor
outsl
fisubs
std
out
js
mov
cmpsl
and
dec
xchg
scas
jae
lret
add
lock
xchg
push
dec
push
sub
sub
test
xchg
or
lea
ret
jae
inc
adc
pop
imull
lea
aaa
fbstp
mov
aaa
jbe
inc
jmp
imul
lods
mov
je
bound
cwtl
rolb
shll
xor
movsl
mov
fwait
aaa
subb
iret
js
iret
xchg
inc
xchg
cltd
push
bound
xchg
and
outsl
movsl
cs
dec
iret
daa
lock
sbb
inc
fwait
mov
xchg
aas
sub
lret
das
xor
cli
xchg
xor
sbb
sbbb
and
adcl
mov
fwait
jecxz
sub
test
incl
fadd
mov
xor
xor
jb
aam
mov
imul
push
cmpsl
inc
pop
std
int3
ja
std
cmpsb
daa
add
xor
jno
sub
sub
cwtl
stos
nop
movsb
ja
or
xchg
stos
jno
xchg
cli
int3
inc
data16
orb
xchg
les
insl
addb
adc
ss
adc
js
popf
call
adc
pop
push
dec
lds
xorl
test
out
sbb
stos
mov
dec
push
in
lret
xchg
stc
dec
jns
ja
outsl
xor
xchg
shll
mov
xor
arpl
xchg
out
cmp
mov
addr16
adc
lret
sub
mov
dec
mov
lea
jl
fwait
and
mov
adc
xchg
add
pop
gs
fsubs
and
jg
in
int3
xor
mov
repz
xchg
daa
mov
aas
sub
xchg
aaa
push
mov
push
mov
rcrl
std
xchg
aam
dec
cwtl
pop
push
inc
sbb
enter
xchg
iret
add
mov
inc
stc
add
pop
jne
call
nop
stos
xchg
xor
xchg
xor
mov
dec
push
dec
jge
call
mov
and
pop
sarl
nop
push
mov
xlat
dec
jp
ja
test
mov
sbb
sub
cs
xchg
or
mov
push
push
adc
cmp
jnp
loop
inc
dec
mov
mov
dec
ret
fildll
ja
stc
inc
or
add
xchg
mov
outsb
mov
cmc
adc
xchg
imul
push
cmc
jp
jno
filds
loopne
and
sbb
rcrb
sbb
and
cld
cmc
lahf
lahf
push
sti
xchg
ret
lds
xor
xchg
je
out
icebp
pop
xchg
inc
outsb
xor
mov
xor
imul
cmpsb
xchg
pop
mov
rcr
pop
fdivr
jno
es
mov
aam
ljmp
testl
mov
and
push
je
sub
push
dec
xchg
cmpsl
icebp
cmp
mov
test
and
mov
popa
rcrl
jle
cmp
pop
jge,pt
xchg
and
test
test
jo
and
lock
or
and
test
xchg
jne
lcall
in
dec
mov
sbb
add
sbb
sbb
sub
andb
mov
mov
push
xchg
and
cmp
adc
fs
xlat
push
pop
cmp
inc
pop
mov
mov
adc
inc
pop
int
and
sub
cmp
stc
fsub
push
xchg
out
sti
dec
aaa
jp
xlat
lds
inc
rep
xor
andb
js
jo
push
pop
mov
adc
cwtl
lods
in
push
sbb
add
sbb
cmc
or
out
cmc
sub
xchg
repnz
add
ficompl
mov
cmp
xor
bound
jo
sub
lret
popf
cmc
clc
in
jns
pop
mov
add
movsb
mov
pop
mov
add
pop
push
bswap
jbe
pop
mov
ja
fcoml
xor
push
jbe
imul
pop
xchg
call
pop
push
pop
jl
and
xor
dec
dec
adc
inc
cmp
fisubl
adc
and
mov
imul
push
pop
xchg
cltd
lcall
out
sub
adc
filds
ficompl
mov
jno
xchg
pop
rcrb
lret
sub
xchg
daa
cld
lcall
lea
je
dec
fwait
lds
cmpsl
shr
sbbb
push
enter
hlt
push
sub
mov
dec
lret
sub
or
pop
cli
sub
repz
pusha
fistl
incb
push
push
outsb
enter
jbe
mov
cmp
pop
cmp
addl
repz
cmpsb
add
outsb
xor
xchg
jg
daa
popa
dec
dec
sub
jmp
aam
in
add
test
or
mov
pop
cmpsl
xchg
stos
cs
inc
clc
lahf
lods
push
sbb
pop
sub
mov
pop
xchg
addb
testl
inc
into
mov
dec
call
sub
xor
and
insl
mov
and
andb
mov
mov
xchg
adc
cmp
adc
xor
jp
or
add
sbb
test
data16
mov
mov
rol
sbb
insb
inc
arpl
js
test
popf
movsl
push
xor
test
and
shlb
jmp
out
insl
lret
dec
movsl
std
mov
xchg
cli
and
and
jg
xchg
cmc
daa
sub
pop
adcb
pusha
and
mov
jno
ja
add
shll
sarb
stos
dec
dec
mov
inc
mov
jae
cwtl
mov
ja
jo
xchg
leave
es
sbb
pusha
repz
or
push
loop
lds
mov
mov
pop
cmpl
xor
inc
jbe
bound
int
jb
pop
inc
sti
mov
cmpsb
push
adc
xlat
fildll
inc
push
idivb
jle
cwtl
int
in
outsb
and
fwait
or
xchg
xor
or
gs
add
fs
mov
sub
lcall
push
and
icebp
in
xor
inc
and
sarb
cmc
outsb
pop
test
adc
xor
jne
sbb
pop
mull
stos
mov
out
add
popf
ss
xor
lcall
out
xchg
push
xlat
inc
adc
jne
xlat
jle
and
and
stc
and
xchg
jp
adc
mov
xchg
addr16
and
inc
repnz
push
lea
pop
sbb
and
or
mov
pushf
xor
lock
bound
imul
xchg
out
mov
mov
mov
jp
pushf
jb
and
adc
ja
stc
xor
in
js,pt
xchg
lods
stos
in
sbb
cmc
or
imul
mov
pusha
jnp
fs
in
pop
pop
xor
xor
lock
fldl
and
in
add
gs
popa
push
loopne
adc
test
out
ds
jmp
add
loopne
pop
mov
aaa
lods
out
repnz
ljmp
xchg
out
mov
or
into
pop
push
mov
repnz
or
lea
cmp
jecxz
dec
movsl
pop
test
add
cmp
and
xlat
int
fnsave
aas
lea
lds
test
xor
and
dec
movsl
sub
add
mov
push
fiaddl
mov
iret
and
pop
fstp
popf
push
out
cmp
sbb
mov
sub
or
lods
adc
rcll
mov
pop
mov
dec
arpl
stos
jmp
xchg
push
cltd
repz
ds
or
jge
push
mov
inc
ret
movsb
push
jmp
insb
aaa
iret
jne
add
test
bound
mov
outsl
inc
in
jo
adc
pusha
push
mov
push
fnstcw
fcompp
xorl
out
and
fsubl
repnz
ja
popf
mov
pop
imul
popa
jle
pop
cld
pop
inc
loope
ljmp
iret
outsb
sub
push
cmp
fwait
out
aad
fwait
scas
cmp
jmp
xchg
mov
or
andl
je
sarb
adc
or
lds
cmp
and
movsb
inc
aas
lcall
ret
aas
lcall
pminsw
pop
dec
cmpsb
dec
sti
sbb
xchg
or
scas
add
popa
sti
lcall
xchg
adc
rorl
dec
xor
adc
cmpsb
push
pop
pop
test
pop
cmp
xchg
xchg
repnz
push
xchg
sti
jnp
inc
into
xor
xchg
push
push
and
scas
mov
cmp
loopne
cmp
test
jbe
nop
mov
cmp
aas
xchg
xchg
xor
lcall
jae
nop
je
cmp
ja
fstpt
cwtl
int
aaa
out
cld
xchg
mov
xor
jp
jbe
fwait
jmp
or
xor
es
enter
iret
scas
js
jmp
pushf
push
sub
in
xchg
dec
push
js
ljmp
xor
push
cmpsl
cmc
add
loopne
negb
sub
into
pop
popa
dec
xchg
inc
pop
mov
cli
and
iret
fisubs
inc
push
adc
pop
lods
insl
adc
inc
pop
inc
popa
out
mov
mov
lcall
cli
cmp
fcomps
aaa
xchg
jb
test
scas
inc
push
and
mov
test
cmpsb
push
jecxz
or
and
das
popf
arpl
sti
and
pop
aaa
xchg
imul
cltd
xchg
xor
loope
repnz
out
aad
pushf
mov
pop
scas
pop
or
mov
ss
or
mov
or
adc
and
jae
push
add
gs
mov
add
adc
jns
lcall
imul
push
xchg
enter
repnz
sbb
xor
data16
jle
std
adc
leave
mov
enter
aaa
jl,pt
mov
test
pop
in
sub
ljmp
xchg
jg
xchg
and
in
dec
and
pop
in
dec
inc
mov
bound
lahf
repnz
nop
pop
mov
lock
and
and
aas
xor
xchg
stc
xchg
jecxz
xchg
xor
addr16
fidivrl
js
pop
ror
or
mov
add
push
popa
daa
mov
push
shl
into
xchg
cmp
les
cs
bound
lods
jb
dec
sbb
mov
in
aaa
or
jle
out
lret
addr16
pop
mov
subl
pop
hlt
add
jle
mov
test
push
divl
shll
imul
stc
das
add
adc
movsb
jecxz
xchg
xchg
sbb
repnz
stos
inc
out
sub
data16
adc
jno
data16
outsb
enter
pop
imul
xor
mov
cmpsb
dec
mov
mov
das
inc
xor
daa
pop
mov
inc
data16
push
push
mov
sbb
sub
test
xchg
pop
arpl
push
cwtl
xlat
insl
nop
ja
popa
fistl
clc
adc
hlt
pusha
pop
xchg
popf
xchg
cmp
sub
out
repz
shrb
jae
std
cmp
shrl
pushf
leave
dec
push
pop
push
mull
or
xor
jl
sbb
pop
daa
aaa
dec
lahf
mov
and
lret
lods
or
cmp
rcl
pushf
cmp
mov
insb
jle
add
leave
adc
ljmp
pop
sub
pop
dec
loop
push
and
inc
sub
stos
popa
js
xor
push
test
xchg
imul
out
adcb
fs
fs
scas
push
ja
inc
push
js
add
sub
adc
test
inc
ja
mov
test
daa
mov
push
mov
pinsrw
mov
pop
cmpsl
stc
int
subl
cmpsl
loopne
xor
sbb
mov
adc
push
inc
adcl
outsb
push
mov
insl
jg
sub
pushf
and
gs
mov
add
pop
xchg
mov
imul
popf
mov
aas
test
jg
shlb
adcb
mov
xchg
mov
mov
mov
popa
mov
sub
mov
lock
out
push
inc
jp
mov
push
sti
inc
inc
sbb
lret
arpl
loope
xor
inc
notb
push
ret
lock
lret
inc
jmp
mov
ret
dec
sbbl
xchg
pop
pop
inc
int3
mov
xchg
filds
enter
addb
sbb
xchg
xchg
out
adc
aad
jp
mov
jns
daa
dec
mov
add
cmp
dec
push
push
into
cmp
movsb
or
movsb
imul
inc
pop
or
dec
and
mov
clc
cmp
ret
imul
add
aam
jp
cmpsl
lret
insb
in
sub
jno
fldenv
lods
dec
xor
sub
and
pop
cmpsl
inc
dec
rcl
xor
sbb
xchg
sbb
add
negl
lret
das
mov
mov
lods
or
les
and
fbstp
test
xchg
xlat
xor
lds
fs
test
ficompl
fs
push
xchg
popf
cmpsb
fsubrs
dec
cmp
sbb
fbld
push
push
mov
dec
enter
xchg
scas
fidivl
xchg
inc
sub
sbb
int
mov
pop
cmc
loope
scas
es
jecxz
cwtl
call
mov
inc
cmpsb
test
inc
sbbb
dec
lds
or
arpl
sbb
cmc
ja
pop
xchg
lahf
je
hlt
ljmp
add
mov
and
jmp
pop
adc
stos
movsl
clc
dec
clc
sub
das
add
nop
xor
mov
pop
push
xor
insl
xchg
insl
scas
mov
sub
push
and
mov
hlt
sbb
loopne
mov
sti
xchg
inc
popf
xchg
mov
arpl
outsb
jb
adc
push
imul
bound
enter
push
push
push
aad
mov
out
xor
and
jbe
or
cs
testb
push
or
add
stos
or
cmp
inc
inc
in
pop
add
jecxz
movsl
lods
mov
rolb
cs
fstl
jb
ljmp
cwtl
inc
pop
insl
xor
mulb
lahf
lcall
adc
std
fisubs
xor
and
xor
xor
rol
mov
dec
scas
movsb
dec
repz
push
out
dec
outsl
nop
lds
test
mov
jl
jp
xor
push
xchg
cltd
das
mov
xchg
movsb
pusha
movsb
push
movl
pop
ja
pop
lahf
jo
mov
push
push
lret
sub
std
xor
jg
push
and
mov
aad
ror
dec
ja
lcall
ja
iret
jp
pop
stos
int3
test
sbb
lret
movsl
cwtl
int
mov
ficoml
adc
jp
orb
inc
lea
sbb
clc
xchg
lret
addr16
repz
inc
in
xchg
xchg
add
mov
xchg
lret
popf
mov
test
je
xchg
addl
xor
jbe
cmp
and
shll
mov
jnp
adc
mov
inc
hlt
mov
mov
and
iret
jp
add
and
stc
mov
daa
push
rcpps
pop
cmpsl
ret
lret
cmpsb
repz
pop
ja
in
int
mov
dec
add
and
scas
shll
mov
stos
imul
push
sub
mov
negb
aas
push
push
fst
loope
testb
and
pushf
lea
lret
outsb
adc
ja
adcl
es
mov
sub
andb
loop
fimuls
pop
inc
negl
negl
lcall
jge
jno
loopne
gs
lret
push
pop
xchg
arpl
addr16
pop
and
ds
loope
gs
insl
jne
invd
scas
push
add
pushf
push
pop
fldl
jecxz
sbb
js
loop
movsl
jo
imul
arpl
pop
xor
imul
xchg
cwtl
sbb
std
pop
cmpsl
adcb
push
pop
shr
add
cmp
cmp
out
int
jmp
jb
aaa
addr16
push
addr16
cltd
std
mov
and
and
inc
adc
insl
mov
mov
pushf
mov
or
and
imul
mov
mov
sub
aaa
sub
mov
loopne
movsw
mov
lea
mov
pop
lret
cmp
cmpsl
xchg
cmp
and
jmp
cli
mov
les
popf
ror
mov
sbb
decl
pop
inc
addl
jp
cli
add
mov
arpl
mov
notb
mov
outsb
sub
cmpsl
push
addr16
das
repnz
popf
inc
pushf
sbb
pushf
inc
sub
aaa
sbb
and
std
inc
in
das
out
insb
jns
mov
push
mov
pop
jg
ficomps
dec
jmp
shr
jmp
jbe
xor
push
enter
daa
cmp
fdivs
ljmp
sub
add
cmp
fs
imul
push
loopne
imul
sub
out
jb
les
loop
push
das
rep
pop
or
icebp
movsl
pushf
cmp
std
jns
add
daa
pop
cli
sahf
sbb
xor
dec
repz
daa
sbb
and
mov
sub
xchg
aam
test
repz
std
incb
stos
lods
cmp
pop
cwtl
movsl
sbb
mov
xlat
xchg
add
pop
insb
movsl
jg
fs
mul
pop
jp
xchg
adc
push
test
and
cltd
js
cmp
sar
daa
loop
pop
xlat
pop
std
ficompl
lea
sbb
mov
sahf
dec
imul
sbb
adc
dec
cltd
sub
cmp
inc
cmp
inc
cmp
out
mov
add
fldcw
lret
mov
aam
pop
inc
fs
scas
lret
aas
adc
adc
in
andl
xchg
cltd
js
aam
push
push
std
cmp
jo
and
push
fiaddl
imul
ret
insb
jecxz
out
pop
mov
jns
cmpsb
ret
push
jns
arpl
sub
mov
insb
adc
fs
in
pop
addr16
leave
mov
lock
mov
popa
cmp
clc
dec
push
mov
shll
jp
into
and
inc
fs
cld
sub
jg
hlt
push
jl
xchg
out
and
icebp
lods
addr16
xlat
mov
bound
leave
and
cmpsb
enter
xor
add
adc
pop
cmp
cmp
les
aaa
test
outsl
frstor
imul
mov
dec
mov
pop
dec
cltd
loop
lods
push
daa
pop
push
add
push
jmp
push
lcall
pop
je
aam
pusha
jecxz
sub
and
hlt
in
pop
inc
ret
loop
lods
pop
mov
rcrb
jne
cld
cli
push
xchg
out
adc
add
test
mov
jp
push
out
fs
dec
daa
loop
add
mov
sbb
addr16
push
fnstenv
adc
lock
cmp
inc
xchg
sub
cmp
aas
jno
pop
test
and
ja
in
lods
push
jbe
jne
outsb
xchg
mov
fwait
jno
insb
add
pop
inc
inc
int3
aad
arpl
push
pop
add
pop
xchg
and
xchg
xchg
sub
or
in
dec
mov
dec
cwtl
sbb
stos
aas
ds
pop
mov
xchg
push
jnp
movsl
mov
jae
popa
mov
andl
push
sbbl
mov
jl
rorb
shlb
mov
jns
cltd
sub
lret
adc
rol
sahf
arpl
mov
xorb
push
pop
ficompl
push
aaa
inc
push
xor
adc
push
xor
lods
js
cwtl
outsb
inc
loopne,pn
outsl
push
xchg
cltd
mov
dec
mov
cmp
insl
out
dec
pushf
or
outsl
add
into
push
mov
mov
idivb
and
jmp
push
sbb
movsb
lahf
sub
xchg
ror
push
inc
pop
pusha
push
inc
cmpsb
mov
test
add
test
nop
test
call
lds
dec
xchg
data16
cmp
jae
xor
xchg
xchg
data16
add
aad
out
mov
pop
dec
vcomiss
les
sti
cmp
xchg
sub
pop
push
data16
xor
cmpsl
les
adc
popf
dec
and
fistpl
mov
out
and
push
inc
sbb
cmp
lcall
aas
and
inc
push
fwait
cmp
push
fwait
and
sub
push
mov
xchg
xor
ss
inc
inc
cmpsb
cmp
insl
popf
daa
inc
imull
mov
aad
iret
cmpsl
dec
imull
ss
lcall
xor
or
pop
jp
mov
xor
mov
mov
add
pusha
cmp
pop
push
out
aas
xchg
cmp
jne
loop
push
mov
and
push
sahf
sbb
jne
insl
mov
insl
xor
push
inc
aad
xor
pop
imul
mov
ret
sub
mov
loope
mov
daa
mov
mov
in
cli
cmp
dec
in
mov
lds
xor
adc
arpl
gs
push
and
push
jo
enter
or
xchg
jae
cmc
mov
lret
leave
push
std
xchg
inc
add
jge
outsb
adc
jo
xlat
pusha
sbb
mov
out
sub
jo
jnp
and
mov
popa
adc
mov
inc
andb
out
jno
mov
pop
pop
pop
jp
pushf
xchg
jbe
imulb
dec
dec
mov
jae
out
cmp
xchg
std
int3
mov
or
xchg
aam
loop
sbb
xchg
and
fdivrs
mov
mov
sub
xchg
pop
and
dec
push
adc
imul
mov
in
push
adc
cmc
xlat
loopne
shlb
bound
notl
arpl
mov
test
or
call
xor
add
jno
cmpsl
xlat
jmp
dec
andl
inc
daa
adc
xor
mov
lcall
mov
nop
push
mov
in
imul
jecxz
popa
push
aaa
ljmp
jbe
lea
and
sub
or
popf
filds
pop
xchg
push
mov
or
mov
inc
add
mov
iret
stos
addl
lock
add
mov
imul
xchg
adc
stc
in
or
pop
ret
jne
popf
stos
leave
cmc
add
xchg
int
cltd
imul
movsb
lea
mov
mov
sub
lahf
pop
shll
and
fwait
cmpsl
and
js
fdivl
xor
mov
js
or
xor
jnp
push
out
jmp
int
orb
add
pop
adc
pop
sub
and
push
push
lret
xor
repnz
outsl
adc
add
sub
jo
popa
fcomps
push
mov
xor
cmpsb
xor
sub
adc
negl
mov
or
fiadds
cmp
cmp
ds
aaa
repnz
jo
aad
jno
hlt
loopne
js
push
jae
sub
outsl
imul
sub
jecxz
xor
push
mov
jo
mov
leave
and
push
xchg
xchg
pop
sahf
adc
int
leave
js
xor
mov
cmpsl
fsubr
dec
sub
movsl
mov
scas
addr16
xchg
hlt
gs
add
pop
test
aam
push
jecxz
push
push
stos
mov
das
ljmp
rolb
jecxz
out
in
lahf
repz
cwtl
mov
sbb
sub
and
add
xchg
cltd
fs
fdivrl
popf
popa
je
fidivl
jle
popf
xchg
fldl
dec
push
rolb
dec
push
inc
addb
push
cmc
fwait
xor
gs
xor
xchg
cmp
sbb
or
push
ja
fdivrs
jg
pop
outsb
sbb
mov
lods
xorb
pop
les
mov
xor
mov
xchg
cli
dec
xchg
pop
mov
outsb
test
les
add
loope
imul
imul
inc
arpl
mov
out
push
xor
insb
jbe
inc
xchg
inc
sbb
xor
cmp
pop
xor
je
or
aaa
ror
sub
dec
arpl
notb
mov
fisubrs
sub
xchg
movsb
adc
test
jne
iret
bound
jbe
lcall
cmp
es
or
xor
add
dec
add
xchg
aaa
aam
lcall
lret
xchg
fs
sub
and
mov
pop
stos
punpckhdq
in
xchg
fcomps
xchg
jo
or
lods
outsb
cmpsl
push
sbb
insb
xor
out
jmp
push
dec
xchg
bound
push
lcall
sub
sarb
push
pusha
jle
stos
mov
sbb
cld
mov
mov
aaa
mov
cwtl
inc
fsubr
jbe
xor
out
imul
mov
lahf
out
mov
mov
mov
mov
popa
popa
imul
bound
adc
mov
imull
xchg
or
cmp
push
push
ljmp
cwtl
popa
cmc
sub
mov
das
fdivs
adc
jns
cwtl
daa
mov
test
sub
jg
pushf
fs
jb
hlt
mov
xor
push
fidivl
mov
lds
push
mov
fmuls
cmc
outsl
arpl
inc
inc
cmpsb
jge
inc
movsl
push
dec
mov
xchg
mov
or
leave
aad
fwait
xlat
leave
adc
out
push
inc
scas
adc
jmp
cld
adc
jnp
xor
cmp
add
mov
insb
xor
repnz
and
pop
js
pop
mov
out
das
bound
xchg
ljmp
gs
adc
repz
repnz
idivl
test
sahf
testb
negl
push
mov
mov
adc
loopne
lods
inc
repnz
lds
call
sub
ds
add
loop
push
and
cmp
aad
xchg
enter
pusha
xchg
and
jl
stos
pop
daa
aad
test
pop
test
fwait
sub
lret
mov
pop
or
and
pop
inc
cli
dec
nop
inc
int
ja
sbb
sub
sti
test
add
add
xchg
mov
mov
ret
mov
mov
rol
hlt
add
cmp
jo
cmp
add
push
jae
mov
scas
push
adc
aaa
pop
cmpsb
out
sbb
xlat
cld
jno
ficompl
dec
cmp
xchg
ficoms
cs
dec
xor
aas
xchg
push
ja
and
fbstp
push
and
mov
imul
push
scas
mov
xchg
pop
xlat
mov
pop
lret
fdivrs
out
aas
hlt
mov
sub
loope
lods
xchg
or
mov
mov
pop
inc
inc
sti
sub
fs
pop
cmpsl
xor
lock
and
repz
fisttpl
or
push
rolb
or
mov
dec
jno
int3
stc
pop
xchg
fldt
or
loopne
insb
stos
sahf
xchg
lods
xor
lret
and
in
dec
or
mov
imul
insb
mov
inc
xchg
into
outsb
sub
mov
push
and
mov
jle
xchg
shlb
inc
jp
xor
xlat
add
adc
cmp
push
sahf
pushf
jae
lcall
mov
pop
daa
cwtl
mov
lock
or
insl
push
lcall
bound
loopne
inc
mov
pop
fwait
test
iret
mov
or
pop
pusha
orb
addr16
call
inc
mov
adc
rorb
push
daa
aaa
mov
xchg
in
movsl
add
sbb
cltd
les
dec
pop
pop
in
lds
mov
push
dec
cmp
and
fwait
push
adc
lea
aas
push
addr16
or
in
popf
sbb
fsubs
fistpl
dec
out
push
pushf
jbe
outsb
pop
pop
inc
mov
add
outsb
sub
aad
pop
int
and
add
or
mov
or
mov
test
ficoml
and
and
push
xlat
in
or
adc
ret
call
nop
je
fsubrl
xor
lahf
pusha
ret
popa
imul
cmpsl
dec
nop
hlt
xchg
cltd
out
mov
mov
sub
andb
push
xchg
pop
iret
dec
cmpsl
ja
cwtl
fsubrl
jnp
nop
pop
push
pop
sbb
mov
and
es
mov
push
loop
cwtl
aam
out
test
outsb
jb,pn
outsl
xchg
xor
mov
fs
fcomi
and
pop
daa
out
cltd
dec
jle
push
inc
repnz
jle
adc
jne
cltd
jl
insb
push
clc
test
add
or
sbbl
sbb
bound
cmpsl
clc
outsl
lods
cmpb
jge
arpl
xchg
jbe
mov
testb
cwtl
mov
or
and
push
cwtl
sub
jb
fidivrl
sahf
pop
pop
pop
mov
fidivs
mov
test
jo
xchg
cmpsb
sbb
jge
addb
sub
pop
pop
add
fs
daa
adc
sub
mov
or
into
je
out
or
imul
inc
inc
ja
hlt
lcall
pop
sbb
mov
fiaddl
cwtl
sub
xor
push
sbb
or
inc
fdivrs
out
aad
or
push
rclb
popa
cld
in
jno
push
std
orb
lahf
dec
xchg
lea
push
subl
mov
por
push
or
cwtl
lret
test
mov
test
lcall
xchg
in
pop
lahf
pop
repnz
pusha
mov
adc
lcall
push
repnz
push
subb
mov
push
iret
dec
iret
pop
sbb
or
xor
pushf
pop
xchg
out
fnstenv
xchg
lock
xor
daa
and
jno
pop
adc
xor
jge
mov
and
ret
sub
xchg
addr16
cmpsl
sbb
sub
loop
jmp
in
mov
sbb
subb
pop
arpl
cmpsb
dec
insl
pop
mul
adc
cmp
inc
push
insb
mov
cmpsb
adc
ja
mov
inc
mov
loopne
aam
stos
jb
jb
pop
mov
xchg
out
xchg
push
inc
push
xlat
test
or
jns
imul
jns
outsl
movsb
mov
test
cmp
jae
inc
mov
daa
push
stos
outsb
jne
aas
inc
add
dec
xchg
sahf
lahf
xor
insb
sub
dec
push
and
aas
and
in
fwait
jecxz
mov
test
inc
push
testl
mov
xor
pop
or
mov
movsl
cmpsb
enter
jp
sub
adc
lock
in
test
in
fwait
stos
icebp
inc
adc
sub
jge
movsb
cmp
or
pop
in
outsb
mov
popa
imul
inc
orl
mov
rcrb
mov
lret
xor
xchg
inc
cs
test
or
inc
pop
dec
cli
aam
lods
out
andb
icebp
sbb
jmp
push
mov
or
mov
push
loop
sti
aam
add
pop
jnp
pop
or
ja
sbbb
aaa
mov
orl
fstpl
subb
push
mov
adc
bound
int
push
mov
xchg
scas
cmp
leave
inc
ss
adc
cmc
outsl
add
sbb
mov
push
and
xchg
mov
inc
mov
out
out
or
test
xchg
imul
fcmovnbe
cmc
lret
and
orl
xchg
aam
mov
cltd
scas
adc
mov
test
jae
dec
fisttps
outsl
mov
and
mov
int
loope
pop
pushf
lods
aad
test
push
pop
sub
push
stc
mov
pop
mov
pop
subb
insl
cmp
pop
xor
adc
adc
mov
sti
adc
lcall
sarl
ds
je
push
incl
xchg
xchg
dec
jo
lret
fwait
mov
leave
rol
sbb
push
pop
sbb
insb
sub
mov
adc
push
daa
xchg
lods
int3
add
push
push
bound
and
pop
pop
test
std
cmp
sub
daa
rcr
jno
jo
jnp
push
fcmove
cmpsl
call
lret
cmpsl
sub
daa
xor
jle
adc
bound
test
cmpsb
xchg
lods
test
test
dec
popa
pop
jno
push
sub
popa
xor
daa
fstl
lods
xchg
mov
movsl
cmp
push
jg
adc
imul
rcrb
and
das
repnz
lcall
mov
cltd
mov
les
push
xchg
lea
and
jbe
dec
insb
popf
jl
test
pop
xlat
lds
jg
jns
loop
fildl
call
adc
enter
adc
cltd
test
cs
lcall
push
outsl
mov
cmp
and
lds
push
mov
repz
mov
pop
pop
int
ds
mov
sub
pop
scas
xor
lret
mov
sti
shrb
subb
pop
out
add
jb
pushf
inc
xchg
fwait
sarl
pop
clc
std
xchg
ret
in
pop
cmp
clc
xchg
bound
daa
mov
inc
dec
adc
push
pop
mov
aam
mov
orl
xchg
outsl
xchg
pop
xchg
jbe
shl
mov
outsb
sub
mov
or
adc
pop
lcall
or
stos
popa
jl
sbb
loop
shlb
out
jno
mov
cwtl
cmpsl
push
push
mov
push
imul
mov
xchg
ret
adc
pop
xchg
ljmp
inc
mov
mov
gs
mov
sbb
push
ret
adc
sahf
jle
loop
xchg
or
sar
pop
inc
sub
nop
test
loop
jns
shl
add
xchg
call
pop
daa
inc
push
scas
adc
fldl
cmc
jns
les
movl
push
cmp
sub
dec
xchg
dec
fpatan
aam
jne
loopne
pop
cli
lcall
es
cmpsl
or
adc
loopne
das
inc
push
sub
hlt
add
pop
outsb
xor
mov
jmp
cwtl
cmp
add
mov
cmp
sbb
mov
mov
mov
pop
cmc
xchg
pop
std
pop
out
inc
pop
dec
into
inc
out
mov
and
in
fldl
insl
adc
xchg
ja
xchg
cwtl
push
mull
jecxz
mov
mov
sbb
je
lds
aad
in
js
mov
xchg
or
pop
addr16
sbb
add
rorb
stos
sbb
inc
in
mov
addl
jae
daa
xor
mov
mov
test
fwait
js,pt
jns
shlb
push
mov
jb
jo
scas
inc
pop
and
sbbb
aas
dec
icebp
mov
push
cmp
and
sub
movb
stos
movsl
js
shrb
and
ljmp
xor
loopne
and
test
jmp
movsl
movl
test
hlt
fistps
imul
and
or
bound
cs
enter
aam
out
add
xor
push
sbb
fdivrs
mov
in
or
incb
sub
outsb
push
aaa
cmpsl
lea
lea
and
je
cmp
imul
loopne
pop
arpl
mov
imul
or
and
cmp
sub
insb
gs
stos
jmp
xchg
mov
movsb
pop
mov
mov
gs
test
xor
imul
push
flds
es
or
add
cmp
insl
gs
adc
dec
lods
rclb
das
inc
clc
mov
hlt
pop
sbb
xchg
outsb
mov
in
dec
mov
push
mov
sbbb
movsl
repz
fsubrs
in
mov
mov
xchg
push
mov
addps
int3
jp
sub
cld
and
cs
nop
jne
jo
jge
and
cmpsl
add
imulb
xor
sbb
xchg
sub
jecxz
lock
xor
cltd
loope
xor
lcall
push
xor
mov
sub
and
sahf
fs
mov
shlb
das
mov
sarl
repz
aad
ss
pop
int3
push
pushf
push
addr16
test
push
adc
jmp
or
ret
or
sahf
sub
movsl
dec
sub
pusha
cmp
xor
xor
add
inc
pop
movsl
mov
dec
mov
mov
sarb
es
and
int
sahf
adc
xor
cmp
repnz
mov
arpl
jmp
iret
popa
repnz
xchg
popa
shlb
ja
push
adc
out
xchg
daa
jmp
cs
jle
ja
mov
iret
iret
mov
aam
cmp
addr16
or
xchg
sarl
insb
cmpsb
fnstsw
xor
aad
xchg
push
stos
clc
mov
rcl
lret
add
push
sbb
inc
jmp
lea
pop
cmpsl
push
pop
fistl
pop
fsts
xor
sub
sub
xchg
jo
leave
iret
push
pop
add
pop
enter
shrl
pop
dec
out
and
push
push
cmc
lcall
fwait
and
sbb
sub
xchg
adc
or
push
sbb
sub
lahf
and
pop
dec
cwtl
popf
rol
aaa
jb
insb
stc
out
mov
sbb
fcoml
rcll
outsb
pop
bound
mov
add
popa
and
hlt
mov
push
push
lods
mov
shl
push
push
xchg
jl
out
push
mov
mov
pusha
and
test
and
lcall
xor
push
adc
daa
add
cmpsl
mov
xor
outsb
sub
or
xor
inc
ja
data16
stos
sti
data16
adc
inc
test
repnz
sub
movsb
js
push
add
sub
sub
sub
xorb
jbe
test
or
pop
jg
push
leave
into
bound
xlat
cmp
imul
xor
adc
sub
jne
movsl
cmp
lret
pop
sbb
mov
sub
inc
adc
pop
jns
mov
jb
out
pop
sbb
add
mov
jge
sarb
mov
mov
xchg
out
cmp
pop
and
mov
inc
mov
mov
sbb
test
pop
mov
cmpsl
sub
pop
dec
fwait
cmp
push
xchg
hlt
into
adc
lcall
xchg
cmp
inc
frstor
rcrl
sub
mov
add
add
insb
cs
es
sahf
push
ja
nop
ret
outsl
xor
mov
nop
or
popf
mov
dec
loopne
mov
mov
add
cmp
cs
jbe
scas
sbb
in
sbb
and
rcrl
into
push
mov
adc
popf
inc
push
int
imul
test
test
push
inc
lret
xchg
pop
pop
inc
fimull
aas
setno
adc
dec
fstpt
xor
fcoms
lret
outsl
jge
mov
xlat
cs
sahf
incb
in
push
jecxz
outsb
and
loope
mov
out
daa
pop
push
pop
xor
and
pusha
out
jne
sub
adc
aaa
inc
fbstp
jb
mov
repz
pushf
and
xchg
mov
lods
inc
test
mov
dec
divl
jle
in
cmp
sub
and
sbb
mov
xor
aaa
pop
and
or
jnp
out
lcall
add
loopne
dec
arpl
roll
lods
push
test
adc
add
pusha
imul
andb
inc
adc
add
add
sub
addb
add
or
adc
adc
adc
add
push
cltd
add
inc
and
adc
add
rolb
test
or
enter
rclb
or
addl
adc
dec
push
add
inc
andb
and
ret
add
adc
add
add
mov
add
or
inc
addb
mov
popa
add
rclb
nop
mov
add
and
inc
or
inc
pop
inc
push
add
inc
inc
add
add
adc
movsb
add
add
add
lahf
sub
inc
or
jo
add
add
test
jns
test
and
xor
addl
xor
add
add
add
add
inc
push
add
test
add
inc
ret
dec
add
dec
inc
and
inc
adc
inc
add
nop
push
push
add
addl
push
and
rcll
adc
xor
add
add
add
add
adc
or
add
push
push
add
and
and
adc
sarb
add
or
add
add
add
add
add
or
add
add
adc
movsb
add
and
and
add
push
add
add
enter
or
inc
and
adc
or
add
add
add
add
or
and
add
adc
ret
dec
add
or
enter
add
adcb
adc
add
adc
addb
add
add
inc
add
add
ret
add
add
add
push
mov
and
add
add
or
and
or
test
add
add
mov
pusha
add
lret
add
or
cwtl
add
add
push
or
add
sbb
push
inc
inc
dec
adc
dec
add
add
and
test
inc
cmp
push
add
add
add
inc
add
add
xchg
rclb
mov
add
add
test
push
or
add
add
xor
or
inc
add
add
bound
adc
add
inc
addl
adc
addb
add
add
add
and
add
add
add
inc
add
inc
push
sbb
add
add
add
inc
add
dec
mov
push
add
adc
adc
rolb
add
or
and
addl
and
add
addl
adc
add
or
or
out
add
sbb
xor
and
add
add
addb
or
push
add
es
add
addl
add
add
rolb
add
and
push
adc
and
add
add
add
inc
add
test
add
add
addb
rolb
xor
add
add
add
inc
adc
adc
add
add
or
add
dec
add
add
mov
dec
and
add
rcl
add
inc
add
inc
and
inc
sub
add
add
pusha
add
and
inc
add
add
add
test
test
or
add
or
add
and
mov
add
sub
dec
andb
sub
adc
add
js
add
inc
and
jecxz
adcb
or
adc
add
or
add
adc
and
add
jo
sbb
push
add
add
adcb
add
add
jo
add
and
add
and
add
adc
mov
or
dec
or
add
adc
or
lcall
add
add
add
or
xchg
push
inc
dec
inc
sub
add
sub
addl
adc
add
dec
add
sub
add
xor
add
addb
add
push
popa
add
inc
mov
push
add
popa
add
add
add
movsl
inc
or
add
and
or
adc
orl
add
inc
and
add
sub
inc
add
mov
add
inc
inc
or
xchg
inc
orb
add
adc
inc
add
nop
inc
xor
mov
test
add
test
sbb
push
pusha
sbb
add
push
add
insb
add
add
or
add
dec
add
lea
adc
mov
add
add
add
add
add
rcll
push
and
add
inc
inc
add
add
andb
add
and
or
nop
add
add
or
adc
and
add
add
or
add
add
add
xor
sbb
mov
inc
lock
or
add
inc
and
add
or
push
add
and
add
and
enter
add
and
rcll
mov
pusha
and
or
add
add
or
adc
add
inc
addb
inc
andb
or
rolb
add
xor
inc
inc
or
mov
inc
and
inc
add
and
or
add
add
add
or
push
and
add
add
test
add
xor
mov
add
add
sbb
dec
add
push
orb
cmp
or
add
inc
mov
or
adc
add
or
inc
dec
add
jmp
add
roll
add
test
adc
add
inc
pusha
add
add
test
adc
add
sbb
add
and
add
add
rclb
adcb
add
add
adc
or
mov
adc
add
xor
and
add
add
add
and
or
add
cmp
inc
mov
addb
add
or
sub
ret
add
test
adc
add
add
adc
sub
or
or
add
add
sbb
add
adc
addb
bound
dec
add
and
adc
orb
add
adc
or
sbb
orb
adc
adc
and
add
and
add
andb
add
or
dec
add
push
rcrb
and
add
add
add
inc
add
orb
add
adc
add
adc
sub
dec
add
or
add
add
adcb
add
add
xchg
inc
inc
inc
or
sub
and
and
inc
add
add
and
adc
andl
adc
and
sbb
sub
inc
add
add
add
or
and
add
inc
sbb
or
sub
adc
adc
add
adcb
adc
add
add
xorb
rolb
and
add
or
mov
add
adc
adc
xor
add
add
rolb
add
andb
add
push
dec
or
or
or
and
xor
nop
and
add
add
roll
or
add
mov
add
adc
or
add
inc
mov
adc
add
and
mov
adc
adc
add
push
inc
add
add
add
add
adc
adc
and
add
addb
add
enter
inc
add
adc
add
and
inc
add
add
add
or
add
adc
sbb
nop
add
add
add
xor
mov
add
or
and
or
or
or
inc
add
or
add
add
adc
xchg
sbb
add
add
add
push
add
adc
and
add
add
add
pop
push
add
test
inc
inc
push
add
add
and
or
and
add
add
nop
inc
nop
add
add
or
enter
addb
push
add
add
add
and
inc
or
add
pusha
add
add
adc
movsb
add
adc
adc
add
inc
add
add
or
sbb
or
push
adc
add
add
add
add
addb
add
xchg
adc
inc
bound
add
add
inc
orb
sub
add
addb
rclb
or
or
add
dec
sub
adc
add
add
mov
add
jo
and
add
nop
and
addl
inc
mov
nop
and
or
jo
mov
and
addb
add
cmp
inc
and
adc
rcrb
or
sbb
add
add
or
nop
adc
shlb
add
add
jo
push
or
add
add
adc
inc
xor
xchg
or
mov
mov
inc
push
and
add
push
add
es
add
inc
add
inc
add
inc
adc
inc
and
inc
adc
pop
add
jb
adc
add
add
inc
push
mov
mov
push
orl
add
inc
mov
push
add
inc
or
and
and
mov
nop
add
nop
push
rol
add
or
addb
nop
test
xchg
mov
or
add
inc
add
add
and
add
push
lock
inc
les
add
add
add
and
add
and
add
or
add
add
add
loope
lret
add
inc
les
sub
add
orl
add
adc
xor
and
push
adc
jp
or
adcb
push
push
add
dec
test
add
adcb
and
add
inc
add
add
add
inc
test
add
add
adc
inc
add
or
adc
add
add
inc
and
add
mov
inc
add
add
mov
xor
and
add
add
add
addl
add
orb
addb
adc
mov
adc
adcb
les
add
add
add
scas
add
add
mov
add
add
or
add
addb
test
or
push
inc
or
orb
mov
pusha
inc
add
inc
add
add
xor
add
xchg
add
xor
sub
pusha
inc
inc
add
add
add
inc
add
xchg
add
add
addb
test
and
add
addb
inc
adc
inc
or
xchg
add
test
add
sbbb
dec
add
push
add
call
inc
nop
add
add
add
add
jo
add
adcb
sub
add
sub
int3
inc
adc
ret
popa
addb
adc
adc
add
add
mov
inc
sub
inc
xchg
adc
add
and
add
add
or
lds
addb
pusha
and
pusha
add
add
push
inc
enter
add
and
xor
cmp
addb
add
add
addb
adc
push
adc
xor
add
inc
add
andb
push
add
add
add
add
inc
addb
pusha
or
or
in
adc
or
add
add
add
adc
push
add
and
orb
add
push
add
or
xchg
or
add
add
shrb
and
and
mov
inc
add
inc
inc
add
mov
mov
add
and
add
add
inc
add
add
add
mov
add
add
dec
push
pusha
add
loopne
and
addb
add
add
mov
ror
add
add
add
add
adc
add
xorb
and
inc
inc
mov
adc
push
mov
dec
add
mov
or
inc
and
push
or
add
inc
add
add
inc
test
or
add
inc
adc
addl
mov
or
inc
add
addb
or
dec
rolb
add
sbbb
call
adc
add
and
add
addb
add
dec
inc
add
add
adc
nop
add
add
and
mov
add
adc
add
ret
add
add
pusha
add
add
add
and
and
cwtl
add
inc
add
addb
je
inc
sbb
adc
and
js
pop
mov
addl
add
add
xor
and
inc
add
add
add
adc
adc
add
addb
add
add
mov
and
add
add
popa
or
adc
add
add
and
rolb
inc
addb
mov
or
adc
add
or
imul
inc
adc
and
xchg
add
inc
inc
add
add
and
or
inc
and
add
push
inc
push
inc
adc
inc
add
sbb
sub
inc
add
sbbb
or
bound
add
loopne
inc
push
addb
add
or
inc
add
add
add
inc
add
and
add
inc
add
or
sbb
mov
inc
add
adc
add
adc
or
and
ret
rolb
add
add
add
inc
adc
and
add
add
or
inc
inc
add
or
add
add
inc
add
inc
or
add
add
adc
cmp
mov
xor
add
add
and
inc
add
or
dec
add
add
mov
adc
or
cmp
add
xchg
add
add
aam
mov
and
add
add
inc
bound
add
nop
test
xor
dec
add
pop
nop
and
add
bound
xor
add
add
addb
inc
add
addb
je
add
add
and
rolb
add
xor
xor
or
add
xor
add
add
sub
and
inc
add
adc
xor
addb
pop
add
add
adc
xchg
add
add
adc
add
add
add
rolb
and
adc
inc
add
add
and
push
inc
mov
ljmp
add
add
cli
xor
add
xor
add
xor
add
add
cmp
add
push
xor
add
add
add
xor
add
add
and
add
les
add
mov
add
out
add
dec
xor
add
xor
add
xor
add
xor
add
xor
add
add
mov
add
add
add
xorb
xor
add
xor
add
xor
add
ds
add
es
add
add
add
cwtl
xor
add
es
ds
pusha
add
jbe
add
fdivs
add
divb
add
shlb
add
add
test
add
add
add
cld
add
loop
add
xchg
add
mov
add
adc
add
inc
aaa
add
int3
add
jle
add
sub
add
add
add
mov
add
or
add
fidivrs
add
jb
add
pusha
cmp
add
add
sbb
add
divb
add
dec
cmp
add
aaa
add
cmpsb
cmp
add
add
in
add
sub
add
add
add
pusha
cmp
add
add
mov
cmp
add
add
xor
add
repnz
add
add
add
add
add
add
add
cmp
add
enter
stos
cmp
add
cmp
add
add
cmp
add
cmp
add
add
fdivrs
add
push
cmp
add
add
add
cmp
add
cmpb
add
add
idivb
add
cmp
add
cmp
add
cmp
add
add
mov
cmp
add
cmp
add
add
add
pop
mov
pop
xchg
in
lds
push
insl
adc
or
addr16
add
add
arpl
or
pop
and
roll
or
and
push
insl
fisubl
test
addr16
ljmp
fildll
lods
dec
negl
xor
or
add
cmp
outsl
movsl
mov
push
fcoms
imul
xchg
inc
mov
mov
out
mov
pop
hlt
mov
fwait
mov
inc
pop
and
xchg
mov
sub
dec
ret
pop
push
adc
aas
fidivrl
add
ret
push
push
movsl
pop
fisubrs
imul
outsl
and
ja
mov
cmp
sub
lret
adc
jnp
fs
cmp
mov
adc
pop
fs
add
jg
and
xchg
lock
push
mov
jge
or
or
sahf
mov
add
movsb
cmp
imull
jbe
inc
outsb
jno
iret
movb
cli
inc
mov
xchg
mov
jmp
lret
xchg
mov
imul
inc
stos
in
pop
loope
stc
clc
sarb
xchg
xchg
add
pop
mov
adc
shlb
mov
xor
loop
jp
pusha
imul
imul
fidivl
xor
rcrb
add
adc
push
mov
aad
push
lret
pop
push
mov
out
push
and
popa
inc
mov
scas
imull
iret
mov
xchg
imul
mov
sti
fs
pop
sub
lcall
push
xchg
push
sti
mov
shlb
jae
jb
adc
dec
xlat
and
adc
stos
pop
stc
je
lret
xchg
loope
mov
sub
push
stos
lret
or
cmc
pop
push
int
sbb
dec
inc
orb
sti
inc
insb
movsl
mov
inc
cmovs
call
mov
push
mov
fdivrl
mov
loop
jnp
loop
or
aaa
adc
pop
jae
mov
pusha
xor
and
lret
mov
hlt
and
push
bound
mov
sahf
movl
mulb
pusha
push
cmp
arpl
mov
sbb
mov
es
popa
sbb
mov
pop
xchg
push
mov
rcrl
out
test
mov
popf
enter
out
cli
mov
cmp
pop
cltd
test
out
adcb
jae
and
adc
xchg
sub
pop
lret
leave
sbb
pop
aad
fwait
jb
aaa
adc
testl
xor
and
xor
outsl
pop
insb
add
pop
pop
inc
mov
aad
mov
out
out
sti
nop
mov
rcrb
adc
mov
xor
shrb
and
outsb
and
loopne
outsl
pusha
aad
push
xor
cmpsl
pushl
bound
pop
push
jbe
jg
push
jo
movsl
pop
rorl
jb
jnp
incl
or
fisubrs
movsb
sub
jp
insb
cltd
fisubrs
jb
es
cmpsb
mov
mov
ret
loope
mov
jmp
cltd
ljmp
cmpsl
imul
out
addr16
test
testl
int
mov
push
shlb
inc
fs
scas
xchg
adc
insl
jo
push
andl
xor
inc
ljmp
clc
mov
lds
mov
clc
movsl
call
push
push
cmp
gs
jb
fwait
outsl
dec
sbb
out
movsb
cmpl
addr16
lahf
insb
cmp
jecxz
xlat
insl
add
xchg
pop
hlt
mov
and
in
cmp
dec
inc
sbb
fmulp
int3
pop
jl
ja
in
inc
xchg
mov
and
popf
mov
add
popa
test
push
lods
movsl
inc
push
push
cld
fisubrl
pop
pop
mov
mov
aaa
sbb
shll
adc
add
push
push
xchg
subb
notl
push
test
pop
cmp
or
ss
add
xlat
sbbb
inc
dec
pusha
pop
add
lods
loop
nop
pop
loop
mov
lock
fs
pusha
sti
pusha
pop
addr16
mov
pusha
xchg
gs
lods
dec
sbb
subb
mov
ret
int
icebp
fcoms
xchg
les
xlat
add
repnz
jo
sti
hlt
mov
mov
aad
push
push
mov
xchg
mov
xchg
daa
xchg
jecxz
pop
mov
popf
das
mov
sub
mov
xchg
aam
push
cwtl
or
imul
dec
sbb
and
and
adc
enter
pop
pop
sub
cmp
sar
pop
out
adc
cmp
inc
scas
in
cmp
adc
or
clc
mov
repz
or
aas
insb
cmc
mov
adc
testl
cmp
aad
rol
mov
ja
out
pop
mov
les
ja
rcrl
xlat
pop
sbb
cmp
out
ret
mov
insl
inc
adc
jmp
das
aaa
mov
rcrl
fxch
xchg
rcrl
sub
stc
mov
mov
gs
mov
lds
fcmovnb
sub
lds
pop
push
jb
addr16
bound
fsubr
fists
sbb
jb
addr16
insb
jle
pop
inc
stos
fsubs
lods
fistps
inc
pop
mov
subb
dec
adc
xlat
and
xlat
xchg
mov
xchg
mov
mov
xchg
jle
mov
sbbb
adc
js
aam
push
dec
mov
xor
pop
pusha
xchg
lea
mov
push
sbb
inc
in
test
das
jecxz
pop
pop
insb
cmp
ljmp
add
loop
xchg
xchg
outsl
jne
ja
mov
mov
call
pop
je
aad
addr16
pop
cltd
adc
fmull
fcoms
mov
mov
repz
movsb
adc
lret
loope
pop
push
cmpsl
dec
aaa
mov
jo
test
mov
xchg
out
repz
push
sbb
or
xchg
pop
rcrl
push
xlat
lahf
sub
xchg
je
jbe
loope
aas
sub
xor
mov
cwtl
nopl
daa
pop
mov
xchg
repnz
jecxz
les
in
test
push
insb
cmp
pop
daa
movsl
mov
addr16
xlat
test
cwtl
insb
sbb
cmpsl
sub
mov
pop
data16
lret
call
cli
sti
xchg
aam
adc
add
sub
pop
mov
xor
inc
popf
fs
mov
loop
jle
jo
cs
add
mov
inc
lock
movsb
clc
repz
shlb
mov
sti
jg
cmp
and
dec
loop
add
sahf
insl
gs
pop
jle
out
sti
in
cmp
out
mov
pop
outsl
xchg
mov
xor
imul
lahf
aaa
sbb
mov
int
je
js
pusha
ja
and
sbb
pop
lods
in
aaa
fidivrl
add
aad
cmpsl
movsl
rol
jg
jp
lods
fcompl
ds
mov
fcmovu
sub
subl
push
push
sub
add
ljmp
insb
mov
lods
es
in
pop
adc
inc
lret
ficoms
icebp
lahf
ds
or
daa
or
inc
lahf
stos
fwait
push
pop
pop
out
cmp
push
nop
push
addr16
adc
adc
xchg
xor
push
push
dec
jp
and
xor
icebp
ret
sub
mov
popf
out
jne
add
pslld
lods
enter
sub
mov
adc
rorl
jne
in
ret
mov
cmp
dec
cmpsl
inc
imul
dec
adc
lret
stos
lret
sub
jle
aad
add
xchg
notb
ss
inc
ret
pop
outsl
es
xlat
negl
cmp
adc
into
sbb
add
mov
mov
jp
outsb
dec
incl
loop
sar
das
and
adc
outsb
adc
xlat
pop
mov
mov
shr
insb
mov
push
xor
popa
dec
les
xchg
mov
popf
push
pop
repz
xor
std
imul
and
add
les
push
fidivl
jmp
notb
rcrl
mov
mov
push
movsl
out
pop
add
shll
test
shrl
fwait
inc
mov
adc
mov
repnz
daa
cltd
sti
inc
les
push
push
sbb
fs
jle
es
or
mov
mov
jne
ss
fwait
jnp
cs
insb
loope
shll
sahf
popf
test
or
mov
movsl
or
js
push
test
inc
outsl
ret
pop
ja
push
fwait
sbb
add
call
add
push
cld
ds
loopne
push
push
sbbb
sub
or
pusha
jno
jb
stc
data16
xor
mov
push
out
adc
lcall
data16
loopne
inc
cmp
adc
inc
xchg
sahf
pusha
sub
ret
lret
out
adc
mov
pop
in
lds
push
mov
and
lret
daa
and
mov
sbb
cli
addr16
cmpsl
stc
js
fsubrl
fsts
cmp
rclb
dec
out
cld
push
inc
ret
sub
ljmp
and
inc
mov
jle
pop
xchg
aam
daa
push
sub
sbb
push
daa
mov
movsl
xor
push
call
out
inc
sbb
pop
fs
xor
and
jne
sahf
pop
mov
stos
out
subb
sub
adcl
dec
fs
push
sub
jbe
and
lock
fmul
sub
ret
xcrypt-cbc
cmpsl
adc
mov
test
pushf
movsb
jns
aas
mov
test
lret
xchg
mov
inc
sbb
or
adc
or
jg
mov
ror
pop
jl
sub
jecxz
push
cltd
jo
sbb
je
jb
pop
daa
dec
adc
sbb
arpl
bound
stos
xor
fmul
testl
push
cmp
push
cmp
sub
ss
cltd
inc
push
sub
push
test
in
ret
es
push
fadds
sub
dec
icebp
pusha
dec
jl
fs
aad
dec
adcl
das
addb
cli
enter
testl
jnp
fwait
std
mov
cvtps2pi
insl
sbb
push
test
jmp
push
sub
or
in
xchg
roll
ja
sbb
xor
xchg
int3
inc
lret
fwait
in
sbb
mov
test
push
push
sub
ljmp
xor
push
push
pop
mov
jg
push
fimull
sbb
push
loopne
xor
clc
movsw
jno
enter
add
jge
das
xor
mov
dec
cwtl
xchg
je
jg
dec
pop
jmp
bound
push
sbb
mov
and
push
imul
dec
xor
mov
das
loop
idivb
fistl
lea
xchg
xlat
stos
push
flds
and
fs
fnstsw
cli
sub
loop
jecxz
ljmp
pusha
push
sub
xchg
ret
dec
repz
insl
aad
push
out
sbb
fs
lret
add
inc
push
mov
in
push
ljmp
movsl
push
mov
sbb
add
ljmp
test
xchg
xchg
jge
std
call
shrb
outsl
xor
addr16
dec
adcb
addr16
ret
mov
cli
sbb
aaa
and
fs
stc
loope
sub
dec
dec
push
jl
data16
cmp
in
fwait
aaa
mov
das
jge
mov
jmp
or
xchg
iret
fldt
lea
jae
xchg
pop
or
adc
pop
pop
mov
dec
es
push
fldcw
xlat
rcr
xor
pop
shr
loopne
lods
arpl
fmul
je
mov
pop
xor
aas
inc
sub
xchg
in
nop
fmuls
xchg
adc
test
jl
mov
das
ds
mov
push
pop
vmovhpd
xchg
dec
test
mov
jecxz
loope
int
imul
adc
in
fistpl
imulb
loopne
pop
bound
push
cmp
and
sbb
ljmp
xor
adc
aaa
loopne
sahf
add
dec
and
imull
xchg
cmp
fisubrs
lcall
pop
popa
cli
lds
add
bound
ljmp
into
mov
shrb
or
push
lds
in
insb
repz
cmp
insl
inc
aaa
sub
nop
dec
push
arpl
sti
xor
int3
add
ss
add
mov
rorb
pop
dec
push
pop
push
cld
movsb
xor
mov
ljmp
cld
mov
loopne
mov
mov
sub
nop
pop
dec
icebp
int
data16
pop
fneni(8087
mov
mov
xchg
fcoms
cwtl
enter
bound
fstl
cmc
les
popa
movsb
inc
jnp
jg
addr16
inc
es
in
xor
or
adc
push
ficompl
and
jbe
pop
and
sub
xchg
sbb
lcall
push
popf
outsb
push
push
pop
adc
mov
cmpsb
dec
xor
mov
and
clc
repnz
sub
scas
arpl
jae
add
fldt
mov
push
mov
loopne
xchg
mov
cmc
mov
negl
sbb
push
mov
cmp
and
movsb
dec
cmp
push
push
mov
test
inc
aaa
test
adc
jns
xrelease
adc
addr16
ret
xchg
cltd
stos
or
xchg
adc
mov
fwait
push
dec
mov
adc
lcall
shrl
and
in
cld
cwtl
mov
dec
data16
ret
cmpsb
sti
movsl
cld
jp
cmp
ja
push
outsl
cmp
imul
in
inc
lret
test
test
or
jl
stos
push
stc
xor
rcll
stc
xchg
ret
imul
adc
movb
lret
bound
ja
jns
ja
jecxz
mov
inc
mov
push
imul
enter
pop
sub
jno
dec
fs
add
insb
sbb
jnp
lret
orb
dec
movsl
ljmp
notl
xor
xchg
xchg
pop
ja
out
aaa
test
push
push
jno
sub
cmp
outsl
outsl
fisubrl
add
or
and
cltd
popf
in
pop
jae
push
ja
xor
fdivrs
pop
sbb
nop
inc
pop
cmpsl
mov
push
repz
shlb
jp
mov
cs
pushf
outsb
stc
xchg
pop
and
scas
sub
pmovmskb
add
xchg
jbe
repnz
js
dec
add
inc
aaa
pop
pop
and
sbbl
add
fldl
jecxz
push
pop
mov
jg
mov
addr16
dec
lret
cmpb
mov
pushf
stos
mov
jg
daa
mov
and
and
ds
call
mov
fisttpll
cmp
fs
sbb
ja
fsubrl
mov
pushl
and
scas
aas
imul
jl
in
lahf
arpl
movsl
jne
int3
push
jl
loop
bound
mov
das
bound
mov
cmp
popf
inc
jns
ret
ret
in
je
insb
out
fs
inc
movsl
mov
fldl
std
xor
jne
aad
push
and
pop
push
addr16
movsb
and
sbb
sub
sub
jns
test
dec
loopne
mov
lcall
idivl
xorb
aam
push
jb
xchg
adc
inc
pushf
add
push
je
lret
add
push
cs
and
js
fs
pusha
push
sarb
lods
pop
out
xchg
aad
icebp
mov
xchg
sub
xor
sbb
mov
mov
ja
stos
out
iret
inc
insl
and
xchg
cli
gs
push
xlat
cmpsl
sahf
mov
scas
jecxz
addr16
cmc
fwait
or
jne
out
adc
jmp
cmp
and
gs
add
in
sub
bound
adc
lret
sbb
andb
mov
push
push
in
xchg
jae
fstpt
stos
clc
add
icebp
insl
cmpsb
orb
pop
mov
dec
sahf
movsl
push
and
push
and
pop
mov
xor
iret
cmp
outsl
push
fcmovnu
adc
pop
or
and
imulb
lods
jp
jb
add
xchg
dec
cld
xor
std
outsl
and
dec
push
jle
jmp
sbbb
aam
adc
imulb
lahf
cmp
jo
neg
sbb
cmpsl
mov
std
nop
or
adc
aaa
sbb
jmp
idiv
scas
sub
in
addr16
or
lds
das
loop
xchg
xor
mov
cmp
push
xchg
sub
test
aas
pop
xchg
aam
out
cmc
sbb
std
iret
out
inc
jp
mov
and
mov
pop
or
fisttps
mov
into
mul
cmp
lahf
dec
or
fwait
jb
sbb
mov
insb
bnd
aas
pop
push
and
xchg
pop
ja
rcll
cmpsl
and
int3
stc
adc
sbb
pop
and
sub
scas
add
dec
cltd
icebp
jp
jne
mov
jecxz
xchg
pop
outsb
sbb
or
sub
popf
xchg
sbb
xor
test
mov
xorb
sarb
in
pop
addr16
mov
xchg
and
test
cld
cld
xchg
in
loop
rclb
fnsave
or
les
pop
cwtl
cmpsb
push
jl
mov
sub
pop
mov
push
ret
cmp
negb
jae
outsl
dec
mov
xchg
mov
mov
pop
and
add
mov
sbb
fbld
xor
pushf
icebp
mov
ret
aas
sub
shlb
out
lods
mov
iret
nop
bound
adcb
ljmp
push
xchg
xchg
insb
add
lods
pusha
cmp
aam
into
dec
or
es
inc
data16
addr16
lret
dec
sub
inc
cs
sbb
addr16
cmp
and
scas
and
inc
pop
aas
jg
inc
inc
aam
shrb
adc
fwait
pop
inc
inc
add
and
and
inc
fwait
xor
adc
shl
icebp
and
pop
xchg
push
je
sbb
insl
mov
or
push
sbb
inc
push
insl
cmpsl
mov
xchg
xlat
cmp
arpl
dec
addr16
pop
bound
in
lock
mov
pop
mov
jno
add
jl
addr16
sbb
adc
sub
rclb
test
mov
neg
xor
jo
xor
pop
stos
pop
inc
jle
cmpsb
and
adc
daa
sbb
test
in
pop
sbb
aam
andb
and
sti
rcrl
movsl
les
cmp
xorb
inc
fwait
loope
inc
lock
push
xchg
in
or
push
push
adc
push
push
je
lods
jecxz
hlt
scas
jg
outsl
inc
mov
sbb
xchg
out
fisubs
add
jns
shll
pop
fs
ja
jbe
push
push
push
jbe
adcl
adcl
outsb
and
pop
xchg
imul
xor
add
xor
mov
scas
xchg
jns
add
inc
hlt
adc
shr
jo
push
mov
int
jp
pop
push
push
sub
sub
sbb
sub
arpl
mov
popa
mov
orb
xchg
movsb
mov
pusha
add
rcll
push
daa
mov
roll
mov
xor
xchg
insl
xchg
cmp
or
xor
mov
scas
pop
jnp
inc
sahf
les
scas
inc
mov
movsl
scas
cmc
ficoms
lods
loopne
dec
cmp
lods
inc
sub
sub
dec
cli
cmp
mov
dec
xchg
jecxz
shrl
sahf
mov
pop
mov
cmp
jmp
or
mov
addr16
mov
int3
mov
lahf
or
and
lea
outsl
mov
pop
outsl
dec
ja
or
sbb
inc
imul
jne
sub
mov
movsl
sub
inc
jle
lret
sbb
sbb
dec
ljmp
sbb
push
dec
sbb
in
fiaddl
out
and
mov
or
lods
add
or
or
xchg
jns
mov
insb
insl
push
arpl
or
mov
sbb
clc
rcll
loop
mov
rolb
fstpl
stos
push
imul
lret
repnz
pop
out
sub
mov
test
popf
sub
std
cwtl
neg
dec
or
push
cmp
cwtl
xchg
add
aam
loopne
sbb
push
inc
in
inc
cmpsl
xchg
or
xchg
push
fwait
sahf
dec
nop
xchg
repz
xlat
and
aam
pop
push
pcmpgtw
adc
imul
push
push
sahf
add
sub
mov
clc
sub
and
inc
out
push
xlat
pop
test
inc
mov
cmpsl
mov
add
ja
divl
loopne
mov
dec
push
ficompl
cs
or
imul
mov
popf
popf
inc
mov
pop
test
cmpsb
out
lea
mov
push
pusha
repnz
mov
adc
ret
clc
pop
inc
lahf
push
lods
xor
loop
jge
ljmp
mov
jmp
ljmp
int
nop
sbb
rorl
aam
push
xor
jge
sub
and
andl
xchg
stos
and
and
add
lods
adc
xor
andb
xchg
xlat
push
push
movq
in
cltd
jg
mov
adc
push
pop
and
mov
push
xchg
push
xchg
nop
and
mov
outsb
sbb
cmp
push
sbbl
lods
or
jmp
mov
cld
ljmp
lock
lret
and
cli
fnstcw
mov
outsb
outsl
test
and
push
jae
sbb
popa
xchg
orl
pusha
inc
mov
rcrb
dec
add
fmul
sti
xor
xchg
sbb
in
pushf
jle
cmp
sub
add
xchg
ja
xlat
pop
adc
mov
sbb
and
jno
hlt
aas
mov
test
mov
jle
test
inc
sub
loopne
int
jg
add
fs
out
outsb
push
daa
hlt
loope
std
or
shl
dec
pusha
xchg
cmp
mov
push
popf
repnz
sbb
inc
orb
push
cmc
jecxz
lods
sbb
pop
cmp
mov
jge
jmp
pop
sbb
scas
or
imul
pushf
or
loop
or
xor
aas
imul
cmp
mov
jecxz
fs
push
fs
das
addr16
daa
lret
mov
xchg
ss
cmp
mov
lcall
movsl
jl
sarl
popa
inc
repnz
sbb
fnsave
in
repz
xchg
mov
sub
outsl
and
outsl
addr16
out
into
mov
pusha
lcall
xlat
ja
daa
inc
fldcw
movsb
js
idiv
ds
xchg
pop
mov
vsqrtps
cmp
or
pushf
jo
movsl
or
xlat
sub
jo
inc
xchg
mov
shl
mov
daa
inc
out
pop
test
and
mov
aas
mov
add
mov
notb
js
fwait
xlat
andl
nop
sub
enter
mov
stc
inc
mov
xorb
test
sbb
in
cmp
test
and
addr16
mov
jno
movsl
xchg
sbb
test
imul
pusha
std
or
cmpsl
ret
pop
out
adc
pop
aas
sub
xor
js
cwtl
mov
sbb
and
mov
jecxz
jle
mov
les
mov
cmp
popa
loop
dec
addr16
fwait
cmp
push
inc
mov
cmpb
and
push
gs
jno
loop
pushf
ret
stc
shl
pop
pop
xchg
gs
jns
mov
and
imul
in
xorl
call
mov
mov
mov
mov
sahf
push
sub
push
adc
stc
inc
push
add
push
ret
sub
ret
popf
xchg
and
rcrl
mov
mov
dec
sbbb
movb
dec
sahf
jge
sarb
rol
cld
inc
stc
rcrl
adc
mov
pop
inc
and
aas
cmp
push
mov
add
jmp
sub
xor
mov
fidivrs
leave
mov
mov
mov
inc
and
insl
clc
and
adc
lcall
jg
mov
and
outsl
neg
add
cmp
or
cli
call
gs
pop
xchg
jb
pop
xchg
and
pop
in
mov
inc
add
dec
out
lret
fimull
hlt
cli
xchg
sbbl
gs
iret
dec
xchg
fld
cmp
adc
out
inc
lcall
lret
call
inc
loope
xor
fiadds
gs
xchg
out
cmc
push
stos
pop
cwtl
insl
sub
sbb
test
cmovb
add
push
in
mov
add
clc
scas
mov
cwtl
jg
add
mov
mov
pop
jns
cmpsl
adc
pop
lock
data16
hlt
add
ljmp
test
mov
mov
loopne
addr16
jp
sahf
push
popf
aaa
aaa
cwtl
lcall
push
popa
scas
add
mov
repnz
sahf
push
stos
iret
jp
pop
xchg
ret
add
je
xor
popf
dec
and
stos
push
cmp
in
shlb
mov
push
aaa
or
pop
shll
aaa
in
dec
push
mov
mov
bound
rcl
popa
push
testl
adc
sti
sub
xchg
or
sahf
sbb
add
fcmovnu
icebp
lods
nop
lods
fs
in
daa
pop
xlat
fadd
jp
adc
and
dec
imul
adc
or
mov
push
mov
movsl
sbb
mov
in
pop
call
sub
popf
mov
cmp
pop
and
iret
pop
inc
pop
jne
cmp
jge
add
sahf
repnz
ljmp
and
in
ljmp
mov
cs
lock
xchg
pusha
jns
scas
mov
pop
in
popa
cltd
adc
lret
pop
test
ss
inc
cwtl
jmp
cmpsb
enter
imul
and
sbb
push
stc
push
je
mov
mov
addr16
lea
adc
sub
add
fs
clc
inc
in
push
cmp
iret
ret
sub
imul
sbb
daa
sbb
mov
and
sarl
sbbl
outsl
adc
add
in
mov
ss
xor
xor
imul
mov
xchg
or
repnz
mov
in
fstpt
sub
mov
and
bnd
pop
mov
and
scas
in
push
inc
pop
popa
mov
push
xchg
testb
cltd
cltd
daa
xor
imull
popf
cli
enter
mov
es
jae
mov
inc
test
stos
mov
push
lea
xchg
out
std
xor
push
xor
int3
jmp
jge
pop
dec
arpl
xor
inc
pop
rorl
test
push
call
lods
loopne
repz
idivb
out
movsl
fsubr
in
or
bound
iret
and
out
cmp
bound
xchg
cwtl
ds
rcrb
cmpsl
ret
shrl
cmpsb
cmp
cmpsb
je
pop
in
pop
gs
shlb
popa
mov
pop
pop
outsb
mov
push
stc
jo
jb
dec
inc
mov
cmp
loopne
xchg
arpl
pushf
or
mov
lcall
sbb
push
out
aad
std
adc
jle
rcrl
xchg
push
mov
in
out
stc
imul
outsb
and
scas
add
push
call
or
mov
shll
mov
xor
add
out
xchg
pop
push
and
adc
and
mov
pop
xchg
and
inc
and
outsb
in
insl
mov
mov
jg
jmp
sahf
adc
push
mov
sbb
jne
daa
add
in
mov
xchg
push
lahf
in
cmp
cmpsl
sti
jnp
fstl
and
pop
aaa
push
or
cwtl
mov
push
sub
mov
xchg
test
sti
inc
mov
mov
movl
jno
sub
ljmp
fcmovnbe
lea
dec
cltd
push
fs
stc
xchg
repz
scas
mov
lods
and
sub
into
mov
xor
rcll
xlat
dec
dec
cltd
ljmp
jmp
mov
sub
aad
imul
outsl
push
cmp
repz
jmp
andb
lds
inc
pop
push
out
sbb
nop
in
mov
pop
ret
and
mov
popf
aaa
andl
in
pop
cmp
jp
push
xlat
add
ret
int3
lock
test
rolb
std
mov
adc
adc
pop
jmp
ss
push
rol
lret
add
ja
lea
cs
ja
pop
cmpsl
pop
mov
rol
jno
and
or
mov
into
lahf
jno
mov
scas
imul
sub
xchg
mov
arpl
iret
xor
mov
or
push
mov
sbb
push
cmp
push
out
push
lods
aad
adc
arpl
and
mov
clc
shrb
jl
lock
add
xchg
inc
loope
daa
das
mov
mov
push
mov
leave
add
push
daa
scas
es
mov
xchg
repz
dec
nop
scas
testl
lcall
imul
rclb
enter
mov
call
xchg
test
jbe
fldl
push
and
gs
loope
mov
fidivrl
mov
repz
push
jnp
cmc
cmp
cld
imull
sbb
cmp
pmulhw
inc
xchg
push
outsl
inc
push
fcomip
xchg
xchg
lea
mov
into
popa
pop
pop
fdivrs
mov
repnz
mov
stc
sub
add
lret
bnd
sub
add
dec
xor
repnz
in
and
inc
test
addr16
mov
adc
xchg
stos
mov
xor
aaa
xchg
cmp
pushf
bound
hlt
add
xchg
fs
and
dec
fs
shlb
adc
dec
sahf
inc
movsl
sti
sbb
mov
or
cwtl
pop
jne
adc
outsb
and
or
push
sub
pop
or
mov
test
addr16
movsl
pop
pop
outsl
xchg
mov
lods
movsb
aaa
push
negl
std
push
les
fs
sub
add
mov
xlat
pushf
xchg
lods
cmpsl
pop
and
xlat
sahf
push
popa
xor
and
and
fistl
push
sbb
fisubs
fcomip
mov
lods
fildl
and
xchg
push
arpl
js
mov
in
addr16
aaa
rcrl
mov
leave
mov
jge
jns
out
arpl
xor
das
shl
jne
mov
sbb
push
fcom
incl
jbe
daa
jns
dec
xchg
test
cmp
jo
cmp
popa
xor
andps
shl
mov
hlt
pop
cmp
jl
xchg
dec
shlb
jne
xor
and
sub
xchg
pop
cld
sub
icebp
xchg
mov
sub
rcl
sbb
inc
scas
xchg
addr16
outsb
mov
mov
cltd
in
ljmp
lret
call
adc
shll
inc
pop
xchg
scas
mov
cmc
popf
mov
ja
pop
enter
loope
push
bound
repnz
pop
out
pop
pop
inc
push
add
cmp
shl
repnz
adc
cmp
roll
push
fnsave
pop
in
mov
mov
lret
stos
addr16
hlt
lods
nop
pop
mull
test
inc
push
pop
mov
sbb
xchg
sbb
sbbb
and
stos
cmp
push
xlat
fucomp
adc
insl
ja
sub
sub
aas
xor
jp
subb
adc
cmp
or
sub
pop
pop
mov
clc
mov
stos
pop
jne
fsubrl
sbb
mov
mov
or
and
cmp
and
shlb
test
cmp
daa
adc
cmpsb
outsl
adc
shr
and
in
aaa
sub
repnz
in
pop
or
adc
ficoml
fs
fcoms
nop
adc
add
ss
push
rcll
addr16
xchg
jmp
sbb
cld
lcall
rorb
decb
loope
cmp
cmp
pushf
incb
sub
test
hlt
test
cmp
lret
scas
daa
rcr
sbb
mov
in
sbb
mov
sub
add
and
mov
jbe
dec
iret
imul
hlt
dec
addr16
mov
pop
aas
or
pop
xchg
cli
lods
sub
out
adc
in
cli
dec
adcb
pushf
cltd
inc
add
sahf
pop
addr16
sub
pop
inc
push
aad
mov
or
inc
dec
sbb
jle
mov
aaa
mov
inc
daa
outsb
int
pop
out
gs
addr16
adc
sarl
pop
rcrb
mov
icebp
clc
push
mov
fbstp
jne
add
loopne
ret
push
sub
jle
fldenv
jae
insl
xlat
xor
cwtl
pop
mov
xchg
adc
pop
xchg
mov
nop
add
adc
and
sub
cmp
aaa
pushf
xor
nop
lret
mov
pop
adcl
pop
out
jb
inc
scas
rcl
push
dec
fs
xchg
repnz
outsb
dec
ljmp
adc
daa
and
or
mov
cli
lcall
push
pop
dec
sbb
xlat
pop
adc
dec
loopne
ja
cmpsb
popf
push
mov
addl
clc
jns
jne
xchg
aaa
inc
xor
inc
movsb
pop
popa
jmp
inc
arpl
pusha
out
ss
cs
loop
aaa
and
jle
hlt
adc
repnz
adc
pop
pusha
outsl
rolb
lods
inc
insl
mov
mov
hlt
dec
int
rclb
leave
and
mov
std
popf
outsl
jmp
repnz
add
add
and
mov
jle
dec
outsb
xor
xchg
mov
inc
fwait
insb
pop
and
test
sbb
rcrb
mov
std
or
daa
pushf
cltd
xlat
sbb
cwtl
into
psllw
ljmp
push
sub
mov
pop
pop
push
add
lds
cltd
test
mov
xchg
test
cmpsb
dec
mov
or
shrl
and
sbb
int
shl
mov
xchg
sub
lock
loope
xchg
or
adc
repz
dec
mov
out
dec
pop
xor
fwait
data16
mov
psubw
mov
test
pop
and
pop
daa
movsl
cmp
xlat
and
add
mov
lock
lock
sbb
icebp
or
sub
test
pop
dec
pusha
sub
arpl
fucomi
andl
mov
je
xchg
push
insl
fldenv
sub
ja
aam
cmpsb
ljmp
pop
sbb
dec
das
ja
sub
inc
gs
enter
test
outsb
movsl
pop
pop
add
sbb
rcrb
pop
leave
pop
test
out
cwtl
push
ljmp
imul
das
push
stos
pop
stos
and
cmpsl
enter
in
add
adcl
int
xchg
mov
add
mov
imul
xor
dec
les
das
adc
mov
or
mov
lock
dec
lcall
cltd
lahf
mov
pop
dec
div
jae
ja
aad
or
jne
fists
push
xlat
push
mov
xchg
mov
push
xor
sub
push
pop
aaa
mov
shl
mov
push
adc
ss
dec
ja
mov
mov
subb
inc
rcrl
xor
xchg
ljmp
adc
xchg
lcall
mov
nop
arpl
fcmove
lret
mov
xchg
es
xor
add
inc
push
mov
stos
lcall
fldenv
scas
jns
outsl
shrl
stos
mov
out
and
repnz
ret
out
jbe
dec
call
cmp
pop
pop
insl
mov
adc
loop
adc
scas
pushf
adc
fs
mov
data16
movsb
inc
ret
inc
pushf
addb
fwait
cwtl
cmp
nop
stos
nop
inc
mov
mov
aad
fs
and
stos
jl
xchg
mov
push
cmpsl
xchg
cmp
adc
xchg
push
ja
jg
xchg
insb
push
fcompl
xchg
in
test
rcll
lcall
sub
xchg
inc
xor
enter
dec
cmova
sbb
cmpsb
divl
xchg
or
or
xchg
fdivrl
pop
fistps
mov
or
ljmp
push
clc
aad
push
mov
cli
xchg
fs
xlat
ljmp
aam
test
sbb
cs
inc
sbb
inc
leave
jo
rol
sahf
cmc
mov
mov
adc
pop
out
pop
mov
pusha
pop
cltd
shlb
rcrb
cmpsl
mov
push
inc
inc
sahf
mov
lea
adc
outsl
and
mov
xor
hlt
push
xchg
loop
push
inc
lret
pop
aad
mov
scas
mov
add
inc
sub
add
xchg
jp
data16
repnz
mov
adc
loopne
shlb
mov
adc
icebp
pushf
test
sub
xchg
xchg
out
and
lret
gs
pop
xchg
inc
out
stos
iret
in
pop
inc
imul
push
mov
sub
repz
jecxz
push
jle
repz
cmpsb
gs
inc
or
and
push
push
mov
adc
imulb
into
dec
cmpsb
adc
hlt
aam
outsl
mov
cmp
out
mov
aad
dec
idivl
mov
imul
mov
into
repz
ljmp
mov
mov
sub
sub
xchg
sti
scas
xchg
je
jb
in
inc
mov
repnz
mov
mov
xchg
pushf
adc
in
add
xchg
push
jne
cltd
insl
gs
add
push
mov
aaa
arpl
jnp
mov
add
mov
pushf
and
pop
cli
movsb
test
shrl
xlat
outsl
xchg
shlb
out
loop
pop
daa
data16
mov
mov
or
pop
push
fs
out
dec
aas
mov
jle
add
movsl
out
cwtl
inc
mov
push
mov
bound
adc
push
cld
mov
daa
xor
jo
in
shll
lock
addr16
pop
xchg
xor
cmpsb
clc
sbb
jg
jb
aam
jg
dec
and
popf
push
enter
out
jp
dec
inc
lret
test
dec
cld
inc
bound
or
pop
cmp
int3
wrmsr
arpl
add
aam
pop
repz
jmp
mov
repnz
loopne
jns
push
je
lds
popf
mov
je
xchg
jns
stos
jmp
enter
cld
inc
sti
outsl
loope
xorb
fdivr
inc
insb
adc
mov
dec
movsb
sbb
jp
shlb
sbb
inc
push
shll
aaa
sbb
sub
hlt
jmp
pop
cmp
fs
ss
mov
or
and
aas
sub
repnz
push
das
sbb
dec
ss
mov
ror
dec
sub
mov
and
xchg
aaa
xlat
in
rclb
push
divl
jnp
imull
pushf
sub
mov
sbb
xchg
popf
jnp
push
ret
nop
push
mov
sbb
dec
pusha
adc
jmp
mov
inc
dec
push
lock
je
push
push
pop
sub
or
push
lds
xchg
enter
ss
pop
or
insl
adc
or
movsb
add
push
cmpsl
cli
sub
popa
jl
dec
xchg
addr16
mov
ret
pop
loop
int3
and
ret
ret
xor
cwtl
push
movsl
sub
push
jecxz
xchg
inc
sbb
xchg
lahf
les
pop
daa
outsl
mov
mov
adc
and
push
inc
test
nop
test
push
out
lea
adc
mov
sbb
add
out
imul
imull
mov
pop
mov
add
cmp
sub
sbb
xor
gs
mov
gs
jp
pusha
mov
pop
and
adc
andl
nop
jnp
pop
mov
adc
lock
lea
addr16
pusha
cmp
std
mov
dec
inc
and
inc
aaa
cmpsl
call
push
jmp
mov
in
add
xchg
fs
pop
pop
repnz
jg
jg
jae
add
clc
dec
cs
mov
jnp
jo
scas
xor
repnz
cltd
mov
andl
clc
outsb
adc
ja
cltd
mov
icebp
add
outsb
fs
mov
sub
in
loop
bound
mov
xchg
inc
xor
inc
or
pop
addr16
cmpsl
and
test
arpl
imul
add
mov
repz
lock
insl
fs
rolb
xor
cmp
inc
hlt
mov
xchg
lods
push
add
mov
xor
mov
sbb
lock
mov
xor
loope
lods
sub
dec
nop
sub
cmpsb
jmp
aas
jne
mov
push
push
cmp
sub
nop
mov
shrb
push
enter
adc
test
xlat
and
lock
bound
lock
int
mov
adc
inc
daa
scas
mov
push
and
push
jle
lock
or
sub
jo
adc
ret
outsb
push
ret
sub
aas
pop
push
push
pop
xchg
fldlg2
adc
outsl
dec
fcoml
pop
ljmp
xor
cmp
push
and
imulb
xchg
insb
push
or
mov
xchg
pop
pop
cld
mov
cmp
or
rolb
cmpsl
and
xor
pop
pop
mov
sahf
lret
cmpsl
loope
push
sub
popf
cltd
mov
les
mov
lcall
xchg
insl
shr
xor
into
adc
mov
xchg
and
jno
sti
std
push
push
inc
daa
jge
pop
pusha
mov
and
shlb
nop
xor
add
jmp
stos
adc
add
inc
popa
cmpsl
clc
cmp
add
arpl
sbbb
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
push
jo
popa
je
push
gs
jne
arpl
add
add
gs
je
inc
imul
jns
js
add
add
inc
imul
inc
imul
gs
jns
je
insl
dec
outsb
outsw
add
add
je
push
dec
outsl
arpl
add
add
fs
xor
inc
imul
push
imul
outsb
insb
outsl
arpl
add
inc
gs
outsl
outsb
addr16
popa
je
dec
popa
insl
gs
add
add
dec
outsl
popa
fs
imul
add
inc
inc
dec
dec
inc
dec
xor
cs
insb
add
add
inc
inc
dec
inc
jb
ja
add
inc
inc
dec
dec
jo
outsb
push
jb
jbe
fs
add
push
imul
dec
jo
outsb
add
add
push
imul
inc
gs
insb
imul
add
inc
inc
dec
push
gs
gs
imul
add
add
inc
insb
outsl
jae
push
jb
jbe
fs
add
add
inc
gs
jb
jns
add
add
outsb
push
popa
je
push
data16
add
add
outsb
push
popa
je
push
je
je
jae
push
add
add
je
inc
push
imul
add
add
inc
jb
popa
je
push
jb
insl
popa
jb
add
add
inc
inc
dec
inc
jb
popa
je
dec
jbe
jb
popa
jns
add
add
inc
jb
popa
je
dec
data16
jb
outsb
add
add
inc
inc
dec
push
gs
jb
inc
gs
inc
insb
imul
dec
cs
insb
add
add
push
popa
imul
je
jo
gs
bound
arpl
add
add
je
popa
jae
imul
dec
popa
jo
jae
jb
push
popa
insb
push
popa
addr16
add
add
inc
arpl
jae
inc
push
jns
jns
gs
gs
insb
je
imul
jne
imul
add
add
dec
jo
outsb
inc
imul
je
gs
outsl
outsl
je
jo
imul
add
dec
outsl
arpl
imul
jns
add
dec
je
jb
popa
je
push
popa
imul
jb
add
add
push
je
inc
arpl
imul
outsl
arpl
add
dec
je
popa
imul
outsb
je
popa
imul
push
push
push
xor
cs
insb
add
add
push
push
dec
inc
outsl
jo
inc
gs
add
add
dec
dec
jne
push
gs
insb
je
outsl
insb
jae
add
add
dec
inc
outsl
insb
inc
je
jb
bound
gs
add
add
push
push
dec
push
gs
gs
inc
imul
add
push
push
dec
push
gs
outsl
jae
add
push
push
dec
inc
popa
outsb
arpl
add
add
push
pop
arpl
insw
je
add
add
dec
dec
jne
push
popa
jb
insl
jae
add
add
dec
inc
imul
arpl
add
dec
push
gs
je
je
je
jb
add
add
dec
push
outsl
ja
outsl
jne
je
add
push
push
dec
push
gs
outsl
outsb
outsb
arpl
je
outsl
outsb
push
add
add
push
push
dec
inc
gs
jb
bound
outsl
insb
push
add
add
dec
push
gs
outsb
jbe
je
jb
add
push
push
dec
inc
js
arpl
arpl
add
pop
push
push
xor
cs
insb
add
add
inc
jb
jo
dec
outsb
jae
jb
dec
jb
inc
outsb
je
jns
add
inc
gs
push
outsb
jb
imul
jae
gs
push
je
jb
add
add
jb
push
gs
data16
imul
imul
gs
inc
outsb
jne
push
jns
je
insl
push
je
jb
add
add
jns
je
dec
push
push
gs
outsl
jbe
push
jb
jbe
fs
add
add
inc
jb
jo
inc
gs
jae
xor
arpl
gs
add
inc
jb
jo
push
je
imul
outsb
popa
jb
inc
add
add
inc
gs
push
inc
dec
push
popa
insb
jne
push
outsl
push
je
push
add
add
inc
gs
push
popa
jbe
push
je
jb
add
dec
dec
inc
dec
dec
cs
insb
add
add
je
jo
jae
outsb
arpl
inc
outsl
outsb
imul
add
push
popa
jb
dec
inc
outsl
insl
popa
imul
outsl
jb
inc
arpl
popa
je
fs
jae
outsb
arpl
imul
add
add
inc
popa
arpl
fs
gs
jae
jb
jb
insl
push
imul
imul
inc
outsb
outsl
outsb
jns
outsl
jne
push
jae
jb
outsl
insl
jo
jb
dec
imul
inc
outsl
outsb
imul
dec
outsl
fs
add
add
push
gs
push
jae
jb
outsl
jb
fs
imul
gs
jae
jb
jb
insl
push
imul
outsb
inc
outsb
jne
gs
je
inc
gs
arpl
add
add
popa
outsb
fs
jb
inc
jb
outsl
jb
gs
popa
add
add
inc
outsl
insl
jo
jb
inc
insb
popa
jo
gs
imul
push
je
push
jb
arpl
jae
je
je
add
add
je
outsl
jb
inc
gs
arpl
outsb
jne
gs
je
add
add
push
jne
jb
inc
jne
jb
outsb
je
imul
outsl
outsb
add
add
push
je
push
jns
je
insl
push
popa
imul
add
add
jae
popa
insb
insb
dec
outsl
fs
add
add
inc
popa
je
push
imul
outsb
add
add
inc
gs
outsb
imul
outsb
push
je
imul
push
je
push
fs
insb
popa
jae
add
add
inc
insb
popa
jo
gs
imul
outsb
add
add
je
jns
je
insl
dec
gs
popa
addr16
add
add
jb
gs
arpl
popa
je
fs
jae
outsb
arpl
imul
add
add
jns
arpl
imul
gs
je
add
add
push
je
inc
outsl
outsb
outsb
arpl
popa
je
add
add
addr16
gs
gs
outsl
jb
inc
gs
arpl
popa
insl
add
push
xor
cs
insb
add
add
dec
jae
inc
jo
outsl
outsl
outsb
push
jae
jb
js
add
add
jbe
gs
outsl
outsl
outsb
inc
je
gs
jo
inc
outsl
jne
je
add
dec
jae
push
popa
insl
push
popa
insb
imul
add
jbe
pop
xor
jo
jb
push
jne
inc
jne
push
arpl
imul
imul
dec
jae
xor
push
jne
inc
jne
push
arpl
imul
outsb
je
add
add
inc
jo
outsb
imul
push
popa
arpl
add
add
dec
jae
inc
jo
popa
insb
insb
push
popa
arpl
add
add
dec
jae
inc
jo
popa
insb
insb
push
popa
arpl
addr16
outsb
je
jne
je
add
add
inc
jo
outsl
outsl
outsb
push
gs
imul
add
add
jbe
popa
insl
dec
outsl
outsl
data16
add
push
jo
jae
dec
outsl
fs
outsb
imul
add
add
inc
jo
popa
insb
insb
push
popa
arpl
addr16
popa
jae
je
jb
jne
push
jo
jae
jb
outsl
fs
outsb
imul
add
add
push
jo
outsb
imul
add
add
push
jo
outsb
jae
popa
outsb
arpl
outsb
imul
push
dec
dec
cs
insb
add
add
dec
jae
jb
push
jns
je
insl
push
popa
jb
imul
push
pop
push
pop
push
push
inc
dec
inc
inc
push
inc
inc
push
inc
push
push
push
push
push
dec
dec
inc
inc
inc
push
inc
inc
inc
pop
add
add
aas
aas
xor
dec
dec
inc
inc
pop
push
inc
inc
push
push
dec
push
pop
inc
inc
push
inc
inc
inc
pop
pop
add
add
aas
push
jne
jb
push
imul
dec
dec
inc
inc
push
inc
inc
inc
pop
pop
add
add
aas
dec
outsb
imul
inc
dec
dec
push
push
push
inc
inc
dec
inc
inc
push
inc
inc
inc
pop
pop
add
add
aas
push
push
outsl
jb
inc
push
dec
dec
dec
dec
inc
inc
push
inc
inc
pop
pop
pop
add
add
aas
dec
outsb
imul
inc
inc
dec
inc
push
inc
push
dec
inc
inc
push
inc
inc
inc
dec
inc
pop
add
add
aas
aas
xor
inc
push
push
inc
pop
push
inc
push
inc
inc
push
inc
inc
inc
pop
pop
add
add
aas
xor
pop
dec
dec
pop
inc
push
pop
inc
push
dec
push
inc
inc
inc
push
inc
inc
inc
pop
pop
add
add
aas
inc
gs
popa
outsb
outsb
gs
arpl
imul
imul
inc
dec
dec
inc
inc
pop
push
inc
inc
push
push
dec
push
pop
inc
inc
push
inc
inc
push
inc
pop
push
xor
inc
inc
dec
dec
inc
inc
pop
push
inc
inc
push
push
dec
push
pop
pop
push
pop
push
inc
inc
inc
push
inc
dec
inc
pop
add
add
aas
dec
jae
push
data16
dec
inc
push
pop
push
pop
push
push
inc
dec
inc
inc
push
inc
inc
push
inc
dec
inc
pop
dec
dec
push
inc
inc
dec
push
inc
pop
inc
pop
add
add
push
gs
outsl
insb
jne
gs
popa
bound
inc
outsb
fs
jb
outsb
je
outsl
jb
popa
je
gs
jb
inc
push
dec
dec
pop
dec
dec
dec
inc
push
inc
push
push
inc
inc
push
inc
inc
inc
push
inc
push
push
push
push
push
dec
dec
inc
inc
inc
push
inc
push
dec
inc
push
push
inc
inc
inc
inc
inc
inc
pop
add
add
aas
inc
gs
gs
inc
popa
je
push
insb
outsl
je
push
dec
dec
dec
dec
inc
inc
push
inc
inc
inc
inc
push
inc
dec
inc
pop
dec
dec
push
inc
inc
pop
pop
add
add
push
jne
jb
dec
je
jae
gs
imul
pop
push
pop
push
push
inc
dec
inc
inc
push
inc
inc
push
inc
inc
xor
push
dec
dec
inc
pop
dec
dec
pop
inc
push
pop
inc
push
dec
push
inc
inc
inc
push
inc
pop
inc
pop
add
add
aas
inc
gs
jb
jbe
inc
push
push
push
inc
push
inc
push
inc
inc
inc
inc
push
inc
inc
push
inc
push
dec
dec
pop
inc
push
pop
inc
push
dec
push
inc
inc
inc
pop
pop
add
add
aas
dec
outsb
imul
inc
push
inc
inc
inc
pop
inc
inc
inc
dec
inc
inc
inc
push
inc
inc
inc
push
inc
push
dec
dec
pop
inc
push
pop
inc
push
dec
push
inc
inc
inc
dec
inc
pop
add
add
add
mov
add
add
add
cwtl
add
pusha
xor
add
add
add
add
jbe
add
add
add
aas
add
push
add
add
add
jb
add
rolb
add
push
add
add
add
add
add
clc
add
add
aas
add
mov
add
pusha
add
add
inc
add
add
add
mov
add
add
xor
add
xor
add
add
cli
xor
add
xor
add
xor
add
add
cmp
add
push
xor
add
add
add
xor
add
add
and
add
les
add
mov
add
out
add
dec
xor
add
xor
add
xor
add
xor
add
xor
add
add
mov
add
add
add
xorb
xor
add
xor
add
xor
add
ds
add
es
add
add
add
cwtl
xor
add
es
ds
pusha
add
jbe
add
fdivs
add
divb
add
shlb
add
add
test
add
add
add
cld
add
loop
add
xchg
add
mov
add
adc
add
inc
aaa
add
int3
add
jle
add
sub
add
add
add
mov
add
or
add
fidivrs
add
jb
add
pusha
cmp
add
add
sbb
add
divb
add
dec
cmp
add
aaa
add
cmpsb
cmp
add
add
in
add
sub
add
add
add
pusha
cmp
add
add
mov
cmp
add
add
xor
add
repnz
add
add
add
add
add
add
add
cmp
add
enter
stos
cmp
add
cmp
add
add
cmp
add
cmp
add
add
fdivrs
add
push
cmp
add
add
add
cmp
add
cmpb
add
add
idivb
add
cmp
add
cmp
add
cmp
add
add
mov
cmp
add
cmp
add
add
add
adc
mov
add
lods
movsb
inc
add
dec
add
loopne
inc
add
xor
add
popa
add
fadd
inc
add
add
hlt
popa
inc
add
add
add
add
add
xchg
cmp
shr
mov
loop
jo
cmc
arpl
repnz
daa
clc
jle
in
push
jae
mov
sti
fdivrl
pop
shrb
and
rep
movsl
test
pop
or
dec
insb
xchg
mov
push
mov
lret
imul
ljmp
push
addr16
enter
mov
pusha
sbb
aaa
repnz
mov
popf
sub
jns
aad
ret
pop
nop
popa
das
loop
push
pop
pushf
mov
pop
inc
enter
mov
add
int
movsl
cmpsl
pop
sbb
lcall
outsb
aam
mov
cs
lock
mov
push
push
fsubrs
or
or
stos
sub
aas
mov
or
cmpsl
decb
ds
jle
lcall
jmp
push
insl
dec
lock
lds
push
or
sahf
enter
lds
test
xchg
cmp
mov
mov
sbb
sub
jb
mov
push
push
pushl
outsb
push
pop
sahf
mov
jo,pn
jmp
fdivrl
mov
daa
imul
jecxz
cmpsl
or
pop
dec
lock
cmp
and
ret
lds
jno
xlat
pop
or
addr16
mov
xchg
sbb
mov
iret
sbb
sahf
dec
push
dec
cmp
outsb
gs
pop
push
cltd
cltd
out
cli
aam
cmpsb
adc
and
xchg
rcrb
sar
sub
mov
mov
push
popa
data16
leave
xor
inc
addr16
jae
je
out
vmovaps
test
push
add
arpl
inc
and
mov
inc
test
es
mov
aaa
sbb
adcb
xchg
xor
and
je
inc
mov
rolb
xor
lret
clc
cmp
xor
adc
xchg
mov
lret
sub
inc
test
lods
pop
and
xchg
aam
pop
cmp
mov
ficompl
outsb
inc
mov
adc
xor
inc
dec
in
cltd
jnp
mov
insl
or
es
pop
cmp
xchg
adc
xor
scas
in
test
bound
cltd
mov
mov
mov
in
fnsetpm(287
bound
daa
idiv
scas
adc
mov
and
push
outsl
call
test
jne
pop
xor
cli
fisubl
mov
aas
stos
jecxz
fisubs
mov
adc
dec
and
cmp
or
push
inc
mov
add
push
loope
movsl
fs
movsl
fnstenv
inc
bnd
ret
dec
xchg
insb
idivl
pop
out
jne
mov
sbb
inc
shrb
sarb
lods
aaa
aaa
sbb
add
dec
and
pop
jbe
xor
adc
push
sub
mov
pop
test
insb
shrl
mov
dec
push
lret
xlat
dec
sbb
out
cs
fists
jp
mov
cmc
dec
cmpsl
rorb
outsl
sub
sub
ljmp
xchg
dec
xor
and
jnp
pop
scas
daa
loopne
cli
xor
xchg
or
hlt
push
sahf
out
data16
cmpsl
ja
and
sub
xchg
movsb
icebp
lcall
mov
sbb
xor
ret
std
jp
popf
lods
fs
vmread
cli
lods
in
movsb
pop
dec
and
test
aaa
pop
mov
pushf
xor
adc
jbe
cs
add
dec
pop
push
and
outsb
movsb
sub
jae
out
push
inc
lea
or
jo
movsl
test
imul
loope
jns
jb
dec
in
pusha
pop
nopl
sbb
pop
fcomi
lods
mov
adc
mov
fisubl
addr16
push
or
es
dec
sti
push
nop
sbb
ss
nop
imul
push
cmpsl
pop
sbb
pop
stos
dec
fidivrl
push
test
leave
push
cmpsb
test
mov
add
sbb
jmp
insl
pop
pop
push
adc
xchg
add
xor
sbb
imul
inc
dec
das
movsl
cmp
push
divb
xchg
addr16
inc
pop
and
ja
popa
jo
sub
fildll
mov
repz
jne
jg
dec
and
jl
popa
aam
push
test
punpckldq
lods
push
push
pop
out
add
mov
popa
cmc
cwtl
cmp
out
loop
pop
and
aad
pop
ja
inc
pop
mov
imul
es
cmp
lret
xchg
decb
imul
jecxz
lahf
sar
stos
arpl
xchg
xchg
and
ds
scas
cli
cltd
push
and
push
xchg
jno
adc
xor
call
pop
cmp
ficomps
aaa
and
ficoms
jno
cltd
pop
jb
dec
dec
arpl
insb
inc
xchg
std
das
or
movsl
or
adc
aas
les
in
add
adc
xchg
adc
add
mov
add
sbb
test
minps
gs
and
mov
dec
lods
sub
xor
not
imul
mov
insb
imul
cmp
call
stos
sub
mov
cld
dec
lahf
arpl
xchg
mov
mov
fimull
das
rcr
inc
pop
imul
cmp
cmpsl
popa
lret
cwtl
lahf
out
xor
sub
xchg
dec
daa
xchg
popf
movsb
or
jo
inc
std
pop
xchg
out
insl
sbb
sbb
addr16
lea
daa
aad
inc
jmp
hlt
mov
push
outsl
sbb
jecxz
xchg
in
das
ffreep
out
inc
lahf
gs
and
jne
mov
pusha
mov
dec
aaa
xchg
fwait
insb
pop
sbb
popa
repz
mov
leave
jns
add
mov
mov
and
pushf
movsl
lcall
pop
jle
pop
inc
daa
add
pop
stc
sub
pop
jp
cwtl
cmpsl
cli
stos
or
shrl
int
gs
gs
in
repnz
add
bound
cmp
pushf
adc
es
push
mov
push
mov
dec
jb
shr
aaa
jae
fistpl
lahf
testb
or
cmp
aam
or
fsubrl
data16
ret
mov
outsl
mov
out
push
fs
mov
mov
push
mov
xchg
adc
sub
xor
add
test
leave
test
push
push
ljmp
stos
inc
cmp
and
xchg
add
movsl
mov
mov
mov
jge
xlat
fisubs
dec
stos
mov
test
pushf
xor
addr16
jb
push
push
into
jmp
cmp
and
fcmovnu
test
sarb
loopne
loope
je
jecxz
scas
fs
add
xor
mov
xlat
mov
pop
cmp
jle
fxch
and
push
in
lret
imul
mov
add
mov
data16
adcl
div
bound
mov
jae
add
and
inc
push
add
stc
lea
dec
mov
shl
push
lds
push
dec
daa
outsl
push
out
xchg
fs
sbb
mov
xchg
imul
push
sbb
movl
cld
inc
les
pop
imul
push
mov
fdivs
shll
mov
cmpb
mov
or
xchg
mov
sub
divl
xor
cmp
mov
andl
pop
lds
and
pop
xchg
jge
push
add
mov
fcomp
push
lods
je
fsubrl
xor
sarb
in
xchg
rcrb
leave
xor
dec
pushf
pushf
dec
xchg
mov
and
rorl
pop
mov
cltd
stc
sub
mov
fnstcw
pushf
test
loop
imul
cwtl
sub
std
imul
cmc
mov
mov
std
lret
and
fwait
mov
imul
gs
scas
call
movb
outsb
xchg
pop
mov
xor
mov
loopne
or
add
jo
or
pop
lock
pop
aaa
testl
cmpsb
pop
mov
xor
cmp
mov
xor
jle
movsl
xchg
sarl
mov
xlat
aaa
in
stos
outsb
lods
call
xlat
pop
push
pop
push
insb
fists
daa
loop
hlt
jbe
ss
dec
pop
inc
xchg
sub
lahf
jmp
movsl
mov
enter
mov
cmc
subl
bound
pop
lret
inc
stos
push
insl
daa
pop
push
push
in
fiadds
lea
dec
shlb
call
subps
ret
pop
push
stos
pop
xchg
push
pop
popf
xchg
pusha
andl
icebp
fsubrs
popa
into
scas
lret
aam
inc
je
or
mov
and
mov
jmp
notl
pop
lock
cmp
lods
mov
movsb
aam
sbb
mov
push
jno
leave
mov
loopne
inc
jnp
mov
mov
notw
lretw
andb
and
pop
arpl
inc
negb
daa
aad
xor
dec
cwtl
jmp
mull
mov
sbb
aas
mov
subb
loop
and
push
adc
int
addr16
sti
mov
incl
sahf
add
lock
ja
clc
push
imul
ret
ja
push
inc
fs
aad
imul
sub
xor
cmp
xor
mov
repnz
xchg
gs
and
lret
push
inc
pop
ja
cltd
imul
dec
ss
xor
out
adc
aas
dec
cmp
push
inc
scas
inc
mov
xlat
and
es
pop
jp,pn
push
cmpsl
ss
jge
or
in
in
pop
sbb
cwtl
loop
push
xchg
push
daa
test
test
rsm
fwait
fwait
andb
and
mov
movsl
xchg
rcll
cmp
test
pop
gs
scas
mov
call
push
pop
xlat
xor
xchg
add
xchg
imul
ret
push
mov
pusha
cltd
jnp
inc
inc
or
mov
push
enter
cli
test
add
stos
pop
adc
lret
jnp
mov
pop
xchg
jge
add
cli
sti
pop
daa
stos
ficomps
add
mov
adc
jno
cmp
je
rcrl
and
push
inc
push
fidivl
fmul
outsl
aam
add
mov
ret
pop
xlat
lods
les
xlat
jne
jnp
add
pop
popf
pop
sarb
in
cld
shrl
mov
shld
mov
dec
incb
xchg
push
fiaddl
sub
xor
fwait
fwait
mov
enter
pushf
adc
xor
mov
pop
cmpsb
fistps
stos
xchg
jns
mov
dec
aas
aaa
adc
test
pop
aas
cs
push
daa
shlb
mov
push
rolb
jp
pop
outsb
push
lock
xchg
stos
dec
and
xchg
push
xchg
pop
and
inc
pop
test
loop
sbbb
xchg
hlt
leave
arpl
or
ljmp
mov
shll
cmp
dec
popa
fs
pop
push
outsb
popf
cs
nop
daa
push
xlat
jo
sahf
xchg
sub
mov
xor
andl
hlt
loopne
sub
adc
ljmp
jo
mov
cmp
push
insl
mov
rclb
push
fs
das
outsb
mov
pop
or
fisubs
mulb
mov
dec
addr16
or
addb
jmp
hlt
data16
aad
pop
sub
mov
xchg
daa
adcb
daa
ret
mov
bound
or
stos
mov
cmp
cmp
dec
pop
addr16
dec
xor
lea
imul
sub
repnz
cmp
popf
push
lods
push
push
fisubs
ret
ja
popa
out
xor
loopne
pusha
es
bound
sub
movsb
fisttpll
and
or
mov
inc
dec
repz
cmpsb
and
inc
mov
or
ret
pushf
fwait
in
jmp
aaa
enter
hlt
cltd
mov
mov
xor
xchg
xchg
subl
stc
pop
or
mov
jne
cmpsl
inc
cld
adc
hlt
loope
cmp
xor
pop
pop
mov
or
xor
add
xlat
cwtl
fmul
adc
aas
pop
or
aaa
push
mov
pop
xor
sub
dec
aaa
mov
xor
jp
sub
cwtl
pop
cmovge
xchg
adc
rcrl
dec
into
popa
cmp
outsb
loop
loop
stc
inc
gs
lahf
fsubl
dec
cmp
adcb
and
dec
aam
sahf
mov
mov
mov
lret
stc
je
imulb
dec
loopne
ss
test
jo
loopne
mov
aam
xchg
push
jbe
sbb
mov
cmc
popa
and
and
mov
enter
push
pop
adc
add
ja
scas
pop
cmpsb
mov
fmul
xchg
or
xchg
mov
in
enter
cmp
mov
dec
jo
adc
inc
sbb
pop
loop
cld
jmp
jne
pop
inc
mov
xchg
push
mov
dec
into
push
or
xchg
jnp
cmpsb
jmp
insl
sbb
iret
scas
dec
or
loopne
movsl
aas
pusha
cmp
pop
jae
inc
pop
dec
mov
inc
dec
add
dec
call
into
insb
push
mov
cmpsl
repz
fisubs
adcb
dec
inc
scas
imul
out
stos
shll
test
pop
cmpsl
dec
in
cmc
pop
std
mov
pop
ss
inc
or
cmc
push
out
sar
sbb
cmp
test
pop
and
out
pop
insl
arpl
je
aam
loop
adc
bound
ja
popf
das
jne
push
mov
fcmove
movsb
mov
sbb
arpl
push
stos
aad
push
adc
call
movsl
pop
sub
hlt
mov
xchg
mov
fsts
out
repz
dec
mov
ljmp
cmp
xchg
and
pop
pop
mov
lods
addl
mulb
test
adc
sbb
mov
xchg
xchg
lods
lret
add
int
xchg
add
cmp
xchg
mov
lock
jecxz
sub
insl
jecxz
popa
xor
imul
inc
dec
fcmovnb
in
xor
lods
in
fucomi
bound
pop
mov
stos
jg
inc
lock
mov
push
sub
mov
inc
pushf
or
outsb
jne
cmp
bnd
xor
mov
pop
out
cmp
sbb
xor
fidivl
in
xchg
jns
xchg
xchg
push
and
popa
pop
mov
insb
mov
and
lock
loope
mov
test
push
xchg
aam
add
popf
js
mov
jo
pop
movsl
inc
in
adc
pop
packuswb
or
mov
pusha
and
lret
sub
fsts
push
sahf
fwait
xchg
adc
push
add
xchg
je
lods
test
cli
add
dec
add
inc
pop
mov
mov
cmp
mov
rol
mov
pop
out
cmpsb
sar
sub
loop
sub
aas
and
push
mov
scas
xor
icebp
push
or
adc
add
pop
sub
pop
out
mov
test
jno
cmpsl
jl
sub
inc
xlat
pop
pop
push
imul
leave
pop
imul
data16
adc
arpl
sub
cmpsl
loopne
sahf
addr16
mov
rcll
fwait
sub
iret
int
jno
xor
push
popf
sti
xor
or
ret
jle
and
repnz
movsl
mov
or
das
outsb
inc
daa
inc
and
sbb
in
dec
es
fstpt
int3
int
leave
jmp
xchg
cmp
test
cltd
sub
insl
shrb
xchg
aam
inc
mov
sub
jns
inc
jg
inc
movsb
pop
inc
add
dec
push
in
sub
lods
jbe
xchg
pop
sti
mov
pop
lea
add
inc
sbb
jnp
inc
lods
jno
mov
xchg
jae
xchg
arpl
cmp
sbb
sbb
les
sub
sbbl
les
addr16
add
std
jbe
pop
in
out
inc
lcall
insl
in
adc
inc
pop
movsb
pop
dec
xor
es
push
xlat
lahf
shlb
push
out
addl
or
inc
lret
sbb
fists
lahf
cmp
mov
movsl
dec
loopne
imul
sti
or
push
out
subl
aam
call
insb
xchg
sbb
mov
sub
xchg
fisubs
into
aas
adc
fmuls
orl
xchg
sbb
mov
adc
cs
inc
push
cltd
mov
add
ljmp
jns
pop
push
stos
jae
and
mov
dec
cmc
dec
jb
mov
xor
ds
outsb
xchg
inc
dec
lcall
pop
ret
or
sbb
setl
dec
mov
fisubs
mov
push
jnp
adcb
int
es
mov
dec
ja
pop
fdivr
xorb
mov
pop
adc
mov
mov
or
popf
add
bound
dec
jb
jge
push
lock
cmp
call
xchg
in
pop
jb
movsb
imul
in
cltd
dec
cmpl
fs
es
into
rolb
sub
pop
lret
mov
out
outsb
in
mov
test
out
fbld
mov
inc
nop
xchg
or
pop
mov
es
adc
mov
cmp
fwait
inc
add
sub
mov
stos
ja
inc
test
out
in
add
fists
fisubrs
ss
das
daa
mov
mov
or
test
fwait
movsb
sbb
and
xchg
sub
mov
mov
sbb
or
lahf
adc
sbb
mov
fs
in
jg
popa
and
adc
cmpb
lahf
mov
repnz
inc
sub
lcall
shlb
sar
bound
sti
mov
dec
nop
ljmp
pusha
sahf
lods
daa
gs
lea
and
add
cmp
adc
leave
lea
inc
sub
int
jae
sbb
fs
push
jbe
pop
sahf
fcompl
ss
jge
imul
push
adc
adc
adc
in
insl
cmp
fisubs
sahf
dec
cs
pushf
cmp
pop
xchg
shrl
nop
pop
xorl
pop
aas
imul
push
sub
lahf
sti
nop
adc
pop
ficomps
pusha
out
fs
jp
dec
roll
dec
mov
out
enter
rol
popa
push
nop
or
pop
das
mov
add
push
push
aaa
insl
sti
test
pop
outsl
and
push
imul
push
mov
cmpsb
jle
fisubl
daa
jno
sbbl
xchg
push
int
pop
push
sub
xor
in
inc
outsl
mov
mov
bound
sbb
mov
xor
insb
bound
out
fwait
push
adc
inc
mov
adc
add
ja
out
lea
xchg
push
ret
hlt
lods
cmpsl
or
mov
pop
lock
sbb
sub
jb
jl
xlat
jmp
cmpsb
inc
xchg
adcb
test
arpl
hlt
inc
inc
xchg
sbb
sub
ds
inc
and
adc
adc
aaa
cmp
jnp
mov
test
inc
dec
push
imul
fisubs
fidivrl
push
lock
push
jmp
bound
scas
popa
arpl
aam
fwait
xor
add
pop
subl
jmp
stos
inc
add
xchg
add
pop
sub
or
faddp
mov
cmp
lea
push
mov
xchg
inc
push
push
scas
push
sub
sub
pop
inc
stos
loop
cmpsl
adc
sbb
std
add
in
pop
xchg
push
jecxz
into
dec
into
cmp
sub
imul
push
addr16
sbbb
xchg
mov
shrl
testb
xor
jecxz
or
outsb
lret
xor
cmpsb
in
lcall
pop
cmpsl
addr16
adc
lds
sbb
pop
fidivrl
mov
inc
iret
xchg
pop
or
dec
cmpsl
push
lahf
lods
imul
out
sbb
jmp
push
pop
sti
scas
repnz
in
in
gs
inc
divl
rcl
cltd
popa
cwtl
out
sub
mov
inc
push
push
mov
iret
int
sbb
push
mov
nop
dec
xlat
sbb
or
push
popf
xchg
lods
enter
adc
push
jecxz
imul
es
mov
jae
jbe
mov
add
outsb
aaa
in
loopne
pop
popa
shll
ss
mov
mov
mov
pop
test
ret
jecxz
cmp
mov
mov
or
daa
push
or
in
pop
movsl
fildll
pop
sti
imul
xor
and
in
mov
dec
rcrl
movsl
or
mov
jb
jb
int
inc
ror
lods
js
inc
fisttpll
ret
lret
xchg
bound
mov
es
loopne
and
push
xor
arpl
loope
les
adc
out
bound
addr16
jmp
out
push
dec
lcall
testl
xor
loope
aam
cmpsl
mov
movsl
xchg
or
xchg
mov
mov
mov
addl
jmp
lahf
inc
mov
sbb
arpl
mov
std
in
movsb
jns
fisttpll
sub
xor
gs
xor
add
mov
dec
and
mov
jl
sub
inc
or
pop
cltd
rolb
shl
push
jae
cwtl
push
addr16
mov
dec
add
xchg
add
sub
xchg
push
addr16
outsl
sbb
jg
movsl
idivl
scas
repnz
pusha
xchg
test
stos
mov
ret
jecxz
push
dec
popf
mov
fiadds
or
orb
and
push
mov
mov
adc
hlt
inc
mov
sub
out
jecxz
shrb
inc
pusha
xchg
adc
sti
cmpb
inc
mov
xor
mov
arpl
dec
push
daa
xchg
push
pop
sbb
xor
loope
pop
aaa
insb
repnz
jbe
and
sbb
mov
stos
xlat
inc
xchg
out
aaa
xchg
decb
mov
mov
popf
xor
sahf
loop
arpl
lock
pop
adc
cli
jp
lock
in
dec
mov
xchg
arpl
pop
cmpsl
push
push
jecxz
lods
inc
cmpb
pop
repz
cmc
and
and
inc
arpl
out
scas
mov
xchg
les
adcl
pop
mov
add
jae
xor
xor
bound
mov
pop
aaa
test
insl
andb
and
loop
in
adc
popa
bound
mull
ds
jb
mov
mov
stos
and
cs
loope
mov
inc
adc
stc
ljmp
push
jo
es
or
mov
int3
lahf
add
sub
sbb
movsl
jl
xor
xor
cs
loop
inc
jge
iret
and
or
loopne
ret
adc
and
sbb
add
js
lock
aas
pop
push
lcall
or
xchg
cmp
stc
push
adc
cmpsl
mov
pop
daa
push
jg
mov
mov
movsl
push
faddl
push
dec
pop
test
in
fdivl
push
lock
cmp
push
pop
mov
xchg
add
xor
lcall
inc
and
dec
add
imul
sub
nop
add
cld
xchg
addr16
inc
cli
pop
lds
push
jo
adc
jnp
and
xlat
xchg
xor
int3
jne
xlat
mov
jno
xchg
jge
lret
ret
imul
pop
mov
xlat
shl
std
push
jb
xchg
jl
mov
adc
test
mov
fldt
lahf
xor
and
pop
inc
int
xor
xchg
cmp
stos
arpl
imul
scas
mov
lahf
xchg
dec
push
stc
repz
mov
in
and
daa
rcll
push
xchg
ret
data16
cmp
dec
ja
pop
inc
mov
out
and
xor
aam
add
jp
mov
cmp
test
ret
insb
daa
push
and
xor
jns
mov
mov
or
rolb
cs
imull
dec
popf
push
iret
pop
jb
outsl
push
inc
cmc
xchg
adc
pop
aaa
ds
je
fs
cs
repz
sbb
fbld
xor
xlat
mov
shlb
ss
test
pop
cmpsl
or
mov
or
jmp
or
es
add
cmpsb
mov
ss
mull
mov
sub
jb
inc
push
inc
dec
jge
add
adc
nop
pop
fisubl
xchg
xchg
cwtl
xchg
mov
cmpsl
lea
inc
mov
and
mov
dec
imulb
mov
std
jg
cmp
aaa
jg
jmp
movsb
mov
jmp
mov
cmp
ret
xchg
je
xchg
push
push
xor
adc
or
cwtl
sbb
out
mov
push
inc
cli
rclb
inc
xor
jle
out
mov
pop
jmp
in
enter
push
sub
pop
stos
xchg
mov
rcrl
mov
repnz
adc
fwait
aam
pop
lahf
push
pop
xchg
mov
je
test
sub
add
mov
test
xchg
and
inc
shlb
sub
loopne
sub
pop
cld
pusha
imul
lods
lods
ja
dec
xchg
adc
and
pop
sbb
leave
and
call
pop
loop
inc
push
imul
mov
dec
daa
mov
imul
fistps
sbbb
lcall
lcall
cmp
out
cwtl
test
je
rcll
nop
fwait
dec
popa
adc
into
add
xor
cs
nop
jnp
jno
pop
inc
and
mov
mov
gs
jl
and
insl
and
pop
pop
out
pop
sub
mov
xchg
lock
es
adc
mov
iret
xor
dec
push
xchg
daa
jb
or
aam
cmp
mov
test
sub
movsb
int3
fisubrs
pop
aas
and
pop
mov
mov
ljmp
pop
scas
mov
repnz
out
pop
roll
pop
xchg
sbb
adc
push
test
movsl
push
push
pop
sub
and
jmp
fisubrl
fimull
fsubl
and
mov
mov
sbbl
xrelease
scas
sub
push
adc
mov
pop
andb
test
sbb
push
or
cmp
addb
clc
rclb
add
popl
outsb
add
inc
and
pop
insb
mov
cmp
inc
cmp
lret
pushf
and
gs
adc
mov
mov
jb
shlb
sti
push
in
adc
cld
in
sbb
icebp
shl
push
daa
pop
pop
sub
pop
cmp
sub
fistpl
int
and
aaa
rol
jl
jno
imul
aas
xchg
push
mov
inc
adc
stos
icebp
cmc
xchg
popa
and
das
movsl
push
stc
adc
sub
nop
popa
inc
in
jb
fstpl
out
aad
add
mov
xchg
mov
out
or
ljmp
add
jge
repz
imul
mov
mov
cmp
lds
mov
popa
push
cmp
fwait
pop
fs
testb
push
out
push
icebp
inc
cltd
push
pop
imul
shlb
cmp
jbe
dec
pop
mov
xor
and
shrl
loopne
pop
scas
sbb
mov
and
mov
inc
push
inc
lock
out
cmpsb
xchg
sub
mov
leave
and
je
in
js
and
pop
mov
call
inc
aas
insb
test
jmp
push
xchg
imulb
cmp
and
out
inc
in
mov
test
mov
sbb
sub
roll
ror
mov
aam
lcall
cltd
add
xor
sub
movsl
mov
hlt
ljmp
lahf
inc
mov
pop
pop
jns
leave
cmp
jae
gs
fisttpl
in
pusha
sub
xor
add
or
iret
popf
sbb
call
dec
push
cmc
jmp
divl
xchg
mov
push
adc
push
dec
cmpsb
sarl
xchg
adc
mov
adcl
movsl
je
scas
inc
popa
test
lds
cmpsl
mov
mov
outsl
clc
or
stos
out
xchg
imul
data16
pop
addr16
xor
sahf
dec
add
enter
dec
mov
sahf
dec
pop
clc
and
sbb
push
outsb
loope
loopne
pusha
sarb
aas
push
push
push
rorl
scas
rol
call
xor
push
inc
data16
adcb
cmpsl
daa
fists
leave
xor
test
mov
inc
cmpsl
mov
mov
testb
mov
pop
es
cli
adc
xchg
movsb
and
mov
in
jbe
xor
rolb
dec
dec
add
std
mov
imul
jp
or
sub
out
les
mov
aas
ja
xchg
lcall
mov
movsl
loopne
jp
push
sub
pop
adc
mov
imul
pop
stos
dec
pop
xchg
or
ret
insb
ret
adc
jb
and
addb
mov
outsb
and
andb
in
iret
decb
mov
jbe
adc
loop
pusha
dec
mov
add
pushf
jb
push
cmp
loopne
xor
push
add
mov
mov
push
outsl
and
cmpsl
bound
aam
cmp
jmp
xor
hlt
fadds
jecxz
and
pop
hlt
mov
repnz
add
pusha
push
or
jnp
out
cmc
xchg
dec
inc
push
and
iret
add
mov
pushf
hlt
sbb
add
fistpl
sbb
dec
sub
insb
aad
das
xchg
xchg
push
mov
mull
fsubp
fildll
loopne
jno
add
and
cmp
insl
aad
dec
pop
inc
xor
jp
inc
inc
gs
fs
in
movsl
ficompl
aaa
lcall
cmp
jbe
dec
sahf
test
pop
lock
sbb
ret
jl
xchg
arpl
negb
jbe
aaa
stos
rcrb
fbld
mov
test
mov
pop
push
sarb
cmp
int
test
stos
gs
mov
xchg
icebp
mov
dec
faddl
sub
fistpll
sahf
inc
mov
push
in
cmp
push
daa
aad
int
pusha
rcrl
daa
in
data16
addl
cmpsl
jl
pop
out
addr16
mov
push
jg
xor
dec
adc
xor
lar
in
mov
loop
pop
mov
push
sub
insb
adc
add
popa
pop
mov
stc
je
inc
scas
mov
arpl
aas
popf
xchg
add
add
xchg
xorb
adc
inc
sub
cmc
clc
mov
xchg
aam
adcl
jae
outsb
or
pop
pop
mov
repnz
addr16
xchg
pop
and
push
rcr
mov
ja
adc
ljmp
and
sub
sub
leave
dec
push
aam
pop
pop
fs
pusha
sbb
addr16
jae
mov
outsl
xchg
fbstp
mov
cli
dec
enter
adc
adc
pop
cmpsl
scas
fwait
adc
fidivrs
adc
sbbb
or
jge
iret
adc
jg
dec
add
inc
fs
push
stos
lret
push
mov
jno
outsb
inc
mov
bound
jecxz
xchg
mov
ficoms
xchg
fwait
imul
aaa
cmpb
bound
repz
xchg
rclb
fs
xlat
test
sub
xor
pop
in
xor
cltd
xor
sub
pop
addb
push
mov
dec
push
fstpl
push
pop
or
movsl
or
jle
push
sbb
mov
xchg
loop
add
scas
lret
rorb
aaa
pop
and
dec
sarl
mov
enter
ficompl
popa
daa
out
pop
jmp
cld
das
data16
push
lods
push
inc
je
lcall
je
test
push
and
fbld
idiv
push
jl
aam
jne
imul
scas
lret
or
into
cmp
cmpsb
add
sub
and
push
arpl
sub
mov
pop
test
movsb
jo
je
or
shrb
sub
mov
repnz
lahf
inc
xchg
pop
mov
test
jl
fwait
sbb
sub
xor
and
mov
bound
sbb
dec
loopw
outsl
pop
push
xor
call
cltd
jo
add
inc
ficompl
sar
pop
nop
cltd
xor
cmp
dec
cwtl
sub
inc
jmp
or
mov
xor
roll
dec
shlb
push
xor
repnz
lahf
xorl
outsb
jne
mov
shll
out
addr16
pop
shll
xor
pop
mov
imul
daa
push
jp
ljmp
sub
cmp
add
cli
inc
loopne
cmp
dec
std
pop
pop
or
es
pop
out
pop
shl
sub
movsb
or
xchg
out
addr16
adc
pop
cmp
loope
sarl
lods
mov
out
and
cli
in
andb
mov
rcrl
pop
aad
adc
mov
hlt
jns
test
out
pop
jb
daa
lods
xchg
ja
push
lock
test
bound
jno
mov
xchg
addr16
sub
lea
mov
ficoml
sti
xchg
scas
inc
sbb
addr16
mov
data16
add
jge
out
add
cmpsb
cmp
leave
mull
mov
int3
xor
in
jo
sbb
addr16
int3
pop
add
push
xchg
fwait
jno
cmpsl
sub
in
push
mov
or
jo
cli
addr16
and
xchg
pop
inc
push
subl
and
out
jl
mov
inc
jne
xor
loope
dec
sub
pushf
insb
mov
mov
mov
lahf
mov
ss
and
insl
loope
dec
cmp
inc
mulb
cmp
je
jbe
insl
adc
and
out
hlt
lcall
mov
dec
cmpb
lods
cmpsb
test
int
mov
pushf
cmp
inc
sbb
imul
shlb
rcrb
gs
movsl
jmp
jb
popa
fs
xlat
xor
fistl
lcall
dec
xor
repz
pop
or
sahf
popf
lahf
fcoml
loop
fidivrl
mov
pop
pop
sbb
fs
and
andl
cmpsl
repnz
sarl
pop
push
vpcmpgtd
cmpsl
jp
cltd
push
nop
cmp
aaa
pop
and
decl
das
or
fst
mov
and
and
xchg
pop
xchg
inc
in
stos
ss
sbb
push
hlt
movsb
push
sbb
out
mov
pushf
aad
sub
movsb
call
insb
into
mov
and
mov
dec
and
sub
dec
js
jp
aad
out
jl
in
and
subl
mov
mov
bound
jl
mov
push
sub
fucomp
cmp
movsb
mov
sbb
mov
outsb
adcl
shlb
les
fidivs
lcall
repz
cmpb
clc
xchg
jbe
lea
pop
and
fistpl
in
adc
jno
sub
sub
xor
shrl
push
or
xor
xchg
movsb
xchg
repz
xor
je
movsl
add
adc
fldcw
sub
in
push
fildl
xor
sahf
mov
cmpsl
das
jecxz
cwtl
push
adc
sbb
shlb
sub
shl
adc
test
xor
mov
pop
popf
push
dec
pop
ret
xchg
and
push
andb
adc
xchg
out
cmpsl
mov
cmc
xchg
xchg
inc
jle
push
repnz
in
sub
and
jle
outsl
or
jl
popa
pop
addb
xlat
lahf
call
dec
and
pushf
pop
jns
lcall
push
repz
cs
out
xor
addr16
inc
push
jne
out
add
imul
push
jmp
cli
sub
adc
movsb
mov
add
jae
mov
les
rol
shlb
imull
lods
loope
repnz
mov
or
jnp
jno
mov
lock
in
loop
cli
pop
mov
insl
cltd
test
outsb
or
ss
addr16
xchg
jecxz
push
daa
mov
and
jo
movsl
mov
int3
and
xchg
pop
leave
aad
sub
ret
xchg
mov
fstpl
lds
sti
xchg
cli
filds
fwait
lret
pop
cmp
bound
inc
sbb
mov
inc
inc
je
sbb
lret
in
imul
std
xor
lret
lds
mov
gs
leave
lods
aam
nop
push
in
cmpsl
dec
movsb
gs
mov
test
pop
js
push
jne
jmp
lahf
movsb
and
call
insl
sahf
rcll
testl
fsts
adc
xchg
fistps
cmp
xor
gs
or
push
imul
push
xchg
or
jo
rcr
jg
sub
mov
out
xor
and
sub
dec
or
xlat
mov
shlb
outsl
sub
cwtl
pop
call
push
lahf
inc
xchg
call
and
imul
jle
push
lcall
dec
lods
mov
ret
int3
fsubl
mov
or
xchg
mov
jnp
xchg
jle
push
subl
pop
inc
clc
sbb
xlat
mov
jno
mov
pop
pop
lret
movsb
dec
dec
push
fadds
lahf
popa
cmp
or
mov
fwait
cmpsl
mov
cltd
popf
sub
inc
jo
pusha
pop
subb
lds
pushf
fnsave
push
out
jno
rcrb
mov
pop
or
dec
lcall
mov
inc
jecxz
push
aaa
outsl
pushf
add
dec
mov
test
mov
sub
ret
ljmp
negl
testl
enter
dec
ss
xchg
aad
add
ret
test
adc
repnz
lods
mov
jnp
inc
dec
push
data16
pop
mov
insb
dec
insl
outsb
jle
push
xor
push
bound
and
sub
movsl
push
and
sbb
mov
push
shr
das
xor
sbb
push
sbb
arpl
jge
ja
outsl
ljmp
enter
fs
lods
push
push
daa
adc
mov
and
xchg
ja
or
rolb
adc
in
out
jno
mov
xchg
push
enter
call
cwtl
push
xchg
sbb
sahf
enter
imul
mov
repnz
or
push
mov
sub
repnz
adc
syscall
mov
sub
aaa
xchg
in
push
xchg
call
mov
out
pop
pop
cmpsb
shll
dec
insl
cmpsl
mov
test
push
cmp
or
adc
pop
daa
inc
mov
popa
fdiv
mov
int
dec
push
xchg
imul
pop
mov
inc
fistl
fsts
push
push
daa
pushw
jl
sbb
mov
das
pop
or
mulb
repz
xor
loop
repz
jne
xchg
call
mov
aaa
data16
fidivs
fidivs
sbb
sbb
les
neg
sub
and
std
pop
xrelease
cmovo
je
jne
lods
adc
pop
push
dec
jbe
bound
negl
out
mov
mov
arpl
daa
fistl
xchg
pop
es
sbb
addr16
fcomp
fs
push
cmp
jmp
mov
pop
mov
pop
push
aaa
lock
mov
dec
cmc
push
js
sahf
push
adc
pop
addr16
loop
or
insl
out
mov
bound
in
xchg
xchg
and
jg
je
popf
inc
popa
dec
movb
xchg
popf
pop
xchg
ss
jo
jb
clc
pop
pop
fsubrs
out
aas
loop
add
repz
push
js
cmpb
adc
sarb
cmova
and
ret
xchg
adc
mov
mov
inc
push
push
hlt
sbb
mov
sbb
pop
ret
pop
xchg
std
aam
ds
stc
push
cmp
xchg
sub
scas
push
sub
fucomi
imul
iret
pop
pop
test
imul
out
imul
or
aaa
pop
pusha
icebp
pop
adc
add
add
sbb
add
aas
mov
sahf
fmull
inc
dec
mov
out
adc
mov
loope
mov
add
addr16
xchg
orb
scas
jecxz
lock
inc
ja
in
loop
into
sub
loop
lea
das
ret
mov
push
inc
imul
push
divw
rclb
push
fdivl
push
adc
sub
xor
movsl
outsb
and
pusha
or
movsw
push
fcoms
adc
pop
push
adc
fs
rcl
mov
int
pop
mov
adcb
cmp
repnz
test
inc
out
iret
bound
inc
pop
mov
xor
push
jo
xchg
loop
cmpsb
mov
cwtl
mov
add
repnz
xchg
jb
into
stos
dec
cwtl
inc
shll
push
leave
push
pop
sbb
movsb
mov
inc
dec
repnz
dec
es
clc
or
hlt
adc
aam
rcl
mov
bnd
jb
movsl
insl
les
xlat
fnsave
in
dec
cwtl
push
aaa
add
movsb
add
pop
cmp
xchg
dec
jle
or
push
mov
insb
sbb
cmp
test
int3
sbb
test
jmp
xchg
xchg
dec
aad
and
fisttpl
adc
enter
lret
lret
pop
rolb
shl
call
xchg
rcrl
mov
mov
push
ja
adc
jge
push
add
adc
test
ret
mov
jmp
es
fldt
and
and
mov
adc
int3
pop
repz
pop
pop
xchg
je
imul
inc
xor
leave
out
dec
pop
sbb
push
outsl
fsubl
popf
ret
outsl
movsl
pusha
bound
insl
and
or
push
pop
add
ret
mov
add
adc
es
sub
sub
addr16
xlat
es
inc
jo
pop
inc
xor
aas
push
mov
pop
mov
jns
fstp
xchg
push
insl
ljmp
push
int
std
and
fucom
sub
mov
xchg
pushf
sub
shll
xchg
pop
cs
cmp
mov
arpl
test
pop
sahf
stc
adc
mov
sbb
pushf
lahf
mov
pop
subb
mov
and
dec
outsl
leave
jnp
pop
daa
test
mov
sub
xchg
dec
dec
std
mov
ret
add
add
jmp
xlat
mov
pop
cltd
fwait
fs
pop
roll
sub
push
lret
jl
xchg
push
shll
mov
pop
in
pop
lods
or
aaa
stos
outsl
mov
outsl
inc
test
shrb
fs
push
sbb
test
in
jecxz
mov
in
jmp
adc
mov
xor
xchg
jmp
das
mov
fidivrl
out
subb
fists
push
xchg
leave
jp
xor
sbb
dec
pop
pop
add
in
sahf
jb
and
mov
add
mov
push
out
inc
xor
xchg
sbb
jno
sub
xchg
xchg
xor
jo
sbbb
daa
hlt
pop
in
leave
jnp
adc
cmp
cmp
sub
mov
xchg
icebp
mov
leave
scas
push
nop
or
pop
imul
inc
and
in
mov
mov
or
fwait
or
fistpl
cmpsb
jae,pt
xor
andb
or
call
stc
call
fsubl
push
scas
popa
xor
xor
sub
fldt
hlt
inc
stos
mov
arpl
inc
mov
xor
xchg
mov
sub
and
jle
push
call
cmpsl
or
xchg
int3
cmc
cmp
and
xor
bound
inc
cltd
movsb
cmp
and
xor
and
push
aam
scas
shll
sub
mov
repnz
xchg
pop
out
test
xchg
jmp
lahf
push
push
and
sbb
hlt
js
pop
lods
cmp
xchg
hlt
arpl
cmpsl
inc
or
cmpsl
fcom
push
mov
sbb
daa
arpl
out
and
nop
imul
or
inc
adc
inc
fs
test
mov
mov
and
push
inc
pop
xchg
mov
mov
pop
adc
and
lahf
sti
lahf
push
cmc
fsubrs
lret
cmpsl
in
adc
movl
mov
cmpsb
adc
jg
jnp
loope
xchg
pop
xchg
jmp
inc
dec
es
pop
cmp
adc
jecxz
inc
adc
std
jns
xchg
leave
sub
shl
test
dec
sbb
cwtl
imul
idivl
fwait
mov
cmpsl
fists
shll
aad
outsb
push
sbb
pop
adc
sub
push
test
sub
lret
hlt
pushl
out
out
daa
adc
fstpl
imul
aaa
sub
pop
sbb
bound
sub
pop
push
cmc
outsb
rcl
and
call
insb
inc
dec
out
cmpsl
xchg
cmpsl
cmpsb
pop
out
cltd
stc
sbb
push
insl
pop
in
xchg
mov
mov
bound
in
xchg
push
dec
dec
or
mov
or
and
xorb
loope
jmp
imul
jns
jae
mov
cmpsl
adc
pop
cwtl
add
or
adc
xchg
aam
data16
pop
ret
es
dec
sbb
sbb
add
adc
outsb
push
out
push
repnz
jbe
lods
lret
jnp
or
test
in
loope
dec
mov
scas
lcall
xchg
mov
das
push
cmp
lds
ret
cmpsb
call
inc
push
daa
dec
outsl
aad
cmc
iret
lret
iret
or
and
nop
insl
rcll
imul
push
outsl
lahf
into
cli
std
pop
shlb
test
sub
les
or
add
leave
adc
push
adc
stos
pop
cmp
mov
jnp
or
jns
mov
pop
cmp
rorl
nop
and
jge
mov
xchg
movsb
sub
mov
add
sub
rcrb
sarb
jne
sti
gs
daa
jmp
int3
test
pusha
push
dec
mov
lahf
out
out
aaa
add
rclb
int
cld
inc
test
in
sub
xorb
movsb
sbb
xlat
fstpl
dec
stos
adc
test
pop
xchg
and
ja
mov
sub
sub
aam
repz
inc
hlt
aaa
or
mov
fidivs
sbb
pop
in
sub
jge
mov
cs
mov
lock
cmpl
or
adc
push
fwait
jno
inc
adcl
mov
mov
pop
pushf
fnstcw
sub
mov
add
inc
sbb
pusha
mov
dec
mov
lds
aaa
and
push
loopne
mov
xchg
jne
and
or
and
pop
push
scas
jmp
jp
jecxz
das
fidivl
cmpsl
mov
imul
nop
inc
mov
arpl
xchg
mov
into
addl
adc
and
xchg
mov
push
hlt
test
ljmp
fwait
sub
dec
into
notb
cmpsl
mov
mov
cs
notl
lret
xor
sti
lcall
mov
mov
je
mov
pushf
scas
stos
inc
jp
xchg
cvtps2pi
push
ja
dec
inc
mov
mov
hlt
pop
xor
dec
sub
jne
fs
pop
sbb
cli
mulb
add
out
mov
nop
mov
adc
jns
dec
scas
repz
imul
push
sarl
jb
pushf
int3
mul
into
sqrtps
movsl
and
xchg
lock
mov
jbe
movsb
cmp
pop
adc
lret
sub
adc
data16
cmpsl
jmp
jns
cld
in
mov
jo
add
in
ljmp
xchg
push
loop
fldln2
and
je
in
push
jl
pop
mov
mov
les
out
pop
sub
mov
shl
test
adcb
lock
mov
cltd
mov
cld
xchg
in
and
pop
sub
push
add
adcb
out
rclb
push
push
je
rclb
inc
push
adc
xor
daa
push
call
nop
mov
les
adc
jb
insb
inc
enter
insb
ds
lret
jbe
mov
dec
add
lods
cmp
shll
data16
xlat
outsb
xor
dec
imul
or
fwait
xchg
sub
mov
and
aad
movsb
or
ds
push
rorl
inc
sub
ret
lahf
out
mov
lret
aaa
cltd
and
xchg
inc
outsb
std
std
xlat
or
and
shr
or
xor
add
ljmp
lds
ret
jge
xor
inc
xchg
and
xor
cwtl
pusha
sar
decb
mov
and
pusha
int3
mov
jno
inc
pop
movsl
jle
lds
sbb
mov
fcmovnu
repz
xchg
jne
lret
cltd
mov
scas
and
rcr
loop
mov
or
neg
xchg
bnd
sub
addb
mov
fmul
into
arpl
call
stc
mov
fistl
test
andl
push
es
or
sbb
cmp
pop
shrl
dec
pop
xchg
add
es
inc
xchg
das
movsw
rclb
mov
ja
mov
hlt
jge
jnp,pt
dec
xchg
xchg
mov
popa
arpl
sub
clc
je
sub
ror
arpl
aaa
cmp
clc
pop
std
jbe
dec
adc
push
adc
test
or
add
std
addr16
xor
xchg
repz
movsl
popf
jmp
cs
mov
xor
ucomiss
lahf
mov
cmpsl
pushf
pushf
std
inc
pop
pushf
aaa
push
imul
adc
sbb
or
sub
mov
jge
ret
mov
movsl
pop
pop
xchg
and
xchg
fdivrl
xor
mov
movsl
daa
mov
cmp
sarl
pop
mov
lret
xchg
sbb
mov
push
pop
sahf
test
ret
sti
mov
loop
mov
mov
jb
push
xor
bound
mov
push
sbb
inc
out
sbb
pop
inc
js
mov
push
or
das
ret
and
mov
in
outsb
xor
inc
mov
loopne
movsb
enter
mov
inc
sti
sbb
ret
fucomip
mov
in
lea
fimull
inc
ret
cmp
or
daa
pop
cmpsl
enter
xor
cmc
xor
fsubrl
and
adc
bound
lahf
ja
mulb
add
mov
addl
jecxz
jmp
xchg
arpl
xchg
inc
stos
stos
jae
out
mov
add
clc
nop
les
out
and
mov
dec
lahf
rorb
xor
cmpsl
jae
mov
push
loop
cmpsl
cs
pushl
cs
je
das
cmp
rcrl
dec
movsl
clc
mov
jg
fcomps
pop
or
insb
push
push
pop
movsl
cmp
shrb
pop
mov
inc
stos
inc
xor
mov
cs
jg
outsb
aad
xor
inc
push
lret
jb
sbb
pop
aaa
inc
shrl
fisttpl
xor
sti
xlat
xchg
sub
cmpl
ds
cwtl
repz
outsl
cmc
inc
mov
mov
fcomps
xchg
pop
out
and
pop
mov
or
sub
out
pop
pop
sahf
std
fsts
sub
or
das
fnstsw
jge
xchg
gs
cmpsb
mov
xchg
adc
mov
xchg
aam
shlb
cmc
mov
and
xchg
jge
pop
lock
mov
pop
scas
mov
xchg
and
sub
mov
push
cmc
xor
in
jecxz
jae
mov
mov
inc
cmp
imul
lret
in
inc
xchg
and
and
sbb
xchg
lds
test
push
xchg
inc
out
xor
stos
mov
mov
sub
je
jge
icebp
mov
arpl
addr16
push
and
and
outsl
xor
cwtl
pop
int
daa
push
mov
aam
cwtl
mov
cmp
cld
jo
inc
pusha
rol
das
lods
pop
xlat
jge
hlt
cmpsb
test
out
jp
and
mov
or
cltd
loop
jnp
mov
subb
push
in
int3
inc
imul
ja
pop
jmp
jg
adc
mov
test
sub
inc
push
lods
push
pop
sbb
test
test
cltd
test
push
ss
pop
push
cmp
sbb
repz
sbb
or
bound
pop
rclb
or
or
data16
imul
push
push
fisubs
cmp
outsb
adc
pop
cmp
in
jl
mov
ret
in
push
inc
in
or
dec
inc
pop
xor
sarl
call
or
out
or
gs
into
mov
daa
xchg
pop
adc
in
jne
cwtl
add
dec
jmp
daa
adc
pop
xchg
fucomip
lret
push
into
inc
mov
and
mov
add
imul
ficoml
ffreep
dec
test
test
roll
or
and
or
in
and
xor
cmpsl
ret
aaa
pushf
pushf
dec
adc
nop
int3
inc
loopne
mov
or
rorw
fsts
rorb
sub
lcall
shlb
out
or
out
adcb
mov
xchg
sub
rorb
pop
jg
adc
add
mov
into
push
push
add
dec
add
popf
popf
aaa
inc
ret
outsb
xor
pop
xchg
ja
rcll
imul
add
aad
jb
xchg
mov
fs
lods
sbb
hlt
jp
lods
sub
sub
jbe
stos
dec
mov
pop
adc
repnz
scas
out
ss
and
push
or
mov
lret
cmp
dec
jmp
fs
es
inc
sub
push
xor
repz
cmpsb
mov
jle
xchg
pusha
push
cmpsl
pusha
push
pop
aam
pop
add
mov
hlt
jae
nop
out
push
bound
daa
xchg
cltd
popf
jno
in
pop
out
jl
adc
jmp
aas
add
dec
cltd
insl
pop
daa
jno
jnp
cmp
jl
xchg
jo
jecxz
jle
xor
cmp
mov
fwait
cmp
test
pop
pop
pop
out
push
and
cltd
lret
movsl
adc
lahf
jne
outsl
mov
jno
int3
push
jbe
jle
xor
pop
insb
movsb
mov
and
lret
inc
jl
lods
cmp
hlt
mov
mov
cs
mov
push
pop
imull
xorb
das
adc
out
call
push
aad
daa
mov
fwait
pop
jg
mov
mov
into
push
aaa
inc
and
jg
inc
push
cld
pop
in
push
cmpsl
cmp
js
or
or
mov
movsb
clc
inc
mov
orb
rolb
ret
popa
lods
sbb
add
pop
adc
movsl
jg
ret
jl
push
lea
mull
xchg
cmp
cmp
stc
cmpsb
sti
xor
shlb
fists
sub
cltd
xor
jns
jne
mov
and
in
sub
fadd
movsl
push
out
subl
shrb
mov
push
mov
movsl
or
test
stos
push
mov
repz
push
ja
sub
jno
xchg
mov
inc
insl
adc
stos
roll
lahf
pushf
inc
daa
mov
loop
pop
sub
icebp
insb
and
mov
pop
testl
es
pop
ja
mov
cs
sbb
stos
lods
sahf
mov
ja
dec
jl
mov
sbb
sub
repnz
mov
and
cld
es
ret
daa
std
adc
xchg
push
mov
adc
clc
outsb
pop
ja
sub
cmp
xchg
movsl
mov
xchg
daa
inc
dec
int
push
repnz
xor
jg
add
jno
inc
push
int
adc
adc
inc
in
loopne
movsb
aaa
int3
add
std
push
daa
push
jmp
popf
push
xor
daa
inc
pop
and
in
fdiv
pop
std
inc
test
jmp
add
sub
jns
mov
inc
pusha
cmpl
push
cmc
xor
rcrl
adc
or
test
ret
in
cwtl
cwtl
sub
jae
scas
sbb
test
mov
stos
and
jb
fs
mov
arpl
int3
adc
pop
xor
push
jbe
ficoms
xor
fistpl
push
movsb
xor
hlt
aam
push
cmpsl
icebp
xchg
mov
cmc
mov
adc
push
mov
mov
icebp
ret
add
and
inc
mov
insl
roll
xchg
cwtl
imull
xor
ja
xlat
push
and
xchg
or
jmp
movsl
test
lods
cmp
or
jno
xchg
and
and
daa
add
pop
mov
sub
xchg
add
pop
xchg
cmp
push
into
adc
adc
hlt
sahf
push
je
lahf
push
std
test
mov
jle
sbb
push
pop
mov
sbb
add
push
jbe
inc
fists
xchg
add
ss
je
loope
aad
jo
icebp
dec
add
sbb
inc
ficompl
adc
js
sti
mov
mov
or
inc
fs
sub
iret
push
out
dec
es
daa
repnz
and
popa
mov
adc
cmpsl
sbb
dec
cmc
sub
push
andb
adc
or
outsb
lea
addb
fisttps
mov
or
hlt
xorl
mov
mov
pop
push
or
es
lds
xchg
ds
jge
ficoms
xchg
in
xchg
xchg
mov
and
into
push
shl
jle
fisubs
and
push
pop
negl
sahf
test
pusha
adc
imul
mov
xchg
enter
push
inc
rclb
je
dec
loope
mov
daa
das
cmc
in
xor
addr16
adc
pop
sub
sti
imull
add
push
bound
cmpsl
xchg
movsb
jmp
add
clc
cmp
es
jmp
sub
fdivl
fs
ja
fistps
push
cli
pushl
sbb
push
xchg
cmpsb
inc
add
mov
shll
ja
mov
popf
ret
ret
ja
cmp
popf
scas
notb
mov
push
movl
cltd
test
into
xchg
jnp
lods
adc
xorb
movsb
je
cld
and
or
insb
xor
add
cmp
movsb
cmp
imul
adc
sub
cmpsl
enter
iret
jl
mov
shlb
pop
push
xor
fsubl
mov
sub
and
jle
outsl
inc
cs
dec
xchg
cltd
stos
rcl
rcrb
push
fcmovnu
inc
add
and
outsb
lret
mov
mov
das
jo
and
jb
adc
jg
notb
mov
mov
mov
scas
xchg
pop
fidivl
mov
jo
dec
mov
fldt
xchg
sub
les
mov
and
add
and
xchg
xor
add
popl
test
inc
jbe
pushf
mov
rcr
push
sbb
pop
cli
daa
mov
push
push
mov
push
scas
mov
daa
pop
push
push
ljmp
rol
movsl
bound
adc
popf
mov
mov
xchg
sbb
xor
inc
mov
mov
adc
int3
lcall
or
sub
scas
xchg
inc
mov
mov
test
xor
xlat
jmp
push
inc
dec
mov
and
ffree
js
leave
push
dec
mov
xor
mov
mov
or
cs
aas
jo
push
push
ljmp
movsl
mov
xchg
push
movsb
stos
mov
in
adc
ret
das
stos
adc
jle
ljmp
jae
inc
je
jnp
pop
sub
imul
js
pop
icebp
out
jecxz
mov
xchg
cmc
xchg
sub
push
out
or
call
cmp
sub
and
lods
jp,pt
sbb
rclb
xchg
fs
sub
jns
aad
out
sub
or
mov
mov
pop
insl
and
xlat
adc
shrb
shl
popf
lret
loop
push
pop
push
push
push
push
aas
pop
les
test
imul
mov
cmp
notb
mov
daa
adc
sub
inc
popa
sub
add
ss
xchg
or
push
mov
pop
cmpsl
sbbb
enter
daa
sub
xchg
shrl
repz
int3
lret
or
jl
out
cwtl
les
sub
jl
repz
push
out
imul
rclb
sahf
mov
and
cld
adc
clc
pop
rorl
fwait
mov
pushf
pop
ja
es
sub
jb
and
jb
fwait
rclb
jmp
mov
add
or
jmp
lds
movsb
xor
push
andb
popa
ljmp
add
inc
mov
inc
imul
rorl
jmp
mov
inc
push
pop
xor
pop
ja
xor
arpl
pushl
pop
imul
adc
jp
and
xor
xor
push
adc
or
xor
and
push
test
inc
int3
int
fistl
bound
mov
sub
mov
push
pop
imul
movb
mov
jg
or
mov
sbb
iret
and
cs
hlt
push
notl
imul
dec
xchg
fisttpll
add
and
fstps
mov
shrb
fs
subb
cmp
incb
aam
cmp
arpl
aam
adc
inc
push
and
mov
fdivp
lock
cmpsl
mov
fidivrl
jno
es
jecxz
cltd
inc
xchg
cmp
bnd
les
pop
inc
fnop
cmp
or
daa
mov
cwtl
outsb
aam
shrb
pop
dec
nop
push
pop
daa
out
push
dec
jae
movsb
cmc
sub
mov
sahf
ljmp
dec
call
loop
data16
dec
faddl
arpl
push
mov
push
push
rolb
loope
lods
addr16
fs
addr16
addr16
and
push
outsl
jb
cli
mov
jb
jg
stc
popf
scas
out
sahf
mov
and
add
lds
incb
mov
inc
subb
pop
test
repz
mov
into
es
inc
push
imul
and
jmp
inc
out
negb
jp
bound
pop
insl
sbb
sub
jb
std
aaa
adc
push
adc
ficoms
loope
gs
cmpsl
or
imul
or
notb
loop
rcr
jno
pop
cmpsl
jmp
loopne
sti
scas
loop
cwtl
fsts
mov
nop
jl
xlat
push
into
outsl
enter
mov
fwait
push
cmp
cmp
push
movb
push
addr16
inc
movsb
adc
addr16
and
or
stos
pop
inc
lcall
loopne
mov
cmp
fs
jmp
inc
aaa
movsl
mov
fimuls
lods
xor
cli
push
daa
daa
in
fsubl
lahf
test
mov
and
xlat
jb
or
ja
loopne
pop
data16
test
lods
aad
jp
push
outsb
insl
bound
push
lds
test
sbb
sti
xor
repz
sahf
mov
inc
inc
push
fwait
ret
jns
ljmp
adc
cwtl
xchg
sahf
adc
idivb
subb
sbb
movsb
aam
test
push
mov
ss
xchg
xchg
mov
sub
dec
enter
dec
daa
ja
bound
jno
sub
daa
sub
or
push
sti
sbb
hlt
dec
cwtl
push
mov
xchg
or
cmc
orb
arpl
sub
rep
loopne
sub
dec
fs
add
out
or
adc
lahf
jo
xlat
jle
cmpsl
or
incb
xchg
out
add
xor
rolb
mov
push
or
sub
fistl
inc
xlat
pop
fbld
xchg
pop
sub
pop
pop
push
ja
sbb
sbb
movsb
sub
mov
dec
enter
xor
cli
adc
test
jmp
in
scas
mov
punpckldq
push
add
nop
xchg
imul
cmpsb
out
int
outsl
fisubrl
add
pop
sbb
bound
in
imul
xchg
xchg
push
out
cmp
sub
insl
mov
shlb
stos
or
mov
add
dec
jl
pop
addr16
out
int
xchg
lods
xchg
jo
fcomip
jns
xlat
push
leave
jo
pushf
push
insl
movsb
sub
into
xchg
repz
and
add
lock
push
in
fs
in
jp
xchg
js
sahf
mov
push
xor
hlt
sub
addr16
adc
sti
add
fs
pop
sub
xchg
incl
mov
jnp
add
int3
mov
xchg
enter
add
sbb
inc
mov
leave
adc
inc
popa
xchg
scas
adc
daa
or
les
cmpsb
push
or
cmp
rcrb
push
cmp
sub
roll
push
xor
jno
lds
mov
stos
xchg
jns,pn
shlb
xor
pop
out
es
rcrb
cmp
and
div
xchg
inc
and
gs
dec
jae
jbe
jp
arpl
test
shr
push
data16
in
addr16
ljmp
fildll
xchg
movsb
and
aaa
adc
or
lock
xchg
inc
rorb
push
sahf
dec
movsb
mov
fucom
xchg
repz
jle
xchg
xchg
sub
push
sub
orb
test
cld
cmp
sbb
ja
push
mov
dec
aad
dec
xor
mov
pop
inc
pop
push
mov
out
stc
cltd
xchg
sbb
sub
and
mov
adc
je
rcll
stc
lcall
xchg
jecxz
daa
cmpb
fmul
imul
test
cmpb
and
aas
sub
insl
mov
sub
cmp
push
sbb
mov
jb
ret
lock
fnsave
mov
aad
sahf
pop
sub
pop
ja
cmp
push
adc
stos
or
fisttpll
jnp
jp
xchg
hlt
repnz
pop
sbb
add
pop
jne
out
test
xor
loope
sbb
ret
push
push
loop
lods
outsb
mov
jbe
repnz
mov
es
lahf
imull
sbbb
mov
cmpsb
xor
jecxz
lods
pusha
mov
fbld
xor
gs
inc
imul
xchg
jmp
push
shrl
pop
call
push
xchg
das
dec
cltd
push
aam
cmpsl
and
add
dec
mov
out
pop
pop
bound
hlt
insl
lds
mov
adc
or
gs
std
jle
sub
lret
inc
cmc
and
in
push
out
or
mov
and
cli
shll
and
push
loop
addr16
jmp
lret
lcallw
sbb
adc
test
push
jecxz
mov
mov
das
das
ret
out
or
repnz
ljmp
adc
out
push
nop
movsl
fdivrl
lcall
mov
lods
in
ljmp
out
addr16
or
mov
sbb
push
lods
xchg
lods
cmp
dec
rcrl
adc
xchg
ja
shrb
xor
fs
jmp
movsl
cmc
dec
pop
inc
push
daa
popf
scas
call
adcl
xor
dec
fistl
mov
pusha
lea
push
imul
add
repnz
push
inc
and
inc
sahf
add
jae
and
clc
xor
and
jmp
vxorps
les
cmp
jmp
cs
push
mov
aad
in
ret
sbb
movsb
pop
mov
cmpsl
sbb
movsb
pop
aad
mov
pop
rclb
pop
les
mov
aam
jo
out
cmp
out
mov
pop
pop
scas
stc
sahf
adc
dec
movsb
js
sub
or
inc
sahf
xor
mov
xchg
adc
ss
cltd
outsl
icebp
inc
mov
lcall
lcall
xor
inc
pop
sahf
add
in
ret
dec
mov
jae
lretw
xchg
shl
imul
mov
ds
lahf
aaa
push
push
in
test
shlb
jb
mov
jbe
mov
aaa
cmp
sahf
or
inc
cmpsb
js
out
push
lock
mov
mov
cmpb
test
sub
inc
cmpb
fisubl
dec
insl
jecxz
adc
and
jecxz
aaa
inc
negl
xlat
xor
pushf
cld
out
pushfw
mov
dec
aaa
jae
arpl
pushf
sub
and
ljmp
xchg
add
mov
mov
iret
popa
add
lcall
pop
jo
decl
sbb
sub
dec
mov
pop
outsl
pushf
shll
xor
inc
jb
cmpsl
fdivr
sbb
orb
test
pop
pop
lahf
mov
push
dec
push
fisubrl
dec
fstpt
push
dec
lcall
sbb
imul
cmc
jle
xchg
inc
rorb
in
and
aas
gs
jns
xlat
add
out
mov
movsl
lods
inc
mov
mov
xor
add
jmp
hlt
in
inc
add
movsb
jno
fidivl
shlb
sub
push
lcall
pop
lods
mov
dec
or
je
mov
mov
xor
stc
mov
gs
ljmp
lcall
sbb
aad
in
loope
or
add
jb
sub
jo
mov
fst
bnd
inc
ja
and
add
xchg
dec
dec
sar
jb
push
sub
cmp
or
pop
daa
xchg
xlat
cmp
push
and
inc
shufps
mov
aad
inc
rcll
test
push
jg
lahf
mov
sbb
inc
das
pusha
imul
pop
out
lods
scas
cmp
fwait
inc
push
pop
adc
mov
cs
pop
icebp
insl
sbb
sub
gs
add
aas
fcomps
jp
sahf
pop
cwtl
loopne
popf
pop
out
add
jae
mov
cltd
dec
imul
in
push
sbb
jnp
sub
fstpt
lret
xor
push
xlat
jns
dec
ja
xchg
nop
packssdw
jbe
nop
mov
gs
movsb
mov
sbbb
cld
cmc
sbb
popa
popa
jbe
push
ret
insb
cmc
or
test
lods
add
popf
and
pop
mov
fstpl
fucomi
xor
ret
pop
or
clc
cmp
mov
sbb
push
daa
ret
mov
xor
inc
adc
das
sub
jne
out
mov
jne
pop
insl
sub
inc
pushf
insb
cli
das
and
jg
fdivr
cltd
xchg
stc
push
lea
sbb
outsb
lock
mull
test
pushf
jns
rorl
test
lcall
repz
mov
in
sti
and
add
push
xor
cmpsl
fistl
lods
jg
sbb
sbbb
mov
loop
push
popa
and
add
cwtl
loop
enter
dec
lea
mov
movsl
cltd
aam
mov
adc
mov
ret
adc
push
pop
sub
jbe
mov
cltd
adc
sarb
sbb
mov
xchg
mov
pop
ret
imul
mov
pusha
fisubs
out
mov
or
popa
fs
jp
std
add
andb
xchg
mov
push
into
inc
and
lds
mov
lods
shlb
xchg
aas
sbbb
jb
push
sbb
insl
cmc
push
in
push
cmp
push
push
xchg
js
inc
rol
popa
add
imul
loop
push
sahf
rorl
in
jl
mov
cmp
sbb
mov
and
daa
sbb
push
icebp
lret
xor
das
pop
cmpb
jns
das
imul
pop
sbb
xchg
aam
pop
adc
xor
ja
mov
scas
pop
idiv
or
cmp
sbb
cmp
push
lret
mov
xor
mov
out
adc
jb
sub
xchg
push
xor
lret
xchg
hlt
test
xchg
dec
xchg
jnp
loop
arpl
mov
arpl
ficomps
pop
inc
or
es
test
cli
add
jg,pn
leave
xchg
push
mov
adc
xor
mov
scas
mov
mov
outsb
popa
rcrb
hlt
hlt
movsl
imul
cwtl
cs
ja
push
xchg
sub
dec
test
aaa
es
fildl
mov
xchg
adc
rcrl
pop
pop
mov
and
in
out
pcmpeqw
inc
sbb
cltd
jle
cmp
loop
pop
bound
or
hlt
sub
in
inc
pop
xor
cld
test
mov
xchg
stc
lods
xchg
lcall
sub
sbb
divb
xchg
push
popa
not
aam
pop
jns
jbe
movl
test
and
fsubrl
in
mov
xchg
inc
dec
rol
dec
cmpb
adc
push
out
mov
mov
les
fildl
cmp
mov
push
insl
xchg
mov
push
aam
xor
push
fcomp
lea
xchg
add
imulb
ljmp
pop
flds
or
loope
daa
mov
aad
in
cmp
ret
mov
arpl
adc
mov
cwtl
sbb
and
push
test
jle
dec
xor
je
adc
cmpsl
nop
and
or
mov
and
stc
add
addl
dec
clc
add
or
cmpsl
repz
je
cmc
xchg
ja
int3
cwtl
fisubl
sbb
gs
hlt
data16
dec
and
and
fucomp
inc
xchg
nop
sahf
xchg
push
call
int
pop
xlat
xchg
xlat
mov
bnd
lods
adc
add
mov
in
cmp
loopne
jbe
inc
push
repnz
mov
cwtl
mov
pop
fidivs
xor
xor
outsb
and
push
bound
jl
push
or
js
pusha
fcoml
pop
adc
push
xchg
lea
xlat
dec
add
aaa
sub
jns
xchg
call
xor
andl
packuswb
stos
aad
fwait
lock
popa
and
call
lcall
and
xlat
int
xor
dec
insl
pop
loope
push
inc
push
ljmp
imul
push
jb
daa
jne
sti
rcrb
mov
inc
fs
jo
dec
or
inc
les
inc
outsl
ficoms
pushf
mov
pop
ja
imul
lcall
daa
push
iret
jl
out
dec
test
inc
orb
sbb
ds
mov
in
and
mov
shll
test
dec
inc
push
sub
iret
xchg
adcl
popa
pop
dec
bound
and
fwait
add
or
pop
popf
xchg
outsl
enter
movsb
jge
and
outsl
daa
stc
shll
mov
aad
arpl
cs
cmp
fstpl
mov
push
xchg
add
lahf
push
or
xor
idivb
lods
jno
loope
sub
roll
xchg
ja
cmc
into
mov
call
mov
in
xchg
aam
xorb
cmpsl
imul
xchg
pop
sbb
das
jo
std
data16
cmpsl
pop
and
aam
push
jp
nop
and
data16
jl
jl
es
loopne
shll
pop
aad
insl
loopne
jp
stos
cld
insl
jo
aaa
pop
xchg
std
movsl
sbb
loope
aam
bound
or
sbb
daa
loop
inc
out
inc
pop
jmp
xor
sub
js
mov
adc
dec
ja
int3
mov
pop
pop
nop
stc
mov
push
cltd
mov
sti
mov
adc
mov
outsb
test
fdivl
xchg
outsb
pusha
pop
xchg
cmpsl
push
rorb
clc
and
and
out
icebp
xchg
xor
aas
lahf
push
pop
js
inc
hlt
adc
sahf
imull
and
ja
adc
adc
or
dec
rclb
lock
outsb
mov
aam
xor
in
adc
je
je
lods
mov
arpl
dec
int
js
pop
xchg
cld
push
pusha
movsb
stos
cltd
mov
pop
scas
cmpsl
jno
xchg
sbb
pop
cmpsl
lea
and
rcr
add
ret
je
sbb
outsl
imul
ss
pop
test
clc
mov
pmulhuw
rclb
out
and
popf
dec
ds
and
in
or
inc
cmpsl
xlat
movsb
jle
test
mov
mov
nop
les
xor
push
out
aas
push
inc
xchg
repnz
mov
cmovae
rsqrtps
and
pop
cmp
repnz
test
sti
imul
sbb
mov
sub
adc
outsb
cmc
jg
stos
jmp
cmp
jge,pn
dec
fbstp
cltd
icebp
mov
and
rcr
jle
into
and
sub
test
movsb
pop
rcrb
lret
mov
dec
mov
mov
xorb
push
push
xchg
mov
inc
dec
sub
ret
test
das
jns
xor
pop
test
lret
popf
imul
push
or
cmpsl
and
test
ret
gs
test
cltd
or
mov
outsl
mov
shll
push
ss
xchg
lods
negb
add
mov
inc
bound
mov
xchg
push
xchg
mov
add
ret
push
lds
inc
test
imul
mov
cmpsb
cmp
inc
pop
push
mov
std
and
push
jnp
cmp
mov
sub
popa
add
imul
push
mov
das
popa
mov
jne
cwtl
and
daa
into
mov
loop
xor
mov
mov
xchg
xor
popa
repz
add
inc
dec
enter
fnstsw
loope
sbb
dec
adc
fdivr
mov
test
fistpl
lods
sbb
add
int3
clc
xchg
rcrb
popf
fs
ret
insb
movsl
or
dec
into
int3
xlat
mov
and
mov
loopne
fwait
ljmp
xchg
and
mov
stos
js
leave
sbb
imul
hlt
das
pop
gs
push
cwtl
js
int3
popa
fs
pop
repnz
or
fisttpll
xchg
std
or
sub
stos
jmp
les
lret
xchg
mov
and
cmpsl
inc
das
mov
mov
out
sub
pop
or
ret
pop
into
adc
iret
cs
out
movsb
lret
ffree
xchg
mov
ret
jmp
les
es
jns
filds
xchg
fxch
loopne
shl
arpl
test
inc
in
out
xchg
pusha
fcompl
sahf
rclb
pop
mov
test
sub
push
and
adc
imul
std
xor
mov
pop
popl
hlt
jne
filds
lds
outsl
and
adc
mov
xchg
imul
lods
cmp
sbb
scas
aad
mov
mov
or
in
sub
into
jecxz
cmpsb
jle
int
mov
popa
mov
aaa
aaa
jb
xchg
outsl
add
shl
cld
and
mov
adc
scas
shlb
out
pop
xor
lcall
cmpsb
add
lock
outsl
sbb
cltd
in
insb
xchg
fwait
aad
pop
mov
inc
push
fwait
insb
xor
and
pop
lahf
lea
cmp
mov
jb
in
in
mov
rcr
test
cltd
inc
inc
or
sub
popa
out
testl
or
sub
push
ja
add
sbb
jecxz
xor
sub
stc
clc
gs
ss
mov
out
xchg
adc
dec
pop
push
aaa
mov
dec
ror
scas
packuswb
jb
push
imul
cmpsl
cmpb
mov
lahf
aam
pop
out
sub
movsb
jle
bound
nop
lcall
stos
loop
or
ffreep
clc
aad
pop
movsl
push
imul
cld
xchg
inc
and
jmp
fiaddl
jo
data16
push
lcall
inc
dec
pop
xor
es
addr16
movsb
mov
jl
in
out
aaa
std
and
lds
fsubrp
push
lcall
pop
in
aaa
hlt
rclb
push
xchg
cltd
cmpsl
jns
call
daa
sub
mov
and
cmp
adc
loopne
daa
shlb
ljmp
movsl
add
push
daa
or
push
int3
adc
and
push
mov
sbb
data16
out
pop
and
jnp
and
gs
adc
inc
push
pop
ja
push
inc
sub
outsl
gs
rorb
pop
pop
loope
jno
xor
add
lock
dec
outsl
adc
orl
add
cs
imul
cmp
dec
lahf
mov
or
push
xor
lods
push
add
pop
gs
mov
jle
add
adc
sbb
loop
ret
or
push
int
data16
repnz
push
shl
arpl
jns
enter
dec
call
push
jl
mov
sbb
pop
out
sbb
push
mov
data16
sub
scas
cmp
mov
add
pushf
insb
repnz
or
adc
btc
notl
lea
dec
fucomi
dec
pop
mov
dec
mov
insb
cld
mov
pop
inc
imul
jo
inc
sahf
inc
mov
cmp
out
add
nop
mov
insl
inc
sbb
gs
inc
ss
sbbl
ja
stc
xchg
push
xor
or
es
pop
aaa
sub
sub
das
and
bound
aad
mov
push
lea
xchg
and
loope
jp
je
adc
popf
movsl
push
mov
xchg
sahf
inc
cmpsb
dec
les
cmp
inc
pop
cwtl
or
daa
jns
subb
and
test
mov
sahf
ds
inc
stos
mov
loopne
add
mov
jbe
mov
sub
xchg
ss
inc
jl
hlt
sbb
stc
jo
insl
adc
imull
push
fwait
fs
mov
xor
popa
andb
sub
pushf
adc
stos
or
push
mov
sbb
push
push
pop
lret
pushf
sub
xchg
pop
sbb
es
ret
addr16
inc
test
add
mov
fcompp
pusha
lea
dec
and
add
mov
pusha
and
mov
fldt
inc
cmp
adc
cmpsl
dec
repnz
xchg
dec
pop
jne
and
inc
dec
insl
xor
inc
mov
out
xlat
int3
iret
mov
mov
pop
and
add
ja
jge
mov
adc
sub
inc
pusha
sbbl
lcall
int
push
roll
orl
add
jno
xchg
cwtl
mov
testl
or
and
add
mov
in
push
insl
jle
fwait
cmp
and
dec
repnz
sbb
sbb
pop
sbb
fs
pop
jbe
xchg
insb
inc
jnp
inc
lds
sbb
hlt
out
mov
fldcw
fists
imul
dec
fidivrl
fwait
movsb
enter
pop
cmc
xor
mov
bound
or
lds
das
pusha
cmpsl
mov
pop
sbb
mov
fs
rcrb
mov
and
in
clc
repnz
pop
les
mov
inc
adc
mov
or
add
pop
shrl
andb
ror
fiadds
xchg
add
movsb
popa
clc
int3
push
mov
jne
pcmpeqb
pop
mov
lock
pusha
push
mov
scas
daa
cmc
mov
and
mov
stos
loopne
test
mov
hlt
xor
mov
outsl
aad
not
cmpsb
pop
int
popf
les
inc
mov
push
fisubs
mov
xchg
cwtl
rorb
aaa
and
mov
pop
ret
jne
aas
sahf
aas
mov
adc
clc
sub
es
lret
mov
int3
mov
push
adc
mov
or
into
and
or
xchg
js
insb
into
lcall
jg
iret
mov
call
lods
rcrb
pop
pop
pop
jge
dec
hlt
lock
cmpsl
add
bound
.byte
jl
push
arpl
dec
jp
jo
inc
xor
push
cmp
pop
push
je
xor
dec
push
jne
push
fs
jns
bound
xor
dec
inc
xor
xor
push
insb
inc
jb
dec
dec
push
inc
inc
dec
push
pop
imul
dec
cmp
inc
je
dec
pop
jb
addr16
dec
jo
push
inc
push
imul
jno
js
inc
dec
arpl
xor
push
push
jo
xor
xor
je
popa
ja
bound
push
arpl
push
push
data16
push
dec
inc
push
ja
ss
inc
xor
inc
dec
jns
aaa
dec
fs
bound
xor
imul
add
jb
inc
push
ss
inc
jbe
inc
pop
push
inc
push
push
outsb
push
jae
jne
xor
dec
jo
dec
je
imul
insb
jp
jno
inc
imul
inc
aaa
push
je
inc
jo
insb
dec
push
imul
inc
inc
ja
bound
inc
dec
xor
bound
popa
xor
addr16
gs
pop
dec
push
je
imul
push
cmp
inc
inc
jno
inc
jbe
jno
outsl
xor
insb
dec
ja
jns
inc
xor
ja
jb
jo
push
xor
dec
push
inc
pop
je
dec
jno
push
popa
dec
dec
popa
push
push
push
jns
inc
insb
jbe
xor
cmp
dec
cmp
data16
xor
push
js
dec
inc
pop
addr16
insl
outsb
push
jno
push
js
insl
ja
imul
dec
inc
je
xor
imul
cmp
pop
pop
insb
cmp
dec
dec
push
addr16
dec
inc
jne
aaa
jno
dec
je
arpl
insb
jno
inc
fs
popa
pop
jae
dec
arpl
imul
cmp
dec
xor
arpl
outsl
push
dec
push
insb
xor
jo
js
inc
push
dec
jns
inc
je
xor
push
jae
insb
push
addr16
add
dec
push
outsl
je
push
imul
fs
dec
xor
outsl
jbe
inc
inc
xor
inc
jne
inc
push
jae
dec
insl
push
popa
jae
pop
dec
inc
dec
xor
jb
push
js
dec
inc
inc
jbe
insb
dec
inc
dec
dec
xor
jne
dec
dec
xor
ja
bound
addr16
inc
popa
imul
insl
je
push
inc
xor
xor
push
xor
inc
imul
push
jns
pop
push
dec
imul
imul
cmp
jae
outsl
push
cmp
jns
dec
push
dec
xor
dec
xor
xor
inc
inc
jne
inc
aaa
fs
bound
dec
xor
pop
push
inc
pop
insl
xor
push
addr16
insl
push
push
aaa
ss
push
jp
add
add
iret
ja
inc
xor
adc
jl
push
add
xor
ss
jno
inc
aaa
imul
imul
arpl
inc
xor
dec
outsl
dec
push
xor
xor
addr16
dec
push
jp
dec
ja
push
cmp
inc
cmp
dec
popa
xor
inc
bound
push
xor
push
je
outsb
jbe
jb
ja
inc
push
gs
push
jbe
push
xor
inc
ja
dec
outsl
inc
dec
xor
xor
dec
js
dec
je
popa
aaa
dec
insl
inc
arpl
push
dec
gs
xor
dec
arpl
push
dec
jb
inc
dec
push
outsb
inc
pop
dec
jns
push
jbe
push
push
xor
jb
xor
jns
dec
pop
inc
inc
dec
push
push
aaa
js
fs
arpl
dec
insl
jne
push
cmp
jns
push
gs
xor
inc
cmp
dec
xor
outsl
dec
dec
xor
jo
jbe
pop
push
dec
jno
dec
push
pop
push
aaa
inc
pop
push
ja
insl
cmp
inc
jno
xor
aaa
jno
push
xor
outsl
push
jbe
xor
insb
gs
push
addr16
push
jne
cmp
dec
xor
push
imul
js
inc
dec
pop
push
push
dec
jno
inc
popa
inc
xor
popa
cmp
push
xor
xor
push
inc
inc
dec
outsb
dec
dec
push
arpl
dec
aaa
pop
inc
xor
xor
inc
jne
push
outsb
aaa
push
xor
arpl
outsb
imul
jp
inc
inc
inc
insb
xor
cmp
inc
jne
dec
inc
pop
je
xor
inc
arpl
push
jno
outsb
push
push
pop
insb
push
xor
popa
pop
xor
dec
push
pop
xor
dec
js
cmp
add
ss
aaa
inc
xor
outsl
push
dec
xor
jb
pop
inc
pop
xor
push
inc
cmp
ss
cmp
pop
inc
js
ss
popa
jns
jno
jp
jae
insl
xor
push
cmp
inc
insl
inc
dec
jbe
push
imul
dec
inc
jne
push
push
imul
jns
jb
jno
xor
arpl
pop
dec
js
dec
bound
jo
push
imul
dec
inc
dec
inc
jns
inc
dec
pop
inc
jns
push
push
imul
jo
cmp
jb
xor
cmp
jbe
inc
inc
push
dec
jne
jns
jo
bound
push
xor
dec
imul
dec
push
jne
pop
push
jno
data16
outsl
gs
inc
dec
cmp
dec
push
ja
cmp
add
add
sbb
push
pop
pop
dec
push
dec
push
jb
inc
arpl
jbe
xor
xor
data16
dec
dec
push
insl
inc
xor
xor
inc
xor
inc
xor
dec
xor
insl
pop
jp
jne
popa
push
push
cmp
je
xor
dec
inc
dec
imul
dec
xor
jp
arpl
je
fs
dec
pop
dec
push
jns
dec
dec
jno
jns
push
je
je
pop
push
outsb
jno
bound
dec
popa
jo
pop
js
bound
dec
pop
jne
inc
arpl
dec
fs
push
cmp
inc
inc
imul
arpl
insl
ja
inc
imul
push
ss
jne
dec
dec
je
push
cmp
inc
insl
push
imul
jae
jae
push
inc
popaw
jb
push
xor
push
inc
outsb
jbe
push
xor
inc
inc
add
add
insl
push
jns
inc
dec
dec
je
js
push
push
jne
jns
xor
popa
ja
insl
cmp
inc
inc
jae
inc
push
ss
jne
dec
arpl
pop
popa
jae
xor
imul
jo
xor
dec
insl
inc
bound
inc
arpl
imul
inc
inc
pop
ss
dec
pop
xor
dec
bound
cmp
push
jne
add
inc
dec
push
push
pop
jb
dec
popa
push
je
ja
pop
dec
xor
inc
inc
jb
dec
inc
push
xor
dec
ja
dec
inc
jo
jo
jae
dec
pushw
push
jbe
dec
inc
jae
addr16
dec
imul
dec
inc
insl
inc
push
xor
jp
dec
cmp
ja
push
dec
pop
xor
dec
dec
push
push
jne
pop
aaa
dec
dec
inc
ss
xor
dec
dec
jne
insl
inc
dec
inc
dec
dec
inc
js
inc
jne
dec
imul
fs
ss
inc
inc
jbe
push
inc
push
inc
push
outsb
dec
inc
xor
dec
push
outsb
xor
xor
jns
dec
inc
outsb
dec
jp
push
push
inc
outsb
dec
push
ja
outsb
arpl
addr16
imul
dec
addr16
jb
ja
xor
xor
inc
push
add
add
xor
insb
cmp
dec
cmp
jno
xor
jo
pop
inc
data16
imul
inc
inc
jo
arpl
dec
insb
xor
dec
pop
push
dec
outsl
popa
bound
inc
dec
push
outsl
dec
jbe
jns
xor
xor
push
jp
xor
xor
dec
jb
push
push
xor
push
xor
add
add
or
add
add
inc
fs
je
dec
ss
xor
inc
addr16
inc
push
gs
imul
push
dec
arpl
xor
jns
inc
add
inc
inc
dec
xor
bound
insb
jb
popa
xor
ja
jne
xor
cmp
jbe
jns
jb
aaa
jbe
jo
jae
bound
outsb
jno
gs
jae
data16
dec
dec
ja
ja
outsb
pop
push
inc
xor
inc
jb
jae
insl
pop
dec
jne
push
inc
insb
insb
inc
dec
aaa
dec
bound
xor
dec
dec
outsl
arpl
pop
dec
inc
push
ja
pop
pop
xor
pop
inc
outsl
xor
push
inc
push
push
outsb
pop
jae
dec
push
xor
xor
jno
push
push
push
outsl
dec
jp
insl
pop
push
inc
js
push
dec
xor
aaa
bound
xor
dec
dec
xor
gs
inc
add
add
push
jp
bound
inc
dec
bound
ja
jp
outsb
inc
insl
push
jo
dec
push
push
js
outsb
push
ja
arpl
push
push
xor
jno
jp
jns
outsl
inc
xor
bound
pop
push
xor
gs
outsl
push
pop
aaa
inc
pop
outsb
ss
pop
inc
dec
push
push
pop
outsb
xor
jno
insb
xor
xor
push
inc
push
push
in
lock
scas
adc
pop
xchg
mov
orl
xor
dec
inc
push
jns
xor
add
add
imul
inc
push
inc
jne
dec
jb
xor
push
jp
inc
jp
dec
dec
push
jbe
jne
dec
push
inc
push
inc
outsl
push
dec
gs
dec
xor
dec
dec
jb
dec
insb
bound
gs
jb
xor
xor
addr16
gs
xor
outsl
push
jp
push
pop
imul
inc
dec
insl
popa
imul
push
imul
imul
dec
arpl
bound
imul
inc
jae
add
outsl
insl
jp
jo
inc
inc
dec
xor
bound
push
jns
insl
dec
push
jbe
jno
cmp
js
outsl
xor
gs
popa
add
ss
arpl
jae
dec
outsb
jb
xor
js
dec
cmp
outsb
push
dec
cmp
push
xor
bound
jo
jae
jbe
push
jo
jae
data16
push
insl
imul
push
jns
xor
push
bound
jne
imul
push
ja
xor
cmp
aaa
dec
inc
inc
dec
dec
push
pop
push
push
inc
pop
je
jbe
popa
imul
insl
pop
push
dec
outsb
push
bound
cmp
inc
js
jne
push
inc
fs
inc
addr16
bound
gs
arpl
push
push
xor
push
jo
imul
push
inc
push
dec
inc
xor
ss
xor
js
insl
push
outsb
inc
pop
jns
cmp
inc
inc
je
push
jne
push
jns
push
push
popa
jns
imul
pop
dec
ja
xor
insl
dec
push
add
add
dec
add
add
inc
add
add
add
add
dec
xor
push
inc
dec
pop
xor
push
aaa
push
xor
dec
push
push
push
js
pop
jp
jb
jae
jne
dec
jb
dec
xor
xor
cmp
jo
jne
bound
jb
xor
jne
je
pop
inc
dec
inc
jno
imul
push
dec
inc
xor
jae
xor
xor
push
push
jno
jae
jbe
dec
push
push
jae
push
xor
push
push
push
push
push
dec
jb
push
cmp
inc
inc
insl
js
jb
push
jns
ja
pop
inc
dec
push
inc
aaa
xor
cmp
dec
inc
jae
push
push
inc
dec
dec
push
imul
insb
xor
popa
outsl
xor
xor
add
and
jg
dec
pop
lahf
jae
dec
pop
outsb
dec
jne
push
bound
push
popa
xor
bound
xor
xor
jno
jp
dec
cmp
push
outsb
xor
imul
jp
xor
dec
ja
dec
jno
inc
inc
push
dec
xor
dec
push
je
cmp
jbe
push
cmp
add
mov
xor
jne
js
dec
xor
pop
dec
xor
pop
inc
aaa
xor
dec
inc
inc
inc
pop
dec
imul
dec
push
inc
inc
inc
dec
push
dec
cmp
popa
dec
jne
dec
pop
xor
dec
dec
push
dec
dec
jp
data16
xor
push
inc
push
jne
dec
push
push
inc
push
pop
xor
inc
dec
cmp
fs
pop
inc
dec
xor
xor
jns
jb
push
push
push
outsl
jp
ss
pop
insl
push
dec
pop
xor
xor
imul
inc
xor
pop
xor
inc
xor
jo
push
push
inc
push
cmp
fs
popa
dec
jo
xor
jne
imul
jno
push
inc
dec
dec
dec
inc
pop
xor
inc
bound
outsb
xor
push
push
xor
jb
inc
jns
cmp
xor
arpl
inc
dec
push
push
inc
inc
push
outsl
xor
push
inc
jo
add
add
xor
jae
inc
jno
dec
push
inc
outsl
inc
push
outsb
push
pop
jo
dec
popa
jp
xor
push
push
xor
xor
inc
cmp
gs
inc
popa
dec
imul
dec
inc
pop
arpl
inc
outsl
jbe
inc
jb
pop
bound
push
inc
dec
inc
dec
imul
push
popa
cmp
gs
data16
inc
push
cmp
inc
ss
pop
pop
pop
jns
outsl
push
addr16
popa
push
insl
aaa
popa
dec
dec
imul
js
pop
dec
outsl
jo
dec
push
dec
ja
jne
bound
insb
jp
gs
dec
dec
jno
push
pop
inc
inc
push
inc
push
gs
outsl
inc
dec
popa
je
pop
cmp
outsl
xor
dec
jo
xor
outsb
push
inc
arpl
imul
imul
test
data16
xor
insb
inc
jp
jp
add
add
jae
outsb
je
jo
dec
inc
push
jbe
dec
gs
bound
gs
push
push
pop
dec
cmp
jae
dec
xor
popa
push
push
inc
pop
push
cmp
pop
gs
fs
dec
jp
inc
inc
gs
arpl
dec
inc
jns
inc
xor
data16
fs
push
push
bound
push
xor
pop
insb
push
push
add
imul
pop
insl
inc
pop
push
push
jae
aaa
insl
push
jo
push
pop
dec
addr16
inc
fs
push
xor
dec
imul
push
cmp
aaa
xor
pop
push
insb
jne
jo
dec
gs
dec
jae
xor
dec
addr16
push
arpl
push
push
arpl
imul
inc
aaa
je
dec
addr16
xor
dec
add
add
inc
arpl
inc
addr16
xor
jbe
xor
inc
push
insb
pop
dec
outsl
imul
js
dec
je
pop
outsb
inc
push
inc
jno
dec
imul
arpl
push
jb
aaa
jb
xor
xor
cmp
push
pop
cmp
insl
bound
jb
dec
push
cmp
add
add
push
xor
jno
bound
xor
dec
fs
dec
dec
outsb
js
cmp
push
push
jae
jb
popa
jo
jns
inc
dec
cmp
jns
arpl
jno
pop
xor
imul
push
push
xor
jne
inc
pop
dec
bound
aaa
push
outsl
arpl
dec
push
xor
cmp
push
dec
pop
imul
dec
inc
dec
dec
inc
xor
inc
imul
pop
push
pop
inc
outsb
inc
ss
jne
outsl
inc
dec
push
gs
cmp
push
inc
arpl
imul
dec
jo
insl
xor
dec
inc
insb
push
jns
dec
insb
je
inc
inc
dec
inc
push
dec
push
xor
add
push
ss
push
push
push
addr16
jne
dec
je
inc
jne
imul
data16
push
jne
dec
imul
fs
push
xor
xor
xor
data16
push
bound
ss
jns
push
push
cmp
jb
push
push
jns
xor
popa
jbe
jp
inc
imul
push
xor
push
cmp
inc
push
dec
inc
gs
dec
gs
imul
dec
fs
inc
inc
js
xor
push
fs
dec
add
xor
popa
jne
push
push
xor
je
insb
jb
dec
dec
gs
xor
cmp
dec
xor
push
dec
jae
gs
fs
dec
xor
dec
popaw
jbe
jb
ss
insl
ja
data16
dec
xor
je
dec
push
bound
outsl
dec
xor
imul
push
insl
jo
inc
outsl
aaa
ja
xor
xor
push
push
push
inc
je
inc
dec
outsl
jo
jno
dec
bound
push
dec
cmp
xor
inc
inc
jno
push
ja
imul
add
add
add
or
mov
pop
mov
sar
es
data16
cmp
addr16
push
movsl
test
cs
adcl
dec
inc
pop
mov
jmp
insb
ljmp
in
movsb
fildl
js
push
aam
das
and
cmp
aaa
int3
rcll
popa
mov
imul
cmp
arpl
mov
andb
inc
mov
pop
cmp
or
and
fs
pop
or
out
xor
xchg
mov
movsl
and
loope
xchg
sbb
hlt
call
mov
ja
xor
inc
shlb
or
lock
cwtl
xchg
into
pop
scas
jae
sub
dec
cmp
xor
stos
jb
movsl
cli
cmpsl
sbb
popa
cmpsl
clc
mov
push
insb
dec
adcw
lods
mov
enter
pop
push
sbb
mov
add
inc
sbb
xchg
repz
bound
push
ret
xlat
xchg
and
pop
pop
xchg
hlt
in
mov
sbb
inc
pop
push
movsl
push
xorb
sbb
pushf
inc
xchg
ret
daa
ffree
mov
push
lods
adc
and
pop
shll
pop
sbb
daa
loopne
pop
or
fnstenv
je
call
fcoms
push
ret
push
cs
mull
loope
mov
xor
xor
popa
lret
push
pop
push
call
mov
and
leave
xchg
pop
repnz
les
std
aaa
or
popf
ret
add
out
lahf
and
shrl
or
adcl
and
cmpsb
add
rorb
mov
aas
lret
dec
pop
popl
cmc
fbstp
stc
cld
dec
xor
add
xchg
mov
adc
neg
dec
test
or
xor
xchg
sub
mov
mov
mov
dec
aas
into
adc
out
add
inc
addr16
mov
enter
sbb
dec
jl
sub
xor
aas
insb
jmp
xlat
mov
dec
out
sub
ja
push
push
mov
iret
daa
or
push
mov
inc
mov
pop
sahf
jae
maxps
lds
mov
push
sub
xchg
inc
sarl
ljmp
pop
sub
cmp
repnz
leave
add
sub
daa
lock
jbe
xchg
jg
xchg
mov
inc
mov
ljmp
adc
cmp
xchg
ljmp
outsl
mov
mov
xchg
dec
lahf
adc
das
rclb
cmp
xchg
push
decl
jae
jbe
fisubrl
xor
mov
xchg
or
push
xchg
and
iret
pop
sub
mull
out
out
push
mov
rol
adc
ljmp
enter
sub
or
cmp
pop
add
xor
stc
push
pop
jne
jne
in
add
cmp
mov
xor
iret
sub
daa
xchg
mov
sbb
dec
insb
lea
and
iret
and
addr16
or
xchg
jle
stos
test
add
mov
test
mov
dec
add
pop
xchg
mov
xchg
xchg
repz
pop
jae
or
imul
outsb
inc
sbb
jg
nop
les
mov
movsb
lock
push
out
nop
out
sbb
cli
das
out
shlb
retw
pop
imul
push
leave
arpl
dec
cmp
pop
cmp
or
cld
xchg
inc
nop
add
xor
jb
or
in
dec
test
pop
out
sub
or
adc
hlt
sub
int3
repnz
movsl
mov
pop
pop
fnstcw
orl
das
jb
mov
out
les
js
fstpt
cmp
popa
call
notl
int
int3
xchg
push
out
mov
mov
lret
xor
data16
mov
xchg
adc
push
pop
push
sbb
fcoml
jl
fsubs
ds
sub
push
les
repnz
sub
push
movsl
clc
sbb
sub
das
jb
arpl
popf
sbb
jae
xchg
mov
cmp
push
gs
pop
or
pop
sahf
mov
push
and
imull
data16
test
addb
push
arpl
lret
fs
imul
aad
push
daa
xchg
lcall
mov
xor
lret
lret
sub
and
lret
cmpsl
cmp
lock
test
push
daa
jb
bound
or
xor
addr16
scas
push
xlat
cmpsb
push
jb
imul
in
and
cld
xor
and
cltd
mov
std
sub
mov
xchg
pop
mov
cmp
adc
js
popf
pop
mov
mov
sub
and
sbb
dec
out
pop
sbb
movsl
in
lahf
loopne
sub
ds
stos
xchg
and
jle
out
leave
daa
outsb
aam
pop
fidivl
pop
xchg
and
xchg
jae
jnp
movsb
xor
loop
repz
cmpsl
popa
rcrl
out
bound
xor
loope
cmc
pop
data16
and
rcll
loope
xor
movsl
aaa
cli
xor
mov
push
inc
mov
int3
mov
mov
or
xchg
mov
or
sub
xor
call
push
inc
addr16
out
sub
out
fcomps
jno
cltd
mov
addr16
pop
insb
push
pusha
xor
data16
xor
out
mov
push
xor
sahf
stos
mov
dec
and
add
arpl
and
push
dec
ror
in
das
adc
es
push
mov
outsb
add
xchg
repz
push
push
les
outsb
jle
xchg
and
es
mov
xor
lods
mov
outsl
aad
pusha
inc
or
xchg
pop
outsl
mov
sub
repz
mov
xor
fadds
mov
sbb
jb
call
jp
rcrb
cld
jne
add
ja
adcl
xchg
jae
or
sub
enter
cmpsl
push
fcompl
and
hlt
ljmp
mull
push
jp
push
pop
aad
jmp
sbb
mov
or
or
leave
je
and
pop
cmpsl
adc
push
out
mov
mov
out
mov
mov
cmpsl
mov
xchg
mov
mov
jle
dec
movsl
mov
lock
mov
push
dec
hlt
push
pop
jmp
add
and
xor
push
out
and
jmp
fists
ret
jle
sub
pop
inc
mov
jle
or
pop
xlat
loopne
fimull
in
add
mov
jbe
in
inc
ret
movsl
loope
shll
adc
mov
pop
dec
jns
fwait
ret
xchg
movb
xor
test
xchg
sub
ret
fsubrl
std
push
and
test
popa
push
int3
sahf
clc
inc
stos
pop
sahf
arpl
inc
pop
pop
xor
loopne
andb
cmpsl
popa
pop
ja
stos
sub
inc
dec
sbb
xchg
dec
daa
ret
daa
fcomip
imul
inc
or
scas
xchg
mov
pop
pop
xchg
cmpsb
dec
lods
jo
cmp
lret
jne
cwtl
jb
insb
pop
push
pop
leave
jg
mull
pop
dec
push
dec
inc
cld
sbb
out
lods
aaa
cmp
mov
addr16
xor
lahf
sub
je
xchg
enter
pop
inc
xor
fldcw
add
cmpsb
int3
mov
jmp
lea
pop
and
mov
mov
sbb
adc
daa
add
gs
pop
dec
cltd
test
jg
call
push
lret
das
in
pushf
aad
and
jle
adc
mov
mov
jbe
test
xor
jmp
aas
pop
push
lock
push
outsb
das
aam
push
jle
mov
call
imul
jne
dec
jae
lret
nop
adc
cmp
push
imul
and
sub
or
jbe
push
aas
dec
cmp
lret
test
ret
inc
ret
lods
jle
jb
clc
sbb
cld
lods
xchg
daa
xlat
jg
popf
aaa
dec
int3
test
mov
icebp
jne
cs
adc
scas
shlb
loop
cs
insl
mov
js
daa
repnz
outsb
int3
pushf
fdivp
movsb
cmpsb
adc
sti
adc
dec
push
daa
and
jle
pop
pop
xlat
pushf
std
aam
xlat
push
dec
xchg
stc
sbb
cli
movsb
popl
xor
repnz
mov
test
fsub
lcall
and
fwait
pop
arpl
imul
aas
es
sbb
push
fbld
imul
movsl
mov
shr
xchg
push
test
xorl
and
push
popf
jno
fwait
icebp
jmp
dec
sbb
stos
shr
jne
cmpsl
movsl
xchg
out
rclb
das
xchg
es
sbb
cmp
xchg
fsubr
das
stos
js
out
xchg
daa
jb
dec
mov
imul
mov
repz
add
scas
je
lock
int
inc
push
out
cmp
sarb
inc
xor
shr
and
and
mov
lahf
xchg
into
bound
xlat
mov
inc
paddusb
pop
mov
loopne
testl
add
inc
inc
lds
popf
fiadds
ret
ljmp
pop
loope
inc
sub
out
jnp
add
jbe
jmp
lods
js
imul
mov
ret
shlb
jecxz
fcoms
mov
mov
sub
test
stos
jl
test
sub
mov
insb
add
aad
aas
mov
or
imul
ret
into
push
arpl
pop
dec
cltd
cmpsl
adc
sub
push
frstor
aad
imul
mov
repnz
imul
in
fistpl
nop
in
insl
aad
mov
mov
outsb
out
addr16
cmp
repz
inc
push
shlb
jl
dec
pop
xor
fs
repnz
inc
daa
push
xor
push
sub
inc
movsb
inc
stc
sub
inc
lahf
stos
mov
cwtl
xchg
jg
pop
aaa
pop
mov
arpl
sbb
add
mov
xchg
jno
adc
inc
bnd
xlat
pop
scas
fsubrs
and
cltd
and
xor
sbb
lret
pop
imul
cmpsl
mov
mov
cmp
sbb
and
out
mov
cmp
pop
sti
xchg
inc
sti
cli
xlat
ljmp
cmp
jns
add
xchg
andl
mov
pop
add
scas
and
sbb
inc
sub
iret
push
fwait
pop
ret
iret
popa
inc
out
pop
sub
cmpb
pop
jne
add
lcall
push
into
dec
fwait
and
jp
and
cmp
insb
pop
sub
repnz
sbb
add
adc
lea
dec
and
cmp
dec
mov
gs
and
stos
mov
mov
sub
mov
inc
aas
pusha
xchg
inc
add
pop
and
jle
xchg
in
and
push
addr16
cmc
sbb
mov
push
sub
out
or
dec
fldcw
pop
push
xor
daa
dec
aad
insb
outsl
pop
jno
aam
push
stos
mov
and
jmp
lds
cmpsl
nop
jae
sbb
test
xor
pop
pop
subl
js
dec
mov
lock
mov
icebp
push
pop
outsb
in
inc
mov
pop
mov
mov
xor
push
or
lods
fistps
cmp
ss
daa
repz
and
movsb
lretw
cmp
and
push
imul
pop
mov
dec
mov
shlb
mov
aaa
mov
mul
xor
fnstenv
push
jno
push
push
sarb
push
ja
insb
cmpsl
scas
mov
in
and
test
jno
mov
xor
inc
xor
fisubrs
stos
jp
subl
fists
sub
das
sub
inc
call
cmp
mov
mov
in
jecxz
mov
pushf
or
cmc
push
sbb
insb
out
mov
jne
mov
push
scas
fs
fisubl
pop
sub
jl
or
popf
push
in
and
cmpl
sbb
pop
sbbl
pop
js
inc
xchg
sbb
xchg
and
inc
pop
ret
add
and
push
jecxz
cwtl
loope
int3
call
pop
loope,pt
add
adc
jb
bound
xlat
push
mov
pop
and
add
imul
xor
xor
jns
jge
mov
push
xchg
stos
jo
out
push
push
push
pop
adcb
loop
in
lcall
testl
data16
nop
les
dec
add
daa
mov
clc
push
push
aaa
mov
ret
mov
inc
mov
dec
adc
pop
xchg
shlb
pop
mov
inc
mov
pop
inc
xchg
shlb
iret
jge
ds
pop
mov
decl
dec
aad
or
mov
sub
lods
fwait
jns
das
adc
mov
lret
xor
push
xor
pop
push
xor
lret
test
adc
test
insl
xchg
push
out
call
jecxz
dec
jnp
and
jo
jb
xor
out
cli
dec
push
insl
popa
icebp
sub
jb
and
or
aaa
sub
push
testl
sahf
std
inc
jae
repz
ja
or
dec
dec
jge
mov
mov
sub
mov
ror
fisttpll
ja
sbb
mov
add
rcll
push
cli
pop
popf
gs
pushf
push
dec
inc
fmuls
dec
out
jmp
add
imul
sub
cmp
xchg
stc
aad
jne
mov
icebp
clc
out
js
pop
repnz
add
xchg
sbb
dec
dec
lcall
sub
notb
jb
adc
and
cmp
insb
aad
dec
add
jecxz
pushf
lods
push
or
xchg
push
mov
popa
add
shlb
and
adc
dec
mov
or
xor
les
incl
jg
loopne
in
or
and
enter
cmpsl
xchg
sbb
mov
into
cmp
or
sti
sbb
fisubrl
subb
sbb
mov
inc
pop
insl
push
loope
pop
xor
dec
addr16
in
pop
dec
xchg
imul
pop
adc
pop
bt
push
notl
mov
leave
das
inc
cli
sub
xchg
in
lcall
sub
test
xchg
pop
in
das
push
pop
xlat
pop
dec
test
jns
xchg
adc
mov
js
push
mov
aaa
push
pop
pushf
jp
outsl
pop
mov
mov
and
call
inc
stos
pusha
int
pusha
jns
popa
out
pop
and
sub
and
mov
pop
movsl
lods
out
nop
mov
imul
and
dec
cmpsl
push
sub
movb
sti
addr16
sub
shrb
movsb
sub
and
mov
mov
data16
push
pop
test
mov
in
cmp
ss
xor
bound
imul
inc
jo
xlat
scas
lcall
lcall
in
jl
pop
push
mov
sbb
sahf
xlat
jbe
sbb
dec
stos
in
mov
mov
fsubrs
xor
das
adc
sub
lahf
test
dec
das
or
dec
aad
lods
loop
mov
sahf
es
pusha
push
xchg
aam
xor
movsb
xor
mov
push
cmpsl
or
mov
ss
mov
xchg
mov
mov
daa
cmp
cmp
int3
jle
jno
nop
inc
mov
push
out
int
mov
out
lds
xor
push
fadd
jno
adc
aad
cmp
insb
mov
fbld
add
cmc
pop
push
push
in
loopne
jl
loope
add
inc
dec
xchg
fisttps
cmp
cli
fcomps
mov
test
mov
int
test
das
xor
pop
mov
into
pop
inc
sbb
jmp
leave
jmp
cs
movsl
rorl
cld
ss
xor
or
test
push
xchg
sub
push
fdivrp
mov
cli
jno
inc
and
xchg
rol
aas
ss
cmpsl
mov
js
pop
stos
stos
cli
sbb
fistps
cmpsl
dec
mov
add
js
adcb
and
lcall
outsb
cmc
dec
dec
cmpsl
leave
shll
pop
addr16
jo
popf
jge
sub
aad
inc
xchg
mov
fisubrl
sbb
lahf
push
inc
arpl
xlat
insl
sub
loop
cwtl
ja
sub
xchg
pushf
cltd
movsb
push
sub
adc
ret
in
clc
cltd
test
stc
xor
jnp
jmp
mov
pop
ret
cmp
pushf
xchg
ret
std
inc
adc
loopne
sub
sbb
mov
and
outsl
mov
in
call
fwait
adc
into
xchg
inc
add
cmc
cld
aaa
add
mov
orb
sbb
or
and
mov
and
push
pop
lods
adc
inc
sbb
in
jge
insl
shlb
cmp
rol
mov
add
fidivs
sbb
mov
inc
mov
xchg
imul
pop
jae
scas
daa
loop
jge
cmp
and
gs
sbb
dec
pop
cmpsl
cmc
pusha
add
ficomps
clc
push
cwtl
push
imul
xor
mov
dec
cwtl
pop
adc
xchg
popa
js
xor
popa
xor
sbb
cmp
in
je
xchg
js
out
es
outsl
ffree
add
insl
test
and
in
outsl
pop
sti
adc
xchg
and
lea
repnz
xor
and
pop
mov
push
push
rcll
cltd
jmp
add
dec
adc
test
mov
cmp
adc
daa
push
and
xor
cmp
aas
shlb
lcall
sub
cmc
gs
mov
aaa
das
xchg
xchg
xchg
dec
mov
cmpsb
and
cmp
push
cmp
inc
push
pop
pop
pusha
dec
sahf
aam
lret
jb
lret
ret
xchg
daa
ret
jl
adc
enter
out
bound
pop
cmpsl
js
adc
out
test
stos
imul
mov
sbb
fs
into
loop
mov
addr16
jg
add
pop
cmpsb
divb
xor
lahf
and
push
arpl
xchg
xchg
xor
mov
push
cmpsl
sahf
and
cmp
mov
add
or
roll
sahf
mov
adc
shrl
cmpsb
cwtl
movsl
fmuls
xor
lcall
adc
mov
das
ss
sbb
lds
push
icebp
pushf
mov
sbb
in
in
daa
xchg
xor
cmp
enter
sub
pop
xchg
call
fs
into
mov
cltd
negl
cmp
ja
fidivs
fsubrs
pop
cwtl
addr16
mov
push
rclb
pop
stos
in
repz
pop
movsl
xor
sub
and
icebp
clc
scas
add
cwtl
sub
insl
lret
mov
orb
pop
imul
inc
andl
mov
add
add
push
and
mov
mov
jb
pop
mov
lock
xor
push
cmpsb
inc
and
jecxz
cmp
mov
in
jnp
xchg
incl
jge
fistl
inc
lock
push
pusha
in
or
push
mov
add
pop
sub
subl
jecxz
cmpsl
stc
daa
loope
mov
roll
xchg
mov
jbe
es
or
subb
mov
loopne
lods
enter
out
jae
xor
push
jno
insb
pop
push
add
xchg
aas
sub
xlat
jle
xchg
les
xchg
cmpsl
mov
lahf
sub
int
push
xchg
lcall
pop
mov
shrb
jns
movsl
mov
push
test
jbe
je
mov
cwtl
imulb
mov
pop
push
rcl
sub
push
push
and
repnz
js
out
mov
leave
out
pop
xchg
lret
push
pop
repz
add
ljmp
fwait
call
push
cmp
fisttps
inc
dec
sub
mulb
out
pop
pop
sub
jg
push
mull
add
movb
adc
dec
mov
sbb
cwtl
fwait
mov
adc
das
or
dec
lea
push
sbb
fucom
popf
and
insb
or
mov
mov
jge
fs
xor
jmp
adc
pusha
daa
loopne
sub
cltd
mov
jg
aad
sahf
rcl
rclb
imul
cmovp
scas
hlt
pop
sbb
xor
cld
imul
neg
pop
pop
fsubrl
xchg
and
rclb
mov
cmpsl
fs
xor
cld
pop
daa
cld
lds
stos
cmpsb
cmp
bound
popf
rep
kmovw
mov
das
push
aaa
pop
xlat
pushl
xor
cmp
repnz
xchg
lret
and
ds
xchg
inc
cmpsl
fstpl
push
xchg
add
cld
lcall
pusha
repz
mov
sahf
sub
sub
loope
cmpsb
pushf
dec
lods
adc
fs
cmp
bound
cmp
out
sar
push
pushaw
add
inc
sub
and
out
or
and
push
pop
push
mov
stos
push
pop
inc
add
orb
mov
test
cmpsl
mov
loop
pusha
pop
pop
bound
jle
insl
jb
sub
push
or
sbb
out
pop
cmc
cmpb
sub
jmp
bound
out
add
enter
dec
and
sub
lcall
mov
aam
mov
or
cmpsl
sbb
orb
push
cmp
pusha
sarl
daa
lds
test
cli
mov
test
daa
imul
into
movb
repz
mov
jae
sar
dec
mov
xlat
sbb
cmpsl
pop
pop
jnp
mov
fstl
cmpsl
sub
fs
lods
lods
lret
cmp
mov
lret
xchg
fs
enter
jg
ds
and
xor
cmp
inc
test
inc
mov
push
lock
aad
mov
cmp
aas
and
dec
arpl
push
xchg
jp
cmpsb
jnp
xor
cs
ficompl
xchg
insb
xchg
adc
inc
mov
arpl
int
push
xchg
sub
scas
in
mov
pusha
jge
push
ja
std
jae
jle
jl
shlb
and
loop
sbb
xlat
mov
outsl
inc
mov
cltd
or
add
repz
xor
pop
pop
cmp
mov
std
pusha
and
sub
pop
aaa
push
arpl
mov
lahf
xchg
icebp
add
repz
xchg
in
push
sub
ficoms
push
pop
xlat
dec
clc
mov
mov
rcr
cmp
sub
icebp
push
push
sub
ret
pop
jmp
push
push
sahf
andb
icebp
adc
inc
lcall
lcall
xlat
repnz
sub
into
ficomps
jb
pop
das
loopne
das
dec
xor
mov
je
fisubrl
lahf
in
inc
push
clc
pop
cmpsl
mov
bound
movsl
inc
add
movsl
and
daa
scas
jbe
add
insl
shl
repnz
inc
add
pop
xchg
dec
inc
movsb
js
xor
imul
movsb
jmp
sub
in
xchg
fs
lds
sub
inc
dec
sbb
shlb
lods
xor
sub
ds
clts
push
jbe
push
fisubrl
jbe
xchg
sbb
mov
pop
out
push
inc
pop
xor
mov
xchg
leave
or
pop
and
aad
and
and
push
adc
pusha
cmpb
in
sub
shr
fsubp
xor
dec
inc
inc
jae
cltd
inc
test
jb
cmpsl
sbb
add
lahf
adc
iret
cmc
sbb
ficompl
cmp
jae
pop
sub
adc
mov
dec
sub
stos
lock
popa
dec
jmp
lahf
nop
test
out
and
lds
fs
push
sahf
cmp
lods
jns
out
lahf
in
in
push
xchg
and
ljmp
repnz
daa
iretw
pop
sbb
dec
pop
add
dec
pop
fbld
sub
jne
push
repz
inc
xchg
cmp
mov
cmp
or
shrb
loope
cmp
rcrl
stc
enter
std
push
adc
mov
out
and
xor
mov
mov
xor
outsl
stos
lea
dec
push
lock
cltd
mov
mov
movsl
or
cwtl
push
imul
aad
ret
outsb
xchg
ja
fs
mov
xor
inc
push
outsl
push
push
fwait
pop
dec
add
ja
and
scas
cmp
or
popf
dec
subb
add
cmc
push
and
cwtl
add
mov
jo
cmp
in
jnp
rcrb
loope
out
ret
mov
out
add
push
xlat
push
sbb
out
aad
std
ja
lcall
xchg
inc
mov
data16
pop
add
mov
pop
dec
vpsubd
cld
and
push
rclb
repnz
repz
adc
inc
cmc
xchg
nop
daa
inc
nop
mov
xchg
and
dec
mov
xlat
push
cmpsl
out
shll
mov
insb
std
dec
and
call
dec
fwait
aaa
loop
mov
add
ja
pop
daa
stos
in
lcall
fucom
adc
dec
xor
pop
movsb
popa
sub
bound
inc
xor
arpl
pop
xchg
adc
cs
adc
mov
and
enter
xchg
stc
out
loope
pop
pop
cltd
enter
mov
jmp
push
adc
arpl
and
sbb
xchg
xchg
movl
jo
lahf
into
push
cmp
mov
shll
and
lea
pop
imul
cli
mov
push
pop
pusha
aad
xchg
clc
cmp
adc
pop
pop
loope
pop
inc
cmp
adc
push
xchg
xor
xchg
sub
jecxz
mov
jnp
mov
negb
pop
mull
das
xchg
rorl
ljmp
and
sbb
inc
xchg
xchg
test
push
pop
aas
dec
adc
jne
pop
outsl
dec
cli
pusha
xchg
aam
mov
loopne
outsl
cltd
mov
enter
mov
les
in
push
jne
leave
in
lock
lods
ljmp
mulb
cmp
lahf
sbb
lahf
imul
fsubr
sub
aaa
div
negb
lock
dec
or
sub
mov
out
jp
sbb
ret
xor
call
xchg
pop
cmpsl
adc
lock
lock
xor
mov
arpl
xor
xchg
dec
ret
mov
out
lods
es
es
lods
scas
mov
aas
push
add
ljmp
in
push
xchg
sub
xchg
sub
outsl
aad
les
mov
xlat
lock
lea
xor
fimull
or
pop
iret
rolb
mov
mov
test
jp
push
sbb
cmpsl
xchg
pop
inc
cltd
jno
mov
add
push
add
dec
or
mov
dec
or
dec
mov
icebp
inc
sbb
push
pop
xchg
sub
dec
push
int3
imul
movsb
loopne
xchg
cmpsl
mov
cltd
jmp
nop
push
das
xchg
mov
mov
insl
adc
aaa
ss
lahf
pop
mov
in
in
outsb
mov
cmpxchg
bound
out
mov
push
push
xchg
js
mov
lret
movsl
sbb
sbb
or
pop
lahf
sbb
add
bound
sti
ret
test
xor
daa
sub
pop
mov
dec
scas
sarb
pop
test
jge
ret
pop
jge
jns
and
cmp
pop
xchg
inc
or
xor
and
fs
lret
mov
pop
pushf
addr16
lods
scas
or
push
sbb
cwtl
cmp
sub
in
pop
push
scas
pop
and
fcoml
mov
pop
add
mov
mov
mov
adc
xor
iret
loope
out
movsl
dec
mov
jl
cmp
sbb
inc
adc
mov
movsl
lods
pop
leave
scas
mov
out
lock
scas
adc
mov
pop
jb
daa
dec
hlt
jnp
repz
jne
arpl
xchg
pop
insb
mov
lds
inc
or
gs
sub
and
dec
lahf
stc
add
inc
xor
push
xor
xchg
pop
addr16
pop
mov
adc
inc
sub
and
adc
out
cs
adc
sbb
rcrb
pop
jg
dec
sbb
test
xchg
test
cwtd
xor
addr16
xchg
xor
ret
sbbb
nop
cmpsb
stc
adc
stos
outsl
je
and
mov
cmp
je
bound
lret
enter
add
call
fcmove
aaa
sarl
xor
rcll
cmp
xor
fwait
popf
inc
pop
lods
xor
ret
and
loop
mov
repnz
jae
int3
add
xor
cltd
and
outsl
cmpsl
test
pushf
hlt
push
mov
movsb
mov
sti
jl
out
loop
out
xchg
lahf
cmc
and
out
pop
bound
xor
pushf
pop
xchg
das
pop
or
test
setb
rorb
pop
jno
sbb
movsl
aam
ret
test
daa
mov
es
rolw
cld
insb
bound
loopne
aad
test
mov
jle
xcrypt-ctr
cmpsl
pop
movsl
xchg
dec
xchg
lea
push
pushf
mov
addr16
fwait
jge
imul
pop
mov
test
test
jnp
xor
cmpsb
es
je
hlt
loop
fwait
sub
pop
pop
push
inc
subl
add
mov
mov
bound
aaa
imul
pop
pop
and
mov
mov
mov
test
in
mov
pop
cmp
ret
outsb
popa
fxch
sbb
pop
cmp
jns
shll
dec
pop
and
fwait
xchg
push
jmp
std
sbb
add
sub
pop
mov
aad
ja
cmp
sbb
aas
pusha
pop
movsl
out
in
xchg
jb
fldcw
push
add
dec
pop
jno
pop
outsb
or
and
push
xchg
or
mov
cmpsl
add
stc
xchg
jge
gs
xor
fstpl
fadds
rorl
addr16
xor
fdivs
or
pop
into
cltd
repz
cs
sahf
mov
addr16
out
xor
cmpsb
push
xadd
push
pop
inc
or
insb
xor
pop
ja
adc
sbb
push
movsb
mov
push
out
daa
xor
cmp
cmp
cwtl
pop
pop
sti
repnz
popa
andl
outsb
sbb
pop
call
jb
inc
adc
jl
gs
gs
adc
jecxz
dec
cmpsl
xor
lahf
push
cmp
inc
andl
push
fidivl
movsb
jo
lcall
xor
popl
call
xlat
stc
push
pop
mov
mov
movsl
xchg
imull
cmp
mov
ret
mov
fimull
out
out
das
xchg
mov
repnz
es
dec
push
push
ljmp
outsb
xchg
and
sahf
imul
sub
sahf
sbb
lods
dec
pop
movl
fisubrl
imul
dec
mov
into
in
das
cli
cld
add
inc
jae
outsl
jns
pop
daa
es
pop
adc
mov
xor
xor
pop
mov
or
out
dec
mov
sbb
in
jne
daa
les
lcall
mov
push
cmpsb
sbb
push
mov
movsb
mov
xchg
rcrb
je
ret
dec
int3
andb
sub
sbb
out
push
adc
sti
lods
cwtl
pop
fldl
stos
jb
loopne
sbb
fwait
dec
pop
cld
pop
jb
mov
cmp
in
xchg
hlt
int
jbe
add
insl
jmp
sub
stos
mov
push
cmp
push
cmpl
popf
popf
push
cmpsl
mov
xchg
add
jns
xchg
test
push
push
imul
aam
cld
jae
push
push
xchg
xor
inc
sub
pop
push
das
outsl
stc
inc
leave
out
push
and
out
pop
mov
pop
ljmp
xlat
xchg
jmp
dec
mov
xlat
ret
ja
mov
mov
rorb
ja
push
movsl
test
ljmp
cmp
fisubl
test
bound
cmp
fisubrl
jle
mov
pop
lret
pop
inc
push
bound
mov
enter
jno
fisubrl
bound
int
testl
lock
push
mulb
xchg
daa
jno
imul
push
xor
imul
in
jno
das
cmp
dec
inc
out
cli
cwtl
add
lock
jno
mov
fwait
cmp
pop
mov
std
pop
data16
cmp
mov
pushf
data16
in
add
xchg
daa
shlb
cmp
lods
sbb
stc
mov
call
outsb
movsl
int3
dec
jmp
mov
lock
incl
fldl
lret
je
lds
roll
mov
jecxz
mov
jmp
movsb
fidivrl
lea
ret
stos
lods
insb
adc
xchg
mov
ret
adc
cmp
push
and
lret
and
sub
lret
gs
imul
sub
and
jae
mov
daa
cmpsl
addl
ds
jmp
outsb
ds
cli
adc
popf
add
jecxz
es
pop
xor
test
insl
movsl
ret
out
jg
mov
xor
imulb
cwtl
mov
xchg
xchg
repz
scas
out
jecxz
sub
in
cmp
push
xchg
xlat
xlat
xor
les
icebp
push
mov
push
add
push
add
test
stos
dec
push
mov
repnz
jle
fmull
sbb
jae
test
nop
loop
fists
jge
xlat
jae
adc
les
out
pop
mov
movsb
inc
movsb
mov
sub
add
push
sbb
or
lea
jge
mov
in
sbbb
inc
push
push
movb
aam
jnp
mov
pushf
and
pop
cmp
xor
cmp
sbb
xor
idivb
mov
push
testl
in
into
fisttpl
inc
repz
int
xchg
and
sub
repz
mov
out
stc
imul
adc
push
orl
jo
cmp
scas
mov
jb
in
and
adc
fs
pusha
jne
pop
push
enter
shlb
xchg
xchg
mov
sti
sarb
sbb
bound
icebp
out
dec
test
ficompl
pushf
sub
dec
dec
imul
or
jmp
bound
dec
subb
shrb
cli
push
sbb
add
loop
sub
je
inc
rorl
dec
int
xchg
movsb
ss
inc
push
fsubr
pop
xchg
xor
fmuls
push
addr16
xor
cmp
jmp
arpl
push
mov
and
arpl
cmp
lret
daa
sbb
adc
xor
lock
out
outsb
sub
inc
dec
push
sub
pusha
adc
xor
xchg
adc
cwtl
cmc
mov
cmpsb
pop
pop
jne
adc
jp
push
and
cmp
or
popf
mov
pop
pusha
cwtl
pop
inc
rclb
fiadds
adc
mov
popf
popa
xchg
push
push
roll
add
add
sub
add
aaa
test
mov
and
fstpl
and
cmp
inc
ret
enter
inc
sub
imul
lcall
xor
arpl
stc
aas
add
push
sub
xor
aaa
push
popf
shl
lds
push
gs
sbb
fnstcw
je
and
mov
add
adc
cmpsb
je
jmp
mov
pop
pop
cld
test
ljmp
cmpsl
and
insl
ss
mov
cmpsl
push
xlat
jmp
mov
and
xchg
jl
jno
les
mov
sti
gs
ficoml
inc
mov
mov
xchg
mov
adc
in
xchg
mov
lahf
daa
adc
pop
mov
sub
int
imul
sbb
mov
sub
xor
in
dec
in
addb
mov
and
sub
xor
inc
out
xchg
aaa
mov
data16
pop
ret
mov
loope
ret
gs
push
add
imul
jmp
and
dec
xor
and
int
cmp
pop
mov
push
push
rorb
dec
pop
addr16
add
jae
cmp
cmp
push
pop
adc
cmp
push
add
xchg
subl
xlat
outsl
xor
ja
mov
cmp
repz
mov
pop
mov
fstpt
dec
pop
rcll
sbb
lahf
mov
negb
lret
jb
xor
js
jns
hlt
les
ret
loop
shr
shrl
pop
jcxz
pushf
add
adc
loopne
pusha
xorl
cmp
stos
pushf
mov
fdivs
xor
cltd
sub
inc
adc
jae
xchg
sbb
push
add
add
icebp
xchg
stc
test
push
mov
dec
jnp
rcll
inc
xor
jl
lock
int
jb
dec
daa
mov
negl
aaa
jno
xchg
arpl
repz
jae
cmpsl
popf
mov
daa
lret
inc
pop
cmp
push
and
rolb
cwtl
pop
incl
mov
movsb
add
jge
imul
enter
or
es
lret
sub
jb
sub
push
jb
fs
negl
ret
rclb
in
pop
shr
inc
push
rolb
cmpl
scas
inc
lock
push
je
orl
iret
sub
mov
jns
mov
and
pop
xlat
aaa
xchg
stos
stc
addr16
out
adcb
inc
push
aam
icebp
movsl
push
repz
sbb
pop
lahf
inc
mov
pop
xchg
mov
dec
repz
ja
mov
repnz
jp
pusha
pop
daa
lea
inc
dec
cld
adc
mov
in
testl
mov
mov
cltd
and
es
xchg
or
mov
mov
dec
shrb
jle
cmp
cmc
in
add
pop
cs
xchg
adc
cs
cwtl
and
insb
push
cld
mov
outsl
mov
fmuls
cs
push
rcll
pusha
push
insl
adc
int3
xor
push
push
aaa
sbb
popa
xchg
cmpsb
or
jg
cld
out
ret
xchg
add
mov
or
inc
je
xchg
test
mov
repnz
jae
jp
sub
es
and
sub
push
mov
pop
jmp
pop
dec
data16
fwait
test
jge
mov
ds
cwtl
xchg
lods
cmp
orb
push
pushf
pop
imull
adc
dec
and
repz
add
jb
pop
mov
jnp
ret
and
or
lahf
loop
add
jl
xchg
test
add
sahf
mov
push
nop
mov
push
gs
mov
inc
inc
dec
addr16
lcall
insl
in
pop
ja
in
ret
cld
in
mov
add
test
inc
push
lret
cld
xchg
cld
shr
fs
or
sub
or
jo
out
mov
ss
popf
dec
sub
rclb
sarl
pop
iret
int
and
fcoml
inc
mov
rcrl
mov
imul
push
inc
add
sub
adc
cmc
or
sub
push
ja
nop
push
sub
fmull
fiaddl
fwait
push
xlat
call
divb
and
jmp
sbb
insl
out
cltd
or
push
push
mov
gs
movsl
mov
xor
popa
aad
push
rorl
shl
add
jb
fwait
dec
test
push
cmpsl
jno
in
leave
pop
or
cli
jg
lcall
outsb
insb
lea
incb
mov
push
inc
sbbl
jg
ja
cwtl
hlt
lcall
lds
sub
dec
es
inc
mov
test
out
cltd
stos
push
jg
inc
push
shl
int3
xchg
shll
fcmovu
popa
movsl
jne
mov
add
in
push
adc
out
sbb
lds
inc
ss
daa
adc
adcl
and
ror
mov
lret
inc
xchg
je
fidivrs
js
and
sub
or
pop
add
dec
sub
sahf
inc
cmpsl
mov
mov
mov
dec
lcall
int
jnp
outsb
xor
or
sarb
sub
mov
mov
sbb
mov
mov
ror
xor
mov
and
push
out
out
ja
push
aam
pop
mov
fwait
mov
insb
test
leave
bound
bound
cs
lcall
push
sub
dec
out
loop
jecxz
push
test
in
dec
pop
mov
adc
push
pop
fs
pusha
icebp
mov
xchg
incl
rclb
jbe
pop
adc
xor
jle
xlat
sahf
in
out
add
and
nop
lods
jle
push
adc
sbb
push
in
mov
stos
rol
xchg
pop
add
fiadds
adc
mulb
and
movsl
or
fcompl
push
and
cmp
and
cmp
add
nop
scas
push
popa
mov
dec
lea
aaa
and
dec
bound
push
je
mov
lahf
push
mov
stos
adc
sbb
push
cmp
jns
fcomps
loop
and
xor
sbb
xor
push
xchg
adc
mov
ljmp
dec
in
rclb
xchg
clc
cmp
call
push
mov
pop
pcmpeqd
jno,pt
mov
loope
mov
push
dec
sahf
jge
inc
sahf
shrb
loope
mov
lcall
sub
repnz
cmp
and
adc
xchg
push
pushf
sbb
rcl
pop
mull
es
out
inc
xor
test
dec
push
xchg
pop
mov
notl
jmp
xlat
mov
outsl
mov
std
xor
ds
in
dec
nop
sbb
addr16
sbb
adc
movsl
fcmovu
in
dec
aaa
jp
cwtl
out
jmp
cmpsb
clc
pop
push
xchg
movsb
cs
xor
cmp
movsl
sbb
movsl
dec
xlat
hlt
mov
sub
sub
fistl
aaa
lahf
lds
sub
jne
inc
xor
jb
jne
xor
loop
nop
test
pop
les
rcll
mov
xor
rorb
push
pop
adc
or
cmp
fisubrl
sub
loopne
mov
mov
adc
int3
mov
xchg
pop
mov
pop
fisubs
ds
adc
mov
xchg
aas
pop
stos
int
pushf
sub
adc
inc
outsb
and
xlat
arpl
out
pushf
stc
mov
stos
cltd
push
fstl
mov
and
xchg
push
pop
add
or
xchg
mov
jge
inc
loopne
jge
mov
nop
dec
xor
imul
andl
xor
adc
scas
jmp
dec
lret
mov
add
loop
sub
push
xchg
xchg
push
jecxz
adc
cltd
lods
fcompl
aaa
mov
movsb
fsubs
cmp
fdivrs
test
add
icebp
in
cmpb
cmc
fiadds
fisubrl
ret
and
popf
int3
push
bound
loopne
mov
fstps
cmpsb
sbb
dec
dec
jne
out
enter
stos
clc
xchg
test
xchg
push
cmp
mov
fcoml
cmpsb
mov
lcall
lds
insl
nop
and
push
pushw
push
add
xor
cmp
pop
push
out
jns
movsb
jp
jnp
pop
and
sub
xor
je
sti
test
inc
or
addr16
fcmovb
fcom
outsb
gs
pop
dec
pushf
insl
pop
adc
pop
mov
push
test
cmp
sub
movsb
and
mov
data16
jge
sub
call
pop
xor
xchg
jns
popf
jmp
outsl
mov
dec
lret
xor
fisttpll
fnstcw
lods
inc
lods
bound
in
xlat
xor
nop
sbb
in
orl
es
xchg
pop
cmp
outsb
mov
xor
push
popa
pusha
mov
add
or
mov
fwait
pop
mov
cs
rcl
pop
decl
lea
jecxz
popa
jecxz
aam
push
imul
pop
pop
nop
xchg
push
loopne
aam
das
out
rclb
and
adc
sub
inc
xor
mov
ror
mov
cmpsl
dec
pop
stos
sbbl
out
lcall
sti
xchg
sbb
cmc
pop
adc
push
xchg
sub
lcall
and
movsl
sub
mov
inc
movsb
sarl
pop
push
jno
loopne
sahf
repz
int
fucomi
ss
adc
out
xchg
int
pop
xor
jo
mov
xchg
out
mov
dec
sbb
mov
xchg
jge
fs
int
pushf
push
daa
xor
jbe
rolb
mov
push
popf
testb
mov
pop
loope
sub
mov
ds
outsl
add
cmpsl
andb
bound
mov
add
imul
xor
popf
dec
jmp
insb
test
lds
loope
rcrl
pop
into
lret
cltd
mov
mov
cmp
outsl
push
fsubrs
pop
sub
or
inc
inc
jns
xchg
and
fists
daa
outsl
fcompl
cmpsb
enter
sarb
inc
mov
pop
iret
sbb
outsb
rclb
mov
mov
je
outsl
daa
push
inc
insb
out
jnp
test
das
mov
movsl
sahf
rolb
xchg
mov
pop
cmp
push
outsb
pusha
adc
mov
loopne
test
push
push
pop
outsl
and
pusha
inc
nop
jns
cmpsl
cwtl
mov
and
fstps
les
gs
and
in
stc
push
popa
jb
mov
daa
adc
and
icebp
mov
iret
xchg
xchg
dec
pop
add
push
and
insb
imul
pop
adc
bound
fistps
dec
shrb
lcall
and
jge
mov
sbb
xchg
in
mov
mov
popa
sub
cmp
push
adc
mov
xchg
mov
lret
dec
jb
cmp
daa
movsb
fcomps
enter
cs
add
adc
mov
sbb
pop
ljmp
inc
gs
cmp
dec
xchg
inc
js
adc
xchg
push
mov
std
mov
mov
loope
insl
test
dec
xor
stos
mov
cmpsl
sahf
cmpb
mov
dec
int
mov
movsl
adc
imul
mov
in
loop
stos
mov
xchg
test
xchg
fs
mov
lea
mov
dec
sub
icebp
cmp
pop
cli
xchg
push
mov
fsubp
fildl
xor
adc
fstpl
jo
jg
in
and
lcall
rolb
adc
push
ljmp
out
in
sahf
jnp
test
and
insb
jne
fnstsw
loope
adcb
inc
inc
mov
data16
pop
std
pushf
lock
andl
push
dec
pop
imull
es
sub
das
popa
xchg
inc
and
loope
bound
test
add
lahf
pusha
test
lcall
sbb
inc
cltd
lock
inc
movsl
push
cs
sti
sahf
fwait
and
dec
jg
push
stos
sarb
xchg
cmc
je
mov
adc
cmpsb
addr16
mov
sbb
and
cmpsl
fsts
insb
mov
xchg
test
or
dec
jo
push
pop
xor
loope
bnd
movsl
push
push
dec
call
lahf
pop
xchg
or
adc
xchg
dec
jmp
jns
xchg
mov
inc
or
addr16
lock
out
iret
fmull
repz
sub
sti
test
cmp
repz
pushf
out
cmp
out
aas
jl
loop
sub
push
dec
push
lret
fdivl
rclb
in
das
rcr
jb
dec
out
data16
lret
sub
inc
lahf
movsb
test
cmp
leave
or
sbb
push
lret
sarb
ror
mov
or
add
gs
add
mov
mov
xchg
repnz
inc
outsl
pop
mov
ret
xchg
fstp
repnz
in
mov
int3
lcall
add
data16
xchg
cmp
and
sub
clc
jecxz
mov
mov
pop
push
out
movsl
cwtl
jecxz
xchg
bound
inc
popf
sub
ret
mov
fsts
out
xchg
inc
inc
cmp
cltd
and
or
sbb
cmpsl
jmp
fs
push
xchg
xor
dec
and
adc
movsl
aaa
arpl
loop
push
adc
add
adc
mov
sub
fisubl
mov
and
jecxz
mov
pusha
mov
sub
out
movsl
in
shll
mov
inc
sbb
inc
sub
fwait
xchg
das
out
inc
pop
xor
and
daa
adc
push
popf
pop
cmpsl
or
push
jle
movsl
imul
nop
out
mov
adc
js
jnp
popf
int3
mov
sub
and
daa
sub
insl
ja,pn
adc
js
iret
mov
jns
pusha
add
push
inc
adc
popf
xor
fildll
mov
push
xchg
rolb
das
lcall
arpl
nop
inc
imul
repz
loopne
mov
cs
insb
xchg
mov
mov
imul
dec
loopne
out
xchg
mov
xchg
or
xor
out
sub
test
xchg
icebp
es
lods
cmpsb
inc
sti
dec
cmp
add
in
es
ja
xlat
addr16
dec
cmpsl
sbbb
lret
popa
mov
sbb
pop
xlat
rcll
aam
adc
mov
push
notl
inc
pop
scas
arpl
repnz
xlat
cmp
rcrb
mov
jo
adc
jecxz
xchg
outsb
gs
lret
xor
and
fwait
inc
test
cmp
inc
or
jbe
cmpsl
cmpsl
pop
mov
push
lret
cmc
out
and
stos
xor
mov
inc
jnp
sbb
cs
js
aam
fsubr
lret
roll
pop
adc
mov
push
jl
mov
xor
adc
leave
pop
scas
test
iret
imul
adcb
dec
adc
pop
jno
mov
sub
mov
jg
sub
lock
fldl
lret
cmp
ja
pop
push
hlt
daa
loopne
es
jbe
dec
insl
mov
dec
dec
loop
pushf
popa
daa
rcrw
mov
cli
into
inc
sub
inc
js
add
pop
out
push
repz
sub
cs
lods
out
jns
mov
jnp
ret
cwtl
lcall
test
imulb
dec
pop
dec
lock
sub
cmp
stc
gs
in
mov
pop
adc
xchg
mov
loop
mov
push
mov
mov
jbe
or
lock
int
push
fisubl
push
cmc
cld
mov
das
ja
mov
push
das
sub
and
xor
sub
mov
shld
and
and
mov
ficoml
gs
repz
pop
movsb
mov
and
or
mov
push
ss
ljmp
sub
test
cmp
inc
movsb
and
insl
push
sbb
call
movsl
dec
and
adc
mov
add
icebp
bound
aaa
arpl
mov
mov
sbb
dec
or
cmpsl
pop
into
outsl
ror
aaa
mov
and
xchg
lret
jmp
arpl
mov
push
aad
mov
arpl
pop
test
pop
cmpsl
jo
xor
pop
pop
jae
jmp
inc
inc
sti
ljmp
inc
cmp
cwtd
mov
xchg
mov
std
lea
ss
sub
pusha
sbb
aas
and
lds
adc
popa
mov
xchg
mov
daa
testl
push
mov
jnp
pusha
movsb
cmp
mov
add
push
dec
push
and
add
aas
outsl
mov
mov
sub
repnz
inc
pop
and
jbe
cmp
cmp
add
pop
and
pushf
insb
and
cmp
mov
aas
aaa
addr16
xchg
lret
movsl
xor
cs
rcll
or
add
cmc
sub
repz
shll
sbb
addl
nop
stos
lods
scas
scas
mov
and
cmp
inc
imul
jo
orb
bound
vxorps
xchg
fnstenv
dec
dec
out
jb
cwtl
mov
imul
iret
cwtl
xchg
mov
pop
pop
jle
or
and
and
mov
jae
es
jne
int
cmc
leave
stos
and
mov
mov
pop
mov
inc
dec
pusha
or
lret
add
fs
movsb
scas
clc
sbb
fstpt
hlt
push
dec
mov
cmp
dec
sbbb
mov
add
imul
sbb
inc
daa
inc
outsb
inc
cmp
popf
scas
and
repnz
mov
xchg
aad
and
mov
lea
pop
test
ret
xlat
arpl
fsubrl
pop
lcall
jge
and
jns
mov
cmpsl
add
cltd
fmulp
loope
loopne
cmp
pop
bound
jo
adc
jmp
aas
jecxz
inc
mov
mov
or
add
mov
xor
enter
ja
sarb
xchg
mov
sti
fnstenv
into
jg
sub
fimuls
stos
sub
inc
push
pop
xchg
ret
or
dec
movsb
ds
xchg
fwait
popa
jle
jo
lods
cltd
and
xchg
movsl
sar
gs
fidivs
cs
mov
mov
and
in
subl
pop
xchg
mov
insl
gs
or
gs
decb
or
pop
cmp
imul
mov
push
sbbl
cs
jae
add
dec
mov
pushf
imul
push
ret
popf
or
sub
mov
out
sbbb
inc
push
popf
sub
pop
notl
mov
cwtl
cli
push
outsb
movsl
jb
add
push
or
jne
loopne
daa
jp
mov
push
cmp
cmpb
pusha
cmp
jp
and
lock
push
lds
loop
or
xchg
push
and
jb
mov
jl
pop
ja
and
mov
cmpsl
cs
lods
shrl
cmc
cmp
inc
xlat
cltd
adc
push
out
popf
add
fimull
sub
cmpsl
push
sbb
stos
pop
cmp
jae
test
fcomps
push
cmpsl
lret
in
xchg
dec
jmp
mov
loop
inc
dec
mov
mov
and
lahf
mov
xchg
add
cmp
notb
and
pusha
fnstcw
pop
pop
jno
shrl
xor
stos
jmp
inc
add
adc
fisubs
mov
sar
cmp
cmc
call
outsl
mov
push
and
fadds
nop
sub
arpl
ret
hlt
shlb
loope
in
jo
fwait
cmpb
cmpsb
sbb
jle
or
jbe
xchg
cmp
dec
and
mov
pop
xchg
or
jmp
out
sbb
add
fwait
ret
leave
imul
pushf
pop
push
jo
gs
shrb
jb
sti
int
cwtl
mov
fwait
repnz
flds
xor
cs
mov
add
mov
cs
out
push
inc
repnz
pop
xchg
stos
hlt
cwtl
jne
jne
sahf
scas
adc
stos
inc
movsb
inc
popa
adc
jecxz
cmpsb
enter
lret
cmc
pushf
gs
out
add
cmc
pop
icebp
cmp
and
popf
mov
dec
test
mov
jb
cmp
and
xor
pop
dec
cmpsb
decl
and
dec
and
in
mov
xor
movsl
pop
pop
lcall
fstl
adc
ja
pop
cmpsl
call
add
adc
mov
jle
sbb
addr16
jno
mulb
mov
xlat
pop
ja
rcl
or
cmp
punpckhbw
out
fldcw
int3
pop
xchg
pop
out
jae
lea
adc
daa
push
mov
insb
arpl
aaa
pop
ss
fdivl
pop
sti
push
xchg
movsl
das
lahf
sub
outsb
aaa
dec
and
adc
mov
push
aaa
addr16
inc
mov
push
cwtl
mov
aas
insb
push
cmp
sbb
nop
mov
mov
loopne
cmc
jecxz
push
lahf
add
and
leave
xchg
out
pop
push
mov
addr16
mov
testl
repnz
xchg
inc
nop
mov
enter
sub
cmp
jb
loop
es
sub
inc
imul
xchg
xchg
xor
and
mov
inc
sarl
jo
xchg
arpl
pop
add
daa
sub
push
dec
jl
xchg
pop
stc
sub
cmp
lcall
jae
dec
lahf
psubb
pop
nop
dec
js
lsl
inc
sbb
jmp
jb
pop
adc
lret
cs
cli
icebp
push
mov
fistpll
cs
add
je
aas
xchg
pushf
popl
xchg
sub
dec
cld
ret
mov
push
pop
daa
jp
pushf
or
mov
push
loope
or
insb
push
add
ja
lret
loopne
stos
push
test
cmp
jg
xchg
repz
out
adc
and
fdivrl
pop
and
add
xchg
mov
pop
xchg
popf
mov
xor
lcall
or
or
adc
push
addr16
sub
dec
mov
imul
xchg
outsl
mov
dec
xlat
xchg
or
imul
adc
arpl
xchg
or
pop
notl
xchg
scas
mov
popf
pop
pushf
movzbl
dec
xor
and
sarl
movsl
out
mov
xor
dec
addr16
and
and
cwtl
test
cld
out
repz
scas
sub
adc
xchg
repz
mov
jo
shll
je
notb
imul
push
cwtl
leave
pop
shl
out
sub
mov
bnd
push
sbb
xchg
scas
dec
je
daa
into
lods
cmpsl
jle
mov
popa
xor
fidivl
adc
jl
push
sbb
mov
inc
lcall
mov
mov
and
push
cli
int
adc
sub
stc
push
cmpsb
shll
lods
in
test
cmc
or
bnd
data16
leave
push
xchg
dec
cld
or
add
jb
push
insb
aad
test
and
sub
pop
lahf
outsl
test
mov
loopne
xlat
fs
add
cmc
es
adc
gs
inc
and
dec
mov
dec
cmc
adc
pushf
shrb
add
mov
xor
or
fmull
xlat
es
sahf
pop
mov
outsl
mov
mov
clc
lcall
jge
movsb
or
call
fsubrl
add
call
cwtl
hlt
aaa
ja
sbb
mov
or
mov
xchg
add
sti
sbb
das
sbbb
in
xchg
mov
aaa
aaa
and
cwtl
dec
popa
fidivrs
loop
pop
cmpsl
aam
pop
sub
jmp
shl
mov
mov
roll
pop
xor
imul
adc
sbb
inc
pop
lcall
pop
ret
sbb
mov
and
mov
scas
imul
out
pop
mov
pop
adcl
pop
data16
mov
push
call
lcall
mov
xor
and
imul
int
stc
dec
pop
lods
xor
jnp
shlb
addr16
sbb
mov
loope
lods
or
and
cltd
sub
je
bound
dec
insb
adc
cmpsl
fists
push
fsubrp
iret
decl
or
bound
inc
push
xchg
and
mov
mov
movsl
pop
mov
sbbb
das
loop
pop
iret
pop
hlt
add
iret
es
cmpl
xor
bound
int
adcl
adc
add
std
mov
stc
arpl
test
arpl
rcll
pop
xchg
mov
pop
and
pop
inc
test
adc
sbb
and
int
mov
mov
fldlg2
out
outsl
gs
push
adc
rclb
mov
fnstcw
and
xor
roll
sbb
enter
nop
nop
pop
notl
leave
cmp
xor
push
sbb
jb
dec
xor
adc
and
jno
iret
imul
pop
jle
cmp
pop
fidivs
je
pop
mov
call
movsb
lcall
lahf
xorb
fs
fstps
jle
mov
stc
cmp
add
xchg
jns
jnp
push
lret
push
das
xor
out
or
outsb
movsl
mov
aam
fwait
xor
ret
out
jl
add
or
mov
xor
mov
fmuls
andl
xor
add
movsl
xor
mov
leave
cmp
xor
adc
cmp
pop
add
mov
mull
js
pop
pop
sahf
data16
leave
in
xor
xchg
idivb
dec
push
movsl
clc
rolb
les
dec
fwait
push
stc
pop
push
lds
xor
dec
cmpsb
cli
mov
inc
push
add
pop
addr16
xchg
ret
je
xor
fnstsw
cs
jae
mov
mov
sahf
test
aaa
and
cltd
push
test
aaa
loope
pop
push
and
loop
pop
in
lods
jno
shlb
icebp
or
xor
pusha
dec
mov
rcrb
sub
jp
addr16
xchg
mov
clc
enter
nop
test
repz
xchg
pop
jbe
lahf
adc
xor
push
dec
shrl
and
rolb
loop
adc
add
xchg
idivb
sub
aad
mov
and
or
add
imul
mov
and
int
movsb
sub
jge
and
popf
daa
cld
setnp
test
adc
nop
xor
enter
sub
cltd
jne
dec
lret
pop
xchg
mov
xchg
push
push
mov
pop
sti
xchg
sbb
fnsaves
fcomp
mov
pop
add
xor
xchg
dec
jp
fisubrs
rcrl
cmpsb
mov
dec
sbb
jnp
and
and
in
mov
mov
adc
pushf
add
adc
mov
and
xchg
inc
cmp
inc
jmp
inc
sbb
in
pushf
push
mov
lods
daa
sbb
lds
in
cld
sub
mov
dec
mov
pop
shl
fcomp
pop
icebp
imul
repz
xchg
sub
pop
ljmp
pop
jmp
shll
rorl
mov
pushf
pop
cwtl
adc
mov
js
stc
sub
sbb
xor
mov
lea
jp
lcall
scas
cli
aam
and
mov
pop
pop
jo
add
aad
lock
dec
push
jne
jg
imul
inc
xor
cmpsb
incl
and
movsl
dec
negl
dec
push
stos
js
es
sub
mov
daa
or
push
out
shrl
movsb
adc
cs
ss
jno
testl
push
daa
out
pop
test
sbb
mov
pop
push
pop
mov
stc
pop
out
ret
mov
scas
fadd
or
pop
xchg
and
fsub
sbb
mov
scas
xor
add
pop
outsb
push
inc
mov
lock
bound
lea
test
or
jl
xorl
sbb
mov
adc
popa
popa
inc
xchg
in
adc
dec
aaa
int
cmp
movsl
cwtl
sarb
das
pop
push
jbe
ja
test
push
mov
clc
jge
adc
pop
adc
add
mov
push
push
fs
push
imul
es
jne
push
push
add
mov
sub
and
scas
enter
xchg
aam
xchg
pop
ror
in
add
cmp
outsl
jo
je
inc
pop
data16
arpl
pop
lock
testl
and
sbb
xchg
movsb
cld
sbb
add
jle
mov
dec
nop
xlat
inc
mov
pop
inc
cmpsl
xor
fistl
ficompl
xchg
filds
jnp
fldenv
mov
mov
insb
pop
pop
mov
lds
adc
jb
adc
dec
addr16
xlat
push
aas
adc
movsb
push
dec
xchg
mov
adcb
xchg
fldt
lock
push
or
xchg
lods
sbb
shll
jns
mov
mov
ret
or
mov
mov
dec
xor
xlat
mov
pushf
in
ljmp
dec
fwait
nop
lret
sbb
pop
xchg
cltd
add
jo
in
cmp
and
mov
adcl
jo
out
scas
lock
jno,pt
push
es
dec
das
imul
mov
aam
mov
and
idiv
daa
and
icebp
aam
push
pop
push
lea
or
repz
pop
daa
ficomps
enter
dec
jecxz
add
mov
into
cmc
sub
jb
aas
jle
pushf
imul
push
sub
mov
stos
leave
xchg
test
dec
aam
mov
inc
shl
test
stos
adc
fidivl
push
fldenv
xchg
movsl
mov
xchg
repz
aaa
xor
push
sub
add
popa
mov
sub
ffreep
test
jecxz
mov
pop
js
das
and
cmc
mov
xchg
pop
jg
fisubs
cs
sub
sahf
push
sub
mov
inc
cmp
shlb
dec
xchg
imul
movsb
or
xchg
push
cmpsl
inc
repz
pop
adc
sbb
outsl
sub
pop
mov
push
int
in
lods
in
fsts
mov
mov
jne
or
xchg
xor
sub
jne
daa
sahf
cmovl
ds
adc
nop
cwtl
and
push
lret
xchg
movsb
js
jb
cmpsl
es
aad
and
inc
movsb
js
frstor
andl
pop
shll
fs
idivl
outsb
enter
lock
pop
adc
sahf
inc
mov
inc
xchg
es
fldcw
and
xor
fwait
int
inc
mov
and
cmp
push
out
jg
out
lods
sub
das
add
inc
inc
fucomip
pop
mov
or
bound
andl
test
arpl
andb
das
cmpsl
sub
cmp
subl
sbb
mov
rorb
lea
pop
or
sahf
and
lret
lods
xchg
sub
jb
popa
xchg
insb
add
movsl
dec
inc
test
mov
jae
inc
rolb
jmp
ss
cmpsl
call
pop
push
jno
add
pop
xchg
push
adc
loopne
fwait
out
lcall
or
sbb
push
out
je
pop
out
popf
outsb
xchg
mov
std
cmpsl
test
iret
fistpll
cmp
insb
test
addr16
dec
gs
dec
lret
addr16
movsb
lahf
push
icebp
loop
insb
and
lea
jnp
jae
aad
roll
push
mov
inc
cmp
inc
pop
push
es
in
mov
fwait
ja
fmull
clc
aad
mov
cli
pop
mov
add
mov
ja
jg
std
sub
push
sub
jl
bound
and
rcll
je
inc
sub
pop
leave
xchg
enter
ljmp
cltd
js
fcoms
loop
test
jl
subb
jle
push
call
scas
push
imul
cmp
arpl
and
push
repz
shrb
aam
adc
repnz
mov
aas
mov
inc
mov
inc
es
pop
xor
cmpsl
xchg
pop
sbb
das
xor
pop
push
fs
das
inc
adc
nop
push
dec
sub
xor
mov
sub
push
or
andl
rolb
mov
ja
mov
enter
lret
popa
sub
xchg
dec
xor
mov
xchg
add
repnz
mov
push
jnp
insl
and
mov
xor
add
movsl
jmp
push
shrl
mov
dec
aaa
shll
inc
pop
and
lods
testl
out
sub
test
mov
inc
and
imul
cli
jb
cs
jns
cli
xor
stos
push
or
lret
mov
inc
inc
aaa
push
jne
and
xchg
pop
push
push
loopne
sbb
imul
pop
icebp
mov
repnz
inc
xor
push
aas
ret
sbb
fcomip
add
mov
mov
aas
iret
test
xchg
movsl
dec
icebp
push
jg
cwtl
push
cmpsl
and
mov
adc
movsl
adc
fstps
out
push
mov
fldcw
shl
aam
nop
ret
sbb
xor
in
lock
enter
adc
mov
dec
push
pusha
adc
aas
int
negl
inc
popa
lods
aad
pop
pop
int3
jp
mov
movsl
in
jb
xchg
pusha
fs
pop
xor
popf
jbe
cmp
pop
push
adc
pusha
inc
cmp
ret
pop
in
sarl
aas
add
imul
repnz
sub
test
shll
mov
bound
lds
aas
adc
mov
daa
xchg
pop
xchg
insl
imul
cmpsb
out
xchg
imul
daa
out
pop
add
mov
insb
push
repz
pop
movsl
inc
mov
adc
push
rcrb
xor
and
adc
dec
inc
pop
out
stos
movsl
pop
add
inc
cwtl
scas
mov
daa
adc
scas
adc
push
test
addr16
aaa
jge
xor
mov
imul
insb
push
fimull
adc
cmp
mov
lcall
imul
and
test
jmp
in
dec
mov
ret
cmpsl
pop
mov
jbe
jp
and
jmp
dec
sub
ret
fs
cmp
push
movsl
shll
mov
aad
add
mov
inc
sahf
push
push
push
or
pop
mov
icebp
xor
lods
jo
test
movsb
clc
push
gs
shrl
adc
ret
aad
cmpsl
sub
jnp
in
js
jb
mov
mov
xchg
rcl
mov
xor
adc
cli
mov
ljmp
jns
pop
adc
arpl
pop
ret
insl
pop
push
jle
xor
les
imul
inc
sbbl
insl
jne
lahf
rclb
les
lret
call
dec
xchg
insl
jge
mov
add
pop
mov
xchg
daa
fdivrl
movsl
ja
psrad
cs
ret
mov
xchg
int
pusha
sar
addr16
inc
fwait
pop
cmp
loopne
cmc
ficoml
push
leave
sub
and
mov
fimuls
inc
mov
push
fs
pop
subl
sub
pop
nop
test
push
or
out
iret
pop
cmpsb
mov
pop
sub
xchg
mov
or
les
popa
sub
adcb
push
das
ret
dec
inc
pop
or
ret
loope
mov
cwtl
xchg
push
cmp
ljmp
lret
mov
std
and
inc
xchg
or
add
fcmovb
dec
cs
or
jno
loop
dec
les
imul
cmp
iret
js
mov
es
rorb
adc
movsb
pop
push
or
add
aaa
out
inc
sbb
mov
inc
push
rorl
xor
int3
pop
xlat
scas
in
fwait
call
ss
mov
mov
push
fs
aad
loopne
or
fnstenv
pop
dec
in
pop
dec
sahf
mov
daa
adcb
ret
bound
pop
jge
mov
rcrl
jbe
sub
adc
pop
test
and
cmc
push
aaa
adcb
je
fldt
nop
sbb
int
pop
xchg
mov
shlb
adc
and
mov
jae
xchg
ljmp
daa
loop
out
and
ds
icebp
and
aad
push
adc
pop
fisubs
or
inc
fs
aad
and
push
rorl
mov
movsb
outsl
lahf
jb
ds
inc
sahf
mov
fldcw
jnp
pop
jl
gs
aaa
sub
xchg
xor
divb
lds
into
mov
xor
repnz
push
testb
push
mov
push
and
mov
loop
and
int3
jl
inc
enter
sub
add
mov
incb
lret
outsl
sub
add
adc
cmp
lret
inc
sub
lods
fistpll
cmp
push
cli
and
push
scas
adc
xchg
lds
popa
sbb
fisttpl
shlb
push
ss
mov
or
ret
mov
inc
call
fs
out
sarb
sub
popf
arpl
mov
push
push
out
fisubl
aad
adc
ds
pop
adc
popf
les
xchg
cmpsl
jl
movsb
daa
data16
mov
pop
push
xor
bound
dec
out
cmpsb
cmp
cld
fmulp
push
lret
push
xchg
mov
cmp
lret
clc
movsl
int3
insb
mov
das
jbe
mov
lcall
insl
test
imul
pop
aas
ds
adc
ret
lret
icebp
dec
daa
add
xchg
fsubs
inc
mov
insl
xchg
sbb
add
lea
push
aaa
pop
dec
fsubrl
pop
and
jne
add
out
repnz
repnz
scas
pop
and
pushf
inc
pop
leave
test
adc
daa
scas
popf
push
sub
adc
les
pop
mov
int3
xchg
jae
pop
in
push
xor
xchg
inc
rclb
movsl
mov
and
leave
enter
test
pushf
jnp
mov
mulb
dec
in
xor
push
push
aad
test
push
idivl
inc
jmp
mov
mov
lock
push
js
and
test
test
cld
daa
xor
scas
mov
adc
cs
lret
jecxz
inc
push
inc
fbld
cmp
sbb
bound
ss
push
pop
cmc
fistpll
dec
roll
and
lret
movsb
rolb
xor
arpl
cmp
push
fiadds
inc
xor
nop
jmp
in
xchg
in
or
adc
pushf
data16
jne
pop
cwtl
mov
adc
pop
push
cmp
cmpsb
xchg
mov
pop
mov
or
outsb
xchg
push
shlb
fwait
xor
pushaw
das
sbb
arpl
pushf
ljmp
pusha
xlat
insl
out
fwait
jl
mov
fmuls
pop
cmp
test
mov
xor
inc
mov
aaa
daa
push
sahf
ljmp
ss
insl
mov
pusha
stos
vmovntps
push
cmp
sahf
shlb
mov
iret
shrb
xor
je
dec
mov
int3
daa
inc
lods
sbb
push
popa
out
cmp
fadds
js
lods
das
xchg
rolb
xchg
xchg
aam
xor
push
inc
jp
shrl
mov
aaa
jmp
cli
mov
xchg
sahf
push
pop
mov
cmpsl
scas
loopne
out
pop
addr16
jl
xchg
inc
and
imul
xor
pop
mov
cmpsb
test
cmp
jmp
mov
lods
loope
mov
subb
push
clc
insl
pop
sti
int3
dec
mov
or
and
cmp
incl
xchg
and
xor
popf
ret
and
lock
stc
into
stc
mov
fwait
bound
inc
or
popf
pop
mov
dec
cmpsl
jmp
ljmp
test
xchg
inc
in
pop
jecxz
add
movsb
pop
inc
fsubl
or
cltd
and
mov
and
pop
xchg
lods
xchg
dec
add
into
aas
and
repnz
lea
test
bound
sbb
mov
and
out
push
cli
ja
inc
test
pop
pop
push
fs
gs
inc
outsb
repz
in
mov
inc
pop
dec
insb
xchg
aad
pushf
insb
lea
dec
divl
lods
fsubrs
and
cltd
dec
cmp
popf
jb
sbb
insl
inc
and
push
iret
and
push
imul
mov
test
adc
and
and
loope
ja
outsb
imul
cmpsb
mov
mov
out
lods
pushw
aam
pop
loopne
lcall
push
loopne
rclb
jle
xchg
aaa
sbb
addr16
bound
jl
packuswb
sub
cmpb
mov
negl
pop
pop
ret
cmp
fwait
cmp
or
aad
push
in
shlb
pushf
lret
cld
repnz
xorl
subb
mov
xchg
movsb
test
scas
dec
lock
or
aaa
or
out
lahf
je
cmpsl
das
push
loopne
ret
and
gs
fisttpll
leave
sbb
fcmovu
or
jmp
popa
push
and
xor
lea
sahf
xchg
inc
xchg
sbb
xchg
and
dec
out
xor
pop
fisttps
ja
jmp
xchg
jne
push
mov
sub
or
ja
sbbl
pop
adc
daa
mov
fs
das
test
inc
mov
lahf
inc
fnstsw
mov
dec
fwait
pop
mov
push
push
pop
and
inc
into
sbb
ljmp
ja
jno
cmpsl
bound
add
out
xchg
daa
stos
xchg
ja
insl
int3
addr16
xorl
out
in
cmpsl
push
imul
pop
addr16
lods
cmp
clc
or
adc
sub
adc
sbb
enter
clc
adcb
dec
sub
stc
in
and
xchg
mov
into
sbb
loope
inc
xor
loop
fwait
jge
mov
lcall
popf
mov
addr16
cld
pusha
push
pop
adc
jo
sbb
mov
mov
aam
jle
jb
xchg
ret
mov
xchg
jae
pop
mov
mov
outsl
pop
enter
xchg
lods
sub
frstor
inc
outsl
jo
fisubrs
or
fwait
pusha
mov
jb
cmpsl
dec
jnp
jns
cmp
in
lret
add
pop
mov
scas
or
push
loopne
cmp
aam
or
pusha
insb
sbb
es
sbb
cld
int
mov
cmpl
lock
std
mov
lods
neg
xchg
xor
lds
dec
lds
inc
jg
mov
mov
sarb
push
pop
idivl
insb
push
sbb
push
mov
xor
dec
mov
repz
into
mov
into
add
fs
popf
ret
push
mov
in
sub
fsubrl
pop
add
addb
xchg
jo
fs
jne
jo
and
push
jns
xchg
mov
movsb
cwtl
cs
imul
rep
pop
sbb
fistps
and
xbegin
cwtl
xchg
out
dec
cli
sub
pop
cmp
dec
pushf
loopne
gs
xchg
cmp
hlt
pop
repnz
xor
mov
xor
inc
adc
imulb
bnd
bsr
inc
repnz
xchg
adc
ret
and
sub
adc
data16
xlat
ljmp
in
push
and
xlat
repnz
imul
and
pop
xor
ret
lcall
mov
jnp
sub
cmpsb
sar
ds
pop
cmp
aaa
fidivrl
ret
cli
ret
leave
adc
xchg
lcall
push
repnz
push
pushf
lods
fcmovu
iret
out
xchg
test
mov
jne
and
xlat
movsl
push
insb
push
xorl
repz
cmp
pop
cmp
adc
test
rcll
xchg
mov
hlt
dec
sbb
adc
cmp
fcoms
xchg
je
sub
mov
or
push
aaa
mov
push
test
fcompl
das
in
xor
pop
sub
xchg
add
rolb
xchg
test
bound
jge
sbb
js
sub
pop
sbb
pop
sarb
sbb
cltd
shrl
and
fwait
pop
ret
adc
dec
push
rcll
sub
inc
nop
sbb
out
rclb
andl
cltd
or
cmp
jp
adcl
fptan
movl
aas
adc
stos
fnstenv
mov
mov
push
jg
movsl
insb
inc
bound
mov
jno
scas
xchg
inc
push
scas
out
out
cmp
mov
out
jg
scas
leave
iret
mov
mov
mov
fimull
xor
lcall
roll
test
sbb
icebp
icebp
gs
nop
and
adc
lds
push
xchg
sub
shlb
dec
gs
xchg
cmc
pop
jnp
push
lock
daa
sub
clc
xor
popa
cmpsl
nop
leave
out
aaa
sub
xor
shrl
fmuls
iret
insb
fs
gs
jg
lcall
cmp
cs
fadds
mov
scas
add
or
outsl
pop
push
xchg
sar
or
test
bound
mov
jg
lds
cmpsl
mulb
xchg
pop
cmp
repz
lods
in
or
and
cmp
push
push
or
sbb
xor
filds
rclb
clc
pop
pop
xorb
movsl
pop
mov
pusha
mov
test
fcmovnu
push
out
test
sahf
movsl
js
in
inc
mov
rcr
notb
mov
push
out
pushf
loope
leave
cmp
mov
dec
sub
mov
imul
cmp
lret
push
cmpsb
iret
popa
sbb
das
repnz
push
mov
sub
xchg
andb
imul
xor
and
lods
hlt
pushf
pop
and
xorl
outsl
sub
mov
orl
and
addr16
lcall
xchg
pushl
imul
fwait
sbb
test
dec
out
loop
test
pop
mov
pop
js
and
repnz
subb
fldcw
mov
movl
jp
jp
in
outsb
cld
mov
ret
mov
pop
xchg
out
xor
xchg
jo
xchg
xchg
add
mov
xlat
out
sub
mov
enter
aaa
in
pusha
pop
xchg
jmp
mov
or
mov
and
dec
xor
outsl
add
push
mov
inc
aaa
iret
push
imul
push
jle
cli
and
push
sbb
arpl
cmpsl
and
sub
daa
mov
inc
mov
xchg
mov
mov
push
pop
pop
out
call
and
sbb
popf
mov
gs
xchg
and
stos
adc
mov
mov
xchg
hlt
inc
iret
int3
push
addr16
mov
xchg
int3
sbb
nop
mov
and
adc
sbb
sahf
dec
adc
push
popa
aaa
inc
jmp
repnz
cwtl
xchg
mov
lods
neg
dec
outsl
lods
popa
popf
xchg
mov
repnz
pop
adc
in
pop
cmpl
outsl
fisubs
mov
xor
js
lahf
pusha
pop
daa
dec
aaa
push
pop
bound
repz
repnz
jp
rcr
out
ljmp
lcall
xchg
jg
repz
dec
cmpsb
cmp
cli
movsl
stc
andl
mov
push
gs
lahf
out
pop
out
mov
aad
leave
xchg
mov
jmp
out
sti
push
mov
imul
inc
jle
jbe
sbb
daa
cmc
fistl
mov
xchg
insb
je
cmc
test
ja
fsubl
mov
sub
xor
je
ret
push
loope
pop
inc
dec
fs
out
mov
push
lcall
mov
outsb
leave
inc
pop
add
movsl
adcb
testl
mov
sysret
lret
imul
fstpl
sub
std
jmp
in
insb
movsl
cmpsl
movsb
inc
push
data16
repnz
iret
sbb
out
mov
sarl
lcall
jmp
addr16
aad
outsb
jl
pop
push
inc
cltd
dec
sbb
rcrl
clc
outsl
loope
push
imul
pop
jbe
sub
jns
cwtl
ljmp
icebp
out
cmp
dec
xchg
insl
fcoms
test
mov
nop
movsb
and
in
push
or
loopne
push
jne
jns
inc
sub
sub
aad
pop
std
cld
push
mov
testb
jmp
add
or
repnz
pop
xlat
daa
inc
imul
lock
jo
xor
xorb
lea
add
jbe
push
aaa
imul
mov
adc
les
imul
pusha
and
in
xor
fwait
popa
xchg
or
imul
and
sbb
in
mov
in
inc
jae
add
mov
pop
dec
adc
and
dec
xchg
xchg
ret
stc
fisttps
and
shll
les
xor
push
ret
mov
pop
lcall
mov
dec
test
xlat
inc
pop
out
dec
les
and
call
sub
inc
int
sbb
shl
push
xor
imul
testl
lds
outsl
aad
pop
cmp
stos
dec
push
out
push
daa
xor
jno
inc
sub
je
add
mov
push
pushf
push
xlat
jb
fisttpl
mov
pushf
mov
mov
sbb
or
inc
xor
cmpb
in
pushf
dec
test
andl
add
sub
fmuls
inc
test
cmpsl
jb
shlb
adc
and
pushl
ss
daa
shrb
test
aaa
mov
inc
std
jl
popf
mov
sbb
imul
inc
cmp
pop
and
notb
divl
aam
addr16
xor
sub
push
or
imul
hlt
jne
xor
ljmp
das
nop
mov
cmp
push
dec
pop
movsb
jle
repz
addb
add
out
inc
rcpps
mov
lret
aam
popa
pop
lods
mov
pop
out
lcall
pusha
cmc
jne
movsb
mov
mov
inc
jl
push
push
xorb
fs
and
mov
dec
lcall
outsl
lcall
cmpsl
mov
pushf
jnp
mov
gs
cmc
fldt
pop
aaa
mov
imul
imul
and
xchg
repnz
cmp
stos
rol
add
mov
stos
clc
enter
out
aad
jmp
cmpsb
cwtl
inc
outsl
and
push
and
mov
mov
ss
push
aam
sub
sub
cmp
andb
sub
sub
js
into
in
insl
or
cmp
pop
fs
sahf
les
jo
repz
daa
mov
lock
pop
xchg
subb
pop
js
paddsb
cs
push
mov
xchg
and
push
xor
ss
push
jecxz
popa
push
cwtl
mov
insb
inc
mov
xor
or
xor
nop
lods
mov
and
and
xchg
xor
push
dec
inc
sarl
push
lcall
lock
daa
pop
clc
cwtl
pop
cmp
test
daa
xor
cld
outsb
xor
int3
dec
mov
xlat
xchg
xchg
and
inc
or
popa
ja
ret
mov
jns
into
repz
jbe
pop
cmc
outsl
in
outsl
das
out
inc
push
xchg
jmp
adc
fcompl
rclb
and
sti
inc
movsl
fsubr
insl
fstpl
add
shrl
mov
lea
sub
dec
bound
aas
popa
aad
push
xor
sti
mov
lods
shrl
pop
xor
cmp
test
lea
pop
jno
iret
js
push
shl
pop
sbb
jecxz
jno
lret
sbb
inc
sub
cltd
jns
add
pop
xlat
inc
and
jno
cmp
adc
push
jmp
jb
mov
and
xor
push
push
pop
add
or
dec
and
pusha
ret
jecxz
push
mov
shrb
adc
daa
repnz
jle,pn
push
aaa
push
in
in
mov
and
ds
jecxz
das
repnz
dec
xor
mov
push
mov
jmp
dec
je
jg
lods
push
cmpsl
loopne
jbe
adc
xchg
arpl
push
mov
push
ja
lahf
pop
rorl
adc
cltd
lcall
movsl
dec
push
xchg
dec
lret
bound
lods
mov
push
orb
mov
xchg
jecxz,pn
and
movl
scas
stos
and
jnp
add
mov
rol
xor
lahf
add
pop
das
aaa
mov
lods
lds
mov
cmp
outsb
cmpsb
mov
xchg
mov
insl
and
inc
hlt
add
mov
out
and
test
shll
aam
xor
mov
mov
pop
addr16
int3
xchg
int
mov
repnz
adc
addr16
xlat
repz
mov
test
imul
out
fcomi
sarb
add
mov
mov
gs
insb
xor
push
xor
cmp
adc
fsubrl
lcall
test
ds
jae
stos
xchg
fldt
xchg
pop
jb
and
sbb
mov
and
push
jne
jb
xchg
insb
iret
std
inc
and
add
jae
out
cmpsb
jmp
push
pop
sbb
jns
das
cmpsl
frstor
jb
mov
popa
sub
jo
mov
cmp
push
add
jmp
or
popa
je
or
xchg
cmp
pushf
stos
xor
xor
inc
pop
mov
sub
xchg
ret
xor
mov
mov
test
bound
add
sbb
sub
jne
repz
add
and
cmpsl
cmpl
sub
testb
sub
push
orb
pop
js
adc
sahf
aaa
bound
mov
push
xlat
pop
jno
inc
sub
ficompl
adc
xor
ret
sbb
cmp
sbb
add
imul
fiadds
mov
jg
adc
push
rcrb
mov
cmc
mov
loope
cmc
lcall
inc
jp
cmp
data16
dec
xchg
std
lret
fs
push
jl
pop
addr16
repz
jo
push
mov
add
arpl
out
add
sbb
imul
xchg
push
dec
adc
or
xor
test
inc
sarl
mov
sbb
loopne
xor
mov
inc
das
mov
ss
adc
dec
mov
xor
jnp
jle
mov
add
aad
mov
sub
pop
xchg
pop
inc
pop
es
inc
xchg
lods
pop
mov
insb
test
xor
jmp
push
push
adc
mov
mov
ja
push
in
adc
and
mov
jg
push
inc
pop
imul
jmp
lret
nop
movsb
aad
push
cmpsb
scas
or
or
fs
flds
fwait
aas
add
push
mov
shlb
adc
ss
icebp
adc
pop
daa
push
loopne
sahf
adc
pop
cld
cmc
push
and
aas
scas
shlb
xchg
mov
mov
lods
sti
in
fistl
push
lock
mov
fcompl
mov
and
lea
mov
jne
sub
stos
ss
pop
dec
pop
inc
ret
jno
pusha
xchg
scas
cmp
rolb
test
and
sbb
iret
and
outsb
mov
aas
test
dec
jns
in
out
mov
aad
repnz
movsb
xchg
or
adc
pop
loopne
push
pusha
imul
lods
daa
cmpl
xchg
fldenv
shrb
pop
xchg
lea
jl
bound
adc
add
mov
cmp
lcall
aaa
test
jge
add
aad
xchg
sbb
fbld
dec
lcall
pop
adc
and
dec
into
mov
jnp
pop
pop
out
xor
imul
push
out
push
mov
add
dec
cwtl
fisubrs
test
and
inc
gs
jno
shlb
jne
mov
andb
mov
out
lods
hlt
or
loopne
loop
movb
mov
fldenv
xor
xchg
jmp
push
or
insl
and
adc
mov
xor
adc
sbbl
rclb
xchg
pushf
std
addr16
negl
cmc
sbb
idivl
and
cmpsl
daa
lock
or
outsb
orb
test
cmc
mov
xchg
and
stc
jb
cs
sub
pop
xchg
cmp
pop
xchg
adc
xor
test
inc
xorl
aam
or
outsb
ja
cwtl
bound
mov
addr16
mov
xor
push
daa
ja
test
repnz
sub
inc
fisttpll
js
or
jmp
push
push
pop
sbb
inc
fwait
xlat
sub
add
fs
push
loope
jne
enter
cmp
mov
cmpb
inc
das
popa
inc
add
lds
in
andps
push
shll
dec
gs
add
pop
mov
fs
pop
daa
add
test
fmul
adc
push
pop
mov
daa
jns
dec
lea
rcr
and
aaa
ret
es
mov
and
xor
loop
cmpsb
shll
daa
mov
mov
push
bound
sbb
adc
fwait
mov
xor
push
mov
mov
mov
lods
adc
push
inc
lea
fsts
pop
into
daa
aad
repz
jl
mov
lock
inc
in
mov
fwait
pop
sti
inc
pop
push
cmp
mov
inc
and
pop
out
mov
iret
and
and
inc
scas
sbb
fwait
dec
fwait
in
das
pop
mov
jle
xchg
or
or
je
mov
mov
popf
std
lcall
and
dec
stos
push
repnz
jb
xchg
movsl
mov
insl
scas
mov
mov
fs
mov
shll
ja
je
out
idivl
jb
popf
mov
loop
imul
pop
and
and
and
jno
adcb
repz
fs
add
out
mov
sub
sub
mov
pop
mov
sub
cmp
out
iret
and
mov
mov
ja
cld
data16
mov
mov
xchg
xlat
cmp
call
push
lcall
lea
outsb
aad
mov
mov
mov
lret
inc
push
cmpsl
call
test
sbb
pop
xor
js
and
test
pop
aaa
shrb
in
cmp
jo
bound
fnstcw
pop
rcrl
cs
adcb
daa
repz
pop
scas
scas
push
add
mov
cmp
js
lret
adc
stc
iret
lock
sub
in
mov
imul
aad
jge
pop
sub
loope
cmpsb
pop
in
ja
pop
xchg
jns
insb
dec
pusha
push
repz
dec
pop
loope
lods
decb
ljmp
test
insl
mov
in
sti
inc
sub
ja
faddp
lock
in
jl
adc
in
enter
fmuls
addr16
stc
jmp
addr16
cltd
add
pop
push
mov
popf
pop
mov
mov
ljmp
add
gs
and
fcompl
daa
adc
cmp
inc
fcomp
shlb
fimull
into
enter
test
test
push
das
scas
sub
and
jae
push
mov
push
les
add
leave
imul
insb
xchg
xchg
mov
mov
popa
mov
jne
test
dec
mov
aad
mov
cmpb
cmc
pop
mov
aaa
aaa
hlt
sbb
popf
fwait
mov
mov
xor
notl
adc
sub
pop
xor
test
shll
adc
sub
cmpsl
cwtl
sub
xchg
insl
movsl
xor
jbe
fldcw
xchg
xchg
mov
pusha
out
in
push
sarl
pop
cltd
pop
jge
lods
mov
inc
push
jl
imul
jle
cmpsl
mov
push
and
scas
test
sbb
subb
push
fsubl
pushf
adc
xlat
mov
insl
fstl
leave
pop
rclb
mov
arpl
data16
bound
pop
les
pop
repz
mov
arpl
add
rcrl
fnsave
xchg
xor
mov
add
out
jbe
lds
xchg
sahf
loop
xchg
sbb
adc
orb
mov
mov
fwait
inc
ja
stos
pop
pop
inc
cltd
push
lods
and
jmp
dec
push
outsb
mov
aas
pop
loopne
test
cwtl
les
test
push
mov
cmp
rcrb
imul
add
test
sbb
out
fcoml
mov
mov
xchg
pop
xor
pop
sbb
icebp
xchg
imull
into
push
dec
sahf
sub
jb
jo
ja
repz
sub
xchg
jae
clc
mov
jnp
test
xor
sbb
test
movsl
pop
daa
aaa
clc
fbld
jb
or
repnz
jecxz
icebp
sub
idivl
adc
jne
xor
mov
cld
mov
mull
xchg
sbb
cli
pushf
xchg
fsubrp
add
call
jae
addl
mov
jb
mov
sbb
lea
mov
fmuls
mov
adc
lcall
sub
or
and
cmpsl
mov
pushf
stos
lahf
jno,pt
xchg
adc
test
scas
mov
xchg
mov
repz
enter
ret
mov
or
movsb
test
xor
mov
and
lods
aaa
push
inc
ss
test
movsb
mov
sub
lods
pop
xchg
movsl
mov
inc
sub
ljmp
sub
push
jne
cmpsl
sub
test
pop
adc
pushf
xlat
lahf
stos
inc
and
addr16
mov
loop
jmp
addr16
jmp
in
mov
push
inc
shlb
fwait
arpl
int3
cltd
push
cmp
adc
test
pop
cmpsl
ja
cmp
int3
ret
adc
repz
mov
cmp
jno
lea
into
lcall
mov
dec
iret
xchg
sbb
fwait
out
adc
pop
out
push
xor
das
cwtl
mov
and
sub
xchg
fwait
es
cli
cltd
movsl
jnp
std
mov
and
fldenv
mov
outsb
xlat
lock
fwait
mov
popf
mov
daa
add
mov
dec
in
cli
cmpsb
cli
and
push
mov
dec
xor
inc
inc
lahf
hlt
imul
insw
push
popl
movsb
inc
xorl
daa
mov
setg
bound
add
outsb
push
jo
mov
xor
mov
out
jp
daa
add
push
fistpll
movsb
loopne
popa
arpl
pop
pop
test
mov
loope
addr16
pop
pop
shl
hlt
gs
lret
outsl
adc
xor
jo
cmpsl
into
sbb
xchg
cwtl
push
daa
or
cmp
mov
loop
xor
mov
xor
mov
daa
vaddsubpd
adc
loopne
inc
int
ret
push
dec
jl
push
mov
inc
mov
lods
pop
xor
call
out
rorl
sub
fisubl
sarl
int3
cld
outsb
xchg
mov
push
addr16
test
addl
adc
js
xor
cltd
mov
mov
pop
outsl
das
popa
outsb
daa
cld
mov
jmp
stos
dec
inc
rclb
bnd
xor
repz
orb
push
repnz
jb
dec
lret
scas
out
jno
bound
leave
sub
addr16
jns
shl
cmp
cmp
or
and
mov
aad
add
and
data16
push
inc
cmp
ljmp
push
jbe
mov
push
lret
in
ss
movsl
cwtl
pop
jnp
sub
jbe
jle
jmp
fisttps
dec
push
and
mov
fwait
pop
adc
push
mov
inc
dec
repnz
adc
cmp
dec
mov
ficoml
jno
xor
mov
je
shlb
inc
outsl
in
aaa
adc
subl
jle
insl
xor
imul
mov
mov
push
and
rclb
pop
cmpsl
test
outsb
lds
in
movl
repnz
fmul
std
xchg
cmp
and
pop
mov
inc
jnp
enter
repnz
inc
test
xchg
cmc
and
mov
test
xchg
out
inc
cld
sbb
dec
enter
xor
add
fwait
dec
loopne
sbb
push
sar
rcl
jne
out
imul
cmpsl
mov
fcmovu
sbb
and
adc
pop
inc
ficoms
bound
aaa
xchg
sahf
mov
pop
and
enter
mov
xor
sar
mov
push
popa
lret
pushf
dec
mov
push
bound
inc
xlat
inc
data16
cwtl
inc
push
out
fs
push
pop
jbe
bound
sbb
push
aas
insb
std
sahf
cmp
ret
sub
sub
lahf
clc
pop
mov
xor
mov
enter
fsts
scas
push
cs
add
ljmp
fwait
xor
push
addr16
jmp
lcall
jg
push
add
sub
popf
add
add
push
adc
mov
cmc
cmpsb
pop
cmp
sbb
popa
cmp
les
iret
cmpsl
and
mov
xor
cmp
pop
inc
loopne
divl
loop
fwait
cmp
insl
add
or
ds
fs
lods
mov
and
push
sahf
dec
xchg
in
mov
pop
sbb
xor
dec
mov
inc
hlt
mov
mov
sbb
aam
in
icebp
jbe
lret
jmp
or
pop
push
cmp
test
es
inc
jns
ja
or
test
movsb
daa
push
pop
push
ja
notl
in
sub
addr16
adc
xor
push
cmpsb
push
inc
mov
jg
stos
shll
and
jecxz
dec
mov
jge
xor
inc
mov
sahf
out
icebp
sub
shl
push
xchg
xchg
mov
pop
and
push
insb
xchg
sub
push
bound
mov
movsb
sbb
jno
lea
inc
out
mov
mov
outsl
xchg
int
and
jg
or
gs
cmpsl
cmp
inc
pop
aas
stos
xchg
cmp
bound
push
cli
or
mov
cs
and
cmp
mov
nop
movsb
xor
shlb
jns
pop
popa
insl
adc
cwtl
daa
out
icebp
jb
inc
cmp
aas
push
jecxz
je
dec
add
pop
inc
imul
jo
testb
mov
sub
push
inc
and
cli
fnstenv
loopne
push
cmpsl
cmpsl
lea
push
in
and
shl
cmc
mov
add
mov
pop
mov
loop
lds
movsb
add
repnz
fnstenv
mov
lret
ret
pop
rcrb
xor
daa
daa
jb
mov
xchg
scas
lcall
push
outsl
aam
lock
pop
mov
pop
bound
ljmp
push
dec
test
jo
insl
in
mov
adc
stos
popa
push
shlb
hlt
pop
popf
jns
into
mov
sub
jnp
scas
inc
and
hlt
aaa
xchg
or
push
cmpsl
or
movsl
push
jl
or
xor
cmovns
div
sub
inc
push
ds
faddl
aad
and
scas
loop,pn
dec
fstp
rcll
gs
and
push
add
pushf
je
jmp
imul
dec
sbb
aaa
sbb
dec
add
mov
xor
data16
sti
mov
adcl
or
add
cmp
mov
mov
mov
int
push
loopne
push
popf
cwtl
dec
jb
incl
shll
pop
ja
sub
cwtl
mov
ret
ret
or
inc
dec
mov
inc
rcll
cmc
testl
outsb
jb
and
arpl
jns
aam
sbb
cwtl
dec
mov
cwtl
stos
mov
fs
ret
dec
jbe
and
mov
push
push
fisttpl
sub
mov
imull
cmc
mov
dec
sahf
int
fucom
pop
inc
test
cmpsb
je
je
daa
mov
xor
inc
icebp
pushf
xchg
push
loop
mov
bound
push
insl
gs
popf
arpl
cmp
andl
mov
ja
movsl
push
or
fmull
hlt
frstor
test
cli
sbb
cmpsl
test
test
rolb
les
jb
xchg
cmp
add
push
bound
imul
and
adc
in
and
nop
hlt
sbbb
adc
mov
xor
pusha
insl
and
out
xchg
inc
inc
or
push
pop
cmp
sbb
xchg
cs
loope
dec
and
push
in
addr16
data16
nop
lock
sbb
pushf
sarb
aad
nop
xchg
inc
scas
mov
push
pushf
rcrl
pop
sub
cwtl
imul
sahf
sbb
loope
mov
scas
jo
xlat
stos
arpl
jp
push
pop
orl
lds
aad
nop
xor
loopne
and
pop
fdivs
jecxz
push
aad
inc
insl
dec
lret
jno
pop
addr16
xchg
outsl
add
add
jmp
cmp
arpl
mov
mov
push
into
in
stos
pop
out
dec
ret
or
imul
inc
fsubl
adc
and
andb
xchg
push
add
xor
pop
hlt
fstps
je
les
addr16
cmp
or
jnp
rcll
je
mov
les
pop
ja
or
cmp
insl
add
out
dec
sub
test
sbb
mov
pop
mov
adc
lahf
xor
repz
jp
cmpsl
bnd
daa
adc
sub
sahf
adc
movsl
imul
mov
dec
iret
mov
fildl
jle
sub
adcl
inc
adc
loop
lea
rolb
or
lret
push
aam
clc
in
push
add
into
sub
repz
inc
and
inc
jnp
cmpsb
or
int3
or
sub
sub
fsts
and
push
jns
dec
aam
scas
ja
inc
hlt
and
jmp
mov
lret
pushf
sub
repnz
xchg
inc
pop
or
mov
adc
sub
outsl
mov
fsubs
fildll
and
add
and
div
mov
cmpb
daa
int3
push
sub
mov
data16
outsl
pop
incb
fsub
jl
data16
mov
dec
lretw
xchg
push
or
jecxz
mov
and
jmp
xchg
out
sbbl
xlat
je
mull
or
dec
sbb
repnz
pop
push
cmp
repnz
pop
les
rcrb
cs
or
mov
outsl
lcall
aam
dec
test
decl
loop
repnz
push
enter
jecxz
dec
sub
or
pop
fidivl
push
pop
inc
cmpsb
fisubl
clc
cmp
sub
and
imul
mov
iret
xchg
dec
out
xchg
cmpsl
add
fsincos
add
or
movsl
mov
pop
pop
ja
ror
ficoms
es
xchg
hlt
std
pop
push
out
lea
pop
mov
jne
pop
and
dec
inc
idiv
or
sub
in
aaa
outsl
inc
lahf
test
aas
loop
addr16
outsl
sbb
inc
adc
in
sub
pop
dec
hlt
push
fs
ret
lods
dec
int3
sbb
popf
mov
repnz
lock
movsb
mov
shlb
cmpsb
mov
mov
adc
outsl
lea
push
scas
jge
aaa
mov
jnp
loopne
movsb
aam
loop
das
push
pop
cwtl
shll
xor
rcrb
push
pop
xor
movsb
nop
addr16
xor
adc
jns
mov
iret
mov
les
movsl
dec
pop
push
imul
xorb
jmp
rorl
gs
data16
fcom
push
push
xor
addr16
xchg
adc
inc
jge
fwait
sub
or
mov
daa
xor
pop
movsl
inc
mov
xchg
les
mov
xlat
push
sub
dec
xor
insb
shll
and
add
sub
ss
and
movsb
data16
pop
stc
cmp
jp
scas
mov
popf
and
jmp
rcrl
scas
adc
push
leave
in
rclb
int
movsl
mov
dec
add
push
jb
pop
sub
xchg
sahf
lods
movsb
testb
or
and
rcrl
movsl
and
pand
xchg
in
jg
push
xor
mov
mov
pushf
pop
sbb
xchg
xchg
ficompl
push
jecxz
pop
mov
push
loop
pop
daa
popf
push
mov
outsl
and
ficoms
arpl
pushl
sbbb
ret
xorl
jnp
int3
out
jo
push
daa
dec
push
pop
pop
ror
lds
push
mov
xchg
pop
fnsave
aad
and
or
call
add
jmp
lea
test
jb
xor
jae
out
xor
ja
scas
add
imul
push
cmpsb
cwtl
inc
inc
gs
mov
notl
ffreep
pop
jl
loop,pn
xchg
fs
mov
lds
aam
nop
adc
pusha
inc
scas
jmp
imull
stc
inc
inc
dec
icebp
icebp
xor
rcrb
pop
xor
jmp
aas
cld
cmc
subl
xchg
inc
push
xchg
push
lods
mov
mov
arpl
imul
sbbb
in
xchg
adc
sub
sbb
imul
addr16
mov
pop
out
or
pop
lahf
or
data16
shll
dec
cwtl
outsb
sub
pop
mov
test
enter
pushf
xchg
jno
mov
scas
test
mov
int3
cmp
sbb
adc
dec
cwtl
aad
fists
nop
gs
xchg
imul
imull
loop
mov
gs
jns
xchg
and
icebp
add
push
mov
xor
inc
xchg
lods
in
adc
sbb
cmpsl
stos
fcmove
lret
leave
enter
and
movsb
dec
mov
in
or
cmpsl
ja
mov
pop
hlt
out
shr
cmpsl
iret
insl
cltd
mov
sbb
ja
negb
pop
addr16
xor
pop
pushf
jle
mov
inc
mov
mov
imul
lods
cmp
std
jl
loop
and
xor
mov
pop
sbb
fldenv
cltd
mov
divl
imul
and
loop
mov
mov
nop
pushl
in
andb
jnp
aaa
jb
dec
rclb
inc
std
mov
push
leave
pop
outsb
out
lock
out
and
cmp
xchg
leave
out
jmp
loop
pop
pop
lods
cmp
cmpsb
iret
daa
dec
fsubs
adc
push
cwtl
das
sub
inc
push
icebp
movsl
push
lcall
mov
pop
shlb
jnp
int
mov
inc
xor
std
rorl
out
cmpsl
pushf
in
lret
pushf
xchg
cmp
mov
pusha
sub
xor
adcl
test
das
cwtl
and
mov
mov
pop
lahf
rorl
in
adc
jbe
adc
leave
push
xchg
aaa
into
ret
add
xor
add
sub
roll
mov
lcall
xchg
push
add
cli
or
ret
cmp
jne
das
xor
repz
gs
shll
push
ds
arpl
cli
pop
rorb
out
jo
mov
fdivl
lret
xchg
mov
jl
mov
xlat
jmp
xor
and
xor
test
in
sub
mov
bound
lret
cmc
fucomp
pop
rclb
pusha
in
sbb
and
cwtl
or
xor
icebp
sub
mov
mov
jle
xchg
pop
xlat
xchg
mov
dec
pop
icebp
mov
jns
ret
sbb
data16
push
mov
addr16
std
sar
xor
fwait
insb
outsl
dec
jg
movsb
mov
and
lret
es
aad
mov
push
xor
mov
arpl
push
incl
sub
mov
in
mov
dec
pop
push
test
adc
xchg
out
sbb
hlt
jl
scas
out
push
cs
cmpsb
divl
hlt
pop
lcall
sub
adc
loop
mov
mov
dec
loopne
mov
adc
add
ret
add
ja
aad
jmp
cmpsb
and
dec
scas
insb
lds
pop
lds
shl
ss
lods
xor
imul
andl
push
push
sbb
fistpll
mov
dec
add
pushf
popl
xchg
dec
dec
dec
jb
out
out
xor
xor
ret
and
imul
lcall
pop
xchg
test
sti
ljmp
or
sub
xchg
addr16
mov
xor
ja
iret
cltd
mov
stos
test
sub
add
fistpl
adc
rcll
add
negb
sub
call
xchg
push
mov
push
sub
xchg
add
loop
mov
stc
pop
popa
mov
sub
xchg
push
into
imul
mov
insb
jae
js
aam
cwtl
lods
jmp
bnd
inc
inc
jne
test
and
rolb
aaa
int3
jl
pop
jecxz
in
sbb
rcll
mov
addr16
mov
cmp
cmpsb
clc
iret
cmp
jecxz
xorl
pop
subl
das
jo
jp
ret
je
and
or
push
repnz
mov
and
cmp
xchg
hlt
cld
arpl
pop
loop
in
ret
hlt
gs
mov
repz
and
sbbl
add
inc
ja
fiaddl
mov
repnz
fdivrp
dec
daa
inc
sub
mov
sbb
into
shll
addr16
xchg
lock
pop
xlat
push
pop
cwtl
adc
out
js
cmp
push
pushf
out
or
and
jae
in
fmuls
mov
push
sahf
push
stos
les
pushf
push
xchg
xchg
lret
ret
lea
enter
and
mov
xchg
mov
out
push
or
hlt
push
out
inc
xlat
test
aam
lds
fldcw
xor
xchg
jne
inc
jg
hlt
in
shl
clc
subl
cmp
mov
lcall
inc
nop
hlt
out
popl
sahf
ljmp
int3
pop
popf
int3
cli
data16
in
imulb
xchg
dec
push
pop
addr16
xorw
dec
add
jle
daa
loopne
ret
movsb
jmp
inc
cmpsl
gs
and
push
jne
xchg
cmpsb
ja
pop
pop
mov
shlb
shll
push
sbb
xchg
fstl
pop
dec
mov
sbb
push
enter
sahf
dec
xlat
add
sbb
in
cmpsl
cmp
fwait
pushf
jne
gs
cmpsl
sbb
fs
scas
lahf
pop
cmp
repz
xchg
adc
and
aaa
lds
ret
fdivl
int
xchg
mov
daa
rcrb
xor
arpl
cwtl
cld
cmpsl
push
mov
inc
pop
cmpsl
jmp
dec
jg
lods
dec
addr16
jmp
mov
es
test
outsl
movsb
or
stos
mov
lret
and
mov
insl
stos
add
gs
in
loop
pushf
add
cwtl
xlat
sbb
and
cmc
pop
movsl
inc
cwtl
cmc
dec
shll
inc
push
push
dec
aam
inc
cltd
das
mov
testl
adcl
data16
push
cmp
jbe
adc
xlat
in
cltd
test
pop
dec
pop
aaa
out
fnstcw
or
leave
pop
js
push
in
inc
pushf
pop
pop
and
pop
stos
ljmp
insb
jb
das
jae
add
mov
popa
add
and
lods
cmp
dec
pop
pop
pop
pop
sbb
pusha
mov
cwtl
test
adc
gs
push
lea
in
dec
test
xchg
aas
dec
mov
jns
xchg
mov
rcll
xchg
imulb
jge
nop
je
jo
fcoml
scas
popf
sub
mov
xchg
fsubp
adc
xchg
cltd
push
stos
and
lock
jp
mov
adc
cmp
xchg
test
sti
cmp
hlt
xchg
in
xchg
mov
mov
and
outsl
xor
mov
pusha
pop
popa
sub
aaa
rorb
dec
xchg
adc
loopne
xor
lret
push
fildll
fadd
stc
mov
cld
cld
inc
rcll
xchg
xchg
cmp
movsb
sub
rsqrtps
aas
mov
and
movsl
mov
or
clc
and
mov
xor
fcmovne
pushf
hlt
pop
and
lds
push
pop
dec
arpl
cmc
jmp
fstpt
lcall
push
xchg
push
bound
xchg
lahf
add
jecxz
mov
js
push
xchg
movsl
daa
xor
es
hlt
push
push
add
xchg
mov
xor
es
add
sbbb
inc
cmpsb
xchg
jmp
pop
cmp
in
pop
jae
movsl
mov
cmp
push
or
test
out
adc
jmp
xchg
pop
dec
shll
lcall
les
je
inc
movsb
in
sub
cmp
int
mov
pop
jle
mov
shrb
es
pusha
aaa
xchg
pop
inc
mul
adc
inc
dec
sub
cmc
lods
loope
cld
pusha
fistl
je
pushf
xor
jno
sbb
sub
pop
sub
xchg
fs
ror
push
jg
sti
push
add
hlt
sub
loop
jle
cmp
cmp
fs
addr16
jge
pop
loope
inc
xchg
and
cwtl
incb
div
adc
fstps
ljmp
repz
push
aam
xchg
push
inc
adc
add
pop
cmpsb
and
ss
pop
aad
jl
dec
xor
jl
je
and
and
lret
mov
aas
push
ja
scas
xor
dec
push
and
arpl
mov
mov
aam
clc
xchg
pusha
mov
fsub
adc
or
lret
shrb
bound
mov
aam
sbb
pusha
jne
stos
cs
xor
mov
repz
pushf
les
sbb
inc
in
sbb
cwtl
cmp
jmp
fwait
xchg
sub
jo
shl
scas
daa
dec
enter
insb
mov
lret
adc
and
int
insl
jmp
leave
fidivrs
push
sub
xchg
inc
fstl
or
out
rcrb
pop
and
loop
inc
mov
ds
push
pusha
popf
ret
leave
je
or
jl
test
or
in
rolb
movsl
xchg
movsl
pop
cmpsl
cmc
insl
pusha
arpl
xor
lcall
xor
stos
cmpsb
pop
xchg
pop
lcall
jmp
inc
vpsubb
pushf
je
mov
cmp
push
add
xlat
arpl
jmp
ret
outsl
cmc
cmp
xor
mov
pop
test
add
hlt
sub
pusha
xchg
cmpsb
push
ret
dec
daa
fcompl
and
cmp
jae
insb
mov
mov
pop
pusha
movsl
push
cmp
pop
xchg
loope
cmp
adc
push
mov
loop
jnp
pop
xor
movsb
cmpsl
xor
ret
scas
fs
mov
push
pop
push
jns
cs
xor
mov
addr16
inc
xor
hlt
mov
add
lahf
in
sbb
mov
mov
add
sub
cmp
xchg
inc
outsl
add
jns
adc
fs
nop
mov
popa
call
lods
jae
mov
lahf
imull
inc
adc
push
jp
mov
sub
jecxz
repnz
push
xor
idivl
mov
add
pop
inc
test
add
fnstsw
imul
jnp
in
test
std
and
cltd
int
imul
or
pop
data16
jne
add
nop
mov
mov
cwtl
jno
cmp
pop
push
mov
push
pop
jmp
push
movsl
or
push
inc
mov
sbb
pop
addr16
fisubl
lcall
sti
movsl
sahf
icebp
or
inc
addr16
xchg
and
jmp
jl
adc
popa
xchg
bound
call
xor
aam
mov
dec
adc
inc
mov
mov
loope
push
inc
decb
gs
pop
xlat
mov
mov
gs
push
ret
test
sbb
sahf
and
mov
cmp
or
or
adc
clc
xor
sub
push
arpl
xor
cmp
jle
sbb
ja
fsubr
dec
adc
int
push
out
mov
repz
ret
or
push
dec
popf
les
loope
lret
adc
mov
xchg
aas
cmc
cltd
pop
ss
cwtl
ja
add
pushf
mov
or
mov
fnstenv
pop
movsb
mov
adc
sbb
arpl
add
scas
jne
icebp
fdivl
mov
sbbl
jo
insl
daa
out
push
loopne
and
and
push
jp
inc
mov
xor
and
xchg
inc
dec
adc
mov
fwait
adc
lods
xchg
and
xchg
sbb
push
stos
outsb
push
jmp
push
push
shlb
fsubs
sub
cmp
daa
scas
cmpsl
xor
xor
mov
out
cmp
jle
nop
mov
push
out
insb
icebp
lcall
pop
dec
push
es
nop
add
mov
push
pop
xchg
fldt
out
in
jp
jle
gs
roll
adc
sbb
pop
pop
xchg
in
movsl
xor
aam
push
dec
or
push
and
das
test
push
sahf
in
sub
add
sub
cmp
std
enter
mov
sbb
sub
cmp
movl
jae
pop
shl
cwtl
test
dec
mov
test
and
scas
xlat
test
push
lods
int
sti
loopne
jnp
push
jp
and
jo
int
aaa
in
jecxz
fucomp
shlb
dec
pop
push
sbb
pop
rcll
icebp
pop
jns
notl
ret
imul
or
mov
adc
in
bound
sub
jg
push
insb
movsl
cs
psrld
sub
movsb
or
cmc
mov
sub
adc
push
inc
insb
xor
xlat
mov
popf
pop
stos
adcb
je
push
fdivrl
std
sub
mov
mov
add
jo
das
inc
cmc
adc
or
xor
xchg
adc
sbb
jle
movsb
xchg
cwtl
fimuls
xor
mov
stos
repnz
scas
in
fs
push
pop
rcll
jmp
cld
and
push
ficoms
cmp
mov
in
and
inc
pop
fists
pop
push
xchg
xor
ret
ficompl
mov
aaa
je
popf
out
sti
ret
testl
pop
fistpll
es
xchg
je
mov
cmc
xchg
aad
xchg
sarb
mov
sub
pop
mov
cwtl
ret
fistl
rcr
arpl
jg
jmp
cmp
movsb
test
cmp
xchg
mov
repnz
and
sub
lea
push
jbe
xor
mov
out
adc
or
xchg
les
add
inc
xchg
adc
ret
fs
inc
cmpsl
test
stos
inc
mov
push
or
jo
xchg
jl
in
gs
roll
lret
and
cmp
inc
jnp
jge
cld
add
xor
repnz
xlat
clc
sbb
lahf
outsl
and
and
and
mov
inc
push
or
fnsave
arpl
push
cwtl
and
xor
mov
jge
ja
jge
lds
rcll
push
inc
fldl
mov
mov
ss
pop
test
das
add
sahf
dec
std
scas
xor
sub
xor
imul
frstor
pop
xchg
fs
loope
loopne
sti
negb
les
fnstenv
insl
sub
lret
mov
sub
xchg
cmpsl
dec
jmp
inc
iret
and
xchg
sub
push
shrb
cmc
adc
mov
dec
imull
mov
xor
and
cmp
leave
in
xchg
pop
xchg
mov
popf
push
enter
sti
push
mov
push
sub
das
out
pop
out
sti
xor
jg,pt
in
lods
jo
imul
jmp
js
push
xor
xchg
ljmp
xchg
imul
xor
xchg
sub
sbb
mov
imul
or
fldl
add
and
mov
pop
xchg
scas
mov
test
je
cmp
inc
fs
cli
and
ja
leave
bound
cmp
mov
jmp
dec
negl
or
in
clc
cmp
jecxz
and
lock
mov
insl
ret
ret
out
test
bound
out
xor
fs
cli
mul
lret
inc
movsl
cmpsl
std
jns
sbb
rolb
stos
xor
inc
adc
js
and
adc
sub
jg
mov
or
cmc
mov
fs
push
pop
pop
xor
mov
xchg
daa
bound
jmp
repz
mov
divl
dec
cmova
in
pushf
movsb
xchg
cs
inc
push
aas
push
push
fidivs
mov
jmp
out
inc
push
sub
xchg
xchg
mov
andb
jg
xchg
cmc
inc
add
mov
es
dec
push
cwtl
sub
cmp
shld
sub
xchg
rorb
inc
aam
imul
or
jp
push
mov
pop
ret
int3
test
je
push
aaa
add
in
and
inc
and
loopne
jno
xchg
jle
call
and
xor
fdivr
ret
das
lret
jne
push
mov
insb
inc
jp
mov
fistpl
cmp
cmp
adc
orl
inc
dec
movsl
xchg
mov
add
xchg
ret
push
es
sub
xor
xchg
cmp
test
or
and
repnz
aas
and
data16
icebp
sbb
and
test
imul
enter
sub
push
test
out
adc
lret
inc
leave
out
adc
or
add
xchg
hlt
mov
jne
ja
in
pop
int3
mov
push
xor
pop
mov
jb
pop
xchg
push
stos
push
add
lcall
and
xor
cwtl
or
cltd
loop
push
pop
jp
xchg
vucomiss
mov
bound
or
popf
cli
push
sub
xor
loop
movsb
popf
addr16
js
adc
fs
ds
lcall
imul
jo
sbb
adc
ja
imul
pushf
testl
test
sub
addr16
push
push
stos
sbb
dec
mov
mov
bound
jge
test
lahf
mov
imul
pop
xchg
xchg
jp
fdivrs
mov
push
int
imull
je
notb
loopne
repz
in
ja
pop
sahf
add
mov
sub
cmp
in
mov
iret
aaa
dec
pop
ss
xchg
xchg
imul
fwait
movsb
mov
mov
subl
mov
and
cltd
or
cmc
out
mov
adc
mov
push
insl
leave
mov
adc
cli
fldenv
rcrl
sbb
icebp
mov
shrl
xor
rcrb
frstor
xorb
mov
push
push
sub
add
add
popf
pop
pop
daa
lcall
add
out
push
rcrb
inc
iret
insb
jne
or
in
pushf
or
xchg
inc
es
bound
jp
adc
and
das
pop
jg
pop
jg
out
je
int
in
pop
ja
adc
test
rcrl
mov
std
push
cltd
stos
ret
and
jo
test
movsb
sbb
cmp
jb
and
arpl
into
hlt
mov
lcall
aad
lea
dec
inc
push
popf
bound
cmpsl
aam
popf
stc
aas
push
mulb
ficoms
sub
jg
je
loop
add
xlat
lock
dec
aaa
adc
dec
jo
xlat
push
lret
mov
pop
lods
sub
lock
mov
inc
inc
test
and
test
push
mov
cmp
cmp
insb
gs
in
loope
pop
and
pop
inc
loope
xlat
fmull
add
orb
andb
pusha
cli
nop
aaa
xlat
loope
orl
int
stos
jmp
dec
mov
xor
push
push
or
pop
pop
sbb
test
pop
jo
lcall
movsl
mov
loope
cwtl
xchg
add
dec
les
jmp
les
stos
mov
push
fwait
out
push
lcall
inc
adc
push
daa
pop
jnp
scas
add
stc
shlb
ret
outsb
mov
jae
jge
pop
icebp
push
insl
popf
inc
ja
mov
fimull
pop
test
and
xchg
je
mov
inc
imul
or
arpl
in
sub
popa
mov
push
dec
sub
xchg
mov
and
arpl
imul
xlat
fwait
fs
cld
mov
mov
xchg
mov
pop
aad
adc
ret
lock
pop
cltd
mov
push
sahf
pop
movsb
call
dec
outsb
and
cwtl
xchg
rolb
pushl
leave
outsb
and
mov
fmul
xor
leave
fisttps
pop
pop
mov
mov
pop
aaa
in
mov
pop
or
xchg
mov
dec
sub
out
fidivrs
inc
aaa
xlat
or
sbbl
fs
inc
xchg
in
xlat
pop
xchg
cwtl
outsb
into
stos
cwtl
and
inc
addr16
aam
popf
out
xor
add
jne
fldl
jmp
pop
cmpsb
ret
mov
repz
sbb
fs
pop
mov
jbe
mov
xor
lock
adc
jnp
rorb
rcrb
xchg
inc
push
leave
jbe
inc
aaa
adc
pop
push
pop
arpl
push
xlat
imul
cld
arpl
jp
push
adc
dec
xor
cld
stc
fs
fs
testl
std
sbb
pop
xchg
and
jne
insl
inc
jle
movsb
mov
inc
jle
aam
out
mov
ds
pop
addr16
cli
dec
jg
pop
jno
pushf
popa
aas
sti
jbe
test
notb
jmp
ljmp
enter
pop
mov
jbe
push
and
fmull
fsubl
xchg
mov
jne
push
lods
stos
imul
aaa
mov
pushf
shlb
test
sub
inc
sarb
movl
lcall
add
pop
lret
mov
out
add
out
shlb
push
dec
and
or
xchg
cmp
pop
dec
sbb
stos
adc
push
xchg
sahf
and
xchg
bound
pop
and
push
insl
mov
cmp
call
ljmp
push
mov
in
into
imul
mov
adcl
fdecstp
aam
mov
sub
xor
push
sub
dec
xlat
ret
push
or
in
int
scas
jno
sub
jo
push
jecxz
and
xlat
sbb
add
int3
or
mov
xchg
ficompl
rcll
into
adc
mov
pop
inc
out
test
test
xor
addr16
dec
stc
movsb
push
inc
mov
dec
mov
xor
sub
cs
dec
add
dec
adcl
sbb
cmp
or
leave
negl
push
jp
mov
push
cmp
loop
mov
mov
mov
mov
out
inc
cmpsl
or
add
pop
daa
test
push
std
push
loopne
pop
arpl
adcb
mov
pushf
repz
and
lret
dec
xchg
mov
jae
sub
je
insb
and
add
imul
or
ss
mov
pop
sub
pop
jg
dec
hlt
lret
cmp
cwtl
inc
inc
roll
xorb
xor
mov
movsb
aad
pop
or
sbb
dec
shlb
mov
push
adc
mov
jl
adc
dec
movsb
cmp
movsb
cmp
pop
jmp
mov
mov
and
insl
outsl
daa
pop
and
insl
pop
or
dec
loope
pop
std
mov
sub
push
jo
mov
iret
adc
adc
loopw
jp
lods
mov
push
gs
pop
xchg
xlat
dec
nop
outsl
movsb
test
popl
inc
enter
cmpsb
push
icebp
push
iret
add
add
and
icebp
sbb
cld
xchg
xchg
popf
sahf
lcall
sbbb
sub
shlb
shlb
inc
nop
test
lret
push
popa
push
mov
inc
pop
mov
pop
or
fmul
mov
movsl
enter
jbe
sbb
shrb
hlt
cmp
and
sahf
mov
inc
add
adc
pop
push
and
and
cmpsl
jle
loop
adc
mov
or
jl
test
js
pop
pop
mov
and
jb
addb
ret
add
xchg
lea
stc
or
pop
insl
add
rclb
or
testl
insb
test
aad
sub
mov
and
mov
ret
add
and
out
inc
push
push
cwtl
push
fcom
mov
ret
add
xchg
add
aaa
cli
pop
push
es
dec
adc
nop
out
xorl
pop
mull
rorb
sub
pushf
sub
outsw
test
imul
rolb
ds
test
push
lret
ja
or
cltd
fildll
jno
sub
mov
mov
xchg
aam
and
mov
cli
bound
xchg
cmp
cmp
xchg
mov
cli
fs
mov
imul
lahf
xorb
xor
inc
cs
cmc
adc
aas
out
jge
sub
rcrb
mov
xor
jo
inc
and
jge
cmpsb
aaa
sahf
out
sub
dec
sub
shr
rcl
in
es
ds
sbbl
mov
loopne
loop,pn
inc
pop
and
xor
xchg
je
sar
push
and
lahf
lods
clc
push
sbb
sbb
aad
fcoms
jo
pushf
insb
mov
and
and
js
les
nop
lea
mov
movsl
subl
and
sbb
and
add
xlat
sarb
inc
dec
mov
adcl
adc
cmpsl
jne
mov
bound
lock
pop
in
and
andb
scas
mov
push
cltd
or
cmp
cmpsb
lret
jbe
ret
scas
mov
xor
push
imul
bound
sbb
push
or
adc
xchg
fwait
xor
enter
adc
xchg
sub
loop
pop
outsl
lds
inc
and
aas
dec
lcall
ret
jo
mov
sbb
sub
fs
test
pop
sub
or
xor
dec
inc
pop
adc
jg
jno
mov
bound
scas
jecxz
out
and
popf
mov
ret
xchg
xlat
push
fadds
mov
aam
push
or
inc
xchg
aam
loop
mov
xchg
das
jl
mov
inc
ficoms
into
addr16
fsub
fdivr
lret
mov
sarl
movsb
mov
outsl
lds
or
mov
push
jo
or
pushf
ja
aaa
inc
idivb
xchg
adc
adc
dec
mov
pop
lahf
jo
das
pop
pop
xlat
add
lcall
lret
adc
xchg
jp
add
sti
icebp
cmp
cwtl
out
push
pop
pop
es
and
adc
shlb
jns
xchg
in
lcall
mov
fidivrs
stos
movsb
push
pop
test
movsl
daa
add
hlt
inc
xor
nop
xchg
mov
sbb
push
xchg
dec
push
sbb
adc
jecxz
adc
movsb
idivl
and
fcmovnbe
sub
scas
insl
aam
xlat
adc
adc
push
lret
mov
push
addr16
mov
sub
mov
shrl
aam
dec
push
lcall
adc
pop
icebp
jge
mov
out
adc
imul
loope
fs
stc
xchg
fldenv
dec
jp
mov
inc
pusha
or
mov
test
insb
iret
outsb
pop
xchg
jge
aad
push
dec
inc
fs
pop
mov
push
fdivrs
push
xlat
add
xchg
pushf
mov
and
imulb
jecxz
push
ret
xchg
daa
shll
push
cmp
aad
shlb
fs
xchg
jns
in
adc
mov
push
xchg
push
sbb
sub
adc
lods
xchg
test
rol
adc
out
dec
fsubl
add
ja
hlt
or
pushw
inc
xchg
mov
and
enter
cmp
out
xchg
aam
adc
xchg
lods
das
ja
nop
hlt
xor
rcl
vpcmpud
push
inc
xor
popa
jno
sti
lahf
in
dec
popa
loopne
or
push
hlt
gs
mov
cmc
sub
movsl
pop
pop
ja
fists
xor
xor
jbe
fs
insl
jno
pusha
push
xchg
data16
jp
mov
sbb
cvtps2pd
inc
pop
and
pop
or
pop
loope
hlt
xchg
aam
sbb
icebp
xchg
cmc
xor
cs
jl
or
out
inc
push
mull
rol
pop
pop
dec
xchg
adc
add
fs
cmp
addr16
or
add
inc
jg
lcall
add
imul
sbb
stos
push
add
fmulp
push
pop
ja
dec
leave
sbb
out
jo
int
cli
in
cmp
sub
bound
jae
cmp
pushf
pop
in
mov
call
push
sbb
sub
add
inc
sub
pop
mov
dec
gs
pop
jl
mulb
repnz
and
imul
imul
ret
mov
pop
movsl
clc
in
loopne
inc
adc
rol
mov
ret
notl
ret
xchg
ficoml
mov
scas
xchg
push
cmp
add
rorl
sbb
pop
lea
cmp
lcall
fwait
dec
jbe
sub
xchg
movsb
test
sti
sub
das
and
scas
mov
imul
dec
adc
cwtl
jno
mov
rclb
pop
icebp
aad
and
push
insb
and
mov
lods
and
mov
jl
mov
lods
insb
jmp
mov
in
jbe
inc
xlat
clc
push
popf
inc
push
xchg
and
in
jo
in
sahf
lahf
aaa
dec
or
daa
adc
push
test
cmpl
je
out
jbe
in
pop
daa
lahf
push
out
and
sub
sbbl
push
push
mov
lods
push
aaa
mov
mov
xchg
lsl
mov
loope
hlt
leave
push
add
cmp
std
xor
dec
xchg
addr16
or
nop
mov
cmp
inc
jecxz
das
popa
push
out
and
leave
inc
fmul
sub
dec
data16
aad
xchg
adc
mov
mov
xor
cltd
pushf
adc
sub
rolb
jbe
out
scas
nop
test
inc
add
dec
das
inc
scas
pop
js
pop
fiaddl
add
pop
stos
aaa
cmpl
mov
shrl
push
adc
and
mov
mov
xlat
nop
out
cwtl
fwait
sub
subb
fiaddl
rolb
jl
arpl
fildl
mov
lahf
dec
ret
cmpsl
bound
out
aam
inc
lea
jo
xchg
dec
add
jg
pop
repz
inc
pushf
scas
mov
push
jno
adc
testb
xchg
pop
je
sbb
lods
cwtl
or
sbb
std
test
mov
int3
in
pop
mov
adc
mov
mov
xor
sub
xchg
iret
mov
and
xchg
sub
subl
repnz
cs
pop
mov
inc
outsb
mov
pusha
lea
ret
mov
xlat
cmpsb
ret
sub
mov
icebp
stc
roll
xchg
nop
xlat
test
mov
push
rcl
sbb
add
pop
adc
pushf
sub
dec
ds
gs
lcall
add
icebp
xchg
push
and
mov
cmpsb
pop
scas
shll
mull
and
dec
dec
outsb
fisubs
push
lcall
fsubrp
xlat
mov
adc
sub
adc
ret
dec
pusha
pop
inc
stos
push
mov
sub
mov
dec
enter
cmp
push
pop
cwtl
and
gs
and
subb
xor
loope
adc
jnp
in
sbb
mov
or
jle
sbb
mov
jle
movsl
push
adcl
pushf
cmp
inc
xor
or
popa
andb
pop
pop
repz
push
daa
lods
aaa
xchg
leave
cmp
inc
pop
mov
dec
fs
je
lahf
in
in
dec
fs
cmp
xor
and
xchg
mov
adc
push
inc
mov
jne
xchg
mov
or
dec
cwtl
dec
lds
lcall
lahf
add
cli
ret
in
enter
das
rolb
jb
fistpl
insb
vhaddpd
leave
push
cltd
in
ffreep
out
or
xchg
xlat
and
pop
xor
and
pop
pop
add
fwait
or
dec
xchg
jle
lea
xchg
xlat
mov
mov
jl
push
and
mov
rcrb
fidivrs
ss
jg
jb
dec
outsb
in
rorb
push
sub
adc
jns
les
jae
pop
lahf
repnz
fsubrs
pop
daa
adc
push
jp
les
cltd
repz
movsb
push
pop
mov
sbb
add
dec
mov
xchg
movl
jnp
fwait
jp
jl
pop
aaa
cmp
sarb
hlt
cmp
mov
xor
push
in
cmp
insl
xor
xor
sbb
clc
sti
mov
inc
out
insb
pop
loope
push
fcomps
test
icebp
and
jl
pop
xchg
in
lods
lds
repz
pop
pop
and
mov
mov
sub
mov
xor
scas
xor
and
xchg
cli
sbb
mov
out
test
insb
aad
fmuls
loope
jns
into
adc
decl
and
pop
arpl
int3
cs
pop
sub
cmp
nop
xchg
cld
mov
jne
movsl
lods
lcall
and
pop
ljmp
cmpsl
gs
xchg
cmpsb
rcrl
mov
outsb
shll
xchg
inc
daa
loop
jmp
cli
and
loope
shll
push
cmc
je
pop
xlat
push
inc
cmpsb
pop
adc
jnp
xor
rolb
cmp
mov
mov
test
fnstcw
aad
pop
mov
mov
lret
lahf
imul
rcrl
cltd
hlt
imul
sahf
test
stc
sbb
mov
daa
out
fistps
push
mov
jl
cmc
add
push
xchg
fsubrs
in
movsl
imul
lock
inc
pop
cmp
pop
into
pop
in
bound
sub
lods
and
sarb
adc
push
mov
push
pop
jbe
adc
pushf
push
dec
xlat
div
sti
leave
out
movsl
fsubr
inc
dec
adc
sbb
inc
in
jmp
mov
test
mov
negl
sbb
xchg
lahf
jmp
lea
adc
cmp
mov
mov
in
test
push
imul
pop
mov
push
jp
in
inc
outsb
mov
in
add
push
adc
mov
popf
sub
sbb
jo
fs
test
ret
insl
imul
test
lods
repz
xchg
sbb
dec
leave
ret
das
data16
aas
sahf
pop
pop
jge
mov
stc
jl
scas
cs
mov
add
xlat
jl
fwait
xchg
ret
xchg
fucom
pop
hlt
xchg
insl
mov
daa
lret
sub
je
and
mov
cmpsl
ds
js
jmp
sub
mov
scas
xchg
adc
push
rcll
call
cwtl
mov
bnd
jle
push
cmpsb
pop
xor
or
xchg
sub
vfrczpd
push
test
cmc
pushf
push
fadd
out
add
push
or
add
test
scas
pop
mov
mov
fwait
sub
jb
mov
jp
sub
and
jbe
test
or
xor
andb
mov
imul
ja
cmc
sarl
aaa
mov
push
pop
jo
mov
rcll
pop
insl
out
pop
lahf
and
inc
lds
and
int3
add
out
loope
jg
pop
jns
ss
shrl
out
imul
shlb
dec
addb
cmp
cmp
push
cmpsb
and
dec
popf
sub
enter
adc
out
aad
and
jmp
push
aas
pop
pop
add
lret
in
jmp
pop
dec
xchg
xor
daa
xor
loope
pop
and
jno
push
sub
cs
mov
pop
cmp
mov
jo
ss
roll
sub
jae
lea
sbb
out
dec
fs
cmc
fs
cmp
pop
in
fcomi
in
add
mov
cmpsl
mov
jbe
fcoms
jno
cltd
sub
sub
xchg
imul
pop
inc
xor
ljmp
adc
aam
adc
adc
test
sub
popa
lods
xor
sbb
jns
cmpsl
test
xchg
sahf
mov
mov
or
test
xchg
pop
stc
push
pop
pop
inc
mov
pop
xchg
jnp
add
cmp
rcrl
mov
xchg
push
cmp
mov
aaa
int
mov
mov
xor
mov
call
mov
xor
dec
stos
call
mov
imul
xor
daa
loop
cmpb
ss
sub
jecxz
mov
push
imul
negb
pop
xchg
cmp
push
nop
mov
inc
xor
out
sar
cwtl
pop
out
cmc
out
popf
add
add
mov
loop
xlat
sbb
out
sub
inc
push
add
jns
mov
repz
xor
popa
sub
mov
xor
ljmp
test
adc
jge
sub
out
inc
xchg
pop
mov
pop
insl
adc
lcall
xor
mov
mov
movsb
test
movsl
stos
pushf
lods
and
hlt
mov
insb
in
jns
jle
push
stos
nop
shl
shlb
inc
jo
out
jecxz
fwait
jbe
mov
lret
xchg
cli
adc
xor
lock
jge
lods
jo
cmp
inc
add
mov
aad
cmpsb
xor
pop
mov
cli
adc
mov
gs
cmpsl
pop
sarl
and
insl
add
mov
sbb
sbb
cwtl
ljmp
mov
bound
pop
fs
dec
mov
xchg
lds
ret
xor
lock
and
xchg
aam
shll
pusha
lret
ja
sub
pop
push
loope
lods
js
xchg
mov
inc
stc
xlat
sbb
dec
cmp
rorb
data16
fcmovnb
data16
pop
hlt
fs
orb
sub
cli
xchg
pushf
daa
inc
mov
lcall
int3
and
mov
pop
mov
cmpsb
pop
popf
inc
pushf
or
pop
push
test
ret
push
seta
sbb
ljmp
pop
sub
pop
cmpsl
and
jp
mov
repz
xchg
movsb
jmp
sbb
adc
push
pop
into
sub
enter
sar
fs
pop
sub
jl
pop
ds
insb
nop
test
cli
repz
repnz
jnp
sbbb
insb
xchg
je
test
inc
pop
jecxz
insb
mov
movsb
mov
ja
cmc
daa
cmp
fistpll
ficomps
jl
mov
js
shl
jecxz
repz
push
mov
jno
cmc
and
lcall
adc
xor
in
test
sub
xor
jge
inc
dec
data16
pushf
mov
dec
pusha
sysexit
out
sahf
xchg
and
popl
push
aas
sbb
in
fsts
push
daa
popa
sub
adc
mov
loope
std
and
and
shll
mov
add
push
mov
fs
xchg
jge
jg
mov
addr16
jle
xor
jno
jnp
jmp
inc
sub
mov
das
push
cltd
sub
xchg
jl
pusha
cmp
adc
in
adc
xchg
inc
cmp
mov
pop
xlat
fcoms
nop
jnp
and
sub
sti
in
xchg
pop
outsl
pushf
ljmp
cmp
and
sub
mov
pop
pop
jb
aaa
xor
fwait
shlb
mov
sahf
std
mov
fstps
ret
cmp
pop
pop
rclb
mov
pushf
lahf
push
inc
pusha
lods
test
push
pop
xchg
push
repz
xchg
push
ret
cs
xor
add
hlt
push
dec
test
popf
lret
inc
movsb
lock
cmpsb
mov
dec
cmpsb
or
les
test
xchg
xchg
push
test
fs
test
data16
mov
push
bound
xlat
mov
movsb
fildll
mov
enter
or
loop
or
ljmp
mov
and
popa
add
mov
cmp
xor
push
adc
add
mov
ret
mov
xchg
lods
sbb
cmp
fsubrl
xchg
or
loopne
adc
and
mov
xorb
inc
sub
lods
ja
dec
stc
insl
push
xor
push
hlt
mov
lods
repnz
xor
push
fisttpl
imull
pop
shl
jo
xchg
arpl
rcr
movsb
sub
jp
imul
dec
sarl
push
ja
es
fdiv
nop
pusha
adc
cmpsl
in
outsl
cwtl
cmp
and
and
jmp
sub
mov
pop
xchg
shlb
call
dec
addr16
call
add
mov
popf
imull
sbbl
mov
inc
fstpt
mov
xor
ss
loope
and
repz
mov
jae
xchg
ficompl
ret
cwtl
int
inc
fadd
test
pop
mov
and
push
and
jle
popf
shrb
aaa
push
mov
ds
aaa
sub
outsb
outsl
push
dec
cmc
out
xor
pop
sbb
sbb
out
pop
mov
call
ret
ss
xchg
mov
sbb
mov
sbb
dec
inc
xor
pusha
sub
aam
pop
pop
push
lods
bound
adc
and
cmpsl
xchg
fisubrs
inc
or
cmpsl
cli
mov
push
rclb
cmp
mov
scas
xchg
cli
or
pop
jbe
pop
sub
sub
inc
data16
jns
ret
mov
mov
mov
inc
mov
and
mov
jge
push
xlat
push
xchg
push
mov
stos
out
sub
jo
loopne
adc
adcb
jns
xchg
in
pop
mov
aam
jg
addr16
jp
cld
add
lret
out
mov
js
jge
add
imul
daa
mov
dec
pop
mov
dec
mov
int
dec
push
cmpsl
pop
adc
lods
aad
cmpsb
sub
or
aas
push
mov
popf
xlat
pushf
dec
push
in
scas
rorb
jnp
push
adc
aad
out
sbb
mov
lcall
adc
mov
daa
xchg
mov
lea
pop
stc
addr16
or
pop
aaa
daa
push
mov
scas
cmp
ret
aas
fisubrl
pop
push
jae
jl
das
shlb
jp
in
cmp
adc
and
mov
pushf
ljmp
mov
adc
xchg
mov
mov
and
and
fsubl
or
dec
sahf
pop
mov
mov
bound
add
jmp
je
sub
je
push
pop
lcall
jecxz
pop
negl
mov
fsubp
popa
mov
fidivs
dec
sti
lcall
repnz
mov
or
inc
jl
aas
popa
testl
push
inc
push
mov
add
lcall
sub
jl
mov
push
loopne
mov
popf
cmpsb
cwtl
jle
repz
mov
adc
push
lahf
adcb
add
cltd
cmp
rcrl
pop
lods
inc
xor
xchg
xchg
mov
addb
sub
adc
dec
xchg
and
pop
std
lods
out
cltd
sahf
jl
repnz
cmp
sbb
mov
lret
outsl
das
ret
mov
add
xchg
mov
movsl
fmul
jmp
inc
int3
jbe
lods
xor
hlt
xchg
sub
fs
push
imul
mov
sbb
insl
outsb
mov
add
pop
aas
xor
stos
sarb
xchg
mov
ja
out
jo
cli
popf
push
xchg
js
jmp
inc
loop
iret
sub
mov
sbb
or
imul
push
notb
call
jmp
arpl
out
movl
mov
xlat
pop
notb
sub
jno
nop
cmp
mov
mov
sbbl
fwait
inc
sub
and
loopne
pop
pusha
mov
xchg
pop
mov
je
sub
mov
push
cld
cli
push
stc
mov
fs
pop
mov
pop
pop
and
lock
and
fwait
sub
add
xchg
inc
fwait
jno
xor
jp
mov
mov
xchg
rcll
call
sbb
shlb
out
add
clc
inc
es
lods
stc
divb
insl
ljmp
push
sub
dec
roll
test
mov
inc
xchg
rclb
iret
pushf
sarl
pop
cmpsl
popf
pop
out
mov
hlt
or
sub
jecxz
addr16
push
jno
outsb
lds
push
gs
lret
xchg
xlat
push
dec
das
mov
loop
mov
inc
outsl
mov
jne
shrl
cwtl
ljmp
roll
das
mov
add
adc
iret
sub
fdivrs
roll
ljmp
inc
dec
cltd
pop
bound
pop
ja
or
xorl
fdivrp
dec
fimuls
pushf
lahf
pushf
insb
and
daa
in
adc
cmpsl
sbb
shlb
jle
lea
jne
pop
xchg
mov
sahf
or
xor
ljmp
iret
stos
js
and
adc
inc
into
and
adc
stos
push
xlat
push
dec
sti
pusha
test
insb
fisttpll
sub
and
inc
pop
lds
xor
xchg
ljmp
jl
sahf
xchg
sub
push
int
jns
mov
sarb
test
xlat
cmp
push
xchg
sahf
jne
sahf
jecxz
xchg
sbb
das
mov
push
sbb
xor
add
and
dec
dec
imul
push
sbb
dec
ljmp
push
insb
loop
push
les
loopne
mov
cmpsl
jnp
mull
cmp
or
fdivl
mov
adc
outsb
repz
pop
test
sbb
or
jecxz
loope
pop
cmpl
ds
fstpl
mov
jno
dec
pop
add
sbb
nop
jbe
scas
sub
sub
fnstcw
pop
fstl
inc
lds
mov
inc
jp
jno
jecxz
mov
mov
je
jmp
shll
or
test
loop
fisttpll
das
dec
adc
mov
and
pusha
loope
out
inc
pop
cmp
mov
int3
ficoml
jp
and
scas
outsl
rclb
xor
roll
xchg
aaa
rcrl
jno
push
sub
js
sbb
cmp
pop
je
jbe
cmp
add
sbb
inc
adcb
pusha
inc
es
sub
adc
test
mov
mov
pusha
add
xchg
inc
inc
js
lahf
push
xchg
ror
scas
add
add
out
pop
pop
pop
and
mov
push
test
mov
lahf
sub
arpl
sub
shl
fs
cmpsb
sahf
arpl
shlb
lret
sahf
and
mov
push
pop
orl
testb
jno
call
sbb
aad
mov
ficoml
out
xchg
mov
dec
ss
sub
pop
test
xchg
fldt
sub
mov
push
mov
dec
loopne
xchg
or
es
push
std
add
rcrb
sbb
inc
mov
cmp
ror
stc
or
jmp
or
xchg
repz
mov
sti
aad
push
sahf
mov
push
jmpw
jmp
mov
stc
mov
lods
bound
dec
cwtl
pop
pop
roll
js
loopne
mov
loop
notl
inc
lcall
cmp
pop
repz
mov
outsb
rcl
jle
fcompl
xor
andb
add
cmp
aas
shll
call
shlb
cmc
and
inc
test
xchg
cmp
jo
sti
push
or
mov
out
xchg
cmp
mov
push
les
out
sbb
pop
js
pusha
insb
push
push
fldl
jae
jne
push
loopne
push
dec
xor
out
cli
std
mov
btsl
mov
jp
add
fwait
aas
push
in
xor
mov
dec
mov
sub
adc
out
adc
jb
add
push
repnz
js
xchg
js
xlat
push
lcall
fimuls
dec
lock
inc
daa
xchg
rcrb
xor
pop
imul
jmp
fisubrs
cmpsl
fwait
enter
ss
dec
das
arpl
dec
jp
sbb
push
mov
insb
test
rcl
add
sti
inc
loopne
hlt
out
push
xchg
inc
dec
cmc
cmp
cwtl
mov
lock
push
pop
mov
lds
test
ror
mov
pusha
movsl
aaa
sbb
pop
xor
xchg
ret
or
pop
repnz
cli
dec
in
lock
fstpt
pushf
sti
dec
adc
hlt
mov
and
inc
stos
scas
pop
and
mov
pop
adc
and
aad
jno
loope
jg
out
rolb
cwtl
dec
adc
mov
les
nop
sbb
push
cmc
xchg
rcrl
xor
xchg
cli
fs
mull
in
nop
xchg
aas
sbb
push
sbb
jmp
push
aas
mov
add
or
hlt
xchg
and
jno
xchg
pop
lock
mov
in
lea
sbb
loop
subb
jne
in
outsb
mov
je
jns
sbb
and
xor
scas
adc
loope
out
lahf
scas
push
push
out
jmp
sbb
xchg
push
add
out
mov
inc
mov
inc
movsl
dec
xchg
stos
cmpsw
pusha
es
dec
mov
adc
cmpsl
sbb
cltd
or
push
add
ja
add
sbb
jo
lcall
mov
fs
cmp
mov
adc
xchg
adc
dec
cmpl
push
mov
dec
or
push
sbb
fidivl
cmpl
mov
fs
mov
popf
mov
pop
xchg
mov
adc
or
add
fnstsw
push
inc
ja
movsl
cwtl
pop
mov
mov
in
cmc
aas
std
or
mov
testl
mov
das
out
add
into
test
in
fsubl
filds
shl
out
mov
pop
ret
and
lds
sbbb
rcll
jbe
dec
push
fdivs
movsl
sbbb
adc
mov
mov
mov
inc
xor
xchg
dec
scas
jmp
adc
out
sub
pop
add
stos
out
sub
fidivs
adc
jns
xchg
scas
call
mov
mov
jmp
loop
aaa
insl
xchg
out
divb
adc
testl
mov
mov
fidivrl
add
in
mov
push
mov
mov
in
std
mov
out
cmpsb
rcll
cmc
mov
inc
ds
xor
or
cmpsl
sub
add
jg
adc
ss
xchg
mov
mov
xchg
out
push
arpl
aaa
dec
into
adc
outsl
push
cmpsl
or
push
xchg
jnp
add
add
xchg
ds
mov
subb
insl
mov
sbb
out
adc
xchg
pop
add
mov
and
mov
mov
jle
sbb
out
cld
inc
fsts
or
inc
cmp
pop
adc
call
idivb
add
into
cmpsb
push
xchg
pop
add
and
test
data16
mov
cmc
cmp
mov
push
mov
test
lahf
or
test
sub
adc
shlb
fwait
dec
lret
std
roll
mov
cmp
movsb
adc
xlat
out
inc
push
sbb
in
sbb
jmp
push
fucomi
mov
push
fnstcw
sbb
lds
rclb
lcall
cmp
mov
adc
in
nop
adc
lods
sysexit
cmovne
fildl
add
lods
push
jl
xchg
outsl
fcmovnb
rolb
stos
out
out
jg
fsubs
pop
dec
push
call
ss
add
adc
mov
xor
jge
add
ret
stos
push
jae
lcall
call
pop
mov
sbb
push
jmp
adc
push
aas
adc
push
xor
movsb
mov
or
fidivrs
add
cmc
xchg
fbstp
scas
mov
mov
aam
inc
ss
test
out
mov
mov
dec
push
out
rcrb
mov
mov
push
inc
xchg
jnp
fbstp
pop
cld
and
adc
stos
mov
mov
cwtl
out
mov
mov
aam
scas
adc
test
jo
and
add
push
mov
adc
jp
sbb
movsl
pushf
mov
lods
pusha
xchg
mov
in
int3
jg
shlb
xchg
inc
cs
adc
mov
outsl
jbe
adc
add
sbb
hlt
cmpsl
js
sbb
fnstenv
cmpsb
inc
jne
cmovp
stos
pusha
out
jp
sti
in
out
aas
insl
mov
movsw
cmpsl
dec
dec
adc
xchg
xorb
and
adc
add
xchg
jnp
and
jge
add
test
jno
popf
mov
stos
adc
int
inc
adc
gs
inc
out
adc
sbb
mov
decl
adc
cmpsb
inc
xchg
sbb
fidivs
push
sbb
jae
cmpsb
jnp
xchg
das
jg
xor
loope
sbb
in
adc
jne
xor
jmp
xchg
dec
jns
push
in
into
mov
adc
jle
sbb
divb
cmpb
test
mov
add
out
xchg
push
xor
out
out
in
cmpsb
adc
lds
out
sahf
imul
cmpsl
andb
in
sarl
std
clc
xchg
push
imul
pop
mov
pop
ret
xor
xchg
pop
fldl2e
cmc
jnp
cmp
leave
imul
lds
bound
inc
xchg
mov
jle
jno
sub
cs
cld
ret
mov
iret
outsb
mov
pop
clc
lret
fdivrl
jge
sub
popl
mov
stos
test
fwait
sarl
mov
fidivs
bound
aaa
pusha
shrb
outsb
daa
repz
jge
jecxz
jb
cmpsb
gs
xor
repz
pop
jns
in
jno
sub
cmp
gs
bound
xchg
pop
frstor
xchg
mov
jge
fmuls
xor
ja
subb
cld
imul
arpl
mov
and
mov
es
and
xor
sbbb
aaa
jl
imul
dec
sbb
cmp
add
inc
fimuls
pop
lahf
inc
xor
adc
arpl
bound
out
mov
stos
mov
dec
xchg
mov
and
jg
aam
add
and
inc
dec
into
inc
stc
paddsb
push
pop
cmp
movsb
or
bound
pop
add
sub
lds
loopne
aaa
adc
mov
jno
and
and
aam
aaa
loope
jmp
clc
inc
xchg
pop
stos
xlat
cmpw
adc
outsl
mov
test
cmpsb
mov
das
add
pop
and
and
roll
fistpll
jne
pop
adc
sub
sbb
xor
test
addr16
pusha
fsubl
loop
repz
mov
cmp
add
mov
xchg
test
fs
aam
dec
or
xchg
cmc
push
cmpsl
sub
orl
sbb
sub
xchg
or
fisubs
inc
ja
and
pop
aaa
ret
insb
mov
adc
xor
in
lods
arpl
fwait
xor
leave
cs
sbb
inc
sub
movsl
jae
testl
movsl
aam
test
and
mov
jo
jae
movsl
call
pop
push
jb
aaa
and
rorb
out
mov
sarb
cmpsl
push
xchg
adc
push
jb
sarb
out
pop
insb
sub
sbb
mov
and
inc
adc
or
xor
rorb
mov
dec
cld
pop
ja
fstps
imul
mov
cmp
push
cwtl
xchg
divl
pop
jle
mov
mov
test
and
jl
xchg
sbb
cmp
out
jmp
sub
enter
data16
jecxz
addr16
stos
mov
outsb
stos
int3
lret
or
inc
lcall
test
sbb
inc
push
push
sbb
cmp
cmpsl
mov
sbb
daa
xlat
cmpl
sub
clc
insb
and
cwtl
add
insb
in
xor
in
cmp
lcall
cmc
xchg
mov
arpl
stos
leave
inc
lods
in
imul
insb
fnsave
cmp
loop
ss
mov
pop
jg
rclb
sub
inc
shrb
jb
cmp
and
push
ret
add
in
fisubrl
or
mov
mov
inc
add
lahf
adc
sub
in
mov
mov
jnp
and
pop
insb
and
jno
rolb
in
jb
add
push
inc
jno
stos
stos
pusha
insl
enter
aaa
sbb
fs
loope
in
daa
xchg
bound
jl
mov
jmp
and
pop
pop
inc
xchg
dec
aaa
push
loope
cmp
in
dec
nop
in
loop
fcomip
xor
or
cltd
sbb
and
and
jmp
push
mov
xor
into
lahf
scas
mov
cmc
mov
push
ds
rcrb
orb
scas
notb
jge
adc
divb
popf
das
jne
rcll
mov
xchg
loopne
loop
cmp
jmp
dec
scas
in
sbb
mov
lahf
rorb
scas
push
xchg
imul
in
daa
andl
cld
lods
and
or
push
cmp
push
enter
pop
dec
jle
pusha
sbb
xchg
aas
mov
push
aad
xchg
mov
or
rcr
ret
shlb
push
sbb
shrb
sbb
cmp
add
mov
mov
out
push
lds
add
cmpsb
jb
adc
faddl
xchg
mov
push
mov
orb
add
xchg
ss
push
adc
ljmp
pop
sub
add
mov
mov
jnp
adc
push
andl
sbbb
sbb
ds
mov
in
pop
inc
scas
adc
rorl
adc
test
push
movsb
jae
sbb
cmc
cmpl
stos
adc
mov
inc
loop
cmp
in
cmc
mov
mov
jno
mov
fs
inc
es
in
ffree
lods
data16
xchg
aas
mov
roll
mov
in
mov
lods
adc
mov
sbb
loop
adc
adc
lgs
mov
notb
dec
jp
orl
divb
xchg
mov
sbb
ja
push
jmp
sbb
dec
or
fcompl
mov
test
flds
ss
xchg
pop
xchg
adc
mov
ret
out
imulb
sbb
mov
xor
test
imul
add
imul
mov
fbld
fwait
jg
cmp
sub
mov
mov
jge
and
call
out
pop
mov
in
jmp
test
das
cmpsb
adc
jns
fwait
aas
data16
and
mov
test
lea
adc
adc
push
mov
xchg
mov
fidivs
sbb
shl
movsl
ss
subb
mov
add
leave
aas
dec
addr16
mov
cs
fs
mov
iret
cli
add
gs
fisubrs
mov
hlt
fidivl
sbb
ss
xchg
aas
and
pop
test
in
in
xor
out
push
fwait
adc
test
dec
sahf
out
adc
andb
add
push
mov
jp
xchg
mov
data16
subb
sub
nop
addr16
ljmp
jnp
pcmpeqw
lds
pop
pcmpeqb
inc
push
sbb
push
jns
lcall
loope
pop
push
jecxz
adc
out
xchg
int
inc
or
fstpl
scas
mov
fwait
or
mov
fisubs
sbbl
and
out
jbe
test
nop
adc
xchg
stc
adc
and
xchg
or
adc
jb
pop
insb
rcll
stos
inc
jae
xchg
dec
jmp
mov
movsb
loope
xor
push
rcrb
adc
pop
push
xchg
mov
sti
or
push
add
add
movsb
rol
mov
add
in
jge
ret
mov
push
lea
sbb
cmpsb
jg
add
in
dec
or
inc
cmpsb
sbb
test
mov
or
in
cmc
xor
lret
out
mov
sbb
xlat
dec
sahf
adc
mov
mov
jne
jne
scas
stos
xchg
sub
adc
jb
sbb
repz
jg
sbb
mov
loope
sbb
xor
push
inc
outsb
out
rclb
mov
movsl
add
test
sbb
mov
xchg
fcomip
mov
mov
adc
out
inc
dec
dec
outsb
adc
lahf
cltd
pop
sub
pop
or
js
add
fiadds
movsl
mov
and
movsl
adc
loopne
adc
enter
adc
mov
push
push
out
add
cmpsb
xor
mov
xor
jle
adc
filds
scas
jl
sahf
scas
into
sub
mov
in
sbb
ret
fcomps
cmc
mov
dec
fsubrp
push
sbb
dec
or
mov
fdivrs
adc
mov
add
stos
call
sub
push
push
mov
out
in
jo
repz
gs
cmc
fimuls
add
rol
lods
xchg
inc
test
inc
divb
hlt
loop
cmp
int
testb
mov
xchg
jg
hlt
adc
test
cs
mov
out
insb
and
adc
shlb
es
lods
mov
sbb
mov
js
mov
add
movsb
pop
movsl
bound
movsb
ss
hlt
movsb
cmpsl
jecxz
mov
pushf
pop
and
xchg
inc
daa
out
out
add
xchg
pop
sti
mov
mov
fwait
les
xchg
addr16
imul
inc
movsl
pop
mov
xchg
jbe
insb
cmpsb
xchg
ret
data16
sub
adc
add
and
cmpsl
xor
or
stos
pop
add
mov
daa
loop
push
pop
add
dec
fwait
push
loope
sub
jae
and
mov
mov
push
cld
or
stos
arpl
add
arpl
xchg
ret
xor
xor
cmc
shrb
lds
cmpsl
push
add
xchg
xor
test
mov
addb
clc
test
fnsave
repz
out
inc
mov
xor
adc
add
scas
in
out
mov
ljmp
sbb
sbb
inc
push
cli
push
jecxz
xchg
out
pusha
mov
mov
mov
mov
and
loopne
mov
mov
mov
xor
xchg
mov
stos
imul
das
pop
pusha
jnp
or
scas
xor
mov
jbe
mov
pusha
sbb
add
add
push
sarl
xchg
aad
xchg
sub
mov
gs
push
jecxz
daa
imul
adc
cwtl
fsubr
lock
aam
push
mov
cmpsl
insb
and
xchg
sbb
sbb
xchg
mov
sar
inc
pop
jmp
xchg
loopne
mov
jo
pop
sbb
push
dec
test
pop
loop
xor
sub
jb
out
lea
sub
push
push
scas
mov
sbb
push
jmp
inc
test
sti
xchg
cmc
filds
adc
insb
cltd
dec
and
testb
lds
nop
cs
add
out
dec
xlat
data16
fcmovne
xchg
add
sub
lcall
loope
dec
cmpsb
out
add
jg
pop
test
adc
push
scas
mov
xor
bound
adc
ret
lcall
sbb
dec
test
or
dec
sub
adc
icebp
fcomps
fiadds
test
movups
stos
es
gs
fisubrl
das
jmp
mov
pop
jne
and
loop
in
sbb
or
fisubl
xor
push
adc
push
xor
ljmp
fstl
push
pop
xor
push
imulb
into
mov
jo
sub
xchg
test
cmp
lods
mov
xchg
add
mov
insl
push
add
movsb
xchg
enter
inc
cmp
shll
push
adcb
lret
mov
pop
mov
cmp
pop
jmp
int3
adcl
out
jae
xor
pop
outsl
jo
lock
or
push
inc
mov
xor
cld
pusha
out
imulb
shrb
fdivrs
ret
xchg
loope
and
iret
cmpsl
and
jecxz
decw
out
add
adc
inc
xlat
mov
ja
adc
push
mov
push
loope
jmp
enter
movsb
test
and
push
bound
movsl
ror
es
jae
dec
add
xchg
or
xchg
shl
fnstcw
jnp
sbb
es
mov
hlt
lods
jecxz
hlt
pushf
daa
sbb
fnstcw
add
clc
dec
jb
lea
push
shrb
adc
addr16
mov
adc
sbb
testl
pusha
mov
lock
or
mov
or
cmp
xchg
jecxz
mov
mov
and
sub
push
xor
sub
rcr
mov
mov
sbb
xor
lret
sbb
ljmp
mov
xor
cmpsl
xchg
xchg
in
or
sub
das
pop
mov
push
aaa
push
lods
mov
shll
test
shll
and
mov
shrl
fbstp
out
push
lahf
and
jecxz
lds
enter
sub
adc
aaa
mov
add
negl
in
test
and
mov
aas
in
cmp
cld
ficomps
fsubs
outsl
scas
daa
dec
inc
mov
popw
divb
in
sahf
jle
out
mov
mov
add
xor
dec
loope
add
mov
ss
loopne
in
fadd
mov
loop
adc
or
inc
pop
and
pushf
pop
sub
test
or
cmp
and
mov
roll
cmp
imul
pop
cmpsl
cwtl
daa
adc
mov
adc
rcll
xchg
inc
inc
add
daa
inc
and
mov
sub
lods
and
ret
lret
sbb
xchg
pop
jne
addr16
xor
hlt
and
xchg
loopne
pusha
push
adc
enter
stos
mov
adc
aad
lcall
xchg
inc
mov
out
or
jg
pop
pop
cld
pusha
ret
mov
lods
incb
xchg
pop
add
insb
nop
addr16
sub
mov
mov
dec
xor
or
xchg
adc
adc
out
loopne
pop
aaa
mov
bound
movsb
sahf
pop
adc
xor
rclb
jbe
xchg
mov
mov
in
jae
xchg
scas
mov
addr16
mov
aas
arpl
inc
jg
test
daa
xchg
es
cs
xor
lods
pop
mov
jecxz
das
cltd
or
ficoms
cld
push
lea
fiaddl
sub
aad
neg
mov
scas
hlt
add
hlt
mov
lahf
in
jg
mov
mov
jb
sahf
out
mov
aaa
ds
iret
add
xchg
jb
add
fimull
mov
loop
pop
in
outsl
stos
pop
mov
dec
mov
sub
push
cmp
dec
insb
mov
sub
mov
mov
fisubrl
imull
xchg
inc
adc
shrb
sbb
mov
movsb
fucomp
sub
mov
push
and
xor
fadd
test
loop
test
push
mov
pop
cmpsl
shlb
sbb
sub
sbb
daa
scas
push
mov
and
xor
adc
jnp
or
orl
adc
out
dec
mov
jmp
sub
mul
push
out
ss
lret
out
mov
shr
adc
dec
push
mov
mov
aad
movsb
cmc
mov
sub
js
mov
orb
mull
mov
data16
mov
cmpsb
push
loop
aaa
in
jnp
mov
call
mov
push
arpl
sub
aam
lret
sahf
or
testb
pop
test
insl
scas
repz
jp
jmp
repz
push
mov
mov
dec
test
ss
mov
push
shll
push
jg
sub
dec
sub
sbb
cli
and
repz
sti
add
sahf
mov
xor
dec
and
xchg
stos
lock
adc
cmp
or
mov
sbb
mov
arpl
sbb
cmp
pop
addr16
or
imul
adc
in
jmp
mov
pop
push
xchg
xchg
mov
cwtl
xor
out
mov
and
dec
es
mov
andb
je
out
sbb
out
lret
sbb
shll
inc
fidivl
movsl
push
lcall
jecxz
jne
cli
iret
sub
add
mov
lcall
insl
movsl
jmp
loope
jmp
add
cmpsb
mov
push
mov
loopne
notl
pop
addr16
ss
mov
sbb
adc
shrl
addr16
fcomps
add
add
jo
cmp
fwait
xchg
rcrb
and
and
shl
in
cmp
mov
inc
lcall
lret
pushl
test
ja
push
sbbl
mov
repnz
inc
decb
push
or
push
mov
fwait
sub
cmp
jp
hlt
in
sub
ja
movsl
sub
lock
cmp
add
push
xchg
cltd
idiv
add
sub
es
mov
movsb
mov
or
push
jmp
sub
mov
fscale
xchg
dec
jae
lret
sbb
jo
ret
bound
aaa
in
xorb
je
out
push
addr16
popf
push
push
xchg
adc
jmp
ss
mov
pop
mov
inc
loop
xchg
or
mov
scas
in
adc
iret
clc
and
mov
out
push
sbb
push
test
sub
movsb
or
mov
jb
clc
outsb
or
or
out
in
and
and
mov
mov
scas
mov
lret
ljmp
jge
xchg
je
ljmp
pop
push
add
jmp
xor
pushf
fwait
out
shlb
push
aad
sub
jb
pop
popa
xor
loop
loopne
mov
shlb
adc
divl
ds
loopne
out
and
push
mov
push
imul
mov
dec
sub
aaa
popf
mov
pop
and
and
xor
sub
out
mov
in
inc
and
pop
sub
xchg
cmpsl
shlb
movsl
ss
inc
xor
stos
inc
jmp
iret
inc
xchg
add
cmc
or
jae
das
and
mov
mov
jl
cmpsl
scas
or
mov
mov
scas
inc
fidivs
imull
bswap
jns
aam
or
and
movl
lcall
jbe
add
jae
bound
mov
mov
push
int3
scas
out
mov
in
pop
or
xchg
or
out
imulb
cmpl
fidivrs
sbb
sbb
pop
pop
pop
jbe
lahf
mov
rolb
icebp
mov
inc
pop
daa
mov
jmp
jecxz
test
jno
adcb
ljmp
push
add
sub
int3
adc
sahf
push
push
mov
test
movl
fdivr
pop
lcall
lods
mov
mov
xchg
cmp
cmp
lods
and
xchg
add
inc
push
and
sub
xchg
dec
ret
repnz
mov
repnz
sub
sbb
cltd
ftst
sub
push
aas
mov
test
pop
cmp
xchg
movntq
xchg
cmp
cwtl
addr16
push
sbb
inc
adc
test
jmp
cmpsb
movsb
sbb
outsb
mov
ret
pop
mov
nop
out
shl
xchg
xchg
loop
jge
xor
push
pusha
mov
jecxz
inc
fstl
pop
sbb
push
mov
shl
add
cwtl
dec
push
pop
add
lock
icebp
adc
add
aam
add
mov
xchg
gs
ljmp
scas
mov
data16
xor
dec
cmpsl
in
sbb
dec
mov
arpl
jae
lahf
push
enter
mov
adc
and
mov
xchg
pop
add
mov
and
fs
ret
sbb
cli
daa
push
cmp
imul
mov
int3
xchg
adc
inc
pop
sbb
jns
insl
push
jge
cltd
and
inc
icebp
js
pop
mov
pop
push
and
push
fdivl
mov
mov
push
arpl
mov
repnz
mov
js
mov
js
push
ja
mov
lds
iret
gs
cmpsl
shll
xlat
test
aaa
fildl
add
push
lahf
icebp
sbb
jo
loope
adc
add
pop
cmpsb
data16
pop
test
fcomp
jno
dec
jb
insb
adc
xchg
das
das
push
or
push
rorl
cltd
loop
lahf
icebp
push
cmp
divb
xlat
test
push
test
iret
xor
dec
adc
int
leave
xchg
push
shrl
pop
and
or
mov
sub
bound
jo
mov
pop
xchg
fidivrl
sbb
and
ja
sahf
mov
loop
jbe
ss
dec
pop
jge
mov
movsl
add
and
adc
mov
pusha
pop
pop
sti
dec
cmp
out
mov
lea
cmpsl
in
xchg
adc
movsl
inc
adcl
out
hlt
fs
xchg
inc
insb
imul
mov
push
aad
inc
data16
xchg
arpl
mov
fsubp
fiaddl
mov
outsb
adc
pop
enter
test
and
scas
mov
jbe
inc
fwait
inc
in
sbb
rclb
push
xchg
mov
sbb
mov
add
xor
lods
flds
ret
mov
popl
sub
cltd
in
add
iret
add
add
movsl
ss
and
movsb
lods
into
cli
mov
xrelease
mov
rcrl
mov
negb
daa
jno
jns
in
xchg
and
adc
fildl
and
scas
sbb
pop
stc
mov
shl
loopne
loope
rcl
and
rcll
in
add
fwait
rcll
lock
fcmovbe
fmulp
scas
push
out
aad
jae
dec
lods
push
push
or
aam
xor
jbe
ss
mov
cmp
pop
push
das
rcll
pop
cmc
iret
test
mov
lods
data16
leave
dec
enter
sbb
pop
jae
aad
jns
int3
push
add
jnp
pop
mov
mov
mov
jbe
xchg
jmp
jp
mov
jo
cltd
add
and
fsub
aam
movsb
out
andb
adc
mov
mov
inc
inc
lds
idivl
rcll
icebp
lods
fsubrl
icebp
fmuls
arpl
sub
adc
and
lods
push
mov
inc
sahf
pop
bound
movsb
pushf
sub
jmp
inc
xchg
xchg
sbb
add
jne
jbe
mov
jb
adc
cmp
loope
lock
lock
ret
push
shll
dec
xchg
ret
insb
fadds
add
dec
add
add
adc
add
and
add
cmp
add
add
add
add
add
push
add
addb
add
add
add
push
add
add
add
add
add
add
mov
add
cwtl
mov
add
clc
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
mov
add
add
add
add
add
add
pop
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
xor
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
add
inc
add
add
outsl
add
je
ja
popa
add
add
add
add
add
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
add
add
add
adc
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
push
add
inc
add
push
add
add
xor
push
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
push
add
pop
add
dec
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
aas
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
gs
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
