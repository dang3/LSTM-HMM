cld
popa
push
or
nop
push
cwtl
repz
mov
sbb
int
jnp
cmp
popa
push
sbb
inc
stos
rolb
inc
inc
fsubl
xchg
in
lock
xor
inc
mov
in
cmp
nop
jbe
sbb
movsb
arpl
adc
clc
sbb
notb
sbb
cmpsb
sbb
mov
mov
nop
addr16
mov
imul
add
pop
and
cmpsb
js
stc
pop
add
sub
mov
loope
fcomps
add
jecxz
and
sti
jecxz
in
jecxz
inc
sbb
loope
sbb
and
sti
add
daa
loope
jnp
jbe
sti
jecxz
push
sub
out
mov
mov
or
xlat
aas
inc
add
cmp
loope
jnp
stos
in
arpl
sbb
add
mov
fsubr
adc
sbb
sbb
fcompl
cmp
add
jnp
mov
movsl
jl
pop
mov
data16
ficompl
loopne
inc
mov
sbb
mov
jecxz
gs
std
mov
push
fisubl
xchg
inc
add
jecxz
mov
jecxz
mov
loop
fcomps
adc
and
inc
sbb
cld
and
mov
pop
cmpsl
negb
push
into
cli
repnz
mov
jecxz
push
ljmp
mov
cli
jecxz
dec
and
mov
repnz
jnp
adc
sub
and
out
mov
loop
data16
lret
cmp
mov
pop
sub
mov
push
add
jo
jecxz
and
cmp
add
xor
cs
out
in
adc
das
sbb
adc
mov
mov
in
arpl
stc
jns
leave
adc
mov
in
arpl
movb
loop
repz
test
sub
out
push
scas
mov
pop
loope
ljmp
cs
inc
add
pop
loope
and
mov
push
ljmp
jle
jmp
in
inc
pop
mov
movsb
loope
fs
in
mov
lods
adcb
push
sub
sbb
push
add
jecxz
in
xchg
iret
or
and
daa
and
hlt
sbb
out
inc
and
cmpsb
mov
loopne
mov
repnz
and
push
add
inc
add
add
clc
rcl
mov
in
clc
and
jnp
daa
push
int
sbb
cmp
cmp
cmp
loope
xor
adc
cmp
mov
ret
jmp
jp
test
and
jnp
mov
lcall
in
mov
jnp
insb
xor
lock
push
xor
xor
and
cmp
add
pop
in
cmpl
push
enter
outsb
andb
es
les
js
bound
hlt
mov
adc
sarl
jnp
loope
xchg
sub
repnz
add
sub
mov
loope
fcomps
add
mov
and
jnp
pop
add
jle
sbb
jmp
and
xchg
in
repnz
je
sub
inc
ljmp
add
sub
das
adc
cmp
mov
xchg
cmp
call
sbb
in
jecxz
cltd
and
fwait
push
cmp
loop
cmpsb
daa
cli
pusha
cmp
mov
xor
in
adc
insb
in
std
xor
fs
pushf
ret
jmp
popa
jge
push
sahf
in
jmp
and
in
adc
pop
sbb
cmp
inc
imul
adc
jnp
and
in
adc
repz
adc
xchg
shll
cli
dec
cmp
mov
cmc
aas
add
mov
sti
jecxz
rcr
imulb
adc
sti
jecxz
fldenv
pop
das
loop
jecxz
inc
jmp
add
add
hlt
and
cmp
bound
pushf
jecxz
pop
out
add
in
xchg
imul
xchg
stos
pop
lock
insl
je
in
clc
shll
mov
aad
cmp
cltd
push
cmp
fiadds
mov
cmp
pop
cs
inc
loopne
loopne
sub
aaa
add
rolb
mov
sbb
xlat
cli
xchg
addr16
xor
mov
cmp
xor
aam
sbb
xchg
and
cmpsl
or
cmp
arpl
and
dec
jmp
and
shlb
in
addb
sti
jecxz
cld
and
push
add
and
addr16
pop
addr16
sbb
loop
jecxz
jne
outsb
pop
pop
pushf
adc
aad
gs
in
in
rol
rcrl
ret
adc
movb
jns
pop
cmpsl
cli
les
jl
les
cmpsl
mov
xchg
sbb
frstpm(287
mov
xor
daa
cli
sbb
jecxz
fcmovbe
fdivrs
lret
int
jecxz
pusha
mov
sbb
out
fldt
jp
gs
shlb
jecxz
in
xchg
inc
mov
and
mov
fldenv
inc
lcall
xchg
jecxz
add
and
call
stos
mov
and
sti
mov
ret
jecxz
movsl
add
es
jecxz
xor
jecxz
movsl
cmp
jecxz
pop
mov
xor
popf
and
pop
movsl
cmp
jecxz
dec
mov
adc
adc
fdiv
out
inc
and
sbb
push
loop
cmp
adc
data16
rcrl
jmp
in
and
pop
xor
sbb
in
jecxz
fistpll
jb
in
xchg
ja
out
and
cmp
and
cmp
pop
mov
loop
push
cmp
xor
aas
stos
mov
loop
arpl
and
das
cmp
jecxz
std
push
scas
jno
outsl
outsb
or
cmpsb
sahf
mov
mov
and
in
sub
or
lahf
outsl
movsb
mov
adc
cmp
push
rcl
jne
out
out
inc
add
push
je
jle
push
mov
dec
pop
sbb
call
jb
pusha
sub
adc
cli
xchg
sub
cltd
out
negl
cmpsb
push
mov
or
and
shlb
sbb
pushf
adc
jmp
pop
imul
cmp
xor
pop
mov
ret
repnz
xchg
push
adc
and
dec
xchg
insb
insl
repnz
add
pop
addr16
rcll
cmp
and
popa
or
jg
or
mov
scas
imul
lret
mov
xchg
pusha
int
cmc
loopne
sbb
int
aam
mov
stc
and
fldenv
dec
pop
mov
pop
cli
in
repz
or
into
add
mov
imul
rcll
push
scas
pusha
add
and
cmp
addb
and
cmp
sub
pop
jns
sub
jbe
lock
push
icebp
push
insb
and
mov
negb
cmp
push
insl
jg
mov
ds
xor
cmp
and
lock
cs
pop
mov
mov
ffreep
es
inc
sub
inc
insl
cltd
pop
dec
rcrl
popl
lea
jecxz
dec
sbb
iret
stos
stos
jecxz
sbb
push
push
inc
jl
sbb
lods
iret
fnstcw
sub
out
fs
aad
and
add
cmp
push
sbb
imul
fisubl
add
leave
nop
in
mull
out
nop
in
gs
sbb
push
xor
rolb
mov
fidivl
xlat
mov
jne
jae
pop
jae
push
pop
mov
mov
ja
jg
in
sbb
insl
jb
sub
mov
xchg
filds
add
pop
arpl
dec
xor
adc
mulb
xor
jae
das
push
push
adc
xor
push
or
cld
js
mov
int3
jbe
repz
jge
iret
fdivl
scas
hlt
mov
push
mov
inc
dec
or
mov
push
pop
pop
scas
fs
sub
lock
jle
pusha
xchg
cmp
hlt
out
divl
add
mov
inc
add
mov
jmp
loope
inc
jp
test
push
loope
cmp
xchg
adc
aad
add
sbb
mov
cmp
lea
adc
xchg
push
and
ljmp
in
jo
movsb
rcr
sbb
mov
mov
movsl
bswap
mov
push
inc
ljmp
addr16
clc
and
inc
xor
inc
mov
shlb
push
xchg
mov
or
push
enter
xor
gs
loope
xor
inc
sbb
or
cmpsl
sti
popa
or
add
pop
jmp
adc
cmp
jecxz,pn
aaa
es
dec
and
rclb
jae
daa
sub
decl
sti
xchg
cmpsl
lock
mov
sahf
mov
jbe
int
mov
adc
loope
sbb
inc
jge
fcmovnb
mov
icebp
inc
cli
sub
in
add
dec
adc
push
ss
mov
or
loope
js
shlb
ss
pop
sbb
mov
push
xor
jae
dec
outsl
sbb
leave
imul
sub
cltd
mov
xor
es
mov
xchg
adc
clc
pop
push
shll
ss
js
aad
add
pop
dec
jno
mov
xchg
inc
cmp
fiaddl
popa
push
loop
mov
cmp
pop
pop
insb
imul
scas
sarb
dec
cmp
sbb
sub
sti
or
mov
jecxz
fadds
push
sub
leave
ret
dec
fwait
cmc
fnstenv
icebp
mov
push
jle
add
mov
test
jg
jmp
mov
jl
icebp
jmp
pop
and
inc
fsub
repnz
and
pop
pop
das
stos
es
sub
mov
faddl
xchg
aad
mov
jnp
add
out
cmpsl
and
adc
mov
sarb
repnz
repnz
xchg
pop
xchg
aaa
fisubl
js
xor
sbb
sub
lods
stos
daa
push
push
cmp
inc
and
inc
jo
add
push
int3
or
leave
dec
das
inc
les
lds
push
and
out
and
push
pusha
cs
cmp
sbb
aaa
jp
mov
adc
xor
inc
and
aam
lahf
xchg
jecxz
adc
add
add
popa
mov
pop
cs
imul
jnp
push
fwait
loop
mov
scas
cmp
jb
and
repnz
cmp
adc
xchg
adc
lret
sub
sub
xchg
je
out
add
sti
stos
push
push
jecxz
ss
aaa
imul
sub
xchg
mov
pop
hlt
iret
inc
sbb
jno
cmp
cli
mov
imul
add
lret
imul
jbe
sbb
mov
imul
and
pop
pop
ljmp
shl
ljmp
sub
out
or
push
fsub
mov
sbb
repnz
mov
fiaddl
insb
inc
push
and
das
stc
mov
jnp
pop
mov
inc
cmp
and
cld
dec
mov
aas
or
pushf
sub
jno
add
clc
out
mov
push
xor
add
pop
add
in
rcrl
pop
vpcmpeqb
ret
add
filds
sub
aam
or
mov
negb
lret
inc
jecxz
sti
sub
xlat
and
mov
mov
inc
andl
sbb
sub
popa
mov
test
and
and
xchg
into
adc
cmp
call
sahf
jbe
cmp
sbb
xchg
mov
sbb
in
adc
out
xchg
add
pop
mov
adc
sbb
mov
sub
xchg
sub
loop
loope
ja
test
lods
push
popa
jbe
inc
jle
in
mov
and
lret
push
ret
js
ror
inc
movsl
inc
icebp
xchg
add
test
adc
push
out
jp
dec
das
roll
sub
test
adc
aam
xchg
or
int
add
jle
inc
sub
or
movl
adc
inc
aad
sub
rcl
outsl
add
cltd
xchg
push
es
add
mov
into
and
add
imull
js
sti
mov
jno
or
sub
inc
pop
adc
ret
lock
clc
rcll
and
adc
icebp
xchg
cmc
sbb
daa
mov
and
ret
mov
addr16
test
stos
sub
push
add
jne
and
or
sbb
aas
mov
or
xchg
mov
or
jno
push
cltd
jecxz
and
xor
jo
loopne
dec
xlat
pushf
mov
popf
test
je
adc
out
adc
cli
stc
mov
add
mov
cmp
adc
jns
add
cmp
cmp
sub
in
pop
arpl
mov
in
add
jb
jb
add
jae
mov
es
cpuid
inc
loop
nop
les
ret
adc
jecxz
sbb
jo
push
stos
popa
fstl
sti
movsb
sbb
fsubp
sti
stos
aas
cmp
pop
mov
pop
add
loopne
cmovs
pop
and
xor
mov
cmp
test
jecxz
stos
push
cmp
and
add
inc
imul
fmuls
jae
pop
pop
arpl
jnp
fchs
movsb
inc
ss
mov
mov
loope
iret
out
sub
mov
hlt
loopne
icebp
xchg
xor
test
rorb
jb
aaa
mov
cs
pushl
cli
loopne
arpl
and
jnp
or
and
pop
test
push
fdivrs
insl
xorb
stos
lret
add
inc
dec
call
sub
lret
push
mov
sbb
add
movsl
pop
push
les
xchg
sbb
cmp
mov
fdivs
fldenv
cmp
in
pushf
out
icebp
xor
inc
push
cmp
in
mov
data16
imul
das
or
cwtl
mov
cmp
mov
ljmp
lahf
ret
add
add
fdivr
stos
loopne
jns
adc
daa
daa
fs
cmp
sub
and
pushf
int
sysexit
and
jmp
mov
and
loope
loope
xchg
push
push
mov
imul
fnstcw
loope
jmp
cmp
pop
pop
enter
pop
cmp
sbb
adc
mov
adc
jl
lea
int
mov
push
jecxz
aam
cmc
je
call
lods
adc
pop
das
fbstp
pop
push
pop
jecxz
push
xor
sub
inc
jae
cmp
call
xor
arpl
mov
arpl
dec
sbb
in
mov
rclb
pop
push
es
mov
pop
pop
lds
push
repnz
out
cltd
js
clc
mov
repz
icebp
nop
test
push
inc
sahf
and
push
mov
or
add
insl
out
insl
mov
jl
jmp
test
xor
mov
adc
xor
mov
ljmp
adc
sbb
mov
cmp
and
out
lods
dec
or
aaa
ds
cmpl
fs
stos
mov
leave
leave
out
and
mov
in
bound
sti
jmp
movsl
xor
mov
in
js
mov
mov
cmc
lea
mov
cmp
shl
shl
jno
jecxz
adc
add
popf
jle
adc
xchg
inc
in
mov
inc
add
int
cmp
pop
push
xor
xor
push
sub
sbb
fbstp
xchg
std
inc
or
dec
insl
inc
and
push
jmp
cli
loope
mov
pop
lds
js
loop
push
cld
fldcw
or
imul
shll
stc
setnp
dec
pusha
fcmovne
fs
cmp
test
mov
in
imul
jnp
ja
mov
mov
leave
adc
mov
shll
push
mov
pop
pop
xchg
or
mov
xchg
test
xor
dec
cmp
mov
lea
jmp
or
jle
sbb
mov
jne
mov
add
sub
add
inc
mov
xor
mov
inc
lahf
or
nop
cmp
mov
pop
sbb
lahf
mov
paddd
inc
lods
inc
push
ljmp
pop
fs
add
xor
sub
in
scas
mov
and
cmp
stc
or
out
cltd
popa
and
jae
mov
jnp
and
push
inc
mov
or
sub
mov
int
pop
jecxz
push
push
mov
imul
lret
cmp
cmpsl
and
movsl
mov
xor
insb
add
clc
xor
xor
movsl
push
or
push
arpl
push
out
pusha
sub
mov
inc
ja
jmp
add
mov
insl
push
lret
and
mov
popf
jl
jo
push
test
and
and
adc
int3
and
int
into
sahf
outsl
xchg
loop
sbb
ss
and
push
pop
lret
repz
jmp
shl
es
mov
pushf
popa
aaa
inc
push
mov
scas
push
push
jb
and
mov
test
loopne
pusha
outsl
loop
int
movsb
jno
mov
fdivl
pop
dec
mov
enter
mov
inc
mov
addl
xor
mov
leave
jmp
xchg
push
lock
mov
cs
imul
add
add
adc
sub
adc
or
and
fwait
jmp
pop
lret
aas
mov
add
rorl
mov
aaa
cs
mov
jle
gs
push
fsubs
leave
mov
mov
lret
sub
fcoms
and
rolb
sbb
pushf
nop
fs
jmp
sarl
fiadds
negb
repz
pop
sti
mov
xor
pop
jmp
sub
mov
mov
xor
lret
sub
mov
aad
mov
shl
icebp
or
pusha
push
add
cmp
xchg
lret
lds
xor
call
mov
inc
call
push
out
ss
mov
jnp
mov
mov
mov
xchg
out
mov
fwait
cmpsb
pop
lret
jno
adcl
enter
xchg
rorb
jo,pt
out
mov
mov
bsf
and
mov
aas
shlb
int
mov
int3
popa
fisubrs
in
movsb
lcall
sti
sbb
push
leave
fnstcw
sub
sbb
jle
sub
sub
fsubs
mov
xchg
and
ret
int3
add
cmp
inc
cltd
scas
xor
push
push
jo
lds
scas
sarl
iret
fs
or
add
mov
jp
adc
lahf
test
and
fidivl
scas
cmp
push
sub
ret
mov
or
xor
fsubs
leave
loope
sar
add
outsb
cmp
out
fdiv
dec
cmpsl
xlat
cmpsl
adc
mov
mov
in
xor
aas
inc
sbb
and
and
les
add
sti
into
jecxz
and
xchg
addb
mov
inc
and
out
clc
jnp
xchg
adc
aam
and
mov
mov
fisubs
sub
fisubrl
jnp
mov
divps
mov
cmp
push
push
in
inc
xor
push
leave
adc
sbbb
out
repnz
dec
cmp
pop
mov
or
fadd
mov
adc
push
jle
sub
mov
jp
dec
mov
dec
ficompl
movsl
cmp
sbb
aam
or
inc
scas
dec
out
mov
fnstenv
mulb
jae
pop
nop
jnp
inc
repz
mov
dec
sbb
in
gs
daa
push
cld
dec
xchg
mov
pop
je
adc
outsl
xor
xchg
add
lret
mov
mov
dec
push
mov
mov
and
push
mov
test
xchg
arpl
xor
daa
cmp
repnz
jecxz
jp
mov
mov
pop
cmpsb
sub
and
out
inc
jmp
adc
iret
cli
pushf
fwait
sti
andl
push
and
fldenv
dec
mov
or
pushf
jmp
cmp
js
loope
popf
pusha
arpl
mov
jae
fldt
das
add
mov
xorl
repnz
xchg
stos
or
lods
lods
push
orl
fstps
mov
fisubs
roll
sub
pop
dec
or
xchg
arpl
arpl
dec
jb
jl
cmp
mov
movsl
cmp
mov
sbb
cltd
push
sub
arpl
xchg
or
cmp
mov
mov
arpl
popa
sbb
notl
sub
jnp
and
into
scas
data16
dec
sbb
js
dec
cmp
orl
das
dec
adc
movsl
cmp
out
push
enter
xchg
xchg
pop
fsubs
adc
sub
fcoml
shl
shlb
loope
pop
imul
subb
and
mov
ljmp
aam
ret
xor
shr
mov
xchg
fimull
adc
mov
jmp
sbb
imul
sub
mov
cltd
out
push
mov
jae
xor
lods
in
loope
inc
cmp
jb
xor
movsl
or
outsb
cmp
or
jecxz
mov
fwait
push
lahf
push
jmp
popa
sahf
adc
je
lahf
mov
bswap
int
arpl
mov
jecxz
mulb
mov
outsb
lahf
add
stos
jecxz
push
lahf
mov
test
int
push
add
mov
or
popa
movsb
push
push
jae
movsl
call
or
sub
inc
push
or
ret
test
les
or
pushf
xor
sub
xchg
int
push
or
int
and
das
sub
lods
hlt
lds
jp
cmc
push
push
cltd
adc
jne
jnp
mov
daa
lret
xchg
fistpll
dec
cltd
and
adc
adc
fnstsw
gs
aas
pusha
fwait
dec
icebp
sbb
movsl
cmp
stos
push
addr16
xor
mov
sub
aad
lcall
in
jle
xchg
das
adc
sti
movsl
dec
or
jns
push
arpl
cs
mov
jne
add
push
mov
pop
pusha
adc
inc
fsub
pop
pop
mulb
push
cmc
in
add
andl
rol
xchg
mov
enter
pop
push
out
loope
repz
sub
and
push
movsb
xchg
ret
jp
call
xchg
inc
jl
movsl
and
jns
iret
inc
or
out
mov
scas
in
out
gs
test
sahf
loop
push
jne
movl
cmp
shr
mov
mov
adcb
leave
mov
mov
cmp
lods
sub
cmp
lea
mov
arpl
add
sbb
dec
cwtl
inc
in
and
or
lock
xor
ds
mov
repnz
adc
fistpll
push
into
cmp
lahf
sahf
rol
jns
jae
dec
dec
stc
mov
cmp
mov
or
push
cmp
lods
sbb
pop
add
mov
mov
fldl
mov
sbb
xacquire
sbb
in
or
push
lahf
push
adc
mov
cmp
add
int3
aam
das
arpl
cmp
andl
push
sub
mov
push
push
add
mov
push
std
pop
push
in
test
jmp
fdivrl
xchg
in
adc
lret
jecxz
shlb
cli
fs
out
jbe
subl
clc
jne
shll
or
pop
inc
or
pusha
js
ljmp
fisubs
xor
jg
orb
pop
loop
and
cmp
lret
lret
and
out
cmpsb
pop
in
sbb
mov
push
out
jbe
xor
out
mov
pop
cmp
add
sbb
jb
loop
cmp
inc
dec
pushf
mov
pusha
in
jns
mov
sbb
xchg
xchg
fs
add
mov
cmp
divl
fistl
mov
xchg
insb
dec
jo
arpl
push
add
adc
jecxz
xlat
fidivl
and
flds
mov
test
jecxz
sbb
bound
mov
test
xchg
data16
mov
jnp
or
jg
mov
cld
or
repnz
push
jg
in
xor
and
outsl
fistpll
in
adc
mov
push
mov
add
ja
popa
mov
ret
xor
and
fucom
jbe
daa
and
sbb
outsb
sahf
lret
dec
adc
and
adc
idivl
dec
add
call
cmpl
sbb
mov
lss
mov
push
mov
cmp
test
jnp
outsb
fistpll
leave
cltd
mov
fildl
sbb
iret
ds
mov
leave
ret
movsb
clc
xor
outsb
int3
jge
inc
cld
mov
adc
gs
aam
je
sbb
or
int
loop
inc
test
lea
push
ds
in
gs
jns
cmp
daa
std
subb
ret
mov
jae
pop
fisttps
mov
xchg
xchg
adc
push
mov
and
outsb
push
and
call
pusha
xor
sti
inc
xchg
in
test
xor
sbb
cwtl
insl
shl
push
push
movsl
fwait
xchg
adc
adc
mov
out
xchg
and
mov
mov
aaa
xor
cmp
lea
arpl
jge
sbb
loope
xchg
sub
mov
xor
hlt
repz
popa
cmp
js
bound
inc
aaa
incb
aam
je
pop
mov
add
iret
cld
mov
mov
decl
cltd
add
movsl
jne
jnp
cmpl
and
rclb
rcrl
faddl
mov
imul
or
mov
jle
dec
add
jecxz
push
xor
dec
xor
dec
inc
lds
and
stos
cwtl
xorl
cld
xor
call
mov
xchg
int3
popa
dec
lock
les
in
ret
hlt
cmc
or
lret
popa
pop
ds
push
sub
test
push
push
cmp
pop
mov
popa
arpl
in
or
pop
int3
inc
into
out
jnp
aas
lcall
inc
mov
neg
cmc
imull
inc
imul
arpl
not
adc
jmp
xor
stos
cmp
adc
mov
mov
mov
jge
xchg
daa
and
jae
fstps
outsb
adc
inc
fstp
out
push
mov
scas
fsubr
pop
gs
aam
pop
inc
add
cmc
mov
aam
adc
push
cmp
and
inc
mov
fucomp
test
cmc
fldenv
adc
jnp
fwait
jecxz
hlt
add
and
pop
jl
and
cwtl
insl
ret
arpl
gs
leave
shll
aad
out
outsl
imul
or
popa
not
stos
in
rorl
sbb
pop
mov
and
and
or
or
data16
add
jnp
loop
lea
and
mov
add
dec
fcompl
mov
or
or
pop
sub
jge
cmp
and
adc
sub
adc
mov
ret
insb
int3
sub
into
insb
and
fcoml
pop
ja
mov
popa
aad
push
and
fs
aaa
daa
in
cmp
jo
roll
mov
lret
les
or
sub
stos
mov
sbb
xor
ss
jl
push
arpl
cmp
outsb
push
adc
idivb
push
inc
sarb
fcmovbe
mov
ficoms
mov
insl
jo
fisttps
dec
pusha
pop
cmp
adc
loop
in
jecxz
cmc
das
dec
sub
fcmovnb
xchg
movsl
adc
and
sbb
xchg
pop
div
cltd
and
push
cmp
inc
ret
and
inc
xchg
int
and
test
loope
cmpsl
lods
mov
lret
out
pop
jle
pop
cmp
pop
and
jae
pop
and
addr16
mov
lahf
daa
and
xor
xchg
lea
push
mov
repz
mov
push
clc
aad
cld
mov
add
gs
pop
jnp
lahf
mov
fwait
mov
and
lret
popa
push
push
and
repnz
in
pop
insl
jnp
int3
fs
mov
sbb
pop
lock
cmp
in
or
movsb
add
stos
inc
call
bound
adc
add
cmp
and
bound
pop
test
sub
shlb
jnp
inc
jecxz
incb
mov
daa
cmp
mov
cmpsl
fidivs
cmpsb
in
adc
mov
jp
pop
mov
loope
lea
stos
mov
inc
je
push
cli
loopne
and
lret
icebp
mov
xchg
rol
xchg
and
xor
push
mov
icebp
add
pop
mov
aad
insl
fs
mov
adc
lea
and
repnz
ljmp
mov
dec
xchg
jp
dec
divl
cmp
clc
xor
inc
loope
and
and
dec
jnp
jo
fnstcw
or
xchg
jle
pop
gs
cmp
lahf
into
ficompl
aas
jnp
stos
into
rorl
jno
mov
adc
ret
lods
pop
mov
mov
sub
sub
cmp
sahf
scas
ret
adc
jge
jmp
nop
and
lea
ss
mov
arpl
jnp
and
test
mov
adc
lds
andb
pop
popf
pusha
adc
incl
push
sbb
pop
jo
xchg
xor
cmp
and
sub
loopne
cmp
xor
stc
stos
mov
in
dec
sub
test
les
ja
sub
pop
mov
sbb
adcl
sarb
movsb
inc
and
mov
add
mov
fnsave
adc
xlat
lea
andl
bound
sub
pop
shll
arpl
xor
inc
sbb
movsl
loop
xchg
jbe
jl
fnstsw
mov
xor
jno
sub
mov
adc
cmpsb
sub
and
sti
mov
and
pushf
subl
test
ss
xchg
ret
and
jg
mov
add
and
fbld
rcrb
mov
dec
aaa
sbb
lahf
arpl
xor
aad
mov
stc
jo
xchg
mov
and
or
inc
cmp
cmp
inc
push
insl
xchg
or
mov
pop
add
sub
shr
cmp
jmp
mov
mov
cmp
sbb
mov
ds
mov
fnstenv
in
sbb
xchg
cmp
mov
imul
popf
push
cmp
pop
jg
cltd
out
pop
add
cmc
mov
daa
ja
inc
out
fsubs
in
jmp
or
insl
loopne
pop
push
push
lcall
out
scas
sbb
add
mov
int
aaa
call
test
test
test
idivb
fninit
or
mov
aas
int
mov
xchg
push
ljmp
cmp
push
popf
push
lock
cli
mov
rorl
fbld
pop
lds
fnstsw
into
in
jl
imul
and
fstps
jp
xor
or
imul
xor
and
sub
xor
xchg
or
pop
ja
mov
enter
cmpsb
cmp
arpl
sbb
or
pushf
jbe
inc
fstpt
stos
je
movsl
movsl
cli
pusha
xor
lds
pop
sbb
loope
dec
adc
push
dec
inc
movsl
rolb
addl
cmp
ret
push
xchg
das
fwait
sub
mov
cbtw
fwait
push
call
add
sub
popa
pop
sub
or
xchg
mov
stos
sbb
push
push
and
jl
arpl
daa
adc
ret
sarl
and
out
pop
sub
ds
and
inc
xor
into
stos
loop
cmp
sbb
cmp
mov
sti
lods
cmp
ret
xlat
cmc
fs
rclb
push
lds
std
int3
pop
clc
jecxz
and
loope
push
xchg
fnstenv
sbb
shrb
and
dec
scas
cmp
test
adc
dec
dec
mov
or
pop
cltd
loope
and
sahf
xchg
xor
jmp
inc
ljmp
outsb
out
arpl
pop
xor
sbb
cmp
popa
jbe
or
and
shl
imul
and
test
mov
mov
cmp
ret
or
out
leave
jbe
inc
repnz
in
pop
out
pop
xor
sti
dec
sbb
add
and
int
shl
cmp
push
and
xlat
and
repz
sbb
lea
popa
popa
fld
mov
cmc
aad
movsl
add
and
jp
incb
repnz
call
mov
mov
sbb
push
xor
cmp
ret
sub
mov
add
pusha
insl
sahf
mov
cli
or
mov
movsl
adc
inc
cs
cmp
dec
sbb
scas
iret
mov
mov
pop
jnp
or
xchg
add
sub
xchg
lcall
popa
mov
dec
add
in
cmp
cld
sub
into
push
ss
xchg
sub
stos
fimuls
jecxz
add
lods
loop
push
add
jge
xor
js
jb
hlt
mov
push
shlb
fbld
ljmp
or
and
mov
pop
jl
mov
and
adc
stos
sub
ret
loope
adc
aad
mov
loop
xchg
aaa
push
jl
jmp
push
adc
sar
js
clc
add
subl
mov
sbb
push
mov
inc
fs
imul
xor
gs
rorb
jnp
cmpsb
aas
clc
ja
cmp
jecxz
push
adc
loopne
lcall
adc
repz
fisttpl
sbb
fucomi
hlt
lock
fldenv
sub
nop
orb
jns
fucomp
jmp
adc
mov
mov
dec
iret
lods
xor
ljmp
add
xor
push
in
cmp
mov
push
aad
cmpsb
insl
outsl
insb
mov
into
test
cmp
insb
loopne
pop
loop
or
stc
aas
fucompp
mov
fsubrs
pop
pop
mov
and
cmp
int
xor
test
repnz
mov
mov
add
jmp
cmpsb
std
sub
rol
hlt
xchg
pop
and
and
and
sbb
lret
fildll
fisubl
sbb
in
mov
lea
cmp
adc
imul
adc
iret
xchg
dec
pop
inc
and
add
lahf
gs
imul
ja
push
pusha
cld
loope
out
xlat
xor
cmp
adc
mulb
or
push
shrl
bound
insb
mov
fnstenv
dec
movsl
pop
jecxz
adc
jp
jno
scas
cmp
enter
fldcw
int
jnp
fwait
mov
sar
add
add
push
jp
add
xchg
pusha
xlat
es
cltd
in
aas
mov
sub
sub
cmc
cmp
inc
hlt
cmp
repz
gs
xor
mov
cmp
shlb
and
js
push
push
jo
jl
pop
int3
and
mov
sahf
imul
and
xchg
cmp
fists
mov
cltd
lods
shll
mov
dec
mov
adc
dec
lock
jae
fadd
out
push
jb
rcrl
addb
add
vsqrtps
inc
je
jecxz
movb
test
out
arpl
sbb
clc
nop
dec
xor
jnp
jecxz
inc
dec
lea
jo
sbb
xchg
mov
fst
mov
jge
inc
insb
inc
movsb
std
or
pushf
adc
in
lock
mov
add
fisubl
ljmp
pop
dec
mov
ljmp
cmpsb
xor
xor
and
pop
sahf
sub
or
mov
imul
fdivrp
gs
jp
outsl
orb
cmp
sbb
stos
xor
inc
incb
outsb
add
loope
add
out
add
cmp
jnp
rolb
and
popa
mov
into
aad
mov
or
pcmpgtw
clc
sub
sbb
mov
pop
gs
cmp
jbe
mov
cmp
cmp
pusha
jle
mov
and
and
hlt
iret
loope
add
imul
sbb
dec
outsb
add
cmp
jecxz
sbb
dec
mov
mov
repz
shlb
leave
jo
push
les
loope
xchg
xor
mov
sti
jb
movb
int3
arpl
loope
sbb
shrb
cltd
push
cmp
mov
sbb
insl
lea
push
int
stc
stos
mov
or
fwait
dec
lret
std
hlt
imul
fs
jmp
and
out
xor
std
inc
loopne
outsl
inc
xlat
scas
and
sete
and
push
sub
add
inc
jle
sub
sti
sub
jb
push
cltd
xor
lock
push
cmp
loopne
xchg
jno
push
and
arpl
subl
ds
je
push
jnp
xchg
and
mov
and
xor
and
mov
mov
inc
and
stc
stos
dec
pop
cmp
rcrl
adc
cs
sub
sub
pop
std
aas
jecxz
outsl
shr
in
inc
data16
push
daa
mov
mov
push
lds
pop
sahf
sub
std
sarb
inc
sbb
sub
and
out
push
pop
mov
jg
outsl
pop
pop
mov
and
fldenv
movsb
jae
adc
push
outsb
adc
hlt
lret
popa
movsl
mov
inc
cld
das
add
xchg
sar
cmp
push
jmp
mov
mov
push
cltd
ret
cmp
popf
mov
dec
sbb
and
mov
cmpsb
clc
leave
ficoms
in
cmp
fcmovnbe
pop
int
jo
aam
lret
mov
and
dec
movsl
mov
data16
push
jno
sbb
in
ret
and
rolb
in
jecxz
loope
adc
in
imul
jmp
dec
movsb
sub
jl
rorl
insb
xlat
jg
popa
mov
add
push
xchg
fwait
loopne
xchg
hlt
add
stos
aas
or
jno
lcall
nop
jp
adc
in
shlb
js
mov
rcl
jge
push
xchg
stos
arpl
xchg
ss
sbb
aam
shlb
ret
pop
and
inc
adc
adc
jnp
mov
out
stc
mov
in
iret
cltd
cwtl
and
mov
gs
and
lret
xchg
add
fisubrl
push
shl
xchg
notb
cmp
dec
xchg
pop
mov
pop
sub
mov
call
adc
in
out
add
lret
in
adc
das
fwait
cmp
cli
or
pop
pop
lods
push
mov
arpl
in
sti
pop
mov
sbb
arpl
cmpsl
adc
shl
in
add
mov
push
mov
out
cmp
mov
lods
rolb
pop
scas
xor
sbb
lods
and
xchg
aam
sub
inc
cmp
cwtl
sbb
mov
aam
dec
mulb
push
movb
negb
faddl
pusha
mov
je
lcall
or
into
adc
mov
jl
sbb
inc
test
xchg
sarb
ret
repnz
and
cmp
add
daa
in
cmp
and
clc
and
push
pop
mov
and
jno
scas
outsb
test
jl
xchg
cld
sbb
mov
int
and
out
inc
scas
fisubl
xor
cmp
mov
dec
xor
mov
xchg
test
and
bound
rorl
adc
insl
call
jl
sti
bound
fmuls
jg
icebp
mov
mov
add
sub
push
fnclex
push
cmp
loope
and
jl
sbb
cs
push
out
sub
shlb
add
jmp
arpl
mov
mov
fildll
ffreep
mov
and
push
jmp
das
mov
pop
cmp
and
or
jns
insb
sahf
enter
jg
mov
jno
jl
dec
ds
and
lahf
pop
mov
jmp
or
and
pop
arpl
or
pop
cltd
lea
in
leave
mov
movsl
pushf
out
data16
add
or
dec
push
mov
xchg
pop
pop
sahf
sub
mov
fwait
lock
and
in
or
pop
int3
in
sbb
loope
pop
mov
testb
imul
cmp
test
cwtl
pop
mov
lret
xchg
mov
inc
push
and
insb
loopne
insl
add
jle
or
pushf
repz
jo
xor
mov
xor
in
insl
xchg
xor
mov
or
pusha
xor
mov
push
pop
or
mov
cmp
stc
loop
sub
xor
jns
es
mov
pop
in
mov
adc
xor
insb
mov
ljmp
mov
mov
ja
leave
dec
mov
xchg
mov
test
dec
mov
push
mov
jge
push
fucomip
lods
je
mov
xchg
into
jnp
mov
adc
popf
ret
lds
mov
xor
into
fwait
xor
mov
push
mov
jg
aad
fst
pop
xor
repz
mov
xchg
negb
xor
push
sbb
in
fldl
call
ds
cld
jge
push
in
fstps
or
pop
pop
push
fdivr
das
aam
dec
jmp
adc
popf
cmp
loope
jbe
mov
hlt
pusha
add
sarl
rolb
mov
xor
out
xchg
add
adc
test
mov
jb
sub
and
or
mov
xor
mov
add
jg
dec
mov
adc
ret
loope
outsl
enter
sbb
gs
popa
outsl
fs
in
sbb
arpl
dec
fbld
dec
pop
pop
jb
adc
pop
adc
fsubs
les
xchg
pop
lods
cmp
xor
push
out
mov
mov
add
mov
cld
in
scas
xchg
xor
movsl
bound
lea
sahf
scas
pop
aas
icebp
sbb
cld
or
or
into
popa
push
cmp
mov
in
mov
lods
xor
les
lods
arpl
jnp
fldl
and
mov
mov
xor
adc
cmp
pop
mov
add
les
sbb
sbb
out
xor
and
aad
jne
mov
je
pushf
and
aas
add
mov
dec
repz
pop
mov
adc
cmp
roll
xchg
cli
jp
adc
xchg
dec
or
adc
scas
sub
add
ja
jcxz
fsubrs
jnp
imul
inc
jno
jb
jo
stos
into
aad
jle
mov
fiaddl
push
aad
loop
int
sub
add
icebp
fistps
in
cmp
mov
add
add
jo
or
cmc
mov
stos
insl
out
sub
jg
loope
or
and
inc
pop
cmp
pop
in
stos
scas
adc
test
and
add
sub
and
push
xchg
pop
dec
pop
cmpsl
popf
pop
and
mov
je
sbbl
xor
fwait
jp
stc
mov
movb
sbb
jns
jmp
ss
pop
imul
fildll
push
xor
add
add
pop
imul
sub
or
movsb
xchg
mov
mov
xchg
mov
mov
test
add
dec
outsb
mov
movntps
pusha
arpl
or
popa
repz
xor
adc
adc
pusha
adc
test
cmp
fnstsw
mov
es
fwait
adc
imul
mov
bound
lret
sarl
mov
popf
mov
cmp
xchg
gs
fisubs
cmp
push
sbb
push
mov
and
popa
sbb
push
inc
or
inc
or
int3
mov
jbe
js
ja
loop
aaa
mov
aaa
rclb
out
or
sub
movsb
xchg
sub
mov
jp
clc
cld
xor
jmp
jbe
sahf
pop
xchg
fidivrl
mov
fwait
arpl
inc
insl
cmp
ficoml
sbb
or
gs
fiadds
scas
sbb
mov
mov
pop
pop
mov
outsb
cmp
xor
jp
cmp
xor
push
inc
push
and
xchg
inc
sbb
cmp
mov
sub
fabs
mov
nop
xor
clc
and
in
jo
add
or
sub
mov
fwait
lock
jno
and
test
jbe
mov
pop
adc
filds
xchg
lock
pop
sbb
mov
ffree
jns
gs
jg
or
jns
sbb
dec
arpl
pcmpgtd
outsl
cld
cmp
mov
jp
in
adc
loope
cmp
mov
push
dec
inc
fs
push
pop
and
lods
sub
in
outsl
scas
xchg
ret
arpl
dec
fidivs
cmpsl
cmp
imul
test
loope
push
jp
repnz
hlt
lcall
jb
dec
mov
jnp
adc
shl
mov
mov
test
pushf
cmp
xchg
lock
js
mov
fwait
mov
in
scas
mov
rorl
push
lcall
or
test
mov
aaa
xchg
xor
xor
aad
jnp
and
mov
aaa
dec
jp
mov
dec
popa
mov
sbb
sbb
adc
adc
lock
in
ds
dec
insb
jp
jl
in
adc
shll
xchg
aas
lods
add
pop
add
adc
mov
fistl
data16
gs
fdivs
std
pop
shrl
scas
pop
dec
adc
jg
aad
cmp
or
mov
lock
fiadds
cmpsl
int3
inc
sbb
test
and
fs
rolb
ja
in
jmp
pop
xchg
sbb
mov
mov
stos
ja
xchg
sub
cltd
ret
pop
arpl
movsl
arpl
in
enter
pop
sub
jns
shll
mov
push
cmp
ret
sti
jle
int
inc
in
add
cmc
push
xor
sbb
and
mov
cmpsb
or
xor
arpl
adc
dec
jecxz
sbb
addr16
insb
push
arpl
das
pusha
pop
addr16
arpl
std
adc
movb
popa
jl
cmp
stc
xchg
adc
jno
andb
pop
or
push
rorb
les
cmp
popa
pushf
mov
mov
aad
add
push
dec
and
inc
add
or
scas
roll
xchg
sub
and
xchg
jmp
adc
int3
out
mov
add
push
mov
mov
popa
lock
jge
cmp
xor
and
sub
adc
mov
xchg
out
mov
mov
mov
movsb
push
stos
pusha
cmp
xchg
outsl
pop
fsubs
pop
adc
fstl
dec
jp
stos
cli
cltd
in
cmp
xor
xor
insl
mov
push
sti
xchg
and
push
mov
push
dec
sub
and
cld
sti
shrb
jg
mov
jge
dec
cmp
xor
dec
sub
sbb
cld
mull
loop
xor
or
rcll
cmp
sbbb
inc
fsubrl
sbb
sub
test
jnp
adcb
mov
imul
sti
out
inc
scas
je
dec
test
out
shll
push
lea
aaa
and
mov
mov
mov
mov
mov
insb
sahf
sbb
sub
in
mov
cmp
das
xchg
test
insl
out
sti
push
arpl
dec
jne
xor
xlat
jg
push
lahf
pop
sarl
xchg
cwtl
adc
imul
jecxz
fcomps
iret
mov
add
in
and
inc
add
cli
dec
sbb
and
xchg
jbe
jne
outsb
sbb
insl
cmc
dec
adc
add
insb
jp
mov
fnstcw
push
jl
popf
adc
mov
fdivl
adc
jle
jecxz
incl
jmp
inc
bound
clc
mov
jecxz
jecxz
rolb
inc
sbb
lods
jp
in
dec
in
push
repz
dec
dec
les
mov
js
mov
add
test
xor
and
cmpsl
adc
scas
xchg
ss
in
sarl
inc
push
xor
iret
mov
jo
mov
cmp
hlt
and
inc
inc
push
add
jecxz
push
sub
repz
shlb
sbb
jno
sub
jmp
pop
and
cmp
inc
cltd
pusha
jmp
mov
leave
jne
repnz
cmpsl
sti
cltd
sbb
dec
aaa
jnp
and
mov
push
mov
jbe
push
and
int
addr16
adcl
mov
jae
icebp
add
pop
adc
mov
push
push
cmpsl
mov
test
adc
mov
popa
xchg
pop
mov
mov
repz
adc
out
lea
stos
mov
lods
and
push
sbb
out
xor
imul
push
les
fdivl
xor
loope
ret
mov
and
fwait
nop
pop
push
cmpsb
mov
mov
mov
cmp
movsl
sub
mov
push
cwtl
popf
sbb
cmp
jo
or
outsb
ret
popa
gs
rclb
pop
mov
les
shll
sahf
xchg
clc
mov
add
mov
cmpl
inc
push
sti
sub
aam
mov
and
clc
sti
sbb
popf
cmp
mov
mov
pushl
clc
inc
mov
cmp
aas
es
mov
and
loop
fwait
jle
xchg
push
or
popa
test
cmp
stos
cmpsl
mov
push
out
adc
xor
dec
xchg
iret
popa
je
xchg
daa
paddsw
mov
out
or
and
mov
cwtl
mov
bnd
jmp
sarb
test
movsb
xchg
fwait
lds
or
jbe
and
popf
add
mov
out
or
ss
sti
dec
lret
xchg
jns
cmp
test
scas
lods
cmpsb
mov
cltd
inc
push
sbb
and
sub
push
cmp
pop
bound
shr
leave
lea
lock
aaa
decb
popf
sbb
push
movsl
jo
sbb
addb
dec
lods
insb
out
es
sub
lods
movb
lock
mov
add
cmp
fsubs
ja
or
mov
pop
xor
popf
dec
aas
cmp
ret
jge
inc
adc
push
mov
std
adc
push
imul
into
or
pop
icebp
jne
cmp
or
sbbl
cmp
mov
movsb
fs
mov
dec
mov
sarl
cmp
add
and
mov
jle
int3
mov
push
jecxz
bound
mov
aas
lret
aas
mov
iret
ret
aam
hlt
add
inc
jmp
inc
adc
loope
push
add
xor
jecxz
xlat
popa
jnp
mov
test
pop
dec
and
dec
jne
mov
sbb
jno
movsb
lods
imul
movsb
pop
or
xchg
inc
inc
out
clc
subb
mov
mov
and
xor
dec
ljmp
loop
clc
sbb
jp
stos
test
ljmp
adc
pop
gs
loop
cmp
in
in
mov
loope
sbb
cmp
mov
fsubrl
and
adc
lret
in
and
fldcw
call
aaa
lock
ljmp
sub
push
int
aas
sub
inc
adc
and
ljmp
iret
nop
pop
jge
bound
sub
loope
bound
sar
mov
adc
sbb
ds
adc
pop
sbb
lahf
push
out
imul
or
aad
push
dec
adc
mov
jns
sbb
pop
cmp
stos
sbb
push
andb
loope
inc
hlt
in
or
dec
mov
mov
xor
les
pop
jae
or
and
adc
xor
jl
movsl
push
push
mov
mov
popf
cmovnp
outsl
aam
arpl
xchg
pop
inc
jge
mov
push
mov
add
int
stos
mov
xor
cld
and
das
adc
jne
aas
cmp
add
movsb
repz
push
pop
lock
cwtl
out
and
lret
push
cmp
jne
fistl
xlat
insb
mov
ret
pop
mov
push
and
fmuls
in
cmp
jmp
mul
cltd
popf
popa
inc
clc
sub
fwait
lds
loopne
push
xor
inc
fidivrl
sub
mov
jbe
gs
xor
jno
adc
rorl
add
and
adc
pop
push
popf
xchg
or
and
popf
push
adc
and
orl
mov
fbld
push
jnp
lahf
mov
dec
mov
ucomiss
stos
shl
mov
xor
pop
sbb
aam
aad
sbb
and
fstps
xchg
ja
movsl
test
bound
sti
imul
xchg
adc
mov
out
mov
jmp
fldcw
loopne
js
sbb
xor
shl
pushf
xchg
lock
add
mov
mov
test
mov
mov
mov
cltd
ss
fmuls
mov
ret
mov
ljmp
stos
rorb
lea
es
xchg
inc
and
dec
push
fcmovnu
loope
pop
add
out
mov
ror
imul
test
inc
mov
addl
lea
mulb
jbe
jp
jmp
mov
pop
add
ljmp
bound
inc
into
cmp
cmc
scas
lret
mov
cmp
xor
sub
mov
outsb
push
sbb
jbe
jge
sahf
stos
test
bound
or
mov
jp
cmp
hlt
rcll
mov
xor
or
and
mov
sbb
mov
shlb
xchg
xchg
aad
cmp
test
iret
xchg
popf
pop
movsl
add
jb
mov
and
xor
mov
stos
inc
lds
mov
pop
cs
loope
mov
into
lahf
xchg
adc
int
inc
lret
popl
sbb
dec
into
sbb
add
loopne
ja
mov
in
loope
enter
xor
xor
adc
adc
add
pop
cmpl
mov
xor
mov
push
pop
in
mov
inc
xchg
inc
gs
mov
push
jns
out
push
movsl
fldl
shlb
pop
inc
xchg
in
fistpll
dec
xchg
arpl
push
cltd
ss
sub
bound
and
push
mov
stc
and
jge
mov
or
outsl
scas
sarl
dec
xchg
sub
repnz
or
negl
fldenv
and
add
cmp
movsl
inc
fdivrl
les
int
xchg
add
dec
ror
shll
dec
pop
loopne
xchg
arpl
mov
jle
loope
xor
push
and
loop
dec
loop
mov
repz
call
mov
inc
and
ret
sub
aam
mov
push
dec
sbb
enter
cmc
loope
cmp
pushf
cmp
leave
movsb
lahf
scas
ja
mov
add
out
outsl
es
cmp
lods
std
mov
sti
and
pop
popf
xchg
and
rorb
imul
and
adc
sahf
ret
test
ret
repz
dec
dec
adc
fnsave
push
cmpsb
movsb
mov
push
cli
hlt
mov
xchg
mov
fwait
mov
repz
mov
cmp
cmp
je
adc
test
test
nop
mov
ja
sti
mov
add
ds
lods
xor
add
hlt
or
xchg
and
insb
or
cmp
sbb
xchg
sbb
inc
test
xor
arpl
outsb
je
cmc
cltd
adc
sbb
jns
push
lods
fisubs
adc
mov
mov
imul
mov
clc
call
xor
mov
adcl
ficoml
mov
popa
cmpsb
out
push
sub
mov
xchg
iret
sahf
fwait
imul
out
push
aaa
shlb
cmc
mov
pop
sbbl
ss
inc
movsb
adc
lcall
int3
and
nop
arpl
aad
and
and
jle
adc
and
or
cltd
xor
mov
aad
jo
sub
pop
dec
movb
mov
dec
push
repz
or
jmp
addb
ret
or
inc
leave
push
lds
sbb
dec
rorl
mov
add
push
cmp
aam
jns
in
fisubs
int
jg
xchg
adc
gs
sub
mov
mov
mov
insl
shrl
cmp
movb
jnp
dec
xor
imul
sbb
loopne
and
outsb
cmpb
movsl
jbe
fdivrs
xor
je
fwait
or
add
pop
shll
and
xor
sarb
out
adc
loope
fwait
push
add
xchg
xchg
mov
inc
mov
mov
dec
jmp
mov
jnp
cvtps2pd
or
popf
add
pushf
inc
sub
jge
je
sub
insl
push
cmpsl
shll
pop
fwait
push
sbb
jmp
cmp
push
xchg
int3
mov
stc
in
jno
das
lods
divl
testl
test
and
cmc
lock
xchg
scas
mulps
add
scas
jmp
ds
mov
and
mov
stos
in
or
fistpll
ret
js
or
mov
gs
mov
aad
fs
movsl
push
jg
fcom
mov
stos
out
mov
dec
inc
pushf
cmp
or
cli
inc
sbb
jg
in
mov
fwait
pop
xchg
mov
movsb
stos
pop
gs
or
and
cmp
in
pushf
pop
sub
imul
xor
loop
pop
pop
add
inc
and
gs
addr16
push
sbb
cmp
or
and
outsb
jle
mov
out
add
mov
ljmp
cmp
jecxz
aad
clc
xchg
mov
outsb
mov
popa
cmp
js
add
lock
bound
sbb
inc
dec
into
jae
xchg
fsubs
arpl
hlt
daa
add
xor
scas
push
sti
inc
std
xchg
sti
in
pop
bound
movsl
ja
dec
lahf
insb
test
xchg
sbb
insl
mov
jb
mov
std
jno
fsubs
sbb
adc
arpl
or
arpl
js
idiv
cmp
into
mov
cs
aam
pop
addr16
sub
adc
mov
out
arpl
es
mov
dec
jae
pop
mov
push
or
adc
cmp
mov
repz
xchg
pop
mov
in
pop
popa
cmc
test
or
jmp
sub
or
dec
mov
movsl
mov
mov
jmp
jmp
int
jecxz
or
pop
xchg
jg
adc
icebp
adc
xor
dec
imul
mov
or
xor
xchg
lock
cvtps2pi
xor
stos
cmp
pop
int3
incl
fcomip
lret
mov
cmp
push
and
sub
xor
xor
pop
int
pop
jnp
dec
aas
out
fsub
add
mov
shll
add
jmp
push
cld
sub
cmp
int3
test
xchg
sub
stc
por
in
push
adc
xchg
push
jnp
cwtl
push
enter
roll
cmp
stc
cltd
je
and
dec
inc
jecxz
push
sub
mov
cmp
shll
js
sahf
or
sti
inc
mov
sbb
gs
dec
adc
movsb
and
shl
xorb
dec
and
insl
ja
ljmp
pop
inc
cs
gs
xor
adc
loope
push
xchg
repnz
fucomip
cmp
sbb
cmp
loop
and
ljmp
mov
or
jl
dec
mov
push
insl
notl
vhaddps
mov
xchg
loope
lock
mov
sti
push
movsl
lods
cmpb
repz
test
mov
push
adc
adc
out
adc
push
stc
aaa
fdivrl
cmpsl
clc
push
enter
dec
aaa
daa
insb
scas
ret
outsb
lret
loopne
lret
pop
ja
mov
sbb
shr
cld
rclb
fnsave
testb
sub
cmp
into
xor
push
pop
cmp
jae
sbb
adc
cmpsl
xchg
adc
and
xor
in
xchg
filds
pop
inc
neg
jns
mov
ret
cmc
dec
mov
out
sub
shrb
push
sbb
shrl
sbb
cmp
repz
jmp
mov
lds
and
xchg
scas
clc
inc
test
xor
das
jl
test
or
and
pop
push
pop
popa
sbb
movsb
mov
sbbl
xchg
sub
stos
jns
aam
xchg
in
xor
jnp
add
and
test
inc
xor
int3
popa
rcrb
jno
push
or
sarl
jnp
outsb
mov
jl
and
movsb
sub
test
outsb
movsl
lahf
sti
and
pop
sbb
pop
jmp
and
xor
jmp
imul
sbbl
xor
jns
jl
xchg
and
cmp
sub
cmovb
ss
movl
cmp
std
inc
push
fwait
aaa
sti
pop
xor
mulb
in
mov
out
add
es
outsl
adc
mov
mov
and
mov
lock
or
pop
or
call
sub
jbe
mov
sbb
mov
xlat
aas
or
out
xchg
stos
or
gs
jp
sub
es
cmp
fistl
lock
push
jg
push
or
es
into
es
jecxz
xchg
pop
add
jnp
gs
orb
fsubr
out
jnp
pop
pop
mov
pop
mov
xor
ja
inc
jmp
inc
mov
or
gs
inc
sbb
or
sti
mov
data16
std
mov
arpl
int
les
mov
or
xchg
jno
xor
xor
das
pushf
pusha
popf
mov
in
sbb
mov
sbb
mov
mov
insb
adc
jmp
and
andl
pop
xchg
and
es
or
lret
and
ja
xor
and
push
push
jg
orb
ret
arpl
jbe
test
and
in
imul
sbb
jo
aad
adc
out
push
mov
sbb
sub
out
cld
test
ljmp
xchg
adc
sbbl
add
insl
pushf
enter
and
add
roll
addr16
loope
or
movsb
cmp
jnp
ret
mov
sbb
stc
ja
and
call
cwtl
es
arpl
adc
js,pt
and
adc
inc
fs
mov
and
cmp
cmp
ljmp
in
pop
xchg
xor
fistpll
adc
popa
xor
je
mul
nop
mov
and
pop
inc
int
xchg
jne
shlb
xor
mov
push
mov
pusha
jl
pop
dec
sbb
jae
lcall
mov
ret
push
imul
adc
sbb
sbb
pop
jecxz
dec
or
pop
in
xchg
sub
sarl
or
sub
mov
int
mov
xor
pop
arpl
cmp
xchg
lcall
mov
aas
cmc
les
add
sbb
repnz
leave
mov
and
and
in
sbb
test
jecxz
inc
das
aaa
inc
xchg
aam
push
fiaddl
in
fisttpl
in
jae
ja
fs
je
lods
arpl
out
fimull
stos
ret
jecxz
out
jo
rolb
mov
sub
jmp
fimuls
in
xchg
pop
cs
clc
nop
jnp
push
int3
loopne
mov
je
aad
and
dec
fwait
sub
cmp
test
pop
lahf
mov
lods
stos
push
call
arpl
sbb
mov
pop
arpl
gs
rorl
sbb
and
push
mov
andl
adc
pusha
shll
xchg
movsl
lcall
cmp
sbb
std
mov
adc
scas
fimuls
and
xor
lock
and
pop
movsl
fdivr
dec
xchg
int
test
std
incl
fisttps
loopne
push
arpl
add
and
and
push
cwtl
stos
mov
mov
fdivrp
xor
in
hlt
inc
sbb
call
imul
sub
outsb
decl
adcl
jl
repz
sbb
mov
das
xor
xchg
jecxz
pop
push
lods
inc
jmp
xor
mov
and
insl
test
or
mov
jle
lahf
add
fldenv
mov
xorb
ficoms
mov
sbb
push
jmp
push
imul
sub
lock
adc
mov
pop
push
sbb
or
lret
pop
aam
ffreep
add
pushf
or
cld
lea
jne
push
test
popa
xchg
xor
mov
sbb
mov
arpl
imul
or
xor
and
outsb
jb
into
fdivp
fdivs
cmp
aaa
fnstsw
call
lock
icebp
and
push
and
push
lahf
mov
dec
ja
scas
cmp
aad
mov
iret
xor
and
test
hlt
aas
out
nop
or
out
inc
jecxz
xor
sbb
adc
mov
popa
fisttps
mov
mov
mov
ret
and
into
push
fbld
or
sbb
mov
loope
stos
sti
xchg
cmp
mov
cli
cmp
add
shlb
dec
add
fs
test
jb
push
popa
jnp
test
adc
cmp
push
and
or
xor
pop
das
and
aaa
aas
sbb
outsl
xchg
sub
and
jno
and
cmp
sub
ffree
fisubs
xor
inc
sbb
imul
jecxz
pop
ds
push
push
scas
pusha
insl
das
adc
and
cmp
sbb
sub
insl
ja
jns
sub
rcl
mov
add
xor
cs
jno
and
cmp
fwait
daa
mov
sub
movsb
jl
jb
cmp
pop
pushf
lcall
imul
loope
mov
xor
iret
xchg
and
adc
lret
inc
jmp
pop
push
xchg
jmp
sub
add
fcom
add
cmp
mov
mov
push
subl
aam
pop
push
add
and
pop
add
mov
test
leave
fsub
cmp
jecxz
lock
mov
jnp
lcall
sub
out
insl
pop
mov
ret
int
ret
jne
addr16
lods
and
ljmp
inc
add
xchg
push
jmp
adc
cmc
das
popf
mov
adc
testb
es
movsb
in
add
adc
fidivs
dec
cmp
sti
sub
lea
iret
mov
in
or
push
jl
mov
xchg
mov
sti
aas
mov
repz
lcall
test
addr16
jmp
sub
jo
icebp
mov
pop
add
out
popa
mov
iret
push
addr16
pop
and
jno
sub
push
stos
outsl
xor
pop
fwait
cmp
aam
das
loop
mul
sti
and
clc
jns
clc
cmpsl
jge
and
fadds
or
popa
mov
xor
aad
sub
lods
pop
clc
std
push
push
mov
sbb
mov
jnp
call
das
cwtl
jecxz
xor
cmpsl
lahf
mov
lahf
mov
movsb
jnp
int3
jmp
xor
mov
push
ljmp
dec
fucomi
outsb
out
jnp
imul
popf
rclb
adc
ret
loope
frstor
add
dec
adcb
sub
pop
lcall
cmp
leave
lds
or
mov
pop
sti
std
sub
not
sub
sbb
mov
inc
arpl
push
outsl
sub
cltd
dec
ljmp
xor
jmp
dec
lock
testb
sti
xor
loop
cmp
sbb
repnz
sub
mov
in
mov
dec
pop
inc
fs
ret
jecxz
xchg
and
mov
fsubs
dec
pop
mov
out
xchg
inc
es
jnp
aaa
xchg
add
sti
jnp
gs
mov
test
btc
jns
adc
mov
sbb
lods
inc
adc
std
dec
pop
mul
out
mov
hlt
std
xchg
test
mov
push
mov
add
cmc
jno
ljmp
mov
arpl
mov
xchg
and
stos
or
jmp
dec
jle
push
xchg
out
add
inc
xor
das
jo
mov
nop
divl
mov
jecxz
add
in
ljmp
pop
ret
sbb
cmc
out
pop
daa
adc
shlb
sarl
aas
mov
and
sub
push
jg
xchg
out
xchg
xor
cmp
push
movsb
mov
data16
mov
dec
jp
xor
insb
inc
push
ja
lahf
xor
and
fldt
jp
movsl
sbb
push
fistl
js
sbb
push
xchg
xor
dec
sarb
loopne
adc
jmp
push
push
int
repnz
shrb
fdivs
movsl
and
add
xchg
nop
movsb
and
sub
test
out
add
icebp
data16
xor
in
push
sti
arpl
aaa
mov
jne
mov
cmp
inc
jo
cld
in
or
or
jb
add
iretw
in
mov
pop
sti
imul
or
inc
mov
xchg
gs
xlat
mov
decb
sbb
sbb
cmp
mov
jae
popa
xchg
xlat
es
pop
xor
out
shlb
loope
out
mov
sbb
outsl
mov
add
int
inc
push
dec
call
gs
xor
add
mov
leave
gs
cmp
inc
xor
roll
xor
and
lods
fs
test
fmuls
sub
stos
and
dec
bound
jne
movsl
ja
mov
xor
xorl
sub
stos
mov
sub
xchg
xchg
sbb
pusha
jnp
xor
add
push
mov
ljmp
xor
outsb
and
rcrl
arpl
lahf
push
in
mov
adc
mov
test
mov
jmp
fmul
cltd
out
add
xchg
sbb
mov
push
ss
repz
xor
ret
je
lods
orb
push
in
shl
nop
mov
out
sahf
aad
push
add
in
sbb
lock
int
jnp
lods
arpl
mov
mov
or
jns
add
ljmp
sbb
jo
xor
imul
sub
ficomps
adc
jne
adc
or
movsb
jne
adc
test
ljmp
add
mov
mov
lret
inc
sbb
xchg
lds
sbb
int3
popa
sub
or
cs
test
stos
adc
pusha
sub
xor
push
lea
lds
mov
je
or
ret
jmp
scas
out
mov
mov
ss
movsl
pop
push
mov
test
call
cmpsb
add
xchg
nop
push
btc
or
ds
arpl
vpsubq
lock
adc
jecxz
xchg
add
popa
xchg
std
pop
cld
pop
jb
in
rclb
cmp
enter
out
ljmp
cmp
sti
jne
inc
sbb
xchg
cmp
and
cmp
es
movsb
xor
mov
sbb
stos
push
add
jae
jp
das
cld
popa
arpl
jno
movsb
or
xchg
inc
push
mov
icebp
arpl
fsubrs
mov
mov
je
lret
incl
in
push
lds
xor
test
xor
and
fs
cld
int3
mov
dec
push
bnd
adc
cmpsl
jecxz
and
cmc
ss
and
aas
sti
repnz
xor
pop
subl
insl
iret
adc
insb
movsb
pop
adc
test
jl
jno
js
sub
cmp
sbb
popa
test
sbb
sub
sbb
sti
mov
mov
sbb
cmp
add
std
inc
cltd
or
es
jae
mov
loope
fwait
inc
xchg
daa
aad
arpl
add
push
imul
shrl
int
inc
or
aam
cmp
aas
arpl
daa
jp
mov
cmp
jnp
jge
and
pop
incb
lods
push
xchg
jecxz
bound
mov
adc
jmp
decb
aad
rcrl
sbb
aaa
xchg
arpl
lock
and
and
mov
mov
pop
out
leave
jle
std
cld
lock
into
jl,pt
outsl
xchg
mov
fildll
call
ljmp
push
out
ret
scas
fidivl
add
imul
mov
dec
icebp
sahf
test
clc
sbb
repz
mov
out
fwait
or
cs
imul
jnp
arpl
xchg
data16
adc
push
push
fbld
xchg
cmc
inc
xchg
jmp
jno
mov
push
mov
sub
cmp
ret
aam
test
lret
adc
std
dec
out
out
lods
xchg
cmp
mov
xchg
and
xor
lea
xor
fistps
movsl
adc
arpl
pop
cmp
popa
pop
push
fwait
imul
sub
sub
subb
xor
jl
push
mov
daa
xor
jg
pop
pop
mov
cmp
rorl
mov
fst
insl
sub
std
movb
int
cmp
pop
cmp
roll
lock
xchg
adc
out
iret
inc
daa
adc
mov
push
fldl
inc
adc
push
or
cli
cli
xor
jecxz
pushf
jns
pop
sarb
imul
mov
cmp
adc
orb
roll
popa
outsb
repz
jl
pop
pop
les
arpl
mov
fisubs
out
sbb
add
addr16
scas
and
xchg
popf
jecxz
fs
mov
inc
popa
sbb
jnp
imul
call
adc
jns
nop
fldcw
mov
cmpsl
xor
add
and
dec
pop
stos
data16
loope
iret
mov
mov
mov
mov
cli
in
cmp
cwtl
sbb
into
daa
lock
popf
jae
xchg
mov
insb
dec
jmp
ret
pop
sbb
jbe
ds
rol
mov
or
testb
and
jns
pusha
adc
in
loop
fstpl
aam
sti
cmp
lock
ret
out
cmpsb
sub
cmp
or
xor
mov
push
jb
popf
xchg
xor
pop
adc
push
inc
pusha
jecxz
or
sub
movsl
and
movsl
out
xor
dec
cmp
jle
mov
call
pop
cs
gs
xor
mov
ret
mov
mov
push
add
arpl
icebp
sbb
push
inc
pop
inc
in
out
outsb
sub
nop
cmp
pop
aaa
rcrl
outsb
stc
sbb
mov
ljmp
cmpsb
jbe
sbbl
negl
sahf
xlat
adc
adc
xor
aam
repz
or
lock
cmc
icebp
not
sub
push
lock
inc
dec
fildl
cmp
insl
pop
cmp
das
cltd
jmp
jb
and
arpl
xchg
test
add
sahf
imul
loope
ficompl
pop
mov
in
push
fildl
mov
pop
test
loope
jne
push
ds
in
and
shll
subl
ret
jecxz
lds
adc
mov
fsubs
les
lret
push
gs
pop
inc
xorb
mov
and
or
sbb
mov
aad
cltd
fwait
sbb
nop
jae
std
fldenv
mov
rcll
dec
in
xor
rclb
dec
mov
xchg
mov
cld
and
mov
adc
pop
imul
push
cmp
or
pop
adc
bndstx
fmul
mov
insb
test
les
fsubl
ds
cld
jnp
dec
sar
dec
arpl
and
call
inc
jo
mov
popa
add
and
icebp
sti
ret
mov
fisubrs
in
mov
shll
mov
pusha
xlat
xor
and
insb
popf
jle
inc
jge
shl
add
aas
lret
or
insb
test
mov
enter
movsl
push
push
jne
add
add
and
sub
add
and
inc
je
adc
xlat
ljmp
xor
dec
dec
jl
loope
and
movl
and
pop
fidivs
xor
clc
mov
sbb
xor
pop
and
sub
rcll
mov
inc
cld
jo
pop
scas
push
xchg
bound
jae
sbb
into
sbb
das
and
scas
lds
mov
xor
ret
popf
and
int
dec
dec
daa
ret
xchg
nop
lds
xchg
mov
mov
lret
jecxz
js
xor
add
das
frstor
mull
cmpl
mov
cmp
enter
mov
repnz
loop
call
and
jne
repz
push
je
pop
arpl
mov
call
aam
fs
nop
mov
sub
sub
sbb
push
in
sub
push
loop
pop
sub
repz
ljmp
inc
cmp
leave
popa
and
pop
mov
push
scas
sbb
mov
in
stc
call
dec
mov
mull
mov
or
or
insl
ja
jecxz
xchg
insb
jno
pop
dec
in
add
outsb
and
sub
mov
cmc
scas
xchg
jnp
pop
jae
xchg
mov
and
xchg
dec
pop
loop
adc
mov
bound
sbbb
jp
sbb
sub
popa
push
cmp
in
xchg
out
cmp
lcall
and
imul
cmpsb
andl
adc
fdivs
cmc
mov
aaa
sub
and
xor
adc
xchg
insl
mov
cmpsl
in
adc
sub
repnz
fisubrs
jb
xor
nop
stos
pop
mov
adc
push
mov
js
lods
cmp
sub
lock
adc
adc
into
dec
js
jmp
sbb
fcomps
and
dec
push
add
call
mov
push
mov
add
and
xchg
pop
cwtl
in
jp
and
iret
aas
jnp
loop
rcr
movsl
mov
cwtl
nop
sub
mov
ja
cli
push
mov
sbb
popa
pop
mov
in
imul
adc
subb
mov
jl
das
je
pop
ss
repz
pushf
fldcw
mov
push
sbb
mov
rcrb
xor
arpl
pop
or
jns
lret
imul
jb
in
mov
dec
jb
lret
in
out
sbb
pop
pop
or
shrl
inc
push
push
push
or
cmp
ja
rorl
fiadds
mov
ja
jb
xlat
mov
jns
addb
dec
push
int3
data16
insl
mov
push
jne
test
out
mov
adcl
gs
outsb
dec
sahf
sahf
and
jmpw
cmp
inc
lds
cs
sbb
mov
cwtl
mov
or
loop
xchg
aaa
outsl
jecxz
sub
jmp
dec
cmp
inc
pop
inc
nop
mov
and
arpl
push
and
jbe
fdivl
cmp
jne
or
in
mov
jb
pop
out
and
jns
jb
insb
add
sub
pop
inc
and
pushf
sbb
shll
movsl
sbb
ret
in
mov
jnp
sbb
jg
jecxz
sub
lret
sar
loope
sub
push
sbb
insl
jecxz
bound
cmp
push
jl
sbb
loop
or
mov
cmp
jae
xlat
push
sti
out
out
leave
pop
sub
int
xchg
fabs
xor
fsin
ret
cmc
movsb
mov
aaa
stos
xor
cli
aaa
cmc
xchg
jbe
push
jecxz
cmp
and
pop
adc
mov
aad
sbb
pop
inc
mov
cmpsl
mov
xchg
popa
arpl
pusha
movsl
mov
sarl
sbb
pop
or
in
xchg
add
flds
loope
mov
aas
xchg
inc
and
hlt
mov
mov
cmp
in
xchg
repz
adc
inc
sti
xchg
popf
sbb
dec
les
jb
jle
adc
aad
js
fisubs
fstpl
mov
aad
cli
and
int
fdivp
push
xor
repnz
sbb
mov
sbb
mov
loop
mov
sub
cmp
cmp
xchg
mov
iret
loope
sub
and
call
pusha
fmull
xchg
pop
aaa
xor
dec
xor
mov
adc
xchg
leave
popa
repz
mov
xor
and
sbb
cs
loop
and
lret
ret
ss
or
and
push
je
popf
or
arpl
and
mov
movsl
out
daa
pop
and
ret
mov
adc
nop
sarb
repz
xchg
mov
add
ret
jo
pop
and
sub
adc
icebp
in
gs
in
test
adc
cmp
cmp
in
dec
data16
and
das
sbb
lods
loope
and
xor
add
inc
fistpl
mov
enter
mov
mov
mov
repz
loopne
shll
rclb
push
and
dec
arpl
outsl
mov
dec
in
xchg
push
adc
cli
or
sbb
or
dec
cmpsl
mov
ss
loop
sub
shlb
jecxz
out
add
or
test
mov
imul
xchg
lcall
icebp
inc
sbb
lcall
cli
stc
add
jl
popa
xor
rcll
lods
loop
mov
test
imul
in
inc
data16
or
scas
lock
ret
js
adc
push
into
loop
or
dec
cmc
pop
dec
unpcklps
jnp
mov
add
or
xchg
mov
in
mov
stos
push
scas
repz
sub
ss
jnp
repz
negb
mov
and
mov
loope
movsl
es
dec
pop
add
pop
cwtl
adc
sub
pop
repz
in
cmp
gs
mov
mov
cmp
ffreep
sub
and
aaa
stos
push
shll
and
jp
and
fiadds
fdivs
dec
sbb
ja
add
push
scas
or
arpl
sub
push
mov
jno
and
scas
add
fs
mov
dec
out
or
gs
and
mov
mov
movsl
adc
int3
sub
iret
jne
mov
xor
cmpsb
sub
dec
or
mov
lret
inc
cltd
jg
dec
out
mov
xorl
dec
and
mov
xchg
mov
jno
push
gs
xchg
sbb
xchg
sbb
movsl
push
sahf
push
dec
fldenv
scas
fisttps
fs
cmc
dec
xchg
fdivr
mov
cmp
mov
in
mov
cld
sti
push
pop
jnp
sahf
jnp
sub
data16
dec
icebp
stc
subps
sub
lcall
sahf
loopne
rcl
adc
cmp
and
and
fistps
add
fisubrs
iret
bound
inc
dec
js
shl
fildl
cli
pop
pop
movsl
inc
nop
or
stos
cld
movsl
ret
shl
and
loop
stos
rcr
mov
outsl
mov
rorl
gs
mov
mov
pop
add
jnp
mov
in
nop
mov
jl
and
mov
insb
cmpsl
cmp
leave
fs
cmp
aas
movsl
movsb
and
ss
xor
or
xor
pop
mov
add
in
mov
mov
inc
add
pushf
jp
mov
nop
inc
sbb
out
push
jle
push
xor
aad
xchg
cld
and
push
seta
mov
movsl
xchg
jecxz
lds
loope
ret
enter
xor
mov
bound
jb
or
mov
ret
loope
mov
fldenv
fcoml
outsl
or
jns
sub
push
lds
jbe
es
cs
sbb
xchg
push
mov
or
and
xchg
loope
sbb
adc
cltd
mov
test
fsub
out
or
mov
cmc
xchg
sbb
scas
lock
gs
and
cmp
bound
movsb
mov
sub
sbb
inc
inc
repz
sub
daa
cmpsb
es
mov
outsl
fdivr
jno
dec
in
cmp
icebp
cmpsb
fst
inc
jle
arpl
mov
fbld
inc
ret
popf
cmpsl
jbe
sub
or
fists
push
jl
cmp
adc
cmp
xchg
fs
ret
mov
and
test
push
jle
sub
jae
imul
inc
in
dec
mull
addr16
int
dec
xlat
sub
cmp
mov
and
mov
jno
pop
outsl
addr16
pop
mov
call
fwait
bound
cmp
dec
imul
pop
insb
sti
in
jecxz
call
cmc
push
inc
aas
cmp
push
pop
nop
ret
aad
repz
sar
cmpsb
test
cmc
lds
popa
ss
adc
cmpsb
lods
mov
shr
fwait
cmpsl
fadd
arpl
aaa
cmp
adc
mov
gs
lock
xchg
sbb
call
dec
adc
out
lret
test
out
out
jae
test
and
sub
add
cltd
push
divl
and
aam
clc
lahf
ffreep
and
icebp
add
ret
fcmovnu
sbb
and
push
loope
jmp
gs
push
sbb
rcr
aaa
jnp
pop
cmp
ds
test
inc
lods
xor
stc
stos
aam
and
jle
or
stc
popf
adc
mov
and
loope
sub
in
and
dec
push
mov
pusha
cltd
lahf
rcrl
jmp
test
icebp
mov
divl
inc
mov
add
mov
inc
sbb
mov
fistl
repnz
mov
mov
push
lds
aad
hlt
mov
adc
gs
repnz
stos
paddsb
inc
mov
mul
test
lods
jae
add
aas
xchg
inc
adc
add
add
xor
xor
repz
popf
mov
push
cmpsl
xchg
fcmovbe
test
jae
aaa
add
jo
sbb
shrl
movsb
dec
adc
add
shrl
in
orl
ret
mov
orb
or
icebp
xor
push
clc
scas
ja
sbb
and
fistl
es
xlat
add
mov
ds
cmp
in
xchg
push
pushf
jl
and
cmp
cmp
add
adc
lea
arpl
pop
cmp
fwait
sti
jmp
dec
repz
push
push
sti
mov
and
arpl
dec
aas
xchg
into
jns
and
out
cmp
sub
int3
movsl
aam
mov
testb
push
mov
lods
jns
dec
or
stos
dec
sub
sahf
test
sarb
aas
fimull
xor
data16
lret
mov
cmp
daa
jno
pop
add
jo
add
adc
js
sarb
sbb
sub
arpl
xor
push
inc
stc
cli
loope
addb
rcr
add
mov
jecxz
cmp
rcrb
mov
mov
sbb
fldenv
xchg
arpl
push
adc
inc
mov
and
adc
and
insl
fadds
jno
orb
jnp
mov
ret
fstl
push
jbe
pop
sub
or
dec
popa
cmp
xchg
lea
adc
mov
sub
jecxz
push
or
push
push
stc
popa
or
aas
mov
push
inc
or
xchg
adc
in
pop
mov
xchg
adc
loopne
or
mov
jnp
idiv
or
arpl
enter
je
mull
bound
pop
nop
mov
movsl
or
xor
sub
cmp
xchg
xorl
fadds
sub
pushf
jmp
loope
xor
sahf
cmpb
adc
jnp
cmp
mov
cmp
push
dec
adc
jb
dec
dec
insl
add
addr16
mov
or
or
push
xchg
aam
inc
mov
mov
addr16
pop
mull
scas
aas
cmpsb
xor
mov
out
cld
adc
popa
mov
mov
icebp
movsl
jnp
sbb
loopne
add
jne
adc
imul
cmp
inc
lret
mov
iret
in
sbb
test
push
sbb
jne
iret
push
or
pop
sub
dec
lret
sbb
hlt
sub
and
xchg
lock
repz
lret
dec
stos
or
mov
pop
pop
in
imul
cwtl
and
aad
pop
lea
sbb
lods
sahf
bound
add
in
cltd
xchg
in
xor
cmovno
subb
mulb
xchg
mov
add
pop
adc
add
sub
xchg
cltd
mov
inc
cmpsl
cmp
fwait
sub
in
arpl
outsl
xor
ret
cs
xchg
loopne
mov
push
xchg
lret
out
shl
jg
cmp
sbb
and
pusha
or
fs
rcrb
and
test
jae
inc
shl
fldl
push
aam
and
in
jmp
adc
or
dec
push
dec
ret
out
mov
jbe
and
fwait
and
jbe
jnp
and
cmp
mov
pushf
test
pop
mov
xor
call
jne
sbb
shr
mov
jnp
jp
testb
mov
imul
mov
aaa
cmpsl
add
sahf
sahf
cltd
lret
cmp
xor
jl
cmp
scas
mov
xchg
or
pop
add
bnd
js
outsb
xor
jbe
cmp
dec
push
jno
aaa
imul
sti
mov
mov
mov
inc
dec
fsubl
cmp
jb
test
adc
repz
ret
mov
in
mov
xor
test
andb
rcrl
push
xor
and
cmp
mov
cli
xor
aaa
int3
jg
add
out
mov
cld
mov
out
cmp
stc
sti
outsb
jp
mov
sub
sbb
and
adc
cmp
out
add
push
loopne
fsubrs
mov
mov
mov
rorb
or
mov
rorb
cmp
push
mov
repz
gs
lock
movsl
lret
push
jle
cmp
mov
cmp
iret
xor
das
in
neg
mov
imul
or
jmp
gs
cltd
outsb
xchg
fsubr
or
mov
mov
negb
add
and
and
and
out
fdiv
dec
enter
xchg
cmp
out
hlt
out
xlat
push
stos
push
ljmp
mov
roll
or
arpl
inc
push
or
loope
cmp
orb
push
shlb
mov
mov
or
repnz
lea
or
xchg
in
lock
mov
or
lock
jmp
sbb
sbb
mov
xor
jae
mov
cli
lahf
cmp
shrb
pusha
movsl
popa
ja
mov
xor
fstpl
arpl
and
push
clc
or
jecxz
leave
or
xlat
stc
jecxz
adc
imul
cmp
shlb
aad
andb
and
repz
outsb
cmp
ja
mov
and
int3
pop
int3
and
xor
mov
push
cmp
inc
mov
or
fsubs
mov
mov
mov
stos
add
sbb
mov
jge
jmp
and
and
cmp
popa
test
mov
mov
pop
mov
int
insl
dec
test
sub
adc
mov
pop
das
add
pop
sbb
and
iret
cltd
xorl
or
xlat
aam
stos
mov
xchg
psrlq
addr16
sub
daa
daa
add
add
leave
nop
loopne
out
std
or
sub
sti
int3
popa
cmp
inc
das
arpl
popf
fsub
or
out
add
out
scas
lahf
sub
and
pusha
and
jo
push
js
aaa
xchg
clc
or
xor
add
lcall
push
mov
arpl
gs
cmp
push
in
xlat
lods
in
fwait
in
dec
push
push
xchg
inc
pop
sub
xchg
fs
mov
cmpb
and
and
into
in
daa
jnp
movsl
addl
adc
cmc
xchg
xchg
pop
stos
push
and
cmp
cwtl
out
testl
adc
or
lods
ja
cwtl
push
sub
rorl
jne
arpl
inc
mov
je
add
add
out
add
xor
adc
mov
and
xchg
push
lods
push
xchg
and
jecxz
and
inc
adc
sbb
je
add
sub
insb
loopne
call
rclb
xchg
bound
test
inc
ret
and
inc
shll
push
sub
cs
adc
jne
fildll
xor
lahf
cmp
mov
xchg
jne
into
lods
inc
cwtl
adc
sbb
or
and
cmp
mov
adc
js
xor
sbb
imul
sarb
adc
jnp
hlt
or
sbb
or
sub
mov
scas
ja
mov
sbbl
jmp
sub
push
push
pop
out
or
arpl
xor
sarl
int
je
cmp
pop
sbb
dec
adc
pop
mov
and
inc
xor
ljmp
mov
adc
imul
jecxz
les
stos
fiaddl
sub
outsb
pop
jecxz
cld
mov
cmpsb
jmp
fisttpl
or
pop
push
aas
inc
nop
sbb
sti
or
or
mov
cmp
pop
cmpsl
cli
cli
mov
jecxz
push
inc
cmp
shlb
push
dec
cmp
or
cmc
lods
ret
add
sub
mov
into
test
pop
or
lods
sbb
push
cs
fistpll
repz
fsubrl
lcall
mov
test
inc
ja
xchg
or
pop
out
and
loope
inc
add
cmc
rcrb
lahf
and
or
xorb
inc
sbb
ret
iret
mov
shll
int3
mov
adc
jne
fwait
enter
test
frstor
pop
repnz
gs
imul
daa
mov
sti
or
es
lds
repz
psubq
call
popa
f2xm1
popa
sub
flds
mov
mov
push
sti
pop
mov
jo
std
jmp
arpl
scas
adc
mulb
imul
xlat
push
in
xor
data16
xchg
cs
gs
ret
cmp
movsl
xor
js
adc
inc
xchg
int
and
cs
shl
rol
popa
xchg
arpl
insl
data16
jb
pop
push
mov
mov
pop
mov
imul
and
ret
adc
es
mov
inc
bound
fidivl
xor
outsl
loop
push
movsl
aas
cmp
mov
cmp
scas
daa
mov
pop
pop
outsl
ljmp
and
add
push
sub
jg
adc
lret
jo
fwait
arpl
int3
add
sahf
rcl
mov
inc
cli
fidivrl
nop
xchg
cmp
mov
mov
xor
test
or
subl
daa
ja
xor
leave
inc
push
enter
cmpsl
js
xchg
mov
jae
cmpsb
mov
mov
push
mov
pop
arpl
shrb
fwait
mov
push
cmp
and
jg
mov
rcrl
jnp
xor
dec
jmp
mov
int3
cmpsb
sub
shr
ljmp
xchg
pop
adc
push
adc
and
and
out
daa
mov
sub
stc
out
loope
pop
loopne
adc
mov
adc
loopne
xor
fmuls
mov
je
stos
push
and
sbb
in
pop
leave
inc
mov
in
inc
xchg
mov
sti
jg
mov
enter
and
movsl
jmp
add
aam
sbb
out
inc
repz
and
cmp
aam
jge
push
stc
out
icebp
cmp
mov
cs
in
and
aas
mov
and
pop
les
push
cmp
cld
jns
and
dec
cmp
movb
aas
dec
sbb
adc
loope
lea
aaa
and
mov
inc
sbb
lock
dec
dec
imul
sbb
movsb
sub
ljmp
pop
dec
jmp
and
ljmp
add
cli
push
mov
into
adc
push
push
out
xor
xchg
fcomps
rclb
add
and
in
in
bound
repnz
xchg
add
outsb
sub
test
push
lods
mov
lock
mov
add
inc
dec
push
out
imul
fisubs
or
pop
cmp
stos
outsl
add
sbb
cld
dec
mov
or
pushf
pop
hlt
mov
jo
jnp
xor
loope
and
subb
movsb
mov
push
sbb
and
int
nop
js
sbb
jp
add
cs
mov
pop
mov
inc
fadd
lret
mov
pop
xchg
cmc
sub
pushl
enter
pop
dec
ret
push
jecxz
int3
sub
rorl
out
popa
imul
jo
movsl
and
sub
mov
sbb
pop
data16
stc
dec
dec
inc
fnstcw
mov
add
jbe
mov
aaa
jmp
add
mov
add
gs
inc
mov
mov
mov
addr16
lds
lea
addr16
cmp
or
in
call
adc
push
mov
arpl
adc
inc
push
shll
push
xor
or
scas
mov
pop
fstpt
adc
clc
mov
out
add
arpl
adc
movsb
push
cmpsb
mov
pusha
mov
fnstcw
sub
and
sbb
pusha
scas
sbb
in
xchg
xor
es
stc
xor
cmp
lock
xchg
movsl
out
dec
hlt
clc
movsb
pop
lret
scas
sbb
scas
mov
pop
das
test
xchg
and
popa
jns,pt
push
xchg
fwait
pop
dec
cs
jns
popf
jno
push
and
adc
cli
and
test
cld
cmpsb
inc
add
adcb
push
sub
or
leave
outsl
nop
mov
movsl
add
xchg
shlb
sti
cmpsb
insb
jb
movsl
mov
daa
push
or
mov
jne
lahf
out
shl
ljmp
call
lcall
and
and
adc
data16
push
xchg
daa
sub
gs
pushf
test
pcmpgtd
jge
jb
jno
mov
mov
movsl
repz
add
push
dec
sti
mov
repnz
into
mov
cmc
cli
cmp
ds
xchg
or
sbb
je
or
and
mov
inc
mov
mov
sbb
inc
mov
lret
ret
mov
mov
push
test
xchg
arpl
pusha
js
and
sbb
popa
shll
pop
cmc
adc
sub
adc
cmp
andb
cmp
and
pop
xor
mov
shl
xor
cmp
mov
push
andl
in
fwait
repz
jnp
je
xchg
jge
xor
jecxz
lea
dec
cmp
loopne
and
sub
shlb
and
sub
lock
arpl
scas
sub
dec
dec
push
shl
clc
dec
hlt
jle
sub
lret
mov
mov
cmp
hlt
popa
aad
push
cmp
sub
jb
xchg
pop
mov
xchg
jns
pop
jle
pusha
mov
fcomps
out
inc
mov
dec
call
sbb
jle
stos
xor
cmp
mov
out
in
jge
testb
jnp
or
xchg
out
inc
mov
jg
jns
mov
push
xchg
or
sbb
leave
popa
mov
movsl
movsb
inc
cmp
enter
jecxz
hlt
arpl
nop
sub
arpl
ret
sbbl
in
popf
xlat
out
repz
call
jb
dec
inc
es
cmp
mov
sbb
hlt
or
xchg
mov
inc
xchg
sbb
int3
add
pop
cmp
lea
push
mov
or
add
jns
push
xchg
xchg
jo
adc
notb
cmp
aaa
lret
xchg
out
xor
gs
and
clc
scas
sbb
jnp
add
adc
pop
xor
xlat
cmp
push
lock
jb
cmp
aas
jmp
in
clc
popf
addr16
sarb
lods
jmp
or
add
cmp
jae
xor
test
test
xlat
sbb
sub
jl
and
lret
mov
mov
push
pop
mov
in
cmc
iret
adc
fadd
xchg
clc
fldenv
fisubl
pushf
xor
mov
imul
push
cmp
and
or
push
cwtl
sub
pop
cmp
ljmp
xchg
loope
fwait
js
push
and
adc
or
cmp
sbb
inc
gs
ljmp
mov
mov
int
cmp
movsl
les
xor
hlt
stos
jmp
sti
aam
cmc
adc
jo
and
outsb
xchg
loope
bound
cmp
arpl
outsl
pop
jecxz
jbe
into
fldcw
lds
fisubl
aas
xchg
jecxz
add
sub
inc
in
and
pushf
mov
movsl
mov
xchg
roll
mov
push
or
std
ds
dec
cmp
cmc
or
std
in
imul
xor
jmp
rcr
adc
mov
fimuls
pop
add
orl
aad
je
cmp
addr16
popa
or
jnp
lahf
faddl
cld
xchg
add
cld
jg
mov
or
int3
sub
push
sbb
vpmulhw
in
and
inc
xchg
int
lock
mov
push
or
sub
cmp
out
mov
mov
xor
cmp
add
and
dec
dec
bound
std
xchg
mov
insl
adc
lock
push
cltd
and
sbb
stos
mov
dec
xor
add
xor
out
cmp
repz
outsl
push
fdivs
repz
fisttps
ljmp
pop
and
and
ljmp
daa
inc
dec
mov
arpl
js
mov
mov
arpl
fwait
sbb
out
jbe
or
push
leave
daa
mov
lock
jnp
and
sub
loopne
cs
in
ss
and
cmp
xchg
xor
mov
js
mov
arpl
nop
fldl
mov
xor
ljmp
push
inc
mov
mov
sbb
push
movsl
sub
je
adc
adc
push
sub
sub
cmpsb
icebp
xchg
daa
and
xchg
mov
mov
push
adc
and
jne
mov
adc
je
pop
es
add
filds
in
jnp
dec
jge
mov
inc
pop
sti
outsb
jbe
mov
add
and
test
xchg
test
in
in
mov
sub
jecxz
out
fsubp
or
cld
shll
outsl
or
mov
and
sbb
add
loope
and
inc
sub
add
pop
xor
lahf
jecxz
add
test
cs
sub
pop
cmp
mov
mov
out
test
jp
psraw
cmp
inc
jp
js
outsl
sahf
addr16
and
jnp
inc
or
int3
dec
scas
mov
jp
sbb
jnp
cmp
push
xor
dec
lds
xor
and
in
adc
clc
sar
loopne
mov
mov
sarl
fisubs
xchg
mov
xor
rcr
icebp
arpl
and
frstor
je
push
inc
push
icebp
lret
adc
mov
fidivrs
fcoms
or
mov
sub
cmpb
aam
and
shl
lds
jecxz
test
subb
popa
out
pop
in
scas
call
cmc
adc
out
out
cmp
mov
jecxz
lds
mov
jne,pn
fildl
mov
and
jecxz
jl
mov
inc
aad
fnstcw
adc
cltd
jle
xchg
inc
push
loope
lock
mov
and
sub
inc
sub
cmp
mov
andl
lea
inc
out
cmp
inc
mov
mov
xchg
mov
lret
repz
movsb
fwait
clc
inc
sub
mov
jmp
shll
out
shlb
clc
and
mov
mov
mov
lret
icebp
cmp
jno
std
std
mov
and
lds
lret
jg
and
inc
xor
dec
adc
lock
jbe
xor
adc
pop
lea
xchg
or
call
adc
sbb
gs
icebp
lds
test
lods
push
xlat
loop
push
mov
andb
cld
or
cmp
andl
cwtl
xor
and
inc
push
lea
ret
or
xchg
int
scas
or
aaa
ffreep
jecxz
fsub
test
fistl
fiaddl
lods
movsl
cld
cmpsb
aaa
pop
ror
xchg
out
ret
and
leave
sahf
push
addr16
andl
xor
rcrl
and
incb
mov
aad
ret
jno
inc
jnp
data16
push
push
test
into
or
pusha
ret
pop
jae
pushf
mov
and
test
jecxz
xchg
mov
jecxz
js
mov
cmp
cwtl
rorl
hlt
cli
add
rcl
add
sub
mov
jl
popl
fdivs
add
or
mov
stos
popf
imul
inc
repz
ss
std
data16
adc
pop
lods
cmp
mov
cs
or
jle
add
or
pop
mov
cmp
aas
jnp
lahf
pop
adc
aam
and
outsl
xor
ret
shll
lahf
mov
ljmp
shll
sbb
mov
int3
inc
daa
cs
inc
pushf
cld
xchg
mov
test
loopne
jne
fcmovnb
je
cmp
arpl
shlb
out
jp
adc
jmp
pop
xor
mov
xor
or
push
rorl
in
out
pop
mov
inc
ret
ja
adc
adc
repnz
mov
mov
loopne
xor
mov
sbb
xchg
shll
cmp
adc
push
pushw
add
sti
jmp
cmp
test
lock
fs
mov
pusha
mov
ret
dec
sbb
and
insl
inc
lret
adc
ljmp
in
aas
sub
inc
cmp
sbb
jb
sub
scas
popf
or
test
mov
xorl
paddsb
call
sub
mov
inc
or
push
pushf
fbld
shll
inc
outsl
push
shlb
sti
add
sbb
in
mov
mov
jo
popa
adc
push
adc
mov
je
jnp
fdivrp
popa
out
lock
xchg
lcall
add
mov
or
dec
jae
ja
insb
jne
les
jmp
xor
mov
jg
arpl
xor
fsubs
jns
xor
in
js
adc
int
lret
sbb
cmp
pop
or
pop
mov
out
fcoms
jne
pop
adc
mov
fs
xlat
rorb
pop
les
jnp
and
or
cltd
dec
and
mov
imul
sbb
jmp
mov
setbe
icebp
and
mov
push
shl
add
mov
and
gs
and
sti
dec
movsl
jp
repnz
jg
shlb
adc
and
loope
cmp
imul
mov
push
push
lods
jmp
push
push
mov
push
or
adc
cltd
mov
dec
inc
in
add
jecxz
and
cmp
and
js
cmpsb
loop
inc
mov
cmp
dec
push
icebp
insb
js
jb
adcb
xor
aas
jne
mov
shll
vmovlpd
pop
addb
pop
inc
xchg
mov
loopne
xchg
aas
and
sub
lods
test
mov
lods
fiaddl
or
xor
fs
sbb
aam
cmp
mov
mov
push
gs
mov
dec
cwtl
ret
test
push
movsl
sbb
mov
adc
xor
scas
arpl
jg
jmp
rcrl
cwtl
in
pop
les
andb
xor
ret
mov
jno
das
pop
in
popa
mov
into
and
enter
inc
lds
add
pop
out
mov
fstpl
push
sbb
in
pavgw
icebp
in
jnp
sahf
cld
fimull
and
add
jae
push
in
mov
das
sahf
cmp
nop
stos
decl
lock
movsl
mov
lea
test
cmp
adc
fimuls
xchg
popa
push
mov
add
dec
pop
out
aaa
xchg
push
add
inc
cld
inc
inc
idiv
sub
lea
jg
negl
in
xchg
xchg
xchg
sbb
add
mov
jb
mov
mov
ret
xor
sbb
pop
cmp
jp
into
mov
xchg
pop
scas
pop
mov
xchg
and
out
decb
fldt
add
mov
jo
sbb
shll
incl
pop
mov
adc
enter
add
mov
iret
loop
int3
sarl
mov
fucomi
jnp
dec
jmp
mov
jne
xchg
leave
xor
jp
jb
and
jecxz
sbb
mov
sbb
push
js
fwait
push
cmp
cmp
xchg
push
movsl
out
fidivs
fbstp
js
xor
mov
loopne
clc
mov
xor
das
gs
rcrl
push
imul
dec
add
in
aaa
sub
and
dec
fucomip
adc
dec
mov
xchg
mov
inc
sbb
push
ret
xchg
int
mov
cmp
push
jp
fbld
fisttpll
add
testl
fdiv
jmp
adc
pop
inc
aas
cld
and
dec
pop
in
repz
or
push
mov
dec
ljmp
xchg
xchg
fmuls
mov
lret
cmc
mov
int
inc
outsb
lock
clc
push
daa
cmp
and
xchg
imul
and
movsl
ja
test
scas
push
loop
fdivrs
int3
sar
addr16
arpl
rcrl
lock
cli
mov
fsubp
jp
popa
test
insl
adc
adc
mov
cmp
xor
es
dec
jecxz
pusha
add
loop
lcall
out
testb
in
loopne
out
mov
aaa
add
cmpsb
add
cmovns
pop
leave
int3
add
adc
push
inc
mov
jecxz
push
sbb
shlb
add
mull
ret
add
aad
mov
sti
mov
mov
dec
lret
arpl
sub
and
pop
lds
mov
pop
xlat
and
popa
mov
pop
mov
xchg
mov
insb
std
clc
or
and
loop
out
add
push
int
and
push
pop
das
cmp
js
mov
inc
mov
mov
mov
xor
xchg
cld
cmc
loop
sbb
adc
xchg
sbb
push
in
movsb
mov
fwait
iret
loope
mov
add
test
cmc
push
jnp
fstp
outsl
popw
jnp
xor
ret
test
push
push
sub
push
cwtl
and
xchg
outsl
repz
std
sbb
pop
loopne
and
jp
out
mov
push
fcmovb
add
xchg
sti
pop
aaa
jmp
jne
cltd
icebp
das
jno
mov
fwait
fs
jnp
call
out
or
xor
out
imul
in
test
or
in
repnz
sbb
std
lds
cwtl
aam
cmp
popa
jnp
cmc
xor
cmpsl
jle
jne
insb
xchg
or
xor
xchg
adcl
jno
fiadds
pushf
jecxz
adc
lcall
lcall
gs
fmul
adc
adc
icebp
xor
sub
mov
push
sbb
cmp
sti
add
and
push
cmp
icebp
popa
data16
push
and
pop
inc
mov
out
mov
push
inc
adc
adc
add
fldenv
mov
int
xor
popa
and
pop
cltd
jg
lcall
mov
addl
outsl
mov
int
je
movsb
mov
es
pop
fldcw
rcrl
sti
or
push
idivb
sti
cmp
add
add
dec
test
cmp
aad
inc
dec
jecxz
add
stc
adc
cmp
mov
sbb
repz
dec
or
push
mov
enter
daa
push
and
xchg
add
stc
push
mov
and
hlt
repz
add
out
loope
test
mov
fstps
push
daa
add
scas
in
frstor
jae
lret
or
int
fs
pushf
push
pop
rol
xchg
shrl
dec
mov
addr16
test
arpl
iret
sahf
sub
sub
push
sbb
je
mov
mov
ljmp
push
into
dec
cmp
push
xor
push
adc
adc
movsl
jae
adc
sti
add
push
sahf
jnp
and
pushf
pop
sbb
nop
fistpll
push
add
je
cltd
addl
jp
mov
sub
out
sub
in
mov
xchg
loopne
jecxz
cmpb
mov
ds
and
nop
jmp
daa
repnz
dec
cmpl
pop
sub
mov
jbe
insl
out
out
repnz
xor
rcr
data16
jo
dec
ret
push
jle
inc
mov
in
aaa
mov
pusha
pop
cmp
xor
push
jmp
pop
pop
sti
inc
jmp
jmp
mov
or
lods
dec
subl
hlt
dec
in
sti
add
mov
xlat
and
sub
push
ljmp
adc
sti
xor
xchg
jno
into
adc
mov
inc
sbb
jno
jge
dec
cwtl
in
push
cmp
xchg
or
push
xor
lods
sahf
xor
push
loopne
cmp
popf
cmp
into
arpl
sbb
mov
xchg
subl
data16
cli
and
repnz
test
inc
sbb
loopne
inc
sbb
ljmp
out
sub
aas
enter
and
inc
mov
push
gs
test
jmp
mov
dec
add
adc
add
jno
stos
iret
ret
jae
fiaddl
ljmp
sar
iret
bound
jmp
fmuls
scas
mov
jp
jnp
mov
sub
in
insl
jns
push
notl
popa
sahf
pop
fmul
popf
inc
inc
pop
movsl
dec
lods
or
fs
fiadds
jnp
sbbb
pop
addr16
loope
ljmp
or
push
adc
shr
mov
es
fs
and
mov
adc
fimull
repz
aas
and
stos
adc
mov
rcll
jecxz
sti
push
rorb
add
test
in
xor
insl
xor
in
or
outsb
pop
in
cmp
dec
popa
pushf
mov
scas
jge
pop
add
js
add
lods
andl
pop
xchg
data16
ror
test
test
in
sub
add
jecxz
add
int
cmp
and
int3
sub
sub
pushf
into
insb
out
mov
push
adc
or
xor
inc
sub
arpl
push
cmp
rolb
adc
jg
loop
loope
push
cs
adc
sbb
scas
xor
and
sbb
frstor
test
arpl
and
roll
xchg
adc
jmp
outsb
push
pusha
mov
sub
dec
pop
shrb
add
jl
aas
aad
sbb
or
and
ljmp
pop
xchg
jecxz
daa
aaa
cwtl
jl
jns
xchg
stc
rorb
pop
jl
cmp
mov
in
cmp
jno
adc
fwait
pop
lods
dec
out
lds
repz
jbe
in
xchg
stc
inc
inc
fxtract
mov
shr
push
insl
sti
xchg
xor
and
mov
adc
push
and
lret
mulps
push
push
fsubrl
data16
jae
sub
and
inc
lods
jmp
inc
inc
cmp
sti
xlat
ficomps
rclb
adc
test
lock
pop
mov
ret
cwtl
popaw
movsl
xor
ja
int3
jns
cmp
and
rorb
insl
cmpsl
loope
movsl
jb
scas
sbb
dec
out
sbb
test
sub
and
dec
aad
sub
add
mov
adc
popa
faddl
lds
lds
jne
stc
fcmovbe
lods
lods
fisttps
adc
xchg
aaa
shlb
mov
test
inc
jg
pop
xchg
jge
cli
cmpsb
mov
sub
xchg
pop
sahf
fs
ljmp
sbb
in
push
mov
sbb
cmpsb
in
and
cmp
add
loop
ror
adc
sub
dec
sub
ljmp
stos
mov
in
bound
adc
sub
js
pop
inc
pop
sbb
lods
cli
repnz
xchg
mov
lock
xchg
movsb
fcomi
xlat
mov
repz
fisttps
movsl
inc
test
xchg
mov
mov
aam
or
adc
jmp
jecxz
mov
test
les
jae
call
into
lods
clc
sbb
cmp
and
mov
mov
or
sub
out
sti
in
mov
cmp
fwait
popa
orl
pop
push
sti
mov
mov
pusha
incb
loope
out
dec
mov
and
mov
in
sbb
fcmovnb
hlt
adc
jecxz
arpl
push
inc
rcll
sub
pop
xchg
push
and
mov
nop
xchg
popa
jp
outsl
xor
jge
xchg
test
and
or
cmpsl
std
jo
pop
test
sbb
loop
jge
mov
xchg
out
xor
xchg
scas
mov
shlb
adc
or
xchg
js
xchg
fidivrl
inc
xor
xlat
movsl
cli
loope
fildll
js
cmp
and
addr16
xlat
lods
and
repnz
cmp
sti
jg
imul
or
sbb
or
dec
xchg
push
je
lret
adc
jle
imul
stos
dec
or
cmp
cs
lods
adc
adcl
xchg
and
scas
gs
mov
push
inc
sti
sbb
add
mov
ret
addr16
add
movsb
adc
pop
push
jmp
es
lock
and
arpl
pop
aad
lret
sbb
repz
sbb
inc
lcall
out
adc
repnz
cmp
mov
cld
shr
mov
aam
mov
std
ss
sbb
lcall
pusha
or
fucomp
mov
scas
push
jge
iret
out
aas
pop
repnz
sahf
inc
xor
popa
ror
arpl
jle
pushf
inc
fcoms
cmp
or
fwait
pop
sbb
icebp
inc
bt
stc
icebp
ljmp
xchg
push
jp
shrl
jg
out
push
das
xlat
xor
dec
mov
add
mov
sti
out
jp
aam
cmp
icebp
jecxz
mov
pushf
jae
mov
out
add
add
out
and
inc
sbb
cltd
adcb
mov
shlb
mov
xor
sub
icebp
jmp
ljmp
cmp
addb
sbb
mov
adc
sub
rcl
popa
nop
cltd
test
dec
popa
and
repnz
cmp
xor
and
jle
fists
shll
insl
orl
fsubs
icebp
sub
clc
sub
loope
aaa
push
xchg
mov
hlt
jnp
mov
in
iret
mov
ja
add
and
push
sbb
enter
lds
and
push
add
in
jnp
shlb
pop
jge
adc
xchg
adc
sub
div
jg
sti
nop
pop
xor
push
push
jnp
mov
push
jb
cmp
out
clc
cltd
push
int
inc
mov
xor
cmp
sub
lahf
pop
mov
jnp
pop
int3
outsl
or
cwtl
jmp
leave
mov
nop
bound
fs
push
ret
and
rcrb
enter
fcoms
insb
xchg
or
jge
jp
cmp
jnp
or
lods
in
jnp
pop
leave
cld
call
in
jnp
and
xor
xchg
mov
mov
pop
cmp
imull
mov
in
js
mov
dec
mov
mov
fs
leave
fbstp
loopne
stc
jge
or
cmp
inc
jmp
or
negb
imull
adc
mov
xor
movsb
popa
push
jecxz
popf
or
adc
and
clc
jmp
mov
lods
shll
adc
leave
rcrb
mov
xor
out
pop
xor
adc
jbe
cmpsb
icebp
or
jae
shlb
lret
scas
pop
mov
sub
pop
clc
popl
jns
js
sarl
lods
popf
push
out
adc
loope
inc
sub
outsl
test
out
sti
dec
imul
loope
pop
arpl
add
pop
imul
add
add
out
cmp
and
stos
pop
cmc
sbb
std
pop
inc
insl
mov
push
lds
pop
nop
xor
mov
mov
rcll
adc
loopne
mov
mov
mov
lods
push
xchg
and
ds
inc
call
shlb
pop
daa
dec
leave
pop
jne
in
xchg
insb
ret
loopne
mov
imul
or
in
xor
push
sbb
fsubrp
inc
sbb
jp
out
pop
push
psubb
and
mov
xchg
leave
in
push
loopne
xchg
lock
jl
inc
mov
lcall
arpl
xchg
and
or
mov
stc
pop
adc
sbb
mov
sbb
js
sbb
add
xchg
ss
and
inc
mov
pop
daa
jnp
inc
ds
mov
sub
xor
in
xor
pop
icebp
mov
out
mov
aad
test
icebp
jp
cmp
sar
add
xor
cmp
clc
outsb
rorb
mov
lret
aam
mov
sbb
lock
cwtl
pop
fxch
cmp
and
sub
imulb
xchg
popa
das
mov
push
addr16
adc
add
mov
fsubl
xor
and
subb
xchg
xor
jg
pushf
ds
pop
test
and
or
insl
cwtl
jp
fwait
mov
push
stc
ljmp
into
and
pop
daa
addl
mov
gs
add
std
dec
faddp
or
in
mov
and
xor
andb
xor
lods
mov
jecxz
and
mov
loope
mov
xchg
daa
pop
pop
mov
sub
addr16
or
cmp
popf
adcl
sbb
jns
lods
aad
movsl
lds
out
sti
or
fmuls
adc
clc
push
pop
jnp
jle
lret
shll
in
pop
pop
pop
jnp
popa
dec
cmpsl
popf
arpl
nop
and
jg
andl
push
into
fs
mov
sbb
add
inc
scas
and
std
and
int
out
or
and
jge
xor
sti
xor
lds
mov
fmul
test
sbb
jne
rcrb
mov
stos
add
je
test
pop
or
pop
inc
cmp
jecxz
inc
add
enter
pop
push
ja
mov
add
lds
xor
stos
sbb
mov
fistpll
mov
call
pop
or
add
ja
mov
sub
clc
stos
cmp
jl
sub
std
arpl
out
movsl
add
add
iret
in
cmp
adc
and
je,pt
shlb
jb
lcall
ss
dec
and
lods
jns
and
jecxz
mov
xchg
shll
xor
gs
in
lds
movsl
bound
test
add
out
inc
imul
push
aaa
ja
sub
das
mov
push
pusha
add
adc
inc
movsl
jae
popf
push
jle
iret
ljmp
pop
push
lds
loopne
mov
and
lods
fstps
and
into
in
sbb
cmc
push
outsb
pop
jecxz
fisubs
mov
test
lods
cmp
adc
cmp
scas
leave
std
jnp
sbb
inc
cmp
add
sbb
mov
pop
orl
lea
scas
shr
add
mov
inc
into
mov
mov
subb
jecxz
cmp
inc
push
push
call
mov
testl
or
test
cli
mov
shr
sbb
jb
xchg
push
and
add
test
test
pop
mov
mov
add
das
test
push
pop
rclb
das
outsb
in
insb
xchg
mov
jle
arpl
mov
call
mov
in
push
mov
ret
roll
cmp
and
push
push
mov
jp
popf
or
loopne
testl
push
add
aaa
out
mov
call
out
scas
xchg
arpl
aas
in
push
sub
pop
add
cmp
add
imul
lahf
scas
or
xchg
mov
xchg
pop
fimull
test
adc
dec
xchg
xor
jp
es
pop
hlt
inc
jne
arpl
mov
jo
aaa
jp
loope
data16
subl
adc
and
sub
and
test
inc
jae
jno
inc
out
mov
lcall
subl
jnp
test
and
xchg
and
cmp
xor
arpl
xor
jbe
jmp
mov
mov
call
and
cmp
sbb
fsubr
subb
inc
mov
sti
and
mov
mov
xor
mov
loopne
imul
mov
or
jbe
mov
mov
je
add
ficoms
mov
and
imul
sbbb
int
lcall
mov
inc
repz
lret
or
inc
addr16
aaa
rclb
mov
je
mov
pop
dec
pop
pop
mov
and
ret
daa
adc
lcall
and
shlb
pop
inc
daa
cmp
sti
mov
push
or
xor
hlt
loop
or
outsb
push
push
mov
pop
jns
arpl
in
insb
insl
enter
stos
mov
xor
jno
mov
pushf
sbb
add
push
enter
jmp
addr16
push
sbb
and
or
stc
cmp
cmpsb
xor
cltd
jnp
mov
je
mov
pop
test
adc
jmp
enter
jb
xchg
jecxz
cltd
cmp
adc
or
cltd
popf
xchg
cmc
aas
push
mov
add
or
mov
mov
stc
jge
cmp
imul
andl
mov
shll
divl
test
cmp
adc
imull
arpl
or
mov
jnp
cmp
and
add
xor
mov
stos
mov
cmpsb
sbb
xlat
jecxz
rcrb
ret
popf
or
popa
mov
ror
mov
xor
pusha
adc
sub
pop
loopne
nop
adc
xchg
mov
jnp
int
jae
frstor
xchg
inc
jae
mov
mov
mov
xchg
out
lea
or
enter
sti
shlb
push
jecxz
je
sub
push
sti
xor
pop
pop
add
rclb
shll
loope
mov
xor
fisubs
inc
adc
jbe
sbb
and
in
jmp
mov
push
mov
into
movsl
or
outsb
fnstcw
mov
inc
cmp
loope
push
inc
ja
push
jmp
cmp
mov
shll
ret
cmp
lods
adc
pop
push
out
add
dec
lea
rcrb
sub
dec
sbb
loopne
and
cmp
push
out
jge
mov
rclb
mov
push
adc
cmc
into
int
pusha
mov
sub
cmc
mov
mov
ror
adc
and
dec
ljmp
lret
adc
jnp
push
addr16
xor
dec
push
imul
cltd
out
sahf
or
or
sub
inc
adc
in
mov
into
aaa
jae
imul
in
mov
add
andl
xor
clc
or
sbb
adc
das
jno
je
in
inc
mov
out
inc
fs
pop
push
out
cli
and
jno
dec
pop
xor
dec
in
les
jecxz
adc
and
mov
fnstcw
sbb
out
mov
xorl
adc
rorb
cmp
lahf
in
imul
sbb
popf
clc
adc
lret
sub
aad
adc
sub
xchg
sbb
sbb
or
loop
test
leave
loope
push
je
cmp
inc
dec
mov
pop
jns
aam
add
mov
ds
ja
lock
inc
into
filds
jae
fistpll
push
ficoms
das
aas
arpl
mov
in
and
fsubl
imul
and
or
mov
push
mov
cwtl
mov
pop
cmp
rolb
cltd
pop
jmp
ds
lock
or
rolb
jnp
jmp
push
test
mov
pop
cwtl
cmpl
loope
or
shll
xchg
rorl
or
sbb
sub
das
cmp
dec
sub
sahf
and
mov
adc
add
or
stos
sub
outsl
out
mov
nop
mov
mov
jmp
push
push
and
and
xchg
testl
mov
ret
mov
push
adc
jecxz
cmp
inc
sub
jne
push
sbb
mov
or
loop
popa
pushf
sti
movb
pop
sbb
cmp
mov
and
xchg
movsl
in
loope
inc
das
jecxz
lods
xor
xlat
push
mov
mov
loopne
daa
xor
add
and
sahf
aas
push
ljmp
hlt
scas
ljmp
in
push
popf
mov
push
test
mov
insb
icebp
push
nop
jae
fildll
dec
test
insb
test
xor
sbb
pop
outsl
dec
clc
scas
loope
aaa
roll
cmp
xchg
adc
loop
pop
ret
das
inc
aaa
cmp
sarb
push
cmp
and
lds
in
inc
mov
outsl
movsb
push
mov
sub
sbb
cmpsb
push
xor
adc
push
and
aad
arpl
xor
pop
lods
mov
fisubl
add
dec
imul
and
mov
fadds
dec
xchg
mov
mov
pop
pop
lcall
or
aaa
sahf
dec
pop
pop
cmp
pushf
mov
call
mov
sub
push
mov
call
testl
popa
clc
insb
out
add
mov
ret
decb
inc
sub
sub
jmp
fidivrs
jo
pop
aad
aad
or
or
xor
jnp
or
mov
push
ja
test
stos
jmp
mov
jnp
inc
mov
xchg
arpl
les
out
or
out
loope
add
mov
jo
mov
and
into
jns
or
mov
cmp
mov
insb
dec
sti
sarb
mov
iret
sub
xor
push
rcl
test
aaa
xchg
and
dec
sarb
xor
stos
popa
ret
pop
rorl
or
mov
inc
and
sub
into
push
mov
jno
lcall
and
and
fsts
inc
ja
mov
mov
rcrl
jg
das
fsubl
jne
mov
int
cmp
mov
data16
add
push
fnsave
inc
test
push
out
sbb
shlb
sbb
sub
mov
adc
lcall
jnp
scas
scas
sarb
andb
cld
popa
jae
icebp
ss
or
aad
mov
xchg
or
ret
test
and
or
cmp
and
mov
add
xchg
jecxz
xor
jmp
pusha
sbb
cwtl
stc
push
jge
rol
push
and
xchg
mov
and
push
jns
cmpsl
push
lock
mov
repnz
daa
lcall
popf
xchg
or
cmp
insb
inc
push
arpl
and
mov
pusha
inc
arpl
push
mov
inc
mov
xchg
xchg
inc
out
cltd
xor
push
sbb
jbe
mov
iret
jle
sbb
cmpb
mov
daa
mov
cld
pop
mov
mov
lock
dec
test
fstpt
andb
jp
mov
cmc
push
scas
jmp
cmp
es
fsubl
and
daa
inc
pop
sub
sbb
bound
xchg
pop
hlt
inc
lcall
shrl
adc
pusha
mov
jb
aaa
das
les
cwtl
cmp
leave
and
loopne
jecxz
ja
dec
lock
jcxz
cmp
xor
loope
aam
jo
in
and
mov
fisubrs
sub
adc
cmc
dec
ds
xchg
adc
mov
sub
sub
or
clc
lret
sbb
jl
lcall
inc
mov
cmc
shll
and
sbb
popa
addl
adc
xorb
repz
in
cmpsb
int3
loopne
jo
ds
roll
rcl
andl
stos
mov
popf
loop
loope
mov
mov
sti
mov
xor
and
mov
stc
popa
dec
clc
sar
shrb
ljmp
push
sbb
popa
shr
cmp
call
pop
ret
and
and
push
test
icebp
xrelease
adc
xchg
push
push
cmp
mov
sub
inc
dec
fs
int3
arpl
xchg
cmc
and
nop
cmp
ss
mov
std
jp
ss
data16
sti
and
gs
icebp
cwtl
push
mov
or
mov
xlat
pop
and
mov
gs
jae
aad
ja
or
fimuls
jecxz
sbb
pop
jmp
iret
arpl
enter
sbb
xor
mov
add
and
outsl
and
nopl
pusha
orb
sub
and
fldl
addr16
mov
out
movl
daa
mov
mov
outsb
in
adc
or
in
and
sbb
ret
mov
sub
addr16
loopne
loope
lods
iret
enter
and
int
mov
call
dec
add
and
popa
push
xchg
loopne
mov
jp
iret
daa
mov
dec
out
scas
adc
and
mov
loope
outsl
shll
mov
divb
fildl
push
insl
mov
rcrb
fsubl
scas
adc
scas
sbb
adc
adc
push
xor
mov
adc
xchg
and
and
das
fistl
jbe
mov
jnp
in
idivb
jge
in
lock
mov
gs
xlat
int
or
cmp
sub
cltd
sahf
out
add
and
mov
mov
jecxz
lods
out
leave
hlt
add
sub
jp
lea
sti
daa
sti
push
xor
mov
dec
mov
stos
pop
jecxz
and
je
add
pop
push
and
test
je
lea
jmp
push
cmp
pop
mov
xchg
scas
fldl
jp
enter
xchg
pushf
arpl
or
pop
mov
or
or
jp
xchg
fisubl
mov
push
cmp
das
shlb
jae
fs
push
gs
mov
add
cmp
fsubs
or
mov
jae
daa
loopne
mov
movsb
and
jecxz
mov
inc
in
jnp
jecxz
pop
cmp
mov
repz
shlb
movsb
jecxz
mov
jb
mov
inc
cmp
cmc
cmp
jnp
sub
lock
aam
movsl
sbb
ret
cmp
mov
decb
jne
mov
add
shlb
mov
mov
addb
movsw
jge
adc
xor
cmpb
test
imul
in
adc
mov
jnp
aaa
mov
test
imul
mov
bound
adc
ljmp
lret
cmc
xor
sbb
or
fcmove
roll
dec
cmp
jmp
inc
pusha
addr16
orl
stc
popa
popa
popf
adc
cmpsl
dec
fwait
jmp
push
scas
cmp
aaa
rolb
pop
je
sub
and
mov
inc
push
push
cmp
sub
sub
push
xlat
aas
jnp
xchg
xchg
enter
jl
out
cmp
shlb
dec
mov
sti
decb
loop
fdivs
or
adc
mov
sbb
mov
and
add
lret
jle
jo
push
mov
xchg
jle
adc
push
push
inc
and
and
jp
mov
ljmp
mov
jbe
aaa
cmp
pop
dec
jb
cmc
jmp
add
or
test
sbb
push
and
and
pusha
ret
in
lock
lea
mov
pusha
push
scas
fcmovnb
add
or
push
imul
out
jg
adc
rcrl
call
and
cmp
sub
ds
adc
xchg
stos
jnp
mov
fldenv
mov
jecxz
push
and
fs
mov
inc
push
sub
and
out
inc
jl
fmul
and
sub
incl
and
ss
dec
sub
loope
into
mov
lock
das
push
in
adc
jns
adc
jle
add
mov
arpl
xorl
or
enter
push
adc
xchg
and
in
sbb
sbb
xchg
xchg
sub
xchg
rol
fwait
sbb
cmp
mov
dec
jl
sbb
dec
dec
cmpsl
pop
adc
enter
test
mov
push
adc
adc
mov
js
and
rcrb
fimuls
hlt
test
push
xor
pop
sbb
fwait
xchg
ja
jecxz
push
cmp
aaa
or
mov
mov
pop
xchg
xchg
mov
adc
es
xor
lret
xor
pop
jle
rorl
stos
and
jae
fimuls
adc
push
cmp
dec
arpl
invd
push
push
outsb
jl
test
or
push
addr16
fistps
movsl
jmp
test
dec
jp
hlt
xchg
and
push
mov
mov
cltd
test
mov
je
ficoml
or
pop
push
jns
cmpsl
cmp
out
addr16
dec
jb
jns
sub
jp
sbb
sbb
sti
movsl
cmpsl
adc
lcall
cmp
into
popa
mov
inc
popf
cmp
dec
sub
xchg
adc
jno
push
inc
push
and
test
xorl
arpl
mov
pop
mov
push
xor
sahf
mov
orb
xor
cs
shrl
push
jno
sub
pushf
pop
aam
or
and
imul
in
ds
push
mov
and
in
lret
push
mov
jg
jle
jl
adc
test
aad
sub
sub
sbb
adc
mov
mov
xchg
stc
and
xor
cmpsb
jns
adc
pop
repnz
loopne
lock
jbe
mov
and
jno
jne
inc
call
push
js
xor
arpl
jns
adc
loope
and
xchg
adcb
sbb
jmp
jns
popa
xlat
loope
dec
xchg
cld
jg
xchg
jae
add
stos
stos
push
lcall
hlt
loopne
insb
push
stos
arpl
adc
cld
adc
shlb
xchg
mov
popa
and
mov
dec
outsb
mov
cmp
in
jp
leave
ret
push
loopne
sub
mov
mov
push
test
jmp
gs
aad
push
leave
cmp
pop
dec
push
jle
xchg
arpl
xor
jae
faddl
mov
xchg
outsb
mov
mov
aaa
add
xor
out
rclb
dec
mov
dec
or
jle
mov
popa
fmull
movsb
push
jp
mov
pop
test
cmp
cmp
ret
scas
repz
push
inc
fabs
mov
push
jle
imul
pusha
imul
sub
push
sub
xor
jl
std
xchg
push
je
sbb
pop
pop
nop
mov
enter
sbb
scas
and
and
int3
test
outsl
inc
jno
lds
and
add
jae
add
daa
iret
pop
jmp
mov
sub
xchg
cmp
cli
inc
in
mov
sub
dec
rorb
movsl
in
sub
xor
mov
and
and
or
jnp
int
loopne
in
and
sub
and
pop
pusha
addl
insb
mov
add
test
fcoms
enter
and
add
pmullw
sub
es
stc
mov
fs
or
adc
mov
pop
jge
push
arpl
pop
xor
aad
ja
and
mov
push
sub
xor
popa
into
movsl
xchg
daa
shrl
test
dec
adc
jno
or
lea
xchg
test
popf
jecxz
in
arpl
pop
or
dec
mov
insb
lds
jo
pusha
and
out
ljmp
push
and
cmp
loop
adc
push
movsl
gs
adc
pusha
adc
loopne
pop
and
add
pop
and
inc
lock
popa
jl
pop
cmp
cwtl
lods
or
mov
movsb
fldt
mov
pop
mov
and
cmp
pop
std
push
jo
pop
fldenv
out
mov
insl
push
pop
scas
dec
sub
and
mov
mov
leave
daa
out
fsubr
mov
sbb
cli
xor
incb
pop
mov
std
jge
nop
and
adc
inc
sub
movsl
es
and
jnp
xchg
jp
adc
add
ret
ret
add
xchg
movsl
in
jnp
addr16
dec
add
mov
popf
arpl
xor
pop
xor
scas
fstpt
and
and
cmp
sahf
dec
scas
call
sbb
sarl
and
cmp
push
inc
cmp
das
sbb
jp
pop
push
mov
dec
popf
sub
xor
push
std
add
xor
int
lods
mov
xor
sub
jl
iret
sub
hlt
popa
sub
mov
mov
les
mov
rcrb
paddsw
mov
data16
leave
movsb
and
popa
push
popa
mov
aam
push
push
add
ss
push
pop
addl
sub
lods
inc
adc
pop
cwtl
push
gs
sub
sti
ja
cmpsl
stos
out
sub
in
jecxz
mov
pusha
and
dec
and
mov
adc
dec
popf
fwait
mov
mov
in
pop
fs
and
pop
mov
sahf
xchg
addr16
pop
jmp
pop
idivb
into
cli
and
and
push
aaa
pop
mov
sbb
and
dec
lcall
mov
test
and
ret
jmp
sahf
mov
jp
push
xlat
fsub
adc
iret
sahf
inc
addr16
adc
and
jb
fprem
xor
xchg
add
clc
aaa
cmp
cmc
in
popf
xor
shrb
outsl
in
pop
xchg
sub
aad
insl
add
test
and
jns
adc
jnp
iret
rclb
add
nop
jecxz
xchg
sub
in
popa
int
add
ja
lock
int3
and
jge
dec
sub
stos
aad
shrl
jno
mov
and
mov
jae
nop
jne
daa
loopne
lea
push
gs
cli
inc
add
stos
ljmp
ljmp
inc
inc
pop
adc
and
frstor
sub
movsl
adc
sub
lds
add
or
shlb
pop
arpl
pusha
push
mov
fwait
aaa
inc
pop
sti
pop
cmp
and
add
mov
and
cwtl
push
lret
mov
decl
push
push
loope
jo
xchg
or
mov
outsl
cwtl
stos
adc
adc
jnp
push
test
in
push
jecxz
lret
xor
cmp
dec
pop
push
adc
mov
vcomiss
dec
inc
testl
enter
cmpsb
arpl
div
pop
sub
lret
add
stc
jnp
lods
lods
sarl
mov
int
push
pop
sub
in
cmp
pop
cmp
xchg
test
stos
xchg
clc
inc
add
testl
jecxz
hlt
rolb
push
push
jecxz
out
into
jp
jno
sub
pop
shl
std
xchg
dec
cmpsl
mov
js
popa
js
hlt
in
inc
cmp
mov
push
pop
jmp
xor
push
jge
and
or
and
cltd
jne
std
inc
jns
jmp
mov
jge
or
das
push
loope
adc
loope
cmp
mov
mov
out
pushf
cmc
xor
imul
xor
sbb
jo
pop
mov
aaa
sbb
fs
sbb
mov
push
in
inc
cltd
mov
cmpl
fsubrl
scas
aas
push
jle
push
ds
cmp
lock
pop
xchg
enter
xchg
test
add
jns
mov
movsl
fwait
adc
lcall
add
sbb
fistpll
popf
cmp
sti
pusha
xor
xbegin
cmp
push
arpl
cmc
jbe
inc
test
jecxz
push
in
cmpsb
sbb
shl
cltd
jbe
mov
in
mov
lds
cmp
push
lock
inc
ljmp
jg
mov
sub
cmc
and
sub
cmp
sub
inc
push
scas
and
call
xchg
mov
in
inc
movsb
stos
test
sub
mov
inc
pop
aaa
push
push
inc
push
inc
notb
cmc
and
push
test
orl
dec
es
add
subb
mov
pop
shll
fisttpll
fwait
sub
fldcw
repz
push
dec
push
cli
test
outsl
pusha
int
test
push
and
and
iret
lds
loope
mov
add
gs
inc
mov
test
insl
mov
push
xor
orb
ljmp
lcall
std
in
sbb
inc
clc
mov
mov
cmp
cs
jge
int3
xchg
fwait
and
sub
jns
test
jb
dec
or
mov
and
push
cltd
cmpsl
and
cltd
pop
add
andb
fadds
lods
rcrb
push
ret
loope
aas
jnp
shlb
mov
jbe
xor
sti
out
dec
jnp
aad
dec
movsl
add
xchg
fs
inc
or
and
ficoml
testb
sub
ljmp
les
dec
popa
sarl
fidivs
adc
test
mov
lret
outsb
cld
jge
addr16
lds
pop
pop
je
and
out
push
xor
mov
xchg
xor
sti
popa
sar
xchg
push
push
xor
insl
adc
mov
sub
in
loop
shl
icebp
out
xor
cli
outsb
xor
lret
bound
dec
sub
inc
mov
push
cmc
mov
xchg
icebp
pop
mov
dec
dec
popa
sbb
add
and
dec
jns
adc
into
cmc
mov
pop
and
int
mov
push
xchg
es
cmpsb
or
dec
lret
add
out
ja
sbb
pop
sbb
inc
std
sub
or
sbb
in
mov
mov
shrl
sbb
and
test
pavgw
fists
fdivrp
jecxz
mov
sarb
mov
popa
mov
jge
xlat
dec
bnd
imul
and
in
and
aam
mov
adc
xor
clc
imul
movsl
loopne
hlt
cmp
pop
fsubrs
cwtl
xor
cmp
lcall
sbb
inc
lods
push
ja
push
adc
and
pop
push
cmp
pop
pop
aas
inc
mov
pop
xor
mov
movsb
jmp
sub
sub
jnp
iret
mov
insl
jecxz
jmp
cmc
ret
icebp
call
fldt
add
pusha
or
cmpsb
cli
sub
js
or
xor
xchg
outsl
jne
pop
or
mov
imul
and
loope
das
push
sbb
ljmpw
add
or
fldt
ret
loope
sub
jns
in
test
test
pop
sbb
cmp
jg
and
shlb
push
mov
push
push
in
nop
mov
cmp
mov
jne
popa
lods
push
mulb
ret
test
pop
jnp
in
sbb
popf
dec
mov
and
rcrl
loop
or
and
cs
jns
aas
jo
das
lods
push
pop
out
loope
test
lds
cmp
xlat
xchg
adc
out
jl
je
imul
jmp
mov
les
repz
je
xchg
jg
and
mov
cmp
jns
inc
or
mov
mov
and
dec
sahf
sbb
sbb
cmp
xor
bound
mov
and
rsm
imul
addr16
fwait
into
stc
lds
xchg
daa
hlt
adc
mov
push
xchg
add
push
or
pop
sti
jnp
int3
or
ss
ss
ds
add
ds
mov
cld
lss
sbb
and
and
movsl
mov
cmp
rolb
mov
push
cmpsb
or
ja
xor
mov
push
add
sbbb
sahf
xchg
xchg
adc
jno
sbb
xor
lods
cmpsb
arpl
bound
fldenv
movsl
dec
sub
adc
dec
fdivr
aam
aad
and
mov
cs
or
push
adc
fdiv
pop
popf
push
xchg
sbb
cmovae
jnp
sub
dec
sub
push
or
add
mov
and
dec
and
in
fldenv
mov
das
dec
hlt
sbb
imul
loope
add
inc
int
stos
jns
add
cmp
cmp
push
dec
or
jp
xchg
imul
mov
jno
inc
jmp
mov
jb
loope
fsubs
adc
sbb
lret
ljmp
mov
daa
cmp
and
cltd
pushf
out
mov
or
jb
dec
call
and
scas
push
movsl
inc
add
cltd
and
aad
popa
pop
mov
fwait
sub
sub
divl
dec
ss
leave
cmpsl
ss
sub
jg
lret
xor
jno
test
icebp
pushf
jmp
lret
popa
xchg
cmc
pop
or
add
lea
sbb
fnsave
jns
fdivrl
cmp
lret
cmpsb
pop
xchg
mov
fisubs
lret
cmp
and
test
adc
gs
fadd
dec
xchg
push
stc
pop
stc
loope
sbb
sub
xor
lock
test
loope
jno
dec
nop
jl
pop
sbb
or
ficomps
divl
hlt
add
js
out
fisttps
nop
inc
pusha
clc
xor
and
in
fmull
cmp
sti
and
aaa
mov
gs
in
fcmovnbe
mov
sub
aas
mov
fs
adc
and
lahf
and
dec
ror
out
dec
sub
xor
imul
push
lds
jecxz
mov
lods
shl
subb
and
gs
mull
loopne
popa
xor
or
and
cs
jnp
dec
cmpsb
pop
lods
cli
lcall
or
imul
push
adc
arpl
cmc
shlb
test
pushf
push
adcb
lods
mov
gs
jl
test
loope
mov
push
cli
ja
sbb
mov
and
jge
push
das
arpl
je
and
cwtl
xchg
pop
mov
jo
in
pop
cmp
data16
popa
and
into
imulb
or
sarb
adc
add
in
mov
fimuls
push
shll
jmp
or
and
xor
repz
and
jl
jg
icebp
jle
loope
inc
ficompl
gs
ss
roll
xor
mov
mov
cmp
adc
xchg
inc
push
sti
jg
lahf
pop
sub
fmull
jmp
push
mov
gs
movsl
arpl
adc
push
movsl
loop
mov
xor
clc
mov
adc
sbb
sbb
xor
xchg
add
movsl
mov
pusha
test
cmp
gs
pop
stos
push
bound
in
inc
cmp
mov
cld
mov
ljmp
arpl
cli
leave
jb
inc
in
xchg
push
cmp
add
xor
fs
test
stos
imul
and
xchg
lret
jo
and
loope
sub
stc
enter
add
mov
cmp
adc
or
mov
add
dec
in
cmp
and
push
fwait
jmp
jne
inc
inc
pusha
cmpsl
jecxz
cmp
stos
bound
push
cmp
in
movsl
and
stos
sbb
push
stos
sarl
push
arpl
add
cmp
adc
jb
ljmp
mov
jp
cmp
pop
lret
sub
xchg
push
sub
dec
clc
push
add
xchg
jo
out
cmp
mov
scas
mov
je
xor
in
outsl
cli
sub
dec
arpl
stc
adc
stc
mov
jno
sarl
jecxz
mov
dec
pushf
cmp
and
cmpsl
dec
gs
in
mov
jle
call
pop
mov
sti
pop
adc
sub
pop
gs
ja
lock
mov
jnp
push
in
ljmp
pushf
sub
scas
cmp
test
ret
loope
mov
mov
arpl
aad
shld
sti
and
inc
xchg
aam
xor
add
dec
popa
dec
hlt
sbb
ss
jmp
sahf
lret
out
jns
imul
sti
sub
and
jmp
inc
mov
pop
movsl
or
pop
xor
adc
cmpsb
aad
lahf
mov
inc
lret
movsb
jg
sbb
mov
dec
adc
add
test
mov
xchg
popa
sub
cmp
lret
mov
mov
stos
cld
mov
adc
sbb
mov
or
pop
cmp
addr16
pop
gs
push
xlat
and
movb
subb
mov
shrl
divl
add
push
add
jl
loope
mov
into
cmpb
jmp
sbb
adc
fidivrl
ret
add
mov
or
adc
test
xor
cmc
cmp
adc
ljmp
mov
xchg
iret
aam
push
adc
cmp
jne
add
loope
ds
fldl
sbb
lock
xchg
push
addr16
or
popa
inc
sahf
or
xor
in
loopne
pop
mov
lea
cmp
push
movsl
add
xchg
les
test
mov
insb
lret
add
sbb
jmp
or
ljmp
test
fwait
testb
dec
daa
adc
arpl
adc
adc
inc
mov
iret
shlb
shrb
loopne
lods
xorb
jl
mov
scas
pop
sub
or
int
cmp
pop
mov
out
or
fmuls
xor
stos
jecxz
cmp
dec
je
jo
shlb
inc
pop
adc
push
js
xchg
in
icebp
test
dec
cmp
add
and
xchg
lret
stos
jge
jo
inc
lds
popf
outsb
inc
jo
nop
and
call
loopne
pop
jbe
jne
or
popa
cmp
jge
xor
jmp
add
loopne
or
push
and
jle
and
xchg
push
gs
push
xorl
pop
dec
add
ds
shlb
cmp
cmpsl
int
sbb
aaa
cld
loope
mov
subb
std
sbb
andb
in
cmpl
daa
cmp
jle
and
dec
nop
push
jo
xchg
out
pop
shll
dec
mov
mov
lcall
xor
inc
mov
inc
add
sbb
xor
push
sbb
mov
popa
aas
daa
lret
pop
sub
sub
inc
cwtl
inc
pop
aam
mov
inc
scas
add
push
enter
stos
cld
repz
stos
loopne
pusha
xor
jecxz
popa
inc
sub
adc
mov
out
daa
sahf
icebp
mov
jl
fisttpl
xchg
sbb
and
adc
xchg
loope
and
mov
or
and
sub
cmp
xor
insb
pop
in
adc
in
jnp
jmp
and
test
in
addr16
out
push
pop
mov
mov
sbb
jo
lea
sti
or
nop
cwtl
cmp
and
add
mov
movsb
sbb
ss
arpl
into
fs
orl
push
sbb
or
xor
jne
push
sarl
mov
adc
pop
test
or
aad
push
fisubs
icebp
xchg
fists
mov
int3
loope
addr16
fistpl
xor
andb
cmp
sti
mull
cli
xchg
cld
mov
jmp
rorl
pusha
push
sbb
arpl
fs
mov
cmp
sub
mov
sbb
pop
pop
jge
add
stos
jmp
or
ljmp
jecxz
xor
push
scas
xlat
jmp
add
add
inc
and
dec
sub
data16
jge
aam
mov
jge
insb
mov
in
subl
pushf
sub
icebp
mov
das
addr16
lret
cli
push
xlat
cmp
adc
xor
xor
lods
sbb
scas
cmp
lods
bound
psubd
and
sbb
xchg
push
jle
fistl
pop
aaa
clc
loope
fidivl
daa
in
xchg
sub
sbb
mov
sbb
stc
repz
pop
jmp
sbb
cmp
mov
push
insl
in
push
add
adc
pop
cmc
pop
sbb
aaa
in
mov
mov
mov
ds
mov
push
inc
dec
in
je
movsl
das
stos
jge
inc
test
mov
das
sbb
jae
andl
lods
mov
sti
xchg
push
movsb
ds
fucompp
out
and
mov
movsb
dec
cmp
and
sarl
in
push
js
sti
cld
adc
inc
loope
inc
fldcw
or
loopne
cmpsl
jae
dec
add
shlb
sub
mov
pusha
cmpb
xchg
enter
in
mov
mov
inc
push
or
out
jae
mov
mov
je
fldenv
sbbl
je
test
fsubs
mov
cmp
pop
fwait
jmp
jnp
push
jbe
in
test
push
sub
push
filds
nop
xchg
sub
mov
and
mov
cltd
stos
push
mov
push
jb
xor
popa
and
notb
cmp
aaa
lahf
sahf
jbe
pop
jne
and
xchg
scas
add
out
and
xchg
outsb
shl
push
scas
inc
out
push
jo
cmpl
push
push
idiv
idivb
aaa
sub
mov
mov
aas
sbb
add
mov
push
adc
in
divb
loopne
in
mov
movsl
in
popa
pop
xor
repz
in
loope
pusha
push
in
pop
xchg
pop
fxch
sub
lret
mov
push
loope
or
pop
sti
xchg
sbbl
arpl
jg
nop
in
scas
addr16
in
cmp
das
cld
outsb
dec
cmp
cmp
mov
das
and
cmp
cmp
rol
cltd
xor
xchg
shl
add
sub
ret
and
jnp
ja
push
mov
adc
in
mov
xor
lahf
cmpsl
xchg
std
popa
add
inc
adc
sbb
es
into
clc
or
dec
jmp
jae
jae
pand
rcr
xor
and
push
jmp
jmp
add
mov
xchg
mov
mov
pop
mov
dec
sbb
popa
lea
mov
cld
mov
dec
mov
fdivr
test
lretw
mov
int3
dec
cltd
mov
add
mov
rorb
dec
cs
ret
stos
inc
ljmp
outsl
jno
popa
inc
sub
ret
cmp
dec
pop
femms
cwtl
pop
jnp
pushf
xor
rcl
mov
fcoml
js
pop
repnz
shrb
or
xor
into
jmp
fldt
aas
ret
popa
loopne
imul
mulb
xor
add
jno
arpl
dec
pop
std
scas
xor
popa
push
test
inc
sbb
aas
or
mov
jmp
push
lods
xchg
xor
jle
cmp
jne
push
adc
and
and
pop
xchg
jmp
pushf
lock
sub
xor
push
rep
add
cwtl
xchg
adc
inc
add
and
cmpsl
jmp
mov
inc
lods
test
mov
aad
cmp
add
jg
test
arpl
sub
sub
dec
dec
sub
pop
shlb
imul
xchg
test
test
adc
pop
orl
sbb
popa
loope
stc
dec
bound
fimull
test
std
adc
outsb
imull
sub
push
pop
xor
push
inc
stos
push
insl
outsb
adc
cmp
rcrl
and
add
enter
sub
and
adc
lds
fwait
mov
inc
jnp
test
push
xchg
pop
mov
setae
je
xor
ja
xchg
les
fildl
jmp
jmp
sbb
fcoml
and
xor
jnp
sub
and
scas
lods
daa
mov
stos
imul
cmp
or
cmc
movsl
loope
pop
into
ljmp
cmp
xlat
lea
popa
and
jmp
push
mov
add
movsl
mov
fcmovb
ja
cmpsl
stc
mov
jl
add
pop
pop
sbb
aam
mov
enter
xchg
xlat
inc
or
mov
fbstp
sub
ret
add
add
xchg
dec
xchg
subl
mov
fldl
fndisi(8087
xor
je
jg
push
mov
int3
pop
jae
fstpt
push
in
mov
sub
lret
sbb
mov
fdivl
and
test
gs
call
jecxz
movsl
scas
push
pop
push
dec
jle
ss
pop
test
fbstp
and
orl
aaa
mov
stc
jl
mov
repz
cmp
sbb
mov
loope
mov
icebp
adc
repnz
xor
pop
incb
mov
fwait
sbb
les
or
add
fisttps
xchg
inc
push
pop
inc
sbb
clc
out
mov
ljmp
pushf
arpl
jne
mov
repz
or
adc
enter
inc
sub
cwtl
xlat
push
xor
fisttpll
ret
jb
adc
or
sti
lds
cmp
in
pop
push
mov
outsl
mov
das
xor
lcall
push
or
loope
dec
stos
lahf
jecxz
mov
scas
cmp
cmpsb
arpl
sbb
inc
xchg
mov
cli
jno
popa
shrb
dec
adc
mov
inc
inc
pop
mov
stc
mov
movsb
repz
cltd
fiaddl
mov
inc
mov
sub
mov
push
fmull
sbb
push
sub
inc
jecxz
mov
and
and
mov
push
dec
cmp
mov
sti
cs
or
or
add
xchg
bound
arpl
jnp
push
push
and
out
fimull
sti
mov
sbb
xchg
or
rol
divb
pop
cmp
or
dec
pushf
push
in
rcll
pop
jnp
lcall
and
and
push
pop
stc
and
mov
xchg
stc
mov
fmuls
xchg
xchg
popa
cmc
mov
rolb
add
in
cld
loop
outsl
xchg
jl
cmp
and
ficoms
fwait
arpl
adc
pop
in
test
test
das
lods
xchg
in
in
push
clc
push
xor
sbb
pusha
jecxz
push
loop
jo
xchg
sti
sbb
sbb
sbb
outsl
inc
mov
test
jo
mov
gs
int3
fistl
popf
jecxz
and
pop
aaa
pop
mov
mov
repnz
sbb
icebp
sub
nop
enter
mov
cmp
test
arpl
mov
pop
jmp
rcr
out
or
ret
mov
mov
pop
mov
and
outsl
mov
xchg
fmul
arpl
stos
dec
pop
sbb
and
jmp
daa
pop
jnp
mov
adc
int
mov
stc
lahf
and
repz
lds
jnp
out
sub
mov
cli
stos
jecxz
push
shlb
ficoms
shr
xor
sbb
outsl
push
xor
push
and
cmp
das
lods
add
xchg
fs
xor
scas
sub
cld
popa
mov
sbb
pop
je
aas
adc
pop
loope
scas
cld
cld
pusha
test
adc
fwait
add
popf
outsb
divl
negb
in
into
dec
adc
lods
jo
daa
mov
sub
mov
aad
ja
sbb
andb
enter
aas
mov
cmpsb
push
add
pop
cli
shr
adc
pop
aaa
lcall
test
in
mov
and
xor
xchg
push
dec
mov
dec
test
sti
mov
out
adc
imul
cmp
ja
cmc
push
ret
add
mov
mov
cmp
adc
or
aas
test
mov
repz
insl
mov
movsl
out
push
and
and
xchg
loop
int3
das
jp
inc
rcrb
sbb
cs
repz
add
pop
les
sbb
lea
cmp
fwait
or
repnz
xor
push
and
sub
es
je
adc
adc
ljmp
in
outsb
pop
les
insb
push
sti
fdivrs
jl
mov
add
jno
popa
repz
sti
int3
lret
ds
stos
push
mov
xor
xchg
jbe
xor
ljmp
insb
jae
cli
inc
imul
jbe
inc
stos
cmpsb
bound
sahf
jnp
mov
pushl
inc
sbb
and
int
dec
xor
pusha
cmpsl
mov
insl
jecxz
out
inc
js
add
dec
ss
lods
sub
jecxz
pusha
dec
cmp
loopne
loope
cmp
sub
std
jno
inc
insb
sub
push
arpl
pop
and
fldl
loopne
add
dec
icebp
icebp
mov
mov
imul
sbb
out
cmp
aaa
cmp
mov
icebp
push
xchg
and
lahf
pushf
jo
rcpps
inc
adc
popa
add
stc
and
pusha
mov
pop
add
hlt
mov
neg
xchg
insl
xchg
outsl
stos
scas
adc
and
dec
gs
repz
inc
div
in
sub
pop
in
mov
lds
jmp
out
js
imul
call
adc
sahf
jnp
and
push
adc
dec
bound
call
jno
xor
push
dec
push
lock
js
sbb
out
lret
outsl
or
dec
adc
jle
arpl
sub
dec
xlat
add
repnz
inc
push
mov
jecxz
dec
add
addr16
push
in
jecxz
lea
mov
out
cmp
dec
repnz
and
push
mov
jmp
daa
xchg
icebp
and
mov
sbb
repnz
rcr
lock
mov
sbb
mov
outsl
sbbb
xchg
imul
cmp
push
jne
cmp
insl
daa
sbb
adc
test
add
mov
adc
mov
xorb
xchg
cli
inc
mov
push
adc
add
in
push
mov
sbb
adc
or
and
insl
xchg
aad
ret
fwait
cmp
out
lea
das
hlt
out
std
adc
or
rorl
sub
pop
repnz
push
mov
shrl
xor
in
adc
fists
movsb
cmp
and
and
mov
jg
mov
sub
movb
lcall
mov
psubsb
cs
push
inc
out
mov
jb
adc
shr
jo
push
adc
mov
in
jl
lock
adc
lock
cmpsl
add
fs
xchg
stos
push
or
test
jnp
cwtl
mov
aaa
mov
push
add
inc
add
inc
mov
sub
nop
add
inc
add
push
or
push
dec
inc
adc
pop
int3
movsb
add
or
add
push
add
push
mov
adc
xchg
add
jmp
xor
addb
adc
mov
or
add
xor
add
add
add
sbb
add
add
xor
add
add
xchg
nop
or
push
add
inc
add
roll
add
add
sub
or
lret
push
pusha
add
push
and
leave
mov
gs
sbb
push
shlb
xchg
dec
push
sbb
adc
pop
and
or
sbb
add
rolb
push
add
rolb
add
add
adc
xchg
js
and
add
and
addb
and
xchg
push
add
stos
add
sbb
inc
adc
adc
orl
adc
mov
dec
add
and
add
add
add
xor
add
and
nop
adc
or
and
add
pop
adc
addb
adc
add
add
add
pop
enter
xor
or
add
sub
and
xchg
sbb
mov
mov
dec
add
and
add
and
cmp
pop
or
adc
and
push
sub
add
add
sbb
add
add
insl
adc
xor
xor
inc
sub
inc
inc
sbb
dec
or
int3
jno
pop
or
add
fadds
rol
add
and
enter
sbb
rclb
inc
push
and
pusha
sub
xor
xchg
pop
or
addb
cmp
or
inc
inc
push
andl
lods
rcrb
add
or
add
or
add
subl
test
add
add
or
push
adc
test
add
or
rolb
add
mov
test
mov
add
add
mov
add
dec
or
bound
or
add
or
push
pop
add
xor
or
mov
cmp
subb
adc
rorl
xchg
add
nop
mov
inc
add
push
and
add
add
or
adc
dec
rclb
and
add
adc
or
sub
push
or
sbb
nop
xor
sub
and
adc
andb
or
orb
add
fs
add
and
rcrb
sbb
adc
or
add
or
mov
mov
add
or
adc
add
mov
lods
adc
and
adc
add
rclb
and
or
inc
addb
sbb
addb
sbb
add
movsb
push
adc
add
and
inc
push
cmp
inc
inc
orb
or
and
test
add
add
add
or
add
or
int
inc
add
inc
inc
or
and
xchg
add
or
add
and
adc
dec
add
add
inc
add
dec
inc
adc
add
add
inc
lods
and
add
das
ret
and
add
pop
push
or
pop
addl
addl
inc
or
adc
and
inc
dec
rcrl
roll
and
add
add
shlb
add
mov
inc
sbb
or
add
rcrl
and
and
add
cmp
or
adc
add
add
add
rolb
add
add
add
dec
add
push
push
jo
adc
adc
and
add
add
mov
addb
gs
inc
add
subb
add
push
add
inc
out
inc
or
and
and
jo
pop
adc
pusha
adc
adc
dec
adc
xchg
and
and
and
sub
mov
add
adc
or
inc
and
addb
pop
adc
add
add
add
add
pop
and
inc
adc
push
add
xor
inc
add
add
adc
ret
and
xchg
add
adc
adc
cwtl
mov
mov
or
mov
and
push
and
add
dec
inc
add
adc
adc
pop
jo
sbb
mov
imul
nop
xor
sbb
test
and
add
add
xor
dec
arpl
test
rolb
cwtl
add
add
add
addb
add
mov
push
xchg
add
xchg
jmp
inc
or
dec
xchg
mov
add
or
push
and
inc
inc
nop
add
add
adc
adc
test
and
inc
mov
add
pusha
test
orb
push
and
orb
adc
and
sub
add
adc
nop
sub
add
cmp
add
dec
sbb
push
sbb
cwtl
inc
sbb
push
or
adc
lds
clc
dec
add
movsl
shlb
xchg
loopne
or
adc
push
add
sbb
inc
inc
push
inc
add
pop
and
cld
ret
or
jo
sbb
inc
inc
dec
inc
add
test
adc
mov
pop
nop
or
add
push
add
inc
or
xchg
mov
adc
add
adc
add
addb
add
xor
and
and
add
sub
add
add
mov
add
add
rcrl
add
add
push
ret
sbb
add
shll
adc
add
and
lds
mov
and
and
mov
add
or
inc
or
or
add
or
add
inc
xchg
dec
test
test
orl
add
sub
dec
add
adc
sbbb
or
mov
pop
add
add
adc
adcb
add
roll
or
or
add
movsl
jo
add
or
add
adc
add
or
inc
addb
push
test
and
jb
add
xor
add
add
adc
inc
and
add
xchg
add
add
addb
addb
inc
sub
out
or
nop
movsl
or
adc
add
add
xor
mov
mov
lods
add
push
and
add
mov
and
into
or
inc
and
adc
sbbb
add
adc
das
add
and
orb
pop
and
loopne
dec
jno
add
adc
add
fsub
test
add
and
xchg
inc
jge
inc
add
mov
adc
xor
push
mov
imul
dec
cmp
add
mov
addl
add
push
and
mov
dec
adc
andl
add
xchg
add
add
and
or
addb
xchg
sub
adc
and
dec
mov
fs
and
adc
enter
sub
sub
add
add
adc
add
and
dec
inc
or
add
or
movb
popa
xchg
wrmsr
inc
xchg
add
mov
cmp
mov
and
adc
add
addl
push
inc
pop
or
xchg
cmpb
inc
add
lahf
add
sbb
mov
inc
add
addb
or
outsl
dec
xor
rorl
or
inc
xor
push
add
nop
add
xor
or
les
push
cmpb
imul
inc
or
or
adcb
xor
and
inc
orb
xor
adc
push
bound
adc
or
call
inc
xor
add
add
orb
sub
inc
push
add
adc
dec
call
add
inc
push
add
adc
inc
inc
add
add
push
stos
and
and
dec
or
and
push
lods
add
adc
addl
add
add
inc
and
sbb
adc
test
add
addb
sbb
mov
add
inc
insb
add
add
inc
lcall
add
inc
sub
inc
iret
and
add
add
rolb
add
add
and
add
jo
add
xor
add
xor
int3
inc
add
or
add
sub
ret
inc
or
sbb
inc
fadds
add
add
adc
adc
orb
add
add
mov
inc
add
or
add
and
and
addb
add
xchg
inc
les
add
or
cltd
push
adc
mov
add
add
adc
adc
or
dec
aam
inc
inc
sbb
adc
xchg
add
add
xor
inc
xchg
adc
addb
sbb
add
adc
lea
add
pop
inc
inc
adc
add
add
add
sbb
add
addb
sub
mov
ljmp
sbb
and
or
inc
inc
push
inc
adc
add
mov
add
sub
inc
inc
or
js
add
and
add
adc
push
xor
xchg
inc
mov
add
and
repnz
add
inc
push
cwtl
and
pop
inc
fwait
add
xchg
inc
and
sub
add
and
adc
test
pop
sbb
pop
push
cwtl
sbb
add
inc
sbb
data16
mov
addb
inc
or
add
cmp
adc
icebp
and
sbbb
mov
add
push
add
xchg
add
mov
xchg
pop
xor
add
adc
pop
add
add
add
test
rorb
add
mov
push
xor
add
bound
adc
push
add
push
adc
inc
add
or
push
or
lods
push
loope
cmp
add
xchg
add
add
and
add
add
add
data16
add
push
add
dec
add
add
call
add
or
inc
add
adc
mov
jp
add
sub
add
and
inc
and
or
pop
adc
and
call
xorl
cwtl
addb
addb
adc
or
and
pop
popa
inc
enter
inc
add
inc
adc
test
cmpsb
dec
and
rcrb
add
or
mov
add
adc
test
push
rolb
test
pusha
sbb
inc
adc
mov
xor
addb
add
push
add
popa
push
add
inc
sbb
sbbl
add
enter
push
adc
inc
add
rolb
add
mov
or
or
add
addb
add
add
add
push
pop
and
or
addb
and
push
je
inc
sub
xor
rclb
and
add
or
adc
add
add
inc
push
adcb
dec
and
or
add
and
push
or
or
faddl
inc
and
and
jecxz
cwtl
cmp
add
add
nop
add
nop
add
andb
adc
or
inc
and
and
inc
inc
nop
or
addl
add
cmp
add
rolb
add
xor
inc
orb
xor
xchg
add
add
or
inc
inc
pusha
pop
adc
or
jo
sub
adc
add
rolb
add
movsb
inc
push
add
add
sub
add
dec
addb
mov
bound
rolb
xchg
sub
add
and
xor
fmuls
adc
push
ss
pusha
or
adc
push
and
sub
add
addb
inc
push
adcb
cmp
xor
adc
add
dec
int3
add
loopne
fwait
dec
inc
or
add
and
add
add
inc
sbb
add
xor
rolb
add
enter
and
pop
addl
add
cmp
addl
popa
adc
pop
shll
and
imul
pusha
add
movsl
nop
cwtl
or
and
nop
add
mov
stos
sub
adc
and
and
add
and
add
cwtl
and
test
add
add
add
test
add
xchg
dec
inc
gs
in
or
inc
addb
adc
push
xor
push
push
pop
adc
add
addb
sbb
or
inc
cmpb
add
add
inc
les
xchg
add
adc
add
push
add
fadds
or
and
xchg
and
and
jb
dec
sbb
shlb
pusha
and
and
push
or
rol
adc
add
and
orb
adc
add
shrb
js
add
xor
sbb
or
add
jp
adc
adc
adc
xchg
and
xchg
and
jo
add
test
inc
rolb
add
and
leave
mov
add
pusha
and
inc
inc
inc
lret
adc
and
sbb
cmp
push
adc
jne
mov
dec
rorl
dec
les
add
inc
add
add
add
or
sbb
inc
add
add
data16
and
adc
add
nop
bound
add
dec
add
dec
add
add
xorl
sub
inc
mov
or
xor
adc
mov
add
lock
mov
rolb
cmp
rolb
push
adc
add
add
adc
or
and
add
inc
inc
addb
inc
push
push
add
sub
dec
xor
add
or
or
or
xor
dec
add
sub
sbb
inc
push
pop
mov
dec
test
pop
xor
or
inc
or
or
add
add
or
mov
inc
add
add
adcb
or
addb
and
add
or
inc
or
push
add
nop
and
sarl
add
sbb
add
sbb
add
and
add
add
pop
movsb
add
add
sbb
and
adcb
movb
add
add
sbb
mov
inc
je
roll
add
and
add
or
inc
push
adcb
addl
add
push
ret
xchg
addb
lock
or
or
or
out
orb
sbb
lcall
add
adc
dec
movsb
or
inc
inc
dec
push
add
add
add
push
mov
adc
adc
roll
inc
dec
add
inc
or
adc
inc
and
pusha
andb
add
and
inc
add
cwtl
adcb
or
adc
add
xor
and
add
lods
add
add
and
add
mov
push
mov
add
add
inc
adc
sub
inc
add
nop
addb
addl
add
imul
inc
enter
inc
xor
and
add
and
addl
fwait
add
pop
inc
pusha
addb
mov
adc
jo
adc
add
test
test
imul
push
adc
rorb
xchg
mov
movsl
adc
sbb
or
add
mov
inc
add
ret
xor
nop
adc
adc
mov
add
adc
mov
add
addb
sub
pop
pop
add
mov
add
add
inc
addb
add
and
xor
add
bound
add
pop
pop
add
test
xor
sbb
mov
add
add
add
loopne
xchg
andb
add
pushf
and
addl
bound
or
and
add
bound
daa
and
pop
pop
xchg
nop
pop
add
mov
add
push
add
rolb
sub
sbb
and
sbb
and
xor
add
inc
sub
push
add
inc
addb
addb
and
add
mov
xor
sub
add
cmp
add
pop
add
xor
mov
and
add
add
add
add
push
add
mov
mov
add
jb
add
rclb
add
inc
mov
or
add
adcl
test
or
mov
xor
add
mov
add
add
and
adc
inc
inc
add
xor
adc
add
add
add
inc
addb
cmp
xor
xor
add
adc
and
addb
add
mov
dec
and
je
test
add
adc
push
push
sbb
inc
add
adc
inc
add
and
jns
mov
sub
jmp
faddl
inc
shlb
loope
or
movsb
dec
and
adc
addb
or
mov
sbb
adc
nop
or
add
push
adc
add
and
inc
add
addb
inc
add
adc
movsb
cltd
pop
add
add
add
inc
add
push
xorb
add
inc
add
jo
push
shll
rolb
and
or
push
nop
add
add
xchg
or
push
add
loop
adc
int
nop
or
adc
and
add
or
ror
pusha
pusha
or
and
or
add
xchg
xor
xor
pusha
inc
add
push
add
and
and
push
add
test
sbb
or
push
inc
add
push
push
adc
add
aaa
or
add
shlb
jo
inc
dec
add
sub
bound
add
adc
inc
cmp
xor
rclb
or
orb
inc
add
test
pop
add
orl
and
mov
addl
add
inc
add
or
addb
sub
push
or
adc
bound
adc
sub
add
add
add
mov
adcb
inc
add
pusha
popa
pop
adc
and
or
or
cmp
inc
dec
add
adcb
cwtl
adc
daa
mov
add
add
enter
and
sbb
add
add
dec
cmp
or
dec
add
add
xorb
or
xchg
sbb
rorb
add
mov
adc
add
inc
adc
add
xchg
bound
cs
inc
or
add
and
add
orb
xor
push
push
addb
inc
sbb
adc
and
or
ret
add
rolb
cmp
or
adc
enter
add
pusha
sub
inc
and
inc
lds
pusha
addb
xchg
sbb
imul
add
andl
add
add
add
daa
add
and
addb
add
dec
push
movsl
test
jo
inc
mov
push
addb
orb
inc
mov
add
add
or
dec
add
mov
test
or
xchg
add
add
subb
adc
xor
sub
adc
push
inc
xor
add
adc
addb
inc
or
add
sub
adc
add
add
adcb
inc
and
add
push
and
push
add
cmp
or
add
push
mov
sbb
enter
inc
add
and
xor
daa
sub
nop
and
add
and
adc
mov
lcall
dec
xchg
test
and
add
lcall
add
and
stos
push
and
add
add
add
movsb
dec
add
and
mov
add
imul
shlb
sbbb
dec
and
adc
sbbb
and
or
xor
adc
add
and
addl
or
andb
or
lret
sbb
add
xchg
adcl
rolb
dec
add
or
sbb
dec
aam
and
inc
add
js
add
adc
addb
movsb
sub
xchg
or
mov
test
xor
or
hlt
add
adc
and
add
cltd
push
addb
orb
add
icebp
adc
push
and
dec
add
pusha
addl
add
inc
movsb
add
push
xor
and
or
inc
lds
add
add
mov
add
sbb
inc
inc
push
or
sbb
es
add
adc
add
inc
and
adc
push
inc
inc
or
andb
add
xchg
inc
pusha
inc
add
add
andb
jns
cwtl
pop
inc
add
test
add
popa
dec
or
or
add
add
add
cmp
lea
addb
push
mov
popa
inc
add
rorb
rolb
inc
dec
inc
imul
sbbb
orb
add
add
add
addl
sbb
adc
add
add
dec
lret
sub
add
test
add
or
or
add
xchg
cwtl
pop
add
or
pusha
inc
inc
xor
adc
mov
xor
push
add
adc
gs
sub
or
jno
adc
inc
inc
inc
ds
and
inc
add
or
or
or
add
andb
mov
add
mov
add
adc
add
pop
or
rcll
dec
add
inc
and
mov
inc
or
add
add
orb
add
insb
shlb
and
add
add
or
or
push
adc
and
add
or
or
or
subb
sbb
push
adc
sbb
add
add
add
or
or
or
adcb
add
cmp
add
adc
push
movb
sub
orl
mov
adc
mov
add
add
push
add
add
and
andb
es
daa
push
adc
push
stos
xor
add
addb
mov
adc
mov
add
and
add
dec
rolb
add
je
pusha
add
add
inc
add
or
inc
sbb
fiaddl
arpl
or
add
inc
push
or
add
mov
nop
or
add
mov
add
mov
add
add
andb
add
push
popa
popa
or
test
and
and
add
or
inc
sbb
push
add
add
lcall
pop
and
pop
mov
and
add
sub
add
or
add
test
pusha
add
push
and
and
nop
mov
add
es
xchg
stos
push
add
inc
ljmp
dec
adcb
push
sub
inc
test
adc
or
and
call
js
add
pusha
add
rorl
adc
inc
add
inc
add
add
mov
sbb
or
add
inc
dec
and
pop
adc
push
or
adc
adcl
adc
add
mov
add
inc
add
andb
dec
cmp
xchg
adc
inc
or
inc
pusha
nop
and
sbb
add
xor
and
pop
add
adc
fldenv
nop
inc
adc
and
add
andb
sub
and
add
add
rolb
add
adc
lds
inc
bound
add
add
sbb
add
and
adc
xor
inc
sub
and
pop
mov
xor
adc
push
add
mov
popa
rolb
add
add
adc
add
add
add
adc
add
mov
popa
inc
adcb
mov
inc
and
or
add
or
xor
addb
xor
add
dec
add
dec
add
sub
loopne
adc
add
inc
sbb
or
rcll
add
push
add
sbb
add
push
and
add
pusha
pusha
or
adc
sub
inc
mov
pop
sbbb
adc
xchg
mov
sub
popa
dec
and
nop
add
or
orl
and
sbbb
or
sub
bound
and
add
add
sbb
or
rolb
add
adc
adcl
orb
mov
or
push
adc
xor
adc
test
mov
sub
dec
and
add
and
inc
add
add
nop
adc
mov
add
inc
adc
sbb
and
or
or
add
inc
ret
or
inc
mov
add
push
pop
xor
add
mov
push
inc
add
add
inc
or
or
add
and
or
andb
or
inc
dec
sub
fildl
dec
stos
add
push
adc
test
test
and
push
jmp
inc
add
push
add
add
mov
addb
adc
add
or
or
add
add
inc
rolb
or
inc
add
add
roll
addb
mov
imul
cmp
sbb
add
mov
addb
add
dec
xchg
or
nop
or
add
or
add
rclb
adc
adc
push
mov
add
ret
add
and
and
add
add
adc
add
and
and
mov
add
adcb
adc
push
mov
adc
nop
sbb
add
inc
and
inc
or
adc
subb
add
and
add
or
inc
xchg
mov
nop
adc
inc
inc
add
and
add
xchg
and
and
xchg
mov
test
orl
add
push
push
test
and
adc
add
adc
pop
adc
push
add
and
and
addb
inc
add
inc
and
mov
push
add
xor
sbb
sub
addb
adc
jo
add
adc
add
add
inc
inc
or
or
add
inc
lret
lea
adc
and
sbbb
pop
or
add
add
adc
shll
es
adc
mov
inc
or
and
push
add
or
add
add
xor
add
and
js
add
adc
add
js
add
andb
inc
sub
inc
inc
and
fldenv
jb
add
dec
or
or
add
push
add
xchg
or
add
add
and
and
adc
inc
gs
add
popl
add
mov
adc
inc
loopne
addb
inc
or
adc
xchg
add
xor
push
or
add
or
stos
daa
push
rclb
add
and
pop
jecxz
and
add
adc
adc
add
push
push
and
cmp
push
push
adc
or
or
and
and
mov
inc
sbb
inc
sbb
adc
subb
dec
or
add
in
add
add
inc
or
mov
mov
adc
inc
xchg
or
or
xchg
adcb
enter
and
sbb
add
ret
xchg
rcll
xchg
or
addb
add
push
jo
cmp
push
lds
pusha
into
add
dec
and
add
lds
popa
jo
add
xor
cmp
ror
addl
rclb
add
add
rcrl
lret
adc
and
gs
or
add
inc
or
jne
add
inc
push
add
or
add
and
push
and
xchg
push
rolb
mov
or
inc
inc
sahf
adc
orl
inc
sbb
add
add
or
rolb
add
mov
addb
add
adc
sbbb
adc
add
enter
mov
push
or
aad
and
and
rorb
add
or
sub
adc
dec
dec
add
inc
and
or
add
xchg
pusha
mov
inc
and
lods
jne
mov
add
adc
add
and
push
mov
add
push
adc
add
sub
inc
adc
or
loope
or
or
jle
inc
inc
sarl
data16
and
adc
orl
pop
jns
pop
or
popa
add
pop
adc
or
adc
lds
inc
and
or
js
adcb
pop
adc
pusha
xor
adc
mov
test
or
add
dec
adc
cwtl
push
jno
xchg
add
adc
fwait
and
mov
or
xorl
adc
dec
mov
sub
inc
or
or
inc
sub
adc
adc
add
xor
mov
and
mov
sbb
and
cmp
and
sub
subb
pop
or
sbb
movsl
adc
nop
mov
inc
and
adc
push
inc
addb
xchg
dec
inc
shlb
lret
push
add
ret
test
add
adc
push
pusha
xchg
add
inc
sbb
add
in
dec
adc
mov
and
add
nop
orb
add
inc
add
mov
add
add
push
and
test
or
add
adc
push
add
adc
push
sbbl
and
or
rorb
add
and
mov
or
or
add
sub
push
xor
adc
add
movsb
mov
insb
dec
inc
and
adcb
and
add
or
add
addb
and
dec
mov
push
add
pusha
pop
add
inc
add
orb
mov
add
and
in
inc
or
mov
adc
add
adc
sbb
or
add
adc
add
call
test
andl
adc
add
addb
mov
add
and
or
add
leave
adc
test
and
repnz
mov
addb
add
add
dec
or
inc
roll
popa
pushf
subb
inc
push
clc
add
dec
adc
push
adc
or
lcall
or
sbb
adc
or
inc
adc
or
dec
or
add
push
xor
dec
add
jae
inc
inc
or
or
inc
and
inc
add
mov
adc
mov
add
dec
sub
push
nop
add
addb
ret
aaa
add
adc
add
xchg
adc
add
or
lea
add
push
test
add
add
push
or
and
or
and
cmp
push
add
push
add
adc
add
adc
or
andb
adcb
bound
addb
mov
add
sbb
xor
add
addb
and
add
add
andb
and
adc
lock
push
push
nop
add
push
xchg
and
bound
adc
sbb
inc
mov
xchg
add
add
or
add
add
sub
pop
xor
sbb
and
add
add
daa
dec
bound
sbb
faddl
push
add
dec
add
or
mov
sub
sbb
or
inc
adc
add
addb
shll
adc
or
addb
adc
cwtl
add
sbb
inc
xor
or
sbb
adc
and
loope
and
mov
enter
or
andb
sub
and
adc
push
or
inc
add
cmpsb
mov
test
adc
add
adc
xchg
adc
adc
adc
sub
mov
push
pop
adc
add
add
inc
bound
add
and
inc
adc
pusha
mov
mov
inc
inc
add
add
and
inc
or
test
or
test
add
shll
push
add
add
adc
sub
add
add
adc
mov
adc
add
test
push
and
inc
inc
js
adc
cmp
and
push
dec
adc
push
dec
and
mov
add
push
adc
xchg
movsb
mov
adc
push
push
movsb
inc
and
xchg
mov
add
adc
mov
sub
inc
and
add
test
stos
or
adc
add
add
add
adc
push
and
add
add
sbb
nop
add
adc
inc
or
add
or
inc
addl
mov
mov
outsl
inc
inc
add
push
in
andb
test
xchg
sbb
add
inc
movsb
add
push
add
cmp
and
inc
add
add
add
in
addb
add
inc
adc
and
add
adc
add
adc
fs
add
add
adc
and
mov
add
inc
inc
pusha
and
add
sub
and
sbb
adc
add
enter
xchg
sub
add
or
add
inc
mov
and
add
inc
and
push
adc
push
sub
pop
inc
mov
add
inc
adc
inc
and
or
inc
inc
adc
inc
add
pop
addl
and
add
rolb
pop
rclb
xchg
add
movsb
push
add
pusha
dec
andb
or
dec
adc
xchg
loope
push
mov
and
add
pusha
lods
adc
or
sub
adc
inc
and
sbb
or
and
add
add
cwtl
inc
leave
mov
cld
inc
add
or
inc
adc
add
inc
or
sub
ret
andb
add
adc
and
orl
or
inc
loope
and
adc
add
sbbb
add
adcb
sbbb
add
or
lock
loop
ret
adc
adc
or
dec
add
mov
add
and
add
add
clc
add
inc
push
nop
add
addb
loop
dec
lret
pop
add
add
add
add
and
or
and
or
adc
add
test
lds
and
adc
push
adc
push
add
add
xor
pusha
adc
add
add
adc
add
xor
int3
add
dec
bound
dec
adc
sbb
adc
xchg
inc
add
adc
xor
add
mov
and
adc
inc
adc
or
or
dec
popa
stc
inc
add
add
and
push
or
add
add
mov
push
pusha
inc
add
nop
adc
add
adc
and
or
ja
shrl
test
pusha
and
adc
sbb
and
xor
or
dec
arpl
add
test
lar
adc
add
and
add
mov
add
add
addb
gs
inc
subl
sub
and
cwtl
xchg
leave
or
cs
dec
adc
inc
sbb
or
sbbb
test
adc
stos
addb
and
pop
add
push
arpl
inc
sub
pop
add
es
add
push
sbb
pusha
pop
add
add
add
and
add
inc
add
andb
jno
rolb
inc
ret
adc
add
add
inc
mov
or
test
add
and
adc
add
inc
nop
or
add
add
add
mov
push
add
add
enter
pop
add
sub
jo
mov
imul
add
and
cltd
adcl
sbb
and
adc
sbb
lds
test
add
enter
test
push
or
add
lock
adc
inc
add
add
add
add
inc
adc
add
test
add
adc
pusha
adcb
add
or
cmp
sbb
inc
add
push
mov
push
mov
mov
es
data16
sbb
add
inc
addl
add
subb
inc
add
add
add
inc
push
or
add
add
add
mov
and
daa
adc
jecxz
into
add
jo
add
add
andb
and
dec
add
add
add
sub
xor
cmpb
adc
add
inc
and
les
push
mov
adc
lret
add
add
or
add
add
add
inc
add
xchg
add
and
add
pusha
or
add
nop
shlb
adcb
mov
sbb
adc
adc
test
add
add
mov
sub
xchg
mov
or
into
adc
cmpsb
xchg
xor
adc
adc
and
nop
inc
pop
and
inc
and
cmp
pop
addb
xchg
add
and
xchg
push
addb
inc
nop
xchg
andb
inc
das
add
rolb
add
or
pusha
adc
add
add
jno
mov
mov
or
and
push
inc
enter
lret
dec
sbb
arpl
sub
xchg
or
inc
inc
and
dec
and
adc
sub
add
inc
adc
inc
lds
mov
push
es
rolb
add
add
pop
dec
dec
push
mov
fcoms
mov
push
addb
sbb
adc
test
add
or
or
add
and
add
mov
inc
and
cs
or
add
fstps
and
sbb
or
or
or
andb
push
mov
add
mov
dec
and
dec
add
loop
or
loopne
adc
test
dec
xorb
add
sub
and
mov
inc
add
addl
dec
inc
push
or
add
and
xchg
push
sbb
inc
adc
push
add
lods
dec
or
and
add
add
adc
mov
inc
xchg
inc
add
jbe
adc
xor
cmp
sbb
and
test
add
shrb
sub
inc
and
xor
push
or
test
cwtl
mov
xor
and
add
js
xchg
add
add
inc
pop
ret
andb
mov
add
orb
add
ret
mov
adc
orl
add
or
sub
add
add
inc
push
and
mov
inc
add
or
adc
inc
adc
dec
mov
inc
add
add
or
xchg
and
sbb
or
mov
shrb
or
adc
or
xor
arpl
and
sub
add
and
add
inc
jb
jo
rol
add
orl
xor
inc
inc
adcb
push
adc
sub
xor
inc
adc
add
or
add
and
sub
add
mov
xchg
xchg
xchg
les
or
adc
add
dec
add
and
or
adc
or
adc
dec
mov
aam
xor
inc
and
scas
dec
add
add
dec
lret
push
inc
pusha
and
adc
cwtl
add
adc
and
sub
cwtl
add
or
loopne
cwtl
add
add
ret
push
nop
add
push
mov
mov
cmp
inc
addl
and
shlb
add
dec
push
pushf
mov
arpl
xor
xchg
push
add
add
sub
add
adc
add
mov
adc
xor
add
dec
pusha
add
push
addb
add
loop
or
mov
or
add
add
add
add
add
dec
add
mov
add
xchg
add
or
inc
or
dec
xor
sbb
or
add
sub
adc
add
adc
mov
and
or
push
push
inc
add
int3
test
add
add
push
cmp
add
dec
mov
inc
nop
adc
inc
rclb
add
xchg
xor
or
cmp
orb
dec
sub
dec
and
add
add
add
and
cwtl
sbb
add
rclb
or
sub
add
add
movsl
jb
sub
popa
push
add
inc
or
cwtl
add
and
jo
inc
add
add
push
adcb
mov
add
adc
mov
add
adc
adc
and
pop
add
mov
ret
xchg
inc
inc
and
cmpsb
sbb
bound
add
adc
bound
pusha
mov
add
add
add
inc
add
add
inc
add
and
add
push
sub
xchg
add
and
add
push
orb
adc
sbb
mov
addb
or
lock
push
add
mov
es
insb
add
xorb
push
pusha
add
dec
mov
addb
add
add
mov
add
sbb
scas
addb
or
inc
adc
sub
add
or
and
clc
enter
add
add
sbb
pop
sub
or
mov
push
mov
add
ret
sub
popa
adcb
cmp
roll
add
adc
orb
popf
or
add
push
or
add
inc
sbb
or
jno
push
or
and
push
addl
adcb
inc
inc
xorb
ret
addb
adc
and
add
adc
mov
mov
mov
adc
mov
add
pop
pushf
popa
mov
xchg
inc
add
call
add
adcl
adc
or
add
or
or
and
mov
xor
and
les
dec
push
add
inc
addl
add
or
pusha
add
mov
xor
inc
sub
adc
and
add
sbb
dec
add
cmp
add
and
and
or
addb
lds
sbb
cwtl
mov
test
and
adc
inc
pushf
fs
or
or
sbb
mov
add
adc
or
addb
add
roll
add
test
or
jnp
inc
sbb
add
add
inc
sub
mov
inc
inc
dec
add
adc
sub
adc
add
fwait
add
add
pusha
add
add
adc
and
inc
test
add
nop
pop
les
nop
add
orb
add
add
xchg
or
or
add
xor
add
or
adc
mov
add
call
adc
or
xor
inc
push
nop
push
add
adc
arpl
or
and
subb
adc
push
mov
jbe
push
add
andb
cltd
adc
and
inc
adc
add
shlb
nop
and
push
push
add
push
or
add
shlb
in
movsb
inc
and
jno
add
inc
rclb
add
and
inc
test
add
andl
and
adc
add
sbb
add
and
in
mov
movsb
and
sub
adc
or
add
or
addl
add
add
adc
add
adc
add
pusha
and
or
add
adc
nop
add
add
mov
add
xor
adc
mov
mov
add
or
inc
daa
and
test
mov
or
or
add
xchg
jo
or
add
add
and
stos
xchg
adc
sub
and
nop
inc
add
xchg
mov
xchg
push
loope
and
enter
adc
inc
add
adc
adc
test
or
push
add
or
xchg
and
add
adc
orl
xchg
dec
addb
or
test
push
pop
add
dec
and
inc
xor
ret
add
and
add
push
push
push
adc
inc
push
add
add
loopne
adc
call
and
orb
and
cmpsb
add
daa
addb
push
add
mov
cmpb
nop
add
add
test
adc
add
dec
add
mov
mov
add
inc
and
inc
and
sub
add
dec
adc
push
add
pop
inc
or
mov
add
and
mov
add
addb
add
inc
addb
je
inc
push
add
add
adc
add
push
push
bound
mov
add
or
inc
add
cmp
inc
sbb
add
jno
jno
add
and
inc
out
add
adc
add
sbb
addb
scas
adc
inc
add
push
adc
xor
or
sbb
adc
inc
add
add
add
enter
and
inc
mov
or
ja
pusha
add
cwtl
or
std
test
test
or
xor
and
dec
push
movsb
shlb
and
inc
pusha
add
add
rolb
push
xor
or
shll
pusha
or
pop
inc
and
push
push
pop
inc
adc
push
dec
xchg
mov
mov
fmuls
add
add
xchg
inc
inc
add
add
add
add
inc
addb
sub
xchg
nop
adc
add
dec
or
mov
push
dec
inc
and
xchg
sbb
add
add
mov
or
add
or
and
xchg
inc
dec
xchg
inc
or
rolb
cmp
adc
test
and
and
test
add
or
add
or
add
xchg
add
add
add
dec
adc
pusha
adc
and
addl
addb
popl
nop
or
and
mov
test
or
orb
add
adc
imul
inc
addl
add
add
xor
inc
mov
add
adc
adc
addb
and
xor
dec
dec
shlb
add
add
xor
push
test
sbb
inc
sub
and
adc
sbb
cwtl
add
subl
xor
dec
pusha
add
add
dec
adc
inc
leave
inc
sub
rolb
add
sub
leave
adc
sub
sbb
or
add
nop
adc
mov
cmp
add
test
loope
adc
add
add
or
and
popa
add
adc
pusha
push
add
nop
rcrl
add
cmp
sbb
ret
pusha
addb
sbb
add
add
or
inc
adc
adc
or
rorb
mov
or
dec
addb
shrl
addl
popa
and
xorb
add
add
add
add
add
add
xchg
adc
addb
test
test
mov
add
and
daa
or
inc
add
test
push
add
inc
pusha
adc
inc
sbbb
or
add
test
adc
add
and
adc
or
inc
movsl
adc
sbb
or
add
xchg
mov
xor
add
nop
dec
adc
and
add
inc
inc
and
or
jecxz
call
js
addb
inc
and
adc
inc
or
or
and
roll
pop
sbb
mov
mov
push
adc
add
push
addb
movsl
and
test
mov
stos
inc
inc
inc
add
and
push
push
add
test
push
hlt
insb
shlb
addl
test
addb
addl
add
rolb
xor
addl
and
or
mov
aam
xchg
pushf
ljmp
push
and
inc
add
adc
adc
add
sub
add
mov
addb
pusha
and
jmp
add
push
or
adc
addl
roll
inc
inc
mov
adc
orb
orl
mov
lock
les
add
inc
or
xorl
push
or
mov
dec
and
add
test
mov
add
adc
sbb
inc
add
add
and
xchg
nop
andb
mov
mov
test
adc
sbb
or
add
inc
add
inc
inc
mov
add
inc
xor
adcb
add
test
add
mov
add
roll
add
add
inc
and
adc
add
add
mov
xchg
dec
dec
or
add
or
add
rolb
add
dec
movsb
add
or
adc
adc
adc
inc
and
or
inc
or
sbb
and
shll
add
mov
sbb
push
rorb
les
xlat
inc
adc
add
inc
xchg
or
xchg
adc
inc
or
and
inc
test
nop
loop
test
add
add
add
push
or
leave
or
inc
or
mov
xorb
sub
inc
push
inc
add
addb
sbb
lods
or
addb
sub
adcb
or
shl
or
add
adc
add
js
or
ljmp
cmp
or
add
sbb
addl
and
pop
pusha
add
push
adc
adcb
adc
add
subl
loopne
add
add
adc
mov
xchg
or
test
or
add
pop
addl
add
inc
add
push
add
push
adc
nop
and
dec
add
mov
rolb
cmp
or
addb
inc
dec
inc
mov
adc
dec
mov
addb
sbb
inc
add
pop
and
addb
popa
pushf
add
dec
or
add
jo
push
adc
mov
xor
add
cltd
and
add
inc
adcb
add
or
add
cmp
or
adc
mov
push
sbbb
adc
dec
adcl
shlb
xor
pop
addb
add
sbb
xchg
mov
addb
add
add
add
or
test
add
dec
add
test
enter
and
and
out
push
lods
inc
movsl
xorb
insl
subb
or
inc
add
and
bound
inc
add
push
inc
inc
add
or
pop
test
inc
adc
push
add
and
add
cltd
or
inc
addl
add
add
inc
add
and
add
add
addb
add
pop
xor
add
cmpsl
orb
in
movsl
inc
xchg
mov
dec
add
pop
cmp
adc
add
adc
or
sbb
inc
add
mov
test
push
and
sbb
inc
dec
test
popf
or
rclb
cltd
add
add
or
or
add
pusha
push
add
add
inc
add
cmp
sbb
add
inc
xchg
pop
inc
movsb
add
addb
mov
sbb
test
dec
add
sub
add
mov
mov
and
add
movsb
or
add
mov
pop
xor
add
xchg
pop
xchg
sbb
inc
addl
and
add
sbb
add
xchg
or
and
pusha
mov
cmp
and
add
mov
orb
xchg
add
xor
daa
mov
xchg
dec
subb
adc
and
mov
push
and
add
adcb
xchg
or
sbb
inc
add
ret
xor
and
and
addb
fimull
insl
rolb
or
pusha
cmp
cltd
adc
or
add
mov
test
or
add
orl
push
adc
add
xor
cmp
dec
sub
shrb
add
fs
add
adc
call
dec
pusha
mov
add
daa
add
push
mov
sbb
or
sbbl
je
sbb
mov
es
test
sbb
add
inc
or
or
or
sbb
dec
inc
or
adc
add
or
rclb
or
das
or
inc
pop
xor
add
inc
xor
add
rorb
add
mov
popa
inc
pusha
inc
test
stos
sbbb
pusha
add
inc
sub
add
ret
inc
xor
add
sbb
xchg
inc
nop
or
inc
nop
addb
inc
add
inc
and
and
xchg
and
or
add
add
in
inc
inc
test
add
addl
dec
add
xor
sbb
push
andb
cltd
addb
adc
and
mov
enter
add
addb
adc
add
adc
and
adc
pusha
add
add
nop
or
add
add
add
inc
xchg
adc
addb
movb
adc
add
adc
add
add
inc
lds
or
and
adc
push
or
add
xor
add
addb
mov
add
or
and
sub
add
add
add
add
sbb
xor
addb
cmp
add
add
xor
inc
add
and
mov
xchg
jae
or
inc
test
add
cmpsl
add
rolb
or
movsl
rorl
sbb
or
adc
add
add
adc
add
dec
xchg
or
mov
and
add
pop
adc
and
adc
adc
dec
add
sbbl
xor
add
or
addb
inc
add
inc
and
sbb
xor
add
shrb
adc
test
adc
ret
sub
sbb
xchg
and
and
mov
add
adc
sub
add
add
in
sub
mov
push
push
push
call
add
push
mov
mov
push
push
call
add
push
test
jne
mov
mov
push
push
push
call
add
mov
push
mov
add
mov
mov
mov
lea
push
call
add
cmp
jne
mov
test
jne
mov
mov
push
push
push
call
add
push
push
push
call
add
mov
mov
add
mov
mov
push
push
push
push
push
call
add
mov
push
call
add
push
push
push
push
call
add
push
push
push
push
call
add
push
push
push
push
call
add
cmp
jne
mov
mov
add
cmp
jne
push
push
push
push
call
add
push
push
push
call
add
mov
cmp
jne
mov
call
mov
mov
add
mov
mov
cmp
je
xor
mov
push
push
call
add
cmp
je
sub
mov
mov
push
push
push
call
add
push
push
push
push
push
call
add
push
push
call
add
mov
mov
push
push
push
push
push
call
add
push
push
push
push
push
call
add
mov
xor
call
mov
push
push
push
call
add
xor
mov
push
push
call
add
sub
mov
mov
cmp
jne
mov
sub
cmp
jne
xor
mov
mov
xor
mov
cmp
je
push
call
add
push
push
call
add
mov
test
je
push
push
push
call
add
mov
xor
push
push
call
add
push
call
add
mov
push
push
call
add
lea
mov
cmp
je
push
call
add
mov
push
mov
mov
and
mov
push
cmp
je
mov
add
push
push
call
add
xor
call
mov
call
mov
mov
mov
mov
mov
mov
shr
mov
cmp
je
add
mov
cmp
je
sub
cmp
jne
mov
cmp
jne
sub
mov
push
call
add
push
push
push
push
push
call
add
push
push
push
call
add
push
push
push
call
mov
mov
mov
push
push
push
push
push
call
add
mov
cmp
jne
xor
test
je
mov
mov
cmp
je
mov
add
mov
mov
mov
mov
sub
sub
mov
mov
mov
cmp
je
sub
cmp
je
mov
xor
mov
mov
pushl
push
pushl
call
cmp
je
push
push
push
push
call
add
addl
mov
mov
mov
or
mov
mov
mov
test
je
mov
add
mov
mov
call
add
push
call
add
push
call
add
mov
mov
push
push
push
push
push
call
add
mov
or
test
jne
push
push
push
push
call
add
mov
sub
push
push
push
push
push
call
add
mov
call
mov
mov
pop
mov
cmp
je
mov
pop
sub
cmp
jne
test
je
mov
mov
add
cmp
je
mov
mov
push
push
push
push
push
call
add
pop
cmp
jne
sub
push
push
push
push
call
add
leave
ret
mov
cmp
je
sub
cmp
je
mov
cmp
je
cmp
je
add
test
jne
call
mov
call
mov
push
push
push
push
call
add
mov
push
push
push
push
push
call
test
jne
push
push
push
call
add
push
push
push
call
mov
push
push
push
push
push
call
mov
mov
sub
mov
call
push
push
call
call
push
push
push
call
add
pop
add
mov
cmp
je
mov
mov
cmp
jne
xor
mov
mov
mov
push
push
call
add
pop
mov
pop
xor
cmp
jne
mov
xor
cmp
je
cmp
jne
xor
mov
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
push
call
add
push
add
mov
push
call
add
push
call
add
mov
push
mov
and
push
push
push
call
add
cmp
je
sub
cmp
je
push
push
push
call
add
movl
cmp
je
add
mov
push
push
push
call
add
call
mov
mov
mov
push
push
call
add
call
mov
cmp
jne
mov
cmp
jne
test
jne
mov
add
cmp
je
mov
mov
xor
mov
test
jne
test
jne
mov
mov
cmp
je
mov
push
push
call
add
mov
mov
call
mov
cmp
jne
mov
or
mov
mov
mov
mov
cmp
je
mov
mov
xor
mov
mov
mov
mov
add
mov
mov
mov
push
push
push
push
call
add
push
push
call
add
push
call
add
mov
or
je
mov
addl
mov
lea
sub
mov
inc
cmp
jne
mov
cmp
je
cmp
jne
mov
and
mov
mov
mov
mov
sub
cmp
jne
mov
xor
mov
cmp
jne
xor
test
je
cmp
je
mov
mov
sub
mov
sub
mov
cmp
jne
mov
add
mov
mov
cmp
jne
and
mov
call
push
call
add
cmp
je
cmp
je
xor
mov
mov
cmp
je
mov
mov
call
sub
xor
mov
cmp
je
call
mov
mov
cmp
je
cmp
je
xor
cmp
je
mov
mov
cmp
jne
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
push
push
call
add
push
push
push
push
call
add
pop
mov
cmp
jne
mov
mov
pop
mov
mov
add
push
push
push
call
add
pop
add
mov
cmp
jne
mov
mov
mov
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
add
push
push
push
push
push
push
call
add
push
mov
push
push
push
push
push
call
add
push
add
call
push
push
push
push
push
call
add
push
push
push
call
add
rdtsc
sub
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
add
sub
call
mov
mov
test
je
mov
cmp
je
mov
xor
cmp
je
mov
xor
cmp
je
mov
add
cmp
je
cmp
je
sub
mov
mov
push
push
push
call
add
call
mov
mov
push
push
push
push
call
add
cmp
jne
sub
mov
mov
mov
cmp
je
and
cmp
jne
push
push
call
add
mov
cmp
je
mov
mov
mov
push
push
push
push
call
add
mov
xor
mov
rdtsc
xor
mov
mov
mov
xor
mov
sub
mov
mov
cmp
je
cmp
je
sub
cmp
jne
cmp
je
mov
sub
mov
test
je
mov
mov
mov
mov
mov
mov
cmp
je
mov
xor
cmp
je
cmp
jne
cmp
je
mov
sub
cmp
je
cmp
jne
mov
mov
mov
mov
cmp
je
mov
sub
mov
mov
test
jne
xor
mov
mov
mov
mov
pop
cmp
je
mov
sub
mov
pop
mov
mov
mov
mov
mov
cmp
je
xor
mov
mov
mov
cmp
jne
mov
xor
cmp
jne
cmp
jne
add
mov
cmp
je
mov
mov
add
mov
mov
pop
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
call
add
push
mov
and
push
push
push
call
add
push
mov
mov
push
mov
push
call
add
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
cmp
jne
mov
cmp
je
or
mov
mov
decl
mov
mov
xor
cmp
je
mov
rorl
xor
mov
mov
mov
mov
subl
mov
add
and
mov
cmp
jne
mov
mov
mov
mov
mov
xor
cmp
jne
xor
mov
test
je
mov
or
mov
mov
mov
sub
cmp
je
mov
jmp
add
mov
mov
push
push
push
push
push
call
add
add
cmp
jne
cmp
je
mov
cmp
jne
mov
add
push
push
push
push
push
call
add
cmp
je
push
push
call
add
mov
add
mov
push
push
push
push
push
call
add
sub
mov
test
jne
mov
sub
cmp
je
mov
call
add
call
cmp
je
mov
mov
mov
push
call
add
mov
pop
mov
mov
pop
mov
cmp
je
sub
mov
push
push
push
call
add
pop
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
mov
mov
mov
cmpl
je
mov
mov
add
mov
mov
add
mov
jmp
mov
push
lea
push
call
lea
push
call
mov
mov
push
lea
push
call
lea
push
mov
push
call
mov
movl
mov
sub
mov
movl
mov
add
mov
movl
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
cmpl
je
movl
cmpl
jge
cmpl
jle
jmp
jmp
mov
mov
mov
movl
jmp
mov
add
mov
mov
mov
cmp
jae
mov
add
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
cmpl
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
je
mov
movzwl
mov
movzwl
cmp
jle
mov
mov
mov
cmpl
je
mov
test
je
mov
mov
mov
movsbl
cmp
jl
movsbl
cmp
jg
movsbl
add
mov
mov
mov
mov
movsbl
cmp
jl
movsbl
cmp
jg
movsbl
add
mov
movsbl
movsbl
cmp
je
jmp
movsbl
test
jne
mov
mov
jmp
mov
add
mov
mov
add
mov
jmp
mov
mov
mov
mov
cmp
jne
xor
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
cmpl
je
cmpl
je
cmpl
jbe
mov
movsbl
test
je
mov
mov
mov
mov
add
mov
mov
cmpl
je
mov
cmpl
je
mov
mov
mov
cmp
jae
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
ja
mov
mov
cmp
jb
mov
mov
mov
add
cmp
jae
mov
mov
sub
mov
mov
add
mov
jmp
jmp
movl
jmp
mov
add
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
add
mov
mov
movsbl
mov
movsbl
cmp
jne
mov
movsbl
test
jne
mov
mov
movzwl
mov
mov
add
mov
jmp
mov
add
mov
mov
add
mov
jmp
jmp
xor
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
cmpl
je
cmpl
je
mov
mov
mov
mov
mov
test
je
mov
mov
mov
mov
mov
mov
movzbl
movzbl
xor
mov
mov
mov
movsbl
sub
mov
mov
mov
movsbl
mov
movsbl
lea
mov
mov
mov
movsbl
test
jne
jmp
mov
add
mov
mov
add
mov
jmp
mov
sub
jmp
xor
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
call
add
push
cmp
jne
mov
mov
push
mov
push
and
cmp
jne
xor
mov
test
je
add
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
add
cmp
jne
mov
sub
push
call
add
push
push
push
call
add
cmp
je
cmp
je
mov
xor
push
call
add
pop
mov
push
push
push
push
call
add
pop
cmp
je
add
mov
mov
mov
push
push
push
push
push
call
add
pop
xor
cmp
jne
mov
xor
test
jne
or
mov
mov
mov
mov
test
je
sub
mov
mov
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
call
add
push
mov
mov
push
add
mov
cmp
jne
or
mov
cmp
jne
push
push
push
call
add
push
cmp
jne
push
push
push
push
call
add
mov
or
mov
push
call
add
cmp
je
push
push
push
push
push
call
add
mov
push
push
push
call
add
pop
mov
push
call
add
pop
add
mov
push
call
add
pop
cmp
jne
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
xor
mov
push
mov
push
add
mov
mov
add
push
call
add
mov
add
mov
push
push
call
add
push
push
call
add
push
push
push
push
call
add
pop
add
mov
cmp
jne
xor
push
push
push
push
call
add
push
call
add
mov
pop
add
cmp
je
cmp
jne
mov
xor
push
push
push
call
add
mov
push
push
push
push
push
call
add
cmp
je
mov
mov
push
push
push
push
push
call
add
pop
mov
cmp
je
mov
cmp
jne
add
mov
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
add
push
mov
cmp
je
mov
push
push
push
call
add
push
push
push
push
push
push
call
add
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
mov
mov
mov
test
je
call
pop
and
call
pop
mov
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
mov
push
xor
mov
mov
mov
push
sub
mov
mov
or
mov
mov
mov
add
mov
sub
mov
mov
mov
mov
pop
sub
mov
cmp
jne
mov
sub
mov
mov
pop
mov
pop
and
cmp
je
cmp
jne
mov
xor
mov
mov
cmp
jne
cmp
jne
mov
cmp
jne
cmp
jne
mov
sub
cmp
je
or
test
jne
mov
add
mov
cmp
jne
mov
cmp
jne
and
mov
mov
cmp
je
add
mov
cmp
jne
cmp
je
mov
mov
sub
cmp
je
xor
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
push
mov
push
mov
mov
mov
add
cmp
jne
cmp
je
mov
mov
mov
mov
sub
mov
mov
cmp
je
cmp
je
mov
sub
mov
cmp
je
mov
pop
mov
pop
add
mov
cmp
je
mov
pop
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
add
mov
mov
mov
push
mov
cmp
je
cmp
jne
mov
cmp
je
mov
and
mov
cmp
jne
xor
cmp
je
mov
and
mov
cmp
jne
mov
xor
mov
mov
push
mov
xor
mov
xor
cmp
je
mov
test
jne
mov
and
cmp
jne
cmp
jne
mov
add
mov
mov
mov
cmp
je
mov
mov
add
cmp
je
xor
mov
mov
cmp
jne
mov
add
cmp
jne
add
mov
cmp
jne
mov
mov
xor
mov
mov
cmp
je
mov
xor
mov
mov
mov
mov
mov
pop
sub
mov
mov
test
jne
mov
test
jne
mov
mov
cmp
je
mov
mov
cmp
je
cmp
jne
cmp
je
mov
sub
cmp
je
add
mov
mov
mov
mov
pop
mov
pop
xor
mov
mov
cmp
jne
cmp
jne
or
cmp
je
xor
cmp
je
mov
mov
test
je
add
mov
cmp
jne
cmp
je
mov
cmp
je
mov
add
mov
mov
mov
cmp
je
mov
cmp
je
add
cmp
je
mov
mov
cmp
jne
mov
and
mov
mov
leave
ret
add
adc
int
imul
aaa
sub
fsts
ss
adc
stos
push
popa
ljmp
ja
orl
cwtl
cmp
adc
pop
icebp
into
or
dec
shll
push
cmpsb
cmp
sbb
aaa
and
popl
xlat
xchg
push
or
sub
dec
aam
add
mov
loop
ret
addr16
rcrl
cmp
push
sti
sahf
mov
cmp
sbb
out
clc
mov
icebp
dec
scas
or
fstpt
xor
inc
cs
mov
push
sbb
out
xchg
mov
adc
sbb
pop
xor
js
sub
cmp
pushf
aam
xor
sti
mov
int3
stos
pusha
cli
lea
mov
cmp
mov
and
inc
stos
mov
pop
cmp
xor
loope
mov
pop
incl
adc
je
mov
mov
ds
jne
dec
jmp
int3
and
in
aaa
add
out
in
and
add
push
std
stc
sbb
mov
push
mov
jno
pop
cmp
loope
shl
jp
fildll
in
jmp
jns
insb
std
cmp
adc
sbb
mov
rcrl
xlat
mov
cmpsb
inc
popl
add
push
leave
inc
sub
pusha
movsb
loope
inc
arpl
mov
out
lods
jnp
loopne
subl
popa
es
push
or
in
test
inc
push
push
dec
sub
gs
cs
adc
or
xor
and
fcomip
sbb
arpl
dec
in
fsubl
cmp
and
cmp
gs
cmp
sub
fldz
jnp
cmp
andb
pop
aam
aas
mov
or
rclb
lds
movsb
push
imul
push
adc
pop
jne
fcompl
lahf
imul
iret
push
jbe
adc
mov
or
jnp
cpuid
add
nop
pop
mov
push
adc
and
fiaddl
shll
push
pop
jno
movsl
leave
push
out
repnz
or
jne
push
inc
in
movsb
sahf
hlt
arpl
sub
inc
dec
nop
lock
sub
imul
rcrb
cmp
aas
int
or
loop
mov
lods
ss
adc
imul
cmpsl
enter
push
dec
mov
ficomps
mov
xchg
dec
xchg
cwtl
in
and
lret
in
cmc
adc
iret
adc
mov
in
mov
mov
xlat
pop
in
push
shrb
mov
stc
cmpl
and
sbb
jne
inc
mov
loopne
scas
xor
fists
repnz
mov
and
mov
in
cmpsl
inc
adc
int
inc
push
lods
mov
cwtl
movsb
popa
and
sub
imul
sarl
int
negb
xchg
call
mov
stos
fcoms
mov
xlat
outsb
pushf
fdiv
cmp
sub
add
rcr
stos
andb
inc
sbb
inc
jns
movsl
repz
pop
outsl
daa
loopne
pop
cmp
mov
enter
or
popa
movsl
into
insb
push
sub
aad
mov
mov
sbbl
test
adc
mov
adc
popa
sub
test
or
adc
shrb
es
pop
add
xor
or
stos
prefetcht1
jnp
pop
add
cmp
cmc
cmp
cmpsb
inc
aaa
or
mov
popa
loop
into
ret
dec
xchg
pop
call
cmp
mov
or
fwait
inc
pop
cmp
sbb
hlt
and
lret
mov
in
pop
leave
shrl
adc
js
xchg
lock
adc
add
sbb
loope
aam
xchg
leave
cmp
leave
ss
and
and
sbb
mov
ror
or
in
and
in
cmpsl
sub
hlt
sub
push
jmp
rcll
cwtl
mov
add
enter
jns
mov
mov
adc
jecxz
push
pop
enter
div
push
ret
and
sbb
lcall
in
cmp
cmp
outsb
jo
push
add
pop
xchg
aaa
gs
jmp
or
push
mov
sbb
sub
pop
arpl
cmp
dec
loop
push
mov
fisubrl
movsl
mov
cmpsl
cmp
sbb
cmp
and
and
jge
out
xchg
and
jo
jmp
xorl
inc
mov
add
adc
sub
and
imul
fwait
je
je
es
or
out
test
lods
sub
add
in
outsl
ficompl
fs
pop
and
xchg
cmp
jg
push
or
xor
and
and
mov
mov
int3
and
or
adc
negb
fnstcw
sahf
jmp
out
jg
mov
mov
push
or
xor
in
enter
xchg
gs
and
sub
cmp
dec
cmc
cli
mov
or
inc
lods
aaa
mov
push
out
mov
xor
fcmovu
pop
nop
adc
arpl
out
shll
mov
xor
lret
popa
and
aam
mov
test
sbbb
pop
cli
push
push
orb
and
and
and
enter
repnz
aaa
push
ss
mov
push
arpl
or
or
int3
loope
mov
lcall
or
sahf
dec
roll
rolb
jge
pop
dec
and
jo
gs
push
stc
and
mov
pop
pop
push
imul
daa
xor
clc
je
popa
add
movsl
xchg
adc
pop
lret
adc
rolb
jno
xor
push
aad
out
bound
xchg
aaa
sbb
or
fsub
mov
cli
lret
movsb
jle
jp
inc
jns
mov
and
xor
sub
sbb
mov
loope
cltd
fists
addr16
dec
or
xchg
lret
clc
push
push
cltd
sbb
lods
shlb
xlat
add
loope
stos
push
mov
in
js
dec
push
or
int
mov
cmpl
je
movsl
sar
aaa
fstl
push
imul
je
pop
adc
fs
push
popa
aas
jnp
xchg
lcall
adc
ss
in
mov
mov
sahf
cmp
and
mov
jmp
insb
add
insl
ficoms
insl
sub
jb
popa
inc
mov
sbb
in
into
test
mov
cmp
and
out
dec
jg
mov
out
sub
dec
cmp
in
jae
inc
mov
add
jnp
add
outsb
mov
jle
jo
push
mov
and
xor
movsl
fiaddl
and
or
das
jecxz
fwait
idivl
pop
bound
loope
adc
add
dec
imul
inc
lea
les
jae
in
adc
aad
hlt
in
cmp
orb
nop
fmull
jo
stos
push
cli
xchg
dec
cs
mov
and
mov
divb
std
inc
loop
jb
sub
cmp
and
mov
inc
loop
fnstsw
or
cmp
sbb
add
ret
out
arpl
sub
adc
xor
jnp
subl
nop
lret
jne
xchg
push
rol
pop
adc
cmp
pusha
repnz
sahf
cmpsl
xor
pusha
push
jp
cmp
jnp
negl
sbb
subl
mov
sbb
test
movaps
cld
scas
xor
or
cmp
ja
jns
cltd
mov
cmp
mov
dec
push
inc
xlat
stc
jbe
or
fs
xchg
and
add
dec
les
outsl
xor
call
popa
ja
std
ljmp
cmp
lock
popa
pop
rcl
fdivp
sub
pusha
test
leave
xor
sti
push
fstl
xchg
popa
or
lds
lea
out
cmpsb
out
adc
rorl
out
sub
cmp
inc
lcall
or
dec
xlat
bound
mov
jo
add
popa
movsl
or
mov
daa
mov
xor
mov
jo
cmp
pop
mov
movsl
sub
jp
or
fstpt
dec
les
or
cli
lahf
mov
cltd
mov
ret
sub
sbb
jns
jp
test
cmp
fisubs
cmpsl
notb
fwait
in
and
jg
dec
push
ffree
xchg
faddl
xchg
lods
mov
je
popa
lds
out
and
xchg
sbb
leave
jns
test
jg
out
pop
mov
ss
gs
loope
fs
or
arpl
into
loop
and
mov
pop
enter
popf
enter
scas
adc
jmp
gs
mov
ret
je
pop
push
cli
adc
jno
loop
cmc
push
out
sbb
ret
out
leave
jmp
sbb
jnp
add
in
mov
cwtl
xchg
scas
add
push
daa
sbb
cltd
jns
or
das
gs
dec
data16
dec
or
in
xor
sub
sub
int
out
cwtl
icebp
popa
dec
es
jb
sub
daa
or
call
cmp
outsl
or
and
dec
int3
jno
xchg
out
xchg
outsl
pushf
jecxz
push
gs
jmp
dec
mov
in
repz
sub
inc
mov
cmpsb
hlt
ds
stc
cmp
mov
int3
stos
sahf
or
in
xchg
sub
mov
jnp
test
add
mov
notl
loop
jmp
jns
mov
push
sbb
xchg
cmp
add
in
and
fldl
cld
sbb
xor
mov
lret
cmp
pusha
jae
dec
nop
cs
mov
jmp
lds
cltd
inc
loope
cld
xchg
stos
fldenv
cmp
cmc
jge
jne
aad
jp
mov
clc
cmc
mov
sub
xchg
insl
pop
movsl
or
shrl
xchg
add
mov
aaa
sub
mov
inc
jecxz
xor
cli
xchg
mov
pushf
adc
dec
popa
out
or
lcall
jmp
mov
sbb
out
movsl
pop
adc
fcompl
mov
lahf
xchg
data16
jmp
mov
mov
rcr
mov
dec
les
push
and
push
nop
jne
cmp
dec
ret
sbbl
leave
lret
pop
mov
or
in
sub
and
jg
leave
fisubl
out
sar
cld
cmp
xor
add
dec
lea
pop
fs
or
sub
stos
imul
and
mov
divb
sub
icebp
lds
mov
in
sub
sbb
movsl
aam
sub
cwtl
and
mov
ficomps
dec
dec
fwait
cmp
push
rorl
xchg
push
out
and
xor
int3
mov
xor
pop
daa
adc
jmp
and
rcrl
push
pop
cs
jecxz
pop
or
scas
iret
sbb
loope
cmpsb
and
lds
icebp
sysret
jle
popf
out
mov
pop
inc
dec
loope
mov
inc
cli
loope
dec
es
fisubrs
push
in
mov
out
leave
adc
push
lcall
out
ret
jecxz
repz
fucom
xor
or
add
jecxz
mov
add
inc
repz
cmc
mov
mull
in
and
mov
cli
cltd
sub
imul
xchg
mov
popa
or
mov
sub
ds
and
call
mov
push
fldenv
push
mov
and
jg
xchg
nop
lret
xchg
sbb
int3
aas
sarb
movsl
fstl
add
pop
jmp
xor
icebp
stos
add
gs
lcall
mov
sub
imul
adc
imul
fnstcw
movsl
mov
xor
lea
sti
sbbl
add
arpl
data16
repnz
imul
movsl
mov
aas
lret
mov
xor
and
cmpsb
sbb
arpl
into
cmp
push
sbb
xchg
movl
adc
je
dec
mov
jl
loop
loop
pop
jae
inc
xlat
fucom
das
dec
lods
mov
adc
in
cmpsb
scas
cmp
xor
mov
loop
xchg
or
movsb
mov
add
mov
and
sbb
xchg
adc
in
adc
mov
fidivrs
sub
lahf
pop
loope
lcall
push
and
and
cmp
psubsw
flds
sub
std
mov
rorb
sti
add
cld
movsb
outsb
ds
arpl
pusha
cltd
jmp
daa
pop
int
and
cwtl
sahf
dec
jns
fildll
movsb
inc
enter
sbb
lds
push
jnp
fnstenv
loop
push
lock
mov
jge
daa
ljmp
jne
and
ret
jle
xlat
mov
ja
xchg
and
ret
sub
mov
pop
lret
mov
movsl
out
jno
adc
or
xchg
mov
inc
sub
push
mul
and
adc
test
jne
and
shll
cmp
and
sarb
enter
or
clc
ficoml
call
leave
pop
cwtl
push
test
scas
add
and
push
jl
inc
sbbb
sbb
adc
jnp
jns
dec
fsubrl
jo
test
jmp
aas
and
or
or
push
arpl
fsubrp
popa
mov
jbe
cmp
faddl
out
sub
ljmp
ret
xchg
cmp
mov
ss
pop
pop
jnp
push
lock
mov
int3
inc
test
pop
orl
inc
testl
mov
xor
inc
data16
inc
push
lret
mov
jecxz
xchg
or
and
stos
push
mov
cmc
mov
rcr
jmp
daa
mov
jo
xor
push
push
mov
cmp
inc
aas
sbb
lcall
addr16
xchg
shl
cli
jno
pusha
push
adc
js
pop
sbbl
adc
lods
cmc
ljmp
sarl
js
imul
arpl
cmp
mov
fldl
and
andb
pop
adc
sub
ja
cltd
aas
notb
sti
pop
pop
push
gs
dec
popf
lock
sti
ljmp
out
adc
lock
jmp
and
cmp
fs
sbb
iret
xchg
lea
inc
jecxz
in
lahf
push
sbb
dec
dec
js
add
mov
test
cmp
push
cli
and
adc
sbb
push
xchg
fwait
prefetcht2
mov
fisubl
test
mov
xchg
cmc
shll
inc
sub
ja
fs
ss
pop
bound
loopne
mov
gs
mov
aad
jo
xchg
ret
decl
lds
push
xchg
notb
in
and
and
mov
leave
sbb
pop
xlat
xor
mov
mov
push
dec
pxor
jmp
jmp
jge
test
jle
clc
jge
mov
jg
xchg
jmp
shll
in
addr16
arpl
sbb
cwtl
inc
xchg
cmp
mov
test
adc
and
outsl
andl
imul
and
and
sub
jb
jnp
or
sub
clc
pop
or
mov
mov
or
xorb
loopne
mov
jl
sarb
xor
popa
mov
push
sub
hlt
clc
aad
pop
add
outsb
fs
and
xchg
and
imul
imul
fmull
lods
fisttps
sub
js
jp
and
imul
cmp
imul
push
push
pop
sub
push
push
out
cli
out
lods
inc
push
jle
sub
ja
cs
add
jnp
sbb
fnsave
inc
sbb
jp
popa
push
aaa
inc
daa
les
or
push
sahf
jno
xchg
movsl
jns
loope
stc
divl
icebp
lea
and
sub
negb
ret
xchg
sbb
push
lds
sbb
push
push
push
vmovapd
cli
mov
adc
in
sbb
jmp
mov
or
adc
xchg
ss
out
loopne
mov
or
dec
mov
jno
and
in
ret
std
shl
clc
es
or
mov
cmp
pop
ret
loope
xor
dec
sub
xor
jb
pop
cmp
outsb
cmp
dec
das
hlt
jnp
sbb
xchg
lods
imul
adcl
daa
out
mov
hlt
mov
and
sti
cld
les
and
or
cld
jmp
jno
inc
jns
cmp
fisubl
loope
mov
adc
add
shrb
and
cmp
sti
lret
nop
popa
gs
sub
add
inc
xchg
rclb
dec
outsb
testb
repnz
fildl
sbb
pop
popa
fsubl
or
outsb
jecxz
push
pop
movsl
lods
leave
hlt
fstl
insl
adc
ret
leave
loope
xor
or
arpl
mov
addl
or
pop
cs
loop
jp
fistl
in
int
cmp
mov
cmpsl
mov
lret
cmp
jnp
hlt
jecxz
fsubs
xchg
pop
js
inc
shl
cmc
call
out
push
sti
gs
aam
jae
ljmp
or
lret
mov
and
mov
ja
test
jo
outsb
lret
in
and
inc
cs
jnp
movsl
dec
jp
cld
hlt
jbe
rcll
dec
or
adc
popf
push
and
xor
cmp
push
lods
mov
rorl
sub
out
mov
cmp
scas
push
leave
arpl
inc
and
popa
adc
imul
lock
js
mull
outsb
out
sbb
cmp
push
adc
push
add
cmp
enter
mov
jae
and
mov
and
lret
adc
leave
mov
mov
mov
jl
scas
loope
lcall
stc
loope
cmp
sbb
cwtl
xchg
mov
in
scas
enter
nop
sub
and
repnz
lods
lds
addr16
jmp
in
ds
pop
cmp
jb
ja
and
insl
pop
inc
cmp
and
jmp
sub
jmp
inc
jecxz
inc
sbb
leave
loope
cld
pop
fmuls
sub
xor
sahf
insl
cmp
add
add
cmp
shlb
mov
or
inc
sti
fldl
fwait
mov
aaa
out
int
sar
ljmp
xchg
dec
dec
out
add
xor
pop
or
jns
adc
lock
in
add
insb
push
and
in
and
jge
mov
or
leave
es
aam
orl
rcrl
cmp
dec
scas
xor
jge
jecxz
jb
jne
and
jmp
sub
mov
add
adc
and
in
nop
mov
push
pushf
xchg
lret
insb
xor
sub
jae
cwtl
sub
jns
xor
and
jmp
xchg
push
add
and
inc
sahf
daa
test
jg
xchg
mov
mov
arpl
sub
pop
inc
dec
cmp
and
scas
int3
cli
int
test
andb
das
xchg
test
icebp
lret
cmp
test
inc
sub
repnz
mov
iret
jge
in
mov
test
cmp
movsl
jle
jnp
dec
inc
cmp
popa
ret
push
adc
daa
and
out
outsb
in
add
iret
jmp
pop
sbb
andb
popf
sbb
call
inc
jle
mov
fidivrl
lock
xor
sbb
jp
cs
call
inc
ss
not
add
push
jge
decb
pusha
push
lea
scas
iret
iret
cmp
sub
mov
or
xlat
mov
cmp
and
dec
or
cmp
inc
mul
fisubrl
inc
push
lods
aaa
lret
out
push
cmp
loop
imul
cmp
mov
pop
add
add
push
and
sub
xor
shl
rcll
sbb
xor
movsl
outsl
inc
loop
rolb
sti
pop
jl
fdivrs
xor
in
and
push
inc
add
pop
cmp
jae
dec
lret
cmp
and
and
mov
dec
jne
adc
inc
dec
or
add
lods
push
stos
int3
jb
movsl
and
add
dec
mov
inc
hlt
and
add
inc
je
pop
and
sbb
test
xchg
adc
and
scas
cmp
loope
inc
dec
ljmp
push
fs
lahf
rcrl
popa
jb
fidivl
xor
mov
add
stc
test
mov
les
jle
xchg
sbb
jnp
mov
xchg
mov
adc
push
les
popf
shlb
jo
fs
cmp
stc
fldt
mov
adc
or
adc
jmp
xchg
sti
movsb
mov
jae
mov
or
fistpl
sub
call
inc
iret
mov
pop
stos
mov
and
or
mov
out
bound
or
push
arpl
inc
jnp
shll
lcall
aaa
cmc
jge
js
imul
dec
push
sti
bound
xor
movsl
mov
xchg
pop
mov
adc
imul
sub
sarb
and
pop
sub
sub
sahf
sarl
add
out
push
dec
adcb
mov
and
mov
add
lret
mov
xor
dec
mov
inc
jp
mov
fmull
push
push
outsb
lret
and
push
sub
icebp
in
dec
scas
jmp
scas
aas
js
dec
mov
adc
ljmp
cmp
pop
mov
jno
mov
or
add
rcrl
shll
dec
sbb
sub
je
cmp
jecxz
cmpsl
pop
movsb
mov
sub
popf
xorb
mov
push
loop
les
cmp
xchg
or
sub
shlb
adc
and
mov
mov
and
hlt
push
add
add
enter
popa
jne
sbbb
lds
xchg
push
jecxz
imul
add
sahf
in
ret
push
and
jmp
movsl
ljmp
sbb
mov
out
ss
sti
jg
stc
ljmp
gs
jne
pop
scas
aaa
push
cmp
lods
mov
andb
jle
in
xor
gs
pop
sub
lea
clc
loope
lds
lods
fwait
lods
mov
js
je
or
xor
mov
test
mov
push
movsl
jae
inc
clc
push
mov
popf
pop
ret
dec
mov
stos
aas
mov
jnp
enter
es
pop
aad
xchg
jp
gs
pop
adc
lcall
dec
sti
arpl
push
adcl
cmp
das
movsb
fbld
mov
les
cmc
cmpsb
loopne
mov
jge
and
out
pop
in
sti
fisubrl
in
arpl
xchg
push
movsl
or
pop
xchg
jl
dec
pop
cmp
cmp
mov
nop
dec
mulb
sub
sub
hlt
push
ljmp
cmp
jbe
movsb
popa
jo
arpl
xchg
and
mull
dec
js
outsb
sub
adc
jno
out
gs
loopne
cmp
sub
cmpl
loop
outsb
in
out
aad
and
dec
cld
dec
fnsave
mov
add
adc
popa
mov
push
push
and
and
add
cmp
mov
cmp
push
xor
aam
int3
popa
cwtl
cmp
das
cmp
pop
xor
jbe
push
dec
and
js
push
out
sahf
sbb
cmp
mov
leave
leave
jmp
repz
aad
or
add
inc
jg
dec
sarl
mov
loopne
mov
adc
mov
cmp
or
mov
mov
ss
pop
mov
loop
xor
das
dec
pop
test
push
test
or
pop
fs
xchg
stos
push
and
into
out
out
insb
pop
xchg
popa
and
scas
jle
add
push
push
in
int
mov
add
xor
subl
movsb
fists
jge
jbe
andb
jge
out
sbb
orb
and
cmpl
sti
pop
xor
xchg
lods
xchg
mov
mov
stos
enter
xchg
aas
loop
loop
pop
inc
cmp
sbb
or
out
sub
sbb
jns
add
out
and
stos
loop
jnp
pushf
push
stos
push
xchg
mov
xlat
add
pop
dec
push
lods
mov
clc
xor
cmp
mov
sbb
jae
mov
outsl
jb
jno
add
and
cs
mov
stos
fldcw
xchg
sti
addl
push
test
or
mov
data16
xchg
cmc
das
jg
pop
je
xchg
popa
dec
mov
inc
xlat
stos
shlb
scas
and
rcrl
ljmp
sti
lds
inc
mulb
and
mov
addr16
sbb
arpl
cmpsb
pop
jnp
rol
jbe
cmp
mov
mov
arpl
hlt
sbb
and
jns
movaps
insb
inc
lret
cli
mov
aad
sti
mov
clc
addr16
inc
sub
ss
loop
outsb
pop
shrl
mov
mov
sti
mov
mov
cmpl
sub
aad
fstl
enter
pop
aaa
mov
cmc
jecxz
fstpt
dec
xchg
mulb
xchg
adc
and
sti
sub
movsl
cmpsb
adc
mov
shlb
add
fsubrl
cmp
arpl
lcall
xchg
sbb
rcl
push
add
mov
or
pop
or
ja
xchg
and
pop
call
push
mov
test
jo
repnz
addr16
cwtl
test
jmp
mov
shll
dec
int3
and
pop
cmp
push
ljmp
jno
jbe
loope
mov
push
loop
imul
dec
in
outsb
jge
dec
shr
ljmp
fsubp
adc
addr16
lock
push
jmp
jmp
sbb
jge
jne
jnp
out
fcoms
push
pop
xchg
std
ret
push
cmpsb
sbb
hlt
jecxz
pusha
imul
data16
xchg
sub
sbb
xchg
lahf
jle
pushf
jecxz
cmp
mov
sbb
das
jge
xchg
pusha
ret
movsl
jp
test
push
popa
cwtl
push
imul
jb
pop
daa
lods
cmp
mov
jmp
inc
mov
push
and
lret
or
mov
repz
push
stc
mov
push
push
mov
sub
test
fwait
scas
push
adc
mov
in
mov
rcr
sub
xor
xor
cld
or
data16
std
pop
sbb
mov
sbb
jecxz
xor
cmc
loop
popf
push
jb
and
popa
and
lods
std
and
loopne
imul
cmp
and
adc
addb
popa
lds
stos
dec
enter
sub
ret
test
jle
jmp
jp
and
dec
and
mov
iret
cmpsb
outsl
stos
jp
jecxz
adc
add
xchg
ss
jge
pop
shll
xchg
outsl
test
cmp
cmp
cltd
arpl
ret
repnz
loope,pn
xchg
and
out
ret
jge
and
and
clc
fs
mov
sahf
in
loop
fisubs
aam
pop
push
mov
out
por
adc
pop
or
mull
popf
mov
or
cmp
mov
or
sbb
push
push
rorb
fs
test
xor
arpl
lods
outsl
push
push
cld
mov
cltd
xchg
mov
cmpsl
lcall
mov
in
inc
mov
fisubl
aam
inc
lahf
jns
sub
jns
xchg
or
ss
lahf
adc
inc
lock
loopne
cmp
cmp
inc
shl
or
xchg
push
inc
out
pop
cwtl
idivl
push
xchg
mov
aaa
xchg
das
frstor
andb
popa
cmp
clc
cmp
and
sarl
mov
insl
je
repnz
mov
mov
mov
pop
jne
lret
mov
orb
lods
inc
ret
inc
inc
push
mov
add
push
ljmp
mov
je
xorl
mov
sarl
repz
adc
data16
jb
gs
push
das
or
or
lods
iret
rcl
jne
dec
and
fs
popa
mov
out
cmp
mov
call
imul
mov
push
orl
jecxz
ds
mov
pop
push
test
and
or
shrb
push
popa
or
sahf
arpl
je
dec
jg
xchg
mov
sbb
aas
add
jae
mov
jo,pt
enter
cmp
mov
stc
data16
xor
jnp
push
lods
inc
int
mov
add
pop
int3
nop
pop
pop
pop
imul
lret
add
sbb
jg
ljmp
cmp
in
cmp
rclb
inc
sbb
adc
sbb
arpl
mov
mov
aad
and
or
repz
pop
cmpsb
push
fnsave
sub
mov
push
or
aaa
repnz
push
add
cld
lret
incl
cmp
repz
mov
mull
and
sub
addl
stos
mov
call
fwait
push
or
lret
lret
xchg
xor
or
lock
and
cmp
ret
push
imul
push
jns
pop
xchg
in
fs
xor
in
aas
xor
and
jecxz
ret
cmc
daa
imul
or
cmpsl
push
es
mov
add
jne
cs
sbbb
stos
cmp
and
cmpsl
or
fsubrl
lods
rorb
pop
xchg
sbb
push
clc
out
gs
sub
mov
sti
repz
add
or
pusha
incl
shld
dec
aad
je
popa
outsl
insb
js
cld
mov
or
out
push
loope
cwtl
mov
call
lods
jle
inc
inc
and
sub
jnp
xchg
loope
gs
mov
lahf
cmp
in
cmp
mov
mov
jo
loop
inc
adc
lret
lahf
aaa
enter
ss
push
les
out
pop
ss
jp
xor
sti
push
add
or
pusha
mov
xorb
mov
mov
stos
sub
cmp
pop
cmp
mov
fiaddl
stos
daa
fstps
jmp
push
loopne
xchg
test
sbb
push
adc
add
adc
mov
sar
shr
into
sbb
popa
cwtl
cltd
nop
mov
in
mov
mov
cli
fisubl
fstl
jne
and
loopne
cltd
and
and
pop
mov
adc
jbe
and
sub
jge
jae
lods
cmpsb
pop
and
dec
mov
pop
pop
stos
sub
sbb
sub
insl
add
add
ds
mull
pop
lea
insl
jnp
loope
aad
aam
and
xor
add
data16
test
sub
inc
jl
in
insb
jmp
sub
mov
mov
es
adc
xor
mov
popa
daa
pop
adc
add
stos
outsb
loopne
xor
lahf
add
or
cld
push
sbb
xor
movsl
add
cmp
adc
arpl
lret
sbb
repz
jae
xlat
inc
sub
loopne
and
rorl
or
gs
mov
xor
imul
push
mov
sub
lret
mov
popf
push
out
adc
movsl
xchg
mov
push
idivl
sbb
xchg
rolb
iret
ljmp
xor
inc
pop
aas
pop
xchg
in
outsb
adc
lods
push
das
xor
outsb
in
and
pop
adc
mov
dec
push
aas
lock
push
out
push
jge
and
fistpll
testb
sbb
xchg
add
flds
cmp
mov
imul
in
xchg
pop
test
icebp
loope
and
xor
mov
ds
jo
nop
push
roll
gs
test
add
mov
jecxz
inc
xor
mov
ds
out
loopne
mov
sub
push
sbb
xchg
and
scas
xor
inc
xchg
push
mov
and
mov
stc
inc
sub
notl
rcr
inc
cmpsb
sarl
gs
iret
pop
jae
fdivrp
xor
and
push
adc
aaa
jnp
sub
movsb
pusha
cmp
loopne
jl
and
mov
xchg
push
jmp
out
movsl
mov
cmp
add
jecxz
push
mov
pop
mov
or
jne
test
jns
out
movsb
es
fisubs
cwtl
cmpsb
aam
push
inc
mov
in
pop
pop
push
mov
iret
ret
sbb
out
pop
daa
sbb
pop
shr
cmpsl
stc
sub
loope
ja
jl
pop
jmp
cmp
and
pop
mov
or
cmp
pop
fsubl
mov
stos
jl
mov
jge
pop
mulb
hlt
mov
and
xor
xor
lds
jbe
adc
and
and
jp
xor
mov
or
and
mov
das
movsl
ret
inc
out
and
lret
fcmovbe
out
ror
iret
or
push
ja
in
jnp
xchg
add
jge
push
or
gs
push
mov
das
sbb
cmp
js
dec
smsw
mov
lea
daa
outsl
gs
stc
cmp
arpl
and
sbb
jo
in
jnp
loop
xchg
sarb
enter
insb
int
adc
xchg
mull
out
mov
cmp
jne
in
cmc
cmp
stos
jae
mov
sub
sub
xor
push
dec
lret
jmp
dec
xor
xor
and
loop
idivl
cmp
mov
inc
pop
bound
jae
pop
gs
cmp
es
jae
pop
in
sub
mov
fsub
mov
pushf
xor
in
std
mov
lcall
loope
and
gs
xorb
in
fildll
mov
push
mov
hlt
mov
sbb
outsb
mov
ljmp
xlat
movsl
or
enter
nop
push
subb
sbb
jge
cmp
mov
dec
push
les
sti
ret
rcll
push
cmpb
fldcw
inc
cmpl
sbb
mov
orb
xor
jl
cmp
pop
lock
xchg
push
imul
call
push
lret
insl
sub
popa
or
inc
fstl
pop
call
movsl
xor
mov
xchg
jecxz
add
dec
lods
adc
xchg
repz
in
inc
and
mov
je
mov
insb
lret
hlt
mov
or
pop
adc
stos
gs
ja
lret
mov
xor
lods
jno
icebp
sbb
std
xchg
hlt
and
nop
out
pushf
push
or
cwtl
pop
pushf
sub
loope
sbb
cwtl
pop
pop
ret
stos
jae
mov
bnd
div
test
mov
dec
lock
shll
out
add
xchg
jge
repnz
or
and
mulb
hlt
aas
or
cmp
out
or
ljmp
add
and
mov
and
push
mov
aam
xchg
add
cmp
sub
js
cli
xor
popa
pop
jbe
push
sub
cmc
and
push
insb
les
enter
loope
insl
packsswb
xor
insl
adc
fs
mov
or
fcoml
jbe
iret
mov
adc
or
cmc
inc
scas
fldenv
maskmovq
idivl
rol
xchg
cmp
pop
adc
das
cmp
ret
lds
pop
cwtl
mov
sti
push
add
shrb
mov
popa
mov
das
pop
out
daa
mull
xchg
sub
clc
das
mov
or
lcall
cmp
cs
repz
cld
fistpll
dec
add
dec
lods
adc
or
stc
jnp
rorb
sti
inc
xchg
in
or
and
cmp
aad
bswap
mov
xchg
xor
fs
aas
cmc
or
dec
arpl
pop
xor
pop
mov
sbb
jbe
and
in
dec
adc
pop
stos
add
test
gs
and
xchg
cmp
jnp
and
xchg
xchg
mov
fldcw
sub
loopne
frstor
lods
pop
fnstcw
jecxz
ss
xchg
je
addr16
xor
sub
iret
fcmovnb
addr16
fdivl
mov
cld
or
add
pop
xchg
cwtl
aas
and
or
out
xchg
cmp
into
mov
add
outsb
icebp
add
inc
fstl
daa
mov
enter
adc
addl
lret
cmp
xchg
push
cltd
subb
mov
call
sub
xor
pop
push
sbbl
loope
adc
shll
call
scas
in
mov
jle
test
sub
lea
shlw
mov
ret
das
in
push
xchg
pushf
push
ret
mov
cmp
and
outsl
icebp
stos
sub
lods
cmp
out
mov
cmp
addb
xor
cmp
sti
pusha
push
lret
loop
mov
sbb
xor
xchg
dec
movsl
dec
lock
in
xor
inc
jp
jns
out
mov
loopne
jns
mov
add
add
sahf
xor
mov
out
shrl
push
jb
or
dec
or
mov
shlb
or
fsubrp
dec
orb
adc
out
ret
cwtl
xchg
push
pop
roll
and
jbe
xchg
div
and
mov
cmp
jae
popa
in
jo
out
sub
pop
sti
cmpsl
cld
add
pop
loop
addb
loope
sti
in
mov
xchg
push
mov
stos
jg
mov
cmp
xor
pop
sub
mov
fcmovne
cmp
sub
sub
lret
scas
int3
adc
jb
pop
push
mov
push
rorl
mov
ds
xchg
daa
xchg
or
cmp
cmp
out
fdivrs
shrb
repz
test
push
movsl
out
mov
jecxz
push
pop
in
repz
movsb
icebp
and
jl
cli
dec
sbb
jge
insl
xchg
sub
outsb
adc
js
decb
cmp
inc
jbe
mov
jae
jnp
lods
les
popl
xchg
arpl
cmpsl
add
cs
out
popa
mov
and
imul
sbb
out
and
cltd
aas
imul
mull
movsl
inc
pop
ss
cmpb
jle
mov
jecxz
dec
sbb
lahf
pop
jmp
jo
das
push
add
xchg
loope
sub
adc
fldenv
lret
jge
mov
pop
dec
or
aaa
cmp
imul
dec
jns
jg
in
es
lods
jae
sbb
push
aad
pop
out
mov
lret
std
jl
and
stos
mov
test
mov
cmp
mov
out
out
push
push
ss
xchg
adc
jnp
pop
pop
lods
push
push
adc
je
in
jmp
popa
xor
cmc
adc
imul
adc
cli
mov
pushf
shl
dec
jb
loopne
mov
xchg
or
jmp
int3
ret
or
cmp
jge
mov
inc
sbb
jae
ret
xchg
out
adc
and
and
loope
xchg
jne
call
xchg
cld
mov
test
fsts
jnp
xchg
aad
ljmp
push
push
gs
dec
into
or
jno
fdivrs
jecxz
test
xchg
bound
int3
mov
rcll
stos
cmpsb
or
jo
pop
out
push
and
addb
int
bswap
mov
test
mov
pop
jge
dec
sbb
in
push
sbbl
jnp
daa
fstl
push
cmp
arpl
add
imul
inc
push
jp
sti
lds
nop
test
lea
sti
call
aas
cmp
xchg
pop
or
mov
cltd
fisubs
adc
sbb
pop
inc
push
sbb
lock
or
movsl
adc
aaa
je
xchg
mov
or
movsl
push
mov
cs
popf
adcb
push
xorb
lea
cmpsb
pop
add
xchg
jmp
gs
mov
fsubl
pop
jecxz
xor
loop
xchg
repz
jnp
cmp
xchg
xchg
les
jns
dec
inc
jbe
test
mov
mulb
lret
and
push
mov
dec
xor
sti
mov
ret
push
xchg
mov
and
call
pushf
out
sti
notb
push
adc
je
and
sub
mov
outsb
ds
mov
fnsave
sbb
outsb
pop
pop
and
into
fcomip
test
mov
cmp
jne
pop
sti
mov
cmp
mov
sbb
insb
out
add
dec
xor
cwtl
mov
dec
ret
jecxz
arpl
sbb
in
int
adc
dec
pushl
test
mov
or
sbb
sub
sbb
xchg
cmp
pop
jbe
jle
arpl
shll
imul
lahf
adc
mov
clc
pop
mov
xlat
loope
xor
arpl
movsb
push
lock
add
lcall
test
adc
sbb
mov
inc
fisubrl
pop
adc
and
adc
or
or
pop
push
pop
mov
xor
jecxz
pop
and
aas
inc
inc
std
jne
jecxz
faddl
pusha
cld
jae
andl
outsl
push
adc
pop
add
cmp
xchg
sbb
insl
jg
loop
mov
cmpsb
or
mov
mov
aam
mov
lods
mov
cwtl
inc
enter
lret
cmp
in
in
push
fadds
negb
outsb
jge
les
xchg
hlt
out
jo
cmp
dec
movsl
movsb
and
lret
gs
mov
popf
fsubr
xor
push
mov
pop
push
sbb
setae
rclb
cmpsb
mov
xchg
test
pushl
jnp
jnp
ljmp
sbb
sub
xor
popa
pusha
xor
cmp
and
pop
fildll
push
sbb
cmp
dec
data16
mov
mov
mov
mov
inc
xchg
movsl
mov
dec
mov
cwtl
mov
adc
adc
jo
add
or
out
xchg
es
sti
fadds
fcmovbe
or
and
fs
adc
adc
jg
scas
subl
test
lea
das
pop
ret
mov
sbb
cmp
ret
adc
sbb
xchg
leave
mov
out
sub
and
int
ds
or
mov
adc
push
and
mov
ds
repz
mov
push
xor
and
dec
dec
or
xor
sbb
cmp
aaa
inc
clc
imul
add
cmp
insl
add
enter
jns
sbb
push
lret
xor
in
int3
daa
pusha
cmp
pop
fiadds
cs
push
sarl
sbb
inc
add
xchg
in
ljmp
aam
js
fisubl
mov
repnz
popf
mov
leave
sbbb
mov
cmp
or
dec
shll
jp
and
xchg
cmpsl
jno
xchg
push
or
in
stos
mov
outsb
mov
sbb
test
or
xchg
mov
in
daa
sub
cmp
or
int
les
and
js
jae
jnp
icebp
in
xchg
loop
je
arpl
sbb
fbld
out
lret
in
mov
jecxz
fisubl
repnz
xor
pop
cmp
push
sub
sub
fcomi
dec
in
add
loope
jl
pop
lret
int3
ret
xchg
jbe
repz
jecxz
leave
add
jae
jns
xor
and
jne
out
add
sbb
fsubl
sbbb
add
lcall
mov
movsb
jbe
jp
dec
pop
or
xchg
jg
aam
push
rcrb
jg
mov
mov
xlat
cs
sbb
fs
bound
jno
add
loope
jl
lahf
mov
push
cmc
popa
fdivr
aad
and
jno
mov
insl
adc
out
stc
cmp
push
roll
notl
outsl
mov
pop
jl
mov
ficoml
dec
mov
arpl
arpl
test
into
mov
aaa
mov
stos
mov
xchg
adc
mov
lock
adc
mov
inc
sub
and
jns
lahf
fadd
fildll
push
or
out
jecxz
pop
filds
movsb
xchg
jo
cli
stc
stos
shll
push
xchg
adc
mov
sub
dec
dec
add
add
mulb
jmp
stos
sub
mov
and
push
mov
cmpsb
mov
cltd
push
ja
cmp
shrl
cmp
adc
cs
add
repnz
leave
sahf
mov
add
fmulp
gs
sub
adc
sbb
orl
cs
ljmp
fstps
push
out
in
sub
shrl
adc
or
shl
or
and
cld
sub
jp
lret
bound
add
sbb
xchg
jp
jle
cmc
cmp
div
sarb
mov
bound
jge
and
add
popa
pop
out
cmpb
push
mov
lcall
and
popa
push
out
push
in
fs
xchg
jmp
mov
addr16
or
push
cmp
insb
push
pop
outsb
movsb
lods
fists
loop
inc
js
inc
xchg
lret
and
mov
out
cld
and
mov
jo
cmp
hlt
adc
jo
rol
std
and
rcll
mov
std
adc
mov
jmp
out
incl
xchg
jnp
jbe
xor
data16
cs
ret
adc
cwtl
jbe
inc
imul
daa
pusha
ret
mov
es
andb
movsl
adc
jmp
inc
jp
cmp
jecxz
cltd
push
pop
jae
mov
std
and
adc
mov
and
mov
cltd
cmpsb
add
pop
fstpt
xor
sti
mov
mov
jecxz
decb
sbb
xor
test
mov
xor
call
push
sub
jb
jnp
out
mov
orl
cmp
fisubl
imul
mov
adc
mov
fwait
out
in
inc
push
adcl
xchg
das
cmp
in
jecxz
test
pop
idivb
xchg
in
popa
imul
dec
scas
mov
std
pop
adc
sbb
std
sbb
mov
jb
fcmovnbe
xchg
into
jle
loopne
jae
inc
repz
add
insl
scas
pop
gs
sbbb
push
nop
or
out
mov
js
inc
mov
idivb
fildl
and
and
or
insb
mov
inc
sub
cmpsl
divl
out
filds
fwait
and
adc
mov
sti
loop
in
push
addr16
inc
hlt
jp
sub
dec
ljmp
push
and
jle
push
test
test
fcomps
add
add
mov
into
loope
shll
ret
lods
adc
loopne
push
and
xor
cmp
leave
repz
add
cmp
inc
cmp
adc
test
lcall
pop
jmp
or
or
xor
aaa
add
stos
inc
mov
int3
sub
xchg
popf
jp
es
mov
loope
idivb
addr16
sti
jp
mov
in
pop
rol
popa
push
pushf
es
add
cmp
es
jg
adc
lods
data16
dec
cmp
gs
inc
cs
dec
adc
inc
and
and
or
jecxz
popf
xor
inc
jl
dec
xchg
cmp
in
movsl
sbb
jecxz
les
cmc
xlat
mov
sub
popa
xor
lret
js
sbb
adc
loope
push
imul
and
sbb
and
or
adc
arpl
scas
ja
loopne
mov
and
scas
and
push
sbb
cmp
xor
loope
or
adc
jb
cs
jnp
sub
sbb
out
and
fsubr
movsl
rcrb
test
sbb
gs
xchg
mov
mov
jmp
pop
jae
jns
jg
adc
rcll
mov
pusha
mov
fistpl
add
xor
je
add
adc
push
mov
fbld
ja
or
add
mov
daa
xchg
int3
jecxz
es
push
popa
shl
xor
pop
popl
jbe
sub
rolb
subb
push
cmp
pop
in
int
or
inc
mov
dec
les
dec
xor
mov
das
cs
lea
add
dec
mov
movsb
inc
fwait
inc
adc
pop
and
sub
cmp
lock
lods
jae
mov
mov
test
loope
lret
lcall
jl
dec
sbb
int3
scas
adc
aas
mov
and
scas
sahf
scas
ja
mov
inc
ret
popa
sahf
movl
in
lahf
cld
adc
sti
in
int
push
int
xor
inc
das
in
lcall
jae
or
ljmp
or
std
nop
or
sbb
repz
and
sarl
and
jo
aad
and
cs
lods
pop
lret
jae
fbld
rclb
lea
loop
clc
out
mov
mov
test
sti
push
add
pop
mov
out
xor
add
bound
adc
sub
jl
popa
push
lds
rol
and
sbbb
lods
add
sti
negl
pop
pop
test
stc
hlt
arpl
adc
mov
iret
jle
xor
mov
jno
xor
mov
sub
xor
adc
cmp
sti
inc
in
mov
popa
pop
rolb
push
fwait
jo
sbb
sti
push
es
push
cmp
nop
sbb
lret
mov
jle
popf
in
jnp
dec
divb
mov
dec
lret
fwait
pop
cmp
mov
or
das
sti
and
ret
dec
psadbw
das
lods
gs
cmpsb
inc
mov
pop
daa
out
dec
adc
fisubs
jb
popa
test
jo
jg
mov
pop
ds
iret
loope
sti
movsbl
or
inc
test
inc
push
xor
or
push
and
xor
cmp
fnstsw
popa
xchg
call
shll
mov
xor
add
ljmp
mov
inc
xchg
shrb
dec
test
and
inc
mov
call
jae
jecxz
sarb
jmp
push
fldenv
sub
dec
jecxz
popf
xchg
filds
enter
int3
int3
mov
or
adc
mov
jo
fwait
and
nop
add
test
shl
subl
shl
insb
pop
mov
out
mov
adcl
xchg
jl
cmpsl
mov
movsl
pop
int3
pop
les
mov
std
cmp
and
pop
scas
or
mov
leave
divl
xchg
push
mov
cmp
shrb
xchg
mov
lds
fldenv
push
ret
rcrl
movsl
push
add
cmp
je
out
clc
arpl
pop
cmp
and
notl
roll
iret
sbb
stos
cmp
ljmp
jns
mov
fadds
repz
dec
ret
mov
lea
gs
scas
add
adc
insl
stos
loopne
mov
sub
push
add
dec
xor
outsb
mov
int
popf
mov
cmp
test
jmp
stc
in
pop
lods
cmpsb
add
clc
jecxz
xor
popf
andb
cmpb
cmp
add
mov
jno
sub
and
sbb
mov
sub
icebp
jp
sub
imul
push
xor
fcoml
lret
test
hlt
cmp
or
out
sbb
cmpsb
ja
mul
scas
pop
push
movsl
loop
jge
test
shlb
pop
and
xchg
mov
and
test
jnp
outsb
dec
cli
xor
cmp
and
adc
adc
loop
daa
or
shl
push
movsl
mov
or
frstor
ficoms
daa
icebp
popa
aaa
sub
out
inc
pop
call
iret
clc
loopne
cmp
movsl
xchg
mov
int
xor
loope
and
add
aaa
sbb
adc
ret
mov
pop
xchg
rcrb
test
pop
pushf
fabs
and
or
std
push
sub
mov
sahf
adc
fcom
pop
shlb
jae
and
ss
and
jle
mov
cwtl
jb
imul
pushl
ror
test
cmp
pusha
dec
test
and
scas
xchg
xor
mov
mov
adc
jecxz
jmp
and
or
cld
aaa
pop
and
add
fistl
add
leave
les
test
daa
mov
fsub
xchg
adc
mov
orb
arpl
out
mov
jnp
jmp
or
pop
andl
jns
adc
jg
ss
stc
mov
dec
inc
dec
jae
sub
daa
cmp
inc
mov
sub
mov
ficoms
fidivs
es
push
andl
femms
lds
xlat
dec
in
shl
dec
shrl
pop
outsb
lds
insl
lea
xor
loope
add
and
loop
leave
daa
inc
push
sub
fwait
dec
pop
movsl
imul
or
and
mov
mov
cmp
gs
xchg
fisubs
sbb
fdivrs
cmp
data16
mov
int3
popa
lcall
outsl
inc
in
sbb
mov
or
or
std
lahf
in
adc
xorb
or
xchg
and
cmp
dec
subl
push
and
jg
mov
inc
mov
push
jmp
xchg
rcll
sub
add
push
and
and
xor
ja
cmp
lcall
rcr
mov
jle
add
and
das
fxtract
dec
adc
insl
sub
ljmp
dec
iret
xchg
jecxz
imul
mov
dec
mov
cmpsb
es
dec
and
fwait
add
outsl
xchg
test
or
sbb
lahf
inc
test
add
out
and
cli
in
loope
out
aas
sbb
add
enter
mov
jecxz
repz
jle
adc
pop
sti
lcall
lahf
and
gs
sub
sub
xor
adc
lock
or
loope
cmpl
hlt
ja
or
sub
sbbl
loope
and
lock
adc
movsl
inc
ljmp
pop
adc
movsl
mov
js
or
fnstcw
std
les
movsl
mov
aaa
add
jo
push
movsl
lret
std
or
push
dec
xchg
add
ss
pop
std
jnp
pop
movsb
arpl
sbb
mov
hlt
dec
aaa
jp
cmc
cmpb
mov
mov
xchg
fcmovu
adc
mov
insb
xchg
inc
repz
insb
or
rcrl
stos
add
mov
cmp
rcrl
mov
outsl
fnstcw
sub
es
sti
cwtl
sub
add
adc
cmp
ja
adc
out
loope
aad
pushf
movsb
mov
imul
out
mov
mov
jnp
stos
lahf
push
jns
xchg
dec
cmp
movsl
popl
sub
js
and
and
in
out
mov
gs
sub
xchg
stos
mov
lods
jno
push
mov
in
sti
dec
in
lds
add
xchg
sub
movsb
addr16
jnp
adc
loopne
pop
stos
fcomps
in
pop
aas
inc
sbb
mov
xlat
inc
sub
xchg
es
xchg
cs
ljmp
in
sub
ret
cmp
les
jo
pop
jns
cmp
and
jne
imul
mov
xchg
dec
mov
lea
lods
filds
sbb
movsb
clc
loope
ds
sbb
cmpsl
pushf
std
xor
push
out
sub
icebp
cmp
fistl
pop
mov
ret
es
fwait
out
cmp
xor
pop
jecxz
jno
bnd
jl
jno
loopne
mov
stos
popa
movl
dec
push
jle
pop
xlat
fisubs
stc
ja
and
js
lods
adc
pop
les
movsl
scas
popa
or
and
loopne
jns
call
out
fs
mov
sbb
in
sub
ja
fisttps
xchg
ret
lret
or
xchg
arpl
dec
cs
dec
arpl
and
xor
pushf
xor
popa
loopne
xlat
mov
jmp
jnp
mov
mov
inc
sbb
jp
fisttpll
mov
or
mov
lods
pop
jg
adc
divb
mov
ljmp
out
mov
cmp
mov
jecxz
pop
cs
cmp
push
lds
imulb
daa
or
push
add
sti
sbb
or
lahf
jecxz
dec
push
inc
adc
fcomp
sbb
or
hlt
jne
pop
and
and
push
jo
adc
dec
and
xchg
dec
in
aas
dec
fisubrl
cld
sub
rcrl
js
ljmp
pop
ja
cld
ljmp
sbb
popa
jmp
mov
sbb
dec
cmc
adc
xor
push
mov
xchg
push
xor
xchg
sbb
scas
jle
jp
add
dec
dec
stos
repz
and
movsb
lock
xor
mov
jnp
pushf
jp
ficoms
movsl
in
dec
test
jbe
fisubl
sbb
xor
pop
or
sbb
pop
into
cmp
fwait
mov
mov
jp
lods
sahf
loope
jecxz
leave
popa
adc
lahf
pop
sub
sbb
std
adc
mov
shrl
movsl
adc
rcll
aas
loop
sbb
popa
or
pop
std
cmp
adc
mov
fldt
add
sbb
push
cli
jle
sub
dec
mov
pusha
adc
pop
mov
aad
inc
adc
xchg
mov
pop
stos
sub
push
jg
push
idivb
iret
loope
addl
adc
mov
xchg
add
push
push
dec
add
loope
or
mov
or
insl
es
sub
arpl
xchg
or
jp
js
pusha
vmwrite
xor
andl
inc
scas
add
or
jp
jmp
xchg
sahf
sbb
xchg
in
ja
push
ffreep
fisubrs
fnstcw
loopew
mov
scas
jb
dec
arpl
dec
sahf
or
lret
mov
sti
sub
xchg
inc
in
xchg
or
loope
push
adc
mov
outsl
dec
cli
mov
pop
and
or
mov
in
jb
insl
jecxz
jmp
les
rorl
xor
inc
sbb
shl
es
xchg
add
and
stc
pop
mov
jne
jl
pusha
adc
or
mov
pop
mov
test
xchg
cmp
in
fxch
inc
xchg
pusha
xchg
outsb
mov
and
or
xlat
ja
mov
sbb
jno
gs
nop
jmp
push
mov
in
and
shll
mov
cmpl
das
and
jne
mov
or
mov
mov
pop
lahf
ret
add
adc
and
mov
sbb
xlat
scas
fisubs
add
mov
outsb
cmpsl
fists
xor
sti
fidivl
dec
pop
out
ret
iret
lods
pop
aaa
daa
rol
testb
cmp
cli
popa
js
lods
movsb
out
ljmp
and
mov
jnp
mov
add
and
daa
dec
aaa
pop
pushf
movsl
sbb
pop
add
aad
aad
or
imul
roll
push
pop
add
inc
adc
int
jecxz
ds
sbb
fwait
push
cmp
or
add
popa
bound
jo
cmpsl
ds
rorb
es
into
pushf
dec
mov
movsl
mov
adc
or
daa
out
test
shl
arpl
xor
dec
cmp
filds
mov
pusha
add
ljmp
clc
pusha
push
aam
shrb
cmpsl
xchg
arpl
out
dec
push
jae
xchg
push
push
mov
sbb
js
mov
push
xchg
std
enter
inc
test
sub
dec
dec
xor
push
adc
loop
pop
jp
xor
faddl
in
ficoms
ja
in
addb
or
ss
and
xor
leave
insl
xchg
out
call
add
and
nop
mov
sub
cmpl
sbb
lcall
mov
mov
xlat
repz
cltd
ret
and
xchg
jge
xchg
mov
fldcw
cwtl
dec
outsb
push
loope
test
cmp
push
jb
and
cmp
sub
and
jnp
shl
mov
pop
jmp
cmp
pop
dec
lret
cmp
data16
dec
aaa
mov
sub
popa
sbb
iret
fmuls
fistpll
call
out
fwait
shll
mov
add
and
mov
xor
xor
and
jo
test
cmp
xchg
push
mov
adc
inc
mov
push
gs
in
or
mov
enter
mov
insl
rorb
xor
mov
push
outsl
lods
js
out
mov
fadds
jne
cmp
fstps
clc
mov
sbb
sub
sti
in
jecxz
xchg
and
push
jl
inc
loop
xor
loopne
loopne
mov
out
fnstcw
mov
je
mov
inc
push
icebp
sarb
test
out
inc
mov
inc
mov
pop
fsts
or
out
daa
aad
dec
xchg
add
movsl
push
outsb
xlat
mov
adc
and
inc
in
fidivrl
mov
arpl
adc
mov
cmp
je
jnp
fcom
push
mov
fwait
out
mov
loopne
jg
and
imul
dec
sahf
dec
pop
cmp
xchg
mov
fsubr
in
fwait
pop
stc
in
or
jae
outsl
pop
ficoml
cmpsl
xchg
xor
enter
jecxz
xchg
cwtl
sub
movsl
je
insl
sbb
loope
mov
cmpsb
test
in
in
jmp
dec
cltd
adc
loope
add
repz
and
repz
sti
scas
and
stc
cmp
loop
jecxz
mov
lds
shlb
jmp
inc
push
mov
sub
test
mov
xchg
std
sub
pop
adc
iret
and
sbb
push
sbbl
fsubs
fnstcw
lea
andl
in
cmp
repz
add
xor
iret
xor
daa
or
and
hlt
cmp
or
clc
sbb
fstpt
test
icebp
inc
aam
movsl
in
dec
dec
in
dec
adc
nop
call
mov
sub
add
xor
icebp
ror
lret
cli
sti
inc
into
jecxz
mov
mov
popa
mov
fcmovnb
js
add
and
rclb
and
jnp
cmp
sbb
lcall
popa
and
or
push
gs
addr16
push
push
test
pop
dec
shl
scas
inc
out
jno
sub
pop
imul
inc
add
test
inc
bound
shl
sub
sub
adc
xorl
int3
xchg
call
pop
pop
aad
loope
sbb
outsl
jge
rcr
cmp
and
pop
repz
cld
mov
mov
fdiv
loope
and
fcmove
cmp
mov
and
stos
or
xorb
and
je
in
sete
outsb
mov
mov
sbb
push
lret
push
push
or
aad
enter
dec
mov
les
mov
shl
in
mov
sbb
cmpsl
insb
cmp
scas
mov
jp
movsl
inc
sub
mov
mov
xor
and
nop
and
jp
jecxz
add
mov
out
jnp
repnz
mov
and
push
add
mov
leave
fxch
sbb
pop
mov
sbb
add
or
imul
lret
push
scas
cmp
xor
clc
lds
push
xchg
and
fcom
ret
cmp
sub
add
loope
popa
jo
vcvtsd2si
mov
xor
jmp
cmp
push
repz
add
jns
mov
mov
loopne
or
popa
pop
jg
cs
fisttpll
pusha
add
xchg
sub
cmp
sti
mov
pop
mov
sbb
aaa
arpl
dec
adc
inc
xor
movsb
pop
in
mov
push
jle
or
loop
jo
lret
and
adc
sub
out
mov
mov
into
lea
lods
jp
mov
ss
cmp
xor
jmp
mov
pop
mov
xchg
mov
test
lret
divb
out
es
xor
jb
in
mov
andb
les
inc
pop
and
gs
cmp
movsl
daa
xor
call
imul
add
push
cwtl
imul
lret
fldt
mov
shr
ret
test
sar
dec
xchg
movsl
stos
ljmp
jmp
sub
ret
scas
pop
add
dec
mov
loopne
cmc
mov
push
mov
lea
dec
sbbb
popa
xchg
mov
arpl
adc
mov
pop
push
cmp
lcall
scas
test
lcall
in
push
xchg
subl
or
repnz
ds
movsb
jbe
out
pop
cld
repz
in
adc
shlb
mov
fiaddl
mov
inc
inc
inc
add
es
repnz
xor
dec
pmulhw
jb
push
jp
jno
cmp
and
inc
dec
mov
sarl
ds
jmp
sub
popa
add
icebp
scas
cmp
subb
popa
pop
daa
xlat
in
insl
sbb
dec
sbb
jecxz
add
ret
sub
cmp
pop
mov
sub
cld
xchg
sbb
test
notb
sar
shl
inc
jecxz
add
cld
or
iret
sub
jne
loopne
add
arpl
cmp
xlat
out
out
mov
mov
inc
int3
or
jno
dec
jle
ret
mov
and
cmpsl
sbb
push
sbb
sub
xchg
rclb
pop
dec
loop
sub
sub
gs
cmc
decb
cmpsb
and
cli
nop
cmp
stos
sbb
mov
lock
into
push
mov
cmp
sub
cli
dec
dec
mov
cs
xchg
fcoms
mov
ja
mov
mov
adc
fcomps
mov
jmp
xlat
xchg
les
outsb
hlt
fidivrl
xchg
dec
dec
lret
push
mov
jb
in
lret
mov
push
imul
adc
cmp
jbe
cmp
sub
xor
aad
ss
into
inc
pusha
dec
test
mov
shrl
adc
jmp
mov
xchg
fnstsw
and
imul
mov
mov
jo
int
mov
std
inc
xor
add
stc
cmp
inc
mov
int
adc
test
mov
repnz
pinsrw
pop
adc
pop
dec
or
sti
adc
xor
cmp
popa
push
dec
fdivrp
loope
jp
fadds
fldenv
mov
lahf
jnp
mov
push
push
pop
lret
pop
dec
roll
sub
out
mov
lods
xchg
imull
or
jo
stc
dec
popf
imul
or
insb
je
je
lret
imul
dec
push
jp
adc
add
push
add
andb
rcr
daa
out
xor
cld
cli
mov
push
jg
lds
lahf
add
adc
push
sub
add
lock
mov
ja
lods
jmp
xchg
add
xchg
call
mov
sti
push
mov
xor
xchg
aaa
jnp
push
in
in
int
and
rcll
rclb
xchg
jbe
and
lock
dec
inc
adc
inc
shl
leave
xchg
xchg
inc
jecxz,pn
out
sub
push
inc
shll
repz
mov
vmovdqu
sti
adc
mov
into
xor
test
xchg
cld
and
cmpsl
inc
dec
std
hlt
or
dec
push
in
jb
fs
mov
imul
jnp
xor
add
inc
cli
clc
js
cmp
mov
push
sahf
mov
shll
mov
sub
cli
pop
scas
cmpsb
int3
daa
push
sub
in
inc
push
test
cld
lret
cmpsb
or
lcall
sub
push
jmp
pushw
push
and
mulb
shl
in
or
movsl
pop
movsl
call
and
int
cld
addb
inc
sub
insb
sub
inc
and
jbe
rolb
out
mov
shlb
fs
adc
cmpsb
sbb
adc
loopne
adc
and
push
mov
jae
cmp
gs
das
in
cmpsb
add
mov
outsb
mov
popf
xchg
daa
int
sbb
loopne
daa
loopne
xor
cmpsb
or
sbb
add
jecxz
xor
mov
enter
in
into
and
mov
in
popa
ljmp
jp
test
xor
push
rcl
mov
loopne
xor
arpl
jmp
xlat
jecxz
loopne
dec
je
mov
popa
data16
scas
mov
mull
gs
add
mov
cmp
and
pop
dec
mov
pop
jbe
popa
aam
mov
dec
xchg
add
fs
mov
inc
arpl
jmp
push
sub
pop
cmp
ss
add
arpl
cltd
cmp
cmp
into
rcll
mov
sbb
mull
adc
jns
and
fldt
lds
arpl
mov
rclb
add
or
adc
lock
and
lods
je
pop
push
rorl
and
add
cld
pop
lret
add
in
jae
adc
js
cmp
and
mull
jbe
sub
addr16
stos
sbb
bswap
inc
sbb
jecxz
mov
pushf
aam
dec
into
or
loop
data16
jecxz
imul
mov
stos
rclb
mov
imul
sti
xor
jb
push
pop
xlat
pusha
nop
sub
out
shlb
adc
arpl
inc
mov
popa
push
push
xchg
test
add
cwtl
clc
xor
cmp
rclb
adc
dec
aas
arpl
adc
loopne
fadds
sbb
add
movsl
roll
ljmp
jne
adc
fldcw
movsl
push
int3
jnp
and
stc
popa
xor
jl
sub
push
mov
ja
test
int
hlt
jge
sbb
mov
xorb
xchg
inc
psubq
push
andl
xchg
add
fbld
sub
sbb
lods
mov
adc
jp
bound
shll
xor
xchg
add
icebp
mov
loopne
les
mov
ret
das
test
mov
mov
out
mov
inc
inc
ja
inc
movsl
sub
adc
orl
push
mov
and
ds
mov
stos
mov
mov
adc
cwtl
push
addr16
popa
pop
cmp
das
xorl
cmpl
loop
push
dec
sub
loopne
test
or
cld
xchg
or
mov
into
mov
ret
and
addl
add
push
movsb
add
mov
dec
pop
or
jle
stos
out
lock
jo
and
jnp
pop
arpl
push
dec
inc
adc
mov
and
es
sbb
int3
inc
in
dec
arpl
adc
push
adc
andb
jno
and
xchg
sbb
inc
sbb
push
inc
push
cli
mov
sub
dec
jge
test
movsl
addr16
gs
pusha
loopne
in
or
bound
mov
mov
out
and
loope
xor
dec
pop
and
mov
imul
adc
loop
ret
xor
sarb
mov
dec
and
or
loope
adc
lods
mov
and
jnp
or
stos
jno
imul
sahf
scas
adc
inc
sbb
std
psubq
movsb
adc
jge
mov
ret
insb
aas
add
call
js
cmp
add
and
jp
mov
stos
cs
jbe
xchg
dec
add
pusha
shlb
pop
lret
push
push
jae
inc
or
shrb
data16
xchg
mov
mov
loop
lock
aaa
sbb
mov
divb
stos
andb
xchg
loop
dec
mov
and
das
pop
and
cmp
and
pop
test
call
call
test
aam
insb
sbb
or
hlt
call
jns
pop
xchg
add
adc
xor
mov
lahf
cmp
or
mov
imul
xchg
and
rorb
repz
fsubrl
or
jne
pusha
dec
cltd
insl
dec
adc
pop
faddl
movsl
cmp
cltd
dec
insb
add
inc
cld
mov
rcll
sarb
mov
loope
test
sbb
dec
and
sub
pusha
lods
mov
in
jmp
push
push
insl
mov
dec
popf
cmc
cwtl
test
subb
fistpll
sahf
popa
adc
mov
push
cmp
pop
arpl
and
stc
push
in
and
jecxz
cmp
aad
push
in
scas
add
pop
fld
dec
cmpsl
jecxz
out
jns,pt
pop
cs
rclb
scas
hlt
push
sub
cmp
ljmp
mov
pop
pop
fiadds
jmp
std
inc
and
or
mov
popf
sub
jp
push
ja
rorl
adc
sub
movsb
and
sbb
lahf
nop
clc
inc
scas
push
dec
in
xlat
mov
or
std
adc
jmp
pop
and
jne
ror
add
hlt
xlat
lret
push
inc
sub
scas
mov
mov
aam
mov
gs
mull
ljmp
sbb
arpl
imul
mov
mov
sahf
or
movsl
push
push
fimuls
mov
mov
aas
mov
sub
dec
std
pop
lods
jmp
das
adc
xlat
negl
xor
insl
jl
jle
les
or
inc
xchg
push
push
jecxz
stos
cmp
lcall
jge,pn
inc
les
out
jmp
sbb
cmpsl
jae
cli
loope
and
enter
daa
cwtl
scas
dec
or
fcmovnu
mov
lock
pop
out
xchg
add
jmp
dec
popa
sbb
lods
and
or
lods
bound
sarb
sbb
mov
gs
shll
arpl
les
pop
mov
and
and
arpl
xchg
add
dec
les
add
lret
mov
in
aam
mov
fsubs
ss
xchg
out
jecxz
sti
push
cltd
add
lds
inc
cmp
sbb
push
jne
and
aas
flds
push
arpl
push
pop
xor
test
push
out
xor
imul
sbb
jg
sbb
cli
out
cmp
mov
sub
add
inc
dec
ds
dec
and
push
mov
push
cld
scas
jae
mov
addr16
popa
clc
adc
pusha
adc
popa
jne
std
push
jnp
std
cmpsl
sbb
cli
loope
push
cmp
pushl
xlat
daa
or
jl
test
sti
inc
cmp
mov
in
dec
fldt
cmp
mov
ja
loopne
das
or
sub
enter
dec
mov
and
adc
mov
mov
push
mov
and
xor
out
fsubs
lret
jmp
movsl
dec
jp
out
mov
lahf
dec
or
shlb
mov
xor
in
mov
jno
xchg
loope
ja
add
out
add
sub
sbb
cmpsl
adc
ja
jmp
cmp
dec
sti
and
pop
cs
shlb
test
aas
pop
nop
mov
pop
ficompl
mov
lock
cmp
jecxz
fstpl
in
popa
mov
or
and
mov
mov
mov
cmp
shl
and
popf
mov
inc
cmp
dec
mov
loopne
jno
push
lret
stos
std
xchg
and
adc
les
mov
je
scas
push
mov
or
push
xor
or
mov
jecxz
push
adc
ret
and
dec
xor
fwait
or
es
push
cltd
push
mov
daa
es
xchg
ret
mov
and
pop
imul
jecxz
add
in
iret
mov
cmp
pop
daa
pop
mov
adc
divb
mov
xchg
push
popa
sub
dec
dec
adc
popa
lret
mov
mov
push
mov
loopne
cmp
nop
pop
nop
push
xlat
ja
sub
jg
cli
add
jnp
xchg
fwait
sbb
ljmp
enter
xchg
lods
and
addb
push
cmp
xchg
loopne
outsb
aaa
loop
jl
rcl
mov
and
stos
dec
push
jnp
xchg
sub
sbb
int
lock
inc
pop
jbe
xchg
mov
sbbl
mov
mov
int3
jle
jl,pn
mov
xor
xor
pop
test
in
loop
mov
into
mov
orps
pop
cmp
int3
aam
xor
pop
xor
loopne
jbe
aad
lods
arpl
lcall
rcl
or
jnp
rorb
nop
sub
lea
lret
xor
add
cmp
notl
hlt
fwait
jecxz
fdivl
es
inc
jbe
out
cmp
add
fsubs
scas
jmp
sub
sub
jae
out
sbb
jo
aam
push
mov
push
outsb
enter
mov
cmp
sbb
push
ljmp
in
popf
lods
sub
and
cmp
push
dec
and
or
lods
enter
sti
xor
mov
movsb
in
and
jp
inc
arpl
lret
pop
sbb
mov
jecxz
lahf
pop
arpl
pop
pop
push
mov
adc
orl
adc
bound
std
rcrl
loope
xchg
mov
or
orl
data16
and
mov
and
mov
rclb
add
inc
add
inc
mov
cmp
jnp
lahf
lret
ljmp
ljmp
add
rcl
mov
sub
mov
sub
xchg
loope
rol
mov
push
test
in
inc
or
inc
push
jmp
int3
adcl
jae
ss
add
test
push
adc
jo
xor
loope
arpl
jnp
mov
aam
and
sub
mov
outsb
or
dec
stos
mov
xchg
or
xchg
pop
jp
hlt
loope
mov
scas
dec
push
out
movsl
insb
sub
rcll
push
cmp
jo
data16
aas
test
sbb
sbb
cltd
jle
jge
das
pop
inc
mov
and
movsl
cmp
jl
xor
dec
int
fs
lret
in
arpl
imul
loop
push
rolb
out
movsl
jae
sbb
movl
imul
bound
stc
cs
add
imul
cmp
int3
je
shll
inc
andb
xchg
ja
add
ljmp
push
mov
data16
xlat
mov
push
movsb
push
movsl
ja
fstl
add
fldcw
xchg
repz
pop
mull
sti
pop
sbb
jg
clc
xor
mov
sub
fldenv
xlat
sub
mov
pushf
jecxz
lods
ss
gs
sahf
test
out
cmp
push
and
mov
sbbb
add
jnp
sub
xor
dec
mov
fwait
cmc
and
clc
and
or
outsb
inc
pushf
push
xor
iret
mov
mov
jo
mov
add
popf
mov
pop
mov
and
or
stc
jo
movsl
sub
in
dec
fdivs
icebp
sbb
mov
xlat
inc
mov
and
push
hlt
popa
rcrl
jmp
arpl
push
ret
out
loopne
cmp
push
ljmp
jnp
dec
popf
adc
mov
cmp
lcall
nop
test
fxch
pop
scas
mov
lock
int
rclb
leave
in
jmp
or
cmp
mov
cmp
cmp
fbld
dec
mov
in
inc
sbb
cmp
sbb
sub
lahf
sbb
int
mov
and
dec
lds
jg
push
jne
add
loop
filds
adc
or
daa
aad
mov
and
out
loope
adc
les
call
test
cltd
mov
and
xchg
jmp
ss
and
jmp
mov
jne
aas
push
out
cmp
xchg
xchg
aam
and
inc
daa
in
jnp
push
mov
mov
jb
scas
push
jnp
inc
dec
cltd
mov
lods
pop
fsubr
jmp
pop
inc
ret
mov
xor
inc
aam
pop
cs
xor
js
cmpsb
in
movsl
xchg
or
in
lret
sbb
clc
jp
scas
sbb
xor
mov
jl
pop
adcb
in
loope
xchg
pop
mov
xor
daa
loope
test
out
mov
jno
push
sbb
push
out
leave
mov
sub
call
les
ljmp
cmp
movsl
test
lret
push
and
xorl
dec
loop
xchg
jge
jnp
push
mov
adc
jbe
out
jmp
cmp
push
or
cmp
in
popf
xor
fldt
rorl
outsb
jmp
pushl
adc
adc
mov
pusha
aad
push
and
movsb
mov
and
xchg
sub
stc
mov
dec
add
gs
clc
js
jnp
ljmp
test
dec
fdivr
add
pop
sub
jnp
pop
jle
mov
cmp
das
call
arpl
xlat
pop
mov
adc
mov
shll
and
cmpsb
ljmp
dec
and
sub
fsubs
lret
dec
clc
inc
cwtl
test
mov
or
cmp
lcall
inc
lret
jg
ds
cld
stos
jbe
mov
movsl
sbb
lret
popa
add
or
xchg
outsb
movsl
mov
jecxz
enter
and
fs
outsl
fsubs
pusha
stc
daa
mov
cmpsb
aaa
mov
or
push
and
mov
add
test
ljmp
mov
js
std
les
std
js
je
stos
cmp
mov
add
inc
ret
in
in
or
mov
ret
aas
mov
ret
jbe
mov
mov
ljmp
inc
xor
or
push
and
lock
add
cltd
push
lret
push
sti
ficoms
sbb
lcall
sub
hlt
cltd
mov
sub
jb
es
movsb
sub
dec
imul
push
mov
gs
mov
iret
adc
test
sbb
fwait
sbb
cmpsb
xchg
imul
cltd
outsl
hlt
adc
es
out
push
sar
or
pop
push
xor
sti
inc
test
mul
or
add
jns
pushf
test
arpl
in
rcll
dec
mov
add
pop
adc
js
and
sti
mov
shl
jnp
jmp
fcmove
mulb
push
push
sti
pushf
fwait
jle
push
gs
dec
loope
pop
cli
mov
sub
xor
pcmpgtw
xor
jp
mull
ljmp
xchg
xchg
fwait
bound
dec
adc
mov
mov
pop
mov
push
test
icebp
sub
cmp
sar
lret
and
orl
mov
xlat
andl
xchg
mov
pop
leave
mov
mov
imul
lods
or
mov
sub
mov
dec
call
fadds
xchg
add
mov
and
mov
xchg
das
cmp
push
daa
mov
or
imul
mov
insl
int3
daa
outsb
and
imul
xor
push
icebp
adc
test
xor
push
out
mov
and
jge
ja
gs
inc
add
cmp
adc
or
in
adc
call
sti
lock
mov
inc
inc
movsb
icebp
sub
shll
movl
jo
adc
fsubs
xchg
add
adc
jnp
in
lret
mov
fldenv
push
push
push
adc
add
scas
pop
pop
xchg
lret
sahf
xchg
in
push
call
outsb
addr16
ret
pop
in
cmp
test
mov
xor
cmc
enter
mov
xor
into
in
jp,pn
lods
sarb
xchg
lret
ja
int3
movsl
push
adc
movsb
inc
mov
aam
les
cmp
mov
out
sub
daa
add
movsl
mov
xor
cmp
imul
xchg
test
ja
xor
xor
mov
cmp
xor
mov
lods
pop
seto
push
mov
xor
cmp
xchg
int
in
loopne
push
add
cmp
or
and
rorb
ss
loope
lcall
bound
ljmp
xchg
xor
popa
std
xchg
icebp
in
decl
mov
mov
xor
dec
sbb
xor
es
xchg
lds
mov
hlt
loope
push
stos
in
xor
and
or
fs
stos
jne
ficomps
push
clc
mov
push
iret
fmull
sti
je
dec
lahf
dec
mov
adc
frstor
outsb
mov
inc
add
dec
add
push
inc
out
lock
pop
xor
int3
iret
stc
xchg
outsl
stos
das
mov
jno
adc
mov
rcll
and
adc
movb
add
sti
pusha
lcall
mov
jne
pop
dec
jp
jp
loope
jecxz
push
pop
pop
inc
sbb
push
addl
dec
adc
icebp
loope
int
or
cmp
fwait
jg
mov
divl
lds
cli
frstor
push
mov
push
aad
insb
push
jns
enter
mov
xor
and
adc
lods
jmp
push
enter
ja
dec
mov
dec
mov
jbe
xor
xor
fcoms
mov
outsl
xorl
sahf
cmp
flds
aam
push
daa
push
sbb
cmc
mov
xor
fwait
out
inc
loope
sbb
push
je
in
cld
jg
mov
stos
jle
je
jnp
out
cmp
adc
pusha
mov
push
mov
insb
out
xchg
or
and
ret
mulb
and
or
cmpl
push
mov
in
adc
sbb
stc
aas
mov
adc
loop
aaa
pop
add
mov
mov
add
lret
loope
xor
adc
sub
fimuls
dec
insb
pop
jecxz
gs
xchg
inc
mov
sti
mov
jle
xchg
dec
das
rolb
cltd
inc
inc
and
xor
lcall
jns
mov
gs
or
or
dec
sbb
or
mov
fadds
mov
pop
pop
push
fucomi
mov
pop
mov
ljmp
and
mov
shll
std
nop
sbb
mov
aam
addr16
shrl
adc
and
sbb
sbb
mov
ret
dec
push
pcmpgtb
jecxz
dec
push
mov
sbb
aas
inc
aam
adc
arpl
test
sub
inc
xchg
push
push
lcall
addr16
pop
add
sbb
or
les
or
cmpb
jl
insb
lret
insb
xor
mov
movsl
sbb
rcl
xchg
mov
add
jae
cwtl
call
jecxz
out
and
mov
lcall
cmp
pop
mov
icebp
paddusw
sbb
sbb
mov
sub
adc
sub
jnp
pop
fsub
test
sbb
jo
jb
push
mov
cli
lret
imul
jo
adc
enter
jecxz
cmp
cmp
mov
dec
mul
stos
mov
push
jo
stc
shl
xchg
mov
xchg
sub
jg
mov
insb
cmp
mov
rclb
sbb
and
fisttpll
xchg
mov
pop
addr16
adc
cmp
adc
adc
push
and
sub
add
jle
mov
cmp
mov
push
sti
das
fisubs
add
idivb
data16
cwtl
adc
pushf
inc
pop
das
mov
int
mov
mov
cmp
sub
and
xchg
icebp
mov
rcrl
sti
popf
cmp
cwtl
test
movsb
in
das
xchg
mov
shlb
jno
movsb
mov
das
das
in
or
adc
pop
adc
pop
lea
arpl
add
inc
lret
out
cmp
pushf
xchg
imulb
jnp
lods
sbb
sbb
xlat
mov
xor
lcall
les
jnp
cmp
sti
add
cmp
or
jp
mov
pop
or
or
push
cltd
cmc
and
sub
xorl
or
sbb
cmc
or
fnstsw
mov
push
adc
cs
jbe
lds
fldl
jmp
in
into
repz
ljmp
loopne
xor
pop
mov
mov
aad
in
fbstp
mov
pop
push
cld
dec
jne
cmp
jbe
js
sub
out
push
jno
sub
lret
jg
mov
loope
movsl
mov
int
xchg
xlat
es
jecxz
pop
sbb
mov
or
push
jle
push
dec
or
ss
cmp
insb
jl
es
sbb
xchg
test
push
push
add
xchg
mov
fwait
or
adc
sub
jecxz
pop
add
inc
nop
repz
fisttpl
cwtl
dec
ret
and
push
sbb
leave
pop
mull
pushf
into
sub
fistl
loopne
std
out
mov
rcll
icebp
mov
ss
imul
movsb
shlb
test
in
xlat
mov
lods
sbb
jno
push
es
mov
xchg
hlt
sub
sarl
dec
loope
mov
mov
sbb
xor
cmp
push
dec
add
or
mov
push
cmc
sbb
jp
in
daa
je
and
lods
jmp
rolb
push
ss
aaa
add
add
add
addb
or
dec
add
add
mov
mov
addb
add
and
mov
inc
add
or
add
mov
add
xor
mov
add
movsl
or
add
or
adc
add
sbb
dec
add
adc
addb
or
or
mov
add
add
inc
mov
inc
inc
add
add
inc
add
orb
fadds
or
add
orb
adc
inc
or
add
orb
mov
test
adc
enter
inc
add
int3
xorb
add
andl
push
add
add
add
rolb
addb
pop
add
add
inc
push
add
adcb
pop
adc
xchg
adcb
or
and
gs
addb
add
add
andb
inc
add
or
add
loopne
addb
ss
or
add
add
or
inc
inc
sbb
loop
add
rolb
add
add
cmp
add
add
add
add
mov
sbb
add
push
adc
or
popa
adc
add
add
adc
test
add
add
adc
inc
adc
adc
xor
nop
add
push
add
inc
adc
inc
add
or
xor
sub
add
mov
enter
add
lcall
add
add
adc
test
cmp
cmpb
and
add
add
add
xor
add
add
mov
add
xchg
or
or
test
adc
add
jb
inc
sub
add
adc
test
or
pusha
addl
mov
add
enter
mov
test
inc
add
pusha
add
addb
adc
inc
verw
add
dec
add
dec
popa
add
add
add
xor
add
add
add
mov
or
test
jae
add
add
add
mov
sbb
add
add
add
inc
add
inc
inc
push
add
xchg
xchg
add
mov
push
shrb
add
add
sbb
and
add
xchg
rclb
and
orl
add
nop
push
add
nop
and
inc
mov
add
add
push
add
insb
add
add
add
adcb
add
adc
adc
mov
mov
add
and
add
push
add
add
and
add
adc
or
xchg
addb
test
add
add
inc
push
add
add
sbb
arpl
add
inc
sbb
pop
add
sub
add
add
andb
and
add
addb
add
andb
add
and
add
mov
test
add
add
inc
and
add
add
push
inc
add
cmovb
add
inc
sbb
add
add
cmp
push
add
or
add
adcb
inc
add
pop
add
loope
push
add
add
pusha
andb
addb
or
dec
push
add
sbb
add
bound
or
xor
add
and
cwtl
add
add
add
add
add
add
add
inc
push
inc
add
inc
inc
inc
add
add
add
xchg
add
inc
dec
dec
add
inc
addb
dec
add
adc
and
add
add
inc
pusha
and
lret
orb
add
orb
adc
and
push
adcb
or
push
mov
or
add
xor
add
enter
and
inc
add
add
add
add
add
or
shlb
addb
inc
dec
or
and
pop
add
jns
or
and
add
adcb
push
add
pusha
or
add
cmp
pop
add
addl
sub
mov
add
jbe
and
adc
sub
add
and
xorl
add
adcl
push
inc
add
inc
add
inc
add
sbbb
adc
xchg
add
xchg
inc
adcb
rolb
inc
inc
mov
mov
fcoml
dec
adcb
inc
and
add
add
xorb
add
es
add
add
adc
mov
or
movb
adc
or
add
or
add
xor
add
jecxz
add
add
and
adc
add
ret
add
icebp
add
and
or
add
pop
mov
dec
add
adc
shlb
push
add
sbb
adc
add
adc
inc
inc
add
adc
rolb
add
mov
add
addb
add
sub
add
xor
inc
andb
addb
add
movl
mov
mov
add
sbb
adc
add
add
test
add
inc
sub
push
movsb
add
inc
pop
add
and
add
adc
pusha
inc
nop
and
add
andb
cmpsb
inc
add
or
loopne
add
push
add
add
add
or
and
add
add
enter
add
nop
and
add
nop
add
add
add
mov
and
sub
or
add
inc
add
fwait
add
or
and
addl
mov
add
add
adc
add
and
and
or
and
inc
mov
add
and
add
add
pop
add
and
rolb
and
add
add
mov
mov
adcl
pusha
adc
add
andb
add
or
xor
mov
add
or
test
add
or
sbb
sub
add
add
nop
jo
and
push
adc
sbb
inc
add
ret
inc
add
sbb
inc
add
or
test
add
adc
adc
push
or
addb
add
out
add
adc
inc
sub
add
or
add
adc
test
xchg
inc
xor
mov
add
or
adc
dec
adc
add
add
addb
add
or
add
add
mov
add
xor
add
or
add
mov
test
dec
dec
add
add
xor
aam
push
bound
add
inc
or
or
xor
add
test
addb
and
pop
add
andl
or
add
add
add
and
adc
adc
andb
addb
roll
inc
adc
mov
add
add
add
add
and
mov
adc
xorl
sub
adc
add
add
add
add
add
mov
add
dec
adc
add
nop
addb
add
add
add
andb
add
xor
push
adc
mov
add
sub
add
xchg
pusha
add
sub
push
inc
loopne
add
addb
add
inc
inc
inc
add
add
push
add
and
inc
sbb
add
jmp
or
add
pop
add
add
add
add
movsb
adc
and
inc
add
add
push
cmp
adc
or
add
nop
add
adcb
inc
dec
sldt
add
imul
and
add
inc
add
add
fmuls
add
add
addb
pop
adc
push
add
adc
mov
add
xchg
inc
test
inc
or
add
adc
addb
add
push
and
add
add
or
cmp
add
and
add
adc
add
add
mov
rolb
add
or
add
add
test
adc
adc
add
add
sub
lds
or
xchg
adc
add
add
add
inc
addb
inc
and
inc
inc
add
add
pop
or
add
xor
addb
add
inc
subb
inc
or
pusha
inc
addb
add
add
pusha
xchg
add
or
add
add
cwtl
jo
add
fs
or
inc
add
and
rolb
xchg
add
push
push
addb
add
or
adc
mov
add
inc
or
add
addb
pusha
enter
enter
adc
loopne
mov
adcb
add
or
add
mov
and
and
inc
jae
addb
or
inc
add
add
and
add
adc
adc
adc
add
add
push
movsb
add
inc
add
inc
add
pop
test
nop
loopne
add
dec
adc
add
dec
add
popa
add
call
adc
add
insb
add
adcb
pop
pusha
or
add
addb
add
lea
adc
mov
and
adc
adc
outsb
dec
and
test
xor
or
add
jo
orl
add
adc
mov
mov
fs
push
or
add
adc
inc
push
xor
adc
mov
lret
addb
inc
adc
adc
arpl
inc
mov
or
pusha
pop
and
or
push
add
addl
loop
add
push
add
adc
rorl
inc
add
xor
pop
into
nop
andb
mov
add
add
push
sbb
or
dec
add
cwtl
add
add
adc
or
add
add
andb
and
add
xor
or
add
adc
pusha
addb
or
add
pusha
adc
add
push
adc
add
dec
xor
andb
inc
addb
or
pusha
mov
test
or
xchg
add
add
pusha
addb
adc
movsb
test
adc
adc
and
add
add
or
push
add
add
add
add
or
dec
add
arpl
andb
or
add
adc
add
or
rolb
add
inc
inc
xorb
add
sbb
add
loopne
add
or
add
push
addl
add
rolb
addl
rolb
cmp
mov
adc
inc
dec
addb
pusha
add
adc
jo
adc
add
subb
icebp
sub
xor
rclb
add
rclb
dec
mov
push
add
add
add
add
dec
nop
dec
inc
inc
add
add
add
push
add
add
addb
inc
and
add
and
add
inc
add
or
addb
inc
inc
add
inc
cwtl
inc
xor
add
inc
add
inc
add
add
xor
add
add
adc
add
dec
add
mov
add
add
add
inc
add
and
add
add
add
or
sub
data16
adc
push
add
inc
add
and
sbb
inc
nop
adc
or
push
add
inc
and
and
orb
addb
add
or
les
and
add
add
mov
fmuls
or
or
es
add
adc
add
test
add
add
add
and
and
jo
add
add
add
add
ror
adc
add
add
add
add
inc
add
and
add
inc
add
adc
add
and
in
cs
dec
or
add
mov
inc
orb
add
add
and
inc
add
pusha
mov
and
addb
pusha
add
loop
or
add
add
add
mov
add
sbb
and
add
lea
sub
add
add
rclb
orb
add
addb
mov
add
addb
adc
add
add
add
and
pusha
and
andb
add
mov
adc
inc
xor
cmp
or
inc
add
add
adc
or
add
or
add
add
xchg
push
add
adc
inc
addl
or
add
inc
orb
movl
add
or
add
add
shl
and
add
inc
xorb
add
add
sbb
or
mov
in
adc
mov
pop
mov
xchg
and
jnp
mov
mov
jge
mov
mov
jno
sub
popa
jmp
iret
cltd
pop
pop
inc
stos
js
push
fisttpl
sub
xchg
icebp
xor
cmp
insb
push
pop
sbb
out
lret
inc
arpl
and
shrl
xchg
test
dec
cmpsl
dec
xor
pusha
jne
ret
and
cmp
lods
adc
mov
sub
cs
pop
sub
mov
rcll
ret
arpl
mov
insl
fsubp
mov
hlt
stc
int3
repnz
sub
mov
jne
jns
popa
js
cmp
fstps
lahf
mov
dec
gs
or
add
loop
xchg
in
movsb
out
das
lods
sahf
jl
xchg
cwtl
jge
mov
and
xchg
adc
in
es
add
push
xchg
push
aad
scas
push
jnp
dec
dec
push
jbe
sbb
xor
inc
mov
pop
add
or
btrl
mov
or
pop
repnz
imul
cmpsb
and
repz
jmp
jecxz
cwtl
sub
adc
int
in
arpl
scas
fiadds
loop
popa
loop
outsl
xor
mov
jg
outsb
cld
movsb
shlb
jb
jns
mov
in
push
xor
imul
pop
cmp
jnp
jge
jno
fwait
and
sub
loope
out
mov
mov
movsl
or
mov
mov
insb
cltd
imul
loope
leave
movsb
divl
xor
adcb
push
std
add
ja
test
jle
rolb
pop
addr16
jnp
sub
std
and
cmp
loop
push
sub
push
cmc
push
dec
jecxz
aas
add
lcall
icebp
jle
jge
cmpsb
push
data16
in
mov
add
jnp
xor
push
add
int3
push
lds
adc
mov
pop
loope
jns
cmp
adc
pop
jp
sbb
cmpsb
rcrb
out
jb
jl
xor
and
jne
sub
inc
inc
mov
fists
add
xor
cmp
and
or
xchg
sbb
xor
xchg
push
push
mov
xchg
leave
mov
loope
scas
inc
mov
push
or
push
and
dec
lods
mov
aad
loop
and
icebp
jae
cmp
out
bound
stc
imul
roll
jp
sub
je
sbb
mov
push
xchg
aad
movb
insl
test
and
sbb
dec
repnz
or
inc
incb
or
in
loope
ds
adc
les
pop
mov
adc
pop
pop
test
jg
lods
fwait
mov
xchg
push
lea
xchg
andb
cld
repz
cmpsl
inc
push
bound
jbe
jmp
fs
cmp
movl
adc
scas
jp
int3
cli
xchg
enter
mov
xchg
mov
mov
iret
mov
aad
xchg
jg
or
jl
mov
jmp
leave
and
adc
inc
in
addr16
mov
sub
icebp
in
jbe
or
sub
sub
xor
out
xlat
mov
pop
push
sbb
lret
cs
imul
and
cmpsb
mov
pop
daa
dec
das
aas
dec
or
dec
adc
push
push
or
sti
stc
in
inc
cld
outsb
sub
mov
jbe
mov
aam
fwait
aaa
fistps
andb
sbb
mov
cmp
mov
dec
mov
adc
pop
pop
cmp
pusha
pop
repnz
fisubl
pushl
mov
aad
mov
repz
negb
xchg
sbb
dec
in
gs
repnz
sbb
scas
div
or
test
mov
lahf
insb
sarl
and
jecxz
mov
test
and
pop
inc
mov
and
jno
mov
jae
adc
lret
in
int
sbb
rorb
aaa
insb
fcoms
xchg
add
jmp
aas
adc
dec
ret
sub
out
pop
adc
lret
cmpl
mov
clc
add
jmp
xor
mov
in
cmp
and
mov
jle
cmp
add
push
mov
pop
sbb
sub
call
arpl
cmpsl
push
and
cli
rclb
sahf
xor
cmc
and
ja
gs
pop
jg
sbb
sbb
mov
mull
push
shl
aas
into
push
cmpb
loopne
mov
bound
pusha
inc
daa
or
push
lods
adc
mov
pop
repz
mov
mov
ljmp
jae
mov
repnz
pop
add
pusha
ret
or
fldenv
out
sbb
es
roll
cmp
push
cs
and
xchg
mov
mov
sbb
pop
xchg
out
das
adc
movsl
repz
add
mov
xchg
pop
into
cmp
jl
push
insl
and
mov
jmp
and
iret
pop
jno
jae
dec
add
add
adcb
xchg
testl
add
add
popa
inc
cmp
dec
xchg
inc
ss
pop
push
xorl
mov
mov
fs
xor
loop
and
lods
fsubrl
rolb
add
mov
fcmove
pop
repz
leave
ja
ret
popa
pop
loop
out
addr16
and
mov
dec
in
xor
loope
icebp
pop
add
xchg
movsl
nop
or
aaa
mull
lods
mov
outsl
mov
daa
in
mov
in
sti
jg
ss
das
cli
aas
mov
test
xor
xchg
pop
out
inc
imul
in
jl,pt
cmp
inc
insl
in
test
cmp
xor
aad
out
adc
mov
jg
ja
mov
scas
xor
cmp
aas
aam
imul
xchg
cmp
les
gs
in
hlt
pop
cmp
das
aad
movl
xchg
push
push
scas
pop
outsl
shrb
std
repnz
add
in
cld
and
sub
jo
aad
ret
sbb
mov
jl
xchg
or
shll
and
and
cs
idiv
sbb
push
mov
and
je
cmp
xor
inc
cmp
jle
mov
adcb
or
punpcklbw
jnp
mov
rorb
lods
cmp
inc
cltd
pusha
mov
add
xor
or
and
cld
in
out
enter
in
sbb
test
sahf
push
jmp
out
iret
fs
addr16
daa
addr16
arpl
cmp
mov
and
and
inc
int
popa
ds
insb
cltd
imul
mov
add
sub
sub
cld
lcall
adc
adc
popa
or
js
mov
fmuls
std
test
jnp
mov
gs
push
or
arpl
sbb
loope
pusha
gs
in
fistpll
fdivs
cmp
lock
cs
jnp,pn
fwait
addr16
movsb
div
mov
hlt
cmpsb
push
pop
pop
loop
inc
xor
add
shlb
in
test
clc
movsb
movsb
loope
cmp
cmp
lock
mov
push
pop
adc
pop
adc
shrl
loop
movsb
cmc
jb
pop
pop
insl
jo
jns
popa
cwtl
int
mov
movsb
out
movsl
mov
mov
pop
mov
pop
dec
and
and
inc
cmp
shll
pop
sbb
pop
jbe
pop
xchg
inc
cmp
xchg
and
push
push
fwait
jae
xchg
cmp
mov
insb
arpl
movsb
aad
ljmp
rorb
pop
out
xor
pop
fwait
aad
fwait
push
loop
aam
fstpt
fcomip
sub
in
mov
jge
lods
mov
xor
and
push
sahf
adc
stos
push
sub
cmpsb
call
pop
fldenv
pop
xchg
pop
fcomps
or
mov
loope
adc
bound
push
sti
xlat
xor
or
mov
sahf
mov
lret
and
mov
fbld
mov
loope
popf
cld
into
jge
scas
jecxz
lret
xor
mov
les
std
mov
loop
pop
movsb
pop
sti
pop
mov
jo
popf
sbb
mov
decl
aaa
cmpsl
jno
sahf
in
fildl
sbb
jmp
mov
pop
pop
in
das
jo
push
std
sub
push
pop
orl
jp
mov
jns
adc
and
lds
movsl
xor
push
and
adc
jmp
jbe
and
sbb
and
cld
loopne
mov
xchg
push
daa
leave
repnz
out
sti
adc
into
xchg
mov
fidivrl
flds
or
xchg
mov
ljmpw
jecxz
mov
sub
and
and
loop
ret
movsl
xor
mov
sub
mov
movl
popl
daa
and
dec
cmc
inc
test
lret
popa
sbb
lods
dec
pop
dec
or
roll
xchg
arpl
and
dec
mov
sub
mov
pop
cmpsl
jle
push
or
xchg
adc
hlt
xchg
outsl
and
popa
jns
adc
cmp
push
mov
sti
fstpl
sahf
js
mov
add
inc
insl
pusha
jmp
sub
scas
adc
dec
jnp
lret
and
in
cmp
mov
dec
and
sbb
lods
mov
outsb
xlat
loope
mov
xchg
idivb
sub
icebp
or
nop/reserved
sarl
pusha
pop
fildll
mov
ret
or
es
fimull
xor
mov
leave
and
sahf
cs
test
jno
fildl
fwait
scas
xchg
test
push
cmp
adc
and
mov
xor
or
sbb
cmp
jecxz
test
popa
repz
jge
aam
lret
add
xor
adcb
xor
leave
xor
lods
imulb
adc
mov
arpl
mov
ret
or
repz
fidivrl
in
clc
or
mov
lahf
xchg
xchg
cmp
das
insb
in
ja
nop
push
in
mov
int
sti
cli
loope
xor
add
jle
jns
xchg
mov
adc
dec
push
sub
add
movsb
and
ja
rcr
jae
jecxz
add
sbb
out
gs
xor
sbb
xor
scas
loopne
int3
adc
add
mov
add
cmpsl
xchg
imul
aam
jmp
in
mov
mov
mov
inc
sbb
cltd
lds
inc
loop
dec
lret
in
roll
xchg
push
movsb
xlat
inc
loopne
sbb
inc
lret
mov
push
sub
inc
icebp
rclb
fwait
inc
arpl
in
cmc
xchg
loopne
andb
push
sub
imul
movsl
pop
jo
cmp
clc
jle
mov
mov
xchg
aad
push
andl
push
pop
cmp
cmp
ss
pop
adc
loope
pop
aaa
aad
out
loop
cld
cli
or
popf
test
pavgb
inc
cmp
out
cli
addl
xor
scas
and
and
lods
push
and
fsubr
aam
cmp
bound
and
das
sub
jp
int
jnp
push
sbb
mov
movsl
cmp
roll
pop
cli
fyl2x
and
mov
out
roll
push
sbbb
das
xor
and
rorb
iret
pop
and
pop
xor
icebp
mov
popa
push
or
xchg
mov
sub
rorb
mov
lret
push
bound
push
push
loop
lods
add
popa
add
sub
insl
sub
fwait
mov
mov
xorb
xchg
and
inc
daa
addb
pushf
dec
out
or
loopne
mov
sar
mov
or
mov
fwait
cmp
cmp
pop
push
xor
add
outsb
xchg
inc
andb
test
stc
pusha
sarl
cwtl
jcxz
jecxz
adc
rcr
jmp
xchg
jl
mov
cli
cmpsb
mov
stos
sarb
shlb
lahf
ss
fucompp
lods
xchg
pop
adc
je
arpl
pop
hlt
xor
pop
mov
jno
xlat
mull
sbb
loope
popa
cld
cmp
mov
test
jle
je
pop
adc
lds
and
cmp
mov
insb
and
pop
adc
mov
repz
jnp
call
and
fistpl
jno
out
cs
dec
arpl
negl
adc
ret
pop
inc
cmpsl
fstps
nop
jae
jle
pushf
sub
sti
jb
xchg
sub
cmpsb
int
test
add
pop
jp
and
arpl
adc
repnz
xor
cmp
sub
xor
test
and
sbb
dec
cmp
and
jae
aam
sti
jo
mov
test
test
sbb
or
lock
into
iret
ficompl
repnz
and
push
xlat
popa
inc
sub
aad
adc
daa
mov
int
loope
fldl
mull
sbb
lret
jns
stc
stc
sahf
dec
and
cmp
and
xor
mov
adc
mov
xchg
stc
lahf
cs
jo
and
shrb
sti
movsb
aas
push
cmp
add
inc
push
notb
and
inc
pop
ss
mov
fstpt
add
inc
inc
cltd
add
push
pop
bound
das
and
pop
divb
cmpb
movsb
inc
sarl
jae
mov
lret
shlb
fnstsw
pop
dec
cmc
push
inc
in
xchg
iret
push
arpl
mov
inc
sub
out
clc
xchg
ss
adc
and
jmp
loop
hlt
or
test
aaa
nop
cwtl
mov
repnz
loop
adc
bound
arpl
and
jmp
mov
mov
inc
xor
stc
adc
mov
aaa
sbb
ds
ret
push
rorl
jnp
cmp
mov
xchg
sqrtps
fstpl
aam
push
jne
dec
aad
and
dec
cltd
jmp
push
add
sub
outsb
jnp
cmp
sub
sub
into
push
xchg
xor
ja
sbb
jle
mov
dec
mov
out
sbb
loope
rcr
cmc
scas
enter
adc
push
pushf
ds
mov
and
vcomiss
or
cltd
adc
les
roll
inc
dec
mov
jl
mov
jl
pop
leave
push
sub
das
xor
sub
sub
movsl
sbb
loop
sar
gs
movb
or
sbb
mov
stc
mov
int
repz
lea
scas
xor
scas
adc
in
add
jnp
insb
shll
inc
and
mov
push
idiv
sahf
insb
std
or
fwait
mov
in
or
pushw
jne
shrb
mov
jecxz
xor
enter
sbb
and
je
addr16
movsl
fcmovu
mov
nop
fistpl
insb
sbb
pop
adc
push
add
jnp
cld
js
pop
enter
movsl
movups
dec
add
idiv
data16
addl
inc
pop
cmpsl
scas
shlb
mov
mov
sahf
pop
cmp
movsl
jo
and
fcoms
sub
mov
push
xor
leave
and
lock
cmp
inc
push
out
daa
add
jnp
xchg
and
in
inc
xor
out
sbb
scas
imul
wrmsr
sti
mov
xor
js
and
stos
std
push
mull
pop
sub
push
jle
lret
mov
decb
movsl
pop
xor
xlat
pop
cmpl
and
mov
dec
das
push
leave
and
and
xor
leave
pop
out
sbb
fldenv
js
and
shr
js
and
rorb
test
xorps
mov
add
push
add
movsb
ficoms
ljmp
sahf
mov
jg
and
xor
xorb
pushf
std
lcall
int
sar
data16
ja
stos
jmp
and
add
mov
mov
inc
out
mov
in
sbbl
pushl
add
das
cwtl
cmp
loope
loope
push
popa
lret
cmc
out
xchg
fs
sub
sti
and
mov
sub
data16
sub
sub
add
adc
jb
mov
aad
add
repnz
andl
mov
jb
inc
int3
fst
jae
and
cmp
pcmpgtw
dec
xchg
mov
cmp
psrld
bound
xor
sbb
gs
stos
push
or
cmp
cmp
fldcw
outsb
lret
fbld
mov
icebp
and
sahf
and
mov
out
and
arpl
sbb
mov
mov
pop
mov
loop
dec
leave
loope
dec
sub
lcall
push
sbb
or
fs
int
rorb
pushf
loope
mov
sub
lea
lea
xchg
xlat
loope
in
int
jge
pop
xchg
jnp
or
mov
jnp
jnp
in
cmpl
into
or
cmp
arpl
int3
dec
pusha
aas
xchg
out
lcall
mov
je
sahf
adc
mov
mov
push
test
xchg
gs
sub
rcr
call
xchg
adcl
enter
pusha
sbb
mov
movl
jg
aas
scas
les
clc
inc
push
iret
xor
add
test
clc
lds
add
dec
pop
imul
fs
call
mov
movsl
andb
xchg
or
repnz
jle,pt
dec
ret
add
movsb
and
adc
arpl
xchg
aad
daa
std
shlb
mov
mov
in
xchg
jo
rcrb
imul
adc
add
lods
jge
arpl
adc
adc
add
cmp
outsl
inc
test
adc
shll
xchg
aam
jle
mov
bound
into
loope
dec
lcall
dec
sbb
adc
or
add
out
fcompl
xor
cmp
loope
sub
push
and
stos
adc
mov
mov
adc
jl
sub
mov
cltd
jmp
sbb
cmpsb
and
inc
or
xorb
sbb
aas
sub
repnz
mov
and
call
in
das
xchg
cmpsl
repnz
icebp
sub
xor
xor
xlat
dec
in
mov
fdivs
scas
shrl
or
add
pushf
mov
in
xor
and
in
hlt
jo
push
daa
lods
push
enter
jnp
push
jl
mov
inc
push
pminsw
fiaddl
adc
inc
sub
adc
rorb
push
lea
add
or
inc
inc
clc
cmp
iret
adc
scas
sbb
ja
jno
or
dec
fldenv
inc
inc
mov
and
loope
mov
imul
lcall
movsl
dec
cmp
icebp
cmpsl
jl
push
dec
xor
add
and
inc
push
push
loop
gs
and
fstps
das
mov
shlb
push
inc
cmpsb
icebp
cli
and
xchg
xor
push
aas
fsubl
test
pop
mov
inc
stos
jbe
les
adc
or
ret
push
mov
test
cli
test
add
pusha
movsl
cmp
jno
mov
mov
jge
gs
cltd
cwtl
rorb
add
and
popa
out
add
sbb
ret
loop
dec
shlb
or
bound
cmp
xor
push
mov
test
cmp
mov
testl
adc
ss
sbb
std
mov
popf
std
loop
xor
les
and
xor
rcrl
mov
popl
fwait
and
mov
xchg
shll
adc
sbb
lock
or
add
and
xor
int3
mov
decl
fists
mov
pop
gs
xchg
aaa
jl
sbb
sti
jp
pop
jb
mov
and
inc
cmp
fistl
add
jecxz
das
push
cmp
jo
xor
or
cmc
lock
mov
sub
movsl
fisttpl
pushf
es
stos
add
mov
and
andl
jmp
sti
jmp
push
scas
hlt
sub
enter
sub
push
xchg
rclb
outsb
enter
arpl
insl
movsb
and
xchg
mov
out
sti
fsubs
jmp
xor
and
jle
scas
add
pop
out
and
mov
jmp
fisubs
xchg
and
and
int
or
jno
fisubrl
addr16
fistpl
lcall
mov
jmp
repnz
cli
ljmp
mov
cmp
imul
je
inc
xchg
and
mov
gs
in
mov
loop
in
mov
enter
sub
fucomi
loope
aam
xchg
clc
pop
adc
and
add
adc
not
jecxz
sahf
aas
cmpsl
jne
hlt
ror
mov
icebp
push
mov
movsl
and
ja
mov
sub
pop
js
jmp
and
lds
sbb
inc
adc
sub
mov
xchg
cmp
fucom
cmpb
sbb
cmp
push
in
jnp
mov
shrb
dec
adc
jecxz
mov
sub
jg
jno
xchg
sbb
cmp
sbb
jle
and
popf
mov
and
push
test
pop
xchg
fwait
push
insb
xor
inc
data16
mov
mov
mov
pop
lock
cmp
fiaddl
mov
outsb
fmull
arpl
cmp
mov
cmp
bound
mov
leave
jo
les
fbld
shlb
clc
enter
adc
jae
xchg
sbb
mov
push
rcll
jne
adc
lret
or
cmc
jne
fisubs
rolb
ljmp
lods
xor
xor
xchg
idiv
hlt
std
push
frstor
dec
sub
or
loope
cmp
mov
mov
jb
xor
das
mov
jmp
test
lcall
xchg
pop
je
and
fwait
and
push
out
mov
test
add
mov
mov
dec
adc
lods
add
push
sti
fmull
aas
push
jecxz
sbb
or
and
xchg
negl
mov
dec
arpl
mov
or
cmp
mov
push
pop
mov
xchg
hlt
fsubl
push
push
daa
dec
and
cli
and
add
in
out
int3
mov
in
cli
sbb
leave
and
sbb
cmp
fists
je
and
jns
mov
fwait
shrd
and
mov
mov
dec
ss
arpl
ret
subl
stc
dec
int
mov
xor
sub
jmp
ljmp
push
and
push
test
cmp
lahf
add
cmpb
pop
movsl
cltd
xorb
mov
pusha
add
jae
sbb
shll
ja
xchg
pop
sub
cmp
cmp
or
pop
mov
das
lock
xchg
add
test
sbb
pop
pop
adcb
cltd
movsl
gs
aad
xchg
lret
xor
cli
push
or
xchg
sbb
xchg
fstpt
cwtl
ficomps
arpl
cmp
push
or
adc
adc
in
test
int
jae
popa
adc
xchg
xchg
in
adc
sbb
lahf
mov
test
xor
fwait
lret
sub
rcrb
cmp
lahf
inc
push
loop
stos
lock
rcrl
sti
jmp
xchg
or
mov
or
xchg
out
loope
pop
cmpsl
xor
dec
sbb
mov
cmp
mov
sarl
mov
inc
jbe
pop
jecxz
lds
cmp
jg
sbb
xchg
fwait
mov
push
mov
push
andl
iret
loope
dec
arpl
mov
imulb
cmpsl
sahf
fdivs
jnp
leave
mov
mov
push
sub
inc
push
inc
jge
pop
int
xor
add
fs
out
jnp
adc
mov
sbb
mov
and
shrl
mov
xor
dec
or
pop
sbb
dec
inc
push
add
jecxz
pop
aas
outsb
cmp
test
aaa
cmpsl
mov
lret
xchg
or
mov
xchg
push
push
cmpsl
push
shll
fimull
mov
pop
fldenv
push
or
in
push
mov
cmp
stos
pop
mov
aam
jno
out
fwait
sub
clc
testl
cltd
inc
dec
insl
and
orl
dec
das
cmc
or
loope
xor
jbe
ss
jo
icebp
mov
lods
and
fs
xor
arpl
sbb
push
std
adc
mov
jle
ret
popf
pusha
adc
fcom
test
adc
mov
sbb
std
and
rorb
mov
sbb
inc
mov
ret
movsb
cmp
cmp
and
cltd
inc
jno
adc
outsl
out
aaa
js
push
int3
imul
outsl
clc
imul
cmp
jns
cld
test
cmp
jno
cmpsl
fidivrl
mov
int3
cmp
pop
fidivs
xor
or
push
mov
mov
or
and
dec
dec
lcall
les
mov
inc
add
lea
arpl
sub
mov
and
cmp
test
jecxz
mov
sbb
mov
in
shl
test
or
mov
jl
jle
ret
mov
ljmp
sbb
cltd
movsb
sbb
call
mov
daa
cmp
ret
mull
adc
arpl
sbb
lods
pop
jnp
rcll
jecxz
in
xor
and
sub
dec
out
jnp
por
mov
aas
dec
jl
add
add
mov
mov
sbb
sbb
movsl
xor
cmc
dec
aas
sti
std
out
inc
inc
loope
jne
push
lret
pop
dec
pop
and
jg
cld
lret
xlat
jp
sub
push
std
cmp
insb
mov
pushf
bound
rcll
and
and
ret
shlb
mov
dec
xor
fmuls
mov
xchg
fbstp
cld
inc
sbb
pop
jbe
jae
mov
mov
xchg
addr16
loop
test
inc
inc
jmp
test
sub
xor
sbb
push
jecxz
popf
das
xor
inc
sub
popa
rclb
add
dec
in
xchg
in
push
std
addr16
and
mov
test
aam
fstl
dec
sbb
arpl
xor
and
nop
sbb
cmc
pop
jmp
add
sub
mov
xlat
dec
fsts
cs
pop
sbb
push
lods
loope
or
sbb
clc
add
xor
roll
sub
jp
push
cmp
lea
arpl
add
adc
adc
fcmovnu
andb
pop
adc
push
sub
lret
xor
push
iret
movsl
add
mov
or
insl
jns
shll
lcall
movsl
push
les
pop
cmp
pop
ret
add
insl
or
in
and
jp
sub
aam
add
in
xchg
mov
mov
mov
xor
mov
pop
sub
loop
jo
jle
daa
mov
adc
adc
pusha
add
jne
shrl
enter
ja
cs
inc
xchg
clc
mov
and
adc
push
mov
addl
arpl
leave
and
or
dec
push
inc
lahf
mov
cmpb
cmpsl
es
sti
movsl
mov
or
out
jge
and
ror
imul
enter
sbb
stc
jmp
xor
rcrb
xchg
push
jmp
or
in
in
aam
inc
cmc
mov
jge
cmp
pushf
pop
in
rorl
add
mov
inc
lock
push
fcoml
cmp
xchg
into
mov
pop
int
mov
mov
ret
popa
push
xchg
insl
inc
sbb
movsl
loopew
lods
mov
mov
and
sbb
mov
mov
dec
lret
inc
and
int3
sbb
pcmpgtw
or
cltd
mov
jno
or
push
pop
testl
sbb
loope
pop
xor
xchg
and
pop
je
and
sbb
pop
test
lock
insb
movsl
divl
scas
shll
sub
movsb
pop
cmpsb
loopne
cmpsb
push
pop
addl
jnp
push
leave
ja
and
jnp
mov
mov
cs
push
clc
jp
fldenv
out
sbb
pushf
xor
mov
add
sub
and
jbe
mov
out
jl
incb
mov
inc
scas
sub
sub
lcall
insb
loop
addr16
andl
pop
mov
and
stos
sbb
jl
sti
xor
pop
mov
outsb
xor
in
sbb
and
std
mov
add
xchg
cs
and
les
or
fnstcw
xor
ss
sbb
inc
add
mov
lahf
sarl
fidivrl
test
mov
loope
and
sub
sub
cmpsl
scas
sbb
push
push
mov
lret
mov
loop
mov
or
loope
incl
adc
inc
jge
lret
sub
pop
cmp
sub
push
cs
and
mov
lods
sub
add
sti
cltd
add
mov
jns
push
sub
test
and
mov
or
cmc
xchg
rclb
adc
rolb
inc
cmpsl
push
outsb
testb
ljmp
xlat
daa
loope,pt
call
aad
icebp
xchg
popa
pushf
ret
mov
mov
and
cmc
jecxz
add
test
daa
call
cmp
xchg
fdivrs
adc
xor
hlt
insb
jne
cmp
xor
inc
adc
cmp
add
arpl
in
mov
arpl
cmp
call
in
loope
inc
fisubl
push
pop
jnp
es
ja
add
mov
xor
enter
lahf
mov
scas
add
loope
adc
pop
ds
or
and
xchg
xchg
stos
jp
mov
dec
int
add
sbb
pop
jle
icebp
repz
fs
push
movsl
mov
imul
add
xlat
jle
scas
or
adc
movsl
or
hlt
mov
xchg
dec
and
push
movsl
fwait
stos
jbe
stos
push
das
xor
lods
fsubrs
arpl
and
insb
sbb
adc
enter
xchg
cwtl
ficoml
dec
sub
fbld
sti
test
xchg
sub
add
cwtl
gs
jmp
jge
push
jnp
mov
and
and
and
lods
mov
popf
adc
sbb
mov
int
incb
add
jmp
pop
test
mov
inc
jo
sbb
call
insl
jg
xor
cmp
mov
and
in
mov
aas
push
push
mov
mov
mov
movsb
inc
pop
sbb
lock
int3
mov
int
sti
jns
div
lock
adc
sub
and
clc
outsl
btc
pop
jno
out
mov
or
mov
inc
sbb
ds
jge
sti
jg
mov
add
mov
cmpsb
push
daa
mov
push
in
pop
or
pop
daa
mov
add
lret
fdivl
sub
icebp
push
ds
pop
mulb
in
xor
leave
and
popf
into
or
stos
sub
sub
add
add
sti
sar
sbb
mov
jmp
dec
sub
repz
inc
and
outsl
ljmp
jecxz
icebp
inc
pop
dec
add
dec
add
out
hlt
dec
xor
dec
mov
pop
xchg
test
cmp
out
mov
mov
dec
xlat
shll
test
sub
jmp
push
sti
cld
pop
jmp
test
push
adc
popa
cmp
stc
cmpsl
ja
xchg
test
movsl
cmpsb
js
pop
jecxz
dec
adc
shll
test
jns
sbb
ja
mov
cmp
mov
mov
push
sub
xchg
xchg
dec
sbb
xor
adc
dec
iret
sub
sbb
cmp
arpl
test
xor
loope
frstors
xchg
mov
out
in
stos
inc
xchg
add
mov
dec
ds
test
push
and
push
add
cmp
jge
push
mov
lcall
popa
arpl
ret
add
mov
outsb
std
mov
fucomip
in
or
jne
aas
adc
sbb
and
enter
push
and
inc
inc
inc
push
or
loope
pop
inc
scas
icebp
int3
mov
push
cmp
or
cmpsl
cmp
rclb
mov
xchg
sbb
add
in
aas
rolb
xor
stos
and
cmp
cmc
adc
jecxz
xor
pop
inc
gs
and
mov
sbb
sub
jge
loop
pop
jnp
mov
cmp
out
in
in
mov
jnp
mov
roll
data16
push
aas
add
cld
and
fmull
sub
push
in
add
cli
jge
jo
ret
out
cmp
push
les
sub
push
int3
pop
mov
mov
aad
and
xchg
mov
push
push
sub
and
inc
and
and
push
jnp
sub
mov
and
xor
popa
xchg
mov
add
mov
mov
jg
test
test
jmp
gs
jge
icebp
scas
mov
andl
or
jmp
lods
aas
sbb
mov
ljmp
mov
jle
loop
int3
popa
sbb
push
xchg
shl
arpl
jg
filds
xor
add
test
push
shlb
and
sub
imul
je
outsb
sub
xor
mov
and
add
movsb
push
adc
adc
arpl
sbb
cmp
xchg
mov
jns
ret
inc
incb
push
sbb
call
jl
mov
adc
jbe
loopne
test
xchg
add
sub
cmp
cs
cmpsl
les
adc
sahf
icebp
outsb
cmp
loope
stos
mov
lock
adc
and
and
or
mov
lret
push
and
enter
mov
cmp
sub
jae
gs
xchg
lret
in
and
in
and
mov
xchg
push
jecxz
xor
inc
gs
pop
popa
adc
in
sub
xchg
and
stos
add
les
sti
add
xor
pushf
ffreep
mov
js
jbe
and
lods
jnp
pop
clc
in
add
das
xor
or
and
cld
add
call
pop
xchg
gs
shrl
ret
std
jbe
jg
lret
ljmp
adc
jl
fists
in
mov
test
sub
push
fcmovbe
cmp
loope
xchg
cli
test
movsl
stos
mov
jae
mov
add
sub
movsl
push
mov
adc
lahf
jge
push
sti
xchg
pause
dec
aas
cmc
xor
mov
pop
aad
outsb
sbbb
jge
mov
out
xor
adc
hlt
xchg
shlb
pop
push
les
fwait
pop
pop
into
repz
dec
or
jmp
dec
orb
mov
test
mov
data16
mov
gs
inc
rorb
mov
aaa
add
movsl
sub
add
mov
xor
lcall
mov
sbb
cmp
adc
psadbw
pop
daa
test
adc
fadds
adc
out
sahf
ret
adc
gs
rcr
in
jnp
cmp
inc
in
lea
lds
mov
ffree
icebp
dec
sbb
cmc
mov
jns
xor
dec
or
mov
rcl
xlat
aaa
push
mov
insl
inc
xchg
sbb
and
push
daa
sbb
sbb
mov
jecxz
xor
test
mov
movsl
xchg
jecxz
pop
lret
stos
daa
xchg
jp
mov
stc
xchg
cmp
sub
out
enter
in
rolb
inc
rclb
sti
pop
std
test
inc
push
cmp
mov
and
dec
ret
xchg
enter
inc
push
pop
xchg
mulb
mov
fs
sub
aad
or
cmc
popa
mov
repnz
ljmpw
std
and
imul
les
das
inc
add
sbb
push
cmp
sbb
pop
lret
dec
mov
xchg
mov
sbb
sub
mov
mov
xor
push
jmp
mov
jns
and
adc
pop
call
lret
push
mov
inc
pop
xor
das
xor
mov
test
mov
xlat
loop
jecxz,pn
inc
push
mov
mov
movsl
rclb
std
loope
sub
bound
popa
or
fcmovnu
push
push
in
icebp
sbb
pop
aaa
imul
pushw
jmp
dec
popa
rcrb
xchg
xchg
mov
gs
or
iret
add
cld
or
or
rcr
into
sub
into
js
and
push
mov
scas
dec
test
sti
add
push
or
mov
sbb
nop
mull
lret
std
push
xlat
aas
out
push
loopne
cmp
dec
in
push
dec
or
call
scas
jb
mov
call
mov
imul
arpl
sbb
xor
popa
wbinvd
nop
mov
sbb
rolb
lahf
push
sub
mov
cli
adc
jle
inc
inc
pop
in
gs
push
jne
jbe
or
add
adcl
sub
lcall
dec
mov
cmpsb
out
in
mov
adc
and
mov
dec
add
int
jmp
push
call
pop
mov
aas
and
push
push
xor
inc
mov
sbb
je
dec
jne
mov
push
add
mov
ss
push
movsl
xor
imul
sti
out
bound
cltd
es
xor
xlat
movsb
dec
out
test
jnp
enter
test
xor
inc
test
xchg
hlt
call
cmp
sti
idivl
cli
arpl
nop
ja
fs
out
add
repnz
add
lods
add
inc
or
and
fistpl
xchg
jo
xorl
jae
jno
rcr
daa
mov
mov
xor
pop
sbb
or
and
fsubr
push
test
mov
push
dec
in
mov
cmp
or
mov
ja
cmp
adc
jb
ja
imull
and
movsl
add
lock
mov
mov
sub
sub
enter
hlt
popf
xchg
mov
hlt
sub
js
mov
and
push
mov
test
xchg
mov
push
sahf
inc
in
mov
fs
fmuls
sarl
sub
jmp
rorl
enter
test
mov
pop
push
or
fwait
mov
fcmovnu
mov
fldlg2
jae
pop
scas
sub
dec
fstps
and
dec
and
int3
outsl
mov
jecxz
push
add
and
out
and
mov
and
pop
in
add
out
mov
mov
mov
xlat
sub
jmp
or
pop
jmp
lock
pusha
cmp
mov
xor
popa
sar
mov
fnstsw
pusha
jmp
pop
subl
jne
adc
mov
cwtl
adc
fcoms
push
push
loope
jb
shlb
and
push
in
outsl
aad
add
outsb
out
add
mov
das
arpl
mov
daa
dec
cs
and
mov
out
adc
xchg
adc
push
mov
mov
das
inc
mov
sub
decb
xor
int3
popa
dec
jnp
arpl
cli
mov
movsb
mov
in
out
cltd
lret
cmpsl
cmc
popa
mov
in
out
cmpsl
xchg
mov
incl
aas
xchg
dec
cmpsl
add
xchg
jle
cltd
arpl
mov
insl
cmc
loope
adc
lds
mov
stc
xchg
fsubp
or
in
stos
inc
lds
shrl
inc
mov
sti
leave
das
xchg
lods
sub
cmpsb
cmpsb
test
lods
enter
dec
cmp
xor
out
mov
imul
iret
add
inc
mov
lea
sti
shll
out
daa
fimull
add
or
popa
fwait
mov
add
cmpsl
pop
loopne
dec
mov
fsts
in
add
mov
xchg
iret
arpl
jecxz
jp
mov
fsubs
mov
xchg
and
rcrb
add
xchg
cltd
pusha
mov
or
lock
xor
fsub
fistpll
aaa
out
xor
stos
xchg
xor
xchg
loop
rcr
push
inc
dec
xchg
bound
fisttpl
test
push
xor
inc
lock
pop
add
add
test
pop
push
cs
adc
js
jnp
lods
lods
aas
xchg
mov
sbb
cmp
dec
mov
in
sti
xchg
outsl
jo
lock
loopne
pop
leave
imul
push
or
pop
arpl
sbb
mov
in
mov
and
arpl
and
pushf
addr16
out
stos
popa
cs
loope
jne
out
sbb
gs
cwtl
inc
jl
mov
ss
jl
rcrb
xor
pop
faddl
mov
jmp
pop
lods
jle
bound
adc
cmpsl
loope
out
clc
data16
xor
push
ja
call
scas
in
out
cltd
cld
lcall
fdivrl
in
xchg
cmp
subb
xor
jno
dec
das
loopne
inc
into
mov
lret
jecxz
sub
xchg
stos
adc
lods
pop
out
xor
jp
inc
xor
in
mov
shlb
lahf
sahf
iretw
mov
cmp
stos
jo
sbb
in
mov
add
xor
sti
or
add
ds
std
inc
mov
jno
push
bound
std
xlat
icebp
add
call
push
xchg
sbb
repz
sub
mov
stc
mov
mov
xlat
and
insl
mov
or
call
add
fsubrs
cmpsl
lcall
loope
movsl
cmc
hlt
xchg
lea
and
ret
cmc
mov
das
push
jns
adc
cmpsl
mull
and
outsl
add
mov
insb
cmpsl
push
xlat
loope
outsl
xchg
rclb
xchg
mov
adcl
pusha
insl
ljmp
dec
int
sti
mov
aas
outsl
psllq
cmc
out
sub
neg
and
mov
repz
jmp
ljmp
pop
fstpl
adc
testb
inc
sbb
and
idivb
mov
out
pop
or
ljmp
mov
or
shlb
dec
outsl
sub
and
add
imul
sub
xor
inc
mov
pop
test
mov
push
in
popa
gs
fsincos
or
movsl
shrl
or
jle
call
cltd
loop
scas
and
mov
mov
and
and
mov
subb
testb
and
dec
adc
in
divb
stos
xchg
adc
mov
cmp
jne
lods
cli
sub
and
mov
hlt
out
and
cmp
rclb
or
out
sti
push
shrb
fnsave
sub
daa
mov
je
adc
cmp
cmp
roll
into
push
jnp
pop
sub
loop
adc
jp
and
aas
pop
sbb
and
push
and
neg
sahf
cmp
jo
out
jae
pop
mov
mov
aad
movb
adc
icebp
in
mov
insl
sti
jnp
das
movsl
add
loop
add
cmp
add
fldcw
pushf
sub
jge
mov
loopne
cli
mov
lods
inc
cwtl
out
ljmp
push
mov
sbb
in
or
adc
push
repz
jnp
ljmp
jecxz
lcall
outsl
addr16
push
movsl
adc
xorb
pop
mov
pushf
jl
data16
adc
mov
jno
jg,pn
adcl
pop
jnp
rcr
jp
lcall
jg
jne
stc
rorb
js
aad
test
test
inc
sbb
sub
lods
cmp
adc
fs
or
shlb
stos
pop
in
cmp
jae
aaa
jmp
test
aad
pusha
sub
or
xor
sbb
aam
fsubr
aaa
or
dec
dec
adc
fs
xchg
mov
stc
jle
mov
cmpsb
xchg
push
imul
fnsave
sbb
mov
loope
rolb
out
and
cmpsb
cwtl
lock
movsl
mov
pusha
mov
sbb
imul
into
push
xchg
push
cmp
mov
sub
jae
add
xor
insb
inc
arpl
clc
push
loope
jmp
daa
xor
or
mov
push
mov
insl
pop
push
movsb
insl
jecxz
push
pop
movups
movsl
nop
leave
popa
dec
pop
in
add
cs
sbbb
jecxz
in
and
ret
and
cmp
xchg
push
and
test
adc
lds
jp
dec
mov
xor
mov
pushl
inc
stc
mov
aas
or
ret
cmc
insb
mov
inc
lds
in
mov
sbb
pop
jb
call
pop
jg
mov
outsb
xor
xor
fbstp
addr16
aam
xchg
mov
out
push
arpl
call
adc
aas
sub
pop
add
js
jbe
or
mov
clc
stos
push
jb
and
and
push
cltd
add
or
xchg
into
push
enter
sbb
dec
mulb
dec
cmp
mov
sti
xchg
mov
ds
sub
loope
rorb
xchg
xchg
testl
push
cmp
push
aad
jl
pusha
dec
scas
jmp
sub
cmpsb
shlb
cs
pop
fldenv
in
inc
dec
pop
or
push
mov
popa
out
fists
and
cmp
std
rcrl
and
arpl
insl
flds
mov
fsubrl
das
loopne
mov
fdivs
fsubrs
aaa
add
aaa
icebp
stc
cmp
stos
pop
lock
sbb
mov
inc
add
add
or
int
xor
mov
ret
jg
fndisi(8087
cmp
jbe
push
ret
sub
sbb
sbb
dec
leave
in
stc
in
sbb
mov
push
adc
adc
loop
mov
mov
or
lock
je
hlt
movsl
cmp
rolb
aas
imul
cmp
cmpsl
pop
test
or
jg
adc
repnz
pop
loope
test
cmpl
sub
clc
or
jge
lea
aas
pop
and
leave
aaa
shl
mov
xor
aam
cmpsb
loopne
aam
xor
aas
mov
or
cli
out
fldt
mov
and
and
add
in
sbb
mov
cltd
mulb
pop
inc
inc
mov
inc
insl
repnz
pop
loopne
movsl
mov
xchg
inc
roll
sbb
inc
adc
outsb
pop
cltd
clc
and
stos
lock
add
sahf
cmp
adc
xchg
dec
cli
ret
fcomps
sub
movsl
cld
sub
int
in
adc
jnp
and
mov
nop
test
ljmp
jl
in
loope
test
pop
pop
or
and
stos
add
aam
stos
pop
bound
cs
mov
push
jb
jns
push
stc
jge
mov
scas
sbb
sbb
mov
lret
mov
adc
sahf
insb
popf
popf
cmpsl
popa
mov
lcall
jnp
shlb
mov
out
fdiv
ss
sti
cmp
popf
enter
imul
cli
popa
cmpsb
jb
mov
jmp
movsl
sbb
ret
stc
in
cmp
mov
shrl
inc
stos
sbb
mov
sbb
push
neg
ret
gs
addr16
in
test
loope
filds
jnp
add
adc
in
jno
push
js
aad
jecxz
jb
xchg
ljmp
mulb
imul
cld
rcrb
lods
xor
shufps
pop
stos
xchg
add
mov
push
sbb
push
in
lcall
jnp
cmc
stos
cli
stos
pop
inc
or
shrl
dec
stc
loope
ficoml
pmulhw
imul
mov
and
dec
dec
cmp
std
cld
mov
jecxz
mov
sub
cmpsb
loope
pop
ret
int3
cmp
adc
xchg
ja
and
add
aaa
ret
jecxz
push
push
inc
sub
inc
daa
ret
scas
add
aad
mov
shll
xor
jo
out
mov
sahf
push
repnz
and
shlb
pusha
adcl
push
in
xchg
xlat
loop
and
popa
scas
daa
imul
mov
scas
jns
roll
pop
sub
or
or
mov
fildl
xchg
push
movsl
sub
pushf
dec
mov
addr16
push
nop
icebp
push
xor
adc
sub
inc
cmp
inc
movsb
xchg
or
inc
jle
sbb
cmp
sbb
sbb
lds
xchg
mov
jo
add
popa
pop
or
test
insl
insl
popf
cs
mov
test
add
jnp
or
cmp
inc
mov
xor
inc
outsl
frstor
push
mov
loopne
pop
and
in
aaa
sbb
into
cmp
std
loopne
mov
les
cmp
sbb
sbb
mov
popa
clc
jg
movsl
leave
scas
sub
pop
jl
sbb
add
imul
push
in
iret
add
cmp
and
das
dec
enter
xchg
inc
insb
adc
roll
dec
pop
repz
and
repnz
ja
test
insb
clc
push
xchg
bound
lret
into
xor
push
cltd
inc
test
arpl
js
ficomps
shlb
loope
adc
fldt
repnz
roll
dec
fsub
push
add
pop
dec
sbb
inc
les
cmc
jg
mov
and
sbb
mov
dec
test
push
repz
pop
cmp
data16
push
ja
fwait
sub
movsl
push
andl
mov
stos
aam
and
movsl
into
push
fs
jle
inc
fwait
sub
xchg
ret
sti
repz
adc
lret
mov
and
sbb
sbb
fsqrt
cmp
xor
sbb
jmp
push
jnp
outsb
mov
leave
gs
fs
addr16
add
in
rcll
in
mov
loope
xor
cmc
push
into
mov
jnp
ret
mov
sub
sbb
cmp
in
pop
add
adc
xor
mov
pop
es
jns
sub
add
cmp
cmp
ljmp
inc
icebp
cmpsl
mov
div
out
mov
xor
adc
pop
inc
call
or
sub
xor
pop
int3
lret
lea
sbb
xchg
ja
mov
push
sbb
or
stos
sbbb
lods
cmp
sub
xchg
fstl
movsb
jg
xchg
fstpt
adc
data16
arpl
cmc
push
leave
push
outsl
int3
insl
cmp
in
stc
push
jnp
and
ret
push
mov
or
subb
test
xor
cmc
out
fnstcw
inc
dec
cs
cmp
xchg
jge
loop
lods
out
push
push
xlat
jmp
imul
fwait
or
and
sti
or
repz
and
cmp
pushf
pushf
add
pop
add
dec
and
and
test
movsl
out
scas
inc
ja
sub
add
sbb
daa
shll
repz
xchg
in
cli
nop
xor
sahf
notl
jecxz
cmp
and
jae
sti
push
nop
pop
movsb
xor
ds
jne
mov
outsl
push
aad
xchg
fs
cmpb
push
fcmovbe
jecxz
cmpsl
sbb
cmp
pop
push
sbb
imul
es
inc
jb
add
push
cmpsb
les
sub
jl
aad
jbe
mov
xchg
fucom
adcb
mov
cmp
or
out
loope
sub
stos
addr16
cmpsl
pop
pusha
push
or
or
clc
mov
inc
repz
pop
movsl
cmp
adc
inc
leave
loope
mov
push
mov
outsl
add
add
jae
andb
mov
xchg
dec
out
jno
mov
adc
dec
push
and
loop
fucomp
stos
xor
mov
pop
adc
mov
add
dec
jecxz
and
in
ljmp
and
and
adc
rolb
jecxz
cmp
mov
data16
mov
sahf
jae
cmp
fbstp
jnp
jecxz
ret
dec
xor
xchg
adc
sti
in
loopne
or
in
imul
and
cltd
lock
xchg
or
adc
jnp
xor
hlt
sub
xor
jns
mov
sarb
mov
mov
jns
xor
push
and
jb
xchg
ret
mov
jmp
shlb
adc
mov
test
cmp
movl
xchg
and
nop
test
js
jbe
xchg
mov
and
pop
mov
cmp
ret
dec
jge
rcrb
mov
repnz
sbb
and
sbb
inc
xor
movsl
stos
and
sub
push
call
fstpt
push
mov
mov
in
jbe
adc
sub
mov
push
mov
ret
sbb
inc
enter
test
mov
mov
sti
mov
jmp
or
pop
cld
mov
lock
cmp
mov
mov
push
jne
jge
call
enter
lods
enter
cwtl
and
cmp
rclb
mov
outsl
lods
in
xor
xchg
or
jecxz
lret
daa
jb
sarl
in
and
sbb
mov
and
inc
and
imulb
push
mov
ret
fistps
mov
arpl
jle
xor
loope
dec
fcmovnu
push
jle
lcall
sbb
popa
lods
xor
into
mov
and
mov
in
xor
test
and
or
popa
jae
ljmp
in
xor
mov
sti
pop
aad
arpl
cmp
outsl
push
push
adc
jl
pusha
xchg
test
movsl
insl
dec
mov
fsts
mov
xor
rolb
mov
sub
hlt
and
pop
cmp
mov
gs
dec
push
pop
jnp
fs
outsb
dec
xchg
and
fisttps
insb
xor
mov
mov
push
mov
mov
jnp
mov
pop
jge
sbb
jmp
pushf
mov
pop
mov
cmp
in
js
loope
int3
jmp
aam
or
in
inc
mov
cmp
icebp
adc
sti
mov
sbb
pop
test
sahf
jmp
aad
xor
movsl
dec
aad
fistpll
out
and
xchg
shll
fwait
ret
out
xchg
loopne
adc
test
pop
xor
fisubl
lock
sbb
movups
lea
ret
jmp
and
cmp
add
sbb
popa
adc
sbb
mov
jmp
jnp
jecxz
inc
or
in
ret
dec
xchg
lock
jo
push
roll
mov
inc
scas
pop
sbb
cmp
xchg
inc
mov
pop
pop
add
insb
xor
jb
ljmp
ds
subl
int
mov
addb
imul
adc
adc
mov
imul
sbb
mov
xchg
dec
test
or
nop
jmp
and
fs
cmp
inc
and
jmp
sbb
popa
pop
xor
sbb
daa
xchg
jecxz
jno
and
repnz
popa
jae
loop
pusha
mov
jmp
add
mov
cmpsl
dec
jle
movsb
in
popa
test
adc
adc
outsb
sahf
ret
xchg
and
ljmp
js
loop
and
add
mov
ja
inc
cli
cmp
into
xchg
mov
cmp
dec
movsb
xor
and
sub
popf
push
cmp
pusha
popa
movsb
pop
bound
mov
mov
loop,pt
popf
in
sbb
xor
test
mov
dec
mov
stos
inc
insb
or
add
sbb
loope
roll
xor
xor
adc
fxch
subl
call
add
and
lret
xor
dec
lock
pop
loope
jno
ret
or
sti
in
pop
leavew
ss
add
mov
movsb
lods
add
dec
and
lods
jge
sahf
enter
mov
testb
fdiv
andb
sahf
xor
orl
scas
sbb
or
fcoms
add
cmp
cld
inc
inc
jb
insb
add
mov
mov
pop
rcrb
push
in
push
sbb
mov
inc
sbb
in
inc
and
jmp
adc
push
sub
jns
pop
xchg
sbb
lods
push
lret
or
push
ds
out
xchg
xor
and
or
pop
out
in
jo
sub
dec
gs
mov
sbb
push
mov
in
adc
mov
sub
in
pop
sub
enter
mov
xchg
push
push
enter
fsubrs
xorl
pushf
xor
and
cmp
jbe
int3
mov
and
mov
jge
gs
mov
jae
jmp
lea
arpl
sbb
stos
ds
adc
push
cmp
es
cwtl
inc
repnz
dec
call
pusha
mov
mov
push
cmc
mov
popf
in
addr16
jecxz
icebp
add
mov
fwait
xor
lods
adc
and
cmp
imul
jge
and
fidivl
cmp
jae
dec
lock
xchg
sub
jo
rcrb
pop
sarl
cmp
jnp
orl
or
lds
cwtl
mov
or
add
add
loop
pop
sub
inc
or
jmp
in
mov
mov
rcrb
push
and
jge
mov
sti
and
in
dec
popf
imul
enter
loopne
stos
cwtl
mov
movsl
dec
mov
jae
mov
mov
arpl
inc
sbb
loope
mov
int3
lret
xor
xchg
repz
iret
jno
cmp
sub
aaa
ja
add
mov
filds
clc
mov
popf
jb
mov
mov
int3
mov
xchg
notl
pop
add
loope
sbb
and
cmp
push
xor
sti
sarb
sub
stos
js
shr
xor
sahf
out
mov
fdivl
xor
pop
out
cmpsl
sahf
sub
lods
jae
sbb
int
xsavec
fs
mov
mov
jnp
pop
stc
sahf
inc
ljmp
add
jmp
dec
adc
imul
std
insb
xorb
pop
addb
icebp
xor
push
dec
imulb
adc
jp
arpl
xor
cli
dec
sub
scas
shlb
adc
cmp
ret
aam
fnstenv
sti
mov
jl
jne
testb
adc
movsl
sbb
insb
add
mov
repz
pop
les
push
cmp
and
mov
in
add
sbb
add
aad
cmp
mov
cmp
or
testl
iret
loop
fs
rorl
insl
jge
push
sarl
sub
adc
popf
mov
fbstp
and
int3
iret
out
or
mov
nop
xchg
sub
and
pop
push
or
std
adc
ss
cmp
shrl
lods
mov
mov
cmp
lret
movsl
mov
in
data16
pop
inc
jne
pop
jb
cmpsl
and
pop
jmp
lret
xlat
pop
shll
adc
fistpll
or
push
add
xor
aas
jmp
decl
lahf
je
ficompl
outsl
fwait
jne
gs
rcrl
push
or
dec
or
fldenv
xchg
cmp
mov
iret
ljmp
mov
and
mov
and
and
adc
mov
int
call
lods
jp
movsb
adc
inc
ss
in
and
and
in
repnz
xchg
jmp
lcall
xchg
into
aas
sbb
and
inc
js
lock
int3
push
xchg
rclb
pusha
imul
test
int
xchg
ja
popa
cmp
sub
sub
mov
in
in
stc
mov
pop
in
aam
and
jl
bound
and
sbb
pop
mov
mov
adc
add
rcrb
add
sbb
and
nop
mov
lret
cmovb
xchg
arpl
movb
adc
das
mov
xadd
gs
scas
fiadds
sti
arpl
cmc
test
fwait
movsb
dec
add
aam
fnstenv
ret
leave
pop
mov
loope
push
in
dec
and
cmp
cltd
xor
ret
adc
jae
jae
dec
icebp
es
cmp
add
cmp
aam
repz
push
add
ret
cmp
dec
add
ficomps
out
and
nop
xchg
insb
xor
jecxz
les
push
cmp
scas
ljmp
sub
sti
cwtl
aas
cmp
loopne
adc
jge
xor
add
lock
movsl
scas
sahf
add
add
incl
add
incl
add
incb
add
add
nop
incl
add
incl
add
incl
add
add
inc
incl
add
incl
add
incb
add
incb
add
add
add
add
add
add
add
add
add
add
aam
add
mov
add
add
add
add
add
or
add
fs
add
add
adc
add
lcall
add
add
add
add
push
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
add
add
add
and
add
stos
add
add
add
pusha
add
add
add
cmp
add
cmp
add
or
add
adc
add
faddl
add
and
add
jbe
add
call
add
add
movsb
add
add
add
add
out
add
add
add
add
ret
add
add
inc
add
add
add
add
add
add
add
add
add
test
add
out
add
add
add
pop
add
add
add
cld
add
add
add
add
add
mov
add
sbb
add
cld
push
add
loop
add
cld
or
add
or
add
or
add
pop
add
aam
add
and
add
and
add
inc
or
add
or
add
or
add
add
ljmp
add
push
add
xor
add
push
push
add
lcall
add
or
add
add
push
or
add
pop
add
mov
add
ds
add
push
add
cwtl
or
add
or
add
add
in
or
add
push
add
in
add
fimuls
add
sahf
pop
add
or
add
add
xchg
or
add
add
dec
or
add
add
xchg
pop
add
movsb
or
add
add
add
out
push
add
rorb
add
ret
add
add
or
add
add
add
and
add
pop
push
add
ret
add
add
or
add
pop
add
xor
add
insb
or
add
push
add
mov
or
add
add
or
add
pop
add
push
add
sub
add
insb
or
add
or
add
add
or
add
or
add
or
add
add
mov
add
fiadds
add
cld
add
add
adc
add
add
add
hlt
or
add
add
je
add
dec
lar
pushf
or
add
or
add
pushf
or
add
cmp
add
mov
or
add
or
add
jb
add
mov
add
add
add
add
hlt
or
add
hlt
or
add
or
add
add
lar
ljmp
add
or
add
or
add
push
add
push
or
add
dec
or
add
or
add
fmuls
add
push
add
mov
or
add
add
adc
add
push
add
push
push
add
and
add
ljmp
add
or
add
push
add
inc
or
add
pop
or
add
add
add
add
add
rorb
add
lar
int3
or
add
push
add
inc
lar
and
add
pusha
push
add
adc
add
mov
add
add
add
add
push
adc
add
lar
outsb
adc
add
adc
add
add
pop
adc
add
add
adc
add
add
mov
add
and
add
mov
add
in
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
push
adc
add
adc
add
adc
add
add
mov
add
int3
adc
add
adc
add
adc
add
add
add
add
inc
adc
add
adc
add
adc
add
add
adc
add
add
xchg
adc
add
adc
add
adc
add
adc
add
adc
add
add
xor
add
test
add
test
add
out
lar
lods
adc
add
add
int3
adc
add
adc
add
adc
add
adc
add
adc
add
add
sahf
lar
jl
add
fmuls
add
pop
adc
add
add
mov
add
adc
add
add
add
add
dec
adc
add
adc
add
add
add
add
adc
add
add
add
jp
add
push
adc
add
push
add
rclb
cmp
add
ficoms
add
adc
add
lock
add
add
add
adc
add
adc
add
cmp
add
repnz
add
sub
add
pusha
push
add
push
push
add
add
add
lret
add
pop
add
test
add
ficoms
add
inc
pop
add
movsb
push
add
xor
add
repnz
add
xchg
push
add
add
add
mov
add
add
add
add
add
xchg
pop
add
adcb
add
add
add
adc
pop
movb
pusha
das
inc
add
add
add
add
aam
inc
add
pusha
add
add
add
dec
dec
inc
xor
cs
insb
add
add
outsl
jo
popa
jb
popa
outsb
je
outsl
jo
add
add
gs
jb
jo
popa
jb
popa
outsb
je
jb
popa
jns
add
add
outsl
jo
popa
jb
popa
outsb
je
insb
gs
jb
add
add
gs
gs
insb
imul
add
add
push
dec
inc
inc
jb
insl
push
je
imul
jb
je
inc
insb
popa
jae
push
je
add
add
push
popa
jae
dec
gs
inc
jb
add
add
dec
popa
jb
push
je
jb
push
dec
outsb
je
jb
popa
arpl
outsb
push
je
gs
insl
add
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
add
insb
gs
jae
push
je
dec
gs
inc
outsl
inc
gs
outsb
je
jb
popa
arpl
outsb
fs
gs
gs
jae
push
je
gs
insl
add
add
inc
outsl
dec
outsb
imul
add
add
push
jb
je
inc
insl
je
jae
jb
jns
gs
je
add
add
push
outsb
imul
imul
inc
jb
popa
je
push
je
gs
insl
dec
outsb
dec
inc
insb
outsl
bound
add
push
push
dec
dec
dec
cs
insb
add
add
jb
jne
jb
push
popa
insb
jne
push
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
inc
gs
outsl
arpl
gs
outsb
outsw
push
add
add
push
gs
imul
bound
gs
add
add
inc
imul
add
add
je
jns
je
insl
push
imul
gs
js
je
outsl
fs
push
add
add
je
imul
bound
gs
add
add
inc
insb
outsl
bound
push
gs
insb
insb
outsl
arpl
add
dec
outsl
arpl
inc
jb
add
add
gs
je
dec
jne
gs
add
add
push
gs
fs
imul
jns
je
insl
push
imul
insb
gs
imul
inc
gs
gs
jo
popa
je
push
add
add
inc
insb
outsl
jae
dec
popa
outsb
fs
add
add
je
jns
je
insl
dec
outsb
outsw
add
add
je
jb
outsl
arpl
fs
js
push
add
add
popa
jo
jb
add
add
inc
insb
outsl
bound
push
outsb
insb
outsl
arpl
add
add
je
imul
add
dec
jne
je
inc
jns
gs
outsl
push
imul
add
inc
gs
imul
add
dec
outsb
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
add
outsb
fs
imul
gs
add
add
dec
outsl
jbe
inc
imul
add
imul
inc
jb
je
arpl
push
arpl
outsb
add
add
popa
jo
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
add
inc
jb
popa
je
inc
imul
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
imul
outsb
je
outsl
insb
add
add
je
imul
add
dec
gs
jo
insb
insb
outsl
arpl
add
dec
outsl
popa
fs
imul
add
add
dec
outsb
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
add
je
jne
inc
bound
push
je
imul
add
gs
je
push
push
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
imul
popa
je
add
add
inc
gs
gs
inc
imul
jae
jb
outsb
push
add
add
inc
gs
popa
je
inc
outsl
jb
popa
je
add
add
inc
jb
gs
imul
outsb
fs
js
je
push
add
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
insb
jae
jb
insl
jo
push
add
add
outsl
bound
inc
jb
add
add
push
imul
outsl
dec
jne
je
inc
jns
add
add
insb
gs
imul
jae
gs
push
imul
dec
jae
outsl
ja
xor
jb
arpl
jae
add
add
je
jb
outsl
jb
outsl
fs
add
inc
gs
imul
js
add
inc
outsl
insl
jo
jb
inc
imul
add
inc
gs
imul
je
add
add
gs
imul
add
inc
gs
gs
jo
imul
add
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
add
je
outsb
fs
inc
imul
gs
outsb
push
gs
js
gs
imul
gs
add
insb
jae
jb
insl
jo
add
add
push
popa
imul
insb
gs
bound
arpl
add
outsl
bound
dec
outsl
arpl
add
add
je
gs
imul
add
inc
gs
inc
push
add
add
inc
gs
jb
arpl
jae
gs
jo
add
add
je
jns
je
insl
push
imul
insb
gs
imul
insb
outsl
bound
inc
gs
gs
inc
je
insl
add
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
add
insb
gs
jae
dec
jne
gs
add
add
imul
jo
imul
inc
insb
outsl
bound
inc
fs
je
insl
push
add
add
inc
gs
push
dec
outsl
arpl
add
add
je
jb
jb
je
arpl
push
arpl
outsb
add
add
inc
gs
jb
arpl
fs
jae
add
add
inc
imul
outsl
dec
outsl
arpl
inc
imul
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
add
imul
add
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
add
inc
outsl
jb
popa
je
gs
popa
addr16
add
add
push
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
add
dec
jne
inc
imul
gs
outsl
fs
gs
imul
add
push
push
inc
push
xor
cs
insb
add
add
inc
gs
insb
addr16
je
insl
dec
outsb
je
add
inc
gs
jb
jns
jne
jae
jb
add
inc
gs
jns
je
insl
dec
gs
imul
push
push
jb
outsl
jb
add
add
insb
insb
push
imul
inc
jb
outsb
addr16
imul
push
outsl
jo
add
add
fs
jne
jae
jb
add
add
je
outsl
arpl
add
add
push
gs
arpl
gs
imul
add
je
outsb
jne
add
inc
gs
inc
add
add
je
imul
js
push
add
add
dec
outsl
outsb
imul
push
arpl
add
insb
gs
jae
inc
popa
jo
jne
add
add
inc
outsb
popa
bound
imul
add
inc
gs
outsb
arpl
je
jb
add
dec
outsl
popa
fs
je
imul
inc
gs
insb
imul
je
add
inc
gs
jb
jns
arpl
add
add
je
popa
jo
jne
add
add
inc
gs
jns
inc
outsl
insb
outsl
jb
add
push
gs
imul
add
fs
imul
add
fs
arpl
push
add
add
je
popa
jo
jne
add
add
inc
gs
jns
je
insl
dec
outsb
jne
add
inc
gs
popa
jb
je
outsl
jae
add
dec
jae
push
popa
imul
je
jo
gs
bound
arpl
js
add
dec
jae
outsb
jne
add
add
je
jb
jo
add
add
inc
insb
imul
arpl
outsb
add
add
push
outsl
jae
push
jne
je
gs
popa
add
add
popa
bound
arpl
insb
insb
inc
popa
jb
add
dec
outsb
je
jb
arpl
arpl
add
je
imul
outsb
addr16
add
add
inc
gs
insb
popa
jae
dec
outsb
outsw
push
add
add
insb
insb
push
arpl
add
push
gs
imul
jae
add
add
push
imul
add
push
gs
arpl
add
outsb
outsl
ja
jb
insl
push
outsl
imul
outsb
imul
add
add
je
gs
outsl
popa
jb
dec
popa
jns
jne
add
add
je
imul
arpl
add
jae
dec
gs
popa
addr16
add
add
inc
push
outsb
jne
je
insl
add
add
jb
outsb
push
outsl
inc
insb
imul
add
jne
insb
push
arpl
add
outsb
fs
imul
add
dec
gs
popa
addr16
gs
add
inc
gs
jne
dec
outsb
jne
add
add
fs
je
push
imul
add
inc
gs
jo
popa
je
push
arpl
add
insb
gs
jae
inc
inc
add
add
je
outsl
jns
outsb
jne
add
dec
outsl
popa
fs
outsb
jne
add
add
je
jne
jae
jb
add
push
je
outsb
push
arpl
add
dec
jae
arpl
jo
jns
add
dec
data16
je
arpl
add
push
popa
insb
imul
je
add
add
jae
gs
push
popa
jb
insl
gs
jb
dec
outsb
outsw
push
add
add
je
outsl
outsb
imul
push
add
add
je
outsl
jb
addr16
jne
fs
imul
add
inc
insb
imul
inc
outsl
jb
popa
je
jbe
imul
add
dec
outsb
jbe
insb
imul
je
add
add
jae
popa
addr16
outsl
js
add
add
push
imul
jae
bound
add
inc
gs
gs
popa
addr16
js
jb
dec
outsb
outsw
add
add
je
insb
addr16
je
insl
dec
outsb
je
add
push
gs
ja
imul
add
inc
gs
jne
jae
jb
outsl
jae
add
add
data16
popa
je
push
arpl
add
je
arpl
jo
jns
add
add
je
popa
jb
outsb
je
add
push
imul
imul
inc
outsl
jb
popa
je
add
add
push
gs
insb
popa
jae
dec
outsl
outsb
addr16
add
add
jo
push
arpl
add
inc
gs
insb
addr16
je
insl
add
add
push
gs
outsl
jbe
dec
outsb
jne
add
add
imul
jae
addr16
add
add
inc
gs
imul
add
add
je
gs
je
je
add
add
je
imul
outsb
addr16
add
add
push
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
add
fs
insl
popa
addr16
add
add
push
outsb
fs
gs
popa
addr16
add
add
inc
push
insb
addr16
jne
je
outsb
add
add
push
jb
arpl
outsl
jne
gs
jbe
outsb
je
dec
push
push
inc
push
push
cs
insb
add
add
ja
jae
arpl
add
add
imul
xor
arpl
je
outsl
outsb
inc
inc
push
inc
inc
inc
pop
pop
add
add
pop
insb
outsl
arpl
add
popa
bound
je
add
pop
pop
jae
je
jae
jb
popa
je
gs
add
add
pop
pop
pop
insb
arpl
popa
outsb
fs
gs
data16
arpl
add
pop
gs
outsb
outsl
add
add
pop
inc
dec
jae
jb
add
add
ja
popa
je
gs
gs
imul
inc
push
inc
inc
pop
pop
add
add
popa
insb
insb
outsb
gs
add
add
dec
arpl
add
add
pop
pop
jne
arpl
addr16
arpl
je
outsl
outsb
add
add
pop
pop
addr16
popa
imul
add
pop
bound
imul
fs
add
add
jae
outsl
jne
add
add
insl
jae
pop
gs
je
add
add
jo
je
jo
pop
data16
arpl
add
imul
add
add
outsb
add
add
je
insb
outsl
ja
jb
add
pop
pop
fs
insb
outsl
outsb
gs
je
add
pop
pop
pop
insl
bound
jne
pop
insl
popa
js
data16
arpl
add
add
ja
gs
popa
imul
add
add
popa
insb
arpl
jbe
add
add
outsb
imul
add
je
imul
dec
je
outsb
add
add
pop
pop
ja
jb
jbe
add
pop
outsl
outsb
gs
je
add
pop
gs
je
add
aas
je
jb
imul
pop
inc
pop
pop
pop
add
add
gs
je
add
add
jae
ja
jb
outsb
je
add
add
insl
bound
jne
pop
insl
popa
js
add
add
jo
pop
insw
outsl
fs
add
aas
aas
xor
arpl
je
outsl
outsb
inc
inc
push
inc
inc
inc
pop
pop
add
add
pop
pop
arpl
dec
inc
dec
popa
jo
je
imul
insl
gs
jae
je
add
add
js
push
push
js
gs
imul
pop
inc
dec
jae
outsb
add
add
aas
aas
xor
arpl
je
outsl
outsb
inc
inc
push
inc
inc
inc
inc
inc
push
xor
pop
add
add
aas
xor
arpl
je
outsl
outsb
inc
inc
push
inc
inc
inc
inc
inc
push
inc
inc
inc
pop
add
add
arpl
inc
gs
je
imul
push
add
add
aas
xor
fs
arpl
je
inc
push
inc
inc
inc
inc
inc
push
xor
pop
add
add
pop
jne
insb
outsl
arpl
add
pop
ja
jae
jne
add
add
je
outsl
arpl
add
add
insl
arpl
add
add
aas
aas
xor
gs
imul
inc
inc
inc
pop
pop
add
add
pop
ja
gs
outsl
arpl
add
add
push
push
inc
jns
popa
insl
imul
add
pop
pop
jae
je
popa
jo
pop
je
jo
add
add
pop
arpl
je
outsl
insb
data16
add
add
jo
pop
arpl
insl
outsl
fs
add
data16
add
add
pop
ja
jae
arpl
add
add
insl
gs
arpl
add
add
pop
jae
jb
outsl
imul
imul
add
add
imul
pop
pop
popa
jb
arpl
add
add
arpl
insb
outsb
add
add
jae
arpl
add
add
pop
insb
arpl
outsl
fs
addr16
data16
arpl
add
jae
jb
jae
outsb
add
add
aas
xor
fs
arpl
je
inc
push
inc
inc
inc
pop
pop
add
add
dec
popa
je
outsb
xor
add
add
jne
arpl
insb
add
add
je
je
jne
ss
add
add
insb
insb
outsl
arpl
add
add
arpl
inc
imul
dec
xor
cs
insb
add
add
jae
jp
push
popa
insb
gs
add
add
je
gs
dec
gs
imul
inc
imul
add
je
outsb
inc
outsl
js
add
push
gs
popa
insb
gs
gs
outsb
je
imul
gs
gs
inc
popa
arpl
add
add
inc
jb
popa
je
push
popa
je
gs
inc
jb
jae
add
add
push
gs
imul
inc
js
inc
js
add
add
je
gs
jb
jae
inc
outsl
insb
outsl
jb
add
push
gs
outsl
jb
inc
inc
add
add
jb
popa
insb
imul
arpl
add
je
insb
outsl
outsl
fs
imul
gs
dec
inc
imul
insb
gs
inc
inc
add
add
inc
js
push
gs
arpl
imul
add
inc
gs
imul
add
gs
je
inc
imul
add
gs
je
dec
popa
insb
data16
outsb
gs
popa
insb
gs
add
add
gs
je
inc
dec
inc
push
arpl
outsb
add
add
inc
jb
popa
je
inc
outsl
outsb
je
outsb
imul
add
inc
imul
insb
outsb
add
add
arpl
insb
add
add
je
jb
jae
dec
jb
inc
js
add
inc
jb
popa
je
inc
outsl
outsb
je
add
add
je
insb
je
add
add
je
jb
jae
dec
jb
inc
js
add
push
gs
popa
jo
outsl
fs
add
inc
gs
gs
jb
jae
push
popa
insb
gs
gs
outsb
fs
add
add
gs
je
inc
dec
inc
imul
add
je
imul
add
insb
arpl
insb
gs
add
add
je
gs
inc
outsl
insb
outsl
jb
add
add
je
dec
inc
imul
jb
je
push
add
add
gs
je
inc
inc
push
add
add
imul
outsb
je
imul
je
bound
arpl
add
add
je
dec
inc
imul
imul
gs
jne
jb
outsb
je
bound
arpl
add
dec
push
je
inc
push
add
add
push
gs
insb
imul
je
add
add
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
add
add
insb
jns
imul
push
je
gs
push
je
add
add
je
je
arpl
bound
arpl
add
push
gs
dec
push
xor
add
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
imul
add
gs
outsl
add
add
push
popa
jbe
inc
inc
add
add
inc
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
je
je
gs
push
outsl
fs
add
insb
arpl
push
arpl
add
inc
jb
popa
je
push
arpl
outsb
add
add
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
add
inc
jb
popa
je
push
outsl
insb
imul
add
add
gs
dec
bound
arpl
add
dec
data16
je
outsb
add
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
gs
je
push
outsb
add
add
je
insb
je
add
add
gs
je
push
arpl
outsb
dec
outsb
imul
add
insb
jns
outsl
outsb
add
add
je
popa
insb
gs
gs
outsb
je
imul
jb
popa
je
push
popa
insb
gs
add
add
jbe
push
outsl
inc
js
add
add
je
gs
arpl
popa
jo
add
add
je
imul
outsl
jb
add
add
gs
je
inc
outsl
insl
jo
je
bound
inc
add
add
inc
jb
popa
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
add
inc
gs
gs
inc
js
outsb
je
outsl
imul
add
push
insb
popa
jns
gs
inc
imul
outsl
insl
bound
gs
outsb
add
inc
dec
dec
inc
dec
inc
xor
cs
insb
add
add
inc
gs
jo
outsb
inc
imul
add
add
inc
gs
popa
jbe
inc
imul
add
add
inc
gs
imul
push
add
push
inc
push
dec
xor
cs
insb
add
add
push
gs
gs
gs
dec
gs
add
add
addr16
jne
jb
dec
outsb
outsw
dec
gs
add
add
dec
jo
outsb
push
inc
dec
popa
outsb
popa
addr16
add
add
dec
jo
outsb
push
gs
imul
add
addr16
outsb
jne
dec
gs
js
add
add
jb
jo
inc
imul
push
gs
insb
outsl
jae
dec
gs
add
push
gs
gs
popa
insb
jne
inc
js
add
add
push
gs
jo
outsb
dec
gs
js
add
add
addr16
outsb
jne
push
popa
insb
jne
push
add
add
gs
push
gs
imul
imul
insb
outsl
jae
push
gs
imul
insb
add
add
push
gs
popa
insl
gs
arpl
imul
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
add
inc
gs
popa
insl
gs
arpl
imul
add
add
addr16
jb
popa
je
dec
gs
js
add
add
arpl
jo
inc
imul
dec
push
inc
push
dec
cs
insb
add
add
push
je
inc
jne
push
add
add
je
push
je
imul
add
push
dec
dec
dec
dec
cs
insb
add
add
gs
gs
imul
inc
push
dec
xor
cs
insb
add
add
inc
jb
popa
je
push
jb
jo
jb
jns
push
popa
addr16
add
add
dec
insl
popa
addr16
imul
dec
insl
popa
addr16
outsl
jne
je
add
push
jb
jo
jb
jns
push
add
add
dec
insl
popa
addr16
imul
ja
add
add
popa
addr16
imul
outsl
jbe
add
add
dec
insl
popa
addr16
imul
insb
popa
arpl
arpl
add
inc
dec
dec
xor
cs
insb
add
add
addr16
imul
add
push
dec
inc
push
dec
outsl
je
data16
add
add
inc
jb
popa
je
push
push
je
insl
add
add
addr16
jne
jb
inc
imul
push
dec
inc
fs
outsl
push
arpl
je
outsl
arpl
add
push
dec
inc
gs
outsl
insb
fs
popa
je
push
add
add
push
dec
inc
imul
jb
outsb
je
add
add
gs
insb
inc
js
arpl
gs
js
add
add
inc
gs
jo
arpl
insb
inc
outsl
insb
fs
popa
je
push
add
add
push
popa
jb
gs
imul
popa
insl
add
add
push
push
bound
je
add
inc
dec
dec
cs
insb
add
add
insb
dec
outsb
imul
gs
je
imul
inc
push
push
xor
fs
insb
add
add
push
jo
push
je
imul
push
add
add
push
jne
fs
outsl
push
je
imul
add
enter
xchg
clc
add
adc
add
push
add
add
clc
add
sbb
add
xor
add
fdivr
add
pop
sbb
add
add
add
rcrb
add
add
test
add
in
add
jb
add
test
add
or
add
push
adc
add
std
add
sbb
add
pop
adc
add
std
add
pusha
push
add
mov
incb
add
add
adc
add
je
add
in
add
cmp
add
nop
push
add
js
add
push
incb
add
push
add
push
pop
add
test
add
enter
jbe
add
mov
add
and
add
in
incl
add
incb
add
add
nop
incl
add
incl
add
incl
add
add
inc
incl
add
incl
add
incb
add
incb
add
add
add
add
add
add
add
add
add
add
aam
add
mov
add
add
add
add
add
or
add
fs
add
add
adc
add
lcall
add
add
add
add
push
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
add
add
add
and
add
stos
add
add
add
pusha
add
add
add
cmp
add
cmp
add
or
add
adc
add
faddl
add
and
add
jbe
add
call
add
add
movsb
add
add
add
add
out
add
add
add
add
ret
add
add
inc
add
add
add
add
add
add
add
add
add
test
add
out
add
add
add
pop
add
add
add
cld
add
add
add
add
add
mov
add
sbb
add
cld
push
add
loop
add
cld
or
add
or
add
or
add
pop
add
aam
add
and
add
and
add
inc
or
add
or
add
or
add
add
ljmp
add
push
add
xor
add
push
push
add
lcall
add
or
add
add
push
or
add
pop
add
mov
add
ds
add
push
add
cwtl
or
add
or
add
add
in
or
add
push
add
in
add
fimuls
add
sahf
pop
add
or
add
add
xchg
or
add
add
dec
or
add
add
xchg
pop
add
movsb
or
add
add
add
out
push
add
rorb
add
ret
add
add
or
add
add
add
and
add
pop
push
add
ret
add
add
or
add
pop
add
xor
add
insb
or
add
push
add
mov
or
add
add
or
add
pop
add
push
add
sub
add
insb
or
add
or
add
add
or
add
or
add
or
add
add
mov
add
fiadds
add
cld
add
add
adc
add
add
add
hlt
or
add
add
je
add
dec
lar
pushf
or
add
or
add
pushf
or
add
cmp
add
mov
or
add
or
add
jb
add
mov
add
add
add
add
hlt
or
add
hlt
or
add
or
add
add
lar
ljmp
add
or
add
or
add
push
add
push
or
add
dec
or
add
or
add
fmuls
add
push
add
mov
or
add
add
adc
add
push
add
push
push
add
and
add
ljmp
add
or
add
push
add
inc
or
add
pop
or
add
add
add
add
add
rorb
add
lar
int3
or
add
push
add
inc
lar
and
add
pusha
push
add
adc
add
mov
add
add
add
add
push
adc
add
lar
outsb
adc
add
adc
add
add
pop
adc
add
add
adc
add
add
mov
add
and
add
mov
add
in
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
push
adc
add
adc
add
adc
add
add
mov
add
int3
adc
add
adc
add
adc
add
add
add
add
inc
adc
add
adc
add
adc
add
add
adc
add
add
xchg
adc
add
adc
add
adc
add
adc
add
adc
add
add
xor
add
test
add
test
add
out
lar
lods
adc
add
add
int3
adc
add
adc
add
adc
add
adc
add
adc
add
add
sahf
lar
jl
add
fmuls
add
pop
adc
add
add
mov
add
adc
add
add
add
add
dec
adc
add
adc
add
add
add
add
adc
add
add
add
jp
add
push
adc
add
push
add
rclb
cmp
add
ficoms
add
adc
add
lock
add
add
add
adc
add
adc
add
cmp
add
repnz
add
sub
add
pusha
push
add
push
push
add
add
add
lret
add
pop
add
test
add
ficoms
add
inc
pop
add
movsb
push
add
xor
add
repnz
add
xchg
push
add
add
add
mov
add
add
add
add
add
xchg
pop
add
adcb
add
add
add
js
adc
push
mov
jp
fistl
mov
mov
pop
aaa
sbb
nop
pop
and
mov
add
popa
lret
pusha
add
and
xchg
mov
add
add
inc
dec
push
push
push
shrb
xlat
movsl
jp
push
xor
push
sbb
cmpsb
lahf
in
cmc
loope
bound
adcl
repz
repz
xor
test
test
dec
mov
cld
mov
adc
jg
ja
popa
jl
cmp
sbb
addb
jmp
ljmp
jns
mov
sub
into
lods
sti
clc
inc
xor
cmp
nop
dec
aaa
mov
push
xchg
and
mov
ret
xchg
push
mov
sub
xlat
mov
mov
jbe
outsl
push
cmp
lret
sti
mov
and
cmc
push
mov
adc
mov
and
inc
mov
mov
dec
int3
xchg
or
push
fs
je
sti
popa
mov
les
sub
shlb
loope
sahf
ret
adc
mov
nop
cltd
fwait
xlat
pop
fwait
pop
fwait
cmp
mov
fcomip
ljmp
loop
xchg
mov
jb
lret
push
fdivrl
jl
jnp
and
bound
sti
repz
scas
push
lods
fisttps
adc
sub
jp
xchg
mov
sub
std
push
mov
movsl
bound
push
call
out
xchg
fcmovu
icebp
xor
aad
lret
sbb
pop
and
sub
add
gs
mov
xchg
aas
sbb
dec
in
xchg
xor
pop
xchg
jbe
mov
cs
cmp
jno
sbb
add
mov
mov
imul
pop
outsb
push
fstpl
xchg
outsl
fnstcw
push
fnstsw
mov
fbld
ljmp
mov
adc
mov
sbb
mov
push
lods
stc
or
jecxz
xchg
cmp
loope
and
mov
pop
ljmp
imul
jo
data16
shlb
inc
dec
xor
cmp
mov
mov
stos
xlat
or
stc
int
sahf
test
adc
jecxz
dec
cmp
mov
cmp
lret
push
pop
scas
mov
lds
movsl
cmp
ljmp
or
or
lods
xchg
mov
jl
mov
adc
xor
out
lret
dec
xchg
fcmovnb
jae
xor
cmp
cltd
and
notb
sbb
and
mov
cmp
icebp
cmp
movsb
push
dec
sbb
xchg
jnp
mov
lret
and
pop
pushf
sub
gs
pop
xor
push
push
adc
mov
sbb
mov
mov
test
xor
sbb
pop
lds
or
add
call
or
leave
xor
pop
cmp
xorb
and
or
add
jno
in
aam
xchg
aaa
int3
stc
jo
lcall
clc
fsts
xchg
mov
subl
into
add
in
ja
movsl
fcmovu
mov
pop
lock
xor
or
pop
push
push
and
cmc
mov
mov
xorl
mov
mov
jmp
call
xchg
stos
jmp
sbb
test
aas
packsswb
adc
cwtl
xor
mov
clc
iret
clc
lock
push
push
mov
das
call
fcoms
sahf
inc
mov
mov
sbb
repz
xlat
xor
xor
fists
sbb
mov
jb
in
mov
loope
mov
insb
add
loope
mov
imul
xor
lock
test
mov
insb
repz
daa
adc
xchg
movsl
mov
stos
decl
es
mov
mov
lea
mov
in
test
inc
lahf
loope
xor
adc
inc
in
xchg
push
inc
movsw
jne
imull
and
jp
sti
notl
movsl
lods
imul
popl
pop
jmpw
xchg
and
idivb
mov
pusha
mov
popf
mov
jbe
mov
jne
jmp
daa
push
lock
in
or
mov
movsl
add
sbb
stc
pushf
shlb
lahf
cmp
jae
cmpsb
sbb
jnp
xorl
sbb
cmpsb
jne
in
cmpsl
ret
into
push
and
int3
stc
hlt
inc
and
inc
push
push
add
daa
cltd
cmp
popa
daa
mov
js
fcompl
push
and
in
push
jg
xchg
int
and
dec
sbb
add
and
fiaddl
std
aam
popa
insb
insl
or
je
popa
push
stos
pop
pop
adc
push
rolb
ss
and
mov
sarl
out
xor
jne
imul
inc
divb
inc
in
sti
cmp
rol
popa
stc
pusha
flds
adc
mov
icebp
fisttpll
xchg
jmp
movsl
lahf
std
add
sarl
cmpsl
pop
fnstsw
push
cmp
xchg
mov
jnp
push
pop
xorl
cmp
ds
jl
imul
sub
dec
or
mov
push
fistpll
in
jmp
fbld
dec
jge
adc
jp
push
and
push
in
cmp
and
dec
in
or
mov
adc
out
leave
dec
sbb
imulb
arpl
pop
xor
xor
loopne
aad
inc
jmp
mov
gs
cmp
data16
xchg
sti
int3
inc
jno
jecxz
adc
cmp
mov
push
roll
ret
sahf
xchg
insl
xor
shll
clc
pop
cli
jp
and
inc
jecxz
push
gs
lahf
loopne
cmp
xchg
iret
dec
xor
pop
sbb
mov
or
pop
mov
scas
mov
push
gs
in
ja
mov
test
or
movsl
cmp
shlb
mov
push
popf
shr
gs
and
adc
jnp
inc
sbb
aaa
mov
rcr
pop
mov
mov
lret
icebp
ror
in
inc
jne
and
jo
bound
sti
test
ret
lcall
sub
jg
sub
adc
and
daa
mov
in
repz
jge
mov
push
or
loopne
sarl
sbbl
out
jno
inc
xchg
mov
mov
jns
gs
add
pop
mov
pusha
pop
sub
sub
popf
pusha
push
mov
xchg
add
loope
in
testb
xchg
pop
gs
sbb
stos
mov
push
frstor
nop
insb
icebp
hlt
out
ja
sbb
adc
stos
mov
mov
xor
daa
fbstp
ds
cmp
sti
cmp
fdivp
sbb
jmp
xor
rcrb
add
call
mov
jmp
dec
fwait
loopne
mov
fsubl
push
add
gs
sarl
inc
xor
fs
push
inc
push
stc
mov
xor
and
andb
fstp
jle
pop
outsl
aaa
push
mov
xchg
cwtl
pop
bound
ds
add
std
pop
frstor
dec
jns
sti
in
aaa
adc
stos
mov
popa
mov
movsl
jl
sbb
mov
push
inc
arpl
mov
mov
pop
pushf
insl
and
mov
in
test
jns
ja
and
sbb
mov
push
adc
pop
andb
stos
and
sbb
pop
cmp
adc
imulb
xor
xor
je
jecxz
push
cmc
hlt
iret
adc
jge
or
fsubl
rorl
adc
mov
push
mov
stos
xor
test
and
pop
in
inc
sbb
cmp
dec
fwait
xor
rcrb
cs
shll
adc
sarl
repnz
data16
mov
and
mov
gs
and
push
mov
cld
fdiv
hlt
sub
cmp
mov
jmp
in
mov
cmpb
pushf
mov
xor
mov
aad
lahf
mov
fisubrl
mov
mov
mov
addb
scas
and
mov
int
popa
fs
ja
in
sub
aas
stos
daa
je
jecxz
inc
fiaddl
incl
mull
mov
rcrb
xlat
push
xchg
fisubrs
xchg
pop
inc
cmpsl
les
sub
out
inc
lock
mov
pop
in
in
adc
xchg
and
sbb
push
hlt
shl
test
add
jmp
xchg
mov
pop
clc
popa
std
or
push
jp
not
ffree
into
scas
pop
rolb
ret
push
loope
cli
cs
push
mov
jle
in
mov
dec
mov
addr16
xor
rol
push
out
and
mov
clc
sub
xchg
mov
cmp
adc
sub
cmp
call
xchg
rcrl
push
pop
je
cmp
adc
and
into
mov
add
cmpsl
cmp
push
mov
mov
divb
add
and
adc
lret
imul
add
inc
jns
lods
dec
or
pop
adc
fimull
pop
pop
push
sbb
cmp
push
pop
mov
mov
cmp
add
jecxz
repnz
add
inc
and
mov
jae
pop
jbe
sahf
add
into
cli
std
cmp
cmp
cmp
lods
cmpsb
shll
adc
add
lea
pop
lods
cs
cmp
test
fstp
icebp
lods
andb
xchg
adc
xchg
pop
mov
lds
subb
inc
lret
sbb
fcoms
lds
shl
sub
mov
add
cmp
fs
je
scas
lahf
bound
pop
xor
in
in
popa
popl
adc
sub
mov
loop
jmp
lods
xor
pusha
push
in
fisttpll
jno
fwait
and
sbbl
add
mov
mov
insl
push
mov
cmc
mov
dec
push
cmp
aas
ss
sbb
push
ljmp
in
push
sbb
mov
adc
push
std
popa
mov
stos
add
mov
cld
dec
or
adc
sahf
inc
call
arpl
sub
jne
xchg
xchg
mov
in
inc
outsl
scas
jnp
loope
ds
aas
dec
cmp
xchg
mov
pop
iret
mov
lret
adc
out
aas
fcompl
sbb
push
fisttpl
xchg
jnp
mov
aad
icebp
mov
push
in
mov
cmp
push
test
push
mov
add
sub
fucomip
mov
les
jp
push
dec
pop
out
xchg
arpl
movsb
inc
rolb
push
adc
lret
pop
sub
jne
jecxz
jnp
in
mov
and
or
sub
fwait
mov
mov
mov
mov
mov
bound
addb
pextrw
push
movsw
push
xchg
dec
add
jp
and
sub
sbb
jge
int
divb
cltd
jl
lock
enter
mov
fwait
sub
popa
add
int
sub
mov
ds
mov
push
xor
ja
sarb
xchg
pop
mov
mov
and
or
bswap
cli
scas
nop
lds
jmp
mov
test
mov
push
outsb
arpl
stos
adc
and
xor
je
sbb
in
mov
jmp
gs
xor
test
jb
lsl
add
lds
notl
cmp
add
xor
mov
dec
decb
xchg
push
or
sub
jmp
mov
into
sub
ja
push
mov
test
jnp
mov
dec
mov
jno
or
stc
or
and
fwait
shrb
push
jecxz
add
push
in
mov
xchg
out
aas
inc
jecxz
mov
xchg
enter
popa
mov
cmp
push
rorl
aas
and
outsl
adc
aad
dec
pusha
mov
and
xadd
sub
pop
xchg
or
test
and
xor
inc
push
cmp
lds
mov
adc
xlat
fidivs
cmp
mov
xchg
push
arpl
and
and
out
mov
gs
jno
stc
loope
push
fninit
ljmp
push
sar
push
cld
xlat
loope
inc
ss
icebp
dec
and
addr16
mov
pushf
shl
lock
in
push
xchg
dec
decb
and
cld
orl
adc
inc
mov
sti
rorb
sbb
incb
enter
cmpsl
fwait
adcl
inc
dec
popa
cwtl
cltd
fmulp
pop
test
sarb
es
arpl
and
dec
push
sbb
or
xchg
mov
sub
pop
and
cmp
aam
clc
out
adc
insb
add
cmovae
lret
in
ret
cld
sbb
and
movups
adc
ss
mov
push
dec
xor
stos
cmp
enter
js
mov
dec
enter
mov
gs
lcall
xor
sub
lea
xor
stos
test
out
sahf
cmp
cmp
sub
sbb
pop
or
push
push
or
lcall
pop
cmp
ret
addr16
aam
inc
clc
or
push
repz
mov
mov
rorb
gs
jp
repnz
pusha
dec
push
out
cmp
incb
repnz
pop
jo
add
out
roll
dec
arpl
repnz
fisttpl
lods
cmp
aad
aas
movsb
in
adc
shlb
inc
repz
lret
stos
loopne
mov
and
insl
pushf
in
sti
cmp
mov
dec
loope
syscall
jo
pop
cmp
pop
dec
mov
in
pop
sti
jo
xor
mov
test
cli
push
mov
sub
inc
or
xor
jnp
jo
hlt
ja
movsb
cmp
lods
ja
push
sbb
adc
mov
scas
inc
mov
jnp
aas
daa
loopne
xchg
inc
mov
jb
int3
mov
mov
add
dec
pop
fsubs
xlat
push
lcall
and
sub
and
loope
cmp
mov
ja
ss
ret
jecxz
and
and
iret
dec
hlt
pop
lret
cmpsl
and
mov
dec
mov
fs
outsb
les
jo
shlb
mov
or
pop
es
jne
lcall
mov
and
and
ja
lods
and
push
add
fabs
inc
rcr
cmp
lret
adcb
push
adc
jge
sbb
xchg
add
and
lds
pop
in
cmp
loopne
or
ret
mov
and
mov
int3
jns
xchg
fistl
and
mov
in
jnp
push
mov
xor
add
xchg
add
and
pushf
xor
mov
jl
jnp
jecxz
xchg
jle
out
repnz
sub
and
sbb
or
adc
out
movsl
dec
rcrl
ljmp
mov
push
lods
mov
xchg
adc
and
int
out
mov
jbe
es
and
stos
mov
push
in
xorl
dec
pop
push
cmpsb
and
fcomp
rclb
dec
daa
or
movsl
push
fnclex
or
mov
mov
in
js
pop
inc
stos
mov
jp
inc
sarb
cmpsl
fdiv
mov
push
or
xlat
out
xchg
or
aam
adc
sub
addr16
cld
cltd
arpl
push
dec
jmp
ja
mov
pop
adc
jmp
jne
sub
cwtl
fldenv
outsl
icebp
push
jl
inc
mov
aam
imul
xor
in
xchg
cmp
dec
sbb
pop
testb
ficomps
jbe
jge
inc
in
cmp
inc
scas
mov
repz
gs
lcall
es
lock
js
xchg
adc
je
int3
and
jnp
jg
std
lret
lock
movsl
mov
mov
push
sbb
dec
sbb
or
pop
or
inc
test
sti
mov
jnp
fsubrl
xchg
lret
dec
and
or
shl
in
out
fwait
mov
and
adc
scas
dec
sbb
mov
add
cli
cmp
shlb
sbb
mov
or
insb
xor
mov
add
dec
stos
and
pop
jnp
imul
popa
sbb
shrb
jo
fcoml
arpl
cmp
imul
loop
pusha
push
adc
test
div
xor
imul
insl
or
call
daa
or
sub
in
mov
das
cwtl
repz
pop
inc
dec
xchg
mov
and
rclb
inc
or
pop
and
popf
inc
pop
test
incl
lahf
jne
and
xor
or
xchg
pusha
adc
aam
jb
and
pop
dec
or
mov
mov
pop
aas
repnz
mov
fwait
jecxz
xchg
loop
xor
mov
mov
mov
add
mov
cltd
call
and
fwait
aad
enter
jecxz
cmp
mov
mov
inc
pop
add
jo
test
in
jo
sbb
inc
adc
sbb
jmp
fdivl
popa
and
and
dec
cltd
andb
ret
data16
lret
fsubl
movsl
icebp
repz
cmp
xor
jg
cli
cltd
call
out
xchg
clc
out
push
add
fiaddl
les
mov
jge
es
push
mov
pop
inc
add
jecxz
xchg
push
mov
jo
pavgw
outsb
adc
or
cmpl
not
scas
xor
and
push
cmp
jl
lds
les
cmp
pop
dec
add
test
stc
jno
push
cmp
shr
ljmp
enter
iret
mov
jns
xor
mov
jnp
sbb
xchg
cwtl
adc
add
pop
out
addr16
xchg
inc
or
popa
jge
adc
gs
jmp
jnp
push
dec
push
es
and
mov
pop
movsl
in
inc
divl
cmp
inc
in
das
lret
sub
mov
das
adc
push
hlt
mov
scas
and
in
sub
and
sbb
cmp
int3
mov
pop
iret
mov
inc
or
lcall
push
xchg
cli
lcall
ljmp
mov
jp
sti
mov
mov
ret
loopne
shlb
out
or
xor
insb
ds
xchg
sarl
lock
xor
mov
jp
push
fwait
clc
pop
sub
test
inc
loop
or
icebp
sub
xchg
lds
fidivrl
lret
shll
in
jg
sbb
xchg
inc
adc
shl
lret
adc
mov
movsl
cmpsb
sti
idivb
mov
notl
jg
mov
and
shrl
lret
test
jl
sub
int
xchg
xchg
push
cmp
rolb
xchg
mov
sub
jnp
fdivrs
push
movsb
add
jae
subb
addr16
dec
out
movsl
arpl
test
mov
lret
sub
xorps
ret
cs
pop
push
popf
jb,pt
and
aam
xchg
arpl
mov
incb
mov
fs
ds
mov
mov
icebp
icebp
pop
ret
gs
fstpt
ljmp
fisttpll
push
ftst
jmp
dec
pusha
lret
pop
add
inc
xor
mov
adc
sbb
pop
jae
cmpsb
adc
insl
loopne
sbb
adc
int
pop
mov
jnp
arpl
mov
push
out
sti
push
xlat
inc
fcomip
or
or
fs
loop
pushl
imul
mov
inc
int
ficoms
pop
jg
and
mov
jbe
sbb
aaa
mov
dec
adc
cmp
push
xchg
and
and
push
mov
sbb
adc
cmp
sub
pop
mull
pop
mov
or
in
dec
inc
adc
and
cmp
dec
pop
adc
sub
outsl
das
das
cmp
mul
push
dec
mov
imul
loopne
std
push
push
fwait
xchg
mov
pop
jmp
jns
andl
call
popl
gs
mov
adcb
lcall
jl
cmp
adc
outsb
fldenv
jnp
sbb
popa
dec
lcall
lcall
mov
jmp
jg
pop
xchg
movsb
daa
mov
bnd
jge
dec
adc
fsub
shlb
jg
inc
mov
sbb
mov
cmp
push
mov
jns
clc
int3
add
mov
sbb
mov
in
leave
inc
cld
mov
pop
popf
icebp
jno
cmpsb
ficoml
mov
shll
pop
bound
add
add
mov
fbstp
loope
and
xchg
and
call
jbe
rcrl
cmp
adc
fdivl
jae
fisubrl
cmp
sub
loopne
mov
test
mov
adc
xchg
mov
js
sub
sbb
sub
add
neg
xchg
jecxz
jmp
or
mov
jp
pop
sbb
jae
cmp
sub
inc
arpl
movsl
js
cmc
dec
movsl
notl
or
xor
push
outsb
inc
mov
jecxz
subps
cli
mov
mov
mov
jecxz
mov
arpl
sarl
loop
imul
cmp
aad
rcrl
push
sbb
sub
in
sbb
loop
sbb
xlat
push
push
mov
dec
repnz
sub
cmp
and
lods
ja
in
jb
push
les
xor
inc
test
mov
mov
subb
sbb
out
sbb
insl
nop
into
jno
mov
lds
mov
push
leave
and
inc
jae
add
fwait
and
jecxz
jle
push
xlat
jmp
and
das
xor
push
push
icebp
xchg
mov
fnsave
xchg
pushl
imul
adcb
lods
lock
test
ja
arpl
out
pop
and
dec
dec
cmp
out
out
lds
xchg
and
and
sub
xchg
popa
lods
push
inc
lret
inc
in
movsl
mov
adc
aas
push
imul
jmp
sarl
cmc
and
idivb
insl
fisubs
ret
cmp
push
or
sbb
popa
cmpsl
popa
jns
test
adc
mov
lods
sarl
jmp
xchg
out
xchg
pop
and
lcall
cmp
mov
jnp
push
shrl
mov
jge
in
mov
inc
in
ret
orb
mov
std
lds
cli
push
push
sub
cmc
adc
jecxz
add
and
fnstcw
stos
push
inc
sub
aas
mov
cmp
and
push
or
sub
negb
mov
cld
ds
fabs
test
jo
gs
mov
iret
repz
or
jnp
dec
rcpps
lods
sti
mov
pop
mov
add
pop
sub
and
sub
push
test
repz
shll
cmc
jmp
gs
dec
jp
jnp
or
inc
loop
das
loop
jle
rorl
fcomi
enter
lahf
add
mov
ret
cld
and
test
fwait
sahf
imul
ja
ja
out
lret
jmp
fcomi
enter
scas
ret
xor
add
sti
add
mov
cmp
arpl
and
jo
cmpsl
push
mov
inc
inc
or
bound
test
jbe
inc
mov
sub
jae
xchg
fnstenv
sbb
out
mov
je
leave
push
adc
cmp
les
js
push
jns
sbb
cmp
dec
out
xchg
pushf
push
test
popa
mov
pop
sub
aam
gs
shrb
sti
inc
cltd
mov
int
and
movntps
rclb
mov
cmc
mov
aad
and
and
mov
in
cmp
cmp
pop
mov
lds
pop
aam
mov
cmp
or
stos
push
push
and
jbe
mov
dec
adc
sti
movsb
or
pop
arpl
daa
cmp
lods
les
out
fmull
addr16
jg
xor
xlat
das
out
and
call
addl
xchg
arpl
cmpsb
or
adc
or
mov
add
out
or
loope
add
jne
out
out
lock
jmp
dec
fidivl
cld
pop
cs
push
lcall
mov
movsl
push
inc
adc
cmp
shll
sbb
pop
mov
mov
push
pavgw
clc
xor
pop
sub
int3
mov
pop
fmuls
push
mov
aad
push
sub
adc
in
or
aam
mov
jp
pop
sarl
add
mov
loope
push
mov
jb
mov
repnz
repnz
pop
lods
sti
adc
jns
cmpsb
and
insb
sbb
pop
mov
popa
xor
mov
sub
iret
mov
pop
stc
xchg
out
jle
stos
sarl
sbb
fbld
in
je
hlt
in
inc
mov
outsl
test
adcb
gs
jl
not
and
sti
push
jl
or
xchg
insb
adc
adc
inc
lock
jge
cld
sub
pop
push
jns
dec
movsl
jp
cmp
in
test
fldcw
mov
mov
dec
mov
xchg
mov
mov
out
push
xlat
adc
cmp
cwtl
shl
fnsave
cmp
xor
dec
mov
fs
add
push
cmp
jnp
lods
std
ljmp
dec
imulb
mov
insl
mov
mov
mov
and
bound
popa
cltd
nop
mov
cld
ljmp
push
popa
mov
int
imul
mov
sbb
mov
jb
add
loopne
and
cmpsb
cmp
into
popf
inc
and
arpl
adc
inc
jmp
test
or
jno
cwtl
jne
add
dec
and
push
ret
jns
jb
jecxz
sub
mov
xchg
pop
jp
mov
enter
arpl
pop
sub
mov
cmp
and
notb
je
jle
lret
push
push
enter
outsb
shl
or
sbb
pop
dec
sbb
xchg
cmpsb
mov
arpl
lahf
adc
xchg
pusha
shll
cli
pop
sbb
cmp
inc
les
lds
dec
into
testl
out
dec
rcll
inc
pushf
cld
shl
push
mull
fldcw
xchg
pop
sti
out
ss
call
push
sub
xlat
movsl
shl
xor
xchg
in
pusha
rclb
push
popa
std
loope
lock
es
mov
jo
xchg
cmp
adc
mov
mov
jnp
lds
cmp
ss
roll
xor
loopne
shll
cmpl
add
adc
sahf
pop
pop
mov
sbb
sub
mov
xchg
je
shll
mov
push
xchg
sti
nop
icebp
nop
shll
or
popa
fmul
push
xchg
sahf
lock
loopne
or
lods
jl
pop
push
loope
and
loopne
xchg
les
gs
popa
addr16
cmpsl
int
ja
sub
imul
fdivrp
enter
shll
es
jle
popa
pop
push
aam
fldcw
mov
fstpt
ret
sbb
xchg
sub
dec
loope
dec
sub
pop
mov
adc
es
cmp
dec
adc
xor
mov
in
and
or
iret
ds
and
and
mov
push
and
jmp
orl
mov
mov
push
ret
das
in
stos
in
imul
out
clc
mull
pop
xchg
pop
xor
or
mov
push
arpl
sbb
jmp
cs
std
nop
addl
push
je
insb
lret
and
cmp
mov
mov
out
or
jecxz
stos
pop
ss
cltd
pusha
les
mov
das
leave
push
jmp
or
aaa
push
in
lahf
loopne
push
xor
daa
outsb
and
mov
add
or
sbb
popa
decb
pop
jl
mov
sub
int
mov
sbb
mov
sub
in
xor
or
pop
test
jb
cmpsl
jecxz
loope
push
ret
scas
mov
jmp
and
jbe
inc
jle
inc
imull
ds
hlt
mov
push
and
mov
pop
sti
enter
movb
inc
jnp
mov
pop
mov
xchg
ret
std
mov
test
mov
loope
add
mov
bound
xor
es
sbb
or
push
imul
ficoms
sub
adc
test
add
outsb
stc
bound
xor
jecxz
lret
adc
xor
ret
std
movsb
and
js
fistl
adc
add
jl
sti
in
adc
enter
loop
addr16
fimull
adc
xor
or
cmp
xor
mov
and
sbb
jecxz,pt
arpl
hlt
lret
inc
jp
loope
and
mov
mov
xor
cmp
pop
jo
popa
pop
int3
std
je
sbb
jae
dec
mov
pop
dec
mov
paddusb
sub
pop
add
movsb
icebp
insb
pop
xor
fwait
sbb
mov
push
pop
push
insb
adc
enter
scas
cli
pop
xor
adc
mov
or
int3
imul
pop
daa
mov
in
sbb
xchg
stc
int3
in
or
ss
mov
shr
sbb
push
jg
and
mov
adc
mov
outsl
pop
mov
sub
push
add
push
loop
out
fldt
or
movsl
enter
in
mov
dec
push
mov
repz
or
rclb
lret
lds
and
ljmp
loope
ds
adc
and
loopne
pop
scas
stos
dec
sub
les
in
pusha
xchg
xor
sti
fwait
and
fs
xor
mov
xor
leave
loope
pop
lret
dec
mov
mov
out
mov
add
repnz
xor
cmpsl
stos
add
mov
add
or
dec
popa
pop
xchg
cmp
fwait
jne
int
lods
mov
dec
call
popa
int3
push
and
push
popa
shrb
cltd
repz
jl
cmp
repnz
fwait
cmpsb
pop
pop
pop
mov
inc
push
mov
ficomps
loopne
and
add
or
imul
es
sbb
and
movsl
xchg
sahf
xor
mov
in
mov
adc
lret
popa
adc
sub
dec
jne
xor
adc
imul
cmp
mov
jecxz
test
cmpsb
imul
push
and
push
mov
or
fstpt
mull
mov
and
cmp
jl
sub
outsb
stos
jecxz
or
out
ds
ss
mov
test
mulb
test
or
pop
fwait
loope
adc
fnstsw
or
int
aam
int
cmp
pushf
imul
leave
fisttps
inc
lcall
inc
add
dec
mov
mov
mov
cmp
push
fs
ja
into
xchg
arpl
add
and
popa
ja
imul
sbb
inc
sub
movsl
add
pusha
cld
dec
mov
and
arpl
inc
cmp
insb
dec
xchg
adc
xchg
sbb
mov
out
jecxz
or
clc
and
test
adc
lcall
sub
cmp
cmp
jge
sahf
sbb
and
xchg
js
cld
cs
shlb
iret
cmp
and
ret
ja
iret
add
scas
jle
push
push
adc
and
lock
inc
call
push
test
jl
mov
fcmovu
inc
jmp
and
mov
ret
int
dec
adcb
in
fwait
ror
sbb
movsl
jle
jnp
push
or
mov
mov
movsl
push
iret
jle
cmp
popa
cmp
idivb
std
lcall
xor
popa
clc
dec
enter
dec
or
inc
push
pusha
sbb
pushl
or
mov
sbb
outsl
icebp
pop
jmp
sub
out
mov
fdivl
inc
aad
in
mov
xor
icebp
out
jmp
xchg
push
push
jmp
jno
dec
add
push
gs
sti
mov
les
mov
int
pop
pop
pop
cmp
stos
clc
push
xor
and
jnp
cmpsb
aaa
shrd
shrl
push
xor
loopne
pop
dec
in
in
loop
ljmp
adc
mov
sub
repz
dec
adc
fildl
into
frstor
pop
scas
frstpm(287
cmpsb
or
scas
xchg
ret
enter
mov
cmp
and
dec
leave
fcompl
addr16
fsubs
sbb
push
in
adc
out
cmp
movsl
xchg
xor
cli
sti
adc
sti
call
and
jg
std
xchg
mov
fld
mov
jb
jnp
mov
popa
fs
mov
roll
out
xor
jnp
cmp
popa
jg
xchg
adc
fwait
pop
add
movsb
mov
xchg
adc
scas
shlb
mov
jge
loopne
cwtl
pop
std
jg
out
fimull
inc
rol
gs
ljmp
arpl
sub
dec
push
mov
push
in
cli
cmpsb
mov
dec
sbb
xor
lahf
in
push
stos
ret
and
jle
cmpb
pop
xchg
lret
addr16
cld
cmp
shll
mov
pop
dec
loop
shlb
jmp
rcrl
and
add
lret
jge
cmp
jp
ljmp
xor
cmp
jns
test
hlt
popa
mov
sbb
sahf
mov
pop
add
push
mov
and
pop
imul
add
in
out
shl
loope
imul
int3
pop
cld
jmp
fwait
mov
lret
mov
popa
outsb
loope
ss
mov
cmp
popf
sub
mov
mov
mov
cmp
jo
and
imul
mov
movsl
jmp
add
and
aam
or
sub
and
inc
dec
adc
in
divl
imul
leave
adc
dec
rorl
jmp
jb
pop
jl
sbb
inc
and
das
rorl
lods
or
das
leave
fwait
mov
inc
mov
insl
xchg
xor
dec
fistpll
stc
data16
add
fisubrs
arpl
sbbl
pusha
xchg
lods
shl
dec
adc
add
pmulhw
sbb
or
inc
stc
add
mov
sbb
es
mov
or
scas
es
outsl
ds
cmp
ljmp
test
mov
mov
ja
inc
xor
lcall
jg
aas
and
ret
and
jbe
pop
and
ror
adc
mov
fs
adc
cwtl
cmp
sahf
and
loope
inc
inc
ficoml
test
xor
push
pop
idiv
cmpsb
shll
test
mov
and
xchg
sbb
imul
add
lcall
and
ret
imul
cmc
dec
cmpsb
xchg
lds
adcl
or
sub
leave
shlb
mov
fwait
inc
pop
jnp
je
bound
fld
xchg
or
jnp
xor
es
adc
movsl
cmp
push
shll
mov
pop
test
mov
cmp
sbb
icebp
cmp
mov
cmp
sub
pop
leave
xor
add
sbb
mov
inc
fildll
in
andb
insl
add
into
clc
testb
fidivl
out
ret
arpl
sti
dec
and
imulb
mov
sub
fiaddl
outsb
out
and
ss
add
mov
mov
out
cmp
lret
or
add
dec
lods
call
push
sbb
js
sti
push
pop
add
pushf
jne
cmp
pushf
jmp
and
mov
cmc
aaa
ret
mov
movsl
mov
movsl
add
cmp
adc
insl
xor
xor
mov
push
mov
sub
popl
mov
adc
ret
inc
push
add
in
call
xchg
push
xor
mov
inc
jbe
jge
test
mov
or
xchg
sbb
popa
popf
cmc
jmp
adc
mov
stc
movsl
loop
mov
jne
aaa
or
cmp
ljmp
jp
sbb
xchg
add
je
xchg
cmpsl
mov
ja
push
xor
inc
iret
adc
xor
or
cmpsb
cmp
and
mov
mov
adc
ds
jnp
inc
rorl
aas
sbb
rcr
xchg
stc
insl
aaa
jecxz
dec
loopne
fisubl
mov
add
push
loop
and
fldenv
mov
and
and
and
enter
sti
fs
mov
stc
outsl
loopne
shl
or
jge
frstor
stos
adc
pop
mov
repnz
clc
mov
je
mov
mov
xchg
in
jnp
gs
into
out
repnz
mov
std
clc
dec
and
fistps
mov
cmp
popf
pop
xor
jecxz
add
rcr
loope
test
and
xor
hlt
jbe
mov
and
cmp
push
mov
outsb
insb
fisubrs
stos
mov
out
inc
jecxz
in
movsb
push
xor
push
fiaddl
sub
push
jecxz
jno
das
add
adc
jbe
lahf
xchg
shll
sar
jo
pop
add
sti
mov
jb
add
lods
scas
push
pop
frndint
and
sbb
movsb
test
jmp
lea
mov
dec
jecxz
push
sub
or
cs
adc
mov
dec
push
and
test
xchg
push
std
std
xor
pop
arpl
movsl
into
push
negl
dec
mov
int
mov
adc
cwtl
xchg
in
and
movsb
sbb
mov
jecxz
inc
sbb
lcall
dec
in
adc
lret
jbe
arpl
pop
lods
in
adc
jl
fs
cmc
fstl
js
cltd
push
push
test
addr16
and
inc
xchg
test
and
jecxz
sbb
jae
cmp
and
xchg
mov
popa
xchg
arpl
insl
xchg
and
dec
inc
lahf
ficoml
das
xor
push
cwtl
sub
and
jmp
adc
sbb
or
or
fwait
or
xor
xor
mov
cmp
pop
pop
addr16
and
jno
out
dec
lods
adc
into
pop
jmp
rcll
and
and
arpl
push
mov
cmpl
js
leave
mov
sbb
adc
pop
and
dec
sti
cmp
xorb
fbld
xor
push
mov
rcr
mov
sub
adc
in
test
and
xor
in
push
and
dec
into
jb
xchg
dec
dec
and
aas
pop
nop
inc
or
insl
lcall
shrl
fimuls
clc
cltd
jo
and
mov
jge
mov
xchg
loope
sub
fldt
cli
andb
push
cmp
and
loop
mov
cmpsb
divb
cltd
jle
add
dec
cwtl
add
jmp
xlat
cld
repnz
icebp
cli
lock
repz
aaa
xlat
mov
pop
push
call
movsl
jbe
ss
xor
adc
enter
adc
scas
push
movsb
mov
jecxz
fisubl
pop
aas
lock
push
lcall
pop
leave
xor
xor
mov
jg
outsl
mov
cwtl
gs
jecxz
pop
das
idivb
xchg
xor
sub
fnstcw
mov
sbb
adc
dec
mov
movsl
sub
add
dec
inc
inc
push
push
push
stos
inc
das
bound
cli
roll
dec
in
lods
jp
bound
and
push
in
or
bound
jb
and
push
mov
imul
fmull
cmp
jmp
push
jne
out
xchg
enter
das
jnp
inc
jecxz
test
jnp
popa
movsb
mov
xchg
jge
fnstcw
ret
mov
pushf
out
cltd
inc
mov
sbb
arpl
rorl
adc
imul
rorb
arpl
dec
or
ja
addl
mov
aam
and
das
test
jmp
hlt
inc
mov
in
push
arpl
sbb
xchg
stos
movlps
xchg
shl
pop
push
xchg
cmp
movsl
adc
ja
in
xchg
sbb
push
aaa
loop
loope
shll
test
sbb
ret
sbb
test
jnp
and
insb
pusha
pusha
jns
roll
pop
repnz
jge
scas
and
xor
add
mov
lcall
fs
adc
sbb
push
test
push
inc
out
xchg
dec
adc
insb
fisttpll
arpl
and
dec
jae,pn
cmp
pop
stos
idiv
or
xor
jo
in
xor
mov
xchg
gs
mov
add
pusha
fsubrl
cmp
jno
cli
lsl
dec
jmp
mov
lcall
mov
jae
stos
subl
and
pop
cmp
jmp
and
popa
cld
out
shrl
ret
xor
sbb
sar
lret
jg
das
insb
adc
xor
xor
or
adc
icebp
sub
shll
arpl
xchg
test
imul
cmpsl
movsl
cmpsb
in
cmp
mov
adc
mov
int
stc
addr16
movsb
lret
je
loopne
lret
and
inc
int
jo
int3
in
iret
lods
push
movsl
push
sub
sbb
add
sub
sti
fs
push
push
jnp
fnstsw
xchg
pusha
cmpsl
sti
loopne
lods
push
or
insb
test
push
mov
and
mov
dec
mov
inc
in
jnp
mov
jl
insl
scas
loopne
jl
xor
pop
push
mov
jo
aad
dec
into
je
inc
xor
nop
adc
leave
ja
cmc
ss
pusha
es
mov
flds
loopne
pop
jmp
insl
incb
incl
or
inc
adc
loop
adc
and
fstl
ret
add
in
ljmp
jnp
out
lret
lock
jecxz
pop
push
xor
jno
sti
loope
xorl
insl
insl
xor
sbb
fwait
lds
mov
cltd
push
pop
pop
sbb
add
xchg
mov
sbb
dec
xchg
dec
dec
or
rolb
loope
and
and
mov
or
imul
insb
adc
jge
xchg
movsl
push
pop
test
fcmovnb
jl
sub
xchg
idivl
mov
cltd
sbb
mov
push
inc
adc
add
mov
xchg
sti
dec
lods
ljmp
jl
lret
jne
sbb
dec
jno
cmpsl
jl
pop
inc
add
ss
mov
cmpsb
test
push
xchg
fwait
dec
jno
mov
mov
mov
pop
loop
aaa
jno
fs
mov
jno
inc
int
xchg
adc
int3
aas
addr16
cmp
stos
pop
xlat
pop
mov
sbb
xchg
sbb
mov
pushw
adcb
rcl
push
insb
push
pop
xchg
fsubs
mov
lds
andb
ds
inc
push
jmp
outsl
xorb
fwait
fs
lds
or
and
jnp
push
imul
incb
testb
fbstp
notl
jo
arpl
adc
popa
pop
leave
imul
push
mov
xchg
mov
xor
call
hlt
sub
add
ja
ret
dec
stos
pop
xchg
aad
jmp
jno
addr16
push
sarw
sarl
mov
add
popa
cmp
bnd
and
dec
in
pop
rcl
cli
js
movsl
pop
push
jecxz
aas
mov
sub
cmp
aas
loopne
nop
sbb
pusha
inc
addr16
pop
push
imull
jecxz
and
cmc
lds
mov
jae
int
push
movsb
sbb
jnp
js
push
sbb
add
aaa
out
lcall
mov
lret
jnp
cmp
gs
jg
loope
sub
xor
dec
aaa
pusha
daa
or
jle
shl
sarl
sahf
xorl
cmp
imul
es
cmp
jae
add
lret
call
sub
fnstenv
mov
or
sti
inc
scas
dec
out
push
aad
aas
out
cmp
punpckhwd
outsl
fildl
push
jecxz
insl
mov
or
jns
sub
into
xchg
fisubrs
movsl
push
inc
jns
ss
mov
dec
leave
notb
loope
in
and
shr
and
dec
int3
test
add
es
jge
adc
pushf
and
cmp
jne
out
out
cmpsl
add
insb
xor
cmp
or
pop
push
dec
out
out
aaa
out
pop
pop
xorl
dec
mov
scas
jp
adc
and
jge
std
mov
cmp
icebp
sub
mov
ret
mov
jnp
mov
sbb
and
into
and
push
ljmp
sbb
mov
clc
add
clc
dec
sub
lods
mov
sub
movsb
movsl
enter
test
aaa
mov
pop
aad
sbb
and
jae
add
mov
in
ret
xorl
xchg
dec
imul
push
shrb
lahf
and
repz
sub
jnp
sbb
cmpsl
dec
jae
pusha
xchg
and
add
and
gs
data16
je
mov
aaa
jnp
push
adc
mov
pusha
add
sub
std
int
mov
lea
jmp
and
inc
inc
mov
popf
lods
jb
adcl
aam
adc
sti
add
aas
aad
push
add
mov
ret
and
xchg
sub
adc
cmpsl
out
aad
jae
or
aas
ljmp
add
icebp
cwtl
and
push
in
ret
out
aam
mov
push
dec
xchg
dec
fst
sbb
push
cmpsb
aaa
add
cmp
and
repz
sbb
jecxz
mov
cltd
push
inc
cmp
xor
sub
dec
sub
cmp
cmc
popa
ret
push
mov
sub
in
and
and
xchg
fsubrs
jno
mov
push
add
jl
sbb
lock
inc
loop
add
dec
sub
dec
lods
push
aaa
or
sub
shlb
cmp
std
pushf
loopne
or
mov
jge
inc
bound
fs
rclb
add
fildl
and
mov
fstps
xchg
add
adc
lahf
pusha
pop
inc
lcall
std
stos
movsb
jno
jl
mov
loope
mov
dec
jle
or
mov
addr16
aas
sti
mov
sarl
stos
repz
enter
mov
in
sub
push
sbb
mov
movsl
nop
jno
ret
movsl
imul
cli
arpl
nop
adc
lods
js
add
insb
dec
icebp
insl
xor
mov
into
mov
loop
mov
sarb
in
cld
outsb
push
add
icebp
push
inc
add
in
cmpsl
push
fildl
vminss
aad
ret
test
sub
or
mov
push
jnp
cmpsl
add
fldenv
imul
cmp
dec
push
repnz
mov
scas
xchg
repz
adc
sub
mov
push
cmp
jge
mov
jno
jae
iret
pop
xchg
xor
sti
shrl
mov
xchg
push
jg
adcl
xchg
push
mov
and
sub
jecxz
sub
loopne
mov
mov
and
mov
mov
add
andb
mov
mov
outsl
push
lcall
loop
add
sbb
insb
leave
mov
aad
inc
adc
fwait
cli
in
fidivs
cmp
jbe
jmp
test
sbb
sub
pop
xchg
stc
das
xchg
mov
leave
add
or
cmp
rol
cld
iret
and
mov
pop
jle
dec
and
fcmovnb
push
and
out
mov
mov
icebp
aaa
lahf
iret
push
les
jmp
jnp
xlat
shlb
je
mov
sarb
add
les
movsb
xchg
mov
ljmp
dec
scas
test
arpl
bound
stos
out
push
and
jp
das
jmp
cwtl
enter
popf
addr16
and
fiadds
test
xor
push
and
test
roll
je
or
les
mov
dec
and
repz
loope
sub
add
adc
das
push
dec
cltd
inc
jnp
cmp
adc
les
lret
sbb
push
or
adc
push
or
xchg
mov
stc
iret
loope
add
repz
sub
je
pcmpgtw
jns
push
nop
loopne
xchg
sbb
iret
mov
stos
pop
or
shrl
sbb
inc
cmpsb
dec
jae
mov
xchg
mov
std
and
xor
push
cmp
mov
cmc
push
and
dec
jl
loopne
js
or
add
xor
arpl
sbb
add
pop
mov
mov
popf
rcll
dec
movsl
lret
push
in
add
cmc
gs
sub
test
movsl
mov
das
jno
jnp
cmc
pop
cli
bound
repnz
repnz
nop
cs
cmc
jns
sbb
push
js
add
ja
pop
outsb
adc
xor
out
push
nop
lret
cli
popa
sbb
lock
mov
sbb
loop
gs
dec
lds
mov
jo
push
out
jns
fdiv
rorb
pop
repz
adc
adc
xor
arpl
adc
cmp
fmul
hlt
cld
lods
inc
push
arpl
pushf
jl
test
jnp
aam
push
enter
xchg
fisubrs
int
jnp
push
mov
cmpsb
jecxz
sbb
pop
adc
nop
call
lret
inc
popa
test
add
cmp
fcompl
add
pusha
inc
fdivr
loope
xchg
sub
add
mov
lods
jo
repnz
icebp
arpl
adc
fsubl
iret
jp
jecxz
or
push
adc
ljmp
inc
addr16
cmp
insl
jbe
pusha
mov
popa
cli
jb
jb
cwtl
repz
out
divl
adc
mov
jne
xchg
cmp
ss
xchg
aad
xchg
iret
and
bswap
loope
xchg
mov
or
cwtl
and
dec
or
adc
or
xchg
lods
aad
sub
aaa
dec
mov
jnp
xlat
loope
cmpl
and
mov
ret
fnstenv
mov
push
ja
ja
pop
movl
les
and
mov
xor
repnz
cvtss2sd
gs
jmp
out
and
mov
test
gs
je
and
pusha
mov
jo
xchg
fsubrs
pusha
mov
icebp
mov
cmp
mov
int3
jp
sub
ds
mov
stc
jno
test
fwait
imul
or
inc
orl
fnsave
jnp
mov
mov
bound
shrl
fcmovne
aas
dec
cmp
xchg
stos
out
xchg
xor
scas
roll
popa
xchg
adc
and
movsl
jmp
ret
xor
je
gs
movsb
cmpsb
sbb
in
fs
dec
ss
mov
sub
loope
inc
cltd
pop
add
out
and
jle
int
push
das
fldt
cld
xor
pop
popf
or
push
stc
sub
and
mov
and
aaa
stc
popa
out
scas
jo
fsubl
push
push
mov
jg
nop
jbe
mov
hlt
stos
cmp
mov
popa
in
nop
mov
jne
pop
jno
imul
mov
jle
sarl
lds
frstor
mov
push
cmpb
mov
arpl
daa
adc
jl
pop
jl
pusha
xor
pop
inc
lock
in
stos
cmp
adc
scas
out
aad
leave
or
in
cs
das
fdivl
loope
mov
inc
ss
pop
xor
pushf
popa
xchg
ret
fdivp
and
jne
lods
arpl
push
movsl
xchg
divl
jno
mov
lret
lcall
mov
cmpsb
fwait
call
ror
mov
or
sub
adc
lock
add
pop
and
call
cmp
jae
imul
jle
and
pop
add
mov
xchg
sub
or
stos
into
les
and
iret
fldln2
or
movsl
sbb
push
mov
movl
fdivp
jmp
cmp
xorl
mov
and
arpl
into
dec
inc
adc
test
subl
lcall
repnz
daa
lods
adc
movsl
push
and
std
sti
and
repnz
rcr
test
in
addr16
adc
sub
insl
insl
or
es
mov
fisttpl
and
mov
ret
out
mov
jecxz
inc
sub
scas
les
dec
mov
and
cmp
popa
enter
test
cmp
jge
bound
clc
rorl
dec
push
in
pusha
mov
mov
pop
test
jecxz
inc
pusha
fucomp
mov
xor
arpl
push
xor
stc
popa
out
and
inc
xchg
jns
jno
hlt
push
int3
arpl
mov
jbe
adc
gs
popf
adc
cli
bound
jnp
pop
es
sub
jns
out
adc
and
adc
push
and
lods
mov
xor
mov
add
faddl
sti
aaa
bound
int
pop
cmp
lds
les
push
jno
icebp
scas
jg
fcompl
fsubs
pop
add
imul
movsl
and
xor
sub
jbe
adc
jmp
or
inc
dec
push
adc
shrb
mov
inc
std
addr16
std
mov
adc
mov
shl
mov
inc
xchg
lods
bound
ljmp
das
add
fdivs
lds
sbb
jl
insl
push
cmpsl
fs
fbstp
pop
ret
outsb
std
pop
pop
movsb
out
jnp
xorl
pop
jns
cltd
mov
filds
and
inc
je
inc
push
push
cld
test
adc
mov
adc
bound
jnp
mov
and
jg
ret
fucomp
xor
xor
mov
jmp
add
adc
adc
clc
push
mov
sarl
testb
adc
pop
mov
mov
inc
movsl
lods
sbb
xchg
inc
lahf
mov
les
mov
in
cmpsl
xchg
mov
cmp
xchg
cld
mov
popa
cmp
insl
jno
mov
xchg
fisubs
sbb
imull
cmp
xchg
lea
mov
xor
movsl
stos
pop
push
inc
mov
aam
repz
jecxz
pop
xor
outsb
addb
sub
ret
fsub
les
jb
lea
cs
fwait
jnp
sbb
adc
jbe
fisttpll
push
gs
lock
loopne
adc
fisubrs
ja
rcrb
push
dec
addr16
pusha
dec
call
mov
inc
shrb
jne
jae
sub
pop
lret
push
out
dec
sbb
cmpsb
pop
fs
add
cmovle
shll
sub
loop
in
push
xor
sbb
push
sbb
pushf
std
arpl
mov
mov
stos
ja
sbb
pop
bound
frstor
cld
out
sub
xor
push
cmp
xor
dec
xchg
jg
and
in
sbb
cs
cli
and
mov
and
addr16
cmp
and
xchg
testl
scas
and
add
xchg
cli
add
ds
test
loope
cmp
lcall
sub
movsl
ss
arpl
adc
cmp
cmp
or
sbb
and
ret
cmp
ret
sub
enter
loop
push
std
and
dec
mov
pop
push
mov
test
mov
lcall
or
cld
pop
pop
ja
jle
cmp
push
push
mov
scas
pop
cmp
std
popa
xchg
mov
mov
dec
cmp
stc
cmpsl
ja
enter
dec
movsl
paddd
jne
scas
xor
fidivl
cmp
out
subb
sbbb
sbb
or
ljmp
outsb
pop
data16
inc
or
loope
mov
fs
jmp
js
jge
xchg
loope
xor
push
jbe
lods
dec
popf
std
jmp
dec
dec
inc
lahf
pop
movsl
int
push
mov
mov
call
pop
push
pop
mov
xchg
popa
lds
add
adc
subb
xchg
mov
cmp
cmp
xor
jo
popa
pop
arpl
loop
add
ss
inc
loopne
out
sub
xchg
pop
mov
jecxz
into
cmp
es
cmp
lcall
adc
div
out
mov
fisubrl
mov
lods
xchg
jmp
pop
repz
in
xor
jmp
stos
flds
push
cwtl
xchg
and
inc
sbb
cmp
test
loope
sbb
cmp
clc
sbb
xchg
scas
add
push
out
xchg
pop
dec
mulb
add
add
mov
mov
jns
pop
aaa
jecxz
popa
and
fs
insl
or
jl
mov
or
jnp
add
mov
xor
pop
and
dec
stc
mov
daa
jnp
test
cmp
lods
aam
out
arpl
mov
lods
into
sbb
mov
sub
sbb
mov
add
shll
cmp
jb
outsl
arpl
jo
mov
cmp
jge
xchg
aad
mov
aam
mov
pop
jmp
sbb
in
jae
sti
mov
mov
mov
enter
int3
and
imul
push
rcrb
movsb
add
push
call
icebp
arpl
adc
test
cwtl
loop
xlat
push
bound
pop
mov
fsubrs
popf
mov
xor
shr
fbld
jae
xor
and
mov
fisttpl
in
testb
and
add
test
dec
jecxz
mov
int3
push
and
mov
mov
jle
sub
xor
sti
add
pop
mov
mov
or
xor
pop
adc
sub
xchg
out
jl
cmp
dec
pop
dec
push
sbb
aas
or
pop
pop
pcmpgtb
and
pop
fiadds
je
scas
movlhps
mov
push
enter
jmp
sbb
insl
out
jecxz
pop
xor
mov
nop
jg
pop
mov
sbb
test
sub
pop
stos
or
fdivl
mov
xchg
push
adc
popa
lds
jne
movsl
push
mov
pop
testb
decb
push
mov
arpl
push
pop
loopne
xchg
clc
push
sbb
in
pop
sti
mov
out
mov
in
jl
mov
push
or
cmpsl
icebp
sbb
mov
jge
dec
or
and
push
or
ss
and
aaa
jo
loope
cmp
and
sti
outsb
ret
xor
sub
mov
gs
mov
jg
add
in
aas
jo
stc
add
in
out
push
pop
mov
push
cmp
imul
mov
lret
popa
in
push
push
loopne
fmul
adc
jecxz
aaa
push
sub
popa
stos
sub
sub
pop
fstps
or
jnp
insl
addb
adc
popa
and
sbbb
inc
add
scas
pop
pop
xor
bound
stc
test
test
lds
stc
inc
mov
dec
cld
popf
fisubrl
fwait
add
cmp
cmc
sbb
xor
pop
fisttpll
outsb
inc
xlat
mov
cmp
push
mov
mov
ss
mov
sbbl
xchg
fsubrs
scas
jo
xchg
cli
dec
daa
icebp
outsb
idiv
out
sub
sub
push
fidivs
fbld
inc
or
js
xor
test
jmp
add
rorl
xor
in
adc
or
xlat
push
xorl
das
push
loopne
push
loopne
daa
shr
sbb
or
dec
lcall
inc
pop
add
pop
enter
cmp
sub
hlt
stos
and
xor
iret
imull
cmp
xor
sti
push
add
xor
xchg
push
adc
sub
loope
out
scas
xchg
shll
fidivl
push
mov
xor
in
inc
test
mov
les
lret
pop
scas
lods
xchg
push
ja
gs
incb
mov
push
or
ret
ret
test
in
mov
sub
inc
cmp
cli
add
xchg
mov
sub
adc
pop
js
push
jo
jne
ljmp
cmp
or
ds
clc
xorl
clc
xchg
fnstcw
cmp
push
xchg
leave
lods
dec
xchg
xchg
aas
int
in
push
xlat
pop
pop
add
aam
cld
in
xor
mov
and
aam
movsb
dec
xchg
add
xchg
fcomip
maxps
lcall
jle
fisubrl
addr16
incl
and
je
adc
stos
mov
ret
movl
adc
leave
xor
push
add
iret
push
popa
xchg
loopne
xlat
mov
xor
xor
in
ficoml
sub
out
test
fwait
push
js
imul
in
sub
sarb
notl
mov
pop
push
aad
xor
fisttps
fwait
dec
addb
adc
loop
mov
lcall
push
jne
or
mov
sub
rcrb
sub
mov
hlt
or
cld
adcb
test
sub
hlt
xlat
popl
clts
mov
push
stos
cld
add
add
jno
invd
adc
jbe
sbb
loopne
insl
lahf
jno
cmp
mov
or
jo
loopne
cld
mov
pop
daa
repz
or
popf
or
lret
add
inc
clc
test
nop
rol
sahf
jp
xorl
sbb
mov
add
sub
mov
es
lods
std
pop
jp
repnz
cmp
dec
cmc
jl
cmc
sub
jb
pop
insl
fnstenv
push
lods
pop
sahf
adc
pop
push
ljmp
xchg
stos
xor
add
pushf
jbe
dec
push
or
cmp
jmp
jp
shl
incl
sub
lds
pop
inc
push
imul
adc
mov
jecxz
sub
jecxz
jmp
mov
mov
icebp
loope
cmpsb
pop
dec
sarb
dec
xchg
xchg
adc
pop
or
inc
stos
jle
iret
xlat
sub
push
sbb
mov
inc
cmp
mov
enter
dec
call
xchg
in
mov
outsl
rcrl
sub
out
scas
popa
sbb
inc
dec
daa
fldt
dec
and
sub
jge
jo
jo
sub
xchg
inc
pop
mov
mov
pop
add
xor
aad
adc
call
out
or
sar
in
ret
jb
cs
cmpsb
ror
jg
jle
push
mov
jecxz
inc
push
add
push
pop
iret
pushf
in
outsl
mov
dec
sbb
cli
xchg
jg
dec
push
pop
cs
lods
test
aam
sbb
lahf
ds
ds
adc
mov
mov
scas
push
and
nop
insb
jnp
sbb
pop
pop
popa
call
jmp
and
pop
mov
ljmp
loope
adc
dec
xchg
repnz
subl
in
data16
cs
and
arpl
jo
sbb
stos
cs
xchg
xor
outsb
aas
sti
call
xchg
or
sub
adc
inc
cmpsb
in
push
jb
push
jl
lods
inc
movl
push
push
fwait
add
call
movsl
repnz
call
add
lock
movsl
sub
repnz
xchg
sub
cs
aaa
js,pn
xchg
icebp
mov
sub
ret
enter
sub
lret
adc
addl
insb
dec
xor
js
je
add
ficoml
lahf
inc
call
xchg
cmp
mov
insl
mov
adc
sub
adc
imul
pop
repnz
js
pop
sub
xor
daa
lahf
push
xor
mov
in
popf
jl
xchg
data16
shrl
in
sub
repnz
insl
add
jae
je
dec
sub
mov
push
and
stos
cmp
in
mov
xor
call
xor
inc
test
pop
ljmp
pop
jb
dec
sbb
in
xchg
jp
ja
aaa
push
mov
pop
scas
pop
sub
mov
or
push
xchg
test
add
in
data16
sahf
mov
push
xor
add
xchg
cmp
xchg
inc
insb
aaa
mov
sahf
or
mov
jne
mov
leave
pop
ljmp
mov
push
mov
cmc
rcl
mov
sub
push
add
in
addr16
in
rcl
sub
push
sub
ljmp
insb
mov
stos
jp
mov
inc
cmpb
mov
popa
ljmp
dec
mov
cs
ret
pop
filds
inc
out
sub
mov
push
aam
fldt
lods
xor
mov
sarb
jno
data16
sub
popf
lods
jbe
inc
push
sbb
ret
adc
je
or
adc
adc
ljmp
lods
sbb
insl
mov
shl
push
inc
cld
sub
xlat
ds
cli
lods
arpl
sub
repnz
xchg
inc
fbstp
push
outsb
data16
sbb
mov
or
push
xchg
mov
add
lods
adc
nop
fnstsw
adc
sub
sub
jb
sub
jl
xor
ficoms
dec
fistpll
or
scas
jnp
lea
push
in
inc
mov
lods
cmp
and
push
or
xchg
jb
sub
rcll
jg
pop
sub
push
push
inc
enter
popf
icebp
inc
mov
sub
movsl
xor
fs
and
dec
nop
jb
push
mov
add
sub
or
iret
out
push
xor
pop
lods
or
rorl
imul
stos
pop
mov
lods
xor
dec
adc
add
cmpb
xor
sub
imul
lods
inc
lods
and
clc
roll
push
sub
push
pop
je
popa
lods
xorl
inc
ret
dec
fwait
xor
adc
sar
push
stos
jne
adc
mov
xor
movsb
in
or
xchg
push
lahf
jae
and
rclb
jnp,pn
xchg
inc
or
sub
mov
ljmp
xor
nop
lret
lods
call
add
stos
insb
push
xor
sbb
lods
cltd
or
inc
pop
pop
xchg
outsb
sbb
test
mov
aam
aaa
add
mulb
and
cmp
mov
sub
xchg
sub
xchg
in
popa
mov
jns
cmpsl
lods
push
repnz
push
fbstp
adc
push
inc
jns
and
stos
or
repz
mov
push
xchg
add
test
jg
and
pop
insb
ss
shrl
pop
pop
call
icebp
out
jo
xchg
jno
dec
sub
sbb
ret
sti
push
mov
lahf
roll
or
lods
insb
inc
jb
es
notb
pop
stos
loope
pop
mov
icebp
dec
mov
sub
sahf
sbb
fldcw
mul
lret
pushf
add
push
and
lahf
in
inc
jb
pop
sbb
loope
jb
inc
push
xchg
icebp
mov
aam
xor
inc
test
in
pop
mov
insl
andl
lods
popa
xor
inc
sbb
lret
push
jge
movsl
sub
sub
pop
inc
inc
outsb
or
mov
stos
add
inc
cwtl
mov
add
rcll
inc
sti
push
sub
mov
mov
jb,pt
shll
in
popa
sbb
mov
enter
cltd
lret
call
sub
or
cld
jp
sub
ret
addr16
pop
dec
aas
dec
mov
das
lcall
mov
sub
sbb
int3
pop
sbb
sbb
cmp
lcall
mov
sub
shld
mov
scas
or
mov
outsl
jge
mov
sti
push
call
outsl
sbb
jb
sub
xchg
add
add
imul
stc
jne
jg
and
enter
jmp
pop
sbb
in
mov
outsb
adc
dec
fnstenv
and
mov
pop
repz
or
cmp
and
and
push
push
jns
sbb
xchg
lret
ljmp
mov
fists
push
fsubr
cmpsl
not
mov
adcb
aad
pop
out
xor
mov
ret
jecxz
scas
adc
loope
and
aas
lcall
push
arpl
jl
jp
sub
ds
shll
dec
cli
or
adc
and
add
repz
xchg
and
sarl
dec
rcrb
fbld
cltd
inc
and
push
pop
ds
jo
adc
cmp
clc
daa
sti
pop
test
and
lret
cmp
jne
int
pop
jmp
xor
mov
in
xchg
pop
ror
cmp
lods
push
adc
repz
lret
xchg
mov
sarl
jnp
add
lods
fs
daa
enter
aas
loope
mov
jne
xchg
pop
and
insl
jbe
outsl
jge
jle
cmp
sahf
dec
xor
xchg
aaa
hlt
mov
enter
mov
dec
jl
mov
mov
cmp
jle
push
mov
scas
push
fwait
and
xchg
in
inc
adcl
sub
mov
dec
hlt
aad
xor
cmp
out
jo
dec
add
arpl
test
and
push
push
hlt
mov
adcb
nop
test
std
pop
mov
cmp
jl
mov
repnz
ret
push
ljmp
fwait
lock
jmp
xchg
adc
in
mov
xor
sub
cmp
fidivrl
pop
aad
mov
aas
jecxz
xchg
cmp
jp
repnz
and
sbb
or
sub
cwtl
call
and
ja
xor
or
int
or
add
ds
arpl
push
adc
or
int3
and
inc
dec
and
movsl
sarb
xchg
and
call
mov
sarl
arpl
dec
loopne
mov
ret
adc
test
rorl
cmp
sub
lret
lds
xchg
inc
mov
add
and
add
mov
lcall
sub
jmp
cmp
push
call
adc
subl
mov
jnp
dec
xor
xor
test
int
or
aaa
jbe
pop
dec
mov
test
leave
jns
lahf
fbstp
and
loop
push
sub
jecxz
and
aas
sub
pusha
xchg
addl
js
push
mov
js
jnp
ret
sub
and
sbb
jp
and
jl
pop
data16
cld
jae
lock
sahf
or
cld
pop
lds
push
and
aas
xlat
mov
or
mov
and
jae
shll
inc
sub
mov
call
jle
sarb
push
imul
fidivrs
pop
mov
xchg
xor
mov
cmc
and
ss
das
and
ret
out
jnp
rol
cmp
dec
push
imul
xor
cmp
cwtl
pop
or
pop
mov
movsb
cld
add
cmp
lahf
adc
or
sbb
adc
shrb
sub
xor
loop
rclb
pop
dec
push
inc
ret
outsb
and
dec
mov
sbb
cmp
or
jb
adc
movsb
add
push
and
jb
pop
sbb
ret
pop
dec
sub
sub
sub
pop
mov
and
mov
es
xor
call
mov
dec
sub
xor
sub
repnz
inc
insb
adc
xchg
daa
lahf
jg
and
mov
insl
cs
push
mov
add
mov
shr
andl
adc
test
sub
or
jno
push
xor
shll
mov
sbb
xor
mov
ljmp
imul
cld
stos
add
push
or
repz
repnz
movsb
in
or
pop
jbe
add
fcompl
and
in
mov
sub
mov
xor
mov
and
mov
push
pop
or
in
inc
mov
ja
push
lods
and
lahf
imul
insb
mov
push
push
xchg
add
insl
xor
repnz
rolb
shl
jnp
or
dec
sub
repnz
js
pop
call
in
mov
jne
mov
out
call
adc
cmp
pop
or
flds
ja
sbb
outsb
sub
ljmp
sub
xor
xor
jle
call
lcall
adc
xor
cltd
insb
repnz
sbb
fistl
dec
lahf
dec
push
xchg
scas
or
icebp
dec
mov
stos
sbb
ret
cmp
xchg
test
stos
jb
sub
scas
sub
daa
rorb
movsl
call
inc
and
pop
or
xor
mov
or
mov
subl
xor
sbb
loop
dec
mov
imul
mov
xor
cmp
xor
es
mov
inc
loope
outsb
sub
push
add
and
aaa
inc
push
sub
icebp
mov
push
test
orb
cmp
mov
mov
add
addr16
gs
cmc
push
jnp
dec
sub
stos
mov
movl
stos
adc
fucomi
jmp
and
mov
leave
push
dec
xor
sbb
push
push
sub
mov
cltd
cmp
inc
push
sub
jno
dec
adc
ret
in
push
pushf
xor
rclb
insb
sub
mov
dec
sbb
into
adc
jno
call
pop
out
add
sub
push
cwtl
cmp
mov
test
xor
sarb
pop
in
or
cmc
push
daa
lahf
inc
test
sub
dec
xchg
out
jbe
icebp
mov
xchg
cmpb
mov
mov
roll
add
xchg
in
data16
sbb
icebp
push
pop
fbld
call
or
mov
enter
aam
adc
cmp
data16
repnz
aad
add
push
cmp
jo
sbb
std
adc
jae
jmp
test
data16
xor
mov
ljmp
jg
test
insl
pop
mov
mov
xchg
push
pop
dec
mov
jb
jne
inc
sub
xor
xchg
mov
rcrb
or
js
popf
icebp
imul
jle
call
addr16
push
xchg
add
adc
xor
lahf
lods
inc
xor
arpl
push
call
inc
cltd
scas
and
ljmp
mov
mov
out
test
jae
mov
pop
sbb
call
dec
pop
push
sub
dec
xor
or
addb
sub
out
nop
lcall
xchg
popf
and
sbb
cltd
sbb
jge
shr
jno
xorb
adc
sub
push
loope
push
insl
adc
push
inc
push
addl
lods
push
push
xchg
aaa
pop
call
mov
data16
jno
mov
push
push
mov
add
sub
rclb
rcll
push
dec
xchg
inc
in
sbb
lahf
pop
push
pop
iret
jg,pn
mov
dec
or
ljmp
lods
or
cltd
mov
shlb
inc
stos
add
in
push
mov
dec
sbb
ret
lahf
dec
sub
ljmp
lods
xchg
mov
sub
sub
ds
sub
lods
add
data16
sarb
incl
test
sub
pop
cmp
push
dec
fnstsw
ljmp
sub
stos
xchg
cmpsl
inc
clc
cs
stos
mov
or
sub
mov
sub
inc
lahf
test
push
pop
and
imull
jnp
mov
out
adc
sub
repz
insb
xor
xchg
sub
cmc
pushf
jmp
and
fists
xchg
das
ds
push
scas
xor
in
jnp
es
inc
push
add
loopne
cltd
data16
sbb
fcmovbe
push
lods
js
pop
and
mov
rolb
test
adc
pusha
rolb
out
adc
pop
fwait
mov
or
mov
icebp
sbb
sub
lods
ljmp
fists
rclb
cltd
lock
and
bound
std
jecxz
jl
cmp
lock
pushf
push
sub
lea
and
adc
les
bound
and
push
insl
mov
cmp
jnp
loopne
mov
in
sub
pushf
pop
mov
cmp
mov
sub
mov
mov
adc
mov
jns
mov
sub
xchg
push
inc
das
pop
outsb
daa
sub
and
fsubrs
stos
roll
jecxz
jae
mov
and
xor
jg
icebp
mov
icebp
mov
cmp
out
cmc
gs
fwait
test
cmp
inc
flds
mov
sub
je
push
add
push
xor
adc
jns
cmp
fisubl
jmp
lea
lds
test
daa
mov
lods
mov
test
add
pop
fs
and
xchg
mov
inc
and
hlt
rcll
add
xor
and
fcomi
test
push
aad
cltd
sub
or
fbld
jg
stos
add
pop
and
popf
loop
push
sub
adc
fstpl
push
ja
imul
add
imul
pop
cmpb
out
test
adc
push
divl
cli
xor
and
sti
jmp
popf
mov
addr16
pop
pop
mov
inc
mov
mov
not
insl
shll
push
les
adc
mov
xor
fs
lahf
bnd
push
sub
das
push
xchg
repz
cmpl
pop
ja
in
fdiv
sti
sub
insb
sbb
push
ja
sbb
add
js
inc
push
cmp
data16
push
cmp
xlat
call
adc
sbb
std
cwtl
push
mov
clc
sub
call
pop
mov
aad
jg
mov
and
xchg
jae
add
pop
mov
adc
stos
cmp
jecxz
das
sbb
ja
add
xor
and
aad
jmp
les
inc
data16
mov
push
mov
sub
pop
push
enter
pusha
lcall
and
xchg
test
lcall
icebp
mov
popa
push
in
loopne
sbb
cmpl
in
data16
fnsave
sub
cmpsb
dec
dec
lahf
aam
fs
and
repnz
imul
adc
sbb
mov
and
sbb
ljmp
lds
sbbb
test
push
je
and
and
adc
pushf
stos
sub
nop
fidivl
je
and
movsb
out
push
test
stc
pop
dec
jp
cmp
mov
pop
and
jns
xchg
add
mov
daa
das
sbb
in
xor
mov
sub
nop
pop
sub
add
sbb
add
and
mov
inc
jo
in
repz
aas
ret
arpl
inc
or
and
clc
and
add
in
ds
adc
inc
nop
in
lods
push
cmc
pop
mov
shll
loopne
inc
mov
jp
cmp
in
push
jb
push
xchg
out
mov
inc
cmp
or
xor
jne
sbb
loopne
imul
cmpsb
data16
or
push
mov
sub
inc
add
jb
dec
dec
push
je
jmp
or
int3
dec
lgs
xor
push
daa
popf
and
adc
pop
push
inc
insl
call
ds
shrb
in
stos
push
jge
insb
push
and
sbb
aas
mov
add
fwait
and
add
gs
in
in
adc
cmp
repnz
fcompl
cmpl
call
or
movsb
loope
sar
push
xchg
leave
aas
sub
push
pushf
repnz
stos
push
jg
jmp
bound
call
ss
adc
pop
popf
out
mov
cld
call
cltd
ret
pop
dec
cmp
inc
pop
cld
or
cli
inc
sub
dec
mov
insb
lret
push
fsubl
and
mov
movsb
adc
cmp
mov
lods
lock
mov
je
out
scas
push
aad
clc
adc
addb
neg
hlt
mov
inc
dec
sub
sbb
add
sub
inc
stos
out
mov
pop
adc
sbb
pop
mov
rolb
jb
rcrl
out
fiaddl
fildll
add
add
loop
pushf
mov
repnz
inc
cld
mov
data16
jo
jmp
pop
mov
pushl
push
fwait
popf
push
xchg
nop
cmp
leave
js
dec
into
inc
cld
hlt
pop
sti
out
gs
loop
and
mov
push
or
inc
cmpsl
mov
scas
jp
shrl
xchg
sub
ss
test
adc
test
mov
mov
mov
cld
test
movsb
mov
xor
inc
cmp
lods
mov
cmp
pop
adc
cltd
mov
cmpsb
inc
and
pop
sub
aas
inc
ja
xor
mov
adc
mov
aas
sbb
sub
xor
mov
sbb
mov
add
ret
add
stos
mov
sub
and
pusha
xchg
hlt
dec
cli
adc
cmc
mov
push
sbb
popa
sub
cmpsb
mov
.byte
pop
sbb
add
jecxz
ds
xchg
in
push
negb
or
rolb
fadds
aam
or
push
es
nop
xchg
psllw
shlb
xchg
jo
cmp
insl
test
add
repz
ffree
mov
ljmp
outsb
sti
adc
mov
xchg
cli
fldcw
pusha
or
push
or
push
test
jmp
fucomip
push
inc
mov
inc
addb
xchg
cmp
jg
bound
jmp
add
out
cmp
cmp
jl
out
cmpsb
inc
les
xchg
dec
sti
xchg
aam
xor
jg
cmp
cmp
mov
mov
jle
movsb
cmp
data16
loop
scas
xor
and
insb
repnz
jp
add
sub
inc
cmc
add
test
cld
mov
xor
leave
roll
and
inc
lock
lods
loopne
push
idivl
jae
jno
ret
xor
inc
pop
pop
out
xchg
lock
clc
adc
popf
out
xchg
xor
out
jge
data16
pop
arpl
sbb
cmc
lea
int3
fs
movaps
cmp
jl
xlat
movsl
push
mov
pop
int
aas
dec
in
jecxz
loop
mov
mov
enter
bound
xor
mov
xor
jmp
and
faddp
dec
ljmp
mov
lock
xor
and
rclb
xchg
mov
test
lea
sbb
inc
cmp
repz
cli
mov
ja
adc
inc
add
test
inc
ljmp
insl
mov
dec
dec
add
xchg
mov
in
sub
push
sti
mov
bound
je
adc
xor
mov
adc
loopne
sub
pop
cmp
sub
fildl
jp
pop
imul
insl
loopne
popa
adc
xchg
int3
push
loope
mov
ss
sbb
popf
shrl
or
pop
insl
mov
sub
pushl
lcall
je
lods
sub
lock
dec
aad
mov
adc
lods
ret
cmc
inc
xor
in
sbb
outsb
mov
xor
bound
call
leave
or
out
sbb
fiadds
cs
sub
mov
les
fdivl
gs
sbb
or
sbb
sub
lods
cmp
sub
add
add
mov
cltd
loopne
out
mov
packuswb
bound
lret
in
jl
subb
mov
inc
inc
jnp
push
push
cmpsl
cs
push
and
pop
mov
das
push
test
push
mov
cmp
shrl
test
lret
sbb
addr16
sbb
pop
loopne
mov
stos
cmp
fists
pushf
inc
shl
mov
insb
or
fnstcw
lea
frstor
mov
std
push
push
arpl
jge
mov
cmp
pop
dec
push
outsb
jmp
xchg
xor
pop
test
fbstp
pushf
mov
cmp
xor
add
into
aaa
mov
ds
ljmp
pop
out
lahf
fstpt
mov
push
mov
or
xchg
push
out
repz
xor
mov
push
sbb
arpl
add
inc
xor
movsl
out
jns
int3
pop
data16
add
imul
xor
sbb
decb
loop,pn
in
fisubs
sbb
movsl
xor
mov
push
and
daa
test
das
add
jp
adc
sahf
ret
loop
or
ret
cli
jge
es
test
pushl
mov
xlat
push
jge
call
popa
mov
mov
push
adc
xor
and
cmp
jmp
ljmp
sbb
clc
jecxz
outsb
fxch
jne
jnp
jge
out
mov
lods
and
decl
xor
dec
dec
mov
bound
testl
ja
loop
sarb
sbb
mov
jae
mov
xlat
and
sub
push
lret
loope
mov
mov
iret
xor
mov
cmp
sbb
or
imul
push
inc
xchg
push
adc
stc
insl
nop
mov
lods
jmp
stos
insl
scas
pop
inc
pushf
mov
dec
mov
popa
or
sub
loope
adc
dec
add
dec
rcl
lahf
out
mov
adc
ret
or
test
lea
dec
mov
or
mov
in
adc
mov
inc
or
into
hlt
xchg
ds
push
mov
test
insl
neg
loopne
and
aad
mov
or
int
arpl
jbe
ret
divb
add
jp
aam
jae
insb
jge
imul
or
out
pop
mov
das
and
std
dec
pop
jecxz
push
test
into
adc
mov
xchg
push
test
dec
sub
add
mov
aaa
add
and
sub
sub
pusha
mov
andl
dec
shrb
idivb
jge
fwait
push
sub
mov
cs
outsl
pop
lods
loope
sbb
ret
insb
test
and
xlat
aas
sub
xor
mov
in
push
aaa
std
loopne
mov
push
daa
fwait
xchg
xlat
das
jge
jecxz
mov
out
sub
jge
jg
and
dec
ficompl
xor
or
or
jecxz
das
mov
xchg
mov
inc
sti
loop
and
fs
and
mov
and
jno
cmpsb
ljmp
test
sub
loop
pop
pop
sub
stos
ljmp
add
sbb
jno
mov
push
xchg
mov
popa
push
xchg
outsl
cltd
negl
pop
jge
adc
sub
daa
inc
jb
mov
popa
mov
jg
jp
sti
push
and
sti
inc
push
addr16
xlat
shll
jge
test
aaa
data16
and
daa
sbb
xchg
out
mov
cwtl
in
fsubs
jno
clc
dec
insb
sub
aas
out
es
je
mov
adc
ds
push
incl
sub
frstor
mov
pop
movsb
lods
dec
add
insl
lods
test
sahf
and
rol
adc
jp,pn
pop
int
out
loop
add
pop
lcall
repz
mov
jnp
add
and
int3
add
stc
pop
inc
rol
inc
sub
mov
stos
jbe
add
cmp
cmpsl
add
in
xchg
pop
jle
insl
dec
mov
mov
adc
sbb
aas
cli
inc
jmp
and
push
fisubrl
jle
inc
sub
pushf
icebp
test
leave
rcl
mov
xor
xchg
and
test
inc
mov
sbb
sbb
adc
mov
jmp
stc
fcomi
imul
sub
pop
lods
mov
je
pop
jp
sbb
push
sti
sub
sarb
pop
in
repnz
leave
sub
add
je
fildl
sub
sbb
sub
loope
stos
inc
jmp
adc
insl
adc
sbb
shrb
in
repz
push
in
test
fbld
pop
xchg
sub
testl
loop
dec
test
and
lock
insl
inc
fwait
push
jmp
xchg
xchg
sbb
push
js
cmp
andb
xchg
loope
clc
sbb
call
xor
stc
les
cwtl
dec
test
idivl
nop
addr16
mov
sub
into
imul
inc
lds
jne
nop
pop
adc
push
xchg
lods
out
xor
popf
mov
jbe
int3
adc
test
popa
dec
adc
shr
daa
test
pop
cmc
negb
sbb
bound
in
cmpsl
cmp
xor
xlat
dec
mov
fnstenv
jle
push
lock
add
mov
push
ss
inc
jmp
mov
shll
add
in
push
lret
aad
insl
dec
push
mov
mov
imul
add
insb
mov
mov
imul
fldl
repz
dec
daa
sub
repz
xor
faddp
pop
push
fcoml
push
outsl
popa
divl
movb
cmp
sbb
sbb
outsb
mov
xchg
loop
dec
mov
pop
shrb
jno
sbb
add
jo
or
inc
adc
dec
and
sub
adc
hlt
xchg
jmp
inc
inc
lods
push
aas
mov
mov
insl
rol
clc
lret
pop
cmp
clc
cmpsl
sub
xor
pop
mov
stos
push
pop
aaa
shl
movsl
and
mov
dec
test
insb
nop
das
mov
jge
ss
cltd
jne
or
lock
push
nop
cmp
shl
mov
lods
in
test
or
dec
jg
sub
xchg
jno
sti
add
inc
movsl
add
insb
add
inc
add
je
add
add
add
xor
inc
jbe
xor
imul
xor
push
push
jae
aaa
imul
outsb
dec
push
imul
inc
push
xor
cmp
jo
push
pop
je
pop
push
xor
xor
dec
addr16
push
dec
pop
dec
inc
js
dec
push
jno
inc
cmp
cmp
cmp
imul
push
push
pop
pop
data16
popaw
dec
pop
jb
cmp
ss
inc
xor
popa
push
js
xor
imul
aaa
dec
push
xor
inc
inc
dec
pop
bound
inc
push
push
jae
dec
xor
push
push
dec
outsb
jo
dec
jae
jo
add
add
inc
jp
popa
jbe
je
push
inc
push
ja
inc
xor
push
data16
inc
je
xor
addr16
push
bound
push
jb
dec
bound
dec
jo
jne
je
push
arpl
imul
outsl
pop
xor
aaa
push
push
xor
push
inc
aaa
jo
push
dec
pop
inc
push
xor
push
aaa
jns
inc
xor
dec
dec
jno
jns
push
inc
imul
inc
push
ja
push
pop
dec
dec
dec
push
cmp
push
xor
imul
popa
js
xor
inc
jp
xor
inc
pop
dec
arpl
xor
jp
xor
inc
xor
jne
insl
ss
jb
cmp
dec
inc
push
inc
push
push
arpl
jbe
dec
xor
xor
dec
inc
jns
inc
dec
insl
inc
jb
xor
addr16
inc
inc
jno
imul
jbe
cmp
adc
xor
orb
add
add
push
push
push
jbe
push
jp
outsb
imul
gs
push
inc
push
popa
xor
outsl
insl
arpl
dec
push
arpl
dec
popa
dec
inc
push
inc
inc
push
addr16
aaa
jb
xor
xor
jno
imul
js
push
jno
inc
js
dec
jb
cmp
pop
arpl
xor
jne
push
push
imul
outsb
jns
jno
inc
xor
imul
arpl
js
cmp
inc
insl
dec
jae
arpl
inc
ss
xor
jo
xor
addr16
xor
jp
dec
imul
dec
jbe
jbe
dec
dec
outsl
cmp
dec
jb
xor
pop
js
inc
cmp
add
inc
dec
dec
jb
xor
aaa
js
push
inc
dec
insl
fs
xor
inc
push
add
add
pop
cmp
dec
push
js
outsb
dec
dec
dec
dec
push
jae
dec
addr16
pop
xor
inc
push
inc
je
inc
push
pop
dec
cmp
insb
dec
arpl
dec
pop
xor
js
imul
push
dec
jo
inc
inc
insb
inc
dec
jae
pop
ja
popa
inc
dec
inc
jne
pop
dec
popa
xor
jb
jbe
data16
inc
inc
insl
fs
pop
js
cmp
xor
jno
push
inc
dec
bound
outsl
addr16
ja
inc
jb
push
xor
jae
dec
jne
jb
xor
push
inc
fs
inc
aaa
pop
xor
arpl
push
ja
jns
xor
dec
xor
inc
imul
popa
xor
add
cmp
and
or
outsl
dec
push
cmp
push
inc
cmp
inc
bound
jb
jo
push
popa
jno
jae
arpl
ss
add
imul
push
push
inc
xor
outsb
insb
dec
cmp
addr16
xor
jno
popa
push
arpl
ss
push
imul
insb
insl
push
insb
jno
jne
cmp
dec
addr16
addr16
xor
cmp
insl
dec
push
dec
inc
xor
outsb
push
pop
dec
outsb
jbe
ja
push
inc
insb
dec
jp
push
inc
inc
inc
add
add
or
sbb
xadd
xor
imul
push
gs
dec
arpl
insl
inc
insl
inc
dec
pop
pop
push
insb
push
jo
bound
imul
add
push
dec
jp
jbe
je
dec
push
push
popa
pop
push
imul
push
xor
push
jne
fs
insl
ss
dec
insl
dec
dec
bound
fs
cmp
dec
push
dec
pop
insb
imul
insl
cmp
xor
inc
arpl
pop
jno
push
inc
jns
jb
push
xor
dec
aaa
insl
jp
pop
push
jne
gs
jbe
dec
cmp
pop
jbe
jae
dec
imul
xor
jp
bound
inc
popa
ss
push
push
xor
pop
inc
dec
outsb
imul
jbe
insl
inc
push
dec
dec
ja
add
inc
add
ja
jb
xor
cmp
dec
popa
dec
inc
pop
inc
inc
push
jb
dec
jbe
push
dec
aaa
inc
inc
ja
push
insb
dec
jp
xor
dec
imul
push
jb
inc
cmp
popa
push
push
popa
data16
push
xor
push
pop
outsl
cmp
inc
pop
jp
aaa
push
jb
jb
dec
inc
imul
aaa
pop
pop
ja
xor
inc
dec
jb
insb
push
addr16
data16
cmp
je
push
aaa
push
xor
cmp
cmp
outsb
gs
je
insb
push
jb
jns
inc
popa
jae
xor
xor
dec
cmp
jae
dec
jp
inc
gs
fs
push
push
push
inc
inc
addr16
insl
inc
jp
push
imul
gs
inc
xor
inc
ss
inc
insl
push
push
xor
inc
inc
push
xor
aaa
arpl
jp
js
push
add
add
into
enterw
cmc
cmp
pop
add
add
add
adc
add
and
add
cmp
add
add
add
add
add
push
add
addb
add
add
add
push
add
add
add
add
add
add
add
add
nop
add
hlt
add
add
add
hlt
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
aam
cmp
add
mov
and
add
add
add
add
add
add
add
push
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
xor
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
add
inc
add
add
outsl
add
je
ja
popa
add
add
add
add
add
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
cmp
push
add
push
add
add
add
adc
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
je
add
outsb
add
insb
add
popa
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
push
add
push
add
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
aas
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
gs
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
