mov
dec
sahf
sbb
out
adc
add
mov
add
decl
jbe
inc
add
mov
mov
push
add
jge
and
add
add
jmp
jg
push
inc
cmpsb
add
cwtl
add
add
add
pop
jbe
testl
movsb
xchg
push
clc
xchg
adc
testb
out
in
lcall
push
stos
mov
cmp
sbb
sbb
pop
movsl
add
push
aam
add
adc
test
and
push
incl
dec
add
push
in
add
sub
add
in
mov
ficomps
sbb
mov
outsl
pop
sahf
enter
cmpsl
js
xor
sbb
out
pop
mov
jl
fucomp
sub
in
mov
negl
daa
jae
dec
mov
scas
add
cld
add
dec
inc
lock
in
pushl
inc
add
xor
push
loope
pop
testl
pop
push
insb
mov
leave
dec
imull
pushl
dec
adc
cmpsb
ror
arpl
xchg
divl
gs
jg
xor
jp
add
xchg
scas
add
mov
add
inc
or
add
nop
xor
push
out
std
mov
cmp
lahf
ja
repz
add
jg
mov
add
inc
cmp
outsb
inc
mov
cs
mulb
std
shrb
and
xor
xchg
aaa
ret
repnz
add
insl
call
jb
decl
inc
add
mov
pop
call
loop
pop
xor
sub
dec
push
pop
popa
popa
sbbb
add
mov
xchg
xchg
bound
aaa
adc
and
fdivr
das
das
xchg
xchg
add
mov
js
sti
out
mov
or
inc
lock
push
add
lea
ja
loopne
xchg
push
xchg
out
rolb
mov
outsl
sub
call
push
add
test
mov
pop
pop
lods
xor
or
stos
test
rcll
repnz
add
stos
cmp
inc
push
add
in
lcall
sbb
cli
add
test
inc
push
in
scas
cmp
add
in
decl
mov
sub
pop
loope
sbb
lcall
cs
fildl
cli
push
leave
cmpsl
insb
sbb
jge
hlt
add
add
imulb
pop
dec
addb
outsb
stos
rcll
mov
mov
push
pushf
stos
mov
mov
mov
call
in
enter
fildl
or
sarb
add
add
add
test
add
pop
mov
pop
or
pop
fsubs
dec
dec
add
stos
mov
testb
sub
pop
popa
inc
push
add
stc
insl
jnp
cmp
montmul
cmpsb
inc
and
pop
lock
sahf
add
lock
and
xor
and
sub
stc
les
pop
dec
or
jmp
lea
mov
lea
mov
cld
data16
inc
add
mov
jbe
push
imul
xchg
loopne
loopne
mov
mov
push
iret
lods
jb
fdivr
imulb
add
fdivs
sarb
arpl
sbb
rcrl
xchg
add
dec
push
sarl
jg
aam
sub
mov
dec
sub
imul
mov
fisttpll
and
and
insl
clc
jns
test
movsl
lock
mov
in
aaa
ss
pop
sbb
adc
add
or
es
cmc
add
dec
gs
pop
pop
outsb
dec
or
jp
push
add
insb
add
stos
push
mov
decl
add
ret
sbb
add
ja
or
mov
fisttps
xorb
popf
aad
imulb
xchg
outsl
mov
mov
lods
sub
mov
mov
arpl
mov
xchg
sub
out
fcmovnb
or
leave
jmp
stos
outsl
mov
test
mov
ret
cmp
cmp
pop
out
pop
xor
idivl
push
shll
push
xor
add
xchg
dec
outsl
fldl
inc
xor
enter
js
fistl
cmpsl
pop
push
add
mov
ss
idivb
inc
test
xchg
out
movsl
movsl
inc
adc
pop
jnp
adc
cmp
sbb
or
loop
sbb
jbe
ficoml
mov
add
repnz
xor
add
xor
jnp
mov
mov
add
clc
pop
fnsave
jmp
push
cmp
test
mov
dec
movsb
xchg
addr16
sub
cld
cmp
inc
inc
xchg
cld
dec
xor
inc
jns
je
fildl
mov
xor
lret
lock
aam
cmp
cmpsb
fdivs
mov
js
repnz
jbe
mov
dec
mov
and
fimull
xor
adc
scas
les
gs
orl
data16
xlat
mov
xchg
ficomps
xchg
aam
jl
ret
fstps
ja
and
inc
je
pop
ds
pop
dec
mov
inc
aam
jge
xchg
incl
in
and
xorb
xor
pop
push
fstps
mov
cs
pop
xlat
loope
pop
ja
lahf
add
push
jge
dec
psubd
out
pusha
pop
loope
xchg
add
mov
outsb
cld
shlb
ljmp
lock
push
push
cli
xor
push
js
in
add
fsub
scas
outsl
add
pop
icebp
jne
sbb
add
sub
das
cmpsb
lods
dec
pop
jmp
dec
push
mov
lds
test
sbb
pop
dec
sub
sarb
mov
push
cmc
or
scas
adc
dec
in
out
jle
imul
ret
sbb
mov
in
aad
es
mov
push
sbb
dec
loop
test
int
fists
adc
test
mov
bound
loope
adc
jns
or
inc
arpl
sbb
ficompl
icebp
pop
mov
push
out
add
dec
scas
and
pop
xchg
testb
lret
mov
xor
rolb
cmp
pop
nop
ss
jo
push
cmp
add
popa
and
iret
add
data16
push
pop
out
mov
xchg
mov
sbb
sbb
jo
xchg
mov
data16
xor
movsb
outsl
in
jmp
test
ja
hlt
adc
fstp
in
xor
dec
in
sub
xchg
mov
xchg
addb
out
push
addl
sbb
inc
jl
in
outsb
mov
out
sub
jge
in
enter
loop
jecxz
mov
arpl
out
bound
hlt
int3
das
in
mov
pop
push
sahf
jo
sbb
sarl
xor
cmp
cs
loop
xchg
aaa
xchg
out
sub
stos
shlb
xor
divl
jecxz
sub
adc
fdiv
inc
push
repnz
rolb
xor
push
cld
popf
das
mov
fstp
lea
and
out
jmp
cli
lcall
xchg
mov
push
fidivs
rcll
inc
cmp
loopne
je
jecxz
push
addr16
in
pushf
mov
mov
sti
fisubl
inc
stc
jb
movsb
push
call
push
fadd
dec
inc
push
xchg
mov
pop
mov
shl
xchg
lret
sub
adc
lods
insl
fcomi
shlb
les
fstl
add
ret
sbb
mov
jecxz
outsb
popa
push
pop
xchg
fildl
test
sbb
mov
mov
out
outsb
sub
inc
ficomps
and
cs
repnz
push
aam
add
dec
scas
xchg
ds
add
sub
push
xorb
pop
loope
popa
add
inc
xor
pop
in
fsubrl
insb
jo
aam
lock
iret
or
sbb
fwait
call
push
adc
mov
dec
test
pop
jae
xchg
fldt
add
stos
cmc
stos
jl
std
shlb
cltd
popf
sbb
mov
push
add
mov
add
inc
mov
pop
icebp
je
test
mov
mov
xchg
ret
ret
or
es
mov
pop
mov
mov
jl
or
pop
mov
fidivs
pushl
cmp
pop
mov
dec
inc
shll
xchg
std
call
ret
xor
add
js
pop
jge
dec
leave
shll
pop
ret
lcall
sbb
fists
cmp
mov
pop
insb
fistpll
or
or
and
mov
mov
or
scas
shlb
xchg
insb
das
out
dec
xchg
dec
add
stos
xchg
xchg
cmp
mov
pop
sti
sub
sub
filds
cs
mov
lods
pop
loop
push
dec
rcrl
ret
lds
int
lea
pop
mov
cmpsl
jecxz
lock
push
aaa
or
cmp
sub
es
outsl
mov
test
jmp
js
mov
mov
loop
jmp
xor
divb
or
mov
imul
lahf
arpl
loope
jl
jg
ret
and
dec
loope
imul
xchg
pop
cld
dec
push
adc
js
mov
sti
cld
insb
dec
mov
dec
lods
lret
pop
and
mov
add
xor
jae
adc
sbb
xchg
inc
lds
xorl
nop
cwtl
sbb
pusha
push
iret
repnz
ficoms
in
fldl
xor
jmp
add
lret
fdivrs
adc
repnz
lds
mov
sbbl
movsl
jmp
int3
rcrb
in
ret
movsb
mov
or
cmp
mov
adc
mov
jmp
insb
cmpsb
das
ror
mov
or
in
xor
test
outsl
sahf
shll
adc
pusha
jno
fadd
sbb
cwtl
mov
rdpmc
dec
fcomi
xor
adc
call
and
xor
adcb
das
in
and
dec
ds
lahf
jmp
int3
jg
or
sub
inc
iret
loop
les
ss
adc
repnz
jmp
ja
dec
lods
fnsave
outsb
lea
pushf
jns
add
sbb
ret
adc
mov
mov
scas
aaa
pop
push
test
push
push
or
into
cmp
push
inc
mov
fistl
adc
fsts
mov
out
in
jl
jns
xor
fildll
pop
ds
les
cmp
imul
add
addr16
jg
and
cmp
sbb
and
inc
xchg
xor
mov
xchg
daa
inc
dec
outsl
mov
xor
in
in
ss
outsb
cmc
jbe
push
mov
test
retw
shr
jg
and
icebp
mov
fildl
loope
mov
adc
sbb
shl
and
and
les
adcl
push
dec
jecxz
pop
or
adc
aam
push
cmp
gs
hlt
pop
cli
in
jne
out
sarl
pop
and
xor
pop
ss
popa
and
int3
xor
gs
add
xchg
mov
jg
icebp
mov
ror
push
xchg
sbb
jo
pop
gs
push
xchg
in
push
sub
pop
add
in
call
inc
imul
adcl
mov
jo
push
sbb
rorl
pusha
cli
test
xchg
sub
sbb
jmp
test
xor
cmp
jbe
add
arpl
mov
mov
clc
push
mov
decb
pop
pop
xchg
mov
popf
decl
push
out
xor
xchg
xchg
stos
out
and
pop
lret
inc
fst
mov
xchg
fsubrs
sub
test
shr
mov
add
stos
mov
mov
sbb
insl
clc
test
mov
in
dec
leave
cwtl
pop
xchg
cmp
fdivp
nop
sub
enter
xor
ljmp
pop
xchg
cmp
cmp
outsl
jo
ret
insl
and
das
fidivrl
dec
addr16
cmpsb
shl
push
adc
or
sahf
cmp
inc
add
sbb
mov
cwtl
lods
xchg
cmpsb
mov
jae
dec
sbb
rolb
dec
mov
mov
pop
mov
dec
les
xchg
xchg
insb
ja
adc
sub
fisttpl
in
cmpsl
mov
sub
icebp
cli
fucomi
sbb
neg
pop
sbb
push
pusha
scas
lock
push
pushf
shlb
int
xor
mov
dec
xchg
test
mov
das
mov
mov
sub
in
dec
or
fdiv
adc
loopne
shll
es
scas
sbb
jecxz
add
aas
fcomps
enter
pop
mov
sub
and
sbb
insb
repz
push
xor
xchg
test
jb
dec
add
ret
pop
das
std
bnd
jmp
xchg
adcl
sub
mov
jmp
push
sub
addb
xor
or
mov
dec
pushl
iret
push
jp
jmp
cs
cmp
repz
xlat
cmp
fdivrl
dec
cltd
or
std
pop
sti
mov
adc
js
xor
sub
sti
inc
sbb
lods
adc
inc
leave
add
xor
pushf
push
fsubrl
mov
or
xor
push
adc
mov
inc
call
cmpsl
dec
sarl
add
jg
fildl
dec
dec
xor
stos
out
adc
jge
in
pop
lods
xor
inc
sub
adc
mov
push
sbb
rolb
out
push
mov
outsl
jo
frstor
dec
cmp
mov
push
mov
xor
cmp
dec
leave
adc
mov
push
fmulp
shrb
add
fnsave
hlt
adc
xor
add
pusha
or
inc
outsb
mov
mov
jno
lods
lahf
aad
mov
cmp
cltd
pop
push
iret
sbb
inc
roll
mov
pop
jge
rol
and
insl
insl
cmc
adc
or
rcr
rol
cmc
add
adc
xchg
mov
push
sub
cmp
stc
in
mov
cli
add
lds
inc
mov
call
test
sub
and
das
jmp
mov
sbb
ret
ds
hlt
mov
xchg
fxch
out
inc
jo
xorl
test
mov
sub
or
xor
push
pop
rorl
or
inc
and
mov
fisttpl
je
shl
mov
xor
push
movsl
dec
leave
popa
fists
lret
das
jo
xchg
aaa
enter
lods
dec
ss
dec
sub
push
dec
jns
jecxz
dec
push
clc
dec
mov
inc
mov
clc
or
sub
cld
adc
add
cmp
dec
daa
sub
pop
js
sub
jp
xchg
sub
out
pop
mov
or
or
loop
inc
and
aaa
xor
repnz
push
cld
aad
mov
popf
xor
mov
addb
sbb
shll
pop
xchg
fldenv
xlat
mov
and
lcall
fucomi
inc
test
pop
jl
insl
xchg
mov
sub
shlb
int3
mov
sahf
mov
es
sbb
out
imul
jo
in
cmp
sbb
jmp
les
stos
dec
cmp
cli
jo
loope
push
aad
xor
pusha
adc
push
or
xchg
push
decb
mov
jge
ret
dec
sub
add
repnz
mov
pop
pop
jo,pn
mov
push
fstps
movsl
mov
push
loop
clc
adc
nop
xchg
sti
mov
cmp
add
mov
mov
mov
sbb
mov
pop
xchg
jbe
imul
jg
adc
xor
mov
cltd
xlat
adc
add
and
or
or
push
mov
shlb
pop
inc
mov
adc
or
xor
jns
pop
push
shl
or
arpl
cmp
in
call
adc
ljmp
cmp
nop
jge
or
xor
insl
inc
push
pop
dec
jecxz
push
xor
mov
inc
or
bound
xchg
xchg
sbbl
test
lds
xor
jle
inc
mov
call
jno
mov
andb
inc
pusha
mov
pop
dec
dec
jno
in
imul
jbe
and
adc
adc
jmp
fstpt
mov
into
sbb
cmpsl
pop
ljmp
and
sbb
mov
add
jg
hlt
push
inc
sbb
inc
mov
xor
or
jmp
mov
loope
mov
into
jb
shl
sbb
leave
push
xchg
in
or
enter
mov
in
xor
sbb
inc
and
and
sub
dec
pop
clc
negb
and
jge
add
adc
popa
cmp
aad
pop
mov
pop
jecxz
inc
ret
repnz
ret
roll
or
scas
fwait
mov
dec
cld
mov
iret
cmp
rorl
mov
cltd
dec
cmpsb
inc
ss
hlt
push
filds
pushf
lcall
repz
cmc
ret
and
xchg
jb
lcall
cmp
adc
inc
pop
mov
push
pop
and
hlt
enter
lods
xchg
jne
add
jbe
add
into
fmull
sub
nop
cmpsb
xor
jge
jl
adc
cmpl
jecxz
cmp
js
xchg
out
xchg
sbb
int3
popf
test
mov
sub
fldcw
jnp
mov
push
mov
pop
add
hlt
out
imul
movsb
dec
daa
test
hlt
mov
push
enter
mov
and
inc
push
mov
or
pop
dec
mov
mov
xor
inc
mov
cli
faddl
sahf
pushf
imul
or
sahf
xlat
loopne
in
adc
rol
imul
xchg
adc
fs
inc
in
cld
inc
sti
test
leave
mov
dec
popf
cld
dec
insb
insl
jecxz
popa
jnp
sub
out
fbstp
fisttpl
push
je
sbb
jle
aaa
xlat
jae
sahf
mov
adc
frstpm(287
movsl
shll
and
push
mov
roll
outsb
or
notl
ss
mov
lret
js
in
xchg
cmp
xchg
nop
sti
adc
mov
pop
pop
in
mov
popa
lret
icebp
xchg
ror
and
pop
cs
pop
cli
lea
fldenv
cltd
xchg
xchg
mov
sub
into
das
dec
pop
outsb
ret
les
nop
fcmovbe
and
addr16
jle
mov
jb
dec
fldt
or
daa
cltd
cmp
mov
aam
repz
repz
sbb
mov
xorb
sub
sbb
xor
add
cs
divb
mov
sub
lds
fsubl
or
test
std
in
sub
or
and
cmc
and
jg
sbb
sbb
adc
add
xor
sub
sbbl
jecxz
stos
cmp
mov
sbb
mov
jmp
ror
bound
fbstp
sbb
and
jne
imul
pop
mov
pop
sti
loopne
js
pop
xchg
les
or
pop
inc
cmpl
icebp
mov
adc
fbld
test
or
cmc
pop
sub
cmp
fcmovb
push
inc
clc
pop
sub
aas
std
jne
lods
aaa
aad
or
stos
out
fadd
fadds
js
dec
mov
xchg
adcb
xor
inc
sbb
mov
fcom
and
subl
adc
cs
loop
mov
dec
or
add
es
sti
repz
addl
leave
add
pop
push
and
xchg
pushf
and
sub
sbb
repnz
out
fnstsw
aad
add
aas
pop
lcall
adc
es
inc
dec
or
addr16
mov
mov
sbb
jecxz
jbe
add
enter
pop
sbb
arpl
jbe
or
mov
je
pop
xchg
ss
out
sbb
pop
or
adc
je
mov
inc
xlat
dec
fsubrl
mov
div
fcmove
fwait
subb
hlt
int
addr16
and
dec
push
orb
mov
sbbb
cmpl
fisubl
ret
pop
ret
jmp
pop
in
sti
das
xor
mov
jb
bound
jl
cltd
loopne
lahf
lea
es
insb
xchg
cs
clc
xchg
ret
adc
mov
push
or
add
inc
mov
ljmp
sbb
fldt
pusha
fsts
mov
mov
scas
in
add
rorb
pop
cmp
jl
in
inc
cmp
or
ljmp
inc
imul
adc
inc
arpl
dec
mov
mov
bound
or
scas
inc
jmp
fcompl
cmp
outsb
es
mov
ret
mov
les
push
and
inc
dec
cld
ds
hlt
push
jae
aam
or
pop
shrb
fimull
xchg
xorl
mov
ljmp
cmc
xchg
mov
xchg
cltd
outsb
popa
cld
jg
cmp
insb
sbb
icebp
sub
dec
xchg
pop
xchg
pop
pop
inc
int3
icebp
enter
ret
outsl
mov
pop
mov
rorl
xchg
int3
inc
je
mov
xchg
push
inc
shr
sub
fcomp
push
or
adc
and
xchg
je,pn
cmp
pop
sub
cs
repnz
adc
xchg
sub
push
jle
shll
sbb
mov
add
sahf
add
pop
std
inc
cvtps2pi
jo
subb
sub
jl
add
imul
ret
daa
inc
ficomps
popf
ss
loope
add
ja
mov
fldenv
enter
or
jbe
testb
je
ja
aad
sub
aaa
ficoml
sbb
in
inc
pusha
insb
dec
xlat
inc
pop
or
hlt
push
push
inc
and
sti
arpl
cli
push
sbb
out
xchg
lret
xchg
lock
inc
lods
out
mov
mov
mov
xchg
mov
or
jns
call
jmp
or
sbb
add
mov
icebp
pop
jle
ja
std
mov
jno
pop
in
mov
inc
loope
jb
in
repnz
xchg
xor
mov
mov
gs
imul
xor
cmc
inc
push
xor
inc
fmull
xchg
pop
sbbb
pushf
fistl
int3
mov
add
and
lods
sub
fldlg2
mov
pop
cmpsb
xor
mov
mov
mov
fidivs
icebp
dec
mov
inc
les
fcomi
cmp
cmc
andb
lret
sub
pop
adc
push
ret
dec
in
jae
mov
pop
mov
sbb
push
fiaddl
iret
push
sub
push
push
dec
test
xor
pop
in
imul
fcoms
mov
push
mov
outsl
aaa
jb,pn
mov
mov
sbb
cli
dec
sub
mov
push
push
or
pop
aaa
outsb
xor
rorb
pop
dec
jae
cli
adc
outsb
int
xor
dec
cmp
cs
fnstsw
and
sub
outsb
int3
or
js
xchg
divb
xchg
xchg
xchg
mov
jno
lahf
pusha
out
adc
out
enter
outsb
call
rcrb
cmp
cmp
mov
stos
add
mov
mov
aad
cs
or
add
pop
mov
xchg
push
stos
mov
loope
movsl
or
fcom
stos
sti
test
pop
les
std
fucomi
xchg
movsb
loop
rcrb
adc
out
jns
loopne
pop
outsl
pop
push
insl
mov
test
cli
sarl
and
mov
dec
pusha
ror
mov
push
addl
sub
ja
divb
xor
push
js
jb
out
push
mov
fimull
stc
cmp
pop
frstor
push
lahf
add
mov
scas
test
xchg
je
arpl
rol
pop
cli
mov
ficoms
mov
mov
jmp
inc
pcmpeqw
in
adc
nop
incl
or
jno
mov
sub
cmp
iret
jbe
daa
scas
dec
pop
lcall
inc
push
inc
icebp
pop
aas
push
mov
dec
arpl
mov
jno
stos
jg
dec
add
ds
xchg
dec
add
push
inc
pusha
das
das
adcb
adc
sub
and
add
es
xchg
xchg
shll
push
fsts
iret
xchg
stos
int3
ret
imul
ficomps
cwtl
imul
jl
clc
aas
mov
cmc
rcl
and
dec
xchg
mov
mov
inc
pop
in
xor
scas
or
imul
and
test
or
push
pop
xor
ret
jbe
mov
mov
es
loopne
outsb
insb
popf
movsl
fdivs
or
push
sub
dec
out
cmp
int3
push
int3
outsb
mov
push
mov
xor
ret
cld
mov
inc
loop
inc
xlat
pop
js
in
and
push
lods
jle
xchg
cli
cmp
xchg
mov
pop
subb
shll
cmp
fscale
mov
sub
push
xor
or
inc
in
fs
xchg
popf
jo
mov
or
sbb
fstpt
push
int3
mov
in
and
int3
outsl
sbb
test
enter
ficoms
nop
sbb
and
shll
xor
cmp
imulb
mov
xchg
lcall
adc
fildll
sti
std
out
mov
scas
mov
xchg
lods
std
bound
cld
and
test
jae
pop
sti
mov
adc
aad
pop
adc
gs
loopne
or
push
pop
aaa
mov
sbb
inc
scas
mov
cmp
xchg
adc
sub
insl
fxam
inc
lret
loop
in
aaa
jne
insb
je
and
loopew
push
inc
shlb
fiaddl
stos
lea
push
lock
pop
sub
jno
and
inc
das
mov
int3
pusha
movsl
mov
xchg
rcll
pusha
ja
dec
dec
enter
push
cmp
jmp
xchg
mov
mov
push
mov
sub
das
insl
pop
jmp
stos
adc
pusha
rolb
adc
stc
inc
mov
dec
sbb
arpl
std
insb
icebp
idivb
xchg
dec
sbb
pop
test
and
int
and
pop
js
lock
cs
xlat
test
and
ja
adc
mov
add
hlt
dec
shlb
js
sbb
add
push
xchg
lret
jmp
and
sub
sti
lcall
loopne
mov
outsb
xor
jae
nop
pusha
fdivp
bound
stos
in
fnsave
push
repz
push
stos
mov
mov
std
cmc
int
dec
test
push
insl
pop
mov
mov
add
cltd
sbb
pusha
pop
mov
mov
xchg
pop
rcl
fwait
stos
add
push
aaa
out
cli
xchg
mov
jle
dec
lods
mov
aam
imul
test
lcall
das
movsl
das
pop
lcall
mov
out
cmpsb
xor
cmp
test
sub
inc
sarl
cmpsb
and
cmp
inc
mov
cli
jne
jecxz
mov
dec
cmp
pop
rolb
mov
mov
stos
lods
sub
imul
or
ss
fdivr
cmp
push
ljmp
das
jo
xchg
pop
xchg
mov
dec
cmp
inc
mov
hlt
push
sub
mov
adc
sbb
xchg
mov
flds
pop
jge
xchg
cltd
cmc
or
mov
aas
xchg
shl
outsb
xchg
int
fcomps
xor
test
rep
fistpll
dec
jmp
ja
sbb
in
cmp
outsb
mov
pop
sub
sbb
push
idivl
aad
ret
sub
or
xchg
pop
adc
sbb
pop
jno
orl
fcompl
jp
jne
icebp
imul
inc
je
jecxz
movsl
out
jb
or
pop
das
fmull
andl
lea
fcompl
xor
add
loopne
pop
fdivrs
push
mov
adc
ljmp
push
push
inc
xchg
mov
cli
xor
jg
mov
mov
fwait
inc
mov
shlb
push
roll
jo
mov
push
push
cmpsl
in
sub
in
sbb
pop
cs
testb
adc
adc
mov
lea
xor
push
addb
adc
mov
out
push
sbb
sub
mov
add
mov
fistpll
movsb
enter
pop
push
xchg
mov
aas
add
fnsave
rol
test
mull
int3
push
xor
or
mov
jb
sub
test
or
imul
shll
pop
ss
add
psrld
es
test
sbb
clc
repnz
shrb
jle
in
pusha
push
sub
mov
fidivrs
lods
decb
xor
rcl
mov
mov
jp
adc
pop
popf
sub
sub
addr16
sbb
jp
arpl
nop
je
pusha
imul
outsl
rcrl
or
in
or
andl
mov
leave
xor
cmp
outsb
xchg
push
jl
adc
pop
cld
pop
adc
cld
pop
rol
lods
into
shlb
jecxz
cmc
dec
sub
mov
lret
in
and
lock
sbb
imul
rcl
xor
cmp
shrl
lods
jo
xchg
xor
push
dec
lods
lods
stos
outsb
lret
les
pop
pop
cwtl
outsb
fidivs
test
mov
push
shll
div
cmp
outsb
gs
nop
cli
and
mov
into
insl
jnp
sub
in
pop
jb
adc
sub
cmc
push
pusha
push
mov
filds
push
jno
sub
sbb
push
mov
dec
pop
cmpsb
push
add
mov
ja
repz
lea
xor
jmp
cwtl
cli
mov
hlt
mov
cmp
pop
mov
les
xor
adc
push
and
cmp
pop
sub
stos
mov
inc
xchg
in
mov
addl
adc
lods
push
xchg
or
mov
movsl
mov
stos
bound
cltd
or
es
cmp
lea
sbb
test
mov
subl
push
int3
mov
xor
lret
cld
push
xor
movsb
xchg
lret
lods
or
cwtl
or
xchg
lods
loope
jnp
pop
pop
lea
enter
mov
loope
cmp
jne
outsl
out
dec
int
mov
outsl
sbb
movsl
daa
rorb
test
add
sbb
fwait
aam
sbb
add
rcll
inc
or
or
mov
jmp
orl
test
jnp
inc
mov
xchg
mov
test
sti
sbb
fwait
inc
loopne
ret
fsubrl
jmp
in
pop
outsl
add
xor
out
xchg
out
pop
js
repnz
popf
dec
and
xor
fistps
xor
push
xchg
cmc
xor
mov
inc
fisubrs
sub
das
jl
pop
and
js
imul
ss
stc
pop
mov
sbb
dec
in
or
hlt
aaa
ret
or
mov
cmp
idiv
vmptrst
xchg
dec
movsl
or
sbb
lods
lret
test
cmpsb
push
inc
pushf
add
popf
push
shll
outsl
pop
push
add
add
jg
jge
clc
add
repnz
inc
and
push
sub
mov
repnz
popa
test
jecxz
cwtl
sarb
adc
leave
mov
repnz
xchg
add
or
lret
fstps
pop
pop
mov
addl
mov
scas
sbb
sub
sbb
std
das
std
ss
fsubrs
ss
sahf
and
pop
jno
or
jae
jecxz
lea
cmp
ja
lret
add
das
jne
leave
xor
movsb
inc
pop
or
mov
and
cmpsl
cli
aad
pop
daa
and
xchg
cmp
cmpb
mov
loopne
outsb
je
add
mov
jbe
sub
in
inc
cmp
jo
inc
add
icebp
sbb
pop
pop
inc
nop
mov
xchg
js
dec
popa
pop
test
repnz
pusha
arpl
clc
cmp
mov
scas
mov
ret
or
mov
jl
test
es
add
data16
jno
idivb
out
repz
shlb
mov
rcll
sbb
loop
loopne
and
jbe
xchg
cs
xorb
orb
loop
ja
adcl
hlt
mov
mov
sbb
outsb
repnz
pop
cwtl
jl
xor
pop
lret
out
inc
insb
mov
or
popa
mov
repz
xor
and
add
aad
mov
ljmp
adc
ds
ljmp
sbb
addr16
add
outsl
push
mov
pop
das
mov
mov
in
dec
xchg
dec
cs
inc
insb
sti
aad
adc
cs
movsl
gs
insb
int3
adcl
fstpt
mov
inc
push
loop
push
cmpsb
fimuls
add
call
cmp
test
adc
fucomp
mov
mov
adc
fldt
mov
insb
lock
aam
stos
cltd
bound
mov
adc
imul
inc
bound
mov
push
addr16
lods
adc
fldenv
imul
cwtl
pusha
or
add
cltd
test
lahf
enter
movb
xor
daa
jno
sbb
adc
and
inc
sub
fists
mov
inc
loopne
xchg
push
clc
push
or
mov
into
mov
pop
xchg
mov
jle
inc
cwtl
push
xor
test
pop
idivl
mov
movsb
add
les
testl
push
jge
popf
aam
mov
mov
popa
mov
imul
aaa
push
inc
loop
sar
cmp
arpl
xchg
adc
inc
mov
pop
addb
inc
pusha
and
aas
dec
ds
cmp
rclb
fdivs
imul
xor
xor
jmp
icebp
add
add
cld
dec
xorb
out
add
cwtl
push
dec
fstpt
loop
jmp
push
xchg
repnz
sub
rclb
push
aam
add
bound
or
mov
pop
outsl
dec
xor
jmp
popf
insl
adc
and
xchg
fistl
sbb
push
cmpsl
and
and
mov
fidivrs
test
cmp
lods
outsb
pop
push
test
popa
clc
in
les
add
inc
inc
rorb
xor
ja
push
sbb
mov
imul
dec
inc
std
ljmp
cmpsb
repnz
imul
jg
stc
lret
stc
pop
cmp
pop
call
outsb
jg
fsubl
inc
pop
sub
or
mov
test
cmp
outsb
neg
popf
jmp
and
push
push
outsb
dec
pushl
lret
xchg
dec
inc
dec
adc
xchg
mov
push
ror
fisttpll
outsb
pop
dec
loopne
cmp
push
cmpsb
test
adc
sub
pop
sbb
ljmp
pop
and
pop
testl
mov
or
mov
iret
pop
and
pusha
loope
in
xor
and
cmp
stos
js
and
fiaddl
das
fnstsw
jbe
cmp
sbb
jecxz
mov
mov
mov
sub
add
lods
loop
or
adc
inc
loopne
cmp
xchg
popf
call
pop
inc
and
jnp
shrb
and
dec
and
push
push
cmpsl
mov
add
ss
sbb
jmp
out
pop
inc
shl
bound
sub
rcr
mov
pop
insl
repnz
stos
xchg
sbb
lock
insb
pusha
sbbl
fisttpl
sti
mov
stos
sub
or
mov
leave
test
or
xchg
mov
adc
movsb
insb
insl
in
jmp
jo
hlt
cmp
or
push
inc
adc
subb
pop
ljmp
jle
stc
push
mov
jg
jp
lret
inc
xchg
xor
push
arpl
and
xchg
loope
std
sbb
push
call
jne
fldt
lds
xchg
sbb
in
jne
roll
dec
fnstenv
imul
and
adc
mov
mov
in
adc
rcrl
cli
or
out
push
sub
popa
mov
mulb
push
xor
dec
shrl
adc
outsl
lds
mov
arpl
std
fstl
jne
jne
aaa
inc
pop
mov
lcall
inc
push
mov
mov
push
add
jecxz
push
mov
jns
push
inc
insl
xorl
fwait
cmp
ret
hlt
les
mov
lcall
aas
and
leave
loopne
dec
lock
push
jge,pn
cmp
loopne
inc
arpl
das
faddl
sub
dec
pop
push
dec
sub
ret
out
or
lds
in
loop
test
in
jb
pop
repnz
or
ja
repz
dec
je
cmp
scas
lock
and
xchg
sbb
movsb
mov
dec
mov
rorb
insl
xlat
cs
add
enter
fiadds
je
aam
fisttpl
cmp
fucomp
sbb
outsl
push
fcom
dec
and
lea
decb
std
insl
jbe
add
test
fwait
dec
pop
push
inc
clc
cmp
sub
cmp
mov
fimull
cltd
xchg
idivb
mov
aas
mov
cmp
inc
push
and
mov
and
lea
dec
pop
jp,pt
jb
push
xor
push
mov
ja
ss
push
or
ja
repnz
loop
andb
or
gs
test
cmp
movsl
dec
jbe
shrb
cmc
pop
cld
in
adc
cltd
xor
jno
mov
and
jmp
cmp
inc
sub
sub
stc
sbb
cmp
jno
popa
inc
mov
push
pop
dec
jecxz
dec
inc
ja
mov
cs
dec
cmpsl
fists
js
out
dec
push
cmp
not
xchg
xchg
repz
xchg
mov
push
jmp
cli
push
mov
jp
mov
sub
mov
out
scas
ljmp
push
rcll
add
cmp
jmp
imul
lods
mov
push
mov
in
loopne
cld
icebp
add
aas
cmc
sti
xchg
aam
fcoml
adc
or
icebp
jg
ret
data16
dec
repz
and
leavew
sbb
or
mov
push
inc
fs
movsb
adc
shrb
sbb
lcall
pop
xor
xchg
inc
dec
pop
sub
test
nop
inc
pusha
mov
xchg
and
or
loopne
sub
fcoms
push
jne
mov
sbb
sub
xor
cmp
sub
add
cs
pop
xchg
xlat
sub
pop
xchg
xchg
xchg
xchg
jle
and
test
cmp
shlb
fwait
ljmp
mov
popa
push
and
sub
adc
sbbb
sbb
adc
nop
adc
subl
dec
fs
dec
or
cltd
xor
test
mov
add
cli
rcl
mov
xchg
jne
pusha
jmp
repz
pusha
lea
and
xor
fstpt
inc
mov
inc
xlat
aaa
out
xor
loopne
bnd
dec
mov
loop
inc
fildl
pop
pushf
cli
inc
repz
lret
push
insl
fnstsw
mov
fildll
xchg
jl
stos
add
outsb
fwait
pop
rcr
adc
inc
mov
xor
popf
and
cmp
and
pop
scas
pop
imul
mov
sbb
aam
push
mov
jg
mov
mov
lock
cmpsb
popa
add
mov
mov
jle
in
xchg
push
insl
clc
repnz
cwtl
mov
int
mov
in
and
and
fcmove
adc
xchg
mov
sbb
mulb
out
or
testb
sub
js
bndldx
rcr
pop
cli
pop
imul
test
jne
jmp
out
mov
fidivs
notl
out
mov
pop
inc
nop
push
cmp
push
das
test
decb
lea
sbb
mov
ret
cmp
or
aad
pop
movsl
sbb
jg
repnz
iret
fdivl
push
push
into
xchg
mov
xor
inc
mov
sub
cmpsl
jno
jbe
or
xchg
dec
inc
cmc
mov
mov
adc
andb
cmp
scas
pop
jno
lret
xchg
xchg
push
sbb
sub
loop
fwait
xchg
outsb
pusha
imul
test
divb
pop
sti
add
inc
or
cmpl
ss
ss
push
aad
adc
frstor
rorb
jbe
test
ljmp
jp
pop
push
mov
push
cmp
pop
sbb
push
fwait
das
data16
mov
mov
dec
mov
in
pop
sub
pop
pusha
pop
jecxz
mov
inc
or
jmp
aaa
mov
mov
mov
lcall
pop
jl
rol
fldcw
outsl
push
outsb
clc
inc
inc
pop
xor
xchg
mov
mov
es
mov
push
sbb
fcomip
xchg
inc
loope
das
fisttpll
mov
sub
jnp
push
inc
icebp
push
and
mov
xor
mov
xchg
and
iret
add
icebp
mov
insl
std
lret
lods
nop
clc
test
and
or
fstpl
jge
sub
xor
push
mov
or
mov
xor
stc
cmpsb
xchg
jae
push
mov
sarl
mov
ljmp
ret
pop
call
push
popf
cmpsb
mov
dec
sbb
pop
je
int
xchg
cmp
adc
fsubs
cld
cmp
addr16
shl
push
cwtl
outsb
aam
cltd
adc
adc
sbb
sbb
test
sub
jmp
orb
adc
mov
cltd
pop
pop
lahf
cwtl
cmpl
outsb
icebp
call
ret
mov
jae
decb
pop
cmc
fnstcw
xor
push
xor
out
lock
dec
mov
or
xchg
jns
pop
loope
sahf
mov
lret
lea
xchg
sub
xor
movsl
cmp
test
xchg
dec
push
mov
insb
cmp
pop
or
in
adc
fbld
mov
enter
xor
xchg
pop
outsl
imul
dec
mov
sub
out
addl
outsl
jg
std
jle
sub
ror
in
pop
cmpsl
cmp
push
xlat
adc
jne
cmp
mov
fcmovne
jbe
lret
mov
sub
mov
xor
jbe
mov
mov
jp
imul
mov
jge
dec
sahf
mov
mov
fisttpl
dec
sbb
in
test
adc
cld
nop
sub
xor
cmp
mov
mov
jmp
fldcw
daa
pop
adc
xchg
imul
test
outsb
dec
je
xchg
in
enter
roll
not
arpl
mov
sbb
sbb
es
insl
arpl
inc
push
pushf
pop
jl
insl
pusha
or
mov
mov
pop
rorl
call
xor
mov
and
inc
fidivrs
bound
aas
sbb
xchg
jbe
negb
mov
mov
je
or
rclb
ljmp
jnp
aaa
mov
pop
test
lods
es
lret
lods
sti
jg
call
adc
clc
in
sub
insb
jne
mov
push
and
push
adc
ss
cltd
and
bound
jecxz
inc
fs
mov
inc
insb
sti
and
push
aad
pop
mov
cmp
xor
mov
out
xchg
mov
cs
inc
pop
sbb
pop
insl
jnp
jmp
shrb
cmpsl
push
clc
push
mov
adc
dec
jb
movsl
lods
mov
xchg
jo
cli
pop
jl
or
fwait
stc
mov
sbb
pop
cs
pop
mov
and
dec
cld
inc
adc
xchg
bound
xor
ret
mov
inc
jo
cwtl
daa
mov
sub
push
mov
or
mov
pusha
lock
cmp
sbb
clc
xchg
and
jecxz
add
inc
clc
shlb
mov
jbe
leave
mov
jbe
add
inc
mov
pushf
mov
cld
test
pop
test
jle
ja
push
push
gs
sub
pop
mov
ss
insb
out
movsb
daa
shll
mov
pusha
test
cs
popa
sbb
and
cld
pop
repnz
xor
jo
jg
aaa
sarl
out
cmpb
mov
adc
sub
adc
cmpsb
and
push
mov
test
sub
push
cwtl
mov
insb
insb
shr
pop
lret
and
int3
cmp
pop
clc
enter
xchg
jne
sub
outsb
lret
int
leave
or
cmp
in
dec
stos
scas
push
xchg
dec
js
add
pop
fistpl
vminps
sub
or
pushf
sbb
pop
or
mov
fdivrl
jge
sub
cmc
mov
sbb
subb
or
jg
insb
pusha
adc
rorl
pop
sbb
cmp
cmp
hlt
push
sbb
pusha
inc
enter
cmp
ret
sbb
add
std
mov
das
xchg
push
lock
rcr
inc
test
jnp
leave
xchg
loopne
testb
mov
cmp
xchg
or
sub
sbb
adc
call
push
rcrb
test
loop
scas
pop
je,pn
xchg
dec
fsubrp
arpl
cmc
adc
mov
cmp
or
ret
jnp
sbb
mov
mov
add
push
pop
or
mov
fildl
fcmove
add
lret
ja
decl
lcall
push
fmulp
sti
ds
mov
es
ret
int3
push
test
mov
or
inc
sbb
mov
aad
mov
mov
jmp
ss
sub
loop
mov
mul
ljmp
and
fstl
mov
add
test
or
cmp
movsl
rolb
pop
pop
in
lock
aam
mov
testb
dec
sahf
xorb
outsb
test
ljmp
dec
dec
add
aaa
xchg
leave
aas
iret
icebp
in
pusha
inc
xchg
mov
outsb
pop
mov
divb
and
in
idivl
mov
pop
rol
addb
ss
dec
loope
and
lods
sbb
mov
lahf
xor
add
xor
lods
lret
jnp
mov
jg
aad
bound
clc
sub
xchg
scas
and
or
arpl
andl
arpl
rcr
sub
std
mov
lret
je
decl
adc
das
dec
pop
movsl
or
ret
popf
dec
sub
lods
xchg
outsl
sub
ljmp
mov
into
rcrl
sbb
sbb
fistpll
mov
add
mov
mov
mov
jle
ret
popa
mov
push
repz
adc
test
cltd
stos
dec
dec
xor
lock
decb
pop
mov
cmp
mov
mov
popf
cmp
shll
xchg
call
adc
psubsb
fsubr
test
xor
into
mov
sub
pop
data16
ljmp
fucomip
ds
ret
bound
cmp
add
out
dec
mov
add
mov
xchg
xchg
push
ss
sbb
imul
jns
dec
sub
sarl
add
sbb
pop
or
call
add
lods
xor
sbb
in
lcall
xchg
and
push
aaa
cmp
or
lods
in
je
xor
mov
or
push
mov
xchg
imul
imul
xor
add
dec
outsl
daa
jnp
push
insb
aam
aam
push
sbb
or
xchg
mov
sti
xor
ja
cwtl
push
adc
xor
xchg
lcall
xlat
push
ja
ss
inc
jae
sbb
mov
jbe
repz
sbb
sub
lods
nop
cmp
scas
mov
int3
insl
scas
xor
sub
les
aam
sbb
iret
push
ja
mov
vxorps
inc
mov
and
icebp
pusha
movsl
aam
sub
mov
mov
mov
or
dec
or
cmp
push
dec
push
xor
and
jecxz
mov
mov
pop
push
lock
sbb
add
adcl
lds
and
mov
dec
cli
ret
mov
das
aaa
push
mov
and
sub
xchg
mov
push
cmp
mov
add
adc
fwait
stos
mov
loopne
mov
mov
mov
insl
pop
xchg
sub
cmc
icebp
inc
fcomps
aaa
outsb
xchg
xchg
xorl
xchg
sub
mov
ja
cmp
daa
stos
ljmp
inc
push
cmp
and
jno
loope
data16
mov
cmp
icebp
pop
pop
mov
aaa
popa
sbb
mov
roll
cmp
lds
cmp
stc
mov
movb
pop
in
loopne
mov
test
xchg
nop
icebp
outsb
inc
nop
test
movsl
lret
mov
jno
notb
cld
xor
insl
das
insb
ficoml
mov
out
stos
xchg
sbb
sahf
xchg
cmp
mov
sbb
inc
ja
popa
call
es
jae
decl
mov
adc
dec
and
test
lea
in
ljmp
and
add
xchg
jmp
jmp
or
int3
icebp
mov
mov
pop
shlb
inc
lahf
pop
cli
add
push
cmp
cmc
inc
and
fwait
add
das
and
enter
sub
outsb
add
fstpl
xchg
add
xchg
and
ja
and
mov
sbb
icebp
insb
aas
stos
test
inc
bound
imul
jae
add
add
insl
xchg
and
roll
mov
cmp
fucomi
ljmp
pop
xchg
vmovaps
test
jbe
mov
daa
xchg
inc
adc
mov
nop
push
in
das
cld
and
dec
in
sub
shlb
cltd
pop
clc
ret
mov
mov
add
jmp
js
inc
lock
lcall
sbb
cmp
mov
aas
push
inc
push
out
in
xlat
in
fisttps
je
shlb
call
in
loop
idivb
inc
rclb
arpl
cmp
lcall
into
ja
sub
inc
lea
adcb
push
xor
add
pop
adc
test
add
movsl
jo
ds
add
jp
pop
pop
xchg
push
subl
cmp
imul
dec
cld
call
or
mov
jbe
das
and
fistpl
xor
sub
mov
aaa
outsb
in
xor
dec
test
push
dec
push
sbb
lods
into
movsl
ss
pushf
cli
mov
mov
add
lea
mull
jbe
cmp
add
add
xor
pop
out
js
sar
inc
mov
push
push
add
xchg
fcmovu
cmpsb
or
or
clc
aad
xor
xor
ret
imul
cld
inc
add
jo
addr16
movl
push
lahf
mov
test
or
xchg
mov
ja
scas
lret
push
imul
lods
push
lods
mov
mov
mov
sbb
fnsave
sub
xchg
rcrb
jp
sbb
mov
adc
sbb
and
aam
loope
xor
out
push
cli
bound
cs
adc
test
xchg
fcmovb
int
cmp
sbb
jbe
aaa
or
fcoms
shlb
mov
push
cs
inc
popa
xor
call
xchg
ret
outsl
pop
imul
shlb
pop
xchg
lahf
lock
les
mov
mov
pop
je
ljmp
jmp
data16
mov
cwtl
pop
pop
les
je
dec
add
mov
rcll
lock
das
sub
add
andb
push
pusha
ja
jg
adc
push
into
xchg
std
sbb
add
shrl
sub
push
xor
mov
lcall
fbstp
fldl
push
mov
adc
add
push
mov
sub
ror
mov
arpl
push
and
icebp
cmp
sbb
fwait
clc
cmpsb
pop
pop
cmp
enter
sbb
loopne
fdiv
dec
xor
fildl
ret
lret
or
xchg
test
dec
lods
sbb
test
sub
pop
scas
int
sti
mov
fucomi
push
aas
cmpsb
pop
sub
dec
xchg
lcall
cltd
push
fcoms
adc
ficoml
jle
or
jnp
dec
loope
mov
movsb
lcall
or
cmpsb
mov
cmpl
lret
adc
js
inc
out
mov
ficompl
rcll
mov
lahf
imulb
jge
jne
push
mov
shr
or
and
add
push
and
dec
jo
nop
sbb
js
clc
rcr
push
add
push
sub
nop
insl
pusha
sti
lods
pusha
in
sti
or
mov
cmp
inc
outsl
jns
hlt
orl
int3
test
stc
scas
jo
es
pushl
dec
jg
mov
out
aad
cmp
shlb
lcall
ds
xor
clc
push
mov
mov
adc
sti
pop
test
insl
jmp
outsb
imul
imul
dec
push
mov
mov
outsb
pop
popa
mov
cmpsl
out
jo
scas
js
mov
mov
pop
loop
sub
add
imul
insb
lret
dec
scas
xor
test
imul
fisubl
sub
loop
out
jecxz
insb
mov
in
or
shrl
mov
push
or
roll
jl
and
fcompp
dec
icebp
aam
mov
add
leave
shll
and
and
ror
mov
les
sbb
or
out
jo
sbb
es
lret
lods
or
mov
cmp
push
ljmp
orb
test
push
subb
in
outsl
rol
arpl
and
jmp
getsec
cmp
ljmp
mov
cmp
cmp
or
add
outsb
outsl
call
inc
add
xchg
jne
clc
mov
mov
mov
push
lahf
or
pop
pop
sub
daa
sbb
push
rol
xchg
outsl
or
cmpl
cld
in
movsl
decl
lods
inc
data16
pop
daa
adc
mov
xchg
jmp
jnp
push
or
inc
pop
inc
aam
bound
das
add
ret
inc
pop
stos
mov
or
fcmovnb
jbe
fwait
aad
mov
ret
jge
test
add
push
jg
cmc
sarb
mov
outsb
jmp
cltd
dec
movb
call
bnd
and
sarl
rclb
mov
mov
ficompl
pop
mov
orb
fwait
xchg
jbe
jbe
adc
cli
pop
aam
sbb
dec
and
add
test
shlb
xchg
cwtl
fdivl
leave
jnp
dec
push
inc
mov
ss
outsb
fwait
push
call
out
lret
rcrb
push
rorb
outsl
push
call
movsb
das
sub
sbb
adc
fwait
stos
sub
adc
fcmovnb
das
fadd
cmp
sub
mov
fdivrs
bound
sbb
cmc
adc
ljmp
sbb
pop
call
xor
das
and
dec
insl
lods
outsb
or
cmpsl
xchg
pop
insb
sbb
arpl
sbb
sbbb
xchg
jno
xchg
out
dec
scas
int
push
mov
add
xchg
pop
fdivrs
push
inc
cmp
test
es
jg
scas
out
imul
je
ljmp
adc
shl
or
je
daa
ss
mov
in
fidivrl
divb
ret
js
sbb
fcoms
stc
mov
fldt
rcrb
lahf
sbb
bound
pop
adc
adcl
test
jl
xchg
or
inc
ss
or
aad
or
mov
stc
mov
xlat
push
scas
cld
or
or
imul
test
adc
out
xchg
mov
pop
jmp
cmp
mov
in
pop
mov
out
and
mov
test
out
out
sti
inc
lahf
inc
rcr
pop
je
ds
sub
popa
adc
fwait
add
fldl
inc
ljmp
movsl
decl
dec
adc
and
add
icebp
lock
fidivl
sub
out
scas
fnsave
sbb
pop
sbb
pop
cmc
xchg
xor
cmp
lahf
movsl
inc
push
rorl
push
loopne
adc
xor
dec
mov
popf
rcrb
jmp
in
mov
sarb
pop
mov
pop
or
testl
fs
xor
cmp
pop
rol
add
fnstsw
das
js
shll
cltd
cmc
inc
or
es
dec
bound
cmp
push
iret
push
rorb
fadds
test
mov
out
shl
add
out
jbe
fdivrp
orb
inc
or
and
loop
ss
xorl
cmp
arpl
test
push
or
imul
mov
add
cmp
xor
ja
mov
inc
sub
or
jle
ret
dec
fstpl
inc
das
mov
push
movb
fdivs
push
or
xlat
cmpsb
mov
ss
popf
imul
jmp
pop
test
mov
mov
push
sbb
loope
cmp
cli
and
jno
inc
movsl
xchg
sbb
or
inc
test
das
je
push
jno
jne
push
xor
hlt
inc
sbb
jnp
mov
shr
mov
xchg
out
jno
mov
stos
and
mov
cs
sbb
pop
pop
push
jg
pop
pop
pop
icebp
add
cld
shlb
rolb
fists
ret
pop
popf
jecxz
cmp
sbb
xchg
aas
cmc
and
pop
popa
or
cltd
adc
cmc
jae
cmp
pop
mov
push
cwtl
ret
outsl
loop
xor
jae
xor
push
cwtl
sub
pop
fmuls
es
mov
pop
mov
cmp
xor
jns
test
cmp
je
mov
ss
fsubl
mov
jecxz
mov
lds
jge
jb
jb
sub
bound
pop
cld
pop
mov
loopne
scas
pop
xor
xchg
pop
fdivrs
mov
push
les
scas
fbld
push
or
scas
sahf
inc
fnstenv
roll
pop
push
sub
pop
xchg
xchg
cmp
adc
jg
sbb
inc
int3
push
les
sbb
inc
cmc
addb
push
mov
xor
adc
bound
ret
sbb
test
xchg
lret
push
jnp
mov
push
outsb
aam
add
pop
outsb
ljmp
movsb
out
jmp
fidivl
inc
fcmovnb
fstps
xchg
lret
and
dec
dec
aam
dec
rorb
mov
pop
jns
mov
daa
subb
es
daa
fmull
sbb
outsl
xchg
and
loopne
xor
repz
insl
rcll
xor
sbb
ja
jp
jno
inc
or
push
rorl
push
stos
inc
bound
jnp
cwtd
inc
sub
test
and
sub
sub
dec
or
mov
ljmp
std
inc
nop
and
jbe
mov
lods
xor
sub
adc
loopne
mov
std
sbb
in
sarb
shll
scas
mov
push
dec
ds
out
dec
and
roll
in
or
inc
mov
jge
jne
sti
mov
dec
repnz
mov
stc
and
xchg
mov
lret
xchg
pop
and
mov
push
aad
push
xor
lods
sub
push
pop
aas
push
and
and
imul
xor
xor
mov
or
das
mov
movsl
adc
loope
outsl
mov
inc
pop
push
or
movsb
cmp
mov
arpl
jno
push
nop
add
mov
inc
sub
xchg
dec
ds
and
pop
je
loop
cmp
jg
pushf
or
xor
mov
mov
ds
push
aas
dec
sub
jae
std
adc
pop
aad
inc
add
das
inc
mov
test
ds
add
mov
fnstsw
jne
movsl
xchg
outsl
icebp
ljmp
fildll
pop
inc
insl
and
sub
mov
adc
pop
fwait
in
pop
insb
clc
push
fdivrs
pushf
clc
inc
rcrl
sahf
ret
repz
inc
comiss
fdivs
shrl
fwait
cmp
icebp
dec
lods
popa
and
aam
mov
adc
sub
or
decb
adc
and
cs
rcr
add
sbb
or
jnp
dec
xlat
cmpsb
xchg
fisttpl
jl
loopne
lcall
rcll
icebp
or
adc
sub
fstl
arpl
inc
dec
mov
mov
jo
lea
aas
mov
std
divb
pop
push
imul
dec
dec
sahf
mov
dec
and
and
not
mov
movsl
and
sti
lds
pop
in
mov
mov
and
adc
jecxz
add
mov
bound
outsl
imul
daa
pop
inc
jmp
imul
jb
fs
jnp
push
setno
test
pop
insl
cli
or
lahf
jmp
sahf
jo
push
adc
add
jecxz
lcall
mov
sbb
loope
or
loop
rolb
icebp
enter
inc
pop
fisttpl
shl
cmp
inc
add
xor
push
les
sbb
popa
adc
jo
pop
xchg
test
pusha
or
xor
cmc
pop
mov
fsubr
in
inc
inc
xchg
push
mov
mov
or
jp
flds
cld
pop
mov
cli
sub
mov
sbb
adc
push
push
in
shll
out
mov
sbb
fisubrl
int
pop
push
dec
cmp
fnstsw
aaa
add
pop
stos
fldt
out
xchg
jge
aaa
jge,pt
adc
cmp
and
sbb
dec
sub
or
push
fidivrl
es
sbb
jo
les
das
mov
dec
xor
sub
lock
mov
jecxz
xchg
push
nop
ss
test
mov
dec
pop
dec
arpl
fxch
ss
inc
pop
cmpsl
cmp
pop
ret
pushf
adc
sbb
aad
adc
shlb
mov
loopne
fisubrl
add
and
cmp
jns
push
ja
dec
mov
in
mov
mov
dec
sti
aad
jmp
fcmovnbe
add
rcr
dec
jg
scas
in
fisubrl
jg
notl
sbb
movsb
inc
cmp
push
mov
ucomiss
fstps
jle
pusha
bound
xorb
cmp
cmp
repnz
clc
mov
cs
mov
pop
pop
in
mov
cmpsb
pop
push
mov
xchg
aaa
pop
aas
add
out
enter
mov
lcall
rolb
test
call
lods
dec
xor
pop
lds
stos
adc
push
and
out
push
subb
mov
loope
stos
sub
loope
cmp
aas
pushf
or
mov
pop
add
and
pushf
out
outsb
insl
shl
mov
cli
decl
sub
jb
sub
mov
insb
cmp
push
ret
adc
jle
xchg
pop
xor
mov
cmpsl
dec
cmpsb
cs
cmpsl
insb
popa
cltd
rcll
aad
lods
pop
xchg
je
mov
jbe
repz
stc
les
adc
jns
fucomip
scas
jne
mov
mov
xchg
in
sub
cmp
mov
mov
outsb
test
adcl
clc
jb
and
xchg
pop
adc
add
cmp
jns
scas
hlt
mov
lret
sti
or
inc
negb
pop
jmp
inc
lahf
jb
scas
rclb
insl
push
leave
pushw
or
imul
lock
pop
cld
in
imul
ficoms
addr16
mov
imul
push
arpl
sub
jl
and
out
jne
mov
test
push
sbb
test
dec
mov
sub
roll
adcl
and
mov
dec
xor
fmul
int3
cmp
cmp
or
testb
pushf
outsb
das
mov
test
pop
cmp
lods
imul
sub
fldenv
ret
adc
mov
sbb
test
mov
push
scas
lods
xlat
mov
jmp
push
jmp
push
add
or
xchg
sahf
push
pusha
mov
mov
repz
mov
test
adc
inc
loop
push
rorb
adc
les
adc
out
jmp
adc
pop
mov
scas
test
mov
in
mov
data16
dec
das
pop
js
mov
cmpsb
mov
mov
inc
dec
aaa
mov
lret
xchg
cs
pop
mov
jg
sub
jbe
adc
add
pop
or
or
push
into
mov
in
inc
test
add
test
out
inc
fstpt
ret
push
into
ret
test
and
movsl
dec
out
xchg
out
daa
repnz
pop
std
push
push
sahf
subb
mov
imul
add
push
sub
xor
xchg
add
cmpsl
testl
shl
andl
jmp
lods
adc
mov
pop
outsl
mov
pop
sub
pop
shrb
xor
mov
push
jo
mov
add
mov
icebp
xor
mov
or
std
std
dec
adc
jnp
out
fwait
or
mov
jmp
mov
fs
imul
mov
leave
cmp
test
lret
push
ror
cmc
ja
fnstsw
inc
das
stc
xor
sbb
clc
lea
jg
or
cld
dec
jo
aas
cmc
pop
xor
call
mov
sbb
push
xchg
jmp
mov
lcall
or
and
inc
shl
mov
loopne
and
std
test
jnp
fdivrl
ja
nop
addl
inc
pusha
pop
lret
sar
jb
or
dec
adc
and
test
in
hlt
mov
jbe
je
add
ret
and
loopne
mov
mov
addl
mov
rcll
cli
shrl
push
ret
lods
mov
sub
data16
addb
icebp
cmp
mov
sub
ss
sub
mov
cmpsl
pop
dec
mov
aaa
sbb
push
xchg
push
mov
adcb
idivl
or
lds
cmpsl
aas
loope
popa
icebp
jmp
pusha
arpl
ljmp
adcb
cwtl
sbb
push
iret
stc
push
cli
into
cmp
push
xor
mov
push
sti
inc
pop
mov
fcomps
dec
lcall
adc
clc
pop
clc
sub
xor
das
test
push
js
and
mov
xor
pop
mov
xchg
ret
pop
lcall
inc
or
push
out
pusha
push
or
add
loop
mov
push
cmp
in
in
mov
inc
xor
add
and
int
ret
call
cmp
dec
xor
sub
call
jmp
lea
movsb
in
sbb
pop
mov
mov
adc
jbe
stc
xor
adc
aaa
push
sub
inc
dec
add
aaa
xchg
addl
int3
popa
fldt
jns
jno
les
ret
cltd
insl
ret
arpl
repnz
out
test
jo
dec
outsb
mov
loopne
xor
push
loope
std
in
inc
inc
popa
test
xlat
or
or
jle
push
push
cli
and
test
movsl
out
jmp
push
popf
sub
mov
push
mov
fwait
cmp
sub
mov
outsb
xchg
out
sbb
or
cltd
cli
stos
dec
shl
cltd
dec
arpl
lcall
inc
movsl
and
push
pop
repnz
stos
js
or
push
or
jl
push
pop
ljmp
stos
jge
enter
mov
popa
pop
mov
js
mov
cmp
mov
ret
push
mov
pop
sub
inc
rclb
shll
movsb
sahf
repnz
int3
mulb
dec
mov
ljmp
gs
or
inc
cmp
mov
add
mov
xchg
mov
loop
mov
fisubs
push
mov
jl
test
or
sbb
and
dec
clc
push
inc
sub
loop
dec
push
pop
out
insl
jo
sbb
outsl
dec
ja
dec
int3
stos
jmp
call
fidivs
xorl
lods
ljmp
sti
inc
jge
adc
pop
inc
orl
xor
add
sbb
push
mov
shr
cmpl
test
pop
push
lods
insb
loop
mov
cmc
cmp
inc
orb
ss
dec
add
int3
push
cmp
mov
iret
jge
loopne
dec
mov
fidivrl
cltd
push
pop
jmp
repz
dec
xor
std
jae
test
jp
add
test
faddl
xor
and
cltd
mov
adcl
fimull
xor
shrb
das
or
jbe
and
hlt
sbb
inc
adc
fcomps
lock
mov
je
push
pop
rorb
inc
xor
rorl
sbb
icebp
mov
pop
stc
lds
or
loop
pop
mov
and
xchg
sub
add
ja
leave
movsl
int
out
ret
mov
pop
popf
mov
nop
and
jnp
test
push
clc
in
insl
mov
dec
movsl
mov
imul
dec
aad
ljmp
les
mov
rolb
pop
adc
fdivr
sub
xor
sub
add
inc
xor
push
ficomps
aam
sub
pusha
fists
sbb
data16
sbb
loopne
sbb
dec
jne
outsb
loope
dec
ret
jp
sti
and
push
out
cmc
nop
adc
and
imul
loope
in
mov
mov
loop
lea
data16
pop
shl
sub
jge
imul
in
fmul
fidivl
push
ja
clc
jmp
xor
pop
test
ret
sbb
fnsave
dec
mov
mov
lcall
hlt
fmulp
xor
or
mov
push
sbb
pop
loop
dec
scas
cmc
push
or
inc
ljmp
sbb
les
fmull
loop
fiadds
sub
stos
or
lret
and
int
loope
aas
pop
mov
xchg
add
push
sub
call
aam
pop
mov
pop
sub
push
cwtl
movsb
and
pop
or
pop
inc
lds
sbb
pop
cli
sbb
push
sbb
push
aaa
insl
cwtl
ret
subl
pop
loopne
int
lock
call
stc
cmp
dec
mov
movsb
mov
fucom
mov
xchg
pop
stos
mov
pop
inc
shrl
cmpsb
pop
sub
cmp
inc
mov
fcoms
fisubrs
pop
jnp
ror
push
out
rolb
mov
imul
out
decl
stos
mov
insl
inc
daa
or
xor
pop
stos
xor
cmc
or
push
stos
pop
mov
lea
mov
sub
lds
add
mov
mov
push
mov
sub
lods
fwait
jne
ljmp
jge
jp
mov
sahf
add
iret
inc
adc
xchg
or
orl
add
add
movsb
out
push
mov
inc
adc
lret
jb
insl
or
adc
mov
sub
cli
and
dec
sbb
movsl
outsl
xor
cmp
out
outsb
insl
rclb
inc
sbb
aam
push
cmc
mov
adc
lock
xchg
dec
inc
incb
pop
les
mov
dec
int
xchg
jmp
into
xor
les
jnp
fistl
ja
mov
adc
mov
movsl
push
dec
and
pop
sbb
sbb
call
das
jle
movntps
mov
jns
pop
int3
aas
adc
pop
pop
enter
sarl
jmp
pop
pushf
sahf
repnz
pop
xchg
stos
cmp
and
xchg
sti
popa
fcmovnb
add
sbb
or
sub
cmpsb
and
or
fcmovb
push
adc
aam
rorl
loop
outsl
xchg
dec
pop
cltd
sti
lret
hlt
loope
pushf
dec
sti
fisttpl
adc
pop
loop
xchg
test
mov
call
fildll
cmp
push
shlb
addl
cmp
mov
sub
inc
bound
inc
push
aam
push
stc
pop
fwait
mov
fcoms
int3
push
mov
add
inc
andb
rcr
add
fcomp
data16
cmpsb
adc
pushf
in
mov
push
add
cmp
push
cltd
push
lahf
push
shlb
xor
jp
mov
mov
and
and
adc
dec
pop
jne
ficomps
xor
cs
xor
nop
scas
insl
popf
add
xchg
ss
frstor
into
add
mov
lcall
repnz
and
jp
dec
js
adc
sub
ss
lret
push
and
je
loope
add
mov
loop
mov
or
popa
cmp
loope
adc
sbb
insl
mov
xor
mov
push
rcr
ret
or
cmp
push
adcb
mov
adc
sub
pop
addr16
jnp
xor
call
bound
sub
push
fcomp
fildll
mov
cli
xor
outsb
push
cmp
dec
and
mov
sbb
pop
pop
sbb
inc
or
mov
sub
imul
aaa
mov
mov
cltd
adc
jmp
mov
sbb
inc
mov
lret
aad
mov
and
jnp
jbe
xor
pop
adc
stos
and
data16
js
call
hlt
in
lcall
subl
aaa
pushf
fwait
and
icebp
pop
add
xorb
imul
lods
call
pop
insl
push
push
pop
outsb
int
push
sub
xor
mov
lods
jne
inc
mov
insb
je
mov
inc
addr16
aam
mov
sbb
inc
adc
jo
stc
in
cli
dec
hlt
outsl
inc
leave
adc
xchg
push
jbe
mov
movl
rolb
cmpl
cmp
lds
dec
inc
add
jge
les
push
inc
movsl
or
lds
rcr
adc
lea
dec
jae
jb
pusha
call
popf
out
std
lea
lock
bound
adcb
jge
stos
in
jne
jge
mov
dec
jg
mov
mov
es
sti
cmp
popl
sub
adc
in
sti
mov
fcompl
movl
xchg
jno
xchg
adc
inc
sub
les
pusha
and
std
xor
pop
sub
mov
mov
je
test
js
cmc
xchg
lods
mulb
jne
push
pop
add
mov
add
xchg
fs
clc
fbstp
jo
mov
call
lods
xlat
pop
dec
adc
push
fidivrs
jg
dec
lock
sub
dec
clc
addr16
jo
cmp
push
pop
mov
pushf
push
fs
jb
mov
aaa
or
call
and
aaa
testl
adc
or
inc
or
lret
leave
iret
insl
mov
xor
add
lret
xchg
inc
or
jl
inc
hlt
add
in
arpl
pop
insl
push
test
push
in
and
and
adc
inc
in
cmp
mov
movsl
dec
mov
cwtl
xchg
and
loopne
and
dec
pop
aam
testl
iret
pop
loop
lcall
stc
adc
xchg
mov
lock
jo
mov
add
in
pop
sbb
das
or
inc
js
jne
push
sbb
adc
aam
lods
cmc
call
or
xchg
in
ret
push
adc
mov
push
call
jge
rorl
mov
push
push
cmp
or
mov
mov
push
or
push
and
mov
sbb
xchg
push
push
pop
aad
jecxz
jno
inc
push
mov
scas
cmpsb
mov
loopne
jne
je
mov
sub
or
icebp
xchg
dec
mov
mov
and
enter
jae
pop
aas
and
lret
ljmp
icebp
sbb
jno
mov
add
hlt
repz
in
call
mov
iret
pop
mov
jl
jb
jne
das
ret
cmpl
fdiv
out
pop
fldt
jl
in
xchg
dec
lahf
push
inc
hlt
into
movsl
cmp
or
test
mov
insb
jmp
loopne
ret
jmp
dec
jle
fdivrl
imull
add
sti
xchg
xchg
addb
cwtl
cmp
xor
mov
or
inc
sub
inc
in
imul
mov
lock
jbe
jecxz
pop
or
dec
pop
hlt
mov
lcall
jo
mov
or
stos
cmc
dec
mov
test
movb
push
inc
xor
jle
push
cmp
mov
repnz
push
fdivl
in
dec
test
sub
pop
or
in
movsb
jp
adc
ja
lahf
mov
add
xor
mov
and
das
mov
pop
rorl
push
repnz
insb
sbb
std
aaa
repnz
xlat
jl
roll
push
ljmp
sub
lock
mov
and
mov
jb
sub
ret
sub
sub
out
pop
mov
mov
pop
sbb
xchg
or
xchg
push
fdiv
adc
sbb
jecxz
les
pop
jbe
push
push
into
in
mov
orb
jb
out
push
notl
fistl
xor
push
daa
add
insb
cmpsl
aaa
xlat
or
and
cmpl
sbb
sub
or
xor
in
push
aaa
mov
sub
bound
and
es
leave
lds
fwait
dec
adc
or
add
in
pushf
pop
mov
std
loopne
cli
jp
cld
push
std
ror
in
aaa
pop
lahf
clc
dec
adc
push
out
nop
dec
inc
jge
loope
xlat
sahf
aam
jecxz
ret
icebp
loope
jne
mov
das
or
sbb
and
adc
xchg
pop
fldl
fcmovu
es
add
call
push
decb
jmp
fisttpl
cmp
or
dec
mov
ret
mov
stos
sbb
cli
cmc
mulb
rcl
in
cli
std
add
jo
push
repnz
lock
pop
scas
jecxz
out
sub
movsb
shlb
push
bswap
fstps
test
sbb
mov
mov
jl
xor
push
mov
clc
mov
loop
push
fldl
loope
push
pop
insl
sbb
aad
incl
pop
push
out
outsl
sarl
js
outsb
daa
stc
repnz
inc
adc
scas
ss
or
sub
add
inc
shl
cltd
mov
inc
push
xor
sub
xlat
lret
add
shrb
call
xchg
cmp
inc
test
fildl
dec
mov
pop
xor
or
mov
xor
popa
rcrb
or
sbb
push
clc
lahf
mov
add
pushf
rorb
ret
popf
xor
lods
pop
insl
jo
xchg
mov
test
imul
jns
outsb
pop
adc
xchg
lret
push
call
aaa
sbb
xor
mov
enter
sbb
jge
cmp
mov
sbb
adc
fldt
sub
imul
popa
ljmp
inc
add
mov
ljmp
je
pop
addb
push
loope
cltd
out
mov
inc
fnsave
push
mov
outsl
mov
jb
mov
pop
fs
sub
nop
fs
cld
mov
push
inc
cs
fs
and
repnz
daa
mov
or
mov
insl
mov
push
pop
mov
push
insl
dec
jae
loopne
push
or
pusha
pop
movsb
mov
scas
xor
fisubrl
pop
mov
add
sub
mov
mov
dec
test
inc
jo
iret
in
mov
sbb
pop
sbb
in
fiaddl
scas
das
mov
lods
pop
fcomp
dec
cltd
pushf
das
ds
insb
inc
push
mov
stos
mov
cmpsl
rcrl
scas
xchg
pop
add
add
fdivrl
mov
mov
lcall
enter
hlt
ret
sub
int3
lea
sbb
push
pop
push
xor
mov
xor
lods
and
jle
js
outsb
call
or
outsb
insl
add
lcall
xchg
xchg
hlt
adc
stc
jne
pushf
jnp
mov
outsl
inc
hlt
mov
leave
pop
ficoms
fstpt
cli
adc
in
addr16
outsb
and
scas
outsl
fwait
mov
movsb
orb
lcall
pushf
nop
mov
rcrb
and
or
cmp
mov
mov
cmp
pop
jno
or
cmp
jns
and
xor
fcomps
dec
sub
lods
mov
shl
and
push
mov
mov
push
sub
sub
testl
cmp
and
andb
pop
mov
mov
or
rorl
lods
outsb
in
das
fisubrs
imul
or
xlat
das
les
in
mov
dec
les
mov
js
xchg
adc
pop
dec
push
push
pop
adc
dec
pop
mov
sbb
cmpsb
cs
adc
pop
scas
add
fildl
testb
sub
inc
outsb
sub
pop
test
out
sbb
sti
mov
cmp
xchg
or
loopne
sahf
lods
mov
push
ljmp
fisttpl
cmp
mov
cmp
sbb
inc
pop
adc
call
pop
sub
xchg
sub
loopne
scas
xchg
incb
imul
ret
inc
push
lds
mov
cmc
pusha
adc
cld
ret
ret
push
faddl
xchg
dec
insb
adcl
mov
pop
rcr
int3
cmpl
xchg
adc
cltd
push
pop
jo
cmpsl
xor
xchg
dec
dec
das
mov
mov
imul
pop
imul
xor
push
mov
repnz
mov
add
push
lret
push
cli
data16
pop
and
jle
out
mov
pushl
or
push
sbb
lcall
ss
fsubr
inc
dec
xchg
clc
stos
inc
pushf
std
add
nop
daa
ds
mov
sbb
fstpt
popa
test
mov
inc
shlb
enter
xor
stos
aaa
and
std
mov
jge
add
sub
and
pusha
data16
jb
sahf
mov
sbb
lods
sbb
aas
jb
loopne
sbb
mov
jae
dec
add
movsb
jbe
sar
lret
cs
test
add
inc
or
shl
rorl
lods
or
test
dec
mov
insl
out
inc
pop
test
je
ds
jne
movzbl
insb
hlt
iret
shll
ret
adc
cmp
movl
xchg
decb
in
jb
and
or
jge
inc
add
rorb
pop
and
push
gs
xchg
nop
std
add
pop
cmp
cs
lock
call
push
nop
cmp
jne
jns
lcall
enter
call
xor
add
iret
mov
pop
fwait
mov
bound
ljmp
gs
popa
imul
cmp
sbb
jnp
shlb
mov
cmp
je
aas
xchg
xor
jle
fcomps
pushl
mov
adc
je
scas
ljmp
loop
xor
inc
adc
adc
loop
daa
shrl
mov
mov
mov
rcr
mov
jmp
imul
cs
push
arpl
and
out
sbb
sarb
sub
jbe
test
mov
nop
je
mov
and
es
mov
ss
mov
mov
aaa
sub
in
ret
fs
sbb
into
rcll
aaa
add
clc
incl
add
mov
in
outsb
xor
jecxz
ds
inc
inc
mov
ljmp
test
xchg
add
xlat
push
add
inc
mov
int
movsb
bound
aas
dec
and
cmp
sti
pop
test
jecxz
jns
push
inc
mov
push
icebp
jno
mov
pop
dec
fisttpl
sub
stc
dec
or
jo
cmp
cmpsb
inc
lds
jge
mov
call
out
outsb
in
lea
push
dec
pop
push
sbbb
push
movsl
add
push
cs
popa
cmova
or
jecxz
in
lcall
cmp
pop
adc
inc
add
dec
add
outsb
cmp
fdivrs
or
lret
inc
aad
sbb
je,pt
adc
rcll
sbb
xchg
xor
xchg
push
add
clc
xchg
push
aam
mov
sbb
insl
jecxz
lea
hlt
push
imul
cwtl
fdivs
stc
rep
jno
xchg
lods
nop
mov
popf
stos
jl
incb
mov
pop
pop
in
lahf
mov
dec
xor
loopne
mov
push
in
aas
xchg
mov
mov
stos
lods
popa
jbe
push
mov
in
pop
add
bound
icebp
fucomp
insl
test
push
sub
in
push
sarb
mov
ja
xor
shrl
push
sub
cmp
mov
mov
mov
pop
jne
jg
inc
popa
adc
mov
mov
pop
jb
pushf
xchg
jae
outsl
arpl
clc
mov
mov
mov
jbe
pushf
mov
dec
shll
lds
inc
fwait
xchg
nop
adc
je
xchg
adc
std
outsl
inc
or
shlb
or
mov
and
jle
cmp
pop
dec
dec
pop
or
xchg
call
fnsave
scas
cmp
pop
mov
int3
mov
stc
bound
aaa
push
scas
lret
mov
ffree
push
xor
fnstsw
jle
repnz
sub
stc
sbb
popl
and
inc
push
jo
outsb
mov
push
and
inc
sbb
add
add
insl
sub
cmp
cmp
mov
loopne
les
jb
cli
rcll
idivl
adc
push
push
dec
pop
xor
je
in
inc
mov
fisttpll
ja
or
inc
cmpsb
cli
add
idivb
sahf
movsb
xor
fsubrs
xchg
fldt
popa
ret
sbb
sub
jmp
mov
dec
and
test
add
jb
aad
outsl
dec
jbe
dec
and
jge
cs
jp
lret
ret
les
cltd
subl
mov
mov
pusha
shlb
push
cli
jbe
adc
out
push
fiaddl
dec
inc
out
nop
pop
fldt
jmp
mov
and
rorb
mov
popa
test
cltd
mov
ret
and
or
pop
into
jno
push
rclb
xor
movsl
lea
sub
and
cld
jmp
jp
ds
xor
push
sub
push
adc
jge
adc
mov
packsswb
insl
dec
add
fidivrl
push
js
mov
insb
push
mov
out
and
insl
sbb
and
lock
jo
push
into
add
sub
mov
ret
inc
ljmp
arpl
loop
mov
dec
mov
bound
orl
inc
mov
aaa
fstpt
mov
xchg
mov
mov
push
out
iret
mov
pop
mov
xor
in
mov
movsl
xchg
jg
rorl
scas
into
xchg
test
inc
popf
xor
es
test
fdiv
out
add
add
add
or
shll
jo
negl
lods
pop
mov
mov
std
pusha
jmp
sub
cmp
out
sub
mov
popf
sub
in
lods
movb
out
and
mov
pop
cmpsb
cwtl
movsb
ljmp
push
push
inc
mov
pusha
mov
cmp
out
xor
fdivs
adc
pop
dec
int
sarl
dec
mov
pop
aad
and
push
add
push
negb
out
cmpsl
cmp
aaa
mov
adc
aaa
enter
push
ss
xor
outsl
shll
das
pop
cs
jb
aaa
jno
data16
lds
sub
and
call
shrb
xchg
mov
inc
inc
cmp
in
test
ret
adc
mov
popa
aas
mov
ja
in
sub
and
leave
test
xor
cwtl
lcall
out
or
push
push
das
fnsave
lret
push
push
inc
pushf
mov
insb
xchg
in
imul
dec
xlat
lret
vprotd
arpl
adc
inc
ds
fisttpl
adc
data16
sbbl
jno
xchg
or
jl
call
pushf
push
out
add
mov
test
dec
sub
inc
or
cmp
add
fs
mov
loopne
pop
push
fistps
jp
pop
adc
xchg
sub
lahf
pop
jp
cmp
xor
int
int3
andl
cmpsb
sbb
loopne
int
mov
sbb
call
mov
or
aad
fcmovnbe
add
xchg
cwtl
dec
mov
cmp
pushf
jecxz
add
sub
sbb
cmpsl
aam
arpl
pop
je
or
push
ja
jb
repz
xlat
xor
stos
push
inc
adc
mov
jge
or
in
and
lcall
push
lds
jb
sbb
and
test
pop
nop
sbbb
xchg
mov
cmp
inc
dec
pushf
mov
cmp
cmpsb
push
xor
sub
lcall
enter
sbb
sahf
orl
shrl
call
sbb
cmpsb
adc
jno
xchg
pop
dec
jae
jmp
sahf
lret
enter
das
xor
ds
jae
xor
shl
lods
cmp
sti
xchg
pop
xchg
clc
or
jge
add
jne
icebp
jb
sub
enter
sub
test
jbe
arpl
mov
mov
test
mov
jne
movsb
ret
xor
je
pop
lock
aam
out
dec
and
in
adc
notrack
dec
mov
popa
jae
fistpl
or
or
jo
push
ljmp
or
add
imul
mov
icebp
loope
bt
adc
in
mov
imul
repnz
lds
sbb
inc
stc
hlt
mov
in
fsubr
push
aad
xchg
sub
mov
fsubl
test
push
test
aam
pusha
sti
clc
mov
push
cli
pop
fadds
xor
jae
adc
cmp
lea
mov
fmull
lahf
cs
ret
rcll
int3
mov
mov
xor
fstl
fcmovb
lea
or
daa
pusha
mov
jbe
jmp
setl
add
jl
xor
scas
lock
mov
and
pop
je
cmp
sbb
pop
jp
inc
jb
das
sbb
mov
xchg
je
dec
inc
sub
mov
aas
lock
sbb
push
fwait
jecxz
inc
insb
mov
sbb
push
loop
insb
dec
popf
rolb
inc
xlat
sbb
sbb
lock
sbb
ret
push
shrb
jl
mov
jecxz
fldt
inc
cmp
das
sbb
lret
jg
lods
push
adc
cmpsl
icebp
test
lcall
int3
in
pop
sbb
rorl
pop
hlt
popf
lea
loope
pop
into
add
cmpsb
cmp
jno
cli
xchg
push
leave
ds
adc
imul
mov
lret
xlat
mov
mov
cmp
movsl
jl
xchg
in
test
inc
sub
pop
inc
dec
int3
xor
stos
xchg
and
ja
mov
nop
inc
ret
insl
fsubrl
sbb
jbe
mov
push
rcl
mov
jmp
pop
stos
lds
sub
and
cmpb
std
fldt
shrl
inc
gs
xchg
test
stc
sbb
iret
mov
mov
filds
fidivs
xchg
enter
adc
sbb
inc
pop
fisubrs
sub
out
pop
cli
aam
shlb
adc
int3
mov
or
mov
pop
movsb
xorl
pop
or
mov
sbb
ja
pop
and
push
mov
mov
mov
mov
rol
fiadds
mov
dec
or
cld
push
mov
xchg
fisttpll
mov
mov
add
scas
icebp
pop
xchg
sahf
movsl
leave
scas
mov
xchg
cmp
or
xlat
push
sbb
dec
jb
jecxz
inc
inc
mov
lea
add
ljmp
stos
in
outsb
out
adc
cmp
cvttps2pi
or
or
mov
adc
dec
stc
into
add
arpl
sahf
push
stos
dec
mov
inc
rorl
cmc
popf
sti
sub
aad
movb
mov
xor
lods
clc
add
xchg
jmp
ret
test
cmp
stos
dec
out
mov
and
out
xor
mov
cmp
jbe
dec
dec
loope
push
test
fbstp
jbe
scas
mov
or
sbb
or
int
loopne
aad
int3
int
sub
fiaddl
cli
cld
popa
inc
mov
push
ljmp
mov
pop
inc
cld
dec
insl
or
add
ljmp
jb
cmp
add
inc
cli
je
add
adc
xchg
mov
xor
out
mov
adc
jne
movsl
mov
dec
fsubrl
cltd
xchg
or
fsubr
fcoml
aam
daa
pop
xor
add
aas
adc
fadds
inc
pop
jne
bound
insl
push
fbstp
insl
or
es
data16
fwait
jle
fistl
out
inc
dec
addr16
outsl
cmp
cltd
das
jmp
pusha
mov
or
adc
pop
pop
pop
scas
xor
xchg
dec
sbb
push
pusha
call
xor
fdivs
popa
adc
and
adc
push
mov
es
loop
rcrl
xchg
orb
sub
pop
mov
add
loopne
mov
add
roll
or
test
xor
add
xorb
pop
adc
sbb
hlt
test
mov
test
mov
cli
lods
arpl
jnp
sbb
icebp
or
xchg
fwait
in
fildl
mov
mov
in
leave
xor
xorl
out
push
pop
dec
into
out
sar
mov
and
insl
rcrb
pop
in
adc
mov
ret
sbb
fildl
stos
push
jbe
fsubrl
test
xchg
mov
jns
cmp
mov
mov
jmp
filds
ds
pusha
and
mov
pop
cs
adcb
xchg
js
dec
addr16
cld
jmp
in
movsl
sbb
mov
push
and
pop
sbb
data16
ss
push
sbb
sbb
popf
inc
mov
xchg
inc
dec
sbbl
or
lds
inc
push
mov
lods
jl
inc
mov
mov
push
inc
dec
stc
mov
popa
je
out
icebp
jmp
sbb
dec
sbb
insb
cmp
dec
mov
mov
into
add
inc
sub
fistl
mov
pop
xlat
adc
or
or
cmc
or
and
rolb
jne
pop
mov
adc
addr16
cmp
jo
add
lea
add
add
sahf
ficompl
in
int3
cmp
push
inc
subb
mov
gs
cmc
cmp
push
xchg
sub
in
mov
es
pop
lcall
pop
iret
mov
iret
xor
and
mov
mov
sub
mov
icebp
fnstsw
or
mov
jg
push
add
ret
xchg
pop
outsl
fsubp
insl
mov
cmpsl
mov
cmc
sbb
mov
fs
push
inc
pop
inc
lcall
xchg
repz
inc
test
jle
dec
popl
pop
das
push
inc
or
pushf
movb
ds
jmp
test
repnz
das
mov
sbb
movsb
and
inc
xchg
out
lret
jmp
add
rcrb
pop
or
mov
pop
call
xor
pop
lock
sahf
pop
push
shrl
std
jg
ficoms
or
mov
mov
mov
popf
add
sub
xchg
imul
mov
in
add
mov
mov
cmpsb
adc
hlt
call
int
inc
push
fsts
mov
pop
xor
mov
xchg
mov
addr16
test
ret
adc
cmp
sub
cmp
pop
push
jnp
pushf
jecxz
mov
clc
add
test
insb
dec
xchg
lock
and
dec
add
lds
jne
push
fs
sbb
push
dec
cli
test
fcmovne
sbb
sbb
sets
adc
fidivs
aam
loope
bound
lret
int
mov
ret
mov
and
daa
mov
cmp
xor
test
outsb
out
push
cmp
push
fs
rcll
ret
or
fwait
push
into
scas
lock
idivl
pop
pop
jno
insl
and
inc
in
mov
leave
xlat
hlt
xor
adc
stc
sbb
or
jg
andl
sbb
mov
mov
int3
sbb
jno
xlat
andb
adc
jae
les
sub
cs
adc
or
jle
mov
xchg
arpl
mov
push
add
int3
xor
fnsetpm(287
aam
dec
ret
inc
sub
std
cwtl
mov
shll
loopne
mov
int3
inc
jmp
sbb
adc
cmp
fldcw
stc
cli
push
jmp
jl
test
outsl
dec
fildl
sbb
stos
minps
insb
add
pop
daa
pop
mov
pop
mov
sbb
xchg
pop
xor
aam
addl
icebp
lods
sub
sbb
adc
bound
test
mov
xor
xchg
shrl
test
inc
rcrl
cli
adc
cmp
push
mov
enter
sti
xor
call
notb
ss
dec
sub
dec
jne
and
out
sbb
je
pushf
push
mov
das
sahf
mov
in
sbb
pop
aad
nop
jl
mov
stos
ja
jecxz
cmp
inc
lret
das
fsubrs
or
jo
jmp
add
jno
cmpsb
cld
jno
push
push
pop
es
xchg
ljmp
and
cmp
cmp
inc
les
fcmovu
xchg
push
adc
jae
mov
les
inc
add
jle
in
scas
adc
mov
rolb
ja
push
lret
sub
and
cli
dec
insl
std
les
add
adc
push
adc
dec
inc
scas
imul
orb
jo
sub
les
insb
jns
xchg
cmp
jb
aam
fistpl
xor
push
negl
jns
or
outsb
jp
add
test
and
xor
sub
jle
outsb
or
lods
out
mov
cmpb
mov
pop
mov
xchg
outsb
ljmp
jns
cltd
jb
xor
ja
jne
add
iret
lds
xor
aad
push
dec
cmp
jnp
dec
cmp
cmp
mov
loop
test
test
outsl
push
cmp
sub
push
ljmp
icebp
andl
pop
loopne
rcl
insl
mov
xlat
and
out
cmc
jge
and
testl
xor
jne
je
xchg
ja
cmp
jbe
and
js
imul
test
cs
stos
out
mov
imul
pop
xor
push
addr16
sti
and
arpl
lcall
adc
pop
mov
fisubl
jge
pop
outsb
and
call
arpl
cmp
scas
push
mov
shll
iret
mov
mov
ljmp
and
mov
sbb
or
mov
mov
sub
push
shrl
jno
aaa
cmp
pop
xlat
jbe
pop
out
psubw
pop
sub
rcr
call
imul
roll
loopne
andl
sbb
in
mov
mov
xchg
hlt
cmp
stos
stos
cmpsb
mov
inc
and
gs
lods
push
pop
jp
sbb
dec
jge
je
sbb
mov
jne
inc
mov
notl
invd
pushf
cmp
mov
ret
xor
arpl
imul
pushf
aam
fstps
push
or
adc
adc
or
scas
insb
ret
es
cmp
sahf
pop
daa
mov
inc
sarb
and
sub
fcoms
xlat
jmp
xchg
ljmp
sub
sbb
mov
jae
mov
popf
sub
fsubs
mov
adc
jbe
es
aas
mov
into
pop
ror
imulb
ds
gs
movsl
add
cvttps2pi
mov
or
or
cmp
jbe
je
mul
jo
adc
ss
xor
fisttpll
test
push
or
pop
or
aad
loop
scas
movsl
lea
cmp
cmp
arpl
lea
inc
push
xchg
xlat
sbb
jl
pop
xchg
or
mov
daa
sbb
jge
add
and
jo
pop
xchg
adc
sbb
in
and
fisubl
jbe
es
dec
aad
lock
jg
jae
es
loopne
pop
icebp
jae
sbb
pusha
add
xchg
add
mov
das
in
rcrl
mov
cmp
inc
and
xchg
or
cmpsb
mov
xorl
fistps
cmp
pop
jecxz,pt
es
mov
cmp
daa
aam
sub
insb
jno
idivl
mov
and
sbb
sbb
pushf
add
xlat
or
in
dec
cmp
mov
insl
jo
sbb
out
xchg
js
popf
fwait
enter
jmp
add
outsb
insl
push
std
nop
test
ds
jmp
sbb
aas
cli
arpl
cmc
popf
je
test
cmp
or
mov
shrl
dec
mov
inc
je
test
in
pop
arpl
popa
cmp
xchg
arpl
enter
jnp
cmc
jmp
call
or
ja
fsubs
and
out
cltd
aaa
ret
pushf
mov
lods
stos
jge
in
fdivrl
cs
mov
fistl
lods
adc
push
sbb
push
xchg
es
inc
pop
or
push
lcall
xchg
xor
xchg
xchg
fidivrs
popf
add
test
fsubrs
push
outsb
insb
jmp
mov
cmpsb
dec
lcall
cmp
adc
inc
or
push
mov
push
pop
daa
scas
lret
aam
ret
mov
add
jnp
fcomp
js
and
loope
xor
or
fsub
aaa
mov
mov
loopne
mov
test
mov
pop
inc
mov
push
sub
mov
sar
push
sbb
out
pop
or
lock
push
and
cmp
incl
pop
out
or
ljmp
bound
fs
cld
fdiv
mov
jecxz
daa
push
mov
mov
inc
sbb
and
sarb
subl
push
jbe
adc
sbb
out
outsb
mov
xor
movsb
lret
insb
addb
sub
fists
or
push
lock
add
shrb
insl
jecxz
mov
outsl
orb
sahf
mov
sub
into
add
mov
adc
sarl
addr16
in
enter
sub
bound
jnp
mov
mov
dec
xor
rcrb
mov
leave
mov
pop
outsb
idivl
jl
aaa
into
insl
mov
sbb
and
mov
mov
dec
insl
jp
jne
push
jmp
gs
add
in
mov
shlb
in
cmpsl
mov
jno
push
push
or
or
jle
aam
xchg
mov
test
mov
adcb
arpl
jb
and
inc
dec
loop
loopne
icebp
repz
jecxz
add
lret
mov
das
add
je
push
int
rcll
scas
sub
es
in
mov
fists
test
fidivs
out
jno
add
dec
mov
and
test
bound
cs
inc
nop
mov
add
xor
lret
mov
pop
shll
mov
std
aam
inc
call
and
sbb
dec
les
aad
in
scas
orb
dec
mov
push
xchg
jmp
aad
mov
repz
xlat
dec
les
jnp
inc
mov
mov
fsub
cmpsb
xor
aam
nop
and
ret
loop
adc
or
mov
jmp
or
xor
lahf
mov
sub
in
shll
add
outsb
mov
push
clc
loopne
imul
and
rorl
jnp
testl
lods
bound
inc
out
and
jg
sub
hlt
inc
dec
adc
sbb
mov
inc
xchg
jmp
pop
or
enter
xor
in
jne
ret
xor
sub
dec
jo
cmp
cmp
sub
fdivs
adc
push
jecxz
mov
shl
test
movsb
sbb
stos
jg
ljmp
sub
adc
mov
pop
dec
jg
stc
xchg
pusha
inc
cwtl
dec
sbb
and
xor
add
add
pop
fistps
dec
cmp
inc
insl
cmp
test
adc
pop
ds
sub
mov
pop
loope
sbb
mov
inc
fwait
outsb
insb
jb
sbb
leave
call
clc
cmp
xchg
ffree
les
add
cs
imul
jnp
pop
mov
and
mov
arpl
xchg
cli
add
fmuls
cmp
int
jecxz
jae
shlb
mov
jmp
push
lret
mov
add
popl
std
stos
fwait
adc
punpckhbw
ret
push
mov
shrl
push
mov
jmp
mov
xor
cmp
jne
mov
aas
outsb
jl
outsl
mov
ret
add
xor
xchg
shl
sbb
test
fsubs
in
scas
jo
push
hlt
popa
jmp
and
mov
ja
mov
cmp
jb
lea
pusha
insb
sbb
pop
xchg
nop
add
jae
loop
push
stc
in
stos
popa
sti
sub
sub
dec
das
ljmp
jno
sbb
jecxz
fcmovnu
js
imul
orl
in
mov
inc
dec
aam
out
inc
mov
push
fdivl
push
lock
adc
adc
test
mov
in
xor
loope
or
stos
in
cli
inc
pop
ja
scas
jb
mov
mov
fmuls
adc
paddusb
adc
jo
sbb
pop
xchg
dec
shll
sbb
dec
and
push
adc
or
mov
subb
push
bound
xchg
call
repnz
fimuls
lds
cmp
add
pusha
mov
aam
ljmp
xchg
mov
xlat
lret
push
jp
in
pop
lcall
inc
xchg
add
clc
pop
or
lahf
cld
loopne
iret
faddl
cmp
add
mov
push
mov
daa
orb
flds
mov
push
jge
cmpsl
outsl
popa
xor
cs
mov
or
imul
in
imul
cli
sbb
mov
nop
sub
sbb
pop
sbb
push
fsubrs
fisttpll
loope
or
ret
push
mov
ja
pop
pop
xorb
xchg
adc
mov
or
push
sbb
mov
and
sbb
cmp
mov
sub
pop
sub
add
push
ljmp
jbe
mov
dec
cltd
add
mov
push
test
xchg
xchg
mov
rcl
xor
sub
or
hlt
rorb
popf
fistpl
stos
inc
cmp
lcall
and
dec
dec
inc
jge
andb
into
stos
nop
inc
sti
test
sti
aad
adc
jge
loopne
inc
inc
jae
push
jae
test
cmc
lahf
xor
ss
movsl
imul
mov
mov
mov
adcb
pop
das
sbb
pusha
push
adc
xor
fisubrs
es
pop
push
stos
loope
mov
mov
jmp
jmp
sbb
xor
loope
or
outsl
bound
rcr
and
daa
sahf
in
cmpsl
add
xlat
jp
mov
xor
inc
cwtl
lret
outsb
outsl
aad
jmp
gs
jae
mov
pop
in
ss
ljmp
jbe
jmp
lcall
addr16
mov
adc
incb
hlt
inc
xor
sub
mov
cmp
mov
ret
insl
jge
es
inc
cmp
jle
sub
ficoml
dec
scas
mov
addr16
addr16
mov
sbb
mov
lcall
xchg
outsb
pop
xchg
lahf
stos
into
in
mov
js
xchg
xchg
scas
dec
mov
insb
in
in
jo
test
in
pop
xor
pop
jne
push
mov
or
mov
outsl
es
rolb
ss
leave
sbb
fbstp
add
xor
mov
lret
push
jle
pusha
popa
in
and
add
push
mull
mov
pop
add
gs
mov
mov
adc
mov
push
jp
mov
sub
mov
jl
xchg
dec
pop
jmp
popf
loope
cmp
xchg
cli
into
jle
rcll
ds
cli
je,pt
loope
repnz
xor
notl
imul
jecxz
adc
jg
push
jecxz
adc
mov
out
out
rorb
sbb
pop
mov
inc
fwait
push
xor
outsl
pop
xor
into
cltd
jg
call
movsb
jl
xor
or
adc
cld
add
mov
aam
mov
shlb
mov
sahf
mov
mov
or
scas
mov
xchg
in
push
loopne
adc
cltd
pop
mov
lds
inc
dec
push
push
daa
xlat
pop
pop
cmp
sbb
cmp
or
push
test
ljmp
scas
mov
lret
dec
or
xchg
mov
or
test
jl
cmpl
les
jbe
pop
sub
jb
scas
push
scas
repz
cmp
hlt
jb
fadds
fidivrs
js
icebp
lea
jmp
das
adc
popf
mov
and
mov
adc
inc
je
imul
mov
decl
cwtl
push
ss
cmp
loopne
adc
pop
or
dec
ret
stos
js
xor
adc
and
xlat
scas
cmpsl
adc
clc
adc
scas
pop
mov
aaa
pop
and
xchg
or
lahf
je
loope
fisubrs
call
imul
sarb
jns
fdivs
xor
scas
jecxz
lea
mov
incb
jbe
push
mov
stos
stos
and
fldt
stc
das
cmp
pop
rcrb
outsl
fldcw
mov
mov
jb
pop
adc
xchg
sbb
dec
and
sbb
leave
adc
fwait
adc
mov
lods
arpl
pop
adc
out
pop
mov
xchg
jmp
popf
jecxz
adc
xchg
and
inc
push
xchg
jge
xor
jl
loope
cmp
mov
sub
or
or
pop
subl
cmp
lds
cmp
enter
in
pusha
and
adc
cmpsb
dec
adc
in
or
add
dec
out
iret
xchg
mov
dec
test
into
or
pushl
pavgb
xlat
push
icebp
sbb
daa
stos
insl
movsbl
sbb
aad
fnsave
jl
mov
int
inc
loopne
call
xor
inc
ret
mov
shl
clc
sbb
in
cltd
cli
stos
or
aam
jle
subb
outsb
mov
enter
pop
mov
aad
jb
inc
mov
loopne
sahf
out
icebp
stos
jae
dec
loope
inc
iret
dec
pop
sub
mov
adc
inc
fdiv
ret
add
cmp
xor
sbb
or
push
or
dec
jno
inc
cmp
jne
mov
inc
xchg
add
insb
jecxz
sub
shlb
fs
cmc
jns
stos
lock
cld
dec
dec
or
orb
pop
cmp
pushf
test
inc
inc
mov
icebp
push
fstps
rorb
popf
cmp
add
jg
xchg
adc
inc
jb
movb
shr
mov
sahf
cwtl
daa
daa
ret
into
aam
or
lahf
inc
insl
andb
push
negl
or
push
xchg
clc
add
mov
or
xor
pushf
mov
lock
mov
cltd
outsl
adc
mov
popa
push
jp
lods
adc
test
mov
rcr
loop
fistps
jnp
jb
dec
add
in
fwait
mov
dec
leave
sbb
loopne
adc
or
rcll
jbe
aaa
hlt
add
sub
stos
dec
lods
hlt
fldt
inc
sbbb
repnz
lock
and
pop
cltd
push
push
std
pop
lds
imul
movsb
jp
test
cmpsl
movsb
mov
adc
lock
or
nop
or
icebp
xor
add
sub
lock
sbb
in
push
jno
sub
add
push
xchg
xor
mov
sti
pop
into
fadds
push
mov
bound
mov
outsb
dec
clc
cld
mov
cs
sbb
cmc
mov
pop
add
mov
scas
pop
int
pop
sub
mov
jnp
in
je
lret
dec
inc
popa
in
add
enter
pop
fs
jp
fcmovbe
movsl
mov
jb
insb
data16
jbe
push
push
repz
cld
insl
lods
mov
inc
arpl
xchg
outsl
cmpsl
popf
loope
mov
xchg
adc
popa
sti
mov
sbb
insl
scas
aas
mov
mov
inc
xor
inc
lret
shlb
or
push
inc
pop
inc
movsb
scas
mov
mov
daa
loop
and
aad
icebp
inc
and
outsl
xchg
lret
aaa
movsb
push
subl
ss
and
or
loop
dec
ret
mov
stos
out
xor
mov
in
daa
xorps
mov
dec
push
inc
add
sbb
sbb
js
test
outsl
inc
mov
pusha
mov
jo
shll
dec
in
hlt
test
rcrl
addr16
cld
test
lret
mov
jne
rclb
js
pop
aam
div
push
std
movsl
stos
out
or
inc
gs
fistpl
loopne
insb
cld
addl
dec
sbb
fdivs
xchg
push
or
pushf
jge
cltd
mov
jo
sahf
lea
imul
stos
ss
test
popa
into
push
sbbl
sbb
jle
fistps
icebp
or
in
pop
fistl
jbe
dec
fs
pop
ret
xor
lods
sarl
push
cmpsb
sahf
test
or
pop
loop
or
dec
sbb
jno
mov
iret
sub
push
insl
imul
outsl
jp
sbb
mov
lods
cmc
dec
add
rcrb
loop
fcoms
loope
into
pop
outsl
mov
mov
call
jp
xor
push
lds
stos
mov
int
mov
in
pop
subb
outsb
adc
es
int3
call
cltd
and
mov
mov
ret
mov
shrl
pusha
jmp
inc
xor
fstpt
mov
mov
out
or
lock
fimull
mov
cli
fcmovnb
sahf
mov
mov
mov
lret
loop
mov
mov
shl
mov
push
outsl
xchg
sub
pop
aad
push
int3
out
pop
or
daa
sub
mov
pop
mov
mov
push
jo
aam
jns
jl
dec
ljmp
pop
fsubr
push
stos
loope
lcall
inc
inc
test
inc
adc
jge,pt
sbb
sbb
leave
out
xor
fwait
xchg
mov
add
and
mov
scas
or
jne
insb
jecxz
push
mov
cmpsb
loope
push
test
sahf
sbb
jecxz
dec
push
jl
mov
popf
rorl
shll
xor
or
xchg
pop
xchg
adc
pop
fdivs
xchg
fstpl
pop
fidivs
mov
add
sub
lcall
and
incb
adc
repz
xor
hlt
cmc
mov
cmp
xor
fcom
inc
call
lock
icebp
push
adc
push
push
ja
daa
aam
xchg
jns
addr16
shrl
fdivrp
vpmacsdql
ret
xor
add
in
test
sbb
dec
adc
bnd
jecxz
cwtl
add
enter
test
push
pop
test
addr16
aaa
loopne
xor
lret
push
es
rcrl
mov
clc
cmp
cld
clc
ja
stos
psrlw
fxch
jle
es
inc
mov
out
lds
jo
clc
fimull
stos
loopne
faddl
aas
mov
push
add
dec
mov
inc
or
adc
add
push
mov
jno
lods
dec
cmp
cmc
shlb
movsb
jb
add
mov
jp
or
arpl
stc
incl
dec
inc
mov
ja
movsl
inc
shrb
repnz
call
shrb
xor
dec
mov
xor
mov
adc
lods
xchg
gs
mov
fisttpl
insl
cmp
lret
sbb
pop
lock
test
insl
mov
test
mov
in
call
mov
push
int3
jae
lock
jae
jbe,pn
jbe
xor
dec
jmp
xchg
push
push
adc
pop
jg
insl
aaa
mov
xlat
xor
out
repz
mov
add
insb
loope
inc
add
or
sbb
adc
xor
or
adc
dec
je
ret
sub
push
mov
jo
jb
mov
or
in
jg
jne
outsb
lods
mov
inc
or
inc
xor
cmp
lret
repz
clc
mov
mov
je
push
cli
or
call
addr16
js
mov
ret
rcl
pop
or
rol
pop
test
add
push
imul
push
jecxz
cs
jns
jno
ret
inc
mov
add
xor
dec
int3
mov
arpl
sbb
push
movsb
cld
scas
adc
jge
adc
mov
je
sar
rcrb
xchg
or
or
xchg
test
fstpl
sbbb
xor
add
add
repz
out
cmc
repz
jmp
cmpsb
dec
push
es
and
push
addl
psraw
addr16
xor
adc
fmuls
add
pop
sub
and
push
mov
loope
pop
mov
shl
sbb
shrl
jge,pt
and
sbb
call
pop
xchg
adc
inc
pop
or
push
das
mov
div
cmp
sbb
lahf
adc
rolb
subl
ds
mov
int
lock
ror
out
les
imul
pushf
mov
mov
movsl
push
adc
inc
shrl
cwtl
scas
and
popa
sbb
mov
xchg
out
mov
scas
or
ss
mov
ret
push
mov
cmp
aad
jae
pop
test
fsts
push
mov
adc
mov
frstor
cmpsl
dec
dec
mov
jg
jne
ds
dec
inc
ds
fucomip
inc
xor
mov
add
arpl
shll
and
jg
fadd
jbe
mov
cmp
je
popf
lret
icebp
loopne
cmp
ret
xor
push
pop
ds
je
insb
clc
adc
fimull
push
sub
xchg
fbld
pushl
into
xchg
mov
cld
mov
sarl
nop
ret
push
jge
adcl
shll
xorb
mov
xor
aam
jb
lds
adc
jb
jmp
fildl
sbb
xchg
and
xor
cmp
inc
xor
loopne
jno
push
popf
mov
pop
sahf
fistps
das
repnz
stos
push
lods
dec
cmpsl
push
js
imul
lret
push
fcoml
xchg
xchg
inc
shl
cmp
push
mov
inc
out
dec
into
lods
push
rcl
aam
inc
icebp
pop
test
cld
pusha
cmpsb
fisttpl
mov
push
aad
mov
fistpl
test
rcrb
ret
jle
mov
loopne
int3
push
pusha
sub
mov
fwait
dec
test
je
loope
mov
mov
adc
into
jecxz
mov
insb
xchg
mov
push
mov
rcll
arpl
clc
fadds
or
jmp
incb
mov
xchg
mov
int
scas
push
cmp
and
pop
dec
and
push
icebp
push
or
jbe
pop
faddl
push
inc
inc
fsts
dec
adc
enter
inc
xor
enter
out
hlt
rcl
orl
xor
cmp
and
addl
outsl
cmp
jmp
setg
xor
insb
mov
cmp
add
insl
mov
add
shll
daa
inc
lds
adc
divb
xor
cmpsl
scas
push
dec
dec
xchg
mov
outsb
lea
ret
and
xorl
mov
inc
ror
mov
movsb
dec
addr16
ret
jb
jg
jp
push
mov
adc
aaa
mov
fisubrs
out
sub
lds
sti
mov
stos
push
roll
pop
jp
inc
mov
ret
and
lods
mov
stos
inc
push
mov
std
fwait
mov
imul
outsb
add
pop
push
fs
and
jb
or
adc
sbb
rolb
pop
push
cmpsl
pop
insb
mov
scas
and
jecxz
outsl
push
jp
clc
lods
fcmovnbe
out
cmp
and
and
rolb
movsb
add
jns
ret
orb
push
xor
in
stc
and
mov
ds
cmp
out
jo
aad
sub
cli
shll
pop
and
orl
jmp
aas
or
out
arpl
xor
or
inc
js
ret
jns
cmp
jnp
mov
inc
fwait
mov
jb
roll
fildl
adc
popa
jecxz
xchg
pushf
cs
add
or
lock
push
in
inc
shrl
dec
lods
mov
mov
or
mov
pusha
and
inc
dec
pop
fstl
aas
mov
xchg
fiadds
xchg
add
into
push
rcrl
cmc
mov
sub
roll
std
add
and
insb
shlb
je
stc
adcb
in
mov
cmp
daa
mov
int
pushf
ret
and
mov
lret
or
and
aas
ficoms
cwtl
xlat
inc
add
and
shlb
push
fwait
testb
cs
fcmovu
shlb
ret
ret
out
scas
xlat
rcrl
fsubrs
mov
sbb
scas
movsb
js
mov
xchg
dec
sti
push
clc
insl
xchg
add
xchg
jmp
js
xor
lods
jmp
sbb
roll
sub
mov
in
je
loope
maxps
ljmp
aam
loope
dec
ds
xchg
inc
jo
dec
imul
lods
shl
hlt
arpl
cmp
sti
and
or
xchg
bound
cld
cmp
mov
ss
int
fs
outsb
push
jne
xchg
pushf
push
add
int
jmp
arpl
pop
aad
rolb
xchg
fidivrs
jne
js
inc
lock
xor
mov
mov
pop
ret
test
or
das
push
aaa
outsb
orps
add
aaa
inc
fidivl
dec
cli
xchg
inc
jbe
cmp
sbb
insl
aas
sarb
mov
sbb
leave
adc
add
mov
addb
cmpsb
cmp
fcompl
movsl
xchg
clc
jmp
dec
mov
or
lock
pop
dec
insl
je
ret
mov
subb
aad
or
lahf
add
or
sbb
roll
scas
jb
adc
es
lock
fwait
cmp
adc
cmp
jb
sahf
imul
inc
cmp
fwait
aaa
inc
mov
rolb
cltd
mov
inc
or
pop
and
or
dec
ss
vmread
adc
mov
int3
bnd
test
lret
pop
cmp
addb
mov
ret
pop
dec
aas
js
pop
mov
mov
fldcw
loop
xor
inc
dec
inc
out
pop
sarl
adc
sub
xchg
ror
fdivrs
sbb
jle
and
mov
enter
mov
cmpb
jno
sub
ds
fwait
std
jmp
aas
jl
inc
lock
mov
jo
jle
dec
adc
push
decl
adc
popa
fldt
mov
inc
xchg
je
ret
and
cmp
inc
or
inc
pop
xchg
jo
xor
dec
jae
das
fbstp
cmp
ret
cmp
inc
ret
lret
sbb
imul
add
movl
in
repnz
js
lock
movsb
push
std
je
jno
add
cli
bound
or
mov
flds
sbb
nop
mov
lods
mov
movsl
data16
aam
call
jnp
mov
pop
out
lds
test
int
rcll
pop
dec
addr16
jne
arpl
aas
cmp
pop
sub
not
mov
insb
outsb
mov
es
mov
cmc
testl
sbb
jge
int3
mov
call
xchg
fcoms
js
addl
ret
fdivl
xchg
sub
jne
dec
fldt
xchg
push
mov
pusha
mov
int3
enter
lret
fdivr
es
cwtl
cli
test
sbb
ds
sub
pop
fdivrs
mov
lahf
xchg
xchg
mov
sub
stos
loope
shlb
fdivl
cmpsl
fisubl
push
jnp
insl
jge
cmp
out
sub
imul
sarb
xchg
fisubrl
inc
adc
push
testl
jge
or
cmp
ss
mov
pusha
xlat
into
push
lea
lods
lods
push
sbb
adc
dec
insl
inc
int3
xchg
push
rorl
test
cmc
loopne
cmc
pop
push
push
pusha
divb
cltd
cltd
or
lea
and
cmc
jno
flds
mov
push
mov
filds
lcall
loopne
sarb
jne
inc
xchg
mov
ds
mov
ds
or
push
pop
sbb
mov
mov
mov
mov
pop
cld
mov
idivl
movnti
nop
inc
dec
mov
dec
xchg
addr16
and
jmp
loop
dec
mov
push
aad
dec
push
jo
inc
outsb
or
dec
xor
mov
push
ret
notl
rcrb
mov
sahf
ret
add
out
jl
push
fcomp
sub
mov
jne
hlt
dec
jb
mov
jmp
sbb
jg
outsb
sbb
push
cs
xor
icebp
ret
xlat
pop
inc
xor
shll
add
aaa
rorl
push
jecxz
jg
push
insb
mov
push
out
lods
shlb
cmp
mov
or
and
imull
push
add
aaa
fdivrs
sbb
out
ret
mov
sti
jo
ret
sahf
in
jmp
js
into
ja
push
cmp
lcall
popa
xlat
push
rolb
jns
fldl2e
mov
inc
mov
les
rclb
adc
push
pop
test
fcomip
or
inc
xor
mov
or
je
rcl
movsl
rcrb
mov
push
and
sbb
inc
jg
or
xchg
flds
adc
xchg
and
dec
xchg
xchg
cmp
push
cwtl
psllq
pop
mov
cmp
lods
dec
mov
shrl
out
sbb
jb
push
psubd
iret
or
cwtl
ja
mov
cmp
das
aas
in
inc
nop
test
fsub
xchg
and
inc
jnp
inc
xchg
sbb
pusha
and
sub
mov
in
rcrl
push
mov
push
lcall
fdivs
lods
loope
fbld
sbb
cwtl
jmp
das
jns
push
mov
jecxz
gs
fmull
mov
and
push
ds
mov
xchg
jmp
test
aaa
ljmp
jmp
popa
negl
cmp
push
mov
jno
movd
lods
pop
mov
lcall
dec
or
xchg
xor
hlt
jecxz
add
stos
jecxz
push
and
sbb
stos
xor
mov
je
mov
imul
inc
je
fs
inc
stos
cs
test
jno
lcall
cmp
fcomi
test
inc
lret
pop
xor
mov
jecxz
rclb
ret
roll
aam
and
or
imul
mov
pop
leave
cwtl
mov
movsb
cmp
xor
icebp
in
bound
fwait
mov
add
cmp
clc
cmc
rcll
cmp
in
jbe
sti
in
stos
movsl
addl
inc
cmp
xchg
ds
cltd
cmp
sub
cmc
push
es
pushf
rorb
dec
sub
hlt
add
dec
pop
out
and
out
divl
stc
in
pop
jmp
fcomps
or
in
adc
addr16
or
movsl
mov
cmp
push
inc
xchg
sbb
in
adc
leave
shlb
inc
mov
test
xor
mov
add
dec
inc
pushf
rolb
sbb
xchg
test
jne
outsb
mov
jnp
mov
sbb
data16
sar
ret
pop
mov
cmpsl
mov
imul
jecxz
imul
mov
fdivr
mov
call
popf
loope
aam
pop
mov
and
mov
js
stos
das
rcr
push
xchg
xlat
lret
ljmp
inc
xlat
andb
ds
dec
daa
shlb
les
insb
mov
push
popa
jmp
inc
push
fdivs
imul
add
push
frstor
ret
cmpsb
adc
inc
mov
mov
cli
add
dec
sub
test
sbb
cmp
sub
jne
imul
outsb
inc
pop
jo
inc
push
add
pop
cs
jecxz
outsl
mov
xchg
cmpsl
cmp
mov
dec
or
fldt
jne
out
add
xchg
loope
xor
and
sbb
sahf
xchg
mov
mov
fimull
mov
out
xchg
mov
dec
pop
mov
push
cmc
test
stos
loopne
add
pusha
jnp
or
shlb
sub
push
shlb
or
sbb
jmp
movsl
xchg
adcl
sbb
adc
icebp
stos
pop
mov
icebp
pop
jp
adc
sbb
in
sahf
ja
dec
mov
xor
push
pusha
insb
loopne
or
hlt
js
sbb
and
xor
das
das
push
arpl
push
sub
sbb
aas
jo
and
pop
popa
xchg
mov
cmpsb
out
dec
fiadds
adc
adc
or
or
aam
arpl
inc
scas
xchg
sbbl
pop
lea
push
cmp
xchg
movsb
daa
cmpsl
aad
xchg
mov
jg
popa
data16
sbb
popf
adc
mulb
mov
cs
inc
jnp
cmpsb
jb
mov
push
int
add
ljmp
xlat
scas
repnz
mov
sbb
inc
mov
lret
std
inc
xchg
ljmp
fisubl
sbb
in
cmp
adc
push
les
dec
shl
cmp
aaa
adcb
lock
sbb
add
fwait
jg
jp,pt
pop
lock
xor
xor
fdivl
mov
insb
push
push
mov
js
sub
bswap
xor
mov
call
pop
sbb
aas
xor
sbb
in
iret
mov
push
lret
stc
dec
mov
pop
sti
sti
mov
arpl
or
add
jl
mov
rorl
imul
mov
out
push
mov
push
mov
ss
lods
xlat
pop
xlat
xor
out
push
push
repnz
data16
icebp
or
push
xchg
rcrb
je
mov
inc
push
ror
mov
rorl
out
cli
lcall
add
pop
inc
ficompl
inc
inc
adc
dec
adc
pop
push
mov
inc
movsb
fidivl
sub
cmp
fsubrp
dec
enter
pop
jae
inc
std
test
jne
xchg
scas
ljmp
lods
add
mov
leave
insb
xchg
xlat
cmp
pop
mov
popa
in
sub
adc
lea
jle
out
pop
pop
pusha
push
insb
in
or
xor
rcr
pop
pop
sahf
scas
std
test
pop
pop
fdiv
lods
stos
aas
dec
test
mov
add
insb
lret
cmc
adc
xchg
mov
add
test
mov
push
sub
outsb
mov
outsb
dec
jl
ret
push
insb
dec
cmp
lock
fmul
pop
and
mov
dec
cld
push
jbe
mov
pop
aas
inc
xor
mov
lock
loopne
sbb
daa
mov
mov
xor
adcl
loop
fimull
mov
adc
xchg
movsb
mov
ss
adc
insl
mov
xor
inc
and
push
push
leave
fadd
or
rep
jo
mov
gs
popf
pop
cwtl
test
lock
mov
popa
sbb
and
dec
add
cmpsl
adc
stos
mov
fisubrs
jp
sub
loop
mov
popf
lods
jg
lock
adc
pusha
mov
div
aam
enter
leave
out
out
sub
loop
test
aaa
mov
inc
in
insb
sahf
jl
add
push
ss
in
daa
mov
add
inc
nop
test
cmp
xor
inc
addr16
stos
aaa
loop
pop
insl
mov
sub
pop
aaa
filds
dec
xor
cmp
testb
jb
shrl
push
mov
sub
popf
ja
cmpsl
cmpsb
push
fwait
xor
jle
mov
cmpsl
js
or
pop
or
or
cld
in
sbb
jno
lods
leave
scas
add
into
inc
lret
shlb
add
adc
lret
adc
call
pop
andl
pop
push
mov
cmpsb
cld
push
out
call
fs
or
cmp
add
popf
xchg
add
cwtl
xcrypt-ofb
cmpsl
jmp
popa
cmp
pop
fisubl
push
pop
scas
pop
insl
int
scas
fldt
arpl
imul
xchg
jb
inc
mov
fcomi
jecxz
pop
cmpsb
jl
or
hlt
rorb
or
or
je
sub
testl
inc
hlt
mov
ja
jl
xor
jno
sbb
push
sbbl
mov
popa
subl
insb
int
hlt
movsb
fbstp
or
push
inc
ja
fistpl
inc
in
xor
int3
fistpll
cmp
and
dec
adc
cmp
mov
test
mov
jle
push
ret
pop
outsl
jo
mov
jecxz
xor
jbe
mov
int3
ss
jmp
and
lret
loopne
cmpsb
and
ljmp
test
leave
in
test
sahf
fsubrl
test
cmc
lods
aaa
sub
xchg
and
rcr
add
outsl
in
mov
roll
xor
xchg
sub
mov
inc
ja
mov
xchg
bound
ljmp
lock
call
adc
push
imul
sbb
mov
push
arpl
pop
jb
das
sbb
mov
cld
push
jno
and
adc
je
xor
fidivl
ret
inc
mov
xchg
es
bswap
insl
insb
cli
test
popf
add
repz
pop
imul
mov
ja
xor
rorb
fadds
mov
inc
sub
test
daa
adc
mov
arpl
push
loopne
rcrl
shll
out
jbe
mov
lods
cmpsb
loope
pop
and
fsubs
test
daa
ja
push
fadds
test
push
sbb
icebp
push
shll
ja
std
or
pop
mov
repnz
cli
sbb
shrb
inc
push
push
inc
sub
inc
nop
dec
push
xchg
rorb
push
pop
and
push
add
add
inc
inc
jge
les
cs
imul
jecxz
rcr
jg
popa
sbb
xor
adcl
repnz
push
ret
pop
xor
inc
or
test
push
jne
dec
leave
inc
add
jb
add
lods
xchg
maxps
lret
xorb
sbb
leave
in
sbb
outsb
call
sub
cli
and
mov
sbb
and
pop
and
rcrl
xchg
mov
outsb
stos
xor
test
sahf
ds
fnstenv
aaa
inc
sahf
adc
je
cmc
dec
mov
mov
cmp
gs
pop
jbe
sub
hlt
adc
pop
call
pop
out
inc
addr16
jnp
stos
dec
xchg
loopne
roll
jle
inc
inc
add
adc
dec
or
push
jb
popa
xor
fsubrp
or
dec
pop
or
cmp
ljmp
mov
mov
loop
cmp
ret
ljmp
push
xlat
repnz
xor
test
mov
pop
jne
daa
ljmp
pop
call
cmc
das
xchg
and
mov
and
cli
popf
pop
jnp
push
sbb
shll
or
test
shll
pop
cmc
in
cvtps2pi
shl
pop
loopne
rcrl
cld
lea
push
sub
lock
inc
xor
push
mov
sbbl
adc
outsb
bound
or
inc
xchg
mov
mov
jo
push
in
jnp
xchg
fildl
mov
sbb
mov
aaa
push
mov
pop
push
xchg
lahf
loopne
jle
mov
inc
inc
lcall
sbb
data16
das
sub
adc
mov
scas
subb
mov
clc
bound
in
pop
jmp
cmpl
ja
fidivl
mov
inc
cs
ss
push
inc
sbb
adcb
fistps
imul
fdivs
and
inc
mov
lret
call
addr16
xor
cmc
add
movsl
cmc
fcompl
xor
sahf
or
fdivrl
push
sbb
es
fidivrs
mov
and
adc
mov
xorl
pop
movsb
punpckhbw
lock
or
aam
jg
and
lock
dec
dec
addr16
mov
mov
dec
leave
jmp
pop
sahf
ljmp
mov
rorb
adc
popa
adc
xor
xchg
mov
pop
dec
pop
lds
add
shl
cli
imul
pusha
dec
cwtl
push
inc
add
mov
jb
or
test
movsl
jbe
std
daa
xlat
icebp
ja
adc
repz
movnti
aad
or
pop
jae
add
pop
insb
pop
inc
es
hlt
inc
push
test
lahf
push
dec
mov
pusha
andl
fcmovnu
rorb
enter
push
jmp
pop
test
xchg
adc
ds
inc
aad
xor
and
rol
pop
mov
cmc
andb
jle
dec
mov
adc
adc
or
jbe
add
xchg
add
sbb
cmp
cmp
addr16
push
push
sub
mov
jbe
mov
push
mov
inc
mov
sahf
fldt
pop
fwait
rorb
insl
inc
js
icebp
stos
and
and
dec
jno
jno
xor
out
mov
mov
cltd
lcall
iret
fiadds
lret
test
xor
push
push
stos
push
lds
cwtl
xchg
outsl
mov
cmp
sbb
mov
pushf
aaa
addr16
stos
lods
xchg
xchg
fcomi
shlb
aas
or
sti
adc
add
sahf
jmp
cmp
pop
and
push
cmp
enter
mov
xchg
sbb
test
cmp
sbb
jmp
mov
inc
sub
push
es
cmp
cwtl
xchg
into
inc
xor
xor
icebp
inc
repnz
adc
mov
out
pop
data16
xorb
adc
jmp
ds
repz
cmp
jae
cmovo
insb
mov
mov
inc
jmp
bound
nop
xchg
repz
sarb
adc
jno
imul
xlat
pop
imul
or
daa
pushf
shll
or
fcomp
fsubrs
out
sbb
dec
push
jmp
sub
cmp
inc
ss
mov
pop
push
jg
lret
out
jmp
push
mov
loopne
sti
out
out
jb
int
nop
push
div
pop
push
repnz
dec
in
jle
iret
mov
or
mov
test
es
mov
jle
adc
imul
inc
xor
adc
les
pop
adc
xor
stc
ljmp
dec
ret
faddl
and
out
fbstp
or
sub
test
mov
subb
aam
mov
ret
xor
inc
jae
sbb
dec
addr16
dec
or
out
inc
jno
mov
mov
faddp
push
inc
cwtl
or
imul
ss
call
cs
mov
add
loop
loop
add
jo
std
inc
mov
in
push
clc
lea
sub
mov
in
sbb
xchg
adc
cmp
push
jp
loopne
shll
push
repz
repnz
pop
repz
push
nop
adc
icebp
loop
cld
jg
insb
inc
add
xor
or
sub
icebp
sbb
movsl
shll
mov
mov
dec
mov
cmp
push
push
push
pop
cmp
aam
sub
push
outsb
pop
popf
sub
add
sti
xor
xchg
test
mov
cmp
mov
lcall
std
push
aas
decl
pop
negl
lock
sub
shrb
fstl
out
mov
mov
lods
mov
insl
data16
add
xor
adc
jl
stos
sub
xchg
out
and
push
das
sub
call
mov
mov
mov
ss
and
adc
je
push
ret
jne
sbb
and
test
push
xchg
sbb
sbb
orb
xchg
mov
rorl
out
add
mov
js
lock
insb
sbb
inc
pop
insl
pop
and
cmp
mov
mov
fstps
sbb
aaa
test
jnp
cmp
push
mov
loop
cwtl
lcall
test
lods
scas
sub
or
lods
loop
ficompl
jnp
js
lret
popa
jbe
push
mov
pop
rclb
stos
or
ljmp
clc
pop
cltd
xorl
mov
ds
cmp
or
and
mov
ss
enter
ret
dec
bound
cmp
out
inc
pop
push
fstp
sub
fiaddl
fiadds
jle
lds
jmp
fdivr
out
sarl
aaa
js
pop
cmpb
and
rcrl
fwait
into
push
call
xor
mov
lcall
pop
insb
xchg
fsubrs
or
mulb
sbb
dec
mov
int3
mov
shrb
in
les
orb
mov
mov
rcll
add
push
call
dec
dec
sub
testl
mov
xor
mov
fyl2x
aam
mov
pop
push
dec
stos
xchg
lods
fidivl
or
pop
pushf
and
xor
jp
mov
aam
repnz
pop
cmpsb
and
lret
outsb
mov
push
add
pop
mov
jae
fstpt
ret
jb
lds
sub
push
js
dec
popa
xlat
stos
int
mov
dec
mov
and
imul
test
pop
cmp
sbb
xchg
mov
popl
sub
pop
ss
sbb
xor
pop
lret
iret
mov
fidivs
cld
mov
inc
adc
and
jne,pn
mov
mov
fadd
mov
mov
mov
dec
rcrb
call
insl
add
int
adc
xchg
aam
out
mov
inc
cld
ficoml
jmp
imul
inc
adc
bound
pop
push
out
out
out
lods
lret
repnz
push
or
outsb
sbb
xchg
xchg
inc
cmp
add
push
arpl
andl
shlw
pop
fisttpl
sahf
lcall
in
movsb
cmpsb
and
add
pop
gs
mov
jp
xchg
pusha
testb
in
push
sbb
jne
fwait
rcl
ret
sbb
into
sar
lea
jl
fsts
xchg
push
stos
ret
ljmp
popf
push
cmp
xor
mov
mov
push
or
sbb
dec
sbb
mov
or
fdivl
push
movl
mov
sahf
mov
pushf
mov
dec
sbb
out
add
out
push
push
lea
mov
bound
cmc
mov
inc
jl
flds
add
or
mov
rcrl
stc
cmc
into
or
jbe
mov
imul
adc
xor
int
stos
push
data16
mov
pusha
sub
or
clc
les
xchg
outsb
or
mov
idivb
std
sahf
dec
aam
add
mull
push
jne
inc
or
push
vmwrite
jo
addr16
cs
add
scas
xchg
ret
test
adc
iret
mov
inc
ds
cld
in
stc
ret
movb
addr16
xchg
inc
aas
add
or
adc
lds
andb
js
jne
mov
shrl
mov
or
fwait
jne
and
xor
testl
insb
xlat
movsb
or
jnp
icebp
inc
cli
adc
and
push
sbb
jg
xchg
xor
and
add
sub
or
jmp
cmp
push
pop
out
jg
mov
push
insb
stos
or
jecxz
sbb
and
pop
jb
add
cmp
inc
imul
add
push
mov
mov
or
sbb
movsb
icebp
clc
gs
add
test
mov
lcall
lock
adc
mov
sub
xor
mov
addl
or
adc
pusha
sbb
mov
imul
mov
call
cmp
into
xchg
xor
cmp
pop
jo
in
add
lret
xchg
stos
push
cld
lcall
ljmp
pop
dec
sub
movups
cmovno
xlat
cmc
push
add
int
cmpsl
movsl
enter
sub
lods
pop
lcall
loopne
adc
xor
rorl
out
jle
adc
int3
cld
fildl
stc
mov
push
and
daa
aam
sub
add
sub
pop
sbb
nop
add
jge
mov
pop
shrb
sbbb
pop
dec
mov
lock
or
jne
outsl
mov
hlt
icebp
jo
adc
aam
dec
test
ret
sbb
cs
test
xor
adcb
lea
dec
add
push
ja
mov
dec
add
std
insb
aas
or
scas
cmc
dec
sti
call
dec
adc
cmp
sub
xchg
and
or
add
jmp
xor
scas
cmp
mov
push
bound
mov
inc
mov
push
xchg
loopne
aad
pushf
gs
xchg
and
addr16
cmp
push
jmp
sbb
ret
and
ficoml
out
add
pop
jl
jns
jge
leave
pop
sub
fs
sbb
ret
movl
push
sbb
ss
nop
push
dec
jo
xchg
jle
mov
push
in
jecxz
xlat
lahf
in
test
rclb
hlt
rep
mov
pop
dec
xchg
push
fcomps
in
xor
lahf
push
fcoml
ljmp
inc
dec
pop
adc
clc
cmpsl
sbb
mov
sahf
icebp
mov
int
out
loop
pop
add
gs
stos
add
push
fs
adc
xchg
out
movsl
lret
repnz
pop
movsl
nop
fistl
lea
adc
add
fs
ud2
js
arpl
nop
loope
push
sub
inc
dec
dec
sahf
jns
cs
jno
jg
sbb
add
hlt
into
in
xor
jecxz
jns
ret
lret
sarl
jecxz
xchg
shrl
mov
push
int
sbb
fxch
or
scas
and
inc
or
adc
xor
sbb
pop
sbb
and
idivb
cmpsl
sbb
push
mov
test
lret
or
dec
ret
outsb
add
cltd
repnz
ljmp
mov
sub
test
leave
bound
imul
iret
sar
rcll
push
inc
adc
sub
jne
mov
dec
rcl
popa
jmp
js
mov
push
xlat
mov
aad
push
mov
in
add
mov
les
insl
pusha
loope
sbb
adc
imul
pop
mov
ja
jo
in
aad
jnp
dec
test
scas
gs
dec
dec
fisttpll
test
pop
pop
je
adc
les
shl
arpl
mov
stc
sub
outsl
adc
sbb
and
shll
jle
inc
mov
nop
mov
pop
ss
aaa
cmp
out
pushl
push
inc
mov
movsb
adc
cmp
xor
mov
pop
pop
dec
dec
fldcw
jge
xlat
pop
fstpt
mov
or
or
ljmp
nop
add
pop
jmp
sahf
test
insl
or
push
stos
and
mov
mov
insb
lahf
push
mov
cmp
cmp
jnp
or
add
pop
jbe
jl
push
push
loope
inc
push
mov
dec
insl
add
call
fistl
outsb
gs
mov
xor
adc
xchg
sti
mov
in
adc
xchg
push
or
lock
hlt
xor
jp
pmulhw
incl
xchg
jbe
push
es
mov
in
arpl
outsl
xchg
xor
sub
pop
push
jo
push
mov
mov
fstl
xchg
push
or
cmp
xor
data16
mov
cmp
in
mov
adc
cmp
pop
xor
hlt
mov
xchg
bound
mov
insb
mov
push
lcall
outsb
adc
mov
mov
sub
insb
fstl
fistpl
or
pop
cli
popf
imul
mov
cmp
div
dec
mov
pop
rcl
lret
add
leave
inc
in
sbb
aas
inc
daa
in
push
push
pop
stos
fs
loope
ret
xchg
cmp
incl
dec
xor
pop
mov
aad
ret
pusha
sbb
lods
xchg
inc
or
xor
pushf
xor
fldl
imul
lret
mov
pop
lahf
push
mov
pop
cs
out
test
data16
pop
lea
ret
or
dec
outsb
add
ds
aas
inc
push
into
cmp
cmpsl
cmp
cmp
push
ljmp
ret
pop
les
push
sbb
in
lock
shrl
std
ss
mov
xchg
in
ss
mov
push
push
scas
rol
xchg
cmpsl
js
add
push
push
push
sbb
fsub
cmp
test
or
cmp
sub
nop
pop
nop
mov
lcall
lahf
or
mov
jns
out
scas
sarl
pop
sahf
mov
mov
mov
inc
push
dec
push
mov
xchg
cmp
ljmp
mov
push
mov
sbb
add
add
fiadds
stos
lock
mov
dec
or
scas
mov
test
repnz
xchg
popa
pop
jge
push
loope
ret
mov
scas
lods
xor
rorb
or
dec
push
adc
push
rorl
push
inc
jecxz
mov
jecxz
sub
or
dec
dec
sbb
rcl
add
jp
adc
cmp
insb
or
jb
cwtl
mov
cmp
cld
jo
nop
out
dec
sbb
jo
rorl
push
ss
push
push
out
cwtl
push
lcall
in
das
lds
jae
dec
insb
nop
outsb
rcll
cmp
dec
pop
je
jp
jo
test
inc
adcw
bound
mov
hlt
dec
or
cmp
je
cmpsl
push
adc
outsb
scas
imul
lds
mov
mov
andl
xchg
fsubs
aad
lcall
dec
nop
sub
xor
fsin
addb
mov
dec
push
adc
adc
test
push
imulb
add
jmp
in
rclb
call
aam
inc
pop
stos
sbb
or
clc
inc
jae
mov
jne
push
int3
out
mov
cmp
fs
jns
jns
mov
add
lahf
data16
xor
lret
clc
cltd
jmp
sbb
addb
pop
js
sub
mov
or
call
or
mov
and
in
nop
dec
ret
adc
jl
push
arpl
outsl
dec
adc
stos
aas
addr16
js
push
mov
nop
xor
push
mov
and
std
xor
pop
or
inc
or
push
pop
scas
out
es
out
adc
shl
ds
das
stc
movsb
and
es
pop
mov
mov
sub
in
out
sub
jnp
outsb
xchg
andb
pop
xor
int
out
jl
fldenv
hlt
fildl
jo
jno
scas
call
pop
push
fcompl
cmc
xchg
push
sub
pop
mov
and
cmpl
jge
sahf
cmp
push
pushf
cmc
je
sub
or
push
jno
loope
sbb
pop
adc
xor
ljmp
ret
push
insb
mov
push
dec
xorb
leave
into
js
pop
jb
or
repz
cmp
dec
dec
inc
cmp
jmp
push
pop
lahf
mov
clc
jp
pushf
pop
js
int
out
scas
fcomps
data16
cmp
pop
add
mov
mov
pop
add
test
insl
addl
ljmp
and
ret
pop
in
sub
rcr
je
shlb
inc
mov
adc
ret
or
stos
mov
mov
xchg
ss
sbb
aaa
mov
or
enter
adc
jno
cmpsl
les
mov
adc
push
sbb
stc
divl
mov
cmpsl
adcb
mov
cs
repz
cmp
movsl
insl
test
mov
dec
fsubl
ret
pop
pushf
sbb
fiaddl
fisttps
js
inc
loopne
sub
or
repz
mov
sub
add
jmp
push
cmc
rolb
aam
cmpsb
push
fistl
ss
divl
cmp
xor
mov
dec
push
mov
sbb
stos
xor
and
dec
loopne
inc
xchg
loopne
lret
loope
mov
and
adc
mov
and
fucomi
dec
sbb
std
inc
shl
jl
sbb
ljmp
icebp
sub
xchg
fs
ret
add
bound
or
lea
mov
pushl
and
cmp
test
jmp
dec
pop
sub
mov
dec
ja
cmp
mov
cmp
dec
inc
push
js
daa
dec
cmp
fcom
mov
xchg
push
fistpl
mov
push
mov
mov
jno
mov
inc
cmp
add
lods
cmp
or
pop
aam
fucomip
stos
mov
sub
je
rclb
sbb
fisttpl
pop
adc
ret
pushf
add
out
add
imul
xchg
inc
ret
adc
scas
idiv
adc
das
pop
jecxz
jl
push
mov
or
sub
mov
adc
popa
enter
test
nop
mov
mov
sti
pop
push
mov
nopl
sub
adc
enter
xchg
outsb
and
or
pop
mov
dec
xor
push
jl
dec
mov
jo
inc
cmpsl
push
xor
mov
leave
push
roll
pop
pop
mov
and
lea
pop
js
adc
xchg
dec
inc
jbe
sbb
mov
xor
push
mov
mov
aaa
and
xor
mov
int3
inc
mov
push
push
or
ror
inc
mov
inc
shlb
enter
movsl
pop
inc
shlb
jge
enter
into
push
xchg
xor
xchg
push
mov
xor
inc
call
ljmp
aad
mov
sbb
jecxz
test
loopne
or
add
or
je
cmpsb
insl
push
aam
sbb
push
icebp
push
rep
dec
xor
fistpl
jl
xlat
add
rorl
push
jl
dec
or
out
repnz
push
pop
xchg
dec
pusha
enter
cli
mov
mov
add
pop
xchg
mov
jge
inc
add
xchg
dec
inc
sbb
insl
rorl
jp
or
insb
push
test
rorl
test
cmp
cltd
loope
mov
int
jne
ret
or
std
fcomp
mov
sbb
and
cmpsb
in
aaa
jbe
pusha
ret
mov
unpcklps
mov
inc
add
cmp
js
jo
cmc
cltd
sbb
lahf
nop
popa
pop
push
decl
push
pop
ljmp
mov
in
mov
adc
jl
mov
mov
jb
xor
cmp
fsubs
mov
xchg
scas
xchg
jmp
push
or
addr16
dec
mov
sbb
or
or
cmp
and
out
mov
xor
addr16
sub
cmp
leave
insl
int3
testl
aaa
les
mov
lock
xchg
pushf
popa
jb
mov
fwait
mov
pusha
lcall
xor
lahf
pushf
testb
in
and
hlt
xor
cmp
cld
out
sub
ret
or
push
push
addr16
inc
enter
cmp
inc
pop
lods
mov
sahf
cmp
notl
add
jp
xchg
mov
add
outsb
popa
add
cmp
jne
es
icebp
movlps
filds
adc
je
jae
adc
in
dec
push
jecxz
jge
inc
pop
sbb
outsl
pop
das
jp
jmp
or
out
ficompl
iret
and
ljmp
pop
insb
and
add
adc
sbb
dec
ret
sbb
sarb
cmp
cmp
addb
adc
xchg
dec
ret
cmp
sub
out
cli
iret
sbb
outsb
cs
and
loope
bound
daa
adc
and
aaa
fdivrl
pop
fs
jge
cmp
out
cmp
cwtl
mov
xor
jg
jp
insb
lods
add
into
jns
hlt
pop
mov
or
push
fcmovnb
or
mov
fistl
fisubl
pop
or
jae
mov
aam
push
jmp
fildl
nop
jbe
mov
adc
sub
ds
mov
fstpt
xchg
into
dec
push
out
push
jg
lock
mov
push
xor
movsb
inc
push
iret
jecxz
adc
jmp
mov
fiadds
mov
xchg
test
push
or
shrb
xchg
hlt
lcall
pop
push
push
testl
push
xchg
sub
jb
dec
test
shr
xchg
call
movsl
dec
push
andb
jo
pop
daa
cmp
add
rorl
xchg
pop
je
adc
fistpl
stos
or
sbb
pop
mov
leave
stos
scas
mov
pop
cld
xchg
add
xchg
mov
pop
mov
sub
dec
sti
xchg
jns
mov
sub
stos
imul
or
into
add
dec
clc
jnp
mov
add
lahf
pushf
sbb
sbbl
inc
and
mov
imul
dec
stos
popa
xchg
push
das
push
ret
xchg
cmpsl
jns
ficomps
pop
mov
mov
shlb
cmp
test
adc
dec
adc
repnz
call
mov
insl
ret
and
mov
into
sbb
xor
jmp
in
mov
jg
xlat
inc
fldl
inc
frstor
mov
cmpsb
lods
sub
mov
add
je
cmp
or
pop
pop
sub
fcoms
inc
sbb
xor
mov
or
fldenv
fnstsw
sub
jo
ret
mov
jns
lods
out
xor
jbe
mov
fisubl
test
or
xor
aaa
fcmovb
in
lahf
or
jns
jg
xlat
pop
fdivr
test
or
fcompl
mov
mov
sbb
lahf
bound
and
frstor
ljmpw
mov
popf
jne
mov
cmp
push
dec
testl
sub
aam
pop
mov
push
mov
adc
fmul
add
lahf
les
inc
aad
push
ds
orl
or
inc
leave
sbbb
push
imull
popa
lcall
sar
adc
jbe
and
fldcw
add
mov
jg
pop
mov
imul
fcoms
repz
mov
loope
dec
sub
push
popa
jmp
add
push
sbb
adc
icebp
adc
lahf
jb
dec
adc
mov
xor
std
fucom
push
mov
imul
daa
sbb
movl
and
iret
mov
cmp
xor
push
ljmp
or
stos
or
pop
push
cld
adc
inc
pop
jno
pop
mov
and
push
mov
cwtl
leave
push
or
adc
mov
cmpsl
gs
fwait
cmp
jns
pop
mov
add
sub
push
mov
add
cs
inc
pop
push
shrl
mov
pop
cli
enter
add
sti
movsl
out
inc
mov
sbb
or
xor
xor
lock
push
adcl
xchg
xor
mov
add
pop
and
push
mov
lret
addb
jbe
inc
ret
mov
sub
mov
pop
es
cmp
pop
dec
or
lods
mov
and
jo
aas
inc
mov
nop
push
cmp
push
aad
std
inc
ljmp
test
pop
ret
pop
pop
xchg
jb
adc
shrl
lods
mov
pop
mov
outsb
sbb
and
fmuls
mov
sbb
inc
lret
mov
inc
rsqrtps
scas
pop
fisubrl
push
aad
mov
cwtl
notl
dec
imul
ret
inc
in
and
add
fs
inc
push
or
lds
sbb
xor
fidivrl
sub
and
cmp
mov
dec
pop
mov
pusha
in
mov
sbb
or
xlat
mov
mov
pop
sbb
add
sbb
data16
mov
mov
rcl
mov
and
add
stc
xchg
movsb
cmp
inc
insl
sti
and
inc
xor
cli
push
jmp
std
movsl
jecxz
sbb
push
fwait
push
jge
push
push
arpl
iret
leave
cs
mov
sbbl
andl
sbb
dec
mov
and
xchg
sarb
xor
cmp
jecxz
jmp
and
add
mov
mov
int
out
jp
jo
push
inc
add
pop
mov
imul
lahf
xchg
mov
and
jge
xor
push
xor
inc
dec
and
fsubl
add
outsw
mov
jb
imul
pop
mov
inc
es
inc
sub
pop
pop
push
or
sub
inc
stc
sbb
dec
dec
mov
mov
jge
cmp
inc
lods
scas
dec
sahf
cmp
daa
dec
jne
adc
mov
gs
enter
lcall
xchg
adc
push
or
aad
add
and
cwtl
rorl
pushf
xor
and
cltd
xor
out
mov
push
cmp
outsb
popa
push
rcll
xor
xchg
and
daa
push
shl
xor
mov
les
aaa
or
sbb
int3
and
inc
or
mov
mov
mov
jle
xchg
test
jle
jne
sub
aam
repz
divps
sbb
xor
sbb
and
outsl
dec
jmp
cmp
sarb
cmp
push
mov
adc
add
xorb
iret
das
jbe
sub
pop
pop
add
cli
mov
aam
insl
outsl
orb
in
testb
fcmovnb
cmp
mov
cmp
aad
sbb
sub
lcall
mov
popa
push
xor
rclb
addl
inc
movsl
loope
mov
flds
pop
inc
jne
sbb
and
lret
shll
sub
push
andb
pop
out
stos
in
inc
add
scas
sti
stos
jbe
inc
fidivrs
mov
loope
or
mov
sahf
movsl
jl
loope
push
test
lahf
xchg
hlt
sbb
add
push
or
dec
outsb
lahf
cltd
push
int3
insl
jle
and
cwtl
xorb
popa
jecxz
and
jo
jno
push
jne
add
sub
add
movsb
loope
stos
adc
sub
and
inc
in
test
sti
mov
mov
mov
es
inc
or
and
push
mov
or
cltd
lret
mov
add
in
rorb
inc
jae
sub
mov
scas
movsb
data16
add
mov
inc
insb
stos
or
out
mov
or
push
je
mov
leave
adc
or
mov
ja
add
dec
add
scas
das
and
jnp,pn
adc
pop
add
xchg
cmp
cli
call
fnstenv
or
jne
push
pop
inc
fmuls
ja
mov
in
fimuls
or
add
sub
ficoml
or
pusha
add
mov
out
icebp
or
popf
mov
incb
or
jne
lret
outsb
cmp
rcl
inc
or
cmp
fidivl
jno
dec
add
add
pop
loopne
mov
bound
dec
pop
pop
lcall
jno
adc
stc
adc
mov
fs
loop
inc
push
xchg
inc
mov
sti
inc
lods
or
hlt
and
mov
pop
adc
add
daa
adc
pop
je
aaa
gs
pop
sbb
mov
sub
scas
mov
add
sti
mov
out
outsb
or
insb
std
mov
jmp
imul
jno
test
add
xor
lcall
lcall
gs
rclb
pushf
xchg
ror
nop
test
adc
lea
pop
mov
dec
push
cmpsl
ljmp
adc
addr16
fildll
sbb
dec
cmp
mov
and
and
lea
and
lea
lcall
ret
jae
ljmp
lcall
sbb
mull
jecxz
xchg
xchg
jg
xor
shlb
push
dec
or
inc
mov
fisttpl
arpl
or
jb
push
xchg
inc
sub
pop
jne
adc
and
add
mov
ss
fucomi
cmp
mov
mov
push
std
sahf
mov
sti
lods
and
adc
lcall
mov
mov
and
popf
xchg
xchg
shl
fs
adc
and
mov
or
test
pop
jle
cmp
dec
jno
outsl
jo
and
push
add
add
pusha
les
into
sbbl
pop
movsb
dec
dec
push
dec
xchg
in
dec
ss
shll
nop
das
mov
int
xchg
stc
xor
not
popf
xor
pop
cli
sub
cwtl
cmp
sub
outsb
mov
pusha
lea
js
lcall
add
lds
daa
sbbl
mov
psrad
enter
cmp
add
pop
xchg
mov
test
cmp
inc
ss
fistpll
and
adc
fcomps
push
or
push
insb
bound
pop
add
inc
mov
mov
test
add
cmp
xchg
lods
out
stc
add
pop
jecxz
scas
int3
xor
xchg
shl
mov
lock
clc
sarb
das
mov
stos
add
cltd
std
ljmp
xchg
stos
not
mov
xlat
out
ja
inc
adc
test
fstpt
sbb
inc
dec
rcrl
int
data16
sub
scas
in
loope
scas
jecxz
or
xlat
in
mov
add
sahf
test
imul
xor
adc
cmp
mov
lret
pop
cmc
into
xor
fwait
cmp
push
loop
stc
lret
gs
inc
aaa
sub
add
inc
xchg
mov
jnp
out
sub
or
and
js
dec
sub
push
jnp
or
lock
push
movsb
shll
hlt
pop
js
clc
sbbb
xchg
addl
stos
push
add
cmpsl
cmpsl
pop
fcomps
sbbb
jg
stos
mov
test
pusha
add
sub
test
xor
push
daa
push
cmp
cmp
inc
adc
icebp
std
ds
test
dec
je
stos
lret
clc
xlat
pop
fdivs
pop
dec
jae
push
ret
pop
mov
lret
test
push
test
movb
test
ficompl
mov
xor
xchg
sbb
rorl
add
jno
hlt
sub
loopne
push
sbb
sub
aaa
iret
insl
cmp
jp
dec
ljmp
bsr
jo
dec
inc
or
cmpsl
dec
fwait
xor
test
xchg
pop
add
movsl
and
adc
pop
aaa
xchg
adc
test
inc
pavgb
inc
dec
loope
popa
mov
xchg
jge
xchg
mov
les
mov
mov
loopne
nop
mov
dec
call
push
inc
icebp
or
push
dec
pushf
sub
add
jp
out
stc
push
sahf
daa
cmp
xor
mov
jo
jne
cwtl
add
ret
inc
cmp
and
sahf
lea
stos
xor
icebp
xor
ror
lock
fdivl
mov
scas
daa
pop
dec
add
out
mov
sbb
mov
popf
and
xchg
pusha
and
add
sti
pop
and
mov
pop
mov
int3
inc
jle
dec
dec
bound
xor
pop
and
test
sahf
fwait
and
test
ror
jo
lret
add
mov
loope
pop
jle
fs
mov
mov
clc
jp
pop
lcall
out
pop
mov
pop
and
jle
outsb
or
inc
jbe
jno
xor
jg
add
cmp
mov
adc
add
xor
popa
pop
xor
cmpsl
dec
cmpsb
sbb
aaa
xchg
push
mov
push
rorl
and
ret
push
adc
pop
dec
sub
je
push
and
data16
cli
data16
xchg
jl
or
ja
in
pop
xchg
cmpsb
fdivp
shrb
dec
jbe
cmp
sahf
add
pop
pop
xorb
cs
and
leave
clc
lahf
adc
pop
outsb
pop
mov
jo
pop
jno
cmp
and
xchg
movsl
rcrb
push
mov
or
cmp
insl
ds
sbb
jle
xor
add
out
sbb
push
or
and
push
sti
movsl
out
mov
shufps
mov
addl
mov
mov
shrl
jmp
stc
fiaddl
push
or
jnp
inc
mov
adc
jp
cmp
repz
inc
imul
je
imul
mov
popa
sbb
inc
dec
ds
dec
mov
xchg
loope
testl
subb
sbb
adc
popf
sbb
mov
and
dec
andb
pop
enter
or
call
out
jo
imul
cmp
jl
sahf
bound
pop
test
or
jle
inc
adc
add
loopne
fadds
pop
pop
pop
sbb
cmp
push
push
adc
ljmp
mov
movsl
pop
sub
pop
push
roll
mov
push
and
mov
test
call
mov
int
fucomi
fyl2xp1
jg
push
ret
jbe
push
cmp
aam
fsubrs
mov
xchg
push
mov
cld
lock
ljmp
push
js
push
xor
cli
icebp
mov
enter
in
in
jo
pushf
sbb
mov
andl
mov
js
push
xchg
mov
pop
fidivrl
scas
pop
pop
aaa
push
popf
arpl
rolb
adc
push
jl
cli
stos
pop
xor
xchg
imul
testl
mov
mov
push
loopne
mov
jge
notl
clc
or
mov
adc
sbb
aad
stos
jo
cmpsb
scas
lods
data16
sub
fdivrs
call
mov
sub
nop
inc
mov
mov
cmp
cwtl
inc
jp
addr16
sbb
pop
or
inc
clc
int3
incl
jnp
sub
test
cmpsl
ss
xchg
mov
sbb
push
fisttpl
pop
or
xor
adc
jo
cwtl
insl
or
mov
xchg
adc
aam
pop
pop
xor
jl
leave
mov
loope
add
pop
sbb
mov
push
rolb
mov
jge
xorb
ds
repnz
lds
aaa
inc
or
sbb
aad
loope
pushl
or
js
jle
mov
andl
stc
test
insl
jmp
jno
and
bound
insb
mov
mov
xchg
mov
xchg
and
sub
sbb
nop
idivb
gs
xor
dec
xor
or
pop
dec
faddl
shrl
loop
test
mov
movsb
loop
push
xchg
js
mov
je
in
and
or
sbb
rcll
jmp
fnstcw
insb
add
mov
enter
jne
jnp
mov
inc
xchg
mov
lret
data16
adc
sbb
scas
sub
jno
mov
ret
ret
cmpsl
insl
sub
stc
jge
add
mov
dec
addr16
andb
cmp
adc
testl
in
mov
xor
mov
rorl
jge
in
inc
rcll
xorl
add
pop
xor
orb
lods
mov
popf
or
pop
testb
or
jle
cmpsb
movsb
pop
mov
imul
lock
xor
xchg
popa
lcall
push
jge
pop
fisubrs
imull
sbb
jns
loope
mov
mov
adc
dec
shrl
dec
lcall
dec
inc
push
xchg
es
out
adc
mov
adc
inc
adc
mov
push
jg
div
gs
gs
out
mov
cmp
inc
jo,pt
aas
mov
push
xor
sub
cmp
into
jne
aam
ror
outsl
xlat
insl
pop
mov
dec
xchg
lods
arpl
pusha
jl
or
xchg
pop
not
xor
dec
jmp
std
push
stc
lds
daa
mov
movsb
orl
sbbl
xor
rcrb
sbb
mov
pop
sbb
std
popf
addb
sbb
adc
mov
jne
mov
inc
adc
outsb
jno
fdivs
pop
xchg
loope
mov
pop
inc
cmp
and
orb
mov
repz
call
mov
mov
dec
xor
fistpl
add
mov
pop
push
cmc
add
test
out
xor
or
ret
or
inc
jnp
js
add
das
sbb
pop
mov
adc
orl
movsl
push
push
lea
fwait
sub
mov
ret
sahf
fcomps
dec
add
ret
pop
push
rcl
cli
cli
mov
imulb
shr
mov
fmull
jbe
dec
arpl
xchg
mov
movsb
sbb
daa
in
jo
push
add
and
mov
mov
mov
pop
mov
or
js
cmp
pop
sbbb
jl
mov
dec
xchg
test
inc
fld1
push
scas
push
roll
popa
xor
jl
out
adc
or
pop
outsl
es
popf
xchg
scas
cs
and
repz
je
mov
call
adc
xlat
pusha
dec
inc
adc
ja
mov
mov
jno
jl
pop
pop
and
jno
pop
clc
jmp
adc
xlat
jae
sub
outsb
andl
mov
xchg
jecxz
addl
lahf
js
or
fadds
ret
outsl
pop
nop
xchg
fsts
int
cli
push
dec
dec
call
mov
pop
aaa
add
ret
ljmp
das
cmpsl
les
out
cmp
in
lea
les
outsb
inc
xor
mov
xchg
dec
mov
sub
cmp
cmpb
mov
mov
pop
scas
fildl
ficomps
test
xchg
insb
inc
test
mov
sti
adc
or
push
cmpsl
pop
pop
into
mov
adc
pop
push
dec
mov
mov
push
lods
push
xchg
pop
inc
xchg
in
xor
pop
cmp
mov
add
push
dec
sbb
loopne
bound
dec
test
sbb
or
fldl
call
aaa
sbb
mov
scas
fmull
xchg
imul
scas
dec
adc
out
jb
cmpsl
cmp
sysret
mov
add
cmp
or
push
ret
imul
mov
push
or
mov
dec
mov
or
js
push
shrb
rcrb
repz
pop
xlat
cmp
jge
mov
je,pn
lods
cmp
sbbl
add
fimuls
lods
lods
and
or
mov
and
push
push
inc
cmp
repnz
rcll
gs
mov
shl
lahf
jmp
out
in
dec
shlb
pop
js
mov
shr
fsubs
in
xchg
lods
push
js
popa
mov
shlb
jne
pop
fucomp
mov
addl
scas
insl
push
mov
xchg
jmp
int3
ja,pn
movsl
lods
pop
orl
push
or
imul
jb
dec
add
in
call
pop
cmc
ret
les
stc
dec
jb
sti
fmul
add
cmc
and
int
fidivs
int
iret
pop
push
je
aam
jbe
add
dec
subl
loop
mul
add
jle
int
and
dec
bound
and
lds
cmc
cs
nop
int3
add
push
and
aad
and
cmp
sub
les
pop
mov
pop
outsb
jp
ss
aas
add
out
jecxz
clc
fistps
dec
int3
scas
leave
cli
gs
xchg
gs
or
pop
jb
inc
outsl
arpl
mov
inc
pop
and
bound
outsb
in
out
xchg
sbb
insb
fmuls
push
add
ljmp
cmpl
mov
das
mov
mov
cmp
cmpsl
or
lock
shlb
jl
test
dec
imul
in
or
pop
xchg
std
lea
adc
inc
push
jne
add
mov
sbbl
mov
fwait
push
mov
jb
jnp
scas
int
pop
std
imul
les
aaa
jle
xchg
adc
cmc
mov
test
sub
dec
loope
inc
addl
int3
movsl
push
lret
sbb
xchg
out
pusha
adc
xor
add
mov
dec
mov
sbb
xor
push
mov
or
xchg
push
xchg
inc
out
mov
cmp
scas
mov
inc
xchg
fildl
xor
ss
ljmp
xor
jge
jne
and
stos
or
cmp
sahf
xchg
fs
and
sbb
jmp
call
or
mov
dec
add
rclb
xchg
jmp
sub
stc
aad
int3
push
mov
inc
subb
push
gs
movsl
mov
sbb
sub
inc
insl
and
mov
and
and
rclb
aaa
mov
push
adc
xlat
add
adc
mov
fs
pop
cmp
push
inc
cmp
inc
and
and
shrb
insl
pop
mov
sbb
ja
stc
cmp
aas
pop
cmpsl
shlb
lret
xchg
ljmp
push
or
dec
pop
imul
rcl
stos
dec
xor
lcall
fists
sbb
pop
leave
or
jmp
into
adcb
inc
mov
cmp
mov
mov
rorb
notb
scas
jne
cld
in
add
or
loopne
pushf
arpl
jmp
mov
insl
ret
xor
jno
cmpsb
mov
imul
push
jnp
xor
dec
xor
inc
and
jno
movsl
ljmp
or
or
pop
sti
and
dec
imull
test
and
bound
ljmp
mov
ljmp
sub
mov
jnp
push
lock
pushf
in
and
idivl
jle
inc
fidivl
aam
fnstcw
clc
jne
lds
inc
push
and
lock
fldenv
sub
pusha
sub
mov
imul
lret
ret
aaa
int3
push
and
repnz
push
jne
lods
cmp
pop
pop
inc
xchg
jmp
xor
mov
cmpl
rolb
jae
fisttps
stc
mov
jl
push
data16
sbb
mov
sbb
jne
and
cli
ljmp
lock
mov
shlb
jbe
mov
jbe
jne
test
cmp
adc
dec
add
adc
push
aad
in
mov
arpl
loopne
cs
mov
fcoml
jbe
js
and
aam
adc
xlat
xchg
pop
xchg
lret
mov
or
jbe
and
ret
and
daa
adc
xor
into
or
ret
mov
mov
dec
xchg
aad
push
dec
mov
aad
fildl
push
lret
insb
mov
shrl
sub
jge
xor
mov
lea
push
hlt
lods
jnp
loop
daa
jns
mov
pop
pop
std
xchg
sbb
sub
call
imul
hlt
mov
into
adc
jg
call
je
movsb
mov
sub
sub
sahf
inc
gs
lahf
clc
push
add
test
sbb
jg
jl
or
jmp
outsl
xor
daa
shl
sarl
lock
inc
fnstcw
inc
lds
ss
decl
cltd
decb
cmp
add
cmp
or
add
into
and
and
fxch
idivl
adc
fildl
aam
or
push
jp
icebp
xchg
lahf
cmp
fadds
mov
cltd
lcall
sbb
shrb
xchg
orl
sub
jae
lods
inc
rclb
inc
inc
pop
dec
pop
ljmp
mov
sbb
sub
testl
cmp
push
cmpsl
clc
repz
or
mov
mov
call
insl
adc
cmp
xlat
jns
dec
sbb
mov
and
xchg
mov
sub
pushl
dec
and
mov
call
aam
clc
subl
jbe
imul
test
jp
aaa
test
lcall
push
jle
scas
and
add
inc
xchg
xor
and
stos
ljmp
enter
shll
addr16
dec
jmp
sub
repnz
fidivrl
xchg
in
sub
stos
push
cwtl
out
mov
iret
cmpsb
mov
mov
loop
push
into
dec
sbb
arpl
outsl
mov
imul
repz
icebp
orb
and
mov
sbbl
xchg
fcmovnu
adc
hlt
push
int3
xchg
shll
mov
mov
pop
idiv
cltd
loope
adc
sbb
iret
fucomip
jp
mov
imul
push
dec
stos
xchg
and
daa
fs
jns
cs
mov
addb
inc
pop
pop
fisubl
mov
dec
cmp
xchg
add
pop
jp
sahf
fcoml
sub
push
sbb
outsl
cmpsl
fcomps
cmpsb
mov
stc
leave
pop
cmp
out
mov
lret
cmp
cmpsb
fildl
sub
inc
sbb
ljmp
int3
ja
cmp
jge
pop
rolb
mov
cwtl
mov
mov
pop
int
sub
or
or
jb
push
adc
call
stos
or
mov
mov
or
xchg
cmp
sub
adc
scas
movsl
jo
test
mov
ljmp
aaa
sahf
xlat
cs
daa
repnz
push
add
scas
pushf
outsb
ret
xchg
mov
out
inc
icebp
cmp
xor
jnp
jno
cwtl
dec
adc
jne
fldt
lock
cmp
pop
aas
movsb
mov
ret
scas
mov
adc
ljmp
ds
js
inc
mov
mov
push
jg
sbb
or
mov
cmpsb
xor
inc
push
ficompl
ds
mov
scas
jno
push
inc
cmc
inc
jg
leave
std
pusha
rcrb
fwait
bound
sub
rcll
push
pop
sub
fdivl
fidivrl
xchg
xchg
and
mov
push
out
shr
loopne
ret
iret
scas
pop
add
mov
lahf
pop
dec
nop
mov
xchg
ljmp
imul
adc
popa
or
add
test
adc
jg
jo
add
cmp
jl
inc
rorl
shll
add
sbb
cmp
hlt
add
cwtl
and
cmc
jnp
dec
hlt
movsl
xor
adc
fidivs
adcl
aas
xor
and
cmp
add
sahf
std
ds
insl
lea
sbb
mov
pop
shll
adc
and
shrb
fidivs
psubq
int
xor
xchg
ja
imulb
sbb
adc
out
xorl
fcmovnb
pop
mov
aad
rclb
sbb
pop
mov
pop
jne
lret
push
pop
mov
mov
rcr
push
mov
fsub
test
jg
pushf
int
mov
push
sub
cmp
clc
jge
adc
xor
fcmovnbe
jp
sbb
fst
and
test
jne
clc
bound
xor
add
mov
arpl
inc
jne
ret
xor
or
nop
popa
jmp
fmuls
pop
bound
dec
aaa
push
adc
sub
out
xlat
lcall
cmpsl
loop
roll
insb
popa
mov
push
jae
dec
psllw
int3
out
cmc
decb
push
js
stos
jo
and
decl
rcll
inc
test
sbb
stos
cmpsl
ret
std
and
mov
mov
mov
pop
dec
inc
ret
adc
fdivr
pop
sti
xchg
jo
jno
mov
adc
pushf
push
fidivs
pop
ret
mov
jns
adc
iret
xchg
ficompl
jbe
seta
mov
dec
clc
lds
notl
sbb
sbb
js
je
dec
pop
addr16
rol
test
scas
aam
aaa
daa
lock
out
lcall
push
jbe
xorl
sbb
aad
imul
cmpsl
enter
mov
and
aaa
jno
pop
mov
pop
imul
lret
inc
and
xchg
sbb
test
gs
add
or
mov
test
subb
pop
xor
jl
lock
push
jl
jp
jl
or
repz
jecxz
inc
cmp
ja
or
popf
jne
loopne
popa
movsb
add
adc
xchg
hlt
inc
aam
pusha
int
movsl
xchg
inc
mov
and
xlat
pop
clc
je
repnz
add
fimuls
jl
mov
data16
in
cs
arpl
cmp
cli
adc
jp
xchg
mov
clc
pop
aas
rcll
hlt
iret
clc
xchg
dec
adc
add
dec
adc
loop
xchg
mov
in
jecxz
pop
push
mov
xchg
inc
push
mov
pop
jecxz
add
xchg
xchg
dec
dec
pop
mov
inc
xchg
in
xlat
adc
or
imul
lock
in
xchg
outsl
push
or
cmp
mov
ret
imul
mov
in
jo
rclb
clc
add
loope
fisttpll
arpl
or
sbb
or
scas
xchg
xchg
sahf
clc
inc
fidivl
mov
inc
xor
imul
jne
and
sbb
outsl
fwait
jb
mov
pop
fcomi
fistpll
sbb
insb
pushf
xor
push
xchg
dec
daa
mov
cmp
leave
sub
cwtl
or
cmpsb
mov
mov
xor
cmp
ffree
jbe
cmp
and
aas
jo
fwait
mov
xor
jecxz
jmp
jne
orl
add
loopne
mov
addl
das
enter
jo
add
pop
les
es
subl
lock
das
push
arpl
cmp
scas
les
xchg
test
imul
repz
shll
push
cmc
std
xor
punpcklwd
shlb
jo
stos
adc
jb
rolb
cmp
imul
imul
icebp
jmp
cmpsl
sbb
lock
push
pop
sbb
jo
mov
mov
or
lds
mov
fildll
out
push
xor
insl
sub
nop
out
fimuls
int
pop
add
shrl
inc
shll
or
repnz
out
add
mov
jbe
jl
pop
pop
push
test
rcl
and
mov
sbb
je
test
mov
jae
mov
jnp
outsl
js
scas
inc
hlt
adc
add
cmpsl
and
fsts
ret
dec
ret
lret
cmpsl
mov
repnz
movsl
rol
sub
push
xadd
cmpsb
icebp
mov
shrl
jns
push
mov
sub
hlt
data16
popf
dec
add
xchg
das
int3
into
xchg
or
sub
mov
cmp
push
fldl
shll
mov
loopne
fsubrs
inc
xchg
sbb
je
cmp
xchg
lea
call
jmp
push
inc
ret
xchg
shll
scas
sbb
or
lret
mov
orl
lcall
shlb
or
lods
into
mov
sbb
sub
rcll
mov
cld
insl
mov
inc
pop
loope
lock
add
push
xchg
adc
ss
mov
in
icebp
push
push
fistpl
fmuls
mov
fdivl
mov
lods
pusha
andl
fs
jne
jno
test
fstps
mov
lret
dec
fucomi
ss
arpl
in
dec
sarl
sbb
mov
cmovae
add
jo
lods
xchg
ss
insb
in
mov
mov
dec
mov
clc
loope
or
xor
xor
mov
es
xlat
rep
mov
std
dec
inc
jecxz
adc
stos
sbb
or
mov
sbb
popa
jo
bound
xorb
mov
sbb
bound
cmp
es
andnps
jb
fsubp
lods
out
orl
ss
in
rcl
pop
mov
movsb
test
test
add
jmp
xchg
cmpsb
cmc
xlat
rcrb
repz
arpl
push
or
in
scas
dec
dec
xchg
cmp
pop
cld
cmp
dec
pop
fwait
test
and
adc
les
ds
pop
in
int3
inc
jae
lret
push
mov
xorb
dec
dec
std
ret
es
pop
dec
adc
mov
not
mov
mov
sbb
pop
mov
mov
xor
lds
mov
rcrl
pop
jo
cld
add
rorl
js
jne
cmp
mov
movsb
lcall
or
jmp
lcall
sbb
hlt
loope
fwait
outsb
mov
loope
mov
sbbl
inc
sbb
push
gs
or
xlat
int
mov
ffree
cmp
mov
mov
das
and
loope
ljmp
or
scas
sti
or
inc
sbb
adc
das
fstps
subl
xor
cmp
aaa
leave
lods
xor
mov
imul
xor
add
loope
adcb
jno
addr16
hlt
mov
xchg
xchg
push
or
das
xlat
sbb
sub
cmp
maxps
sbb
add
jo
aas
xor
cmp
xchg
adc
mov
sub
add
lock
int3
mov
das
shll
ss
and
mov
test
clc
loop
rcll
mov
lock
adc
adc
xor
sbb
adcb
sti
jno
cwtl
fwait
mov
add
mov
repnz
xor
sub
cld
adc
ljmp
xchg
ret
push
icebp
mov
mov
notb
fmul
adcl
scas
xor
mov
add
pop
push
popa
inc
rcr
push
mov
fdecstp
rol
xchg
loope
inc
add
mov
push
mov
outsl
push
ds
pop
xchg
inc
in
or
sbb
or
push
out
cmp
sub
insl
cwtl
mov
popf
cs
es
inc
es
xchg
insl
dec
out
hlt
fwait
mov
gs
inc
push
cs
mov
inc
punpckhwd
or
sbb
fwait
jo
or
push
stos
mov
icebp
mov
insl
jmp
js
test
mov
pop
add
divl
cltd
mov
mov
or
and
xchg
adc
dec
fdivl
sarl
push
rcll
cwtl
or
cmp
jge
mov
scas
loope
mov
mov
lods
out
aam
push
mov
das
and
or
adcb
push
xchg
mov
fidivl
mov
in
jnp
dec
xchg
pop
pop
jnp
inc
adc
xchg
hlt
insb
loop
inc
lret
fistl
mov
data16
cmp
or
imul
mov
les
cmp
mov
loopne
ret
ret
xor
pop
mov
int3
test
cmp
cmp
test
or
mov
pop
daa
fsubl
sti
mov
sub
setae
adcb
pop
sub
mov
dec
ljmp
jae
inc
push
addb
mov
je
fadds
xor
xchg
pop
xor
test
cmp
nop
stos
scas
and
stos
push
push
adc
xor
xlat
mov
add
inc
add
xchg
cmovl
nop
pusha
adc
fwait
insl
loopw
jle
dec
jge
xchg
enter
addl
xchg
or
jnp
or
test
filds
jp
f2xm1
rcrb
push
inc
dec
push
mov
fmuls
sbb
test
fmul
aaa
ljmp
scas
or
mov
lahf
mov
js
cmp
sbb
cwtl
xor
jl
and
data16
xor
nop
mov
lea
xchg
pop
adc
ljmp
pusha
push
push
add
push
mov
adc
sbb
xor
test
inc
adc
es
jbe
fcmovnbe
jbe
mov
pop
xor
jno
inc
ja
cmp
and
mov
pop
cmpsl
orb
cmc
imulb
add
push
lea
xchg
popf
scas
xchg
mov
add
pop
sahf
mov
mov
inc
in
inc
adc
inc
push
sti
push
pop
iret
cmp
ret
jns
lods
movsb
sbb
xor
fsts
ficoml
push
nop
pop
shll
inc
out
roll
lock
ret
or
gs
leave
fs
imul
pop
xor
xchg
xor
push
fstps
pop
gs
sub
js
xor
add
cli
fadds
out
mov
stc
mov
inc
and
cmc
shll
dec
aad
xchg
xor
fwait
rcll
mov
adc
cmpsl
jo
jmp
ficomps
test
cmpsl
test
popf
adc
xor
and
stos
addl
adc
sbb
cmpsl
addr16
cmpsb
add
aas
inc
dec
ret
sbbb
push
fcoml
jb
lea
and
xor
add
adc
iret
push
icebp
cld
shl
test
ds
lock
lock
dec
push
sub
in
push
outsl
inc
pop
and
mov
mov
out
sahf
sahf
mov
cmova
push
pushf
or
ja
fimull
pop
rorl
inc
add
xor
je
into
dec
push
xchg
sub
dec
outsl
sbb
mov
ret
sbb
push
data16
push
adc
clc
cs
lcall
daa
xor
pop
pop
insb
ficomps
cli
xor
stos
jno
jl
adcl
mov
push
xorl
inc
xor
inc
pop
pop
je
lahf
cmpsb
inc
divb
xor
mov
cwtl
leave
sbb
addl
out
inc
imul
enter
ret
mov
or
icebp
adc
ret
jbe
mov
mov
dec
sbb
or
loopne
loopne
sbb
mov
xor
mov
aad
cmp
mov
daa
mov
dec
nop
lods
imul
dec
lret
xlat
push
mov
call
inc
jo
adc
add
icebp
cmp
jecxz
sbbl
fisubs
fistps
xchg
or
xor
sti
push
subl
into
and
arpl
shr
mov
pop
outsb
mov
jo
ret
outsb
adc
pop
inc
in
insb
push
lds
fnstenv
push
lcall
hlt
jmp
dec
test
in
fadds
xchg
cwtl
int3
sub
jnp
fadds
inc
insl
or
xor
or
push
xor
js
adc
stos
cmpsl
mov
jbe
jmp
arpl
addl
jl
loopne
fcmovbe
pop
ret
push
mov
xor
orb
jb
and
and
outsl
pop
mov
add
sub
xchg
out
pop
jo
bound
xchg
test
punpckhbw
nop
jp
push
cld
sub
mov
xor
stc
lea
test
inc
cltd
mov
adc
into
out
mov
and
fnstsw
faddl
xor
xchg
roll
jmp
push
jle
stos
add
sub
jl
xor
icebp
xor
mov
sbb
js
or
in
lods
xchg
int
cmpsl
test
mov
loope
sbb
ret
sub
mov
jmpw
shlb
inc
dec
js
test
in
dec
cli
nop
push
jae
xchg
xchg
addr16
shrl
mov
sub
and
lods
fbld
fs
mov
or
gs
cmp
aaa
pop
jae
hlt
inc
rol
cmp
mov
pop
inc
push
int
xorl
andb
adc
stc
mov
adc
jmp
into
nop
jg
ret
shlb
inc
movl
popa
shll
nop
or
arpl
fldenv
or
inc
xorl
jle
adc
shll
repnz
dec
lock
aaa
dec
mov
sub
lret
add
inc
fsubs
cmp
je
add
pusha
mov
repz
jnp
iret
inc
mov
fdivs
push
ds
dec
cmp
and
inc
mov
in
pop
cmp
sub
cmpsl
add
mov
add
mov
adc
nop
data16
sbb
mov
push
adc
adc
ret
or
das
inc
push
cmp
xor
dec
add
fisubrl
icebp
and
dec
mov
rolb
and
iret
push
movsb
lret
xchg
enter
call
xchg
sub
hlt
xor
loope
cmp
xor
test
test
pop
jb
mov
lods
fidivs
testl
jl
jle
dec
xor
inc
mov
pusha
cmp
push
out
fnstsw
movsb
aas
mov
or
and
or
outsb
cmpsl
insl
movsb
mov
xchg
cli
cltd
clc
push
repz
pop
cmpsl
dec
aam
pop
and
add
sar
jge
add
das
mov
les
sub
dec
ss
sbb
or
jne
jmp
imul
xchg
add
imul
mov
inc
hlt
lock
bound
fwait
jge
push
mov
imul
jnp
subb
cmp
pushf
pop
shr
xchg
inc
add
mov
sub
movsl
ja
sub
call
rcrb
sub
lea
cmc
pop
addr16
inc
jg
daa
testl
je
leave
test
or
data16
shlb
mov
insl
out
hlt
outsl
data16
push
inc
out
bound
xchg
push
mov
sub
xor
mov
icebp
lock
dec
sub
cmp
ljmp
add
in
arpl
xchg
jno
sub
adc
and
or
xchg
xor
xchg
in
mov
mov
xor
jp
jg
mov
push
push
in
add
test
push
stos
mulb
cmpb
sub
movsb
les
repz
and
outsl
sbbl
jp
std
pushl
cmp
inc
pop
mov
pop
adc
jne
dec
jb
mov
pop
inc
xor
cmpsb
pop
pushl
push
sbb
sbb
aaa
mov
or
daa
cld
outsl
sbb
roll
adc
pop
inc
jne
pop
mov
cmc
and
aaa
xchg
jp
fsts
sbb
adc
and
mov
or
fstpl
psrld
ds
inc
mov
fs
adc
cmp
int3
and
sub
in
or
mov
rsm
xor
shl
das
cmp
adc
dec
ds
dec
mov
inc
lea
dec
cwtl
in
pop
outsl
pop
scas
jns
nop
add
push
stos
lods
rorb
into
repz
mov
mov
out
jnp
sub
adc
stos
xchg
xchg
add
and
mov
ret
and
pusha
xchg
xchg
push
push
adc
hlt
out
adc
fdivs
dec
gs
sub
pop
popf
scas
das
pop
mov
dec
lcall
shlb
push
inc
jnp
mov
dec
push
je
outsb
push
sbb
xchg
xchg
push
lock
inc
arpl
enter
xchg
xchg
xchg
shl
xchg
inc
or
mov
popf
push
and
add
paddw
lea
cmpsl
dec
dec
cmp
pop
in
sbb
cwtl
fcmovnbe
xchg
add
sbb
outsb
push
mov
and
mov
fwait
in
mov
sbb
in
inc
xor
adc
adc
pop
inc
repz
adc
inc
dec
xor
sbb
pop
mov
pop
pop
mov
jge
fnstsw
adc
mov
mov
jbe
shr
sub
mov
mov
sub
fcomi
or
pop
or
scas
and
or
xlat
movsb
push
adc
jnp
call
xor
xor
xor
xchg
rcrb
adc
push
rcl
and
arpl
push
aam
adcl
lock
cmpsb
repz
rorl
and
lock
lods
add
test
pop
push
rolb
cli
xor
out
mov
sub
mov
in
ljmp
push
imul
jge
icebp
add
pushf
add
imul
cs
inc
jmp
aaa
pop
sbb
pop
lcall
outsl
push
dec
push
cmc
hlt
sahf
xor
jnp
mov
fdivs
outsl
ds
mov
movsl
add
jne
push
xor
pop
and
dec
mov
int
in
cs
xchg
push
add
push
xchg
adc
testl
nop
or
insl
and
aad
call
jl
or
ret
sbb
pop
mov
mov
adc
arpl
sbb
and
das
cs
fs
out
push
subl
push
insb
scas
out
fsubrl
mov
inc
in
and
mov
or
mov
cmpsl
out
cmpsb
popa
and
hlt
shlb
inc
sub
lret
scas
push
imul
sub
out
jecxz
stos
cltd
mov
or
ljmp
or
pop
sbb
int3
call
jmp
sub
push
mov
fbstp
ror
cli
push
and
mov
imul
xchg
clc
jo
sub
sub
mov
cmp
imul
push
arpl
ja
mov
mov
push
sub
jne
shll
stos
jecxz
xchg
mov
cwtl
shr
enter
push
cmp
mov
xchg
outsl
insl
sub
js
icebp
in
mov
mov
and
add
aad
js
test
xchg
push
test
sbb
xor
add
js
mov
cmp
jle
jne
xchg
pop
or
stos
xchg
arpl
addb
or
andl
inc
stc
push
daa
add
cwtl
ror
adc
sbb
add
jo
add
fs
and
in
in
fnsave
adc
aas
dec
mov
add
in
shlb
pop
mov
cs
test
add
pop
dec
enter
bound
inc
pop
pushf
lahf
xchg
insl
dec
add
xchg
pusha
xchg
jle
ss
push
mov
inc
loop
mov
dec
mov
or
sub
jp
into
lock
adc
fsubs
ret
jg
pop
xor
outsl
arpl
jp
cmpsb
or
lea
adc
pushf
mov
jecxz
dec
pusha
xor
pop
cwtl
mov
ljmp
mov
lods
pop
mov
mov
pop
xchg
dec
jmp
adc
push
insl
push
add
loope
test
andb
jl
pop
mov
mov
jne
push
push
push
cmc
jbe
pop
xor
mov
and
dec
and
rol
jbe
es
test
insb
icebp
xchg
shlb
sub
lahf
cmpxchg
adc
add
cmpsb
daa
xchg
jno,pt
and
pop
inc
lcall
and
pop
or
pushw
mov
mov
insl
into
inc
cld
jp
jecxz
jne
xchg
imul
testl
ret
pop
outsl
mov
cmp
test
push
push
test
inc
sub
popf
fstl
in
gs
cmpl
dec
push
xor
addb
shlb
push
xchg
xor
cli
push
mov
lea
sar
xchg
push
and
pop
add
mov
mov
lods
add
or
stos
outsl
pop
push
jnp
jge
or
movb
xor
mov
pop
xor
mov
sbb
nop
mov
push
fdivs
xor
lret
shlb
dec
jp
and
cmpsb
sub
adc
pusha
iret
lds
jp
add
hlt
fdivs
or
sbb
push
arpl
popa
inc
dec
sarl
dec
sbb
loopne
lods
aas
stos
jmp
rclb
data16
pop
mulb
lcall
ror
and
pop
and
addr16
cld
into
lea
ss
jnp
and
insb
push
scas
and
cwtl
or
mov
xchg
jnp
sbb
and
cmp
mov
and
dec
push
pop
push
add
je,pn
clc
enter
pop
loop
inc
cmp
mov
out
sub
jb
adc
aad
push
cmp
or
dec
sub
lahf
test
xorb
pop
mov
dec
daa
aam
xor
mov
inc
test
in
das
js
or
mov
add
xchg
sbb
and
mov
mulb
and
and
jecxz
xor
cs
pop
cli
adc
cwtl
shl
pop
pop
inc
jle
fstpt
pop
ds
dec
daa
minps
fsts
mov
icebp
mov
imul
and
gs
mov
js
lds
dec
pop
jnp
fimull
mov
jno
sub
or
or
call
and
mov
add
leave
or
jmp
and
dec
inc
sarl
pop
pop
inc
fstpt
xorb
shll
mov
stc
jb
xchg
pop
mov
daa
sub
repz
jp
aaa
jbe
aam
test
or
ds
pop
shrb
icebp
jb
cmp
cwtl
je
cmpsb
jecxz
jb
mov
inc
xchg
pushf
enter
andl
fwait
dec
or
mov
pop
ret
fnstenv
aad
adc
and
add
mov
sti
ret
movl
ret
xchg
mov
mov
and
and
shlb
mov
cwtl
popa
mov
adc
push
lret
pop
outsb
cmp
nop
arpl
and
cmp
adc
sbb
leave
sub
add
dec
orl
or
stc
push
pop
lea
fildl
fisubrl
pushf
cmp
insb
insb
mov
rcl
mov
xchg
addr16
in
sbb
push
adc
pop
mov
sbbl
pushl
cmpsb
and
and
int
pop
mov
xchg
mov
add
test
mov
mov
cmpl
jg
mov
xor
imul
xor
mov
aad
test
mov
lods
pop
pop
rorb
jp
xchg
divl
lods
xchg
sub
mov
fnstcw
shl
add
mov
pop
dec
dec
mov
cmpsb
fildl
sbbb
adc
and
dec
jns
test
xchg
cltd
in
repnz
and
push
cmp
mov
mov
addb
mov
test
arpl
pushw
push
fnstcw
clc
aaa
aas
push
aad
loop
sar
adc
push
mov
lcall
add
or
mov
adc
pop
pop
in
les
push
xor
mov
lods
outsl
es
mov
mov
test
cmp
xor
adc
scas
lret
xor
cwtl
mov
add
pop
jnp
inc
cltd
aas
popf
sub
add
sbb
and
mov
pop
mov
mov
int3
hlt
jbe
arpl
jecxz
xor
adc
gs
and
jnp
sbb
test
pusha
pop
cmc
daa
push
jae
jg
pop
push
scas
out
rorb
fsubrs
ss
add
mov
mov
enter
mov
lock
push
lcall
or
popa
sbb
ss
rolb
jne
push
sbb
inc
loope
add
and
dec
dec
in
sahf
in
jbe
pop
mov
xchg
xorb
jg
mov
dec
inc
jge
popf
pusha
mov
stos
xor
mov
sbb
xchg
pop
add
add
rcll
jl
ss
icebp
mov
insb
ficomps
inc
int
push
or
test
jl,pn
and
int3
cli
and
jg
jo
inc
xor
dec
mov
or
xchg
sub
aaa
cld
dec
adc
rcl
adcl
js
scas
repnz
insb
xor
jo
push
add
lret
sub
jmp
out
test
sub
out
cmp
aas
mov
cmp
xchg
xor
stos
mov
and
pop
and
adc
xlat
and
jle
das
rclb
aam
mov
jb
lea
mov
gs
clc
daa
jmp
scas
in
cmp
or
lds
aas
hlt
xor
arpl
sbb
xchg
dec
fwait
insl
mov
adc
nop
cs
aas
lret
lock
pop
ret
into
xor
ss
fsts
adc
mov
mov
jg
push
and
push
mov
mov
sbb
js
add
inc
mov
leave
sbb
and
je
cmp
sub
inc
insb
mov
dec
pop
test
leave
out
xorb
bound
imul
mov
repz
cmp
fwait
cli
mov
add
or
sbb
jo
inc
push
mov
lahf
jmp
jmp
shlb
or
std
xchg
jle
inc
inc
ja
outsb
adc
sbb
shrl
mov
mov
sub
pop
sub
adc
inc
pop
add
aaa
ss
std
cwtl
gs
sub
adc
dec
std
dec
addb
iret
jbe
jge
popa
sub
rolb
scas
shrb
into
test
add
js
ds
adc
sub
pusha
adc
and
in
movsb
add
fldl
nop
sbbb
fimull
dec
fdivrl
and
adc
mov
aas
aas
lcall
enter
mov
dec
push
mov
mov
in
out
int
pushw
mov
scas
mov
pop
jns
idiv
shll
dec
add
lds
ret
das
jbe
inc
xor
rcrl
adc
add
mov
mov
fmuls
pop
pop
mov
sbb
cmpsl
jle
fwait
mov
insb
cmp
outsb
push
mov
movsb
out
dec
adcl
xchg
scas
lds
dec
cmp
push
xor
scas
bound
addr16
or
insb
mov
and
dec
das
jne
adc
jns
sbb
xchg
jge
les
mov
mov
cmp
sahf
dec
mov
jl
sub
fcmovnb
pop
mov
jb
adcb
xor
sub
loope
cli
pushf
lcall
push
mov
rorl
aas
or
iret
and
xchg
and
push
jge
add
incl
cli
mov
and
or
cli
jb
lock
test
pop
fs
movsl
pop
loop
outsb
mov
dec
or
and
es
imul
clc
or
in
dec
sbbb
in
fidivrs
shrb
movsb
insb
sbb
hlt
add
test
bound
popf
test
divps
fisttps
insb
push
mov
adc
outsb
sahf
sbb
rcl
mov
and
subb
push
xor
movsl
mov
mov
inc
pop
test
mov
pop
lea
and
das
cmc
fsub
popf
lret
in
jne
xchg
sbb
inc
rcrl
lods
insl
xchg
jb
loop
cmc
and
outsl
pushf
cmp
movsb
mov
adc
push
dec
ljmp
mov
je
loopne
mov
sbb
dec
mov
mov
xchg
ja
cmp
les
in
push
je
and
mov
pop
aam
fucomi
cmpsb
and
cmpsb
ja
shlb
mov
sub
pop
dec
mov
outsl
data16
inc
dec
testl
test
push
mov
pop
mov
fildll
leave
dec
and
dec
and
sub
in
dec
lea
lea
push
flds
lock
add
gs
ds
xor
xor
leavew
das
pusha
cmp
cmpsb
dec
mov
daa
sub
out
cmpb
jp
clc
xchg
xchg
test
ss
pop
xchg
lock
popa
lea
mov
insb
inc
mov
add
rclb
clc
cli
jp
cmp
sbb
push
loop
push
add
sbb
arpl
lcall
je
and
sub
or
adc
inc
scas
loopne
fldl
sub
daa
hlt
mov
out
in
jne
or
test
jb
xchg
mov
push
adc
clc
les
pop
pop
push
pusha
cmc
mov
out
mov
or
xchg
rcll
sub
mov
hlt
sub
shll
lcall
mov
xor
loop
and
dec
sti
inc
sbb
les
lods
cli
jle
xor
incb
pushf
xor
jo
push
inc
fnstcw
jnp
rorb
test
scas
cmp
sbb
cld
xor
add
cli
dec
fs
lahf
xchg
cmp
inc
inc
inc
js
sbb
mov
fsub
pop
dec
out
dec
cmp
or
lds
aad
push
xchg
insb
aam
test
push
cli
adc
mov
sub
cltd
imul
data16
bound
xchg
pop
push
icebp
idivl
jge
cmp
push
pop
cmp
loop
cmp
add
ds
ds
stos
xchg
sbb
mov
xor
mov
pop
xchg
fldt
sti
test
movsl
jne
xor
or
divb
sbb
cmp
inc
cwtl
adc
lods
push
aam
movsl
shlb
icebp
aad
in
insb
sbb
mov
call
into
and
push
xor
test
and
andb
inc
mov
cmpsl
or
adc
arpl
pop
roll
call
stos
or
sub
xchg
stc
push
push
jo
fistpl
out
jae
stc
inc
mov
es
addr16
rcll
add
adc
or
popl
mov
push
adc
test
insb
ret
mov
imul
int
xor
popf
and
addb
jae
inc
aad
lea
pusha
cmp
xchg
addl
hlt
hlt
xchg
add
push
add
jmp
jnp
sbb
jb
icebp
decl
mov
addb
addr16
lds
test
add
lcall
out
push
imul
mov
jmp
mov
in
add
mov
hlt
xchg
inc
les
out
pop
in
and
push
gs
hlt
sub
xchg
ficoms
popf
mov
icebp
aam
mov
rclb
lea
pop
mov
repnz
or
inc
lea
adc
in
add
mov
dec
jecxz
jge
loopne
pushf
loopne
xchg
dec
or
jnp
cmp
inc
cmp
out
and
adc
mov
in
and
ljmp
movsb
inc
inc
push
cmp
mov
jmp
push
jg
ret
push
and
sub
xor
iret
hlt
mov
daa
jns
sub
inc
mov
int
scas
adc
adc
mov
lahf
sub
mov
in
add
cmp
ljmp
hlt
jle
lret
sub
ficomps
push
xchg
inc
cmp
test
sbb
dec
shrl
and
pop
loopne
mov
ja
pop
xor
xor
jg
sbb
popa
fidivrs
repnz
loopne
adc
or
pop
insb
or
roll
mov
or
lds
jne
push
js
mov
inc
popa
out
icebp
fcoms
mov
push
cmpsb
mov
add
pop
out
jge
xchg
movsb
cmp
sub
call
sbb
call
dec
push
jecxz
out
inc
insb
mov
arpl
scas
mov
and
xchg
push
xchg
jbe
or
ja
les
popw
lods
push
xlat
mov
mov
je
push
neg
jge
aaa
ror
sbb
sbb
arpl
leave
les
xor
mov
cltd
ds
push
add
mov
xchg
mov
add
inc
dec
je
ds
es
dec
fldcw
in
add
xchg
xchg
push
push
sub
mov
mov
cmpsb
pop
jo
jns
xchg
cltd
maxps
lret
jae
mov
bound
rclb
pop
pop
call
addb
loop
mov
and
inc
push
sub
dec
add
sahf
arpl
push
xchg
or
push
mov
sub
cmpsb
push
push
sub
mov
mov
sbb
icebp
jg
jl
out
mov
sbb
add
mov
fbstp
and
fs
outsl
xor
repz
sti
sbb
test
add
inc
je
rcrb
cs
xchg
xor
xor
cmc
mov
es
add
subl
nop
inc
mov
and
cmpsb
xchg
jle
call
xchg
fucomp
xchg
aam
ds
or
add
cmp
adc
bound
popf
jp
shl
lods
flds
stos
push
xchg
adc
dec
mov
and
dec
iret
sar
les
jp
mov
sbb
mov
pop
lret
inc
jl
mov
xchg
leavew
adc
mov
aas
inc
xchg
lret
movsl
out
xor
dec
adc
pop
mov
push
test
cs
fidivl
and
mov
and
adc
cmp
arpl
adc
pop
mov
or
mul
lret
inc
cmp
rorl
jo
imul
daa
stos
adc
js
daa
sbb
inc
je
in
mov
roll
cltd
jp
xor
stc
lahf
into
cmp
pop
cmpsl
cmp
out
pop
xchg
imul
es
pop
outsb
sbb
repnz
lcall
add
add
sbb
sub
jle
lods
xchg
andb
inc
aaa
xchg
popf
pop
cmc
and
sub
adc
adc
js
xchg
cmpsb
cs
clc
add
xchg
es
dec
int
and
js
outsb
fdivl
inc
inc
mov
icebp
inc
add
mov
dec
mov
dec
mov
stos
push
sub
jp
mov
sbb
push
leave
out
mov
cli
and
push
add
inc
leave
jl
pop
jb
sub
fdivs
jns
add
clc
in
inc
out
sbb
mov
mov
aas
sub
hlt
mov
test
push
je
lods
jp
jmp
or
mov
in
xchg
jns
xor
adcb
js
inc
inc
jo
lock
sbb
dec
add
xchg
in
pushf
movsl
inc
addl
roll
adc
inc
xchg
dec
loop
outsl
pop
mov
sbb
lods
loopne
mov
pop
daa
sbb
add
jle
cli
mov
stc
pop
outsl
ss
movsl
sbb
fnstenv
pushf
emms
leave
and
pop
dec
mov
bound
cmp
xchg
clc
sbb
loopne
jle
and
mov
stos
iret
jge
arpl
stos
mov
xchg
push
adc
xchg
incb
testl
jp
adc
sahf
lea
iret
dec
cmp
jp
add
xchg
sti
sbb
xor
add
mull
cmpl
xchg
push
xlat
insb
fdivl
sub
mov
outsb
adc
push
enter
dec
mov
dec
push
imul
daa
loopne
addr16
lcall
mov
popf
ds
and
rclb
aam
popa
int
fwait
mov
movsb
add
mov
addr16
pop
mov
loope
and
jg
in
outsl
adc
pop
das
roll
lret
test
sbb
mov
daa
pop
in
mov
xchg
sbb
movsb
test
je
jmp
icebp
mov
xchg
pop
xor
out
cli
cli
in
push
add
dec
push
sub
mov
popa
sub
or
mov
jmp
mov
sbb
test
mov
fdivs
pop
mov
jno
cwtl
cmp
rcrb
out
popa
lcall
in
ljmp
xchg
ficoms
push
mov
mov
pop
shlb
lret
ficompl
or
cli
shl
ds
pusha
add
sub
nop
pop
in
int
xchg
dec
xchg
fdivrl
cmp
mov
into
and
mov
push
out
mov
call
push
addr16
jb
mov
cmpsl
lret
cli
cmp
pop
push
xor
mov
mov
in
inc
push
in
xorl
iret
data16
pop
in
enter
arpl
sbb
idiv
xor
adc
test
js
popf
dec
inc
xchg
xchg
xchg
movl
js
jecxz
rcrb
add
xchg
adc
fnstenv
jns
mov
repnz
pop
mov
mov
mov
mov
pop
fiaddl
sahf
inc
les
sbb
push
xchg
inc
pop
inc
cmp
fs
push
mov
or
mov
mov
arpl
ficoms
jp
nop
cmp
cmp
inc
movsb
or
movsl
fildl
pusha
jp
dec
pushf
add
push
push
shll
data16
xchg
lds
popa
cmp
or
mov
stc
and
insb
dec
jecxz
pop
mov
cmc
sub
pop
movsb
or
cs
cmp
xchg
inc
mov
push
lret
pop
or
add
movsb
popf
push
or
inc
xchg
repnz
sbb
jne
add
push
xchg
sbb
xlat
adc
dec
push
int3
mov
xchg
scas
popf
mov
cmpsl
leave
addb
dec
leave
mov
mov
jo
mov
dec
mov
es
mov
test
pop
stos
jb
pushf
dec
test
mov
loope
mov
xchg
das
out
add
add
and
and
sub
xchg
mov
sbb
mov
pop
add
es
jno
lods
nop
movzbl
scas
cmpsb
mov
xor
and
inc
int
inc
addr16
mov
add
sub
and
jo
nop
sub
bound
pop
shll
lcall
adc
negb
test
inc
sub
inc
sbb
jl
cltd
xchg
pop
sbb
xor
push
jo
push
fiadds
daa
or
sub
es
sbb
push
aad
loope
ret
xchg
mov
jl
mov
xor
ds
xchg
jb
and
dec
repz
pop
add
movsl
out
ret
dec
inc
test
mov
pop
and
inc
sbbb
std
mov
xchg
shrb
rorl
fdivl
addr16
testb
fisttpl
ret
movsl
clc
inc
pop
xchg
scas
xchg
cmp
rcrl
outsl
and
sub
inc
pop
xlat
xchg
data16
cwtl
mov
cs
dec
xchg
lret
lret
mov
jne
into
cmp
shlb
xchg
into
mov
mov
jp
jmp
cmpsl
popf
leave
adc
or
xchg
mov
sub
dec
lock
daa
stc
sub
dec
pop
pop
add
cmp
push
pop
in
and
or
lock
and
pop
scas
rol
pop
mov
mov
pop
xchg
jnp,pt
cltd
jbe
scas
xchg
icebp
pushf
mov
call
in
jb
loope
in
aam
cmp
jecxz
cmp
daa
das
adc
enter
cltd
mov
or
int3
fwait
mov
jae
or
xor
lods
lods
int
mov
dec
ret
add
std
push
cvtdq2ps
jecxz
xchg
and
scas
loop
inc
inc
mov
push
js
jne
add
mov
or
repnz
in
lds
pop
pop
cmp
clc
jle
shll
cmp
dec
pop
sub
int3
cmp
iret
and
add
lret
pop
pop
ret
notl
xchg
insl
iret
jb
jecxz
and
jne
pop
jge
addr16
sbbl
ror
inc
ret
out
pop
hlt
mov
aam
mov
or
fmul
push
mov
or
mov
rcll
jns
sbb
and
pusha
in
mov
nop
sbb
and
ret
int
fdivrs
xor
dec
push
jo
shl
pop
ret
cmp
push
cld
icebp
pop
push
insl
cmp
push
sub
mov
pop
sub
inc
mov
add
aad
mull
std
push
mov
xchg
push
in
inc
inc
mov
and
xchg
in
add
add
sarl
and
or
cmp
loop
mulb
repz
sarb
out
hlt
outsb
idivb
xor
adc
mov
dec
enter
movsl
or
xchg
mov
cmp
lahf
sti
loop
dec
shl
sbb
hlt
ja
push
call
out
nop
sub
insl
repnz
xchg
bound
xlat
sahf
cmpsl
test
sahf
or
test
cltd
sbb
cld
and
data16
enter
arpl
mov
ss
ja
fisttpl
sbb
mov
jbe
leave
insb
sbb
stos
iret
adcl
add
pop
jo
mov
sub
sub
push
testl
push
add
lods
fs
dec
push
stc
or
inc
popa
add
scas
or
pusha
outsl
int
pop
cmc
xchg
sbb
push
iret
push
pop
or
jecxz
mov
cmpsl
faddl
bound
iret
fsubrl
pop
iret
aas
pop
loope
push
jmp
rol
ret
mov
push
dec
popa
sub
jle
lds
stos
sub
cmp
and
fcomps
jge
sbb
mov
ret
and
dec
xchg
test
rcrb
dec
fwait
ja
fdivl
jns
je
addl
ret
test
clc
jp
je
jmp
mov
pop
mov
mov
sub
movsl
mov
xlat
dec
dec
int3
es
sub
sub
xlat
xor
jns
pop
add
sub
mov
mov
adc
push
ja
ficompl
sub
daa
mov
lods
mov
pop
or
sbb
xchg
push
inc
divl
in
pop
push
addb
inc
jnp
push
enter
ljmp
mov
dec
mov
int3
sub
dec
sbb
xor
ljmp
mov
les
pop
dec
jmp
jno
mov
daa
xchg
movl
adc
js
je
push
das
pop
sub
daa
inc
aaa
add
pop
push
sub
push
clc
arpl
je
aam
and
and
pop
add
out
inc
mov
sbb
mov
dec
dec
lock
sbb
cmp
insb
cmp
mov
iret
pushf
cmc
fs
jo
data16
call
hlt
outsb
loopne
inc
xchg
les
fbld
pop
and
dec
out
sub
mov
push
mov
lea
xor
mov
cmp
movsb
and
xchg
cli
cmp
mov
out
adc
or
pusha
loopne
les
pop
outsl
call
push
aaa
jl
sub
xor
mov
lds
adc
mov
sub
pop
movsb
daa
in
jmp
mov
daa
push
pop
sub
out
inc
ljmp
out
shlb
leave
adc
pop
adc
loopne
and
clc
lods
outsl
lds
loopne
stc
lea
mov
data16
mov
mov
mov
cmp
pop
mov
cmp
jbe
inc
cmp
mov
adcb
jp
insl
in
int
mov
xor
cli
xchg
xchg
lret
lods
add
loopne
movb
sub
inc
lahf
lock
hlt
fcompl
mov
cli
add
or
pop
fwait
or
or
les
sbbl
xchg
das
pop
movl
repz
ss
in
roll
jecxz
mov
lcall
push
in
lahf
jge
dec
push
pop
xchg
lret
cmpb
xor
lds
out
pop
xchg
hlt
aad
mov
cwtl
icebp
jecxz
push
lcall
pop
mov
or
js
fs
js
int
jl
sbb
lods
sahf
call
rcl
rolb
add
lock
xchg
pop
mov
push
das
sbb
lret
and
imul
je
insl
fidivrl
sarl
add
dec
adc
fwait
clc
lods
or
sbb
inc
add
pop
fdivrs
imul
andb
cmp
arpl
popf
hlt
movsb
fsubs
arpl
xor
aad
xchg
in
jmp
push
and
xchg
xor
lds
cli
pop
inc
lods
mov
cmpl
adc
lods
je
test
dec
inc
test
movsb
push
jae
jo
jmp
shl
mov
lds
gs
adc
adc
out
icebp
mov
outsb
xor
inc
cwtl
neg
pusha
push
xchg
in
push
mov
mov
pop
and
aad
bound
add
sbb
push
ljmp
or
jg
push
lods
xchg
dec
push
adc
rorb
iret
notb
or
cmp
lods
and
fabs
rorb
xorl
jg
mov
fs
ds
and
clc
mov
xor
gs
rol
gs
test
clc
or
mov
ror
lahf
push
test
decl
jbe
push
pop
push
xchg
mov
ljmp
ljmp
nop
popa
mov
rcl
pop
pop
mov
adc
aaa
push
dec
js
add
out
ret
xor
xchg
sbb
dec
xor
jl
enter
mov
dec
mov
mov
popf
loop
scas
fcomps
mov
out
shr
xchg
mov
hlt
and
and
dec
addr16
or
add
and
mov
add
sub
and
pop
push
mov
sbb
adc
mov
mov
loop
jb
mov
mov
test
or
js
bswap
loopne
into
pop
scas
icebp
fstl
or
mov
stos
xchg
push
xchg
xlat
rorb
and
pop
add
add
inc
cmovl
mov
pop
sbb
bswap
jbe
mov
test
test
hlt
ljmp
mov
xor
pop
aad
mov
mov
sbb
clc
push
sub
mull
movsb
mov
mov
stc
dec
call
and
loope
xor
inc
mov
adc
sahf
add
jb
add
imul
dec
push
sbb
scas
dec
je
mov
scas
mov
jae
sub
nop
xchg
insl
shld
mov
shr
jecxz
jae
sbb
add
ret
orl
adc
stc
movsb
daa
out
fmul
in
jl
mov
xchg
xor
mov
lcall
ja
mov
scas
jmp
pop
mov
xor
xchg
addr16
mov
ds
pop
adc
xor
inc
out
lea
xchg
int
adc
pusha
dec
xchg
push
add
pop
iret
jbe
loop
leave
cmpsl
int3
mov
call
inc
mov
jno
add
cmpsl
jmp
stc
scas
xchg
and
adc
lret
sub
push
pusha
xlat
mov
mov
repnz
dec
pop
push
icebp
popf
inc
call
fst
xchg
lcall
push
xor
jge
js
push
xor
xchg
push
rorb
dec
aaa
movb
fistl
divb
insb
pop
in
mov
rclb
add
mov
xor
cmp
cs
pop
xchg
cli
js
pop
dec
add
push
divl
int
jmp
pusha
pop
jl
and
arpl
push
mov
mov
jae
dec
push
sbbl
shll
and
push
adc
sub
loopne
ja
or
stc
sbb
inc
in
hlt
or
or
int
jle
fwait
inc
repnz
cmp
stos
sub
cmp
in
push
lcall
pop
mov
inc
push
les
into
ss
jns
mov
mov
shll
pop
xchg
scas
mov
adc
outsb
mov
and
scas
sbb
jmp
stos
icebp
daa
stc
add
addr16
stc
fiadds
or
jbe
repnz
sub
sbb
dec
lcall
fisubrl
cmpsb
add
movsl
and
or
cwtl
sub
aas
jp
sbb
jp
xor
ret
inc
inc
icebp
jbe
add
add
popf
mov
push
les
sahf
add
cmp
dec
js
mov
adc
jle
xor
rcll
push
or
and
cs
std
fdivr
out
pusha
dec
jb
shl
lret
pop
dec
xchg
xchg
aad
and
iret
add
mov
negb
xor
pop
fcomps
mov
xor
ss
dec
out
rcll
scas
sahf
jno
or
loopne
movsl
adc
test
xor
add
adc
rorb
xlat
mov
dec
add
mov
dec
jae
ss
in
cmc
mov
xchg
xor
cli
das
pop
pop
rcll
xor
mov
popa
divl
xor
or
pop
lret
fcoml
test
dec
fneni(8087
je
adc
xchg
add
sahf
in
arpl
push
adc
pop
sub
test
ss
into
lods
lret
aad
dec
mov
mov
lds
mov
mov
int
test
sub
sub
cmpsl
pop
repnz
stos
xchg
or
xchg
lret
lea
xchg
dec
xchg
sub
push
repnz
xchg
add
ja
push
xor
adc
lods
pop
call
and
mov
sbb
add
stos
popa
jge
cmc
push
cli
repnz
inc
bound
push
dec
mov
mov
stos
sub
push
xchg
and
pop
mov
mov
pusha
and
xlat
shl
jl
sarl
and
dec
lock
hlt
add
test
scas
icebp
add
adc
xchg
push
rcrl
cmp
add
stos
pop
xchg
lret
lret
imul
xchg
inc
mov
iret
push
jb
test
sub
js
rcll
sbb
xchg
mov
pop
jge
pop
mov
xchg
loopne
gs
into
daa
mov
pop
les
sbb
push
insl
dec
pop
adc
jl
add
mov
inc
push
jne
mov
mov
fistpll
cmpsb
frndint
cmc
jno
in
enter
sbbb
icebp
sub
xor
xor
fs
add
outsb
lret
xor
and
sub
cli
pop
cmc
sbb
jmp
and
in
js
sbb
dec
enter
movsl
insb
imul
imul
fs
std
filds
fisubs
jb
pop
lods
faddp
pop
mov
dec
add
fdivrs
sahf
ja
mov
clc
adc
cmp
xor
ljmp
mov
dec
pusha
cltd
cmpsb
rorl
shll
shl
or
dec
das
jl
xchg
jbe
leave
push
in
mov
inc
loop
add
add
loopne
adc
je
cmc
sahf
and
enter
and
lret
jns
dec
mov
stos
jmp
or
cmp
jno
lock
pushf
xchg
sbb
pop
test
aad
jecxz
rcrb
push
push
enter
rcll
push
mov
addr16
pop
jbe
icebp
outsl
push
push
shlb
enter
leave
mov
xchg
xor
ret
and
jne
sbb
inc
push
out
pusha
inc
cmp
inc
nop
jae
dec
loop
mov
popa
inc
sub
push
mov
sbb
loope
add
loopne
sub
ret
push
xor
sahf
orl
mov
inc
hlt
shrl
cmp
xor
enter
fisttps
xor
pop
pop
out
adc
test
je,pn
cmp
btr
in
sub
sbb
pusha
popl
xchg
fldl
imul
int3
adc
test
in
jae
repnz
jnp
dec
xchg
mov
inc
cli
push
repnz
xchg
lret
sbb
lds
cmc
loop
add
dec
repnz
inc
dec
testb
leave
pop
mov
xor
ljmp
nop
icebp
sub
in
lock
pop
dec
in
sarb
mov
mov
pop
frstor
shlb
cwtl
sub
sbb
sti
sbb
dec
mov
sub
push
pop
call
movsb
mov
add
mov
notb
repnz
mov
and
pop
popf
movsb
inc
lds
mov
cmp
inc
cmp
jl
iret
aam
xchg
cmc
fucom
xorb
pop
push
aam
mov
sbb
dec
cs
push
and
cmp
push
jl
pop
fcomp
mov
and
jmp
or
js
aad
ror
aam
and
inc
sub
sbb
cmpsl
mov
jmp
movl
pop
pop
cmpsb
pushf
stos
test
ljmp
dec
inc
dec
push
fsts
sbb
shll
xchg
aaa
dec
add
lods
adc
popf
mov
mov
rorl
mov
mov
imul
and
les
stos
adc
xlat
and
jge
imul
inc
scas
jge
sbb
ljmp
or
mov
jecxz
stos
mov
xchg
jb
sub
in
jae
movsl
aad
aam
loope
cmp
inc
lods
jecxz
and
push
call
enter
loop
ja
vshufpd
arpl
repnz
daa
push
lods
mov
notl
and
cli
jmp
mov
ljmp
push
test
mov
pop
mov
and
lods
in
jbe
mov
je
mov
mov
mov
dec
and
jl
and
and
jno
sbbl
mov
and
pop
or
xchg
inc
imul
pop
inc
in
loopne
xor
fs
inc
mov
paddusw
jnp
dec
jbe
int
xlat
mov
int3
mov
cs
push
jne
es
jne
xor
cmpsb
push
lcall
adc
dec
xor
popa
pushf
mov
cmp
repz
xlat
push
ljmp
xchg
adc
fisttps
add
pop
sub
enter
push
test
mov
fbstp
test
pushf
fcmovb
sbb
add
and
js
test
xorb
mov
mov
pop
mov
vsubsd
gs
jno
jno
int3
xchg
adc
repz
stos
repz
popf
jl
js
adc
and
in
push
mov
push
mov
inc
mov
push
or
cwtl
adc
mov
adc
adc
cmp
xchg
ljmp
popf
fldcw
adc
in
xor
fisttpl
xchg
std
shrl
adc
add
arpl
mov
insl
push
fstl
lcall
push
sbb
xchg
xchg
sub
clc
iret
sahf
xchg
scas
ret
mov
je
xchg
std
mov
cmp
incb
jb
pop
cmp
ret
lea
xchg
xor
and
mov
loopne
push
arpl
fsubrs
dec
scas
int
insb
mov
jecxz
xchg
js
rcll
lret
test
cmpsb
xorl
test
mov
fs
xorb
cmpsl
sub
mov
xor
pop
cwtl
cmc
inc
dec
pop
mov
xchg
pop
or
xchg
cmp
lods
les
imul
in
scas
lods
js
icebp
rcr
sbb
xchg
and
xor
pop
xor
lahf
dec
in
fcmovne
mov
and
hlt
mov
jne
insb
pop
in
add
insb
ret
or
inc
and
test
fistl
pop
pop
mov
mov
or
push
adc
xor
xchg
sub
add
ficoml
and
or
popf
and
push
aaa
xor
xor
hlt
mov
cli
mov
in
sahf
cmp
nop
js
cmpsl
imul
xor
push
push
inc
inc
js
scas
notl
jmp
xor
shl
mov
in
popf
popa
xchg
fmul
test
insb
jmp
add
aad
stc
loop
push
mov
mov
les
dec
cs
pop
aam
mov
inc
les
mov
stos
gs
or
ljmp
lock
negb
icebp
ljmp
mov
or
jnp
push
cmp
push
or
les
adc
sub
jg
xchg
jle
pop
add
jno
adc
sbb
das
or
pop
sub
adc
pusha
inc
data16
push
jns
rclb
ss
adc
fists
stos
fs
fnstcw
lahf
out
add
movsl
std
and
cmp
and
inc
mov
mov
mov
push
push
mov
je
mov
fs
adc
xchg
std
lret
add
aaa
loop
dec
test
int
push
mov
add
inc
add
sbb
and
clc
cmp
mov
sbb
xor
in
inc
xchg
xor
test
pop
rcrb
mov
in
pushf
sub
or
mov
rcl
adc
stc
cmp
loop
push
das
pop
fcomps
frstor
xchg
xor
mov
jns
pushf
mov
leave
and
pop
mov
mov
out
push
cld
lcall
sbb
jo
in
push
cmc
cwtl
lds
cmc
les
es
daa
lods
loope
push
insl
mov
daa
sbb
push
add
rorl
test
cmovge
jge
stc
aad
and
sbb
sbb
mull
inc
cld
sub
push
sub
int3
popa
enter
and
cmc
pop
cs
adc
xor
xchg
pop
mov
stos
sub
fildl
dec
js
daa
xor
lock
inc
jbe
outsb
fildll
mov
mov
xor
imul
or
orb
dec
xchg
mov
leave
shrb
and
test
inc
push
sarl
push
scas
jmp
lret
sti
xor
cmp
in
stos
mov
sub
inc
mulb
or
xlat
fwait
pop
shll
fsubrs
mov
in
addl
adc
inc
sub
inc
cmp
pop
insl
mov
cwtl
lock
shll
rorl
push
cmp
dec
dec
pusha
inc
ret
stos
mov
mov
xor
test
xor
sbb
pop
and
les
jno
enter
clc
xchg
outsb
inc
fwait
fs
fcoml
iret
cmp
jge
clc
js
cmp
fstp
mov
or
sbb
out
jae
repnz
lds
inc
ljmp
sub
pop
sbb
das
xchg
fnstsw
push
aam
xchg
lcall
jmp
cltd
stc
add
mov
cmp
dec
cmp
out
xchg
lret
and
pop
ret
call
sbb
jnp
adc
or
scas
inc
add
xchg
int3
popf
fs
mov
test
jae
sbb
rolb
push
lock
arpl
sbb
stos
into
out
push
addl
orl
aaa
loop
add
push
inc
mov
push
xchg
lods
aad
cmp
aad
scas
fdivs
lock
lds
adc
aam
imul
test
and
xor
push
imul
insb
sub
inc
jo
icebp
and
inc
cli
push
syscall
adcb
mov
dec
jne
mov
ret
lods
imul
jg
sbb
and
aam
lods
xor
cmpsb
scas
std
dec
nop
stos
mov
inc
lds
push
lods
xchg
adc
hlt
inc
jae
imul
flds
mov
mov
cltd
and
push
test
orl
add
cmp
sahf
jns
sub
mov
fs
sti
sub
lods
mov
sahf
or
jmp
mov
push
adc
outsb
inc
les
inc
out
lea
ljmp
ret
and
xor
push
inc
shlb
out
in
nop
mov
fs
mov
movsb
adc
sbb
adc
or
and
mov
jecxz
icebp
sub
add
mov
add
mov
adcb
jl
adc
mov
bts
sub
inc
xor
push
mov
vminpd
lret
stos
jno
sbb
jmp
mov
in
out
and
imul
add
bnd
ret
insl
daa
mov
fisttps
sub
sub
dec
pop
push
pop
divl
cmpsb
call
shll
dec
pop
insl
ret
and
pop
inc
movsl
leave
cmpsb
push
sbb
ss
pop
xchg
nop
nop
int
xchg
push
push
mov
lret
std
cltd
add
shr
dec
fs
addr16
push
loope
aas
xor
bound
dec
xchg
add
and
cwtl
add
loope
mov
mov
xchg
ret
ja
cmc
mov
and
inc
jecxz
movsb
shrl
imul
mov
mov
insb
fidivrl
pusha
inc
fwait
dec
test
xchg
sub
jge
add
outsb
push
and
fcomp
ja
fsts
add
test
push
jne
push
movsl
sbb
jno
sarl
in
loopne
pop
xor
push
inc
lret
lret
lds
outsl
faddl
and
icebp
divl
adc
ret
push
sub
jp
ja
imul
inc
mov
dec
arpl
dec
or
je
jl
repnz
or
shrb
add
jne
xchg
cmp
out
outsb
xchg
mov
pop
dec
scas
cmp
stos
and
fsubl
pop
sbb
or
xchg
clc
pop
ds
pop
lds
adc
and
ljmp
dec
jnp
lcall
out
cmp
ficoms
ret
imul
cltd
ljmp
add
loop
in
or
addb
scas
add
adcw
jp
lock
xlat
mov
mov
mov
add
dec
das
in
add
fstpl
sub
repz
pusha
inc
and
xchg
push
xchg
test
fwait
les
shll
lods
pop
adcb
mov
bound
ficomps
data16
test
mov
pusha
xor
push
adc
mov
loopne
lock
adc
xchg
mov
push
lahf
inc
dec
inc
mov
inc
pop
rcrl
pop
mov
jmp
jae
cld
push
jo
call
cmp
mov
sbb
or
ljmp
movsb
push
les
cmp
cmp
outsb
rcl
in
push
mov
add
call
pop
test
sti
stos
cmpsl
lahf
sahf
push
add
adc
jmp
push
fnstsw
stos
xchg
jne
sub
jl
dec
adc
inc
mov
stos
insb
popa
push
adcl
lcall
xor
and
add
insl
out
inc
lock
dec
cmpsb
add
je
jp
add
cld
pop
mov
call
mov
pushf
inc
fmuls
mov
jl
pop
gs
and
in
adc
fstpt
pushf
paddd
in
xchg
bound
or
imul
push
loope
arpl
or
and
or
popl
movsl
je
cmc
mov
or
out
les
js
cmp
cmp
mov
add
pop
adc
lcall
jne
adc
jno
mov
jo
push
ja
inc
clc
notb
pop
mov
cmc
scas
add
dec
dec
lcall
xchg
push
or
sub
or
cs
add
cmp
test
in
and
test
lock
leave
pusha
mov
inc
in
fs
in
pop
adc
test
out
mov
xlat
inc
sbb
inc
fmuls
into
mov
sbb
mov
push
inc
repz
jecxz
into
iret
popa
mov
push
mov
rclb
in
mov
test
icebp
add
or
std
and
pop
push
rol
fsubs
adcb
xor
insb
jne
jecxz
cmp
sub
sub
and
ret
jb
clc
or
outsl
push
je
mov
clc
inc
clc
loop
icebp
pop
popa
fstpt
loopne
cltd
cmc
pop
cmpsb
push
mov
cmp
arpl
das
fisubrl
andb
outsb
cmc
push
je
adc
scas
xchg
inc
aam
scas
add
sbb
sti
shll
lret
and
rcl
pop
adcb
dec
mov
aaa
and
mov
js
sub
loop
and
mov
jmp
mov
int
loope
fnstcw
xor
cmpsl
adc
sbb
xor
js
icebp
xchg
or
dec
stos
mov
xchg
pushf
push
add
xor
xchg
std
dec
cmp
inc
push
sbb
nop
imul
jb
and
je
movsb
scas
arpl
add
inc
daa
cmp
dec
cmp
push
cmpsb
pushf
jge
je
mov
scas
mov
xor
mov
ret
and
int
icebp
mov
xchg
inc
dec
xor
jbe
adcb
cmc
lock
daa
call
inc
jl
mov
or
lret
jbe
test
push
cmpsl
lahf
pop
stos
lods
es
dec
cmc
insl
fstpl
insb
mov
repnz
xlat
sahf
or
push
jb
add
pusha
shlb
xor
jae
pop
mov
sub
or
pop
adc
jnp
or
xor
data16
and
dec
push
jl
mov
shl
mov
clc
iret
sbb
add
adcl
cmp
or
insb
pop
cmp
and
insl
sub
sbb
dec
sub
sahf
icebp
xor
cmp
ds
add
test
pop
push
pop
negl
bound
scas
stc
jno
mov
push
mov
and
scas
mov
mov
ret
dec
mov
fdivr
or
call
push
popf
rorb
and
inc
push
bound
xchg
ret
adc
mov
arpl
aad
rcll
and
pop
stos
dec
loop
sti
rcrl
es
movsb
jmp
push
sbb
mov
stos
push
xchg
inc
inc
cmp
es
popa
and
or
sti
adc
push
pop
gs
inc
pop
cmp
sbb
nop
mov
xchg
lret
ret
mov
push
mov
dec
fnstenv
mov
mov
mov
popa
add
xor
dec
jmp
push
and
xor
stos
xchg
pop
push
lret
gs
or
cmp
or
fs
mov
adc
and
push
or
xor
movsb
fsubrp
mulb
in
adc
mov
jb
jmp
fwait
icebp
mov
jg
and
sbb
sub
out
sarl
pop
xchg
mov
sub
and
addr16
clc
inc
cwtl
fidivs
in
popl
adc
cmp
mov
test
dec
mov
mov
and
and
add
and
test
cli
inc
aad
add
fsubrl
daa
sub
xchg
cmpsb
popfw
add
cs
cli
loope
mov
dec
lcall
sti
lods
andb
test
inc
sbb
stos
or
jecxz
or
testl
and
loope,pt
lock
jnp
inc
push
loope
lds
lret
dec
hlt
pop
jbe
sbb
push
inc
ret
push
sarl
jb
jno
loop
and
loop
or
lea
push
stos
cmpb
cmp
lret
inc
shll
in
inc
jge
in
imul
roll
cwtl
mov
jne
adc
mov
test
xor
mov
dec
push
repz
sub
add
inc
mov
and
dec
inc
inc
loop
mov
jp
xchg
cmp
loope
dec
push
popa
mov
mov
pop
push
insl
jge
mov
outsl
enter
es
jmp
xchg
test
loopne
add
stos
ss
and
inc
mov
xor
orb
dec
clc
xor
cmp
fcomip
hlt
ret
jbe
or
addl
fsubs
dec
gs
sbb
fwait
mov
add
cmc
push
pop
xor
or
mov
in
mov
or
jecxz
popf
divl
mov
jmp
mov
dec
mov
and
inc
fstpl
sub
push
test
repnz
adc
in
fwait
xor
xchg
jo
cltd
aas
pop
jb
mov
add
loopne
arpl
dec
js
ret
or
call
mov
sbb
and
mov
and
xor
or
rolb
bndstx
xchg
cmovle
mov
fdivs
mov
jo
shlb
mov
dec
cmpsl
scas
adc
jle
jne
jns
or
inc
push
cmpl
cmp
pop
testb
fldcw
cmpsl
sub
roll
or
pop
scas
out
xchg
xchg
cs
mov
insb
or
xor
mov
add
popa
sbb
xchg
sbb
push
adc
pusha
repnz
out
sbb
add
lock
add
inc
ja
daa
in
sahf
pushf
mov
xor
pop
jae
lea
int
xchg
into
test
ret
mov
sbb
push
adc
or
pop
push
mov
out
pop
push
es
orl
lret
icebp
mov
sbb
cmp
cltd
cmp
repz
fsubrl
cltd
mov
add
adc
mov
fstps
out
mov
stos
std
mov
sub
add
pop
in
outsb
fcmovnb
add
les
ds
push
push
xchg
lods
stos
cmp
loop
jmp
xchg
es
std
push
add
cmpsb
mov
sub
mov
or
rorb
jmp
push
mov
pop
mov
adc
clc
xchg
lods
js
lods
and
out
mov
rolb
lock
inc
xchg
xor
cmc
fs
cmp
flds
mov
and
lds
pop
push
shlb
aam
xchg
cmp
es
repnz
mov
mov
push
adc
lcall
sub
subl
sbb
or
sbb
mov
xor
add
push
pop
sub
fwait
pop
lea
dec
push
dec
sahf
add
sbb
mov
adc
jb
jp
push
in
sbb
clc
push
arpl
fmuls
je
sbb
xor
inc
les
jno
or
addr16
cmp
push
inc
negl
jnp
add
pop
sbb
and
xchg
call
pop
in
push
add
sbb
and
or
and
movsb
xchg
mov
call
testb
sahf
scas
mov
mov
dec
sarl
rclb
cmp
jb
cmpsl
loopne
pop
flds
loopne
push
sbb
sub
pusha
test
mov
cmpb
dec
adc
fwait
in
xchg
je
test
mov
xor
sub
push
or
rcrl
fucomp
lcall
mov
add
leave
push
push
cmp
out
adc
dec
xchg
sbb
test
inc
js
arpl
imul
xor
pop
test
rolb
mov
shll
in
xlat
pop
outsb
mov
inc
outsl
jbe
cld
sub
pop
jp
cmp
stc
adc
pop
leave
insb
sbb
xchg
xchg
jnp
movsl
gs
xchg
mov
jae
or
or
jbe
inc
stc
pushf
sub
mov
fpatan
or
popf
xchg
pop
inc
aaa
inc
add
pop
aad
lds
mov
out
enter
loopne
ret
lock
xchg
sahf
lcall
adc
xor
mov
push
lods
jmp
sbb
sbb
stc
sub
adc
decb
sub
cli
adc
lock
mov
adc
jge
imul
xor
mov
movsb
mov
es
adc
lret
in
arpl
stc
scas
fldl
inc
mov
jmp
test
cmpsl
rcrb
push
in
push
xor
mov
mov
sub
sbb
sub
mov
mov
mov
ret
enter
jns
adc
aad
push
inc
insl
adc
inc
std
cs
cmp
push
inc
test
out
repnz
leave
cmc
push
push
cmpsb
in
gs
adc
inc
pop
aaa
cmp
add
push
mov
into
aaa
push
je
adc
popf
push
sbb
xor
mov
adc
outsb
sbb
into
lea
lods
xchg
out
dec
orb
popl
adc
insl
jg
and
mov
xchg
gs
jp
int3
les
sbb
ljmp
test
push
cli
gs
arpl
subb
lret
push
aad
lcall
pusha
adc
cmp
insl
sar
sub
test
push
xor
push
in
sahf
jp
add
adc
adc
xchg
or
inc
adc
mov
fisubrl
adc
popf
jp
pusha
xchg
cmp
imul
inc
inc
popa
andb
jb
push
ret
xor
lahf
call
stc
jne
mov
mov
push
mov
test
jle
jp
ja
data16
popa
inc
loop
xchg
sub
inc
push
pop
lock
fiaddl
add
jne
leave
push
cmp
lea
js
cmpsb
sub
xchg
cwtl
jl
cmpsl
sub
aad
or
or
lret
or
cmp
push
xchg
imul
dec
psrld
adc
or
leave
mov
mov
adc
pop
ljmp
lcall
in
mov
xor
cld
outsl
outsb
lock
jo
mov
sub
lods
xchg
out
mov
clc
jp
lahf
mov
xchg
lret
cmp
mov
adc
test
mov
in
clc
sub
test
lcall
test
xor
sub
dec
lahf
das
inc
xor
or
and
mov
int3
xor
lock
lret
xor
add
mov
adc
and
sub
shll
dec
or
out
xlat
cmp
xlat
sbb
push
xchg
outsl
scas
shrl
xchg
call
mov
icebp
or
sub
mulb
outsb
xchg
loopne
inc
fst
xor
movsl
push
rcrb
push
push
push
pushf
scas
out
pusha
hlt
jl
dec
jo
out
mov
je
mov
and
sub
aas
cmp
dec
add
mov
outsb
fwait
push
xor
push
cmpsl
adc
loopne
dec
sbb
rcrl
hlt
add
push
shll
xor
jg
jl
sbb
cmp
mov
ja
mov
icebp
jns
xchg
jle
pop
lds
sbb
icebp
xor
andl
lret
or
xchg
outsl
xor
jle
adc
xchg
pop
mov
ret
gs
int3
stc
push
iret
ficompl
adc
ret
push
int3
fs
mov
lods
pop
fisubl
adc
pusha
adc
je
jmp
ds
adc
xor
fsubr
mov
push
mov
push
sbb
cmp
push
mov
add
fadd
inc
or
outsb
xor
cmp
xchg
frstor
jge
push
rclb
jl
mov
inc
mov
sbb
loopne
pop
push
adc
lods
xor
repz
clc
dec
and
adc
icebp
adc
inc
push
test
jp
mov
ss
test
add
mov
cmp
jg
js
mov
jl
outsl
fsub
pop
fisttps
xorl
loope
daa
inc
push
jne
js
pushf
ds
mov
rorb
ljmp
insb
jg
mov
aad
cltd
sbbl
test
pusha
lock
pop
ficompl
add
jl
leave
mov
mov
add
loopne
xor
dec
clc
lahf
outsb
popa
mov
cmc
rolb
outsb
jns
stc
out
cmp
in
xchg
movsb
sbb
push
inc
jns
inc
pusha
outsb
aaa
decb
sub
push
fs
pop
mov
xchg
out
imul
push
sbb
mov
lahf
xor
jnp
jae
jp
and
ds
dec
in
sbb
xchg
movsl
push
addb
mov
dec
push
dec
mull
inc
and
aam
inc
mov
stos
xor
or
or
std
jb
mov
cwtl
push
pop
sarl
push
or
js
jecxz
cli
push
fadds
jle
xchg
rcl
add
lcall
mov
aam
rcrl
push
sub
lcall
lcall
pusha
gs
and
sbb
arpl
cmp
mov
pop
popf
bound
repnz
sbb
aas
adc
inc
icebp
aaa
cmpsl
aaa
push
icebp
add
fidivrl
xor
inc
nop
stos
mov
popa
aaa
xor
scas
mov
push
adc
jl
movsl
pop
in
adc
je
rorl
popa
rorb
xchg
popf
inc
cmp
inc
and
rcll
aad
loope
je
push
ja
and
cmpsl
pop
loope
push
xlat
pop
call
push
add
lcall
les
or
pop
lods
ljmp
or
stos
mov
sbb
stos
pusha
fcmovb
sahf
xchg
shrl
cld
loope
add
fdivrl
add
pop
std
jle
push
icebp
jge
cmpsl
das
xor
jp
mov
in
imul
or
popf
cmpsb
fwait
push
or
mov
jl
aad
jle
cmpsl
je
inc
dec
mov
jl
test
xor
inc
fs
mov
mov
lods
fiaddl
push
xor
cmp
lcall
inc
pop
in
enter
or
push
jecxz
dec
shrl
and
sahf
dec
mov
jno
lock
xor
mov
jge
popf
pop
cmpsb
imul
mov
insb
add
movl
xchg
sti
add
in
and
pop
inc
inc
jae
pusha
leave
ret
stos
mov
bound
imul
sub
fadd
nop
jno
add
and
sarl
lods
jns
lea
push
jecxz
xor
jns
movsl
pop
xchg
popf
cli
pop
jno
cmp
sbb
jl
adc
jge
fidivrl
stos
pop
sbbl
out
push
pop
pop
decl
notb
imul
jecxz
or
mov
cmpsb
and
and
bound
rorb
lock
sti
sbb
ds
into
jae
inc
push
pop
adc
sub
or
and
cli
rol
pop
push
mov
stos
arpl
add
and
cltd
cmp
sbb
sbb
push
repnz
out
inc
shrb
jle
inc
push
ret
xchg
xchg
idivl
xor
addl
out
fadd
movsl
test
insb
push
or
ret
xchg
clc
push
mov
loopne
mov
scas
sbb
push
ja
loope
mov
pop
push
jle
negl
adc
push
jb
cmpsl
push
sarb
add
xor
fistpl
outsl
maxps
mov
lods
xchg
add
mov
mov
into
arpl
fs
xor
or
call
imul
cmpsb
imul
mov
scas
dec
mov
jg
fcmovu
push
push
mov
enter
fsubrl
mov
jecxz
adc
jmp
add
es
pop
and
sbb
sti
pop
dec
shlb
sub
push
push
int
add
jnp
mov
xorl
pop
push
leave
add
scas
pop
clc
and
lea
mov
sti
dec
test
mov
popf
pop
and
popf
lods
stos
push
inc
mov
iret
xchg
rorl
dec
pop
jmp
lea
not
fidivl
scas
xchg
add
adc
fwait
in
fldcw
cwtl
push
add
icebp
out
ret
xor
nop
push
xlat
mov
jmp
add
clc
xchg
cmpb
adc
cmp
pop
hlt
mov
inc
fmuls
aas
cli
mov
pop
xchg
lea
insb
and
push
xor
mov
push
cltd
push
lret
std
mov
add
push
jno
dec
fstpl
jae
or
pop
and
xchg
ljmp
pusha
xchg
fdivrs
sub
icebp
jp
push
lds
loope
dec
add
xor
adc
rorl
and
call
xchg
popa
cld
das
sub
fstl
mov
aam
les
push
xlat
out
data16
fs
push
push
test
sub
gs
xchg
popf
repz
or
nop
pop
sub
mov
cli
cmp
andl
sbb
add
cmp
enter
test
cltd
and
and
in
mov
or
xor
xchg
repz
ret
cmc
add
mov
push
in
mov
xchg
ds
jae
in
mov
mov
ljmp
adc
adc
cmp
sbb
loop
push
pop
xchg
lea
inc
out
cmpsb
outsl
iret
add
cmp
inc
mov
das
sahf
xchg
jns
xor
insl
or
mov
cmpsb
or
dec
shlb
loopne
lods
pop
sbb
sbb
inc
bound
stc
push
call
lret
mov
ljmp
icebp
mov
cmp
xor
out
add
fildl
or
cmpsl
and
andb
sbb
repnz
and
pushf
and
inc
cmpsl
inc
xchg
mov
and
xor
mov
push
jne
rsm
test
test
shl
ja
jle
xchg
and
dec
add
fisubl
pop
inc
inc
sbb
sbb
add
pop
jo
push
sbbl
imul
dec
cmp
adc
pop
cmp
or
fnsave
inc
mov
add
push
inc
xchg
or
or
jbe
mov
fcmovne
pop
mov
or
jo
mov
adc
sub
cs
xchg
xchg
cmp
jmp
insb
fdivrl
and
aad
arpl
sbb
or
pop
pop
dec
ror
inc
adc
pop
jle
loopne
jge
jge
mov
inc
mov
adcb
popf
movsb
into
lcall
outsl
add
sub
or
mov
xchg
pop
adc
inc
icebp
xorb
push
mov
sub
adc
pop
sahf
call
sub
cmp
adc
mov
jno
push
dec
push
loope
mov
ds
jl
leave
push
and
or
pop
sti
stos
inc
aaa
xchg
je
xchg
iret
lock
sub
dec
icebp
bound
lock
cmpsb
jb
jns
mov
fcmovu
sbb
xchg
loope
lcall
dec
push
clc
mov
mov
in
pop
adcb
adc
ret
mov
shrb
and
movsb
std
inc
push
test
adc
sbb
mov
or
mov
dec
jecxz
pushf
jo
es
add
mov
adc
add
mov
jno
dec
dec
push
mov
xchg
dec
and
mov
rcll
jmp
fildl
adc
xchg
orb
adc
pop
dec
insl
or
add
insl
rol
xchg
in
push
test
adc
pop
mov
imul
push
adc
cltd
cs
inc
pop
sbb
test
test
daa
test
or
jl
sub
push
ds
cmp
leave
dec
pop
xchg
push
adc
in
or
mov
test
jp
pusha
jb
scas
sarl
cli
mov
xchg
lds
and
and
sub
lock
push
movl
cmp
add
mov
sahf
pop
jg
cmp
push
push
std
push
mov
sub
or
fisubrs
xlat
es
push
mov
imul
mov
push
sbb
clc
inc
dec
and
test
mov
and
or
scas
mov
aam
cmp
pop
inc
jb
mov
adc
add
and
je
mov
adc
or
mov
adc
daa
pop
jns
fs
push
or
aam
and
outsb
fbstp
clc
in
scas
and
xchg
orl
adc
adc
dec
ljmp
push
push
and
inc
add
in
push
scas
mov
sahf
jb
test
mov
sub
xchg
sbb
mov
cmp
scas
aaa
lock
and
fcoml
cltd
ret
dec
inc
mov
adc
fadd
dec
push
icebp
jl
mov
cmp
xchg
lret
xlat
and
inc
adc
nop
rolb
addr16
sub
pop
xchg
xchg
inc
in
mov
andb
lcall
sbb
inc
stos
in
shufps
dec
filds
mov
rorl
add
pop
jg
rolb
cmpsl
addr16
pop
aaa
push
lret
inc
jg
nop
lods
mov
outsb
fisttps
add
adc
cmpsl
mov
sbb
push
into
push
call
sbb
or
aas
mov
inc
mov
dec
int3
popa
in
fiadds
push
sarl
mov
clc
cltd
jmp
icebp
aam
jnp
dec
cli
inc
xorl
arpl
les
incl
sbbb
cwtl
xchg
or
fcomps
testl
out
add
sti
inc
push
mov
xchg
movsl
adcb
add
rclb
inc
mov
and
mov
aas
out
rcl
fdivs
dec
imul
inc
stos
push
sbb
push
add
orl
sarl
shll
fldl
scas
jmp
ds
sahf
dec
test
lahf
inc
hlt
sbb
mov
js
sti
xchg
scas
es
or
movb
iret
stos
ja
int
mov
stos
jno
or
jnp
in
nop
cmpl
mov
sbb
mov
das
sahf
or
faddp
lea
adc
sub
lcall
rclb
and
inc
xchg
or
xchg
mov
les
mov
pop
xchg
push
xchg
push
pop
sbb
pop
push
lock
or
rcll
push
dec
mov
add
adc
in
fiadds
xor
icebp
dec
push
push
sbb
arpl
jle
mov
add
je
sub
lock
xchg
lret
aad
loopne
and
pop
inc
adc
lock
and
stos
sahf
imul
std
lea
pop
xor
arpl
and
lods
inc
out
ret
dec
pop
mov
mov
adc
mov
lret
pop
push
rolb
adc
inc
cmc
push
add
fadds
cmc
fidivrl
fs
mov
shl
popa
test
cmp
adc
rorl
or
adc
fcompl
bound
dec
and
pop
roll
subps
movb
mov
mov
mov
fidivs
cmp
mov
out
jnp
sbb
les
or
inc
loop
mov
shll
push
inc
lods
iret
pop
sbb
mov
stos
movsb
sbb
loop
inc
or
mov
mov
aam
dec
in
rorl
adc
push
imul
pushf
pop
movb
add
fistpll
pop
lcall
lea
fwait
push
add
inc
xor
lock
sub
pop
das
sub
fcompl
repnz
int
pop
call
add
cmp
and
sbb
or
outsl
adc
aam
cwtl
add
shl
cmp
and
jecxz
push
jbe
mov
out
inc
repz
in
arpl
ret
push
push
xor
enter
xchg
add
cmp
dec
aam
mov
shrb
daa
sub
push
xchg
enter
pop
and
pop
lock
mov
sub
push
inc
enter
in
adc
cwtl
xchg
test
inc
add
pop
fcomps
shlb
pushf
xor
leave
pop
and
jg
cld
daa
lock
sub
dec
inc
das
js
mov
pop
adc
jle
sbb
cmp
jo
movsl
test
outsb
xchg
loopne
fwait
arpl
pop
sbb
mov
adc
mov
dec
jl
jbe
pop
fnstcw
dec
nop
test
mov
push
dec
and
out
xor
loop
aas
repz
mov
adc
jne
lock
sub
add
stos
pop
sti
cmp
bound
jae
ret
mov
sub
in
inc
xlat
out
out
cmpsb
pop
inc
orb
mov
in
xchg
lds
adc
popa
mov
jne
push
push
jns
push
mov
mov
jo
xor
and
adc
pop
add
lods
popa
aad
pop
cmpsl
or
test
cmc
shlb
in
imul
ffree
lret
pop
mov
pop
push
pop
cmp
out
mov
or
imul
jbe
and
xchg
add
aas
jmp
mov
xor
inc
movl
out
or
fiadds
shlb
cmp
fisubs
in
fstps
mov
scas
pop
sub
add
out
outsl
jge
cmpsl
xchg
sbb
lahf
cli
sbb
addb
and
xchg
xor
adc
push
mov
adc
int3
aam
outsb
shlb
push
scas
cmp
ret
and
notb
jmp
mov
mov
mov
add
cli
mov
jcxz
mov
test
fistl
addr16
leave
mov
push
inc
sub
cmp
push
jl
mov
shlb
dec
popf
movsl
mov
jmp
xorl
or
sbb
in
mov
cmp
mov
in
mov
pcmpeqw
xor
jb
in
jb
fldl
shld
jl
sahf
andl
mov
sbb
dec
dec
rorb
and
jmp
in
call
fsubp
mov
pusha
cs
sub
mov
pop
das
aam
addr16
std
push
neg
mov
dec
notb
push
or
jno
and
jp
xor
mov
jb
push
xor
and
test
lea
mov
cmp
or
lret
mov
pop
push
jmp
jecxz
test
push
inc
je
andb
lock
neg
je
sub
mov
sbb
and
ja
adc
pop
mov
fdivrl
jecxz
and
daa
or
das
insl
push
sbb
xchg
dec
sub
xlat
sti
and
sub
or
bound
outsb
sub
dec
adc
xor
nop
jns
sub
push
je
xlat
sahf
fisttpl
xchg
ret
fstpl
add
sub
push
inc
xor
push
ds
mov
into
cld
mov
aas
aas
push
ja
push
or
cs
test
sbb
and
and
not
lahf
pop
mov
mov
out
scas
adc
sbb
int
inc
popf
inc
popa
aam
or
fs
push
add
sarb
cmc
xchg
mov
mov
sub
push
and
jne
adc
sub
ljmp
cli
js
inc
pusha
push
mov
cmp
fcomp
or
daa
shlb
dec
fnstsw
push
outsb
mov
xchg
add
dec
pop
pop
das
inc
lret
es
jns
dec
adc
lods
add
push
or
in
loopne
loope
shll
xlat
jbe
arpl
into
fcmovbe
inc
sub
repnz
fsincos
push
mov
insl
out
mov
and
ss
pop
mov
loopne
xlat
aaa
and
test
fldpi
or
mov
push
or
add
fnstenv
add
pop
xor
inc
sbb
clc
jb
sbb
insl
push
jge
mov
aad
dec
mov
push
or
dec
jae
fbstp
sti
out
outsl
adc
fmull
sbb
test
add
outsl
leave
fdiv
xchg
jg
jmp
inc
xchg
add
sbb
add
push
pop
jae
test
pop
push
in
adc
push
jbe
add
inc
add
shrb
jg
xor
enter
and
dec
pop
jmp
stos
jle
sub
xchg
mov
dec
mov
scas
out
mov
lds
scas
fxch
mov
subb
or
adc
mov
lahf
testb
xor
add
test
and
fld
dec
mov
in
mov
in
in
adcl
sub
mov
mov
insb
push
xor
xchg
sub
dec
jl
icebp
shl
cmp
daa
or
cmp
mov
xchg
mov
and
dec
jp
mov
add
outsb
dec
int3
icebp
adc
mov
das
sbb
push
and
push
push
je
outsl
rol
xchg
cmpsl
jge
movsb
sbb
xor
mull
outsb
jmp
xchg
loope
rcrb
dec
ret
cmovo
jl
repz
mov
sub
sahf
pop
sub
and
pop
mov
in
push
scas
int3
lret
in
imul
outsb
mov
push
daa
jg
add
pop
jmp
xor
popa
xchg
aaa
pop
jb
dec
mov
cmpsl
cmp
and
mov
movb
sahf
cld
into
adc
or
mov
cmpsl
pop
jne
inc
cwtl
movsl
aas
sahf
pop
test
mov
pop
and
outsb
xor
jbe
pop
and
sbb
daa
xlat
enter
ret
int
adc
insb
movsl
fcmovnu
inc
add
repz
and
pop
int
adc
loopne
sbbl
fistl
inc
mov
sbb
xchg
pop
cmpxchg
mov
or
loopne
jb
xor
repnz
shrl
pop
pop
lcall
xchg
ds
xor
dec
popf
loopne
mov
aas
call
xchg
addb
frstor
or
push
jle
sub
clc
cmp
ss
dec
insb
mov
adcl
jno
mov
movsb
mov
adc
cwtl
cmp
inc
cmc
pop
sub
cld
cmp
inc
test
repz
push
or
sbb
inc
dec
insb
sti
sbb
jo
xor
sbb
xlat
lret
lock
or
pop
ret
push
daa
movsb
pop
repz
cltd
mov
dec
push
mov
push
pop
mov
lret
add
fs
cmp
mov
ret
faddl
push
int3
cmp
ja
jle
jnp
jmp
adc
mov
hlt
add
imul
mov
push
les
mov
jle
rolb
fsubl
inc
dec
mov
pop
and
sti
pop
leave
push
and
hlt
push
xor
jp
inc
rcrb
inc
mov
push
popa
push
insb
sbb
jbe
and
dec
xchg
pusha
sti
movsb
cli
cli
mov
icebp
fs
lea
xor
pop
cmp
cmp
push
dec
pop
mov
lret
imul
adc
push
je
push
xor
rcll
sbb
addr16
mov
mov
cmpsl
pop
add
xchg
dec
cs
dec
ss
or
push
faddl
jle
xchg
dec
out
xlat
mov
xor
lret
into
mov
mov
add
out
popa
cmpsl
adc
jle
jb
push
mov
std
frstor
and
fisubs
scas
addb
add
sbb
stc
sbb
push
insl
call
wrmsr
inc
sbbb
stos
add
es
loop
out
inc
sub
int
icebp
adcl
push
jae
movsl
mov
leave
inc
xor
fists
adc
popa
jae
cli
roll
test
pop
push
sbb
pop
call
sbb
iret
push
xchg
andb
sbb
mov
mov
mov
cmpsb
rorl
dec
xchg
insl
adc
add
dec
das
mov
outsl
or
test
add
pop
popa
ds
scas
fwait
inc
ja
lds
hlt
or
push
pop
or
test
mov
insb
xor
lods
in
lret
push
push
mov
ljmp
or
xchg
lcall
ret
inc
loopne
adc
iret
push
jmp
lret
adc
xor
cmp
cwtl
fstps
mull
mov
jbe
pop
pop
add
sbb
incl
xlat
lods
daa
mov
cwtl
icebp
inc
cmp
or
loopne
mov
lcall
pop
dec
pop
xor
sub
xchg
adc
cwtl
xchg
dec
xor
or
out
ror
sub
mov
mov
add
repnz
movsb
imul
lds
mov
pop
pop
dec
stos
add
sbb
dec
rolb
popl
dec
push
mov
pusha
les
add
cmc
pushf
les
les
ret
cwtl
adc
inc
mov
ds
push
jp
sbb
or
fcoml
rcll
dec
and
mov
pop
out
mov
push
pop
jle
sti
in
test
mov
fwait
cmp
xor
inc
push
mov
enter
js
pop
pushf
cmc
cmpsb
scas
inc
test
push
arpl
jb
cmp
orb
roll
cmp
stos
xor
jae
pusha
inc
psadbw
pushf
jne
popa
shll
popf
sarl
das
sbb
push
adc
mov
vandnps
pusha
sub
and
mov
push
cs
and
lcall
push
add
and
fimull
lds
pop
dec
shlb
adcb
repz
or
das
adc
arpl
inc
add
ret
pop
jp
add
loop
mov
or
iret
inc
lcall
movsl
sub
lock
add
xor
push
xor
hlt
and
lcall
push
sub
test
push
mov
fnstenv
jbe
aaa
jp
jge
xchg
pop
add
lcall
mov
dec
daa
sub
xchg
ds
adc
pop
adc
out
out
or
in
or
add
inc
fmuls
arpl
mov
rolb
outsb
daa
xor
jns
inc
cmc
xor
shll
mov
jne
add
add
pop
popa
out
pop
sbb
lds
aam
inc
sahf
cmp
popa
lret
xchg
lods
cmp
xchg
arpl
adc
add
cmp
and
and
call
es
outsb
mov
out
dec
cmp
lgdtl
sub
sbb
shr
enter
jp
shlb
cmc
push
inc
mov
jne
or
push
jl
fs
cld
mov
dec
mov
data16
pop
cmp
js
shrl
add
push
mov
outsb
inc
add
lds
fcmovnu
inc
mov
push
adc
pop
pop
cltd
cmpb
inc
cltd
aad
and
mov
mov
adc
fsubl
lods
scas
inc
sub
push
add
pop
cli
dec
rol
adc
adc
pop
test
fidivrs
add
outsb
invd
push
rcrb
leave
insl
push
sub
pop
gs
and
aaa
ds
or
icebp
or
push
adc
xchg
fadd
imul
orl
mov
mov
jae
dec
jns
push
test
lea
in
es
adc
outsb
movl
xor
ret
imul
stos
cwtl
aam
loop
dec
pop
sahf
aad
fimuls
icebp
add
cmp
pop
test
ss
sbb
push
inc
stos
nop
cltd
lret
add
add
rcll
add
xor
dec
loopne
jge
pop
cwtl
lret
test
outsl
fstpt
pop
dec
push
mov
push
clc
daa
jp
mov
int3
sbb
mov
clc
lods
scas
push
js
xor
sub
dec
cli
add
mov
cmp
mov
inc
dec
bound
cli
rclb
xor
adcb
sub
js
add
mov
cld
inc
enter
adc
jecxz
inc
imul
lock
fisttpll
jne
addr16
loope
test
dec
jle
sbb
iret
add
in
loopne
push
dec
add
cmp
insb
xchg
aad
cmp
in
jns
xchg
cli
imulb
mov
cli
or
mov
jecxz
or
iret
jl
xchg
push
dec
dec
js
push
out
jg
mov
push
jecxz
arpl
ret
dec
jne
mov
shr
mov
rcrl
add
dec
jg
inc
aam
pop
push
xor
or
xor
sub
dec
fwait
cmpsb
add
jo
jae
in
mov
add
int3
and
xchg
iret
inc
int3
pop
jo
or
mov
mov
or
mov
cmp
movsb
ds
push
rolb
inc
sbb
cmp
adc
jp
lea
fisttps
imul
add
sub
add
fstl
inc
mov
test
in
jmp
sbb
adc
cmp
push
cmp
xorl
cmpsb
pop
sbb
adc
pop
int3
pop
push
lret
push
mov
jbe
mov
dec
or
loopne
pop
sub
jge
xchg
mov
ss
push
mov
imul
testb
sbb
movsl
add
mov
lock
sti
pop
pushl
dec
fwait
add
push
sbb
mov
cmp
adc
stos
andb
ret
pop
mov
xlat
cmp
mov
inc
bsf
cmp
sub
mov
xchg
daa
cmpsb
pushw
nop
add
jae
sbb
jmp
movb
dec
insb
add
add
push
jns
sub
data16
jo
cmpsl
pop
push
or
fisubl
push
mov
sahf
adc
lcall
and
adc
mov
fnstenv
sahf
push
pop
add
psllq
dec
jo
ss
movsl
sbb
jae
or
mov
sbbl
sbb
jp
adc
dec
cmp
push
jecxz
aaa
mov
pop
dec
fisubs
cld
gs
or
jp
lods
sarb
and
int
push
push
push
mov
decb
jl
mov
dec
or
add
mov
inc
fwait
movsl
rorl
test
leave
outsb
sbb
inc
mov
sub
push
sub
pop
add
add
mov
adc
movsl
mov
test
cmp
sbb
mov
dec
dec
mov
sahf
mov
dec
pop
mov
dec
jno
lcall
arpl
cld
adc
inc
push
rorb
pop
shll
mov
std
fwait
cli
stc
daa
loope
rcrb
fidivl
lods
pop
pop
enter
mov
scas
sbb
aam
ss
xor
mov
scas
pop
rolb
cmp
jge
dec
mov
imul
frstor
mov
rorb
es
push
push
lret
adc
paddsb
je
test
pop
rclb
ss
repnz
dec
push
stos
in
insb
fldcw
fildll
sbb
mov
movsl
insb
ja
push
subb
lret
repz
leave
insl
xor
pop
pop
mov
scas
cli
push
xlat
fs
mov
push
xorb
push
jg
xlat
or
sbb
movsb
jb
sub
sbb
loope
das
and
shll
outsl
fisttps
inc
xor
iret
add
in
pop
gs
push
rcl
pop
and
xor
jl
or
cmpsb
or
jl
xor
xchg
add
lret
sbb
add
jne
mov
or
aaa
in
fsubr
leave
inc
stos
mov
mov
jge
mov
pop
dec
and
adcl
jns
int
xchg
pop
push
dec
jo
mov
push
xchg
sbb
leave
xchg
sbb
pop
push
xorl
es
test
fs
mov
clc
and
ret
inc
pop
aaa
fisubs
jp
add
sub
push
je
xchg
sbb
or
xchg
adcl
adc
popa
enter
mov
xor
or
in
sbb
add
scas
mov
xor
test
inc
pop
outsl
out
add
rcrl
sub
xchg
cwtl
bound
lods
cmp
mov
sub
dec
push
mov
aad
mov
sbb
and
lahf
mov
push
ret
mov
pop
lret
out
mov
andl
pop
das
jecxz
out
push
ds
mov
in
lds
sti
push
data16
sub
pop
and
xor
shl
sbb
push
dec
add
lret
jb
or
arpl
pop
fcompl
lcall
ss
lret
or
add
mov
pop
mov
mov
test
xchg
and
rcll
cs
cmp
inc
cs
push
xlat
les
fadds
iret
les
gs
xchg
cltd
test
rcl
and
add
inc
pop
mov
aaa
ret
mov
push
xchg
ds
dec
push
or
adc
mov
inc
les
and
test
push
shr
mov
mov
in
cmc
ljmp
cmp
inc
mov
mov
fmul
adc
push
daa
rolb
cld
leave
call
mov
test
icebp
jmp
mov
dec
add
fmulp
push
fcmovne
loop
call
shrb
scas
cmp
cmp
js
jne
push
test
push
sub
adcb
movsl
test
popa
outsb
jg
test
push
data16
neg
sbb
out
push
mov
jmp
and
lahf
push
lcall
sub
add
cmc
jp
pop
arpl
rolb
push
mov
push
fisttpll
fdivr
test
loopne
fstsw
jo
pop
fidivrs
inc
inc
cmp
adc
out
icebp
ds
ret
cmpsb
dec
pop
pop
cmp
out
rcrl
stc
outsl
pop
mov
cmp
mov
fcmovnu
out
pop
mov
pop
xchg
jbe
nop
inc
je
pop
stc
xor
and
cltd
shlb
sarb
mov
stc
add
scas
outsb
insl
cwtl
pushf
repnz
mov
and
and
jg
add
out
mov
aas
or
pusha
inc
mov
sbb
xchg
popf
add
mov
and
test
add
xlat
outsl
pop
adc
outsb
enter
xchg
adc
filds
inc
incl
inc
push
cs
push
xor
or
loopew
cmp
sub
pop
cmp
inc
shll
daa
mov
out
pop
loope
rorl
inc
cmp
xlat
incl
aas
lds
call
shrb
fildll
lcall
pusha
mov
dec
mov
sarb
mov
push
mov
inc
xor
mov
pop
xor
aad
cmp
or
insb
mov
mov
or
pop
insl
or
push
jo
je
xchg
cli
ds
loop
cmp
add
and
add
or
lock
inc
adc
add
and
sbb
ficompl
mov
jmp
add
pop
outsb
pop
push
les
xchg
mov
cmp
cmpsb
adc
jae
sahf
shrl
xor
push
jns
xor
fnsave
jno
jno
mov
sbbb
xchg
xlat
adc
add
rorl
sbb
pop
cmpl
out
fiaddl
imul
pop
cmp
sub
bswap
add
into
into
cmpsb
cs
es
cmp
ljmp
inc
clc
test
mov
mov
pop
jmp
les
mov
out
in
inc
mov
mov
xlat
lret
and
fisttps
ljmp
test
sbb
ljmp
aam
push
loope
stos
pop
jne
push
push
cmp
in
lea
lahf
add
and
repz
or
adc
fisubs
jbe
sbb
imul
inc
inc
adc
int
cltd
add
cmpsb
std
fisttpl
sbb
jp
push
fs
xchg
sbb
daa
loope
jae
std
test
aad
or
rorb
cmp
cmp
movsb
ss
imul
inc
mov
push
cmpsb
push
lock
push
jle
flds
xor
jnp
inc
cwtl
sub
xor
cmp
cmovle
in
xchg
xor
pop
lahf
addl
xlat
xchg
test
xchg
cmp
dec
js
outsb
xchg
pop
popf
sarb
mov
xchg
adc
sub
pop
jmp
mov
cli
negb
cli
jae
dec
out
mov
inc
shll
dec
mov
dec
lock
nop
test
and
xor
mov
sbb
dec
idivl
sarb
sub
shrb
mov
daa
push
push
mov
std
int3
into
in
loope
add
add
sbb
nop
mov
fs
popl
pop
insb
cmpl
push
sub
orl
cmpsl
mov
dec
push
xchg
or
fs
jb
sbbl
es
sub
inc
add
movsb
or
or
cli
movsb
cs
test
cltd
in
jae
mov
test
xor
lret
out
cmpsl
pop
fdivs
rcrb
add
xor
jnp
mov
testb
loope
out
sbb
call
lret
loop
jp
xchg
ja,pn
pop
jnp
lock
aaa
mov
lods
push
imul
dec
insb
push
cmp
dec
fs
sbb
add
in
or
pop
pop
cli
adc
leave
pop
ret
pushf
sub
inc
pop
mov
mov
cmc
movsb
loop
cld
shlb
push
inc
jl
inc
mov
jne
sarl
xlat
jb
fsubrs
or
pop
sbb
lea
leave
sbb
push
sbb
mov
pop
out
ss
or
push
pop
adc
xchg
adc
fldl
out
xchg
jne
in
not
push
or
sbb
jge
lret
push
stos
pusha
jmp
movsl
dec
cmp
mov
push
enter
loop
sbb
adc
movsb
pop
hlt
mov
ljmp
call
std
daa
inc
into
jnp
fsubrp
test
dec
insb
out
adc
movsl
inc
addb
push
fsubrl
jp
dec
pop
mov
jecxz
add
aad
push
les
xor
cwtl
sahf
fcompl
sub
addr16
adc
cltd
jbe
dec
mov
jo
in
hlt
das
or
lock
push
sub
xor
cmp
inc
jecxz
cmp
dec
adc
mov
xor
int3
mov
jp
out
leave
orb
cld
pop
mov
les
call
xchg
fsubl
sub
ds
popa
out
dec
in
fcoml
movsl
push
lret
pusha
or
loope
jp
aad
incl
stos
or
jmp
or
adc
or
lock
or
arpl
mov
ss
mov
mov
cltd
mov
outsb
pop
pop
jne
jnp
in
loopne
mov
xchg
mov
push
dec
xchg
mov
loopne
clc
pop
mov
adc
push
fs
jl
xchg
inc
adc
mov
popa
hlt
ror
jbe
sahf
sbb
push
arpl
adc
dec
jl
xor
aaa
in
mov
jl
jnp
test
lock
fisubrl
mov
push
pop
xchg
cmp
bndldx
cmp
mov
jge
and
xchg
push
fldcw
fstpt
mov
es
roll
cmp
loopne
int
int3
inc
or
ror
loop
mov
into
popa
mov
adc
ret
test
xchg
adc
inc
or
jo
push
mov
adc
xchg
test
arpl
push
shlb
cmp
test
mov
cs
pushf
add
pop
nop
sbb
mov
xor
cmp
mov
test
ret
nop
test
imul
jle
and
push
cmpsl
add
mov
iret
mov
mov
inc
sahf
ret
dec
les
cmc
mov
jmp
xchg
addr16
push
push
adc
pop
inc
and
mov
mov
jmp
loop
repz
pop
cli
bound
sbb
ja
jecxz
cmp
mov
lret
ret
in
imul
push
lods
lcall
inc
fcoml
cmp
dec
arpl
sbb
int3
sarb
fldcw
push
lds
jns
addr16
aaa
repnz
mov
lahf
pop
movsl
clc
inc
cmp
outsl
cli
mov
fsts
lods
daa
mov
jnp
push
popa
dec
sub
push
sahf
mov
and
orb
mov
lret
ret
xchg
sbb
or
loopne
aam
dec
test
push
mov
cmp
je
pop
into
in
push
push
mov
xchg
iret
or
jae
xchg
mov
dec
dec
mov
dec
jl
xchg
xor
in
mov
stos
int3
into
push
xorl
xor
push
rcrb
mov
inc
and
add
sub
jmp
out
push
mov
xlat
dec
sbb
push
xchg
mov
cmp
data16
bound
inc
inc
pop
lea
jno
outsb
xchg
mov
out
cmpsb
cs
lods
pop
xor
xorb
push
xchg
clc
jno
adc
scas
in
mov
pushf
sbb
adc
mov
lea
xchg
mov
cmpsl
clc
enter
into
shlb
push
ljmp
insl
cmpsl
cld
and
sbb
and
dec
andb
sbb
or
stos
jo
jecxz
push
outsl
xor
int3
add
mov
mov
adc
cwtl
lret
pop
push
scas
pop
cmp
shlb
lock
adc
pop
scas
jg
or
jne
jge
mov
inc
mov
xchg
sub
loopne
fs
lock
mov
gs
rol
and
popf
je
lret
icebp
cld
inc
rcrl
orl
out
jle
sub
dec
gs
add
jge
call
movsl
mov
and
cmp
nop
bound
cmp
leave
sbb
fbld
sarb
into
test
out
cmc
orl
pop
add
js
fadd
or
cmp
xchg
mov
push
or
fucomi
int3
sarl
shll
fcmovne
ret
cld
or
lcall
or
insb
loope
inc
mov
sbb
dec
cmp
and
gs
adc
jae
mov
loope
xor
das
notl
test
lods
inc
lahf
push
call
jo
sub
xor
lcall
xor
repnz
dec
pushf
fucom
das
inc
std
fistpl
or
mov
adc
pop
mov
icebp
inc
dec
cmp
push
popa
adc
ljmpw
mov
bound
out
in
jp
dec
fsubr
mov
sub
pop
or
mov
xchg
mov
xchg
aaa
ja
cmp
and
scas
mov
sub
mov
add
daa
add
xor
pop
pop
enter
shl
orl
pop
fwait
add
arpl
sbb
xchg
xor
inc
in
stc
loopne
stc
sub
jmp
add
add
insb
mov
inc
repz
stos
gs
xor
pusha
push
sbb
cmp
dec
jns
outsb
pop
jle
lea
sub
mov
pushf
in
leave
and
in
fldl
lea
incl
xchg
negl
out
rorl
insb
mov
push
add
jle
mov
and
in
divb
or
mov
adc
js
dec
test
pop
addl
arpl
dec
jmp
sbbb
dec
inc
cmp
jo
popa
das
je
addb
mov
and
add
add
aas
lock
and
js
adc
xchg
int3
add
insb
xchg
jp
nop
push
add
dec
cmp
aad
sbb
jae
rol
xlat
adc
ret
inc
icebp
xor
stos
es
pop
into
push
or
inc
push
mov
mov
jg
loope
mov
popa
aam
sub
insb
mov
imul
lea
sub
pop
ss
sbb
js
in
cmpsl
ja
sbb
sbb
test
dec
sbb
je
mov
adcb
sub
sbb
roll
ljmp
je
in
lahf
scas
xchg
and
outsb
inc
inc
test
fldcw
pop
dec
sahf
cmp
fiadds
sbb
mov
or
mov
mov
and
lods
adc
jecxz
push
mov
lret
pop
pop
addl
cmpl
iret
shll
push
pop
cli
xchg
mov
adc
mov
jle
negb
xchg
mov
push
mov
fbstp
pop
jns
mov
incb
cmc
adc
addl
jno
cmp
add
sub
pusha
aam
mov
pop
jmp
add
mov
or
insb
daa
filds
add
mov
jecxz
sbb
jp
fs
leave
and
adc
add
push
mov
data16
jl
inc
or
je
out
fs
pop
or
inc
cmpsb
out
mov
call
scas
mov
pop
or
jae
lea
adc
xchg
shr
pop
lahf
mov
flds
xchg
push
ds
imul
sahf
movsb
mov
testb
sub
outsb
rolb
dec
ds
xor
aam
add
data16
pop
mov
mov
xchg
cmpsb
jns
lcall
mov
mov
and
je
sub
iret
imul
inc
push
add
movsb
sti
cmp
rol
sarb
push
add
andb
shrb
push
sbb
jle
fisubs
inc
movsl
hlt
xchg
xchg
mov
inc
inc
sbb
dec
mov
dec
adc
inc
pop
adc
or
nop
push
jmp
or
or
ja
mov
rcl
je
and
bound
cwtl
test
fcompl
pop
icebp
aaa
mov
pop
cmp
and
push
lcall
mov
dec
pop
repnz
mov
sbb
sub
pop
nop
sub
into
jo
cwtl
bound
xchg
ffree
or
rorl
lret
add
jnp
rorb
aam
hlt
cmp
fdivrl
fistpl
sbb
cmc
mov
mov
clc
ret
jmp
mov
xor
and
sbb
add
pop
or
dec
rcll
stos
out
xor
mov
add
arpl
fisubrs
xchg
mov
ss
jmp
add
push
sbb
inc
hlt
jbe
flds
addr16
psubq
es
ss
jbe
push
and
add
mov
dec
dec
mov
nop
xchg
inc
daa
ja
enter
aam
int3
xchg
sub
popa
popa
into
cmp
xor
lock
sbb
and
jbe
sarl
lret
inc
test
je
aaa
test
shlb
leave
lcall
or
cwtl
mov
push
enter
sbb
cli
and
and
not
pop
ljmp
inc
dec
or
or
mov
test
pop
jb
int
jbe
and
popf
inc
dec
pop
in
push
imul
or
jb
xor
pop
lods
jae
and
decb
add
and
xor
orl
or
test
lahf
inc
jl
imul
sub
and
lret
push
mov
xchg
test
or
aas
add
and
xchg
iret
inc
xchg
and
pop
test
les
jne
sbbl
test
jns
xchg
int3
sub
fistps
rol
xor
push
xlat
push
or
xchg
icebp
add
push
xor
loop
mov
je
push
pop
stc
push
in
push
cmp
inc
out
pop
in
mov
xor
cmpsl
call
add
add
inc
fs
push
mov
jmp
xchg
mov
lods
bound
cmpsb
not
lods
jae
icebp
xchg
and
js
lret
pop
ljmp
gs
aam
jo
sub
jae
sub
cld
scas
mov
insl
test
pop
xchg
stos
addb
loop
fldcw
addl
inc
aad
movsl
adcb
add
pop
xchg
pop
sbb
jbe
and
lcall
push
mov
sbbb
pop
pushf
lods
adc
pop
mov
dec
enter
imul
sub
cwtl
leave
insl
push
sbb
sbb
add
lods
scas
adc
push
insb
aaa
lds
enter
xor
push
adc
mov
data16
add
das
testb
or
fadds
and
cmp
mov
add
insb
sbb
xchg
pusha
lods
mov
nop
aaa
mov
subb
dec
rclb
mov
jno
sub
pop
sbb
mov
jo
push
mov
adc
inc
je
adc
pop
xchg
mov
push
xchg
mov
and
fdivrl
and
mov
movswl
das
or
nop
fmuls
stos
gs
scas
imul
rcrb
stos
xchg
fxch
repnz
lahf
lock
imul
jg
and
cmp
test
aam
adc
jb
push
xchg
cwtl
xchg
push
and
pop
enter
lods
inc
adc
lret
xchg
sbb
xor
mov
lock
ret
xor
mov
scas
iret
loopne
pop
popf
loope
daa
or
add
jne
add
int
fsubl
and
popa
addl
xor
and
adc
sub
loope
xlat
aaa
push
jae
xor
push
sbb
push
and
lahf
das
inc
mov
push
ljmp
test
cmpsb
fisttpll
sbb
mov
dec
cli
add
stc
lock
dec
int3
or
scas
jne
cmp
xor
xchg
daa
in
cltd
and
mov
jecxz
sub
sahf
push
add
cs
outsb
adc
pop
ja
jnp
jmp
xchg
xor
icebp
je
nop
adc
notl
add
test
xlat
xor
int
mov
mov
in
mov
mov
inc
jo
xchg
fcomi
lock
sub
xchg
lcall
rorb
mov
and
dec
data16
push
cmpsb
scas
mov
mov
dec
dec
mov
lea
xchg
cmc
mov
popf
inc
es
mov
xchg
xchg
xchg
and
inc
das
fmuls
xchg
lcall
out
scas
cltd
push
and
adc
and
cmp
cs
jns
fsubp
aad
in
mov
lret
mov
sahf
insb
xchg
or
ret
dec
xchg
in
das
out
xor
mov
mov
inc
movsb
cmp
addr16
dec
push
sub
pop
xor
sahf
inc
mov
testl
push
xchg
lcall
std
aam
pop
sbb
mov
ss
pop
aad
mov
mov
push
push
mov
arpl
push
adc
mov
ljmp
jne
clc
test
loope
aad
cli
mov
pop
inc
pop
rcll
test
add
mov
adc
in
aad
adc
adc
nop
stos
ret
orb
xor
pop
ss
mov
scas
dec
js
add
cli
xchg
add
xor
cmpsb
cmpb
push
pop
jl
push
mov
lds
sbb
dec
repz
inc
shll
enter
mov
pop
movsl
test
jne
mov
adcb
test
es
cmp
out
icebp
mov
xor
xchg
ret
arpl
dec
add
inc
aam
mov
add
andl
fmuls
push
mov
sti
sbb
dec
jb
add
push
push
push
sub
mov
lret
dec
and
ficoml
pop
xchg
dec
inc
xchg
mov
mov
js
jecxz
mov
xlat
test
sub
or
ja
push
mov
cmpsl
xlat
aas
push
sub
adcb
mov
cli
nop
xlat
adc
jl
or
pop
jne
cmc
mov
jle
test
push
daa
sarl
xchg
sarb
and
popf
push
cmp
lea
fs
inc
daa
and
int
pop
bswap
test
jecxz
pop
sub
or
mov
dec
hlt
add
cmp
cmp
mov
mov
cmovl
ss
dec
orb
mov
lds
mov
adc
mov
nop
lea
and
push
shrl
insb
ja
movsl
int
paddsw
pop
or
dec
das
cltd
mov
pop
jbe
push
sub
jle
ljmp
cld
pusha
adc
stos
int3
dec
pop
and
loop
or
mov
adc
inc
pop
clc
jmp
cmp
xchg
lock
cmp
jge
arpl
mov
fidivrl
mov
and
sbb
repnz
and
popf
add
loop
in
into
sbb
inc
nop
data16
pushf
mov
add
mov
ss
data16
mov
and
popa
push
les
bound
sbb
mov
lcall
inc
cmp
cmpsb
dec
int3
mov
or
test
dec
fistl
cmpsl
pop
jns
pusha
jge
dec
adc
aam
jecxz
cmpsl
fistpll
dec
push
mov
test
mov
adc
aam
sub
test
test
mov
pop
je
icebp
sub
mov
jae
loopne
out
fadd
minps
fisttps
mov
mov
loop
xor
jae
sub
testl
stc
and
or
out
fiaddl
mov
and
xchg
sahf
cmp
or
jno
pop
mov
push
and
jnp
stos
xchg
shrb
daa
dec
stc
jp
sbb
and
push
xor
mov
sub
or
stc
adc
lret
sub
adc
lret
mov
test
dec
pop
scas
mov
rcr
addl
call
subb
add
mov
push
xchg
scas
push
stos
adc
sbb
xchg
mov
xor
mov
call
insl
dec
jne
sbb
fsubrl
mov
xlat
ret
xchg
lret
and
sub
sbb
in
ret
fs
pop
fldcw
or
cwtl
in
cs
jge
cmpsb
push
out
pop
push
ret
enter
subl
mov
ss
pop
sbb
leave
je
testl
movl
jle
cmc
int3
add
pop
jle,pt
push
les
cmp
mov
or
ret
fucom
add
nop
inc
sbb
sub
or
pop
int
xor
and
jle
scas
or
push
sub
popf
push
movsl
scas
loope
push
and
andb
js
ret
bound
adc
daa
sub
in
subl
das
xor
addr16
sbb
sbb
xchg
mov
lcall
dec
cmp
xchg
arpl
call
jne
xchg
roll
aam
or
cs
stos
aam
inc
sub
mov
add
or
inc
mov
push
xchg
js
push
clc
out
sub
xchg
sbb
inc
mov
fildl
push
mov
adc
or
mov
jbe
imul
push
sub
pop
xchg
push
in
test
xchg
lock
out
dec
mov
mov
add
negl
or
cmp
mov
rcll
mov
dec
enter
lret
sti
sub
mov
jb
inc
push
sbb
mov
pop
ljmp
push
xchg
and
cmp
loop
cmp
in
or
loope
xchg
fwait
sub
call
jno
lret
pusha
mov
xchg
adc
pop
je
mov
or
movsb
neg
lock
dec
mov
xchg
or
xor
adc
stos
sbb
xor
pop
addl
add
sbb
ss
jl
or
insb
mov
imul
pop
xor
jl
rclb
lea
jp
aad
ret
mov
outsl
xchg
fidivrl
cmpsl
lret
das
loopne
mov
mov
push
push
adc
dec
and
xor
arpl
or
test
repz
xor
cwtl
mov
adc
fiadds
pop
insl
xor
daa
insb
cmp
mulb
cmp
pushf
aam
daa
out
addl
inc
inc
jmp
dec
push
push
mov
lock
test
xor
fadds
pop
cmpsl
ror
rcl
in
and
add
pop
pop
push
imul
sbb
xchg
addr16
addl
xchg
nop
and
push
xchg
dec
sub
add
inc
cmp
pop
dec
sbb
ficompl
mov
xchg
jmp
adc
inc
push
pushl
pop
aaa
int
xchg
inc
and
cli
cmp
dec
lods
addr16
adc
jecxz
push
sub
test
shll
fsubl
xor
xchg
cwtl
inc
je
add
xor
push
xchg
xchg
cmp
mov
loope
xchg
adc
pop
pushf
shl
test
sbb
sbb
data16
pop
lret
insb
icebp
adc
cs
mov
daa
shrl
mov
add
pop
divl
enter
popa
sti
fcomps
mov
fisttpl
or
rcrb
arpl
in
les
cmpsb
shlb
inc
aad
and
mov
push
xchg
sub
or
popa
pop
push
sbb
push
push
aam
jmp
sar
xor
out
incb
cmp
subb
add
mov
jae
sbb
inc
test
fiaddl
bound
leave
mov
adc
or
and
imulb
inc
adc
sarb
cltd
fs
test
sbb
mov
xchg
dec
sbb
insb
sub
mov
hlt
mov
xchg
cmpsl
sbb
or
pusha
adc
inc
jb
push
mov
hlt
lds
cmp
in
test
sar
fisubrs
insb
leave
in
movsl
mov
inc
push
and
pop
and
dec
dec
mov
xchg
fcom
sbb
sub
loopne
add
dec
daa
ret
rep
jecxz
add
test
pop
dec
lods
mov
mov
lahf
add
inc
repz
cld
in
imul
dec
and
push
sbb
mov
inc
xchg
mov
jae
push
popa
xchg
ret
jbe
repz
test
push
pop
lret
or
jnp,pt
insb
into
js
and
cwtl
xchg
fadds
push
nop
movsb
pop
fists
cli
jg
pop
stos
push
sysexit
adc
push
adc
push
bound
xor
jecxz
test
mov
bound
jge
sub
mov
jmp
push
lods
jmp
or
or
mov
sub
stos
add
repnz
mov
xor
or
cltd
lahf
mov
jl
or
mov
pop
outsb
push
fnstcw
inc
xor
loopne
mov
cmp
xor
sbb
pop
in
inc
mov
dec
sbb
rcll
das
xlat
out
gs
or
call
data16
cmpsb
add
movsb
pop
jp
stos
adc
cmp
lret
inc
and
mov
loope
and
xchg
pop
add
push
xor
cmc
arpl
ljmp
pop
xchg
call
addb
and
xchg
addr16
jp
mov
adc
aad
rcl
xchg
push
ds
xchg
cmc
lahf
jp
jo
add
adc
sbb
outsl
cmpsb
enter
popf
mov
pop
inc
pop
cld
aaa
push
out
lods
lret
fidivrl
mov
xor
enter
cmp
add
push
or
pop
cmp
and
popl
xchg
sub
sbb
sbb
test
dec
fistps
jmp
arpl
pop
shrl
ljmp
call
mov
fstl
mov
cmpsb
pop
dec
sbb
add
sbb
mov
ljmp
fstl
loope
cmp
push
and
mov
fisttps
xor
push
push
mov
fs
pop
inc
je
xchg
ficompl
hlt
cltd
xchg
and
movsb
inc
test
push
shll
mov
jns
mov
mov
shlb
lds
and
mov
leave
jb
mov
cltd
sbbb
mov
test
push
jbe
les
test
pop
mov
xchg
in
jno
jo
lcall
and
insl
jmp
inc
jbe
enter
sbb
call
push
xchg
jbe
shrw
lahf
xorb
xchg
and
hlt
cmp
adc
dec
lret
cmp
pop
repz
enter
pop
enter
add
xchg
mov
push
addr16
movsb
fimuls
add
or
cmp
ds
shr
shrb
ror
ret
lahf
dec
aaa
xchg
ljmp
mov
or
loop
bound
push
inc
xlat
xor
in
out
sbb
mov
jno
out
rorl
lods
and
lahf
or
mov
pop
js
out
fidivrl
adc
or
cwtl
sub
jg
je
xchg
fstpl
mov
loope
hlt
fs
cwtl
ret
scas
and
or
mov
stc
in
popl
ficoml
arpl
and
push
and
xchg
or
jecxz
xchg
push
pop
xor
inc
rcrl
sbb
movsl
sbb
mov
push
sbb
jl
jae
std
cmp
sbb
pop
inc
cmp
fs
out
or
imul
adc
xchg
xchg
pop
adc
push
daa
call
or
cmpsb
mov
mov
mov
xor
jb
test
push
nop
mov
bound
cmpl
es
sbb
inc
fistl
sbb
or
and
stc
in
mov
jne
jb
add
mov
outsl
pop
incl
jnp
pop
in
fidivrl
rorb
out
dec
sub
jmp
out
inc
xor
pop
outsl
ds
add
adc
cmpsl
mov
xchg
lods
or
sbb
outsl
popf
cmp
xor
add
test
or
push
mov
xchg
vpperm
pusha
bound
stc
xchg
dec
xchg
lods
loop
cmpb
jg
mov
imul
jnp
sti
lods
sbb
adcb
ror
sub
into
mov
subb
daa
arpl
leave
xor
sbb
ficompl
jno
sbb
outsb
inc
inc
jae
aad
into
cmp
std
dec
std
fs
jae
cmc
add
orl
orl
insb
pop
sbb
sbb
mov
rorb
addb
pop
pop
mov
adc
and
pop
mov
fucomip
inc
and
add
pop
sbb
jp
mov
or
imul
pop
sub
inc
pop
ret
and
sahf
xchg
jns
mov
cmp
das
fstl
subb
es
rorb
mov
leave
cmpsb
jb
adcl
scas
mov
test
pop
mov
jl
inc
out
push
xchg
mov
js
push
sti
je
mov
xor
ss
dec
mov
mov
sub
push
add
test
sbb
loopne
adcb
add
mov
cmp
mov
les
popa
leave
add
adc
sbb
enterw
and
mov
mov
mov
mov
sbb
lret
sub
lahf
push
jge
adc
inc
pop
add
shlb
xor
mov
inc
jbe
cmp
xor
push
stos
pushw
add
ret
mov
dec
loopne
pop
jnp
popaw
popa
dec
add
test
push
shl
push
fs
insl
push
aaa
mov
jg
aam
jecxz
jo
movsl
inc
mov
pop
xchg
inc
and
push
mov
fstl
pop
repnz
incl
ja
xor
sbb
cmp
push
aas
or
fwait
out
or
dec
push
dec
sub
mov
outsb
cltd
aaa
and
mov
pop
testl
ret
inc
repz
jecxz
mov
and
out
push
rorl
inc
andb
roll
rol
push
les
push
sbb
das
stos
lahf
inc
mov
mov
orb
pop
dec
mov
mov
mov
push
mov
test
dec
aam
mov
xor
xchg
add
dec
in
lods
hlt
fidivrl
mov
pop
lret
add
inc
lea
cli
fiaddl
adc
dec
push
aaa
pop
pop
mov
xchg
jecxz
clc
dec
addr16
xorl
push
pop
loopne
out
int3
mul
orl
popa
popa
xor
xor
jno
clc
sbb
mov
pop
jmp
fwait
loop
inc
fists
xor
aas
adc
mov
or
clc
ret
sub
xor
mov
movsb
push
cs
and
mov
adc
mov
jns
pop
dec
adc
jno
shrl
imul
in
xor
xor
or
jp
rolb
fwait
inc
addr16
test
or
and
and
cmpl
dec
in
clc
je
fcoml
push
cmp
mov
iret
iret
add
xor
dec
jo
mov
or
lods
fadds
es
inc
jl
out
and
push
out
sbb
xchg
xor
pop
scas
outsb
scas
leave
shrd
test
mov
cmp
jp
shl
and
xorb
cwtl
popa
adc
and
xchg
aam
ret
mov
adc
pop
aas
ret
mov
ret
pop
es
push
pop
in
xchg
mov
fstps
sarb
pop
insl
mov
in
movl
rclb
test
lcall
and
inc
adc
pop
mov
fcmovb
and
xor
pop
dec
out
pop
cmp
push
gs
test
gs
je
adc
stos
fmuls
jmp
xorb
sbb
pop
aaa
add
outsb
test
jmp
shr
xchg
mov
fwait
mov
mov
dec
and
sub
in
movsb
shl
sub
divb
jnp
add
outsl
push
add
pop
outsb
inc
mov
mov
mov
shlb
jecxz
mov
mov
mov
ss
roll
pop
lahf
inc
inc
icebp
add
bound
mov
push
iret
or
add
aam
or
shrb
push
xlat
mov
popa
mov
clc
movsb
inc
mov
and
fidivrl
punpcklbw
pop
stc
push
pop
and
scas
push
mov
lods
lds
mov
loopne
aad
vmovhps
inc
js
sahf
cli
add
imul
in
xchg
mov
cmp
dec
test
bound
or
pop
je
pushf
pop
mov
push
add
cmp
mov
cli
inc
bound
pop
mov
xchg
cltd
ds
outsl
clc
pop
cvtpi2ps
smsw
and
mov
addl
imul
arpl
imul
pusha
roll
add
mov
mov
enter
and
dec
pop
fimuls
daa
test
or
add
mov
shrl
imul
adc
mov
and
into
mov
je
pop
push
lock
or
in
popa
dec
adc
imul
sbb
clc
inc
ljmp
mov
sbb
push
jp
inc
xchg
add
in
cli
fistpll
xor
sbb
movl
cmpsl
xchg
add
or
adcb
dec
pop
sahf
outsb
or
outsb
jl
pusha
sbb
rclb
cltd
stc
sbb
push
ja
push
push
xchg
cmp
out
movsl
fwait
xor
jb
sub
inc
or
fmuls
test
jbe
pop
sub
pop
sti
jle
push
imul
cltd
int3
pop
aaa
fildl
xchg
lret
lea
movsb
aam
scas
inc
ret
mov
rolb
dec
js
jmp
and
rorb
xchg
mov
cmp
hlt
adc
dec
cwtl
int
aad
pop
lock
stc
xchg
cmp
xchg
mov
daa
sbb
notl
mov
out
mov
fbld
lods
fcoml
mov
gs
fimuls
sub
xchg
lea
int3
daa
jp,pt
mov
jo
add
pusha
orb
add
insb
aas
bound
inc
push
and
hlt
rclb
xlat
add
jecxz
pop
sti
pop
xor
call
inc
stc
repnz
xor
popf
inc
addr16
in
jae
mov
dec
rcrb
sbb
cltd
inc
push
add
loopne
outsb
adc
sub
repnz
rcl
push
stos
xlat
clc
insb
orb
stc
adc
jecxz
lcall
sub
and
mov
cmc
popa
dec
mov
cmp
test
fwait
inc
adc
repnz
adc
mov
mov
aas
and
mov
adc
ja
add
ljmp
sub
rorb
or
cmp
mov
sub
sahf
rcll
mov
pushf
add
loop
add
out
dec
mov
or
aam
icebp
in
and
jl
popa
pop
iret
jecxz
cwtl
inc
les
mov
repnz
jmp
jmp
aaa
inc
jg
pusha
cmpsb
ljmp
ss
push
mov
neg
lock
push
and
mov
sub
into
and
pop
push
adc
jecxz
mov
mov
or
adc
aam
cmp
sub
push
leave
and
adc
push
push
scas
dec
das
fs
dec
or
push
inc
fcoml
aas
adc
pop
loop
hlt
leave
test
xor
in
push
js
test
push
xor
jl
cmpsb
or
rcr
or
test
pop
fldcw
xchg
popa
xchg
scas
adc
cmp
addl
dec
sub
scas
pushf
push
mov
outsb
xor
mov
lcall
imul
add
ret
push
pop
inc
ja
lahf
mov
je
out
inc
fldenv
mov
xor
lds
push
jne
into
lods
loop
inc
mov
dec
mov
test
mov
adc
jl
rcl
xchg
fisubrl
sarb
sub
nop
in
inc
incl
daa
ds
dec
ja
jecxz
call
out
mov
bound
jl
lods
arpl
adcl
xor
je
sbb
icebp
cmpb
adc
dec
jae
popa
and
xchg
mov
seta
ja
das
mov
in
and
sub
adc
clc
xor
mov
push
adc
add
push
bound
shlb
push
test
mov
sub
imul
aas
cltd
lea
push
sbb
mov
rorb
and
pop
fdivrs
ljmp
scas
call
cmpsb
fs
or
jbe
adc
or
lods
sub
movsb
sbb
sbb
xor
les
jo
imul
int3
cmp
jmp
aam
and
fiadds
sbb
lds
inc
adc
push
es
jbe
xchg
push
mov
ljmp
test
mov
addr16
pop
arpl
outsl
cmc
or
pop
mov
fisubrl
jns
xor
sbb
leave
cli
push
rclb
daa
inc
add
jo
push
andl
dec
jns
mov
or
js
sar
cmp
push
mov
and
push
loopne
into
lods
shrb
sub
aam
cmp
shlb
jp
jbe
sbb
insb
fs
mov
jge
jecxz
repnz
es
pop
jne
daa
ret
sahf
add
into
sbbb
pop
adc
inc
mov
adc
pop
ljmp
pop
cld
fsubrl
cli
scas
out
lock
push
andb
or
jmp
jmp
insb
add
push
push
push
push
cmovle
stos
addr16
xor
and
cmp
dec
pop
and
mov
jmp
dec
and
lret
add
pop
xchg
incl
addr16
or
shld
imul
insl
adc
test
mov
add
scas
fdivr
clc
test
push
push
ljmp
dec
push
jle
test
and
jecxz
into
xchg
cmp
stos
ret
loope
add
data16
inc
ds
fistpl
clc
stos
xor
and
inc
fldcw
je
xchg
xor
rcrb
mov
xchg
jl,pt
mov
and
setae
inc
jbe
movsb
outsb
bound
lahf
into
cwtl
sub
or
mov
pop
adc
jno
mov
fdivr
sarb
mov
and
mov
inc
aaa
out
add
or
jo
mov
mov
imulb
jge
es
clc
cmp
mov
adc
xchg
mov
mov
inc
push
sub
push
mov
inc
insb
lds
pop
aam
pusha
repz
jb
fs
mov
push
mov
into
gs
sub
ds
sbb
lcall
mov
xchg
cmp
inc
stos
and
daa
mov
icebp
out
ds
mov
and
sub
movsb
loop
adc
sub
shl
adc
lock
mov
sbb
sub
iret
test
inc
pop
jbe
ss
cmpsb
jb
mov
sarb
setg
enter
xchg
sub
out
push
and
and
xchg
mov
jne
ljmp
fcmovbe
ljmp
xchg
cld
es
pop
adc
addb
sti
arpl
aad
fstps
inc
cld
inc
push
repz
dec
in
mov
dec
movsl
dec
test
gs
or
xlat
fs
daa
jecxz
fs
fdiv
push
stos
test
cmc
popf
lret
call
or
sub
test
lods
pop
aaa
clc
mov
sub
pusha
test
adc
mov
in
push
cwtl
sti
data16
pop
adc
ret
and
imul
shlb
jmp
mov
outsl
push
xlat
ljmp
mov
mov
xchg
push
mov
push
pop
mov
and
pop
pop
pop
adc
xor
cs
in
push
add
sub
xor
lock
test
lret
aad
jb
ret
jno
sbb
push
xor
jb
aam
and
cmp
arpl
mov
or
adc
lcall
cmpsb
push
ja
dec
adc
jg
cs
arpl
push
mov
cmp
into
pop
pop
adc
lret
js
inc
push
roll
pop
pusha
jmp
leave
sahf
or
sbb
fxch
lock
repz
addr16
lcall
push
jb
ret
jp
mov
inc
dec
xor
mov
test
dec
test
xor
and
sbb
or
mov
adc
xor
hlt
mov
pop
jl
add
pop
push
fcmovnbe
sbb
push
dec
mov
movsl
mov
outsl
arpl
mov
outsb
or
into
push
loope
mov
cmp
inc
stc
push
xor
outsb
dec
sub
jae
pop
pop
mov
pop
call
pop
insb
sub
sbb
insl
jnp
pop
icebp
dec
pusha
lods
jp
rorb
out
test
cwtl
sbb
andl
popf
orb
pop
jo
dec
aaa
and
cltd
xor
orl
andb
mov
stos
scas
movsb
dec
mov
push
les
orb
mov
mov
aaa
loop
pop
xor
dec
and
add
aaa
dec
inc
pop
pop
mov
push
pop
xor
jo
js
dec
and
fistpll
mov
dec
out
cmpsb
xchg
into
pop
loopne
jge
inc
dec
dec
or
inc
pop
sbb
test
ficoms
ja
into
out
adc
xorb
push
repz
cmp
push
mov
addl
lcall
mov
mov
adc
cmp
aaa
sub
xchg
and
mov
test
cs
jno
mov
cmp
push
std
and
add
pop
ret
jne
inc
push
push
mov
inc
cs
orb
push
fstl
adc
fwait
push
or
push
mov
inc
pusha
loope
loop
cmp
sbbb
push
push
jp
lcall
push
imul
fistl
add
cmp
mov
xor
imul
int
test
mov
cmp
push
add
addr16
jge
ret
push
test
ds
dec
mov
pusha
imul
test
push
repnz
stos
test
cs
pop
xorl
jg
stos
cmp
popa
inc
mov
xchg
push
adc
dec
outsl
push
jl
sbb
add
jno
movsb
mov
adc
dec
cld
orb
mov
mov
mull
jne
xchg
adc
iret
xchg
push
rcll
and
aam
mov
test
jl
mov
rolb
in
loope
dec
sbbb
xchg
mov
int
inc
out
cmp
out
mov
lea
bound
out
in
loope
fisubrs
scas
imul
mov
and
xchg
cwtl
lods
add
push
rcrb
daa
sbb
popa
test
loope
outsl
mov
push
push
jge
and
cwtl
inc
lods
adc
call
inc
add
je
rcll
mov
shlb
mov
lods
scas
mov
mov
mov
out
xchg
insb
ret
push
xchg
rcl
inc
out
shll
es
lahf
incl
std
cmp
inc
adc
aad
jnp
dec
adc
mov
mov
iret
sub
popf
lcall
or
cmp
addr16
inc
jp
or
test
lods
rclb
imul
cmpsb
fstps
daa
mov
iret
mov
test
insl
fwait
jmp
dec
fwait
push
add
loope
adc
adc
test
bound
sbb
or
push
stos
pusha
aam
loopne
jae
and
scas
cmp
xchg
rolb
push
adc
add
out
loop
popa
stos
pand
or
mulb
xor
push
dec
pusha
adc
sbb
out
cli
cli
pushf
ret
adc
dec
imul
mov
loope
rcll
pushf
dec
xor
or
mov
jmp
lock
or
sub
sbb
xchg
jno
repnz
fs
and
and
arpl
loope
fldl
fsubrs
add
imulb
adc
dec
daa
out
and
xchg
sbb
cld
xchg
orl
mov
es
mov
xchg
das
jb
movsb
pop
hlt
inc
cmp
lahf
mov
scas
or
pop
pop
jle
inc
add
pop
adc
add
repz
int
push
rclb
int
les
jl
hlt
dec
stc
lods
cmp
push
xor
mov
out
sub
repz
leave
call
mov
ja
sbb
mov
lock
ds
cmp
ds
add
nop
fdivrs
imul
xchg
into
xor
mov
mov
sbb
dec
cwtl
sub
mov
add
in
pop
inc
dec
jle
aam
aad
ficomps
loop
outsl
mov
mov
ss
fsubr
ja
inc
rorb
and
and
push
adc
inc
ja
inc
cmp
daa
aam
inc
adc
pop
insb
push
aam
dec
adc
clc
aaa
fucompp
fdivs
adc
fcomps
cld
in
push
or
dec
cmpsl
in
bound
inc
xchg
ljmp
jno
cltd
test
mov
add
es
xor
or
mov
or
mov
dec
push
dec
loope
jne
sbb
lea
dec
cmp
jae
mov
insl
xlat
imul
jle
dec
mov
cmpl
pop
inc
pop
push
push
mov
lcall
loopne
popf
adc
xchg
mov
lret
das
jge
xor
push
jb
sub
mov
sub
lret
push
icebp
stc
sub
andl
es
adc
out
sub
cmc
mov
xchg
inc
lds
cmp
lea
adc
ljmp
push
push
mov
scas
mov
xor
sarl
jbe
pop
mov
sti
stos
pop
aam
jo
shll
les
daa
mov
fs
jmp
or
insl
popa
mov
inc
cmp
ds
fstps
scas
pop
jecxz
push
movsl
sti
mov
lahf
into
add
xchg
icebp
sub
adc
and
fsts
clc
test
fdecstp
sbb
orb
mov
mov
out
mov
mov
int3
test
arpl
pop
fcmovne
jb
push
ret
test
mov
cmpsl
xchg
outsb
xchg
ret
mov
xor
cmp
pop
ja
jg
and
mov
fistl
push
add
mov
xchg
js
test
xor
sbb
xor
xor
mov
pop
push
mov
andl
fsubl
cmc
pop
outsb
xor
movsl
ljmp
data16
push
loop
in
neg
out
sub
test
cmp
std
jl
add
in
dec
test
and
enter
sbb
mov
scas
lret
jecxz
adc
adc
mov
stos
inc
inc
insb
jle
mov
insb
in
clc
movsb
adc
sar
fwait
inc
sbb
aam
or
bnd
adc
adc
movsl
push
pop
add
fcoml
ss
push
mov
icebp
push
lods
mov
inc
test
scas
pop
jl
rcll
outsb
aas
aaa
js
and
pop
pop
jg
jbe
cmp
mov
mov
adc
lods
mov
sahf
test
jo
push
jne
dec
jp
out
mov
pop
xor
sub
imul
fstpt
pushf
loope
mov
adc
mov
inc
stos
sbb
stos
mov
sbb
mov
pop
pop
das
andb
pop
mov
pop
mov
icebp
xlat
aam
mov
movsb
xchg
cmp
adc
inc
push
sbb
add
inc
movsl
push
inc
rcll
cmp
and
out
fisubrl
pop
xlat
cwtl
push
inc
pop
pop
in
loope
pop
dec
addr16
stc
pop
sbb
out
or
lds
add
mov
push
mov
fiadds
cmp
mov
adc
inc
fmull
stc
pop
xchg
pop
cmpsb
popa
add
call
pop
or
adc
repnz
lock
idivl
sbb
and
movl
inc
and
xchg
hlt
mov
test
dec
imul
insb
sbb
mov
or
mov
sbb
dec
xchg
loope
js
neg
sub
inc
int
lods
repz
mov
jle
imul
pop
iret
ljmp
scas
push
inc
mov
arpl
imul
xchg
push
imul
ss
cs
notb
repz
outsb
xor
or
in
inc
or
inc
inc
sarb
in
add
icebp
mov
dec
rorl
push
add
daa
int
imul
adc
pusha
push
dec
dec
mov
sub
std
test
fwait
mov
add
xor
mov
in
test
mov
mov
cwtl
sbb
sbb
push
inc
push
xor
sahf
pushf
push
mov
clc
pop
xor
jno
rol
mov
sarb
or
or
movl
sbb
push
sahf
in
clc
xchg
and
cwtl
dec
sub
shr
mov
cmp
subl
lea
mov
int
in
cs
adc
les
mov
testb
int
mov
rcll
or
pop
fcomps
enter
mov
loop
fiaddl
mov
gs
aas
or
daa
push
mov
outsb
push
lods
adc
adc
cwtl
push
adc
adc
loop
in
pusha
adc
sbb
inc
cmp
sub
jno
add
int
pop
cwtl
clc
inc
push
test
mov
movsb
mov
or
adc
push
andb
cmpsb
xchg
js
pop
lahf
mov
out
pop
adc
xor
xor
cmp
xor
push
lock
outsl
in
stos
cmp
add
jb
loope
inc
aas
in
fsubs
or
mov
push
mov
cmp
sub
outsb
iret
add
xor
lahf
mov
xchg
push
mov
inc
push
add
in
and
icebp
pop
mov
xchg
cmp
push
jecxz
jnp
cmp
add
in
loopne
jne
dec
mov
add
add
jecxz
cmp
popa
aad
add
and
repnz
shlb
adc
mov
scas
mov
sub
mov
xchg
jo
or
lcall
inc
shll
imul
jae
aam
mov
push
cmp
lock
jnp
outsb
mov
test
dec
jnp
adc
les
ficomps
cmp
adc
sub
adc
dec
inc
les
dec
mov
xlat
sub
xor
mov
fsubrs
mov
mov
xchg
les
add
lahf
push
in
xchg
sub
jp
sahf
fcmovb
imull
and
xor
jne
mov
and
xorl
outsb
ljmp
ljmp
inc
or
jno
xchg
aaa
jb
outsb
push
in
rcr
adc
xchg
test
add
sbb
adc
ficoml
bound
dec
jp
cmp
mov
lea
mov
adc
or
imul
fs
add
inc
das
sub
jecxz
sub
sbb
fwait
popf
shrl
mov
in
outsl
rcrb
inc
rolb
xorb
loop
and
sbb
pop
mov
add
push
pop
cli
fistpl
jle
mov
testb
es
rcrb
mov
mov
jmp
movsl
test
sbb
sub
notl
cmc
dec
shrl
ficomps
sub
das
lea
cmp
sbb
pop
jl
xchg
dec
mov
fwait
sbb
dec
xor
mov
movsb
add
cmc
xor
nop
inc
xor
jno
sbb
xor
nop
dec
sahf
cli
push
pop
lods
sbb
test
xor
pop
das
mov
dec
cli
movsb
xchg
mov
sub
cmp
push
mov
jae
jmp
push
mov
cmpsl
aad
aad
xchg
jmp
mov
push
xlat
dec
pop
clc
dec
daa
jo
lret
and
inc
loopne
loopne
inc
mov
fs
mov
std
sub
jb
ret
testl
cmpsb
push
bound
test
jne
lods
add
or
dec
je
jp
insb
mov
mov
js
mov
mov
or
mov
pop
mov
xchg
test
and
mov
sub
inc
and
dec
and
repz
iret
push
fcompl
pop
outsb
dec
push
fisttpll
test
mov
ja
pushf
in
xor
adc
pop
popa
ja
inc
xlat
in
out
or
mov
pop
jge
sub
sub
mov
pop
jbe
push
xchg
xchg
ja
fldenv
test
xor
push
xor
mov
incl
or
imul
jg
dec
dec
mov
mov
mov
cmp
pop
daa
fstpl
mov
and
mov
movl
mov
or
aad
test
and
mov
xchg
pop
or
fwait
test
adc
loope
loopne
pop
xchg
scas
rcr
mov
inc
into
pop
xor
loopne
sub
insl
fucomp
fs
sub
lcall
pushf
dec
repnz
packuswb
jnp
or
mov
call
daa
mov
sbb
sub
js
and
mov
xchg
cmp
ja
push
mov
cwtl
push
add
xor
outsl
add
or
jbe
inc
and
inc
ficoms
xchg
push
fidivs
stos
cmovl
xchg
ror
lret
inc
and
sub
xchg
dec
add
shrb
jmp
and
mov
jns
rclb
xorb
jecxz
and
xchg
pop
mov
cmpsb
and
pop
test
bound
xchg
push
lret
cmpl
mov
fisubl
mov
rorl
cld
dec
inc
aad
inc
push
mov
mov
cs
mov
push
jmp
jge
movsl
and
mov
sahf
xor
push
sbb
aaa
outsb
inc
stos
mov
mov
lds
lret
adc
or
adc
or
orb
jmp
or
xor
push
mov
clc
cwtl
xor
push
mov
rcll
clc
icebp
test
idivb
cmp
out
in
shrl
in
or
test
rcrb
mov
mov
out
xor
fwait
push
add
jbe
add
sub
mov
popa
lahf
loop
xchg
orb
jmp
xor
push
in
cmp
mov
xchg
push
dec
pop
loop
addl
mov
dec
es
add
mov
mov
push
inc
and
adcb
xlat
dec
scas
add
sbb
push
push
mov
inc
add
movsl
outsb
dec
add
test
add
jp
lret
in
dec
adc
call
pop
cmp
int3
mov
ret
inc
bound
repnz
push
insb
sbb
sub
std
scas
mov
ds
xchg
xor
lahf
xchg
adc
sbb
pushf
mov
jge
lret
out
jb
andl
mov
cmpb
out
and
rcll
mov
sub
inc
push
or
pop
push
test
lcall
sub
dec
leave
aad
jp,pn
in
jnp
call
imul
data16
push
adc
inc
mov
and
sub
into
fdivrl
mov
xor
popf
fsubl
orb
add
adc
mov
push
pushf
push
js
jno
mov
shll
sub
je
rcrb
outsb
mov
add
int
loope
inc
mov
cld
sub
movsl
mov
pop
loop
add
adc
push
int
inc
add
test
mov
add
inc
ljmp
or
mov
add
insl
sub
js
mov
adc
lods
jbe
scas
mov
lret
test
ret
pusha
inc
notl
lahf
mov
outsl
or
sahf
repnz
dec
jne
into
inc
sti
jnp
cli
mov
aaa
jo
push
lock
lods
mov
push
sub
cmp
pop
aad
in
jmp
add
mov
push
mov
jo
xchg
xchg
insb
mov
jl
negb
shlb
mov
mov
lea
mov
xchg
aaa
loope
divb
mov
ficoms
mov
pop
cmc
sbb
ds
imul
loopne
andb
push
ss
cmp
lret
pop
or
inc
loopne
clc
popa
mov
pop
gs
or
jle
test
push
lock
or
shl
and
push
cmpsb
pop
add
sub
int3
jnp
fwait
cwtl
or
mov
loope
sbb
bound
xchg
sub
adc
cltd
out
xor
pop
sbb
mov
mov
xor
arpl
xchg
pop
jg
add
mov
je
jae
cld
and
arpl
stos
int3
inc
push
mov
cmp
inc
test
pushf
lret
or
mov
or
repz
in
xor
xlat
lret
mov
inc
xchg
inc
jo
shll
xchg
xor
mov
pop
adc
fcomp
sub
out
dec
loop
sbb
sti
or
adc
push
jbe
mov
xor
dec
test
lret
aas
mov
mov
mov
cwtl
rcll
rorb
add
mov
aaa
popf
pop
xor
add
das
mov
fiaddl
pop
gs
add
stos
cs
dec
imul
movsb
pop
lret
lea
andb
sub
dec
lea
and
mov
push
inc
jmp
stos
inc
push
push
cmp
rorb
addl
js
sbb
push
mov
outsl
adc
and
cmp
mov
lret
pop
and
mov
lods
mov
call
push
punpckhbw
mov
gs
je
mov
mov
jge
xor
dec
lcall
loop
repnz
pop
cmp
adc
icebp
int
pop
inc
mov
cmp
es
imul
cmp
int
jmp
pop
fildl
outsl
insl
push
add
or
jbe
nop
or
adc
rcrb
sahf
or
ljmp
lea
xor
sbb
and
jmp
ret
mov
xor
jmp
jno
add
lods
sbb
shrl
push
jl
mov
imul
gs
ffree
pop
call
test
test
pop
and
inc
loopne
push
shlb
mov
mov
lds
fimull
inc
inc
cs
xor
nop
cmp
faddl
adc
add
bswap
pop
adc
mov
xor
sub
outsb
stc
mov
mov
add
in
not
adc
mov
ret
scas
xlat
loope
mov
push
or
dec
adc
mov
lock
aad
enter
sub
xor
aam
pushf
push
mov
push
mov
es
inc
cmp
scas
dec
cmp
and
mov
repz
test
popf
add
inc
pop
cmp
inc
sub
bound
jl
xorl
loop
jo
out
adc
out
add
and
xlat
jbe
xor
sbb
cs
dec
push
dec
xor
movsb
jp
shlb
cli
inc
cmc
fwait
adc
inc
divb
xor
lods
daa
iret
paddb
addr16
xchg
cmp
xor
clc
roll
or
xchg
nop
or
out
add
bswap
das
roll
sbb
loope
bound
orb
test
cmpsb
cs
lcall
mov
lds
xchg
hlt
xchg
mov
inc
or
repz
data16
lock
pop
aam
cwtl
sbb
and
jge
popa
mov
adc
cmc
sbb
ss
push
inc
mov
mov
inc
pop
rcrl
push
and
lods
push
jb
lret
cmp
or
outsb
nop
mov
mov
push
fwait
mov
push
dec
mov
loope
rorl
adc
or
movsb
pop
cmp
jae
subl
push
aas
cmp
mov
mov
aad
sub
testb
cld
add
movsl
or
gs
mov
rcl
out
xchg
cmc
adc
movsb
hlt
outsl
adc
pop
out
insb
xor
stc
adc
or
dec
pusha
add
repnz
add
or
rcr
xor
mov
cmp
xchg
mov
sub
or
push
ljmp
and
push
lcall
and
dec
jnp
inc
adc
xor
mov
xor
pop
pop
subb
shrb
cwtl
notl
mov
je
leave
out
inc
call
jmp
push
test
nop
xchg
or
in
lea
push
pop
cmp
ret
sti
cli
mov
pusha
dec
mov
in
sub
je
mov
ljmp
xor
clc
outsl
add
add
or
jle
imul
mov
jae
fmuls
dec
fisubrs
pop
lock
mov
mov
mov
xor
cmp
sub
in
dec
fisttpll
test
mov
add
adc
lds
jb
enter
xchg
out
or
insl
cmp
and
and
mov
andl
pop
jp
and
rcrb
mov
mov
inc
fiaddl
fstpl
mov
or
xorl
and
pop
add
inc
ja
shll
sub
pop
test
lret
iret
cmp
cld
mov
leave
popa
or
shrb
imul
mov
jnp
jno
inc
sbb
pop
jmp
or
aam
arpl
aad
lock
outsl
dec
pop
lret
cmp
hlt
sahf
fadd
push
add
dec
imul
pop
std
and
in
ret
sub
cmpsl
jmp
dec
or
push
and
das
push
or
sub
int
je
add
pop
mov
sbb
dec
not
lock
cld
fdivl
gs
xchg
fstpl
or
cmp
fwait
call
insl
pop
pop
cli
lcall
daa
adc
jmp
ljmp
mov
xchg
and
pushf
in
inc
leave
cltd
mov
jge
xchg
outsb
sbb
ss
loop
bound
sbb
mov
rcrl
or
stc
inc
inc
les
pop
cmp
pusha
add
or
push
inc
push
adc
scas
fstps
sti
inc
leave
fimull
sbb
ljmp
pusha
push
jno
sbb
mov
insb
sbb
mov
jno
nop
pop
jb
jle
and
cmpsb
lock
out
notl
xchg
out
rclb
cwtl
pop
sbb
loopne
hlt
dec
popa
mov
adc
data16
mov
out
aaa
out
jecxz
pop
mov
add
mov
lock
rcll
jae
out
mov
xchg
lcall
jno
jne
jno
xlat
popa
cmpsl
mul
inc
cmp
and
push
cmp
mov
jecxz
pop
adc
int
lods
pop
out
daa
sub
jo
mov
and
sbb
mov
or
test
mov
inc
dec
cmc
std
std
ljmp
mov
popa
xchg
icebp
movsl
loop
or
push
test
hlt
out
pop
shll
aaa
adc
or
sub
dec
mov
gs
inc
push
je
adc
jmp
or
iret
popf
or
js
dec
push
out
in
lods
or
inc
arpl
jge
and
sbb
push
or
pop
jb
jbe
add
mov
in
and
aad
push
lahf
push
arpl
jmp
mov
scas
xchg
pop
cmp
addr16
cmc
mov
cmp
cwtl
call
test
in
cmp
ljmp
jmp
xor
mov
outsb
shlb
and
mov
out
loopne
mov
stc
xlat
dec
mov
fsubl
pop
sub
lret
or
dec
sbbl
movsl
fstl
and
call
sub
cmp
push
inc
add
xchg
cmp
adc
add
aam
sbb
cmp
xchg
mov
negb
jp
sbb
xchg
fistl
mov
adc
sub
cmp
xchg
xlat
shr
leave
lock
pop
xor
das
leave
pop
jp
jmp
andb
test
pusha
movsl
dec
and
push
jne
inc
mov
stos
inc
jne
jge
ljmp
cmp
mov
das
jo
mov
cmpsl
das
mov
sub
loopne
mov
jecxz
adc
scas
sti
mov
mov
pop
mov
mov
cltd
mov
popl
iret
push
push
js
iret
in
jle
insl
push
sbbb
xor
add
lahf
mov
and
xor
or
push
push
insb
ds
loope
les
jns
dec
clc
add
mov
mov
orl
or
fisubs
enter
sbb
sbb
push
sbb
sbb
addr16
rorl
sub
fmuls
lock
dec
out
inc
xor
sarb
push
ss
xbegin
loopne
shr
aaa
test
inc
enter
mov
pop
int3
jne
sti
mov
xchg
fcmovnu
lcall
add
xchg
jo
cli
and
clc
test
mov
aam
or
push
subl
js
fxch
loope
mov
das
sbb
xchg
lret
popa
pop
call
mov
sbb
pop
mov
jns
mov
push
mov
mov
jb
xchg
or
fdivrl
xchg
out
incb
in
push
out
jle
daa
fisubl
xchg
xchg
out
add
cs
sbb
ds
adc
cmp
xlat
cld
sar
decl
popf
cmp
int3
lock
push
or
sub
dec
mov
or
xchg
test
add
mov
cmp
cli
mov
lret
adc
jmp
stos
and
jecxz
incb
push
and
or
pop
out
fs
test
mov
cmpsl
cli
sbb
in
in
filds
fadd
cmpl
test
push
fistpll
call
cmc
aam
out
popa
adc
std
jecxz
stc
popa
add
inc
push
ret
aaa
int3
and
pop
mov
xchg
or
hlt
inc
mov
ret
stos
inc
nop
in
dec
sbbl
inc
adc
ret
mov
or
mov
lret
push
or
in
mov
adc
popf
jb
add
adc
cs
jbe
ljmp
add
lea
jge
dec
ja
push
sub
hlt
and
mov
dec
lods
push
lret
mov
mov
pop
cmpsb
fs
cmp
adc
push
adc
insl
dec
stc
mov
inc
adcb
repz
and
rcrb
sbb
sti
push
push
pusha
mov
outsb
mov
add
data16
inc
sub
iret
dec
mov
int
pushf
mov
sar
and
and
movsl
xchg
dec
leave
lods
sub
rorb
or
mov
cli
or
sbb
and
sbb
fidivs
sbb
xor
out
add
add
cmp
pop
inc
adc
push
rclb
mov
js
jns
jl
stos
pop
cmp
adc
mov
jo
pop
cmp
nop
mov
imul
jae
adc
lea
push
jne
ja
loop
lods
mov
jp
rorb
jmp
adc
push
mov
rcrl
fnsave
outsl
jmp
movsl
pop
jge
divl
addl
lret
and
mov
icebp
xchg
iret
movsl
fwait
mov
cld
cmp
sub
add
xor
test
pop
push
pop
push
test
testl
jmp
xor
xchg
lcall
icebp
out
jo
xor
orb
js
mov
add
sbb
jns
push
mov
dec
add
daa
mov
sub
psubusw
dec
sub
or
add
sbb
cmp
xor
incb
xchg
test
mov
jbe
push
cmp
pop
and
xor
or
push
and
adc
inc
lods
sahf
inc
xchg
push
mov
test
or
dec
jmp
mov
jmp
sbb
add
xor
add
pusha
inc
adc
or
fsub
jmp
pop
lcall
pop
bound
fdivr
xchg
push
sbb
mov
mov
leave
jp
insb
mov
scas
dec
rolb
loope
push
je
or
inc
cld
lods
sbb
xchg
jns
sub
inc
push
lahf
push
push
cmp
lea
xchg
aaa
add
cmp
inc
stos
cs
test
inc
mov
xchg
and
push
call
xchg
fidivs
jbe
inc
int
mov
mov
lret
lret
test
pop
in
mov
loopne
fsubr
add
sub
repz
fisttpll
adc
cmp
adc
insl
cmp
sbb
icebp
or
imul
add
clc
jp
xchg
xor
and
jbe
pushf
gs
testb
pushf
lods
inc
xor
jge
ljmp
sbb
repnz
adc
mov
sub
dec
xor
fisttpll
ss
inc
insl
fildl
fidivrs
jge
imul
sbb
pop
fmuls
jmp
mov
add
bound
inc
and
fbstp
xchg
sbb
mov
cld
xchg
lret
add
inc
xchg
adc
adc
cmp
in
push
les
andl
cs
mov
cli
cs
enter
data16
addr16
mulb
test
mov
dec
clc
push
fs
pop
cmp
les
jp
xchg
inc
mov
into
inc
inc
xlat
sub
dec
mov
ja
add
negl
hlt
bound
mov
xor
jno
addl
push
cmp
mov
adc
cltd
jne
mov
fdivs
adc
lods
mov
mov
test
in
jbe
push
dec
jp
mov
add
iret
lret
sbbb
mov
orb
push
out
push
ja
mov
shll
shll
test
inc
jo
test
ret
and
and
push
and
cmpsb
imul
test
or
inc
push
pop
std
dec
test
pop
cs
in
cmp
push
mov
and
cmp
xchg
fwait
orl
adc
mov
icebp
sbb
jle
and
pusha
add
lcall
dec
xor
insb
add
xor
call
cmpsb
push
test
js
add
movsb
and
jns
call
hlt
push
int
mov
jnp
inc
mov
test
xchg
rcr
mov
out
repz
adc
mov
or
ret
test
call
pushf
rcll
ss
or
adc
icebp
and
popf
add
and
rorb
addb
addr16
cmpsl
daa
mov
mov
int
adc
es
mov
in
sub
aam
and
dec
out
xchg
jne
or
dec
mov
push
das
add
push
push
inc
xchg
inc
rolb
mov
sub
adc
push
pop
dec
insl
ds
shl
mov
cmp
movsb
idiv
jnp
data16
gs
mov
loop
mov
clc
sub
add
test
js
mov
mov
jl
stos
mov
daa
mov
pop
fisttpl
xchg
stc
dec
pop
push
call
sub
mov
xor
fcompl
mov
or
or
inc
stos
mov
repnz
rclb
imul
arpl
orb
rcll
ror
mov
pop
dec
add
jecxz
test
test
cwtl
andl
ret
popa
stos
scas
ds
mov
or
jo
fcom
cmp
std
mov
shlb
shr
or
pop
or
push
sarb
dec
daa
mov
imul
je
sbb
lret
mov
inc
iret
xor
inc
sub
call
ja
mov
dec
lods
lret
dec
jle
mov
push
or
test
cmp
repz
cmc
jne
jmp
icebp
add
mov
jge
push
mov
sub
lret
mov
jo
and
fcmovnb
std
loop
dec
rcrb
push
sbb
jns
mov
mov
sbb
mov
sub
sbb
in
xchg
sbb
dec
stos
push
and
insl
sub
pop
pop
mov
and
add
cmp
sub
xchg
jne
mov
push
emms
mov
loop
dec
aam
mov
pop
leave
sbb
mov
mov
dec
mov
inc
adcb
and
frndint
cltd
add
pop
jbe
sub
jle
push
jmp
stos
mov
test
js
subb
iret
or
mov
ret
loope
notl
mov
add
mov
lret
adcl
add
jmp
dec
in
mov
mov
sbb
outsb
lcall
jle
lea
inc
loop
fsubrs
in
jmp
sahf
adc
addl
jge
daa
dec
dec
cmpsb
mov
out
fdivrp
cmp
mov
testl
fnsave
or
loope
mov
inc
or
cltd
aam
jae
outsl
sbb
addr16
pop
repnz
inc
arpl
cmp
int
test
aad
add
cmp
pop
push
in
mov
loopne
enter
and
sahf
fcompl
mov
xchg
dec
js
cmc
push
fwait
addr16
mov
lret
shlb
dec
pop
cli
fxrstor
lds
xchg
cmpl
push
lods
jne
out
or
subl
out
push
pop
xchg
pop
push
cmp
out
push
xchg
mov
or
ficoml
mov
cwtl
insl
lods
cld
js
neg
aas
xor
or
dec
rolb
jmp
leave
in
inc
and
mov
jno
xchg
mov
mov
dec
ljmp
push
push
pushf
inc
jle
divl
xlat
cli
cmp
outsb
cmpsl
push
scas
xchg
mov
mov
cmp
mov
sbb
dec
pop
out
or
mov
mov
in
stos
xor
inc
adc
and
dec
cmpsl
jp
and
mov
mov
in
dec
scas
icebp
lods
push
pop
out
mov
dec
jmp
xor
jbe
mov
mov
testb
ret
push
pushf
je
adc
sbb
xchg
fildll
leave
loop
xchg
cmp
jae
pop
push
jmp
lds
out
xor
mov
sbb
je
jmp
add
add
xchg
mov
cmp
cs
aaa
jne
inc
dec
mov
mov
sub
push
orl
push
inc
lock
fwait
insb
shlb
lock
call
in
fidivs
andl
pusha
hlt
jbe
iret
int3
xor
push
and
leave
lods
or
in
or
xor
iret
push
add
cmp
nop
mov
lods
xor
jecxz
push
inc
xor
dec
insb
push
jmp
outsb
subl
aad
dec
pusha
cmp
sbb
mov
testb
cmp
cmpsb
subb
aad
out
and
fsub
mov
and
sub
insl
mov
fsubr
cmp
dec
add
test
cli
and
cs
sub
jnp
call
add
aaa
dec
addr16
fiadds
lea
outsl
mov
dec
xchg
pop
dec
push
iret
scas
and
aaa
andl
jmp
jb
xchg
push
pop
push
test
loopne
add
mov
xchg
xchg
push
subb
mov
stos
imul
mov
xor
push
fst
adc
enter
call
rorb
std
iret
dec
sti
mov
add
int3
cmp
or
in
xor
and
and
out
sub
and
jmp
adcl
xorl
call
mov
cmp
or
fstpl
nop
repnz
push
pop
rcl
dec
jl
adc
std
subl
add
cmp
lock
mov
movl
sbb
cmp
and
xor
inc
cmp
mov
push
cmp
xchg
imul
iret
lcall
lcall
or
into
cmp
imul
adc
mov
jb
cs
xchg
rol
sbb
mov
shr
stos
xor
xlat
sarb
adc
mov
dec
rorl
mov
inc
mull
cmp
ret
jle
and
arpl
xchg
and
mov
or
pushf
addr16
test
inc
out
lea
cmc
mov
out
in
imul
dec
int3
movsl
test
in
or
xchg
cltd
xor
add
insl
dec
sbb
adc
push
adcl
shlb
mov
bound
fidivs
inc
mov
sub
sbb
or
jbe
addr16
xor
pop
ffreep
add
push
das
mov
mov
mov
adcl
test
repz
sahf
outsl
cmp
test
sar
js
cmp
loope
out
jb
mov
adcl
aaa
fstl
je
frstor
rol
add
xchg
mov
mov
ret
mov
xchg
mov
aas
mov
adc
filds
inc
fmuls
hlt
jno
inc
repz
sbb
orb
loopne
cmp
or
xchg
enter
aaa
cwtl
mov
test
ret
dec
pop
pop
mov
xchg
pop
pop
jecxz
xchg
add
daa
pop
dec
imul
mov
fsubs
std
nop
aad
into
div
sbb
sbb
fldl
and
adc
lock
in
xchg
push
inc
pop
mov
cmpsb
outsb
pop
popa
cltd
push
bound
insb
pop
push
adc
mov
pop
or
jns,pt
lock
enter
in
xchg
mov
je
int3
das
ljmp
outsl
std
cmpsb
xchg
movsb
cmpsl
push
cmp
pop
cmp
cld
sbb
insb
popa
rcrl
or
adc
mov
xor
inc
call
shrl
adc
and
jg
pop
aad
or
cltd
les
test
mov
sbb
arpl
gs
adc
push
jp
push
mov
inc
jle
fstpl
fistps
sbb
add
inc
icebp
cs
imul
adc
cmp
ljmp
or
xlat
push
add
or
cmp
test
mov
xor
mov
insl
mov
loop
xor
lcall
repnz
fiadds
dec
subb
mov
leave
add
inc
clc
dec
and
pop
or
and
into
loop
test
cmc
add
aaa
mov
divb
push
push
mov
iret
mov
in
sbb
and
lds
pushf
mov
dec
cld
bound
in
loopne
icebp
jb
or
pop
cs
nop
dec
jno
and
add
jp
fcmovnu
mov
sahf
jb
mov
or
add
add
testl
sbb
mov
xchg
or
xor
int
dec
and
add
je
movsb
out
cltd
scas
scas
out
ret
and
pop
push
call
ljmp
or
jnp
adcl
dec
xor
cs
bound
adc
mov
mov
jl
mov
je
fisttpll
leave
and
jmp
test
aam
jle
dec
mov
rolb
lret
test
cmp
daa
mov
jl
mov
imul
mov
push
int3
push
mov
xor
adc
jge
inc
push
shlb
es
icebp
push
pop
xor
pop
ljmp
or
adc
xor
sub
push
lret
cmp
xchg
sar
jg
cs
call
push
push
jmp
and
mov
mov
jnp
mov
cmp
test
jmp
adc
xor
inc
es
imul
xchg
xchg
mov
addb
xchg
mov
mov
js
push
inc
sub
aaa
add
mov
popa
rorl
dec
cmp
inc
ja
bound
xchg
add
lret
pop
imul
push
xchg
adc
orl
orb
or
in
testb
inc
int3
and
xchg
in
aad
fists
xchg
mov
mov
iret
jle
push
and
inc
sub
sahf
inc
insl
ja
cmp
sbb
mov
push
mov
xchg
and
sarb
and
mov
dec
aas
imul
insl
daa
hlt
adc
sub
jb
mov
js
adc
fdivp
and
sub
mov
push
out
loopne
aam
and
int3
outsl
add
nop
in
scas
inc
nop
sub
cmp
push
mov
not
ret
lcall
out
or
pop
orl
xor
fsub
xchg
add
push
in
adc
mov
jmp
or
sbb
or
stos
jo,pt
aam
je
mov
push
push
ret
or
sar
shll
mov
sbbl
push
mov
add
popa
push
mov
test
push
mov
test
pop
inc
scas
pop
add
int
mov
aaa
cmp
fwait
dec
std
bound
add
bound
or
subl
jge
push
ds
pop
sbbb
and
pusha
inc
sbb
mov
push
es
aad
lea
lret
test
dec
pop
sub
adc
xchg
or
sti
bound
xchg
mov
andl
xchg
stos
loopne
pop
mov
js
dec
pop
hlt
repz
xorl
cltd
xchg
rorl
call
push
or
mov
icebp
dec
dec
loopne
and
xchg
sbb
cs
subb
mov
or
xchg
xchg
popf
inc
hlt
xchg
and
into
popf
jg
ljmp
or
lods
mov
int
cmp
adc
loop
mov
adc
jae
out
mov
cwtl
daa
shll
shl
fwait
pop
clc
jge
cmpsb
cld
sub
mov
push
ss
or
cs
inc
sbb
sbb
and
mov
dec
xlat
jecxz
out
xor
cli
test
jle
out
inc
push
or
mull
gs
adc
divl
les
addl
push
push
negb
in
das
xor
inc
sub
aam
push
popf
shlb
and
sbb
mov
aam
popa
popa
fs
cmc
or
call
mov
push
xchg
call
dec
loope
jmp
xchg
insl
mov
cmp
inc
iretw
call
add
cmpb
dec
xor
jmp
movsb
cmp
mov
sbb
adc
mov
ss
sbb
scas
lret
test
fdivs
insl
mov
rcll
inc
add
in
leave
and
dec
in
movsb
mov
mov
mov
test
aam
pop
jne
xor
sbb
adc
mov
adc
or
imul
dec
cwtl
les
imul
mov
add
loopne
dec
xlat
dec
out
mov
mov
addr16
mov
mov
mov
mov
pop
ljmp
in
jbe
dec
xor
push
nop
fs
mov
addr16
dec
lret
movsl
loope
push
inc
pushl
out
lret
pushf
subl
pop
xor
sbb
ja
js
sbb
aam
stos
push
adc
inc
movsl
and
fistps
ds
orl
xlat
std
out
push
enter
data16
sbbl
mov
popa
pop
popa
xor
sbb
stc
push
xchg
mov
bound
add
jne
out
dec
es
mov
pusha
jp
call
inc
pop
insb
js
mov
inc
mov
add
lods
data16
adc
cmp
pop
ljmp
lods
dec
rcll
loope
inc
pop
lcall
inc
movsl
movsl
adc
xchg
mov
mov
aam
arpl
incb
add
dec
in
add
shll
or
and
dec
sub
jecxz
daa
jne
lds
xchg
insb
test
sbb
or
adc
xchg
arpl
loope
jne
push
lods
xchg
xchg
add
sub
or
ss
pop
dec
jl
push
mov
jne
mov
ficoml
mov
adc
sbb
pop
sub
mov
sub
jg
pop
frstor
xor
stos
movsl
stc
adc
cld
or
mov
add
aaa
xchg
push
out
pop
lcall
fistpl
mov
xchg
ljmp
mov
sti
inc
jbe
std
inc
div
xor
mov
mov
adc
jecxz
pop
and
lret
out
mov
test
ret
cmp
or
cmpsl
shl
daa
cmpsl
pop
fistps
jo
movsl
pop
addb
jmp
in
or
fcoms
and
xchg
pop
or
pop
fnstenv
mov
inc
lds
jnp
gs
adc
loop
iret
sbb
and
ljmp
adc
jae
test
sbb
bound
pop
jl
xchg
xchg
shrb
pusha
dec
insl
jbe
push
xlat
cmpsb
mov
adc
inc
jl
jne
jbe
out
ret
xchg
test
and
shrb
push
fwait
xchg
stos
dec
daa
xchg
cmc
sbb
cmp
pop
add
inc
cwtl
jo
mov
mov
or
sub
mov
pop
sub
leave
test
or
mov
decb
das
mov
dec
cmp
mov
add
push
jp
and
cmp
cmc
xchg
aaa
dec
lea
or
push
pop
loopne
sbb
dec
call
sbb
pop
xlat
cmpsl
imul
fbld
push
roll
push
das
inc
icebp
mov
mov
call
fidivrs
call
or
daa
adc
dec
jl
clc
outsl
add
inc
test
fisubrl
mov
pop
mov
lret
adc
dec
add
xchg
mov
shll
cli
xchg
lods
scas
icebp
testb
lods
pop
sub
mov
getsec
fs
and
mov
mov
gs
sub
movl
nop
aad
repz
cmp
int
popf
xchg
stos
rcrb
test
insl
outsl
pop
repz
sub
add
leave
pop
add
pop
jbe
pusha
jae
insb
xchg
ss
pop
jle
or
mov
jl
test
fsubl
cs
pop
push
mov
adcl
rorb
fstp
sbb
push
mov
scas
insb
add
hlt
xchg
mov
shrl
cmp
push
fabs
inc
jae
arpl
jmp
ljmp
ret
cwtl
rorb
jle
scas
pop
fistps
jle
or
xor
adc
test
push
dec
adc
stos
arpl
push
mov
mov
and
loope
add
js
sub
flds
test
inc
sub
in
xor
insb
pop
jbe
mov
xchg
mov
iret
scas
xor
es
push
mov
jbe
and
or
cmp
add
fisubrl
std
test
and
mov
in
jae
mov
jo
repz
inc
adc
xchg
cmp
insb
pop
cmc
das
into
dec
add
inc
cmp
cmc
out
mov
mov
xlat
out
xchg
xchg
fst
sbb
out
pop
cwtl
pop
adc
or
andb
pop
cmp
mov
fwait
dec
push
into
push
push
imul
mov
nop
ljmp
xor
and
ja
inc
dec
adc
adc
je
mov
jbe
pop
jmp
pop
add
cmp
call
inc
mov
pop
push
sub
cmpsl
test
push
test
or
lds
inc
mov
add
pop
out
xor
sub
hlt
mov
lret
lds
inc
jge
xchg
popa
jns
test
mov
xor
sbb
fcomps
lods
test
stos
xor
in
fcmovne
cmp
mov
push
shll
jne
jns
cmc
jg
fs
or
test
or
insl
enter
psrlw
cmp
push
lds
or
lret
cli
daa
mov
inc
pusha
int3
and
or
pop
outsb
xchg
out
fchs
or
and
fisttpll
addr16
push
int
mov
adc
mov
mov
or
mov
pop
ljmp
test
or
mov
jo
daa
inc
mov
pop
subb
push
dec
dec
fistpl
xor
xor
lret
xchg
pushf
addl
mov
movlps
out
test
cmp
test
dec
dec
cwtl
lods
sahf
popf
loopne
mov
in
scas
sar
jmp
pusha
lret
mulb
outsb
inc
out
iret
aad
add
btc
jo
mov
in
andl
xorb
push
mov
jne
movl
xchg
cmp
lcall
lds
inc
es
mov
fnsave
fstps
mov
hlt
test
or
in
ss
divb
fisttpll
repnz
cmc
addr16
fisubrs
xchg
pop
pop
adc
add
movb
and
push
movsb
ja
sbb
ljmp
add
xchg
pop
xor
lock
lret
mov
xor
jp
sub
nop
jp
in
int
adc
incl
mov
stc
popf
test
xchg
aaa
mov
push
out
inc
push
loope
jbe
add
cmpsl
push
inc
xchg
sub
or
adcb
call
outsb
outsb
mov
mov
loop
mov
test
and
xor
out
fmulp
inc
and
neg
sbb
lahf
repz
scas
js
push
ja
add
fistpll
cmpsl
mov
bswap
adc
fwait
push
push
cs
insl
dec
test
cld
sub
xchg
dec
inc
push
bound
push
into
mov
mov
push
rcrl
in
jne
and
mov
sbb
sbb
jl
sub
popa
mov
add
hlt
mov
push
xchg
lcall
pop
test
xor
pusha
pop
arpl
cmpsb
popf
jecxz
gs
out
js
add
lret
dec
paddsw
mov
scas
outsb
dec
inc
icebp
negb
lahf
test
adcb
lea
das
roll
loopne
test
vpsllvd
adc
out
nop
inc
shl
xchg
cmp
jno
jle
jnp
sub
push
xor
cwtl
movsl
sbb
jle
ror
jbe
xor
xchg
es
arpl
call
fstl
dec
fists
push
iret
nop
aas
repnz
jmp
icebp
mov
cmp
fs
mov
outsl
push
xor
push
push
inc
xchg
lea
sub
lret
stos
call
adc
lods
cmpsl
incl
push
mov
fidivl
fs
pop
push
xchg
loop
xchg
ror
jo
outsl
push
mov
pop
xchg
aaa
ud2
inc
push
divb
loope
adc
push
fisubl
mov
push
sti
mov
adc
mov
xchg
xor
out
push
cmpsb
mov
call
push
cwtl
inc
mov
imul
lahf
inc
cli
hlt
cmp
int
xor
test
jbe
test
xchg
xor
fs
mov
lcall
mov
out
out
push
sub
dec
add
add
imul
sbb
mov
pusha
pop
leave
mov
repz
outsb
fadd
add
add
aad
dec
push
pusha
adc
bound
daa
aam
sbb
cltd
dec
out
adc
cmp
sub
loopne
sar
jns
jnp
push
ja
jge
inc
bound
fadd
insb
subl
adc
enter
imul
push
insl
xchg
sub
sbb
xchg
and
jp
lret
pop
stos
ljmp
pop
sbb
xor
call
test
dec
sub
add
call
adc
sub
mov
or
cld
jge
sbb
jmp
inc
fs
arpl
test
cltd
pop
push
in
cli
in
add
pop
js
inc
js
pop
jge
notl
push
ljmp
inc
ud0
cmp
push
sti
int
inc
mov
lcall
push
ja
call
or
inc
xor
enter
pop
int
or
testb
addl
sahf
xor
cmp
cmpsl
imul
test
daa
inc
or
testb
test
fimull
insb
jg
je
jge
lock
ficoms
jne
rorb
out
insb
jp
notrack
and
sbb
leave
adc
lock
add
adc
adc
jecxz
add
mov
mov
mov
imul
sbb
sbb
insb
loope
cmp
pop
in
pop
jl
push
lret
inc
movsl
lock
mov
fdivs
fsubr
add
icebp
jmp
lods
xor
into
push
setle
dec
jno
std
mov
cld
test
mov
and
mov
or
mov
dec
clc
testl
pop
mov
dec
push
mov
fidivrs
addr16
cmpsl
cmp
jge
jno
or
push
inc
fwait
xor
and
sbb
in
jae
cltd
push
movzwl
lea
jne
mov
cli
xchg
or
out
lret
cmp
mov
sbb
loopne
sbb
fsubl
mov
pushf
jge
adc
mov
mov
mov
in
xor
cmc
and
outsl
sahf
hlt
adc
gs
fdivl
push
mov
mov
mov
dec
mov
into
jp
aas
fisttps
fisubs
mov
cmp
mov
or
popf
sbb
popa
push
cmp
pusha
aad
jns
mov
and
test
cmp
and
jns
jno
jl
imul
clc
test
fisttpl
rcl
mov
mov
cmp
adc
inc
fcompl
dec
je
jo
out
xorb
or
lcall
cmovns
push
push
xor
mov
iret
push
cmp
push
sub
leave
xor
cs
clc
or
push
mov
cmp
notl
lods
rcrl
jb
cltd
dec
inc
pop
stos
es
aaa
test
cltd
jne
lcall
fadds
mov
fwait
xor
cli
xchg
aad
cmc
movsb
out
sbb
test
imul
dec
mov
lcall
and
ret
sbb
add
loope
das
or
and
adc
pop
mov
cltd
lret
mov
push
out
addr16
lea
jp
xor
arpl
imul
push
sub
inc
mov
sub
cltd
mov
scas
cmp
sbb
out
xchg
sti
jo
mov
sub
sarb
das
push
xor
insb
add
push
aam
lea
mov
mov
add
frstor
imul
pop
fstpt
loopne
out
popa
sub
dec
push
push
lds
mov
cmp
jo
cs
aaa
push
or
out
fnstenv
add
adc
mov
and
cmp
cmp
mov
aas
inc
fdivs
sbb
cmp
pop
in
mov
ss
jle
out
scas
xchg
sub
les
or
cmc
pop
lcall
clc
cld
cmp
and
cmp
push
in
in
xlat
sub
xor
jle
loopne
add
cs
mov
test
fadd
dec
out
push
dec
scas
aam
mov
jmp
mov
lcall
out
xchg
add
dec
leave
mov
xor
mov
or
sbb
add
mov
push
out
xor
fsub
fiadds
mov
into
jle
orb
jmp
mov
add
xchg
mov
sub
andl
bound
cmpb
je
jl
dec
sub
andb
fistpll
sub
nop
push
nop
stc
push
lret
bound
and
lcall
fldlg2
cmpsl
mov
stc
roll
jb
call
mov
mov
imul
cwtl
inc
notb
loopne
xchg
mov
mov
insb
xchg
add
mov
cmp
adc
mov
in
mov
ds
in
sbb
push
xchg
mov
cmp
mov
mov
ret
pop
add
push
sbb
xor
lret
or
mov
lea
andb
mov
sub
stc
movsb
test
int3
dec
lret
mov
cmp
fs
test
jb
jb
adc
and
cld
imul
dec
mov
frstor
dec
and
cltd
cmp
or
ss
cmpsl
and
pop
adc
addr16
or
cmp
mov
fwait
sub
clc
cmp
fwait
and
popf
push
push
inc
imul
adc
push
enter
push
and
add
adc
stos
aad
dec
mov
xor
pop
add
filds
loope
cmp
dec
imul
xor
ljmp
insl
and
aad
sub
insb
dec
out
mov
fcompl
setnp
fcomp
sbb
dec
jae
cmp
inc
mov
lods
jle
lea
cltd
lret
sbb
push
mov
add
xor
inc
out
or
pop
popa
iret
sub
or
lcall
pop
shrl
enter
sbb
loope
stos
mov
das
jl
xchg
jmp
test
sub
aaa
mov
add
shr
dec
inc
pop
or
push
pushf
sahf
mov
mov
mov
pop
adc
aad
in
push
inc
das
push
lock
jecxz
adc
pushf
and
and
scas
ljmp
pushf
xor
xchg
sub
cmp
xor
add
xchg
ss
pusha
pusha
push
repnz
insl
pop
dec
pop
enter
pop
or
subb
inc
add
xor
lcall
out
xchg
inc
xchg
fmull
ret
sub
scas
rorb
or
adc
in
adc
leave
xor
adc
outsb
fwait
jne
adc
mov
push
adc
pop
sahf
pop
shrb
into
cmp
and
dec
out
rcrl
add
mov
fistpl
sbb
pusha
mov
mov
dec
mov
into
enter
dec
and
in
jne
xlat
in
lahf
fisubl
xor
mov
test
es
flds
mov
adc
or
xor
xchg
ficompl
push
call
push
inc
mov
lods
pushf
jg
aaa
xor
std
ss
shlb
lret
xchg
jae
pop
and
dec
hlt
jl
js
rclb
mov
movsb
mov
mov
sahf
adc
js
enter
iret
xchg
insl
loope
rolb
andl
lret
stos
popf
test
adc
jno
pop
push
test
jnp
and
sbb
jns
leave
push
sub
ret
inc
push
movsb
fmul
es
xor
cmpsl
mov
pop
ljmp
js
sbb
stc
out
pusha
and
sub
inc
dec
xor
or
or
shlb
cmp
sti
pop
jmp
inc
mov
mov
lea
pop
lahf
and
mov
clc
clc
jmp
pop
mov
xchg
push
dec
jecxz
cs
jg
inc
xchg
sbb
inc
mov
lret
xor
xchg
daa
or
jg
cmp
push
add
imul
mov
lock
test
movsb
inc
jle
movsl
inc
push
push
or
in
data16
push
or
movsl
fldl
xorb
or
aas
shll
sbb
scas
insl
out
adc
adc
repz
or
pop
dec
xlat
out
loope
loopne
and
mov
or
add
daa
movsb
pop
pop
pop
ret
lods
lret
ret
fbstp
outsb
sbb
lcall
daa
outsb
sbb
and
into
mov
xor
push
jo
shll
dec
fistl
push
icebp
or
lea
sub
cmp
sbb
xor
inc
in
aam
sbb
test
mov
inc
or
adc
fstpl
add
adc
mov
or
mov
incl
and
or
aad
aam
and
mov
push
mov
pop
adc
or
lods
sbb
push
jmp
fisubl
arpl
je
fisttps
cmp
mov
xor
inc
sub
cmp
cltd
xchg
mov
or
mov
jl
mov
in
sti
es
mov
sbb
cmp
hlt
mov
in
sbb
or
push
xor
ret
bound
pop
inc
push
jmp
or
sbb
test
enter
add
adc
inc
mov
fstpt
into
and
inc
xor
nop
fwait
jge
mov
fimuls
adc
pop
repnz
xchg
mov
and
inc
repnz
xor
leave
sahf
sub
add
cmp
rorb
fs
dec
orb
mov
jae
repz
pop
daa
loop
pop
sub
and
sbb
cld
pushf
in
push
jecxz
push
rolb
movsl
popf
add
add
testb
ds
out
add
jl
scas
enter
dec
inc
jl
and
jg
jbe
mov
icebp
es
rol
sbb
sub
dec
lcall
mov
pop
fsubrs
pop
xchg
out
enter
sahf
loop
in
mov
mov
fldt
es
in
mov
stc
cs
int
add
subl
and
jecxz
int
imul
cmp
or
nop/reserved
shlb
bound
loopne
arpl
or
popf
outsb
cmp
mov
jecxz
mov
pop
push
jae
test
fdivr
rcr
dec
or
mov
adc
lahf
leave
mov
xor
sbb
loop
cltd
sbb
jb
mov
dec
xor
lret
xchg
fisubrl
inc
cmpsb
pop
mov
loope
nop
movsb
sahf
cmp
fs
rorb
ds
push
daa
testl
test
inc
movsl
mov
push
jge
lsl
adc
add
mov
lock
and
jo
scas
lcall
sbb
addr16
testb
dec
sub
mov
mov
sub
cltd
push
add
daa
or
or
jge
mov
xor
sti
or
cmp
rcrb
dec
out
lods
mov
pop
push
sbb
rcrl
xchg
jmp
in
push
dec
testb
out
mov
sarl
sub
inc
xchg
jae
out
loope
mov
testl
xchg
subb
cmpsb
xlat
lods
mov
mov
or
dec
xor
sub
dec
push
jle
nop
mov
push
in
cwtl
jae
mov
imul
cmp
stc
or
jecxz
dec
sbb
imul
arpl
in
fsubrl
aam
bound
inc
ja
push
and
sbb
push
mov
outsl
or
mov
add
je
jbe
mov
adc
leave
jmp
jp
mov
dec
adc
xchg
ds
push
add
mov
pop
sub
jno
mov
push
sub
mov
stos
jmp
add
fdivp
push
inc
sahf
sub
lods
fcmovnb
inc
sub
nop
mov
cld
pushf
sub
ret
add
push
sbb
sbb
movsl
sbb
inc
mov
push
bound
mov
insb
ret
sbb
ret
mov
sahf
data16
int3
mov
push
dec
dec
mov
dec
mov
mov
cltd
push
in
sub
sbb
js
pop
mov
out
inc
push
cmpsl
mov
hlt
test
mov
lds
mov
sbb
shlb
ss
fisubl
shl
aaa
sbbb
lds
fwait
xchg
mov
jo
addb
outsl
scas
sahf
cmp
inc
sbb
add
imul
mov
add
push
dec
xchg
mov
cli
mov
adc
cmp
push
add
aas
adc
std
jl
mov
inc
mov
dec
mov
dec
lcall
push
xor
inc
mov
fsts
mov
in
stos
and
scas
rcrl
cmp
jns
or
adc
or
bnd
std
xchg
xor
sub
lea
jle
adcb
xor
aaa
test
and
sbb
enter
imul
or
decb
cmovle
xor
jbe
lock
inc
shrl
fwait
mov
lea
stos
cs
in
cld
hlt
das
or
and
cltd
jno
or
test
test
ret
test
mov
out
popa
sysret
mov
jle
or
dec
pusha
adc
pop
dec
ds
inc
add
lods
cli
jb
add
ret
pop
mov
jbe
mov
pusha
pop
mov
push
xchg
cli
fnstsw
sub
sub
or
orb
inc
lods
mov
mov
aad
or
cmp
mov
les
mov
push
pop
jg
dec
lds
gs
push
add
and
fwait
xor
int
ss
out
imul
mov
sti
jno
xor
aaa
add
pop
dec
push
xor
popa
fnsave
and
jg
cld
les
fldenv
or
push
clc
mov
inc
out
lock
jge
cmp
and
add
push
add
test
and
shlb
inc
jns
pop
nop
xor
fdivl
jg
bswap
jge
rorw
int
dec
mov
dec
xchg
jne
sbb
pop
cmp
xchg
ja
daa
or
add
jne
lcall
cs
mov
cmpsl
jp
xchg
rolb
sub
les
or
sbb
cmpsb
sbb
insb
shrl
mov
ret
in
mov
cmp
je
loopne
jne
nop
in
push
mov
bound
fdiv
sbb
push
rclb
std
mov
nop
scas
popf
mov
mov
out
sub
mov
mov
jo
adc
push
fdivrs
xchg
je
sbb
out
arpl
sbb
icebp
or
outsb
andb
mov
ja
dec
sub
and
mov
push
pop
maskmovq
idivl
jmp
fdivrl
lea
loope
jl
lret
aam
nop
and
stc
imul
xor
lea
aam
push
nop
jo
xchg
pop
xorl
repz
paddsb
imul
or
pop
push
sbb
add
inc
loopne
xor
bound
xchg
daa
imul
mov
lds
mov
mov
cmp
pop
inc
inc
adc
mov
mov
movsb
cli
and
sbb
sbb
cmc
push
pop
loopne
mov
cmp
xchg
dec
jmp
into
sarl
inc
xchg
jb
inc
inc
mov
dec
mov
cmc
and
jno
jp
mov
jp
sub
mov
push
xor
mull
cmp
xchg
sub
mov
and
lret
outsb
ljmp
cmp
push
aas
and
nop
mov
fimuls
fdivs
pop
or
pop
mov
pop
stos
sahf
pop
adc
shll
inc
push
add
push
test
ror
add
jae
xor
popa
adc
mov
test
pop
call
add
mov
test
cmc
in
mov
gs
orb
dec
loope
xchg
jo
or
adc
iret
int3
in
add
sub
cmp
mov
in
pop
ja
add
mov
mov
lods
inc
mov
insl
cmp
push
lahf
push
jmp
add
ja
stos
sub
or
movsb
sub
enter
mov
or
enter
push
cmc
shrl
add
jb
div
cmp
test
divb
sbb
mov
xchg
jmp
sub
push
adc
and
mov
jmp
mov
cltd
pop
fdivl
pop
pop
data16
stc
xchg
dec
cs
mov
scas
xchg
dec
inc
int
fldcw
test
xor
insl
stc
xor
push
int
mov
add
or
aas
mov
jnp
aaa
jb
inc
add
mov
cmc
hlt
inc
ret
xlat
enter
pop
call
dec
rclb
and
inc
inc
gs
mov
pushf
xor
bound
popf
fimull
pop
pop
mov
mov
or
ds
mov
addb
push
jecxz
jbe
aaa
fildl
jbe
xchg
xor
adcb
pop
aam
test
jmp
dec
lcall
je
mov
inc
sbb
xchg
fdivrl
aam
jo
pusha
sbb
xchg
or
dec
ret
push
push
aam
add
mov
mov
sbb
test
xchg
out
and
jno
and
out
push
mov
push
nop
outsb
ja
loope
and
lods
in
lds
sbb
or
mov
test
fnstenv
cmp
rclb
xchg
pop
scas
loop
or
dec
repnz
cltd
andl
insb
scas
xor
out
sbb
adcb
popf
mov
out
ljmp
and
iret
inc
push
stos
mov
filds
xchg
dec
pop
add
sub
jb
sbb
add
inc
add
xchg
aaa
rorb
inc
adc
fsubrl
push
xor
and
addl
cmp
mov
ret
mov
lds
and
std
inc
and
stc
imul
lcall
cwtl
inc
pop
push
lahf
lods
in
mov
push
stc
mov
add
dec
inc
or
test
fistl
es
and
aas
xor
mov
loopne
sub
jbe
lods
mov
call
fldl
out
lret
in
or
push
pop
and
mov
mov
xchg
pop
enter
lcall
lds
mov
jb
or
cmp
lret
mov
xchg
mov
xor
sbb
mov
es
insl
mov
sub
movsl
xor
and
jl
or
sub
imul
push
stos
inc
loope
loopne
mov
and
push
repz
movsb
aaa
pushf
add
pop
and
dec
jl
sbb
xchg
into
mov
push
rorb
lcall
mov
xor
clc
fsubr
or
or
gs
xor
xchg
inc
lea
or
dec
and
test
ud0
inc
insb
sti
mov
cmp
pop
mov
hlt
movsb
sahf
add
mov
add
xor
adc
mov
add
cmp
mov
jmp
and
adc
add
ret
push
mov
cli
stos
insb
or
ret
cwtl
out
fsts
and
roll
pop
push
push
stc
mov
psubusw
jnp
inc
jne
and
sub
outsb
loope
and
xor
jnp
rcr
and
xchg
dec
add
and
sbbl
pushf
add
enter
sbb
cmp
pop
loopne
movsb
and
sub
movsl
xor
fs
int
test
mov
cmp
out
popf
jno
pop
cmp
call
mov
add
mov
ljmp
mov
push
rolb
xchg
jb
add
into
jbe
negl
int
sbb
or
inc
or
cltd
out
pop
cs
cmp
or
jbe
shll
sbb
ret
jno
inc
in
jmp
xchg
cwtl
in
mov
push
cmc
cmp
adc
fdivrl
sbbl
mov
movsl
and
inc
fisttpl
mov
out
mov
sbb
leave
ror
add
repz
or
es
iret
push
lahf
aas
mov
add
mov
pop
popl
fisttps
int3
stc
test
test
or
push
push
lret
or
jle
repz
and
ret
add
daa
mov
mov
mov
fnstsw
push
fsubs
cmp
rorl
jp
insl
in
push
data16
mov
je
dec
insb
and
adc
adc
xchg
mov
lret
outsl
sbb
std
jl
and
lret
or
fistpll
xchg
int3
sub
adc
push
push
mulb
mov
add
mov
es
sub
mov
and
sub
adc
jle
add
jecxz
inc
lods
jg
mov
repnz
cmpsl
stos
push
sub
lret
out
sub
xlat
and
pop
cli
insl
mov
mov
je
test
cmp
scas
adc
outsl
dec
sbb
lock
pop
sbb
mov
adc
mov
or
cli
shr
clc
mov
cmp
xor
or
add
and
mov
mov
ja
dec
mov
ret
pop
and
arpl
hlt
pop
and
dec
sbb
cmpsb
mov
cmp
pop
shrl
sub
cmp
pop
rol
ljmp
xor
xchg
iret
add
add
add
adc
addr16
daa
mov
fisubrs
xchg
in
adc
push
jb
or
dec
lcall
stc
loop
leave
fisttps
cmpsb
push
push
mov
push
jae
pop
nop
sub
stos
or
sbb
sub
loop
add
test
dec
xor
mov
inc
mov
and
pop
popf
sarl
cwtl
sbb
arpl
lods
sbb
aad
es
xor
mov
repnz
das
les
aad
nop
data16
push
push
pop
pop
arpl
jno
aad
sbb
outsb
and
adc
iret
push
mov
xchg
or
aam
and
mov
cmpsl
sbbb
fimull
lods
pusha
lds
sub
sbb
pop
test
add
imul
pusha
testl
dec
cli
push
pop
fsubs
and
xchg
cmp
fldenv
out
add
pop
push
pop
inc
aaa
cmc
and
push
rcrb
xor
imul
adc
test
stos
nop
dec
mov
fisttpll
fidivrl
scas
push
adcl
or
rolb
ljmp
ss
in
pushf
rclb
mov
mov
movsb
mov
aam
sbb
stos
adc
mov
jbe
and
fsubrl
js
pop
cmp
xor
xorb
pop
inc
clc
inc
dec
adc
test
cmpsb
test
cmp
xor
iret
mov
arpl
jbe
orl
cs
pusha
cmc
pop
leave
and
cmp
jo
enter
fdivrl
sbb
inc
pushf
out
xchg
insl
jns
dec
cmp
pushf
xor
je
mov
loop
mov
fildl
and
sbb
jge
loope
sub
dec
cmp
dec
mov
jne
push
sarb
adc
popa
ret
mov
ljmp
xchg
addr16
es
pop
test
data16
xor
rcrb
flds
or
pop
dec
iret
cltd
ljmp
jmp
mov
out
sbb
add
mov
aam
adc
push
test
push
arpl
into
das
loop
shll
push
xlat
or
cmp
and
icebp
adc
sub
shl
xlat
ljmp
pop
stos
lret
ss
pop
ds
movsb
fdivrs
mov
scas
dec
inc
mov
pop
in
stos
sahf
into
divl
out
adc
test
mov
in
dec
dec
movsl
cmpsb
movsb
or
sbb
pop
fld
cmp
mov
gs
dec
leave
push
mov
mov
popa
mov
and
adcb
outsl
xchg
call
and
aad
mov
nop
imul
adc
fists
stc
and
cmpsl
jge
dec
xlat
enter
jae
adc
test
and
adc
loopne
xchg
xchg
push
jmp
mov
mov
fadds
mov
sub
or
into
enter
std
sbb
jecxz
mov
push
orb
and
mov
dec
add
push
fldcw
mov
or
xor
sub
and
mov
xchg
in
jae
imul
dec
pop
aas
ficompl
add
cmpb
lret
call
jle
and
cmp
mov
xchg
out
inc
mov
fisttpll
cwtl
sbb
cs
lcall
and
addb
pop
ss
cs
sub
movsb
mov
jo
aaa
sub
adc
adc
pmaxub
lds
inc
hlt
lods
add
pop
pop
mov
mov
xchg
mov
js
pop
call
mov
shll
sub
insb
sub
dec
push
and
adc
and
call
cmpsb
pop
pop
setl
outsl
aas
xchg
je
insl
jl
dec
nop
jmp
je
dec
ffree
xchg
dec
mov
fs
pop
mov
xchg
cmp
fldt
loop
jno
inc
mov
test
daa
jge
inc
popf
add
and
xchg
ljmp
xchg
push
sub
shlb
movsb
pop
lods
jp
dec
nop
pop
fwait
nop
mov
repz
testl
shlb
dec
or
or
mov
aas
jmp
sbb
mov
adc
dec
sahf
fsubrl
lcall
adcl
fsubl
dec
imul
xchg
ficoms
push
mov
aam
adc
insl
pop
or
nop
lock
jmp
adc
dec
push
pop
sub
jmp
aam
mov
or
xchg
push
push
jbe
dec
adc
clc
sbb
lods
sar
fldcw
fwait
and
out
mov
rolb
jg
sub
sub
pop
cmp
les
xchg
or
sbb
jmp
and
mov
repz
ss
je
pop
xor
in
std
sub
les
jo
mov
movsb
dec
cmpb
mov
sbb
icebp
sub
push
sub
and
ret
xor
callw
mov
mov
insb
jle
lret
loope
xchg
push
out
xchg
test
dec
xlat
popf
incl
repz
mov
bound
gs
cmpsb
es
and
data16
sbb
pusha
test
orl
add
push
mov
mov
xor
out
data16
enter
add
sbb
push
loopne
xchg
jmp
jle
pop
inc
or
jecxz
sub
mov
add
jg
in
mov
cmp
dec
out
pop
jg
xor
ljmp
out
cmp
fs
out
and
mov
test
subl
movsl
xor
rcrb
sbb
mov
mov
add
xchg
cmp
push
pop
and
sbb
fdivr
and
js
aam
loopne
test
sub
jp
mov
or
lret
add
xor
pop
pop
cmp
mov
or
test
aam
sub
clc
pop
ja
mov
jo
fisttpl
clc
or
pop
mov
sahf
pop
inc
push
addr16
inc
dec
or
cmc
aad
fcmovbe
pop
mov
cli
mov
cs
xor
sarl
icebp
xchg
sbb
and
pop
es
add
adc
fcomps
jl
pushf
add
or
add
out
mov
mov
loopne
xlat
ss
lret
or
xor
or
fs
outsb
andl
dec
scas
sahf
imul
sub
adc
lcall
stos
bound
fs
out
xchg
jne
lahf
inc
mov
outsw
sbb
imul
int3
inc
insb
sub
in
ret
push
sbb
mov
inc
pop
stos
fdivrl
sub
add
and
add
jae
insl
shlb
outsl
decl
or
subb
xchg
inc
pop
daa
shll
data16
loopne
mov
lock
jb
jne
stos
xor
jp
adc
adc
pushf
cmp
pop
cld
mov
into
imul
fwait
iret
cmp
popf
mov
xchg
fcoml
mov
les
stc
adc
fldcw
nop
lods
ja
xor
ds
fiadds
into
out
mov
jb
push
adc
out
and
dec
popf
xor
out
jmp
xchg
xchg
popa
lahf
fcom
addr16
push
pushf
lret
jno
ss
add
cmpsl
mov
mov
in
mov
sbb
push
cmp
adc
ss
and
lcall
pop
cltd
dec
cmp
lock
ret
mov
pop
sbb
or
out
push
push
pushf
imul
test
cmpsl
call
push
pop
xchg
dec
xor
xorl
into
sbb
cmp
repz
sahf
or
or
addl
xor
imul
and
leave
leave
xor
pop
xor
pop
and
jbe
cmp
dec
mov
mov
xchg
and
movsl
jbe
sub
push
mov
xor
adc
jno
push
and
jge
imull
arpl
cli
aad
daa
push
inc
or
xor
lcall
jp
cmc
loop
jnp
out
ds
insl
lds
xchg
movsb
mov
lcall
mov
jno
test
ljmp
xor
sub
xor
insb
sub
xor
clc
adc
push
push
mov
mov
fcoml
mov
xor
xor
call
push
or
rclb
test
sbb
test
jo
sbb
outsb
in
push
sbb
imul
pop
cs
cmp
out
mov
jmp
cmc
cmpsl
xor
fs
adc
and
cmpsl
mov
cmp
je
andl
mov
repz
stos
adcl
mov
mov
and
aas
in
ljmp
xor
inc
test
inc
je
push
jno
push
faddl
xor
shrb
cmp
jle
adc
pop
insb
mov
or
push
test
cwtl
lock
push
idiv
ret
sbb
imul
inc
adc
mov
cmp
mov
jle
mov
sub
push
dec
testb
and
add
fiaddl
pop
stos
mov
pop
hlt
iret
movl
subl
jb
sbb
xchg
sbb
push
mov
sbb
fsubrs
in
inc
push
adc
pop
das
jl
lret
pop
jle
push
pop
shrl
mov
aad
pusha
pushf
adc
push
rolb
stos
add
mov
cmpsb
or
pop
pop
lods
mov
test
insl
sbb
or
or
das
jb
jo
pop
sub
in
insl
aam
cmp
andb
arpl
and
mov
mov
loope
jp
shl
fiadds
push
jmp
inc
or
jmp
out
sub
unpckhps
xchg
add
insb
adc
jae
inc
js
push
add
xor
inc
cmp
push
jg
out
sub
and
push
pop
mov
sub
mov
sbb
jo
mov
stc
and
subb
and
or
aad
mov
push
out
lcall
dec
fwait
ss
repnz
mov
pop
sub
data16
add
jae
push
jae
orl
mov
dec
lods
inc
mov
mov
push
lcall
inc
jns
aam
fisttpl
push
in
loopne
mov
jb
jns
mov
mov
out
and
inc
xlat
notb
xchg
ja
mov
push
fucomp
flds
loopne
jmp
outsb
sbb
mov
mov
lret
frstor
lea
mov
adc
test
in
pushl
movsl
add
mov
packuswb
ds
and
test
and
ret
jb
lds
repz
push
nop
fdivrs
test
pop
jbe
inc
xchg
push
push
loopne
pop
xchg
bound
cmp
or
sub
cmp
arpl
cs
mov
nop
lods
mov
cmp
add
fcom
nop
out
mov
mov
adc
mov
and
sbb
loope
add
sub
cmp
or
pop
loope
xchg
scas
xor
sbbb
roll
pop
out
jmp
push
inc
sub
es
sti
sahf
dec
stc
sub
inc
popa
pop
scas
es
inc
inc
mov
fs
mov
vcvtps2dq
js
mov
vaddpd
cmp
pop
pop
inc
rorb
leave
xor
or
mov
mov
out
cld
push
js
adc
std
xchg
shlb
adcl
loopne
add
mov
add
icebp
orb
adc
mov
test
push
std
xchg
push
push
xor
ret
push
daa
ljmp
aad
movsb
jl
ljmp
nop
dec
test
push
test
mov
jne
push
inc
ret
pop
into
inc
xor
orl
lock
sbb
popf
mul
adc
pop
pop
out
dec
and
push
xlat
iret
sub
mov
ret
mov
pop
insb
jg
fdecstp
lahf
xlat
xor
mov
adc
or
push
scas
pop
mov
test
fidivrl
movsb
int3
test
ret
xorl
icebp
roll
inc
aaa
rclb
mov
loopne
sbb
push
sub
cli
shlb
stos
stos
push
lea
icebp
push
jno
push
or
mov
mov
push
pop
push
mov
mov
aas
xchg
cmp
lahf
fiaddl
and
or
test
jb
jle
outsl
mov
jnp
pushw
or
rcll
pop
test
push
ret
add
and
push
shl
and
cmp
cmp
mov
inc
in
cld
lcall
push
adc
popf
mov
sbb
mov
xor
aam
daa
sbb
lcall
subl
add
sbb
test
int3
mov
pop
aam
dec
test
popa
jne
lret
xchg
loopne
xchg
xchg
cltd
jp
mov
repnz
pop
mov
or
cmp
inc
fwait
test
stos
mov
dec
pop
inc
lds
xor
in
add
mov
pop
push
imul
scas
push
jp
sbb
jmp
loopne
ss
cmpsl
inc
out
mov
inc
out
inc
fwait
pop
pop
sbb
sub
jo
roll
pop
cli
cwtl
dec
pushf
prefetch
cmpsb
add
mov
xchg
inc
inc
dec
dec
jp
lock
movsl
fstpt
mov
out
rcll
sbb
call
xlat
adc
push
push
scas
xchg
push
dec
aad
and
mov
pop
dec
push
jns
xor
inc
pop
mov
and
adc
push
movsb
sbb
jge
sbb
jbe
dec
insb
push
lahf
gs
repnz
aad
stc
dec
cmp
xor
jb
xor
fsqrt
in
adc
andl
mov
and
cmp
push
sub
pop
clc
or
mov
daa
in
mov
inc
in
push
icebp
popa
inc
aad
jmp
mov
push
xchg
scas
xor
cmp
jbe
int
dec
xor
cmp
or
add
xor
int3
lea
xor
pop
bound
int3
lds
rcl
sub
xor
and
xor
adc
call
sub
push
frndint
mov
shr
and
inc
xchg
push
cs
aam
data16
push
mov
aad
insl
iret
rcrb
mov
jo
int
add
or
popa
mov
gs
and
mov
adc
sbb
lock
shl
mov
dec
lret
or
dec
xchg
leave
cmp
mov
imul
cmp
push
sbb
les
out
xor
rcrl
stc
jmp
and
dec
adc
xlat
sbb
sbb
push
or
mov
jae
imul
jp
lret
or
cli
fdivl
pop
lods
dec
jo
sub
mov
in
in
loop
subb
fmuls
js
lret
and
dec
pop
sti
test
pop
jne
sbb
mov
out
leave
and
jnp
mov
cmp
das
inc
sbb
sbb
pop
outsl
rcl
mov
inc
arpl
pop
push
cmpsl
xchg
mov
jle
out
dec
xchg
mov
push
inc
xor
and
je
lods
in
mov
gs
outsb
xchg
cmpsl
adc
inc
and
mov
mov
test
adc
cmpsl
insl
movsb
fstl
stc
pop
xor
push
rolb
adc
addb
aad
inc
es
or
not
insl
negl
and
das
xchg
lcall
fsubl
test
loope
jo
sahf
sub
mov
in
jns
mov
jl
in
xor
lods
sbb
and
push
inc
sbb
lods
aam
cmp
test
lret
fdivs
inc
xchg
or
test
pop
push
in
ror
movsl
mov
jae
pop
out
pop
push
daa
lea
ja
pusha
add
es
dec
xor
cmpsl
in
daa
xchg
fidivl
loop
imul
das
mov
shlb
jns
aad
sbb
mov
push
mov
stc
movl
je
outsl
cmp
lds
xor
push
push
pop
mov
dec
xchg
fisttpll
mov
mov
addb
cpuid
pusha
inc
cmp
fistl
xor
sbb
inc
mov
or
lahf
xor
xor
call
cwtl
inc
das
sbb
dec
jmp
pop
jge
aaa
fimuls
lret
sub
mov
push
outsl
movsb
into
jl
xlat
cltd
or
xlat
movsb
ljmp
push
nop
jp
jne
jp
js
insb
insb
scas
jbe
jb
and
into
mov
cmp
js
test
jbe
inc
push
and
and
cs
pop
mov
mov
shlb
rclb
int
hlt
pop
adc
imul
popa
adc
stos
cmpl
pusha
xchg
insl
ljmp
sub
inc
push
or
or
cli
ret
inc
push
loope
sahf
bound
push
and
push
popa
jnp
xlat
mov
enter
ds
xlat
rcr
push
mov
mov
add
xchg
push
xchg
cmp
jmp
fmull
mov
jae
daa
pop
mov
aaa
jmp
or
pop
cmc
leave
lcall
xchg
hlt
iret
mov
xchg
pop
xchg
cmp
mov
loopne
popa
jo
cwtl
add
pop
insb
aad
jmp
cmp
push
jns
rol
sbb
add
jmp
inc
push
jae
shrl
andb
fisubs
xchg
sbb
dec
lahf
in
mulb
cmp
subl
repz
popl
test
mov
imul
pop
xor
mov
lahf
and
sub
inc
pop
mov
loop
movl
divb
stc
orb
or
add
or
or
int
iret
jne
cmp
cli
xchg
clc
sbb
cltd
pop
push
mov
outsl
mov
inc
icebp
mov
repz
das
or
add
js
les
mov
je
xadd
mov
inc
jge
adcb
outsl
fisttpll
addb
fwait
rcll
popa
adc
adc
sbb
xchg
dec
fimull
pushf
das
rolb
xor
out
or
std
inc
nop
into
pop
xor
xchg
or
jae
push
popf
aas
adc
mov
sbb
mov
mul
push
pushf
lds
cmpsb
hlt
mov
jno
addr16
add
imul
jo
xchg
push
or
xchg
xor
jmp
vmovaps
jmp
sbb
mov
bound
divb
pop
xorl
ds
push
cs
subl
xchg
cli
adc
push
add
dec
jg
push
push
icebp
movups
or
xor
xchg
xorl
ljmp
xchg
mov
sahf
nop
jmp
imul
inc
hlt
xchg
outsl
or
xchg
loopne
inc
mov
fstps
cmpl
pop
add
sbb
out
idivb
fstps
nop
xchg
lods
out
sbb
dec
hlt
or
jecxz
pop
cmovns
or
mov
ret
xchg
jno
mov
cmp
addr16
mov
popf
das
inc
lcall
xor
jmp
shl
xchg
adc
inc
lock
ljmp
mov
repz
or
dec
or
popa
nop
push
xlat
mov
push
testl
cmp
or
inc
dec
and
je
ljmp
clc
icebp
dec
movd
and
mov
adc
inc
mov
in
mov
fildl
mov
cmpsl
jg
pop
jge
pop
outsb
dec
loopne
jp
out
xlat
int3
test
dec
jb
das
mov
test
add
jl
push
mov
cwtl
pop
sbb
hlt
xchg
xchg
scas
imul
and
mov
in
jmp
jg
jns
out
dec
jae
jne
mov
incl
adc
inc
stos
or
fdivp
addr16
call
int
sub
or
and
cli
push
enter
sub
dec
pop
nop
movsb
outsb
pop
inc
push
add
push
mov
lods
or
xchg
mov
rcrl
jp
push
mov
mov
jno
clc
int3
cmp
adc
std
mov
mov
pushf
and
inc
shlb
xlat
loop
jg
push
nop
repz
dec
push
ret
nop
or
jg
fidivrs
add
add
cmpsb
or
jmp
add
sbb
ficomps
call
mov
sbb
enter
in
sub
mov
leave
ret
or
fstps
leave
ret
notl
jno
or
les
call
inc
pushf
lea
sbb
out
or
sub
xor
push
outsb
pop
mov
nop
in
fimuls
push
push
int3
neg
jg
orl
cmp
cmp
notb
es
fmull
fwait
or
test
push
or
into
add
and
out
invd
pop
clc
into
data16
mov
jl
inc
push
xchg
pop
jge
inc
pushf
addr16
fdiv
cmpsb
sub
pop
inc
push
clc
and
add
xor
icebp
in
mov
pusha
iret
xor
xchg
in
nop
in
loope
xor
jnp
pushl
xor
adc
mov
and
mov
push
lea
sbb
dec
repnz
lods
push
xor
aaa
in
fadd
add
je
sahf
cmp
push
xchg
cmpsb
and
fisttpl
adc
pop
adc
sbb
in
or
in
mov
nop
mov
or
jmp
adc
in
in
mov
push
sub
fnstenv
push
push
out
xchg
pop
sub
mov
fcoms
push
push
pop
push
hlt
pop
nop
out
int
xorb
xor
push
push
popa
outsl
outsl
adc
subb
xor
mov
icebp
fldlg2
add
xchg
xor
xchg
mov
ja
notb
add
mov
xor
clc
sbb
mov
push
cmc
xor
rclb
mov
jnp
push
and
and
mov
ret
pushf
iret
notl
movsb
dec
push
cmp
dec
sub
in
ja
in
xchg
add
dec
int3
cli
dec
addr16
pop
and
sarb
sub
push
rclb
push
sub
adc
into
xlat
sub
pop
dec
fadds
fcoms
xchg
cmp
cmp
or
adc
jnp
into
or
fdivrl
and
pop
mov
mov
sub
fisubrs
sub
fwait
in
in
mov
in
pop
fisubl
push
and
hlt
sub
mov
xor
and
push
popa
pop
jmp
lods
out
mov
xor
sbb
mov
push
out
hlt
mov
cmc
cltd
call
js
pop
shlb
aam
sub
int3
xchg
shrb
pop
dec
adc
clc
cmc
xor
fisttpl
inc
sub
sbb
jnp
sti
pop
adcb
dec
lods
popa
xchg
nop
push
sbb
push
and
dec
ss
cs
sbb
popf
push
cmp
lock
jnp
insl
les
fsts
dec
mov
mov
sbb
in
insb
mov
fsubl
pop
clc
and
cmp
cmp
adc
sub
and
jecxz
pop
in
pop
test
push
push
stc
sub
jg
or
or
cmp
sbb
dec
xor
mov
outsb
adc
xor
xor
xor
movsb
sbb
mov
test
jecxz
bound
push
pop
fs
into
addr16
mov
lahf
mov
fcmovnb
xor
push
fcoms
or
xor
neg
iret
push
push
push
xor
xor
sti
cmp
adc
int
les
mov
inc
add
not
neg
not
push
and
or
je
testl
mov
jmp
mov
lock
lea
jl
nop
push
pusha
pop
pop
and
xchg
incl
jg
adc
enter
jg
inc
hlt
sarb
mov
into
dec
inc
imul
stc
movsb
dec
mov
loopne
test
inc
mov
add
nop
or
div
mov
mov
scas
xchg
or
lods
push
ror
dec
pop
or
sti
and
sbb
not
inc
and
dec
inc
and
adc
xlat
test
fistpll
fdiv
fldenv
icebp
dec
or
xor
xor
inc
push
pop
pop
mov
sbb
sub
loope
mov
adc
mov
mov
adc
push
and
ud2
lods
std
shlb
fisttps
cmpsb
stos
xor
mov
xor
idivb
dec
mulb
div
xlat
mov
add
push
jo
fisttpl
icebp
xor
in
push
fcomp
push
jg
mov
push
pop
nop
sub
fidivl
xor
idivb
pop
decl
push
mov
ja
out
dec
mov
sbb
push
xlat
cmp
test
les
cmpsb
adc
inc
iret
leave
push
mov
pop
push
sbb
push
clc
ss
ds
dec
inc
imul
mov
cmovp
add
and
testb
fisttps
inc
and
inc
inc
jge
into
lods
shr
push
and
and
dec
popf
in
mov
sbb
dec
sub
outsb
xor
inc
pushl
xor
sti
in
out
rclb
shll
repz
inc
lods
add
fnstenv
imul
in
inc
fs
aaa
and
adc
jnp
mov
xchg
cmp
add
and
xchg
fstpt
leave
stos
test
jo
dec
mov
testb
rcll
lahf
jnp
mov
inc
cmpsl
int3
inc
adc
pop
mov
fldcw
inc
adc
xchg
dec
inc
arpl
and
cs
inc
bound
add
lcall
sti
rcrl
cmp
push
or
lret
cmp
ret
lcall
or
jbe
adc
push
jno
addl
or
adc
pop
xchg
mov
xor
lcall
and
xchg
or
and
clc
decl
adc
mov
jecxz
cld
loop
cmp
xor
pop
inc
cmp
xchg
das
enter
popf
sti
fsubl
and
daa
push
xchg
std
call
adc
sub
imul
xlat
ja
mov
popa
repz
addr16
add
pushf
mov
cmpsl
pop
xchg
xchg
enter
push
lret
adc
adc
dec
lahf
fcomip
fdivs
add
cmpsl
sbb
or
mov
stos
or
rcrb
mov
mov
sbbl
ret
lods
pop
inc
mov
mov
dec
mov
pop
hlt
push
jbe
push
xchg
mov
jnp
xor
xchg
xchg
xchg
leave
jg
pushf
mov
ja
jmp
test
inc
dec
adc
incb
filds
rolb
jp
popf
scas
jg
ds
and
mov
stos
push
mov
xchg
das
cmp
out
add
xchg
sbb
nop
lcall
sarl
fidivrs
dec
push
or
xchg
xchg
or
mov
dec
jb
add
lcall
cmpsl
dec
sbb
negb
adc
inc
loope
mov
mov
decb
cmp
mov
cmp
in
cli
cmove
loopne
mov
push
lret
and
outsl
js
movb
lret
jl
in
adc
out
rcrb
push
xchg
and
pop
sbb
stos
sahf
test
pop
xchg
filds
aam
ficoml
cltd
dec
nop
cld
lret
aad
xchg
pop
xlat
xchg
outsb
outsb
aas
mov
stos
xor
pop
xchg
fadd
sarb
out
mov
inc
sbb
flds
mov
sbb
fistl
jne
and
orb
cmp
not
add
fcmovnbe
or
xchg
mov
mov
mov
jl
and
cmp
xchg
push
ss
mov
xor
or
and
cmp
and
pop
ljmp
gs
inc
cs
inc
mov
imull
mov
sub
into
fldenv
bound
imul
ss
in
mov
xchg
adc
mov
inc
ret
add
xchg
fnstcw
inc
inc
outsl
pop
repz
xor
push
mov
pop
cmc
cmpsl
cmp
mov
and
and
addr16
push
cmpsl
popl
push
faddp
out
or
or
jle
mov
jbe
inc
jbe
popf
or
icebp
xchg
cmp
mov
and
aas
inc
adc
jge
ljmp
test
inc
les
jnp
sarl
icebp
mov
mov
pop
pop
and
lret
adc
sbb
stc
push
jbe
cli
repnz
push
outsl
mov
frstor
sub
pop
mov
outsl
ljmp
inc
mov
xchg
fs
inc
ficoml
or
loop
xchg
jmp
std
stos
jp
or
mov
push
adc
adc
mov
test
movsb
sbb
cli
and
mov
popa
cmp
cli
loopne
cmp
daa
enter
mov
cmp
mov
mov
mov
add
cmp
push
and
shrl
pop
js
adc
int
inc
bswap
in
pop
pop
push
mov
push
out
add
mov
xchg
inc
mov
cmc
popf
sarl
aaa
out
clc
fists
xchg
out
insb
inc
orb
push
fwait
xor
xor
pop
xchg
cmp
pop
std
cli
lret
or
cwtl
fmuls
cmp
fildll
add
js
inc
mov
sarb
out
and
and
icebp
mov
inc
mov
jns
or
movsb
xchg
cld
aas
and
jmp
stos
test
xchg
cmp
in
inc
and
sub
and
pop
out
xchg
daa
mov
mov
ud2
sub
mov
lret
repz
bnd
movsb
enter
cmp
xchg
orl
aam
sbb
cmp
andl
xchg
insl
shl
lret
sbb
xchg
addr16
mov
sti
inc
stc
loope
test
fists
cmp
scas
jns
inc
test
mov
lret
inc
xchg
mov
mov
cmp
mov
ret
mov
pop
mov
push
adc
jno
pop
pop
adc
xchg
stc
push
dec
mov
mov
inc
into
fnsave
xchg
cli
push
xchg
lret
mov
pop
popa
lea
pushf
dec
cwtl
decl
aam
inc
jl
movsb
pop
ss
jb
test
mov
sub
fadd
cs
cli
xchg
or
sbb
push
mov
xchg
jae
dec
mov
inc
inc
lds
adc
xchg
hlt
push
push
lcall
ret
mov
mov
clc
pop
mov
jb
loopne
pop
call
lcall
cmc
lret
jnp
gs
andb
mov
imul
lock
xchg
cli
ficoml
mov
cmp
inc
in
aaa
icebp
mov
jb
xchg
sub
icebp
addb
inc
mov
jl
mov
mov
lret
adc
and
xor
leave
xlat
jp
sbb
dec
inc
cli
cltd
mov
and
pushf
adc
mov
and
lea
int
cmp
lret
sti
xchg
aad
cwtl
add
mov
in
push
dec
xchg
push
lret
bnd
mov
sub
ret
xlat
mov
lcall
inc
xor
je
adc
dec
push
lret
xor
cli
xchg
lods
mov
in
mov
pop
inc
mov
std
dec
sarl
ret
xor
movsl
and
shrl
add
scas
inc
cmp
aaa
iret
mov
lcall
mov
insb
inc
faddl
shr
repnz
and
or
rep
sbb
rcrl
dec
andb
mov
pop
xchg
add
cmpsl
mov
outsb
fcoms
or
leave
loope
frstor
adc
add
ds
sbb
orl
lret
rolb
sbb
daa
xor
mov
xchg
mov
jnp
movsl
enter
adc
mov
ret
clc
and
xchg
mov
mov
inc
gs
mov
cmp
push
dec
cmpsb
addb
pop
and
and
fwait
popl
stos
outsl
rcrb
addr16
sbb
js
xchg
and
into
shlb
outsb
outsl
adc
lret
xchg
xchg
xor
lods
in
or
mov
add
pop
fs
mov
lds
adc
sub
or
rcrb
inc
and
inc
aam
mov
out
push
mov
lcall
and
mov
mov
fiaddl
es
aas
inc
mul
xor
addr16
xchg
xchg
nop
mov
mov
or
lock
fcompl
dec
adc
cmpb
push
sbb
xchg
mov
jp
movsl
jbe
inc
or
cmpsl
shr
or
mov
ss
sbb
sbb
add
mov
rcrb
mov
inc
dec
xchg
add
fnsave
arpl
xor
in
add
movsl
xchg
fidivl
push
xor
ret
push
sarb
lret
or
pop
cmpsl
inc
xchg
mov
sub
lret
adc
and
inc
lods
sti
inc
mov
jecxz
cmp
ds
and
fbld
xchg
jb
popa
and
inc
sbb
dec
adc
aaa
adc
out
fs
ret
adc
inc
dec
je
inc
std
out
lcall
test
and
jl
fcmovu
ret
xchg
out
aas
push
push
push
adc
push
and
cmc
mov
dec
popf
mov
rcr
and
and
mov
cmp
jle
lea
mov
sub
fs
xchg
pusha
je
push
lock
pop
adc
out
xchg
jg
test
dec
inc
fisubl
adc
lods
pop
adc
pop
outsb
push
fs
pop
mov
dec
sbb
pop
adc
nop
nop
and
mov
fwait
adc
xchg
shl
or
xlat
mov
mov
push
push
ret
jecxz
stos
xlat
movsl
lret
mov
xchg
cmp
mov
testl
lcall
mov
cmpsb
add
mov
pop
jmp
inc
adc
jmp
pop
xchg
js
jo
push
mov
push
xchg
pop
and
fnstcw
mov
push
lcall
mov
jnp
rcr
xchg
inc
xchg
push
pop
ja
and
dec
inc
adc
ljmp
pop
dec
ja
add
mov
inc
push
mov
or
insb
xchg
lret
adc
rcr
add
mov
int3
ja
andb
cmpsl
cltd
xchg
les
cmpsb
xchg
stos
mov
and
fcmovbe
jne
icebp
add
mov
xor
mov
divl
and
cmp
lock
das
das
andb
cmp
rcll
xor
mov
add
mov
stos
and
push
xchg
xorb
mov
inc
inc
lret
faddl
cmp
movsl
pop
clc
das
push
jle
or
lret
and
bound
add
add
clc
cmpsl
adc
mov
and
loope
xor
mov
dec
pop
mov
xchg
push
xchg
testb
lcall
push
xchg
lds
pop
jmp
outsl
inc
loopne
xchg
xchg
fsubs
or
xchg
scas
and
nop
lods
xchg
fyl2x
inc
lds
js
add
and
ret
adc
pushf
pop
inc
sub
push
sbb
movsb
fs
dec
nop
loopne
xchg
out
fiaddl
cmp
andl
and
test
push
fs
es
adc
enter
aas
and
mov
inc
stos
xchg
add
add
push
fwait
sbb
mov
ljmp
mov
mov
mov
and
pop
lahf
and
mov
lock
addl
divb
add
or
mov
nop
pop
jmp
cltd
gs
fmull
mov
pop
jb
pop
les
xor
gs
inc
rolb
push
in
call
nop
mov
jno
imul
add
call
ss
addr16
aam
inc
xor
in
enter
pop
in
cmp
push
add
adc
sbb
cmp
clc
add
rcrb
add
ret
outsb
and
add
sub
in
fmuls
xorb
jg
rol
xor
not
ror
shr
push
lcall
xor
fimull
dec
dec
add
mov
inc
neg
sub
xchg
fucomp
add
or
mov
loope
add
ljmp
fs
dec
or
xor
jl
aam
shrb
xchg
push
push
push
mov
fs
inc
shlb
push
sbb
movsb
mov
or
add
cs
add
popf
and
pusha
dec
outsb
adc
cld
sti
out
add
jbe
repz
mov
pop
stc
dec
not
fcmovnu
std
jmp
sti
push
push
pop
rolb
or
dec
push
in
xchg
dec
mov
not
push
pop
inc
add
or
in
incl
mov
mov
push
push
cmp
loopne
xchg
cmp
insl
add
andb
stc
xchg
and
sub
xor
popa
mov
xorl
out
xor
rcrb
add
dec
fs
pop
sbb
je
xor
xchg
cmpsb
mov
stc
std
xchg
inc
addl
xchg
insb
or
and
pusha
adc
cs
jl
ret
shl
cmpl
adc
jo
or
int3
test
test
rorl
in
rcrl
negl
xor
movsb
test
adc
cmp
pop
decl
shl
cwtl
mov
fiadds
mov
mov
pop
xchg
cwtl
sbbl
inc
pop
cwtl
and
out
test
je
adc
repnz
popa
adc
xchg
xlat
push
popf
movsl
mov
cmp
xchg
or
in
repz
cmp
adc
add
and
outsl
mov
les
daa
imulb
inc
nop
xchg
lea
mov
enter
dec
int3
push
push
je
loopne
xchg
dec
lret
dec
fbld
fstpt
in
xchg
inc
xchg
add
mov
cmp
ret
arpl
push
mov
pop
jne
stos
xchg
xor
push
lods
mov
jl
adc
inc
xorb
dec
rcl
inc
mov
aad
adcl
jae
or
cmc
push
fs
mov
mov
lea
and
xor
call
add
pop
jns
inc
cmp
inc
in
inc
nop
mov
cmp
adc
xor
roll
inc
jle
insb
or
xchg
lods
hlt
mov
and
orl
leave
add
insb
addr16
movsl
cmpsl
lcall
insb
orl
in
push
push
rcrl
adc
outsb
clc
push
vrsqrtps
cmp
sbb
out
lcall
cld
xor
mov
in
xor
sbb
bound
cmpsb
cmpl
xchg
leave
sbb
add
cltd
sahf
or
add
ljmp
into
mov
dec
add
pop
add
inc
push
inc
adc
les
jp
and
or
stos
pusha
pop
scas
pushf
push
xor
pop
mov
xchg
dec
adc
push
inc
inc
mov
xor
inc
push
scas
and
test
cmp
addl
testl
jo
push
lods
dec
outsb
je
aaa
jo
push
ljmp
or
nop
push
adc
stos
cltd
mov
jo
mov
cwtl
push
les
sahf
and
fs
push
add
lcall
sbb
aaa
xor
mov
xchg
dec
sbb
push
aam
cmp
movsb
or
xchg
and
aaa
mov
mov
in
les
push
and
adc
sti
rclb
sbb
je
jg
pop
rclb
mov
push
inc
lahf
int
mov
sub
xor
jbe
dec
push
xchg
or
shl
jne
das
pushf
les
div
jge
pop
pusha
xchg
aam
mov
push
mov
cmp
leave
add
aad
lods
pushf
fnstcw
pushf
lods
out
or
push
mov
sti
inc
mov
pop
js
inc
dec
xor
mov
das
mov
xor
cmp
xor
or
push
mov
arpl
sub
test
sbb
fwait
adcb
sarb
lahf
je
gs
xor
js
andl
and
lret
fwait
dec
neg
adc
push
cld
pop
mov
daa
addb
loope
shr
cmpsl
imul
inc
outsb
movsb
std
jle
inc
cli
add
addl
sti
out
or
imull
mov
lds
roll
ret
mov
mov
mov
lcall
test
xor
push
jno
add
shlb
gs
outsb
imul
mov
or
fldenv
xor
xor
daa
or
stos
sbb
cwtl
outsl
sbb
test
inc
mov
test
sub
adc
nop
add
cmp
adc
lock
jle
clc
jns
call
filds
inc
dec
push
push
push
ret
lea
rclb
clc
cwtl
dec
pop
stc
subb
inc
insb
dec
les
mov
or
ss
fldl2t
xchg
dec
jg
out
loop
xor
setb
mov
or
xchg
ljmp
xor
xchg
ret
hlt
lods
js
add
and
xor
aam
es
or
push
mov
xchg
jl
mov
push
push
push
jl
pop
xchg
cld
mov
shll
aad
fs
push
xchg
and
fstps
test
lcall
push
les
adc
shlb
add
fdivr
push
icebp
inc
shlb
pop
mov
dec
dec
mov
mov
leave
loope
inc
rorb
jo
xor
es
and
xor
xor
mov
xchg
dec
add
in
les
mov
aam
pushf
cmp
mov
add
imul
or
insl
enter
mov
leave
dec
add
mov
xor
lock
lods
nop
rcrb
loopne
dec
xchg
xchg
push
ja
xchg
js
pop
daa
mov
jp
or
mov
or
in
cmpsl
and
push
out
or
push
mov
adc
add
sub
push
adc
lods
daa
into
rolb
push
cwtl
aas
out
enter
dec
inc
sub
out
loope
dec
and
mov
add
lea
xor
fs
jg
add
fdivr
add
add
pop
mov
push
insb
inc
mov
xchg
push
addl
pop
and
je
and
loop
sub
xor
dec
sbb
orl
jno
and
adc
test
pop
scas
fdivrl
and
adc
outsb
push
insb
push
test
test
ss
add
add
js
out
lods
sub
mov
sar
mov
fcoms
nop
roll
adc
ret
mov
call
test
add
nop
shlb
ljmp
lcall
fldl
lods
not
sbb
mov
or
arpl
mov
lds
mov
and
orb
jb
enter
adc
xor
dec
sahf
pop
xchg
sbb
sbb
and
sbb
mov
sti
mov
testl
stc
or
adc
mov
and
jmp
dec
in
and
inc
xor
sub
andb
fldcw
rolb
les
stc
aas
and
lods
mov
push
clc
insb
xchg
sbb
xor
or
xor
fwait
sbb
mov
mov
cmp
cwtl
ljmp
cmpsl
clc
orl
jge
aam
dec
xchg
push
pop
lea
push
lock
mov
ja
xchg
pop
sarb
jne
xchg
xor
in
je
lea
adc
popa
mov
fsubs
xchg
outsl
pop
orl
push
aaa
movsb
outsl
inc
ljmp
push
fnstcw
mov
pop
add
arpl
sbb
jo
sbb
xchg
mov
lahf
jg
dec
clc
popf
xchg
jo
jnp
inc
iret
je,pn
mov
or
mov
fimuls
jno
ret
mov
push
adc
inc
nop
in
cwtl
jb
push
inc
test
cmp
fisubrs
mov
sbb
push
sbb
test
scas
cmp
call
shlb
shlb
imulb
mov
mov
push
fisttpll
inc
mov
test
mov
popf
jns
jle
insb
decl
cld
test
adc
push
ss
test
sahf
out
cltd
add
movsl
stos
mov
mov
rorl
cmp
adc
jns
dec
add
xchg
cltd
mov
or
pusha
push
push
mov
push
int3
jae
movsl
shlb
mov
mov
mov
push
mov
andb
xor
imul
sub
lea
push
test
xchg
mov
adc
jg
leave
xchg
fists
mov
addl
adc
enter
xor
add
ret
inc
dec
lea
js
push
into
add
loopne
and
sub
mov
lea
add
fwait
test
mov
lahf
fnsave
je
push
mov
sbb
int3
stos
xorb
adcb
and
bound
mov
mov
insb
popf
mov
in
add
add
loopne
add
loopne
dec
xchg
push
push
es
adc
push
arpl
mov
push
pop
add
cli
stos
push
andb
pop
cltd
inc
lods
andb
push
xchg
add
shrl
or
push
and
xchg
push
add
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
mov
or
jg
shlb
imul
jb
negb
mov
add
imul
jae
inc
psubusb
insb
gs
imul
outsl
sub
inc
insb
outsl
jae
or
dec
notb
in
jb
je
cmovle
push
gs
mov
dec
imul
inc
dec
inc
jne
adc
inc
sti
mov
xor
je
adc
adc
jnp
sti
in
or
jb
jne
adc
leave
ds
inc
push
imul
enter
cmp
mov
je
push
ret
push
dec
outsb
sbb
je
int
dec
test
fs
in
insb
cmp
inc
insb
push
arpl
or
rcll
ds
outsb
insb
or
push
in
fnstcw
cmc
or
push
xor
popa
fs
inc
push
mov
popf
lds
xor
imul
fs
pop
fwait
nop
cmp
in
je
dec
outsl
jbe
dec
sbb
xor
gs
xor
pop
gs
push
test
and
shll
fidivl
or
fiadds
outsl
outsb
inc
sbb
or
dec
dec
jb
insb
jae
arpl
jo
pop
divb
or
jb
test
inc
or
inc
arpl
jo
subb
js
popa
pop
mov
dec
or
xor
aam
cmp
pop
cmp
cs
and
sbb
outsb
lods
dec
push
fiadds
dec
push
outsl
push
imul
push
insb
fs
adc
rorb
or
or
jb
and
lahf
xor
inc
inc
push
dec
xchg
insl
push
or
and
gs
adc
insb
lea
fs
jo
ret
outsl
mov
shlb
mov
fnstsw
dec
imul
jnp
inc
push
pop
mov
data16
mov
sbb
arpl
insb
or
in
xchg
or
xor
insb
adc
and
imul
rcrb
xchg
adc
add
aas
inc
mov
call
addr16
push
mov
enter
std
adc
push
push
cmp
imul
mov
or
adc
data16
addr16
shll
jae
add
jae
int3
xchg
inc
ljmp
xchg
in
imul
dec
or
popa
ret
test
add
test
sbb
insl
pop
jmp
jge
sbb
notb
mov
ret
mov
pop
push
adc
fisttpll
dec
fildl
ja
inc
test
insb
fs
pop
lods
sub
das
dec
sub
fwait
mov
jae
xchg
fnstsw
rolb
test
fs
mov
out
fdivs
imul
mov
jo
or
pop
jae
mov
push
push
jae
shll
pop
or
mov
and
sahf
roll
inc
test
dec
add
sar
pop
repnz
test
sidtl
add
add
cmp
sbb
cmp
adc
mov
addr16
inc
or
add
add
mov
or
push
sub
xchg
das
lcall
outsl
xchg
mov
add
pop
scas
mov
cmpsl
nop
add
je,pn
out
add
flds
pusha
jb,pn
popa
add
pop
pop
ja
pop
movsb
test
add
es
jge
insb
daa
sar
daa
jnp
add
rorb
or
add
jae
insl
sub
mov
jl
ds
add
add
outsb
es
add
and
add
add
adc
mov
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
adc
add
sbb
add
add
add
add
add
xor
add
add
add
sbb
add
add
pop
push
push
add
add
add
add
sbb
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jbe
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
push
add
add
add
add
xor
cmp
xor
xor
bound
xor
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
push
add
inc
add
add
dec
add
add
add
add
add
add
add
pop
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
je
inc
add
data16
outsb
add
add
and
dec
add
outsb
add
add
insl
add
outsb
add
add
outsl
add
jae
outsl
add
add
add
add
add
add
insb
add
push
add
jb
jae
imul
add
add
xor
xor
sub
and
xor
sub
and
xor
sub
and
xor
xor
add
adc
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
popa
add
popa
add
add
add
je
and
inc
add
outsb
add
outsl
add
add
add
add
push
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
test
add
add
add
add
add
dec
add
push
add
dec
add
and
push
add
add
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
bound
add
arpl
outsl
add
add
js
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
je
inc
add
data16
outsb
add
add
and
xor
xor
add
add
add
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
sub
and
xor
sub
and
xor
sub
and
xor
xor
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
push
push
add
push
add
push
add
push
add
push
add
push
add
push
add
add
push
add
push
add
push
add
push
push
add
push
push
add
push
push
add
push
push
add
add
add
push
push
add
add
add
push
push
add
add
add
push
push
add
add
add
push
push
add
add
add
push
push
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
insl
arpl
xor
fs
insb
add
xor
cs
insb
add
gs
insb
xor
cs
insb
add
inc
push
xor
cs
dec
dec
add
jb
imul
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
dec
insl
popa
addr16
imul
ja
add
dec
outsb
imul
add
inc
jb
addr16
jne
jb
inc
imul
fs
je
push
imul
push
gs
jne
jb
push
popa
insb
jne
inc
add
ret
sub
sbb
shrb
or
rcll
or
in
or
mov
push
adc
cmp
lods
lods
testb
cmc
xor
stos
fistps
pop
lea
int
fisubs
test
cmp
test
loop
stos
cmp
xlat
mov
cmp
dec
sub
rol
movsb
movd
daa
imul
cmp
push
mov
daa
jl
into
enter
ss
arpl
mov
add
sbb
fdivs
sbb
andl
adc
data16
das
stos
popf
pop
inc
mov
insl
mov
or
ss
xor
pusha
inc
or
mov
fistpll
and
in
in
fstps
mov
adc
repnz
push
and
adc
movsl
repnz
adc
aas
rcll
pop
mov
sbb
ja
dec
fstp
movlps
lret
fcomp
jnp
add
shlb
add
push
jmp
testb
push
aaa
shl
addr16
ret
es
aas
repz
sub
jg
push
cmp
leave
cmc
sahf
outsl
pop
data16
and
aad
dec
xor
mov
sbb
sti
popf
mov
jp
sbb
or
add
mov
addb
mov
leave
cwtl
ucomiss
xor
jno
in
out
inc
adc
or
add
ss
in
push
push
jecxz
and
lds
sbbl
gs
aaa
test
mov
jl
cmp
sub
into
cmp
xchg
es
insl
fnstenv
movsl
div
dec
push
xlat
sub
push
inc
test
outsl
test
dec
aam
mov
mov
aam
