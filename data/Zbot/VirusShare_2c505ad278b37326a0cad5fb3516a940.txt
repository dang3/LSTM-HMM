stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
xor
mov
mov
pusha
call
add
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
pop
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
add
jmp
jmp
ret
std
sub
mov
cld
add
mov
mov
shl
sub
mov
mov
movl
mov
cmp
je
sub
sub
je
sub
lea
mov
sub
jb
mov
sub
ja
push
pop
jbe
mov
popf
push
decl
ret
add
pop
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
add
push
pop
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
lea
lea
sub
sub
mov
pop
mov
mov
lea
mov
push
mov
xorl
pop
sub
or
xor
cmp
je
sub
push
mov
push
push
pop
push
pop
stos
shr
stos
shr
stos
shr
stos
pop
pop
addl
neg
clc
sbb
pushl
lea
lea
pop
repz
jmp
mov
pop
add
jmp
stos
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
mulb
add
loopne
add
and
add
and
add
and
add
and
add
add
or
add
into
and
add
and
add
and
add
add
and
add
add
ljmp
add
and
add
add
add
add
dec
and
add
and
add
add
push
add
fisubl
add
push
and
add
and
add
and
add
and
add
add
add
add
insb
and
add
and
add
add
add
add
nop
and
add
add
add
and
add
add
add
add
push
add
add
add
add
add
pop
and
add
add
add
add
add
add
mov
add
mov
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
or
add
into
and
add
and
add
and
add
add
and
add
add
ljmp
add
and
add
add
add
add
dec
and
add
and
add
add
push
add
fisubl
add
push
and
add
and
add
and
add
and
add
add
add
add
insb
and
add
and
add
add
add
add
nop
and
add
add
add
inc
imul
insl
gs
insb
outsl
jae
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
fs
imul
add
add
gs
outsl
jbe
inc
imul
jns
add
repnz
imul
jb
je
arpl
add
xchg
add
je
jne
jb
outsb
je
push
add
aam
inc
gs
jb
jbe
push
jns
gs
add
add
outsl
bound
dec
outsl
arpl
add
inc
gs
je
dec
popa
outsb
fs
add
ret
gs
jne
jb
outsb
je
jb
arpl
jae
addl
jb
popa
je
inc
imul
jns
add
cmp
push
jb
jbe
je
push
jb
imul
inc
add
insb
outsl
jae
dec
popa
outsb
fs
add
push
gs
imul
roll
dec
gs
jo
jb
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
add
je
imul
bound
gs
add
call
inc
imul
bound
gs
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
rolb
insb
outsl
bound
inc
insb
popa
addr16
push
push
je
imul
inc
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
and
inc
js
jb
arpl
outsl
outsb
inc
add
sbb
insb
imul
outsl
outsb
add
add
inc
jb
add
push
add
addr16
arpl
jo
inc
imul
je
inc
push
add
gs
insb
dec
gs
popa
addr16
outsl
js
add
addb
dec
inc
gs
popa
insb
insb
outsl
arpl
adc
inc
insb
insb
push
outsb
jb
imul
jb
gs
sbb
inc
jb
addr16
jne
jb
inc
imul
push
push
bound
je
add
add
push
outsb
jb
imul
jb
gs
mov
push
dec
inc
gs
gs
imul
inc
jb
addr16
imul
push
dec
inc
dec
dec
xor
cs
insb
add
add
arpl
outsb
jbe
jb
inc
arpl
inc
arpl
jae
add
add
arpl
outsb
jbe
jb
push
inc
push
outsl
inc
arpl
jae
add
or
inc
arpl
jb
gs
outsb
fs
jb
popa
jns
or
inc
arpl
gs
js
insb
imul
jb
gs
dec
push
dec
inc
push
push
inc
cs
insb
add
jae
push
push
popa
je
add
push
pop
push
dec
inc
dec
inc
cs
insb
add
mov
and
pushf
xchg
push
push
repnz
mov
sysenter
lret
pushf
loope
push
vpsrlw
pop
cmp
sbb
xor
neg
mov
mov
imulb
cwtl
sbb
xor
push
in
test
shlb
gs
in
and
adc
arpl
stos
data16
mov
xchg
jnp
enter
outsl
daa
dec
push
adc
sub
sub
add
mov
push
dec
push
icebp
pushf
adc
sbb
imul
mov
daa
xor
aaa
out
cmpsl
and
inc
lcall
scas
aam
sbb
inc
outsb
lock
inc
imul
out
jo
push
dec
mov
fbstp
xchg
add
aam
and
mov
jo
mulb
mov
mov
je
jecxz
int3
sbb
pop
push
mov
mov
dec
cltd
rorl
xchg
cli
rcrl
lods
push
movsb
pop
arpl
loop
out
sti
or
adc
sub
jle
es
jb
jbe,pt
sbb
pop
sti
mov
data16
jae
jge
mov
push
xlat
jmp
lahf
jbe
test
and
dec
daa
mov
jecxz
xchg
mul
rclb
es
add
fstl
out
push
jecxz
mov
in
adc
mov
mov
mov
cmp
add
into
or
std
pop
xchg
test
fsubrs
mov
cwtl
aad
mov
sbb
jno
lcall
test
loop
adc
adc
and
mov
repnz
sub
pop
addr16
pop
sarb
lcall
test
stos
daa
popa
mov
pop
cmp
xchg
aaa
test
and
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
inc
add
test
add
clc
data16
test
add
mov
or
add
addl
add
mov
add
add
add
add
add
add
add
add
add
and
add
add
andb
add
push
sub
sub
xchg
xchg
xchg
add
scas
scas
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
lods
mov
mov
lcall
jle
add
add
xchg
xchg
add
mov
inc
mov
ret
leave
lret
lret
lret
int3
rcl
in
rcl
shl
ror
shl
int
int3
hlt
enter
leave
leave
enter
mov
mov
stos
lods
lods
lea
lcall
add
add
add
add
add
add
add
add
add
add
add
add
mov
sahf
add
mov
jae
mov
out
lret
lret
rcl
cld
xlat
xlat
std
xlat
xlat
aad
aam
rcl
sar
into
int3
int
aam
ror
sar
ret
std
mov
mov
lods
iret
mov
mov
and
add
push
add
add
add
add
add
add
add
add
lods
lods
lods
add
scas
sbb
mov
jnp
mov
sar
lret
call
ror
aam
aam
xlat
fcom
call
aam
int3
int3
int
into
into
into
call
aad
dec
into
int3
inc
rol
mov
mov
lods
std
cmpsb
cmpsl
cmpsl
ljmp
push
or
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
pop
push
pop
add
dec
add
pop
add
push
or
inc
or
sbb
add
add
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
enter
int
rcl
sar
fcomp
fdivr
xlat
call
aad
dec
into
int3
dec
lret
int
int3
inc
mov
mov
mov
mov
cmpsl
test
jmp
cltd
fwait
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
imul
imul
fs
das
femms
push
sub
aaa
cmp
cmp
sub
and
adc
pop
pop
pop
add
add
add
add
fs
mov
pop
mov
mov
mov
mov
mov
rol
ret
ret
ret
leave
call
rcl
call
aad
call
aad
call
ror
dec
leave
enter
inc
ret
ret
mov
mov
ljmp
mov
sahf
xchg
xchg
xchg
lcall
addl
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
arpl
push
push
push
add
jno
jg
jge
jg
jle
jb
jno
bound
mov
cmp
cmp
inc
inc
inc
mov
outsl
jo
nop
arpl
pusha
inc
inc
inc
xor
add
add
add
add
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
dec
leave
dec
lret
lret
dec
lret
enter
ret
mov
mov
ljmp
movsb
mov
call
xchg
xchg
cwtl
cwtl
xchg
lcall
lahf
aas
ds
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsb
outsl
outsb
add
pop
or
jnp
nop
fcoms
test
jl
jp
jnp
jp
outsb
jo
out
addr16
jae
jae
jle
jge
jns
jns
arpl
inc
inc
cmp
pop
sbb
adc
adc
lods
lods
stos
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsb
cmpsb
test
pushf
popf
pushf
call
test
incl
xchg
xchg
sahf
mov
mov
mov
js
jp
xor
das
add
add
add
add
add
add
add
add
add
add
mov
pop
push
test
lahf
in
mov
incl
mov
std
mov
jg
jno
jno
jne
jne
jle
jge
addb
xchg
push
cmp
ss
push
jle
jle
cltd
cltd
lcall
test
lods
sti
stos
lods
stos
stos
lods
lods
stos
stos
test
movsb
movsb
mov
xchg
xchg
xchg
incl
jle
js
jp
jnp
jns
xchg
cwtl
mov
mov
sti
mov
mov
mov
mov
mov
lods
scas
stos
test
sbb
or
add
add
add
add
add
add
pop
pop
adc
movsb
test
mov
mov
xchg
xchg
xchg
incl
xchg
mov
xchg
std
cwtl
xchg
xchg
stc
xchg
xchg
xchg
in
mov
enter
int
lea
mov
pop
pop
push
femms
xor
inc
dec
insb
insb
imul
test
lcall
out
fwait
lcall
mov
decl
mov
lcall
cmpsl
movsl
ljmp
mov
std
mov
mov
mov
std
mov
mov
movsl
movsb
mov
or
add
add
pop
pop
adc
test
mov
incl
xchg
decb
xchg
xchg
sahf
pushf
sahf
std
movsl
movsl
movsb
stc
mov
xchg
xchg
in
xchg
nop
in
xchg
push
jne
cmovp
add
inc
or
or
es
dec
dec
dec
outsw
jno
test
xchg
xchg
rclb
xchg
xchg
std
mov
xchg
call
sahf
mov
ljmp
cmpsl
lods
pushl
lahf
scas
mov
xchg
mov
mov
ljmp
mov
add
pop
pop
adc
scas
mov
les
pushf
incl
mov
call
xchg
xchg
xchg
xchg
popf
sahf
sahf
mov
test
mov
fstpt
jp
push
push
push
outsl
dec
dec
dec
pop
popa
arpl
jae
mov
jg
test
int
xchg
xchg
in
xchg
xchg
testl
lea
jmp
mov
mov
pop
mov
mov
aaa
jge
mov
js
mov
cmpsb
mov
mov
lods
stos
mov
mov
add
shll
adc
mov
ljmp
pushf
decl
xchg
call
xchg
xchg
call
xchg
xchg
lcall
sahf
mov
movsb
std
mov
cwtl
fwait
out
nop
xchg
mov
xchg
aad
xchg
lcall
xchg
cmc
xchg
xchg
std
xchg
je
fwait
imul
ljmp
aaa
jnp
mov
jb
mov
outsb
ljmp
adc
lods
or
stos
or
mov
jle
mov
mov
stos
pushf
movsb
movsl
movsb
and
add
add
mov
add
pusha
adc
mov
ljmp
sahf
call
xchg
xchg
lcall
sahf
sahf
jmp
sahf
popf
lcall
xchg
xchg
call
xchg
xchg
call
lcall
cltd
sahf
stc
lahf
xchg
pushf
cld
popf
xchg
xchg
push
xchg
pop
jg
xchg
dec
js
cltd
cmp
fwait
sub
push
addr16
sahf
sbb
mov
adc
stos
adc
stos
adc
lods
adc
scas
adc
mov
imul
mov
insb
mov
cltd
scas
mov
scas
lods
scas
movsb
mov
movsl
add
add
add
add
add
pop
pop
adc
mov
ljmp
pushf
call
sahf
pushf
lcall
mov
movsl
jmp
xchg
xchg
decl
mov
decl
ja
fwait
jo
fwait
bound
call
cs
sbb
pop
call
push
pop
call
add
mov
adc
stos
sbb
pushl
push
outsl
pushl
pop
jae
mov
and
mov
aas
cmp
xchg
scas
mov
lods
lods
mov
mov
movsl
movsb
add
pop
pop
adc
lods
mov
shll
sahf
popf
sahf
jmp
cmpsl
jmp
stos
stos
jmp
fwait
sahf
decl
pop
jbe
mov
decl
decl
adc
pop
incl
push
decl
add
nop
add
xchg
add
lcall
jmp
and
mov
jbe
mov
sub
sub
ret
sub
jge
enter
leave
xor
dec
scas
mov
mov
lret
movsl
dec
mov
mov
add
add
add
stos
mov
push
adc
test
ljmp
sahf
jmp
stos
test
stos
stos
lods
ljmp
mov
scas
scas
lods
jmp
jo
decl
or
incl
pop
push
incl
add
test
push
incl
push
decl
add
xchg
add
cltd
add
sahf
add
add
scas
adc
mov
cmp
inc
cmp
into
cmp
call
cmp
call
dec
xchg
dec
mov
std
mov
mov
movsb
movsl
movsb
push
mov
mov
add
add
add
mov
dec
dec
adc
test
mov
mov
lahf
lcall
scas
scas
scas
pushl
mov
pushl
mov
ljmp
jbe
decl
or
mov
pop
incl
or
test
push
incl
add
mov
push
call
add
popf
add
add
cmpsb
add
lods
add
jo
ret
cmp
dec
inc
mov
roll
call
dec
nop
fmuls
fmuls
fisttpll
fsts
call
xchg
std
mov
mov
movsb
movsb
mov
or
add
add
add
add
dec
dec
adc
jl
popf
mov
jmp
stos
stos
pushl
mov
pushl
mov
mov
mov
jmp
aaa
outsb
decl
sbb
call
adc
pop
decl
push
call
add
popf
add
mov
add
test
push
fs
and
dec
dec
call
push
xchg
call
push
cltd
fsts
fistl
jmp
pop
pushf
ficomps
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
jne
lahf
sahf
or
xchg
xchg
xchg
add
inc
adc
ja
mov
movsb
test
lahf
fwait
sahf
ljmp
mov
pushl
mov
mov
pushl
xchg
mov
call
and
xchg
and
xchg
and
xchg
sbb
or
call
add
lcall
jmp
add
mov
gs
mov
xor
fisubs
fisubs
in
cmpsb
jmp
cmpsb
call
push
test
faddl
mov
cmpsb
test
mov
sahf
lahf
add
inc
inc
adc
jp
xchg
lcall
pushf
sahf
ljmp
mov
pushl
mov
mov
mov
mov
jg
xchg
sub
fwait
das
outsb
lcall
sub
xchg
push
callw
add
cltd
add
mov
add
stos
add
mov
pushw
adc
rolb
jmp
jo
jmp
jo
jmp
jno
jmp
je
in
je
out
jbe
out
jne
in
jae
jmp
xchg
mov
cmpsl
cmpsb
lcall
lahf
add
add
insl
js
lea
lcall
mov
pushl
mov
mov
inc
mov
mov
lcall
outsb
lcall
cmp
sahf
xor
cltd
sbb
pop
lcall
add
movsb
add
stos
add
mov
pushl
add
sbb
ficoml
in
mov
ljmp
in
cmpb
icebp
cmpl
repnz
push
test
jmp
mov
inc
mov
stos
cmpsl
pushf
popf
pushf
daa
sahf
lahf
sahf
add
add
add
popa
add
cmp
pop
pusha
pop
jne
jg
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
mov
ret
mov
jmp
cmp
mov
inc
jg
movsl
cmp
fwait
sbb
xchg
add
popf
add
add
add
scas
add
add
add
les
dec
es
mov
jmp
mov
push
sar
xchg
ret
nop
ret
push
xchg
push
xchg
ret
push
xchg
pop
out
pop
fidivl
stos
stos
mov
pushf
pushf
xor
sahf
sahf
add
add
add
inc
cmp
push
inc
dec
inc
jb
pop
dec
in
push
call
mov
mov
mov
sar
ret
inc
ret
ret
mov
mov
jl
lcall
dec
jg
lods
dec
cmp
xor
lcall
add
mov
add
lods
add
mov
mov
add
movl
call
xchg
vlddqu
push
fwait
push
fwait
leave
push
fwait
enter
lret
cld
sahf
int3
cld
popf
int
cli
cwtl
lret
push
xchg
ret
fidivrs
cli
mov
mov
mov
nop
xchg
add
add
add
add
das
or
cmp
outsb
push
dec
dec
jecxz
pop
pusha
call
mov
mov
mov
mov
inc
leave
inc
mov
lahf
jmp
push
mov
scas
dec
mov
mov
push
pop
lcall
add
add
mov
popa
mov
add
leave
add
or
fiadds
in
lea
push
cmpsb
into
push
movsb
int
clc
test
cld
test
sar
sti
test
stos
sar
std
test
sar
negb
lret
leave
lret
std
mov
mov
sahf
lahf
mov
add
cltd
cltd
add
add
add
xor
or
inc
bound
pop
xlat
jae
jno
mov
sarb
mov
ret
ret
ret
inc
vpaddd
enter
rol
mov
cmpsl
jmp
mov
lods
dec
test
sahf
sbb
pop
jmp
add
mov
fs
mov
add
int
outsb
fadds
jae
ficoms
jnp
out
pop
cmpsb
push
lahf
leave
sti
lods
sar
sti
scas
aad
cli
mov
cld
mov
cld
mov
cld
mov
cld
mov
mov
std
mov
cld
mov
push
cmpsb
mov
call
lret
mov
mov
lahf
mov
xchg
or
add
add
sbb
outsb
jo
mov
aad
fsubr
aad
xlat
test
int3
int
leave
lret
lret
lret
leave
lret
leave
inc
enter
mov
mov
lods
push
mov
lods
cmp
popa
jmp
add
mov
mov
add
iret
add
add
filds
jae
ljmp
sti
lods
sar
std
mov
mov
fdivr
cld
mov
cld
mov
xlat
mov
fcos
clc
mov
jmp
mov
call
leave
int
mov
mov
xchg
or
add
add
xor
xor
add
pop
or
leave
movl
call
in
loope
loop
fsubp
fcmovu
fdiv
fcomp
fdivr
aam
std
int
iret
mov
imul
jmp
add
mov
arpl
mov
add
lret
call
add
fildl
ja
in
js
out
xor
cli
mov
loopne
inc
inc
loopne
inc
fdivrp
std
loopne
dec
dec
fdivrp
inc
dec
dec
cld
mov
leave
call
lret
sar
mov
mov
xchg
adc
add
add
incb
incl
incb
hlt
div
or
out
jmp
in
out
in
sub
in
in
dec
ljmp
xchg
out
out
in
out
fcmovu
fucomp
ret
mov
xchg
cmpsb
cmp
mov
add
ljmp
add
mov
add
int
outsb
fadds
jae
fiadds
js
call
inc
popf
cld
mov
in
cld
int3
loop
std
into
in
std
into
jecxz
std
int
dec
loope
dec
loopne
dec
in
std
shl
shl
std
shl
cli
in
mov
fdivr
test
test
xchg
xchg
xchg
sbb
lcall
std
add
incl
cmc
idiv
add
hlt
lock
hlt
repnz
out
lock
pop
out
repnz
cmp
out
in
pop
loopne
les
sti
lahf
es
mov
add
mov
data16
mov
add
roll
jb
flds
jbe
jecxz
jp
jmp
jle
negb
cli
mov
std
shl
std
shl
shl
shl
std
shl
std
out
call
call
std
fucomi
fldl2e
fld1
cld
shl
push
aam
in
lret
repz
xchg
xchg
and
cwtl
xchg
add
cli
add
testl
repz
or
aam
xor
je
negb
add
add
lods
add
mov
add
lret
call
add
faddl
jne
call
sbb
clc
jne
cld
std
fsubr
fldl2t
std
std
fldl2t
fucompp
std
fucomi
fucomp
fsubr
loopne
fsubrp
std
fucomip
shl
push
aad
call
ror
clc
lods
lods
stos
lods
xchg
xchg
xchg
jo,pn
outsl
add
add
mov
loopne
add
leave
lds
lods
jge
repnz
and
sahf
add
cmpsb
add
mov
popa
mov
add
int
outsl
call
add
loopne
jae
ljmp
cli
pop
shl
std
fucomip
fucomi
std
fucompp
fldpi
call
std
shl
cli
shl
sti
shl
clc
into
clc
int3
fdivr
cmc
ret
out
mov
fcos
fcomp
fdivr
mov
mov
fwait
cltd
lcall
lcall
mov
mov
add
mov
subb
push
sahf
add
ljmp
add
add
lds
imul
fadds
je
loopne
jp
jmp
aaa
xchg
cli
xchg
cli
lret
cld
int3
loop
sti
stc
rcl
idivl
sar
lock
into
out
mov
lret
ljmp
std
jmp
shl
call
fnstsw
in
mov
mov
xchg
add
add
add
int
add
rol
mov
cmpsl
loopne
xor
pop
ljmp
add
mov
add
int3
or
rorb
jbe
ficoml
ja
loopne
cmp
dec
xchg
ljmp
call
scas
std
loope
mov
cli
lock
int3
in
leave
rcr
loopne
shl
aad
out
loope
in
in
test
in
out
popf
jmp
lret
lods
stos
lods
adc
cmpsl
cmpsl
cmpsl
add
rolb
ret
rolb
ret
mov
stos
aam
dec
cmp
cmpsl
sbb
scas
and
mov
ja
mov
inc
xchg
ret
stc
leave
gs
test
mov
out
mov
rcl
ror
aad
int3
rcl
lret
mov
iret
shlb
fcom
aam
fidivl
loopne
gs
in
out
out
call
div
sub
div
and
icebp
repnz
or
mov
int
xchg
add
mov
rol
mov
scas
mov
test
pushf
cmc
mov
je
ljmp
mov
sarb
mov
ret
cmpsl
leave
mov
enter
int3
jp
int3
iret
addr16
ror
push
iret
rcl
dec
aam
inc
aam
aam
aad
xlat
daa
fcompl
fchs
fstl
fucom
loop
loope
in
out
ljmp
sti
testl
std
add
incl
mov
mov
shrl
mov
mov
mov
scas
xchg
mov
mov
mov
mov
ret
mov
ret
leave
xor
into
leave
daa
int
iret
and
aad
sbb
rcll
iret
rorl
aam
aad
rcr
xlat
add
fstp
add
loopne
add
in
add
in
ljmp
incb
mov
mov
add
rol
mov
mov
mov
mov
push
rol
or
enter
leave
movl
lret
add
xlat
aam
aam
aam
aam
aad
aad
add
fabs
add
aam
add
loopne
add
add
out
add
icebp
icebp
add
std
std
add
std
add
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarb
les
ret
mov
mov
mov
ja
test
test
xchg
xchg
xchg
pop
add
add
add
add
add
add
mov
mov
mov
mov
mov
enter
into
into
jmp
rcl
cmc
aam
aam
iret
iret
into
cli
int
int
lret
hlt
mov
mov
stos
fwait
xchg
xchg
xchg
dec
ds
add
sbb
add
adc
add
push
add
add
jg
addl
push
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
sarb
ror
iret
aad
xlat
call
aad
ror
iret
dec
iret
int
int3
int3
lret
mov
mov
cld
stos
stos
stos
icebp
cwtl
cltd
cltd
mov
or
or
add
add
add
add
add
add
add
add
add
add
je
jne
jne
je
gs
inc
inc
dec
cmp
sub
sub
xor
dec
sub
adc
sub
add
add
mov
mov
mov
mov
mov
mov
dec
int3
lret
call
rcl
call
rcl
dec
lret
int3
inc
mov
pushl
test
sahf
sahf
lahf
cwtl
cwtl
cwtl
jmp
outsl
jo
push
pop
push
dec
add
add
add
add
add
add
addl
test
push
imul
push
push
stos
push
insl
insb
push
pop
pop
cmp
cmp
pop
jo
outsl
adc
mov
fstpt
mov
sar
mov
mov
mov
ljmp
lcall
xchg
xchg
xchg
cltd
lcall
dec
dec
dec
dec
movups
xor
add
and
add
adc
add
pop
lcall
pop
popf
xchg
cltd
fcoml
addb
jge
jl
jp
jns
jnp
jp
jp
jnp
jb
je
push
push
push
cmp
jne
pushf
pushf
sahf
mov
scas
scas
repz
scas
lods
sti
scas
scas
scas
std
test
popf
pushf
call
xchg
call
mov
lods
jmp
lods
scas
leave
cmpsb
movsl
cmpsb
cltd
jae
je
adc
adc
add
add
add
add
outsb
insl
outsl
pop
mov
mov
xchg
std
mov
xchg
lock
nop
fimuls
mov
jp
and
inc
inc
inc
inc
dec
outsb
outsl
outsl
orl
cltd
cwtl
repnz
xchg
xchg
std
mov
call
sahf
ljmp
test
std
mov
mov
stc
mov
mov
cmpsl
mov
jg
pusha
popa
pop
or
lods
mov
movsl
mov
mov
lea
mov
xchg
xchg
xchg
std
sahf
popf
lahf
sti
lahf
mov
cltd
call
push
push
push
jo
pop
push
outsl
insb
outsl
insl
xchg
subl
nop
xchg
lock
mov
lcall
fwait
pushl
outsl
xchg
mov
mov
jnp
mov
scas
stos
insl
stos
stos
test
add
add
add
popa
or
mov
in
movsb
test
xchg
xchg
xchg
call
xchg
lcall
cwtl
cltd
lcall
cli
xchg
xchg
xchg
jmp
xchg
lea
xchg
orb
xchg
insb
xchg
xchg
pop
cmp
dec
jl
movsb
inc
js
lods
aaa
ja
mov
jae
mov
outsl
ljmp
sbb
mov
mov
mov
jle
movsl
movsl
push
pop
popa
popa
or
mov
lcall
lahf
sahf
jmp
lahf
lahf
call
mov
call
jno
cld
xchg
pusha
cmp
dec
jns
xchg
cmp
xchg
daa
imul
cltd
adc
lahf
punpcklbw
test
sbb
mov
insb
pushl
sbb
jne
mov
stos
mov
lods
lods
scas
xchg
popf
lahf
sahf
adc
add
add
pusha
popa
popa
or
lods
mov
test
mov
cmpsb
ljmp
test
lcall
cmp
mov
decl
adc
or
mov
push
decl
add
pushf
add
or
pushl
jnp
shrb
inc
das
jge
leave
xor
dec
pop
xchg
inc
stos
mov
scas
scas
mov
test
test
pop
popa
pusha
or
movsb
test
jmp
scas
scas
pushl
mov
jmp
inc
jno
mov
pop
decl
or
add
decl
add
xchg
add
sahf
add
movsl
add
mov
insl
inc
cmp
call
inc
mov
rolb
inc
xchg
fmuls
call
popa
lahf
inc
cmpsl
mov
mov
movsb
movsl
daa
std
std
add
add
add
popa
or
mov
ljmp
mov
mov
mov
ljmp
jge
pop
arpl
nop
sbb
decl
or
push
call
pop
jmp
add
mov
dec
xchg
fcoms
ficompl
jmp
pop
sahf
jmp
pop
mov
jmp
insl
test
int3
cmpsb
mov
ret
cmpsb
xor
add
add
dec
pop
jge
jp
pushf
cwtl
lcall
lods
scas
pushl
mov
mov
jmp
sub
lcall
and
xchg
push
pop
call
add
cmpsb
add
scas
add
mov
xor
jmp
insl
test
ljmp
out
jno
jmp
jns
call
test
std
mov
test
jg
add
add
dec
dec
dec
pop
outsl
outsb
insb
bound
cwtl
xchg
ljmp
mov
mov
mov
je
lcall
ja
popf
sub
cwtl
or
lcall
add
stos
add
mov
gs
or
call
inc
xchg
jmp
jns
jmp
cmpl
xacquire
push
mov
mov
test
push
fwait
fwait
lcall
sub
push
push
push
dec
pop
addr16
loopne
mov
mov
mov
ret
inc
mov
popf
jmp
inc
cmp
fwait
pop
pop
jmp
add
mov
gs
mov
push
jne
fistps
out
xchg
sar
xchg
ret
push
cltd
push
cltd
enter
leave
stc
pushf
lret
clc
xchg
jmp
lods
inc
mov
lods
popa
mov
add
add
inc
pop
pop
pop
pop
fisttpl
mov
mov
rol
ret
ret
ret
pushl
push
xchg
stos
dec
cmp
and
lahf
add
ljmp
add
add
lret
fldenv
cmp
cmc
mov
iret
stc
stos
sar
cld
stos
sar
std
lods
sar
cld
lods
sar
sti
cmpsl
lret
call
rol
test
sahf
sahf
or
add
add
push
dec
dec
aaa
jae
jb
stos
stos
stos
ror
into
int3
out
int
cmc
lret
int3
lret
lret
enter
mov
mov
lods
inc
jg
mov
add
mov
gs
add
int
outsl
fildl
call
xchg
mov
mov
xlat
std
mov
mov
sar
jmp
leave
dec
rol
scas
lods
lods
mov
add
add
add
add
or
aam
dec
loope
loop
loope
fstp
fcmovnb
aad
xlat
out
mov
addr16
test
jb
cmpsb
pop
pop
ljmp
add
leave
add
add
or
lock
mov
sti
ret
loopne
std
loopne
inc
inc
loopne
dec
dec
loope
sti
fdivr
out
mov
lret
mov
xchg
sahf
popf
popf
sbb
add
add
std
add
incb
ljmp
in
jmp
xor
loope
jecxz
lds
mov
mov
add
mov
arpl
roll
dec
add
fldl
je
jmp
insl
mov
std
sti
shl
std
shl
std
shl
std
aam
call
aam
push
enter
int3
sar
mov
mov
add
incl
std
std
incl
std
cld
pop
aam
mov
pop
xchg
popf
or
pop
pushl
add
rolb
outsl
jmp
add
in
and
shl
fsubr
cld
xlat
out
std
xlat
call
cld
aam
push
xlat
jmp
rcl
sti
mov
popf
lahf
das
add
add
int
int3
or
bound
ljmp
add
movb
call
add
loop
jns
out
xor
sti
int3
loope
cli
leave
loopne
test
xlat
icebp
rcl
lock
aam
out
in
aad
jmp
shl
in
fucomp
enter
test
incl
aam
push
mov
je
push
data16
mov
insb
inc
sbb
int3
and
aad
test
ficoms
in
mov
out
jecxz
lret
jmp
fdivrl
lret
leave
faddp
iret
mov
jecxz
fcompl
in
call
rorl
mov
add
stos
stos
stos
add
xchg
movsb
les
push
mov
mov
nop
fidivrl
jle
rol
lods
mov
lahf
mov
shlb
enter
int3
insl
aad
int
rcl
rorl
cmp
loopne
das
jecxz
fisubs
loop
repnz
in
jmp
fcmovnu
fildl
incl
incl
mov
mov
outsb
mov
stos
jns
mov
mov
mov
mov
ret
leave
and
rcl
pop
sarl
or
loope
or
into
int3
add
std
add
std
incl
lcall
shufps
or
into
int
add
std
std
incb
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
cltd
cltd
cltd
add
ret
enter
leave
enter
enter
ret
mov
scas
insb
stos
stos
lods
xor
je
add
add
add
add
add
add
add
add
add
add
add
add
stos
stos
lods
add
mov
jmp
aad
aam
rcl
sar
iret
into
int
mov
mov
sarl
sbb
sbb
add
add
add
add
add
add
add
add
jno
jb
addr16
inc
das
das
cs
daa
inc
inc
inc
and
add
add
mov
mov
cmpl
dec
int3
int
rcl
aam
int
int
mov
mov
scas
scas
lcall
mov
push
add
add
add
add
jae
jae
xchg
adc
bound
mov
data16
outsl
outsb
outsb
jb
bound
pop
pop
pop
sbb
mov
in
mov
mov
mov
stos
stos
lcall
xchg
xchg
lcall
cwtl
cltd
lds
jno
es
add
add
add
add
je
jb
fwait
xchg
lcall
test
xchg
or
addb
dec
push
inc
mov
popf
into
movsb
mov
lahf
sti
xchg
xchg
xchg
decb
lea
ljmp
mov
in
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorb
movsl
cmpsl
cmpsl
stos
mov
mov
mov
xchg
cld
pushf
popf
popf
cmc
cltd
cltd
cwtl
in
addb
pop
pusha
fs
jl
mov
xchg
mov
fwait
mov
mov
fwait
mov
jb
mov
mov
stos
lods
lods
push
stos
stos
stos
add
add
add
mov
scas
cmpsl
scas
cld
xchg
xchg
xchg
lcall
fwait
cltd
lcall
fwait
cwtl
std
xchg
xchg
xchg
out
xchg
mov
loope
jne
out
xchg
arpl
std
fwait
inc
jne
movsl
cmp
lods
sub
outsl
pushl
cmp
mov
mov
imul
into
add
xchg
pop
lods
cmpsb
stos
test
lahf
popf
lahf
jmp
movsl
call
push
decl
jb
lea
push
mov
call
or
mov
push
outsb
pushl
and
inc
sub
lds
xchg
rcrb
subl
je
push
movsb
popf
mov
cld
test
test
scas
scas
scas
pushl
xchg
decl
or
mov
push
decl
pop
jmp
adc
shlb
dec
ds
iret
inc
mov
aad
call
dec
xchg
dec
cltd
mov
mov
mov
movsb
movsl
movsb
push
add
add
push
xchg
xchg
test
mov
scas
pushl
mov
movsb
call
arpl
pop
pusha
decl
add
mov
add
mov
push
xchg
fstpl
jmp
pop
mov
jmp
movsw
call
lcall
cmpsb
cmpsl
cmpsb
pop
add
add
arpl
adc
pushf
lcall
mov
mov
mov
fwait
dec
jge
popf
xor
cwtl
and
xchg
push
pop
jmp
add
mov
xor
call
jp
out
jl
out
jge
fistpl
mov
and
add
add
adc
imul
mov
mov
mov
rol
mov
bound
lcall
add
test
add
or
fmull
in
mov
hlt
xchg
xchg
leave
push
xchg
jmp
cmpsl
inc
mov
cmpsb
sub
inc
inc
aas
adc
push
xchg
mov
mov
inc
ret
inc
mov
cwtl
ljmp
pop
push
pushl
imul
in
insl
scas
clc
cmpsb
iret
stc
lods
sar
cld
lods
sar
cld
lods
sar
cld
lods
sar
jmp
leave
inc
mov
movsb
ds
std
add
xor
jno
scas
mov
mov
aad
aad
rcl
out
lret
enter
mov
jmp
add
add
aad
jae
out
test
testl
fdivr
cld
rcr
inc
fdivr
inc
out
mov
ret
cmpsl
cmpsl
dec
cmpb
add
add
lods
lods
lods
add
in
in
or
jmp
in
outsb
movsl
and
pusha
mov
add
faddl
push
cmp
cld
int
shl
std
shl
std
shl
std
aam
push
leave
aad
int3
in
lods
scas
scas
popa
addl
add
std
std
add
incb
lret
int
sub
lahf
sbb
stos
add
mov
add
loope
jp
hlt
push
movsl
cld
enter
out
std
aad
shl
std
shl
cli
shl
push
fdivr
fmul
shl
mov
mov
xchg
xchg
xchg
pop
ret
les
mov
add
mov
or
jg
ljmp
cli
in
mov
shl
jmp
shl
out
rcl
ljmp
scas
push
lcall
add
sahf
stos
xchg
dec
and
push
mov
shll
ja
mov
xlat
mov
lret
int
fxch
rcrb
rcl
dec
in
loope
out
out
in
out
in
sbb
sarl
cmp
movsb
scas
arpl
lods
mov
les
les
rol
sbb
bswap
int
or
aam
push
std
incb
jg
addb
incl
lods
std
add
std
add
incb
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
xor
fwait
loope
int
mov
xchg
and
sbb
mov
xchg
cmp
lds
adc
lock
test
lret
ja
push
push
call
mov
fbstp
cmp
xor
push
add
loope
push
xchg
test
lret
sti
jge
loopne
sbb
rorl
incb
outsl
pop
icebp
mov
sarl
je
cmp
mov
dec
cltd
sbb
ja
mov
xchg
lahf
or
sbb
icebp
pusha
adc
inc
mov
pop
lock
add
in
mov
push
call
or
and
pop
mov
mov
cmpsl
ds
imul
add
mov
push
montmul
cmpsb
xchg
add
fiaddl
mov
sti
dec
loop
lcall
jg
pop
repnz
jns,pt
jo
movsl
cmp
xchg
xchg
les
pop
jns
mov
pop
fwait
loope
int
shrl
test
lods
xchg
adc
enter
sbb
aam
fsubrs
idiv
xchg
daa
push
lea
adc
out
pop
xor
dec
repnz
push
call
inc
mov
add
inc
mov
lods
inc
xchg
mov
mov
ficomps
adc
call
xchg
arpl
popf
pushf
test
mov
lods
and
cmp
pop
add
lret
push
in
pop
push
push
call
adc
outsb
add
sub
inc
fidivrl
stos
inc
or
pop
popf
or
cmp
out
lock
jle
adc
xor
arpl
mov
xor
push
fnstenv
xchg
pop
test
in
sbb
aad
das
sub
lcall
and
ror
aas
add
cmpsl
ds
pop
hlt
push
inc
lds
popa
clc
jns
cmpsl
mov
rol
pop
add
sahf
jl
jecxz
pop
popf
and
cwtl
stos
out
inc
mov
frstor
mov
decb
mov
push
popa
sub
pop
mov
mov
int
ljmp
es
xor
insb
negb
mov
dec
dec
out
ss
into
data16
push
in
mov
fidivl
or
cmpb
out
pushf
pop
sahf
int
insl
add
out
and
and
inc
fidivl
test
clc
les
pop
stos
in
push
pop
int3
in
cmp
fwait
push
mov
mov
adc
inc
xlat
cmc
xor
mov
pop
testb
lods
mov
jge
lcall
xor
sub
pop
push
inc
jp
push
lods
fsubrs
int
and
mov
out
lods
inc
push
or
popa
movsl
pop
xor
mov
call
call
dec
outsl
push
xor
popf
push
lea
mov
stos
inc
adc
inc
test
pop
xchg
dec
out
jl
sahf
xor
into
or
mov
popl
fdivs
stc
nop
loop
pop
test
sbb
pop
push
ss
cmp
jmp
mov
or
xlat
outsb
adc
daa
xorb
mov
inc
roll
int3
arpl
fdivs
enter
cmpl
or
scas
in
es
add
test
stc
ret
jbe
pop
test
adcb
lret
cld
aaa
sahf
xor
dec
mov
mov
ret
repz
bound
testb
lods
mov
jge
cwtl
aad
lret
push
mov
push
jmp
aas
jns
pop
lods
in
mov
mov
jg
jno
in
push
sbb
test
jbe
andl
add
push
cmp
sub
adc
arpl
je
inc
test
je
jns
or
cmpsl
test
inc
ficoms
je
mov
je
inc
test
jne
jecxz
or
push
movsl
scas
add
inc
jle
cmp
js
fildll
cwtl
das
cmpsl
sarl
dec
jmp
jno
pop
push
mov
xchg
leave
sub
movsb
cmc
and
popl
fsubrs
push
push
hlt
mov
stc
nop
inc
push
es
inc
ficoms
mov
add
lods
stos
inc
fiaddl
mov
xor
leave
pusha
sub
inc
fistl
cli
pop
imulb
add
mov
sub
mov
jnp
hlt
call
sbb
popa
clc
xor
xchg
sub
cwtl
sbb
aas
or
hlt
mov
mov
loope
jno
sbb
or
clc
jmp
aaa
into
pop
adc
inc
lret
adc
add
dec
loopne
sbb
xchg
sti
fiaddl
sahf
or
test
jge
mov
mov
fistpl
mov
cmp
shrb
fimull
ja
jmp
outsl
push
or
pop
jne
in
push
mov
xchg
sub
jb
adc
ror
hlt
mov
inc
int
jbe
cli
xchg
pop
mov
ds
inc
cmp
jno
es
fdivl
push
out
jns
cld
xchg
insl
mov
nop
in
test
icebp
xor
jb
sub
rorb
hlt
int3
js
add
ret
pop
inc
shrl
rorb
jp
adc
mov
add
adc
aad
add
sarb
hlt
mov
add
jle
hlt
pop
hlt
sub
sti
xchg
adc
pop
hlt
and
movl
cmp
or
fnstenv
sbb
stos
push
jecxz
dec
adc
adc
jns
sub
je
out
mov
add
lea
adc
xchg
inc
out
or
or
fs
inc
sbb
push
add
mov
adc
jbe
push
sarl
aaa
repz
jae
and
jecxz
fisubrl
or
mov
sti
sbb
lcall
xchg
sub
mov
mov
push
xor
mov
shl
add
arpl
push
mov
lods
xchg
push
test
int
stos
fs
fsts
mov
test
mov
ja
jne
pop
test
scas
inc
lahf
push
hlt
mov
xchg
stos
inc
ret
mov
jg
fidivs
mov
aad
jno
out
sub
repnz
mov
fsubrs
pop
das
movb
andb
xchg
mov
push
out
in
mul
jnp
adc
sbb
shr
xchg
cwtl
mov
jg
ljmp
cmp
pushf
xor
out
jbe
jmp
loope
cmp
xchg
insb
add
mov
out
mov
pop
add
pusha
divl
ljmp
and
dec
loopne
sti
mov
sub
out
xchg
mulb
es
stos
inc
ss
mov
xchg
sbb
jbe
pop
or
je
add
xor
push
out
adc
fnstenv
adc
mov
add
cltd
xor
into
gs
adcb
adc
je
loopne
test
or
mov
jne
push
lods
pop
lods
jmp
loope
sub
cmp
push
call
nop
stos
out
fisttpl
mov
mov
loope
sbb
shrb
popf
xor
mov
lret
loope
stos
xor
bound
jle
mov
jns
stos
xor
lret
aas
mov
jp
and
xor
push
cli
cmpl
dec
fsubrp
xchg
outsl
adc
shlb
or
mov
fsubl
add
mov
cmp
mov
leave
xchg
xor
shlb
addr16
pop
jo
add
push
push
push
pop
push
xchg
push
pop
test
mov
mov
inc
pop
sub
push
movsl
pop
dec
test
mov
fnstenv
cli
pop
xor
lods
std
push
shrb
sbb
cmc
mov
outsl
mov
mov
mov
aam
test
mov
movsl
cmp
rcrb
sbb
movsb
mov
ja
xor
xor
push
inc
pop
mov
dec
fs
shr
fstpt
jo
cs
out
push
ret
dec
jnp
and
sbb
gs
mov
sbb
fimuls
push
data16
pop
hlt
test
mov
mov
jns
imul
lahf
sub
shlb
mov
push
pop
pop
repnz
ficompl
mov
mov
sbb
jno
mov
mov
jle
fisubrl
jb
push
mov
les
jl
sbb
push
mov
das
mov
rorb
push
lahf
into
lds
mov
add
stos
in
mov
mov
or
sbb
lcall
imul
scas
push
out
test
stos
pop
loopne
insl
loop
je
fiadds
inc
inc
lret
add
and
into
outsl
es
gs
sbb
xor
ret
cld
test
and
rorl
out
inc
pop
jb
inc
mov
jns
xchg
fsubl
xchg
dec
push
into
push
cmp
subb
jl
repnz
loopne
add
loope
rcrb
inc
fdivl
les
sub
lret
and
pop
lret
sarl
push
lods
adcb
cmpsl
in
mov
push
jbe
mov
stos
xlat
cmp
pop
mov
push
dec
scas
ss
and
ss
sbb
cs
mov
sub
mov
add
dec
and
sbb
jg
repnz
sbb
sub
pop
ja
xchg
mov
fisubl
hlt
sub
and
stos
aas
mov
in
ret
imul
mov
inc
pop
addr16
dec
dec
inc
loopne
cmp
cmp
push
inc
les
dec
into
pop
test
jne
dec
and
hlt
push
pop
scas
xchg
add
or
push
fisttpl
test
out
add
jecxz
cmpsb
cmc
rorb
jecxz
lret
out
pop
xor
xchg
arpl
push
mov
test
out
xchg
xor
xchg
mov
bound
adc
cmpsl
mov
shll
int3
test
or
dec
and
cwtl
hlt
xor
pop
movsl
test
in
insl
xchg
dec
pop
push
xor
daa
cmpb
xor
sbb
sub
jge
sbbb
mov
sbbb
int
aad
addr16
out
mov
mov
icebp
dec
lcall
mov
aad
mov
sbb
call
jno
into
xor
mov
jo
mov
add
loop
mov
pop
cmp
mov
ljmp
sarb
pop
loopne
inc
out
jno
lret
gs
sbb
rorb
inc
sbb
cmp
lahf
imul
push
xor
adc
sbb
movsl
jo
xor
and
push
daa
cmp
fs
in
in
mov
xchg
cs
mov
popa
mov
cmp
imul
call
in
xchg
inc
jns
jnp
sub
aaa
mov
arpl
outsl
subl
dec
cmp
xor
lahf
dec
sarl
sub
jge
fbstp
sahf
add
iret
sar
mov
add
add
scas
cwtl
lahf
gs
lret
mov
jae
loope
inc
xlat
testl
jg
lea
jnp
scas
cltd
xor
mov
pop
scas
mov
or
enter
sub
sub
fwait
dec
fs
cmp
orb
adc
cs
fistpll
pop
mov
pop
lock
push
jg
orb
fistpll
movsb
sahf
xor
adc
mov
mov
or
fsubrs
call
add
add
or
nop
daa
idivl
xor
mov
scas
inc
xor
int
mov
add
test
sbbb
mov
or
sub
mov
nop
lock
fdivr
mov
fs
pop
sbb
sti
js
sbb
mov
aaa
into
iret
push
out
call
outsb
add
movsl
lods
mov
int
xchg
sti
test
sbb
fstpl
ret
mov
lret
das
ljmp
jnp
xor
inc
xchg
xchg
hlt
or
cmp
sbb
ret
pop
dec
in
and
popa
loope
fwait
pop
mov
xchg
ficoml
outsb
sti
hlt
sbb
cltd
xchg
icebp
cmp
mov
pop
icebp
inc
mov
ret
or
vmread
dec
loope
xchg
xchg
sub
cltd
stc
mov
out
xchg
ds
xchg
sub
pop
icebp
mov
dec
mov
fsub
js
adc
push
or
xchg
jnp
clc
mov
lret
sbb
sub
cwtl
xor
xor
mov
loope
cmpl
jno
mov
clc
scas
aas
xchg
sub
enter
sti
pop
mov
xor
and
in
cmp
jmp
imul
mov
dec
and
inc
mov
lret
add
js
jecxz
call
cs
pop
out
les
pmulhw
loop
in
addl
mov
and
inc
dec
aas
subb
sbb
dec
loope
ss
jno
js
mov
int3
xchg
sub
mov
rclb
aad
adc
jne
cmp
mov
out
test
adc
clc
movsl
das
fcoml
sub
shl
dec
in
stc
dec
loopne
push
insb
add
push
pop
sahf
xor
mov
jb
and
push
mov
xor
jo
mov
testl
out
and
lret
aaa
fstpt
jmp
jns
jo
lods
lahf
jmp
and
mov
lods
inc
inc
xlat
adc
mov
xor
pop
mov
pusha
testl
jle
push
jl
mov
loopne
inc
fidivl
loopne
clc
adc
jg,pt
pop
fs
cwtl
jbe
and
shl
out
stos
inc
iret
adc
or
leave
pusha
pop
cs
fdivrs
jle
xchg
pop
divb
add
adc
add
mov
mov
fldcw
mull
pop
lods
dec
jle
dec
int3
shrl
push
lock
mov
push
fnstenv
sbb
mov
fsubrs
test
roll
testb
nop
adc
push
cmp
or
pop
and
out
into
ret
pop
aas
sarb
pop
shlb
ds
cs
je
test
push
mov
mov
mov
cmpsl
shrl
mov
rorl
icebp
mov
aas
lods
cmp
shufps
movsb
sbb
int
pop
lea
add
imul
mov
sub
mov
test
cmp
push
push
lds
inc
xlat
sti
ja
jp
adc
not
movl
adc
aad
mov
push
cmp
inc
int3
xchg
mov
in
fidivl
push
cmp
push
clc
pop
test
mov
aad
or
sti
dec
xchg
sub
stc
les
pop
xor
mov
xchg
push
lods
inc
cld
mov
fbstp
cmp
shll
std
xchg
xchg
pop
dec
fbstp
or
std
loope
sub
leave
or
loopne
push
mov
jp
rcrl
and
jbe
sbb
xor
andb
out
mov
sahf
jmp
outsl
push
or
mov
sbbb
test
shll
push
fnstenv
sbb
sbb
test
and
push
inc
movl
xchg
cli
xchg
mov
aam
scas
testb
pop
aaa
into
push
adcb
adc
outsl
lret
aam
or
in
lea
xchg
sub
bound
addr16
scas
inc
push
nop
inc
fldenv
push
call
mov
jo
cmc
loopne
lods
push
adc
xor
inc
lret
mov
jmp
imul
sahf
dec
mov
pop
mov
inc
fisttpl
or
bound
jmp
or
ret
loopne
and
push
loop
inc
or
jne
add
jle
cld
xchg
pop
cwtl
adcb
jnp
mov
es
mov
movsl
xor
lret
lds
push
call
jne
adcb
sahf
add
out
add
mov
aad
aad
jae
outsb
pop
repz
adc
daa
or
jnp
adc
loopne
xor
cmp
pop
popa
clc
bound
orb
test
inc
cli
xor
loope
mov
out
jmp
pusha
out
push
insl
add
or
jg
fwait
lret
ficompl
mov
jmp
test
pop
or
mov
leave
pop
notb
mov
stc
faddl
adcb
leave
test
xor
mov
mov
push
push
hlt
out
xchg
stc
nop
cltd
jge
mov
mov
scas
int
cmp
add
xor
out
xor
lods
pushl
xor
jno
notl
aaa
and
test
lea
fdivs
xlat
outsb
push
mov
cmc
mov
add
jle
stos
nop
xor
enter
inc
mov
lret
pop
popf
outsb
add
push
out
and
xor
inc
pop
stos
inc
xchg
arpl
mov
mov
ds
loopne
jge
adc
dec
add
xchg
ret
mov
int3
mov
ja
inc
fmuls
mov
mov
sub
jge
sbb
push
xor
xchg
adc
test
mov
lods
pop
rolb
ret
in
adc
loopne
cmp
lcall
and
push
sbb
inc
js
sub
pop
cmc
test
mov
dec
ret
ret
imul
dec
in
lcall
sub
test
fdivrl
hlt
mov
inc
adc
call
movl
xchg
mov
rsqrtps
xchg
sub
or
sbb
or
ss
lock
push
jmp
orb
hlt
push
jb
in
sub
cmp
mov
imul
xor
xchg
sbb
jle
xor
mov
jl
pop
mov
adc
fcoml
xor
int3
cmc
call
inc
sbb
mov
gs
fs
rcrl
mov
test
loopne
cmp
adc
pop
idivl
push
in
gs
outsb
test
je
fcmovnb
cmc
mov
lret
jle
mov
cmp
into
gs
iret
pop
test
in
sub
jge
cmpsl
add
mov
lock
cmpsb
cmp
mulb
mov
sbbl
aad
inc
mov
xor
mov
test
out
push
sbb
aas
aad
aas
pop
pusha
inc
dec
hlt
jno
int3
arpl
roll
cwtl
shl
enter
mov
push
mov
shlb
out
repnz
imul
mov
jne
xchg
cltd
das
dec
out
xorb
ret
jb
push
and
mulb
push
adc
dec
arpl
nop
mov
and
mov
add
add
aaa
cli
pop
loop
mov
call
fldl
lods
sub
xor
add
lds
mov
je
stos
cmc
jo
daa
int
and
dec
mov
xor
inc
je
sbbb
sbb
sbb
cmc
add
lds
inc
xlat
sbb
imul
cmp
xor
shlb
iret
xchg
lea
mov
fs
push
or
ds
sub
and
add
stos
inc
out
mov
mov
fdiv
fiadds
daa
fidivl
test
inc
mov
add
and
imul
pop
testl
jl
xchg
push
daa
pop
xchg
inc
mov
adc
repz
sub
ror
ret
jae
xchg
push
dec
jnp
and
pop
icebp
ja
ljmp
outsl
sbb
out
xor
in
jbe
adc
call
cmp
jmp
jle
es
test
push
stc
push
mov
pushw
and
xchg
cmp
xchg
sarb
aaa
fdiv
jno
xor
cmpsb
gs
cmpsb
sbb
inc
lret
xchg
mov
pop
pop
cs
sbb
dec
xorb
add
bound
bound
sub
aaa
bound
sub
test
loope
dec
and
icebp
mov
adc
js
in
scas
push
fiadds
lahf
clc
lock
xchg
das
cmp
sbb
cmc
into
inc
pop
sub
shll
xchg
mov
jns
repz
lods
sbb
xor
or
mov
or
rolb
loop
cs
dec
mov
adc
push
and
insb
xchg
imul
pop
bound
leave
and
sbb
insb
dec
loopne
and
pop
adc
lret
orb
adc
lahf
cmp
les
jmp
inc
pop
mov
sub
sbb
imul
pop
xchg
or
mov
push
out
jae
cmp
sti
test
pusha
xchg
in
out
out
imul
mov
test
repnz
and
sub
fmul
cmc
or
push
mov
bound
sbb
filds
adc
push
cmp
dec
aam
pusha
lds
fidivl
out
std
cmpsb
out
pop
ja
xor
jp
imulb
inc
push
pop
cmp
mov
dec
cmc
shrb
cmpsl
or
or
std
pop
add
sub
adc
pushf
imul
cmp
test
pop
mov
stos
in
leave
sti
add
and
mov
pop
sub
mov
mov
dec
mov
mov
scas
jmp
mov
inc
push
lahf
popa
dec
adcl
cli
insl
daa
xorb
test
xor
test
inc
xchg
gs
jbe
repz
and
repz
negl
xorl
out
cmp
daa
imul
rorl
or
stos
mov
pushf
cmp
push
jmp
push
ljmp
aaa
stos
roll
lock
leave
sarb
ret
mul
nop
jb
decl
fisttps
cltd
ja
add
bound
pusha
and
xor
xlat
dec
push
in
daa
enter
loope
aaa
ja
push
scas
js
dec
stos
sub
jge
jnp
cltd
dec
xchg
adc
sub
pop
cld
je
mov
jnp
cmpsb
testl
mov
addl
jne
dec
and
xchg
cmp
mov
stos
clc
shrb
dec
add
adc
mov
mov
jo
std
add
mov
or
cmp
aaa
xor
or
cmp
sahf
dec
inc
clc
pop
sub
pop
scas
cmp
sub
fs
nop
jb
sub
cli
outsl
rcl
adc
in
loop
and
sbb
sbb
push
jp
loopne
inc
mov
xchg
int3
cmp
or
pop
xchg
or
es
fs
fidivrl
mov
cmp
and
add
lods
mov
mov
mov
xor
aam
adc
std
or
pop
ja
scas
test
and
cld
lock
adc
dec
adc
xlat
mov
inc
xchg
cmp
sti
or
or
xchg
and
test
xlat
insl
jmp
fisubs
and
dec
jl
xorl
push
mov
or
shll
decl
enter
pop
xchg
inc
in
clc
pop
adc
inc
lea
in
push
xorl
orl
lahf
or
scas
mov
fucomip
adc
inc
jne
jg
fsts
jge
xchg
ret
mov
pop
cli
xchg
xchg
push
or
cmp
scas
xchg
icebp
xchg
mov
call
adc
and
push
adc
out
fwait
std
cmc
insb
movsb
xlat
negb
stos
rclb
jbe
int
lods
or
pushf
arpl
scas
mov
bound
xchg
lds
and
adc
vpcmpeqw
jg
jmp
xchg
mov
fldcw
push
cwtl
mov
mov
in
scas
out
dec
jae
cmp
mov
clc
shlb
xchg
test
pushl
icebp
das
inc
or
add
push
out
xor
fnstcw
in
mov
ss
or
pop
and
cmp
adcl
cmpb
dec
jnp
or
shrl
ljmp
mov
cmp
ds
in
ret
jg
and
xchg
pop
add
mov
sub
push
jle
inc
stos
mov
pop
lahf
in
jnp
mov
or
pop
es
outsb
cwtl
lods
sub
xchg
mov
cmp
ret
jge,pn
mov
icebp
cli
fiaddl
in
daa
inc
jae
loopne
push
js
push
xor
nop
into
call
sbbb
push
cli
rclb
inc
xchg
outsb
pop
int
and
push
add
pop
ljmp
dec
in
cmp
mov
dec
das
bound
inc
and
sub
addr16
push
lods
cli
fbld
popa
out
daa
mov
push
test
mov
jle
mov
aam
aaa
adc
mov
xor
pop
cli
out
jbe
inc
cmp
jg
repz
mov
dec
rol
push
xchg
rorb
and
call
jnp
lret
popl
cmp
xchg
cmpsl
mov
jl
pop
push
or
ljmp
jmp
mov
push
ljmp
xor
inc
and
adcl
insb
or
sahf
xchg
shlb
aas
test
and
xor
jmp
imul
test
call
out
cmpl
test
cmp
repnz
push
mov
ds
dec
cmp
fnsave
lahf
sbb
xchg
stos
mov
mov
dec
roll
pop
sbb
dec
incl
push
or
mov
xor
rcll
dec
stos
inc
inc
xor
push
addb
mov
ja
jae
jae
xchg
push
sbb
add
aad
lock
jb
data16
lret
loope
jmp
movl
in
inc
adc
mov
and
xor
in
mov
pop
cmpsb
push
bound
iret
clc
mov
repnz
cmp
add
repnz
shll
sub
insb
push
mov
test
jge
adc
cmp
stc
xchg
xchg
pop
ffreep
pop
loopne
adc
lods
pop
xchg
inc
inc
or
and
mov
jno
xor
and
lea
jb
icebp
mov
fdivs
sahf
jne
es
jb
das
mov
std
xor
cmpsl
das
mov
cs
push
std
xor
push
insb
div
push
sbb
sbb
addr16
cmp
stc
std
sbb
pop
or
imul
leave
adc
out
in
faddp
adc
pop
movsb
and
dec
cld
ss
ret
dec
mov
xchg
ja
adc
std
fdivl
cmp
lock
cmp
sbb
adc
movsb
sub
pop
cs
or
out
xor
js
sub
sahf
inc
pop
fdivrl
repz
ret
adc
cmp
cmp
shrb
push
dec
sbb
scas
and
add
xor
and
xchg
addr16
shl
pusha
fwait
shll
jne
icebp
test
inc
push
sbbb
int
icebp
lret
iret
sbb
paddusw
shl
jmp
scas
stc
lcall
sub
dec
mov
outsb
insl
mov
push
popf
add
push
in
leave
and
mov
inc
inc
shlb
pop
add
fldenv
cmp
or
out
push
xor
inc
test
dec
cmp
sub
outsl
lret
inc
repnz
iret
aam
popf
bound
mov
bound
adc
xchg
mov
add
xchg
jae
cwtl
push
dec
aas
cmp
sbb
sbbb
xchg
movsb
cld
jns
or
xor
dec
test
loope
or
push
sub
fucomp
std
scas
mov
mov
mov
push
xchg
add
lahf
mov
sti
adc
bound
or
inc
push
bound
nop
cs
or
shll
aad
jb
mov
dec
jp
cmp
sub
pop
xchg
pop
inc
shll
jno
pop
adc
fcomp
mov
sbb
dec
scas
sub
xor
jmp
ficoml
imul
sti
jns
inc
sub
lret
mov
movl
mov
cmp
cld
clc
rcr
sete
lret
add
stos
stos
or
mov
fcmovnu
mov
add
jae
dec
imul
inc
push
arpl
mov
add
dec
pop
cmpb
pop
inc
push
push
pop
sub
sub
gs
nop
ret
ds
out
pop
repnz
sbb
fcmovnu
xchg
testb
cmc
push
test
loopne
dec
cmpsb
ret
push
jb
into
dec
pop
cmc
cmp
mov
push
ffreep
in
xchg
mov
test
cld
lahf
clc
mov
jbe
cmpsb
mov
insl
sub
push
icebp
ret
lds
or
hlt
mov
rcrb
mov
in
bound
rclb
xor
dec
fisttps
pop
mov
mov
ljmp
adc
mov
fldenv
add
cwtl
xor
pop
nop
scas
mov
dec
or
mov
cld
loop
add
cmp
cwtl
jne
leave
rorb
or
dec
fucomp
in
stc
sub
push
cmovp
jp
ja
inc
push
xchg
xor
mov
repnz
shrb
jo
jns
cmp
loopne
inc
mov
negb
gs
jbe
cli
or
pop
cwtl
dec
lret
shll
fistpll
pop
gs
mov
xchg
cmc
mov
push
fst
add
mov
add
sub
stc
fbld
pop
push
lret
dec
adc
adc
repz
fs
mov
push
dec
popa
ja
add
in
jp
pop
out
ror
cmp
es
push
add
and
cmp
add
iret
out
idivl
add
xchg
inc
out
push
add
pushf
cmp
xchg
mov
lret
sahf
arpl
or
in
adc
cmc
movsb
lahf
into
or
push
test
clc
mov
or
cmp
popf
xor
mov
mov
aaa
clc
shr
rorl
fistps
mov
adc
pop
dec
testb
sub
mov
dec
xchg
mov
adc
bound
pop
imul
push
jno
es
mov
push
clc
mov
lea
lea
mov
dec
and
hlt
es
sub
lahf
mov
aam
and
clc
xor
and
fidivrs
ret
mov
xor
and
push
cmc
mov
push
xchg
add
jnp
adc
fwait
cmp
out
cmc
gs
mov
adc
repnz
cmpsb
add
lret
adc
aam
push
mov
adc
loopne
jmp
jb
lret
push
xchg
sbb
insb
test
sub
test
in
cli
mov
stos
dec
xchg
stos
jecxz
movsb
lcall
inc
popa
mov
mov
test
in
xchg
testb
sbb
inc
jne
or
ljmp
cmpsl
loope
jo
mov
xchg
fstps
dec
mov
sbb
or
cltd
pop
and
dec
jae
push
sbb
sbb
mov
js
mov
sarb
dec
xchg
inc
in
jo
faddp
mov
jo
sub
popa
jp
fld
push
pop
les
rcr
fsubrs
out
test
adc
push
lea
neg
imul
push
jle
stc
cli
insl
mov
scas
mov
sub
xor
push
nop
jo
inc
mov
out
push
and
mov
jmp
es
pop
and
fdivrs
add
or
sti
movsl
ret
pop
cmp
dec
jns
cld
pop
jecxz
or
cmp
mov
mov
add
std
and
cmp
lret
faddl
scas
insl
bound
enter
lcall
movsl
mov
les
mov
icebp
push
popl
add
xchg
cmpsb
push
or
or
cmp
xor
inc
pushf
imul
jns
js
mov
shlb
mov
out
imul
cmp
inc
fcompl
popf
push
dec
jle
or
pop
sahf
inc
arpl
sbb
mov
test
orb
or
jne
push
push
and
sbb
jge
loopne
aam
rcll
stc
push
outsl
and
dec
nop
xchg
mov
stos
mov
jg
je
fldl
mov
das
pop
repz
repnz
xchg
mov
xor
test
nop
mov
insb
icebp
adc
and
and
push
xlat
add
mov
aas
xor
push
push
push
jnp
pushf
xchg
leave
ret
sub
or
jmp
arpl
push
icebp
aaa
push
loop
jb
mov
insl
dec
cltd
push
pop
testb
or
mov
imull
cmp
add
pop
ja
xchg
adc
pushf
inc
or
pop
push
jnp
ret
je
iret
cmp
mov
leave
or
push
jae
jl
fcoms
in
jmp
std
sub
pop
mov
stos
push
push
and
mov
cmp
nop
and
push
jae
jns
cmpsb
adc
outsl
gs
enter
rorl
mov
inc
pop
lret
jp
fldenv
scas
fs
testl
lea
movsl
add
jb
enter
or
xor
sub
movsl
arpl
sbb
adc
cmp
repz
xchg
es
sbb
inc
sbb
dec
mov
sarl
jle
mov
mov
adc
ret
cmp
adc
mov
setge
mov
adc
lahf
int
mov
out
xchg
not
fld1
outsb
mov
push
push
pop
jp
movsb
push
mov
inc
jne
in
push
mov
and
leave
aad
int
cmpsl
repz
xchg
push
mov
idiv
mov
xchg
fisttpl
jmp
mov
mov
ljmp
orl
add
xor
aad
aad
xchg
jae
mov
outsb
jge
imul
stos
cld
aam
sarb
ljmp
es
aaa
jl
and
or
sub
push
inc
test
mov
aaa
jnp
aad
in
cli
mov
pop
xchg
pusha
jge
movsb
add
xchg
inc
movhlps
fisttpl
ret
xor
push
sti
andb
data16
bound
inc
fildll
testb
outsl
cwtl
sub
mov
mov
test
ss
sub
mov
or
es
mov
orl
sti
jb
xlat
cmc
ficoml
inc
pusha
xchg
enter
hlt
add
in
xchg
rol
or
add
sbb
add
add
sub
sub
mov
sarb
ror
mov
fwait
iret
ds
ret
das
push
sbb
test
and
fimull
pop
jg
adc
cli
int3
sub
dec
sti
cmp
stc
int3
out
xor
xor
push
repz
cmc
mov
inc
dec
enter
out
int3
pushl
ds
insl
test
push
es
mov
outsb
mov
cmc
cmpsb
fistpll
popf
mov
frstor
fs
push
icebp
and
pusha
fadd
outsb
scas
scas
lods
mov
sahf
adc
and
fdivs
adc
xor
scas
pop
out
xchg
xor
leave
repnz
in
ffree
adc
sub
cmp
inc
mov
mov
cmp
mov
iret
ljmp
outsl
pop
fucomi
enter
cmp
daa
mov
shr
fidivl
cmp
jnp
mov
and
setns
movsl
pop
test
in
enter
sub
pop
cmp
mov
sbb
enter
jle
push
sbb
stos
mov
cmp
jbe
fcmovbe
cmp
mov
in
inc
scas
js
inc
lds
cmp
movsb
hlt
xchg
sub
mov
xchg
pop
push
into
sahf
repz
jno
sbb
sub
adc
xor
jmp
push
jnp
push
or
fistpll
sbb
add
pop
lea
push
out
sbb
sbb
pop
dec
pushf
sub
mov
mov
icebp
int3
add
push
pop
xor
and
push
xchg
mov
stos
xchg
sub
cmp
add
mov
sti
cmp
sbbb
jno
cli
mov
in
add
in
aam
cwtl
xor
sub
lds
push
mov
das
andl
and
cmp
das
pop
add
movsb
or
cmp
mov
in
repnz
pop
inc
jns
cmpsl
std
decl
pop
cmp
mov
shrb
scas
mov
pop
std
mov
and
lock
pop
add
xlat
add
rcll
inc
cmp
push
mov
mov
cmpb
outsb
insb
fs
sub
mov
mov
cmp
jecxz
cli
mov
mov
in
xchg
leave
cmp
adc
push
mov
imul
inc
add
ja
adc
ja
push
outsb
sub
lahf
out
inc
test
clc
adc
pop
adc
pusha
mov
mov
mov
negl
aas
adc
notl
sbb
sub
ret
mov
cwtl
add
popf
or
mov
cmp
sub
outsl
mov
test
mov
xchg
inc
movsb
sar
out
sti
leave
dec
push
xor
adc
inc
adc
pushf
scas
push
add
mov
mov
xchg
xor
mov
jl
ljmp
or
outsb
sbb
or
xchg
pop
inc
gs
mov
or
sbb
jp
loopne
mov
dec
mov
ds
and
and
dec
test
into
dec
sbb
cmp
adc
stc
popa
ljmp
inc
jo
int3
cmp
inc
insl
sub
xchg
push
sbb
shlb
les
inc
lret
inc
or
dec
xor
inc
jb
mov
pop
cli
xlat
test
pushf
push
cmp
cmpsb
mov
iret
lret
dec
int
mov
imul
movsb
or
mov
jo
push
dec
add
xchg
outsl
mov
push
xor
outsb
scas
add
push
dec
fs
xchg
push
mov
pop
outsb
out
rcrb
das
dec
inc
mov
dec
fwait
sbb
lret
out
xchg
mov
xor
enter
push
das
xor
push
mov
or
inc
idiv
adc
push
mov
fidivrs
test
jns
imul
leave
fisubs
cmpsl
mov
push
jmp
or
jl
test
mov
ljmp
outsl
bound
jns
xchg
in
fsts
mov
stc
xchg
jne
push
add
enter
push
xchg
inc
push
inc
dec
nop
cmpsb
das
lret
bnd
sti
jo
push
xchg
cmp
mov
add
and
out
jae
mov
xorl
xchg
xor
cmp
jae
imul
stos
jmp
stc
inc
adc
jp
imull
aam
jo
adc
push
sub
test
popa
inc
or
cmpsb
std
dec
sbb
cmp
cmp
push
lods
lods
cmp
iret
stos
lock
hlt
xchg
and
push
add
imul
push
mov
cli
inc
push
insb
int
jb
mov
sahf
fwait
into
mov
cmpsl
xor
clc
cmp
mov
push
addb
icebp
ret
xchg
or
mov
mov
mov
mov
mov
lret
add
pop
dec
sub
jbe
fistl
sub
cmp
inc
negb
dec
ret
push
sbb
stos
enter
push
jp
cmp
cmpsb
mov
in
fdivrl
and
jmp
mov
mov
add
into
sti
xchg
jl
cmpsl
sbb
cmp
insb
divb
mov
and
xor
ret
adc
movsl
xor
jnp
or
push
js
pushf
xchg
ljmp
insb
push
fisttps
in
test
cmpsb
inc
adcb
insb
cmp
push
mov
testl
add
add
xchg
xchg
xor
popf
lods
add
xchg
mov
sub
sub
in
inc
outsl
dec
out
data16
cmpb
mov
mov
shlb
xchg
movsb
mov
ss
adc
enter
cld
push
add
movsl
lock
imull
loopne
mov
loopne
pusha
iret
stos
in
fdivl
in
dec
cmpsl
int3
push
movsb
cli
dec
cmp
cwtl
stos
or
inc
shll
jo
adc
jg
inc
fs
fidivrl
ljmp
and
lods
into
jge
mov
das
mov
mov
fdivs
jno
and
pop
fcmovnu
ret
rclb
fldcw
xchg
push
ja
mov
or
addr16
mov
nop
adc
jle
dec
xchg
jne
or
mov
inc
cmp
movsb
adc
das
rol
mov
add
out
jno
mov
lcall
add
push
sbb
std
cmp
push
insl
add
xor
xchg
insl
add
std
mov
push
xor
cmp
dec
mov
sub
imul
aam
mov
xor
jle
push
dec
cld
aam
movsl
loop
leave
mov
or
add
aas
lret
insl
and
or
ds
sub
loopne
andb
lea
lret
ficompl
xchg
jmp
je
loope
arpl
jg
pushf
sub
loop
xchg
pop
cltd
add
lds
iret
stos
mov
adc
jo
and
mov
fisttps
pop
addr16
test
sub
push
pop
call
push
cli
mov
dec
sahf
mov
inc
lds
mov
outsb
lret
rolb
mov
stos
xchg
divl
or
les
push
clc
inc
and
mov
mov
fwait
and
mov
mull
xchg
and
mov
sbb
js
repz
jecxz
js
sub
sub
popa
cld
jns
movzbl
xchg
mov
and
sti
jl
jnp
dec
out
cmp
es
mov
push
sub
out
xchg
pop
xor
imul
push
jnp
xor
movsb
mov
adc
mov
adc
dec
pop
or
cmpsb
mov
lret
negb
xchg
fbstp
sub
test
cltd
popf
je
insb
pop
mov
imul
or
pop
push
lret
and
std
cmpsb
mov
jnp
fsubr
rolb
lahf
mov
repnz
cmpl
js
push
scas
dec
ja
and
push
les
aad
stc
in
shrb
shll
arpl
push
roll
in
cli
fdivp
xlat
stc
add
stc
or
jmp
pop
and
js
pop
out
cs
fsubs
icebp
ljmpw
hlt
mov
pusha
mov
in
xor
push
aas
enter
sti
inc
sbb
xchg
adc
add
jno
adc
mov
jno
mov
lret
jecxz
mov
es
mov
cmpsl
cmp
mov
inc
gs
add
inc
push
popf
xchg
xor
sbb
jno
or
dec
insl
add
pop
cmp
dec
dec
movsb
mov
pop
mov
inc
fcoms
cmpl
out
xor
pop
inc
js
cwtl
bound
dec
adc
fstp
fwait
mov
mov
stc
ficoms
or
dec
shl
xchg
jae
and
nop
or
sbb
test
pushf
adc
sbb
jns
fistl
icebp
insl
mov
fsubl
jg
lahf
jae
movsl
pop
mov
jne
mov
mov
mov
cmpsl
or
mov
mov
push
sahf
cmp
into
or
jp
dec
cmp
movsl
xor
cli
mov
mov
call
stos
inc
pop
adc
jle
orl
sub
arpl
call
and
popf
cmc
enter
mov
sbb
leave
hlt
out
mov
mov
sbb
mov
incb
push
push
adc
xchg
push
sub
mov
xchg
and
adc
fs
lods
add
add
enter
pop
scas
lret
sub
das
pop
int
cmp
call
cmp
adc
xchg
xchg
insl
out
lock
scas
cld
cmp
and
or
or
out
sub
lret
ds
mov
shll
lcall
push
mov
loopne
je
es
xchg
rcrl
and
xchg
imul
mov
out
adc
lods
out
in
pop
fwait
pop
jecxz
adc
or
or
rorl
rolb
test
adc
outsb
imul
fadd
or
or
xchg
sti
call
outsb
insb
dec
jae
das
mov
stos
sbb
jge
pop
push
sbb
mov
aam
cmp
push
xor
andb
dec
hlt
dec
call
and
mov
test
or
xor
bound
aad
repz
mov
jle
xor
ret
test
cmpsl
jp
iret
fsubl
dec
dec
lods
psraw
cmp
push
lcall
icebp
mov
imul
fildll
mov
add
cmp
mov
mov
cmc
pop
into
test
mov
or
cli
rclb
stc
dec
popf
call
in
ss
das
sarl
dec
add
mov
inc
push
xchg
test
dec
pushf
pop
xchg
sub
sbb
mov
stos
pop
pop
outsl
lods
add
movsl
add
mov
jae
test
mov
adc
jno
lahf
aas
jg
cs
mov
in
in
mov
push
or
mov
xchg
xor
inc
leave
dec
rcrb
mov
shl
push
into
dec
and
and
ret
dec
iret
sbb
cs
roll
fadd
mov
cs
subl
scas
xor
sub
das
out
or
mov
outsl
cwtl
xchg
test
loope
cld
jp
test
xchg
addr16
pop
dec
adc
dec
mov
or
xchg
inc
fs
and
cmpb
fdiv
mov
jecxz
xchg
dec
mov
ljmp
sti
adcb
je
les
mov
cmpsl
mov
and
adc
sub
push
mov
jb
sub
icebp
js
xchg
dec
inc
sbb
dec
mov
mov
roll
std
in
int
pop
inc
test
les
clts
xchg
lret
xor
lds
rclb
cmp
mov
inc
pop
in
or
pop
inc
enter
rcrb
pop
subl
cmpsb
mov
pop
jb
pop
stos
adc
push
cmp
xor
adc
fldcw
ja
cmp
lret
jge
test
rorl
or
lods
aam
pop
cld
xor
pop
lret
addr16
inc
fisubl
out
test
inc
popa
clc
je
or
adcb
rcl
popf
xor
testb
cmp
push
outsb
dec
gs
jns
fidivl
lcall
adc
mov
stos
addr16
mov
mov
fimull
call
addr16
pop
cmp
lods
insb
jg
sbb
shlb
loopne
es
pop
pop
xor
jns
jbe
test
addb
dec
sub
dec
into
gs
xor
mov
in
add
dec
out
out
mov
push
cmp
mov
test
lret
cld
frstor
push
push
les
das
jp
popa
jno
jge
sbbb
not
mov
scas
dec
sub
jae
push
fwait
jnp
cltd
lods
mov
pop
scas
decb
insl
add
pop
sub
push
popa
xchg
sub
jno
out
mov
inc
out
jno
cmc
pop
shrl
push
lea
pop
in
orl
mov
out
ljmp
mov
inc
push
inc
fldl
mov
and
out
sbbb
or
cmp
aaa
jp
popa
clc
mov
jg
fsubrp
fdivl
add
jae
mov
lods
int
in
loopne
cmpsl
sbb
mov
adc
ljmp
test
or
fidivrs
xor
push
dec
lock
rcrl
inc
fld
iret
imul
in
ret
sbb
ds
fbld
es
mov
push
popf
stc
shlb
mov
sbb
pop
inc
sub
repz
inc
ficompl
ror
cli
shlb
or
roll
adcb
callw
jne
subl
adc
inc
sub
adc
test
scas
rorl
or
lock
cli
xchg
mov
ret
cld
rorb
or
pop
repnz
sub
push
push
dec
jecxz
mov
mov
testl
mov
sbbb
sbb
jo
or
xor
les
mov
nop
jmp
stos
inc
fmuls
test
stc
insl
and
sub
mov
testb
jmp
add
cmpsb
cmp
int
ljmp
in
inc
fstl
cmp
shll
add
lret
mov
adc
and
rclb
std
sbb
outsl
push
adc
fidivs
xchg
jns
xchg
lret
lret
loop
out
in
lcall
cmp
fidivl
rcrb
xor
cs
mov
sub
jns
js
jge
jne
jle
ret
imul
shrb
cli
dec
sub
lcall
push
scas
mov
mov
rorb
push
cmp
out
test
push
mov
jbe
mov
stc
or
push
ljmp
push
popf
xorl
scas
movsb
iret
data16
iret
data16
pop
repnz
lcall
jbe
pop
mov
das
sahf
xor
cmp
ss
pop
push
movsl
test
jns
movsl
iret
data16
jmp
or
sbbl
sub
dec
in
ja
fidivs
shrl
rorl
adc
push
pop
inc
xlat
mov
scas
stos
lret
aad
pop
lock
mov
inc
push
push
and
mov
les
xor
and
pop
ja
sub
mov
les
out
dec
fists
and
sbbl
push
call
int
stos
inc
add
and
pop
cmp
scas
fs
inc
test
lret
cmc
loope
sbb
sub
dec
cmp
stos
data16
imull
lret
repz
aam
jb
push
pop
lock
das
mov
pop
jno
dec
stos
jp
mov
hlt
or
push
and
dec
lods
jge
push
cmpsb
into
cmp
clc
enter
sbb
inc
adc
in
dec
cli
xchg
popf
jo
mov
lret
push
in
repz
dec
dec
push
cld
xchg
mov
mov
mov
mov
dec
ds
cmp
mov
leave
lcall
cld
out
sti
xchg
cs
mov
dec
dec
jecxz
push
fs
mov
mov
jmp
in
sbbl
add
push
jnp
mov
sbbl
fsubr
cmp
adc
xor
daa
xor
sti
outsb
inc
dec
in
sti
xchg
mov
fldenv
jmp
in
and
dec
insb
jge
fwait
movsl
mov
test
fidivl
pop
pop
and
cmp
movsl
xorb
mov
fstpl
add
and
push
jmp
sbbb
leave
mov
dec
pop
adc
mov
std
xchg
pusha
jo
push
stos
xorb
neg
mov
rolb
xor
pusha
bound
xchg
adcl
out
loope
dec
in
add
shll
mov
orb
popa
loope
cmpsl
pop
clc
shlb
cmp
outsl
push
push
popf
xchg
sub
shr
xor
pop
repz
in
inc
adc
ja
dec
fbstp
push
in
rclb
inc
xlat
daa
out
sti
adc
shll
push
insb
xchg
leave
pusha
int
fdivl
out
sub
pop
outsb
add
jmp
sub
ljmp
aam
scas
add
enter
ds
push
jecxz
dec
js
fildll
iret
dec
loope
mov
jnp
dec
or
es
pop
stc
nop
mov
jle
out
fsubrs
pop
pushf
xor
add
pop
subb
jnp
add
aad
stc
std
xchg
cs
dec
out
dec
push
mov
scas
jl
fcompl
es
stc
sbb
cmpb
imul
cmp
sub
inc
or
pusha
xchg
sbb
mov
xor
and
push
mov
dec
data16
sub
lret
push
xchg
xchg
xor
jp
jecxz
loop
popa
and
jbe
push
dec
hlt
je
movsb
aas
popa
cltd
or
mov
sbb
or
cs
pop
cmpb
shlb
scas
out
dec
ficoml
pop
ljmp
outsb
idivl
fadds
adc
daa
mov
pop
or
stos
pop
outsl
mov
push
scas
cld
test
jge
adc
mov
sub
rcrb
mov
add
cwtl
push
cmpsl
movl
das
mov
push
les
cmp
addr16
fisttps
and
das
ficompl
push
inc
push
bnd
outsl
notl
test
iret
jp
pop
cmpsl
loope
push
and
pop
notl
adcb
adc
loopne
int
lods
adc
cltd
cmp
call
pushf
mov
or
or
shrl
fcoms
icebp
mov
mov
inc
in
lret
jg,pn
inc
cwtl
pop
pop
xlat
jb
loopne
in
mov
sbb
lahf
xor
xorl
dec
or
subb
mov
shr
leave
es
int
sbb
fnstenv
std
jge
xchg
in
lea
ret
or
imul
pop
bound
test
xlat
sub
cld
inc
shlb
pop
fisttpl
testb
push
and
div
push
push
out
push
inc
addb
cwtl
in
scas
dec
and
ficomps
adc
js
mov
push
inc
in
mov
mov
out
mov
or
and
mov
aam
enter
mov
inc
js
int
jl
jmp
out
lret
je
hlt
or
xor
cmpsb
inc
inc
pop
jnp
xchg
je
test
add
sub
inc
call
jg
subb
mov
push
pop
in
lods
and
inc
jmp
mov
xchg
adc
xor
inc
jns
mov
push
cmpsl
rcrb
aas
mov
in
outsb
scas
dec
stos
sub
jno
fistps
xchg
outsb
dec
ljmp
xchg
pop
jne
lods
jmp
out
hlt
cmpl
and
or
mov
xor
pop
mov
rcr
xorb
jecxz
xlat
mov
add
jle
loop
push
test
shrb
popf
movsb
jmp
add
sub
push
jae
cmp
ret
enter
mov
in
pop
fsubs
sub
shll
call
mov
jp
lret
add
push
xor
xchg
cmpl
stos
movsb
movsb
cmp
lret
loope
std
test
popf
push
dec
loop
jl
sbb
mov
ret
inc
lock
inc
inc
xor
jae
jnp
lcall
push
in
out
out
pop
psubsb
cmp
imul
ret
mov
fdivrl
rorl
cs
pusha
pop
rcrl
testb
aam
stos
add
es
push
push
push
mov
js
jmp
fmul
jbe
cld
stc
dec
in
push
mov
push
dec
jl
jge
mov
push
rol
in
test
icebp
cwtl
das
and
insb
add
ss
imul
xchg
push
jmp
mov
jb
pop
adc
nop
daa
popaw
and
inc
sarl
arpl
stc
cmp
adcb
cmp
lahf
imul
mov
fcomp
inc
fildl
daa
push
out
addr16
icebp
mov
mov
mov
ljmp
out
and
xor
stos
aaa
into
jp
test
xor
pop
jae
sbbl
mov
es
add
mov
adc
negl
sarl
xchg
cmp
pop
or
es
adc
mov
loopne
jl
sub
push
popf
arpl
push
test
sbb
sub
sbb
mov
mov
jmp
inc
jecxz
add
test
xchg
imul
imul
into
mull
dec
adc
mov
pop
xor
jnp
jl
ja
jp
lea
ret
push
add
mov
daa
sub
mov
ret
pop
hlt
adc
data16
hlt
xor
mov
out
aad
mov
incb
mov
or
push
or
fcom
push
jecxz
cmp
push
in
push
loope
mov
js
lods
inc
mov
lret
pop
sub
adc
jmp
inc
and
aad
or
sbb
sti
adc
scas
int
fidivrs
adc
jne
cli
cmp
stos
pop
lods
xor
in
mov
lock
lret
adc
fnsave
out
xor
test
pop
sti
pop
mov
dec
adc
ja
push
fs
repnz
in
ljmp
push
mov
es
jno
loopne
adc
jbe
aas
push
mov
pop
mov
fsub
jnp
pop
pop
hlt
nop
das
add
in
sbb
cmp
ds
pop
sbbl
pop
lods
les
jp
stos
icebp
inc
fldenv
int
adc
inc
pushf
xor
jns
inc
xchg
popf
xor
fs
xchg
jmp
rcrb
gs
call
or
cmp
cmpsb
cmp
loope
fistl
mov
jne
xor
mov
xchg
xchg
addl
addr16
sbb
aam
dec
out
inc
xor
jmp
push
jmp
lods
aam
cmc
scas
mov
outsl
js
ret
xlat
int
leave
sub
xor
das
sbb
push
movsl
push
xor
test
fldcw
mov
xor
jg
ret
imul
ret
cmp
sbb
sbb
hlt
adcb
cld
outsb
stos
cmp
and
cmp
stos
fadd
je
into
icebp
sbb
adc
jge
mov
pop
pop
add
nop
mov
popf
and
or
adc
sub
add
sti
rcrl
xchg
adc
orb
sub
push
dec
push
outsl
adc
es
notl
cmpsb
cmc
scas
push
sub
lock
mov
popa
mov
jbe
xchg
std
jl,pt
push
test
mov
jnp
scas
pusha
neg
sahf
add
xchg
cli
movsl
cmp
aad
xor
jne
mov
jl
jne
jae
call
xchg
or
lds
scas
scas
nop
add
sbb
cs
fbld
mov
scas
inc
mov
sbbl
fimuls
pcmpeqd
jl
insb
lods
inc
pop
jg
sbb
fldt
lds
fs
push
and
pusha
push
xchg
testl
dec
enter
mov
lods
cld
adc
inc
inc
incl
out
outsl
dec
fistps
mov
jbe
jecxz
adc
add
xor
pop
push
mov
lret
mov
push
mov
pop
divb
xor
nop
movsb
pop
clc
cmpsb
pop
movsl
xlat
daa
inc
fstl
test
in
inc
es
test
xchg
pop
mov
scas
xchg
and
and
and
mov
jbe
pop
imul
sub
adc
mov
popf
inc
sbbl
hlt
xchg
clc
test
and
pop
push
sbb
push
mov
mov
xor
mov
clc
inc
cmp
rolb
adc
outsl
add
push
mov
mov
inc
fnsave
push
cmp
js
test
sbb
out
and
pop
jp
ss
xchg
popa
clc
int
add
mov
mov
popf
cmpsb
xchg
inc
ffree
movsl
ss
lock
and
sbb
dec
xchg
cli
cwtl
and
ljmp
lea
push
imul
fnsave
fldl2e
orl
and
pop
push
addr16
into
push
jns
add
roll
push
dec
pop
sbb
orb
pop
push
aaa
into
bound
js
pop
adc
inc
insl
cmp
jp
cmp
dec
scas
mov
sbb
scas
and
and
inc
and
adcl
dec
in
mov
sti
out
sub
aas
jp
pop
insl
push
mov
outsb
arpl
lods
inc
push
jecxz
xor
test
lea
jg
movsl
and
stos
std
les
stos
movsl
cmp
dec
arpl
jns
clc
push
xchg
add
rcll
cmp
xor
test
jecxz
mov
flds
dec
and
mov
add
std
xchg
xor
cmp
test
lods
adc
cmpsb
pop
ja
dec
rolb
mov
je
sub
mov
aaa
js
sbb
ret
and
pop
sbb
pop
dec
pop
push
in
push
addr16
stc
xchg
xchg
cmp
add
add
scas
xor
mov
push
test
inc
fistl
shl
repz
je
push
sbb
xchg
and
cmp
in
test
push
fwait
xchg
pop
and
lock
push
out
add
inc
fmull
or
jns
aaa
push
jmp
mov
or
dec
pop
jnp
dec
les
popl
cli
loope
js
icebp
or
jg
push
mov
fldcw
jge
clc
jecxz
sub
sub
test
je
fbstp
sahf
and
push
insb
fidivs
inc
stc
jne
xchg
adc
out
xchg
mov
psubb
fdivl
call
iret
lea
in
pop
pop
adc
xchg
cmpb
or
xchg
mov
xchg
dec
fucomp
orb
outsl
push
insb
and
call
mov
jo
push
faddl
movsl
hlt
adc
stos
inc
aad
inc
fildl
stos
jecxz
in
gs
push
push
test
test
mov
ror
lds
mov
stc
outsw
pop
cmc
pop
nop
add
fwait
sti
fldenv
xor
adc
xor
inc
fsubr
pop
loope
cmp
jno
stos
xchg
push
and
jbe
lds
ret
fldenv
cli
sbbl
adc
popf
inc
bnd
in
mov
xor
lret
inc
sbb
ret
loop
inc
iret
fsubrs
outsb
test
add
mov
addr16
pop
inc
retw
insb
popa
clc
sahf
pushf
push
in
push
mov
sti
xchg
add
sub
lods
cmp
sbb
pusha
shrl
hlt
test
xchg
jnp
add
and
aaa
lods
lds
mov
stc
daa
lods
push
in
sbb
pusha
shrl
test
push
jmp
and
dec
loop
jle
push
call
lret
rcl
mov
and
and
pop
outsb
push
shrb
xchg
jbe
in
push
insb
lret
bound
jecxz
pop
sahf
push
jmp
stos
push
lret
les
mov
mull
lds
in
jnp
cli
stos
adc
add
repz
sbb
sub
xor
mov
mov
test
dec
push
mov
mov
repnz
pop
in
ds
or
out
xlat
push
add
mov
xlat
outsb
mov
iret
pop
hlt
mov
iret
aam
rcrb
lock
gs
sub
shrb
inc
add
cs
movsl
cmp
sub
inc
fldenv
ficomps
rorb
jl
adc
outsb
test
xor
mov
sub
pop
jle
jo
pushf
cwtl
gs
lret
loop
in
lcall
movsb
cmp
ret
pop
sahf
mov
inc
fcmove
mov
in
pop
push
cmp
inc
aas
sbbl
xchg
mov
in
in
pop
push
lock
fsubp
inc
fs
jno
pushf
xor
cltd
add
and
cmp
ret
mov
inc
fidivl
pop
sub
sbb
sbb
ret
ss
int3
arpl
fldcw
or
or
and
mov
lods
subb
and
dec
jecxz
and
mov
sub
sbbb
add
mov
movsb
add
sub
add
int3
push
imul
cmpsb
lahf
jbe
adc
or
add
inc
sub
push
divb
cmpsb
cmc
adc
addb
cli
xchg
fisubrl
mov
pop
sbb
nop
mov
ret
clc
mov
mov
insb
add
out
xchg
fldl2t
or
lods
inc
repnz
test
dec
jecxz
jns
subb
sbbb
mov
in
hlt
mov
cvttps2pi
aas
dec
jmp
bound
mov
ljmp
pop
hlt
mov
lods
inc
lea
dec
loop
inc
icebp
mov
cmp
test
fdivr
xchg
iret
xchg
and
sub
cli
xchg
mov
arpl
push
jmp
fwait
mov
sti
xchg
xchg
frstor
test
sub
or
xchg
jg
jecxz
cmpsl
jle
xorl
sbb
jne
cltd
sub
mov
pop
jbe
pop
test
ret
hlt
dec
loopne
inc
push
add
test
lods
repnz
lds
cmc
call
jecxz
dec
in
fdivl
gs
loop
add
xchg
xor
sbb
and
lds
push
in
sub
jae
jl
add
iret
xor
cmpsb
arpl
scas
inc
and
aad
inc
int
jne
dec
loop
xchg
jmp
leave
push
jp
xchg
or
fidivrl
sub
imul
dec
loop
dec
shrl
fisubrs
adc
mov
testb
sub
cs
jl
lret
lahf
dec
loope
sub
sbbb
sbb
cmp
stc
xchg
cmpsb
cmp
push
dec
in
call
push
jge
les
xchg
les
lods
inc
inc
loope
mov
arpl
cwtd
xor
push
lea
mov
fistpll
adc
rcll
dec
test
xor
push
test
sub
xchg
mov
movsl
scas
std
rcrl
sub
add
jbe
and
push
ret
mov
in
test
mov
clc
sub
iret
cltd
adc
lds
ljmp
jbe
jle
outsb
add
pop
push
or
pusha
outsl
lods
inc
mov
lret
cld
dec
out
cmp
out
test
sti
xchg
lods
popa
mov
xchg
mov
mov
mov
inc
fistl
aam
cmc
pop
insl
add
adc
pop
xchg
mov
inc
aaa
pop
mov
mov
add
cld
xchg
xor
cmp
lahf
test
lods
adc
pop
inc
fmull
sub
out
dec
lret
js,pt
mov
insl
add
rcrl
pop
mov
dec
and
sub
jae
orl
xchg
fucomi
test
and
andl
lds
movsb
pop
notb
int3
lret
sub
fwait
sbb
dec
stos
mov
mov
push
mov
fwait
xor
dec
loope
inc
xchg
cmp
test
lods
mov
fisubrs
sub
es
lret
fiaddl
cmp
std
rclb
inc
fcoml
out
push
popf
loopne
loop
jo
cmp
rcrl
adcb
in
mov
mov
mov
stc
mov
roll
pop
sub
pop
dec
mov
mov
lods
lret
lods
inc
cld
mov
shll
pop
dec
loop
and
xchg
outsl
in
andl
mov
cld
add
sub
out
outsl
lret
popa
push
out
push
int3
mov
notl
inc
fisttpll
push
in
push
gs
xchg
inc
pop
repnz
cmp
stos
sbb
mov
sbb
xchg
pop
dec
in
shlb
pushf
pop
testb
push
popf
dec
inc
dec
out
bound
xchg
inc
pusha
divl
mov
ds
pop
scas
inc
cmp
ds
dec
filds
lods
fbstp
jae
imul
sub
jbe
lods
mov
out
into
cld
aas
sub
inc
fsubrs
test
push
roll
out
xchg
or
sti
inc
lahf
ss
sub
jnp
cmp
rorl
iret
sub
push
jg
push
data16
mov
movsl
stc
cwtl
das
sub
sahf
xor
je
jmp
ljmp
out
mov
pop
imulb
roll
inc
clc
jne
adc
es
roll
sbb
enter
mov
es
lret
add
xchg
int3
dec
jecxz
and
xlat
ret
mov
hlt
adc
clc
sbb
mov
push
out
mov
out
sahf
pop
mov
pop
ljmp
scas
xor
pop
scas
inc
mov
pop
cmpsl
dec
fwait
pop
or
loopne
xor
pop
inc
pop
ja
lea
pop
gs
xchg
ficoml
outsl
push
and
mov
stos
push
sbbl
iret
scas
cmpsb
cmp
mov
inc
fnstsw
jmp
inc
fcoml
js
pop
mov
nop
stos
xchg
fadd
lods
inc
mov
and
mov
lret
cmpsl
ds
into
xlat
outsb
shl
jle
repnz
in
adcb
call
lds
sar
xchg
repz
xchg
sbb
adc
jns
jns
out
test
daa
mov
pop
loopne
sub
mov
and
inc
mov
push
movsl
testb
mov
cmc
arpl
in
mov
fidivrl
insl
add
hlt
mov
push
lret
mov
shlb
jne
cmp
and
sub
fwait
or
cmpsb
mov
and
jge
rorb
incb
orb
mov
mov
mov
inc
fisubrs
inc
loopne
jbe
insl
add
mov
adc
jge
adc
repnz
cmpsl
je,pt
push
call
shl
ljmp
pop
xchg
sub
inc
jo
jbe
sub
sarb
mov
fisubs
rcl
insb
ret
addr16
hlt
test
out
addr16
sbb
adc
addr16
xchg
cs
jmp
in
xor
sbb
xor
xchg
sub
pusha
test
ljmp
jnp
nop
daa
push
andb
mov
or
or
and
dec
jecxz
addb
mov
push
popf
mov
xchg
or
xor
push
pusha
inc
fcoml
jle
mov
lcall
ret
adc
scas
inc
testl
fdiv
mov
add
je
rclb
lds
push
out
mov
sbbb
cmpsb
lock
mov
xacquire
and
sti
xchg
icebp
dec
and
xchg
mov
leave
call
push
out
in
inc
fcomp
cmp
jle
lock
xchg
jecxz
adcb
adc
pop
test
pop
scas
add
cs
pusha
pop
sub
mov
aam
ja
inc
and
bound
adc
adc
pop
mov
push
mov
scas
stc
jnp
outsb
lods
cld
lahf
ss
lds
imul
or
push
imulb
mov
std
sbbl
les
mov
push
cld
mov
out
jns
jle
sti
es
cmc
incl
scas
dec
out
mov
lcall
loopne
shll
ret
adc
test
pop
subb
popf
shlb
mov
out
add
inc
jmp
jno
imul
pop
cmp
mov
mov
into
add
adc
pop
dec
in
jg
clc
outsl
cmpsl
jmp
dec
adc
mov
xor
inc
out
xchg
xchg
into
jne
dec
shrl
loope
add
cmp
stos
cmp
mov
fistl
mov
rorb
add
pop
lock
jmp
aas
fisttpl
jne
aam
rolb
data16
shll
bound
dec
ja
imul
push
fwait
hlt
mov
mov
jp
addb
mov
shlb
loop
push
mov
sbb
fdivl
jae
mov
or
pop
cld
ret
mov
cli
dec
mov
stos
daa
arpl
xchg
es
xchg
cltd
mov
aam
iret
push
inc
pushf
inc
push
adc
mov
shrb
flds
test
xor
pusha
shrl
fcoml
stos
into
mov
xlat
outsb
jle
adc
insl
push
mov
xorl
arpl
ds
push
testb
bound
into
inc
mov
lods
inc
div
xchg
sub
or
into
jns
xor
jae
stos
inc
cli
fwait
aam
int
aaa
into
jle
jae
pop
xchg
test
add
stos
jno
push
in
cmpsb
pushf
pop
out
int
mov
outsl
sbb
dec
out
xor
xor
popf
xor
shlb
mov
decb
and
dec
xchg
and
xchg
push
mov
or
cmp
jge
adc
into
aas
cmp
mov
dec
mov
push
mov
ss
fstpl
push
xchg
mov
xchg
pop
cmp
lods
jae
xor
int
aam
adc
movb
rclb
outsb
add
imul
es
mov
xchg
mov
xlat
and
or
aas
lods
cmp
loop
fnstenv
xor
pop
scas
pushf
push
mov
mov
je
or
jge
dec
pop
jno
cwtl
xchg
pusha
neg
fs
aad
cmp
sub
mov
sbb
rcrl
add
clc
push
sbb
rcrl
add
sbb
std
and
nop
xor
sbb
cmp
cmp
popa
mov
pusha
xchg
daa
je
out
popf
mov
cmp
shl
movsb
sahf
xchg
push
fstl
and
scas
inc
xchg
mov
mov
and
sbb
ja
cmp
shrb
push
cmp
sti
and
scas
daa
dec
pop
and
adc
outsl
sti
ss
dec
cmp
sbb
jecxz
addl
pop
sbb
cmpsb
pop
leave
popa
xor
cmp
add
sbb
sbb
jo
cmp
dec
mov
lds
mov
push
ret
sbb
sbb
cwtl
hlt
cmp
fisubs
cmp
mov
dec
mov
lcall
pop
rcrl
std
mov
and
add
int3
push
ljmp
and
push
subl
pusha
mov
mov
add
test
push
std
sub
and
lea
ds
leave
sub
popf
pop
pop
xchg
sub
cmpsb
rolb
mov
inc
xor
cmp
pop
dec
push
and
or
jl
sub
add
and
int3
imul
loop
add
lcall
jb
daa
lret
test
dec
push
cmp
in
cld
mov
repnz
mov
xor
popa
cmpl
mov
pop
icebp
add
test
es
pop
sub
sub
lods
int3
mov
gs
fbstp
xchg
es
fcmovbe
insb
or
lods
inc
cmpsl
sub
lret
cli
adcb
mov
ljmp
outsl
or
push
shll
bnd
add
enter
gs
lret
es
push
in
sbbb
jns
sbb
int3
mov
push
les
rcrl
fdivl
jae
outsl
mov
fcomip
lea
pop
xor
lea
adc
arpl
xor
lods
add
xor
push
mov
outsl
adc
lods
je
testb
test
lods
pop
mov
adc
fistps
pusha
shlb
mov
fs
out
and
or
mov
fstp
outsl
cmovo
lods
jno
testb
adcl
pop
mov
adc
mov
clc
loope
fwait
xor
adcb
jl
push
scas
push
sahf
clc
int
cld
jg
lds
dec
popf
xor
sbb
mov
mov
test
cmc
fnstenv
mov
testl
int3
gs
adcl
or
jo
sub
inc
ffree
pop
mov
stos
mov
imul
mov
adc
arpl
pushf
and
mov
leave
pop
or
inc
shl
orl
add
add
mov
movsl
jle
mov
cld
mov
dec
aam
rclb
push
ljmp
jno
jns
cld
xchg
call
or
mov
in
lods
inc
pop
pop
cmp
lea
bound
push
out
fists
jbe
xor
pop
sahf
pop
push
xchg
sub
cmpsl
mov
shlb
frstor
push
dec
out
test
mov
popf
xor
repz
and
mov
fbstp
fnstenv
cwtl
data16
leave
jl
mov
rclb
cmp
xor
pop
or
je
mov
paddsw
mov
cwtl
pop
jae
je
ret
shrb
or
aad
imul
mov
xor
cmp
mov
mov
out
and
dec
ss
cltd
push
dec
lods
lock
fnstsw
push
notb
test
pop
in
jnp
imull
or
mov
push
int3
sub
sbb
sub
inc
loopne
pop
cltd
loopne
dec
stos
cmove
dec
jg
mov
or
aaa
add
sbb
jo
sbbl
daa
push
sbb
rolb
movsl
xchg
inc
push
rcrl
adc
rcrl
sbb
inc
scas
lods
dec
push
movsl
lock
fidivl
adc
inc
loop
xchg
adc
xor
insb
add
test
shlb
fcoms
or
inc
xchg
xor
fs
pusha
call
or
jg
fsubrs
popf
mov
int
pop
scas
and
scas
incl
bswap
or
and
les
xchg
sub
aam
dec
or
outsb
add
sub
arpl
lea
push
jp
subb
or
mulb
sub
push
fxch
popa
or
lods
movsb
sub
jle
lds
leave
testb
pop
push
jmp
sub
sub
psubd
xor
popf
add
lods
in
adc
arpl
imul
add
sbb
sbb
pop
insl
mov
clc
out
ret
pop
add
adc
jns
push
mov
jo
dec
mov
pop
out
cwtl
and
pop
xor
or
mov
pop
xchg
aam
call
push
sbb
rcrb
je
jae
mov
jecxz
xor
movsl
int3
icebp
xchg
dec
arpl
mov
mov
cmp
add
xchg
cli
repnz
jle
or
sub
ds
sbb
inc
pop
rorl
aaa
es
loopne
cmp
adc
nop
mov
add
xchg
scas
jle,pt
jb
enter
aas
pmulhuw
out
leave
cmp
inc
mov
xor
into
enter
loop
data16
xchg
add
fninit
and
shlb
test
pop
cmpsb
pop
xchg
fucomp
mov
outsl
jno
push
cs
add
dec
fcmovnbe
loop
jb
push
push
xchg
shrb
xchg
push
dec
lret
mov
jl
sbb
adc
enter
add
cwtl
jge
cmpsb
push
sub
jb
mov
sub
push
or
fmulp
clc
aaa
out
test
sbb
js
xlat
pop
sbb
insb
cmp
aaa
enter
imul
and
comiss
in
jg
scas
pop
fwait
sub
cmp
loopne
xchg
push
cmp
jmp
lea
sbb
mov
xlat
mov
sub
hlt
adc
lahf
es
popa
lods
add
xchg
in
jmp
lea
fists
jb
fs
test
xor
push
in
sub
xor
enter
pop
outsl
icebp
and
popa
jmp
xor
nop
xor
lret
xchg
cld
roll
dec
je
xchg
xor
jno
push
cmp
push
mov
fs
or
hlt
pop
aam
aad
inc
add
outsb
sbb
lret
and
fwait
inc
pop
push
fwait
fwait
js
xchg
lcall
pop
mov
and
xchg
jae
push
mov
jo
pop
lods
clc
aas
shlb
rclb
decl
or
or
adc
ds
fwait
cmp
daa
mov
push
or
push
lea
inc
cld
nop
sbb
mov
mov
pop
jl
or
adc
push
xlat
test
call
mov
sub
clc
pop
add
jae
and
ret
shrl
rcr
stos
sbb
call
sahf
cmp
push
add
cmp
jo
aad
pop
lds
imul
daa
cmp
push
xchg
pushl
push
push
into
fisubl
push
push
or
stos
sub
push
adcl
push
les
cld
call
xchg
shr
sarl
outsl
ja
mov
out
dec
xchg
jg
xchg
fistpll
pop
clc
jl
dec
or
push
push
or
push
adc
cmpsl
mov
xor
add
leave
mov
hlt
inc
inc
xchg
enter
mov
cmp
and
xchg
adc
push
gs
inc
fnstcw
into
inc
std
inc
in
pop
pusha
or
mov
push
jmp
fcomps
sub
xor
sub
lock
popa
jl
pop
jl
jno
ds
cs
sbb
ja
push
adc
enter
bound
nop
inc
and
ja
cmpsb
cmp
push
mov
mov
add
ljmp
pop
je
jle
and
int
outsb
rcll
inc
mov
dec
add
and
dec
xchg
mov
icebp
jle
mov
jl
cmpb
xchg
pop
aad
in
imul
repnz
fistps
loop
xor
mov
aam
ds
adc
repnz
jno
and
scas
daa
push
inc
rclb
stc
icebp
mov
cmp
xchg
and
call
cld
ss
sbb
xchg
jb
ret
mov
add
aad
xchg
sub
and
mov
icebp
daa
repnz
adc
lds
cmp
pushw
es
add
adc
xchg
ret
sbb
push
das
loope
jns
adc
mov
call
mov
or
inc
pop
in
aaa
sbb
add
cmpsb
and
js
xchg
inc
jnp
cmp
ret
nop
aad
xlat
outsb
push
pop
scas
divl
or
mov
inc
or
cmpsb
sub
mov
mov
inc
cli
mov
test
mov
pop
mov
daa
inc
icebp
pop
loope
pop
mov
das
out
pop
sub
adc
popf
ds
xor
std
arpl
mov
jmp
pop
ljmp
mov
pop
mov
sub
fcompl
inc
or
icebp
cmp
subl
lods
test
add
mov
fs
popl
cmc
jp
push
jg
mov
pop
loopne
test
test
scas
ret
mov
mov
ret
mov
rolb
lret
add
xor
push
jecxz
dec
loopne
mov
dec
sub
xchg
icebp
pop
add
test
sti
rcr
fildll
iret
sub
xchg
jp
mov
push
arpl
pop
loope
loopne
ds
fdivrp
add
clc
push
mov
or
pop
xchg
cwtl
xchg
outsb
add
jecxz
movsb
cmp
pusha
fldenv
cmpsl
sub
adcb
lcall
push
lods
leave
das
rcrb
incl
aad
cmp
pop
inc
retw
xor
ret
mov
mov
std
pop
jns
push
inc
mov
jbe
push
cmc
push
lds
in
cmp
mov
mov
lret
ud1
push
mov
mov
add
or
insl
mov
data16
mov
mov
sbb
mov
xor
jl
mov
outsl
xchg
daa
cmp
lods
sbb
in
jbe
xchg
and
movsl
push
and
lcall
adc
jns
jnp
lods
insb
pop
lret
dec
imul
or
jmp
or
cmp
mov
pop
outsb
fdivl
js
xor
push
jecxz
xchg
ss
movsl
addr16
sti
mov
mov
fimull
or
in
mov
shll
popf
xchg
in
clc
dec
clc
add
rclb
jg
scas
sub
out
pop
cmc
in
dec
xor
jge
sahf
jno
and
pop
leave
cmpsl
inc
rclb
jmp
test
lods
jno
loopne
mov
mov
daa
fstpt
sti
inc
mov
shrb
repz
push
movsl
out
lods
xor
add
popa
clc
inc
and
jg
xchg
ja
add
lret
cld
or
dec
pop
fidivl
jo
pop
mov
ret
in
cmc
add
scas
xor
add
inc
push
xor
mov
mov
jno
sub
es
jge
xchg
popf
lods
inc
iret
mov
xor
lock
bound
push
mov
xorb
outsl
mov
testb
add
push
imul
fidivrl
loopne
int3
push
sbb
sbb
mov
subl
testb
jle
cmc
mov
aad
jge
mov
sub
sub
stos
jmp
sbb
fwait
sti
js
and
test
or
xchg
jnp
lcall
sub
ret
jmp
dec
dec
adc
cmp
and
sub
xor
mov
ret
repz
xsha256
cmpsb
xlat
adc
leave
inc
clc
sub
out
dec
dec
loop
mov
imul
ds
xchg
and
inc
xchg
inc
movsl
cmp
mov
pusha
in
ret
pop
movl
loope
sbb
popf
mov
call
fisttpll
inc
fldcw
loope
rclb
push
pusha
testl
test
mov
pushf
xor
fsts
push
jl
mov
pop
popf
fsubrs
jg
inc
mov
and
outsb
inc
aad
inc
adc
adc
cs
jp
addr16
jecxz
mov
rcr
xor
mov
stos
mov
pop
repz
push
push
jmp
mov
or
ret
add
cmp
fbstp
xchg
add
dec
fucomip
cmpsb
xchg
cs
adc
nop
pushf
mov
xor
pop
icebp
mov
sarl
sbb
push
out
mov
addr16
xlat
sbbl
ljmp
fistpll
aaa
pop
popf
call
sub
inc
fsubl
ret
mov
test
mov
fists
xor
mov
cld
mov
lock
andnps
sub
sahf
sbb
movsl
cmp
ss
test
cmp
loope
clc
mov
fdivl
inc
test
cmp
loopne
or
jb
out
xchg
xchg
add
cli
es
cwtl
mov
sbb
sub
arpl
cmp
inc
ficompl
inc
pop
lock
in
test
jo
inc
and
hlt
call
pop
repz
xchg
sub
test
sub
xchg
ljmp
pop
repz
int
xchg
mov
loopne
dec
rolb
insb
add
loope
sbb
cld
xchg
jns
fnstenv
lcall
mov
pop
in
test
and
clc
popl
jbe
inc
shrl
out
out
js
mov
mov
jnp
xchg
cmpsl
mov
pop
fidivs
mov
jae
and
cmpsl
pusha
inc
outsl
push
xor
push
loope
dec
pop
hlt
or
stos
arpl
loopne
js
outsl
mov
sti
nop
pop
repnz
sbb
xchg
addr16
sahf
mov
cmpsl
and
inc
or
inc
pop
mov
dec
loop
xchg
and
pop
pop
addb
in
gs
test
movsl
push
jno
cmpsl
xchg
aaa
jbe
test
lret
mov
mov
mov
push
shl
pop
lock
mov
shll
fidivs
xchg
push
sub
and
ret
sub
sub
clc
cmp
pop
pop
icebp
dec
ds
pop
jo
inc
test
xchg
idivb
insl
add
jbe
push
stos
cli
xchg
sbb
lret
cmp
les
shl
mov
ret
pop
sti
in
push
xchg
mov
shl
or
call
or
scas
jp
insb
add
testl
mov
ret
mov
sbbl
aad
mov
ja
in
movsb
out
ss
data16
jmp
push
jmp
jle
je
mov
cmpsb
cmp
mov
les
popf
xlat
cmp
outsb
jmp
dec
out
cld
lret
out
fdivrl
mov
xlat
mov
push
in
test
inc
and
mov
jg
in
in
fistpll
dec
fbstp
sbb
cmpsl
xchg
cli
xchg
add
sahf
xor
xchg
xor
lahf
push
add
push
dec
mov
aam
pop
mov
push
scas
ret
pop
fnsave
add
mov
daa
mov
mov
gs
and
sbb
scas
sahf
dec
loopne
iret
dec
loop
fs
xchg
loope
lcall
mov
mov
js
pop
sub
test
sub
movsl
cmp
ret
stc
shrl
aam
push
insb
fidivs
out
mov
xor
imul
adc
jle
cmp
pop
adc
int3
arpl
movl
daa
int3
jae
subb
ret
pop
lods
pushl
mov
adc
imul
pop
jmp
stc
cmp
mov
xchg
and
lret
lahf
mov
fcoml
hlt
shlb
out
loope
loope
xchg
jne
inc
fcmovnbe
xchg
mov
or
lods
sub
push
inc
lods
inc
xchg
mov
xchg
inc
pop
sbbl
push
loopne
adc
mov
add
cli
mov
testb
dec
pop
and
xchg
sub
push
xchg
sub
inc
in
hlt
mov
es
aad
lahf
ss
call
nop
std
inc
mov
jb
shrl
sbb
in
andl
aam
dec
inc
add
icebp
xor
xchg
dec
fildll
mov
pop
icebp
ljmp
sub
nop
mov
add
pop
jae
mov
xchg
sbb
ds
call
lea
mov
mov
dec
mov
mov
movsb
cmp
and
and
adc
out
xchg
push
in
and
enter
sbb
add
pop
pop
out
cltd
loopne
popf
shll
cmpsb
cmp
in
mov
fs
es
cltd
jne
or
in
test
sub
dec
sahf
mov
iret
mov
xor
mov
mov
inc
inc
aas
je
sub
xor
addr16
aam
testl
xchg
sub
cwtl
das
pop
add
xor
pop
xor
or
cs
xchg
xor
adc
imul
subb
jb
push
repnz
aam
xchg
pop
adc
push
and
or
cmp
dec
aaa
lret
sti
pop
inc
fmull
add
clc
push
jg
mov
fidivrl
push
outsl
insb
push
out
nop
cmp
and
and
xchg
sarl
daa
mov
xchg
cmp
je
pop
jno
dec
pop
ret
pop
ja
pop
scas
pop
push
mov
ss
idivl
push
into
xchg
add
insl
aaa
mov
test
lret
mov
fisubs
iret
test
lcall
jno
sahf
add
push
xchg
pop
repz
out
dec
pop
sub
mov
lods
push
out
xlat
mov
shrl
dec
or
imulb
cmp
push
pop
mov
pop
arpl
or
push
test
mov
mov
repnz
stos
and
rcll
pusha
mull
aam
ret
out
aaa
jecxz
aad
xor
sti
imulb
scas
mov
fidivl
dec
dec
in
pushf
push
mov
add
mov
cs
jecxz
leave
ret
shlb
shll
cltd
jns
dec
loop
push
mov
xor
jae
ljmp
lret
gs
mov
dec
es
adc
adc
sti
xchg
cwtl
das
enter
ret
jmp
insl
aam
lahf
xchg
addr16
sub
and
adc
push
test
sub
adc
push
popf
sub
dec
cmp
imul
out
hlt
notl
aam
xor
test
aaa
into
loope
and
xchg
cmp
dec
loope
movsl
and
cwtl
and
jg
push
ljmp
and
cwtl
and
jbe
dec
pop
lock
pop
sahf
mov
ret
jno
jecxz
mov
lcall
dec
in
push
dec
xor
push
test
jno
jae
sbb
fnsave
mov
inc
sbb
ds
test
lret
loope
shlb
add
xor
mov
mov
dec
jno
mov
lret
xlat
pop
or
xchg
cmp
pop
or
les
mov
pop
add
xor
lods
inc
push
stc
xchg
ss
mov
cmp
mov
sub
and
mov
push
inc
ss
mov
mov
adc
je
adc
inc
movsb
and
inc
rclb
add
and
sub
je
cmp
and
sub
inc
pop
into
gs
pop
sub
push
mov
xor
fnstenv
xor
add
pop
movsb
lock
sub
lcall
push
in
add
pop
scas
mov
loopne
divb
fcomps
scas
or
or
sub
lahf
orb
mov
push
hlt
ds
xor
out
xor
in
outsl
and
inc
fiadds
xchg
sub
int3
sbbl
adc
mov
sbb
popf
add
into
push
push
fnsave
add
push
ljmp
dec
out
sbb
int
in
cld
add
pop
add
mov
inc
loopne
or
or
sub
mov
mov
loopne
ja
mov
dec
or
mov
andl
and
dec
pop
test
sub
xchg
xlat
outsb
ret
and
lods
fnstcw
inc
cld
ja
mov
mov
cs
push
leave
and
cld
in
hlt
push
aam
idivb
cmpsb
mov
or
imul
sbb
or
inc
popf
into
add
fistpl
test
test
jecxz
pop
lds
out
sbb
add
and
lret
push
dec
inc
repnz
out
dec
or
clc
xor
sahf
popl
dec
outsl
cwtl
push
adc
lahf
bound
mov
cmp
dec
clc
dec
scas
mov
push
cmp
rclb
jmp
imul
add
shll
or
xor
ljmp
int3
sbb
mov
aad
mov
jne
pop
fsts
xchg
test
in
jns
pop
out
mov
sub
negl
dec
fidivrl
shll
push
xchg
hlt
and
call
add
lcall
lds
push
push
lods
push
xor
lret
jo
test
lret
mov
test
jns
dec
jbe
cmp
mov
mov
movsb
xchg
sub
shlb
icebp
sbb
jne
sahf
xor
xor
xchg
dec
push
push
lods
jo
pop
divb
xchg
push
jmp
push
and
sbb
aaa
into
test
and
daa
subl
pop
mov
inc
icebp
mov
pop
out
inc
push
push
test
outsb
sbb
xchg
test
test
mov
out
mov
adc
fsubs
mov
mov
fdivrl
dec
das
add
pushf
mov
mov
mov
dec
in
adc
xorl
xorb
pop
push
push
movsl
sbbb
dec
insb
lea
inc
sub
adc
rclb
sbb
sbb
fidivrl
and
je
jmp
sbb
iret
scas
loope
stc
rorb
out
push
sbb
pop
pop
aaa
fbstp
jg
jle
mov
xchg
sub
neg
jno
xor
push
push
cmc
fbstp
fst
insb
into
jne
dec
data16
sbb
xchg
cs
das
sbb
jbe
jl
dec
jmp
xor
adc
jno
subl
push
dec
jp
ljmp
sub
or
dec
add
mov
test
sbb
mov
iret
repnz
in
imul
push
stos
inc
inc
jo
or
add
dec
mov
sbb
imul
xchg
mov
sub
jle
fmull
pop
hlt
mov
adcb
adc
test
adc
bound
mov
pop
es
xor
lcall
rclb
add
sbb
lods
jp
pushf
xor
pushf
push
mov
adc
js
ljmp
ja
fwait
xor
incl
movl
and
jle
movsb
fs
ds
adc
pop
xchg
js
jnp
jno
mov
sub
ret
pop
nop
call
call
or
cmp
in
xchg
fs
pop
push
pop
scas
jge
adc
push
and
xchg
xchg
sub
jb
sbb
xchg
int
add
out
movsl
pop
scas
sbb
dec
loopne
jle
repnz
cmpsl
daa
mov
ds
adc
mov
push
inc
xchg
sub
mov
sbb
movsb
bound
mov
xchg
xchg
jge
add
pop
arpl
xchg
jge
mov
sub
dec
inc
fcoml
bnd
inc
xlat
dec
xchg
or
popf
aaa
daa
mov
push
test
xor
jnp
or
es
inc
adc
pop
andb
jl
mov
rcrb
scas
shll
repnz
arpl
mov
and
sbb
lods
gs
clc
or
xchg
popf
sbb
mov
mov
dec
in
xor
xchg
jbe
adc
fwait
xchg
sbb
sbb
popa
clc
jnp
sbb
push
das
jae
cld
dec
push
cld
xchg
push
arpl
xor
push
xsha1
cmpsb
mov
xor
dec
jecxz
mov
and
sbb
je
stc
jmp
or
cmp
jmp
or
mov
test
lret
fidivl
sub
mov
cltd
sahf
pop
out
sub
popf
xor
dec
push
mov
xor
out
hlt
stos
cmpsl
adc
or
mov
stos
inc
stos
fidivl
gs
inc
std
lea
arpl
sub
fldt
enter
inc
int
das
scas
out
mov
push
scas
inc
adc
lea
xor
lret
push
sub
dec
pop
sbb
inc
icebp
mov
mov
push
adcl
push
ret
push
mov
fucomi
test
jge,pt
jo
push
out
xor
or
arpl
loop
test
mov
xchg
lahf
ss
and
mov
sbb
je
xchg
lods
inc
insb
out
fs
out
xchg
cmp
lcall
pop
cmc
das
int
sti
out
push
and
popa
mov
pop
cmpl
cmp
mov
subb
push
inc
sbb
jns
inc
ficomps
fwait
cmp
int3
nop
inc
inc
fildl
jae
adc
xor
add
movsb
cmpsb
outsl
push
leave
lds
aad
jmp
inc
sbb
xchg
mov
pop
jbe
in
mov
inc
sarb
outsl
push
stos
push
sbbb
push
mov
mov
ljmp
push
add
mov
sub
inc
fcmovne
aad
js
jae
jge
jge
lahf
cltd
test
add
loope
mov
cmp
cmp
lods
add
lea
mov
scas
push
lods
fistps
mov
cmp
sub
and
sbb
pusha
notl
adc
mov
jns
cmp
stos
xchg
add
iret
ret
icebp
out
cs
sbb
inc
dec
fildll
int3
jbe
cs
repz
xchg
sub
mov
sahf
xor
push
push
cli
xchg
xchg
mov
mov
loope
xor
mov
and
jno
arpl
adc
repz
in
pop
scas
mov
add
and
xchg
sub
insl
ds
pusha
xchg
sub
leave
loop
imul
popa
in
imul
sub
push
jmp
or
dec
imul
pop
out
dec
add
lcall
xchg
ss
mov
push
push
mov
rorl
inc
aam
xchg
out
repz
outsb
add
aas
mov
nop
repz
jecxz
dec
adc
sbb
lret
add
cld
popa
sbb
call
mov
rcll
pop
inc
xlat
jbe
pop
out
cli
leave
adc
add
dec
andl
loope
aam
sub
out
jnp
dec
mov
sbb
sbb
sub
sub
mov
xchg
leave
push
out
mov
jnp
jp
mov
or
jne
jge
scas
mov
ds
push
or
repz
imul
mov
insl
mov
sub
or
pop
cmp
mov
and
xchg
fldenv
jl
mov
cld
in
mov
popa
int3
cmp
std
adcb
shlb
stc
iret
fcomps
scas
or
andb
xchg
mov
pusha
outsl
bound
jl
sti
clc
sub
mov
jbe
push
imul
mov
jae
loope
ss
out
cmp
shrl
inc
fs
ds
mov
xlat
outsb
sbb
les
scas
mov
and
add
xorl
pop
out
sbbb
cmp
pop
lea
addr16
ret
inc
and
loop
inc
aam
push
cltd
and
sub
gs
xchg
or
pop
sbb
mov
xchg
mov
std
sbb
cmpb
adc
pop
jg
mov
fwait
pop
int3
and
std
jns
xor
push
sub
cmpsb
adcb
push
or
sahf
push
or
data16
adc
pop
call
stos
inc
mov
faddl
push
scas
pop
scas
mov
dec
pmulhw
and
in
aam
shll
dec
mov
call
ret
ds
fld
pop
jmp
scas
mov
add
mov
sub
mov
out
pop
jnp
mov
pop
dec
test
dec
scas
popa
pop
and
das
inc
push
repnz
push
inc
out
and
movb
jmp
pusha
and
gs
sub
lcall
les
sti
xor
pop
push
sbb
ss
sarl
inc
fists
mulb
cmp
in
icebp
iret
cli
loopne
dec
divl
aad
std
arpl
in
mov
enter
aaa
fistps
add
cld
insb
gs
lods
xchg
mov
mov
call
or
pop
adc
enter
sti
scas
addl
call
shlb
cmp
sti
fs
push
clc
out
cs
jge
sbb
adcl
dec
mov
inc
add
clc
sub
xchg
dec
lret
bound
cmp
or
mov
xor
sahf
xor
xchg
xorl
insb
in
fstl
in
outsl
popf
sbb
jno
mov
jne
fsub
push
rol
aam
test
xlat
es
jmp
int
xor
insl
push
imull
adcl
and
add
cltd
xor
call
call
or
adc
inc
mov
imul
jbe
iret
sbb
test
cli
sub
add
int3
aas
cmp
fnsave
shlb
test
mov
adc
pop
mov
and
ja
lret
mov
ds
lret
test
out
cs
mov
lret
sub
pop
sbb
adc
add
dec
sbb
pusha
adcl
fimuls
or
mov
push
gs
pop
scas
repnz
pop
adc
or
addr16
out
mov
lock
mov
fwait
sbb
and
mov
and
mov
ret
sbb
rcl
loop
data16
outsb
add
cmp
and
mov
pop
cmc
jno
lods
inc
and
fnstenv
and
pop
insb
pop
fimuls
mov
add
aas
mov
and
fwait
std
clc
ds
ret
lds
fwait
add
ljmp
cld
cmpsl
dec
mov
les
into
imull
mov
jge
lret
mov
iret
jmp
mov
in
xchg
out
aam
lods
das
pop
or
lds
mov
inc
popa
adc
nop
mov
jmp
call
fstps
add
xor
jns
test
fisubrl
cs
sti
cmc
fwait
dec
mov
push
faddl
out
dec
pop
movl
mov
pushf
data16
mov
outsl
popf
mov
fisubs
pusha
xor
in
xor
sbb
mov
mov
lock
cmp
jge
inc
mov
pop
xor
arpl
mov
repz
aam
adc
in
addr16
mov
or
lret
xor
adc
out
ja
and
xchg
jae
lcall
mov
das
std
aad
cmc
xchg
and
xchg
xchg
and
cmp
lods
addr16
addl
negb
pop
ret
dec
push
xor
imul
xchg
mov
out
xchg
mov
push
call
inc
jl
xchg
scas
pop
push
xchg
cmp
lahf
stos
mov
movsb
jle
les
lahf
sub
int3
mov
pop
and
outsl
inc
repnz
xchg
or
rcr
mov
jo
xchg
dec
scas
bound
ret
clc
in
push
sbbl
dec
mov
sub
jae
and
jl
jne
sbb
leave
sub
mov
xor
hlt
fildll
aad
cmp
into
gs
xchg
add
addr16
ss
ficoms
sub
adc
xchg
cmp
xor
testl
or
sahf
adc
mov
or
out
das
dec
jns
cmp
cmpsl
outsl
push
test
mov
outsl
fimull
and
mov
inc
call
in
pop
push
aam
ljmp
xor
adc
cltd
inc
inc
pop
repz
xchg
mov
sahf
push
in
iret
sbb
dec
xor
movsb
cmp
mov
negb
and
out
and
jae
inc
test
movl
push
repz
into
sub
data16
mull
nop
or
mov
stos
mov
mov
xchg
in
cmpsb
cmp
mov
mov
sub
rolb
sub
xchg
sub
inc
sub
js
les
sub
mov
adc
fsubs
pop
aas
and
cwtl
mov
dec
inc
call
adcb
loope
pop
mov
sbb
mov
dec
push
mov
lods
and
sbb
dec
shrb
sti
out
fistps
mov
cmpsb
adc
lock
adc
lahf
xor
out
sub
mov
push
mov
in
mov
sub
xchg
imul
xor
mov
adc
out
jle
std
cmpl
add
dec
loope
addr16
add
ror
mov
cli
repnz
leave
pop
adc
adc
imul
or
in
adc
inc
jecxz
ds
gs
push
push
ljmp
jg
ror
or
and
mov
nop
pop
jno
mov
int3
cmp
push
adc
add
lods
adc
add
scas
hlt
pop
mov
mov
data16
inc
mov
cs
xchg
divb
and
fs
into
gs
icebp
insb
je
cmc
pop
adc
jnp
dec
xchg
xchg
mov
jp
test
mov
adc
fs
adc
jecxz
and
jge
jmp
ret
pop
sub
cmp
aam
cli
test
into
sbb
decl
test
imul
pop
pop
push
mov
lcall
jnp
mov
sbb
int
dec
imulb
insl
mov
repz
adc
fadd
outsl
sub
les
pop
enter
and
dec
inc
xchg
sbb
mov
pop
cmp
xchg
cltd
lods
call
lds
aad
jp
pop
mov
xchg
jmp
sbb
rcrl
sti
push
call
cs
stos
inc
push
dec
xchg
shll
arpl
outsb
pop
scas
inc
inc
jle
scas
cmpsl
and
and
fnstsw
icebp
clc
inc
testb
or
cmpsb
fdivl
leave
jbe
popa
push
ja
add
mov
clc
aam
cld
mov
into
fsubrs
jbe
fsubs
add
mov
dec
jp
mov
pop
nop
fisubrl
mov
mov
cwtl
std
adc
cmp
leave
cli
and
xor
sbb
push
repnz
enter
jae,pn
cmpl
pushf
lcall
push
inc
xchg
or
xchg
inc
xlat
mov
outsl
inc
xlat
mov
xorb
push
inc
mov
fiaddl
in
sub
fidivl
insb
adc
or
es
dec
repnz
icebp
popf
cmp
faddl
dec
cmc
pop
push
out
mov
pop
push
jecxz
fidivs
push
test
je
pop
mov
and
jmp
mov
push
mov
push
insl
add
out
testl
das
pop
sbb
xor
testl
push
pop
jne
loope
sub
or
xor
xor
add
test
mov
pusha
aam
push
push
roll
imul
adc
cmp
pop
jle
shrb
and
incb
test
in
test
cltd
les
push
sub
jb
jne
mov
cld
dec
xchg
or
pusha
cmp
xchg
xor
ret
sbb
orl
lock
testb
dec
sbb
fnstenv
mov
mov
outsb
fadds
pop
jge
lcall
lahf
fidivrs
adcb
pop
hlt
loopne
shlb
push
sbb
mov
movsb
inc
das
sarb
fldcw
push
push
popf
mov
mov
mov
pop
push
mov
pusha
arpl
sahf
and
test
sub
leave
jbe
cmp
and
jae
mov
divl
fnstcw
jecxz
jl
rcl
repz
sub
stos
inc
adc
data16
or
pop
aad
pop
aaa
test
sbb
jo
call
or
movsl
xchg
aad
push
inc
xlat
aas
iret
dec
xor
xchg
sub
popf
xor
ja
gs
adc
jo
pop
fwait
cmp
jecxz
mov
test
movsb
cmp
imul
mov
cmp
fisubl
cltd
sub
dec
adc
loop
adc
gs
push
mov
ja
jmp
rcrb
int3
ja
pushf
loop
xor
stc
data16
pop
dec
jbe
xchg
test
nop
sub
outsb
add
lods
inc
rcrl
stos
hlt
mov
es
mov
test
mov
stos
or
adc
aas
jg
movsb
mov
jae
les
sbb
jne
mull
insb
jge
push
adc
addr16
inc
data16
pop
rolb
pop
inc
sahf
ds
pop
rcrb
fildl
xchg
jg
out
lret
and
push
cld
mov
fwait
cmpb
stos
jnp
inc
cwtl
out
xchg
mov
jbe
fmuls
lock
sbb
fcoms
and
loopne
mov
or
stos
out
inc
xor
fcompl
out
mov
sahf
or
fstpt
shrb
push
jnp
imul
imul
fs
mov
sti
sarb
stos
dec
mov
repnz
mov
adc
test
sbb
xchg
and
pop
push
pop
ret
cmp
and
mov
pop
pop
enter
mov
sub
rol
loop
arpl
mov
cmp
jne
out
fnstcw
rclb
repnz
int
stos
mov
hlt
push
mov
pusha
mull
ficoml
xlat
inc
ds
movsl
loop
repnz
mov
mov
cld
adc
test
or
sub
xchg
jo
cmp
leave
les
test
sub
sbbl
adc
popf
xor
push
out
push
pusha
sbb
loopne
lods
jl
repnz
dec
in
cwtl
adc
dec
jecxz
cmp
pusha
jl
mov
mov
andb
rcrb
jbe
dec
ret
pop
cmpsb
cli
loope
xchg
lea
add
xchg
orb
mov
ja
pop
gs
pop
pop
jge
and
lods
stos
mov
xchg
rol
pop
push
push
push
ljmp
inc
add
sub
ficoml
rclb
add
jmp
hlt
imul
dec
mov
lea
jge
das
data16
movsl
mov
ja
or
movsl
shrb
xchg
imulb
xchg
ss
mov
orl
adc
dec
repnz
call
stos
pop
movsb
int
jg
cmp
cmp
in
call
cmpsb
lock
decb
cs
cwtl
xchg
or
add
add
cld
cmp
outsl
fwait
and
call
mov
inc
std
jmp
scas
mov
adc
add
cmpsl
frstor
shrb
mov
dec
pop
sahf
jp
mov
aas
adc
enter
aam
sbb
gs
ja
mov
mov
mov
pop
inc
clc
xchg
push
adc
jle
fists
test
call
into
cmc
xor
jecxz
mov
pop
adc
mov
sbb
stos
pop
sub
cmpsl
and
lods
jb
mov
cltd
inc
push
sti
push
stos
lock
xor
add
fisttps
insl
pusha
stc
sub
xchg
call
scas
push
outsb
fcompl
fwait
pop
rcrb
xor
pop
scas
and
xchg
ss
dec
call
or
push
xchg
cs
and
mov
fsubl
repz
push
adc
lcall
xchg
les
loopne
inc
mov
outsb
add
add
mov
pop
sub
lcall
dec
hlt
stos
rcr
fs
and
lcall
lods
ffree
or
ret
jle
mov
or
lcall
sub
mov
in
into
add
add
shlb
push
cmp
cld
sub
fyl2xp1
nop
or
stc
fistps
movsb
cmp
mov
iret
imul
push
inc
and
xor
jecxz
mov
mov
mov
add
test
cltd
mov
add
or
cmp
lret
out
jbe
and
inc
data16
repnz
and
out
jns
pop
sahf
xor
test
cmc
mov
and
add
clc
adc
pop
dec
or
fs
test
xchg
icebp
mulb
bound
out
mov
and
mov
testl
mov
pop
in
fcom
popa
or
roll
mov
je
pushf
imul
jmp
js
aas
pop
mov
mov
pop
es
inc
mov
mov
aas
fcomps
cltd
jmp
sub
shll
out
orl
jnp
fisubl
push
shlb
dec
inc
sar
test
lahf
stos
sarb
loopne
fidivrl
mov
adc
repnz
mov
add
pop
lods
cmp
and
and
stc
jmp
push
mov
jae
insb
mov
cmp
mov
mov
leave
inc
sub
out
hlt
fistps
sbb
mov
repz
add
cmp
fcoms
push
push
fdivr
mov
push
or
imul
sub
push
mov
mov
loop
iret
roll
ss
mov
inc
sbb
lret
jecxz
test
cwtl
stos
or
ret
std
push
sbb
pop
mov
imul
jo
popa
into
repnz
ds
pop
adc
aad
push
dec
inc
push
std
mov
dec
xchg
repz
test
in
movsl
test
test
push
out
inc
ror
repnz
loope
jne
adc
xchg
cltd
jmp
jns
inc
sarb
dec
sti
lods
lock
push
xchg
xchg
push
iret
push
rcll
jg
pusha
push
ja
cld
jecxz
in
adc
repz
cld
xor
mov
mov
loopne
movsb
out
lret
xlat
shlb
lcall
xor
clc
or
pop
cmp
icebp
inc
jbe
adc
outsl
dec
cmpsl
xlat
sbb
and
jge
inc
sbb
xchg
pop
repz
mov
jp
pop
push
mov
out
xchg
sub
jl
xor
cmpsb
test
cmpsb
outsb
sbb
mov
xchg
cmp
fisubrl
jno
es
call
out
loopne
dec
pop
and
pop
sub
mov
sub
pushf
inc
outsb
ja
adc
out
mov
jge
xor
mov
sbb
push
push
popa
sti
fld
movsl
add
push
mov
pushf
xor
mov
push
test
js
repz
addb
dec
test
movsl
mov
in
sar
test
add
mov
shll
out
ljmp
dec
in
xchg
enter
mov
pop
mov
sbb
addr16
out
test
mov
iret
jecxz
rorl
rorl
xchg
jae
sub
pop
cmp
out
or
test
lahf
loope
pop
push
sti
into
fsubl
ss
movsb
cmp
mov
rcrb
adcb
repz
xor
std
stos
inc
dec
out
inc
jb
jns
loop
or
jl
mov
std
out
dec
add
cmpsb
pusha
test
int3
daa
xor
mov
jp
inc
push
push
sub
mov
sub
push
xchg
mov
adc
hlt
mov
xlat
mov
and
sbb
inc
test
lret
jmp
cmpsl
or
mov
mov
pop
mov
mov
dec
fwait
daa
cwtl
or
data16
sbb
jecxz,pt
test
sbb
sbb
dec
push
mov
test
inc
xchg
jo
mov
incl
bnd
mov
or
mov
jge
lods
cmpb
xchg
insb
insb
insb
stos
inc
pop
cmpsb
jno
das
pop
out
pusha
testl
mov
lds
insl
adc
cwtl
jb
aad
push
adc
negb
sub
jl
mov
stos
popa
mov
jecxz
add
in
scas
nop
repz
loop
jo
fwait
stc
xchg
or
imul
xchg
cmp
mov
std
mov
sahf
cmc
cwtl
xchg
push
mov
hlt
xchg
sti
subl
cmp
mov
test
stos
lds
pop
dec
mov
jg
xor
fs
out
scas
mov
lahf
fnstcw
int3
les
mov
jne
mov
sub
pusha
rclb
insl
faddl
fnstenv
adc
mov
dec
arpl
cmp
sub
mov
les
cmc
popa
mov
repz
xchg
sub
repnz
xor
aaa
sbb
pop
dec
jge
outsl
mov
and
xor
jbe
shrl
or
aaa
push
pushf
shrb
dec
fbstp
inc
lret
bound
andl
hlt
xor
bound
daa
mov
cwtl
aad
faddl
mov
arpl
pop
or
sbbl
xchg
int3
lahf
ss
mov
outsb
in
mov
lea
jb
jae
pop
adc
mov
cli
xchg
mov
jbe
in
aam
scas
add
cmpsl
push
jmp
pop
or
and
test
add
jecxz
sbb
inc
and
int
jae
mov
scas
test
stos
sbbb
or
adc
jmp
imul
ljmp
scas
ds
push
xchg
mov
lret
stos
outsb
jb
imul
mov
jb
push
jno
pop
sbb
mov
mov
cmpsl
clc
mov
jno
push
mov
idivb
jge
sub
repnz
dec
sub
add
jecxz
nop
add
inc
loope
mov
icebp
movsl
xchg
loope
fildl
fidivl
and
and
dec
fsubl
fadds
fadd
or
or
shrb
inc
pop
dec
xchg
mov
dec
cmp
lret
icebp
divl
popf
push
pusha
mov
jae
stos
mov
sbb
aas
adc
pop
movsb
or
cmpb
cmpsl
adc
xchg
test
outsb
add
inc
cmpsl
adc
leave
mov
jno
fldenv
cmpsb
sub
adc
add
lods
cmp
or
cmp
push
lcall
insl
sub
pop
jns
subl
cmp
push
gs
cs
push
mov
es
testl
cmp
les
xchg
xchg
mov
jo
lea
cmp
mov
ret
push
jo
std
mov
inc
jmp
fstpl
in
push
cltd
cmp
push
out
xor
clc
sbb
in
insl
jo
add
dec
fldpi
hlt
and
and
xchg
jae
ret
movsb
iret
xchg
dec
and
aas
adc
jnp
shlb
mov
call
cmp
cmove
cmpsb
cmp
or
or
stos
mov
lea
sub
mov
dec
lea
dec
sbb
insl
sbb
lret
imul
lret
inc
lret
outsb
xchg
mov
adc
cld
mov
mov
push
test
dec
and
or
test
xchg
lock
cmp
insl
sbb
clc
dec
mov
cwtl
push
pop
das
jne
daa
and
pop
iret
mov
mov
jo
cmpsb
loope,pn
adc
out
ret
popf
hlt
xor
js
adc
cmpsb
inc
mov
out
adc
sahf
pop
inc
jle
mov
mov
mov
and
or
mov
inc
adc
gs
pop
out
cmc
cld
add
push
ja
iret
into
pushf
and
out
jge
call
add
cmc
cli
adc
adc
xor
inc
push
jmp
adc
mov
mov
inc
test
xchg
jne
cmpsb
into
lods
jg
fadds
push
pushf
loopne
or
ret
dec
lcall
iret
mov
das
pop
out
js
dec
loopne
sub
xchg
popa
jg
lock
testb
mov
mov
mov
jo
scas
test
xchg
notl
jmp
sbb
lods
pusha
xchg
and
sub
dec
sbbb
or
jecxz
cwtl
dec
inc
cwtl
mov
mov
nop
sub
stos
mov
push
cmp
out
std
int
or
xor
les
fadd
push
in
sahf
fstl
aas
adc
leave
cmp
jg
dec
and
aam
fstpt
pusha
ret
add
hlt
cs
mov
jle
scas
fsubr
gs
jle
pop
jmp
mov
cmpsl
lock
inc
enter
ljmp
sub
pop
jnp
out
lds
lahf
cltd
xor
enter
fnstcw
fdivs
adc
xchg
mov
jl
in
xchg
sub
inc
fmull
out
fildl
cmp
xchg
cmp
push
inc
mov
mov
or
cmovae
lret
jle
leave
int3
mov
repnz
mov
mov
in
mov
mov
lea
sub
xchg
mov
fnstenv
lret
mov
lock
jnp
pop
mov
lods
sbb
mov
int
inc
ljmp
cmp
ss
nop
loop
inc
hlt
out
popf
aad
add
mov
cs
loope
dec
pop
lock
cmp
fcompl
cli
in
jb
repnz
out
orl
std
mov
inc
popf
push
bound
sbb
pop
xlat
inc
popa
jmp
push
out
cmp
cwtl
push
cmp
fdivl
mov
pop
loop
jg
lret
out
dec
jmp
dec
push
out
lods
xor
lret
test
jl
in
imul
punpckhwd
cmpb
add
jp
mov
jg
xchg
xchg
adc
fwait
lods
mov
xor
pop
sahf
int3
xchg
test
sbb
mov
pavgb
inc
mov
lds
mov
add
daa
jb
inc
pusha
mov
mov
insl
in
sahf
lods
push
jno
or
cli
mov
aas
outsb
fidivrs
sub
dec
mov
out
orb
push
mov
dec
rcrb
fidivs
xor
pushf
pop
add
mov
pop
aam
mov
in
jbe
xor
gs
nop
fdivrs
sbb
and
pop
pop
in
cmp
cmp
cwtl
aad
aad
dec
lock
and
xchg
scas
cli
jno
push
adcl
jno
mov
mov
fldt
shlb
mov
scas
pusha
lret
shl
or
lds
mov
ret
in
imul
es
push
xchg
add
mov
push
test
or
xor
add
xchg
xchg
aad
popf
ss
loopne
ja
jbe
je
jmp
inc
cmpsl
xchg
divl
sbb
jns
int
mull
xor
aam
mov
movsb
mov
xor
mov
lcall
repnz
outsl
lcall
popf
adc
test
sub
add
add
ja
idivb
dec
and
push
clc
adc
and
cs
mov
pop
ja
fwait
and
cmpsl
mov
rep
imul
pop
aad
mov
xor
fs
leave
popa
jno
loopne
or
out
mov
ffreep
dec
push
inc
int3
add
cmc
fmuls
mov
and
je
sub
lret
inc
pop
mov
filds
mov
adc
ds
fimull
sbb
lret
push
pop
cmpl
xchg
jns
cltd
mulb
xlat
nop
push
cmp
out
jg
dec
fmull
aas
fcomip
sub
sub
mov
dec
arpl
cmpsl
ds
sbb
sub
sbb
lret
pushf
jp
cltd
out
addl
sbb
pop
andl
les
push
in
insl
fstpt
jmp
add
outsl
addl
addr16
mov
in
adc
sbb
cwtl
sbb
push
lret
dec
cmp
dec
sub
jge
test
sbb
stos
icebp
sbb
pop
pop
adc
mov
mov
scas
cmpsl
popa
shl
jns
hlt
cltd
or
cmp
fidivrs
pop
cld
xchg
iret
xor
and
bound
dec
ror
mov
int
xor
jbe
xchg
mov
jns
jecxz
imul
inc
push
mov
inc
fisttpl
test
call
push
js
sbb
jle
fbld
pop
push
cld
outsl
lods
lods
sbb
mov
sar
mov
gs
dec
shlb
icebp
jo
adc
aaa
pusha
int3
push
dec
lret
jne
loop
dec
aam
std
xchg
jnp
adc
pushf
sbb
adc
roll
mov
test
xchg
sub
sbb
mov
jl
test
jnp
mov
jae
xchg
xor
mov
sarb
inc
stos
pop
ja
movsb
sahf
aas
lods
dec
push
lods
loop
pusha
jbe
jp
push
cmp
adc
ret
hlt
data16
jg
xor
pop
push
imul
lahf
push
push
popf
lea
adc
stos
ss
aas
cli
and
cli
inc
jecxz
xchg
mov
mov
sbb
jmp
cmp
dec
or
jmp
daa
cmp
xchg
mov
movsl
out
jnp
push
add
xor
sub
testb
xor
lret
sub
bound
mov
xchg
es
pop
ljmp
call
sub
les
jo
into
in
jne
out
push
mov
rcr
lret
fmull
gs
mov
inc
scas
test
sub
inc
sahf
pusha
jne
mov
sub
leave
and
arpl
cmp
lods
out
and
or
mov
mov
push
mov
scas
subl
out
xchg
pop
js
cmp
mov
movsb
cmp
mov
shrb
mov
lock
jle
incb
add
loop
pop
sahf
xor
bound
stc
sbb
xor
mov
xchg
push
cmp
in
xchg
cmpl
add
push
pop
movsl
test
mov
out
cmpsb
cmp
test
cmp
xor
xchg
daa
cmp
or
inc
sub
inc
out
pushf
lods
pop
pop
into
gs
mov
cld
add
ljmp
adcb
add
es
adc
mov
inc
adc
outsl
xchg
daa
ss
sub
mov
test
fsubs
adc
xor
pop
push
and
shrl
push
pop
mov
clc
push
add
movsb
aam
cmpsb
fwait
mov
adc
push
mov
xchg
cmc
cmp
cltd
ljmp
pop
lods
movsl
push
sbb
xor
imul
sbb
imul
fcmovne
arpl
out
insl
and
shrl
push
rorb
jno
inc
adc
lock
and
mov
outsb
jno
stos
test
lcall
pusha
xchg
jbe
mov
cltd
test
out
jno
dec
fs
sub
xor
mov
jnp
loopne
jmp
addr16
mov
stos
xlat
outsb
cmpsb
mov
and
scas
fstpl
cs
arpl
fsubs
lahf
mov
loope
xchg
test
lock
pop
xor
aaa
into
sub
mov
test
mov
cmpsl
cmp
insb
scas
pusha
push
jp
insl
cmp
adc
fisubrl
out
jne
fs
outsb
add
shlb
hlt
fsubr
and
sahf
jmp
or
push
xchg
sub
mov
int
adc
jp
jp
dec
fnsave
mov
push
and
mov
and
sub
gs
int
cmp
ss
fstps
adc
je
sbb
dec
cmp
dec
pop
in
pop
add
inc
loope
xor
mov
fsubs
or
jno
inc
sub
add
or
mov
or
adc
mov
clc
jns
and
mov
mov
arpl
pusha
rolb
sahf
mov
jg
shrl
xchg
pop
jns
gs
nop
adc
cwtl
inc
mov
shlb
jb
int
sub
adc
je
pushf
es
andb
in
push
insl
fadds
pop
flds
sub
movsl
aas
outsb
add
inc
mov
movsl
cmp
and
and
sbb
xor
add
fcmovbe
lcall
inc
jbe
mov
gs
mov
movsb
push
ljmp
jno
aam
push
stc
test
xlat
hlt
divb
fwait
mov
repz
lcall
pop
cmp
pop
add
addr16
push
out
xor
pop
popf
push
inc
lods
fwait
daa
jbe
iret
stos
pusha
ljmp
shlb
mov
loope
stos
jge
pop
cmp
xor
cli
mov
push
dec
xlat
mov
jecxz
les
xchg
std
repz
push
test
stos
pop
xchg
push
fsubrl
and
cmpsb
cmp
js
pop
bound
pop
pop
add
xor
psrlq
xor
or
pushf
daa
and
xor
xchg
repz
mov
testl
push
std
pop
mov
in
xchg
xor
add
sbbl
add
shl
sbb
mov
inc
test
add
imul
pop
int
jno
inc
push
lahf
mov
xor
pushf
and
and
inc
cld
data16
push
cmp
mov
lods
sbb
outsl
repnz
and
mov
jae
push
xchg
add
cmp
out
jecxz
cmp
pop
fisttps
mov
push
pushf
inc
es
xor
push
ret
or
or
mov
and
ret
dec
loope
jl
sub
scas
mov
enter
shr
icebp
loope
pop
sub
pop
lods
inc
pop
sub
push
mov
inc
dec
pushf
push
scas
xchg
pop
mov
cmp
loop
mov
lahf
subl
push
or
jmp
test
frstor
push
xor
add
jne
push
shrl
push
jne
popa
pop
push
ljmp
xchg
mov
add
test
fdivr
xchg
daa
adc
or
xor
popa
and
f2xm1
lock
adc
mov
adc
add
mov
push
jae
push
adc
shrb
adc
jae
aad
out
inc
add
ss
sbb
jns,pt
mov
xchg
shr
ret
xlat
xor
push
pop
dec
test
or
cmp
fwait
xor
dec
mov
xchg
inc
add
jmp
mov
ss
scas
cmp
push
sarl
xlat
jbe
lcall
movb
pop
fbstp
fcomp
ss
sbb
insb
sbbb
sub
std
sub
rol
pop
cs
xchg
outsb
sub
movb
out
out
icebp
xor
outsl
sbbl
icebp
or
lock
lea
xchg
enter
mov
inc
jmp
mov
add
and
push
inc
sbb
aaa
fs
push
adc
ret
mov
ljmp
adc
stos
enter
shll
cwtl
loop
sbb
stos
das
imul
or
popf
sbb
subb
and
js
test
fdivl
incl
xchg
in
fidivrl
loopne
sub
mov
dec
in
dec
ja
add
mul
mov
in
test
or
sbb
imulb
inc
stos
mov
js
std
pop
jp
pop
repz
out
dec
cmpsb
jp
fsubrs
test
or
sbbb
mov
cmp
ljmp
es
faddl
jp
cmp
dec
pop
div
sbb
pop
loopne
dec
mov
push
fs
sub
jns
int3
sbbb
adcl
jb
mov
rolb
std
inc
push
jmp
mov
stos
fwait
and
mov
jbe
lods
and
pop
and
adc
test
cmpsb
xchg
mov
out
out
jg
inc
mov
je
mov
inc
inc
sub
pop
shll
cld
and
add
push
stos
pop
adc
sti
and
mov
xchg
mov
lea
mov
inc
insl
mov
and
mov
clc
adc
adc
pusha
inc
cmpb
push
push
inc
fstpl
or
cmp
cmp
push
cmp
in
hlt
jne
adc
test
in
pop
mov
push
lock
jp
imulb
mov
cmp
jge
add
daa
adc
dec
or
push
sti
sahf
lea
inc
adc
push
jge
aad
jecxz
int3
sub
xor
idiv
xchg
sub
sbb
popf
fwait
cmp
push
pop
icebp
inc
inc
push
je
add
mulb
cmp
sarl
mov
add
ja
mov
pop
dec
mov
out
outsb
cmp
mov
cwtl
xchg
push
mull
mov
sbb
adc
jb
jl
mov
xchg
addr16
inc
push
push
out
xchg
cmovns
idivb
jne
repz
lcall
cli
shlb
or
xchg
xchg
inc
cmp
mov
push
pop
jbe
in
dec
pusha
xor
adc
jo
testl
mov
xchg
dec
mov
stos
inc
gs
inc
lret
lcall
and
ret
jbe
inc
test
neg
sbb
inc
fidivrl
mov
push
mov
fstp
div
das
jae
sahf
movsb
push
jl
xor
popf
stos
pop
jg
mov
popf
sub
mov
mov
push
jbe
addb
inc
out
faddp
mov
addr16
mov
mov
shlb
lret
mov
or
push
mov
xor
loope
pop
cltd
xor
sub
mov
decl
repz
dec
add
inc
call
arpl
int3
mov
ret
dec
sti
jecxz
push
adc
fcomps
xor
rcrl
test
and
shlb
out
adc
lcall
std
xor
clc
lret
bound
orb
popf
jmp
pop
jne
pop
and
xchg
arpl
mul
movsl
cmp
sbb
xchg
mov
sahf
popa
call
inc
imul
cmp
sub
xor
fst
push
push
js
out
and
push
xor
aaa
js
fnstenv
adc
clc
aas
addr16
mov
dec
sbb
in
mov
lahf
xor
out
nop
mov
xor
xor
loopne
lcall
xchg
add
add
popa
jmp
mov
cmp
adc
adc
ss
fistl
lcall
fcoms
push
or
loope
sub
addb
ret
arpl
call
jge
or
dec
aam
pop
insl
cmp
and
push
ret
xor
ret
pop
mov
add
xor
push
mov
mov
rolw
mov
lods
aaa
std
xchg
jne
mov
dec
loopne
adc
pop
pop
stos
cmpl
or
inc
lahf
xchg
mov
push
std
pop
outsl
add
xor
fsub
test
and
add
out
push
inc
stc
nop
pop
inc
sbb
jl
push
mov
cmpsl
jbe
push
pusha
movl
cmp
mov
aas
sub
lds
outsb
sbb
out
movsb
loope
sbb
push
mov
jb
xchg
pop
std
sub
test
push
sahf
movsl
mov
out
adc
sub
ret
push
xchg
xchg
sbb
cmc
push
insl
push
mov
pop
mov
rcrl
or
subb
sub
cwtl
lods
jae
xor
xchg
lods
mov
mov
test
lea
insl
hlt
or
in
scas
pop
pop
adc
cltd
xchg
sbb
sbb
jns
xchg
dec
mov
loopne
in
mov
jnp
stos
mov
push
inc
mov
aas
push
xor
sbb
pusha
mov
insb
rol
test
mov
rolb
dec
hlt
nop
pop
insl
ret
repnz
dec
xor
cmp
or
ficoml
cld
sbb
hlt
insb
mulb
fwait
mov
fsubrl
inc
arpl
jno
mov
imul
pop
push
push
dec
cmpsb
divb
shll
inc
add
es
push
xor
jno
ja
inc
xchg
int3
out
ss
cmc
stos
xchg
ljmp
movsb
faddl
fs
pop
in
lods
pop
in
lods
or
movsl
out
dec
movsl
xchg
adc
or
push
jne
cmpl
adc
push
mov
or
dec
cmc
int3
leave
lds
jmp
jmp
mov
pop
cs
dec
cmpsb
cmp
lea
negb
xchg
adc
pop
xchg
mov
int3
pop
leave
cmc
cmp
dec
mov
addr16
mov
and
imul
ds
jecxz
mov
pushl
roll
stc
dec
dec
call
mov
loope
imul
push
sbb
push
data16
test
push
mov
sbbb
stc
mulb
dec
adc
cwtl
xor
jmp
adc
in
push
sbb
fisubrl
pop
loop
mov
or
and
add
jecxz
loop
cmpsb
in
push
cmp
mov
imul
jo
or
and
sub
pop
lcall
push
mov
inc
push
sub
cld
or
or
jo
add
add
je
movsl
sub
lods
pop
jp
or
adc
and
sub
inc
add
jg
fnsave
jl
shrb
sbb
sub
ror
jle
add
inc
ret
fidivrs
inc
pusha
push
movsl
cmp
push
and
test
popf
push
imul
fucomp
mov
jne
dec
rclb
ret
loope
adc
adc
pop
cwtl
pop
cli
in
jl
adc
cltd
std
lahf
push
cwtl
outsl
push
mov
lea
cli
imulb
notb
add
cmpsl
jmp
sbb
test
in
inc
out
dec
add
stc
inc
das
mov
sahf
bound
push
loope
jno
negb
jmp
popf
sub
push
divb
lcall
loope
out
daa
mov
xor
jmp
in
add
out
test
adc
dec
sbb
mov
xchg
in
pop
notl
mov
xchg
sbb
popf
jns
inc
enter
cwtl
xorl
and
xor
jmp
add
xchg
push
sbbl
add
push
push
shll
lds
mov
adcb
mov
xchg
dec
dec
lds
popa
and
div
inc
fsubl
test
clc
mov
pop
mov
pusha
or
mov
push
ror
cmpsl
cmp
daa
inc
imull
pop
cmpsb
cmpsb
dec
adc
ds
jle
stc
pop
repz
ss
sub
jp
out
jecxz
jg
push
or
push
adc
xchg
xchg
or
push
testb
arpl
push
adc
data16
sahf
add
arpl
cmp
mov
mov
daa
sub
shll
sarb
dec
test
inc
arpl
sbb
add
cmp
dec
jmp
jo
insl
push
stos
pop
rorl
das
ret
lock
fldt
mov
loop
pop
mov
mov
jge
pushf
lcall
push
jo
pop
lods
dec
aam
stc
leave
loop
call
dec
stos
jno
push
xor
std
inc
xor
lcall
push
push
icebp
lds
mov
ja
imulb
syscall
xlat
mov
jmp
push
jb
icebp
cmp
sbb
adc
mov
push
push
cmpb
mov
cmp
pop
dec
repnz
cmp
adc
in
into
mov
movsb
xchg
out
adc
movsb
mov
sti
sub
push
scas
imul
lock
pop
mov
sti
scas
add
daa
and
ret
xchg
jo
dec
sub
jnp
pop
dec
pop
fmul
outsl
call
into
imul
xor
aas
cli
shrl
fcomps
arpl
shl
and
hlt
pop
mov
inc
lcall
or
cld
scas
add
pop
xor
lret
movsl
movsb
fistps
push
jne
xor
and
xor
sub
mov
mov
cmp
hlt
shl
aad
or
das
dec
aaa
imul
les
dec
mov
mov
cld
push
jp
js
sti
xchg
inc
movsl
cwtl
and
sbb
loop
cmp
outsl
jmp
mov
sub
inc
or
lds
movsb
mov
loopne
loop
jbe
rcl
test
popf
sub
add
pop
ret
addr16
jns
sub
jp
fisttps
call
lret
push
mov
andl
loop
addr16
xchg
or
and
add
scas
mov
test
aaa
sbb
mov
imul
bound
jg
jo
scas
dec
fwait
xor
pusha
int
mov
jbe
xlat
mov
stos
sbb
pop
mov
cmp
push
mov
sarb
mov
repz
lcall
mov
adc
les
ja
mov
stos
pop
inc
sbb
repz
dec
fbld
xchg
xor
gs
or
pop
xor
mulb
out
dec
pop
loopne
sbb
andb
jl
pop
enterw
test
cmpb
addb
stos
mov
and
lea
ret
mov
jnp
xor
shl
testl
jecxz
shrb
adc
mov
lret
dec
sub
jl
sbb
test
xchg
mov
test
push
fwait
push
dec
and
cmp
dec
rolb
addl
lret
test
icebp
gs
sbb
aas
sti
push
adc
pop
jne
pop
divl
cmp
addl
int3
adc
xchg
sub
mov
jno
cltd
cli
xchg
pmuludq
nop
sub
mov
lcall
daa
pop
aaa
das
xchg
inc
lods
aas
pop
xor
bound
shll
or
and
sbb
xchg
push
test
ret
sahf
or
push
cmp
fisubl
push
push
add
cmpsl
mov
jmp
mov
fdivs
inc
mov
dec
mov
lock
push
xor
out
test
push
push
mov
cmp
insb
lods
pop
aaa
test
insl
clc
lea
xor
negl
and
fmuls
cmp
dec
pop
icebp
shr
and
mov
mov
push
mov
loop
xor
mov
jmp
popa
aas
inc
add
or
test
mov
leave
and
mov
ljmp
arpl
mov
xchg
inc
jle
loope
ja
mov
lcall
lahf
loopne
out
adc
shrl
stos
mov
jmp
lret
dec
inc
push
cmp
add
xor
mov
push
out
adc
mul
add
shl
iret
es
inc
pop
mov
xchg
adc
xchg
push
push
mov
sbb
std
int3
lret
inc
pop
push
mov
push
test
mov
adc
and
inc
sub
cmp
popa
out
lret
mov
xlat
push
sarb
jmp
sahf
mov
das
xor
fdivr
cmp
adc
inc
xor
ljmpw
and
jle
ds
arpl
adc
sbb
insb
sahf
mov
sbb
enter
fsubrl
mov
sbbl
mov
aaa
cmp
in
repnz
inc
cmp
dec
pushf
xor
mov
cld
jecxz
mov
inc
addr16
pop
add
sub
repz
das
movups
hlt
mov
bound
sub
out
lock
push
jno
adcl
adc
test
fnstsw
ljmp
mov
cmp
int
push
dec
xchg
sub
inc
sti
xchg
jb
std
addl
dec
jecxz
daa
jbe
sbb
push
repnz
pop
fwait
mov
int3
cmp
imul
mov
push
mov
jecxz
push
insb
jg
cltd
cmpsb
stos
dec
cmc
inc
pop
daa
jo
incb
xor
jl
push
fisubrs
mov
mov
or
shlb
adc
call
push
dec
negl
sub
push
pop
pop
fstpl
into
je
test
and
clc
push
mov
jns
fstl
or
test
bound
mov
repz
adc
mov
mov
lret
fstps
movd
inc
fsts
leave
sub
decb
jae
fdivl
nop
mov
imul
add
gs
and
adc
lods
inc
or
xchg
pop
fucomi
cmp
jno
mov
mov
jb
or
jns
sbb
lcall
mov
mov
xchg
in
xor
or
mov
adc
mov
mov
dec
mov
or
or
pop
lcall
rcrb
in
xchg
add
fdivrl
and
inc
jl
lds
cmpl
loopne
ret
mov
lods
mov
dec
aaa
xchg
out
in
xor
sub
rorb
xchg
mov
push
stos
aaa
xchg
xchg
xchg
repnz
pop
ljmp
push
adc
jle
mov
mov
sbb
dec
das
std
add
roll
cmp
jns
aaa
inc
push
insb
fcompl
and
pop
inc
sbb
test
cmpsl
inc
fld
cmp
adc
sub
clc
bnd
mov
pop
fnstcw
sti
xor
push
jmp
inc
push
fdivs
repnz
sub
lcall
lret
leave
jcxz
cltd
loop
stos
or
ds
call
inc
js
xor
daa
pop
sti
push
mov
insb
sub
fcompl
xchg
xchg
adc
cmp
xor
push
or
lret
ja
sbb
mov
push
mov
daa
pop
lods
scas
mov
lds
xor
sbb
cmpsl
ds
je
or
pop
and
jns
imul
daa
cld
mov
push
nop
into
add
ret
sub
out
or
loop
jb
or
int
insb
sub
jno
cmc
movsb
stos
xchg
jmp
aas
mov
das
movb
dec
mov
mov
insb
pop
leave
dec
xor
sub
xor
push
adcb
xchg
pop
ds
adc
sbb
pop
xchg
je
dec
sub
xchg
xor
mov
push
cmpb
pop
mov
lods
inc
mov
add
mov
mov
in
mov
push
sub
cmp
jg
aas
mov
leave
xor
ss
jmp
test
mov
cmp
inc
daa
in
inc
repz
call
sub
sahf
icebp
jg
mov
lret
pop
pop
popa
pop
in
mov
cltd
lock
sub
out
pop
or
icebp
jbe
or
push
int
sub
inc
pop
jne
repz
or
xor
movsl
movsl
nop
fwait
jb
inc
inc
sahf
sub
cli
rol
dec
es
cmpsl
sub
addl
mov
cmp
fistps
pop
lcall
enter
mov
subb
pop
mov
data16
mov
pop
subl
call
mov
sbb
xchg
and
imulb
aam
lret
xchg
sbb
jp
negl
mov
pushf
imul
ss
shll
popf
xor
inc
test
fldenv
les
xlat
xor
xchg
and
fsub
dec
addr16
pop
insl
mov
sbb
fdivr
je
stc
and
sub
lahf
sbb
adc
pop
sub
mov
mov
test
jo
shll
xor
xor
pop
imul
in
out
xchg
push
call
cmp
in
std
xchg
inc
out
xchg
inc
scas
cmpsb
sahf
fbld
dec
pop
jmp
insb
out
mov
sahf
and
dec
out
sbb
in
das
inc
cmp
ljmp
inc
test
lods
dec
sub
xor
push
adc
xchg
pop
add
mov
pusha
dec
int3
in
stos
jno
popa
push
adc
mov
loopne
and
fwait
shrl
pmaxsw
imul
addb
dec
adc
adc
inc
std
push
cltd
and
cmc
sbb
xchg
insl
add
fisubl
dec
sub
adc
cwtl
mov
lds
icebp
divb
sub
push
repz
test
orb
popa
jns
or
xchg
leave
or
aam
cltd
out
push
xchg
cld
loopne
fucomip
mov
gs
js
dec
push
cmpsl
push
in
push
mov
scas
sbb
and
add
fstpt
jae
lret
les
cltd
inc
and
mov
ret
push
in
in
adcl
mov
jae
les
pop
mov
xor
cmp
in
add
add
jne
inc
clc
xchg
cld
lcall
push
jge
pop
insb
rcl
addb
scas
cmpsl
or
ret
mov
inc
fisubrs
xchg
add
sbb
inc
dec
cmp
lahf
xor
jle
enter
xchg
mov
leave
les
xchg
add
rcrb
adc
dec
xor
lea
mov
mov
xor
out
xchg
leave
lret
or
pop
xor
mov
or
add
not
jo
adc
mov
xor
sbb
cmp
aad
dec
test
jae
jo
lcall
cwtl
cld
sti
push
test
lods
loop
xor
movl
sub
adc
adc
pop
jmp
pop
xor
dec
loopne
shlb
mov
into
mov
push
std
stos
jecxz
in
push
inc
push
pop
es
fistpll
jo
std
inc
push
add
lods
fs
lods
repnz
cs
ds
imul
jbe
in
sbb
nop
pop
pop
push
adc
xor
cmp
and
dec
jnp
lcall
sbb
gs
fstl
dec
fidivs
jno
cli
mov
dec
sbbl
mov
and
sbb
adc
cli
sbbb
out
cmp
push
ret
popa
lock
divl
arpl
lods
mov
leave
sbb
mov
jp
lcall
test
repz
xor
ret
lods
inc
clc
das
test
or
xchg
jbe
loopne
lea
add
cmp
jne
fildl
les
rorl
add
scas
jp
in
lods
clc
pop
stos
fimull
ss
sbb
cmp
and
mov
stos
aas
mov
fcmovb
and
fimull
xchg
push
arpl
add
iret
jp
movsb
push
sub
pop
sbb
inc
cmp
rolb
mov
pop
lret
jle
mov
push
sbb
movsb
mov
loope
push
mov
test
or
jmp
sbb
mov
shr
push
loopne
sub
mov
pusha
arpl
addb
jb
sub
clc
dec
inc
cld
mov
insl
mov
mov
test
outsb
iret
lea
mov
andb
push
fdivrp
shrl
add
sbb
push
xor
inc
lea
cmp
sti
mov
mov
adc
dec
hlt
mov
sub
in
out
pop
jo
add
push
out
aaa
sbb
ja
pop
xchg
cltd
pop
sub
mov
daa
into
and
pop
pop
repnz
adc
aad
ljmp
pop
mov
scas
mov
add
ljmp
mov
mov
adc
fnstcw
fcompl
sub
filds
pusha
dec
inc
pop
clc
andl
cmp
jae
push
lret
shll
inc
mov
js
sbb
iret
dec
test
out
mov
mov
loope
inc
adc
call
loop
sbb
dec
inc
fucomi
or
mov
pop
sti
sub
lret
js
inc
fnstenv
movsl
pop
stos
jmp
lods
push
xor
pop
mov
push
lods
cs
pop
cmp
in
in
xchg
push
dec
jns
cmp
lret
xor
mov
push
sub
mov
add
call
push
mov
sbb
mov
adc
cltd
push
aam
inc
aaa
pusha
test
fiadds
push
add
xchg
pop
ja
pop
push
dec
sbb
lret
xchg
xchg
sbb
xchg
jl
xor
movsl
lods
cmpsb
bnd
das
mov
add
mov
jl
mov
push
movsl
inc
scas
sub
or
testb
dec
enter
fildl
fcoms
sbb
dec
push
sbb
jae
cltd
push
and
sub
push
xchg
sbb
add
jno
ficompl
and
movsb
sub
adc
call
mov
dec
sub
jnp
cmp
pop
dec
lret
lods
inc
fistpl
les
jne
mov
out
je
sub
mov
ficomps
shl
jmp
sbb
loop
sub
cmc
ja
data16
pop
inc
xor
ss
jae
gs
subb
push
je
xchg
sub
subb
mov
popf
jecxz
xchg
test
out
xchg
jge
outsb
lea
in
adcl
push
lods
cs
mov
mov
js
xor
cmp
xchg
inc
xchg
xchg
sbb
push
sub
xchg
sub
dec
xchg
dec
fsubr
cs
push
cld
mov
ret
add
fisubl
sub
dec
int
dec
mov
rorl
sbb
pop
inc
push
pop
mov
jb
sub
sbb
shll
insl
jl
in
sbb
add
or
xchg
push
push
push
mov
mov
sub
fs
in
les
jno
cltd
das
addr16
inc
mov
ja
jae
or
cs
call
mov
inc
sti
test
enter
xchg
sub
mov
ds
jmp
or
push
in
add
pop
jns
add
xchg
pop
fcoml
test
adc
sti
xor
or
insl
test
jp
out
inc
int3
jecxz
and
xor
mov
xchg
xor
gs
out
loop
push
cmp
mov
or
push
sbb
sbb
fimuls
xchg
ret
mov
mov
pushf
cmpsl
in
jmp
jbe
add
xor
push
sbb
fidivs
pop
outsb
jne
dec
iret
push
enter
aad
jnp
fwait
adc
sti
xchg
es
mov
jbe
mulb
popf
sbb
inc
or
xor
outsl
sub
xchg
xchg
mov
out
or
push
mov
je
data16
mov
mov
mov
test
cmc
push
in
scas
adc
dec
test
ss
xchg
cmc
scas
cmp
cmp
imul
sbb
outsl
fiadds
test
setle
push
nop
cmp
imul
inc
lock
mov
push
push
movsl
pop
repnz
and
jl
lcall
sbb
cmp
xor
aaa
jae
jno
push
inc
negl
lods
xor
sub
and
aad
insl
add
in
fs
jge
scas
popf
callw
insb
mov
push
out
sahf
adc
sbb
hlt
sbb
xchg
sub
ja
rclb
mov
adc
mov
dec
stos
lods
dec
dec
fidivrl
or
add
xorb
adc
push
lods
add
jno
inc
lret
lock
and
cmpsl
ret
sarb
out
mov
inc
jbe
insl
test
mov
mov
pop
pushf
fwait
xor
aas
mov
scas
or
add
pop
aas
sub
test
aaa
dec
in
test
ss
enter
mov
je
aad
fimull
cld
adc
xor
cli
xchg
lcall
out
push
scas
dec
fs
sub
nop
lds
inc
pop
mov
jecxz
int
cmp
in
lret
cmp
dec
cmp
insb
data16
sbb
mov
push
jecxz
movsb
mov
popf
hlt
icebp
adc
mov
add
lret
das
xlat
andl
jg
flds
clc
rclb
add
in
insb
jo
xchg
cmp
out
jg
sbb
sbb
pop
test
xchg
adc
imul
lcall
shlb
push
fdivs
or
cmp
cmpl
icebp
sahf
cmpsb
dec
sbb
lret
cmp
push
popf
ds
cltd
push
test
pusha
fistpl
or
lds
cmc
pop
packssdw
mov
pop
mov
lea
sahf
lret
addr16
xchg
ficoms
push
jno
pop
cmp
fucomp
adc
imul
insl
icebp
mov
nop
and
scas
xchg
js
test
lret
addr16
pop
out
cwtl
arpl
mov
sub
and
clc
ret
jle
or
lret
notb
inc
xchg
std
xchg
mov
cmp
or
cmp
ret
lea
push
mov
xchg
xchg
sub
rcrl
add
rolb
mov
enter
inc
inc
sbb
neg
sbb
mov
mov
mov
lea
mov
mov
inc
in
inc
in
in
in
xchg
dec
insb
add
out
sbb
ja
adc
fists
push
jg
dec
es
out
and
xchg
adc
outsb
add
xor
int3
gs
or
inc
mov
xchg
pop
cmp
cmp
ret
sbb
push
fwait
into
mov
mov
adc
daa
outsb
or
sbb
pop
adc
xlat
push
jbe
mov
lahf
jp
iret
mov
bound
imul
jno
mov
mov
das
mov
bound
ret
cmpsb
xor
pop
push
stos
jle
test
dec
push
inc
dec
std
sahf
mov
sbb
push
ljmp
and
mov
or
lret
sbb
inc
sub
pop
dec
xchg
div
jbe
int3
mov
pop
mov
jbe
xlat
push
fstps
cmp
aam
lret
mov
loope
or
sub
ret
movsb
xor
fadd
push
push
lock
pop
pop
cmp
cmp
loop
pop
lods
xchg
mov
scas
sbb
jb
cmp
add
std
and
cmpsl
xor
repnz
jp
xchg
dec
add
mov
fidivrs
test
dec
fdivl
pop
push
jne
sub
push
arpl
aaa
sub
add
xor
mov
lea
js
xor
cmp
inc
cwtl
sbb
repnz
pop
popa
push
hlt
mov
fsubl
or
mov
cmp
pop
sub
cltd
mov
sbb
xchg
sbb
mov
and
push
xor
aad
pop
subb
fbld
push
jne
fisubrs
divl
jmp
mov
in
xchg
scas
add
leave
cld
sub
or
iret
movsl
jns
xlat
lods
pop
ss
in
stos
aam
fs
cli
mov
mov
push
pusha
testl
push
fdivl
in
pop
fmulp
test
fisubl
mov
xor
fdivrl
mov
xchg
ljmp
movsl
xchg
inc
dec
pop
jbe
pop
push
test
lret
cmp
add
rcrb
pop
push
icebp
cmp
jns
sub
insl
out
js
fidivl
jp
aas
add
scas
jb
and
fs
ret
incl
and
cld
mov
stos
fiaddl
pop
mov
dec
popa
mov
es
lcall
and
in
xor
fdivs
sbb
scas
pop
out
xor
test
add
in
in
and
push
mov
paddw
xchg
ret
dec
orl
pop
shl
dec
pusha
jo
clc
xchg
rcl
repnz
jecxz
fidivrs
inc
push
out
push
push
fnstcw
imul
lock
sub
jb
in
psubusb
push
bound
adc
cmp
ds
iret
in
rorl
sub
mov
mov
cmpsl
lret
push
int
adc
mov
jb
je
lret
pop
imul
lds
jecxz
dec
out
popa
test
lret
mov
nop
aas
neg
jmp
push
fdivs
dec
adc
or
mov
mov
orb
mov
pop
lock
dec
xlat
inc
mov
xor
xor
bnd
cmp
inc
adc
push
inc
fisttpll
mov
fnsave
fnsave
mov
pop
or
mov
ficompl
sbb
gs
sahf
rcrb
in
jmp
lds
mov
push
inc
jg
ret
rclb
out
ss
sbb
mov
movsl
pop
ljmp
and
or
push
and
pop
push
je
subl
cmp
dec
jle
mov
ljmp
out
sub
and
insl
jge
fsubr
jg
js
push
stos
jb
cmpsb
inc
adc
cmp
addr16
jg
inc
sub
mov
mov
pop
xchg
jl
fsubs
frstor
test
jne
mov
xorl
mov
loop
mov
mov
fdecstp
sbb
push
in
push
adc
sbb
dec
call
dec
push
decb
das
mov
pop
loopne
shrb
add
mov
in
loopne
or
js
xchg
sub
or
jecxz
mov
fdivl
add
imul
cmp
pop
out
int
jns
outsb
aaa
aad
call
mov
jg
adc
inc
adc
sbb
ja
fwait
insb
mov
push
loop
inc
test
gs
dec
andb
dec
insb
adc
jbe
pop
mov
sub
push
std
mov
ljmp
pop
scas
test
mov
fbstp
inc
mov
inc
cmpsl
out
jns
mov
mov
inc
fidivrl
sahf
rcr
adc
and
pop
out
sub
xlat
xchg
or
adc
lcall
push
jo
and
push
adc
xor
cmpb
sub
repnz
iret
inc
aam
std
add
insb
jbe
lods
push
add
add
mov
pop
mov
test
mov
cmp
adc
mov
fdivr
xchg
unpckhps
mov
adc
jge
xchg
mov
push
mov
out
jb
add
rclb
sbb
ljmp
aas
cld
mov
out
mov
xor
loop
fcomip
mov
adc
push
insl
ja
sahf
jbe
pushf
mov
push
bndstx
mov
aaa
cld
rolb
iret
fcomps
int
ficoms
xchg
cltd
inc
leave
lods
xchg
aas
loopne
insl
sub
sub
mov
add
shrb
popf
jo
or
call
sbb
lods
adc
data16
hlt
push
ss
mov
or
sub
sbb
dec
daa
xchg
pop
pop
cld
xchg
in
pop
cmc
mov
sbb
call
gs
xor
jp
mov
pop
lret
xlat
fdivl
sbb
iret
push
mov
cmp
push
xor
xor
pop
jmp
push
mov
mov
and
invd
leave
add
shrl
dec
xlat
mov
or
add
mov
mov
test
push
pop
fistl
out
imul
clc
test
cmp
jns
ror
dec
jmp
scas
xchg
test
dec
or
sub
mov
xor
mov
sub
pop
daa
or
and
sarl
xchg
out
mov
out
xlat
js
out
pop
push
pop
aaa
adc
mov
jmp
add
pusha
inc
les
adc
pop
inc
pop
mov
mov
mov
loope
push
lahf
imul
shll
pop
lock
int
push
xor
or
enter
mov
ret
cs
jno
out
add
test
cli
xchg
mov
out
xor
outsl
popf
or
gs
sbb
les
pop
push
ljmp
lock
cli
xor
lea
mov
or
mov
pop
aaa
push
addb
dec
push
js
jp
xor
scas
out
pop
int
adc
inc
imul
sbbb
inc
cmc
in
test
mov
mov
jae
lcall
aas
push
in
fisubl
mov
and
es
jne
pushf
pushf
mov
inc
push
aam
repz
inc
cltd
push
repnz
cmp
pop
imul
loop
hlt
loopne
dec
rorb
push
addr16
xor
push
test
das
in
inc
xor
pop
add
cltd
mov
xchg
dec
mov
dec
push
sub
jnp
jmp
neg
xchg
sub
pop
loopne
pop
fwait
adcb
sub
xchg
mov
dec
sub
inc
pop
shl
cmp
repz
mov
xchg
pop
aaa
pushf
lea
jns
insb
scas
xor
ss
dec
jge
jnp
test
imul
xchg
xor
das
jnp
push
cmp
sbb
sbb
mov
popa
stos
fnstenv
xchg
mov
fidivs
sahf
xchg
fisubl
inc
and
mov
lock
inc
mov
sub
add
inc
cwtl
loope
inc
aaa
sub
ret
ret
xor
clc
mov
pusha
jnp
sbb
xchg
idivl
or
xor
sbbb
insl
sub
dec
cmpb
dec
subl
sub
adc
jnp
sahf
sahf
repnz
mov
pop
and
jle
cld
js
jge
fldcw
xlat
sbb
ljmp
cmp
pop
iret
lahf
call
or
xor
xchg
stc
js
popa
add
xor
aad
ds
push
ljmp
jmp
pop
push
shll
and
sub
dec
pop
outsl
stos
aas
mov
mov
pop
mov
cmp
cmpsb
in
das
cwtl
fcmovnbe
add
xor
test
jg
sub
leave
or
pop
cmp
jns
insl
pop
mov
loopne
fadds
pop
mov
mov
mov
aam
push
pop
sbb
gs
fcomp
in
adc
ja
sbb
xchg
push
pop
fwait
sti
mov
xchg
mov
mov
aad
aas
nop
cmpsl
cmp
adc
imul
dec
loop
icebp
xchg
scas
dec
adc
push
xlat
shrl
call
ret
hlt
cmp
lahf
pop
int
pop
xor
notb
ljmp
jns
and
push
hlt
pushl
xor
dec
cmp
xchg
xchg
add
call
ds
pop
jnp
stos
icebp
jecxz
inc
je
lods
mov
dec
sub
push
ljmp
mov
xchg
lds
xlat
dec
out
cmp
insl
jge
sub
mov
xchg
pop
adc
shld
xchg
cmp
sub
dec
stos
cmp
pushf
stos
notb
test
fstps
mov
pop
movsbl
scas
and
lea
add
enter
push
pop
push
int3
mov
jo
xor
out
test
cmpsl
cmp
pop
mov
pop
jae
fisttpl
xchg
stos
das
mov
xchg
shlb
sub
xchg
sub
dec
cmpl
jae
dec
movsl
jb
jecxz
out
aad
mov
push
dec
pop
lahf
mov
mov
and
icebp
mov
inc
mov
mov
leavew
cmc
xor
fstpt
stos
stos
and
or
rcr
jge
hlt
cmp
fistl
pop
sbb
push
test
int
add
mov
outsb
mov
scas
ja
jp
pop
inc
xor
mov
jb
fisttpl
mov
fimuls
shlb
imull
into
es
mov
pop
lods
add
aaa
sub
xor
ds
add
les
jb
shl
pop
in
sub
cmp
mov
orb
or
mov
lahf
push
pop
cs
aad
adc
neg
arpl
xchg
in
inc
xchg
enter
mov
xchg
mov
add
inc
inc
mov
xor
sbb
test
std
das
aaa
xchg
dec
lds
cmp
ja
cmpsl
mov
rcrb
pop
stos
push
loopne
je
outsl
into
xchg
repnz
lock
fadds
jmp
inc
and
leave
fldln2
adc
fidivs
cltd
jae
xchg
data16
shl
icebp
pop
pop
out
mov
testb
daa
sub
fnstcw
push
mov
lcall
inc
imul
ret
sarb
sub
jo
mov
push
fmuls
jae
cmp
mov
cli
and
pop
mov
or
xlat
fildll
and
or
vhsubpd
rcrl
ret
fdivrl
into
xchg
mov
cwtl
stos
imul
es
mov
imul
mov
pop
add
sbbl
or
jns
dec
dec
test
out
jg
pop
xlat
xchg
mov
int
int3
dec
jmp
dec
adc
cmp
adc
fadds
movsb
ss
imul
xor
dec
mov
and
imul
flds
or
insb
ljmp
aas
jns
fmul
fnsave
sti
out
loop
inc
shll
insb
inc
and
pop
sbbb
shlb
cmp
stc
pop
adc
xlat
lcall
jge
nop
pop
cmp
jge
add
shrl
mov
out
cmp
lock
movsl
push
pop
fsubr
mov
dec
sub
and
xor
mov
fstl
bound
lret
es
xor
jo
sub
add
xor
std
inc
imul
adc
sbb
or
fdivrl
sbb
cmp
pop
lcall
sarb
jb
inc
xor
add
sbb
xchg
add
and
aam
xor
das
jle
mov
mov
das
jbe
and
test
lock
sub
repz
xchg
add
cld
frstor
gs
or
ljmp
es
push
pop
xchg
enter
bound
adc
pop
lock
idiv
lcall
sahf
xor
dec
and
jb
cmp
sub
in
lahf
xchg
push
in
shr
rorl
pop
aas
in
pop
xor
sbb
cld
lcall
push
mov
adc
mulb
rclb
pop
movsl
ss
mov
test
bound
cmp
pop
mov
negl
stc
insb
add
add
mov
jns
mov
jo
xchg
dec
dec
dec
mov
fsubs
mov
insb
jo,pn
xor
adc
pop
push
popf
mov
es
jecxz
pushf
xor
and
mov
xlat
push
aad
jl
jl
js
push
sbb
sub
mov
sbb
shlb
xchg
dec
pusha
test
sbb
push
adc
add
hlt
xor
adc
push
arpl
adc
lock
sbb
cmp
rcll
dec
push
jb
add
std
dec
xchg
mov
cs
sarb
mov
pop
cs
xchg
popa
out
shll
dec
add
fdivrl
sahf
xor
aas
dec
inc
mov
clc
mov
mov
sti
cmp
push
fbstp
loop
jge
cmp
clc
or
mov
out
jecxz
push
mov
ffree
subb
inc
xlat
lcall
lods
out
jle
das
or
scas
xchg
mov
fld
xor
inc
or
shrl
jmp
pop
add
dec
dec
sbb
stos
push
ljmp
call
pop
xor
cmp
jge
xor
in
pop
stc
fwait
xchg
pop
mov
sahf
xor
jecxz
leave
pusha
mov
fsubp
cmp
mov
cmp
clc
and
js
xchg
mov
adc
push
pop
iret
mov
test
lock
push
xchg
jae
lds
in
cmp
cmp
stos
scas
jnp
xchg
mov
add
sbb
mov
fs
jb
subb
mov
dec
sbb
mov
inc
testb
xchg
adc
xchg
shrl
adc
inc
xchg
push
scas
mov
jge
pop
scas
adc
dec
cmp
mov
rcrl
or
iret
inc
aad
xchg
lods
enter
cli
mov
aam
arpl
ror
and
mov
int3
das
test
call
fld
popa
cmpsb
lock
bound
adc
cmpsb
and
mov
ja
push
sti
jmp
fnstcw
pusha
ret
push
aaa
add
jnp
xor
popf
mov
xchg
and
pop
cli
mov
push
sbb
sbbb
roll
add
jge
imul
mov
or
jl
xchg
cmpsl
testb
adc
jg
inc
jle
jl
add
loope
cmp
mov
add
lahf
inc
punpcklbw
arpl
ss
pop
stos
mov
aam
sbb
pop
xor
fs
jns
pop
and
movsb
fucomi
inc
mov
sub
add
test
imul
jae
push
mov
or
mul
mov
add
lea
add
lcall
cmp
jg
push
rol
pop
lea
adc
jle
jmp
xchg
mov
xor
lahf
push
sbb
sub
inc
loopne
dec
out
lahf
jmp
dec
xor
jg
push
popf
pop
fucom
dec
mov
sbb
pop
ds
fidivrl
gs
jae
mov
cmp
mov
xchg
sbb
cmp
lret
cmc
notb
cmp
or
mov
lds
mov
fs
mov
add
xchg
aam
cltd
pop
xor
std
sub
nop
xchg
pop
cmp
shlb
pop
jo
jp
inc
scas
push
or
pop
mov
jnp
push
or
jbe
xor
test
mov
mov
add
xchg
sbb
push
cmp
and
pop
cs
xchg
xchg
addr16
test
xchg
cwtl
popf
jp
push
xor
lods
out
push
mov
push
xchg
sub
or
mov
dec
testb
jno
xor
xchg
pop
das
jae
xchg
push
lcall
mov
js
sbb
add
or
or
mov
xchg
mov
cld
mov
mov
xchg
sbb
push
into
int
decl
mov
sub
mov
sub
push
mov
jge
mov
ja
pop
mov
stos
cld
and
cltd
scas
xchg
pop
or
imul
or
adc
jae
sub
gs
push
stos
or
int
pushf
pop
out
stos
inc
xchg
lods
test
jle
outsb
cmpsb
adc
push
xchg
pop
test
add
push
xchg
lret
or
in
mov
pop
iret
outsl
or
ret
inc
stos
mov
push
cwtl
push
add
enter
movsl
fs
xchg
test
mov
bound
int
sti
and
mov
fildll
shll
adc
imul
push
jne
mov
push
sbb
cmpsl
out
das
push
jg
cmp
pop
mov
sbb
imul
lock
iret
jbe
mov
imul
cmp
xor
icebp
xchg
or
and
lds
js
inc
jle
cmp
or
iret
mov
pop
mov
sub
cld
test
jae
jge
movsb
in
cmp
pop
push
cmp
mov
pcmpeqb
jl
xchg
fbstp
out
and
in
subl
dec
dec
stos
cmc
or
push
dec
jecxz
mov
pop
scas
mov
call
stos
mov
push
pop
stc
call
mov
adc
js
or
pop
inc
pop
lahf
mov
jmp
aad
outsl
xor
inc
pop
mov
jo
cmp
mov
mov
push
push
jbe
mov
cmp
int3
pop
cmc
cmp
popf
lods
dec
fdiv
out
pop
push
mov
lahf
add
dec
inc
dec
ficomps
pushw
push
add
mov
pop
cmp
mov
cli
movsb
jns
fistl
xchg
loope
mov
je
insl
mov
add
stc
xchg
sbb
xor
xlat
inc
ret
mov
pushf
mov
xchg
pop
cmpsb
mov
mov
incl
inc
push
sbb
inc
rcl
repnz
fs
nop
adc
sub
sub
pusha
aaa
xor
or
stos
hlt
ds
cmp
sub
adc
dec
lret
shlb
hlt
push
cmp
jmp
jle
ret
std
pop
ret
jnp
pop
lret
das
xchg
scas
push
fwait
add
int
add
mov
popa
fcompl
test
mov
cmp
push
cmovno
in
in
int
lret
insb
out
mov
cmp
and
add
dec
jbe
jnp
xor
xchg
insl
test
lcall
jno
and
mov
ret
mov
jecxz
aaa
pop
insl
cmp
dec
jmp
push
repz
out
scas
repz
pop
movsl
fcmovb
test
lock
lods
add
shll
add
js
jnp
push
lds
orl
pop
pop
in
in
into
and
mov
xchg
adc
popf
nop
pop
out
popa
dec
shl
jmp
and
xor
xor
push
cmp
mov
or
sti
shlb
hlt
ret
and
cmpsl
mov
in
xchg
sub
imul
call
inc
into
inc
jp
pop
out
test
fildl
cltd
or
jge
test
mov
loopne
sub
icebp
mov
jns
rep
jbe
clc
iret
rcrb
jle
or
outsb
jle
add
xchg
mov
out
shlb
fcoml
ds
sub
pop
push
dec
ljmp
jecxz
jbe
jl
shrl
lods
flds
popf
mov
xor
mov
mov
mov
lock
aas
mov
je
icebp
mov
data16
sub
or
pop
arpl
fnstenv
ljmp
fiaddl
jne
or
mov
sbb
mov
mov
mov
clc
clc
sub
sub
or
sbb
push
ljmp
call
rolb
dec
aam
mov
jb
jl
int
and
inc
arpl
xchg
sub
cmp
popf
lock
cmp
jecxz
mov
push
lcall
enter
inc
std
and
aaa
gs
cmp
lret
icebp
stos
sbb
and
jmp
or
pusha
push
in
cli
mov
push
adc
icebp
or
lods
lret
lret
rorb
insb
push
cmpsl
mov
cmp
add
dec
mov
lods
cltd
xor
xlat
adc
mov
pushf
jbe
popa
sbb
icebp
ds
sbb
stos
push
pusha
push
xchg
sahf
xchg
insl
add
fisttps
daa
data16
leave
adc
mov
push
or
cmp
and
push
sub
push
xchg
adc
cmp
sbb
fwait
aas
jge
jl
cwtl
sbb
imul
inc
push
enter
cld
jbe
les
xchg
xorb
xor
stos
xchg
mov
dec
int
gs
cli
in
xlat
sub
sbbl
dec
pop
or
gs
jg
push
push
jmp
cs
into
cli
and
out
cmp
dec
jo
pop
mov
jl
sub
fidivrs
insl
in
cli
pushf
hlt
mov
cli
in
shl
pop
xor
in
cltd
push
pop
mov
movsb
mov
push
in
push
mov
push
int
pop
hlt
into
add
bnd
loope
fwait
scas
insb
add
jp
mov
cmpsl
fldl
pop
les
fbstp
xor
push
push
neg
out
jb
inc
fisttpll
xchg
pop
outsl
in
cld
in
xchg
add
cmp
jecxz
mov
jg
lcall
sti
mov
or
add
cmp
insb
mov
into
dec
fucomip
loop
sub
push
fsubs
lods
pushf
sarb
adc
jg
push
inc
or
jnp
enter
inc
add
mov
fwait
rcrb
and
rcrl
cli
dec
lods
inc
mov
data16
sub
fcoms
add
push
movsl
fdivrl
cmpl
out
gs
ror
sub
mov
xchg
jmp
push
and
sahf
cmpsb
fstpt
xchg
nop
sahf
xor
and
mov
sub
outsl
adc
lock
sarl
jmp
mov
xchg
testb
jb
rcrl
ljmp
in
test
out
dec
mov
repnz
pop
xor
push
push
jne
out
fincstp
inc
sbb
cmpsl
dec
popa
mov
inc
cltd
insb
xchg
add
mov
push
in
fmul
int
movsb
ljmp
in
pop
shr
les
adc
cmp
sub
jno
pop
jbe
xchg
out
dec
lods
fmul
aam
dec
push
xor
in
sub
xor
or
pop
mov
jae
mov
lods
fadds
xchg
cmpsl
sbb
mov
mov
lods
cmpsb
in
sarb
add
lcall
rorb
add
cmp
push
ret
mov
pop
xchg
cltd
xor
mov
andl
les
dec
mov
pop
lock
addb
jnp
or
test
and
mov
pop
cmpsb
out
fdivl
mov
mov
icebp
push
add
fs
imul
leave
cmp
cmp
in
mov
or
mov
pop
sub
test
mov
fcomip
lret
add
sub
insb
cmc
cmp
jno
aaa
mov
push
subl
and
mov
xchg
add
or
push
push
arpl
popa
xor
fwait
cmpsl
ds
jp
xchg
xchg
jmp
dec
bound
mov
sbb
inc
cmpsl
cmp
add
lcall
cli
lret
leave
mov
je
outsl
stos
in
dec
xor
cltd
out
sub
pop
sub
cmc
sbb
jo
pop
shrb
out
js
add
sahf
sbb
inc
aaa
imul
push
pop
mov
or
out
adc
inc
fdivr
test
xor
mov
test
cltd
sub
add
dec
pop
fnstsw
mov
outsl
insb
sti
pop
scas
sub
inc
out
fisttpl
lea
mov
sti
or
ja
out
leave
repz
push
sub
shll
push
bound
outsl
popl
lcall
and
fiaddl
jg
out
negl
pop
dec
push
fcomps
mov
popf
ret
push
cld
inc
scas
jb
and
paddusb
insl
mov
mov
imul
inc
or
sbb
pop
push
in
test
cmp
test
mov
div
adc
scas
jbe
adc
dec
fdivs
rcrl
mov
or
xchg
mov
pop
inc
iret
or
testb
mov
dec
adc
push
addb
push
adc
pop
je
movsb
pusha
arpl
call
inc
lret
mov
dec
inc
ret
jmp
cmp
fsts
addr16
mov
add
push
push
xor
shl
jg
mov
rorb
pop
sti
pop
dec
inc
sahf
pop
xor
jnp
mov
bound
push
add
cli
cmpsb
mov
pop
dec
mov
daa
xchg
repnz
xor
insl
mov
xchg
pop
bound
mov
clc
hlt
lret
inc
mov
inc
cmp
cmpl
paddw
jae
out
cwtl
mov
ja
test
mov
mov
test
mov
dec
fnsave
imull
scas
mov
lods
xchg
add
pop
pop
and
cwtl
into
lcall
inc
xor
xchg
hlt
xlat
dec
adc
dec
cld
out
jne
lcall
add
and
pusha
insb
pop
mov
in
test
lcall
push
adc
jns
pop
and
and
movsb
inc
push
xor
push
es
fcompl
aam
lea
loop
xchg
dec
cs
dec
and
dec
out
cmp
adc
stos
scas
xchg
int
iret
gs
test
lock
mov
js
cld
pop
cmp
push
leave
cmp
cmp
stc
orb
leave
fidivl
push
push
or
in
cltd
and
adc
js
idivl
cltd
imul
cmp
or
fidivs
mov
popf
mov
fneni(8087
xor
or
adc
pop
cmp
cs
popf
scas
and
adc
jmp
xchg
test
inc
enter
fisttpll
dec
sbb
xchg
daa
stc
push
mov
test
repz
mov
sbb
fbstp
fwait
sub
pop
sti
rorb
and
add
mov
sbb
jg
or
daa
int3
jmp
rclb
sbb
call
dec
fucom
push
mov
fucomip
mov
and
lods
push
mov
imul
pop
ljmp
icebp
jg
inc
mov
xor
orb
xor
jo
pusha
pop
insl
xchg
inc
stc
sub
mov
in
push
leave
adc
or
ds
lahf
adcl
xor
pop
cmp
mov
leave
sarl
pop
push
dec
fdivrs
inc
push
test
jp
outsl
push
mov
inc
sub
jns
mov
je
repnz
mov
jg
call
mov
push
push
adc
jle
shl
mov
jmp
lds
and
shrl
fldenv
int
jle
pop
cwtl
mov
adc
mov
lahf
into
jl
dec
and
movsb
mov
xchg
jns
push
adc
mov
or
out
mov
mov
dec
movsl
fcomps
or
stos
aam
icebp
js
push
icebp
rorl
test
bound
pop
sahf
mov
inc
sbb
fldt
xor
lods
les
sahf
push
cmp
stos
stc
fs
fnstsw
dec
cmp
cmp
push
fcmovnu
rol
pop
je
das
int3
arpl
andb
mov
faddl
sbbl
addr16
fidivrl
test
dec
mov
out
push
push
and
add
nop
repnz
es
lods
sub
test
data16
test
and
add
js
or
xsha256
cmpsb
adc
xchg
jp
mov
aaa
call
xchg
sub
mov
cs
dec
jne
in
push
out
fsts
add
xor
ficoms
jmp
outsb
dec
out
xor
pop
fdivrl
add
int3
arpl
cmp
mov
aaa
and
ljmp
lods
fadds
bound
imul
stc
xchg
rolb
adc
push
out
xchg
adc
add
or
xchg
daa
adc
jns
ss
xchg
sti
js
leave
mov
jp
mov
ja
push
icebp
add
dec
pop
fldcw
push
and
lahf
cmp
out
cli
jno
mov
aas
push
and
mov
lock
mov
cmc
or
mov
clc
out
std
pushf
into
ds
outsl
jbe
mulb
adc
push
std
pushf
and
jmp
ret
scas
out
inc
push
pop
call
addl
cltd
jmp
das
ljmp
push
mov
mov
add
dec
pop
aam
or
and
xor
add
xchg
pop
mov
mov
jecxz
pushf
push
icebp
cmp
and
movsb
fldt
jge
push
xor
dec
mov
push
jb
stos
pop
fiaddl
mov
aam
mov
pop
into
push
aas
sbb
daa
out
ret
pop
jno
lcall
into
in
and
daa
jbe
in
push
pop
adc
xchg
sbb
cmp
pop
lods
scas
es
jp
sub
cmp
idivl
outsb
push
xchg
insb
dec
sbb
mov
pop
push
jp
xchg
out
test
jg
push
push
nop
jae
daa
movsl
mov
cmpsb
enter
jl
sub
sbb
mov
cmc
mov
aam
push
jne
dec
lcall
pop
mov
jle
call
or
mov
std
stos
push
push
push
cmpsl
jp
std
adc
sub
sub
pop
movsl
xlat
call
ljmp
inc
fsubs
inc
incl
cld
mov
add
adc
mov
mov
scas
fisubs
inc
test
mov
lcall
adc
or
push
inc
cmp
inc
bound
mov
xor
inc
insl
ja
add
jp
add
fsts
sub
data16
aas
mov
jle
movsb
incl
jnp
and
push
dec
add
dec
pop
pushf
arpl
in
xor
mov
mov
fstps
rol
xor
sbb
sbb
sti
sbb
pop
xor
xor
aam
outsb
adc
push
call
inc
out
daa
sbb
mov
movsl
aas
fnstenv
pop
xchg
jle
scas
pop
mov
xor
fnstsw
imulb
and
xlat
push
test
adc
lds
dec
scas
cmc
pop
jecxz
adc
mov
inc
jbe
pop
adc
into
cld
xchg
adc
loopne
cmc
mov
frstpm(287
shrb
mov
leave
in
add
inc
jmp
cld
sbb
or
jno
loopne
insl
stos
cmp
sti
andl
imul
sbbb
je
jl
ret
mov
movb
push
insl
jo
rcr
and
test
dec
bound
sar
pop
int
and
pop
adc
push
and
xchg
data16
push
lcall
clc
outsl
lret
xor
shll
movsb
rcrb
dec
xchg
popf
or
inc
addr16
loop
inc
roll
lahf
push
movsb
imul
mov
mov
pop
cltd
sub
jb
arpl
adc
xchg
js
fwait
cmp
xchg
out
clc
sbb
xor
imul
out
mov
cltd
gs
test
add
lret
sub
mov
jle
scas
xchg
sub
cmp
aad
cmpsl
imul
ret
push
nop
enter
jge
or
scas
sbb
rcll
loopne
sub
push
mov
sbb
leave
jb
loopne
fstps
jecxz
popa
arpl
popf
in
xlat
outsb
fidivs
mov
xor
mov
dec
mov
sub
add
ja
das
cs
dec
ret
fmull
aad
push
cmp
mov
mov
push
mov
jne
mov
cmc
inc
fsubs
inc
pop
adc
fwait
test
rcrl
fst
notb
in
pop
fildll
and
jg
lods
addr16
imul
lret
dec
addr16
inc
ficomps
mov
fbstp
sbb
xor
xchg
rclw
fidivrs
mov
dec
aad
test
add
rcll
iret
push
stos
bound
into
xchg
int
bnd
cs
pop
push
adc
inc
jne
add
cmpsb
sbb
jg
xchg
cld
jns
sub
dec
pop
movsl
fldcw
adc
mov
jbe
les
sbbb
mov
dec
push
lcall
sbb
sub
dec
cld
idivb
outsb
pushf
sbb
add
mov
gs
aad
lock
push
notl
aaa
or
fs
adc
inc
and
mov
fsubrs
rcrl
outsl
add
mov
es
mov
jb
mov
imul
fcmovu
mov
sub
out
add
ljmp
cltd
lock
test
cmpsl
mov
push
js
mov
ret
mov
mov
int
ljmp
insl
inc
sub
in
inc
dec
leave
enter
xor
push
jmp
xor
data16
fs
sahf
rcl
or
jl
popa
movsl
call
jbe
popa
jo
mov
dec
fidivl
aam
add
fstpt
and
push
jge
call
stc
test
sub
inc
adcb
push
push
mov
xor
xlat
mov
mov
ret
pop
addr16
fcoms
mov
arpl
pop
sub
add
dec
in
or
lock
dec
fsubp
jns
in
pop
lock
int3
loope
mov
push
mov
dec
sarb
dec
cmp
dec
pop
idivb
jno
in
das
dec
sbb
scas
add
push
push
fisttps
jns
sahf
test
and
and
add
mov
or
stos
pop
sbb
jae
pop
out
xor
test
adc
loopne
jbe
or
negl
jno
push
sahf
adc
cmp
and
cmp
aas
mov
sub
sub
in
add
and
test
cmpsl
mov
and
mov
jae
lods
sbbl
out
push
xor
sti
popa
enter
inc
out
imul
sbb
ja
frstor
dec
lret
loopne
xchg
out
dec
in
addr16
adc
in
jbe
jp
or
push
rcll
dec
in
fwait
add
cs
hlt
adc
mov
push
rcrb
sete
xor
push
add
pop
dec
xchg
cwtl
test
loope
movsb
or
add
add
jl
loopne
in
fisttps
rol
out
jge
pop
cmp
lret
pop
clc
jo
mov
outsb
scas
sbb
rcrl
in
push
jns
push
jnp
js
ja
pop
test
xchg
sub
cmp
adc
test
movl
imul
cmp
sbb
or
push
es
dec
or
out
fisttps
in
jne
mov
or
pop
lcall
push
imul
xor
adc
jne
pop
pop
rorl
jb
sbb
fdivl
jo
adc
pop
cltd
es
xchg
sub
push
dec
push
push
dec
xor
jne
mov
add
xchg
scas
mov
mov
testb
or
inc
pop
sbb
in
sarb
lods
mov
mov
and
mov
arpl
fistpl
jge
scas
and
pop
jmp
test
aaa
add
dec
cmpsb
imul
flds
cs
mov
jle
jbe
pop
dec
or
xor
fstpt
inc
xchg
repz
lods
ljmp
pushf
xor
add
outsb
push
js
and
mov
pop
add
sahf
xor
dec
add
jb
jg
inc
inc
push
mov
ret
mov
dec
shll
push
popf
test
ret
or
xchg
enter
lds
and
fcoml
cmp
cmpsl
jecxz
stos
and
repz
mov
cmp
loopne
adc
data16
outsl
or
cld
xchg
iret
mov
aam
ret
cmc
mov
daa
cli
dec
enter
fcompl
bndstx
loopne
mov
dec
mov
and
adc
xor
ljmpw
enter
repnz
iret
sub
cmc
fdivrs
roll
sbb
and
test
out
test
jo
xchg
push
aad
push
nop
lret
push
stos
mov
sti
cli
push
xchg
xor
cltd
rorb
dec
jbe
stos
jmp
xchg
dec
movsl
dec
xchg
inc
loope
cmp
push
and
xor
or
add
and
xchg
aam
push
xchg
mov
outsb
jnp,pt
pop
jae
sbb
adc
push
pop
loope
dec
jne
popf
sub
mov
sbb
sub
mov
insb
dec
ljmp
mov
inc
shrb
push
or
mov
jp
push
cmc
adc
mov
inc
jg
jbe
sub
sub
or
pop
imul
push
movsl
xchg
call
sub
testl
adcw
in
les
in
test
pushl
mov
or
xor
iret
jne
adc
mov
cs
and
cmp
mov
push
jno
and
adc
jecxz
and
in
hlt
cmp
gs
pop
lock
push
mov
outsl
mov
rcl
les
mov
sti
dec
dec
xor
xor
push
es
mov
ret
push
daa
adc
rorb
mov
loop
push
adc
adc
push
mov
addl
or
xchg
add
inc
mov
xor
jae
adc
cmp
sarb
fstpl
pushf
hlt
ja
jecxz
dec
inc
add
mov
fcomps
in
jno
repnz
insl
inc
sahf
adc
adcl
cmp
mov
jne
scas
daa
pusha
cmpsb
in
int
test
cli
in
test
sub
aaa
jnp
scas
add
icebp
mov
or
sahf
mov
push
xchg
popf
sbb
mov
jns
add
je
xchg
lret
mov
seta
dec
pop
xchg
test
rclb
dec
in
mov
aam
imulb
shrl
pusha
call
fwait
jbe
cmp
and
jp
mov
dec
shll
add
shl
inc
adc
dec
pop
push
pop
xchg
cmp
fidivl
ret
jae
sarb
push
insl
sbb
cmp
and
xchg
out
aas
xchg
rcrb
mov
pop
out
rol
push
dec
xchg
je
scas
insb
out
cmpsl
imul
out
scas
push
xor
nop
insl
pushf
mov
call
mov
movsb
cmp
and
sub
jb
xchg
ja
outsb
movsl
add
sbb
cmp
nop
adc
pop
scas
jbe
frstor
test
lods
mov
xor
sub
sti
movsl
dec
test
int3
dec
inc
fidivs
fdivrs
add
xor
xor
mov
or
outsl
adc
jno
pop
addr16
adc
jl
sbb
mov
and
shl
mov
cmpsl
je
mov
sub
pop
xor
movsb
repnz
out
aam
ret
std
call
dec
mov
inc
icebp
mov
mov
pop
lcall
mov
scas
cmp
int
test
inc
or
fnstsw
ret
mov
xor
outsb
jl,pn
jne
loop
or
jo
arpl
pop
jp
clc
inc
mov
int3
out
sbb
in
out
jb
pop
aas
aam
cld
cwtl
in
and
sub
xor
das
sar
push
mov
cmpsl
shl
mov
pusha
add
ss
sub
movsb
jecxz
bound
pusha
fucomi
mov
cmpsl
xor
xor
sub
jmp
call
lock
aam
je
xchg
jp
xchg
pop
sahf
cmp
inc
shl
jl
dec
pop
push
out
jle
int3
fstps
jl
jp
pop
lahf
outsb
xchg
mov
pusha
out
push
fsubrs
pop
or
adc
je
cltd
frstor
cwtl
lds
cmpsb
insl
lds
mov
mov
ret
jno
imul
cmpsl
cmp
sub
sti
nop
lds
add
add
pop
xchg
cwtl
or
jg
mov
mov
cmp
and
pop
sarb
jg
outsb
sub
mov
leave
pusha
adcl
js
out
or
adc
or
jb
dec
mov
bound
and
pop
add
and
stos
mov
aaa
lret
jl
mov
ret
loop
jns
push
ljmp
jno
insl
or
or
nop
dec
xchg
popf
dec
adc
lea
fcoms
clc
inc
inc
sub
sub
in
repnz
sbb
sub
add
insb
jle
rcl
pop
test
pop
lods
loope
pop
roll
ret
jle
jns
data16
loope
mov
lds
js
mov
imul
int3
pop
lret
out
ret
pop
in
pop
cmp
inc
inc
and
into
or
cmp
mov
lea
cmpsl
adc
push
fmul
aas
jno
movsl
sub
std
push
push
mov
sti
sub
adcl
and
add
push
outsb
mov
adc
aam
xor
sub
cs
pusha
ret
pop
sub
cmp
gs
and
sub
xlat
cmc
imul
popa
jo
push
or
pusha
cmc
xor
mov
dec
push
pop
sbb
push
push
lahf
pop
or
cmp
jle
xchg
test
mov
mov
enter
push
mov
mov
arpl
add
ja
sub
fadd
es
stc
test
movntps
lcall
popa
ljmp
sbb
push
and
xchg
push
cmp
add
fwait
je
sbb
mov
mov
ljmp
pusha
ds
out
repz
idiv
xlat
push
dec
popf
repz
and
dec
jmp
jno
and
xchg
fwait
bound
inc
test
mov
cmp
shr
push
rorl
mov
pop
jle
hlt
xor
cmp
pop
add
sub
in
adc
adc
add
insl
jle
sub
aam
sub
xor
ljmp
push
int
enter
je
and
pop
push
gs
fsts
js
in
sub
push
xlat
cmc
lods
pop
inc
stos
mov
lods
fcoml
push
movsl
adc
mov
ds
out
in
lret
out
xchg
mov
cs
pop
test
xchg
mov
js
dec
scas
mov
nop
mov
clc
lcall
cld
push
jge
lcall
inc
addr16
gs
push
adc
fidivs
push
cltd
push
xor
ds
scas
jmp
js
pop
outsb
xchg
fwait
lcall
imul
jbe
add
or
lret
pmulhw
lea
and
clc
mov
add
or
jg
insl
and
jbe
mov
push
je
mov
mov
flds
ljmp
pushf
repz
cmp
femms
repz
mov
jbe
lret
mov
fsubs
jge
jp
cmp
dec
por
xchg
pop
mov
or
adc
add
ret
add
ja
ret
mov
test
mov
ficomps
xor
leave
mov
mov
mov
call
addr16
pop
fs
mov
sub
mov
mov
fcmovnu
enter
outsb
fsubr
dec
mov
dec
gs
mov
mov
fsts
ret
mov
ja
loop
icebp
dec
jp
jno
jle
setge
jns
ja
cmpsl
add
add
test
mov
insl
sahf
sub
clc
fistl
frndint
bound
ja
lods
xchg
shrl
push
roll
rep
xorl
push
mov
cmc
insb
xlat
or
cmp
jle
mov
mov
jecxz
jl
or
add
repnz
dec
dec
frstor
mov
ljmp
aaa
and
jle
data16
adc
ficompl
push
mov
and
push
js
adcb
lds
bound
ror
mov
mov
adc
mov
jecxz
jae
sbb
jge
arpl
aam
jle
sahf
sub
xchg
popf
cli
xchg
rorl
cmp
sbb
rcll
das
pop
push
jecxz
mov
adc
jno
pop
mov
pop
incb
lahf
mov
push
mov
hlt
call
mov
stos
inc
xor
cmp
test
jecxz
imul
scas
jae
push
jl
cmp
or
aam
xor
lds
mov
imul
jl
in
or
je,pn
lods
mov
dec
push
dec
rcrl
je
hlt
push
enter
ret
aaa
lods
mov
sbb
scas
rcrl
dec
mov
sti
scas
cmp
inc
cmp
shll
fcmovne
or
sbbb
sahf
sbb
fbld
cmp
mov
jbe
xchg
and
sti
cmc
inc
test
or
inc
inc
push
pop
aas
andl
ljmp
jno
push
addr16
imul
repnz
pop
lods
or
out
lock
mov
in
adc
mov
add
lea
aas
mov
pop
adc
adc
xchg
xchg
shlb
inc
mov
push
sahf
dec
push
and
sti
adc
data16
mov
stos
adc
into
mov
add
je
and
insl
mov
push
sub
ret
inc
mov
add
jg
cmp
push
sub
int3
out
std
and
jbe
cmp
clc
jge
inc
outsl
or
cli
xor
push
mov
je
xor
scas
xchg
add
mov
fbstp
sahf
fwait
mov
sub
xchg
loop
divl
add
repnz
fadds
pop
pushf
sub
insb
sub
xor
lea
xor
cwtl
daa
into
and
lret
cld
addl
lds
lea
mov
inc
imul
cld
xchg
mov
mov
or
dec
jne
sahf
and
dec
mov
in
inc
adc
pop
xor
sbb
testl
jle
das
dec
mov
dec
icebp
sbb
loop
mov
test
fimull
jle
mov
sub
mov
shrb
add
adc
loopne
cmpsl
lcall
and
mull
sub
jmp
or
sub
inc
mov
fildll
dec
adc
mov
stos
and
gs
cmp
pop
add
dec
popf
data16
out
pop
xchg
or
sub
ret
ss
test
fyl2xp1
lods
mov
iret
add
xor
sbb
inc
inc
pop
mov
mov
push
xor
adc
fwait
and
lods
xchg
or
cmp
lahf
sbb
inc
js
subl
test
mov
mov
loopne
sbb
cmpsb
les
cmpsb
xchg
and
ret
sbb
xor
pusha
loopne
mov
andb
andb
xlat
inc
out
fmull
sbb
filds
cld
repz
ds
lret
pop
hlt
fwait
cmpsl
sub
sub
inc
movsb
mov
dec
sbb
dec
shl
or
inc
inc
jnp
inc
add
adc
rol
leave
or
mov
mov
pop
push
daa
nop
dec
ljmp
mov
notb
fcom
in
out
push
xchg
push
push
stos
das
xor
push
insb
add
pop
sbb
or
push
mov
daa
xchg
aas
dec
enter
mov
dec
idivl
jecxz
jns
lcall
insb
mov
fpatan
cmp
mov
mov
subl
mov
popf
stc
xchg
inc
aam
sub
cld
mov
mov
jno
stos
or
sbb
gs
sub
mov
xchg
jae
lock
jo
mov
and
xlat
add
or
stos
xchg
enter
inc
fs
movsb
adc
inc
fnstenv
fdiv
or
cltd
cli
orl
add
insb
mov
cmp
int
insb
out
xorl
stos
jp
popa
xor
call
sub
push
sbb
jae
pusha
lea
cmp
js
and
jmp
sahf
push
mov
adc
es
jecxz
mov
test
inc
fcompl
dec
in
lods
xor
add
cmp
mov
cld
cltd
and
sbb
and
incb
xchg
cmp
inc
mov
dec
dec
xchg
push
mov
cmp
push
pop
cmp
pop
out
jae
daa
mov
loopew
push
fiadds
inc
ret
jb
rcrb
aam
sti
cmp
cmp
jecxz
cmpsl
push
jne
test
fbstp
push
rcr
stos
adc
mov
into
mov
xchg
xor
outsb
mov
xor
inc
test
loopne
push
jnp
inc
pushf
std
bound
add
mov
stos
mov
push
andl
pop
jl
adcb
pop
inc
loop
fadd
pop
xchg
sahf
repnz
xor
add
icebp
outsb
mov
loop
push
cmpsl
push
sbb
pop
loopne
mov
sub
sahf
sub
sti
and
dec
mov
aam
bound
mov
cltd
mov
push
aaa
leave
xor
jb
bound
pop
and
sub
out
adc
test
xor
aam
jg
sbb
sub
lahf
fldt
pop
loope
mov
and
dec
inc
movl
dec
pop
ljmp
jo
inc
les
mov
test
mov
cld
mov
xor
inc
nop
xor
lods
neg
aas
pcmpeqd
pop
out
sub
add
scas
call
xor
mov
imul
aaa
inc
sbb
bswap
popf
out
push
jbe
pop
mov
xchg
imul
das
xor
inc
ja
dec
dec
xchg
dec
arpl
xchg
test
subb
ret
hlt
mov
cwtl
cmp
and
mov
or
insl
xor
push
inc
inc
xor
and
pop
xlat
push
sub
test
stos
inc
push
cli
pushf
prefetchwt1
xor
xor
push
in
daa
mov
inc
test
in
pusha
out
fwait
mov
sti
xchg
out
xor
in
nopl
xchg
jbe
cltd
cmpsl
push
icebp
mov
mov
pop
lret
ss
push
add
in
cmc
fstps
out
mov
ficomps
inc
jnp
mov
lret
xor
or
cli
das
dec
in
jne
inc
push
push
and
and
cmp
lea
push
xor
subb
push
adc
sub
and
loop
jae
jg
cmp
push
jno
or
push
dec
mov
in
jle
mov
inc
cmpsb
scas
sbb
xlat
or
stos
cs
push
mov
or
cmp
jecxz
int
dec
in
sub
jbe
inc
ret
mov
jnp
sar
mov
fidivl
jns
outsl
jne
mov
xor
adc
xchg
inc
jg
jne
in
cmp
jae
lcall
scas
mov
push
out
jo
dec
pop
rcrb
or
and
scas
sub
rorb
stos
add
cmp
movsb
sbb
cmp
daa
mov
xor
jne
xchg
flds
shr
repz
icebp
les
ds
sbb
sbb
and
fwait
cmp
dec
icebp
mov
aam
and
or
or
and
mov
fdivrl
dec
cmp
push
fdivrs
fidivs
addl
mov
mov
in
or
push
popf
jo
jmp
int
addr16
mov
das
pop
inc
sub
push
or
or
out
stos
jle
sbb
fwait
ret
mov
loop
jb
loopne
cmp
pop
push
xchg
sbb
sar
push
lods
add
int
shll
sub
cli
out
call
cmp
xchg
xchg
sbb
push
ds
out
jbe
mov
dec
dec
jecxz
iret
lds
aam
xor
pop
arpl
jmp
aaa
outsb
sub
daa
jl
rcrb
xchg
mov
ret
lds
sbb
cmp
sbb
test
stos
int
jo
xchg
push
scas
mov
sbbl
push
and
mov
ja
sub
push
fistpl
mov
fsts
pop
push
scas
mov
int3
inc
sarb
repnz
leave
push
rcl
mov
imul
fwait
inc
adc
cmp
cmpsb
mov
push
aas
xchg
mov
inc
sar
jp
jns
xlat
movsl
push
out
xor
mov
mov
xchg
add
jmp
push
call
dec
pop
repnz
dec
push
mov
push
lods
add
sub
rclb
add
and
daa
xor
imul
pusha
vunpcklps
push
mov
orl
pop
call
or
test
inc
ds
faddp
sbb
das
mov
mov
daa
imul
sub
ror
push
lret
sbb
push
cmpsb
mov
notl
outsl
fsubl
loopne
imul
movsl
inc
dec
sbb
inc
into
arpl
jp
jle
dec
mov
jae
in
sub
out
sub
clc
mov
mov
imul
push
ss
stos
inc
stos
cmp
xchg
cmp
sub
out
repz
shll
cltd
loope
cwtl
mov
loop
xchg
rcll
sub
pop
jns
daa
inc
xchg
sub
lahf
faddl
adc
push
out
adc
fs
test
outsb
jle
push
gs
push
icebp
movsb
mov
mov
push
cmp
xlat
xchg
xchg
sbb
repz
jb
aaa
push
clc
rcll
pop
outsb
out
out
fwait
add
ss
pop
mov
repz
in
adc
jecxz
insl
enter
pop
in
test
out
jecxz
add
es
fldl2t
or
mov
popa
inc
jns
sahf
or
mov
jne
mov
out
mov
and
nop
sub
xchg
xor
pop
adc
and
lret
xchg
scas
cmp
loop
dec
dec
dec
sub
sarl
pop
or
mov
ja
cmp
data16
rorl
or
adc
push
dec
in
cmp
mov
inc
bound
dec
ljmp
xchg
lea
jno
xchg
scas
jno
clc
sub
fdivp
add
xor
dec
fistpll
fstpt
fstl
cmp
jl
and
std
rorb
sbb
scas
jns
cmpb
jae
sub
popa
pop
adc
jns
out
xorb
nop
xrstors
aam
jmp
inc
in
adc
sbb
push
out
outsl
jb
xchg
enter
inc
or
push
pusha
sub
jl
jae
in
add
fistpll
out
aaa
mov
loop
rcrl
fwait
dec
in
jb
xlat
scas
jae
adc
add
popa
lods
xor
xor
pusha
or
jmp
mov
cli
inc
mov
pop
push
in
mov
jae
pop
add
xchg
dec
loop
cmp
loop
in
mov
hlt
ja
lods
outsb
sbb
pop
adc
fcomip
outsl
sti
pusha
imul
inc
jb
das
stos
sbb
lret
fwait
shll
sub
sarb
outsb
push
out
inc
lcall
test
outsb
mov
adc
repnz
sti
mov
and
fldenv
aas
shrl
call
sbb
inc
mov
stos
negb
mov
add
rol
pop
cmc
jecxz
adc
inc
mov
mov
gs
jae,pt
rclb
shrl
popl
fidivl
sub
subb
adc
ret
cmc
int3
out
cmp
icebp
cmp
adc
mov
push
inc
inc
dec
sbb
mov
inc
cmp
jg
int3
fs
mov
sub
mov
xlat
dec
shll
outsb
push
ret
xor
stos
push
ds
lock
push
mov
and
jne
enter
fildll
test
fwait
pop
jb
sub
mov
je
dec
pop
iret
jno
cmp
stos
call
test
loop
dec
jmp
add
or
xchg
or
int3
sub
sbb
sti
xchg
sub
sub
inc
pop
sbb
popf
shlb
movsl
or
scas
and
lea
call
cmp
jne
mov
nop
popa
and
xchg
enter
insb
mov
dec
jge
sbb
cld
xor
lahf
les
pop
outsl
pop
and
or
shll
push
cmc
and
mov
clc
dec
mov
mov
jmp
mov
mov
lock
push
lcall
js
dec
adc
push
jmp
das
repnz
fsubrl
push
xor
fisubs
xchg
sbb
mov
sbb
outsl
mov
xchg
xchg
out
inc
xchg
dec
cld
cmp
aas
std
sbb
and
xor
int3
or
sbb
or
push
insl
pop
cmp
mov
ret
ss
add
xchg
imul
add
push
adc
and
ret
cmpsb
inc
and
push
loope
js
mov
sbb
aas
jl
sbb
rcr
and
sbb
fcom
add
insl
sbb
shrb
sbbl
stos
xchg
inc
idivl
or
xor
dec
jp
idivb
push
outsl
sbb
adc
out
pop
fstp
jle
lods
leave
pop
lds
or
sbb
add
push
std
jae
shrb
adc
fnstenv
pop
mov
inc
sahf
and
mov
setns
mov
loope
gs
adc
ret
mov
imul
adc
pusha
pop
push
inc
xlat
and
push
xor
js
mov
or
xor
add
daa
test
insl
mov
fidivrs
js
jbe
pop
repz
stos
xchg
adc
ficoml
sbb
cmpsb
cmpsl
stc
sti
in
lods
xchg
out
js
push
stos
jecxz
pop
push
xchg
rcr
jae
sub
or
pop
cs
or
insl
jle
dec
insb
or
dec
cli
imul
bound
cmp
in
or
inc
jno
xchg
xor
push
inc
add
add
daa
lods
jo
mov
icebp
outsl
popa
push
pop
inc
mov
mov
in
mov
and
jne
test
test
push
out
jnp
mov
ljmp
jne
ss
dec
xchg
outsb
out
fs
mov
aaa
fidivl
das
gs
push
dec
lds
les
int
push
add
mov
loope
je
sti
sar
and
iret
subb
ret
sbb
mov
dec
pop
mov
aam
sbb
out
and
and
insl
clc
mov
adc
insl
xor
sbb
sbb
push
out
shl
cmc
add
pop
nopl
dec
xlat
push
add
jae
push
cmp
insb
sbb
hlt
lds
inc
mov
dec
cltd
sbb
mov
imul
jnp
movsl
nop
lods
jl
push
jne
jg
fistps
andl
aas
push
mov
xor
or
cmp
adc
lds
adcb
fsubp
inc
push
pushf
popa
or
cmp
aas
into
inc
loope
xor
rcll
imul
rolb
push
mov
dec
leave
mov
loopne
maxps
les
add
in
xor
jp
cmp
lahf
pop
js
or
xchg
jmp
insl
pop
ficoml
jne
test
xchg
aam
push
pop
or
jg
dec
dec
mov
sbb
fldenv
orb
test
repz
mov
push
into
adc
mov
dec
mov
or
stos
sbb
adc
or
bound
pop
shl
pop
jmp
xchg
pop
pop
out
test
mov
in
je
fstpl
iret
gs
dec
mov
cmp
in
sahf
fimuls
push
lods
imul
call
lret
int3
xchg
fnstsw
nop
jge
adc
cmp
and
hlt
fnsave
sub
lods
cld
popf
out
inc
pushf
and
enter
mov
and
xchg
sub
test
mov
idivl
subl
dec
dec
popa
sub
imul
mov
test
pop
lret
imul
incl
adc
xor
push
dec
dec
fiaddl
push
push
ss
add
xchg
stos
dec
imul
mov
jb
movsl
or
fiaddl
xchg
push
dec
jae
sarb
xor
fmulp
fs
sbb
dec
cmp
test
adc
pop
addb
or
sub
sub
arpl
lret
std
aas
cmp
cmp
shll
inc
fnstenv
shll
cmp
push
bound
out
cmp
movsl
xor
insb
add
xchg
call
add
jle
cmpsb
xchg
push
mov
frstor
or
cmp
leave
or
xchg
push
cwtl
das
or
mov
mov
fdivrl
call
inc
arpl
rcll
or
add
and
fsubrs
pop
divl
bound
sub
fldcw
insl
jmp
cmp
stos
sub
ljmp
push
inc
push
out
jno
shlb
mov
inc
lock
pop
stos
fdivr
xchg
into
xlat
sbbb
cmp
mov
fcoml
dec
push
dec
loope
ja
jmp
loop
xchg
and
or
ret
inc
pop
in
sbbb
pop
cmc
and
jnp
lds
or
imul
fistl
and
shrl
pop
clc
cmpsb
adc
cmc
push
imul
add
cmpsl
sub
test
push
mov
push
inc
xlat
jnp
mov
iret
popf
ret
pop
or
push
jecxz
loope
in
movsb
pop
outsl
lds
mov
push
push
stc
push
lea
das
sbb
and
insl
push
jl
fcomip
outsb
add
ss
jo
xchg
or
sbb
mov
pop
or
xor
mov
jne
test
lods
mov
jbe
mov
inc
data16
dec
fbstp
repz
and
xchg
pop
mov
negl
gs
andb
outsl
and
and
cmp
xor
dec
xchg
mov
jecxz
push
incb
jge
addr16
xchg
mov
loope
lea
pop
rcrl
loope
cld
gs
sub
dec
ja
cmp
insb
scas
sbb
enter
addr16
movsl
xor
stos
push
jnp
or
jae
or
add
mov
call
fs
jmp
jmp
jp
adc
dec
aad
fwait
push
insb
push
jmp
and
mov
sub
rclb
imul
add
inc
scas
sub
lcall
sub
sti
aaa
popa
jo
xchg
pop
orb
clc
sbb
add
cwtl
dec
outsb
shl
inc
push
pop
dec
loopne
imul
pusha
push
push
insb
jnp
stos
jbe
pop
loopne
aam
imul
icebp
cmp
in
sbb
dec
or
icebp
test
icebp
cmp
cmp
cwtl
mov
out
cmpsl
insb
bound
popa
pop
je
stos
dec
mov
sbb
imul
shrb
mov
mov
mov
pop
in
stos
mov
jle
sbb
mov
jnp
cli
mov
pop
xor
stc
push
loopne
sub
std
stos
xlat
loopne
loop
clc
in
cli
cmp
sub
std
inc
sbb
inc
mov
cmpsb
pop
stos
jmp
jp
jns
add
sbb
cmp
lock
popl
add
dec
gs
cmp
gs
loopne
sub
mov
es
rclb
repnz
adc
push
inc
pop
pop
cli
add
hlt
aam
pop
jg
mov
popf
addps
xchg
xor
stc
mov
cmp
push
or
lods
faddl
cmc
mov
sbb
pop
rclb
pop
mov
std
cltd
sahf
movsl
imul
je
idivb
add
in
das
gs
sti
ficoml
mov
in
xchg
push
aad
cmp
pop
mov
mov
cmp
sub
mov
xchg
js
filds
dec
adc
dec
add
icebp
mov
out
adc
mov
xchg
xchg
sub
pop
mov
aas
int
sar
jnp
and
pop
mov
dec
mov
jle
push
shr
leave
lods
pop
mov
mov
push
jo
pop
insb
or
add
test
inc
xchg
xor
int
xor
lods
jns
or
add
push
lret
mov
xchg
mov
loopne
je
ljmp
pop
xchg
xor
cli
mov
dec
add
mov
outsb
inc
xchg
jmp
jnp
jl
out
adc
dec
dec
mov
inc
ficoml
jae
jecxz
adc
movsb
dec
nop
mov
iret
fmulp
add
shrb
std
paddusw
ja
jae
fdivl
mov
and
push
pop
jbe
shll
sub
xchg
mov
lahf
or
mov
cmpsb
jns
out
push
int3
mov
xor
or
push
test
js
jno
dec
xchg
lret
scas
add
cmpsb
lock
xorl
jg
test
fadd
ds
mov
jecxz
adc
sub
dec
and
jb
jmp
sbbl
je
lret
or
and
add
add
cli
pop
call
mov
jno
or
aad
fiadds
push
push
jo
pop
lods
and
push
mov
cmpsb
xchg
test
push
std
pop
cmp
test
into
out
fdivl
mov
adc
xchg
cwtl
fnstsw
outsl
in
dec
jmp
in
or
mov
dec
push
lcall
fbstp
pop
and
lcall
mov
pop
ds
jmp
cmc
ret
mov
cmc
push
incl
aam
mov
dec
dec
cmp
jecxz
loopne
xor
shrb
mov
lret
outsl
adc
enter
lcall
in
clc
or
cmpsb
idivl
xchg
and
int3
lcall
jo
sti
in
loope
push
push
js
in
sti
out
inc
xchg
mov
dec
gs
sti
inc
and
inc
add
lret
mov
data16
mov
or
sub
xchg
cmp
pop
pop
sahf
dec
push
test
fs
call
cmpsb
shll
pop
rolb
mov
jmp
or
sub
or
cmc
lock
rcrl
sbb
push
in
or
iret
fisubs
cmp
icebp
inc
ret
or
imul
push
nop
push
xchg
fistpl
icebp
mov
js
ret
dec
frstor
pushf
fistps
lret
nop
stos
bound
push
imul
fisubrs
iret
mov
add
sub
inc
push
and
adc
jno
push
or
outsl
xorb
leave
loope
pop
scas
ja
ds
sbb
sub
xchg
sarl
loope
scas
out
fnsave
sbb
jge
mov
movsl
out
ret
and
cmc
test
mov
jns
mov
gs
push
jmp
pop
jecxz
xchg
push
cs
std
cs
lret
and
lret
push
daa
push
cmc
cld
repz
aad
call
out
add
pusha
sub
out
mov
ret
cmc
push
test
out
mov
add
aas
push
inc
stos
mov
popf
xchg
into
out
jne
clc
scas
xor
cmp
fwait
cmp
adc
outsb
inc
add
push
pop
and
inc
sub
in
dec
cli
test
sub
rol
lock
mov
push
mov
mov
not
and
jo
sahf
add
nop
pop
jmp
lods
mov
mov
popf
loope
sbb
loope
cmp
sub
sti
push
cmp
push
in
jp
mov
or
out
cmpsb
sbb
and
subl
fldpi
lcall
movb
addl
in
ret
inc
dec
adc
push
cmp
mov
cmp
ret
scas
or
xor
jmp
adc
insl
inc
scas
std
push
sbb
ror
arpl
and
add
jnp
je
cli
push
dec
out
mov
xlat
pop
mov
xchg
mov
pop
mov
and
pop
lea
lock
lcall
push
mov
mov
push
es
in
je
cmp
dec
rcrl
xchg
fmull
mov
in
inc
mov
add
pop
mov
mov
pop
stc
lcall
sub
in
mov
stos
push
fstpl
cmp
push
pop
imul
xchg
sbb
das
pop
idivl
shl
fwait
jecxz
int
loope
jae
js
imul
fdiv
sarb
xchg
fdivl
mov
mov
add
cmp
ljmp
adc
pop
inc
enter
xor
cmp
mov
es
push
xchg
inc
shrb
addr16
pushf
in
fwait
imulb
lret
add
pop
cmp
push
cmp
mov
or
outsb
jl,pt
adc
lret
xchg
pop
push
icebp
add
jbe
push
ss
repz
imul
pop
cmp
nop
lea
xchg
mov
insb
orb
cmp
sub
push
jg
aaa
or
incb
fcoml
subl
fwait
nop
shrb
adc
aam
out
xchg
cmp
cwtl
pop
dec
testb
adc
inc
dec
fxtract
jge
imul
sub
cs
sbbb
push
pushf
mov
add
mov
xor
in
mov
dec
lea
lods
lods
cmp
inc
loopne
add
xchg
xor
test
cmc
movsb
fcmovne
test
mov
sbb
jmp
inc
cmc
mov
add
ss
dec
fnstcw
cmp
jb
cmp
enter
lahf
testl
stos
cmp
adc
cli
in
dec
jecxz
xor
ret
call
mov
imul
xchg
bound
icebp
popf
and
les
pushf
jae
rcr
inc
inc
jle
jne
jmp
jmp
mov
out
adc
pop
std
cmpsb
sub
sub
sbb
imul
dec
mov
mov
jo
add
fdivl
or
outsl
or
mov
dec
dec
dec
cmp
lret
pop
iret
xchg
paddusw
xchg
xchg
pop
cmp
adc
jle
popf
push
fcom
lods
mov
popf
mov
pop
jg
adc
fucom
xchg
faddp
sub
shrb
inc
sub
int3
gs
inc
and
enter
icebp
es
jae
pop
inc
js
cmp
dec
push
sbb
lcall
and
add
es
shr
sbb
jo
dec
sbbb
imul
or
push
cmpsb
xchg
and
imul
xchg
mov
add
adc
lret
pop
insb
pop
sub
fildl
sbb
dec
xchg
aam
aaa
or
cld
adc
fldl
mov
push
mov
shrb
sbb
lds
adc
mov
scas
lret
mov
test
imull
jg
xchg
pop
andb
out
insb
jb
sahf
lcall
ja
push
movsl
push
ds
test
aam
sbb
or
out
mov
jle
test
sahf
ja
xlat
test
and
inc
ljmp
jmp
mov
dec
hlt
xchg
cmp
outsb
loope
sub
fcompl
cmp
or
mov
into
subl
jle
cwtl
test
xchg
repnz
mov
popl
ficomps
mov
add
mov
ljmp
roll
jb
imul
int3
je
pop
adc
mov
ret
adc
and
clc
insb
dec
mov
call
test
call
daa
adc
sub
xor
inc
addr16
shlb
mov
dec
loop
xchg
sbbb
add
cwtl
repnz
daa
in
jl
stc
sub
and
jne
jl
mov
jg
data16
adc
add
jle
daa
mov
mov
mov
dec
fwait
cmp
mov
or
jae
dec
add
or
ja
push
or
add
aas
inc
sbb
lock
xchg
pop
add
icebp
aas
out
dec
xchg
pop
insb
out
loop
aam
push
popa
xchg
mov
mov
jno
fwait
loope
mov
and
mov
stc
pushf
cltd
mov
hlt
mov
ljmp
aad
rolb
inc
inc
in
jp
and
sti
xor
xor
jns
xchg
orl
js
leave
pop
xor
xchg
mov
sbb
jmp
pop
xchg
test
jae
jg
or
fisttps
sbb
add
mov
fs
pop
fisubrs
adc
jbe
negb
int3
rcrb
jb
jp
in
stos
cld
loopne
jno
mov
jns
dec
mov
cmc
dec
sub
rcl
lcall
xor
pop
jp
arpl
pop
shl
nop
jmp
xor
mov
jmp
rcrb
adc
movb
and
out
or
cmp
leave
mov
jle
jb
pop
jecxz
mov
add
mov
out
shlb
adc
and
jae
rclb
mov
and
push
sub
out
or
insb
fidivrs
mov
jge
sar
les
mov
jle
cmp
movsl
icebp
fwait
hlt
into
popa
scas
test
pop
test
mov
sti
enter
cmp
inc
shll
mov
cli
dec
and
lcall
xor
cmp
push
fildll
loope
test
adc
xor
xor
push
add
aaa
jl
sbb
xor
out
xchg
mov
cmp
shrl
dec
xchg
push
cld
inc
mov
jbe
fsubl
pop
mov
fwait
mov
push
inc
loope
sub
add
jno
dec
add
xlat
pop
mov
ret
mov
adc
mov
sarl
sub
fisttpl
jl
fiaddl
sahf
inc
pusha
pop
fstpl
sbbb
fdiv
test
leave
xchg
add
jge
cmpsb
icebp
test
add
lcall
lock
lods
xlat
sbb
clc
add
vpsrlw
mov
push
sub
push
pop
xor
pop
mov
xchg
sti
or
in
int
xchg
add
mov
dec
or
or
jns
scas
mov
fnsave
and
fsubrp
pop
add
das
popa
mov
hlt
imul
lret
jb
bound
dec
jecxz
push
leave
insb
sub
pushf
mov
or
shll
rorl
and
fcomps
jmp
mov
push
leave
pop
pop
add
in
in
inc
xlat
sarb
and
dec
mov
jns
arpl
enter
das
pop
push
or
addl
shll
jle
rcl
jl
mov
gs
adc
cmp
popaw
je
ljmp
cltd
test
mov
cmpsb
mov
dec
inc
mov
shll
sbb
push
push
mov
daa
cwtl
fstpt
adc
cld
inc
jae
xchg
xor
fistps
cmp
push
outsl
shlb
sbb
pop
jne
cmp
test
hlt
out
xchg
cmpsb
cmc
add
sub
lahf
loop
jg
mov
push
nop
popf
mov
add
xlat
and
and
movsl
fsts
mov
in
fimuls
lcall
mov
imul
dec
stos
jl
pop
sub
xchg
call
notb
es
pushf
out
jle
gs
adc
sub
pusha
push
sbb
or
mov
test
jecxz
adc
push
dec
sub
popl
inc
lcall
sub
push
lods
inc
push
leave
loop
idivl
push
fprem1
add
testl
and
iret
push
mov
lods
js
dec
adc
in
push
jne
mov
jnp
push
mov
adc
xchg
jb
dec
movsb
cmc
dec
pop
adc
psrld
jecxz
adc
xor
imul
inc
pusha
inc
data16
and
in
outsb
mov
jno
shlb
or
stos
nop
sub
mov
mov
ja
pop
pop
cmp
sbb
and
xor
push
ja
add
jg
imul
and
fisubl
inc
xor
stos
cwtl
shlb
test
adc
adc
popa
ljmp
pop
out
lea
mov
in
push
mov
bound
push
and
loopne
sbb
dec
lret
adc
jp
or
loop
ds
in
cmp
daa
xor
add
cld
cmp
js
data16
aas
loop
xchg
mov
stc
mov
push
jle
mov
stc
nop
mov
fldcw
fwait
and
sub
push
call
xor
push
aas
mov
mov
cmp
mov
lret
lret
fnstsw
xchg
icebp
addr16
lcall
sub
xor
and
pop
xor
rorl
rclb
ljmp
inc
push
sbb
mov
dec
pushf
sub
adc
fs
cli
push
xor
push
clc
xchg
push
dec
mov
jge
inc
scas
mov
pusha
jp
or
xor
repnz
cmp
mov
xchg
in
add
push
repz
push
popa
jl
arpl
xchg
rcr
cmpsb
mov
ds
xchg
sub
movsl
in
into
cld
sub
sub
mov
loope
cmp
add
test
dec
mov
adc
test
inc
test
popa
push
or
fmul
aaa
flds
jno
lods
sbb
cmpsb
sbb
xchg
jns
xor
les
enter
jmp
lahf
add
out
jmp
and
or
inc
mov
add
lret
andl
adc
xchg
sub
fcmovb
popf
xchg
adc
sbbl
mov
sub
test
mov
dec
pop
popf
mov
sbb
and
movsb
aad
lds
idivl
jp
jbe
mov
sub
rorb
test
mov
jae
or
mov
inc
push
sbb
cli
insl
or
popa
push
adc
or
ljmp
int
and
mov
adc
sub
or
out
or
jg
out
test
lahf
neg
push
lea
sahf
testl
cmp
mov
out
add
sarl
call
mov
imull
cmp
fisubrl
cmp
out
inc
add
mov
int3
loopne
repnz
cmpsl
aas
fists
jge
aad
pop
outsl
push
dec
inc
add
jnp
adc
in
repz
sbb
pop
outsb
sahf
adc
insb
sarl
iret
sub
adc
pop
and
jo
jl
cli
cwtl
mov
xchg
in
jo
das
cmp
xchg
push
movsb
mov
or
sbb
stos
jecxz
mov
andb
fistps
cltd
add
mov
sahf
test
or
jge
dec
mov
adc
mov
mov
cli
sbb
cwtl
mov
stos
xor
repz
daa
jnp
out
int
mov
push
pop
adc
jbe
xchg
add
fcompl
cmpb
jbe
fidivl
dec
test
cmp
repz
je
or
jmp
sub
push
xor
out
inc
mov
popf
or
hlt
inc
xchg
sub
dec
cmc
test
jno
icebp
pop
push
dec
loopne
jb
lret
loopne
push
fcoms
iret
jns
cmp
cwtl
add
cwtl
dec
stos
in
ss
fwait
movsb
sarl
mov
js
testl
adc
pop
pop
lea
daa
pop
add
data16
mov
pop
adc
iret
scas
jmp
push
mov
lcall
imul
mov
push
jecxz
lods
inc
jg
mov
jno
aam
rclb
dec
in
clc
fnstenv
pop
xchg
mov
jns
aad
xor
mov
adc
mov
add
ret
aam
ljmp
push
cmp
xchg
lahf
lahf
adc
ljmp
sub
pop
mov
sahf
pop
mov
xchg
sub
mov
or
inc
mov
push
lcall
push
mov
bound
push
jmp
fldenv
push
dec
push
mov
int
insl
jmp
fxsave
shrl
repz
mov
and
sbb
lcall
adc
addr16
movsb
sbb
es
cmpsb
test
ss
cld
push
int
or
xor
pop
pop
pop
jmp
loop
pop
test
pop
push
loop
fdivp
xchg
movsl
and
pop
frstor
cmpl
outsl
push
nop
mov
lea
pop
daa
jb
mov
inc
fistpl
dec
mov
mov
mov
hlt
addr16
push
js
packssdw
and
ret
mov
ret
bound
jmp
cmp
or
sub
ficompl
or
xor
lcall
dec
inc
add
aad
push
mov
incb
mov
bound
int3
jo
pop
jmp
jne
sub
das
mov
mov
xchg
xchg
sarb
clc
push
lret
stc
xor
loop
push
add
loope
xchg
fs
bound
mov
xchg
pop
pop
popf
cmp
ret
cmc
or
popf
js
mov
or
imul
mov
sarb
mov
xor
jg
sahf
repnz
ss
xchg
mov
lods
mov
cmp
rcrb
lret
sub
scas
xchg
fdivrs
incb
pop
xor
or
mov
stc
fadds
push
xchg
subb
addl
jecxz
xchg
push
sub
popf
pop
push
jae
push
rolb
sub
pusha
ret
dec
rolb
shl
adcb
rol
add
incb
xor
pop
lret
pop
dec
inc
inc
push
sub
ja
flds
mov
imul
mov
subb
fidivs
stc
and
pop
data16
shrl
daa
mov
mov
subb
nop
test
add
xor
sbbb
cmpsb
cld
outsl
adc
mov
movsl
mov
aam
mov
ret
pop
cli
xchg
pop
sub
and
inc
cmp
jno
aas
aam
inc
shll
cmp
pop
and
dec
add
scas
or
out
pop
ficompl
scas
inc
imul
xor
jno
or
aam
push
repnz
or
outsb
add
mov
fabs
fildll
sbb
sbb
icebp
dec
xchg
insl
bnd
arpl
hlt
mov
adc
rorl
xchg
pop
xchg
hlt
xor
inc
pop
sahf
ja
mov
xorb
and
and
cmp
lds
addr16
push
jle
cwtl
shr
jno
lcall
cmp
push
mov
ljmp
fisubrl
dec
mov
push
mov
shl
sub
cld
sub
popa
outsl
stc
std
mov
cmp
mov
push
xor
ret
sbb
push
test
in
arpl
add
dec
mov
cmpsb
jecxz
jge
mov
dec
in
outsb
cwtl
mov
pop
rorb
imul
rcl
pushf
mov
add
jnp
mov
into
int
add
push
out
mov
ret
mov
xlat
sub
jo
imul
inc
int
inc
lea
sti
stos
leave
xor
into
lea
fisubl
push
data16
pop
xchg
mov
adc
inc
jb
int
cmp
jne
repz
fldcw
dec
test
jecxz
popa
cmp
pop
add
stos
sub
or
push
loope
push
or
test
cmp
testl
daa
push
sub
xor
fcmovbe
insb
or
jp
push
mov
and
sbb
inc
lcall
test
out
jb
stc
mov
mov
ret
imul
lret
sub
inc
jbe
and
sbb
test
cltd
lods
inc
cmp
jne
out
and
mov
in
push
jbe
dec
push
mov
test
jno
adc
xorl
adc
popa
xor
add
enter
mov
jo
stos
out
mov
lahf
or
bound
xchg
int3
lret
jp
xchg
mov
inc
or
je
adcb
lds
daa
mov
add
jg
cmp
xchg
jmp
cmp
cmp
sub
xor
cmp
push
out
out
aam
loope
pop
jb
movsl
shll
les
stc
out
insl
in
enter
insl
lock
aaa
in
mov
aaa
xchg
int
xlat
imul
dec
test
sbbl
out
xchg
enter
cmp
ret
adc
sbb
js
gs
push
adc
cli
and
mov
mov
or
arpl
dec
loop
xchg
into
mov
add
imul
and
sbbl
xlat
popf
push
rol
push
pusha
ds
push
xchg
jg
out
cmc
faddp
jmp
pop
test
std
in
dec
sti
cmp
clc
outsl
xchg
inc
test
pop
stc
test
xchg
lods
or
xchg
sub
das
clc
out
aam
inc
pusha
ss
in
xor
aad
jb
nop
jo
xchg
dec
sbb
ret
nop
enter
int3
pop
cmc
std
clc
popa
and
in
clc
cmpsl
pop
or
mov
leave
lss
mov
push
sub
in
add
or
and
or
ret
ss
push
mov
pop
mov
and
bound
pop
test
fchs
add
adc
cs
lret
xlat
mov
pop
pop
ficomps
push
mov
mov
pop
dec
cmp
lahf
cltd
sub
xor
xor
mov
fwait
xchg
in
cwtl
scas
cli
jne
aaa
je
sahf
addr16
rorb
call
fscale
cltd
lea
sti
inc
and
sbb
cwtl
testb
lea
mov
adc
out
mov
sub
out
cmp
in
push
or
icebp
xlat
popw
cmp
push
fs
jno
adc
push
lret
addr16
adc
cwtl
repz
imul
xchg
sub
movl
xchg
jno
cmpb
sbb
mov
dec
add
icebp
inc
std
fisubrs
dec
pop
cmp
imul
sbb
jae
ret
sbbl
gs
mov
loopne
popa
gs
mov
pop
sub
mov
add
mov
out
je
xchg
inc
push
test
lods
mov
mov
out
jbe
pop
add
inc
and
xchg
outsl
ret
mov
xchg
inc
stc
pushf
stos
push
sar
cmp
lods
fisttps
mov
mov
sub
or
mov
dec
loopne
jbe
jae
stos
jbe
sub
adc
xchg
and
popa
add
or
test
xorb
cmpsb
dec
ss
adc
push
loopne
pop
clc
sbb
and
add
add
sahf
xchg
loope
imul
push
jbe
mov
loopne
mov
idivb
lahf
cli
das
adc
fildl
lock
insb
add
aam
mov
lea
aas
repz
inc
fldcw
ret
int3
ret
push
fs
mov
jnp
das
pushl
frstor
inc
pusha
mov
icebp
add
add
cmp
hlt
dec
inc
clc
lods
sbb
sbb
popf
jae
mov
sub
pop
fdivr
sbbl
enter
pushf
jg
sbb
loope
pop
or
scas
insb
push
mov
les
xchg
mov
cmc
jge
insl
mov
frstor
rcrl
shlb
lea
add
jle
outsb
es
aaa
es
mov
xor
inc
adc
adcl
jmp
data16
fistpl
test
shll
icebp
hlt
sub
fs
into
cltd
inc
jl
fs
jge
xlat
pop
clc
xchg
lods
cmpsb
push
mov
sbb
jge
in
sub
push
cmp
push
mov
mov
das
icebp
sub
cld
pop
ficomps
fimull
sub
sub
je
dec
jecxz
stc
add
or
out
outsb
sub
shll
add
and
push
xchg
jp
dec
sub
or
mov
or
sbb
cmovle
mov
lods
push
stos
sahf
iret
add
loope,pt
not
push
mov
jle
and
xor
sti
std
fbstp
xor
cmpb
jle
int3
in
add
push
sub
mov
xchg
call
jl
ljmp
das
mov
scas
sti
lahf
insl
test
xor
pop
in
sub
push
mov
pop
xchg
inc
lods
into
adc
cwtl
popa
mov
mov
cmp
pop
mov
dec
pop
mov
sub
mov
ss
jmp
shl
jo
jp
fsubl
inc
arpl
lcall
push
sbb
movsb
shrb
push
scas
jnp
call
jp
dec
xchg
pop
nop
shrb
call
in
jmp
aaa
in
out
add
cwtl
cmc
jge
test
mov
sahf
xchg
mov
pushf
scas
mov
xchg
mov
out
aad
ja
and
pushf
jb
mov
inc
push
loope
or
add
lcall
xchg
push
aas
inc
pushf
xor
fstpl
ror
fbld
pushf
les
sbb
movntq
pop
sub
popa
add
repnz
jp
ljmp
adc
addb
xchg
adc
cmp
adc
and
cmpsb
int
repnz
popf
scas
inc
or
xchg
adc
cli
mov
js
out
imul
lock
shlb
int3
test
pushf
pop
in
scas
sbbb
or
jb
adc
sti
test
xchg
jbe
dec
adc
inc
sbb
fs
movsb
jle
int
outsb
fwait
iret
mov
sub
inc
ror
and
cmpl
sub
jae
cmc
mov
jns
lcall
data16
cmc
icebp
js
xchg
sbb
enter
shlb
flds
dec
hlt
mov
mov
or
jl
ficoms
xor
jmp
dec
mov
call
xchg
adc
cli
push
out
jb
in
outsl
ret
das
cmp
xorl
push
jbe
mov
test
jne
std
arpl
xchg
gs
dec
aas
push
push
insl
sub
or
dec
fiaddl
cltd
adc
add
xchg
fyl2x
mov
mov
stos
lahf
push
into
sbbl
sbb
xor
pusha
fistpl
or
pop
popa
pop
pop
add
scas
adcb
sub
lcall
push
pop
jl
pop
sub
mov
push
or
lods
sti
rcrl
adc
stos
cmp
cld
push
push
or
inc
sti
sub
or
nop
cltd
pop
adc
cmpl
cmp
inc
adc
test
jno
or
dec
mov
push
cmc
ja
sbb
addr16
repnz
sbb
ja
push
fcomp
pop
loope
jo
adc
or
jmp
clc
mov
sbb
cmpb
mov
cmc
mov
mov
push
mov
xchg
addr16
cmc
aad
mov
es
xchg
popa
jp
aas
std
repnz
or
and
sbb
dec
jno
sbb
mov
fisubs
es
das
iret
in
popa
or
mov
int
insb
jle
movsl
dec
xor
inc
scas
fidivrs
jp
pop
mov
incl
jge
test
mov
movsl
pop
adc
mov
jns
xchg
lcall
inc
push
sbb
lret
in
ljmp
push
and
dec
daa
setbe
call
aas
in
jecxz
shr
mov
repnz
into
mov
test
push
sub
jno
mov
imul
andb
cmc
mov
ss
andl
mov
mov
in
push
shlb
pop
mov
adc
cmp
push
push
outsl
push
adc
sbb
stos
cmp
and
sbb
xor
cs
out
in
inc
jno
cmp
push
mov
das
push
inc
mov
icebp
test
daa
push
jbe
daa
add
insb
push
lods
popa
cmp
and
mov
cwtl
cs
pop
aaa
mov
test
nop
push
jl
pop
mov
pusha
xlat
ret
xor
in
adc
dec
js
xchg
inc
sub
rcrl
inc
lods
push
mov
insb
mov
jmp
sub
into
jb
sbb
lds
inc
mov
rorl
add
add
mov
repnz
dec
int
inc
insb
mov
xchg
jo
rcr
sbb
pop
xor
ret
cltd
push
dec
mov
les
leave
fs
cltd
push
mov
inc
ret
pop
daa
dec
gs
cmp
push
cli
mov
cld
cld
stos
sbb
inc
stc
push
lahf
xchg
imul
adc
scas
mov
fidivs
jne
cli
fbstp
pop
dec
xlat
pop
push
jp
mov
or
mov
adc
push
and
xor
push
rorl
and
mov
mov
fsqrt
push
xor
clc
cmpsl
or
leave
pusha
gs
jb
test
daa
pop
clc
dec
dec
mov
push
sahf
hlt
cmp
dec
clc
mov
fiadds
xchg
out
adc
clc
add
sub
je
or
or
inc
out
adcl
mov
ds
iret
mov
dec
test
in
add
ret
xchg
mov
das
cmp
dec
dec
subb
out
pop
call
scas
stc
sbb
jns
cmc
cmp
cmpsl
fisubl
ja
push
mov
sar
xchg
sbb
sahf
pop
sbb
cmp
dec
mov
popa
lods
lret
mov
jl
jo
out
adc
nop
pop
arpl
add
cltd
mov
sub
push
and
jns
sarb
sbb
mov
or
xor
lret
sbb
adc
mov
mov
xor
jb
mov
lods
fiadds
mov
xor
add
jbe
or
xchg
mov
pop
mov
outsb
add
mov
fldenv
mov
or
add
xchg
pushf
add
push
jmp
es
mov
es
and
sub
test
push
mov
sbb
fsubs
je
rcrl
push
or
int
outsb
ds
sbb
and
shrl
cli
xor
popl
pop
sbbl
cltd
das
lock
loope
pop
icebp
loope
aad
mov
jo
daa
lock
adc
pop
ljmp
movsl
lahf
mov
xlat
sub
mov
lret
pusha
cmp
sub
sbb
pop
movsl
hlt
xorb
loope
call
movsb
stc
xchg
cwtl
div
adc
out
sbb
loop
mov
jmp
cmp
mov
jg
mov
lods
xchg
cmp
push
loop
cltd
pop
lods
push
popa
out
mov
add
cmp
pusha
testb
push
stc
inc
mov
and
xchg
loop
xchg
xchg
daa
repz
xor
testb
mov
cmp
in
cs
mov
inc
pusha
push
sti
loopne
inc
push
aad
gs
pop
test
mov
mov
push
fmul
jge
pusha
not
rcrl
das
add
test
push
call
mov
jae
add
ret
xor
jns
fstpt
dec
adc
out
fists
mov
mov
bound
fmul
mov
cli
xchg
add
sbb
cmc
into
scas
das
or
lret
cld
pop
fcompl
or
mov
sub
insl
mov
mov
aam
popa
mov
jge
je
mov
or
adc
sub
push
insb
or
push
xor
and
test
aas
aaa
iret
mov
pop
repnz
push
lock
xor
sbb
es
inc
jnp
xchg
int
sbb
cmp
add
mov
out
out
jae
xor
xchg
test
pop
andl
test
lret
js
sbb
inc
punpckhbw
xchg
push
xor
mov
pop
add
mov
adc
mov
cmp
test
shrb
pushf
jl
hlt
enter
mov
ja
daa
sub
test
add
sarl
xlat
outsl
pop
fistl
sti
inc
rcrb
xchg
test
fs
out
xor
xchg
rcrl
cmp
mov
js
stos
test
inc
test
mov
jle
out
push
or
push
adcb
pop
sarb
jge
lret
aas
inc
add
arpl
icebp
test
mov
imul
xor
andb
adc
inc
cmpsl
mov
cmp
lea
incb
xor
jecxz
stos
dec
loope
mov
sbb
js
out
movsl
dec
add
jmp
cmpl
fstl
ret
int
fadd
dec
or
aad
inc
add
or
mov
or
xor
add
es
xor
popf
and
js
inc
stos
inc
daa
leave
js
inc
sbb
cltd
adc
add
xchg
add
movsb
dec
push
cld
pop
jns
adc
push
pop
mov
push
pop
fldl2t
mov
movl
xlat
mov
mov
push
sub
ret
dec
mov
fimuls
jecxz
int3
in
mov
and
aad
hlt
adc
sbb
pop
jg
fdivrs
jae
push
mov
sahf
cwtl
mov
in
setle
cmpxchg
movsb
mov
push
xor
add
in
test
adc
inc
sbb
mov
sub
xchg
mov
std
mov
mov
ss
mov
cld
or
xchg
aam
sub
int3
push
pushf
mov
xchg
addr16
jmp
mov
out
test
in
push
push
dec
out
bound
std
jns
sar
jo
jb
enter
outsb
sub
pop
push
mov
add
mov
pop
jmp
int
repz
gs
dec
in
or
cmp
xchg
mov
push
sbb
into
jl
imul
hlt
pop
pop
mov
push
jno
pop
dec
pop
xor
pop
out
xchg
push
loop
push
mov
and
sub
push
mov
cli
clc
inc
stc
mov
mov
xor
sbb
add
xchg
inc
pusha
fisubs
stos
mov
cld
push
test
xchg
inc
pusha
loop
fninit
scas
lods
test
sbb
icebp
or
call
adc
sbb
sbb
or
sbb
mov
sbb
xchg
sbb
ds
in
lds
repnz
insb
inc
jecxz
movsl
cmp
test
bound
add
enter
xchg
pop
jae
enter
dec
loop
pushf
popa
jbe
fidivrs
adc
and
inc
xchg
test
out
ljmp
xor
xor
xlat
sbb
fcmove
xor
pop
adc
shrb
fsubs
or
in
call
outsb
aad
and
mov
aad
sbbb
jg
cwtl
scas
aad
fidivrs
loopne
xchg
mov
int3
mov
or
sub
je
aam
in
cltd
pop
clc
bound
push
jo
xor
ret
pusha
pop
jmp
leave
jg
aam
mov
mov
mov
pop
jnp
mov
mov
loope
jb
scas
xchg
sbbl
fs
bound
cwtl
cmp
lcall
mov
insl
xor
es
stc
xchg
bound
add
or
cli
out
stc
sub
mov
jmp
or
cmc
fsts
cld
mov
lock
cmp
fisttpll
int3
adc
and
sub
stos
out
and
xchg
sbb
cli
sub
cmp
sbb
mov
test
and
mov
shl
push
push
or
sub
dec
gs
or
add
mov
add
sti
push
fstp
jno
dec
jns
lret
or
fisttpll
rorl
xor
daa
lods
dec
xchg
fidivrs
outsb
lret
fdivs
cmc
sbb
lahf
mov
add
push
lahf
fisubrs
dec
loopne
cmp
lock
pop
pushf
xor
xor
pop
scas
adcl
xchg
pop
push
xchg
adc
fs
test
push
test
mov
jb
aam
jg
nop
es
sub
into
fmull
cmp
push
adc
mov
lock
push
outsl
sbb
test
cwtl
jae
outsb
movsl
mov
je
ret
xchg
jg
and
aam
mov
in
out
stos
movsb
cmp
ljmp
inc
jo
call
mov
mov
add
std
mov
leave
jb
mov
xlat
popa
xacquire
arpl
movsb
mov
mov
std
mov
das
pop
mov
scas
sbb
pop
cmp
stos
cmp
lock
dec
dec
mov
jns
std
xchg
lcall
mov
xchg
xor
mov
pushf
inc
dec
fldenv
push
mov
gs
roll
push
int
sbb
fildll
pop
das
push
and
clc
int
out
lods
imul
cmp
adc
int3
sbb
adc
loope
sbb
flds
push
push
xchg
mov
out
sarl
dec
dec
mov
sbb
cmp
pop
and
cmpsb
movsl
and
insl
cmp
loopne
and
mov
and
aaa
or
jecxz
hlt
adc
mov
andl
in
movsl
pop
in
call
icebp
xchg
sub
or
scas
aam
push
ficoms
mov
dec
loopne
insb
or
inc
jns
lods
push
lcall
adc
xchg
popf
cs
in
imul
cmp
sbb
movsl
pop
cmp
add
loopne
push
incb
and
jl
les
es
mov
scas
fnsave
xchg
test
mov
je
pop
cmpsb
out
insl
les
movsb
xchg
or
jnp
movsb
push
fwait
aad
inc
cmp
xor
xchg
ficomps
mov
insb
mov
sbb
jge
fisttpll
cmp
les
cmpsb
popf
sub
mov
notb
or
jecxz
lds
call
mov
add
and
stos
mov
xchg
fsubl
inc
mov
mov
mov
outsb
in
mov
jmp
xor
jo
sub
dec
mov
mov
and
aaa
ja
sbb
fists
mov
sbb
mov
pop
nop
fsubrl
jae
cltd
movsb
inc
jne
cmp
and
cmc
jg
mov
test
push
jo
leave
test
inc
insb
leave
cs
notb
fdivs
cli
inc
push
sbb
mov
adc
xchg
add
xorl
hlt
mov
cmc
sub
repz
push
scas
lret
cmp
sti
adc
sub
leave
dec
add
rcrb
dec
test
adc
movsb
adc
aas
orb
mov
add
je
std
cmp
and
lods
mov
push
movsl
adc
xlat
mov
testl
sub
fcomps
aam
push
mov
in
fcompl
jle
mov
cmp
mov
out
adc
pop
mov
in
pop
jnp
mov
jne
scas
cmpsb
in
jae
lret
cld
mov
test
stc
lret
mov
outsl
fcoml
subb
jns
loopne
pushl
mov
addr16
mov
cmp
dec
icebp
xchg
out
insl
adc
stc
mov
outsl
loopne
mov
iret
loope
xchg
xchg
add
mov
std
pop
aaa
cmp
mov
cmpsb
call
dec
test
mov
mov
and
int
inc
not
stc
add
mov
jecxz
stc
dec
icebp
mov
push
shl
js
mov
idivb
shlb
je
pop
cmpsb
and
and
sbb
aas
mov
in
scas
aas
pop
mov
jecxz
pop
outsb
test
add
adc
shll
fisubl
loopne
sub
xchg
sbb
and
shr
out
pop
pushf
test
push
lods
inc
sahf
fldcw
xlat
lock
jns
cmc
fisubl
xlat
lahf
add
in
mov
and
loope
arpl
shll
mov
out
jge
sbb
iret
cmpsb
addr16
pop
or
insb
inc
shl
test
sbb
cmp
push
clc
dec
repnz
out
sbb
add
popf
bound
outsb
xchg
jae
lahf
adc
scas
fwait
xor
adc
out
cmp
xchg
cli
mov
test
pusha
adcb
lret
sbb
popl
scas
js
xchg
out
inc
bound
lcall
and
popa
sub
inc
iret
jp
loop
adc
adc
int
sub
xchg
jns
pop
enter
dec
ror
int3
or
gs
mov
loopne
mov
in
sbb
ret
xchg
mov
mov
gs
and
rcrl
xchg
bnd
add
push
xchg
shll
jg
push
cltd
xor
jp
into
push
lods
lea
xor
test
push
in
xor
lock
ja
cltd
mov
push
cld
stos
je
sub
stos
pop
lods
push
and
sbb
mov
xchg
insb
addb
mov
lcall
and
dec
enter
jno
seto
and
sbb
mov
cmp
fwait
dec
sub
fst
lea
add
jg
inc
pop
pushf
dec
icebp
mov
ret
jl
push
push
xchg
call
mov
mov
std
into
inc
in
lret
or
lret
sbb
addr16
push
lret
and
mov
loope
imul
push
mov
dec
pop
jbe
cltd
data16
stc
sub
or
inc
push
dec
mov
xor
hlt
inc
push
add
push
movsb
repz
add
xchg
mov
jbe
enter
adc
ss
jae
fcompl
in
cmpsl
leave
add
inc
out
jge
xchg
hlt
pushf
xchg
pusha
add
cmp
cli
mov
inc
fisubrl
imul
cwtl
test
sarb
lods
push
and
cmp
adc
cmpsb
add
mov
nopl
fsubp
mov
add
jae
push
pushf
mov
js
cmp
push
test
test
mov
push
jp
lret
cli
xchg
sbb
push
stos
push
jmp
insb
das
inc
pop
popa
dec
mov
dec
mov
mov
jns
or
add
gs
xlat
and
leave
cmpsl
mov
inc
push
jg
dec
movsb
and
fldcw
outsb
sub
data16
dec
loope
or
add
rclb
mov
ja
das
ja
rolb
pop
data16
pop
bound
jg
out
xchg
mov
cli
jns
xor
add
lcall
mov
xchg
push
daa
push
sarb
xorl
pop
std
aas
es
in
push
mov
sbbl
mov
lock
mov
stos
pop
dec
ljmp
xchg
addr16
in
adc
or
outsl
in
std
imul
mov
outsl
xchg
inc
jmp
cmp
aad
in
pop
pop
push
fcomip
xchg
push
stos
adc
mov
xchg
sbb
xor
orl
jmp
sub
push
popl
popa
push
mov
stc
mov
xchg
loopne
adc
pop
add
or
jo
dec
push
ret
shll
and
sub
popa
or
lahf
aad
adc
test
divb
aaa
push
stos
mov
daa
int
test
hlt
or
sbb
bound
pop
push
mulb
sahf
xchg
cld
jg
rcl
insl
add
call
fiaddl
fisubs
xchg
xor
test
outsl
cmp
mov
mov
lds
lret
fistpll
mov
testb
pop
cmpsb
lds
loopne
stos
je
sub
mov
daa
sahf
aad
fwait
mov
or
repz
or
or
sub
sub
xlat
mov
js
sub
fs
scas
mov
fisubl
sti
je
mov
mov
xchg
mov
subl
dec
jnp
cli
sbb
sbb
cmp
adc
pop
out
fistpll
adc
xor
inc
nop
cwtl
mov
jp
or
repz
or
sbb
out
clc
daa
mov
mov
out
in
cmpsl
xchg
dec
inc
push
dec
pop
xchg
push
mov
loop
adc
pop
stos
sub
pop
pop
mov
insb
test
lret
sbb
bswap
cmp
cmpsb
jnp
outsb
rcrl
mulb
push
insl
lods
daa
scas
jne
lods
sti
mov
repnz
daa
jno
lahf
jnp
jbe
ja
jno
sub
ss
aad
mov
in
fs
pop
out
nop
xchg
jl
shlb
inc
cmpsl
paddusw
mov
std
cmp
movsl
mov
aad
sub
mov
jo
sub
dec
push
jo
or
sbb
or
in
repnz
nop
stos
mov
xchg
xor
in
ret
or
mov
imul
call
jae
aad
cmc
es
sub
mov
out
test
inc
ljmp
inc
mov
add
cmp
rcrl
xchg
xchg
movsb
fidivrl
mov
sbb
or
call
mov
stos
loop,pn
fimuls
and
cmp
fwait
es
or
insl
add
test
pop
mov
pop
mov
and
or
mov
push
adc
mov
sbb
pop
aaa
sub
add
insb
sub
cmc
mov
fcompl
popf
scas
and
jb
adcl
push
mov
das
xor
mov
cmp
std
cltd
imul
ret
mov
mov
addr16
mov
jnp
arpl
sbb
push
jp
pop
imul
and
jnp
es
clc
imul
popf
adc
mov
inc
scas
cmp
dec
lock
imul
lock
rcrb
ss
addr16
leave
dec
cmp
sub
xor
xchg
xchg
lock
xor
mov
shrb
data16
xor
addb
dec
stos
in
lods
dec
fmulp
notb
lods
and
insb
inc
aas
jae
mov
dec
jecxz
fiadds
mov
into
push
sahf
fnstcw
sbb
mov
or
mov
cmp
out
sbb
mov
imul
leave
push
sarb
add
xchg
out
rcrb
loop
scas
push
jge
cmp
sti
ss
pop
jmp
and
mov
cmpsb
xchg
pop
fildll
pop
or
out
fstl
popf
pop
call
xchg
aam
mov
aaa
lods
cmp
xlat
push
decl
test
mov
jle
inc
xorl
push
leave
outsb
mov
pop
fxch
sbb
test
movsl
or
shl
loopne
add
dec
dec
and
inc
sarb
outsl
push
fisttpll
inc
xchg
scas
mov
out
dec
scas
xchg
lds
sti
out
mov
pop
jo
inc
xchg
cmc
xchg
sub
into
mov
add
lret
inc
or
cli
sbb
pop
imul
aas
push
in
fldenv
leave
arpl
orl
out
jo
xchg
mov
mov
ficompl
stos
mov
cmp
lret
scas
fnstcw
adc
fstpl
xchg
dec
das
sbb
and
shl
leave
push
push
into
cmc
sbb
aas
int3
test
mov
stos
mov
loop
clc
fdivs
leave
pop
add
inc
je
das
lds
sbb
sti
inc
and
inc
orl
fsts
inc
adc
movsl
mov
cwtl
fbld
popl
add
mov
cmp
push
fsubrs
adc
xor
pop
pushf
mov
insl
fdivl
bound
repnz
push
int
xchg
sub
fbstp
negl
mov
mov
and
data16
fcos
add
jle
mov
xchg
cld
fdivs
scas
mov
pop
inc
ficomps
mov
xchg
push
daa
mov
xchg
out
fsubrl
in
xor
mov
inc
add
push
push
sub
pop
rcrb
inc
mov
mov
mov
movsb
and
out
leave
inc
repnz
xchg
decb
mov
adc
xor
jp
mov
or
push
mov
mov
jecxz
push
out
inc
adc
mov
cli
pop
aaa
jbe
xchg
imul
test
sub
and
leave
mov
aaa
leave
xchg
sbb
pop
insl
stos
and
movl
shrl
push
repnz
push
shlb
add
aaa
mov
inc
jbe
pop
icebp
jns
inc
aaa
call
inc
insl
pop
ljmp
pop
lahf
enter
or
notl
mov
adc
and
sub
dec
jno
out
push
cmp
cmpsl
cmpsl
inc
arpl
mov
jge
das
notb
dec
and
fwait
loope
inc
mov
mov
dec
pop
icebp
aaa
dec
popf
js
xchg
or
push
fs
lahf
jg
push
mov
imul
outsl
sub
js
dec
rorb
and
scas
xchg
loopne
xor
adc
jne
popa
lods
mov
scas
mov
cmp
xchg
aad
xchg
nop
mov
or
jecxz
fwait
clc
jg
mov
fsincos
inc
fidivs
and
lods
daa
mov
mov
int
push
pop
mov
push
push
ret
mov
daa
jl
dec
movsb
add
fs
adc
fisubl
and
mov
iret
ret
inc
cld
pop
scas
cmpsb
aad
mov
push
or
jg
mov
pop
adc
pop
adc
out
push
lahf
outsb
movsl
adc
pop
cmp
ds
aad
inc
fildl
subb
pop
in
frstor
adc
ret
repz
xor
test
int3
mov
test
and
mov
test
int3
xor
jnp
mov
push
jmp
in
popa
ss
jo
xor
mov
sarl
dec
push
cmp
jo
aas
stos
in
lcall
and
jp
ss
cmp
test
add
pop
jg
js
lds
add
mov
push
fs
xchg
icebp
js
fucomip
repz
stos
add
in
ja
push
mov
stos
xchg
aam
fisubrs
addr16
clc
aam
out
hlt
mov
fsubrp
mov
shrl
cmp
insb
fwait
out
jge
lahf
pop
movsb
inc
stos
in
jb
out
mov
adc
jl
js
popa
sbb
sbb
ds
das
inc
mov
push
movsb
sub
adc
cwtl
xor
mov
daa
jbe
and
cltd
pop
mov
push
and
loop
mov
pop
jl
mov
inc
add
jmp
imul
fsubrs
push
loop
add
int
out
mov
pop
add
sbb
jmp
mov
or
jecxz
cmp
data16
mov
lcall
pop
out
push
dec
enter
aad
sub
xor
iret
es
imul
int3
mov
leave
sarb
dec
adc
sub
outsb
insb
adc
pop
xlat
repz
mov
mov
aad
and
xchg
lods
inc
xor
mov
cltd
mov
dec
and
inc
dec
cld
inc
out
out
scas
call
bound
lahf
and
cwtl
call
pop
aam
mov
mov
mov
sbb
mov
cmpsb
orl
jmp
aaa
push
cmpsb
iret
cltd
lock
shrb
xchg
ss
sub
adc
imul
out
and
sub
ljmp
loope
sbb
mov
jle
pop
xor
sar
outsl
sub
jge
nop
imul
xor
movsl
movsl
test
inc
outsb
push
cs
jne
iret
xor
shlb
inc
popa
inc
loopne,pn
dec
jg
cmp
repz
in
adc
dec
lret
aas
push
pushf
fdivl
cmp
push
aad
cmp
pop
xor
fmull
scas
mov
les
mov
int
pusha
push
dec
or
jge
out
test
lret
or
and
repz
sbbb
pop
fmul
dec
mov
add
int3
xchg
stos
add
mov
subb
jl
mov
mov
imul
leave
je
push
mov
push
jmp
hlt
mov
outsb
adcl
sqrtps
test
test
out
shl
adc
pop
sti
xor
ds
pop
add
aam
cs
or
pop
sub
jo
int
push
mov
sub
mov
adc
gs
mov
xchg
jne
mov
push
add
inc
mov
jle
push
sub
cmp
nop
xchg
inc
fistpll
andb
dec
stos
fiadds
nop
jmp
cmpsb
jle
pop
xchg
dec
loope
clc
push
hlt
xlat
push
sub
mov
mulb
dec
sbb
xchg
adc
xchg
pop
jae
cmp
lds
or
jo
mov
jp
pop
ss
in
inc
mov
cmp
aad
mulb
sub
test
lock
in
or
cmpps
jns
pop
imul
je
aam
test
pop
xchg
add
scas
hlt
push
sub
sahf
mov
mov
aam
cmp
pop
sbb
aad
mov
xlat
and
out
adcl
mov
sahf
mov
mov
sbb
mov
jecxz
pushfw
mov
leave
pusha
ret
mov
mov
push
sbbl
xchg
jmp
scas
pop
mov
xor
push
int3
dec
and
aaa
shl
add
xor
xor
push
in
push
lcall
sbb
adc
xor
xchg
sbb
sub
aam
imul
dec
ja
subb
and
faddl
mov
push
call
ds
dec
inc
subl
adc
mov
imul
sub
mov
cmp
loope
addb
fwait
push
mov
in
pop
or
mov
lods
cmp
call
push
mov
shl
daa
inc
and
and
pop
or
sahf
mov
or
pop
movsb
mov
scas
je
mov
pop
xor
lret
testb
add
mov
in
inc
dec
or
jns
pop
stc
add
ljmp
mov
int
pop
ret
pop
sub
push
adc
sub
jb
dec
repnz
jmp
mov
mov
mov
scas
lahf
fwait
xchg
or
cmpb
mov
mov
das
xor
xchg
movsl
xchg
adc
inc
pop
js
push
pop
mov
lea
adc
inc
push
mov
ds
int3
jmp
fs
pop
adc
shr
xchg
pop
into
ljmp
mov
mov
cmp
cmpsl
sbb
jbe
push
daa
xor
test
inc
xor
clc
jae
fmulp
aad
jle
mov
loopne
jge
repz
mull
fwait
aaa
data16
xchg
sub
shll
stc
dec
jo
aas
or
scas
push
or
cmp
jge
push
add
push
push
ret
pop
imul
ljmp
inc
cmp
jp
pop
jne
fisubs
add
addb
notl
cmp
dec
mov
lods
cmpl
jmp
andl
bound
mov
mul
outsl
adc
add
out
adc
xchg
adcb
jnp
inc
xlat
dec
movsl
jae
xlat
cs
mov
rcll
push
aad
xor
xor
shll
ds
aas
shrl
jno
es
push
push
jbe
movsb
cmp
push
shrl
sti
xchg
sbb
cwtl
add
lret
cli
lds
xchg
mov
in
in
jp
jg
clc
lds
js
sbb
lret
mov
jg
sbb
testb
das
pop
push
mov
insb
xchg
sarl
sub
js
mov
rorl
std
aad
xchg
dec
cmp
dec
sahf
andb
mov
loop
push
mov
cs
ss
aam
inc
dec
std
jo
jmp
repz
lds
cmpsb
testb
inc
cs
mov
fstpl
xchg
mov
test
outsl
cwtl
jmp
insb
xor
fildll
filds
insb
out
mov
xchg
mov
or
mov
stos
mov
xor
ret
xor
adc
in
push
xorl
mov
cmpsl
int
ljmp
sub
xchg
es
shl
dec
add
inc
dec
data16
pushf
icebp
dec
mov
mov
cmp
rcrl
lcall
or
jl
jns
xchg
pop
push
daa
adc
mov
icebp
jo
das
pop
push
popa
lods
gs
mov
jmp
insl
push
loope
sahf
lock
pushf
cli
jmp
mov
adc
mov
or
mov
xor
adc
xchg
mov
adc
outsl
jg
in
pop
int
dec
add
shlb
push
out
leave
push
out
test
pusha
sti
push
mov
adc
mov
pop
outsb
xor
mov
push
mov
xchg
je
jbe
ret
jge
mov
add
pop
mov
xchg
and
loopne
adc
xchg
outsb
xor
loop
push
pop
ss
pop
and
cs
repz
xchg
inc
push
pop
xor
jecxz
addr16
push
ljmp
dec
mov
add
loop
add
mov
frstor
sahf
xlat
daa
inc
cwtl
pop
jecxz
fidivrl
push
repnz
pop
jb
jno
bound
dec
sbb
adc
or
adc
fstps
sbbl
jecxz
shl
sahf
add
or
cmp
push
push
add
imul
push
mov
outsl
sahf
dec
add
jecxz
nop
mov
les
add
das
push
out
mov
jecxz
loope
imul
pop
lock
cli
mov
pusha
dec
xor
fistpll
xchg
or
sbb
lea
cwtl
in
nop
hlt
lock
and
cmp
jge
inc
in
sbb
popa
push
aas
rclb
jnp
pop
inc
test
negl
xor
pop
loopne
cmp
push
movsl
inc
jne
and
xchg
push
jle
cmpsb
clc
or
sbb
rclb
or
mov
jno
pushf
xchg
sbbl
popf
out
inc
add
xchg
jne
leave
fstps
fwait
loop
inc
and
and
scas
and
mov
jl
ss
sbb
inc
rcl
xor
rorl
push
stos
stos
pop
cmpsb
fistl
mov
ja
mov
lods
aaa
loopne
or
inc
psrad
dec
out
addr16
and
push
stos
outsl
lea
cli
scas
mov
push
mov
js
pop
stc
xor
mov
mov
add
enter
jb
mov
test
pop
frstor
rcpps
loopne
push
cmp
dec
or
pop
loope
adc
mov
movsl
dec
fucomp
test
mov
inc
push
outsl
ret
into
adc
imul
xor
js
clc
sahf
pop
imul
push
fisttpl
or
in
in
bound
ja
call
mov
fdiv
and
lahf
lcall
cmpsl
mov
jge
or
cld
lahf
daa
mov
push
xor
push
dec
mov
call
test
ljmp
dec
xchg
push
bnd
push
or
imul
hlt
pop
mov
pop
repz
mov
xlat
das
cmp
shll
push
sbb
jbe
fdivs
push
movsl
stc
xor
popa
cmc
mov
fstps
lods
inc
call
dec
data16
adc
sarl
sub
adcl
roll
jp
mov
inc
inc
push
test
mov
dec
je
mov
mov
add
sbb
jae
call
lods
mov
mov
fs
mov
xor
cwtl
insl
out
inc
insl
icebp
add
lock
and
jns
pop
pop
fidivl
jmp
inc
lahf
popa
pop
shll
negb
mov
pop
popf
cmp
mov
fbstp
pop
lods
cwtl
mov
xor
jb
adc
mov
pop
data16
icebp
rcr
push
xchg
push
or
jl
cmp
mov
or
fnsave
mov
lea
mov
cmpsl
lods
lods
and
decl
xchg
repnz
fadds
pop
orb
and
in
pop
repz
pxor
rolb
sbb
jnp
mov
jmp
mov
inc
leave
sub
jl
push
xor
fwait
pop
mov
mov
push
inc
mov
sub
lods
dec
insw
out
and
and
sbb
dec
test
xor
xchg
push
test
fdiv
adc
cmpsb
in
cmp
or
push
popf
notb
mov
xchg
popf
push
mov
ret
adc
jns
shl
sbbb
loope
jcxz
pushf
jae
sbb
jne
outsl
cli
fldl
inc
lea
adc
jecxz
sub
mov
add
inc
mov
fsubs
in
mov
xor
pop
addr16
insl
mov
xchg
and
sbb
pop
push
outsb
sbb
adc
shl
pusha
jnp
jp
sub
push
mov
jo
negl
repnz
xchg
sub
stc
inc
add
sbb
jle
mov
aad
lcall
sub
or
push
dec
mov
and
cli
test
xchg
cld
je
dec
push
xor
mov
mov
sub
test
pop
aad
jmp
xchg
ljmp
mov
outsb
add
mov
push
xchg
xor
ss
dec
sub
lods
xchg
or
mov
dec
cli
jnp
popa
mov
xor
addr16
jb
sub
adc
sti
and
fisubs
call
sbb
hlt
sahf
imul
dec
cmpsl
out
mov
pop
xchg
mov
inc
sub
cmp
adc
enter
xor
pop
pop
xrelease
jne
inc
pop
push
lods
push
js
and
int
inc
mov
push
popf
xor
jo
fcoms
cmp
sbb
adc
call
and
add
loope
xor
add
adc
push
loope
orl
inc
insb
enter
jbe
aam
jp
mov
les
mov
xor
test
push
icebp
popf
push
out
mov
mov
mov
es
or
xor
test
mov
inc
sbb
jg
push
pop
mov
das
xor
xchg
popf
xor
cmp
mov
loopne
jae
cltd
inc
sbb
dec
mov
and
testb
arpl
popf
mov
or
int3
cmc
cmp
push
repnz
dec
dec
mov
in
mov
mov
dec
in
mov
lret
stos
andb
into
mull
pop
outsl
rol
mov
add
es
popf
push
rcrb
dec
xor
ja
popf
mov
sahf
jbe
out
dec
xchg
and
dec
xor
movsb
fsubl
xchg
mov
int3
add
push
jno
jmp
mov
je
mov
mov
lods
imul
mov
push
jb
inc
push
dec
dec
dec
outsl
mov
lods
mov
jge
dec
adc
jbe
xchg
mov
adc
cmp
scas
adc
fcomp
and
fstl
mov
cld
push
and
fs
jl
dec
es
fnsave
xchg
add
cwtl
sub
je
cltd
std
dec
lock
jmp
xchg
dec
mov
adc
test
in
je
js
insl
add
rorl
loope
lea
mov
fcmovu
lahf
nop
add
jnp
aas
pop
add
sbb
push
adc
jb
push
lock
adc
mov
das
sub
mov
test
je
movsl
lcall
or
stc
cmp
push
fisttpl
nop
sbb
stos
sbb
js
leave
jae
lret
inc
lds
hlt
mov
aas
clc
push
pushl
xchg
nop
mov
in
mov
sbb
adc
dec
adcl
ficompl
mov
test
pop
ret
dec
jecxz
cmp
call
ror
rcrb
sub
rcr
sbb
mov
sub
hlt
dec
dec
cmp
aad
int
test
popf
xor
cmpsb
lea
fldenv
mov
fidivrs
push
push
outsl
insl
repz
scas
test
ljmp
dec
mov
test
mov
imul
pop
mov
fsubs
sti
dec
mov
xor
lret
dec
inc
int
cld
fdivrs
punpckldq
mov
test
jbe
jae
sbb
stc
mov
jno
ret
insl
cmc
pop
sbb
mov
aaa
addr16
repnz
pop
fsubrl
jae
call
cmp
outsb
fidivrl
sbb
mov
pop
ret
or
aam
movsb
pop
repnz
pop
out
jecxz
jns
mov
jns
mulb
scas
fsubrl
dec
or
popa
mov
push
or
cmpsl
call
out
lret
imul
jl
lret
xchg
or
xor
xorb
adc
outsl
sbb
mov
mov
mov
mov
scas
gs
xchg
cmp
sub
cltd
pop
sbb
insb
out
mov
ret
xlat
bound
lcall
idivb
ljmp
mov
xchg
mov
adc
nop
addr16
sti
push
std
addl
bound
outsb
add
dec
lds
jecxz
adc
lock
mov
add
xor
push
fsubr
push
sbb
jns
inc
mov
inc
stos
inc
cs
jne
lret
aam
jge
cld
adc
sahf
test
sbb
inc
pop
add
xor
ljmp
scas
fists
subb
cltd
sahf
jne
es
push
adc
push
xorb
nop
or
lods
push
cmp
stc
rolb
out
popf
repz
out
dec
or
aaa
mov
fdivrl
bound
int3
int3
test
jmp
push
mov
sahf
xor
push
mov
hlt
xor
push
in
cld
jmp
mov
mov
mov
adc
data16
sbb
out
sub
xor
das
ficomps
fildl
jo
insb
addr16
pop
ret
mov
pop
dec
insb
jl
stos
scas
les
inc
jnp
leave
int
cmpsb
add
mov
mov
push
rorl
test
sahf
push
jecxz
psubusb
data16
ret
sbb
or
jno
enter
and
add
xor
mov
xchg
cld
cli
xchg
adc
jne
cs
add
fwait
and
cltd
add
xor
out
xchg
cmp
test
xchg
sub
mov
fildl
mov
push
mov
ss
mov
out
lahf
push
loope
xorb
test
and
outsb
sub
leave
cmp
pusha
jae
insb
lods
gs
fstpt
call
mov
loopne
repz
insl
add
mov
scas
adc
or
into
es
testb
xchg
mov
sub
fldl
push
ss
imul
adc
pusha
test
fwait
test
inc
popf
pop
out
xchg
clc
vpperm
sbb
imul
cmpsb
stos
mov
mov
mov
movsl
xor
aad
push
iret
js
pop
mov
je
mov
rol
cs
aaa
int
mov
push
jmp
pushf
push
out
int
or
jbe
hlt
in
mov
xor
ss
mov
jmp
xchg
vshufpd
mov
mov
pop
in
push
enter
lds
ret
pop
mov
add
cli
xchg
dec
lock
mov
jns
data16
jecxz
lret
xchg
cmovp
xchg
mov
stos
jne
iret
mov
jne
xchg
sub
mov
repz
fisubrs
push
movsl
pop
xchg
jle
mov
or
pop
mov
or
xchg
sub
add
pop
test
mov
shll
loope
dec
push
sub
nop
jne
out
insl
jne
sub
int3
adc
daa
mov
out
data16
scas
inc
or
jo
popa
out
jne
xor
push
push
lahf
mov
out
xchg
push
out
in
pop
ret
xor
mov
inc
icebp
mov
fst
push
inc
jno
sub
xchg
mov
dec
add
xchg
rclb
and
call
adc
sti
push
cli
xchg
nop
sub
add
jmp
lea
sub
loop
ret
lcall
dec
mov
push
mov
insl
and
cmc
push
cmpsl
aam
sbbl
addb
cmp
jns
and
fwait
push
lea
xchg
xchg
cltd
inc
sbb
lret
add
fidivs
adc
jno
pop
or
out
andl
fsubrs
fstpl
pop
jmp
iret
push
push
insl
and
mov
xchg
xchg
cli
mov
adc
mov
jo
sub
js
test
mov
movsb
in
xor
sbb
rcrl
add
mov
cmp
shrb
in
dec
mov
cmp
rcrb
dec
mov
xchg
sub
push
inc
test
jb
outsl
inc
fidivrs
push
xchg
mov
shl
sub
je
push
cltd
xor
push
mov
dec
ljmp
inc
sub
xchg
sti
andl
push
loope
or
outsl
push
jmp
push
rolb
inc
loop
mov
and
call
je
jae
jne
sub
dec
jns
mov
inc
adcl
push
mov
loopne
gs
cmc
das
icebp
cmp
xchg
outsb
cltd
lock
cld
movsl
mov
adc
call
inc
pop
call
in
es
add
mov
filds
adc
and
js
daa
das
push
push
jns
xchg
outsl
sub
lods
add
cmp
ja
lret
imul
sbb
jno
movsb
cmp
ret
cmp
pop
lcall
clc
cmpsl
push
mov
movsb
mov
add
hlt
jmp
scas
mov
sbb
jp
mov
out
xor
jae
pop
in
mov
ret
lds
in
rcrb
jl
xchg
push
repnz
pop
adc
cwtl
add
add
out
test
mov
mov
outsl
or
es
pop
sbb
repnz
jg
inc
mov
pop
mov
mov
fsubl
dec
adc
in
aad
lret
js
bound
dec
pushf
jno
dec
loop
sbb
pop
cmpsl
jo
mov
shll
out
xchg
rclb
jne
sub
mov
in
ret
shlb
outsb
dec
aad
scas
mov
jb
into
xchg
cmp
mov
mov
pop
loope
dec
fcmovb
and
mov
loopne
lret
sbb
xchg
and
mov
add
mov
xor
cmp
cli
inc
imulb
add
cmp
jmp
cmp
jecxz
inc
push
orl
mov
and
mov
in
mov
xchg
test
cld
mov
fiaddl
push
imul
mov
push
mov
push
aad
mov
incb
add
adc
roll
shll
adc
or
mov
or
daa
mov
cmpsb
outsb
movsb
inc
adc
mov
bnd
in
pop
pop
test
out
insl
or
lock
cmp
sub
jne
jae
das
jle
fmull
in
idiv
cmpsl
imul
call
outsb
mov
and
subb
loope
xor
lahf
sub
rcl
cmp
xchg
and
adc
sbb
out
fldt
jb
cmpsb
into
loope
cmpl
sub
imul
jo
and
adc
daa
jb
mov
int3
adc
mov
sbb
mov
aaa
push
pop
dec
fucomip
dec
dec
dec
mov
push
sub
popa
movsl
hlt
lahf
sbb
das
mov
notl
push
rolb
adc
xor
subl
repnz
pop
hlt
push
mov
sbb
imul
test
mov
adc
leave
sub
inc
sbb
aad
inc
pushf
rclb
and
fsubrl
outsl
add
or
jnp
js
mov
loope
add
sti
push
orl
js
nop
jb
inc
adc
adc
jns
js
int3
xchg
xchg
loope
pop
jae
pop
aad
mov
and
sub
data16
jmp
sahf
cmpsb
or
adc
stos
and
cmpsb
test
mov
icebp
les
repnz
lret
sbb
mov
dec
hlt
jge
es
and
push
scas
lds
dec
jae
fs
test
dec
fs
mov
push
dec
inc
outsl
inc
cmp
inc
push
enter
dec
push
or
inc
gs
sahf
out
dec
mov
sti
xor
and
mov
scas
dec
sub
gs
or
mov
out
adc
sbb
imul
pop
xlat
xchg
mov
inc
lods
jl
je
popf
imul
xor
add
jb
rorb
in
add
nop
jg
daa
xor
mov
ljmp
sub
or
mov
fldcw
cmpsl
pop
jecxz
sub
dec
icebp
insb
xor
adc
in
aam
adc
or
iret
mov
fildl
popf
xor
push
popa
test
mov
mov
stos
inc
popf
dec
and
imul
enter
je
in
add
mov
push
loop
mov
pop
icebp
subl
test
sub
sub
daa
mov
dec
shrl
push
in
daa
pop
push
ljmp
inc
popa
in
out
pop
outsl
sub
jns
jne
stc
jnp
cmp
mov
push
push
fldl2e
loopne
adc
fwait
push
sub
and
xchg
pop
nop
daa
fs
xor
xor
cli
cmp
jo
push
ret
fnsave
in
xor
ja
pop
shll
mov
push
sbb
pusha
bound
addr16
and
mov
sti
push
scas
cmpsl
call
adc
jmp
cmpsb
or
cmc
leave
movsl
jnp
add
adc
aam
xchg
jmp
in
fildl
cs
push
mov
jp
out
jno
into
xchg
pop
arpl
mov
rcll
das
ljmp
repnz
imul
mov
mov
or
add
lea
aad
pop
mov
mov
mov
nop
xchg
ss
lret
jno
jmp
sbb
imul
decl
pop
nop
sub
sub
cmp
testb
daa
mov
pop
repnz
arpl
jae
test
sbb
dec
and
and
mov
cld
xchg
and
insb
add
roll
or
inc
xor
pushf
inc
aas
xor
xor
and
sbb
fmuls
inc
xor
xchg
pusha
pop
addr16
inc
xchg
sub
jl
mov
inc
mov
or
ja
das
add
mov
imul
sbb
jle
sbb
and
aaa
aad
cli
lods
cli
xchg
pop
adc
cmp
sub
push
cmp
mov
pop
pusha
testl
xchg
movsl
jns
xchg
jmp
leave
xor
into
lods
xchg
mov
pop
cmpsb
cmp
out
cmp
rcr
mov
fbld
mov
jb
push
into
sbbb
clc
xchg
fnstcw
jno
les
sahf
lret
dec
add
out
jmp
xchg
jge
pop
sahf
les
and
adc
mov
aad
out
lret
ds
sub
and
daa
in
mov
pop
push
aas
ja
push
stos
aaa
inc
fldcw
test
and
fsubr
aaa
inc
pop
divb
std
test
test
mov
sahf
vphaddbw
enter
repnz
mov
adcl
jae
loope
cmp
aam
mov
sahf
lret
je
pop
push
iret
and
rcll
jnp
sbb
fildll
cmp
rcll
ss
xchg
ret
cmp
and
inc
jge
lret
movsl
xchg
sub
jmp
cmpsb
popf
jnp
in
lods
mov
call
data16
adcl
sub
pop
mov
dec
xchg
jne
sahf
inc
idivl
sbb
rcrb
cmp
jo
in
and
xor
adc
jno
nop
sub
push
adc
popf
cmp
stos
mov
loop
aaa
mov
pop
fiadds
and
mov
lods
jecxz
fs
or
xchg
cs
push
xor
daa
push
dec
stos
mov
cmp
sub
cmp
cmp
and
cmpsb
mov
dec
push
add
xchg
pop
repnz
gs
mov
fwait
sub
mov
pop
call
in
lret
sbb
leave
jb
jb
jmp
cmp
ret
ss
imul
stc
popa
int
push
mov
or
jl
out
cmp
out
into
sbb
fcompl
mov
addr16
mov
ret
imul
xchg
rcrb
dec
sbb
lahf
mov
inc
mov
xchg
stos
jp
sar
xchg
or
xlat
xchg
movsl
dec
lahf
push
outsl
dec
push
faddl
dec
mov
jg
xchg
mov
and
in
in
cmpsb
mov
cwtl
pop
shl
nop
mov
sub
sub
pextrw
mov
into
cmpsb
mov
push
push
stc
push
xchg
je
pop
xchg
pop
xchg
pusha
test
jo
xchg
jmp
adc
repnz
mov
gs
mov
nop
jmp
inc
sbb
xchg
lret
inc
sbb
lock
push
ds
add
lods
jns
push
add
and
sub
hlt
add
jo
mov
mov
enter
cmp
out
test
fwait
arpl
js
clc
jg
jmp
sbb
adc
mov
shlb
mov
mov
mov
lds
cs
push
sub
std
pop
xor
sahf
cmc
stos
sub
mov
push
and
aas
cmp
dec
pushf
push
ljmp
jno
mov
dec
es
mov
fistps
push
add
lock
shrl
pop
add
push
cmpsl
sbb
iret
js
mov
lods
xchg
rorb
int
xchg
fildll
inc
pop
xchg
fidivrl
sbb
lods
sub
aam
je
pop
scas
add
daa
mov
sbb
movsl
dec
mov
je
adc
adc
adc
jp
fcmovnbe
hlt
sub
push
sub
xor
dec
push
outsb
mov
sbb
jecxz
imul
testb
ret
aad
xchg
gs
pop
xchg
aas
stc
daa
xchg
out
insl
push
add
mov
mov
jbe
pop
mov
sbb
pop
pop
insb
call
add
sbb
lahf
iret
ror
add
jg
fs
xor
or
inc
cmp
lcall
fsubrs
test
jns
mov
add
lods
or
arpl
test
mov
mov
clc
hlt
cmp
adc
mov
or
add
adc
jecxz
les
aad
loop
iret
repnz
add
mov
mov
sbb
ss
jmp
mov
stc
cmpsb
inc
imul
call
jle
stc
dec
push
push
cmp
sahf
xor
push
cmpsb
lea
or
pop
ds
jp
mov
in
iret
out
pop
dec
popa
decl
xchg
popa
or
adc
push
pop
fucomip
stos
pop
jmp
shll
pop
jecxz
push
lcall
out
push
jne
jo
inc
lods
pop
jne
xor
jle
in
cmpsb
arpl
stos
cmp
sbb
and
inc
sbb
xor
imul
dec
sub
sti
add
sub
pop
sub
faddp
fwait
movsb
dec
xchg
std
sbbl
push
xlat
enter
cmp
loop
pop
divb
out
mov
rorl
in
or
ret
flds
ror
pop
add
fdiv
lahf
or
jge
in
fdivl
repz
pop
xor
push
jge
mov
push
sysenter
lret
sub
push
inc
sbb
sbb
push
mov
mov
inc
je
ja
mov
roll
jmp
sub
dec
mov
inc
loop
insl
add
test
jg
movsl
adc
mov
mov
inc
jg
imul
jnp
outsl
sbb
aas
mov
lret
dec
pop
inc
leave
or
push
push
sub
add
jp
lods
scas
gs
sbb
pop
popa
or
sbb
mov
adc
hlt
mov
jp
mov
in
jnp
dec
inc
pushf
lds
sub
xchg
mov
addr16
sbb
sub
or
outsb
movsl
jp
sbb
jae,pn
push
movsl
sbb
aaa
into
mov
adc
leave
cmp
sbb
sbb
lds
or
out
jge
jae
push
push
and
and
inc
ja
mov
push
xchg
sub
je
jge
addr16
inc
jae
shrb
dec
cmc
push
sbb
movsb
push
in
jno
mov
pop
insb
dec
push
pop
and
das
inc
loope
arpl
fiadds
and
mov
iret
ds
int3
cmp
sbb
xchg
push
ss
jno
push
xchg
sub
cmc
pop
loop
mull
call
or
fldenv
stc
xor
shrl
mov
stos
mov
xor
pop
xorb
aam
ret
adc
jbe
or
push
cs
xor
std
faddl
cmp
data16
or
lcall
mov
das
cmp
addb
ret
jl
inc
out
addr16
sub
lock
sahf
bound
sbb
movsl
in
cwtl
int
cwtl
call
lret
bound
dec
jge
mov
clc
sbb
ficoml
inc
dec
xor
mov
in
mov
push
jo
dec
mov
mov
testb
dec
imul
adc
outsl
xchg
fwait
stos
cmp
cli
xlat
push
cmp
ds
mov
sbb
lret
jecxz
imul
popa
push
push
add
popa
sub
mov
outsb
daa
into
cmp
xchg
pop
insb
sub
adc
lods
jg
sbb
ret
ja
jns
negl
daa
pop
js
flds
push
xchg
pop
out
sarl
mov
and
push
push
and
dec
popa
jecxz
adc
cmp
and
mov
inc
in
push
out
jp
mov
pop
push
daa
xor
es
mov
xchg
int
rep
mov
pop
sub
push
and
fldenv
dec
pusha
idivl
aad
push
imul
jne
push
push
mov
icebp
add
push
fisubrs
cmp
scas
mov
cmp
fstpl
sub
push
popa
rclb
bound
aad
xor
and
cmp
test
std
jmp
pop
pop
test
pop
fildl
mov
stos
mov
out
jge
xor
lahf
repz
aam
mov
jae
cmp
movsb
sti
lds
jns
outsb
and
lahf
sub
test
cld
xchg
ss
rorl
xchg
push
push
nop
scas
and
push
or
lcall
lret
jno
push
les
and
in
dec
xchg
gs
outsl
push
push
sbb
shrl
mov
je
push
cmc
pop
test
dec
mov
out
test
jge
lods
int3
or
std
out
ss
pop
sub
mov
cltd
and
std
dec
fucomip
xor
pop
loop
fstpt
fcoml
ss
sbb
nopl
xchg
xchg
loopne
lds
call
sbb
insb
mov
je
sti
push
loop
ret
adc
pop
cmpsl
mov
dec
mov
mov
shlb
rorb
jbe
sub
mov
dec
push
mov
or
mov
push
push
aad
loop
push
or
jb
ret
out
cmp
nop
imul
fisubrs
xor
xchg
pop
sahf
or
iret
cmp
aad
cmp
call
addl
dec
orb
cmp
cmpsb
aaa
xchg
pop
repz
incl
jne
mov
xchg
sub
mov
das
mov
mov
adcb
adc
mov
pushf
es
adc
lock
cld
sub
dec
repz
sbb
dec
cld
mov
stc
call
xchg
cwtl
xchg
inc
sbb
es
popf
push
daa
add
xor
push
lcall
aas
out
outsl
sbbl
cmp
test
ret
sub
aad
stos
and
subb
scas
out
fisttpll
scas
dec
nop
lahf
daa
mov
dec
sub
pop
mov
inc
jg
cli
push
push
test
xchg
in
lret
cmp
sbb
aam
push
cmp
test
pop
clc
sub
mov
cmp
ja
negl
add
mov
adc
jae
lcall
xchg
addr16
pop
ret
xor
lcall
stc
cmp
sub
lods
inc
jo
inc
ret
lret
bound
dec
arpl
ljmp
lea
in
push
fnstcw
mov
mov
sbb
movl
popf
sbb
rcll
cld
mov
xchg
dec
sub
out
ja
rcll
add
jp
les
or
das
fbstp
rcll
std
xchg
divb
xchg
outsl
pushf
sbb
sbb
xchg
sub
add
mov
inc
xchg
add
int
lds
jp
fyl2x
test
cmp
pushf
shlb
shl
mov
leave
ss
adc
lcall
jns
out
insl
aad
add
jbe
clc
jae
rcll
mov
mov
inc
fwait
mov
ljmp
or
inc
shlb
sbb
lret
fwait
sti
jg
movsb
jg
outsb
adc
add
adcl
mov
push
xchg
ljmp
insb
or
push
outsl
loope
inc
push
jl
mov
pop
xchg
daa
jmp
xchg
daa
or
lds
jp
inc
insb
push
aam
nop
xor
imul
loop
mov
orl
inc
and
arpl
inc
ficomps
mov
shlb
and
ja
mov
cwtl
outsl
enter
jl
cli
xchg
sub
mov
rorl
bound
pop
test
sbb
sub
lea
dec
and
push
push
or
outsl
jmp
es
std
jmp
outsl
ljmp
in
mov
loope,pt
jl
lods
popl
ljmp
push
fstpt
fisubs
pusha
cmp
xchg
ret
fsubrl
cmc
inc
test
sub
jmp
inc
and
stc
jnp
fnsave
add
push
jmp
outsl
jns
or
cmp
mov
sub
push
cmp
xor
lahf
aam
movsb
cmp
adc
in
ret
notl
sbb
loope
int3
arpl
xlat
sahf
mov
mov
pop
add
cmp
mov
dec
addb
mov
push
ss
ret
pop
xchg
int
adc
aas
div
xor
push
mov
test
out
add
mov
mov
xor
inc
cmp
jmp
mov
daa
outsl
mov
or
aam
and
pusha
xchg
stos
into
aad
stos
mov
popa
in
xor
imul
popf
add
jno
dec
popf
test
xchg
adc
das
adc
mov
mov
js
and
test
lcall
dec
dec
ljmp
cmp
add
mov
aam
xchg
in
hlt
push
pop
jl
jmp
mov
jae
mov
inc
outsl
jge
fidivrs
aas
pusha
out
fdivl
lahf
test
lcall
add
cmpsl
mov
mov
out
out
sbb
xchg
scas
pop
cmp
int3
fcom
movsl
xchg
pop
daa
dec
or
push
stc
pop
cmpsb
outsb
repnz
jg
cmpsb
jne
ret
xchg
fs
dec
out
dec
cmpsl
mov
imul
add
lret
out
fcoms
jecxz
or
movb
pop
daa
sub
testl
mov
mov
jg
dec
mov
mov
enter
popf
pusha
dec
cltd
mov
test
fidivl
push
loop
int
xchg
jp
lock
push
insl
jg
inc
out
sti
js
sub
mov
stos
jecxz
fldl
sti
enter
jmp
loop
ds
cmp
xor
sbbb
mov
or
sub
push
or
ret
jns
ljmp
rorb
ret
fstl
inc
bound
mov
sub
mov
mov
pop
hlt
pushf
xchg
lds
stos
cmp
outsb
stc
jbe
das
out
cwtl
xor
or
ficoms
mov
jmp
xchg
fldt
inc
lods
cmp
ja
lcall
and
pushf
mov
mov
inc
call
test
jecxz
hlt
mov
es
mov
nop
rcrl
mov
aaa
fld
xchg
cld
mov
dec
ja
lret
inc
dec
inc
or
aaa
add
lds
and
imul
add
xchg
jecxz
push
sbb
outsb
mov
jge
jno
cmc
and
adc
mov
test
rol
sub
out
jg
inc
pop
scas
mov
cmp
dec
out
lret
fcomps
mov
aad
sbb
sti
rorb
pushf
push
mov
div
xor
std
jnp
and
sbb
test
cmp
outsl
roll
les
lret
loop
icebp
xchg
pop
push
mov
cmp
dec
push
add
clc
pop
push
dec
ds
push
movsb
mov
out
xchg
mov
jg
inc
add
aad
inc
sub
mov
outsl
inc
xlat
fistps
and
nop
xchg
ss
jne
shlb
mov
sub
mov
push
xor
xchg
pop
xor
sti
inc
sbb
cmpsl
dec
mov
popa
cmp
in
inc
jnp
xorl
cltd
adc
xchg
ljmp
jmp
sbb
rol
mov
aam
or
call
mov
popa
aas
sbb
addr16
and
mov
outsl
mov
mov
push
jecxz
xchg
jnp
xchg
xchg
push
mov
jl
inc
adc
push
or
cmc
xchg
popf
scas
jle
fmuls
pop
rorb
cmpl
mov
xor
loop
push
mov
rol
sub
jp
cmp
imul
adc
fcompl
repnz
push
xchg
subl
inc
jecxz
jle
leave
sub
cs
imul
xchg
mov
or
mov
shrb
fimull
or
out
cld
test
inc
xchg
pop
decb
shlb
push
jecxz
and
mov
idivl
in
and
sub
dec
out
shl
cs
outsl
repz
mov
sbb
fists
imul
sub
add
imul
mov
or
data16
sbb
fcmovnb
and
ret
jecxz
jmp
or
iret
es
mov
ss
out
push
rcrl
rclb
bound
ja
loopne
xor
test
pop
xor
jbe
repz
dec
inc
cwtl
shll
aaa
push
push
push
jmp
loope
xor
popa
pop
mov
lods
add
test
jne
div
mov
xchg
leave
pop
dec
cmp
xchg
sub
pop
mov
pop
hlt
call
enter
test
sbb
fmulp
lahf
outsl
cmc
and
xchg
mov
ret
pop
push
push
or
cli
xchg
sbb
dec
jmp
cltd
hlt
inc
dec
mov
nop
xor
fistps
xchg
out
or
mov
mov
or
roll
pop
cmp
fldcw
pop
dec
dec
dec
pop
push
inc
xor
xor
stc
std
pop
adc
and
mov
push
aas
push
out
and
shlb
lahf
xor
xchg
sub
xchg
test
xor
leave
pop
push
pop
mov
outsl
inc
jl
lcall
lods
mov
pop
lods
stos
cmp
push
in
in
sub
insl
push
add
mov
and
sub
js
fwait
mov
adc
add
add
jbe
call
add
movsb
adc
arpl
adc
aas
fmuls
ret
leave
mov
adcl
inc
push
cmp
xor
mov
loope
shlb
dec
pop
mov
insb
lea
call
sahf
bound
pop
push
jge
sbbb
mov
jmp
lret
xchg
inc
shll
movsb
jbe
lods
sbb
je
fstps
int3
mov
ja
pop
xor
inc
push
mov
mov
shlb
sbb
cmp
bound
jecxz
pop
sti
shr
add
out
or
xchg
mov
push
mov
les
lods
sbb
mov
cmp
fcoms
insb
mov
dec
xchg
adc
aam
sub
movsb
pop
push
not
stos
jno
stos
cmp
rcll
dec
jns
mov
lret
mov
mov
adc
loope
mov
cmp
clc
xchg
fwait
xor
pop
les
jae
push
pop
mov
fisttpl
fimull
bnd
lds
jg
jp
xchg
mov
adc
lret
mov
out
fwait
std
pop
and
add
data16
mov
sbbl
and
mov
or
jae
dec
adc
push
filds
inc
push
mov
bound
sbb
gs
push
cmpsb
push
lds
sbb
jbe
rcll
xlat
push
std
jo
jge
push
imul
popf
jo
enter
and
pop
fildll
jo
fidivrl
int
sub
iret
ja
imul
popf
jae
or
aaa
in
lock
clc
pop
and
fbld
out
lret
mov
rol
shr
repz
mov
dec
sbbb
leave
cmp
mov
repnz
xor
lahf
mov
data16
add
xor
gs
pop
jae
push
in
sub
int
divb
push
jmp
lret
cmpsb
sbb
leave
xor
and
rcrl
insl
dec
mov
cmc
push
mov
inc
int
decl
rcll
push
inc
cmp
les
aam
or
in
mov
push
jbe
mov
int3
xchg
sbb
mov
sub
mov
mov
pop
adc
adc
mov
push
sbb
sti
dec
in
clc
pop
jmp
cmp
and
std
movl
enter
outsl
mov
ret
addr16
inc
pop
les
and
popf
mov
pop
sub
adc
hlt
mov
out
outsl
rcll
shl
lret
add
movsl
xor
xor
xlat
pop
sbb
or
lret
jne
xchg
dec
insb
pop
das
outsl
xor
loope
push
xor
add
lods
mov
hlt
rolb
push
inc
mov
mov
pop
rorl
mov
inc
fstl
mov
lds
popa
clc
mov
cmc
aas
push
sub
dec
and
test
dec
jns
mov
leave
cwtl
mov
dec
pop
movsl
and
jl
jno
data16
out
add
fadds
cwtl
pop
jnp
or
out
cld
ja
xchg
inc
shl
cmp
mov
mov
cmc
or
scas
inc
cltd
push
dec
ret
cmp
ret
ljmp
pop
or
mov
or
imul
mov
je
push
adc
push
test
repnz
xor
inc
aam
loopne
inc
sbb
add
out
mull
inc
dec
add
add
xchg
pushf
jnp
adc
call
xchg
and
mov
cmp
jnp
xor
fsubs
or
dec
adc
pop
xchg
sub
push
aam
mov
lods
lock
loope
mov
push
mov
fimull
loop
mov
sub
les
cmp
cmpsb
test
movsb
fldenv
push
dec
xor
pop
jbe
outsl
stos
xchg
push
stos
jge
scas
adc
xorl
lcall
iret
jbe
cmp
mov
xor
mov
daa
mov
push
mov
xor
sub
inc
inc
mov
mov
jmp
and
jb
push
adc
aam
mov
xorl
aad
inc
xchg
mov
fcoms
je
lods
addr16
mov
mov
popa
add
mov
repz
xchg
lods
adc
xchg
outsb
fidivrs
in
in
ficoml
push
lret
fld
lret
inc
lahf
jns
and
fdivr
test
inc
pusha
loope
pop
nop
xlat
sbb
outsb
lods
enter
hlt
in
cmc
data16
push
sbbb
xchg
fidivs
pop
jae
jae
icebp
push
fwait
cld
or
and
sbb
cmp
call
cmpsb
cmp
lods
stos
adc
outsb
and
sbb
adc
stos
les
repnz
mov
pusha
xorl
aas
add
push
movsl
cwtl
xchg
push
fisubrl
push
repnz
sbb
mov
add
cltd
jae
inc
adc
out
jae
mov
adc
dec
xor
jno
out
jns
mov
fldt
add
mov
pop
jbe
shll
sub
cltd
lahf
stos
cmpb
push
movsb
rorb
dec
xor
testl
dec
scas
sti
push
aam
lods
rcrb
sbb
outsl
sbb
or
mov
insl
ja
out
inc
mov
aad
xor
out
cld
fwait
popf
dec
mov
mov
fdivr
push
adcl
jle
std
and
jl
push
std
xor
mov
sbb
or
cmp
in
xchg
dec
jp
outsl
inc
mov
mov
sti
scas
jl
aam
mov
idiv
cmc
orb
cmp
add
lret
xchg
jo
add
push
in
mov
add
push
pop
fwait
test
dec
jecxz
pop
cmp
in
pop
icebp
mov
test
mov
and
adc
clc
xchg
ljmp
scas
iret
in
mov
cmp
dec
fadd
out
cmp
aam
pop
mov
sub
dec
pop
xor
adc
push
xchg
mov
addr16
adc
jle
xor
mov
insl
daa
aaa
sub
mov
jmp
sub
cmp
xchg
insb
xor
out
lea
js
ss
push
mov
or
ret
insl
adc
adc
fcompl
mov
mov
bnd
adc
mov
addb
int3
sub
popf
fsubs
pop
lret
popf
add
lret
rcr
loope
push
in
inc
inc
sub
xchg
pop
mov
mov
push
sub
data16
xor
rcr
leave
popa
lret
lret
adc
inc
push
push
out
ja
rorb
test
lock
pop
jle
sbb
and
pop
sarb
or
and
mov
push
sub
jle
enter
enter
out
jmp
lret
enter
int3
test
xchg
cli
pop
adc
dec
ss
or
mov
fsubrs
insb
sub
or
pop
clc
jae
aam
sti
nop
jmp
test
push
lcall
jbe
lds
xchg
and
or
add
fs
inc
fnsave
sti
addr16
fldenv
pop
push
movsl
mov
cmp
sahf
shrl
xor
push
fwait
outsl
xchg
loop
ds
cltd
push
pop
popa
std
pop
mov
push
sub
test
icebp
clc
lds
movsl
out
xchg
cmp
xchg
sti
pop
push
les
testb
jmp
and
sub
stos
lock
sub
or
push
dec
scas
xchg
roll
add
cmc
dec
cmpsb
sbb
mov
lret
mov
jmp
repz
or
cmp
lods
stos
call
int
shll
repz
adc
xchg
leave
mov
rorl
cmp
jae
mov
ret
dec
inc
add
mov
add
popa
mov
ds
mov
je
xor
shr
out
push
insb
jo
xor
test
lret
nop
lods
fistpll
adc
add
aam
hlt
or
cmpsb
shr
hlt
scas
movsl
mov
adc
jge
fdivrp
lea
movsl
andl
lods
test
out
dec
sub
or
and
icebp
jecxz
lahf
cmc
cmpsb
add
ret
test
aas
push
mov
arpl
in
aas
sub
rcll
cmp
les
fldl
pop
iret
loope
push
fs
call
sub
loopne
push
mov
and
jne
or
mov
ret
rcrb
loope
pop
adc
pop
jne
in
aaa
sbb
jbe
sub
std
inc
leave
mov
pop
fwait
lods
push
dec
and
cmpsl
mov
xlat
imul
cltd
cld
or
popf
dec
push
dec
jo
in
sub
test
sub
pop
mov
xlat
sbb
pushf
popa
sbb
jno
dec
push
dec
sub
jbe
fnstsw
push
lds
popa
push
sub
stos
sti
mov
sub
in
xor
in
loope
insb
add
sbb
loop
sub
push
or
imul
frstor
push
push
stos
ds
adc
scas
insl
insl
cmc
ret
dec
push
mov
loopne
push
xchg
dec
xchg
sub
clc
add
fwait
adc
lret
fs
cwtl
and
lret
out
in
out
pop
pushf
or
and
mov
cmp
fisubrl
pop
movsl
fnstenv
ss
xor
xor
mov
jg
xchg
lods
mov
rorl
pop
mov
in
xchg
jg
xorb
in
pop
shll
into
dec
jp
jle
dec
push
leave
pusha
inc
lods
incl
loop
ret
ret
inc
js,pn
xchg
shld
mov
sub
xorb
jno
jge
mov
fnsave
push
setle
scas
daa
aas
jp
divb
int
imul
or
xor
repz
or
ss
mov
leave
xchg
pop
cli
sub
or
insl
sub
sub
es
les
cmp
sahf
xor
js
insb
cmpsl
sbbl
xchg
add
xchg
ja
xchg
sub
stos
dec
stos
fisttpl
dec
or
movsb
mov
jns
sahf
push
jg
and
cmp
fiaddl
mov
mov
mov
inc
inc
mov
add
xor
arpl
mov
push
lods
mov
testl
dec
xchg
sbb
outsl
jle
ret
mov
jl
outsb
mov
push
pop
adc
insb
jge
xor
fcoml
out
pop
dec
jno
in
test
mov
xor
nop
sub
js
subl
push
cmpsb
arpl
mov
out
mov
mov
or
dec
adc
sub
dec
dec
fadd
rcrl
cmp
jnp
dec
fdivs
xchg
push
das
pop
fdivl
out
shrl
aad
xor
inc
gs
insb
xchg
mov
sbb
imul
cmpsl
mov
and
repnz
pop
adc
mov
shrb
or
sarb
icebp
cmpsl
xchg
pop
xlat
in
or
sbb
inc
pop
inc
sahf
jle
in
push
das
mov
xor
nop
incl
sbb
sbb
pop
jo
push
jae
inc
test
dec
mov
frstor
or
mov
ret
sub
add
loop
push
shl
shlb
mov
adc
jecxz
cmpsl
mov
jno
pop
mov
pop
pop
jl
mov
add
mov
push
hlt
push
mov
in
andl
adc
test
jmp
int
outsl
mov
jecxz
push
movsb
push
mov
mov
pop
inc
lret
pop
divb
repnz
and
jp
dec
loop
inc
mov
ja
pop
outsl
dec
add
shrb
pushf
pop
cmp
push
jne
pop
jecxz
cmp
decb
jno
divb
dec
sbb
insl
rorb
imul
sti
or
xchg
out
xchg
mov
mov
sahf
fwait
jecxz
add
pop
cmpsl
sub
movsb
sbb
xchg
xchg
sub
stos
mov
push
jno
lahf
xchg
divl
mov
out
cld
push
jp
jnp
adc
sub
mov
dec
xor
popf
aaa
cmp
nop
mov
push
scas
shlb
mov
xor
in
pop
push
mov
aas
mov
sbb
mov
xchg
lcall
loope
add
or
jmp
clc
dec
xlat
mov
test
fistpl
adc
mov
sub
jmp
pushf
addb
mov
dec
es
fnstsw
lds
mov
lods
pop
cmc
push
pop
xchg
jae
inc
mov
pop
mov
int3
push
out
inc
out
sti
inc
int3
inc
add
lea
pop
aad
rcrl
and
jg
aaa
dec
cli
mulb
push
loope
ja
and
dec
pop
fcomi
sbb
mov
sbb
bound
imul
xchg
ror
jp
jb
test
inc
std
mov
cmpsl
xor
sub
mov
adcl
sbb
xor
jne
adc
mov
flds
insb
flds
int3
loope
xor
push
in
dec
ss
insl
jns
nop
cmp
call
aas
pop
inc
cld
mov
jg
add
shlb
or
lods
into
jmp
lret
mov
xor
xor
fmull
push
xchg
jno
inc
dec
test
lret
push
aam
lcall
mov
pop
lea
loopne
dec
mov
mov
inc
sbb
and
mov
daa
cmp
sub
jno
fmull
add
aam
daa
push
mov
push
mov
mov
xor
or
mov
adc
cmp
sub
fistl
sbb
xchg
stos
pop
sub
or
into
outsb
shrb
sub
clc
mov
or
jp
cli
xchg
sub
xorl
push
lahf
jp
add
int3
jecxz
callw
icebp
push
lahf
mov
sub
or
mov
in
std
cmp
pop
lret
inc
xor
dec
push
sbb
mov
mov
pop
xchg
cmp
cmpsl
data16
mov
jle
call
insb
clc
push
pop
jle
in
les
aam
pop
pop
and
dec
cmp
loop
adc
jmp
add
arpl
push
xchg
push
or
sub
stc
test
out
pop
hlt
pop
mov
add
mov
jg
pop
icebp
xor
sub
sub
or
cmpl
cmp
stos
xchg
lret
sbb
adc
inc
push
sub
lods
push
and
push
iret
fisttpl
xchg
xor
mov
xchg
call
cmp
test
jle
pop
test
fbstp
fmulp
fildl
cmpsl
jl
incb
push
lods
fwait
sbb
cmp
xlat
call
aaa
lret
inc
jno
scas
jecxz
jg
xchg
fsubl
push
out
and
cmp
fadd
xorb
jmp
stos
inc
xor
bound
ficoms
mov
ds
fisubrl
mov
xor
xor
pop
inc
cltd
inc
fwait
inc
scas
pop
lcall
in
std
loope
fwait
sahf
mov
dec
aaa
mov
out
addr16
jecxz
mov
cmpsb
jno
push
int
aad
test
dec
incl
xor
dec
jmp
enter
int
dec
pop
rolb
dec
call
cli
out
xor
adc
sbb
dec
leave
sbb
and
icebp
or
imul
jl
sbb
nop
popf
sub
xchg
movsl
lds
pop
dec
ljmp
shr
xchg
or
imul
mov
mov
mov
fdivs
or
in
cld
pop
hlt
fcmovne
add
sbb
imul
add
cmc
xchg
pop
nop
mov
int
lret
test
mov
push
mov
scas
xor
cmpsb
out
mov
sti
cmp
mov
xor
push
jne
pop
xchg
sbb
sbb
inc
mov
add
push
xchg
and
cltd
shl
lret
test
inc
stc
pop
inc
xchg
rcr
sar
or
sti
pop
shlb
addb
out
aam
leave
pop
lods
pop
sbb
or
fucomip
leave
inc
mov
popf
push
sub
jae
and
adcl
sbb
int
sub
pop
int3
lods
mov
push
insl
movsl
mov
mov
decl
xor
xor
mov
jnp
mov
dec
mov
cmp
movsb
repz
add
insl
xchg
pop
jmp
arpl
add
in
pushf
jae
sub
daa
dec
mov
inc
arpl
lret
mov
lds
xlat
movsl
add
push
jo
and
add
ds
call
test
mov
fisubs
shrl
push
jmp
and
stc
scas
lret
sbb
data16
pop
repz
mov
mov
insb
lahf
or
xchg
mov
sarl
sbb
push
mov
ds
or
and
js
jb
nop
in
dec
sub
sub
inc
add
sti
adc
adc
or
mov
mov
sub
leave
das
movsl
jb
rol
sub
mov
pop
jg
cwtl
data16
sub
dec
or
fdivs
cs
lock
shll
adc
lds
lock
call
sbb
or
jge
dec
iret
vpmovsdw
lcall
mov
loope
sub
push
xlat
mov
or
and
mov
punpckldq
lcall
sub
jl
push
mov
push
in
gs
xchg
loope
cmp
push
jg
cmp
fnstenv
xor
popf
xor
sbb
in
jbe
mov
jle
je
pop
in
in
cltd
pop
mov
mov
clc
aas
imul
test
inc
and
imul
jo
jl
test
jo
int
push
xlat
js
push
test
and
cli
xchg
pop
hlt
ret
mov
sub
xchg
add
push
mov
call
cmp
pop
shrd
jmp
mov
je
es
dec
push
int
mov
icebp
add
pop
mov
jnp
cmpsl
shll
or
sub
cs
xor
aas
mov
ljmp
dec
or
lret
pop
adc
cmp
xchg
fistl
clc
bound
jle
gs
lock
adc
add
scas
add
scas
cmc
mov
xlat
xchg
add
adc
sub
and
sbb
mov
loope
xor
cmp
pop
fdivrs
adc
lods
and
sbb
mov
dec
or
rcrl
movsl
cmp
cmp
sahf
bnd
xor
mov
jnp
mov
push
cwtl
inc
test
or
push
mov
andb
ljmp
fmuls
rorl
jo
mov
rorb
cld
divb
sub
shll
inc
and
push
ljmp
mov
outsb
xchg
fsubl
mov
rcrb
and
inc
and
shrl
inc
and
scas
inc
hlt
inc
jmp
push
push
sahf
cmp
lea
pushf
add
fdivr
stos
aas
or
cmp
popa
push
nop
push
jmp
insb
jle
inc
sbb
fdivs
aaa
push
add
into
ret
mov
out
fcomp
xchg
inc
xchg
shlb
pushl
push
pop
pop
xor
loop
shl
aad
arpl
dec
popa
sub
sbb
or
bound
xchg
jecxz
cmpl
les
and
clc
inc
inc
push
cmp
sbb
adc
cmp
mov
xchg
in
stc
cs
cltd
imul
stc
xor
mov
xchg
jmp
mov
mov
pusha
inc
pop
fiadds
mov
jmp
sti
fcompl
mov
dec
pop
jp
xor
cmc
dec
cmp
lahf
xor
in
jns
aad
mov
in
adc
mov
and
or
lret
mov
addb
pop
push
push
les
nop
daa
push
je
mov
fwait
out
movsl
or
and
push
inc
ret
clc
or
aam
pop
mov
push
push
and
sbb
mov
mov
sub
test
inc
imul
jge
scas
loopne
stc
lock
pop
loop
fcoml
xor
jnp
push
inc
loopne
pop
fcomps
adc
mov
push
enter
and
pop
adc
jne
lret
dec
mov
add
lock
sbb
lret
lahf
adc
cmpsl
leave
cmpl
push
or
or
pop
mov
and
sub
jle
test
movsl
ror
add
repnz
push
subl
pop
push
and
pusha
inc
sahf
rep
cmpl
jne
cmp
stos
mov
jb
jbe
and
popa
jns
addr16
adc
mov
or
pop
jo
in
pop
sahf
sbb
jno
roll
jmp
sahf
cmpsl
sbb
push
dec
add
jne
js
stos
stc
std
xor
nop
test
sub
outsl
lods
pop
jmp
push
inc
out
and
push
pop
push
cmc
jbe
js
inc
mov
dec
jmp
clc
xchg
inc
test
in
mov
sub
cmpsb
nop
add
add
jecxz
arpl
mov
pop
loopne
push
ret
repnz
mov
dec
loopne
jg
loopne
xchg
addr16
out
repnz
arpl
sbb
or
imul
mov
mov
fisubs
xchg
mov
out
sbb
lds
mov
push
cmpsl
and
xlat
jp
mov
js
clc
jl
insl
scas
movsl
xchg
jmp
int
aad
daa
es
push
or
xchg
lods
imul
ffree
pop
push
loope
in
pop
adc
mov
movsl
cmp
dec
repnz
add
sub
lods
sub
add
mov
mov
or
pop
sub
mov
lock
push
adc
fisttps
mov
fs
and
popa
push
inc
shlb
dec
sti
shrb
add
andl
rclb
adc
aam
push
pop
insb
loope
pop
imul
pop
jae
inc
in
popf
jmp
sub
mov
test
ret
cmp
xor
xchg
xchg
push
out
in
xor
push
sbb
data16
lret
jl
push
cwtl
lods
mov
sub
mov
mov
pop
pushf
cli
push
mov
pop
fadds
add
mov
inc
sub
imul
rorb
xchg
sub
fs
out
xchg
add
insb
fdivl
push
adc
inc
jle
ret
pushf
dec
or
cltd
adc
cmpsl
icebp
scas
sbb
mov
pop
addr16
mov
ret
xor
data16
dec
mov
mov
xor
jo
movsl
icebp
ficoml
imul
pop
test
int
cmpl
pop
inc
mov
lods
ja
cmp
cmp
pop
xchg
ds
sbb
lods
and
jge
rcll
mov
xlat
insb
leave
mov
add
xor
outsb
test
out
out
stc
mov
rolb
adc
sbb
fldenv
pusha
cmp
sbb
scas
mov
push
inc
insl
xor
jp
es
cmp
test
push
pop
enter
andl
inc
insb
add
dec
add
mov
mov
enter
les
mov
movsl
jmp
pop
mov
push
jno
fwait
sti
xchg
xchg
xchg
dec
test
imul
idivl
adc
adc
push
inc
shll
mov
rcr
mov
cmpsb
mov
aad
inc
test
cltd
jb
pop
cmpsb
sbb
mov
dec
pop
or
fidivrs
sub
fwait
int
int3
xlat
into
lret
jo
mov
faddl
mov
movsl
mov
stos
dec
jno
lock
cs
mov
mov
aad
out
xor
sbb
cmpsl
rcrl
xchg
notb
shrl
jb
jge
outsl
dec
cs
dec
push
xor
test
add
nop
fs
or
pushf
cmp
fstps
addb
fisubs
mov
add
int3
test
outsl
jge
mov
pop
mov
jb
int3
push
adc
lret
and
jg
enter
outsb
sbb
xlat
and
repnz
inc
sub
dec
lret
fucomp
sub
sbb
jne
jnp
sub
movsb
lods
leave
aas
adc
pop
and
jae
cltd
movsb
mov
adc
cmp
fst
jns
add
das
or
int3
stos
insb
iret
push
mov
jb
loop
pop
push
in
add
xlat
push
mov
ds
pop
outsb
pop
cmc
lahf
sar
pop
lock
and
ficoml
dec
fcmovnbe
fldt
mov
fldenv
jl
pop
pushf
scas
mov
ds
shll
and
add
or
jbe
mov
ljmp
mov
jb
sbb
fsts
cli
xchg
imul
repnz
lea
xchg
mov
push
loope
fisubl
or
push
out
mov
add
and
xchg
jecxz
test
in
sub
scas
or
inc
mov
cmp
daa
dec
arpl
dec
dec
pop
jnp
fcmovnb
jg
mov
out
mov
into
pop
stos
or
cmpsb
adc
mov
and
dec
scas
mov
adc
pop
xchg
mov
jne
and
leave
xchg
sub
sbb
lret
outsl
ret
pop
idivb
xor
add
ficomps
push
popf
cmp
lods
sub
popa
and
gs
or
jmp
xchg
mov
add
rorb
and
push
xchg
sbb
icebp
mov
sub
or
pop
push
sbb
cmp
inc
push
fucomp
int3
sbb
les
jns
iret
xchg
pop
out
jne
inc
inc
adc
fwait
sti
or
imul
rep
cmc
ljmp
aas
lock
push
or
xchg
dec
sar
pop
stos
xor
pop
test
push
sub
inc
popa
fcomi
in
test
adc
pop
fwait
adc
push
xchg
fs
fdivl
dec
inc
push
loope
cmp
mov
leave
cmp
push
bound
jmp
les
ficompl
inc
sbb
lea
mov
xchg
add
adc
sti
xor
sub
mov
push
jae
inc
lret
ficoms
xor
sub
xor
out
mov
inc
push
pushf
lcall
subb
pop
and
ljmp
jno
into
mov
xchg
loop
aaa
mov
dec
fcmovne
cmp
cmp
jns
jae
xor
or
sbb
insb
push
outsl
jnp
dec
pop
dec
scas
lea
xchg
unpcklps
popf
inc
add
cmp
push
aas
pop
inc
or
mov
mov
jns
or
push
adc
sbbl
mov
mov
push
dec
adc
or
fiadds
mov
or
aad
dec
mov
mov
mov
sahf
cmp
cmpsb
cmp
aad
jno
jmp
and
mov
push
jp
mov
js
sub
jle
xchg
sub
pop
sbbb
std
clc
les
pop
inc
push
pop
andb
insb
jne
jmp
ror
mov
push
mov
cli
pop
inc
fs
pop
int
xor
lds
cmp
jle
or
adc
sbb
std
or
jno
test
sub
inc
lea
add
lret
xchg
or
or
ss
xchg
cmp
insl
shlb
filds
mov
jle
dec
push
aas
dec
js
jecxz
test
out
push
dec
jmp
cli
cmpsb
pusha
sti
in
mov
test
ret
pop
xchg
pop
dec
push
js
cmpsl
stos
jmp
pop
xor
mov
mov
cld
or
test
push
dec
pop
or
mov
ljmp
adc
test
addb
jb
push
arpl
jge
cltd
scas
cmp
mov
pop
sahf
adc
test
pusha
adc
icebp
push
mov
out
sbb
shrb
dec
pop
xchg
popf
out
lods
sahf
add
sub
add
roll
pushl
xor
je
mov
pop
mov
jp
movsb
ljmp
in
lds
insl
shrl
xor
pop
pop
jecxz
loop
sbb
inc
cmp
fsubl
sbbb
push
xchg
sbb
popf
xor
divb
add
push
xor
aas
xorl
popf
scas
enter
sbb
pop
dec
sbb
inc
pop
cmp
xor
push
loop
lock
mov
mov
jle
jno
sub
pusha
or
xor
dec
stos
push
outsl
iret
xor
or
out
imul
add
fs
jns
lahf
pop
mov
movsb
and
arpl
hlt
outsl
shll
in
sub
rcrl
pop
lret
pusha
inc
data16
imul
dec
ret
fistps
ja
out
and
out
addr16
mov
add
or
push
dec
rcrl
sahf
xlat
xchg
or
les
lret
or
xchg
jmp
dec
cmp
and
pop
pop
test
rcl
ret
or
fidivrl
cmpsb
and
mov
fs
stos
push
or
cmp
sahf
cltd
cwtl
and
int
dec
arpl
push
fwait
lahf
pop
lds
test
jne
sub
lds
call
xchg
in
pop
adcl
adc
imulb
mov
or
xor
push
xchg
jmp
xor
stc
cmp
push
lods
jg
in
test
push
cmp
out
mov
cmp
cli
adc
adc
mov
dec
jnp
sti
jecxz
cli
cltd
and
cltd
xor
jno
repnz
jbe
xchg
es
popf
bound
xchg
xchg
sbb
mov
aam
es
pop
inc
aaa
not
push
pop
inc
lods
add
cmp
cmpsb
imul
lea
or
cld
xchg
pop
xor
xchg
pushf
xor
jp
and
jmp
int
jo
into
inc
repnz
sbb
orb
notl
mov
mov
xchg
and
rorb
jne
push
shlb
lods
mov
xor
push
scas
fisubs
in
cmp
lods
adc
int
or
mov
xlat
cmp
pop
adc
push
mov
int
sub
adc
pop
sub
push
sub
mov
xchg
addr16
xrelease
adc
push
xchg
adc
fcmovne
push
fstl
jle
jns
push
repz
jns
xchg
xor
rcl
inc
adc
test
es
das
fldenv
adc
xor
sub
jle
sbb
lahf
sti
aas
shl
mov
xchg
mov
bound
adc
pop
mov
sbb
dec
jecxz
repnz
stc
cmp
mov
mov
and
hlt
and
adc
mov
out
rol
fimull
xor
sti
pop
pop
cmp
cmc
dec
movsb
scas
inc
pop
adc
inc
daa
push
or
cld
or
sub
ljmp
xor
sbb
sarb
dec
std
mov
lret
fsubrl
lret
add
dec
in
pop
nopl
shlb
aam
xchg
and
dec
mov
aas
enter
test
sahf
push
nop
cmp
scas
cmpsb
ret
cmc
mov
sbb
xor
imul
xor
addr16
add
lds
xchg
and
xchg
movsb
aam
rcrl
xor
fstpt
ja
out
andl
sti
jbe
leave
out
xlat
inc
int
frstor
fcompl
inc
xchg
add
ja
lds
adc
stc
push
push
cwtl
mov
pop
mov
dec
and
dec
mov
repnz
je
jns
jne
in
xorb
fcomp
pusha
cmpsb
mov
outsl
jbe
call
mov
and
push
lods
mov
pop
inc
jg
dec
mov
movsl
scas
jmp
les
mov
dec
dec
call
lea
rol
push
jns
insb
pop
les
mov
mov
inc
insb
mov
pop
sbb
decl
enter
rcll
fbstp
daa
cmp
jns
push
lds
sub
adc
mov
pop
adcb
mov
jae
movsl
push
cs
clc
imul
pushf
or
lods
dec
in
xor
push
sbb
push
je
test
pop
or
dec
inc
mov
cmpsl
dec
sbb
ds
lods
stos
mov
in
out
pop
push
lock
add
pop
in
mov
stc
cmpsl
stos
fldt
mov
adc
lods
andl
pop
mov
mov
mov
mov
lret
movsl
cmp
add
mov
push
mov
aam
cmp
cs
ds
push
loop
outsb
xorb
notb
push
inc
pusha
mov
leave
cmpsl
ds
sub
pop
jnp
aad
mov
add
mov
sbb
mov
fidivrs
jb
or
mov
pop
dec
and
outsb
push
push
or
or
cmc
xorb
negl
adc
dec
iret
add
xchg
dec
sbb
lret
xchg
dec
jecxz
fwait
push
xor
xchg
out
or
mov
or
test
cwtl
and
inc
jb
outsl
sub
rclb
sbb
sub
sbb
aas
andb
mov
jg
cli
push
sub
xor
dec
loop
aam
nop
je
imul
clc
xchg
jmp
xor
fsubl
sub
mov
mov
mov
cmp
scas
shrl
mov
out
out
mov
sarl
das
in
mov
dec
shll
popl
sbb
lret
jg
mov
fsubs
sbb
out
cmp
in
or
popa
mov
or
rcll
jbe
mov
enter
and
push
dec
sbbb
loope,pt
pop
sub
test
arpl
jo
data16
loopne
arpl
pop
fildll
cmpsb
int3
idivb
loopne
iret
repz
js
dec
cmpsb
mov
xor
or
movsl
add
mov
wbinvd
in
mov
arpl
aas
imul
lcall
pop
fwait
outsl
rcl
inc
fsubl
std
scas
mov
js
mov
fstps
cmpsb
push
addr16
sub
and
push
fwait
jae
ret
xchg
jo
inc
xchg
data16
pop
faddl
mov
enter
call
test
loope
bound
pop
cmc
adc
iret
fidivs
repz
test
int
lds
add
shlb
jmp
inc
inc
push
dec
mov
mov
inc
push
pop
insl
or
or
cmp
and
les
lds
js
mov
pop
leave
lds
cmpsl
pop
cltd
test
inc
mov
cld
add
cmp
test
push
pop
mov
push
testl
inc
inc
jge
ja
adc
test
enter
inc
in
xchg
jmp
xor
cwtl
add
mov
lea
inc
stos
nop
out
push
xchg
test
jmp
lret
jle
hlt
fmuls
adc
lret
aam
xor
adc
and
mov
mov
mov
add
pop
add
fidivrl
pop
popa
and
sub
in
sub
adc
jno
nop
js
std
mov
adc
push
push
insb
mov
ret
adc
insb
sub
adc
test
sbb
pop
adc
or
sbb
popl
out
cmp
xchg
ror
dec
adc
hlt
adc
data16
pop
mov
pop
cwtl
test
or
iret
pop
call
daa
mov
in
adc
and
dec
loope
in
jns
lcall
js
ret
ret
push
jl
add
std
add
inc
in
movsb
mov
mov
stos
sti
dec
mov
xchg
pop
fdivl
pop
sbb
int3
daa
cli
or
pop
cmpl
mov
jns
cmp
outsl
inc
mov
outsb
xchg
lea
jmp
push
inc
ljmp
test
in
jo
add
das
scas
jl
mov
popf
jg
roll
int
out
add
incl
clc
dec
dec
cld
std
test
test
mov
xchg
insl
xchg
cli
pushf
dec
dec
push
mov
xchg
mov
adc
adc
jle
jne
mov
je
push
movsl
push
in
ret
aaa
xchg
sbb
mov
pop
push
fsubrl
out
sub
dec
loopne
loope
dec
call
aaa
inc
lods
mov
adc
jae
ja
lcall
insl
or
xchg
adcl
fdivrl
mov
push
jb
xor
sahf
leave
divb
lods
dec
and
cli
cltd
notb
mov
int
inc
cmp
mov
mov
js
aad
jmp
adc
outsl
mov
mov
movsl
adc
sbb
aas
cwtl
xor
das
mov
pusha
test
pop
mov
testb
iret
xchg
cwtl
iret
mov
jl
inc
or
mov
aam
xor
dec
std
movd
xchg
xchg
push
push
lahf
and
xchg
pop
inc
pushf
jnp
sub
pop
inc
and
and
insl
inc
inc
adc
out
aam
add
dec
or
mov
jmp
sti
aas
icebp
stc
mov
and
fstpt
push
cmp
dec
jmp
push
ds
mov
mov
js
repz
push
sahf
out
in
jae
mov
xchg
mov
cli
rcr
cmpsl
push
jbe
outsb
test
ficomps
jp
push
shl
add
mov
adc
arpl
lock
clc
sti
subl
mov
jmp
jne
stc
lahf
cmpsb
sbb
jle
pop
das
xchg
fucomip
adc
adc
sub
nop
insb
jbe
sbb
shl
ljmp
scas
xor
sahf
inc
dec
jge
jge
xor
jl
xor
cmp
pop
mov
cmp
xchg
pop
loop
jae
xor
std
or
add
stos
dec
pop
adc
ret
mov
jne
inc
shll
adc
mov
jge
mov
dec
insl
cmc
lods
xchg
daa
mov
les
mull
loop
lret
out
rorw
and
jl
imul
roll
pop
dec
mov
push
out
rcl
mov
ljmpw
insl
jno
mov
rclb
jle
rcrl
les
repnz
repnz
mov
inc
cmp
push
popf
fldt
mov
arpl
dec
add
in
es
xor
je
lods
in
into
enter
inc
imulb
inc
push
fistps
fs
sbb
sti
cmp
outsb
fwait
insb
cmp
sbb
and
movsb
cmp
mov
fldt
dec
mov
adc
fistl
or
aam
sub
arpl
dec
inc
push
mov
xlat
sbb
ja
mov
repz
dec
in
enter
add
imul
pop
mov
pop
lret
jae
test
adc
dec
loopne
dec
push
and
cmc
mov
rcll
xchg
inc
add
out
push
cmp
mov
pop
mov
add
push
mov
imul
jo
bnd
xchg
aam
pop
xor
pop
scas
mov
and
xlat
scas
ficoml
loopne
mov
adc
jecxz
iret
dec
insb
aam
loop
stos
cwtl
insl
pop
std
cmp
gs
sub
inc
mov
dec
sbb
movsl
icebp
in
push
test
sar
clc
bswap
pop
lods
lds
sbb
cmp
inc
xor
inc
cltd
cmpsl
in
mov
push
out
mov
jmp
outsb
dec
gs
sub
cmpsb
into
mov
jo
push
out
in
adc
xchg
fnstenv
popf
pop
test
pushf
pushf
and
sahf
pop
scas
ja
dec
test
jns
loope
out
adc
mov
fldcw
rclb
mov
mov
popa
mov
jo
xchg
or
dec
sub
inc
nop
movsl
xchg
sub
mov
xchg
jle
dec
or
idivb
push
cli
cmp
fldcw
mov
mov
jmpw
xchg
scas
shrl
mov
sbb
mov
jmp
insb
rcrl
jbe
lahf
xor
pop
adcl
repz
or
aam
leave
mov
ficoml
addr16
shrb
pop
add
loope
adc
shlb
outsl
mov
adc
or
xor
pop
fstpt
xor
jle
pop
sub
push
movsb
ret
shll
insl
inc
out
ret
lahf
cmc
push
mov
lods
adc
std
add
je
inc
fnstcw
push
push
adc
adcb
fs
stc
push
pop
mov
add
jnp
rep
test
adcl
dec
loope
sub
dec
repnz
xlat
dec
lds
out
dec
push
push
pop
loope
inc
dec
cmc
xchg
add
xchg
test
imull
outsb
into
jg
sbb
sub
jg
je
adc
mov
incl
add
jbe
movsl
sub
mov
mov
sbb
pusha
pop
add
dec
imul
loop
in
lods
fistl
jb
mov
andl
repnz
mov
rcr
push
inc
in
scas
adc
cmp
leave
fs
mov
std
fcomps
test
iret
pop
out
cmpsb
jmp
shl
aas
mov
and
cltd
xor
xor
inc
je
js
pop
lods
pushf
sub
push
loop,pn
add
bound
imulb
cmp
xchg
add
js
sahf
cmp
bound
int
dec
xchg
xchg
aad
ds
jno
js
push
dec
or
subl
mov
repnz
out
movsb
xchg
add
call
mov
push
ficoms
or
js
gs
fwait
outsb
outsb
ret
lahf
rol
clc
push
icebp
dec
push
rorl
xchg
sub
lcall
lds
adc
mov
lds
push
lods
cli
mov
inc
jbe
xor
ret
push
popf
and
xchg
lock
stc
inc
daa
fcomps
cltd
stc
popf
mov
loopne
test
cmpsb
movsb
leave
fildll
sbb
scas
dec
pop
mov
test
push
mov
pop
popf
or
cld
push
and
jle
arpl
sub
mov
add
aas
leave
pop
lcall
cmp
pop
scas
pop
jae
es
inc
lods
cs
mov
fisttps
pop
jne
out
push
jns
stc
and
les
cmpsb
mov
jg
mov
fistpl
popa
sahf
adc
lds
outsl
push
inc
int
inc
mov
sbb
jne
dec
jecxz
xchg
mov
imul
dec
jl
jle
push
add
xor
in
and
pop
and
fsubrl
lret
into
pop
hlt
into
cmpsl
sub
mov
push
jae
fisubrl
ret
icebp
js
fiaddl
test
mov
xlat
push
and
in
aaa
push
inc
lock
adc
mov
mov
arpl
ja
stos
and
cs
mov
cmpsb
pop
das
or
pushf
hlt
sub
loop
pop
cmpsb
sbb
cmp
xor
call
push
pop
pop
ja
push
sub
and
aad
leave
push
mov
stc
gs
int3
iret
or
xchg
jecxz
repnz
cmp
sub
shr
inc
hlt
inc
add
xchg
push
push
out
mov
cltd
addb
in
fisubrl
xchg
push
test
inc
std
add
lcall
mov
leave
mov
clc
insl
mov
pop
into
and
push
sub
push
push
sub
sub
dec
rol
fwait
push
add
xchg
xor
dec
xor
push
inc
sbb
test
es
push
clc
cli
inc
out
rorb
inc
mov
movsb
inc
jnp
out
popf
lock
dec
out
mov
mov
cmpsl
hlt
push
fldcw
fistps
and
pop
movsl
lret
or
pop
mov
cld
xchg
sub
lret
and
jl
jp
inc
out
stc
add
sub
mov
out
in
sub
and
mov
add
hlt
mov
push
out
insl
add
out
dec
fcom
jmp
aam
aas
and
mov
xor
jl
lahf
nop
ror
or
cmp
in
lret
movsl
notb
xchg
xchg
jge
ret
test
test
jp
daa
mov
js
inc
mov
mov
mov
add
push
into
add
jns
sti
sarb
in
scas
shrl
lea
pop
inc
push
xchg
loopne
push
lock
cmpsl
pop
sub
fnstcw
mov
arpl
mov
xchg
and
sub
icebp
mov
js
push
out
mov
fcoms
movsl
add
lds
rcr
pusha
xlat
sub
xchg
push
scas
out
in
dec
and
jns
aaa
ret
sbb
or
icebp
cs
or
cli
shrb
mov
xor
sbb
out
ret
adc
and
dec
ficompl
inc
xchg
sbb
inc
push
jnp
xchg
mov
incl
and
inc
movsb
loope
and
les
int3
arpl
push
dec
mov
ljmp
lds
mov
inc
push
pop
andb
xor
xor
xlat
mov
lret
jae
fwait
jmp
push
sbb
xchg
out
sub
mov
sub
pop
iret
lea
hlt
jne
dec
in
sbb
inc
lock
push
mov
mov
pop
push
outsl
inc
inc
frndint
inc
fldt
fidivrl
outsb
mov
adc
dec
lds
lods
mov
sbb
adc
es
push
sub
xorl
test
mov
push
fs
in
into
fxch
imul
xchg
sub
aaa
xchg
add
or
std
inc
movsl
out
pop
inc
icebp
inc
push
inc
fbstp
xchg
xchg
add
idivl
icebp
adc
in
push
push
addr16
xchg
imul
das
inc
mov
inc
ss
in
sub
xor
jb
xchg
xor
and
sbb
daa
lret
inc
or
je
dec
mov
add
xor
outsl
adc
pop
cmp
mov
mov
jl
and
inc
popf
aas
lret
and
leave
outsl
into
and
mov
pusha
js
pusha
add
push
adc
ss
xchg
fwait
and
in
jecxz
repz
inc
cli
mov
rcrl
xchg
cmp
push
loopne
pop
push
sahf
loop
cmp
xchg
aad
shll
aam
mov
push
pop
inc
sbb
gs
and
push
aas
dec
inc
jg
xor
inc
cltd
int
daa
pop
jmp
or
or
and
cli
xchg
in
jge
mov
xchg
pop
push
cltd
nop
mov
jnp
cmpsb
in
test
mov
sub
loopne
jge
pop
pop
and
repz
jp
inc
xchg
xchg
ds
push
es
out
push
incb
add
popf
sarl
xchg
mov
dec
ds
push
aad
jne
jo
aad
mov
fiaddl
add
dec
pop
xor
inc
shrl
mov
call
popf
add
mov
cmp
adc
jno
xor
jno
jnp
ret
xchg
cld
jle
lock
xor
push
and
shl
xchg
sbb
fadd
fidivs
lcall
int3
sarl
js
and
dec
and
leave
pusha
mov
mov
push
xlat
out
out
dec
add
adcb
lea
mov
and
cwtl
js
test
inc
pop
dec
mov
push
out
and
sub
test
nop
mov
stc
es
xchg
ror
sarb
cli
mov
mov
push
and
cmpsb
out
mov
pop
movsl
icebp
dec
pop
cs
fldl
dec
sahf
es
sbb
orb
pop
gs
fnsetpm(287
mov
push
cs
pop
sarb
and
inc
fcmovnu
xorb
stos
test
push
nop
and
xor
cmpsb
je
mov
jle
jne
or
adc
sub
arpl
fmul
push
pop
jecxz
sti
stos
in
lcall
or
mov
mov
jle
xor
xlat
push
dec
repnz
cmp
pop
cmp
mov
pop
int3
mov
push
movsb
push
lock
xchg
sbb
fs
sub
sbbl
dec
leave
jno
sti
insl
movsb
xchg
jg
pop
jae
inc
push
ljmp
jno
test
in
xor
inc
xchg
rcrb
enter
fwait
or
test
mov
sbb
idivl
repnz
push
jp
inc
push
andl
shll
or
push
imul
and
cli
add
xor
hlt
pop
sub
and
pop
inc
mov
push
orl
scas
pop
sahf
or
out
mov
fisubrs
xchg
fwait
hlt
cli
add
pop
pop
pushl
adc
mov
adc
xchg
add
notb
and
sbb
sbb
push
and
fxch
call
ret
or
aad
sbb
test
movl
mov
lea
cs
jne
inc
int3
push
jnp
cmpsb
pop
dec
outsl
fisubs
jno
aas
mov
insb
shl
cld
push
imul
lret
pushf
pop
dec
dec
mov
movsb
push
in
xor
add
dec
pop
sar
mov
xlat
cld
mov
iret
push
in
push
jp
leave
leave
data16
mov
mov
mov
jo
imul
add
push
pop
mov
pop
adc
xchg
shrl
popa
xchg
sub
jle
mov
push
pushf
and
mov
mov
mov
test
movsb
inc
adc
push
or
setne
push
sub
xchg
cmpsl
clc
xchg
cmp
int3
lods
cmc
mov
or
add
sbb
jo
test
in
lret
decl
sub
jmp
aad
lret
daa
aam
xlat
cmp
imul
inc
into
xor
xchg
xor
pop
jno
mov
aam
inc
out
and
jo
push
ljmp
scas
xchg
arpl
hlt
adc
sub
scas
sbb
fxch
add
cld
xchg
shrl
mov
cltd
cld
outsb
ret
and
xchg
pop
stos
testl
mov
scas
add
mov
out
stos
mov
and
mov
and
jg
stos
adc
sbb
dec
xor
mov
addl
int
or
jmp
mov
inc
in
push
andb
xorl
sub
cwtl
das
loope
in
mov
pop
nop
push
cltd
std
int
add
xor
icebp
sahf
gs
ljmp
call
push
jmp
data16
jmp
dec
jecxz
mov
adc
push
inc
xchg
push
stos
mov
nop
fbstp
inc
in
outsl
and
lods
jo
jne
mulb
sub
mov
clc
decb
xchg
cli
or
and
jb
mov
aaa
mov
insl
jl
pop
daa
pop
push
jmp
push
add
xchg
dec
fs
ret
loop
js
sub
cltd
pop
test
add
and
out
xlat
sub
or
divb
pop
int3
pop
or
mov
cwtl
outsl
xor
movsb
repz
test
mov
sbb
push
scas
push
aaa
adc
test
or
xchg
hlt
out
dec
fbstp
cmc
les
jae
popf
pop
lahf
fs
gs
add
xor
jo
xchg
roll
pop
scas
in
sahf
push
gs
xor
and
xor
test
push
je
fnstenv
jb
imul
push
cwtl
mov
mov
add
mov
sbb
sub
cltd
or
inc
adc
je
add
add
cltd
xlat
pop
out
rcr
jo
enter
in
test
rol
sbb
push
lods
and
xor
cmp
repnz
arpl
fstpt
mov
arpl
loop
add
cmpsb
orb
repz
xlat
test
xchg
mov
xchg
mov
sahf
mov
inc
call
aaa
test
rep
fldt
mov
scas
sub
dec
cmp
dec
fsubrl
xchg
mov
mov
dec
aad
in
shll
cmp
leave
call
push
aam
pop
aas
leave
int
jae
clc
in
mov
mov
ret
icebp
nop
call
or
out
cmp
pop
xchg
inc
repz
mull
sbb
inc
pop
mov
inc
push
rorl
inc
ret
sbb
adc
outsb
sub
pop
push
es
aaa
mov
xchg
pushf
jl
loop
dec
jmp
aad
lock
fidivl
xor
cmpb
lock
imul
lcall
daa
faddl
add
cs
adc
adc
push
mov
lret
stos
pushl
add
inc
xlat
sbb
outsl
cld
sahf
stos
mov
orb
lods
mov
stos
inc
ret
dec
mov
add
loope
sub
or
addr16
xchg
test
rcll
daa
outsl
imul
insl
rcr
lods
push
push
rcl
adcl
mov
test
out
lahf
ret
push
xchg
ja
mov
int
sbb
movsb
push
jg
inc
sub
daa
mov
lods
dec
sahf
xchg
push
sbb
imul
pop
push
mov
mov
loop
xchg
je
imul
sbb
stc
sbb
push
dec
push
mov
sbb
push
lods
aaa
cmp
push
mov
std
lods
add
inc
fistl
xchg
fisttpll
jb
fsubrs
add
sub
push
adc
sarl
decl
mov
dec
cli
sub
imul
mov
xchg
mov
aad
pop
push
test
jg
push
movsb
fcmovb
not
jg
pop
sbb
pop
add
dec
decl
subl
jp
sbb
sbb
jns
mov
xchg
imul
lea
jbe
pop
xchg
sbbl
call
inc
sbbl
push
das
xor
jns
dec
notl
imul
xor
pushl
jmp
dec
std
dec
cmp
mov
push
popa
popf
mov
pop
imul
pushf
push
dec
pop
imul
rcl
and
and
imulb
inc
xchg
repz
mov
dec
adc
cli
cmp
int
movsl
ja
sbb
js
decb
lret
mov
inc
fnstcw
or
shrl
inc
lcall
xchg
movsb
pushf
sub
je
sub
insl
mov
insl
cli
int3
inc
jae,pn
add
pop
sub
inc
jmp
in
mov
sub
push
andb
sbb
jle
sub
popf
nop
mov
sub
rol
mov
shlb
fcmove
jecxz
gs
outsb
mov
sahf
push
in
xor
cmp
les
adc
movsl
addl
int3
jne
add
dec
cmp
clc
jae
movb
lock
fwait
mov
jne
and
test
lret
jns
mov
mov
xchg
dec
arpl
adc
inc
imul
fs
dec
xchg
xchg
mov
and
inc
cmpsb
sub
negb
pop
incl
and
jle
daa
mov
xchg
neg
aas
imul
ret
insl
movsb
cmp
rclb
sti
push
xchg
add
dec
popl
pop
fdivr
dec
pop
jg
andb
in
das
outsl
mov
jno
jo
add
cmp
mull
sbb
jg
sub
stos
js
pop
outsb
loope
mov
mov
mov
incb
in
aad
xchg
sub
xlat
mov
jle
push
cmp
mov
sbb
xlat
cld
and
aad
mov
cmp
in
sub
iret
cmp
mov
mov
pushf
and
jnp
mov
mov
xchg
aam
test
mov
mov
inc
and
or
sub
sahf
dec
out
dec
jb
inc
mov
sbb
push
dec
movsb
repnz
and
mov
sub
imul
iret
xlat
mov
cs
pusha
pop
cwtl
jo
mov
adc
push
sbb
js
outsl
push
adc
fisubrl
push
xchg
jo
hlt
addr16
sbb
jmp
inc
loope
jo
loopne
jae
daa
rcl
out
sbb
xor
cmp
inc
popf
cmp
in
rcl
sbb
pop
mov
sbb
jbe
mov
xor
jg
shrl
insl
mov
fildl
lock
repnz
mov
mov
pop
sbbb
fildll
divl
ljmp
push
inc
push
add
mov
in
lods
inc
pop
cmpsl
out
lahf
xorb
divl
xchg
mov
out
dec
xor
test
inc
addr16
icebp
rcrb
dec
sub
and
inc
hlt
sub
mov
push
pop
xlat
pop
scas
sub
and
inc
lea
xchg
paddusw
jecxz,pn
jmp
int
ja
inc
stc
xor
lods
inc
lret
xlat
dec
adc
aas
jge
push
stos
cltd
pop
insb
lret
lret
fdivrl
adc
jae
mov
adc
mov
outsl
mov
mov
sub
es
mov
cmpsb
loopne
adc
stc
es
into
mov
das
xchg
cmpsl
sahf
add
mov
in
ss
jecxz
orl
fsubs
xchg
testb
ds
jge
dec
mov
lcall
stc
nop
sub
pop
pushf
mov
pop
addl
dec
mov
jno
loopne
mov
daa
jle
imul
flds
inc
push
outsb
and
xchg
cwtl
pop
loopne
cmpsl
fstpl
lret
dec
test
jbe
out
ljmp
js
icebp
and
in
add
out
lock
loop
pop
or
pop
mov
decb
scas
xchg
push
jno
push
ja
lahf
repz
sub
shlb
mov
mov
lret
pop
jae
xchg
push
inc
sub
mov
sub
or
and
dec
cli
aas
aad
adc
maskmovq
sbb
mov
xchg
nop
aam
out
lea
pop
jne
and
cmp
sub
jl
sbb
pop
inc
mov
mov
or
lds
hlt
sbb
pop
shll
pusha
jne
scas
inc
xor
outsl
adc
pop
mov
insl
outsb
je
lods
mov
mov
or
std
push
mov
les
kmovd
fisttpl
mov
aad
psubusw
adc
add
loope
jb
in
fstps
xorl
push
fistpl
insb
mov
sahf
arpl
sub
lahf
nop
jmp
xor
imul
lret
addr16
push
ljmp
jno
and
cld
cmp
shlb
loopne
aaa
add
push
popa
ljmp
and
jb
dec
xchg
dec
dec
mov
shrl
ret
jp
mov
sub
fisubl
rorb
mov
dec
sub
into
ja
es
cmp
xchg
sub
mov
gs
pop
xor
scas
bound
decb
mov
dec
rorb
test
mov
pop
jbe
push
lods
mov
mov
outsb
add
xor
and
dec
cmp
lds
lahf
icebp
inc
out
and
in
sub
pop
les
les
inc
stc
outsb
mov
push
dec
dec
jl
sbb
mov
pop
inc
pop
jl
loop
and
add
mov
xchg
add
pop
notb
imul
push
out
fldz
sbb
pop
push
xor
pop
jns
pop
cmpsb
adc
ss
mov
subb
fisubs
enter
in
xor
rcr
fbld
add
mov
arpl
and
in
movsb
out
mov
push
push
aaa
mov
mov
add
push
out
xchg
xlat
xchg
dec
int
or
call
addr16
and
mov
clc
and
dec
pop
fisubrl
dec
cli
sbb
mov
fisttps
adc
sahf
or
in
xchg
and
cld
push
int
cmp
rcrl
mov
sarb
add
xchg
sub
pop
stos
movsl
xorb
cmc
mov
mov
dec
mov
mov
pop
mov
sbb
adc
std
sub
xlat
push
add
pushf
cmpsl
and
fmull
aad
mov
jmp
lret
imul
xchg
sub
int3
data16
imul
adc
xchg
mov
and
clc
xor
scas
jmp
push
leave
push
inc
stos
ret
mov
cltd
xchg
jo
jno
xor
js
mov
fnsave
add
fs
in
pop
aaa
into
adc
add
inc
aas
xor
pop
js
or
xor
xchg
pop
pushf
xor
pusha
inc
icebp
pop
cmp
nopl
loope
test
addr16
dec
aad
mov
adc
sub
xor
pop
call
push
sub
stos
jb
mov
stos
or
xchg
or
sub
push
xchg
push
sub
iret
stc
jmp
rcll
sub
xchg
mov
sbb
shlb
das
mov
push
add
jl
fisubrl
add
mov
push
mov
add
popf
add
add
xor
test
movsl
scas
xor
repz
into
adcl
enter
test
mov
ljmp
cmpsb
lods
insl
fistps
hlt
sahf
add
sub
aad
xchg
mov
adcl
aaa
cmp
xchg
mov
pop
pop
shrl
out
aas
lods
imul
lods
mov
push
popf
roll
and
pushf
testl
xor
xchg
push
sbb
std
xchg
mov
sub
inc
jns
fsts
aam
or
cmc
mov
dec
cmp
rolb
cli
jo
sub
push
pop
scas
pop
hlt
push
and
mov
xor
rcll
jecxz
mov
verr
lods
mov
pushf
stc
iret
push
jp
sbb
idivl
fcomp
or
sbb
clc
pop
adc
cmp
sub
mov
cmp
sbb
daa
sbbl
mov
in
sbb
mov
jmp
aaa
lcall
push
inc
ret
aaa
scas
and
rcrb
push
loop
test
mov
hlt
mov
fidivrs
lret
jecxz
negl
pop
pop
dec
test
xor
adc
aam
xlat
mov
movsb
cmp
lods
mov
pushf
sbb
push
arpl
out
sub
iret
xchg
and
xchg
cmp
jno
sub
xchg
aas
aad
push
jne
mov
shl
imul
sub
pop
mov
xchg
xchg
int3
outsl
xor
imul
movsl
fs
stos
cltd
adcb
mov
std
cmp
push
shl
pop
xchg
jnp
lcall
sub
shr
jg
fs
xor
lods
rcrl
sub
js
test
sti
test
add
cli
and
lret
mov
xchg
enter
jns
lock
mov
cmovge
ljmp
or
cmp
or
andb
out
mov
fcompl
cmpsl
out
mov
or
cmp
add
mov
aam
test
test
jbe
or
je
ja
sub
xchg
lods
mov
iret
enter
je
mov
jmp
ds
jbe
aam
loop
sub
pop
mov
sub
in
sti
xchg
jbe
es
push
fbld
pop
out
sbb
ret
jnp
inc
jb
lret
xor
xchg
leave
stos
or
xor
loope
push
dec
dec
mov
cmpl
mov
adc
fsubrp
sbb
pusha
and
xchg
fdivl
pop
fldenv
xchg
or
stos
inc
pop
mov
jmp
mov
sbb
add
jo
push
movsl
lea
jle
push
scas
pushf
sbb
xor
pop
jecxz
out
jno
mov
cmp
add
sbbl
ds
inc
fwait
and
push
sbb
mov
int
sar
mov
movsb
stc
in
mov
sbb
push
cs
aad
cmp
jae
add
pop
xchg
sub
fmuls
add
je
loopne
inc
push
and
jae
add
inc
sub
adc
pop
fmull
lahf
and
sub
and
mov
or
cltd
mov
and
cmp
ret
repnz
inc
std
cmpsl
les
icebp
ss
mov
data16
mov
mov
aas
ja
lcall
stc
and
in
mov
sahf
scas
inc
in
jecxz
idiv
int3
ss
cmp
ljmp
push
pop
hlt
inc
sub
sbb
cmp
shrl
add
movsb
js
addb
aas
dec
fldt
inc
mov
push
mov
test
push
je
jge
mov
inc
xchg
shrl
mov
push
cmpsl
adc
cli
test
ss
pushl
nop
lahf
cld
arpl
das
pop
je
mov
jg
into
call
jns
int3
dec
add
pop
jnp
jnp
fdiv
aaa
pop
fucomip
xchg
ret
mov
ss
fcmovb
clc
push
lods
mov
lods
mov
fildll
push
mov
xchg
mov
cli
stos
mov
sbb
push
push
add
pop
and
std
xchg
cmc
mov
xchg
out
in
das
mov
mov
mov
int
sbb
inc
push
dec
movhlps
dec
imul
jo
jo
and
hlt
push
sub
pop
jo
adc
in
imul
mov
sub
cwtl
fsubl
dec
pop
cld
push
subl
xacquire
lcall
cwtl
pop
push
xor
mov
ljmp
jmp
adc
hlt
push
je
cmc
lret
mov
mov
mov
mov
and
inc
nopl
xor
gs
mov
mov
iret
ljmp
adc
adc
fidivrs
pop
mov
adc
mov
xchg
out
nop
lahf
jae
jge
orl
lret
xchg
xor
mov
bound
sub
jb
in
hlt
sbb
je
imul
stos
xor
shll
test
inc
mov
mov
sbbl
hlt
cmp
cld
mov
or
push
push
xchg
sub
fstpl
xchg
daa
shll
scas
mov
out
dec
std
push
repz
add
xor
cmpsl
jns
or
or
xor
xchg
jle
andb
jo
arpl
jb
mov
push
into
gs
int3
sbb
std
and
fstpl
lea
pop
xchg
lods
shrb
mov
jl
dec
lea
push
sub
rorl
push
int
fstpl
call
iret
add
sahf
pop
or
sti
cli
ljmp
pusha
or
inc
mov
xchg
loope
xchg
fidivl
scas
popl
std
mov
mov
or
cld
int3
mov
nop
aam
adc
xchg
fs
fadds
or
sbb
or
sub
cs
out
sub
mov
pop
cmp
dec
imul
outsb
xchg
ja
in
and
icebp
ja
sub
mov
xchg
test
pop
lods
sarb
loop
sbb
je
ret
je
xchg
addb
movsl
hlt
movsl
mov
jl
add
mov
mov
hlt
test
push
call
gs
mov
xchg
ret
test
xor
sbb
fistl
andb
push
or
and
inc
add
jbe
ljmp
sahf
mov
stc
loopne
cmp
mov
fstpt
lea
add
cmpsl
xchg
js
fsubrs
int3
cmp
mov
and
or
mov
pushf
xor
rcll
add
ret
dec
add
call
test
xor
pop
test
and
rolb
icebp
pop
xchg
xchg
aas
jge
lret
mov
mov
sbb
ret
shr
jno
mov
sub
cmp
sbb
jmp
loop
xchg
jnp
ret
mov
shrl
cli
jns
bswap
xor
xchg
mov
xchg
adc
fst
mov
mov
xchg
sub
test
shl
movsl
mov
lods
inc
ret
push
mov
bound
outsl
out
mov
testb
out
in
mov
cmp
mov
ror
or
and
aas
push
das
mov
mov
and
data16
adcl
jmp
sarl
xchg
pop
into
out
sub
and
aad
mov
jno
mov
xchg
or
pop
and
aaa
mov
cli
and
rorl
adcl
sub
xchg
out
aam
out
gs
out
test
lahf
push
enter
mov
xchg
js
les
mov
into
ds
scas
and
int
inc
hlt
icebp
lea
mov
loop
sub
in
inc
pop
sub
jns
xor
lcall
insl
lods
imul
fstl
lret
lret
shll
jb
lock
adc
mov
jno
cs
aam
inc
into
jp
out
mov
test
adc
and
cmpsb
cwtl
pop
sub
sahf
push
adc
add
and
outsl
fldcw
repz
scas
in
loope
shld
xchg
mov
or
bound
into
xchg
lds
add
cmc
je
addr16
xchg
sub
aas
sbb
aaa
aam
dec
loope
fidivrl
mov
sbb
loopne
sub
rcrl
xor
mov
or
cmpsl
xchg
jb
imul
lea
into
adc
cs
or
mov
scas
in
scas
cmp
lcall
jmp
or
cs
sbb
sbb
fdivl
cmp
ja
fnsave
lret
testl
pop
cs
stos
cmp
pop
clc
push
cmc
sub
shrl
xchg
insb
mov
cmc
mov
popf
js
mov
jecxz
pop
dec
test
cmp
pop
xchg
mov
int
xchg
lret
int
and
adc
popf
outsl
mov
xor
pop
cli
pop
add
push
mov
int
in
in
xor
push
inc
mov
popf
sbb
push
test
jmp
mov
outsl
pop
and
sbb
mov
ss
imul
mov
or
iret
rcl
pop
pop
data16
outsb
gs
adc
sbb
inc
or
fwait
xor
insl
incb
das
mov
jae
mov
scas
call
nop
mov
adc
mov
dec
mov
mov
xchg
jne
add
fdivs
les
pop
ret
outsl
ret
ja
pop
ljmp
in
rorb
push
jle
cmpb
fdivr
xchg
adc
or
pushf
sub
test
stos
popf
hlt
pusha
decb
mov
sahf
mov
lods
and
insb
xchg
mov
sub
mov
cs
dec
push
loop
insl
pop
inc
dec
and
lods
shrl
xor
int3
addr16
cmp
mov
add
lret
inc
into
stos
negb
push
pop
push
ds
les
rolb
xor
jmp
push
in
xor
and
sbb
xchg
xchg
xor
pop
inc
xor
sub
add
add
leave
fstpt
insl
sub
sahf
push
xor
fucomi
dec
or
std
xchg
inc
popf
jp
clc
push
and
iret
int3
xchg
or
jle
and
lahf
mov
cmp
out
inc
push
cmc
aam
clc
jb
cs
jnp
gs
sbb
xchg
aaa
add
xor
inc
cmpl
outsb
xor
popa
incb
pop
out
aaa
test
xchg
test
nop
push
mov
and
mov
mov
inc
incb
and
fdivrs
pop
aaa
sti
fcoml
cmp
xlat
sbb
lea
pop
sub
es
arpl
lock
test
mov
and
int
cmp
lods
and
or
mov
loopne
inc
arpl
in
push
stc
mov
aaa
stc
pop
cld
push
xchg
lock
pushf
pop
pop
sahf
inc
cltd
std
pop
sbb
sbb
inc
filds
dec
in
jp
ror
int
fbstp
jmp
adc
repz
es
loope
mov
aaa
cmp
scas
insb
lock
and
dec
pop
jbe
mov
xchg
add
mov
repz
lds
je
insb
jl
add
shlb
aad
add
mov
sbb
scas
push
and
xor
mov
mov
loopne
mov
sti
les
jnp
adc
cmpsl
add
or
clc
sub
mov
outsl
sti
rorb
push
or
xorb
jmp
xchg
int
add
or
in
cmp
xlat
jae
and
inc
adc
dec
mov
jle
iret
cmpb
pop
xor
call
popa
ret
xor
in
call
cmp
lret
and
into
fnstsw
jne
in
xor
ss
mov
rorb
pop
sbb
xor
mov
shll
push
or
aas
std
inc
cltd
mov
xor
push
or
and
idivb
int
xlat
inc
push
test
nop
sub
and
sarl
daa
lahf
jne
sub
xor
fidivs
das
jne
cmpsl
xor
insl
loopne
loopne
and
push
mov
xor
push
int
imul
cmp
adc
adc
xor
in
repz
repnz
push
call
cmp
je
jae
fstl
loope
mov
lret
xor
mov
fwait
shrb
icebp
mov
pop
icebp
sbb
out
jbe
mov
dec
mov
jno
cmp
cwtl
xchg
or
hlt
loope
mov
fwait
out
repnz
add
scas
xor
dec
out
std
jbe
ds
subb
orl
sbb
sti
loop
testl
mov
xchg
dec
sbb
std
xchg
pop
cmc
les
jecxz
addr16
sub
mov
pop
lods
mov
pop
outsb
mov
and
cmp
in
mov
mov
pop
pusha
fldt
adc
stos
add
cmp
push
and
repz
inc
xchg
pop
xor
outsb
push
icebp
sbb
inc
loopne
jnp
out
ljmp
outsl
cmp
push
jno
mov
movsb
mov
dec
inc
int
jbe
or
xor
jmp
mov
push
jg
and
or
inc
pushf
outsl
fdivs
sbb
mov
mov
pop
add
cmpb
test
jns
inc
dec
adc
fadds
outsl
push
mov
das
pop
dec
inc
sbbb
addr16
mov
add
and
shll
xor
xchg
lods
fistpll
lret
pop
xchg
scas
and
shlb
jle
hlt
xchg
pop
fwait
xchg
mov
idivb
xchg
repz
mov
gs
push
in
out
xchg
pop
ljmp
aaa
cmc
loop
mov
lock
xchg
cmp
fdivl
adc
je
mov
add
inc
and
adc
pop
aaa
stos
mov
in
lret
mov
push
mov
and
inc
mov
push
lahf
or
dec
ss
outsl
inc
fidivrl
add
xchg
cs
and
int3
mov
and
push
jmp
negl
inc
fmuls
ja
xor
sldt
xchg
orb
jb
roll
mov
lea
push
in
inc
fisubrl
insl
rorb
inc
push
cmp
repnz
xor
cmp
xchg
shl
sti
or
adc
loope
sbb
fldl2t
out
inc
pusha
dec
in
push
lea
fsubr
jmp
push
add
testb
or
shll
sub
mov
mov
cmpsl
sarl
dec
dec
lret
data16
jnp
scas
outsl
push
xlat
cmp
adc
mov
iret
es
pop
lods
xchg
cmp
lcall
movsb
bound
xchg
mov
mov
cwtl
sub
pop
cmp
leave
int
imul
in
fstl
adc
lods
xchg
in
push
das
rcr
fisttpl
int3
out
enter
xchg
dec
out
pop
mov
iret
jmp
and
jns
push
out
jg
ja
pusha
mov
cltd
push
or
push
in
std
sub
pop
aas
xorb
pop
cmpsb
push
push
or
sub
int
mov
mov
adcb
sub
shl
add
cmp
jl
xor
mov
rol
pop
xchg
inc
dec
jmp
out
pop
xor
mov
inc
ficomps
mov
sti
add
nop
sub
sbbb
iret
dec
lds
mov
pop
test
mov
scas
aad
or
xchg
inc
out
daa
cmp
xchg
mov
and
repnz
push
xchg
sub
std
std
jge
adcl
sahf
test
jle
cmp
xlat
push
jne
pop
movsb
repnz
xchg
pop
cmp
dec
add
push
mov
pop
and
sti
cs
mov
js
pop
mov
daa
sbbl
shll
sbb
sbb
mov
test
push
pusha
ss
enter
push
repnz
xchg
mov
cmp
pop
lret
mov
jno
data16
adc
cmpl
and
inc
or
lods
sbb
pop
sub
cmp
lret
gs
push
sahf
lds
dec
inc
inc
cld
cmp
lea
out
pop
sbb
arpl
sti
sbb
xor
adc
add
pop
inc
inc
aad
in
cmp
jo
push
dec
jmp
sub
mov
jge
arpl
les
jmp
jo
ljmp
icebp
sbb
jecxz
lret
mov
aaa
fs
loopne
jmp
inc
dec
dec
filds
xchg
ja
mov
testb
sbb
mov
mov
push
mov
ss
jle
mov
ficompl
mov
jo
push
xchg
jb
enter
push
fst
xor
iret
lahf
gs
inc
cmpsl
fildl
jge
inc
jl
ja
lock
rcrl
lods
fisttpll
sub
push
jo
jl
xor
mov
bound
in
mov
ljmp
lock
mov
sbb
mov
fidivs
jb
mov
sbb
or
sahf
inc
fs
enter
adc
sbb
or
repz
xchg
ds
push
jl
fwait
push
ret
push
bound
sub
pop
cmp
adc
divb
test
leave
cmp
test
scas
cmpsb
mov
rcrl
je
rol
pop
pusha
mov
in
xor
fldt
push
sbb
nop
fwait
call
xor
sub
cmp
cmp
push
sahf
mov
and
shr
mov
adc
shll
mov
adc
xor
out
jo
pop
repnz
loopne
inc
add
bound
gs
scas
das
arpl
push
lea
cmp
pop
sbb
mov
add
js
daa
pop
aad
pushf
test
scas
bound
fisubs
je
mov
rorl
add
bound
fwait
and
inc
arpl
mov
movsl
bound
rcll
mov
xlat
fistpl
mov
das
repnz
in
inc
adc
int
mov
cmpb
cmc
pop
test
push
imul
clc
leave
aas
push
sti
sbb
sub
incl
and
sub
pop
inc
cmp
outsl
push
cmpsb
jp
mov
fists
in
test
cltd
je
jmp
xlat
pusha
fucomi
repnz
push
call
mov
push
jl
in
sahf
mov
sti
jbe
pusha
fistps
iret
icebp
mov
and
lret
inc
bound
aas
jmp
add
scas
mov
inc
jl
shl
inc
push
jg
in
sub
mov
lcall
call
jge,pt
out
sbb
adcb
push
add
jmp
mov
lds
push
fwait
shl
movsb
push
and
fidivrl
cmp
popa
jnp
add
jle
sub
jae
adc
mov
cmc
push
dec
out
pop
fsub
and
xlat
jbe
aas
pop
popa
sub
or
es
sbb
push
loope
int3
push
stc
and
and
mov
movsb
ret
lahf
xor
lret
sbb
lods
add
xchg
fdivrs
and
hlt
mov
sub
lods
addr16
mov
push
jns
ljmp
enter
push
mov
cmp
xchg
testb
jecxz
in
or
cld
sbb
push
ds
xor
rcr
fdivl
add
mov
lods
fnstcw
stos
inc
jl
sub
inc
rorl
add
jl
pop
sub
xchg
loope
push
sub
insb
test
cmp
pop
xchg
stc
cwtl
dec
jle
pushf
mov
les
push
iret
adc
iret
xchg
jae
popa
add
adc
inc
jnp
cmc
adc
ret
outsb
fnsave
xchg
push
fisubrl
cmpsl
icebp
pop
and
lods
xchg
imul
in
das
test
add
cmp
mov
mov
icebp
pop
pusha
repnz
sbb
xor
repnz
xor
add
dec
inc
aaa
xchg
stos
test
fdivrp
or
scas
pusha
iret
faddl
js
mov
loopew
jp
or
cld
xchg
push
pop
pop
daa
lahf
lock
mul
repnz
jl
das
mov
test
and
insb
jecxz
jle
cmp
loopne
shl
jnp
pop
insl
adc
jnp
dec
leave
cmpsl
xchg
pop
fldl2e
aam
rolb
mov
jb
out
aad
popa
and
add
out
jbe
paddsw
pop
mov
clc
ret
xor
insl
xor
jge
outsl
or
jge
xor
mov
ret
mov
clc
out
popa
jbe
push
movsl
test
sub
test
mov
in
cli
or
and
pusha
aaa
or
xchg
jp
ret
pop
push
push
pop
les
pop
lds
cmp
or
daa
sub
mov
inc
aas
stos
loop
and
add
or
push
mov
pop
in
xchg
out
roll
pusha
or
xchg
loopne
fmuls
lods
pusha
bnd
jg
xlat
pop
or
test
daa
in
dec
aaa
push
int3
andb
push
scas
add
jnp
sbb
repnz
add
adc
imul
test
js
dec
pop
cmc
fcoms
add
sarb
inc
gs
push
ljmp
lea
adc
call
inc
mov
in
aad
andb
mov
fcoms
cmpsl
ficoms
adc
cmp
test
cmp
adc
mov
mov
sub
aam
lcall
hlt
pop
mov
neg
aam
and
mov
test
push
movsb
mov
mov
stc
jle
das
mov
test
int
inc
adc
test
test
movsb
lods
aas
xorl
pop
mov
mov
adc
sbb
testl
clc
repz
into
dec
jmp
push
xchg
and
test
mov
xor
or
enter
in
scas
ret
imul
lods
insb
mov
jne
pop
cmp
jo
int3
rclb
movsl
add
fdiv
adc
mov
adc
xor
add
imul
call
mov
add
push
mov
idivb
adc
popf
sti
jge
cmp
loopne
jl
popa
add
cmp
and
and
lods
inc
jo
mov
lea
adc
or
xchg
add
popf
daa
or
inc
or
adc
jl
xor
fldcw
sbb
jno
push
sub
dec
leave
dec
mov
fstl
sub
cwtl
test
sbb
push
je
jns
je
xchg
daa
testb
xchg
xor
shrl
mov
gs
cmp
in
es
push
and
adc
divb
loope
lods
adc
test
jno
pop
add
sbb
lcall
add
add
in
xor
cwtl
mov
jb
popf
jae
iret
pop
lds
jmp
idivl
icebp
sub
jecxz
jle
cmpsb
shll
shlb
jmp
out
lock
xlat
cmp
push
movsb
mov
xlat
push
jae
push
jge
inc
xor
test
sbb
xor
dec
outsb
popa
push
mov
mov
pop
mov
sbb
dec
jnp
xor
xor
pushf
in
clc
sub
jo
jl
sub
xchg
xchg
sub
mov
sub
cltd
popa
pop
inc
aaa
pop
cli
popa
mov
cwtl
dec
mov
pop
xor
and
cwtl
or
or
or
fwait
test
xor
out
adc
fistpl
xor
nop
jge
pop
aaa
jl
inc
add
stc
rorb
cmp
das
inc
inc
push
cmpsl
push
lock
test
mov
jecxz
sub
dec
roll
mov
insb
jle
pop
cmpl
pop
push
loop
and
inc
daa
or
xchg
imul
inc
fcompl
jnp
mov
jae
rorb
jmp
lret
xchg
jae
in
jne
mov
or
nop
test
inc
in
sbb
xor
push
jne
sbb
push
fidivs
jae
or
cmp
mov
sbbb
pop
sbb
jge
and
lea
jge
and
xchg
fists
push
jmp
mov
mov
cmp
cmpsl
or
push
sub
rcrl
or
sbb
repnz
ja
int
int
mov
mov
pop
lods
in
xchg
or
push
inc
frstor
jmp
fisttpl
push
jbe
adc
jb
arpl
js
fiadds
call
fildll
paddq
mov
push
outsl
sub
mov
cmc
jmp
inc
lcall
pop
lods
aaa
out
test
lock
xor
push
hlt
pop
mov
or
inc
lcall
mov
jnp
xchg
icebp
in
aam
int3
or
jbe
xchg
adc
sar
in
out
outsl
pop
scas
mov
push
adc
mov
xchg
sbb
push
sub
lahf
jb,pn
mov
bnd
pop
push
pop
nop
sub
jns
out
ljmp
pop
stos
xchg
sbb
xchg
inc
mov
cwtl
xor
add
sbbl
outsb
mov
mov
xchg
in
add
add
and
pop
fnsave
call
jge
sahf
or
rorb
push
push
pop
iret
int
cmp
stc
adc
popa
push
outsb
pop
dec
and
jecxz
xchg
enter
loop
sbb
pop
fucomp
cltd
jp
shlb
sub
lret
pushl
sahf
or
sub
aas
sub
add
add
es
add
dec
loop
jae
inc
popf
shrl
fstpt
push
cmp
lahf
lret
mov
mov
pop
mov
cltd
int3
pop
mov
mov
test
pop
cmp
adc
outsb
andl
enter
push
fwait
mov
enter
adc
inc
add
sbb
pop
xchg
stos
enter
jge
outsl
movl
sbb
mov
mov
fwait
mov
les
mov
add
rol
ficoml
fsts
xchg
subl
cwtl
xor
push
dec
in
adc
insl
add
pop
out
xor
push
sbb
std
js
movsl
mov
test
mov
jmp
mov
cmp
mov
xlat
sub
bound
xchg
xorb
xchg
push
xchg
dec
inc
cmp
hlt
inc
add
imul
repz
xchg
movsl
pop
pop
push
cwtl
xchg
xor
jb
inc
test
jbe
or
add
loop
inc
add
jecxz
add
psadbw
push
das
les
dec
jbe
add
insl
fbld
cmc
je
or
inc
fs
mov
gs
popa
jae
inc
enter
inc
lea
repnz
in
cs
pop
dec
addr16
fdivrs
mov
clc
loope
mov
fistpl
push
shlb
fsubl
push
out
mov
popf
in
push
iret
andb
dec
mov
aad
push
sub
cmp
repnz
pop
dec
daa
pop
mov
dec
mov
inc
fwait
mov
push
addr16
in
addl
outsb
and
jb
test
push
jb
int3
jecxz
jb
xor
cs
mov
or
mov
inc
dec
lds
push
xchg
inc
inc
and
cmp
xor
mov
and
mov
cmpsl
sarl
jle
sub
insb
aas
cld
ret
fs
add
mov
lods
xor
dec
lods
push
jne
outsb
cmpsb
lock
loope
dec
xchg
std
testl
call
fs
sub
mov
sub
arpl
das
into
dec
mov
sub
daa
sahf
and
stc
pop
xor
mov
mov
adc
bsf
or
sbb
mov
xor
pop
push
jle
push
sub
in
mov
xor
sub
ret
dec
pop
pop
pop
xchg
stos
xlat
lds
ret
sbb
xchg
add
sbbb
inc
repnz
cmp
into
dec
and
push
test
mov
cmpps
outsl
arpl
xor
push
lods
test
dec
xor
push
mov
and
adc
in
sbb
jle
mov
push
xchg
icebp
mov
shrl
aas
stos
ret
adc
mov
scas
adc
and
out
outsl
adc
sti
inc
mov
std
inc
jecxz
add
decb
push
out
sbb
add
cld
setnp
in
mov
xchg
clc
pop
push
xchg
jmp
cmp
or
pop
xchg
jmp
jl
inc
push
mov
sub
sahf
or
mov
pop
mov
push
jg
cmpsb
push
loope
out
xchg
daa
sub
or
jbe
sahf
cmpsl
testb
adc
mov
fbld
pop
pop
call
inc
dec
outsl
arpl
sub
dec
in
mov
mov
outsb
pop
daa
stc
add
out
leave
lahf
adc
or
sub
lds
testb
les
shrl
sub
mov
movsb
pop
mov
and
inc
movsb
dec
loop
mov
lret
pop
push
rolb
js
mov
cltd
jae
and
sbb
mov
xor
sbb
push
ljmp
mov
cmc
les
dec
arpl
sarl
lahf
loopne
mov
sub
pushf
pop
icebp
daa
std
jns
sbb
cs
sub
insb
dec
jp
pop
fisttpl
stos
mov
ror
sub
pop
mov
adcb
popf
out
and
push
fldt
fidivrl
cmp
sar
rcrl
in
out
or
xchg
dec
pop
popf
xchg
inc
adcb
cmp
xchg
outsl
adc
push
sbb
je
cld
or
fst
fsubs
loope
sahf
mov
xchg
adc
lods
xchg
mov
cli
scas
mov
pop
andl
ds
jge
nop
pop
lock
or
push
mov
dec
adcl
in
sub
add
pop
jo
mov
xchg
or
repnz
insl
shlb
int
jbe
and
push
out
adcl
test
mov
sbbb
jp
bswap
daa
mov
xor
mov
push
fcompl
xor
outsb
or
in
fwait
mov
test
cs
lock
xor
mov
xchg
mov
sbb
adc
int
mov
mov
and
cmpsl
fidivrs
lock
pop
fs
or
pusha
push
push
sbb
sarb
or
dec
adc
mov
jecxz
cld
adc
push
xor
sub
xchg
mov
insl
loopne
pop
push
flds
cmp
add
sbb
inc
ficoms
jmp
inc
jecxz
mov
fisubrs
cmc
push
sub
ret
in
fwait
inc
scas
or
sub
sbb
dec
jecxz
sub
jns
imul
mov
jns
fcomps
jne
insb
mov
and
push
nop
adcb
in
and
cmp
clc
sahf
lods
arpl
fldl
sub
subb
movsb
sarb
cli
icebp
push
push
outsb
xchg
popf
xor
lds
sub
fs
stos
arpl
subl
lods
sbb
xchg
sbb
shrl
sub
nop
or
cmpsl
pop
cmc
mov
pop
lea
or
sbb
inc
sahf
aam
ret
mov
adc
ret
xchg
jmp
fists
lods
push
mov
push
insb
ja
or
pop
jle
add
jge
fstl
xchg
ret
jae
push
mov
sbb
adc
xchg
scas
fcoms
rcrb
cmove
jbe
jmp
scas
pop
ljmp
mov
imul
pop
mov
imul
out
inc
jns
inc
std
inc
mov
add
fimuls
ret
int
jae
mov
adc
mov
inc
jp
sbb
fcoml
jg
adc
inc
push
shrl
jg
jg
xor
sarb
mov
mov
test
ret
outsb
pop
mov
test
mov
jle
ja
sbb
pop
jns
int
sub
mov
in
xchg
out
push
in
fstpt
dec
shrb
inc
and
repz
lret
adc
jae
cmp
lods
enter
stos
mov
call
loop
mov
xor
shrl
das
rorl
mov
mov
or
mov
xor
out
adc
dec
aam
jle
dec
push
out
scas
addr16
into
sub
dec
mov
pop
push
or
out
outsb
pop
xchg
adc
mov
jno
mov
adc
jno
jle
cld
push
inc
ret
push
call
xor
in
pop
or
adc
les
add
add
push
js
sub
sbb
test
out
data16
pushf
insl
add
push
jo
inc
push
data16
cmp
mov
dec
iret
push
sbb
xchg
xor
les
dec
bound
loopne
mov
in
cmp
xor
inc
imul
cwtl
fldcw
pop
mov
sbb
pop
iret
inc
or
jo
cwtl
mov
gs
bound
aad
or
lret
shrl
xchg
into
hlt
fs
ljmp
jle
nop
cld
xchg
jl
ret
sbb
xor
push
sbb
ds
pop
xchg
mov
fildll
imul
mov
ret
pop
and
popf
cltd
inc
in
or
mov
fisubrl
imul
or
imul
push
jnp
xchg
inc
pop
xor
daa
mov
mov
lret
xorb
stos
loopne
adc
cmp
dec
or
aam
ja
pop
xchg
iret
in
inc
negl
push
sbb
and
sbb
push
dec
cmpsb
xchg
pop
mov
lret
subl
insb
push
add
xchg
mov
push
push
xchg
scas
mov
sahf
mov
shlb
mov
in
rcrl
or
xorb
inc
clc
pop
push
push
les
push
add
cmpb
insl
sub
rclb
jae
clc
push
das
popa
push
push
leave
fnstenv
out
shlb
sarb
mov
xor
imul
and
mov
hlt
aaa
and
imul
mov
jmp
inc
mov
or
cmp
xchg
ds
pop
sub
add
inc
sti
mov
neg
aas
stos
outsb
jl
pusha
ljmp
jmp
movsl
xchg
mov
cs
mov
into
xchg
push
pop
and
fdiv
mov
or
cmpsl
cmp
stos
pop
push
roll
addr16
pop
cmpsl
pop
aad
rcrl
aad
adc
fst
mov
lret
hlt
adc
mov
sbb
std
xor
or
mov
lea
mov
xchg
and
in
hlt
pop
adc
mov
std
cmp
pop
cmc
or
jmp
lds
es
add
scas
inc
int
xchg
cld
jnp
sbb
dec
add
data16
fwait
mov
fucomip
push
ret
mov
xor
mov
fidivrs
rcll
push
xchg
dec
adc
pusha
or
lcall
cwtl
pop
movsl
cmp
rolb
sbb
push
insl
add
das
push
inc
les
inc
cmp
loopne
repnz
ss
jb
and
call
add
in
test
insb
nop
jnp
int3
or
mov
push
outsb
orb
cmc
js
pop
jmp
stos
adc
xchg
or
lret
mov
push
cli
pushf
lcall
inc
in
sub
lock
mov
jl
sbb
addr16
mov
shr
fdivl
or
mov
mov
sti
xchg
and
sbb
mov
andl
push
sti
shl
mov
es
and
add
mov
cld
inc
cmp
and
ljmp
or
inc
repz
push
mov
sub
xchg
jmp
rclb
jo
xchg
js
cs
aam
frstor
cmp
lcall
stc
je
push
clc
jae
loop
outsb
enter
pop
arpl
icebp
dec
sub
cmc
push
sub
cmp
dec
and
add
mov
xor
add
cmp
subl
daa
xchg
mov
out
mov
lcall
or
mov
imul
sub
mov
jno
sub
dec
iret
and
xlat
out
int3
push
jb
and
inc
fimuls
adc
inc
bound
xor
out
or
jle
lea
not
add
scas
cmp
shll
cmp
or
mov
and
lcall
bound
xchg
cmp
mov
movsl
cmpsb
cmp
std
dec
inc
data16
push
mov
pushf
ficomps
mov
xor
push
push
mov
icebp
add
inc
das
xor
clc
lret
and
gs
cmp
rclb
out
popf
sub
cli
repnz
out
jb
sahf
lret
shlb
adc
arpl
or
das
mov
jo
adc
cmp
idiv
dec
mov
mov
in
lods
add
and
xlat
shr
cld
jmp
cld
ds
adc
dec
adc
mov
dec
lods
scas
xor
or
pop
rcrl
and
stc
cmp
sbb
inc
test
push
sarl
cmc
cmp
mov
xor
les
addb
ljmp
fistl
sbbl
xchg
dec
cmpsl
adc
je
jo
shrb
cltd
cld
xchg
lret
mov
sbb
lods
mov
lods
in
push
in
xchg
loop
aam
mov
xor
jmp
inc
pop
cli
clc
mov
mov
cmp
inc
xlat
outsl
cmp
jno
xchg
rorl
lods
inc
into
mov
push
or
mov
fadd
cmpsb
or
mov
fcomps
sbb
mov
ja
shll
scas
mov
ljmp
cmc
and
lret
loopne
movsb
int3
loopne
mov
xchg
data16
push
jg
subb
loope
inc
add
lret
xlat
or
test
scas
and
cld
inc
in
push
mov
arpl
and
fiaddl
popf
and
cmp
mov
push
xor
notl
sti
pop
push
pop
dec
xchg
fwait
outsb
dec
cmp
das
popf
adc
loopne
in
imul
movsl
addr16
mov
dec
outsb
pop
scas
and
nop
loope
add
outsl
ja
mov
popf
fdivs
aad
ficompl
and
or
loopne
jecxz
and
or
loopne
cmpsl
pop
inc
andl
or
push
in
jl
gs
std
mov
mov
int
pusha
jp
test
cmp
ret
sar
jcxz
jne
loope
cmpsl
sbb
sbb
les
pminub
inc
jmp
test
xchg
cmp
adc
or
xchg
loopne
jle
or
xchg
jp
sub
pop
repnz
incl
sbb
insl
int
mov
dec
mov
ja
sti
push
imul
xor
mov
ss
int3
pop
loope
inc
adc
or
cli
sub
fisubl
loop
decl
push
inc
imul
mov
lods
dec
fwait
push
mov
cli
and
into
inc
lods
sbb
bound
jb
insl
js
es
xchg
popf
jne
push
cs
lods
jge
jo
stc
dec
fisubs
scas
xchg
les
cmp
push
nop
jo
data16
adc
xchg
bound
add
mov
lret
daa
sahf
jg
cmc
and
pop
push
sbbl
mov
movsl
lds
sub
sbbb
pop
lods
test
push
les
jle
push
fldcw
out
fsin
jmp
jecxz
and
push
cmc
lcall
rcll
sbb
sub
dec
loope
cmp
repnz
mov
xchg
dec
xchg
rolb
push
mov
add
cmp
inc
pop
cmp
lds
frstor
mov
rcrl
es
int3
xchg
lret
sbb
jb
pusha
lods
xchg
lahf
out
xchg
xchg
mov
jno
jmp
or
cmpsl
outsl
push
sbb
pop
fldenv
push
mov
hlt
or
pop
loop,pt
and
movsb
bound
mov
fidivs
or
dec
out
mov
inc
sbb
in
jl
test
mov
flds
and
xor
sbb
aad
add
and
pop
adc
hlt
mov
loopne
aaa
xlat
mov
out
test
mov
into
ficoms
test
in
mov
cli
fisubrl
xor
push
or
mov
pop
jl
int3
mov
xchg
fwait
pop
jno
cmp
scas
call
pop
or
test
and
outsb
test
push
cmp
dec
shll
add
xchg
mov
adc
incl
ja
mov
sub
push
xchg
sub
mov
mov
pushf
and
sarb
fistpl
ror
dec
out
sub
xchg
xchg
xchg
insl
sub
ss
and
push
mov
xchg
and
push
push
cmp
sub
in
inc
mov
enter
bound
rcll
dec
pushf
sub
or
mov
cwtl
mov
cli
in
push
and
xchg
adc
push
pop
dec
out
lea
mov
and
and
mov
lods
xadd
js
rcrl
outsl
push
push
mov
push
pop
adc
jb
sti
add
or
mov
jbe
pop
arpl
movsb
mov
data16
test
stos
inc
mov
dec
xor
loopne
mov
pop
cmp
cmp
adcl
lods
inc
jns
adc
push
sbb
loopne
sub
aaa
sahf
lock
ja
adc
data16
cs
fbstp
je
mov
mov
mov
shll
outsl
nop
daa
xor
pop
cld
test
scas
inc
inc
frstor
sbb
ret
mov
cmp
cmp
fistps
xchg
lds
addr16
and
lcall
adc
and
sti
fsubl
cmp
mov
jne
cli
push
fdiv
ljmp
dec
dec
mov
in
mov
cmp
push
fadds
push
inc
lret
mov
aas
xor
inc
pop
inc
pusha
hlt
sti
xor
int
adc
cmp
jecxz
popf
rol
and
sbb
inc
fs
repz
lcall
clc
popa
jnp
cwtl
in
insl
inc
cwtl
scas
mov
fs
xchg
or
lock
dec
inc
pop
inc
inc
shrl
lret
fists
xchg
pop
andb
sub
loope
inc
mov
rcll
inc
cmpsb
dec
cmp
dec
pusha
dec
sti
repz
inc
sbb
in
mov
and
lock
jmp
jmp
xor
mov
dec
pop
scas
adc
or
pushf
and
push
cmp
insb
xor
gs
xchg
inc
subl
pop
and
mov
jge
jmp
adc
aaa
jl
enter
cmp
mov
fcmovnb
mov
bound
add
in
iret
sub
sub
sub
jns
subl
jb
push
out
aas
fwait
hlt
dec
mov
lcall
push
mov
sarb
pop
jo
lret
popl
jns
xchg
inc
leave
fabs
cmp
add
cmpsl
out
inc
sbb
xchg
out
and
pop
add
mov
call
dec
add
jmp
lea
xchg
rcrb
xchg
dec
and
push
mov
cmp
inc
xchg
ljmp
sbb
mov
sbb
mov
add
fnstenv
test
enter
xor
shlb
stos
jmp
push
hlt
das
fnsave
jae
fistps
add
scas
inc
fsubl
jecxz
lret
movl
sub
imul
sahf
popf
pop
mov
and
icebp
ss
mov
add
jns
and
test
mov
cmc
cmp
clc
inc
or
sub
mov
fmuls
ja
pusha
stos
in
in
and
int
cmp
loopne
in
in
inc
out
inc
fnstcw
inc
inc
dec
push
in
xchg
inc
jmp
movsb
sub
in
or
cmp
push
js
mov
jae
xlat
push
sahf
pop
jecxz
push
push
sahf
or
je
movsl
cmp
lods
inc
jo
xchg
xor
and
inc
push
fisubrl
je
enter
sub
clc
js
movsl
mov
push
adc
sub
lods
cmpsl
mov
in
mov
int
inc
mov
fs
iret
imul
jge
or
adc
fildll
dec
pop
inc
mov
add
mov
lea
insb
test
les
gs
out
inc
fnstcw
mov
mov
movsb
sti
adc
xchg
sbb
jg
xchg
sub
mov
cld
cmp
cmp
pop
push
inc
andb
mov
hlt
push
cmp
lcall
jecxz
ficoml
cmc
xor
in
enter
and
mov
dec
xchg
add
dec
in
xor
adc
inc
mov
or
xor
inc
pop
pop
inc
mov
cmpsl
mov
pop
xlat
mov
movsb
stos
and
cmpsl
sub
lock
sub
aad
and
fbstp
popf
mov
cs
and
fildll
mov
subw
shlb
hlt
sbb
mov
outsb
fcoms
mov
repz
push
push
cmpsl
lock
cwtl
push
mov
outsl
dec
adc
pop
dec
loopne
hlt
cmp
enter
leave
lgs
or
push
sbb
insb
mov
aaa
int3
imul
fidivs
mov
aad
mov
ret
dec
add
cwtl
cmp
aas
push
pop
je
fdivs
mov
lret
clc
mov
imul
frstor
mov
lret
popf
adc
clc
orb
addr16
stos
in
mov
movsb
sbb
pop
mov
fcmovu
mov
popa
cmp
dec
inc
pop
repnz
push
xchg
add
push
mov
xchg
adc
pushf
push
out
push
dec
adc
loope
mov
add
sbb
xor
cmc
inc
inc
fdivr
insl
fdivrl
sbb
xor
dec
cmp
daa
out
xchg
add
cmp
xchg
or
jecxz
inc
and
out
or
pop
rol
mov
fsubr
insl
jns
mov
cmpsl
mov
mov
aas
pop
mov
jae
inc
imul
inc
mov
pop
push
cmp
dec
out
xchg
and
sbb
loope
scas
jge
daa
inc
inc
stos
ja
adc
fmuls
and
enter
jge
out
inc
hlt
pop
je
dec
adc
push
dec
xchg
ljmp
sbb
scas
inc
mov
ja
loopne
adc
push
fnsave
cmc
inc
add
jg
xor
inc
shlb
push
gs
test
jg
lea
stc
or
loopne
iret
lcall
in
std
lcall
ja
add
adc
pop
pushf
adcb
and
dec
mov
inc
sub
into
xor
inc
inc
aas
push
negb
sub
or
out
fimull
sub
jnp
inc
sbb
jne
arpl
pop
or
loop
add
cmpsl
mov
push
stos
rcrl
add
pop
cwtl
mov
sbb
jle
sub
pop
orb
jns
stos
fstps
mov
add
and
mov
out
jmp
sbb
cmp
imul
xchg
and
sahf
pop
add
cmc
dec
mov
jecxz
in
sbb
dec
xchg
pop
push
mov
hlt
cmp
arpl
mov
lret
mulb
cmc
hlt
cmp
gs
inc
fnstcw
pop
pop
add
pop
dec
jmp
jp
int3
hlt
test
bound
shll
sub
jge
jle
xchg
insl
push
push
hlt
sbb
loope
pop
push
mov
mov
push
gs
lahf
fs
inc
cmpsl
push
push
jb
sbb
out
and
cwtl
add
push
clc
not
mov
sahf
imul
lock
fmuls
add
cld
ror
and
lods
fildll
push
lds
enter
mov
cmc
out
cmpsb
sbbl
or
cmp
jmp
mov
sbb
int3
push
popf
xchg
xchg
pop
cwtl
std
sub
adc
push
dec
mov
in
inc
push
addr16
sbbb
xchg
push
fwait
movsb
mov
ja
sub
add
mov
and
pusha
adcb
sub
insl
push
push
add
in
mov
push
and
mov
push
add
stc
push
cwtl
cld
adc
sbb
add
jl
mov
cmp
in
nop
add
inc
incb
stos
mov
mov
negb
adc
pusha
jg
jmp
mov
sbb
ljmp
mov
pushf
mov
outsb
sbb
stos
test
lcall
xchg
pushf
aam
sbb
xchg
xchg
nop
push
scas
push
mov
int
dec
stos
cmp
pop
push
cli
add
movsb
shrl
test
popa
mov
outsb
leave
bound
or
and
aaa
call
stos
jbe
xchg
jge
sbb
mov
lock
mov
xchg
xor
lahf
xlat
push
das
pop
mov
dec
dec
pop
mov
adc
xchg
rcrb
cmc
aas
icebp
or
inc
aaa
es
aad
jbe
loope,pt
pushf
lock
sbb
adc
mov
mov
mov
addr16
out
mov
fisubl
or
loopne
popa
cmpsb
fldcw
push
aaa
fiadds
test
out
or
sub
sbbl
lcall
mov
pop
push
lret
dec
adc
lods
push
das
jae
pop
cwtl
xor
int3
rcrb
ret
adcl
adc
dec
xchg
mov
xchg
push
cld
imul
enter
xor
ja
cmpsl
call
mov
push
mov
data16
repnz
adc
nop
mov
pop
pop
aas
test
out
sub
pop
push
test
sub
stos
and
scas
dec
fs
and
leave
dec
mul
jno
mov
sbb
notl
mov
mov
out
fdivr
push
rorl
pusha
xor
mov
or
iret
mov
int
jecxz
cmp
into
adc
jecxz
mov
mov
out
and
xchg
adc
sbb
into
mov
stos
mov
xor
ror
popa
enter
stos
ljmp
loop
lret
inc
mov
cltd
mov
adc
push
jmp
ror
daa
add
jg
aam
insb
negl
leave
cli
push
clc
int
dec
ds
sbb
hlt
cmp
daa
dec
inc
or
jl
mov
mov
outsb
int3
out
inc
lds
adc
dec
push
pop
cmp
cmp
dec
add
ret
or
gs
mov
or
rorb
mov
jo
cmp
pusha
in
xor
sbbb
leave
lock
add
mov
popf
adc
xchg
mov
jae
inc
and
jns
cwtl
sahf
or
stc
clc
ss
test
adc
inc
xor
adc
mov
shrl
sbb
jns
add
mov
fisttpl
mov
xor
dec
xchg
inc
mov
das
mov
dec
mov
idivb
or
inc
mov
rorl
lret
mov
in
andb
and
popa
lods
jb
lods
mov
loopne
jbe
test
inc
cmpsb
dec
xchg
push
lods
inc
mov
xor
inc
clc
push
popa
movsb
sbbl
aas
pop
or
sbb
imul
call
push
daa
data16
mov
mov
xor
or
call
pop
dec
sti
mov
in
lcall
jmp
cld
shll
dec
repnz
add
lea
or
idivl
jge
mov
pop
lcall
sbb
cmp
xchg
mov
cwtl
mov
rorl
pcmpgtw
push
mov
sub
out
dec
push
cltd
imul
xor
pop
shl
js
xor
add
loopne
adcb
add
xor
mov
pop
mov
xor
jmp
fadds
push
cli
cmp
and
sub
aam
jmp
loop
ror
testb
push
mov
aas
adc
mov
push
iret
pusha
xor
bound
jmp
cli
test
and
adc
aaa
js
push
pop
test
push
mov
mov
mov
mov
iret
pop
dec
add
out
test
or
cltd
pop
out
mov
push
sbb
popf
mov
lahf
xchg
mov
mov
inc
roll
addr16
jmp
push
xor
or
ret
mov
hlt
cmp
cmc
or
mov
push
jo
aad
or
repnz
and
push
xor
movsl
loope
jg
dec
sarb
push
out
cmp
pop
dec
pop
mov
ret
nop
jl
push
dec
push
jl
mov
cmp
cmc
cmp
daa
dec
scas
mov
push
scas
js
in
jg
fcomi
mov
add
pushf
dec
sbb
insb
jl
inc
fidivrs
mov
xchg
sbb
mov
clc
xchg
jg
jnp
mov
mov
in
xchg
std
roll
add
clc
xor
ljmp
dec
nop
mov
cld
les
data16
mov
jl
cltd
jo
inc
jl
mov
testl
inc
push
jno
cmp
or
icebp
lods
push
pushf
das
pop
clc
mov
dec
jo,pn
jbe
outsl
sahf
fwait
cmp
and
adc
cld
test
jne
cmp
in
push
mov
lock
inc
ficompl
xchg
popa
xor
mov
cmp
repz
cmpsb
adc
or
je
shl
pop
rcl
push
outsl
imul
mov
xchg
ja
mov
ret
jp
in
nop
aaa
arpl
push
inc
jmp
jns
mov
lock
add
pop
add
int3
mov
clc
es
adc
push
mov
push
outsb
push
mov
pushf
movsl
in
and
repnz
dec
cmp
pop
in
mov
ret
outsl
hlt
jg
xchg
cmpb
jmp
cmpsb
and
popw
mov
and
lea
cwtl
sub
jnp
push
pop
xrelease
fs
mov
test
cs
iret
pop
jo
or
xchg
push
inc
xchg
jbe
jns
es
clc
fpatan
sub
mov
push
push
and
pop
pop
lock
and
xchg
pushf
or
rcrl
dec
pop
push
inc
jmp
inc
pop
mov
rcll
xchg
icebp
arpl
dec
push
sahf
and
test
inc
ljmp
ja
lret
mov
push
mov
psadbw
in
adcb
push
jae
push
fidivrl
inc
es
dec
inc
jle
sub
out
push
push
fcoms
neg
call
iret
call
pop
cwtl
push
lret
fdiv
pop
jg
or
movsl
adc
or
mov
fwait
mov
shl
test
push
movsb
cmpsl
mov
cld
popa
insl
xchg
pop
test
sub
cltd
pop
jge
nop
cli
lcall
out
push
and
push
mov
mov
scas
jae
aam
leave
js
lods
adc
ret
dec
adc
dec
mov
out
aad
std
iret
mov
jns
bound
mov
jo
in
arpl
add
inc
push
jmp
push
dec
icebp
in
icebp
sub
inc
sti
sbbb
pop
cmp
inc
arpl
shlb
cmpsl
lret
outsl
pop
out
js
sbb
clc
xchg
jle
mov
loope
test
pop
iret
sub
adc
imul
or
xor
or
jno
xchg
in
rclb
jecxz
add
pop
stc
sahf
imul
les
jecxz
mov
in
and
cmc
dec
sahf
scas
les
lds
daa
inc
pop
push
fwait
xchg
adc
adc
pop
popf
cltd
or
subb
leave
lods
push
push
mov
mov
subl
scas
add
dec
in
stos
mov
arpl
stos
lcall
mov
lahf
insb
xlat
adc
jns
xchg
mov
push
xor
lods
mov
hlt
je
imul
mov
int
repz
mull
or
mov
outsb
negb
sbb
add
pop
stc
enter
xchg
shll
or
loop
mov
fldt
mov
in
movsl
cmp
push
push
into
jne
jae
fidivrs
in
mov
daa
cli
cltd
test
gs
xor
or
adc
mov
fwait
mov
sarl
fstpt
xchg
scas
xchg
cs
cmp
or
and
or
xor
out
push
fcomp
cs
push
cmpsb
or
loopne
pushf
inc
std
enter
cli
gs
lds
subb
push
sbb
push
notb
mov
and
push
xlat
popa
idivl
jle
pop
cli
cmp
int
sub
repnz
ds
jmp
ja
sub
mov
mov
sbb
fs
loopne
test
ja
cmp
ficoml
cmp
fimuls
sbb
pop
jae
cwtl
movsb
jge
data16
lds
dec
cmp
cmp
add
iret
adcl
in
and
dec
mov
add
fcoms
lret
pop
inc
fldl
push
pop
jmp
mov
dec
cmp
inc
xchg
into
repnz
mov
cmc
pop
ljmp
out
cmp
pop
jp
push
cmp
fucom
cmp
sbb
fidivl
push
ds
das
jno
jo
fdivrs
inc
sbb
and
jne
xor
ficomps
mov
cwtl
lock
aaa
shll
cld
ss
or
xor
mov
xchg
mov
sbbl
mov
add
sub
sub
fimull
cmpsb
or
movsl
and
sub
stc
adc
or
sbb
dec
add
test
aam
adc
sbb
push
int
mov
jl
push
scas
xchg
sbb
loopne
insl
mov
or
push
pop
repnz
adc
jns
insl
mov
xchg
lods
cs
add
insb
faddl
mov
call
inc
xchg
sub
inc
mulb
mov
push
sbb
or
movsb
inc
pop
popa
ret
pop
adc
leave
aad
pop
and
inc
test
dec
fimuls
outsl
mov
mov
leave
cmp
insl
inc
nopl
lods
push
and
fsubrs
sub
ja
testb
icebp
adc
xor
test
notl
popf
mov
jle
mov
faddl
mov
xchg
sahf
icebp
rcrb
mov
popf
sbb
inc
fwait
cmp
ja
push
cwtl
inc
icebp
mov
and
test
xchg
cs
mov
mov
nop
add
xor
pop
sub
pop
hlt
xchg
pop
add
push
stc
sahf
pop
rorl
or
stos
jbe
mov
and
lret
cmc
gs
imul
sbb
xor
dec
pop
pop
push
mov
popa
xorb
xchg
sub
mov
adc
xchg
mov
xchg
push
cmpsl
mov
cli
dec
dec
repnz
fisubrs
wbinvd
movsl
fsubl
int
mov
stc
sbb
pop
dec
sub
rorl
aad
fwait
popl
pushf
lds
mov
aad
test
pop
adc
inc
mov
addr16
cwtl
pop
mov
xorl
test
ja
movsl
test
loope
testb
adcl
cltd
das
pushf
fwait
je
sahf
jne
mov
inc
fchs
int
xchg
loop
popa
out
ds
lahf
test
or
stc
je
add
outsb
jns
jmp
arpl
addr16
hlt
inc
sub
ljmp
popf
or
dec
retw
out
repz
mov
adc
pop
inc
or
mov
jg
out
sub
jns
in
dec
jbe
jg
xchg
sub
gs
sub
mov
mov
inc
insb
fsubrl
push
and
outsb
fucom
mov
jne
mov
lcall
inc
loope
fisubl
or
es
jmp
imul
push
xchg
mov
xchg
cmp
xor
cmpsb
and
in
cmp
jo
mov
sbb
xor
int
mov
pop
mov
cltd
repz
call
fldt
ror
jae
push
mov
add
movb
fs
xchg
add
lea
out
xor
shrl
idivl
jle
or
jle
pop
add
add
lods
mov
cmp
adcb
adc
dec
cmpsb
gs
mov
sbbl
pop
addl
iret
fsts
add
dec
je
into
mov
pop
pop
stos
adc
in
gs
dec
int
jg
xor
xor
movsb
xlat
dec
fwait
sub
sti
add
lods
pop
and
int
nop
sbb
add
pop
jns
andb
xchg
add
mov
scas
jmp
mov
xchg
adc
es
sbb
mov
frstor
add
ds
or
ret
arpl
leave
lahf
jecxz
pop
and
pushf
mov
fisubl
sahf
iret
or
adc
jg
pop
push
mov
and
into
jl
fst
lea
push
and
out
sub
repnz
pop
pop
testb
insb
push
fs
xchg
jbe
cmpsb
cmc
and
mov
and
test
pop
inc
push
addl
jbe
cld
xor
stos
inc
or
lds
push
inc
outsl
xchg
lods
jb
test
and
popa
enter
or
nop
cmp
mov
or
sbb
fbld
xchg
xor
inc
xorl
lahf
scas
jae
and
es
pop
imul
in
jle
das
mov
cmc
dec
imul
lock
rsqrtps
std
jo
imul
repnz
js
lcall
mov
xchg
lahf
mov
xchg
pop
xchg
cmp
sbb
fdivp
jmp
in
xor
fnstcw
lcall
mov
enter
out
lahf
push
fstl
int
rcpps
xorl
movsl
mov
cmp
sub
sarl
loop
outsb
lret
pop
mov
push
retw
mov
dec
flds
in
fwait
stos
mov
movsb
loope
mov
out
pop
adc
out
sahf
sub
mov
lcall
mov
xchg
cmpsl
out
cmc
cmpsl
insb
add
repz
mov
mov
loop
aad
cmp
jns
pushf
in
mov
mov
bound
adcb
jne
or
dec
xchg
sub
rcrb
roll
mov
jno
mov
xchg
mov
sar
andb
xchg
add
and
mov
pop
bound
aad
mov
pop
mov
aas
dec
fsub
and
cmc
lods
ret
dec
hlt
or
in
nop
jge
iret
cmpsb
xchg
mov
lods
mov
mov
cwtl
xchg
lods
jo
stos
cmp
jb
lret
jb
fadds
js
pop
scas
scas
in
jnp
mov
mov
mov
add
imul
inc
mov
cmp
adc
in
pop
inc
jns
daa
cwtl
push
mov
xor
mov
and
inc
arpl
mov
xchg
stos
xchg
add
dec
ss
adc
fildll
aaa
shl
dec
ds
and
ds
jo
stos
inc
inc
jne
and
jne
xor
xchg
mov
cmp
fs
mov
add
sbb
xor
cmc
mov
mov
int3
cmpsl
mov
inc
sbb
jb
lock
pop
pop
push
pop
je
icebp
xlat
outsb
and
sbb
or
dec
mov
cld
bound
inc
xchg
sbb
dec
popa
mov
je
xor
or
adc
pop
icebp
jle
push
xor
mov
pushf
dec
rorl
shlb
je
inc
inc
lods
pushf
add
into
int
mov
jmp
shrb
lea
wrmsr
cld
jl
push
fisubl
dec
pop
dec
add
aad
xchg
pop
inc
in
jb
lahf
xor
push
cmpb
xor
jb
out
lahf
push
stc
popf
aam
out
inc
pop
or
jb
testl
sahf
lret
and
mov
clc
jecxz
fsubrs
iret
aad
mov
rolb
sub
int
int3
daa
push
je
in
lods
fdivp
sahf
mov
sti
lcall
ret
sbb
xlat
loope
or
push
and
mov
dec
dec
inc
out
insl
enter
xlat
lods
test
outsl
sub
mov
int3
xor
and
fldt
inc
fisubs
pop
fwait
stos
cmpsb
movsb
mov
faddl
push
inc
and
js
fs
jge
xor
jg
fs
lods
ret
sub
fnsave
mov
dec
call
call
or
lods
add
into
dec
loope
into
sbb
call
popa
jmp
iret
bound
adc
mov
mov
lock
and
jmp
fwait
nop
mov
inc
fst
and
sbb
pop
imul
jo
mov
pop
push
call
ss
mov
cs
pop
fs
pop
out
ds
jbe
sbb
jbe
jne
dec
mov
xchg
inc
mov
outsl
aam
mov
movsl
std
or
sbb
dec
and
push
inc
out
jns
mov
jge
jbe
popf
pop
push
mov
cltd
xor
loop
or
fwait
mov
xchg
pop
repnz
popf
cmp
clc
mov
xchg
jmp
dec
mov
inc
add
mov
pop
sahf
ss
mov
xor
hlt
cli
jle
mov
aaa
stos
sahf
in
push
pop
sbb
flds
ds
dec
lods
jmp
arpl
fldl
stc
test
push
inc
aaa
repnz
mov
test
xchg
rcl
rcrl
jp
fstp
scas
gs
outsl
mov
push
data16
bound
pushf
push
jbe
inc
push
fcoms
fldlg2
fs
xchg
sub
cs
cmp
repnz
add
jle
lods
mov
pop
fsincos
aas
clc
push
add
sarb
mov
jl
inc
icebp
mov
fnstcw
cmc
repz
add
xorl
lret
jb
jecxz
out
aas
add
bound
mov
ret
data16
dec
in
sbb
and
imul
push
sub
sub
xor
jo
fisubrs
rcrl
add
dec
mov
fildll
std
daa
aad
push
cwtl
stos
inc
and
popa
cld
pop
mov
int3
jle
inc
mov
lcall
lret
jbe
outsb
jo
jmp
mov
fwait
mov
xchg
sub
test
loope
int3
cmc
add
scas
in
call
loop
dec
and
imul
add
lahf
mov
insb
insl
lahf
ss
mov
loop
and
cltd
push
and
pop
or
imull
movsb
sub
or
push
mov
or
sbb
xor
sbb
adc
cmp
xor
loop
fdivl
gs
mov
push
mov
or
push
jecxz
cmp
and
mov
sbb
cmp
shlb
xchg
cltd
insb
add
mov
repz
jns
jmp
das
mov
and
iret
jno
dec
lock
lock
jl
jbe
repz
stos
xor
cs
cmpsl
loopne
add
pusha
jg
mov
out
fmull
pushf
scas
xchg
leave
add
and
dec
pushf
mov
dec
sub
xchg
imul
mov
pop
push
jbe
sbb
jns
mov
rcrl
sbb
jae
or
dec
rcll
rcl
icebp
pushw
sbb
sti
rolb
mov
push
or
aas
or
mov
fbld
add
xlat
adcb
mov
mov
subl
mov
ret
add
dec
loopne
jp
jl
cmp
adc
sub
ljmp
pop
pop
dec
sub
outsb
jns
jnp
inc
decb
push
sub
shll
rcll
jp
int
xlat
dec
dec
pop
push
test
jecxz
notl
add
insb
jne
sahf
sbb
adc
ret
lahf
sbb
aas
cmc
mov
imull
outsb
mov
adc
pop
mov
lret
aaa
iret
enter
test
call
mov
dec
xor
cmpsl
jnp
out
inc
adc
mov
cwtl
in
cwtl
pop
adc
mov
ljmp
sbb
stc
out
das
inc
fisubl
add
jle
jle
scas
scas
inc
inc
push
cmp
sahf
jo
lock
fadd
sub
sbb
out
push
dec
mov
aad
dec
xchg
sub
aam
sbb
mov
adcb
aaa
lea
loopne
mov
inc
or
add
inc
inc
pop
out
fdivrs
mov
lock
mov
and
dec
lods
pop
fwait
pop
imul
xchg
push
adc
loope
out
std
sbb
repnz
sti
push
inc
fadds
loope
insb
imul
popf
arpl
and
leave
add
fldl
fdivrs
scas
xchg
inc
mov
pop
cmp
cmpsl
sub
nop
sub
pop
lods
fiadds
adc
stos
xor
xlat
cmp
repz
loop
xor
push
add
cmp
cltd
cli
inc
out
inc
js
movsb
adc
sbb
gs
xchg
jle
pop
es
test
test
jg
add
loop
mov
mov
cmpsl
lods
push
shrb
cmpsb
jge
sub
xchg
rolb
push
lods
icebp
inc
leave
repnz
mov
fdivl
pushf
dec
cmpsb
rsqrtps
enter
or
scas
sbb
and
xor
inc
or
jnp
and
xchg
lods
stos
mov
sbb
insl
enter
mov
stc
adc
mov
bound
ds
dec
cmp
in
pushf
xor
inc
mov
popa
jp
jle
sahf
add
inc
jecxz
xor
sbb
addr16
jns
and
xchg
adc
jb
testl
add
aad
dec
lahf
cmc
or
add
sbb
sbb
sbb
xlat
loopne
jnp
orb
add
jcxz
test
dec
dec
mov
cmp
fbld
mov
sub
adc
lret
jo
out
in
inc
add
hlt
pop
ret
bound
add
dec
arpl
cld
jns
sub
sbb
stc
mov
clc
sub
xchg
cmp
add
pop
sbb
lret
mov
lret
dec
fistl
cmc
xlat
pop
es
out
or
cmp
mov
stos
cmp
cwtl
xchg
push
daa
ljmp
mov
imul
in
pop
jae
dec
loop
pop
jmp
xor
imul
dec
pop
xchg
push
insb
outsl
in
jp
cld
xchg
fldl
cmp
adc
pop
and
xchg
jbe
pop
fwait
jge
ret
test
outsl
stos
int
adc
sbb
imulb
sub
sub
in
pop
xchg
lods
inc
ret
fs
xlat
sbb
and
lock
xor
jne
lret
pop
mov
mov
pop
std
push
xor
test
mov
push
lods
jle
lods
mov
xchg
xor
lds
xor
sub
mov
ret
stc
pop
outsb
inc
testl
dec
dec
in
jl
and
mov
rolb
mov
data16
mov
imul
lea
rcr
or
cli
fiadds
dec
rcrb
stos
daa
call
sbb
push
hlt
adc
testl
jno
pop
mov
adc
dec
cmp
rclb
leave
jnp
or
mov
adc
inc
jecxz
inc
popa
sub
enter
and
int
aad
xchg
dec
movb
out
pop
pop
jmp
pop
mov
mov
jae
sbb
pusha
popf
cld
adc
inc
cmp
outsb
aas
cmpsl
jno,pt
loopne
mov
mov
stos
fstpt
cli
mov
mov
pop
lods
mov
mov
ljmp
fidivrl
out
ja
or
jle
push
outsb
lret
lahf
out
shl
jns
pop
outsb
add
cmpsb
mov
and
pop
dec
cmc
or
bound
xchg
sub
js
mov
lods
cmp
icebp
sbb
les
ss
lret
std
jae
clc
clc
pop
repz
cmp
js
adc
adc
es
enter
pushf
add
push
movsl
sbb
jg
icebp
insb
sbb
outsl
iret
xlat
aaa
push
jecxz
push
sub
xchg
dec
mov
scas
rcr
iret
test
out
hlt
movsl
push
add
movsb
shrb
jne
popf
movsl
inc
dec
pushl
in
jnp
push
repnz
xor
add
fldcw
push
leave
jmp
pop
popa
fdivl
xor
push
cmpsl
xchg
nop
test
inc
lret
and
mov
xchg
scas
aas
test
pop
sti
imul
bound
rcll
adc
mov
and
inc
mov
mov
cmpsb
test
rcr
repnz
lds
mov
call
push
test
xchg
cmpsl
in
mov
out
sti
xor
lods
mov
inc
push
sbbl
xor
and
jecxz
loop
pushf
or
xchg
push
jle
test
mov
fsubrs
inc
xlat
pop
cli
sbb
pop
or
in
scas
mov
dec
push
dec
out
repz
ja
cs
repz
lret
movsl
mov
dec
or
popf
adc
lea
test
stc
or
divb
jp
ss
adc
jns
inc
xor
pop
stos
fcoml
push
or
sti
out
add
mov
scas
inc
adc
mov
push
stc
popf
and
ss
aam
and
and
ja
add
std
popa
sub
push
jge
add
in
rclb
lea
mov
lcall
sar
jp
sub
int
stos
jmp
dec
aas
dec
imul
imul
fsubl
xchg
arpl
ret
mov
push
mov
cmpsl
mov
push
mov
shlb
xchg
loopne
ljmp
call
adc
dec
in
es
out
cmp
loope
jge
pop
jecxz
enter
adc
shlb
out
xchg
mov
mulb
fnstenv
hlt
stc
je
push
scas
push
loope
push
test
add
aam
pop
popf
mov
dec
jp
jnp
xchg
xchg
and
mov
bound
cmp
insl
shufps
divl
add
adc
popa
or
orb
mov
rcrb
push
inc
out
jl
cmpsl
cmp
mov
jmp
fnstcw
rcr
addr16
jmp
sbb
out
es
shlb
jp
loopne
cltd
lock
adc
andl
icebp
loop
int3
sahf
js
aam
and
inc
js
movsl
ljmp
addr16
lahf
or
ret
test
adc
jno
repz
jno
rorb
cli
jg
movsb
leave
xchg
push
out
dec
je
xor
jo
ffree
into
xchg
lods
inc
repz
fidivrs
adc
fnstenv
xor
inc
iret
repnz
add
pop
xchg
cmp
mov
cmp
mov
mov
mov
cs
loope
sub
aaa
fsubrl
and
ja
insl
js
lahf
cmpsb
cli
or
dec
xchg
adc
pop
inc
inc
fldt
xchg
pop
pop
clc
push
mov
push
enter
mov
push
popa
mov
addr16
pop
insb
mov
push
test
push
ljmp
inc
nop
daa
mov
loopne
scas
sub
in
rcrb
mov
cmp
xor
movsb
gs
cs
xlat
out
cmc
dec
or
loope
into
dec
repz
mov
cmpb
fldenv
jmp
push
movsb
xor
push
out
pusha
dec
dec
lods
cltd
add
xor
iret
xchg
push
ja
mov
fidivrl
outsb
popl
imul
and
into
test
add
ror
xchg
dec
aam
cmpsb
rorl
insb
into
hlt
les
jae
icebp
fmul
popa
or
stos
inc
test
imul
jbe
dec
push
outsl
mov
ja
lahf
test
imul
xor
push
jmp
push
negl
xchg
or
pop
pusha
hlt
jo
mov
pop
pop
out
cmp
adcl
push
jbe
inc
or
cli
mov
fisubrs
and
mov
mov
xor
and
cld
int
or
and
pop
and
adc
cmp
ljmp
stc
push
in
sub
popl
mov
popa
sahf
push
push
test
clc
sbb
push
jp
or
ficompl
jmp
loopne
aaa
adc
stos
push
ljmp
fs
adc
push
cmp
or
xchg
imull
loope
jp
js
mov
sbb
or
sub
sub
pop
jle
dec
mov
mov
cmc
aam
cltd
sub
scas
jns
mov
ja
imul
mov
inc
xchg
cmpsl
jno
ja
cs
cmc
lahf
int3
cmpsb
jl
call
dec
inc
fwait
mov
iret
outsb
push
bound
rol
repnz
pushf
ret
lahf
aad
shl
and
dec
push
inc
in
xor
cmc
enter
sbb
sbb
lock
fiadds
es
mov
xor
outsb
cltd
add
cmpw
in
scas
scas
loopne
in
test
mov
test
lret
push
sub
jne
shl
daa
sub
ds
xor
sbb
push
pop
test
mov
dec
movsb
xor
aaa
push
ror
xchg
mov
inc
outsb
or
rcl
jo
xchg
insl
outsb
fs
add
ret
out
adc
popf
adc
push
mov
pcmpeqd
test
jnp
ficoms
inc
ret
in
push
cmp
movsb
or
mov
addr16
data16
movsl
adc
ja
testb
loope
rcll
jg
inc
mov
fldenv
andl
mov
ror
and
into
mov
ret
inc
push
mov
test
xchg
sahf
lods
mov
mov
jecxz
pop
adc
stc
iret
dec
push
mov
ror
push
lock
icebp
leave
dec
lods
sbb
pop
mov
out
sti
adc
into
and
aam
and
mov
mov
call
hlt
pop
cmp
mov
gs
xchg
sub
aaa
fs
stc
sub
and
mov
lcall
movsl
std
mov
addr16
std
fdivs
insl
ljmp
leave
or
add
sub
pop
and
cmp
xchg
dec
insb
pop
push
sbb
mov
mov
fistpl
and
mov
popa
push
add
xor
pop
mov
push
stos
mov
test
mov
xchg
sbb
push
push
aad
jbe
jle
xor
mov
sub
push
loope
sub
jle
lods
mov
cs
lods
xor
lret
xchg
fnstcw
movsb
ds
cwtl
jo
or
push
xchg
sub
adc
sbb
xchg
fnstsw
fildll
inc
dec
lock
pop
mov
popf
dec
cmp
or
pop
and
push
icebp
popa
inc
mov
lahf
fstpl
dec
mov
inc
fiadds
cmpsb
dec
movsl
pop
mov
int
ret
jnp
push
je
nop
add
and
in
fwait
popf
cltd
pop
jo
fadds
jle
ss
jne
pop
ss
nop
andl
icebp
xchg
xor
cmp
aad
push
mov
movsb
outsl
jae
pop
ret
loopne
lock
fwait
cmpsl
into
out
pop
jb
or
add
xchg
or
xchg
mov
xchg
adc
jbe
mov
mov
pop
or
or
cld
loope
notb
pop
and
aas
decb
or
das
and
xor
dec
jl
adc
sbb
std
xchg
je
sbb
mov
jo
imul
mov
popf
test
mov
mov
jmp
out
inc
leave
add
xchg
sbb
fsubl
mov
lock
int
and
jbe
mov
movsb
jmp
dec
push
cs
popa
jns
cmp
adc
es
in
pop
out
das
mov
mov
sbb
pop
sarl
jae
test
pop
shrl
and
je
arpl
movsl
jno
call
or
mov
xor
scas
fwait
adc
dec
mov
inc
daa
dec
add
sarb
xor
rorb
xchg
mov
mov
mov
rorl
mov
push
test
push
daa
into
movsl
mov
iret
push
cmc
in
sub
jbe
ficoms
and
aas
adc
clc
and
and
xchg
inc
xor
and
adc
arpl
stos
test
lcall
and
pop
ds
jae
popf
arpl
popf
outsl
adcl
xor
jmp
mov
fldcw
pop
add
jbe
cmpsl
and
cmp
mov
movsb
xchg
sbb
sti
push
xor
mov
shrl
movsl
mov
ja
lret
scas
inc
data16
mov
mov
daa
lcall
adc
mov
dec
mov
sub
mov
cmc
mov
xlat
adc
push
mov
testb
sub
enter
jmp
dec
pop
xorl
pop
mov
sbb
pop
popa
jmp
pop
in
or
imul
or
repnz
int
pusha
insl
push
out
scas
add
cs
popa
xchg
ficoml
push
outsb
addb
leave
flds
sbb
push
dec
add
xor
sbb
adc
jmp
into
cmc
adc
jnp
xchg
lods
adc
pusha
adc
ljmp
xor
pop
cmp
lcall
hlt
cld
insl
cmc
adc
pop
cli
dec
pushf
fmulp
jle
mov
mov
mov
into
inc
adc
push
rol
mov
ss
les
notb
dec
lods
and
ret
push
fwait
in
push
daa
mov
mov
jbe
das
test
test
dec
sub
mov
push
out
adc
jmp
or
mov
jns
pushf
cmpsl
je
sbbb
xchg
sub
or
aas
pop
lock
sbb
cmp
push
mov
loop
movsb
stos
lret
outsb
test
mov
and
sub
clc
popl
pop
push
mov
cwtl
in
enter
test
xchg
xor
jno
stos
inc
jmp
into
push
or
cmpsb
ds
loopne
js
in
pop
cmpsl
outsb
push
hlt
mov
mov
clc
fwait
adc
les
mov
cmpsb
fsubs
or
pop
idivb
lret
jbe
rcrl
out
pop
push
adc
pusha
add
lods
cmpsl
aas
scas
sub
xchg
cmp
xchg
mov
out
fsubl
rcrl
and
arpl
jl
imul
in
xor
push
mov
loop
into
aam
or
cs
mov
and
cmp
push
in
cmp
jno
xor
div
sbb
dec
mov
fsubr
or
sti
jns
sub
xorb
dec
mov
cwtl
cmp
or
notl
adc
push
call
xchg
add
inc
xor
mov
lock
bound
loopne
xchg
cmp
push
lods
cmp
push
add
add
cltd
push
in
xchg
cli
pop
inc
repnz
in
pop
mov
data16
imul
clc
xchg
addr16
adc
push
in
mov
mov
and
xor
adc
xchg
fwait
sti
sahf
xchg
das
add
add
aam
push
stos
jns
pop
mov
sahf
clc
cmpsb
mov
ret
add
ss
push
lods
dec
pop
das
push
jbe
dec
shl
dec
mov
cmp
ret
or
pop
mov
cmpsb
xchg
and
movsl
jns
cld
pushf
inc
push
mov
or
mov
in
in
sub
or
cmp
mov
xor
inc
in
cmp
or
call
xchg
add
daa
and
xor
inc
test
xor
pop
mov
fisttpl
mov
sub
sub
mov
clc
sbb
add
sub
mov
idivl
scas
inc
jo
pop
push
xchg
sbb
fs
mov
add
jbe
inc
mov
adc
push
movsl
sbb
xlat
dec
fidivs
adc
cmp
dec
insb
lea
ret
sbb
inc
inc
jp
lock
sub
push
int3
jecxz
xchg
sub
popf
sbb
xchg
dec
mov
push
inc
bound
jbe
aam
pop
mov
cmp
push
aas
add
mov
mov
repnz
xchg
push
aas
lahf
cmp
dec
lds
sbb
sub
stos
mov
sub
xchg
mov
filds
or
xor
xchg
dec
fs
mov
testb
imul
mov
mov
inc
pop
xor
mov
loopne
repz
lea
out
scas
or
sub
push
sub
or
sbb
pop
dec
negl
dec
xor
cmc
mov
or
in
add
fisubrl
lods
inc
push
push
shrl
jg
lock
lcall
or
test
daa
lahf
testl
loopne
xchg
and
add
outsl
or
popa
cli
fwait
xor
in
jmp
lcall
into
mov
pop
dec
mov
inc
mov
stc
je
sbb
shlb
out
leave
sub
jo
pop
iret
jecxz
rolb
mov
mov
mov
fidivrl
sahf
sub
lods
daa
sbb
sub
pop
inc
sahf
dec
mov
sub
jb
psubd
push
jl
rorl
mov
lods
out
decb
fucomip
fcompl
es
mov
sbb
push
nop
cltd
cmp
mov
stos
hlt
aas
push
cmp
mov
ja
mov
cmpsl
xor
repz
pop
jns
add
sti
mov
cmp
out
fadd
xchg
pop
mov
push
inc
fstpt
int
popa
mov
outsb
stos
jbe
cmp
int3
mulb
jle
push
insl
jg
mov
sub
push
test
pop
subb
adc
or
inc
outsl
jge
scas
pusha
pop
fstps
sub
fsubrl
mov
mov
jl
imul
mov
dec
lret
outsb
in
xlat
push
jno
sbb
lods
cmpsl
lods
mov
outsb
scas
jmp
pusha
lcall
aas
fidivs
iret
ja
mov
jle
imul
icebp
sbb
ljmp
in
cmp
push
cmp
xor
pop
mov
aaa
sbb
es
lods
pop
mov
dec
dec
hlt
jecxz
fimull
add
adc
mov
mov
inc
fsubrl
rcll
arpl
in
push
or
loopne
xchg
stos
mov
sub
lds
imul
stos
sbb
test
mov
adcl
mov
xor
fsubrs
or
xlat
mov
popa
scas
inc
rcrl
sub
add
les
insl
pop
pop
push
lret
icebp
jae
loop
add
lcall
adc
inc
rorl
mov
hlt
into
in
xchg
mov
fwait
xor
xlat
bound
les
push
pop
xor
or
sub
fsubl
out
mov
push
pop
scas
test
jb
mov
jno
ds
int3
sub
push
out
sub
mov
mov
dec
sub
sub
sar
fistps
push
mov
pop
mov
shlb
mov
push
lcall
das
cmpsl
test
enter
jno
sub
cwtl
das
dec
xchg
xor
movsl
mov
mul
mov
hlt
jae
sbb
jg
popf
stos
pop
adc
cmp
xor
bound
jb
cmp
imul
lds
or
or
cmpsb
dec
push
lods
cmpsl
ret
jb
das
addr16
and
push
mov
and
xchg
inc
cld
xchg
cs
std
daa
mov
fistpll
adcl
orb
xor
cmpsb
mov
rol
pop
inc
dec
cwtl
cmp
mov
jns
out
xchg
arpl
push
inc
int
push
cmp
loopne
cvtps2pd
ljmp
cmc
xor
out
sbb
adc
sub
inc
inc
sub
notb
jge
jb
cmp
mov
ret
pop
je
add
cmp
test
stos
pop
push
int
mov
push
rorb
cmp
pop
ds
stos
inc
pop
mov
fdivl
leave
push
or
notl
ret
mov
insl
repnz
das
mov
cmc
mov
ss
adc
xchg
imul
dec
fstpt
aaa
mov
mov
inc
fbld
mov
push
jnp
mulb
push
leave
or
jecxz
fwait
cmc
mov
stos
inc
mov
xor
lret
mov
or
daa
fsubrl
sub
inc
clc
ja
sti
out
les
mov
popf
test
lds
lods
clc
jecxz
mov
dec
sub
pop
push
daa
or
mov
mov
sti
push
push
jb
pop
pusha
dec
es
pop
jb
scas
push
and
add
cmpsb
lods
rorb
mov
jge
gs
xchg
pop
and
push
pushf
repz
ja
add
inc
clc
sub
aas
xchg
stos
out
roll
imul
xchg
mov
test
movsb
and
inc
sub
movsb
into
in
lods
jl
bound
pushf
jo
iret
pop
and
mov
xchg
js
lds
sbb
dec
xchg
shlb
mov
mov
push
sbb
dec
scas
jl
lds
mov
adcl
inc
sbb
push
inc
imul
lea
ret
roll
and
sbb
loop
lahf
dec
inc
add
pop
shll
mov
jg
fcomps
inc
shl
ja
mov
adcl
ds
icebp
mov
push
js
xchg
loope
jecxz
pop
out
sub
cmpsl
in
jle
enter
aaa
or
imul
pop
out
rorb
or
into
cwtl
jns
lret
jg
xor
sti
jno
adcl
and
movl
stos
mov
out
lds
mov
popa
push
ja
les
xchg
loope
mov
fwait
mov
pop
jg
lret
ja
jbe
in
fwait
sub
mov
or
cs
outsl
dec
rcl
jg
lcall
paddsb
mov
fldl
sub
mov
xor
add
sti
pop
lods
imul
ljmp
cmp
sub
roll
sub
cli
or
cmovge
inc
push
and
sbb
cmp
js
or
pop
std
sub
cmp
xchg
test
cmpsb
xchg
leave
test
je
andb
mov
pusha
or
repz
je
and
jp
icebp
ret
daa
sub
das
imul
xchg
stos
inc
push
mov
mov
lret
inc
cmp
jle
lret
popa
cmp
push
imul
je
mov
rolb
je
jb
lcall
jae
into
xor
int3
lret
js
and
inc
xlat
dec
or
adc
jb
or
cmp
pop
xchg
add
xor
cli
dec
jbe
in
push
lock
jmp
xchg
movsl
inc
in
in
inc
push
inc
and
insb
xor
int3
ja
xor
scas
cmp
add
mov
or
ds
ja
and
or
test
sbb
cmpsb
jp
inc
push
les
arpl
add
sub
lcall
pop
sbb
gs
test
xchg
lods
mov
dec
movsb
jnp
cli
cmp
fimull
mov
mov
jns
scas
call
loop
sahf
je
out
hlt
loope
mov
fistl
jmp
das
cmp
inc
jecxz
or
call
shlb
sub
or
xorb
xchg
push
mov
test
ret
push
or
jns
jbe
std
scas
mov
push
push
sbb
dec
in
pop
mov
filds
popa
fsub
popf
push
in
adc
bound
lahf
dec
fdivrs
mov
cmp
inc
sub
cmp
data16
mov
subb
inc
jmp
sub
addr16
int3
mov
inc
flds
or
pusha
sarl
fistps
mov
add
jbe
push
and
xchg
in
mov
inc
pop
or
sbb
mov
pusha
sahf
mov
out
xor
fisubrs
mov
insb
xchg
ljmp
arpl
fs
jmp
out
icebp
addb
xchg
bnd
rorl
out
outsb
adc
shr
testb
stos
mov
fnsave
lods
adc
ficoml
add
mov
mov
mov
cmp
inc
call
jmp
fisubrl
mov
adc
popa
xor
jns
xor
rolb
icebp
and
pop
bound
sbb
sub
cmp
pop
outsb
loopne
aam
push
in
mov
jmp
xlat
sbb
dec
dec
in
xor
gs
adc
mov
mov
stos
xor
jne
lret
aam
orb
fstpt
mov
mov
dec
rorl
rol
mov
xlat
addr16
ret
ss
lret
jecxz
push
mov
pop
mov
dec
cmp
mov
jmp
fistps
mov
push
imul
cltd
mov
mov
sbbl
out
icebp
pop
add
cmp
test
sbb
hlt
push
mov
enter
dec
jno
jp
mov
popa
jno
test
out
in
xlat
lds
stc
xor
inc
fs
int
jo
pop
sbb
loopne
imul
js
sub
imul
cltd
fbld
fs
and
inc
mov
mov
pushf
out
cmp
in
rcr
jne
rorl
xchg
push
mov
repz
lock
push
mov
rol
dec
jns
cld
pop
loop
cmp
decb
push
nop
mov
mov
and
loope
mov
insl
adc
outsb
pushf
rcl
mov
ss
jne
outsb
inc
fdivs
push
fdivs
xor
mov
aam
cmpsl
jp
scas
imul
cli
aas
or
stos
mov
shl
push
and
subb
push
rorl
xor
sub
call
add
push
sahf
inc
and
mov
and
mov
test
fwait
pop
pop
cmp
cld
popf
push
push
scas
out
add
out
adc
xor
scas
dec
loopne
lock
int
mov
add
fldenv
ret
enter
mov
sbb
pop
pop
leave
flds
push
mov
adc
pop
sbbl
aad
rcrb
out
sbb
cwtl
gs
mov
sub
int
rcrl
adc
cwtl
push
inc
jl
lods
lods
bound
add
fwait
jb
push
jge
inc
scas
jb
adc
test
jge
scas
and
xchg
push
adc
repz
jns
scas
push
push
movsl
and
fdivs
inc
sub
out
xchg
lds
push
dec
cmpsl
mov
ret
outsl
or
scas
xor
jae
popa
in
dec
stos
divl
fisttpl
aam
shll
inc
push
loopne
and
add
xor
stos
in
dec
cwtl
lock
filds
mov
adc
mov
jge
add
lahf
sbb
jecxz
dec
mov
jge
imul
pusha
jns
pop
sub
aas
repz
cmp
jb
pop
mov
adc
mov
scas
enter
sbb
pusha
mov
pop
mov
dec
test
sti
cwtl
or
adc
and
push
stc
test
dec
outsl
repnz
xchg
imul
test
aaa
xchg
insb
mov
loopne
add
sub
sarb
loope
ljmp
jecxz
push
xlat
or
xlat
dec
push
inc
cli
sbb
pop
cmc
add
sub
adc
add
cwtl
roll
aam
test
add
fstps
mov
lss
ret
inc
mov
xchg
jecxz
dec
dec
cltd
stos
inc
int
or
out
enter
in
and
cmp
dec
arpl
pop
jno
aaa
sbb
movsb
ret
mov
xchg
cltd
and
jb
lock
stc
jbe
sbb
subl
mov
inc
int
and
pusha
lcall
mov
fnsave
mov
cli
push
push
icebp
add
jbe
fsubrs
cwtl
jb
add
mov
inc
pop
pop
ja
adc
scas
in
adc
shrb
push
and
xor
test
popl
push
call
movsl
jbe
xlat
clc
sub
out
orb
lods
stc
hlt
sub
pop
pop
adc
mov
adc
inc
je
jbe
outsl
add
push
and
xchg
ds
shll
shlb
dec
mov
test
or
fwait
jnp
int
xchg
sub
or
jns
pop
or
lods
jecxz
cltd
adc
jno
add
dec
popa
inc
sbb
adc
sbb
incl
or
movsl
and
push
ror
out
dec
sbb
sarb
xchg
lret
sbb
or
mov
mov
push
xchg
mov
scas
xor
pushl
push
cmp
jl
stos
lods
jo
inc
mov
cmpsl
jl
fisubrl
jns
call
or
data16
cmpsl
ret
int
test
js
pop
daa
addl
xchg
push
stc
repnz
imul
cmpsl
xor
cwtl
sti
in
fcomip
push
cmp
and
pop
pop
jecxz
stos
mov
sti
repnz
jb
sbb
sub
jp
popf
pop
shll
loopne
iret
adc
pusha
divl
ds
adc
or
jb
cmp
dec
xchg
push
nop
push
jmp
jnp
pop
fucom
jb
lock
jge
xchg
fsts
lea
adc
adc
mov
mov
xor
push
int
xchg
sub
pushf
xor
or
stos
cmp
aas
outsl
repnz
cld
mov
jp
sbb
cmpsb
mov
jo
or
dec
sbb
push
movsb
ja
fcomps
jge
sbbl
cmp
andb
dec
pop
mov
dec
pop
test
cld
dec
rcr
movsl
hlt
mov
jb
pop
sbb
add
cmc
lods
test
sahf
pop
push
cmpsb
jl
imul
pop
cmp
enter
push
ret
push
outsb
les
adc
push
sbb
xor
mov
push
inc
faddl
sub
lahf
les
mov
mov
sub
fists
nop
jmp
mov
jmp
cmp
push
fstp
xchg
cmp
mov
sbb
xor
push
mov
ja
dec
jp
dec
jb
push
pusha
mov
xchg
mov
sub
adc
jle
gs
mulb
fwait
jno
mov
sub
cltd
jg
enter
push
jmp
xchg
cmpsb
and
inc
sub
or
mov
fwait
outsb
popl
sbb
dec
inc
fldl
in
and
jo
mov
adc
push
cmp
test
lods
push
push
repz
cmp
push
cmc
mov
push
pop
aaa
jecxz
pminub
fidivrs
mov
pop
xchg
sub
xchg
rorl
repz
add
sub
cmpsl
mov
mov
out
stos
add
test
ljmp
sahf
jno
xor
jbe
xchg
clc
push
dec
push
adc
mov
adc
sbb
dec
cmc
or
ljmp
push
mov
add
sub
mov
stc
aas
rolb
cmp
inc
mov
fsubrp
adc
or
test
adc
or
pop
push
repnz
dec
nop
push
and
daa
stos
jg
loop
add
rolb
fcomi
jmp
bound
sub
cld
enter
fwait
jo
loope
subl
rorl
loope
aas
shrl
pop
fs
test
lds
add
sub
scas
cmp
mov
jnp
inc
cwtl
or
call
hlt
fstpl
leave
and
pop
jnp
ja
test
lods
adc
loop
sbb
or
lods
pop
xchg
insl
jae
dec
mov
mov
pop
aad
cmp
mov
pop
inc
out
xchg
lcall
repnz
outsb
ret
push
out
jae
lock
lahf
cmc
sbb
push
inc
stos
es
aad
xlat
sub
int3
adcb
mov
xor
xor
sbb
nop
or
inc
pop
in
jno
dec
movsl
fsubp
jae
push
cld
sub
decb
std
jns
gs
sub
inc
dec
in
inc
scas
add
and
dec
popf
lods
test
aas
enter
or
pop
and
insb
add
xchg
daa
lea
popa
mov
mov
mov
js
pop
enter
xor
add
push
xchg
and
lds
movsb
adc
mov
jecxz
cmp
ret
dec
stc
push
xchg
fstps
jge
xor
repnz
dec
adc
repz
sub
pushf
cmp
push
test
daa
adc
lods
test
or
loope
test
lds
jg
movsl
nop
outsl
imul
rolb
mov
add
inc
sub
mov
out
int3
and
lock
test
popa
ret
xor
sahf
jae
xchg
sbb
push
insl
fmull
push
fdivs
gs
dec
jb
xchg
mov
mov
cmp
icebp
dec
imul
rcrb
int3
and
insb
lods
test
cmp
xchg
cltd
jb
pop
insb
lds
lret
sub
fnstenv
sbb
add
aas
and
pop
xchg
in
inc
in
mov
aad
int3
and
jecxz
lods
daa
leave
cmpl
mov
lods
inc
fdivl
lret
dec
cli
jne
into
call
adc
cmpsb
lock
sub
fisttps
jp
add
mov
fs
movsb
push
pop
mov
shlb
add
pop
stos
adc
pop
aad
jnp
outsl
fdivrs
mov
mov
divb
push
adc
xchg
repnz
pop
outsb
inc
lahf
sub
adc
in
gs
or
jmp
shll
int
imul
sar
jmp
mov
sub
pop
je
insl
add
cmp
ds
scas
mov
sbb
or
xchg
jnp
sub
mov
jmp
inc
popa
sbbb
sbbl
push
ja
mov
mov
ret
pop
adc
cmc
test
icebp
les
mov
shll
jbe
dec
out
fnclex
stc
pusha
clc
sarb
jo
or
adcb
lds
idiv
aam
sbbl
mov
stos
or
popa
mov
add
test
mov
mov
aad
lods
inc
addr16
xchg
or
repz
cmp
adc
dec
xchg
das
push
mov
xor
pop
sub
or
sub
lods
pop
loop
repnz
aam
enter
loopne
cmp
in
test
inc
divb
mov
lcall
mov
jae
lahf
sub
xchg
jg
xchg
adc
dec
mov
pushf
xor
in
lods
arpl
xchg
int
and
icebp
ds
aam
and
cmc
aam
sbb
sti
push
mov
addr16
loop
das
dec
jae
mov
xor
pop
mov
insl
vmread
outsl
and
and
or
cs
or
cmp
push
xor
ret
jle
jo
shrb
call
repnz
pop
cmp
and
pop
insl
push
dec
rolb
or
test
add
xor
std
shr
fadds
sti
jae
cmp
lret
popf
fmuls
jbe
push
cli
and
jmp
cmpsl
js,pt
jg
jnp
sub
lods
pop
loopne
es
and
arpl
jg
ljmp
push
clc
add
lcall
sub
pop
inc
and
xor
jecxz
push
push
dec
and
les
movsb
sub
in
imul
in
popf
inc
pop
in
frstor
adc
pop
mov
mov
jns
call
add
cmpsb
lods
xor
movsb
out
popa
adc
dec
in
xor
insb
jle
popa
ror
adc
jge
mov
adc
dec
mov
push
mov
loopne
inc
mov
fidivs
xchg
sub
and
push
cmp
pop
flds
adc
jo
filds
in
xchg
cmpsl
fadd
pop
mov
pushf
ret
push
aad
pop
dec
mov
cwtl
cmc
clc
push
sub
repnz
loope
adc
mov
sub
jecxz
jmp
sbb
or
daa
xchg
out
filds
dec
std
add
and
mov
jo
in
adc
mov
jl
cmc
rolb
aad
test
mov
ds
jle
jno
flds
popf
imulb
popf
pop
dec
jecxz
test
cmp
insb
cmc
or
xor
loop
scas
inc
faddl
add
xchg
mov
add
xor
push
fdivs
int
cltd
and
pop
jnp
cmp
jno
xchg
lret
out
inc
je
lret
pop
sahf
push
in
sub
xor
mov
sub
daa
pop
jo
jl
adc
movsb
xchg
pushl
jmp
adcl
popf
enter
fisubrl
arpl
dec
into
subl
and
orl
sub
xchg
push
xchg
cmp
movlps
and
mov
pop
leave
lahf
mov
insl
bound
push
outsb
imul
sub
cld
pop
cld
mov
clc
sub
pop
jle
and
jl
jl
and
mov
and
fstpl
lods
scas
push
lods
in
ret
out
xchg
mov
push
jno
cmp
sub
ret
push
pop
cmc
push
test
inc
arpl
push
mov
pop
inc
inc
mov
mov
and
or
sbb
popa
mov
mov
stos
or
push
jno
mov
mov
sub
rcl
jo
xchg
pushl
or
and
dec
add
or
add
pusha
notl
or
into
xor
jle
sub
dec
out
rclb
sub
nop
stos
das
add
jbe
sub
std
xchg
je
xor
xchg
and
push
mov
pop
mov
xchg
dec
fidivrl
mov
movsb
adc
push
les
test
popf
data16
push
je
and
aam
ss
ss
sbb
ljmp
add
iret
enter
filds
bound
jp
outsb
cld
push
mov
sbb
push
fwait
jns
jl
std
rclb
out
test
xrelease
push
mov
cwtl
popa
into
mov
lahf
xor
mov
mov
mov
xchg
push
or
cltd
mov
inc
out
int
arpl
sub
pop
add
jp
add
roll
movsl
into
or
movsb
rcrb
mov
inc
cwtl
test
inc
push
loope
ds
or
popa
clc
add
push
rorl
lock
ja
fnstcw
mov
and
jmp
leave
fsubrl
sub
arpl
xor
popa
pop
pop
mov
into
out
adc
sbb
adc
lcall
in
dec
punpcklwd
xchg
xchg
mov
sub
inc
fistpl
cmpb
jno
mov
movsb
test
adc
lds
lds
pop
insb
inc
scas
and
loop
mov
movsb
icebp
adc
js
clc
mov
test
or
lahf
popf
pushf
xor
mov
lcall
sbb
scas
xchg
inc
xchg
in
lods
cs
add
inc
mov
pop
lret
testb
sbb
negl
cmp
negl
inc
xchg
outsb
pop
adc
iret
sti
loop
int3
loope
cs
xor
cmpsb
lock
aam
pusha
or
sub
mov
jne
jbe
lods
imul
mov
test
imul
repz
cmp
incb
pop
test
in
xchg
cmp
push
push
std
js
in
adc
in
dec
insb
out
nop
andb
aaa
rorb
xchg
pusha
stos
clc
xchg
rcrb
add
shrl
scas
inc
push
je
jecxz
sub
rcrl
add
xor
inc
imul
divl
cld
add
push
and
push
adc
out
test
js
outsb
sub
xor
popf
into
gs
call
in
add
shlb
cmp
cmp
jb
mov
popf
leave
cmp
jcxz
cwtl
or
aad
mov
xchg
mov
loop
jbe
xor
mov
es
add
push
fsubl
das
insl
ljmp
shll
xor
loop
bound
cmc
or
cmp
clc
int3
xchg
push
fbld
mov
scas
jno
mov
add
test
dec
lods
pop
and
add
push
push
and
out
dec
push
inc
flds
lret
sti
and
push
sbb
push
fdivl
mov
fnstenv
cmp
jecxz
cwtl
push
jnp
ja
cmp
das
dec
push
jge
les
test
pushf
shl
cmpsb
inc
lods
hlt
and
add
sti
jae
mov
dec
and
fisttpl
ljmp
and
leave
pusha
adc
std
je
sub
aam
std
mov
test
lods
jg
test
mov
inc
sub
add
push
xchg
outsl
and
mov
inc
loopne
mov
call
sbb
inc
inc
shr
push
out
aas
pop
dec
lods
add
sub
fidivrl
jmp
int
sbb
negl
and
jno
pop
lret
call
dec
pop
out
and
mov
add
jo
js
pusha
cmpsb
mov
dec
repnz
shr
test
bound
fadd
popa
dec
mov
imul
mov
call
cmp
or
mov
aad
dec
cmp
jp
ljmp
clc
dec
sbb
sbb
lahf
jbe
roll
dec
sbb
jnp
mov
xchg
inc
pop
fstl
push
shlb
jp
shrb
cli
mov
mov
jno
gs
mov
lcall
in
cmp
movsl
dec
jg
mov
int3
insb
mov
jl
ret
into
xchg
cmc
lods
cmp
scas
inc
adc
or
and
sbb
movsb
repz
and
in
jmp
push
scas
mov
stos
and
and
popl
leave
mov
and
sbb
inc
and
push
test
jo
xchg
in
adc
xchg
scas
inc
inc
in
xchg
or
xor
xchg
jmp
mov
jg
cli
mov
mov
jbe
cltd
bound
mov
pop
inc
mov
enter
xorb
scas
into
clc
nop
clc
lods
lcall
and
mov
jo
pop
je
push
loop
loope
or
mov
sbb
pop
lahf
divl
movsb
lret
in
mov
enter
in
ds
into
push
movsb
fdivl
int3
lret
inc
dec
dec
cmc
nop
mov
inc
sbb
mov
test
sbbb
icebp
insb
aad
xchg
stos
pop
sti
push
adc
cmp
test
ljmp
xor
ret
xchg
mov
das
fdivrl
sbb
push
inc
or
aam
add
pushf
dec
cld
xor
cmpsl
dec
and
les
loopne
add
dec
sub
loop
pushf
repnz
jo
adc
mov
sub
dec
lods
loope
aam
stc
sub
sub
fmull
jle
pop
mov
aam
call
dec
outsl
leave
enter
xchg
jmp
jb
mov
rcl
pop
divb
iret
cwtl
sub
in
stc
popa
jne
js
nop
pop
movsl
int
push
and
jne
adc
sbb
inc
daa
mov
daa
mov
xor
clc
fucomp
iret
std
xchg
mov
shlb
mov
pop
xchg
and
pop
mov
iret
aas
jp
jo
xchg
sub
cmpsl
imul
lret
cwtl
add
cmc
pop
sub
mov
inc
cltd
ljmp
jns
push
and
shll
jmp
enter
cmp
xchg
es
cmc
adc
bound
mov
into
jge,pt
or
mov
popa
call
adc
scas
xchg
jae
add
lret
sub
scas
movsb
sub
add
hlt
js
xchg
aas
mov
out
fisttps
xchg
add
dec
test
sbb
ds
add
push
fdivl
push
jo
pop
clc
cli
call
pop
in
das
lret
jb
lcall
mov
sbb
sbb
popf
inc
push
lcall
ret
xor
mov
push
sub
push
jmp
pusha
mov
xor
mov
stc
test
in
inc
dec
rorl
cltd
and
fimull
cs
shrb
push
mov
dec
pop
mov
rcrb
adcl
mov
push
pop
xor
ljmp
in
arpl
in
adc
inc
inc
mov
fisubl
mov
movsb
push
movsl
jge
bound
rclb
loopne
idivl
sub
dec
retw
mov
pop
jl
test
jae
mov
push
cmp
outsb
repnz
andb
into
daa
add
fdivrl
mov
cmp
dec
pushf
data16
fimuls
jp
mov
jge
movsb
dec
lock
test
fbstp
adc
jl
push
push
fwait
push
je
pusha
pop
lds
jb
inc
xor
into
lods
lret
xorb
ret
loop
adcb
push
or
jb
lods
pop
jmp
inc
push
add
jmp
cmp
xchg
cmpsb
xchg
stos
lock
outsl
ss
test
cmp
pop
testl
outsb
adc
imul
rcll
cli
pushf
jb,pt
push
mov
dec
fsubrs
lahf
xchg
pop
insl
or
dec
fists
or
inc
notl
push
movsb
cmp
xor
pushf
bound
js
pop
xchg
add
sbb
sbb
push
lods
push
test
jo
jns
js
sub
pop
mov
cmc
in
cmp
jecxz
mov
cmc
xchg
in
jle
cli
hlt
add
fisubrs
sub
push
mov
mov
shlb
pop
mov
lods
mov
xchg
cmp
cs
shlb
pop
dec
dec
mov
in
mov
and
dec
je
cmp
insb
shl
inc
cmc
mov
into
loope
bswap
leave
and
leave
flds
std
ret
pop
leave
xchg
scas
mov
insl
xor
push
sbb
jg
cmc
loop
aas
in
dec
inc
sbb
in
add
mov
push
leave
imul
cmpsl
mov
or
outsl
jg
lahf
add
cs
movsl
push
pop
subl
cmp
lds
push
leave
jecxz
add
cli
sbb
xor
in
fdivrl
mov
js
sbb
jmp
add
xchg
es
popa
adc
xchg
cmpsb
cmp
popa
cmp
adc
stc
push
pop
cmpsl
std
or
xlat
cmp
xlat
xchg
push
inc
repz
xchg
subl
add
mulb
je
push
scas
jb
es
inc
shl
jbe
test
xor
cmp
or
in
in
xchg
mov
iret
inc
orb
and
mov
sti
add
loopne
fidivl
data16
ret
mov
aam
sub
pop
divb
mov
push
sbb
sti
iret
jecxz
and
and
adc
inc
sub
nop
pop
and
or
sarb
push
mov
jno
pop
or
test
rorl
mov
lea
add
add
fdivl
outsb
push
insl
mov
int
sbb
test
cld
pop
xchg
scas
push
into
xchg
xchg
mov
stos
ficomps
inc
dec
rcr
cmpsb
fwait
lock
imul
divl
pop
ret
adc
cmp
push
fidivs
mov
addr16
and
xor
jl
rolb
push
xor
mov
rorb
ret
fisubrl
stos
jne
orb
ret
mull
jb
cs
movsl
lahf
lea
push
outsl
add
stos
int3
jae
in
std
jl
pusha
stos
rclb
mov
sub
int3
sub
mov
mov
push
pop
xor
mov
inc
fldenv
lret
popa
add
sahf
arpl
add
jne
btc
sbb
je
xchg
scas
arpl
sbb
pop
xor
mov
dec
cmp
mov
cmp
adc
stos
pop
pushf
rclb
inc
sbb
rorl
outsb
pusha
pop
push
cmpsb
ffree
cmpsl
in
push
and
cs
dec
xlat
add
push
dec
dec
imul
inc
xor
arpl
pop
inc
je
loop
or
das
dec
movsl
outsb
scas
enter
sub
xlat
jns
push
xchg
push
mov
fildl
cmpb
add
test
add
jecxz
hlt
mov
sbb
push
addr16
jmp
mov
sbb
fmulp
jb
mov
shl
dec
xlat
cmp
lret
out
mov
push
call
rol
or
push
repz
scas
repnz
fucom
leave
testb
leave
stc
cli
jge
pop
mov
adcb
std
jbe
add
jne
aaa
adc
in
movsb
adc
pop
push
xor
push
jnp
into
lods
xor
or
push
xor
sbb
das
leave
ss
mov
push
add
test
jp
inc
mov
lahf
inc
pop
vpsubb
repnz
xor
xlat
push
mov
sbb
mov
ficoml
mov
mov
aaa
andb
cmp
imul
push
add
adc
pop
stc
xor
sub
das
std
rclb
push
pop
xsha1
cmpsb
lea
in
push
ljmp
and
mov
icebp
adc
incb
pop
adc
test
pop
mov
pop
mov
in
filds
adc
xor
test
adc
inc
inc
mov
and
xchg
arpl
cmp
mov
and
fs
call
cmc
les
insb
jle
fsub
add
push
xchg
daa
cmp
push
inc
movsb
scas
ret
push
and
xorl
sbb
sbb
outsl
dec
pop
movsb
mov
xor
mov
ljmp
inc
or
movsb
add
into
mov
out
lds
dec
adc
daa
jmp
xor
stc
add
and
dec
dec
or
hlt
lret
into
enter
dec
xchg
pop
mov
or
or
hlt
cmp
push
cmp
lods
dec
jl
rolb
cmpsl
imul
call
pop
les
push
sub
and
aas
xchg
xchg
cli
nop
cltd
aad
lret
cmc
je
or
xchg
arpl
lock
mov
insb
sub
mov
push
mov
insb
mov
mov
test
cmp
adc
rclb
mov
push
mov
cmpsl
push
out
mov
adc
or
mov
cli
pushf
int
stos
cmp
fistpll
jle
cmp
imul
mov
int3
pop
jno
push
adc
arpl
xchg
out
movsl
icebp
inc
filds
sub
add
dec
mov
popf
sub
cmpl
enter
xchg
jmp
ret
xchg
std
sub
clc
or
sub
jge
pusha
out
push
adc
ret
insb
in
mov
pop
xchg
or
jg
adc
pop
sbb
pop
adc
popf
ficomps
test
testb
cltd
test
dec
ljmp
xchg
xchg
aas
mov
hlt
dec
mov
repnz
mov
cmpb
repz
lds
shl
lahf
stos
jmp
psubusw
insb
push
jae
cld
push
dec
cld
and
std
sub
dec
jo
in
test
pop
inc
fcmovne
fildll
test
out
bound
shrb
icebp
mov
fsubr
push
mov
sarb
scas
jmp
and
std
aad
je
xor
xor
mov
or
stos
enter
stos
test
sbbl
jmp
ja
lock
xchg
cmp
mov
dec
outsb
loope
ja
pop
mov
adc
aas
seta
mov
cmpsl
je
cmp
jb
cmp
pop
push
and
ds
cmp
enter
sbb
insl
jno
arpl
sbb
mov
jmp
push
data16
lahf
push
int3
adc
cli
ret
stos
movsl
adcl
rolb
mov
rclb
adc
xor
dec
jmp
mov
enter
out
jg
or
push
movsl
daa
vandnps
sub
jnp
clc
pop
and
and
int3
fcompl
shl
test
sahf
lods
add
outsl
mov
in
jge
xchg
iret
sbb
popf
mov
adc
fwait
push
or
or
mov
leave
push
andb
push
xor
mov
lods
stos
xor
dec
xchg
cmp
js
test
cli
insb
sub
aaa
inc
xor
mov
in
add
dec
jmp
sub
pushf
jae
and
push
mov
cmp
pushf
jo
shrl
ret
pop
test
outsb
jmp
jge
push
add
and
jne
xchg
in
push
mov
pop
sub
dec
xchg
cmp
shl
shr
fmul
imul
lods
and
lds
cmp
or
push
push
ficompl
xor
popf
sbb
movsl
int3
imul
xor
add
and
xchg
arpl
sbb
jmp
cmc
adc
test
arpl
sbb
dec
xor
ret
adc
leave
jno
sub
mov
xor
jmp
mov
cmpsl
es
push
aad
or
mov
dec
push
fdivs
int
mov
in
pop
push
mov
fnstcw
rcrb
ret
loopne
mov
mov
ss
in
repz
packuswb
fs
push
sahf
gs
fbld
ljmp
negl
sub
jmp
pop
jmp
pop
das
xor
pop
stos
sbb
outsb
loopne
aam
fcomi
rol
fdivrs
push
repnz
jg
add
js
cli
lea
or
enter
cmc
lea
in
push
or
ret
adc
cli
lea
or
mov
pop
push
loop
and
dec
mov
sub
dec
mov
cli
or
test
sbb
add
sbb
inc
xchg
xor
mov
subb
fwait
sub
repnz
out
je
dec
fnstsw
ja
ficompl
push
ljmp
inc
lcall
icebp
movsl
cltd
add
mov
mov
jge
dec
cmp
jo
aam
mov
out
cmp
push
movsl
push
fwait
add
adc
inc
xchg
js
add
enter
or
cmpsb
mov
sbb
shll
cmpsl
ds
push
sbb
pop
dec
pop
aad
mov
jno
mov
jb
xor
mov
popa
add
add
lods
pop
xor
xchg
insl
push
lret
jge
cmp
inc
mov
insb
push
jne
inc
and
sti
lcall
cmp
stc
xchg
sbb
jecxz
je
frstor
pop
xchg
dec
dec
repz
in
addw
arpl
xor
cmp
push
cmp
lds
pop
push
and
dec
mov
push
in
xchg
mov
lret
popa
aas
cmpb
imul
lock
xchg
mov
mov
adc
mov
fwait
fs
jne
push
xor
aad
pop
push
xchg
scas
sti
inc
jns
push
stos
sbbb
enter
adc
mov
xchg
adc
sub
pushf
push
sub
adc
out
stos
push
xchg
pop
jge
push
leave
jmp
pop
inc
jbe
xor
jbe
mov
or
xchg
ja
lcall
jle
shlb
lds
mov
call
mov
fwait
and
je
mov
jns
int
insl
ret
jo
mov
pause
sbb
mov
jle
out
dec
push
data16
dec
jle
lret
pop
cmp
add
movsl
lods
adc
leave
push
xor
add
insb
pop
movsb
adc
lea
push
int3
sub
push
je
pushf
movsl
ja
jo
mov
not
push
arpl
ret
mov
lods
cltd
or
test
jp
push
mov
popa
in
cmc
cwtl
bound
and
cmpb
xchg
push
mov
add
mov
inc
pop
mov
addr16
insl
lods
jle
mov
xchg
adc
xor
cli
scas
adc
mov
imul
cmp
sbb
mov
sbb
push
push
sbb
dec
es
mov
test
sbb
mov
fdiv
test
sub
stos
inc
fst
adc
mov
mov
mov
orl
xor
sbbb
imul
jb
in
in
cmp
in
fsubr
insl
add
je
fidivrs
mov
jnp
add
adc
push
addr16
cmp
fstps
into
stos
scas
lret
xor
test
fisubrs
mov
ret
mov
jle
mov
pop
in
lret
adc
pop
push
scas
aas
jnp
in
add
test
ss
xor
hlt
push
inc
add
pusha
dec
pop
xchg
or
mov
mov
lods
xor
mov
mov
sarb
push
dec
pop
jnp
pop
push
xor
mov
lods
xor
xchg
and
int3
pop
jle
lret
pop
imul
lahf
testb
fldt
into
jne
out
mov
jmp
sbb
cmp
insl
add
add
jp
stos
or
shl
sbb
jecxz
or
hlt
jge
jl
xlat
es
mov
jle
mov
dec
lahf
fwait
xor
cmp
loope
and
sti
enter
lret
cmpsb
dec
sbb
das
aas
mov
fs
or
mov
xchg
out
in
pushf
popa
dec
inc
xchg
pop
jb
sub
dec
nop
jle
mov
lret
add
in
xor
mov
pop
imul
mov
scas
inc
lret
mov
push
jp
imul
les
xor
lea
jp
xlat
out
cmp
jge
adc
mov
mov
fucomi
imul
mov
lea
push
rorl
jl
and
jmp
arpl
mov
iret
mov
scas
lahf
mov
xor
pusha
mov
outsb
xor
pop
adc
in
mov
addr16
sbb
and
push
loopne
jns
outsb
jmp
mov
arpl
test
fcompl
ficoms
or
arpl
mov
mov
add
stos
pop
add
shlb
jle
inc
mov
test
xchg
inc
std
ret
movsl
ja
mov
sbbb
dec
bound
push
andl
dec
shlb
add
into
enter
loope
dec
adc
cmpsl
lret
inc
fucomip
les
sbb
mov
jo
sbb
js
adc
lret
gs
lods
pop
std
jno
and
in
jle
dec
pop
jno
mulb
xchg
mov
sub
pop
mov
cli
cmp
adc
stos
leave
insl
jmp
mov
test
mov
iret
dec
sbb
in
cs
nop
in
pop
push
or
jle
into
imul
rcrl
sub
fs
xchg
inc
xlat
lds
pop
jb
push
mov
cmp
push
scas
pop
gs
int3
sub
fwait
add
fmuls
pop
pop
cwtl
loope
dec
inc
mov
aaa
sbb
imul
jle
pop
les
loop
or
mov
addr16
stos
movsl
xchg
sarb
cld
push
sub
or
and
push
test
rcr
xchg
inc
push
lock
lods
aas
rcl
cmp
ljmp
in
cmpsb
stos
xlat
push
xchg
incl
testl
aam
int
test
mov
mov
fisttpl
xor
sti
cmpsl
mov
inc
fsub
fidivrs
pop
lcall
mov
fdivp
dec
call
lds
aad
in
into
xor
pop
loope
ret
sbb
push
int3
cmp
in
cli
shl
add
inc
xor
mov
cmp
mov
lods
jge
dec
fistpll
add
mov
sti
daa
pop
cmp
cmpsl
adc
adc
mov
xor
mov
es
imul
lcall
xor
in
das
aaa
xlat
aam
std
xorl
cmp
mov
xchg
in
mov
mov
cmova
jge
dec
or
cmpsl
fisubrs
pop
leave
sub
inc
pop
stos
add
idivb
les
pop
push
rolb
es
cmp
lret
shll
or
data16
loope
mov
cmp
fwait
jne
xlat
filds
mov
mov
loope
sub
jbe
call
mov
adc
push
fwait
inc
leave
daa
loopne,pt
and
push
or
bts
mov
fidivs
sub
outsb
sbb
hlt
bound
inc
push
adc
loope
sub
mov
dec
adc
jb
mov
aaa
cmp
or
jp
lcall
adc
xor
push
push
xchg
imul
cli
dec
leave
xchg
lods
jne
push
popf
fistps
adc
inc
int3
and
mov
arpl
xchg
pop
pop
repnz
test
hlt
fsubrp
mov
lea
pop
mov
adc
nop
pop
cltd
xor
insb
jae
mov
mov
mov
lahf
mov
push
cltd
stos
adcb
nop
adc
stos
xor
jns
jecxz
lret
xor
inc
dec
stos
dec
mov
clc
sbbl
jecxz
xor
imul
push
cs
add
xor
mov
ja
mov
dec
mov
aaa
or
aad
ja
aas
mov
jno
mov
sub
adc
dec
sarl
and
or
jns,pn
xchg
mov
and
jae
adc
xchg
test
rclb
dec
das
jmp
and
xchg
dec
push
mov
mov
scas
out
sbb
stos
imul
shufps
inc
push
mov
mov
push
jmp
out
pop
insl
lock
aad
cmp
or
push
fidivl
add
orb
push
mov
xchg
jnp
cmp
sbb
fnstsw
sub
std
dec
mov
std
psubusw
push
icebp
jmp
push
push
inc
subl
stc
xchg
adc
push
pop
mov
pop
mov
data16
cmp
mov
mov
out
roll
das
std
sub
icebp
push
jns
xor
mov
and
xchg
loopne
sub
inc
mov
es
push
popf
jae
nop
sub
sbb
sbb
adc
xor
cs
enter
mov
mov
js
movsl
outsb
adc
mov
lahf
jp
cmp
ja
push
loop
test
jle
dec
clc
imul
test
sahf
push
xor
push
mov
mov
bound
nop
dec
pushf
and
inc
xchg
jge
les
dec
cltd
xchg
dec
in
cmc
xor
mov
or
xchg
push
addb
xor
add
sti
aam
adc
cmp
mov
outsb
test
ret
sbb
shr
into
add
cmp
mov
push
inc
ret
ss
mov
xor
xchg
jbe
push
clc
mov
pop
add
pop
clc
and
cli
aaa
jbe
pusha
jmp
stc
adcl
jecxz
push
lret
jle
loopne
cmp
sub
mov
aam
push
inc
cmp
inc
fisubrl
int
stc
ljmp
daa
sub
dec
enter
popf
cmp
in
jl
cmp
sbb
xchg
dec
scas
divl
lods
ret
mov
sub
push
fidivl
out
divb
mov
addr16
loopne
test
or
dec
adc
inc
push
mov
out
push
sbb
cld
loopne
xor
push
call
stc
inc
dec
dec
icebp
xchg
push
mov
mov
fdivrs
fiadds
lods
mov
movsl
and
cmp
jl
lret
test
adc
mov
push
and
in
cmp
mov
mov
push
inc
lods
xchg
jbe
rep
lods
adc
push
enter
addr16
adc
cmpsl
pop
repnz
out
inc
movsl
sub
aad
mov
bound
cmc
push
mov
cmpsl
sti
xchg
sub
ss
lret
mov
inc
bound
cmp
lret
mov
test
sbbl
mov
sub
sub
jp
cmp
xor
jns
aam
cmc
or
leave
push
dec
inc
in
imul
jns
jmp
data16
lea
xchg
out
shlb
xor
jmp
pop
push
andl
aam
dec
shrl
addb
sbb
int3
out
adc
xchg
mov
cs
ja
xor
rcl
pop
dec
in
mov
dec
movsl
inc
imul
jnp
sub
lret
sub
cld
lcall
xor
push
pop
mov
nopl
xchg
jmp
or
jne
inc
subl
dec
jb
enter
inc
dec
andl
scas
cli
test
jp
jns
jl
mov
repz
add
pop
cli
clc
adc
mov
shl
push
push
mov
cvtps2pi
pop
mov
push
aad
in
jnp
push
pop
cmp
fsts
mov
fisttpl
int3
mulb
sub
xor
adc
cmp
mov
in
and
sar
sti
shlb
lret
mov
adc
lret
pop
push
push
add
call
lahf
addl
lahf
sar
es
mov
pop
adc
and
imul
mov
jmp
subb
cmp
imul
mov
mov
push
cltd
out
inc
xor
in
inc
sub
fdivrs
jb
enter
out
movsl
xor
add
gs
lods
inc
fcmovnu
jle
jne
mov
mov
into
lods
cltd
sub
icebp
ljmp
mov
scas
outsb
dec
ss
lret
into
sub
xchg
xchg
mov
pushf
cli
inc
push
dec
ds
lock
inc
inc
sub
rclb
push
jb
ja
mov
jbe
into
cmpsl
add
decl
jnp
andb
fisubl
js
add
fsubrp
push
pop
add
shlb
repz
xchg
scas
pusha
sti
jecxz
adc
andb
mov
xchg
sub
xchg
imul
sbb
mov
jle
sbb
cltd
lahf
push
rcrl
fs
sbb
scas
push
shrl
stc
repz
movsb
shll
stos
cmp
pop
fistl
jb
xchg
jl
sub
movsl
in
test
sub
or
jo
adc
mov
mov
enter
int
mov
pusha
pop
insb
and
leave
jns
mov
xlat
xchg
push
push
ljmp
ds
outsl
lret
popa
shll
or
jmp
in
cwtl
popf
andb
pop
jno
fisubrl
dec
pop
jo
andl
mov
cmpsl
cmp
cmp
push
fbstp
sbb
inc
push
add
mov
and
push
jb
test
loopne
outsb
pop
andb
arpl
cwtl
xchg
and
aam
inc
pop
push
arpl
in
bound
or
push
xor
xchg
jnp
shr
pop
sub
adc
pop
jb
or
jge
fnstcw
inc
test
inc
enter
fdivrl
jecxz
fisubs
popa
or
leave
fcmovnu
push
dec
sbb
adc
movsl
nop
in
xor
jmp
aam
sub
js
fwait
inc
pop
icebp
je
bound
sbb
add
fnstcw
repnz
outsl
or
or
enter
jb
cmp
pop
fdivl
mov
add
sub
hlt
mov
cs
movsl
add
leave
nop
scas
mov
fbstp
cltd
or
pop
mov
or
insl
ljmp
cmp
xor
mov
push
aaa
push
cmp
jno
pop
fildll
shrl
and
dec
mov
outsl
push
outsl
push
cmp
scas
sub
aad
roll
xchg
sub
dec
mov
and
das
pop
gs
sahf
fdiv
dec
in
push
cmpsb
add
pop
dec
mov
je
fwait
pop
mov
xchg
das
outsl
mov
xor
xchg
or
sub
stc
push
or
pop
repnz
rcrl
xchg
into
push
xor
and
and
and
stos
arpl
xchg
jp
fdivrl
outsl
sbb
leave
adc
add
lods
out
mov
xchg
test
cmpsl
fisubl
or
inc
in
stos
ljmp
shlb
pop
or
push
cltd
insl
call
mov
mov
mov
test
jo
xor
imul
mov
cmpsl
mov
cltd
enter
and
call
das
stc
mov
mov
cmp
fnstenv
push
lds
mov
mov
rol
cmp
imul
push
call
dec
and
jmp
xchg
sbb
movsb
cmp
aas
je
jl
inc
fsubl
dec
mov
cmp
or
js
iret
mov
xchg
xor
in
add
test
in
adc
popf
inc
lcall
and
inc
mov
inc
movsb
out
scas
pop
into
push
mov
push
pop
mov
add
test
pop
out
arpl
jbe
and
jge
xor
arpl
xchg
fidivl
push
in
loopne
xchg
lock
aaa
in
xchg
bt
out
sub
jb
add
jns
jo
imul
jnp
div
lret
xlat
stos
addr16
rol
sahf
and
mov
shl
sbb
mov
ret
adc
mov
xor
xchg
pop
add
adc
movsb
insl
cs
ljmp
mov
gs
pusha
or
rcll
int
pusha
lds
push
sahf
repz
pop
aam
lods
inc
jmp
xchg
dec
sbb
dec
and
cmp
stc
and
cli
pop
push
mov
int
movsl
jg
add
test
push
aaa
mov
sbb
dec
adc
sub
int
and
orps
jne
sbb
inc
push
lods
push
lock
imull
scas
inc
lods
loopne
adc
stos
into
add
fstl
sub
ja
imul
repnz
push
and
xor
mov
out
in
xchg
bound
ljmp
mov
xchg
scas
mov
jbe
or
in
and
sbb
dec
mov
dec
mov
mov
inc
or
scas
out
pop
call
mov
sti
ja
sbb
add
mov
and
push
fnstenv
lret
fsubl
and
adc
mov
and
aas
imulb
scas
out
dec
push
dec
or
adc
mov
fdivl
enter
pop
adc
cmpsb
out
sbb
fidivs
push
lcall
jnp
mov
lds
js
pop
ret
lods
xlat
or
mov
push
add
pop
lahf
mov
fadd
pop
cmp
mov
jne
rolb
jno
fsts
dec
mov
mov
push
push
jg
inc
mov
add
xchg
repnz
adc
push
inc
pop
repz
sbb
aas
and
jl
loopne
ret
adc
mov
lcall
pop
add
loopne
pop
imul
shll
cmp
pop
shrb
jge
cmc
pop
mov
mov
mov
dec
in
jmp
ljmp
xor
in
mov
jge
and
dec
jnp
mov
sub
xor
addr16
mov
mov
lods
hlt
stos
lcall
movb
push
rol
adc
fsubr
jge
mov
in
repz
out
inc
mov
push
in
insl
inc
mov
dec
fisttpl
movsl
int
out
xor
push
gs
dec
insb
sub
lcall
cmpsb
decb
jmp
into
jge
mov
cmpsl
loop
aad
cli
negb
pop
mov
jne
xchg
jns
mov
adc
ret
push
inc
push
iret
xor
in
dec
aaa
mov
out
mov
sbbb
adcl
rolb
shl
jg
rcrb
or
mov
pushl
push
sbb
iret
imulb
sub
xor
adc
stc
xlat
add
xor
or
cs
push
cld
add
xor
jmp
es
mov
jnp
enter
xchg
fistps
xchg
pop
xor
pop
sbb
dec
aaa
popl
sub
mov
pop
icebp
jg
or
imul
repz
ret
test
mov
pop
shl
cmp
push
lods
push
out
push
into
mov
and
fsubl
adc
js
fisubrl
mov
int
jge
mov
jb
and
arpl
leave
mov
xor
add
sbb
sbb
stos
in
notl
pop
mov
mov
inc
repz
pusha
dec
xchg
sbb
lahf
push
dec
mov
xchg
push
and
jp
adc
pop
in
cld
mov
inc
pusha
hlt
fdivrs
negl
cmp
movsb
mov
lret
sti
cmp
xchg
stos
xchg
push
mov
or
cmpsl
sub
sahf
inc
cmc
inc
lods
and
or
jns
lea
ret
xchg
mov
fdivs
dec
mov
repz
jb
pop
fistpl
int
push
inc
repnz
lret
inc
push
sbb
inc
sbb
lods
xchg
shlb
hlt
ficompl
or
aas
xchg
or
into
shrb
push
repnz
fdivp
inc
lcall
xorb
or
pop
rcll
lods
sbb
sub
scas
push
push
or
incl
test
imul
cmpb
push
sub
int3
adc
mov
xor
movsl
jae
iret
mov
adc
jbe
movsl
inc
notl
test
shr
sbb
gs
push
mov
sbbl
fnstenv
addr16
mov
mov
in
lahf
stos
rorb
test
add
sub
shr
xchg
dec
dec
push
icebp
ret
add
lcall
bound
mov
fdivl
cmpsb
stos
add
fdivl
sub
inc
adcb
sbb
jne
mov
pop
mov
cmp
mov
pop
fwait
stos
lcall
lods
gs
cmp
cmp
inc
fs
push
sub
pop
or
pop
mov
dec
mov
jle
pop
aam
dec
sbb
push
cld
imul
sub
imul
pop
mov
fstl
push
cmp
mov
mov
push
mov
jae
lock
mov
pop
xlat
push
fbld
push
lods
cld
dec
lret
pop
das
adc
cwtl
or
add
pop
ss
lahf
mov
push
add
shlb
dec
or
mov
in
pslld
mov
pop
aaa
push
loope
imul
dec
inc
imul
clc
sbb
ss
sub
in
jl
lods
nop
jecxz
sbb
cmp
xchg
stos
add
mov
enter
pop
jmp
cwtl
andl
icebp
dec
mov
push
xor
in
push
fstl
sbb
add
push
jbe
subl
mov
lods
xor
sahf
inc
sbbl
js
jl
testl
call
push
mov
cmpsl
jns
push
stos
or
jno
fs
orb
setae
adc
pusha
lret
loope
add
dec
push
mov
inc
jge
sbb
cld
xchg
data16
inc
fisubl
cmp
sub
lret
adc
les
sbb
aas
jne
clc
mov
je
fsts
gs
in
faddl
push
sbb
cmp
pop
xor
sub
push
sahf
movaps
mov
cmp
mov
sub
adc
adc
push
lcall
sub
dec
pop
mov
inc
push
out
mov
call
cmpsl
sbb
stos
sub
pop
in
jg
mov
mov
inc
cmpsb
dec
loopne
adc
hlt
pop
jns
and
sbb
or
mov
push
add
or
stos
add
adc
push
mov
and
mov
loopne
vunpckhpd
stc
and
out
lods
call
movsl
jmp
push
icebp
popa
popf
mov
cmpb
insl
lahf
pusha
lahf
dec
mov
jge
rclb
add
shr
testb
sbb
jne
and
imul
fs
cmp
cmp
shll
xor
adc
adc
mov
pop
dec
push
loope
or
insb
sbb
out
or
in
push
icebp
pop
and
repz
in
mov
jmp
mov
mov
inc
fdivl
jo
sbb
data16
fwait
inc
test
call
xlat
jbe
add
out
aas
sub
les
test
pop
negl
cwtl
mov
loope
outsl
adc
pop
ljmp
pushf
icebp
aad
fnsave
ss
aas
test
js
push
cmp
ds
mov
arpl
pusha
lds
aas
xchg
in
outsl
cmp
add
jb
xchg
and
or
int
enter
cwtl
mov
ficoms
clc
push
stc
js
sbb
jg
enter
adc
lret
push
pop
out
inc
cmpsl
inc
enter
pop
nop
xor
fs
lock
in
and
adc
push
stos
inc
dec
sbb
inc
ret
dec
in
cli
aam
or
mov
inc
jns
loopne
mov
popa
add
stos
inc
fst
fnstsw
mov
int
test
negl
data16
xchg
push
push
xchg
xor
or
push
cmp
add
sbb
pop
lea
or
dec
fidivrs
jmp
lret
add
shld
dec
xchg
xchg
js
push
fsubrl
out
or
cmc
and
out
es
test
sub
aad
xchg
pop
shrl
negb
mov
aas
aaa
pop
or
popf
ss
pop
notb
jo
lds
rcrl
push
call
and
xor
pop
sbb
jl
ret
and
test
pushf
cli
mov
push
mov
lea
jecxz
cmpsb
push
sbb
and
lahf
cmc
popa
xor
fsts
or
push
pop
loop
scas
mov
xchg
enter
mov
hlt
push
xchg
jo
repz
sbb
lods
sub
mov
jmp
add
aas
add
jne
das
mov
iret
sbb
addr16
sbbl
add
fwait
jo
testb
jns
fdivs
cmpsb
sti
adc
push
hlt
xor
sub
test
push
pop
imul
mov
mov
sbb
jnp
pop
testl
addr16
or
mov
jns
xchg
and
dec
mov
push
cmp
call
and
dec
sub
push
dec
xorl
icebp
aas
insl
mov
test
and
push
int3
jns
std
test
add
add
addr16
es
sahf
cmc
insb
xor
mov
jne
lds
fildl
sbb
push
popa
jo
jg
xchg
pop
in
les
icebp
sub
aad
or
scas
xor
test
aas
leave
dec
scas
lds
repz
pop
int3
lret
mov
ljmp
or
dec
scas
call
or
sarl
jne
pushf
das
mov
dec
mov
ljmp
out
inc
mov
adc
pop
inc
mov
jnp
push
or
mov
mov
and
in
call
cmp
mov
sbb
xchg
mov
iret
lret
sub
jbe
flds
es
jp
add
imul
adc
les
test
loop
out
adc
push
fcompp
hlt
mov
mov
shld
mov
pop
dec
sub
les
dec
insl
dec
push
movsb
inc
push
push
xchg
adc
out
jb
push
xchg
add
orb
shll
inc
jecxz
dec
or
mov
add
in
sbb
mov
or
jle
lahf
in
push
dec
sbb
push
and
leave
fstps
pop
fwait
and
fbld
fidivrs
decb
push
push
xchg
sub
call
jg
mov
adc
dec
punpckhdq
imul
xchg
gs
lret
mov
mov
adc
push
js
nop
mov
xor
xlat
call
mov
mov
mov
les
add
pop
mov
out
mov
ret
or
push
sub
sbb
fs
lahf
lds
mov
adc
in
sbb
mov
add
jo
loope
or
cmp
subb
add
cld
rol
arpl
test
mov
scas
inc
xor
lea
sbb
das
bnd
push
dec
lds
jg
aad
lcall
add
call
inc
and
movsb
sub
jecxz
xorb
cli
inc
int3
faddp
es
sbb
add
or
pushf
test
and
add
jbe
bound
in
and
inc
enter
call
xor
dec
pop
ret
lea
popl
movsl
push
test
mov
mov
clc
daa
ret
sub
pop
lret
and
subb
js
pop
pop
mov
or
pop
pop
ret
sahf
out
mov
and
jecxz
sti
dec
repnz
cmp
cwtl
pop
xchg
bound
mov
or
mov
dec
stos
xchg
and
dec
test
xchg
or
xchg
mov
sub
mov
icebp
lret
sub
mov
std
rcrb
xchg
push
mov
xor
ret
icebp
push
mov
aaa
dec
fnstenv
jno
jge
dec
jp
inc
dec
jnp
in
mov
fidivrl
xchg
push
xchg
test
aas
and
dec
stos
imul
sbb
inc
arpl
lods
imul
sbbl
xchg
into
jge
mov
out
push
sbb
ss
in
imul
popa
add
rcrb
and
je
xor
lret
rclb
mov
mov
gs
and
aaa
inc
lahf
cmpxchg
cmpsb
cmp
add
inc
mov
pop
sub
leave
pusha
push
cs
mov
push
or
cld
xchg
cli
xor
jmp
mov
rorb
add
int3
dec
pop
cli
xchg
adc
aam
test
inc
mov
loope
lcall
leave
inc
mov
push
call
pop
inc
outsl
loop
mov
inc
jl
subl
push
lods
xchg
inc
mov
add
loope
fsub
xchg
mov
nop
inc
scas
mov
fldenv
into
xchg
popf
lods
mov
mov
lcall
enter
mov
push
adc
call
scas
or
pop
mov
jmp
ret
jle
xchg
call
repnz
cmp
jg
jnp
adc
push
jecxz
js
add
xor
es
data16
pop
fldenv
negl
push
or
jae
loope
stos
xorl
add
popf
xchg
xor
ret
pop
lock
pop
cmp
test
insb
jp
and
pop
cli
inc
jb
xchg
xchg
lods
bound
pop
add
sbb
test
movl
jnp
adc
and
pop
jne
add
add
jns
leave
pusha
stc
bound
lds
out
out
xor
cmc
test
xchg
loop
mov
addl
pop
mov
push
shlb
push
push
mov
cmpsb
fwait
add
cs
addb
sahf
push
enter
jl
rol
stos
out
out
ds
jg
push
insl
ljmp
cmp
movsl
ret
sub
pop
or
pop
fiaddl
adc
in
mov
popa
sbb
push
inc
aam
mov
fisubs
jo
inc
jb
mov
inc
add
loopne
inc
mov
add
sbb
ret
push
pop
xchg
arpl
bound
in
adc
and
mov
sbbl
leave
jns
fildll
cmpsl
push
push
stc
add
sub
xchg
ljmp
jb
mov
mov
xor
pop
xor
insl
cmpsb
bound
mov
in
push
mov
xorb
hlt
or
mov
cmp
les
insb
mov
xor
inc
popa
jecxz
xlat
push
ds
outsl
mov
cmpsb
scas
or
jnp
fadds
ret
outsl
cmp
leave
cli
int
ss
inc
scas
cltd
push
stos
push
test
xchg
dec
add
mov
jo
pusha
sbbb
inc
stc
je
xor
jb
aad
and
pop
subl
fucom
xchg
dec
lds
dec
shrb
ret
cltd
mov
mov
or
je
arpl
mov
fidivs
dec
repz
out
inc
inc
cmp
mov
fistpl
negb
popa
jnp
or
std
pushf
clc
pop
cli
in
xor
xlat
hlt
dec
aad
mov
mov
lock
bnd
mov
rcl
fnsave
repz
rep
sbb
and
pop
jb
add
in
data16
push
sbb
add
mov
lods
movsb
das
andl
enter
xor
inc
ret
sub
mov
adc
std
adc
inc
lock
test
bound
jo
xor
pop
pop
sub
dec
dec
clc
and
push
push
jno
popl
adc
push
adc
mov
sarb
jge
add
fmull
cmpsl
fdivs
fstps
jmp
and
xchg
adc
lock
ficoms
xchg
push
adc
mov
clc
xchg
dec
mov
in
pop
dec
out
jg
fdivr
ds
mov
cld
adc
xor
dec
jae
cmc
movsb
imul
inc
add
sub
shr
lahf
jo
sub
push
and
adc
mov
push
add
ss
inc
mov
push
jne
lret
or
sarb
sbb
mov
aad
lahf
inc
setb
sub
adc
es
pop
pop
fs
fisubs
inc
shll
mov
jp
out
test
push
or
test
dec
mov
xor
xchg
push
fidivrl
dec
or
jb
in
loop
loope
pop
mov
jns
sti
xchg
es
push
loopne
jl
gs
frstor
jns
mov
sbb
lahf
subb
out
pop
arpl
adc
jp
popf
push
or
sbb
jae
mov
insb
jnp
inc
sar
push
dec
jmp
sbb
rcll
cmp
std
insb
stos
rep
dec
sub
loop
and
test
mov
push
test
jbe
xchg
pop
pop
or
jecxz
sti
pop
push
cmp
inc
lahf
in
pop
in
cmp
or
in
sub
mov
lock
aad
pop
adc
mov
add
jb
out
adc
mov
shll
cmc
shr
xor
pusha
fisttps
ret
arpl
jnp
shll
pusha
jge
sbb
notrack
in
or
sub
pcmpgtd
sti
add
fdivs
inc
push
sub
pop
leave
jecxz
movsb
xor
jbe
mov
clc
js
rclb
mov
movsl
sub
lahf
sub
jbe
mov
fs
xor
in
and
adc
pop
loopw
add
add
sysenter
lret
movlps
mov
sub
aad
adc
out
clc
in
fsubrs
out
push
and
xchg
pop
dec
fsubs
dec
movsl
xchg
das
fwait
enter
out
jl
push
lods
in
imul
aas
cmpsb
xchg
xor
inc
mov
sbbl
lcall
mov
rcll
imul
fwait
push
mov
sbb
dec
pop
mov
pusha
mov
push
popf
jge
sysenter
gs
mov
dec
push
sub
aad
std
adcb
sbb
cwtl
ja
push
sbb
xlat
cmc
xor
mov
lods
into
sbb
sub
mov
mov
push
fs
ret
add
mov
pop
scas
popl
mov
repz
mov
shll
cmp
scas
jb
enter
loope
adc
dec
bound
ret
je
jnp
cmp
stos
xchg
fsubl
or
nop
test
xchg
sbbb
in
hlt
pop
repz
ret
mov
mov
adc
pop
and
je
xor
push
ds
and
dec
shll
inc
popl
xchg
call
jg
jae
mov
mov
insb
sub
add
jle
pop
hlt
or
gs
in
cmpsb
cmp
mov
loopne
xor
add
xor
sub
mov
mov
fisubrl
pop
cmp
jl
imul
sbb
mov
gs
mov
jne
cs
scas
push
sti
aam
aad
and
les
mov
stos
pop
out
arpl
divb
push
sbb
xor
and
fcmovnu
js
nop
das
dec
xlat
sbb
mov
clc
popf
mov
test
inc
xor
loop
jg
aaa
xor
mov
fs
mov
and
adc
jno
inc
sbb
mov
incb
jle
mov
add
mov
adc
and
fdivrl
push
jno
sub
loop
inc
adc
cmp
ds
outsl
js
xchg
inc
stos
int
pushf
int3
lcall
stc
mov
shrb
mov
pop
imul
or
ret
aas
loop
fwait
lahf
push
xchg
je
sub
xor
outsb
xchg
das
add
out
mov
gs
bound
test
pop
aam
mov
je
daa
pop
inc
inc
jecxz
xchg
push
add
pop
stos
and
out
out
flds
mov
mov
lahf
aam
jge
mov
inc
shl
insl
mov
dec
push
mov
add
jae
mov
movl
in
lods
scas
mov
aad
testb
inc
adc
sub
push
push
add
movsb
mov
out
cmpsb
add
push
xchg
dec
lds
mov
ljmp
stc
jl
scas
inc
sahf
outsl
xor
xor
loope
ljmp
unpcklps
shll
cmp
sbb
push
or
ret
xor
mov
jne
and
ds
jb
inc
rorb
xor
xor
cwtl
cmp
mov
cmpl
outsb
jge
mov
push
and
jae
insb
lret
cmp
cltd
cmp
mov
xor
es
mov
mov
aad
pop
leave
loopne
imul
mov
jns
aas
es
cmp
mov
out
cmp
dec
jmp
inc
add
mov
pusha
push
test
mov
mov
mov
jle
dec
lock
lock
mov
jecxz
unpckhps
out
mov
sbb
pop
out
mov
xchg
mov
pop
lock
scas
xchg
mov
mov
adc
es
fs
sbb
inc
adc
bnd
cltd
adc
add
test
fildll
push
pop
or
rcl
and
fsubr
shll
jmp
roll
aaa
xor
push
sarb
push
push
push
pop
or
out
mov
ds
dec
pop
cli
dec
pop
add
gs
icebp
adcb
cmp
adc
lahf
cmp
sub
mov
adc
ret
push
fidivs
and
filds
cld
outsl
mov
inc
push
cmp
imul
cmp
mov
pop
dec
cltd
std
dec
jge
repnz
inc
outsl
leave
dec
loop
jmp
lret
or
push
inc
call
mov
xchg
mov
imul
jp
js
and
sbb
cmp
push
cmpsb
mov
repnz
or
cmp
aaa
into
sbb
fwait
xor
vsubps
push
in
xchg
xor
imull
pop
inc
mov
fisttps
xchg
push
stos
inc
lret
dec
ficoms
dec
dec
inc
mov
aad
test
lods
mov
fwait
lods
push
popf
mov
xchg
test
mov
stos
mov
sarb
mov
in
lds
adc
mov
mov
cld
jecxz
ret
mov
mov
lret
fwait
dec
mov
dec
popa
add
pushl
fstps
nop
call
sub
icebp
adc
xchg
leave
or
or
push
sarl
add
pop
ss
jne
xor
fcomps
out
dec
xchg
inc
mov
outsl
jbe
repz
pop
leave
lahf
xchg
sub
ljmp
lods
test
aad
inc
fcomi
loopne,pn
clc
adc
jge
sbb
in
sahf
notl
shrl
sbb
es
fiadds
imul
cmpsb
insb
addr16
pop
xor
add
pop
jb
subl
fsubrp
rcrl
adc
scas
push
adcl
insl
out
popa
pop
mov
inc
sub
and
out
cli
pop
pop
stos
and
aad
stos
jmp
lods
xchg
ljmp
fwait
xor
cmpl
std
icebp
add
sbb
pop
mov
cmpsb
cmp
ficoms
pop
mov
imul
sbb
mov
pop
jmp
mov
stos
inc
pop
adc
or
jbe,pt
pop
mov
imul
push
xchg
rclb
inc
cld
mov
stos
inc
enter
jge
push
sbb
lcall
dec
pop
fdivrl
xchg
imul
cmp
out
out
adc
in
hlt
gs
mov
es
leave
popa
enter
aad
in
stos
jbe
scas
xchg
popl
mov
cmpsl
bound
jne
int
push
pop
push
or
adc
mov
popa
jge
jmp
adc
add
mov
icebp
addl
xchg
push
add
xorl
cmp
imul
lret
pop
inc
xchg
pop
dec
pop
cmp
in
cwtl
sbb
push
js
mov
dec
imul
cltd
sbb
push
stos
jnp
test
test
or
popa
scas
shl
sarb
sub
mov
out
les
cmpsl
pop
int
mov
mov
xchg
xlat
sahf
dec
fildl
jmp
in
sub
aad
lcall
scas
cltd
jno
loopne
mov
test
jmp
shlb
aam
stos
mov
fistpl
xor
shlb
aaa
or
mov
mov
rorb
cmp
in
dec
ds
lods
loop
or
shlb
push
xchg
xor
lods
mov
push
cs
mov
aad
sub
int
add
inc
jo
stos
rolb
or
xor
out
jp
mov
push
cmp
in
xchg
stos
dec
sbb
into
push
iret
push
and
cmp
sbbl
inc
mov
xchg
inc
sbb
test
push
jne
pop
aas
gs
adc
test
pop
decb
cmpsl
jo
and
pop
xor
int
stos
inc
or
sbb
sub
pop
push
sub
mov
inc
addb
aad
mov
push
pusha
andb
shrl
ret
bound
jns
icebp
xchg
push
sti
push
cwtl
adc
mov
shr
push
and
lock
fs
jecxz
pop
les
sub
cmp
and
xchg
out
cld
lcall
in
sbb
in
and
dec
xlat
aaa
dec
and
pusha
scas
adcl
fbstp
pop
dec
loop
mov
imul
test
cwtl
mov
out
adc
xor
jno
cmc
into
insl
add
mov
push
hlt
mov
outsl
enter
orl
cltd
xor
or
xor
imul
pop
shr
mov
mov
iret
xor
das
cmpl
mov
imul
push
xor
jne
leave
dec
test
call
in
andl
pop
jb
dec
popf
mov
mov
dec
push
cld
pop
mov
and
mov
outsl
mov
aam
je
stc
je
and
xchg
ret
or
ds
popf
fstpt
add
add
xor
lcall
inc
cs
inc
jg
jae
js
lcall
adc
inc
mov
out
test
repnz
jmp
clc
push
push
pop
dec
data16
pop
ja
out
es
bound
stos
mov
fidivrl
push
int
pusha
lds
add
mov
pop
adc
scas
jp
sbb
adc
jle
sarl
loopne
add
popa
rorl
aam
int
es
js
adcl
or
add
xor
sub
push
pushf
and
out
push
inc
lahf
xor
in
cmp
jno
xor
jno
add
push
push
in
mov
sti
out
xor
out
xor
and
jg
mov
jnp
inc
and
imul
push
lods
and
lods
cmp
mov
pop
mov
pop
addr16
in
mov
roll
mov
cmp
movsl
ret
mov
loopne
outsb
jl
jno
aas
jle
add
hlt
shlb
jno
ja
jnp
xchg
mov
idivb
lock
jge
loop
sbb
sbb
mov
pop
cwtl
lds
adc
cmp
pop
adc
les
mov
pushf
xchg
pop
mov
mov
pop
push
ret
shrl
dec
aas
push
inc
arpl
mov
dec
negb
sub
lret
cmp
pop
jmp
mov
inc
push
movsl
cwtl
xchg
decb
or
jecxz
das
push
jl
pop
push
jns
cmpsl
xchg
xchg
insb
fnsave
sahf
leave
add
aaa
out
push
dec
jmp
push
in
test
dec
fs
daa
jae
xor
jne
nop
cltd
add
lret
mov
int3
pop
push
or
lods
mov
std
jo
test
jmp
cmc
mov
add
divl
repnz
sub
clc
jl
sbb
push
shll
mov
xlat
jne
out
add
stos
orl
and
loope
dec
xor
fisubrl
mov
sub
inc
pusha
pop
jne
mov
inc
or
mov
fidivs
mov
cmp
sub
xchg
sub
into
push
imul
or
inc
jo
repnz
xchg
xchg
cmpsl
or
jl
repnz
andl
pusha
adc
loope
or
bound
mov
xchg
mov
into
mov
xchg
lods
mov
sub
fldln2
xor
call
jne
mov
xlat
mov
fisubrs
testb
dec
mov
mov
pop
int
cmpsl
jmp
in
xor
jge
sbb
andl
cmp
jmp
dec
ss
lods
push
es
or
add
sbb
mov
xchg
in
jo
and
sub
incl
stos
cmpsb
push
inc
fsubs
xchg
or
sub
xchg
scas
fs
fwait
xlat
jge
cmpsl
movb
js
cmp
mov
imull
imul
push
orl
ds
jp
imul
pop
idivl
inc
xlat
dec
hlt
cmpsb
cmp
xor
xorb
jge
pop
stos
cmp
fsubs
ds
daa
sbb
adc
mov
pushf
mov
xchg
jp
mov
rolb
pop
pop
add
das
mov
jmp
lahf
mov
adc
lea
sarl
cs
jp
repz
mov
adc
jae
movsb
jecxz
js
fidivrl
adc
dec
xlat
iret
mov
ljmp
out
or
fmull
jns
push
mov
dec
aaa
fdiv
das
sub
inc
mov
lds
aad
rorb
xchg
add
sbb
cmc
nop
sub
popf
mov
mov
push
push
outsl
nop
cld
cmpsb
inc
mov
call
lds
xor
mov
push
jmp
fs
push
sbb
lds
imul
mov
fwait
rolb
or
adc
loope
lret
pushf
pop
imul
sub
lea
movsb
mov
jne
inc
mov
jo
out
cmp
lret
dec
sbb
aam
or
cmp
lods
pop
adc
xchg
pop
adc
ss
addr16
mov
jge
jo
adc
rorb
sub
pop
insb
jns
xchg
dec
cmp
fidivrl
sub
push
mov
aam
jo
add
mov
pop
pusha
lahf
mov
cmp
pop
out
bound
test
outsl
xor
cwtl
popa
mov
jnp
inc
cwtl
rolb
sub
ret
push
jb
push
scas
and
cmp
out
pop
rcr
add
lahf
test
cmpsl
imul
fucomip
inc
pop
or
cmp
addb
add
mov
cmp
nop
jge
adc
sbb
mov
fistps
xor
jl
sbb
iret
test
dec
pop
xor
pop
imul
and
iret
mov
jge
stos
xchg
gs
add
jp
movsb
xchg
inc
fwait
insl
jno
add
mov
frstor
mov
mov
xor
mov
or
std
xchg
adc
popa
aaa
cli
sbb
push
cld
fwait
xchg
add
out
test
push
fs
cmp
pop
arpl
pop
imul
pop
imul
js
fmull
mov
xor
rcrb
dec
mov
out
rclb
mov
mov
and
sti
pop
push
popf
aas
lret
les
andb
leave
pop
stos
loopne
sbb
loopne
mov
cld
jb
pop
inc
sbb
mov
outsb
loop
es
inc
sbb
and
inc
jbe
jmp
dec
jo
stc
out
int
enter
fcoms
mov
je
je
movsb
and
int3
xlat
int3
add
xor
dec
lds
clc
inc
adc
shlb
push
aas
je
insl
sub
orl
mov
gs
int
and
notl
cmpsb
sbb
cmpsb
dec
or
mov
push
add
sub
jae
scas
inc
jo,pn
mov
sti
pop
out
ret
xor
in
cmp
repz
std
sbbb
gs
jnp
clc
in
jle
imul
xchg
push
out
pop
xchg
lret
in
in
push
rcr
lods
mov
adc
jecxz
xchg
cltd
in
xlat
sub
notl
mov
jmp
jmp
sbb
int3
ficoms
mov
je
xor
movsl
jg
fwait
enter
imul
push
xchg
pusha
jl
xchg
dec
or
inc
mov
leave
repz
adc
jle
xchg
aad
push
inc
add
jno
in
loopne
inc
cli
daa
inc
fs
pop
out
sbb
ffree
in
sbb
daa
lods
jge
shrl
mov
push
addr16
out
sti
ljmp
les
cld
outsl
into
mov
out
insb
push
mov
test
out
dec
xchg
add
dec
ret
in
inc
jo
add
orb
xor
and
imul
call
loope
pop
adc
clc
mov
push
stos
cmp
nop
shlb
test
inc
mull
pop
ret
pop
loop
insl
loopne
pop
das
popa
int
adc
subb
stos
in
movsb
adc
mov
into
popf
inc
dec
std
mov
jbe
cmpsl
stos
insb
ret
pop
sahf
lret
mov
rorb
xor
and
pop
jns
fisubrl
cmpl
dec
out
cmpl
cmc
aaa
and
pop
outsl
aad
insl
pusha
ret
adc
daa
push
adc
outsb
loope
xor
cmpsb
mov
sub
and
loopne
and
mov
xor
jbe
adc
add
and
lret
subl
push
movsb
mov
outsb
add
or
jne
adc
aaa
stos
repnz
adc
popa
lcall
fsubrs
xchg
shll
and
dec
xor
xchg
push
clc
mov
cmp
sub
les
sub
xor
dec
repnz
lahf
cmp
dec
add
movsl
and
mov
push
stos
push
ss
loop
sub
mov
out
fdivrs
fmulp
dec
dec
pushl
pop
shrl
cmp
pop
dec
andb
cmpsl
rorl
fcomps
jae
or
lcall
insb
test
mov
jp
add
mov
adc
jbe
mov
mov
mov
insl
ds
and
pop
hlt
lods
or
cmp
je
push
mov
mov
cmp
and
mov
ss
test
push
ja
push
pop
lahf
sbb
stos
and
data16
ds
scas
and
ja
push
sbb
dec
mov
push
lret
xchg
xchg
js
lock
jb
into
and
mov
mov
or
pop
ds
pop
fs
xchg
and
and
push
mov
xor
es
xchg
and
mov
mov
inc
pop
in
cltd
je
in
mov
scas
xlat
jp
test
sub
jecxz
mov
add
mov
jo
push
cmpsb
push
push
jo
mov
ret
rcrl
dec
cmp
hlt
mov
es
dec
fistpll
lods
cmpb
sbb
push
enter
or
ja
mov
dec
rorb
mov
mov
out
mov
fs
lcall
jge
sub
fcomps
mov
outsb
push
sbb
dec
das
cmc
jo
jecxz
gs
push
mov
xchg
sbb
rolb
jecxz
sub
jecxz
inc
inc
rolb
cmc
xchg
mov
stos
fiaddl
ret
cmp
rep
rcl
mov
sub
push
cltd
push
ja
sbb
jecxz
sub
mov
cmp
imul
xorl
dec
cld
repnz
jp
ficoml
popa
mov
imul
lea
les
adc
push
jno
mov
cmp
inc
cld
inc
sti
pop
jns
cmpsl
clc
ljmp
aam
xlat
pop
in
in
sbb
xor
test
and
and
add
fisttpll
mov
pop
out
dec
fs
in
adc
sbb
mov
dec
jl
jo
add
dec
inc
fwait
jbe
jo
shll
rol
aad
sbb
cmpb
mov
sbb
sub
mov
and
pop
jecxz
mov
ret
out
ret
sarl
psadbw
dec
fmull
xchg
xchg
xorb
mov
push
das
add
sub
gs
lods
inc
inc
or
aas
push
push
add
xchg
test
jmp
add
sbb
jmp
or
pop
add
jle
mov
and
xchg
dec
int3
lcall
dec
shl
adcl
mov
sti
movsb
into
in
jmp
add
add
test
mov
je
test
test
mov
popa
mov
rorl
or
out
lcall
das
sub
sbb
jo
cmpsl
repz
mov
andb
loopne
pushf
cmc
sbb
push
fcom
je
daa
scas
xor
mov
jne
jmp
inc
loop
fildl
sti
mov
push
sbb
xchg
dec
xchg
mov
inc
xor
add
cmp
jmp
ja
sub
sbbl
cmp
sbb
push
into
pop
hlt
pop
leave
ds
pop
dec
dec
aam
dec
dec
loope
xchg
mov
ret
mov
in
ljmp
fildll
pop
aaa
ss
inc
adc
imul
cmp
scas
imul
mov
outsb
xchg
cmp
pop
cmpps
add
push
mov
pusha
lret
xchg
inc
adc
sbb
push
jno
dec
fucomp
inc
xchg
in
test
add
mov
pusha
or
clc
out
inc
lods
clc
std
cmp
test
fnstenv
mov
sahf
lds
push
or
scas
int3
push
xor
xchg
arpl
out
xchg
push
push
js
xor
mov
inc
push
push
iret
mov
shlb
inc
in
insb
cmp
outsb
mov
xchg
sub
ret
xchg
aas
inc
hlt
dec
repnz
sbb
add
inc
cmp
sarl
outsl
dec
sbb
rcrb
int3
cltd
xchg
mov
in
test
lret
sti
pop
cld
pushf
loopne
int
inc
push
and
push
push
js
pop
nop
inc
push
xchg
jb
loope
jge
dec
loop
mov
mov
inc
lock
push
loopne
sbb
adc
test
mov
jmp
adc
das
shlb
stc
or
mov
sub
sbb
rorb
int
lds
test
push
mov
add
sbb
pop
and
sti
xor
mov
andl
pop
mov
mov
in
frstpm(287
jl
push
push
mov
dec
jns
fisubrl
mov
and
mov
stos
repz
ret
jg
push
mov
seta
pop
icebp
fwait
mov
js
or
cmp
adc
adc
ds
adc
cmpnltps
mov
cmp
fidivs
outsl
test
addl
cmc
pop
jecxz
outsl
sub
mov
push
stos
jle
cwtl
inc
xchg
in
loope
out
mov
aad
test
inc
cmp
js
int
in
pusha
jp
push
sub
dec
cmpsl
repnz
std
push
stos
push
xchg
mov
iret
mov
inc
enter
jp
shrl
pushf
lahf
jae
pushf
out
sti
push
popa
decb
pop
xor
xchg
dec
hlt
push
scas
add
fstl
test
aam
je
jle
inc
icebp
fcomi
adc
movsl
inc
ficompl
mov
mov
xchg
out
cmpsl
rcl
lock
sub
bnd
adc
push
movsb
clc
sahf
mov
xor
call
andl
dec
shll
jb
pop
mov
lods
mov
cmpsb
push
fdivrl
ljmp
lea
loopne
push
mov
push
dec
es
fs
das
pop
nop
and
out
push
ljmp
and
sbb
xlat
insl
loopne
out
jecxz
lods
push
push
sbb
cmpb
mov
cli
cmp
std
mov
dec
in
bound
xor
icebp
lret
sbb
mov
pop
shll
insb
and
out
sub
add
xchg
dec
test
inc
popf
and
xchg
lret
jae
rcl
mov
pop
jne
mov
cld
lcall
in
jns
add
jns
xchg
add
dec
dec
and
cld
push
mov
repnz
jg
cmp
popa
push
sti
sbb
inc
push
jle
icebp
jecxz
and
pop
mov
lods
mov
jbe
cmc
ficompl
jb
lret
imul
xchg
add
jmp
mov
push
jbe
movsb
push
movsb
add
mov
push
addr16
push
scas
pop
jbe
insb
or
pusha
push
mov
test
xchg
fstpl
iret
cmp
jg
jp
xor
pop
icebp
inc
push
clc
xchg
push
daa
ljmp
mov
add
fwait
sbb
dec
mov
cmpsb
cmp
ret
stos
sbb
xchg
rcll
std
mov
cmpsb
stos
test
popa
mov
mov
shrb
icebp
dec
mov
mov
fs
test
add
mov
loop
sub
sbb
dec
mov
or
inc
xchg
testb
sub
mov
sub
lock
mov
or
or
sbb
test
insb
popa
subl
test
movb
imul
cmp
outsb
or
jae
inc
xorb
insl
out
cmp
aaa
arpl
lahf
nop
xor
cmp
shr
cmp
pop
jae
dec
sub
adc
test
sbb
add
aas
jle
jo
popa
or
xchg
jnp
sub
fcomps
loope
in
bound
mov
jnp
sbb
xlat
enter
movsl
fidivl
mov
mov
lods
sub
sbb
loopne
vpcmpgtd
call
add
cltd
xor
xor
popl
jecxz
sbb
clc
insb
testb
sbbl
pushf
stc
xor
jns
xchg
sub
pushf
sub
test
dec
xor
mulb
push
jmp
push
scas
sub
mov
repz
fwait
add
mov
fldenv
lcall
lock
leave
rcl
jmp
or
rcll
fwait
pop
push
lods
xor
xor
ret
inc
adc
jg
inc
xor
out
pop
in
inc
mov
mov
and
fwait
adc
jno
std
xchg
and
mov
inc
cmc
mov
scas
jo
addr16
in
dec
out
sub
add
cmpsl
sbb
and
xchg
arpl
mov
adc
push
push
addr16
aaa
ja
sub
ss
or
adc
loopne
mov
adc
in
out
xchg
or
mov
jbe
in
add
inc
push
je
cmp
xchg
dec
lea
nop
dec
and
add
pusha
mov
roll
rol
jl
sub
orl
xchg
cmp
cs
jg
adc
jle
inc
mov
mov
or
out
inc
stos
sub
aas
incl
xlat
push
xor
xchg
fwait
add
cwtl
leave
fwait
inc
fsubr
cli
test
movsl
inc
test
fisttps
inc
or
push
mov
cmc
xor
daa
xchg
xchg
sub
sbb
push
mov
lcall
or
dec
lret
je
std
xor
dec
dec
cmpsb
mov
rol
aas
loop
data16
push
popf
loope
adc
sti
add
mov
mov
add
filds
and
lret
ljmp
lahf
xlat
or
mov
pop
and
jae
sub
lea
ljmp
pop
xorb
jbe
mov
shl
fnstenv
dec
int3
jg
dec
testl
inc
iret
mov
sbb
sbbl
push
xchg
loopne
or
sti
mov
lock
stos
leave
mov
cmpsl
cmpsb
fcmovnb
mov
xor
sbbl
pushl
xlat
mov
ss
loopne
lret
cmc
leave
inc
lahf
jae
test
push
inc
push
das
filds
in
js
sti
addr16
ja
add
xchg
jmp
fucomi
subl
inc
daa
mov
pushf
xor
mov
or
jmp
mov
mov
mov
adc
jg
jae
popf
xor
ret
push
jb
jne
push
cmp
stc
adc
mov
into
sub
xor
push
outsb
popf
daa
int
xlat
mov
imul
add
test
enterw
icebp
out
jae
jo
stos
mov
gs
clc
out
jl
sbbl
xchg
fildl
and
pop
shl
pop
dec
in
aas
clc
sahf
cmp
mov
xchg
jno
lahf
stos
xor
mov
xchg
fistps
mov
pushf
mov
pop
repz
out
or
stos
fmull
mov
adc
adc
pushf
jmp
or
lcall
push
iret
xor
push
cmc
out
push
sarb
xor
add
mov
sbb
outsb
or
das
pop
push
divl
insl
mov
or
mov
test
std
movntq
faddl
add
push
push
adc
pop
pop
out
movups
pusha
int3
ret
xor
addr16
shll
mov
jmp
cli
xor
mov
push
lcall
xor
nop
pop
jl
fsubrp
sbbl
adc
test
xlat
mov
cld
pop
insb
lods
jb
sbb
pop
lret
sub
rep
jo
pushf
ret
filds
or
jo
andb
adcl
xchg
fldcw
xor
mov
stos
jnp
fsubp
inc
scas
jb
or
jb
mov
and
in
xlat
cwtl
lret
loope
mov
rcrb
shll
leave
mov
pop
fcoms
or
jmp
loope
lea
cmpsl
out
gs
mov
leave
and
inc
lods
jmp
mov
dec
pop
mov
sub
mov
aas
sbb
push
jae
arpl
outsl
cltd
xor
xchg
mov
scas
inc
sub
adcl
or
rcr
xor
inc
pop
push
push
add
and
cltd
add
aaa
mov
ss
mov
lret
mov
incl
jecxz
add
add
nop
cwtl
pop
sti
xor
lcall
push
cmp
das
icebp
movsl
enter
arpl
xchg
cmp
mov
mov
push
icebp
xchg
insl
das
or
stos
clc
insb
shlb
push
mov
mov
xlat
scas
repnz
bound
inc
aaa
clc
inc
lds
xor
inc
push
loopne
push
cmpsb
and
push
in
sbb
inc
icebp
test
inc
push
rcll
mov
xchg
js
push
add
fwait
dec
xchg
dec
adc
adc
icebp
lds
adc
aam
adc
inc
orb
aad
add
fstpt
sarl
rolb
out
mov
arpl
stos
push
cmc
cmc
mov
push
inc
pop
cmp
inc
or
mov
dec
cmp
pop
mov
pushf
mov
push
push
outsl
pop
jno
adc
xor
fdivs
iret
lret
xchg
mov
ret
icebp
jno
movsb
push
js
or
mov
jg
xor
cltd
xor
jge
sub
shll
and
mov
ret
mov
xor
jle
pop
mov
sahf
and
inc
pop
scas
mov
dec
and
icebp
sub
mov
daa
flds
loope
test
mov
in
aad
lcall
ja
mov
test
popf
xchg
aad
jmp
loop
out
rorb
dec
mov
adc
push
lret
push
in
inc
inc
cmpsb
mov
shrl
mov
fiaddl
xor
jp
fldl2t
jns
stos
xchg
jo
push
insb
rclb
je
sti
icebp
out
cmpl
push
std
pop
ret
outsl
push
mov
imul
out
cmp
fnstenv
or
xchg
and
mov
in
xchg
test
adc
sbb
dec
fdivl
cmp
arpl
mov
loopne
ret
pop
push
out
mov
lret
jg
lods
jae
mov
jo
sub
lods
jp
out
ss
mov
popa
out
push
push
fld
pop
ret
dec
dec
mov
xlat
xchg
insl
inc
xchg
xchg
imul
sub
mov
jb
cmp
xor
fidivrl
out
mov
outsl
jmp
xor
in
fstl
sbb
sahf
stos
jnp
jp
mov
jge
inc
and
cltd
scas
ret
loope
data16
and
xchg
sahf
mov
daa
in
or
xchg
test
sbb
cmpsb
mov
into
lahf
jo
jnp
mov
add
mov
ret
bound
push
lock
inc
fsubrl
mov
lret
add
adcb
mov
push
gs
cmp
push
popa
sbbl
pop
pop
jmp
or
aaa
lods
jno
or
stc
jl
mov
leave
les
repnz
lods
fstpl
xor
xor
dec
clc
pushw
mov
cmp
imul
inc
das
addr16
aaa
push
mov
push
fdivl
je
jo
fcomps
mov
call
jno
addr16
xchg
call
or
ds
dec
sti
mov
push
lods
or
arpl
cmp
aad
inc
pop
lcall
inc
cmp
popa
cmc
aaa
insl
xlat
jl
in
lret
data16
xlat
xchg
fdivp
int
ss
js
movsb
pop
adc
lret
dec
mov
mov
fcomps
or
push
sub
dec
fnstsw
in
mov
push
jne
outsb
add
xchg
dec
loop
mov
jne
leave
add
push
mov
repz
repnz
arpl
mov
mov
incb
fidivrs
test
nop
sub
push
push
and
mov
adcb
mov
or
aas
data16
push
pop
incb
and
push
decb
mov
xchg
in
sub
lds
mov
jl
aad
cmp
mov
jg
jl
outsl
les
push
test
xor
ss
lock
int
mov
cli
or
mov
cmp
push
adc
ret
add
shrl
negb
dec
sahf
and
xor
cmp
addr16
dec
dec
jno
ret
sbb
loop
xor
mov
push
imul
add
sti
adc
adc
push
mov
leave
icebp
into
iret
ja
xchg
push
fadds
inc
mov
in
jno
cmpsl
bound
fisttpl
movsl
mov
jnp
dec
mov
hlt
into
mov
mov
std
pop
lods
mov
arpl
xchg
sub
iret
data16
lret
xor
pop
dec
rcl
jge
push
cld
push
fwait
aas
xchg
inc
mov
loope
inc
pop
or
pop
fwait
xchg
and
sub
and
jmp
dec
aad
adc
pop
push
movsb
dec
repz
inc
cltd
cli
add
mov
mov
mov
in
scas
lods
add
push
pop
adc
mov
inc
loop
push
adc
clc
adc
pop
mov
mov
dec
mov
or
jnp
add
push
adc
xchg
add
adc
test
sub
push
leave
add
inc
sub
mov
scas
mov
pusha
sbb
jmp
adc
push
cmp
pop
in
pop
xor
outsb
xor
jle
mov
sbb
popa
push
fldl
xchg
lods
imul
push
push
out
xor
mov
sub
sbb
lds
test
and
divb
out
push
repz
mov
push
push
or
jno
xor
mov
sbb
mov
stos
mov
aad
daa
cs
dec
fldl
shlb
and
xchg
xor
lcall
data16
mov
insb
js
add
bound
mov
mov
popw
shlb
sbb
inc
push
cltd
fs
cwtl
cwtl
dec
cmp
andb
dec
lods
jmp
jmp
cmp
pop
push
in
dec
inc
jo
pop
jae
mov
adc
es
ja
testb
mov
iret
andb
imul
loop
dec
lock
dec
dec
adc
jmp
adc
jbe
mov
shl
or
add
cmp
jg
mov
sbb
and
jo
incb
in
jae
daa
mov
nop
in
push
sbb
pusha
movl
jmp
mov
mov
and
add
adc
test
mov
xchg
popa
jb
sbb
mov
lods
out
or
lcall
adc
push
xor
jp
es
clc
fwait
or
into
pusha
cmp
xchg
scas
cmp
loopne
shll
lds
pop
cmp
pop
jmp
dec
mov
jmp
fisttpl
and
and
in
push
lock
fdivs
push
fmull
into
cmc
mov
xor
insb
add
push
mov
and
adc
mov
push
shll
sbb
mov
sbb
sub
pushf
ret
xchg
int3
in
stos
xor
fldt
dec
fs
sub
shlb
or
cs
rcr
jge
outsb
insl
jno
pushf
call
inc
dec
add
in
sahf
adc
arpl
cmp
mov
icebp
lea
iret
mov
andl
jns
scas
add
pop
or
es
jae
and
push
pop
shrl
adc
sub
rcll
dec
push
cmp
push
aas
lods
lea
addr16
popf
imul
jne
test
lahf
ss
push
mov
xchg
xchg
outsb
cmp
cs
testb
cmp
cmp
faddl
stos
das
dec
lock
sbb
mov
in
add
in
lods
fdivs
mov
push
in
aad
cmp
test
mov
fcmovnbe
cmc
xchg
jnp
or
xchg
mov
lds
mov
adc
xchg
inc
sbb
aam
in
lods
mov
add
adcl
gs
xchg
jge
sbb
dec
dec
fwait
scas
cs
mov
js
xchg
cmpsl
sahf
sbb
cmpb
repnz
mov
mov
pop
xor
cmp
push
mov
into
mov
sub
pushf
fisubrl
pusha
or
xor
cmpsb
mov
subb
or
fwait
jmp
push
sbb
addr16
leave
mov
into
jnp
dec
stos
lds
in
mov
pusha
outsb
inc
test
jno
insl
push
or
pop
mov
mov
and
mov
dec
xor
mov
pop
lods
pop
test
xor
push
clc
mov
mov
sar
mov
loop
or
adc
dec
sbb
mov
jae
inc
mov
clc
call
mov
adc
test
push
pop
fwait
pop
pop
dec
sbb
push
pop
mov
mov
mov
inc
outsl
adc
shll
push
imul
popf
rorb
mov
or
and
dec
cmp
cltd
std
popa
mov
or
data16
lret
inc
aaa
push
orl
cwtl
fsubrs
mov
mov
xor
jmp
xchg
or
or
mov
push
adc
outsl
je
jl
es
in
jae
lret
mov
cmp
outsl
dec
mov
loopne
adc
sbb
add
xor
popa
and
and
inc
jg
cli
mul
jle
cmpxchg
mov
mov
out
test
pop
pop
push
fbld
mov
test
nop
sub
bnd
shll
fcomps
add
cmpsd
or
inc
int
dec
aas
call
sbb
dec
xor
scas
mov
mov
loope
push
xchg
pop
xor
push
mov
inc
jecxz
xor
enter
pushf
push
cltd
sbb
enter
push
inc
jle
cmp
lret
fisubrs
and
cld
mov
dec
cmp
es
imul
mov
push
mov
inc
daa
inc
pop
pop
and
test
dec
and
jge
pop
adc
sbbb
add
imul
sti
xchg
movswl
pop
add
add
lcall
cmc
mov
out
and
stos
dec
lcall
mov
or
xchg
push
je
movsl
in
add
mov
dec
fdivrl
mov
lds
xchg
insb
xchg
imul
leave
mov
pop
mov
push
test
rorl
mov
daa
or
repz
inc
insl
out
insl
xor
sarb
xor
cmp
out
inc
xor
mov
pop
popa
mov
adc
lds
jo
cwtl
push
sbb
cmc
xor
and
jmp
and
out
jb
stos
cmp
aam
jmp
js
add
mov
rcrb
push
adc
and
clc
xor
ds
dec
fcompl
sub
mov
cmp
xor
sub
movsb
mov
xchg
insb
call
into
inc
dec
cmp
cmp
fbld
lahf
mov
and
mov
adc
sub
add
pop
mov
mov
fidivl
jp
rcr
jmp
inc
or
pop
data16
shlb
movb
pop
dec
add
pop
mov
popf
xor
xor
jge
rep
and
cmp
xor
xchg
roll
jp
fiaddl
xlat
xchg
add
outsb
lds
sbb
leave
sbb
jecxz
sub
push
ljmp
jno
movsl
mov
fsubs
shrl
mov
das
adc
jecxz
ror
cltd
into
dec
inc
rcrb
jge
hlt
xor
movsb
adc
and
repz
aam
ljmp
xor
jl
rol
dec
leave
aaa
adc
mov
fldenv
xchg
js
pop
xor
add
jp
push
ss
ret
push
sub
dec
sbb
outsb
loope
or
sub
setns
sbb
pop
xlat
mov
mov
daa
je
dec
xor
cmp
flds
cmpsl
cs
jl
icebp
mov
mov
sub
xlat
js
mov
jp
xor
or
fildl
xchg
push
packsswb
movsl
daa
jb
adc
sbb
add
xor
arpl
outsb
cmc
add
cmp
push
mov
scas
and
int3
adc
xchg
cmpb
mov
sbb
cmp
fwait
and
inc
fs
mov
cmp
mov
push
jecxz
or
rcl
dec
test
jmp
or
and
sub
sub
pop
cmc
test
std
jl
jecxz
lret
ds
mov
adc
sbb
mov
fwait
xor
push
xchg
test
fcmove
bound
les
cmp
adc
xor
and
popf
stc
sbb
and
data16
xor
add
adcb
pop
aaa
xor
or
cmc
mov
addr16
mov
inc
hlt
dec
addb
loopne
xor
leave
pop
insl
add
push
jmp
xor
or
or
lods
rorl
xor
push
ds
xchg
adc
ljmp
shr
pop
rolb
fs
dec
mov
inc
addr16
dec
inc
aam
jl
mov
adc
rolb
jns
mov
or
xor
lret
and
adc
fiadds
and
push
movsl
lock
jnp
jl
dec
mov
add
adc
into
and
cmp
sub
mov
or
je
and
or
subl
jo
push
aaa
or
leave
fldcw
iret
bound
mov
sub
adc
push
shrb
cmp
inc
pop
and
inc
add
add
dec
cmp
pop
bound
mov
in
rcrl
pop
adc
pop
outsl
lret
dec
add
mov
sub
sti
cmc
movsb
repnz
or
movsb
xlat
jl
inc
out
andl
shl
repz
mov
inc
out
push
loop
pop
fwait
pop
sbb
jmp
jecxz
adc
push
cs
xchg
mov
mov
mov
cmp
adc
jbe
hlt
push
cld
pop
lock
es
jno
ss
scas
movsl
scas
adc
xor
dec
lock
jg
mov
seta
inc
imul
adc
dec
push
and
cwtl
leave
xor
jae
data16
sbb
push
xchg
jecxz
push
sbbb
add
lods
or
fisttpll
mov
push
stos
pop
aam
sbb
xchg
pop
sbb
cmp
cwtl
cmp
push
sbb
cmpsb
add
mov
add
test
test
repnz
mov
adc
out
xchg
push
movsl
jl
repz
mov
imul
dec
aas
lds
ja
cmpsb
pop
add
in
shrl
push
lahf
insl
cltd
test
lock
pop
fdivr
daa
mov
mov
inc
enter
dec
iret
adc
inc
enter
xlat
repnz
cmc
inc
shll
lahf
shr
cmc
adc
aaa
add
ja
pushf
out
xlat
cmpsl
out
pop
cmp
dec
pop
repz
nop
sbb
lds
inc
mov
or
mov
lds
in
push
pop
add
xor
flds
pop
cmp
paddusw
push
rcrb
mov
fcmove
icebp
cmp
loope
jb
in
xchg
sub
cmp
pop
pop
imul
xor
inc
loop
inc
sbb
loopne
jp
cs
lods
push
jns
test
je
fs
cmpw
in
sahf
dec
mov
in
and
jb
push
mov
mov
sub
mov
fmull
cs
into
and
std
pop
lods
pop
dec
xchg
lea
cmp
fs
mov
mov
cmc
lret
call
pop
loopne
fnstenv
lret
imul
xor
cmp
movsl
pop
shrb
adcl
cmp
movsl
jecxz
and
test
push
jb
adc
dec
rol
add
fwait
add
loope
cli
mov
mov
or
add
mov
adc
push
loopne
lods
xchg
imul
adc
and
xchg
adc
mov
gs
popf
sub
dec
sbb
xlat
shl
fstpl
negb
ja
rcll
xor
xlat
notb
and
data16
xchg
cwtl
push
test
sbb
repz
jg
xchg
mov
in
icebp
cwtl
sub
adc
rep
xor
push
roll
lcall
cmp
sbb
scas
cmp
mov
in
sbb
adc
imul
push
dec
shrl
repnz
mov
xchg
dec
icebp
and
cmc
pop
popa
inc
test
jne
in
sbb
mov
xchg
jmp
add
lods
add
push
or
fstpl
lret
jg
mov
xchg
push
jae
or
mov
cld
seta
dec
adc
cltd
das
pop
icebp
cli
xchg
cmpl
pop
cld
out
cs
dec
push
ja
mov
push
adc
or
in
or
adc
popa
push
xor
adcb
pop
jno
xlat
jmp
xchg
imul
ret
jle
xor
out
add
popa
dec
pop
aas
imull
mov
push
xlat
mov
insl
or
pop
cmp
pop
pop
cmpsb
mov
jo
clc
popa
mov
push
xchg
inc
xor
push
gs
leave
fs
clc
ja
inc
xlat
xchg
adc
jecxz
mov
rol
dec
add
imul
mov
lock
cmpsb
sti
rclb
add
mov
mov
std
sub
dec
pop
movsl
out
lahf
arpl
mov
mov
pop
dec
xchg
imul
imul
out
lea
push
push
dec
lods
xchg
ss
xchg
pop
push
ret
mov
mov
mov
pop
adc
sbb
mov
out
push
lods
inc
subl
push
mov
add
sub
ret
xlat
or
cld
xchg
sbbl
in
mov
dec
mov
out
jp
xchg
je
mov
mov
cmp
mov
cltd
jmp
or
out
sub
ds
cmpsl
add
mov
popa
sahf
scas
or
popf
hlt
rcrl
sahf
loop
orb
andl
arpl
xor
xor
jno
lds
push
call
daa
sbb
cmp
lcall
lods
pop
fpatan
jo
and
sarb
adc
lcall
and
push
push
call
call
sbb
push
and
cld
mov
bound
mov
leave
fld
jae
mov
lret
mov
pop
xor
mov
lea
cwtl
xchg
pop
std
lahf
push
add
xchg
xchg
pop
leave
mov
cmp
and
sub
sbb
mov
lcall
sbb
fadds
xor
inc
scas
and
mov
xor
dec
mov
inc
stos
mov
jnp
addb
jbe
mov
test
pop
pop
sub
test
sub
add
les
inc
adc
inc
inc
in
add
test
pop
pop
in
rcll
jl
jge
mov
xor
add
xor
les
mov
fldl
ds
dec
xchg
pop
das
mov
mov
dec
or
adc
push
mov
insl
sub
dec
pop
ljmp
jecxz
or
mov
sbb
push
inc
jge
pop
cmp
and
xchg
xchg
xor
js
and
push
cli
push
ret
pop
jmp
dec
or
subl
or
pop
ret
sbb
out
das
cmp
movsl
popf
inc
testl
mov
mov
nop
or
sub
loope
mov
test
imul
cmp
sbb
fistl
cmpb
mov
or
fiaddl
movsl
add
push
mov
into
adc
pop
xor
lea
mov
call
scas
xor
mov
roll
cmp
mov
aad
mov
cmp
daa
popa
rcl
xchg
test
in
xchg
clc
sbb
sbb
gs
or
rcll
adc
jne
js
xchg
daa
lcall
adc
or
pop
ret
jae
inc
cwtl
mov
dec
and
out
jge
push
add
scas
adc
imull
inc
stos
ja
outsl
daa
inc
sbb
xchg
jmp
negb
sub
mov
push
in
pop
movsl
out
xor
orl
lock
stc
nop
add
dec
in
add
clc
repz
mov
sub
or
pop
cmp
pop
test
lret
mov
addr16
jo
pop
daa
sbb
lret
mov
in
inc
fidivrs
jg
push
popa
pusha
rcrb
call
out
fldl
les
add
shrb
in
scas
imul
int
ja
mov
mov
mov
fnsave
or
push
nop
pop
fsub
jnp
js
adc
pop
fs
xchg
inc
inc
xlat
popf
rorb
repz
mov
sub
jp
xchg
scas
sub
loopne
inc
pushf
sub
jge
shl
ljmp
out
dec
in
aas
mov
das
push
fistl
xor
cmp
dec
insl
add
dec
andb
fnstcw
pop
mov
cltd
outsl
icebp
push
mov
andl
les
loope
pop
mov
sub
mov
inc
adc
xor
adc
sub
jmp
inc
adc
int3
cmp
icebp
inc
lods
mov
loope
pushf
sarb
cmp
loopne
int
dec
cmp
dec
rol
pop
ret
push
xor
shrl
mov
mov
sarl
pop
xor
jnp
jb
adc
xchg
addr16
rcrb
mov
testb
leave
adc
inc
faddl
dec
jecxz
test
mov
loop
aas
push
inc
cltd
xor
and
lods
loopne
mov
mul
mov
jl
push
outsb
sub
cmp
nop
bound
in
xor
imul
adc
test
cmp
cmpsb
in
filds
cmp
lcall
jbe
fwait
xor
sub
mov
cmp
mov
xor
mov
sub
sbb
scas
jb
xchg
ret
jp
cld
xchg
lahf
cmp
xchg
jp
stos
pop
mov
loope
rorb
psubusw
cld
shlb
testb
pop
movsl
addr16
aad
mov
or
inc
das
jle
pop
mov
push
cmp
cmp
dec
in
int3
fidivs
aad
jne
sub
or
cmpsb
loope
cmpsb
arpl
push
nop
jl
andps
mov
negl
stos
setb
insb
and
mov
or
imul
aad
jno
cltd
lret
das
ret
cmp
and
mov
xchg
push
sahf
mov
out
out
xor
addr16
decl
xchg
jle
mov
jle
cs
ss
testb
cmpxchg
mov
aam
lahf
add
inc
push
jb
arpl
sti
mov
sarb
add
jb
cmc
imul
xchg
orl
pop
push
mov
inc
scas
call
lcall
mov
inc
popa
ja
dec
sbb
stos
push
ficomps
jg
dec
inc
in
js
sahf
test
in
mov
lods
lret
sbb
xor
jle
je
pusha
jnp
sbb
mov
pop
add
dec
mov
jecxz
sti
ret
dec
xchg
stos
pop
bound
push
in
hlt
inc
jb
lock
daa
push
cmpsl
test
dec
cmpsb
adc
cs
outsb
lods
test
or
cmc
or
lea
out
scas
mov
fbld
jmp
sub
loopne
shll
repz
cmpl
lcall
xchg
mov
shrl
sbb
and
sub
push
outsl
repz
inc
push
out
jmp
int
mov
push
test
jns
inc
and
cmp
ja
aad
cmovnp
push
hlt
cmp
movsb
push
mov
orb
or
or
cmp
and
mov
push
jne
cmc
mov
xchg
testl
sbb
dec
lret
mov
filds
imul
test
push
and
outsb
push
in
sub
lock
lret
insb
jns
in
push
push
lcall
das
ss
ss
fists
movsl
lea
movsb
imul
mov
mov
sahf
pop
fsubr
xor
or
inc
pop
push
push
xor
xorb
loopne
pop
xchg
sub
insb
jo
mov
pop
mov
jae
mov
cwtl
lret
outsb
out
pop
test
popa
xor
pop
daa
sub
rorb
scas
jno
pop
push
pop
cmc
add
mov
sub
pop
fidivrl
fisubl
jg
pop
ss
push
jne
decl
movsl
mov
shlb
mov
dec
das
xorb
shr
jnp
push
xadd
addr16
jno
xlat
dec
mov
insl
sbb
mov
insb
fbstp
adc
inc
sbbb
outsb
and
fucomip
mov
jge
dec
mov
push
aas
repnz
jecxz
or
cmp
js
inc
ljmp
add
aad
lret
rolb
push
xchg
iret
iret
add
adcl
out
lahf
imul
cmc
scas
mov
sbb
int3
pusha
jmp
push
je
pop
push
jbe
mov
xchg
mov
test
or
inc
nop
pop
jbe
fwait
or
xchg
sub
sub
sub
ret
add
mov
pusha
push
enter
inc
insb
fildll
sbb
ss
dec
dec
mov
or
pop
sub
sbb
std
sahf
rcr
and
pushf
xor
adcl
fistl
jle
dec
lods
sarb
pop
out
das
xchg
shlb
aad
inc
mov
dec
xor
sahf
or
mov
lcall
cmp
lea
inc
stc
adcb
pop
repnz
mov
and
in
in
cmpsl
xor
xorl
dec
inc
dec
mov
aas
mov
imul
rcrb
aaa
jge
xor
mov
add
adc
test
mov
pop
mov
sub
repz
add
imul
cli
or
imul
scas
mov
arpl
jl
movsl
mov
mov
jge
fiaddl
sbb
pop
fdivrl
andl
shll
cmp
out
inc
mov
sbb
sbb
jnp
addb
mov
pop
push
xchg
jnp
sbb
inc
sub
xor
mov
movsb
ljmp
aas
xor
xchg
push
dec
mov
shlb
cmp
sub
iret
enter
pop
push
in
pop
hlt
fsubp
and
popf
in
pop
lock
inc
sahf
sub
push
mov
xor
jne
bound
rcll
mul
add
pop
and
je
mov
and
cltd
lods
adc
and
pop
xor
xor
cmp
push
inc
pushf
push
stos
mov
sub
dec
out
in
test
pop
mov
lock
push
mov
and
sbb
sbb
fsubr
repnz
adc
mov
les
enter
cmp
adc
sbb
xlat
pusha
cld
inc
jge
push
imul
inc
pop
hlt
lret
push
mov
mov
loop
rcll
pusha
xor
loop
add
and
mov
sub
sbb
pushf
xchg
cli
mov
aaa
out
adc
inc
repz
inc
hlt
xchg
dec
scas
inc
pop
loopne
int3
push
mov
ds
das
sti
aam
or
mov
pop
test
jge
in
jmp
lcall
lea
xchg
insb
push
movsl
xchg
xchg
scas
xorl
fistl
fmuls
scas
out
push
dec
orl
mov
stos
jp
adc
jne
das
sahf
dec
inc
xchg
lods
ja
dec
pop
pop
lcall
xchg
or
dec
arpl
jno
push
nop
cmp
or
test
sar
into
cltd
in
pop
fnsave
add
insl
sahf
aaa
fwait
push
movsl
and
stos
or
cmp
mov
lcall
jnp
out
push
jl
add
in
mov
shr
sti
or
lock
int
sbb
int
cmc
aad
and
shll
push
es
cmpsb
in
inc
scas
sub
mov
pop
mov
cltd
push
jbe
mov
pop
cltd
rcrl
test
and
in
js
or
js
cmp
repnz
hlt
aad
mov
inc
jg
cmpsb
movsb
daa
ret
jl
jl
jp
mov
fwait
ja
mov
inc
and
inc
mov
jg
push
insb
fdivrl
pop
sbb
int
insl
aad
fbstp
cmp
sti
push
jo
jae
cmp
insl
sbb
push
mov
mov
jbe
in
add
subb
int
repnz
mov
xchg
add
or
mov
jg
mov
pusha
jmp
cmpsb
shrl
pop
jl
lea
in
pop
jbe
loope
daa
dec
loope
xchg
sbb
pop
pop
lods
add
das
adc
inc
insb
fldcw
jo
cli
sbb
or
sub
xor
xchg
loop
push
movsl
jns
xchg
in
lds
mov
or
adc
ja
mov
fldt
push
adc
movsb
jge
sub
insb
jnp
repnz
inc
mov
xchg
inc
ficoms
int3
and
mov
and
mulb
sarb
xchg
sub
push
mov
iret
inc
call
xchg
mov
inc
add
mov
or
aad
push
cld
out
and
hlt
jg
mov
out
cld
mov
and
movsl
data16
dec
xlat
xor
imul
lock
inc
stos
pusha
outsl
add
aas
mov
sahf
out
cmc
fsubs
in
xlat
scas
dec
push
scas
cmp
lock
hlt
lock
mov
cwtl
stos
fcmovnu
std
and
loope
insl
into
movsb
inc
nop
xlat
and
dec
movsl
mov
fisttpl
mov
mov
frstor
jne
fsin
enter
rcrb
flds
inc
inc
loopne
jg
mov
mov
cld
jecxz
cld
cmpsl
rcl
sub
dec
stos
mov
dec
movsb
popa
idiv
inc
xor
pop
and
sub
mov
in
pop
adc
int3
sar
out
cmp
adc
mov
sub
adc
or
jle
out
lcall
xor
into
dec
sub
adc
mov
leave
aaa
pop
jo
push
ljmp
stos
adc
push
leave
push
lret
lret
movsb
mov
frstor
popa
fcmovne
enter
es
mov
iret
push
and
mov
lock
push
inc
and
jmp
xchg
xchg
jle
dec
in
loopne
movl
insb
jne
jns
add
mov
popa
sbb
rol
shrl
cs
sub
mov
or
cmc
cmp
adc
pushf
ficompl
mov
aaa
icebp
shll
ljmp
xchg
push
inc
movsb
cmp
daa
repnz
mov
fisttpl
enter
lock
xchg
cmpsb
addr16
jg
ja
fwait
das
mov
dec
aam
ljmp
js
iret
mov
push
mov
inc
int3
in
js
fstpt
pop
dec
push
in
adc
adc
adc
push
imul
xchg
sti
mov
lods
add
push
push
jle
notb
push
dec
mov
leave
fsubrp
cli
inc
add
je
pushf
and
fsubr
xchg
pop
es
xchg
insb
mov
repnz
in
jbe
call
and
sub
jmp
hlt
xor
stc
xor
jge
xchg
sahf
xchg
jge
mov
in
jbe
sarl
xchg
sbb
lret
bound
test
jno
in
push
fmuls
push
outsl
jmp
or
xchg
cmpsl
push
mov
cmpsb
cmp
in
adc
loopne
cmp
cmpsb
sbb
pop
cmp
scas
clc
dec
cmp
xor
push
push
dec
fisttpl
or
sbb
xchg
xor
mov
xchg
jg
sahf
stos
sbb
call
out
lock
and
in
dec
mov
jmp
dec
xor
xor
roll
lahf
pop
jne
movb
pop
cmp
lea
outsl
sti
nop
mov
adc
xchg
xchg
add
cld
jno
mov
fdivrs
outsl
cltd
out
je
ljmp
mov
fisttpl
push
iret
mov
or
sbb
mov
mov
jp
arpl
pop
popf
outsl
or
add
lods
je
sahf
fwait
arpl
adc
and
test
rorb
rcr
call
mov
cmp
push
adc
neg
xor
mov
xor
notl
and
or
jbe
mov
std
lods
jg
nop
daa
insl
dec
lret
rcl
xor
sbb
rorl
jno
mov
mov
xor
mov
jno
inc
sbb
es
iret
mov
fldt
or
hlt
jno
cltd
lcallw
inc
arpl
inc
filds
ret
and
imul
addb
in
inc
fsubs
pusha
loopne
pop
jo
adc
mov
addb
jmp
xchg
add
idiv
xchg
es
or
stos
mov
pop
lret
lock
lcall
iret
jae
add
xor
int3
imul
xchg
xchg
mov
add
mov
add
jne
push
or
mov
xchg
dec
outsb
pop
fsubl
xchg
lods
roll
mov
and
push
xchg
mov
xchg
add
loopne
adc
stos
ss
fcomp
push
mov
mov
cmpsb
dec
sbb
and
jle
sbb
hlt
xor
insb
dec
out
rorb
pop
fmull
out
inc
sub
xchg
test
data16
gs
mov
ljmp
loopne
lahf
pop
aaa
push
push
std
dec
pop
loop
mov
outsl
sub
shrb
xchg
rcl
sub
push
and
scas
popf
push
pop
dec
push
or
push
out
subl
setne
out
xor
repz
adc
pusha
jo
icebp
mov
xchg
out
mov
ljmp
jae
stos
inc
add
push
jp,pt
pop
cmp
mov
push
insb
fidivl
js
es
loope
or
mov
in
addl
ja
xchg
mov
jnp
mov
pop
in
add
in
and
outsl
inc
inc
pop
jnp
jb
in
pushf
pop
movsl
dec
add
repnz
ret
jnp
jns
push
movsl
pop
dec
jae,pn
int3
movsb
mov
into
addr16
cmp
imul
int
jbe
stos
iret
sbb
fmull
orb
je
les
cmc
sbb
dec
xchg
and
lcall
push
bound
int
or
or
lods
ss
mov
cmpsl
push
xchg
mov
data16
lcall
dec
out
fdivrs
daa
ret
rcll
mov
push
rol
pop
in
cmp
clc
push
xchg
jns
arpl
xchg
xchg
cli
adc
fdivrp
js
pop
sarl
sbb
push
mov
or
xor
push
cmp
cmp
sahf
clc
mov
cld
xchg
mov
sbb
pop
imul
or
fisttpll
shr
outsb
shll
xor
addl
mov
mov
jnp
dec
movsb
aas
aaa
iret
subb
and
lock
push
adc
pop
dec
add
mov
jbe
push
pop
add
adc
or
adc
fwait
movsl
sub
xor
in
xchg
stos
or
adc
jb
insb
sahf
in
jle
mov
pushf
or
sbb
test
test
pop
aas
xor
arpl
sub
test
lret
jns
lea
jnp
out
xor
out
fnstsw
lock
lea
or
ljmp
jb
mov
pop
mov
outsb
jecxz
out
test
cmp
popf
loopne
xlat
je
loop
adc
fdivl
jb
push
mov
xchg
jbe
imul
call
popf
cmp
cs
aas
mov
mov
mov
cmp
out
loop
icebp
push
test
cmpsl
testl
mov
mov
push
adc
les
enter
sbb
mov
adc
not
jne
or
mov
cld
inc
jle
xor
gs
stc
and
adc
ret
mov
or
lret
roll
test
test
fstl
repz
adc
test
aaa
and
cwtl
das
pop
mov
mov
out
pop
dec
sub
pop
stos
stc
fcompl
inc
and
andb
xchg
jns
adc
test
faddl
cmpsb
inc
bound
and
jle
mov
xorb
or
cmpsl
fcompl
and
jnp
daa
push
dec
lret
sub
pop
sbb
lods
xchg
add
adc
add
sbb
gs
push
cli
loopne
push
je
sub
fldt
lcall
sub
mov
xchg
popa
lret
sti
mov
mov
inc
or
das
or
or
pop
fnsave
add
aas
fwait
ss
test
jmp
flds
imul
lds
sub
sar
xlat
inc
insl
ja
jmp
fimull
pop
sbb
cwtl
push
clc
cmp
imul
out
out
aas
mov
mov
stc
xor
arpl
sti
xchg
shlb
push
aaa
repnz
push
repnz
repnz
cmc
xlat
jmp
push
lds
mov
pop
mov
cs
pushl
push
ficoms
xchg
xor
es
lods
outsl
inc
jg
inc
fs
inc
fnsave
stos
stc
filds
push
mov
jecxz
inc
pop
cld
xchg
popf
mov
mov
fistpll
js
and
sbb
repnz
lods
jg
or
je
jns
mov
mov
pop
adc
xchg
cmpsl
sti
xorb
mov
cmp
addr16
dec
and
inc
or
insl
test
dec
adc
imul
popf
call
dec
dec
in
mov
xor
sub
rcrb
hlt
xlat
xor
inc
xchg
add
mov
sub
adc
cmp
push
jno
pop
movsb
movb
sub
in
fcomps
pop
mov
test
xchg
cmp
sahf
sub
cmp
sub
mov
outsl
mov
cltd
std
adc
xlat
cmp
dec
push
sti
sbb
push
js
xlat
mov
test
jbe
lock
cmp
xor
pop
mov
mov
cmp
sbb
inc
pop
nop
sbb
mov
pop
cli
and
mov
loope
cltd
repnz
inc
dec
pop
dec
dec
jge
dec
cmp
neg
shrl
add
jae
xor
mov
test
pop
mov
cld
push
imul
fstpt
fldl
aas
push
sub
or
mov
or
mov
mov
stos
inc
in
mov
or
cmp
lret
xor
lock
jmp
pop
mov
iret
sub
ds
mov
push
in
stc
and
mov
in
jp
decb
rorl
xchg
jle
inc
jecxz
fisttpll
js
stos
lods
inc
fnsave
in
lret
dec
cmp
adc
outsb
ret
dec
jns
sub
adc
or
add
ret
pop
decb
jne
pop
cmpsl
mov
rcll
int3
jg
push
out
dec
cwtl
push
ljmp
jno
adc
sub
inc
push
and
mov
pop
push
imul
pop
mov
pop
mov
push
scas
fildl
int
jg
push
dec
xor
and
lret
adc
jo
test
imul
xchg
mov
aaa
mov
test
enter
gs
outsb
cli
cltd
and
insl
dec
in
mov
mov
pushf
aad
sub
test
dec
add
aaa
lahf
cli
push
mov
add
jge
orb
call
fbld
inc
push
or
fucomp
fisubrs
ret
sbb
jecxz
cltd
sub
insb
push
rcrl
cmp
xor
aam
jnp
inc
mov
out
and
sub
mov
cmp
and
cmp
xchg
dec
jo
adc
or
mov
flds
cmp
jge
jne
jo
movsb
scas
cmp
mov
dec
sub
fldz
mov
or
loopne
outsb
push
cmp
cmp
mov
mov
loope
sbb
aam
mov
pushf
jno
loop
mov
lret
jno
mov
push
popf
int3
lock
fdiv
inc
sti
out
stc
adc
fstp
in
adc
mov
cmp
loopne
cmpsb
inc
sbb
jl
mov
pop
in
shl
mov
mov
push
test
adc
and
cltd
imul
enter
ljmp
cwtl
lods
add
xchg
nop
adc
inc
cltd
imul
aaa
stos
and
jecxz
mov
sub
jge
mov
filds
sub
scas
xchg
sub
popa
adcl
fcmovne
imull
in
frstor
popa
mov
hlt
push
fnstsw
or
movsl
or
sbb
mov
cmp
popa
and
mov
test
in
push
lock
xchg
sti
sub
mov
loope
mov
hlt
fisubs
cmp
test
pop
js
arpl
inc
ljmp
rcr
lret
mov
cmp
adc
mov
ret
add
jmp
xchg
mov
and
mov
loopne
push
cmp
aaa
push
jo
xlat
jnp
jne
sub
cmp
cld
jge
movsl
shl
pop
ffreep
sti
cmp
xor
inc
fbstp
or
jmp
and
push
mov
add
fildl
movsb
sbbl
cmp
pop
stos
jle
pop
icebp
in
clc
mov
fisubl
sbb
test
loopne
inc
push
adc
xchg
cmp
xchg
xor
jecxz
inc
lret
fists
dec
push
sub
dec
push
jmp
inc
or
cmp
inc
xchg
inc
outsl
popa
fdivrs
sbb
movsb
bndstx
jo
scas
sub
push
sahf
iret
xor
sub
xor
sbb
mov
insl
add
pop
cmp
pop
jecxz
mov
push
movsl
push
xlat
jmp
mov
pop
lock
ljmp
popa
pop
jno
in
shl
jno
xchg
out
dec
int
cmp
cmpb
popa
pop
ds
fsubr
int
shl
or
js
in
xor
repnz
movsl
insb
and
into
inc
shll
arpl
subl
mov
push
andl
andl
icebp
insb
jne
jp
or
mov
add
scas
fadds
mov
daa
test
push
outsb
push
and
sbb
scas
inc
aad
xor
sub
popf
popa
and
cmp
adcb
ret
test
push
mov
pusha
jbe
notl
movsb
ds
xchg
lea
divl
call
mov
dec
add
cmpsl
mov
out
push
je
not
xchg
push
cltd
jmp
add
jo
lcall
loopne
imul
sbb
xlat
jne
or
xlat
in
jno
loop
inc
scas
bt
fdivp
push
imul
mov
fcmovnbe
mov
ret
inc
xor
fs
out
pop
xor
mov
mov
jnp
vpor
adc
push
or
rcll
mov
lret
mov
sub
mov
mov
imul
jecxz
daa
push
dec
jb
das
mov
int3
and
pop
mov
mov
jnp
cltd
jne
sar
push
out
sub
testl
adc
inc
incb
cmc
gs
lcall
and
fcmovu
pushf
sub
mov
test
push
push
jbe
inc
jo
mov
fsubl
out
ja
cmc
in
test
mov
or
sub
cmp
dec
hlt
push
jp
mov
gs
std
je
pop
mov
out
pop
cmp
mov
out
xor
xor
ret
rorl
andl
out
mov
icebp
pop
mov
rcll
scas
xor
movsb
and
aaa
into
push
daa
lcall
mov
test
push
ret
mov
push
stc
nop
inc
addr16
adc
sbb
leave
xor
sub
pop
fcmovnb
adc
jl
inc
pop
jle
jns
add
stos
add
xchg
sub
ds
mov
dec
pop
gs
pop
dec
dec
or
pop
lock
and
bound
fwait
push
insl
mov
xor
sbb
and
xchg
ss
push
lea
xchg
mov
cmp
mov
adc
pop
dec
fs
or
js
iret
imul
inc
inc
push
pushf
add
mov
ss
shr
ret
call
int
inc
notl
mov
dec
xor
in
sub
mov
and
sub
les
test
inc
and
movsb
jnp
lahf
nop
mov
fsts
pop
test
movsb
stos
cmp
popa
out
ja
adc
adcl
push
sub
sbbl
adc
scas
inc
int
test
in
push
stc
mov
mov
lret
test
bts
pop
xor
fisttpl
sahf
and
in
stc
cmp
loop
and
mov
lock
pop
mov
mov
sbb
cmp
and
or
xchg
add
lock
pop
sub
sti
jbe
ret
lcall
jle
and
inc
push
cld
add
int3
jg
fcmove
out
jmp
inc
inc
in
andl
pop
inc
fdivrs
sub
jne
cld
outsl
sbbb
or
mov
dec
push
cltd
stos
dec
daa
int
aad
arpl
adc
mov
stos
jle
mov
mov
inc
push
xchg
test
jl
mov
fbstp
adcl
jb
mov
and
sbb
jle
insl
or
mov
mov
lock
stos
sar
xchg
push
movsl
and
inc
movsb
aam
xor
popa
inc
es
mov
test
mov
pop
icebp
dec
int3
pop
testl
ret
pop
lock
and
xchg
adc
fcom
mov
lcall
push
jb
fs
fidivrs
scas
mov
mov
adc
cltd
add
movsb
lods
mov
or
dec
mov
jne
iret
inc
xchg
push
mov
pop
dec
lods
dec
cmp
sbb
inc
adc
xchg
mov
xor
mov
fidivs
adc
fs
jns
xchg
sahf
cmp
pushf
inc
das
ret
sub
call
test
and
inc
ret
dec
push
mov
add
das
dec
inc
js
subl
add
dec
add
mov
mov
sub
adc
xor
adc
data16
bound
push
pop
sub
cltd
xor
enter
insb
inc
sbb
imul
fs
cwtl
mov
out
push
ja
mov
shl
xchg
lret
fs
xchg
popf
dec
cltd
loop
mul
jns
das
sbb
sub
fwait
dec
je
sahf
or
out
or
push
jecxz
call
mov
push
fwait
incb
cmpsl
pop
push
or
cs
fcmovnu
sub
xor
loopne
arpl
sub
dec
dec
ror
mov
ljmp
lret
mov
sub
stc
dec
aad
orl
jno
cmpsb
sub
fadds
je
jo
mov
test
pop
lret
inc
clc
pop
insl
sahf
leave
push
aas
lods
ljmp
mov
bound
jns
push
std
push
adc
push
daa
sti
dec
fidivs
jp
jle
cmpsb
scas
sbb
cld
mov
stc
or
jmp
out
xchg
das
loope
data16
mov
cmpsl
jne
rolb
aad
xor
and
mov
adc
push
lret
xor
sbb
in
js
mov
aam
sti
cmpsl
xchg
add
pop
sub
jae
rorl
sub
push
jno
enter
mov
add
jl
mov
loop
sub
shrb
xor
sbb
icebp
subps
shl
mov
data16
pop
js
dec
xchg
js
xchg
stos
outsl
sub
lcall
sub
outsl
xchg
mov
cmpsl
add
xchg
addr16
fstpt
pop
mov
das
nop
clc
push
sub
sbb
fildll
dec
std
or
xlat
out
dec
sub
es
roll
mov
sub
or
lock
adc
outsl
sbb
or
fs
test
sub
pop
into
ss
out
and
mov
fsubrl
mov
mov
sti
hlt
xlat
adc
and
divl
mov
arpl
cmp
inc
outsl
or
sbb
mov
xchg
insb
rol
fmuls
repz
pop
sub
decl
sbb
ds
in
inc
dec
rolb
loope
popa
loop
ss
xchg
mov
pop
mov
nop
mov
mov
mov
jl
add
cmp
sti
repnz
data16
das
xor
jg
xchg
and
sbb
aad
sub
dec
jmp
mov
sub
nop
stos
jne
jle
sbb
cmp
pop
and
mov
mov
mov
jle
loopne
cmp
cmpsb
sbb
shlb
or
cs
fs
jge
adc
jmp
or
lds
add
loope
cwtl
sbb
mov
jno
dec
and
sbb
lret
sub
sub
call
sbb
out
sahf
ljmp
add
out
js
sbb
ret
inc
mov
push
inc
jle
add
leave
inc
fdivrp
in
xor
mov
fimuls
mov
sub
stos
jno
push
lds
test
push
mov
mov
xor
push
xor
xor
push
inc
ja
test
ljmp
mov
lahf
out
xchg
in
sbbb
in
adc
xchg
outsl
mov
hlt
xchg
jg
test
push
cltd
cmp
mov
fisttpll
into
adc
incb
repnz
mov
xor
lret
aas
arpl
pop
gs
push
out
scas
push
jnp
pop
outsb
add
fsubrs
nopl
push
test
popf
cmp
rol
hlt
ja
jle
popf
scas
xchg
clc
subb
or
test
subl
xor
or
push
or
das
pop
inc
out
repnz
js
cmp
jo
lret
jae
testl
cmp
sbb
and
and
leave
pop
mov
arpl
fdivrs
adc
sub
andb
dec
iret
mov
xor
loope
test
mov
mov
or
sub
pop
sub
inc
scas
fdivr
jno
push
jl
in
pop
js
cs
inc
pop
lahf
subl
jl
pusha
pop
cmp
sbb
xchg
push
int3
lds
mov
push
mov
mov
xchg
jge
in
lods
ret
xchg
enter
scas
aad
or
les
sub
inc
pusha
outsb
loop
pop
lea
mov
push
outsb
fwait
xchg
add
mov
rol
push
sti
repz
lahf
in
enter
push
sar
ljmp
cltd
xchg
hlt
add
mov
outsl
mov
or
mov
xor
rcrb
pop
mov
imul
pusha
lods
jns
subl
adc
loopne
mov
out
cli
xchg
cmpsb
std
xchg
fnstenv
sbb
stos
sbb
mov
jbe
lret
fcoml
mov
sub
jae
js
cli
mov
ss
mov
mov
adc
cltd
inc
cwtl
je
mov
jb
mov
xor
inc
repz
sub
fistps
or
and
mov
xor
xor
or
lods
or
fistps
pop
rorb
and
repz
and
cmp
lret
addr16
sub
sub
stos
in
pop
or
ja
leave
rorl
loopne
aas
add
or
test
pop
outsl
rorb
popf
loop
into
sbb
mov
cmc
test
fidivl
mov
call
test
or
pop
fimuls
imul
mov
dec
repnz
xor
repnz
jno
dec
cmp
mov
dec
push
pop
cs
xchg
adc
loope
loop
or
mov
mov
inc
mov
or
push
mov
xchg
lock
and
dec
dec
and
out
sbb
inc
lock
mov
push
cmc
fwait
pop
push
rorl
imul
or
mov
cmp
mov
test
push
outsl
nop
cmpsl
mov
call
jl
loopne
bswap
mov
fcoms
pusha
or
sbb
dec
jp
sti
xorl
xchg
jne
adc
push
pop
mov
in
jg
inc
insb
popa
jge
jge
movsb
scas
xor
push
jb
xchg
dec
loope
mov
push
loopne
sub
push
push
cld
inc
mov
ret
fildll
cmp
or
cmp
pop
fildll
test
xchg
aam
dec
dec
cs
jecxz
movsl
nop
fwait
xor
mov
push
in
pop
adc
jmp
jo
xchg
in
lds
leave
ljmp
sbb
sbb
sub
push
outsb
out
pusha
cs
scas
xor
data16
xor
roll
lock
fmul
fisttps
jbe
dec
test
jp
popf
or
mov
stc
mov
mov
mov
or
insl
jnp
and
in
fistpll
addl
je
fistpll
es
push
test
data16
mov
pusha
test
push
cmp
xor
jns
add
push
inc
jnp
outsl
inc
daa
pop
cwtl
inc
vmovntpd
sub
loopne
ret
iret
outsb
sub
mov
dec
sbb
add
sbb
or
cmp
jl
dec
out
loope
mov
cmpsb
mov
push
xor
fldt
xor
in
sahf
mov
test
rorb
mov
loop
pop
dec
xchg
in
inc
jecxz
push
adc
arpl
xor
arpl
push
cld
xchg
cmp
add
xchg
inc
push
jb
dec
cwtl
and
mov
mov
lcall
and
call
imul
xchg
in
inc
mov
adc
dec
cmp
dec
xchg
add
into
mov
movsbl
push
xchg
and
cmpsl
mov
mov
and
push
out
xor
inc
push
or
lock
dec
or
sub
fcoms
mov
idivl
and
sbb
and
cmpsb
ret
sbb
push
mov
sbb
pop
mov
loopne
jmp
aaa
adc
stc
add
repz
inc
push
cmc
xchg
add
popl
shl
negl
cmp
and
out
imul
sub
pop
cmp
cwtl
dec
loop
jp
jmp
sahf
movsb
repnz
mov
mov
push
inc
add
sbb
jnp
sahf
add
into
mov
andb
lock
adcl
jo
pusha
test
fnstcw
sti
mov
sbb
xchg
cwtl
xorb
mov
in
adc
aad
xor
mov
add
in
ret
hlt
or
rclb
mov
xchg
std
cli
adc
mov
add
mov
xchg
hlt
in
dec
in
push
std
lods
pop
jp
mov
aam
scas
inc
out
dec
mov
or
xor
rcpps
ficoms
fsubrp
dec
int3
push
add
cs
leave
lcall
push
out
xchg
std
lods
sbb
or
into
cmpsl
cmpsl
cld
ret
jecxz
and
loop
fistpll
xchg
sub
test
enter
popa
jb
dec
lods
ret
or
int3
mov
jns
addl
scas
or
add
or
pop
imul
lcall
pop
out
scas
sti
pop
fdivs
loope
mov
xchg
xchg
jmp
adc
jbe
adc
je
inc
mov
fstpt
mov
xchg
push
jbe
int3
icebp
cmc
ja
mov
inc
out
adc
push
add
mov
cmpsb
adc
fisubl
aad
lods
add
clc
out
divb
push
dec
mov
fnstsw
stos
xchg
mov
pusha
rclb
mov
mov
ret
ret
ds
lock
jl
pushl
dec
jno
cli
push
sbb
xchg
mov
rcl
xchg
xchg
inc
push
dec
orb
or
leave
xchg
fs
sub
adc
aad
orl
adc
movsb
push
xor
movsb
cli
push
jne
mov
int
push
add
or
push
jbe
jl
push
mov
imul
add
mov
sub
ficompl
aaa
push
sbb
sti
je
sbb
or
iret
push
loopne
cmp
sti
lock
xchg
les
mov
xor
orb
inc
pop
stos
pop
aam
add
xchg
push
repnz
cmc
or
xchg
pop
push
inc
sbb
push
jnp
inc
fs
pop
test
ljmp
adc
add
es
imul
sti
out
push
and
shrb
ficompl
leave
scas
lock
add
dec
sbbl
rcrb
push
out
cwtl
sub
mov
adc
jb
push
addr16
bound
aaa
dec
icebp
sbb
xchg
sti
jp
cmp
cmc
push
enter
leave
push
adc
mov
cmp
pop
xchg
push
adc
inc
cmp
inc
and
xchg
lock
push
mov
int3
push
jns
lea
lds
test
testl
sub
xchg
cmc
dec
dec
dec
scas
out
in
jl
sub
in
call
sub
push
inc
cli
sar
rorb
cmp
out
pop
dec
fcomi
adc
stc
es
cmc
mov
in
stc
nop
push
and
cmp
dec
shl
push
loop
pop
add
insl
xor
movsb
cmp
jo
mov
ret
sbb
outsb
mov
ffree
jp
cmc
push
into
lds
push
lcall
lock
pushf
inc
je
in
sub
lds
js
in
adc
lock
imul
shrl
loopne
int3
fs
xor
pusha
dec
je
icebp
lods
nop
add
cmp
or
adc
add
std
iret
push
mov
and
push
inc
jecxz
adc
xchg
pop
fwait
or
into
or
daa
clc
loopne
sub
fidivl
dec
jno
call
pop
push
and
xchg
test
cmpsb
lods
cmc
xchg
imul
mov
aas
xor
cs
jno
gs
push
in
js
xor
cmc
adc
xchg
shrb
call
pop
dec
ret
lret
data16
mov
popa
cli
inc
call
xor
popa
rcrb
add
mov
and
js
or
es
pop
and
rorb
inc
push
jg
imul
jmp
xlat
cltd
mov
xchg
bound
sbbb
xchg
iret
sahf
rolb
push
mov
jno
inc
std
mov
es
lret
lcall
push
push
iret
xchg
or
out
hlt
ds
daa
clc
iret
shll
cmpsl
inc
out
push
inc
mov
fwait
sbbl
ljmp
lea
shlb
inc
inc
loope
leave
leave
and
jge
adcb
jmp
add
inc
repnz
arpl
out
xchg
insb
mov
iret
repz
or
xor
hlt
dec
lcall
cltd
out
cmp
movsl
jb
popf
clc
movsb
sub
andb
aam
jne
mov
out
loop,pt
mov
mov
ret
push
pushf
call
sahf
xchg
popa
cmp
pop
pushf
sahf
push
mov
mov
adc
cmp
jp
test
ret
mov
xlat
test
mov
hlt
mov
add
sbb
push
fdivr
mov
bound
test
in
lahf
in
inc
lcall
dec
jecxz
push
sbb
setae
scas
into
movsl
mov
xlat
sbb
adc
ret
into
shr
push
mov
movsb
push
mov
fstps
subl
sub
mov
mov
xor
inc
data16
sarb
adc
sbb
xor
mov
push
xchg
mov
out
aad
xchg
lret
pop
fisubl
je
cmpsb
push
daa
flds
call
mov
mov
outsb
add
in
cmp
outsl
mov
int
push
loop
mov
push
mov
outsb
data16
nop
je
testb
push
aam
xor
ret
pop
das
lds
repz
ljmp
sti
imul
lahf
lahf
xchg
movsl
cmp
out
xor
or
roll
push
stc
fiaddl
ret
mov
cmpsb
push
cmp
push
jo
pop
mov
jns
inc
adc
lcall
add
jmp
das
mov
jb
movsl
xchg
scas
inc
or
aas
cmpsl
adc
lret
pop
mov
xchg
mov
ret
test
xor
add
hlt
inc
iret
jp
add
jae
sub
fildl
sti
pop
xor
push
inc
inc
fisubs
scas
stos
inc
outsl
dec
xchg
das
dec
mov
jp
aad
outsl
push
push
add
test
pushf
repnz
fs
insl
push
je
loopne
and
rcr
inc
addr16
mov
mov
add
xchg
push
out
cmp
jae
pop
xchg
movsl
in
push
push
inc
fmull
std
call
call
inc
mov
mov
sbb
xchg
aad
pop
and
mov
mov
inc
push
sahf
dec
movsb
sub
stos
lds
push
stc
push
dec
add
xchg
adc
cmp
and
mov
xlat
push
mov
fnsave
mov
xor
in
scas
sub
pop
xor
ss
adc
xor
jmp
stos
xor
jno
fdivl
sub
in
lcall
in
in
fnsave
stos
je
test
mov
mov
dec
loope
mov
in
out
notl
jmp
cwtl
push
inc
loopne
jb
mov
pop
push
hlt
pop
in
jo
ss
sbb
push
lock
push
lret
cmp
testb
pop
stos
in
rcr
fstpl
call
mov
in
mov
add
inc
aad
loopne
imul
dec
mov
out
loop
add
sub
aad
mov
ds
xor
pusha
sbb
inc
mov
mov
je
jnp
cmp
inc
bound
out
xchg
adc
stos
jae
xchg
or
cmpsl
adc
in
mov
enter
sub
or
mov
in
fsub
int
popf
stos
rcrl
adcb
shlb
rolb
testl
jbe
fdiv
inc
dec
cmpsb
cmp
push
mov
push
mov
rolb
inc
cmp
in
stos
stos
repz
fimuls
loope
sbb
and
int3
push
inc
push
jo
es
lods
inc
shrb
jmp
cmp
mov
loope
push
and
jl
dec
inc
inc
arpl
outsl
pop
les
mov
cmc
mov
out
decl
cmpsl
sbb
inc
sub
and
std
mov
lret
repz
jmp
imul
clc
pop
mov
mov
mov
in
js
lods
in
push
jp
test
out
movsb
sbb
mov
pop
jne
push
repnz
inc
fwait
int
dec
pop
pop
mov
lcall
repnz
aam
push
mov
or
in
pop
icebp
xchg
pop
cli
xor
clc
pop
dec
pop
lods
jnp
test
lods
cmp
jle
out
mov
inc
out
shl
rol
sub
or
sbb
lcall
fldcw
pop
adc
movsl
imul
xor
sub
sub
pop
jne
mov
cmp
cmp
and
into
mov
adc
jge
sbb
adc
lcall
or
cmp
sub
sub
push
loopne
pop
xchg
sub
ljmp
sub
push
jnp
or
dec
rorb
and
add
and
in
mov
dec
repz
jmp
lods
inc
jp
lcall
mov
fcmove
inc
fnstsw
popa
popa
xorl
cmp
ret
jnp
jecxz
jae
sti
or
fdivrl
add
jnp
fdiv
push
mulb
shll
repz
cmp
rcr
arpl
mov
inc
xor
xchg
add
xchg
jecxz
mov
js
adc
lods
lock
and
cld
gs
cmp
in
dec
or
movsb
sub
fidivrs
push
daa
into
orl
sbb
iret
ror
cmp
lods
mov
daa
sub
sbb
pop
sbb
xor
aad
push
cmp
mov
fildl
hlt
sub
xchg
shl
jbe
sahf
repz
ret
cmp
nop
or
hlt
daa
out
xchg
add
xchg
add
pushw
test
push
pop
shlb
icebp
push
clc
cmp
jns
sub
pop
inc
repnz
jne
mov
pop
arpl
mov
push
adc
iret
pop
mov
push
stos
mov
neg
pusha
dec
test
int
imul
sbb
mov
xchg
test
decb
in
mov
push
mov
sub
xlat
push
cmp
or
daa
pop
mov
outsl
hlt
mov
mov
cli
cltd
fidivs
repnz
aam
test
jnp
sub
mov
aad
es
dec
leave
push
jno
or
pop
mov
imul
dec
mov
push
out
out
mov
enter
or
or
sub
sub
bound
stos
cmp
push
cmc
imul
cmp
dec
into
or
shrb
mov
pop
cmc
sub
and
pop
inc
aaa
stc
std
jp
repz
js
jns
pop
cmc
lcall
sub
dec
sbb
adcb
or
mov
outsl
jp
mov
sub
fcomps
iret
mov
sbb
pop
jmp
sbb
xorl
add
push
push
lret
data16
pop
push
cmp
outsb
push
rcrl
outsl
sbb
data16
sarb
mov
adc
push
inc
xchg
sub
cmp
in
push
dec
lret
xchg
jns
and
call
std
dec
mov
mov
adcl
sbb
cmp
dec
movsl
roll
js
jbe
aas
xchg
pop
incb
xor
into
fs
fisubrl
mov
add
push
pop
and
addr16
aad
inc
inc
repnz
add
mov
mov
je
inc
pop
loopne
add
mov
ret
test
push
jo
add
push
or
jl
lock
mov
shll
sub
pop
lea
test
dec
out
dec
lea
pop
adc
xorb
mov
jle
lret
cs
and
add
dec
jne
ljmp
ret
mov
xlat
aaa
clc
prefetch
in
lea
mov
sbb
adc
idivl
mov
inc
out
movsl
inc
xor
out
jge
lret
mov
dec
fdivrs
fldl
mov
int
fs
outsb
adc
pop
push
cs
or
lret
out
adc
mov
adc
jbe
xor
sub
sbb
mov
lock
jmp
xor
scas
mov
outsl
ljmp
adc
jp
push
lcall
mov
ss
mov
cmc
sbb
lock
push
xchg
js
cmp
repnz
mov
inc
into
lods
jge
or
inc
leave
push
adc
mov
idivb
test
jg
mov
ret
xchg
popa
lea
fs
adc
andb
aaa
mov
inc
hlt
sbb
inc
out
rclb
and
pop
pop
cmpl
xor
aam
cmp
hlt
jmp
jnp
sbb
fcmovne
sbb
mov
les
push
fstpl
stos
inc
lret
negl
or
jecxz
sti
fwait
pushf
ds
xor
dec
sbb
lahf
cmp
xchg
sub
xlat
push
std
jg
jl
xor
or
sbb
outsl
leave
repnz
popa
outsb
jge
test
sbb
frstor
sub
ljmp
xor
lahf
daa
incb
sub
mov
adcb
iret
push
jae
xchg
mov
sbbl
jmpw
pop
xchg
lret
nop
addr16
pop
jg
inc
fwait
pop
mov
stos
mov
and
or
fisttpl
jo
pop
std
xchg
dec
enter
lret
mov
jg
ret
outsb
mov
cmpsb
cmp
loope
ret
pop
mov
int3
out
test
mov
adc
int3
inc
outsl
xchg
out
xor
scas
pushf
xor
roll
sub
ret
fadds
movsl
dec
fisttps
mov
inc
lahf
cmp
xchg
inc
mov
outsb
arpl
stc
xor
mov
xchg
aas
jo
inc
stos
push
cmp
fimuls
mov
and
push
fstl
mov
fnstsw
adc
je
lret
pop
scas
push
add
lret
and
and
push
lock
adc
imulb
arpl
mov
aam
xchg
outsb
mov
push
ret
and
aam
ficomps
add
dec
xchg
sub
rcl
adc
ss
scas
jl
and
leave
cmp
lock
je
insb
dec
gs
push
push
lods
cmpl
popf
xor
xchg
ds
int3
lods
sbbl
ret
or
hlt
pop
add
jge
rcrl
inc
stos
ret
cmpsb
mov
addb
sarb
pop
cmc
leave
mov
jl
loopne
fcomip
dec
push
lock
adc
and
out
mov
andl
out
jecxz
mov
ds
and
das
and
xor
int
jp
pop
or
aam
repnz
cmpsb
push
push
in
jnp
jmp
outsl
aad
lock
pop
stos
addr16
xchg
mov
hlt
adc
sbb
pusha
cmp
enter
and
push
dec
jecxz
mov
loopne
js
sub
aam
out
add
and
jnp
jle
fldt
mov
iret
out
mov
ret
scas
movsl
xlat
mov
lods
loope
push
pop
mov
pop
lcall
imul
je
add
sahf
dec
aaa
inc
movsb
lock
push
sbb
nop
stc
mov
out
jge
pop
sbb
stos
jge
mov
push
int3
mov
xor
jb
dec
loope
fistl
adcb
movsl
pop
gs
out
adc
and
inc
xor
arpl
xchg
outsl
loop
cmp
or
dec
pop
sbb
add
dec
or
cmpsb
subb
aas
add
fcompl
arpl
jge
mov
frstor
lcall
jnp
mov
mov
adc
mov
popf
inc
out
ljmp
mov
mov
xchg
in
shl
mov
adc
aas
je
push
inc
fnstsw
in
xchg
push
pop
fs
sbb
and
ret
ret
mov
iret
gs
pop
lcall
mov
fidivl
xor
mov
rcrb
jp
in
das
lods
call
rcll
add
js
leave
dec
and
ret
insl
cmp
fldt
popf
jmp
dec
popf
outsb
mov
sub
jg
xchg
mov
sbb
mov
insl
or
push
outsb
adc
mov
sbb
jl
jne
xchg
js
call
xchg
sbb
call
jns
jne
inc
pusha
add
sahf
imull
lods
stos
mov
pusha
stos
pop
cltd
push
imul
loop
and
jo
xchg
pop
lea
rcll
fstl
push
cmp
pop
sahf
lahf
jmp
shll
nop
push
cld
xor
fs
shll
aas
jbe
dec
mov
fisubrl
xchg
push
fdivl
mov
sbb
lods
push
daa
or
mov
testl
fisubs
xor
inc
lds
movsl
stos
sbb
ret
and
mov
dec
fsubrl
push
gs
jle
out
test
orb
cltd
jae
aam
xlat
adc
sti
jbe
pop
xor
dec
and
clc
mov
and
ret
out
daa
dec
pop
cmp
cmp
pop
mov
xlat
dec
xchg
jo
cmp
mov
pop
cmp
imul
lods
inc
loop
inc
scas
inc
ret
sub
in
arpl
jns
das
stos
pop
push
pushl
pop
jae
rcrb
pop
pop
mov
dec
cli
fwait
push
pop
fnsave
adc
jle
gs
repnz
pop
call
or
shlb
shr
sub
je
mov
push
test
xchg
shrl
mov
add
ret
repz
clc
gs
ja
mov
mov
xchg
cs
ds
cmp
jecxz
out
adc
daa
xchg
inc
mov
mov
jmp
lods
ja
and
inc
rcrl
sbb
cmp
dec
fimuls
imul
push
jmp
mov
cmp
sub
outsl
rcl
enter
xor
mov
les
psubsb
cmp
pop
ds
testl
ja
and
ljmp
jae
mov
cmp
sub
sub
sbb
jge
adc
ss
cmp
inc
mov
out
test
pop
scas
pop
lods
iret
movl
jno
lcall
and
leave
loopne
mov
ljmp
xchg
jmp
pop
rcrl
aaa
inc
gs
pop
xchg
dec
mov
push
jp
xchg
mov
fsubr
idiv
pop
addr16
or
rol
sarl
loope
jne
stc
mov
push
lea
aam
pop
pop
popa
jl
int3
sti
sub
or
leave
push
popa
jg
lea
mov
pusha
jnp
call
jg
lcall
test
push
inc
jmp
or
sub
jnp
mov
or
inc
popf
mov
pop
push
out
mov
sbb
mov
bound
pop
xor
cld
or
iret
push
in
or
mov
mov
mov
or
arpl
xchg
sub
das
or
hlt
mov
xor
mov
inc
push
fwait
add
adc
mov
jecxz
fldenv
imul
hlt
jo
xor
dec
js
mov
scas
pop
dec
dec
shlb
out
aam
dec
mov
sub
mov
mov
dec
popa
mov
repnz
xor
jne
xchg
es
mov
mov
jns
xchg
cmp
in
sbb
das
mov
or
add
daa
out
pop
jae
cmp
mov
pop
mov
aad
lahf
andb
push
jne
sbb
adc
xor
and
dec
lds
test
mov
push
cmpsb
mov
push
inc
addl
enter
out
inc
nop
dec
or
xchg
popa
cmp
pop
jb
outsb
mov
cmpsl
ret
mov
dec
arpl
paddw
sub
jge
jp
pop
cmp
popa
jmp
xchg
das
outsb
xchg
sub
insl
adc
pop
rcrb
icebp
loop
add
enter
xchg
insb
lods
xor
inc
jmp
add
loopne
es
test
inc
and
xor
movsl
pop
popa
test
js
lret
cld
arpl
sti
test
inc
and
addl
sub
arpl
or
ficoml
je
repz
pusha
xchg
insb
fsub
call
or
aam
sbb
int
fisttps
mov
lock
js
les
pusha
ss
mov
push
not
cmp
inc
clc
int
test
pusha
sub
loopne
dec
dec
insl
sbb
ljmp
mov
jno
dec
mov
gs
sub
mov
inc
and
iret
pop
pushf
rolb
sub
or
mulb
nop
adc
add
lret
insl
push
mov
push
stc
and
or
sbb
xchg
mov
and
jnp
into
outsl
scas
adc
pop
add
or
and
cwtl
xor
mov
jb
bound
roll
cmp
in
and
out
jl
lret
lcall
in
into
pop
outsl
or
lods
xor
or
mov
std
call
dec
jb
xchg
movsl
push
push
out
xchg
sbb
inc
loop
js
mov
add
cmp
push
imulb
sub
mov
add
test
jb
loopne
fidivl
xor
mov
add
dec
sbb
jp
mov
cmp
sub
mov
aad
aas
enter
pop
lock
pop
jbe
rcl
jno
clc
xchg
inc
pop
shll
lods
mov
stos
cmp
cvtdq2ps
daa
mov
cmp
push
push
push
mov
push
out
imul
fnstenv
sub
filds
bound
sub
in
cmpl
vdivps
cmpb
scas
stos
pop
cmpsl
sbb
out
and
js
push
stos
inc
cmp
xorl
and
and
pusha
cmp
or
iret
mov
fisttpl
pop
fwait
aaa
int
test
pop
fidivrs
push
sub
mov
scas
in
cld
fisubrl
inc
loope
leave
pop
hlt
sbbb
xchg
scas
addl
mov
aas
fdivs
jns
jp
jmp
in
pop
repz
cli
push
mov
push
mov
mov
lods
pusha
xchg
pop
jb
xorl
cmpsl
ljmp
sbb
js
movsl
cmc
arpl
pop
outsb
movsb
ret
fstps
mov
mov
aam
cmp
mov
cmp
xor
xchg
fstpt
out
cmpsl
shll
fcomip
movsl
inc
cmc
mov
enter
cmc
in
adcb
rorl
sbb
repnz
jecxz
fwait
aaa
icebp
iret
pop
cmp
fnstsw
ja
cmp
stos
cld
bound
add
and
les
xor
mov
lret
adc
jne
gs
scas
iret
outsl
jl
dec
xor
call
push
pop
cmp
mov
nop
sub
push
dec
pop
je
sub
test
or
inc
mov
push
lods
rcrl
inc
sbb
mov
adc
add
sbb
sub
movsb
in
xor
mov
pop
scas
subb
inc
mov
ss
push
add
lods
mov
mov
jns
jg
adc
popf
stc
cmp
add
jbe
push
cmpb
push
add
lahf
xchg
out
inc
mov
xchg
repnz
sbbl
popf
push
dec
xchg
jge
les
loopne
inc
push
das
fstl
test
in
fs
pop
xchg
aad
dec
xchg
jmp
xchg
leave
mov
cmpsl
or
and
xchg
dec
cli
xor
push
scas
loop
jg
push
jmp
shl
inc
fld1
cmp
ret
test
and
lahf
or
ljmp
pop
sti
es
add
sbb
ret
rorb
add
daa
push
mov
dec
ljmp
repz
lret
frndint
mov
add
inc
fisubrl
repz
xor
fcmovnb
jns
fcomps
pop
xchg
leave
testl
add
rol
clc
and
aam
or
cld
int
or
adc
push
scas
jno
or
std
test
mov
or
jmp
cmpsb
xchg
bt
jp
repnz
jne
into
stos
rorl
out
cbtw
add
js
divl
jge
cmpb
push
addb
inc
shll
es
test
cli
add
add
test
fidivrs
sub
leave
sbb
jb
xchg
xchg
rcll
pusha
das
and
adc
jno
shlb
fnstenv
dec
rcll
sbbl
cmp
clc
inc
in
jo
sub
xchg
pop
aas
push
push
adc
sbb
inc
fstpt
lret
cmp
jle
mov
push
pop
sbbl
sti
jmp
imul
jle
jl
dec
sbb
repz
sub
dec
pop
xor
scas
jmp
pop
xchg
adcb
jae
rorl
push
addr16
ret
xchg
pop
cli
movsb
fwait
xor
in
test
scas
and
aad
fidivs
stos
mov
dec
and
leave
test
lods
stos
pop
aas
ret
stos
or
int3
mov
lahf
mov
cmp
mov
mov
mov
gs
push
pop
sahf
push
mov
sub
jnp
jp
sahf
cmc
iret
lret
jb
or
arpl
cmp
testl
fistpll
jno
shrb
sub
jbe
sub
jg
lret
jl
pop
pop
nop
sub
mov
mov
inc
jnp
mov
jae
shll
xchg
shrl
pop
cwtl
call
cmp
lret
add
mov
cld
xchg
adc
jae
les
xchg
push
das
xchg
sti
mov
repnz
cmc
pop
sub
or
clc
jae
mov
repnz
ljmp
dec
pop
ljmp
stos
or
mov
fldcw
inc
in
popf
inc
mov
dec
in
lods
add
pop
mov
mov
jmp
mov
pop
mov
jmp
sub
cmp
dec
jnp
cld
lcall
in
pop
xor
mov
in
add
cmp
es
or
scas
dec
sbb
adc
scas
shlb
out
dec
xchg
pop
mov
das
jo
push
and
dec
dec
in
cmp
xchg
insl
movsl
rorl
insl
mov
shrb
adc
jb
add
lret
mov
fstps
xchg
test
setle
sbb
adc
adc
xchg
mov
movsl
jmp
xor
popf
hlt
jmp
xchg
xor
or
aas
in
add
xor
es
pop
jns
dec
jmp
test
mov
je
ja
call
cmp
cmpsl
gs
pop
in
fwait
sti
xchg
aaa
inc
in
nop
add
je
and
pop
mov
aad
test
inc
outsl
out
or
mov
sbb
cmp
push
and
push
hlt
sub
pandn
mov
shlb
cltd
xchg
iret
pop
mov
jle
jns
movsb
mov
pop
inc
into
lea
lret
mov
jg
mov
xchg
sub
or
cld
jp
dec
outsb
pop
inc
dec
sbb
ds
lods
cmp
rcrl
ret
inc
inc
dec
repz
dec
loopne,pt
in
fwait
dec
mov
pop
outsl
jmp
pop
not
fsts
add
mov
xor
xchg
lods
cmp
xchg
sub
pop
push
cs
loopne
test
in
test
mov
popa
pop
pop
mov
shlb
pop
rolb
adc
or
adcl
jne
jmp
lret
aam
je
in
and
fwait
ljmp
inc
mov
sarl
dec
ffree
mov
pop
mov
jmp
cli
adc
xor
push
out
scas
shll
leave
add
push
push
fsubrs
les
jb
cwtl
ret
fisubrl
out
add
test
mov
cmpsl
mov
inc
cmc
add
fisttpll
mov
pop
fidivs
rol
repz
test
rcrl
enter
js
or
lcall
cmpsl
xchg
out
out
sbb
push
hlt
inc
cmp
shlb
das
outsb
testl
aas
negb
mov
popf
mov
adc
mov
sbb
movsb
in
movsb
repnz
jmp
push
inc
out
xchg
sub
out
popf
sahf
mov
shlb
aam
xor
xor
mov
jecxz
imul
mov
pop
addr16
push
out
int3
loopne
sbb
mov
ja
xor
in
push
fistl
aad
xchg
clc
adc
aam
leave
popf
push
iret
int3
mov
fisubrl
jbe
sti
mov
xlat
push
pusha
mov
mov
jb,pn
pop
mov
dec
out
daa
cmp
xchg
popf
insl
adc
and
subb
xchg
mov
shr
mov
shrb
adc
out
stc
test
out
xorb
nop
notl
mov
mov
push
in
addl
ficomps
stc
mov
in
test
je
inc
in
or
mov
add
xor
test
outsb
pusha
call
jb
outsl
add
dec
decb
popa
xor
popa
test
mov
leave
stos
mov
xchg
aad
js
lods
out
cli
jne
or
inc
dec
dec
jbe
repz
andb
dec
mov
dec
add
sbb
iret
mov
aaa
into
clc
in
xchg
fnstenv
rclb
cmp
inc
imul
mov
ret
out
dec
add
cmp
out
and
fimuls
ljmp
lods
ret
pop
and
mov
jne
ss
movsl
xor
inc
addr16
out
popa
mov
loop
mov
mov
std
xchg
icebp
cld
mov
push
xchg
and
int
adcl
jbe
sub
pop
pushf
add
std
mov
sar
arpl
cltd
cs
std
mov
sub
dec
out
cwtl
mov
das
mov
push
add
cltd
xor
les
push
andl
push
fwait
push
in
or
mov
roll
lret
popf
xor
scas
mov
ret
jns
dec
or
adc
dec
in
add
push
call
sbb
or
xchg
lods
shlb
decb
in
clc
cmpsb
cmp
scas
cmp
arpl
pop
mov
out
nop
cwtl
data16
xlat
dec
jge
je
mov
inc
add
sub
dec
out
insl
add
ds
into
pusha
adc
jg
adc
mov
ret
loop
lcall
cmp
adc
dec
mov
outsb
jmp
mov
and
dec
les
pop
imul
jle
mov
mov
std
and
add
push
jnp
cmc
int
fmull
adc
mov
je
aaa
mov
push
mov
sbb
mov
xchg
xchg
addr16
xchg
pop
mov
into
sti
es
mov
lcall
cmp
ja
sbb
test
and
push
or
fadds
cltd
pop
xchg
fnstcw
orb
pop
aad
outsb
mov
popf
addb
pop
jl
ds
into
fisubrs
addr16
jge
jne
imul
xchg
pop
adc
mov
mov
cltd
lcall
cmc
addr16
xor
mov
mov
repz
test
leave
and
inc
sbb
ret
xor
xchg
lods
adc
dec
fldl
mov
sub
jno
mov
scas
inc
das
mov
adc
xchg
mov
pop
scas
sub
push
mov
aad
ret
add
or
cmp
popa
js
cmc
mov
popa
lods
mov
mov
jo
dec
aas
cmp
loope
jge
mov
popf
cli
dec
push
jmp
pushf
loop
pop
rolb
fsubl
dec
rcrl
loop
push
xchg
loopne
fbstp
push
lahf
imul
aas
out
fs
sbbl
ss
pusha
add
mov
dec
repz
insb
dec
pop
sbb
int
and
mov
sbb
enter
jo
in
sub
push
xor
add
aam
and
scas
and
pop
or
push
aas
pop
mov
sahf
iret
mov
call
cmp
sarl
cmp
sbb
inc
leave
cmp
es
cs
push
andl
mov
sub
out
xor
cmp
outsl
mov
daa
out
xchg
fwait
aaa
decl
aad
xor
adcb
push
insl
cmp
jg
fwait
xchg
sbb
push
stc
pop
jno
push
rorl
pop
dec
push
test
iret
loopne
mov
mov
mov
imul
cmp
ds
mov
dec
lods
jno
or
and
adc
int
ret
repz
mov
inc
xor
jecxz
jns
sub
mov
xor
dec
jno
or
adc
mov
mov
pop
cli
ret
aam
adc
dec
adc
push
mov
out
push
add
test
xor
sti
js
and
sbb
out
jp
fucomp
add
pop
ja
ss
fnsave
add
mov
outsb
test
lods
sub
sahf
dec
dec
in
mov
xchg
jae
enter
pop
jmp
jo
shlb
pop
dec
pusha
or
fucompp
inc
lock
pop
push
and
popf
mov
jb
mov
insb
sub
aad
mov
mov
jl
cmp
mov
and
jnp
sub
adc
jb
sub
mov
js
inc
or
jl
fdivrl
or
xchg
aad
ffree
push
adc
les
xor
in
cmc
pop
dec
outsl
and
mov
sbb
sbb
cltd
repz
gs
mov
mov
divb
sbb
lock
dec
pop
divb
adc
sbb
xor
jle
test
std
dec
push
out
xor
rorb
jge
in
dec
loop
or
aaa
fs
jnp
rolb
mov
sbb
mov
pushf
jl
xchg
adc
popf
xor
and
fadds
inc
xchg
mov
pushf
sbb
into
or
pusha
jecxz
hlt
adc
into
mov
insl
ret
push
sub
lea
sub
loop
lcall
mov
pop
pop
aaa
or
mov
push
xor
test
and
push
mov
jmp
lds
mov
psubusw
xchg
xchg
mov
push
sbb
stc
arpl
insb
das
or
pop
test
xchg
decl
nop
cmc
mov
sahf
js
in
ret
je
je
shlb
xchg
insl
mov
into
enter
pop
insb
repnz
lahf
cmpsl
fcompl
fmuls
sahf
lea
mov
mov
cld
fwait
out
arpl
jae
popf
sub
xchg
outsl
andl
iret
inc
mov
fs
dec
sbb
popf
and
sbb
or
push
out
adc
pop
imul
lock
and
outsb
outsb
dec
sub
mov
jbe
rorl
incl
in
in
or
jno
mov
das
loop
dec
push
dec
rorl
pop
shll
outsb
pop
and
fcmovnb
sbb
jg
into
and
nop
mov
mov
sub
stos
jmp
push
jbe
xchg
jo
stc
je
rcll
pop
dec
cmp
and
mov
push
xchg
data16
and
mov
cmpsb
sub
lret
pop
jns
or
or
in
fldcw
push
stos
sar
mov
inc
mov
repz
arpl
sub
ret
fcomp
pop
aaa
jb
mov
push
xor
dec
enter
sub
add
out
inc
jg
pusha
lods
mov
lds
in
imul
rcrl
out
push
data16
and
adc
bound
in
fwait
dec
loope
add
aad
sub
insl
loopne
sub
pop
pop
lea
shll
xlat
push
add
sub
push
pusha
fiadds
bt
push
sub
mov
data16
push
mov
test
mov
jmp
push
jb
addb
fidivrs
fildl
arpl
faddl
mov
mov
imul
lret
test
push
loopne
aam
orb
add
sti
adc
in
mov
lds
not
cmp
mov
aad
lret
cmp
push
mov
xchg
je
repz
rorb
outsb
into
push
cmpsl
jle
dec
lea
add
adc
in
test
and
imul
cld
dec
gs
push
sub
pushf
not
cmp
js
pop
ret
icebp
jns
cmpsb
les
jg
ljmp
call
fcoms
push
cltd
outsl
and
pushf
xlat
jnp
test
ss
xlat
ja
push
rolb
and
fisttps
fidivrs
fdivrs
push
push
out
outsl
fbstp
push
mov
insb
sbb
sbb
mov
rorb
ja
cmp
sbb
push
out
xor
sbb
in
lcall
lcall
lret
sbb
flds
movsb
cmp
addr16
je
aaa
dec
or
add
cmp
rcrb
arpl
mov
cmpsl
mov
mov
push
push
inc
pusha
outsl
adc
lret
fadd
sub
sub
outsl
jle
jae
jnp
insl
jp
lret
jg
ja
lea
jle
aam
pop
mov
inc
dec
cmp
in
dec
and
push
cmc
jo
in
dec
dec
pop
lods
lds
sub
test
fwait
scas
sub
sub
mov
fidivrs
mov
sbb
cmp
lahf
call
lahf
dec
insb
sbbl
repz
std
push
mov
lods
adc
cmpsb
sbb
inc
pop
daa
inc
loopne
inc
dec
lahf
push
ds
test
xchg
loope
mov
fbstp
leave
pushf
inc
ret
mov
insb
fcomp
scas
in
lret
mov
mov
mov
xor
xchg
adc
mov
jg
insl
pusha
les
out
sbb
call
subb
pop
sbb
cmc
cwtl
fsubs
jns
in
sbb
dec
dec
cmp
lret
lods
dec
jno
and
in
push
dec
push
xor
ret
fisubrl
mov
lods
dec
loop
and
cmpl
or
or
add
sbb
dec
fdivs
sbb
inc
pusha
jl
shl
repnz
or
loope
test
mov
repnz
shll
mov
imul
jg
adc
enter
les
jo
pop
cmp
sbb
dec
and
jmp
add
or
fadds
movsb
roll
enter
jl
cwtl
cmpsl
movsb
sub
lods
outsl
mov
pop
popf
and
leave
push
aaa
aam
stc
ljmp
xchg
cmc
add
pavgb
test
imul
fs
js
xchg
pop
jne
pop
cmp
jb
shll
scas
cld
aaa
sbbl
sbb
adc
jl
outsb
scas
xor
cli
mov
push
popf
cmp
aad
fwait
and
lds
fs
insb
dec
mov
cmpsb
sbb
jno
dec
mov
movsb
shlb
adc
rcrl
fwait
mov
add
push
nop
insl
mov
mov
mov
add
aaa
xor
lcall
lea
pop
jno
pushf
adc
dec
push
sub
inc
insb
fidivrl
dec
push
pop
js
mov
jno
outsl
lds
or
out
lcall
ret
and
inc
adc
stc
nop
sahf
inc
les
lcall
loope
mov
lahf
ss
jle
xchg
mov
and
leave
pop
dec
rcrl
repnz
scas
mov
or
and
pop
std
push
push
lcall
and
sbb
cmpsb
negl
nop
push
xchg
jns
cmpsb
stos
sahf
jno
sbb
cli
popa
fdivl
sbb
push
inc
or
fildll
lahf
push
xchg
das
lds
pop
outsb
pop
xor
jae
jns
in
scas
rorb
push
unpckhps
jae
mov
mov
inc
jl
cmp
dec
jns
dec
pop
outsb
pop
adc
out
std
les
fs
sbb
lea
mov
mov
rcr
cltd
or
dec
sbb
mov
cmp
dec
pop
push
ja
cmp
out
pop
jmp
lea
mov
cmc
ss
and
mov
lods
adc
sbb
imul
pop
int
mov
push
in
cmp
mov
iret
adc
push
mov
or
das
push
mov
ret
mov
in
pushf
xchg
rorl
cmpsb
arpl
pop
mov
or
push
inc
lods
js
fldenv
mov
push
cltd
mov
mov
cwtl
and
mov
mov
imul
pop
xchg
imul
pop
dec
lret
pushf
into
jl
mov
or
lock
in
dec
bound
lcall
in
outsl
into
sbb
mov
jae
shrl
fwait
aam
movsb
subb
jnp
pushf
movsb
lods
clc
int
les
jmp
lods
mov
xchg
lea
mov
jp
push
and
sbb
test
test
mov
imul
jnp
sbb
test
les
aas
mov
sbb
pusha
xor
sbb
push
xchg
pushf
nop
jb
sbb
loop
mov
lret
movsb
pop
and
and
mov
mov
aas
dec
divl
push
movsl
jg
pop
lock
mov
pop
xchg
fstpt
cmp
push
mov
ret
xor
out
iret
sbb
stc
outsb
jno
cmp
fdiv
fimuls
mov
mov
addl
test
addr16
cmp
or
sbbl
sub
mov
testl
daa
repz
add
push
in
and
cmp
fstpt
iret
jae
rorb
ss
out
nop
pop
or
testb
test
shrl
xlat
pop
cmpsl
pop
lds
or
movsb
sti
jge
ret
pop
repnz
adc
dec
inc
add
ds
aam
jno
out
push
mov
mov
sbb
mov
pop
sbb
lcall
push
mov
inc
xchg
iret
jno
mov
imull
daa
fldt
outsb
or
out
push
jo
xchg
push
pop
mov
lea
jmp
sti
push
outsb
lahf
shrl
ja
and
xchg
ds
xchg
sub
dec
pop
fistps
loope
mov
mov
or
lods
inc
out
cmp
adcb
movsl
in
mov
jl
inc
scas
andl
cld
or
sbb
mov
sub
or
loop
push
cltd
out
out
aaa
cmc
mov
jmp
pop
rolb
cli
mov
loope
cmp
je
movsb
pop
dec
push
lcall
lcall
inc
and
push
shl
adc
adc
mov
sub
adc
gs
int
cmp
enter
ret
mov
pop
sub
mov
aad
movsb
dec
dec
mov
aaa
stos
cmp
mov
rclb
fisubrl
notb
mov
and
xor
mov
mov
addr16
inc
cltd
sub
cs
scas
inc
push
das
inc
cmc
dec
adcb
addl
cs
xchg
lds
xor
pushf
mov
xor
es
add
je
and
lods
data16
mov
push
push
push
sbb
or
jge
xchg
adc
pop
pop
aas
pop
movsl
jo
fs
cmpsb
mov
and
test
inc
pop
cmpsb
xchg
xlat
ja
cmp
pop
lcall
mov
add
mov
mov
popf
mov
mov
add
fistpll
in
push
jmp
stc
test
xchg
mov
and
sbb
ror
repz
rclb
inc
push
inc
lret
mov
out
pop
inc
cmp
enter
mov
in
test
test
or
inc
sub
sub
in
daa
xchg
pusha
cmp
insl
inc
or
fstpt
ds
or
xchg
jmp
sub
pop
mov
sbb
inc
ds
imul
jecxz
in
add
or
dec
mov
lret
xlat
jo
or
iret
cmpsb
in
adc
into
sbb
mov
jge
xchg
outsl
addl
daa
rcrl
clc
sub
ret
push
push
mov
sbb
jl
bound
shld
fildl
pop
inc
test
pop
cmp
dec
and
sub
xor
dec
std
pextrw
insl
add
push
inc
dec
dec
adc
mov
fcompl
cmp
lret
xor
adc
ja
pop
or
jo
dec
lcall
sub
add
mov
or
cmp
cs
mov
jp
jne
cltd
sti
ja
xor
push
mov
jns
ret
loope
shrb
or
fldenv
push
aas
daa
or
mov
jecxz
or
pop
hlt
jnp
xchg
cmp
sub
mov
jg
in
sub
mov
jbe
hlt
in
nop
adc
fldcw
add
mov
inc
mov
aad
fwait
je
lea
sub
dec
out
push
dec
aam
fldcw
incb
jne
mov
aad
pop
dec
shrl
fcmovb
mov
pop
jns
movsl
fs
and
xor
outsl
xorl
insb
mov
in
xor
mov
cld
js
cmp
xor
jne
inc
or
pop
test
sub
mov
pop
outsb
stos
ss
inc
scas
mov
in
fnsave
dec
bswap
les
cmp
stos
xchg
cmp
xchg
jecxz
xor
adc
inc
sbb
scas
pop
lret
rorb
sti
aam
out
sbb
cmp
in
shlb
fcomi
insl
mov
mov
mov
aaa
rclb
push
sbb
outsb
inc
outsl
adc
fdivrs
cli
cmc
push
test
cmp
mov
or
dec
pusha
dec
add
aaa
fwait
adc
mov
mov
cwtl
pushf
scas
incb
leave
int3
lds
shr
jmp
or
gs
pop
add
subl
daa
mov
imul
into
jae
dec
out
sti
lods
pop
cmp
mov
rcr
les
push
inc
mov
cli
arpl
sub
lods
sti
mov
stc
adc
shrb
test
fcmovne
or
loop
test
adc
cmp
jb
xchg
int
into
and
adc
push
adc
mov
lret
mov
mov
roll
out
in
jne
mov
mov
pop
insl
add
mov
mov
lahf
mov
movnti
stos
and
ja
inc
add
jne
inc
dec
andl
or
mov
ja
adc
jne
xor
cmp
std
xchg
test
shlb
mull
jle
adc
cltd
pusha
in
xor
mov
adc
mov
cltd
je
fcoml
inc
outsb
jmp
cmp
in
test
mov
sub
daa
mov
sbb
mov
dec
cmp
pushl
in
sbb
pusha
in
xchg
dec
cwtl
push
imull
popf
gs
int3
movsl
ds
enter
add
mov
add
aam
xchg
aas
push
leave
out
jecxz
xor
push
and
xchg
fbstp
lahf
jge
xchg
outsb
test
ffreep
mov
stc
cld
lods
fsubrs
into
das
push
mov
xchg
test
push
imul
gs
iret
lret
lds
mov
les
dec
lret
cmp
push
je
cmp
sbb
jb
mulb
xor
push
in
sbbl
mov
push
mov
das
adc
mov
mov
aad
aaa
data16
xor
call
or
daa
push
outsb
cmpb
mov
test
sub
mov
xchg
popf
mov
faddp
mov
pop
in
mov
mov
sub
insb
js
adc
test
mov
hlt
lahf
mov
aas
jns
mov
push
mov
imul
fs
pop
fistpll
and
xor
rcl
sub
and
or
lret
outsb
loope
xchg
stos
inc
stos
lds
data16
pop
mov
shl
xchg
and
or
xchg
mov
dec
push
ret
pop
inc
jl
inc
mov
adc
iret
aas
dec
jecxz
rcr
xorl
sbb
add
in
loopne
jmp
flds
jo
jecxz
push
and
addr16
jno
jbe
xchg
inc
dec
mov
scas
andb
test
or
test
test
mov
std
jecxz
jns
fistl
xor
jle
ss
dec
dec
aaa
cli
xchg
and
pop
das
leave
pusha
sahf
insl
cmp
test
or
cmp
inc
xlat
sub
call
cmp
lahf
notb
jo
mov
mov
jmp
clc
sahf
cmp
mov
clc
adc
loopne
out
or
adc
cmpsb
push
jae
push
movsl
xor
in
lret
sub
repnz
aas
add
sarb
repnz
sub
rorl
jns
jne
mov
jge
push
sub
pop
or
je
les
add
mov
add
dec
push
sbbl
jp
stos
pop
ja
push
test
xchg
mov
mov
sbb
test
sub
enter
cmp
mov
pop
insl
adc
and
out
add
mov
dec
repnz
aad
and
jl
mov
sub
insb
dec
repz
clc
ja
mov
pop
cltd
bound
or
arpl
in
cmp
int
mov
ja
je
mov
out
popf
imulb
and
xlat
adc
mov
call
add
push
xchg
xchg
jne
rcrl
test
dec
add
mov
movsb
pop
fdivl
jl
jle
dec
and
in
loop
scas
and
cmp
lret
push
icebp
inc
push
sub
repz
addb
lods
xchg
inc
test
or
fidivs
fiadds
pop
sbbl
lret
lock
es
mov
outsl
adc
sti
arpl
in
push
nop
mov
dec
add
jl
cmp
add
cwtl
adc
std
es
dec
mov
jno
push
xor
inc
lds
sub
negl
pop
lret
jae
mov
jmp
xorb
in
mov
push
cmp
xchg
ja
inc
push
mov
push
je
mov
icebp
xchg
push
or
jns
std
jno
fcompl
jmp
mov
test
xlat
cs
std
push
mov
cld
cmp
fsubrs
or
mov
lock
decb
test
movsl
loopne
jo
lods
mov
ret
outsl
sbb
or
loopne
adcb
shrl
inc
mov
jge
pop
inc
jmp
popf
es
push
nopl
and
cltd
into
insl
cmpsl
push
dec
jmp
pop
adc
mov
popf
xchg
sbb
jle
adc
rcrb
incl
jmp
in
or
mov
cmpsb
push
ljmp
in
mov
jmp
adc
and
aad
and
jns
incl
fldenv
ljmp
enter
adc
neg
gs
and
pop
cmp
in
mov
pop
lret
stos
jle
mov
loopne
lret
push
xor
jne
cs
stc
pop
out
pop
inc
jmp
sbb
and
xor
ss
aaa
jo
scas
xchg
push
mov
popf
loop
push
pop
push
inc
push
out
mov
sub
mov
ret
xchg
aas
pop
les
push
jae
mov
aam
leave
mov
int3
fcmovu
scas
push
pop
stos
push
ljmp
sarb
sbb
jae
cmpl
les
sub
pop
mov
mov
bound
out
int
push
push
xor
lods
leave
xor
mov
mov
ret
push
mov
inc
sub
jmp
inc
push
sbb
cmc
or
test
das
imul
int3
movsb
addr16
mov
lcall
cmpsb
imul
sti
rorb
subb
outsb
dec
xchg
popf
sbb
inc
scas
and
push
mov
pushf
push
xchg
arpl
int
mov
jno
andb
adc
fstpl
test
out
dec
flds
adc
push
jge
jno
cmpsb
mov
frstor
aas
mov
in
inc
loop
test
dec
call
jb
lds
insb
pop
jae
leave
xor
push
test
sti
les
jle
push
jno
rclb
xlat
pop
fsubs
or
cli
mov
nop
pop
ret
fnstenv
mov
lret
testl
inc
fmuls
push
mov
jl
adc
mov
mov
fldenv
mov
push
lea
xchg
cmp
sbb
gs
ljmp
mov
cmp
mov
pop
cmp
and
shll
jmp
push
out
mov
mov
jnp
mov
mov
mov
in
push
out
mov
xor
clc
cmp
sub
popf
xor
inc
adc
ffreep
in
lock
pop
push
cmp
push
add
hlt
ss
sub
outsb
clc
jl
mov
xor
ficomps
stos
mov
outsb
call
movsb
call
xchg
pushf
out
jns
xor
lcall
push
xlat
sbb
loopne
jmp
jp
cmovbe
jmp
jae
xchg
xor
lea
test
test
lret
outsl
inc
es
add
xor
mov
pop
in
test
test
iret
pop
cmpsb
add
bnd
ss
repnz
pop
cmp
sub
or
adc
es
cmc
push
test
and
mov
std
pop
cwtl
xchg
add
mov
jmp
insl
cwtl
xchg
push
xchg
ss
sbb
ljmp
inc
xchg
push
notb
aad
roll
push
decl
daa
cli
and
sbb
and
mov
test
stos
roll
cmpsl
jmp
jne
in
mov
pusha
jno
push
ja
cli
push
jo
call
mov
test
cmpsb
lods
or
cmp
lcall
or
ljmp
add
mov
xchg
push
cli
out
leave
sbb
and
test
lods
inc
xchg
faddl
mov
lods
loopne
filds
lcall
xor
mov
push
sbb
push
adc
lcall
jne
or
out
aad
and
sbb
sub
into
mov
cwtl
clc
stos
out
and
in
jb
mov
or
in
mov
push
sub
mov
enter
mov
cmp
scas
test
ss
dec
push
out
sbb
or
gs
dec
cmc
std
fsubr
or
stc
push
push
das
lea
insl
adc
mov
popl
pop
cltd
pop
int
cmp
mov
push
cmpsb
rcrb
sub
stc
shl
pop
test
xchg
mov
arpl
sub
imul
xor
add
fmul
push
push
fs
mov
cmp
fcoms
xchg
test
jl
xchg
movsl
sbb
mov
pop
scas
fdivrs
mov
cwtl
notl
in
sbb
scas
stc
xor
jns
inc
cltd
mov
or
les
mov
push
outsl
jbe
and
inc
pop
sbb
arpl
adc
cmp
cld
mov
orb
bound
push
xchg
addl
mov
addr16
stc
jp
mov
add
and
insb
stos
dec
dec
cmp
mov
test
inc
mov
imul
mov
or
into
and
jb
testl
push
sub
or
aas
mov
mov
jecxz
sbb
and
aaa
mov
loop
cmp
pop
stc
mov
push
movsl
pop
fndisi(8087
or
jne
inc
pop
outsl
xchg
push
test
xchg
xor
adc
orb
std
xchg
mov
fisubs
stos
loope
gs
pop
adc
push
lods
dec
jg
dec
mov
inc
dec
pushf
das
sarb
and
mov
shr
sub
pop
stos
inc
es
push
imulb
xor
pop
mov
pushf
xchg
push
sti
sarb
mov
xor
aaa
jno
or
pop
jb
mov
add
add
jl
pop
add
jo
int3
dec
pop
add
mov
or
dec
iret
push
push
xor
sub
mov
cli
out
pusha
cmp
mov
out
ljmp
mov
inc
fs
ss
std
inc
add
sub
or
and
dec
popf
push
repnz
mov
mov
std
shll
test
sub
fdiv
aaa
mov
mov
cmp
adcb
jle
mov
pushfw
mov
mov
clc
xchg
sub
outsl
arpl
push
mov
mov
mov
arpl
fcom
movsb
pop
push
sub
jl
or
mov
test
cmp
sub
fstpt
sbb
mov
adc
xlat
inc
jecxz
lret
imul
adc
ss
adc
pop
dec
aas
push
in
cltd
push
xorb
test
aad
out
push
int3
popf
xor
daa
jbe
xor
add
dec
movsb
fsubr
mov
mov
inc
mov
inc
mov
xchg
aaa
out
ret
imul
int3
inc
cltd
imul
rorl
xchg
inc
flds
and
xchg
test
jmp
stos
mov
dec
subl
int3
jge
jmp
popa
inc
pushf
cld
pop
pushf
in
xor
sub
mov
xchg
ret
lods
lods
xchg
xor
imul
xlat
insl
xchg
imul
movsb
push
ss
scas
hlt
xchg
jecxz
inc
sub
xor
push
movsb
mov
push
jne
and
mov
clc
jo
fidivs
ds
sub
add
stos
xlat
outsb
faddl
cmc
mov
jle
dec
stc
mov
out
sarl
and
push
dec
or
pop
fwait
add
adcb
inc
sbb
mov
mov
fcmovbe
adc
mov
or
testl
jle
jge
mov
or
lods
cld
push
add
popl
sahf
dec
scas
mov
adc
enter
push
jg
push
inc
xchg
ljmp
sbb
mov
loope
or
mov
aam
sarb
int
add
jp
sarl
insl
clc
add
mov
and
sahf
daa
or
dec
dec
pusha
adc
in
cmp
pop
insl
or
adc
pop
cwtl
arpl
mov
jno
dec
shlb
push
sahf
jnp
mov
jecxz
js
mov
jnp
adc
testb
daa
bound
dec
mov
add
jns
push
insl
test
mov
xchg
call
sahf
scas
lods
xchg
sub
iret
cltd
cs
aas
xor
adcl
fistpll
xchg
je
iret
and
or
in
cmp
or
jbe
and
push
stos
xlat
xchg
stos
ds
cmc
dec
sbb
es
outsb
lcall
stos
aam
test
cmpsl
adc
fidivl
les
aaa
into
xlat
inc
xchg
ss
jl
push
add
shrb
ret
leave
fptan
cmp
cld
add
cmp
rcrb
push
fwait
add
add
dec
sahf
daa
mov
adc
push
jmp
jns
pop
mov
sbb
cmp
pop
mov
or
push
xor
jae
push
js
ret
popf
xorb
sahf
daa
push
push
mov
aas
in
test
mov
xchg
test
pop
imul
cmc
jbe
inc
mov
mov
mov
mov
cmp
or
xor
std
sub
ret
xlat
loopne
mov
and
add
mov
stos
jne
rcr
idivb
jmp
mov
in
inc
insb
mov
pop
cmp
cmp
xor
or
ret
cs
rcl
push
mov
into
dec
mov
jnp
shrb
int
mov
loopne
mov
je
jne
aas
and
outsb
push
pop
jge
out
or
movsb
or
scas
imul
mov
cmp
push
or
xchg
imul
cltd
jl
add
push
shll
shll
addb
add
ja
inc
jne
out
loope
cmpsl
xchg
mov
push
xor
xchg
mov
xor
push
sahf
push
pop
imul
gs
add
inc
test
cli
int3
fucomp
js
mov
cmp
test
lods
dec
int
jns
ja
fistl
insb
and
sbb
cmc
ret
xlat
push
lret
rcll
aaa
and
mov
jg
int
pop
fcmovnb
sarb
push
pusha
daa
aad
mov
inc
xor
mov
pop
iret
loope
popa
inc
lret
cld
pop
les
sbb
mov
sbb
xor
adc
push
lods
mov
pop
lds
xchg
mov
push
inc
xchg
and
inc
cltd
in
jp
push
sti
mov
sub
dec
cmpsl
xor
aas
clc
nop
xor
std
imul
lock
add
in
jle,pn
mov
pop
adc
ret
add
aad
inc
inc
fadd
popf
xor
jl
out
cltd
mov
or
loopne
ja
and
mov
call
xchg
xchg
mov
xchg
push
mov
in
mov
push
mull
stc
push
scas
fisttps
data16
inc
enter
xor
inc
mov
fidivs
shlb
or
mov
imul
push
cmp
xchg
and
xlat
push
stc
pusha
inc
movq
mov
es
into
push
mov
stos
jbe
sbb
sahf
fnsave
js
iret
cmp
sub
dec
out
icebp
cmpsb
sbb
repz
aas
mov
sti
pop
dec
aam
cmpsl
loope
aaa
hlt
jg
jle
push
adc
inc
jne
stos
cmpsb
arpl
inc
and
repz
fsubr
inc
cltd
stos
inc
call
lods
in
adc
lretw
bt
inc
jmp
or
pushf
pop
dec
mov
rcrb
rorl
jnp
pop
jno
mov
int
je
int3
rcl
shll
and
cmpsl
xchg
stc
mov
orb
idivl
test
test
add
in
mov
or
xchg
xchg
jmp
add
jp,pn
mov
push
push
mov
push
pop
pop
ret
outsl
inc
cmp
ss
stos
pop
pushf
rcll
dec
mov
and
enter
inc
lahf
jns
inc
push
and
push
nop
sbb
fwait
pop
mov
cli
mov
and
js
out
mov
ds
test
loop
mov
bound
xlat
add
fisubs
sbb
dec
cmp
and
insl
not
imul
dec
jecxz
xor
cmp
dec
imul
fldenv
in
or
pop
enter
aad
mov
or
mov
aaa
push
ljmp
add
xor
push
out
or
push
sub
fisubs
aam
jb
cwtl
pop
lcall
daa
xlat
xor
sub
pop
jmp
icebp
push
nop
out
xor
inc
cmpsb
aas
add
out
mov
jmp
add
or
or
cmp
xorb
push
fcompl
fildll
xor
jl
inc
push
addr16
pop
in
mov
fidivl
push
loopne
mov
mov
sahf
xlat
cmpsl
push
lock
pushf
pop
ljmp
jl
gs
dec
and
out
mov
std
xchg
popf
lahf
cli
lret
movsl
mov
subb
sti
mov
imul
push
xlat
call
popf
xor
xchg
fidivrl
or
mov
jmp
pop
icebp
xor
insb
out
push
fnstenv
iret
test
add
sbb
lods
outsl
fldt
xor
xchg
cmc
mov
neg
jb
out
jmp
incb
xor
sbb
mov
push
incl
cmc
pop
insl
jmp
sub
idivl
inc
pop
mov
push
divb
test
and
es
insb
jb
push
fistl
leave
sar
jl
test
pop
xor
jmp
andb
out
mov
std
mov
push
rcll
fistpl
lods
sar
cmc
imul
mov
inc
pop
sbb
and
movsb
push
ljmp
nop
pop
aaa
mov
mov
mov
addr16
jb
into
jmp
mov
js
es
or
fwait
ss
mov
fisttpll
inc
fsubp
call
mov
stc
push
xchg
and
aaa
das
mov
sub
lret
mov
ja
inc
decl
xchg
xor
cmpsl
cmp
pop
or
lcall
and
rcrl
push
insb
sbb
xchg
push
aam
or
or
outsl
cmp
imul
shrl
inc
cs
jnp
pusha
cltd
xchg
pop
lret
subl
jne
dec
pop
sub
mov
inc
shlb
push
cmp
mov
insb
dec
or
xor
repz
das
xchg
shll
in
push
loop
cmp
jae
sbb
sahf
xor
call
test
dec
dec
sub
fcmovnb
icebp
adc
mov
xchg
loopne
push
inc
imull
movsb
popa
repnz
sub
inc
popf
out
add
push
pop
icebp
add
js
fcmovnbe
aas
imul
cmpb
or
mov
and
lcall
and
sbb
mov
mov
sbb
or
xchg
pushf
es
imul
xchg
mov
xor
aam
ss
movsl
jmp
xor
fpatan
outsb
idivb
mov
adc
gs
sbb
lcall
and
dec
mov
imul
xchg
mov
inc
stos
clc
push
popa
cmpsl
ds
je
xchg
orb
aam
outsl
movsb
repnz
imul
sbb
hlt
pop
xor
vmovss
mov
pop
adc
cld
jg
cmp
push
and
dec
arpl
xchg
jp
loop
jbe
ret
push
add
or
cmpsb
mov
add
rcll
add
and
inc
xor
stos
int3
test
dec
jp
rclb
shlb
pop
cltd
push
push
stc
popa
pop
adc
and
mov
ja
arpl
add
sar
in
mov
pop
xchg
lods
add
dec
sarb
push
shrb
inc
mov
aam
cwtl
and
mov
inc
fmulp
bound
outsb
xor
fidivl
push
dec
out
lret
push
fnstsw
enter
call
pop
or
ret
xor
loope
inc
shr
mov
shll
xor
aam
xlat
fldenv
mov
xchg
mov
test
mov
aaa
into
pop
pop
and
sub
ds
pop
dec
jecxz
jl
inc
lret
add
push
shrb
add
mov
sbb
les
int3
popf
arpl
in
xchg
sub
adc
pop
jg
push
push
pop
push
out
sbb
in
std
stos
mov
mov
int
xchg
cmp
inc
push
mov
xor
dec
xchg
int3
jmp
call
jb
ret
xchg
xchg
lods
ss
test
jb
inc
loope
sbb
insb
fs
and
or
loope
sti
sub
pop
aam
and
adc
notl
cmc
xchg
push
lods
mov
pop
pop
fxch
ret
xor
jecxz
lds
pop
or
rcrl
jge
aaa
add
add
es
inc
fst
inc
mov
testb
lcall
in
nop
pop
nop
xor
inc
ficompl
push
std
sbb
and
mov
adcb
push
and
add
push
xor
lcall
adc
pop
les
loope
add
pop
mov
insb
dec
gs
scas
aaa
ds
jp
loop
jle
jge
jecxz
popa
lahf
jb
sbb
add
xor
insb
and
shl
sbb
loopne
mov
insb
test
lahf
pop
push
pusha
add
imul
xchg
lcall
in
mov
push
jne
lock
cld
dec
mov
mov
aas
out
cmpsl
icebp
aas
popf
pop
jno
in
add
lock
add
dec
add
jge
cmp
les
or
jbe
cld
lcall
in
xchg
add
movsl
xchg
xor
push
push
sbb
pop
mov
mov
push
cmc
or
ds
es
mov
ret
pop
mov
pop
outsl
mov
push
in
loope
dec
push
fnstenv
imul
xchg
sbb
lods
incb
ljmp
jno
nop
xor
mov
outsl
sub
nop
daa
loope
mov
xor
sub
imul
add
ss
push
adc
jb
xor
in
dec
lock
nop
jmp
stos
aaa
iret
pushf
push
rcll
lret
enter
arpl
ljmp
jp
out
jl
mov
xor
xchg
test
mov
cmpsl
lock
mov
add
out
sti
push
and
mov
testb
xchg
std
dec
scas
scas
lahf
mov
iret
shl
rcr
repz
call
lar
pop
mov
js
lahf
mov
jbe
xchg
test
je
out
out
loope
and
jno
xchg
pop
shll
into
arpl
loop
stos
dec
ret
lods
call
daa
subb
add
sete
mov
pop
imul
xchg
popa
outsl
xchg
montmul
cmpsb
lds
negl
mov
ds
adc
cmpsl
mov
jo
sub
sub
in
inc
mov
dec
insl
fs
adcb
gs
xchg
or
popa
cmp
incl
xor
xor
push
aaa
orl
popf
adc
push
int
popa
fwait
es
lret
pusha
pop
jg
mov
mov
insl
pop
sub
into
popf
icebp
icebp
push
sahf
inc
out
bound
cmp
cmp
loope
pop
pop
cmpsb
mov
sub
fldt
push
jbe
cmp
shrl
popf
fld
xlat
iret
aad
jbe
cmp
inc
andl
adcb
jb
jnp
sbb
lcall
sbb
sbb
shl
jno
mov
hlt
out
aaa
ret
push
rorl
xchg
jmp
sub
jnp
stos
pushf
mov
loopne
mov
sar
mov
iret
ret
pop
jbe
dec
lahf
mov
xor
add
mov
adc
mov
rorl
xor
mov
lahf
cld
sub
shl
inc
shl
cmpsl
aam
or
mov
inc
pushf
das
scas
mov
inc
adc
orl
xlat
in
ret
lcall
arpl
push
imul
cmp
insb
insl
mov
pop
fisubrl
xchg
xlat
frstor
mov
or
cmc
inc
pop
pop
mov
cmp
pusha
sbbl
xor
shll
mov
vpmacsdd
or
hlt
das
push
sub
insb
sarb
jb
aad
loop
jmp
out
in
inc
cmp
adc
daa
stos
incb
dec
hlt
push
inc
inc
mov
out
ljmp
stos
xchg
je
add
jge
adc
frstor
outsb
std
mov
mul
push
mov
mov
inc
fnstenv
jb
movsb
enter
add
ror
mov
mov
cmpsb
adc
xor
imulb
daa
je
fwait
rolb
jmp
jle
imul
js
mov
sbb
push
sub
popa
cltd
out
fwait
sti
push
fsubrp
xor
lahf
scas
jg
inc
lock
fwait
icebp
jle
scas
xor
dec
in
push
mov
mov
scas
dec
scas
pop
cmpsl
push
dec
cmp
push
inc
pusha
pop
mov
push
imul
lret
sub
mov
jbe
pusha
test
xchg
stc
jl
mov
mov
add
xor
aam
mov
rcr
xchg
xor
sbb
fldenv
and
fdivs
clc
lods
jae
fists
loope
inc
inc
in
push
inc
decl
pop
dec
lea
repz
js
outsl
push
and
or
push
and
sbb
mov
push
mov
xchg
jmp
into
fsubl
push
fcoms
outsb
in
push
icebp
lcall
out
mov
sti
rcrl
pop
cmp
out
rorb
stos
inc
int
mov
push
sbb
xchg
fsts
or
dec
or
repnz
push
push
adc
or
testl
test
add
es
xorl
xor
adc
stos
in
loopne
popf
push
xchg
test
mov
cmp
push
xor
jnp
dec
insl
dec
mov
cmp
adc
popf
pop
mov
push
mov
popf
inc
cmp
cmp
test
lret
push
out
shrb
arpl
jo
inc
pop
adcb
or
jl
out
xchg
push
and
jb
and
bound
sbb
fmull
and
sbb
mov
xchg
aas
mov
push
bound
jb
jae
inc
loop
add
lcall
stc
mov
lea
inc
out
mov
cld
mov
add
sub
mov
pop
sarl
popf
add
adc
ret
xchg
mov
fcompl
mov
pop
negb
cltd
mul
scas
adc
or
inc
jg
pop
es
dec
mov
idiv
or
xchg
nop
jmp
fstps
mov
sub
andl
cmp
xor
push
pop
cld
into
pusha
ss
xor
push
push
das
push
inc
bound
mov
scas
jecxz
mov
orb
jle
jae
mov
push
test
lahf
daa
das
jbe
pusha
push
in
add
mov
aaa
sub
repz
ds
and
ds
dec
and
sahf
sub
cmp
xor
xchg
movsb
ss
aam
into
add
sbb
pop
mov
xchg
test
xchg
add
es
push
jp
das
xchg
xchg
subl
mov
sub
xchg
aam
inc
mov
pop
inc
in
icebp
mov
pop
push
clc
add
cmpsl
xchg
stos
lods
jecxz
push
dec
mov
push
jns
sbb
int3
sub
push
test
call
sahf
cmp
test
pop
push
sub
les
dec
and
lahf
daa
pop
ds
scas
jno
push
dec
aaa
int3
xchg
icebp
movsl
cltd
push
add
bts
sub
subb
out
int3
lcall
pop
jmp
ret
and
or
inc
cli
cwtl
cmc
insl
dec
pop
mov
and
aam
test
add
push
mov
fdiv
jge
test
shlb
pop
rclb
jl
or
movsb
cmp
cmp
lods
push
sub
and
inc
sbb
std
je
fsubs
pop
shlb
loopne
and
clc
adc
sbbl
push
mov
or
and
sbb
pop
cmp
add
and
or
cmp
push
aaa
add
inc
fs
icebp
mov
arpl
cmpsb
test
into
inc
adc
mov
mov
je
dec
ss
xorl
xchg
pop
cmp
fiadds
or
sti
lret
inc
fucomp
in
push
out
fisubl
cmpb
ss
push
inc
push
dec
push
push
mov
xchg
fisubl
push
mov
and
pop
lock
and
ss
testb
jmp
xor
in
sub
cmp
dec
mov
sub
push
scas
mov
rclb
test
dec
ljmp
mov
and
loope
shll
push
pop
push
mov
test
orl
xor
or
clc
in
inc
and
pop
lahf
adc
mov
int3
add
rorl
adc
inc
sub
jno
int3
fmull
lret
dec
shrb
call
dec
xor
and
jp
inc
je
cmpsl
xchg
mov
fwait
call
mov
std
or
daa
sahf
jo
gs
data16
cmp
mov
das
ret
pop
mov
jb
xor
daa
mov
mov
sahf
jp
sbb
xor
cmp
test
sbb
push
fdivrs
cmp
enter
dec
mov
mov
and
push
push
mov
mov
mov
insl
cs
sbbb
pop
mov
ja
pop
sarb
sub
es
mov
repz
adc
nop
sub
mov
addb
inc
inc
iret
test
je
adcb
cmpsb
bound
or
sahf
ret
pusha
xchg
lea
dec
sub
bound
lods
mov
fldenvs
cmp
pop
scas
stc
out
sti
aad
mov
scas
mov
iret
mov
xchg
sti
push
and
push
jle
stos
adc
fsub
cld
dec
mov
xchg
in
pop
mov
jnp
hlt
inc
out
call
insl
sub
dec
add
pop
outsb
scas
jbe
inc
cmp
inc
jl
lret
mov
or
icebp
rcll
mov
std
popa
xorl
es
fwait
pop
incl
test
mov
jns
dec
and
dec
scas
push
mov
sqrtss
stc
dec
lret
mov
rcl
mov
adc
jge
push
pop
push
jnp
sub
mov
fnsave
mov
pop
ret
in
or
lock
cmp
ret
xchg
frstor
sbb
pop
inc
add
shl
sbb
xchg
mov
hlt
out
sbb
add
imul
xchg
sbb
jb
out
sbb
movsb
dec
inc
sub
xchg
aaa
dec
dec
popf
bound
inc
pop
jp
and
cmp
and
inc
cltd
cld
inc
sti
insb
flds
adc
xchg
jmp
lea
xlat
mov
or
ret
adc
out
push
stc
rcl
lods
dec
pop
test
sub
gs
sub
test
popf
leave
mov
xchg
jnp
in
out
cmp
jns
insb
movsb
orb
sub
mov
outsb
push
out
jo
push
mov
pop
decb
xchg
das
insl
jo
adc
leave
icebp
mov
dec
lods
pop
out
arpl
dec
addr16
loop
mov
pusha
cmp
mov
xor
cmc
mov
mov
popa
mov
push
push
cmp
jmp
sub
faddl
repz
sbb
stos
in
add
ljmp
inc
inc
push
in
das
jo
or
pop
and
fs
xor
loopne
lods
out
movsbl
mov
jge
push
test
es
into
mov
in
frstor
jae
or
push
dec
adc
jb
and
sbb
fimuls
xor
jb
cmp
imul
les
mov
adc
je
ret
sub
in
test
xchg
lods
mov
daa
push
sub
and
jnp
xor
xchg
clc
fdivl
cmpsl
ret
pop
imul
dec
jnp
fdivl
mov
adc
push
push
mov
das
push
and
xor
nopl
ret
hlt
xlat
push
pop
cmp
addr16
push
mov
push
out
dec
insb
lods
xlat
inc
dec
clc
xchg
mov
bndstx
sub
or
int
adc
out
or
ljmp
ja
scas
or
sahf
push
mov
scas
rcr
es
dec
xlat
repz
std
sbb
ds
in
add
xchg
mov
dec
dec
and
fnstenv
or
cs
ret
arpl
pop
xlat
or
enter
loopne
arpl
cmp
dec
jecxz
lret
push
out
push
inc
cmp
addl
test
rorl
int3
push
das
jns
loop
int3
sub
dec
loop
or
cmpb
mov
adc
mov
fs
inc
xor
mov
fldl
arpl
mov
rcll
pop
mov
push
in
xchg
xchg
jge
cmp
addb
push
push
jno
cmp
inc
mov
jae
sub
or
bound
ljmp
adc
mov
push
cmc
jae
es
pop
insb
dec
xchg
xchg
inc
in
sub
cmp
in
push
sbb
fisttps
je
cwtl
mov
shr
cld
mov
dec
and
mov
andl
pop
jle
sub
mov
mov
mov
cmpsb
in
loopne
lock
pop
lcall
add
repnz
xlat
adc
lds
or
in
sbb
das
mov
test
or
jmp
test
hlt
ja
mov
pop
lock
addr16
lret
fcoms
ljmp
test
add
repz
xchg
xor
add
hlt
arpl
mov
mov
jne
mov
nop
push
pop
negl
imul
adc
cmp
mov
mov
add
popf
sbb
or
shlb
pop
jnp
imul
pusha
in
mov
popl
lret
es
mov
pop
adc
mov
ss
cmp
lock
pop
xchg
xchg
add
sub
cmp
movsb
mov
dec
shll
sbb
jl
mov
in
xor
flds
cmp
mov
jge
push
adc
inc
mov
scas
cmp
dec
mov
dec
mov
clc
cmp
cmp
daa
cmpsl
call
push
jae
sbb
lret
jg
cld
pop
mov
pushf
mov
xchg
sti
pop
sbb
add
pop
loop
test
mov
cltd
cmp
inc
dec
adc
pop
xor
dec
sub
jp
das
ret
push
sub
mov
int3
mov
mov
mov
jmp
int
shl
jno
mov
out
or
dec
mov
scas
xor
repz
inc
pop
lods
mov
lods
xchg
jg
fldt
sbbl
shlb
in
xor
stc
or
adc
cmp
lret
pop
mov
mov
jp
hlt
sarl
or
fdivl
sub
xlat
mov
pop
add
rcrb
jb
pop
inc
mov
jmp
sbb
sub
push
dec
shll
aam
imulb
mov
push
repz
and
xorl
or
pushl
xchg
flds
imul
push
xchg
aas
inc
pop
subb
std
lods
xchg
pop
rcrl
sbb
xor
inc
jecxz
jl
sub
or
dec
mov
dec
dec
mov
push
ds
orb
jle
out
sub
rcr
xor
sbb
jnp
scas
xchg
rorb
inc
fdivrs
movsl
lds
fldl2t
adc
bound
test
push
mov
sbb
jo
xor
inc
ljmp
test
lods
jl
push
mov
and
xchg
add
jnp
mov
xchg
adc
pushf
mov
repnz
push
mov
cmc
ret
or
sbb
mov
repz
push
xor
sahf
mov
into
addr16
lods
and
jne
pop
leave
addb
lock
fwait
es
iret
pop
sbb
lea
push
dec
shrb
pop
data16
jl
or
mov
xchg
sub
leave
sbb
enter
loope
mov
ja
xchg
push
cmp
and
sti
cmp
add
ret
rorb
popf
mov
push
cmp
loopne
js
xor
mov
xor
stos
das
js
cltd
enter
pop
xchg
mov
test
push
push
pop
dec
push
push
daa
lcall
push
popf
jg
lods
imul
ret
in
xlat
cmp
out
test
adc
cmp
imull
test
mov
jmp
mov
sub
fiaddl
nop
mov
pop
xchg
xchg
fyl2x
inc
xchg
dec
cli
pop
insl
aaa
aad
push
and
cmpb
dec
mov
sub
inc
or
or
adc
and
jno
push
mov
jbe
lret
push
leavew
and
pop
loopne
jl
xchg
dec
add
jecxz
mov
filds
jmp
sbb
inc
inc
xor
sub
pop
icebp
inc
push
inc
cmp
das
hlt
loop
leave
push
andl
ret
mov
or
icebp
ds
popa
es
fwait
pop
in
xor
add
jge
jl
or
and
sub
roll
xchg
insb
cmp
dec
pop
dec
mov
or
fscale
or
ss
cs
cmp
push
or
jno
adc
or
mov
xchg
stos
mov
repnz
mov
jg
mov
rclb
jae
nop
cmc
jne
shlb
pop
mov
lret
and
cmp
and
neg
sub
mov
dec
aas
add
fadd
fcomps
mov
lods
mov
adc
inc
icebp
imul
adc
rclb
jno
mov
xchg
es
cmp
add
xchg
pop
mov
test
les
test
cmp
hlt
fcomip
adc
mov
rcl
jae
sub
dec
dec
xchg
scas
insb
sub
jb
or
sbb
and
adc
or
stc
movsb
movsb
sbb
aaa
push
jns
loopne
jnp
loop
cmpsb
bnd
mov
adc
push
lahf
xor
and
cld
js
mov
movsl
aas
aad
inc
and
shl
adc
lds
inc
add
jnp
xor
imul
push
daa
loopne
or
fmuls
or
adc
stos
in
sub
fwait
out
xchg
xor
pop
movsl
cmp
pushf
push
xor
ret
aad
push
popa
subl
dec
cwtd
out
das
ds
mov
mov
cmpb
mov
lods
call
cmp
sti
inc
pop
jns
jnp
test
cmpsb
xor
jle
xor
sub
sbb
push
inc
mov
push
inc
stos
cmp
pop
es
lods
pop
outsl
pop
test
addl
data16
ror
push
pop
xor
in
bound
cmp
lods
mov
pop
jo
ja
and
dec
mov
dec
out
popa
jo
insl
loopne
imul
adc
push
cmpsb
lea
lock
bound
pop
in
mov
mov
jmp
sub
sub
outsb
hlt
jg
in
push
push
xor
es
push
jmp
insb
adc
xor
icebp
jns
ljmp
mov
pop
fucomi
cmp
xor
std
add
push
or
add
addl
cmp
testl
mov
icebp
dec
or
lods
cmpb
dec
mov
aad
clc
repnz
aas
sub
loope
es
or
cwtl
mov
mov
dec
inc
inc
sbb
inc
xchg
cmp
fnsave
push
das
push
push
stos
jbe
lret
dec
fstl
cmp
jmp
xor
or
shlb
jbe
dec
roll
test
inc
movsb
sub
insb
push
cmp
inc
and
sbb
and
and
mov
and
icebp
ficoms
popa
pop
xor
adc
adc
xlat
pop
xor
pop
jae
in
pusha
adc
stos
xlat
mov
pop
or
jmp
xor
pop
ja,pn
add
fidivs
lcall
pop
bound
xchg
fs
jl
sub
pop
cmp
or
dec
outsl
sub
mov
in
aas
in
shl
sub
adc
bnd
fdivl
fsts
pop
mov
pop
add
addr16
clc
push
addl
loopne
mov
jecxz
xchg
jne
cmp
inc
and
xor
imul
adc
pop
mov
ficomps
dec
pop
cmpsb
sar
fsubr
cmp
incl
movsl
cli
stos
fimuls
ret
inc
xchg
mov
mov
adc
jbe
sub
xchg
ja
mov
pushf
adc
stos
jmp
sbb
lahf
dec
cmc
xor
cmp
mov
gs
mov
mov
sbb
aas
cmp
in
std
mov
jle
pop
cmp
fnstenv
jbe
dec
mov
pop
lock
dec
shrb
sbb
sub
dec
lcall
pop
or
test
ds
movsl
outsl
iret
mov
in
mov
aas
divl
xchg
xor
sub
push
or
xchg
es
sbb
sbb
lods
outsl
cmpb
jne
jbe
jecxz
xchg
int3
jg
out
pop
pop
lcall
push
in
xlat
or
adc
inc
and
or
mov
pop
ljmp
mov
movsl
xchg
out
jns
jl
montmul
cmpsb
orb
jge
lea
mov
loop
daa
enter
sub
into
dec
push
pop
fucomip
shll
pop
fcmovnbe
pop
sub
push
je
or
mov
aad
stc
push
stos
repnz
xchg
add
imulb
repz
mov
xchg
out
and
test
fdivl
jne
in
pop
and
mov
ret
popf
frstor
mov
mov
pop
enter
out
sub
push
sbb
jg
adcb
jnp
inc
cmp
dec
xor
and
negb
jecxz
ret
iret
fnsave
jae,pt
pop
aaa
and
je
mov
insb
push
inc
ljmp
push
jbe
movsl
sbb
and
shl
mov
sti
inc
invd
out
adc
push
jb
shrd
xchg
in
cld
loop
mov
mov
aad
sub
or
jl
fistl
cmp
fsubrs
mov
fsub
out
in
aam
pop
jbe
ret
orl
push
dec
cmp
test
push
jns
adcb
cmovle
push
inc
add
ss
lret
sbb
rorl
or
dec
cmpb
aam
outsb
jno
sub
xor
jne
and
inc
stos
cltd
jbe
push
dec
out
xorb
adc
jp
fdivp
push
cmpsb
pop
push
ja
addr16
pop
fadd
or
sbb
or
pop
mul
cmp
mov
les
xchg
adc
jle
mov
subl
orb
jb
dec
inc
dec
dec
aaa
into
lods
cmpsb
dec
mov
out
cmp
cld
aas
inc
in
dec
test
inc
ljmp
jno
adc
frstor
aam
or
push
rorl
ds
and
xor
daa
jno
push
or
sbb
insb
pop
add
out
ret
jne
gs
imul
punpckldq
pushf
or
jnp
inc
inc
push
movsl
or
xor
push
sbb
cmpb
cmpsl
mov
loop
dec
xor
xchg
dec
mov
push
mov
nop
adc
inc
push
mov
data16
mov
test
add
xor
or
les
mov
lock
mov
xor
push
in
mov
in
ficoms
dec
lret
dec
mov
mov
cmp
pushf
mov
or
insb
lea
or
jb
int3
mov
fsts
cmp
loope
insl
mov
mov
data16
popa
mov
dec
cmc
mov
ss
jns
mov
sub
adc
pop
clc
pop
adc
push
imul
push
mov
mov
pop
aaa
pop
xlat
inc
hlt
pop
jmp
mov
and
mov
insb
test
mov
mov
jb
mov
dec
lcall
and
sbb
push
pop
ja
sub
inc
movsl
add
jg
jne
test
ds
sub
pop
cmp
pop
rclb
je
cltd
sub
lds
xor
iret
mov
std
push
arpl
pop
test
adc
andl
fwait
xchg
sbb
jnp
in
xchg
int3
rclb
sbb
pop
stos
xchg
push
mov
hlt
imul
or
int
push
das
or
adc
and
ret
fadd
dec
dec
add
push
scas
idivl
push
lock
addr16
int3
xchg
sub
jg
leave
lds
pop
jecxz
dec
shrl
cmp
push
pop
mov
es
mov
mov
pop
rorl
dec
bound
cs
xor
adc
mov
imul
pop
pop
movsl
xchg
push
out
daa
jge
aad
dec
push
jne
stos
xor
pushf
fisubs
cmp
push
pop
lods
outsl
sbb
js
inc
shlb
mov
stc
mov
dec
push
sbb
int3
sub
scas
mov
mov
sbbl
pop
sub
dec
stos
mov
ffreep
fisubl
and
push
call
pop
push
pushf
bound
ficoms
xor
mov
daa
test
enter
mov
add
xchg
or
push
cmpsl
sbb
test
call
das
xchg
and
cmp
or
cmpsb
and
mov
adc
and
cmp
and
imul
xlat
repz
std
cltd
into
mov
in
push
test
xchg
cmp
lcall
test
sub
mov
loopne
add
sub
rcll
push
push
popa
das
jbe
pushl
or
sti
pop
push
scas
fs
xchg
lret
xchg
decl
pusha
cmp
xchg
jnp
pushf
jg
jle
mov
ss
mov
mov
mov
push
insb
cli
dec
dec
mov
jle
sbb
mov
push
and
cltd
loop
negl
mov
test
ljmp
add
dec
ret
ficomps
xor
cmp
or
cs
add
jbe
push
rcrb
leave
xchg
ds
jge
push
mov
repnz
iret
loope
sub
mov
out
cwtl
int3
inc
mov
or
pop
sbb
sub
mov
adcl
xor
mov
xor
jnp
lahf
fstps
repnz
adc
into
adc
lret
mulb
dec
push
imul
xor
push
push
xchg
jbe
jae
imull
insb
fnstenv
dec
push
in
jmp
mov
out
in
jnp
fbstp
loope
repz
push
mov
lods
and
ss
dec
inc
popf
cmp
test
mov
xchg
data16
jns
aam
sbb
push
dec
cmp
rcrb
jbe
test
pop
push
xor
shl
add
enter
push
and
sbb
movsl
stc
mov
push
add
sub
mov
lods
jo
clc
cmp
pop
sbb
stos
std
imul
leave
arpl
cli
jge
mov
out
sahf
andl
in
sbb
jmp
mov
movsb
daa
jno
add
rcrb
lahf
arpl
cmp
ret
pop
mov
or
cmpb
stos
pop
bound
mov
sahf
insl
xor
jbe
lods
xor
cmp
cs
mov
mov
repz
or
mov
sub
std
and
add
stos
fadds
mov
cmc
mov
sub
test
fcoms
and
dec
pop
outsb
xchg
pop
cmp
pop
pusha
dec
sarb
lea
lret
jno
sub
jo
jno
movsb
xchg
movsl
jl
jecxz
cltd
movsb
jl
jno
leave
push
fcoms
lahf
hlt
xchg
push
mov
int
test
aam
push
mov
pop
xchg
mov
movsb
cld
ja
jle
stos
arpl
ja
fdivl
jmp
movsl
cwtl
push
pop
push
jl
xchg
lret
insl
push
jmp
ret
inc
outsb
rcrb
cld
imul
pop
pusha
stc
pushf
and
ss
inc
pushf
arpl
xor
push
pop
sti
into
gs
fwait
andl
rclb
lods
icebp
je
xlat
leave
fwait
jg
inc
or
adc
mov
gs
jnp
imul
or
sbb
ret
lods
insb
xchg
dec
mov
fstpt
adc
mov
and
pop
mov
aam
and
and
xor
push
dec
std
cltd
test
add
jl
mov
sbb
push
inc
sbb
test
fs
aas
lahf
push
mov
jnp
dec
filds
push
test
sbb
add
mov
mov
stc
out
mov
mov
add
fnstsw
or
popa
jl
xchg
add
test
stos
cmpsb
shl
addr16
gs
dec
push
xor
or
inc
pusha
pop
sbb
jae
sub
cmp
cld
cmp
jo
jb
jmp
lods
mov
mov
mov
jg
jb
daa
push
jno
pop
lods
add
xor
sbb
out
js
negl
push
je
aam
mov
aas
test
bswap
inc
cmp
dec
dec
or
movsl
and
and
lcall
fwait
fwait
jne
inc
imul
fadd
mov
jns
lods
mov
mov
adc
xchg
mov
jbe
stos
data16
pop
mov
adcl
sub
sti
aaa
imul
std
das
mov
ds
pop
out
inc
repz
dec
mov
adc
push
push
js
popa
nop
pop
push
mov
dec
leave
mov
add
inc
pusha
cld
incb
fists
sbb
fwait
sti
xorl
or
jle
dec
push
aam
mov
loope
mov
les
or
pop
sbb
xchg
js
add
pop
pop
movsb
fimull
bound
jb
pusha
pop
sarl
outsl
daa
dec
pop
xorb
jnp
sbb
add
dec
mov
add
cmp
ds
pop
mov
xchg
sub
testl
jae
cld
cmp
shll
xchg
pop
imul
mov
push
push
inc
cmpsl
xchg
frstor
data16
lret
rcrl
lret
sbb
xchg
icebp
push
add
pop
push
cld
mov
xor
pop
pusha
mov
je
lods
jmp
pop
ljmp
push
out
scas
nop
lock
inc
popf
mov
pop
je
xlat
mov
lods
sub
out
pop
dec
jns
sub
das
and
cs
add
cmp
mov
cli
xorb
sbb
pop
jno
ret
inc
loope
cmpsb
cli
inc
fldcw
fsubr
xchg
mov
data16
lahf
push
inc
fldenv
dec
or
inc
pusha
ljmp
mov
add
mov
adc
popf
mov
push
xchg
xor
xor
out
push
adcl
fstl
test
ret
cwtl
xchg
scas
cwtl
pop
in
or
cmc
or
rorb
imul
xchg
fwait
aaa
dec
xchg
mov
enter
sub
pop
dec
cwtl
add
dec
movsl
cmp
xor
pop
insl
jg
mov
inc
pop
sub
inc
aaa
push
fwait
stos
sbbb
aam
je
frndint
pop
pushf
scas
ret
int
andl
fisubs
push
xor
dec
pop
cs
nop
insl
pop
adc
out
push
and
loopne
int3
or
mov
inc
sbb
cmpsb
sbb
imul
push
mov
aad
inc
jg
jg
mov
mov
cmp
add
outsl
sub
mov
mov
test
lods
mov
stc
faddl
scas
into
loop
and
dec
adc
pop
out
lcall
dec
jbe
inc
pop
and
fcomp
movsb
aaa
push
xor
fdiv
faddl
mov
jns
fisubrs
ds
pop
movsl
loope
jmp
repz
pop
outsl
shlb
lods
fiaddl
mov
xchg
je
jecxz
push
lods
repz
pop
ds
in
stos
out
xchg
cmp
daa
arpl
jb,pn
mov
lods
scas
cli
push
rcrl
and
mov
lods
out
xor
dec
les
push
fdivrs
add
mov
jge
inc
pop
je
test
push
xlat
push
push
out
push
fwait
pop
cmc
cmp
in
into
and
sub
or
loope
sub
jp
rolb
stos
daa
sub
xchg
push
pop
sbb
call
inc
sti
xchg
or
lods
dec
jne
sbb
js
ss
pusha
push
xchg
test
sbbl
sbb
pop
mov
xor
dec
jmp
push
xchg
jo
jge
mov
or
or
cmp
dec
xchg
popf
xor
jmp
mov
clc
repnz
shrb
call
iret
or
test
xchg
pop
mov
mov
test
ds
rorl
inc
mov
jg
adc
mov
pusha
lahf
test
xchg
xor
push
sbb
loopne
lock
adc
and
int
push
popf
testb
sti
rcll
int
cwtl
movl
movsl
in
faddl
xchg
sub
mov
gs
xor
outsb
int3
lret
add
outsl
mov
add
pop
push
aas
cmp
fs
xor
daa
xchg
jnp
xor
or
scas
data16
loope
cmp
mov
add
cmc
leave
cmc
jl
lret
ljmp
lcall
pop
scas
push
push
cld
xchg
dec
mov
in
pop
stos
aaa
in
adc
mov
pop
fnstsw
test
bound
cmp
insl
mov
je
sub
mov
popa
lahf
jae
add
jne
xor
out
mov
xchg
adc
sbb
mov
addr16
lods
and
push
jne
movsl
xchg
scas
add
pop
std
jne
xor
jg
sbb
pop
push
fdiv
les
scas
mov
out
push
outsb
popa
int
subb
mov
inc
add
les
or
nop
mov
shrb
adc
insl
in
mov
rcll
rorb
mov
repz
jecxz
outsl
sub
add
lods
roll
adc
and
add
push
repnz
dec
movsb
pop
dec
pop
jl
sub
pop
mov
pop
mov
das
fnstenv
push
mov
pop
mov
sbb
ja
ss
flds
adcl
stos
jecxz
cltd
mov
jmp
jl
push
mov
scas
shl
pop
shll
or
aad
scas
and
jle
mov
fs
cmp
stos
test
rcll
aad
push
xor
add
imul
xchg
lahf
js
lret
test
lret
test
ss
leave
jo
sti
dec
clc
shl
pushf
mov
or
lods
inc
inc
xor
andb
xor
pop
mov
rcl
out
pop
out
roll
xchg
xchg
loopne
jbe
hlt
sub
push
pusha
inc
ds
xchg
sub
add
fnstenv
cmp
js
jns
test
fbld
hlt
mov
sbb
loope
aaa
xchg
jmp
out
sbb
xorb
adc
bound
std
xor
mov
in
pop
cmp
ja
add
lock
cmpsb
mov
pusha
dec
mov
push
or
pop
sub
push
imul
cmp
pop
ret
and
sub
repz
cmp
dec
hlt
shlb
xor
xchg
loope
movsl
xor
insb
insl
jge
fidivrl
xchg
mov
push
in
fwait
ja
in
mov
cwtl
mov
inc
pop
push
cmp
mov
jmp
rcrl
outsl
loop
jecxz
shrl
imul
out
repnz
jl
into
in
repnz
ja
fdivl
mov
fisubl
movsb
testb
xor
gs
inc
aad
jne
ljmp
ja
cmp
cmc
into
scas
cltd
repnz
xchg
inc
and
cmp
andb
dec
movsb
sarl
scas
loopne
cmp
std
xchg
loopne
fstp
pop
add
cs
lds
sti
jns
int3
xor
mov
call
sbb
pop
jns
add
cwtl
or
aad
xor
test
sub
fbld
adc
mov
jo
pusha
stos
jle
cmp
inc
mov
and
add
sub
into
int3
jne
stc
outsb
repnz
in
inc
jne
jge
test
sub
insb
pop
dec
push
shll
lea
dec
cmp
ja
xor
inc
fdivrl
pop
dec
lds
repz
insb
sbb
rorb
adc
cmp
aaa
mov
xor
ja
mov
ds
rcll
test
pop
xor
fisttps
pop
mov
or
or
add
dec
pop
fcoml
sbb
adc
or
inc
cmp
mov
mov
ljmp
mov
fdiv
xlat
inc
int3
arpl
mov
push
adc
xorl
xchg
hlt
mov
sub
clc
bound
and
sti
push
insb
and
sbb
jbe
lret
gs
inc
push
mov
lock
jmp
push
outsb
mov
jmp
jle
and
aaa
push
or
sar
jmp
or
sbb
pop
mov
mov
xorl
imul
es
mov
mov
lar
push
aam
pop
pop
lret
mov
push
jnp
incb
cmp
es
dec
xor
and
insl
and
hlt
mov
stos
push
es
mov
insl
xchg
adc
xchg
add
shrb
cmp
mov
rorl
aaa
pusha
or
nop
loop
and
in
in
jae
adc
xchg
out
mov
lret
jge
enter
mov
test
pop
rcrb
pushf
jns
in
and
sti
aam
ret
jp
fwait
mov
in
test
xchg
xchg
std
fiaddl
adc
sarb
lds
adc
xor
aam
mov
or
inc
mov
mov
adc
xchg
inc
push
pop
lret
aam
imul
mov
inc
out
addb
mov
aaa
scas
pop
inc
or
or
xor
pop
pushf
pop
aaa
jl
adc
jmp
sbb
mov
sbb
push
lcall
in
stos
pushf
xlat
add
jo
data16
inc
cmpsb
and
sub
cltd
xor
push
inc
push
cmp
mov
insl
out
stc
sbb
mov
mov
movsl
mov
or
shl
pop
mov
xlat
mov
mov
iret
jno
std
fidivl
pushf
hlt
jnp
push
jnp
jae
or
test
mov
jle
loop
jno
sarb
jbe
pop
pop
mov
dec
outsb
cmp
xchg
pop
mov
out
ljmp
shlb
lds
leave
mov
cmp
out
cmp
lods
pushf
add
mov
push
pop
sbb
daa
pop
hlt
in
adc
mov
cli
je
sub
xor
scas
nop
test
fidivs
and
mov
popa
cmp
call
xchg
mov
mov
inc
pushf
test
fdivrl
rcrl
mov
adc
mov
mov
push
xchg
sbbl
fsub
test
or
cmp
into
push
lahf
incb
mov
out
adc
mov
fildll
xchg
stos
xor
icebp
pop
rol
mov
into
scas
and
fdivs
out
or
inc
movb
es
test
cmc
adc
lret
push
testb
sub
xchg
pop
insb
pop
sahf
xchg
sub
stc
inc
cmp
sub
in
in
sahf
int
adc
out
jae
xchg
add
and
xchg
cs
mov
subl
nop
daa
jp
ss
jge
xor
cmp
push
fildll
scas
push
sub
sub
adc
les
outsl
cmp
push
inc
xchg
aas
popf
mov
fildll
lds
repnz
xor
jb
imul
jbe
adcl
dec
add
xchg
inc
stos
mov
fs
xchg
jne
push
out
mov
les
notb
mov
pop
cltd
sbb
iret
dec
lds
xchg
or
push
scas
and
mov
ss
lahf
mov
inc
cmpl
inc
popa
xor
aas
mov
dec
loope
pop
cmp
js
push
mov
push
or
mov
push
sbb
or
sub
pop
div
ficoml
lret
mov
xlat
xor
jne
popf
push
addr16
inc
mov
test
dec
xor
pusha
std
lods
or
mov
test
pop
bound
fildll
mov
sub
adc
gs
or
test
icebp
jbe,pt
xchg
daa
xchg
sbb
ljmp
mov
mov
call
inc
test
ss
sbb
push
jnp
sub
mov
ret
hlt
out
dec
loope
fcoml
mov
xchg
sub
hlt
popa
jns
enter
cmp
pop
aam
jbe
push
mov
ds
xchg
or
mov
repnz
sbb
rcrl
lds
testb
cld
pop
mov
aas
inc
jnp
loope
sbb
clc
adcb
or
pop
xor
enter
mov
loope
mov
add
lcall
inc
fdivs
sbbb
js,pt
fwait
popa
lret
loopne
mov
sbbb
mov
loopne
jns
jge
ret
fimull
push
adc
jnp
es
cmpsl
dec
out
fmuls
xor
cmc
lret
adc
jb
mov
and
int3
jge
js
mov
xor
mov
pop
adc
into
and
or
stos
mov
sbb
flds
adc
stos
aaa
push
dec
in
stos
and
iret
fdivrl
xchg
pusha
insb
aas
adc
stc
mov
mov
adc
mov
fnstcw
dec
shll
ja
mov
push
jg
push
andb
push
mov
int3
push
mov
or
jg
pop
lods
jg
data16
cmp
out
pop
and
sahf
mov
fucom
mov
jge
frstor
stos
push
aam
outsb
xchg
cltd
popa
orb
sub
jmp
and
adcb
pop
fs
sarb
std
cwtl
inc
mov
push
push
cmp
cwtl
sbb
xor
add
test
cmp
das
clc
shrl
aad
outsl
rcl
pop
inc
fnstsw
inc
das
ljmp
ret
and
lds
jmp
jmp
cmp
push
insb
adc
jg
loop
or
xor
dec
mov
adc
or
lods
shr
in
movsl
push
cmp
mov
les
push
pop
cmp
idivb
jecxz
aas
dec
sub
inc
orl
xor
sbb
gs
leave
mov
mov
push
jecxz
add
insl
or
xor
incl
sub
lcall
push
add
mov
frstor
mov
stc
xchg
xor
pop
mov
and
scas
je
xor
mov
pop
clc
push
or
dec
aam
push
jle
pop
cmp
sbb
lahf
add
std
roll
and
fdivrs
shrl
push
out
popa
xchg
call
nop
mov
mov
xchg
lods
pop
push
xlat
stc
shlb
xor
pop
loopnew
fwait
ss
sub
mov
or
ljmp
mov
sub
jmp
test
mov
adc
cmp
cld
add
enter
pop
cmp
mov
sbb
mov
enter
ljmp
daa
mov
xchg
jb
xchg
add
push
cmp
mov
dec
jbe
ret
mov
or
fldt
outsl
push
inc
pop
xchg
jmp
iret
xor
and
andb
xor
xchg
aaa
jae
and
push
insl
inc
jne
sub
gs
cwtl
stos
jns
jecxz
inc
adc
les
lods
js
jbe
loop
or
in
or
icebp
movsb
jge
mov
mov
dec
addr16
cmpsb
test
rol
xchg
jge
aam
adc
insb
sub
mov
push
push
out
dec
popf
xor
call
not
unpcklps
mov
mov
pop
cmp
int3
dec
and
pop
push
out
in
adcb
xor
loop
rcr
mov
loop
insb
ja
lds
pop
jo
stos
sbb
dec
cmp
je
daa
jmp
mov
insl
sub
andb
cmp
pop
lock
flds
xchg
lahf
xchg
add
shl
or
mov
push
pop
imul
xchg
imul
in
rcrb
mov
insb
ud0
je
jb
push
movsb
mov
cmp
int
test
mov
jns
lret
cmpsb
rol
adc
or
std
cwtl
iret
fildl
sahf
and
xor
outsb
fildl
cmpb
inc
cltd
fisttpl
imul
loope
jp
mov
loope
mov
ja
lcall
test
sahf
dec
fdivrs
push
cmp
pop
sbb
mov
xor
cmpsb
sti
mov
mov
clc
repz
mov
addr16
cmpsl
repnz
mov
add
xchg
push
or
and
pop
mov
aad
out
test
xor
mov
inc
loopne
nop
add
sbb
std
mov
mov
pop
xchg
jmp
fwait
jae
xchg
xchg
pushf
dec
sbb
xor
out
movsl
mov
jle
jb
dec
ret
inc
jle
in
push
js
divps
pop
arpl
icebp
cmp
jb
lds
ficompl
aaa
or
inc
push
push
out
arpl
pop
cltd
xor
xchg
bound
fmul
ret
inc
and
jg
xchg
test
les
xchg
push
stos
xchg
lea
jle
xchg
add
xchg
sbb
stc
test
cli
xchg
shll
sbb
pop
xor
mov
sub
adc
dec
pop
and
add
dec
and
stos
adcb
inc
gs
mov
cli
clc
mov
cli
movsb
jle
mov
rcrb
roll
push
push
imul
fstps
shl
mov
aas
push
xor
cmp
push
test
mov
mov
mov
es
lds
hlt
ljmp
mov
aas
xchg
insl
cmpsl
mov
mov
sub
pop
ljmp
repz
std
daa
test
push
das
rolb
test
shrb
jo
pop
aas
mov
leave
adc
xchg
mov
sbbl
xchg
lahf
stos
jl
or
in
xchg
jne
ret
dec
sub
push
lds
xor
mov
jg
and
dec
mov
pop
dec
das
xlat
xchg
ds
mov
xor
loope
mov
ss
je
and
sbb
and
mov
in
mov
testl
xchg
mov
test
fistps
pop
repnz
or
hlt
push
repnz
add
mov
setp
outsb
orl
inc
mov
rol
or
mov
imul
ret
lds
inc
dec
pop
imul
pop
lock
aas
mov
fldt
mov
lods
adc
jp
or
cs
xchg
sub
test
ret
push
insl
xlat
ja
dec
jg
shll
pop
adc
jnp
cmp
add
dec
rcr
pusha
or
into
fbld
cltd
xchg
inc
mov
and
xor
inc
dec
sub
rcrl
inc
pop
jbe
imul
jmp
or
rolb
fimuls
mov
int
sti
fsubr
jl
fnstenv
xchg
fsubl
outsb
xor
xor
cmc
mov
ds
push
cli
push
paddb
mov
ficoms
fmull
cmp
leave
and
adc
mov
test
sbb
cmp
pop
lods
inc
adc
lret
xlat
sbb
add
ret
in
leave
jne
lret
rorl
jo
jmp
imul
stos
out
pop
xchg
mov
int3
test
jns
and
dec
adc
mov
jmp
mov
mov
push
lahf
adc
scas
mov
ljmp
pop
popf
mov
imul
pop
mov
dec
int
nop
ss
shll
int3
pop
push
inc
in
inc
test
std
push
jns
aas
outsb
mov
lods
dec
jl
out
add
aas
and
jle
loop
and
cli
sbb
bound
and
test
mov
into
dec
xor
adcb
rcrb
cmp
pushf
mov
cmp
notl
push
aaa
xchg
mov
int3
fcmovne
xor
cwtl
cld
ljmp
adc
out
cli
decb
repz
ds
pop
cmp
dec
arpl
dec
cmpsb
add
sbb
cld
inc
push
jbe
loope
dec
mov
aad
xchg
nop
pop
rcl
lods
add
loope
movsl
icebp
mov
jbe
in
adc
int3
dec
mov
stos
push
subb
jp
cmp
into
sub
scas
pop
insb
gs
sbb
fcomps
pop
or
inc
and
rcl
jno
repnz
push
xchg
mov
aam
sub
add
pop
cmp
dec
loop
aaa
jp
sub
je
cmpsb
clc
push
adc
movsb
xor
xor
xchg
pop
inc
stos
dec
or
iret
mov
cmpsl
dec
sahf
cmp
sub
fisttpl
fucomp
or
fistps
das
cld
sbb
and
fsubrp
sub
sbb
pop
cltd
jo
lret
jg
in
inc
push
int
inc
xchg
jns
repnz
cmc
push
add
fwait
pop
adc
sub
in
test
mov
sbb
adc
jo
ror
sahf
dec
fadds
inc
movsb
fldcw
xor
jbe
cmp
xchg
adc
xor
mov
dec
or
cwtl
push
adc
test
cltd
popa
outsl
imulb
out
xchg
pop
sub
mov
ret
xor
outsl
daa
pop
fcoms
lods
dec
negl
jae
mov
in
call
mov
jecxz,pn
pop
rolb
test
lds
call
inc
push
dec
inc
mov
ja
pop
jbe
and
insl
loope
inc
imul
mov
inc
lods
mov
iret
in
aas
je
les
repz
xor
cltd
mov
xchg
data16
in
mov
push
arpl
bswap
or
sbb
push
bound
in
adc
mov
xchg
insl
imul
insl
mov
xlat
rep
movsb
add
mov
sub
call
mov
cmpsl
test
xchg
fisubrl
and
imul
sbb
or
mov
pop
int3
js
ljmp
call
xchg
or
fwait
mov
in
popa
jg
mov
mov
push
imul
into
jo
enter
lret
push
inc
push
sbb
fdivl
cmc
adc
push
test
and
dec
mov
pop
xor
mov
push
call
inc
add
ljmp
inc
mov
push
inc
cmpsl
ret
lds
das
mov
add
sub
es
out
in
jle
xchg
call
inc
lahf
mov
mov
dec
mov
push
mov
push
lods
xor
add
jne
fucomi
scas
stc
adc
inc
fldt
mov
push
outsb
rcrl
adc
xchg
push
pop
addr16
jae
push
mov
cmp
lret
dec
fiadds
sub
adc
out
pop
shll
and
daa
test
adc
repnz
hlt
dec
cwtl
add
sub
or
push
jne
aas
das
pop
loop
iret
lcall
xchg
jae
push
or
lahf
push
or
gs
dec
mov
jmp
aas
xor
push
and
in
int3
fsubrl
aas
and
repnz
push
aam
inc
push
movsl
inc
xor
xor
fs
test
jge
repz
and
add
jbe
ds
lcall
jne
inc
aam
mov
test
ret
filds
sbb
aad
mov
sahf
jno
pop
mov
lods
loopne
mov
xchg
pop
push
outsl
push
negl
xchg
xchg
sbb
cs
pusha
cmp
ljmp
cmp
xor
das
aam
nop
mov
xor
shlb
push
imull
dec
test
popf
xor
push
cmp
mov
arpl
fmuls
jns
xor
jno
xchg
sti
test
adc
cltd
push
dec
loopne
push
cmp
icebp
loopne
sub
mov
movsl
and
push
jbe
dec
inc
jns
lods
xor
pusha
fwait
xchg
sbb
adc
jecxz
pop
xor
imul
fdivs
pop
arpl
mov
jge
stos
repz
sbb
inc
pop
dec
mov
insb
mov
cltd
lcall
movsb
adc
stc
push
mov
push
inc
ss
mov
nop
push
xor
xchg
out
mov
sbb
imul
pop
xor
xlat
inc
xor
push
enter
inc
cltd
xchg
add
icebp
mov
cmpsl
mov
in
enter
xor
adc
sbb
cwtl
sar
lcall
fstl
push
sub
jmp
mov
pop
nop
mov
mov
jle
adc
cmp
call
fwait
outsl
add
jl
sbb
inc
pop
sbb
cmpsb
in
mov
mov
ret
push
sahf
lods
subb
jno
imul
xor
fistps
xchg
loopne
jns
xor
orl
mov
popl
mov
negb
stos
mov
dec
mov
ja
mov
in
adc
xchg
jo
fucomi
out
mov
inc
sahf
lods
fcomip
shrl
jnp
push
pop
mov
frstor
xchg
das
xchg
push
mov
movsb
fiadds
aam
adc
jp
daa
cmc
pop
mov
mulb
aam
movsb
lcall
dec
and
push
divb
cmpb
leave
cmp
lods
lea
xor
loopne
arpl
push
cmp
test
repnz
or
cmpsb
repz
inc
or
xchg
out
lods
in
sti
mov
push
jae
mov
mov
add
stos
incb
push
xor
cmp
add
xchg
mov
aaa
jge
lcall
push
std
xchg
push
adc
dec
movsb
aaa
mov
push
mov
jb
enter
fdivr
jge
xor
push
jo
or
xchg
leave
and
in
jge
mov
pop
push
lret
adcb
mov
or
jne
add
into
mov
shrb
cmp
mov
fidivs
add
adc
and
sbb
mov
mov
mov
cmp
sub
dec
push
dec
add
adc
jmp
or
mov
cli
loope
insl
daa
ss
rclb
dec
adc
mov
lcall
hlt
jmp
and
xorl
lahf
xchg
cs
daa
lret
sarb
aam
xchg
orl
out
mov
or
aas
roll
gs
ficoms
shl
inc
or
mov
pop
or
cmpsb
aas
shrl
jno
fs
mov
mov
cmp
jne
pushf
popf
inc
or
lods
movsb
mov
das
ja
xchg
inc
push
or
or
mov
popa
outsl
inc
push
jl
inc
xor
mov
test
xor
mov
cmpsl
popf
mov
dec
ret
cli
push
adc
lods
mov
mov
movsl
mov
push
cmp
gs
mov
rclb
popa
test
or
adc
movsl
aam
and
jno
xor
cmp
push
ret
mov
dec
mov
sub
daa
sub
and
cwtl
xor
dec
inc
insb
cmp
imul
popa
imul
adc
mov
or
icebp
dec
hlt
mov
pop
add
fs
pop
jno
sbb
orb
popa
jle
lret
scas
nop
or
lret
imul
jg
dec
dec
ret
pusha
jo
popf
jg
aam
jns
dec
add
hlt
mov
jne
xchg
mov
ret
loopne
push
pop
fsts
cmp
dec
dec
add
inc
repnz
sahf
dec
out
dec
push
jmp
jb
clc
xor
data16
iret
cmpb
xlat
call
and
out
pop
xor
es
xchg
jp
push
sub
mov
fistpl
test
adc
sarb
arpl
clc
sahf
and
xor
pusha
ret
call
lock
inc
mov
cmp
jle
jmp
and
iret
stos
ja
or
xchg
imul
clc
gs
xor
jle
je
repnz
and
jge
shlb
jno
insl
mov
xchg
xchg
mov
insl
jle
xchg
pop
push
xchg
mov
cmpsb
push
cmp
enter
inc
shlb
push
sub
mov
imul
and
lds
rcll
sbb
orl
pop
adc
mov
mov
popf
mov
pop
cld
clc
jnp
push
movsl
mov
add
mov
and
mov
inc
in
push
fsubs
dec
push
jo
push
in
xchg
mov
cli
rcll
ljmp
pop
out
sub
dec
jbe
push
add
inc
push
mov
pop
jecxz
cltd
xchg
cmp
in
push
mov
or
stos
add
xchg
ss
xchg
inc
rcrl
mov
addr16
cltd
mov
js
icebp
cld
sub
mov
xor
insl
hlt
mov
cmp
dec
add
fscale
xchg
mov
ret
push
cmc
cmp
in
ficoms
mov
cld
es
out
movb
jp
dec
jne
xchg
xchg
sub
ljmp
addr16
pop
or
or
jge
or
ss
in
cmc
adc
adc
insl
les
aad
cmp
in
and
test
lods
push
push
iret
data16
mov
lock
test
xchg
push
les
xor
in
xchg
mov
and
mov
and
mov
push
cmp
in
mov
cmp
push
sub
iret
in
stc
and
adc
xchg
rdmsr
push
add
lock
xchg
dec
xor
sbb
adc
enter
cli
movsb
mov
popa
fistps
inc
call
cmp
push
icebp
xor
cltd
lret
popa
ret
mov
ret
fisttpll
lea
inc
dec
daa
xor
subl
push
int
sbb
or
fsts
ljmp
xor
xor
xchg
jbe,pt
pop
xchg
xlat
inc
lret
inc
shlb
xchg
int
dec
into
xlat
aaa
daa
int
test
sti
jno
sbb
dec
xchg
aas
ret
out
and
and
push
addl
jns
xor
or
es
movsb
cmp
push
jge
cmc
push
bound
jno
add
fdivr
sahf
dec
fmuls
repz
imul
cltd
sub
mov
mov
sbb
inc
es
popa
leave
dec
pop
sti
mov
inc
fs
mov
scas
nop
dec
cmp
mov
test
scas
mov
insl
out
popa
jle
or
mov
ret
xorl
clc
xchg
jmp
fcomps
xor
pop
xchg
int
or
scas
les
in
outsb
inc
pop
xchg
inc
fadd
cmp
xlat
xchg
scas
mov
repz
mov
jp
inc
sahf
xor
movsl
adc
aad
inc
xor
jne
pop
outsb
dec
xchg
push
daa
std
ss
sub
stos
incb
lret
sahf
jmp
push
jmp
aas
mov
adc
cmpsb
ret
cltd
std
int
pop
and
pop
mov
addr16
cmc
cwtl
xchg
or
aas
es
in
pushl
push
xchg
add
ljmp
cmpsl
push
test
arpl
inc
push
push
lds
sub
pushf
into
xor
ds
xchg
dec
fildl
sub
ficoml
or
loopne
mov
addr16
push
push
sarl
insb
leave
pop
loop
push
push
leave
add
jle
sbb
fnstcw
push
mov
push
push
and
and
mov
or
rorb
insb
inc
jp
mov
in
mov
mov
iret
insl
jae
lds
in
arpl
cmp
mov
pushf
rcl
iret
cmp
jno
fbstp
lret
or
dec
in
cmc
mov
arpl
push
outsl
insb
dec
xor
sbb
mov
iret
xor
mov
stos
ja,pn
or
jnp
dec
mov
mov
inc
add
dec
and
jge
cmp
cmp
out
fcoml
mov
jb
mov
test
fldenv
mov
add
sahf
orl
lcall
push
xlat
mov
mov
push
push
xor
stos
jmp
cli
mov
mov
ljmp
imull
inc
js
cmpsb
cs
test
pop
mov
dec
and
mov
add
out
adc
pusha
sbb
test
in
cmp
jmp
sbb
jne
adc
adc
movntps
je
inc
pop
sbbl
scas
int
push
pop
push
xor
cmp
fs
inc
cmpsl
ret
dec
aaa
push
inc
cli
int
xor
mov
inc
xchg
adc
les
jne
mov
inc
call
pushf
xor
int
fdivrs
pop
imul
adc
jo
xchg
mov
push
inc
aad
loopne
fbld
pop
add
push
pop
jbe
test
and
fildl
jb
xchg
jmp
pop
aaa
mov
lahf
imul
sbb
stos
or
mov
mov
mov
rcr
cwtl
mov
sub
lods
jmp
into
push
repnz
pop
mov
rorl
mov
int3
lret
leave
into
xchg
into
jle
mov
jae
popf
in
jbe
mov
push
lcall
packssdw
and
pop
dec
pop
in
pop
mov
inc
mov
jle
or
in
mov
ret
leave
lock
jne
mov
lods
in
stos
test
lret
xchg
shrb
fmul
add
mov
ds
ret
clc
push
adc
das
addr16
cmpsl
dec
or
mov
or
and
cmp
cmp
popa
jnp
push
xchg
out
insb
stos
xchg
add
nop
adcl
ja
jge
mov
fbld
adc
xor
insb
mov
sub
add
jp
sub
repnz
enter
mov
int
mov
mov
es
lea
les
adc
stc
lds
lret
mov
lahf
add
push
hlt
cmp
int
cltd
fdivrs
cli
enter
ljmp
push
fcomi
dec
popa
and
ret
sarl
cmpsb
or
in
mov
jmp
xchg
data16
sbb
icebp
inc
aad
ds
lcall
push
gs
or
aam
out
push
xchg
jge
jne
sub
xchg
insb
sarb
sub
jl
lret
inc
mov
cmpsb
jno
push
sub
pop
sub
movsl
inc
bswap
or
ljmp
sti
jle
push
mov
or
lods
cli
mov
pop
add
mov
ss
rorb
dec
push
pop
ficompl
sbb
sbb
or
cs
mov
and
lods
ljmp
insl
xor
in
push
stc
inc
sbb
cmpsl
inc
or
int
mov
adc
icebp
sbbl
or
inc
jnp
fldcw
mov
fldpi
insl
mov
inc
and
xor
lahf
ja
jp
ljmp
and
fcoms
cmpsb
jb
pop
cwtl
mov
jns
mov
xor
stos
repnz
in
push
cmp
dec
cmpsb
adc
cmpsl
sub
and
jb
dec
rolb
sub
mov
and
add
inc
cmp
sub
daa
xor
js
arpl
pop
jmp
ljmp
pushf
pop
xchg
neg
jp
cmpsb
imul
into
notb
arpl
pop
pushf
out
add
or
into
sbb
mov
sub
sbb
xchg
popf
push
dec
out
out
mov
popa
pop
imul
cmp
ja
adc
aas
lret
xor
movsl
cwtl
jne
decl
out
push
aad
decb
daa
xor
lret
mov
shl
jmp
adc
clc
push
sbb
sbb
je
in
pop
push
xor
xor
push
pop
jmp
leave
mov
jmp
test
pusha
mov
xchg
mov
test
in
test
adc
into
int
xchg
xor
outsl
sub
pop
mov
jns
out
ja
lcall
jne
dec
loope
xchg
xchg
cmpsl
dec
xor
mov
sbb
dec
cmp
sti
mov
ror
and
lods
inc
sub
lret
pop
inc
fldl
movsb
test
mov
xchg
jno
jg
sbb
push
pusha
addb
xchg
xor
or
loop
das
and
cmc
addl
dec
imul
in
test
dec
loopne
cmc
mov
mov
push
add
push
ljmp
ja
xor
jp
mov
mov
push
movsl
daa
xchg
outsl
mov
cwtl
mov
pop
outsl
stc
pop
xchg
xchg
pop
mov
mov
mov
cmp
xchg
or
jecxz
test
mov
mov
pop
mov
scas
inc
mov
pop
xchg
push
mov
or
scas
cli
test
ds
sub
out
adc
jb
cmp
pop
cmp
xor
scas
ds
shlb
in
icebp
aam
jno
je
repz
ljmp
lods
mov
or
push
call
or
inc
sbb
loopne
jmp
loope
mov
testl
push
sbb
inc
cmp
mov
push
nop
adc
cltd
inc
mov
mov
pop
jl
cmp
adc
lcall
sub
push
mov
subb
mov
insl
inc
inc
aad
filds
addr16
add
sahf
xor
lret
adc
cmp
nop
repz
mov
shlb
xchg
cmp
cmovne
pop
popf
push
loopne
sbbl
les
mov
sbb
lret
addr16
push
rcrb
push
dec
or
stos
ret
cmpsb
lcall
aam
in
call
jnp
inc
ss
inc
mov
push
or
sahf
jb
sbb
scas
xorb
rorl
and
xchg
adc
pop
leave
mov
mov
bound
mov
cmpsl
aad
ss
mov
aas
jp
nop
push
pop
sub
cmpsb
sub
je
repnz
jo
aas
mov
fs
bound
add
mov
mov
mov
xchg
sbb
push
jl
inc
pop
sub
mov
or
loop
jbe
addr16
cmpsl
cmpsb
movsl
ljmp
scas
popf
lods
fildl
xchg
mov
dec
outsl
cmp
xchg
jge
nop
ret
call
aas
jnp
mov
fcoml
aaa
mov
hlt
add
xchg
xchg
mov
push
or
add
mov
jo
dec
and
add
push
xchg
push
enter
mov
fisubrs
pop
mov
lahf
adc
cmp
jno
mov
xchg
sub
in
mov
add
push
mov
mov
add
das
fistps
outsl
push
jne
add
inc
pop
outsb
aam
loop
cld
xchg
inc
mov
cbtw
pop
pop
xchg
cmp
and
das
adcl
cmp
and
js
pop
lret
clc
xchg
aad
mov
sbb
or
mov
addr16
jno
sarl
insl
loop
ret
add
int
icebp
mov
subb
inc
ficompl
jno
rolb
fadds
icebp
setb
push
xor
mov
stos
sbb
and
pop
or
test
mov
xor
sub
les
xchg
xor
or
jno
ret
lcall
pop
xchg
icebp
rolb
push
stc
jmp
addl
sub
cli
rorl
stos
std
cmc
inc
mov
mov
out
mov
call
pop
jb
push
in
xchg
mov
neg
cmc
add
or
xlat
cmpsl
cli
imul
out
sub
xchg
jne
nop
jmp
fistps
and
stos
push
rcrl
out
inc
aas
fsqrt
fcmovbe
test
ljmp
test
movsb
xchg
push
or
icebp
sbb
xchg
mov
push
jno
xchg
cmc
mov
daa
mov
dec
mov
jnp
inc
fcmovnu
fldcw
andl
bound
adcl
pushf
mov
xor
pusha
das
movsl
adcb
icebp
mov
and
daa
inc
jns
or
push
mov
int3
out
movsl
xchg
mov
pushf
sub
into
outsl
rol
ret
and
pop
shlb
and
xor
sub
add
loopne
cmc
adc
fsubr
cmpb
xchg
inc
in
adc
push
into
outsb
cmp
and
enter
jp
in
out
ja
nop
cs
scas
adc
pop
pushf
ljmp
je
mov
pop
das
mov
lcall
xchg
sub
data16
xchg
push
ds
insb
add
cmpsl
lds
loope
test
std
psubusw
adc
movsl
das
inc
fbstp
es
icebp
ds
and
add
pusha
xchg
sub
data16
bound
scas
out
xchg
or
mov
adc
cld
ret
and
xor
daa
popf
and
cmc
fwait
sub
sbb
pusha
cmpb
xchg
jmp
or
and
daa
mov
pop
push
dec
inc
lds
out
lret
xchg
pop
int3
jnp
jns
jne
shll
pavgw
out
jp
inc
adc
xchg
out
mov
stos
repnz
jb
inc
inc
pop
stos
mov
mov
sub
and
lret
mov
inc
xchg
jns
mov
mov
inc
adc
mov
jle
scas
arpl
insl
mov
cmp
test
testl
jg
jno
xchg
out
rcll
stos
xchg
insb
jmp
and
mov
imulb
fsubrl
mov
rcrb
push
subb
imul
sbb
ss
ss
addr16
adc
inc
les
and
xchg
into
push
leave
cmp
mov
arpl
mov
dec
jb
divl
adc
shlb
cmp
xor
shrl
aas
jnp
inc
mov
dec
xor
push
jo
pop
xchg
call
aaa
xor
adc
or
call
xor
aas
push
fwait
push
mov
out
sub
inc
mov
lea
sbb
pop
sbb
lret
jecxz
fidivl
add
adc
and
mov
shlb
mov
test
xor
push
xor
adc
cs
push
nop
jnp
arpl
xchg
icebp
jns
test
inc
cmp
cmovp
out
gs
mov
push
cmpsb
icebp
aas
sub
mov
fsubs
ds
stos
pop
jmp
sbb
sbb
stc
andl
push
out
and
cmpsl
lea
fwait
rcl
xchg
sarb
jne
push
movsl
mov
pop
es
fisubrl
and
jo
icebp
mov
or
cwtl
jne
or
stc
or
ret
cmp
add
xor
ja
stc
mov
dec
and
repz
cmp
movb
loope
add
mov
add
ficoms
addr16
test
mov
jbe
clc
or
lret
pop
popa
sbbl
pop
pushf
dec
sub
cmp
adc
ret
arpl
sbb
int
fildl
insl
aam
dec
and
hlt
out
mov
xchg
addr16
decb
jbe
pop
ja
lret
push
stos
orl
aaa
lret
push
lret
mov
adc
add
leave
and
adc
jmp
jns
imul
push
fwait
xchg
mov
test
and
shr
test
mov
sbb
pop
xor
push
leave
stos
add
clc
sub
mov
in
rorb
test
and
xchg
cltd
dec
xor
sbbb
add
mov
dec
push
pop
push
mov
test
ljmp
adc
pop
xchg
cli
ja
repz
mov
pop
mov
insl
pop
addr16
mov
addb
movsb
xchg
negb
xor
mov
xchg
push
mov
adc
jmp
fwait
jg
es
rclb
loopne
mov
jbe
push
insl
mov
rcr
data16
mov
ret
mov
sbb
rorl
pop
cmpsb
or
xchg
es
icebp
mov
movsl
dec
out
hlt
ret
sub
sub
cwtl
out
mov
mov
inc
cmpsb
les
arpl
sbb
das
cmpsl
lcall
stc
adc
push
mov
gs
popa
in
sbb
mov
das
mov
cmp
jne
out
iret
adc
adc
cli
jns
fxch
xchg
je
push
sbb
ucomiss
push
inc
dec
aam
mov
roll
repnz
add
mov
dec
movsb
je
inc
enter
sbb
rclb
xchg
scas
sbb
fidivs
cmp
aas
dec
loopne
scas
push
cmp
xchg
jmp
pop
je
data16
out
push
outsb
cmp
mov
fld
nop
test
mov
mov
gs
idiv
mov
out
aas
jmp
mov
pop
mov
or
inc
pop
mov
out
lods
daa
mov
xchg
dec
clc
push
and
pop
mov
shll
orl
pop
ret
fdivl
jle
cmpsl
aas
xor
or
jb
stos
jge
fistpl
cmp
mov
dec
pop
sub
sbb
jb
and
lds
lods
ljmp
call
add
lods
xchg
add
sub
inc
fs
mov
pop
mov
pop
in
lea
add
aad
xchg
popa
and
sbb
push
xchg
jno
jns
pop
sub
pop
fcoml
out
ret
bnd
stos
pop
push
mov
inc
sbbl
pop
mov
mov
mov
dec
cwtl
xor
mov
push
xchg
stos
mov
ljmp
hlt
fstps
iret
rcpps
mov
mov
sub
adc
cld
shrb
push
xchg
nop
cmpb
add
mov
xor
pop
addr16
add
std
push
repnz
mov
test
into
xor
or
sahf
repnz
dec
cmp
xchg
lret
lea
lods
pop
scas
test
push
mov
adc
sbb
pushf
ret
mov
cmp
clc
dec
push
dec
in
lods
mov
pop
jl
scas
lods
inc
cs
test
mov
or
xchg
ficoml
inc
cmp
jno
mov
fwait
shl
push
mov
stos
jae
pop
bt
test
mov
aad
xchg
imul
dec
cmpsb
adc
cmp
scas
lods
push
in
inc
scas
repz
cmp
push
dec
pop
or
cwtl
lea
sbb
and
or
rorl
adc
jp
test
loop
test
xor
in
inc
sbb
mov
mov
dec
add
daa
shrl
loopne
in
jp
push
in
jne
mov
sahf
and
test
loop
arpl
add
xor
push
outsl
push
orb
insl
adc
fcompl
cmp
sub
outsb
arpl
addb
pop
jb
daa
insl
add
jb
adc
stc
push
sub
push
ss
popa
mov
and
aas
or
cmp
add
stos
lock
dec
fistpll
fwait
sbb
pop
orb
mov
or
xor
icebp
mov
mov
imul
outsl
lret
add
jnp
xchg
lods
lds
push
push
cwtl
inc
xor
cmpl
and
mov
icebp
cmp
pop
js
mov
adc
xchg
inc
cs
cmc
ljmp
or
mov
cmp
mov
mov
pop
jo
pop
cltd
popw
xor
arpl
and
xchg
cltd
stos
shll
push
sub
das
das
repnz
movsb
test
or
jge
popa
or
jae
stos
data16
js
scas
pop
lods
lods
inc
sbb
lret
cmpsb
popa
dec
cmp
dec
or
pop
xor
mov
fsubrl
mov
mov
and
scas
jnp
push
jmp
inc
push
xor
outsb
test
pop
call
pop
xchg
add
loopne
icebp
adc
test
mov
cmp
std
xchg
dec
dec
push
xor
lods
ds
mov
dec
test
or
fldl
cltd
jbe
add
vpsrlq
rorl
and
popa
rcrb
dec
cld
push
sahf
in
mov
out
inc
pop
out
xchg
adc
pop
jge
arpl
and
dec
into
sbb
add
or
pop
inc
and
cli
mov
ja
data16
and
xor
in
fwait
loopne
test
sbbl
fwait
mov
add
mov
adc
pop
inc
call
pusha
das
push
xchg
xchg
aas
mov
pop
sub
and
jne
lahf
inc
add
jbe
jne
fstps
mov
xchg
sub
shrb
jno
pop
int
xchg
ljmp
pop
mov
test
les
dec
and
cmp
leave
mov
push
outsl
cwtl
fmuls
cmp
mov
and
into
mov
inc
ss
setge
bound
pusha
hlt
sub
xor
adc
sbb
fwait
lret
das
cmp
orb
or
movsl
mov
jo
fiaddl
sahf
xlat
cmpsb
mov
out
and
mov
push
sbb
scas
cmp
aaa
ss
mov
loope
lret
arpl
mov
rolb
ret
fincstp
or
dec
shrb
xchg
sbb
xor
push
cmp
leave
mov
outsb
subb
outsl
push
fisttps
or
sbb
pop
scas
or
pop
lahf
jbe
adc
mov
jnp
mov
push
leave
or
cltd
xor
adc
addb
jnp
fnstenv
in
jp
pop
mov
pop
loop
cmp
jg
push
mov
lds
adc
xchg
jge
xchg
cwtl
pop
xor
push
mov
add
xor
in
sbb
imul
shlb
pushf
aad
push
mov
or
xlat
and
add
mov
xor
fnstcw
enter
cs
aad
mov
push
lahf
inc
fcom
arpl
mov
adc
cmp
cli
sarl
stc
nop
jo
cmc
clc
xchg
adc
jg
sar
lret
sbb
scas
cmc
insb
mov
lds
sti
cmpsl
sub
aas
sub
xchg
js
mov
repz
adc
pop
shrb
add
imul
or
xor
mov
cmp
mov
gs
dec
jb
loop
pop
xor
add
cmp
mov
dec
mov
jge
lds
dec
pop
mov
aas
dec
outsb
jecxz
jne
xor
xor
je
sbb
mov
sub
dec
xchg
mov
mov
mov
sub
mov
xor
mov
in
stos
addl
xor
adc
and
imul
iret
les
and
sub
lock
or
add
hlt
aaa
das
push
and
imul
inc
mov
dec
mov
pop
adc
push
aam
mov
mov
mov
cmp
popw
adc
mov
or
lock
loope
adc
pop
lret
je
lret
iret
ds
mov
and
rol
pop
ror
rol
shlb
sub
dec
sbb
cmp
idiv
or
pop
rcrb
jmp
jae
in
arpl
adcl
add
inc
push
mov
cmp
inc
fldenv
dec
rorb
mov
es
popa
dec
pusha
dec
jne
jl
iret
mov
xchg
dec
lds
rorb
test
or
lret
jle
jo
leave
fbstp
lret
jb
std
mov
cli
pushf
sub
sbb
lret
mov
lret
leave
leave
jp
and
xchg
out
outsl
les
mov
fildl
dec
lret
sub
dec
frstor
mov
dec
fcompl
jl
ds
popa
icebp
jo
test
or
dec
adc
popf
in
dec
jae
sti
lods
jns
mov
icebp
inc
testl
frndint
push
sahf
xor
movsb
mov
add
jb
imulb
jmp
cmpsb
sbb
in
xchg
sub
test
mov
push
fcmovbe
sbbb
cld
lea
scas
mov
adc
inc
xchg
and
cmp
jmp
mov
push
mov
movl
adc
aam
clc
jno
sub
sbb
rcl
ss
or
cmpsl
ds
rol
and
cmp
push
out
cmp
pop
push
imul
imul
mov
inc
movsl
sar
clc
push
ljmp
cld
dec
and
lahf
sti
push
jl
je
cwtl
xchg
sbb
fwait
stos
push
cmp
sub
stos
lcall
fldl
nop
mov
cld
xchg
pushf
lds
mov
mov
test
pop
mov
sbb
insl
bound
addb
pop
ds
aam
in
mov
push
mov
in
ljmp
and
das
cli
pop
mov
loopne
testl
inc
mov
call
mov
xchg
out
mov
enter
stc
out
rcrl
lds
in
xchg
aad
std
mov
in
adc
cmp
cmp
mov
pcmpeqw
lea
dec
cmpsb
mov
adc
jbe
push
scas
sbb
jp
lret
jle
mov
xor
das
mov
clc
fisubs
lock
sub
out
rcrb
cmp
push
int
xor
scas
ds
add
mov
sub
fsubrl
push
xchg
repz
and
sub
dec
das
stos
sbb
test
ds
test
cmp
mov
adc
jge
push
inc
ss
das
repnz
jmp
jp
dec
rcrb
push
sbb
mov
daa
and
bnd
xor
fwait
mov
stos
cs
int3
xor
je
push
and
xchg
pop
mov
cmp
lahf
pop
in
mov
loopne
add
push
mov
push
adc
imul
imul
iret
test
fwait
sbb
in
aaa
into
push
fstpt
push
cmpb
jo
dec
pop
neg
jae
xchg
dec
xor
stos
inc
push
sbb
popf
mov
in
xor
xchg
inc
clc
scas
lahf
fldcw
dec
fsubrs
pusha
je
pop
sub
mov
cmp
push
arpl
cmp
imul
lock
cld
std
cmp
outsb
stos
inc
dec
dec
inc
fisubs
insl
cmpsb
popa
insl
test
push
mov
sbb
adc
and
gs
out
mov
jmp
repz
sub
mov
mov
ljmp
adc
fimuls
push
push
ret
or
xor
sti
xor
sub
push
jo
mov
outsb
jp
aad
sub
sub
out
add
and
scas
inc
das
cwtl
leave
mov
scas
sahf
jnp
sti
inc
inc
lret
push
sbb
or
adc
movsl
in
sarb
std
mov
popf
daa
addb
aad
in
cmp
test
jb
sarb
and
pop
mov
arpl
rorl
cmc
or
in
jnp
test
sbb
lea
inc
xchg
sbb
mov
lock
aas
push
pushf
loope
shr
mov
cli
xor
jbe
push
outsl
push
inc
cmp
jbe
push
inc
mov
gs
fcomps
sbb
sbb
cmp
rcll
pop
fdivrs
rclb
pop
jae
add
pop
ss
inc
push
push
xor
rorl
cs
insl
pop
jno
adc
div
push
adc
es
outsb
sarl
mov
push
sub
mov
jnp
fsts
xor
int
out
add
mov
jp
inc
fcoml
lds
lods
dec
repz
mov
xchg
movsl
xchg
sbbl
cld
shrl
sarl
push
sbb
adc
xlat
pop
cmp
mov
cmpsb
stos
mov
fdivs
pop
and
fdivp
adc
sub
dec
into
stos
clc
clc
xchg
xor
and
and
push
jne
inc
mov
std
sub
lret
data16
cmc
push
or
sbbl
adc
gs
xchg
lods
in
sbb
xchg
push
jne
xchg
mov
cmp
mov
mov
loop
inc
bound
add
ret
daa
inc
mov
cmc
punpcklwd
and
push
dec
aam
out
or
shll
lret
ret
sbb
sbbl
shlb
rol
pop
mov
pop
repz
pop
lahf
mov
xor
mov
jl
mov
movsl
into
cmp
mov
lods
inc
cmp
aas
dec
outsb
lahf
push
repz
xchg
test
push
outsl
stos
sbb
xor
loopne
dec
es
ret
cltd
aad
lret
dec
in
nop
xor
sbb
sbb
loope
mov
mov
xor
xchg
xchg
push
xchg
sub
mov
mov
sti
add
test
loop
jae
dec
lret
xor
sahf
push
addr16
mov
imul
and
jne
xchg
and
cmc
mov
enter
imul
movsl
cmp
mov
add
inc
xchg
adc
in
cmp
ja
sahf
out
push
loopne
xorl
sub
xor
push
push
cmp
scas
jb
test
int
sti
xchg
pop
insl
outsl
in
sahf
jg
mov
dec
out
aas
pop
out
sub
repnz
incb
pop
push
mov
mov
nop
movsl
inc
fnsave
scas
addr16
pop
cmc
lds
xchg
sub
lret
cwtl
mov
jns
imul
push
insl
test
out
pop
push
push
mov
sbb
inc
loope
push
push
or
mov
sbb
sub
in
sahf
add
xchg
xor
sbb
bound
aam
das
cld
shrl
jb
xor
jns
xchg
lret
sarb
ja
stos
push
stos
ret
aam
call
test
jne
sbb
and
flds
sub
push
sbb
les
pop
pop
mov
and
push
jo
addr16
add
mov
ret
jge
outsl
adc
ds
testl
cmp
lods
xor
pop
imul
pushf
sub
pop
decb
js
push
cmp
aas
push
jle
pop
ret
mov
addr16
gs
pusha
movl
roll
fimuls
ret
or
mov
dec
in
dec
pop
pop
imull
fdivrl
sub
dec
pop
icebp
aaa
inc
dec
int
pop
js
mov
push
out
stos
mov
xchg
mov
aaa
into
inc
pusha
sahf
and
push
add
push
inc
lret
cmp
in
xor
gs
jg
mov
push
xor
jno
mov
stos
mov
ja
jbe
or
mov
xor
ja
inc
mov
mov
sbb
adc
out
add
imul
mov
or
jo
sub
out
pop
divl
jb
mov
mov
outsb
mov
sub
ss
inc
test
sbb
pop
mov
sar
and
out
ja
scas
loope
aas
lahf
int3
cmp
push
sub
or
cld
rclb
nop
loope
notb
mov
js
gs
pop
jbe
rclb
rcrb
mov
cmp
aam
inc
int
mov
cmp
repz
cltd
in
push
pop
sub
push
adc
mov
mov
fiadds
adc
call
push
sub
dec
shll
cmc
dec
std
mov
in
test
out
xchg
sub
out
or
ds
scas
push
inc
mov
mov
dec
pusha
aaa
negl
fmulp
and
in
and
inc
push
cli
xchg
bound
add
test
fsubs
mov
fiaddl
jecxz
adc
xchg
aas
sbb
sahf
mov
iret
jb
and
push
dec
xchg
jne
fbstp
inc
ljmp
imul
cmp
mov
and
inc
adc
mov
std
dec
fstl
push
pop
subb
scas
outsb
sbb
jmp
mov
aas
mov
jle
inc
push
movsl
jge
pusha
or
stc
dec
test
hlt
loopne
xchg
clc
sbb
shl
movsb
sahf
mov
or
fdivrl
push
add
in
repnz
mov
lock
inc
movsl
or
inc
repnz
sbb
in
dec
pop
jge
lods
mov
jns
jnp
adc
push
sub
adc
inc
inc
mov
movsb
lret
bound
jno
lods
mov
fisubrl
rorb
xchg
movsl
lods
jo
or
mov
jae
andb
or
pop
shlb
and
inc
lret
mov
sbb
in
mov
inc
fwait
sbb
int
ret
aaa
les
inc
je
shl
sbb
jl
sub
iret
push
mov
aad
inc
popf
mov
xchg
and
and
and
mov
sti
ja
cltd
shrl
addr16
mov
dec
lock
adc
fcoml
scas
add
in
push
test
adc
nop
inc
cli
js
xor
xor
leave
pusha
rcll
fadd
dec
mov
push
into
cltd
xchg
mov
mov
mov
push
push
subl
mov
sub
or
ljmp
les
out
mov
lcall
ficompl
std
insb
loope
or
ja
sbb
xchg
fadds
dec
out
push
jmp
adc
ret
mov
mov
pusha
sbbb
sbb
sub
dec
and
iret
pop
pop
and
pop
mov
pop
test
daa
xchg
push
shll
cltd
scas
call
dec
lahf
xchg
in
sub
hlt
fnstcw
jnp
sbb
mov
mov
fucomp
pushf
ret
or
sbb
in
out
loop
shrb
or
sbb
jno
mov
scas
inc
cmp
pop
inc
sti
dec
mov
mov
sub
test
push
in
jl
dec
inc
fnstenv
jnp
sahf
orl
std
dec
nop
hlt
rcrl
aad
cltd
or
push
inc
mov
push
inc
fstpl
loopne
mov
stos
lods
mov
mov
or
mov
or
or
fidivrl
push
mov
imul
xchg
imul
repnz
xchg
mov
mov
hlt
cmp
and
jl
fidivrl
pop
rcll
fcomip
cs
jle
je
mov
gs
push
in
rolb
and
and
dec
repnz
jle
sub
stos
mov
test
movsl
js
fldcw
sub
mov
popa
dec
push
fs
cmp
xchg
xchg
jae
inc
mov
lret
fistl
mov
imul
scas
scas
push
inc
dec
jae
mov
data16
mov
gs
int
mov
push
movsb
cmpsl
cmp
lods
sub
testl
cmpsl
imul
cmpsl
std
mov
stos
inc
sub
dec
enter
or
sbb
outsb
add
push
lea
cmp
shl
sub
mov
dec
arpl
hlt
test
jl
pop
movsl
pop
scas
xchg
std
push
jno
cld
lods
andb
cmp
jmp
mov
push
outsl
fbstp
jle
movsb
mov
dec
cld
fnsave
adc
push
aaa
sti
inc
lock
cmc
je
pushf
mov
adc
movsl
dec
pop
mov
mov
fs
cmp
pop
nop
movsl
loope
and
int
add
aas
js
lret
popa
inc
lahf
test
shlb
xchg
fistl
stos
and
add
fidivl
lds
mov
scas
and
ss
lds
push
js
jp
jp
fisttpll
in
fs
subl
sahf
bound
xchg
or
or
test
iret
lods
aaa
mov
mov
lcall
aad
iret
inc
flds
xchg
aam
inc
scas
xlat
fcoms
repnz
call
sarb
and
fwait
or
and
fsubrl
sbbl
mov
mov
mov
iret
lcall
dec
stc
hlt
pop
ja
bound
push
push
rol
fists
dec
inc
int
ret
xor
addr16
push
jne
push
mov
bound
pop
xchg
mov
addl
fldenv
cltd
pop
jns
xor
inc
ret
jecxz
lods
mov
outsb
push
push
push
push
or
jl
cmp
push
andl
xchg
jb
mov
cmp
rcl
test
mov
lcall
dec
push
test
and
lods
cmpsb
add
and
jmp
xorl
pop
dec
dec
or
pop
push
jo
sub
cmp
jle
out
push
pusha
in
iret
xchg
add
ja
loope
lcall
je
jle
push
and
push
mov
test
out
cwtl
in
imul
imul
xor
adc
pop
mov
adc
cmp
cs
lea
mov
inc
notb
add
pop
fsubrs
mov
push
pop
jns
movq
imul
outsl
incb
xchg
cwtl
popf
pop
xor
out
mov
pop
dec
dec
aad
cli
mov
test
adc
jnp
mov
push
xor
insb
jno
or
movups
dec
mov
or
lds
add
adc
out
xor
jne
or
push
mov
xchg
mov
or
js
sbb
mov
sub
xchg
mov
in
dec
mov
cmp
cli
xlat
out
test
pop
sub
xchg
xchg
pop
add
and
jge
cmp
mov
ds
mov
pop
jo
push
stos
mov
sahf
push
mov
lcall
jle
movzbl
inc
adc
sub
pop
xchg
sbb
xchg
dec
repz
bound
pop
mov
dec
jmp
enter
pop
mov
xchg
and
lods
sahf
in
xchg
dec
loope
scas
orb
cmp
xchg
lcall
out
popa
jl
popa
scas
sub
xor
mov
leave
inc
fldenv
ret
pusha
cmp
daa
imul
xor
or
cltd
and
xor
aaa
movsb
mov
jb
adc
dec
cli
mov
mov
in
stc
imul
mov
pop
pop
mov
out
aas
lods
pop
push
lahf
clc
rcrb
ds
test
ret
movsl
sahf
call
loopne
out
mov
int
push
add
repnz
and
idivb
cmp
loop
das
mov
sub
sbb
inc
mov
or
out
popf
repz
pop
scas
call
sbb
les
ficomps
enter
lods
sbb
imul
loop
negb
daa
sub
dec
jns
leave
gs
scas
in
and
fdiv
roll
mov
lcall
pop
xorb
pop
in
mov
int
lret
pop
lea
pop
imul
mov
aas
push
bnd
adc
icebp
cmpsb
sub
fs
inc
sub
jne
ljmp
data16
pusha
insl
sti
aas
fwait
inc
push
ss
in
adc
mov
dec
pop
cmp
dec
mov
in
cwtl
psrld
shlb
mov
out
add
and
cmp
dec
fisubs
mov
cwtl
imul
stos
inc
scas
push
in
dec
push
sar
lods
mov
dec
inc
cmp
sbb
lods
ret
mov
inc
push
ljmp
lcall
cld
mov
scas
xor
cwtl
popa
inc
adcb
js
or
fwait
cltd
cld
push
in
xor
push
out
adc
dec
lret
test
sub
mov
fnsave
or
mov
rclb
lret
xor
pop
test
lret
aas
push
loopne
sub
xchg
xor
std
rcr
stos
stc
mov
push
aas
or
mov
testb
sub
lds
into
add
in
popa
test
cmpsb
int
push
mov
out
jo
and
int3
xchg
ret
notl
stc
mov
pop
jae
mov
cmp
stos
inc
mov
pop
int3
lahf
ss
sbb
xchg
jecxz
in
nop
jle
dec
push
repnz
adc
or
pop
and
in
cmp
cmc
mov
sub
pop
lahf
movsl
negl
mov
sbb
mov
adc
mov
stos
movsb
mov
mov
or
ret
mov
or
cmpsb
inc
bound
xor
cmp
jno
arpl
add
aad
js
or
enter
adc
jns
loope
insl
rcl
push
push
hlt
mov
xlat
out
icebp
or
jecxz
cld
inc
push
icebp
ficomps
leave
nop
pusha
stc
sbbb
fistpll
leave
xor
push
add
inc
inc
popa
push
repnz
jge
push
fldenv
ret
pusha
movzbl
xor
mov
pop
mov
sub
xchg
shrb
xchg
pop
addb
mov
loopne
xchg
dec
and
out
loopne
jg
call
mov
dec
es
mov
xor
inc
mov
out
and
ret
lret
inc
jecxz
mov
test
lahf
cmp
push
pushf
jno
pop
dec
loope
cli
inc
xor
dec
out
ds
xchg
pop
test
jbe
dec
inc
sub
mov
push
jecxz
cmp
pop
add
inc
inc
ret
lock
into
xchg
and
push
mov
pushf
jl
icebp
mov
int3
lret
shlb
inc
pop
sub
dec
es
scas
xor
fcmovnu
inc
stc
ljmp
cmp
iret
mov
dec
cmp
dec
shrl
dec
cmpsl
jmp
iret
fcmovnbe
aam
mov
adc
inc
or
push
test
rorl
icebp
cmp
jmp
nopl
mov
lds
ja
or
in
adcl
cmpsl
jle
sbb
pop
imul
lds
sub
sub
pop
cmp
into
lret
xor
add
test
mov
push
fucomip
push
test
xor
in
call
add
or
sub
and
ds
loope
mov
jne
je
inc
lods
xchg
adc
pop
insb
shll
xor
jne
sub
sbb
jge
into
sub
dec
sahf
jbe
negl
dec
adc
in
mov
stos
lds
jmp
add
daa
ds
jmp
adc
adc
xchg
xchg
ja
mov
dec
fsubs
pushf
cltd
daa
scas
mov
call
fs
aaa
push
and
xchg
and
jmp
cwtl
push
sub
fs
lret
es
push
lods
jmp
fwait
lods
mov
cmpsl
popa
jg
loop
inc
stos
jge
xor
out
pop
fisubl
xor
mov
pop
xchg
xor
addl
jb
dec
out
push
pop
scas
xchg
jbe
cmp
mov
fcoml
aam
mov
inc
test
inc
mov
xchg
pop
stos
dec
or
ret
jbe
cmp
shrb
dec
pop
bnd
sbb
sti
cltd
mov
add
push
ds
xor
push
les
neg
mov
sbb
loop
sbb
cmp
mov
insl
push
xchg
mov
xchg
test
inc
dec
daa
int
mov
inc
dec
fcmovnu
movsb
fdivp
mov
xlat
cmpsl
in
loop
push
adc
outsl
mov
push
shl
cltd
add
cmpsl
xor
outsl
enter
nop
ja
sahf
test
ficompl
mov
cmp
clc
nop
jle
pusha
movsb
inc
jle
xor
cmpsl
lds
pushf
pmaxub
sub
loop
sub
dec
test
mov
mov
push
and
adcb
in
xor
repz
mov
lods
sub
mov
leave
flds
cmp
stc
fldt
frstor
arpl
clc
or
lahf
out
or
pop
jp
shll
xlat
add
shlb
ss
cmp
xchg
out
lcall
sbb
hlt
mov
sarb
inc
jne
shll
cld
fldcw
scas
mov
xor
incb
mov
leave
and
or
adc
icebp
int
outsl
sub
stc
cltd
and
out
sub
cld
stos
insl
pop
out
dec
pop
inc
pop
inc
rcl
xor
data16
mov
inc
ja
mov
jb
xchg
repz
push
lret
stc
cwtl
iret
cld
in
push
stos
cwtl
ss
inc
int3
arpl
les
xchg
adc
cltd
sahf
loop
dec
faddl
add
sub
aaa
lock
lret
fbstp
fbld
add
adcl
jl
in
jb
das
add
call
cmp
or
push
inc
mov
mov
cltd
sub
xor
dec
cld
rolb
jo
imul
pop
repz
mov
decl
and
and
inc
inc
jae
imul
or
dec
mov
fmul
pop
or
shrb
jmp
mov
icebp
adc
sbbl
jecxz
cs
repz
out
pop
jno
daa
cmp
test
push
adc
add
xor
push
mov
fsub
and
jbe
enter
inc
push
or
sahf
adc
push
sbb
stos
and
xchg
or
xor
stos
cmp
std
insb
insb
dec
cwtl
push
xchg
movsb
ds
mov
sahf
jp
shrb
jns
mov
dec
push
jg
xor
sub
pop
or
mov
mov
inc
andl
scas
rcll
lret
cld
cld
fidivs
pop
int3
mov
cli
cmpsb
or
push
in
arpl
ljmp
or
nop
jnp
xchg
outsb
add
mov
bound
rcll
lahf
xlat
outsb
ror
loopne
jg
insb
push
jecxz
es
mov
mov
mov
xchg
sti
fwait
cmp
int3
cltd
or
pop
jne
or
push
mov
cmp
aad
dec
fsts
dec
dec
dec
mov
cmp
dec
and
xchg
inc
aad
in
add
ja
pop
test
inc
bound
add
xor
xchg
pop
lahf
xchg
sbb
mov
popf
push
scas
inc
push
enter
loop
lret
scas
jnp
pop
sub
ljmp
js
int
in
or
rorb
pop
jmp
and
and
xchg
cmp
inc
call
or
repnz
and
lcall
add
jno
imul
repnz
testl
jo
nop
push
xor
mov
dec
aaa
lea
mov
repz
scas
pop
icebp
jbe
sbb
jo
push
test
inc
or
es
mov
adc
pop
pushf
mov
dec
mov
imul
sub
jle
jne
mov
rol
fsts
shll
mov
inc
jp
clc
bound
mov
sbb
pop
xor
or
shll
loop
test
fdivs
pop
and
repnz
mov
cmp
test
std
xchg
movsl
dec
dec
aam
or
int
sbb
aas
push
push
push
jnp
ficoms
dec
sbb
popf
movsb
mov
cli
test
jg
pop
stc
cmp
out
xchg
inc
cmp
and
push
add
cmp
test
lcall
fdivrl
aam
lcall
jle
xor
sbb
sti
dec
ds
xchg
jo
in
cmp
cmp
and
nop
je
inc
pop
enter
outsb
ljmp
jae
sbb
lret
mov
lods
enter
push
in
cmp
test
jle
shrl
push
call
dec
subl
add
xchg
jno
push
xlat
test
xchg
pop
mov
adc
mov
loope
test
xchg
xor
rorb
jp
or
arpl
js
imul
aas
out
push
or
or
pop
dec
mov
pop
adc
xchg
jno
imul
hlt
mov
push
jle
mov
incl
test
popf
push
push
adc
mov
pop
cmp
fwait
xlat
ret
lods
in
ljmp
xchg
mov
mov
mov
nop
mull
inc
fwait
in
xlat
or
xchg
add
pop
cltd
adc
in
lock
in
jl
outsb
icebp
xchg
adc
stos
sub
clc
or
xchg
imul
repnz
out
inc
test
nop
xchg
adc
pop
xchg
sbb
mov
mov
aas
jbe
lcall
adc
sbb
adcl
popf
mov
ret
add
scas
sub
nop
int3
push
xchg
pop
int3
push
xor
sti
out
dec
fsubrs
into
cmc
mov
rcr
orl
mov
mov
cmp
lea
ja
xor
lods
adc
jnp
jbe
aaa
jmp
orl
sub
ljmp
sub
addr16
aaa
xchg
sub
or
test
sub
jle
xchg
jae
pop
inc
pop
mov
test
jle
int3
aas
out
scas
imul
lcall
inc
sti
cwtl
mov
fists
add
stos
jnp
fs
lret
sbb
dec
in
xor
mov
push
xchg
rcll
mov
dec
adc
cmp
iret
fs
cmp
out
pushf
jmp
inc
scas
mov
xor
cld
push
mov
inc
sub
and
into
loop
xchg
push
xor
jmp
cld
xchg
lds
ret
aas
pop
lods
add
int3
push
and
stc
mov
push
cli
xchg
inc
cmpsl
repz
sbb
ljmp
mov
or
sbb
and
jbe
xchg
scas
xor
sbbl
idivl
pop
scas
dec
iret
stos
inc
gs
mov
push
sub
pop
xor
fldt
call
push
adcl
in
pop
mov
into
in
push
sahf
mov
icebp
mov
int
lock
int
pop
fidivrl
and
jnp
mov
xchg
aas
cld
in
lods
fcmovbe
lahf
daa
pop
shrb
push
lret
call
mov
aam
shlb
mov
xor
aam
test
bnd
and
and
ret
inc
adc
fldenv
scas
mov
fmull
push
mov
in
mov
adc
dec
push
jbe
bound
ror
xor
jo
rcrl
pop
lahf
aas
jbe
jl
std
popa
push
test
dec
mov
test
pop
push
xor
jbe
aas
mov
inc
pop
jbe
js
xchg
lcall
push
mov
pop
stc
sbb
mov
iret
xchg
mov
lcall
shll
push
daa
mov
push
pusha
pop
mov
or
sub
dec
enter
add
shlb
mov
cmp
jle
test
jbe
xor
ljmp
nop
mov
in
fistps
pop
dec
jne
lea
test
adc
cwtl
ljmp
popl
fcos
test
pop
mov
ja
cmpsb
testl
mov
mov
xchg
stos
lea
mov
xchg
sub
lods
cmp
cmp
xchg
dec
sbb
xor
push
andl
loopne
out
filds
int
sbb
cs
pusha
push
jno
insb
jnp
subb
pop
sahf
add
pusha
lcall
mov
jg
push
mov
mov
xor
sbb
pusha
mov
and
add
cmpl
mov
mov
fcmovbe
mov
or
mov
pop
jp
test
arpl
fcompl
out
cwtl
das
and
sbb
cmp
inc
xchg
les
nop
mov
bound
out
jo
es
add
scas
and
xor
push
lds
pushf
stos
outsl
mov
filds
jge
ss
out
adc
iret
insb
sbb
or
mov
scas
mov
adc
pop
xchg
mov
enter
call
jl
xor
push
ret
cmpsb
inc
aad
in
push
divl
pop
and
sbbb
stos
jb
mov
sbb
js
leave
mov
movsb
dec
inc
and
xor
inc
fwait
push
aas
test
mov
jno
add
push
inc
mov
jmp
stc
push
lret
pop
jl
pop
mov
iret
arpl
push
fiaddl
mov
ror
and
mov
push
pushf
shll
push
mov
xor
pop
push
and
mov
mov
mov
movb
jne
popa
sbbl
out
rcrl
sbb
sbb
mov
call
je
push
notb
out
and
loopne
aas
jb
mov
push
xor
bound
xchg
arpl
aad
js
push
divb
jb
leave
loope
mov
mov
adc
aaa
inc
pop
out
pop
pop
faddl
and
seta
hlt
xor
adc
fdivrs
lea
sbb
loop
push
cmpsb
mov
subl
aas
inc
pushf
outsl
push
jnp
icebp
fstpl
notl
aam
push
jge
andl
push
enter
daa
lea
loop
popa
aaa
mov
and
xchg
mov
pop
call
shrb
pop
orb
push
out
out
stc
dec
push
dec
dec
cli
cmp
ret
cli
or
jle
lock
fistl
jp
xchg
ret
mov
adc
or
or
push
xor
add
jne
inc
pushf
sbb
mov
xchg
ja
ds
inc
and
les
jno
inc
outsb
aas
xchg
icebp
dec
mov
sbb
ret
sbb
dec
shlb
xchg
int
mov
lods
mov
clc
ret
mov
outsb
leave
push
lahf
das
ljmp
sbb
mov
mov
cmp
nop
test
jae
imul
sbb
test
lds
jns
jg
dec
xchg
mov
ret
loop
in
pop
cmpsl
in
lea
push
inc
sub
jecxz
movsl
lock
lret
dec
mov
mov
inc
adc
sub
ret
rcl
cmpsb
ds
iret
pop
repnz
jge
pushf
mov
sbb
cmp
fdivrp
jmp
cs
push
mov
dec
or
ja
shl
movb
cld
cmp
mov
pop
dec
push
out
jae
cmp
sahf
sarb
mov
mov
enter
sub
jge
mov
cmp
dec
add
nop
addr16
sub
push
int3
pushf
mov
lret
test
aam
repnz
jns
es
imulb
dec
stc
jo
sub
movsl
push
cld
add
jae
pop
push
and
inc
scas
push
dec
or
jno
lcall
sub
sub
test
mov
push
push
outsb
nop
xchg
sub
aad
xchg
test
adc
lds
iret
sbb
pop
fwait
into
mov
jns
mov
shlb
mov
xor
lcall
pushf
aam
jns
lret
fisttps
pop
adc
hlt
mov
jmp
cmp
adc
andl
mov
adc
sub
fwait
pop
cwtl
jle
shr
jp
fnstsw
adc
dec
sarl
xor
mov
popa
shlb
cmc
xchg
test
int
xor
sbb
jae
testb
lods
lret
mov
pop
push
sub
jg
outsl
daa
iret
mov
decl
xchg
sahf
fbstp
inc
rolb
sahf
or
mov
pop
add
jne
ds
rcrb
xchg
push
mov
ja
sub
pop
insl
cmp
cmp
pop
ret
cs
mov
push
lret
mov
push
push
cmp
out
add
fsubrs
xchg
dec
xor
pop
cmp
mov
cmp
cmp
pop
cmp
addr16
andb
inc
xchg
pop
push
ljmp
ret
jge
ja
or
add
cli
lea
adc
push
and
dec
arpl
xchg
add
mov
sbbl
out
dec
push
adc
xchg
lret
xor
push
inc
or
adc
xlat
pop
out
lds
inc
dec
jle
out
outsb
notb
out
aaa
into
mov
test
lods
mov
mulb
xsha1
cmpsb
dec
fsts
lret
icebp
out
test
ja
adc
lcall
nop
mov
in
xor
mov
push
jbe
or
adc
and
fcom
inc
leave
pusha
xor
shrb
cmp
mov
inc
fsubs
xor
addr16
sbbl
pop
mov
sub
jmp
xchg
subl
mov
xor
imul
dec
aas
inc
bound
sbb
dec
stos
jl
inc
mov
or
loope
ljmp
gs
hlt
push
sti
mov
sbb
jo
in
cmp
sub
sti
cmpsl
ds
aas
lds
scas
call
sbb
jmp
sub
idivl
xchg
ret
xchg
jg
dec
ret
sub
call
fsubp
push
mov
rcr
mov
int3
inc
arpl
inc
lods
cmpsl
jb
xchg
sub
sub
lds
mov
jmp
jle
ljmp
push
mov
push
mov
shrl
repz
lods
gs
outsl
aam
test
rcrl
test
mov
pop
cwtl
xor
lods
out
add
icebp
testb
lcall
inc
in
pushf
mov
std
adc
jp
jnp
sti
lock
xchg
adc
js
std
loopne
bound
cmp
insl
mov
js
ds
xlat
inc
in
arpl
jne
mov
xchg
mov
orl
lods
cs
aas
addb
in
sub
dec
mov
mov
push
cmp
push
stos
and
out
adc
ss
pop
loop
sbb
inc
xlat
sbb
push
sahf
push
call
or
fbstp
push
ret
cltd
in
cwtl
imul
out
mov
xchg
mov
inc
fwait
jecxz
int
cmpl
xchg
cmpsb
pop
sarb
mov
cmc
xchg
addl
movsl
push
pop
mov
or
imul
or
mov
mov
out
jns
or
xor
sub
jo
cwtl
loop
sub
repnz
sahf
jecxz
jb
cmpsl
and
addr16
add
out
fwait
mov
fbstp
adc
jl
xor
xchg
add
sbb
xor
daa
jp
cltd
andl
fwait
push
stos
jp
fmul
inc
push
or
cltd
xor
repz
dec
fst
insb
paddq
mov
inc
pushf
push
mov
pop
lea
push
xchg
push
and
inc
lcall
cs
shl
pop
repz
dec
xor
arpl
shl
mov
addr16
xchg
mov
pushf
movsl
push
mov
mov
lods
ljmp
jb
out
test
mov
mov
fmulp
xchg
adc
jecxz
icebp
mov
divb
pop
imul
lahf
add
cli
js
mov
push
mov
scas
fmull
fisttpll
into
xchg
stos
dec
ljmp
xor
lcall
sti
test
mov
aas
pop
xchg
mov
jge
mov
mov
cmp
inc
call
cmp
jo
cmp
scas
xchg
fs
ret
arpl
ret
stos
add
daa
and
jno
jbe
sti
jne
adc
mov
mov
inc
fcmovnbe
push
mov
loope
pop
jg
dec
cltd
enter
push
mov
mov
stos
rorb
cwtl
fdivs
movsb
sahf
loope
dec
dec
and
out
je
adcl
cmp
repz
mov
popa
lcall
inc
daa
jge
add
hlt
or
xor
dec
push
jnp
xchg
imul
push
loop
in
adc
mov
stc
xchg
xchg
stos
das
mov
jge
fcoms
test
mov
xchg
sarl
mov
mov
stos
cmpsb
les
adc
pop
jae
inc
lahf
shl
xor
les
ljmp
inc
insb
push
in
sub
mov
nop
dec
je
jnp
lret
movl
jae
cmc
andb
lods
inc
not
ffreep
pop
sbb
out
mov
lods
push
cld
push
jmp
fldt
xchg
mov
mov
or
sti
shrb
sbb
fcmovne
lds
popa
mov
sar
or
sbb
shrl
lds
adc
sbb
jcxz
fsub
pop
cs
xor
lods
fld
arpl
cli
xor
and
into
pop
shll
mov
add
inc
pop
adc
mov
sbb
pop
hlt
add
jnp
fstpl
push
orb
cmpl
pop
pusha
imul
roll
add
pushf
dec
sub
add
cmp
add
in
xorl
test
mov
insl
push
or
into
addr16
mov
add
xchg
sub
add
std
les
jo
pop
rol
cmpsb
sbb
mov
arpl
lret
bound
mov
xor
sub
into
pop
xchg
ret
pop
mov
mov
imul
dec
iret
adc
inc
in
adc
test
scas
jns
dec
ljmp
loope
aad
mov
pusha
imul
push
add
cli
or
cmp
into
shl
mov
lods
mov
bound
fisubrl
sub
cmp
aas
pop
push
cmp
inc
repz
lods
push
aam
mov
notb
or
int
mov
in
loope
and
pop
mov
xor
jmp
nop
jns
mov
imul
push
icebp
rorb
mov
sub
or
orl
insl
xor
flds
or
adc
dec
scas
jmp
push
add
and
push
cltd
sbb
jp
and
pop
sbb
push
mov
adc
das
dec
decb
int3
out
push
sti
sbb
dec
lret
xchg
push
loop
inc
or
cmp
std
jb
testb
mov
lret
aad
clc
stc
popf
pusha
sbbb
std
dec
mov
jp
inc
sub
xchg
mov
cwtl
mov
push
mov
mov
enter
pop
xchg
sub
push
cs
mov
imulb
fwait
clc
pop
add
xlat
andb
adc
xchg
imul
mov
xchg
sahf
xor
adc
pop
mov
ret
loope
cmc
jne
push
adc
cmpsb
cmp
xchg
mov
jge
xchg
or
lods
mov
cmpsb
xlat
in
xlat
ret
mov
push
test
popf
jo
sub
pop
popf
or
dec
stos
loope
test
xorl
xor
shll
cs
xchg
inc
jecxz
cld
outsb
clc
test
mov
fidivs
rcr
or
jle
sbb
adc
xor
adcl
out
xchg
mov
ficoml
push
cmpsl
stos
std
pushf
mov
das
adc
aaa
into
and
mov
push
test
xchg
cltd
xor
and
mov
cmp
sub
dec
insb
jg
or
mov
cwtl
xor
repnz
or
fucomp
imul
cs
mov
mov
call
dec
xor
xor
stc
and
jnp
and
lcall
inc
vpunpckhbw
insl
jg
and
add
sbbb
fs
mov
inc
mov
mov
push
test
stos
loop
or
mov
sbb
addr16
test
dec
cmc
pop
out
es
dec
dec
int3
jbe
bound
push
mov
push
jge
inc
jb
adc
mov
sub
dec
data16
loope
out
push
adc
xor
jbe
push
mov
in
outsl
leave
data16
mov
mov
flds
adc
and
outsb
adcb
cmpsb
jns
add
outsb
lcall
xor
xlat
outsb
push
mov
mov
mov
mov
mov
mov
push
inc
insb
pop
xchg
xor
add
cmc
sub
add
mov
rcrb
mov
fidivs
pop
test
adc
aaa
mov
imul
rclb
inc
sub
fsubrp
add
sub
insl
outsl
push
or
pop
push
repz
sub
or
in
js
scas
mov
or
outsl
jne
insl
cli
xchg
sahf
nop
in
dec
ret
mov
out
mov
push
xchg
scas
cmpsl
jb
add
sbb
fidivrs
inc
sub
push
ljmp
jo
push
mov
cld
lcall
in
mov
sbb
pop
add
daa
loop
aam
mov
jl
scas
jbe
imul
sub
enter
push
push
outsl
push
mov
xor
ja
adcl
cli
sbbb
add
sbb
popa
int
sub
and
mov
int
cmp
mov
mov
fsubp
sub
fidivs
adc
in
out
xchg
pop
icebp
jnp
stos
ror
pop
mov
push
das
cmp
lcall
lods
jbe
push
clc
xor
push
arpl
xchg
mov
movsl
pop
sahf
notb
sbb
mov
fidivs
outsl
pop
mov
jns
jecxz
imul
xchg
punpcklbw
nop
cwtl
das
ret
lock
mov
lcall
cmp
shll
fs
and
dec
mov
int3
notb
test
leave
mov
cmp
pop
pop
or
dec
outsb
and
test
inc
inc
mov
les
add
cs
xchg
mov
adc
test
push
movsl
pop
mov
mov
xchg
jo
test
inc
fstpl
push
jno
test
mov
fcomip
dec
aad
push
mov
mov
enter
ret
insl
dec
mov
loopne
rcrl
xchg
out
push
dec
inc
in
cmc
loop
xlat
adc
push
int
pop
in
in
test
mov
mov
push
das
mov
pop
idivb
inc
inc
cmp
jle
aaa
add
out
mov
gs
mov
addl
je
and
add
inc
fildll
xor
imul
or
cmp
xchg
add
daa
aad
push
pop
call
dec
shrb
pop
sub
pushf
ljmp
or
sbbl
daa
add
cld
xor
jmp
stos
test
inc
ret
or
cmc
addr16
nopl
shrb
sub
dec
insl
push
push
sbb
pop
imul
lods
repz
sbb
mov
push
dec
inc
in
inc
je
cmp
fs
sbb
cmp
and
mov
imul
mov
xchg
out
outsl
pop
inc
mov
dec
mov
mov
fdivs
or
and
adc
pusha
inc
testb
popf
mov
xchg
cmp
mov
imul
mov
nop
pop
inc
out
loopne
clc
xchg
jmp
jbe
jbe
or
dec
scas
div
call
push
cmp
jnp
ss
mov
xchg
pop
fistps
mov
mov
pop
cmpsb
inc
sbb
jns
out
cmp
gs
js
pop
subl
or
xchg
imul
call
out
jcxz
or
ja
mov
and
daa
aad
pop
dec
loope
js
lock
adc
and
icebp
pop
mov
dec
icebp
clc
jbe
add
xchg
adcb
mov
sahf
ss
mov
xchg
mov
dec
movsl
dec
clc
cmc
sbb
xchg
xchg
into
fadd
mov
sub
fimull
fucomi
daa
mov
inc
xlat
mov
xchg
add
and
int
jmp
loope
cli
inc
xlat
sub
cmp
inc
push
mov
out
js
stos
mov
jb
mov
cmpsl
dec
lret
jnp
in
cld
mov
adc
jb
xor
sbb
inc
int
sub
aaa
fwait
dec
stc
fdivr
xor
fs
push
stos
lds
aad
and
in
jl
pushf
shl
les
adc
out
adc
outsb
sub
aad
pop
xor
pop
mov
cld
mov
sbb
iret
jae
clc
dec
lds
pushf
and
push
sub
pop
mov
mov
sub
movsl
sbb
inc
icebp
jg
and
pop
dec
mov
mov
mov
stc
nop
sub
leave
pop
pop
loope
scas
adc
sbb
mov
ljmp
mov
insl
mov
cli
out
arpl
adc
test
push
mov
and
xor
pop
int
jmp
mov
jo
sub
leave
xlat
stos
push
jg
js
mov
cmpsl
jo
and
aaa
mov
jg
aas
ret
adc
dec
inc
js
shlb
add
rcr
stc
imul
jno
inc
insb
inc
cmc
xlat
sub
popf
aaa
call
pop
imul
sub
mov
bound
add
lds
push
dec
inc
pop
out
out
aaa
push
mov
decb
sbb
pop
out
add
jle
pusha
clc
xchg
add
sub
fcmovb
insl
xchg
sarl
xchg
sub
aad
adc
addr16
jno
mov
ja
rolb
addl
add
es
push
dec
icebp
cmp
mov
xor
push
mov
scas
jno
adc
xorb
out
and
ficomps
popa
sahf
jecxz
aas
or
aam
cwtl
or
pusha
and
sub
cltd
or
sbbb
pop
add
add
int
sbb
sbb
push
xchg
jle,pt
js
xlat
mov
mov
loopne
aaa
jbe
test
push
mov
jl
xor
vmwrite
dec
mov
popa
jle
or
cmp
int3
arpl
add
xor
ljmp
jae
xchg
add
mov
into
and
scas
jne
outsl
testb
scas
cmp
int3
mov
fstpt
mov
jle
adc
lahf
imul
stos
push
xchg
jb
mov
or
lea
sarl
movsl
test
imul
incl
gs
sub
je
imul
repnz
sub
ds
lods
add
xlat
icebp
sub
loop
popa
jle
mov
js
mov
bound
shrb
test
cmp
pop
lock
pop
cmc
jl
out
xchg
add
cli
dec
cmpsb
popa
subb
ds
and
cmpsl
jne
mov
bound
fildll
push
sbb
jge
mov
add
cltd
popf
cmp
lock
lods
add
int3
sub
pop
repz
and
adc
jns
stos
inc
addr16
outsb
jnp
enter
lods
cmp
js
jmp
adc
sahf
loopne
add
inc
stos
adc
mov
or
clc
popf
lds
xor
dec
mov
xchg
sti
test
mov
in
les
xor
int
stos
test
into
push
inc
icebp
adc
mov
out
adc
mov
fildl
mov
sub
enter
lods
jmp
xchg
lock
pop
and
bound
sbb
scas
frstor
fmuls
lock
push
fwait
inc
ja
sub
jg
hlt
cmc
in
daa
push
call
shrl
fsubrs
pop
in
add
test
push
fwait
sub
scas
nop
daa
ficoms
ss
scas
inc
and
shrb
dec
pop
or
jle
in
es
faddl
fisubrs
mov
rorb
icebp
cmc
and
sbb
shrl
xchg
repnz
pop
adc
add
repnz
adc
and
sbb
sbb
pusha
mov
mov
dec
ds
aas
sbb
pop
shlb
out
pop
mov
dec
sub
add
movsl
mov
dec
xchg
loopne
dec
pop
out
jle
mov
ret
jl
pop
in
movsb
mov
xchg
push
sub
aaa
lahf
pusha
or
inc
or
scas
aad
and
movsl
push
cmp
xchg
jmp
call
out
loopnew
cltd
sbb
or
adc
das
push
mov
bound
mov
cmp
sub
jo
stc
jge
jbe
andb
nop
jl
jl
cmovns
sub
aam
adc
daa
nop
icebp
cmp
das
cmp
mov
mov
scas
and
stos
xorb
sbb
mov
and
dec
mov
int3
add
leave
lock
lahf
pop
push
inc
xor
inc
xchg
mov
jecxz
dec
rorl
test
dec
sbb
xor
add
sub
pop
sub
push
or
ret
sub
rcll
ds
das
add
popa
jmp
ret
ljmp
mov
or
ja,pn
test
js
ja
lods
cmp
lret
adc
fists
inc
xchg
pop
test
fidivrl
or
sarl
roll
mov
or
cmp
test
lret
and
ds
pop
ffreep
cmp
cmpsb
inc
repz
adc
outsl
out
shlb
icebp
mov
push
add
inc
scas
pop
push
sahf
jecxz
enter
pushf
xchg
test
push
xrelease
repnz
loope
jle
mov
add
cmpsb
or
bound
popa
fldcw
xor
lock
mov
xchg
jb
push
mov
xchg
xchg
in
and
mov
stos
push
push
repz
int3
ds
mov
push
pop
jne
js
push
cwtl
mov
mov
mov
ficomps
mov
pusha
rcll
mov
imull
mov
dec
sub
clc
pop
xorl
pop
add
es
pop
scas
cmp
mov
iret
insb
add
movb
push
insb
dec
mov
pop
xchg
cmp
jge
std
jbe
arpl
and
dec
mov
enter
pop
les
pop
lahf
jno
hlt
imul
mov
and
inc
ja
daa
shl
cld
mov
loopne
jle
leave
xchg
lea
jns
popa
jae
jp
insb
in
sbbl
or
cmpsl
sahf
sub
enter
jne
lret
add
test
cmpsl
icebp
mov
push
dec
sbb
cmp
pop
sub
pop
cmpsl
or
xchg
inc
sbb
sub
loopne
xchg
daa
loopne
and
mov
repnz
stc
inc
fwait
and
cli
popa
orb
dec
mov
adc
flds
and
cwtl
pushf
cmp
jbe
or
popf
xchg
push
mov
aaa
push
inc
pop
add
xchg
push
adc
inc
aaa
inc
ficoms
pop
outsl
push
sub
mov
sbb
fsubs
out
or
xchg
sbb
mov
cmp
je
sub
in
das
pop
cmp
mov
arpl
cmc
shl
shlb
test
mov
lods
in
xor
mov
into
ljmp
lods
sub
pop
addr16
pop
imul
stos
leave
aas
sbb
add
mov
xor
mov
test
mov
cld
mov
xchg
push
in
mov
mov
mov
adc
xlat
fidivrs
mov
or
mov
adcl
lretw
lods
inc
jne
idivb
lods
frstor
jb
mov
jp
int
jl
sub
mull
rcl
nop
push
adc
push
out
lock
mov
mov
and
pop
and
or
jae
sub
rep
xchg
jg
ja
push
jae
inc
lret
test
jle
div
shrb
stos
mov
mov
fbstp
aad
ljmp
fidivrl
add
out
jmp
outsl
add
add
mov
inc
xor
adc
decb
push
adc
bound
inc
xchg
mov
les
mov
xor
xchg
dec
push
iret
enter
dec
test
add
lret
jecxz
test
pop
mov
stos
repnz
int3
and
out
pop
xchg
mov
lcall
sub
fisttpll
ja
in
push
and
inc
mov
xor
outsb
imul
enter
testl
dec
popw
mov
aaa
or
and
andb
imul
push
mov
pop
pusha
notl
mov
adc
into
add
shll
dec
add
out
cltd
pusha
stos
push
js
or
xchg
xor
push
aad
dec
sbb
xchg
adc
call
jae
call
pop
sbb
stc
shrl
xchg
scas
test
int3
fmulp
ds
mov
cs
in
imul
add
sub
xchg
sub
hlt
int3
mov
jge
add
into
stos
xor
out
xchg
lods
insb
mov
mov
ror
out
mov
outsb
sub
jnp
or
ret
hlt
imul
test
das
pop
cmp
jae
nop
jmp
xor
sub
push
mov
xchg
cli
test
and
or
daa
test
sub
decb
testl
aaa
std
mov
mov
jp
sbb
push
aaa
fcmovb
outsb
rcr
jl
loope
mov
jns
sahf
adc
jo
push
out
faddl
cmp
test
jmp
add
xlat
lock
mov
mov
inc
fisttpl
rcrl
imul
in
jns
lea
aaa
stc
push
jne
ljmp
mov
cld
cs
loopne
add
adc
xor
adc
lret
pop
scas
ficoml
xchg
out
clc
lret
cmpsb
pushf
jno
into
push
mov
imul
xlat
fidivrs
movsl
lret
pop
cmc
xor
xor
sahf
add
and
fs
inc
imul
lods
das
pop
push
ja
push
xor
loopne
adc
inc
mov
ret
jno
cmpsl
add
adcl
jmp
jp
xchg
or
js
loopne
sub
std
pop
inc
dec
lock
dec
inc
stc
or
push
in
push
loop
jo
jg
xchg
mov
pop
mov
cmp
repz
ss
jo
xchg
mov
in
addr16
xor
inc
faddl
jo
and
and
frstor
roll
mov
mov
test
repz
pushf
fdivl
and
pop
xchg
cli
adc
nop
imul
outsl
adc
push
pusha
fwait
out
outsl
das
cltd
jo
add
push
mov
loopne
and
test
mov
stc
xchg
inc
pusha
les
adcl
in
and
in
lcall
push
jne
sahf
aad
rcr
push
lds
dec
jbe
dec
jae
dec
inc
jl
and
inc
and
jnp
xor
xor
scas
mov
add
dec
dec
repz
jp
xor
mov
inc
fwait
or
sahf
lods
out
cltd
aad
and
xor
cmp
fstpt
es
movsl
cmp
fdivr
xchg
pop
xchg
pop
cmc
cmp
sti
lret
popa
das
xchg
cmp
ss
repnz
test
mov
es
adc
dec
inc
xor
inc
ret
cwtl
repz
and
mov
mov
mov
add
xchg
ss
pushf
mov
sub
add
mov
int
int
sar
xchg
cs
push
imul
dec
xchg
sub
mov
fsub
aas
loopne
pop
loopne
cltd
clc
aas
inc
shll
lret
lock
adc
adc
pop
jno
sub
sub
incl
out
dec
jne
add
clc
xchg
add
ds
and
movsb
and
insb
mov
scas
inc
inc
sub
fs
icebp
or
rol
jp
dec
out
in
arpl
cmc
mov
cwtl
fistpl
xchg
sub
ljmp
les
pop
mov
scas
ds
cmp
jo
arpl
pop
pop
notl
subl
les
mov
jbe
or
testb
sti
push
pop
mov
arpl
mov
int3
popf
bound
repnz
fstps
pop
fcmovbe
pop
cwtl
negb
fcmovu
mov
mov
mov
lea
jae
push
popa
scas
loopne
cmpsb
cmp
xlat
jl
aam
fwait
xor
mov
push
jl
mov
dec
popf
xlat
jmp
call
sbb
mov
bound
stos
adc
sub
shll
adcb
jg
adc
mov
dec
push
enter
sub
cld
or
xchg
out
and
pop
cli
insb
je
mov
jle
repnz
addr16
xchg
scas
push
cltd
push
cmp
xchg
jle
sub
pop
movsb
jp
or
pusha
popl
cltd
push
daa
cmp
xchg
dec
mov
ret
hlt
mov
jmp
out
test
stc
adc
stos
inc
push
inc
in
sbb
cmp
cmp
mov
sti
xchg
pusha
aas
mov
mov
popf
mov
pop
sbb
testb
push
daa
inc
nop
sbb
scas
mov
push
shrl
xchg
push
in
mov
mov
and
sub
push
jmp
xor
orl
lahf
aam
and
or
repz
add
xchg
xchg
popf
cmpsl
ds
pop
lds
push
xor
aaa
icebp
jo
mov
add
rcrb
mov
dec
xlat
sbb
jmp
sub
out
ror
out
test
gs
push
roll
jbe
inc
xchg
es
std
or
sti
notw
xor
xor
popf
pop
sub
lock
push
cmp
jle
mov
jnp
divl
in
inc
je
fldcw
add
sub
out
pop
lds
loope
push
ljmp
push
fidivl
fsubrs
lahf
cmp
pop
int
bound
dec
lret
xor
insl
push
sub
push
mov
std
cmp
cmpsb
test
jp
push
out
popa
ljmp
sub
out
mov
fisubs
lahf
lock
lahf
pop
lods
sbb
js
imul
imul
mov
jno
iret
iret
call
aad
std
imul
fsubs
or
mov
imul
testb
mov
pop
pop
mov
test
fnsave
orl
push
call
test
repnz
sbb
xchg
cs
cmp
test
rorb
jmp
sub
push
cmp
cmc
mov
data16
mov
pusha
sti
sarb
mov
fiadds
ror
sub
or
inc
int
mov
xchg
adc
xor
pop
lods
add
cmp
cmp
add
sbb
iret
data16
fmuls
sub
mov
dec
loope
pop
inc
cmpsl
and
mov
insb
inc
sub
and
or
xor
repnz
jmp
popa
lods
cmp
and
ret
xor
imul
xchg
test
sbb
or
jno
or
dec
loope
xor
pushl
aad
rcll
sahf
aas
outsb
pop
sbb
sbb
leave
popa
lods
inc
jb
daa
lds
enter
add
inc
xchg
lods
out
int
adc
and
mov
vpavgw
fwait
cmpsb
fbstp
mov
iret
out
push
mov
cs
mov
sub
test
mov
out
subb
icebp
and
xchg
cwtl
sar
ret
sub
pop
mov
or
pop
mov
iret
sbb
push
ljmp
and
iret
fnsave
push
scas
nop
ljmp
loope
into
popf
xor
ljmp
mov
dec
comiss
jmp
pop
rorl
mov
mov
adc
pop
push
pushf
shl
subb
fnsave
xchg
out
push
pop
inc
jbe
xor
popf
xor
push
xchg
mulb
hlt
sbb
lds
mov
adc
ss
xchg
andb
jns
je
repnz
cld
push
xor
mov
aad
sub
mov
stos
dec
int3
cmp
bound
xchg
lcall
stos
in
fldcw
push
insb
jnp
shr
or
cmp
mov
mov
shrb
pop
test
inc
in
xchg
lret
loop
mov
mov
sub
sbbl
sub
gs
cld
jle
xor
push
xchg
test
xchg
sub
rcr
jbe
sbb
hlt
push
pop
pop
pop
pop
or
jb
sub
rcr
rolb
jns
mov
fadd
mov
dec
xor
mov
sti
gs
dec
pop
aaa
cmp
fidivs
push
inc
lret
aad
fmuls
cmpl
test
bound
and
sub
jecxz
inc
add
in
movsl
popa
push
out
scas
mov
movsl
push
xor
sub
aas
lea
add
mov
into
pop
inc
sbb
pop
repnz
mov
in
out
mov
out
push
xlat
xor
xchg
mov
cltd
lds
ret
push
dec
movsb
inc
jg
in
leave
pushf
jl
mov
push
testb
add
adc
lret
data16
pop
out
jg
ljmp
popa
ljmp
pusha
jmp
and
jno
push
ss
test
push
xor
iret
ljmp
xor
or
mov
mov
fnsave
pusha
cmpb
cmp
mov
in
sbb
in
xchg
and
dec
lock
xorb
adc
mov
mov
or
cmpsl
sti
or
into
add
sub
daa
inc
in
jae
ret
mov
insl
jl
outsb
inc
or
pop
cwtl
dec
mov
fs
pop
popf
aad
lea
jmp
fs
mov
adc
sub
dec
sbb
pop
lahf
ss
cmpl
aam
fnsave
out
xchg
sbb
jnp
sbb
int
xor
mov
fidivrs
rorb
inc
pop
jae
mov
popa
xchg
sub
mov
leave
mov
sti
inc
sub
scas
pop
loopne
mov
jnp
sub
fldt
mov
lods
aaa
sub
mov
fs
int
sub
lcall
jne
inc
mov
add
jmp
arpl
add
push
add
cmpsb
std
mov
mov
das
cmp
insb
push
mov
or
insl
dec
in
pop
lods
xchg
xor
jae
cmp
inc
cmp
cmpsb
pop
ret
fimuls
inc
or
jne
dec
xor
andb
lea
divl
add
and
cmp
popf
dec
loopne
mov
cmc
mov
add
std
jno
fisttpll
xlat
mov
mov
xor
int3
das
jle
jae
fisubl
inc
push
adc
xchg
push
fmuls
pop
int
push
fldcw
popf
repz
xor
jle
dec
jle
pop
sub
jp
sub
loope
or
decl
push
and
cltd
adc
inc
inc
xor
rolb
stc
xor
stos
pop
jmp
test
stos
push
imulb
scas
add
cmpsb
adc
inc
fiaddl
xor
into
xchg
sub
in
add
inc
fisttpl
xchg
push
xlat
dec
andb
pop
dec
fcompl
dec
or
push
sbb
lret
cltd
push
sub
int3
push
test
mov
jae,pn
fwait
xor
test
push
mov
stos
insl
sbb
inc
or
test
lods
mov
daa
pop
ficomps
daa
cmp
int
fimuls
ret
mov
loop
ret
std
fdivrp
push
mov
incl
cmp
fdivrs
mov
cmpsl
ds
imul
arpl
sub
rcl
gs
push
xchg
loop
cli
cmpsl
mov
mov
pushf
dec
mov
add
mov
sbb
mov
out
das
push
sbb
push
cs
jmp
inc
sbbl
mov
mov
mov
adc
imul
pop
sbb
or
inc
jg
aaa
outsb
pause
or
dec
cmp
subl
mov
mov
mov
ficomps
xchg
addb
movsb
mov
aas
cmp
aas
dec
xchg
cltd
add
fidivrs
dec
sbb
aad
push
out
jnp
lahf
scas
sub
push
cmovp
enter
cmp
mov
inc
cld
pop
cmc
add
jae
pop
ficompl
mov
and
inc
cmp
mov
aad
int
inc
dec
cwtl
mov
and
jg
cwtl
inc
fmul
jae
popf
les
pop
xor
and
aaa
pop
inc
inc
andnps
mov
dec
mov
add
and
je
or
push
fwait
jnp
pop
mov
cmpsb
jns
lahf
pop
sbb
nop/reserved
xor
data16
jbe
add
in
xor
push
or
lds
push
push
outsl
fldl
mov
mov
dec
push
mov
lock
and
mov
data16
subb
jns
fstl
pushf
xchg
sub
mov
xchg
inc
repnz
push
xor
xor
xor
data16
movsl
and
stc
xchg
imul
repz
adc
loopne
mov
sub
scas
sbb
xchg
stc
stos
ss
jae
in
cmpl
shll
push
test
dec
xchg
xchg
jne
pop
call
scas
jl
rcll
push
push
jbe
pusha
jp
fbld
push
cwtl
test
mov
push
lock
xchg
or
stc
or
pop
pop
orb
aad
push
push
and
pusha
mov
mov
ljmp
cltd
pop
mov
and
ret
xor
and
out
fldenv
xor
pop
sub
xor
xor
ja
testb
in
mov
dec
push
cmp
mov
cmpsl
stos
cmp
loopne
mov
mov
fbld
mov
xchg
cmp
aaa
fadd
fimull
dec
aaa
into
jp
std
and
aam
cltd
js
mov
sbb
pop
gs
jge
repz
lcall
lret
jle
mov
add
add
test
mov
push
jno
in
testl
and
icebp
into
int3
inc
pop
aaa
gs
outsb
cltd
sbbl
icebp
mov
pop
scas
mov
adc
scas
jno
lock
mov
ljmp
sbbl
adc
hlt
ret
jle
mov
pop
jmp
cmp
inc
imul
les
cwtl
sahf
mov
loopne
and
sub
lock
fs
stos
pushf
arpl
xchg
mov
sbb
lret
popa
jl
rclb
dec
popa
arpl
sbb
pusha
ss
adc
cwtl
leave
fcoms
test
lcall
xchg
fdiv
int3
add
fidivrl
dec
mov
cmp
mov
in
pop
imul
mov
mov
out
cld
mov
in
sahf
adc
xchg
dec
mov
movsb
add
add
frstor
or
sbb
rclb
pusha
mov
cmp
fstl
aam
out
popf
or
push
push
movsl
push
lea
mov
pop
fisubs
and
ja
lods
xor
dec
add
notl
xchg
movsb
loopne
mul
pop
out
xchg
jnp
aaa
add
sub
pop
pop
cwtl
adc
cmc
test
sub
fnstenv
dec
xchg
jp
cmp
push
mov
out
xor
and
or
stos
pop
je
aad
ds
shll
mov
out
xor
push
mov
xchg
pop
fmuls
jae
out
push
mov
jae
cmp
lock
adc
popa
or
es
push
lea
fldcw
cli
fisubs
sbb
mov
inc
outsl
push
jae
bswap
stos
pop
aaa
into
dec
fistl
mov
pop
push
les
lods
mov
imul
push
lock
xor
push
adc
sbbb
int
andb
mov
sub
push
movsb
dec
dec
mov
sub
xor
sub
sbb
inc
mov
repz
dec
fisttps
cltd
in
sahf
rolb
arpl
cmpsl
mov
test
mov
add
mov
dec
js
hlt
push
jae
loopne
aam
pop
mov
add
dec
fwait
bound
in
enter
mov
mov
aad
mov
push
adc
pop
faddl
xchg
pushf
lods
leave
push
fbld
push
push
inc
outsl
sub
nop
nop
insl
add
mov
sbb
push
inc
loop
movsl
cld
iret
dec
push
test
pop
adc
fwait
inc
scas
jns
cs
jp
int3
lock
jae
cwtl
and
and
sub
adc
and
call
dec
into
add
dec
xor
shlb
in
cli
dec
fildll
and
fwait
popa
notb
dec
jns
shlb
shll
xlat
jbe
xchg
das
rcrl
adc
xchg
push
fiadds
nop
sbb
lock
pop
test
lock
jo
mov
mov
fidivs
leave
sub
or
or
in
xor
out
daa
cwtl
mov
dec
adc
adc
xor
ljmp
or
arpl
sbb
jno
mov
and
mov
das
xor
xchg
sub
adc
and
movsl
orl
jnp
jge
xchg
xor
xor
mov
sbb
adc
movsl
stos
inc
jmp
jae
jbe
ds
out
jg
or
mov
push
mov
adc
jge
dec
sub
adc
jae
push
inc
mov
aad
clc
stos
out
lods
pop
xchg
out
jnp
jge
push
leave
pushf
mov
push
jb
lock
ljmp
icebp
popa
or
mov
add
sub
xchg
mov
pop
push
sarb
jge
orps
mov
xchg
out
xchg
mov
and
test
mov
push
or
add
fs
cmp
dec
jmp
dec
sti
xchg
mov
test
mov
lods
inc
in
out
decb
scas
fldl2e
lahf
mov
adc
insl
dec
daa
sbb
mov
mov
rcrb
push
cmp
loop
fistpll
addr16
lea
decb
pop
lcall
mov
xorl
pop
jns
jg
add
jge
insw
in
ja
aad
outsl
mov
jbe
loop
push
fwait
cmp
sub
test
push
ret
imul
in
pop
das
in
aas
out
in
jecxz
add
lods
add
orl
push
mov
daa
pop
jns
gs
ljmp
negl
jmp
icebp
sbb
add
ss
arpl
add
inc
mov
mov
jg
push
das
addr16
idivl
popf
xchg
pop
add
push
aas
cmpsb
sbb
ds
jp
out
lods
pop
insl
cmp
add
popf
xor
fisttpl
jne
inc
mov
cmp
lock
aad
xor
jg
popa
fcomp
icebp
lret
jb
jmp
shrb
aaa
pop
cmpsl
cmp
xchg
xor
mov
insb
call
sub
push
jmp
loope
rclb
pop
pop
out
ss
cld
loop
jbe
inc
mov
or
test
addr16
mov
jae
push
imul
mov
cbtw
iret
into
push
shld
out
sarb
adc
jmp
dec
xor
arpl
dec
jo
addr16
addl
fwait
repnz
mov
pop
adc
aas
dec
aaa
and
sahf
ja
pop
jbe
and
jl
mov
jb
push
out
jns
push
movsl
cmpsl
adc
add
dec
in
cwtl
add
scas
inc
and
and
xchg
mov
js
ret
and
jnp
sub
stos
in
push
enter
adc
push
xchg
movsb
cld
loopne
mov
cmpsl
les
push
out
icebp
dec
cwtl
dec
pop
inc
dec
xchg
add
fdivrl
xchg
out
pop
mov
inc
sbb
test
lock
inc
mov
xchg
imul
cmc
pop
jo
sbb
scas
jbe
fsubrl
push
jmp
test
jb
pop
ret
fadd
push
jne
mov
ja
pop
scas
fldl2t
loopne
cwtl
in
cmp
mov
jne
lock
jg
call
ja
xor
addb
es
insl
movsl
add
push
jno
dec
inc
pop
mov
frstor
mov
adc
push
sub
xlat
mov
outsb
adc
pop
lcall
std
cltd
push
xor
insb
and
sub
xchg
aas
mov
fwait
or
rcll
mov
mov
xor
flds
rcll
push
les
dec
pushl
xchg
adc
inc
mov
xor
dec
in
adc
notb
repz
inc
loope
lcall
in
jmp
gs
push
pop
imul
mov
mov
push
sub
jns
sub
rolb
fxch
cltd
test
xchg
mov
cmpsb
add
mov
fs
push
jbe
cmpsl
jbe
jge
and
and
or
push
imul
jge
hlt
cltd
xor
lods
inc
sub
pop
pop
push
xor
subl
sub
cwtl
test
sub
daa
das
sub
sub
xchg
xchg
scas
clc
fimuls
out
pop
sbb
pop
xchg
add
mov
lock
push
loope
repnz
outsb
int
push
jp
adc
lea
movsb
nop
cmpsb
jmp
mov
jo
or
push
jne
dec
aam
shll
mov
js
push
sub
push
test
dec
insl
cmp
insl
ds
and
sbb
and
sbb
repnz
or
stos
push
mov
sbb
mov
out
lock
in
in
sarb
add
push
cmc
aaa
loopne
fisubrs
test
xchg
aas
lcall
pop
xchg
stos
xchg
shlb
sub
mov
xlat
cmpsl
lcall
lret
xor
bound
push
outsl
pop
pop
stc
jg
fsubrp
js
scas
xchg
lods
addl
stos
loop
imul
pop
and
imul
divb
push
cli
sub
in
mov
xchg
fnsave
rclb
or
into
or
inc
adc
fsubrl
stc
js
test
xor
mov
mov
call
mov
mov
or
in
jno
xlat
aam
sub
clc
adc
jae
scas
call
out
cmp
push
mov
mov
cmp
fiaddl
ror
and
and
imul
lods
push
out
adc
mov
pop
imul
cwtl
negb
movsl
mov
in
fs
bound
into
aad
xchg
dec
std
sbb
cli
test
dec
pop
cmp
stc
popf
scas
xlat
data16
jno
lods
mov
pop
fiaddl
jb
ja
popf
add
mov
fs
int3
xor
and
loopne
cmpsb
lcall
aad
or
mov
pop
pop
aas
inc
into
jnp
out
mov
push
or
jns
cmp
xlat
cmp
xor
jo
xchg
call
mov
daa
addr16
pop
mov
or
aad
dec
dec
mov
lcall
call
and
xlat
mov
add
movsb
aam
enter
repnz
out
loope
rcrl
and
dec
dec
sbbb
shll
add
inc
fisttpll
mov
out
mov
repz
addr16
cmc
mov
scas
jp
sbb
mov
xchg
ret
cmc
cld
push
scas
hlt
outsb
aas
dec
fbstp
xor
imul
mov
aam
xchg
or
mov
cwtl
je
mov
lret
lcall
in
fcomip
stos
mov
push
jbe
shrb
xor
cmc
addr16
mov
fstpt
lds
jb
jbe
add
in
jno
arpl
shrb
les
push
ret
sub
mov
rcrl
xorl
faddl
jo
arpl
adc
call
or
push
pop
adc
loope
fwait
or
cmp
inc
inc
scas
push
pop
mov
push
movl
cltd
push
ds
add
andb
ret
xchg
sub
jecxz
ljmp
fstps
pushf
xor
cmp
ljmp
mov
mov
mov
insb
mov
scas
or
sub
enter
push
xor
ljmp
inc
loope
push
sbb
icebp
movsb
jo
loopne
jmp
test
fstps
mov
push
sub
sarb
cmp
mov
adc
mov
cli
jae
test
vpcmpeqd
in
in
cmc
lret
imul
and
mov
add
push
pop
sahf
jne
xchg
sahf
or
fdivrs
fisubrl
aam
out
lcall
push
mov
xor
js
ss
and
jne
stc
dec
pushf
pop
in
pop
sub
push
insb
add
pop
mov
call
sbb
lea
mov
in
xorl
stos
mov
xor
sbb
aaa
and
in
xchg
mov
adc
adc
rcl
cmp
cmp
cmp
jmp
leave
pop
push
les
ret
data16
push
pop
ds
nop
ja
ret
sarb
dec
in
or
ds
mov
or
push
mov
data16
enter
je
cld
insl
sbb
lahf
sbb
ret
popf
jecxz
dec
xchg
sarb
xchg
ficompl
inc
pop
jg
bound
add
inc
addr16
inc
xchg
int3
mov
sahf
rorb
lods
mov
ret
pop
jns
xchg
pop
negl
and
push
sub
sbb
scas
psrld
aad
sbb
dec
jmp
loop
in
paddb
lcall
in
mov
daa
push
in
in
or
nop
rorb
lcall
lock
cmp
mov
sub
test
fdivl
push
pop
fstps
test
pusha
inc
xchg
dec
shll
push
jne
pop
mov
cmp
outsl
jae
push
mov
and
push
out
pop
insl
ja
shrb
cmpl
dec
or
lahf
push
or
jecxz
scas
out
lret
aam
ret
stos
cmp
lret
sbb
fstl
push
test
mov
sbb
push
enter
sbb
sub
mov
add
pop
push
mov
xor
push
lods
mov
push
mov
movsb
cltd
sbb
mov
xchg
cwtl
je
lods
mov
pop
push
outsb
ljmp
sub
shrb
in
rclb
mov
insl
add
sbb
mov
cwtl
mov
aam
add
or
adc
idiv
xchg
sub
pop
add
sbb
fimull
les
int
cmpsl
mov
mov
stos
ds
leave
mov
aas
and
fldenv
call
testb
out
clc
mov
sub
and
fwait
pop
into
push
add
jb
frstor
mov
mov
gs
inc
and
in
out
negl
mov
xchg
clc
mov
daa
pop
sbb
cmp
xchg
mov
enter
fwait
in
jns
mov
adc
pop
roll
sbb
add
push
test
cmp
rcl
mov
adc
jmp
fmuls
mov
jge
dec
ljmp
lods
xor
push
jne
mov
mov
mov
dec
ficoml
subb
jmp
xchg
shrl
jl
pop
lret
cmp
icebp
jo
pop
adc
sbb
sbb
ljmp
dec
popa
xchg
nop
or
xchg
subl
push
xor
sbb
dec
push
orb
cmp
xor
adc
mov
into
xor
push
insl
inc
daa
nop
shll
iret
ja
pop
fistps
std
mov
or
or
push
lret
pop
mov
mov
xor
push
stc
nop
inc
pop
add
sub
jo
dec
pop
daa
lret
adc
lods
lock
pop
lcall
pop
and
inc
mov
in
add
lcall
test
or
add
es
fwait
fs
push
lods
xor
and
ss
xchg
sub
test
outsl
adc
mov
cltd
adc
pop
mov
into
push
movsb
xchg
sub
jns
mov
insl
lcall
nop
in
clc
sbb
outsb
das
lret
push
cmc
mov
int
adc
mov
push
mov
flds
xor
inc
pop
scas
jg
mov
or
mov
jp
cmp
xchg
inc
test
cmp
movsb
popa
mov
imul
jbe
jb
sub
xor
xchg
in
pusha
movzwl
xchg
movsl
aaa
sahf
lods
and
mov
and
jp
adc
or
repnz
mov
sub
roll
dec
xchg
mov
and
mov
adc
les
shl
jnp
cmp
or
and
sbb
imul
inc
cmpsl
stos
in
loope
adc
or
add
push
lods
fidivs
aas
dec
sub
mov
rclb
or
fisubs
imulb
sahf
scas
call
lock
jl
inc
mov
add
popa
push
popf
popa
xchg
jecxz
out
mov
push
jle
dec
sbb
sahf
pop
addr16
iret
inc
in
xchg
adc
pop
mov
xchg
outsb
sub
fnstenv
jecxz
jl
outsl
testl
ljmp
daa
sbbb
lds
push
shrl
fwait
cmpsl
mov
gs
pop
shrb
xchg
push
out
push
mov
orl
pop
and
push
icebp
and
cmpsl
mov
pop
imul
lods
iret
dec
and
comiss
or
arpl
pop
mov
mov
push
and
and
je
movsl
jle
mov
xor
jne
pop
pushf
jo
pushf
cmp
shlb
imul
adc
push
cli
push
mov
sub
rcll
aad
mov
mov
and
shr
imul
stos
subl
cmp
in
cmp
xchg
add
jbe
aam
dec
mov
ljmp
call
icebp
pop
inc
cmpsb
cmp
cltd
push
dec
mov
cltd
inc
mov
sahf
lods
and
je
jp
push
pushf
or
mov
popf
adc
cmp
test
and
mov
not
pop
in
or
xchg
add
push
cltd
je
out
sbb
lods
movsl
dec
xchg
inc
imul
movsl
cmp
repnz
pop
and
ret
das
adc
adc
and
and
leave
mov
mov
shr
push
add
inc
fidivl
loop
cmp
rorl
cs
rclb
test
cltd
mov
sbb
rolb
mov
adc
inc
sub
push
xchg
cmpsw
stos
ljmp
ljmp
mov
in
outsb
fwait
add
mov
cld
adc
rcr
add
pop
sahf
hlt
nop
push
sub
pop
dec
pop
les
cmp
sub
pop
xor
iret
lock
mov
or
pop
enter
imul
cmp
or
xchg
and
test
lcall
cwtl
fisubrl
popa
xchg
std
inc
cmp
mov
xlat
xchg
and
push
xor
lds
sbb
jle
and
and
int3
xchg
sti
adc
sub
xchg
lret
bound
xor
inc
and
dec
ljmp
mov
repnz
mov
and
lods
ljmp
inc
push
stc
pop
jbe
jne
test
loope
jg
or
stos
testl
aam
out
cltd
cmc
xor
xchg
mov
push
lret
fildll
adc
scas
lret
pop
cmpl
test
jecxz
fnsave
call
movsb
loope
push
nop
aas
loop
mov
xor
cs
inc
loope
and
icebp
xchg
test
push
fs
mov
xchg
sub
repz
hlt
jecxz
scas
inc
in
test
shlb
imul
sti
dec
out
ficompl
hlt
mov
add
xchg
jb
xabort
pop
jge
dec
mov
sub
sti
pop
bnd
lea
xchg
scas
inc
enter
xor
int3
sti
xchg
mov
loope
jge
cli
in
test
out
inc
fchs
xchg
aad
ret
add
xor
mov
into
cmp
shr
push
and
push
inc
dec
add
jb
fwait
xor
adc
mov
sub
enter
jg
enter
mov
jg
mov
cwtl
das
out
or
mov
and
add
jl
or
xchg
mov
jge
push
inc
pop
push
call
mov
lock
js
subl
jae
lahf
cmc
cli
xchg
sub
xor
fwait
int
int
jle
loope
jmp
pop
cmp
xchg
insl
xor
mov
xchg
mov
movsb
cmp
jo
xor
pop
stc
nop
imul
pushf
mov
pop
jecxz
pop
hlt
out
inc
jp
jb
jl
push
mov
lcall
ja
test
test
lret
sti
mov
mov
push
push
jns
inc
mov
fwait
sub
sti
xchg
mov
fwait
xor
sarl
cli
adc
gs
adc
inc
shlb
cwtl
and
imul
pop
repz
adc
jp
adc
clc
clc
insl
add
sbb
test
dec
mov
subl
fsub
xchg
montmul
cmpsb
ret
divl
sub
outsl
mov
ss
subb
mov
push
jmp
aam
nop
push
cmp
test
inc
nop
test
ret
pop
xchg
loop
or
push
jmp
mov
jb
sahf
cmpsl
dec
ss
fadds
out
and
xor
push
out
lods
inc
and
nop
xchg
xchg
inc
fcmovb
mov
scas
loop
test
fisttpll
pop
imul
mov
jl
mov
add
addr16
mov
inc
mov
push
in
adc
test
pop
or
in
repnz
sbb
xor
xchg
add
xor
and
data16
xor
aas
sbb
movsb
cmp
push
in
xor
movsb
cmp
or
ss
cmp
shll
jne
mov
cwtl
das
pop
xor
movsl
popa
push
cmc
mov
mov
sbb
pusha
or
addr16
in
pop
xor
mov
insl
test
popa
or
or
push
sub
pop
pop
cmp
xor
test
lret
fildll
or
icebp
mov
inc
fstpl
jg
scas
jnp
roll
jge
sub
popf
cmpsl
jg
push
scas
jbe
pop
cmpsl
jge
or
arpl
xchg
jbe
shll
jbe
pop
cmpsl
arpl
xchg
jne
jns
adcl
mov
sbbb
arpl
pop
xchg
arpl
subb
sbbl
xchg
bound
xchg
adcl
pop
xchg
arpl
lea
pop
cmc
xchg
arpl
pop
xchg
mov
cmpsl
mov
imul
add
jo
pushf
push
fistps
nop
xchg
sahf
push
fidivl
mov
xchg
xchg
pushf
xor
push
jp
mov
mov
into
cwtl
mov
int
cwtl
das
xchg
pop
sbb
mov
inc
fcmovne
bound
xchg
pop
push
fnstenv
bound
iret
xchg
pop
cmp
mov
aam
iret
outsl
pop
repz
pop
ss
mov
push
rclb
inc
xchg
jge
xchg
ret
stos
push
jmp
xchg
aad
xchg
push
lods
ret
stos
xor
fsts
dec
mov
jnp
mov
dec
loope
inc
dec
in
dec
mov
xor
fisttpll
xor
ja
cli
xchg
cmpsb
mov
xor
testb
cmpsb
xor
dec
and
jge
loop
fisubrl
dec
jecxz
dec
sahf
xor
ret
mov
ftst
push
cmpsb
cmp
xchg
out
leave
mov
rclb
xchg
sub
iret
mov
sbb
imul
mov
mov
mov
int
stos
inc
aam
push
lods
mov
inc
js
sbbb
test
mov
mov
and
nop
data16
les
cmpsl
jb
cmpsb
cmp
out
popl
push
jb
movsl
mov
outsl
data16
popf
and
mov
rcr
adc
push
test
test
rclb
mov
mov
jbe
inc
cmpsl
adc
lcall
das
enter
mov
jge
lods
insb
add
xchg
mov
mov
dec
xor
jnp
add
push
mov
mov
cmp
cs
xchg
cs
lds
int3
arpl
jno
push
movsb
or
shrb
dec
mov
jle
out
jmp
jge
mov
sbbb
in
push
jmp
mov
jg
push
scas
out
stos
inc
pop
jne
aam
add
xchg
xor
sub
jns
mov
add
hlt
cmp
pop
cmpsb
out
stos
push
jge
jo
or
ja
outsb
xchg
cs
call
repz
push
or
out
add
xor
imul
and
fs
jae
jne
pop
stos
or
repnz
adcb
sub
fsubs
ret
mov
sbbb
xor
xor
xchg
fidivs
adc
jl
sub
inc
fdivrs
je
je
inc
fisubs
stc
fistpll
sbbl
inc
push
mov
mov
jno
stos
aad
loopne
outsb
add
xor
add
xchg
jns
aam
fs
daa
clc
addr16
sub
push
mov
adc
movsl
push
in
out
cwtl
scas
and
test
dec
cmpsl
mov
lret
pop
into
jmp
lcall
aad
and
adcb
mov
push
into
loop
arpl
icebp
or
sub
jns
jp
ret
pop
enter
into
jmp
jecxz
daa
inc
ljmp
xchg
push
popf
les
into
gs
iret
out
xor
push
push
and
mov
ficompl
or
dec
bound
mov
pop
xor
dec
popa
mov
xchg
lods
mov
or
xor
push
sub
cltd
pop
js
fisubrl
lret
add
sub
add
and
xchg
inc
fsubs
ret
fwait
xor
rclb
add
and
arpl
adc
jo
dec
movsl
add
aam
hlt
std
pop
repnz
repz
repz
fcmove
pusha
or
xchg
das
push
mov
xchg
and
je
or
call
pusha
cmc
lods
inc
daa
xorb
mov
cvtpi2ps
insl
and
inc
hlt
dec
data16
jo
sub
pop
aad
fiadds
mov
xchg
adc
ja
mov
cltd
orl
jecxz
insb
popf
insl
mov
sub
jbe
arpl
fs
dec
shlb
mov
aam
sahf
leave
or
ficoms
mov
out
push
xchg
adc
sahf
pop
mulb
xchg
pushl
adc
push
mov
push
cs
loope
bound
imul
mov
push
jns
jl
jbe
imul
andb
stos
sahf
je
shl
nop
mov
repnz
nop
mov
jmp
int
mov
aad
add
mov
or
loope
xchg
mov
dec
lgdtl
movsl
popa
inc
inc
jmp
jns
outsl
pop
lahf
dec
jge
inc
dec
inc
jge
push
and
inc
sbbb
cmp
inc
mov
fwait
inc
fmul
xchg
pusha
mov
lret
mov
and
imulb
lret
arpl
jmp
fdivp
lea
andb
push
aaa
mov
jmp
xchg
lahf
and
decl
sahf
adc
sbb
loop
mov
fstpt
inc
and
rolb
dec
les
xchg
xor
adc
add
xchg
repnz
daa
mov
jo
xorl
pop
mov
imul
movsb
bound
lea
lods
sti
ss
ret
xchg
jno
mov
xchg
or
dec
jno
or
ja
cmp
in
sbb
jg
mov
mov
dec
pushf
pop
subl
jle
sbb
jg
cld
sub
xor
subl
pop
idivl
jmp
jge
aas
call
jl
xor
stos
dec
mov
shll
mov
fisttpll
cli
fwait
ds
pop
inc
mov
out
call
test
or
popa
movsl
in
cmp
icebp
cmp
cmpsb
lea
out
xchg
adc
and
stos
jge
cmpsl
sti
push
add
cwtl
scas
inc
mov
add
inc
lcall
and
icebp
xchg
scas
into
gs
int
mov
sbb
mov
jg
push
repz
or
push
scas
loope
iret
adc
ret
cmp
jne
sarb
lock
je
testb
xorps
sbb
cmpsb
cmc
sub
mov
loopne
sub
cmp
jecxz
iret
push
pop
test
mov
mov
sub
fmuls
adc
call
std
pop
push
adc
adc
lcall
arpl
out
mov
mov
xchg
arpl
mov
push
xlat
dec
mov
mov
popf
mov
mov
inc
in
lret
out
mov
js
lods
dec
mov
inc
enter
dec
jge
sbb
mov
loop
outsl
popf
mov
enter
jp
mov
rcrl
sbb
movsb
jg
fwait
psraw
xchg
movsl
outsb
sub
and
sub
jnp
aaa
pop
repnz
pop
cmpl
mov
adc
xchg
stos
pop
push
xchg
dec
sbb
mov
cmp
mov
push
and
jge
inc
fmull
push
xor
dec
je
ret
outsb
sarb
inc
dec
ds
pop
fsts
xor
stc
mov
lds
lods
sbb
pop
imul
jle
loope
xchg
sub
push
jnp
mov
xchg
nop
cld
scas
inc
sbb
cltd
mov
mov
xchg
aas
lea
pop
mov
adc
out
cmp
add
sbb
daa
mov
lea
ficoml
xchg
mov
lock
shlb
ljmp
ret
cmp
mov
and
xchg
scas
inc
cmpsb
cld
sbb
iret
jg
dec
shrl
popf
jp
adc
mov
fcompl
inc
and
xor
sbb
xchg
test
add
fwait
or
rolb
sti
xor
inc
mov
pusha
push
dec
call
out
test
inc
push
xor
push
mov
popf
adc
or
mov
sbb
in
and
xor
cs
inc
ficompl
mov
mov
and
js
push
xchg
xchg
jae
pop
dec
je
jno
inc
mov
push
dec
xchg
dec
inc
push
pusha
pop
push
pop
xor
nop
sub
or
jae
xchg
jnp
dec
jae
pop
fldenv
movb
xchg
hlt
mov
cltd
xor
xchg
data16
hlt
or
add
sbb
mov
loop,pn
outsb
fisttpl
add
dec
xor
push
insb
xlat
outsb
push
inc
push
cmovno
ja
inc
add
pop
jno
mov
and
adcb
arpl
fisubrl
shlb
incl
ret
rorb
rolb
push
out
mov
in
add
int3
pusha
dec
and
mov
or
pop
xchg
sbb
rcrl
xor
out
xchg
aad
jge
scas
inc
aad
in
fmuls
jl
fstl
stos
arpl
stc
arpl
jo
xchg
daa
adc
jae
jle
inc
inc
adc
pop
data16
dec
adc
sub
subl
jo
jl
scas
and
aas
ljmp
es
shrl
je
adc
jnp
and
mov
lcall
das
add
jg
outsb
xor
lock
push
dec
mov
xchg
sub
test
xor
jecxz
push
cmp
push
ret
xor
sarl
mov
es
mov
add
inc
or
cmp
adcb
inc
push
inc
push
lret
lods
jne
and
cld
pop
or
sbb
lret
sub
mov
xor
sbb
stc
test
push
and
mov
out
pop
scas
mov
loope
stos
fsubrs
cmp
ret
mov
loopne
stos
mov
add
jmp
sbb
cmc
push
pushl
adc
sbb
subl
pop
es
mov
pop
test
mov
fsubr
jg
pop
add
stos
dec
ret
cmp
int
xlat
dec
arpl
fdivl
sub
or
fwait
jg
cmp
xchg
xchg
push
pop
add
imul
adc
inc
mov
pop
rorb
or
dec
push
lcall
outsl
mov
movsl
mov
idivl
leave
pop
loope
por
std
leave
test
mov
ds
jg
decb
aaa
scas
scas
dec
mov
mov
sarl
cs
jl
cld
sub
or
shll
lds
cwtl
xchg
xchg
lds
rcll
imul
hlt
jg
mov
iret
inc
test
out
jno
mov
mov
aam
xchg
push
mov
add
dec
sahf
idivl
pop
aas
mov
mov
pop
movsl
pusha
jno
insl
cltd
cmp
mov
cwtl
data16
inc
or
fs
dec
pop
iret
inc
pusha
aas
jae
mov
gs
pop
push
lret
test
mov
js
sub
mov
adc
lods
callw
fbld
xchg
cmpsb
ja
repz
test
fwait
sbb
mov
push
dec
lahf
push
stos
inc
stos
add
lods
arpl
push
enter
imul
cwtl
inc
stos
adc
xor
mov
inc
fisttpll
pop
iret
enter
aas
into
sub
in
xchg
jecxz
lds
roll
push
ss
and
push
lea
sub
jl
testl
or
and
pop
pop
push
adc
repz
and
jbe
push
push
lret
shll
add
mov
push
mov
fxch
pop
testb
or
iret
and
jmp
ret
dec
xlat
iret
cmp
std
mov
sbb
ret
sub
ds
aam
cmp
and
sbb
adc
sub
iret
scas
xchg
in
sbb
imul
cmp
jns
and
icebp
xor
adc
rorb
sbb
imull
in
and
jmp
lods
sbb
sbb
ljmp
or
mov
sbb
call
or
enter
dec
loop
cmp
sub
or
mov
adc
cmpsb
popf
lret
dec
rcl
mov
sbb
jns
cli
addb
stos
imul
or
push
jbe
and
push
inc
popf
das
jnp
bound
mov
les
or
les
sbb
loop
xchg
mov
and
adc
ljmp
add
sub
pop
cmp
in
pop
int
mov
mov
das
xchg
xchg
std
jp
les
arpl
mov
lahf
pcmpeqd
mov
xor
fidivl
cmpl
push
cltd
xchg
push
or
test
hlt
inc
fisttpl
mov
stos
xchg
nop
sub
cmc
daa
mov
leave
cmp
int3
push
aad
push
pop
rorb
mov
pop
dec
or
movsl
push
pop
sbb
arpl
nop
pop
sahf
ds
sub
jmp
push
shrb
enter
push
mov
mov
icebp
mov
sti
and
xchg
mov
fwait
insb
fwait
or
subl
inc
hlt
sbb
out
fsubrs
enter
mov
aad
mov
ret
sub
cli
lahf
cs
inc
mov
ret
jae
mov
adc
lea
pop
lds
lahf
pop
fistps
jo
aam
aas
mov
sbb
xchg
ss
lret
pop
std
xchg
xor
test
inc
mov
and
jne
jns
pop
repnz
je
hlt
dec
nop
daa
jmp
dec
inc
xlat
pop
xchg
adc
add
xor
std
cmovbe
inc
pop
popf
adc
arpl
sti
lea
hlt
mov
inc
shrb
cmp
xchg
andb
sbb
mov
sbb
aam
or
jae
loop
lock
sub
sbb
sub
xlat
outsb
push
shll
je
sub
adc
loopne
scas
or
in
iret
lds
push
sbb
test
add
lds
sbb
mov
in
shrl
in
mov
cmp
or
cmp
rclb
mov
xchg
jg
add
sbb
push
jne
dec
and
pop
gs
sarb
xchg
dec
filds
push
imul
adc
inc
lea
imul
mov
pop
fidivrl
push
pop
pop
icebp
sti
jb
cmp
sub
incb
aaa
popa
rolb
inc
fnstenv
or
stc
popf
andl
scas
outsb
ret
sub
loopne
mov
mov
aas
clc
mov
iret
je
lods
inc
movsl
mov
pop
xor
jnp
inc
dec
outsl
jl
push
mov
fldt
daa
lea
roll
cs
shrl
cs
popf
pop
pop
mov
push
xor
test
mov
out
or
inc
dec
loop
add
inc
cltd
xchg
aaa
in
hlt
push
lods
jg
mov
mov
shlb
and
cmc
outsb
iret
mov
sbb
loope
in
mov
stc
or
ret
push
cmpsb
shr
es
arpl
mov
mov
stos
in
jb
mov
pop
add
sbb
mov
sbb
inc
and
inc
or
fs
mov
mov
jmp
pop
fidivrl
in
and
call
outsb
les
mov
ret
push
dec
mov
ret
les
jecxz
or
faddl
sub
nop
push
sub
fs
push
std
js
int3
arpl
cltd
adc
adc
flds
mov
in
inc
adc
imull
sbb
xchg
cmpsl
arpl
stc
mov
in
sbb
stos
imul
mov
jmp
or
dec
xchg
sub
or
adc
add
xor
and
dec
inc
mov
inc
lret
arpl
sub
test
push
sbb
xchg
pop
adc
mov
sbb
or
sbb
nop
pop
sub
mov
inc
andl
ss
mov
hlt
pop
arpl
or
sbb
push
pop
jmp
or
loop
jb
add
sbb
cmp
cwtl
inc
leave
sub
loopne
and
daa
fistl
jno
loope
je
jno
dec
movlps
pop
jno
sub
mov
xchg
aaa
out
push
mov
insb
add
cwtl
ret
cs
xchg
enter
sbb
jb
jle
cmp
xchg
xchg
push
je
mov
dec
push
fxch
jle
int3
push
leave
xor
shll
mov
hlt
pop
jmp
jns
mov
mov
dec
mov
ljmp
sbb
lret
popf
sti
push
and
pusha
ss
test
lea
jmp
fwait
iret
mov
push
fists
jmp
mov
mov
ficompl
fimull
mov
and
jg
add
les
cmp
lahf
mov
movl
out
leave
cmp
aaa
cmp
mov
icebp
and
mov
xchg
fstpl
push
lods
cmp
test
mulb
aaa
mov
fwait
xor
xlat
out
aad
jmp
cli
xchg
push
addb
ds
jo
addr16
add
mov
mov
lods
cmp
add
pop
addl
test
xor
aad
pop
rcl
fisubs
mov
push
pop
icebp
clc
jb
and
rorb
sub
mov
lds
sbb
fdivrl
rcll
inc
in
xor
mov
sarl
loop
inc
mov
push
cwtl
xchg
xchg
pop
into
sub
jo
jne
inc
int3
push
xchg
mov
sub
inc
fsubrl
fwait
xchg
mov
add
jnp
add
popf
popa
and
or
dec
xchg
xchg
jl
sub
inc
push
mov
push
push
enter
insb
add
outsb
cmpsl
jnp
sbb
jbe
pop
lcall
and
adc
sarb
cmp
mov
popf
or
fistl
sub
inc
mov
lods
outsl
mul
mov
pop
out
cltd
xor
or
and
mov
hlt
pop
into
sahf
fisubs
sbb
call
sbbl
xchg
inc
push
mov
jbe
inc
dec
cmp
add
cmp
push
ja
jae
insb
inc
fs
push
cmp
mov
fmull
test
aas
fistpll
aaa
pop
ljmp
ret
sub
sbb
inc
adc
addl
popf
mov
lock
aam
pop
fidivs
or
mov
adc
xchg
insl
cwtl
aam
jmp
ret
imul
mov
xor
sbb
mov
aas
bound
bound
cwtl
fs
push
mov
cmpsb
cmp
lods
sysexit
mov
mov
pop
iret
xchg
mov
mov
ja
ret
adc
ret
ds
std
or
jecxz
ficoml
add
cwtl
adc
and
hlt
loop
mov
std
add
ljmp
xor
inc
inc
mov
cmc
jns
or
xor
pop
push
xchg
jbe
inc
mov
bound
nop
daa
fs
xchg
jge
xchg
adc
dec
mov
xor
push
adc
jmp
test
daa
fldenv
dec
jecxz
andl
daa
ljmp
or
add
js
rclb
push
lret
mov
inc
ret
dec
in
push
push
ds
dec
sub
push
nop
jnp
sub
push
pushf
cmpb
cld
pop
jb
jp
dec
or
out
clc
xor
add
inc
lret
cmp
or
stc
das
jno
cmp
cs
lret
bound
or
mov
push
pop
adc
dec
pop
mov
cltd
sbb
pop
inc
cmp
in
jle
dec
pop
xor
jmp
dec
mov
cmp
jno
and
popf
xchg
or
mov
sbb
pop
test
stc
xor
lock
dec
vcvtdq2pd
loop
lea
mov
cld
and
test
or
sbb
pop
insl
pushl
dec
pusha
push
popf
push
mov
and
push
int3
es
arpl
imul
repnz
xor
xchg
test
inc
sbb
loop
out
leave
jle
cmc
sti
xchg
lret
dec
mov
cmpl
das
jo
jns
sbb
push
cmp
mov
fwait
mov
les
in
xor
push
cmp
dec
stos
jle
out
add
add
shld
add
jne
sti
xchg
pop
ficoms
push
sbb
out
dec
mov
add
pusha
imul
xchg
pop
lds
repz
repz
fadds
mov
lret
je
mov
xchg
xor
arpl
push
mov
inc
or
xchg
cmp
fs
jge
xor
cltd
xor
out
xor
inc
push
or
jmp
cmp
fiadds
out
cmp
into
lar
pushf
fnstenv
or
incl
sub
sbbb
pop
push
sub
xchg
ret
or
std
sub
mov
xor
and
sbb
jno
stc
addr16
pop
xchg
adc
sbb
pushf
cmpl
jg
lods
popf
dec
lds
cli
pop
lock
pop
aam
lods
or
loop
lea
adc
sbbb
dec
and
imul
pop
mov
das
pusha
xor
subb
jno
icebp
push
push
mov
andl
mov
jne
and
cmpsl
pusha
cmp
out
xorb
push
adc
jg
dec
testl
sbb
and
xor
and
fucomip
das
lock
aam
test
rorl
push
rorl
cmpsb
mov
cli
in
es
sbb
or
xchg
fnsave
inc
shrl
add
and
rcrb
sub
cli
mov
jnp
jae
orl
add
cmp
push
mov
dec
scas
addb
mov
clc
cltd
xlat
sbb
jo
pop
mov
or
sbb
fwait
movsb
jp
mov
lds
xor
mov
rolb
push
scas
lods
mov
xor
out
and
adc
loopne
sbb
sbb
stc
cmc
xor
sarb
jge
mov
divb
mov
mov
mov
negl
out
pop
push
cmpsb
stos
aas
icebp
sub
cmp
jecxz
pop
scas
mov
ret
loop
adc
xor
cli
push
ljmp
push
mov
mov
outsl
fwait
repz
sub
jmp
and
fsubl
faddp
stc
dec
in
push
out
add
ss
aam
add
int3
and
test
rorl
adc
mov
out
and
xchg
bound
xchg
mov
mov
gs
test
cltd
addr16
pushf
dec
mov
lret
into
xor
cmpsb
mov
xchg
adc
adc
call
push
cmp
imul
inc
xor
data16
xchg
jp
pusha
push
adc
enter
inc
jmp
lods
xchg
imul
dec
loopne
test
sbb
mov
into
aam
cmc
dec
pop
rclb
sti
rcrl
mov
xlat
loope
jno
insl
mov
adc
and
adc
das
stos
mov
sub
int
rcl
and
jmp
clc
mov
mov
popf
shrl
rcrb
mov
sbb
adc
pusha
and
pushf
mov
bnd
imul
adc
and
cmc
mov
imul
xor
stc
jecxz
sbb
mov
imull
or
outsb
add
es
popf
dec
jbe
je
insl
and
xor
mov
in
sub
jg
sbb
js
inc
leave
cmp
lret
push
xorl
ss
shlb
xchg
jecxz
int3
inc
xchg
enter
enter
ret
cmp
xor
or
cmp
inc
push
cld
push
ds
jne
mov
xor
out
jecxz
cli
add
inc
lahf
xor
lock
jae
mov
js
call
mov
pop
out
in
xchg
nop
mov
repnz
sbb
jge
outsb
xchg
xchg
xor
test
jle
pushf
or
cmp
dec
mov
data16
lea
inc
jae
pop
enter
mov
push
lods
dec
sbb
addl
jle
ret
test
push
mov
push
test
rorb
cs
fildl
sbb
cmpsl
or
shrl
rcrl
add
jp
push
mov
sub
push
lret
cld
das
aam
popa
sbb
repnz
adc
cmc
daa
lds
lds
dec
jecxz
push
push
std
mov
mov
push
or
cmpsl
mov
lds
lds
in
mov
xor
mov
ficoml
or
insl
add
dec
cld
xchg
cmp
mov
das
pop
sbb
subb
nop
adc
ss
scas
addr16
adc
mov
fimull
int3
mov
ret
pop
sub
pop
adc
cwtl
xorb
mov
lods
inc
mov
leavew
pusha
cwtl
pop
repz
scas
push
call
cmp
lock
xor
fwait
xor
push
inc
faddl
movsb
sbbl
mov
cmp
loopne
and
mov
inc
addr16
fnsave
dec
mov
cmp
into
jg
pop
mov
testl
ss
push
int3
ret
pop
incb
lahf
xor
loop
aas
out
xor
popa
rcl
cmp
pop
pop
jg
int3
mov
out
cltd
das
testl
jecxz
inc
jle
add
sbb
xlat
dec
dec
xchg
add
mov
dec
insb
ret
push
scas
rorb
mov
cld
add
lret
add
aam
pop
addr16
mov
insl
bound
mov
or
movsl
enter
in
inc
push
sbb
rorl
mov
xor
divb
test
pop
add
cmp
cld
push
std
imul
test
jne
ljmp
popa
and
sub
add
xchg
jo
adc
jecxz
lea
inc
test
and
mov
js
mov
xchg
pop
xchg
test
mov
jne
stos
sub
sbb
shll
stc
pop
jle
pushf
push
xchg
shlb
push
and
and
js
sub
das
jae
frstor
dec
movsb
out
dec
mov
jno
fwait
xchg
sub
sbb
int3
add
jmp
dec
inc
push
jge
mov
imul
call
xchg
scas
outsb
xchg
or
scas
cmp
push
add
rclb
mov
inc
pop
lret
daa
push
cs
cmp
inc
mov
jle
nop
lret
pop
jns
fcoms
inc
js
mov
lret
hlt
adc
inc
inc
dec
or
ret
ret
es
mov
cmp
loop
pop
sub
fsubr
mov
loop
jmp
dec
add
add
mov
aam
pop
xor
push
mov
sti
outsl
aaa
jne
in
shl
roll
test
mov
or
xor
mov
cmp
enter
or
cmp
push
push
and
movb
sbb
gs
inc
push
daa
cld
test
mov
dec
scas
cltd
fsubs
decl
push
sub
call
enter
cmp
mov
mov
sub
add
jle
hlt
cmp
lret
sbb
out
dec
decl
ljmp
inc
mov
mov
mov
jp
sub
aad
add
pushf
or
es
sub
lods
lret
loop
in
test
pop
jle
dec
or
sarl
or
dec
sbb
fmuls
cs
lahf
out
pop
flds
fdivs
jp
std
imul
jb
or
mov
jne
push
pop
mov
xchg
clc
daa
mov
movsb
mov
cwtl
sti
inc
fs
ss
shrl
fsubrs
mov
pop
shl
mov
dec
in
push
icebp
mov
adcb
out
mov
push
lret
add
cli
jecxz
jb
movsl
add
mov
loope
shll
pop
lock
cmp
mov
rcrl
dec
fbld
push
fbstp
dec
dec
or
sarl
cmpsb
out
sbb
popf
fldl
aad
or
je
jl
cmp
push
inc
and
mov
inc
or
sub
lcall
pop
sub
rolb
push
addr16
pop
or
add
xchg
fs
scas
pop
mov
popa
sub
push
add
dec
pop
mov
pop
push
shrl
xor
bound
cltd
jae
aaa
mov
mov
inc
rorl
xor
es
into
jnp
mov
fildll
adc
and
and
movsl
sub
xor
out
dec
xor
xor
fldl
test
cmpsb
xchg
mov
jns
flds
or
cltd
mov
adc
aaa
inc
movsl
sub
sub
aad
cmp
mov
inc
roll
stc
or
push
and
mov
inc
jb
stos
xchg
or
adc
or
pop
inc
out
mov
sbb
push
imull
stos
or
cwtl
cmp
push
push
dec
addb
sub
mov
scas
sub
cmp
call
pop
mov
mov
xchg
sub
dec
push
mov
xor
iret
xchg
in
xchg
cmp
testl
scas
fstl
cmc
orb
push
pop
aad
add
mov
mov
push
into
xchg
loope,pt
add
lods
std
pusha
push
fucom
insl
jae
jnp
pop
push
flds
insl
xlat
jp
adc
adc
insl
test
mov
rcl
jl
mov
aam
dec
mov
leave
mov
stos
inc
or
fwait
inc
or
pop
push
sub
inc
mov
lret
loope
and
inc
aam
lret
add
andb
lahf
js
mov
mov
jge
dec
mov
sbb
and
mov
adcb
iret
test
xchg
cmp
jge
insb
cwtl
out
jnp
inc
test
rcr
push
dec
push
push
aas
inc
inc
adc
sub
cmpb
mov
jae
sbb
inc
cmc
fs
dec
dec
push
mov
cmpsb
dec
or
pop
and
jmp
pusha
ret
insb
in
sbb
addl
inc
push
mov
cmpsl
sarl
arpl
dec
cld
inc
inc
adc
out
sti
test
popf
mov
cmpsb
fdivrs
fnstenv
outsl
sbb
jnp
cmp
mov
cwtl
cmp
and
je
jp
or
mov
icebp
inc
mov
inc
mov
cwtl
mov
mov
sbb
pushf
push
rolb
push
and
xor
sbb
xchg
out
cltd
fsubrp
addr16
sbb
lods
aam
cs
mov
jg
lret
dec
mov
in
outsb
xchg
fdivr
pop
push
lret
andps
jl
push
daa
mov
mov
adc
add
aad
or
std
nop
loopne
in
int
imul
pop
stc
popf
std
int
dec
ret
push
jne
notb
shlb
adc
dec
repnz
jmp
pop
rcll
int3
dec
push
or
jno
call
not
andb
ljmp
mov
mov
test
jge
and
insl
ljmp
cmp
lods
cmp
ljmp
std
pop
adc
insl
ljmp
mov
fwait
mov
movsb
push
mov
adc
jb
dec
cmp
nop
xchg
aas
xchg
adc
cmp
or
sahf
cmp
mov
mov
lret
mov
rclb
dec
icebp
mov
mov
jnp
jmp
cli
dec
or
aad
pusha
repnz
cmovp
and
cmp
outsl
in
test
insb
jmp
loop
lock
scas
sub
in
test
mov
subl
jae
jmp
cmpsb
pop
lea
mov
int3
mov
add
fdivrl
cmp
insl
jmp
daa
rorb
test
popf
cmp
fcmovne
mov
scas
lods
sub
ret
insl
jmp
movsl
mov
in
jmp
inc
sbb
dec
int3
xchg
test
movsl
sbb
dec
adc
dec
push
xchg
ret
cltd
adc
lret
mov
pop
mov
adc
add
out
popa
lahf
inc
mov
mov
lahf
out
dec
fldl
pop
xlat
cs
mov
repz
jns
inc
jecxz
cmc
rclb
iret
shlb
adc
imul
repnz
outsl
adc
std
jg
and
inc
adc
lods
rcrb
aas
popa
sti
stc
jmp
cld
mov
scas
and
fidivrl
xor
pop
fiaddl
jae
loopne
cmp
jno
jmp
pop
adc
cmpsl
lods
shll
mov
pand
jmp
pusha
or
push
pop
jp
xchg
imul
popf
jp
inc
ss
fcoml
test
fs
adc
adc
loopnew
push
cld
jg
ljmp
push
fadds
pop
lret
dec
adc
mov
xchg
sbb
std
pusha
xchg
dec
imul
out
push
test
mov
xchg
fwait
cmc
pop
cltd
dec
cli
data16
jecxz
add
arpl
fiadds
sbb
test
int
mov
mov
ds
jb
decb
nop
and
leave
mov
pop
xchg
inc
or
cmp
pop
arpl
cmp
aam
xchg
xor
fimull
xorb
popf
inc
jle
push
stc
and
mov
push
jb
mov
mov
jl
incl
ds
out
test
sub
test
adc
push
mov
fwait
xchg
vmulps
mov
aaa
movsb
fwait
sub
sub
and
ljmp
mov
mov
stos
sub
and
mov
movsl
xchg
inc
jecxz
adc
das
cli
dec
loopne
sbb
lret
icebp
fists
fdivrs
add
adcl
mov
mov
mov
icebp
popa
pop
shr
outsb
insl
test
cmpsb
ja
leave
sarb
sbb
pop
ret
fwait
ds
pop
clc
inc
stos
test
hlt
adc
jbe
dec
bswap
clc
pop
jns
sti
out
mov
mov
inc
dec
addr16
jecxz
push
popf
cmp
sub
cmc
data16
dec
mov
mov
mov
repnz
jge
fsubs
xchg
pop
push
push
int
fidivrl
dec
loope
fiaddl
lcall
sbb
jns
push
aad
imul
inc
insb
repz
ret
mov
test
js
and
sarl
aaa
push
rcll
pop
mov
push
sti
cmpsl
add
mov
test
lds
iret
data16
rcrl
xchg
jnp
dec
adc
outsl
cmpsb
sub
cmc
dec
adc
sbb
stc
adc
dec
fwait
dec
jge
pop
les
push
xchg
jle
cmpsl
xchg
js
mov
gs
cmc
je
js
in
sub
xchg
ds
dec
pop
or
mov
or
mov
stos
pop
jb
add
pop
sahf
inc
lods
cli
repz
repz
lds
popa
scas
scas
das
or
inc
or
pop
inc
or
mov
popf
cmp
dec
mov
stc
sub
lahf
ss
lea
in
mov
jne
aam
frstor
add
loop
es
ret
push
bound
mov
mov
lcall
imul
lcall
dec
push
fldl
mov
mov
dec
adc
sub
jne
out
imul
adc
inc
scas
inc
out
xchg
cli
arpl
sbb
jae
mov
lock
pop
repnz
cmp
out
jo
out
push
clc
mov
sub
adc
jae
xor
push
dec
sub
mov
sub
aam
and
sbb
fnstenv
cmpsb
sub
push
push
das
xor
rcrl
popf
cmp
iret
mov
sbb
shl
push
cmp
push
mov
fs
mov
xor
ss
out
xor
sbb
lret
xchg
adcb
pop
add
cmpsl
xor
mov
jne
insb
call
push
or
stos
mov
push
jg
inc
adc
popa
sbb
cwtl
mov
fs
jl
cmp
iret
xchg
ljmp
aaa
pop
cmp
jno
dec
adc
bound
xchg
sub
lock
pop
cmp
into
rorl
aad
push
orb
push
decb
fsts
mov
daa
cmp
loopne
movb
sub
inc
inc
insb
repnz
dec
int3
xchg
fcmovbe
repz
repnz
fmuls
and
and
int3
mov
xlat
xchg
inc
scas
inc
roll
cmp
mov
mov
and
rcrl
mulb
jl
in
imul
fcmove
les
lahf
outsl
sbb
in
jae
dec
in
fnstsw
stc
sub
sbbb
sbb
lds
lods
pop
popf
out
pop
mov
cwtl
jmp
std
mov
fadd
outsb
jns
stc
adc
ja
out
xor
cmp
es
les
scas
sub
pop
push
jae
sub
push
insb
add
ja
cs
adc
xor
dec
repz
jp
ss
shll
mov
mov
adc
ret
dec
jmp
cltd
xor
iret
pop
jno
mov
nop
ja
lahf
pop
loopne
imul
fstps
jb
cmp
ljmp
or
mov
xchg
fidivrl
mov
jae
mov
ss
lcall
cltd
jle
mov
sarl
xor
cmp
push
imull
jns
cmpsl
cmpsl
xor
xchg
and
pop
dec
cmp
or
push
fnstcw
fisttpl
js
or
test
mov
test
cwtl
stos
sub
leave
jnp
or
jle
daa
mov
add
ds
aas
movsb
adc
dec
push
stc
fs
jbe
jns
lret
sub
pop
sarl
loopne
iret
lcall
hlt
popa
inc
adc
fst
orb
loopne
xchg
jo
ljmp
xchg
es
in
test
inc
test
insl
adc
fsubr
jge
mov
stc
sbb
cmp
lcall
sbb
xor
insl
fsubrl
fldenv
mov
sbb
movsl
ds
cmp
add
jecxz
hlt
dec
push
ret
dec
or
xchg
inc
ljmp
loope
jecxz
adc
leave
js
sub
xor
ljmp
adc
in
push
add
repnz
test
rolb
inc
aam
xchg
pop
lcall
in
jo
in
sub
fsincos
xor
cmp
xchg
sub
cwtl
das
jl
dec
movntq
lds
popf
inc
lcall
jle
bound
inc
pop
iret
xchg
cmp
das
mov
sbb
mov
pop
sbb
adc
xchg
cmp
scas
das
arpl
popf
xchg
mov
sub
insb
adc
jge
jbe
inc
fnstcw
pop
and
mov
lds
ret
nop
cltd
adc
fwait
js
data16
and
pop
jg
add
sbb
ljmp
lahf
cmp
notl
and
inc
mov
aam
aam
nop
scas
sub
frstpm(287
jne
and
dec
mov
lea
xchg
data16
ss
mov
sub
arpl
pop
fidivs
sub
lock
test
stos
mov
movsb
and
or
cmp
in
inc
and
cmpsl
bound
scas
imul
lds
rorb
negl
fwait
dec
adc
movsl
hlt
push
mov
mov
xor
mov
adc
xchg
jbe
cmpsb
sub
inc
adc
fstpt
cwtl
pop
or
out
call
popa
loopne
push
incl
add
nop
pop
xor
mov
arpl
repnz
sarl
in
fistpll
xchg
cmp
outsl
xchg
aaa
adc
testl
pop
push
inc
fsubs
sbb
rorl
and
add
fistl
ljmp
outsb
mul
insb
push
jge
mov
inc
xchg
cwtl
dec
adc
dec
cmp
sub
adc
enter
xchg
jae
hlt
pop
cmpsb
mov
mov
cmp
jl
and
outsl
nop
test
or
insb
divb
daa
xor
loopne
icebp
pop
pop
cmc
pop
shrl
cmp
int3
fisttps
scas
sbb
mov
dec
xor
test
jbe
daa
xchg
inc
push
cld
cmp
pop
cmp
add
pop
and
pop
repnz
ja
adc
jle
ds
add
iret
hlt
pop
push
mov
aad
or
sbb
mov
call
cld
ret
arpl
xchg
mov
jo
sbb
dec
js
cmpsl
loope
jg
mov
movsb
add
lds
popa
adc
cmp
bound
fstpt
jo
movsbl
mov
test
lods
sahf
inc
or
leave
notl
add
mov
loop
insb
xchg
inc
jne
das
rcrl
pop
xor
sub
mov
cld
pop
xor
xchg
lds
sbb
sbb
pop
and
xor
sbb
xchg
cmp
push
enter
and
mov
in
adc
ret
lock
pop
xor
pop
push
push
and
inc
mov
mov
mov
sub
js
movsb
sub
sub
push
in
jb
dec
push
sti
inc
adc
push
xor
push
pop
cli
push
jno
stc
sub
lock
xchg
inc
jb
ret
jo
clc
loopne
lret
push
pusha
xor
mov
cld
pop
jmp
push
jmp
cmc
adcl
cmpsb
cmp
push
loopne
stos
loopne
fs
mov
jge
sub
ds
mov
dec
out
pusha
movsb
cs
jmp
loope
push
std
inc
cmc
addr16
jns
les
sbb
add
sbb
push
mov
cwtl
in
lret
mov
push
movsb
into
mov
pop
test
jae
insl
popa
jge
xchg
mov
xchg
add
xchg
push
aam
shrl
mov
xchg
cmp
vmwrite
rcrb
xlat
push
mov
inc
add
jbe
xchg
cwtl
inc
mov
jmp
imul
jns
divb
and
or
jle
jno
out
inc
and
sbb
leave
imul
lret
mov
push
shll
or
fs
inc
aad
inc
jns
rcrl
xchg
daa
mov
lea
fidivrl
test
push
xchg
test
insl
mov
push
lods
std
dec
hlt
mov
push
cld
sbb
jae
pop
leave
mov
scas
lods
xor
fidivrs
mov
mov
xchg
add
sarb
mov
and
in
sarb
bound
or
shll
shl
xchg
pop
sub
hlt
pop
repnz
ljmp
popa
xchg
imul
mov
jne
aam
dec
je
xor
shll
mov
jns
subb
xchg
in
and
das
scas
loopne
jl
clc
jmp
add
xchg
pop
mov
add
dec
pop
cld
jle
jns
add
out
sbb
mov
fcompl
xor
orb
pop
fsubrl
jmp
mov
clc
and
std
sbb
out
adc
jge
aad
jne
div
out
mov
stos
push
cld
imul
jbe
test
cs
mov
cmc
in
jns
jb
jg
fucom
addr16
cmp
out
push
push
lahf
cld
sub
aad
pop
lret
jecxz
push
test
rolb
and
cli
sub
insl
mov
mov
adcl
mov
lock
push
jmp
in
xor
cmp
fldpi
je
jbe
test
popa
mov
dec
js
jbe
fwait
loopne
popa
push
dec
adc
js
add
mov
imul
dec
or
mov
cmc
fs
je
mov
adc
and
inc
pop
clc
sahf
in
inc
adc
push
add
dec
xchg
sbb
je
and
call
add
bound
mov
inc
ficoml
lds
sub
lods
xor
ds
lahf
test
mov
call
cmp
xchg
xor
sub
inc
lret
xchg
in
daa
cmpsl
fdiv
es
add
push
cmpsl
mov
or
gs
jl
jp
lret
aam
jae
push
or
ret
std
mov
cs
inc
ret
adc
jne
sbb
jp
jnp
mov
bound
imul
dec
imul
push
cmp
xchg
mov
fcompl
xchg
push
sbb
icebp
pusha
addb
ficompl
xor
cmp
test
mov
and
mov
fidivrl
lcall
in
icebp
sar
popf
stos
pop
popl
mov
cmp
repnz
imul
xor
mov
data16
lcall
jge
fsubr
popa
loope
call
cli
inc
pop
cmp
sub
xchg
test
psubusw
js
inc
or
mov
or
xor
loope
out
stos
hlt
lock
push
mov
clc
bound
out
adc
mov
outsl
mov
inc
or
cwtl
test
mov
mov
adc
mov
xchg
popa
orl
pop
fmuls
cmp
mov
cmp
lods
aad
arpl
mov
rcr
jmp
inc
xchg
mov
lods
dec
adc
push
jbe
mov
in
pop
xchg
cmp
cli
jmpw
mov
aaa
cmp
lods
xor
orb
jnp
sahf
aas
xchg
outsb
stos
xor
les
cltd
daa
sub
lcall
mov
pop
clc
push
lahf
es
pop
push
int3
mov
jge
shrb
fwait
cmp
test
mov
out
mov
mov
add
int
jge,pn
ljmp
js
data16
sub
ja
cwtl
cmp
leave
call
jb
shrb
mov
imul
out
aad
sub
loopne
inc
push
repz
fidivs
cmp
fs
sub
rcll
stos
xor
inc
mov
xor
aas
sub
or
outsb
daa
mov
cmp
dec
or
popa
test
add
scas
dec
dec
loope
scas
and
and
fs
xor
pop
shrl
orl
and
xchg
push
cld
mov
sub
lcall
in
sti
sbb
rclb
shll
xor
flds
lahf
fiaddl
push
dec
in
jb
cmpl
decb
shlb
mov
pop
add
lods
xor
sahf
inc
mov
in
jb
repz
nop
cmp
mov
add
mov
mov
call
add
pop
stos
js
shrb
mov
faddl
pop
clc
sahf
inc
mov
push
sbb
insb
repnz
mov
jmp
andb
fiadds
add
in
imul
lea
sbb
pop
push
xor
rclb
mov
or
and
sbb
in
adc
inc
jo
add
imul
dec
sub
cltd
cmp
mov
mov
mov
pop
aad
cmc
aad
push
cmp
push
push
sbb
mov
and
add
movsl
cs
pushf
pushf
inc
xchg
shl
mov
lods
jns
mov
sti
dec
mov
mov
push
inc
pop
add
icebp
pop
insl
jle
scas
sarl
mov
add
daa
mov
jp
mov
lcall
dec
pop
clc
into
mulb
adc
adc
and
inc
cmp
push
inc
xlat
inc
push
cmpsl
sahf
adc
js
inc
adc
xor
lds
mov
push
jp
daa
lods
add
ja
push
dec
adc
cmp
loope
sbb
dec
cli
inc
mov
scas
xchg
xchg
dec
adc
ret
sub
and
xor
sub
mov
movsb
xor
stos
cmp
leave
mov
adc
movb
shr
fs
adc
mov
mov
sbb
adc
cwtl
negl
fists
in
jbe
dec
je
aas
mov
psrlq
push
outsl
repz
enter
aam
adc
inc
daa
stos
jbe
and
cmpb
insb
aad
shlb
adc
xchg
insl
ret
les
xor
sti
popfw
inc
mov
scas
cmp
out
cmp
imul
dec
adc
dec
movl
push
jno
cmp
in
outsl
xchg
lcall
cmp
jns
and
push
fwait
mov
or
subl
rcl
xchg
gs
and
aas
jecxz
inc
or
fistpl
out
into
add
ss
lods
inc
ret
lcall
in
lods
jne
inc
pop
mov
scas
inc
or
mov
push
test
push
call
pop
mov
sbb
into
loopne
pop
pop
sbb
dec
mov
mov
pop
mov
lds
or
mov
cs
in
loop
pop
out
imul
adc
sub
aaa
inc
cmp
daa
mov
fwait
cmp
pushf
in
mov
pop
rolb
xlat
andb
xchg
movsl
js
xlat
pop
dec
out
js
sub
jno
push
iret
mov
test
popf
cmp
repz
inc
mov
pushf
mov
or
popa
clc
sub
xchg
sub
dec
pop
cmc
xor
add
or
xchg
iret
xchg
sub
cmp
in
fs
dec
movhps
leave
ret
inc
push
push
sti
sbb
add
call
add
pop
mov
imul
lds
shll
mov
psubd
sbbb
push
inc
fiaddl
movsb
jmp
xor
sbb
aam
push
iret
xchg
add
das
mov
push
mov
jo
or
lods
pop
sub
jbe
mov
add
fs
adc
cld
pusha
jns
mov
dec
fidivrs
and
movsb
mov
out
lret
jo
pop
negb
aaa
negb
sbb
mov
mov
cltd
aaa
mov
cltd
aaa
in
aas
pushf
sar
test
or
or
mov
mov
inc
adc
mov
mov
fstpl
sbb
pop
xor
shlb
mov
xlat
outsb
jg
out
jbe
jno
outsl
or
pop
mov
cld
sub
inc
fadds
mov
divl
in
dec
mov
xor
xchg
mov
jge
inc
and
or
push
lret
sbb
pop
or
mov
push
inc
adc
push
lret
out
and
cmp
std
push
mov
adc
mov
sbb
push
jmp
clc
mov
jns
movsb
stos
push
cld
mov
mov
lcall
jecxz
subb
xchg
movb
out
imul
dec
pop
cmp
orb
mull
mov
adc
iret
pop
mov
adc
scas
ds
das
outsb
lahf
dec
in
push
mov
loopne
lahf
inc
sub
stc
popa
mov
mov
roll
ja
xchg
popf
inc
adc
inc
pop
add
adc
fisttps
movsl
mov
stos
lock
pop
pop
pop
push
dec
and
bound
inc
icebp
jnp
or
ljmp
imul
push
roll
cmp
lahf
inc
adc
add
fldt
inc
pop
iret
mov
pushf
insl
out
sbb
mov
mov
stos
sub
mov
sub
dec
pop
mov
loop
cltd
inc
or
pop
add
pop
test
pop
add
or
mov
repnz
sub
jmp
add
inc
sbb
mov
sub
je
mov
loop
test
jnp
mov
mov
clc
lcall
push
sbb
xchg
iret
scas
xor
setne
adc
mov
cmp
daa
fistpll
out
bound
jns
test
xlat
sub
add
movsb
divb
imul
cli
pop
pop
mov
pop
lahf
xchg
rcll
ret
subl
mov
mov
jp
and
sti
pop
or
dec
sahf
pop
std
pop
sahf
ret
push
shll
out
mov
sbb
sub
xor
mov
cmc
pusha
shl
ds
leave
adc
mov
aas
jns
mov
and
lahf
xchg
insl
int3
arpl
sar
gs
fnstcw
fisubl
addr16
lret
add
add
cmpb
adc
jno
push
inc
xor
jmp
bnd
dec
mov
jl
cwtl
lods
sub
sub
sbb
mov
adcb
ljmp
push
xchg
xchg
out
arpl
xchg
iret
sahf
cmp
iret
mull
daa
pop
stc
push
pop
push
sarl
sub
inc
sbb
mulb
dec
cs
cltd
dec
std
push
inc
lds
pushf
mov
addl
test
and
cmp
jbe
call
adc
cmp
lret
jmp
ss
hlt
mov
dec
adc
arpl
mov
sbbb
je
scas
mov
inc
xchg
cmp
nop
ljmp
int
out
out
jne
clc
lret
xchg
aas
jg
stos
mov
mov
mov
nop
inc
mov
pop
cmp
test
sub
lahf
mov
jae
jb
xchg
cmp
mov
sub
mov
scas
in
jo
rorl
adc
or
mov
mov
jne
push
test
cmpsl
or
pop
out
jo
add
andb
scas
mov
and
lret
dec
jne
inc
adc
fbld
mov
pop
cmp
es
xor
cmpsb
icebp
sbb
adc
outsb
mov
xor
xlat
addl
ret
or
inc
adc
dec
pop
mov
sti
icebp
cmp
and
mov
das
inc
sbb
test
rorb
repz
ret
jecxz
sbb
mov
adcb
sub
mov
mov
cltd
cmp
jo
jbe
out
popa
push
jmp
adc
je
ret
and
push
adc
and
push
in
daa
lods
js
fldl
cmc
jecxz
in
lret
loop
sahf
cwtl
and
pop
ljmp
adc
xlat
xor
and
pop
sbb
push
cmc
pop
sub
add
clc
pop
out
jp
dec
std
data16
imul
fldcw
orl
cltd
inc
test
cmpsb
sub
mov
fiadds
push
jbe
pop
or
and
jns
aas
fwait
jo
dec
push
shrl
rorb
pop
testl
repz
add
cmpb
rol
iret
mov
and
mov
fidivrs
stos
hlt
xchg
test
aam
addb
and
mov
add
dec
mov
or
jns
sub
loopne
pop
lahf
sub
popa
xchg
jbe
push
push
into
xchg
cmp
xchg
mov
cmp
dec
jp,pn
mov
scas
fidivrs
nop
orb
ds
dec
fisubl
cmpsl
outsl
cltd
lret
jns
mov
adc
xchg
inc
xchg
dec
adc
iret
into
push
nopl
or
sub
pop
lahf
xchg
sub
jp
mov
ds
push
cli
or
mov
pusha
jo
and
aaa
sysexit
lret
pop
insl
out
nop
add
mov
sarl
mov
out
pop
add
dec
adc
jp
fstpt
mov
mulb
shrl
fisttpl
sub
cmp
scas
pop
fs
ja
and
pop
mov
ja
mov
xchg
sub
inc
xchg
sub
cld
xchg
cmp
imul
adc
cmpsb
dec
xor
jmp
sub
jo
inc
pop
pushf
gs
pop
fadd
icebp
xlat
add
dec
mov
lods
loop,pn
xchg
pop
stc
fnstcw
mov
ficoms
mov
push
jns
dec
sti
lods
cs
sbb
nop
clc
std
pop
push
lret
mulb
mov
int3
adc
into
mov
xchg
fidivrs
inc
mov
test
std
xchg
inc
pop
mov
add
insb
ss
or
jb
jl
stc
pop
shll
pop
jmp
mov
dec
push
shlb
push
pop
shr
jne
clc
call
pop
sbb
push
popf
in
cmp
xchg
cmp
stc
pop
cwtl
adc
inc
mov
pop
pop
add
bound
mov
jne
dec
xchg
cmp
sbbb
outsl
test
adc
push
mov
lock
jmp
stc
sub
sti
xchg
push
jmp
out
ficompl
jg
add
ja
cwtl
cmpsb
ss
mov
data16
loopne
inc
adc
ss
inc
imul
and
xor
mov
mov
mov
xchg
cs
xchg
fnstcw
mov
sub
popf
adc
jg
sarb
xchg
and
adc
jmp
das
mov
or
add
push
cld
push
pop
call
ljmp
inc
dec
lea
xchg
iret
nop
aam
add
cltd
test
adc
in
inc
or
leave
or
psrlq
add
movsb
pop
sub
pusha
aam
inc
or
dec
mov
xchg
cmp
jo
jmp
negl
push
adc
pop
sub
lea
inc
cmp
pop
push
dec
std
cmp
sahf
mov
mov
ss
push
and
sbb
cmp
int
adc
repnz
in
jbe
loop
iret
inc
hlt
and
les
ja
loopne
pop
cltd
pop
hlt
lret
xchg
push
jnp
sbb
ds
xor
cmp
setb
out
popa
in
insb
pop
xorl
cmp
mov
xchg
sub
mov
test
sub
shlb
xor
popa
shr
test
subl
and
push
mov
or
shll
dec
jl
pop
scas
sbb
dec
iret
jecxz
add
sbb
and
cwtl
push
shlb
movsl
adc
pop
inc
cmp
ja
sbb
mov
jp
pushf
or
mov
mov
cmp
adc
lock
aad
xchg
add
xor
repz
push
xchg
sub
cmp
xor
mov
shrb
scas
dec
in
dec
lock
mov
mov
test
sub
and
test
loope
cli
pop
sub
push
jl
ljmp
sarb
and
ret
inc
aas
jbe
loopne
push
cwtl
pop
hlt
leave
aaa
xchg
imul
sbb
mov
fnstsw
rorl
xchg
mov
ret
das
pop
out
pusha
in
insb
push
xorb
aaa
repz
xchg
sub
mov
test
sub
push
jl
scas
das
dec
in
iret
out
test
subb
and
push
aad
and
jne
shll
dec
jnp
pop
lods
sbb
dec
into
jecxz
add
sahf
and
cwtl
push
mov
pop
mov
adc
pop
inc
lds
ja
pop
pop
repz
mov
jp
fwait
or
das
out
pop
cmp
mov
mov
inc
scas
pop
lock
aad
xchg
add
xor
xchg
sub
cmp
xor
mov
shrb
lods
dec
in
dec
lock
insb
add
mov
mov
test
sub
and
test
fadds
loope
stc
pop
sub
in
jle
xchg
sarl
and
ret
inc
ds
in
ja
xchg
pop
repz
imul
sbb
mov
fnstsw
rorl
nop
mov
ret
out
pusha
jecxz
imul
repnz
xchg
sub
mov
cmpsl
mov
fsubrl
lds
cs
jecxz
iret
out
test
subl
push
aam
pop
push
jne
shll
dec
jp
pop
lods
sbb
dec
int
jns
imul
push
mov
pop
mov
adc
pop
inc
les
ja
push
pop
repz
mov
xchg
jmp
or
das
in
pop
cmp
lea
mov
inc
scas
pop
lock
insb
xchg
add
xor
sub
cmp
xor
mov
shrb
lods
dec
in
dec
lock
insb
add
mov
mov
xor
ret
and
dec
loope
clc
pop
sub
in
jge
xchg
sarb
cmp
and
ret
aad
jecxz
ja
xchg
pop
repz
ss
xchg
push
mov
mov
fdivrl
rorl
cs
out
pop
loop
imul
or
addr16
sub
mov
cmpsl
mov
fldt
lds
shlb
sub
out
test
subb
and
push
rorl
shll
dec
fcomip
jns
pop
stos
sbb
dec
int3
loop
push
sbb
pop
add
out
jno
mov
adc
pop
inc
ret
cmp
ja
adc
xchg
call
or
das
in
pop
cmp
mov
pop
lock
insb
xchg
pushl
xor
sub
pop
adc
xlat
pop
xor
mov
shrl
lods
dec
in
dec
out
xchg
insb
add
lahf
or
and
movsl
test
xlat
inc
dec
loopne
clc
pop
sub
in
jge
test
lahf
add
insl
icebp
and
roll
je
fbstp
xchg
pop
repz
xor
jp
sbb
cwtl
das
insl
fstpt
rorb
mov
shrl
imul
or
xor
xchg
sub
es
pop
fldt
lds
iret
data16
sub
in
test
jg
add
rorb
shll
fcomip
js
pop
stos
pop
decb
loop
std
imul
cmp
jo
mov
cmpps
cmp
ja
adc
repz
mov
xchg
out
jp
cwtl
or
das
jmp
cmp
mov
dec
lods
pop
lock
insb
xchg
ja
xor
xchg
sub
push
adc
pop
xor
mov
shrl
stos
dec
in
dec
out
xchg
add
sahf
or
and
movsb
test
inc
dec
loopne
test
inc
dec
in
jl
test
sahf
add
insb
lock
rolb
jae
fbstp
xchg
pop
repz
xor
xchg
out
adc
mov
mov
cmp
rorb
mov
out
pop
loope
imul
jne
mov
repnz
xchg
sub
adc
push
fisubrl
lds
jns
stos
sub
jecxz
int3
in
test
jle
add
rorl
shll
dec
fcomip
ja
pop
test
lret
cld
push
add
in
outsl
pop
mov
push
ret
sarl
xchg
adc
mov
xchg
out
jp
xchg
pop
sbb
das
ljmp
dec
cmp
pop
aad
nop
std
ja
das
mov
mov
push
xchg
sub
add
mov
aad
xor
mov
shrl
stos
dec
in
dec
out
xchg
insb
add
popf
or
and
mov
dec
loopne
test
sub
jnp
out
sbb
popf
add
imul
mov
rcrl
ds
loopne
jbe
xchg
pop
repz
std
xchg
gs
adc
xchg
mov
cmp
rorb
lea
out
pop
loopne
imul
jne
mov
repnz
xchg
sub
xchg
cmpsl
mov
fldcw
lds
js
data16
sub
lret
in
test
jge
add
rorb
shll
dec
fcomip
jbe
pop
test
incb
loop
sti
test
cltd
sbb
cwtl
dec
mov
pop
mov
or
cmp
ja
adc
mov
xchg
in
jp
xchg
push
sbb
das
jmp
or
lock
insb
cld
ja
cs
mov
dec
xchg
sub
add
test
aam
xor
xchg
shrl
test
out
xchg
insb
add
dec
mov
sub
ret
test
aam
dec
loopne
cmc
pop
daa
xchg
addr16
dec
in
jp
test
pushf
add
push
and
mov
jbe
xchg
pop
repz
std
xchg
fs
adc
xchg
mov
cmp
rorb
mov
out
pop
imul
jne
scas
xor
mov
sub
xchg
cmpsl
mov
mov
push
fsubrs
lds
ja
test
jecxz
lret
cld
jl
add
iret
mov
add
shll
dec
fcomip
jne
pop
cmpsl
adc
incb
loop
cli
test
sbb
cwtl
dec
mov
pop
mov
or
pop
ds
loopne
xchg
adc
mov
xchg
in
jp
xchg
add
cwtl
das
call
or
lock
mov
ja
sub
dec
xchg
sub
add
test
rcll
movl
inc
out
xchg
insb
add
or
and
sub
push
mov
dec
loopne
hlt
pop
es
addr16
inc
in
jns
test
fwait
add
imul
rcrl
ds
jbe
xchg
pop
repz
xor
xchg
arpl
jp
push
test
mov
aaa
cwtl
das
imul
mov
mov
imul
jne
scas
xor
mov
xchg
sub
test
cmpsl
mov
mov
push
xlat
lds
jbe
data16
dec
jecxz
leave
in
test
jnp
add
into
mov
add
shll
dec
fcomip
je
pop
cmpsb
adc
inc
loop
stc
test
sbb
cwtl
dec
mov
pop
mov
or
pop
cmp
pop
loopne
nop
adc
mov
xchg
jecxz
jp
xchg
add
mov
mov
das
out
cmp
xchg
mov
cmp
aad
cli
ja
sub
repz
dec
xchg
sub
add
test
rclb
test
shrl
cmpsl
dec
in
inc
out
xchg
insb
add
lcall
jle
sub
sbb
ds
loopne
repz
pop
and
inc
in
js
test
mov
mov
mov
pop
mov
fstp
jbe
xchg
pop
repz
xchg
jp
adc
ss
das
push
mov
out
pop
fst
imul
jne
lods
xor
mov
xchg
sub
test
cmpsl
mov
mov
push
lds
jne
cmpsw
sub
enter
jp
add
mov
ljmp
rcrl
dec
fcomip
jae
pop
movsl
adc
inc
jecxz
clc
arpl
cltd
dec
mov
cmp
imul
pushf
or
pop
cmp
loopne
mov
pop
hlt
inc
scas
xchg
loope
jnp
xchg
add
xor
push
cmp
test
mov
lock
pop
insl
mov
ja
sub
xchg
sub
add
stos
xor
xor
test
shrl
cmpsb
dec
out
inc
out
xchg
insl
add
cwtl
or
and
sub
sbb
dec
loopne
repnz
pop
and
addr16
inc
in
ja
test
cltd
add
data16
mov
mov
fcmovnu
jbe
nop
pop
hlt
shrl
xchg
pusha
loop
adc
sbb
addr16
rolb
es
out
push
insb
push
jns
or
das
repz
xchg
sub
adcb
mov
mov
push
aam
movb
dec
in
out
test
js
add
lret
mov
std
imul
pushf
push
test
push
mov
pop
mov
in
mulb
sbb
dec
mov
cmp
imul
pop
cmp
loope
mov
call
xchg
add
mov
mov
xor
push
cmp
addl
icebp
aad
xlat
outsb
mov
js
sub
sub
xor
xor
xor
imul
inc
lock
insl
add
xchg
push
movsl
enter
jnp
sub
sbb
dec
loope
lock
pop
and
in
jne
xchg
enter
gs
ret
cmp
insb
ja
mov
mov
loopne
adc
sbbl
sarl
roll
mov
mov
fcmovbe
insb
or
jbe
stos
sub
xchg
sub
adcb
mov
mov
push
shrb
movb
shrl
and
in
divl
add
leave
mov
sti
push
ret
fwait
sbb
aas
dec
mov
pop
mov
ret
hlt
popa
xchg
xchg
adc
movsl
cmp
and
les
mov
loop
mov
pop
cmc
cmp
add
lcall
mov
mov
xor
push
cmp
addb
mov
xlat
outsb
mov
js
daa
stos
cmc
mov
dec
xchg
sub
das
pushf
mov
into
push
xor
sub
dec
out
inc
lock
add
xchg
push
movsl
dec
mov
jp
sub
sbb
loope
out
pop
and
in
je
xchg
xor
sbb
aas
imul
ja
lea
mov
fistpll
adc
cltd
xor
roll
xchg
out
push
insb
or
or
pop
lret
cld
jg
test
sbb
das
movb
shrl
and
push
out
xchg
jne
add
enter
imul
dec
mov
pop
mov
shl
repz
xchg
xchg
adc
lcall
and
cmp
loop
mov
pop
cmc
cmp
adc
mov
xor
push
cmp
addl
pop
icebp
rcll
outsb
mov
js
es
cmc
mov
inc
xchg
sub
cs
mov
int
xor
sub
imul
inc
lock
insl
add
xchg
push
movsl
movb
jns
sub
sbb
dec
loope
out
pop
and
jl
fiadds
lcall
and
mov
aas
push
loopne
or
xchg
pop
fidivrs
adc
mov
xor
roll
test
out
push
fcom
insb
or
or
pop
leave
xchg
sub
jle
test
sbb
dec
dec
shrb
movb
shrl
and
push
ret
out
xchg
je
add
mov
stc
push
test
dec
mov
pop
lahf
or
add
shl
repnz
xchg
xchg
adc
lcall
and
aaa
mov
call
or
cmp
jl
std
push
mov
scas
lcall
add
icebp
rclb
outsb
xchg
js
and
inc
xchg
sub
sub
dec
xor
jg
shrb
mov
lock
insl
add
xchg
push
movsl
lds
and
sub
pop
lcall
imul
push
jl
fldl
lcall
and
mov
aas
imul
pop
hlt
mov
fnstsw
movd
scas
xor
roll
test
out
push
xlat
aad
or
or
pop
enter
jge
test
sbb
movb
shrl
and
push
ret
hlt
jae
add
mov
clc
addr16
cwtl
sbb
loope
insb
pop
sahf
or
cmp
pop
xchg
nop
adc
lcall
and
ss
out
loop
mov
pop
cmc
cmp
jl
mov
push
mov
scas
lcall
add
icebp
rcll
xchg
js
and
cmc
mov
inc
xchg
sub
sub
mov
lret
dec
xor
jle
shrb
mov
lock
insl
add
xchg
push
movsl
les
and
sub
push
cltd
test
loope
in
pop
push
mov
mov
faddl
lcall
and
mov
aas
push
mov
mov
fdivrl
push
jge
mov
das
cltd
xor
cmp
add
pop
out
push
aad
or
cmpsb
sub
mov
xchg
sub
jl
test
sbb
ljmp
push
push
shr
bnd
add
mov
mull
ret
xchg
sbb
loope
imul
popf
or
cmp
xchg
mov
add
inc
scas
movsl
cmp
arpl
mov
xor
inc
xlat
out
loop
xchg
pop
idivb
test
xchg
fstps
adc
cli
push
mov
lods
fwait
xor
dec
cmp
jge
mov
icebp
iret
push
fsubrs
lock
and
xchg
sub
sub
xor
jge
shrb
lahf
push
out
cmp
outsb
add
ret
and
sub
adc
stos
inc
lret
loope
jmp
pop
sbb
ds
jo
xchg
ret
sub
and
mov
inc
xlat
addr16
ja
mov
mov
fstpt
jnp
mov
cs
cmpl
insl
push
jb
push
movsb
daa
hlt
mov
xchg
sub
jp
test
dec
int3
xor
std
imul
popf
push
dec
out
mov
insl
add
adc
cmpsb
inc
ret
mov
cmc
arpl
inc
dec
mov
loop
imul
add
mov
mov
mov
add
cmp
xchg
add
pop
xor
jecxz
test
add
mov
pop
mov
stos
pushf
xor
dec
cmp
push
xor
fsubrs
out
jns
and
xchg
je,pn
adc
sub
xor
jnp
shrl
popf
push
out
cmp
mov
outsb
add
roll
je
sub
inc
enter
gs
imul
outsb
fiaddl
fwait
shrl
mov
mov
inc
xlat
gs
js
xchg
mov
fnstcw
jnp
mov
sub
xor
cmp
jg
dec
mov
pop
icebp
push
rcl
insl
add
js
movsb
and
xchg
sub
test
lret
sti
imul
popf
sbb
out
mov
insl
add
adc
cmpsl
inc
rorl
xchg
adc
inc
inc
mov
jecxz
addr16
imul
mov
mov
mov
cmpsl
fistps
mov
xor
in
test
pusha
divl
add
xchg
and
fisttpl
aad
cld
mov
repz
dec
fsubrs
out
jp
and
cwtl
das
je
adc
daa
xchg
mov
enter
jns
aam
jp
xor
inc
ss
mov
jmp
test
push
lods
pushf
adc
and
lock
mov
jne
sbb
sar
dec
lcall
scas
inc
mov
lods
mov
scas
pop
rorl
shl
dec
mov
fstpl
mov
xchg
mov
jbe
bound
es
imul
mov
and
jp
inc
cmc
jmp
adc
aaa
or
push
mov
dec
daa
and
or
mov
data16
or
in
jne
push
pop
pop
pop
sub
mov
sub
adc
or
pop
and
or
push
test
or
sub
in
mov
adc
dec
add
out
insl
outsl
out
hlt
jmp
aaa
addr16
cmc
mov
add
pop
dec
cmp
jns
push
lret
addr16
xchg
push
ljmp
insl
outsb
aam
aas
mov
lock
scas
lret
and
insb
xchg
cmp
cs
popf
std
adc
mov
sub
dec
and
jae
mov
xchg
sbb
out
sub
push
jbe
dec
sub
mov
jl
dec
stos
std
mulb
int
ss
cwtl
inc
sbb
mov
push
xor
push
outsb
jb
dec
rorl
fs
ror
mov
mov
add
jns
push
dec
daa
jmp
push
sub
aam
rclb
cmp
stos
loopne
mov
push
push
popf
and
popa
fimuls
xchg
mull
or
cwtl
mov
imul
outsb
xchg
pusha
jo
jp
and
push
push
js
pop
push
sahf
lret
sub
or
sbb
xchg
mov
loope
xor
fsubrs
es
and
lds
adc
lods
xor
fbstp
sbb
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
cmpsl
cmp
movsb
xchg
mov
cmpb
test
mov
stc
movsb
sbb
scas
pop
add
js
out
popf
in
sbb
sarl
loope
cmp
jnp
add
cmp
lret
les
dec
xchg
cmp
or
pop
and
stos
std
addr16
pop
jmp
hlt
adc
je
and
xchg
sarl
fnstcw
ljmp
pop
cmp
xor
pushf
push
or
mov
adc
jmp
frstor
mov
aad
in
es
arpl
xor
pop
data16
into
cmpsb
idivl
sub
sbb
push
rorl
fwait
scas
out
fcompl
or
dec
enter
mov
xchg
fisttpl
outsb
jecxz
jnp
ds
je
adc
out
sbb
pushf
stos
sub
imul
mov
mov
iret
sub
rcrl
orb
inc
jne
adc
pop
cmp
lods
mov
stos
ss
loop
adc
in
sahf
movsl
test
xchg
lock
cltd
sahf
and
rclb
icebp
push
fs
xchg
cli
add
xchg
lret
pop
fidivl
enter
inc
fstpt
mov
sub
adc
movsb
sub
mov
mov
xor
and
mov
push
cmpsl
cmp
into
cmpsl
pop
xor
movsb
mov
mov
leave
dec
shlb
clc
jbe
dec
or
jmp
outsb
xchg
scas
popf
mov
inc
test
mov
and
sbb
sbb
pop
xchg
hlt
adc
dec
scas
dec
add
push
ljmp
or
outsl
or
mov
in
stos
pushl
or
add
ja
scas
std
or
push
shlb
aas
push
mov
push
cmp
pop
dec
jbe
mov
xor
jb
mov
cli
jbe
jle
jnp
imul
mov
in
cmpl
fcomps
jne
sub
push
pop
aad
jne
xchg
test
jne
mov
adc
sbb
add
lods
cli
fcoms
dec
jb
int3
xor
adc
out
ret
leave
fidivl
fisttpll
push
mov
ret
in
cltd
cld
pop
fnstenv
out
insb
stc
lea
fcom
jp
jb
leave
mov
jmp
xchg
pop
js
cmp
push
dec
push
incl
and
ret
insl
pop
or
inc
out
fwait
sti
jl
cmp
insl
dec
xor
outsl
shrb
mov
aam
sbb
xorl
cmpsl
scas
push
pop
hlt
lcall
rcrb
insl
mov
out
pop
cmp
test
addl
lods
incb
jbe
jo
test
dec
mov
stos
ss
pop
sbb
out
or
jns
mov
xor
fiadds
adc
dec
rcrl
or
xchg
nop
pop
inc
xor
mov
inc
loop
cmp
fidivl
hlt
icebp
adc
jmp
rclb
push
shr
in
inc
sub
shr
pop
xor
js
jno
jecxz
sub
sbb
inc
cmpsl
jno
into
adcl
sbb
adcl
sub
push
out
jecxz
adc
adc
add
fisubl
popf
into
mov
push
sbb
push
in
arpl
loope
loop
orb
push
cmp
hlt
icebp
adc
xor
stc
cmpsb
jns
cs
dec
pop
sub
ret
pushf
inc
xchg
out
jo
jbe
adc
xlat
sti
mov
cmp
loope
loop
repnz
push
testb
jns
rorl
push
xchg
push
xchg
mov
cwtl
sub
xlat
addr16
loope
xchg
push
aas
push
and
lcall
cli
push
mov
lods
add
mov
repnz
lret
icebp
adc
in
pushf
fsts
push
mov
jno
stos
aam
or
push
or
sub
add
mov
sub
aad
scas
sub
fdivrl
enter
ds
lret
mov
adc
bound
loop
jmp
mov
push
fistl
mov
sub
nop
cld
mov
push
push
fisubl
pushf
mov
cld
lods
bound
je
cld
mov
ss
imul
pop
mov
mov
jg
xchg
filds
shlb
adc
imul
xchg
ret
cwtl
lea
test
sbb
push
je
iret
pop
sub
mov
dec
pop
pop
sbb
jbe
outsb
test
add
xlat
dec
or
and
add
add
sbb
and
int
fistl
outsb
fwait
push
dec
mov
adc
aaa
lahf
out
inc
mov
or
fidivl
xor
mov
dec
les
jbe
sub
push
dec
gs
push
mov
lahf
mov
mov
xchg
aam
dec
or
mov
or
mov
enter
lahf
das
xor
sbb
es
in
sub
cld
sub
jg
sarl
ret
es
in
pop
and
decl
fildll
jae
mov
icebp
cwtl
lret
add
notb
loopne
jmp
popa
pusha
jne
inc
jecxz
out
bound
cmp
in
dec
sahf
arpl
inc
add
add
sbb
jg
call
lret
std
jne
xchg
sub
pop
out
scas
mov
cmp
idivb
in
pop
jb
and
je
loop
sub
insl
nop
xchg
xchg
lods
rcr
shlb
sub
cmp
mov
xchg
rorl
hlt
sub
dec
scas
cli
xlat
or
sub
stc
divl
xchg
testb
mov
js
out
mov
lcall
adc
cmp
sub
cwtl
fs
dec
call
add
arpl
pop
xchg
sbb
inc
gs
dec
push
or
rep
fbld
ljmp
jle
fdiv
leave
or
xlat
test
jnp
popf
icebp
jmp
xchg
insl
mov
lds
mov
mov
mov
xchg
mov
test
mov
andb
jecxz
test
inc
cmpl
imul
cmp
jge
leave
xchg
fmuls
decb
xor
mov
