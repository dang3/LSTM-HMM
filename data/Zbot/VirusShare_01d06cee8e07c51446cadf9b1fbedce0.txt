cwtl
add
or
insb
cmp
testl
sbb
loope
xor
adc
shl
push
and
out
xchg
cltd
js
xchg
mov
cmp
push
push
xchg
aad
xchg
es
pop
bound
repnz
sub
cltd
das
aam
das
aam
addr16
mov
jb
or
mov
loopne
or
clc
xchg
lock
jbe
adc
ds
mov
inc
or
cld
fistl
fistpl
dec
jae
popf
outsl
int3
outsl
and
jae
aaa
push
add
push
aam
fwait
inc
push
iret
xor
xchg
inc
push
inc
xchg
inc
push
mov
setns
xchg
mov
leave
push
adcl
inc
pushf
sbb
inc
push
rcll
lds
fidivrs
aam
dec
movl
push
lret
sub
inc
push
jb
push
enter
lret
xchg
mov
arpl
sub
jne
inc
lret
mov
or
hlt
or
sbb
repnz
mov
push
xchg
inc
push
enter
fisttps
xchg
sbb
cmp
call
ljmp
adc
inc
push
enter
pop
xchg
lret
xchg
ljmp
push
inc
push
cmp
lret
push
sub
enter
iret
xor
push
jae
cmp
or
xor
adc
test
mov
fstl
lret
mov
popa
outsb
sbb
jl
and
xchg
sti
dec
add
push
les
loop
push
push
outsb
mov
nop
jmp
out
cmp
adc
xchg
cmp
xor
xchg
jmp
leave
xchg
lret
pop
cmp
xchg
inc
push
inc
or
sbb
cmp
inc
add
cmpsl
mov
push
fwait
xchg
inc
aad
jo
cmp
xchg
in
movl
mov
push
cwtl
xlat
jle
lock
xchg
push
clc
adcb
or
dec
push
enter
adcb
adc
fucomp
inc
cmp
inc
xor
xlat
xchg
mov
aas
xchg
lock
dec
aas
push
lret
mov
bound
loope
call
mov
lea
push
fisttpl
loopne
ficompl
push
lret
decl
sub
loop
mov
push
dec
rcrb
pop
sub
mov
mov
xlat
mov
sbb
inc
dec
loope
test
mov
lds
sub
xlat
outsb
push
gs
add
roll
fcoml
push
add
cmp
adc
add
nop
inc
add
mov
cwtl
aad
mov
rclb
xchg
int
lret
stos
xchg
inc
jecxz
popa
subb
inc
push
xchg
push
js
das
outsb
mov
inc
push
push
aam
pop
repz
xchg
push
stos
repnz
push
xchg
adc
adc
call
sub
or
enter
push
inc
int
rcll
xor
jnp
pushf
cmp
dec
mov
test
push
mov
cmp
add
cs
pusha
ja
enter
loopne
ja
push
xchg
inc
push
dec
mov
sbb
outsl
and
jae
aaa
push
add
push
rolb
mov
push
inc
xchg
inc
out
push
pop
repz
mov
inc
push
mov
sub
sti
loope
inc
inc
ds
push
jbe
dec
cmp
xchg
inc
push
lods
addr16
cmp
mov
cmp
ds
inc
push
lahf
dec
push
pushf
lds
adc
iret
xchg
mov
sub
out
ja
inc
push
jge
inc
out
leave
xchg
aad
push
insl
ds
inc
push
adc
inc
enter
push
cmp
ret
pop
jmp
imul
out
inc
push
stos
push
lea
data16
lret
cmp
inc
sbb
bound
push
movb
pop
sub
xchg
sub
out
enter
and
xchg
inc
push
or
dec
movb
dec
ds
push
mov
or
fsts
inc
push
int3
cmp
aas
inc
xchg
inc
sbb
pop
sub
movb
rorl
add
xchg
pop
dec
and
arpl
pop
dec
push
mov
loopne
sub
mov
les
repz
dec
add
enter
push
and
push
pop
mov
es
mov
push
lret
mov
inc
std
push
pop
cmp
les
add
cmp
dec
mov
aaa
cmp
pop
xor
test
jl
add
pop
cmp
xchg
sbb
fidivs
xchg
aam
or
pop
cmp
push
sub
mov
mov
jp
rol
inc
loopne
sub
aaa
xlat
xor
enter
inc
xchg
mov
in
inc
push
inc
sub
push
push
aaa
cmp
push
mov
loope
cmp
inc
dec
pop
pop
add
xchg
lret
add
mov
lret
mov
cmp
pushf
cmp
sbb
and
test
push
jne
add
enter
enter
insl
pop
push
insl
insl
cwtl
inc
push
inc
jmp
sub
or
dec
insl
aaa
cmp
pop
adc
out
enter
or
clc
ror
out
aas
push
cmp
int3
push
adc
repz
push
dec
or
push
ret
mov
dec
sbb
fldcw
mov
xchg
inc
push
cmp
pop
addr16
dec
cmp
repz
push
nop
mov
sbb
jbe
enter
push
mov
push
int3
mov
es
inc
icebp
enter
cmp
push
xor
mov
pop
lock
rorl
loope
test
cmp
cmp
jae
push
test
ss
jns
enter
lods
int3
sti
xor
xchg
inc
push
ret
xor
pusha
xchg
push
mov
xchg
lret
push
inc
push
sbb
sti
add
jge
and
mov
pusha
cmpsb
mov
sti
add
add
xor
push
scas
mov
mov
push
pushf
dec
cwtl
jl
cmp
adc
cmc
mov
add
adc
std
popa
jecxz
inc
cmp
xor
test
iret
sti
adc
ret
xor
test
sti
cltd
xor
notb
mov
push
dec
or
xor
gs
loop
xor
lret
xor
mov
ds
jmp
add
add
test
inc
shlb
xor
or
mov
cwtl
aaa
inc
sbbl
xchg
cmp
mov
sub
cld
movsb
dec
cs
mov
lock
inc
lret
mov
in
repz
aaa
push
gs
stc
enter
or
jl
in
div
sbb
test
scas
bound
add
enter
mov
lea
pop
mov
and
mov
pop
fistl
outsl
push
lahf
dec
and
or
test
sbb
jb
in
scas
mov
lds
data16
xchg
pop
fwait
ljmp
cmpsl
pop
fdiv
inc
leave
add
lock
push
xchg
test
orb
push
lea
sub
iret
in
push
dec
jb
adc
xlat
into
loop
cmp
call
repnz
test
lea
and
push
inc
inc
out
pop
jae
push
repz
ds
adc
inc
mov
loop
je
mov
mov
movsb
fisttpl
jbe
repnz
out
lock
ss
iret
push
stc
jg
and
sbb
aad
mov
mov
cmp
mov
fwait
ret
cmpsb
out
in
jbe
mov
jno
je
adcb
push
mov
mov
sub
sbb
pop
push
ret
inc
cmc
add
bound
data16
xor
rclb
and
mov
clc
aam
movl
fists
std
mov
mov
pop
cmp
push
leave
xlat
add
rcrb
ror
fxch
mov
jmp
cmc
jnp
iret
add
push
jle
add
pop
xrelease
cmpsl
inc
outsl
out
aam
push
loope
cltd
sbb
adc
dec
push
sub
dec
pop
inc
sti
pop
data16
fnstenv
inc
das
mov
in
mov
ja
loope
xchg
mov
out
insl
ljmp
std
test
imul
jle
mov
add
xchg
sbb
pushf
mov
cs
fistpl
inc
stos
aas
fcomps
mov
dec
jp
mull
xchg
popl
and
sbb
dec
rorb
dec
movsl
mov
xchg
push
fldcw
inc
jo
lret
xchg
enter
or
rol
shr
cs
jbe
dec
push
stc
or
xlat
lds
scas
sub
jmp
pop
adc
dec
mov
testl
push
mov
mov
cld
and
lock
pop
je
jecxz
push
mov
hlt
push
push
xchg
jecxz
push
addr16
xlat
sbb
lds
mov
or
pop
insb
cmpsl
xlat
jl
jg
js
adcb
inc
dec
out
xchg
ja
test
sub
push
xchg
xlat
sub
pop
ja
aaa
shlb
pop
loope
out
push
sbb
push
mov
mov
mov
mov
jecxz
in
adcl
add
insl
jl
aas
ds
and
das
push
sbb
push
stos
mov
mov
out
mov
and
loope
push
bound
sub
sub
dec
sub
sub
out
cwtl
popa
push
push
lahf
popa
xchg
or
stos
inc
mov
or
jo
test
stos
push
adc
xlat
pusha
aad
aad
inc
and
mov
jmp
into
push
stos
cmp
test
sbb
xlat
in
stos
shl
xor
xchg
jbe
shrb
inc
out
sub
inc
inc
in
loope
inc
add
pop
adc
pushf
push
movsl
aas
pusha
stc
adc
fwait
push
aaa
imul
push
test
pop
and
pop
mov
leave
nop
cltd
lods
aas
ss
add
xor
aad
hlt
jbe
mov
outsb
shll
cmp
mov
mov
push
add
imul
sahf
cli
dec
mov
mov
mov
loop
push
lods
sub
xor
push
testb
aad
push
pop
inc
repnz
cmp
jno
xchg
in
xor
jns
lcall
stc
or
xchg
orb
daa
mov
lret
push
sbb
inc
int3
fisubs
dec
push
jecxz
mov
sbb
push
imul
pop
xchg
xchg
dec
mov
jp
xchg
mov
shlb
push
inc
mov
cmp
cwtl
add
mov
rcr
jns
popf
cmpsl
add
enter
aaa
and
pop
arpl
xchg
call
push
pop
sub
pop
fbld
jo
xchg
add
daa
xor
in
and
lock
adc
mov
enter
cmovge
inc
pop
add
in
lahf
push
andl
inc
dec
ljmp
cmc
push
aaa
mov
inc
sbb
stos
les
repnz
jl
faddp
cmp
and
cltd
mov
stos
mov
push
lret
fimull
lock
test
cmp
lahf
mov
cmpsb
pop
xchg
pop
inc
popa
pop
sbb
jp
cmc
adc
add
push
test
pop
jg
xor
cmp
inc
in
mov
lret
push
cmp
iret
mov
dec
mov
inc
xchg
repnz
lahf
and
aas
sbb
movsl
movsb
push
adc
cwtl
jge
es
xchg
lret
sti
jnp
push
xchg
and
mov
jb
cmpsb
push
jne
push
cmp
dec
out
insl
jne
cmpsl
push
fcmovnb
sbb
pop
add
das
adc
jo
cmp
mov
xchg
and
les
and
push
loopne
push
aas
call
push
xor
cmpsb
popf
cmpsb
outsb
fidivrs
cmpsb
lds
daa
push
stos
xchg
or
test
decl
popf
push
mov
fiaddl
jge
push
adcb
rolb
mov
nop
je
cmp
push
push
dec
jne
loop
jl
jne
shrb
sub
inc
lret
idivl
add
xor
adc
mov
mov
inc
cmp
cltd
pop
add
xchg
inc
sarl
ret
andl
test
in
xchg
pop
clc
or
das
loopne
or
push
mov
fs
daa
out
xor
xor
sbb
ja
push
mov
hlt
jno
imul
dec
sbbb
aas
jbe
mov
or
idivb
shl
movsb
mov
sub
jmp
pop
aas
outsl
inc
pop
or
cmp
add
push
jo
adc
nop
sar
sub
mov
mov
int3
or
popl
fstl
out
dec
shll
push
imul
shlb
shr
push
xchg
adc
xchg
addr16
xlat
xchg
in
xor
xchg
inc
pushf
dec
xlat
mov
push
das
push
ficoms
sbb
pusha
mov
or
cmp
sbb
xchg
xor
cli
stc
inc
mov
inc
pop
mov
outsb
enter
xor
daa
jmp
mov
popa
mov
test
outsl
lret
add
jns
in
xchg
rcrl
stos
cmp
or
cmp
push
mov
push
dec
mov
je
lea
pop
std
aas
jmp
xor
stc
test
stos
push
jb
jp
enter
enter
and
xchg
scas
push
sbb
shl
adc
cmp
orb
push
out
ds
outsl
mov
les
ja
jns
xchg
vmptrld
fnstsw
idiv
rcrl
mov
inc
enter
jmp
stos
imul
shr
xor
stos
sub
ja
inc
cmp
pop
add
mov
sti
jbe,pt
jle
nop
push
jbe
aad
push
push
mov
cmp
pop
sbbl
dec
xchg
inc
xchg
je
aas
xchg
test
pusha
cmp
imul
ret
std
push
or
stos
shrb
mov
and
fcoml
in
out
ja
push
and
in
cmp
fidivrs
insl
daa
adc
sbb
fadds
jnp
add
hlt
aam
cmp
imul
fsincos
sbb
sbb
lret
push
push
mov
lock
sub
mov
xor
addr16
lahf
js
popa
pop
dec
cmpsl
jnp
lock
cmp
adc
inc
and
fldenv
mov
bound
inc
aad
adc
mov
push
push
ja
sbb
push
cmc
cs
cmp
adc
inc
xchg
push
mov
mov
xchg
in
xchg
jge
push
scas
dec
lret
mov
xchg
xchg
in
lahf
cmp
lret
and
lahf
aas
sub
push
cld
push
pop
sub
gs
mov
jge
std
xchg
incb
fs
add
mov
out
push
jmp
arpl
ss
push
stos
pop
push
and
les
inc
sub
xor
shl
fdivp
or
subb
jg,pt
in
scas
jmp
stos
push
xchg
pop
add
lock
push
sbb
dec
in
inc
mov
dec
or
lcall
mov
jge
cltd
mov
push
sahf
je
mov
or
pop
adc
test
out
adc
pop
mov
add
out
push
push
inc
cli
js
repz
js
scas
dec
xchg
decl
add
cmc
or
sub
pushl
test
push
imul
add
in
insb
test
lret
xor
gs
push
push
inc
fcom
mov
inc
jbe
lods
cmp
xor
std
mov
in
xor
dec
inc
inc
pushf
adc
xchg
repnz
sub
je
pop
loope
aam
das
xchg
lret
adc
sub
sbb
mov
adcb
nop
adc
enter
sbb
sbbl
sbb
sbb
enter
sub
mov
inc
repz
ret
test
rorb
jg
std
aaa
add
mov
daa
int
sbb
sbb
jne
dec
aam
cli
push
ficoms
add
xchg
out
pop
insb
xchg
test
bound
mov
xchg
fmull
test
in
pop
adc
or
shrl
pop
es
xor
sbb
stos
mov
sub
in
push
hlt
xchg
xor
les
inc
adc
ror
jne
mov
add
push
rclb
inc
mov
cmp
pop
es
push
cli
push
sbb
inc
mov
sub
aaa
repz
in
push
pop
in
dec
fildl
jae
mov
mov
jecxz
jge
push
pop
int3
sbb
aas
or
ffree
andb
sbb
adc
sbb
mov
mov
inc
lahf
popa
mov
push
dec
cmpsb
dec
loopne
stos
testl
mov
movsl
scas
push
in
cmpsb
cmc
aas
js
cwtd
pusha
xor
xor
jo
mov
mov
or
sbb
and
or
jecxz
pop
add
in
mov
mov
insb
dec
ja
add
cltd
rcr
adc
push
jbe
dec
loope
faddl
dec
and
repnz
jbe
inc
xchg
cmp
sbb
mov
cmpsl
adcb
fidivrs
cmp
dec
mov
push
mov
dec
cmp
out
mov
enter
mov
push
push
movsl
mov
out
or
inc
xchg
push
push
jge
sbb
jns
cmp
xor
rolb
cs
iret
mov
mov
ret
enter
adc
add
pop
mov
enter
test
mov
or
pushf
cmp
mov
adc
faddl
scas
xor
dec
lods
arpl
sbb
int
insl
xor
hlt
fwait
adc
imulb
xchg
icebp
xchg
cmp
push
scas
push
lcall
xchg
testb
xchg
fnsave
pushl
cs
and
and
xchg
leave
enter
lods
repz
sub
sbb
mov
lea
jp
add
outsl
push
sub
movsl
push
ss
ljmp
or
mov
shr
push
cmp
inc
pop
dec
xor
imul
inc
add
popa
call
loope
xchg
outsl
andl
adc
inc
inc
inc
inc
testl
add
mov
aas
movsb
mov
loop
xchg
mov
pop
mov
bound
shr
ds
jb
idiv
jmp
and
sarb
mov
stos
dec
test
repnz
or
imul
cmp
aas
pop
shrl
ljmp
mov
jo
imul
jge
cmpsb
stos
lret
scas
pop
inc
ds
jnp
pop
adc
imul
inc
push
jb
mov
out
outsl
je
mov
cli
xchg
jecxz
sub
dec
repz
pusha
aad
jecxz
jmp
leave
outsl
das
mov
cltd
push
fisubrs
xchg
xchg
push
xorb
inc
add
dec
xchg
std
xor
push
push
jb
dec
jl
lret
mov
cmpsb
test
xchg
inc
test
cli
push
mov
add
aas
mov
xchg
je
pop
ret
cmp
es
pop
add
jb
xor
cwtl
cmp
loope
cmp
push
jl
aas
xor
leave
das
push
dec
sub
aas
cmp
push
inc
cmpsb
sti
fistl
rcll
pop
xor
aas
test
push
js
dec
xchg
popf
or
loop
nop
dec
in
add
cli
pusha
out
or
or
dec
inc
xor
icebp
pop
pop
daa
addr16
inc
sub
cmp
xchg
mov
inc
or
rclb
fnsave
jg
or
es
xchg
jb
pop
jno
lcall
dec
and
sbb
outsl
mov
test
or
mov
daa
pop
inc
push
in
stc
pop
pop
mov
add
out
sete
push
push
mov
aas
mov
lds
rcrb
icebp
sbb
je
in
cmpsb
movsb
xor
shr
aas
jo
call
fwait
inc
and
jge
or
ds
jno
pop
mov
push
pop
mov
sub
scas
cmp
add
pop
pop
mov
popf
sbb
or
test
mov
push
nop
movsl
div
push
sub
loop
rcll
push
stos
movsl
data16
dec
sbb
push
cmp
pop
pop
xchg
sahf
xor
xor
rcll
out
je
popf
cltd
pop
mov
adc
sti
pop
and
aam
sub
push
xchg
test
mov
popf
test
in
popf
sti
cmc
pop
jl
arpl
fmuls
mov
ja
lahf
test
pushf
notl
outsb
not
add
add
jnp
loope
mov
test
jmp
mov
adc
test
adc
inc
cltd
inc
sub
test
inc
cmp
sub
cmpsb
sbb
popa
push
xchg
inc
loop
cmp
in
sbb
sarl
ret
sbb
aam
sbb
sti
inc
sahf
or
outsl
push
push
ds
add
enter
test
push
xchg
or
adc
push
addr16
mov
lock
push
lods
mov
jnp
mov
push
mov
lds
mov
mov
xchg
andl
fisubrl
in
aas
shll
aam
push
mov
xchg
lock
inc
scas
movsb
cmp
push
roll
fwait
push
fwait
or
clc
insl
mov
pop
push
shrb
lods
jecxz
loopne
xor
xor
out
mov
dec
dec
push
xchg
inc
jno
mov
pop
dec
cmp
in
lahf
insb
pop
fwait
jbe
jne
and
jbe
stos
inc
or
cmpsb
lock
push
mov
rcr
cmc
add
mov
or
sti
lret
or
sub
aaa
daa
es
sbb
test
or
cmp
jmp
jg
pop
lds
movsb
ret
fmull
jbe
adc
push
dec
pusha
sbb
xchg
mov
andb
aaa
mov
pop
insb
bnd
jmp
leave
and
out
mov
les
ljmp
aad
xor
out
mov
xor
push
popl
in
jl
ja
cmpsl
xchg
imul
nop
xchg
jle
ret
adc
shlb
dec
or
shlb
or
test
insl
xchg
test
mov
into
inc
xchg
sahf
inc
adc
jge
jo
aas
sub
insb
inc
xor
mov
mov
mov
xchg
add
pop
jno
fisttpl
aad
add
mov
mov
dec
xchg
stos
mov
fs
xor
push
jmp
xchg
daa
out
inc
push
add
mov
sbbl
stc
lock
inc
pop
xor
leave
into
outsb
out
mov
fdivs
sar
mov
ss
or
das
outsl
sub
or
mull
mov
int3
dec
mov
jns
fsubrs
jle
out
xchg
jae
aas
pusha
jmp
out
adc
ds
out
xchg
push
xor
shl
mov
ljmp
mov
scas
jnp
mov
testl
jns
rcll
pop
sbb
fstpt
outsb
add
mov
pop
pop
xchg
addr16
hlt
in
inc
dec
jmp
hlt
aam
lret
lea
ljmp
aas
or
mov
push
push
mov
push
in
pop
dec
mov
scas
pop
dec
cmp
std
andl
dec
cmp
test
inc
cmc
or
mov
adc
sub
rorl
and
pop
inc
jae
pop
das
sub
aaa
add
lret
xchg
in
out
xchg
xchg
movsl
aad
into
jo
xor
fiaddl
rclb
mov
push
nop
lcall
adc
or
enter
fnstcw
cmp
out
dec
xchg
or
ljmp
outsb
pop
aad
mov
jg
cltd
repz
jno
jg
stos
add
loop
daa
dec
test
mov
insb
inc
nop
sahf
shlb
or
xchg
daa
push
inc
push
outsl
xlat
add
xchg
sub
xor
xchg
sbb
push
cmpsl
pop
inc
mov
out
cld
jge
loope
push
scas
es
lods
data16
xor
xor
in
test
mov
xchg
mov
movsl
aam
sbb
nop
aas
sub
cmpxchg
sahf
arpl
ret
xchg
jg
je
mov
out
call
inc
xchg
test
jbe
inc
inc
mov
dec
adc
or
mov
aad
stos
inc
rclb
fcoml
cmpsl
mov
ja
sbb
mov
xor
lods
xchg
dec
mov
enter
dec
insl
shrl
xchg
xchg
js
orl
jecxz
shrb
xchg
popa
cmp
dec
mov
aaa
fimuls
popa
sti
imul
aad
into
in
pop
sub
sbb
test
ror
cmp
fsts
fdivs
je
mov
push
mov
sbb
xlat
xchg
mov
ja
jge
mov
or
cs
je
inc
push
loopne
jg
int3
adc
stos
enter
sbb
arpl
and
jp
popa
fistl
lock
dec
jae
xchg
xchg
pop
pusha
fwait
mov
icebp
fst
adc
leave
jmp
call
or
fists
mov
out
movsl
mov
and
or
aam
cli
jp
xchg
jb
mov
stos
aas
pop
cmp
scas
xor
push
push
mov
cmp
cltd
std
and
jbe
cs
xchg
les
ljmp
aaa
std
in
sahf
dec
jg
push
data16
mov
ds
xlat
testb
push
in
xchg
subl
xchg
pop
lret
add
fucomi
dec
outsb
test
data16
jno
jae
dec
pop
inc
rep
lahf
cmp
outsb
push
push
test
jo
cwtl
icebp
aad
enter
int
cld
cmpsl
xchg
push
in
sbb
xor
lea
mov
int3
jbe
mov
clc
push
mov
or
jb
dec
enter
dec
dec
hlt
movsl
lods
pop
xchg
adc
add
or
cmpl
lcall
movsb
movsb
add
sbb
pop
mov
pop
jl
pop
aad
xlat
cmp
push
imul
xchg
cmp
pop
mov
mov
pop
cmp
push
xchg
sub
sub
iret
sbb
test
test
fiadds
cmp
or
cmp
pop
pop
popa
stc
lcall
ror
out
in
aas
sbb
jmp
pop
inc
pushf
push
push
pop
cmp
cld
mov
arpl
icebp
push
data16
aas
jecxz
inc
add
lds
mov
adc
xchg
into
aas
jno
dec
popf
scas
jno
movsl
stos
pop
out
nop
ss
pop
inc
aad
je
sbb
dec
lock
rcll
mov
xor
adc
int3
int3
pop
adc
fwait
inc
lods
out
aaa
lret
rcll
mov
jne
les
push
cltd
sub
outsb
out
out
pop
xchg
xchg
lahf
inc
inc
push
xchg
mov
push
mov
cltd
cmpxchg
mov
in
pusha
mov
dec
pop
dec
js
rcll
mov
adc
inc
inc
fnsave
loopne
je
mov
js
inc
in
pop
mov
push
orl
outsl
ss
fimull
sbb
xchg
cmp
xchg
jb
das
xchg
cmp
mov
stc
add
jae
pop
xchg
testb
inc
aas
subl
push
pushf
adc
xchg
cmp
outsl
jp
xchg
repz
jb
clc
pop
push
sbb
stos
ljmp
ljmp
push
dec
push
divl
les
js
mov
xlat
test
movsb
mov
imul
cli
ja
aaa
mov
adc
fst
push
push
inc
das
cli
scas
cmc
pop
iret
pop
into
sbb
cmpsl
scas
inc
pop
mov
out
dec
fstl
and
je
jne
cli
pop
nop
loopne
popa
xor
xchg
arpl
dec
roll
sub
xchg
xchg
jle
jae
mov
jno
adc
adc
pop
in
sub
movsb
pop
cmp
xor
or
aas
lods
outsl
lret
cld
pop
jo
xchg
mov
les
gs
pop
nop
add
repnz
outsb
out
movsb
rcr
jnp
sub
mov
cmp
mov
je
and
adc
xor
or
mov
test
jne
mov
sbb
pop
sbb
cmp
data16
pop
mov
ficomps
jae
daa
and
cltd
jnp
inc
pop
mov
pop
dec
jnp
and
addr16
push
inc
dec
inc
test
jb
inc
xchg
add
push
sahf
pop
jmp
mov
push
xlat
xchg
push
stos
js
add
rclb
cmpsb
call
and
out
push
loope
inc
enter
fmull
mov
testb
cli
push
push
mov
pop
aam
lahf
mov
fmuls
xchg
lcall
push
es
and
dec
sbb
int3
push
jbe
cmp
orl
aaa
adc
es
stos
jb
stc
ret
insb
outsl
dec
dec
pop
lcall
das
sub
imull
cli
add
sahf
jge
in
fninit
and
in
xchg
stos
mov
test
dec
ret
scas
jmp
mov
xchg
pusha
xor
iretw
mov
call
mov
push
jb
int3
cltd
aam
bnd
movsb
sahf
rcl
or
cmpsl
xchg
lods
jo
arpl
inc
xlat
mov
aas
inc
nop
loope
sahf
mov
sahf
ss
mov
insl
push
popf
addb
shrb
push
xchg
inc
mov
loop
fisubrs
xchg
dec
fbstp
mov
fwait
jmp
test
test
jo
lret
out
push
mov
rcrl
cli
fsubl
andl
int
xor
loope
jae
push
mov
mov
add
out
xchg
in
push
xchg
inc
lret
pop
insb
jmp
cmp
nop
mov
sub
add
addr16
or
push
or
pop
movl
aad
and
push
or
inc
je
push
popf
js
jae
push
adc
les
mov
mov
add
push
int
out
xchg
pusha
iret
rolb
dec
out
fidivrl
arpl
inc
push
popf
jno
ljmp
push
cmc
xchg
inc
push
xchg
inc
push
sahf
sub
mov
icebp
addl
sbb
out
dec
pop
imul
cmp
xchg
aas
mov
icebp
push
and
inc
dec
cmp
fcmovnbe
and
lea
xchg
and
loop
dec
cmp
les
jne
dec
into
rcll
in
adcl
mov
inc
sub
mov
jne
in
lret
cmp
xchg
shlb
ret
mov
stos
cmpb
mov
fcmovb
dec
cmp
or
sub
xor
mov
sahf
cmp
rcll
fs
mov
outsb
orl
xchg
sbb
and
xor
cmpsb
xchg
jae
xor
in
ja
data16
int
inc
push
jp
jno
dec
pop
les
in
inc
inc
std
mov
fidivrs
cmp
push
lea
cmp
or
xchg
or
xor
pop
pop
xchg
xchg
test
gs
insb
rcrb
enter
add
or
nop
xchg
rcrl
mov
dec
movsl
mov
pop
shl
inc
shlb
jae
fisttpl
addb
inc
lahf
and
ficoms
add
add
mov
fwait
roll
jb
test
sbb
test
test
inc
mov
jge
pop
and
int
pushf
mov
xor
add
and
push
cmp
adc
scas
imull
xchg
imul
or
jae
mov
mov
and
mov
lret
icebp
ds
pop
or
ret
ljmp
idivl
xor
mov
or
fwait
pop
lea
lahf
xchg
mov
enter
xchg
or
push
call
movsl
mov
scas
cmpsl
add
andb
jbe
rorl
jae
sbb
in
mov
lcall
stos
cmp
pop
sarb
pop
jmp
inc
sbb
sti
or
in
xchg
xchg
xlat
hlt
ret
jg
mov
aam
sub
jne
mov
in
stos
or
and
push
pop
lahf
mov
pop
xchg
ret
movsl
or
jmp
mov
flds
in
mov
dec
pop
push
movl
add
cld
mov
and
je
in
imul
nop
or
aad
jmp
adc
inc
stos
cli
xchg
mov
mov
or
icebp
fdivrl
loope
mov
hlt
sbbb
js
inc
xchg
stos
dec
inc
outsl
into
lods
shrl
pop
sbb
or
mov
adc
mov
add
rcrb
pop
es
dec
or
mov
or
outsb
push
mov
mov
filds
and
popf
mov
fidivrs
pop
mov
sbb
test
cld
adc
cmc
ljmp
lock
mov
inc
test
lret
add
xor
sbb
sub
xchg
loope
mov
stos
cmpsl
mov
test
push
imul
xchg
imul
jl
dec
mov
repnz
stos
sub
out
int3
push
jns
je
jl
add
mov
mov
push
rorl
das
loop
imul
adc
and
movsl
push
xchg
xchg
gs
hlt
stc
or
inc
inc
mov
mov
push
mov
pop
jno
cmp
or
push
jb
aas
xchg
fs
aaa
cmpsl
mov
aas
mov
push
mov
pop
sub
mov
testb
mov
pop
jno
cmp
rol
fdivrl
mov
xor
test
sti
push
lds
mov
fs
lahf
and
jns
lret
in
leave
test
inc
mov
xchg
int
loopne
push
imul
jbe
xor
push
push
loopne
lret
cmp
imul
call
outsl
fisubrl
dec
std
mov
adc
cmp
jno
sbb
adc
sbb
aad
mov
loop
sub
adc
in
and
mov
jecxz
inc
add
nop
test
jno
mov
adc
lahf
and
mov
xor
dec
add
int3
dec
xchg
loopne
xchg
mov
daa
add
mov
sbb
jno
ficoms
push
iret
imul
cmp
inc
jns
loopne
pavgb
insb
inc
popf
xchg
jno
xchg
aaa
mov
sbb
push
xor
inc
and
or
jbe
shrl
mov
ret
lods
rorl
insb
adc
adc
and
jle
call
ds
push
mov
sub
mov
pop
pop
jp
push
xlat
xlat
lret
push
scas
cmc
xchg
or
push
push
dec
aas
mov
cltd
mov
pop
out
push
int
jmp
dec
pop
outsb
sub
push
dec
mov
stos
enter
adcl
or
aas
ljmp
mov
push
add
sbb
sub
data16
push
xchg
and
sub
lock
ds
xchg
or
ss
lret
inc
ljmp
shl
mov
push
stc
dec
inc
mov
or
xchg
gs
int
outsl
in
push
xchg
mov
and
inc
pop
mov
jge
movsl
ds
jnp
xchg
inc
out
mov
jp
les
gs
adc
pop
fistpll
orb
daa
movb
leave
das
dec
imul
push
fsubl
cmc
sti
rolb
in
test
test
pop
cmp
inc
push
incb
mov
mov
loop
addr16
shl
adc
cmp
icebp
push
jmp
inc
stos
ljmp
adc
jecxz
mov
or
sub
sub
aas
addr16
jp
push
cwtl
cmc
dec
pusha
ret
push
inc
andl
incl
test
loopne
cmp
xor
in
add
xchg
jns
sahf
shlb
push
out
push
int
mov
push
jge
je
mov
add
rcrl
outsl
leave
cli
scas
stc
lret
inc
movsb
aas
push
fistps
push
bound
push
sahf
dec
cmp
adc
mov
mov
rolb
push
xchg
mov
add
and
mov
inc
xchg
dec
mov
cmp
push
push
jg
addr16
pop
xchg
ljmp
popf
std
xchg
jle
insb
in
int
jl
sub
cmp
jle
and
fxch
fcmovnb
push
sub
mov
pop
mov
sbb
jmp
loop
jb
fcmovne
iret
mov
pusha
outsl
dec
inc
pop
mov
sub
movsl
test
or
dec
xchg
mov
pop
adc
jbe
xchg
je
xchg
mov
sbb
sbb
dec
push
cs
popa
dec
push
stos
in
inc
nop
mov
ret
cmp
xchg
jne
or
fidivrl
lret
xchg
jnp
jbe
sahf
in
mov
mov
push
nop
xchg
pop
outsl
xchg
fistpll
sub
out
outsb
mov
push
test
push
dec
fmull
enter
dec
mov
xor
pop
pusha
xchg
stos
pop
adc
leave
dec
aas
dec
daa
mov
xor
inc
xchg
cmp
jle
aas
fsubr
xchg
dec
cmp
sbb
fwait
xor
add
int
cmc
lock
insb
int3
and
outsl
adc
je
cmp
aam
xchg
fdivs
out
and
xor
sbb
dec
sub
fstpt
or
fldenv
sti
and
pop
rcr
aam
rorl
jge
inc
fdivl
pop
movsl
push
adc
mov
xchg
pop
je
mov
xchg
clc
es
dec
arpl
lea
adc
lods
daa
lret
repz
push
lret
gs
lcall
test
fildll
xchg
daa
inc
xchg
jb
les
inc
or
mov
mov
and
adc
add
repz
push
rcll
sub
divl
ds
xor
mov
aas
dec
ja
imul
test
aas
jp
mov
jno
rcll
xchg
aam
fildll
dec
out
gs
inc
sti
inc
add
in
push
outsl
sbb
rorb
sub
sbb
mov
push
negb
or
scas
xor
jecxz
sbb
aas
xor
bound
inc
xchg
add
adc
xchg
pop
mov
xchg
jbe
inc
cmp
pusha
sub
mov
stos
aad
mov
ret
jle
gs
dec
pop
shll
or
adc
adc
rcrb
xchg
jg
lret
cmpsb
lahf
jmp
ja
dec
xchg
pop
cwtl
aas
mov
sbb
adc
sbb
outsl
mov
arpl
add
int3
mov
in
xchg
clc
test
push
and
sub
cmp
mov
sub
int
cmp
sub
shrb
xchg
cld
mov
scas
jno
inc
mov
adc
push
or
xor
shrb
push
and
cmp
and
xchg
mov
add
fwait
nop
mov
out
dec
popa
pop
xor
lcall
aas
and
jge
shr
rcr
aas
sbb
jmp
xor
test
int
test
imul
cld
pusha
lea
test
jo
rcll
and
and
inc
push
into
or
gs
sub
loop
inc
adc
int
test
xchg
cs
cli
cmp
popf
xchg
daa
pop
mov
leave
shll
iret
xor
or
or
lods
jns
pop
fidivs
pop
xchg
adc
cwtl
jle
aas
int
data16
cmp
push
add
aad
sti
stos
sbb
mov
ljmp
cmc
push
les
xlat
dec
pushf
aas
mov
movsl
mov
mov
scas
and
push
sahf
inc
mov
push
add
repz
out
loopne
gs
xchg
dec
mov
in
push
es
xchg
sbb
addr16
inc
sbb
pop
push
and
in
xchg
jae
xchg
sub
mov
les
js
addr16
pushf
daa
adcl
jbe
in
aam
push
movl
ret
jl
out
fcoms
dec
sub
aas
inc
jp
mov
jge
mov
cwtl
not
addl
out
mov
mov
xchg
mov
push
sub
mov
addl
add
test
es
mov
stc
jno
js
xchg
cmp
xor
das
inc
and
inc
arpl
es
rclb
pop
and
mov
or
push
ljmp
mov
loope
dec
push
mov
dec
add
rol
pop
mov
or
dec
xchg
xchg
cmp
cltd
arpl
cmp
pushf
fidivrl
sbb
mov
pop
jg
inc
xor
sbb
dec
decb
mov
ds
fiadds
dec
inc
iret
xchg
inc
jnp
push
stc
add
cwtl
mov
mov
xchg
jp
push
iret
ljmp
pop
jmp
push
sbb
sub
cmp
mov
std
fsubs
int3
pop
sahf
std
cwtl
push
inc
dec
daa
mov
inc
push
jbe
aaa
add
pop
jge
pusha
mov
call
lret
mov
jns
push
or
movb
xchg
xlat
pop
push
add
out
cmp
aam
mov
leave
jbe
inc
fbstp
dec
ljmp
stos
adc
push
mov
addb
cltd
jno
adc
fisttpll
mov
mov
pusha
fdivs
inc
push
pop
sbb
aas
movsl
sbbl
push
pusha
aad
rol
cwtl
dec
popf
notl
lds
inc
pop
outsl
ficompl
xchg
push
add
jl
lret
and
mov
xchg
lcall
in
inc
pop
dec
inc
shr
mov
lret
lret
push
mov
push
jle
xor
mov
lock
pop
push
jnp
hlt
daa
mov
rcr
movsb
push
inc
out
imul
fistl
jbe
aaa
xor
jl
test
movsb
sbb
in
sbbl
xchg
out
xchg
or
pop
lret
js
sbb
out
adcl
adc
fiadds
int
popa
test
fistl
notb
push
lds
sbbb
xchg
push
pop
cmc
fwait
enter
ret
jo
pop
mov
mov
jae
mov
add
or
iret
dec
loop
push
ret
jnp
lahf
xchg
mov
call
vminps
lahf
push
aad
push
addr16
in
pop
out
adc
push
fstl
movsl
push
push
test
movsb
das
fsubl
test
in
cmp
xor
icebp
loopne
insb
orb
or
pop
cs
dec
mov
das
and
mov
dec
push
or
xchg
sub
outsl
xchg
aas
xchg
pop
mov
or
xchg
jnp
and
mov
xchg
in
pushf
cmp
mov
dec
sbbl
in
mov
xchg
jge
addr16
cmp
inc
andps
xlat
dec
inc
clc
inc
jns
ja
adcl
sub
arpl
jae
mov
inc
aas
sub
push
ret
sbb
xchg
xchg
mov
dec
enter
lea
cmp
aam
sbb
sub
or
and
lcall
push
loope
xchg
inc
sub
sub
aas
push
frstor
ljmp
icebp
pop
movb
jns
rcr
xor
xchg
sbb
mov
addr16
or
pop
mov
mov
js
push
sub
fcoml
ss
xchg
outsb
inc
jl
mov
fisttpll
sbb
xchg
je
inc
rol
dec
out
or
and
loope
pop
cli
xchg
inc
mov
jno
icebp
jno
aas
mov
cli
test
mov
xchg
cltd
bound
andb
sub
jb
push
ljmp
popf
pop
sarl
aas
insw
lcall
jbe
dec
push
or
push
incb
mov
idivb
clc
in
push
cs
orb
push
fsts
sarl
xchg
push
xchg
sbb
adc
cmp
je
test
test
movl
shr
enter
jecxz
pop
loop
and
inc
cs
inc
js
cwtl
mov
add
lret
ljmp
pop
adc
bound
cltd
pop
leave
pop
mov
js
xchg
divl
imul
cld
cmc
mov
cmc
daa
jae
mov
mov
out
jmp
dec
subl
lret
in
push
aam
pop
cmp
sub
inc
test
shl
lea
xor
sbb
pop
clc
aad
test
sub
mov
push
push
mov
dec
sbb
gs
push
testb
inc
movsl
lret
imul
in
pop
ss
adc
sahf
mov
cmpsl
data16
fcom
dec
push
xorb
cmp
push
mov
inc
jns
ss
cmpsb
fildll
sub
add
in
cmc
sarb
call
jmp
ja
mov
add
stos
xchg
enter
push
xorb
iret
push
xchg
push
das
jnp
repz
aas
cli
add
mov
dec
add
mov
jl
xor
sub
xor
sub
leave
out
pusha
jge
and
or
and
sbb
jne
xchg
xor
pusha
dec
mov
mov
mov
mov
sbb
sbb
mov
jno
jae
push
rcr
jecxz
pop
xchg
jae
inc
mov
cwtl
scas
xor
test
aad
iret
xchg
shlb
add
cmp
mov
ret
hlt
lret
leave
test
cmp
movsb
jl
pop
jbe
fisttps
xor
push
pop
dec
out
in
pop
mov
into
loop
and
scas
inc
ds
aaa
adc
mov
les
sarl
or
addr16
fimuls
xchg
ljmp
je
ljmp
shll
cwtl
fidivrl
mov
jmp
dec
push
cmp
xor
shlb
adc
and
repnz
dec
hlt
dec
ficoms
xlat
pop
add
cwtl
rclb
push
popf
mov
xchg
inc
out
inc
cmpsl
rcrl
inc
sub
cmpsb
xchg
xchg
movsb
jae
aad
clc
lods
shlb
xchg
or
pop
stos
rcl
dec
roll
sbb
xchg
scas
aam
fsubs
jmp
adc
mov
xchg
inc
xchg
xchg
mov
aas
push
ja
pusha
repz
data16
std
lock
pop
ret
mov
cmc
mov
ret
jge
fucom
cmp
xchg
xchg
test
imul
enter
adcb
xor
inc
fwait
inc
mov
push
and
je
fucomi
ror
and
mov
enter
mov
dec
cltd
cmp
gs
xor
xor
xlat
ja
scas
or
xor
jo
orl
out
mov
fldenv
xor
mov
pop
pop
push
jge
aas
fidivl
rclb
push
pop
dec
outsl
pop
jg
leave
adc
clc
test
mov
mov
bound
aaa
dec
xorl
clc
lods
jp
cltd
sub
inc
cmp
popa
inc
test
adc
cmpl
dec
mov
push
aam
test
insl
push
out
xchg
je
xlat
xor
mov
push
adc
out
dec
inc
cwtl
data16
into
push
call
mov
mov
call
xlat
mov
push
xchg
call
pop
and
pushf
mov
into
stc
dec
adc
push
out
cmpsb
stos
sub
cld
and
xor
push
sbbb
xor
mov
test
enter
pop
sbb
adc
shr
ja
ret
dec
xchg
jecxz
lods
shlb
mov
mov
xchg
push
movsl
push
and
or
bound
push
aam
mov
fs
push
pop
mov
xor
cmp
int
add
xor
ja
push
lcall
and
outsl
xor
push
or
mov
loop
scas
xor
add
ret
push
sub
adcl
sbb
aas
xchg
push
call
pusha
push
dec
dec
daa
adc
cmp
sub
test
enter
jns
xchg
mov
fwait
lods
movzwl
push
mov
jp
gs
cwtl
jecxz
xchg
sbb
lods
sbb
outsl
addb
dec
repnz
push
dec
ljmp
adc
adc
dec
cmpb
mov
push
iret
mov
daa
scas
dec
pusha
add
mulb
into
push
mov
loop
xor
add
aad
test
inc
and
mov
das
inc
dec
fdiv
xchg
cmc
push
in
out
in
xchg
es
jecxz
inc
cmpsl
inc
cmp
imul
xchg
push
xchg
lcall
xchg
jbe
fcoml
mov
jnp
mov
in
popf
xorb
in
mov
pop
adc
iret
loop
aas
jmp
xchg
adc
push
dec
inc
or
jae
ret
out
mov
jb
in
jg
push
inc
ja
test
mov
or
pop
or
repz
sbb
inc
xor
imull
mov
mull
imul
adc
fldl
add
mov
scas
rorl
jge
xchg
ret
xchg
test
les
jge
or
cmp
pop
subb
cmp
adc
lds
outsb
pusha
push
pop
cmpsl
push
pop
and
cltd
jp
movsl
inc
mov
imul
movsl
scas
push
dec
and
cmp
inc
cmp
test
push
daa
mov
addl
cmp
jg
push
addr16
xchg
mov
xor
rorb
pop
mov
jl
jbe
fs
cli
aas
aaa
cmp
pusha
add
cmpsb
inc
push
icebp
mov
sub
pop
push
les
xchg
outsb
push
shlb
js
push
jae
mov
aaa
sub
pop
jno
push
fists
adc
add
iret
pop
dec
ret
jb
addr16
mov
push
push
mov
adc
dec
popa
push
sbb
inc
dec
xor
or
push
dec
xchg
fprem
aas
in
jae
hlt
cltd
popa
rorb
push
sbb
adc
jne
jne
fadd
aad
shl
push
aas
add
jbe
xchg
frstor
inc
imul
enter
pop
sub
clc
mov
mov
push
xchg
mov
push
mov
stc
aas
sbb
xchg
adc
es
cmpsb
and
loope
aad
enter
lret
cmpsl
mov
repnz
movb
dec
xchg
stc
mov
test
cmp
adc
out
in
ljmp
rcrl
pop
enter
xor
jns
jae
push
pop
xchg
call
enter
dec
or
adc
leave
xchg
xchg
sbb
or
mov
mov
dec
cltd
add
add
sub
inc
enter
imul
xchg
push
pop
stos
incb
pop
and
fs
cs
cmp
cmp
mov
inc
test
and
aad
fwait
lret
icebp
aaa
icebp
test
aam
enter
or
out
cmpsb
dec
int
jle
pop
adc
add
add
xchg
push
or
xchg
sti
icebp
stc
push
pop
xchg
push
scas
inc
scas
cmp
lcall
or
inc
out
mov
add
shlb
jb
xchg
xor
jg
jne
out
cmp
daa
push
add
test
pop
cmpsb
aas
xchg
iret
xchg
imul
add
mov
test
xor
adc
cmp
mov
pop
loopne
jne
mov
pop
sahf
jb
pop
xchg
fists
popa
jmp
mov
jae
sub
sbb
or
push
inc
pop
inc
xchg
inc
in
adc
sub
push
loop
adc
mov
add
mov
shr
xor
ds
adc
lret
inc
mov
jmp
imul
fmul
pop
pop
xchg
aaa
fdivrl
and
pop
xchg
mov
lcall
aas
test
sub
out
ret
fwait
sti
jo
cmpsb
cmp
mov
sbb
xchg
add
ret
outsb
sub
je
pop
lods
push
sbb
hlt
fcoms
dec
or
xchg
je
xor
add
ret
adc
pop
xor
mov
sub
adc
or
sub
cmp
xor
push
lret
cli
xor
int
repz
aas
lods
addr16
dec
cmp
or
test
mov
movl
in
loop
xchg
dec
xchg
inc
adc
jp
push
inc
inc
inc
out
jns
add
aad
sbb
ljmp
dec
gs
inc
pop
push
popa
aam
inc
add
addr16
push
scas
das
sub
add
xor
lret
fwait
int
push
jbe
mov
push
movsl
shrb
fstl
sbb
jle
mov
adc
fnsave
pop
rclb
cmp
pop
pop
mov
cmp
aam
sub
xchg
mov
in
scas
dec
and
test
dec
cltd
mov
mov
xchg
mov
push
cli
push
pop
push
fstp
push
xchg
mov
rolb
aas
test
leave
add
pop
jg
xchg
ja
xchg
iret
mov
xchg
mov
cli
hlt
jecxz
pop
add
adc
and
mov
jne
jb
xchg
push
int
outsb
rol
js
push
xchg
jns
mov
dec
fbstp
jb
loopne
lcall
in
in
xchg
add
call
mov
xchg
push
pop
enter
add
loopne
test
inc
cmp
mov
inc
adc
movsl
sbb
inc
negl
mov
jno
aam
cmp
ljmp
fwait
sub
pop
mov
inc
ss
fucom
pop
xor
test
adc
or
pop
scas
xchg
xor
sbbl
pop
cmpsb
pop
inc
adc
rorl
cltd
lock
out
inc
pop
je
rolb
and
aas
idivl
scas
insb
dec
sbb
inc
adc
push
pop
and
xchg
and
insl
or
aad
aad
or
jecxz
push
jns
fsubs
xchg
inc
mov
fwait
cmp
mov
fldenv
mov
xchg
push
aad
xchg
in
enter
xlat
or
or
mov
jecxz
pusha
cld
out
sbb
in
adc
push
xchg
mov
test
lret
xor
and
sbb
pushf
lcall
and
cmp
pop
ss
sbbl
shll
xor
mov
mov
dec
adc
xchg
mov
xor
lret
push
mov
cwtl
push
andl
in
mov
ss
and
clc
loopne
inc
xchg
cmp
dec
push
cmp
cli
sub
sub
add
in
pop
mov
push
cli
cld
or
lds
or
nop
outsl
aad
repz
lahf
mov
dec
sbbb
mov
add
js
push
xchg
xchg
cld
xchg
sub
ds
and
in
push
jle
ret
xor
js
pop
ret
je
sbb
mull
inc
call
or
jl
cwtl
aas
xchg
ret
cmpsl
orb
jmp
mov
sub
and
ljmp
push
mov
inc
sbb
and
and
aad
mov
push
stc
inc
cld
pusha
add
mov
dec
mov
inc
sti
cwtl
cmp
xor
mov
push
stos
push
mov
aas
cs
or
mov
sbb
in
mov
dec
jns
subb
ficoms
aam
fidivrl
mov
push
popa
push
sub
fmul
pop
aad
xchg
dec
xor
pusha
inc
and
out
mov
push
xchg
xor
and
cmp
xchg
mov
jno
lea
jl
aad
popf
xchg
or
xchg
cmpsl
xchg
int
clc
sub
mov
andl
push
push
cmp
mov
mov
mov
and
enter
std
inc
stos
loopne
xchg
loop
jo
lods
hlt
or
jecxz
js
aad
xor
mov
or
scas
xchg
ret
mov
adc
mov
out
mov
arpl
sub
daa
addr16
sub
cmpsl
fwait
sbb
gs
mov
lret
mov
test
subl
loop
cwtl
ret
inc
push
push
ret
xchg
adc
cmp
inc
popf
mov
gs
jl
inc
mov
icebp
lret
fisubrl
test
dec
ret
cmp
scas
pop
mov
cli
aaa
adc
adc
dec
stc
jno
mov
dec
jo
lods
pushf
or
addr16
lock
mov
sbb
pmaddwd
inc
add
iret
jg
ja
pop
xor
adcb
xchg
dec
je
mov
jmp
cmp
add
push
inc
or
pop
push
mov
or
rorb
dec
dec
inc
iret
mov
loopne
xchg
sarb
insl
lods
mov
cltd
push
xor
adc
lahf
sbb
jle
jns
push
aad
stos
test
hlt
fcoms
and
mov
nop
pop
test
pop
dec
ret
cmc
in
lcall
mov
ss
sub
insl
lret
dec
xchg
shlb
aas
int3
nop
sbb
push
inc
mov
add
pop
enter
xchg
add
inc
mov
dec
sbb
movsb
ret
mov
cmp
jnp
inc
pop
and
xor
or
imul
popf
mov
loop
in
push
fcompl
fsts
jb
enter
add
sbb
push
adc
jb
bound
ret
jb
addl
daa
sub
rcrl
xchg
dec
rorb
fimuls
test
inc
sub
jg
push
fcmovne
daa
mov
push
sub
sti
sbb
xchg
mov
in
mov
aaa
imul
fdivrl
sub
push
push
enter
adc
inc
enter
mov
mov
insb
adc
mov
jno
sub
cmp
jo
push
xchg
lcall
imul
xchg
rorl
and
dec
dec
push
ja
lret
loopne
mov
push
ss
jecxz
rep
push
push
lods
or
mov
mov
pop
daa
mov
xchg
dec
idivb
hlt
pushf
rcl
pop
imul
mov
movsb
mov
fists
mov
clc
mov
inc
aad
arpl
stc
xchg
jae
loop
push
nop
mov
inc
pop
fistl
push
pop
test
mov
fwait
fs
fsts
xchg
fistpll
aad
jmp
xchg
hlt
mov
mov
popa
inc
bound
mov
stc
jg
jbe
xchg
inc
in
je
mov
dec
popf
xchg
inc
jbe
aas
jbe
add
jns
ret
cmp
sbb
cmp
adc
stc
stc
mov
outsb
imul
push
inc
dec
imul
cmpb
mov
cwtl
aam
aad
mov
mov
rclb
movsl
iret
rolb
ret
mov
das
push
adc
jl
push
fiaddl
xchg
repnz
mov
sbb
sbb
into
jnp
lcall
jecxz
mov
inc
rcrl
ret
lcall
arpl
test
adc
adc
cmp
loop
nop
xchg
jmp
mov
cmpxchg8b
sbb
jmp
cltd
mov
xchg
data16
xchg
insl
insb
fists
gs
test
xor
divl
jecxz
push
pop
filds
pop
add
cmpsb
xor
pop
int
in
push
jbe
mov
cmpl
add
imul
inc
mov
out
lea
out
push
std
cmp
mov
xchg
bound
cli
lahf
pop
push
enter
in
pop
push
movsl
dec
push
or
repnz
xchg
movl
call
xchg
and
mov
lea
hlt
inc
fildl
pop
fisttpl
add
xchg
adc
stc
pop
imul
pushf
call
lock
push
xchg
xchg
rcll
pop
popf
cli
push
pop
clc
aam
stc
xor
cs
push
lret
or
jge
inc
ds
xor
push
mov
mov
jge
les
daa
pop
inc
mov
dec
push
push
ret
dec
mov
mov
popa
mov
sub
sbb
xchg
or
pop
popa
gs
mov
fbld
ljmp
xchg
fidivrl
dec
add
bnd
and
xchg
dec
loopne
fsubrs
xlat
pop
enter
push
aaa
jb
lret
imul
lret
jmp
and
dec
frstor
add
outsb
repz
mov
cmp
scas
mov
sbb
loope
jecxz
sbb
test
pop
dec
pop
cld
push
add
iret
jne
adc
fs
lahf
adc
lds
cs
pop
inc
shll
ljmp
insl
dec
xor
ror
jg
cmp
cmp
xchg
jne
test
pop
sbb
cmp
xchg
pop
int
imul
mov
aaa
repnz
cmp
out
add
mov
sarl
outsb
inc
push
imul
cmp
dec
mov
ror
push
ret
in
pushf
sbb
cmp
adc
aas
push
aad
into
in
jge
std
push
aam
das
ja
mov
inc
pop
ljmp
inc
std
dec
aad
mov
jle
sub
stos
ds
mov
je
push
punpcklbw
dec
push
sarb
insl
insl
movsb
sahf
xchg
ds
fldcw
mov
dec
mov
xchg
sahf
jecxz
sub
enter
stos
lcall
add
jae
out
push
xor
mov
dec
lret
pop
push
push
aas
shl
arpl
xchg
or
sete
or
jp
sbb
and
iret
cmp
mov
test
movsb
daa
dec
or
xor
and
mov
add
jnp
push
ljmp
adc
mov
push
mov
into
mov
mov
inc
outsl
cmpsl
arpl
mov
sti
xor
fbstp
inc
mov
jmp
arpl
mov
test
inc
bound
mov
xchg
push
or
jecxz
jge
mov
fisubrs
or
call
push
pusha
cli
lock
cmovo
dec
push
and
dec
jp
or
insb
jp
mov
dec
mov
sti
pop
xor
sbb
outsl
inc
ficompl
ja
cwtl
fsts
cmp
imul
ja
loopne
pop
pop
xchg
sarb
push
xchg
imul
sti
xor
add
enter
mov
pusha
pop
loopne
xor
out
jg
cmp
adc
dec
repz
rclb
jne
or
mov
inc
push
push
mov
mov
enter
cwtl
cmp
mov
cmp
int
xchg
insb
jg
dec
in
jecxz
aas
and
pop
push
pop
aam
inc
push
add
inc
adc
inc
pop
inc
and
cmp
ja
pop
xchg
xor
dec
jp
mov
sahf
cmp
cmpsb
inc
clc
sub
rclb
lcall
gs
cmp
loopne
mov
loopne
arpl
xor
jg
ss
dec
jo
repz
inc
xchg
movsl
mov
mov
out
test
xor
sub
inc
xor
pop
in
xchg
fildl
and
int3
add
xchg
push
arpl
daa
mov
jmp
lret
jns
mov
mov
popl
pop
cmp
mov
pop
xchg
pop
pop
sti
dec
imul
xor
shl
andb
js
inc
jnp
subb
dec
std
shlb
jnp,pn
or
xor
pop
insl
hlt
adc
mov
aaa
scas
sbbb
je,pt
sub
xchg
cltd
or
mov
xchg
cmp
pop
mov
adc
lds
push
mov
push
dec
sbb
mov
mov
pop
jge
pop
test
into
inc
add
into
es
scas
push
adc
jl
lock
shl
jmp
insb
ss
gs
enter
cmpsl
incb
loope
xchg
sbb
mov
in
enter
dec
jg
xor
pop
fs
xchg
les
cmp
fbld
enter
iret
outsl
fwait
out
dec
inc
dec
sub
scas
xor
outsl
push
sbb
xchg
out
ds
stc
in
mov
shll
push
mov
xor
adc
mov
or
ljmp
sbb
adc
jge
xor
push
jne
mov
int
repz
std
push
sbb
add
incb
stc
lea
gs
mov
cmp
nop
adc
iret
and
and
std
in
xchg
xchg
xchg
sti
ja
jae
nop
inc
pushl
cmp
mov
sahf
pop
loope
aas
lcall
pop
popa
jo
sbb
jecxz
cli
movsb
pop
dec
xlat
roll
imul
add
shll
js
xor
pop
arpl
cmp
mov
loope
loopne
in
mov
sbb
outsb
fsub
rorb
cmpsl
pop
fistpll
push
xchg
pop
pop
cmc
mul
push
pop
popl
aaa
inc
xchg
xchg
popa
or
dec
pop
adc
jmp
lock
cld
add
inc
sbb
jmp
push
sbb
xchg
pop
mov
and
cmpsb
rcl
fldcw
push
sarb
cmpsl
icebp
test
rolb
lret
fwait
lods
nop
mov
xor
adc
cli
xchg
cmp
test
cmp
popf
sub
jbe
and
pop
cmp
xchg
sbb
loopne
xchg
mov
push
movb
test
or
mov
daa
sbb
xchg
fcomp
divl
insl
sbb
xchg
pushf
xlat
push
clc
cmpsl
aaa
pop
inc
sub
xchg
mov
dec
movl
in
sub
lods
lods
push
repz
mov
lods
sbb
daa
sbb
jge
in
fdivrl
bound
inc
add
mov
xchg
mov
xchg
push
js
std
mov
lret
mov
cmp
leave
pop
lret
cmp
mov
sbb
or
jae
xchg
ficomps
push
pop
das
shll
inc
in
mov
adc
out
push
pop
xor
adc
popa
pushl
sub
jae
aas
les
js
push
pop
adc
sbb
jge
jge
mov
fiadds
int
loop
mov
cmpsb
xchg
inc
push
subl
jb
fidivl
mov
cmpsl
xchg
mov
pop
outsl
lea
aam
loope
out
aas
sub
bound
sbb
jo
and
loop
push
frstor
xchg
ja
shlb
test
cmp
xchg
jo
sbbl
inc
inc
cmp
insb
inc
pop
dec
cld
repz
frstor
idivl
push
push
pop
out
dec
iret
imul
inc
inc
fcoml
ljmp
sub
inc
popa
xlat
sbb
and
jns
push
popf
mov
sbb
stos
inc
adc
xor
mov
xchg
xor
mov
sub
jo
xchg
aaa
test
mov
jne
mov
pop
scas
roll
pop
jns
jge
in
int3
aas
inc
mov
int
mov
je
add
cmc
cmp
divb
cli
or
in
jle
pop
icebp
pop
sub
bound
ret
mov
xchg
jb,pn
adc
sbb
xchg
jnp
adc
std
stos
inc
pop
jno
stos
mov
mov
call
fsubs
ljmp
movl
mov
je
fildl
lcall
or
or
test
stos
inc
lcall
and
leave
push
push
mov
hlt
shll
ja
mov
cmp
call
cmpsl
pop
sbb
push
gs
out
xchg
xchg
fimull
inc
cmp
call
outsl
es
movsb
call
adc
and
xor
inc
jo
sbb
out
dec
mov
sti
mov
inc
adc
aaa
adc
cmp
cmpsl
xchg
fisttpll
jg
inc
jg
fs
push
iret
mov
push
xchg
push
aam
rol
mov
push
xchg
aam
adcb
cwtl
dec
add
lea
es
jno
leave
push
lock
and
ja
repz
fcomi
dec
sub
add
xchg
jns
adc
btr
mov
mov
iret
mov
je
fdivl
adc
jns
repnz
push
fists
aad
mov
inc
aad
iret
stos
xchg
push
fiadds
push
mov
cwtl
scas
aaa
call
repz
mov
sbb
jae
enter
je
mov
enter
out
xor
rcr
and
and
jl
incb
ret
mul
pop
cmp
pop
dec
push
xchg
add
aas
inc
out
xor
push
repz
push
cltd
dec
outsl
stc
and
faddp
gs
or
mov
nop
fs
or
pop
xchg
outsl
call
add
into
dec
xchg
dec
mov
or
jbe
mov
bound
push
cmp
or
arpl
push
sub
insl
fstl
dec
stc
les
mov
push
leave
lea
ficomps
xor
cwtl
sbb
pushf
sub
cs
inc
popa
sarl
pop
or
lods
enter
in
rclb
pusha
inc
sub
mov
sbb
std
dec
dec
sub
aaa
jbe
sti
dec
mov
inc
sbb
dec
push
push
add
hlt
push
push
xor
dec
ja
aad
mov
dec
mov
out
push
fldt
fldcw
dec
inc
cli
stos
sbb
adc
rcll
add
fisttpl
pop
jge
aaa
inc
jae
clc
popa
mov
xchg
xchg
les
sub
daa
lahf
cmp
fucom
add
xchg
xchg
aam
movsl
lds
mov
popf
outsl
sbb
mov
imull
shlb
pop
add
ss
int3
rorb
lcall
into
imul
mov
cmovnp
sbb
pop
enter
jecxz
fwait
xchg
iret
mov
fimuls
arpl
or
loope
cmpb
in
popf
movsb
insl
iret
enter
xor
dec
adc
int3
xchg
bound
outsl
aas
in
fwait
cmpsb
out
outsl
mov
xchg
mov
js
sarl
mov
xchg
pop
push
inc
das
jge
movl
pop
shll
sbb
lahf
add
jl
arpl
add
lods
push
popf
sub
ds
dec
aas
out
xchg
fs
das
pop
sbb
out
xor
pusha
enter
mov
jmp
mov
iret
jmp
mov
xchg
in
lahf
call
dec
popa
mov
daa
andb
sub
sub
push
pop
xor
nop
stos
push
jne
adcb
lret
jg
cmp
ficoml
call
std
jo
imulb
mov
push
sbb
xor
iret
xor
jecxz
cmp
adc
xchg
mov
lea
xchg
addr16
lret
idivl
inc
xor
insl
adc
mov
jo
inc
inc
rolb
push
push
xor
add
mov
and
fisttpl
mov
and
imul
sbb
ret
cli
fistpl
nop
repz
shl
jns
test
inc
fdivrl
movsb
cwtl
sti
bound
cmp
cmpsl
ljmp
rolb
xor
call
sub
push
jl
push
movsb
rcll
imul
sbb
mov
xchg
pop
push
sub
aad
enter
movsb
xchg
push
xchg
test
xor
mov
cltd
je
arpl
mov
dec
sub
lock
and
out
jle
inc
mov
sar
jg
call
lea
sbb
adc
subb
out
enter
mov
into
pushf
leave
inc
outsb
notl
orb
movsl
push
sub
test
adc
jmp
jl
xor
cmp
rcrb
rorb
cmp
push
nop
loop
push
cli
and
pop
fcoml
cwtl
mov
jg
lahf
or
cmc
aas
test
mov
push
test
sbb
pushf
jecxz
in
scas
lcall
xchg
cltd
imul
pop
out
or
rcrl
cmpsb
fmuls
jnp
enter
mov
clc
ret
pushf
int
mov
sub
or
iret
mov
aas
orl
mov
mov
jb
xchg
push
nop
je
lret
push
cmp
push
jb
adc
or
das
outsl
mov
lods
decl
push
adc
pop
sub
aas
out
shl
push
out
inc
scas
fisttpl
mov
cmp
and
or
cmpsl
fmull
xchg
sub
or
adc
test
incl
push
mov
sbb
xor
dec
les
add
cmp
int
jge
mov
cmp
adc
test
imul
inc
push
push
insl
xchg
out
shr
jmp
ret
cld
inc
mov
jo
sbb
push
push
jmp
in
cmc
and
xor
and
aad
pop
inc
dec
jns
movsb
addr16
lods
faddl
push
pusha
add
mov
je
testl
push
test
lret
hlt
jne
repz
xor
mov
insb
pop
lret
xlat
xchg
cmp
jmp
sub
es
fisttpll
fs
imul
loope
sbb
rcrb
xchg
popa
mov
pop
push
imulb
aam
xor
dec
jecxz
adc
cmp
sbbl
add
mov
sahf
xor
or
dec
mov
mov
push
mov
adc
xchg
in
pusha
push
adc
testb
dec
mov
jg
jge
xor
or
add
push
inc
fistl
mov
mov
stos
aaa
jns
jno
sbb
dec
xor
icebp
insb
popf
aas
fidivl
clc
jo
std
cli
mov
xchg
movb
add
push
lcall
popf
xchg
rorb
pop
cmp
xchg
ljmp
pop
sub
inc
in
loopne
add
mov
sbb
add
xlat
and
or
dec
ret
push
xor
and
subl
jge
xchg
push
adcb
aas
sbb
push
test
movsb
cltd
push
adc
inc
iret
mov
pop
pop
adc
or
pop
or
inc
xchg
push
das
cmpsb
inc
aad
jl
lea
mov
sub
xchg
cmpsb
out
dec
inc
sahf
rcrb
dec
xchg
adc
push
xchg
jns
or
ja
sti
xor
pop
bnd
push
push
mov
ss
pcmpeqb
ret
jge
push
iret
xchg
iret
je
call
out
sub
in
cmpsl
cmp
pop
cmpsl
sbb
adc
jne
stos
loope
mov
push
imul
add
dec
push
jae
sbb
xor
movl
loope
jecxz
daa
sbb
mov
loope
dec
call
xor
cmp
dec
rorl
jbe
inc
xor
mov
ljmp
push
xchg
lea
incb
insl
mov
cmp
add
push
fistpll
dec
cwtl
sbb
xchg
lret
push
xchg
push
mov
fwait
mov
pop
mov
js
and
fsubrs
push
roll
rol
icebp
pop
push
xchg
jmp
in
nop
sub
addr16
aad
outsb
aam
aaa
and
fucomp
adc
mov
lret
nop
push
movsl
aas
mov
cmp
push
aaa
mov
ret
xchg
push
sarl
xorb
push
dec
xchg
repz
stos
push
xchg
xchg
out
xlat
enter
sbb
cmovo
sahf
iret
push
jp
pop
push
sbb
into
mov
mov
lret
lcall
and
inc
stos
loopne
jae
mov
out
sbb
scas
push
xchg
lock
push
bound
mov
mov
xor
leave
and
fistl
sub
mov
les
jne
jbe
mov
sub
lock
test
hlt
sbb
xor
dec
repnz
insb
enter
and
daa
or
push
push
sarb
pop
flds
xchg
out
xlat
add
inc
mov
cmp
cmc
fildl
stc
jne
sarb
daa
rcrb
loope
fisubrl
stc
clc
sarl
testl
mov
dec
inc
inc
sbb
negl
cmp
cmpsb
ret
aas
gs
xchg
aas
sub
dec
aas
and
dec
out
xchg
push
jo
lea
push
cwtl
mov
push
lds
sbb
push
push
sahf
adc
inc
sub
lods
jb
setl
mov
sbb
loope
push
test
mov
inc
xor
jl
rcll
lds
inc
dec
and
xor
jl
nop
fildl
loop
sar
out
xchg
jmp
pushf
xor
xor
sub
xchg
mov
loop
inc
out
push
pop
mov
fsubl
movsl
pushf
sahf
pop
arpl
cmp
adc
mov
push
and
jge
pushf
dec
shrl
sub
into
xchg
popa
inc
xchg
test
push
push
test
into
xor
add
pop
pop
lods
push
and
das
movl
popf
dec
jnp
lea
fistl
jno
inc
shrl
sbb
add
push
jge
add
sub
push
adc
je
mov
sbb
sub
addl
jle
mov
test
push
adc
sbb
cmpsl
movsb
mov
jnp
mov
mov
xchg
stos
mov
add
imul
out
rol
int
xor
dec
lret
xchg
sarl
mov
sbb
xchg
clc
aas
dec
pop
rcr
ret
xchg
int3
sahf
filds
inc
incl
jl
outsb
sahf
cmc
inc
and
xchg
inc
lds
or
mov
int
and
adc
aas
jo
sbb
in
das
pusha
test
or
cmp
dec
aam
aam
xchg
popa
xchg
notb
or
mov
repnz
pop
shr
push
mov
aam
daa
add
aad
js,pn
in
out
push
test
aaa
xor
mov
mov
jmp
mov
ret
out
and
test
mov
orl
pusha
xor
add
sbb
cmpsb
mov
xchg
jo
adc
clc
xlat
shlb
mov
hlt
and
shlb
stos
pop
cmp
inc
or
or
shlb
xorl
sbb
mov
mov
cmp
pop
in
in
pop
xchg
mov
inc
in
rolb
xchg
unpcklps
fstps
ret
enter
mov
dec
aam
inc
enter
adc
ficoms
negb
imul
push
adc
mov
out
ss
pop
adc
pusha
push
push
cmp
jo
shlb
push
push
dec
in
fs
insl
jbe
in
in
or
cltd
cltd
fidivrs
jecxz
xchg
cmp
jp
mov
popa
and
xlat
popf
add
aad
add
dec
and
mov
cmc
subb
xor
cmp
inc
or
mov
pop
push
ja
jae
jne
pop
jl
or
mov
xchg
and
fldenv
loopne
mov
je
xchg
cmp
ss
rorb
cmp
mov
pusha
xchg
jb
pop
pop
mov
sbb
pushf
sub
jbe
pusha
push
inc
daa
jle
sarb
xor
mov
xchg
add
mov
xchg
ljmp
xchg
in
push
xor
mov
jnp
inc
jae
pop
add
or
fs
pusha
rcll
fldl2t
shr
xor
mov
xchg
shll
jle
pop
in
je
xchg
arpl
inc
push
cmp
cli
sub
lea
sbb
dec
xchg
lods
rcr
lahf
popa
stos
lea
das
icebp
xchg
jl
push
je
mov
sub
fildll
adc
lods
ficompl
cmp
ret
aas
add
mov
cmpsl
and
push
push
mov
stos
dec
sti
cmc
jae
enter
add
in
test
scas
data16
jmp
xchg
jmp
xchg
repz
ret
stos
lock
sub
mov
lret
xchg
sbb
int3
test
mov
inc
or
loope
stos
inc
xchg
adc
xor
or
shrb
push
cmc
sbb
jno
vpmaxsw
xchg
xchg
cmpl
loope
int3
push
jne
movsb
push
dec
div
imul
jne
xchg
xor
inc
imul
stc
or
and
pop
in
in
add
mov
sbb
arpl
xchg
icebp
fcmovnb
pop
test
jne
mov
or
and
ss
movb
and
inc
ret
push
cmc
shrb
or
xchg
mov
and
sub
xchg
mov
sar
fsubrp
sub
movsb
mov
int
inc
inc
inc
out
push
cli
mov
cwtl
dec
iret
lds
sbb
mov
cli
pop
repz
adc
test
and
loope
xchg
sub
push
scas
pusha
std
std
scas
aas
lea
sbb
lds
sbb
dec
mov
dec
out
push
inc
mov
xor
mov
mov
jp
jne
xchg
add
sub
js
inc
outsb
fcomp
jns
mov
pushf
jb
cmpsb
sbb
xlat
in
aas
fnstsw
aas
push
lods
mov
cmp
es
fistl
sub
mov
sub
test
and
mov
inc
and
jb
fiadds
ja
fwait
stos
inc
sub
scas
mov
je
add
xchg
mov
or
push
dec
inc
add
jns
jno
mov
mov
jne
lret
inc
push
cmp
icebp
jle
adc
mov
sub
pop
shll
das
bound
xchg
sbb
add
stc
jge
aas
push
loop
loopne
pop
loop
cmp
shlb
add
sarl
sub
jbe
je
faddp
xor
jo
mov
push
test
cmp
sbb
xlat
dec
xor
test
push
pop
imul
sub
cwtl
or
lret
repz
jl
add
pushf
cmp
inc
movsb
loopne
outsl
jmp
pop
loope,pn
inc
imul
lcall
scas
ljmp
push
aam
fists
rorb
add
les
adc
mov
and
adc
divb
push
dec
push
insb
movl
rcrb
adcb
call
cmp
cld
sbb
jns
push
push
mov
insl
lds
and
je
jbe
push
jo
jge
stc
sbb
jb
insl
and
das
xchg
fisttpl
stos
in
jbe
add
in
inc
fcoml
lods
dec
enter
lods
ja
jno
scas
xor
adc
addr16
inc
jle
fidivrs
aas
mov
push
add
int3
mov
lods
mov
nop
push
mov
mov
enter
xchg
jbe
ret
pop
vsqrtps
push
jle
push
fdivs
xchg
out
in
fwait
out
iret
pop
adc
mov
lea
mov
dec
xor
push
xor
sbb
dec
pop
xor
xor
xchg
aas
mov
jb
enter
negl
mov
daa
dec
gs
xchg
rolb
lods
aas
sahf
adc
jnp
mov
inc
mov
lds
jge
lret
popa
fs
jle
cmp
mov
fadd
lret
int
mov
push
repnz
out
ror
and
pop
pop
mov
cli
lfs
roll
aas
push
push
inc
sti
or
xor
xor
sub
into
cwtl
sahf
inc
aaa
incb
nop
dec
lea
imul
dec
pop
or
or
xchg
adc
loope
out
jo
push
aam
inc
push
inc
mov
hlt
movsb
enter
shr
dec
cmpsl
sub
int
pop
cld
mov
dec
sub
ret
mov
xchg
ss
jne
movl
add
xchg
mov
inc
mov
cmpsl
xlat
cmp
fwait
push
subb
lcall
mov
rorb
pop
in
enter
inc
hlt
dec
insl
and
or
jb
jle
fldenv
out
ret
inc
xchg
inc
adc
js
gs
enter
or
jle
lds
push
mov
lret
jg
arpl
jno
adc
push
stos
int
mov
outsb
jo
adc
fnstsw
pop
pop
icebp
mov
repz
sbb
inc
aam
mov
fiaddl
xchg
jge
clc
fisubrl
scas
int
inc
dec
es
scas
out
sub
add
dec
jle
aam
call
and
lock
mov
mov
aas
iret
je
int3
mov
dec
fnsave
xchg
ret
xor
ds
outsb
int3
and
fcomp
insl
push
mov
lea
push
fcoml
cld
sub
andl
repnz
mov
ret
inc
sub
pop
test
notb
in
mov
xchg
sbb
int3
dec
in
js
sub
cmp
or
ja
fidivl
repnz
pop
mov
adc
push
pop
push
fiadds
ljmp
add
jnp
mov
shr
pop
fs
sbb
or
fwait
push
xchg
mov
lret
or
sub
cmp
xchg
add
in
cmpsl
pop
ds
add
pusha
push
frstor
sub
fwait
js
in
arpl
mov
xchg
mov
pop
push
dec
cld
movntps
push
add
stos
ret
std
das
push
stos
jb
lret
movl
mov
jge
cli
jmp
in
jg
scas
push
fnsave
and
inc
out
inc
push
sub
fcmovb
testb
and
aad
loop
push
sub
dec
mov
out
inc
jb
pop
outsl
pop
test
xor
mov
cmpsb
mov
fldenv
mov
sti
cwtl
subl
cmpsb
aas
pusha
mov
xchg
inc
or
and
add
push
cs
mov
add
lret
and
adc
cmp
or
sbb
xchg
cmp
rcl
shr
cmpsb
inc
shll
cmp
adc
inc
push
ja
mov
pop
rol
leave
xchg
hlt
mov
mov
popa
xor
jg
jle
xchg
lcall
mov
adc
stos
movsl
dec
popf
adc
push
cld
mov
out
mov
mov
das
loopne
xor
or
and
add
repnz
sbb
inc
mov
push
loope
sub
xor
outsl
imul
jno
or
xchg
jno
jle
bound
sbb
dec
movl
sti
jmp
rep
testl
push
nop
loope
ja
jae
outsb
test
daa
mov
xlat
jecxz
mov
shl
mov
xchg
xchg
pop
test
nop
les
shrl
es
pop
ffreep
iret
insl
mov
and
add
pop
push
inc
adc
xor
mov
push
outsl
mov
adc
jns
pop
aam
jle
xor
and
cmp
xchg
gs
xor
lods
insl
addb
jmp
push
or
jno
aam
fwait
aas
stos
xchg
loopne
push
pop
rcl
push
cmpsb
lea
mov
mov
sbb
push
loopne
or
bound
movsb
ret
pop
stos
dec
out
out
jmp
xchg
in
fmul
or
jbe
fwait
stos
movsl
push
push
dec
test
sti
mov
fwait
push
push
mov
push
jp
mov
aas
fists
insl
das
int
dec
gs
pop
cmp
sub
sbb
push
jl
pop
push
xchg
outsl
add
in
mov
shlb
aas
cld
adc
out
and
ret
lock
inc
and
xor
fwait
movl
inc
ja
in
pop
adc
adc
dec
popa
int3
insb
cs
or
mov
rol
jecxz
or
push
lret
dec
xchg
cmp
int3
and
xchg
insl
test
sbb
inc
xchg
scas
cmc
cmpsb
addl
sarl
test
xor
inc
xchg
divl
and
mov
cmp
xor
iret
das
pushf
mov
frstor
insl
adc
sahf
add
enter
stos
add
adc
daa
inc
mov
dec
mov
mov
xor
inc
and
dec
sbb
sub
stc
es
xor
sahf
cmpsl
sbb
jno
repz
ljmp
movsb
add
daa
push
mov
adc
mov
mov
aad
inc
mov
add
jae
mov
sub
mov
inc
aaa
lcall
xchg
adc
jae
sub
movsb
inc
and
mov
push
ret
dec
dec
pop
mov
cmp
xlat
mov
xchg
aad
pop
sub
nop
mov
ds
es
mov
test
fmull
js
sbb
mov
lret
icebp
aaa
sar
aaa
pop
inc
sbb
pop
add
mov
add
jnp
xchg
adc
out
push
xor
pop
roll
push
push
addr16
enter
add
add
xchg
add
jo
mov
pop
xor
rcrl
cmp
enter
imul
and
inc
sbb
xor
mov
je
add
fwait
or
dec
pusha
mov
cmc
adc
xor
addr16
mov
loopne
into
inc
push
loop
lret
les
xchg
xchg
inc
or
xchg
pop
jnp
arpl
in
add
sbb
test
es
lods
rorl
bound
mov
icebp
pop
add
inc
pop
xor
bound
pop
cs
xchg
xchg
in
ljmp
mov
lret
movl
xchg
aad
mov
or
out
aas
cmc
sub
push
sub
xchg
jg
xchg
rorb
test
nop
std
into
cmpl
push
in
scas
cli
fistl
fwait
rol
ss
mov
xchg
inc
inc
add
xchg
cmp
inc
mov
or
scas
sahf
movsl
enter
pop
mov
adcl
test
xchg
int3
xchg
xor
jp
jmp
lea
jmp
in
jle
push
es
call
insb
shll
sub
int3
inc
pushf
imull
scas
jmp
es
mov
add
push
dec
mov
in
test
add
enter
mov
adc
or
lea
push
mov
push
and
mov
test
pop
enter
test
inc
cwtl
shlb
jl
cmpl
cmp
rolb
lods
inc
inc
pop
push
addr16
mov
int
cmpl
call
jbe
jl
and
inc
ljmp
jl
dec
test
lock
pop
leave
loop
inc
push
faddl
aam
shlb
mov
aam
scas
xor
mov
cmp
mov
and
pop
inc
xchg
mov
cmp
outsb
insb
xchg
cmp
movsb
cwtl
and
pop
fdivs
push
push
imul
je
cmp
insb
stos
xchg
push
or
aas
lea
inc
inc
sub
mov
or
ficoms
xorl
and
call
call
clc
fadds
jge
cwtl
mov
mov
adc
or
xchg
mov
stos
pop
roll
and
sbb
aas
xor
pop
xchg
pop
fbld
in
subb
dec
sub
loopne
notl
or
lods
enter
adc
pop
add
and
push
jo
push
add
lret
repz
or
inc
xchg
scas
jo
aad
xor
mov
js
adc
xchg
fs
aas
adc
movsb
push
pusha
enter
negl
push
ja
rep
push
jb
enter
sbb
pop
inc
fwait
mov
cmc
lods
ljmp
sahf
inc
lods
aad
jle
push
in
xchg
adc
dec
xchg
mov
sbb
in
push
add
dec
xor
stos
jp
inc
xchg
jge
fwait
imul
jp
mov
mov
call
pop
test
or
xchg
cmp
imul
or
lds
inc
adc
fimuls
inc
mov
add
mov
ja
xchg
inc
xchg
mov
test
sbb
shlb
xchg
cwtl
lea
sbb
dec
sub
xor
jb
xchg
dec
pop
shl
out
out
aas
add
aad
repnz
sahf
fs
sbb
cmp
hlt
js
int
mov
xchg
add
inc
mov
movsl
mov
mov
daa
bound
jecxz
sbb
cmpsb
sub
pop
mov
mov
mov
push
mov
test
mov
es
fs
insl
ds
outsl
fmuls
or
aas
outsl
add
jl
xchg
pop
ret
jo
or
xor
and
pop
pop
notl
xchg
xchg
xor
rol
adc
aaa
clc
pop
hlt
jbe
data16
dec
hlt
jecxz
inc
sahf
xchg
jecxz
or
scas
mov
inc
push
xor
and
iret
sbb
jae
aad
jno
enter
mov
pushf
das
xor
xchg
std
and
mov
inc
xor
movb
out
cli
and
shl
mov
call
rorb
subb
aam
pushf
push
cmp
fisttpl
mov
cmpsl
aas
pop
xchg
inc
insl
sbbl
xchg
dec
xchg
add
ja
adc
sub
ljmp
mov
loopne
xchg
xlat
pop
inc
int
adc
push
xchg
add
data16
cli
test
inc
xchg
xchg
in
pop
inc
push
clc
add
nop
fiadds
imul
fsubrs
push
aas
adc
aam
clc
pop
push
test
leave
jno
sbb
jg
cmpl
xor
mov
jnp
mov
lahf
cli
mov
dec
xlat
aas
loop
pop
std
lea
fsub
sbb
xchg
cmp
or
dec
repz
shr
cmp
mov
or
push
xchg
xchg
xor
sub
inc
or
inc
and
adc
cld
fmulp
sub
cltd
xor
stc
add
enter
adc
icebp
push
pusha
dec
dec
mul
sbb
bound
inc
enter
cli
pushf
mov
push
fisttps
mov
fdivs
pop
sub
fcomps
adc
push
inc
scas
scas
stos
popf
adcl
jmp
or
ss
mov
sub
cmpsl
add
loop
pop
mov
mov
xlat
jae
xchg
cmpsb
faddp
cmp
pop
jbe
xchg
enter
xor
cli
popf
sbb
xchg
ret
nop
push
push
ds
xor
mov
sub
sbb
in
jae
repnz
loopne
out
popa
in
cmpsb
add
adc
dec
ja
aas
fs
mov
out
out
mov
bound
adc
in
int
add
jmp
mov
ss
imul
push
xor
or
rclb
cmp
lahf
scas
mov
cmp
incb
xchg
jnp
je
cmp
fmulp
mul
in
sbbl
cmp
push
cli
jecxz
into
jle
pop
mov
cld
test
lea
inc
sarl
jl
push
jne
call
or
in
xchg
dec
add
xor
xlat
leave
cmp
cmp
lods
pop
cmp
cmp
out
mov
inc
shlb
fdivrl
pusha
lds
gs
push
in
fmul
cmpsb
jmp
mov
repz
or
mov
outsb
ret
and
rcrb
cmp
xchg
or
pop
incl
or
pop
arpl
in
fidivl
add
dec
sub
mov
dec
and
arpl
js
dec
or
fstl
nop
stc
cli
subb
push
lcall
inc
pop
cwtl
inc
jg
inc
sbb
out
inc
cmp
adc
stc
test
test
pop
push
mov
add
pop
sub
add
xchg
sbb
rol
add
pop
xchg
fs
stos
roll
inc
xor
fiaddl
xor
dec
push
jge,pn
xor
inc
in
test
pop
ficoml
sarb
mov
add
and
dec
push
fs
push
dec
aaa
stc
movl
push
test
iret
call
sub
xchg
fadds
stos
mov
ljmp
dec
out
xchg
sub
loop
fildll
movsb
xor
jecxz
sub
imul
or
call
mov
add
lcall
scas
or
hlt
ljmp
shl
inc
xchg
sub
mov
popl
inc
sbb
xor
test
enter
jl
aaa
cltd
fisttpl
jecxz
lahf
nop
loopne
dec
or
jnp
stos
and
adc
fcompl
lods
fs
adc
sub
cmc
in
adc
pop
xchg
shl
push
fsubrs
in
pop
xchg
jno
mov
lds
fs
inc
rcl
pop
xchg
xchg
test
mov
sbb
mov
or
sbb
lcall
test
add
data16
out
xchg
sbb
loope
aas
in
push
sahf
mov
int3
imul
xchg
or
gs
jo
push
pop
inc
adc
cld
cmc
bound
xchg
inc
sbb
in
rcll
enter
mov
pop
lds
out
rcl
push
push
xor
test
data16
decl
popf
push
js
pop
loopne
adc
push
mov
cmpsl
stos
xchg
sbb
stos
iret
nop
cld
std
xchg
and
pop
add
and
inc
fstps
bound
xchg
ficomps
jb
aas
mov
leave
and
cmp
fiadds
jno
add
add
xor
call
pop
stos
mov
xlat
adc
and
pop
xchg
mov
mov
aaa
dec
pop
or
cs
in
sub
inc
xchg
mov
hlt
jbe
mov
mov
sub
aaa
mov
mov
aas
outsb
add
lcall
movsl
pusha
jmp
sbb
lea
adc
mov
push
inc
xchg
push
xchg
fmul
rcrl
sub
jb
jge
mov
fidivs
outsl
fdivr
push
xchg
clc
jae
lods
test
es
xchg
negb
rol
test
dec
jl
xlat
ljmp
int
loop
rcll
xchg
and
jae
stos
sbb
pop
mov
push
dec
mov
cmp
mov
imul
mov
out
xchg
mov
push
fwait
out
test
xchg
ss
inc
out
or
xor
add
push
ja
mov
test
xchg
ss
ljmp
leave
aam
and
push
inc
adc
add
inc
mov
scas
jle
mov
in
enter
inc
push
inc
sahf
je
add
ret
in
sub
jno
mov
js
lods
push
orl
inc
add
ret
adc
gs
or
sub
jns
sbb
push
or
sbb
out
jbe
in
dec
jl
jno
std
pop
mov
cmp
push
inc
fwait
sbb
cwtl
fldpi
jmp
xchg
testl
popf
pop
jo
ror
or
scas
repnz
cmp
add
xchg
inc
mov
mov
int3
shl
ds
sbb
mov
pop
inc
push
adc
aas
inc
and
out
aad
push
int3
ficomps
test
mov
popa
add
gs
push
movsb
jl
mov
push
dec
mov
mov
movsl
int3
pop
push
inc
cmp
repz
out
or
cmpl
aas
cmc
inc
xchg
or
mov
push
mov
cmpl
pusha
in
jp
push
xchg
add
push
jle
xchg
out
push
inc
cli
dec
cmp
les
out
inc
ret
pop
in
fs
and
push
mov
adc
inc
pop
outsl
pop
repz
cmp
imul
jno
push
adc
xchg
lret
sub
sub
ret
addr16
mov
js
imulb
mov
push
std
lea
aas
sub
mov
les
mov
inc
add
movsl
and
sub
outsb
outsl
ljmp
stos
mov
add
jle
mov
xor
inc
mov
push
aad
add
popf
xchg
or
jbe
xchg
or
xchg
push
jmp
lahf
aas
insl
inc
and
pop
inc
add
pop
dec
nop
rorb
mov
inc
das
je
push
fmuls
lret
xor
or
filds
mov
push
xor
mov
pop
sbb
stc
mov
nop
out
mov
push
cltd
stos
cld
gs
cmc
sbb
fnstcw
and
fisttpl
inc
shll
inc
dec
jge
xlat
aas
out
inc
aad
sub
enter
pop
rorb
aas
mov
jno
stos
fldcw
popa
push
jg
inc
mov
loopne
cmp
insl
or
xchg
mov
mov
pop
popa
cmp
aam
daa
lret
xor
xor
inc
test
adc
out
mov
xchg
lahf
or
aas
dec
aas
aaa
adc
inc
xchg
push
xchg
lds
push
std
cltd
add
pop
jbe
adc
xor
xor
iret
dec
xchg
cltd
or
xchg
movsb
jl
and
and
sbbl
sub
push
sbbl
loop
rorl
int
into
shl
movsb
lds
push
stos
cwtl
fiadds
sarl
mov
jle
pop
push
jecxz
stos
push
iret
dec
jg
mov
mov
dec
xor
in
pop
in
cmp
push
and
sub
pop
stos
fcompl
adc
shr
mov
clc
rcrl
loopne
hlt
xchg
les
mov
push
pop
out
rorl
and
lret
lret
jo
inc
push
imul
fwait
jl
mov
clc
pop
icebp
jae
xor
aad
push
pop
pop
ret
out
mov
push
sbb
int3
cmp
out
or
cmpsl
ss
aaa
xchg
xchg
mov
dec
and
pop
loop
xor
dec
mov
imul
jnp
out
inc
adc
xchg
mov
out
inc
xor
ss
sbb
test
sub
jae
xor
std
jbe
pop
xchg
je
xchg
cmp
inc
mov
cwtl
adc
lds
sti
sti
xchg
lods
loope
jmp
sub
fcmovnb
out
add
filds
or
repz
test
mov
mov
test
rcrb
mov
add
das
sub
cwtl
mov
lea
add
push
sti
pop
popa
test
mov
push
add
jecxz
adc
dec
nop
xor
sarl
fsubrl
mov
xchg
add
jno
subl
notb
cli
popa
mov
xlat
sarl
add
mov
lcall
pop
mov
mov
lods
int
xchg
cmp
inc
inc
fidivrl
adc
cmp
cmp
faddl
cltd
jmp
and
testl
loopne
mov
mov
or
ss
pop
mov
rcrb
or
dec
jae
lds
push
ficomps
fldenv
iret
xchg
mov
inc
das
loope
aaa
mov
inc
clc
xchg
jne
ret
std
addr16
xchg
mov
xchg
fldl
dec
push
les
dec
test
orl
cmp
cwtl
dec
outsl
ret
bnd
sbb
push
adc
or
inc
ret
and
inc
dec
fs
loopne
lcall
hlt
sahf
jb
cltd
popa
push
lcall
push
push
stos
mov
pop
outsb
inc
dec
push
xor
and
out
dec
cltd
mov
mov
jno
iret
mov
hlt
int3
cmp
cmpl
ret
cmp
push
aad
xor
xorl
dec
out
push
inc
jno
xchg
cmpl
push
cmp
mov
outsb
jbe
je
sub
push
fidivs
or
sbb
sub
xor
leave
xchg
jg
pusha
decb
sarb
pop
inc
rcll
push
pop
leave
mov
ficoms
adc
jbe
sub
icebp
enter
add
xchg
xor
ret
mov
sti
push
mov
inc
out
pop
mov
fdivrs
mov
add
mov
mov
stos
addr16
cmp
aas
lcall
pop
lea
cmc
jmp
das
mov
xchg
ret
cld
sub
push
or
xor
rcl
mov
dec
and
cmc
xor
jmp
inc
mov
xor
dec
in
adc
imul
dec
das
xchg
test
imull
insl
rclb
jbe,pt
leave
aas
scas
loopne
sti
xor
js
aad
jae
movl
xor
popf
mov
ds
stc
xor
xchg
clc
out
cld
inc
fcoms
in
lcall
pusha
imulb
sub
mov
test
xor
addr16
push
jp
xchg
cmpsb
mov
in
inc
inc
mov
push
fsubrl
jmp
notb
lret
jne
movsl
aas
xchg
push
daa
call
fnsave
xchg
es
sarb
push
fldenv
insl
test
in
divb
push
es
aaa
aam
lret
jbe
cs
in
fimull
xchg
add
mov
in
enter
out
jo
lds
mov
pop
lea
xchg
mov
fs
mov
mov
rorl
lods
shl
or
pop
jmp
push
push
sahf
jg
cmpb
xor
push
xor
aas
pop
xor
mov
push
stos
jle
repz
mov
les
push
cli
xor
dec
xor
imul
adc
push
insb
push
sbb
sub
pop
enter
pop
jae
jge
fsubr
jge
xchg
rclb
movsl
jmp
loop
mov
push
inc
jecxz
aam
mov
jno
rclb
insb
ss
mov
cmp
sub
sbb
push
clc
mov
or
push
push
cmp
dec
jns
ja
inc
dec
orl
xor
xor
mov
pop
inc
cmp
xor
dec
sub
shll
xchg
cmp
lock
mov
movl
add
dec
xor
icebp
adc
mov
xlat
add
mov
add
aam
ds
push
xchg
add
and
xor
mov
aaa
jge
in
inc
pushf
mov
call
rorl
adc
jns
aad
out
xlat
inc
sub
push
push
mov
dec
mov
mov
pusha
jl
mov
pop
fwait
outsl
jg
movsl
xchg
mov
in
insb
and
outsl
data16
ss
aad
mov
aas
adc
fcoml
jmp
psubusw
test
xchg
nop
mov
das
dec
aam
fildll
xor
stos
ret
cmp
pop
push
bound
arpl
clc
sub
pop
fwait
sti
decl
in
mov
sahf
push
inc
jmp
pop
push
fildl
inc
mov
cwtl
or
inc
lods
dec
or
pop
inc
or
outsb
movsb
jno
cmpsb
push
testb
xchg
ja
sub
mov
xchg
inc
mov
inc
dec
xchg
inc
sbb
in
or
cmp
enter
inc
fst
push
clc
stos
std
xchg
xchg
jb
or
mov
enter
sti
std
push
test
and
add
adc
pop
xchg
and
mov
test
xchg
adc
sub
jg
jle
add
jmp
or
mov
add
lea
lds
leave
add
loopne
jle
sub
out
aas
rcl
lods
sbb
dec
jno
jne
in
sahf
mov
cmc
lcall
sti
scas
sub
mov
insb
sub
cmp
pop
cmp
popf
inc
test
adc
jns
hlt
add
jb
jecxz
pop
jbe
ss
xchg
and
cld
adc
sub
loopne
lcall
jnp
icebp
lret
aas
cmpsb
or
scas
test
adcb
repnz
mov
mov
xchg
frstor
xchg
ficomps
inc
ds
mov
mov
pushf
xchg
repz
cmpsl
rcll
push
aam
lret
sbb
push
stos
mov
mov
xor
push
movsl
xlat
shrl
or
les
pop
jl
daa
cmpsl
mov
and
test
mov
add
aam
mov
or
inc
pop
add
adc
lret
popa
imul
stos
xor
pop
aaa
insl
and
test
xchg
sub
xor
xchg
add
jmp
add
enter
std
push
cmp
pop
and
xchg
ljmp
xor
sbb
sub
shll
mov
dec
cmc
aad
ret
icebp
aam
cmp
sbb
into
sbb
cli
rcl
xor
xchg
cli
stos
arpl
icebp
mov
lahf
mov
inc
pop
or
add
pop
push
ljmp
icebp
vpslld
inc
xchg
xor
lock
stc
push
lods
sub
idivb
cmc
fsubrp
fsubl
add
push
loopne
sahf
xchg
pop
cwtl
sbbb
jecxz
cmpsb
testb
xor
pop
mov
mov
push
ret
sub
ret
out
sahf
mov
aas
enter
pop
push
xchg
call
es
xchg
adc
je
adc
cmpsb
adc
inc
jbe
fwait
in
sti
xor
or
movsb
xchg
dec
sub
add
lea
and
xor
and
les
mov
sub
push
pushf
or
pop
jae
mov
cld
jns
xor
mov
push
test
sbb
mov
dec
out
loop
sbb
sub
mov
push
xchg
sbb
add
adc
xchg
push
outsl
cmpsb
out
adc
xor
xor
push
adc
out
mov
xor
mov
push
lret
push
cltd
fucomi
cmc
pop
push
aas
adc
xor
fcomps
leave
aas
out
push
pop
dec
out
xchg
cmp
push
cmp
sub
xchg
cmpl
xchg
out
mov
jl
jg
mov
add
clc
daa
jle
fsts
push
mov
lods
mov
movsl
cmp
ss
cmp
or
xchg
fldenv
aas
sarb
jbe
cltd
cmp
inc
repz
out
daa
aam
clc
test
insb
stos
fisubrl
aam
sbb
jg
and
aas
les
iret
shlb
outsl
and
adc
push
xchg
mov
adc
dec
cld
cwtl
pop
je
add
test
dec
push
fsubs
push
lea
arpl
xchg
repnz
jmp
pop
movsl
add
and
adcl
add
pminub
mov
pop
xchg
jmp
ss
ss
pop
mov
lods
call
cmp
loopne
add
aam
xchg
push
push
mov
sbb
pushf
aaa
inc
pop
bound
adc
fldcw
mov
mov
xchg
xor
lahf
push
ja
loope
roll
push
cltd
push
or
push
push
push
sub
lods
ffreep
xor
jo
cltd
pop
lock
xchg
push
loop
imul
jb
add
scas
clc
xor
into
jo
lret
out
jmp
mov
dec
daa
xor
pusha
xchg
les
dec
cmp
sub
in
js
mov
jmp
lret
lcall
sbb
pop
push
inc
cmp
cli
pop
sbb
lds
mov
sbb
ljmp
out
cmp
nop
shl
hlt
xorl
cmpsb
push
xchg
mov
mov
adc
notl
mov
push
sarb
dec
lahf
orl
cmpsb
mov
jl
sbb
fsub
xlat
cmc
mov
jecxz
jbe
sbbb
and
fistl
orb
push
push
fisubrs
sbb
mov
xchg
int
hlt
and
ficoms
inc
inc
out
stc
or
cmc
loop
add
loopne
sub
pop
bound
je
push
es
imul
imul
push
sbb
push
loop
adc
mov
lods
adc
inc
and
mov
cwtl
test
mov
jmp
xchg
inc
xor
xchg
jle
out
sub
leave
pushf
test
aad
cmp
mov
mov
lods
outsl
and
out
in
or
cmp
aas
xchg
loope
enter
jg
fists
dec
mov
mov
jb
ja
xor
sbb
jge
outsb
arpl
jle
cmp
or
pusha
adc
cltd
mov
cltd
mov
ret
inc
icebp
sbb
cmp
subl
jnp
aam
pusha
lods
xchg
mov
fxch
mov
fstpt
cwtl
aas
jl
adc
lods
sbb
cs
pop
pusha
jo
ret
bound
xor
or
fistps
push
adc
aad
icebp
or
enter
enter
xchg
gs
xchg
call
lea
sub
xchg
mov
aad
repnz
xor
cmp
inc
movsb
js
jo
and
push
and
add
inc
arpl
rcll
mov
pop
adc
push
mov
xor
pusha
mov
cmp
add
mov
aad
inc
xchg
lahf
test
cmp
add
inc
popa
fcos
xchg
iret
roll
inc
fwait
xor
lret
xchg
push
or
xor
pop
cli
das
inc
scas
pop
fdivrs
add
push
inc
jmp
add
push
push
icebp
mov
lods
or
mov
ss
popf
jg
pop
cmp
mov
or
adc
add
aad
insb
or
aaa
push
movb
gs
addb
outsl
inc
cmp
pop
js
lea
popf
xchg
xchg
mov
rcr
shr
sbb
in
das
test
push
ret
sahf
sbb
push
jp
aad
or
cmp
jle
pop
ret
mov
xabort
dec
mov
hlt
stos
sahf
into
sbb
das
xor
mov
xchg
stc
jae
rcrl
inc
cmp
jecxz
push
in
popa
dec
mov
testb
push
xchg
xchg
sbb
push
jmp
les
xchg
inc
add
mov
xorb
mov
movsl
inc
in
sub
push
cltd
ret
xchg
sub
dec
jae
popa
sub
aaa
cmp
hlt
mov
loopne
push
push
adc
fistps
cld
ss
or
lods
mov
insb
cmp
divl
ret
mov
sub
push
fidivrs
inc
lods
dec
xchg
pop
jns
cmp
sbb
clc
and
jle
iret
xor
bound
or
lcall
jne
and
mov
shll
add
push
insb
pop
loopne
aas
xor
mov
js
mov
mov
mov
jge
jbe
xchg
aam
mov
xlat
push
jg
xlat
adc
push
or
cmp
shrl
sub
xor
cmp
xchg
inc
sbb
push
nop
das
add
inc
mov
mov
push
xchg
jb
aam
out
jl
mov
repz
dec
mov
add
insl
sahf
push
inc
sbb
loop
push
push
lods
fcoms
jae
pop
mov
push
test
lock
add
aas
lods
xchg
xchg
aaa
mov
in
or
ret
js
pop
cmp
mov
dec
xor
dec
ret
xor
sti
xchg
add
es
cmp
xchg
stos
xchg
sbb
rcrb
mov
mov
rclb
aad
fildll
in
xchg
add
test
scas
adcb
dec
mov
add
mov
out
xchg
xchg
jl
insl
enter
movsb
rclb
xchg
int
xchg
jle
xchg
popw
mov
sarb
add
mov
push
jmp
xchg
das
sub
dec
push
push
dec
leave
dec
mov
inc
jae
hlt
outsl
test
xor
mov
testb
aad
lds
mov
inc
dec
inc
or
mov
dec
sub
dec
jmp
fistl
add
xor
lods
push
lcall
mov
outsl
cmp
sub
out
xor
push
repz
pop
roll
dec
push
sbb
and
ds
inc
icebp
aas
sbb
and
adc
adc
add
cmp
cmp
xchg
jne
mov
hlt
loope
xchg
jmp
add
mov
cmova
pusha
in
push
stos
pop
loope
ss
lahf
int
rorl
pushf
sbb
xchg
sub
repnz
bound
adc
sbb
push
loopne
aad
push
das
xchg
rep
pop
push
xchg
xchg
pop
xor
jecxz
sahf
dec
mull
add
xchg
enter
or
sub
call
cmp
jne
push
movsl
iret
fs
in
inc
push
loop
mov
xor
cwtl
push
jb
not
cmp
xchg
aad
aaa
into
lods
lahf
xchg
cmp
loope
mov
inc
out
loopne
and
shll
push
push
push
add
cmp
cmp
mov
cli
adc
popa
test
mov
mov
cs
xchg
imulb
mov
jmp
or
jns
xor
xchg
fld
push
push
or
mov
push
inc
pop
jge
leave
jle
iret
push
mov
nop
je
adc
mov
jl
xor
dec
cmpb
fsubl
jecxz
inc
push
cmp
cmp
sbb
cmpsb
ficoms
ret
xor
mov
clc
mov
stos
push
scas
js
scas
enter
xchg
and
mov
mov
aas
xchg
adc
jl
dec
push
out
jno
dec
adcb
sarl
xor
inc
jle
jp
aas
cltd
fdivr
pop
icebp
into
imul
cmc
insl
out
roll
nop
jle
fisttpl
cs
or
cltd
clc
shlb
sbb
push
mov
movsb
push
cli
wbinvd
stos
stc
shl
inc
pop
shll
dec
and
test
stos
xor
imul
xchg
push
inc
push
sbb
scas
out
push
arpl
negb
push
repnz
std
imul
and
mov
inc
ret
dec
inc
sbb
stos
mov
out
sti
rcll
jmp
test
fs
lahf
mov
notb
inc
test
in
inc
mov
jno
lcall
inc
mov
mov
push
int
dec
add
push
fisubrs
push
in
pop
mov
push
push
dec
sub
sbb
mov
inc
ss
mov
mov
pop
inc
stos
out
cmpsb
aas
fsubs
outsb
adc
jg
mov
aad
and
mov
fidivrs
mov
adc
rsm
adc
cmp
stos
mov
inc
stc
sub
stos
and
aaa
movsb
mov
cld
jno
xchg
jmp
jnp
imul
adc
push
add
pop
jle
daa
jge
inc
out
xchg
in
outsb
push
mov
sub
call
dec
fnstcw
cli
shll
scas
and
outsb
cmc
add
mov
arpl
xchg
fstpl
negb
popa
inc
lcall
add
mov
and
push
or
xor
jecxz
fistpl
cs
roll
test
dec
dec
inc
push
and
jecxz
xchg
mov
stc
mov
fadd
mov
fsubl
mov
ror
mov
lcall
lods
add
xchg
lret
mov
stos
arpl
lahf
les
mov
ret
xchg
imul
call
jb
xchg
mov
or
aas
rcr
out
pop
test
push
bnd
jae
gs
xor
fmull
add
in
xchg
out
xchg
xchg
cmp
outsl
xchg
dec
mov
push
lods
test
ja
in
add
sub
or
xor
dec
mov
insb
pop
lcall
scas
mov
dec
inc
cmpsb
stc
std
aas
sub
fbld
sub
aas
push
mov
jae
test
dec
scas
jae
adc
ret
mov
std
aas
and
popa
daa
mov
or
push
adc
scas
in
sbbw
and
in
test
inc
out
jno
add
sahf
push
and
fadds
sbb
push
movsl
adc
out
cmpsb
push
and
cmp
xchg
clc
sbb
loopne
push
cs
push
popa
or
sub
xchg
xor
mov
mov
xchg
push
ficomps
jmp
or
cmpsl
adc
loope
xchg
xor
ret
das
pop
cmp
push
mov
mov
mov
xor
lahf
xchg
fcmovnu
enter
add
cwtl
xchg
sbb
sub
mov
jnp
adc
lods
inc
inc
repnz
push
push
inc
push
test
xchg
pushf
mov
leave
movsb
adc
xchg
jl
xchg
or
jge
xchg
push
test
adc
push
cmovs
or
inc
xchg
pop
jp
dec
adc
pop
add
mov
in
pavgb
mov
push
mov
mov
pop
push
lds
mov
test
jb
imul
lods
fldt
dec
addr16
fmul
loop
mov
and
mov
es
test
jmp
scas
lods
aad
jae
fists
jb
rolb
inc
popf
adc
push
push
in
mov
jb
cs
mov
pop
insl
ljmp
mov
fimull
jbe
xchg
addl
daa
inc
mov
test
and
fldenv
cmp
flds
pop
mov
adc
xchg
lock
cmp
pop
pop
scas
test
jecxz
fst
je
faddp
pop
lea
gs
cmp
sbb
or
mov
shlb
cwtl
xor
pop
addl
xchg
sbb
cs
notl
lcall
jmp
jbe
jl
psrlw
insl
add
shlb
je
sbb
mov
push
sub
sahf
sub
shrd
imul
clc
es
mov
mov
cmp
jbe
outsb
into
cmpl
test
dec
ret
add
scas
mov
add
test
insl
std
cld
push
xor
jb
xchg
push
cmp
add
std
iret
xchg
and
dec
sbb
arpl
mov
cmp
or
sub
fs
in
sbb
in
fidivrl
mov
fbld
jmp
mov
xor
mov
mov
hlt
ds
in
adc
push
test
mov
mov
inc
jbe
add
nop
pop
pop
xchg
mov
adc
xchg
fstpl
inc
pusha
xchg
jg
adc
pop
loop
aas
mov
and
aam
int
in
enter
push
scas
out
cs
dec
cmpsb
xchg
xchg
push
inc
add
icebp
icebp
adcl
loopne
stos
call
lahf
adc
or
pop
sbb
out
sbb
adc
dec
or
inc
lods
insl
jnp
mov
or
stos
push
leave
dec
add
xchg
cmp
jg
outsb
sub
cmp
cli
push
add
add
dec
xchg
and
xchg
add
or
fwait
adc
inc
imul
sbb
or
mov
insl
cmp
mov
xor
aam
adc
xchg
sahf
lods
loop
dec
xor
aas
xor
cmpsl
lods
mov
ret
xchg
shr
inc
jp
push
popf
mov
stos
out
nop
push
imul
lret
jecxz
inc
xchg
sbb
out
mov
sub
cmpsl
add
addr16
popf
xchg
and
mov
movsb
fucomp
into
sarb
mov
ds
adc
lds
sub
cmc
int
dec
inc
fwait
notl
subb
and
test
fcmovnb
imul
lcall
jns
test
aas
sbb
ja
mov
sbb
scas
ljmp
cmp
outsb
aas
pop
cmp
add
or
enter
xchg
sub
aad
xor
enter
cs
cmpb
xchg
jge
test
fwait
enter
pop
adc
fildll
pop
inc
int3
rclb
xor
add
repz
push
push
push
and
nop
xchg
add
pop
sbb
xchg
push
scas
fistl
sub
out
ret
cld
aaa
adc
and
mov
sarb
xchg
dec
xchg
or
add
test
xchg
sarl
out
push
adcl
mov
mov
push
cwtl
jae
mov
adc
lcall
inc
std
jae
mov
notl
pushf
mov
xchg
repnz
dec
dec
das
push
adc
jp
loopne
sarl
or
outsb
mov
xchg
je
mov
xor
insl
xchg
out
adc
aam
sarb
dec
lods
pop
sub
add
inc
push
push
cltd
gs
mov
mov
sbb
xchg
xor
or
inc
incl
sub
call
push
dec
jb
rol
rclb
std
jg
xor
xor
pusha
inc
mov
sub
mov
cmp
jge
imul
xchg
adc
sub
inc
jae
into
mov
dec
mov
xor
les
movsb
lea
xor
mov
dec
or
shrb
xchg
pop
cmp
mov
ucomiss
xchg
push
inc
and
fld
insb
dec
push
adc
cmpsl
mov
loope
sub
jp
test
cwtl
dec
xchg
xchg
dec
xchg
aas
adc
fldenv
mov
fldcw
in
dec
and
sub
icebp
push
adc
aam
in
clc
stc
cmp
aas
jns
cmp
inc
push
cltd
outsl
cli
ss
test
std
cmpl
mov
adc
fndisi(8087
ljmp
cmp
ret
negl
xor
dec
inc
push
lahf
loop
and
mov
sbb
sub
lods
loope
dec
push
lods
mov
dec
roll
imul
iret
and
push
xchg
adc
sbb
inc
gs
push
sub
iret
cmp
mov
jecxz
xlat
mov
std
push
jge
jne
push
mov
popa
xchg
iret
jge
shlb
pop
inc
movb
stc
mov
push
sbb
sub
notl
jmp
push
imul
mov
inc
mov
adc
std
cwtl
adc
xlat
jno
imul
mov
cmpsl
mov
add
push
cli
shr
dec
dec
cmp
sbb
adc
mov
int
mov
lcall
int
dec
insl
les
mov
pop
mov
lds
test
push
push
xor
mov
push
das
stos
pop
test
xchg
jl
flds
xchg
jne
aas
insb
sbb
or
push
jae
mov
enter
outsb
xchg
out
popf
xchg
inc
push
insb
out
and
insl
push
movsb
hlt
xchg
inc
dec
lret
nop
shlb
mov
outsl
stos
movsb
ja
mov
mov
inc
dec
add
cmp
sbb
and
sbb
pop
push
lds
inc
cmp
inc
test
lock
adc
adcb
add
inc
sbbb
add
add
jo
inc
andb
or
or
or
or
xor
or
and
adc
push
sbb
adcb
add
movsb
inc
shlb
test
add
pop
dec
sub
push
push
and
or
add
and
add
inc
push
addb
or
je
adc
xor
in
and
or
add
test
inc
pusha
add
adcb
and
mov
inc
in
addb
and
add
push
and
add
outsb
mov
adc
and
add
mov
xorl
or
and
push
or
inc
loopne
dec
sbb
arpl
push
push
mov
adcb
sub
add
test
test
addb
add
xchg
inc
and
inc
adc
or
adc
add
adc
xor
inc
adcb
add
nop
add
xor
and
add
pop
push
add
or
xchg
pusha
add
nop
addb
mov
or
inc
xchg
mov
inc
addb
cmpb
push
shrb
dec
nop
and
add
add
adc
lods
mov
push
test
xchg
xor
add
test
xchg
add
push
sbb
loopne
and
and
push
add
add
add
add
push
inc
or
or
push
add
sub
add
pop
add
test
inc
inc
mov
or
jno
inc
xor
xor
add
add
add
and
and
xor
and
add
or
add
andl
test
dec
add
aad
add
or
jb
add
adc
mov
add
mov
add
and
or
and
or
and
les
sub
and
sbb
add
roll
sub
and
add
or
or
adc
pusha
add
xchg
inc
mov
or
pusha
add
nop
add
or
rorb
mov
andl
add
orb
addl
or
or
add
inc
adc
or
add
and
dec
xorb
add
or
and
xchg
add
add
or
int3
sbb
inc
andl
test
shrb
mov
test
xor
inc
inc
add
inc
and
adc
add
std
test
cmp
add
nop
dec
adc
or
loopne
or
sub
or
mov
sub
loopne
adc
adc
inc
ret
add
adcb
xchg
inc
dec
dec
dec
inc
add
adc
rol
add
and
add
add
add
xor
and
data16
pusha
sbb
add
adc
dec
add
adc
add
push
push
sub
addl
add
and
add
add
and
and
imul
or
xchg
xchg
pusha
and
add
add
dec
adc
or
mov
xor
xorb
mov
add
pop
inc
sub
add
add
or
inc
and
les
and
or
add
add
rcll
or
or
and
push
sub
add
and
adc
sarb
xchg
add
adc
les
rolb
adc
pusha
adc
add
add
inc
dec
inc
and
inc
pusha
inc
or
add
sbb
shll
add
icebp
addb
sbb
adc
adc
sub
add
or
add
or
pusha
add
addb
inc
adcb
add
adc
add
inc
add
rolb
add
sub
add
xor
mov
add
mov
addl
add
add
add
add
add
and
add
adc
add
andb
push
inc
inc
test
addl
inc
adc
orb
add
or
popa
ret
add
addb
pop
insb
add
add
add
add
adc
jns
subl
add
addb
inc
add
movsl
shrb
and
or
rcll
add
mov
inc
jb
call
adc
cmpb
or
add
movsb
jbe
mov
or
add
inc
and
inc
or
inc
inc
and
inc
xorl
push
add
adc
and
sub
rolb
and
dec
addb
andb
adc
adc
mov
addl
add
add
push
add
rorb
adc
mov
test
xchg
add
pop
dec
add
ret
adc
jo
and
inc
mov
les
adc
adc
add
or
add
inc
or
add
or
test
stos
add
add
add
adc
pusha
inc
out
rorb
addl
and
addl
sub
fs
add
or
add
add
push
xorl
adc
and
add
and
adc
add
push
inc
adc
and
test
add
add
inc
mov
or
xor
loope
andb
lcall
xchg
add
push
or
push
xor
ret
test
nop
sub
mov
mov
fsub
inc
add
sub
add
and
xor
sub
push
add
adc
insb
inc
inc
mov
add
inc
daa
mov
int
or
inc
inc
push
test
add
add
or
mov
add
add
or
addb
or
mov
add
add
bound
inc
adc
adc
dec
and
and
addl
addb
andl
cmp
and
xor
popa
add
push
rclb
sbb
add
add
push
mov
mov
addb
add
add
or
add
add
adc
dec
xorb
test
xor
popf
push
xchg
add
add
and
and
xchg
sub
and
and
add
js
rorb
add
addb
adc
test
add
add
push
add
inc
add
add
dec
popa
adc
inc
mov
orb
adc
add
adc
or
pop
xorb
or
add
loopne
dec
xor
scas
andb
shr
test
sbb
add
add
inc
mov
arpl
and
add
adc
adc
addb
add
andb
add
adc
add
or
or
enter
orb
add
add
add
mov
pop
dec
add
and
add
and
add
add
inc
add
adc
daa
add
and
and
add
add
add
mov
add
sbb
add
add
test
inc
addb
and
addb
inc
lock
roll
dec
add
add
addb
and
add
and
test
dec
or
cmp
and
sub
rclb
push
add
mov
test
popl
and
adc
xor
add
or
inc
add
and
or
adc
adc
test
xor
add
arpl
and
test
adc
add
in
pop
out
add
loope
mov
sub
push
or
add
inc
pusha
enter
pop
inc
xchg
or
add
add
push
or
add
add
cmp
orb
pusha
out
add
add
sub
pop
add
xchg
and
xchg
inc
add
adc
push
test
sub
mov
inc
adc
sbb
adc
and
push
adc
or
mov
add
xor
inc
add
test
add
adc
pusha
pop
mov
pusha
and
adc
pop
mov
add
jno
pop
xor
xchg
addb
orb
adc
add
inc
or
or
push
push
adc
inc
and
add
xorb
andb
push
inc
dec
lods
or
or
sub
add
xor
add
and
push
sbbl
pop
xchg
add
and
orb
xchg
addb
popa
add
add
add
stos
or
sbb
add
lods
cwtl
and
mov
or
add
add
add
adc
xor
test
inc
inc
sub
push
jae
les
add
or
mov
push
sub
or
add
and
and
inc
xor
add
sub
lahf
nop
add
enter
add
add
add
add
inc
addb
add
add
adc
jo
inc
and
push
and
xor
and
and
leave
add
add
xchg
andb
push
sbb
sbb
and
add
adc
or
sub
sub
loopne
adc
mov
sub
or
sbb
or
add
cmp
lods
rolb
or
xchg
and
push
adc
test
push
pusha
or
cmp
dec
or
sbb
or
loopne
and
and
cmp
test
ret
xor
add
test
add
xor
or
add
add
mov
add
loopne
add
inc
js
add
or
push
add
adc
adc
inc
add
dec
push
dec
mov
shlb
and
or
adc
cwtl
or
push
adc
add
add
inc
pop
add
adc
mov
add
jno
movsb
or
or
inc
add
loop
les
pusha
sbb
or
addb
or
sbb
add
adc
inc
add
add
adc
mov
test
test
push
cmp
inc
xorb
or
xchg
mov
add
add
rolb
test
or
add
or
adc
pop
push
adc
and
nop
xchg
push
push
nop
add
sub
daa
and
orb
add
push
sbb
adc
loop
add
add
add
add
int3
pop
rcll
dec
pop
push
mov
sbb
nop
or
and
subl
rol
adc
mov
add
sbb
mov
or
add
push
test
inc
shlb
adc
adc
add
rorl
add
sbbb
sub
mov
dec
and
addb
add
lea
inc
push
test
adcb
inc
sub
add
push
add
add
les
cmp
add
and
sub
push
adc
adc
add
add
ret
test
pop
rorb
inc
pusha
orb
add
xor
add
add
add
addb
inc
xchg
inc
sbb
add
xchg
in
mov
orb
or
add
mov
add
add
sub
and
push
mov
push
sbb
inc
xor
add
and
andl
inc
and
add
addl
test
push
adc
nop
xchg
and
addl
or
add
dec
stos
rolb
add
add
add
add
xor
inc
or
push
rcrb
add
add
adc
test
inc
inc
out
sub
add
jp
inc
inc
inc
faddl
xchg
inc
test
add
add
jno
push
add
add
add
inc
mov
adcl
adc
nop
test
add
push
pop
add
add
and
nop
add
jb
test
roll
imul
outsl
and
pop
push
push
and
adcl
adc
test
add
add
inc
sbb
inc
sub
mov
ret
add
or
and
and
push
dec
add
push
inc
push
push
add
cmpsb
dec
adc
or
ret
rolb
add
mov
mov
cmp
mov
and
add
add
inc
push
add
sub
xor
dec
pusha
and
push
add
movsb
jne
add
or
sbb
and
sub
adc
or
add
test
cmp
addb
inc
add
adc
or
shlb
inc
add
inc
subb
add
inc
insb
add
xor
and
adc
addb
add
xchg
and
adc
adc
or
add
add
add
mov
mov
cwtl
xchg
add
cmp
mov
add
add
mov
cmpsb
nop
addb
test
inc
xchg
xchg
xor
add
mov
jae
and
sbb
or
add
test
jecxz
and
adcb
add
or
mov
movsb
inc
sbb
adc
add
or
adc
mov
inc
inc
push
add
mov
test
dec
push
add
and
addb
mov
push
xor
adc
sbb
xor
dec
add
add
fsubl
adc
adcl
ret
addb
add
addb
add
in
add
add
xor
add
addb
add
movsb
and
into
and
orl
add
daa
and
add
orl
das
daa
pushf
or
mov
movsb
mov
lds
adc
add
inc
mov
addb
add
inc
add
and
test
add
nop
add
inc
popa
inc
adc
pop
mov
subb
add
add
add
addl
or
mov
clc
or
push
inc
sub
xchg
adc
add
xchg
rolb
call
pusha
nop
mov
add
add
orl
dec
adc
test
adc
pop
rolb
test
add
sbb
pusha
or
xchg
add
adc
lds
add
push
inc
and
or
mov
adc
add
inc
push
inc
or
xor
inc
mov
adc
adc
or
and
add
test
and
xchg
addb
out
adc
xor
add
loop
pusha
inc
mov
adc
and
adc
add
jl
adc
or
add
bound
loopne
add
add
xor
imul
add
or
adcb
orb
add
and
or
mov
cs
or
lods
add
nop
xchg
and
jb
add
inc
sub
test
inc
xor
or
nop
push
inc
add
add
xor
and
or
mov
andb
adc
add
les
add
add
inc
adc
add
addb
or
and
sub
inc
xchg
test
and
add
or
sub
dec
mov
or
adcb
or
push
add
adc
add
pop
and
add
mov
cmp
and
add
xor
addl
leave
add
mov
add
mov
inc
inc
dec
add
push
add
add
push
orb
add
mov
add
push
add
add
inc
push
enter
orb
add
and
push
dec
xchg
xor
or
lea
inc
shrb
adc
xor
add
or
test
or
sub
add
lock
test
add
mov
add
push
test
add
push
orl
inc
add
add
or
push
mov
mov
and
sbb
add
hlt
addb
xchg
and
or
inc
inc
test
out
adc
xor
ror
fwait
add
or
or
add
or
mov
add
sbb
les
adcl
andb
inc
inc
add
pusha
mov
add
add
and
add
xor
or
inc
add
movsb
xorb
rolb
sbb
and
rclb
add
sub
inc
loope
and
push
add
leave
add
mov
mov
xor
add
inc
inc
mov
adc
test
cmp
adc
adc
sub
lock
lret
rolb
inc
inc
pop
inc
adcb
or
popa
mov
add
adc
andb
or
add
daa
add
test
or
cltd
adc
add
add
or
add
push
orb
adcb
stos
sub
test
andb
adc
inc
int3
add
orb
add
add
or
adc
add
lock
test
adc
and
xor
inc
add
and
add
and
xchg
jge
or
add
mov
cwtl
ret
xchg
dec
dec
add
inc
dec
add
add
fmul
add
add
add
sbb
inc
add
add
adc
add
or
inc
ret
or
add
add
addb
add
add
and
les
es
and
adc
addb
add
add
add
add
and
add
or
or
push
test
and
add
and
dec
rolb
inc
and
or
and
rorl
and
adc
sbb
inc
mov
gs
and
or
addb
and
or
mov
add
push
or
mov
adc
andl
add
orb
add
add
xchg
add
adc
or
adc
inc
and
and
addl
xchg
add
push
add
xor
mov
rolb
push
inc
or
add
sbb
mov
repnz
and
adc
xor
add
xor
adc
orl
and
addl
and
push
and
add
pusha
add
addb
and
add
cltd
sub
sarb
subl
addb
mov
add
push
add
mov
and
inc
adc
inc
pop
and
add
or
and
cwtl
push
shlb
add
or
inc
adc
inc
xor
mov
test
sahf
add
inc
mov
add
inc
andl
adc
xchg
and
loopne
add
mov
popa
add
nop
inc
jl
andb
add
add
xchg
inc
test
lahf
mov
xchg
add
push
andb
pusha
lods
add
and
cltd
add
adc
add
add
andb
nop
mov
and
mov
and
add
inc
and
push
xchg
or
add
popa
adc
add
inc
add
in
cmp
add
add
push
and
mov
test
add
and
inc
add
add
adc
push
add
add
inc
addb
mov
inc
andb
addl
add
push
dec
adc
add
inc
inc
add
push
inc
test
or
addb
add
add
stos
xor
mov
inc
push
rolb
add
and
add
adc
inc
test
and
inc
and
or
add
push
sbbl
cwtl
add
adcb
add
insb
cmp
cmp
mov
or
xor
and
xor
adc
add
adc
and
orb
push
or
add
dec
or
add
push
add
nop
add
add
add
add
add
and
cmp
cmp
sbb
add
inc
add
stos
adc
loopne
pop
inc
inc
add
lds
adc
rclb
js
or
and
add
adc
add
adc
test
add
cltd
inc
xor
test
dec
dec
sub
add
adc
add
add
add
or
inc
add
add
add
nop
add
dec
adc
mov
push
add
inc
ret
pop
xchg
or
and
add
pusha
addl
nop
adc
and
add
or
xor
dec
pop
ficoml
adc
sub
call
xor
adc
addb
inc
and
mov
xchg
mov
fmul
pop
or
add
test
add
rolb
add
mov
addl
and
dec
test
push
push
and
xor
dec
add
mov
sbb
or
adc
add
or
mov
or
pusha
add
addb
int
subb
mov
nop
mov
and
adc
add
adc
mov
and
add
rcl
andb
cmp
loopne
lods
loope
cmpsb
inc
adc
jb
cmpb
sub
rorb
xorl
xor
add
inc
add
adcb
popa
or
subb
orb
push
sbb
test
add
dec
add
dec
or
adc
mov
add
add
xchg
add
and
imul
adc
adc
add
add
andb
or
adc
adc
jb
add
inc
inc
orb
adc
add
add
sbb
add
mov
nop
adc
adc
sbb
push
sbb
add
and
add
add
push
cmp
add
adc
in
adc
and
add
test
or
add
or
inc
or
or
shlb
orb
and
inc
lods
add
sub
and
rorb
addb
or
add
andb
daa
mov
xlat
inc
add
or
inc
mov
cwtl
out
dec
and
sbb
or
adc
xchg
add
add
les
dec
adc
adc
dec
inc
add
inc
xchg
sub
push
jo
or
push
add
xor
add
andl
movsb
adc
addb
or
sbb
popa
and
add
and
rclb
movsb
add
xorb
add
inc
adc
add
addl
sub
nop
add
add
inc
popa
add
add
int
adc
shlb
add
add
add
mov
mov
inc
xor
andb
addl
add
adc
adc
and
xor
add
or
sbb
and
inc
cmp
adc
adc
inc
and
push
push
add
or
add
add
add
add
les
js
mov
addb
and
and
add
adcb
shrb
add
push
pop
or
fs
adcb
adc
addb
xor
sbb
test
xorl
add
adc
pop
xchg
add
or
xor
add
and
in
adc
or
add
bound
add
imul
and
xor
icebp
push
sbb
bound
mov
add
cmp
add
pop
inc
inc
or
nop
dec
add
add
pusha
and
add
add
inc
push
sub
add
sub
add
add
add
and
add
push
stos
adc
test
add
mov
mov
add
or
cs
dec
addb
push
xchg
or
sbb
jb
xor
and
test
sbb
xchg
test
popa
xorb
loopne
add
popa
sub
add
lahf
add
addb
add
cmp
sbb
or
add
nop
adc
adc
inc
add
add
add
and
or
enter
int3
xor
aam
cmp
adc
leave
add
lret
add
xchg
dec
add
inc
nop
mov
add
orb
test
pop
add
and
add
add
push
add
dec
add
pop
or
add
popa
bound
adc
add
inc
cmp
sbb
addb
stos
add
add
addl
mov
sub
adc
orb
add
adc
mov
inc
and
add
or
pop
add
add
adcb
orb
rolb
andl
add
mov
leave
add
sbb
sub
mov
adc
xor
adc
add
add
add
test
das
sbb
or
addb
inc
inc
pushf
in
sbb
add
add
push
andl
inc
and
pop
imul
add
inc
add
out
rclb
pusha
and
inc
add
sbb
and
rcrb
rolb
add
adc
push
and
jno
test
and
nop
and
and
push
nop
adc
push
or
js
add
push
xor
inc
rcrb
insb
add
or
and
inc
push
and
and
aaa
add
lcall
add
or
inc
add
imul
pop
add
xchg
add
or
adcb
or
add
or
adc
and
pusha
test
adc
add
and
add
mov
sub
or
sbb
xchg
xor
or
test
add
add
addb
addb
xor
add
xorb
or
push
inc
or
add
leave
ss
and
xchg
orl
push
or
adcb
test
adc
dec
add
or
push
mov
inc
adc
add
xor
xchg
cmp
push
roll
orb
push
addl
add
orb
rclb
push
inc
add
add
add
into
add
push
cwtl
push
push
addb
bound
pop
and
mov
add
dec
nop
addb
add
add
add
or
add
addb
bound
mov
adc
cmp
adc
push
rclb
add
add
xchg
and
and
and
lea
or
push
addb
out
daa
add
les
popa
add
sub
addb
adc
addb
inc
xchg
movsb
enter
in
rorb
dec
inc
inc
push
add
int3
or
adc
pop
nop
and
mov
test
inc
test
push
add
add
add
add
popa
pusha
or
add
and
inc
movsb
and
push
add
add
scas
addb
add
add
pop
ret
add
and
dec
xor
nop
adc
adcb
add
add
rolb
add
add
or
xor
pusha
adc
xor
add
and
add
and
pop
inc
enter
add
lods
sub
add
add
inc
add
add
add
add
inc
sub
mov
add
adc
add
push
cmp
shrb
add
test
inc
add
push
rclb
adc
and
adc
or
adc
sbb
and
dec
add
mov
mov
adc
xchg
and
add
adc
xchg
push
addb
add
test
add
lds
adc
dec
and
adc
bound
push
inc
xor
inc
cmpsb
inc
add
inc
adc
sbb
sbb
adc
pop
add
adc
add
add
inc
or
pop
mov
adc
adc
or
xor
add
and
adc
int3
test
rolb
and
mov
inc
and
push
test
nop
and
inc
add
mov
orl
jo
add
orb
addl
subb
daa
add
inc
xor
add
and
add
mov
xor
push
fmuls
push
ja
add
adc
and
jl
adc
mov
or
adc
or
inc
sub
push
add
push
adc
adc
or
and
push
push
inc
and
les
and
andb
sbb
add
add
push
add
adc
xor
add
inc
xor
popa
and
inc
nop
inc
add
cmp
and
and
or
addb
push
fcoml
and
add
pop
add
add
or
or
add
and
inc
or
and
push
iret
bound
and
add
and
dec
dec
int3
adc
or
inc
addb
and
and
and
or
test
add
mov
add
inc
adc
add
nop
or
dec
adc
nop
inc
add
data16
or
add
add
adc
adc
cmp
pop
add
nop
cmp
add
or
add
xor
rcl
orb
add
dec
add
and
add
lds
inc
sub
dec
add
and
daa
mov
xor
inc
push
rclb
xor
inc
adc
out
add
push
inc
or
push
inc
add
adc
and
or
adc
add
and
jno
es
inc
add
add
and
add
add
push
and
je
sbb
andl
or
rclb
adc
add
push
pusha
add
inc
and
push
inc
leave
ss
test
inc
inc
mov
and
mov
add
add
add
add
adc
or
add
add
inc
add
orb
adc
add
cwtl
dec
add
shlb
xchg
and
adc
cltd
add
add
and
xor
xor
add
mov
adc
or
add
rolb
inc
mov
or
inc
add
add
adcb
and
shlb
mov
adc
adc
push
xchg
and
mov
je
add
add
nop
rolb
adc
nop
push
sbb
mov
mov
xchg
and
test
inc
adcb
inc
or
movsb
adcb
xor
inc
and
lret
dec
addb
add
sbb
or
add
add
add
mov
adc
add
add
add
jo
cmpsb
inc
and
or
or
test
add
dec
add
add
lds
push
inc
adc
ret
push
push
inc
or
or
add
adc
orb
pop
add
dec
adcl
pop
inc
and
pop
lds
add
and
nop
shlb
lret
and
add
jae
sub
inc
or
and
and
or
add
enter
add
add
inc
test
push
subb
test
sub
push
mov
test
add
xor
orl
adcb
popa
push
mov
or
and
dec
and
add
or
add
or
inc
xchg
jle
adc
movb
add
adc
cwtl
add
add
xor
add
adc
adc
inc
add
or
addb
mov
adc
add
add
and
arpl
add
daa
pop
and
push
sub
inc
or
add
loopne
pusha
inc
add
movsl
inc
xor
add
mov
or
add
or
or
add
add
adc
push
sbb
dec
add
push
xchg
push
add
or
and
add
and
inc
add
add
add
or
sub
push
dec
or
mov
adc
aad
inc
inc
or
inc
inc
add
add
add
add
js
add
and
pusha
orl
sarb
adc
add
inc
mov
add
test
loopne
xor
add
and
pop
pop
and
push
and
pusha
test
add
mov
inc
sbb
add
and
add
aaa
push
rolb
or
add
or
adc
pusha
sbb
inc
cmp
and
pusha
add
nop
pusha
inc
orb
mov
mov
adc
add
add
or
add
push
adc
and
pop
sub
jp
or
and
add
or
adc
movsl
sub
add
xchg
sub
adc
adc
push
inc
inc
pop
popa
add
pop
add
push
adc
push
adc
or
and
addb
ficompl
and
add
push
inc
sbb
addb
adc
and
mov
add
inc
and
or
and
add
and
and
push
mov
or
add
mov
nop
xor
push
sbbb
add
rclb
add
or
es
add
add
add
shr
loope
add
add
sub
mov
add
inc
orl
adc
and
add
and
ficoms
sbb
pushf
jae
test
sub
addb
push
adcb
add
inc
or
and
ret
xchg
add
add
adc
and
push
add
test
pushf
add
mov
or
or
inc
inc
and
add
adcl
nop
and
addb
mov
pusha
adc
pusha
and
add
or
icebp
loopne
or
push
or
addb
mov
push
mov
addb
add
dec
xchg
mov
push
or
andb
mov
mov
addb
movsb
jne
test
add
and
jo
mov
addb
mov
push
mov
fsubs
mov
adc
add
adc
sbb
or
add
test
inc
ret
sbb
adc
pusha
add
dec
add
sbb
les
add
lea
lods
add
inc
andb
xor
dec
pushf
enter
mov
ret
sbb
or
pusha
and
or
rorl
call
dec
inc
addl
or
add
inc
inc
insb
inc
add
adc
add
add
and
mov
mov
or
add
add
inc
or
imul
or
mov
mov
add
test
movsb
add
push
mov
dec
rolb
add
add
or
pusha
sbb
adcl
or
sub
adc
add
add
adc
cmp
adc
andb
xchg
sbb
or
test
add
cmp
dec
add
pusha
pop
adc
inc
adc
scas
nop
inc
xor
push
pusha
pop
and
or
fs
popa
add
shlb
add
add
inc
inc
and
or
nop
add
or
mov
sub
add
andb
adc
add
sbb
inc
add
inc
addb
adc
lcall
sbb
mov
inc
xchg
inc
add
inc
or
test
add
mov
push
add
sub
adc
adc
outsb
add
mov
add
and
inc
add
ret
add
inc
xor
xchg
adc
xchg
or
pop
add
andl
jb
push
add
add
dec
inc
add
adc
pop
inc
add
mov
mov
rclb
dec
sub
xor
movsb
push
inc
and
inc
or
andb
nop
add
add
add
add
outsb
and
or
daa
inc
and
and
xor
add
mov
or
mov
adc
adcl
or
add
add
and
bound
sahf
adc
rorb
andb
loopne
or
rolb
or
in
add
add
push
or
in
mov
push
andb
push
add
bound
add
push
add
add
mov
ret
test
xchg
addl
lret
inc
add
add
xacquire
mov
add
adc
mov
add
push
or
inc
add
subb
or
sub
mov
add
add
adcl
or
addb
inc
push
add
add
shlb
add
add
mov
adc
xor
fs
nop
dec
add
addb
add
movsb
push
xor
adc
insl
and
and
cwtl
test
adcb
add
jb
and
adc
push
adc
add
adcb
rcll
adc
inc
add
dec
les
add
lret
popa
dec
and
or
insl
jo
xchg
dec
adc
addb
xor
test
or
fs
push
and
and
add
inc
andb
sbbl
add
inc
and
rclb
or
add
nop
add
add
orb
dec
adc
inc
dec
orb
cwtl
adc
push
dec
and
in
add
add
roll
sub
mov
add
add
mov
add
add
inc
es
add
mov
or
add
fs
or
test
add
push
pusha
add
and
loopne
inc
add
addb
or
sbb
push
inc
push
xchg
add
inc
pop
inc
xchg
add
add
add
and
dec
add
orb
add
and
add
dec
je
add
add
add
and
push
and
add
addb
test
inc
add
add
add
push
mov
cwtl
sub
pop
adc
imul
or
push
roll
adc
mov
adc
push
add
add
mov
add
or
add
sbb
addl
gs
or
add
add
and
bound
sub
add
mov
pop
inc
or
mov
push
in
sub
xor
sbb
add
adc
cmp
xchg
inc
pusha
loopne
or
mov
inc
addl
add
and
add
or
or
add
adc
or
add
inc
dec
add
add
add
mov
add
add
sub
and
push
add
adc
cs
outsb
jne
inc
add
add
add
rorb
adc
and
add
and
nop
or
add
or
jns
mov
push
add
and
or
cs
add
add
mov
adc
in
addl
ret
and
mov
push
mov
inc
adc
mov
adc
adc
sub
or
adc
stc
inc
mov
or
xor
add
add
mov
adc
or
or
add
push
add
add
inc
or
mov
add
or
adc
inc
add
add
push
or
or
sub
add
or
orl
or
nop
movsl
adc
push
adc
or
add
sub
add
leave
nop
add
rolb
sbb
add
pushf
cwtl
add
or
addb
adcb
inc
and
or
sbbl
adc
inc
pusha
or
add
xchg
and
movsb
dec
sub
add
and
out
add
add
andb
inc
mov
rolb
sbb
xchg
add
or
rorb
or
test
or
mov
inc
rcrb
int
leave
inc
and
nop
adc
addb
and
or
insb
add
adcb
cmpsl
sbb
add
adc
add
mov
test
int3
dec
rolb
or
add
sub
cmp
add
pusha
addb
mov
sub
rcll
mov
push
add
inc
jae
or
imul
rclb
add
add
push
hlt
adc
and
add
push
push
adc
subl
dec
inc
dec
xor
xchg
add
mov
insb
rolb
adc
add
adc
or
sbb
and
add
popf
push
adc
inc
cmp
or
or
xor
add
add
sub
add
adc
adcl
sub
jecxz
xor
adc
add
dec
pusha
nop
add
mov
adc
or
add
cwtl
add
dec
xor
inc
xchg
adcb
add
or
adc
popa
add
and
jo
push
enter
call
andl
test
add
add
add
dec
test
mov
or
pusha
mov
es
inc
pusha
pusha
adcl
dec
sub
and
jne
add
dec
mov
xchg
or
push
mov
xchg
cmp
inc
add
xchg
inc
adc
inc
out
cwtl
or
jp
popa
adc
add
and
nop
inc
cmp
push
inc
es
andl
inc
or
sbb
pop
sub
mov
pop
mov
add
adc
add
add
add
andb
jae
dec
and
add
inc
push
or
add
dec
nop
adc
inc
dec
and
pop
addb
inc
inc
or
pop
adc
es
and
or
and
add
addb
inc
add
xchg
adc
cwtl
sub
pop
inc
add
and
xchg
dec
adc
enter
adc
sub
add
or
add
add
or
add
sbb
add
addb
add
nop
sub
and
inc
xor
mov
add
add
add
push
mov
es
add
and
adc
movsb
adc
inc
sbb
or
push
and
xor
add
xor
add
mov
add
stos
movsb
cwtl
adc
add
add
pusha
add
addb
or
xchg
or
and
or
fs
xor
add
addb
adc
sbb
or
add
sbb
nop
addb
add
sub
or
add
and
xor
mov
and
or
add
sub
or
addb
stos
adc
xchg
imul
mov
pushf
sbb
push
add
xchg
mov
adc
or
or
or
popa
inc
add
sbb
pop
pusha
inc
inc
and
and
push
mov
add
addl
add
inc
in
xorb
adc
add
nop
mov
xchg
sahf
add
add
jo
and
andb
pop
add
add
ret
add
add
add
add
add
add
adc
adc
mov
inc
push
arpl
add
lret
add
cwtl
jae
or
add
push
addr16
dec
add
sbb
mov
add
xchg
bound
cwtl
test
sbb
adc
add
xchg
xor
das
add
orb
push
pop
xor
add
inc
test
daa
mov
adcb
xor
add
push
rorl
xlat
les
or
inc
sbb
add
sbb
add
inc
or
inc
add
xchg
nop
inc
add
add
add
and
add
andb
and
add
add
add
or
adc
or
adc
xor
and
push
add
xor
dec
xor
adc
and
add
sub
add
mov
add
andb
cmp
loopne
mov
movsb
add
mov
add
xor
xor
push
sub
add
add
inc
add
push
mov
add
mov
adc
test
mov
lcall
mov
ljmp
and
and
dec
xorb
sub
add
inc
inc
add
nop
addb
sbb
inc
push
shlb
push
insb
addb
test
sub
add
add
addl
add
xorb
and
add
xor
add
add
or
test
adc
addb
cmp
test
add
xchg
sbb
xor
mov
lcall
mov
adc
add
inc
push
rol
add
mov
add
add
add
addb
test
or
add
jo
add
rclb
fs
mov
or
add
or
ret
dec
fs
add
sbbb
orb
mov
movb
sub
pop
add
adc
xchg
add
adc
add
inc
adc
dec
shlb
nop
inc
adc
push
add
add
addb
inc
inc
xchg
sub
rcll
les
sbb
and
add
add
inc
or
inc
pop
addl
inc
inc
add
add
add
cmp
ret
add
subl
adcb
cltd
add
or
popa
and
lret
add
adc
and
dec
mov
inc
add
sbb
mov
add
addb
xchg
adcb
add
inc
add
addb
and
jno
sbb
add
sub
and
xchg
inc
add
inc
add
adc
and
add
cmp
and
mov
add
and
and
movsb
mov
subb
mov
mov
inc
sub
lds
ret
addb
or
addb
and
or
loopne
add
mov
and
push
sbb
pop
or
add
jno
andb
xor
inc
add
test
mov
dec
dec
adc
xor
and
and
inc
adc
adc
add
cmp
les
mov
loopne
xor
add
sbb
add
inc
add
ret
push
inc
add
loopne
addb
add
add
sub
inc
mov
or
adc
adc
or
adcb
add
ljmp
and
or
add
adc
add
mov
add
loope
push
push
or
xlat
orb
add
add
or
add
xchg
pusha
inc
add
add
dec
or
or
sarb
test
xor
pop
add
add
and
add
inc
mov
add
or
add
add
mov
push
mov
add
orb
or
pusha
add
inc
inc
add
adc
orb
inc
add
adc
or
pusha
and
sub
adc
xchg
inc
dec
add
xor
push
and
or
mov
or
push
movsb
andl
add
add
lea
imul
push
adc
xor
adc
xor
add
inc
add
and
adc
sub
and
add
add
add
inc
add
or
and
inc
or
adc
inc
andl
add
les
add
mov
inc
test
dec
xor
add
inc
dec
ret
test
dec
dec
xchg
add
and
and
and
add
and
and
add
mov
mov
add
add
xor
sub
inc
dec
pusha
inc
and
add
inc
sbbb
add
or
or
add
inc
and
addb
or
and
mov
xor
addb
test
and
push
jle
mov
pop
add
add
add
inc
and
inc
add
add
add
add
dec
cmp
adcb
push
and
xchg
add
and
adc
sub
nop
add
add
add
inc
or
lret
pusha
sub
adc
add
xchg
or
add
pop
add
add
or
or
add
pop
sub
add
inc
lds
and
add
add
fs
add
sub
pushf
test
adc
add
add
and
sub
inc
cwtl
les
sbb
pusha
adc
add
and
add
add
adc
test
xor
add
sbb
pusha
add
or
dec
add
inc
add
cwtl
add
and
cmp
xchg
and
mov
and
rcll
inc
push
adc
and
add
nop
inc
and
add
push
inc
or
popa
add
add
add
and
test
add
movsb
add
sbbl
or
orl
and
and
pushf
inc
adc
xchg
inc
lds
and
sbb
adc
add
or
or
and
inc
mov
add
add
inc
adc
add
mov
add
adc
aaa
nop
adc
adc
addb
sub
add
or
pop
and
inc
inc
inc
inc
xor
add
mov
mov
test
lods
loopne
xchg
movb
shll
add
push
xchg
add
dec
and
adc
adc
and
mov
add
inc
sub
xchg
adc
adc
adcb
sbb
inc
addb
pop
xor
or
and
dec
add
lock
add
or
mov
pusha
add
add
xchg
and
inc
push
mov
mov
adc
sbb
or
les
and
xorb
xor
mov
adc
or
cwtl
or
add
nop
and
adcl
add
and
adc
addl
inc
cmp
bound
test
test
mov
add
add
adc
xor
and
mov
or
sbb
sbb
pushf
add
sub
into
sub
or
add
orb
and
add
addl
xor
enter
add
test
xor
add
adc
adc
adc
and
xchg
sub
adc
sbb
add
adc
sub
add
sub
adc
adc
push
add
jno
inc
cwtl
add
push
or
and
add
pusha
add
xor
rolb
and
mov
inc
xchg
addb
sub
inc
addl
adc
and
add
inc
lods
add
add
and
cwtl
xor
and
add
sbb
add
inc
enter
or
loope
add
and
mov
mov
and
and
nop
add
and
inc
adc
add
or
push
inc
movsb
and
mov
mov
mov
add
push
je
addb
adc
or
adc
inc
and
add
add
push
push
add
add
inc
mov
adc
orl
add
inc
cwtl
and
sbb
add
and
add
and
rolb
and
inc
add
add
pusha
pusha
pop
and
mov
add
mov
add
and
or
adc
test
mov
and
inc
sbb
pusha
add
in
adc
add
inc
add
or
mov
add
dec
inc
mov
mov
or
and
test
or
daa
pop
adc
sub
sbb
inc
xchg
and
inc
or
sbb
test
add
nop
xor
and
sub
or
mov
add
and
xor
mov
popa
and
inc
add
or
addb
and
or
add
add
sub
adc
pop
add
ret
push
orb
addl
dec
adc
or
daa
inc
add
mov
add
inc
xchg
add
and
xor
add
adc
and
movsb
add
cmp
or
test
and
popf
add
xchg
add
rclb
and
flds
add
test
stos
adc
cmp
add
loopne
addb
add
movsb
adc
addb
and
add
and
add
or
pop
and
or
test
xor
add
push
sub
gs
inc
and
sub
nop
mov
or
addb
add
dec
and
add
add
add
and
and
push
inc
dec
or
jo
addl
pusha
and
sub
addb
dec
sbb
and
xchg
add
nop
add
or
sub
add
ficoml
add
add
or
or
add
adc
adc
inc
add
or
add
pop
inc
adc
or
adc
add
adc
mov
adc
or
add
adc
mov
rolb
dec
test
add
add
add
addb
or
sub
and
test
pop
sub
subl
or
mov
inc
and
or
inc
add
inc
rolb
pushf
push
rol
and
add
dec
add
add
add
popa
sub
adc
adc
or
mov
inc
and
and
and
sub
xor
add
nop
add
inc
push
and
and
add
push
test
insb
dec
adc
adc
or
add
xor
add
push
add
add
xchg
add
inc
or
sub
or
inc
mov
inc
rolb
rcl
adc
xchg
addb
and
add
adc
push
add
addl
xor
gs
add
bound
add
add
js
adc
and
adcb
xor
add
push
lahf
nop
adc
int
dec
inc
add
ret
push
movsb
fcoms
and
or
add
pop
mov
orl
add
or
and
or
inc
adc
inc
and
or
or
dec
or
addb
inc
add
dec
adc
adc
or
and
xor
xchg
adc
fsub
adc
cmp
sub
pusha
andl
add
bound
inc
and
sbb
addb
and
push
add
addb
add
adc
gs
add
adc
mov
pop
add
cmpsb
pop
adc
sbb
mov
push
dec
inc
pop
adc
addb
sub
or
push
add
pop
inc
add
add
dec
adc
mov
nop
xor
add
movsb
sub
add
adcb
xor
add
push
mov
sub
mov
mov
push
mov
mov
push
mov
push
cmp
jne
mov
cmp
jne
mov
push
push
call
mov
cmp
je
and
mov
mov
mov
mov
mov
cmp
jne
mov
add
mov
mov
sub
mov
mov
mov
mov
mov
add
mov
mov
mov
cmp
je
and
mov
push
call
test
jne
mov
mov
sub
mov
mov
mov
push
call
mov
cmp
jne
cmp
je
sub
mov
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
cmp
jne
mov
mov
mov
mov
mov
cmp
jne
mov
sub
mov
mov
mov
mov
xor
cmp
jne
add
cmp
je
sub
mov
cmp
jne
mov
mov
mov
mov
test
jne
add
cmp
je
cmp
jne
mov
cmp
je
mov
mov
add
cmp
je
mov
cmp
jne
mov
cmp
jne
mov
add
cmp
je
cmp
jne
mov
test
jne
add
mov
test
jne
or
test
je
sub
test
je
or
mov
mov
cmp
je
cmp
je
mov
cmp
jne
add
mov
cmp
jne
cmp
je
sub
cmp
je
mov
add
mov
cmp
je
mov
mov
test
je
mov
mov
mov
add
mov
or
mov
mov
cmp
jne
mov
sub
cmp
jne
mov
cmp
jne
cmp
jne
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
add
mov
mov
cmp
jne
mov
add
mov
cmp
jne
mov
mov
sub
mov
mov
cmp
je
mov
mov
add
mov
and
mov
cmp
je
cmp
jne
mov
mov
mov
cmp
je
add
mov
mov
mov
add
mov
cmp
je
mov
add
cmp
je
mov
mov
sub
mov
cmp
je
test
jne
sub
mov
mov
add
mov
mov
mov
add
mov
mov
cmp
jne
mov
mov
mov
lea
mov
mov
push
xor
mov
cmp
je
mov
push
mov
sub
mov
mov
call
add
mov
mov
mov
cmp
je
cmp
jne
test
jne
cmp
je
mov
add
cmp
jne
sub
mov
mov
mov
shr
add
cmp
jne
xor
mov
mov
mov
cmp
jne
sub
mov
cmp
jne
add
mov
test
jne
sub
mov
cmp
jne
cmp
je
mov
mov
sub
cmp
je
mov
cmp
je
xor
mov
test
je
mov
cmp
jne
cmp
jne
sub
mov
mov
cmp
jne
mov
add
mov
cmp
jne
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
call
mov
mov
xor
cmp
jne
sub
mov
mov
sub
mov
mov
mov
mov
sub
xor
mov
pushl
push
pushl
call
test
jne
mov
addl
mov
mov
mov
cmp
je
and
mov
call
sub
mov
test
je
mov
cmp
je
mov
xor
cmp
jne
xor
mov
mov
mov
mov
cmp
je
mov
cmp
je
mov
mov
and
mov
cmp
je
xor
mov
mov
mov
cmp
je
cmp
jne
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
mov
mov
pop
add
mov
cmp
jne
mov
sub
mov
mov
test
je
mov
test
jne
mov
sub
mov
mov
cmp
jne
xor
mov
mov
mov
pop
mov
leave
ret
mov
mov
mov
mov
push
push
push
call
mov
add
cmp
je
sub
mov
mov
mov
push
push
push
push
push
push
call
mov
push
push
push
push
push
push
call
mov
push
push
call
mov
and
mov
mov
mov
mov
call
mov
mov
mov
add
mov
mov
mov
pop
mov
add
mov
pop
mov
cmp
jne
mov
add
mov
mov
mov
mov
mov
pop
add
mov
mov
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
push
sub
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
movl
mov
call
mov
or
mov
mov
mov
call
and
mov
cmp
je
mov
cmp
jne
add
mov
mov
cmp
je
mov
call
xor
mov
cmp
jne
xor
mov
mov
cmp
je
mov
mov
cmp
jne
mov
add
add
cmp
je
add
mov
cmp
je
mov
xor
mov
cmp
jne
mov
and
mov
test
je
add
cmp
je
sub
mov
mov
mov
mov
mov
mov
push
call
mov
or
je
sub
mov
addl
mov
lea
mov
cmp
jne
mov
mov
mov
inc
cmp
jne
mov
mov
cmp
je
add
cmp
je
sub
mov
cmp
je
add
mov
cmp
jne
mov
mov
mov
mov
mov
sub
mov
cmp
jne
xor
mov
mov
cmp
je
mov
mov
xor
cmp
je
test
jne
mov
cmp
je
cmp
je
mov
test
jne
mov
test
je
mov
sub
mov
cmp
je
xor
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
test
je
mov
mov
sub
cmp
jne
mov
add
mov
mov
sub
mov
mov
mov
mov
mov
add
mov
cmp
jne
mov
mov
or
test
je
mov
mov
add
cmp
je
mov
mov
mov
sub
cmp
jne
xor
mov
cmp
jne
mov
mov
mov
mov
mov
mov
sub
mov
pop
cmp
jne
mov
sub
mov
cmp
je
xor
mov
pop
cmp
je
or
cmp
je
mov
xor
mov
cmp
jne
add
test
je
mov
xor
mov
mov
cmp
je
mov
test
jne
mov
mov
test
je
xor
mov
cmp
jne
mov
mov
mov
xor
mov
cmp
je
sub
mov
mov
cmp
je
mov
test
je
mov
mov
cmp
je
mov
cmp
jne
mov
mov
mov
add
mov
pop
mov
sub
mov
cmp
je
mov
mov
cmp
je
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
add
mov
push
mov
push
mov
mov
push
xor
mov
mov
mov
mov
rdtsc
add
mov
mov
mov
mov
mov
sub
mov
mov
mov
xor
test
je
or
mov
cmp
jne
mov
test
jne
cmp
jne
mov
sub
mov
mov
mov
sub
mov
mov
or
mov
mov
sub
cmp
jne
xor
mov
cmp
je
add
cmp
je
mov
cmp
jne
mov
xor
mov
cmp
jne
mov
mov
mov
rdtsc
xor
mov
mov
and
mov
sub
mov
cmp
jne
mov
mov
cmp
je
mov
test
je
mov
xor
mov
mov
test
jne
mov
mov
pop
add
mov
mov
test
je
cmp
je
cmp
je
mov
cmp
jne
mov
mov
mov
cmp
je
mov
sub
mov
mov
mov
cmp
je
mov
pop
mov
pop
cmp
je
add
mov
mov
mov
cmp
jne
cmp
jne
xor
mov
mov
cmp
jne
mov
xor
mov
cmp
je
or
test
jne
cmp
jne
xor
cmp
je
cmp
jne
cmp
je
cmp
jne
add
mov
test
je
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
cmp
je
sub
cmp
jne
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
or
mov
cmp
jne
xor
mov
push
mov
mov
push
mov
cmp
je
mov
or
mov
mov
mov
mov
cmp
jne
mov
cmp
je
mov
add
mov
cmp
je
mov
xor
mov
mov
mov
xor
mov
test
je
mov
mov
add
test
jne
mov
mov
mov
xor
mov
cmp
je
mov
decl
mov
sub
mov
add
cmp
je
sub
mov
negl
mov
and
cmp
jne
mov
roll
or
mov
mov
mov
test
je
mov
add
mov
addl
xor
cmp
je
mov
xor
cmp
je
cmp
jne
mov
mov
mov
mov
add
sub
mov
test
je
sub
mov
mov
mov
sub
mov
jmp
cmp
je
cmp
je
or
test
je
mov
mov
cmp
je
mov
sub
mov
cmp
je
mov
sub
cmp
je
mov
add
mov
test
jne
sub
mov
mov
cmp
je
mov
xor
cmp
je
add
mov
cmp
je
sub
mov
mov
cmp
jne
xor
mov
mov
mov
cmp
je
add
cmp
je
mov
mov
mov
add
mov
add
mov
cmp
je
test
je
cmp
jne
sub
mov
mov
test
jne
mov
add
mov
mov
cmp
je
mov
mov
cmp
jne
mov
xor
cmp
jne
sub
cmp
jne
mov
mov
cmp
je
mov
cmp
je
or
mov
mov
mov
mov
mov
mov
pop
cmp
jne
mov
pop
xor
cmp
je
cmp
je
add
mov
pop
mov
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
mov
mov
mov
cmpl
je
mov
mov
add
mov
mov
add
mov
jmp
mov
push
lea
push
call
lea
push
call
mov
mov
push
lea
push
call
lea
push
mov
push
call
mov
movl
mov
sub
mov
movl
mov
add
mov
movl
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
cmpl
je
movl
cmpl
jge
cmpl
jle
jmp
jmp
mov
mov
mov
movl
jmp
mov
add
mov
mov
mov
cmp
jae
mov
add
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
cmpl
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
je
mov
movzwl
mov
movzwl
cmp
jle
mov
mov
mov
cmpl
je
mov
test
je
mov
mov
mov
movsbl
cmp
jl
movsbl
cmp
jg
movsbl
add
mov
mov
mov
mov
movsbl
cmp
jl
movsbl
cmp
jg
movsbl
add
mov
movsbl
movsbl
cmp
je
jmp
movsbl
test
jne
mov
mov
jmp
mov
add
mov
mov
add
mov
jmp
mov
mov
mov
mov
cmp
jne
xor
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
cmpl
je
cmpl
je
cmpl
jbe
mov
movsbl
test
je
mov
mov
mov
mov
add
mov
mov
cmpl
je
mov
cmpl
je
mov
mov
mov
cmp
jae
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
ja
mov
mov
cmp
jb
mov
mov
mov
add
cmp
jae
mov
mov
sub
mov
mov
add
mov
jmp
jmp
movl
jmp
mov
add
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
add
mov
mov
movsbl
mov
movsbl
cmp
jne
mov
movsbl
test
jne
mov
mov
movzwl
mov
mov
add
mov
jmp
mov
add
mov
mov
add
mov
jmp
jmp
xor
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
cmpl
je
cmpl
je
mov
mov
mov
mov
mov
test
je
mov
movsbl
mov
movsbl
xor
mov
mov
mov
movsbl
sub
mov
mov
mov
movsbl
mov
movsbl
lea
mov
mov
mov
movsbl
test
jne
jmp
mov
add
mov
mov
add
mov
jmp
mov
sub
jmp
xor
mov
pop
ret
lds
sbbl
cmc
rolb
push
and
mov
pop
in
add
mov
or
imul
loopne
xchg
mov
adc
int3
xchg
push
inc
cmp
mov
cs
movsb
sbb
push
cmp
xchg
mov
lea
insb
inc
movsl
pop
mov
xrelease
push
mov
jl
fnstsw
sahf
pop
je
loope
push
mov
outsb
xchg
ljmp
int
adc
jle
push
mov
rcrb
inc
test
rorb
and
inc
push
js
cmpl
inc
out
int3
adc
test
arpl
vmread
enter
push
xor
push
sub
xor
decb
mov
push
fiaddl
arpl
and
mov
add
mov
xchg
lcall
push
ret
mov
js
pusha
frstor
xchg
xchg
dec
mov
mov
pusha
lahf
aas
cs
dec
sahf
mov
xchg
jno
mov
aad
lahf
scas
insb
lods
pop
push
sti
in
rorl
out
out
xchg
mov
ds
sbb
aas
adc
jl
mov
dec
cmpsl
daa
cmpl
mov
int
mov
ret
cmpl
mov
pop
jbe
sub
stos
mov
pop
jge
cmp
imul
pop
sub
scas
or
xchg
sub
adc
inc
ret
cwtl
pop
lcall
ja
pop
icebp
jne
sahf
aas
inc
int
jmp
dec
and
or
mov
or
push
push
or
stos
push
call
adc
popa
sbb
cld
rolb
push
jbe
jns
enter
jg
test
xchg
mov
mov
push
dec
or
mov
mov
xor
jle
xchg
fdivs
xchg
cmpb
pop
popf
or
nop
mov
orb
xchg
ljmp
in
fucomi
cs
mov
mov
pop
mov
adc
daa
push
jbe
push
lock
mov
mov
mov
divb
bound
mov
dec
sbb
sbb
cmpsl
inc
js
dec
inc
push
shl
cmp
sbb
and
pop
jl
lds
movb
xchg
cli
sub
sbb
stos
jbe
sti
push
jno
and
jge
bound
dec
subb
cli
dec
cmpsl
xchg
jl
mov
je
icebp
addb
sub
sub
xor
fnstenv
fnstsw
sub
nop
dec
inc
daa
imulb
xor
xor
fs
add
outsb
inc
mov
das
jae
sub
dec
enter
sbbb
hlt
xor
lods
push
shrb
jns
push
cmpsb
pusha
je
aad
out
push
outsb
aas
or
mov
fisttpl
mov
push
inc
push
adc
xor
stos
push
stos
add
xchg
pushf
sbb
push
fists
enter
add
push
pop
mov
mov
xor
inc
push
lcall
fistpll
inc
mov
cltd
shlb
cmp
repnz
pushf
jo
xor
outsl
adc
adc
push
inc
dec
push
out
and
ffreep
ret
sbb
push
push
and
addr16
out
and
sbb
pop
and
out
ror
pop
mov
aam
push
cli
dec
xchg
fidivl
push
dec
jge
or
xor
sahf
jmp
jb
cld
test
add
rcrb
pop
stos
pusha
rcl
xchg
ret
lods
sbb
jns
xchg
int3
sub
ljmp
hlt
jle
lea
icebp
les
aam
loope
movsb
or
neg
test
ret
mov
inc
call
pushl
cli
mov
lock
xor
jmp
pop
cwtl
shl
test
mov
shll
insb
outsb
add
repz
inc
or
mov
jmp
and
push
std
popa
in
test
mov
mov
mov
out
cmp
movsl
arpl
nop
inc
pushf
pushw
inc
call
sbbb
int
sbb
lds
and
std
mov
movb
sbb
inc
mov
dec
xchg
mul
jb
sahf
mov
js
or
mov
fstpt
jbe
adc
out
add
out
les
inc
inc
std
jo
sbb
aas
js
xchg
repnz
and
xlat
repnz
bound
loope
enter
jo
mov
adc
lods
sti
insb
mov
xor
lret
pop
clc
aad
pusha
adc
enter
adc
subb
popa
nop
pusha
stos
mov
ja
xchg
jmp
lock
cmp
test
pop
sbb
stos
daa
inc
pop
xchg
aam
cmp
xor
push
xchg
popa
and
xor
out
xchg
add
push
sbb
pop
pushl
jmp
cmpsl
lds
push
xchg
cld
mov
pushf
andb
ljmp
loop
dec
cmovbe
cmp
pop
aas
mov
insb
jbe
into
adcl
shll
cmp
inc
jl
out
mov
repz
mov
mov
adcb
xor
inc
mov
lret
imul
adc
add
xor
fmulp
or
and
jecxz
push
out
cmp
mov
jmp
test
mov
icebp
iret
lret
in
bound
jns
jp
and
xchg
mov
mov
test
adc
pop
dec
clc
xlat
fistpl
and
cmp
pop
test
test
pop
sub
push
dec
scas
mov
mov
scas
push
cmc
aad
sub
push
arpl
sub
test
xchg
jl
mov
inc
test
test
sbb
enter
mov
add
jl
pop
je
fnstsw
xchg
ljmp
fnstcw
xor
mov
xchg
cmp
movl
mov
fists
mov
mov
iret
and
movsl
aas
jge
and
cmp
xor
dec
iret
aas
xchg
in
fwait
xchg
jno
xor
inc
aas
sub
cli
pop
jno
mov
mov
int
repz
and
jmp
inc
decl
sub
fisubrs
mov
dec
ret
neg
sbb
stos
jecxz
sarb
adc
add
rcrl
sub
cmp
jno
dec
out
adc
cmp
sbb
pop
jns
enter
lds
in
jne
or
iret
mov
jg
into
jno
push
fildl
jae
enter
fisttpll
in
or
icebp
xchg
cmpsl
mov
arpl
out
adc
jne
jg
sub
orb
pandn
lea
nop
gs
sbb
das
xorb
cli
mov
ret
flds
jge
xchg
add
bound
mov
sbb
pop
iret
lahf
fistpl
cmp
lret
mov
ret
addr16
mov
inc
push
inc
push
rorl
mov
aaa
adc
xchg
lret
sbb
sub
cmp
push
or
xchg
mov
loopne
aaa
outsb
mov
mov
push
mov
add
or
pop
push
sub
mov
mov
cmpsb
into
fs
jp
inc
dec
jnp
sub
popf
add
sbb
test
mov
movsl
and
jae
repz
inc
adc
fmull
scas
cmp
xchg
jmp
or
int3
jne
pop
jg
jecxz
shrb
sub
inc
loopne
andb
loopne
mov
xchg
loop
movsl
test
or
jl
outsl
stos
aam
xchg
js
mov
xchg
and
lea
mov
cmp
jge
inc
add
fimuls
xchg
sub
out
movsl
mov
pop
mov
jl
sbb
lcall
dec
pushf
insb
insl
das
inc
xchg
xchg
inc
fiaddl
out
sbb
jo
xchg
cli
addr16
xor
xchg
push
pop
sub
pop
popa
call
jne
mov
mov
xchg
dec
push
mov
mov
or
sub
fnsave
jbe
xchg
cmpsl
xor
ja
push
hlt
pop
fists
rcll
ljmp
pop
inc
jns
aaa
push
xor
daa
cmp
mov
pop
mov
jnp
xchg
cmp
xchg
or
push
scas
bound
and
mov
call
addl
loop
add
out
aas
jne
pop
rolb
xchg
adc
repnz
adc
not
dec
mov
adc
cmp
lea
mov
stos
les
ret
mov
stos
or
test
jns
pop
daa
pop
mov
cwtl
mov
sarl
xchg
mov
jo
mov
arpl
jne
out
adc
data16
in
mov
ret
fbstp
push
push
sub
imul
push
inc
cwtl
sub
fcmovu
xchg
shl
nop
xor
push
jno
mov
xchg
jg
mov
xchg
js
mov
mov
jecxz
add
or
leave
pusha
mov
iret
aas
mov
ret
add
push
xchg
lcall
fdiv
jg
shl
push
mov
mov
xchg
movl
in
jmp
in
inc
lods
nop
les
aaa
aas
push
add
xlat
sbb
adc
sbb
insb
outsb
out
lds
iret
sub
jns
shlb
shlb
push
dec
std
daa
push
or
mov
sub
popf
out
mov
leave
jg
ss
js
xchg
cmp
inc
inc
stos
sub
xor
les
aas
mov
inc
dec
data16
imul
pop
cmp
enter
or
sbb
shll
out
aaa
loop
push
mov
aas
testl
dec
push
ret
stos
pop
pop
enter
push
fwait
xor
cmc
push
and
push
cmp
sahf
jo
xlat
or
lret
cmp
loopne
enter
int
push
test
sahf
xchg
or
and
and
pop
mov
jo
adc
mov
cwtl
lods
jb
aam
bound
jbe
push
std
shlb
and
outsb
and
arpl
mov
sbb
dec
xchg
bound
pop
popa
dec
push
push
ror
fnop
aas
inc
lock
sbb
mov
js
sub
cmpsl
mov
aas
jnp
stc
mov
ret
mov
out
fmull
sbb
aas
lcall
inc
popf
jmp
xchg
inc
int3
mov
inc
jb
fs
stos
lret
adc
mov
inc
jo
mov
add
push
inc
dec
and
aam
sahf
mov
in
filds
iret
dec
js
mov
add
lret
lahf
lret
leave
sub
or
sub
push
aad
mov
fisubs
lds
xchg
daa
pop
xchg
inc
into
pusha
sbb
sub
gs
mov
push
fdivp
fimull
lods
mov
mov
fdivrp
xchg
mov
lds
sub
mov
adc
aam
test
push
and
icebp
es
cli
mov
cmpsb
and
nop
pop
jmp
icebp
dec
aas
movl
fdivrs
je
mov
in
jl
push
test
and
sub
enter
ss
aam
sub
adc
sarb
fbld
and
addr16
out
cwtl
xchg
xchg
out
aas
outsl
mov
mov
mov
inc
mov
lcall
dec
int
push
sbb
repnz
xor
pop
out
mov
push
lods
cltd
in
les
xchg
repz
lret
and
push
dec
xor
xchg
ror
add
in
lods
aaa
xchg
jno
add
xlat
inc
dec
mov
mov
pop
mov
jne
loopne
xor
addr16
push
jae
xchg
pop
mov
loop
inc
dec
inc
sbb
imull
xchg
sti
icebp
shll
fidivrl
les
mov
xchg
mov
xchg
imul
daa
sbb
inc
ret
pop
cmp
cltd
into
int
or
jns
lods
mov
aas
mov
mov
xor
enter
jns
mov
jg
aas
xor
and
int
lods
rcr
out
xchg
push
xchg
cmp
xchg
pop
push
push
sub
mov
nop
xorl
iret
mov
push
cmp
cmpsl
sarb
in
fstps
daa
les
and
and
mov
lods
rcrb
jg
iret
cmp
shrl
fildll
std
adc
nop
push
imul
cmpsl
ljmp
neg
cmc
stos
aad
addr16
jle
cwtl
rorb
pop
leave
das
daa
or
jl
pop
insb
int3
fs
and
out
fbstp
aas
lea
mov
jg
sub
stos
icebp
gs
jg
sub
push
mov
mov
iret
rorl
adc
aam
addr16
cmpsb
pop
xchg
inc
js
push
xchg
subl
adc
dec
cli
rcrl
jmp
add
push
lea
adc
dec
xchg
cmp
push
jno
pop
mov
pop
rolb
movsb
xchg
inc
out
mov
ljmp
popa
push
dec
inc
movsl
pushf
push
push
pop
scas
push
dec
rcrb
and
mov
sub
shlb
test
call
bound
test
adc
inc
in
mov
repnz
inc
mov
test
bound
fcoms
in
and
xchg
sbb
pop
mov
scas
xor
xchg
lods
mov
cmp
stos
adcl
dec
lods
jl
aam
sti
mov
ds
xchg
subb
jae
dec
push
insb
lea
stc
mov
jge
push
int
orl
add
pushf
xor
or
jns
in
clc
pop
lahf
mov
push
cmpsl
sbb
sub
aam
std
nop
inc
outsl
mov
xor
rclb
xor
jmp
mov
data16
jle
xor
push
movsb
enter
lods
pop
in
scas
mov
lods
addr16
lods
jl
inc
and
xabort
adc
or
xchg
cmpsb
std
scas
repnz
ficoml
mov
cmc
movl
scas
sarl
rorl
loop
fs
loope
mov
dec
cmp
or
imul
xchg
sbb
xor
sbb
mov
out
rorb
xchg
loope
sbb
int
roll
sahf
leave
xchg
shlb
or
or
es
shrb
pop
push
sti
add
cld
ret
or
add
aam
sub
push
mov
add
sbb
and
push
mov
stos
jg
in
or
mov
inc
addr16
aas
dec
arpl
and
or
int3
jae
inc
scas
lea
xchg
fcom
push
aas
aas
pop
adc
cmp
mov
push
sbb
pop
adc
add
pop
jecxz
or
dec
enter
bound
imul
xchg
nop
add
negb
mov
inc
mov
push
jecxz
jge
lds
fisttps
nop
cmc
icebp
int3
xor
jge
add
in
xor
push
dec
fsubs
sub
push
push
mov
push
inc
cmp
enter
cmp
mov
enter
mov
mov
stc
xchg
xchg
mov
add
pop
push
mov
std
cmpsb
sbb
cmp
cmp
or
sub
test
pop
mov
cltd
and
test
cmc
mov
fmuls
ror
sahf
xor
cltd
int
push
aam
push
fldt
in
lock
xchg
xchg
and
fcoms
repz
popa
js
sub
xchg
jp
jnp
mov
sbb
sbb
mov
mov
mov
sbb
sti
std
stc
nop
mov
sbb
dec
and
mov
jo
out
mov
test
popf
outsb
fsts
jae
and
push
push
rol
out
add
loopne
mov
pop
xchg
pop
out
push
stos
cmp
enter
stos
outsb
xchg
inc
xor
and
inc
push
cmp
inc
mov
mov
adc
outsb
daa
stos
inc
notl
pusha
out
movl
jne
mov
push
push
hlt
mov
mov
leave
mov
sbb
scas
nop
mov
into
sbb
in
pushf
mov
adc
adc
lret
int
and
jnp
lret
push
rcll
cmp
out
mov
mov
incb
push
ss
mov
xor
sarb
mov
xchg
xchg
add
roll
adc
pop
sti
mov
push
mov
popa
mov
xlat
aas
test
inc
addr16
iret
imul
sub
jge
inc
sub
loop
mov
mov
clc
sub
and
sbb
mov
or
xchg
scas
inc
hlt
popa
push
div
addl
ja
xchg
jmp
cltd
shll
dec
lods
jecxz
xor
insb
cs
test
out
dec
xor
sbb
add
sbb
push
adc
lret
jns
ret
arpl
dec
lahf
jnp
dec
mov
sysexit
cld
push
fnstcw
xor
inc
ss
pop
xchg
ficoms
mov
andl
lea
push
les
clc
decb
adc
fldenv
xor
inc
int3
out
jnp
mov
dec
rcl
mov
enter
inc
sub
inc
mov
fwait
xor
jmp
push
lods
das
xchg
mov
insl
cli
pushf
mov
imul
enter
pushf
ror
cmp
jecxz
xlat
pop
lods
xchg
lods
xchg
loop
imull
sub
inc
sti
xchg
cmp
xchg
hlt
lock
xor
lahf
add
ja
cmp
cmpsl
mov
rorb
movsb
int3
xchg
adc
lahf
fdivrs
pop
pop
cld
mov
push
mov
popa
andl
sahf
inc
icebp
cmpsl
mov
push
and
adc
in
mov
xchg
fbstp
xchg
js
dec
sub
out
in
mov
arpl
movsb
xchg
pop
lea
xor
jle
loope
ret
cmp
ret
mov
pop
ljmp
xchg
jl
dec
add
aas
mov
insl
shlb
int
push
and
movsl
sub
pushf
shll
aad
or
ss
shl
repnz
cmp
or
cmpsl
jg
push
movsl
mov
push
test
mov
inc
mov
mov
fistl
sub
jecxz
ret
mov
pmulhuw
mov
xor
popf
sbb
pop
inc
fidivrs
aas
stos
push
ds
mov
adc
fs
aad
add
nop
mov
aaa
and
stc
movl
hlt
pop
and
scas
xchg
xlat
dec
mov
mov
call
xor
wrmsr
inc
add
inc
dec
test
pop
pop
test
test
push
stos
inc
inc
xor
cltd
pop
or
pop
push
rorl
ss
sahf
enter
int
lods
add
dec
std
xor
jne
cwtl
push
push
ficoms
push
shrb
adc
inc
cld
fisttps
push
xchg
popf
sbb
mov
jne
psubsw
lret
inc
ljmp
and
mov
push
leave
mov
cltd
insb
mov
inc
sub
or
xchg
iret
das
lahf
or
add
and
lret
mov
fdivr
add
aad
sti
jle
mov
xchg
pop
jg
pop
adcb
pop
mov
aas
loopne
fnstenv
xor
rcll
xchg
push
lds
xchg
cmp
jne
mov
jbe
xor
inc
sub
xchg
fwait
pop
iret
sbb
loopne
xor
fidivrs
sub
lea
and
and
das
dec
push
and
lods
xchg
rcll
inc
getsec
add
cltd
mov
aas
inc
mov
cmp
lret
xor
dec
jae
mov
mov
dec
hlt
and
ret
gs
enter
inc
push
and
in
mov
dec
push
ljmp
sub
pop
xchg
adc
xchg
push
mov
push
int
mov
sbb
lods
xchg
adc
movsb
add
push
or
mov
or
insb
push
xchg
push
or
dec
sub
stos
movsl
in
insb
daa
sahf
push
in
dec
pop
sub
pop
fsubrs
pop
or
jg
aam
pusha
pop
jecxz
inc
jmp
pop
aas
and
nop
xchg
cmp
add
rclb
push
sub
shl
xor
andb
aas
mov
lret
lahf
bound
jbe
repz
dec
lret
jge
jb
dec
jle
cmpsb
xchg
pop
mov
int3
in
mov
inc
scas
nop
and
push
fstl
cmp
push
xchg
and
adc
rcr
inc
lcall
mulb
call
jae
sub
adc
sub
mov
adc
jnp
xor
stos
js
or
xchg
invd
lea
and
shl
or
pop
cmpsb
push
sbb
sub
xorl
scas
outsl
cmpsl
fwait
jae
push
hlt
into
cmp
inc
pop
pop
cld
lea
mov
dec
xor
jl
movsb
scas
orl
inc
jne
pop
dec
dec
and
fidivrl
pop
jne
mov
inc
cmp
stos
jno
jns
push
int3
fmul
loop
xorl
inc
sub
int
xchg
das
insl
dec
xchg
lea
fs
fcompl
rolb
mov
adc
inc
pop
enter
leave
jge
icebp
or
jmp
add
push
push
leave
orb
loop
sbb
pusha
inc
sbb
outsl
scas
loopne
pop
push
jp
movsl
or
jbe
pop
scas
add
or
in
xor
imul
fcoms
adc
xchg
push
pusha
dec
push
inc
dec
cmp
lcall
lahf
mov
sbb
mov
xchg
xor
mov
dec
mov
scas
and
push
add
push
or
imul
rcl
mov
pop
test
xchg
xchg
ja
sub
or
in
aas
push
stos
sbb
lock
and
ficoml
ss
inc
mov
mov
sub
movsl
test
mov
shlb
cmp
push
mov
sbb
bound
inc
popa
sbb
xchg
cmpsl
add
xchg
mov
ret
xor
cs
sub
lret
push
rclb
movl
out
xor
fidivrs
inc
int
das
int3
and
repz
and
notb
jp
cli
rol
out
jecxz
ficoms
mov
add
fwait
adc
sub
fwait
inc
cmpsl
dec
sahf
sbb
jo
jmp
leave
inc
mov
and
xchg
pop
push
dec
xor
dec
xor
test
inc
add
or
push
mov
pop
dec
mov
mov
jo
fnstenv
test
hlt
sbb
frstor
js
roll
push
lret
jb
mov
push
xchg
and
loop
xchg
popa
cmp
and
test
push
mov
pop
insb
loope
xchg
mov
jno
pop
dec
data16
jp
jle
and
cmp
ja
push
fcoms
jp
mov
sub
pop
jg
xor
and
pushf
mov
sbb
push
jbe
pop
int3
and
int
sub
ja
mov
cmp
pop
xchg
lret
xor
cmc
out
sbb
adc
imul
sub
xor
dec
std
jns
sbb
lods
mov
push
clc
or
cmp
aad
jae
dec
fs
aad
insb
aas
test
rcrb
add
jecxz
dec
jle
xchg
mov
cmp
inc
and
aas
stc
cmp
xorl
movl
movsl
mov
add
cmp
scas
mov
pop
mov
repz
test
test
push
sub
jmp
mov
lret
inc
push
push
dec
inc
mov
cltd
sbb
popf
daa
sarl
mov
or
loopne,pt
movsl
out
cld
in
addr16
inc
and
dec
and
imul
dec
in
dec
mov
push
xchg
xchg
sub
mov
movsl
push
add
push
and
jno
outsb
fidivrl
mov
mov
scas
push
jnp
rorb
repz
nop
loope
lea
mov
add
push
icebp
inc
outsl
and
add
scas
into
nop
ficoms
roll
aas
roll
arpl
sub
xor
out
push
push
test
mov
idiv
jg
xor
inc
xor
fldz
push
movsb
outsb
lea
gs
jl
cli
loopne
loope
xchg
push
mov
pop
stos
mov
xorl
das
cmp
dec
sub
mov
jae
xchg
leave
mov
fnsave
jecxz,pt
fmull
xchg
and
xor
insb
xchg
push
xor
mov
movsb
dec
das
and
sarb
sub
push
enter
dec
fcmove
aam
mov
and
rcrb
icebp
jne
neg
pop
jnp
mov
lcall
cwtl
inc
js
sub
push
mov
sahf
inc
mov
lcall
loope
test
xchg
sbb
shrb
and
aas
nop
es
call
jne
mov
adc
mov
sub
xchg
jno
pop
scas
sub
mov
stos
jno
xor
lods
popf
les
loope
xchg
cmp
xor
pusha
mov
and
jg
jbe
xchg
outsl
jne
mov
xor
xchg
jne
icebp
jg
xor
int3
xchg
jae
lcall
lods
pop
push
xchg
sbb
push
int
shrl
inc
les
lahf
and
dec
or
mov
punpckhbw
fadds
pop
sbb
push
in
int
lahf
rorl
xor
cmp
push
xchg
clc
ljmp
or
jo
lea
xchg
loop
jmp
sub
insb
lea
inc
cs
push
cli
jg
push
mov
scas
in
xchg
jae
imul
int3
or
sub
bound
push
fistps
clc
out
or
xor
ffreep
inc
test
orb
in
enter
test
inc
mov
jle
lds
sub
lret
adc
jno
cmp
pop
push
xchg
xor
adc
insl
pop
das
mov
cmp
xor
adc
jb
cli
and
jbe
inc
sbb
cmc
dec
popa
xlat
push
and
test
mov
rcll
mov
ljmp
out
dec
lahf
or
movsb
popf
xchg
stos
pusha
pop
in
pop
mov
pop
scas
stos
aam
jp
call
push
inc
js
xchg
xlat
or
mov
pusha
lds
pop
int3
inc
and
stc
xor
mov
cltd
xor
xlat
push
fmuls
fmul
mov
and
add
ja
mov
ljmp
outsb
je
and
icebp
dec
daa
and
push
pop
xchg
lahf
jnp
mov
xchg
jl
ja
je
fnstenv
mov
aas
insb
sub
clc
mov
or
cltd
cmp
in
pop
iret
fucomi
xchg
xor
mov
imul
arpl
mov
fwait
dec
enter
xchg
inc
icebp
pop
jnp
dec
pop
jg
je
inc
and
inc
jmp
xor
push
out
push
push
inc
in
jp
out
cli
push
inc
popf
mov
jns
sub
and
xchg
jns
xor
in
mov
dec
xchg
push
std
jmp
push
inc
xor
push
push
daa
sbb
inc
ret
pop
incb
lods
push
fs
jg
push
rclb
sbb
imull
stos
stos
xor
mov
xchg
aas
clc
jecxz
or
xor
and
pop
push
ret
push
push
push
imul
and
push
add
push
mov
leave
xor
dec
mov
ljmp
jb
xchg
rcrb
jp
cs
cwtl
iret
mov
aas
adc
push
mov
sub
sbb
and
das
sar
xchg
or
in
pop
scas
jae
stc
push
test
xchg
lods
cmp
idivl
negl
in
in
xchg
pop
clc
inc
test
ret
mov
clc
mov
jne
imul
mov
pop
dec
dec
les
bound
jbe
cmpsl
sbbb
movsl
ret
pop
cwtl
call
xchg
icebp
cmp
fcomp
add
inc
enter
push
mov
repnz
stos
outsl
or
aam
into
fcompl
stos
cmp
mov
jae
addl
inc
xlat
fldenv
je
lcall
movsb
mov
push
fwait
sub
or
push
mov
push
stos
mov
enter
insl
adc
repz
lock
inc
inc
pop
mov
das
sbb
popf
pop
or
mov
mov
out
sahf
push
nop
fmuls
push
in
push
xchg
pop
add
sub
cli
xchg
mov
imul
cmp
mov
and
and
mov
dec
cmp
jns
push
out
mov
inc
daa
jg
rorl
cmp
inc
mov
mov
push
sti
pop
test
push
lcall
testl
ljmp
popf
out
pop
outsl
jmp
pop
call
cld
iret
iret
add
mov
jl
sarb
cwtl
xchg
mov
xchg
inc
std
aas
sbb
jno
lock
push
subb
mov
lods
cmp
loop
pop
or
idivl
shl
sbb
aam
pop
loop
xchg
push
fnstsw
adc
add
jae
cmp
lods
adc
mov
rcr
arpl
lods
sub
test
dec
xchg
inc
imul
mov
sub
sti
mov
ds
insl
sub
xor
jge
cmp
push
sbb
popf
dec
fstps
xor
adc
xchg
mov
int
xor
push
mov
pop
addb
cltd
push
jnp
cmp
add
js
mov
loop
ret
pop
or
sbb
mov
outsl
pop
mov
lcall
jp
shrl
inc
test
mov
std
sahf
cmpsb
aas
xchg
push
jecxz
sbb
inc
inc
pusha
sbb
adc
mov
push
push
xor
push
mov
movsb
stos
pop
cltd
cmp
pop
xchg
imul
or
cmpl
cltd
loop
dec
lret
dec
xchg
adc
aas
insl
mov
push
aam
mov
pop
xor
mov
lods
das
mov
shll
adc
jp
sbb
xchg
dec
out
sub
inc
pop
adc
pop
lcall
jecxz
push
adc
cmp
adc
xchg
mov
lahf
cmp
stos
and
ljmp
push
push
rorl
lock
jb
jg
in
dec
add
pop
push
xchg
lods
sahf
add
xor
jne
jmp
test
rcl
fs
sbb
rcrl
inc
cmp
jbe
pop
push
push
or
lret
push
mov
jno
aad
cli
loope
jmp
ds
pop
into
ficoms
cmp
insl
xchg
lea
and
and
nop
inc
dec
in
push
mov
mov
mov
loop
xor
push
jp
nop
jno
sbb
xor
pop
and
leave
nop
jle
ds
push
cmpsl
outsl
scas
loope
fsts
lea
push
or
in
sarl
pop
sbb
iret
xchg
cwtl
lcall
xor
lods
lea
mov
gs
lea
jb
jle
lds
push
jo
pushf
les
in
jecxz
in
cmp
sub
xchg
jbe
jns
cmp
inc
incl
iret
add
add
addr16
pop
shlb
and
dec
and
inc
lret
or
out
inc
and
xchg
mov
xchg
pop
mov
std
in
mov
and
pop
mov
mov
push
cltd
jle
adc
movsb
mov
pop
mov
and
pop
push
pusha
push
pop
cmp
dec
test
cltd
mov
mov
dec
cmpb
aaa
sbb
icebp
call
test
jne
xor
jne
sbb
mov
testl
out
dec
mov
es
sbb
mov
cmp
jns
xor
fistpll
sub
xchg
push
aam
push
aaa
lds
daa
xchg
xchg
adc
mov
jle
dec
loop
es
pop
push
pop
cltd
sub
xchg
jl
pop
mov
add
mov
xor
mov
mov
push
dec
mov
mov
xchg
xchg
incb
test
push
aam
or
popf
lret
inc
xchg
adc
outsb
and
aas
adc
fisubs
or
adc
push
jle
xchg
jnp
mov
sbb
push
mov
add
or
or
jne
mov
addps
push
and
cwtl
jno
clc
ret
mov
lahf
push
xchg
add
push
repz
pop
movsl
jae
lock
lcall
sbb
mov
push
mulb
stc
rorl
jne
or
shlb
in
jo
jmp
jge
dec
jmp
add
add
adc
inc
mov
aad
dec
je
mov
shl
jns
push
test
sub
push
push
mov
jb
test
xchg
dec
add
lea
mov
rolb
mov
sub
jns
dec
call
adc
pop
mov
and
mov
push
es
fnstcw
adc
in
flds
xchg
xchg
lock
inc
shl
push
in
popf
outsl
push
xor
and
mov
mov
cld
je
inc
sub
aad
ret
xchg
call
mov
out
add
ljmp
jg
jp
pop
les
cs
xor
shlb
add
jns
insb
jno
add
dec
mov
fldl
aaa
mov
test
push
leave
mov
cld
ja
sub
cwtl
pop
movsl
push
test
mov
leave
into
or
rclb
push
pop
imul
lahf
outsb
jg
push
cmpl
lea
or
inc
in
push
and
aad
xchg
shrb
frstor
bound
cmp
in
mov
dec
out
and
and
mov
repz
das
push
or
sbb
inc
xchg
imul
xchg
mov
push
or
inc
js
push
push
jnp
cmc
dec
push
push
subl
bound
mov
pop
testb
dec
jmp
pop
cli
pop
pop
push
call
shrl
aam
popf
adc
jmp
adc
inc
and
push
decl
add
stos
add
add
pop
jbe
aas
cwtl
sti
repnz
lret
dec
in
xchg
pop
add
cs
test
jno
pop
sub
xchg
jl
orl
jno
xor
jg
sbb
push
xlat
push
xor
jnp
mov
mov
pushl
aaa
pop
mov
xor
repz
xor
mov
insl
mov
xchg
push
pop
cli
hlt
test
adc
mov
mov
and
jb
push
std
aaa
cli
fcmovb
xchg
sahf
dec
sub
jb
rorl
pop
xchg
fistpl
cmp
pop
xchg
inc
negb
andb
mov
in
imul
jnp
inc
dec
sti
lret
int3
cmc
xchg
pop
adc
insl
rcrl
loopne
dec
loop
fisttps
ret
sti
add
aam
int
dec
dec
push
aas
lret
dec
in
imul
jle
push
jge
fldl
xchg
jno
ja
push
stc
push
pop
jle
sbb
inc
cmpsb
add
call
xchg
xor
stos
aas
mov
add
jg
dec
xor
mov
aam
fldcw
mov
dec
mov
js
sub
dec
jg
sbbl
mov
mov
add
xor
adc
adc
jg
test
cmp
or
gs
mov
in
sub
insb
push
sub
xor
add
jae
pop
divb
sbb
xchg
adc
jl
jge
mov
inc
or
pop
loopne
inc
out
ror
add
insb
int3
fisttps
les
int
inc
es
push
jae
lock
mov
int3
inc
cmc
jb
mov
mov
imul
out
push
add
aad
push
push
mov
cmp
push
fstpl
sbb
or
je
mov
fwait
xchg
fistl
scas
inc
ljmp
pusha
ret
cs
xchg
fbld
fstps
jl
insb
xchg
push
inc
lret
movl
and
pop
fldl
adc
out
fidivl
mov
dec
xchg
push
int3
cmp
xchg
int3
jne
mov
rcrb
stos
vmread
add
fnstcw
lahf
lods
scas
adc
sahf
addr16
inc
leave
and
inc
cmp
mov
push
std
mov
sub
add
loope
xchg
cmp
mov
xchg
aam
mov
pop
popf
pop
mov
push
mov
mov
addr16
inc
xchg
test
mov
inc
loop
mov
movsl
inc
adc
dec
cmp
scas
lahf
notl
jo
lret
sbb
mov
cltd
add
xchg
test
xor
cmpb
les
nop
addr16
gs
repnz
push
sub
ss
mov
dec
cmp
jl
xchg
xor
test
aas
xchg
jns
dec
out
addb
xor
inc
fsubr
shlb
adc
xor
gs
xchg
push
lcall
xor
and
cmpsb
and
aaa
mov
mov
loop
stos
push
iret
mov
mov
mov
sahf
ret
movsb
push
cwtl
mov
pop
inc
pop
addb
rolb
jg
rclb
imul
cmp
sub
push
jo
mov
xchg
test
pop
cmc
negb
mov
add
or
push
clc
int
xchg
shrb
sub
out
sub
shrb
push
aas
inc
ret
cltd
add
movsb
jmp
fistps
xchg
mov
add
push
js
jo
cmp
jbe
and
jb
fisttps
or
out
out
lods
orb
cmc
arpl
cmp
push
cmpsl
and
push
inc
sub
test
adc
sbb
sub
xor
pop
mov
mov
cmpsl
popa
sahf
cld
scas
ja
out
dec
inc
ret
sub
sub
sbb
xchg
loope
cld
push
inc
stc
jge
les
ljmp
in
xchg
jnp
and
cmc
cmpsl
jnp
inc
xor
lea
imulb
shl
js
inc
mov
aas
push
add
jne
push
pminub
aad
sbb
or
push
fstl
add
mov
or
cwtl
adc
xchg
hlt
arpl
sub
inc
addr16
adc
cmc
and
stos
jae
add
dec
xchg
stos
clc
test
xor
sbb
out
xor
aas
and
jmp
jbe
les
lods
mov
out
mov
out
xlat
mov
push
clc
ret
sbb
cmpl
adc
sbb
jmp
add
aas
stos
leave
jl
fwait
popf
iret
mov
xlat
imul
and
sti
jecxz
push
punpckhdq
mov
mov
push
sbb
in
push
or
sub
clc
jp
and
jnp
push
inc
in
pop
adc
add
fdivrl
lcall
cmp
cwtl
dec
fldcw
and
jl
and
lea
mov
imul
xchg
jbe
jbe
std
xor
ljmp
cmpsl
nop
inc
loope
das
push
push
fnstenv
and
jne
loope
cmp
addb
push
je
xchg
les
cltd
pop
cmp
or
sahf
or
xchg
int
xorb
subb
or
rorl
jecxz
jg
adc
ds
lods
push
data16
sbb
mov
add
shr
xor
pop
inc
dec
sbb
cwtl
cmp
enter
pop
test
push
dec
fsub
std
pushf
nop
add
lret
inc
add
mov
sbb
sarb
sub
ficoml
fwait
stos
ds
mov
push
popa
lods
bswap
enter
es
lods
and
xchg
mov
push
in
aas
sbb
xchg
gs
pusha
test
aas
push
and
inc
cli
jg
movsb
mov
pushf
and
mov
push
mov
xchg
jecxz
cmpl
js
clc
xor
test
inc
xchg
iret
adc
mov
push
mov
lods
or
imul
into
ja
lret
test
cmp
adc
adc
popa
mov
sbb
dec
repz
pop
pop
push
jle
into
mov
adc
movhps
jle
pop
nop
out
sub
pop
fdivrs
aam
repnz
xchg
fsqrt
in
pop
cmp
cmc
sub
pop
lods
repz
std
pop
pusha
bound
std
mov
add
sbb
xchg
mov
idivl
pop
notl
fwait
inc
movl
popf
ret
cld
stc
inc
and
push
lahf
outsb
push
mov
xor
push
mov
xchg
dec
aam
roll
popa
ficomps
and
xchg
lahf
adc
lds
jo
sti
movhps
sar
lods
arpl
je
test
cs
sub
and
pmulhw
cld
sarl
orl
jne
sub
imul
mov
outsl
jmp
popf
mov
sub
test
test
lds
or
leave
jmp
mov
repnz
pop
mov
mov
popa
sbb
pop
push
add
sahf
jg
mov
mov
adc
data16
js
cmp
cmpsl
test
pop
or
push
dec
fistl
jp
adc
in
push
loopne
incl
sbb
sbb
or
mov
push
loope
dec
or
cli
shrl
adcl
lcall
test
and
jecxz
and
and
add
jnp
cmp
xchg
fsubrs
ds
imul
in
adc
pushf
xchg
ret
in
repnz
cmp
pushf
or
pop
cmc
leave
or
cmp
jnp
inc
sbb
outsl
insb
push
clc
mov
int3
enter
sub
lcall
test
popf
ds
div
jmp
xchg
xlat
dec
sbb
pop
stos
les
movsb
clc
sub
les
xor
orl
xchg
add
xchg
cmp
dec
and
adc
js
push
xor
sub
jle
cld
ja
xchg
popf
insb
sub
pushf
sub
leave
xlat
aad
jmp
and
je
mov
push
pop
ja
inc
clc
xchg
test
pop
mov
rorl
das
enter
dec
rclb
mov
xchg
pop
adc
pop
cmpsb
cmpsl
loop
or
inc
xchg
std
fdivrp
push
sahf
cmp
pusha
enter
add
das
jp
inc
and
cmpsb
pusha
xchg
xor
inc
mov
dec
xchg
jg
push
sbb
pushf
hlt
decl
push
test
nop
enter
pop
popa
lock
xor
lcall
pop
push
xor
mov
jb
push
ret
pop
sub
iret
xor
xchg
and
xor
sbb
pop
movsl
lds
sbb
mov
jnp
andl
pop
mov
mov
xchg
push
cmp
popf
ret
mov
mov
jg
dec
adc
lds
aad
movl
je
call
push
push
xchg
push
sbb
insb
mov
mov
arpl
jns
stos
decb
rclb
movsb
aas
mov
pop
pop
inc
mov
add
ret
gs
push
ret
shlb
push
push
pusha
push
sub
sahf
cltd
push
sbb
dec
roll
cmp
dec
stc
in
cmp
push
dec
mov
cmpsb
jmp
or
dec
sub
rolb
aas
movsb
xor
ljmp
mov
outsl
cltd
mov
imul
adc
or
out
mov
xor
pop
jns
xchg
int
mov
pop
iret
xchg
ljmp
in
arpl
or
enter
andl
adc
pop
mov
or
pusha
shrb
popf
jg
cli
push
fcoml
idivl
xchg
aas
mov
int
dec
jbe
push
mov
push
outsl
fwait
dec
pop
add
and
add
fucom
imul
xor
xchg
les
call
es
scas
sbb
nop
shl
cltd
xchg
rcll
in
mov
pop
ss
xlat
stos
cmp
out
fsubrs
push
scas
and
sbb
inc
lods
fmuls
adc
push
lods
push
xchg
sub
add
ss
jbe
or
mov
int
loope
xor
dec
les
shl
push
cmp
pushf
adc
mov
sbb
enter
dec
dec
and
push
push
stos
inc
jmp
out
xchg
scas
loop
cmc
dec
mov
inc
lret
negl
xchg
cmp
mov
inc
pop
orl
mov
cmp
mov
inc
in
adc
shl
pop
push
fnstsw
xor
adc
and
stos
subl
mov
xchg
int
aad
pop
cld
fisubs
xor
pop
stc
cmp
out
enter
lret
bnd
outsl
scas
lret
mov
cmp
movsb
fstpt
sub
pop
lds
jmp
xchg
jp
js
or
pop
xchg
adc
std
inc
nop
xchg
add
push
xchg
and
xlat
aas
mov
in
add
test
xchg
dec
sti
pushl
iret
test
jo
push
iret
mov
fcomps
push
daa
add
jl
cld
lcall
xchg
roll
iret
mov
add
push
xchg
mulb
cmp
es
call
fldcw
pop
inc
insl
xchg
jg
and
lock
jg
insb
imul
sarl
xchg
outsl
cmp
xor
test
cmpl
dec
scas
push
mov
std
ss
adc
adc
scas
fsubs
inc
xchg
out
test
test
hlt
xor
push
cmpsl
mov
or
sti
dec
in
add
inc
xchg
and
cmp
push
mov
cmp
enter
lods
aaa
shrl
inc
mov
out
std
cmp
add
fwait
test
pop
cld
fiaddl
jns
das
lods
jbe
mov
jne
frstor
inc
jp
lret
scas
push
mov
lea
or
fs
jb
inc
dec
inc
pop
push
shr
icebp
ret
test
pop
mov
pop
push
sbb
or
ret
sub
sbb
lret
push
sub
nop
mov
jns
add
mov
movsb
out
jge
fwait
xchg
movsl
test
jl
add
dec
and
or
xchg
jne
cmpsb
jge
jecxz
jo
les
jle
or
andl
test
push
in
pop
scas
pop
dec
mov
je
xchg
in
bound
pushf
add
add
fnsave
in
daa
mov
mov
mov
push
daa
xor
outsl
int3
jle
fcmovnb
sbb
imul
push
cltd
es
jle
inc
lret
lahf
push
dec
push
or
pop
xor
mov
inc
inc
icebp
jbe
test
scas
loopne
inc
push
add
insb
push
mov
mov
rcrl
mov
movsl
mov
aad
sub
stc
xchg
push
lcall
aam
stos
loopne
repnz
dec
sbb
cmpsl
sbb
push
adcl
cmp
mov
mov
add
dec
fldenv
loope
ljmp
shrb
dec
lahf
dec
dec
pop
jb
fwait
sbb
xlat
jle
out
test
xor
mov
cli
into
es
xor
das
add
enter
mov
je
ficoml
or
xchg
lds
insb
pop
push
pushf
dec
xor
es
insw
aaa
push
insl
dec
xchg
cmp
cmp
xlat
mov
inc
in
fwait
cmpsb
pop
sahf
xor
lock
mov
add
bound
jns
das
adc
push
ds
aas
inc
jne
push
push
xor
mov
pop
into
dec
mov
fwait
in
enter
jmp
and
xor
mov
test
aas
fnstcw
jns
es
inc
and
push
aad
test
push
rorl
inc
xchg
fimuls
and
dec
enter
cmp
mov
movsl
out
inc
outsl
xchg
inc
push
or
imul
cmp
push
test
xlat
outsb
dec
dec
dec
cmpsl
lcall
faddl
ss
and
cmp
adc
fsubrs
cld
cmp
aas
sbb
in
insb
ds
sti
or
out
and
vmovd
outsl
nop
cs
loope
aad
push
sarl
push
jb
pop
les
mov
mov
mov
lea
out
icebp
jp
jge
mov
pop
enter
es
xorl
xchg
xchg
pop
pop
sarb
xchg
fs
std
fmull
dec
nop
push
push
push
cmp
inc
shlb
sbb
pusha
arpl
push
out
mov
sbb
std
jp
inc
sub
push
jb
sbb
subl
jb
rclb
xlat
mov
ss
mov
cmp
xchg
cmp
mov
pop
imul
inc
push
mov
sbb
clc
push
mov
cmpsl
xchg
xchg
push
fcompl
mov
push
mov
pushl
std
lds
sbbb
popa
sub
push
or
cli
mov
test
idivb
jle
in
add
adc
push
pushf
bound
push
cmp
jo
mov
insl
xchg
and
outsl
mov
xchg
xlat
fmul
mov
push
or
mov
jl
xchg
pushf
fnstcw
lods
cmp
jecxz
iret
jbe
cmp
pusha
rcrb
jle
aam
xchg
sub
scas
dec
outsb
mov
jno
mov
aas
lea
movsb
mov
mov
sbb
cmp
jae
or
stc
jbe
mov
scas
mov
jecxz
xor
cld
ja
mov
pusha
lret
jo
xchg
cmp
pop
adc
or
inc
adc
daa
idivb
mov
loop
xchg
test
loopne
std
in
imul
rorl
push
or
sub
xchg
push
inc
and
and
xchg
fwait
subl
shrb
jp
clc
cmp
lds
arpl
ret
mov
mov
aad
xchg
jge
repz
cmp
lock
pop
mov
dec
mov
dec
xchg
fsub
mov
imul
push
or
jo
xor
dec
mov
mov
sbb
xchg
pop
fs
xchg
nop
xor
mov
mov
lock
pop
cld
push
add
pop
or
js
repz
icebp
jecxz
add
movsl
push
in
mov
ror
movsb
lds
mov
mov
mov
jmp
ret
mov
jmp
and
push
fmull
pusha
and
mov
out
mov
xchg
xchg
lret
jbe
js
jne
lahf
adc
fbld
in
jns
stc
in
push
adc
adc
mov
mov
mov
sahf
xchg
pop
mov
jb
cli
or
movb
outsl
push
dec
sbb
ss
lds
xchg
mov
sbb
push
add
pop
or
sub
push
sbb
pop
mov
adc
jae
in
iret
lea
or
xor
jecxz
sarb
lea
mov
sub
test
dec
dec
jmp
andl
out
insl
pop
sahf
push
xchg
stc
mov
add
addr16
in
into
iret
popl
sbb
xor
xchg
cmp
adc
lahf
adc
push
ja
xor
cwtl
mov
movsb
aas
lods
std
jecxz
xchg
movsl
push
push
sbb
mov
cmp
jge
sbb
or
and
jae
in
movsb
gs
test
mov
xor
cmp
or
push
scas
shrb
std
jns
cmp
adc
sbb
mov
cmp
inc
mov
push
push
fadds
push
push
mov
adc
cmp
and
push
pusha
push
out
push
cs
mov
push
jns
mov
int3
jge
dec
adc
inc
cmpsl
sbb
lcall
lret
dec
cmc
sub
int3
rcll
xchg
out
fldt
and
xchg
or
dec
idivb
xlat
jg
mov
jl
div
xchg
popa
bound
imulb
xchg
aas
jecxz
in
std
vandnps
push
sbb
ss
int3
inc
lds
jp
ss
js
push
sti
notl
imul
aad
dec
test
aam
hlt
fwait
enter
xor
ret
sub
movsb
fsts
shll
dec
enter
aad
sub
shrl
lock
and
fwait
dec
pop
push
and
mov
push
movsl
imul
mov
xchg
jno
aam
mov
enter
or
roll
xchg
sbbb
pop
inc
mov
rorl
cld
insb
mov
scas
adc
aaa
clc
lea
inc
push
setg
and
ret
push
pop
sub
xchg
adc
arpl
mov
inc
das
or
inc
ja
pop
int
push
mov
aas
aam
mov
cmp
aas
popa
add
cmp
ljmp
fsubs
aas
call
sbb
push
aam
xchg
pusha
fcmovne
fucomi
xchg
mov
repz
mov
movsl
jae
inc
push
jge
dec
fldcw
add
shr
mov
sbb
xor
xchg
inc
xchg
pop
xchg
in
adc
and
push
mov
inc
pop
pop
and
add
fwait
aaa
je
xchg
enter
loopne
cmpl
xchg
repz
inc
jge
test
pop
cld
shlb
mov
jle
sbb
in
rolb
add
mov
sbb
clc
mov
jo
cmp
es
stos
pusha
lea
insb
inc
pushf
mov
jo
sbb
stos
and
or
and
aas
pop
pop
adc
ds
inc
mov
ss
pop
mov
mov
mov
call
cltd
fnstcw
jecxz
mov
aas
fsubl
int3
mov
aam
pop
not
cmp
or
test
ss
lds
leave
roll
dec
cld
adc
lret
pop
jp
lret
mov
pop
or
lret
sub
mov
mov
xchg
or
xchg
mov
xchg
jno
arpl
pop
add
jo
push
adc
add
mov
in
rolb
mov
dec
pop
in
gs
lahf
xor
mov
jl
mov
scas
sti
lock
inc
or
or
or
xchg
data16
inc
ss
push
xchg
movsb
push
fdivl
fisttpl
bound
pop
cmp
inc
movsl
lret
stos
aas
iret
xchg
push
nop
lea
cmpsl
mov
lcallw
aas
lds
jne
adc
push
push
xchg
ja
add
pop
mov
ss
sahf
enter
push
outsl
adc
mov
std
mov
mov
xorb
push
xchg
or
clc
aad
movl
call
push
cmp
mov
adc
pop
xor
sub
out
popa
xor
xlat
or
jno
push
dec
or
inc
out
lods
or
and
cmp
xchg
push
jae
pop
in
xorb
and
imul
add
add
movsb
ficoms
xchg
lock
rcrl
xor
dec
adcl
in
pop
outsb
push
xchg
in
aaa
in
loop
cli
outsl
dec
lds
dec
sbb
cmp
adc
xchg
decb
imul
addr16
inc
mov
mov
mov
aad
adc
sbb
xchg
xchg
mov
push
xor
inc
jo
sbb
cmp
aam
xchg
pushf
pop
push
and
test
and
jmp
sbb
cwtl
xlat
xchg
push
adc
icebp
add
fiadds
sbb
adc
mov
mov
pop
ret
xchg
xor
push
lods
sbbb
and
in
popf
or
or
jne
inc
inc
xlat
out
movsl
lret
and
gs
sub
push
out
xchg
clc
orl
arpl
add
mov
push
push
sbb
pop
xchg
dec
fmul
cmp
inc
rcrl
daa
hlt
std
out
movsl
push
insb
mul
jge
or
jle
xlat
cmpsl
scas
push
stc
sbb
outsb
and
dec
je
pop
pop
test
lret
push
fisttps
and
test
jge
cmpsl
imul
jge
mov
clc
lret
jp
enter
pop
fs
and
or
adc
fstps
ret
aas
inc
xchg
movsb
aam
movsl
shlb
les
mov
stos
xlat
xchg
sahf
push
test
rcl
mov
inc
xchg
dec
xchg
cmp
inc
fstl
and
ss
xor
pop
out
into
xchg
imul
sbb
stos
pop
xchg
mov
movsb
pop
popl
enter
jg
jne
frstor
jmp
lahf
fucomip
and
ja
shlb
rcl
pusha
call
in
rorl
std
sbb
jbe
cmp
xorl
and
aam
lahf
orb
adc
ds
xchg
dec
mov
cmp
mov
aam
ss
and
pop
or
pop
mov
ljmp
inc
xchg
js
xor
mov
or
pop
clc
loopne
fld
insb
stos
add
push
push
mov
sbb
rclb
push
mov
xorb
nop
dec
push
mov
push
es
push
dec
or
ja
jg
cmp
and
mov
push
adc
cmpb
jne
dec
pusha
inc
loope
cmp
cmp
sub
gs
mov
arpl
mov
inc
addr16
or
mov
cmp
nop
dec
sub
inc
lods
mov
rorl
fidivrs
push
fwait
cs
icebp
xor
cmp
mov
sbb
enter
mov
adc
movsb
xchg
std
mov
test
inc
lock
fdivs
push
aaa
cmc
add
jge
les
and
in
loop
ja
test
cmp
jo
jl
sbb
inc
jb
shll
rorl
xor
push
jecxz
jl
jle
ljmp
dec
int
dec
mov
cs
leave
xchg
push
cltd
aas
dec
fdivr
sbb
pop
jp
pop
sub
xchg
push
mov
sbb
aas
pop
or
repz
fiaddl
mov
sub
sbb
push
mov
pop
in
cmp
inc
cmp
cmp
insl
xchg
hlt
cmpsb
push
sbb
xor
mov
mov
pop
testl
repz
int3
mov
xor
aaa
inc
jns
addl
icebp
dec
pop
repnz
fsts
data16
push
sahf
jno
loopne
stc
rclb
jo
jp
lahf
mov
xchg
xchg
xchg
mov
adc
push
sub
sahf
xchg
sbb
xor
mov
xchg
dec
movsl
mov
cmp
sarb
mov
gs
dec
xchg
sbb
sbb
or
enter
pop
jmp
mov
je
lea
imul
pusha
dec
fwait
aas
imul
add
sub
pop
push
loope
popa
inc
xor
xor
daa
jae
test
push
fs
jg
pop
movsb
mov
add
fsubs
xchg
xchg
push
std
push
nop
add
in
fdivr
add
enter
lret
pop
xchg
test
enter
clc
pop
mov
aas
popa
cltd
dec
dec
cmpb
push
pop
mov
mov
jno
inc
push
adc
cmp
popa
dec
push
push
loope
xorb
test
xchg
xchg
icebp
cmp
out
mov
sti
jg
inc
jne
mov
ds
mov
dec
mov
cltd
pushf
nop
lret
mov
cs
rol
push
pusha
mov
pop
inc
mov
inc
and
push
inc
inc
out
inc
mov
mov
mov
and
fincstp
pop
pushf
cltd
lret
pop
ret
jno,pn
push
jbe
cld
stos
test
adc
cmp
aad
inc
lret
xor
les
jge
fmull
out
jg
jne
or
loopne
popa
nop
push
mov
inc
adc
lods
mov
add
mov
pusha
out
add
aas
xchg
jmp
out
lds
cmc
adc
loop
jnp
pop
inc
loopne
lret
daa
mov
ds
jbe
dec
enter
push
add
or
and
nop
pop
rcrl
push
adc
scas
add
jns
pop
repnz
xor
fstl
push
cmp
cltd
add
cmp
out
dec
es
push
jne
aas
fwait
cmpl
fisttpll
xor
xchg
aas
shll
and
jne
xor
adc
push
lahf
jo
cmp
bnd
in
pop
subb
in
andb
cmp
aas
int3
ret
std
imul
and
push
in
sbbl
jb
xor
sarl
jmp
lds
dec
or
test
jo
sub
outsb
add
sbb
xor
mov
aad
dec
adc
fwait
bound
lcall
cmp
je
aad
ret
or
xor
inc
in
ret
push
xchg
xchg
nop
inc
xchg
loop
sub
cmpsl
lret
out
mov
insl
xchg
sbb
inc
enter
xor
dec
mov
aaa
pushf
fidivs
test
in
cs
or
cmpsl
js
mov
dec
push
inc
mov
stos
push
test
ss
dec
and
mov
fidivrs
xchg
jmp
sahf
cwtl
push
std
es
pop
aaa
sarl
movsb
dec
cli
mov
ret
inc
insb
adc
in
mov
loopne
out
movl
xor
jno
dec
xchg
and
push
rep
jl
pop
mov
mov
popa
pop
jnp
out
aas
cmpsl
rol
push
ljmp
in
push
mov
fdivrl
out
out
addb
test
jne
insb
sahf
xchg
mov
sbb
insb
jae
pop
push
mov
dec
cwtl
icebp
dec
mov
pop
and
scas
dec
stos
mov
inc
lock
sub
mov
lcall
xor
mov
xchg
pop
shrb
or
add
jne
shlb
pop
xor
loopne
jb
scas
lahf
loop
mov
pop
cwtl
cmp
xor
aam
imul
nop
out
or
aaa
inc
sbb
aam
mov
inc
push
pop
cmp
xchg
mov
sbb
mov
add
mov
jnp
pop
pop
dec
test
mov
mov
adc
xor
cwtl
fnstenv
push
pop
mov
and
inc
aaa
sbb
and
pop
fsubl
fcoml
adc
gs
enter
lret
stos
mov
push
les
lahf
shll
movsl
pop
aad
sub
pop
push
adc
push
movl
imulb
xor
sahf
adcb
pop
mov
inc
jl
in
mov
pop
and
or
adc
insb
iret
sub
dec
add
xor
adc
push
xchg
add
inc
push
push
jnp
mov
enter
pop
fwait
sub
mov
and
ds
repz
ljmp
inc
xchg
movsl
aas
nop
loop
pop
push
ja
hlt
mov
jge
add
cmp
sarb
mov
add
pop
ss
sub
mov
add
sub
inc
mov
shlb
push
mov
data16
and
cmpsb
imul
fcmovb
movsb
mov
lods
jo
cli
outsl
mov
rcll
outsb
int
xor
push
int3
jnp
cwtl
adc
push
dec
int
js
adc
std
jmp
rol
and
stos
cmp
out
pop
push
jp
pop
aaa
xchg
push
addb
loopne,pn
jecxz
jp
lods
repz
xchg
test
jns
repnz
add
outsb
push
fnstcw
loop
xlat
xchg
in
pop
jmp
inc
adc
adc
xlat
push
adc
xor
mov
jbe
dec
mov
inc
mov
or
xor
ret
rcl
aas
addr16
push
xchg
repnz
xchg
mov
repz
xchg
je
adc
cmp
adc
stos
mov
loopne
inc
shll
movsl
mov
out
adc
call
subl
pop
pusha
scas
inc
or
jne
sub
dec
lcall
jecxz
clc
inc
jno
dec
xor
cmp
xchg
mov
outsb
mov
movsl
xchg
mov
lea
arpl
xchg
incb
gs
cmpb
clc
mov
js
xor
subl
dec
stos
inc
dec
mov
dec
mov
push
clc
pop
and
imul
sbb
cmp
lret
sbb
pop
mov
adc
dec
adc
mov
sbb
xor
and
jne
mov
test
mov
daa
outsb
imul
dec
mov
pusha
inc
dec
ret
es
xchg
push
leave
adc
rep
movsb
int
push
int3
add
fchs
pop
cmp
push
mov
lods
pop
and
sahf
lahf
lret
sbb
aad
mov
dec
mov
cld
mov
iret
arpl
push
scas
rcl
lahf
dec
lods
scas
adc
je
into
xchg
fwait
cld
sub
inc
adcl
adc
clc
jne
xchg
fwait
daa
mov
sbb
mov
rolb
in
leave
aad
inc
dec
sti
subb
pop
lahf
pop
add
arpl
push
mov
add
insl
addr16
adcl
inc
in
mov
lods
out
push
adc
mov
cwtl
ljmp
push
or
pushf
mov
aas
movsl
lea
cmp
clc
mov
cmpsl
sub
frstor
test
gs
add
pop
push
mov
or
xchg
notl
xchg
outsb
ds
arpl
push
stc
mov
fcoml
ret
rorl
or
cmp
push
fmull
notb
mov
add
pushl
jl
lea
fucomi
call
lahf
and
hlt
dec
int
pop
cmc
xchg
test
mov
ja
lock
cmc
mov
mov
add
sbb
pushf
and
lret
mov
scas
sbb
xlat
xchg
sub
and
dec
inc
sub
xchg
pop
xor
push
jecxz
jno
imul
stos
lock
jns
inc
lret
outsl
xor
pop
inc
sub
mov
adc
mov
adcl
mov
addr16
adc
fcoms
inc
inc
and
xor
adc
mov
xchg
inc
es
mov
bound
iret
cmp
iret
int3
jno
inc
and
jg
add
je
idivl
xchg
xchg
or
and
xchg
xor
jae
mov
sahf
scas
adc
gs
mov
jge
cmp
cmc
test
xor
xchg
fcmovnb
cmc
sbb
pop
mov
and
sbb
inc
jle
xchg
fdivrs
xchg
mov
cmpsl
test
aaa
or
int
inc
lock
imul
nop
or
std
andb
inc
cltd
aas
andb
insb
inc
sahf
adc
repz
pop
sub
shlb
mov
scas
fistl
or
xchg
cmp
jl
and
mov
cmp
mov
push
pop
cmp
in
mov
inc
sub
cmp
inc
pop
dec
xchg
or
mov
test
fcoml
jno
mov
addl
lock
jle
dec
mov
cmp
xlat
sub
call
mov
jg
rorb
mov
insl
cmp
cmc
sbb
leave
push
sbb
in
insb
cld
rcl
mov
pop
sbb
in
enter
mov
lahf
add
ss
pop
insb
inc
xchg
sti
fadd
jecxz
dec
test
mov
or
jae
push
fadds
iret
loop
and
mov
pop
jns
add
out
adc
mov
cmp
loopne
ds
mov
movsb
sbb
aam
scas
jb
adc
sbb
out
mov
pop
ret
cmpsb
dec
xchg
mov
andb
shl
xchg
push
repz
xchg
sub
and
ja
mov
std
jne
push
and
icebp
jno
jne
movb
icebp
cmp
mov
pop
push
adc
ss
out
jno
dec
jns
ret
push
ljmp
sbb
push
and
cmp
ds
insl
mov
dec
dec
pop
push
mov
jg
jno
gs
scas
mov
adc
int3
enter
sbb
push
lods
iret
cmp
xchg
jle
mov
inc
mov
add
call
imul
jo
lahf
les
icebp
xchg
negl
clc
leave
dec
rcl
out
cmpsb
xchg
insb
scas
pusha
or
xchg
adc
outsl
cld
in
fisubrs
cwtl
pop
in
xor
ljmp
leave
fs
fnsave
jmp
xchg
ja
call
insb
inc
lods
sub
lret
mov
cmp
and
addr16
mov
ljmp
pop
sbb
aad
nop
push
into
lret
loop
leave
testb
mov
mov
xlat
aas
add
jno
sarl
stos
mov
mov
and
mov
jne
aaa
jle
push
inc
int3
imul
stos
push
insb
fldl
mov
adc
in
inc
imul
sub
mov
adcb
push
std
lea
notb
jl
lret
movsl
pusha
dec
ret
popa
mov
pushf
and
xchg
push
mov
rorl
mov
cmc
shll
insb
in
jl
jo
cmc
test
test
mov
jo
sub
sub
jg
jne
movsl
rorb
icebp
mov
or
xchg
stos
mov
mov
divl
pop
fs
lds
pcmpgtb
add
jl
and
sub
idivb
sub
xlat
inc
mov
pop
cwtl
jge
jmp
jb
mov
sub
and
jno
cli
xor
sub
pushf
dec
and
movsl
fs
scas
addl
cmp
cmc
mov
stc
mov
inc
mov
mov
ja
sub
cmp
outsl
jb
mov
xchg
pushf
jmp
pop
into
test
out
dec
shlb
push
push
scas
popa
pop
xchg
push
push
in
lea
dec
jns
pop
inc
aaa
enter
aas
cmp
xchg
push
fnstsw
dec
mov
and
xchg
loope
dec
cwtl
testb
lock
adc
xchg
ss
adc
aad
loopne
test
std
hlt
scas
cmp
xchg
xchg
lea
inc
mov
push
pusha
ficoms
cmp
test
mov
cmp
pop
lea
xchg
add
pop
or
fs
js
std
aad
xchg
call
mov
in
jmp
mov
xchg
pop
sbb
dec
fnstcw
sub
push
std
sti
fdivrl
push
inc
mov
xlat
push
mov
mov
into
and
sub
dec
sub
scas
test
mov
fsubl
pop
pusha
xor
ja
fiaddl
mov
cmp
pop
dec
sbb
jns
jne
test
adc
rcr
stos
aas
pop
mov
ret
lds
push
mov
das
enter
adc
sahf
add
jmp
cmp
aaa
jle
add
add
and
mov
mov
xchg
mov
push
lock
aad
mov
hlt
out
sbb
out
stc
leave
aad
ss
pop
fidivl
es
adc
outsb
lahf
jns
push
adc
lahf
dec
lea
add
clc
sub
mov
aas
scas
cmp
in
push
pop
sbb
stc
rcrb
int
pop
xchg
xchg
push
mov
push
mov
shlb
jmp
int3
jl
xor
aaa
aam
jl
jbe
inc
fstl
pop
push
push
jg
cmp
fiaddl
adc
negb
xchg
in
xchg
scas
push
subl
jge
sbb
sbb
or
adc
ss
jo
into
mov
pop
inc
cwtl
fidivrl
sbb
and
pop
lcall
add
cmc
adc
xchg
mov
arpl
inc
lods
movsb
imul
sub
xor
push
jbe
popa
es
mov
fisttpl
or
push
into
cmp
roll
ja
xchg
pop
lea
es
add
xor
xchg
lds
cld
pop
mov
repz
mov
push
inc
mov
xor
movl
mov
mov
lret
push
xchg
push
sbb
or
sbb
das
sub
xchg
push
sub
cltd
adc
push
mov
lods
call
dec
inc
pop
jg
cmpsb
flds
enter
fiaddl
out
and
or
test
mov
pop
out
pop
jge
lock
into
push
mov
push
push
into
adc
push
cmp
ret
je
mov
imul
lret
inc
xchg
stos
cwtl
mov
in
cmpsb
lds
xchg
daa
adc
rcll
ss
dec
jmp
mov
lea
mov
add
dec
push
pusha
int3
shrl
es
ja
rclb
stc
xchg
cmpsl
aad
inc
out
dec
sub
inc
es
cmp
inc
inc
sbb
movsb
andl
add
mov
sub
cs
fldl
sbb
aas
neg
movsl
add
fs
cmp
adcl
mov
shrl
add
sbb
sbb
sbb
cli
inc
jbe
xlat
xor
mov
xchg
sti
cld
fnstcw
call
cwtl
inc
or
mov
push
test
std
out
add
insw
adc
cmp
push
or
inc
jns
add
les
add
pusha
dec
sub
imul
xor
fisubs
cmc
mov
lods
sar
cs
aaa
sahf
std
sub
into
cmp
cmp
mov
push
dec
sub
jmp
jae
jo
inc
aas
loopne
and
repz
js
mov
or
mov
adcl
push
insb
xor
mov
icebp
xor
dec
xchg
adc
arpl
and
xchg
fsub
dec
loope
mov
insb
jb
aas
aam
push
hlt
lock
fcoms
je
decb
pop
or
adc
aas
lret
cltd
cld
push
bsf
test
inc
push
add
aas
pop
popa
divb
adc
shlb
jp
xchg
aam
xchg
shl
loope
jg
xchg
cmp
imul
adc
test
xchg
mov
mov
popa
test
je
es
ss
nop
sbb
sbb
sbb
sub
imul
sub
mov
ljmp
adc
loop
testb
ja
rcrb
mov
push
or
mov
inc
xchg
mov
and
push
pop
cmp
pushf
mov
inc
cmpb
sub
cmpsb
xor
shl
mov
fimull
mov
mov
imul
lock
pop
aaa
gs
ja
das
sbb
cmpsl
inc
jae
dec
cltd
jb
hlt
push
insb
mov
jb
push
xchg
mov
jg
mov
mov
sbb
loop
test
ret
sbb
cltd
sub
fnstsw
fstpt
xchg
into
xor
cs
jno
xchg
and
xor
cwtl
cmp
jle
lcall
insl
sahf
dec
push
aaa
paddsb
xchg
shl
sbb
aas
sub
negl
dec
push
jb
jmp
jo
push
stos
cmpsb
in
or
xor
push
jp
aas
rep
sub
inc
scas
lods
jb
lods
add
js
cmp
subb
or
and
adc
or
test
xchg
and
xor
xchg
imul
mov
xlat
test
sub
push
pop
xlat
es
or
dec
lock
sti
xchg
dec
jecxz
and
scas
aas
sub
in
insb
inc
or
mov
xchg
adc
lods
enter
pop
inc
call
adc
push
push
out
inc
insb
inc
fcoms
push
movsl
adc
jge
push
dec
in
xchg
enter
jle
repz
xchg
mov
xor
ret
in
inc
push
xchg
fcoml
mov
mov
jmp
out
push
cmp
test
jecxz
pop
mov
xchg
inc
pop
in
add
jg
outsb
or
out
mov
and
fistpll
repnz
arpl
dec
xor
aas
ror
rclb
lds
cmp
insl
sub
mov
or
cmp
les
scas
jne
jmp
es
ljmp
xchg
clc
daa
push
pop
dec
sbb
mov
inc
mov
out
inc
notl
and
sub
pop
ja
inc
negb
and
mov
mov
lea
pop
addr16
cmpsl
sbb
js
stos
scas
push
cltd
stos
adc
sub
xchg
mov
xor
mov
in
mov
jl
inc
std
and
ror
jno
xchg
jno
mov
lret
imul
push
scas
lcall
fstl
adc
addb
mov
mov
inc
xchg
outsl
sbb
mov
pop
sub
mov
xor
in
mov
mov
pushf
outsl
jae
push
xchg
dec
push
mov
stc
stc
clc
sub
mov
fdivs
test
xchg
dec
fnsave
jp
adc
daa
ds
in
rolb
inc
scas
jmp
mov
push
push
aaa
xor
jbe
sbb
std
xchg
popa
int
jl
cmp
add
push
cli
scas
out
pop
xchg
and
pop
enter
out
bound
or
aad
out
xchg
fs
add
pop
jbe
dec
lds
roll
push
loope
mov
loop
xchg
mov
jg
and
lds
inc
pushf
lods
insl
clc
adc
jae
inc
mov
inc
ret
xchg
in
pop
repnz
pushf
mov
das
dec
dec
or
push
sub
mov
in
inc
xchg
mov
mov
push
int
sub
sub
adc
icebp
push
rcr
mov
leave
push
cmp
mov
cltd
pop
inc
mov
push
jl
sub
xor
jae
nop
scas
dec
cmp
ret
rolb
dec
inc
clc
adc
xchg
hlt
lcall
daa
and
cmp
mov
loope
inc
test
push
lahf
xor
add
ret
pusha
pop
mov
inc
and
aam
push
lock
xchg
xchg
push
and
jle
loopne
into
mov
push
data16
outsl
mov
jae
xor
cmp
rcrb
enter
xor
enter
insl
xor
ffree
mov
or
in
popa
clc
xchg
inc
xchg
adc
jbe
push
inc
mov
xor
mov
cmp
jecxz
in
enter
adc
fcomi
shlb
or
push
sarb
mov
push
cmp
push
shrb
xchg
pop
fstl
mov
imull
add
scas
add
push
add
mov
imul
sbb
enter
xchg
pop
xchg
push
aam
sti
xor
nop
push
ds
xchg
ja
add
pusha
jl
inc
add
add
mov
stos
outsb
pop
es
add
mov
or
rcrb
aas
push
lar
push
push
ret
clc
arpl
xchg
in
cld
dec
sahf
loope
pop
jbe
addr16
imul
fnstsw
pop
daa
pop
loope
loope
out
dec
inc
pop
in
adc
aas
jge
iret
andl
mov
mov
add
mov
scas
sti
pop
mov
push
ret
pop
xor
movsl
popf
out
mov
fcompl
sbb
je
into
cmp
ds
fstpt
mov
xor
in
cltd
add
into
jp
mov
jg
mov
cs
scas
stc
push
push
lods
push
add
or
in
addr16
sahf
push
test
std
xchg
das
sahf
mov
sbb
mov
out
lock
cmpsl
push
xchg
fld
movsl
sbb
insl
movl
popf
jae
cs
test
jo
pusha
xor
test
jecxz
fs
sbb
sahf
jbe
push
sub
pusha
xchg
cs
jae
mov
aad
leave
add
hlt
dec
adc
inc
stos
jmp
insb
inc
or
and
push
andl
cli
test
xchg
cli
jo
or
push
lods
cltd
dec
loope
repnz
aas
mov
negl
add
int3
insl
jmp
fimull
scas
cmp
ljmp
rorb
dec
inc
inc
test
jns
pusha
test
negb
pop
cmp
in
inc
sbb
sbb
sub
push
inc
lods
aas
mov
xchg
sti
test
xor
fisubrl
cmp
in
xlat
clc
jecxz
dec
pop
mov
xchg
lahf
jg
xchg
int
xlat
push
or
cmpl
lea
lock
push
lds
rclb
shrl
sbb
push
loopne
push
lcall
inc
push
inc
cs
inc
xchg
push
mov
mov
ja
inc
inc
adc
std
enter
mov
jge
ss
xor
popa
dec
push
bound
stos
lahf
mov
dec
fs
lea
lahf
mov
mov
imul
test
dec
push
add
mov
insb
mov
mov
cltd
fistl
sub
inc
or
pop
push
addb
or
out
xchg
cmpsl
js
pop
jne
xchg
xchg
daa
cmpsb
add
inc
loop
in
dec
jbe
mov
and
fistpl
or
dec
adc
xchg
pushf
mov
insl
add
xchg
fs
xchg
imul
addr16
pop
in
xor
mov
cmc
aas
mov
mov
add
nop
dec
push
cmp
fsubrp
jge
xchg
sub
jns
movsl
shrb
pop
mov
add
pop
cmpsl
cmc
inc
push
pop
test
inc
addb
pop
out
cmp
popa
std
shll
aas
jbe
test
xchg
mov
ja
sub
out
and
jg
dec
xchg
pop
cld
sbb
mov
mov
mov
fcoms
in
les
pushl
add
mov
dec
dec
sub
aas
rcll
jne
mov
aaa
pop
mov
cwtl
add
pop
pop
mov
roll
out
repnz
sbb
aas
adcl
rclb
bound
sub
sub
mov
pop
out
add
xchg
outsb
enter
jp
dec
les
subl
js
or
imul
jb
cltd
and
and
popa
xchg
inc
jmp
adc
mov
and
pop
cmp
movb
cmp
in
jae
xor
cmpl
stos
xchg
dec
notb
push
cmpsl
adc
sub
push
cli
sbb
lcall
mov
jbe
cmpsb
mov
rorb
es
iret
stos
xchg
pop
lods
push
push
jo
mov
cmc
mov
cmp
pop
pop
cmp
loopne
sbb
lret
cmpsb
lcall
mov
push
pop
sbb
push
add
jmp
clc
add
dec
push
xor
xor
popa
xorl
xchg
push
push
out
push
bound
cli
cmc
xchg
pushf
out
repz
stos
dec
jg
pushf
push
push
cmpsb
push
push
div
les
xchg
xchg
sbb
mov
rol
test
cld
ret
jo
mov
lods
nop
stc
xlat
xor
pop
add
aad
std
enter
inc
jl
lcall
or
bound
pop
imul
xchg
loopne
loop
addb
pmulhw
jbe
clc
faddl
jg
imul
sbb
mov
pushf
sbb
and
and
lcall
rorb
sub
xorb
push
movsb
lds
push
push
mov
push
imul
push
adc
sbb
cmp
in
sbb
into
aas
std
sarb
jmp
xchg
cwtl
std
xor
stc
xor
pop
add
and
sub
in
xchg
or
jmp
jge
cmp
push
mov
pop
pusha
leave
data16
out
pop
mov
sbb
push
inc
mov
mov
pop
int
mov
loope
jne,pn
insl
inc
push
pop
in
je
lahf
data16
cmp
jecxz
sub
hlt
out
xor
test
icebp
adc
in
outsl
sub
sbb
xor
cmp
and
lahf
out
dec
inc
sub
sbb
repnz
mov
push
inc
les
xchg
inc
lcall
mov
jne
test
test
fcomps
sahf
arpl
adc
adc
out
mov
push
sub
push
adc
outsl
mov
inc
stc
push
inc
mov
cmpsb
cld
in
inc
add
pop
std
shll
outsb
js
out
fcoms
push
js
cmp
xor
mov
sbb
outsb
sbb
xchg
rcl
mov
aas
mov
repnz
xlat
cmp
inc
lea
inc
test
and
xchg
mul
xor
jg
jne
cmp
cmpxchg
ss
jns
xchg
bound
sub
inc
mov
xchg
pop
shl
outsl
int
mov
test
and
adc
jp
dec
cmp
add
inc
xchg
sbb
sbb
icebp
decb
or
mov
push
hlt
popa
or
ror
enter
lods
jnp,pt
lret
out
pop
or
lret
inc
xchg
xchg
addl
ret
push
divb
aaa
cmp
ret
daa
adc
add
fdiv
mov
push
jmp
push
and
enter
mov
sti
iret
in
mov
out
sbb
xchg
inc
ljmp
jb
inc
push
pushf
rcll
jge
mov
xchg
add
dec
push
jnp
ja
test
mov
sbb
aaa
mov
jno
std
aas
test
bnd
push
lea
xchg
les
jb
jmp
inc
movsl
nop
xchg
fmulp
ud0
cmpsb
movsl
aas
loopne
jecxz
xor
out
outsb
cs
insb
mov
mov
scas
shrb
fsubs
loop
out
test
or
mov
sbb
add
fs
pusha
mov
xchg
cltd
rcrb
xchg
mov
xchg
rcrl
sub
insb
xchg
jns
in
add
test
cmp
arpl
cmpsl
xor
push
nop
pusha
cmp
and
sub
xchg
shrl
jecxz
add
pop
outsb
cmp
ss
sub
into
and
xchg
fstpt
push
push
subl
xchg
scas
mov
mov
xchg
repnz
xor
inc
ljmp
dec
add
out
arpl
rol
jno
std
or
enter
inc
sti
push
dec
daa
inc
shll
pop
pusha
cli
inc
icebp
push
dec
pop
sbb
ja
cmpsl
les
insl
fnstsw
sbb
popf
xor
notb
in
cs
xlat
imul
fildl
sbb
add
addr16
mov
or
jecxz
clc
rol
subb
jns
shrl
dec
pminsw
jge
arpl
test
cwtl
jo
notb
dec
sahf
roll
inc
ja
ret
mov
push
aad
xchg
xlat
stos
ret
cmp
dec
push
cli
out
pop
out
adc
xchg
scas
lea
fwait
xchg
in
inc
xchg
fldenv
call
jno
pop
mov
or
mov
dec
divb
xchg
jmp
fbstp
pop
outsb
out
ds
xchg
adc
xchg
adc
mov
or
lods
fnsave
add
xchg
adc
data16
push
xor
aad
mov
mov
mov
data16
adc
cmpsb
xor
iret
mov
inc
and
add
icebp
add
subb
or
adc
insl
gs
jne
cmpsb
and
into
sahf
lcall
xchg
cmp
push
mov
inc
jno
decl
in
add
incb
les
cli
dec
sbb
outsb
rolb
test
stos
pop
test
sbbl
test
loopne
in
scas
xor
adc
xor
adc
inc
push
sbb
imulb
xchg
xor
in
add
aas
cmpsb
fisttpll
je
loop
inc
dec
pusha
mov
cs
or
cmp
test
push
mov
add
pop
data16
jno,pt
jmp
push
fs
out
hlt
nop
dec
dec
das
pop
lods
or
gs
pop
fimull
in
adc
aaa
xlat
sbb
push
jnp
insl
mov
inc
xor
loop
jg,pn
xchg
jbe
sbb
jg
lds
mov
mov
dec
fcomp
nop
jl
daa
arpl
push
or
sub
hlt
outsb
fsubp
inc
rcl
cmp
mov
pop
and
inc
xor
adc
push
rcl
inc
xchg
push
pop
in
or
and
jg
or
aas
lret
push
paddsw
dec
nop
lcall
imul
jns
push
dec
jge
aad
les
push
out
and
sub
xchg
daa
loop
je
movsb
inc
ss
out
push
jl
pop
fcmovnbe
xor
stos
mov
jno
mov
gs
xchg
in
pop
mov
fists
and
je
lods
adcl
pop
xor
pop
fcoml
cmpsb
pop
push
xchg
xchg
mov
add
mov
mov
push
cltd
inc
add
mov
jg
in
adc
fisubs
repnz
fisttpll
cmc
lds
xor
test
mov
loop
stc
sub
rcll
cli
xchg
mov
mov
pop
sbb
mov
sbb
enter
int3
adc
inc
xor
fldt
cmp
sub
aas
xor
cmp
aas
ljmp
inc
shr
daa
lods
cmp
push
pop
xor
xor
xor
fildll
lods
jg
aas
jle
in
push
adc
pop
imul
mov
mov
add
shr
mov
in
fbstp
mov
aas
and
subb
xor
push
or
dec
sbb
inc
pusha
iret
adc
push
push
sub
icebp
shll
ss
imul
mov
lea
gs
or
push
push
cmp
mov
cmpsl
jl
lds
adc
popf
lock
lcall
ret
xorb
mov
mov
adc
outsb
adc
lds
mov
and
mov
pop
rclb
outsb
fcmovu
or
cmp
jecxz
xor
push
aad
sbb
pop
fldenv
jecxz
fs
inc
xchg
ja
ds
js
out
ret
inc
cli
mov
mov
ljmp
mov
jb
sbb
imul
daa
addr16
pushf
and
push
sbb
push
xchg
or
scas
jne
mov
idivl
icebp
lds
jmp
lret
adc
fwait
ret
imul
xor
xchg
daa
sahf
movsb
and
lods
aas
and
or
mov
push
inc
push
imul
cmp
out
stos
clc
aad
mov
insb
fistpl
fndisi(8087
iret
sbb
into
sarb
pop
cmpsb
iret
repz
cmp
xor
pusha
lahf
cmp
sbb
pop
sarb
dec
mov
jno
pop
jbe
int3
mov
sbb
sbb
pop
call
bound
cmc
gs
fmul
nop
je
xlat
sbb
in
cmp
xor
and
adc
sbb
xor
repnz
jae
fists
pushf
daa
gs
loopne
push
mov
lods
xchg
pop
data16
push
repnz
iret
lahf
jb
cwtl
mov
in
and
xchg
mov
xor
out
imul
inc
dec
cmp
out
les
and
or
mov
or
xor
aaa
pop
push
cmp
sub
repnz
xor
ljmp
push
and
lea
not
into
ret
xchg
in
xchg
mov
xchg
call
jmp
pop
adc
push
rorl
rcr
sbb
cmpsb
rorb
xchg
faddl
fisubrl
mov
mov
sub
les
je
cmp
pop
xchg
std
and
jne
stc
pop
inc
ficoml
stos
shll
fsub
xchg
aam
sbb
fsubs
pop
pop
cmp
and
cmp
lret
push
rcrl
cmp
insl
bound
inc
pop
mov
or
lcall
xor
imul
inc
test
dec
lret
cmc
lea
adc
mov
jecxz
jle
jae
xchg
dec
lret
sbb
jp
add
out
adc
data16
xchg
sbb
adc
repz
ficoml
std
loop
test
mov
pop
mov
inc
add
push
mov
jge
shr
mov
out
mov
pop
pop
fcoml
movsl
xchg
xchg
mov
shlb
ds
mov
mov
rolb
lret
iret
push
xchg
sarb
inc
sbb
lods
lret
inc
rcl
jecxz
lods
rorb
repnz
fists
scas
icebp
sub
ja
sub
cmp
xchg
xor
xor
inc
pop
imul
mov
add
pop
cmc
adc
adc
cmp
ss
cmc
add
cltd
adc
pop
repz
jno
xchg
sub
inc
sub
aas
push
addr16
sbb
cwtl
int3
jle
lret
inc
bound
test
lock
adcl
xor
push
jns
shlb
movsl
icebp
inc
pop
pushf
and
and
xor
cs
std
push
adc
dec
mov
xlat
aas
push
jns
fwait
sbb
loope
lret
aad
ja
and
jle
adc
stc
out
add
mov
subb
mov
push
mov
fwait
daa
xchg
loop
inc
mov
cmp
sub
adc
xor
jmp
push
sbb
rcll
mov
fldt
mov
mov
mov
addr16
xor
push
sbbb
jge
mov
sub
rorl
fwait
dec
xchg
fldl
aas
sahf
sbb
inc
pop
add
andl
rcll
out
pop
cmp
fsubrp
jbe
cwtl
xchg
adc
out
outsb
jo
mov
lds
jae
das
orps
aad
or
inc
cmp
ftst
stos
sub
mov
jl
aad
insl
pop
jo
mov
andl
cmp
das
test
mov
push
lret
mov
and
xor
push
cmp
std
not
mov
xchg
rcrl
enter
pusha
lds
push
mov
jmp
stos
fucom
pop
ja
adc
adc
gs
fadds
pop
stc
push
jge
adc
ret
lcall
mov
mov
addb
lods
inc
sahf
mov
ret
lret
movb
ret
mov
mov
loop
sub
mov
mov
or
ja,pt
xchg
mov
jns
jp
inc
sbb
and
mov
jne
add
pop
mov
sub
or
ljmp
and
test
arpl
aaa
adc
test
hlt
les
xorl
push
xchg
notb
arpl
and
lret
inc
pop
mov
ffreep
in
outsl
jno
out
pushf
cli
ss
or
repz
pop
cmp
popf
aas
popa
mov
and
aas
lret
scas
andl
orb
loop
mov
xchg
pop
mov
mov
mov
mov
dec
into
test
sbb
loope
xchg
cli
fcompl
xchg
lods
sub
adc
inc
mov
js
std
xor
les
xchg
pop
dec
ret
in
stos
clc
pop
testl
pop
adc
push
in
adc
mov
or
sub
pop
inc
fistpl
pop
rcll
xchg
arpl
inc
and
jno
add
cmp
loopne
mov
xlat
or
xchg
mov
cmp
dec
push
mov
push
in
inc
jne
adc
xchg
xor
adc
das
inc
repnz
sbb
push
jnp
scas
int3
dec
mov
mov
mov
xchg
inc
add
xchg
jb
dec
int3
aas
cmpsb
mov
dec
push
mov
jns
lock
mov
imull
pop
jl
enter
mov
xchg
sub
out
divl
popa
push
cmpsl
sub
mov
loop
mov
xchg
lcall
pusha
cmp
mov
roll
mov
stc
imul
stos
fnstsw
dec
test
mov
push
icebp
data16
fucomp
lret
push
pop
stos
sub
in
mov
pusha
xor
pop
jae
cs
inc
mov
adcl
mov
cmp
cmp
xchg
adc
xchg
cmpsb
mov
nop
inc
fsubs
cmp
clc
cmp
stos
adc
mov
adc
addr16
std
sbb
xor
shl
enter
pushf
aas
fldl
pop
adc
arpl
push
out
loop
jo
cmp
pop
adc
insb
ficoml
scas
dec
and
xor
sub
lret
pusha
notl
xchg
cmp
pop
cld
aas
test
popa
or
push
hlt
mov
jl
add
push
mov
pop
jmp
das
pop
xor
inc
pop
add
popl
add
clc
mov
jmp
mov
xor
push
lods
repnz
or
inc
lods
pop
push
std
pop
cmp
xor
pusha
mov
pop
out
nop
inc
xor
pop
leave
xor
mov
mov
xlat
fnstenv
xchg
or
sbb
mov
xchg
imul
mov
movsl
fidivrs
test
xchg
insl
stos
bnd
push
out
mov
push
pop
pop
sbb
inc
loopne
ret
mov
sub
pop
mov
push
clc
popa
aaa
and
ds
test
loope
pop
push
inc
jo
mov
push
aam
enter
es
push
inc
movsl
movd
leave
mov
xchg
call
in
mov
daa
xchg
out
dec
xchg
inc
jg
insl
xor
jne
cmc
jmp
dec
xchg
js
sub
cwtl
repnz
les
sub
sbb
sbb
movsb
iret
int
pop
shl
sub
pop
in
movsl
mov
jl
lods
jp
xchg
inc
mov
cmp
cli
xchg
adc
lret
jg
addr16
mov
push
sbb
sub
enter
xchg
xor
push
jmp
xchg
cmp
sbb
xchg
fmulp
cmp
insb
fbstp
mov
roll
lods
cmpsl
pop
psadbw
aas
jae
test
jmp
bound
or
lahf
je
lods
dec
sub
mov
inc
jl
or
fdivl
insl
inc
bound
inc
arpl
xchg
insl
dec
mov
loopne
imul
sbbl
inc
data16
xor
and
fdivrl
xor
or
aam
insb
push
sub
fs
xchg
xchg
fnstenv
out
divb
xchg
adc
inc
push
cmpsl
pop
mov
sbb
pop
sub
add
arpl
jo
mov
jge
out
xchg
decb
sbb
lods
xchg
xchg
jnp
or
rclb
scas
xchg
aas
sbb
push
inc
jg
das
sbb
adc
jle
decb
xchg
pop
stos
mov
fldcw
test
jl
call
jnp
sub
inc
in
mov
mov
loope
and
cli
or
lods
inc
mov
js
adc
insb
xchg
into
or
test
cmpb
xchg
cmp
pop
push
push
clc
push
mov
fisttps
ss
and
xor
and
insl
aam
enter
jnp
push
sbb
xchg
outsl
sub
jb
adc
pop
rclb
je
andb
cmp
mov
les
sbb
addl
jne
stos
lea
ret
push
pop
ds
dec
mov
aas
xor
inc
xchg
incb
push
lahf
mov
pushf
mov
mov
add
cld
jne
fimuls
xor
sti
add
test
mov
cltd
mov
aas
pop
and
xor
push
pop
jle
lods
push
aam
not
subl
inc
cmpsb
mov
sbb
pushf
mov
into
ret
xchg
xor
and
push
out
je
repnz
scas
fdivrl
adc
sbb
lret
jbe
xchg
stc
adc
mov
push
or
je
js
mov
mov
pusha
mov
insl
rorb
and
popl
test
cmp
mov
cmpsb
data16
and
xor
push
mov
jp
mov
cld
hlt
xchg
fnsave
and
xorl
cld
push
fisttpl
jmp
or
ret
not
shl
icebp
xchg
cmpsb
and
cmp
clc
push
adc
shlb
push
repz
lret
fucomip
call
xchg
sti
mov
jo
dec
and
aam
xchg
inc
adc
jno
push
scas
pop
js
xchg
out
inc
mov
push
rclb
ret
pop
xor
stc
mov
iret
out
cmc
cmpsl
pop
lods
sbb
xor
mov
mov
addl
xor
or
xacquire
repz
into
aas
fs
in
lods
scas
outsl
sub
sti
mov
xor
cmp
jl
or
and
imul
mov
pop
cmp
pop
scas
aaa
rcrl
push
push
push
and
inc
inc
xor
clc
and
sbb
int
pop
mov
jp
fbstp
cmc
adc
cmpsl
repz
insl
cli
xchg
cmp
ss
inc
dec
test
lods
push
and
int
sbb
aas
out
mov
mov
mov
orl
pop
ljmp
inc
inc
sub
or
loop
pop
sub
test
inc
scas
stos
pop
cmp
push
xchg
lahf
frstor
mov
out
aaa
adc
data16
push
lret
xchg
cltd
call
xlat
push
inc
xor
shl
push
push
and
out
dec
movsl
popf
push
mov
out
jle
push
cmp
hlt
enter
xchg
stc
stc
test
mov
pop
leave
or
pop
push
stos
xchg
jae
into
mov
out
lea
dec
xchg
and
cmp
into
jne
xchg
sarl
aaa
adc
fnsave
movsb
stos
jae
xchg
test
jmp
fimuls
hlt
cltd
sti
dec
cmc
lcall
pop
cmpsb
rol
mov
test
in
xchg
mov
jecxz
scas
into
nop
inc
mov
out
sbb
inc
imul
dec
bound
mov
sbb
fnsetpm(287
mov
mov
mov
incl
aad
out
push
xchg
int
add
out
aad
cmp
sahf
xor
rolb
aas
adc
insb
push
lods
sbb
pop
xor
dec
xchg
jle
nop
cmp
fists
jmp
mov
xchg
pop
jo
outsb
adc
enter
jb
xchg
push
fdivrs
out
rcl
or
aas
fnsave
jno
push
cmp
mov
fldenv
xchg
and
add
pop
or
sbb
leave
fs
enter
std
push
adc
out
inc
stc
lock
fld1
add
and
das
xchg
test
or
aaa
xchg
aam
pop
data16
push
repz
mov
lret
sub
inc
adc
test
lock
mov
into
loopw
popa
rcll
xor
clc
call
dec
sub
inc
inc
cmp
inc
push
push
mov
cs
es
jge
sahf
mov
aas
into
dec
pop
ljmpw
fstl
pop
jp
cli
in
mov
and
fidivl
adc
mov
rcll
or
ror
inc
adc
ds
out
shlb
ss
add
cmpsl
sbb
jne
xchg
mov
push
repz
dec
loop
push
sbb
cmpb
shll
xchg
dec
jl
lock
push
mov
in
pop
dec
daa
push
loopne
or
pop
addb
mov
jp
adc
fiaddl
shlb
shrb
stos
daa
push
bound
fnstenv
movl
pop
ficoml
das
les
aas
es
add
sbb
nop
cmp
pop
shrb
icebp
pop
rcr
jmp
clc
xchg
cltd
js
dec
cmpsb
repz
pop
push
cmpsl
aas
jg
push
jo
les
push
mov
cld
xchg
je
ret
loopne
popf
mov
xchg
dec
mov
jnp
cmp
pop
aad
lods
in
jbe
lods
and
ja
push
roll
cmp
push
pop
popf
xchg
jle
xchg
popa
rol
sar
add
scas
int
int3
and
adcl
lret
mov
arpl
dec
sarl
loopne
pop
cmp
mov
xor
shrl
jge
out
mov
mov
mov
mov
or
pop
xor
movsl
dec
fists
aaa
pop
inc
insl
push
stc
popa
cwtl
cmp
into
inc
and
adc
inc
out
lret
loop
xchg
aaa
xchg
cmpsl
and
movsb
popf
pop
xlat
or
push
ja
imul
std
xor
push
bound
cmp
or
subb
ret
outsb
push
loop
ffreep
push
roll
pop
xor
or
sub
or
or
sbb
add
loopne
stos
ss
cmpsl
fisubs
nop
aas
sarb
dec
shl
test
gs
scas
rorb
mov
nop
add
pop
fwait
mov
imul
push
frstor
sbb
call
adc
cltd
jle
inc
push
inc
in
dec
xor
insl
cs
test
or
pop
test
jns
loopne
xchg
mov
xchg
mov
xor
and
xchg
sahf
jp
push
imul
js
imul
cld
xchg
jb
or
push
xor
sub
push
out
inc
jl
adc
sbb
mov
sbb
add
or
aas
xchg
adc
xchg
lret
jo
dec
sar
enter
pop
mov
jg,pt
or
repz
pop
push
hlt
pop
mov
jae
lcall
les
mov
int3
jg
notl
out
out
rol
movsl
shlb
pop
add
jbe
cmp
pusha
xor
stos
mov
cmpsb
addb
jg
pop
rcll
sti
sbb
adc
cmpsb
adc
or
or
cmp
repnz
adc
jmp
xchg
lret
gs
sbb
in
fildl
jmp
mov
test
adc
loopne
test
stos
mov
jmp
addr16
pop
dec
inc
push
adc
sbb
push
mov
jno
aam
mov
push
aas
xorl
jecxz
out
dec
push
mov
int3
fadd
cmp
push
gs
out
cmc
insl
jbe
push
mov
mov
mov
sbbl
jecxz
dec
insl
lret
adc
mov
dec
nop
pop
fcoml
push
bnd
adc
popf
xor
int3
sub
jmp
xchg
dec
sbb
es
insb
daa
xor
push
fnstsw
out
pop
mov
sub
and
cmp
add
sub
xor
mov
add
adc
nop
outsb
push
mull
mov
sub
push
popa
pusha
jecxz
cltd
push
jle
pop
and
jmp
sub
or
sbb
jbe
inc
fistl
push
prefetch
xchg
jecxz
sbb
inc
dec
adc
iret
lods
sub
add
pushf
or
xchg
push
add
frstor
inc
popa
fbstp
icebp
adc
mov
inc
enter
ljmp
xor
call
lahf
dec
dec
shlb
sbb
insb
push
push
xor
lcall
pop
in
pop
sbb
les
ljmp
xchg
lret
out
add
push
push
fisubs
movsl
mov
add
push
xchg
icebp
in
jp
ret
xchg
xor
into
mov
xor
jg
js
push
or
lods
mov
mov
enter
inc
jecxz
mov
incb
inc
add
pop
sbb
and
jge
add
jnp
je
dec
int3
mov
cmpsb
mov
push
test
push
movl
aam
fwait
xchg
mov
sub
inc
enter
lods
dec
ss
es
pop
pop
enter
jmp
pop
aam
fistps
xchg
sub
or
mov
push
insb
inc
push
dec
icebp
sbb
imul
loope
push
mov
cs
jl
out
test
mov
jb
aam
fcmovu
mov
lods
dec
fcoms
ss
sti
bound
xchg
jae
cmp
pop
cmpsb
fdivr
aas
push
bound
fcom
inc
aas
push
xchg
fwait
or
sbb
xchg
inc
out
aam
je
inc
adc
xor
xchg
fstp
pushf
sub
stos
push
repnz
mov
mov
xchg
neg
mov
shlb
daa
xchg
stos
or
inc
and
hlt
rorl
xchg
sbb
xchg
sbb
and
jmp
aaa
std
aas
mov
mov
jg
enter
in
rcl
mov
inc
lret
jne
std
lret
or
push
inc
dec
jmp
into
test
inc
dec
rorl
pop
push
push
movsl
sbb
pop
mov
leave
clc
call
insb
push
jb
popa
add
xchg
aad
js
aam
mov
inc
push
push
pop
mov
cld
add
test
test
and
cwtl
dec
fldenv
orl
fdivrs
push
clc
mov
cmp
and
and
sub
cwtl
inc
and
bound
and
xchg
add
xchg
mov
aad
addr16
sbb
notl
or
sub
mov
sbb
enter
push
cmc
dec
sbb
adc
push
xchg
push
enter
push
es
aas
std
mov
push
rcll
dec
mov
les
fcomps
xor
rorb
add
mov
xchg
and
mov
inc
push
xchg
leave
aad
inc
cwtl
lea
mov
adc
xchg
sbbl
cwtl
bound
xchg
xor
sub
adc
dec
adc
and
sub
loopne
out
aas
fs
stos
or
or
cmp
jne
das
mov
xchg
and
nopl
cmp
stc
daa
fnstcw
or
out
jne
adc
test
shr
out
fists
adc
insl
ret
mov
out
daa
xchg
xchg
cmpsl
jl
movsb
std
int
dec
test
loopne
jmp
xchg
xlat
xlat
notb
or
in
xchg
es
sub
pop
push
ss
push
jp
das
stos
fstpl
shlb
jecxz
push
aad
inc
xchg
je
or
scas
mov
pop
and
dec
jno
sub
xor
incb
xor
xchg
push
add
stos
xor
lods
sub
das
mov
mov
xchg
daa
push
inc
daa
mov
scas
dec
bound
xchg
cmp
add
cmpsb
fcmovb
xchg
push
movsb
lods
mov
repz
sbb
mov
pusha
xchg
sahf
mov
adc
cltd
mov
lds
stos
shlb
call
sbb
adc
adc
scas
fstpl
je
lcall
ljmp
or
xor
mov
out
xor
xor
stos
sarl
rorb
mov
add
in
dec
adc
sbb
repnz
ret
ss
push
push
sahf
or
fld
icebp
mov
ja
ret
add
call
jl
clc
gs
stc
and
sbb
sbb
and
push
scas
cmp
lods
add
xchg
mov
or
aam
pushf
test
sub
pushf
pop
mov
mov
jne
adc
lock
mov
push
test
rcll
dec
xchg
inc
adc
movb
push
adc
scas
lds
mov
gs
cmpsl
add
and
sbb
nop
cli
push
roll
xchg
mov
and
and
jnp
jecxz
cmc
ficomps
test
cs
ret
xor
arpl
cmpl
lret
mov
lret
rol
mov
push
xchg
xchg
jo
jp
add
leave
pop
xor
and
loope
in
clc
aam
mov
add
or
mov
scas
into
xchg
pop
push
cmp
sbb
mov
add
xchg
mov
jmp
loopne
popa
xchg
ja
pushf
mov
outsb
lret
hlt
nop
popf
sbb
dec
push
pop
push
xchg
push
fnstsw
or
imul
sbb
sbb
mov
rclb
inc
xchg
add
and
push
add
filds
xchg
enter
mov
call
es
mov
pusha
xor
push
push
jb
inc
int3
jne
outsl
cli
add
add
jae
dec
jne
adc
arpl
jge
mov
cmpsl
mov
lods
push
pusha
ja
idivl
sub
movsb
sbb
push
cmp
or
jmp
inc
xor
faddl
mov
lahf
push
sbb
push
aad
and
push
loope
and
cmp
lret
pop
xorb
cltd
mov
xor
inc
xchg
xchg
push
cmp
fildll
addr16
std
mov
loopne
out
xchg
push
dec
xchg
mov
enter
in
mov
js
ds
xchg
sub
insl
adc
ret
fildl
ljmp
pop
pop
xchg
je
scas
pop
dec
shll
sbb
xchg
inc
push
inc
mov
push
icebp
dec
stos
cmp
xchg
push
inc
jl
mov
mov
pop
mov
fsts
fs
das
pop
mov
xchg
xor
mov
dec
lret
jp
imulb
inc
pop
cmp
or
test
outsb
mov
bound
and
dec
cmpsb
sbb
push
inc
mov
mov
iret
repnz
jbe
push
push
cmp
and
ret
mov
fcomip
push
incl
cltd
sbb
cmp
fsubr
mov
rorl
movl
jae
addr16
mov
inc
lret
es
lock
repz
mov
push
xchg
lret
cs
pop
mov
xchg
xchg
movsl
addl
jnp
mov
jne
push
test
cltd
cmp
in
push
inc
add
lods
pop
adc
pop
push
inc
push
mov
add
fcoms
inc
pop
inc
push
jp
imul
subl
jge
dec
adc
xor
pop
add
sbb
inc
jns
lahf
push
pop
jns
stc
dec
xchg
mov
sti
sarl
leave
ja
mov
js
cmp
fs
inc
sbb
aas
fwait
sahf
pop
ret
xchg
ss
popf
cmpl
and
mov
fsts
in
test
cmp
push
add
push
xor
fnstsw
adc
imul
pop
cli
iret
imul
push
aam
dec
hlt
lds
push
push
and
adc
adc
es
or
rorl
es
xlat
ja
sub
sbb
leave
or
cmpsl
xchg
push
int3
daa
dec
push
cmpsb
xchg
divl
nop
and
inc
pop
mov
leave
jle
xor
fisubs
sarl
or
inc
shl
mov
push
lret
stos
xor
arpl
aad
xchg
sti
sbb
xchg
mov
insl
and
inc
addr16
movsb
repnz
mov
inc
jnp
std
adc
xchg
je
dec
cmp
stos
int3
lds
mov
sub
sbb
xor
dec
jne
xor
push
js
das
not
add
pop
in
cmpsl
sbb
pop
jno
fxam
ret
mov
fcoms
rcrb
sahf
inc
inc
jle
subb
adc
inc
movsb
into
movsb
sbb
test
insb
xchg
push
inc
pop
pop
mov
mov
aas
nop
push
push
xchg
fists
ret
in
mov
mov
xor
xchg
mov
nop
add
cmp
and
fs
push
dec
xchg
lcall
mov
xor
scas
iret
cmp
cmc
jne
rorl
dec
data16
lods
dec
iret
xchg
xchg
shlb
inc
inc
and
test
inc
arpl
std
mov
xchg
sti
cmpsl
jnp
imul
or
bound
mov
andb
dec
call
and
test
dec
push
push
aam
push
sahf
cmpsb
mov
xchg
dec
jno
xor
jns
push
daa
cmp
pop
into
out
daa
aas
xlat
pop
push
int
outsl
shrb
xchg
fcoml
dec
cmp
push
mov
push
pop
rcll
pop
jo
or
jge
fidivrl
push
push
push
jno
mov
out
jo
xchg
ror
cmp
jecxz
xchg
and
push
out
dec
push
enter
or
jmp
daa
outsl
xchg
xor
cmc
push
push
data16
fs
fimuls
sarl
roll
test
ret
lcall
jae
mov
jle
jmp
incl
push
mov
data16
pop
mov
out
cmp
les
add
and
adc
pop
sbb
sbb
enter
test
mov
sbb
sub
inc
mov
les
inc
sub
cmp
shl
dec
and
das
mov
pusha
int3
jb
scas
xchg
cmp
xchg
dec
icebp
in
fstpl
shr
sub
mov
sbb
aam
cmc
popf
fwait
nop
mov
leave
mov
aas
dec
enter
dec
stos
jmp
xchg
scas
in
xlat
and
mov
xchg
out
push
inc
pop
jge
adc
cmp
iret
in
pop
sub
dec
jae
push
mov
shlb
ss
mov
mov
sbb
inc
lahf
cmpb
lock
inc
test
out
mov
gs
push
pop
and
add
dec
push
or
sbb
inc
push
jp
xchg
sbb
lea
cmp
popa
push
and
push
inc
adc
cmp
or
lock
sbb
in
aas
pop
in
cmp
mov
push
or
shrl
mov
push
popa
push
fs
test
jno
sub
jnp
and
jp
out
xchg
inc
mov
mov
cmp
and
push
inc
shlb
mov
cmp
pop
cli
vpshufhw
jnp
and
aam
in
call
aam
mov
cwtl
aas
rorb
xor
push
mov
pop
pop
mov
mov
popf
sahf
das
loop
mov
ret
ljmp
pop
mov
psraw
nop
leave
call
push
pop
push
pop
mov
mov
push
call
test
adc
fcom
mov
rclb
iret
out
adcb
adc
aas
insb
out
jle
cmc
std
push
out
jg
push
pop
mov
sbbl
jl
dec
loop
xor
push
insb
scas
pop
push
stos
fimull
mov
and
xchg
dec
adc
mov
sub
and
pop
push
fisubrs
in
jle
dec
test
and
and
arpl
adc
into
jno
sub
sbb
shrl
inc
push
dec
xchg
push
in
stos
inc
scas
addr16
sub
movl
add
jle
daa
add
jb
cltd
push
sbb
aaa
push
jmp
idivb
push
jl
insl
mov
mov
es
xchg
scas
cmp
adcb
in
adc
jno
and
jnp
addr16
push
sbb
add
pop
pop
jns
push
xor
leave
arpl
lret
jg
fadd
fsubs
outsb
shll
mov
flds
xlat
mov
inc
fmull
jmp
push
pop
imul
mov
xlat
cmp
rorl
stos
in
jno
mov
lret
movsb
jecxz
mov
pop
jae
bound
imul
out
cmp
push
xchg
mov
mov
sbb
fwait
outsl
pop
ficoml
hlt
sub
lods
pop
inc
push
stc
xchg
call
push
mov
fldt
out
mov
out
pop
cmc
lds
jge
ret
leave
pusha
push
mov
in
or
notb
fisubs
out
popf
pop
add
rorl
mov
fdiv
xor
sub
pop
jae
stc
pushf
insb
sbb
sbb
push
aas
int3
add
inc
adc
loop
nop
jae
and
or
out
bound
xchg
hlt
sub
in
mov
aas
fisubrl
mov
push
inc
lods
jns
mov
xchg
inc
push
inc
xchg
sub
in
pop
pusha
fdivrl
fsubrp
mov
insl
pop
fimull
das
xchg
add
sti
ret
add
inc
push
sahf
push
clc
cmpsb
daa
ror
aam
and
lock
sbb
mov
shlb
lahf
mov
cwtl
mov
mov
jae
pop
rolb
outsb
add
out
mov
jno
xchg
stos
into
xor
mov
in
and
xchg
xor
xchg
mov
or
std
cltd
ds
inc
lods
add
lahf
mov
sbb
cmp
aas
sti
faddl
cld
xchg
cmp
push
push
push
or
mov
rcr
sub
jno
pop
out
cmpsb
xchg
xchg
jle
in
scas
cmp
int
xchg
test
inc
rdpmc
out
popa
das
call
inc
popf
adc
and
pop
loope
mov
xchg
adc
pushf
pop
addb
movsl
hlt
icebp
mov
and
xchg
inc
adc
adc
adc
leave
push
psubsw
dec
call
xchg
mov
cmp
inc
jmp
mov
fs
or
lea
dec
dec
xlat
aas
mov
lds
xchg
xchg
aas
push
int
into
ljmp
movsl
push
jns
rol
pop
xchg
inc
aam
fs
mov
xor
mov
cld
mov
inc
adc
imul
inc
dec
in
push
andb
add
jae
inc
xchg
shlb
movl
imul
or
or
popf
mov
sub
push
mul
scas
int
notb
xchg
sub
ja
lods
cmp
mov
sbb
xchg
add
push
adc
inc
ljmp
cld
les
lcall
nop
out
inc
faddl
jno
mov
mov
fnstsw
mov
mov
cmp
sub
sti
fnstenv
adc
out
cmpsl
cmovp
xor
cltd
cmp
pop
stos
je
mov
movsl
push
es
inc
or
xchg
iret
xchg
mov
test
mov
cli
stos
lcall
aam
xchg
mov
xlat
cltd
push
mov
push
xchg
mov
push
sub
adc
jns
xor
push
cmp
imul
xor
xchg
mov
insb
aas
xchg
fcmovne
xor
mov
adc
stc
aas
fldl
add
arpl
in
ljmp
jle
pop
add
fnsave
push
pop
inc
bound
mov
jecxz
fistl
sbb
inc
add
push
into
xchg
dec
lret
push
xchg
inc
imul
jo
pop
xchg
icebp
xchg
sbb
mov
xlat
ss
sahf
cmp
xor
adc
cmp
xchg
les
xchg
in
insl
in
scas
inc
out
mov
movsb
pop
insl
cmp
mov
xchg
aam
cmpl
dec
ret
cs
call
test
mov
mov
cmp
push
fistps
fmul
insb
cmp
das
cmpb
in
lahf
push
adc
xchg
rorl
loopne
aam
lcall
aam
jp
push
mov
lret
xchg
loope
subl
mov
push
add
ja
lods
xchg
movsb
jl
mov
adcb
cwtl
mov
dec
test
adc
dec
in
inc
cltd
sti
mov
pop
sar
lea
adc
sbb
xchg
cld
push
lea
jg
inc
test
inc
ficoms
cmp
push
arpl
inc
pop
lret
imulb
or
movsl
test
test
mov
pushf
and
mov
push
repnz
mov
mov
addl
daa
cmp
clc
lds
sub
in
mov
cmc
mov
iret
push
mov
mov
dec
frstor
jb
cmp
nop
xchg
dec
rorl
clc
pop
push
ret
mov
dec
mov
pop
xchg
rcrb
in
mov
cli
outsb
jg
pop
out
clc
mov
xor
insl
pusha
or
cmpsl
lret
mov
data16
pop
push
popa
test
test
shl
xor
cmp
xchg
and
int3
movsb
push
clc
cltd
fwait
xchg
mov
sbb
push
push
push
mov
mov
outsb
pop
xor
pop
daa
sbb
imul
in
mov
inc
adc
stc
jae
or
add
mov
mul
cltd
jl
shll
loopne
xchg
xor
inc
loopne
jg
mov
cwtl
cmp
push
std
pop
mov
ret
lods
ret
push
outsl
push
cmp
xlat
or
push
inc
or
fldt
xchg
jmp
sub
mov
dec
pop
int3
xchg
dec
push
cmp
test
add
jmp
mov
cs
cwtl
xchg
test
stos
je
xor
es
cmp
leave
movsl
jecxz
pop
sbb
xchg
and
jne
je
and
out
adc
ret
test
push
adc
mov
cmp
inc
xchg
in
in
mov
cmp
push
data16
popl
lds
mov
lret
mov
mov
xor
outsl
dec
jmp
adc
loop
addr16
out
mov
and
das
add
test
jne
xchg
and
sbb
jne
ja
aas
fwait
xchg
pop
jmp
sbb
push
mov
imul
or
inc
push
repz
repz
lret
jecxz
adc
xchg
ficoml
adcl
or
lods
movl
aad
inc
mov
jne
add
scas
jae
xor
sahf
xchg
addb
sarb
push
out
ror
push
es
shll
int3
dec
inc
pop
js
mov
xor
push
addr16
xor
mov
pop
stc
xor
inc
lcall
cli
inc
rol
bound
pop
jbe
sub
sbb
push
sub
adc
aas
xchg
dec
and
xor
scas
push
inc
push
iret
fistpll
fwait
outsb
push
jns
sahf
sbb
or
cmp
mov
pop
clc
push
aam
fmull
stos
data16
imul
jo
lea
jg
inc
dec
xchg
testb
sub
xchg
mov
push
push
mov
push
cld
sub
push
rolb
das
jge
in
icebp
aas
cmpsb
repz
or
jmp
sbb
jne
xor
mov
bound
lock
out
nop
leave
aas
das
cmpsl
jb
xchg
fists
add
mov
add
aas
push
inc
cmp
pop
test
mov
jle
xchg
cwtl
shl
int3
in
out
mov
jns
cmpb
or
push
sub
mov
sbb
sub
lea
mov
sti
cmp
cmpsl
arpl
jnp
dec
dec
aam
aam
and
inc
sbb
ret
and
jmp
int3
pop
jecxz
mov
dec
inc
inc
xor
mov
xchg
movsb
or
jbe
adc
fstl
jbe
sub
or
ret
mov
fdivs
inc
push
adc
pop
xchg
hlt
movsl
inc
add
push
sbb
sbb
or
mov
mov
mov
push
mov
stc
jb
push
sub
imul
and
add
aas
bound
scas
jae
jb
insl
scas
inc
sub
jecxz
iret
xchg
jge
push
mov
popf
adc
mov
popl
insb
xor
movsl
xlat
sahf
xchg
add
mov
ret
mov
xlat
or
mov
enter
scas
xchg
push
inc
dec
pop
add
adcb
ret
mov
shl
mov
dec
fs
aaa
xchg
fists
xor
sti
adc
adc
ficomps
pop
sub
aas
shlb
pop
mov
inc
inc
mov
adc
xor
xor
repnz
dec
scas
push
stos
mov
push
mov
std
jp
sar
lea
repz
inc
jo
jl
sub
int
push
xchg
loopne
mov
sub
dec
and
or
loop
add
nop
mov
add
jl
push
fisubs
in
xor
test
add
lret
mov
stos
inc
pop
mov
mov
or
xchg
movsb
inc
int
xchg
push
sbb
mov
out
jns
pusha
in
cmp
dec
dec
fidivrs
jnp
in
pushf
aas
enter
fcoms
cmc
jg
inc
mov
ss
xor
pop
jb
jno
popf
inc
sbb
dec
into
mov
inc
fnstcw
and
mov
fnop
pop
out
lcall
ret
adc
lahf
inc
cli
cltd
rorl
fadd
in
jae
adc
sbb
mov
push
cltd
mov
dec
push
xchg
xor
push
mov
xor
notb
xor
and
jnp
dec
stos
push
pop
ja
push
cwtl
shll
mov
jmp
sbb
out
mov
rcll
jecxz
push
cwtl
push
jp
xor
or
xchg
dec
icebp
mov
xlat
adc
pop
push
das
pop
jns
jae
pop
sbb
xlat
jne
call
rclb
lds
mov
fwait
mov
cmp
ja
and
in
add
push
into
push
in
lret
jg
adc
mov
xchg
pop
xchg
loope
sbbb
lds
jecxz
rclb
call
les
pop
sar
js
fnsave
push
inc
std
repz
enter
les
pusha
jp
xchg
sub
aad
scas
aas
rcl
jp
xchg
push
ja
jae
rolb
repnz
imul
inc
dec
mov
lahf
xlat
lds
aam
leave
inc
xchg
push
mov
lds
jne
pop
mov
fcmovu
sub
enter
jecxz
insb
fwait
lret
push
xchg
push
push
scas
cwtl
mov
bnd
cmp
mov
into
xchg
stc
xchg
pop
lcall
dec
ret
stos
add
xchg
sbb
fdivrs
ds
flds
daa
sbbb
mulb
push
aas
push
mov
inc
sub
push
add
xchg
cmp
movsl
and
cmp
mov
push
mov
push
dec
loop
es
iret
mov
fdivp
loope
flds
jb
jo
cmp
xchg
test
pop
nop
adc
fcmovu
scas
inc
pop
fdivrs
fwait
mov
rcrl
rclb
scas
lret
cmc
addr16
xorl
push
add
jnp
add
ss
push
push
sub
aas
cmp
repz
and
jge
int3
cmp
data16
inc
lea
push
mov
ret
dec
pop
push
add
pop
inc
enter
js
cwtl
js
pop
adc
sete
jmp
jns
xchg
movsl
sbb
push
lods
icebp
aad
push
inc
adc
call
sbbl
push
xchg
outsl
and
mov
jg
push
pop
lds
mov
sbb
lcall
push
mov
int
push
fstl
insb
mov
outsl
xchg
adc
or
inc
shll
arpl
out
lods
push
test
cmp
subl
xchg
sub
std
mov
mov
inc
inc
pushf
fisttpl
pop
inc
es
sub
mov
add
insl
imul
or
rorb
push
popf
mov
loop
mov
sub
notl
mov
lahf
add
inc
daa
fcomi
data16
and
push
stos
addr16
lds
es
je
mov
outsl
and
push
xchg
mov
pop
mov
add
cltd
fsubrs
dec
pop
pop
out
cmp
add
add
loop
xchg
pushf
into
adc
sub
xor
mov
iret
rcll
sbb
dec
jbe
inc
es
mov
xchg
fucomip
insb
pop
addr16
dec
and
movsl
cmp
sahf
testl
jmp
scas
popa
pop
xchg
cld
test
ret
mov
sub
cmpsl
loopne
sub
lret
mov
leave
imul
pop
nop
mov
pop
jl
shll
xchg
subb
cmp
mov
mov
shll
loop
dec
and
pop
or
or
outsb
es
aad
xchg
loop
dec
sub
mov
jg
pop
fdivrl
cmc
sbb
pop
lahf
aas
and
ficoms
cmp
cmp
pop
insb
leave
push
pop
mov
mov
dec
je
test
les
pusha
pop
mov
outsb
dec
xor
out
push
xor
stos
lret
sarl
cmp
cmp
clc
and
push
inc
data16
pop
sbb
or
cmpsb
mov
int
mov
push
adc
cltd
out
imull
cmp
inc
fwait
jp
push
movl
push
loopne
cmp
and
hlt
jae
lahf
aad
xchg
pop
fs
lea
cmp
scas
fildll
xor
mov
lret
jae
sbb
jne
or
jle,pn
xchg
outsb
sarl
loopne
xchg
and
mov
xchg
xor
aad
adc
jnp
sub
mov
pop
push
inc
pop
push
or
dec
mov
repz
fwait
dec
in
inc
mov
mov
dec
sbbb
push
in
shlb
lods
aas
rorl
mov
cltd
popa
scas
addr16
xchg
fdivrp
cld
pop
xchg
jmp
sub
push
push
mov
add
cmp
clc
aad
dec
push
jg
shlb
sbb
enter
push
xor
dec
push
pop
dec
das
jl
loope
insb
test
push
es
jg
das
cmp
add
ret
jecxz
pop
jbe
shrl
notb
mov
cwtl
xchg
inc
adc
or
push
mov
sub
std
dec
ret
mov
in
sbb
and
lahf
nop
cmpsl
test
mov
add
fdivrl
ja
push
pop
xor
sub
ljmp
mov
dec
mov
sbb
push
insb
ret
test
xchg
fisubl
into
test
fistpll
push
fs
repz
enter
pop
sub
or
mov
mov
sub
test
add
xchg
or
sub
push
mov
aam
ds
dec
fs
mov
and
push
rcll
stos
add
add
adc
or
push
or
add
push
inc
cwtl
add
add
add
xchg
adc
add
or
add
loop
add
add
dec
add
and
add
add
popa
and
or
add
xor
add
add
xor
adcb
add
push
inc
add
addb
inc
and
add
pusha
and
imul
mov
pusha
es
adcl
add
inc
or
or
inc
or
or
addb
and
orl
ret
sbb
cwtl
add
adc
test
inc
add
sbb
add
add
and
and
add
add
add
adc
inc
add
jo
add
inc
add
add
and
add
add
and
add
dec
sub
sbb
adc
inc
add
or
add
or
inc
or
and
test
inc
and
daa
add
rolb
mov
mov
add
inc
add
add
add
add
nop
inc
add
js
add
pusha
add
add
addb
mov
add
add
and
and
add
push
adc
jo
ss
xchg
test
xor
push
andl
and
push
shlb
add
add
pusha
add
adc
or
enter
inc
out
add
add
add
and
adc
inc
push
and
add
add
add
pop
mov
add
add
adc
push
and
add
fsubr
add
add
addb
sub
dec
add
add
inc
and
adcb
add
inc
add
add
mov
add
nop
add
stos
or
adc
add
add
add
add
add
add
pop
add
adc
push
add
push
sub
fiaddl
add
add
test
addl
add
add
adc
add
add
and
add
inc
dec
sub
and
push
add
or
add
and
inc
and
add
or
or
add
inc
add
and
add
add
loopne
and
push
add
mov
add
xor
sub
add
adc
push
add
add
add
add
sub
lret
nop
add
or
mov
and
adc
add
mov
or
xchg
test
sbbb
mov
and
inc
lods
and
inc
add
sbb
add
add
shll
addb
inc
inc
inc
dec
cltd
add
push
and
add
inc
roll
adc
lds
and
mov
add
adc
sbb
and
add
nop
add
mov
add
or
adc
mov
inc
and
add
add
add
add
add
cmpsb
inc
addb
add
cmp
inc
add
add
inc
or
add
pusha
add
add
inc
dec
inc
or
add
add
add
add
add
inc
sbb
add
add
add
cwtl
or
inc
add
add
inc
nop
inc
add
push
push
add
and
addb
adcb
add
pushf
add
adc
add
or
add
adc
add
ret
add
dec
add
or
ret
inc
add
add
add
andl
push
add
add
andb
addl
adc
add
adc
movsb
orb
inc
mov
inc
add
add
rolb
inc
add
pop
addb
push
sbb
addb
add
adc
or
and
add
add
inc
inc
add
inc
add
pusha
add
shlb
inc
add
or
roll
xorb
add
and
add
inc
dec
or
add
add
add
inc
add
or
xor
adc
add
arpl
add
addb
add
orb
add
push
add
add
add
or
add
nop
and
or
add
addb
enter
adc
inc
or
xchg
add
add
add
inc
nop
and
mov
andb
add
adc
inc
pop
add
adc
and
jne
add
and
add
cmp
push
mov
inc
add
les
les
add
add
adc
push
lock
addb
add
or
xor
inc
add
or
push
or
and
addl
inc
mov
add
nop
and
add
add
addb
and
bound
adc
sti
add
adc
test
and
add
add
or
fs
add
add
add
addb
inc
in
or
add
or
adc
sbb
add
add
mov
add
sbb
add
and
add
add
sbb
pusha
inc
add
cmp
add
rolb
pop
add
adc
and
and
inc
jb
inc
inc
add
addb
push
add
add
add
inc
xchg
push
inc
arpl
add
add
inc
add
adcb
add
add
dec
add
adcb
sbb
sub
add
addb
add
rolb
add
inc
add
in
add
add
and
addb
add
test
add
and
insb
add
add
add
addb
mov
addb
or
and
add
add
adc
adc
add
inc
inc
add
adc
xor
dec
push
push
add
add
add
orb
test
rolb
and
add
inc
add
loopne
add
add
add
les
and
es
add
add
and
inc
adcb
and
and
and
into
add
mov
cmp
adc
inc
les
inc
add
iret
mov
add
add
add
inc
and
add
or
add
inc
add
add
or
inc
add
add
add
ret
inc
add
and
sbb
rol
inc
inc
adc
inc
adc
adc
add
add
mov
sub
add
add
add
mov
or
lcall
add
mov
add
adc
nop
addl
xchg
mov
add
inc
add
ret
add
mov
add
inc
add
add
inc
add
add
adc
inc
or
add
adcb
add
ss
inc
or
or
inc
add
add
and
or
adc
add
adc
push
pop
or
add
and
add
adc
test
add
mov
add
inc
push
adc
dec
inc
add
add
add
mov
add
or
add
sub
or
add
add
add
mov
inc
add
inc
adc
add
pop
addb
mov
add
add
add
pusha
addb
adc
adc
add
inc
adcb
add
adc
sub
add
adc
adc
add
push
add
outsl
orb
xor
inc
adc
add
adc
sbb
rolb
or
inc
pusha
add
add
add
add
add
adc
add
xchg
add
add
add
or
add
add
addb
add
adc
addb
or
add
add
mov
sub
or
add
add
add
inc
sldt
inc
inc
add
add
and
pop
dec
sbb
add
loop
and
or
add
dec
adc
add
and
and
adc
add
inc
inc
and
adc
add
inc
orb
inc
sub
add
or
adc
sbb
add
inc
inc
mov
add
add
or
lock
or
pop
add
add
add
rolb
mov
adc
and
or
int3
add
or
bound
rolb
and
add
and
mov
xor
add
and
add
sub
push
xor
int3
or
add
add
pusha
add
or
or
inc
add
add
add
xchg
addb
sbb
add
sub
es
and
adc
and
adc
rcll
add
test
add
add
popa
inc
add
mov
add
add
add
add
or
addb
add
and
add
and
dec
add
xchg
add
rolb
or
and
add
add
xchg
add
nop
add
add
add
loop
nop
and
add
or
cmp
add
and
rolb
pusha
add
add
add
add
and
add
add
mov
adc
add
adc
test
nop
add
push
and
jae
add
add
adc
add
add
inc
loop
push
inc
and
add
inc
test
test
add
inc
addb
nop
adc
add
add
add
inc
inc
dec
add
add
add
add
or
add
inc
sbbb
xor
inc
add
mov
add
pusha
add
and
add
addb
addb
add
add
add
dec
andb
inc
and
mov
test
or
add
add
add
add
adc
adc
les
arpl
dec
adc
add
push
adc
and
add
sub
and
orb
xchg
cs
test
add
add
popa
add
or
test
push
add
adc
adc
add
sub
mov
and
and
add
inc
or
mov
add
mov
sub
add
sub
je
add
add
add
adc
rcl
add
add
mov
or
or
sub
inc
or
xor
or
and
and
add
add
inc
and
andb
and
adc
popa
add
and
add
inc
or
and
add
or
adc
push
pusha
or
add
add
adc
adc
add
or
addb
add
and
add
add
inc
or
cwtl
and
adc
add
sub
test
pusha
add
dec
lods
or
nop
add
add
and
adc
add
add
sbb
adc
pop
and
add
add
jo
add
rolb
add
adcb
adc
add
or
addl
inc
lret
add
add
inc
add
aam
inc
inc
addb
adc
or
nop
inc
inc
or
inc
or
xor
inc
add
movsb
rolb
and
adc
add
nop
adc
or
add
or
add
adc
inc
and
and
adc
add
adc
add
inc
inc
or
add
add
add
add
add
xchg
add
add
add
sbb
and
add
add
add
rolb
add
cwtl
add
add
test
mov
test
add
inc
sbb
add
add
les
addl
mov
sub
inc
and
xchg
dec
mov
adc
or
jo
inc
shlb
push
inc
add
and
add
addb
dec
adc
inc
add
add
add
add
dec
sub
orb
add
push
adc
loopne
add
das
and
sub
add
add
add
and
add
cmp
or
adc
xor
cmove
ret
and
inc
addb
add
and
add
adc
mov
sub
pusha
add
push
add
adc
or
add
ds
and
and
push
inc
dec
and
add
and
add
inc
add
inc
add
fwait
adc
add
addb
add
inc
inc
adc
dec
add
adc
add
inc
add
add
addb
inc
add
and
andl
add
add
add
and
addb
add
sub
inc
rolb
add
add
or
adc
add
add
add
add
adc
xchg
add
add
test
addb
add
adc
and
lods
addb
add
adc
addb
inc
add
pusha
add
adc
dec
add
and
mov
mov
add
adc
add
add
add
dec
add
mov
sbb
test
add
and
jo
add
add
sub
addb
add
sbb
.byte
test
push
mov
fsubr
cmp
push
and
xchg
or
mov
addb
xchg
leave
xchg
mov
out
sti
jbe
xchg
js
jb
mov
sahf
pushf
xchg
int3
bound
es
jne
out
scas
xchg
or
or
push
repnz
jle
add
xchg
pop
movsb
xchg
call
mov
cmp
cmp
mov
mov
jmp
xor
stos
lahf
idiv
dec
test
jle
dec
jo
sub
cmc
mov
lods
push
or
push
xchg
pop
rcll
jmp
pop
int
outsb
fcmove
lods
xor
xchg
nop
cmp
push
add
aas
jecxz
scas
dec
stc
push
bound
dec
lds
push
adc
int
cmpsb
cli
fs
adc
push
or
repnz
adcl
fmuls
lcall
xchg
dec
mov
outsb
out
je
add
mov
push
mov
test
jl
insl
jae
fistpll
xchg
stos
repz
rclb
inc
cmp
movl
push
mov
push
fmuls
mov
int
gs
xor
pop
aam
xor
les
xchg
cmp
movsb
cmp
push
test
cmp
jp
xchg
aaa
xor
mov
inc
cmpsl
fwait
xlat
icebp
push
ret
cmp
mov
push
or
pop
jmp
test
orb
add
fsubs
cltd
or
fdivs
jecxz
orb
das
pop
mov
popf
adc
aas
xor
jmp
je
sbb
out
orb
imul
push
xlat
fnstenv
in
je
xchg
add
and
xchg
push
cmp
add
stos
cmp
sub
dec
inc
add
je
out
cmp
ficomps
das
mov
sbb
stc
aas
xchg
lahf
dec
push
out
sarl
test
push
je
pusha
sahf
popf
xchg
mov
cli
xchg
cmc
popa
in
mov
lahf
sbb
imul
cld
add
xchg
jg
adc
push
icebp
push
inc
out
into
test
push
test
push
inc
mov
xchg
dec
and
adc
sub
fs
iret
cmp
test
mov
mov
cmp
adc
add
mov
adcb
aaa
fnstsw
subb
dec
xchg
out
sub
sub
add
in
in
cmp
nop
push
push
mov
shlb
mov
add
or
mov
push
jmp
ret
movsl
xchg
sbbl
push
mov
fistpll
lahf
repz
cmp
or
mov
cmp
int
jne
adc
jg
fcoms
inc
imul
movsl
xchg
lahf
out
mov
jb
mov
js
ss
xor
repnz
inc
aad
cmp
push
dec
cwtl
adc
mov
pop
jecxz
xchg
jne
inc
fucomi
stc
pmaxub
aam
icebp
ds
incb
add
repnz
cmp
adc
cmp
push
inc
je
cmc
lock
stc
lret
test
andb
pop
and
aam
pop
xchg
xchg
xchg
fucomp
cmp
mov
push
cwtl
mov
jg
push
xor
aam
lods
inc
ret
aas
test
sbb
xchg
xchg
pop
cwtl
push
nop
or
enter
cli
in
adc
xchg
adc
xchg
lods
das
dec
mov
int
inc
and
cld
scas
jle
test
fcompl
sarb
push
xchg
ror
outsb
mov
bsf
adc
sub
into
orl
dec
jnp
pop
push
cmp
mov
inc
dec
and
test
sub
aas
pop
rcrb
push
push
lods
fmul
enter
les
sub
and
js
imul
add
fstpl
pop
and
fldenv
scas
in
jp
addr16
insl
in
jle
repnz
xchg
or
mov
sbb
sbb
add
push
and
das
js
ss
sub
adcb
push
out
sti
icebp
fstpl
clc
lcall
and
push
clc
push
jnp
or
or
js
jmp
inc
mov
mov
icebp
pop
pop
jno
or
and
shrl
xchg
test
jg
jmp
sti
xchg
push
adc
ss
dec
cmp
xor
mov
dec
ja
dec
adc
in
sub
xlat
cmp
inc
sub
inc
mov
mov
ss
mov
jno
enter
iret
shlb
sti
leave
and
cmc
pop
imul
pop
pop
das
mov
addr16
mov
add
cli
mov
test
xchg
adc
xchg
ror
pusha
imul
pop
sbb
cs
sub
clc
adc
outsl
das
inc
das
cmpsl
xchg
jae
inc
mov
dec
and
notb
mov
push
push
dec
dec
push
push
xor
sbb
dec
inc
push
xchg
jmp
sbb
dec
adc
pop
xchg
pop
cli
cmp
dec
jmp
loope
hlt
insb
loope
ljmp
inc
jge
andb
push
movsl
jne
leave
add
dec
sub
andb
inc
ss
out
mov
loopne
hlt
xchg
add
arpl
shrl
icebp
sbb
push
adc
mov
xchg
out
roll
dec
push
adc
pop
pop
jae
out
into
and
scas
and
repz
xor
insb
popa
sub
xchg
pop
daa
inc
xor
inc
push
mov
xor
data16
mov
shlb
test
cmp
push
cwtl
xor
stc
in
clc
enter
lods
inc
sbb
fnsave
xchg
fcoml
pop
jg
out
aas
and
lods
xchg
xchg
fnop
xor
loope
movb
inc
dec
out
enter
in
lods
inc
mov
out
or
roll
data16
daa
mov
pop
aas
int3
cmpsl
push
dec
sub
push
je
jne
ds
nop
dec
and
cmp
pop
push
xchg
out
test
or
stos
ror
js
cs
mov
pop
xchg
sahf
mov
jmp
mov
adc
or
mov
stos
adc
mov
aas
outsb
xchg
sub
imul
addr16
inc
aad
fwait
push
xchg
xor
enter
inc
mov
mov
dec
sbb
pop
inc
add
lock
arpl
inc
adc
fidivl
cmp
data16
inc
faddp
xchg
add
hlt
cmp
negb
outsl
jo
faddl
mov
negb
mov
into
sbb
xchg
cmp
insl
mov
rcll
jae
add
scas
adcb
xchg
sbb
push
rcrl
mov
jb
std
push
mov
mov
mov
in
mov
or
adc
ror
sbb
or
iret
inc
add
xchg
push
and
shrl
inc
dec
xor
push
pop
mov
sbb
icebp
or
dec
pusha
out
pusha
pop
imul
or
repnz
xlat
push
addr16
mov
lock
gs
cmp
test
xchg
xor
mov
and
or
aas
jmp
dec
iret
add
adc
add
fs
test
or
sbb
xor
in
add
repnz
call
ret
mov
movsb
xor
pusha
popf
jp
inc
pop
lock
xchg
or
aad
pop
mov
cmp
inc
xor
xchg
mov
movsl
pushf
push
inc
sub
sbb
jbe
icebp
jg
mov
std
fmulp
and
sbb
xchg
mov
out
and
and
das
push
cmp
add
push
xchg
jne
fstl
data16
in
aas
loope
out
dec
xchg
fiaddl
cli
sbb
stos
jmp
sub
adc
inc
xor
mull
push
lea
enter
push
sbb
and
lods
adc
xor
push
jge
movb
imul
lahf
ss
insl
push
push
out
inc
push
ja
int3
sbb
ds
lock
aas
call
push
pop
sub
inc
mov
and
aas
add
cmp
popf
out
int3
dec
adc
nop
inc
repz
cmp
out
xchg
jp
push
sbb
jno
sub
subb
pop
push
stos
xor
rorl
sub
push
pop
jo
adc
xchg
mov
scas
jle
xor
inc
into
cmc
add
push
jmp
stos
aad
jo
jecxz
and
in
test
lret
xor
pop
int
repnz
mov
insb
iret
aas
add
mov
cld
mov
cwtl
aaa
hlt
stc
add
and
dec
pop
and
ret
rorb
xor
pop
nop
sbb
sbb
inc
sar
gs
inc
jecxz
push
outsl
sarl
cmp
loope
xor
loop
out
ffree
dec
sti
mov
lea
ret
mov
in
sbbl
lock
cltd
jp
cmp
pop
jae
inc
mov
bound
jmp
cmp
not
movl
fwait
mov
and
xchg
jmp
xchg
out
ret
jne
rcll
push
andl
xor
pop
ds
xchg
xchg
in
mov
aaa
push
cli
mov
fstpt
mov
and
stos
clc
sarb
push
xchg
xchg
lcall
add
pop
push
cltd
pop
sub
jle
idivb
mov
nop
push
sbb
js
add
sbb
jno
rcl
fadds
movsl
and
ffree
cmpsl
and
push
lcall
data16
mov
mov
xor
push
jno
jne
mov
out
pop
mov
inc
outsl
add
or
mov
pop
xor
scas
jge
mov
sbb
push
xor
outsl
arpl
sti
mov
push
in
aad
insl
lods
xchg
hlt
fnstenv
push
scas
mov
push
leave
pushf
xor
rcll
jno
lds
imulb
out
jae
dec
cwtl
fisubrl
rcll
jmp
jb
ja
mov
pop
inc
cmp
sub
or
insl
and
xor
xchg
add
xor
push
imul
ljmp
add
fiadds
cmp
push
imul
xorb
enter
inc
insb
test
push
fidivl
movsb
pop
scas
ja
add
pop
movsl
scas
cltd
jns
pop
inc
push
adc
xor
push
mov
lahf
test
jg
ficoml
sub
or
push
inc
inc
add
adc
jb
in
dec
push
mov
sub
push
test
sbb
push
push
add
mov
lret
cmp
push
jl,pt
ja
mov
sahf
es
out
adc
scas
shll
lcall
out
sbb
dec
inc
dec
imul
pop
aaa
enter
jns
mov
jno
add
adc
push
add
pushf
or
lret
cmp
jbe
mov
xchg
add
or
lcall
mov
notb
push
cs
movl
jmp
rcr
lret
mov
pop
in
mov
loope
and
xchg
shlb
mov
inc
js
imull
xor
adc
leave
fldl
xor
xchg
pop
mov
out
fwait
push
cmp
mov
sbb
lret
mov
and
mov
shll
ret
adc
sbb
inc
push
mov
fdivl
das
and
cmpsb
push
cli
das
sub
iret
cmp
xor
adc
push
dec
imul
mov
adc
loopne
mov
in
cmp
sub
rcll
lods
push
push
stos
roll
lret
popf
sbb
mov
and
mov
outsb
test
rorl
arpl
adc
imul
mov
inc
dec
out
daa
out
mov
and
cmpsl
popl
dec
or
ja
xchg
push
jp
xchg
shll
mov
adc
jle
or
push
leave
pop
jl
aas
sub
ja
out
out
flds
xchg
fldt
cmp
jbe
add
mov
fldl2e
pushf
xchg
rclb
and
cld
fnstsw
cltd
nop
add
cwtl
rcll
mov
das
les
fsubr
je
mov
cmpsb
cltd
push
mov
sub
push
or
mov
sub
aas
xchg
fcomp
xchg
and
dec
in
xor
xor
mov
test
sub
adc
push
das
rorl
fsubl
and
arpl
dec
shll
mov
adc
mulb
xor
ficoml
inc
inc
pop
enter
sbb
cld
xchg
fs
jne
xchg
mov
call
sub
push
xchg
call
inc
jns
into
out
mov
mov
mov
mov
xor
sub
in
lret
pop
pop
jne
cltd
jno
les
jo
mov
and
xorb
adc
mov
sub
fcomps
sub
inc
stos
sarb
dec
adc
pop
push
jbe
sbb
into
cltd
imulb
insl
dec
pop
cmp
inc
dec
mov
push
xchg
fstpt
test
mov
in
or
xchg
dec
ficomps
or
cmp
push
pop
mov
movsb
dec
jmp
popf
bound
rcrb
xchg
mov
loop
cmc
aas
ret
dec
pop
cmp
inc
sbb
mov
adc
add
inc
sbb
xchg
outsl
in
scas
xchg
add
lahf
jp
int3
sbb
adc
sbb
mov
pusha
hlt
cmp
inc
fsubp
pop
sub
push
repnz
aaa
in
das
repz
jne
xor
ss
dec
push
aas
insb
pop
icebp
cmp
mov
cmpsl
xchg
mov
shll
mov
mov
push
push
rcrb
lahf
jns
dec
mov
fcmovb
mov
enter
xchg
mov
je
imul
mov
ds
jae
sub
stc
mov
mov
jg
loope
sub
sahf
fbld
cmp
popf
jbe
sti
sbb
push
mov
aas
inc
push
leave
rcll
dec
fcomi
xchg
idivb
clc
jp
ret
pop
dec
les
pop
pop
std
dec
push
push
sbb
shrb
cmp
scas
clc
fwait
jns
or
mov
imulb
loop
daa
dec
push
push
and
in
xchg
dec
sub
and
stos
mov
and
fsubrl
adc
rclb
call
mov
push
clc
cmp
push
cmp
ds
int3
push
push
loope
cs
cmc
stos
adc
mov
and
sbb
pop
pop
std
xchg
mov
ljmp
jbe
fdivl
mov
andb
lds
adc
test
ds
mov
pop
and
lods
adc
jmp
hlt
daa
mov
jl
insb
jmp
ds
or
inc
stos
dec
xchg
add
xor
test
xchg
jg
lea
xchg
dec
push
push
add
jbe
xchg
xor
int3
rcl
inc
jne
into
repz
pushf
sub
imul
loopne
cmp
adc
lret
in
outsl
fsubrl
adc
rcr
stc
ljmp
inc
add
push
mov
insl
loope
xor
sub
fidivrl
ds
clc
lahf
adc
call
mov
jae
scas
addr16
and
pop
sbb
aaa
push
call
hlt
push
pop
push
mov
int3
mov
idivl
or
xor
das
mov
std
loopne
adc
jg
cmp
test
cmp
in
mov
jge
icebp
jecxz
push
arpl
aad
fdivrl
fiadds
sbb
jmp
mov
iret
cmp
ret
push
aam
mov
fistpl
cwtl
pop
ss
test
xchg
inc
dec
loop
push
sti
aas
rorl
ficoms
pop
xor
dec
mov
fwait
test
push
jbe
jge
adc
je
cmpsb
dec
aam
add
cmpb
or
testl
lods
mov
and
aas
mov
movsl
and
loop
ss
mov
add
movsb
mov
addr16
push
adc
daa
xchg
jbe
jecxz
push
cld
lods
add
in
adc
adc
pop
cld
lss
daa
xchg
push
dec
fistl
inc
insb
inc
xchg
fcomip
je
mov
sbb
fcmovnb
stos
aaa
inc
xchg
jne
adc
inc
scas
or
cwtl
sub
push
lcall
testl
mov
cmc
rorb
jecxz
mov
dec
push
mov
addb
call
jb
arpl
push
ljmp
sub
xor
mov
xchg
cmp
sub
stos
adc
mov
xchg
jns
hlt
scas
test
mov
xchg
inc
mov
inc
push
daa
jne
je
mov
aas
scas
pop
rcrb
shl
insb
push
loop
in
pop
mov
jecxz
dec
stc
adc
push
lret
dec
xor
sahf
loop
mov
std
dec
insb
add
xor
mov
nop
insb
and
dec
xchg
xchg
fdiv
mov
dec
inc
mov
notl
xchg
cmp
jle
lods
xchg
es
fstpl
aas
popa
int3
cld
and
push
mov
gs
loopne
loop
sub
into
mov
mov
repnz
test
iret
ja
fs
out
sub
in
mov
shlb
mov
movsl
cmp
outsb
xor
ss
sti
mov
mov
ret
pop
loop
xchg
xchg
lcall
pop
sbb
gs
mov
xchg
fbstp
insb
scas
mov
inc
sub
fimull
popf
mov
loope
dec
or
call
push
lret
mov
ret
add
jmp
test
push
enter
loop,pt
fnstcw
push
xor
inc
mov
je
js
xlat
adc
outsb
push
imul
ss
dec
int3
loop
fwait
mov
ljmp
adcb
xchg
pop
inc
mov
clc
mov
mov
inc
xchg
push
xchg
xor
push
leave
sar
jb
rclb
adc
pop
lods
mov
repnz
in
out
dec
fidivrs
ljmp
push
js
mulb
sbb
js
cs
ja
in
cmp
popa
xor
out
jp
enter
loopne
mov
icebp
addr16
or
js
and
outsb
dec
fisubs
cmp
loopne
popf
adc
mov
test
and
mov
sub
sti
nop
mov
out
xchg
cwtl
mov
loop
movsl
jg
inc
jns
bound
xlat
push
lds
fbstp
test
push
xchg
mov
pop
mov
mov
and
popf
xchg
imul
outsl
mov
inc
dec
inc
test
lcall
pop
or
rorl
scas
fistpl
frstor
cmp
sbbl
js
sub
insb
push
std
dec
loop
cltd
fimuls
fdivs
stos
gs
out
push
xor
cmc
rep
lret
jne
loopne
mov
xchg
lods
cs
leave
insl
or
mov
jge
jnp
or
xor
lret
xor
sbb
daa
mov
cmp
fiaddl
push
pushf
mov
cmc
xor
ss
pop
fs
pop
call
ljmp
lahf
out
xor
fwait
add
and
mov
sub
push
jge
imul
xor
imul
push
inc
iret
test
cmp
lret
popa
stc
int3
call
daa
dec
loopne
iret
and
inc
sbb
stos
aam
dec
addr16
bnd
xor
aam
sbb
mov
repnz
pop
and
cmc
xchg
jmp
mov
cwtl
mov
dec
shlb
pop
cltd
mov
scas
pop
sbb
mov
iret
es
lods
and
shll
and
cmp
nop
xchg
inc
lcall
inc
xchg
lcall
and
jmp
mov
pop
jle
pop
sub
outsl
pop
and
mov
or
push
scas
sahf
xchg
and
popf
cmpsb
mov
pop
ljmp
test
pushl
or
xor
or
adc
fldt
push
xlat
sub
mov
add
xor
mov
daa
xor
aas
out
jecxz
fists
push
addr16
push
xchg
dec
mov
enter
cmp
call
adcb
xchg
in
rorb
cmp
adc
dec
mov
jo
pop
push
mov
sub
jns
jp
adcb
mov
data16
outsl
or
scas
stos
push
lahf
xlat
nop
mov
mov
out
adc
nop
out
add
ss
sbb
xchg
or
mov
aad
add
sub
in
push
or
mov
repnz
xor
adc
sub
dec
ret
jo
jg
push
sub
adc
loope
std
aas
dec
repz
dec
lea
inc
movl
movsb
pop
or
lret
sub
dec
cltd
ds
test
stos
pushf
xor
mov
outsb
cld
jge
inc
sbb
pop
push
push
add
add
aad
add
aam
add
add
sbb
add
in
add
mov
add
in
aad
add
add
dec
aad
add
aad
add
aad
add
aad
add
add
pushf
aad
add
add
add
add
pop
add
push
add
and
add
add
xor
add
insb
add
jl
add
sub
add
inc
add
push
add
add
add
test
add
rcl
add
dec
xlat
add
mov
add
add
fadds
add
xlat
add
js
add
scas
add
lock
add
cmp
add
mov
xlat
add
test
add
hlt
xlat
add
insb
fadds
add
add
push
fadds
add
xlat
add
dec
fadds
add
add
cmp
add
xlat
add
sbb
add
pop
fadds
add
add
fcom
add
ljmp
add
fadds
add
fadds
add
fadds
add
add
add
add
push
flds
add
flds
add
flds
add
add
cmp
add
and
add
add
add
add
inc
add
xchg
add
test
inc
add
lcall
xor
add
sub
add
add
inc
add
add
add
inc
add
xchg
add
push
add
push
xor
je
jge
mov
add
xor
xor
adc
mov
mov
stc
pushf
sub
lcall
push
jns
pop
xor
push
jne
inc
js
xor
arpl
push
push
push
xor
xor
dec
push
xor
dec
push
jno
push
push
pop
xor
imul
pop
inc
push
jb
outsb
push
inc
dec
jbe
js
jbe
data16
bound
push
imul
cmp
js
cmp
push
push
arpl
pop
dec
jne
ss
push
jb
je
jae
imul
xor
gs
inc
jns
xor
aaa
xor
jae
inc
xor
outsb
cmp
inc
pop
imul
ss
bound
cmp
ja
inc
fs
push
dec
je
outsl
arpl
jp
pop
xor
arpl
pop
ja
dec
jns
dec
dec
inc
outsl
push
inc
inc
imul
aaa
imul
imul
jns
pop
dec
xor
dec
inc
push
fs
insl
add
add
add
add
add
add
xor
add
pop
push
inc
addr16
jp
jbe
cmp
imul
push
cmp
jp
xor
push
jno
push
jb
inc
outsb
push
jns
jne
push
inc
push
jns
dec
jne
jae
outsb
js
jne
xor
xor
pop
dec
js
push
outsb
imul
push
push
imul
pop
cmp
aaa
inc
jae
xor
xor
cmp
inc
cmp
jp
jb
cmp
gs
popa
imul
jns
xor
xor
dec
jo
inc
xor
pop
dec
xor
xor
inc
arpl
dec
cmp
dec
insl
data16
ja
dec
cmp
fs
push
push
aaa
jp
outsb
push
pop
xor
push
js
pop
inc
imul
dec
dec
push
jns
ss
bound
popa
add
add
inc
inc
jp
xor
aaa
push
insl
push
inc
dec
bound
dec
dec
bound
xor
dec
pop
js
popa
pop
push
je
dec
push
pop
push
inc
dec
jne
js
add
add
insl
jo
addr16
dec
push
aaa
pop
push
insl
push
arpl
dec
push
xor
jno
outsl
bound
dec
xor
insb
insb
jo
xor
add
add
add
jo
jne
jns
cmp
aaa
add
insb
add
add
add
add
add
add
inc
add
dec
add
inc
add
je
add
add
add
add
addb
dec
push
dec
dec
push
dec
cmp
insl
xor
inc
push
cmp
outsb
aaa
js
arpl
jae
dec
inc
popa
je
cmp
addr16
dec
pop
outsl
push
pop
dec
push
cmp
je
insl
ja
pop
bound
je
imul
ja
push
push
js
outsl
dec
push
pop
jbe
jns
jae
dec
cmp
inc
inc
ss
xor
dec
dec
bound
dec
inc
push
outsb
xor
push
bound
cmp
dec
popa
imul
aaa
inc
jno
ss
pop
je
push
push
jae
inc
jb
inc
inc
aaa
dec
cmp
dec
push
imul
push
push
jb
add
add
push
insb
imul
bound
jbe
dec
jo
dec
push
dec
push
pop
push
push
dec
outsb
dec
push
ss
dec
pop
xor
insb
xor
jns
dec
push
push
xor
insb
dec
inc
pop
push
dec
inc
cmp
inc
inc
xor
push
inc
outsb
outsl
pop
inc
ss
push
jne
jae
push
push
inc
push
pop
data16
push
push
jns
outsl
dec
push
inc
push
dec
push
xor
jb
jp
push
jbe
jns
inc
dec
outsb
inc
inc
xor
arpl
push
push
dec
insb
push
push
jp
jbe
jno
dec
xor
jb
jne
dec
js
dec
cmp
push
push
cmp
jns
ss
insb
add
outsb
cmp
js
jae
dec
push
xor
addr16
xor
push
cmp
dec
cmp
push
pop
insl
imul
inc
push
xor
ss
dec
xor
dec
popa
outsl
outsb
ss
insl
imul
push
dec
inc
xor
dec
outsl
outsl
jbe
jns
arpl
dec
push
jne
bound
imul
jno
dec
ja
inc
push
xor
xor
insb
push
jo
push
xor
push
push
outsb
dec
outsl
push
xor
dec
push
push
push
add
add
or
mov
stc
xchg
fcompl
push
dec
subb
xchg
mov
mov
int
push
fistl
push
pop
xor
mov
es
test
hlt
xchg
xorl
adc
out
xchg
dec
mov
movsb
aam
adc
cmp
and
push
push
inc
mov
sub
pop
out
xor
xchg
add
cmp
jae
push
push
cmc
inc
repnz
push
mov
xchg
lea
pop
jb
orps
xor
cmp
shll
sbb
fsubs
add
push
jns
insb
mov
xor
cli
jb
push
arpl
push
fs
inc
push
mov
sub
jo
push
int
adc
sbbb
neg
enter
gs
popa
addr16
popa
mov
pop
shr
out
fdivr
jae
lret
stos
cmp
int3
enter
xor
sbb
mov
add
mov
adc
adc
cmc
add
mov
stc
sub
iret
mov
or
cmp
not
xor
inc
push
cli
mov
inc
loope
dec
xor
pop
sar
mov
xchg
je
daa
and
sub
std
xor
pop
aad
sbb
scas
loop
les
adc
add
adc
push
cmovo
mov
stos
jno
pop
mov
pop
sbb
ret
in
sete
aam
jo
sti
ja
inc
mov
test
mov
add
jno
add
mov
jbe
xchg
push
inc
scas
cmc
fcmovnb
test
sub
addb
push
xor
cmp
push
sbb
push
mov
xchg
add
xchg
inc
jge
adc
dec
cli
rcll
loopne
aaa
lret
pop
mov
inc
in
cmpsb
into
test
rcll
xchg
inc
pop
mov
test
icebp
add
jp
add
enter
pop
stc
push
imul
inc
cld
imulb
add
insb
jp
aam
xchg
jp
movl
xchg
xchg
mov
jecxz
jl
inc
mov
and
fiaddl
in
repz
aaa
or
daa
lret
mov
cmp
sub
pop
pop
lock
and
jge
push
xchg
sbb
sub
xchg
sbb
xchg
or
cmp
mov
xor
aam
dec
ret
jg
std
adc
mov
cmp
xchg
or
push
mov
xchg
les
jnp
jecxz
inc
push
out
mov
jbe
lock
dec
fnstsw
sbb
jg
or
push
in
pusha
fwait
dec
sbb
cmp
fsubrp
cmp
fists
mov
nop
mov
ja
cltd
pusha
gs
jge
pop
pushl
imul
xchg
fs
and
ljmp
sbb
sub
es
pop
js
leave
add
loop
lcall
outsb
xchg
jge
flds
pop
mov
outsl
scas
lods
inc
pop
les
jp
loopne
fsubs
dec
mov
and
xchg
jg
mov
mov
in
mov
stos
xchg
cmpsl
cmp
inc
xchg
and
ret
arpl
leave
test
mov
testb
mov
fcoms
test
sub
jns
fcompl
pop
sbb
sbb
addr16
popf
inc
in
push
dec
mov
dec
sarl
xor
sbb
cmp
aaa
shll
pop
or
daa
push
dec
xlat
aas
xor
lret
push
or
popf
dec
mov
jns
faddp
push
movsl
push
sar
cmp
sub
or
imul
cmp
mov
out
push
cwtl
lret
mov
mov
enter
mov
mov
add
mov
push
and
xchg
add
dec
jo
lcall
dec
mov
lock
lar
and
in
int
mov
fisubs
jg
push
out
repz
aad
or
inc
add
pushf
push
push
mov
aad
insl
outsl
rcl
mov
xchg
scas
pop
or
xchg
xor
xchg
mov
das
loop
push
rcrl
inc
lods
add
loope
cli
xchg
out
repz
fwait
out
lock
lcall
xor
insb
and
jge
out
mov
jo
cmp
sti
in
dec
adc
stos
pop
outsl
gs
push
loop
dec
push
test
push
inc
mov
inc
cld
inc
push
mov
mov
xchg
sarl
xchg
jae
sub
cmpsb
push
in
aaa
bound
inc
js
addr16
aam
ja
jo
xchg
cs
ss
daa
mov
push
aam
loopne
lahf
add
push
xor
into
pop
lcall
int
je
cmp
pop
mov
xchg
push
in
sbb
pop
mov
cmp
pop
fwait
dec
sbbl
pop
out
sub
out
jne
fwait
repz
mov
addr16
push
push
mov
mov
xchg
push
jno
sbb
mov
popa
adc
cmp
mov
les
pop
ja
adc
push
push
cltd
fwait
je
rcrl
jns
lea
rcll
cmp
xlat
std
xchg
push
out
insl
jg
jb
inc
pop
das
stc
loop
sub
sbb
push
jg
bound
sbb
daa
ja
ret
repz
or
cmp
dec
rcrb
rclb
add
jp
jle
xor
fmuls
int3
dec
cmp
add
fs
aas
mov
out
xchg
mov
jbe
js
pop
xchg
jns
or
adc
shll
cmp
into
mov
fidivrs
jne
and
fsubp
mov
in
lcall
shlb
push
jne
addr16
push
mov
inc
xchg
cmpsl
sti
jno
in
int3
push
stos
mov
dec
popf
sahf
mov
mov
xchg
mov
mov
cld
xchg
jp
mov
ret
xchg
outsl
dec
sbb
inc
enter
jmp
imul
and
lret
cmp
xchg
mov
inc
ja
mov
mov
xor
lea
clc
ljmp
mov
sbb
sti
xor
lcall
jmp
jo
stc
mov
inc
push
sub
loope
sub
aad
fildll
inc
shrl
push
stos
jo
push
scas
pop
mov
inc
in
inc
inc
scas
notl
push
aad
jl
out
jb
insl
push
add
inc
daa
sbb
mov
and
xor
mov
xchg
loopne
jecxz
loop
js
xchg
cmc
in
mov
xchg
push
fisttpl
lods
gs
pusha
sbb
or
add
out
aam
mov
adc
fwait
clc
pop
pop
add
xchg
cmpsl
cmpsl
jp
test
adc
les
out
pop
movsl
enter
dec
pop
inc
mov
add
dec
push
xchg
leave
jg
dec
dec
loopne
lcall
inc
add
pop
lahf
insb
enter
fwait
mov
cvtpi2ps
xor
das
rcrb
gs
stos
dec
fdiv
ja
mov
or
mov
mov
push
sub
inc
mov
pop
lahf
push
cltd
cld
loop
int3
ret
xchg
aaa
mov
add
ret
inc
add
jge
mov
add
xor
repz
cmp
icebp
pop
test
mov
xchg
testb
scas
push
aam
out
mov
push
testl
dec
test
adc
pop
mov
pop
mov
mov
cmpsl
jecxz
xchg
mov
fistpl
rcrl
xchg
pop
and
arpl
in
aas
test
fwait
mov
int
or
inc
xor
add
aas
adc
and
hlt
nop
aas
xchg
call
mov
fwait
sbb
or
sbb
gs
rcl
aas
sti
push
stos
dec
lods
insb
inc
cmp
inc
das
and
and
push
fs
xlat
add
xchg
lods
jmp
mov
inc
es
cmp
fucomip
xchg
aas
push
aam
xchg
push
js
shr
or
mov
sahf
jae
into
xchg
mov
cmpsb
imulb
dec
pop
pusha
sti
aas
loopne
xor
mov
push
dec
dec
add
fdivl
pop
ds
cmp
lret
xlat
nop
xchg
cwtl
fmuls
fldenv
ljmp
inc
sahf
sbb
sahf
jp
movsb
jnp
pop
dec
.byte
mov
loopne
mov
shl
inc
and
into
pop
jmp
lret
nop
inc
jb
dec
int3
popf
imul
jle
fnsave
push
or
stos
imul
ds
notl
xchg
frstor
push
sbb
stos
pop
and
sbb
js
aaa
clc
shll
add
jge
inc
adc
out
sbb
scas
mov
jle
iret
aas
mov
cmp
rclb
lret
or
sqrtps
pop
jo
xchg
sbb
jo
inc
pop
out
shrb
push
clc
cmpb
cmp
or
xchg
ds
loopne
sahf
push
jbe
push
push
test
sub
enter
out
stos
sub
aam
test
fwait
or
nop
lret
lock
xchg
adc
test
jmp
pop
aas
test
outsb
cld
sahf
mov
sbb
orl
lods
lahf
shrl
jae
dec
inc
or
pop
or
xchg
adc
adc
iret
jmp
adc
and
loop
push
sbb
je
mov
cmp
mov
bound
adcl
xor
stos
ds
lret
fimuls
and
pop
shlb
mov
test
push
mul
push
rclb
pop
push
es
mov
sti
xchg
cwtl
jg
pop
shlb
jnp
jnp
push
sbb
cmp
mov
jbe
or
adc
xchg
xchg
fcom
loop
sbb
pop
xchg
movsb
push
cmp
push
mov
xchg
cwtl
jg
ret
mov
cmp
mov
mov
stc
addr16
into
xchg
adc
mov
stos
sub
mov
push
push
addr16
bswap
mov
push
movsl
pop
cmp
div
inc
stc
cmpsl
xchg
or
mov
sarb
sbb
fldenv
adc
lret
lahf
jb
jg
mov
push
sub
sahf
repnz
push
mov
cmp
mov
pop
xchg
outsl
sbb
push
sub
jmp
leave
xorb
ret
push
mov
pop
cmpsl
sbb
lcall
ret
push
or
popa
fildl
gs
and
std
push
adc
jle
lods
aas
ja
fldcw
fldenv
lret
test
or
jp,pt
jnp
inc
cmp
orb
cmp
ds
mov
scas
add
repz
lahf
jl
push
cmp
mov
pusha
xlat
and
sbb
or
sbb
shll
movsb
add
push
aad
jb
mov
push
daa
xchg
adc
push
ret
sbb
or
dec
addr16
rclb
adc
in
and
inc
add
xchg
fistl
mov
ljmp
int
xor
arpl
nop
push
icebp
cmp
pop
adc
jp
sbb
push
lcall
movb
pop
enter
dec
imul
hlt
xchg
adc
cmp
push
rorl
test
ret
stc
jecxz
js
inc
sub
call
inc
or
aad
addb
sbb
lea
jns
cmp
int3
les
mov
xchg
dec
adc
mov
ret
imul
imul
jns
push
jecxz
mov
pop
ret
pop
shlb
xchg
push
orb
subb
lods
aas
pop
inc
xchg
and
and
inc
scas
xor
sbb
dec
popa
div
in
sbb
cmp
mov
pop
std
xchg
jp
add
xchg
ljmp
xor
popa
repnz
ret
dec
lahf
into
leave
adc
nop
xchg
cs
pop
rclb
cmpb
xor
cmc
jmp
stc
push
mov
pop
sub
cmp
cld
jnp
sti
cltd
xchg
cli
lret
pop
gs
fnstcw
les
lahf
cmp
or
push
mov
jne
and
scas
pushf
icebp
daa
cmp
mov
fcmovne
push
adc
les
add
mov
outsb
add
call
sbb
inc
or
mov
pop
pop
test
insl
lahf
and
or
mov
movsb
sub
mov
add
enter
inc
push
outsb
es
pop
xchg
sti
aam
cltd
push
inc
adc
pop
arpl
pop
shl
xchg
movsl
out
es
into
sti
xor
inc
gs
rcrl
inc
mov
ffreep
into
mov
lretw
outsl
aam
jb
push
and
fwait
pop
mov
sbb
or
inc
push
xor
cs
insb
add
add
inc
push
jo
jb
add
add
push
gs
imul
popa
arpl
outsb
je
add
add
je
jb
arpl
arpl
add
je
imul
add
fs
outsb
jne
add
add
jae
dec
gs
popa
addr16
add
add
inc
jb
ja
arpl
add
add
push
jb
arpl
outsl
jo
jo
outsb
jne
add
add
je
outsl
jo
imul
add
push
gs
outsl
arpl
add
add
inc
outsb
jne
inc
push
imul
add
add
je
gs
popa
addr16
add
add
jb
imul
popa
jae
inc
add
add
push
outsb
jb
imul
popa
jae
push
add
add
dec
jae
push
popa
imul
je
jo
gs
bound
arpl
add
push
outsb
imul
add
add
jae
popa
addr16
outsl
js
add
push
inc
push
push
cs
insb
add
add
pop
pop
jo
pop
arpl
insl
outsl
fs
add
pop
gs
outsb
outsl
add
add
pop
gs
je
add
gs
je
add
add
js
push
push
js
gs
imul
pop
pop
jae
je
popa
jo
pop
je
jo
add
add
data16
jne
push
imul
add
add
addr16
popa
imul
add
jb
popa
insb
insb
outsl
arpl
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
inc
gs
push
dec
outsb
outsw
add
add
inc
gs
popa
insb
jne
add
add
jb
insl
jo
add
add
inc
gs
outsl
fs
gs
imul
add
add
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
add
push
gs
imul
gs
add
add
je
imul
popa
je
add
add
dec
outsl
arpl
inc
imul
outsl
inc
imul
add
dec
outsl
popa
fs
imul
add
add
inc
gs
je
dec
popa
outsb
fs
add
add
push
outsb
insb
outsl
arpl
imul
jb
gs
gs
jne
arpl
add
add
je
jns
je
insl
inc
imul
jns
add
add
imul
outsl
jne
arpl
add
add
outsb
fs
insb
outsl
jae
add
add
push
jb
arpl
jae
jb
gs
je
jb
push
jb
jae
outsb
je
add
push
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
jb
jno
outsb
arpl
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
outsl
insl
jo
jb
inc
imul
add
dec
jne
inc
imul
insb
outsl
bound
inc
imul
push
add
add
je
je
jb
jne
dec
outsb
outsw
inc
add
add
gs
je
inc
imul
jne
jo
je
bound
push
je
imul
add
outsl
bound
inc
jb
add
add
inc
insb
outsl
bound
push
imul
inc
gs
push
popa
je
dec
popa
insl
gs
add
add
jb
insl
jo
push
add
add
popa
jo
insb
insb
outsl
arpl
add
inc
gs
jne
insb
push
popa
je
dec
popa
insl
gs
add
add
insb
jae
jb
insl
jo
inc
add
push
inc
push
dec
xor
cs
insb
add
add
push
gs
outsb
jne
dec
gs
js
add
add
addr16
gs
gs
dec
gs
add
add
addr16
jne
jb
dec
outsb
outsw
dec
gs
add
add
push
gs
outsb
jne
push
popa
insb
jne
inc
add
dec
xor
cs
insb
add
add
gs
je
inc
dec
inc
push
arpl
outsb
add
add
inc
jb
popa
je
push
outsb
add
add
je
bound
arpl
add
add
gs
inc
inc
add
add
inc
gs
gs
inc
js
outsb
je
outsl
imul
add
inc
jb
popa
je
push
arpl
outsb
add
add
je
imul
je
js
add
flds
add
aam
add
add
xor
add
cli
aad
add
add
add
xchg
add
test
add
loopne
add
movsb
fadds
add
mov
add
neg
add
cmp
add
or
add
repnz
add
add
sbb
add
in
add
mov
add
in
aad
add
add
dec
aad
add
aad
add
aad
add
aad
add
add
pushf
aad
add
add
add
add
pop
add
push
add
and
add
add
xor
add
insb
add
jl
add
sub
add
inc
add
push
add
add
add
test
add
rcl
add
dec
xlat
add
mov
add
add
fadds
add
xlat
add
js
add
scas
add
lock
add
cmp
add
mov
xlat
add
test
add
hlt
xlat
add
insb
fadds
add
add
push
fadds
add
xlat
add
dec
fadds
add
add
cmp
add
xlat
add
sbb
add
pop
fadds
add
add
fcom
add
ljmp
add
fadds
add
fadds
add
fadds
add
add
add
add
push
flds
add
flds
add
flds
add
add
cmp
add
and
add
add
add
test
ss
lock
xchg
shll
or
jmp
sub
rcrb
xchg
das
mov
cmp
popf
mov
popa
mov
jne
xor
pop
incl
cmpl
xchg
ja
push
andl
out
dec
cmp
cmp
xchg
xchg
or
adc
mov
and
fwait
incl
aaa
popf
rcrb
outsb
movl
fdiv
popf
std
cmp
xchg
push
xchg
in
jg
mov
add
cmp
ds
sbb
sub
test
cmp
call
push
sbb
fnsave
insl
and
cmp
mov
push
jae
or
aas
jb
icebp
pop
test
shrb
xlat
pushf
pop
lock
or
and
jge
sbb
gs
mov
fsubl
sbb
xchg
sbb
jno
adc
sub
sub
mov
aaa
into
out
xchg
loope
mov
fwait
aas
cmpsb
xchg
pop
sahf
jns
xlat
or
dec
xchg
nop
loop
ds
push
lret
movsl
arpl
pop
repz
inc
push
adc
in
not
hlt
add
ljmp
xchg
xchg
pop
cli
mov
pop
lods
push
int
pop
inc
push
xchg
dec
fimuls
jecxz
aas
jb
test
cmp
arpl
inc
xchg
in
add
pusha
jns
jp
ror
enter
pop
fs
stos
nop
leave
outsl
pop
negl
leave
popa
jecxz
push
lea
push
in
aas
push
and
enter
cmp
jae
ret
les
sub
data16
aas
mov
dec
ds
mov
push
pop
jbe
lahf
insw
cmp
pop
out
lret
ficomps
clc
dec
stos
push
jp
orps
ljmp
xchg
gs
cmp
and
subl
cmp
or
fs
popa
shll
lea
xchg
outsb
jl
stc
subb
inc
jg
and
test
mov
cmc
mov
hlt
ja
push
sub
out
pop
or
cmp
lahf
and
cmp
mov
xchg
ficomps
arpl
or
mov
cwtl
aam
test
xchg
xor
popf
repnz
adc
outsl
imul
inc
testl
xchg
push
and
push
inc
or
inc
fmulp
leave
push
sub
jnp
push
sbb
cli
xchg
mov
imul
push
jne
imul
ja
push
test
push
pop
cld
aas
push
add
pop
popa
rcll
xchg
xchg
cwtl
adc
sbb
scas
popf
in
add
push
mov
and
cmp
call
popf
cmpsl
mov
mov
sub
lea
popf
lock
stos
adc
loop
mov
in
aaa
jae
jl
inc
xchg
popa
inc
xchg
loope
incl
sahf
mov
stc
sbb
xchg
sbb
add
xchg
mov
orl
mov
or
fmuls
loop
pop
lret
incl
cmp
shlb
pop
push
hlt
repnz
out
mov
mov
jbe
popf
xlat
movsl
inc
add
adc
xchg
cmp
push
das
mov
sbb
or
aas
cwtl
push
mov
fildll
inc
inc
xor
jae
daa
movsl
cmp
mov
addr16
lret
push
pop
push
cmp
stos
jmp
mov
inc
testl
fists
push
pop
in
aas
mov
jno
jge
push
jge
es
fwait
xlat
test
xor
pop
mov
xchg
rorl
loop
inc
or
dec
cmovo
test
mov
inc
xchg
std
xor
roll
scas
and
es
xchg
mov
pop
rolb
popf
sbb
sbb
xor
inc
lret
decb
add
sub
fmul
pop
xor
cmpsb
ret
pop
inc
cmp
xchg
clc
in
mov
inc
add
test
mov
ret
dec
mov
jnp
xor
mov
xchg
movsl
test
jno
mov
hlt
loop
movsb
sbb
inc
cmp
jne
lea
popa
aad
js
es
adc
or
mov
cltd
pop
lods
fdivrs
nop
sbb
and
inc
mov
pop
test
or
sti
fisttps
mov
xchg
adc
mov
and
and
and
adcb
es
rcrb
and
je
out
dec
fists
fwait
pop
sbb
and
xlat
je
aad
shrb
lret
and
aad
lret
inc
test
xor
cmp
inc
jp
rolb
mov
cmp
pop
inc
shll
cmp
outsb
push
leave
add
aas
lds
sbb
mov
setbe
mov
push
mov
test
pop
push
mov
fnstenv
notl
fnstcw
test
push
sub
and
and
in
mov
arpl
cmpsl
xchg
xchg
sub
xchg
pop
imul
and
xor
mov
lock
inc
rcll
xchg
push
leave
sti
dec
or
adc
hlt
ss
sbb
cs
test
ror
aas
adc
lahf
fists
test
mov
loope
aas
rcl
dec
and
dec
pop
push
scas
in
rorl
rcl
imul
into
or
inc
addr16
scas
aam
jl
pop
roll
sub
inc
push
ja
sub
cs
mov
popa
mov
clc
repz
or
or
and
shrl
ljmp
cmp
add
push
dec
adc
mov
mov
jg
out
cmp
cmp
test
xchg
cwtl
add
push
insl
fcmovb
inc
pop
fucomp
add
inc
dec
pop
int3
into
pop
xchg
pop
xor
sbb
or
into
pop
mov
mov
ss
push
xchg
dec
mov
aaa
push
sbb
pop
mov
xchg
xchg
or
inc
inc
in
push
jnp
inc
mov
lods
push
orb
fwait
in
pop
or
clc
js
cmp
sub
or
mov
push
jmp
out
fdecstp
insl
xor
xchg
jg
adc
rolb
or
mov
xor
push
ss
push
js
push
sub
aaa
and
gs
pop
or
adc
movsb
inc
jb
mov
popf
cmp
gs
sbb
ret
out
arpl
mov
in
or
pusha
add
xchg
or
out
pop
and
popa
push
adc
ret
pop
inc
adc
subb
xchg
mov
inc
sub
into
or
rcrb
inc
push
mov
adc
out
repz
rorl
xchg
dec
mov
stos
aas
mov
stos
addr16
fidivrl
push
push
fsubl
pop
cmp
mov
push
rcrb
mov
push
pushf
loop
push
aas
mov
adc
pop
nop
adcl
test
test
sbb
push
daa
into
icebp
test
aas
lret
aaa
decl
shr
dec
push
testl
add
sub
rcll
push
pop
mov
notb
xor
jbe
mov
mov
fs
clc
and
dec
push
imul
in
jge
mov
mov
aas
enter
lods
stos
mov
insb
mov
adc
dec
push
fsub
dec
lret
cmp
icebp
sbb
fwait
enter
lods
jge
das
shr
icebp
inc
negb
sahf
les
mov
mov
mov
int
mov
subb
mov
mov
xchg
cmpsl
and
mov
sub
insb
xor
ficomps
jbe
xor
fcoms
popa
mov
daa
aad
pop
or
push
ss
mov
push
push
fisttps
test
xchg
scas
fs
lret
cmp
mov
mov
rcrb
clc
dec
outsb
iret
rorb
cmp
in
fdivrs
movsb
push
leave
xor
push
mov
or
and
mov
add
dec
sbb
sbb
xor
add
xchg
out
add
das
mov
mov
push
xchg
inc
pop
pop
cmp
xor
cmpsb
dec
push
scas
or
decb
fidivl
xorb
rorl
ja
jg
mov
ljmp
rcrb
movsl
aas
shr
into
xchg
dec
xor
aas
test
or
xor
test
aas
push
dec
repz
sahf
jecxz
sti
xor
mov
push
std
loope
push
lea
std
mov
ret
xchg
adc
je
push
push
jp
push
or
inc
xor
arpl
sbb
sub
mov
adc
in
stos
pop
xorl
into
mov
xchg
xor
sub
pop
sub
jecxz
xchg
aam
push
pusha
jp
jnp
inc
dec
adc
sbb
jae
jp
sbb
loopne
repnz
std
inc
adc
loope
sub
jl
and
sti
aas
loop
icebp
sub
scas
cltd
fwait
rclb
jnp
or
daa
cld
sub
jb
out
imul
daa
inc
out
scas
sahf
rcll
int3
icebp
inc
or
xor
adc
jl
arpl
iret
add
jecxz
ljmp
out
xchg
and
sbb
lock
sub
rorb
push
test
and
mov
dec
leave
imul
xchg
push
cmpsb
pop
fildl
xchg
cli
sbb
lds
sub
dec
cmp
push
sbbb
dec
hlt
scas
pop
adc
push
inc
sub
pop
mov
loope
or
inc
ljmp
cwtl
enter
pop
js
xchg
push
lock
xchg
sarl
je
enter
inc
dec
jo
lret
xchg
inc
mov
inc
mov
mulb
fstpt
sbb
cmp
popa
jecxz
jne
faddl
outsl
xchg
mov
xchg
sbb
aas
popf
inc
xor
jne
lds
sbb
xchg
jmp
lods
or
sbb
pop
jecxz
pusha
leave
outsb
fdivl
and
cld
push
aas
xchg
pop
mov
cmp
xlat
adc
cmp
mov
das
adc
jmp
mov
movb
lret
hlt
inc
cmp
lret
ja
mov
mov
into
mov
push
mov
js
dec
add
sbb
arpl
jbe
scas
outsl
aam
mov
imul
xor
les
hlt
ss
insl
popl
pop
jb
mov
popf
lods
xlat
sbb
lret
push
inc
mov
jbe
lret
cmp
pop
out
jmp
cwtl
sahf
aam
pop
pop
ljmp
sub
lods
cmp
cmp
pushf
aas
sub
adc
push
xchg
pop
in
push
fcoms
enter
xchg
orl
and
xchg
add
xor
add
add
out
mov
aam
cmp
mov
mov
xor
dec
dec
sbb
enter
and
cmpb
sub
push
pop
jge
or
sub
dec
psrld
xchg
xor
bound
xchg
lahf
lahf
pushl
or
dec
sahf
lds
xor
inc
into
pop
test
enter
inc
repz
dec
out
xchg
xchg
push
std
push
outsb
inc
insb
jp
cmp
mov
or
add
sahf
add
push
out
mov
cmp
add
mov
push
mov
push
incb
lds
xor
xchg
adc
lcall
scas
jl
pop
mov
je
pop
lds
pop
imul
push
movsl
hlt
aad
push
aaa
out
and
enter
imul
mov
cmpsb
out
fwait
mov
int3
jbe
les
out
push
sbb
sbb
rcll
inc
rorb
and
pushf
ds
jno
fwait
insl
std
or
push
pop
push
aad
fildll
ror
je
dec
dec
mulb
push
lret
cmp
sbb
subl
mov
hlt
sub
out
push
push
loopne
in
mov
pop
aad
orb
shll
and
pop
cwtl
push
fimuls
mov
inc
test
adc
jnp
ret
and
push
fcmovne
gs
hlt
mov
mov
xor
xchg
mov
push
lds
jg
push
push
imul
mov
dec
mov
sub
add
aad
sbb
shlb
inc
rclb
hlt
icebp
xchg
sub
testb
sahf
pusha
xchg
pop
fldl
scas
mov
aas
jns
mov
sbb
pop
push
popf
sbb
aas
and
aas
jmp
sbb
mov
sub
push
add
and
sub
jbe
pop
outsb
shl
sbb
inc
mov
negb
cld
cmp
clc
out
insb
jnp
and
mov
dec
lods
xchg
pop
mov
pop
or
push
dec
cmp
jp
mov
test
xchg
xchg
mov
add
pop
test
mov
je
mov
jo
fcoms
push
dec
jmp
push
movb
ret
mov
xchg
xorl
push
inc
ret
outsb
cmp
inc
jg
jbe
mov
adc
xchg
outsl
shl
enter
test
lret
sarl
mov
sub
xchg
and
lods
sbb
jno
adc
fcoms
je
xsaves
outsb
mov
idiv
mov
mov
push
cli
sbb
mov
test
jne
cmp
lea
pop
push
out
arpl
xchg
es
mov
mov
add
lret
lret
sub
and
pushf
int3
mov
lds
cld
sbb
ljmp
sbb
iret
mov
mov
cmpsb
mov
pop
popa
and
adc
dec
push
pop
int
jmp
and
rolb
inc
loop
jle
xor
notl
inc
dec
mov
js
bound
lods
je
je
adc
push
jno
in
rcll
call
fs
push
add
or
ficoms
cmpsb
daa
push
xchg
lock
dec
inc
inc
movsl
inc
cmp
fstpt
ret
ja
in
jmp
mov
aas
sbb
pop
iret
imul
push
mov
xchg
jbe
repnz
jmp
sub
and
lcall
insl
xchg
sbb
mov
xchg
push
xchg
cmp
jo
mov
push
mov
mov
rcll
insl
mov
ret
jp
adc
sti
in
cmp
repz
mov
fwait
cltd
aas
cmp
mov
call
xchg
sarb
add
mov
xor
or
jnp
push
mov
aam
mov
lds
sub
sbb
mov
xor
filds
sub
lods
fmulp
cwtl
push
vorps
negl
and
lret
and
push
loope
or
xchg
xchg
dec
or
fsubs
vcvtpd2psx
jne
mov
scas
lock
cld
aam
mov
pop
xor
xor
sub
ret
mov
prefetch
int3
and
std
xor
xor
cwtl
mov
mov
dec
add
jp
addr16
and
or
push
ret
das
in
sub
int3
adc
aas
ja
and
push
lea
das
in
jecxz
cld
stc
mov
lds
iret
pop
lock
or
adc
fwait
in
lret
loope
push
xchg
stos
inc
pop
mov
xlat
test
test
mov
ret
arpl
int
push
push
iret
xchg
mov
ljmp
call
or
or
dec
ss
insb
jmp
xchg
lock
cli
xchg
dec
cmp
pop
sarl
mov
mov
mov
movsb
aaa
out
cmp
cmp
ret
adc
xchg
mov
xor
insl
jbe
jecxz
sbb
push
fwait
loopne
dec
pop
mov
imul
ss
out
jb
sbb
jmp
mov
pop
inc
sahf
mov
or
test
pop
stos
mov
sbbl
stos
dec
xor
add
sbb
cmp
jge
pop
mov
pop
mov
xor
aad
iret
add
clc
stc
push
adc
in
lea
in
pop
divps
inc
and
sbb
in
push
stos
push
adc
stos
jnp
cmp
and
dec
mov
cs
enter
or
mov
xor
popa
pop
out
pushf
and
mov
fistps
xchg
jne
xchg
push
jl
das
pop
pop
pop
leave
pop
pop
xor
xchg
jle
dec
xchg
push
lret
mov
add
mov
pop
shl
pop
aaa
sub
mov
lock
xchg
cmp
mov
pop
les
adc
pop
lcall
mov
dec
xlat
adc
subl
jle
in
xchg
mov
inc
test
aas
orb
jne
roll
inc
push
mov
inc
negb
push
xor
push
sub
int3
mov
movsl
adc
test
xchg
cmp
mov
xchg
add
cmp
je
pop
ja
or
imul
daa
fnsave
aad
sbb
aas
and
hlt
mov
scas
mov
popa
pop
cmpsb
xor
sbb
cld
push
mov
aad
test
faddl
adc
jg
iret
push
mov
adc
outsl
loopne
add
fimull
out
push
and
jne
add
pop
cmpsb
rcrb
test
sub
push
cmp
enter
jecxz
xlat
inc
sti
cmp
movsb
scas
dec
jmp
pop
dec
adc
pusha
pop
add
inc
xchg
xchg
mov
pop
cmpsb
adc
leave
aas
sub
pop
jae
push
xor
mov
lahf
mov
sub
xchg
mov
leave
jge
push
repz
loop
mov
xor
clc
jo
mov
dec
test
lret
insl
scas
inc
mov
shlb
loopne
sbb
out
inc
ret
xor
sub
dec
cmpb
mov
sahf
adcb
cmp
jb
movsb
cli
cmc
add
or
pushf
push
and
out
dec
mov
adc
mov
rcrl
dec
sbb
stos
xchg
int
xor
jp
cmpb
push
in
and
adc
mov
aas
xorl
sarb
jne
xor
lods
pusha
cmp
mov
xchg
cmp
aad
rcrb
aad
pop
xchg
push
add
mov
inc
push
cmpsl
mov
cmp
mov
rorb
sbb
ds
lea
std
push
fwait
les
xor
mov
sbb
inc
and
out
fildl
sbb
cmp
cmpsl
xor
adc
stc
and
mov
out
xchg
movsl
frstpm(287
mov
repnz
cmp
outsl
adc
sbb
mov
imul
fwait
dec
fisubl
in
outsl
push
sub
das
and
jl
out
xchg
cmp
imul
adc
icebp
mov
andl
repnz
push
scas
xchg
jo
mov
ret
xor
jmp
inc
inc
test
adc
adc
les
xchg
mov
push
cli
iret
arpl
lods
mov
cmp
adc
push
pop
sub
mov
xchg
xlat
enter
sbb
aad
push
insl
xchg
push
inc
fmull
pop
adc
and
insl
pop
or
pop
movsb
sbb
test
lea
xchg
push
out
in
mov
sub
pop
inc
enter
sbb
js
sbb
icebp
aad
mov
cmp
push
dec
inc
and
sbb
pop
jbe
ja
lcall
das
dec
xchg
fisttps
sub
inc
out
push
rcr
xchg
sub
mov
lahf
subb
sub
adc
or
jne
mov
and
jns
and
push
pop
push
sbb
xor
mov
iret
sbb
adc
outsl
sbb
xor
out
lods
cmp
push
xchg
cmp
stc
enter
add
push
xchg
add
mov
cmp
push
popf
orl
pop
inc
fistps
dec
stos
test
cmp
popf
das
push
stos
push
fadd
xchg
xchg
cmp
pop
inc
movsb
loopne
jae
mov
push
loopne
aas
dec
test
rcrl
andb
and
cmp
sbb
mov
xor
ljmp
sti
bound
enter
dec
jb
add
aas
push
insl
or
mov
sbb
push
repz
lods
aas
push
lock
lea
push
lahf
push
mov
sub
jo
and
ret
mov
xlat
insl
sbb
cli
dec
lock
stos
xor
xchg
and
mov
lret
lcall
xchg
movsb
sbb
test
fs
lds
xchg
scas
leave
pop
rolb
into
outsl
and
cli
mov
xor
push
cmp
daa
mov
sub
xchg
ds
jnp
addr16
arpl
inc
push
fcoml
sub
jmp
xchg
push
add
sbb
insb
pop
test
mov
inc
in
xabort
shll
fildll
in
shll
xor
inc
int
mov
stc
push
lret
and
mov
xchg
ja
sbb
and
xchg
lret
or
push
daa
nop
cmp
and
ret
xchg
mov
cmp
shr
dec
aas
sbb
movsb
pop
pushf
and
lret
xchg
lods
fldl
inc
outsl
mov
loope
push
jl
add
enter
fsubl
in
xchg
fldt
je
test
adc
mov
dec
mov
mov
push
in
pop
fcmovb
rolb
test
outsl
xchg
or
fstps
push
inc
sbb
mov
scas
fnsave
xchg
push
cmp
ds
lds
xlat
mov
lret
fildll
aas
and
fnstcw
test
shll
in
in
adc
jo
push
dec
push
scas
jno
pop
mov
ljmp
mov
xchg
inc
cwtl
sub
sarb
add
lock
or
jp
push
xor
and
jns
imulb
xchg
int3
mov
or
popa
stos
loop
push
clc
jnp
sub
imul
sub
xchg
sub
test
mov
xchg
aas
push
mov
mov
mov
lods
dec
movl
mov
js
jbe
push
sarb
outsb
sbb
pop
cmp
inc
add
sub
xchg
jbe
jb
adc
mov
insl
out
fdivp
push
mov
adc
xor
xchg
sti
and
sti
cmp
pop
cmp
inc
xchg
inc
inc
les
fistps
dec
pop
dec
push
mov
pop
sub
fnsave
sti
jae
xchg
std
lods
push
add
jecxz
and
sti
adc
sub
dec
repz
cmc
add
inc
sub
lret
push
jnp
mov
and
bound
pop
xor
mov
push
lahf
stc
mov
aam
cltd
mov
inc
push
jecxz
frstor
cmp
rorb
push
inc
add
jecxz
test
push
cld
adc
pop
enter
aam
into
pusha
jnp
mov
push
repz
xor
fmulp
mov
pop
insb
dec
pop
setno
inc
daa
inc
xchg
mov
push
enter
repnz
xchg
fisubrs
js
add
jae
xchg
es
push
pushl
xor
add
pushf
leave
mov
in
cmp
aas
movsl
test
adc
mov
scas
scas
scas
aaa
pop
or
dec
ja
dec
mov
sub
sahf
add
and
adc
dec
std
adc
sbb
mov
push
pop
loop
hlt
cmp
cmc
je
bound
xchg
push
lret
leave
mov
inc
cmc
push
push
mov
mov
pusha
pop
adc
pushf
flds
mov
pusha
mov
or
adc
rorb
inc
push
in
mov
popf
loop
test
inc
in
add
imul
mov
push
jmp
mov
icebp
mov
mov
xor
jecxz
call
mov
and
lret
add
sbb
lret
adc
push
add
adc
xor
adc
ljmp
popf
mov
push
popl
mov
mov
in
shlb
xchg
stc
jmp
je
imul
mov
push
adc
or
outsl
loop
xor
xchg
pop
rol
aas
icebp
push
adc
and
and
enter
scas
imul
pop
adc
sub
fadds
lret
xchg
fcmovnbe
pop
xchg
roll
jp
mov
push
iret
push
out
mov
sar
push
lea
adc
aad
mov
add
cmp
inc
test
xchg
and
sub
xchg
mov
pop
repz
fsubrl
loope
push
mov
out
daa
jg
pusha
roll
sbb
xchg
xchg
addr16
xchg
sbb
in
inc
mov
jp
xchg
sub
add
cmp
pop
andb
enter
xor
mov
fldcw
xchg
xchg
lds
in
or
push
push
insb
xor
inc
and
sub
pop
sub
pop
fcomps
xchg
dec
stos
or
rsqrtps
repnz
inc
out
jp
add
shl
sti
xchg
test
lods
data16
rcrl
dec
inc
fs
aaa
scas
out
call
xor
pop
inc
xor
sbb
jb
lods
push
dec
push
dec
xor
fisttps
ja
es
cmp
adc
adc
xor
push
jns
mov
sub
mov
or
xchg
mov
fidivrs
jne,pn
and
push
xchg
or
mov
xchg
aas
mov
icebp
xor
adc
sbb
ret
xchg
inc
mov
jo
pop
mov
into
sahf
mov
push
imul
cmp
outsl
push
xor
notl
inc
out
jno
repnz
push
cltd
fsubrl
fwait
or
mov
clc
mov
into
xchg
dec
xchg
cltd
and
out
lds
xchg
xchg
jb
add
and
in
cmc
lea
push
lcall
mov
dec
inc
ds
sub
sbb
dec
scas
lods
and
leave
aas
push
movb
sbb
lods
shr
add
std
and
mov
or
xor
cwtl
jo
jbe
add
pop
xor
or
pop
stos
fidivrs
in
mov
lahf
xor
xchg
aam
fidivrl
out
js
icebp
enter
cmpsb
and
popa
sbb
movb
add
dec
push
add
imul
rorb
sbb
add
mov
jecxz
enter
test
xor
add
push
adc
std
pop
push
les
inc
int
ret
pop
ds
out
mov
inc
pushl
sbb
sbb
dec
mov
push
sti
xchg
stc
jns
xlat
lcall
sbb
inc
xchg
into
dec
and
repz
inc
cld
mov
sbb
push
mov
test
cwtl
repz
xchg
mov
sbb
repz
lods
or
notb
adc
lock
adc
mov
push
inc
jne
nop
push
xor
sbb
jle
xchg
mov
dec
sbb
push
aad
dec
in
out
ror
iret
rcr
insl
movb
xchg
rcrl
sti
push
scas
pop
out
inc
mov
dec
fnstcw
mov
pushl
iret
sbb
out
cli
int3
scas
dec
outsl
add
cltd
mov
mov
addr16
movsb
push
mov
push
repz
adc
es
lds
sub
int3
sub
or
decb
mov
test
jno
xchg
xor
jb
inc
aam
movsb
sub
mov
add
loop
bound
mov
cmp
test
add
xchg
repnz
js
cltd
aas
inc
fcmovu
aaa
clc
test
push
dec
sbb
xchg
xor
addl
mov
scas
int3
stos
std
jae
pop
mov
jl
add
sbb
or
js
mov
sbbb
jp
xchg
xor
mov
xor
pop
in
mov
mov
repnz
push
mov
clc
lods
lock
or
fbld
pop
in
mov
dec
fsubrp
pushf
inc
cmp
in
stc
aas
push
pop
add
sarb
push
or
out
pop
inc
or
into
int
push
aaa
loope
sbb
outsb
dec
push
pop
xchg
je
out
pushf
xor
mov
pop
loopne
insb
fisttps
and
aas
add
into
insl
inc
pushf
test
fiadds
cmp
cwtl
inc
and
adc
mov
cld
dec
xchg
inc
aam
jno
je
cmp
cmc
push
jp
cmp
cmp
movsl
aad
mov
popf
sar
int
lods
pop
and
xchg
pop
adc
inc
int3
lret
iret
push
movsl
pop
sub
inc
mov
js
mov
dec
push
mov
enter
adc
data16
call
repz
mov
lods
mov
fwait
daa
push
roll
push
lock
mov
fists
rcrl
dec
stos
push
mov
mov
hlt
add
outsb
fisubrs
imul
enter
sbb
jmp
xchg
out
jp
push
inc
mov
aad
dec
push
jmpw
sbbl
dec
divb
pop
sub
jmp
fidivl
mov
and
jecxz
inc
add
xor
int
leave
xor
push
loop
into
mov
gs
jo
test
adc
lcall
cltd
movsl
dec
ret
lods
popf
jle
inc
insl
jae
clc
mov
sub
or
ret
adc
lcall
mov
mulb
lods
jg
gs
or
sub
xchg
xchg
xor
test
loopne
fistpl
push
aas
inc
nop
scas
movsl
ja
in
aas
mov
sub
push
ret
jae
into
and
mov
dec
xor
mov
jmp
lret
leave
aas
cmpsl
or
sarb
cmp
xlat
xchg
lea
das
rorl
or
xchg
xchg
sarl
and
ficompl
or
mov
enter
mov
inc
sub
cs
xor
add
jp
rcll
or
push
fstpl
out
pop
das
pop
js
enter
jb
xor
dec
xor
je
pop
mov
insl
push
sbb
pushl
or
push
fiaddl
bound
jmp
test
cld
fisubs
clc
aas
lahf
ljmp
popa
xlat
andb
cmp
xchg
pop
in
dec
dec
adc
xchg
mov
mov
push
dec
xchg
cmpsl
push
xor
insb
adc
pop
scas
mov
lcall
sbb
gs
lahf
ja
les
popa
push
xor
inc
outsl
out
jo
ja
push
push
test
mov
cmp
mov
test
in
push
inc
sub
fcomi
call
fdivrp
les
adc
lcall
jle
sbb
push
aad
or
push
xor
ljmp
mov
mov
push
adc
cmp
inc
mov
add
mov
rclb
adc
push
sub
cmpsl
jl
aas
ljmp
xor
loop
xchg
push
push
inc
mov
push
mov
pop
popa
imul
sahf
clc
data16
jg
xchg
jmp
push
fsubp
mov
outsl
mov
aas
push
sbb
daa
adc
dec
jg
push
and
imul
add
and
pusha
or
enter
push
pop
cmp
inc
mov
repnz
push
pop
test
rclb
adcl
pop
sbb
sub
xchg
aaa
sub
xchg
lahf
xchg
push
inc
pop
clc
jo
pop
test
sub
adc
push
loop
mov
iret
adc
sub
or
sub
in
aas
push
and
mov
pop
fucomip
sti
mov
sbb
lods
xchg
sbb
pop
mov
push
jbe
pop
push
dec
movsl
adcb
cs
adc
aas
and
subl
adc
mov
jmp
insl
rolb
push
xchg
fdivs
mov
divb
dec
inc
jecxz
jle
or
dec
xor
add
inc
imulb
in
xchg
popa
and
jmp
ret
adc
pushf
lea
push
pop
xor
fistl
enter
mov
mov
sbb
cwtl
mov
jno
jle
mov
or
sbb
movsb
fstl
sahf
mov
icebp
pop
mov
xchg
jns
jl
xchg
js
ljmp
push
jl
cmpps
dec
cmp
decl
je
or
cmp
jecxz
dec
add
ret
cltd
ja
xchg
xor
jge
aad
outsl
cmc
add
pop
fcmovbe
mov
push
mov
test
adc
fs
push
out
cltd
sub
out
aas
outsb
cmp
xchg
outsb
sbb
mov
or
aas
wbinvd
pop
adc
adc
stos
mov
les
dec
cmp
rcr
xor
cmpsb
movb
push
pushf
sbb
enter
scas
in
and
insl
adc
xchg
jne
loopne
sbb
ret
cmc
aas
cli
cmpsb
cmp
in
je
pusha
and
dec
jmp
xor
xor
push
aad
sbb
pop
push
lods
or
mov
push
in
cmp
mov
call
fsubl
arpl
dec
inc
hlt
xor
ficoml
and
or
outsl
call
mov
addl
lea
dec
xchg
and
inc
js
sete
dec
jns
aas
inc
mov
jecxz
push
ficompl
adc
mov
cs
mov
jns
mull
push
inc
loopne
pusha
xchg
std
jle
ss
push
loop
enter
cltd
inc
mov
out
xchg
inc
jne
movsb
ficoml
push
faddl
push
push
push
mov
push
rclb
xchg
les
push
std
testb
mov
mov
jno
jae
xchg
sub
xor
mov
cmpsl
dec
xlat
inc
xchg
or
outsb
out
rcrb
aas
xor
fldl
clc
pop
push
cmp
cld
lahf
pop
sbb
mov
je
sbb
xchg
jno
mov
repnz
shll
inc
sar
imul
sbb
les
push
cwtl
insb
mov
xchg
mov
in
ret
clc
lds
sub
xchg
pop
mov
gs
or
inc
icebp
daa
add
adc
outsl
xor
aas
orb
inc
push
xchg
fnsave
rcl
iret
push
lret
decl
repz
pop
je
sub
cmp
pushw
adc
pop
sub
dec
jnp
dec
in
dec
mov
aas
imul
xchg
bound
add
xchg
or
ds
xchg
std
sub
outsl
pop
fstpl
or
test
jmp
cmpsb
test
xorb
test
mov
popf
and
movl
aam
adc
pop
sahf
xchg
mov
jns
xchg
jae
ds
or
pushf
data16
pusha
test
xchg
insb
pop
mov
fnstsw
in
push
inc
sbb
mov
in
fsubp
std
cmp
cwtl
jo
xchg
push
push
adc
loopne
enter
stos
push
add
xchg
add
enter
pop
outsb
cmpsl
dec
push
xor
add
adc
rol
sub
push
xor
xor
push
mov
mov
lret
mov
xor
xchg
mov
fiaddl
adc
test
xor
jbe
div
cmc
mov
je
mov
sbb
lahf
dec
jno
pop
cmp
mov
add
dec
sub
ret
faddl
and
push
mov
push
mov
mov
movsl
jp
je
cmpsl
data16
push
mov
mov
xor
mov
enter
mov
dec
pop
dec
cmp
lret
insb
divb
mov
push
scas
scas
xchg
sbb
inc
push
jmp
rcrl
inc
ja
ficomps
mov
fdivrs
fisubl
push
dec
leave
mov
scas
pop
je
mov
sub
jecxz
out
cmpsl
or
add
add
test
mov
xchg
aam
rorb
or
adcl
xchg
sbb
sbb
test
adc
push
push
call
adc
pusha
inc
imull
xchg
shr
clc
sub
mov
test
iret
inc
cmp
add
and
rclb
jbe
sbbl
cmpsl
fcmovb
xchg
icebp
fstp
cltd
add
or
dec
cmpsb
mov
xchg
jno
aaa
jg
jp
pop
sub
push
mov
mov
cs
jl
inc
enter
mov
fiaddl
lock
add
out
pop
xor
pop
es
mov
inc
xchg
sbb
lods
out
sub
pop
or
dec
outsl
js
test
fs
psubsb
ss
stc
rclb
addr16
cmp
jbe
sub
jg
cmp
test
jno
mov
pop
addr16
or
cmpsb
movsl
subb
jno
enter
rolb
jb
jg
push
xor
cs
in
mov
xor
movsb
or
mov
ds
mov
mov
data16
and
cltd
mov
xchg
dec
or
xchg
ffreep
lods
push
shrb
and
cmp
sbb
dec
push
mov
mov
shlb
es
es
mov
push
ljmp
loopne
fldcw
add
mov
fwait
mov
in
or
cmp
nop
movsl
movsl
aaa
add
inc
cmc
jb
xchg
test
fwait
leave
jmp
inc
sub
jbe
xchg
or
adc
or
outsb
scas
push
pop
add
pop
and
cmp
loope
nop
nop
dec
cmpsb
pop
sub
aad
pop
xlat
cmp
je
dec
inc
pop
jp
pop
popa
mov
mull
sbb
sub
pop
in
aas
sbb
clc
cli
sbb
imul
repz
and
movsl
loopne
xchg
mov
cmp
jno
cmp
xor
xor
mov
xchg
popa
mov
loope
sbb
scas
repnz
jno
push
mov
sub
xchg
aam
add
mov
aaa
in
fnstenv
mov
arpl
mov
pop
xchg
mov
or
dec
or
inc
jp
and
push
pusha
push
jg
enter
ss
cli
arpl
adc
test
jo
dec
and
and
mov
push
imul
pop
push
repnz
sub
jl
xor
scas
mov
pop
mov
mov
xchg
sarb
cmp
adc
cmc
ds
push
movsb
mov
add
inc
mov
bound
ja
fwait
out
jl
push
pushf
fsubs
out
add
inc
cmpsl
aaa
subl
rol
adc
xchg
imul
adc
ds
mov
xlat
movsb
lds
push
mov
adc
cmp
decb
ss
repz
in
sbb
pop
xchg
andb
mov
fsubl
and
lsl
sub
testb
dec
pop
int3
jae
lods
jae
out
pusha
enter
xchg
clc
cmp
stc
nop
or
divl
mov
enter
add
divl
xchg
pop
sub
int
xor
stos
mov
xor
call
in
in
fnstcw
dec
bound
pop
jno
int3
fists
leave
enter
rcrb
jp
aaa
mov
movsb
pop
cmc
xchg
sbb
in
popl
xchg
outsb
adc
mov
shrb
mull
repnz
imul
jo
add
xchg
ljmp
mov
cli
jp
inc
insb
inc
inc
dec
loop
cmp
sub
stc
test
xchg
dec
or
pop
ss
push
je
sub
and
jmp
movsb
ret
insl
rclb
movsl
sarb
xchg
cmp
bound
mov
adc
and
sub
mov
in
fstl
inc
out
rclb
mov
xchg
xor
xor
arpl
sub
push
lret
jg
ficoms
jle
dec
push
inc
sahf
inc
cmp
jns
or
lock
adc
and
aas
stos
es
or
scas
das
scas
call
jo
mov
test
pop
push
sub
in
sahf
push
lret
mov
xchg
test
xchg
lret
cmp
and
aas
adc
or
int3
xchg
push
push
push
cmp
in
inc
mov
inc
lea
fists
add
or
xchg
mov
repnz
bound
dec
jb
mov
mov
mov
push
pushl
gs
jne
and
xchg
stc
cmp
sub
stos
xchg
aad
cmp
xor
mov
xor
loope
cld
out
adc
cmpsl
insb
idivl
jne
js
push
out
fisttpll
pushf
test
out
stos
adc
inc
and
gs
lahf
cmpsl
push
mov
and
ja
sub
aad
lahf
aaa
mov
aas
repnz
stc
or
idivb
mov
or
inc
ljmp
imul
mov
pop
mov
inc
lock
fsts
push
cmc
ret
loop
mov
cs
adc
jp
cs
mov
push
push
add
rcrb
rclb
xchg
out
inc
rclb
dec
xchg
int
shll
jg
inc
shlb
fsubrl
shlb
xchg
in
loope
xor
xchg
cmp
into
xor
add
xchg
xor
insl
push
out
mov
inc
adc
scas
test
insb
fists
xor
stos
shrb
ficomps
mov
fcompl
dec
push
cwtl
or
mov
stc
test
pop
js
xchg
and
push
out
xchg
xchg
addl
or
jmp
loopne
les
cmpsb
mov
push
and
cs
lcall
and
inc
pop
adc
outsb
je
dec
ja
xchg
pop
subl
mov
cmp
cltd
out
lret
sbb
pop
daa
ficompl
push
outsb
lea
add
or
cmp
mov
mov
mov
cmpl
xchg
leave
mov
xor
adc
cmpsl
jle
pop
sub
dec
xchg
xchg
bnd
fisubs
pop
test
push
call
sub
dec
hlt
mov
outsl
cmpsl
fstp
fstl
call
das
aam
fnstcw
leave
push
pop
and
adc
xor
mov
pushf
xorb
in
xchg
adc
mov
xlat
pushf
and
lahf
sub
jns
stc
push
cmc
add
fdivrl
xchg
jl
xchg
rcr
add
shll
sbb
xchg
pushf
pop
in
sbb
mov
cmc
stc
mov
out
sub
movsb
enter
js
lods
int
and
outsl
xchg
ljmp
mov
mov
repnz
ret
out
mov
stos
dec
lret
add
xor
and
sub
adc
insl
dec
lahf
mov
pop
cmpl
inc
stc
xchg
and
sbb
jg
lds
and
lock
xchg
cli
mov
out
inc
push
jp
mov
push
add
sub
fldt
xchg
and
dec
xchg
and
cmpsl
negb
fidivl
xchg
lds
sub
pushf
nop
orl
push
or
sub
aas
mov
jb
jne
inc
clc
add
into
xchg
jmp
mov
inc
sub
lret
sbb
push
xchg
sahf
jg
or
jnp
jmp
fstl
xchg
cmc
rol
dec
imul
gs
ja
out
lds
lock
lret
inc
sub
test
lods
jp
add
add
out
stos
addr16
test
xchg
fidivrs
mov
pop
jae
push
popf
stos
arpl
clc
mov
or
pop
mov
inc
pop
insb
fs
cltd
fdivrs
repz
and
jge
jl
stos
dec
icebp
inc
inc
fnstsw
stc
mov
outsb
loopne
mov
pop
lods
and
mov
ret
sbb
or
sti
mov
cmp
jmp
hlt
cli
int3
mov
in
dec
xchg
mov
addr16
and
pop
add
lea
out
adcb
xor
and
or
push
cmp
subb
pop
cwtl
inc
dec
dec
push
push
int3
fwait
jb
shlb
insb
int
hlt
adc
std
mov
mov
shlb
adc
push
jae
js
stc
push
ret
xor
jae
xchg
xchg
pop
cltd
lods
mov
push
stc
mov
js
sbb
cmp
jne
xor
inc
push
inc
loope
dec
xchg
fmull
insl
in
adc
andl
mov
lods
xor
or
scas
jl
add
jg
push
and
mov
imul
loope
pop
inc
sbb
push
xchg
and
xchg
cmp
push
test
push
test
faddl
inc
movsl
mov
pop
xor
xchg
push
test
call
sbb
or
push
xchg
repz
adc
xor
scas
lds
stc
ss
lock
addr16
aaa
pop
xchg
mov
sahf
inc
sub
cmp
hlt
and
or
das
xchg
sbb
xchg
jmp
and
out
mov
testl
ror
into
aad
mov
aas
fisubrl
jno
xor
repz
mov
and
pusha
mov
jns
in
fcoms
lret
jg
jl,pt
out
inc
imul
aas
fisubrs
add
sbbl
scas
pushf
cmp
jb
mov
loop
xchg
outsb
out
test
mov
into
jns
jg
cmp
in
pushf
jo
dec
test
repz
jae
fldt
mov
or
enter
orb
mov
dec
pop
ljmp
cmpsb
das
scas
inc
in
mov
add
sub
jp
add
push
push
inc
call
push
mov
sub
fidivrs
cmp
dec
mov
dec
subb
xchg
ret
cmp
call
xor
ljmp
les
push
mov
sub
push
in
fists
xlat
push
jl
movsb
inc
mov
fsubrs
testb
fcom
int
mov
jg
mov
adc
mov
outsl
cmp
adc
pushf
or
les
sbb
pop
xor
pop
shlb
or
scas
fcmovbe
xchg
cmp
jns
push
or
jecxz
and
test
pop
ss
inc
enter
lahf
and
inc
lods
sub
mov
cmp
mov
pushl
or
adcl
xor
in
xchg
add
pop
xchg
pop
xchg
out
imul
jbe
mov
pop
inc
xchg
shlb
inc
imulb
rcrb
ss
or
xor
fistpl
into
sbb
leave
sti
call
stos
mov
fcompl
rol
inc
sub
dec
sub
loope
rcl
daa
sub
cmp
add
ret
dec
cwtl
imul
dec
jmp
sar
lret
mov
xor
mov
inc
mov
ds
xchg
jo
sub
adc
imul
push
dec
mov
xchg
or
adc
sarb
sub
xor
cmp
xchg
jcxz
fmuls
sub
clc
aaa
adc
in
test
lea
lcall
lret
repnz
mov
subl
clc
inc
int
jmp
add
inc
jl
xchg
aas
sub
test
push
dec
stc
outsl
lahf
rolb
cmp
mov
push
aam
ret
sbb
mov
mov
dec
les
push
popf
sbb
xchg
rcrb
mov
mov
daa
sbb
int3
loop
adc
xor
xchg
arpl
stc
mov
cmpsb
in
xchg
test
lcall
xchg
jae
insb
cmc
ret
test
sahf
xor
bound
fwait
aad
movsb
fadds
ljmp
cwtl
cmp
cmpb
stos
testb
cld
shlb
mov
pushf
mov
dec
xchg
inc
rolb
cwtl
mov
xchg
notl
xchg
add
sub
sbb
inc
lret
cmp
jae
jae
movsl
rclb
sub
shrb
xor
sarb
pop
nop
jne
in
fsubrl
inc
mov
mov
decl
push
repnz
dec
pop
jbe
xchg
or
dec
cmp
pop
call
jne
js
stos
dec
pop
jnp
ds
inc
imul
jns
repnz
lret
test
sbb
jmp
mov
mov
or
mov
call
push
aam
pop
lret
mov
ljmp
and
or
shll
add
clc
aam
dec
dec
imul
cmc
xor
test
jmp
push
xor
in
inc
cwtl
in
scas
mov
xor
jbe
push
int3
fidivrs
cwtl
test
mov
or
mov
xor
jne
sbb
xor
out
xorl
in
fnsave
daa
test
iret
push
filds
mov
push
or
aad
mov
add
jg
mov
test
jnp
cwtl
inc
movsl
outsb
xor
mov
xlat
or
cmp
lret
jp
test
sahf
xor
jne,pn
xor
lock
mov
shlb
insb
mov
je
xor
lahf
fstps
ucomiss
xor
imul
aas
xor
cmp
dec
sbb
jae
iret
enter
xchg
fs
push
scas
sahf
push
inc
test
das
inc
sbb
out
aas
stc
mov
lcall
dec
dec
push
xchg
inc
inc
and
sbb
aas
insb
aaa
mov
sahf
pop
popf
add
test
xchg
dec
xchg
and
or
xor
inc
scas
add
rclb
leave
imul
adc
xor
sub
pop
mov
popf
jge
mov
ret
adc
jg
ja
cmovo
jge
and
stos
pop
inc
sub
lock
int
outsl
and
cmpsl
hlt
mov
and
cmp
fs
cmp
jl
insl
dec
dec
in
mov
cmp
lds
stos
xchg
mov
pusha
movsb
pop
repnz
mov
repz
or
cs
lahf
repnz
aad
arpl
testl
dec
push
pushf
lock
mov
out
movsb
cltd
insb
inc
aaa
xor
in
int
xchg
adcb
adc
inc
xor
sub
push
lods
jno
pop
pop
push
mov
jns
je
mov
mov
lret
rcrl
scas
sahf
mov
inc
sub
scas
lcall
ret
jecxz
inc
cli
jl
addr16
sbb
incb
aam
mov
inc
push
add
into
les
jno
mov
or
test
in
cmp
pcmpeqb
loop
xchg
dec
rcr
lret
add
jns
cmp
int3
add
loope
sbb
xor
iret
enter
daa
rcll
das
push
push
lods
push
mov
loope
adc
sbb
jno
dec
outsl
mov
cltd
aam
and
push
cmp
aad
jb
aad
or
xchg
insl
arpl
cli
aad
cs
cmp
out
fucom
inc
mov
xchg
subl
pop
push
dec
jmp
icebp
or
insb
out
inc
xchg
popa
movsb
xchg
mov
out
mov
add
mov
notl
les
adc
repz
imul
jns
jno
cmp
xchg
lret
add
imul
sbb
mov
push
mov
dec
xorl
xchg
out
inc
adc
rol
mov
loop
emms
nop
and
cs
jns
arpl
xchg
stos
adc
jno
cmp
mov
pop
lods
adc
and
test
pop
xchg
jb
cmp
push
fcmovnu
mov
jns
jns
cltd
enter
jge
dec
orb
xchg
inc
subl
inc
fsubrs
hlt
lret
movsl
lahf
out
icebp
aas
add
std
test
xchg
rorb
xchg
jle
pop
sub
push
jno
xchg
daa
xchg
mov
xchg
icebp
rol
call
jecxz
mov
push
add
push
adc
divl
sahf
jno
fstl
xor
and
sbb
sbb
sub
fcoml
daa
cwtl
nop
out
mov
dec
cmp
movsb
mov
pop
inc
aad
pop
inc
stos
inc
xchg
jl
jo
mov
mov
xor
cmp
mov
loop
shrl
jne
push
lods
sub
push
xor
inc
xchg
outsb
int3
adc
fsubr
out
les
aam
es
icebp
mov
mov
xchg
inc
mov
scas
je
push
dec
dec
push
mov
lret
out
rorb
add
ss
mov
mov
testl
xor
insb
mov
push
js
and
cmp
loope
jnp
xor
popf
or
out
push
or
cs
sub
rcll
push
jno
mov
sub
jl
mov
pop
cmp
pop
dec
insb
pop
and
xchg
mov
mov
lret
pop
pop
inc
ja
cmp
dec
cmp
adc
test
mov
dec
addb
inc
cltd
push
adc
int3
negl
sarb
jb
ficoml
lret
jne
in
inc
jle
sub
pop
movsl
push
inc
loopw
fbstp
cli
or
mov
inc
mov
add
adc
loope
fstl
cmpsl
cmp
movl
arpl
inc
movsl
imull
xchg
das
stos
add
inc
mov
popa
fcom
dec
rclb
call
push
mov
in
js
or
ffree
leave
jg
xchg
aam
adc
aam
xchg
fs
sub
rorl
fsubl
push
jmp
adc
or
inc
mov
adc
jne
nop
andl
adc
lret
mov
jecxz
cld
add
mov
xor
fnsave
mov
mov
lock
dec
mov
fwait
stos
clc
repnz
aas
insb
or
cli
dec
cwtl
shll
and
fstl
int3
push
and
out
ret
test
jmp
pop
popa
in
or
sete
imul
inc
pop
popa
push
imul
insb
push
pop
shrl
into
sbb
inc
adc
sahf
xor
out
stc
cmp
push
stc
inc
incl
rolb
jge
sarb
jmp
or
push
push
add
into
enter
call
pop
outsl
in
in
shlb
jp
xchg
es
and
stos
xchg
jg
or
enter
mov
jmp
ret
pop
pop
cmp
mov
pusha
mov
out
std
mulb
add
lcall
mov
andl
fs
into
inc
inc
mov
rep
mov
push
and
es
sbb
sbb
cltd
push
imul
cmp
popf
sbb
test
inc
mov
in
xchg
addr16
mov
cwtl
out
je
aam
sahf
or
std
cmp
outsb
pop
push
fdivrs
bound
test
sbb
ljmp
call
or
ss
mov
rcl
or
inc
mov
into
mov
and
adc
pop
lods
xchg
inc
dec
sbb
mull
push
inc
xchg
enter
mov
or
xchg
sbb
xor
ja
mov
add
sub
outsb
das
pop
dec
dec
pop
xor
cmp
mov
sub
jg
pop
adc
rclb
xlat
out
dec
es
inc
daa
in
lcall
hlt
icebp
scas
ja
push
adc
enter
fbstp
gs
ja
cmp
ret
enter
mov
inc
nop
cli
imul
inc
loop
rclb
cmp
js
or
pop
sti
pop
mov
lds
popa
mov
in
fsubl
pop
ficoml
out
inc
gs
xchg
dec
cli
hlt
xchg
mov
lods
divb
dec
out
cmpsl
scas
dec
sbb
add
pop
lahf
rolb
shrb
xchg
pop
push
ljmp
mov
ja
jne
xchg
jl
pop
cs
out
ja
sbb
mov
cmp
in
adc
inc
pop
sbb
call
lds
fsubl
sub
pop
adc
add
nop
and
movsl
push
push
mov
lds
xchg
cltd
push
rorb
enter
xor
mov
push
and
das
in
out
dec
mov
into
xchg
sti
mov
ss
mov
pusha
cmc
jle
xchg
mulb
push
sti
movsb
sub
inc
movsb
push
inc
add
sub
xchg
mov
mov
mov
push
orl
test
shll
ret
add
fidivl
jo
push
push
pop
inc
adc
sti
xor
sahf
push
mov
cltd
cmpsl
xlat
ficoms
rcll
lock
push
leave
lcall
fs
mov
push
mov
xchg
push
add
sub
shl
xor
jge
aad
mov
sub
in
fdivrs
add
in
and
jnp
sbb
rcr
inc
ret
push
or
aam
fs
mov
xchg
ror
jecxz
fucomp
fmuls
sbb
aam
xor
mov
xor
cmc
mov
mov
in
mov
pop
ja
or
xchg
ds
push
jnp
cli
mov
mov
inc
es
test
pushf
orl
push
adc
mov
push
or
test
xchg
shll
addl
adc
sbb
cltd
mov
mov
leave
lods
push
in
jbe
imul
fcom
aas
cmp
popa
pop
orb
test
sub
cmp
inc
jo
fwait
test
sub
lret
lea
gs
imulb
mov
push
xlat
dec
daa
xchg
test
aaa
mov
test
lds
push
or
cmpsb
imul
ds
orl
mov
mov
nop
rorl
rclb
iret
popf
inc
adc
aaa
nop
insl
inc
shrb
enter
or
lret
cmp
stos
mov
cmp
push
or
adc
sti
inc
movsb
adc
bswap
xchg
jns
dec
imul
inc
jl
aad
movsb
shll
nop
enter
out
ljmp
mov
lods
aad
mov
jb
rorb
pop
mov
lea
add
xor
xchg
jg
jle
pushf
adc
inc
cmp
testl
pushf
lea
loop
add
xchg
or
pop
es
cmpsb
stc
mov
xor
sub
adc
jae
sbb
push
fsubrl
dec
mov
inc
mov
inc
jno
xor
or
jmp
push
push
and
push
dec
xlat
rorl
imul
mov
jmp
and
jb
cmp
cwtl
and
dec
aad
sbb
pop
xchg
popa
enter
lods
subb
cltd
xchg
and
pop
mov
fucomi
sub
and
fcomps
jge
mov
cli
inc
icebp
rcrl
push
movsb
rolb
push
nop
out
addl
mov
xor
dec
sbb
lahf
arpl
dec
ljmp
nop
mov
dec
inc
xchg
leave
out
and
xor
cmp
divl
xchg
mov
add
aam
sbb
xchg
push
pushf
mov
leave
xchg
push
mov
dec
xchg
pop
fldpi
je
mov
movsb
lock
push
xor
adc
pop
int3
cmc
jl
cwtl
movsb
inc
inc
cwtl
adc
pop
cld
inc
xchg
jae
mov
lahf
mov
mov
mov
and
scas
mov
dec
cmpsl
push
out
aad
push
or
sbb
xor
inc
inc
movb
mov
movsl
cltd
xor
in
jno
xchg
nop
sti
dec
ss
loopne
hlt
push
lods
out
mov
push
addb
push
insl
shrl
cmp
push
imul
jne
jo
jne
daa
inc
adc
adc
push
mov
cmp
lret
jmp
idiv
inc
lcall
js
dec
inc
psubusb
mov
xchg
adc
addr16
dec
pop
or
fwait
adc
jge
dec
mov
add
andb
pop
aas
jle
scas
cmp
pusha
push
sbb
or
dec
adc
aas
popf
call
int3
mov
je
fisttpl
and
in
sub
and
scas
dec
and
pop
es
inc
testb
push
cmp
fsts
movsb
adc
imul
int
fsts
or
sub
and
in
push
inc
cmpb
sbb
cmp
stos
mov
lods
push
xchg
rep
jne
xchg
push
push
pop
jle
in
mov
sub
mov
xchg
sbb
mov
outsb
lret
mov
scas
loope
imul
xchg
mov
in
aas
jae
inc
in
ficompl
pop
aam
das
ret
or
xor
jg
mov
adc
test
push
dec
dec
popf
push
sbb
outsl
repnz
dec
mov
and
mov
rcll
push
jne
add
add
inc
jno
cmp
outsb
stos
or
gs
xchg
lahf
aas
lret
out
add
mov
sahf
jg
push
add
sbb
sahf
pop
xchg
das
pusha
jmp
loopne
push
je
sbb
push
movsb
dec
mov
in
push
or
push
sbb
test
les
mov
addl
push
inc
aas
ss
push
pop
fistps
mov
nop
in
and
jp
enter
lcall
lret
aas
jbe
sbb
jb
mov
repnz
mov
in
xorl
sub
mov
dec
inc
daa
inc
sbb
mov
lcall
xorb
jg
mov
ret
pop
and
jne
mov
mov
xor
mov
outsl
mov
outsb
push
sub
xchg
roll
jo
jecxz
lods
lods
or
lahf
cmp
movsl
nop
inc
adc
stc
js
decb
adc
push
fiadds
adc
mov
push
pop
adc
stos
cmc
data16
or
test
es
in
lds
jmp
adc
mov
jbe
jle
lcall
jae
sub
xchg
dec
insl
push
mov
dec
and
jns
rclb
and
mov
scas
inc
addl
fbld
test
mov
xchg
xor
cmpsl
jb
insb
adc
and
and
mov
decl
in
xchg
ljmp
jge
mov
adc
pop
jge
xchg
movsb
jle
pop
enter
nop
bound
popa
cmp
mov
xchg
lret
sub
lret
cmp
sub
fs
repz
dec
aaa
inc
shrl
test
sub
inc
jne
xor
xchg
fdiv
adc
sub
sbb
cmp
nop
xchg
mov
inc
inc
hlt
jg
cmp
xlat
lret
or
lods
mov
popa
inc
jo
ja
pop
idivl
push
addr16
cmp
pop
mov
shll
notb
add
aas
movsl
les
test
push
hlt
lods
fimull
mov
mov
sbb
xor
mov
xchg
mov
inc
dec
push
push
cmpsl
mov
scas
arpl
xchg
jmp
push
mov
cmp
push
test
cli
divb
xchg
mov
ds
cmp
adc
jp
imul
lahf
xchg
and
sbb
xchg
push
inc
ret
push
aas
enter
xor
cmp
cld
push
or
ror
xor
shlb
and
imul
xchg
inc
adc
mov
inc
mov
out
hlt
loopne
call
loopne
xchg
mov
dec
push
xor
jecxz
loopne
inc
jbe
in
orl
cld
pop
repz
add
cmp
scas
stc
sbb
inc
stos
aas
jge
popf
stc
dec
push
push
push
dec
out
adc
cmp
pop
jno
push
jbe
xlat
xchg
in
jmp
push
mov
in
icebp
mov
inc
mov
scas
mov
push
pop
inc
sub
inc
scas
and
out
jg
dec
add
sub
sub
int
inc
cld
pop
idivb
insl
mov
mov
push
push
imul
cwtl
push
sub
or
xchg
lds
xchg
push
and
int
dec
push
fbstp
popf
ss
xor
ffreep
repz
xchg
add
dec
imul
xchg
adc
mov
mov
sub
in
sbb
cs
mov
push
rcrb
mov
loope
mov
mov
int
push
inc
inc
jecxz
mov
insl
out
xor
ds
lea
stc
adc
out
pop
addl
sbb
inc
lahf
pop
sbb
or
mov
pop
push
in
std
mov
xchg
sarb
xor
out
fnstsw
outsl
cwtl
sbb
fiaddl
ret
in
in
sub
add
push
jns
ja
mov
cwtl
lods
aam
mov
mov
dec
pop
xchg
push
mov
add
faddp
xor
jmp
cmp
fsts
jle
cld
dec
lock
lcall
xchg
or
cmp
fs
cmc
pusha
jle
add
inc
push
xchg
inc
movl
xchg
faddl
or
int
inc
mov
xor
mov
stc
cmpsb
fsubrs
sbb
push
push
lock
pop
sub
shll
addr16
mov
out
test
cmpl
inc
lahf
pop
lock
pop
push
push
movhps
sub
mov
test
and
test
jp
data16
cmp
add
nop
sahf
mov
mov
loopne
test
cmc
enter
xor
aas
idiv
clc
in
cmp
xchg
mov
dec
test
push
call
cmp
xchg
sbb
cmp
pushw
pop
dec
bound
rcll
inc
roll
pop
shrl
xor
movsb
push
fsubs
scas
push
mov
xor
sbb
adc
loopne
test
dec
hlt
mov
inc
push
mov
jne
jge
mov
popf
jo
outsl
push
cwtl
shll
and
sub
cltd
push
push
mov
cmpsl
sbb
movsl
imul
xchg
mov
jl
xor
arpl
adc
fimuls
jmp
js
lds
push
insl
push
adc
inc
add
sahf
aas
lods
imul
dec
adc
mov
or
mov
lret
das
ret
push
aam
sub
xor
xchg
std
clc
mov
nop
sbb
or
or
xor
dec
jl
inc
into
test
cwtl
cwtl
pop
inc
lahf
jo
pop
push
mov
dec
ss
bound
cltd
push
int3
or
adc
rcll
xor
sbb
or
push
jo
and
pop
push
test
or
adc
jno
add
loop
enter
pop
pop
pop
xchg
xchg
inc
pop
adc
mov
xchg
mov
nop
popa
inc
test
mov
lcall
mov
sti
leave
out
xlat
dec
pushf
enter
mov
in
cmpsl
outsl
cmp
cmp
mov
dec
inc
js
push
fmuls
popf
inc
fmuls
mov
push
jb
aam
bound
mov
inc
mov
into
and
in
xchg
loopne
pushf
pusha
mov
sbb
inc
lcall
inc
pop
addr16
jno
adc
es
addr16
mov
shl
pusha
push
cmp
jl
dec
jb
push
pop
mov
jb
pop
cmp
sub
loopne
sbb
insl
aam
hlt
lods
ss
pushf
dec
xchg
stc
inc
cld
push
and
test
in
out
pusha
dec
and
push
testl
push
shrl
dec
popf
stos
cli
aad
lea
cmpsl
cmp
int
cmp
fs
mov
inc
push
adc
push
add
insb
inc
and
imul
or
mov
adc
bound
push
xorl
data16
mov
xchg
imul
shlb
cli
sub
or
aaa
jecxz
sbb
sub
pop
mov
sarl
xchg
cltd
lret
jl
xor
jne
push
call
lds
aaa
jns
icebp
int3
pop
xchg
outsl
add
inc
mov
filds
fsubr
mov
add
mov
enter
cli
mov
push
inc
add
faddl
into
in
add
pop
push
xchg
push
ja,pn
inc
mov
push
aam
fs
add
out
push
and
sbb
push
shlb
cmpsl
repnz
xchg
dec
pop
mov
sti
push
in
xchg
cmp
lahf
jnp
mov
fwait
dec
ljmp
and
or
push
inc
pop
xor
add
mov
lods
imul
cmp
stos
movsw
jmp
mov
wrmsr
cmp
xchg
ret
add
mov
cltd
insb
outsl
adc
lret
into
mov
out
fimull
jne
aas
adc
lods
mov
sbb
mov
out
add
aas
and
sbb
dec
jbe
mov
ljmp
aam
incb
push
aad
or
mov
loope
xor
xchg
outsb
in
push
in
imull
cmp
out
sub
xchg
stc
inc
inc
dec
outsl
push
cld
fwait
aas
sub
into
icebp
movsb
adc
outsl
mov
movsb
nop
test
clc
aas
pop
stc
imul
cmc
push
jecxz
cmp
push
shll
inc
xor
les
mov
xchg
ja
xor
test
hlt
add
sub
loope
xor
lods
cmc
and
mov
sbb
repnz
pop
cmpsb
je
das
and
aaa
rorl
ficoms
jno
lret
push
pop
xor
in
adc
ds
jnp
inc
subb
pop
pop
and
xchg
push
push
mov
aas
mov
jmp
pushf
mov
aas
lret
jg
jae
sbb
ss
pop
adc
cltd
add
sti
push
ds
jl
jno
adc
mov
xor
lret
mov
or
rcr
or
outsl
int
ljmp
stc
adc
push
insl
push
xlat
xchg
push
jns
sub
iret
outsl
movsb
cmpsb
dec
pop
outsb
out
xor
add
sbb
mov
test
dec
pop
addr16
mov
das
mov
push
jmp
mov
pop
adc
inc
and
push
xor
fs
adc
leave
or
and
pop
pop
sarb
cmpsb
shlb
cmc
adc
adc
icebp
add
pop
aam
out
jecxz
fwait
xchg
fsts
sbb
mov
insl
mov
pop
xchg
or
movsb
or
or
xchg
sti
lods
aas
loope
adc
sub
mov
cltd
or
cmp
rcl
adc
clc
adc
ss
popf
test
sbb
or
jle
mov
push
pop
adc
and
arpl
scas
mov
mov
push
mov
es
push
xlat
adcl
push
jns
clts
mov
scas
aas
jge
cmp
testb
mull
cmpsl
xchg
sbb
stos
and
jae
push
pop
push
mov
in
push
xchg
lahf
pop
xlat
jb
cmp
ret
repnz
and
int3
pop
dec
sub
cmp
mov
or
aaa
jge
sub
fists
xchg
jle
mov
adc
xchg
int3
inc
out
inc
mov
iret
enter
pop
pop
push
xorl
pop
jge
add
mov
popa
aad
in
jb
xchg
cmpsl
xchg
push
inc
sub
pop
pop
xor
mov
adc
je
pop
pop
out
mov
sti
pop
arpl
add
mov
ficoml
nop
push
into
push
cmp
test
pop
cmp
adc
xchg
cmc
mov
addl
rclb
mov
pop
pop
mov
or
fidivrs
icebp
imul
pop
sahf
and
loopne
inc
xchg
cmpsl
xchg
test
shl
cmp
lcall
or
sbb
mov
popa
adc
sbb
cmp
sbb
fs
test
cmp
inc
out
pop
push
push
or
mov
push
inc
xor
dec
push
push
push
out
jge
mov
shlb
mov
sub
dec
rcrb
sbb
icebp
jbe
lahf
es
ficompl
std
mov
int3
sub
dec
aas
inc
xchg
hlt
testb
inc
loopne,pt
scas
jle
loopne
or
pop
xor
lods
enter
dec
and
adc
fdivr
pop
inc
lea
and
ja
xchg
addr16
xchg
mov
and
mov
fcomps
dec
lea
or
mov
inc
jl
enter
cs
inc
xor
jno
xchg
test
jns
push
mov
jnp
in
pop
aaa
aam
push
test
push
scas
or
mov
lods
pop
ss
jb
jne
inc
xchg
imul
rclb
stos
mov
jne
sbb
inc
xchg
cwtl
les
sahf
dec
mov
inc
arpl
mov
loope
incb
aas
lret
lahf
push
inc
and
and
dec
push
iret
enter
das
add
lods
jp
cmp
lds
add
movsl
add
add
mov
hlt
testl
push
nop
and
call
fidivrl
nop
std
adc
jbe
jmp
xchg
subl
cmp
std
adc
xchg
jne
push
popa
loop
jge
aaa
sbb
aas
cltd
notl
sbb
xchg
adc
repz
vmovaps
push
sub
push
inc
sti
movsl
bound
arpl
inc
rorl
movl
outsl
and
int3
push
cmp
aaa
xchg
sub
jp
pop
inc
andb
jno
packssdw
xchg
jl
call
loopne
scas
scas
sub
add
jb
cmc
pop
cwtl
adc
testl
mov
mov
dec
test
inc
into
out
insl
pusha
andb
push
push
stos
imul
cli
ss
sub
mov
xchg
mov
aaa
mov
and
xor
cld
xchg
pop
xor
push
xchg
aam
inc
loopne,pt
and
sub
scas
jnp
paddq
inc
aas
addb
adcb
cmp
push
lea
inc
sbb
outsb
xor
sub
rorb
push
adc
cmc
sub
enter
push
scas
xchg
data16
adc
insb
and
ljmp
mov
xchg
cmp
repz
out
stos
sbb
sub
out
inc
enter
stos
leave
jecxz
dec
sub
adc
pcmpeqb
dec
hlt
fwait
add
jmp
and
fistl
js
xchg
dec
mov
inc
loope
fwait
sahf
out
dec
dec
xchg
lcall
mov
leave
add
clc
div
cmp
jge
bound
jae
inc
aaa
mov
jb
out
aas
inc
jb
push
push
or
stc
popa
negl
mov
mov
push
xchg
scas
xchg
movq
imul
dec
cmp
test
jmp
cmp
xor
mov
and
lock
lcall
pop
lret
int3
adc
test
imul
shrl
cmp
inc
into
icebp
ja
mov
aas
bnd
pop
cli
repz
dec
loop
loopne
mov
js
xchg
lods
mov
mov
pop
cwtl
aas
xor
stc
scas
push
fstl
jnp
mov
shll
add
mov
in
in
push
sbb
idiv
outsb
jmp
gs
xchg
movsl
arpl
ret
clc
int3
aas
mov
daa
inc
in
sti
mov
push
test
fmulp
mov
push
push
push
mov
push
les
pushf
sti
orb
push
mov
lretw
sar
xchg
lds
sbb
xchg
mov
jecxz
lds
stos
stos
jmp
xor
cmp
aam
test
push
out
pop
and
test
cld
mov
fstl
mov
xor
inc
inc
xor
mov
iret
in
arpl
nop
aaa
xor
push
ss
xlat
push
cmp
out
loopne
inc
test
mov
jp
pop
aaa
xchg
inc
int
add
rcll
icebp
fidivs
mov
pop
add
dec
fwait
outsl
call
roll
sbb
fdivrs
pop
sbb
adc
xchg
mul
cwtl
dec
jg
mov
or
fists
mov
dec
pop
jae
sbb
fbstp
test
out
shlb
sarb
rcl
cmpsb
adc
pop
xor
push
dec
jmp
rcll
jle
in
pop
fnstcw
sub
and
push
sub
bound
into
adc
jb
faddl
mov
icebp
xrelease
mov
jnp
mov
aad
mov
jnp
push
jns
xor
mov
fsubrs
scas
repnz
xor
stos
pop
xchg
xchg
push
xor
out
cmp
mov
mov
rorl
jle
xor
mov
sub
movsb
popf
lds
xchg
popf
or
not
push
fnstenv
dec
sbb
pop
jne
push
xchg
pop
or
push
inc
xlat
or
dec
mov
add
pop
ljmp
or
cmp
inc
rclb
test
adc
es
pop
test
inc
xchg
dec
mov
aaa
stos
cmp
mov
adc
mov
sbb
pushf
push
add
and
push
lods
cmp
add
shlb
add
ss
fwait
mov
adc
test
adc
xchg
push
lds
and
dec
xchg
xchg
loop
ja
sbb
cs
fbstp
adc
jecxz
shrb
jecxz
call
xchg
ret
hlt
adc
shll
inc
insl
push
popf
xor
sahf
fldl
dec
gs
jnp
add
push
ja
jle
imul
jne
xchg
mov
daa
ret
scas
fwait
push
rcl
iret
fldenv
pusha
xchg
xor
mov
lret
test
sti
int
pusha
sbb
shrl
imul
cmp
xor
and
push
js
xchg
addr16
cmpsb
dec
movsb
std
clc
shrl
sbb
inc
fdivl
xchg
mov
push
test
xor
push
xchg
dec
in
scas
add
test
incl
lods
sub
xchg
sbbb
arpl
bound
cmp
dec
inc
cld
sbb
push
mov
gs
enter
jl
inc
add
xchg
jle
ret
test
mov
inc
mov
loop
add
andb
xor
ficomps
sbb
pop
push
fiaddl
je
push
popf
adc
xor
ret
je
mov
push
mov
jle
out
test
orl
bswap
xchg
subl
push
dec
cmp
pop
adc
loope
inc
adc
sahf
cli
loop
jecxz
adcl
stos
dec
pop
rol
rclb
daa
pop
leave
cwtl
push
stos
mov
sub
dec
mov
lds
movsl
push
push
jl
inc
lahf
shll
dec
stos
aas
aas
push
cmc
or
lock
dec
lret
sub
sub
lret
pop
cld
movsb
cli
lds
and
pop
int
sbb
loopne
xchg
dec
mov
add
vpunpckldq
xchg
pop
repnz
mov
pushf
jbe
out
add
jae
test
les
pop
jmp
cltd
pop
inc
xchg
push
mov
decl
sahf
es
mov
in
dec
or
or
lahf
imul
xchg
jae
loopne
fisttps
fiaddl
lds
lahf
xor
inc
lock
shl
push
ss
push
adcl
loopne
jg
lahf
push
mov
jnp
out
fwait
cltd
ss
xchg
mov
addr16
sub
xor
les
sub
dec
rol
mov
mov
mov
dec
sub
cld
dec
jne
dec
mov
xchg
xchg
sbb
out
cmp
sbb
add
pusha
add
loopne
xchg
pop
mov
mov
in
inc
jp
int3
and
xchg
std
arpl
outsl
cmp
adc
push
imul
jp
jns
cmpsl
push
dec
xchg
dec
inc
lds
das
mov
icebp
aam
push
dec
lcall
ds
in
inc
xchg
xchg
aad
jg
fwait
lea
lret
data16
cmpl
mov
insl
loope
cmp
push
mov
push
xchg
fxch
adc
jb
push
imul
cld
nop
ja
mov
dec
ljmp
out
bound
les
adc
push
xchg
mov
aam
and
sub
and
inc
cmp
in
rcll
lock
adc
jmp
aas
out
inc
and
fwait
pop
lea
stos
sti
mov
add
daa
push
in
test
xchg
or
sbbl
js
mov
push
ja
enter
out
and
and
push
leave
xor
sub
aas
repnz
sti
jae
shrb
push
repz
mov
xor
out
xorb
shl
call
outsb
push
lcall
sub
pop
shrl
cmp
ss
hlt
push
addl
inc
xchg
push
mov
and
das
loop
push
push
pop
push
shlb
mov
xor
not
cmp
rorb
pop
shll
inc
enter
mov
rcr
stos
xchg
mov
mov
fsubrl
iret
xor
pop
stos
xchg
outsb
mov
xchg
and
jo
push
push
xor
jno
into
add
lahf
xchg
roll
std
ja
or
add
sub
push
insb
test
sub
sbb
and
push
repnz
cmp
pop
push
cltd
xchg
negb
mov
mov
jnp
pop
lods
je
dec
push
inc
add
mov
es
mov
dec
ret
xorl
jno
mov
dec
clc
jp
mov
mov
das
ret
push
pop
sub
cmc
xchg
dec
mov
mov
les
xchg
inc
cmp
push
lea
popa
lret
rorb
cmp
aad
or
add
adc
xlat
shrb
movsb
sub
stc
in
pop
dec
pusha
loopne
inc
fsub
push
pop
dec
inc
pop
movl
mov
or
mov
xchg
push
and
repz
xor
dec
aam
push
xor
push
pop
out
mov
cmp
push
adc
sbb
push
xchg
lds
fstpt
subl
lret
and
js
adc
inc
pop
scas
stos
rcl
xchg
cmc
xchg
arpl
nop
aam
xor
pop
ss
int3
jmp
adc
or
aam
insb
inc
outsb
sub
inc
fnstsw
mov
repnz
fwait
dec
sbb
xchg
cmp
jmp
add
loopne
push
sti
lea
mov
mov
outsl
lret
push
in
sbb
xchg
jnp
adcl
push
mov
fsts
push
test
mov
in
and
inc
inc
stos
mov
rorb
les
jo
mov
cltd
movsb
and
adc
mov
adc
mov
repnz
mov
push
fwait
shl
dec
push
mov
out
push
dec
jmp
adc
out
rcll
mov
rcr
add
in
outsb
es
mov
sbb
pop
inc
in
pop
push
pop
cmp
std
mov
jl
ret
mov
popa
or
lret
ret
push
or
cltd
sbb
inc
push
xor
shlb
push
push
movsb
mov
jbe
push
and
xchg
xor
add
push
adc
mov
jbe
lret
mov
cld
push
sub
push
test
out
or
subl
jno
adc
cli
or
neg
sbb
scas
add
addr16
pusha
aad
cmp
cmpsb
inc
sub
mov
in
mov
pop
dec
push
mov
int3
adc
xor
dec
jle
jnp
pop
addb
popf
pop
push
jmp
cli
inc
push
mov
cmp
data16
jg
ss
jmp
cmp
jne
fsubrl
push
fcoms
xchg
jno
push
and
fadds
xor
mov
daa
inc
push
sbb
outsb
and
popf
cmp
or
jne
mov
mov
fcomps
bound
cmpsb
in
push
jbe
and
adc
adc
ljmp
xchg
loope
in
push
test
imul
inc
mov
push
xchg
aam
stc
rol
inc
mov
sti
sub
icebp
inc
and
jae
inc
sarl
add
imul
push
out
sbb
sahf
push
push
and
inc
enter
popf
sbb
mov
cli
add
mov
aas
std
mov
out
bound
in
mov
dec
jbe
aaa
pushf
sbb
sbb
mov
sbb
xor
xchg
xchg
aam
push
cmp
and
cs
mov
test
and
jg
jns
pop
cmp
cmpb
stc
ret
aaa
enter
mov
mov
dec
aad
out
fstl
fwait
aad
adc
fsin
lds
shlb
pop
fnstcw
lcall
jb
pushf
scas
in
add
iret
jo
push
loopne
insl
sbb
dec
jae
inc
cmp
sub
push
add
fisubl
rclb
movsb
or
scas
scas
mov
and
jo
lea
xchg
pop
sti
idivb
fidivl
add
movl
std
mov
cmpsb
dec
ss
shl
cld
push
xorb
pushf
out
pop
fadd
pop
es
dec
ficomps
pop
and
subl
frstor
dec
hlt
leave
mov
jp
mov
xchg
dec
inc
dec
cli
or
jnp
push
push
pop
cmpsb
lods
jmp
inc
push
pop
push
fwait
in
fdivrl
jne
shrb
inc
mov
lock
adc
or
rclb
cmpsb
and
std
cmpsb
mov
mov
xchg
or
mov
out
mov
inc
in
push
mov
fsts
inc
stos
push
jae
jb
and
sarb
mov
sti
fistps
jb
dec
and
mov
dec
std
jae
xor
out
cmpsl
lods
xchg
jno
mov
inc
mov
mov
adc
mov
sub
test
add
les
aas
loopne
fs
mov
outsb
push
push
std
jno
jnp
jge
jae
movsl
test
scas
mov
popf
push
and
into
popf
pop
adc
mov
das
mov
pop
inc
stos
pop
pop
inc
or
ret
sbb
dec
push
repz
mov
inc
adc
jmp
repz
ret
pop
jne
popa
pop
aaa
stos
xchg
int3
mov
and
sub
pop
pop
mov
bound
ja
leave
xchg
hlt
scas
fwait
mov
clc
or
jge
add
daa
and
inc
cs
mov
std
subl
dec
push
popa
cmc
mov
shll
fisttps
repz
cli
rclb
or
inc
mov
push
mov
loopne
jb
mov
aad
popf
addr16
cmpsb
mov
dec
fimuls
jb
inc
int
rorl
dec
pushl
out
out
shl
bound
lea
add
mov
lods
jno
xchg
mov
sbb
lds
hlt
xor
jmp
dec
inc
jnp
sti
insl
jnp
and
xorl
pushf
push
cmp
jg
cmovl
mov
mov
jns
imul
sahf
or
mov
in
xchg
cmp
push
push
mul
lods
cmc
enter
jg
test
cs
imul
inc
cmp
cltd
iret
enter
nop
std
xchg
sarb
jmp
incl
xlat
adc
cmp
pop
pusha
ss
xchg
sarb
mov
push
pop
inc
lods
or
aas
jmp
pop
repnz
inc
jle
imul
clc
bound
mov
mov
inc
repz
jne
cs
jge
push
jo
rol
mov
fwait
popf
cltd
loopne
rcll
or
int
lahf
jle
vpackssdw
call
inc
jne
addl
dec
jecxz
jb
xchg
loope
cmp
mov
int
loop
std
gs
push
inc
sub
insl
mov
loope
test
aaa
cmp
jle
aas
stc
add
es
pop
adc
jae
enter
lods
test
cmp
pop
repz
mov
stos
cmpsl
or
mov
sbb
push
cmc
cmp
shlb
push
dec
pop
orl
sbb
jg
xchg
stos
sub
sbb
push
out
jecxz
movsb
xor
sub
inc
pop
iret
imul
dec
data16
repnz
out
jo,pn
mov
iret
dec
mov
ret
xchg
and
cli
dec
xor
inc
push
xor
inc
adc
lret
lret
push
jno
stos
jmp
in
inc
mov
test
lret
xchg
adc
push
or
inc
out
add
mov
int
arpl
push
and
out
aad
pushf
push
ds
sbb
pushf
aas
inc
cmc
dec
das
jb
add
nopl
shll
add
mov
xchg
test
leave
in
movl
mov
shrb
das
xchg
mov
or
frstor
add
cmp
daa
popl
inc
push
mov
stos
inc
jbe
movsb
cmovle
inc
sbb
pop
xchg
xchg
inc
dec
adc
mov
les
cltd
loope
sar
sets
xchg
add
imul
int3
xchg
xchg
unpcklps
xchg
negb
push
inc
jle
jno
sub
push
cmp
pop
dec
xorb
lds
stc
decl
push
push
jg
movsb
loopne
cs
test
aaa
or
lret
rcll
mov
xchg
or
cmp
jle
shll
cmp
cli
xchg
jno
lahf
jb
insb
inc
mov
out
jnp
mov
int3
sub
cmp
dec
stos
xchg
pop
mov
inc
sbb
mov
pop
sbb
dec
push
dec
sub
es
aas
movb
lret
imul
add
mov
xchg
sub
imul
cmp
aas
aas
mov
inc
je
imul
xchg
adc
mov
testl
mov
sahf
daa
out
and
aam
int3
fwait
aas
jl
jle
subb
push
adc
shll
andl
inc
push
ret
repz
fstp
cmp
jl
add
enter
es
addr16
cmc
cmp
mov
orl
inc
xchg
and
mov
lds
int
pop
in
sti
int
inc
loopne
mov
sbb
inc
dec
and
jno
scas
fwait
lods
push
xchg
xchg
mov
lds
or
hlt
mov
mov
and
jnp
push
into
test
in
sbb
fstpt
test
adc
rcll
jmp
stos
ret
or
push
xor
std
xchg
adc
popf
mov
dec
xor
in
add
mov
fidivl
cmp
cmp
and
jg
icebp
dec
arpl
faddp
mov
and
imul
aad
repz
inc
sbb
aas
sub
sbb
shlb
mov
push
in
in
xor
push
sbb
out
aas
pop
loopne
jns
xchg
mov
pop
jbe
push
sahf
and
in
xchg
stos
pop
aad
xchg
xchg
stc
cmc
mov
popf
adc
aas
bound
xchg
in
mov
inc
pop
xlat
iret
scas
in
jne
cmpsl
pushl
adc
jns
lret
mov
mov
xchg
push
jg
xchg
cltd
roll
push
cmpb
or
jg
fcmovne
into
fcoms
push
ss
nop
cmpsb
mov
loop
push
push
cmp
shll
rclb
push
enter
rorl
sub
jns
cmp
and
sbb
movsb
shlb
lret
cmp
sub
inc
pop
gs
repnz
or
mov
xchg
pushf
loop
mov
mov
xor
incl
in
add
out
sbb
jg
stc
xchg
push
sbb
jge
inc
add
pop
push
movsl
push
pop
jle
lock
nop
into
in
fmull
jp
dec
xchg
shr
sti
jmp
inc
cld
cmp
cmpsb
push
and
int
push
addb
scas
or
mov
int
stos
and
adc
dec
jmp
aas
imulb
or
push
dec
or
cmp
sbb
inc
add
xchg
adc
mov
mov
mov
pop
lret
jbe
cwtl
jp
pop
xchg
jle
arpl
loope
rorl
sub
rol
js
xchg
call
mov
jmp
imul
enter
nopl
adc
xchg
add
repz
lcall
aam
leave
inc
in
adc
xorl
inc
cmp
aad
inc
adc
xchg
je
mov
icebp
shlb
xchg
shl
sbb
arpl
xchg
fldcw
push
xchg
imul
and
in
push
lret
sahf
enter
xchg
push
dec
mov
pop
fs
push
xor
jnp
rorb
inc
mov
loop
dec
enter
jne
out
sahf
pop
push
inc
lea
fildl
push
jae
movsb
or
mov
testb
xchg
jno
jp
inc
adc
fwait
cmp
push
cmp
adc
in
sahf
sbbl
xchg
outsb
mov
adcl
in
rcrl
aaa
daa
push
jmp
mov
cli
addr16
xchg
gs
pop
ss
rcll
pop
lods
ja
movl
sar
sbb
cmp
fistpll
nop
jge
lret
ss
mov
popa
and
mov
jno
fbld
stos
fidivrl
je
sti
cs
sub
inc
ret
mov
push
mov
aam
adc
test
add
sub
or
aas
push
inc
push
popf
mov
mov
pop
sbb
clc
adc
or
jl
dec
xchg
jne
add
jo
sbb
lcall
enter
and
dec
ror
iret
xchg
sbb
pop
sahf
fcmovne
hlt
sti
aas
inc
push
jecxz
ss
mov
sub
or
cmpb
enter
lds
jmp
xor
push
clc
loopne
dec
cmp
inc
or
aas
cmpsl
ds
aas
inc
aaa
sub
push
pusha
cmp
mov
mov
xor
pop
loop
xchg
xchg
loope
lods
xchg
and
stos
and
lods
and
iret
cmp
iret
mov
data16
cmp
add
cmpsl
sarl
leave
stc
fs
outsb
sbb
push
pop
mov
mov
movsl
dec
test
cs
inc
shrl
pop
fcmovnu
add
mov
sub
jecxz
mov
shll
imul
gs
inc
dec
aas
pop
dec
and
jp
cmp
movsb
rsqrtps
aas
sti
dec
push
inc
arpl
sbbb
ja
jno
les
mov
sbb
jno
sbb
fmuls
xchg
pop
mov
fucomi
jo,pn
push
jnp
test
adc
adc
and
inc
lcall
fucom
out
incb
into
rorb
addl
xchg
cli
in
js
xor
dec
addl
pop
subl
out
and
add
test
outsb
jl
outsb
and
cmp
sahf
dec
inc
js
je
lods
sub
and
lahf
outsb
jo
dec
inc
fs
and
add
in
ja
sub
dec
add
xorl
shr
cvtpi2ps
icebp
xchg
sar
notl
std
jnp
mov
cmpsb
push
mov
jo
xchg
stos
js
aad
stc
pusha
jae
push
jae
add
repnz
sahf
push
in
ja
inc
inc
dec
and
std
push
ror
and
shll
pop
mov
jp
or
mov
and
mov
push
inc
push
pusha
adc
adc
push
lea
mov
adc
xor
lcall
sub
or
push
and
test
sbb
jae
pop
insb
jmp
aad
mov
dec
aas
mov
lods
or
pop
mov
clc
add
mov
fdivs
nop
sbb
mov
sbb
sub
inc
sbb
add
or
mov
ds
inc
xchg
shlb
mov
sbb
push
sbb
jbe
pop
mov
push
dec
clc
xchg
aad
or
push
mov
mov
push
negl
pop
mov
push
xor
pop
sbb
data16
stc
push
pop
pop
cwtl
jae
xor
xchg
dec
jae
pop
addl
out
sbb
pop
or
xor
daa
xorl
mov
je
xor
shlb
fs
push
mov
push
sbb
fcmovnb
loope
loop
pushf
popa
daa
int3
xor
xchg
int
aam
jae
sahf
mov
push
movsb
ret
inc
adc
in
sub
push
or
inc
push
xchg
dec
xorl
mov
push
push
lahf
sbb
mov
fmull
jge
enter
sub
mov
jno
push
into
jns
push
je
pop
sub
movsb
jne
or
mov
divl
in
mov
add
add
rclb
gs
xchg
mov
sbb
hlt
sbb
scas
mov
lahf
sbb
fnstsw
pop
adc
mov
mov
arpl
push
cmc
div
jae
pop
imull
loopne
jmp
cltd
dec
popa
fisttpll
mov
xchg
out
popa
xor
or
mov
lds
mov
insb
outsl
inc
sbb
jno
sbb
fs
loopne
mov
jns
movsl
enter
repz
lret
lret
int
push
and
stos
or
pop
fistps
aas
push
xor
in
pusha
in
add
ficoml
push
in
jno
mov
xchg
push
or
shll
mov
push
xchg
mov
pop
pop
test
call
xor
jge
int
sti
jle
cld
pop
push
cmp
push
or
aas
pop
push
pop
in
adc
xor
push
or
lods
cmp
dec
xor
cwtl
sbb
mov
sbb
ret
fisubrl
pop
or
jmp
sbb
dec
out
pusha
int
xchg
mov
cmp
movsb
fwait
ss
adc
dec
in
fistl
test
psrld
jp
xchg
rcrl
sti
mov
test
test
mov
es
mov
xor
push
cmp
or
ds
popl
movsb
inc
cs
ss
fadds
scas
movsl
int3
mov
mov
pop
jg
sbb
movsl
sub
pop
shrb
stos
inc
stos
outsl
jle
pop
add
adc
xchg
cs
or
clc
popa
xor
cmp
jne
int
mov
jb
adc
repz
fisubrs
mov
sub
xor
push
and
sub
addr16
mov
data16
repnz
dec
xorb
dec
add
shlb
adc
mov
movsl
scas
cmc
int
sti
lea
add
ds
bound
test
push
sub
scas
sub
jb
imul
mov
mov
jg
sbb
movsl
dec
scas
fwait
leave
mov
bound
or
or
ds
popa
xchg
ss
sub
jnp
ror
xchg
subb
dec
adc
sti
jno
adc
mov
scas
test
xor
mov
or
ds
xchg
shlb
negl
sbbl
je
ja
int3
jp
ljmp
mov
scas
clc
and
cld
data16
cwtl
inc
cmp
or
test
push
xor
push
out
mov
ret
and
pop
sbb
mov
repnz
sub
mov
mov
xor
inc
cld
xor
fs
xor
push
mov
adc
shl
stos
test
int
and
les
lcall
push
popa
cld
lcall
mov
ds
notl
sbb
fdivl
add
push
aas
add
mov
push
dec
nop
cld
jno
adc
pop
sbb
movsl
pop
scas
ficomps
arpl
or
inc
outsl
adc
popf
add
xor
push
inc
jle
call
not
loop
sbb
xor
dec
push
les
in
mov
movsl
shrl
ret
or
dec
or
ds
pop
mov
arpl
inc
adcl
int3
ret
subl
adc
insl
sbb
cmpsb
push
scas
dec
scas
adc
sub
inc
or
ds
out
sbb
imul
andl
inc
inc
outsl
lret
push
les
jb
adc
enter
pop
cld
or
or
inc
fsubrs
or
ds
std
or
dec
clc
pop
adcl
int
sbbb
xor
divb
in
jnp
or
inc
cmc
outsl
dec
or
ds
sub
mov
adc
scas
arpl
add
scas
and
les
mov
xor
sbb
movsl
or
popf
push
bound
outsl
xor
xor
push
push
dec
movsb
dec
cs
ss
stc
adc
xorl
in
stos
xor
dec
mov
jg
sbb
movsl
mov
sti
jmp
dec
jo
or
ds
xchg
movsb
outsb
sub
js
scas
and
nop
push
lods
int3
jge
and
cmp
add
jb
adc
cs
movsl
nop
scas
pop
xchg
xchg
hlt
ud2
jmp
or
ds
pop
pop
movsb
sti
sub
jl
push
push
ret
and
cli
adcl
cmp
adc
xchg
movsl
lods
scas
adc
sub
adc
or
inc
je
iret
xor
push
test
mov
sbb
sbb
int3
popa
cmpb
leave
dec
adc
adc
adc
fmuls
stc
inc
rep
xchg
or
ds
movsb
mov
and
xchg
ss
pop
test
push
xor
pop
add
xchg
xorb
fwait
les
dec
adc
jg
push
cmpsb
int3
scas
xor
sar
cmp
mov
cmp
out
shlb
push
push
mov
mov
ror
addr16
cmp
adc
jne
mov
adc
mov
daa
movsl
imul
sbb
mov
xchg
scas
xor
std
or
inc
outsw
xor
push
testb
cmp
xchg
mull
ljmp
addl
les
rcll
push
mov
jg
sbb
sub
or
out
xor
push
data16
subl
mov
sbb
int3
test
sub
dec
jb
adc
aaa
sbb
movsl
and
push
sahf
or
inc
aas
jo
or
aas
push
mov
mov
clc
ss
jp
mov
and
pop
ss
cmpl
les
jb
adc
lcall
jb
sbb
inc
repnz
mov
pop
add
xor
push
aam
mov
das
clc
fildl
int3
lods
adcl
fbstp
adc
jne
or
or
in
or
or
aas
push
fbld
mov
push
clc
xchg
xorl
das
mov
int3
pop
subb
cmp
sub
lods
adc
stos
sbb
es
leave
mov
outsl
orl
cltd
cs
addl
jbe
sub
ja
aas
scas
je
push
and
pop
push
aas
das
pop
incb
sub
ds
int
dec
test
cmpsl
test
add
or
aad
sahf
cmp
dec
std
xchg
jp
movsl
aas
sbb
push
icebp
mov
push
cmp
xor
stos
xor
vmovups
fcoms
hlt
push
xor
aam
cmp
pop
inc
or
push
inc
out
lcall
xor
xchg
divl
push
mov
or
popa
outsl
sbb
mov
or
into
js
mov
pop
mov
mov
sbb
pop
push
lea
ret
xchg
jbe
dec
sub
arpl
testb
shrl
leave
jne
xchg
aad
stos
xchg
mov
dec
pop
add
or
jmp
sub
lahf
push
and
out
ds
jo
and
popf
sub
aas
imul
mov
or
fwait
and
mov
imul
adc
aas
fst
add
pop
movsb
icebp
push
in
mov
lock
testb
ss
aam
add
repz
popa
pushf
pop
inc
pop
xor
push
movsb
xchg
testl
xor
mov
bound
cwtl
mov
cwtl
cmp
cmp
xchg
hlt
stos
cmp
xchg
shl
xor
cmp
cwtl
aas
xor
xlat
push
mov
push
sub
push
adc
mov
insl
or
cmp
pop
lea
gs
mov
and
cmpsl
mov
inc
push
aaa
popf
mov
jne
and
mov
xchg
mov
orb
ss
xor
stc
insb
xchg
pop
mov
mov
mov
movsb
mov
fists
js
les
idivb
jns
xchg
sahf
sti
mov
xlat
cmp
jns
inc
or
xchg
repz
jbe
mov
test
add
adc
ljmp
fstps
cmp
or
lock
pushf
ds
hlt
jecxz
mov
sti
out
int3
xchg
jnp
test
or
cld
push
loopne
jno
jns
cmpsl
inc
mov
std
mov
nop
shlb
push
mov
or
ret
or
dec
cmpsl
popa
inc
mov
cmc
adc
aad
mov
in
inc
xchg
mov
adc
pop
sub
inc
dec
inc
push
and
mov
lods
xchg
push
push
lock
or
jns
mov
sbb
repz
inc
mov
and
bound
mov
xchg
xchg
sub
adc
xchg
xor
dec
enter
dec
inc
hlt
aaa
pop
sub
push
imul
cmpsb
inc
lahf
mov
test
xchg
out
xchg
xchg
addl
and
pop
lods
mov
lcall
add
adc
aas
shll
dec
cwtl
outsl
enter
lds
jo
or
lods
movsb
push
cli
dec
rcrl
enter
dec
rclb
adc
xchg
and
fsts
and
test
pusha
inc
scas
xor
push
fmull
push
cli
mov
xor
push
add
test
enter
movsl
jae
xchg
adc
adc
aas
test
mov
jmp
js
push
bound
inc
sarl
pop
or
push
xchg
mov
adc
cmc
cmp
push
icebp
cmp
sub
leave
outsb
repz
cmp
jg
enter
movsl
mov
jecxz
pop
cmp
loop
mov
scas
mov
jb
or
mov
cmp
test
mov
pushf
sub
pop
push
jo
sub
popf
adc
mov
mov
sbb
sbb
xchg
iret
dec
out
loopne
js
loopne
mov
sbb
pop
mov
inc
ljmp
lock
ds
in
xchg
mov
mov
jmp
mov
dec
inc
popf
mov
mov
jg
sbb
movsl
sti
scas
je
xchg
cld
inc
loope
jp
fsubrl
or
aas
push
insl
sub
dec
cs
ss
ljmp
fcmove
inc
subb
orb
jb
adc
cmp
cmp
jo
cld
jae
or
inc
sub
add
fwait
movsb
aaa
sub
add
gs
mov
andb
sbb
lea
sbb
fisttps
outsl
inc
or
mov
or
sbb
inc
stos
jbe
jg
mov
adc
fwait
scas
imull
cld
xor
or
inc
cmc
outsl
xor
jns
mov
in
movsb
jge
dec
ss
notl
test
dec
jmp
xchg
jl
mov
les
jb
adc
push
sbb
movsl
sub
inc
dec
or
inc
gs
idivl
push
rorl
mov
imul
cmp
pop
lods
jno
int3
flds
jns
xchg
jb
adc
outsb
sbb
cmpsb
scas
scas
dec
add
or
or
or
ds
lea
mov
sbb
dec
test
fcmove
push
cmpb
stc
jno
adc
in
in
fs
xchg
sbb
lcall
add
cmp
adc
ss
add
jns
int3
imul
les
out
mov
mov
jg
sbb
movsl
add
sti
and
push
or
ds
subl
push
push
aad
push
adc
mov
dec
mov
jmp
divl
out
pop
scas
adc
in
sti
lock
or
inc
outsl
jo
or
aaa
daa
sub
orl
and
sti
int3
lods
and
lret
adc
xor
scas
cld
pop
adc
xor
or
mov
or
ds
xchg
test
aaa
arpl
and
in
int3
lret
sbb
lds
adc
mov
movsl
imul
pop
or
ds
mov
mov
bound
div
adcl
int3
flds
mov
pop
movsl
mov
test
push
cld
clc
int
sub
push
or
ds
mov
movsb
movsl
sub
aaa
fimull
int3
push
adc
dec
inc
les
mov
sbb
movsl
sub
outsb
add
sti
les
and
es
call
push
sub
int3
sub
cmp
lea
jns
xor
int
addb
jno
adc
sbb
cmpsb
jno
inc
xchg
jo
sbb
jo
push
mov
pop
xor
push
xchg
aaa
push
clc
sub
ret
ljmp
les
mov
jg
sbb
movsl
pushf
scas
cmpsb
lcall
inc
fs
or
cltd
cwtl
sub
lret
jno
xchg
jb
adc
loop
xor
xlat
sti
mov
or
ja
or
dec
xor
nop
clc
mov
xchg
inc
push
int3
xchg
and
xorb
mov
mov
jg
sbb
movsl
insb
scas
mov
scas
sti
movsb
cli
or
inc
cli
outsl
or
pop
add
bound
clc
xchg
subl
adc
ds
sbbb
mov
adc
jge
das
movsl
call
sti
jb
or
inc
loop
ds
xchg
add
xor
push
fisubs
xchg
mull
orl
xor
adc
push
dec
add
jno
adc
mov
movsl
cmp
int
or
jbe
es
fs
xor
push
aad
mov
dec
clc
ja
sbb
jecxz
dec
and
adc
jnp
mov
mov
adcb
fsubr
mov
in
xchg
or
inc
cltd
outsl
lcall
popf
sub
in
es
xor
add
ja
cmp
mov
mov
jg
sbb
scas
stos
adcl
jo
or
movsb
push
clc
inc
orb
test
addr16
xor
dec
in
jg
sbb
movsl
movsl
scas
mov
xor
outsl
mov
xor
push
mov
mov
pop
clc
mov
int3
and
int3
movsl
cmp
les
std
sbb
sub
mov
jo
or
ds
push
pop
mov
popa
clc
or
pop
push
mov
dec
int3
sbb
push
lds
loope
mov
mov
jg
sbb
movsl
ss
test
sti
xor
sub
out
xor
push
out
mov
xchg
negl
pop
and
pushf
xor
jb
adc
nop
sbb
movsl
scas
les
or
or
ds
mov
mov
mov
sbb
lret
xchg
les
shll
movsl
pushf
scas
pop
sbb
adc
popf
or
cmp
xor
cmpl
mov
aam
push
cmpb
les
cmp
mov
mov
adcb
mov
mov
addr16
insb
mov
push
dec
mov
aam
xlat
mov
das
into
fidivs
call
mov
insl
push
clc
testb
icebp
gs
xchg
addr16
fdivrs
sub
loopne
push
repz
push
and
gs
inc
or
jge
xchg
leave
je
dec
mov
push
lret
dec
xor
mov
out
cmp
push
jo
inc
mov
insb
adc
mov
lret
sub
inc
test
mov
xchg
idivl
jge
pusha
add
repz
lahf
jmp
mov
movsl
pushf
rcll
pop
inc
push
loopne
add
call
cli
add
lds
push
jb
sbb
inc
roll
jp
lret
aaa
sbbb
sub
lret
dec
ret
imul
lock
arpl
int
push
xchg
popf
sbb
js
xor
andps
out
test
jns
fildll
lret
daa
mov
bndldx
jmp
dec
mov
lea
ret
push
mov
adc
pop
adc
xor
inc
push
out
fildll
ds
decb
jp
inc
inc
jge
mov
rcrb
jg
pop
sarl
aaa
daa
sbb
lock
push
hlt
adc
jno
cmpsb
dec
pushf
nop
cmp
lret
mov
incl
pop
xchg
fsubs
mov
nop
jnp
lock
xor
dec
out
push
fs
mov
or
imul
arpl
ds
adc
inc
ret
push
push
int3
addl
mov
dec
xchg
mov
imul
sub
xor
and
pop
mov
inc
pop
roll
sub
in
cmpl
cmp
cs
cmp
lods
scas
decb
dec
in
dec
xor
ds
dec
cmp
cmp
int3
cmp
xor
js
push
mov
or
aaa
and
add
mov
cmp
nop
insb
in
hlt
xchg
subb
je
lret
fidivl
and
ljmp
std
and
dec
test
add
pop
or
clc
hlt
and
or
lea
mov
int3
sub
lea
inc
leave
fldt
aam
cmp
xlat
call
mov
xchg
add
mov
mov
in
lcall
into
je
jg
push
sbb
push
test
loopne
xchg
lcall
subb
pop
mov
xor
sbb
sub
loopne
xchg
insl
flds
mov
push
sbb
or
inc
xchg
je
lret
stos
or
movsl
daa
mov
add
xor
and
add
xchg
push
ret
push
mov
sti
in
dec
dec
push
jl
iret
dec
adc
cmp
fiaddl
push
xor
int3
cmp
cmp
les
jns
jl
nop
push
push
sub
dec
fs
aas
inc
cld
inc
push
xor
and
addr16
loope
mov
push
or
insb
dec
in
insl
adc
cs
in
xchg
sbb
cmc
andb
xchg
jno
ret
cld
xorb
roll
sti
pop
cmp
sub
mov
pop
bnd
mov
lahf
xchg
add
xor
mov
sahf
inc
xor
push
ljmp
adc
sbb
mov
leave
inc
ja
mov
xor
ret
xchg
insb
icebp
mov
mov
loop
pop
cmp
push
pop
mov
cmp
mov
push
imul
into
dec
mov
mov
mov
cmp
mov
std
test
sti
mov
jns
pop
arpl
lods
int
push
mov
aam
mov
xchg
aaa
xor
rcrl
repnz
and
sbb
ds
sbb
xor
jp
imul
mov
in
nop
push
adc
inc
sti
mov
pcmpeqb
dec
sub
xchg
or
xchg
xorb
cmp
sbb
and
xchg
cmp
mov
jmp
pop
sbb
icebp
daa
inc
mov
lret
cmp
pop
movd
mov
mov
adc
jmp
mov
clc
loopne
scas
add
std
enter
or
ja
imul
inc
xchg
mov
mov
nop
clc
addr16
cmp
into
adc
and
arpl
xchg
cwtl
adc
lret
ljmp
or
xchg
inc
inc
push
mov
leave
push
or
imul
cmp
cmp
pop
pop
inc
inc
int3
imul
cmp
xchg
mov
shlb
xor
xor
jl
adc
lret
push
mov
mov
sbb
cs
cmp
aaa
jae
xchg
mov
mov
sub
call
sbb
inc
out
cmp
int
dec
mov
int3
dec
inc
cld
xor
mov
and
jp
scas
and
sub
shrb
adc
xor
xchg
insb
sbb
movsb
cmc
cltd
mov
cli
cmp
inc
loop
mov
test
rcl
adc
pop
mov
push
and
push
mov
mov
mov
pop
sub
insb
mov
fcos
das
xor
add
and
inc
mov
insb
icebp
sti
rclb
js
add
sahf
iret
cmp
adc
push
sub
rorl
daa
outsl
in
wrmsr
faddp
fsubrs
cld
pop
roll
xor
adc
sbb
loope
mov
cld
sbb
test
adc
sbb
push
nop
cmp
adc
adc
mov
xadd
rcrl
pop
push
mov
jecxz
adcl
orl
dec
out
mov
xor
loope
int3
test
mov
sbb
mov
mov
gs
push
cmp
mov
push
jnp
push
aad
aam
fadd
or
loopne
lods
in
insl
cli
push
mov
jnp
or
pop
mov
jge
test
inc
mov
mov
pop
xchg
dec
adc
imul
dec
sarb
insb
aas
cltd
std
mov
fsubs
popf
cmp
idivb
loop
or
gs
pop
inc
stos
aas
or
cltd
cmp
ja
jmp
mov
push
movsl
shrb
movsb
loope
lret
mov
pop
enter
add
fwait
sub
or
mov
sbb
mov
out
push
lods
adc
gs
inc
jae
out
fnstsw
ds
ret
xchg
push
add
imul
or
int3
sub
or
xor
lea
lods
push
pop
push
or
mov
jle
dec
and
dec
xchg
xchg
ror
push
rcrb
outsl
cmp
popa
ja
fs
add
sub
cmp
mov
rorb
and
adc
add
es
mov
add
jo
outsb
xchg
ret
jmp
sti
jb
scas
out
xchg
dec
pop
das
out
cmp
cltd
dec
jno
lock
xchg
cmp
or
test
jl
enter
ret
jmp
cmp
or
ja
xor
add
out
aaa
pop
cs
inc
mov
adc
cmp
bnd
inc
int3
inc
inc
adc
dec
mov
push
cmpsb
ja
inc
stos
xor
mov
addb
dec
pushf
jne
jge
sbb
cwtl
popf
pushl
push
rcll
test
mov
mov
adc
sti
fldl
scas
rcll
mov
fldenv
mov
dec
ret
arpl
lret
mov
mov
push
cmp
adc
repz
sbb
out
leave
push
ss
and
sbb
mov
sub
push
adc
sub
iret
mov
sub
call
lret
cmp
xor
outsl
inc
jecxz
dec
inc
mov
mov
push
ja
xorl
lods
jne
mov
scas
es
leave
mov
ret
sub
in
jmp
pop
in
cmp
arpl
ret
divl
mov
data16
mull
sahf
cmpsb
stos
outsb
cmpsl
jbe
jmp
inc
lods
icebp
jg
out
jo
cmp
dec
loopne
lea
jle
enter
push
jnp
xor
in
inc
and
out
sub
aam
popa
or
cwtl
or
lret
ds
push
shr
gs
ljmp
dec
ss
cmp
jnp
sbb
loop
rcll
pushl
jge
fcmove
repnz
xchg
cmp
xor
and
sti
inc
out
jne
and
push
add
xor
xchg
pop
popa
rcr
gs
dec
aaa
add
jns
jae,pn
pop
jns
mov
sub
das
dec
jge
mov
daa
lds
nop
push
push
cmp
dec
inc
cmpsb
mov
xorl
mov
and
xlat
and
sub
mov
add
mov
pop
push
add
push
cli
enter
sbb
mov
and
bound
xchg
mov
jmp
bound
rcrl
imul
push
in
dec
dec
mov
and
sbb
or
inc
dec
sti
cmp
jno
push
adc
mov
pop
and
pop
lods
das
push
addb
out
test
cmc
dec
dec
out
fcompl
mov
pop
jns
andb
mov
jns
outsb
xchg
ss
lds
sub
cmpsl
ret
xchg
ja
mov
aaa
mov
shlb
sahf
outsb
add
pop
cmp
xor
mov
orb
dec
hlt
dec
imul
push
nop
bound
in
stc
cli
ficompl
sub
mov
adc
and
pop
inc
rorb
adc
das
adc
inc
loopne
jle
out
lret
cmpsb
int3
cmp
jb
push
and
gs
mov
add
lods
jbe
lret
jmp
add
je
jne
jnp
push
nop
mov
cli
cld
mov
fdivs
dec
mov
es
mov
jns
je
inc
pusha
mov
aam
xchg
xchg
leave
push
push
jb
pop
pop
mov
mov
ljmp
pop
mov
or
pop
repz
sbb
xchg
sbb
xchg
or
and
push
sub
jnp
mov
push
fstl
jp
lds
mov
jne
icebp
data16
dec
mov
mov
push
jo
mov
add
addr16
push
popa
leave
xor
stos
sbb
lret
sbb
orl
movq
pop
sbb
xlat
insb
es
push
addr16
jmp
addr16
shlb
sti
jmp
push
dec
aas
jge
iret
xchg
repz
push
in
dec
bound
or
mov
in
mov
mov
imul
lods
iret
dec
cmpb
int3
lcall
or
jle
pop
pusha
mov
inc
mov
inc
out
rorl
ret
shrl
lock
push
dec
push
xchg
mov
fistl
flds
pop
cmp
push
jp
es
xor
mov
push
lahf
inc
mov
mov
adc
nop
test
shrb
and
xchg
es
mov
inc
sarl
cmp
xchg
xor
push
lock
inc
xor
inc
fdivrl
adc
test
cli
aas
mov
cmp
fldt
js
nop
add
xor
lret
mov
in
repz
std
in
aaa
push
xchg
clc
lock
jmp
push
lds
adc
fwait
cmp
pop
sub
jb
test
aam
cmp
jmp
xor
nop
ljmp
inc
sbb
dec
push
pusha
push
test
mov
or
js
and
xor
pop
xor
mov
jmp
mov
mov
fs
pushf
pop
sti
stos
xlat
xor
pop
xor
daa
dec
inc
loope
sub
jecxz
lret
adc
jae
fcoml
shl
data16
or
cmpsb
push
and
add
call
in
mov
xchg
adc
test
push
pop
test
aaa
jnp
xchg
jbe
jp
aas
lods
imul
fs
inc
daa
adc
push
in
xlat
or
push
dec
orb
mov
pusha
or
inc
or
jmp
or
pop
hlt
push
call
xor
lret
adc
push
fdiv
push
push
xor
bound
movsb
push
sahf
imul
inc
ja
or
lock
inc
jge
int3
stos
xchg
pop
push
je
jns
lret
cmp
shr
or
je
out
daa
mov
jne
mov
push
xor
jbe
sub
cmp
mov
inc
jne
adc
mov
sbb
push
mov
pop
xchg
xlat
out
push
push
and
scas
fcoml
lcall
jecxz
cli
enter
std
lock
sbb
lret
sbb
addb
shl
gs
jecxz
pop
fs
mov
outsl
iret
push
xor
pop
push
ret
xor
lretw
rorl
call
xor
push
xor
dec
mov
outsb
je
xor
pop
push
loop
movsb
or
ds
jbe
inc
ror
lods
icebp
mov
mov
mov
adc
push
data16
xlat
fwait
rcll
adc
sub
fsubs
out
popl
jae
sarl
movb
popa
das
mov
aad
adc
mov
lods
movb
pop
aad
gs
pop
jb
stos
or
popa
scas
fdivl
test
outsb
stos
dec
bound
and
enter
cltd
inc
out
xor
pop
cwtl
lret
ret
mov
sub
adc
mov
adc
mov
jecxz
inc
inc
ror
mov
es
push
xchg
lcall
push
fisttpll
rcll
rcll
out
cmp
cmc
inc
add
lcall
cltd
sbb
mov
xor
push
jle
sub
mov
mov
lea
cmc
js
sub
fmuls
add
xchg
out
pop
pop
incl
jo
add
ljmp
movsb
movsb
leave
test
and
add
and
cltd
aas
dec
fimull
loopne
hlt
pop
jb
mov
cld
sbb
pop
mov
sbb
inc
pop
enter
inc
ja
clc
dec
mov
add
add
adc
add
and
add
cmp
add
add
add
add
add
push
add
addb
add
add
add
push
add
add
or
add
add
add
add
add
jo
add
add
aam
add
sub
add
xor
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
jo
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
outsl
add
dec
add
push
add
pop
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
xor
push
add
xor
inc
add
outsb
add
add
add
inc
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
xor
xor
add
add
add
add
add
add
add
add
add
xor
xor
xor
add
add
cmp
or
add
je
add
outsb
add
insb
add
popa
add
add
add
jns
dec
add
ja
jp
push
add
add
ja
je
arpl
add
add
xor
or
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
dec
add
cmp
push
add
push
add
add
add
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
pop
add
push
add
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
aas
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
gs
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
