sub
add
addl
add
add
insb
addl
add
addl
add
addl
add
addl
add
add
add
addb
xor
add
inc
addb
dec
addb
addb
jp
add
nop
addb
movsb
addb
mov
addb
fadds
add
incb
add
push
addl
xor
add
add
add
pusha
addl
add
add
jbe
add
mov
add
add
add
mov
sarb
jb
cld
mov
mov
xor
in
mov
jb
cld
mov
mov
fiaddl
inc
mov
shrb
inc
sbb
sbb
inc
sbb
push
aam
int3
sub
icebp
pop
rcl
inc
int
shrl
icebp
pop
rcl
xor
inc
sub
mov
rcl
rcl
rcr
xchg
mov
xlat
icebp
dec
inc
pushf
xor
mov
roll
pop
xchg
loop
aad
xor
cmc
and
dec
scas
inc
sub
inc
mov
jbe
inc
mov
iret
xor
xor
aas
xor
xor
sbb
or
pushl
add
jecxz
or
dec
test
mov
inc
test
in
dec
sub
dec
xor
rcr
lods
xor
xor
rclb
sub
xchg
jmp
or
sar
inc
int
pop
ss
or
xor
imul
or
cmpsb
adc
sbb
adc
pop
dec
inc
or
add
xor
xor
cmpsb
mov
and
inc
aaa
and
xor
cmp
rcl
pop
ret
add
xor
xor
pop
loopne
in
in
das
cwtl
js
aam
clc
cmp
xor
leave
add
xchg
adc
pop
xor
xor
loopne
ds
inc
adc
xchg
inc
rolb
sub
js
xor
mov
sub
xor
xor
inc
sbb
sbb
stc
add
xor
xor
fstps
inc
inc
sbb
inc
lret
lret
lret
lret
lret
lret
sbb
loopne
loop
add
xchg
inc
ss
fisubrs
xor
rolb
leave
add
pop
inc
mov
mov
ss
add
in
dec
sub
or
aaa
mov
xor
sbb
mov
mov
ss
loop
inc
in
dec
test
xor
push
scas
cmp
xor
sub
add
loop
xor
xor
inc
lret
mov
inc
sgdtl
xor
xor
xchg
adc
xor
stc
aaa
sub
xor
xor
mov
stc
aaa
and
adc
add
loop
sub
mov
cmp
mov
add
in
dec
test
xor
add
roll
add
jmp
push
inc
adc
cli
jmp
lret
int3
aaa
and
mov
xchg
jmp
icebp
ss
pop
mov
or
xor
roll
sar
jmp
cmp
mov
int3
sbb
mov
ss
mov
jmp
xchg
mov
leave
add
xor
ss
sub
sar
int3
sbb
pop
xor
mov
aaa
mov
inc
sub
inc
mov
mov
pop
xchg
jmp
test
sbb
inc
sub
dec
popf
adc
push
sub
das
add
dec
or
inc
fidivl
sbb
xchg
pusha
inc
xchg
inc
fimull
sub
movsb
ret
out
out
mov
xor
loopne
mov
pop
loope
daa
xor
xor
adc
mov
testl
sbb
stc
inc
mov
mov
icebp
inc
sbb
in
mov
lret
popf
mov
repz
mov
cmp
popf
mov
mov
dec
or
or
xor
xor
push
mov
js
inc
cmpsb
enter
imul
mov
inc
inc
fdivrs
inc
dec
lahf
fidivl
mov
inc
dec
pop
mov
pop
inc
jecxz
xor
xor
cld
xor
xor
mov
or
mov
add
jo
jecxz
sbb
ss
mov
dec
or
mov
inc
or
inc
push
inc
rolb
inc
rolb
inc
sarb
inc
inc
inc
rolb
inc
inc
ret
inc
mov
das
das
inc
fisubrl
dec
lahf
ret
adc
xor
cmp
sbb
mov
mov
xor
mov
inc
or
or
xor
faddl
sub
add
loopne
out
ljmp
sbb
sbb
loopne
mov
add
out
inc
sub
mov
xor
inc
ljmp
dec
dec
dec
or
das
das
add
das
das
mov
xor
inc
ljmp
pusha
xor
xor
mov
mov
inc
mov
inc
mov
dec
lret
rcrb
sub
test
mov
dec
lret
shrb
push
dec
cmp
mov
inc
inc
inc
mov
inc
xor
cmp
ret
fimull
inc
push
add
das
xchg
dec
xor
xor
inc
xor
xor
xor
das
shrb
mov
inc
mov
mov
in
adc
and
cld
mov
add
push
mov
inc
xor
or
xor
inc
mov
movsb
inc
mov
inc
adc
rolb
xor
das
fdivrl
inc
mov
inc
mov
inc
adc
rolb
xor
das
fcoml
mov
inc
and
mov
fcmovb
add
push
sbb
das
fiadds
and
mov
sub
dec
fimull
lods
push
sub
xchg
mov
pop
or
das
das
add
das
fistpll
mov
ss
mov
inc
mov
cmpsb
mov
roll
inc
lret
rcrl
inc
add
xor
inc
sub
dec
mov
jb
xor
inc
sbb
cmpsb
pop
dec
cmp
xor
mov
ljmp
mov
mov
sarb
inc
ljmp
test
dec
popf
xor
xor
xor
incl
inc
mov
das
das
mov
xor
mov
das
das
mov
das
das
inc
mov
inc
lret
mov
scas
xchg
lcall
jp
xor
int
inc
lret
iret
ss
inc
lret
iret
ss
inc
lret
iret
ss
das
rcrb
loope
mov
inc
mov
xchg
iret
ss
inc
lret
iret
ss
inc
lret
sbb
xchg
iret
ss
das
rcrb
mov
cmp
mov
cmp
sbb
dec
lret
das
sbb
cld
mov
dec
mov
xor
das
sbb
aaa
cli
mov
xor
push
rcl
add
xor
xor
fiadds
sbb
sub
mov
shlb
lret
ret
mov
shlb
fsubrl
shlb
mov
inc
mov
xchg
out
dec
das
sbb
das
shlb
sbb
inc
mov
dec
mov
sub
cwtl
das
nop
inc
mov
das
nop
inc
sbb
das
sbb
das
sbb
add
inc
xor
pop
cmp
mov
inc
mov
das
sbb
das
shlb
in
out
mov
inc
or
or
xor
xor
cld
inc
mov
inc
sar
lret
dec
sub
xor
cli
cld
inc
lret
inc
lret
in
inc
cld
inc
lret
mov
cld
inc
lret
les
faddl
cld
inc
sbb
adc
cld
inc
sbb
repz
cld
inc
sub
and
inc
sub
and
inc
mov
inc
mov
inc
mov
inc
mov
cld
inc
mov
inc
sar
lret
les
inc
lret
int3
cmp
inc
lret
int
inc
lret
mov
cld
inc
lret
inc
sub
jne
xor
cld
inc
lret
and
mov
cld
inc
lret
inc
sub
and
xor
inc
lret
inc
sub
mov
inc
daa
cld
inc
lret
inc
sub
sub
push
sti
xor
mov
adc
cld
inc
lret
mov
sub
sub
sub
jo
fidivrl
add
dec
cmp
das
das
das
rorb
mov
rolb
jo
mov
das
nop
das
sbb
fiaddl
mov
add
bound
xor
dec
cmp
add
dec
mov
jo
mov
das
nop
das
sbb
fiaddl
cli
jmp
repz
das
das
mov
das
das
mov
das
das
mov
das
das
mov
xor
inc
mov
inc
mov
inc
lret
mov
cmp
mov
cmp
sbb
jo
fisubrl
fldenv
or
inc
xor
mov
inc
mov
mov
cmpsb
inc
mov
das
das
inc
mov
aaa
mov
sbb
lret
ret
xchg
inc
mov
das
rolb
xor
leave
xor
xor
dec
mov
je
xor
inc
cmp
xor
inc
mov
mov
inc
cmp
das
das
das
mov
cld
inc
cmp
das
das
das
mov
cld
inc
cmp
das
das
das
mov
cld
inc
cmp
das
das
das
mov
cld
inc
cmp
das
das
mov
cld
inc
cmp
das
das
das
mov
cld
inc
cmp
das
das
mov
cld
inc
cmp
das
das
das
mov
cld
inc
cmp
das
das
mov
cld
inc
cmp
das
das
das
mov
cld
inc
cmp
das
das
mov
cld
inc
cmp
das
das
das
mov
cld
inc
cmp
das
das
mov
cld
inc
imul
das
das
mov
das
das
mov
das
add
mov
das
das
lods
xchg
lcall
das
das
rorb
enter
rolb
dec
cmp
das
das
das
rolb
jo
mov
das
nop
das
sbb
fiaddl
mov
push
jae
fs
pop
cli
xor
fs
xchg
in
xchg
mov
jp
xor
or
inc
mov
nop
jp
xor
mov
inc
mov
mov
inc
mov
inc
mov
and
cmp
inc
mov
das
nop
das
sbb
fiaddl
lret
inc
inc
dec
inc
lret
sub
inc
xor
jmp
xchg
int
shrb
push
rolb
push
cmp
rolb
jo
mov
das
nop
das
sbb
fiaddl
mov
mov
cli
sub
aaa
shlb
sbb
inc
fisubrl
lret
lds
inc
lret
ss
lret
dec
xor
mov
lret
cmpsb
into
rclb
pop
ss
fisubrl
mov
ss
and
xor
ss
stc
inc
sub
inc
fisubrl
mov
xor
pop
sub
mov
roll
lock
rolb
fiaddl
inc
ficoml
inc
ficoml
inc
fiaddl
dec
lahf
push
inc
xor
das
dec
xor
inc
fcmovbe
inc
mov
dec
xor
xchg
fnsave
and
sbb
push
ss
fisubrl
movsb
xor
push
inc
sub
inc
inc
movsb
ss
fisubrl
test
inc
lret
sub
aaa
mov
adc
mov
sbb
fimull
inc
fimull
cmpsb
push
jns
xor
push
pop
ss
sarb
inc
ficompl
inc
lret
aad
cmp
das
das
das
dec
lret
inc
lret
int
shrb
adc
inc
mov
cmp
rolb
jo
mov
das
nop
das
sbb
fiaddl
mov
xor
xor
mov
inc
inc
inc
mov
xor
xor
inc
xor
mov
mov
das
sbb
sbb
filds
sub
mov
inc
mov
inc
sarb
inc
mov
xchg
dec
mov
outsb
inc
xchg
inc
movsb
inc
sbb
dec
sbb
lods
mov
xchg
inc
inc
inc
push
xchg
roll
out
in
out
mov
xor
inc
or
cmp
or
mov
cmp
xor
cmp
dec
cmp
ret
dec
cmp
xor
xor
cmp
xor
aaa
mov
push
dec
cmp
xor
xor
cwtl
cmpsb
adc
xor
aaa
cli
adc
inc
lds
lahf
rorb
lret
lahf
rorb
cmp
rcrb
lret
das
das
das
fidivrs
xchg
sbb
inc
push
aaa
cli
sbb
jbe
rorl
and
dec
lahf
in
ss
sbb
dec
les
lret
xchg
sbb
and
jbe
rorl
dec
dec
lahf
loop
ss
sbb
sub
inc
sub
inc
scas
cmp
sbb
ljmp
and
loop
das
mov
inc
ss
mov
dec
lahf
and
dec
lahf
in
inc
lret
mov
ss
inc
lret
sub
adc
inc
lret
lahf
rorb
and
mov
filds
add
repnz
das
das
out
out
mov
pop
xor
mov
ret
mov
inc
or
or
cmp
xchg
sbb
xchg
dec
cmp
xor
xor
xor
xor
xor
xor
cmpsb
mov
mov
sti
xor
xor
inc
dec
dec
push
inc
lret
inc
xor
adc
cmp
and
and
mov
inc
mov
ss
inc
mov
fsubrl
push
inc
mov
mov
mov
inc
mov
insb
xor
xor
sbb
inc
mov
das
sarb
sub
inc
push
xor
sbb
das
mov
mov
mov
aam
pop
inc
fimull
xchg
ret
cmp
sbb
inc
dec
push
inc
cmp
ret
sbb
dec
inc
mov
dec
lahf
ret
shrb
sbb
das
rolb
push
inc
fiaddl
mov
shrb
sbb
das
rolb
mov
cmp
mov
cmp
mov
mov
xor
cwtl
mov
xchg
aaa
mov
inc
inc
lret
sbb
das
xchg
mov
sbb
out
dec
pop
mov
xor
mov
ret
mov
xor
inc
or
inc
aaa
or
mov
cmp
xor
xor
inc
and
jno
xor
cmp
dec
cmp
xor
xor
roll
stc
dec
cmp
les
mov
xor
mov
das
das
inc
lret
ret
dec
cmp
xor
mov
fmull
and
pop
sbb
adc
inc
ljmp
das
dec
xor
inc
lret
ljmp
jp
xor
jecxz
lahf
dec
mov
dec
xchg
loope
ljmp
sbb
add
nop
jp
xor
add
and
sbb
jp
xor
lret
ljmp
jp
xor
lret
ljmp
das
lret
push
inc
lret
lret
sbb
cmpsb
lahf
jns
xor
push
push
roll
cmp
or
ret
dec
cmp
das
das
das
in
out
mov
out
ret
mov
xor
inc
or
push
inc
mov
aaa
or
mov
dec
cmp
xor
xor
dec
cmp
dec
cmp
xor
xor
and
xor
inc
xchg
mov
add
adc
sbb
mov
ss
inc
sub
ss
and
sub
xchg
ret
inc
lret
lret
ret
pop
ss
lret
int3
pop
push
cmp
dec
rorb
inc
mov
das
sbb
sub
sub
sub
int
and
mov
mov
xor
mov
mov
inc
mov
das
nop
inc
iret
add
mov
dec
inc
mov
fisubrs
rorb
mov
dec
das
sbb
inc
lret
ret
das
rolb
and
sbb
dec
cmp
sbb
lret
mov
lret
lret
xor
add
mov
in
out
mov
xor
inc
or
or
xchg
out
ljmp
add
out
das
das
mov
das
das
mov
das
das
mov
xor
cmpsb
dec
cmp
xor
mov
popa
xor
xor
dec
xor
xor
mov
xor
xor
and
in
cmp
xor
xor
test
mov
mov
dec
cmp
xor
xor
cmp
inc
mov
test
and
adc
xor
xor
loopne
sbb
inc
mov
cld
inc
mov
mov
cld
inc
mov
stc
xchg
mov
lret
inc
mov
inc
mov
and
adc
mov
clc
mov
sbb
mov
adc
mov
adc
cld
mov
das
sarb
inc
int3
mov
shrb
rolb
lret
inc
dec
das
xchg
das
roll
and
dec
inc
shlb
mov
push
inc
xor
and
inc
loopne
inc
shll
shlb
push
sbb
int3
cmp
xorb
inc
shrb
cmp
pusha
inc
ljmp
mov
rolb
or
adc
mov
jp
xor
das
push
rcl
das
shrb
mov
xchg
shlb
mov
add
cmp
xor
inc
inc
pusha
inc
mov
das
sbb
add
xor
inc
es
cli
pusha
xor
daa
dec
lahf
mov
mov
into
cmp
ljmp
inc
fimull
push
dec
mov
cmp
sbb
shll
ss
xor
mov
inc
mov
ss
add
mov
cmp
sbb
rorb
inc
inc
mov
shlb
mov
add
mov
aaa
mov
inc
mov
cmp
mov
cmp
pusha
sbb
lret
inc
lret
adc
mov
jp
xor
inc
lret
adc
das
shrb
mov
cmp
xor
inc
in
inc
mov
das
cmp
xor
inc
ljmp
sub
das
cmp
xor
inc
mov
add
and
das
cmp
xchg
daa
das
das
cmp
cmpsb
pusha
sbb
mov
shrb
sbb
inc
lret
adc
das
shrb
mov
sbb
sbb
mov
das
inc
lret
sbb
adc
mov
jp
xor
inc
into
pop
ss
das
sarl
xor
pop
inc
inc
xorb
add
das
filds
push
mov
ds
cli
sbb
inc
ljmp
xchg
mov
ret
mov
xor
inc
or
sarb
lahf
mov
ficoms
pusha
cmp
sbb
rorb
xchg
mov
inc
loopne
ss
in
mov
aaa
mov
mov
xchg
mov
out
mov
xor
inc
or
or
mov
das
mov
cld
inc
mov
cld
inc
mov
sub
xor
inc
sbb
inc
mov
fdivrp
inc
mov
cmp
sub
dec
cmp
xor
mov
mov
movsl
nop
xor
xor
cmpsl
xor
xor
or
dec
xchg
and
aaa
test
xor
dec
cmp
sub
xchg
and
test
xor
adc
or
lock
xor
add
inc
sub
cld
xchg
and
ss
adc
cld
inc
sub
cld
xchg
and
ss
push
pusha
cld
inc
sbb
cld
inc
sub
cld
xchg
adc
xchg
and
xchg
cld
xor
adc
inc
cld
inc
sub
cld
xchg
and
ss
adc
cld
inc
sub
cld
xchg
and
ss
push
pusha
cld
inc
sbb
cld
inc
sub
cld
xchg
adc
xchg
and
xchg
cld
xor
add
inc
cld
inc
sub
cld
cmpsb
sub
sbb
aaa
mov
xor
sbb
sub
xchg
and
aaa
test
xor
dec
cmp
sub
xchg
and
inc
test
xor
cld
xchg
cld
xchg
and
cld
cmpsb
sub
or
cld
inc
cmp
lock
xor
xchg
cmpsb
mov
pop
ss
mov
out
in
out
mov
xor
inc
or
cld
inc
inc
fsubrl
cld
xchg
lods
xchg
xor
cld
xchg
int
repz
sub
das
cld
cmpsb
int
ljmp
shl
das
das
lods
xchg
lcall
xor
cmpsb
sbb
inc
fisubrl
dec
fidivs
xchg
fldl
xchg
sub
lock
xor
cld
xchg
cmpsl
xchg
xor
cld
xchg
cmpsl
repz
sbb
inc
lret
out
and
inc
xchg
int
cmp
hlt
les
xor
ret
mov
inc
or
mov
das
das
lods
das
add
das
das
das
inc
and
mov
sbb
inc
mov
das
mov
cld
inc
xor
cld
xchg
xor
xchg
mov
iret
sub
mov
ss
sbb
dec
adc
xchg
adc
xchg
rorl
fdivp
les
xor
xor
xchg
xor
repnz
mov
mov
mov
comiss
sbb
mov
ret
cld
inc
dec
mov
inc
mov
fiaddl
rcr
mov
das
das
lods
das
add
sub
inc
movsl
nop
xor
xor
xchg
movsl
xchg
xor
cld
xchg
lds
cld
cmpsb
lds
fimuls
ret
movsl
shl
das
das
scas
xchg
lcall
xor
cmpsb
sbb
inc
sbb
dec
adc
xchg
pop
inc
fstl
shl
les
xor
cld
xchg
cmpsl
xchg
xor
cld
xchg
cmpsl
repz
sbb
xor
sub
out
cmp
xchg
mov
ret
mov
inc
or
inc
mov
fmull
shrl
das
das
lods
xchg
xor
ficoms
xor
inc
fisubrl
cld
cmpsb
mov
inc
xchg
ss
mov
aaa
mov
dec
lahf
test
inc
iret
xor
xchg
sub
xor
cmpsb
and
out
xchg
mov
cld
inc
xor
mov
cmp
fiaddl
inc
mov
ret
push
cmp
inc
ss
ss
inc
inc
inc
pop
icebp
ljmp
inc
mov
ret
dec
cmp
inc
ss
pop
ljmp
aaa
or
mov
das
das
mov
das
das
inc
sbb
mov
xchg
adc
ss
aaa
sti
xor
xor
fiadds
inc
dec
test
inc
mov
nop
inc
ds
mov
nop
xor
inc
mov
mov
adc
dec
xor
xor
sub
mov
in
das
cmpsl
das
xchg
mov
ljmp
sbb
inc
mov
xchg
jecxz
mov
cmp
les
xor
sub
aad
pop
inc
fisubrl
inc
ljmp
pop
lock
xor
sub
jp
xor
xlat
ss
ficompl
dec
mov
ficoml
inc
mov
xchg
mov
rorl
push
nop
jp
xor
movsl
nop
jp
xor
inc
mov
ds
ds
ljmp
xor
xchg
aaa
adc
xor
mov
cltd
cmp
jp
xor
cmpsb
sbb
xor
out
out
ret
mov
xor
inc
or
or
mov
das
dec
lret
lret
lret
fisubrl
xor
xchg
xor
lret
pop
nop
push
inc
inc
inc
dec
inc
lret
adc
inc
inc
lret
inc
nop
inc
ret
mov
inc
or
or
das
das
inc
mov
icebp
comiss
inc
mov
xor
cmpsl
nop
jp
xor
sub
cmc
comiss
dec
cmp
mov
sti
comiss
inc
mov
mov
dec
mov
sub
stc
das
xor
stc
cmc
comiss
dec
cmp
xor
xor
mov
xor
inc
sbb
xchg
pop
ss
inc
sbb
mov
das
das
xor
add
comiss
dec
cmp
xor
xor
jmp
cmpsb
adc
ret
lcall
popf
mov
mov
mov
cltd
cmp
jp
xor
sbb
jmp
dec
cmp
jp
xor
movl
mov
roll
inc
mov
mov
mov
adc
sbb
roll
mov
or
mov
inc
lret
enter
adc
xor
popf
ret
ss
roll
xchg
iret
movl
rolb
ss
mov
shll
dec
inc
lret
mov
inc
sbb
add
sub
sbb
loope
mov
jp
xor
flds
dec
or
adc
xor
inc
mov
lret
iret
ss
cmpsb
rcrl
inc
sbb
dec
popf
mov
xor
inc
mov
mov
mov
inc
lret
mov
iret
dec
cmp
jp
xor
stos
stc
comiss
dec
cmp
sub
and
mov
sub
stc
inc
mov
iret
dec
cmp
jp
xor
stos
stc
comiss
dec
cmp
icebp
inc
mov
iret
dec
cmp
jp
xor
stos
stc
comiss
dec
cmp
out
mov
xor
inc
or
or
comiss
mov
inc
mov
inc
lret
mov
das
mov
das
das
mov
das
das
mov
das
das
mov
das
das
mov
das
das
mov
das
das
inc
mov
mov
das
das
inc
mov
inc
mov
fsubrl
xchg
int
mov
xor
ss
ss
inc
lret
int
iret
inc
mov
xor
inc
ljmp
inc
lret
fimull
mov
inc
lret
mov
loope
lret
int
mov
sub
dec
push
nop
jp
xor
xor
xor
or
adc
int
iret
xchg
aad
adc
sub
mov
mov
mov
inc
fiaddl
inc
mov
loope
lret
mov
inc
mov
roll
ss
mov
ss
aad
adc
sub
roll
mov
movl
mov
loope
lret
mov
ss
rcll
mov
sub
roll
inc
mov
movl
xchg
mov
push
nop
jp
xor
mov
loope
lret
mov
mov
ss
add
sub
das
inc
mov
shl
das
das
xchg
ss
mov
mov
sub
in
sub
mov
xchg
inc
mov
xchg
mov
sbb
movsl
sub
in
ret
mov
xor
inc
or
or
mov
das
mov
das
das
fdivrl
das
das
inc
mov
xor
xchg
mov
xor
shll
inc
aaa
sub
fisubrs
sbb
adc
comiss
mov
das
das
mov
das
das
inc
lret
int
mov
jp
xor
shll
inc
xchg
mov
inc
mov
mov
ljmp
xchg
mov
inc
dec
xor
mov
das
das
xor
and
comiss
dec
cmp
xor
inc
mov
mov
das
das
mov
inc
mov
das
inc
mov
xchg
int
iret
inc
lret
mov
add
mov
mov
cmp
mov
mov
xchg
mov
sbb
popf
lret
repnz
push
inc
mov
push
xchg
mov
mov
popf
cmp
roll
pop
jb
mov
push
xchg
mov
inc
lret
lret
mov
xor
mov
inc
lret
mov
mov
int
iret
dec
pop
inc
dec
bound
sub
mov
cmp
mov
xchg
mov
mov
dec
pusha
inc
mov
xchg
mov
mov
dec
pusha
inc
mov
pop
inc
nop
jp
xor
fimull
fbld
nop
das
das
das
pop
push
xor
and
comiss
sbb
sbb
add
das
das
inc
lret
mov
int
cmp
jp
xor
stos
mov
das
das
dec
cmp
in
ret
mov
xor
inc
or
or
xor
faddl
cmp
pop
fiadds
inc
cmp
add
das
das
dec
sub
inc
sahf
inc
loope
mov
or
pop
and
das
das
add
and
das
cmp
sbb
cmp
sub
das
add
sbb
inc
dec
cmp
sub
das
rolb
aad
das
das
cmp
cmpsb
pop
sbb
in
ret
mov
xor
push
pop
sbb
inc
or
or
xor
xor
xchg
inc
push
pop
push
cld
dec
lods
aad
inc
pop
mov
mov
pop
inc
cmp
sbb
xchg
ret
cld
inc
dec
mov
dec
cmp
sub
mov
das
das
ret
mov
xor
inc
or
dec
aaa
or
sub
dec
cmp
mov
cmp
xor
dec
lahf
mov
inc
roll
xchg
aad
fisubl
mov
xchg
shll
nop
xor
xor
sbb
cli
sub
xchg
ret
add
out
cld
cmpsb
lret
clc
dec
xchg
shrl
das
das
xchg
adc
lret
ljmp
adc
sahf
dec
lahf
inc
scas
repz
iret
sbb
ljmp
outsb
xor
mov
inc
dec
lahf
and
outsb
cmpsl
nop
xor
xor
xchg
cld
xchg
and
cmpsb
iret
sbb
out
das
mov
sbb
mov
pop
cmp
mov
inc
sbb
lahf
lds
test
xor
push
mov
das
mov
push
das
das
das
xchg
mov
in
out
mov
xor
and
mov
sub
das
cld
xchg
rcll
dec
pop
mov
cmc
fiaddl
aaa
or
fiadds
inc
mov
sbb
xchg
mov
xchg
xor
xor
das
sbb
dec
pop
das
das
dec
mov
inc
fidivs
mov
dec
aas
pop
xor
xor
mov
xor
inc
mov
xor
xor
mov
aas
and
mov
xor
xor
rorl
xor
xor
leave
dec
aas
lock
xor
rorl
xor
mov
xor
xor
loope
stc
xor
xor
inc
mov
shrl
das
das
inc
mov
cmp
shrb
and
adc
js
int3
push
in
pusha
and
icebp
inc
sub
shll
inc
lret
inc
sub
cmpsb
daa
push
ss
ljmp
mov
pop
ss
inc
sub
dec
lahf
test
cmpsb
in
pusha
push
ljmp
push
inc
test
inc
fisubrl
dec
ficoml
xchg
inc
mov
xor
inc
fucompp
inc
fisubrl
aaa
movsb
xor
inc
mov
add
sub
das
inc
lret
mov
cmp
sub
inc
mov
cmp
lret
flds
add
ljmp
ret
mov
xor
sbb
inc
mov
das
inc
int3
dec
inc
xor
dec
xchg
ret
mov
inc
mov
inc
dec
loope
xor
pop
push
lcall
xor
xor
inc
xor
mov
aaa
mov
dec
lahf
xor
repz
mov
icebp
xchg
mov
inc
xor
loope
xor
out
fiadds
inc
cmp
mov
inc
ss
repnz
mov
inc
xor
mov
bsr
xor
loope
xor
ss
or
or
cmp
xor
add
in
xchg
mov
add
inc
shr
mov
sbb
xor
jo
mov
add
sbb
inc
dec
cmp
sub
das
mov
xor
xor
sub
aaa
shrl
dec
popf
inc
xchg
shll
das
xor
xor
dec
xor
das
das
mov
sbb
pop
shr
ret
mov
inc
or
or
inc
mov
inc
inc
inc
loop
ss
rolb
mov
add
ljmp
sbb
push
mov
shll
ss
cmp
and
inc
lret
jb
cmpsb
mov
aaa
inc
cmp
xor
scas
xchg
lcall
and
dec
ss
mov
das
das
cmp
adc
dec
xchg
inc
adc
adc
inc
mov
xchg
and
lods
cmp
xor
das
sbb
dec
mov
sbb
das
aaa
cli
stc
xor
das
das
cmpsl
icebp
comiss
inc
ljmp
das
das
inc
ljmp
lods
nop
jp
xor
mov
ljmp
xor
xor
sbb
jp
xor
int
pop
inc
mov
das
inc
mov
mov
xchg
mov
sbb
dec
popf
lret
repnz
das
inc
lret
iret
ss
xor
dec
pop
dec
popf
mov
lret
roll
pop
jb
mov
das
xchg
mov
inc
lret
lret
mov
xor
mov
xchg
iret
ss
xor
dec
pop
dec
enter
lret
lret
iret
ss
pop
inc
enter
mov
mov
mov
xor
dec
mov
mov
inc
mov
mov
lret
mov
inc
lret
iret
dec
xor
ss
pop
dec
mov
inc
mov
pop
push
nop
jp
xor
xor
aaa
and
cmp
sub
mov
ret
sub
das
cmpsb
mov
mov
xor
add
das
sbb
dec
mov
adc
pop
inc
mov
cmp
add
dec
lret
das
roll
mov
xor
aaa
cli
shll
mov
das
das
inc
ljmp
das
das
inc
ljmp
ss
ljmp
xor
xor
sbb
jp
xor
int
pop
inc
mov
das
inc
mov
mov
xchg
mov
sbb
dec
popf
lret
repnz
das
inc
lret
iret
ss
xor
dec
pop
dec
popf
mov
lret
roll
pop
jb
mov
das
xchg
mov
inc
lret
lret
mov
xor
mov
xchg
iret
ss
xor
dec
pop
dec
enter
lret
lret
iret
ss
pop
inc
enter
mov
mov
mov
xor
dec
mov
mov
inc
mov
mov
lret
mov
inc
lret
iret
dec
xor
ss
pop
dec
mov
inc
mov
pop
push
nop
jp
xor
xor
aaa
and
cmp
sub
test
mov
rolb
mov
add
das
das
inc
mov
cmp
mov
xor
sbb
mov
mov
xor
mov
mov
das
inc
ljmp
das
das
inc
ljmp
or
mov
inc
ljmp
jp
xor
pop
xor
xor
sbb
jp
xor
int
pop
inc
cmp
mov
mov
xchg
mov
sbb
dec
popf
lret
repnz
das
inc
lret
iret
ss
aaa
nop
jp
xor
rorl
push
dec
popf
lret
roll
pop
jb
mov
das
xchg
mov
inc
lret
lret
mov
xor
mov
xchg
iret
ss
aaa
nop
jp
xor
shll
inc
lret
lret
iret
ss
pop
inc
dec
push
inc
mov
mov
mov
xor
dec
mov
cmp
mov
mov
lret
dec
push
inc
lret
iret
dec
aaa
nop
jp
xor
int
mov
dec
push
inc
mov
imul
out
xchg
out
dec
aaa
nop
jp
xor
dec
das
das
das
inc
ljmp
add
das
sbb
insl
sbb
das
inc
lret
mov
lret
ljmp
rorl
daa
das
das
out
inc
mov
mov
xor
inc
or
rolb
inc
aaa
jo
mov
xor
inc
sub
inc
mov
inc
pusha
inc
mov
inc
inc
inc
mov
inc
xor
mov
inc
lret
ret
ret
cmp
xor
rolb
das
shll
cli
and
inc
mov
cmp
mov
sbb
add
mov
out
mov
inc
inc
mov
inc
xor
sub
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
mov
sub
movzbl
mov
add
mov
mov
xor
mov
mov
and
mov
leave
ret
push
mov
sub
mov
mov
or
mov
mov
movzbl
or
mov
mov
movzbl
or
mov
leave
ret
push
mov
sub
mov
movzbl
and
mov
cmp
mov
mov
sbb
mov
mov
or
mov
leave
ret
push
mov
sub
mov
mov
xor
mov
mov
mov
xor
mov
mov
or
leave
ret
push
mov
sub
movl
mov
mov
or
mov
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
cmp
mov
adc
mov
movl
cmpl
jae
mov
mov
xor
mov
mov
mov
sbb
mov
mov
or
movzbl
mov
or
mov
mov
mov
push
mov
and
mov
push
mov
cmp
ja
mov
or
jmp
mov
mov
adcb
movzbl
sub
xor
mov
add
cmp
je
mov
test
mov
sbb
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
mov
mov
mov
mov
add
cmpl
movl
movb
je
mov
mov
or
mov
mov
mov
xor
add
mov
cmp
mov
sbb
mov
xor
sub
mov
sub
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
pushl
movl
cmpl
jbe
mov
xor
mov
mov
or
pushl
mov
mov
pushl
call
mov
mov
mov
xor
cmp
xorl
adcl
xorl
add
mov
mov
xor
add
mov
mov
jmp
mov
xor
test
mov
adc
mov
pop
add
pop
leave
ret
push
mov
push
mov
push
movl
cmpl
jg
mov
movl
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
push
lea
and
mov
mov
imul
imul
mov
lea
and
mov
or
xor
mov
mov
cmp
jne
mov
mov
jmp
cmp
jne
movl
cmpl
jle
mov
mov
adcb
mov
mov
and
mov
mov
movzbl
add
mov
mov
movzbl
sub
mov
mov
xor
xor
lea
xor
movzbl
movzbl
and
mov
mov
imul
mov
and
mov
xor
add
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
mov
dec
mov
mov
imul
lea
and
mov
or
cmp
jne
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
ret
push
mov
sub
mov
movzwl
sub
mov
cmp
mov
mov
adc
cmp
movzwl
mov
sbb
mov
leave
ret
push
mov
sub
movl
movl
movl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
mov
dec
mov
jmp
mov
movl
cmpl
jge
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
xor
push
cmp
lea
mov
mov
mov
adc
mov
add
mov
mov
mov
xor
mov
mov
mov
mov
push
movzbl
xor
mov
pop
sub
add
cmpl
mov
mov
pop
jne
mov
xor
add
leave
ret
push
mov
sub
movl
movl
cmp
mov
mov
adc
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
xor
movl
cmpl
jbe
mov
add
mov
movl
mov
xor
mov
xor
add
mov
mov
mov
lea
push
mov
xor
orl
add
mov
push
pushl
add
pushl
subl
push
push
mov
mov
subl
andl
addl
pushl
pushl
call
add
leave
ret
push
mov
sub
movl
mov
movl
cmpl
jae
mov
mov
xor
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
push
push
call
mov
dec
mov
jmp
mov
incl
mov
mov
mov
mov
and
shl
push
cmpl
jne
mov
mov
and
jmp
mov
mov
sub
mov
mov
add
mov
mov
mov
mov
mov
sub
mov
mov
shl
cmpl
jne
movzbl
and
mov
jmp
movzwl
sub
mov
mov
sub
mov
mov
mov
shl
mov
mov
mov
shl
mov
cmp
movzwl
mov
adc
mov
mov
mov
mov
mov
mov
mov
and
mov
mov
dec
not
and
mov
mov
lea
mov
mov
mov
mov
sub
mov
jmp
movl
cmpl
jae
movzbl
adc
mov
or
mov
sub
mov
mov
mov
mov
mov
sub
mov
sub
xor
cmp
mov
mov
mov
jne
mov
pop
leave
ret
movl
movl
movl
movl
mov
ret
push
mov
sub
push
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
movl
cmpl
jle
movl
movl
mov
push
mov
not
mov
push
mov
xor
mov
add
mov
movl
call
test
je
call
mov
mov
xor
add
mov
cmp
mov
mov
adc
mov
mov
movl
mov
movl
cmp
jnp
mov
inc
mov
jmp
movzwl
xor
mov
mov
or
mov
mov
cmp
sbbl
andl
adcl
xor
add
mov
cmp
adcl
xorl
adcl
mov
mov
xor
mov
add
mov
cmp
je
cmp
jp
mov
mov
sub
mov
jmp
mov
mov
xor
mov
mov
mov
and
mov
mov
xor
add
imul
cmp
movzwl
adc
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
movl
cmpl
jg
mov
rorb
cmp
movzwl
sbb
mov
mov
mov
mov
xor
add
cmp
jne
movzbl
mov
xor
mov
movzbl
xor
add
add
mov
sub
mov
mov
mov
movzbl
xor
add
cmp
addl
andl
adcl
imul
movzbl
sub
mov
jmp
mov
mov
and
mov
mov
movzbl
xor
sub
sub
mov
or
mov
mov
mov
xor
add
ror
mov
and
mov
mov
mov
xor
add
imul
xor
add
imul
mov
xor
cmp
mov
movzbl
sbb
mov
mov
xor
cmp
jbe
mov
or
mov
jmp
movzwl
ror
mov
movzbl
sub
add
imul
incb
mov
mov
xor
add
imul
add
mov
mov
xor
add
imul
decb
movl
cmpl
jge
mov
xor
lea
xor
xor
cmp
movl
andl
adcl
mov
add
cmp
jne
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
mov
mov
rcl
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
push
pop
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
call
cmpl
jb
mov
test
jne
movl
cmpl
ja
mov
shl
mov
mov
or
mov
mov
xor
add
mov
inc
cmp
jb
cmp
jge
movzwl
sub
jmp
mov
mov
xor
movzbl
xor
mov
mov
push
push
xor
cmp
jne
call
mov
mov
mov
cmp
mov
adc
xor
lea
mov
sub
mov
mov
mov
sub
mov
xor
mov
jmp
andl
sbbl
sbbl
add
inc
movzwl
mov
xor
mov
cmp
jne
test
je
push
pop
mov
mov
orb
mov
mov
sub
sub
mov
xor
cmp
sbbl
add
mov
dec
jne
mov
mov
mov
mov
pop
pop
leave
ret
push
xor
inc
mov
cmp
je
mov
cmp
jbe
dec
mov
jmp
test
jne
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
mov
xor
mov
div
lea
mov
cmp
jne
push
push
call
mov
add
cmp
jne
pop
ret
push
push
movl
call
cmp
je
push
mov
cmp
jae
test
je
movl
cmpl
je
cmpl
jne
push
push
push
pushl
pushl
pushl
pushl
push
call
mov
dec
mov
jmp
mov
xor
mov
div
lea
mov
jmp
test
jne
mov
jmp
dec
mov
cmp
jne
pop
ret
push
mov
sub
mov
movl
movl
movl
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
push
movl
cmpl
jl
movzwl
add
mov
and
mov
push
orl
adcl
xorl
mov
push
lea
mov
pushl
pushl
call
mov
mov
mov
xor
mov
mov
xor
mov
add
cmp
je
mov
jmp
push
pushl
push
pushl
call
lea
mov
mov
mov
sub
lea
mov
mov
mov
mov
xor
add
mov
xor
mov
mov
sub
pop
add
pop
pop
leave
ret
push
mov
and
sub
push
push
movl
lea
movl
push
mov
call
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
push
pushl
call
mov
dec
mov
jmp
mov
movl
cmpl
jb
movzbl
mov
add
mov
lea
mov
mov
mov
add
movl
mov
mov
mov
or
mov
mov
mov
test
jne
mov
mov
cmpl
je
push
push
add
push
pushl
pushl
call
add
mov
mov
test
je
movl
mov
jmp
cmp
je
mov
mov
xor
xor
xor
add
lea
div
push
push
shl
mov
call
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
pop
pop
test
je
mov
pushl
push
push
push
push
pushl
pushl
call
movl
cmpl
ja
mov
inc
mov
movzbl
add
mov
mov
neg
mov
add
mov
movl
cmp
jne
mov
mov
push
pushl
cmp
mov
sbb
mov
call
mov
jmp
cmp
jne
mov
mov
cmp
subl
orl
adcl
push
push
push
push
push
pushl
call
add
mov
mov
cmpl
jge
mov
or
jmp
movzwl
shr
mov
movzbl
xor
dec
xor
mov
xor
mov
add
jne
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
call
cmpl
jb
mov
movzwl
or
mov
mov
mov
xor
xor
xor
add
add
div
shl
mov
pushl
pushl
call
lea
movl
cmpl
je
xor
mov
mov
push
cmp
je
mov
xor
jmp
mov
shl
mov
mov
and
xor
pop
div
cmp
jbe
mov
sub
mov
mov
xor
inc
xor
mov
cmp
jne
pop
xor
pop
inc
pop
mov
pop
ret
push
mov
push
push
mov
movl
movl
cmp
je
cmpl
jne
push
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
cmp
jg
lea
mov
mov
mov
sbb
jmp
mov
movzwl
sbb
mov
movzbl
mov
add
mov
mov
movl
cmpl
jle
mov
xor
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
call
push
pushl
pushl
pushl
call
jmp
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
lea
cmp
mov
mov
adc
mov
mov
movzwl
mov
xor
mov
mov
mov
mov
add
cmp
mov
movzwl
adc
mov
pop
mov
lea
mov
mov
mov
sub
mov
mov
mov
xor
mov
mov
shr
mov
mov
xor
leave
ret
push
mov
sub
mov
mov
push
lea
mov
mov
mov
and
push
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
movl
cmpl
jg
xor
mov
mov
and
mov
push
movl
cmp
jbe
movzbl
mov
xor
mov
jmp
movzwl
movzwl
or
mov
mov
movzbl
or
mov
add
movl
mov
mov
mov
mov
sub
mov
xor
mov
mov
and
mov
add
mov
movzwl
mov
xor
mov
mov
mov
cmp
mov
mov
sbb
mov
mov
mov
mov
mov
xor
mov
lea
mov
lea
mov
sub
mov
lea
mov
mov
subb
mov
lea
mov
lea
mov
lea
mov
xor
mov
lea
mov
sub
mov
lea
mov
lea
mov
lea
movzwl
or
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
cmp
movl
xorl
adcl
mov
mov
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
mov
lea
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
lea
add
mov
movl
cmpl
jne
mov
mov
xor
mov
or
mov
mov
mov
or
mov
mov
mov
mov
mov
or
mov
movl
movzbl
mov
or
mov
mov
mov
movl
mov
pushl
mov
push
push
lea
push
mov
mov
pushl
pushl
call
push
push
lea
push
mov
mov
pushl
pushl
call
lea
mov
mov
movzbl
sub
mov
mov
mov
mov
xor
xor
lea
xorl
subl
add
cmp
je
mov
cmp
mov
mov
adcb
mov
xor
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
movl
cmpl
jge
mov
mov
xor
add
mov
pop
pop
pop
leave
ret
push
mov
sub
lea
mov
mov
movl
cmpl
jle
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
test
jne
xor
leave
ret
mov
mov
add
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
sbbl
andl
test
je
mov
add
mov
mov
mov
mov
sub
mov
mov
mov
lea
mov
mov
xor
mov
mov
cmp
mov
adc
mov
xor
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
mov
movl
cmpl
je
add
lea
movzwl
or
mov
mov
mov
mov
subb
mov
xor
mov
mov
movzbl
inc
mov
mov
add
movzbl
sub
mov
lea
mov
mov
mov
rol
mov
mov
xor
mov
mov
cmp
mov
adc
mov
add
mov
mov
cmp
jbe
mov
jmp
mov
mov
mov
lea
mov
mov
movzwl
or
mov
mov
mov
xor
test
mov
shl
mov
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
push
call
cmpl
jb
add
mov
add
mov
mov
lea
movzwl
or
mov
mov
mov
mov
sub
mov
xor
movl
cmpl
je
mov
mov
mov
add
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
movl
xor
inc
leave
ret
push
mov
sub
push
push
call
cmp
jle
xor
jmp
push
push
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
mov
lea
call
lea
lea
call
movl
cmpl
ja
mov
adc
mov
mov
add
xor
mov
rcr
mov
mov
call
mov
call
movzwl
sub
mov
mov
call
mov
call
lea
mov
xor
mov
mov
mov
orl
lea
call
mov
mov
call
mov
mov
subl
xorl
call
mov
mov
call
mov
mov
call
mov
mov
and
mov
mov
call
call
pop
pop
test
je
call
mov
movzwl
or
mov
mov
mov
mov
mov
rorb
mov
xor
mov
mov
mov
imul
mov
mov
add
mov
mov
leave
ret
call
test
je
push
call
push
mov
sub
movl
lea
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
movl
movl
movl
movl
movl
mov
mov
movl
call
test
je
push
push
push
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
movl
cmpl
jg
lea
mov
mov
mov
adc
mov
mov
adc
mov
movzwl
mov
sbb
mov
mov
mov
add
jmp
cmp
jne
lea
mov
call
mov
mov
mov
xor
mov
mov
xor
movl
addl
xorl
xor
sub
sub
xor
cmp
jne
pop
pop
pop
leave
ret
push
mov
push
push
movl
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
movl
movl
cmpl
jge
mov
rolb
mov
addb
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jl
movzbl
adc
jmp
mov
and
mov
mov
or
pushl
mov
mov
pushl
lea
push
call
call
test
je
cmp
mov
mov
adc
mov
mov
mov
sub
mov
addl
jmp
mov
mov
add
mov
mov
mov
movzwl
or
mov
mov
lea
mov
mov
test
mov
sbb
add
mov
mov
mov
leave
ret
push
mov
sub
mov
mov
movl
movl
movl
cmpl
jle
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
mov
mov
movl
mov
mov
xor
mov
or
mov
add
mov
mov
xor
add
mov
mov
push
mov
xor
xor
sub
mov
cmp
mov
mov
adc
mov
mov
sub
xor
cmp
mov
mov
mov
jne
push
push
movl
mov
movzbl
movzbl
sub
mov
mov
xor
mov
add
mov
lea
mov
mov
mov
xor
mov
xor
mov
mov
add
xor
movzwl
add
cmp
ja
movl
mov
lea
mov
mov
movzbl
sub
add
mov
mov
movl
cmpl
ja
movzwl
mov
and
mov
mov
mov
xor
mov
add
movzwl
cmp
jne
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
mov
not
mov
mov
xor
add
imul
cmp
mov
sbbb
mov
lea
mov
mov
mov
or
mov
mov
mov
xor
add
imul
mov
mov
mov
add
mov
cmp
mov
sbb
mov
mov
mov
mov
mov
movzbl
sub
mov
xor
movzwl
push
cmp
mov
sar
mov
mov
mov
call
test
jne
mov
xor
add
movzbl
test
andl
adcl
subl
push
mov
call
test
je
movzwl
rol
mov
mov
mov
cmp
adcl
push
call
test
jne
movl
cmpl
jg
movl
mov
lea
mov
mov
mov
sub
mov
xor
lea
mov
xor
xor
mov
mov
and
xor
mov
lea
mov
xor
mov
add
movzwl
cmp
jbe
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
movl
mov
mov
sub
mov
mov
mov
xor
cmp
movl
sbbl
xor
lea
xor
mov
add
mov
mov
mov
mov
xor
mov
mov
mov
rolb
mov
xor
add
imul
mov
cmp
adcl
andl
movzbl
mov
sub
xor
cmp
jne
movl
cmpl
je
mov
mov
add
mov
mov
xor
lea
mov
jmp
mov
cmp
mov
mov
jne
mov
movl
andl
xor
sub
add
mov
mov
mov
xor
add
cmp
je
mov
cmp
mov
mov
adc
mov
xor
lea
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
mov
mov
cmp
movl
andl
sbbl
sub
xor
cmp
je
pop
pop
movl
cmpl
jge
mov
xor
add
xor
cmp
pop
je
mov
xor
add
mov
cmp
mov
jne
mov
and
mov
xor
cmp
mov
adc
mov
sub
add
mov
mov
mov
mov
leave
ret
push
mov
sub
push
push
mov
push
movl
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
call
test
je
cmp
je
mov
cmpl
je
cmpl
jne
mov
jmp
cmp
je
movl
cmpl
jle
mov
sub
mov
mov
add
xor
cmp
je
mov
cmp
jne
mov
mov
andb
mov
xor
add
cmp
jbe
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
addl
mov
cmp
jae
cmpl
jge
mov
or
mov
jmp
mov
adc
mov
movzbl
and
mov
lea
mov
cmp
mov
mov
adc
mov
lea
mov
lea
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
sub
mov
mov
mov
movzwl
sub
xor
orl
xor
add
dec
cmp
ja
addl
mov
mov
add
mov
andl
mov
xor
add
imul
movzwl
mov
lea
mov
movl
cmpl
jbe
mov
or
mov
mov
xor
movzwl
xor
mov
mov
xor
add
imul
mov
mov
movzwl
or
lea
mov
mov
add
mov
shl
mov
mov
mov
mov
mov
add
mov
lea
push
pushl
mov
pushl
call
cmpl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
pushl
push
push
call
jmp
mov
xor
inc
xor
mov
jmp
movl
cmpl
jbe
movzwl
mov
and
mov
mov
mov
sub
mov
mov
add
xor
mov
mov
cmp
je
mov
xor
add
cmp
jl
mov
sbb
jmp
lea
mov
mov
mov
add
mov
movzwl
sub
mov
mov
mov
mov
mov
mov
add
mov
imul
mov
mov
mov
mov
mov
cmp
adcl
orl
sbbl
imul
xchg
sub
sub
cmp
jne
mov
mov
mov
mov
movzbl
or
mov
mov
lea
mov
mov
andb
mov
mov
xor
add
imul
add
mov
incl
mov
mov
cmp
jne
jmp
mov
call
mov
mov
mov
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
push
push
cmp
movl
movl
mov
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
xor
add
leave
ret
push
mov
push
push
cmp
movl
movl
mov
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
mov
xor
add
leave
ret
push
mov
sub
mov
mov
add
mov
mov
mov
sub
mov
mov
and
leave
ret
push
mov
sub
movzbl
mov
and
mov
movzbl
or
mov
mov
movzbl
add
mov
leave
ret
push
mov
sub
mov
mov
or
cmp
mov
mov
adc
mov
mov
mov
and
mov
leave
ret
push
mov
sub
mov
mov
and
mov
mov
sub
mov
mov
xor
leave
ret
arpl
xor
aaa
xor
xor
dec
and
dec
addr16
xor
xor
dec
insb
bound
and
push
dec
xor
xor
pop
xor
insl
and
push
data16
and
add
add
inc
mov
add
add
mov
add
add
add
add
add
add
add
test
add
add
dec
insl
add
or
add
insb
add
mov
arpl
add
pop
cmp
add
cmp
add
add
fnsave
add
jo
add
jno
add
add
cmp
jno
add
add
add
add
add
add
add
add
add
dec
jns
push
xor
gs
add
push
jp
jo
arpl
pop
pop
inc
inc
pop
inc
push
inc
dec
dec
inc
pop
add
gs
pop
fs
insl
jbe
inc
inc
pop
inc
dec
push
inc
pop
dec
dec
inc
pop
add
push
push
dec
push
pop
pop
insl
pop
pop
inc
inc
inc
inc
pop
inc
inc
dec
dec
inc
pop
add
jb
insb
gs
addr16
imul
push
push
inc
dec
pop
jae
inc
pop
inc
push
inc
dec
push
inc
dec
inc
pop
add
dec
pop
inc
dec
dec
dec
push
inc
inc
pop
inc
dec
inc
inc
pop
add
bound
outsb
outsl
inc
push
dec
pop
popa
pop
insl
pop
insl
inc
pop
pop
push
dec
inc
inc
pop
inc
inc
push
inc
inc
inc
pop
add
dec
pop
pop
jns
push
outsl
ja
js
pop
pop
inc
inc
inc
pop
inc
push
inc
inc
inc
dec
inc
pop
add
jns
imul
push
pop
pop
push
jae
pop
inc
push
dec
push
pop
inc
pop
inc
inc
pop
inc
dec
inc
dec
inc
pop
add
popa
pop
addr16
pop
pop
dec
dec
inc
push
pop
pop
push
push
pop
inc
inc
pop
inc
pop
dec
dec
inc
pop
add
and
mov
add
add
add
xor
add
xchg
addb
adc
add
enter
lock
cmp
add
clc
addb
push
addl
insb
adc
add
addl
add
add
add
add
add
mov
add
mov
add
sub
add
addl
add
add
insb
addl
add
addl
add
addl
add
addl
add
add
add
addb
xor
add
inc
addb
dec
addb
addb
jp
add
nop
addb
movsb
addb
mov
addb
fadds
add
incb
add
push
addl
xor
add
add
add
pusha
addl
add
add
jbe
add
mov
add
add
add
or
push
jo
inc
add
dec
push
inc
push
dec
cs
insb
add
inc
imul
or
je
imul
outsb
add
orb
gs
popa
jae
inc
jb
outsl
jb
js
add
pop
dec
jae
imul
popa
bound
add
inc
insb
addr16
je
insl
dec
outsb
je
mov
bound
outsb
jne
je
insl
add
mov
gs
arpl
arpl
push
inc
gs
jb
jns
jne
jae
jb
inc
pop
inc
gs
gs
popa
addr16
imul
inc
jno
popa
insb
push
arpl
pop
inc
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
inc
add
inc
gs
gs
outsl
popa
jb
dec
popa
jns
jne
dec
imul
push
xor
cs
insb
add
mov
bound
inc
gs
je
insl
dec
popa
insl
gs
add
bound
dec
outsl
jbe
inc
imul
add
insb
gs
sub
dec
outsb
je
jb
outsl
arpl
fs
js
push
inc
fs
sub
dec
outsb
je
jb
outsl
arpl
fs
js
push
add
inc
gs
jne
jb
outsb
je
push
dec
add
mov
popa
je
dec
popa
insl
gs
imul
add
je
jne
jb
outsb
je
jb
arpl
jae
add
je
jb
arpl
jae
dec
add
popa
insb
push
gs
insb
insb
outsl
arpl
add
popa
insb
imul
addr16
jb
jne
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
dec
push
push
outsl
insb
jns
outsl
outsb
add
add
jb
popa
je
inc
jb
jae
dec
outsb
imul
push
inc
gs
imul
dec
jb
inc
js
add
push
gs
bound
je
jb
arpl
add
add
jb
popa
je
inc
dec
inc
push
arpl
outsb
add
inc
inc
dec
xor
cs
insb
add
add
imul
je
insb
insb
cs
insb
add
dec
insl
popa
addr16
imul
je
outsl
jns
cmp
dec
insl
popa
addr16
imul
dec
arpl
add
add
popa
addr16
imul
dec
arpl
push
imul
inc
push
dec
xor
cs
insb
and
dec
xor
aaa
add
push
dec
cmp
cmp
and
add
add
je
xor
pop
pop
xor
ss
push
aaa
pop
cmp
inc
add
nop
inc
add
inc
add
nop
inc
add
add
sbb
adc
add
add
inc
nop
inc
add
add
inc
add
add
add
inc
add
add
add
add
cwtl
cmp
pusha
nop
inc
add
add
inc
iret
pushl
add
and
add
adc
add
loopne
jmp
fdivrp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
decl
inc
add
inc
add
add
mov
inc
add
inc
add
inc
add
jmp
add
loopne
inc
add
xchg
inc
add
nop
inc
add
nop
inc
add
nop
inc
add
nop
inc
add
nop
inc
add
add
add
add
add
add
add
std
loope
sub
loop
je
out
sub
call
and
out
loope
sar
lds
les
out
es
loope
sub
loop
je
out
sub
call
push
std
out
loope
sar
lds
les
out
es
loope
adc
loop
and
out
jae
jmp
loope
out
inc
xor
xor
aaa
inc
daa
push
es
in
sub
std
in
jae
out
and
ljmp
inc
les
push
aaa
push
daa
pusha
es
sub
std
in
jae
out
push
std
ljmp
push
les
popa
aaa
pusha
daa
jo
ja
pop
std
loope
jne
loop
and
out
push
std
jmp
loope
in
inc
arpl
bound
aaa
jo
andb
in
pop
std
loope
jne
loop
daa
std
out
add
call
inc
jae
jb
xorl
xchg
in
pop
std
loope
jne
loop
adc
out
jne
jmp
loope
out
inc
add
xor
aaa
nop
daa
mov
pop
std
loope
jne
loop
adc
out
jae
jmp
loope
in
inc
xchg
les
daa
mov
mov
adc
loope
add
loop
jno
in
loope
in
lds
aaa
mov
shlb
daa
shlb
xlat
in
and
loope
or
jecxz
adc
in
jb
call
inc
ret
aaa
shlb
loopne
out
incb
add
xchg
inc
add
nop
inc
add
nop
inc
add
add
push
xchg
jns
inc
add
add
add
das
sbb
sbb
push
fs
push
adc
add
inc
inc
add
pop
add
jne
add
push
add
gs
push
add
inc
add
jne
push
add
add
inc
add
dec
add
add
add
cmpsb
add
add
push
add
ss
add
test
mov
popl
jl
addl
add
xchg
inc
xchg
xchg
xchg
xchg
xchg
xchg
pop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cmpsb
add
add
push
add
ss
add
test
mov
popl
jl
addl
add
xchg
inc
xchg
xchg
xchg
xchg
xchg
xchg
pop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
and
add
aad
and
or
add
dec
add
add
add
add
imul
add
add
add
dec
add
add
add
add
jns
add
jns
add
imul
outsl
add
dec
add
inc
add
imul
add
add
add
cmp
inc
add
out
lcall
inc
add
out
call
add
out
pushl
inc
add
out
call
jb
loope
add
jbe
adc
add
pop
add
pop
add
jbe
push
and
add
and
push
outsl
push
push
pop
push
and
lods
add
add
add
loope
jae
loop
or
in
jne
out
pop
std
out
push
std
jmp
inc
adc
adc
incb
add
add
add
and
push
pop
inc
lods
add
add
gs
xor
add
inc
push
imul
jne
imul
inc
imul
inc
dec
add
add
jbe
add
adc
xchg
or
xchg
add
popa
jae
data16
jle
js
sahf
out
pushf
in
pushf
add
sahf
stos
std
popa
xor
in
incb
add
pop
inc
add
std
add
jae
paddw
xor
loope
add
push
std
add
std
xor
loope
jb
or
or
std
jno
or
loope
adc
push
adc
adcl
adc
jecxz
repz
xor
aaa
adc
xor
cmp
cmp
sub
xor
xor
xchg
xor
adc
xchg
and
jbe
push
cmc
jns
inc
aaa
pop
ja
sbb
mov
mov
xlat
xor
mov
jg
iretw
repz
int
mov
xchg
add
add
gs
and
dec
pop
xor
cmp
pop
insb
xor
inc
jne
jno
jbe
push
imul
xor
jno
inc
inc
push
xor
ja
xor
dec
xor
insl
cmp
imul
add
add
xor
aaa
and
sub
add
xor
jno
xor
add
outsb
xor
sub
inc
xor
aaa
js
inc
and
jp
jp
push
pop
and
jp
add
arpl
xor
cmp
xor
data16
jb
add
insb
and
xor
add
add
xor
xor
add
xor
imul
push
push
push
fs
cmp
insb
add
push
and
xor
imul
jno
xor
dec
js
imul
dec
push
imul
push
xor
add
ss
dec
xor
xor
pop
cmp
and
push
push
add
and
push
add
jbe
addr16
add
inc
mov
add
add
add
add
add
add
add
pop
cmp
pushf
xchg
lcall
jb
lods
lods
sub
push
aaa
sbb
popa
fs
sbb
mov
out
xchg
xchg
ja
xchg
ljmp
stos
dec
popf
nop
ficoml
pushf
xor
stc
scas
adc
mov
movsb
stos
insb
dec
jb
aam
sub
cmc
imul
shr
xchg
pop
push
xor
dec
out
data16
jmp
rcrl
add
jecxz
aad
mov
xor
jno
ss
mov
cltd
shlb
mov
xor
call
loopne
aam
int3
sbb
lock
das
push
cs
cmp
or
xlat
ss
xchg
fimull
nop
xor
mov
pop
pop
mov
sti
ja
addr16
xchg
cs
xor
jmp
ss
and
enter
push
jg
cwtl
dec
ret
mov
stos
adc
sub
inc
popa
jl
sbb
dec
push
mov
dec
cmp
dec
dec
sbb
push
shll
xor
xchg
sub
inc
mov
adc
adc
mov
mov
inc
mov
xor
cmp
or
call
pop
push
sub
movsb
ja
cmp
inc
cwtl
push
mov
in
out
addr16
mov
pop
fildl
push
outsl
pop
xor
js
xchg
push
xor
fsubl
mov
mov
clc
or
scas
add
cmc
pop
popa
addl
lods
inc
sub
mov
xchg
stos
pop
loopne
jbe
cli
rolb
lcall
sti
movsl
repz
jo
roll
cmp
add
orl
int
or
mov
dec
rorl
push
iret
sbb
je
xchg
leave
xor
push
std
rol
out
sub
mov
xchg
sub
mov
lea
sub
pop
jne
lret
push
fildl
xor
adcl
xchg
cmp
xchg
pop
mov
mov
out
fwait
sub
push
push
imul
call
setl
test
xchg
xchg
fstpt
fs
and
and
imul
lahf
out
adc
cmpsb
push
js
pcmpeqb
add
dec
inc
aad
fcmovbe
lret
push
push
adc
inc
add
adc
les
fdivs
jle
jo
push
adc
jae
add
sub
dec
sbb
insl
cmp
push
jecxz
add
sbb
fstpt
pop
push
popfw
xlat
rcl
scas
jmp
mov
jno
rcll
xchg
imul
sub
add
adc
cli
adc
cmp
cmp
loope
mov
or
xor
loopew
aaa
cmp
add
inc
pop
notl
cmp
repnz
cmp
jnp
arpl
jecxz
push
ret
mov
sbb
jmp
in
fisttps
out
nop
mov
xchg
add
push
cmpsb
mov
jge
mov
jge
and
or
adc
jl
adc
scas
jge
aas
cmp
cmp
loop
in
or
loope
pop
fcompl
xchg
je
test
ja
popa
add
xor
stos
fldcw
push
adc
push
rolb
sub
scas
push
es
pushl
inc
xorl
jmp
push
xchg
mov
sbbb
cmc
js
call
add
jne
mov
stc
test
mov
add
sbb
pushf
add
shrl
cmp
mov
mov
addr16
rcll
scas
jae
popf
dec
and
ret
sbb
aaa
jnp
divl
push
fdivs
rorl
push
clc
dec
insl
jb
inc
xor
std
sbb
or
int
das
fisubl
xchg
call
insl
adc
std
pushf
mov
jns
add
push
subl
jo
sti
and
loop
and
fcoms
add
call
push
push
pop
das
cmp
in
jb
rcll
fistpl
sub
cli
fdivrl
xchg
lahf
add
add
ja
lret
aas
shlb
fldenv
cmp
popf
arpl
mov
push
pusha
data16
clc
mov
dec
push
hlt
mov
xor
pop
lock
push
mov
lock
adc
gs
mov
lock
sbb
sbb
mov
adc
and
subl
sysret
or
xchg
xchg
ret
out
call
inc
ljmp
pop
or
mov
jl
jns
es
sub
jg
loope
inc
gs
add
gs
shlb
mov
cmp
xchg
xor
jnp
sar
mov
jo
pop
shlb
xchg
pusha
sub
xlat
jp
pop
lods
sub
outsb
mov
addl
outsl
xor
xor
mov
in
scas
loop
push
cmp
pop
cs
cmpsb
xor
pop
add
int3
nop
pop
pushf
sbb
xor
sub
lods
in
movsl
mov
add
xor
ja
inc
test
js
dec
or
adcb
rcrb
mov
in
mov
cmp
dec
mov
test
int
lock
jno
nop
and
test
mov
rep
jae
loopne
pop
adc
cmp
mov
push
pusha
mov
mov
int3
jmp
sub
fcom
imull
inc
cmp
sub
jns
das
loop
sbb
shrl
mov
sub
push
das
into
enter
jo
pop
cltd
dec
and
jecxz
push
out
inc
mov
xchg
mov
or
fstl
mov
ds
fbstp
push
clc
ficompl
xor
push
lods
add
pushf
jl
data16
add
sbb
add
fistpl
jmp
mov
dec
push
push
pop
sub
lock
pop
mov
pop
push
daa
cwtl
lret
std
shrl
fidivs
jl
xchg
sbb
addb
fldt
push
and
push
adc
pop
add
push
rclb
mov
fcoml
repnz
cmpsb
dec
sub
pop
jle
jle
inc
lods
pop
add
adc
dec
pop
pop
xor
xor
scas
lahf
inc
inc
lods
adc
icebp
fwait
jns
mov
cmpsb
pop
pusha
push
pop
es
ret
cmp
shlb
shrl
push
inc
add
sub
inc
lret
mov
or
xchg
sbb
pop
jge
sarb
aas
lea
cmp
icebp
jle
shlb
xchg
sti
test
andb
xchg
lods
or
xchg
movb
push
rclb
push
mov
add
out
ljmp
lcall
adc
jmp
and
mov
icebp
inc
jl
in
outsl
xlat
inc
loop
push
xchg
xchg
in
dec
sub
scas
dec
lods
bound
jne
dec
mov
subb
mov
jl
mov
sbb
xor
and
inc
or
xor
adc
mov
imul
dec
mov
aaa
out
ret
enter
insl
ja
cli
outsb
xor
mov
mov
mov
jno
adc
lods
cmp
insb
mov
stc
sbb
jb
icebp
pop
push
sbb
jge
mov
leave
xor
nop
lea
sbb
or
dec
xchg
cmp
fcmovb
pop
arpl
inc
rcrl
dec
and
test
and
ja
int3
sbb
aaa
outsb
iret
adc
test
xchg
stos
aam
cmp
push
in
xor
ja
mov
shrl
pop
xchg
inc
aas
cmc
add
add
je
mov
pop
and
movsb
mov
arpl
lock
dec
push
sarb
xchg
push
lret
inc
sbb
inc
ret
jle
js
repnz
andl
mov
outsl
imul
pop
int
test
xchg
sbb
cli
cmp
sbb
les
or
mov
xchg
cmp
pop
outsb
xchg
sbb
mov
jb
fistps
cmp
cmp
ret
aaa
mov
repnz
in
sahf
rcl
jns
sbb
mov
sbb
iret
cltd
and
sbb
aad
mov
stc
xchg
pop
ljmp
add
jle
push
push
cs
sti
arpl
aam
cltd
cs
jle
test
pop
cmc
data16
mov
lea
pop
mov
xchg
fildl
movb
imul
sub
mov
test
mov
adc
mov
popa
scas
xor
js
jbe
jmp
lods
int
lods
adc
mov
mov
and
sbb
das
loope
and
ficompl
jbe
cmp
ret
xchg
in
stos
xor
add
mov
cli
sti
push
call
aaa
cltd
sbb
xchg
sahf
jmp
fs
dec
inc
lret
clc
push
add
std
fsubr
mov
cld
fs
or
fs
xchg
or
jns
pminub
sub
test
jmp
xor
out
or
ljmp
cli
xchg
push
sub
jp
arpl
xor
rcr
pop
add
mov
dec
mov
pop
dec
push
adcl
add
dec
roll
mov
pop
mov
loop
das
xlat
push
lret
lods
cmpsl
mov
adc
adc
lahf
xor
mov
push
pop
adc
or
fsubrl
iret
sbb
gs
adc
xor
pushf
jle
push
stos
pop
imul
mov
out
loop
adc
xor
jmp
sbb
mov
pop
sub
cld
mov
jge
xor
sub
aam
pop
mov
sbb
dec
hlt
xchg
fwait
inc
xorl
mov
mov
pop
pop
outsb
sub
mov
stc
mov
adc
jle
xchg
mov
adc
push
mov
cmpsb
sbb
jne
jmp
loopne
dec
mov
repnz
jp
mov
test
mov
adc
fs
xchg
adcb
xor
push
add
xchg
bound
xor
and
subb
lods
mov
decb
dec
cmp
out
inc
stc
xor
pop
mov
jecxz
push
pop
mov
and
push
mov
dec
stos
xchg
jecxz
outsl
push
and
sub
fisubl
jns
and
enter
jns
cmp
dec
test
mov
pop
pop
fwait
sbb
lahf
jmp
sub
add
fsts
scas
cmp
sahf
pinsrw
shl
add
rol
sbb
and
jg
mov
mov
mov
xchg
insl
int
inc
cmc
adc
sti
jp
sbb
data16
cmp
cmp
jae
pop
mov
mov
out
enter
push
jmp
es
xchg
push
xchg
insl
push
adc
mov
icebp
and
cmp
fadd
rol
mov
adc
adc
loopne
sbbl
scas
and
sub
test
push
in
or
push
aad
into
jg
idivl
mov
add
and
xchg
mov
lret
hlt
dec
test
and
and
cmpsb
test
into
mov
push
negl
push
xchg
inc
mov
addb
xor
test
xchg
sahf
cltd
and
out
iret
mov
or
jg
repz
fidivrs
add
add
xor
mov
fdivs
adc
sub
int3
stos
cmovo
pop
stos
ss
adc
xchg
jg
pop
mov
leave
cltd
or
rorb
pop
arpl
push
les
sbb
dec
movsb
cltd
les
jb
enter
sti
stos
xor
ud1
test
mov
orl
popf
loope
and
fldcw
call
shlb
mov
int3
adc
mov
and
add
xchg
push
out
pop
xchg
aam
xor
cli
mov
push
imul
xlat
fbld
adc
ret
sub
xor
dec
jg
cmpsb
and
or
inc
mov
or
int
mov
add
xchg
dec
aad
scas
add
mov
js
loope
pop
adc
jae
lock
ja
stc
push
subb
das
lods
lahf
pop
pop
sub
mov
dec
push
mov
mov
inc
lods
jge
cmpl
push
mov
pop
imul
pop
mov
les
loop
stos
ret
cmp
push
mov
jne
stos
mov
popf
adc
shrb
lea
mov
adc
mov
sub
push
mov
lcall
scas
mov
fistpll
jo
push
and
cwtl
mov
xorb
pop
out
adc
addr16
mov
outsb
add
hlt
mov
ret
mov
jae
mov
jbe
es
push
cmp
out
jo
rcrl
pop
dec
xchg
idivl
mov
push
add
push
cmc
sbb
jmp
dec
dec
cwtl
aaa
xor
dec
rcl
mov
into
rcl
in
cmp
adc
ret
pop
jb
insb
jecxz
cld
daa
dec
xor
mov
dec
add
outsb
in
cmpsl
dec
dec
cld
fdivrp
les
push
xchg
cmp
cs
or
push
dec
cld
inc
jecxz
mov
jnp
movsb
dec
adc
xchg
out
in
cmp
mov
and
xor
repz
jnp
pusha
cmp
push
je
pop
cmp
mov
shlb
nop
push
sbb
bnd
adc
and
arpl
add
dec
cmc
aas
in
lahf
pusha
cmpsb
incl
std
leave
mov
and
and
rcrl
xor
ret
pop
sub
cmp
mov
lds
call
jne
dec
mov
cwtl
stc
in
hlt
not
jge
dec
lahf
cmp
adc
cmp
or
inc
xor
mov
movsb
push
negb
insl
sbb
dec
inc
mov
mov
repnz
jno
arpl
shl
sbb
xor
adc
out
out
dec
adc
hlt
jae
mov
seto
sub
mov
shl
jmp
pop
add
sbb
push
or
cltd
xor
insl
dec
ret
es
xor
sub
data16
out
test
xchg
xor
lret
and
dec
and
dec
inc
test
pop
mov
fwait
adc
mov
shll
mov
jmp
cmpsl
cltd
jmp
sbbb
enter
jnp
or
xor
mov
xor
popf
cld
lret
cmp
mov
xchg
and
push
fwait
jno
push
test
and
pop
cmpsl
fs
ret
jle
stos
cld
repz
imul
sub
and
cmc
or
inc
in
add
jmp
sub
jae
out
jne
mov
or
ret
cmp
jns
ret
out
in
imul
dec
mov
push
sub
outsb
test
jle
sarb
movsl
xor
leave
cmpsb
xor
xchg
pop
or
loopne
psubusb
iret
or
pop
cli
neg
into
push
push
daa
imul
xor
xchg
aam
cli
sarb
imull
push
or
cld
nop
jb
jecxz
cmp
xor
xchg
fsubrl
mov
mov
mov
pusha
icebp
pop
lock
inc
clc
inc
cmpsl
aaa
cmc
or
ret
xchg
jae
jno
xchg
dec
popa
and
push
fimuls
push
dec
add
xor
psrld
mov
push
fldt
fucomp
repnz
dec
cmp
into
testl
lea
sbb
adc
jne
mov
mov
mov
xchg
ja
and
bound
cmp
xchg
out
push
aad
sbb
sti
inc
inc
leave
hlt
mov
shrl
imul
cwtl
mov
repnz
xlat
mov
adc
je
cs
stc
ret
test
stc
or
fcomps
fwait
clc
xchg
fsubs
mov
sti
and
xor
pop
movsb
mov
lret
movsb
dec
mov
inc
xchg
int
sub
dec
and
push
fisubl
ret
pop
push
loope
leave
clc
cltd
adc
inc
mov
jge
fldt
iret
mov
orl
mov
xchg
ljmp
lret
pop
lret
dec
jge
lds
pushf
cmp
cli
adc
mov
and
jne
scas
ss
cmc
fcoms
out
test
incl
fildl
jle
lcall
or
inc
inc
sbb
out
jae
sti
mov
pushf
push
and
xor
adc
pop
or
mov
in
push
hlt
adcl
mov
push
mov
mov
in
testb
mov
push
jg
push
rclb
out
xlat
mov
xchg
bound
es
xor
add
mov
inc
jne
sbb
iret
xor
dec
scas
jmp
inc
mov
xor
sbb
lock
and
lods
jne
mov
sub
push
roll
sub
call
mov
orl
adc
jmp
mov
xor
push
mov
inc
je
ljmp
incl
xchg
sbb
dec
cmpb
fcoml
scas
xchg
call
in
ss
mov
xchg
jb
adc
rol
jmp
int
loope
jne
aam
jns
mov
aaa
lret
dec
adc
aam
subl
js
xchg
sbb
xchg
ljmp
xchg
insb
fimuls
out
sub
add
sub
jb
xor
mov
add
xor
test
adc
xor
roll
out
xchg
jl
or
pop
shlb
aam
add
fsubr
pushl
adc
sbb
fs
lret
pop
in
push
out
test
mov
jecxz
mov
dec
shr
push
push
ljmp
add
in
push
sahf
call
pop
idiv
cmpsb
mov
idivl
xor
add
sbb
cmpsb
push
rcll
cmp
shrb
or
jp
cmpsb
mov
into
out
add
xor
push
inc
xchg
mov
cmp
aad
sbb
cmp
out
test
fistps
jne
fstl
or
std
pop
andb
insl
or
mov
call
jp
insb
scas
loopne
jo
in
pop
xchg
jp
out
jno
mov
mov
mov
pop
mov
xchg
or
dec
andb
jle
mov
xchg
jmp
je
pcmpeqb
push
adc
push
mov
fucomi
roll
mov
push
and
sub
test
or
les
jbe
push
xorb
xchg
dec
imul
push
inc
cwtl
cli
into
cs
jg
sbbl
push
add
mov
shrl
and
fwait
pushf
and
add
lret
add
incb
loopne
pop
in
mov
pop
mov
pop
lahf
into
test
cmp
cmp
cmpsb
rsm
punpcklwd
cmp
xlat
push
rol
in
pop
fwait
lahf
mov
push
sbb
xorb
test
cwtl
and
insl
mov
rcll
out
ret
push
aam
dec
inc
mov
cltd
in
int3
jno
jno
mov
mov
mov
cltd
push
out
inc
sbb
mov
push
push
stc
pushf
loop
mov
xor
mov
dec
pshufw
cwtl
loopne
mov
mov
and
adc
and
pop
xor
jmp
iret
pop
test
mov
or
rcrb
xor
mov
jne
dec
mov
xchg
loope
jo
jae
pushf
test
stos
call
mov
idivl
jb
add
push
mov
aad
mov
inc
pop
sub
xor
mov
add
imul
xchg
nop
cmp
mov
imul
enter
add
lock
cmpsb
and
mov
xor
inc
leave
or
jle
mov
push
shrl
nop
js
test
xchg
sub
outsb
mov
inc
repnz
cwtl
push
fistps
pop
int
inc
lcall
je
jge
out
push
add
xchg
arpl
push
and
pusha
sbb
neg
xchg
pop
aam
sub
adc
std
sbb
mov
pop
dec
insl
add
jge
shll
jae
pop
xchg
cmp
lret
sub
mov
adc
inc
add
pop
mov
mov
das
push
add
inc
and
adc
outsb
ret
fnsave
xchg
cmp
data16
cltd
lods
xchg
mov
aaa
cld
or
orb
popf
pop
rcrb
mov
mov
stc
out
out
mov
dec
xor
imul
mov
and
xchg
ret
sbb
mov
dec
xchg
jo
sti
push
fidivl
mov
loop
add
cwtl
movsb
pop
cwtl
ss
jle
jl
repnz
push
xchg
push
cmp
int3
and
sbb
lahf
mov
add
inc
fnclex
sti
jne
sub
movsb
mov
int3
push
movsb
scas
fdivs
subb
xchg
loope
arpl
push
add
push
jg
jl
cmc
pop
gs
into
mov
and
sub
xor
adc
dec
lds
nop
push
mov
mov
lahf
lret
push
inc
push
mov
cmp
pop
push
pop
adc
pop
jg
mov
andb
lock
push
shufps
mov
imul
int
mov
into
les
rcrl
stc
stc
jp
cmpsb
addr16
pop
pop
aam
pushf
lock
cmp
or
nop
lods
xchg
adc
add
fbld
dec
mov
jno
ss
rorb
sub
inc
leave
adc
jecxz
jp
xor
sub
mov
cmp
jb
out
adc
pop
xchg
lea
push
sub
push
fbstp
pop
int3
outsl
mov
leave
jp
mov
shr
xor
and
push
inc
jns
test
mov
mov
jno
icebp
in
sbb
aas
fisttpll
mov
pop
js
jnp
mov
mov
mov
adc
cmpsl
xchg
movsb
dec
roll
lret
cmpb
mov
test
into
cmp
adc
pop
loop
adc
pop
push
add
cli
mov
fisubl
scas
lret
xor
push
cmp
dec
and
jl
sbb
pop
je
adc
in
push
in
jmp
mov
mov
insb
insl
cwtl
xchg
mov
sub
daa
arpl
mov
data16
movsl
adc
push
fwait
jno
mov
inc
inc
stos
xchg
scas
sbb
insb
into
push
xchg
push
xor
aaa
int
pop
mov
movsl
mov
mov
in
add
adc
xor
fwait
inc
sub
imul
call
packssdw
or
xlat
mov
mov
jl
lock
and
inc
repnz
sub
ja
icebp
call
xor
add
ret
or
adc
adc
add
fisttps
pop
jecxz
sub
test
stc
daa
shrl
and
gs
mov
push
fsubrs
fldl
ret
jns
jge
loop
aad
xchg
jecxz
sbb
lahf
adc
pop
in
out
adc
add
int
pop
pop
push
mov
rcll
mov
imul
outsl
xor
daa
clc
stos
adc
ss
test
cmp
xchg
les
jp
insb
mov
insb
mov
pusha
add
or
sbb
jp
mov
push
xor
iret
or
into
popf
lds
int
fmul
push
adc
in
popa
push
xchg
loopne
push
jmp
or
cmp
lds
adc
push
add
mov
mov
jo
in
mov
or
out
adc
xchg
sbb
pop
push
and
and
lock
mov
fdivrs
pop
negb
and
mov
ffreep
add
push
adc
dec
in
sbb
inc
das
inc
xchg
add
dec
stos
mov
lods
fs
or
cmp
cs
adc
daa
pop
mov
aam
xchg
leave
push
jecxz
hlt
aaa
nop
jb
iret
add
mov
jmp
dec
pop
iret
pop
adc
sub
adc
js
xchg
shll
icebp
dec
jne
ret
shl
sbbl
mov
ret
mov
ret
inc
nop
cmp
mov
aam
lds
push
pop
in
dec
jbe
cmpsb
inc
aaa
mov
lahf
push
ss
subb
loop
jb
comiss
mov
loop
test
jmp
das
sbb
xlat
into
int
jo
repnz
leave
loop
xor
call
mov
sub
fisttpl
test
mov
sbb
cli
jmp
lret
mov
jecxz
push
cltd
movsb
and
lret
jnp
push
cmp
mov
das
push
dec
subb
std
scas
dec
leave
fmuls
push
inc
fldt
and
xor
dec
leave
inc
add
xchg
decb
xchg
cmpsb
dec
pushf
fwait
lahf
sub
movsl
push
add
push
dec
pusha
dec
push
bound
mov
mov
shlb
dec
or
cmc
push
lret
jg
or
push
push
repnz
jp
push
stc
pop
sbb
mov
into
cwtl
int
dec
xor
inc
mov
lea
dec
fcom
mov
xor
and
stc
or
sub
jge
adc
fsubl
fs
movl
push
inc
xchg
int
lahf
scas
xor
imul
mov
test
out
aaa
push
addr16
sub
out
daa
cmp
xlat
mulb
into
pop
pusha
add
inc
inc
and
cmp
loopne
cmc
add
scas
imul
ud2
clc
mov
out
cwtl
ljmp
jmp
in
xor
xchg
loope
cmp
adc
daa
sub
add
cli
les
out
cmpsl
clc
mov
das
out
mov
fcomi
fcoms
in
dec
cs
cmc
cmp
pop
cs
lahf
sahf
test
fwait
mov
dec
imul
addr16
scas
cmpl
bound
mov
xchg
add
mov
cli
loop
test
sbb
fs
ja
xchg
dec
sahf
jae
ret
or
cs
fwait
stos
lcall
test
adc
inc
or
pop
sub
xchg
mov
stc
dec
mov
dec
mov
es
add
dec
popf
adc
jo
aaa
push
es
jno
test
jo
adc
hlt
fbstp
mov
adc
jo
jp
popf
cmp
jno
aad
xor
jecxz
pushf
rcrb
push
adc
dec
sarb
pop
fcomps
sub
popa
das
and
and
push
iret
outsb
pushf
lea
into
mov
fdivrl
mov
or
push
jbe
lock
cmpsb
mov
stos
xchg
das
loopne
xchg
inc
repz
inc
dec
pushf
mov
fucomip
or
lcall
movsl
std
in
adc
out
xchg
push
std
jmp
cmpsl
addr16
sub
sahf
data16
sbb
pop
jmp
movl
test
pop
sub
sbb
mull
clc
lret
add
and
mov
iret
jp
add
add
add
roll
add
lea
in
sbbl
jb
lods
lods
decb
and
jnp
mov
sub
xor
push
mov
xor
incb
jle
out
aaa
mov
stos
xor
cmp
scas
jns
push
pop
xchg
aaa
jno
lods
jl
mov
mov
xlat
setne
insl
movsb
xchg
stos
push
and
fiadds
push
ss
daa
loopne
adcl
lret
cmc
xchg
iret
lds
pop
roll
jns
inc
icebp
jno
sbb
outsl
pop
adc
pop
leave
mov
dec
lcall
setge
dec
cmp
pop
pop
dec
aad
rorb
mov
mov
pop
mov
lock
aam
js
jp
out
mov
inc
fcmovb
insb
add
addr16
cld
pop
and
sahf
jbe
sub
rorl
lcall
popf
inc
in
push
ret
aad
xchg
test
lret
push
lcall
sbb
scas
sub
jp
push
jae
andb
cwtl
cmp
jle
sub
mov
push
ret
push
push
push
in
ja
pop
cwtl
and
mov
push
repz
or
insl
lret
imul
pop
mov
cmp
loopne
xchg
mov
clc
fincstp
fs
mov
lahf
mov
jle
mov
sahf
mov
mov
xchg
sarb
inc
jmp
lods
enter
in
cmp
cmp
cli
loopne
mov
mov
test
fimuls
mov
or
mov
or
sub
in
pop
outsb
or
and
or
notl
insl
push
les
xor
sub
or
adc
mov
adc
mov
enter
adc
bound
mov
in
jecxz
dec
xchg
lds
push
call
dec
mov
test
std
pop
mov
mov
xchg
jp
and
dec
loop,pn
push
sub
fisttps
in
or
add
mov
adc
inc
icebp
mul
mov
orl
std
cmp
sbb
cmp
mov
fnsave
lock
inc
subl
es
stos
cmp
mov
insb
pop
inc
inc
jg
pop
outsb
pop
ret
add
sub
sbb
sbb
cld
in
sub
inc
dec
int
sbb
mov
test
insb
bound
adc
cltd
xor
adc
in
clc
xor
pop
xor
scas
jbe
pop
aam
testl
pop
push
roll
lods
addr16
bound
inc
cld
or
jmp
push
adc
scas
fst
dec
pushl
pop
inc
int3
push
sarl
inc
cmp
push
sbb
push
insl
xor
les
jb
sub
dec
push
xor
jns
xchg
adc
daa
sbb
mov
push
ret
stc
repz
popl
cmp
fnstsw
inc
sti
sti
inc
frndint
pop
loop
lds
out
sub
mov
andb
mov
repz
push
addl
mov
fmuls
cmc
imul
scas
mov
dec
xchg
cmp
iret
mov
imul
ja
push
push
in
imul
pop
dec
std
dec
stc
movsl
mov
pop
push
dec
cli
dec
addb
add
add
sbb
add
adc
mov
or
add
and
fisttpl
inc
pushf
xor
adc
pop
push
cmp
sti
jle
sub
xlat
aas
mov
xchg
cmp
jp
das
hlt
popa
pop
xor
jnp
jmp
push
sbb
push
gs
cmp
lahf
pop
push
nop
push
mov
mov
mov
jp
inc
jno
jns
cmp
xchg
inc
add
pushf
ret
fcomps
jo
addb
js
pop
mov
jne
mov
gs
adc
int3
ss
bound
adc
adc
or
mov
pushf
cmpb
add
mov
xchg
cmc
imul
cmp
xor
adc
pop
leave
outsl
repnz
push
lods
jl
ret
into
lds
sbb
jne
jns
mov
testl
or
repnz
mov
add
arpl
mov
push
or
ret
inc
and
sbb
push
dec
xor
push
sti
mov
rclb
imul
add
add
popa
pop
outsb
fcoml
cli
inc
push
in
mov
dec
jbe
or
out
dec
xchg
cmp
adc
mov
sahf
cld
stos
mov
mov
xchg
mov
shll
cmpl
push
cld
push
in
out
sbb
push
jg
sarb
lahf
sbb
sbbb
mov
add
mov
call
dec
jo
rorl
lods
enter
push
js
mov
daa
xorb
lea
out
pushf
out
outsb
inc
rcll
ret
stos
cmpsl
pop
dec
sub
xor
xchg
lahf
jb
xchg
add
jecxz
clc
arpl
loopne
push
stc
adc
test
leave
int
xlat
pop
fwait
lcall
mov
and
iret
push
lret
sti
dec
lret
push
aad
mov
jb
cmpsl
dec
dec
imul
in
xor
pop
cwtl
xor
sbb
std
lret
andl
dec
ljmp
sub
jmp
push
mov
sbb
add
pop
outsl
sahf
jge
add
adc
jecxz
repz
pop
lea
and
js
mov
mov
stos
out
aam
es
aam
add
fldenv
idivl
dec
rcrb
dec
dec
rorl
or
adc
sub
test
addr16
int
addr16
arpl
sahf
cwtl
sbb
push
jge
push
stos
jo
mov
xchg
or
xor
fidivl
or
xchg
xor
popa
sub
push
mov
push
cmpsb
fwait
pop
jne
lods
sub
arpl
cli
pusha
mov
out
mov
leave
xchg
shrb
sbb
js
push
push
insb
aad
popl
aad
cmc
mov
dec
pop
andb
xor
xor
pop
fildl
mov
lock
aam
jecxz
pop
in
pushf
jns
and
xor
and
orw
jl
cmp
xchg
xor
movsl
adc
xor
movsb
fsubs
xor
ret
add
loop
adc
outsb
fprem1
pop
add
inc
dec
xchg
xchg
add
inc
cmpsb
fwait
mov
test
aam
push
lods
jp
aad
xchg
and
aas
lock
sub
cmp
adc
scas
and
jae
pop
jnp
xchg
xchg
push
jle
fdivs
sub
xchg
or
repnz
cmpsb
pop
add
or
ljmp
mov
cltd
int
xchg
fisttpl
montmul
cmpsb
inc
test
scas
mov
stos
sbb
in
cmp
add
lcall
and
xor
out
leave
mov
cmpsb
imull
xor
movsw
adc
fnstenv
out
jecxz
out
je
es
sub
mov
pop
jo
scas
lahf
stc
out
mov
mov
push
fdivrs
xchg
sub
into
aaa
es
mov
imul
xor
pusha
stos
data16
mov
cwtl
ds
cli
mov
outsl
movsl
mov
inc
inc
xchg
shll
push
cmp
and
cmp
xor
insb
pop
sahf
test
mov
mov
xchg
in
lock
inc
in
dec
xor
lds
orb
sarb
xor
js
adc
out
cwtl
test
mov
xchg
inc
addr16
push
sub
cmc
stc
ret
mov
sub
mov
pop
adc
mov
notb
jbe
push
sub
mov
out
pop
mov
xchg
and
jle
cmp
mov
sahf
pop
into
push
test
adc
mov
adcb
push
fdivrp
jbe
or
or
sub
pop
or
adc
jbe
or
popf
stos
pop
jbe
imul
imul
ds
negl
mul
arpl
mov
fisttpll
xor
dec
jo
push
mov
and
xchg
jae
arpl
mov
inc
mov
cmp
add
rcrb
add
jge
cmp
fwait
jl
dec
mov
dec
je
test
std
aaa
or
adc
aas
adc
out
inc
or
fsubrl
mov
or
pushf
push
push
sub
sub
push
mov
addr16
in
push
mov
xorl
cmpsl
adc
hlt
fisubl
scas
jo
or
cmp
pop
popf
inc
ljmp
add
addl
push
inc
push
in
push
mov
adc
outsl
sbb
aad
add
out
es
xor
mov
insl
sbbb
sbb
popa
mov
dec
cld
sbb
cwtl
out
mov
sbb
xor
push
ljmp
add
popf
into
adc
ljmp
fcomps
int
sbb
bound
mov
inc
fistl
xchg
rolb
out
gs
dec
cmp
loopne
ret
dec
hlt
nop
sbb
xor
or
je
cmpsb
mov
cs
fnstenv
out
xor
adc
mov
int3
lret
cltd
fsubrl
int3
in
adc
inc
js
sub
inc
inc
into
aaa
mov
shll
push
xchg
cmpsl
inc
push
cli
jle
movsb
sub
sub
add
das
lods
adc
pop
mov
jae
lahf
jmp
arpl
out
cld
jle,pn
cmp
dec
test
lds
inc
inc
jle
into
inc
jbe
inc
scas
enter
xchg
inc
daa
push
fidivrl
mov
add
int3
int
adc
xchg
repnz
fidivl
frstor
in
icebp
mov
pop
pop
notl
stos
out
ds
loopne
pop
ret
enter
inc
subl
inc
mov
lock
loop
lods
rorl
xor
inc
cmpsb
daa
daa
icebp
ror
les
aaa
bound
sbb
or
inc
jo
fwait
lods
pop
stc
mov
movsb
fisubrl
lock
push
and
lods
shll
int
cwtl
xchg
pop
cmp
testl
jmp
inc
and
in
rorb
pop
lret
pushf
imulb
aad
adc
or
ja
xchg
push
adcl
rolb
pushf
cmp
sub
xchg
stc
sub
sub
cmpsl
xchg
mov
xlat
repz
fbstp
stc
pop
push
je
movsl
pop
dec
add
mov
dec
xor
insb
cs
iret
jmp
rcr
inc
xchg
aaa
in
shlb
add
mov
inc
jg
pop
push
scas
test
insl
outsb
mov
lds
push
repnz
mov
movsl
mov
into
add
pop
hlt
js
dec
sbb
mov
xchg
addl
and
aam
repz
in
mov
adc
ja
lea
arpl
insb
outsl
inc
test
or
out
pop
movsb
sbb
stos
xor
fcmovnbe
mov
mov
data16
cmp
es
icebp
jge
sbb
cmp
add
sbb
lea
mov
je
stc
movsl
mov
sub
sbb
lret
mov
in
scas
cwtl
dec
push
rorl
sub
stos
add
insb
ljmp
addr16
push
arpl
lock
out
dec
xlat
icebp
lods
mov
outsl
push
fxch
dec
movzwl
stos
nop
cmp
lods
sbb
fstpl
loopne
aad
fnstenv
loop
inc
mov
lret
mov
pop
mov
or
dec
xchg
mov
fldl2t
adc
xchg
sti
push
repnz
mov
cmpsl
dec
inc
jae
cmc
mov
adc
push
lcall
sub
sarb
cmpsb
hlt
roll
aad
mov
sub
dec
shll
je
in
dec
push
out
rol
push
les
inc
loop
cli
jp
aas
out
mov
ret
or
mov
mov
sbb
in
sub
punpckhwd
inc
insl
adc
inc
dec
imul
aaa
gs
jl
call
mov
mov
pop
out
loopne
dec
sarl
dec
inc
push
pop
in
mov
ficomps
xor
rclb
sub
push
jne
ja
out
jo
push
xor
movsb
pop
mov
adc
pop
inc
pop
stos
push
gs
xchg
lcall
push
in
into
fdivs
adc
pop
mov
xor
loop
inc
add
pop
jbe
mov
pop
push
cmp
pop
or
ds
jo
insb
ljmp
pop
out
lds
mov
or
xchg
xchg
push
pop
daa
push
je
test
clc
adc
sub
lret
mov
movsl
jle
cmp
jmp
test
les
xchg
int
pushf
out
pop
aad
and
cmp
adc
cmp
out
dec
js
dec
mov
cmp
pop
outsl
popf
xorb
sahf
dec
mov
sub
pushf
xor
add
stc
pop
sub
mov
imul
inc
add
inc
sub
loope
jmp
sbb
je
mov
cwtl
into
lock
icebp
pmuludq
dec
dec
push
inc
pop
sbb
add
mov
mov
xorl
jae
fsubs
pop
push
movsb
sub
mov
mov
xchg
popa
xchg
das
push
cmp
std
cld
dec
or
mov
xor
cmp
je
adc
jnp
cli
cmc
cwtl
jmp
lea
cmp
jle
jb
data16
ja
mov
or
push
test
cmp
pop
push
cmovle
push
es
in
aad
jle
mov
ss
cmp
into
inc
dec
xchg
inc
lret
mov
and
addb
or
movsl
shlb
xor
dec
popa
repnz
mov
xor
movsb
sbb
shl
mov
fistl
or
adc
xor
jl
sarl
inc
mov
mov
insl
mov
aam
in
dec
mov
xor
add
dec
ja
nop
lea
cmp
int3
mov
push
lea
and
xchg
mov
mov
shlb
push
rcrl
dec
in
lods
mov
mov
loope
xor
aas
jg
movsl
push
inc
gs
imul
daa
addr16
jmp
idivb
xor
mov
push
fistps
sti
or
jl
cltd
mov
inc
aam
pop
or
pop
das
aaa
sub
lret
jno
add
add
addr16
inc
fadd
inc
pop
jbe
popa
mov
in
adc
rcrb
and
pop
imul
arpl
sbb
and
jb
icebp
fdivrs
repz
jo
push
mov
add
mov
loopne
and
adc
fnstsw
cmc
xchg
pop
pushf
mov
and
mov
mov
xchg
out
mov
jge
lahf
adc
lcall
inc
or
pop
stos
aas
mov
mov
sub
mov
and
or
sub
mov
sub
cmp
push
lea
xor
lret
push
push
ja
sbb
out
lcall
adc
mov
push
js
inc
dec
push
push
in
jl
and
out
jnp
lahf
cmp
xchg
dec
sub
mov
aad
roll
arpl
test
mov
faddl
push
mov
insb
jg
and
sbb
cli
dec
les
std
pop
mov
mov
imul
test
test
jg
cs
pop
sbb
sub
test
sbbb
orb
add
mov
mov
mov
cld
lds
cmpsl
push
fs
xchg
jle
dec
mov
or
push
mov
nop
cs
mov
cmp
xor
testl
js
pop
fmull
push
mov
adc
mov
arpl
xor
mov
test
ret
xlat
nop
dec
mov
and
jns
push
xor
add
popa
fnstsw
out
pop
rorl
test
push
int3
lea
jle
xchg
shr
bound
stos
fisttpl
loopne
and
mov
shlb
and
mov
out
mov
ret
mov
divb
mov
arpl
sbb
and
in
inc
jno
aaa
pop
out
test
addb
fadd
mov
cs
cltd
popf
jo
mov
jno
fwait
mov
shlb
mov
mov
push
or
test
adc
out
scas
lock
mov
pop
ljmp
mov
aam
xchg
out
mov
inc
jle
test
aas
enter
test
pushf
or
mov
cs
mov
cld
inc
fsubrl
aas
sahf
pusha
arpl
jl
leave
clc
adc
or
or
xchg
xor
test
sti
push
cwtl
test
es
enter
les
mov
jae
or
rorl
inc
imul
pop
dec
cmp
mov
xchg
push
out
sbb
fcomps
inc
and
xchg
sbb
std
xchg
jmp
test
aam
leave
lea
paddusw
pop
scas
jb
sbb
out
and
es
adc
mov
mov
frstor
les
pop
cmp
fisubl
mov
out
jle
push
add
mov
lods
and
aaa
mov
xchg
jae
imul
sbb
cmp
ss
adc
iret
aam
xor
mov
lods
ret
xchg
xor
out
cmp
hlt
push
fs
push
jl
xor
dec
jno
add
mov
test
mov
xchg
add
mov
jno
jae
leave
mov
cltd
lret
pop
cvttps2pi
bndstx
inc
mov
push
sarb
in
add
fwait
testb
push
hlt
xchg
push
jne
sub
lods
or
sti
sbb
mov
cmp
pop
jae
xchg
jl
xor
jge
pop
test
negl
and
add
loope
imul
mov
lret
mov
push
cmc
inc
scas
sbb
jb
pop
cmp
push
repnz
push
jl
sub
rol
fldcw
out
sbb
dec
mov
les
mov
ljmp
sub
xchg
sbb
push
fldl
aaa
mov
aas
mov
fwait
sub
xor
dec
aam
iret
pop
test
les
test
push
jp
pop
mov
mov
ljmp
push
pop
test
push
add
bound
xorb
cmpl
scas
inc
push
cli
lret
ja
and
lret
jno
mov
movsb
repnz
ret
lret
ljmp
stos
or
dec
sub
lcall
aaa
and
xchg
ret
lea
les
adc
or
divb
movsl
xchg
mov
mov
test
push
rolb
mov
shr
shll
mov
fstps
shr
sub
pop
and
int3
leave
xchg
addr16
stos
into
outsl
dec
mov
addr16
out
out
jecxz
addl
add
out
leave
dec
mov
shl
xchg
push
imul
decl
test
out
xchg
sub
cmp
push
sub
pop
push
jnp
jb
not
cmp
xchg
jge
test
ret
pusha
adc
stc
js
int3
fst
jae
mov
cmpsb
jge
xchg
lods
jne
mov
lahf
sbb
lock
xchg
mov
ret
jb
jns
int
cmpsb
add
xchg
add
rcrb
mov
add
pop
inc
pushf
out
icebp
scas
adc
aaa
lcall
movsl
enter
add
jb
aam
add
test
test
xor
jle
inc
cld
dec
jnp
pop
lcall
push
inc
popf
mov
fsts
shrl
push
jmp
rclb
lds
and
and
leave
or
fisubrl
dec
xchg
mov
and
call
push
shrb
out
add
pusha
or
lea
mov
or
neg
xor
add
out
gs
aas
mov
xchg
shll
cld
inc
dec
inc
sahf
dec
out
add
dec
sub
xchg
sbb
pop
and
or
jp
jne
pop
pop
repnz
outsb
jno
testl
push
in
jne
stos
add
out
cld
pop
jo,pn
xor
jl
push
cmpsl
pop
inc
mov
daa
icebp
mov
jl
xor
cmpsb
push
mov
push
cmpsl
loop
inc
adc
mov
sbb
push
push
es
rcr
sub
adc
cmp
push
aad
pop
mov
or
jl
jmp
adc
jns
jo
imull
js
fisubrs
xchg
xlat
je
mov
cmp
repnz
mov
dec
xchg
inc
mov
jl
fwait
dec
xchg
call
mov
scas
mov
fwait
in
out
cli
lods
mov
das
jecxz
xchg
pop
dec
lret
sbb
sub
pop
out
jp
cmp
mov
add
dec
cmpl
testl
pop
and
mov
jmp
mov
rcrb
mov
inc
fiadds
hlt
xchg
sbb
push
pop
inc
adc
or
iret
adc
lret
pop
ss
in
stc
add
sti
and
call
and
jg
dec
enter
inc
xlat
dec
push
push
cmp
je
cmpsl
cmpsb
mov
xchg
fldcw
movsb
push
xor
and
fldcw
adc
popa
inc
jg
scas
imul
repnz
nop
shll
inc
jle
popa
xor
jp
cmpsb
lods
mov
fcoms
inc
cli
mov
mov
shrb
adc
and
ljmp
mov
movsb
mov
lock
outsb
vcvttpd2udq
test
add
xor
js
push
test
subb
sbb
xor
mov
fs
adc
arpl
sti
sub
insl
fidivs
cmp
mov
in
xchg
sub
imul
jno
bound
push
pop
fdivrs
data16
mov
and
xor
mov
pop
push
lret
push
fdivp
or
enter
bound
and
arpl
xchg
pop
xor
mov
rolb
loope
cmp
sbb
leave
add
stos
sarl
adc
xor
xchg
inc
push
aam
dec
push
mov
sahf
or
fsubs
jecxz
lcall
mulb
jns
loope
or
rcr
inc
add
cltd
outsl
dec
dec
lret
adc
icebp
js
push
push
xor
lds
dec
stc
frstor
fistpll
mov
roll
ficoms
jae
aas
subb
push
div
sbb
arpl
call
dec
fldcw
in
mov
adc
jns
les
andl
clc
outsb
outsb
cs
lods
hlt
aas
inc
int
imul
orl
dec
mov
lcall
in
mov
cmp
sbb
jno
unpckhps
cmp
push
testb
ret
push
movsl
addr16
mov
dec
movsl
aaa
loop
les
stos
mov
jnp
sahf
jecxz
push
js
mov
pop
adcb
mov
xor
pushf
adc
dec
cli
data16
sub
in
out
test
scas
aaa
mov
and
sar
das
mov
pop
ss
pop
jb
les
xor
pushf
mov
test
xchg
scas
jmp
ret
jge
cmp
les
sarb
fldl2e
into
add
sub
mov
sbb
mov
push
mov
ljmp
jg
xchg
adc
int
fwait
roll
add
ds
sub
rcrb
xchg
jge
scas
popf
inc
jg
shl
sub
xchg
in
adc
pop
insl
and
por
popf
cmp
subl
cld
mov
mov
cmp
xor
or
outsl
jbe
nop
dec
mov
and
not
cwtl
stos
pop
jg
mov
and
and
cmpsl
sahf
sahf
mov
push
divb
xchg
jne
inc
xor
mov
movsl
rcll
insl
cmc
push
pop
fiaddl
lds
jecxz
lea
pop
sub
or
rcl
loopne
arpl
rorl
pushf
and
jne
gs
mov
mov
pop
inc
mov
pusha
mov
dec
arpl
xchg
cs
mov
dec
xor
inc
in
fsubr
xor
lcall
mov
cmp
ja
out
push
fbstp
daa
xchg
dec
rcrl
xor
xor
add
fmuls
or
push
and
cmpsb
push
loope
mov
jge
mov
jl
jns
dec
lret
jbe
xchg
loopne
mov
les
jmp
ret
adc
xchg
mov
addr16
scas
adc
jno
mov
push
clc
mov
fstp
or
mov
dec
sbb
imul
lods
lea
mov
cmp
cmp
fadd
lret
js
xchg
mov
pop
cmpsl
imul
jg
adc
jo
pop
scas
das
sub
test
clc
mov
jecxz
jae
lods
mov
aaa
or
dec
adc
mov
xchg
pop
pop
mov
xor
pop
add
out
add
loopne
sub
push
pop
jns
ljmp
pop
in
cmp
incb
pop
repz
sbb
aaa
bound
sub
sub
cmpb
hlt
mov
dec
or
push
aam
sub
sbb
push
std
xchg
mov
push
jecxz
adc
ss
jae
leave
scas
jb
mov
addl
mov
cli
lds
pop
mov
and
rcl
push
mov
mov
fcmovu
bound
stos
lcall
or
loope
mov
fdivrs
aad
popa
add
sbb
mov
dec
xor
mov
xorl
push
adc
fisubs
jbe
cmpl
jno
pop
xor
cwtl
ds
clc
icebp
test
pop
cmp
test
adc
push
cwtl
xor
data16
mov
stc
nop
jno
jbe
out
sbb
int
cmp
test
and
and
jecxz
mov
pop
and
jns
sti
mov
xor
add
or
nop
jns
add
xor
inc
push
mov
and
sub
loopne
jnp
cmp
in
xchg
cmp
xchg
dec
stos
pop
sub
popa
mov
std
pop
add
xor
xchg
xorl
sbb
xor
clc
sbb
adc
test
rolb
sti
out
ja
fidivrl
enter
add
xchg
pop
pop
and
mov
sar
inc
pop
or
and
idivb
sbb
cld
movsb
push
test
es
out
pusha
bound
ja
enter
orb
iret
aad
inc
fwait
insl
inc
js
int3
fdiv
in
inc
cmpsb
test
cs
inc
jbe
aam
mov
int3
popf
mov
pop
pop
in
movsb
sbb
mov
mov
lock
stc
or
fisubrl
pushf
push
push
test
hlt
add
mov
hlt
push
scas
mov
or
mov
sub
and
and
out
jp
pop
imul
gs
xchg
jl
jp
dec
pop
cmpl
mov
jg
push
bound
jmp
mov
out
sbb
fsubrs
testl
out
fadd
mov
shll
mov
fmuls
or
mov
mov
call
out
pop
in
and
mov
adc
xacquire
xchg
nop
mov
cmc
insb
shrb
add
push
xchg
arpl
add
mov
jne
out
into
adc
stos
addr16
lods
out
outsb
sbb
mov
xor
mov
leave
jb
lea
in
std
mov
inc
pop
sbb
jmp
repz
inc
xor
sub
mov
and
std
add
add
mov
add
add
pop
add
add
add
push
add
cwtl
and
scas
mov
mov
insl
lods
lods
pop
lea
icebp
sub
inc
mov
inc
mov
push
in
imul
shll
cld
xchg
fldcw
imul
mov
pop
rcr
mov
xchg
push
hlt
sbb
sbb
lret
insb
sbb
icebp
out
lods
sbb
jmp
mov
lods
push
push
dec
lcall
lock
mov
push
adc
push
sbb
jno
jns
dec
lret
pop
or
mov
push
xorb
pop
cmc
lds
push
notl
sub
outsl
xchg
sbb
jbe
xchg
mov
mov
fistpll
adc
pop
daa
negl
pop
xchg
sbb
inc
cld
xor
sub
gs
aad
stos
mov
inc
frstor
cld
mov
add
pushf
adc
adc
imul
pop
sbb
movsl
fidivl
test
xchg
jns
pop
jp
sbb
cmpb
or
add
mov
push
mov
sbb
shrb
shl
call
push
sbb
icebp
add
cld
xor
in
pop
jmp
popa
ljmp
popl
imul
push
mov
ss
adc
add
fisttps
mov
les
loop
adc
fsubl
mull
or
push
and
sub
pop
add
inc
lret
inc
add
rcr
pop
mov
push
sbb
mov
dec
xor
push
ja
jne
jno
cmpsl
cs
push
nop
test
jmp
or
nop
fisttpll
jns
mov
add
mov
hlt
scas
mov
xlat
leave
shrl
loop
test
sub
or
lock
fs
ljmp
mov
add
jmp
ret
push
ret
incl
aaa
or
inc
and
popa
lret
mov
push
mov
inc
xor
add
fstpl
sub
clc
cmpsb
aad
add
orl
jge
sub
mov
xchg
or
fwait
mov
repnz
pushl
sub
sub
in
bound
ret
mov
inc
pop
xorl
mov
cmpsl
pop
fwait
mov
das
es
or
insb
xlat
repnz
sti
pop
mov
addr16
sub
pop
mov
out
jmp
arpl
out
inc
fadds
arpl
dec
mov
inc
jb
and
sbb
rorb
mov
aad
icebp
push
insb
lods
adc
sbb
inc
mov
inc
sbb
jnp
jmp
jmp
icebp
sub
and
gs
adc
shlb
call
push
xchg
sbb
cmp
xor
stos
dec
rolb
mov
ret
and
sbb
jg
adc
push
xchg
ror
sbb
cld
mov
pop
sbb
sub
imul
jecxz
inc
int3
jno
shrb
cmp
stos
fisubl
mov
inc
pop
jp
imul
gs
jge
push
ss
lock
shrb
sarb
jg
add
test
xchg
ficomps
in
push
jo
or
inc
push
mov
or
iret
jo
testl
xlat
mov
sbb
loop
and
div
cmp
inc
aas
out
mov
clc
mov
scas
imul
push
movsl
dec
fdivrl
pop
mov
mov
sar
js
add
mov
push
fistpl
je
std
les
cltd
pusha
fwait
in
push
pushf
mov
scas
cmp
mov
adcl
sahf
pop
or
cs
or
push
mov
mov
xchg
push
cmp
imul
and
inc
shl
add
pop
mov
les
pop
or
adc
ss
adc
outsl
sahf
loope
int
outsb
jmp
ss
arpl
test
mov
ficoms
pusha
gs
ret
cmpsb
fwait
das
dec
push
fs
fwait
xchg
dec
ja
outsb
cs
pop
inc
mov
cmp
fistps
push
and
test
pop
xchg
ds
aad
aaa
test
fs
das
pop
divl
das
pop
push
add
xor
shlw
add
xchg
inc
imul
or
xchg
loopne
scas
add
inc
hlt
icebp
hlt
pop
pop
sbb
sub
incb
mov
inc
lods
mov
xlat
loopne
leave
dec
aas
add
xchg
or
into
xchg
inc
sahf
daa
xchg
arpl
xchg
rolb
outsl
bnd
jmp
sahf
lahf
lahf
adc
mov
fdivs
xor
mov
push
pop
cmp
mov
pop
mov
movsb
lret
in
sub
add
cltd
insb
lcall
imulb
xchg
adc
and
inc
scas
pushf
sub
push
push
aas
cmp
movsb
les
mov
mov
jl
sub
or
test
cli
leave
mov
lahf
out
xor
cmp
in
pop
out
out
mov
pop
aam
or
cmpsb
ljmp
call
jo
subl
out
gs
mov
test
nop
lret
jbe
pop
repz
push
lods
xor
lahf
scas
fs
cwtl
inc
mov
bound
mov
fsubl
jo
cltd
dec
inc
jge
pop
inc
mov
scas
mov
mov
stc
pop
sub
hlt
loop
popa
adc
adc
jns
in
and
dec
xchg
setbe
pop
xchg
mov
cmpsl
outsl
pushf
pop
jle
imul
daa
adc
out
dec
bound
aaa
push
xlat
loopne
jae
rcr
arpl
cmp
pop
push
clc
adc
and
pop
call
mov
cmpsl
push
sbb
jns
sub
dec
leave
jg
push
test
lds
inc
xchg
ret
loop
outsb
pop
xchg
dec
hlt
push
pop
cmpb
movsb
and
mov
and
fistps
int3
std
pop
mov
mov
xchg
ret
dec
xabort
int3
add
outsl
pop
push
addr16
mov
enter
adc
mov
mov
loope
xchg
je
pop
push
add
lods
popf
pop
jp
mov
pop
cwtl
jge
dec
fsubrs
ret
jecxz
bound
mov
xchg
push
cmp
dec
les
push
adc
cwtl
inc
mov
ds
imul
loopne
fcmovne
mov
mov
lsl
adc
xchg
dec
jmp
push
mov
mov
gs
push
roll
iret
mov
sub
jne
popa
xchg
sub
scas
inc
dec
shrl
jl
jbe
outsl
lahf
dec
mov
dec
mov
mov
fistpll
cwtl
enter
xchg
ds
movsb
test
add
xor
pop
or
inc
push
lret
aad
bound
inc
andl
ret
std
mov
or
sahf
cmpsl
push
mov
lret
push
adc
lods
cltd
stos
shl
or
xor
lahf
js
jp
inc
repnz
std
and
sub
pop
into
sub
dec
in
lret
lcall
leave
dec
in
or
mov
mov
cmp
pop
hlt
es
ret
movb
fisttps
fdivrs
aad
pusha
pop
jg
lea
mov
jbe
fdivrs
mov
mov
or
js
pshufw
lret
xor
es
mov
mov
ret
pop
sbb
push
aam
mov
imul
arpl
pusha
inc
aaa
test
mov
cmp
dec
mov
jecxz
ja
xor
filds
or
push
arpl
in
lock
fs
in
xchg
xlat
lret
into
lods
adc
jle
mov
loopne
test
outsl
jnp
ret
add
shlb
push
dec
jmp
fildl
and
dec
sbb
scas
lock
loope
and
pop
jns
push
and
mov
cltd
outsl
dec
sub
enter
adc
ds
fistpl
enter
pop
push
clc
loopne
ss
cmp
lret
aaa
dec
pop
ret
roll
in
and
pop
dec
and
fistpl
ds
push
pop
mov
adcl
ss
jge
xchg
jmp
int
imul
imul
jmp
jb
gs
in
scas
jb
push
fists
std
aas
dec
dec
sbb
cltd
dec
cld
int3
mov
mov
insb
adc
ss
mov
mov
dec
jnp
jno
fwait
and
mov
fstpt
fstl
hlt
scas
outsl
push
ret
fwait
inc
hlt
sti
je
sbb
xor
mov
mov
shlb
iret
jge
movsl
push
cmpsb
lock
sbb
ret
dec
addr16
push
cmp
movsb
mov
push
add
inc
push
push
push
adc
sub
pop
hlt
das
in
fwait
cli
iret
sti
cmp
sbb
movsb
jle
sub
icebp
fdivrs
lret
stos
repz
std
nop
fnstsw
xor
fisttps
mov
cbtw
xchg
lret
ds
shl
xlat
fstps
pop
mov
mov
or
je
jns
imul
shl
or
lahf
cmp
xchg
pushl
in
xchg
mov
fisttpll
shl
test
adc
adc
or
cmpsb
ds
mov
mov
xchg
mov
and
fstps
cmp
dec
std
jns
jnp
cmp
ret
mov
or
pop
cmp
ds
mov
add
and
ja
jns
inc
rorb
cmp
fldcw
loope
rclb
xchg
cli
out
sub
adc
test
aam
stc
insb
mov
mov
sbb
stos
test
sbb
outsb
dec
rcl
cmc
stos
enter
stos
dec
stos
jo
adc
mov
push
addl
xchg
mov
jg
aad
and
push
dec
punpckhbw
push
es
or
mov
or
inc
insb
pop
mov
cltd
and
xchg
jle
adc
jle
mov
lds
lret
es
push
xor
or
dec
push
enter
pop
in
jle
inc
test
pop
jg
in
sub
xchg
dec
cld
push
cmp
jge
das
or
sbb
rcpps
lret
xlat
scas
inc
lods
in
fdivrl
clc
lock
pop
adc
mov
shll
inc
jp
std
ret
repz
std
mov
loope
inc
cmp
pop
mov
fstp
neg
aaa
push
adcl
and
jge
or
cmp
fxch
dec
inc
in
into
or
dec
daa
xlat
out
std
subl
mov
jne
mov
add
mov
xchg
jmp
test
mov
jae
pop
movsl
ret
fs
enter
push
add
fidivl
imul
sub
fdivs
xchg
xorl
add
mov
fcoml
and
jns
in
repnz
mov
jae
fcmovbe
mov
and
pop
mov
mov
jae
push
mov
inc
test
add
aad
push
ret
jno
and
mov
mov
mov
mov
hlt
addr16
lea
flds
jmp
pop
push
xchg
pop
lods
add
loope
sbb
jae
fidivl
jne
jne
cmp
inc
div
and
pop
cs
xor
mov
xchg
frstor
sub
popa
inc
adc
ja
jb
repz
dec
pop
out
pop
sbb
imul
add
je
jecxz
add
pop
lret
xchg
or
arpl
mov
lock
jp
mov
cmp
mov
pop
std
bound
jecxz
pop
xchg
insl
and
pop
roll
in
or
daa
jnp
rep
cld
lret
std
fcompl
out
inc
or
inc
sub
fimuls
dec
loope
sbb
or
mov
xor
cli
rcrb
mov
xchg
jg
push
mov
jmp
sub
hlt
sbb
int3
xlat
out
pop
cmpsb
adc
pop
mov
fdivl
pop
jg
dec
cwtl
loope
stos
stos
dec
push
stos
jno
rclb
mov
adc
ss
jbe
lcall
sbb
insb
jns
dec
mov
test
push
imul
jg
lds
fcomps
or
and
mov
sub
mov
sub
in
xchg
ljmp
pop
xor
inc
in
shrb
rorl
sub
push
adc
adc
movsl
mov
in
cmp
enter
insb
xchg
inc
or
imul
adc
bound
pop
fisubrl
fcmove
loope
les
cmp
insl
xor
dec
xorb
inc
mov
out
mov
xor
push
jne
sub
test
mov
cwtl
pop
pop
stc
mov
adc
repnz
adc
in
call
sahf
or
and
fidivrs
jns
and
stc
push
sub
inc
and
dec
sub
lcall
je
movsl
dec
xchg
cmp
xlat
add
ret
ss
inc
push
inc
arpl
scas
mov
mov
push
dec
scas
push
xchg
push
int
mull
fdivrs
in
fs
lret
and
sbb
push
roll
push
mov
pop
cwtl
mov
cli
pop
fwait
mov
cltd
lods
inc
adc
dec
pop
xor
dec
inc
push
aad
jge
into
andb
inc
sbb
ljmp
sub
jge
nop
cmp
jp
aas
mov
arpl
xor
fmuls
xchg
xor
loope
xor
dec
add
or
mov
inc
daa
or
and
stos
fiadds
adc
xchg
rcll
lea
push
mov
lea
adc
shrl
out
xchg
hlt
icebp
sahf
pop
jg
popf
jle
bound
mov
addr16
repz
imul
scas
cmc
sub
jp
negl
mov
jo
xchg
outsl
enter
push
int
lea
and
jmp
or
cmp
jae
jl
aad
adc
stos
aad
cmp
jne
mov
mov
notl
fs
push
mov
and
stc
sub
leave
jnp
dec
into
mov
lods
add
jp
fwait
mov
adc
test
xor
or
fs
test
es
inc
in
and
in
repnz
icebp
sub
stos
aad
movsb
push
cmp
push
push
fcomp
out
jb
ret
decb
sub
add
flds
jmp
cmpl
cmpsl
incb
cwtl
push
mov
or
rcr
mov
out
pop
mov
xchg
rorb
dec
cwtl
mov
mov
xor
sbb
shrl
mull
and
shll
scas
jl
nop
lock
sbb
or
outsb
add
and
lea
mov
jmp
js
mov
mov
fwait
mov
xor
and
pop
cwtl
jns
xor
cmpsb
push
xlat
in
xchg
cmp
lcall
add
subl
stos
pop
int3
adc
rorl
inc
insb
sub
test
notl
push
jge
sub
movsb
push
and
pop
inc
data16
mov
mov
and
inc
xchg
push
add
repnz
sbb
pop
pop
hlt
rorl
add
lock
fs
xor
push
or
inc
shrb
jecxz
mov
add
iret
pop
sub
shlb
hlt
xchg
pusha
fwait
push
mov
scas
movsl
imull
xchg
shl
jmp
js
popa
outsb
add
fidivrs
dec
dec
jmp
xor
jns
scas
outsb
xchg
es
jne
clc
jae
movsb
jb
xlat
cmp
leave
arpl
inc
adc
xor
fs
fadds
cmp
and
mov
ret
mov
in
mov
ficoms
cmc
arpl
adc
imul
inc
push
cmp
testl
jb
roll
in
mov
leave
jb
or
xor
push
mov
data16
push
jl
lcall
dec
mov
inc
mov
popf
movsl
mov
lret
mov
jnp
in
push
outsb
mov
int3
cmp
aaa
inc
insb
test
cs
rep
fisubs
flds
and
cli
xchg
loope
aad
xor
lock
aas
push
sub
sarl
aas
loope
imul
sub
and
mull
popa
jmp
jae
or
loop
rcrb
jmp
pop
scas
hlt
cmp
adc
test
xor
fwait
sbbb
cmpb
mov
fiaddl
fxch
stos
mov
pop
jmp
imul
sbb
jmp
les
pop
insb
push
pop
xlat
mov
or
mov
test
testl
je
dec
mov
mov
and
push
push
outsb
andl
or
rcl
imul
lcall
loope
stos
in
sbb
fs
jo
std
sub
cmp
mov
mov
pop
jae
dec
shll
std
jne
fstps
xchg
mov
xchg
sbb
mov
xchg
insl
aaa
adc
lret
jae
std
jb
bnd
pop
pop
adc
subb
pop
add
out
mov
insb
mov
ss
xchg
test
mov
cmp
jns
jle
stos
inc
push
add
mov
or
jns
pop
sub
jno
sbb
inc
sarl
mov
outsb
loopne
test
or
pop
and
in
or
sti
sbb
jle
fisubl
scas
sub
sub
push
mov
cmp
xor
inc
data16
test
pop
jns
pop
roll
push
test
lea
xlat
adc
inc
popa
push
adc
push
mov
pop
scas
rcrl
mov
loop
jno
adc
mov
in
xchg
scas
je
sbb
pop
mov
push
mulb
mov
shl
jnp
ret
sub
out
xor
add
pop
movsb
pop
jne
pusha
or
push
mov
cmp
push
push
sub
rcrl
jge
mov
gs
jmp
lods
loopne
outsl
mov
aaa
adc
mov
push
fbstp
add
lds
sbb
xor
jge
pop
dec
push
cmp
out
xlat
mov
push
or
adc
enter
shrb
add
lds
stos
push
push
shrb
add
mov
cwtl
mov
mov
faddl
mov
stc
mov
cltd
push
cmp
shll
pop
xchg
or
test
fisubl
pop
dec
test
hlt
pop
add
xor
insb
sbb
leave
or
jmp
adc
jno
pop
jmp
imul
into
sti
mov
les
stc
mov
call
rclb
int3
add
sbb
xchg
dec
cltd
rcrl
in
int
sub
pop
imul
stos
mov
mov
std
pop
xor
insl
fs
int3
aas
cmp
jle
push
clc
xor
push
add
jle
xchg
fisubl
icebp
insb
mov
xchg
jne
shlb
mov
adc
arpl
dec
xlat
pop
lahf
cmp
in
cmp
mov
jns
orl
and
cwtl
stc
je
bound
call
mov
cmpsb
pusha
inc
xchg
leave
inc
dec
push
push
sub
leave
mov
int
mov
pop
sub
mov
shrl
adc
fildl
hlt
scas
xchg
xchg
mull
mov
jb
movsl
lahf
cmp
rclb
jge
jmp
out
clc
add
fcmovnu
pop
js
push
roll
or
in
cli
and
inc
pop
mov
aad
mov
jle
xor
inc
push
jmp
ds
sbb
data16
in
mov
insl
out
subl
and
fimuls
into
icebp
mov
in
scas
add
daa
hlt
add
ja
push
adc
es
out
daa
pusha
je
push
andl
xchg
or
cmp
mov
inc
pop
jb
push
dec
pop
jl
addr16
arpl
mov
pop
dec
push
push
xchg
adc
xchg
test
push
and
mov
dec
jbe
inc
push
jg
jmp
shll
adc
pop
xor
cmc
xor
in
aaa
pop
lcall
add
ja
out
lcall
mov
jg
test
lea
inc
push
adcb
jmp
lock
test
mov
insb
imul
mov
adc
add
mov
test
rcrl
mov
je
inc
and
cmp
mov
dec
mov
inc
sti
sbb
mov
test
pusha
xchg
cmpb
fld
inc
loopne
mov
xchg
adc
je
idivb
xchg
ret
or
xor
and
and
mov
aad
push
jmp
cmp
test
inc
sbb
jbe
or
sahf
add
rclb
cmp
and
xlat
ucomiss
repz
test
sub
xchg
inc
pop
scas
mov
call
add
fcoms
fnsave
test
out
push
xchg
jns
movlps
rcl
pop
push
add
adc
popa
xchg
mov
repnz
pop
test
out
cmc
int3
sub
xchg
arpl
adc
push
sub
out
dec
popf
mov
std
jbe
in
add
jle
dec
testb
inc
daa
movsb
inc
aad
mov
add
xchg
mov
imul
insl
inc
xchg
ror
xchg
cmpsl
pop
pop
mov
nop
dec
mov
sbb
arpl
insl
mov
scas
inc
lret
pop
sbb
dec
fptan
sti
jae
ss
lods
jp
std
mov
outsl
mov
sub
mov
lods
push
pop
mov
adc
xchg
pop
sti
lea
add
sbb
and
out
iret
pushf
in
sbb
jp
pop
xchg
sarl
jne
out
lret
stos
mov
mov
push
test
ss
negb
outsb
and
inc
sti
test
fisubrl
sbb
iret
pop
adc
mov
je
mov
int
xor
int
and
and
or
sub
cmp
ss
dec
adc
inc
lea
push
cmpsb
sbb
hlt
ljmp
test
mov
pop
dec
and
push
shll
inc
out
clc
call
into
addb
pop
cmpl
sbb
insl
jb
stos
ja
cmp
xor
rorb
shrb
js
push
inc
mov
jno
sbb
ret
jne
cli
das
popa
dec
push
adcl
sub
cmpl
xchg
es
iret
push
int
push
lret
ja
cld
mov
dec
push
or
ret
cld
sub
test
and
dec
lods
inc
cltd
push
mov
push
inc
adc
cmp
add
in
add
out
xchg
cwtl
out
sub
jno
or
push
or
fdivl
xchg
or
mov
xor
push
ljmp
xchg
test
ret
scas
mov
inc
movsb
aad
mov
cmp
outsb
jno
mov
inc
sub
in
fs
jmp
repnz
ds
fnstcw
adc
inc
in
adc
mov
adcl
mov
push
xor
sub
cmp
gs
test
test
int3
lock
xor
sub
xor
outsl
xor
jae
dec
int
rolb
dec
xchg
test
sbb
cld
outsb
aas
pop
pop
lods
mov
pop
mov
icebp
inc
jae
mull
aas
jg
cmp
xlat
push
push
jae
scas
xlat
mov
adc
stc
aas
adc
into
adc
pop
insb
or
mov
scas
dec
sarb
test
ficoms
out
push
mov
pop
push
and
divl
movsb
adc
jno
negb
iret
inc
xchg
pop
pop
jle
jno
fisubrl
pop
dec
mov
push
cmp
and
stos
loop
push
cmp
in
lea
loopne
push
fwait
je
and
inc
ficomps
sub
or
jecxz
nop
je
aaa
enter
insb
loopne
out
out
outsb
imulb
add
jmp
div
in
xchg
icebp
sti
sbb
and
push
arpl
sub
rcr
push
and
stos
jg
push
jno
lea
jecxz
repz
sub
mov
cmp
pushf
mov
sbb
cmp
outsl
popf
xlat
loop
and
shlb
insl
iret
fwait
outsl
and
sbb
sbb
movsb
xlat
je
pop
push
jmp
fimull
push
fstp
cmp
pop
adc
xor
je
imul
lods
fdivrs
lock
sbb
add
mov
rcll
xchg
test
sub
into
adc
sahf
insl
push
cli
out
rorl
into
push
inc
push
lahf
mov
fnstenv
cmp
test
ds
cmp
pushf
add
insl
jecxz
in
add
adc
mulb
ret
inc
int
lock
sub
std
stos
dec
xor
push
lret
or
iret
pop
cmp
aam
add
pop
sti
inc
pinsrw
or
lea
and
sub
rolb
hlt
xlat
inc
int
push
dec
out
cmpsb
aad
int
mov
jle
jns
ja
or
fcmovb
lret
add
movsl
frstor
mov
movsb
hlt
sbb
xchg
sahf
dec
jge
cltd
inc
sub
mov
mov
push
jnp
xor
insl
shll
pusha
cmp
mov
push
adc
sub
sbb
enter
mov
xor
in
hlt
xchg
mov
mov
jo
lret
pop
sub
aam
adc
in
cmc
adc
sbb
shrb
scas
cmc
movl
mov
lock
inc
cltd
test
or
fstps
shl
mov
push
mov
sti
jbe
in
inc
repz
or
jbe
jle
or
mov
test
repz
pop
lea
sub
push
mov
rclb
xlat
dec
pop
pop
cli
pop
inc
pop
fs
test
dec
dec
mov
dec
enter
xchg
or
lds
mov
or
or
push
jle
push
xor
jno
testb
jnp
xchg
dec
les
or
push
xchg
or
adc
fistl
sub
lods
mov
sbb
mov
add
add
imul
jns
lds
push
out
sbb
pop
mov
push
xlat
push
fnsave
jmp
mov
inc
or
jbe
xchg
mov
stc
add
insb
arpl
sbbl
and
mov
test
aam
pop
fucomip
mov
and
dec
popa
dec
outsl
jl
dec
cmc
aam
or
push
xchg
mov
adc
and
jno
aad
popw
xchg
mov
jno
test
ret
outsl
xchg
mov
pop
push
sbb
cmp
mov
sub
int3
stc
jmp
dec
sbb
push
outsl
push
mov
mov
int3
xor
int
out
jle
sub
hlt
adc
xchg
sbb
rolb
mov
xchg
sbb
or
sbb
out
mov
or
xchg
sahf
push
enter
sbb
scas
mov
add
jne
push
aaa
scas
andl
in
leave
popa
inc
sub
stc
arpl
clc
push
repz
iret
shll
out
daa
mov
lret
cwtl
or
xor
add
add
insl
add
add
or
sbb
shrd
mov
outsl
aam
test
sbb
mov
xchg
in
pop
stos
push
add
jle
dec
out
fadds
test
clc
push
in
jl
and
inc
in
cmp
in
pop
test
dec
repnz
out
jmp
sub
or
push
jbe
insb
pop
push
scas
mov
lcall
pop
sub
mov
frstor
push
std
and
cltd
movsb
or
rcll
push
ja
lea
lods
in
popf
dec
mov
lahf
in
push
sbb
jg
cs
insl
xchg
add
fsubp
lret
out
jle
sbb
repz
ror
cltd
mov
out
pop
scas
mov
ljmp
cwtl
push
pop
mov
stos
test
mov
and
sub
inc
rcrb
mov
ficompl
hlt
pop
mov
xlat
sbb
sbb
and
xchg
and
mov
es
push
cltd
push
andb
jle
or
stc
sbb
cwtl
pop
lcall
daa
and
dec
mov
divl
mov
ficoml
sbb
push
jns
mov
out
add
out
xor
repnz
mov
std
js
push
stos
push
call
dec
pop
out
push
and
ss
insb
and
mov
mov
xchg
cmp
mov
bound
mov
and
mov
mov
shlb
add
cwtl
loopne
mov
dec
adc
xchg
mov
aaa
loope
push
pop
xor
cli
mov
xchg
inc
or
shll
xlat
sbb
cli
imul
orl
nop
int3
inc
addr16
mov
inc
adc
iret
cmpl
mov
xor
ja
cmpsl
mov
cs
ffree
or
sbb
enter
and
xchg
or
testl
jecxz
or
and
pop
inc
loop
and
mov
push
add
dec
add
loop
add
icebp
mov
mov
test
pop
dec
jle
jge
and
in
and
test
adc
mov
push
pop
push
out
push
mov
mov
clc
addr16
pop
mov
cmp
or
loopne
jle
cld
aas
push
or
jo
aad
stos
in
or
jno
jle
cld
pop
adc
clc
loopne
and
std
pop
or
jle
testb
push
loopne
andb
stos
jle
xchg
inc
add
bound
pop
mov
pop
and
das
mov
dec
mov
jae
sbbb
enter
mov
cmp
cmpsb
push
ret
lods
mov
pushl
into
js
mov
xor
fnsave
adc
dec
pushf
insl
jno
mov
mov
jge
xchg
push
or
adc
sbb
pusha
and
jb
das
xchg
xor
adc
xchg
addl
add
xchg
sti
aas
lea
mov
push
rcrl
cld
scas
xor
and
stc
pop
xchg
aam
mov
jns
push
outsb
jecxz
xchg
divl
arpl
mov
subb
clc
add
out
je
add
je
or
lock
adc
es
int
fmull
xchg
push
mov
cmp
shll
jecxz
aaa
sbb
and
cld
cmpb
lods
notb
xchg
fbstp
xor
sub
push
or
jb
jecxz
std
sub
mov
loop
ljmpw
pop
xor
imul
xchg
fistpl
roll
gs
mov
cmp
and
mov
jg
push
mov
mov
mov
sti
xor
test
adc
push
mov
je
cli
push
or
jecxz
sub
xchg
sub
sarl
pop
bound
je
pop
enter
mov
jge
call
xor
rcll
fimull
inc
fdivrs
xchg
dec
ret
and
mov
cmp
push
sahf
rcrl
push
ret
rcrb
pop
adc
addr16
jnp
ss
les
xor
dec
adc
stos
enter
jno
gs
mov
jb
cltd
sub
cmp
outsl
push
out
ss
push
outsb
imul
sahf
jne
popa
ds
std
jno
jle
pop
test
push
out
loope
lds
inc
push
fsubp
sub
pop
mov
ss
inc
inc
and
or
sarl
imul
cmp
inc
cmp
into
roll
push
push
jnp
mov
push
mov
adc
dec
stc
outsl
mov
and
push
adc
pop
xchg
cs
ja
not
out
les
repz
xor
rcrb
sbb
out
lret
xchg
mov
push
sub
adc
je
inc
ljmp
enter
cmp
push
dec
xorl
sbb
imul
out
inc
sar
test
sarl
cli
leave
scas
or
add
pop
repnz
add
outsb
pop
inc
lea
inc
add
notb
lods
in
inc
clc
gs
jl
arpl
js
icebp
cld
lret
setge
test
stc
test
cmc
sub
cmpsb
aad
in
jnp
adc
test
jnp
movnti
inc
js
imul
subl
xchg
inc
cmc
pop
scas
nop
arpl
repz
sarl
push
imul
sbb
test
xor
cmp
xchg
cmpsl
sar
dec
sbb
add
lds
aad
js
dec
cmpl
inc
sbb
jle
add
shrl
jae
sbb
pop
mov
jecxz
int3
aas
add
in
mov
fs
adc
mov
push
xor
orl
push
jge
cmp
fwait
xchg
fcoms
pop
inc
popa
push
xchg
jo
fcmovbe
mov
mov
mov
push
inc
mov
scas
push
aam
mov
push
push
push
inc
andl
enter
bswap
add
inc
je
inc
js
push
jo
sti
or
and
or
xchg
ljmp
ja
xor
xor
shlb
ja
mov
pop
cmpsb
out
es
xchg
xchg
pop
push
cltd
addr16
adc
sbb
test
pop
lods
pop
push
movsb
aam
sub
insb
cmp
mov
pop
jg
pop
nop
mov
rcrb
pop
fdivs
or
pusha
fsubs
arpl
inc
xor
idivb
mov
aaa
lock
imul
add
cmp
into
xchg
mov
push
lahf
push
mov
jge
push
lods
add
dec
xchg
popa
xorb
add
mov
iret
dec
outsl
jp
imul
mov
pop
dec
xor
mov
mov
sbb
aad
mov
or
in
stos
push
imul
fiaddl
adc
dec
cli
mov
pop
int3
es
push
in
int3
xchg
aad
out
and
push
xor
dec
push
and
dec
mov
fldcw
pop
jecxz
cmpsl
cmc
push
pop
fisubl
es
adc
movsb
hlt
in
mov
lcall
popf
jbe
jle
cltd
gs
fwait
mov
mov
pop
xchg
jle
adc
sbbb
shrb
xchg
push
push
jae
data16
pusha
jp
inc
aas
mov
dec
xor
test
lret
neg
xchg
pop
add
sbb
mov
mov
or
cmc
fldt
cmc
jno
sub
test
jb,pn
cmp
loope
or
or
jge
push
out
cmpsl
in
dec
or
fdivrs
rcrb
subl
into
jl
int
sub
or
push
mov
push
popf
xor
add
dec
jl
mov
pop
push
xchg
mov
movsl
out
mov
pop
orb
add
lock
int
mov
dec
lea
and
add
nop
jp
push
or
push
push
adc
lret
mov
hlt
das
shr
add
sbb
mov
push
in
lahf
lock
dec
cmp
stos
inc
dec
jae
shll
mov
mov
and
and
cmp
mov
scas
xor
shl
inc
lret
mov
rclb
ds
idivb
in
pop
xchg
xchg
call
fs
xchg
push
repz
outsl
repz
inc
push
repnz
or
insl
add
xchg
andl
pop
lock
fsub
pop
mov
pop
repz
adc
mov
iret
push
notb
sbb
inc
stos
jmp
mov
dec
ret
loopne
in
int
stos
add
outsl
movsb
rcl
dec
push
repnz
clc
lods
inc
lods
jl
adc
push
add
xchg
adcl
sub
imul
jp
sub
cmp
inc
pop
sub
push
cmp
xchg
std
ds
test
inc
push
jl
adc
mov
fcmovne
enter
and
not
inc
mov
inc
movsb
mov
cld
mov
lcall
inc
xorl
test
cmp
mov
movsb
and
xor
leave
inc
push
std
mov
sbb
pop
icebp
hlt
mov
mov
je
mov
mov
lds
inc
pop
add
xchg
xchg
out
lahf
roll
inc
bound
add
test
in
test
xchg
ds
les
xchg
in
xchg
mov
mov
or
lret
test
or
stos
sub
inc
sbb
pop
mov
sbb
stos
xchg
das
mov
loope
jae
mov
mov
mov
mov
je
cmpsl
std
aas
lods
cmc
adc
fcmovu
mov
lahf
add
enter
adc
mov
cld
add
es
in
inc
icebp
fiaddl
and
adc
xchg
or
or
jbe
clc
sbb
test
cmpsb
outsb
push
or
mov
repz
lds
pop
sub
jno
loop
mov
mov
pop
sarb
aam
int3
xchg
cmc
and
adc
xchg
fnstsw
add
testb
xchg
and
jl
sub
mov
mov
popa
adc
sbb
xor
movsl
pusha
dec
scas
jns
inc
xor
movsb
push
mov
fistpll
mov
jl
cli
fisubrs
leave
push
lea
sbb
pop
xchg
cmp
lock
cltd
adc
sbb
pop
push
xchg
mov
or
mov
xchg
pushl
jne
je
jb
pusha
fsubrl
push
shll
daa
jae
outsl
jo
loopne
test
imul
lret
scas
jne
lret
lcall
cmpsb
dec
lret
ja
out
into
sub
js
cltd
dec
or
jb
xor
inc
nop
xchg
test
shll
pandn
inc
popf
addr16
test
outsl
aam
inc
adc
mov
push
bound
or
rorl
orl
cmp
clc
sbb
in
pop
push
sub
in
cmp
add
ds
and
enter
dec
inc
inc
call
lcall
ret
xchg
mov
jl
rcll
add
lds
pusha
mov
mov
cld
add
push
sub
mov
mov
fadds
jl
sbb
test
mov
lods
pop
test
xchg
cmc
aaa
repz
jle
push
adc
ucomiss
popf
cmpsb
jbe
fstl
mov
add
inc
clc
cli
imul
sub
shl
inc
hlt
lds
cmp
cmpsb
pop
inc
adc
cwtl
loop,pt
or
imul
into
dec
les
ret
icebp
test
dec
rep
cmp
adc
pop
test
fsubrl
cmp
pop
out
stc
out
pop
xor
dec
adc
xor
push
lahf
push
sub
repz
rol
push
clc
int
clc
sbb
lea
adc
out
inc
or
ror
xchg
jb
leave
loope
pop
dec
iret
leave
lret
sahf
cwtl
das
add
dec
dec
xchg
lret
pop
lock
push
movsl
addb
or
lret
sti
lock
jmp
cs
lds
jae
sti
xor
sti
sahf
loop
int3
mov
cmpsl
mov
incl
dec
aaa
outsl
mov
jns
adc
xor
fidivrl
nop
lods
sub
rcll
jb
outsb
daa
stos
jg
mov
xor
lock
ss
jecxz
push
mov
xchg
jbe
mov
pop
fwait
push
push
mov
sub
adc
mov
pop
pop
mov
fcompl
mov
movsb
leave
test
push
inc
cld
dec
fwait
adc
jle
aaa
sub
jnp
xor
pop
xor
lret
icebp
cmpsb
adc
push
mov
jmp
adc
imul
sbb
pop
mov
test
in
and
dec
imul
mov
sub
lods
pop
out
adc
sbb
jno
sub
popa
scas
lret
or
adc
rsm
sbb
or
shll
adc
daa
adc
je
dec
shrl
mov
xor
gs
stos
rorl
push
shlb
jae
dec
mov
cmp
xchg
sbbl
in
xor
shlb
sub
sub
add
sbb
ja
push
xchg
call
test
add
ret
mov
xlat
mov
enter
movsb
or
ret
jl
fldl
dec
mov
inc
into
jg
test
xlat
mov
pop
insl
movsb
push
rolb
sbb
ss
inc
mov
inc
dec
es
lahf
repnz
push
test
test
xor
mov
bound
repnz
mov
dec
pop
test
outsb
lcall
push
push
fdiv
add
inc
mov
jbe
gs
test
scas
mov
sub
aaa
jno
xlat
sub
ja
insl
lahf
sub
xchg
stos
pusha
movlps
cmp
mov
jge
cmp
dec
in
or
add
adc
jecxz
fadd
lods
xor
mov
repnz
xchg
popf
pop
enter
jno
or
adcb
outsl
lods
jmp
jb
stos
xor
test
sub
pop
nop
aad
lahf
add
push
xchg
test
or
add
popa
inc
mov
pushf
xor
mov
movsl
mov
iret
mov
in
push
jmp
push
orps
xor
inc
das
or
call
stos
cli
out
jno
xchg
sahf
ja
rolb
jno
int
aam
pop
push
insl
loope
mov
cmc
arpl
xchg
repz
push
mov
and
jnp
cmp
jl
fildll
or
ss
mov
in
scas
sub
and
and
data16
mov
sbb
dec
push
pop
xchg
lock
lcall
add
or
ljmp
adc
xchg
aaa
orb
jne
imull
test
inc
pop
sub
imul
cmp
mov
cwtl
add
bound
push
jb
cmp
xor
pop
ret
popf
mov
mov
push
stos
cli
lahf
lds
adc
int3
idivl
sbb
add
sub
clc
inc
hlt
sbb
std
jae
test
lret
aam
in
cmp
mov
pop
aaa
lcall
mov
fsubrl
cmp
pop
popf
outsl
out
inc
pop
int
mulb
loope
sbb
push
xor
mov
add
clc
sahf
or
rcl
xchg
gs
das
stc
fwait
mov
data16
push
int
jmp
neg
stos
cltd
arpl
mov
stos
enter
shlb
shll
mov
push
iret
stc
rcl
mov
sub
add
mov
clc
xchg
scas
sub
out
popl
ret
stos
adc
push
and
add
scas
jb
xchg
mov
xchg
lds
adc
pop
sbb
mov
enter
mov
insl
jnp
add
push
adcb
lret
push
popf
cmp
pop
and
mov
ror
or
punpcklwd
fisubrs
rorl
sub
pop
enter
lret
scas
aam
mov
mov
push
fadds
ljmp
cmp
xchg
jb
add
sbb
into
mov
mov
pop
ret
xchg
ret
lret
push
repz
xchg
pop
dec
aad
cmpsl
dec
xor
sub
mov
popa
rcll
imul
mov
das
or
cmp
arpl
push
mov
sbb
mov
mov
fs
and
filds
aas
stos
jno
jg
xor
xchg
int
fdivrp
imul
fsin
mov
xor
mov
mov
dec
dec
lahf
cmc
push
arpl
out
sbb
call
jno
shlb
add
aad
pop
mov
outsl
jb
nop
shlb
lods
pusha
inc
call
adc
push
addb
iret
frstor
rcrl
sbb
iret
dec
cmp
ds
mov
lock
adc
add
jne
dec
adc
dec
enter
iret
repnz
add
or
fildll
sub
test
adc
call
dec
lcall
stos
sub
sbbb
lods
jno
movsl
dec
pop
mov
test
loop
dec
mov
pop
pop
pop
push
or
mov
jns
sbb
jmp
cmp
mov
addb
mov
out
push
leave
cmp
repz
jae
in
jl
lods
aam
rcll
lcall
lret
pop
rorl
lret
mov
fistps
js
mov
shrb
icebp
and
js
pop
ja
dec
inc
clc
loopne
mov
hlt
mov
negl
sub
mov
in
hlt
add
neg
scas
xchg
mov
in
jno
arpl
mov
fldenv
cltd
fwait
cltd
jns
les
int
push
loope
inc
jecxz
adc
sti
cmp
mov
lods
sbb
std
and
scas
outsl
mov
cmc
add
or
push
and
xor
push
imul
inc
je
lods
pop
movsl
mov
lods
outsl
jb
mov
add
gs
mov
test
xchg
sub
in
mov
cli
fisubs
jmp
shll
stc
push
scas
or
lock
mov
xchg
and
testl
ja
int
inc
test
pop
pop
push
mov
mov
jge
outsl
add
das
push
bound
pop
cmp
mov
jle
lcall
movsl
xor
out
bound
adc
out
mov
hlt
lret
stc
pop
jl
in
filds
outsl
in
aam
pop
ret
jb
sbb
mov
adc
ss
imul
fcoml
or
lahf
dec
and
mov
push
push
pop
inc
cmp
push
cmpsl
mov
xchg
ss
inc
imul
xor
xlat
cmp
dec
adc
fwait
sti
jmp
mov
ret
js
push
dec
jg
hlt
xorb
jae
call
icebp
loop
iret
mov
sub
sub
incl
pop
rol
notb
jp
arpl
dec
mov
mov
fisttpl
fdivrl
add
dec
ret
sub
sahf
dec
cmpl
in
cmpsb
mov
dec
insl
push
mov
cmpsl
mov
aam
mov
jle
les
sar
lcall
xchg
lret
xchg
fiaddl
in
push
push
cli
fnstenv
scas
or
xor
int
add
and
pop
sbb
mov
add
popf
dec
push
test
das
xchg
test
xchg
popf
sbb
imul
pop
add
xorb
xor
mov
and
lock
lock
sub
or
bound
mov
frstor
jnp
lock
add
sub
add
hlt
data16
popa
mov
in
xchg
xchg
adc
addr16
leave
push
ljmp
out
into
sbb
ja
mov
dec
lock
mov
roll
sub
out
or
cltd
mov
mov
sbb
mulb
sbb
jns
sarl
push
xor
sub
negl
push
ret
int3
push
std
jmp
dec
rcrl
dec
pop
jns
dec
les
jns
sub
mov
sub
lods
cli
dec
inc
push
mov
sbb
mov
cmp
scas
jno
rorl
orb
inc
push
xor
ror
dec
scas
dec
sbb
adc
push
inc
jb
sbb
xsavec
mov
xor
inc
fnstcw
mov
loope
xor
lahf
dec
cmp
pop
pop
mov
sub
inc
mov
fnstcw
push
inc
sbb
adc
int
nop
push
scas
jecxz
push
movsl
push
popf
cmp
lret
sub
mov
mov
roll
fwait
mov
pop
mov
jne
inc
mov
cmp
in
ss
hlt
mov
movsl
xchg
jbe
push
push
data16
je
mov
js
cmpsb
loopne
pop
push
cs
jb
cmpsl
int3
xchg
push
lahf
sub
shll
inc
vxorps
pop
xchg
sbb
jecxz
dec
rcll
sbb
lea
je
lret
pushf
jecxz
mov
mov
push
jg
jns
sub
call
sub
cmp
fs
xlat
stos
push
jmp
xor
std
rol
and
jmp
dec
pop
or
pop
and
lret
jno
in
push
add
out
int
je
pop
dec
xchg
jo
enter
adc
jno
jmp
stos
ror
stos
inc
call
loope
push
mov
push
les
pushf
ret
call
mov
daa
cmp
int3
das
into
add
lcall
and
das
push
xor
sub
in
outsb
fdivrs
loopne
xchg
and
pop
ret
add
insb
inc
lret
add
push
xchg
cld
shrl
inc
push
sub
jo
and
es
cmp
ss
mov
hlt
xor
enter
xchg
sub
sub
fidivrl
pop
mov
pop
inc
or
popa
test
cmp
adc
push
pop
cwtl
push
pop
xchg
pop
fstps
cld
mov
cmp
mov
dec
jge
jne
cmp
xchg
lret
inc
jo
mov
jne
sub
fldt
test
inc
jl
mov
push
sti
xor
dec
and
mov
xchg
ljmp
roll
cltd
add
mov
call
jp
and
dec
adc
nop
ds
mov
orb
rcll
jle
imul
jmp
add
aam
rclb
fstpl
push
imull
daa
pop
jl
enter
ja
sbbl
cltd
jae
mov
pop
leave
lret
mov
mov
xchg
cmpsl
lea
scas
xor
inc
inc
adc
hlt
push
addb
dec
lock
pop
lret
shll
push
cmpsb
push
mov
jge
push
imul
cmpsb
in
mov
decl
push
mov
test
bound
daa
hlt
push
sub
das
mov
adc
mov
sub
jo,pn
inc
mov
test
sbb
jae
cmp
mov
xor
popf
imul
cli
mov
cmp
jl
add
push
add
fwait
xchg
jb
pop
jl
cmp
pushf
push
or
jb
pop
nop
adc
leave
data16
js
add
push
dec
jle
push
cmp
aaa
orl
or
fcoms
ja
cmp
lea
lret
scas
push
and
sub
outsl
sbb
adc
mov
scas
push
xchg
push
mov
and
stc
adc
pop
cmc
mov
cmp
repz
mov
es
les
aaa
or
and
push
shl
jecxz
mov
sub
adc
lds
jg
or
inc
xor
out
mov
dec
jno
out
xor
push
mov
or
dec
push
pop
jge
and
and
notb
lea
mov
nop
std
clc
jbe
dec
dec
jns
cmp
adc
xor
mov
jno
xchg
jmp
add
or
sub
pop
push
jp
xchg
or
loope
or
and
xchg
pop
les
inc
lcall
dec
xor
dec
or
add
inc
jge
leave
push
leave
bound
push
test
scas
push
fdivl
into
pop
testl
pop
lds
in
cwtl
jns
xchg
adc
and
lods
jle
adc
xor
in
sahf
push
dec
mov
mov
adc
xor
push
ss
xchg
jo
test
ret
popa
mov
je
loop
mov
fildll
lahf
mov
out
adc
add
enter
cmp
mov
xchg
add
les
cmc
add
dec
in
inc
leave
xchg
sbb
mov
call
and
and
or
popa
pop
jg
lock
mov
dec
xlat
xchg
sbb
sti
scas
popf
inc
sbb
jno
test
sub
mov
aas
xor
inc
sarl
xchg
out
out
push
push
popf
cwtd
dec
xchg
jne
lock
mov
ljmp
jo
leave
jle
mov
sub
sub
aam
xorb
cltd
outsl
movsl
xchg
and
pop
les
movsb
movsl
inc
imul
mov
pop
sub
sub
cwtl
int3
into
mov
orb
xor
pop
call
cmp
push
mov
aas
in
adc
jg
ss
xor
aas
popf
sbbl
xor
xor
jns
dec
lods
dec
out
loop
ja
movsl
scas
movsl
ljmp
cmp
cltd
fwait
jle
jo
lods
push
rcrb
in
xor
xor
or
outsl
adc
xchg
bound
inc
or
push
rorb
stos
mov
les
and
sbb
push
push
sub
bound
sbb
pop
rcrb
jl
xor
fstl
xchg
sub
sub
fdivrs
ret
xor
loop
xchg
fs
das
xor
or
bound
in
add
dec
add
rolb
adc
mov
popl
xchg
inc
push
pop
rclb
mov
repnz
ret
mov
stos
aaa
sub
lds
mov
pop
pusha
les
fmul
dec
sub
or
ror
pop
push
add
add
jp
pop
test
test
mov
js
push
int
out
scas
push
icebp
iret
leave
outsb
sbb
outsb
mov
dec
or
arpl
mov
flds
dec
fidivl
cltd
mov
aas
jnp
clc
jno
adc
ss
xchg
sub
adc
insl
pop
data16
std
xchg
dec
lds
mov
fdivl
jns
or
lods
loop
aad
test
add
je
adc
cmp
mov
sub
inc
mov
arpl
pop
popf
cmp
testb
cmp
pop
stos
hlt
rcll
mov
stos
and
jle
cli
jae
or
fsubs
inc
adc
and
ljmp
notb
mov
adc
xor
jns
aas
pop
sub
dec
out
popf
addb
aad
mov
in
jae
rolb
cmp
push
add
and
loop
mov
jne
xor
repnz
or
test
cltd
xor
mulb
sbb
jp
push
sbb
pop
sbb
test
movsl
lret
rcrb
add
js
mov
cwtl
and
add
pop
or
xorl
pop
adc
lret
stc
sub
and
aad
in
xchg
aaa
jecxz
mov
hlt
mov
ds
insl
mov
xor
andl
inc
ljmp
sub
lods
inc
inc
shlb
fstps
test
sub
dec
jo
jge
mov
movsb
daa
rclb
add
add
add
add
add
add
dec
fimuls
insl
adc
jmp
jle
push
shrb
sbb
and
shrl
add
and
sbb
cmp
cmp
popf
mov
subl
ret
aad
imul
std
and
addb
enter
cld
xchg
mov
cmpsl
in
push
add
loopne
dec
push
mov
add
dec
jbe
repnz
loope
and
imul
ja
ss
cld
xchg
mov
orb
jns
daa
xchg
scas
xor
movsl
into
sbb
add
dec
add
adc
push
xchg
and
xchg
rcrb
scas
xchg
int3
pop
push
cli
repz
mov
lret
std
jo
sub
jae
cmp
cmp
mov
popa
inc
pushf
xor
and
push
mov
movsb
fstpl
aad
and
sbb
mov
push
mov
push
xor
push
sub
cwtl
test
gs
mov
lods
mov
in
and
nop
mov
mov
dec
movsl
fiaddl
cli
xlat
lea
push
js
sub
ljmp
mov
hlt
pop
push
mov
outsb
movb
arpl
jge
add
bound
mov
adc
adc
jp
sbb
push
repz
in
dec
sahf
arpl
pop
add
rcr
in
mov
lea
jnp
or
xor
pop
dec
or
jmp
pop
insb
and
mov
scas
mov
fcmove
mov
pop
mov
popf
mov
dec
jp
fmuls
mov
data16
or
js
lods
or
add
inc
adc
ja
in
je
jno
push
mov
fs
cmp
movsl
dec
hlt
inc
mov
xchg
aaa
aas
mov
mov
push
sbb
imul
inc
in
aad
cltd
mov
sub
in
sahf
or
cmp
dec
and
or
add
rclb
pop
fwait
cmp
fwait
loop
aaa
cmp
imull
jne
push
cwtl
enter
pop
push
popa
imul
cmpb
cmpsb
test
les
xor
cmp
pop
sahf
es
lcall
and
push
nop
jmp
sbb
sarb
xor
ljmp
into
fidivs
aas
iret
cs
jne
cmpsb
mov
rcrb
movsl
sbb
lret
in
arpl
mov
dec
insb
inc
daa
mov
stos
ljmp
lock
cmp
mov
add
inc
das
idivl
mov
insl
movsl
mov
cmp
movsb
call
mov
dec
push
sub
lods
shlb
push
orb
xor
iret
in
add
sub
popa
roll
push
jnp
arpl
ret
jge
lock
les
xchg
call
lret
xchg
bound
jb
sub
inc
mov
xchg
ds
movsb
jp
sbb
push
and
les
xchg
sub
adc
test
cmp
lods
cwtl
andb
ds
andl
fisubrl
pop
mov
movsl
lcall
push
sub
sub
dec
mov
int
or
repnz
fidivl
sarb
out
or
fldl2e
js
sbb
mov
stos
or
clc
jno
adc
xchg
cmc
adc
push
shlb
jnp
cmc
xchg
out
imul
or
pop
push
hlt
cmp
mov
inc
test
sbb
cli
mov
push
in
fld
pop
mov
sar
adc
sti
aam
inc
mov
cmp
push
cmp
xchg
int3
daa
inc
aas
push
imul
mov
xchg
push
addl
adc
sub
insb
or
mov
cmpsl
loop
xchg
pop
mov
dec
xor
push
fs
sahf
sahf
insl
rol
cmp
pushf
dec
mov
fadd
jns
fdiv
lret
in
sbb
mov
pop
or
out
andl
xchg
adc
sbb
popa
ja
jmp
nop
lds
hlt
sbb
or
insb
faddl
inc
movsb
mov
push
leave
dec
pop
mov
push
test
xchg
inc
pop
in
lods
or
lods
jnp
xor
mov
js
or
push
jae
loop
iret
imul
clc
xor
ljmp
jecxz
adc
jno
mov
push
in
jge
test
popf
mov
daa
sbb
into
aaa
cwtl
pop
cltd
inc
xchg
xchg
pop
push
or
mov
int
int3
push
mov
push
dec
sub
mov
cmp
adc
dec
imul
call
repz
inc
or
bnd
mov
mov
mov
movsb
mov
fwait
mov
and
loopne
in
je
sti
sbb
push
lahf
lods
jo
iret
xor
cld
fwait
out
fstpt
ja
inc
and
lcall
es
dec
ret
mov
jmp
jo
pop
shrl
jns
and
js
fwait
test
mov
lock
inc
xchg
in
testb
adc
xchg
inc
les
jecxz
mull
ds
out
mov
jo
push
mov
int
cmp
arpl
and
cmpsb
jle
mov
test
mov
mov
gs
sbb
fucomip
nop
out
loopne
sbb
xchg
xchg
xchg
sbb
adc
xchg
movl
and
jbe
push
lahf
arpl
jae
fcoms
inc
mov
pop
xor
xchg
mov
push
fwait
sbb
jnp
ja
mov
into
cmpsl
out
daa
push
sbb
imul
aam
xchg
sti
or
mov
pop
and
cvtpi2ps
xor
test
call
adcb
ja
outsb
outsl
xchg
mov
or
mov
mov
xor
clc
fstps
pushf
adc
xchg
jne
xor
lret
xor
mov
mov
mov
jnp
xchg
in
inc
or
data16
test
test
inc
test
call
fwait
in
or
inc
not
mov
mov
out
out
pop
xlat
jns
lods
fcomp
pop
jge
das
nop
mov
mov
jae
pop
lcall
out
pop
cltd
mov
cmpsb
and
test
shll
mov
bound
xchg
mov
mov
jo
push
add
pop
ljmp
test
adc
mov
aaa
add
out
sub
lods
push
lea
mov
imul
cmp
test
jb
mov
xchg
lds
add
cmp
pop
loop
scas
sbb
dec
scas
add
or
test
test
add
aam
fcmovbe
adc
out
mov
mov
sbb
in
inc
out
popa
pop
cmp
mov
fs
jl
cwtl
pop
or
mov
mov
cmp
add
lret
rsm
pop
fiaddl
sub
cli
cmp
pushf
inc
push
mov
cwtl
movsl
inc
int3
or
push
mov
lock
or
fsub
in
cmp
ja
mov
shrb
sbb
pushf
int
popf
xchg
insl
dec
hlt
mov
imul
int
bound
shll
or
mov
cmp
aam
pop
xorl
out
dec
jo
int
mov
out
adc
or
jl
cmpsl
or
mov
xchg
xor
mov
inc
pop
aas
xor
cmp
lock
shl
cltd
sbb
popa
jmp
movsl
push
scas
sbb
xchg
vpunpcklwd
mov
cmc
lods
out
xchg
sbb
leave
insl
lahf
jp
mov
das
push
xor
iret
cwtl
ficompl
insb
ss
mov
xchg
popf
test
or
push
xchg
mov
shl
clc
test
ss
out
cmc
push
xchg
clc
adc
xor
sub
jne
insl
lods
popl
jne
pop
sub
sbb
dec
dec
adc
stos
lds
cmp
mov
sahf
xor
daa
mov
and
aas
lahf
and
dec
mov
rclb
mov
inc
sbb
stc
jne
or
ja
push
inc
clc
pop
das
outsb
add
lock
xchg
sbb
push
cmp
std
pusha
pop
mov
psubusb
lea
mov
and
lahf
add
lea
xchg
xchg
mov
dec
adcb
adc
xchg
test
ficompl
clc
mov
pop
mov
dec
das
xchg
rcl
jne
lcall
mov
pop
cwtl
cwtl
and
cltd
fstpl
pop
in
pop
hlt
dec
cmc
mov
fcmove
pop
xchg
mov
aad
aad
stos
mov
nop
cmpsl
pop
jae
dec
jae
ljmp
jnp
sub
xor
aaa
int
push
sbb
jl
and
xchg
push
jne
lea
inc
xor
inc
inc
lods
fldl2e
es
jno
dec
add
aas
mov
js
popa
adc
sarl
lock
rcrl
push
pop
push
mov
shr
cmp
inc
rclb
inc
dec
pop
outsb
xlat
mov
mov
ss
daa
insl
mov
cmp
adc
push
xchg
in
mov
cwtl
insb
jae
cmp
inc
mov
mov
xchg
push
out
in
mov
add
and
ljmp
xchg
sti
scas
outsl
mov
daa
and
outsb
iret
repz
mov
adc
or
adc
call
cld
ret
mov
dec
jge
sub
gs
mov
pop
cmp
fmull
dec
cltd
dec
in
int
in
mov
cs
arpl
xchg
sahf
dec
data16
ja
xchg
and
in
loopne
test
mov
pushf
adc
mov
das
mov
cs
xchg
push
jl
out
stc
pop
jge
lahf
shll
fbstp
loop
xorl
fwait
adc
mov
icebp
inc
enter
mov
data16
retw
or
add
jmp
add
push
out
ss
inc
jo
daa
orl
into
lods
cmp
lds
insb
cmpl
adc
add
sub
or
fcoml
sbb
xor
add
add
add
add
xor
mov
popf
add
lods
mov
xor
enter
aam
fdivrs
mov
cs
or
dec
outsl
out
sbb
fdivr
stos
pop
bound
mov
leave
push
movsl
mov
add
cli
aad
out
sbb
xchg
stc
out
cmp
or
scas
call
inc
sahf
aad
je
push
lods
in
stos
jl
mov
bswap
inc
add
sbb
fldt
push
popf
orb
popf
inc
cmpsl
or
mov
xchg
and
js
lods
or
mov
mov
add
mov
push
sarb
dec
jp
and
jl
add
lock
dec
xor
pushl
ljmp
test
loope
jo
shrl
adc
mov
sbb
jecxz
pop
pop
push
inc
cmp
hlt
shlb
aaa
adc
loopne
sub
pop
mov
push
sbb
repnz
and
aad
pop
push
jbe
ljmp
lahf
inc
mov
and
cmp
out
adc
jbe
ret
mov
lods
repz
inc
jle
lods
aam
xor
or
jns
sub
loope
sarl
cld
and
and
xchg
mov
pop
sbb
lea
xchg
or
ret
add
push
aaa
sbb
cmp
jns,pn
sar
sbb
jbe
mov
cmp
test
and
sbb
test
mov
filds
sbb
xchg
mov
sti
out
fdivl
lods
fsubrp
pop
mov
jge
aad
sbb
insl
mov
xchg
dec
movsb
mov
add
pusha
cmp
pop
jb
test
xlat
mov
push
call
pushf
mov
pushf
call
das
call
dec
lock
in
xchg
ds
sahf
push
mov
insb
jecxz
hlt
mov
xchg
or
out
xor
mov
loope
jl
pop
adc
push
jae
mov
rol
lret
arpl
sub
sub
enter
mov
mov
cld
push
mov
xchg
dec
aaa
sbb
stos
jne
dec
jmp
ds
pop
mov
outsb
xchg
xor
ds
mov
outsb
in
pop
push
mov
jb
mov
inc
fmul
mov
addr16
jo
sar
and
orl
notl
and
les
pop
mov
cmp
insb
inc
mov
imul
dec
out
ret
fdivl
cwtl
xchg
repz
cmpl
jns
sarl
aam
imul
xchg
cmp
jbe
push
fwait
xchg
into
pop
leave
ds
pop
ss
jns
mov
stos
xchg
sub
or
dec
fwait
mov
or
daa
jbe
push
push
adc
outsl
data16
movsl
pusha
pop
xor
cmp
gs
imul
push
cmc
negb
pop
in
icebp
lret
mov
or
xchg
or
adc
mov
rcll
das
loopne
out
shlb
or
adc
insb
loop
cmp
xor
mov
and
aam
stos
push
xchg
pop
sbb
inc
jp
add
adc
imul
fdivr
out
jo
subb
jns
loopne
jle
aad
addr16
fstpt
mov
xor
xchg
lock
sub
cs
or
cli
pop
fstpt
dec
push
or
or
insb
adc
test
adc
test
lds
inc
lock
mov
in
jmp
adc
jle
adc
aad
lret
stos
daa
call
or
jg
mull
mov
mov
jb
notb
dec
ljmp
ljmp
or
ds
and
pop
inc
shl
or
loop
mov
sbb
jo
jb
adc
js
add
mov
mov
cmc
roll
fstl
shr
pop
sbb
popa
movsb
into
rcrb
push
sbb
stos
jns
xchg
ret
push
xchg
xorb
mov
adc
repnz
sub
scas
push
mov
cmpl
mov
lock
push
adc
out
dec
imul
icebp
push
js
push
and
xor
aas
in
push
add
sub
mov
sub
sub
mov
into
pop
dec
add
cmp
push
sbb
addr16
sbb
jg
loope
daa
cmp
out
aam
aad
mov
sahf
mov
pop
pusha
mov
push
lock
push
pop
cmp
jne
mov
mov
dec
pop
mov
stos
dec
push
pop
add
ss
add
test
int
mov
loop
shl
test
mov
xlat
popl
xchg
rorl
out
insl
stos
or
rcl
lods
scas
into
data16
adc
jne
dec
scas
aad
mov
mov
into
imul
fistpl
fnstsw
jb
scas
jae
cmp
daa
and
fsubl
int
test
or
and
push
sub
movsl
icebp
mov
mov
add
pushf
es
sbb
dec
lcall
pop
in
dec
mov
fnsave
sub
or
daa
jl
lods
scas
flds
fadds
adc
xchg
xor
mov
or
fisubs
fstl
sarl
shrb
lret
sub
lcall
cmp
neg
xor
addr16
lds
shlb
push
hlt
std
or
and
enter
pop
add
dec
add
imul
jae
out
jle
jns
jns
ret
stos
adc
mov
outsb
push
jno
inc
stos
mov
adc
push
jns
or
inc
gs
push
mov
lods
loopne
jecxz
cli
adc
ffree
inc
mov
mov
lock
mov
sub
push
xorb
popa
cli
mov
pop
mov
cmp
sub
fistps
push
arpl
dec
jle
out
je
das
push
adcl
cmp
imul
jno
aas
call
ffree
sarl
dec
shll
push
add
mov
out
dec
jg
mov
adc
xchg
scas
pop
jl
push
jb
dec
dec
rol
mov
je
loope
add
fucomi
ja
loopne
test
push
fadds
push
mov
into
pushf
call
and
push
adc
int3
mov
push
or
fsts
mov
movsb
mov
popa
sub
mov
mulb
and
sub
pop
data16
shlb
mov
jnp
sub
popa
mov
and
push
insb
xchg
sbb
jbe
es
cmp
push
mov
sbb
fbld
push
dec
and
jge
movsl
lret
cmc
mov
ja
movsb
ja
cmp
pop
lock
in
fistpl
sub
push
aad
and
cmp
push
dec
mov
imul
dec
repz
push
xor
push
mov
adc
test
mov
ret
sbb
mov
out
cmp
lock
nop
fistps
cltd
mov
xchg
scas
imul
sub
movsl
xchg
xchg
testb
sbb
je
adc
stc
sbb
aad
push
jmp
popa
aad
jno
pop
jmp
mov
dec
pop
push
rcll
dec
jns
mov
sti
dec
xchg
pop
mov
cs
jbe
mov
push
out
add
pop
adc
test
pcmpgtw
or
push
in
pop
mov
pop
fdivrp
test
inc
cmp
nop
in
pop
jo
test
or
mov
and
into
cmp
cmp
imul
or
push
imull
sahf
dec
adc
fistpll
lea
mov
popf
inc
sbb
dec
and
test
sbb
sahf
test
mov
inc
push
jae
fneni(8087
cltd
outsl
imul
outsl
jnp
push
push
pop
mov
into
jecxz
and
mov
lods
pop
call
loop
in
and
pop
dec
dec
aad
dec
xchg
mov
sbb
int3
enter
dec
insl
repz
call
std
out
loope
mov
shll
es
xchg
popf
pop
fwait
jecxz
adc
daa
push
mov
mov
out
mov
xorps
inc
cmp
sub
push
pop
arpl
int
sbb
and
iret
sbb
mov
jle
and
out
ljmp
jbe
inc
mull
mov
pop
and
and
mov
es
fadd
scas
lret
cmp
jg
cmpsl
andl
jecxz
sbb
shll
sbb
sbb
pop
jo
and
cmp
mov
out
ficoms
aaa
imul
adc
adcl
add
subl
mov
add
loope
push
or
xor
push
push
cwtl
cmovne
adc
mov
in
jecxz
lock
rcr
jae
inc
xor
lret
imul
iret
fwait
sahf
add
inc
push
or
shlb
fwait
orl
push
js
mov
sub
shll
inc
inc
push
into
inc
mov
jg
out
mov
loope
iret
fwait
inc
repnz
dec
repz
in
pop
je
arpl
aad
adc
in
sub
ror
xor
sbb
push
cltd
adc
sbbb
adcl
cmp
mov
leave
add
aas
pop
nop
into
hlt
cmpsb
addl
xchg
cmp
loop
movsl
clc
pop
ljmp
mov
sub
sub
add
ja
cmpl
fildll
std
scas
out
arpl
mov
inc
pop
pop
xlat
mov
or
and
mov
mov
inc
sub
movsb
loope
xor
add
cmp
ljmp
pop
mov
rcll
cmp
fdivrs
mov
jbe
subl
mov
in
inc
aas
out
sub
mov
pop
dec
scas
scas
add
out
fs
mov
cmp
xchg
sub
sbb
cwtl
or
pop
fcomps
xor
or
rcll
stc
add
test
test
ret
jo
dec
mov
adc
mov
xchg
or
pop
sti
cmpsb
push
jnp
push
sti
repnz
push
cmp
push
cmpsl
test
cmp
mov
in
loope
cmp
jbe
xchg
sahf
cmp
mov
int
fldenv
leave
orl
or
test
jmp
mov
lods
xchg
push
sbb
mov
aad
mov
push
jge
in
fucom
mov
out
push
add
and
lods
sub
outsb
repz
iret
push
idivl
dec
mov
push
mov
bound
cltd
inc
mov
mov
cmp
dec
leave
mov
pop
rorl
imul
hlt
loop
aaa
mov
adc
or
xchg
adc
jmp
outsb
rcrl
sti
or
in
jge
mov
pop
in
cmpsb
pop
outsl
outsb
push
cmp
xor
aas
mov
lcall
rorb
shrl
ds
insl
in
cld
test
sti
lret
jge
in
cmc
ja
fstps
into
dec
adc
inc
ffreep
push
cmp
push
rorl
decl
sub
inc
in
cmp
notb
jb
sub
dec
pop
fildl
and
sbb
cmpps
cmpsb
repz
testl
mov
lds
lock
or
sbb
fisubl
movsl
jno
mov
aas
jae
fwait
sbb
push
call
neg
adc
xchg
int
mov
pop
or
sub
movsb
pop
gs
xor
stc
ds
lock
mov
cmp
in
js
scas
insl
nop
je
rep
adc
es
and
fimull
and
outsb
sub
insb
ds
xchg
movsb
inc
sbb
ret
and
ss
and
call
mov
mov
jmp
jg
pop
test
loope
adc
lret
mov
mov
sbb
jle
xor
dec
xchg
adc
adc
aas
jle
sub
mov
cwtl
sub
and
scas
fmul
shll
icebp
add
rorl
insb
ret
pop
sub
or
sbb
add
and
mov
push
adc
push
pcmpgtd
adc
push
mov
clc
mov
ret
inc
imul
icebp
xor
data16
pop
inc
add
sub
pop
pop
movsl
scas
cmp
mov
push
push
cli
ret
pop
inc
imul
icebp
xor
out
arpl
xor
pop
sub
add
mov
mov
insl
out
sub
scas
pop
jg
es
pop
fidivrs
les
test
jge
or
mov
mov
add
cmp
pop
jo
js
loope
jecxz
sahf
lds
jo
cmpsb
nop
jb
mov
cmp
jb
xor
cmc
lmsw
adc
lock
jae
push
pop
jge
inc
cmc
nop
insb
pusha
out
cmc
ds
in
push
jg
mov
sub
xchg
scas
out
xor
xchg
dec
fwait
std
out
insl
and
push
ja
mov
mov
pop
dec
dec
dec
aam
push
stos
inc
test
sub
push
aaa
push
xchg
mov
dec
sbb
leave
stos
mov
jecxz
int
jno
cli
dec
xor
jo
pop
pop
sbb
jbe
call
mov
test
hlt
add
push
push
cmc
popf
mov
pusha
xchg
mov
and
xchg
and
cmp
insl
xorb
test
cmp
rcl
mov
mov
movsb
into
notb
fisubl
dec
das
jmp
mov
popf
pushf
insl
inc
inc
xchg
lret
sarl
stc
jmp
sub
mov
lahf
out
mov
leave
lret
hlt
clc
mov
lret
addr16
lock
daa
add
or
mov
push
or
cli
fistps
mov
mov
mulb
mov
adc
lret
retw
xchg
mov
or
lahf
popf
and
leave
inc
dec
cmp
mov
jnp
lock
or
int
add
imul
and
mov
sbbl
repnz
in
inc
jge
shrl
cmp
mov
mov
lock
lret
lret
mov
push
mov
lock
stc
call
mov
jge
jae
inc
and
and
movsl
bound
jle
cmpsb
in
add
les
jo
into
loopne
xlat
sub
pop
sbb
out
negb
and
and
dec
mov
adc
pop
xchg
lods
sahf
fldcw
lcall
loope
negb
inc
mov
sbb
pop
pop
in
dec
inc
lods
lods
popa
dec
rcrb
pop
lods
dec
inc
fadd
add
mov
mov
jno
pushf
push
push
inc
jbe
addb
jl
cld
es
jbe
dec
xlat
out
in
rcll
fsubrl
inc
dec
push
mov
scas
mov
or
xorl
inc
movsb
sub
fsubs
cs
sub
pop
out
dec
jo
jae
cltd
jge
pop
sub
jmp
pop
adc
jge
jno
sbb
rol
test
push
pop
add
and
into
sub
icebp
jmp
ss
mov
mov
pop
bound
ja
lock
mov
aas
out
sahf
push
es
adc
sub
lock
dec
cmpw
cmp
xchg
sarl
push
cmpsl
loop
or
push
xchg
dec
mov
stc
push
lcall
cmp
mov
loopne
xchg
dec
lcall
movsl
jl
lret
jns
stc
inc
mov
jnp
arpl
je
xchg
fildll
es
int
add
into
xchg
jmp
cmp
lret
sti
inc
ficomps
cld
fs
aas
jns
and
xchg
divb
imull
pop
addr16
sub
jg
out
cmpsb
in
mov
xchg
push
clc
lods
mov
notl
les
ret
fisubs
lods
mov
or
in
movsb
pop
jae
lds
add
mov
cmovno
movsl
and
in
or
shlb
cmpl
rorb
push
mov
add
mov
xchg
mov
call
add
lea
loopne
xor
cmpsl
cs
cmp
test
in
pusha
cs
enter
insl
imul
scas
ds
scas
sub
fdivs
and
inc
daa
add
add
ds
xchg
in
sbb
mov
xchg
cld
inc
into
lock
adcl
mov
icebp
push
test
inc
test
inc
push
jb
in
imul
out
add
jae
dec
or
out
leave
fnstcw
jecxz
lret
outsb
push
jle
gs
lret
or
test
outsb
aam
jns
and
inc
cmp
stos
add
mov
orb
popa
ljmp
je
add
fsubrs
pop
fisubrs
dec
ljmp
out
pop
pop
cmpsb
xor
mov
add
lock
jl
pop
mov
popa
mov
inc
adc
dec
loop
sub
addr16
cwtl
xchg
lret
mov
sbbb
cmp
dec
jge
xor
lahf
pop
pop
sahf
and
cmp
cs
jns
and
or
rcll
insb
jbe
mov
js
push
sub
fdivp
lahf
enter
inc
mov
mov
mov
push
push
inc
test
jmp
mov
jns
frstor
jge
add
popl
rorl
decb
push
pop
adc
mov
cs
addl
pop
sub
mov
jns
lahf
lret
add
in
adc
dec
int
cwtl
movsl
fisubrl
pop
push
lea
lock
ja
mov
xor
nop
into
xor
mov
leave
jns
cmp
sti
movsb
aad
in
push
xchg
push
rcll
pop
push
cld
leave
push
insb
pop
jl
cmp
jbe
into
pop
lods
sbb
xorl
shl
adc
lcall
fdivrp
mov
leave
stos
out
jle
mov
and
lret
shl
mov
adc
imul
fnstcw
lods
push
cmp
imul
cmpsl
or
in
popl
int
cs
jae
and
mov
scas
pop
mov
adc
jg
ret
pop
inc
aas
push
xchg
je
push
out
adc
pop
hlt
in
sbb
movsl
push
sahf
add
xor
push
mov
mov
fdivr
jecxz
popa
out
es
mov
mov
xchg
jecxz
cmp
std
mov
jle
cs
inc
cmp
mov
mov
mov
stc
push
loope
loop
push
push
sbb
sbbb
into
aam
sbb
jno
rorb
dec
loop
aad
je
jb
popf
adc
pop
inc
repnz
lock
jno
push
loop
arpl
repz
leave
cmp
push
push
andl
mov
mov
popa
pop
test
mov
xor
movsl
into
fcomps
mov
gs
jbe
cmp
leave
mov
pop
popf
sub
xchg
or
ds
insl
call
ds
add
mov
mov
and
adc
or
and
nop
ss
pop
jae
push
ret
sub
xchg
movsl
movsb
out
call
pop
sbb
xor
cmp
dec
cmp
sbb
rol
mov
xchg
fiaddl
xlat
push
adc
insb
jg
test
jno
out
pop
dec
or
es
fidivl
fbstp
inc
xor
sbb
inc
rcll
aad
div
xlat
sbb
fcmovu
jmp
sub
mov
lods
and
pusha
fstp
inc
lahf
xorb
cmp
aad
sbb
jb
mov
cmc
mov
icebp
ds
outsb
fwait
call
sub
je
sbb
sub
daa
mov
inc
js
adc
flds
incl
rcll
repnz
jb
or
xor
and
dec
lock
filds
mov
pop
jne
sub
or
adc
mov
add
les
push
outsb
mov
cmp
jns
and
decb
xchg
sub
repz
or
ss
mov
lea
inc
data16
mov
and
pop
pop
pop
call
data16
push
clc
adc
scas
or
mov
dec
outsb
in
shrl
cmp
das
std
jg
mov
mov
gs
mov
sar
and
and
mov
xchg
out
daa
xchg
inc
fsubs
mov
inc
cmpsb
lret
jbe
fs
sbb
clc
mov
push
cmpsl
sbb
lea
ja
pop
in
shrl
test
pop
push
in
dec
jecxz
push
mov
clc
sbb
mov
rcrb
jo
cmpsb
leave
xchg
js
dec
movsb
or
or
mov
sbb
lcall
mov
and
call
mov
inc
pop
sbb
mov
andl
iret
jmp
mov
adc
loope
jle
packssdw
aas
push
adc
dec
mov
xchg
jp
pop
fisttps
lods
mov
xor
xor
enter
add
scas
jge
and
sub
ja
rorl
insb
mov
into
dec
jmp
pop
daa
insb
jae
mov
clc
popf
popa
cltd
pop
xchg
aas
cmp
jns
movl
jle
jnp
jne
xchg
mov
mov
or
mov
sti
jp
enter
mov
mov
dec
adc
pop
fnstcw
cmp
adc
loopne
ja
adc
inc
xor
rcr
daa
push
imulb
dec
jno
clc
shlb
cmp
xor
aas
imul
add
cli
sbb
imul
push
out
cmp
call
and
jbe
xor
xor
sbb
dec
jmp
mov
or
lret
lea
dec
push
and
notl
mov
into
icebp
mov
xchg
inc
aam
popa
mov
das
cltd
in
xchg
jae
das
dec
dec
cmc
imul
lret
xorl
jl
sbb
pop
pop
inc
adc
push
test
and
mov
push
jle
pusha
adc
mov
jbe
sbb
imul
lahf
xchg
or
push
pop
xchg
insl
dec
push
sbb
leave
xchg
mov
lds
mov
popa
or
dec
out
pop
and
popa
or
aam
jg
jb
clc
inc
cltd
xor
cmp
inc
gs
dec
out
xor
dec
loopne
cmpsb
mov
mov
sub
mov
mov
decl
mov
mov
fistps
ds
sub
movl
rorb
loope
mov
insb
push
xchg
adc
in
add
das
push
cmp
xor
pop
push
push
scas
mov
shrl
icebp
sarl
xchg
dec
jg
pop
cmpsb
loopne
or
neg
push
pop
out
fiaddl
cmp
and
aam
or
pop
add
enter
inc
xlat
sub
leave
mov
inc
mov
in
and
mov
or
xchg
pusha
or
ss
mov
mov
andb
push
in
jmp
jbe
jg
mov
mov
bnd
adc
std
push
call
and
ja
sub
xor
dec
hlt
rorb
sbbb
cld
stc
into
test
pop
sub
or
jne
or
xchg
daa
add
out
push
lahf
dec
sbb
fwait
das
and
sbb
loope
ja
ss
sub
cmp
sub
pop
inc
pop
enter
or
enter
dec
xchg
xchg
inc
or
das
inc
inc
leave
xchg
xor
movsl
call
push
dec
jns
cmp
mov
imul
adcb
mov
push
insb
fsubrl
mov
iret
pop
fstpt
jns
gs
ja
xchg
jecxz
pop
or
mov
cmp
inc
jo,pt
hlt
loope
leave
bnd
js
pop
test
mov
jns
cs
xor
lcall
push
pop
or
pusha
inc
push
js
addr16
fildl
cmpsl
sbb
sub
xchg
xchg
xor
add
or
das
imul
test
add
lret
imul
into
push
jmp
adc
test
sub
mov
mov
cli
push
lods
in
xlat
pushw
xor
pop
addl
xchg
cmp
push
pop
pushf
push
cltd
pop
pop
sarl
cltd
xlat
pusha
xchg
cmp
fbstp
imul
cmp
mov
js
lods
fdivrl
cmpsl
stos
lock
push
ficoml
cmp
mov
mov
push
mov
movsl
cltd
scas
movsl
ss
fnstsw
mov
fcompl
push
dec
jo
mov
jo
xor
inc
arpl
sub
mov
nop
dec
sbb
int3
fistpll
ficomps
push
lds
cltd
jns
loope
inc
xor
pop
cmc
fsubrs
inc
mov
xorl
ret
or
mov
sub
add
notb
jo
pushf
pop
pusha
shlb
pop
xchg
aam
test
insl
xchg
jne
mov
mov
out
sub
lds
nop
push
addl
andb
les
cs
sub
popa
divl
mov
sub
mov
les
push
aaa
shll
cmp
mov
adc
adcb
cmp
lret
push
aam
adc
inc
movsl
inc
enter
hlt
loop
or
xor
sti
jl
adc
loopne
fsubs
ret
push
jl
xor
push
aaa
inc
fwait
into
adc
popf
add
or
xorb
ja
add
test
and
dec
lds
ficomps
sar
leave
cmovbe
cs
add
add
gs
out
push
mov
cltd
jo
and
add
add
movsl
mov
pcmpeqb
jg
mov
jl
adc
repz
push
add
movsl
jmp
sbb
jmp
xchg
jecxz
fisubrl
xchg
out
mov
or
loopne
sbb
push
push
dec
and
jae
jmp
clc
pop
or
mov
add
int
pop
mov
dec
ds
repnz
nop
inc
sbb
xchg
les
mov
sbb
fmull
cmpsb
hlt
push
int
mov
sub
dec
imul
jmp
aam
call
ds
ret
xor
mov
out
inc
jbe
xchg
clc
sub
and
outsl
stc
ss
nop
sbb
or
fstps
mov
sub
and
stc
cs
mov
lret
xchg
push
mov
fisttpl
flds
xchg
les
push
push
and
and
inc
xor
adc
mov
jmp
mov
and
mov
in
adc
xor
jg
push
mov
arpl
ja
dec
std
insl
sub
inc
into
in
ja
push
dec
xchg
imul
or
cli
gs
mov
jg
cli
xor
outsl
pop
inc
jecxz
pop
mov
imul
mov
jg
out
outsb
in
xchg
cmp
and
pop
lahf
mov
sbb
rorb
cwtl
test
jnp
pop
sub
push
and
sahf
test
ret
inc
fbld
insl
sub
pop
insb
inc
sti
negl
pop
aad
sub
xchg
add
ss
pop
shll
mov
shl
xchg
popf
adc
or
scas
adc
push
popa
and
pop
pop
ret
lret
sub
dec
push
loopne
push
repnz
dec
sbb
push
not
push
cmpsl
cs
and
loope
dec
sahf
shll
xchg
sbb
jmp
sar
clc
xor
mov
test
mov
adc
mov
jg
ds
cwtl
data16
call
adc
mov
loop
out
push
cmpb
push
fisttpll
repz
sarl
leave
or
jg
into
mov
bound
pop
inc
stos
or
jle
pop
cltd
mov
pop
fbld
push
and
mov
dec
lcall
rcr
outsb
xchg
sahf
inc
sub
mov
lahf
and
pusha
shll
add
leave
pop
fcmovb
cmp
gs
jge
clc
aad
pop
sbb
push
pop
in
je
pop
add
push
nop
sub
ficoms
in
lret
jbe
cmp
bound
push
dec
mov
stos
les
cmp
cli
je
dec
rcrl
dec
mov
dec
and
jo
dec
mov
and
leave
fldt
mov
insb
or
lahf
out
sbb
push
fsubrl
in
or
sbb
xchg
xchg
xchg
das
push
xchg
jmp
pop
cmp
inc
dec
jecxz
push
and
and
jo
or
jnp
ret
push
ret
sahf
sarl
mov
inc
and
lret
cli
cli
mov
rcll
mov
lods
cld
or
test
or
mov
cltd
aaa
subb
std
sub
mov
xor
imul
pop
mov
imul
adc
mov
push
rorl
jbe
mov
xor
test
stc
sub
stos
xchg
dec
push
fs
cld
xlat
stc
data16
inc
icebp
sub
sub
push
outsl
inc
sbb
inc
out
scas
leave
cmpsl
pop
push
push
jae
and
rcrl
and
aaa
popa
xchg
mov
inc
jbe
bound
test
inc
pop
pop
xor
xchg
fidivrl
outsb
test
xchg
fnstenv
and
movsl
test
mov
xchg
movl
fmuls
dec
enter
cmpsb
xchg
or
jb
xchg
mov
test
cltd
mov
add
cmp
orb
mov
loop
jge
test
jle
and
pop
pop
mov
cmp
lods
pop
call
xor
xor
push
cmp
mov
ds
push
sbb
mov
mov
cmp
push
lea
test
push
fdivrl
dec
dec
or
sub
fs
shr
push
pop
mov
and
push
scas
add
or
test
jecxz
adc
push
sbb
ds
mov
inc
inc
shll
mov
leave
paddsw
or
hlt
sbb
outsl
subl
pop
push
or
lds
or
sub
dec
mov
add
mov
fldt
mov
fnstsw
pop
mull
ret
push
push
clc
test
inc
scas
mov
sbb
lret
lret
or
dec
mov
sahf
push
call
jecxz
sub
lock
and
push
repz
and
imul
xor
mov
lods
mov
mov
loope
mov
sub
fnstcw
mov
dec
jb
jge
cli
inc
adc
shll
dec
cwtl
xor
int3
je
bswap
or
loopne
jl
movsb
dec
adc
xchg
mov
insl
lods
jae
call
add
add
add
dec
out
xchg
jno
out
lods
lods
arpl
inc
dec
push
sbb
and
inc
imul
jp
cmc
push
mov
inc
std
push
aam
lock
ljmp
jmp
les
pop
cwtl
sti
mov
adc
fwait
scas
jmp
xchg
dec
sbb
mov
inc
ret
test
fsubrs
jg
mov
xor
sbb
mov
rcll
andb
lret
fcompl
sahf
mov
cltd
mov
and
dec
mov
adc
testl
xchg
and
or
or
xchg
sahf
sbb
ficoms
mov
mov
push
cmovae
xchg
inc
rolb
inc
dec
sub
sbb
test
dec
popf
lods
push
and
icebp
jp
das
int
sti
subl
mov
fidivrl
loope
inc
jb
mov
mov
addb
insb
push
ret
cmp
sahf
xor
cltd
inc
inc
int
jbe
fdivs
cli
loope
test
aas
fnstcw
nop
lods
and
sbb
sbb
jbe
push
jle
sub
scas
dec
fmull
mov
nop
inc
fstps
and
cmp
or
sbb
rcl
jnp
inc
mov
repz
popf
call
cmc
pop
xchg
or
ja
sar
jb
clc
pop
mov
in
aaa
pop
cli
xchg
popl
adc
jnp
push
jo
mov
push
add
sbb
popa
sbb
mov
xor
imul
fnstenv
dec
insb
cltd
ror
pusha
pop
cld
test
mov
mulb
pop
je
sbb
jnp
or
mov
fsubr
lea
xor
or
add
hlt
popa
push
jle
mov
ljmp
icebp
in
sbb
dec
mov
movsl
rclb
lods
push
loopne
or
push
stc
fs
and
cltd
jg
scas
lcall
lock
fstl
inc
repz
jmp
dec
jmp
dec
mov
dec
fwait
sbb
adc
xchg
jecxz
jl
cmp
cmp
sub
push
dec
shlb
test
cmp
pop
scas
dec
mov
inc
mov
cli
pop
adc
mov
sub
xchg
xchg
lcall
cwtl
data16
imul
ds
aam
pop
xchg
fimuls
mov
and
gs
pop
ret
bound
cmp
outsl
aad
pop
es
jne
or
scas
sahf
daa
jo
pop
dec
loopne
fs
jmp
push
rcll
int
mov
or
icebp
add
cltd
fs
stc
dec
lods
inc
mov
gs
in
pop
mov
jno
dec
push
pop
sahf
cmp
pushw
ds
in
fadds
mov
daa
jp
outsb
sarb
dec
sti
inc
add
xor
adc
push
lock
sub
scas
xor
je
scas
aas
andb
mov
mov
out
pop
pop
fs
lret
and
sahf
adc
popa
sub
ja
xor
adc
hlt
adc
adc
icebp
add
loope
outsb
sti
mov
shl
mov
fwait
mov
xor
in
jns
pop
adc
pop
movsb
mov
xchg
scas
xchg
and
in
or
or
shr
lcall
gs
frstor
rcr
mov
enter
data16
xor
xchg
push
fildl
and
das
pop
ds
fdivr
push
mov
mov
fldl2e
call
pop
push
repz
leave
inc
cmpsl
ss
addr16
int3
inc
push
leave
std
xchg
popa
add
sti
pop
ret
or
addb
sbb
cmp
dec
dec
fidivrs
push
and
fnstenv
shll
cmp
jmp
fistl
push
xchg
pop
mov
or
aam
daa
and
out
jg
sbb
das
and
test
pusha
mov
jnp
inc
or
mov
xor
arpl
sti
xorl
push
and
pop
push
dec
cmpsb
dec
popf
inc
out
cltd
mov
sub
imul
jecxz
int
ror
push
mov
push
arpl
mov
lock
cmc
negb
mov
pop
pop
stos
sub
stos
lret
dec
cs
mov
push
js
iret
push
ja
jge
stc
out
sub
jle
mov
dec
cmp
mov
sbb
and
mov
fs
add
int
and
jno
mov
dec
es
mov
mov
mov
ja
cmpsb
movsb
js
add
in
cmpsb
mov
add
inc
int3
pavgw
mov
jmp
xchg
scas
inc
or
iret
into
cwtl
mov
jbe
mov
in
mov
mov
cmp
sar
ret
jmp
fsubr
sti
jnp
in
pop
cmpsb
pop
stos
jl
cltd
stc
xchg
sub
and
push
lods
push
and
xor
ficompl
xchg
cmp
popa
shlb
into
fdivl
xor
sub
les
dec
dec
stos
jae
jns
aam
fwait
sub
iret
jns
cmp
push
inc
push
aam
sarl
popa
xchg
aam
inc
pop
inc
push
xchg
test
mov
mov
orl
adc
mov
cli
xor
orl
scas
mov
popf
ljmp
imul
aam
lock
adc
scas
outsb
adc
cmp
inc
mov
dec
dec
in
jl
xor
fildl
inc
lret
dec
mov
bnd
sub
pop
xchg
add
push
adc
xor
clc
inc
cmp
rcrb
lods
in
add
and
sub
cmc
sti
push
dec
add
fisttpl
xlat
aaa
popa
sarb
adcl
sbb
bound
lock
addr16
arpl
call
neg
xchg
outsl
jecxz
andl
popf
clc
in
and
movsb
lret
inc
pop
inc
ja
push
sbb
pop
sti
sbb
je
cmp
jecxz
mov
mov
mov
icebp
push
nop
mov
push
and
dec
mov
push
cmp
and
mov
xchg
or
ja
xor
lcall
xchg
dec
imul
dec
iret
sub
ljmp
mov
sbbb
mov
out
add
add
pop
sub
push
or
cmp
or
push
adc
loopne
sub
mov
inc
push
xchg
js
dec
popa
bnd
sub
outsb
cmp
and
leave
mov
cwtl
push
and
pop
icebp
ss
repz
fsubrs
adc
cmc
sub
jmp
lret
js
fdivs
add
jmp
lahf
sar
insb
popa
pop
imul
fs
nop
inc
mov
xchg
subl
gs
mov
sub
mov
test
sub
hlt
or
jb
shr
shll
mov
nop
movsl
push
mov
dec
and
jbe
mov
push
mov
add
lcall
jo
cmpsb
insb
mov
movsl
jno
outsb
out
int3
mov
sti
push
push
lea
cmp
ljmp
bound
sub
mov
insl
fimull
sub
jbe
push
imul
bound
lret
mov
movl
es
mov
popa
addr16
in
jecxz
xchg
mov
xor
lods
aas
loop
shll
ret
leave
aas
mov
mov
scas
jb
fisttps
cmpl
rcl
inc
xchg
test
cltd
ljmp
cmp
cmp
popa
mov
std
fidivrs
xchg
mov
mov
iret
add
or
mov
cli
pop
out
pop
dec
testl
adc
xor
repz
or
jne
rclb
loop
jge
lds
jp
push
mov
pop
push
gs
les
dec
xchg
fadd
daa
lcall
and
shr
jne
dec
push
outsb
adc
dec
jle
push
test
ss
sbb
xchg
cmp
sub
rcrb
ss
xor
pop
push
test
xor
or
jb
sbb
gs
mov
jbe
dec
sbb
mov
in
xor
movl
scas
xor
sbb
out
shlb
xchg
pop
xor
jbe
sahf
mov
xchg
movb
lahf
stc
movsb
mov
add
inc
push
test
popf
fisttpl
jb
leave
lds
out
sub
inc
push
inc
push
mov
rol
jp
adc
pop
mov
or
movsb
inc
sbb
arpl
rorb
cmpsl
out
rol
movsb
adc
pop
cmp
mov
sti
enter
call
test
daa
nop
test
fidivrs
lret
aas
xchg
sbb
jbe
in
xchg
and
insl
push
or
in
es
nop
lahf
dec
subl
lahf
adc
push
pop
jle
jo
in
sbb
fdivs
mov
inc
jae
or
push
in
mov
cmpsl
dec
cwtl
cwtl
pop
stc
movsb
daa
or
xlat
push
mov
gs
xor
jl
mov
dec
mov
cmpsb
xchg
popf
neg
sub
das
xor
xchg
insl
loopne
mov
test
and
outsb
mov
fwait
ljmp
fcomi
cwtl
popf
out
hlt
pushf
sbb
xchg
imul
cmp
clc
sub
add
xlat
push
dec
sbb
jg
ret
or
mov
das
dec
adc
in
shrl
mov
call
movsb
push
lret
inc
insl
test
mov
pop
fwait
sub
jae
mov
xchg
int3
jbe
adc
loopne
or
mov
or
adc
push
clc
cld
imul
call
jg
add
ficomps
inc
data16
mov
xchg
loopne
mov
imul
add
and
xchg
fistl
mov
or
mov
into
xor
cmpsb
test
clc
pop
outsb
push
mov
push
cmpsb
sarb
and
sbb
push
mov
aaa
pop
clc
movsb
jo
in
popf
lahf
out
ret
fiaddl
inc
and
jbe
cmpsb
sub
shlb
jl
mov
leave
aas
cmp
jno
push
sti
out
xchg
push
mov
jle
inc
popa
subl
inc
rolb
xchg
push
xchg
daa
lret
cmp
insl
aam
cld
jmp
mov
mov
rcr
cmp
daa
xor
fwait
outsb
lods
dec
fwait
test
push
adc
cmp
sub
cs
inc
bsf
inc
xor
jnp
push
xor
cmp
jecxz
jg
fwait
jge
lods
lock
push
cmp
rcl
jecxz
xchg
sbb
jb
aaa
sbb
jb
push
inc
jecxz
xchg
jnp
dec
jp
icebp
push
xchg
dec
enter
mov
xchg
out
xchg
sti
xchg
mov
bound
popa
stc
adc
inc
movsb
inc
xchg
xchg
fs
insb
or
sbb
test
xor
int
fidivs
subl
mov
jmp
and
xor
std
mov
cmp
push
dec
and
xchg
out
cmp
adc
lret
icebp
mov
loope
jmp
lahf
rep
sti
mov
sub
dec
jmp
test
jge
xchg
popf
inc
fucom
dec
mov
jb
hlt
add
fidivl
xor
mov
cmpsb
les
xor
and
jbe
sub
xchg
push
std
call
and
xchg
stos
gs
push
xor
movsl
mov
xchg
jne
cmp
xor
cwtl
cli
adc
les
bswap
sub
mov
lret
loopne
push
pop
call
mov
cld
movsb
and
sbb
cltd
jo
movsb
mov
lds
or
sbb
stos
es
iret
jno
add
pushf
and
cmpsb
push
repz
cltd
jo
ret
mov
fsubrl
js
dec
add
aas
mov
popa
xor
fisubrs
push
mov
sub
je
cli
leave
xor
inc
stos
push
stos
cmc
jge
jmp
adcl
pop
lahf
lret
xchg
add
mov
mov
dec
fdivrl
je
out
xorl
dec
ret
jl
mov
push
cmp
pop
or
adc
sub
and
sbb
ljmp
cmp
adc
xor
xchg
lock
sub
push
lcall
popa
movsb
sbb
sbb
pusha
fdivl
inc
xchg
xor
and
xchg
std
das
xchg
nop
adc
and
ljmp
xchg
sahf
scas
cld
cmp
cltd
cmp
or
jno
xchg
mov
call
ss
jae
pop
jnp
adc
inc
out
xchg
cmc
xchg
in
js
testl
loop
rorl
mov
mov
mov
push
cmpsb
aam
inc
mov
shrb
add
xor
int
sbb
mov
pop
mov
dec
hlt
or
dec
jb
mov
imul
jmp
shll
mov
xchg
jmp
adcb
and
xchg
arpl
out
out
jecxz
push
mov
or
ss
adc
scas
pop
sbb
pushf
push
add
mov
mov
ss
pop
loope
mov
xchg
xchg
jae
add
mov
fs
mov
ja
out
cltd
ss
fists
lods
mov
iret
pop
pop
pop
ret
inc
pop
test
pop
jge
jmp
ror
pop
test
and
jb
cmpxchg
scas
sti
pop
and
jmp
cmp
pop
inc
xchg
mov
cmc
out
clc
dec
mov
mov
pop
rcr
sbb
adc
daa
clc
test
inc
push
cmp
lea
ss
ja
jmp
faddl
cld
rol
clc
pavgb
in
or
call
leave
je
push
cltd
push
sarb
mov
dec
es
incb
cmpsl
movsb
fidivs
lret
inc
insb
jl
and
mov
and
xor
andb
sarl
outsl
pop
push
sbb
cld
cmp
arpl
fldl
lret
sbb
repnz
lahf
and
pop
or
fsubs
fstpt
cmpsb
or
std
mov
push
mov
test
jecxz
xor
fs
mov
outsb
or
xchg
test
mov
mov
mov
mov
jl
repnz
fmulp
loop
mov
outsb
clc
sub
enter
std
jbe
lcall
and
cmpsl
mov
mov
cwtl
icebp
jge
imul
pop
jecxz
stos
mov
push
imul
mov
pop
sbb
in
jl
mov
aaa
sbb
add
xor
jae
add
stos
jp
and
fdivs
nop
pop
fadd
ja
cmc
std
and
loope
and
sbb
cmpsb
sti
cmp
add
adcb
or
scas
fidivs
mov
hlt
mov
gs
mov
jo
ljmp
inc
daa
add
cmpsl
xchg
and
mov
inc
mov
push
insb
outsl
push
out
dec
cmp
and
mov
or
fsubs
xchg
std
leave
add
lds
push
sub
push
add
jl
pop
andl
rorl
repz
aam
pop
or
in
push
mov
xchg
cmpsl
outsb
jp
outsl
and
mov
jmp
sbb
sub
push
cmp
popf
jecxz
arpl
sbb
mov
popa
fiadds
push
out
mov
jnp
lock
lcall
xor
imul
pop
into
enter
inc
push
popa
push
movsb
ljmp
and
aas
adc
js
gs
ror
sub
mov
lahf
aas
jle
sbb
inc
insb
mov
repnz
push
cwtl
cs
out
cmovbe
into
jo
mov
add
push
pop
stos
test
les
int
mov
lds
xchg
hlt
add
xchg
pop
addb
std
sbb
imul
sbb
xor
in
and
cmpsl
popa
int3
cmpsl
jne
insl
js
test
fwait
dec
int3
push
dec
push
jg
ror
jg
je
xlat
aad
aas
mov
jne
lea
jg
icebp
test
mov
add
jae
mov
and
insl
add
out
test
sub
pop
pop
imul
push
and
push
test
mov
inc
mov
jmp
fwait
or
inc
fistpll
jo
push
add
mov
ret
and
jne
aam
mov
in
out
test
adc
loop
pop
pop
mov
pushf
out
pushf
dec
popa
popf
fimull
cmpsb
fistps
add
std
das
or
arpl
jg
jae
sbb
sbb
pop
test
add
adc
lds
sbb
push
ret
notb
jp
dec
mov
mov
cwtl
cmp
sub
xor
cmp
int3
push
mov
mov
neg
and
rcll
fwait
and
cs
pop
fsubl
push
lock
in
mov
aaa
cmp
add
jp
pop
out
in
out
bound
mov
jl
and
jecxz
inc
shll
imul
imul
testb
in
inc
adc
push
push
sub
lods
test
pop
pop
xchg
push
ficompl
jns
aam
pop
mov
shl
mov
gs
int
pop
jns
inc
lea
add
xor
cmpl
and
lea
inc
xchg
test
lea
loopne
mov
lret
mov
nop
aas
pop
cmp
mov
add
gs
sub
pop
or
movsb
scas
push
fmul
in
stc
aam
xor
mov
int
fidivs
bound
nop
stc
cmp
jp
data16
jns
dec
lock
sbb
adc
icebp
arpl
add
inc
pop
pop
dec
jae
das
mov
add
cwtl
shrl
inc
push
push
int3
ficompl
xor
mov
or
movsb
cmp
test
loope
adc
mov
aad
lods
mov
imul
js
mov
push
mov
and
or
add
jbe
push
scas
lods
sar
sahf
lret
dec
sub
sbb
xchg
sbb
popf
int
dec
jle
push
pop
in
mov
mov
stos
mov
test
hlt
add
inc
mov
xchg
imul
cmpsl
or
shl
push
mov
dec
cli
xor
fistl
fstpl
inc
hlt
adc
lret
rclb
dec
sub
mov
test
cli
adc
jge
mov
fnstsw
push
adcl
mov
aas
mov
lret
dec
dec
xchg
data16
cld
pop
cmp
and
cmp
sbb
lock
ret
push
mov
outsb
jl
xlat
mov
int
sbb
test
mov
subb
add
jnp
pop
insl
hlt
sahf
push
mov
movsb
popf
rorb
jo
pop
inc
dec
sub
movsb
in
pop
dec
jnp
sbb
dec
stos
fistps
ja
jmp
das
outsl
mov
jno
dec
gs
addl
sub
and
pop
popf
dec
push
dec
jge
cmp
and
icebp
adc
gs
cmp
lods
dec
les
loop
int
xchg
sub
sub
sbb
cmpsb
je
lds
push
addr16
xor
jmp
push
fbld
mov
ljmp
add
mov
arpl
mov
int3
dec
mov
pop
jnp
mov
ret
mov
lods
inc
add
cmpsb
sub
mov
std
fbstp
pusha
jge
fcmovnb
pusha
xchg
outsl
push
jg
pop
cs
icebp
mov
sarl
sbb
dec
sbb
cmp
popa
iret
ja
fwait
push
sub
mov
jno
std
sbb
std
shlb
imul
int3
xor
mov
sbb
mov
loopne
adc
fidivl
sbb
popf
pop
sub
int3
xchg
mov
lahf
sbb
movsl
daa
pop
test
gs
icebp
or
add
stc
lods
adc
lods
fimuls
ds
fwait
cmp
dec
pusha
pop
cmp
sbb
mov
out
pop
xchg
dec
mov
pusha
jb
sub
xor
mov
sbb
xchg
fcmovne
stos
out
add
test
test
repz
addr16
mov
pop
and
jecxz
jl
jmp
xchg
dec
mov
inc
pop
cltd
pop
cwtl
out
jle
sbb
lods
das
popa
daa
loop
dec
int
cmp
push
ss
inc
or
mov
adc
jne
sbb
movsl
iret
cmp
adcl
out
cmpsl
fs
in
dec
aam
in
std
push
inc
fiadds
cmpsb
loop
dec
sbb
outsl
push
shrl
aas
lret
ja
js
xlat
xchg
xchg
push
xor
shll
andb
out
mov
cmp
out
push
testl
sbb
cmp
pop
shl
call
nop
xchg
out
inc
fsub
sub
sbb
iret
sbb
adc
xchg
dec
sub
pusha
bound
test
xor
into
icebp
inc
push
xchg
mov
cmp
ja
dec
push
or
dec
xlat
movsb
repz
xchg
test
inc
sti
stc
add
sub
mov
or
cld
mov
mov
vandps
adc
stos
lret
in
sbb
pop
aam
insb
fisubrl
sbb
out
cmpsl
and
popl
pop
sub
add
mov
push
mov
arpl
adc
cmp
cs
lea
pusha
data16
cmpsl
cmp
push
arpl
lretw
pop
lret
aam
jb
out
xchg
and
mov
movsl
jne
mov
into
lahf
scas
pop
sub
add
clc
insb
add
push
rorl
lret
ret
cld
and
sbb
mov
arpl
adc
and
out
pop
xor
add
xchg
jne
data16
and
sub
xor
mov
aas
sub
lahf
repz
in
add
aaa
mov
js
push
popl
jns
enter
inc
outsb
stos
outsl
jge
inc
or
push
aam
lret
jo
mov
adc
sbb
add
sub
cmp
mull
mov
push
clc
shll
aaa
push
dec
jp
lret
and
nop
jno
inc
xchg
test
jb
imul
jns
mov
mov
cmovb
or
int3
or
push
loopne
jae
lret
mov
xchg
leave
mov
xchg
enter
add
adc
add
movsb
pop
jns
push
fimuls
sub
dec
mov
xlat
pop
jae
fwait
into
adc
jno
pop
mov
imul
fnsave
adc
rclb
or
sub
ja
leave
jnp
sub
push
test
dec
shrb
and
nop
fldt
mov
push
mov
sub
add
loopne
pop
xor
inc
sub
mov
fsubrs
stc
insb
test
out
xor
sub
imul
add
movsb
mov
jb
mov
shl
xor
imul
jno
shrb
ja
fstps
shrb
js
rolb
or
stc
lods
jmp
and
ret
push
fwait
sarb
jnp
adc
popf
aad
notb
mov
mov
imul
loop
mov
jae
in
xor
push
daa
xchg
mov
push
ja
lcall
lds
pmulhuw
ret
xor
lret
xchg
xchg
jns
inc
mov
mov
rcrl
cmp
pop
ret
jo
xor
xchg
mov
dec
fs
xchg
aam
jg
pop
daa
test
test
dec
scas
mov
cmpsl
cs
jecxz
mov
lcall
xchg
loop
sbb
sbb
sbb
outsl
popa
jbe
mov
push
inc
push
aaa
clc
push
pop
shll
jne
and
lock
mov
imul
xchg
mov
filds
rcrb
jge
lea
int
out
test
fs
fisubs
sbb
mov
fwait
push
dec
insl
mov
shrd
cmc
repnz
adcb
xchg
out
jp
popa
imul
push
ds
push
sub
xor
mov
jae
pop
or
notb
out
push
mov
lret
push
sbb
mov
int
fdivs
pop
adc
or
into
xchg
jmp
lret
xchg
pop
fimull
pop
jecxz
mov
mov
fistpll
push
and
mov
dec
dec
mov
fcmovne
rolb
nop
cld
insb
sarl
aaa
imul
pop
mov
aad
and
mov
out
sbb
or
push
aad
mov
push
repnz
jmp
pop
xlat
stos
xor
ret
outsl
ficoms
int
mov
pop
push
std
ret
fcompl
mov
cmp
adc
and
inc
test
imul
or
and
mov
mov
cmp
test
stos
icebp
or
pop
stos
shrl
pop
inc
arpl
xlat
sahf
jg
and
push
sub
cltd
sub
inc
mov
push
jecxz
stc
dec
push
repz
add
cmp
aas
ret
movsl
lret
outsb
loop
mov
ss
stos
push
shll
nop
jno
aad
xchg
or
mov
dec
cmp
les
mov
test
xchg
mov
js
dec
xchg
lods
out
rcll
sub
lock
fcoms
popa
bound
dec
ret
adc
aad
call
fnsave
sub
mov
ja
xor
sbb
push
push
lods
lret
lret
jg
mov
inc
inc
and
ljmp
mov
fistps
lds
outsb
xor
fdivl
lds
pushf
dec
pop
addr16
sub
cmc
lods
xchg
jmp
sub
pusha
aaa
adc
adcl
xor
andb
pushf
aam
jecxz
mov
adc
repnz
or
push
ss
ffree
mov
and
sbb
ret
testl
and
pop
cmp
lcall
mov
push
push
adc
mov
push
dec
repz
insl
cmp
in
nop
cs
mov
pop
push
and
insb
mov
sub
mov
sbb
or
xor
push
ss
push
cmp
mov
jno
ret
mov
xor
sahf
jnp
into
adc
aaa
js
add
xor
jg
pop
cmp
rcr
mov
pushf
in
cmp
mov
mull
je
es
adc
mov
test
push
je
xor
fsubrl
cmp
movsb
mov
and
das
rol
pop
cmp
pop
popf
or
pop
movsb
adc
push
and
xchg
in
fsubl
mov
add
fld
mov
addr16
cmp
mov
jno
xchg
ret
push
fildll
push
ficompl
loopne
cmp
jo
xchg
dec
sbb
inc
sbb
pop
push
mov
int3
fidivrl
aad
nop
out
jae
adc
and
xor
dec
and
imul
pop
mov
jbe
pop
sub
incl
mov
mov
repz
and
divl
fimuls
pop
adc
pop
loop
out
push
sub
xchg
popf
mov
cli
test
ret
and
inc
popf
shlb
subb
jno
pop
xor
xchg
or
clc
push
dec
outsb
sahf
sbb
les
ja
ja
ficompl
psubw
dec
fcoml
xchg
lds
int
sbb
aad
push
fidivrs
ja
les
or
xchg
fstpt
and
sbb
movl
xchg
int3
mov
jecxz
sbbl
cmp
push
jno
xor
fidivrl
and
pop
nop
addl
or
sub
arpl
mov
mov
imul
mov
mov
mov
mov
push
test
xchg
out
mov
movsl
xor
sub
jg
in
mov
dec
and
pop
jo
and
outsl
lcall
aas
rcrb
xchg
repnz
sub
jno
das
cli
es
push
dec
or
mov
and
popf
add
sahf
fsubl
fdiv
cmp
mov
lods
icebp
mov
inc
and
push
iret
push
cs
xchg
push
inc
adc
or
pop
push
clc
push
and
in
pop
lcall
sti
idivl
jb
imul
xor
cmp
test
jae
popa
jg
iret
push
cmpsb
stos
or
aaa
in
cld
push
popf
add
stos
sbb
pop
xor
pop
sbb
sbb
dec
sbb
adc
cld
cs
jge
repz
addr16
cltd
pop
push
cmp
dec
in
lods
lock
dec
test
xor
xorl
dec
jecxz
xchg
push
lea
mov
pop
adc
jecxz
adc
in
clc
jbe
jbe
into
pop
mov
leave
pop
into
outsl
inc
mov
push
push
adc
push
mov
mov
js
popf
or
fldt
sbb
rcll
dec
fists
fimull
scas
mov
lods
cmc
insl
sahf
cmpsb
or
xor
dec
ficoml
pusha
xor
pop
sbb
fsubrl
ret
dec
das
mov
pop
or
mov
mov
idivl
addl
das
push
dec
mov
daa
sbb
jp
and
xchg
out
in
daa
xor
xor
mov
add
cmp
jnp
xchg
or
mov
jns
mov
fimuls
or
xchg
stos
sbb
add
add
add
add
dec
and
outsl
push
dec
add
xor
xor
xor
dec
inc
pop
add
dec
aaa
xor
dec
inc
push
and
cmp
inc
ss
insw
xor
dec
xor
xor
aaa
pop
cmp
xor
and
cmp
and
xor
add
cmp
xor
fs
inc
push
imul
jp
inc
jne
and
and
xor
jno
jno
push
push
adc
push
inc
adc
mov
adc
jne
adc
or
adc
jp
adc
lea
add
adc
dec
or
add
dec
adc
adc
adc
jl
adc
loopne
adc
test
pusha
adc
push
arpl
add
adc
xor
adc
inc
pop
adc
movups
rorb
adc
in
push
adc
jp
adc
dec
adc
add
sub
adc
sub
add
pop
adc
test
adc
int
adc
insl
movups
iret
push
adc
sarl
add
adc
shlb
add
pop
adc
ljmp
add
xor
add
or
add
push
adc
xlat
sub
add
add
pop
adc
rcrb
sub
imul
add
adc
rolb
add
or
add
adc
mov
sub
add
adc
add
sub
add
add
pop
arpl
inc
gs
push
and
aaa
dec
bound
push
add
jb
push
dec
push
cmp
dec
aaa
inc
jne
dec
xor
push
arpl
and
xor
and
addr16
ja
inc
push
xor
jno
dec
and
sub
cmp
pop
push
popa
imul
push
imul
ja
and
xor
data16
push
and
dec
inc
je
inc
xor
dec
popa
xor
inc
cmp
push
add
data16
gs
ss
cmp
xor
push
jne
xor
aaa
outsb
jbe
aaa
jne
and
and
push
inc
aas
and
pop
inc
cs
inc
and
jne
cmp
outsl
xor
and
push
jp
dec
xor
add
and
dec
jp
jns
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
imul
or
add
imul
sbb
add
imul
sub
add
imul
cmp
add
imul
dec
imul
push
imul
pop
imul
popa
imul
imul
add
inc
add
inc
add
inc
add
inc
add
imul
lea
add
imul
popf
imul
movsl
imul
lods
imul
mov
inc
add
imul
lds
add
xor
pop
pop
push
xor
dec
dec
push
pop
aaa
aaa
xor
aaa
add
dec
pop
inc
dec
xor
pop
push
pop
add
dec
xor
dec
dec
pop
pop
xor
dec
push
add
push
pop
xor
pop
xor
inc
push
xor
dec
pop
xor
xor
push
push
dec
pop
push
xor
pop
cmp
add
inc
pop
pop
xor
inc
pop
push
dec
add
pop
push
cmp
xor
cmp
push
inc
pop
pop
inc
inc
xor
add
dec
pop
xor
xor
dec
push
pop
pop
dec
cmp
xor
xor
pop
push
inc
add
pop
pop
cmp
xor
dec
xor
cmp
pop
push
add
push
pop
pop
xor
dec
inc
cmp
pop
xor
cmp
push
dec
xor
inc
xor
dec
push
aaa
aaa
pop
inc
xor
aaa
add
pop
aaa
dec
dec
ss
xor
dec
add
push
ss
dec
dec
dec
add
dec
ss
push
dec
xor
dec
xor
cmp
dec
xor
cmp
inc
add
add
xor
add
add
pop
add
add
inc
add
pop
add
xor
pop
add
dec
add
xor
pop
add
pop
push
add
xor
pop
add
dec
add
inc
add
add
xor
pop
add
push
add
pop
add
aaa
add
xor
add
add
add
pop
add
inc
add
inc
add
push
add
pop
add
add
inc
add
xor
xor
push
add
xor
pop
add
push
add
push
add
pop
add
dec
add
pop
add
add
add
cmp
cmp
dec
add
add
inc
add
pop
add
xor
xor
inc
add
xor
cmp
inc
add
dec
add
pop
add
pop
add
add
push
add
xor
add
add
push
add
pop
add
xor
xor
xor
add
add
add
push
push
inc
push
call
addw
cmp
mov
cmp
jb
jo
ja
push
outsb
dec
pop
popa
pop
jne
jp
addr16
pop
pop
dec
inc
ja
popa
jo
jo,pn
bound
inc
jo
inc
push
xor
inc
push
aas
pop
and
xor
jns
sub
add
xor
cmp
and
dec
pop
and
push
outsl
xor
push
dec
pop
push
xor
imul
bound
adc
call
pop
jno
add
add
std
dec
fidivrl
xchg
cmpsl
comiss
es
and
xchg
outsb
xchg
xchg
mov
cwtl
leave
adc
add
out
and
insl
adc
mov
jne
pop
sbb
jmp
adcb
cmp
fsubrl
pop
and
insl
outsb
xor
or
popf
fdivrs
repz
andb
std
mov
pushf
hlt
in
push
out
jp
push
mov
push
dec
incb
xlat
in
jle
xchg
and
in
dec
sahf
mov
inc
aam
dec
jno
sti
or
fstps
into
imul
in
cmp
call
sub
add
and
lds
jg
sub
and
out
clts
mov
mov
mov
or
jb
loop
outsb
push
sbb
jne
jno
push
aam
dec
and
jns
ss
push
loopne
xchg
fistpl
push
adc
stos
push
jns
jp
jo
into
icebp
addb
inc
dec
cmp
or
push
mov
in
mov
xor
stos
cs
iret
mov
in
arpl
leave
xorb
lea
sbb
mov
cmp
imul
dec
lds
sbb
push
out
xchg
cmp
scas
xor
cli
xor
or
pop
lcall
fadds
mov
jecxz
adc
ds
cs
flds
lods
out
xor
mov
cmpsl
jns
lock
mov
pop
sti
inc
repnz
push
dec
sbb
jb
inc
xchg
xor
fs
adc
sub
std
add
fildl
cltd
aas
dec
xor
push
or
cs
fstps
mov
ss
aas
scas
cmp
pop
mov
bound
fbstp
int
jge
daa
and
cmp
mov
add
jecxz
adc
loopne
dec
adc
out
fst
outsb
rcl
pusha
lea
out
ficompl
movsb
cmp
mov
inc
sub
movsl
sbb
mov
jne
arpl
mov
mov
add
add
cmp
icebp
xchg
push
addb
mov
add
mull
enter
mov
imull
sar
out
scas
andl
dec
rorl
mov
dec
inc
jecxz
cltd
jge
shll
popa
xor
insl
fwait
pop
xchg
mov
pusha
subb
mov
test
jge
cmp
enter
pop
fsubl
int
imul
or
jecxz
mov
mov
test
sahf
jp
xor
repnz
lea
or
mov
in
outsb
mov
jnp
push
inc
lea
aam
jns
pushf
push
sub
shlb
mov
mov
repz
outsb
push
enter
test
and
adc
xor
lahf
call
push
in
das
test
mov
and
sub
inc
and
rolb
js
les
cwtl
inc
int3
jnp
or
xlat
leave
adc
lods
mov
mov
cmpsl
mov
push
mov
pop
popf
inc
adc
sahf
push
fdivr
push
frstor
jbe
aam
pop
push
imul
mov
mov
lods
mov
sahf
pop
js
roll
cmp
popf
inc
testl
push
push
pop
sbb
mov
ror
or
mov
pop
fidivl
add
lock
xchg
movsl
int
aam
and
adc
lret
add
mov
aam
cmpsb
adc
pop
fnstenv
and
cmp
in
fcomp
pop
dec
mov
idivb
push
push
adc
cld
scas
jae
ljmpw
jp
jb
push
pop
jg
cltd
and
xchg
rcr
or
test
loop
add
sbb
into
xchg
push
mov
sub
jbe
push
cmp
mov
pop
mov
and
icebp
add
xchg
push
test
call
dec
sbb
icebp
test
int
mov
mov
pusha
stos
fistpl
adc
cld
imul
lret
and
in
mov
jb
xor
pop
pop
sub
cmp
jge
mov
iret
lods
and
jle
mov
lcall
enter
aad
pop
mov
adc
addr16
add
fnstcw
scas
and
mov
adc
stos
icebp
pop
jmp
cmp
stos
stc
jo
mov
mov
arpl
pop
xor
pop
fistl
add
test
pushf
cmp
int
lret
mov
push
sahf
add
icebp
adc
mov
sarl
hlt
xor
adc
inc
add
lea
cmpsl
pushl
pop
and
movsl
mov
mov
jno
pop
adc
int3
dec
xchg
xor
fisttpll
mov
pop
sbb
cli
bnd
or
bound
pushf
lods
test
test
out
sahf
lock
xchg
orl
mov
outsl
loope
add
mov
add
nop
add
shr
cmp
es
mov
pop
in
or
test
push
push
sub
xchg
push
jmp
xchg
call
mov
xor
rcll
insb
jns
idiv
mov
mov
add
pushw
jmp
ljmp
mov
fisubrs
mov
push
mov
mov
sbb
or
lods
mov
xor
cmpsb
imulb
cmp
jecxz
mov
jbe
push
lods
mov
out
mov
lods
out
loopne
ret
pop
sarl
mov
mov
pop
jbe
mov
dec
lret
jmp
adc
sub
jns
xor
or
data16
and
adc
and
in
push
and
data16
stos
orl
mov
in
pushf
cmp
movsl
pop
pop
aam
imul
xchg
push
mov
icebp
mov
shlb
repnz
fisttpl
cmp
cmc
lret
fistl
push
jmp
scas
cmp
enter
mov
iret
xchg
adc
cmp
fs
push
mov
push
data16
xchg
push
mov
inc
decb
insb
shll
jne
bound
adc
xchg
jp
leave
xchg
ja
scas
push
inc
push
mov
sarb
dec
pop
sbb
adc
dec
dec
cmp
movsb
adc
mov
jne
cwtl
int3
xacquire
or
adc
lahf
sbb
dec
test
mov
xor
es
mov
jbe
sbb
push
or
jecxz
xlat
ljmp
movsb
cmp
lret
or
lock
mov
mov
and
xlat
lds
inc
inc
push
out
jg
lock
stos
rol
xor
sub
lcall
pop
add
push
jae
or
inc
rcrl
sub
leave
pop
jne
xor
enter
and
iret
jg
nopl
das
arpl
inc
inc
pop
aad
mov
adc
jge
and
jle
cmp
pop
popa
lea
data16
in
lods
and
shlb
imul
cmp
fdivs
sti
aas
andl
push
sbb
decb
cmp
popa
cmpsl
arpl
push
fildl
mov
imul
xchg
pusha
test
xchg
loop
inc
sahf
inc
bound
andb
movsl
pusha
pop
push
dec
out
add
xor
and
ret
divl
inc
in
lahf
fs
dec
cs
ss
xchg
es
dec
in
outsb
xchg
mov
mov
push
add
cmpsb
test
sahf
adc
push
pop
ret
pop
pop
fwait
sbb
inc
mov
pop
pop
cmp
push
jnp
out
xchg
fcmovnbe
add
sti
mov
cmpb
mov
sbb
cmp
mov
or
sbb
mov
out
add
xchg
mov
cmpsl
lret
shll
cmp
sub
sbb
adc
std
outsl
pop
sbb
out
hlt
push
mov
sbb
xchg
push
lock
jge
push
adc
and
inc
dec
fldenv
std
jecxz
jbe
outsb
loope
inc
cmp
fistps
addr16
sub
add
stos
cmpsl
jne
out
jle
jle
xor
imull
in
out
js
out
fstps
std
inc
test
lcall
mov
jl
xor
inc
ds
mov
fdivs
add
ds
xchg
xlat
test
test
cld
jnp
faddl
jo
inc
cltd
pusha
mov
jns
sub
or
pusha
sbb
clc
fidivs
mov
push
xor
sbb
int3
xchg
aaa
or
mov
dec
mov
pop
lcall
fs
adc
mov
mov
int3
les
add
and
adc
push
mov
add
movsb
add
pusha
out
adc
mov
mov
mov
es
jp
pusha
jg
or
fadd
rolb
xchg
adcb
pop
fisttps
pushf
xchg
xchg
mov
or
push
loop
lock
enter
mov
nop
add
enter
test
stos
cmp
pop
xlat
jecxz
les
test
push
jle
pop
cmc
negl
imul
cmp
lods
pop
mov
or
sub
mov
sub
pop
inc
movsb
pop
scas
das
push
je
dec
imul
or
push
in
mov
in
aaa
mov
mov
push
mov
cmp
xchg
add
cltd
outsl
jp
out
inc
enter
mov
and
jl
inc
test
test
mov
xchg
sub
push
adc
xor
xchg
add
fcoml
sub
mov
addb
sarl
clc
push
mov
inc
loop
repz
xchg
push
xor
lods
lock
aas
push
inc
bnd
lcall
shlb
and
jecxz
fadds
cs
adc
mov
push
fsubrl
icebp
cmpsb
inc
xor
or
xchg
in
adc
outsb
add
loopne
int3
xchg
jae
scas
and
cmpsl
cld
xchg
dec
in
mov
inc
callw
jae
ja
cwtl
imul
sarb
push
faddp
jbe
popa
lods
mov
sbb
aam
cwtl
adc
subb
pushf
dec
adcl
mov
push
movsb
adc
or
pop
mov
pop
sarb
add
cltd
or
mov
cmp
rcrl
cmc
pop
xor
cmp
aas
add
mov
adc
inc
mov
lods
es
clc
test
lcall
insb
inc
in
xchg
adc
cmp
scas
notl
xor
and
sbb
es
add
push
mov
mov
aad
dec
jns
mov
outsb
pop
arpl
jl
stc
lret
mov
cli
jnp
aad
daa
or
add
fstpt
inc
cs
pushf
xor
clc
push
aad
sbb
cmp
repnz
jnp
testb
js
push
cltd
sbbl
lret
repz
dec
out
cs
and
lods
mov
sub
add
dec
mov
and
fstl
inc
sbb
in
nop
push
fwait
xchg
movsb
icebp
cwtl
loope
inc
lock
mov
ljmpw
out
xchg
out
popa
cmp
movsb
daa
cli
movsb
cmp
sub
push
fisubrl
jb
fldcw
pop
rorl
icebp
aam
mov
test
and
xor
cmpsb
ficomps
add
cmpsl
cmp
lods
gs
shl
cld
or
mov
cmp
jl
sbb
shll
clc
and
adc
cmp
imul
mov
push
adc
push
lods
adc
int3
sub
aaa
mov
jmp
sub
xor
fmul
mov
outsw
jmp
sbb
pop
add
jmp
fsubl
add
fildll
mov
mov
cmpsb
mov
mov
push
mov
sbb
mov
xor
bound
adc
movl
fdecstp
out
sbb
adc
sbb
addr16
shll
movsb
mov
cmc
adc
mov
jnp
push
inc
adc
pop
mov
hlt
stc
cmpsb
fnstsw
add
xchg
sbb
mov
sbb
inc
mov
imul
or
push
mov
aas
mov
test
pop
ja
lcall
xchg
lcall
and
mov
jb
movsl
ja
fildll
cli
ds
sub
loope
nop
sarl
xchg
rorl
bound
fmul
xor
fwait
mov
xor
sub
fdivs
dec
into
xchg
adc
push
and
sbb
jns
push
dec
jne
outsl
cmp
shlb
popf
xor
jle
jns
sub
dec
repnz
mov
in
mov
sbb
jae
lcall
sub
in
mov
cmp
inc
mov
testl
push
xchg
sbb
jns,pn
cmp
mov
into
and
lock
sbb
leave
xchg
ds
mov
and
into
test
pushf
sub
sahf
sti
add
insl
mov
das
mov
push
pop
into
mov
push
imul
add
ljmp
sahf
in
ljmp
push
push
xchg
pop
outsb
mov
ljmp
loopne
jle
mov
cmp
loopne
mov
xchg
ljmp
inc
xchg
mov
imul
shld
pop
xchg
mov
imul
xor
and
and
mov
and
and
popf
or
push
icebp
test
mov
lods
test
dec
xchg
xchg
cmpsb
jbe
popa
ret
popf
addr16
xlat
pop
call
pushf
jmp
int
gs
int
sub
and
or
xor
imul
and
inc
inc
pushf
outsb
xor
jmp
popf
and
pop
mov
jl
cld
movsb
std
jne
pop
or
aaa
xchg
dec
mov
arpl
imul
in
adc
dec
add
loopne
or
add
jle
mov
loop
cmp
mov
mov
popa
adc
daa
cmp
lcall
mov
inc
xchg
scas
mull
repz
pusha
imul
or
or
jge
jno
inc
or
inc
xchg
insb
scas
pop
test
int
push
dec
es
in
and
aaa
xor
aas
mov
sub
leave
jecxz
fsubrl
pop
leave
cmp
mov
xor
xchg
cmp
mov
or
add
push
out
sbb
jnp,pn
out
fwait
sbb
in
aas
imul
or
inc
push
cmpl
sbb
loop
mov
nop
test
insb
jmp
cwtl
mov
sub
or
xor
ret
fidivl
sub
mov
out
xchg
lods
jno
xchg
pop
ss
movsl
sahf
jno
mov
cmp
inc
dec
inc
mov
mov
mov
ficoml
ret
loopne
mov
clc
ds
jno
test
or
cld
sarb
mov
jle
add
loopne
or
dec
stc
mov
fadds
sti
inc
and
sbb
dec
dec
fstpl
out
aad
inc
sub
jnp
scas
inc
lock
mov
inc
add
inc
outsb
cli
mov
fbstp
lret
aaa
aaa
inc
xor
inc
fsub
fisubrs
adc
gs
call
test
lods
jnp
loop
aam
clc
push
add
rol
cmp
out
sub
pop
mov
mov
imul
and
aam
enter
cmc
shrl
rep
cmc
sub
out
dec
dec
addl
addr16
add
les
sahf
sbbl
mov
mov
popf
shrl
ret
or
mov
or
lret
jbe
fwait
add
out
adc
test
js
arpl
pop
sbb
inc
or
scas
arpl
mov
sub
xchg
bound
call
inc
xor
push
aas
incb
lds
aas
loopne
lret
in
jns
pop
mov
das
pop
addr16
lods
mov
out
jge
push
notl
repnz
adc
outsb
cltd
in
lret
mov
lods
in
or
decl
xor
dec
inc
jecxz
lret
stos
adc
jg
push
jge
lret
outsl
sbbl
test
mov
dec
inc
loopne
imul
push
lods
fistpll
dec
sub
ja
fstl
data16
loope
fbld
sub
inc
adc
xchg
and
shll
cmp
pop
mov
jbe
cmp
mov
sub
inc
pop
xor
inc
push
fldenv
stc
shl
xor
xor
xor
out
out
in
fldt
std
sub
mov
inc
dec
cmpsb
pop
int3
jbe
ficomps
ffreep
enter
inc
xchg
jns
and
mov
sbb
xchg
push
daa
das
mov
stc
or
jmp
add
aas
inc
jl
push
mov
cltd
outsl
pop
xchg
pop
lcall
push
add
fwait
shlb
cmp
push
fs
add
hlt
lods
out
and
mov
loopne
ret
inc
or
and
cmp
jnp
push
fwait
ljmpw
push
mov
sub
push
inc
jge
movsl
in
mov
test
sbb
xlat
or
xchg
adc
lods
sbb
loope
mov
fwait
sbb
or
mov
jle
inc
push
hlt
inc
pop
das
xorl
ret
pop
mov
push
push
call
in
mov
mov
and
cwtl
test
sub
stos
hlt
int3
testl
pop
es
shlb
sbb
cs
mov
lcall
test
test
cmc
les
pop
test
cmp
sbb
sahf
sbb
mov
and
std
aas
push
and
sbb
push
stos
mov
cmpsb
outsb
enter
leave
addr16
sbb
fdivrl
xchg
cmpsl
dec
inc
cmp
frstor
fdivrl
iret
xchg
adc
xor
rol
pop
xlat
movsl
sub
pop
xchg
xchg
jb
sub
sbb
out
add
adc
xlat
pop
mov
sub
dec
mov
fcomps
jno
lods
pop
mov
frstor
repnz
cmpsb
or
movsl
ds
lock
lret
mov
leave
lret
xchg
dec
inc
dec
push
gs
mov
inc
adc
int
mov
sbb
cmpsl
pusha
sahf
mov
adc
inc
sub
ja
mov
and
loop
mov
js
jnp
xor
mov
clc
xchg
push
adc
ror
mull
repz
inc
stos
dec
das
dec
inc
mov
inc
jecxz
dec
stos
xchg
mov
pushf
js
lods
into
mov
xchg
push
rcrl
pop
lret
xchg
push
mov
jg
jae
cmc
push
mov
insl
or
inc
push
lret
and
push
sub
in
xchg
fldl
mov
mov
in
test
sbb
ss
adc
shrb
lahf
and
gs
aam
push
mov
mov
or
dec
cmp
lret
addr16
jmp
push
cli
push
cmpsl
out
repz
lret
dec
add
sub
mov
jnp
dec
jo
xor
aaa
nop
jnp
push
cmpsb
xchg
lahf
insl
sub
ret
cmpsb
xor
add
xchg
lcall
int3
adc
add
lret
dec
xchg
lock
subb
dec
daa
loopne
stos
pop
xor
dec
xorl
dec
jo
xchg
sti
add
int3
cmp
jecxz
pop
pop
xor
mov
pop
xchg
movsb
pop
sbb
icebp
adc
cld
pop
push
cmp
and
scas
popf
cmp
outsl
std
xchg
inc
xchg
dec
mov
aam
icebp
ja
pop
xchg
fucomp
xor
int
mov
mov
cmp
jecxz
movsb
cmp
mov
cmpsl
loope
ret
push
and
fwait
lods
xchg
jg
es
fstl
stc
mov
sbb
repnz
jne
lds
lods
in
insl
mov
push
fstp
icebp
and
lret
popa
push
fiaddl
popa
mov
insb
sbb
cltd
xchg
xchg
push
sahf
les
insl
fistps
add
dec
adc
divl
add
les
sarb
add
int3
sub
andl
lahf
lahf
pop
repnz
mov
pushl
stc
adc
xchg
jae
out
orl
or
pop
dec
mov
ja
cmp
sub
out
ds
fidivs
adcl
out
mov
inc
and
stos
negl
push
pop
add
in
jle
pop
jo
mov
mov
pop
movsb
rcrb
push
jge
adc
sub
rclb
fiadds
mov
pop
repz
in
pop
cmpsb
cwtl
push
lock
xor
xor
aad
add
jl
mov
sarl
movsb
push
inc
ficompl
imul
out
mov
xor
ss
mov
adc
insb
jno
fiadds
xchg
ss
movsb
xor
xor
arpl
or
shlb
movsb
mov
jnp
rcrb
mov
dec
mov
sub
xchg
popf
jo
jae
nop
aad
mov
cmpsb
jecxz
faddl
adc
push
mov
sbb
push
xchg
imul
sub
lret
adc
idivl
stos
ret
xor
pop
rcrb
and
in
ret
test
inc
lods
or
addr16
fsts
loopne
mov
sub
jmp
movsb
scas
mov
xchg
adc
inc
mov
int3
cld
dec
sbb
jg
or
das
lret
mov
cmp
pusha
xchg
sbb
popf
add
or
mov
add
jbe
out
and
in
in
mov
xchg
rcll
loop
sbb
shrb
addl
aam
arpl
cli
pop
das
ficomps
arpl
hlt
aaa
xchg
push
mov
aaa
cmp
ljmp
sbb
adc
cmc
jbe
jnp
mov
cmp
sbb
cmpl
xchg
push
shlb
add
adc
mov
es
test
add
xchg
test
std
or
dec
dec
or
lea
imul
jp
addr16
lcall
mov
mov
push
cld
jnp
sbb
je
or
adc
shrl
inc
adc
mov
ja
stc
sti
dec
insl
add
data16
rcrb
or
roll
out
or
dec
mov
mov
mov
repz
jnp
lret
call
mov
xchg
out
out
cwtl
xlat
mov
icebp
ljmp
int
hlt
sub
or
insb
adc
dec
inc
sub
in
cs
sub
dec
cltd
xor
fdivl
push
mov
mov
adc
jno
mov
dec
sub
and
mov
sarb
inc
int
outsb
cmp
and
into
cmp
lret
rolb
das
pop
and
push
mov
call
stos
cmp
inc
ds
or
pop
inc
aas
xor
and
pop
or
test
dec
push
dec
inc
inc
cmp
fwait
or
js
sbb
cmc
add
inc
cmp
jne
imul
das
jbe
mov
stc
cmp
add
sar
cmp
into
and
adc
cld
cmp
xchg
mov
loope
ds
fcmovu
movsl
cmp
divl
xchg
cmp
leave
mov
in
pop
sub
mov
inc
popf
out
pop
adcb
loope
adc
divb
cwtl
mov
mov
mov
in
push
or
shlb
xchg
gs
test
fwait
add
jl
xchg
inc
imul
lahf
out
mov
jg
inc
imul
jno
dec
out
mov
mov
xor
ss
xchg
addr16
xor
push
inc
xlat
int3
mov
fbstp
rdpmc
test
cmc
xchg
outsl
inc
jge
pop
insl
iret
std
and
mov
mov
rol
lods
rcrl
bound
pop
dec
lock
cmp
push
mov
ret
push
repnz
leave
fistps
and
dec
xor
popf
xchg
mov
fdivrp
sub
gs
add
lods
mov
arpl
out
or
lret
sub
xchg
cmp
sti
add
divl
jo
mov
stos
iret
imul
jg
shr
cs
enter
dec
add
jg
push
lods
rorb
add
lods
adc
out
lcall
hlt
mov
cmpsb
nop
sub
icebp
xchg
jge
mov
mov
inc
outsl
ljmp
icebp
outsb
mov
xchg
subl
outsb
stos
lret
and
mov
test
sbb
cmpsl
sti
jle
lret
or
and
sub
lods
hlt
les
lock
push
xor
addl
jmp
mov
clc
stos
repz
pop
mov
sar
sti
jmp
jmp
sub
inc
adc
sub
aam
jle
xchg
mov
pusha
and
or
xor
es
xor
stos
pop
push
addr16
lods
iret
scas
dec
pop
sub
jg
icebp
xchg
push
mov
sbb
movsl
jge
insl
dec
pusha
add
and
int
test
nop
dec
cmp
cwtl
push
cwtl
sbb
cmp
shr
pop
dec
jb
in
iret
push
cmpsl
mov
repnz
movsl
pop
outsb
add
lea
push
leave
ficoml
lock
pop
mov
adcb
int
jbe
mov
lcallw
mov
bswap
sahf
ds
lea
test
push
dec
inc
push
dec
and
push
bswap
jmp
push
aas
sarb
sahf
mov
and
adc
push
int3
out
movsb
data16
or
test
mov
jg
jnp
xchg
inc
sbb
push
cmp
enter
hlt
push
mov
jo
fnsave
mov
fcmovnbe
mov
sbb
xor
xor
push
jbe
jecxz
push
sbbb
js
sbb
cmpsb
pop
ds
sbb
cmp
aas
scas
out
lea
jge
shr
add
jno
inc
sbb
shl
enter
lahf
cmp
out
jmp
into
cmpsb
data16
pop
jge
mov
aas
xor
in
mov
cmp
mov
jns
pop
rorl
mov
adc
das
movsl
les
icebp
jne
out
insb
dec
jno
sbb
mov
rcll
div
repz
adc
mov
jae
mov
mov
xchg
scas
or
clc
cmpsl
fistpl
das
xchg
test
mov
pop
inc
iret
xor
arpl
mov
ljmp
outsl
imul
mov
in
xor
fimuls
xchg
movsl
ficompl
ds
ja
rcll
pop
jne
pop
movsl
cs
cmpsb
mov
add
shrl
cwtl
pop
int3
lods
pop
lret
nop
jbe
inc
nop
int3
sarb
movsl
xchg
add
repz
ficoms
jmp
fimull
lods
addr16
mov
in
or
orl
sub
cs
movsl
and
imul
cmpsl
adc
divb
outsb
bound
mov
jo
mov
pop
movsl
cmp
mov
int3
xchg
jmp
pop
sbb
ficoml
int
shlb
adc
out
cmp
scas
jge
push
ja
fldenv
shrl
cmp
test
mov
mov
xchg
inc
stc
inc
je
daa
xchg
outsb
pop
jecxz
mov
ret
data16
dec
shlb
fs
jge
insb
es
fsubs
jmp
cmc
jbe
jo
adc
and
aad
pop
cmp
pop
dec
sbb
xor
in
enter
pop
xchg
fildll
cs
mov
clc
imul
into
mov
xor
neg
sbb
dec
scas
pop
push
xor
out
leave
inc
out
pop
jno
add
dec
pop
inc
sub
cmp
sbb
jae
xchg
add
add
jne
add
mov
ret
push
divb
inc
xchg
outsl
cmp
test
sbb
rcll
and
cmp
pop
xchg
insl
mov
pop
mov
jno
das
jb
insb
xor
mov
jp
or
and
lret
push
mov
pop
fwait
iret
adc
incb
cmpsl
sub
add
mov
xchg
outsl
adc
outsb
mov
jmp
stc
rclb
pop
daa
cli
adc
and
add
inc
dec
pop
icebp
out
fmull
lods
sub
cmp
repnz
out
into
popa
lock
dec
cltd
in
xchg
push
sub
pop
jae
inc
repz
add
popl
push
inc
in
scas
ja
cmpsb
mov
xchg
dec
sbb
dec
xchg
daa
je
push
dec
and
sbb
cli
dec
lret
sbb
inc
xor
or
jl
dec
xor
test
xchg
shrb
push
push
lds
mov
loopne
sub
mov
xchg
add
push
dec
jno
in
cmp
loopne
addr16
fs
xor
or
mov
xlat
out
lods
mov
and
ficoms
inc
fidivl
test
popa
in
sub
shll
and
xchg
test
inc
push
cmp
std
add
fsts
jp
pop
imul
test
adc
ficompl
mov
leave
shlb
imul
pop
dec
or
lcall
pop
insl
or
sti
xchg
mov
mov
add
jp
dec
stos
mov
mov
addl
shlb
push
int3
jbe
push
sub
rol
cmp
jp
test
sub
and
subb
xchg
je,pt
.byte
jne
add
add
add
add
add
add
and
add
inc
add
addb
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
xor
add
cwtl
add
xorb
add
cmp
add
add
addb
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
xchg
add
rolb
add
add
add
xchg
add
rolb
add
add
add
add
add
add
add
add
add
add
jbe
add
in
add
add
add
loopne
add
bound
add
in
add
sub
add
adc
add
add
add
add
add
add
add
fldcw
outsb
mov
mov
std
jmp
insb
lret
xchg
fwait
mov
mov
mov
mov
mov
mov
add
fwait
mov
mov
fwait
mov
mov
add
cmpsl
mov
mov
mov
mov
mov
add
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
fdivs
js
xchg
fwait
mov
mov
cmp
fwait
mov
mov
mov
mov
mov
mov
fwait
mov
mov
mov
popf
leave
data16
xchg
mov
mov
mov
mov
mov
das
scas
or
xchg
fwait
add
fwait
mov
mov
adc
mov
inc
stos
adc
pop
cmp
fwait
mov
mov
mov
mov
fwait
mov
mov
mov
dec
cmp
mov
cld
mov
mov
mov
mov
mov
pop
xorb
xchg
fwait
mov
mov
sub
mov
dec
mov
mov
arpl
icebp
mov
mov
movsl
lcall
fwait
add
fwait
mov
sub
fwait
mov
lea
mov
cmpsl
inc
mov
xchg
fwait
lahf
in
mov
mov
mov
fwait
pusha
out
mov
mov
mov
mov
mov
mov
mov
xchg
push
xor
fwait
pop
push
rorl
xchg
fwait
mov
mov
mov
mov
and
scas
and
xchg
fwait
mov
mov
mov
mov
mov
add
fwait
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
fwait
mov
xor
fwait
mov
mov
mov
mov
mov
mov
mov
mov
add
adc
xchg
fwait
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
and
mov
arpl
jae
xchg
fwait
mov
mov
pop
cwtl
jmp
xchg
fwait
mov
xor
sub
xchg
fwait
add
fwait
jmp
fwait
add
mov
movsb
push
inc
mov
loope
imul
aaa
mov
mov
mov
mov
mov
ja
jp
push
mov
mov
mov
jne
mov
xchg
fwait
push
xorb
int
cld
les
bound
fwait
out
fmull
fwait
mov
mov
mov
fwait
mov
mov
dec
sbb
mov
mov
mov
mov
mov
add
fwait
mov
mov
push
in
mov
mov
mov
mov
mov
mov
mov
fs
mov
mov
mov
add
test
jp
mov
mov
mov
xchg
aaa
in
stos
in
mov
add
fdivl
and
mov
mov
add
fwait
mov
mov
inc
sbb
fwait
mov
mov
mov
mov
mov
mov
add
add
add
addb
add
add
add
add
add
add
add
add
sub
add
adc
add
add
add
add
add
add
add
jl
cltd
jl
cltd
jl
cltd
lcall
out
cltd
jl
cltd
jl
cltd
shrl
jl
cltd
jl
cltd
jl
cltd
jl
cltd
jl
cltd
jl
cltd
jl
cltd
jl
cltd
jl
cltd
jl
cltd
jl
cltd
jl
cltd
add
jl
cltd
jl
cltd
jl
cltd
fwait
push
jl
cltd
jl
cltd
jl
cltd
jl
cltd
jl
cltd
jl
cltd
jl
cltd
jl
cltd
jl
cltd
jl
cltd
jl
cltd
jl
cltd
jl
cltd
jl
cltd
jl
cltd
jl
cltd
add
cltd
enter
out
cltd
fimull
jl
cltd
jl
cltd
jl
cltd
jl
cltd
jecxz
push
out
cltd
jl
cltd
add
add
out
cltd
jl
cltd
jl
cltd
jl
cltd
jl
cltd
jl
cltd
add
cltd
test
cltd
mov
adc
adc
imul
out
cltd
jl
cltd
jl
cltd
ljmp
out
cltd
jl
cltd
jl
cltd
jl
cltd
out
mov
xor
out
cltd
add
pop
jl
cltd
jl
cltd
jl
cltd
jl
cltd
jl
cltd
mov
sub
jl
cltd
rolb
popa
jl
cltd
pop
lahf
stc
jl
cltd
rol
jl
cltd
jl
cltd
lea
jl
cltd
jl
cltd
add
jl
cltd
jl
cltd
jl
cltd
jl
cltd
btr
out
cltd
jl
cltd
int3
loope
jl
cltd
jl
cltd
jl
cltd
jl
cltd
jl
cltd
jl
cltd
add
push
jl
cltd
add
jl
cltd
and
pusha
jl
cltd
jl
cltd
jl
cltd
jecxz
xor
add
jl
cltd
jl
cltd
jl
cltd
jl
cltd
jl
cltd
call
jl
out
cltd
jl
cltd
imul
out
cltd
jl
cltd
add
ret
shlb
jl
cltd
jl
cltd
jl
cltd
sub
movsl
jl
cltd
jl
cltd
fwait
xor
inc
xlat
jl
cltd
mov
jl
cltd
jl
cltd
jl
cltd
jl
cltd
jl
cltd
jl
cltd
add
jl
cltd
jl
cltd
jl
cltd
push
adcb
xor
jl
cltd
xchg
int3
jl
cltd
jl
cltd
jl
cltd
aad
pop
and
adc
xchg
jl
cltd
sbb
jl
cltd
aad
xchg
cwtl
int3
add
add
jl
cltd
jl
cltd
jl
cltd
jl
cltd
jl
cltd
jp
jl
cltd
jl
cltd
jl
cltd
jl
cltd
jl
cltd
in
in
jl
cltd
jl
cltd
jl
cltd
jl
cltd
jl
cltd
jl
cltd
mov
push
add
jl
cltd
jl
cltd
jl
cltd
jl
cltd
jl
cltd
jl
cltd
movb
out
cltd
jl
cltd
jl
cltd
jl
cltd
lahf
push
inc
dec
int3
and
out
cltd
jl
cltd
pop
push
dec
jl
cltd
jl
cltd
jl
cltd
add
jl
cltd
jl
cltd
jl
cltd
jl
cltd
dec
pop
push
dec
xor
jl
cltd
jl
cltd
jl
cltd
jl
cltd
jl
cltd
jl
cltd
rorl
jl
cltd
jl
cltd
adc
xlat
jl
cltd
jl
cltd
add
jl
cltd
jl
cltd
jl
cltd
jl
cltd
jl
cltd
jl
cltd
jl
cltd
jl
cltd
shlb
jl
cltd
jl
cltd
int3
lret
out
cltd
jl
cltd
sbb
call
pop
in
movsl
addr16
cltd
add
jl
cltd
adc
jl
cltd
jl
cltd
jl
cltd
jl
cltd
jl
cltd
ds
in
jl
cltd
add
add
out
cltd
jl
cltd
jl
cltd
jl
cltd
jl
cltd
jl
cltd
fucom
add
add
jl
cltd
jl
cltd
sbb
out
cltd
jl
cltd
xor
jl
cltd
jl
cltd
jl
cltd
jl
cltd
jl
cltd
jl
cltd
jl
cltd
inc
xor
out
cltd
jl
cltd
jl
cltd
jl
cltd
add
jl
cltd
jl
cltd
jl
cltd
jl
cltd
ficomps
out
cltd
sar
inc
jl
cltd
jl
cltd
jl
cltd
push
js
pop
jl
cltd
pop
jp
jl
cltd
jl
cltd
jl
cltd
jl
cltd
jl
cltd
jl
cltd
add
jl
cltd
jl
cltd
lods
xchg
jp
out
cltd
or
inc
jl
cltd
jl
cltd
pop
add
cltd
sbb
out
cltd
rolb
jl
cltd
or
jl
cltd
jl
cltd
jl
cltd
add
jl
cltd
jl
cltd
sbb
pusha
addl
out
cltd
jl
cltd
jl
cltd
fs
mov
jl
cltd
jl
cltd
sbb
jl
cltd
jl
cltd
jg
push
jl
cltd
jl
cltd
jl
cltd
jl
cltd
add
jl
cltd
jbe
lret
jl
cltd
jl
cltd
jl
cltd
jl
cltd
jl
cltd
jl
cltd
jl
cltd
mov
sarb
jl
cltd
jl
cltd
jl
cltd
jl
cltd
jl
cltd
jl
cltd
jl
cltd
jl
cltd
add
add
lods
jl
cltd
jl
cltd
ja
jl
cltd
jl
cltd
jl
cltd
jl
cltd
dec
out
jl
cltd
jl
cltd
loope
fstpt
jl
cltd
in
inc
jl
cltd
jl
cltd
and
out
cltd
add
fidivrl
out
cltd
jl
cltd
jl
cltd
jl
cltd
jl
cltd
jl
cltd
jl
cltd
jl
cltd
lret
sub
inc
adc
out
cltd
jl
cltd
and
mov
out
cltd
stc
pop
dec
jl
cltd
pop
out
add
add
add
add
add
add
add
adc
add
add
inc
dec
mov
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
addb
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
xchg
xchg
xchg
xchg
stos
sbb
xchg
xchg
xchg
xchg
add
push
pop
xchg
xchg
out
out
push
pop
xchg
movsb
out
push
pop
xchg
xchg
sub
push
pop
xchg
add
xchg
xchg
xchg
xchg
xchg
xchg
int
pop
xchg
xchg
xchg
add
cmpsl
mov
ja
and
scas
push
pop
xchg
xchg
xchg
xchg
xchg
xchg
add
xchg
xchg
xchg
xchg
xchg
xchg
add
push
pop
xchg
xchg
add
push
fsts
and
pop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
xchg
xchg
xchg
xchg
xchg
test
xchg
xchg
xchg
or
add
xchg
xchg
xchg
xchg
xchg
imulb
xchg
xchg
xchg
xchg
add
xchg
xchg
xchg
xchg
lret
xchg
xchg
rclb
xchg
xchg
add
xchg
xchg
cs
pop
xchg
push
pop
xchg
xchg
xchg
xchg
xchg
add
xchg
xchg
pop
jl
pop
xchg
xchg
xchg
xchg
xchg
xchg
roll
out
lcall
xchg
xchg
push
pop
xchg
xchg
xchg
xchg
add
xchg
xchg
fmuls
pop
xchg
push
pop
xchg
xchg
xchg
push
mov
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
ret
and
xchg
add
xchg
add
push
pop
xchg
int
push
pop
xchg
xchg
add
inc
sub
xchg
xchg
xchg
xchg
push
pop
xchg
xchg
add
xchg
xchg
xchg
jo
push
pop
xchg
xchg
xchg
xchg
xchg
push
pop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
push
pop
xchg
add
xchg
xchg
cmp
xchg
xchg
xchg
push
pop
xchg
push
push
pop
xchg
xchg
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
fcomip
cmp
add
xchg
xchg
out
jnp
pop
xchg
xchg
xchg
xchg
xchg
dec
sbb
xchg
add
xchg
cmp
ret
and
xchg
xchg
xchg
xchg
xchg
xchg
add
loop
push
pop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
adc
add
push
pop
xchg
xchg
xchg
xchg
xchg
dec
push
pop
xchg
xchg
xchg
push
pop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
xchg
xchg
xchg
add
inc
adc
xchg
xchg
xchg
xchg
add
inc
dec
jbe
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
arpl
imul
arpl
push
js
lahf
fisubrs
adc
adc
adc
out
imul
arpl
jmp
cmp
arpl
imul
arpl
imul
arpl
imul
arpl
sbb
imul
arpl
add
icebp
imul
arpl
imul
arpl
imul
arpl
imul
dec
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
cmp
add
imul
arpl
imul
arpl
imul
arpl
jne
pop
imul
push
push
imul
arpl
jb
jmp
jge
imul
arpl
jae
adc
xor
inc
fwait
test
adc
adc
adc
push
fnstcw
arpl
imul
arpl
mov
adc
xchg
imul
arpl
imul
adc
imul
arpl
imul
arpl
imul
arpl
imul
arpl
imul
arpl
out
in
or
arpl
imul
add
imul
arpl
imul
arpl
imul
arpl
imul
and
test
xor
fwait
aad
arpl
imul
arpl
imul
arpl
imul
neg
dec
mov
imul
hlt
dec
sub
arpl
imul
add
imul
arpl
lcall
sbb
adc
adc
adc
adc
adc
or
arpl
xor
fsubrl
adc
adc
fadd
pop
jmp
arpl
imul
repz
adc
adc
add
imul
arpl
imul
ss
mov
imul
imul
arpl
imul
arpl
imul
xorl
adc
movsb
imul
arpl
imul
arpl
add
add
adc
adc
gs
arpl
cld
sahf
and
adc
adc
adc
adc
jmp
imul
arpl
imul
arpl
dec
pop
lret
imul
mov
imul
arpl
imul
add
push
inc
inc
dec
bound
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
xchg
nopl
pop
xchg
bswap
pop
inc
mov
nopl
pop
xchg
movlhps
xor
xchg
nopl
pop
xchg
movswl
pop
xchg
nopl
pop
xchg
nopl
pop
xchg
movntq
pop
xchg
nopl
pop
xchg
nopl
pop
xchg
andnps
negl
xchg
sets
pop
imul
lods
cmp
xchg
invd
inc
popa
pop
xchg
nopl
pop
mov
xchg
psrlq
pop
xchg
nopl
movsl
mov
mov
pop
xchg
nopl
pop
xchg
nopl
pop
xchg
andnps
push
cmp
pop
xchg
nopl
pop
xchg
xor
adc
pop
xchg
bndstx
pop
xchg
nopl
pop
xchg
nopl
pop
xchg
nopl
push
cmc
nop
pop
xchg
nopl
pop
xchg
nopl
pop
test
fsubrl
pop
xchg
nopl
pop
xchg
nopl
enter
xchg
.byte
pop
xchg
inc
add
add
fadds
add
movsl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
jno
jns
jg
test
lea
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
das
cmp
xchg
cmp
sarl
fidivrs
lock
cmp
cmp
cmp
or
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
jno
scas
cmp
sub
ds
ds
ds
arpl
insb
jb,pt
jle
test
mov
mov
jecxz
pop
aas
xor
aas
jge
test
mov
xchg
aas
ret
aas
add
add
add
xor
xor
jne
xorb
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
ja
mov
cwtl
xor
divb
sbb
and
das
xor
mov
xor
xor
xor
xor
xor
push
xor
aam
call
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
jo
jbe
jl
mov
xor
jmp
icebp
xor
sub
cs
ss
jge
cwtl
ss
aaa
sbb
and
and
aaa
inc
aaa
dec
aaa
push
aaa
pop
aaa
fs
insl
aaa
jae
sahf
aaa
cmpsl
aaa
lods
aaa
mov
leave
aaa
iret
aaa
or
adc
sbb
and
dec
cmp
popa
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
jg
test
mov
int3
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
cmp
jo
je
jp
jle
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
test
mov
cmp
idivl
xor
ds
xchg
ds
ds
ds
mov
ds
or
dec
aas
pop
aas
add
add
add
xor
jns
jg
cltd
xor
xor
xor
xor
insb
xor
js
jle
test
xchg
xor
xor
xor
xor
pop
xor
imul
mov
mov
xor
xor
xor
xor
xor
pop
xor
jb
mov
ret
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
dec
xor
fwait
xor
mov
enter
cli
xor
adc
ss
ss
ss
ss
aaa
pop
aaa
sbb
aaa
xchg
mov
xchg
aaa
xchg
aaa
scas
aaa
aaa
xor
arpl
jne
scas
cmp
cmp
cmp
inc
cmp
push
cmp
cmp
jle
test
cmpsl
cmp
cmp
cmp
cmp
cmp
cmp
jae
mov
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
cmp
outsl
cmp
jns
test
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
insb
cmp
sahf
cmp
mov
mov
cmp
add
or
ds
pop
bound
insb
ja,pt
cmpb
mov
ds
ds
ds
ds
push
aas
and
aas
pop
aas
pop
aas
jecxz
add
add
add
add
pop
xor
mov
mov
mov
xor
xor
mov
xchg
xor
xor
xor
xor
xor
dec
xor
push
xor
xor
xor
pop
xor
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
xorb
ss
aaa
inc
aaa
dec
aaa
push
aaa
pusha
aaa
jne
mov
aaa
fdivs
fidivs
lock
or
sub
cmp
dec
cmp
outsl
cmp
cmp
cmp
cmp
push
cmp
arpl
jo
cltd
cmp
cmp
sahf
cmp
mov
mov
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
ss
push
cmp
push
cmp
add
add
xor
cmp
cmp
inc
xor
xor
xor
insb
xor
jl
int3
xor
xor
xor
xor
xor
xor
adc
adc
sbb
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
mov
add
pushf
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
