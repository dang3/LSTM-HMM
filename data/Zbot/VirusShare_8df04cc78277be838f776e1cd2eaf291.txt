call
out
ds
inc
pop
inc
push
lcall
int
imul
jl
in
scas
ds
jmp
sub
out
dec
pop
jnp
scas
push
orl
xchg
dec
push
and
lods
lahf
pop
mov
lcall
xchg
or
sub
adc
or
into
inc
push
ret
add
movsb
scas
lcall
mov
ss
lahf
in
hlt
ret
nop
inc
sbb
insl
movsl
cmp
or
and
leave
lcall
mov
add
fwait
aaa
andl
les
push
fcomi
iret
dec
or
xchg
pushl
pop
shll
sub
les
aaa
cmp
ja
fcomps
out
cmp
mov
lcall
jb
mov
aas
inc
hlt
sbb
jp
hlt
or
ds
cs
movl
adc
shll
jne
out
daa
xchg
daa
mov
int
inc
inc
push
daa
dec
xchg
inc
jo
mov
std
inc
or
inc
aas
dec
lahf
das
aad
incb
decl
mov
and
add
iret
out
add
int
sub
inc
xchg
adc
lret
lcall
sbb
mov
stos
in
adc
sbb
hlt
js
cmp
data16
or
ljmp
shlb
mov
sbb
jecxz
es
fs
inc
push
test
stc
dec
shll
or
lods
lcall
lods
pusha
ror
xor
jmp
jbe
pop
and
repnz
pushf
int3
test
shrl
popf
rep
adc
cld
getsec
pop
mull
pop
loopne
in
jle
pop
movsb
add
out
call
je
cltd
xor
cmpsl
dec
repz
sbb
aad
mov
lcall
jle
mov
push
enter
mov
xor
es
rcrl
mov
psubd
loopne
call
xchg
and
aas
xchg
or
sub
sbb
push
dec
sub
decl
xor
dec
dec
dec
sbb
adc
mov
cs
cmp
test
sbb
sbb
fcomp
sti
mov
cmpsb
insb
sti
and
popf
push
and
nop
decl
xor
or
xchg
or
adc
inc
sahf
shlb
mov
ljmp
iret
out
mov
adc
mov
arpl
mov
call
pop
test
ja
pop
pop
pop
sub
sbb
xchg
mov
fimuls
js
pop
inc
rclb
mov
ja
sti
cmpsl
lds
int3
pop
int3
sbb
adc
repz
decl
jae
and
jae
cmp
pop
cmpb
and
nop
jg
jo
lcall
add
cmpl
ret
push
cmp
pop
sub
lcall
movsb
sbb
shl
mov
cs
cmpsb
push
nop
push
data16
test
imul
pop
add
enter
push
adc
testb
mov
mov
mov
adc
enter
xor
cmp
pushf
je
addr16
call
push
jle
or
or
dec
jb
sarl
or
pushf
stos
mov
mov
or
sahf
pop
jo
sahf
and
sti
dec
sahf
adc
sbb
mov
movsb
daa
cmc
adc
shll
inc
fiaddl
jmp
cmp
adc
jb
xor
xchg
mov
dec
das
xchg
daa
xor
adc
cwtl
sahf
mov
stos
lcall
ret
sub
decb
pop
jp
xlat
lahf
push
or
mov
adc
jecxz
add
jne
jae
and
ljmp
mov
push
push
xor
lahf
push
xchg
jle
ret
ficompl
cmp
decl
cs
es
popf
lods
dec
mov
sar
sub
jl
fidivrl
push
divb
push
push
sbb
xchg
into
insb
jne
fs
call
popa
jmp
roll
push
pusha
fiaddl
push
stos
push
jmp
orl
test
repz
pop
mov
push
iret
pop
adc
push
cmp
add
daa
mov
mov
jg
aas
lds
jle
push
jge
add
push
push
in
lea
lcall
xchg
arpl
cmp
lret
jnp
aas
push
jnp
push
jae
sbb
jmp
in
hlt
xor
mov
cld
push
daa
data16
or
or
sbb
scas
clc
incl
in
sub
stc
inc
shrb
pusha
sbb
add
jg
lret
stos
xchg
out
jnp
xor
jle
and
imulb
push
xchg
fsubl
sub
decl
jae
jmp
xchg
pop
pop
and
add
xchg
jmp
mov
pop
out
add
sbb
add
cmp
pop
adc
and
std
pop
mov
les
xor
fcompl
xor
mov
sarl
shrl
pop
jmp
fisubl
pop
decb
and
cmc
push
push
adc
rcll
mov
push
cmp
fs
insl
push
fcompl
push
adc
stos
dec
mov
mov
jle
xor
sbb
cmp
int
mov
and
adc
into
mov
jg
push
push
sub
xor
pop
mov
icebp
imul
js
lods
mov
imul
mov
fiadds
popl
fwait
lret
cmp
xchg
shll
aad
inc
rorl
xchg
jnp
pop
mov
inc
movsb
lcall
mov
in
ss
xchg
pushf
fs
adc
inc
std
loop
xchg
ljmp
xorb
push
and
mov
pop
std
mov
jno
outsl
cli
lcall
and
jge
ror
shl
popf
movsb
pop
pop
inc
or
pushl
mov
arpl
or
out
dec
outsb
push
aas
or
sub
jg
sub
sbb
les
xlat
inc
pusha
inc
pusha
in
test
mov
aas
dec
mov
inc
lret
and
imul
hlt
xor
loope
sbb
cmp
ret
bound
insb
ficomps
lcall
mov
jns
sbb
enter
cmp
aas
push
pushf
test
pop
cmc
hlt
pop
ss
lcall
mov
sbb
xor
lcall
inc
pusha
js
push
push
push
pop
cmp
sahf
add
xchg
jbe
mov
ss
sub
mov
cmp
sarb
dec
pop
fcomps
ret
jge
or
clc
ja
or
push
jae
and
jmp
xchg
mov
sbb
loope
mov
out
out
nop
nop
call
cld
xor
pop
inc
adc
lods
out
mov
jb
adc
ljmp
mov
popf
ud1
outsl
mov
mov
mov
mov
rorb
js
sbb
out
pusha
ret
std
rol
inc
xor
or
int
mov
movsb
and
incl
shl
enter
in
ds
mov
ljmp
cmp
mov
xor
inc
roll
outsl
mov
je
push
inc
mov
inc
mov
sbb
scas
xorl
inc
js
out
cmp
jo
icebp
repz
lds
out
xchg
push
mov
adc
mov
sbb
mov
inc
mov
xchg
xchg
addr16
pushl
out
data16
mov
add
dec
jl
mov
pop
in
dec
xor
ljmp
pop
xor
pushf
xor
push
ds
ss
addl
cmp
inc
dec
cmpsl
add
pop
pop
jae
xlat
stc
insl
mov
push
push
mov
cmp
imul
add
mov
hlt
iret
push
inc
add
dec
push
cs
push
scas
sar
call
jno
ds
lcall
push
iret
xor
aad
sahf
jp
cmp
sarb
lock
mov
jns
inc
mov
pushf
xlat
mov
ljmp
or
lret
popf
xor
xchg
and
popw
sub
adc
lcall
ljmp
addr16
dec
cld
pop
cmp
call
rcr
adc
inc
inc
jmp
sub
mov
push
dec
pusha
loop
int
jmp
push
push
pusha
xchg
insl
lods
jle
jnp
and
ljmp
pop
xchg
pop
loop
imul
jnp
ljmp
push
cmp
mov
jle
repz
rorl
movsb
inc
mov
xchg
test
mov
mov
push
inc
test
jge
loopne
sbb
daa
addr16
and
stos
repnz
ljmp
push
mov
out
js
lods
pop
mov
or
idivb
or
mov
pushl
inc
outsb
sub
ja
ror
out
in
sub
in
repz
push
out
stos
jmp
sar
out
mov
mov
dec
cld
mov
insl
pop
mov
jmp
sub
mov
out
out
mov
push
fcompl
scas
jns
adc
cmp
pop
addb
ds
and
pusha
adc
ljmp
push
sarb
adc
pop
cmp
xchg
addr16
push
movsb
sbb
adc
das
cs
inc
or
add
cs
mov
xor
and
jl
ficompl
arpl
gs
mov
jg
lcall
add
fwait
icebp
cmp
push
push
rcrb
lahf
push
lea
cmc
aas
insl
inc
adc
cli
pop
out
xchg
inc
or
and
pop
pop
cmp
xchg
leave
faddp
movsl
or
int3
nop
fwait
sahf
incl
rolb
jb
mov
lods
test
mov
mov
inc
ja
incl
mov
in
out
xchg
push
inc
lock
les
sub
mov
dec
cmp
test
cli
ja
jb
call
and
dec
adc
dec
nop/reserved
ret
dec
xchg
divl
push
into
jge
icebp
adc
ror
lret
add
sbb
sub
test
loopne
in
pushf
cmp
dec
lcall
ljmp
jmp
pop
push
jne
push
aam
sub
add
xor
jg
mov
or
mov
mov
cmpsb
mov
adc
ljmp
nop
jp
lock
xchg
mov
daa
pop
mov
or
sbb
jo
or
incb
js
stos
sub
inc
xchg
repz
dec
jno,pn
ljmp
sti
pop
lods
pushf
lcall
sbb
push
pop
pop
lods
ud0
decl
sbb
clc
sbb
push
movsb
test
cmp
xlat
xchg
jnp
mov
loop
incl
jl
pushf
cmp
or
loop
pop
pop
popa
push
repnz
sub
pushl
test
popa
fstps
ljmp
adc
rorb
sbb
xchg
mov
lods
lods
ljmp
push
imul
mov
ds
sbb
ljmp
mov
hlt
push
push
adc
lds
cmp
pop
fsts
mov
jmp
lcall
or
les
mov
call
pop
push
js
sub
roll
pop
jnp
dec
js
cmp
popa
inc
fnstcw
mov
sbb
add
nop
jb
dec
xlat
jle
jg
in
aas
sub
or
push
mov
stos
inc
arpl
lahf
enter
and
push
xchg
mov
rorb
fldcw
cld
cltd
js
ja
dec
ret
cmpb
jmp
mov
add
add
ja
int
frstor
jge
ljmp
or
lret
sbb
add
jnp
pop
fstps
out
adc
cwtl
inc
test
fldt
cmpsb
lock
mov
subb
add
or
cmp
call
sahf
and
leave
bnd
cmc
inc
fmull
push
mov
mov
or
ljmp
mov
adc
call
out
xchg
scas
xor
or
jg
fdivrs
pop
cwtl
sbb
mov
setnp
aaa
pop
pushf
stc
mov
and
dec
jo
hlt
pop
cmpsb
and
in
push
ret
fisubs
pushl
adc
test
xchg
mov
mov
xchg
push
mov
and
ljmp
ljmp
into
fcmovnb
sub
push
mov
std
popf
stos
mov
notl
pop
andl
movsb
push
cmp
leave
pushf
jle
cmp
inc
jnp
xor
sbb
jo
insb
jnp
mov
bound
sub
daa
mov
xchg
xor
pop
mov
mov
pop
pop
aad
lcall
cmp
test
mov
jecxz
sub
fbld
mov
insl
arpl
xchg
mov
jecxz
orl
xchg
ret
jmp
out
sahf
xlat
loopne
xchg
call
sbb
clc
adc
xor
push
jecxz
push
cmp
dec
repz
mov
push
scas
inc
fstp
pop
sub
jne
adc
ret
cs
out
shrb
movsl
add
adcb
pop
addr16
lret
adcb
rclb
lcall
or
adc
stc
imul
lcall
lcall
decl
ss
aad
cmc
popf
fs
add
inc
jne
fwait
cltd
cmpsb
je
jmp
clc
inc
jbe
scas
in
test
sub
les
mov
add
lahf
push
daa
fdivr
dec
aas
pop
sbb
add
cmc
dec
sub
sbbb
aas
jg
aam
sub
fldl
stc
daa
xor
jecxz
xor
in
push
cmp
fs
inc
sbb
orb
das
das
ja
lcall
pop
test
jp
popa
mov
dec
push
add
dec
jno
cld
sbb
cmc
cmp
mov
jns
fs
hlt
mov
sub
call
rcl
xchg
pop
mov
das
ljmp
ds
and
jl
mov
push
std
cmp
mov
shlb
lcall
mov
cs
subb
outsl
loopne
cs
int
dec
int3
pop
int3
lcall
jmp
mov
es
adc
xchg
ja
popa
mov
jp
decl
xchg
fwait
aas
mov
jo
fisubrl
and
jl
aas
in
mov
aas
clc
add
in
cmp
lret
add
out
int3
je
cmpsl
dec
push
push
jb
movsb
mov
inc
mov
jp
push
cmpsb
pop
sarl
subb
les
pushl
sbb
push
std
adc
mov
pop
out
and
mov
adc
add
aas
ljmp
incb
xchg
sub
mov
fsts
sbb
sub
jg
mov
call
cmp
stos
adc
lock
sti
xor
dec
imul
incl
repnz
sti
mov
mov
push
mov
pop
push
jne
enter
mull
mov
cld
addb
in
pop
sbb
outsb
fistl
fcompl
or
mov
cmp
bound
cmpsb
test
jae
mov
mov
fdivrp
ljmp
ret
pop
mov
adc
daa
icebp
sbb
jno
insl
popa
pop
out
fbld
jmp
adcl
call
clc
adc
pop
data16
in
cld
push
sahf
pop
testl
call
fsubs
inc
pop
test
mov
cld
xchg
mov
shrl
ds
sub
jns
in
or
dec
loopne
jns
mov
clc
mov
mov
push
jmp
mov
mov
aad
call
pop
push
mov
mov
or
jno
lods
test
jg
push
push
sbb
sahf
adc
ficompl
mov
pop
fnstsw
sbb
into
mov
call
test
iret
out
stos
add
insl
lret
hlt
test
les
and
decl
pop
insb
in
mov
inc
shlb
pop
sti
jmp
movsl
sbb
mov
incl
mov
ja
and
aaa
cltd
mov
mov
icebp
ss
scas
cs
lea
out
sbb
mov
push
lods
push
jle
or
dec
movb
call
cmp
adc
xchg
dec
jl
xor
dec
adcb
and
and
stos
cmc
aaa
mov
xlat
inc
mov
inc
popa
mov
outsb
pop
out
jecxz
rcl
call
push
xchg
out
jge
fcmovb
and
push
and
xor
add
loopne
or
push
mov
pushl
mov
cmp
dec
arpl
xchg
cli
jne
add
adc
cmp
stos
imul
push
adc
fwait
mov
stos
push
aad
sarb
add
imul
popf
ljmp
mov
sbb
nop
mov
lods
movsl
xchg
mov
add
jl
aam
cli
call
or
out
mov
clc
in
adc
shrb
sbb
cmp
mov
frstor
fmulp
sub
das
inc
cmp
and
mov
cld
bound
out
and
or
pushl
imul
jae
xchg
push
in
insb
add
push
fildll
mov
inc
pushl
sub
xor
dec
xchg
jb
idivb
inc
jl
bound
repnz
fs
xor
cmp
ljmp
hlt
int
fcmovne
dec
cmpb
fdivrs
pop
jnp
push
xchg
movsl
pop
xchg
incl
push
rcr
inc
or
pop
adc
mov
into
jge
sbb
fisubrl
push
hlt
and
mov
jl
fstl
shlb
adc
xor
stc
mov
dec
out
lcall
cld
dec
inc
int
pop
jnp
push
fldt
out
mov
pop
jae
fstps
test
jl
sahf
jg
aas
icebp
add
adc
cld
jae
cmp
adc
cmp
adc
sub
decl
in
mov
nop
dec
add
ljmp
or
mov
cmp
mov
push
inc
pusha
jecxz
inc
mov
and
dec
jo
cmp
push
jb
jmp
mov
inc
sub
mov
push
pop
cmpsl
sbb
jg
jnp
mov
decl
push
gs
into
sub
pop
lahf
cmp
mov
inc
mov
movsl
out
mov
push
cmp
push
jno
and
mov
dec
in
rcrb
repz
jg
pop
dec
mulb
mov
lcall
and
imul
dec
outsl
inc
sub
lcall
jge
lahf
inc
sahf
add
in
pop
adc
pop
sti
insb
adc
mov
cmpsb
in
jg
xchg
in
aas
pop
cmp
add
leave
mov
mov
sub
decl
rol
iret
pop
xchg
push
xchg
cltd
sub
dec
mov
and
js
loope
cmp
fists
cmpsl
mov
push
xchg
cltd
bound
pop
ret
mov
xor
ret
int
sar
lcall
jl
imul
mov
addr16
pop
fstpt
xchg
orb
call
int
test
push
mov
scas
fwait
lea
xor
popf
inc
cmpsl
or
shlb
sti
pop
xchg
inc
sbb
xor
decl
nop
loopne
icebp
loope
sbb
cs
cmp
idivl
icebp
jb
dec
popf
adc
jo
imul
call
dec
imul
loop
inc
les
jae
call
into
mov
xchg
incl
add
movsl
mov
mov
sbb
xchg
imulb
mov
incl
push
mov
mov
jle
aad
cmp
and
fldenv
das
mov
cmp
loope
test
scas
push
mov
dec
sub
lods
invd
dec
jno
incl
lds
jae
mov
or
scas
out
sbb
data16
jp
mov
lcall
jb
xor
mov
mov
lods
std
sub
push
sbb
into
xchg
je
daa
lret
pop
xchg
mov
pop
fimull
das
mov
js
mov
into
int
hlt
in
popa
xchg
jo
mov
sti
std
cmpsb
add
ret
mov
mov
or
mov
mov
xor
clc
sub
mov
rcll
dec
mov
iret
mov
mov
pop
mov
pop
sub
mov
ss
out
cltd
inc
mov
popa
cmp
idivb
int
adc
addr16
sub
inc
sub
mov
mov
sub
sub
xor
xor
lds
aad
cmp
incl
mov
mov
inc
incb
lods
sbb
das
push
das
rcll
outsb
outsl
in
push
dec
stos
dec
add
inc
pop
out
into
es
dec
pusha
int
test
imul
push
pusha
mov
cmp
ret
push
push
sbb
mov
dec
or
add
xchg
sub
push
fwait
mov
in
jmp
popa
gs
push
jmp
sahf
sti
push
ds
adc
iret
insb
jp
xchg
shrl
imul
add
outsb
dec
cmp
mov
mov
xor
mov
mov
push
and
fiadds
rolb
in
inc
test
test
jne
dec
insl
lcall
dec
mov
rorl
loopne
jle
outsl
or
aad
idiv
call
cmpsl
fsubr
outsl
in
lcall
lret
or
into
lods
fiaddl
cmp
inc
mov
fnsave
sub
sti
pop
out
ds
pop
insl
sbb
stos
bnd
fidivrl
sar
pushl
or
xor
fnstcw
rcll
pop
test
addl
fs
inc
cmp
push
cmp
sahf
jmp
push
faddl
jne
sub
out
mov
movsb
xchg
icebp
xlat
mov
ret
popf
sbb
cmpsl
out
sbb
test
push
pop
sbb
or
incl
mov
pop
or
inc
pop
inc
mov
lock
addb
jno
sbb
decl
cwtl
mov
std
sub
out
pop
test
repz
pop
cs
jbe
clc
cmp
call
dec
or
testl
mov
sub
sbb
in
xchg
incl
scas
or
jge
lahf
sbb
out
imul
push
dec
aad
xor
ret
mov
repnz
add
pushl
gs
inc
lret
int
pusha
xchg
pop
pushf
sub
into
cmp
mov
sub
fdivr
lcall
xchg
ljmp
mov
insb
pusha
popf
out
sbb
pop
cwtl
rcrl
xor
cmpsl
cmp
xor
jnp
lret
mov
fnsave
icebp
lret
adc
pushl
sub
mov
pop
push
mov
scas
dec
push
and
inc
adc
loope
movb
decl
adc
arpl
cmp
insl
jnp
jmp
xchg
xchg
xor
xor
loopne
xchg
fdivs
fiadds
jmp
scas
sysexit
pop
or
sbb
cmp
js
into
ds
mov
lea
jmp
jmp
xchg
pushf
mov
add
ss
aaa
push
pop
push
mov
mov
jmp
inc
pushl
loop
sbb
cli
mov
push
js
fisttpl
fs
pushl
push
mov
xchg
mov
das
adc
in
test
ljmp
adc
idiv
jno
shlb
or
hlt
je
add
jmp
cmp
fistps
xchg
sub
jae
gs
cmpsb
lea
addr16
ja
and
dec
loop
decl
xchg
and
xchg
mov
xor
push
lods
inc
cli
sbb
rclb
mov
decl
nop
fisttpl
mov
mov
mov
in
arpl
push
push
stc
mov
add
sub
xorb
mov
xor
aas
mov
add
add
or
incl
sbb
mov
scas
mov
sahf
sub
mov
cld
or
lock
aad
vcmpsd
jb
sti
in
or
mov
dec
incl
andb
ljmp
shrl
test
ja
or
lcall
dec
popa
ror
lock
or
mov
ja
jmp
repnz
mov
decl
xor
rcrl
xcrypt-cfb
cmpsl
and
dec
push
mov
jns
std
andb
mov
lds
cmp
mov
inc
rolb
xor
xchg
out
push
inc
mov
icebp
fidivl
xor
inc
ljmp
rorb
xor
dec
icebp
in
insl
pop
je
pop
jnp
inc
sbb
jmp
nop
jbe
or
jb,pn
pushf
jmp
out
push
in
adc
add
mov
call
cmp
cmc
test
adc
negb
mov
cmp
dec
sub
stos
xorl
sti
adc
xchg
not
dec
or
pop
mov
lcall
out
cwtl
fdivl
lret
cmp
ficompl
arpl
mov
push
popf
dec
and
mov
xchg
jb
insb
push
pop
gs
hlt
jae
clc
dec
lods
jnp
in
sbb
inc
out
fbld
push
xchg
fcom
je
adcb
incb
call
ss
push
addr16
das
and
les
mov
adc
cli
cwtl
push
sub
or
seta
repnz
test
cmp
jl
pop
jle
jecxz
xchg
and
dec
test
into
mov
sub
out
incl
sbb
scas
sbb
hlt
or
clc
pop
mov
mov
test
or
inc
pop
sub
ret
jmp
pop
jb
mov
shlb
aas
fildll
outsl
xchg
lahf
adc
shrb
push
arpl
push
andl
inc
mov
stos
pusha
movsl
movsl
dec
and
jo
jno
xor
addr16
jbe
xor
jecxz
incl
and
sbb
jno
mov
push
bound
dec
adc
fistl
jmp
mov
stos
and
xor
in
jge
mov
xorb
push
cmp
fcomip
call
inc
es
push
sti
and
mov
pop
jo
and
cmc
pop
push
int
jmp
insl
pop
pop
aad
push
arpl
sub
cli
test
fstpt
jb
lods
mov
lret
xchg
call
rorb
sbb
out
or
cld
test
inc
imul
pop
adc
xchg
sub
test
pop
add
cmp
sbb
fs
lcall
loop
cmpsb
lock
repz
xchg
stos
jecxz
mov
cmp
and
fisttps
or
stos
add
std
inc
cli
mov
push
mov
fcmovnb
xor
xchg
dec
sti
movsb
loopne
cmp
ja
clc
push
cltd
mov
lcall
sub
ds
bound
inc
or
xchg
inc
inc
notb
jge
mov
pushf
push
call
or
mov
xor
test
arpl
mov
mov
shrl
into
and
push
testb
push
dec
cwtl
scas
leave
sbbb
push
jo
lcall
sbb
ds
lret
insb
lods
andb
mov
cs
mov
data16
stc
fistps
dec
push
call
cmpsl
js
adc
pop
dec
std
inc
scas
add
scas
out
mov
hlt
xor
mov
call
sti
icebp
mov
ret
out
sub
or
sub
int3
sbb
mov
hlt
mov
imulb
cmpsb
lock
call
mov
mov
adc
push
cmpsl
std
call
and
mov
pcmpeqb
iret
neg
or
xor
adc
cs
pop
sub
cmp
fists
xor
out
mov
xor
sub
adc
fwait
movsl
dec
shlb
adc
in
adc
leave
and
sub
push
cmp
fwait
xorl
es
pusha
insl
and
int3
push
fmulp
jmp
pop
pop
orb
jae
push
sbb
or
cmp
pusha
icebp
mov
leave
shrl
fcompl
lods
lods
leave
mov
inc
jae
shll
push
jo
or
or
xchg
jl
fstps
push
lock
xchg
xor
rcl
xor
in
lret
mov
stc
das
inc
or
mov
mov
movsl
insl
mov
inc
xor
fwait
gs
mov
ficoml
or
adc
mov
roll
int
jnp
inc
mov
aas
dec
xchg
adc
in
cmp
mov
or
pop
inc
imul
sbbl
lds
mov
lods
pop
shll
lods
or
inc
sbb
fisttps
popa
xor
mov
adc
lahf
and
xchg
jge
mov
xchg
fcmovne
push
scas
pop
scas
adc
icebp
out
je
vhsubps
pushl
fldl
popf
push
pop
pop
sub
flds
add
jmp
iret
sub
nop
add
mov
adc
sbb
aas
pop
jnp
shll
mov
popa
fstpl
pop
cmc
mov
ja
cmp
cmpsb
stos
enter
adc
nop
mov
push
lea
call
mov
add
cmpsl
push
rol
cmp
push
test
ret
pop
fwait
je
inc
mov
les
les
push
ja
mov
ljmp
sbb
fcoms
jnp
push
test
jle
movsl
ss
inc
push
shll
sub
cmpsb
repnz
call
lahf
cmp
stos
add
pop
xor
mov
in
ret
cmp
iret
test
out
lret
push
jmp
cmp
jecxz
sbb
cli
and
movl
push
jmp
fstl
xchg
cmpsb
lds
jns
push
cmpsb
icebp
shlb
jnp
pop
sbb
incl
mov
xchg
sub
ds
fadds
jmp
jg
inc
and
pushf
lock
idiv
incl
add
xchg
sbbl
lods
loopne
mov
xchg
mov
and
lcall
mov
mov
xor
mov
jns
das
ffree
flds
cmpb
ds
sahf
add
lcall
mov
repnz
sbb
andb
sub
jmp
stos
stc
inc
repnz
out
push
movsb
jp
ds
popa
jne
hlt
push
xor
dec
jg
ljmp
jmp
insb
ret
push
cmc
mov
es
mov
xchg
xchg
or
or
mov
xchg
sbb
cld
mov
fildl
addr16
cmp
mov
ljmp
mov
jns
cmp
add
pop
outsl
scas
lds
mov
mov
fstpl
mov
decl
xchg
sbb
in
lods
inc
push
test
jl
mov
repz
dec
scas
xchg
ljmp
add
mov
pushf
std
addr16
out
fsts
jb
pusha
inc
int3
call
aaa
lea
insl
aad
iret
xlat
lock
sub
dec
jo
xchg
inc
leave
sahf
mov
fisubl
adc
incl
inc
clc
js
xor
sub
mov
rcrb
jno
sbb
das
ja
shlb
out
cltd
mov
dec
test
mov
inc
add
icebp
jns
sbb
or
dec
cwtl
add
pop
ja
mov
push
inc
sbb
push
incl
mov
fimuls
movsb
mov
mov
fcoms
cld
stos
sbb
push
xor
lcall
jl
xchg
repnz
lret
je
sbb
fstpt
jge
decl
push
test
out
xchg
mov
daa
std
rcll
adc
ljmp
rcrb
outsl
and
jg
and
and
mov
movsb
dec
mov
pop
inc
mov
incl
out
lock
lret
imul
outsb
and
subw
in
call
dec
fldl
sub
shll
add
shlb
or
or
lds
jg
jmp
arpl
cmp
cs
pop
imul
mov
pop
ljmp
or
mov
mov
inc
push
stos
test
mov
les
jmp
cmp
pushl
inc
fs
cmp
add
mov
loopne
push
or
xorb
mov
sbb
iret
fidivrl
sbb
xorb
call
sarb
pop
gs
imul
hlt
mov
subb
out
cmp
dec
incl
fldcw
xchg
mov
pop
call
aaa
aam
mov
jmp
incl
jle
cmp
addb
out
clc
xchg
xor
sti
aas
sti
mov
ljmp
aam
mov
mov
pop
loope
dec
stos
dec
repz
or
call
in
ljmp
data16
fidivrs
mov
mov
lret
imul
call
insb
mov
pop
push
mov
popa
test
je
lret
and
pop
decl
dec
outsl
xchg
mov
cmp
or
mov
mov
cltd
fildl
sub
incl
das
xor
add
jmp
fwait
hlt
jae
pop
push
jo
fs
repnz
lret
pop
scas
mov
fucomi
xlat
es
mov
push
sub
xor
sub
fwait
mov
jecxz
and
mov
bound
out
adc
or
in
pop
adcb
ljmp
jmp
jne
mov
push
adc
movsb
outsb
mov
mov
stos
insl
stc
int
fimuls
jmp
jae
dec
pop
cwtl
add
dec
dec
aas
hlt
rorb
mov
inc
icebp
repnz
call
shufps
and
jbe
push
sub
ret
stos
das
testb
jne
push
add
adc
add
mov
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
mov
add
inc
push
movsb
out
ds
inc
pop
inc
push
lcall
dec
mov
push
ljmp
in
scas
shlb
lret
pop
jnp
scas
push
orl
call
dec
push
and
lods
lahf
pop
mov
xchg
or
sub
adc
or
clc
into
inc
push
ret
add
movsb
scas
pop
out
mov
ss
lahf
in
hlt
ret
nop
inc
sbb
insl
movsl
cmp
or
and
leave
lcall
jae
aaa
andl
jmp
push
fcomi
iret
dec
or
xchg
ja
pop
shll
sub
les
aaa
cmp
pushl
fcomps
out
cmp
mov
imul
mov
aas
inc
hlt
sbb
incl
jp
hlt
or
ds
cs
sar
fimull
jmp
dec
shll
cld
call
jne
out
daa
xchg
daa
mov
int
inc
inc
push
daa
dec
xchg
inc
jo
add
inc
or
mov
inc
aas
dec
lahf
das
aad
incb
xchg
fisttpl
lods
and
add
iret
out
add
int
sub
inc
xchg
adc
lret
pop
out
sbb
mov
stos
in
adc
decl
mov
hlt
js
cmp
data16
or
ja
shlb
mov
sbb
incl
es
fs
inc
test
stc
dec
shll
or
jp
lods
lcall
lods
pusha
ror
xor
jbe
pop
and
repnz
pushf
int3
test
shrl
lcall
cld
getsec
pop
mull
pop
loopne
in
jle
pop
movsb
add
out
call
je
cltd
pushl
xchg
pusha
dec
mov
cmpsl
dec
repz
sbb
aad
mov
xlat
mov
push
enter
mov
call
xor
es
rcrl
mov
psubd
xchg
and
aas
xchg
or
sub
mov
dec
sub
mov
bswap
aam
xchg
dec
dec
sbb
call
mov
cs
cmp
test
pusha
movsl
sbb
fcomp
sti
mov
cmpsb
insb
sti
and
lds
push
and
nop
or
fcompl
jno
xor
or
xchg
or
mov
shlb
mov
lcall
mov
adc
mov
lock
out
scas
arpl
mov
jo
pop
pop
pop
pop
sub
incl
sbb
xchg
mov
fimuls
rclb
mov
ja
sti
cmpsl
lds
dec
pop
int3
sbb
adc
repz
movsb
mov
and
jae
cmp
lcall
mov
test
nop
jg
jo
int
sarl
add
cmpl
pop
cmp
cmp
pop
sub
sbb
shl
mov
cs
js
jmp
adc
test
imul
pop
add
push
adc
fisttps
or
mov
mov
adc
enter
ds
pushl
xchg
sub
push
cmp
pushf
je
fistl
push
jle
or
or
dec
jb
jmp
or
ret
pushf
stos
mov
mov
or
sahf
and
sti
dec
sahf
adc
sbb
mov
movsb
daa
cmc
adc
shll
inc
fiaddl
push
cmp
hlt
adc
jb
xor
pushl
shll
xchg
daa
xor
sahf
mov
stos
lcall
call
ret
sub
decb
pop
jp
xlat
lahf
push
or
mov
adc
jecxz
mov
jne,pt
jae
and
scas
inc
fwait
pusha
push
mov
push
push
xor
lahf
dec
sbb
jle
ret
ficompl
cmp
cs
mov
mov
popf
lods
dec
mov
rcrb
jl
fidivrl
push
divb
push
ljmp
push
sbb
xchg
into
insb
jne
fs
xchg
popa
das
xor
int
roll
incl
out
rcrl
pusha
fiaddl
push
stos
push
popa
les
inc
ljmp
data16
lcall
pushf
push
iret
pop
adc
push
cmp
add
daa
mov
lds
aas
lds
jle
push
jge
decl
sbb
lea
insb
push
xchg
lret
jnp
aas
push
jnp
stos
jg
jae
sbb
jmp
in
hlt
xor
call
fdivs
aas
or
or
sbb
sub
sub
stc
inc
shrb
shrl
add
or
mov
stos
xchg
out
jnp
xor
jle
and
ljmp
imulb
push
xchg
fsubl
mov
sub
jmp
xchg
pop
pop
ljmp
and
add
xchg
mov
pop
out
add
sbb
add
cmp
call
pop
hlt
pop
adc
and
std
pop
mov
pusha
add
fdivr
lcall
xor
mov
sarl
shrl
pop
cmpsb
xor
nop
pop
decb
call
cld
push
adc
rcll
mov
push
cmp
fs
insl
push
fcompl
push
adc
jg
ljmp
mov
mov
jle
xor
or
mov
mov
and
adc
into
mov
notl
mov
inc
inc
scas
pop
mov
jge
aam
icebp
imul
xor
addr16
retw
cld
mov
mov
fiadds
popl
fwait
lret
xchg
shll
aad
inc
rorl
xchg
jnp
decl
rolb
lcall
in
ss
xchg
pushf
ljmp
fcom
adc
inc
std
loop
xchg
xorb
push
and
decl
lcall
test
jns
sbb
and
jge
ljmp
int
out
popf
movsb
pop
pop
inc
or
jge
mov
arpl
or
jg
jmp
orb
aas
or
sub
sub
sbb
les
call
inc
pusha
inc
pusha
in
test
mov
aas
dec
mov
imul
hlt
xor
loope
sbb
lock
lcall
cmp
ret
bound
insb
ficomps
aad
lret
or
andb
pop
sub
sub
aas
push
pushf
test
ss
lcall
lcall
mov
sbb
xor
pop
inc
pusha
js
push
push
push
pop
cmp
sahf
add
call
pop
imul
jle
sub
mov
cmp
sarb
dec
pop
fcomps
ret
push
jge
or
clc
ja
or
mov
and
jmp
out
clc
call
sbb
daa
loope
mov
out
nop
nop
call
cld
xor
pop
inc
adc
ljmp
lods
out
mov
jb
adc
cs
jle
mov
inc
call
jns
inc
stc
mov
rorb
js
push
das
pusha
ret
std
rol
inc
xor
or
jmp
int
mov
movsb
and
imul
clc
in
ds
mov
push
leave
ljmp
cmp
mov
fiaddl
inc
mov
mov
inc
mov
push
inc
mov
mov
sbb
scas
xorl
inc
js
incl
outsl
cmp
jo
icebp
repz
lds
mov
adc
mov
pushl
int3
sbb
mov
inc
mov
xchg
xchg
addr16
out
data16
mov
add
and
mov
orl
xor
fadds
sub
xor
push
ds
ss
addl
cmp
int3
pop
pop
jae
xlat
stc
insl
mov
push
push
add
mov
cmp
imul
hlt
iret
push
inc
add
mov
push
cs
push
scas
rclb
hlt
ds
lcall
ljmp
aad
sahf
jp
cmp
sarb
mov
inc
mov
lcall
or
xlat
mov
or
lret
popf
xor
xchg
and
data16
incl
sub
adc
lcall
lods
jg
cltd
push
cmp
sbb
inc
jl
cld
pop
ljmp
cmp
call
rcr
adc
inc
ret
sub
mov
push
dec
pusha
loop
int
scas
lcall
jmp
push
push
pusha
xchg
insl
lods
jle
jnp
and
cld
sbb
push
ss
ljmp
int
cmp
jnp
aam
shll
mov
mov
jle
repz
call
mov
jecxz
mov
inc
mov
xchg
test
mov
mov
mov
jge
loopne
sbb
ljmp
jnp
and
stos
repnz
aam
ds
mov
out
js
lods
pop
mov
or
idivb
or
mov
inc
outsb
sub
ja
ror
out
in
sub
xor
repz
or
repz
push
out
stos
jmp
mov
mov
ljmp
jp
dec
cld
mov
insl
pop
mov
sub
mov
out
out
mov
push
fcompl
lcall
scas
jns
adc
cmp
in
ds
and
xchg
rcrb
andb
pop
sbb
cld
push
sarb
adc
pop
cmp
xchg
addr16
incl
movsb
sbb
adc
das
les
cmc
add
cs
mov
xor
and
jl
call
ficompl
arpl
gs
mov
pop
add
jl
adc
jg
js
push
rcrb
lahf
push
lea
cmc
aas
insl
rclb
cli
pop
out
xchg
inc
or
and
pop
lcall
cmp
xchg
leave
faddp
movsl
or
int3
nop
fwait
sahf
test
test
jb
mov
lods
test
incl
stos
mov
mov
inc
ja
inc
xchg
mov
in
out
xchg
push
inc
lock
les
sub
pushl
test
cli
ja
jb
push
jbe
or
push
dec
nop/reserved
ret
add
decl
divl
push
into
jge
icebp
adc
ror
lret
out
jnp
pop
sub
mov
sbb
enter
leave
cmp
dec
sbb
jae
adc
add
sub
stc
pushl
push
aam
sub
add
xor
mov
or
outsl
jg
mov
mov
cmpsb
mov
adc
outsl
xchg
mov
jmp
pop
mov
or
sbb
jo
xchg
stos
sub
inc
xchg
shlb
repz
dec
jno,pn
lahf
imul
pop
lods
pushf
lcall
fiaddl
insl
sbb
push
pop
pop
lods
cmovs
lahf
subb
xchg
pop
dec
xchg
sbb
movsb
incl
mov
imul
cmp
or
mov
pop
popa
push
repnz
sub
test
popa
fstps
ljmp
call
adc
rorb
sbb
xchg
mov
lods
lods
lods
out
push
imul
sbb
xlat
fwait
mov
ds
sbb
lea
mov
hlt
push
push
adc
mov
adc
inc
jnp
std
pop
fsts
les
jmp
lcall
lcall
dec
or
les
mov
push
js
sub
roll
pop
aad
jnp
dec
js
cmp
popa
inc
fnstcw
mov
popf
es
add
decl
jb
dec
xlat
jle
in
aas
sub
or
push
mov
stos
inc
arpl
jg
lahf
enter
and
push
xchg
mov
rorb
fldcw
cld
cltd
js
ja
mov
push
cmpb
mov
add
add
ja
int
pushl
frstor
jge
ljmp
or
js
addl
pop
fstps
fldt
clc
out
adc
cwtl
inc
test
cltd
mov
cmp
ljmp
cmp
or
cmp
clc
mov
mov
bnd
lock
push
inc
fmull
push
mov
mov
mov
adc
call
decl
je
out
xchg
scas
xor
or
fdivrs
pop
cwtl
sbb
mov
in
jg
setnp
aaa
pop
pushf
stc
mov
adc
pop
cmpsb
and
gs
and
cmc
mov
mov
mov
sahf
imul
test
xchg
mov
mov
stos
inc
xchg
push
mov
and
ljmp
fstpl
xor
fcmovnb
sub
push
mov
std
popf
stos
mov
notl
pop
andl
xchg
leave
pushf
jle
cmp
jmp
xor
sbb
jo
insb
jnp
fwait
cwtl
bound
jmp
jecxz
mov
xchg
xor
pop
mov
fistpl
aad
lcall
mov
xor
ja
jecxz
sub
sbb
adcl
or
call
jecxz
orl
xchg
ret
out
sahf
xlat
loopne
xchg
call
sbb
lcall
loop
hlt
jecxz
push
cmp
dec
repz
fstp
pop
sub
jb
mov
mov
cs
pop
movsl
add
adcb
incl
addr16
lret
adcb
rclb
pop
add
stos
push
cmp
dec
stc
imul
dec
pusha
lcall
lcall
mov
push
aad
cmc
popf
mov
inc
add
inc
jne
fwait
cltd
cmpsb
je
or
xchg
clc
inc
jbe
scas
in
ljmp
les
mov
add
lahf
push
daa
fmul
aas
pop
sbb
add
cmc
dec
sub
pushl
sbbb
aas
jg
aam
sub
fldl
stc
daa
xor
jecxz
xor
in
push
cmp
fs
dec
dec
out
sub
sbb
orb
das
das
ja
push
pop
test
jp
popa
mov
dec
push
add
call
dec
jno
cld
sbb
cmc
cmp
mov
dec
fs
hlt
mov
sub
jmp
call
rcl
xchg
pop
mov
das
sub
xchg
and
jl
mov
pop
decl
std
cmp
mov
shlb
mov
cs
adcb
inc
mov
loopne
cs
int
dec
int3
pop
int3
gs
mov
es
adc
lcall
ja
popa
mov
jp
xor
adc
fisubrl
call
imul
jne
pop
das
jl
aas
in
mov
clc
add
in
cmp
lret
add
or
ljmp
out
int3
je
cmpsl
dec
push
push
jb
movsb
dec
inc
mov
jp
push
cmpsb
pop
sarl
push
data16
subb
les
sbb
push
std
adc
mov
pop
out
and
js
or
adc
add
aas
inc
add
push
dec
push
call
fsts
sbb
sub
jg
mov
in
adc
lock
in
mov
push
cmc
inc
dec
imul
sub
arpl
sti
mov
mov
call
daa
loope
sub
jne
enter
mull
cld
addb
in
pop
sbb
outsb
fistl
lcall
aad
xor
inc
xor
mov
cmp
bound
cmpsb
test
decl
sbb
fisubrs
ret
pop
mov
adc
daa
icebp
sbb
sub
lahf
fbstp
insl
popa
pop
out
fbld
add
pop
push
mov
clc
adc
pop
data16
pushl
push
sahf
pop
testl
fsubs
inc
pop
test
mov
cld
xchg
mov
shrl
ds
sub
jns
or
dec
loopne
jns
mov
clc
mov
mov
pushl
sub
fdivl
and
push
mov
mov
or
aad
mul
jno
lods
test
push
cmpsb
and
push
sbb
sahf
adc
ficompl
jmp
pop
fnstsw
sbb
into
push
bound
stos
add
insl
lret
hlt
decl
sbb
and
mov
add
jns
insb
in
mov
inc
inc
stos
pushf
pop
sti
jmp
movsl
sbb
mov
pop
ja
and
aaa
cltd
mov
pushl
push
jecxz
rorl
loopne
mov
push
lods
push
jle
or
incl
dec
dec
movb
aad
sbb
loope
dec
jl
xor
dec
adcb
jnp
ljmp
pop
push
push
xlat
inc
mov
inc
popa
mov
loope
push
mov
jecxz
rcll
push
xchg
out
jge
fcmovb
and
push
and
loopne
lcall
xor
add
xor
ds
mov
mov
cmp
dec
arpl
xchg
cli
jne
add
call
js
cmp
stos
imul
push
adc
fwait
mov
stos
push
aad
sarb
add
imul
lcall
mov
pop
cmp
movsl
stos
in
sbb
or
lods
movsl
xchg
mov
add
jl
aam
call
or
out
mov
clc
in
adc
shrb
sbb
call
frstor
fmulp
sub
das
inc
cmp
and
mov
cld
bound
out
jmp
repnz
imul
jae
xchg
push
in
insb
add
push
fildll
pushl
or
insb
xchg
hlt
dec
xchg
jb
idivb
inc
jl
bound
repnz
fs
xor
pushl
test
aaa
push
hlt
int
fcmovne
dec
cmpb
fdivrs
pop
jnp
push
xchg
movsl
pop
lcall
add
faddl
mov
mov
sbbb
test
in
test
fisubrl
hlt
and
mov
jl
fstl
shlb
adc
xor
stc
mov
decl
insl
pop
sbb
int
pop
jnp
push
fldt
out
mov
pop
jae
fstps
incl
jg
aas
icebp
add
adc
cld
jae
cmp
adc
cmp
adc
ljmp
push
lahf
paddsw
call
push
or
mov
xor
or
mov
jmp
outsl
cmp
mov
push
inc
pusha
jecxz
inc
mov
and
dec
jo
cmp
push
call
jb
mov
mov
inc
sub
mov
push
pop
cmpsl
sbb
jg
jnp
mov
pushl
pop
into
sub
pop
lahf
cmp
mov
inc
mov
movsl
jmp
push
mov
xchg
iret
std
push
jno
and
mov
dec
in
rcrb
repz
outsl
sub
dec
mulb
mov
lcall
and
imul
dec
ljmp
sub
or
jge
lahf
inc
sahf
add
in
pop
adc
pop
sti
insb
adc
mov
cmpsb
ljmp
in
fiaddl
pop
cmp
add
leave
mov
mov
pushl
add
iret
pop
xchg
push
xchg
cltd
sub
dec
mov
and
js
loope
cmp
jmp
fists
cmpsl
mov
push
xchg
cltd
bound
pop
ret
mov
xor
ret
dec
insl
rcrb
jl
imul
mov
addr16
pop
fstpt
xchg
orb
call
dec
push
test
fwait
lea
xor
popf
inc
cmpsl
or
shlb
sti
pop
xchg
inc
sbb
dec
xchg
xor
nop
loopne
icebp
loope
sbb
cs
cmp
idivl
icebp
jb
dec
popf
adc
pushl
imul
imul
loop
inc
les
jae
call
into
mov
fcomip
push
adc
add
movsl
mov
mov
sbb
xchg
imulb
jmp
hlt
lock
icebp
notl
push
jle
aad
cmp
and
push
push
into
fldenv
das
mov
cmp
loope
test
scas
push
mov
dec
sub
lods
invd
decl
addr16
mov
push
outsb
jae
mov
or
scas
out
sbb
data16
jp
mov
jmp
xor
mov
mov
lods
std
sub
push
sbb
into
xchg
je
daa
lret
lcall
pop
fimull
das
mov
js
mov
into
int
hlt
in
popa
xchg
jo
mov
hlt
adc
jae
add
ret
mov
mov
or
mov
div
testl
clc
sub
sbb
rcll
fisttpll
fistl
inc
call
rorb
std
mov
dec
js
mov
ja
cwtl
cltd
inc
mov
popa
cmp
movsl
ljmp
mov
in
ljmp
sub
divb
in
mov
sub
xor
xor
cmp
or
aad
cmp
incl
clc
insb
addr16
add
sbbb
in
dec
cmp
push
das
rcll
cmc
outsl
in
push
dec
stos
dec
add
ja
roll
dec
pusha
int
test
mov
movsl
push
pusha
mov
cmp
out
pop
mov
inc
add
sbb
dec
or
add
xchg
jmp
mov
in
jmp
popa
gs
push
jmp
sahf
sti
push
ds
adc
iret
insb
jp
xchg
shrl
imul
add
outsb
dec
cmp
mov
mov
xor
mov
mov
jg
popl
cmp
jns
testl
in
insb
test
test
jne
dec
insl
lock
jo
rorl
loopne
jle
outsl
or
aad
notl
cmpsl
fsubr
outsl
in
lcall
lret
or
into
lods
fiaddl
cmp
inc
mov
ja
push
clc
ljmp
icebp
sti
pop
out
ds
pop
insl
sbb
stos
bnd
fidivrl
sar
mov
cs
mov
xor
fnstcw
rcll
pop
test
addl
cmp
push
cmp
sahf
jmp
push
faddl
jne
sub
out
mov
movsb
xchg
icebp
xlat
fs
call
xor
popf
sbb
cmpsl
out
sbb
test
push
pop
sbb
or
test
jnp
mov
pop
or
inc
pop
inc
mov
lock
addb
jno
sbb
scas
sar
pushl
cwtl
mov
std
sub
out
pop
test
repz
pop
cs
jbe
clc
cmp
or
pushl
testl
mov
sub
sbb
in
xchg
repz
scas
or
jge
lahf
sbb
out
imul
push
dec
aad
xor
ret
mov
repnz
add
jmp
gs
inc
lret
int
pusha
xchg
pop
pushf
sub
into
cmp
mov
sub
fcomps
jmp
cmp
gs
pop
insb
pusha
popf
out
sbb
pop
cwtl
shll
decl
cmp
xor
jnp
lret
mov
fnsave
icebp
lret
sub
std
jae
sub
mov
pop
push
jmp
scas
dec
push
and
inc
adc
loope
movb
adc
jmp
cmp
insl
jnp
jmp
xchg
xchg
xor
xor
loopne
xchg
fdivs
fiadds
jmp
aas
ret
xor
ret
js
into
ds
mov
lea
add
call
lcall
add
ss
aaa
push
pop
push
mov
mov
jmp
inc
and
mov
pushl
mov
push
js
fisttpl
fs
cmp
lret
pop
push
shll
mov
das
adc
in
test
adc
idiv
jno
inc
mov
cs
rcll
or
hlt
je
add
jmp
cmp
sbb
xchg
sub
lcall
or
dec
sub
ja
and
dec
loop
mov
dec
inc
xchg
and
shrb
adcl
inc
cli
sbb
rclb
mov
fisttpl
jmp
mov
mov
mov
in
arpl
push
push
stc
mov
add
hlt
mov
inc
and
xor
aas
mov
add
add
add
mov
lock
ljmp
sti
sahf
sub
mov
cld
or
pop
lock
dec
imul
in
mov
sbbl
clc
andb
js
inc
lret
ljmp
shrl
test
ja
or
jmp
lret
lock
or
mov
ja
jmp
repnz
mov
xor
sar
lcall
xcrypt-cfb
cmpsl
and
dec
push
mov
jns
std
andb
mov
lds
and
incl
sbbb
xchg
xor
xchg
out
push
inc
mov
icebp
fidivl
xor
ljmp
call
mov
fisttpl
ret
aad
in
insl
pop
je
pop
jnp
inc
sbb
in
jbe
or
jmp
jmp
out
push
in
adc
add
call
mov
cmc
test
adc
negb
mov
cmp
dec
sub
mov
sti
adc
xchg
not
dec
or
pop
mov
icebp
out
cwtl
fdivl
ljmp
mov
dec
inc
xchg
sbb
arpl
mov
dec
jmp
mov
mov
xchg
jb
insb
push
pop
gs
hlt
jae
lods
jnp
in
sbb
inc
lcall
out
fbld
push
xchg
fcom
je
adcb
fcmovu
call
push
ds
addr16
das
and
les
mov
push
sub
jmp
push
pop
or
seta
repnz
test
cmp
jle
jecxz
xchg
decl
and
dec
test
into
mov
sub
out
inc
cltd
dec
mov
lcall
jb
hlt
or
clc
pop
mov
mov
test
or
inc
pop
sub
ret
out
jb
mov
sar
jmp
aas
fildll
outsl
xchg
lahf
adc
shrb
push
arpl
cmc
andl
inc
mov
incl
ja
pusha
movsl
movsl
dec
and
jo
jno
xor
addr16
jbe
xor
jecxz
test
and
lcall
test
jno
mov
push
bound
dec
adc
fistl
stos
and
dec
int
xor
in
jge
mov
xorb
push
cmp
inc
es
push
sti
and
fcomip
mov
pop
jo
and
cmc
pop
push
int
insl
pop
pop
aad
push
arpl
jmp
sub
cli
test
fstpt
jb
lods
mov
lret
xchg
bound
rorb
jbe
sub
dec
mov
fdivrp
test
inc
imul
andb
subl
push
ljmp
mov
mov
loop
cmpsb
lock
repz
call
xchg
stos
jecxz
mov
cmp
and
fisttps
or
stos
add
std
cli
mov
push
mov
call
xor
xchg
dec
sti
movsb
loopne
cmp
ja
clc
push
cltd
mov
pop
sub
ds
fiaddl
adc
inc
or
xchg
inc
inc
notb
jge
mov
pushf
push
push
cmp
mov
mov
xor
test
arpl
mov
push
enter
mov
mov
jg
xor
testb
push
dec
cwtl
scas
leave
sbbb
push
jo
dec
sbb
ds
lret
insb
lods
andb
mov
cs
mov
data16
stc
fistps
dec
push
push
imul
call
adc
jo
dec
std
inc
scas
add
scas
out
mov
hlt
xor
mov
dec
xor
icebp
mov
dec
daa
xor
ret
out
sub
or
sub
int3
sbb
mov
hlt
mov
mov
das
cmpsb
test
call
mov
mov
pusha
mov
cmp
adc
scas
mov
adc
push
push
mov
pcmpeqb
mov
sub
iret
imull
mov
cs
or
cmp
pop
xor
out
mov
and
dec
mov
pop
sub
movsl
dec
and
adc
insb
pop
sbb
xor
and
sub
fwait
subl
and
jae
es
pusha
lret
and
int3
push
fimuls
or
or
pop
lods
jae
push
sbb
js
imul
icebp
lods
fdivl
xchg
pop
inc
xchg
mov
lods
jae
leave
mov
rcl
xor
push
jo
rorl
repz
pop
cmpl
jne
cltd
mov
pop
shll
mov
or
adc
insl
sub
popf
arpl
gs
sub
push
gs
pop
neg
shll
das
pop
arpl
int
jnp
pop
inc
mov
dec
xchg
adc
imul
mov
leave
cmp
fstpt
sbb
cmpl
roll
pushl
lods
sub
or
roll
daa
fildll
mov
cmp
pop
push
ja
lahf
and
subl
push
mov
imul
scas
adc
imul
je
xor
cmp
mov
inc
fdivs
add
sub
outsl
pop
jmp
sub
nop
and
add
cmp
pop
lret
aas
and
pop
dec
jmp
mov
mov
sbb
pop
cmc
mov
cmp
nop
cmpsb
stos
enter
or
add
sub
out
lea
call
mov
push
int
push
rol
xor
mov
into
stos
ret
lcall
fwait
je
inc
mov
les
les
push
ja
mov
test
sbb
fdivr
call
jnp
push
test
jle
movsl
ss
inc
push
shll
sub
cmpsb
repnz
adc
add
incl
xor
mov
in
ret
cmp
iret
test
out
lret
push
fs
and
push
jecxz
sbb
call
cli
and
movl
push
jmp
cmpsb
lds
jns
push
fstl
cmpsb
icebp
shlb
jnp
pop
sbb
mov
xchg
ljmp
ds
fadds
jmp
jg
inc
and
pushf
lock
inc
sbb
push
xlat
xchg
push
incl
mov
mov
xchg
mov
and
lcall
add
decl
xor
mov
jns
das
ffree
flds
cmpb
ljmp
add
lcall
mov
repnz
sbb
andb
sub
data16
stc
inc
repnz
push
out
push
movsb
jp
ds
popa
jne
hlt
push
xor
dec
jg
ljmp
push
cmc
mov
call
xchg
xchg
or
or
mov
xchg
sbb
xchg
pop
push
pop
addr16
cmp
mov
ljmp
mov
gs
add
pushl
pusha
pop
outsl
scas
lds
mov
mov
fstpl
mov
sbb
ljmp
in
lods
inc
push
test
jl
mov
repz
dec
scas
xchg
ds
test
insb
cli
add
jmp
mov
pushf
std
addr16
out
fsts
jb
pusha
inc
int3
push
or
lea
insl
call
lods
iret
xlat
lock
sub
dec
jo
xchg
inc
leave
sahf
mov
fisubl
adc
sbb
inc
clc
js
ljmp
sahf
or
daa
enter
and
dec
icebp
rcrb
jno
sbb
mov
int3
and
decl
mov
dec
test
mov
je
push
icebp
jns
lcall
aad
in
dec
cwtl
add
pop
ja
mov
push
inc
sbb
push
inc
cld
mov
fimuls
movsb
mov
mov
fcoms
cld
stos
sbb
push
xor
movsl
xchg
repnz
ljmp
and
lret
je
sbb
fstpt
jge
push
sqrtps
jg
call
out
xchg
mov
daa
std
rcll
adc
ljmp
insl
rcrb
outsl
and
call
jg
and
and
mov
movsb
dec
mov
pop
inc
mov
out
in
out
lock
lcall
pop
adc
xlat
push
insb
scas
outsb
and
subw
in
dec
lret
inc
loopne
decl
shll
add
shlb
or
or
lds
arpl
cmp
cs
jg
pop
imul
mov
pop
ljmp
es
mov
ljmp
cmpsl
stos
test
mov
les
jmp
cmp
inc
fs
cmp
cwtl
dec
pop
insb
add
mov
loopne
push
or
xorb
dec
popf
pop
decl
iret
fidivrl
sbb
xorb
push
je
sarb
lcall
inc
imul
hlt
mov
subb
out
cmp
dec
cmpb
call
mov
call
aaa
aam
mov
jmp
mov
roll
decl
xor
clc
xchg
xor
sti
aas
sti
mov
mov
jnp
aas
mov
pop
loope
dec
stos
dec
repz
or
fucomip
ljmp
mov
jae
outsl
push
fidivrs
mov
mov
lret
imul
mov
lcall
mov
popa
test
je
lret
and
pop
les
dec
outsl
xchg
mov
ljmp
cmp
or
mov
mov
cltd
fildl
sub
popl
das
xor
incl
rcrb
push
jo
fs
repnz
lret
pop
scas
mov
fucomi
xlat
jmp
mov
mov
push
sub
xor
sub
fwait
mov
mov
call
fwait
shl
adc
or
in
pop
adcb
push
insb
mov
incl
adc
movsb
outsb
mov
mov
stos
insl
stc
int
fimuls
jae
dec
pop
cwtl
add
jo
sbb
dec
dec
aas
hlt
rorb
mov
inc
icebp
repnz
shufps
and
imul
push
sub
ret
stos
das
testb
jne
nop
push
add
push
xchg
mov
test
or
add
dec
sub
push
and
add
mov
ljmp
clc
cmpsl
and
hlt
shrb
jl
push
nop
in
mov
sbb
mov
inc
jp
sub
outsl
cmp
pop
popa
dec
mov
adc
mov
aad
test
into
xchg
ljmp
fistl
cmp
out
outsb
imul
mov
ds
sub
cmpsb
stos
and
mov
dec
pop
mov
jp
push
andb
jmp
cmp
cwtl
sbbb
out
mov
dec
dec
add
xor
leave
stos
in
outsb
or
lret
mov
test
pushf
ret
and
cs
shrl
data16
lret
in
andl
mov
pop
inc
or
sbb
les
dec
divl
mov
sahf
push
adc
xorb
pushl
push
or
insl
push
das
sub
mov
cmpb
mov
sbb
imul
mov
adc
dec
and
mov
dec
fdivrs
pop
sbb
in
jmp
jno
and
add
movsl
jne
push
ss
nop
cmp
dec
incl
inc
inc
cmp
pop
aad
sub
lret
inc
xor
loope
fcoms
hlt
aam
mov
add
mov
and
jecxz
mov
leave
addl
jmp
adcl
jb,pt
iret
add
sti
sub
das
aaa
loope
pop
or
aam
lock
pushl
sub
push
loopne
mov
jno
add
mov
mov
pop
inc
in
jmp
js
dec
pop
es
and
ja
sti
out
cmp
jnp
test
push
mov
dec
call
stos
sbb
fstpl
shrl
int3
jp
mov
out
ret
mov
pop
push
adc
jmp
sbb
adc
cmp
icebp
in
dec
pop
fistps
js
pop
loop
pushl
fwait
xchg
inc
inc
je
pop
sub
aad
push
negb
aas
sbb
test
mov
jns
pop
pop
xchg
mov
pop
cmpsl
fbstp
fistl
sbb
loope
mov
adc
pushl
inc
mov
outsb
push
mov
or
cmpsb
negl
cld
out
adc
fildl
cli
and
ljmp
rclb
dec
push
popa
js
shlb
sub
call
and
or
sbb
cmp
ret
imul
add
les
fmul
js
fst
jns
xor
stos
lcall
pop
and
cmp
stc
inc
add
in
add
xchg
in
iret
imul
insb
cmc
xor
and
out
inc
xorl
imul
xchg
call
out
ror
and
roll
in
push
add
outsl
ljmp
in
inc
xchg
imul
jmp
in
or
imul
pushl
mov
or
imul
lods
sub
jno
pusha
mov
adc
add
jmp
pop
add
ficomps
insl
fimull
push
imul
ds
jnp
ret
add
fists
sub
incl
push
ja
daa
add
cmp
in
addr16
adc
cmpsl
add
jbe
popa
rcrl
jnp
decl
insl
add
inc
lret
sub
jno
aas
cmp
loopw
outsl
sahf
add
imul
pop
xchg
add
jno
cmp
inc
xchg
xchg
mov
adc
arpl
or
add
out
dec
repz
cmp
lcall
orl
out
lods
or
aaa
push
addb
loope
or
xor
lock
in
cmp
into
cli
push
push
adc
fs
rcr
outsl
addl
cs
cs
iret
repz
jo
std
jnp
std
das
pop
mov
sbb
sub
out
add
add
jl,pt
mov
clc
addr16
negb
add
pusha
sbb
or
sbb
punpckhdq
add
jno
das
cmp
ds
mov
jmp
push
imul
cmovle
sbb
xor
add
pop
std
aaa
ret
incl
ja
or
mov
pusha
or
push
push
inc
jg
mov
repz
lods
jmp
pop
pop
dec
push
add
jecxz
xchg
incl
add
test
push
add
arpl
pop
pusha
mov
add
ret
push
mov
sbb
pop
push
push
sub
cli
adc
js
mulb
cmpb
cli
rolb
push
inc
sub
push
pop
cld
jg
data16
pusha
xor
inc
push
add
cmp
scas
adc
ret
sahf
addr16
adcb
inc
add
repz
outsl
dec
pop
or
push
bound
cmp
fildl
add
push
cmp
jg
insb
jg
add
pusha
jg
es
jne
out
call
add
in
add
add
cmp
mov
cmpsb
std
subl
imul
sbb
insb
mov
imul
inc
mov
or
adc
jb
in
call
test
dec
fmulp
jle
xchg
cmp
inc
repnz
jmp
test
stos
cmpsl
jo
mov
mov
out
mov
idiv
aaa
es
mov
int3
outsb
push
stc
inc
mov
ljmp
outsl
mov
xor
push
xchg
xchg
stos
aad
pop
or
adc
pushl
xchg
mov
mov
out
mov
or
push
push
mov
fnstcw
xchg
xchg
push
test
cmp
sub
sub
call
and
push
push
inc
in
loope
adc
mov
clc
lcall
call
lods
out
data16
mov
jmp
push
ficoms
out
jmp
push
add
jecxz
push
xchg
push
out
mov
pop
fcomps
test
dec
fabs
sub
popa
sub
stos
mov
jle
lcall
adc
sbb
test
sbb
push
or
add
cld
cmpsb
ljmp
pop
mov
cltd
sahf
inc
push
aaa
push
xor
xor
push
lret
neg
out
mov
mov
mov
loope
cmp
arpl
idiv
inc
add
or
imul
stos
test
mov
jmp
fisubrs
out
mov
sbb
mov
sub
cmpsb
outsl
pop
mov
aam
sahf
out
add
mov
mov
pop
lock
xor
insb
jo
jecxz
or
data16
lcall
and
je
ficompl
and
cmp
std
ficomps
sbb
dec
repz
adc
je
sub
xchg
cli
pop
push
sbb
out
mov
jo
decl
andl
andl
lcall
icebp
fwait
cltd
out
xchg
out
lods
jno
loope
adc
push
loope
sbbb
fistpll
hlt
pop
cld
aaa
cld
sbb
lods
add
cmp
xchg
mov
pop
mov
mov
stc
adc
inc
jmp
mov
test
in
out
fisttps
mov
test
inc
rorl
fildl
push
inc
outsb
xchg
add
out
dec
pop
add
sub
sbb
bnd
push
add
xchg
push
jl
loopne
subl
push
or
repz
pop
cmc
lcall
xchg
sbb
pop
lds
adc
pushf
lds
jno
loope
adc
decl
adc
sub
rcrb
xchg
jbe
addb
std
jbe
imul
jge
push
push
or
xchg
mov
mov
sahf
fisttps
cli
lahf
push
push
ror
jb
in
lock
push
outsl
ljmp
jle
das
cwtl
scas
mov
outsb
and
loop
push
test
ss
mov
xor
cmc
loope
rsqrtps
pop
sti
mov
clc
pop
lock
outsl
inc
mov
aaa
int3
mov
ret
add
incl
push
cmp
sub
subl
insb
lcall
push
jg
adc
dec
addb
sbb
xor
scas
negl
xor
sbbl
add
mov
mov
inc
out
rcr
jmp
dec
decl
ret
push
pop
xor
outsl
dec
insl
jp
dec
push
inc
inc
push
push
push
popa
ja
js
jno
push
xor
sar
jmp
push
dec
insl
pop
ss
jne
push
pop
arpl
push
jp
jns
pop
dec
xor
ljmp
add
dec
outsb
inc
popa
push
insl
inc
imul
js
push
popa
outsb
gs
inc
addr16
jne
inc
outsl
call
push
push
ss
dec
push
popa
dec
jne
inc
outsb
outsl
addr16
jo
inc
inc
xor
data16
ljmp
arpl
push
cmp
bound
pop
arpl
jb
jno
push
dec
push
inc
dec
insb
push
jp
dec
pushl
xor
outsb
push
push
ja
inc
inc
dec
push
jae
jns
outsl
fs
dec
dec
dec
inc
arpl
xor
outsl
mov
dec
dec
push
dec
ss
sbb
jno
arpl
push
cmp
push
push
xor
jg
push
dec
mov
inc
ss
push
aaa
data16
aaa
push
bound
je
xor
aad
ljmp
bound
inc
dec
aaa
jo
push
push
je
dec
inc
addr16
outsb
xor
aaa
inc
inc
insl
inc
stos
in
fstpt
js
xor
addr16
cld
inc
jb
jns
jne
push
push
mov
incl
lock
dec
pop
gs
jp
insb
inc
jbe
dec
push
xor
dec
or
popa
xchg
gs
push
jp
dec
push
dec
or
or
add
rclb
inc
dec
jb
push
lcall
jbe
bound
jne
js
aaa
push
push
adcb
push
adc
jno
inc
push
addr16
jns
insb
inc
push
data16
std
pushl
push
jbe
popa
inc
jno
xor
data16
jae
jo
add
inc
push
push
je
je
mov
xor
or
outsb
adc
xchg
add
pop
ss
fs
and
cwtl
add
test
pop
mov
add
iret
mov
add
xchg
pcmpeqd
cmpl
nop
out
xor
push
out
jns
in
push
fcompl
or
add
sub
test
movsb
adc
jmp
nop
mov
in
dec
in
sahf
inc
jecxz
jo
pop
sarb
jge
outsl
mov
cmp
and
ja
inc
sub
addr16
mov
jbe
push
or
push
mov
adc
ss
inc
push
adc
adc
stc
int
mov
sbb
sbb
sbb
jbe
dec
divl
mov
xor
inc
mov
int
sti
fisubrl
jno
jle
xor
loop
idiv
sarl
loopne
inc
xor
ret
xchg
dec
dec
jbe
pop
subl
decl
push
xchg
adc
lcall
push
fucomip
jg
std
out
idivb
daa
out
dec
test
dec
push
popf
inc
test
pop
shl
fidivrl
jnp
js
rolb
pop
sti
jbe
adc
cs
adc
push
xchg
cvtps2pi
leave
push
in
roll
roll
lds
inc
fisttpll
inc
inc
repz
push
sbb
adc
cmpsl
dec
jo
or
xor
cs
pop
or
dec
jbe
pop
xchg
loop
xlat
inc
mull
and
inc
enter
xbegin
mov
pushf
pop
test
outsl
insb
popa
push
cmp
outsl
and
addr16
push
inc
adc
es
jb
push
pop
xor
loopne
or
aas
leave
mov
sub
push
push
push
mov
xchg
jo
data16
ss
icebp
sarl
add
mov
int
dec
mov
jmp
pushl
popa
ds
jns
test
jbe
fistl
lret
inc
je
sti
fiaddl
das
jge
insb
mov
jb
out
jmp
call
int
std
or
into
loope
jbe
push
jae
loop
out
xor
mov
icebp
dec
push
scas
ds
fwait
dec
mov
mov
lds
in
imul
out
imul
gs
xor
cs
insb
pop
inc
sbb
gs
push
jb
je
arpl
push
arpl
outsl
outsb
cs
gs
jbe
fstpt
outsb
pop
jb
dec
outsb
and
imul
push
imul
gs
insl
insl
outsl
arpl
or
pop
xor
push
jo
xor
inc
outsl
jne
pop
push
jne
mov
push
push
outsw
jb
popa
outsb
arpl
sbb
fsubr
out
mov
adc
sbb
jb
cmp
rcll
dec
fs
push
mov
jbe
mov
cs
ds
ja
rcrl
push
imul
popa
jb
outsl
dec
jne
mov
jns
sub
mov
sub
sub
movsb
mov
add
fildl
pop
arpl
sbb
pusha
rcr
jb
jns
js
push
dec
rcll
cmc
and
jo
insl
mov
add
inc
and
cmp
fs
jae
pop
imul
imul
hlt
gs
push
or
sub
imul
mov
sbb
inc
inc
mov
shl
pop
outsl
insl
mov
jae
sub
dec
sbb
fs
jb
ret
test
inc
bound
xor
inc
orl
call
push
outsb
push
jae
cmp
out
fbstp
xchg
and
dec
data16
push
je
sbb
ja
pop
cmp
popa
imul
adc
jne
pop
pop
push
adc
push
jns
or
loopne
xchg
cmpsb
jbe
xchg
adc
push
bound
dec
gs
pop
jb
jae
pop
jg
cmp
popa
addr16
outsl
mov
gs
push
inc
jbe
sub
fmuls
add
jecxz
dec
movsb
outsb
mov
loopne
adc
add
popa
jne
jg
xchg
pop
cmp
jns
sbb
pop
pop
lds
fwait
cmp
sub
cmp
or
stos
imul
out
sub
mov
mov
push
lcall
push
insb
push
dec
bound
scas
shl
fs
push
ret
loop
jo
cmpsb
sub
sbb
dec
scas
sbb
push
cmp
lret
out
push
imul
neg
roll
adc
sub
and
xchg
movsl
add
mov
test
fnstsw
mov
adc
push
faddl
adc
insb
push
sbb
and
bound
xor
pop
jl
sahf
jae
mov
sub
rolb
xchg
in
jbe
test
imull
int
jo
daa
push
notl
inc
push
das
adc
frstor
ljmp
in
ret
xor
push
dec
inc
mov
mov
les
inc
jo
loop
push
sbb
xchg
or
add
inc
add
jecxz
cwtl
inc
xorl
rcrb
add
cmp
inc
xor
or
add
lock
sbb
sti
xor
dec
push
xor
inc
imul
or
mov
js
shll
add
fmull
xchg
popa
cmpsb
int3
idivl
pop
push
or
mov
jo
xorl
xchg
ret
adc
or
js
jo
imul
fbstp
or
inc
inc
cmpsl
push
shl
adc
adc
daa
andl
insl
dec
out
pushf
je
jo
in
cmpsl
incl
jne
push
or
push
or
push
popa
sbb
out
fsubrs
adc
sbb
fcomps
ss
popa
inc
add
adc
lret
xlat
mov
fdivrp
adc
enter
sub
mov
push
and
add
mov
push
addl
test
test
decl
inc
xorl
and
adc
inc
push
add
add
and
add
incl
push
and
add
subl
mov
inc
cmp
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
inc
enter
xor
mov
loopne
cmp
fidivrs
hlt
cld
adc
push
xor
out
sahf
out
fs
cwtl
out
idivb
add
ljmp
jo
and
inc
push
fs
repz
lods
mov
iret
testb
sbb
cmp
out
sahf
dec
pop
test
out
lret
cld
jno
jb
out
fiadds
inc
push
mov
aam
hlt
push
jae
out
faddp
push
ds
jbe
scas
xor
out
aam
negb
inc
repz
repz
out
ds
call
inc
sahf
out
sahf
data16
iret
sarl
push
inc
push
data16
repz
lcall
loop
sbb
cmp
out
sahf
bound
cmp
sarl
push
cmp
cmp
repz
adcb
iret
ljmp
jns
push
data16
out
out
push
jp
sub
cmp
repz
pusha
jo
iret
repz
xchg
mov
sahf
out
lcall
out
out
fdivp
push
jl
push
bound
subb
out
in
cld
push
jge
inc
repz
rep
jle
lret
jns
out
jle
and
fsubp
jns
adcb
jg
jns
ja
and
push
out
sahf
nop
mov
out
js
sahf
out
sahf
es
pop
outsb
adcb
mov
ljmp
ss
pop
push
iret
repz
mov
cmp
mov
pop
push
iret
repz
mov
or
out
lcall
sahf
out
out
cwtl
push
stos
push
fdivp
cli
cmp
sarl
cs
push
fs
repz
lcall
enter
test
sahf
out
sahf
sbb
dec
bound
out
jle
mov
sahf
out
shr
idivb
push
and
repz
ss
pop
fs
rep
js
movsb
mov
sti
cmp
ror
incb
iret
repz
cmp
push
pop
fs
repz
jle
lcall
cmp
cld
push
mov
sub
out
inc
pop
jo
mov
jns
out
test
aam
iret
repz
clc
add
cmp
repz
jle
xchg
pushf
repz
repz
mov
jns
iret
lock
out
sahf
cmp
jb
jns
out
sahf
mov
cmp
out
add
repz
dec
fs
stos
les
fcomip
cmp
lock
pop
adc
push
iret
repz
cmp
data16
cmp
repz
sahf
test
fsubr
cmp
sti
out
jle
mov
repz
fs
stos
stc
cmp
repz
fdiv
add
out
sahf
cmpsl
push
sub
push
sahf
out
sahf
jo
xchg
sahf
test
cmp
out
fsubr
or
iret
repz
jb
xchg
iret
repz
mov
cli
sahf
out
ds
push
sub
dec
jns
out
push
pusha
jb
xchg
out
sahf
out
mov
sahf
ja
cli
adc
jle
xor
out
sahf
out
orb
sahf
enter
fdiv
cmp
roll
sbb
dec
pop
iret
repz
je
mov
cmpsl
stc
cmp
add
sahf
out
inc
pop
data16
or
add
dec
and
push
add
inc
push
lcall
jg
incl
stos
jne
cli
jmp
pop
arpl
or
adc
and
popf
in
jae
lcall
mov
jnp
scas
cmp
mov
sub
xchg
sbb
fldenv
cltd
call
int3
and
aaa
out
jmp
in
sub
sbb
sbb
pop
push
sahf
cwtl
mov
push
fldl
jmp
sbb
popf
inc
mov
fistps
cmpsl
push
adc
fistl
add
int
dec
jmp
jne
xchg
push
push
lret
fisubrs
adc
cmp
orb
pop
mov
mov
jnp
pushl
or
adc
andb
ret
fmull
stc
fs
inc
and
lock
rol
push
jecxz
or
imul
xchg
test
or
or
jb
mov
mov
incl
cld
pop
mov
cmp
and
shll
jno
xor
loop
jae
push
out
pop
inc
insb
lock
push
xchg
xor
mov
xchg
iret
mov
and
call
out
out
test
xor
xlat
jo
imul
inc
inc
jg
dec
iret
jmp
ljmp
sub
push
and
mov
xor
dec
and
sbb
add
call
sahf
pop
and
out
cmpsb
xchg
adc
add
cld
repz
dec
jns
adc
fcoml
xchg
adc
lcall
out
mov
sti
fdivl
xchg
xchg
sti
es
jns
or
out
dec
pop
xchg
outsl
incl
lret
xor
into
push
bound
inc
adc
inc
mov
lret
in
shrb
cld
pushf
inc
inc
sbb
mov
cmp
cmp
subl
ficomps
test
enter
mov
inc
cmp
push
xchg
into
jge
add
std
aad
imul
outsl
out
push
mov
jb
xor
aas
ljmp
enter
jbe
sarb
imul
inc
call
dec
gs
loopne
loopne
incb
out
dec
lock
and
scas
push
sub
orb
and
call
and
insl
stos
movsl
push
dec
pop
sbb
aaa
rcrl
dec
lahf
jg
hlt
fcmove
pop
sub
sarl
outsb
popf
sub
xchg
loope
fistps
adc
xor
adc
jmp
movsb
push
mov
rcll
push
or
dec
dec
lds
pusha
iret
bound
in
decl
repnz
mov
and
int
rorl
inc
adc
cmpb
lods
pop
out
clc
fcmovnu
cmp
dec
inc
test
leave
les
adc
cmp
jmp
mov
and
add
lahf
xor
std
xor
mov
jmp
jb
int
mov
jnp
imulb
inc
aaa
sahf
pop
lret
xchg
push
xor
call
aad
out
insl
sbb
scas
push
lahf
out
popf
or
add
lods
popf
mov
and
in
call
outsb
fcmovu
mov
pop
mov
ja
jns
loopne
lret
add
fcomps
repnz
sbb
lcall
pop
lods
push
test
sub
mov
je
cmp
in
movsb
xchg
adc
push
sbb
std
ficoms
stos
dec
xchg
and
iret
aad
mov
ret
dec
or
adc
sbb
fnstenv
pop
hlt
incl
jb
mov
rcrl
or
roll
lock
lcall
pop
inc
dec
inc
jb
repz
jp
or
insl
inc
mov
in
mov
call
mov
lea
cmp
and
jl
aad
repz
cmp
mov
ljmp
dec
idivl
test
xor
adc
out
pop
xchg
xor
repnz
cmpsb
jmp
xor
fsubrl
mov
out
clc
sbb
xor
or
mulb
in
imul
adc
call
and
mov
scas
mov
mov
and
cmp
arpl
test
cmpsl
fnstcw
loopne
and
and
jmp
cli
mov
inc
lcall
das
jle
mov
adc
ret
fcoms
mov
popf
jecxz
pop
or
jmp
fisubrs
pushf
fimuls
insb
inc
xchg
jge
lock
enter
fistpll
push
inc
xchg
ljmp
cli
imul
sbb
xor
test
cld
or
push
mov
adc
pushl
dec
popa
cmp
test
sub
int
je
add
inc
ret
xor
incl
xor
loope
scas
inc
insl
inc
fisubs
sbb
mov
and
ret
push
sarb
xchg
mov
cmp
imul
jge
dec
std
pushl
sbb
xor
push
jge
ss
in
test
outsb
idiv
inc
xchg
sub
inc
add
mov
repnz
push
add
outsb
test
lods
stos
cli
jae
out
and
pop
das
jo
outsl
mov
push
clc
in
inc
repnz
and
out
fimull
cwtl
out
aaa
add
adc
jmp
jo
sbb
xor
or
aad
push
test
popf
add
dec
pop
cmp
call
mov
or
xchg
cwtl
outsb
add
jmp
mov
sbb
mov
mov
push
or
fmuls
out
inc
test
int
pop
je
push
decl
xor
orl
in
ret
push
imul
mov
cmpsb
push
xorl
cmp
and
pushl
std
mov
jnp
adcb
and
lcall
cmp
int
xchg
push
jne
sar
pushl
icebp
adc
nop
jle
ljmp
inc
pop
or
jb
mov
mov
incl
cmc
push
shrb
movsl
ret
push
push
rcr
stos
and
dec
out
popf
xchg
repz
mov
add
lods
push
pushl
xchg
and
test
xchg
mov
inc
and
fsubrl
incl
pop
and
insb
mov
cmc
fdivrp
punpcklwd
sbb
out
jae
outsb
pushf
xchg
lcall
inc
add
xor
xchg
fbstp
adc
scas
push
xchg
in
xchg
call
call
pop
aam
add
adc
dec
jno
shrb
adc
lret
call
mov
loop
subl
rorl
mov
mov
mov
mov
cmp
data16
mov
stc
inc
pop
pushl
jns
pminsw
dec
rcrb
jae
cmp
call
fidivrl
sub
mov
fndisi(8087
xor
test
jne
inc
mov
call
std
nop
push
fnstcw
sbb
cmp
call
cld
jmp
pop
dec
sub
mov
movsb
out
inc
in
cltd
repnz
jns
or
lcall
nop
sbb
iret
pop
pop
out
test
mov
mov
jmp
ds
cmp
cmpsl
xchg
test
pop
pop
dec
ret
jecxz
nop
lcall
xchg
jp
mov
loop
cwtl
insb
outsl
xchg
xchg
into
cmc
lcall
popf
or
std
fstps
mov
jnp
test
xor
insl
ret
add
ljmp
sub
jnp
push
out
in
mov
int3
cltd
jns
xor
decl
aas
sub
mov
mov
jmp
aam
ss
pop
jge
push
lds
decl
repnz
ss
push
out
mov
mov
add
loop
test
clc
pushl
cmp
mov
arpl
xlat
out
pop
push
inc
sub
addr16
inc
jo
pop
sar
loope
xchg
bound
mov
outsb
adc
push
lahf
sahf
fnsave
ljmp
cltd
sarb
add
fstl
pushl
lret
adc
js
xchg
adc
shll
push
nop
adc
sbb
inc
adcb
ljmp
or
cmp
cmp
leave
cmp
push
or
fcmovu
dec
cmp
lock
pushl
loope
jmp
mov
rolb
test
push
push
xchg
mov
stos
cmp
das
js
rcrl
fdivrl
dec
cmp
popf
mov
mov
xor
pop
scas
xchg
ja
addr16
lock
xor
call
dec
aas
mov
xor
add
les
pushf
negb
mov
jmp
add
push
push
cwtl
imul
cmpsl
or
xor
and
dec
in
movsl
sbb
aad
fs
sbb
fxch
pop
cli
pop
jno
inc
push
lcall
sub
icebp
fwait
shll
out
push
inc
inc
cmp
mov
push
js
push
inc
shrl
leave
in
int3
sti
mov
jno
fidivs
jmp
add
stc
out
adc
mov
jmp
lea
jge
cmp
enter
push
jmp
mov
push
cmc
xor
xor
stos
push
iret
stos
clc
xchg
je
inc
das
bound
jle
xchg
out
lods
sqrtps
sub
int3
mov
xor
mov
jbe
jecxz
call
in
fsubrp
xor
lock
into
pushf
js
sbb
call
xchg
mov
pushl
lcall
scas
das
jmp
out
jle
or
leave
mov
arpl
and
add
and
ficompl
sbb
shll
sbb
mov
loope
or
call
jo
dec
outsb
push
popf
orl
mov
jnp
xchg
cwtl
pop
test
mov
rcrb
mov
xor
std
and
push
stc
push
jmp
mov
and
mov
add
push
loope
push
jb
ss
adc
push
cld
jg
lock
pusha
stos
xor
sub
icebp
dec
xchg
aaa
test
pop
xor
inc
inc
aam
pushl
add
sbb
mov
gs
sbb
and
inc
call
insl
dec
xchg
xchg
imul
ljmp
sbb
xorl
lret
pop
movsb
jp
mov
addr16
loopnew
cmpsb
mov
ljmp
sub
test
outsl
pusha
push
pusha
mov
or
subl
jno
incl
orl
xchg
ja
xor
mov
clc
gs
ss
loope
and
call
dec
popa
fistpll
inc
and
mov
scas
dec
popf
pusha
xchg
and
incl
outsl
jge
loop
int
enter
cmc
and
push
mov
les
inc
cltd
add
xchg
ds
mov
jns
jo
mov
lea
decl
pop
dec
orl
ret
pop
out
sub
dec
adc
insl
xchg
loope
xchg
mov
push
incl
cwtl
inc
mov
xor
mov
shrb
mov
icebp
mov
pop
and
cmc
outsb
mov
call
and
ja
push
xchg
add
jae
xor
cmp
mov
add
stos
jecxz
setl
fcomip
in
and
pop
jo
lret
lahf
jb
cwtl
mov
pop
loopne
pusha
and
pop
in
push
jge
mov
leave
lahf
sar
adcb
mov
ret
xchg
or
jg
jmp
mov
pop
pop
pop
enter
je
cli
scas
stc
sub
popf
insw
js
in
lea
jge
mov
mov
lea
inc
ds
movsl
jmp
jno
cltd
inc
mov
lock
fcomps
std
subl
or
imul
in
pop
pop
sarl
andb
dec
or
adc
push
jae
cmpsb
mov
out
jecxz
cli
lcall
cmp
mov
jns
lret
mov
dec
push
mov
push
decl
sbb
orb
mov
dec
mov
shlb
xchg
sub
mov
cli
ret
mov
das
hlt
mov
jge
xchg
or
push
ljmp
shrb
mov
cltd
push
fcmovne
inc
mov
cld
aaa
push
movsb
pusha
xchg
mov
gs
filds
shlb
ja
pop
jp
out
ret
push
push
rorl
mov
fwait
cmpb
pop
fsubrs
jmp
outsl
sarl
xchg
popf
mov
data16
cmp
xor
mov
push
shll
lods
push
ja
aad
sahf
rcrl
jb
mov
cs
stc
outsb
sahf
lret
and
arpl
outsl
mov
cwtl
ljmp
xor
mov
jbe
shlb
mov
repz
subb
jmp
inc
mov
lret
and
pop
jbe
in
std
or
push
jmp
mov
sbb
dec
pushf
xchg
jmp
sti
push
rcrb
dec
das
inc
mov
sbb
xchg
fisubrl
jmp
jno
lahf
mov
sub
insb
aad
sbb
add
mov
push
movsb
pop
or
adc
aaa
enter
sbb
pop
das
cltd
faddl
fstl
fcomip
frstpm(287
jno
adc
into
adc
pop
jge
arpl
imul
lcall
xchg
std
push
push
or
mov
cmp
cmp
mov
cmpsb
push
fnstenv
push
test
call
dec
or
cmc
jns
cmpsl
cs
repz
push
inc
or
jg
sbb
and
pop
jno
mov
test
lcall
pop
ud0
jmp
xor
popl
loop
enter
mov
stc
pop
aas
outsl
inc
insb
cwtl
fsubp
sbb
decl
js
add
sub
stc
adc
test
test
xchg
enter
clc
jmp
add
lahf
js
neg
shlb
insl
scas
adc
mov
jg
idivl
dec
ljmp
lret
or
ss
adc
adc
dec
flds
inc
mov
movl
sub
mov
cmpsl
mov
mov
decl
sbb
cli
cmp
sub
pop
sub
mov
mov
sarl
int
ffree
jae
add
addr16
rcll
mov
pop
aaa
fisttpll
movsl
or
sub
cmp
rclb
dec
jecxz
cmc
int
std
bound
dec
shl
push
cltd
inc
insb
int
into
xchg
push
adc
xchg
test
push
or
lret
decl
and
sub
call
ss
out
sbb
jp
incl
jecxz
loope
imul
fistps
gs
nop
cltd
adc
push
fiadds
mov
ss
insb
and
jecxz
test
sarl
pop
or
push
les
hlt
repnz
shll
call
sbb
out
imul
dec
add
insb
lea
sbbl
daa
call
data16
xchg
xchg
fcmovu
out
pop
push
sub
mov
es
push
lret
pop
stc
mov
lds
imul
decl
fstl
add
sahf
add
jge
fwait
ret
mov
mov
subl
dec
xlat
movsl
dec
stos
inc
out
sbb
sbb
sti
pop
arpl
fs
stos
aad
push
in
add
inc
adc
fnsave
pop
push
mov
cmp
movsl
jp
inc
cmc
sub
inc
test
sbb
inc
test
mov
mov
aam
loope
mov
decl
hlt
xchg
jg
mov
js
addb
std
xor
movsl
in
cmpsb
cmp
jmp
popf
das
pop
sbb
cmp
xorl
dec
test
daa
icebp
xchg
push
test
fwait
cmc
incl
in
ljmp
in
xchg
dec
outsl
lds
mov
and
mov
int3
jge
ds
std
call
ljmp
push
push
fcmovbe
pop
inc
add
hlt
fisttps
xchg
out
mov
ret
pop
jae
jge
cld
cld
call
test
xorl
imul
push
loope
ljmp
aam
pop
rcrb
call
sub
xchg
sbb
push
mov
xchg
add
adc
inc
add
xchg
mov
xor
lret
es
dec
stos
cmpsl
mov
sub
enter
dec
jl
jo
mov
jmp
notb
cli
xchg
sbb
inc
in
jne
sbbl
add
push
mov
lcall
fdivrs
add
jae
daa
lcall
fadds
test
dec
stos
jae
lock
cld
fsubrs
sbb
addr16
stos
sub
sahf
push
addb
mov
clc
and
mov
mov
push
out
push
leave
aaa
cli
fmull
sub
int
into
lret
jb
push
decl
in
sub
pushf
in
xchg
fcompl
mov
push
mov
inc
cmp
cmp
nop
xor
das
insb
push
or
rcll
dec
or
inc
test
pushl
loope
loop
insl
sbb
pop
in
movsl
xlat
orl
inc
or
sub
mov
test
jmp
and
nop
cmpsb
push
or
aam
inc
mov
jl
pop
cvtpi2ps
arpl
repz
dec
mov
insl
jp
xchg
xchg
push
movsb
add
mov
cmp
ljmp
xor
fwait
mov
xchg
repz
call
stos
pusha
clc
sbb
xchg
jge
negl
push
and
mov
leave
mov
cmp
daa
sub
scas
adc
pop
or
pop
fs
lret
cld
or
or
arpl
push
dec
loop
fwait
mov
add
movsb
loop
pop
push
sar
jg
jmp
lahf
test
filds
sbb
lods
mov
fcomip
js
xchg
arpl
arpl
stos
sbb
fmuls
xlat
and
or
aam
and
decl
inc
cmp
cmp
mov
scas
aad
push
ficomps
pop
push
pushf
inc
out
mov
das
jae
pushl
fsub
or
inc
mov
and
pop
push
fs
and
or
push
je
pop
movsl
cmp
incl
ret
cs
push
mov
mov
shrb
dec
jle
nop
icebp
ret
jnp
jl
loopne
call
push
xchg
mov
push
shll
xor
xor
mov
jle
aas
cmp
mov
sbb
and
ret
rcrb
mov
ret
dec
dec
fisttpll
hlt
sub
jg
adc
or
pop
mov
add
leave
push
push
xchg
jbe
aad
cmpsl
and
adc
call
push
pop
adc
scas
xor
test
xlat
call
push
inc
adc
push
xchg
and
out
not
dec
incl
or
dec
enter
push
aaa
test
test
mov
push
daa
test
je
fst
or
push
add
mov
lods
and
addr16
jecxz
inc
and
inc
jle
fcomip
call
jns
xor
mov
mov
push
mov
daa
jbe
ja
push
test
inc
fmull
mov
cmp
je
faddl
movd
out
inc
lds
test
call
jae
mov
jmp
cmp
mov
les
test
in
in
push
cmp
pushf
in
stos
cmp
push
add
jmp
xchg
xor
rcr
dec
aaa
inc
mov
ljmp
scas
loop
sti
out
mov
jnp
or
ficoms
mov
or
aas
adc
ret
rorb
or
or
fisubrs
incl
push
jp
and
jp
in
and
fstpt
es
mov
decl
clc
jp
xor
ret
mulb
push
push
das
jl
mov
push
xchg
scas
rorb
lcall
jne
jns
sbb
cmp
jno
add
mov
dec
mov
sbb
mov
pop
ljmp
enter
and
mov
cmp
mov
stc
or
pop
sbb
imul
push
fists
xor
lahf
adc
xor
and
push
insl
mov
insb
cmc
sub
lcall
mov
xor
pop
xchg
cmp
pop
insb
fldl2t
daa
sti
cmp
pop
xchg
out
hlt
dec
incl
js
mov
shll
sbb
fildl
outsb
push
sbbl
pop
fstl
cli
ljmp
inc
jle
xor
pop
lods
mov
test
add
add
cmc
inc
sti
mov
ds
rolb
dec
xchg
sbb
lahf
fcompl
or
call
outsb
fadds
fidivs
inc
sahf
mov
sahf
sub
lods
and
fists
incl
mov
icebp
cmp
and
inc
add
sub
outsl
out
imul
pop
xchg
addr16
mov
adc
dec
sub
cmp
mov
fs
imul
in
inc
mov
mov
pop
in
inc
addl
xor
aad
push
mov
adc
pop
icebp
incl
lea
mov
xor
pop
jecxz
sbb
ja
xchg
in
jno
pop
sub
mov
add
pop
jne
mov
lcall
fisttpll
push
mov
inc
push
fists
or
rcrl
inc
jmp
gs
jns
jae
mov
mov
subl
fldln2
testl
incl
faddl
cwtl
test
arpl
iret
fstps
test
sahf
sub
bound
ljmp
fstpt
out
mov
rcll
je
fistl
jns
and
adc
add
xor
push
call
cmpsl
sbb
je
rorb
sti
push
or
ret
test
sub
ds
ret
push
cmp
sbb
out
pop
fs
jbe
andb
nop
dec
ljmp
clc
decl
lods
jne
pop
or
int3
mov
or
dec
inc
call
xchg
fisttpl
pop
xchg
sbb
es
cwtl
pop
sbb
sub
and
jg
callw
jbe
ret
jb
stos
xor
rorb
mov
sub
push
jmp
loope
cmpsb
psraw
mov
js
push
fisttps
scas
in
call
mov
decl
cmpsb
loopne
pusha
sbb
xchg
lahf
call
cmp
aaa
push
pop
outsb
jae
in
cmc
ljmp
jmp
jle
xchg
or
xchg
cltd
or
lahf
loopne,pn
mov
sub
mov
lcall
in
inc
lock
xchg
xchg
jb
mov
or
and
xchg
sub
pop
cld
fcomip
push
out
andb
pop
sbb
fbld
inc
cmp
out
dec
lea
incl
scas
xor
mov
xchg
gs
dec
mov
stos
je
fisttpll
out
pusha
jb
cld
decl
pop
mov
popf
cmc
nop
jp
fildll
out
xchg
xchg
xor
cmp
decl
in
xchg
lcall
ret
jmp
inc
mov
sub
adc
add
xlat
bound
mov
lret
jb
imul
enter
scas
sar
icebp
ja
lds
cmp
or
push
shll
cmp
repz
js
idiv
or
in
jg
call
lds
and
mov
out
inc
pop
test
das
std
idivb
imul
sub
ljmp
mov
out
repnz
fnstcw
pop
push
roll
cmp
and
xchg
fwait
in
int
dec
dec
insb
inc
pop
loopne
adc
enter
pusha
outsl
cmp
xchg
in
icebp
sbb
adc
mov
data16
mov
mov
aas
stc
mov
leave
lcall
jo
dec
jo
mov
cmp
sti
pop
xor
hlt
adcl
and
test
mov
pop
adc
cwtl
sbb
lods
int
jbe
xor
sbb
std
int3
xchg
ljmp
out
mov
sub
test
pop
jp
loop
push
into
mov
call
mov
jmp
and
incb
xor
sbb
push
movsl
sbb
mov
sbbb
mov
pop
dec
mov
outsl
jge
lret
and
jl
add
test
pop
arpl
push
in
mov
mov
cltd
loope
loop
sahf
imul
sub
dec
pop
or
cs
jg
pushl
inc
movsl
lds
pop
or
xchg
xchg
mov
fwait
pop
cmp
stos
int
mov
lcall
out
test
clc
or
ret
dec
push
mov
sahf
ud2
jnp
push
jmp
cmpsl
pop
incl
mov
sbb
in
in
and
loop
movsb
in
lret
add
inc
sbb
insb
mov
push
andb
mov
pop
mov
sbb
mov
out
cmpb
daa
mov
pop
lds
int3
adc
loop
lcall
cmp
dec
add
pushf
clc
jnp
push
push
push
sbb
repz
cmp
push
mov
pop
pop
adc
addr16
mov
mov
adc
mov
test
pushl
mov
cmovo
iret
dec
lods
inc
pop
adc
iret
lds
insb
pop
std
mov
hlt
call
sbb
lods
and
imul
sub
pop
cmp
scas
das
sbb
pop
sub
push
mov
repz
jg
loope
mov
pop
cli
mov
les
xchg
inc
xlat
scas
lcall
pop
mov
xchg
xchg
idivb
xor
lock
mov
fs
xor
push
sti
lods
lods
fs
jecxz
shlb
mov
ljmp
jecxz
fldz
mov
cmp
mov
je
mov
mov
cmp
sbb
ds
scas
cmpsl
sti
mov
dec
movb
clc
scas
rorl
in
cmpsl
or
pop
push
clc
sbb
jmp
hlt
mov
outsl
daa
push
dec
mov
pop
cmpl
arpl
incl
mov
fwait
jmp
cmc
cmp
fnstenv
cmp
jbe
sbb
ljmp
orl
push
push
repz
jne
scas
pop
push
out
je
add
jns
cmp
lahf
notl
ljmp
subb
dec
int3
push
dec
out
imul
lret
decl
lock
xchg
sub
mov
inc
aam
sahf
jns
scas
jo
mov
call
add
add
xchg
or
sub
loope
fnstenv
cwtl
and
lock
ljmp
mov
sahf
stos
pop
movsl
xchg
inc
js
mov
enter
cli
fbld
sub
and
hlt
and
xchg
repz
mov
cmp
ljmp
int3
jp
xchg
add
les
push
cmpsl
rcrb
dec
repnz
sbb
aad
mov
incl
cld
or
mov
call
sahf
scas
loope
jne
add
mov
ret
enter
mov
jbe
pop
xchg
js
xor
stos
jnp
jge
jmp
inc
cld
pusha
lret
enter
xchg
scas
call
add
sub
sub
das
stos
popa
fldl
dec
ror
pop
nop
lock
inc
lcall
lcall
pop
cmp
push
in
subb
pop
jge
shlb
jmp
adc
lahf
call
fisubl
cli
out
call
adc
pop
enter
mov
sbb
repz
aas
mov
jg
or
and
aaa
xchg
push
mov
jecxz
inc
mov
jae
decl
cmp
push
mov
sub
mov
mov
mov
mulb
movsl
sub
daa
sar
jmp
stos
js
arpl
rcrb
push
jmp
subl
xchg
loopne
mov
adc
inc
outsl
call
pop
idivb
cmp
mov
test
jle
in
or
scas
push
cltd
jge
pop
cmp
adc
inc
mov
dec
mov
pop
cmp
testl
mov
insl
pop
dec
in
xchg
add
xorl
cs
adc
mov
jp
mov
jg
mov
aas
sub
cmpsl
jae
xor
call
jo
enter
jns
mov
mov
sbb
cltd
into
ljmp
in
sbb
decl
es
mov
push
dec
fistl
jne
cltd
xor
adc
jno
lcall
ret
mov
cmp
loop
sbb
xchg
pushf
icebp
mov
clc
inc
decl
movsl
mov
xchg
dec
xor
cmpsb
pop
loopne
sub
imul
jg
lcall
mov
mov
aad
xchg
mov
pop
fisubrs
dec
stos
jmp
sub
js
test
hlt
or
push
and
cld
and
incl
sub
mov
pop
aas
arpl
push
pop
sub
and
adc
lock
stc
jmp
jge
inc
cmpsb
push
jae
iret
mov
add
mov
sbb
je
dec
cmpsb
mov
jg
sbb
inc
ret
fcomp
jl
lea
fists
icebp
mov
dec
add
inc
cmpsb
cld
jo
mov
push
pop
pop
pushf
ljmp
pushl
lcall
std
paddw
sub
jl
xchg
bound
je
imul
dec
lods
xchg
adc
pop
repnz
jle
sbb
fisttpl
mov
add
pop
test
js
push
stos
mov
out
jae
and
rcll
pop
hlt
incl
push
sbb
jno
push
mov
pop
cmpl
xor
add
jmp
dec
jl
lcall
xchg
adc
adc
sbb
lahf
movsb
push
test
std
out
mov
fbstp
dec
into
ljmp
cmp
cltd
inc
movsb
or
mov
mov
mov
push
rorl
aaa
lods
cmpsb
ret
or
clc
jl,pn
outsl
fadd
ljmp
and
add
xlat
or
loop
sub
aam
push
adc
xchg
pop
cmpsl
insl
jbe
decl
lock
or
testb
popa
inc
sub
jg
mov
mov
dec
sub
cmp
xor
scas
lcall
leave
mov
pop
dec
loope
add
jmp
push
repnz
mov
jle
pop
or
imul
test
nop
mov
les
dec
sub
push
xor
mov
jmp
lods
push
sbb
das
arpl
xor
mov
push
adc
stos
ljmp
cmp
lea
xor
push
sbb
dec
or
fs
mov
pushl
xor
inc
inc
sub
leave
and
push
out
out
decb
xor
shll
jp
mov
xor
leave
mov
adc
idiv
mov
mov
jb
fldl
pop
adc
dec
inc
fwait
dec
rcrl
aas
mov
push
lcall
bound
dec
xchg
mov
fcomip
call
aam
inc
xor
stos
test
mov
sub
inc
mov
and
incl
pop
imul
imul
sbb
add
sbb
jmp
jmp
pop
mov
xchg
aaa
jnp
pop
fcmovb
dec
pushl
test
push
mov
or
clc
pop
pop
ja
cmp
xchg
xor
mov
frstor
ret
aaa
xor
mov
jae
arpl
into
and
in
call
dec
adc
mov
cltd
mov
inc
psrlw
mov
ljmp
outsb
lcall
fsubl
arpl
push
test
add
and
int3
cmp
mov
inc
mov
jnp
jl
xchg
out
cmp
mov
adc
js
stos
pop
inc
pop
jae
dec
add
setae
xchg
push
push
lret
push
cmc
cmp
sub
mov
jl
mov
decl
cmp
mov
call
xor
xor
daa
sub
mov
xchg
in
imul
adc
jno
pop
cmc
push
rcrl
mov
push
mov
iret
clc
push
adc
inc
test
push
stos
lret
dec
jo
xchg
pusha
push
inc
pop
cmp
out
or
sarb
pop
push
ljmp
loopne
mov
or
add
xor
testb
repz
xor
jl
jp
loope
adc
fmul
mov
dec
cld
push
gs
push
sub
lahf
testl
popf
cli
imul
sbb
int
hlt
push
push
adc
mov
xlat
xor
cmp
insb
ljmp
add
pop
xchg
mov
addr16
cld
cltd
iret
fnstcw
pusha
cld
das
push
or
mov
call
xor
dec
je
jecxz
js
lcall
add
icebp
cltd
and
xchg
or
mov
inc
outsb
fldenv
adc
enter
test
xor
decl
push
mov
add
ljmp
xchg
gs
mov
lock
or
sbb
mov
dec
adc
jle
mov
mov
ljmp
push
bound
insl
std
cmp
mov
or
lods
jl
call
test
test
clc
lock
mov
pop
rclb
outsb
mov
ljmp
jns
scas
jbe
xor
sbb
mov
icebp
xor
add
aaa
jle
mov
in
mov
lock
dec
cmp
cwtl
and
xor
insb
jecxz
sub
jmp
in
mov
pop
and
and
fstl
cmpsb
mov
shl
jg
ljmp
dec
mov
adc
dec
cmp
adc
cld
cmp
mov
jmp
jmp
add
loopne
jle
popf
fiadds
xor
ror
xlat
sub
jns
inc
popf
lock
ljmp
jecxz
dec
enter
test
cmp
pushf
jl
out
push
lcall
lcall
jne
dec
sbb
in
imul
call
push
push
icebp
xchg
push
jne
jg
idiv
xchg
stos
xchg
push
add
jns
popf
pop
cmp
enter
pushl
std
andl
mov
mov
sbb
dec
pop
lods
popa
mov
pop
sbb
pushl
sahf
push
popa
xor
mov
movsb
mov
jno
mov
das
and
jbe
cmpl
xor
ret
xor
les
xor
cmp
inc
pop
cmp
mov
sarl
outsb
mov
jg
dec
out
pop
das
dec
jb
dec
addps
or
pop
ljmp
lods
or
xor
jecxz
xchg
dec
insl
jmp
fisttpll
ja
bound
imul
imul
fldl2t
ljmp
add
push
inc
mov
jns
out
add
lret
xor
jmp
decl
stc
mov
pushf
daa
ficomps
mov
fcoml
test
pop
icebp
lcall
mov
add
shl
mov
inc
cbtw
inc
mov
incl
mov
gs
add
idivl
jno
and
sarl
movsl
sub
call
iret
xor
sbb
in
imul
xchg
sbb
rolb
popa
mov
mov
jecxz
retw
popa
rcrl
xchg
add
loop
mov
cmc
jl
call
pop
pop
enter
das
jge
rolb
sbb
or
int
cmp
jg
sbb
sbb
cmp
insb
sti
adc
loope
adc
lds
sub
mov
pop
sbb
jmp
dec
out
fwait
jo
cwtl
ss
rcrl
sub
sub
rclb
hlt
push
pop
cmp
jbe
pushl
sbb
lea
fidivrl
mov
jg
or
fs
and
stc
fcomip
pop
sub
pop
push
sub
push
push
in
ljmp
popa
xor
xchg
jae
rcl
jmp
push
imul
ljmp
cli
cwtl
adc
push
jge
adc
jmp
stos
mov
push
sahf
or
xchg
jp
adc
nop
lods
testb
and
adc
and
mov
shr
stos
adc
push
sub
cmpsb
bound
cltd
fimuls
sbb
mov
rol
ljmp
cmp
roll
sub
mov
push
insb
leave
or
sub
jg
aaa
leave
fdivs
scas
fbld
push
push
mov
clc
ljmp
insb
or
repnz
outsl
pop
js
ret
dec
push
cmp
cmp
cmpsb
xchg
decl
inc
loopne
out
int
jnp
aam
push
sub
les
flds
test
sbb
in
adc
into
ret
sbb
mov
and
pusha
mov
inc
and
pushl
sub
and
mov
xor
mov
aas
out
inc
inc
inc
push
jmp
inc
mov
scas
into
dec
dec
loope
js
xor
lahf
mov
push
cwtl
push
xchg
shlb
jmp
pusha
mov
jmp
mov
push
fistpl
jmp
push
mov
jmp
out
mov
lahf
jle
xor
jl
sbb
xchg
mov
xchg
lcall
pop
adcb
sbbl
cmp
jge
jb
ja
push
pop
mov
call
cmp
test
mov
das
cmc
mov
xchg
hlt
js
mov
lcall
jmp
ret
jns
cmp
jb
incl
dec
dec
xor
xor
ljmp
pop
jge
mov
call
js
in
lcall
inc
push
xchg
in
sti
sbb
mov
pushf
lock
add
test
xchg
out
inc
cmpsb
or
cli
cmp
cld
dec
imul
mov
andb
pop
push
aad
cld
incl
test
fcoms
mov
adc
jg
lahf
push
mov
push
or
lcall
arpl
rcrl
out
mov
js
inc
int3
jmp
inc
mov
add
ret
xchg
sub
movsl
sbb
js
mov
pop
pop
xor
pop
insb
xchg
call
mov
pop
inc
stc
mov
dec
subb
mov
inc
into
pop
stos
jge
decl
clc
pusha
aad
je
inc
icebp
jmp
clc
pop
subl
loopne
jecxz
mov
push
test
fs
or
jl
fsubrl
decl
xchg
repnz
push
jp
insb
std
data16
adc
adc
lcall
loope
ljmp
mov
and
lock
scas
mov
adc
popa
mov
movsb
mov
and
jbe
js
icebp
lea
in
mov
repz
jne
sbb
cld
aaa
loopne
jmp
mov
pop
popa
dec
add
pop
call
stos
fs
dec
xor
int3
es
adc
cltd
mov
push
jne
aas
or
sbb
mov
cmc
or
out
adc
test
mov
dec
pop
jecxz
repz
cmp
mov
in
lret
rcrl
inc
int3
out
popf
idivb
out
out
imul
lcall
sahf
dec
cmp
jl
mov
fwait
shr
xor
test
cmp
or
or
mov
adc
add
push
cmp
mov
and
push
lods
mov
jmp
movsb
inc
cmpsl
jmp
mov
cmp
fists
cmpsb
cmp
fidivrs
rol
jge
inc
inc
mov
xchg
push
pop
inc
out
cmp
xor
stos
xchg
jmp
lds
mov
lods
and
bound
js
xchg
jmp
jl
adc
fsub
jo
mov
test
push
push
popa
sbb
ret
cmc
lcall
cmp
cmp
repnz
dec
insb
push
lock
xor
ljmp
lcall
movsb
ss
scas
and
xor
cmpsl
cli
aas
push
xchg
lds
xchg
dec
mov
jmp
add
lock
sub
cmp
lret
loop
and
loop
loopne
pop
inc
and
cmp
cwtl
fnstcw
or
gs
cld
mov
xor
mov
cmp
in
call
adc
sbb
adc
dec
pop
sbb
jae
stos
in
or
incl
popf
inc
fsub
nop
std
dec
cmp
jle
sub
into
ljmp
jno
adc
cmc
adc
test
repz
addr16
push
jnp
pop
sar
jg
xchg
push
sub
add
adc
mov
call
pushl
push
cli
adc
ja
inc
xchg
sub
cld
sahf
and
iret
pop
push
adcl
pop
aaa
add
stos
push
adc
dec
mov
cmpsb
adc
stos
popa
push
imulb
fs
lcall
mov
jl
xor
iret
mov
push
inc
or
aad
es
dec
add
pushl
fs
rcr
call
mov
mov
insl
fidivrs
mov
data16
arpl
int
jne
pop
into
jbe
gs
or
jg
arpl
lcall
push
sbb
mov
push
jle
fcmovnu
jnp
and
mov
enter
loopne
popf
js
test
cmpsb
shlb
mov
cmp
fcmovnu
jmp
cmpsb
fisubs
cmc
loop
lea
popa
push
push
xor
rorl
and
cld
stos
cs
decl
cli
inc
clc
lahf
sbbl
sub
xor
out
inc
out
pop
cli
jle
icebp
mov
jmp
fistl
push
leave
ljmp
jae
rclb
mov
lods
popw
data16
pushl
sub
in
jae
cmp
sti
inc
mov
and
or
dec
jno
jg
sbb
js
pop
rol
push
addl
test
dec
ss
xchg
dec
pop
call
adc
adc
int
jg
cmpsl
sub
pop
pop
adc
mov
jg
js
test
jbe
xchg
mov
out
xchg
sbb
int
push
repz
cli
iret
aaa
mov
ljmp
push
in
movsl
mov
mov
mov
ss
sbb
xchg
sbb
xor
dec
daa
inc
jmp
divb
call
cmp
daa
mov
push
jle
loop
shlb
jp
cmpsb
dec
arpl
mov
inc
sbb
mov
xor
pop
incl
cmp
imul
cmp
lcall
loopne
cwtl
incl
xlat
inc
jl
xor
cmp
jle
repz
ja
push
cld
or
cli
jne
jmp
test
adc
sbb
xchg
push
adc
mov
pushl
and
mov
in
dec
in
and
movsl
cwtl
into
movsb
lds
fwait
int3
sub
incl
and
fimull
and
inc
sub
xor
mov
cs
pushl
xchg
cltd
dec
sarl
in
ret
push
mov
push
push
mov
dec
enter
push
mov
decl
jo
mov
out
pop
mov
gs
xor
adc
bound
aam
incl
aaa
call
aam
mov
mov
xchg
mov
push
pop
sbb
inc
jb
xor
setb
jecxz
insb
jo
pop
pop
outsl
movsl
lds
nop
mov
fcomip
xchg
fisubl
dec
mov
sub
or
jl
jecxz
xor
pop
xchg
stos
or
ja
mov
and
inc
adc
lcall
pop
cs
push
sbb
std
jb
test
cmp
mov
push
or
ljmp
std
mov
or
lret
adc
adc
pushf
int
sar
sbb
inc
ljmp
lcall
mov
ror
and
js
pop
lods
adc
loopne
ljmp
cmp
xchg
pop
popf
xchg
mov
test
cmp
push
sbb
ret
decl
cmpsl
xor
clc
std
js
xchg
ja
xchg
test
inc
ret
sbbb
shrb
incl
jp
cmpsl
dec
pop
adc
cld
in
addr16
mov
addr16
dec
push
xchg
xor
nop
and
mov
insl
sub
adc
jae
fidivrl
cmp
in
dec
incl
mov
das
aam
ret
inc
pop
sbb
or
in
cli
cwtl
jbe
decl
cld
or
or
and
push
outsb
mov
ds
sbb
sti
mov
ljmp
aas
scas
ret
ret
mov
push
mov
cmp
popf
sbb
mov
sti
and
mov
dec
call
jbe
cld
push
andb
mov
ror
or
lods
inc
mov
popf
rcrl
in
mov
push
mov
call
xor
and
and
fnstcw
adc
notb
adc
ja
incl
testl
cmpsl
jo
das
popa
outsb
out
cmp
imull
adc
rcll
or
mov
cmp
and
mov
jmp
jae
in
sahf
inc
mov
lcall
stos
sbb
movsb
inc
adc
jl
stc
pop
loope,pn
mov
stos
cmp
lcall
fistps
and
lock
inc
imul
scas
inc
hlt
dec
pop
cmc
jl
fimuls
inc
or
and
push
xchg
and
jmp
mov
add
mov
lods
push
bound
mov
add
dec
in
mov
mov
sub
repnz
sti
inc
mov
or
push
ret
pushl
inc
in
jo
stc
rcll
mov
in
dec
mov
dec
cs
mov
pop
aaa
std
call
xchg
and
lods
imul
into
inc
sub
adc
add
inc
pushf
dec
dec
pushl
mov
inc
mov
inc
outsl
mov
sub
adc
ljmp
jmp
sub
adc
fldenv
out
mov
adc
insl
mov
jg
add
mov
mov
pop
jl
pushf
mov
xchg
xchg
push
in
mov
xchg
mov
mov
icebp
aam
mov
stos
popf
cmp
sub
jno
or
lds
cmpsl
mov
push
sub
lcall
dec
roll
loopne
jno
fcos
cmp
xchg
xchg
pop
cltd
leave
test
insb
in
sub
and
out
fdivrl
std
int
lcall
pushl
and
jg
fisttps
dec
adc
mov
pusha
lods
shl
icebp
pop
pushl
pusha
mov
dec
fs
xor
xlat
push
mov
mov
in
mov
clc
incl
lea
mov
test
push
cli
jnp
mov
sarb
pop
sbb
pop
push
ret
sti
push
push
mov
mov
rorl
ficomps
movsl
xor
mov
fs
adcb
sbb
mov
icebp
push
mov
mov
jmp
mov
push
sub
push
cmp
mov
sar
pushl
push
dec
ror
dec
adc
and
jecxz
lahf
test
xchg
rorl
stc
push
xlat
push
inc
lods
mov
fs
mov
push
pop
popl
call
scas
mov
xlat
add
out
mov
lea
ja
push
in
push
shlb
jmp
imul
cld
push
mov
lods
stos
fwait
xor
je
insl
cmc
dec
decl
xlat
cmp
pushf
mov
jo
dec
test
inc
roll
icebp
dec
movsl
icebp
and
pop
ss
je
pop
mov
mov
in
je
ja
out
sbb
mov
adcb
bound
mov
lcall
call
mov
aas
js
or
popf
fimuls
mov
sub
sbb
ljmp
sbb
sub
and
or
push
dec
incb
mov
xor
ljmp
rolb
sub
cmpsb
test
cmp
mov
jmp
sub
mov
mov
js
aam
daa
push
cs
gs
hlt
xor
jg
in
or
fcomip
xchg
ret
xchg
adc
jle
in
addr16
es
aad
lret
enter
lcall
lret
shlb
popa
sahf
mov
jnp
add
insb
jl
xchg
incl
scas
cmpsb
pop
inc
push
rolb
xchg
mov
outsb
adc
inc
and
jmp
jo
in
mov
mov
cwtl
and
mov
ljmp
add
mov
ficoms
inc
jl
lret
cmpsb
mov
jg
mov
loopne
inc
xchg
imul
jo
imull
cld
subb
lods
or
dec
pop
mov
lock
cmc
aas
mov
xor
fsts
fucomp
push
insb
dec
das
mov
jg
call
adc
in
mov
popa
add
pop
cmpsb
sar
incl
testl
movsl
sbb
loope
pop
dec
insb
ficomps
cmp
ljmp
pop
jl
out
mov
insl
fcompl
add
push
fwait
clc
mov
sub
mov
push
into
push
test
adc
aad
imul
push
jmp
mov
int3
test
dec
adc
outsb
andl
ret
lea
mov
lcall
sub
xorl
push
pop
dec
lods
inc
inc
push
xlat
xchg
decl
lock
dec
cmp
stc
js
mov
ljmp
mov
mov
repz
xor
xor
mov
mov
lods
cmc
xchg
into
and
mov
jne
jmp
xor
das
jmp
decl
xchg
or
fcmovne
sbb
pop
mov
mov
mov
adc
call
sub
int3
add
add
out
inc
inc
push
int
mov
jbe
or
cli
cs
fs
jge
out
jg
xchg
pop
mov
popa
into
or
mov
mov
add
movsl
bnd
sub
xchg
inc
cmp
adc
shlb
or
xor
mov
imul
inc
ljmp
sbb
addb
fnstsw
and
pop
test
ror
jmp
or
pop
and
insl
ret
pop
dec
cmpsl
aam
repz
idivl
data16
fstl
xchg
fldenv
sbb
mov
inc
xor
lea
sbb
dec
test
nop
push
ljmp
pop
shll
dec
dec
push
pop
notb
mov
test
push
push
push
cltd
mov
gs
out
mov
or
pop
mov
ret
int
lods
aas
aad
lcall
fcmovne
les
sub
imul
mov
popa
jp
aad
dec
cmpsb
push
sti
cmpsb
jne
cmp
incl
js
adc
mov
mov
jle
shrl
push
les
inc
xor
xchg
leave
jae
push
jb
enter
add
xor
in
jne
fwait
pop
mov
enter
ljmp
mov
enter
cli
add
sub
nop
inc
push
insl
fcomip
fldenv
jmp
js
iret
and
mov
mov
sub
sbb
sub
or
lcall
out
es
push
cmp
lahf
mov
fdivs
add
pop
push
rolb
popf
mov
or
adc
push
mov
insb
xchg
mov
xchg
and
ljmp
clc
sbb
xchg
flds
out
mov
aad
inc
aas
or
cmpsb
dec
mov
rorl
pushl
iret
dec
add
mov
dec
dec
out
fdivp
mov
jmp
add
dec
insb
inc
push
cwtl
xchg
xchg
jle
jmp
lahf
cmp
ret
js
and
std
adc
rcrb
xchg
mov
dec
sti
sub
idivb
adc
movb
sbb
adc
inc
gs
cmp
loope
mov
jp
mov
jo
pushl
inc
stos
mov
mov
hlt
xchg
jnp
sub
call
jno
jne
stc
out
mov
decl
adc
mov
add
popa
push
lock
cmpsl
jg
out
in
daa
daa
cmp
pushf
push
mov
fisubl
add
int
push
fnstenv
mov
jns
fidivrl
daa
out
sbb
aam
push
rol
sbbb
loopne
mov
add
sarb
incl
stos
fstl
fiaddl
push
iret
lret
mov
call
imul
push
std
mov
pushf
or
jne
dec
push
or
out
aas
or
push
jmp
or
mov
inc
inc
nop
sbb
jp
test
loopne
fs
pop
loopne
ljmp
iret
fsts
mov
popl
jle
pusha
jmp
mov
mov
out
pop
jo
cmp
dec
cmc
lds
jl
outsl
jbe
jmp
stos
roll
das
pop
in
push
hlt
movsb
xor
and
sub
mov
ljmp
loop
pop
daa
mov
das
dec
mov
imul
add
call
lcall
add
iret
adc
cwtl
push
andb
push
nop
scas
push
sub
call
xchg
orl
lret
adc
jp
xchg
mov
arpl
fstpl
push
push
cmpsl
aaa
pushl
cld
pushf
xchg
leave
push
add
imul
dec
mov
lahf
sub
das
or
mov
inc
loope
inc
jns
sbb
mov
idiv
cmp
data16
xor
mov
call
aam
cmp
inc
pop
jge
xor
repnz
sarl
ja
jp
mov
jmp
or
jmp
pop
inc
xor
call
ja
testb
in
dec
aam
cs
lcall
sbb
push
push
or
mov
xor
movsb
loopne
ljmp
cs
jge
sahf
push
sub
mov
call
jecxz
push
insb
fnsave
call
push
push
lret
xchg
enter
pop
jns
dec
jle
xchg
mov
jmp
pop
or
lds
dec
dec
mov
ss
jle
test
call
fbstp
shrb
add
fnstenv
test
pop
xlat
inc
scas
cmp
cmp
jecxz
jg
into
push
mov
jb
negb
incl
scas
cwtl
lret
push
dec
inc
inc
mov
xchg
jp
mov
jecxz
loopne
adc
enter
incl
int3
in
add
nop
or
add
int3
pop
mov
sub
pop
push
incl
ja,pn
push
jns
into
inc
enter
sbb
fs
fucomp
inc
fldt
test
int
push
lret
lcall
cmp
add
rclb
cmp
aas
lcall
js
lock
inc
inc
leave
std
jmp
cli
clc
jb
or
mov
adc
imul
mov
aam
icebp
push
cmp
mov
mov
decl
in
lods
jmp
cmp
aaa
mov
pop
je
fcmovb
test
jmp
rol
push
call
adc
scas
popa
addr16
lods
mov
and
addl
push
mov
mov
pop
and
decl
cmp
jmp
stos
aaa
or
icebp
pop
mov
loope
inc
cmp
cmp
jg
xor
push
cli
cli
cld
fisubs
dec
int3
in
jg
jg
enter
dec
mov
test
mov
dec
push
and
fwait
pop
icebp
jge
test
in
shlb
dec
push
je
mov
push
mov
xor
pushf
movsl
loop
lret
shrb
sbb
mov
jno
lock
push
jne
sbb
fcomip
mov
addl
and
jae
hlt
push
mov
loope
inc
sub
icebp
je
xor
movsl
push
jmp
inc
mov
sbb
mov
js
insb
movsl
mov
in
bound
sub
xchg
xor
loopne
fsubl
in
cmp
lcall
icebp
and
cwtl
jmp
xchg
and
call
lcall
mov
ljmp
sub
cmc
mov
adc
int
repnz
fcomip
jnp
push
fnstsw
mov
sub
mov
test
in
pushl
push
and
sbb
lock
mov
repz
popa
mov
pushl
sahf
xchg
popa
dec
stos
sbb
call
mov
decl
inc
sub
push
adc
mov
enter
push
lock
stc
cmpsl
out
jecxz
loopne
cmp
adcb
cmp
fidivl
mov
lahf
pop
aaa
pop
out
mov
cmp
scas
sbb
adc
pop
sbb
mov
fstps
scas
negb
pop
lcall
lahf
mov
adc
imul
shr
mov
adc
mov
xchg
rcrb
add
dec
std
pop
push
call
dec
shrl
or
adc
dec
loope
mov
and
stc
data16
adc
adc
pop
mov
call
fnstenv
cmp
rcll
pop
or
daa
lahf
cmp
ficoml
aam
inc
pop
and
incl
iret
pushf
popa
and
mov
out
imul
int3
adc
or
or
mov
cmp
or
xor
mov
out
into
sbb
ret
lock
fwait
pushl
loope
xor
push
adcl
cmp
pop
sbb
dec
mov
xchg
sub
dec
aas
js
sbb
test
fistpll
cmc
dec
mov
and
jnp
xor
outsb
mov
jg
lock
out
sbb
jne
int
stos
fistpll
cli
sub
test
pop
xchg
scas
xchg
negl
mov
xlat
dec
insl
pop
inc
cmc
lods
clc
aad
loop
decl
jecxz
jb
adc
popa
cltd
mov
pop
lcall
hlt
cmp
pushl
lods
sub
cld
aad
xor
pop
mov
rcl
dec
dec
sbb
clc
cwtl
outsb
je
cmc
mov
scas
in
adc
aam
inc
mov
int3
sbb
incl
cwtl
outsl
bsf
mov
xchg
lods
aad
or
dec
xorl
cmovne
std
dec
nop
icebp
bound
dec
test
or
add
mov
mov
out
cli
incl
pop
mov
mov
nop
dec
in
movsb
lcall
adc
decl
inc
js
mov
std
ljmp
in
pushl
sbb
cld
lahf
mov
pop
pop
xchg
pushl
cmpsb
movb
leave
cmp
ss
xor
jb
test
in
sub
xchg
jns
ljmp
add
mov
into
addr16
sbb
cmovle
cld
movsb
and
cmp
incl
insb
cmpsl
rorl
push
pop
ret
xchg
push
jmp
repnz
shl
jnp
rcl
lcall
pusha
jae
pop
pusha
xchg
popf
aad
push
ficomps
xchg
dec
mov
push
scas
cmp
and
sti
dec
lods
incl
cld
call
jle
rorb
stc
pop
xchg
pop
add
shll
int
sbb
pushl
stc
sub
and
jb
aad
add
outsb
divb
push
adc
pop
adc
cmpsb
and
incl
push
pusha
mov
pop
cmp
pop
dec
lds
das
stc
stc
pop
je
repnz
xchg
call
cmp
inc
adc
nop
xor
jl
scas
xor
lahf
mov
mov
incl
xchg
push
jb
pop
neg
cmp
aaa
les
cli
test
aad
jmp
cmp
adc
push
ficomps
nop
loop
mov
daa
lds
inc
jl
test
sub
aas
fucom
push
dec
jmp
cmp
int3
jb
sub
mov
into
gs
cmp
test
pop
test
push
std
aaa
or
lahf
cmp
stos
in
mov
movsl
xchg
mov
lret
inc
inc
jbe
decl
out
cltd
das
cmp
jne
loopne
fisttpl
dec
push
roll
push
aam
fs
lcall
shrb
xchg
repz
cmp
movsl
cld
pop
hlt
sbb
ffreep
inc
mov
orb
and
or
call
incl
sub
pushf
and
stc
jno
jle
test
int3
push
idivl
mov
lahf
jmp
fmull
pop
jne
xor
inc
subl
int3
sub
insl
cltd
mov
push
mov
icebp
pusha
mov
or
or
adc
xchg
test
lods
adc
mov
decl
mov
sbb
insl
add
mov
sarb
pusha
es
pusha
dec
fmul
in
repz
push
mov
pop
or
ss
cmpsl
jns
add
negl
ficompl
adc
xor
call
pop
mov
push
in
repz
bound
push
push
mov
sub
sar
lret
adc
out
cli
add
dec
je
cwtl
movsl
push
pop
imul
lret
fmull
lret
pop
pop
pop
sbb
ret
jecxz
xor
mov
stc
clc
add
lods
dec
das
jmp
jle
adc
leave
lahf
pushf
xchg
pop
or
decl
mov
cmpsb
mov
lods
jnp
push
test
inc
bound
enter
lcall
jae
adc
pop
pushf
in
sbb
mov
in
or
mov
mov
lret
mov
xchg
cmp
adc
xchg
jo
cs
call
int3
cmp
dec
adc
test
repz
and
push
and
cmp
lcall
mov
mov
cmp
loope
outsb
mov
das
sub
pop
decl
push
lahf
fimuls
cmpsb
inc
icebp
inc
iret
add
lret
jge
insb
in
mov
insl
bound
mov
nop
push
pop
cltd
xor
xchg
xchg
or
pop
pop
or
pop
lods
stos
mov
in
jnp
sbb
ret
mov
mov
dec
xchg
mov
jle
movsb
test
int
mov
add
call
xchg
es
xor
jne
mov
lock
subl
xlat
jge
cltd
sub
incl
clc
push
std
jl
in
call
cwtl
pop
arpl
sar
repz
lcall
mov
iret
push
aad
lret
addl
inc
in
test
dec
mov
std
jg
or
or
aam
push
pop
popa
push
outsl
movsl
dec
sahf
pop
sar
push
std
pop
inc
inc
pop
mov
mov
cmp
shll
jo
scas
out
ret
jg
dec
inc
dec
pop
sbb
out
mov
loopne
and
xchg
out
cmc
fidivs
jmp
outsl
or
loop
jg
jecxz
rolb
push
outsl
sbb
lcall
addl
and
pushf
sbb
mov
fstpl
pushl
insl
xor
in
lret
xchg
js
sbb
std
addr16
push
push
lcall
adc
ljmp
or
leave
xorb
inc
fwait
cmpsb
arpl
repz
clc
dec
sbb
cld
incl
leave
pop
cmp
bound
loopne
lods
rep
fwait
sti
ficoml
decl
lock
mov
vmovaps
test
or
jg
sub
fisubs
sahf
les
sub
xlat
imul
pop
sarb
dec
in
hlt
outsl
fbld
into
and
mov
sahf
xor
pop
or
pushl
insl
leave
jecxz
mov
das
aam
jb
inc
cmp
add
jp
sub
cli
pop
mov
jg
sar
call
call
shrl
cltd
and
cmp
inc
jl
mov
xor
cmc
cli
push
fs
out
add
push
and
lahf
add
xor
xor
arpl
jmp
sub
dec
cmp
lock
jge
popf
lret
mov
pop
xor
cmp
pop
data16
in
ret
inc
xor
or
lahf
dec
mov
or
pop
inc
cmp
movsb
push
mov
lahf
and
fildl
in
js
into
mov
cmpsl
and
ljmp
push
into
outsl
add
adcl
xchg
push
lds
lcall
xor
sub
fcmovbe
mov
dec
addr16
mov
mov
in
ljmp
lcall
mov
sbb
cltd
dec
mov
clc
es
scas
incl
fadds
push
jmp
dec
push
xchg
sbb
fs
xor
adc
fsubs
push
push
inc
lahf
lea
out
mov
arpl
push
mov
jmp
addb
or
jo
aaa
jne
mov
lods
imul
stos
inc
pop
mov
pop
cmp
cmp
or
outsb
fs
push
push
and
xchg
pop
add
or
sar
hlt
cli
rorb
into
fistpll
and
inc
loopne
outsb
adc
les
ja
xchg
jmp
cld
subl
push
jmp
pop
mov
push
mov
xor
test
cwtl
decl
push
shll
ret
mov
into
je
sar
loope
dec
imul
cwtl
loope
sti
jmp
cwtl
int3
xor
sbb
ja
test
mov
mov
inc
push
mov
shrl
ljmp
andl
into
push
dec
insl
stc
pop
div
dec
add
pop
or
cmp
mov
lcall
dec
add
test
fs
inc
dec
mov
push
in
scas
dec
dec
out
xchg
jns
inc
lcall
call
lods
out
adc
xor
pop
ds
out
sub
and
jg
lcall
push
lahf
and
ss
test
mov
pop
loopne
push
movsl
outsb
outsl
pushl
mov
out
loop
mov
scas
adcl
mov
notb
push
call
loope
or
push
cmp
lret
andb
jne
je
cld
lcall
inc
loope
push
into
sbb
iret
loope
xor
imul
dec
xchg
aaa
scas
cmp
pushl
movsb
test
mov
and
arpl
cs
cmpsb
pop
dec
stc
push
fisttps
jb
hlt
adc
xchg
jge
or
loop
pop
push
insl
out
xchg
xchg
sbb
sbb
lcall
xchg
clc
mov
and
adc
std
pinsrw
push
les
test
dec
fcomi
clc
pop
inc
cmc
jl
lea
outsl
in
push
ja
xor
rorb
call
aaa
xor
cmp
scas
and
fistpll
mov
je
inc
inc
jp
lea
loop
lret
pushl
cli
push
pop
jg
pop
call
shlb
popf
sbb
xchg
pop
jmp
pop
mov
decl
aaa
das
xchg
push
mov
repz
xor
clc
stos
ret
dec
mov
insb
icebp
add
call
or
fwait
push
ss
out
inc
sbb
mov
jnp
int
ret
mov
ds
mov
jns
mov
movsl
xchg
enter
jbe
inc
and
pushf
imul
jmp
jmp
push
adc
jno
xorl
sub
inc
jge
mov
popa
or
call
faddl
adc
into
cmp
punpcklbw
aad
imul
xchg
nop
pop
movsl
sbb
sar
lcall
fldl
sahf
xor
andl
popf
mov
cmp
ljmp
cwtl
sahf
lahf
fsubrs
sub
xor
int
cmc
ret
jnp
dec
fldl2t
push
jmp
xor
int
insb
sub
mov
movsl
iret
cmp
cmc
jp
jbe
movsb
and
ljmp
lea
fistps
pop
sub
jno
sarb
add
dec
adc
inc
out
or
xor
push
pop
cld
cmp
cli
lock
inc
cld
push
jge
imul
sar
incl
ss
jp
xorl
or
mov
addr16
inc
mov
adc
jl
push
jg
das
add
dec
aas
adc
and
aad
enter
lcall
inc
shll
or
pop
cmp
xchg
xor
out
and
out
dec
shll
sbb
jmp
inc
bound
loope
sub
pusha
movsb
jb
out
cs
call
inc
fildl
xor
scas
aam
sbb
loope
stc
dec
test
ja
sarb
adc
push
lcall
in
jnp
jnp
movsb
cli
fs
or
ret
add
notb
scas
mov
inc
add
rcr
ret
sbb
dec
iret
in
mov
jge
cmp
decl
addr16
xchg
or
and
pop
push
mov
mov
pop
cmp
push
shll
jl
out
xchg
sbb
fildll
mov
incl
xor
pushf
mov
call
mov
push
cmp
addl
pop
sbb
push
cmp
imul
call
jge
aad
jp
in
ljmp
dec
sub
mov
rcrb
mov
lock
incl
and
sti
sub
test
nop
fnsave
dec
sub
xor
push
sarl
decl
cs
addr16
pop
adc
movsb
addr16
shrb
and
xchg
scas
jbe
ljmp
xchg
or
or
aas
dec
mov
movsl
xchg
and
fdivrs
cmp
mov
or
add
lea
pop
xor
cwtl
loope
aam
or
adc
push
call
jecxz
xchg
mov
hlt
xchg
push
jecxz
pop
mov
mov
mov
inc
mov
mov
dec
dec
push
scas
mov
cs
pop
adc
push
arpl
pushf
lods
dec
cli
pushl
fdivr
fwait
jg
daa
in
pop
jbe
adc
les
loop
test
das
pop
dec
imul
xor
sbb
jne
scas
jge
and
mov
lcall
leave
inc
les
xor
cli
iret
inc
popf
or
adc
roll
push
push
mov
push
push
ficomps
fwait
or
sub
stos
add
lods
fisubrl
in
scas
push
lret
mov
and
mov
mov
in
aas
or
sbb
in
push
incl
sarb
dec
inc
loop
xorb
into
mov
add
ss
fistl
jae
iret
jmp
shll
imul
out
jo
ss
popf
cmpl
cs
add
sbb
xchg
test
or
movsb
fisttps
call
sbb
pop
dec
jp
scas
jne
cwtl
loopne
push
das
xchg
sbb
push
outsb
leave
push
test
jmp
int
xor
movsl
test
clc
jne
pop
inc
mov
iret
push
ljmp
xchg
pop
into
mov
jl
sub
push
rclb
jg
jle
repnz
or
jmp
add
dec
lret
arpl
mov
dec
pop
dec
fs
lds
cli
in
repz
dec
push
jl
ja
in
ret
pop
or
jecxz
jg
in
stos
push
mov
and
scas
jb
aas
jmp
jnp
sub
lcall
lods
sbb
dec
inc
and
cmc
test
add
adc
inc
fistpl
incl
aam
mov
adc
fnsave
pop
imul
fsubp
sbb
sbb
xchg
data16
cmpsl
ljmp
jecxz
test
sub
fs
dec
in
icebp
dec
mov
ds
and
into
cmp
push
pcmpgtd
dec
mov
ds
pushl
das
and
in
shll
insl
push
and
jecxz
inc
xchg
insl
lock
xchg
xor
sbb
push
dec
xchg
stos
lock
mov
jnp
cmp
add
jp
xchg
pop
jmp
decl
mov
aas
jl
xor
in
adcb
sarb
xorl
or
lcall
aad
enter
xchg
cmpsl
bound
pop
sti
or
inc
stos
dec
lahf
enter
decl
cmp
mov
sub
push
lock
xchg
repnz
jnp
jmp
in
adc
insb
mov
xchg
aad
into
push
or
mov
mov
lcall
and
cmpsb
pusha
jnp
shll
add
inc
jno
mov
mov
mov
ljmp
ljmp
outsw
aad
xchg
scas
rcrl
call
dec
test
test
test
cmpsl
call
jno
addr16
ret
push
cmpsl
cmc
lods
ret
or
xchg
add
pusha
pop
fs
add
jecxz
call
pop
imul
jno
sbb
fisttpl
jb
sbb
ljmp
pop
inc
test
lcall
mov
lds
dec
ret
or
jge
ljmp
aad
jmp
lcall
das
mov
lcall
dec
or
lods
orb
aad
sub
pushl
xchg
inc
dec
ss
sbb
inc
jg
mov
adc
filds
test
pop
pushf
in
into
cmp
jp
adc
incl
and
xor
and
and
jo
mov
jns
lcall
sub
sub
lahf
imul
add
outsl
push
mov
cmp
cmp
jg
xor
and
ljmp
inc
outsl
out
xchg
lret
cmpsl
mov
pushl
mov
subl
push
out
mov
mov
test
pop
cmp
mov
add
cmp
sbb
fs
cltd
cmp
fstp
add
cs
pop
cmpl
xchg
dec
imul
jmp
rcrl
adc
sbb
inc
xchg
push
mov
pop
xchg
pop
mov
or
push
lds
lcall
movsl
lret
bound
or
push
fisttps
xor
or
adc
ljmp
cmpb
xchg
pop
pop
jb
inc
lea
mov
mov
inc
test
idivb
aas
mov
hlt
mov
aam
in
cmpsl
ljmp
adc
mov
mov
add
imul
push
xor
mov
cmc
es
test
pushl
fsubrs
jbe
mov
lods
ljmp
stc
arpl
stos
jg
jns
in
in
jo
adc
sbb
lcall
push
scas
lods
xor
xor
sub
mov
mov
xchg
dec
fstps
popa
incl
xor
leave
cltd
fcmovu
je
int
std
sbb
pop
dec
lcall
loopne
pushf
sbb
decl
scas
lea
pop
mov
dec
xchg
pusha
scas
xchg
push
sub
lret
cmp
inc
adc
add
jbe
mov
dec
popa
outsb
fs
add
xchg
dec
add
sbb
decl
std
jo
or
clc
inc
push
sub
xor
add
call
and
dec
mov
or
or
jl
jnp
mov
and
lcall
jae,pt
pop
pop
cmp
movsb
cmp
loopne
push
test
or
repnz
push
icebp
into
jb
xchg
inc
xor
mov
loope
sub
aaa
dec
test
pop
or
ljmp
or
int3
mov
xchg
mov
imul
stos
cmpl
jmp
ror
inc
dec
adc
lahf
jg
out
push
out
cmp
push
jmp
pop
mov
pop
pushf
std
dec
xchg
dec
mov
mov
sahf
add
adc
rol
xchg
dec
incl
enter
or
mov
call
mov
std
add
sub
call
ss
rorb
inc
push
push
lea
les
and
pop
jg
jno
mov
push
arpl
pop
jmp
adc
sahf
mov
fsubr
lea
jmp
cmp
mov
cld
movaps
dec
cmp
jo
dec
inc
test
xchg
addr16
cmp
jmp
das
push
jmp
mov
xchg
sbb
cld
cmp
mov
cltd
sub
xchg
jp
dec
movsb
aam
iret
mov
jmp
mov
loop
add
adc
fucomip
mov
sbb
mov
incl
cld
sbb
test
pop
ja
fisubrs
shl
call
inc
jnp
ja
out
and
outsl
xchg
push
pop
push
push
xchg
stos
iret
xchg
std
jp
or
sub
dec
jae
and
sub
xchg
ret
lock
jo
inc
repz
std
push
push
jbe
jle
fsts
xchg
lahf
outsb
les
cltd
add
jg
inc
and
fdivs
mov
cli
aam
cmp
cmpsb
stos
jg
pop
xlat
mov
fs
xor
arpl
pushl
push
divl
mov
ds
cmp
jg
insl
xchg
mov
sbb
lock
xor
pushl
cmpsb
mov
testb
xchg
mov
jbe
jecxz
stos
sub
jmp
shlb
jno
incl
stos
jmp
cs
or
scas
pop
jmp
jecxz
pop
pushl
adc
mov
movsl
mov
push
sbb
sbb
jle
leave
sahf
and
ja
sbb
std
adc
gs
lea
xchg
pushf
jecxz
push
aad
insb
sahf
adc
les
push
cli
cmp
sbb
jmp
push
fisttpl
ror
out
or
push
ret
jnp
cmp
loopne
mov
push
inc
and
mov
sarb
mov
cmp
xchg
cmp
jg
cs
cwtl
pop
inc
outsl
cwtl
sarl
pop
shr
aam
dec
adc
stos
xor
call
cli
jecxz
cmp
outsl
mov
js
pop
hlt
fldt
test
int
hlt
ljmp
mov
ljmp
call
ret
imul
insb
test
inc
xor
cmp
test
sbb
ja
out
cli
mov
sub
cmp
fmuls
orb
decl
push
sbb
arpl
jmp
or
xchg
cli
push
adc
pushl
adc
int
push
repz
inc
int3
adc
xchg
push
xor
jmp
dec
cmpsl
js
insl
and
loope
mov
push
enter
jmp
pushf
push
mov
adc
data16
stos
pop
sti
xchg
mov
ror
arpl
inc
jnp
add
lret
cwtl
mov
das
jne
jg
mov
jmp
jae
mov
scas
sub
mov
inc
push
push
dec
inc
mov
pushf
js
pop
in
pushl
cmp
ljmp
adc
sarb
shl
stc
ja
adc
jle
inc
pop
mov
call
push
cli
loop
sub
stos
mov
call
mov
or
jbe
incl
lods
loopne
imull
sub
push
addr16
pop
in
sub
sub
pop
fbld
xchg
jp
pop
outsb
cwtl
mov
mov
es
into
je
mov
decl
mov
inc
adc
adc
add
outsb
lcall
scas
in
push
sbb
fs
adc
jmp
dec
or
shrl
inc
filds
ret
and
test
mov
int3
jg
and
add
add
rorl
sahf
xor
mov
out
call
negl
ja
mov
icebp
lret
mov
sbb
cltd
shrl
pop
mov
decl
mov
push
mov
cmp
clc
fnstcw
ffree
pop
cmc
pushl
mov
std
stos
std
popaw
mull
aaa
fwait
pushw
popf
mov
sub
decl
jmp
lret
outsb
adc
loope
out
mov
push
das
fldl
insb
sub
inc
lods
jle
aam
ret
dec
in
lds
loopne
sbb
ja
fcmovu
in
pushl
lods
dec
lahf
pop
push
push
lock
cmp
ds
cmpsl
pop
mov
sub
dec
push
fisubrs
jg
adc
inc
push
rcr
xchg
repnz
aam
shl
mov
addr16
xlat
cwtl
xchg
xchg
and
inc
sbb
jo
orl
out
xchg
lea
pop
cmpsl
adc
arpl
push
and
push
lea
fadd
int
dec
dec
add
cmp
inc
js
jge
into
sahf
in
sbb
xchg
inc
outsl
addr16
cmpl
xor
aas
mov
inc
lret
jg
adc
aam
push
pop
inc
mov
js
ljmp
cli
ljmp
idiv
jge
outsl
ds
cwtl
sbb
xor
mov
add
jmp
jns
jo
and
mov
ss
xor
xchg
out
inc
out
ficomps
das
add
ljmp
int3
jo
je
stc
test
sub
jmp
cmp
adc
negb
add
daa
jnp
xor
in
mov
push
and
incl
ficompl
dec
inc
lcall
loop
mov
call
cmp
cmp
test
push
fldenv
and
std
jae
push
popf
or
mov
cmp
bound
jge
pop
cld
decl
popf
and
add
jae
mov
mov
in
mov
in
out
sbb
lcall
push
mov
add
mov
push
jg
das
cmp
adc
sbb
jmp
loopne
inc
add
jns
fucom
mov
lds
sbb
mov
decl
lock
push
cld
jp
xor
movsb
aas
jge
push
movsl
mov
adc
pop
xor
jmp
fildll
nop
dec
stos
filds
out
inc
int
xor
ds
shrb
jmp
aaa
cld
ljmp
call
mov
and
mov
insb
std
cmpsl
inc
push
jge
cli
jmp
cmpsl
mov
dec
pop
inc
aaa
negl
add
dec
adc
pop
cltd
cwtl
ljmp
add
sbb
jp
mov
xlat
add
lods
pop
push
fwait
xlat
push
lret
incl
in
outsl
in
jo
bound
bound
out
adc
popf
sbb
incl
enter
or
jb
sub
xchg
and
push
bound
jecxz
lcall
into
sub
test
js
mov
mov
lds
fcomip
add
cmp
rcrl
add
lcall
cmp
out
dec
xorps
clc
inc
loopne
pop
push
test
test
cli
cs
xchg
je
inc
pop
and
and
jg
lock
dec
scas
aad
xchg
push
add
mov
mov
sarb
cld
decl
dec
aaa
lock
inc
repnz
push
dec
pop
mov
jo
mov
out
push
aaa
std
call
mov
imul
stos
cmpsb
push
jnp
pop
out
outsb
incl
push
jle
sti
xchg
sub
xor
jo
push
xchg
loop
sti
sbb
cmp
decl
pop
or
repz
repz
sbb
pop
pop
jb
push
and
int
ret
shrb
call
and
add
xchg
push
sub
movsb
fwait
nop
push
scas
call
cld
mov
add
in
iret
pop
cmpsb
pop
pusha
jb
jbe
adc
xchg
popa
push
dec
mov
int
cmpsl
inc
dec
add
inc
insl
sbb
adc
adc
inc
pushf
push
jp
test
shr
int
mov
cmpsl
fidivrl
out
jmp
mov
imul
cld
mov
enter
or
sub
push
ret
cld
jp
push
int
pushl
xchg
aaa
mov
push
mov
in
lahf
xor
mov
mov
jmp
add
xchg
jns
jno,pn
decl
in
fstl
out
add
hlt
pop
dec
or
xor
or
out
scas
push
fs
decl
iret
adc
mov
lods
xor
jns
fistpll
inc
adc
pop
negb
sti
cli
push
mov
and
mov
pop
icebp
out
lret
out
mov
imul
in
insl
in
jb
imul
jmp
pop
call
clc
xor
loop
test
jle
call
mov
loope
pop
pop
addr16
out
xchg
lods
loopne
adc
pusha
jmp
inc
loope
pop
popa
subb
into
mov
mov
xchg
sti
or
adc
rcll
mov
repnz
mov
fisttps
cmp
dec
shl
inc
loop
inc
daa
xchg
call
scas
and
leave
lods
sub
jmp
push
and
cltd
lret
push
movl
call
or
adc
lahf
sahf
call
sar
ljmp
mov
clc
shll
shrb
jge
test
pop
mov
jmp
jmp
fnstenv
sti
aad
aam
pop
fs
iret
ljmp
xor
pop
jno
movsb
fstl
incl
das
dec
jae
xchg
sbb
lahf
iret
out
mov
shll
test
lcall
enter
sub
cltd
gs
das
or
push
add
sahf
inc
mov
adcl
pop
popa
jne
in
scas
cltd
sbb
and
lods
jb
enter
dec
push
fcos
incl
clc
in
es
jge
jo
out
cmpsb
popf
daa
add
data16
arpl
iret
outsl
mov
xchg
jns
stos
mov
iret
data16
cmp
fwait
loopne
lcall
inc
push
dec
fcomip
sti
repz
test
cltd
or
call
cwtl
arpl
cmp
push
cs
call
push
and
add
nop
dec
lods
push
fdivp
xor
call
jno
incl
mov
aaa
outsl
out
pop
sub
push
addr16
add
hlt
gs
adc
mov
or
add
add
xchg
sbb
mov
cmp
mov
push
sbb
fld1
mov
mov
add
xchg
cmp
lods
xchg
ljmp
call
pop
cmc
fidivl
gs
cltd
bound
mov
lods
xlat
jbe
mov
out
jmp
lret
cld
clc
and
bnd
repz
and
lods
push
popf
loope
aas
mov
pop
adc
andl
mov
decl
std
cmp
xchg
test
mov
jo
sub
fcomip
call
out
fstps
sbb
cwtl
lds
cld
jmp
jg
popa
ja
push
int3
jns
outsb
add
push
push
lret
shrb
call
xchg
daa
addl
jbe
insb
fists
sub
loope
jg
mov
out
out
mov
lcall
ja
jle
maxps
in
sar
lcall
pushf
push
js
cmovne
inc
iret
or
test
adc
push
inc
fstpl
incl
jmp
inc
and
push
inc
out
push
push
test
mov
orb
sub
dec
sbb
in
push
cli
popf
add
lcall
fnsave
xchg
mov
adc
andl
imul
mov
push
mov
mov
scas
clc
ljmp
les
or
inc
mov
ljmp
cmpsl
xchg
int3
sbb
std
scas
rcrl
or
std
fmull
dec
into
xchg
dec
pop
fistpll
test
inc
insl
add
into
mov
filds
mov
ffree
sub
push
push
jge
lcall
cmp
xor
or
xor
mov
stc
adc
add
jmp
mov
mov
fimull
sbb
xchg
mov
test
hlt
je
cmp
add
jmp
sarl
xchg
or
outsb
mov
or
lods
jno
xor
mov
dec
push
and
not
push
jg
subb
nop
xor
int3
cmp
nop
jno
or
imul
cli
cmpsl
cltd
cs
push
add
add
mov
sub
out
and
lods
pop
sbb
jmp
inc
cmp
fcmovne
pop
ljmp
jg
lcall
out
cmc
xor
pushf
fsts
mov
xor
ljmp
mov
sbb
bound
jl
pusha
loopne
dec
sbb
jbe
std
xchg
mov
mov
pop
xor
loop
mov
dec
push
leave
es
pushl
dec
sarb
pop
outsb
push
emms
out
inc
fcmovne
inc
mov
addr16
daa
lcall
inc
adc
data16
xchg
mov
icebp
xor
test
mov
cmp
add
movsl
xor
jp
adc
aad
fdivrp
aas
es
xor
pushl
lock
pop
jp
call
sbb
orl
and
test
xchg
sub
call
mov
les
jecxz
call
enter
inc
add
dec
loop
jecxz
jb
or
jp
dec
out
jl
insb
in
or
cmp
pop
pop
push
sahf
or
out
mov
pop
lahf
clc
lods
jecxz
jnp
fistpl
out
cmp
pop
shlb
dec
test
imul
ja
out
jmp
stos
xchg
xlat
subb
push
sbb
pushl
leave
cltd
and
roll
inc
pop
mov
leave
and
jo
inc
push
addb
stc
lods
insl
cltd
pusha
rcr
in
sub
js
pop
mov
mov
mov
mov
mov
xor
xchg
inc
inc
lcall
mov
push
mov
loopne
cs
mov
inc
adc
lahf
call
push
mov
lcall
xchg
or
pop
mov
mov
dec
shrb
cmp
bound
xor
test
les
and
xchg
xchg
jnp
push
sbb
lcall
pop
push
or
jno
mov
test
cmp
dec
add
jg
loopne
fwait
sub
lcall
call
pop
mov
jns
sti
sub
imul
xchg
push
mul
sbb
out
incl
sub
push
mov
or
test
stos
mov
mov
push
ret
movsl
clc
decl
mov
addr16
pop
xchg
jecxz
outsb
imulb
lock
add
xchg
ljmp
or
fistpll
pop
and
dec
stos
jo
rcl
push
test
in
mov
pushl
dec
callw
jle
test
test
push
add
cwtl
js
sahf
add
in
decl
and
stos
stos
cmpsl
es
imull
mov
call
enter
dec
jmp
pop
sahf
bound
cmc
jmp
dec
rcrb
pop
xorb
loope
mov
dec
mov
data16
scas
mov
incl
inc
inc
loope
lret
jmp
std
loopne
bound
jmp
bound
scas
call
or
das
shlb
lods
lret
out
in
sub
jno
push
test
dec
inc
lret
int3
es
jne
stos
or
fists
fldcw
xor
push
into
loop
movsl
sub
rorb
into
dec
popa
mov
xchg
das
test
cmp
sub
adc
cltd
fildl
fmuls
jae
iret
lds
mov
push
mov
sbb
sbb
inc
inc
arpl
leave
popf
sbb
jbe
icebp
movsl
into
repnz
lcall
int3
mov
mov
pop
ret
pop
in
xor
jns
dec
fs
gs
ljmp
mov
push
scas
pusha
addl
movsb
dec
aas
test
iret
loope
fwait
jmp
adc
shll
or
daa
and
sub
add
das
mov
jl
cmp
loop
mov
sahf
aam
xor
and
mov
pushl
and
pushf
movq
sub
negb
sub
jo
and
pusha
pop
mov
mov
popf
in
test
adc
and
mov
add
ljmp
popl
into
lret
or
lcall
push
sbb
adc
jnp
test
int3
sbb
clc
and
push
mov
jl
mov
fs
fildl
xchg
lcall
inc
adc
icebp
sti
imul
lock
sti
lcall
push
das
nop
fstps
push
pushl
incl
outsl
inc
arpl
les
push
sbb
int
decl
mov
mov
loope
sbb
pop
jne
popf
jp
jg
jecxz
push
incl
ficoml
push
cltd
test
xor
or
movsb
iret
mov
into
mov
and
cmpsl
fldt
ja,pn
incl
add
jmp
stos
dec
sarl
cmc
cmp
add
sbb
adc
mov
jg
push
xor
mov
mov
dec
inc
jmp
stos
sahf
fnstenv
ror
fistpll
pop
pop
push
jno
dec
jne
jo
in
out
clc
shl
pusha
imul
adc
and
dec
cli
mov
inc
mov
adc
mov
lods
cmp
adc
push
pushf
add
add
cli
sbbl
mov
push
xchg
adc
and
lea
aad
sbb
fdivs
call
imulb
mov
mov
pusha
loope
sub
inc
loope
and
lods
or
je
arpl
call
and
sbb
cmpsl
sbb
lahf
and
lret
jmp
or
pop
inc
pop
push
fwait
pop
adc
fdivl
int3
cmpb
popf
decl
adc
sbb
mov
int3
or
movsb
mov
mov
mov
and
push
outsb
out
fisttpll
dec
bnd
call
jo
clc
loope
pop
mov
add
sbb
cmpb
push
aas
lcall
pop
mov
ds
sub
test
dec
ret
rcl
lods
mov
jmp
push
dec
inc
dec
jle
pop
repz
jmp
add
in
jle
insl
js
int
enter
std
sbb
xchg
ljmp
xor
and
dec
gs
cmp
xchg
imul
pop
les
hlt
decb
fildll
pusha
mov
incl
jp
adc
bound
pop
xchg
test
leave
cwtl
xor
sub
mov
call
push
out
gs
push
cmp
pop
jp
lret
stos
flds
in
sahf
clc
pushf
jb
fs
jge
jge
mov
loop
popf
pop
push
mov
pop
mov
and
fmull
mov
pop
lret
pushl
fcmovnbe
jl
inc
cmp
clc
int3
dec
cli
loopne
imul
pusha
or
in
push
xor
lcall
or
sbb
sbb
mov
daa
cmp
mov
or
dec
dec
mov
ljmp
je
mov
addb
into
sub
js
xchg
mov
push
setl
jnp
push
cmp
rorl
cmp
xor
enter
das
sahf
cs
inc
push
sub
std
jmp
and
mov
aas
icebp
mov
adc
fdivrs
pop
jg
ljmp
jne
xchg
stos
mov
xchg
cmp
test
and
cld
lcall
sub
movl
dec
pop
adc
cmc
jmp
cmp
xor
lcall
inc
fcoms
and
xor
mov
cmpsl
xor
dec
or
pushf
outsb
inc
stos
lock
test
sbb
xchg
jge
dec
imul
jne
push
sti
mov
in
nop
mov
add
bound
add
dec
xor
pop
in
push
icebp
incl
es
lods
sbb
fdiv
push
or
js
leave
je
mov
icebp
cmp
xchg
lcall
pusha
push
outsb
out
jbe
mov
sahf
divl
add
fisttps
add
cmp
scas
jo
jle
aaa
inc
jecxz
xor
lret
repz
jbe
pop
std
jo
shlb
lret
jecxz
push
jp
in
subl
popf
or
lods
mov
pop
sbb
pusha
stos
push
cmpsb
push
inc
leave
push
cmc
stos
out
bnd
movl
pop
fidivrs
jl
loop
lock
imul
xchg
aam
mov
loope
jo
pop
sub
push
cmp
lret
sub
xchg
cs
cmp
call
mov
ret
mov
ss
loope
push
xchg
pop
mov
jecxz
add
and
and
pushl
mov
sub
mov
cld
xchg
bound
xor
adc
lock
cld
std
mov
mov
push
inc
fmull
in
lcall
and
les
ds
jg
sbbb
jmp
mov
cmpsb
and
mov
adc
imul
pop
mov
lods
test
and
jmp
ret
test
sar
mov
jge
pop
adc
imul
incl
dec
or
es
pop
in
test
push
jnp
cmp
add
mov
movsl
lret
out
lcall
sbb
aam
jns
jp
icebp
int
fsub
nop
and
jmp
int
adc
push
dec
sub
pushl
mulb
js
push
orl
mov
inc
add
cmp
cld
or
pop
pop
imul
dec
and
sbb
jg
mov
push
push
xchg
or
lret
dec
pop
push
ljmp
cmp
xor
enter
or
js
sbb
lret
incl
punpcklbw
mov
pop
rolb
jnp
push
inc
lret
test
inc
decl
inc
cli
sahf
ss
fnstenv
xchg
xchg
insb
les
xchg
cld
shl
cmp
jmp
decl
inc
sbb
les
and
jmp
cmp
in
jmp
inc
les
pop
cmp
jnp
jae
jnp
in
mov
jns
add
jge
mov
popf
mov
sti
call
sbb
pop
jo
xor
inc
out
call
gs
cmp
incl
fwait
jno
mov
add
data16
mov
in
idivl
push
lcall
or
pushf
push
movsb
mov
and
orb
fistpll
lcall
mov
nop
lret
cmp
sbb
stc
cmpsl
enter
out
adc
cmc
mov
sbb
dec
xchg
out
xchg
fdivl
clc
cwtl
das
add
pop
inc
mov
add
mov
lcall
sub
cmp
mov
aam
pusha
imul
sbb
sbb
or
aam
mov
pop
sti
cmp
inc
cmpsb
jbe
loope
ljmp
inc
iret
pop
xor
pushf
xchg
imul
aas
pushl
xchg
jnp
push
call
mov
mov
shr
adc
fs
cmc
cmp
jge
mov
pop
out
mov
aam
in
and
mov
sbb
mov
jg
push
cltd
jle
xor
hlt
adcb
mov
mov
outsb
insb
sarl
xor
push
scas
cli
incl
push
aas
and
push
out
in
dec
push
sub
movsb
cmp
decl
jge
cmc
xor
xlat
orl
jecxz
mov
adc
lcall
outsl
mov
cmp
imul
ljmp
push
adc
int3
dec
jl
mov
dec
lds
popa
inc
jp
into
mov
call
inc
mov
jle
jno
cmp
sub
ljmp
pushf
repnz
faddl
fldt
aad
leave
sbb
mov
pop
push
cld
mov
pop
xchg
jno
mov
rorl
lds
push
stos
pop
notl
lods
and
aad
insb
or
jg
xchg
and
sbb
and
adc
imul
xchg
out
mov
jmp
ja
out
inc
add
push
test
adc
sub
jo
push
xchg
mov
pop
dec
inc
push
in
ficoms
sub
pop
sbb
push
inc
lea
mov
sbb
iret
aad
mov
xchg
pushl
pop
in
cli
test
jns
fmul
mov
mov
jo
jg
enter
inc
aad
dec
std
jp
mov
das
lds
or
dec
aas
jge
dec
out
sbb
jno
push
xchg
cmp
sub
sub
xchg
pop
cwtl
add
std
movsl
sub
mov
jno
inc
stos
shrl
insl
lret
fcompl
in
popa
stos
push
idivb
push
cmp
test
jmp
push
and
repnz
mov
imulb
icebp
sub
je
lods
das
push
and
imul
popf
xor
lea
negb
outsl
sbb
rolb
pop
insl
popf
push
mov
dec
sbb
sbb
push
ljmp
xchg
sahf
or
incl
call
out
cmp
lea
and
jmp
sbbb
mov
out
adcb
sub
fcomi
add
imul
jmp
add
shlb
lahf
inc
dec
fcoml
jno
pop
jl,pn
popf
sahf
jmp
insb
adc
lds
sbb
mov
sub
movsb
int
fsubr
sub
ljmp
push
push
inc
inc
jmp
push
lcall
or
push
insl
or
lods
lahf
clc
dec
sbb
jl
jmp
jmp
mov
inc
in
push
xchg
mov
leave
cmp
pop
xor
mov
addr16
jb
mov
mov
xchg
xlat
and
push
dec
iretw
rcrl
adc
shrl
lcall
test
insb
and
mov
out
push
add
inc
sbb
pop
dec
inc
mov
jae
aad
mov
pop
movsl
or
outsl
ljmp
sbb
cmp
sahf
mov
decl
daa
mov
insl
lods
daa
fstps
mov
push
ffree
push
rcr
cmp
jae
inc
xchg
enter
jl
or
mov
mov
and
push
add
mov
jl
sahf
push
cmp
fldl
in
int3
rep
clc
mov
xor
ljmp
rorb
and
adc
add
and
in
add
das
cmp
mov
add
fwait
outsb
push
add
sub
or
push
aas
loop
test
adc
popf
push
daa
push
mov
sbb
jmp
push
sub
lcall
add
mov
imul
int3
iret
push
iret
cld
push
add
clc
push
mov
fucomp
outsb
dec
mov
push
cmc
ret
stc
insb
sbb
dec
ja
sbb
cmp
xchg
ds
push
out
icebp
call
pop
cmc
xlat
xchg
pop
pop
rcrl
fcomip
mov
fisttps
pop
loopne
popa
lret
sahf
xchg
and
pop
bnd
pop
lods
decl
out
sbb
fiaddl
mov
test
and
clc
pminub
fnstenv
pop
fsubrs
jmp
xor
in
clc
dec
jne
mov
mov
je
mov
xchg
cmpsl
jle
shll
cmp
xor
movsl
mov
sbb
mov
sarl
clc
adc
out
clc
xorl
adc
sbb
ret
mov
sub
int
cmpsb
jmp
daa
xor
arpl
rcrl
add
rcll
adc
icebp
call
jmp
mov
sub
out
sbb
fsts
insl
cmp
decl
jnp
and
cld
pop
mov
cmp
add
lcall
and
stc
pop
jae
hlt
inc
movsl
mov
add
pop
mov
pop
fsubs
dec
dec
dec
subb
decb
lret
sbb
mov
xchg
mov
mov
xchg
add
adc
pop
es
add
xchg
and
pop
int
arpl
out
loope
ss
push
jp
push
or
int
and
inc
fnop
nop
inc
and
pop
mov
jae
mov
mov
xorb
inc
insb
movsl
mov
push
aad
decl
call
push
mov
out
jg
sahf
push
mov
mov
in
mov
or
jle
jne
sub
popf
push
outsb
ljmp
jnp
ficomps
fsubrl
mov
loopne
dec
enter
stc
imul
lcall
pop
rcll
test
incl
sub
xchg
scas
loop
mov
das
pop
scas
or
in
mov
dec
pop
push
scas
loope
aad
lcall
cs
push
repz
adc
arpl
mov
sbb
out
lahf
shll
loop
repnz
in
es
pushl
shrd
imul
cmp
cmp
xor
and
jmp
and
push
mov
xchg
aad
ljmp
jp
or
lds
dec
or
lret
int
mov
ja
stos
push
int
pop
filds
cmp
xor
incl
lock
dec
sbb
insl
bound
ljmp
lock
lds
movsl
lcall
sbb
lea
add
or
test
pop
pop
cs
xchg
dec
fcomip
jmp
cmpsb
add
and
dec
and
adc
mov
int3
fcoms
cmp
mov
xchg
mov
loope
xor
jmp
out
mov
mov
or
les
mov
mov
loop
and
and
test
fwait
out
test
jne
iret
xchg
push
test
xor
cwtl
sar
jecxz
clc
decl
pop
xchg
pop
out
aas
xchg
mov
mov
fistl
mov
or
jg
xchg
mov
xchg
ffree
xor
sbb
sub
xchg
icebp
jle
mov
sub
int3
jg
jns
call
pushf
rcll
mov
test
dec
jecxz
cli
inc
pop
imul
xchg
dec
and
mov
pushl
addl
push
xchg
xor
xor
xchg
lret
roll
pushl
push
aas
mov
xor
jbe
pop
push
jmp
out
inc
adc
pop
dec
pop
mov
ja
adc
sub
pop
mov
inc
sub
orb
rorl
pushl
lret
dec
repnz
pop
jl
cmpsb
out
negl
push
xchg
pop
dec
movsl
sti
orb
push
and
xchg
jp
sub
pop
jmp
adc
fstpl
call
std
incl
sahf
or
jge
dec
loope
sub
notb
lods
xchg
fsubrl
jg
jg
lcall
xor
mov
icebp
add
lods
stos
dec
int
incl
push
pop
push
adc
or
das
insl
jl
pop
add
popf
mov
mov
or
dec
sbb
idivb
mov
xor
xchg
cld
mov
out
lods
push
jmp
frstpm(287
ds
pop
or
push
clc
insl
mov
std
sbb
test
mov
pop
add
jbe
sarb
mov
sbb
fcompl
push
mov
mov
cmc
jl
cli
repnz
push
and
jne
repnz
fcompl
push
or
in
push
aaa
sahf
pop
push
mov
fistpl
dec
imull
cmp
jmp
jb
sub
out
xchg
push
jo
int3
and
fnstenv
mov
xlat
mov
aaa
dec
stos
jecxz
push
fmul
or
pushl
std
lcall
into
cmpsl
xchg
mov
push
adc
in
cmp
jbe
push
mov
decl
mov
imul
inc
push
pop
shll
dec
rorb
cld
int3
int3
lea
ret
insl
push
jo
push
ds
cld
pushl
pop
cmp
lret
mov
rclb
leave
sti
lea
incl
flds
xchg
test
hlt
stos
ficompl
mov
sbb
in
cs
clc
adc
lcall
xor
mov
das
pop
xor
or
cwtl
cmpsl
je
pop
int
imul
jb
adc
insl
add
ljmp
negl
cmpsl
outsl
popf
cmc
xor
mov
mov
daa
xor
aam
ret
hlt
pushl
rorb
lret
pushf
aad
sbb
test
call
aas
mov
sub
jnp
jecxz
call
xor
sub
adc
pop
in
mov
sbb
decl
push
aas
stc
cltd
pop
add
xchg
je
repnz
clc
cmp
aaa
pushl
jp
xchg
dec
cmp
jno
jns
sbb
jbe
jb
sub
push
jg
decl
mov
jmp
jle
test
mov
xchg
sbb
mov
iret
pop
pop
icebp
ljmp
in
fidivl
add
scas
repz
push
xor
je
nop
inc
or
adc
cli
enter
inc
pop
roll
inc
inc
push
mov
js
arpl
outsl
clc
push
adc
aaa
fsts
inc
scas
scas
push
mov
les
jmp
dec
cmp
jl
lea
and
xchg
inc
in
pandn
adc
test
popa
jg
pushl
cmpb
jle
fwait
testl
add
hlt
jo
push
mov
idiv
fistps
outsb
repz
fimull
pusha
mov
out
cmc
shll
call
push
icebp
mov
gs
test
stos
mov
or
subb
jae
sub
fistpll
sarl
xchg
fstl
hlt
adc
jge
xchg
data16
call
lds
popl
adc
shrb
add
pushf
dec
jb
test
aam
mov
arpl
sahf
push
xchg
sub
test
add
cmp
jbe
xlat
sbb
add
xchg
out
mov
pop
dec
inc
and
pop
jns
ljmp
popf
cmp
sub
add
sbb
es
mov
push
sti
lock
arpl
push
cmp
and
cmp
hlt
push
inc
mov
xchg
insl
gs
mov
shlb
xor
lods
push
add
lds
pop
or
lcall
cmpsl
in
stos
and
cmp
loopne
cld
mov
mov
sbb
stos
ja
decl
and
pop
iret
or
daa
cmp
ss
test
popf
xchg
or
xchg
mov
cmp
xchg
add
or
adc
and
jne
out
mov
decl
sbb
mov
inc
sub
clc
dec
bound
sbb
cmpsl
xor
ljmp
sar
aam
push
jno
sub
cmc
fucomi
sbb
pop
mov
xchg
pop
dec
inc
ljmp
incl
sbb
xor
popa
js
xor
std
jnp
dec
adc
jecxz
out
call
pop
hlt
mov
push
je
or
xor
inc
mov
jae
mov
cmp
pop
lock
dec
pop
test
jns
movb
jo
push
aad
jp
sub
mov
jg
cmp
rcl
daa
leave
jl
adc
push
mov
push
jg
vpackssdw
cmp
cwtl
mov
cs
popa
dec
adc
daa
das
jbe
dec
es
sub
das
rcr
decl
or
mov
pop
mov
xlat
xchg
add
mov
fnstenv
jg
lcall
inc
sbbb
movsb
push
cmp
int3
in
pop
arpl
add
clc
gs
sub
lock
jmp
js
mov
out
jno
add
cwtl
and
inc
rcrb
test
pushl
mov
cmp
push
stc
jge
xchg
xlat
icebp
mov
and
data16
rcl
cmpsl
inc
loope
pop
lret
cld
sub
outsl
push
sub
loop
xor
adc
jmp
in
push
adc
pushl
push
ret
mov
and
mov
into
pop
ljmp
push
jne
push
xor
lods
es
dec
sahf
aas
insb
cwtl
or
inc
push
mov
fisubrl
lret
or
sub
imul
in
lods
add
xor
cli
ljmp
sbb
cmpsl
and
inc
lcall
ljmp
mov
ljmp
fimuls
shr
popa
or
jp
or
pushf
fildl
xlat
push
adc
pop
lods
mov
test
sahf
xchg
push
test
jne
jne
stos
pushf
test
out
mov
lcall
mov
xor
es
out
mov
stc
mov
int
sub
pop
mov
pop
push
std
ljmp
xor
js
das
sahf
push
push
outsl
scas
addr16
adc
loopne
push
push
mov
or
adc
xor
shl
ljmp
ljmp
push
adc
aaa
sub
inc
xor
ds
test
dec
mov
pushl
daa
add
ljmp
lret
adc
xchg
add
movsl
clc
cmpb
ja
out
lret
jmp
cwtl
loop,pn
mov
repz
push
addb
add
cltd
out
xor
push
or
and
je
outsl
or
loope
pushl
mov
or
or
rorb
inc
mov
jge
rcll
jbe
ror
repz
lret
xor
enter
push
mov
lret
dec
pusha
punpcklwd
aad
sbb
in
jl
int3
movsl
scas
ss
imul
mov
mov
cli
call
sahf
add
mov
negl
addb
mov
jno
push
rcl
repnz
mov
push
and
push
in
push
pushf
lock
aam
mov
mov
mov
sbb
loopne
ret
push
mulb
mov
push
sbbb
pushl
mov
push
repnz
ret
cltd
mov
sbb
test
pop
fidivs
cs
cmpsl
push
test
ja
scas
fists
sti
aaa
cmp
inc
mov
jp
int3
jecxz
es
insb
aam
pop
jbe
mov
sbb
mov
sub
nop
pop
in
mov
flds
mov
mov
out
adc
mov
cmp
mov
xlat
mov
pop
add
clc
data16
adc
add
aaa
mov
ljmp
mov
cmp
lret
jae
fisubrl
or
cmpsb
cwtl
cmpsb
stos
pushl
nop
and
push
outsl
mov
pop
push
sub
les
loopne
into
stos
mov
jb
decl
xchg
sahf
add
mov
cmp
push
push
mov
pop
jl
sub
aad
aad
ljmp
pop
mov
or
dec
aaa
push
and
pop
push
hlt
inc
pop
xchg
xchg
cld
mov
lcall
cs
ljmp
lret
stc
lods
jno
dec
sbb
cmp
jb
xchg
cmpsb
lcall
ds
fsubs
push
bound
ret
int3
pop
clc
out
adc
xchg
push
cmc
cmp
pop
add
pushl
sahf
sahf
sbb
mov
mov
or
push
jp
and
popf
sbb
sbb
pushl
clc
push
test
test
fldt
sbb
mov
cs
adc
push
mov
imul
decl
jb
loop
lock
jb
int3
scas
mov
loop
adc
xor
push
jg
ja
decl
stos
in
imul
dec
cwtl
lcall
xchg
test
mov
fwait
push
mov
jp
cmc
gs
fisubl
add
lcall
in
inc
inc
std
cmp
aaa
es
popa
test
pushf
jno
loop
push
decl
hlt
push
lahf
loopne
pop
or
stos
dec
sbb
andl
bound
jns
cmp
call
push
imull
cwtl
mov
fcomip
cli
inc
out
xchg
inc
pop
mov
mov
sbb
jne
ljmp
in
fwait
arpl
mov
jmp
dec
mov
pop
pop
lods
jo
add
cmc
decl
test
add
je
mov
or
rolb
cmp
lahf
rorb
push
push
dec
jae
pop
pushf
ss
fsub
aas
sahf
inc
test
mov
loop
push
xor
inc
mov
push
stos
fucomi
mov
sti
es
mov
shlb
adc
lea
add
dec
dec
jg
orb
sarb
mov
lcall
jne
sub
in
jb
outsb
add
leave
gs
rcll
dec
adc
push
clc
cmp
lcall
cmp
out
or
mov
gs
cmpb
sbb
sbb
js
mov
ljmp
cmc
inc
mov
mov
lret
bound
fistpll
or
imulb
je
addr16
mov
lahf
sbb
lds
sub
add
stos
add
dec
and
lcall
mov
scas
outsl
sub
data16
inc
cmp
jo
jno
jmp
mov
fwait
call
and
sbb
push
fcomip
pushl
ret
jge
jg
push
clc
mov
jl
test
xor
add
xchg
jg
cld
jb
add
pmaxsw
ret
push
adc
rcl
inc
test
push
sbb
imul
out
dec
pop
xor
jne
test
into
ljmp
ljmp
or
in
out
mov
push
xor
xorl
into
push
sub
clc
in
fildll
fs
fcomps
imul
leave
dec
sub
jno
js
cli
add
pusha
out
int3
int
mov
adc
cs
add
aaa
mov
les
sbb
lcall
jp
inc
inc
sbb
xchg
leave
fsubrl
mov
cmp
jge
lcall
cs
jmp
testl
jb
mov
and
fucomip
mull
fsubrs
xchg
mov
out
test
add
add
call
inc
insb
or
imulb
fdivs
sub
xchg
cwtl
or
push
call
loope
insl
repnz
ret
iret
dec
add
outsb
repnz
add
jge
aaa
pop
icebp
pop
loopne
loop
jge
imul
inc
xchg
mov
pop
jmp
xchg
mov
filds
loop
mov
dec
scas
ds
cwtl
outsl
stos
cmp
push
rorl
gs
lds
add
call
std
into
bnd
jecxz
mov
out
ljmp
pop
pusha
cmp
mov
cli
jb
and
mov
test
lods
enter
cmp
pop
inc
scas
scas
jmp
incl
cmc
cli
xchg
scas
popa
push
rcl
add
cltd
lock
mov
hlt
mov
test
ss
pushl
xchg
xchg
xchg
lods
daa
lahf
or
pop
mov
or
pushf
mov
add
mov
push
jmp
jb
adc
shrb
mov
insl
xor
xchg
mov
and
push
jp
fsubr
ljmp
dec
cmpb
xlat
mov
push
xchg
cli
outsl
data16
xchg
mov
pop
xor
std
imul
and
std
mov
imulb
inc
mov
xchg
sbb
lock
in
cld
pop
in
sbb
jmp
cmp
and
dec
adc
inc
mov
clc
test
adc
cmpsl
fwait
nop
imull
js
dec
lcall
or
rol
jmp
cmp
movsl
js
cmp
and
movsbl
xchg
pop
or
lcall
in
push
test
enter
icebp
icebp
dec
mov
xor
add
xchg
jb
add
jns
outsl
inc
ja
fimull
adc
insl
mov
jbe
lds
push
mov
or
cwtl
cmp
mov
xchg
shll
pop
mov
jmp
shrl
mov
ja
call
mov
push
andl
leave
jb
outsb
lods
push
push
incl
bound
xchg
jecxz
xchg
fcompl
pop
push
addb
mov
das
enter
lcall
sub
je
jns
stc
mov
hlt
enter
sub
and
decl
or
roll
push
fwait
add
mov
cs
fcoml
mov
mov
ja
mov
hlt
jnp
pop
jle
push
mov
and
sbb
call
cmp
add
in
idivl
sbb
outsl
sarl
sbb
ljmp
pop
mov
arpl
cmpsl
mov
pop
iret
pop
push
xlat
push
xchg
jmp
repnz
sbb
and
and
decl
ljmp
pop
les
fldcw
push
iret
jne
xchg
jo
ret
pop
mov
call
xchg
lcall
in
sahf
lcall
cmp
pop
mov
xchg
cli
leave
pop
xor
incl
sbb
ret
jno
repz
rclb
std
xor
add
mov
and
push
dec
jae
icebp
jl
iret
cltd
sti
jl
lds
inc
push
mov
ret
fwait
daa
push
xor
sbb
aad
in
jno
int
aaa
incl
cld
inc
insl
inc
femms
aam
push
negw
popa
icebp
push
hlt
jmp
adc
sub
mov
movsb
add
inc
jecxz
xor
arpl
sbb
imul
ljmp
jns
outsb
je
xor
out
fcompl
leave
sbb
pop
repz
in
cwtl
and
rol
sub
lcall
rep
mov
dec
adc
fdivl
icebp
test
dec
sub
push
in
jp
stos
fwait
loop
fs
mov
aaa
add
jp
aam
mov
sub
ret
and
fistpl
sub
jp
call
mov
jle
fninit
mov
push
and
xchg
xchg
mov
jg
or
inc
mov
pop
push
ret
pop
jo
inc
dec
testl
js
push
xchg
movaps
clc
sbb
outsl
cmp
sbb
hlt
cmpsb
scas
pop
dec
roll
in
push
inc
rorb
sub
sarb
neg
jp
es
jmp
or
sbb
xchg
cltd
icebp
movups
mov
lds
mov
inc
xchg
repnz
rorb
lock
negb
jo
les
repnz
cmp
out
push
add
jg
call
sbb
xor
cs
dec
out
fs
repz
popa
push
sbb
out
or
cmc
scas
jns
fistpl
and
das
push
inc
popa
dec
push
mov
and
or
lcall
add
aaa
pop
lret
insl
scas
mov
std
mov
fiadds
push
out
mov
decl
arpl
dec
cs
mov
xchg
mov
fstps
scas
dec
lods
pop
shl
int3
dec
ss
fmuls
into
stos
lods
jns
lds
adc
orb
iret
or
sub
mov
je
cmp
call
subb
addr16
leave
stos
xchg
fstl
pop
inc
and
lret
lcall
loopne
pop
jge
enter
lcall
xchg
cmp
xor
jge
pusha
xorb
pop
fs
add
sub
cmpsb
pushl
lcall
popf
aad
ss
xchg
adc
pop
lea
cltd
sub
jmp
or
fwait
and
arpl
xor
mov
dec
jns
or
and
mov
movl
xor
sbb
pushl
add
fucomip
jl
adc
xchg
aam
icebp
and
fisttpl
push
call
jg
loopne
dec
xchg
dec
sbb
adc
jnp
pushf
xchg
mov
mov
push
mov
sbb
add
and
and
iret
insb
cmp
push
jecxz
inc
mov
mov
lcall
scas
and
flds
pop
movsl
add
fiadds
dec
push
xor
insb
and
aaa
xchg
out
lods
push
adc
ret
jmp
jl
jb
pusha
sti
sarl
inc
or
cli
lret
test
ja
out
movsb
mov
mov
pop
cmp
adc
bound
lods
lcall
cmp
out
hlt
lock
aas
jg
das
shl
nop
sahf
or
call
mov
insl
bound
aam
or
or
sub
test
loopne
cs
repz
mov
add
ljmp
addb
out
movq
fmulp
les
js
ljmp
pop
lods
or
bound
bound
xchg
icebp
mov
insl
xor
cmp
shl
call
scas
test
xchg
jmp
xchg
stos
das
repnz
rcr
test
call
and
out
mov
lret
inc
in
repz
std
lret
dec
shll
out
push
out
xchg
adc
int3
and
movb
call
xchg
jge
enter
sub
pop
pop
leave
add
das
test
jl
fwait
idiv
call
jne
dec
mov
addb
scas
pusha
adc
jle
pushl
sahf
and
sahf
popf
dec
xor
xchg
lods
outsb
jge
sbb
lock
stc
fisttpll
mov
int3
test
loope
jle
mov
xchg
xchg
ja
ljmp
lock
xchg
lahf
clc
xchg
push
jne
xchg
inc
daa
mov
mov
fs
aas
mov
nop
mov
stc
aad
inc
pop
inc
mov
int3
jmp
lcall
xchg
test
dec
mov
fwait
in
inc
adc
prefetcht2
jb
jg
test
pop
pop
fwait
into
movsb
sub
je
jbe
icebp
or
mov
stc
aad
sti
inc
xor
push
lcall
and
sbbl
rorb
mov
cmp
inc
enter
in
ljmp
mov
mov
inc
push
push
and
roll
sahf
mov
imul
decl
inc
js
pop
push
mov
dec
inc
adc
xchg
fcomi
fdivrp
mov
testl
loope
repz
adc
sub
xchg
dec
fwait
pop
sbb
stos
nop
dec
dec
mov
xchg
cltd
or
xor
jle
push
test
mov
aam
pop
sub
push
jmp
sbb
aas
sbb
cmp
push
xchg
in
sub
fst
jle
jnp
ljmp
and
pop
mov
inc
out
cli
add
mov
xor
jg
inc
adc
popa
fimuls
rcll
xchg
ret
sub
aad
jmp
ret
jle
call
jmp
das
inc
pop
out
pop
push
aam
fcoms
push
je
mov
incl
je
sub
cld
xchg
gs
aad
mov
cli
test
sbb
mov
lods
lods
cmp
add
xchg
xchg
pusha
cmp
push
in
in
inc
xchg
loope
fdivr
pushf
fisubrl
mov
outsl
fisttpl
stc
iret
adc
popf
and
cltd
popf
pop
std
std
or
jne
imul
cmpsb
test
lret
mov
push
mov
xor
incl
cmc
xor
iret
fwait
cmpsl
inc
cmp
repnz
inc
lcall
jmp
iret
cmp
xchg
cmp
in
ljmp
loop
fmul
pop
add
cmp
lock
iret
add
jb
cmc
test
dec
idivb
cmc
loopne
push
sub
lcall
add
adc
int
aaa
shll
inc
xchg
mov
mov
ljmp
push
daa
dec
jecxz
push
sub
pusha
dec
shll
out
into
lret
adc
pushf
dec
stc
jmp
mov
pop
outsl
or
or
in
pop
sbb
push
and
xlat
jnp
jnp
pop
cltd
sbb
pop
subb
or
push
mov
mov
pop
es
cs
call
fsubs
imul
pop
xorb
jle
adc
lock
add
cwtl
xchg
sbb
mov
pushl
xor
leave
dec
in
lods
mov
popf
imul
js
cwtl
fldenv
cmpsb
cmp
cmpsb
sbb
sbb
pop
cld
adc
push
stos
rorl
cmp
shll
pop
mov
or
out
cli
std
enter
fimuls
gs
jecxz
mov
lcall
loop
ret
insl
int
inc
pop
dec
sub
adc
stc
fimull
lcall
aam
mov
out
pop
mov
sarl
lods
jle
inc
inc
data16
lock
pop
mov
ljmp
jno
cmp
mov
fisubrs
pop
push
mov
std
mov
insb
lret
in
xchg
and
mov
jmp
call
jmp
les
xchg
mov
or
or
or
cmp
and
lcall
xchg
pop
test
sub
cmp
ja
xor
in
out
cli
int
adc
xor
insl
je
test
adc
jne
adc
call
movsb
int
clc
dec
adcb
or
and
insl
jae
call
jecxz
xor
jmp
aam
daa
rcrb
sti
and
or
jg
jle
mov
sbb
jmp
jo
mov
jne
mov
jbe
idivb
in
je
ss
iret
mov
or
cmp
decl
dec
ss
inc
test
fldt
mov
dec
xchg
daa
inc
mov
test
hlt
imul
xchg
enter
jmp
in
xor
shlb
mov
data16
mov
dec
icebp
adc
nop
push
push
sbb
sbb
lods
ljmp
push
sub
shl
jge
fs
inc
iret
fadds
add
lret
sbb
mov
neg
or
add
cmp
jno
test
xchg
je
and
push
cmp
jg
ret
sarl
pop
xchg
shll
mov
mov
cmp
dec
ljmp
iret
lret
into
lret
mov
mov
or
push
pop
cmp
ljmp
mov
pop
ss
cmpsl
stc
xor
cwtl
or
sarb
xor
pop
cmpb
shlb
xchg
lcall
negb
jmp
add
out
fcmove
push
dec
leave
out
ljmp
mov
in
adc
shlb
adc
lahf
jae
scas
enter
sbb
mov
repnz
cmpsb
pop
scas
push
mov
dec
mov
ljmp
aam
jo
pop
inc
sbb
mov
and
mov
ljmp
in
aam
push
xchg
daa
in
xor
popf
pop
inc
lea
mov
lods
push
jmp
test
shr
imul
xor
push
ja
sbb
sub
sbb
pop
and
jns
ljmp
add
scas
adc
push
shr
fists
movsl
jg
xchg
dec
cwtl
test
cmp
sbb
repz
pushl
xchg
jecxz
fldt
pop
or
ljmp
into
gs
adc
mov
xor
ljmp
adc
jl
lods
cmp
add
dec
or
adc
sub
push
jne
inc
mov
lods
jle
or
stc
imul
cmpsb
pushf
rclb
dec
iret
into
test
push
scas
add
into
sbb
pop
inc
sahf
mov
int
sbb
aam
testl
adc
rcrl
pop
js
leave
push
dec
sub
mov
call
adc
sbbl
dec
or
xchg
mov
fnstsw
jg
aad
loopne
jg
sbb
and
inc
cmc
xchg
add
pusha
mov
mov
or
cltd
add
or
mov
pushl
cmp
pop
pop
popa
lock
mov
fidivs
jne
dec
scas
aam
test
shlb
call
cli
xor
stos
lret
jbe
inc
lds
sub
and
incl
xchg
xorb
in
out
cmc
mov
inc
ucomiss
jo
pop
cld
add
inc
and
pop
cmc
mov
jo
mov
aad
loope
in
mov
jg
mov
movsl
or
hlt
int
dec
test
sbb
or
adc
out
inc
incl
and
decl
xor
ljmp
nop
imul
fcoms
out
adc
push
xchg
cmp
mov
mov
jns
and
mov
loop
loope
ret
pushf
adc
ret
jne
test
push
adc
sub
jmp
dec
ret
jle
roll
mov
mov
insb
pushl
test
mov
idivl
sub
dec
mov
xchg
pusha
cmp
decl
out
jne
cmp
mov
cmp
fidivl
call
pop
cmp
lea
jmp
loopne
int3
jne
jo
repz
and
sbb
push
pop
xor
adc
pop
or
push
out
xorb
scas
push
push
imul
or
push
sti
outsb
in
repz
mov
cli
les
movl
mov
cmp
mov
fbstp
movsl
rcll
add
pop
cltd
mov
or
fistps
scas
add
mov
cwtl
sbb
nop
aad
ds
jg
sbb
add
das
fisubl
and
jg
jle
fimuls
xchg
push
pusha
push
jmp
outsb
daa
cmp
vpunpcklbw
dec
xor
xor
std
popf
sbb
mov
xchg
icebp
push
sbb
incl
and
pop
mov
push
test
ljmp
rorb
inc
dec
clc
push
loopne
call
lcall
filds
fcmovb
scas
mov
mov
filds
pop
mov
mov
lods
fdivr
out
clc
dec
add
adc
mov
push
rcr
sub
pop
ret
test
mov
dec
in
mov
adc
sarl
or
push
mov
xchg
xchg
pop
mov
sti
push
lods
sub
inc
fnstcw
mov
jb
or
popa
push
cmp
lds
scas
stos
fs
jg
xchg
mov
sbb
inc
fdivs
icebp
jnp
sbb
cmp
cs
pop
inc
sub
dec
or
lea
test
icebp
aam
cmpsl
pop
xor
cmp
sbb
fimuls
push
pop
mov
pop
dec
out
shl
cmp
sahf
sub
leave
mov
fdivrl
mov
cwtl
dec
inc
jae
inc
fadd
lods
jmp
mov
test
insb
push
test
out
incl
mov
popa
cltd
pushf
inc
cmc
outsl
and
adc
pop
xchg
mov
mov
scas
sub
add
pushf
iret
in
pop
fstpl
inc
jnp
push
es
push
mov
cmp
push
and
lcall
pop
lock
sbb
sbb
cmc
cld
aam
jns
test
cmp
sbb
dec
or
aad
cs
getsec
or
jg
pop
jnp
lcall
daa
repz
stos
rol
sbb
jb
cmp
mov
cs
daa
xor
push
lods
xor
jb
jo
and
ficompl
enter
decl
das
pop
lea
mov
test
call
jg
adc
rcrb
test
in
jmp
jmp
aaa
xor
test
push
hlt
nop
sahf
adcl
adc
cmc
xchg
pushf
incb
mov
decl
out
mov
popa
pop
cmp
adc
jmp
push
cmp
push
cmc
ss
pop
sbb
rolb
add
fdivrl
push
push
cli
pop
outsb
std
fildll
aaa
jg
xor
ret
scas
xor
in
push
inc
rcl
inc
iret
pop
movl
jae
repnz
ret
mov
hlt
lock
push
lock
jg
or
cmp
and
pushf
cmp
lods
or
inc
dec
xchg
push
mov
insb
incl
std
pushl
jg
jae
cmc
add
imul
lds
insb
mov
fisubrs
decl
mov
out
sbb
scas
cld
push
sub
pushf
dec
pop
dec
arpl
add
cmp
jmp
or
cmp
shl
pop
dec
daa
push
popf
xor
cmp
add
call
addr16
lock
sti
loope
xchg
pop
dec
sahf
aaa
sarl
shld
adc
and
incl
jle
daa
dec
push
xor
sbb
push
add
lahf
push
jne
push
ficompl
inc
jmp
mov
gs
adc
insb
daa
push
add
fsubrs
decl
inc
popa
test
pop
adc
pop
addr16
in
push
test
inc
add
aad
sahf
ret
push
inc
lods
in
pusha
lahf
push
loop
aas
xchg
ja
adc
xor
jmp
mov
clc
xor
inc
ljmp
xchg
push
mov
jg
cmp
lcall
xchg
cltd
es
pushl
mov
pushl
mov
mov
mov
push
divb
cmpsb
rcll
leave
fdivr
mov
cmpsl
pop
cmp
mov
es
arpl
outsl
adc
sbb
ljmp
in
and
cmpsb
andl
dec
and
pushf
sahf
cltd
adc
xlat
xor
dec
cmc
call
imul
sub
cmpsb
in
into
jecxz
fstl
sti
shl
insl
mov
xchg
iret
aas
jae
icebp
test
mov
fdivr
xor
mov
pop
je
cmp
xchg
aam
xchg
or
and
mov
clc
push
mov
ja
clc
decl
mov
cmpsl
cmp
shl
test
dec
addr16
or
clc
or
ljmp
fidivrl
lds
lret
idivb
mov
jns
enter
jae
xor
call
cld
sub
stos
pop
fnop
cld
sbb
lahf
mov
push
jmp
testb
push
ss
push
iret
scas
in
idivl
ljmp
adc
or
push
dec
fildl
test
aam
scas
decl
cld
pop
fldt
int3
sbb
cmp
inc
ret
dec
jecxz
adc
jne
inc
jp
and
fcompl
loop
repz
icebp
jg
aad
xor
jle
cmpb
sub
stc
stc
fidivs
dec
mov
shl
and
jecxz
adc
fbstp
call
mov
popf
sti
pop
andb
cmp
cmp
push
jg
stos
decb
xor
js
jg
mov
gs
pushl
es
out
in
scas
xor
lcall
in
hlt
outsb
int3
cmp
call
and
pop
iret
iret
test
xor
or
aad
ret
adc
inc
loope
xchg
lea
sarb
lcall
cmpsb
das
in
jp
mov
hlt
mov
and
xchg
outsl
jae
pop
jmp
stc
in
lcall
add
mov
xchg
push
bound
test
mov
call
js
fldcw
pop
lcall
decl
pusha
addr16
lds
dec
outsl
add
arpl
outsb
add
sub
pushl
inc
push
in
jne
adc
pop
pop
sbb
fldenv
es
bound
call
mov
ret
jbe
fs
xor
ret
and
shrb
in
lcall
int
sbb
adcl
test
into
shl
fs
inc
jecxz
and
clc
mov
xor
out
dec
and
aas
sbb
or
add
ljmp
push
cmp
pop
scas
aas
mov
push
in
dec
out
jmp
imul
int
ficompl
fmuls
mov
xchg
cmp
jmp
addl
cmpsl
jno
xor
mov
out
xor
ljmp
lds
fwait
insb
aas
and
shl
push
fisttpll
incl
pushl
jle
mov
loopne
pop
stos
sub
idivl
push
mov
push
sbb
test
jmp
mov
outsb
jae
ret
or
sbb
sbb
bound
jno
stos
mov
cmp
mov
jb
push
sarb
cmpsl
nop
lahf
dec
ret
pushl
dec
xchg
or
lahf
outsl
xor
jge
xorl
xchg
cmp
cld
xchg
hlt
pusha
mov
call
jmp
mov
cmp
sti
rcrb
push
aad
cmp
jg
inc
mov
les
push
divb
je
test
ficoms
shll
push
inc
lahf
dec
push
lods
ljmp
iret
sub
push
cli
ror
jge
dec
cld
loope
frstor
cltd
mov
inc
lods
ret
popa
pop
inc
js
movsb
mov
mov
push
inc
daa
pop
rclb
mov
ljmp
decb
rcll
es
sub
dec
mov
push
mov
mov
pop
cmp
sar
jmp
ja
pop
xor
scas
pop
xlat
sub
sub
ja
es
ljmp
hlt
lret
add
push
enter
sahf
xchg
jg
or
arpl
fs
push
std
ljmp
dec
fisttpll
loop
push
dec
mov
mov
pop
fisubs
ljmp
xchg
and
dec
xchg
add
repz
shl
call
sub
filds
dec
or
xchg
in
mov
stos
loope
insb
add
push
out
int3
adc
mov
push
out
popa
jge
push
mov
cmc
push
push
push
inc
cs
or
sti
stos
sbb
jmp
arpl
jmp
aad
cmp
add
pop
daa
dec
lods
cmp
jbe
pusha
fmul
ret
imul
in
add
adc
loope
rcrl
jle
sahf
std
pop
rcl
jl
jmp
pop
jnp
or
lock
std
dec
push
jbe
pop
imul
mov
cmp
call
lret
rorl
scas
loope
out
mov
push
lahf
mov
xchg
lret
clc
and
insl
cmp
cmp
and
imul
ret
subb
xor
in
je
mov
jmp
mov
insb
inc
push
pushf
lock
roll
push
pop
and
lcall
mov
adc
mov
stos
fstpl
repnz
das
adc
jnp
aam
ret
pushl
sbb
xor
icebp
data16
idivb
xchg
in
stos
mov
movsl
out
divl
mov
push
aas
or
stos
xor
mov
add
sub
mov
je
movsb
call
mov
xor
push
jns
mov
adc
push
pop
lcall
movups
jns
sahf
cmpsl
push
popa
and
and
ljmp
dec
insb
pop
cli
outsl
push
mov
imul
cmp
mov
arpl
or
es
cld
loop
sbb
mov
ucomiss
call
int3
movsb
push
aas
fcmovne
mov
xchg
test
xchg
lds
decl
sub
add
sbb
jmp
push
pushf
mov
aaa
push
mov
or
inc
rolb
aad
sub
loopne
push
cmpsb
xchg
cmp
push
lcall
dec
xchg
int
repz
into
insb
test
in
push
mov
cmpsl
mov
mov
push
xor
xchg
enter
lcall
pop
iret
repz
out
enter
xchg
icebp
jnp
outsb
pusha
lret
incl
cwtl
pcmpgtw
aas
insb
adc
mov
movsl
sub
ret
in
decl
ds
rolb
push
cltd
dec
je,pn
out
inc
arpl
mov
push
pushl
mov
mov
es
je
stos
push
insb
imul
mov
adc
mov
lea
scas
pop
mov
leave
pop
push
and
mov
push
jmp
lcall
cmc
scas
jno
hlt
dec
daa
je
decl
jle
pop
inc
or
push
enter
mov
pop
mov
mov
jle
mov
mov
addps
insl
sub
dec
cmp
scas
dec
fxch
adc
sbb
mov
test
fsubrl
movsl
ljmp
mov
mov
jae
ljmp
ljmp
inc
sbb
ret
xchg
ljmp
fidivs
xchg
mov
sbb
ljmp
mov
dec
mov
addr16
das
dec
cmp
or
aas
ja
mov
sub
aaa
shlb
ljmp
aaa
push
adc
sbb
xchg
aam
and
pusha
xchg
pop
pop
cmp
dec
adc
inc
jmp
ljmp
jmp
in
dec
outsb
fadds
push
jae
push
fmull
adc
add
sub
mov
add
cltd
sbb
jg
mov
push
push
sahf
aaa
int
or
add
cmp
sub
xchg
cmpsl
sub
mov
decl
xor
out
adc
adc
fiadds
out
out
sbb
fdivs
mov
xor
js
sub
sbb
xor
movsl
ljmp
sbb
jmp
xchg
add
jecxz
stc
push
insl
les
ja
xchg
andb
inc
cmp
jno
pop
dec
and
inc
sub
cs
push
jmp
incl
xchg
add
shr
mov
iret
lahf
popf
mov
lcall
mov
jge
jmp
mov
xchg
shlb
dec
jb
ljmp
orl
ljmp
sub
xchg
fimull
inc
sub
test
loope
xchg
cmpsl
xlat
pop
mov
subl
pushl
cmc
jle
test
push
sub
mov
adc
jo
ljmp
lods
and
dec
shlb
xlat
cmc
fildll
pop
jl
adc
lret
nop
lods
shll
in
ljmp
cmp
and
imul
lahf
fldcw
cltd
or
cs
ljmp
ljmp
loopne
ficompl
cmp
push
jbe
add
orb
cmp
jmp
sub
push
dec
in
test
inc
push
and
into
arpl
sbb
lock
subl
adc
push
inc
mov
push
dec
scas
xor
pop
xor
mov
incl
fxch
out
pop
adc
mov
fstpt
movsl
inc
pop
sub
ja
in
inc
add
insl
jmp
push
pop
jne
notl
pop
ljmp
cwtl
xor
jmp
lret
sbb
xor
sti
dec
leave
out
enter
in
insb
inc
mov
mov
push
xor
stos
decl
add
mov
sub
xor
loopne
decl
lds
scas
lcall
cmc
adc
inc
push
inc
sarl
popw
loopne
daa
mov
ljmp
pushl
push
or
lret
andb
add
adc
cmpsl
sub
xor
add
fst
testl
ret
push
cmp
popa
mov
sbb
call
in
sub
fsubl
leave
mov
push
xor
test
into
bound
lods
std
test
call
lock
inc
inc
repnz
xchg
lods
js
daa
cwtl
test
cmp
mov
lcall
insl
xor
push
call
call
mov
inc
daa
nop
fldl
dec
xchg
sahf
xor
push
pop
mov
lahf
xlat
pushf
cmp
and
or
lcall
push
das
mov
or
dec
imul
fidivrl
scas
jne
mov
fs
sbb
mov
mov
xor
jo
adc
incl
add
repz
xchg
cltd
repz
push
sbb
mov
call
fcomp
stc
test
dec
push
jmp
push
icebp
add
mov
lcall
lcall
xchg
lret
fwait
cmc
leave
pushf
push
jb
loopne
xchg
lret
mov
mov
aas
sub
pop
push
adc
lds
mov
daa
shlb
fstps
arpl
xor
jbe
xchg
sbb
or
cmp
incl
xchg
das
mov
push
jns
insl
mov
inc
notl
imul
inc
jg
clc
call
mov
scas
jmp
xchg
mov
out
pop
sar
decl
inc
mov
icebp
mov
dec
je
popa
xlat
sub
mov
cmc
dec
push
sub
into
loopne
mov
sub
fnsave
cli
out
addr16
pop
out
cmp
adc
jge
mov
ret
inc
and
insl
sahf
mov
bts
push
adc
mov
pop
sbb
jne
jns
cmp
ficoml
adc
dec
mov
jge
movsb
push
lods
out
push
add
jp
cmp
lock
ljmp
decb
or
jl
push
aas
pop
cli
in
lods
push
popa
sub
cmp
ljmp
mov
lcall
jo
clc
and
ja
ja
mov
outsl
sbb
decl
jns
fcmovu
jmp
aas
test
jl
in
or
and
mov
mov
lds
les
mov
pop
addr16
stos
dec
adc
jmp
dec
mov
enter
lcall
test
aam
scas
push
ja
pushw
mov
ret
mov
dec
lea
into
xchg
rcr
jecxz
fidivs
pop
in
or
in
es
fistpll
call
clc
pop
shlb
icebp
ret
add
dec
xchg
jnp
insb
inc
add
outsl
mov
and
push
add
subb
imul
xlat
inc
xchg
pop
xchg
les
imul
stc
enter
xor
pop
jnp
dec
xchg
mov
cmpsl
lock
mov
jno
rcrb
lret
outsl
xor
decl
and
jge
mov
xor
es
aad
xchg
mov
call
adc
call
scas
cld
jecxz
std
call
test
sub
popa
popf
popa
jb
out
inc
pushf
lcall
ret
lock
pop
sti
or
aaa
int
nop
adc
add
rolb
push
cltd
push
push
ljmp
pushf
in
mov
and
or
in
push
push
out
jl
cli
int3
adc
inc
in
mov
sub
adc
out
mov
mov
stc
shlb
aas
aaa
add
sahf
mov
xor
cs
jae
sahf
jmp
mov
arpl
jg
jg
push
shrl
jb
jno
inc
pop
pushf
jb
mov
pop
call
and
inc
adc
aam
inc
cltd
out
es
aas
pop
int3
inc
xchg
fildl
aad
push
stos
ds
sub
mov
push
pop
xlat
xchg
jl
xor
inc
aad
mov
jns
inc
xchg
cltd
jge
push
lahf
mov
lret
xchg
leave
jl
addr16
push
call
sub
ljmp
ret
mov
sbb
and
faddl
cmpsl
pusha
push
incl
dec
add
mov
mov
sbb
mull
pop
pushl
rcrb
hlt
testb
loopne
dec
sub
xchg
popf
lock
mov
out
incl
cvtpi2ps
enter
nop
enter
xchg
and
or
fidivrs
xlat
sub
call
mov
pop
fstpt
scas
push
lods
inc
jecxz
shlb
cmp
push
pop
cli
cmp
andb
aaa
incl
icebp
pop
lret
xorl
icebp
iret
adc
iret
fimuls
mov
popa
arpl
mov
cmc
push
lock
iret
jo
push
jae
push
pmaxsw
dec
pushl
clc
sbb
mov
dec
mov
fnstsw
cmp
xor
jbe
bound
out
adc
adc
shr
jge
mov
into
push
idiv
leave
dec
dec
xchg
popa
cmpsb
hlt
test
call
fnsave
inc
cmpsb
push
and
imul
adc
pop
dec
jg
ja
movsb
leave
not
std
add
dec
stc
add
push
iret
jmp
add
xchg
adc
cmpsb
insl
and
pushl
adc
dec
fsts
jbe
out
fidivl
clc
cld
je
pop
and
insb
lcall
leave
add
cli
popa
cmp
stos
cmp
mov
add
xlat
add
jbe
dec
mov
cmp
inc
fwait
xor
inc
aas
pusha
outsb
xchg
mov
jo
lods
mov
xorl
mov
xor
dec
jmp
in
or
xchg
scas
faddl
nop
xor
jbe
inc
shrl
fimuls
fcomps
dec
pushl
incl
or
jle
rol
lds
rolb
mov
out
jg
call
dec
lock
inc
cmp
push
out
jecxz
ret
xchg
mov
jg
jmp
mov
sub
out
sub
loopne
insl
push
xor
lcall
sub
lods
ljmp
mov
scas
shlb
repz
outsl
in
sub
mov
addr16
push
inc
jmp
lcall
sbb
mov
sbbb
pusha
ds
mov
shll
gs
scas
aas
jg
mov
add
imul
mov
mov
nop
cmp
pop
testl
ret
fimull
pop
mov
jle
adc
mov
popa
test
test
gs
push
inc
push
insl
fildll
mov
ljmp
nop
scas
fnstenv
lea
cmp
mov
pop
std
jmp
sub
lahf
cmc
lea
xchg
shll
cmpsb
jle
dec
nop
out
jnp
xor
mov
lcall
xchg
mov
rclb
imul
pop
ds
pushl
fdivl
es
sub
enter
inc
std
cmp
mov
mov
cmp
push
mov
std
mov
cmp
imul
add
daa
pop
mov
lcall
adc
pop
sub
mov
push
imul
lret
sbb
loope
cmp
call
push
push
add
add
int
adc
adc
adc
inc
push
mov
loop
mov
in
and
mov
xchg
mov
xchg
ret
mov
jno
dec
nop
in
adc
out
decl
sub
loopne
inc
mov
lods
jmp
ss
cmpl
add
mov
xor
adc
rorb
jae
cmp
xor
or
out
and
push
lock
hlt
int3
jb
push
incl
sbb
fwait
adc
test
cwtl
pushf
jp
notl
mov
jmp
jg
push
fadds
push
add
dec
or
loopne
repz
lcall
leave
daa
loope
mov
ljmp
pop
pusha
aaa
nop
adc
xchg
loop
mov
mov
push
inc
fsubl
movsl
call
jmp
les
out
cwtl
ret
mov
adc
aas
cwtl
push
xor
dec
sub
or
add
cld
cmp
fadds
mov
stc
enter
scas
sbb
in
es
push
lcall
jecxz
mul
mov
xchg
or
ja
adc
xchg
inc
out
jne
jnp
mov
daa
ret
subl
sub
sbb
jp
outsb
add
dec
jne
inc
in
imul
xor
adc
div
divl
adc
push
repnz
ja
mov
sbb
imul
cmp
sbb
xlat
xor
xor
dec
mov
or
xchg
push
pop
in
inc
mov
dec
sub
imul
xor
cltd
fstpl
jmp
jne
push
inc
cmc
ret
sbb
neg
pop
stc
add
insb
fldenv
paddsw
cmp
call
push
arpl
repz
sbbb
lcall
lock
decl
lds
loopne
sbb
data16
pop
test
mov
mov
xor
xchg
lcall
mov
cwtl
jae
aam
jecxz
jp
lcall
out
inc
cmpsb
loop
incl
fs
ret
mov
sti
andb
mov
pop
loope
pop
sbb
add
jmp
js
mov
jbe
lea
pop
pop
mov
pop
or
popl
call
out
pop
sbb
ret
fwait
pop
pop
jle
test
cltd
aaa
add
fs
mov
mov
fstp
rep
gs
cmp
xor
das
adc
mov
or
pop
jl
push
scas
adc
add
jmp
push
push
pop
push
jmp
repnz
mov
adc
cmpsl
inc
dec
lods
mov
out
lds
jmp
xor
dec
shlb
lock
sbb
sub
addr16
pusha
pop
xchg
or
lcall
cmp
pop
js
or
mov
je
mov
stc
lods
pop
arpl
aaa
push
dec
xor
inc
ljmp
sbb
or
lea
push
call
iret
xor
pop
cmp
jno
iret
sub
jmp
pusha
leave
jmp
test
stos
xchg
pop
pop
fsubp
aaa
hlt
imul
jmp
inc
pop
stos
mov
mov
int3
int
mov
sbb
inc
je
and
cmpsl
fcomip
mov
adc
push
dec
aas
call
mov
stc
inc
mov
jle
sub
cmpsb
icebp
cltd
lahf
insb
sahf
mov
call
xchg
dec
xlat
add
ljmp
xchg
push
fmull
fwait
gs
jno
stc
mov
add
movsl
dec
pop
enter
cmp
push
lods
fisttpll
iret
call
lret
pop
mov
fldenv
fimuls
iret
je
jne
lea
xchg
mov
jmp
xor
xchg
xchg
es
fcmovb
pop
mov
pop
rclb
js
arpl
adc
fcmove
setl
ja
fwait
add
push
movb
mov
xchg
out
es
decl
outsb
jg
mov
sub
leave
loopne
fldl
push
lret
shlb
loop
add
dec
jg
sbb
mov
inc
enter
ficomps
adc
adc
inc
inc
lret
lahf
sti
jae
loopne
pop
xchg
pop
cmp
inc
jmp
sbb
movsl
test
paddsb
sahf
and
cli
mov
mov
fwait
js
clc
xchg
popa
cmp
jp
jmp
mov
xchg
pop
pop
ds
lods
stos
xor
sbb
arpl
mov
outsl
loope
test
jmp
add
arpl
fldcw
and
cwtl
inc
jbe
scas
cltd
out
and
mov
enter
or
mov
mov
dec
adc
fdivrs
aad
call
cmpsb
popa
xchg
lret
mov
aas
pop
sub
lcall
jg
popa
xor
sbb
sti
push
jecxz
scas
cmp
cmp
cwtl
fmuls
lods
int3
lods
fldl
adc
sub
mov
adc
rolb
and
xchg
outsl
sarl
decl
ljmp
aad
cmc
sarl
hlt
in
mov
push
xchg
jo,pt
lret
pop
xchg
int
or
lcall
in
into
jge
loopne
rol
aaa
push
cmpsl
xor
sbbl
sub
adc
mov
jmp
jno
addr16
jnp
pop
sarb
jle
sbb
jecxz
pop
sarl
rcrb
cld
out
outsl
mov
xchg
mov
add
sub
loopne
test
lret
jo
outsb
decl
sub
jmp
sub
loopne
xchg
jg
lock
loope
dec
dec
pop
mov
jno
sub
jecxz
jecxz
or
jo
pop
call
mov
xor
adc
sub
mov
out
pop
sbb
push
icebp
push
or
pop
or
jmp
and
adc
lods
imul
pushl
lahf
jle
jp
fwait
invd
xchg
add
xlat
adc
mov
and
and
in
cmp
pushl
mov
xchg
out
dec
lret
jge
shlb
dec
cmpsl
xchg
leave
cli
jg
pop
xor
pop
push
out
pop
push
les
pop
xor
iret
jg
outsl
and
ljmp
push
pusha
stc
xchg
and
test
add
mov
jmp
cmp
and
mov
jmp
fdivr
out
clc
std
push
pusha
jae
imul
fistpl
pusha
ret
push
aaa
in
pop
movsb
lcall
xchg
insl
add
fs
dec
in
pop
jg
mov
subb
pop
ret
testl
repnz
js
sbb
jg
inc
lahf
or
push
ljmp
rorl
cltd
mov
out
shrl
jnp
pop
mov
push
fsts
mov
fdiv
jns
jle
mov
push
xchg
push
push
rcll
fldt
mov
ds
mov
push
aad
test
push
test
popa
call
call
aad
pusha
inc
test
cltd
clc
pop
or
cs
pop
ret
clc
adc
insb
mov
jg
mov
push
cmpb
mov
and
add
ss
mov
cmp
add
clc
inc
outsb
rorl
jae
adc
mov
inc
cmp
inc
leave
push
inc
ljmp
addr16
mov
ljmp
les
or
push
pop
adc
jne
dec
and
mov
ljmp
std
push
inc
add
into
out
out
out
add
jg
cmp
fs
pop
data16
mov
scas
in
out
cld
or
les
lret
lcall
outsb
mov
xor
sub
add
mov
ja
sub
cmc
dec
into
xor
mov
aas
jmp
push
sub
sbb
and
fsts
pop
repz
or
lahf
xor
aad
cmpsl
ljmp
outsb
imul
xor
mov
incl
adc
sarb
xor
xor
push
push
inc
sbb
aam
movsl
ror
loopne
and
cli
or
das
cmp
sub
aaa
xchg
dec
push
cmp
and
pushl
and
mov
dec
add
in
call
and
pushf
ds
lods
icebp
add
fbld
xchg
arpl
cmp
inc
dec
mov
call
or
jbe
sub
jmp
fbstp
inc
and
pusha
push
mov
push
sbb
sub
dec
loope
call
ds
mov
dec
sub
pop
or
insl
das
push
jmp
loopne
pushl
insb
sbbl
push
andl
lahf
and
pop
mov
xchg
xchg
std
call
shlb
popa
pop
inc
push
inc
push
jmp
aam
jo
loopne
xchg
mov
jmp
repz
stc
adc
push
xchg
test
test
enter
and
dec
push
dec
cld
sahf
sahf
gs
fcmovnbe
inc
dec
cmpsl
mov
sbbl
and
sub
ret
dec
in
pop
add
cmc
ljmp
int
lret
enter
hlt
jg
xchg
cmc
and
in
xor
or
adc
scas
push
mov
int3
push
cmp
stc
int3
jns
dec
lcall
and
pop
sbb
notl
push
data16
mov
test
sub
lcall
jle
nop
push
push
iret
int3
shrl
and
inc
pusha
sub
scas
movsb
mov
loope
mov
into
dec
mov
jl
mov
fucomi
shlb
xor
mov
popf
xor
or
fidivrl
mov
pop
jmp
inc
cli
addr16
mov
dec
jg
cli
call
and
test
or
xor
xor
imul
lcall
in
push
cmp
or
push
push
jmp
aam
movsl
jb
hlt
jecxz
testl
jbe
incl
mov
push
inc
stc
scas
mov
jbe
pop
sbb
fistpll
cmpsb
jmp
and
push
arpl
fnstenv
add
push
sbbb
es
xchg
sub
xchg
js
jg
fcoml
inc
and
loopne
cli
dec
cld
gs
mov
stos
lods
loope
mov
mov
movsl
sub
pop
jb
lret
arpl
dec
cmp
and
cltd
fmul
test
sbb
jp
repnz
mov
hlt
jne
push
mov
pushf
fnstsw
aaa
lock
jmp
jno
fs
dec
int3
loop
repz
outsb
call
jge
outsl
repz
sbb
lcall
in
sbb
insl
std
sahf
inc
ljmp
sahf
xchg
out
or
pushf
fs
or
pop
lcall
in
repnz
mov
rcrb
ss
mov
or
jns
incl
arpl
popa
adc
aam
sub
mov
cmpsb
mov
or
sti
push
arpl
cmpsb
jmp
cmp
aas
jne
outsl
and
xor
ds
ljmp
or
pop
mov
lods
int
add
pushf
in
dec
mov
in
addr16
mov
inc
leave
inc
sub
sahf
fsubrs
or
imul
mov
je
in
inc
xchg
cmp
mov
fsub
jp
xchg
and
sti
adc
push
xlat
add
push
jg
decl
lock
das
ja
or
jp
andl
dec
inc
cmpsb
stc
stc
test
add
mov
subb
lock
lock
dec
xor
adc
mov
xor
fsubr
sti
aam
bound
inc
sti
xchg
scas
hlt
dec
jb
roll
ret
push
mov
cmp
inc
xchg
lods
fmuls
jmp
ret
lock
into
xchg
inc
sahf
pushf
xchg
insb
dec
xor
inc
sub
sti
insl
push
hlt
push
andb
loopne
subl
sub
xor
jg
test
aas
loop
push
out
cmp
icebp
ss
ret
and
lds
mov
push
loope
push
pushf
add
inc
or
cmp
ljmp
mov
fildl
cmp
scas
fcoms
lcall
ljmp
mov
je
into
fcmovnu
mov
pusha
mov
add
std
add
clc
repnz
lods
jno
jns
lcall
mov
and
rcrl
or
icebp
jecxz
lods
push
or
inc
gs
jp
mov
sbb
cmp
mov
nop
icebp
cli
mov
outsl
mov
loop
cmpsb
pop
test
jle
mov
cs
lods
pop
fwait
call
out
cmp
jg
in
xor
pushf
loopne
sub
enter
pushl
loop
nop
fs
call
sbb
dec
insl
dec
or
idiv
lcall
push
pushf
fsubl
add
sar
call
sub
aad
cld
std
into
lea
sub
and
cmp
stc
xor
out
mov
pop
cwtl
sbb
sbb
fbld
cmp
xchg
add
out
clc
mov
inc
and
hlt
fs
jl
ss
in
pop
pop
in
add
jmp
cli
fs
mov
lea
mov
push
mov
dec
pop
pop
sbb
scas
add
and
push
fidivl
repz
sbb
xchg
call
add
inc
and
inc
scas
adc
and
pop
jns
aam
xor
cli
mov
jg
jmp
fcmovu
test
xlat
adc
orl
imul
and
xchg
cmpsl
mov
ja
fstpt
inc
mov
mov
outsb
push
push
inc
mov
pushl
fstl
mov
cmp
jp
call
mov
lahf
mov
cli
incl
xor
test
js
int3
std
call
icebp
jg
addb
and
outsl
sub
mov
inc
sub
jmp
das
fnstcw
xor
adc
cmpsb
popa
lret
cmpsl
push
push
jp
push
stos
push
imul
mov
mov
incl
xlat
sbb
loope
mov
sub
pop
in
or
cwtl
inc
xor
call
jns
outsb
popf
enter
or
add
jl
xchg
clc
or
xchg
hlt
inc
imul
incl
rcll
sbb
xlat
ret
mov
call
pop
lods
push
add
lods
jl
mov
or
xor
dec
jns
pop
int3
sub
call
cmp
cld
or
test
and
or
stos
adc
sar
lcall
clc
lods
out
push
inc
shlb
inc
jl
mov
mov
pop
adc
mov
pushl
adc
mov
jg
xor
lcall
clc
mov
pop
arpl
add
mov
lds
push
negl
daa
sub
call
sbb
arpl
rclb
add
hlt
mulb
cmp
xchg
incl
dec
das
insb
sbb
and
push
lahf
pop
add
jmp
jmp
loopne
test
jmp
lea
outsl
pop
aam
mov
pushl
movsl
movsl
pop
test
add
xchg
pop
or
jns
daa
mov
movsb
xor
inc
out
fisubs
cwtl
imul
cld
test
adc
cmp
pop
add
push
mov
stos
jbe
in
es
cli
dec
les
leave
adcb
xchg
mov
pop
xchg
inc
out
push
cwtl
inc
int3
mov
ss
aad
fnstsw
dec
notb
xor
sub
ljmp
sub
push
pop
mov
pop
xor
lret
sub
push
sub
pop
inc
pushl
lret
movsl
bound
add
fisttps
fbstp
sub
mov
movsl
in
js
pop
and
add
ljmp
inc
test
decl
adc
xor
jp
inc
push
cmpsl
adc
rorl
lret
pop
mov
ljmp
call
dec
movsb
lcall
out
lods
aas
pop
dec
clc
adc
push
mov
sbb
flds
popl
mov
and
xor
jmp
rorb
cmc
test
add
addl
lods
test
sarb
cmp
sub
mov
std
incb
sbb
jns
jae
clc
sub
inc
in
ja
clc
cwtl
decl
xor
and
pushf
push
cmp
addr16
addr16
movsl
test
outsl
jmp
xor
inc
hlt
aad
shrb
jnp
jae
and
ljmp
enter
test
sbb
fisubrl
fldln2
adc
mov
xchg
fs
popfw
mov
mov
call
fsts
inc
push
pop
shlb
jmp
jae
test
jmp
dec
sar
lcall
out
mov
cmpsl
imul
fisubl
sbb
mov
test
jbe
xchg
stos
loope
imul
adc
inc
pop
fists
fbstp
enter
pop
dec
jg
pushf
mov
jbe
inc
ds
xchg
inc
adc
xchg
inc
fidivl
movsl
iret
pop
push
sub
call
sub
adc
adc
jge
jno
mov
xorb
js
cli
ds
mov
add
popf
jecxz
outsb
sbb
sub
aaa
aam
in
mov
add
add
mov
fadds
xchg
inc
push
mov
add
in
or
ficompl
cmp
movsl
in
inc
cmp
add
dec
movsl
jbe
mov
pushl
loopne
ret
sar
dec
popl
int3
imul
dec
and
jg
push
mov
ljmp
jle
pop
icebp
pop
adc
xor
pop
fdivrp
jns
inc
sub
rclb
decl
out
incl
es
cmp
mov
outsb
mov
adc
xor
lcall
mov
push
pop
xchg
jle
cmp
lea
ja
aad
shll
mov
add
shlb
popa
adc
lods
mov
outsl
mov
ret
scas
je
insb
idivb
inc
and
call
fildl
and
mov
clc
mov
repz
out
adc
decl
call
rcrl
jno
xor
das
sbb
clc
add
int
out
loop
test
ljmp
xor
xchg
fldcw
cld
mov
jb
inc
sub
push
push
xor
jmp
movsb
and
xor
enter
pop
cld
testb
inc
ss
iret
pmaxsw
daa
std
jmp
lods
dec
cmp
push
stos
lods
dec
cmp
sub
ss
mov
push
call
add
push
sbb
jo
pop
lea
xor
dec
sub
cmc
pop
add
into
sub
cld
cli
mov
dec
jecxz
stc
add
test
jno
mov
or
xchg
pop
loopne
jge
jmp
ret
add
inc
mov
dec
jnp
xorl
aam
je
jmp
test
outsb
jp
data16
icebp
xchg
ret
add
jb
frstor
xor
fldl
jmp
jge
pop
cld
jg
mov
mov
sub
xlat
inc
dec
subl
out
or
decl
cmp
mov
push
insl
dec
jmp
loopne
push
insl
jno
outsb
sarb
scas
push
add
cmp
jmp
fsubrl
or
or
cmpsb
push
psubb
push
rcrb
jp
or
jb
jmp
or
sub
pop
fidivrs
cli
rcl
lods
lods
outsl
and
cwtl
ja
mov
push
std
decl
cmpl
outsb
in
sbb
lret
sub
pushf
jg
mov
xor
enter
sub
shrl
mov
dec
mov
call
call
cmpsb
push
xor
je
scas
lock
int
rol
push
mov
xchg
fcomip
lcall
adc
mov
testb
dec
cwtl
xchg
and
fisubl
call
lds
mov
mov
add
cmp
xchg
int
xchg
xchg
cli
rol
out
leave
out
hlt
incl
push
dec
xlat
bound
pop
mov
xchg
icebp
jae
mov
jmp
and
fmull
jmp
icebp
mov
mov
call
pop
xchg
mov
inc
imul
lcall
pop
in
mov
mov
cmp
pop
cmp
out
push
adc
sbb
xchg
sbb
outsl
clc
rorl
aad
and
daa
das
xor
push
arpl
and
cmp
ljmp
and
in
cmpsb
cld
push
testb
push
mov
pop
pusha
add
cwtl
imul
ljmp
test
sbb
add
ret
xor
push
push
ja
push
xchg
jle
test
decl
leave
sub
sbb
fimull
repz
sub
clc
mov
pop
sub
and
sarb
js
sbb
sub
add
fisubrl
adc
xor
or
inc
cmp
mov
pushl
add
jl
ss
push
jg
rorl
lds
cmc
dec
mov
popf
sub
loopne
js
stos
cmpb
adc
mov
bound
into
inc
pop
subl
dec
adcb
mov
jno
mov
repnz
icebp
dec
dec
int3
bound
mov
mov
std
cmpsb
in
pushf
inc
adc
shlb
jbe
push
sbb
add
cmpsb
ret
xchg
and
decl
lock
and
xchg
nop
data16
ret
push
pop
xor
inc
adc
push
inc
mov
mov
or
push
push
das
repz
xor
mov
ret
icebp
rcl
sub
stos
push
push
mov
xchg
push
lods
dec
arpl
insb
cld
jmp
cmp
sbb
mov
cmp
imul
inc
test
xchg
imulb
pushl
pushw
sbb
adc
test
cmp
cmp
je
add
out
test
jg
jb
negb
mov
pop
sub
xchg
sub
lods
into
test
data16
jg
push
mov
lods
bound
sub
mov
nop
pop
pusha
and
roll
out
inc
lock
add
lret
lret
xchg
and
scas
xchg
xchg
sbb
nop
push
pushf
adc
test
int3
sbb
adc
cmp
ficoms
cmp
mov
dec
sarl
lods
aad
addr16
lea
pusha
shl
in
cwtl
adc
adc
adc
pushl
scas
inc
aam
shll
adc
dec
mov
rolb
shrb
adc
lcall
subl
dec
out
stc
mov
inc
or
test
out
pushl
cld
sbbb
ja
stos
xor
cmc
add
xlat
cmp
out
cli
scas
lods
xor
mov
add
je
in
cmp
pop
iret
imul
or
add
dec
push
jmp
ljmp
lds
test
sub
or
into
incl
sub
hlt
adc
je
jo,pn
mov
pusha
roll
iret
jle
js
push
paddb
jg
lcall
aas
jae
mov
mov
stos
out
hlt
xorl
ffreep
jns
popf
incl
pop
sub
inc
xchg
sti
inc
pop
cld
test
adc
cli
pop
std
clc
bound
jmp
mov
lcall
adc
decl
pop
fistl
xlat
outsl
push
int
push
dec
pop
insl
int
mov
sbb
mov
int3
jg
incl
sub
push
push
cli
xchg
pop
add
shlb
dec
iret
inc
imul
jmp
jp
pop
cmp
sbb
rcrb
mov
pop
add
dec
mov
ja
mov
icebp
push
icebp
fadd
aaa
cmp
or
mov
mov
mov
neg
cmpsl
bound
sbb
jmp
sbb
aad
push
pop
fcompl
pop
jno
sbb
and
jg
dec
and
insb
lahf
mov
jg
push
sbb
mov
inc
mov
pusha
scas
and
into
and
jmp
xchg
aad
test
into
lcall
jb
test
xchg
imul
jns
dec
repnz
xchg
and
in
mov
stc
mov
hlt
or
test
imul
mov
outsl
cli
or
je
in
sbb
into
cmp
addr16
std
jmp
inc
andb
iret
ds
aaa
xor
pop
clc
in
xchg
add
in
push
mov
cmp
mov
mov
jnp
xor
pop
add
std
mov
sbb
loope
into
lea
and
mov
push
jg
sarl
repnz
das
add
dec
jbe
xor
cmp
xchg
test
sub
rclb
xor
xor
jmp
inc
movsl
outsb
ror
scas
cmp
into
sub
leave
ds
pop
insb
cli
mov
mov
jle
stc
jb
ljmp
cmp
pop
cs
add
outsl
leave
jb
fimull
lahf
jl
cli
pop
subb
popa
test
fs
push
ret
jmp
js
lret
aam
or
xchg
shlb
insl
test
gs
jg
es
mov
scas
mov
test
ds
mov
dec
int3
xor
js
jp
incl
jg
inc
mov
push
xchg
push
inc
cs
imul
push
push
in
scas
clc
jmp
inc
mov
fistpll
push
insl
je
cs
sbb
outsl
mov
icebp
stos
jp
enter
int3
rol
jl
mov
xorb
and
pop
ja
sub
lcall
or
xor
cmp
popa
mov
fidivs
jecxz
lahf
push
mov
pusha
incl
mov
sbb
and
ljmp
std
mov
scas
sar
decl
and
dec
pop
jp
jl
pop
sub
push
divl
pushl
in
jge
jnp
dec
and
xor
in
pop
rcrb
imull
in
sti
pop
mov
pop
xor
mov
rcrb
sub
xor
cld
lcall
sbb
pop
xchg
stos
xchg
lret
jno
add
ljmp
popf
aas
xor
cmpsb
dec
adc
and
sub
sbb
or
mov
pushl
xor
lret
popa
inc
and
xchg
std
mov
mov
and
lock
jg
aas
xor
mov
mov
xchg
outsl
or
add
inc
lods
decl
movsbl
test
push
mov
push
mov
call
fistl
sub
es
enter
push
andb
sbb
xor
decl
lock
in
loopne
lea
sub
ret
pop
in
lods
ret
push
pusha
shrb
rcrb
lret
cmpsl
jnp
shl
fwait
mov
sbbl
cwtl
pop
cmp
es
cmc
aas
ret
mov
add
ret
call
jb
push
lods
shrb
sbb
dec
popf
orb
cmp
call
popf
roll
or
jle
push
cmp
xchg
rol
cmp
dec
push
push
mov
inc
mov
cltd
dec
aas
repnz
jae
add
jno
arpl
cmp
in
push
shrb
rcrl
sub
es
or
sbb
and
test
jmp
call
mov
mov
add
push
sarl
and
test
call
inc
and
jae
scas
les
loop
and
mov
sub
call
xchg
inc
xlat
aad
mov
ja
dec
mov
push
out
daa
std
aaa
xchg
push
mov
ljmp
dec
sub
movsb
fidivl
and
dec
push
out
imul
mov
mov
or
jno
xchg
add
sbb
jp
test
pop
pop
lods
xchg
repnz
push
rcl
jns
cmp
les
jge
ljmp
and
lret
aam
stos
shll
xor
sti
addr16
and
ljmp
aad
roll
fnstsw
cs
inc
in
xchg
xor
jmp
jg
sub
pop
xchg
sti
mov
iret
xlat
pop
fwait
popa
lahf
outsb
xor
xchg
dec
pop
lock
jmp
call
rorb
adcb
ret
incb
dec
dec
jmp
jl
pushl
lretw
repnz
and
cs
adc
mov
mov
notb
ret
mov
mov
adc
jnp
out
in
jge
lods
and
nop
outsb
pop
sbb
mov
or
scas
pop
ret
das
jg
add
mov
jge
aaa
fs
fcomps
sub
xchg
mov
dec
mov
jmp
lcall
fistps
test
loope
faddp
pop
push
mov
inc
cwtl
insb
mov
incl
mov
cmp
and
add
in
push
scas
cmpsl
pusha
mov
test
in
inc
jg
mov
xchg
add
push
int
in
into
push
push
fcomp
outsl
cmp
sub
add
mov
pushl
enter
hlt
pop
addr16
cmpsl
xor
aad
adcb
ret
adcl
jp
jbe
xor
jg
int3
dec
rcl
stos
icebp
mov
pushl
inc
pop
andl
int
shl
js
popa
sbbb
sbb
aaa
xor
stos
ss
call
xor
jmp
adc
and
push
in
pop
fiadds
imul
imul
lahf
mov
dec
adc
xchg
jmp
push
dec
inc
in
scas
popa
mov
sub
xchg
pop
jno
mov
mov
call
out
xor
js
push
mov
cld
jecxz
pop
scas
push
out
jecxz
popl
inc
call
pop
aad
pop
cmpl
sub
loopne
adc
add
fistpl
call
cmc
sub
jb
pop
shll
inc
push
stc
add
fdivl
andps
jecxz
cld
out
mov
gs
sub
test
aad
cltd
decb
jmp
mov
lcall
pop
nop
inc
lds
add
jecxz
sti
daa
lea
add
call
fwait
dec
fwait
sub
xlat
cltd
nop
add
adc
xor
mov
int3
and
mov
lcall
mov
mov
mov
mov
rclb
ja
iret
outsl
mov
fs
js
stos
xchg
mov
fxam
sub
sarb
pushl
sahf
jp
mov
inc
add
mov
pop
les
aaa
pop
pop
repz
lret
out
cmp
mov
lcall
cmp
sub
sbb
ret
lods
jno
add
lret
lds
outsb
popa
mov
nop
lea
loopne
sbb
daa
ds
fidivl
mov
sbb
aaa
test
mov
pop
faddl
sbb
sahf
popa
test
or
lcall
xchg
das
lods
add
leave
cmpsl
sbb
mov
mov
xor
test
mov
inc
loop
sub
in
pusha
lds
mov
jae
xchg
hlt
mov
inc
or
push
test
fcomp
cli
xor
es
jmp
xor
inc
cmpsl
mov
mov
xor
cltd
mov
dec
ss
decl
mov
xor
loopne
mov
cmp
mov
cli
mov
decl
lea
loop
dec
rol
dec
leave
cmc
das
jne
test
push
sub
cmc
aas
into
and
or
lcall
imul
repz
mov
pushf
or
aam
xchg
push
jnp
filds
sbb
incl
jo
mov
mov
pop
jecxz
adc
sbb
mov
jmp
fiadds
test
mov
mov
nop
enter
mov
mov
dec
andnps
test
xchg
in
sbb
mov
and
out
dec
sub
pop
fadd
ret
out
sar
pushl
cmc
mov
inc
insb
and
bound
aam
ret
xchg
fistpl
add
lods
inc
adc
out
mov
xchg
dec
gs
repnz
cmpsb
fs
pushl
xchg
jne
fwait
mov
add
mov
sbb
lods
pop
sbb
mov
negb
adc
inc
fs
fsub
cmp
ljmp
push
push
lahf
push
outsb
ds
xor
data16
mov
and
jg
or
mov
sub
lret
dec
outsb
xor
cmp
adc
jl
and
incl
daa
movsb
inc
mov
dec
popa
into
adc
mov
pop
mov
jmp
dec
sarb
lret
sub
es
adc
pop
jb
sub
pop
cmpsb
inc
push
repz
decl
std
xor
sbb
jmp
or
insb
loope
dec
ror
lods
outsb
int3
sbb
xor
jbe
clc
adc
pop
testl
jo
aad
jl
loope
out
incb
add
lcall
dec
and
sub
or
push
fistpll
test
addr16
jmp
jo
loope
ja
andl
sub
ret
lret
out
xor
cmp
loop
es
ljmp
jl
addr16
inc
ret
push
movsl
data16
aas
clc
pop
cmp
push
sub
in
mov
push
pusha
adc
loope
adc
add
xchg
inc
xor
std
or
or
jg
lcall
out
xor
add
cld
and
push
idiv
aaa
or
icebp
aam
cmp
mov
jae
ss
xchg
js
popa
push
pop
xchg
rcll
adc
push
aaa
cmpsb
sahf
xor
fcmovnu
sub
cmp
xor
andb
mov
xor
add
jmp
sbb
pop
decl
ss
test
negl
jmp
mov
lds
mov
pop
sti
mov
ret
xchg
incl
push
les
mov
ret
sub
inc
lock
jmp
jle
pop
xchg
je
add
mov
call
lcall
jns
aam
cmc
popf
jnp
ds
je
inc
andl
pop
lcall
leave
sub
xchg
xorb
pop
rclb
rorb
cmp
add
movsb
cmp
lret
jne
mov
sub
jo
popa
movsl
outsb
dec
xchg
hlt
mov
mov
jmp
int3
mov
cmc
inc
repnz
lcall
lcall
mov
subb
pop
cmpsl
loopne,pt
cmc
adcb
mov
iret
sub
xchg
jae
mov
ja
cwtl
mov
das
lcall
test
nop
pusha
shrb
adc
or
push
stos
cmp
mov
mov
pushf
arpl
rcl
pop
sub
imul
aad
stc
mov
cld
jle
and
jno
sti
aaa
mov
mov
jmp
or
stos
repnz
jbe
mov
repz
stos
scas
push
testb
pop
cwtl
out
mov
lcall
jne
aas
je
flds
and
imul
mov
fwait
mov
jle
adc
stos
mov
mov
inc
xchg
sub
push
mov
addb
clc
inc
adc
mov
mov
sbb
add
loope
ljmp
cmp
lods
icebp
inc
push
insb
dec
lret
js
lock
xor
pop
push
push
enter
je
js
mov
mov
fsubp
dec
mov
xor
xor
incl
dec
mov
mov
mov
lret
dec
ja
pop
add
dec
pushf
add
les
or
push
je
jmp
movsb
cmp
pop
out
aas
rcrb
mov
jmp
ljmp
mov
std
decl
cmc
ljmp
jmp
aaa
jle
bnd
jmp
repnz
shll
cmp
mov
xchg
and
jae
push
sti
cli
decl
xor
xor
fcmovnbe
ds
enter
call
js
movsl
fildll
push
cmp
repnz
sbb
fadds
popf
cmp
fsubrs
xchg
out
sub
aad
aam
jecxz
mov
fcmovbe
dec
mov
in
sub
mov
orb
mov
lea
add
xor
xchg
mov
mov
or
pop
sub
sub
dec
adc
pusha
test
mov
into
pop
in
inc
fcmovu
sub
lock
aaa
in
sub
jg
jge
mov
stos
mov
mov
imul
sbb
imul
shl
sub
incl
gs
arpl
sti
pop
sub
xor
or
xchg
dec
lret
aas
cmp
bound
and
gs
repz
jmp
push
push
mov
fistps
add
testl
pushl
sbb
insb
mov
sub
jp
and
popf
insb
mov
test
xchg
jg
decl
lods
xor
push
insb
mov
cmpsl
mov
popa
inc
inc
inc
or
in
ljmp
call
das
jmp
iret
mov
mov
inc
mov
call
lret
into
xor
mov
idivb
test
jecxz
int
ret
adc
mov
jg
push
lea
and
divb
mov
xorl
adc
ljmp
test
inc
xor
jns
outsb
popf
stos
in
loope
not
xor
jg
negb
push
mov
sbb
and
or
rcl
sub
mov
call
mov
dec
arpl
clc
adc
jo
je
lret
std
mov
fcomip
and
lret
sub
add
ret
mov
lcall
fisubrl
movb
jmp
cmp
ss
lret
call
ret
loopne
ja
lahf
sbb
sub
fldcw
es
lea
mov
lcall
xchg
cmp
rol
xchg
decl
pop
add
cmp
repz
and
push
cld
push
jg
loopne
call
xlat
push
jns
jl
sub
jne
mov
test
adc
xor
push
aam
decl
xor
mov
nop
mov
xchg
inc
inc
push
jge
xchg
push
call
cmp
pop
cli
cltd
ljmp
scas
in
xchg
push
sub
cmp
pop
idivb
cmp
xor
inc
inc
and
call
lods
das
lods
fwait
adc
jecxz
and
push
cld
push
add
hlt
and
insl
mov
mov
es
fstps
in
cmp
iret
push
pop
sub
or
scas
rclb
lret
orb
or
test
mov
inc
mov
and
out
aas
leave
cmp
jp
mov
enter
adc
cmp
and
mov
or
inc
or
or
jl
mov
das
outsl
and
sub
jmp
inc
imul
into
data16
test
add
fimull
inc
loopne
mov
pop
iret
xchg
jge
pop
int3
in
pop
loope
ret
mov
push
pop
daa
mov
adc
std
jmp
iret
cmp
xor
sarb
sbb
clc
popf
xlat
out
icebp
mov
mov
or
push
adc
fnstcw
pop
add
mov
lcall
das
hlt
jno
jno
decl
shl
xchg
int3
call
and
push
lret
loop
out
in
pop
lcall
lahf
xchg
movl
sub
fstpt
call
push
lds
ss
pop
pop
jmp
loopne
adc
dec
shl
dec
xchg
js
xchg
rep
mov
sbb
cmp
in
insl
jle
dec
stos
jns
jl
pop
mov
cmp
decl
mov
mov
or
aaa
sahf
mov
loopne
sbb
or
sti
sbb
fs
push
jmp
imul
das
mov
mov
jb
adc
cwtl
mov
push
iret
push
and
sbb
add
or
incl
lock
jo
iret
push
mov
sub
and
in
fiaddl
incl
push
mov
ret
cs
out
mov
xorb
rcll
mov
pop
mov
test
dec
in
js
cwtl
push
cmp
pushl
add
pop
cmp
fucomip
mov
int
mov
mov
js
cld
stc
mov
push
pushl
aad
rcr
test
cmp
scas
push
inc
jo
cmp
jo
lcall
mov
rorb
pop
out
mov
dec
negl
and
push
dec
ljmp
cmc
mov
pop
into
inc
aam
aaa
aad
dec
test
incl
aaa
testb
lods
add
xor
std
add
mov
jle
mov
xchg
stos
ret
add
hlt
test
mov
cmp
and
cmp
mov
pop
and
notb
std
jmp
nop
lods
inc
mov
pop
sbb
sub
mov
repnz
mov
call
mov
dec
mov
lods
add
mov
ret
cmp
jae
jns
enter
cld
lcall
data16
in
pop
cltd
jmp
test
movsb
add
and
decl
jmp
es
mov
jo
push
movsl
push
jae
mov
inc
mov
add
ljmp
push
repnz
in
outsb
leave
lahf
sbb
adc
fcmovnu
cmovns
jmp
adc
mov
std
es
mov
lret
push
daa
int
mov
loopne
mov
sbb
inc
cmc
rorl
xchg
out
aad
js
into
xor
jmp
iret
repz
xchg
adc
shl
gs
inc
inc
lea
js
mov
dec
add
call
adc
cwtl
data16
testb
fdivrl
mov
inc
mov
clc
inc
dec
stos
cmp
mov
add
and
scas
test
sbb
and
movups
add
pop
std
aad
pop
add
mov
into
fdivrs
jg
int
pop
insb
add
filds
ror
jne
iret
sbb
inc
das
pop
sub
cmp
lcall
xchg
add
push
shrl
sbb
or
pop
sub
loope
daa
loope
push
mov
cmpb
jmp
xor
loopne
jg
fwait
mov
mov
or
sahf
sbb
ffreep
mov
push
lcall
cmp
iret
pop
pop
dec
add
insb
push
fwait
out
imul
jnp
xor
fidivrs
adc
fistps
dec
sub
jo
ja
testb
ljmp
out
aad
lahf
and
inc
inc
leave
fadd
mov
test
popa
pop
nop
adc
repnz
icebp
cmp
ljmp
adc
add
jb
lock
int
imul
and
incl
insb
mov
aam
cmp
sub
xchg
imul
xchg
pushl
aas
xchg
ljmp
call
test
dec
push
push
or
das
sbb
ja
add
dec
sub
gs
and
push
jle
adc
out
lcall
pop
fdivp
mov
xchg
pop
roll
loope
repnz
outsb
lds
lahf
lahf
movsl
aad
xchg
dec
inc
push
or
jg
ljmp
mov
adc
xlat
test
dec
pop
xor
jno
push
jmp
mov
and
iret
cmpsl
std
adc
int3
inc
out
arpl
stos
fsts
test
stos
lock
sarb
ljmp
clc
addr16
in
mov
js
fwait
adc
xchg
insl
mov
iret
bound
bound
stos
mov
data16
inc
xlat
cmpsl
cltd
ret
icebp
test
jns
fwait
adc
pop
in
pusha
jae
addl
aad
inc
add
imul
sub
xor
sbb
ror
fwait
jne
pop
mov
sti
jo
jg
jg
je
dec
jecxz
xorb
lods
xchg
stc
mov
sbb
mov
ljmp
aas
jge
adc
dec
mov
inc
cmp
andb
or
pop
shll
pop
jbe
mov
ljmp
cli
lcall
cld
mov
push
mov
in
or
mov
les
xorb
xor
decl
xchg
adc
mov
rclb
inc
fdivrs
jbe
out
lds
push
ljmp
roll
test
test
or
mov
pusha
pop
inc
mov
pushl
push
ljmp
xor
inc
pop
jge
loope
loop
subb
cli
mov
jmp
not
fnstenv
and
mov
and
mov
outsl
and
inc
jns
add
add
lcall
jp
xor
add
sub
fsin
xlat
xchg
stos
movsb
daa
sub
mov
push
cmp
push
dec
pop
lret
out
mov
les
add
jmp
mov
pushf
mov
mov
decl
insb
xchg
or
mov
pop
cltd
fsts
int3
cld
into
add
or
jl
xchg
in
incl
dec
mov
cs
sti
call
jle
mov
out
adc
fdivr
decl
gs
jle
sbb
fsub
add
mov
bound
cmpb
jno
mov
std
incl
add
mov
out
inc
sbb
or
pushl
cmpsl
jo
adcb
cmc
xchg
mov
ret
jecxz
outsl
sbb
aas
arpl
ljmp
sub
cmp
sti
rorb
out
enter
xchg
pop
pusha
mov
or
pushl
imul
pop
push
cmp
jno
jecxz
into
mov
push
pop
xchg
xchg
enter
push
in
pushl
xchg
adc
mov
adc
jne
mov
loop
sti
pop
test
lcall
cmp
xchg
stos
in
sti
aam
xorb
les
faddl
and
cmpsb
aam
cmc
or
jno,pt
pushl
sub
dec
adc
mov
inc
scas
xlat
out
stc
outsl
in
push
fisubl
jl
pop
xchg
jbe
adc
dec
movsb
pop
mov
adc
mov
negl
outsl
clc
ljmp
decl
inc
cmpsb
mov
mov
sbb
insb
lret
jno
mov
dec
push
xlat
add
shlb
out
stos
push
mov
push
mov
stc
jb
pop
bnd
sub
mov
repz
and
incl
lock
int
push
in
ds
push
xor
imul
shrb
xchg
mov
addr16
xor
cmc
mov
enter
jg
add
daa
add
jge
xor
jg
incl
out
or
dec
dec
cltd
in
fsubr
bound
xor
adc
stc
ficompl
lods
cmpsl
sub
lea
pusha
and
push
mov
pushl
outsl
xchg
cwtl
adc
cli
dec
in
fsub
sar
out
clc
decl
lret
mov
mov
xor
ret
ret
ljmp
iret
mov
ds
sysenter
adc
xchg
push
pop
sbb
jl
shlb
out
std
mov
dec
subb
ljmp
leave
sar
call
push
add
imul
fsubrl
mov
cwtl
jg
out
orl
add
sar
roll
jno
rcr
mov
and
jo
aas
jg
mov
hlt
stc
arpl
mov
push
or
aas
push
scas
js
jg
mov
mov
mov
xor
inc
sub
iret
or
jnp
loopne
adc
pop
sub
and
lock
stos
push
cs
jns
inc
outsl
mov
push
xlat
testl
incb
cmp
push
popa
mov
les
adc
sub
gs
xor
loop
flds
lcall
mov
mov
mov
gs
mov
lret
ficoms
cli
int3
adc
adc
fbstp
and
arpl
outsl
dec
push
incl
adc
lods
cmpsb
lahf
js
mov
cmpsl
invd
jbe
and
sti
push
test
lcall
pop
pop
mov
mov
subl
xor
mov
sbb
incl
dec
inc
xchg
pop
aaa
pop
xchg
or
dec
les
cmp
mov
sarb
les
xor
push
xchg
insl
dec
fdivrp
and
sbb
pushl
jnp
cmp
cmp
repnz
cmc
mov
xor
pushf
pop
xchg
sahf
jg
sbb
xor
push
or
mov
jno
inc
cli
hlt
adc
and
js
aas
in
js
stos
shll
pop
imul
fdiv
mov
jae
sub
push
aad
loopne
ffreep
xchg
ljmp
sbb
and
xchg
into
push
and
lock
sub
dec
push
in
lcall
popf
push
cmp
es
negl
pop
mov
hlt
push
ret
push
in
dec
cmpsb
adc
xor
xchg
repz
aaa
std
incl
cmp
in
into
xchg
and
xchg
into
xchg
decb
cmp
in
mov
mov
push
in
cmpsl
decl
inc
jp
dec
fwait
add
jns
adc
pop
dec
fs
pop
fmul
mov
iret
or
call
pop
xor
mov
lahf
push
pop
dec
cmp
sub
jo
ljmp
popa
ljmp
xchg
and
cli
sub
fs
shrl
sub
je
lock
clc
ljmp
cmp
out
in
std
or
test
mov
cmp
js
ds
jmp
cld
pop
mov
and
cmp
fists
pop
mov
add
sbb
or
inc
cwtl
cmc
lcall
repz
dec
outsl
sbb
pop
xchg
dec
mov
jle
ljmp
cmp
loop
movl
ss
scas
in
dec
cmp
lret
rorl
mov
fildl
imull
fisttps
bound
cmpsl
push
and
or
lret
std
xchg
fimull
cld
sti
arpl
mov
lods
inc
jp
popa
leave
fmul
lahf
inc
jb
pop
icebp
push
adc
mov
pop
mov
and
repz
arpl
mov
add
decl
xchg
popa
pushf
xor
stos
xchg
sub
divl
imul
int3
inc
out
pop
pusha
call
movl
pop
inc
dec
mov
iret
mov
sub
jmp
lahf
add
mulps
fbld
xchg
ret
push
push
fucomi
in
jle
pop
in
jne
mov
sub
mov
aas
in
jg
sahf
mov
dec
mov
movsl
outsb
sbb
push
sub
push
andb
jecxz
ljmp
ss
repnz
mov
push
cmp
push
std
je
ss
int
mov
push
mov
mov
jle
outsb
pop
mov
xchg
je
or
rorb
dec
and
sbb
clc
jmp
mov
int3
sub
xchg
imul
jmp
or
fnsave
cmp
fs
mov
xlat
mov
pmuludq
jbe
cmp
scas
shr
push
xchg
sti
cmp
bound
mov
add
mov
xchg
xor
fistps
mov
mov
lret
inc
in
fisubrl
cmp
emms
outsl
add
cli
call
in
inc
mov
xorb
inc
aad
enter
xchg
daa
ret
dec
mov
lcall
outsb
dec
mov
pop
inc
sbb
pop
xchg
pop
jno
add
jmp
fnstenv
leave
xchg
lret
stc
test
fldl
sahf
ja
and
adc
adc
outsl
cmp
xchg
jb
pop
nopl
pop
mov
or
call
inc
loop
mov
movsl
hlt
jno,pt
imul
push
or
add
dec
sbb
add
decl
ja
sbb
pop
jne
pop
mov
adc
sbb
cltd
jmp
orl
lock
xchg
out
push
ret
jl
push
xor
incl
xor
jl
cmp
and
fwait
adc
ret
or
jecxz
push
inc
pop
lock
sti
fldcw
jb
add
imul
push
imul
mov
xchg
inc
pop
outsb
outsl
ljmp
mov
test
pusha
lods
clc
dec
jl
aaa
mov
inc
push
fisubrl
ljmp
pushl
dec
movsl
add
nop
imul
mov
jb
add
mov
call
sub
xor
lock
mov
or
lock
decl
int
fsubp
push
jmp
rorl
insl
cmp
movsl
repnz
pusha
xlat
mov
and
out
in
dec
out
xchg
je
inc
mov
pop
das
das
mov
mov
stc
sbb
incl
ljmp
dec
jno
jo
in
ds
cmp
mov
sub
notl
test
repnz
lcall
lock
call
ds
jg
stc
cmp
xchg
jns
and
push
fwait
xchg
jbe
jmp
nop
push
jae
fbld
push
mov
pop
cmp
out
jne
push
pushf
cmc
incl
jg
xor
insb
scas
push
sub
push
fists
cmp
cmp
xchg
xor
rcll
int
cli
cld
incl
mov
inc
stos
or
cmc
in
dec
lcall
adc
mov
push
push
mov
adc
adc
sbb
cltd
int
sub
push
fs
loopne
shlb
inc
les
ljmp
rdtsc
sti
ljmp
inc
xchg
jno
adc
stc
cmp
sub
repz
decl
sahf
add
or
sti
imul
push
rclb
xor
rcrl
shll
push
ljmp
or
push
repz
mov
mov
jle
jecxz
stc
jbe
push
pushl
mov
loope
mov
in
add
add
inc
stos
jb
mov
pop
sbb
pop
iret
enter
jg
mov
daa
es
mov
cli
int
sub
arpl
mov
incl
xchg
addb
imul
mov
mov
orl
cltd
xchg
ljmp
in
out
xor
xor
pop
jne
jno
fld
sub
mov
xor
jg
ja
les
xchg
push
xor
test
icebp
xchg
sub
mov
incl
xchg
mov
sub
inc
std
test
jmp
sub
mov
jmp
xor
sub
cmp
sbb
sbb
loope
fcomip
jg
add
cld
subb
lds
in
fsubs
loopne
incl
test
mov
xor
xchg
adc
inc
ja
pop
xor
mov
jmp
xor
scas
decl
jecxz
fs
test
mov
add
inc
pop
dec
sahf
or
insl
cmp
pushl
aaa
push
test
mov
adc
dec
icebp
ja
insb
ret
ljmp
jmp
call
cli
fcomps
jnp
xorl
adc
or
ss
pushl
xchg
sub
mov
mov
inc
mov
aad
pop
inc
sbbl
mov
jmp
rcll
xchg
inc
int
add
sti
cwtl
arpl
mov
lcall
fwait
mov
je
push
cmp
gs
xor
leave
sahf
shrl
test
jns
mov
mov
mov
in
popf
cmpsl
cmp
jb
insl
push
xchg
iret
subb
mov
adc
xlat
call
xor
ret
rcr
loope
mov
cwtl
ss
ret
sar
decl
sti
or
pop
add
cltd
add
icebp
jg
std
and
jp
sti
sahf
shll
mov
xchg
add
loopne
inc
repz
ljmp
lea
scas
out
pop
adc
jle
mov
jp
pop
adc
mov
mov
mov
xor
clc
mov
pop
out
xchg
pop
adc
dec
jno
call
lret
pop
ficoml
push
jmp
pop
xor
cwtl
mov
push
aaa
sbb
outsl
outsl
xor
ljmp
ds
xlat
cmp
mov
push
add
pop
dec
sub
call
mov
cmpsb
leave
mov
orb
adc
lods
mov
sub
mov
push
push
lock
jnp
or
and
sub
inc
adc
add
call
jmp
rclb
adc
sbb
push
mov
fisubl
mov
mov
adc
ljmp
jo
sub
lods
and
or
je
fmul
test
je
xchg
push
jp
sbb
lock
test
mov
aas
aad
lcall
les
in
mov
or
inc
imul
decl
add
add
push
pop
pop
adcb
out
pop
mov
mov
sbb
pushl
mov
ret
cmpsl
jb
fs
mov
jl
pusha
adc
mov
rclb
pop
loope
sub
mov
dec
fildll
jmp
push
add
pop
cmc
std
loope
xchg
rolb
push
adc
fimuls
cli
fildll
insb
shl
mov
ja
sub
xor
mov
enter
and
add
xchg
jne
call
stc
loop
jae
jae
cld
popf
cmp
sub
mov
fists
push
push
dec
cmp
lcall
fldcw
xor
push
mov
imul
imul
xchg
jnp
inc
add
call
ss
sbb
jae
jb
jp
fisttpl
jmp
add
mov
iret
adc
cmpsb
into
jecxz
pushl
les
mov
negb
and
xchg
rorl
fwait
pop
pop
inc
or
jg
decb
movsl
clc
stc
inc
lcall
loopne
jno
lahf
xchg
pop
xchg
adc
sahf
add
inc
sbb
mov
jno
scas
mov
push
or
add
mov
inc
and
push
imul
push
test
ljmp
inc
sbb
pop
rcl
std
sub
cld
push
cmp
popa
add
decl
cmc
pop
lods
jne
mov
xor
xchg
xchg
xchg
cmp
jecxz
pop
jecxz
mov
decl
xorb
jne
incb
pop
dec
add
pusha
sub
lcall
aam
jl
sub
int3
fwait
mov
out
jmp
mov
out
inc
fsubrl
out
mov
jg
int3
gs
mov
scas
xchg
xchg
clc
inc
pop
ds
scas
inc
mov
jg
or
sub
or
test
inc
out
cmp
adc
scas
ljmp
sub
jecxz
cltd
fnop
testb
fcmovbe
fstpl
incl
mov
stos
lcall
inc
jo
es
call
ljmp
pushf
hlt
dec
stos
lea
add
xor
xor
incl
std
jge
pop
pop
fisttpll
insl
inc
jae
sub
cs
insb
add
jge
fwait
or
call
sbb
jo
mov
add
adc
js
jmp
mov
fs
outsb
pop
xor
pop
dec
repz
cmp
ret
push
lret
jg
aaa
pop
mov
ja
ljmp
add
subb
clc
sub
fisubrl
scas
inc
sar
mov
dec
cld
cmp
sbb
adc
sub
addr16
jle
adc
mov
dec
stos
lods
aam
decl
mov
scas
mov
repnz
add
mov
or
ds
lcall
filds
outsl
test
mov
sbb
rol
imul
jmp
xchg
and
add
or
insb
push
add
out
adc
ljmp
stos
xchg
sbb
jne
pop
and
inc
fcmove
dec
ss
iret
fdivrl
jl
cltd
mov
js
adc
in
inc
call
adc
mov
enter
loop
mov
inc
jbe
mov
lcall
or
dec
mov
pop
sahf
push
cmp
dec
push
and
outsl
cli
call
pop
test
mov
fdivrl
in
mov
cltd
mov
pop
mov
shlb
xchg
push
mov
jecxz
lret
mov
mov
mov
mov
xor
mov
lcall
pop
je
cld
shlb
imul
out
stos
adc
mov
jbe
mov
adc
enter
lods
mov
test
lret
mov
cmp
inc
cltd
imul
nop
mov
out
aaa
jmp
pop
jl
push
cmpsb
js
mov
rorb
sub
or
les
aaa
pushf
rorl
fisttpl
cmp
pop
nop
add
inc
mov
cs
fwait
mov
mov
cmp
lret
lock
dec
mov
inc
mov
ret
mov
enter
call
icebp
jo
jb
addl
fcoml
inc
add
flds
sub
mov
dec
cld
jmp
mov
das
or
jmp
fisttps
dec
mov
test
rcrl
fs
jge
or
rcrb
out
decl
mov
negb
movhps
test
cmc
ljmp
xor
xchg
pop
addb
pop
xor
out
adc
dec
data16
insl
fwait
adc
ljmp
xchg
add
cmp
fisttpll
aaa
sub
rcrl
repz
xchg
movsb
imul
and
adc
mov
and
mov
xor
mov
sub
mov
or
cmp
jne
sbb
xor
cmc
aaa
xchg
clc
push
or
das
insl
cmpb
ljmp
test
xor
cltd
pusha
adc
outsl
or
adc
xchg
mov
or
outsl
das
xchg
cmpsl
shll
jae
cmp
mov
pushf
dec
and
push
dec
push
fimull
push
les
xor
jb
ljmp
repnz
ret
inc
jne
and
inc
scas
mov
and
adc
or
push
ljmp
lods
jbe
mov
add
out
jno
test
jmp
jns
mov
stos
mov
adc
stos
mov
xchg
mov
andl
decl
push
cmpsl
out
test
iret
test
popf
push
adc
push
jp
mov
sbb
dec
data16
call
pop
mov
loop
movsb
push
decb
xchg
jb
data16
sti
mov
decl
fstpt
mov
test
outsb
psllw
ja
jp
icebp
xchg
in
or
shr
incl
jae
nop
outsb
test
mov
add
push
mov
mov
sbb
dec
jbe
out
jne
fxch
std
jg
or
cld
or
loop
mov
push
mov
xor
mov
outsb
jne
jno
sub
jge
addr16
repnz
pop
xor
and
dec
push
inc
sar
decl
ds
push
pop
mov
jg
mov
fucom
lock
push
hlt
and
and
sti
xor
nop
xchg
cld
idiv
dec
fst
gs
push
sbb
hlt
stos
shll
push
sub
js
and
jb
incl
call
cmp
inc
clc
push
fcmovb
pop
test
sub
pushl
ds
out
lock
mov
mov
adc
or
push
cld
sarl
int
jnp
and
mov
or
push
pop
mov
int
pushf
adc
cmp
pushl
dec
push
scas
cmp
out
cmpsl
mov
dec
imul
insb
jmp
lcall
push
mov
mov
jg
add
pop
inc
and
test
stos
inc
push
lock
lods
mov
push
cmpsl
cmpl
mov
push
cwtl
fcoms
in
fidivs
sub
in
call
push
lds
xor
jb
int
dec
lret
idivb
aad
das
inc
call
jnp
cmp
cld
inc
out
aam
xchg
xlat
mov
inc
adc
mov
ret
mov
ljmp
or
ret
inc
cmp
jle
lock
jae
xchg
sub
adc
lret
pushl
pop
rcrb
test
mov
xor
xchg
push
pop
or
decl
pop
add
jns
or
sub
and
jnp
mov
divl
xchg
das
hlt
sub
sti
cmp
dec
xchg
sarl
push
es
xchg
xorl
repnz
mov
push
leave
decb
cmpsl
add
sbb
mov
cwtl
inc
daa
xchg
aaa
sar
dec
dec
and
and
repz
sub
pop
xor
jmp
dec
or
ljmp
int
or
mov
jp
pop
sub
pushl
push
fsubl
adc
sub
and
xchg
mov
ret
frstor
decl
test
xchg
sub
cli
or
push
je
mov
ljmp
mov
dec
or
out
push
xorl
lahf
sar
in
icebp
xchg
imul
call
ret
pop
cmp
mov
mov
mov
into
mov
jp
mov
jp
test
cmpsl
lods
adcl
sbb
inc
nop
pop
dec
mov
pop
push
dec
lret
mov
es
lret
out
lock
cmp
lcall
rcll
cmp
insb
pusha
sbbl
pop
andb
adc
pop
fsts
jbe
jle
pop
push
ror
push
pushl
xchg
xchg
jl
sbb
sbb
dec
inc
popa
icebp
fcompl
repnz
pop
shlb
and
inc
or
fildll
xlat
xchg
inc
lret
insl
sub
test
popf
xchg
ds
js
pop
push
mov
cmp
incl
dec
inc
in
cs
lea
fiaddl
and
or
dec
jmp
ds
or
test
jo
cmpsl
inc
mov
push
add
pop
ja
inc
lock
out
int3
lea
sbb
jle
adc
dec
xchg
push
addr16
pop
in
inc
push
xchg
loope
pop
lret
movsb
enter
fstpl
sub
scas
clc
call
xor
cltd
xchg
roll
xor
ss
jge
sub
jp
mov
call
and
or
rolb
or
sbb
sbb
pop
mov
cli
das
inc
in
iret
pop
mov
imul
jge
mov
jge
add
decl
test
dec
sub
loope
fistpl
call
xchg
in
pop
push
lret
mov
iret
ja
lock
adc
fistpll
in
push
nop
das
and
mov
push
cltd
add
clc
fcomip
decl
out
loope
es
fdivrs
jno
ret
mov
iret
sbb
add
cmc
imul
add
bound
pop
sub
lahf
sub
push
jae
call
pusha
pop
dec
icebp
mov
and
sub
sbb
rcrl
and
xchg
bound
repz
xor
shrb
xlat
outsb
xor
aaa
sbb
sbb
sub
sub
decl
lock
xchg
push
cmp
jnp
fcomps
xor
adc
loopne
out
mov
jmp
pop
clc
sub
jns
fstps
sub
cmp
imulb
dec
aas
loope
mov
std
call
scas
push
nop
or
and
lcall
pushl
push
cwtl
add
xchg
les
mov
les
sbb
stos
pushl
pusha
push
dec
and
xchg
dec
test
ds
pushl
fdivp
loope
pop
ja
sub
pop
stos
or
cmc
xchg
ss
pop
jmp
xor
aad
decb
je
mov
push
lods
test
mov
shl
adc
sbb
loopne
push
enter
inc
dec
and
xor
pop
mov
mov
mov
cltd
sub
cli
mov
repnz
ljmp
sti
cmp
dec
pushl
add
lret
fstpl
push
cmpl
xchg
aad
hlt
stos
mov
inc
jnp
cmp
les
push
pop
mov
fcomi
daa
add
movsl
ljmp
out
clc
pop
ret
xor
sub
test
add
or
stos
and
addr16
call
inc
scas
int
aaa
out
mov
push
das
xchg
mov
enter
cmpsl
ljmp
mov
hlt
int3
xor
std
popf
imul
mov
dec
pop
mov
jno
test
push
push
mov
push
mov
scas
fldl
dec
lcall
push
loopne
ljmp
pop
icebp
ficompl
jns
inc
in
mov
fnstsw
mov
mov
dec
jp
mov
fdivrl
jecxz
cli
adc
cmp
iret
push
push
nop
jecxz
jne
repz
cmp
pusha
lcall
sbb
sbb
adc
mov
hlt
inc
add
inc
je
pushl
jmp
and
mov
push
mov
adc
jne
or
pusha
mov
ds
decl
std
sub
scas
inc
push
pop
fmuls
popa
adcb
sub
mov
movsl
push
in
pop
inc
push
arpl
insl
stos
xchg
dec
arpl
sahf
mov
repnz
xchg
dec
in
sub
add
mov
jmp
cmp
pop
mov
xchg
mov
mov
adc
shrl
mov
in
es
mov
daa
js
ljmp
sub
mov
cli
iret
mov
je
insb
mov
mov
and
jg
or
stos
pusha
jnp
cs
jmp
push
lods
outsl
idiv
incl
cld
test
adc
and
andb
push
and
xor
jmp
out
iret
cmp
push
cltd
jae
jbe,pn
xor
fcmovne
xor
or
pop
sub
incl
leave
je
lock
inc
xchg
popf
mov
shl
loop
rcrb
pushl
pop
mov
push
aaa
sub
and
popf
jne
jge
fdivrl
inc
mov
inc
xchg
jns
cmp
decl
dec
fsts
dec
mov
subb
push
shlb
out
pushl
lahf
push
lret
pop
lret
shr
jbe
adc
sub
push
mov
jmp
and
xchg
mov
mov
and
cwtl
cmp
jnp
movsb
clc
jl
xlat
and
aam
lea
out
jno
das
fldcw
mov
icebp
push
inc
push
xchg
mov
call
cmc
test
push
shrl
adc
loop
sti
lcall
popf
lock
daa
aam
scas
cli
jmp
faddl
cmp
and
xor
pop
fucompp
imul
incl
push
out
push
jge
fisubrs
lock
lods
push
in
movsb
insb
push
lcall
dec
imul
les
shl
xor
out
sub
es
clc
out
push
clc
imul
out
mov
nop
insl
incl
aam
cmp
push
sbb
adcl
cs
ja
jp
jne
mov
decl
popf
add
xchg
test
in
push
stos
out
loopne
js
dec
mov
jmp
nop
sbb
call
cld
mov
mov
jo
mov
jl
out
lcall
incl
sub
loop
in
mov
fdivs
add
lcall
repnz
or
adc
mov
mov
pop
push
lcall
sub
frstor
dec
inc
rcl
imul
clc
nop
mov
in
les
mov
sub
push
adc
mov
rorl
cmp
sbb
xor
mov
loope
mov
push
mov
clc
push
out
cmp
sub
lods
aad
pop
xor
js
decl
add
push
adc
jb
out
add
jae
movsb
stos
jae
in
fildll
call
std
popf
adc
push
mov
dec
in
stos
movb
imulb
cli
std
adc
jmp
out
mov
and
cwtl
sbb
mov
add
std
ret
incl
and
dec
mov
jno
mov
and
or
and
or
lret
mov
insb
fcoms
or
jmp
or
and
mov
pushf
and
pop
lcall
push
in
xor
lret
arpl
push
and
cmpsb
dec
aam
inc
pop
lret
leave
aaa
cld
jp
mov
iret
jae
les
mov
adc
jp
inc
lods
cmp
insb
lret
test
nop
fildl
sarb
jnp
inc
ficompl
stc
out
into
int3
clc
fisubrl
aam
call
lret
adc
dec
into
add
mov
mov
int3
jae
test
clc
sub
call
cmc
sub
cld
ret
movsb
push
xor
call
cs
ja
fnstsw
ja
jg
call
jne
popf
test
movsl
lds
sbb
movsl
dec
decl
dec
outsb
mov
out
clc
imul
mov
les
icebp
sub
mov
xchg
aas
pop
shl
aam
es
add
xor
and
aas
adc
lret
mov
jmp
ret
lret
aad
xchg
mov
cmp
adc
push
add
pop
pop
xchg
xor
xor
xor
xchg
ljmp
xchg
cmp
testb
out
inc
cmp
mov
mov
les
add
fs
pop
cltd
dec
cwtl
sti
cmp
push
cmp
cmp
rorb
outsl
lds
movsl
sahf
das
and
mov
into
dec
imul
or
mov
into
cmp
sub
lahf
fildll
sub
into
sbb
cmp
nop
mov
loop
pushf
jae
fistpll
jle
mov
clc
pop
sub
dec
inc
inc
adc
arpl
std
dec
test
outsb
out
das
push
testl
mov
xor
jmp
cmpsb
xchg
or
push
push
and
add
or
mov
and
sbb
ret
fcomip
mov
es
or
xchg
or
gs
jle
into
push
mov
std
lcall
dec
ret
pop
mov
data16
and
mov
dec
pop
mov
jecxz
inc
jmp
loope
repnz
mov
xlat
cmp
lcall
incl
in
loopne
xchg
test
lock
icebp
stc
call
lds
orl
add
inc
mov
jo
icebp
call
test
icebp
mov
and
les
sbb
mov
inc
cli
and
ljmp
mov
cli
movsl
in
dec
mov
popa
sub
mov
out
add
call
sbb
imul
nop
imul
sbb
sahf
scas
push
cmp
ljmp
in
cmovl
movsb
shll
hlt
sub
inc
rclb
les
push
mov
imul
iret
scas
lret
pop
jge
jns
sahf
sub
adc
jg
sti
aas
pop
movsb
add
inc
mov
daa
inc
jb
lea
sbb
push
fstl
repz
jbe
cmpsb
sub
jno
or
add
add
xchg
insl
ret
and
xor
push
jmp
popf
js
xchg
add
push
or
rolb
mov
lahf
into
push
imul
sti
cmc
xor
mov
jp
mov
in
push
add
mov
mov
shrb
mov
fldt
cld
add
lahf
jo
jo
mov
rorl
nop
in
mov
ljmp
test
and
or
jns
pop
mov
pop
cmp
ret
mov
jp
sti
push
add
jb
decl
inc
fwait
mov
out
xor
push
pushaw
xsave
sbb
jecxz
jns
loope
mov
ljmp
lock
mov
aaa
test
pop
repnz
jb
mov
ljmp
call
xchg
mov
cmc
outsb
pop
stos
sbb
sbb
add
sbb
and
shll
call
shrb
inc
popf
jae
cmpsl
lods
lret
adc
outsb
mov
lods
in
fildl
ljmp
or
pop
mov
xchg
loope
lock
aaa
or
call
sbb
ret
frndint
es
inc
inc
fwait
int
lcall
jmp
sbb
test
loop
pop
mov
mov
int3
sar
dec
mov
jo,pt
push
jno
mov
stos
xchg
ljmp
cltd
add
lods
test
js
pushl
daa
mov
clc
jmp
add
cmp
xor
popa
fs
push
sbb
cli
jmp
fistpll
in
push
lock
adc
repnz
repnz
decl
sub
xor
data16
inc
subl
hlt
add
repz
lods
add
mov
decl
sub
test
jle
xchg
mov
sub
pop
lea
cwtl
lret
test
jp
inc
fiaddl
mov
jp
clc
stos
lret
cmc
push
imul
dec
mov
and
fldl
fidivl
dec
inc
scas
rorl
dec
es
push
sub
mov
sahf
insl
scas
or
ljmp
jmp
sbb
inc
sbb
ss
push
sub
inc
adc
cmp
mov
scas
xor
fsubrs
clc
lcall
mov
in
xor
mov
sarl
rol
jmp
jmp
in
jle
or
imul
int
push
sub
aaa
aaa
mov
dec
adc
sbb
je
and
xor
notb
scas
fstpl
aam
or
call
lds
xchg
rcr
enter
cmp
and
lods
cs
jmp
mov
out
mov
daa
out
jb
adc
dec
incl
rcrl
inc
add
push
push
push
sahf
pop
lock
mov
or
outsb
jmp
jg
filds
cwtl
xchg
shlb
stc
testb
sbb
dec
out
push
adc
lret
out
fstp
ss
xor
testl
scas
cmpsl
stos
pop
lds
mov
add
aad
pop
mov
jnp
inc
dec
lods
mov
mov
inc
out
inc
xor
insb
rep
cltd
in
filds
pop
xchg
lret
call
cmp
push
jnp
call
jle
aaa
aas
pop
xchg
lods
cmpsl
fs
ljmp
pop
xor
lahf
push
adc
jg
stos
fcmovnbe
test
cmp
add
lods
cmpsb
outsb
paddw
sub
or
ljmp
add
and
and
lcall
call
dec
jbe
xchg
in
and
out
jns
sub
adc
pop
adc
fcomip
incl
les
pop
push
adc
je
push
iret
ljmp
mov
pop
js
jge
rcll
jnp
loopne
dec
aaa
enter
sbb
mov
lcall
mov
imul
mov
mov
ret
cmp
pop
movl
fstpl
mov
cmc
decl
shll
mov
push
add
mov
adc
sbb
xlat
popa
ja
call
shlb
test
lcall
mov
roll
loop
and
mov
incl
cli
or
mov
dec
out
lea
imull
jecxz
int
insb
cmpsl
mov
adcb
jmp
jbe
cli
pop
aad
and
aaa
test
enter
int
repz
cmp
arpl
push
or
cmp
mov
inc
adc
cmpsl
xchg
add
cs
shlb
fwait
das
call
lods
xor
adc
inc
flds
lcall
sbb
jp
mov
icebp
rclb
push
scas
adc
mov
pushl
leave
or
or
mov
push
cmc
idivb
test
fnstsw
gs
ljmp
je
push
sahf
add
sbb
bound
fyl2x
clc
inc
xor
cmpb
lret
cmp
cltd
pop
add
fmuls
sahf
sahf
movsl
dec
je
inc
cmp
sbb
je
mov
fdiv
call
rorl
and
divb
or
mov
cmc
add
lcall
adc
rcll
jle
or
cmp
mov
orb
cli
pushl
mov
pop
sbbb
mov
push
mov
scas
cli
call
subb
sbb
lcall
les
loop
cld
in
and
and
push
lahf
jmp
decl
xchg
and
cmpl
adc
or
sub
push
dec
sarb
dec
or
jb
imul
xchg
mov
insl
mov
rcll
ja
cli
push
fiaddl
scas
decl
dec
xchg
es
jp
clc
into
ror
xor
dec
inc
adc
sysexit
pusha
jns
mov
jg
mov
mov
xchg
adc
or
mov
mov
pop
push
jae
pop
and
mov
sub
iret
xor
sbb
jg
sub
das
fucom
xchg
xchg
xchg
pushf
in
push
mov
mov
xchg
inc
cmp
hlt
cmp
js
mov
stc
pop
mov
sub
pop
shl
sar
jecxz
fiaddl
lahf
nop
mov
int
fcmovnbe
adc
cmp
mov
jp
sbb
repnz
in
imul
jmp
cmpsb
subb
cli
mov
sar
xlat
fildl
fmul
mov
das
mov
lods
les
data16
add
sarb
mov
es
loop
rcrb
jge
sub
pop
jmp
hlt
mov
sbbl
lcall
mov
or
add
mov
dec
je
shrb
dec
inc
jmp
push
cmp
or
imul
into
sbb
pop
int
fwait
inc
sub
pop
hlt
xchg
fidivrl
inc
lods
mov
pop
data16
lret
mov
jecxz
incl
inc
movsl
sbb
adc
outsl
jmp
pop
jnp
adc
lock
cmp
fiaddl
fwait
pop
in
pusha
cld
mov
xor
iret
mov
fstpt
cmp
subl
jns
test
imul
push
inc
mov
in
je
xor
mov
xchg
cmp
in
jns
push
in
and
inc
frstor
ds
sbb
movsl
or
mov
test
mov
sbb
sbb
addr16
idivl
pop
cmp
sub
jno
std
decl
iret
out
mov
xor
stc
fs
pop
cmpsb
or
lcall
popf
clc
push
repz
inc
fwait
mov
xchg
sbbl
adc
in
or
lock
sbb
push
inc
std
sbb
jp
pop
outsb
loop
mov
push
or
lahf
call
imul
sbb
jo
aam
outsb
lcall
test
mov
fpatan
xchg
lods
icebp
cs
xchg
cmp
sub
decl
push
or
xchg
pop
jns
xchg
fstpl
test
pop
stc
push
test
dec
movsb
mov
daa
mov
dec
ljmp
scas
cmpsl
mov
sub
mov
xor
pop
lods
fwait
xor
lods
or
imul
mov
jmp
dec
mov
jmp
push
aam
lahf
and
and
movsb
cwtl
push
jae
dec
testb
add
incl
testb
xlat
xchg
nop
jmp
test
xchg
sti
out
arpl
movsb
lret
cld
test
lcall
push
lods
sub
dec
lea
lahf
or
jnp
adc
add
popf
inc
rclb
mov
inc
or
lds
add
or
sbb
jp
vshufps
xor
sbb
xlat
push
in
stos
imul
aad
ficoms
test
xchg
jmp
aad
das
cmp
orl
sarb
shl
arpl
aad
or
sar
pushl
in
adc
and
add
ret
imul
mov
xlat
testb
in
in
xchg
sub
dec
xchg
stc
cmpsl
push
xchg
cwtl
decl
imul
cmpsb
js
subl
data16
movb
mov
dec
or
xor
mov
and
add
mov
outsl
pop
pop
cmpl
add
xchg
sub
sbb
nop
mov
call
adc
aad
inc
pop
add
ret
inc
sbb
scas
mov
pusha
lods
call
dec
cli
inc
clc
push
loope
xchg
mov
outsb
mov
jnp
pushl
pushf
loop
mov
mov
mov
mov
std
and
add
jmp
movsl
jbe
ljmp
fcomi
mov
mov
push
lea
add
or
ljmp
decl
mov
sub
fwait
testb
stos
mov
add
push
std
ljmp
push
mov
adc
cmp
sub
cld
call
popa
aad
ror
inc
dec
pop
scas
pusha
push
repz
aam
push
cld
fnsave
ljmp
sub
mov
jnp
mov
inc
xchg
xchg
call
es
xchg
lea
int3
aam
in
in
stos
jb
dec
xchg
call
inc
mov
jl
jno
in
lods
repz
inc
cld
pop
xchg
dec
mov
popf
push
jg
or
push
js
mov
pop
pop
sbb
imul
mov
cmp
icebp
incl
cs
pop
dec
push
mov
xchg
sub
pop
ljmp
inc
fcomps
jno
std
sub
daa
mov
je
push
int
aam
sub
mov
std
mov
xor
fwait
xchg
data16
push
outsl
enter
xchg
add
mov
jmp
jns
das
inc
mov
sbb
pop
adc
sub
arpl
insl
jmp
and
ss
sub
enter
pop
aam
sarl
sub
adc
jg
jle
pop
aas
fnsetpm(287
push
loope
xchg
insb
fwait
std
push
mov
cmp
jg
ret
jno
pop
xchg
seta
add
add
add
push
mov
aaa
xchg
in
mov
scas
and
aad
xchg
pop
and
fiadds
rcll
dec
call
push
mov
xchg
mov
in
rclb
or
decl
add
aaa
push
jae
add
test
push
xchg
add
adc
out
call
add
xorb
sbbb
mov
dec
add
imul
inc
push
fildll
mov
jecxz
add
mov
mov
or
pop
pop
test
in
ljmp
adc
mov
movsl
cmp
mov
aam
pop
daa
jle
pushf
xor
outsl
sbb
aas
pop
fcos
sti
inc
or
sub
jp
rcrb
test
mov
dec
jle
and
stc
iret
fs
pop
jge
cmp
sbb
stos
int
nop
stc
movsl
subb
les
or
mov
xchg
cmpsb
pop
fstpt
fdivrl
mov
jp
std
fsubr
gs
out
push
xchg
lock
in
and
sti
mov
or
ss
es
adc
pushl
or
xchg
mov
dec
ret
mov
jg
sub
test
cld
add
sahf
jno
jge
mov
ss
xlat
inc
dec
xor
inc
fdivrl
add
jae
addr16
insl
test
mov
xchg
mov
repnz
shlb
lcall
dec
popf
rep
cmp
imul
sti
pop
or
fadd
imul
pop
movb
lcall
dec
and
rolb
lret
fldl
outsl
bound
and
sub
dec
decl
jl
gs
push
push
insb
push
insl
xchg
clts
mov
inc
or
mov
mov
lcall
xlat
addr16
or
jmp
out
adc
jnp
or
add
mov
pushl
xor
mov
es
xlat
out
stos
jb
and
fisttps
or
shl
add
adc
pusha
call
nop
cmp
lock
and
mov
sti
or
sub
xchg
pop
dec
popa
inc
and
int
cmp
fwait
fwait
test
decl
pop
cmp
pop
scas
add
xor
jnp
pop
repz
add
inc
loope
mov
scas
add
cmp
jne
pop
mov
mov
dec
subb
loopne
xchg
movsl
pop
frstor
andl
lret
std
ljmp
mov
cli
test
movsb
stos
add
out
in
lds
fdivr
incl
test
xchg
stos
mov
movsl
sbb
cmp
mov
in
sti
stos
sbb
sub
push
test
lcall
test
addb
imul
and
mov
xchg
dec
inc
or
push
lahf
and
out
xor
lret
jmp
and
cmp
jmp
incl
jl
inc
sbb
push
enter
xchg
add
lock
rclb
mov
xor
mov
ds
test
jo
mov
out
xchg
popf
out
rclb
dec
push
and
arpl
lcall
pop
cmc
out
mov
mov
add
sbb
popa
push
mov
call
and
add
repnz
pop
testb
push
cmc
mov
setbe
jmp
xor
mov
leave
jmp
cmp
movsb
rcrl
inc
or
pop
repz
sarl
ret
sar
jbe
add
or
outsb
ja
push
stos
cmp
popa
stos
sub
pop
sub
bswap
pop
ljmp
aam
pop
in
dec
sbb
sbb
sbb
insb
mov
jl
int
decb
popf
mov
and
sbb
lret
clc
fs
clc
jg
iret
dec
lds
out
adc
out
sbb
lods
lcall
dec
xlat
ss
mov
movsl
adc
pop
xor
insb
in
fisubs
pop
xchg
mov
adc
out
cmp
inc
inc
movsl
fsub
jb
in
lea
incl
dec
nop
je
mov
inc
in
xchg
sub
movsl
ljmp
add
sbb
lock
call
jo
repz
dec
mov
cli
iret
push
push
or
dec
xchg
mov
xchg
aad
fbstp
setg
cli
outsl
push
mov
mov
jp
cmp
fmuls
adc
test
dec
add
and
lret
sti
test
mov
pop
in
mov
inc
xlat
inc
jnp
push
inc
inc
xchg
incl
vxorps
mov
and
hlt
sbb
test
sub
call
adc
dec
je
inc
fildll
test
jge
pop
inc
cmpsb
cltd
loopne
adc
dec
jmp
adc
jae
jmp
adc
ret
gs
les
jbe
int3
lcall
call
arpl
in
es
fcoms
test
adc
push
jb
jns
push
cwtl
inc
movl
jmp
push
pop
pop
pop
cltd
mov
daa
clc
inc
add
xor
lcall
jecxz
mov
rorl
pushl
sbb
into
xchg
das
or
nop
out
jo
adc
into
or
or
jmp
sar
call
sub
clc
cmpsb
pop
and
aam
fsts
fiaddl
sbb
sarl
loop
push
xchg
add
mov
mov
jmp
imul
pop
sbb
push
push
sbb
pushf
outsl
xchg
pop
fwait
or
inc
in
xchg
daa
nop
movq
xchg
mov
cmpsl
es
inc
push
jmp
adc
mov
sbb
icebp
or
xor
iret
sub
ljmp
xchg
out
pop
fidivs
push
jecxz
lea
dec
negb
ss
ljmp
scas
xlat
fdivrs
sub
lahf
xchg
scas
fsubr
sbb
fcmovne
decl
adc
push
lcall
cmp
dec
stc
mov
pushl
cmp
clc
add
or
out
ficompl
jg
adc
mov
in
xor
jb
or
fcomps
cld
test
in
ljmp
jl
xchg
movsl
ljmp
sub
pop
sub
pop
movsb
and
cli
sub
ds
add
mov
test
shl
and
outsl
scas
mov
daa
loope
xor
adc
addr16
inc
dec
cli
mov
sub
insl
or
pushl
imul
mov
jb
outsl
inc
jmp
mov
call
inc
add
add
rcrb
gs
das
jp
mov
popf
shlb
mov
insl
mov
out
mulb
xchg
movsb
push
fisubrs
inc
push
sub
pop
and
adc
bound
add
xchg
or
or
dec
mov
add
les
imul
cmpsb
sub
mov
call
fildl
inc
test
lret
out
cmp
fwait
pop
mov
dec
ljmp
enter
push
inc
xchg
rcrb
jecxz
push
fnstenv
jmp
arpl
dec
lret
fldl
cmp
sub
hlt
cmpsb
inc
popf
jmp
aam
xchg
cwtl
dec
sub
cmpsl
mov
inc
loopne
not
xchg
cmc
adc
and
adc
fiaddl
push
std
fcomip
iret
mov
loop
sahf
pop
or
cmp
outsl
cli
push
jb
lahf
lds
lods
xor
insb
cmpsl
test
pop
mov
mov
cmc
setb
xchg
mov
insb
cmp
or
ljmp
push
cmp
fs
adcb
push
bound
mov
dec
push
and
insb
fcoms
jb
cmc
ljmp
lds
shrb
mov
pop
push
idivl
insb
xchg
mov
mov
xchg
mov
push
dec
scas
push
jno
cli
js
ja
xor
inc
inc
add
inc
mov
sbb
xchg
mov
in
push
and
cmp
mov
sar
lcall
xor
and
div
dec
gs
into
pushf
fmuls
cmc
std
outsl
dec
pop
test
or
fwait
iret
jmp
or
pop
mov
scas
or
stc
xchg
cli
inc
cmpsl
flds
ss
add
aam
cmp
shll
andl
jno
int3
imul
cmpsl
lcall
or
jmp
repnz
add
push
dec
aaa
lea
test
sub
sub
gs
xchg
mov
incl
sbb
jmp
addb
inc
shrl
jp
fwait
mov
call
xor
mov
inc
lret
cltd
push
js
push
dec
shlb
mov
cmp
add
in
pushl
call
sub
in
lods
int3
push
xchg
cmpsl
sub
aam
scas
push
cwtl
call
mov
xchg
cmp
add
mov
mov
sub
lahf
jmp
mov
xchg
sub
or
mov
lcall
mov
inc
inc
orl
fadd
mov
sub
js
mov
mov
movsl
sbb
xchg
jbe
in
xor
pop
lcall
or
out
in
fisubrl
movsl
or
mov
jb
jg
scas
jb
clc
pushl
sub
fistpl
dec
ljmp
dec
push
and
fildll
rcrb
incl
push
mov
mov
in
pusha
mov
jmp
push
call
sti
jns
lcall
dec
lds
cmpsb
cmp
pop
filds
lds
jo
int3
scas
clc
xchg
lcall
movsl
adc
jb
mov
xchg
xchg
mov
lea
in
scas
bound
inc
out
clc
inc
jae
xor
pop
jo
jg
aad
mov
lea
sub
jg
lcall
test
mov
mov
cwtl
inc
mov
push
jno
ljmp
jns
xchg
rorb
cmpsb
pop
lahf
lods
aam
xchg
and
cmp
mov
jmp
in
xchg
jle
mov
mov
lcall
mov
cmp
pop
push
push
ljmp
out
fs
xchg
es
test
jne
inc
bound
mov
dec
jmp
mov
pop
adcb
arpl
fwait
ljmp
in
adc
inc
push
and
or
sub
adc
pop
std
imul
mov
call
repnz
mov
mov
or
inc
adc
mov
das
aaa
dec
loop
cmp
scas
clc
lret
pop
pop
jl
mov
or
jbe
pushf
cmp
sarb
rcrl
jle
cmp
xlat
xlat
mov
jecxz
xchg
jmp
and
xor
pop
and
pop
std
clc
and
jae
mov
jmp
mov
xchg
sbb
fildll
pusha
mov
mov
mov
movsl
cmc
cld
mov
inc
loope
xor
mov
lock
jo
cmp
insb
pop
sbb
call
push
mov
mov
mulb
jp
xchg
in
xchg
lock
fsub
cli
jmp
adc
cmpsl
cmp
ret
or
jmp
icebp
mov
pop
mov
cmc
fcoml
mov
cmp
test
inc
inc
adc
ljmp
and
cmpsb
enter
add
push
pop
fucom
cmp
or
mov
add
scas
xor
adc
pop
pushl
xchg
out
leave
mov
psubq
mov
jl
inc
pop
jne
iret
and
imul
mov
pop
iret
jae
loope
cwtl
or
mov
jmp
xlat
sub
out
dec
into
gs
lock
in
xchg
scas
int3
testl
adc
inc
jno
mov
mov
jmp
shlb
data16
jo
stos
sbb
imul
imul
roll
outsb
mov
sahf
and
or
fadds
cmp
outsb
mov
push
sti
push
test
in
cmp
lcall
mov
sub
leave
push
es
loopne
lahf
das
pop
xlat
int
fucomp
ljmp
shlb
lds
jg
sub
sbbb
push
mov
movsb
rclb
sbb
push
mov
pop
cmp
and
ljmp
push
push
fstps
add
cmc
iret
iret
inc
jl
dec
lret
mov
adc
mov
es
stos
pop
or
mov
adc
jae
jae
insl
push
call
cmp
mov
mov
popa
cmp
ds
repz
ds
cmpsl
adc
lret
pushl
nop
mov
xchg
xor
push
add
rcll
movsb
mov
sub
jp
adc
call
rcl
mov
and
push
xor
pop
xchg
rcll
cmp
icebp
call
cwtl
pop
int
jle
cld
popa
mov
push
inc
enter
in
rcll
iret
ljmp
adc
in
mov
xor
in
pop
ljmp
scas
movsl
cmp
inc
hlt
jp
adc
pop
cmp
jb
cmp
xchg
adc
and
movsl
lcall
incl
or
cmp
add
push
push
sti
sub
int
xchg
call
add
in
enter
and
xchg
or
repz
mov
stos
adc
inc
push
stos
loopne
cli
in
inc
inc
xchg
in
dec
pop
inc
outsl
int3
out
std
push
dec
mov
mov
int
pop
in
test
test
dec
sbb
xor
jbe
pushl
cmp
cmpsl
pusha
lea
adc
hlt
inc
cmpl
stos
xchg
pop
in
or
test
sbb
std
out
stos
xchg
fsts
movsl
fsubrl
push
add
push
aad
sub
cld
mov
pop
mov
push
pusha
gs
jae
pop
dec
popa
scas
lea
pushl
jnp
cltd
call
sub
push
lock
push
test
mov
dec
imul
pop
mov
jg
lahf
push
iret
sbb
scas
pop
sbb
lock
mov
clc
icebp
negl
in
push
dec
arpl
int
fwait
mull
dec
adc
cmp
std
decl
cmp
stos
push
or
out
out
inc
cmc
jne
mov
ret
ss
xchg
sbb
call
inc
aas
push
mov
pop
jecxz
fistpll
cmc
int
incl
scas
popf
cs
cltd
mov
fldl
and
es
mov
ss
pop
cmpsl
pop
push
sub
jmp
scas
lods
mov
icebp
xor
lods
cmpsb
jge
sub
in
mov
mov
or
cld
call
pop
cs
stc
or
int3
cmp
imul
incl
pop
not
inc
inc
movsb
jo
inc
push
in
cmp
mov
into
ret
call
in
xchg
mov
fmull
cmp
cmpb
lods
lods
cwtl
incl
lret
in
repz
mov
pusha
popf
pop
jnp
sub
lods
loope
inc
test
dec
mov
xchg
test
shl
mov
mov
xor
mov
xchg
cmpsl
fdivrp
cwtl
pushl
sbb
push
inc
xchg
pusha
mov
sbb
fiaddl
in
loopne
fadd
and
data16
ljmp
dec
xor
sbb
icebp
xchg
iret
jecxz
addr16
adc
xor
lcall
movsl
xor
pop
movb
xor
mov
dec
ret
jl
ret
fs
pop
cmc
mov
and
es
push
xchg
pop
aas
lock
out
push
xlat
incl
into
push
xor
jmp
dec
mov
jp
ljmp
les
pushf
icebp
or
popa
loope
dec
fistl
sbb
mov
fdivl
xchg
addr16
mov
mov
repnz
jmp
cmp
lds
imul
sub
fmul
inc
push
decl
push
outsl
jae
sti
shr
inc
in
andb
in
jb
pusha
ljmp
cli
mov
mov
xor
jmp
pop
adc
fs
jmp
popa
push
sbb
clc
ss
jge
pop
repz
fisttps
xchg
call
jle
jbe
in
mov
pop
gs
fists
jmp
mov
jl
mov
dec
and
mov
add
mov
into
pop
outsb
enter
mov
xor
hlt
push
mov
frstor
xor
sub
sbb
mov
pop
int
pusha
inc
inc
sahf
cmpsb
adc
out
sbb
cld
xor
adc
call
sarl
pop
ljmp
mov
cmp
jae
pop
neg
push
cmp
mov
jmp
xor
sub
sbb
inc
pop
inc
es
mov
add
adc
mov
fnstcw
dec
mov
out
outsl
fsubrp
mov
scas
mov
sarl
inc
inc
xchg
je
bound
inc
jp
ljmp
mul
pushf
and
push
xor
mov
mov
xchg
jge
jg
or
cmp
js
inc
leave
mov
pop
clc
ljmp
int
mov
stos
or
rol
mov
pushl
stos
jb
adc
pop
inc
jle
fldl
or
pushl
add
jo
arpl
test
jecxz
sbb
sbb
xor
stos
repnz
cmc
xlat
cmp
pop
cld
jmp
inc
jmp
aad
test
jmp
lock
jg
ja
mov
int
xor
xchg
or
je
out
mov
lcall
cltd
out
xchg
sub
outsl
sbbb
adc
push
sbb
add
xlat
scas
in
lcall
cld
das
push
adc
call
daa
sub
subb
cmp
xchg
xchg
sub
jge
or
decl
jnp
test
testl
lea
fcomp
mov
into
and
std
jns
dec
add
cmp
rorb
push
addb
xchg
pushl
sub
pop
adc
into
cwtl
hlt
ret
push
lock
jns
popa
ror
loopne
repz
lahf
cwtl
loopne
int3
inc
je
stc
not
push
mov
xor
cmp
jg
and
aas
mov
pop
cld
dec
das
imul
call
fs
movsb
test
mov
lahf
push
ret
xlat
mov
sbb
outsb
in
push
fdivl
adc
xchg
add
xchg
fcomip
mov
jne
mov
lock
cltd
imul
pop
sbb
incl
push
mov
cltd
insb
aas
xor
fnstsw
jae
shrb
add
dec
adc
shlb
jnp
push
mov
cltd
or
and
jge
inc
leave
ret
xchg
mov
jmp
cmpsl
ljmp
pop
pop
lcall
lcall
stc
sbb
ret
inc
jne
xor
into
xor
cmp
out
shlb
push
ret
mov
int3
cmpsb
js
js
jns
or
jmp
in
inc
jge
loopne
fisttps
pop
push
cli
iret
jae
or
jecxz
mov
jmp
hlt
mov
cwtl
cmc
cmp
fucomi
mov
sub
inc
jg
pop
ret
mov
fisttpll
or
and
jmp
sbb
sbb
push
fimuls
jmp
test
mov
sub
rorb
stos
or
mov
adc
mov
mov
incl
sbb
shll
clc
mov
insl
push
sbb
test
mov
cmp
inc
xor
mov
lods
mov
mov
cmp
stc
js
decl
sahf
into
insl
xchg
das
cmp
stos
mov
xchg
outsb
inc
inc
scas
sub
jp
mov
decl
pushf
test
scas
push
popa
cmp
sbb
inc
js
mov
call
incl
dec
aad
frstor
shrb
mov
idiv
pop
pop
mov
mov
sub
inc
stos
and
psubq
hlt
pop
cwtl
dec
push
ljmp
mov
sbb
std
or
sub
lcall
adc
fsts
iret
cli
shlb
sahf
xchg
ja
lret
es
mov
mov
fists
scas
push
push
adc
nop
loope
cmc
jae
jns
mov
mov
call
dec
adc
inc
daa
cli
je
bound
leave
dec
inc
mov
scas
add
stc
jnp
hlt
jg
push
push
cs
lea
sbb
mov
hlt
adc
out
daa
pop
in
arpl
data16
mov
dec
dec
jp
adc
cmp
adc
sub
dec
sbb
sub
mov
push
and
pop
pop
inc
inc
les
mov
dec
cmp
mov
xor
inc
push
dec
adc
sbb
fcmovne
sbb
or
xchg
fiadds
jns
xor
xrstors
inc
ljmp
cltd
sub
bnd
cwtl
mov
jmp
pop
call
and
rep
push
lret
rclb
sbbb
rcrb
jmp
mov
lcall
pop
clc
push
cmc
mov
adc
addr16
sarb
leave
mov
call
cmp
mov
xchg
stc
and
dec
stc
push
mov
xchg
scas
std
sub
adc
add
decl
sbb
add
insl
inc
push
xchg
cmp
in
rcll
ljmp
aas
aad
ficoml
mov
lcall
sbb
and
int3
add
call
jl
pop
adc
jae
push
push
add
xor
jecxz
pushl
js
jmp
and
mov
cmp
inc
mov
jmp
or
lods
xchg
and
xor
in
adc
xlat
ret
mov
sbb
decb
ret
bsf
push
jmp
aas
pop
in
mov
sbb
out
jmp
js
pop
loop
inc
jp
or
and
loope
bound
jnp
mov
push
es
ljmp
dec
xchg
inc
inc
jnp
cmp
adc
popa
xor
and
shl
stc
cmpsl
fistl
fcomi
or
inc
int3
xor
mov
aad
sar
aam
pop
adc
cmp
insb
mov
call
inc
shll
xor
je
inc
pop
ret
push
cmpsl
xchg
push
dec
cmpsb
pop
in
jmp
cmc
jmp
lcall
push
call
jb
mov
out
mov
push
cmp
out
pop
push
test
decl
or
gs
gs
push
add
adc
sbb
subl
sub
lret
dec
sub
mov
test
les
call
stos
sbb
cmp
mov
cs
call
pop
mov
push
je
test
stos
ljmp
pushl
adc
in
das
call
enter
fisttps
mov
push
pushl
int3
daa
sbb
or
xchg
call
sub
ljmp
loop
lahf
cltd
ljmp
fcmovnbe
pop
cmpsb
inc
and
in
push
add
fsubs
mov
in
out
push
pushf
xor
out
mov
call
popl
cwtl
push
pop
shll
push
mov
mov
incl
push
das
push
dec
sbb
sub
push
cmpsl
mov
xlat
addl
cltd
mov
cltd
insl
mov
aaa
mov
xor
ret
mov
add
jmp
push
out
das
int3
out
mov
lcall
lods
inc
adc
mov
shrl
loopne
jo
inc
xchg
mov
cli
push
push
das
loopne
push
lds
lcall
sbb
paddq
hlt
pop
fcompl
leave
adc
aaa
jnp
leave
shll
jg
lods
dec
out
inc
mov
sbb
xchg
and
cwtl
mov
test
jmp
and
or
xor
insl
fcomp
sub
sbb
pushf
rcr
jmp
sti
sbb
decl
gs
sub
mov
in
in
das
mov
xor
xchg
jb
sahf
lret
or
push
xchg
inc
call
cld
sahf
popf
loopne
cmp
aaa
jno
fistpl
ficoml
test
cli
pop
ret
push
sbb
icebp
lcall
insl
fists
scas
cli
xchg
mov
pusha
repnz
or
lcall
shll
insl
jo
mov
fsubs
push
into
pop
out
cli
in
sbb
aaa
push
xchg
pop
cmc
decl
xchg
in
std
and
xchg
aas
ss
loopne
je
mov
fcoml
decl
inc
sub
mov
test
addr16
das
fisubrs
rcrl
inc
mov
leave
sbbb
lds
push
jle
mov
mov
icebp
sbb
add
add
clc
jmp
xor
cmp
pop
xchg
or
in
lock
inc
jne
inc
mov
pop
push
jmp
dec
lahf
xchg
cmp
fnstcw
or
call
sbb
inc
add
dec
mov
jb
jb
cwtl
daa
or
sub
rcrl
mov
add
clc
pushl
je
sti
popf
test
xchg
add
fdivrp
mov
xchg
xor
push
ret
jns
xor
xchg
dec
cld
decl
jg
out
xchg
lods
in
add
mov
ret
pushf
push
fistl
jbe
call
push
cmp
adc
popf
xor
xchg
adc
sub
lahf
pop
fs
fwait
test
subb
es
push
jp
mov
sti
in
and
jl
ret
shll
dec
dec
stc
jnp
idivb
lcall
out
insb
cmp
add
jb
sub
mov
decb
mov
mov
loope
rol
push
mov
fistps
mov
ljmp
and
loop
mov
fsubrs
ret
add
mov
mov
jge
xor
mov
mov
shlb
call
sub
or
cmp
and
adc
aam
jg
decb
in
mull
popa
sub
mov
je
icebp
sub
int3
or
adc
aad
into
jl
sbb
gs
push
jge
xchg
cmp
lods
repz
push
inc
pop
mov
les
shrb
add
sbb
mov
pop
inc
sarb
xchg
out
sub
pop
call
adc
cmovb
push
and
jge
mov
bound
jmp
pop
iret
add
bound
mov
xchg
cmc
inc
adc
cmpsb
xor
clc
or
sub
int3
decl
inc
and
or
movsb
ss
fs
popf
mov
pop
sub
jnp
lcall
pop
sbb
dec
cmp
pusha
and
add
cmpsb
dec
mov
daa
and
es
pop
call
stc
mov
rcll
mov
jg
dec
mov
xchg
ljmp
clc
dec
jecxz
add
xor
inc
or
scas
mov
icebp
repnz
outsb
inc
add
jb
inc
pop
sarb
aad
jp
sbb
pop
out
ss
cwtl
lcall
ja
jp
jmpw
sahf
jne
cmpsl
aas
mov
hlt
rorb
divb
je
loope
lcall
push
push
sti
popa
insb
jge
dec
andl
roll
bound
cltd
aad
dec
subl
or
lcall
jae
ljmp
xchg
lret
rcll
cmp
in
mov
icebp
xor
sub
outsb
jle
push
xchg
mov
adc
adc
ljmp
dec
fnstenv
fcomip
jmp
xchg
mov
dec
cmp
xor
push
gs
jmp
lods
es
rolb
sti
xor
pop
movsb
repz
pop
xchg
fdivr
ljmp
add
icebp
pushl
dec
mov
test
lods
lock
sub
push
ljmp
testb
xor
int
pop
nop
out
mov
pop
imul
dec
rcrb
lcall
xor
stos
in
mov
xchg
loop
inc
dec
hlt
jle
push
cs
aad
aad
jmp
push
rorl
aaa
pop
cmpsl
dec
fildll
xorl
add
testb
into
jmp
push
or
jnp
adc
test
cmp
xchg
stos
stos
push
cmp
dec
in
xchg
xchg
dec
ret
stos
jb
add
xchg
xor
xchg
jae
pop
dec
mov
xchg
cmpsl
xor
popf
pop
cmp
jmp
add
dec
pop
and
inc
mov
mov
mov
nop
stos
shlb
fnsave
hlt
scas
push
jb
add
pop
inc
sti
pop
add
dec
sub
fistl
xchg
cmpsb
and
pop
cs
enter
push
fnsave
adc
adc
lcall
sub
cmp
scas
add
cmp
inc
sbb
scas
fwait
mov
incl
and
cs
jb
je
adc
push
rcrl
or
int
je
daa
mov
decl
mov
jb
inc
sub
int3
test
stos
fidivs
cmp
cmp
lcall
test
addr16
mov
cmpb
or
mov
mov
mov
mov
repz
test
testb
cmp
clc
cmp
sbb
mov
xor
fwait
clc
hlt
mov
inc
mov
jl
decl
leave
in
sub
mov
dec
dec
into
xchg
xor
adc
inc
mov
mov
mov
sub
les
pop
ja
repnz
in
mov
jne
ret
lcall
bound
imul
in
mov
ret
movsb
mov
ljmp
push
int
nop
gs
out
lds
cmp
cmpb
hlt
jmp
imul
in
jmp
test
loopne
popa
and
daa
inc
push
daa
sbb
cmp
imul
push
incl
jle
push
les
or
outsl
clc
fisttps
je
js
adc
cmp
and
ret
dec
fsubr
mov
pop
cli
adc
mov
adc
pop
push
jmp
imul
pop
cmc
push
call
inc
mov
es
mov
xor
call
std
decl
call
inc
jmp
lods
shr
dec
pop
pusha
call
movb
decl
sarl
bound
jmp
ss
cmpsl
sahf
pop
sbb
or
pushl
adcb
jns
leave
xchg
lods
sbb
cmp
daa
mov
arpl
xorl
inc
inc
adc
hlt
xchg
aad
jge
xchg
movsb
jbe
cmp
test
ret
dec
int
mov
call
sub
call
leave
inc
loopne
mov
ror
mov
xor
inc
cld
jne
pushl
das
in
daa
xchg
adc
pop
mov
stc
es
or
xor
nop
jmp
add
sub
nop
movsb
push
pop
ret
mov
cwtl
inc
push
push
lods
jp
int
mov
mov
xchg
sarl
mov
out
fcomi
xor
jle
pop
adc
jp
call
cld
dec
pop
mov
aam
shlb
lock
sbb
mov
ds
push
jne
in
add
stos
ljmp
xchg
mov
jmp
xchg
cld
sbb
call
ret
fsts
dec
mov
loope
inc
scas
dec
jmp
dec
shll
sarb
flds
mov
push
arpl
xchg
sbb
repnz
arpl
cmpl
dec
add
fld
in
imul
movsb
mov
sahf
mov
jle
cmp
fwait
cmp
mov
sub
cmp
jg
xor
sub
mov
xchg
pop
push
scas
mov
xchg
clc
inc
addb
push
sub
push
adc
clc
loope
lret
push
jg
jo
int
rcr
fldl2t
fcompl
add
dec
and
je
xchg
push
push
cli
jmp
jge
xor
pop
pop
rorb
and
nop
mov
sub
mov
fwait
sahf
jecxz
sti
pushf
repz
jg
mov
pop
sbb
jp
ljmp
dec
push
inc
in
jp
sbb
in
mov
xor
incl
adc
filds
das
cmp
dec
push
aam
rol
dec
and
cmp
call
xchg
xchg
cmp
push
sbb
push
push
es
orb
in
sbb
inc
xor
popa
push
xchg
cltd
pushl
rcll
cmp
pop
stos
jno
jge
fsubrp
jg
call
jbe
mov
fs
std
rclb
jecxz
or
fldenv
jmp
or
adcb
lret
addr16
jg
xchg
pop
xchg
jl
cmp
call
push
mov
mov
dec
and
mov
lds
fidivrl
xchg
mov
loope
ss
jg
cmc
and
adc
lret
sub
daa
movsb
xor
dec
mov
data16
jg
cs
andb
mov
mov
jmp
pop
mov
aas
push
xor
fisttps
leave
add
xchg
push
push
into
add
aaa
dec
xor
mov
int
decl
in
cmp
dec
outsl
pop
lcall
inc
mov
or
add
sbb
rolb
inc
ds
lcall
adc
add
shrl
mov
cltd
or
ret
jnp
adc
adc
std
lret
or
cli
mov
insb
imul
ja
jmp
into
jb
out
aam
je
sbb
add
ret
adc
inc
rcrl
dec
pop
push
decl
mov
icebp
in
out
js
sbbb
arpl
lds
xor
push
ljmp
ljmp
adc
add
fisttps
sbb
test
push
test
ffree
push
lods
xor
decl
and
shrl
xorl
mov
mov
jmp
mov
sahf
jno
push
mov
add
sbb
xor
icebp
aad
sahf
fisttpll
or
out
pop
xchg
in
ret
or
sub
testl
push
sub
decl
push
sbb
lods
popa
inc
ret
fsubr
xorl
pop
push
jb
mov
repz
mov
scas
cli
ss
daa
or
jne
rol
ror
mov
sbb
ljmp
jl
aam
push
or
mov
mov
int3
mov
inc
in
adc
repnz
mov
cmpsb
out
add
in
xchg
pop
in
bound
rcrl
sub
decl
stos
rorb
mov
and
jmp
push
dec
add
pop
pop
lcall
xchg
mov
xchg
and
add
incl
loope
mov
mov
jbe
add
cmp
mov
jae
mov
mov
pop
test
jp
jbe
xlat
sbb
aad
dec
dec
daa
push
lods
dec
inc
insb
jmp
rclb
pop
repnz
call
xor
xchg
xchg
sub
pop
jg,pt
lret
push
lock
dec
shlb
cmc
aaa
popf
mov
cmpsl
popf
js
call
test
add
push
jns
xchg
fwait
in
test
push
lahf
xchg
out
clc
lcall
movsb
mov
in
out
and
imul
lcall
mov
aam
shlb
sti
cmp
pop
lock
mov
lea
add
pop
jne
push
inc
sbb
insb
push
xor
in
mov
jns
jno
jg
push
cld
pop
or
popf
nop
loopne
int
cltd
outsl
mov
mov
lcall
cmp
cmp
test
hlt
loopne
or
loopne
jl
push
cmp
fimuls
cli
push
outsb
inc
dec
mov
pop
mov
dec
imul
leave
jo
mov
sub
mov
mov
or
xchg
call
ret
lret
xchg
sub
mov
dec
ljmp
pop
ret
sbb
incl
push
int
lods
addr16
pushf
xchg
daa
mov
nop
dec
push
dec
cmc
in
xchg
popf
je
mov
adc
and
movsl
adc
mov
in
lret
and
incl
in
or
mov
sbb
outsb
negb
xor
inc
pop
in
int3
out
imulb
insl
dec
or
xchg
es
add
sbb
mov
or
jns
cmc
sbb
fcomip
ljmp
into
adc
insb
sbb
pop
out
lds
dec
nop
cmp
pop
jmp
jmp
leave
adc
lahf
mov
pop
mov
push
test
andb
cmp
call
jg
cli
or
cltd
inc
pop
xorb
jo
mov
push
roll
inc
push
stc
ja
inc
ljmp
or
ret
pop
lcall
cmp
mov
cld
push
loopne
or
cli
xchg
test
mov
int3
jno
fsubrl
xchg
incl
gs
pop
mov
pusha
lds
push
inc
stos
or
decl
xchg
int
xor
mov
bound
les
push
ja
shlb
mov
decl
hlt
flds
push
data16
inc
push
fists
and
incl
pop
lret
outsb
maskmovq
testl
push
cmp
stos
dec
daa
sub
sub
and
push
pop
jbe
and
loopne
cmp
mov
inc
xchg
adc
xchg
ss
testb
or
imul
incl
dec
xorl
fnstsw
dec
adc
roll
lret
into
outsl
xchg
ljmp
jg
mov
xor
add
mov
cmp
ss
inc
in
and
and
mov
ja
xor
out
and
push
clc
jle
pop
inc
inc
adc
cmc
js
mov
jg
xchg
call
lcall
xchg
sub
cmp
cmp
sbb
add
push
inc
out
hlt
arpl
push
in
jo
and
call
pop
xor
in
pop
cltd
or
jns
mov
repz
dec
insb
jl
or
clc
sub
jmp
test
xchg
adc
jnp
bound
fwait
mov
rorb
adc
add
push
in
sub
fsts
cmp
lret
popf
pop
adc
stos
data16
sub
aaa
mov
mov
sbb
fs
fwait
inc
xor
fidivs
mov
mov
ret
sbb
jns
call
lret
das
test
imul
jne
out
inc
jge
daa
outsb
mov
aaa
cld
movsb
imul
sbb
loop
dec
or
jge
hlt
js
cld
lcall
sub
xor
rcr
cmpsb
pop
pop
push
jl
daa
jl
in
adc
sbb
mov
sbb
push
and
add
push
or
adc
mov
pusha
mov
jg
das
mov
jge
inc
push
test
fdivs
lods
pop
pushf
cs
data16
call
std
cmpsb
aaa
sbb
dec
jg
lods
dec
sahf
psubq
lock
mov
imul
push
pop
lock
call
cld
jmp
jmp
int3
mov
movsb
js
aad
mov
or
fistps
cmp
add
sub
push
sbb
stos
mov
push
shll
ss
mov
es
mov
xchg
popa
or
arpl
aad
jmp
dec
inc
xchg
test
fildll
out
pop
shrl
lock
sbb
das
sar
clc
dec
lret
fnstenv
loopne
adc
ljmp
ljmp
add
inc
cmp
imul
and
in
lea
pop
inc
mov
test
sbbb
loopne
sbb
fimull
decl
dec
push
add
lret
bound
bound
icebp
adc
fisttps
jge
fcmovbe
xchg
adc
xor
pop
mov
test
outsb
sbb
push
push
xlat
mov
ljmp
rol
pop
dec
fwait
nop
mov
push
inc
sbb
out
cmpl
test
sbb
adc
or
xchg
xor
cmp
push
and
sub
test
fildll
xchg
jmp
inc
mov
sbb
jg
sbb
je
cmpsl
fld
jg
call
sti
push
sub
cwtl
push
mov
xchg
imul
fndisi(8087
nop
es
insb
pop
test
cmp
ljmp
cmp
xorl
mov
xor
sahf
push
or
pushl
adc
out
stos
popf
adc
adc
mov
add
in
pop
das
push
xor
popa
mov
sbb
sbb
mov
stos
inc
mov
rcll
daa
jb
lcall
push
add
pop
or
shll
rclb
dec
or
dec
cmpsl
push
push
call
leave
je
or
mov
mov
xor
daa
loop
sub
mov
mov
push
icebp
xor
push
adc
lods
vcomiss
cltd
adc
jg
pop
stc
add
ss
xchg
fsts
cltd
popa
test
and
sbb
out
data16
aad
pushf
aas
lcall
add
inc
cmp
xchg
pop
dec
ljmp
xorl
adc
mov
call
inc
fwait
or
dec
mov
dec
movsl
xor
lahf
dec
cs
loopne
je
test
pop
std
out
testb
jns
sub
mov
and
mov
sbb
lcall
fwait
cmp
cmc
notb
and
inc
add
mov
add
call
je
mov
sub
sub
stos
mov
iret
xchg
cwtl
movl
inc
movsb
mov
ret
out
cli
ljmp
cmpsb
lret
mov
arpl
mov
mov
mov
pushl
lea
fdivrs
cmp
sbb
jmp
push
add
iret
inc
push
inc
push
pushf
jle
es
mov
xchg
loopne
repnz
iret
fisttps
jl
mov
dec
xchg
xchg
fldl
lcall
sub
inc
add
jnp
jl
in
addr16
cmp
push
mov
inc
mov
incl
mov
sub
inc
dec
hlt
popa
out
scas
adc
cmp
ret
inc
adc
dec
inc
ljmp
mov
test
int3
das
imul
fisubrs
add
sbb
dec
mov
mov
push
in
dec
arpl
push
in
incl
imul
cmc
xchg
xchg
psllw
lcall
push
cmp
cli
pushl
insl
pop
xor
dec
in
inc
stos
imul
outsl
sub
or
xor
ljmp
repnz
jae
push
push
test
clc
or
cld
jmp
jnp
aad
out
sub
sbb
push
data16
fidivrs
shll
xor
jmp
ss
mov
hlt
push
add
sbb
jno
test
daa
mov
in
mov
pop
pop
dec
incl
and
mov
mov
and
sbb
aad
and
or
push
jbe
jae
out
mov
xchg
nop
add
movsb
mov
jmp
dec
into
call
inc
and
lods
popf
mov
push
pushl
jb
xchg
in
mov
mov
sbb
cwtl
mov
pop
xor
ret
ljmp
jnp
bound
mov
pop
cmpsb
sub
pop
mov
cmp
adc
leave
push
jge
cmpsb
cmp
push
mov
or
xchg
push
fldl
hlt
cmp
mov
jbe
push
in
pop
push
pop
lods
adc
outsl
addb
and
aaa
jg
push
cs
ljmp
dec
and
cmpsl
mov
xlat
cli
lret
sar
fs
je
call
loopne
add
sbb
aam
mov
mov
lcall
ja
cld
jo
movsl
cli
fistl
loope
push
jnp
and
inc
insb
aaa
cmc
mov
lcall
add
pop
sbb
push
cmp
inc
jmp
aaa
pushl
xchg
in
insl
sbb
test
inc
test
adc
fistpll
ret
popa
adc
ret
int3
jecxz
dec
sub
insl
shlb
decl
inc
mov
push
mov
nop
cwtl
and
enter
xor
shlb
lcall
jae
ret
push
pop
xlat
mov
pop
sbb
aas
shlb
dec
jo
pop
adc
cld
lcall
test
xchg
js
into
in
push
sub
mov
and
aaa
cmpsl
adc
into
mov
push
lock
lods
dec
pop
push
repnz
xchg
jmp
mov
inc
cmp
mov
test
adc
cltd
add
jecxz
mov
adc
call
je
loopne
sbb
sub
or
cmp
test
mov
sbb
decl
or
xlat
stos
xor
pop
jmp
mov
sub
or
sub
pop
aam
jle
lea
xchg
or
call
adc
fdivr
int
mov
jmp
xchg
leave
xchg
inc
cmp
lcall
stos
fisubrl
decl
dec
adc
mov
shrl
pop
pop
dec
sub
fchs
add
mov
decl
jmp
ficompl
test
out
aad
cmp
dec
mov
mov
stos
aaa
mov
lret
out
das
sub
leave
xchg
rorb
push
mov
mov
xchg
mov
mov
adc
je
cmp
call
sub
addr16
adc
jne
ljmp
pop
dec
cmc
fisubs
loope
ljmp
jle
dec
cmc
out
fcmovu
mov
call
jp
push
inc
fidivl
dec
pop
or
enter
stos
xchg
dec
inc
sub
std
incl
push
sub
ja
push
pusha
push
xchg
outsl
mov
push
mov
std
fiaddl
imul
mov
icebp
pushf
jmp
mov
lret
xchg
push
in
or
insb
and
ja
or
fmull
out
lods
aam
cmp
movsb
aam
sub
mov
cltd
sbb
aas
mov
pop
xor
sbb
ljmp
lret
call
jp
add
pop
dec
fwait
or
xor
jns,pn
jno
xor
xchg
rolb
add
cmp
call
cmp
xchg
fsubrp
or
sbb
gs
mov
pop
inc
xchg
in
stc
ljmp
ljmp
ljmp
nop
daa
js
ss
filds
int
cmpsb
pusha
add
mov
ljmp
cmp
push
and
daa
and
pushw
pop
scas
pop
jecxz
xchg
mov
cmp
or
push
cmp
and
scas
bound
mov
mov
pop
lret
mov
and
pushl
outsb
faddl
lcall
ljmp
ret
int3
pushf
int3
ret
cmp
jb
xchg
cld
fisubl
test
shrb
or
scas
movsl
decl
dec
aaa
pop
lahf
daa
repnz
jb
jbe
jne
movsb
xor
pop
jnp
inc
fisttpl
jmp
pop
and
out
sbb
sahf
mov
push
and
in
addr16
dec
sub
sar
mov
loop
xor
pop
push
mov
pop
inc
add
inc
mov
sbb
push
xchg
mov
lock
je
js
xchg
push
hlt
cwtl
mov
into
sbb
decl
ret
paddusw
add
sub
xchg
pop
jb
rorl
or
jg
scas
jb
loope
mov
lcall
mov
mov
and
xchg
mov
push
push
lods
test
call
cltd
roll
test
test
mov
mov
daa
dec
cmpsb
orl
fistpl
das
xor
jg
push
and
jl
fldl
repz
xor
add
inc
jecxz
cmp
ret
in
mov
push
xchg
incl
dec
and
into
jl
lret
add
loope
fs
repnz
movsl
test
icebp
decl
call
push
js
imul
cltd
sbb
pusha
inc
aas
sbb
jmp
sti
repnz
push
xorb
xlat
or
arpl
xor
mov
std
mov
dec
pushl
movsl
into
je
mov
jecxz
addr16
ss
xchg
cmp
mov
out
int
pop
dec
mov
divl
add
pop
cmp
jnp
inc
inc
lods
leave
stos
pop
xchg
movups
aas
mov
ljmp
pusha
stos
jb
iret
xlat
roll
in
cld
xchg
call
mov
movb
fdivl
add
fsubs
cwtl
adc
psubusb
push
mov
mov
add
lea
mov
call
lahf
jecxz
push
loopne
adc
into
sub
cmc
sti
xchg
jns
sti
jbe
arpl
call
ret
decl
pushl
pop
cmp
xchg
xor
sbb
insl
dec
or
loop
aam
cmp
jns
daa
pop
and
inc
test
and
push
dec
add
add
jbe
jbe
jg
jg
in
and
loopne
pop
movsb
inc
xchg
lock
aad
xor
out
daa
enter
call
mov
jp
mov
push
adc
jp
cmpsl
mov
std
lcall
enter
pop
out
jmp
ret
int
cli
adc
icebp
mov
jmp
pop
mov
push
fdivrp
push
test
dec
jecxz
repz
inc
icebp
mov
and
pushl
mov
in
push
movsl
ss
adc
int
push
aam
hlt
mov
outsb
idiv
pushl
adc
sar
inc
jnp
mov
jo
loop
push
cmp
mov
test
clc
clc
data16
sbb
xorb
push
mov
pusha
outsb
jge
pop
adc
popa
ret
mov
push
push
mov
adc
sbb
inc
imul
ret
in
jbe
sbb
cmc
ret
mov
nop
out
mov
jns
dec
in
fbld
sbb
jmp
in
push
push
rclb
xchg
enter
pop
aas
add
push
icebp
fwait
call
fmull
push
lcall
lods
mov
popf
addb
push
mov
push
fsubrs
push
lahf
mov
lods
mov
dec
insb
and
mov
cmp
push
int
daa
decl
in
xor
inc
lahf
xlat
leave
repz
jmp
cmp
adc
mov
mov
call
pop
sub
jp
sub
dec
pop
jno
and
pusha
xchg
xor
jo
test
mov
jge
test
inc
stc
out
test
xchg
fwait
popa
lock
pusha
jnp
pop
clc
mov
sahf
push
push
sub
pusha
jbe
dec
lret
pop
adc
push
test
mov
data16
adc
dec
clc
aaa
stos
ljmp
push
lods
adcl
xchg
fistps
mov
dec
push
fadd
mov
data16
js
ljmp
xor
hlt
push
repz
cmpsl
pop
stos
mov
dec
test
imul
push
incl
add
xor
add
inc
pop
cld
sbb
or
outsb
sbb
test
std
sub
or
jns
sub
ret
add
out
inc
xor
cmp
movsb
lahf
ja
adc
cmpsl
loopne
add
mov
sub
mulb
sbbb
inc
inc
int3
rclb
push
pop
cmp
incl
out
mov
sahf
push
mov
shlb
into
fstp
sub
xchg
arpl
in
decl
sbb
ds
stos
mov
jmp
cmp
dec
inc
jne
jge
clc
jmp
adc
sahf
ljmp
ljmp
and
decb
mov
mov
stos
jnp
jno
shr
xchg
ret
out
fxch
sub
and
lcall
adc
iret
cltd
xchg
or
and
out
or
insl
inc
stos
dec
je
into
cmp
xchg
aam
ret
mov
lcall
push
mov
push
bound
xchg
divl
lcall
jmp
in
es
jge
cwtl
sbb
out
push
mov
jne
decl
ret
lds
cmpsb
push
mov
test
inc
adc
incl
add
inc
scas
je
xor
sub
mov
rorb
daa
push
ljmp
test
enter
cltd
subb
cmp
xchg
mov
movsl
xchg
test
push
xor
dec
scas
cmpl
mov
arpl
sub
cmpsb
inc
nop
mov
pushl
lds
jnp
xor
xor
cmpsl
loope
add
loope
mov
gs
decl
and
bound
movl
or
dec
fbld
mov
aam
add
lret
aaa
xlat
pushf
gs
loope
mov
mov
or
push
fsubrs
loop
test
xchg
push
xchg
popa
adc
jg
dec
add
pop
jae
stc
xchg
add
sti
adc
fs
mov
fldcw
add
clc
lods
sub
leave
filds
jmp
cli
js
inc
inc
jo
mov
es
ja
ljmp
pop
das
arpl
shrb
sbb
xchg
subl
scas
in
jp
sub
cltd
jns
pop
clc
cmp
mov
insl
gs
mov
dec
jmp
mov
movsb
cmpsl
lcall
test
test
mov
push
call
decb
movsb
out
ficompl
clc
pop
mov
pushl
decl
scas
push
js
clc
inc
jbe
insb
ss
sbb
addr16
daa
insl
jg
dec
incb
jmp
or
mov
or
push
rcrb
adc
fistps
ds
push
mov
and
xchg
aad
push
mov
jecxz
mov
out
cmovb
incl
and
push
cltd
aam
fmulp
or
movsl
push
push
outsl
mov
mov
ljmp
loop
jle
mov
hlt
daa
call
xchg
cmp
jge
cli
pushl
ret
gs
mov
sbb
aad
loop
sub
call
pop
mov
or
call
nop
jnp
mov
sub
cmp
aas
lret
in
ljmp
stc
cmpsb
cwtl
fdivrs
xchg
dec
pop
cmpsb
adc
out
dec
orb
rcll
pushl
push
sbb
adc
push
push
jmp
sub
mov
jp
cli
lcall
into
aaa
mov
mov
sti
inc
orl
or
ljmp
movsl
adc
aam
sbb
negb
lods
fnstcw
sar
incl
and
jecxz
xchg
ljmp
sarb
inc
in
xor
es
xlat
call
jl
mov
and
insl
mov
lret
pop
pusha
scas
jg
mov
insl
jle
mov
cmp
pop
pop
mov
dec
xor
add
push
jg
mov
test
stos
int
sbb
jnp
aad
mov
ret
add
decl
test
mov
push
stos
mov
lret
lret
pop
cmc
fbstp
xchg
mov
out
jmp
cld
loopne
pop
in
cmpl
insl
pop
call
mov
mov
lcall
icebp
push
test
cs
push
hlt
andb
fldenv
out
push
push
out
sub
notb
push
jns
adc
push
dec
pop
mov
or
push
jbe
xor
dec
scas
dec
mov
sub
mov
xor
pop
imul
test
cmp
inc
int3
pusha
sbb
decl
cmc
mov
fistpl
cmc
test
rcl
lret
lods
fs
cmpsb
je
xchg
inc
arpl
rep
sbb
fsubr
mov
jb
imul
cmp
cmp
xchg
push
fwait
push
ja
out
push
int
decl
adc
popf
push
xchg
sbb
mov
jbe
xchg
and
mov
jg
pop
mov
data16
inc
jo
dec
fdivrp
and
sub
mov
dec
mov
jge
repnz
lods
sub
fisubrs
jnp
call
insl
inc
sub
mov
mov
iret
pop
aas
lahf
loope
xchg
popa
push
inc
dec
xchg
lcall
adc
dec
mov
subb
xchg
jp
icebp
addr16
testb
dec
decl
and
mov
cld
and
pop
pop
xorl
and
and
ljmp
test
in
js
push
data16
inc
sbb
jne
jecxz
add
mov
cwtl
push
cmovg
mov
xor
mov
es
inc
int
cli
in
cld
rcrb
call
popf
mov
arpl
pop
adc
mov
mov
movsl
sbb
test
rcrb
stos
add
push
loope
mov
fcmovb
lds
insb
push
stos
mov
incl
fldt
xor
fidivrl
sub
cmp
popa
rolb
cmp
popf
sub
sahf
call
inc
shlb
push
sub
pop
cmc
call
test
jno
add
std
int
imul
inc
lret
mov
jmp
es
mov
or
out
jp
sbb
sbb
pop
or
mov
cmc
mov
jg
cmp
lods
xchg
int
lcall
sbb
push
add
sbb
jl
xor
pop
jle
rclb
jae
inc
mov
jnp
jbe
test
cmp
and
push
hlt
jmp
and
lock
mov
iret
js
xchg
add
call
mov
lcall
sbb
xor
push
cmp
daa
and
xor
shlb
sti
dec
lds
pop
shl
mov
clc
dec
sub
jae
inc
aam
out
add
push
adc
mov
xor
call
sub
cmpsb
cld
sub
stos
and
ljmp
clc
mov
mov
loope
mov
sbb
pop
out
sahf
xchg
lock
nop
jo
ljmp
out
aam
push
fbstp
push
cmp
pop
mov
xorb
sbb
mov
loop
pop
fidivrs
mov
das
scas
int3
xor
sbb
xlat
pushl
jge
or
and
sbb
sub
test
jg
cmp
jnp
adc
iret
stos
push
daa
jne
mov
movsb
movsb
mov
sbb
adc
incl
shll
cmp
sub
dec
shlb
mov
xlat
in
push
cltd
jmp
incl
cmpl
gs
insb
stos
sbb
inc
in
dec
decl
ljmp
lret
idivl
xchg
out
outsb
pop
xchg
mov
call
and
dec
lret
jns
stos
hlt
repnz
jne
jne
lcall
sbb
repz
mov
in
xor
add
jle
cmp
jge
dec
jl
jb
dec
push
xchg
inc
mov
js
xorb
movsb
cmp
lock
pusha
cld
xor
ret
js
cmp
out
fcompl
icebp
lea
push
insb
enter
repz
adc
sub
fstp
aas
and
cmpsb
cmpsl
push
dec
das
jmp
fwait
pop
sub
sub
pop
insl
decl
xor
dec
sbb
push
dec
mov
mov
ljmp
aaa
inc
lcall
decl
popa
loopne
dec
push
push
add
push
insl
sbb
push
mov
call
and
jb
aad
jl
inc
pop
xor
sub
and
lea
ss
sub
xchg
in
cltd
and
jg
loope
repz
cltd
mov
inc
pop
frstor
xor
ljmp
xorl
push
cs
in
add
xchg
lods
push
arpl
mov
int3
in
sahf
push
and
and
dec
and
mov
dec
jl
jp
fsubrp
cmp
cmp
push
insl
out
mov
jo
in
push
addb
cltd
decb
int3
jl
out
and
or
mov
imul
inc
rclb
mov
stos
movsb
jb
movl
into
outsb
mov
loopne
jg
jle
jg
jmp
mov
dec
push
inc
adc
rolb
and
and
lcall
mov
aaa
dec
and
insb
scas
adc
xchg
xor
out
or
repz
jb
incl
int
and
imul
idivl
mov
ds
cld
mov
mov
les
inc
loopne
jb
push
out
jb
pop
jbe
mov
pop
add
ljmp
mov
add
sub
outsl
mov
lods
jmp
jae
int3
roll
xlat
lcall
add
int
shl
sbb
and
scas
scas
jnp
mov
decl
out
bound
push
leave
jmp
call
shlb
push
call
sub
sub
int
cs
mov
xchg
sti
les
jb
cltd
and
incl
add
jmp
push
fs
repz
cmpsl
lcall
adc
roll
rorl
xor
stc
pop
ss
cmp
push
jb
gs
and
sti
push
movsl
sti
dec
xchg
inc
jg
jg
pop
mov
pop
xchg
sbb
je
mov
lods
adc
call
dec
mov
mov
mov
movsl
mov
jne
arpl
lcall
insb
ret
adc
jbe
dec
xchg
dec
leave
add
sub
inc
repz
mov
out
das
cli
lcall
or
add
inc
fstpl
movsb
adc
jmp
jne
test
pop
imul
ss
pop
sub
imul
mov
mov
imull
add
pushf
sbb
cmp
orl
and
out
ljmp
cltd
xchg
lret
push
inc
imul
push
out
fisubrs
enter
lock
jbe
dec
js
cmp
sbb
add
push
mov
mov
mov
mov
xchg
add
jmp
add
pushl
cvttps2pi
pushf
outsl
bound
mov
cli
push
push
inc
or
xchg
in
inc
sub
decl
push
jo
test
pop
add
sub
or
dec
inc
repnz
incl
lods
adc
in
push
dec
outsb
dec
into
pop
imul
popf
or
xchg
xlat
mov
dec
dec
sbb
imul
mov
mov
lds
loope
fs
pop
push
loopne
lcall
sti
scas
add
lret
arpl
ljmp
test
repnz
les
ret
adc
ljmp
pushl
cltd
outsb
xchg
das
daa
and
jl
popa
adcl
pop
mov
call
push
inc
pushf
les
ss
dec
ds
fstps
add
add
js
dec
inc
or
dec
mov
and
jne
sub
jns
dec
mov
cli
cld
sub
loop,pn
decb
mov
and
idiv
mov
insb
pushf
jne
mov
nop
mov
outsl
xchg
in
mov
call
lock
push
add
popa
sbb
push
pop
shr
cmpb
push
lock
inc
adc
cmpsl
test
repnz
fcomip
inc
movsb
pop
cmpsl
nop
pop
pop
xor
test
sbb
hlt
cli
popf
push
sti
in
jg
dec
pop
fisubs
arpl
xor
fwait
xor
sbb
pop
push
xor
pop
stos
int
sbb
leave
xchg
pushl
push
jnp
mov
mov
clc
mov
push
hlt
and
aad
pop
adc
and
call
fwait
pushf
lcall
sbb
mov
mov
xor
pushl
out
mov
mov
pop
hlt
cmp
and
das
cmp
les
adc
push
into
jmp
shlb
mov
dec
lret
mov
in
add
stos
in
mov
insb
incl
fimull
add
xor
xor
xor
cli
gs
vpaddd
decl
lea
sbb
jnp
adcl
imull
mov
dec
mov
adc
or
mov
scas
pop
lahf
subb
mov
jmp
fisubrl
test
lods
cmpsl
aad
loopne
mov
adc
dec
imul
loopne
pop
jecxz
mov
ljmp
cmp
lret
imul
push
bound
adc
movsl
inc
push
mov
jmp
push
sbbb
leave
push
cli
xlat
popf
mov
ljmp
adcl
pop
or
xor
xlat
add
mov
insb
adc
adcb
pop
imul
ljmp
cld
sbb
mov
subb
push
xlat
mov
aam
aam
cmp
popf
mov
xlat
jmp
pop
or
ds
dec
pop
mov
mov
sub
jecxz
push
dec
int3
incw
inc
loopne
aad
les
cmp
xor
sub
insb
xchg
call
lds
pop
mov
jmp
sub
mov
in
movups
dec
lret
and
xchg
ret
loop
jg
fisubrs
ret
jbe
jle
out
gs
sub
call
dec
push
mov
in
in
inc
mov
ss
in
rcll
xor
lea
push
outsl
sar
jns
int
andb
ljmp
mov
in
sbb
popa
jne
push
lods
and
scas
xor
jmp
push
mov
addb
arpl
ds
ja
test
inc
in
stos
jnp
sub
lcall
mov
lahf
jmp
add
test
gs
ret
pop
incb
or
jbe
pop
cld
decl
lea
shll
inc
lea
xchg
cmpsl
inc
mov
lcall
lret
call
jb
mov
and
inc
jmp
pusha
imul
jp
adc
lcall
cmp
out
mov
mov
ficoms
add
cmp
je
jle
lcall
mov
fnstenv
leave
cmp
das
in
jmp
xchg
test
or
fmuls
subb
mov
mov
mov
je
daa
inc
sbb
pusha
cltd
loop
jecxz
fsubp
es
jmp
jne
iret
pop
pushf
ss
ss
in
subl
xchg
pop
daa
out
pushf
imul
or
sbb
ficoml
ds
sbb
movsl
sarb
dec
pop
push
xor
pop
dec
aam
out
repnz
call
cmc
inc
jge
inc
test
xchg
sub
std
or
push
and
mov
clc
sahf
mov
add
and
mov
scas
lea
jae
scas
pop
or
ljmp
dec
xchg
in
mov
popf
jle
inc
mov
adc
add
xchg
dec
xor
jmp
lahf
dec
adc
inc
in
daa
out
sahf
sti
popa
sar
adc
in
inc
cmp
out
clc
icebp
loopne
shll
ficompl
xor
jle
dec
mov
jg
fdivr
adc
sub
sahf
pop
cmp
aaa
jmp
pop
push
test
push
cld
ljmp
bound
outsb
push
add
out
xchg
jg
add
ljmp
cwtl
leave
pop
cmp
adc
mov
pop
mov
push
sahf
add
rolb
inc
pop
lcall
iret
push
stc
or
aas
dec
loopne
mov
push
push
sbb
popa
sub
or
ljmp
and
ucomiss
lret
xor
dec
and
into
js
add
jmp
std
cs
jl
popa
popf
sub
pop
insl
dec
add
fs
ljmp
inc
pusha
push
mov
add
cmp
ljmp
jae
daa
das
mov
iret
ffreep
cmp
test
jns
je
mov
loop
jecxz
sub
adc
incl
xchg
stos
scas
ficompl
pop
mov
sub
xor
test
mov
movsb
in
test
mov
mov
xor
and
ljmp
call
jle
xchg
add
push
outsb
xchg
testb
inc
fcmove
shl
enter
cmp
adc
sti
lahf
xor
ljmp
out
sbb
mov
add
mov
mov
ds
push
ja
ret
and
jle
call
pop
movsb
sub
into
mov
leave
mov
lret
mov
fidivrl
aaa
ljmp
pop
and
push
dec
data16
shll
repnz
jb
incl
push
mov
pop
jmp
andl
lds
fwait
jp
mov
jmp
jl
push
sub
xorl
cwtl
aam
mov
pop
arpl
int
call
add
out
in
insl
push
fdivrl
lret
aaa
inc
icebp
lcall
lods
xchg
adc
insb
dec
stos
loopne
cs
add
loop
pop
leave
sahf
adc
ja
and
cld
stos
fs
test
mov
xchg
inc
cmpsl
mov
sub
lcall
push
xchg
fldl
xchg
adc
mov
jg
fistpl
sub
push
loopne
push
mov
lds
loope
sbb
push
xchg
in
jg
lahf
outsl
ror
lods
repz
mov
cltd
out
cli
or
repnz
xor
ret
call
cld
incl
xchg
imul
sub
jecxz
subb
aad
lcall
cld
incl
jns
and
jbe
pop
ret
jbe
push
iret
popa
jle
pop
test
sbb
aas
popa
imul
and
adc
pushl
mov
dec
inc
mov
enter
scas
push
add
loop
mov
mov
repz
lcall
mov
jne
dec
daa
mov
incl
push
push
pop
mov
repnz
das
scas
dec
inc
xor
aad
sub
das
xor
call
cld
pop
pop
xchg
fucomi
xchg
aam
mov
jmp
or
xchg
sub
add
inc
dec
and
sahf
lret
xchg
mov
iret
cli
out
dec
sbb
inc
push
mov
std
fucomp
cmp
pop
dec
adc
mov
cs
decl
movsl
and
jg
lret
jae
scas
xor
ljmp
sti
fldcw
data16
jmp
std
hlt
jnp
incl
outsb
push
es
test
xchg
jmp
incl
es
leave
xor
decl
push
mov
lock
scas
sti
xchg
pusha
add
je
pop
lcall
mov
test
sub
hlt
leave
loope
mov
xlat
hlt
je
mov
mov
lcall
dec
adc
and
sti
dec
ja
insb
jno
aas
bound
stos
or
mov
jnp
adcb
and
test
xor
jg
jmp
push
ss
add
rorb
and
clc
decl
push
psllq
in
out
xor
sub
popa
pop
pushl
mov
adc
dec
mov
gs
adc
lods
mov
call
aam
mov
sbb
ja
addr16
mov
pop
and
cmpsb
fmull
mov
or
rorl
jbe
popf
mov
lcall
or
cmpsl
pusha
cmp
pop
sar
loope
push
in
pop
jb
subl
and
imul
call
cmp
rcll
sbb
adc
mov
movsb
ljmp
out
daa
xchg
xchg
jb
xchg
cld
sbb
mov
shll
or
pop
cmp
pushl
dec
add
call
xchg
and
pusha
push
inc
inc
sahf
cmp
xchg
xchg
mov
sub
mov
ljmp
mov
push
dec
out
jle
hlt
jmp
sub
mov
jg
sbb
inc
sahf
or
sbb
cmp
or
aam
sub
sub
clc
cmc
push
loop
inc
mov
inc
in
jge
ja
movsl
decl
aaa
cmpsb
test
push
ljmp
std
push
or
test
hlt
and
data16
lock
push
andl
call
mov
push
mov
cmp
push
loop
adc
xchg
js
ljmp
dec
sbb
hlt
into
jg
xlat
gs
add
sarb
scas
push
ljmp
xchg
push
les
int
mov
cld
dec
jge
cmp
add
xchg
popf
arpl
imul
bnd
push
dec
pop
xor
repnz
pop
push
iret
jmp
das
dec
hlt
jb
data16
mov
dec
mov
stos
dec
mov
incl
mov
ffreep
jle
pop
and
cs
pop
mov
enter
call
lahf
daa
and
outsl
scas
mov
shrl
fildl
lcall
loop
mov
call
add
lret
movsb
mov
push
inc
movl
aaa
jl
call
sbb
add
bnd
sbb
fdivr
xchg
mov
mov
mov
or
mov
decl
or
ljmp
inc
push
rcrl
pop
push
call
lcall
mov
add
inc
imul
lds
movsl
stos
inc
cmpsb
loopne
iret
je
adc
pop
in
inc
shrl
in
les
dec
cmp
dec
lcall
and
sti
adc
pop
cmp
add
nop
ja
imul
push
inc
mov
dec
pop
xor
xchg
sbb
mov
mov
adc
pop
das
mov
gs
add
dec
es
movsb
pop
push
xorb
mov
dec
negl
ret
push
adc
testb
sti
lods
and
rolb
mov
inc
aad
sar
ljmp
mov
movzwl
or
sti
repz
push
sbb
dec
pop
add
loop
jl
cwtl
xor
pop
mov
loop
cli
lcall
push
loope
pusha
roll
shr
cmpb
pop
leave
movb
pop
adc
fbld
sti
ja
dec
lods
out
in
or
out
fdivrs
cmp
cmp
mov
fisubrs
mov
aas
sub
incl
sub
aad
or
sbb
inc
test
sub
bound
js
inc
fistl
mov
xorl
ss
lds
sub
test
loop
jg
rcll
js
or
stc
out
into
jp
inc
out
mov
inc
xchg
mov
pop
jle
in
sub
hlt
pop
add
add
scas
jae
push
cld
jmp
mov
sahf
pop
xchg
arpl
cli
stc
cmp
xchg
test
incl
test
into
mov
mov
sbb
je
jecxz
mov
xchg
push
pushl
aas
mov
popf
dec
daa
and
mov
xchg
rcrl
test
push
popf
stos
xor
inc
pushl
mov
push
fcoml
mov
push
jo
push
fldenv
push
mov
mov
dec
dec
int
into
js
aad
cmp
sti
cmp
popa
mov
in
lds
jmp
dec
adc
push
pop
ja
incl
enter
mov
pop
leave
xchg
pop
add
aaa
fsqrt
mov
or
mov
js
inc
cmpsl
sbb
call
sub
push
pop
or
test
push
lcall
push
and
call
pop
nop
xchg
jo
fnstcw
cwtl
inc
loopne
aam
pop
int
dec
sbb
jmp
dec
icebp
ljmp
inc
or
xchg
ret
pop
pop
mov
sbb
push
fildl
xchg
push
adc
fistps
mov
popa
lahf
jo
imul
push
sub
lahf
jmp
or
xor
fsubr
xchg
xchg
test
add
push
js
sub
mov
ret
stc
inc
pop
or
mov
push
sub
es
inc
enter
loopne
ljmp
aam
das
push
hlt
jp
dec
or
inc
xor
or
divb
or
mov
mov
jmp
mov
push
and
hlt
in
int3
adc
push
add
jg
cs
jl
fsubrs
daa
repnz
jno
xchg
fadd
out
sbb
pop
ljmp
cli
xor
push
sahf
addb
rcrl
test
imul
call
xor
push
jl
repnz
into
push
jle
sbb
cmp
prefetch
mov
insb
xor
cltd
mov
cmp
aas
mov
sub
iret
fcompl
xchg
adc
jg
xchg
je
cwtl
mov
stc
push
dec
mov
fcmovu
jnp
push
dec
dec
adc
adc
stc
adc
xchg
inc
aaa
sbb
test
jmp
aad
sub
out
call
insl
aam
aad
in
mov
mov
push
inc
jne
daa
test
incl
mov
jmp
icebp
mov
add
outsb
out
sbb
xchg
jge
xchg
cli
imul
sar
ljmp
xor
aad
adc
loop
in
push
inc
ret
mov
int3
test
aaa
in
cld
das
cli
adc
int
mov
mulb
xlat
xchg
sbb
notl
sar
jp
popl
mov
jmp
fidivrl
push
push
sbb
and
cltd
fs
incl
add
ds
jnp
jne
sbb
cli
movsl
ss
lret
int3
insb
shlb
pushl
mov
in
in
sub
jnp
inc
adc
fcomps
mov
call
jg
cmp
arpl
or
ljmp
loopne
scas
cli
pop
pop
sti
xchg
sti
xchg
push
xchg
loope
or
dec
sub
clc
lcall
ror
idivl
xor
mov
lret
sti
push
xchg
cmpl
mov
movsl
mov
incl
pop
xor
ror
mov
cli
jmp
adc
in
mov
shll
sbb
cld
sub
loope
std
stos
mov
imul
and
mov
in
movsl
fsubp
push
inc
inc
out
mov
das
mov
sar
cwtl
mov
mov
or
sbb
xchg
jmp
mov
pop
sbb
sbb
xor
incl
mov
mov
notb
dec
hlt
ss
xlat
inc
sahf
loopne
cs
xor
dec
push
ret
cld
adc
push
inc
repz
sbb
aas
sbb
adc
lea
or
je
add
loope
popf
into
inc
cld
or
jle
mov
mov
in
inc
inc
or
fld
fisubrs
inc
cmp
movsb
mov
pop
xor
je
daa
mov
sbb
into
jge
lods
push
cld
ficomps
lods
mov
xor
movb
pop
daa
cmpsb
mov
adc
icebp
push
ljmp
inc
mov
add
inc
in
stc
xchg
loop
cld
mov
jb
out
outsb
xchg
call
lds
xchg
jg
call
sbb
bound
ja
mov
divb
arpl
cmp
repz
shlb
add
push
movb
ja
mov
xchg
fsubp
mov
lret
cmc
test
cld
sar
push
sarb
aaa
adc
js
xchg
ror
femms
rcll
push
jle
lret
clc
pop
std
jns
sbbb
mov
in
xor
sub
sub
gs
mov
and
imul
jns
jno
or
lcall
mov
out
and
add
addb
popa
xchg
shr
clc
or
call
jbe
mov
and
push
in
sub
shll
jecxz
lret
ljmp
jmp
mov
aas
outsb
mov
in
mov
and
mov
push
jnp
jg
lods
pop
cwtl
jmp
xor
xorl
test
outsb
mov
lock
out
bound
mov
add
push
repz
ljmp
mov
in
arpl
xor
push
inc
lcall
pushf
lea
pushl
and
sbb
mov
gs
lods
pop
pop
daa
or
push
xchg
ja
cli
push
cld
and
lcall
push
popf
lret
scas
mov
shl
loope
lret
mov
stos
popf
mov
mov
stos
call
inc
jle
push
mul
enter
or
in
dec
inc
cwtl
sbb
btc
pushl
add
or
push
mov
cmp
inc
pop
fldt
movsb
xor
mov
mov
das
call
jmp
mov
loopne
pop
mov
inc
or
loope
xorl
ja
mov
mov
es
xchg
pop
xor
decl
nop
jno
mov
hlt
outsl
xlat
sub
mov
jae
fsubl
es
in
xchg
cmp
incl
and
mov
je
sub
cmp
inc
mov
mov
inc
rcl
mov
jp
jmp
in
push
mov
pop
addr16
xor
outsl
call
inc
mov
jle
cmp
jmp
out
test
and
cli
int
push
add
mov
pop
mov
cli
incl
push
aad
mov
loope
mov
xchg
xorl
les
aas
or
ljmp
xor
ss
clc
fs
inc
push
int
lcall
pop
fwait
bnd
fcoms
adc
call
movsl
gs
les
insb
push
pop
lret
xorl
and
pusha
idiv
mov
ret
ret
or
xchg
jbe
stos
flds
sahf
fistpl
or
mov
jb
xor
lcall
sub
lret
stc
adc
pop
incl
xchg
jecxz
stos
mov
sub
adc
arpl
je
push
xor
lds
scas
jo
xchg
pop
aam
andl
in
mov
push
add
movsb
or
out
push
sub
cld
add
mov
jge
sbb
decl
dec
mov
mov
jb
call
in
ret
adc
loope
dec
mov
xchg
cmp
cs
aaa
cmp
stos
mov
pop
movsb
pushl
nop
add
push
mov
xchg
sub
fsubrs
or
inc
das
push
xchg
rorb
sbb
roll
int
jp
mul
lahf
cmp
mov
mov
push
pushf
sbb
fldenv
jmp
cmp
scas
mov
sbb
stos
adc
jecxz
dec
adc
cli
fdivl
lcall
lret
add
pop
out
xchg
dec
imul
in
xchg
test
mov
shrl
decl
mov
dec
pop
mov
lcall
insl
sti
leave
gs
dec
clc
call
into
cld
loopne
mov
inc
xchg
cli
or
or
push
jp
ljmp
stos
mov
call
lahf
pop
cmp
inc
fisubl
mov
sar
lcall
shr
push
pushf
loopne
pop
dec
adc
sub
mov
lret
decl
rcl
cmp
aaa
mov
pop
xchg
sub
pop
jo
mov
xorb
pushl
popf
es
aam
xchg
inc
mov
xlat
addr16
mov
insb
cmp
adc
inc
lods
or
mov
and
xchg
iret
ljmp
mov
push
sub
pop
addr16
in
in
mov
dec
mov
xchg
cs
aaa
leave
imull
popa
repz
jns
sbbl
fcmovnu
mov
dec
xor
mov
movsb
fstl
loope
xchg
pop
xor
ljmp
mov
test
in
mov
mov
adc
mov
adc
jb
xchg
mov
xor
fnstcw
mov
cmp
lods
ss
sbb
imul
bound
mov
mov
rorl
mov
mov
iret
iret
jbe
push
rol
bound
pop
hlt
mov
mov
xor
cli
in
cmp
stos
ret
mov
outsb
jmp
addr16
sbb
fcoms
push
outsb
inc
or
lock
ss
flds
and
sbb
jne
dec
mov
jge
cmp
jmp
and
jge
mov
mov
call
in
decl
jg
xor
pop
iret
popf
and
push
inc
or
lds
cmp
inc
bound
sub
mov
inc
xor
mov
add
das
sbbb
lcall
imul
sub
hlt
repnz
fstpt
test
je
inc
stos
mull
or
mov
dec
mov
pop
sbb
xchg
jp
mov
sub
mov
popf
pop
cltd
dec
iret
outsb
test
push
push
seta
sti
fwait
incl
movsb
imul
jae
clc
sbb
mov
jno
cmp
int3
fsub
outsl
add
pop
push
or
pop
pushl
sar
pop
push
add
adcb
pop
cmp
mov
das
inc
inc
repz
sub
imul
inc
mov
xor
adc
mov
ljmp
sbb
nop
adcl
enter
pushf
jo
hlt
pushl
arpl
out
movsb
clc
add
xchg
imul
push
incb
mov
xchg
out
lcall
hlt
fs
loop
shrl
inc
out
bound
repnz
mov
in
ss
in
icebp
or
adc
jmp
jg
lcall
pop
push
jg
ss
fninit
lahf
mov
push
xchg
movl
sbb
int
imul
mov
xor
inc
clc
adc
decl
jbe
jle
mov
dec
inc
mov
or
pop
mov
rcrl
das
mov
push
xor
or
les
mov
pmulhuw
pushl
test
dec
in
out
out
aam
push
sbb
and
repz
out
lds
cmp
mov
sbbl
jmp
push
add
gs
dec
mov
cmp
inc
mov
jmp
lock
jg
stos
test
pusha
repnz
inc
push
jle
xchg
push
das
push
cld
ljmp
sarb
js
dec
call
mov
jnp
jp
call
cmpsl
repnz
es
jp,pt
push
inc
into
iret
ret
mov
out
sbb
xor
pop
aam
out
mov
sbb
xor
neg
push
incl
call
aaa
sbb
sbb
push
outsb
dec
popa
gs
loopne
jae
decl
mov
into
les
cmp
jp
xlat
stos
sbb
mov
sub
pop
jg
lock
ja
shrl
loop
adc
and
out
call
jmp
cli
lret
bnd
push
pop
stc
gs
mov
xchg
or
mov
jnp
cmp
decl
mov
jl
int
mov
push
je
or
inc
paddw
mov
cmp
lahf
adc
and
call
loop
push
sti
stos
add
jg
add
outsl
push
neg
scas
sahf
lret
cmp
mov
xor
jle
jg
decl
sub
push
in
jmp
push
outsl
push
cli
lock
sbb
pop
cmp
push
addr16
cld
in
mov
in
xchg
cld
gs
fwait
aam
xor
sbb
out
int
insl
loope
xchg
pop
hlt
pushl
lret
xlat
inc
ficoms
cmp
std
lcall
out
cmp
push
ret
xchg
scas
es
sub
xor
outsb
inc
fdivs
cmp
ja
stc
int3
outsb
push
testl
cs
dec
out
sub
test
int3
adc
incl
sub
js
subb
fdivp
mov
jle
cld
add
push
pop
mov
mov
or
push
add
xor
xor
lret
cmp
pushl
xlat
ret
add
mov
out
fidivl
xchg
sbb
ds
jg
jmp
test
leave
sbbl
jo
inc
push
mov
shll
aas
sbb
incl
dec
xchg
adc
js
lret
nop
or
shll
cwtl
fsubrl
inc
xor
inc
push
into
icebp
stos
cmp
pushf
lret
jb
out
lcall
stos
or
lret
xchg
cmpsl
push
mov
leave
add
mov
call
sub
mov
mov
lsl
jb
pop
adc
adc
enter
repz
std
popf
cmp
cmpsb
cmp
sub
into
mov
add
mov
xor
mov
insb
outsb
dec
lods
mov
decl
bound
testb
inc
push
nop
sbb
les
mov
movb
movsl
mov
sub
jecxz
pop
outsl
je
lret
inc
sbb
adc
dec
lret
call
int
pusha
cmp
sub
xchg
stos
test
cmp
or
inc
xor
out
fcomip
popa
mov
stos
cs
mov
or
rcll
out
pop
cmc
test
inc
and
ljmp
rcr
in
jne
shl
or
cmp
push
mov
xchg
aas
pop
fdivrs
mov
cmp
inc
test
call
jb
mov
insl
jmp
sub
and
subb
dec
pop
xchg
cmpsb
dec
pop
repnz
adc
cli
add
and
xlat
int3
push
nop
je
jle
mov
adc
ror
xlat
or
insb
mov
adc
lods
ss
lcall
lret
roll
cmc
sub
leave
inc
out
hlt
clc
push
or
test
stc
xchg
jmp
js
mov
insb
jnp
ror
std
stc
cmp
xchg
andb
mov
xchg
jg
test
xor
mov
ret
fs
insb
decl
add
push
xchg
loope
jnp
xor
adc
mov
mov
lea
mov
out
fdivs
mov
popa
out
fdivrs
ret
ss
ret
mov
xor
mov
shll
inc
and
and
stos
call
sbb
push
or
outsl
loop
mov
dec
int
mov
sbb
or
lods
jmp
mov
xor
push
jne
popf
xchg
es
inc
dec
scas
xchg
push
push
lcall
xor
aad
mov
clc
push
mov
ljmp
xchg
mov
sahf
cltd
in
incl
std
rolb
sub
arpl
adc
jo
xchg
add
call
xchg
pop
dec
jno
mov
rcrb
sub
divps
cmp
f2xm1
mov
test
mov
xchg
mov
jns
xor
into
lcall
mov
mov
ljmp
cmc
mov
pop
push
push
shll
fldenv
xor
xor
ljmp
out
test
aad
repnz
push
icebp
push
int3
or
test
arpl
jnp
das
nop
and
ret
ljmp
nop
clc
aad
movsl
push
xlat
sub
adc
rorl
and
sbb
imul
ret
fwait
outsl
addb
subl
mov
scas
cli
add
call
popf
adcl
and
or
data16
hlt
lret
fistps
adc
cmpsl
lods
pusha
cmp
and
fs
add
leave
addr16
push
into
pop
cmp
lcall
out
jo
mov
insl
imul
gs
xlat
or
imul
mov
lock
flds
arpl
and
and
jg
call
or
mov
mov
mov
push
outsl
cmpsb
xlat
jo
fcoms
ljmp
clc
decl
out
ret
ja
rolb
sbb
in
adc
cmp
lcall
jle
mov
addr16
enter
bnd
mov
into
sub
test
decl
into
mov
mov
mov
mov
ja
mov
adc
push
jg
jp
outsb
das
rcr
movsl
sahf
push
into
adc
sti
shrl
rorb
rorb
adc
add
sar
jmp
mov
lods
mov
push
std
fwait
inc
fs
or
and
xchg
dec
adc
lcall
cmpsl
insb
pushf
dec
test
mov
adc
adc
jmp
mov
xlat
dec
xor
aam
std
jne
ret
sub
ljmp
in
pop
movsl
jmp
mov
gs
in
or
jmp
jns
loop
dec
push
inc
jecxz
jno
cmc
insb
fwait
call
or
dec
fs
sti
push
adc
jg
pop
jnp
aad
push
xchg
or
sub
hlt
int3
mov
jno
inc
xor
add
cmpsb
jmp
dec
ds
mov
inc
sahf
mov
sarb
je
les
lahf
fcomip
xor
aad
or
pushf
push
cmp
xchg
int3
push
cmpsl
movsb
pop
test
jmp
enter
mov
push
dec
xor
enter
dec
dec
sbb
xlat
insl
mov
incl
cmp
ds
or
daa
push
dec
cld
pop
mov
shlb
repz
out
into
push
and
jp
in
mov
inc
int3
sub
rcl
mov
pop
loopne
insb
jecxz
test
mov
scas
sub
dec
mov
aad
push
ud0
clc
call
es
cwtl
mov
lods
shll
movsb
nop
mov
sti
xor
inc
fwait
pop
jno
mov
movsb
test
push
jnp
jbe
inc
jl
sub
xchg
in
mov
lods
push
incl
mov
adc
inc
shlb
add
fs
out
pop
push
ljmp
lock
jno
nop
push
lret
pop
stos
mov
cld
iret
adc
cltd
dec
test
test
cmp
xor
int
shrb
sub
mov
mov
pusha
daa
out
cmp
jnp
or
out
pop
xlat
pop
fisttps
inc
sub
jmp
outsb
imul
pop
xchg
inc
inc
sbb
stos
ret
in
cmp
adc
loopne
outsb
or
mov
or
inc
mov
incl
sub
fimull
nop
jns
inc
sub
mov
das
decb
and
outsb
adc
push
sti
push
dec
es
in
lret
dec
arpl
push
loopne
push
sbb
cli
loope
into
dec
jp
addr16
leave
dec
lea
pop
out
loope
loope
or
ljmp
push
insl
jnp
ds
filds
mov
xor
pusha
pop
addr16
pop
xor
push
addb
incl
adc
mov
sahf
pop
push
push
sbb
inc
sbbb
mov
subl
lcall
push
mov
stc
scas
dec
jae
adcl
inc
mov
jmp
jno
pop
in
iret
lcall
lock
sbb
mov
clc
loop
pusha
shr
decl
push
sti
adc
mov
mov
sbb
lret
xchg
mov
cmp
and
into
push
or
sbb
pop
cmp
xor
dec
mov
mov
push
fsubrp
mov
lods
stos
adc
bound
sub
lods
dec
jns
addb
mov
pushf
pushl
std
decl
and
ficoms
push
push
test
xor
mov
sbb
ret
cmc
bound
dec
das
or
daa
das
push
xchg
cmp
mov
push
rorb
mov
stc
movsb
xor
add
mov
aaa
mov
xor
sub
jp
stos
fnstsw
fldt
jo
outsl
out
ljmp
outsl
ljmp
jne
push
cmp
pushl
ja
ficoml
outsb
in
iret
push
sbb
pop
cmpsb
repnz
xor
fbstp
cmpsb
adc
jno
leave
out
add
ds
fstpl
or
push
leave
std
inc
push
inc
fdivrs
xchg
and
and
adc
incl
scas
mov
push
or
jno
rcr
add
jae
xchg
rcr
pop
imul
call
fimuls
cmp
fildll
fwait
add
pop
and
mov
jns
or
ljmp
or
fdivr
push
pop
fisubrs
add
loop
scas
sti
and
jno
mov
jo
out
popf
mov
add
dec
je
cmp
rcrl
in
mov
pop
clc
stc
jecxz
ss
add
pop
aaa
cli
iret
into
push
xchg
mov
stos
decl
pop
repnz
adc
sbb
stos
cli
cltd
out
out
ud0
decl
inc
mov
sahf
lods
addb
cs
je
sbb
test
dec
push
dec
rorb
cli
push
loopne
ss
fs
add
add
and
call
repnz
mov
inc
pop
xchg
xchg
aam
dec
enter
dec
jnp
cli
dec
sbb
mov
aam
movl
dec
inc
pusha
jp
cmpb
loop
jne
in
cld
dec
shl
xor
cmp
xchg
clc
mov
int
pop
call
cld
ljmp
xchg
inc
aaa
cwtl
lret
jo
mov
sbb
adc
jno
mov
sbb
jno
std
xchg
sbb
in
rcrl
jl
call
push
aas
push
xor
loope
add
push
sub
call
and
sub
push
addr16
cmp
rorb
xchg
push
fnsave
pushl
int
lods
add
fists
mov
adc
fidivl
cltd
repz
push
pop
aaa
bound
cli
ljmp
jle
pop
cmp
arpl
pop
push
lea
or
pushl
xchg
daa
adc
mov
xchg
pop
aad
ja
cmp
decl
int
mov
outsl
cli
push
loopne
fists
out
pop
int
cli
inc
sub
xor
call
scas
cli
int
mov
xor
and
cmc
fsub
add
incl
ljmp
mov
mov
mov
jl
imul
imul
cmp
mov
test
mov
fsubp
repz
and
testb
cmp
shrb
adc
insb
cs
pop
adc
nop
decl
lahf
in
mov
mov
lods
jle
loope
and
mov
clc
sti
cmp
sahf
cmp
xchg
inc
out
pop
or
test
and
sahf
sbb
or
lahf
xchg
sbb
pop
hlt
ud0
fldt
nopl
lcall
push
cltd
ret
dec
jle
into
addl
dec
mov
or
not
enter
incl
cmp
sbb
insl
ficomps
and
nop
sti
cld
int
ret
movsl
add
in
and
or
ljmp
call
inc
xchg
mov
xor
dec
push
out
fisttpl
int3
sbb
dec
jge
mov
ljmp
mov
lret
pop
inc
and
les
mov
scas
or
roll
call
stos
and
lret
fwait
enter
imul
xchg
push
dec
cmpxchg
jae
mov
ret
mov
add
aam
sahf
cmp
lret
pushf
cwtl
pusha
xchg
int3
mov
outsb
ljmp
lcall
sub
out
inc
or
pushw
cwtl
mov
fstpt
dec
lods
cmc
cld
mov
jp
sbb
pop
je
pop
test
or
outsl
mov
mov
cs
test
mov
daa
pop
cmp
push
or
sbb
insl
inc
jns
pop
cmc
push
xor
mov
sub
mov
decl
bnd
dec
insb
repnz
test
mov
cmp
push
and
cmp
rorb
lahf
cmp
pop
cld
mov
nop
jg
xchg
mov
push
push
xchg
push
push
ret
xchg
adc
pop
mov
mov
ljmp
decl
ljmp
adc
dec
roll
dec
icebp
mov
inc
iret
jmp
cmp
mov
xchg
inc
jecxz
adc
xor
rdtsc
xor
lret
stc
push
mov
push
jecxz
addb
mov
aam
imul
xor
int3
decl
and
test
ret
lods
movsl
fincstp
shrl
mov
adc
andb
add
decl
push
fsubrl
sarb
fs
out
sbb
pop
jmp
sub
lcall
arpl
add
sub
xchg
imul
mov
cltd
jecxz
jg
sar
cmpsb
out
cmp
sbb
push
mov
in
push
out
mov
push
jns
push
pushl
xchg
mov
out
sti
adc
push
sbb
inc
cltd
mov
add
xor
push
out
xor
adc
movsl
cmpsl
mov
lods
cs
fcoml
popa
nop
push
cli
fiadds
or
adc
adc
xchg
push
xor
imulb
and
mov
ds
sub
jmp
test
or
jle
mov
jno,pt
sub
ljmp
clc
shll
into
push
sbb
dec
stos
fimuls
fdivp
les
mov
sti
lcall
xchg
pop
cmc
add
test
fstl
adc
lock
fdivrl
rcrl
mov
mov
dec
incl
mov
rcrl
pushl
inc
or
dec
or
popf
divb
mov
mov
push
shlb
out
jbe
enter
rclb
xor
movsl
cld
pop
or
out
inc
pop
lret
outsb
push
cmpsl
xchg
rcrl
dec
sub
inc
add
out
mov
dec
pop
xchg
cltd
adc
push
ljmp
adc
rdpmc
idivl
ljmp
mov
outsb
lcall
jp
lret
sbb
lcall
jnp
pop
add
or
call
jo
incl
fisubs
test
pop
and
cmpsb
icebp
lret
cmpsb
push
jg
nop
xchg
nop
jnp
fsubs
adc
stos
cmp
or
add
and
lds
into
dec
or
jae
mov
and
jbe
shl
dec
jne
icebp
outsb
repnz
arpl
adc
pop
or
cmp
dec
paddsw
shr
fwait
ja
jns
cwtl
jmp
popa
out
sub
mov
pop
daa
enter
fildll
fimull
mov
leave
adc
cmp
rol
mov
mov
cld
orb
or
incl
dec
lock
insl
push
sbb
sub
popa
leave
rcr
sbb
lcall
push
jle
and
insb
sbb
ficoml
dec
jns
sarb
cmp
pop
std
incl
ja
mov
movb
mov
pushf
jmp
dec
push
xchg
movsb
and
incb
fwait
xor
push
in
les
cltd
imul
popf
push
pushl
loope
mov
xor
movsb
aad
cmp
and
mov
cmp
and
loopne
inc
pop
jno
iret
xorl
loop
mov
mov
cli
incl
push
cmp
inc
ret
jns
sbb
popf
ret
out
lret
xchg
mov
out
cmp
inc
leave
arpl
adcb
xor
dec
ds
mov
ljmp
cli
call
jb
aaa
aas
sbb
insb
rcr
and
gs
in
push
sub
lcall
or
shll
pop
rcr
or
aas
xlat
lea
sbb
fs
jne
call
sub
xchg
lret
dec
sub
mull
out
sti
cmp
cmp
cmp
subb
and
sub
lock
jnp
stos
stos
xchg
jne
adc
xchg
mov
cmp
sub
lcall
cmp
sbb
dec
cmc
push
pop
in
push
loop
rorb
pop
cs
addr16
in
pop
mov
cmc
or
push
push
mov
stos
int3
sbb
cmp
mov
mov
stos
sub
jle
dec
lret
push
and
or
pop
out
call
fwait
movl
lods
sbb
xor
push
dec
or
sbb
pushl
cmpsl
data16
mov
jmp
or
push
repz
sub
mov
push
je
mov
cli
jle
pop
adc
mov
lods
cli
push
mov
jmp
mov
scas
movsl
or
push
sbb
xor
sub
enter
mov
pushl
sub
xchg
bound
or
xchg
jg
mov
les
addr16
xor
sbbb
lods
test
xor
mov
jge
push
in
into
pop
stos
ds
mov
cmc
lret
loope
movsl
mov
add
pushl
fwait
xchg
fisttps
push
jns
cwtl
repnz
xor
sub
call
incl
pop
jg
loope
jbe
cmp
cli
repnz
xchg
lret
mov
and
pushl
dec
mov
lds
imul
mov
jae
das
iret
mov
jmp
inc
mov
fcomp
inc
test
push
stos
push
daa
push
inc
dec
jl
xor
std
out
shrl
sarl
mov
insb
push
sub
incl
out
mov
popf
fistps
or
sbb
cmp
push
aad
and
popa
push
mov
mov
cmp
and
std
xor
dec
mov
adc
mov
stos
gs
push
lods
lock
or
nop
mov
push
push
jg
incl
sub
jle
icebp
fbld
fs
push
and
jmp
les
imul
shll
ss
cmp
jmp
push
ss
and
jb
xor
outsl
imul
adc
xlat
imul
or
movsb
dec
inc
leave
iret
dec
stos
aam
push
sbb
or
jp
test
dec
xor
call
mov
es
insb
push
inc
aam
mov
xchg
loope
fisubrs
sub
pop
imul
movsl
lock
xchg
inc
ss
packuswb
pop
push
mov
lods
mov
incl
jo
cmp
cmp
pushf
inc
fmuls
lds
mov
dec
push
sbb
ljmp
mov
fnstenv
imul
sbb
mov
popa
scas
call
lods
mov
mov
ret
aam
adc
loopne
pop
pop
pop
sub
loope
fcmovu
cmp
dec
inc
push
pop
pop
jb
mov
dec
jecxz
xchg
aam
pop
inc
push
test
add
xor
test
inc
out
daa
lcall
pop
jp
push
add
leave
xor
js
pusha
in
cmc
push
loop
pop
in
jnp
aas
cmp
jae
cmpsl
push
out
push
mov
push
xor
lcall
pop
mov
push
mov
xchg
dec
cs
ljmp
mov
sbb
pop
jg
add
mov
mov
fwait
pushf
call
andb
int3
inc
and
out
int
inc
jno
sarb
inc
subb
repnz
test
jg
call
icebp
pop
jbe
jo
bound
icebp
mov
adc
in
mov
pushl
cmpsb
repz
jno
adc
or
cmp
cld
xor
pop
test
jmp
sub
cmp
fdivr
mov
lret
cmpsb
das
push
push
jg
xchg
xor
int3
testl
rorl
mov
pop
aam
shll
mov
xchg
push
or
ljmp
push
or
sub
pop
cld
inc
cwtl
cmp
pop
repnz
cmp
sar
adc
mov
mov
aam
and
decl
push
bnd
scas
cs
pushf
hlt
fcoms
ret
shrl
sub
shrl
add
mov
or
cli
fbstp
daa
dec
cwtl
es
cld
scas
xor
enter
mulb
rcrl
pushl
cld
test
imull
or
loop
test
xchg
and
into
jecxz
cmpsb
and
clc
jl
cmp
bound
imul
testb
mov
mov
dec
inc
pop
incl
xor
push
dec
shll
jo
lods
dec
cs
fnstsw
push
pop
scas
lcall
mov
sub
cltd
arpl
test
ds
jb
lahf
data16
testb
jg
add
sti
xor
and
data16
aad
mov
jmp
mov
out
mov
stos
lret
iret
xchg
adc
fsubl
call
pop
test
dec
add
stc
adcb
mov
decb
pop
add
movsl
xchg
hlt
rcr
aam
int
sub
rcll
and
lret
pushl
push
or
sub
or
call
addr16
lcall
lcall
sub
pop
test
fnstsw
fs
sbb
sbb
xchg
clc
jns
jo
daa
mov
dec
cmc
call
frstor
xchg
sub
or
sbb
mov
sbb
aam
or
add
dec
imul
repz
call
push
mov
xchg
stos
jge
clc
xor
cmp
or
sub
out
in
in
mov
push
inc
shll
mov
fiaddl
imul
in
fs
mov
fstpt
imul
push
mov
stc
lcall
xchg
lods
xor
into
cli
jmp
and
pop
out
mov
bound
lock
push
push
in
xor
movsl
ljmp
dec
cmpsb
pushf
pextrw
sbb
sbb
lea
aaa
rcll
cmpsl
adc
jmp
das
inc
mov
pop
jmp
decb
cmp
pop
lods
xchg
fildll
or
jle
cmp
mov
ret
mov
jge
mov
xor
in
xchg
addl
mov
jle
aad
data16
mov
rolb
ja
dec
jmp
adc
lcall
sub
sub
test
sub
mov
cmp
insl
punpckhdq
sahf
incl
xor
cmp
outsb
lea
dec
leave
and
fmull
xchg
fwait
iret
pop
add
dec
cwtl
out
inc
xor
minps
add
int3
fs
push
adc
jb
mov
ret
sbb
decl
pushl
jge
pop
sub
pop
sub
and
addb
incl
fstpt
es
xchg
mov
aam
js
push
or
ds
adc
decl
cmc
mov
xchg
rcrl
aam
cltd
stc
std
jg
leave
pusha
mov
loopne
pushl
lock
idivl
dec
cmp
lods
mov
lods
inc
cmp
mov
pop
push
lods
and
pop
stc
mov
push
scas
adc
jge
jne
je
or
aad
fcomip
ljmp
repz
xor
adc
aam
loop
mov
push
cli
lahf
incl
dec
hlt
inc
mov
stc
popa
stos
subb
jnp
inc
popa
pop
cld
pusha
sub
loope
push
lds
iret
in
xchg
add
cmp
scas
jg
sbb
sbb
insb
imul
mov
js
outsl
adc
mov
mov
out
and
dec
jb
xchg
adc
or
pop
dec
add
push
shl
cmpsl
xchg
cmp
aaa
sbbl
call
adc
fcomp
pop
mov
push
mov
arpl
out
cmpb
in
mov
lcall
jg
xor
inc
sub
sbb
sarl
into
mov
sub
pushl
cmp
dec
pop
data16
aas
daa
das
int
imul
clc
arpl
push
dec
add
jmp
ret
divb
std
or
adc
lsl
xchg
lcall
push
repz
jp
js
enter
push
dec
imul
dec
mov
lcall
push
jo
loop
cmpsl
sbb
push
mov
jge
stos
loopne
jg
jmp
mov
rcrl
insb
mov
push
ficoml
dec
pop
fwait
jno
test
or
jb
jns
sbb
and
pop
sbb
sbb
mov
and
ljmp
dec
lock
scas
mov
xor
inc
pop
adc
fists
sbb
cmp
das
clc
cli
mov
jb
mov
adc
incl
push
push
cmp
mov
hlt
sub
sbbb
cli
cltd
int
aaa
cld
jmp
xchg
and
js
out
and
stos
mov
add
inc
mov
cmp
add
popa
or
out
xor
sti
or
mov
inc
pop
pop
stos
pop
stos
mov
rol
jp
pop
cmovp
ljmp
pusha
sbb
and
xor
lods
test
pop
xlat
out
xchg
imul
mov
and
jmp
dec
call
fs
je
push
adc
add
lds
loope
add
lds
arpl
mov
jnp
mov
pusha
mov
js
inc
pop
pop
mov
cli
in
idiv
rcrb
adc
fdivr
sbb
std
fldcw
inc
pushl
xor
js
pusha
xor
incl
fdivp
pusha
call
adc
sbb
pop
addb
mov
sar
ljmp
add
popf
cli
cmp
and
movsl
pop
xchg
lcall
push
jo
nop
jg
mov
sub
into
push
inc
adc
inc
jne
jno
xlat
jo
cmc
decl
ja
stc
xchg
scas
lcall
sbb
stos
stos
mov
out
adc
push
aam
jle
movsb
scas
in
aas
scas
repz
pop
xor
pop
lock
mov
xchg
or
es
mov
jno
les
sub
cmpsb
pop
dec
imul
fnstenv
fldpi
pop
aas
ja
dec
xchg
sbb
cmp
ret
or
dec
sarb
inc
sbb
incl
fidivrl
test
stc
cmp
data16
outsb
movsl
cmp
mov
xor
jb
mov
xor
lock
push
iret
push
mov
xchg
ror
push
fistl
mov
mov
movsb
mov
ror
mov
iret
mov
in
xchg
fmuls
movsl
inc
push
dec
ljmp
and
nop
repnz
sub
mov
jns
rcrl
push
cld
das
stos
pusha
out
pushf
jae
push
inc
dec
clc
fisubrl
adc
or
and
mov
pop
add
stos
fstpt
lcall
hlt
jnp
sub
aas
je
fildll
push
clc
insl
dec
repnz
aad
in
bound
mov
adc
decl
shl
sub
inc
lds
or
test
inc
int3
lret
cmp
in
mov
incl
gs
sbb
dec
stos
std
out
jg
fucomip
lret
jno
fisubl
push
jge
in
or
jbe
pop
leave
sbb
mov
sub
and
ljmp
xor
add
dec
or
idiv
ljmp
repnz
icebp
mov
insl
divb
mov
or
call
dec
or
mov
mov
adc
xor
mov
pushf
fists
loope
pushf
fdivrs
je
inc
test
leave
mov
inc
inc
push
and
aas
or
arpl
mov
push
pusha
push
cmc
sbb
pushl
mov
das
pminub
add
fldl
call
and
push
sub
loope
and
aas
adc
mov
pop
dec
jo
xchg
sar
nop
std
fcomip
jecxz
push
adc
icebp
mov
sahf
mov
cmc
bnd
mov
lcall
dec
dec
aaa
push
in
sub
in
jg
mov
in
push
pop
clc
jmp
into
push
push
mov
cmp
jae
or
les
mov
mov
or
xchg
jne
sub
push
add
inc
pushl
xor
movsb
lret
jl
adc
stos
ss
inc
and
inc
jmp
jo
mov
pop
sti
sub
cmc
test
cmp
out
mov
gs
nop
lods
adc
aad
loop
pushl
or
and
mov
push
inc
dec
stos
adc
fisttps
mov
loopne
sti
aas
inc
enter
jge
out
aam
inc
cmpsl
std
iret
cmp
dec
add
into
cli
xor
sub
stos
les
imul
mov
mov
pop
jbe
hlt
dec
adc
push
rcll
je
scas
mov
xor
add
dec
pushl
jp
sbb
mul
and
push
jp
popa
cmp
mov
and
rcrb
cmc
mov
mov
push
in
das
inc
dec
in
imul
cltd
or
stc
lcall
mov
push
js
jle
jg
in
or
jae
mov
sub
jle
mov
xor
fwait
imul
mov
clc
pusha
test
jno
add
mov
adc
cld
xchg
mov
mov
dec
and
sub
jb
stos
ret
mov
fisubl
stc
out
adc
mov
movsl
je
loope
sub
sbb
adc
mov
adc
jle
push
je
inc
inc
push
dec
fcmovne
outsb
lods
xor
xchg
je
sub
stos
xchg
jl
mov
mov
mov
ret
mov
lds
push
xchg
loope
test
in
aas
loop
pusha
push
cs
call
scas
xlat
mov
push
dec
sbb
mov
cs
lret
jnp
cmp
cmp
jmp
in
int3
in
mov
test
jle
add
xchg
loop
mov
mov
adc
lcall
mov
sub
mov
pop
jp
pop
icebp
jb
lcall
rorl
mov
adc
call
jns
ret
push
add
orl
mov
mov
or
decl
adc
pop
pusha
clc
push
mov
pusha
and
divl
dec
es
jne
push
fsincos
orb
insb
cs
lcall
cmp
addr16
sbbl
xchg
dec
ss
lds
inc
xor
push
mov
pushl
data16
std
hlt
les
sub
aam
xchg
or
incl
test
iret
test
in
std
mov
test
popf
mul
inc
push
dec
xor
mov
adc
and
fidivrl
loopne
ljmp
dec
dec
and
xchg
das
insl
sbb
push
dec
mov
out
gs
mov
and
decl
out
ficomps
imul
in
cmc
and
jg
outsl
lea
stos
fwait
out
jl
dec
jae
inc
fs
mov
mov
es
push
in
push
out
enter
cmc
adcl
das
cltd
cmp
sbb
lock
aam
push
fbld
rep
ret
jmp
lret
mov
call
inc
jmp
push
and
shl
inc
pop
jg
pushl
sti
js
lahf
shll
adc
pop
jp
bound
mov
incl
jl
ss
insb
pushf
data16
push
sarb
enter
out
dec
inc
jae
xlat
push
out
jmp
xchg
into
popf
mov
push
leave
fcomps
pop
jae
daa
enter
dec
cld
and
inc
mov
cld
add
test
jmp
pop
xor
mov
cmpsl
sahf
pop
call
aas
enter
sub
shlb
xchg
push
cld
pushf
pop
stc
mov
std
xchg
pop
icebp
mov
lahf
fs
andl
xacquire
fs
xor
jb
sub
dec
mov
pop
hlt
xchg
mov
mov
push
std
scas
filds
mov
cmp
aaa
int3
pop
push
and
push
sub
ljmp
and
xchg
push
adc
lods
xor
inc
movsl
sub
loopne
das
popf
rol
pop
shll
incl
jae
iret
dec
and
mov
mov
shl
inc
or
xor
cmpsl
bswap
sti
push
jmp
jp
and
ret
jecxz
dec
ljmp
fwait
sbb
ret
mov
loopne
es
cmpsb
mov
pop
xchg
pop
cld
aas
mov
pusha
cmp
lcall
repnz
lock
pop
in
fnstcw
mov
and
shll
scas
pop
sub
sbb
lret
sub
and
popf
push
je
loop
and
mov
sarb
cmpsl
and
lret
mov
jmp
outsb
loope
xchg
mov
xchg
movsl
ljmp
gs
lea
sti
inc
or
push
jns
xor
inc
and
sti
call
or
push
inc
movsb
and
das
rorb
cmp
xchg
shll
xor
mov
decl
insb
in
pop
adc
inc
mov
mov
enter
pop
xchg
ljmp
nop
add
push
mov
push
inc
pop
clc
push
adc
lahf
jbe
bound
xor
xchg
inc
testb
jle
sub
clc
fdiv
push
loop
pop
loopne
jmp
or
mov
and
push
lahf
mov
les
imul
sar
call
jl
mov
aad
lret
loopne
insl
cmp
call
mov
pushf
mov
shrl
lods
xchg
cmp
popa
lahf
pop
push
rcl
popa
mov
pop
push
aas
aad
sub
jle
decl
cmp
xchg
outsb
loop
mov
addr16
in
cmp
jo
scas
adc
movsb
mov
fcomip
lcall
pop
outsb
xchg
push
imul
fimull
sbb
test
in
jl
mov
sbb
nop
aam
sbb
inc
lcall
scas
test
das
repz
add
aam
int
and
or
and
stos
call
inc
loop
cmp
ret
test
int
lea
repz
pop
push
fcomip
push
mov
add
jo
dec
xor
cmc
sbb
aaa
icebp
popa
pop
int3
cmp
push
jmp
adc
mov
add
mov
incl
pop
jg
sbb
hlt
mov
jmp
xchg
sti
mov
jmp
or
ret
popa
dec
lock
and
test
fdivr
lcall
mov
push
push
adc
mov
idivl
mov
sbb
lcall
and
and
add
push
pop
jbe,pt
movsb
cmp
loope
scas
cli
sbb
push
test
jmp
decl
adc
rolb
cld
mov
cwtl
push
lahf
fistl
cmp
aad
std
dec
ds
push
mov
stos
jg
test
movsb
inc
sbb
pop
fcmovbe
les
pop
loopne
mov
jg
or
inc
or
xchg
inc
popf
popa
mov
cmp
inc
lods
icebp
testb
and
cs
int
inc
adc
or
data16
je
jecxz
call
mov
and
cwtl
sub
xlat
mov
push
lcall
adc
fcomps
xchg
iret
pop
xor
sbb
add
outsb
nop
dec
adc
ficompl
daa
decl
lock
xor
push
sbb
fistps
fisttpl
adc
inc
jl,pt
fldt
cld
push
add
outsl
es
sbb
sahf
fnstenv
cmc
push
popa
mov
sub
cmpsl
lock
fmull
mov
sub
ljmp
outsb
test
pop
inc
dec
adc
int
sti
push
decl
fst
mov
lock
cld
xchg
add
sti
lea
jae
hlt
pop
cpuid
inc
mov
dec
cmpsl
sbb
mov
lods
push
jmp
push
lahf
or
or
mov
jmp
cld
jae
dec
jns
in
pop
dec
cli
in
pushf
cmp
sahf
popf
ret
cmpsb
fistl
cmpsb
push
dec
xchg
pop
xor
orb
push
and
push
ss
incl
decl
jb
or
out
fsubl
jl
push
and
mov
sarl
and
ljmp
sbb
pop
fldenv
inc
mov
in
pop
or
mov
jmp
fimull
call
pop
fadd
mov
inc
push
mov
lret
or
push
fs
and
ja
decb
mov
sub
shll
test
mov
fsub
loopne
sub
lcall
das
add
test
sbb
out
jge
sbb
lods
nop
mov
lret
push
mov
mov
test
mov
aam
dec
sub
xchg
sub
fcoml
xchg
sub
stos
xchg
rcrl
or
push
or
pushf
icebp
adc
fidivs
or
inc
sub
incl
loope
jne
pop
fwait
cmpsl
jne
cmp
xor
daa
sbb
scas
je
jecxz
mov
rcr
jp
push
mov
decl
cmpl
ret
jbe
and
jns
out
push
out
fnsetpm(287
enter
jle
mov
lcall
mov
cli
cmp
test
fcomi
mov
push
nop
cmpsb
lahf
movsl
test
inc
fnstenv
call
mov
call
or
cld
lret
test
sub
push
jns
sub
sar
mov
mov
jo
iret
jo
js
es
std
dec
rcrl
loopne
jg
or
mov
inc
hlt
jg
jmp
xor
daa
bound
call
pop
sub
call
fwait
sbb
decl
adc
insb
cli
inc
scas
push
pop
int3
mov
ljmp
cs
stc
mov
mov
jg
add
inc
inc
imul
in
call
std
jmp
xor
jg
mov
call
lcall
int
test
jmp
rcr
out
mov
adc
jne
imul
sub
xlat
fstl
mov
daa
pusha
rclb
dec
cli
pushl
bswap
aas
sbb
mov
fbld
mov
adc
out
pusha
and
std
jl
jbe
mov
sbbb
daa
outsb
mov
mov
or
adc
incl
pop
fstps
aad
add
clc
xor
push
mov
inc
addl
scas
call
fcomps
cmp
add
test
incl
add
imul
mov
call
stc
in
mov
lods
xchg
sub
mov
cmp
push
xchg
sbbb
incl
mov
jp
dec
mov
mov
shl
add
xchg
and
icebp
fcompp
clc
mov
decl
jp
cli
scas
xchg
jne
fnstsw
rcrl
and
jecxz
sub
cld
jb
lods
mov
test
dec
mov
pop
aad
outsl
xchg
fwait
ljmp
pop
cwtl
push
stos
gs
jmp
movsb
xchg
push
cmp
rcl
pop
xchg
leave
dec
adc
sub
mov
call
push
sahf
pop
pop
mov
jno
je
add
pop
inc
andnps
dec
lcall
fs
sbb
pop
sbb
or
mov
xchg
cmp
mov
xchg
out
inc
jnp
sbb
js,pn
fnstcw
flds
movsl
cmc
lods
sbb
inc
fwait
pop
das
adcl
call
sub
stos
dec
mov
test
pop
lret
inc
mov
cmp
shlb
pop
call
ret
cli
jae
ljmp
inc
jne
inc
pop
pushf
sbb
decl
adc
dec
lock
pop
push
loope
push
nop
dec
mov
sub
mov
adc
decl
pop
les
mov
test
pop
es
vpsllq
scas
push
movb
ljmp
mov
lcall
cmp
xchg
lds
add
sbb
and
stos
or
dec
std
fwait
pushf
and
mov
in
ret
fisttpll
mov
jg
inc
mov
sub
pop
and
add
mov
ja
decl
into
sub
fbstp
xor
add
pushf
jb
pop
cltd
jge
xchg
mov
pop
scas
mov
ret
xchg
in
inc
and
lcall
std
pop
fld
arpl
out
jg
cmp
pop
pop
fbstp
inc
or
pop
mov
flds
bound
out
fdiv
cmp
dec
mov
pop
sbb
mov
dec
mov
pushl
jo
addl
in
sub
cmpsb
jo
fsubs
mov
sbb
inc
lcall
loop
test
ficompl
pusha
and
int3
mov
stos
sti
inc
jge
sbbl
jl
push
repnz
sbb
clc
mov
inc
sub
fisubs
cmp
incl
mov
sub
add
movsl
sub
push
mov
out
xchg
hlt
in
daa
pop
ficomps
ret
xor
out
xor
scas
add
incl
add
pop
daa
mov
gs
int
or
push
stc
cmp
inc
add
or
iret
jne
and
imul
jl
icebp
ljmp
push
mov
fidivrs
stos
cwtl
pop
or
mov
inc
xchg
jmp
sbbl
shr
scas
jle
mov
cmp
repnz
in
neg
lcall
lcall
repz
out
loopne
ljmp
idivb
out
xchg
incl
sti
pusha
jne
mov
popf
pop
pop
dec
out
jg
mov
icebp
dec
stos
cld
ljmp
mov
ljmp
dec
lret
dec
push
and
int
cmp
adc
pop
lret
js
outsl
pop
push
xor
decl
divl
fs
repnz
aaa
mov
popf
mov
add
sub
add
incl
lods
or
outsl
cmp
outsb
lret
adc
xor
inc
lea
into
xor
call
shll
jnp
aad
mov
mov
ret
in
mov
popf
fcom
mov
cmp
pushl
xchg
jecxz
es
cli
daa
lods
ffreep
fcmovb
imul
aad
fdiv
adc
adc
cli
sub
daa
lret
andl
jg
xchg
cltd
and
dec
mov
push
test
push
repnz
mov
test
icebp
movsb
push
cld
call
sub
push
ja
inc
aas
adc
jnp
jne
out
test
sub
push
cmp
lds
add
push
mov
add
lcall
scas
sub
dec
add
lea
dec
mov
sub
fadds
mov
insb
jbe
push
shl
mov
mov
ret
xchg
jo
jmp
sbb
dec
xchg
cmp
out
pop
mov
inc
movsb
ds
testb
inc
xor
push
mov
not
ret
cmp
movsb
cmc
int3
xorl
push
xchg
sbb
or
mov
cmp
jg
pushl
scas
orl
adc
jle
test
call
add
sub
mov
jl,pt
shr
jecxz
adc
inc
jo
aaa
pushf
leave
push
adc
dec
ret
mov
jg
mov
dec
pop
mov
jle
push
sbb
iret
mov
inc
mov
dec
enter
hlt
jbe
mov
test
mov
cmc
rcll
pop
rcrb
aas
orl
mull
pop
cld
xor
dec
fsubrl
xchg
daa
add
jmp
in
and
jmp
sti
jl
cmp
imul
int3
jbe
sbbb
incl
pop
repz
mov
sti
rcl
jne
adc
and
call
incl
popa
rolb
bound
dec
test
mov
fsubrs
ret
in
scas
xchg
lcall
xchg
stos
adc
jle
inc
push
dec
sub
ljmp
mov
cmc
push
leave
lods
clc
fsubr
mulb
pushf
int
inc
sub
shll
sub
outsl
std
lcall
clc
push
adc
mulb
sbbb
js
or
gs
scas
pushl
insb
sti
mov
or
cmpsl
cmpsl
xchg
scas
mov
jbe
call
out
pop
inc
addr16
mov
insb
add
fiadds
add
pushl
xchg
dec
lret
fcomip
or
pop
ficoms
out
pop
cli
aad
andl
pushl
out
jecxz
insl
adc
fs
dec
mov
into
push
xchg
add
incb
flds
push
and
lahf
sub
xor
insl
mov
aam
lods
decl
in
pop
mov
clc
jmp
add
mov
ljmp
add
and
shl
pop
mov
int3
jno
pusha
and
or
mov
cmp
mov
sbb
mov
jg
sar
inc
ljmp
and
inc
sar
mov
cmp
pop
sub
out
inc
xchg
and
mov
fldenv
stos
push
jl
or
jbe
xchg
mov
fadds
cld
or
popf
xchg
push
sub
lahf
dec
in
adc
ljmp
mov
mov
and
xchg
inc
push
movsb
jl
mov
ljmp
lahf
loope
xchg
jecxz
jp
stos
and
sub
pop
movsl
decl
mov
scas
aad
shlb
test
out
inc
dec
xchg
add
pop
cmp
cmp
loopne
adc
adc
imul
outsb
shlb
call
pop
cli
fwait
inc
arpl
loopne
push
out
and
mov
push
sahf
mov
in
daa
or
pop
sbb
sbb
sbb
stos
ljmp
aad
mov
and
push
mov
sub
sbb
in
jg
loop
into
test
push
repz
push
sbb
ja
clc
test
cld
clc
lcall
cli
aas
shll
xchg
aas
inc
mov
loope
sbbl
idivb
inc
or
testb
pop
sbb
data16
push
ljmp
jg
jmp
sub
lret
push
xchg
jg
dec
and
mov
or
les
cli
mov
adc
xor
fnsave
adc
inc
dec
mov
cmp
insb
pushf
jmp
jmp
dec
mov
sti
jne
loop
movsl
pop
xchg
mov
mov
movsb
xor
call
fnstcw
add
cmp
inc
icebp
cmp
pop
leave
xchg
daa
dec
fldt
insl
clc
icebp
xchg
jmp
in
jns
sub
push
sbbb
pop
sub
not
lods
es
pushl
aam
jmp
sahf
out
mov
jle
icebp
push
xchg
push
dec
mov
cmp
jmp
push
add
les
pop
lea
jp
dec
mov
ljmp
in
push
mov
notb
jno
addr16
pop
inc
mov
mov
out
adc
xchg
lods
out
rolb
outsb
jp
cltd
mov
jno
scas
cmp
lock
add
decl
jae
mov
sbb
insl
pop
push
imul
rcrb
push
enter
add
jmp
pop
xchg
aam
mov
aaa
push
insb
adc
js
cmp
testb
xor
aas
adc
pop
scas
mov
movsb
cwtl
fwait
or
divb
and
insb
pop
int3
popa
scas
lds
pop
adc
ja
sbb
aad
pop
jo
pop
test
stos
jno
dec
mov
pop
ror
dec
and
xchg
dec
hlt
pop
fimuls
cmp
dec
inc
mov
sbb
je
sub
clc
pop
cmp
mov
cld
push
and
inc
mov
cmpsb
rcrb
push
rclb
pop
pop
push
sahf
lahf
push
std
aas
lcall
mov
fistps
cmp
decl
jmp
pop
add
mov
mov
cmp
icebp
dec
dec
es
je
sbb
or
push
out
dec
jo
in
jge
xchg
or
pop
std
inc
jp
push
loopne
addb
push
adc
testb
sub
mov
xlat
inc
jns
insb
int
imul
in
jecxz
inc
mov
in
hlt
add
test
ljmp
sbb
in
jno
xchg
lahf
stos
lods
mov
inc
or
jae
or
jbe
je
sahf
and
or
into
mov
jmp
sysret
stos
sub
out
int3
xchg
pop
jb
daa
xchg
outsb
into
lds
pop
aad
mov
mov
sub
jmp
inc
das
js
jmp
scas
mov
out
int
shrl
dec
sub
mov
cmc
lcall
pop
pop
cmp
pop
movsb
cmp
jb
pushf
and
fistps
aam
push
int3
nopl
xchg
push
lea
gs
outsb
mov
jbe
leave
cmpsb
mov
lret
aam
jmp
ret
xor
inc
or
arpl
rclb
pop
cld
cmp
xor
ret
loopne
sarb
outsb
fisttpl
pop
fldenv
ja
jg
add
sub
in
gs
add
jmp
dec
sub
push
sti
fwait
sar
incl
pop
inc
mov
mov
or
sbb
sub
sti
lea
pop
xor
mov
mov
jne
stos
sbb
call
jl
push
sbb
ficoms
jmp
push
inc
daa
mov
movsl
imul
push
test
in
aad
test
ds
pushl
fidivl
push
sbb
or
cld
fildll
dec
out
sub
imul
adc
call
int
dec
sub
popa
pop
xor
sahf
fwait
sbb
mov
ljmp
into
mov
mov
push
lret
mov
mov
std
add
sub
xchg
repz
getsec
bound
inc
cmc
out
test
lcall
mov
jns
sbb
ds
sbb
pop
arpl
cli
mov
cltd
movsb
pop
out
mov
inc
mov
popa
mov
inc
jbe
sbb
xor
dec
aas
and
jmp
mov
repnz
xlat
rcll
adc
cmp
and
cmpsl
aas
pop
xchg
sar
mov
mov
push
and
sub
push
pop
addl
sbb
inc
cmp
decl
mov
bound
add
push
sbb
mov
call
and
fistps
pop
in
lds
data16
add
mov
add
adc
xchg
mov
jg
adc
inc
outsb
jge
ljmp
lods
lea
sub
iret
incl
mov
or
add
les
push
fistpll
std
stc
push
mov
std
jmp
xchg
push
lea
popa
and
sbb
scas
pop
call
add
pop
sbb
mov
clc
mov
popa
lods
cli
mov
jmp
lret
sub
arpl
test
out
fxch
dec
mov
adc
mov
out
clc
mov
xor
mov
cwtl
clc
push
popf
add
jns
dec
mov
mov
mov
sbb
pop
jbe
xchg
add
pop
aad
push
mov
enter
push
or
mov
mov
das
or
es
mov
lahf
mov
decl
dec
loopne
jb
dec
xchg
mov
into
mov
or
jmp
lret
push
inc
inc
rolb
jecxz
add
add
ss
jmp
xor
ret
outsb
push
iret
cmp
push
movsl
sub
dec
clc
loope
cmp
jl
push
insl
xchg
mov
add
jae
shrl
mov
mov
cld
out
call
lods
ds
sub
aam
scas
pop
hlt
cmc
in
mov
dec
ret
sti
test
sub
mov
aad
sub
jmp
sbb
mov
outsb
or
jno
loop
xor
xlat
and
test
mov
loop
adc
mov
clc
jmp
and
jecxz
lods
inc
fildl
in
daa
hlt
xchg
pop
cwtl
adcl
adc
add
and
pop
xor
out
in
lcall
scas
adc
xchg
push
outsb
add
sub
lea
loop
pop
xchg
jge
mov
dec
scas
pop
stc
mov
call
clc
fadds
jnp
push
cmp
or
lret
sbb
xchg
movsb
cli
mov
fistl
jns
out
adc
jp
or
addb
jge
fs
adc
cli
pusha
loopne
push
test
outsl
cli
outsl
leave
out
gs
pop
movsl
or
ljmp
shll
or
mov
inc
loope
test
ror
lods
into
insb
sar
lcall
lea
cmc
inc
in
adc
cmp
adc
stos
pusha
stos
outsb
pop
adc
or
jmp
pop
push
sub
add
ucomiss
dec
flds
int3
or
xchg
outsl
pop
jg
mov
jle
mov
inc
xchg
nop
jg
aaa
or
movsb
incl
outsb
adc
xor
call
das
add
shlb
dec
cmc
or
inc
push
jge
push
lret
test
jmp
popf
mov
mov
aad
pop
cmpsl
out
gs
xchg
lods
fisubl
adc
jge,pn
aam
dec
call
jge
in
cmp
and
cmc
jmp
add
push
fildll
add
cmp
inc
inc
push
cmp
movsl
clc
xlat
pop
adc
inc
movsb
movsb
xchg
lret
imul
adc
dec
xchg
sti
inc
xchg
inc
lods
cmp
add
clc
pop
and
int
fisttpl
jae
out
mov
icebp
test
stos
mov
pusha
addr16
lret
push
xchg
xchg
push
call
mov
jb
movsb
inc
inc
or
fcomps
mov
cld
aam
jle
xor
cld
cs
mov
scas
insb
lret
leave
ja
insb
push
mov
iret
daa
cmpsl
js
mov
hlt
xor
test
mov
adc
in
scas
mov
ljmp
jle
xchg
mov
pop
xchg
sub
sbb
pop
sbb
jmp
mov
mov
push
dec
mov
test
int3
in
add
jp
mov
pushl
jge,pt
outsl
cmp
imul
mov
dec
lea
das
jg
mov
jge
test
mov
xor
movsb
xor
dec
jg
jo
inc
push
orb
cli
incl
popa
jmp
outsb
arpl
jnp
add
js
fsubs
pop
pop
ljmp
dec
out
adc
daa
push
scas
cmp
loope
jg
ret
or
stos
jmp
mov
and
mull
mov
repnz
jl
mov
ljmp
mov
addb
movsb
or
inc
cmp
sar
ljmp
cmc
mov
jg
aad
jno
push
data16
xchg
ret
ds
and
fwait
pop
bound
loope
lcall
jno
inc
dec
and
mov
popa
insl
jmp
or
add
loope
sbbb
lock
cli
or
pop
loopne
fldl
mov
push
xchg
dec
pop
jmp
xor
adcb
xlat
mov
out
aaa
dec
fwait
and
out
push
incl
sti
jmp
push
insl
and
mov
xchg
mov
sbb
adc
xchg
js
decl
insb
unpckhps
pop
sbb
jne
fisttpl
push
sub
fidivrl
push
pop
pop
jns
ret
dec
lret
popf
lcall
fnstenv
mov
mov
jne
rcrl
pop
pusha
imul
jmp
fcompl
inc
cmp
dec
ret
lret
push
pop
dec
jecxz
or
ljmp
dec
js
adc
jmp
pop
ljmp
sbbl
inc
mov
out
lahf
xlat
push
or
pop
ljmp
call
call
xor
data16
mov
int
push
inc
push
pop
movsl
test
gs
ret
mov
call
nop
enter
es
rclb
movsb
dec
pop
xchg
adc
pushf
mov
jecxz
cmp
cmp
daa
mov
rorl
or
dec
dec
xchg
push
divb
mov
or
pushl
jno
sub
int
in
lods
rclb
inc
in
add
cwtl
jbe
dec
decl
add
push
divl
insb
and
stc
icebp
add
call
subl
aaa
dec
pop
scas
dec
sahf
jnp
xlat
loopne
in
fcomi
xchg
iret
das
dec
inc
ljmp
cmpsb
and
xor
inc
cmp
bound
dec
mov
adc
cmp
decl
lahf
mov
pop
jno
lcall
std
stc
leave
inc
je
ja
notb
add
push
or
pushf
sub
xchg
sbb
pop
mov
andl
mov
sbbl
repz
int3
stc
xchg
mov
add
pusha
ret
call
fstpl
and
test
in
pop
ds
testl
cmpsl
fs
jmp
cli
jne
push
fwait
cmpsb
and
push
jae
repnz
outsl
xchg
das
loop
clc
jmp
or
neg
outsl
popa
addb
jl
imul
xchg
jp
decl
jmp
mov
sub
push
push
cmp
fs
cmpsb
ja
fcmovne
insl
mov
das
cmp
or
fcomip
xchg
movsb
rolb
inc
jg
xor
xchg
inc
mov
or
push
mov
loope
jmp
inc
mov
and
cwtl
mov
xchg
cmp
cli
js
xchg
jecxz
lret
sarb
adc
pop
call
jmp
mov
cmc
cmp
sahf
stos
adc
enter
and
mov
inc
sub
hlt
mov
incl
test
stos
cmp
cld
cmp
fcomps
popf
jmp
cmpl
scas
clc
lcall
xor
mov
loope
xlat
mov
dec
repz
enter
mov
add
lds
ljmp
enter
cmp
inc
int3
ds
roll
movsb
sbb
mov
popa
xor
decb
mov
jae
mov
inc
mov
dec
xorl
mov
leave
scas
inc
adc
test
push
mov
aaa
outsl
add
push
es
fnstcw
leave
jne
lcall
lock
pop
cmpsl
int3
pop
stos
outsl
dec
push
es
in
addl
sub
call
incl
mov
notl
add
adc
leave
je
push
mov
jbe
dec
rcr
cmp
call
es
fistl
inc
int
cmp
sub
out
pop
mov
lahf
dec
cltd
jns
pop
mov
sbb
push
sub
jg
data16
into
in
push
add
inc
mov
xchg
orb
add
jmp
imul
and
mov
or
pop
push
xchg
aas
pop
rol
add
decl
subb
inc
movsl
cmpsl
add
jmp
addr16
mov
cmp
or
pushl
or
je
inc
cmp
jle
xor
adc
push
cmpl
jmp
stc
lcall
pop
push
xchg
fdivr
call
sub
xchg
call
xor
push
fldl
add
je
jl
xor
mov
sti
and
mov
test
fsub
and
jns
xchg
jl
test
leave
mov
xor
mov
ss
xchg
jo
fwait
aad
dec
cmpb
ljmp
add
dec
or
adc
jge
mov
iret
call
pop
sahf
mov
shlb
jmp
mov
ljmp
add
std
cli
subl
dec
lods
push
push
enter
movsl
das
xchg
cld
fsubl
das
xor
lret
sbb
jnp
decl
xchg
rcll
pop
inc
js
jns
mov
xor
iret
gs
into
sub
inc
out
enter
imul
add
test
in
cli
jno
loopne
mov
cli
jb
shl
cltd
push
pushl
jb
jno
mov
iret
lods
push
repz
decb
decl
dec
add
je
and
call
xor
dec
das
cmp
xchg
or
icebp
int
cmc
ljmp
shlb
mov
rorb
in
sub
jmp
dec
jmp
ficompl
xor
ljmp
jp
lods
mov
push
xchg
cli
incl
ret
xchg
adc
call
bnd
out
xchg
mov
clc
outsb
mov
jge
or
mov
mov
jmp
test
cmp
add
jg
jnp
mov
pop
or
cmp
imul
mov
insb
shll
and
test
xor
pop
mov
mov
call
stos
pop
xchg
mov
cs
mov
push
test
ss
mov
push
mov
adc
loope
mov
dec
push
jg
sbb
sahf
sbb
jl
mov
mov
fs
in
enter
test
push
pop
xor
sbb
sar
fcmovnu
fmull
fwait
daa
jecxz
xchg
inc
sahf
push
in
test
ljmp
sarb
lcall
mov
push
dec
push
sub
ja
fisubrl
rorb
stc
cmp
sub
mov
aad
mov
mov
incl
lods
xchg
push
and
dec
dec
inc
jnp
imulb
rcl
mov
popf
sub
call
movsb
dec
or
mov
fnstsw
mov
jo
cmp
mov
cld
sahf
pop
mov
add
pusha
jnp
shrl
jmp
xchg
or
xorb
icebp
std
lcall
subb
aaa
pop
sbb
cmp
pushl
insl
push
push
bound
imul
lods
adc
out
push
push
lret
test
push
adc
jns
pushf
lcall
test
mov
add
ror
xor
xor
lds
pushl
inc
xchg
mov
and
movb
mov
mov
or
pop
nop
in
sub
cmc
call
notl
pop
sbb
scas
es
xchg
jb
out
mov
cli
or
inc
adc
fldlg2
rcll
out
pop
cmpsb
cwtl
push
movsl
cs
mov
out
push
adc
out
push
or
stos
ficomps
sbb
cmp
mov
pop
out
shll
movsl
int
movsb
sub
inc
sub
rclb
movsl
insb
sub
hlt
fists
lods
push
lock
mov
push
add
dec
xchg
jge
pavgb
xchg
jge
ljmp
pop
inc
jge
cwtl
hlt
pop
ja
push
cld
mov
jle
add
sbb
arpl
dec
ret
fcomp
test
mov
mov
pushl
adc
sbb
negb
clc
inc
stc
jb
mulb
sub
lret
fsubr
inc
lods
jecxz
test
pushl
cmp
add
loopne
xor
jo
imul
dec
test
or
xor
mov
aas
jmp
sbb
data16
mov
push
mov
pop
dec
fs
std
in
decl
lock
loop
aam
cmp
sub
mov
sar
ljmp
pop
and
es
push
sahf
inc
fisubrs
or
imull
ja
imul
sti
or
icebp
mov
call
cmovge
adc
out
dec
hlt
cmpsb
sti
xchg
aaa
test
lods
lret
mov
in
test
loope
fisubrs
addl
xor
mov
and
add
lcall
push
mov
inc
adc
push
dec
add
idiv
lcall
clc
mov
xchg
ss
inc
addr16
insl
xchg
mov
outsb
inc
sbb
ljmp
leave
lds
repnz
arpl
incl
and
inc
out
sbbl
popf
sbb
pop
iret
push
call
std
lcall
jo
imul
add
shlb
test
xchg
jp
loope
incl
mov
or
dec
dec
or
sub
rorb
mull
dec
sahf
aad
out
rcll
data16
scas
ficoml
push
outsl
iret
xchg
fs
jg
push
lock
aam
jp
mov
mov
pop
push
es
sub
rcrb
lcall
sub
std
in
leave
jecxz
mov
gs
jmp
push
aam
fisubrl
addr16
shlb
fdivl
ljmp
jl
mulb
xchg
sahf
lods
inc
inc
and
repnz
rorl
xor
mov
repnz
call
aam
dec
inc
decb
mov
cmp
lea
std
push
dec
jmp
lcall
and
icebp
fiadds
push
adc
ss
xchg
sub
dec
ljmp
cmp
outsl
cmp
jns
cmp
inc
inc
cmp
mov
mov
dec
std
jmp
out
mov
aas
pushf
mov
cmp
add
mov
xor
add
sbb
dec
lods
mov
fidivrs
jp
mov
mov
or
mov
mov
subb
adc
mov
jle
and
sbb
jo
idiv
jmp
dec
and
inc
inc
push
lret
cmp
frstor
outsl
push
xchg
adc
nop
push
arpl
fcomip
lcall
dec
adc
aad
adc
mov
jg
adcb
repz
dec
pop
or
iret
xor
xchg
pop
jg
xlat
out
mov
adc
ljmp
loopne
fisubl
inc
data16
or
aad
xlat
push
imul
stos
and
dec
clc
jmp
das
sub
inc
std
out
cmpsl
add
jle
pushf
mov
pop
adc
or
incl
testb
adc
sbb
loopne
in
leave
cmp
pop
icebp
add
mov
incl
xchg
arpl
or
loope
push
jnp
xchg
cli
pop
xlat
jge
sbb
inc
lcall
pop
aam
inc
aad
andl
or
sbb
ficompl
mov
loopne
cmpsl
push
and
mov
pop
pusha
xlat
xor
add
mov
jle
jg
mov
fwait
xchg
mov
mov
xchg
shll
inc
test
add
daa
push
adc
push
ljmp
fistl
mov
test
aaa
enter
ror
or
clc
enter
pop
fprem
jg
clc
sub
cmp
test
cli
call
add
pop
bnd
ljmp
lods
sub
add
stos
mov
adc
pop
out
or
fcoml
daa
add
mov
in
outsb
jecxz
mov
push
mov
int3
pop
fistpl
mov
xchg
movsl
push
mov
test
in
jle
jbe
cmp
ljmp
into
or
out
aad
jno
sbb
pop
add
bound
fwait
mov
xor
popl
inc
lret
test
add
popf
scas
ljmp
mov
ror
add
adc
mov
pop
cmc
fs
mov
icebp
jnp
jg
js
and
ja
mov
test
add
mov
loop
repz
orl
sub
nop
shrb
inc
push
and
jg
movsl
pop
jg
or
inc
test
mov
sti
and
test
add
sbb
fsubl
push
push
push
push
test
ljmp
push
mov
mov
shll
mov
xchg
pop
dec
jmp
fstpl
test
push
dec
ja
dec
add
scas
xchg
incl
xchg
imul
inc
jmp
daa
test
incl
cmp
inc
fmull
xchg
andb
test
xchg
aaa
xchg
rcrl
mov
push
jl
mov
data16
mov
mov
inc
dec
ficomps
add
das
sar
sahf
or
dec
jl
jne
mov
ret
adc
lret
and
push
nop
jg
pop
loopne
es
adc
fiaddl
loopne
and
fcomip
inc
add
add
divl
incl
pop
dec
mov
aad
pop
mov
pcmpeqb
aaa
inc
mov
divl
cmc
in
inc
push
add
movups
cli
mov
mov
addb
jmp
scas
and
xor
push
data16
jb
lock
std
icebp
jmp
add
enter
andl
hlt
sub
pop
pop
pop
xchg
sbb
sahf
out
xchg
js
lcall
lods
pop
mov
cld
fs
mov
sbb
adc
sub
movsl
mov
add
call
out
fucomip
data16
icebp
mov
decl
out
sbbb
nop
fwait
mov
jo
fisttpl
xor
arpl
fimull
adc
decl
jo
rcrl
add
roll
incl
pop
mov
add
enter
int
mov
mov
scas
decl
or
mov
repnz
ds
mov
or
add
xor
icebp
orl
push
ja
aas
mov
jg
mov
pusha
jecxz
jnp
movsb
mov
sub
pop
sahf
push
stc
push
jmp
mov
clc
or
lcall
sar
incl
pop
cmp
dec
adc
sahf
fsubs
scas
sbb
add
insb
or
ret
das
jmp
pop
mov
stos
mov
adc
aad
mov
in
mov
xchg
cmp
cwtl
aas
dec
pop
pop
pop
in
divl
pop
pop
stos
fadds
cmp
sub
mov
jns
stc
mov
lods
shr
mov
insb
inc
and
mov
inc
mov
pushl
jg
xor
xchg
mov
push
je
lahf
and
orb
imul
into
cltd
fsubr
call
pop
hlt
jg
test
add
call
adc
int
jg
lcall
js
clc
in
shrl
cmp
ja
inc
popf
in
mov
dec
fsubr
fbstp
cmp
decl
popa
dec
xchg
sub
shl
movsb
mov
push
or
pop
bound
addr16
mov
dec
out
or
inc
adc
mov
inc
sti
mov
xor
bsr
mov
and
add
jnp
imul
push
mov
jb
in
scas
cmp
pop
push
dec
je
adc
push
sub
xchg
add
mov
out
push
jp
mov
lcall
mov
xor
or
pop
fcoms
or
sbb
adc
jmp
add
xor
push
ljmp
int3
rcl
loopne
int
aam
and
outsl
mov
aaa
adc
mov
pop
int3
mov
mov
ret
ljmp
loope
jo
or
pop
repnz
cmp
test
pop
mov
ja
decl
push
xchg
add
add
fmull
and
lret
sub
int3
xchg
fists
mov
xchg
jbe
add
aaa
cmp
mov
lcall
enter
pop
call
fdivr
push
lcall
inc
cmpsl
inc
jge
ss
sub
enter
in
in
dec
sbb
mov
cld
and
cwtl
mov
cmp
test
insb
call
and
ljmp
cmp
pop
les
loop
aas
mov
sub
mov
insl
adc
dec
inc
data16
jp
push
mov
in
xchg
push
in
and
incl
fs
sbb
push
jnp
pop
out
lods
movsb
pop
lods
loopne
outsl
sub
ja
inc
add
cwtl
outsb
cli
ljmp
push
call
loope
xlat
in
inc
mov
stos
cmpsl
iret
in
imul
incl
and
push
mov
sub
ret
fadd
sbb
fsts
xchg
xor
pushl
mulb
out
pop
outsb
testl
mov
lret
sbb
in
push
dec
push
and
and
add
inc
xchg
enter
pop
test
lret
jae
lcall
clc
decl
inc
adc
movb
je
mov
lret
shrl
je
mov
inc
pop
hlt
sub
rclb
das
js
movsb
push
mov
or
repz
xchg
push
rolb
push
or
das
sbbb
mov
fadds
mov
jno
dec
xchg
icebp
xor
xor
mov
mov
fldl2t
jmp
repz
loop
sbb
mov
nop
nop
push
pcmpgtb
jp
xor
lcall
sub
xor
and
push
lds
jbe
cld
es
mov
mov
aad
aaa
cld
cmp
sbb
mov
nop
dec
mov
lret
lahf
lods
pop
ljmp
jecxz
mov
xchg
nop
xlat
push
idiv
jnp
cmp
mov
fcomip
dec
sarl
xor
repnz
push
in
xchg
mov
decl
jo
adc
push
cmpsl
sbb
sub
xlat
and
fcomip
add
sti
mov
xchg
cmp
sbb
sub
loope
sbb
lods
jb
pushl
inc
push
sub
pop
subl
icebp
mov
pop
sub
call
fdivr
fst
dec
push
in
pop
ftst
das
jg
and
int3
dec
das
adc
add
pop
push
popa
cwtl
out
cmp
pop
dec
mov
fcmovnu
fdivr
mov
incl
in
xor
jmp
inc
rcll
xchg
test
sbb
mov
pop
loop
incl
std
rcl
fs
or
mov
mov
lahf
clc
push
lahf
mov
pushl
mov
test
int
call
mov
mov
js
mov
ljmp
ljmp
or
bound
loopne
stos
add
inc
adc
fmull
adc
hlt
fisttpll
sbb
fbld
repnz
sbb
loope
push
ljmp
bound
repnz
inc
nop
daa
rcr
push
and
jecxz
xchg
xchg
jno
inc
andb
repz
xchg
hlt
pop
jnp
jmp
push
sbb
hlt
mov
loop
xchg
jmp
jo
xor
mov
test
lcall
lahf
mov
jne
add
iret
test
fstps
das
jl
add
rorb
mov
imul
push
jo
addb
cld
cmpsb
push
jbe
aas
add
ficoms
fs
lcall
jmp
out
adc
xor
pusha
mov
lcall
lcall
push
or
enter
in
xsaves
lock
call
mov
cli
test
jmp
and
cmpb
jno
add
ss
pop
loopne
popf
arpl
sbb
je
test
add
cli
cmpsl
jnp
jmp
out
and
sbb
pop
mov
inc
push
jmp
shr
outsb
out
pop
inc
inc
ljmp
cs
add
mov
and
pop
or
mov
xor
cmp
cmp
cmp
xchg
mov
lret
adc
mov
sbbl
or
sbb
mov
lcall
insl
sti
sub
inc
push
mov
test
xlat
mov
inc
test
and
lcall
sarb
aaa
gs
sbb
dec
lds
jo,pn
in
mov
xor
jl
decl
add
jbe
adc
jl
addr16
fbld
push
aad
ja
and
shlb
scas
cli
test
sbb
out
call
lret
sbb
std
call
fmull
and
dec
gs
jge
shl
pop
popa
popa
lock
mov
mov
mov
push
inc
jecxz
loop
add
and
cmp
fisttps
ljmp
push
pop
inc
stos
loop
gs
in
stos
fdivrs
and
cli
pusha
mov
popa
out
pusha
jp
cmp
adc
xchg
pop
iret
cltd
or
dec
mov
cs
inc
add
decl
sub
or
mov
leave
out
inc
jnp
lods
mov
test
push
out
mov
mov
out
int
push
sbb
mov
lahf
jo
call
mov
daa
mov
stos
pusha
std
push
leave
pop
cmp
inc
inc
fwait
sbb
cmp
in
sub
sbb
mov
xchg
movsb
adc
js
push
incl
mov
mov
jle
inc
aaa
into
cltd
pop
orb
xor
pop
std
mov
jmp
inc
push
ret
and
popf
dec
lahf
pop
bnd
cmp
add
aam
je
notl
adc
or
icebp
or
lock
and
inc
pushf
xchg
pop
pop
adc
pop
sbb
dec
into
in
cli
sub
pop
push
div
mov
pop
mov
jae
into
pop
aam
jp
xchg
pushl
adc
pop
dec
cltd
push
call
scas
pop
ret
push
jnp
aas
rcrb
jg
sbb
decl
sub
sahf
addr16
dec
push
clc
lcall
stos
movsl
cmp
push
add
and
add
mov
rcr
or
decl
lret
fcmovu
ds
mov
add
inc
mov
data16
pop
dec
push
mov
aam
bound
hlt
aaa
mov
gs
xor
sbb
pop
aad
cmp
inc
or
call
sbb
shll
iret
and
or
pop
inc
push
scas
inc
je
ja
pop
out
cli
lcall
lret
adc
sub
ja
mov
cld
mov
les
push
ljmp
inc
xchg
mov
stc
inc
lcall
sbb
test
cld
clc
sti
inc
dec
repz
incl
sbb
mov
adc
rol
pop
xor
movsl
cwtl
imul
push
pusha
incl
add
and
test
xlat
push
adc
in
outsl
inc
dec
sbb
push
aad
add
sub
jle
xor
daa
push
lods
jmp
mov
aaa
inc
shrb
into
into
push
push
dec
or
call
mov
xchg
jp
je
pop
push
pop
or
ror
cmp
jp
popf
push
call
cld
push
ret
insl
fcom
popa
mov
mov
stos
repnz
ret
xor
adcl
lock
sahf
xor
or
mov
xor
insb
ss
push
push
addr16
mov
cmp
mov
scas
and
mov
aaa
inc
clc
add
adc
mov
xchg
pop
jae
inc
sub
push
cld
ret
loop
stc
call
jnp
xor
add
hlt
out
pushl
outsb
mov
test
test
sub
xchg
xorl
add
pop
imul
sbb
fwait
shlb
xchg
cld
mov
fcmovbe
fadds
shlb
sbbl
in
out
add
mov
shll
imul
das
rcr
dec
popa
sbb
stc
push
es
out
cli
iret
adc
add
inc
pop
inc
inc
insl
into
jge
xchg
add
push
test
adc
cmp
adc
leave
sub
sbb
mov
ja
cli
repnz
aas
bound
das
mov
decl
xor
mov
sbb
mov
ret
test
push
call
sub
test
pop
xchg
stc
mov
insb
push
fdivrs
mov
fdiv
hlt
fwait
push
mov
pop
sbbb
sub
daa
lcall
in
mov
clc
and
lahf
enter
jmp
mov
jae
fstpt
out
mov
push
sub
aad
inc
dec
out
lahf
and
lock
je
mov
xchg
xchg
in
and
and
or
jg
mov
jge
jle
enter
add
fistpll
iret
push
aaa
test
stc
xor
test
leave
xchg
popa
lock
cmp
mov
decl
cwtl
aam
dec
dec
fs
repz
sbb
push
and
incl
outsl
lods
test
ljmp
int
xlat
jae
rcl
fmuls
or
lods
or
dec
cld
jne
sbb
gs
cld
decl
push
outsl
ror
push
lock
lods
cs
fstpt
rclb
ret
mov
jnp
mov
push
cmp
dec
sahf
sub
jb
xchg
xlat
or
inc
int3
jp
lods
pop
in
jmp
xor
cmp
jecxz
add
dec
inc
call
mov
inc
test
daa
shll
aam
imul
and
push
out
jno
sbb
decl
jecxz
sub
push
clc
mov
add
bound
jbe
loopne
jp
fcomip
ljmp
pop
jecxz
pop
rorb
jp
insl
dec
mov
test
ja
movsl
pop
loopne
ljmp
loope
fildll
hlt
in
imul
xor
pop
aas
mov
lock
sbb
mov
je
xchg
pop
rcll
incl
sbb
shlb
fbld
or
xor
incl
je
mov
inc
shll
jnp
mov
adc
jns
je
inc
call
cld
jmp
mov
cld
xor
cmovo
loop
mov
and
incl
cmp
add
das
clc
or
jge
adc
gs
ds
adc
sbb
and
addr16
test
mov
add
enter
clc
mov
jae
mov
or
sub
ja
pushl
in
mov
mov
insl
ja,pt
pop
in
jg
movsb
loop
repnz
dec
jge
push
in
mov
into
adc
mov
rcl
repz
addr16
enter
lods
ljmp
xor
mov
mov
mov
sub
fldl2e
in
mov
inc
je
insl
adc
scas
dec
les
xor
lock
mov
xor
inc
jg
test
int
jle
and
dec
mov
je
xor
in
sub
cld
sti
sti
xor
orb
jmp
xor
stos
jo
adc
xchg
sbb
push
addr16
push
push
cmp
adc
incb
jmp
movsb
adc
das
jae
ret
add
call
fwait
sbb
pop
cmc
jnp
jae
lods
xor
divl
aad
test
xchg
cmp
pop
jno
fsub
fcomip
mov
inc
inc
or
gs
jge
fsubrs
fdivrs
movsb
jg
insl
push
notb
jecxz
push
fcomps
ja
cmp
lea
pop
cmp
fsts
xlat
divb
and
fisttps
inc
loope
push
loop
dec
lahf
mov
icebp
xor
call
cld
jmp
push
sbbl
jnp
xor
int3
dec
aam
fcomi
insb
imull
cmp
push
sbb
sub
fildl
js
dec
scas
cmp
jns
adc
pop
decl
or
ljmp
sub
out
popa
movsl
mov
push
cmp
xor
ljmp
fcmovnbe
lods
fnstsw
stc
pop
mov
sar
subb
inc
lods
jl
adc
lret
scas
cmp
jge
xchg
pop
xor
mov
and
mov
and
test
lcall
cmp
fcomip
and
jge
popw
mov
adc
enter
xchg
pop
jnp
and
decl
mov
dec
gs
jle
xchg
adc
out
clc
decl
imul
les
fildll
mov
sub
lahf
clc
jge
xchg
xchg
gs
mov
imul
mov
adc
sbb
mov
pop
add
jecxz
dec
frndint
dec
cld
decl
out
ds
xchg
jg
xchg
inc
jb
pop
cld
mov
mov
fbld
mov
int3
push
xchg
fs
pushf
jnp
jmp
or
sub
inc
movsb
sbb
and
call
call
cmp
push
push
loop
pop
in
sub
jne
ja
repnz
push
inc
dec
mov
jne
mov
jmp
enter
daa
xor
jnp
loopne
and
clc
movsb
in
mov
inc
ss
push
jle
jno
ja
push
in
inc
mov
stc
push
adc
addr16
sub
loopne
std
cmp
imul
mov
hlt
sbb
inc
outsl
call
or
adc
clc
jmp
jb
test
jmp
jae
repnz
js
popf
push
nop
out
pop
ret
xchg
js
push
testl
pushl
add
sbb
adc
jno
outsb
lret
sarl
cld
xor
sub
dec
mov
mov
in
cld
push
icebp
das
pushf
sarb
sarb
dec
push
mov
dec
stos
aad
cmpsb
aam
push
rol
pushl
dec
out
out
push
xchg
test
gs
cld
lea
jno
nop
ficompl
mov
loopne
in
lcall
sti
dec
and
mov
iret
add
call
testb
adc
fstpt
ret
jo
push
outsb
or
mov
popf
inc
lahf
rolb
cld
lcall
sbb
xchg
loope
ljmp
inc
psubb
add
fisubs
fildl
std
mov
push
sub
pop
sahf
add
sti
ret
loop
stc
adc
add
jg
push
cmp
xchg
add
dec
dec
xchg
mov
dec
mov
std
jno
incl
outsl
jmp
adc
mov
enter
iret
xorl
add
sub
fmulp
stc
push
call
lret
cs
shl
xchg
inc
xchg
add
adc
pop
test
mov
xchg
adc
push
mov
cmp
call
scas
mov
test
mov
ljmp
rorl
cmp
fdivrp
daa
rcl
scas
outsl
pop
sub
lahf
in
push
xor
ljmp
dec
and
shr
insl
inc
xor
mov
orl
pushaw
jae
sbb
rorl
dec
fildl
lods
cwtl
mov
pop
stos
or
xor
pop
outsl
jo
fs
xchg
dec
or
sbbb
push
push
jp
mov
push
rcrb
dec
mov
clc
lret
ret
jg
jae
mov
lret
fidivrl
sahf
stos
mov
lahf
add
pushl
xchg
adc
clc
imul
xlat
lret
nop
adc
add
into
inc
negl
out
pop
push
cli
leave
pop
ja
es
sbb
sarb
imul
jns
shlb
in
jo
push
jnp
test
or
int3
xor
ljmp
stc
incw
pop
hlt
push
inc
cmp
dec
mov
mov
sbb
cmp
dec
pop
ljmp
mov
inc
call
sahf
mov
pop
div
mov
xor
dec
push
or
cmp
jmp
clc
xchg
push
push
and
jle
movsb
popf
jle
adc
out
add
in
mov
or
pop
cld
push
imul
test
and
scas
nop
outsb
mov
orl
mov
adc
stos
and
cmp
cmpsl
mov
pop
mov
or
or
in
repz
push
fimull
jg
adc
cld
scas
test
loop
rcrb
fbstp
lret
jp
ret
dec
or
addr16
jmp
adc
scas
bound
xor
xor
popf
iret
xchg
hlt
pop
inc
sti
sub
push
incl
xchg
insb
mov
jecxz
xchg
xchg
push
fucomip
sar
enter
add
std
in
sbb
jb,pt
mov
and
mov
jb
imull
mov
xchg
aam
daa
lods
loop
call
mov
xchg
lcall
out
or
pop
xor
fimull
sub
stc
mov
out
clc
fadds
fdivrs
and
jne
sarb
dec
pop
fcomip
mov
pop
add
inc
and
outsb
into
sub
ljmp
jb
cmp
xchg
stc
jmp
int
pop
dec
cmp
movsl
lea
pushl
inc
inc
xchg
bnd
push
pop
adc
push
dec
jbe
lea
loop
pop
ljmp
dec
arpl
and
scas
inc
mov
inc
incl
xchg
into
cmpsb
jo
cs
or
rcl
jle
ret
sbbl
xchg
ficomps
pop
mov
lcall
cwtl
imulb
xor
setge
fcompl
dec
pop
dec
loop
incl
adc
inc
les
ljmp
inc
jns
jmp
ss
cmp
or
mov
or
pop
inc
fsubrl
lods
fcomps
inc
dec
xchg
lock
decl
mov
mov
mov
pop
orb
enter
sub
cmp
xchg
or
icebp
pop
push
ljmp
pop
aam
stos
or
pop
mov
out
dec
mov
scas
out
cmp
or
insb
aas
jp
pop
mov
mov
adc
ljmp
ficoms
xchg
sarb
push
call
inc
sub
arpl
jo
out
mov
sbb
stos
outsb
pop
sar
psraw
out
and
into
inc
dec
mov
inc
ss
mov
out
call
mov
dec
popa
jb
data16
test
pop
push
cmp
push
inc
out
rcll
lcall
push
sub
rcll
lahf
out
leave
sahf
dec
stos
jle
lods
lret
push
adc
cmp
lcall
call
in
dec
test
jno
xchg
lods
rolb
cmpsw
cmp
jmp
fmuls
xlat
hlt
jo
jns
fwait
mov
jno
add
adc
mov
lock
mov
adc
mov
ss
cld
pushl
fstpl
scas
xchg
dec
es
jl
sbb
loopne
fs
mov
pushl
pushf
xchg
test
xchg
mov
xor
xor
xchg
push
fsubrl
scas
inc
dec
sub
repnz
jbe
clc
testb
in
mov
jbe
push
add
jmp
mov
mov
into
pop
pop
mov
jnp
jg
adc
aam
lods
shr
jle
loop
sub
xchg
mov
or
and
xchg
or
mov
repz
ljmp
in
mov
push
xchg
test
jnp
mov
test
fimuls
mov
decl
xchg
sbb
inc
outsl
xchg
cld
es
cmp
negl
jle
fbld
andb
call
fnstcw
cmp
push
out
call
mov
into
shlb
mov
adc
sbb
pushl
shrb
mov
in
jns
xchg
mov
mov
loope
bound
stc
cmp
inc
movsl
dec
push
fdivs
push
hlt
sub
jae
jae
mov
mov
mov
adc
pushl
mov
gs
mov
or
xor
dec
cli
pop
sti
ret
pop
and
outsl
mov
call
dec
dec
lret
aas
xor
pop
or
mov
push
mov
push
shl
mov
negl
cs
aad
ljmp
stos
add
dec
sbb
mov
cmc
and
jg
mov
or
sbbb
pop
test
les
fwait
push
or
cli
cli
inc
jne
into
push
movsl
out
mov
imul
rcrb
pop
orb
pop
sub
ljmp
cli
inc
mov
mov
in
out
dec
and
fdivrp
mov
mov
dec
in
lcall
mov
xchg
adc
insb
mulb
push
jns
inc
aam
cmp
add
fldenv
call
push
sub
mov
push
sti
push
leave
bnd
js
stc
xor
ljmp
decl
push
pop
filds
out
stc
stos
into
cmc
sbb
inc
mov
mov
dec
ljmp
push
fmuls
sbb
loope
sub
add
inc
cld
leave
pop
arpl
lcall
pushl
push
xlat
inc
inc
addr16
pop
popf
jg
lret
lcall
in
pop
test
xchg
mov
sar
jl
enter
push
pop
push
push
outsl
in
mov
sbb
ljmp
mov
lock
cld
jno
adc
mov
lcall
shlb
les
xchg
insb
pusha
jl
ret
outsl
dec
sub
mov
cli
decl
xchg
ja
aas
mov
imulb
out
lods
jbe
adc
adc
repnz
sbb
adc
mov
jne
adc
call
std
loopne
sbb
xlat
shll
pop
pop
incl
cmp
add
adc
aad
cmc
add
fwait
adc
push
dec
je
lcall
pushl
decl
add
ss
xor
subb
popa
mov
mov
adc
adc
insl
fidivrl
mov
pop
ds
push
std
mov
stos
xchg
daa
jp
push
rcll
jmp
in
imul
rcrl
cltd
adc
popf
dec
push
sbb
dec
sahf
lcall
pop
add
add
out
enter
arpl
leave
bound
inc
mov
cmpb
cmpsb
movsb
sbb
sarl
outsl
sbb
mov
mov
cmp
fmuls
aad
mov
test
jbe
mov
sub
dec
daa
cmpsb
pop
in
xor
and
push
sub
cmp
xor
imul
pop
pop
jns
or
dec
loop
mov
loop
jns
pop
jmp
pop
xchg
fdivr
mov
addr16
mov
cmp
pop
pop
cs
call
pop
xchg
adc
sub
rorl
ret
or
inc
or
jmp
daa
pop
orb
leave
sub
fdivs
cmp
push
jecxz
add
ret
sbb
xor
inc
push
addb
xchg
mov
lds
cmp
in
ret
lcall
push
ret
sub
incl
iret
cmpsl
ret
lock
outsl
xlat
out
pop
ljmp
scas
xor
addl
les
xchg
pop
je
xchg
repnz
call
pop
xchg
jo
sub
inc
and
dec
sub
ja
repnz
sub
inc
cld
call
movsb
inc
cmp
fisubl
test
mov
fcomip
incl
xchg
pushf
inc
pop
add
push
pushf
pop
sub
rorb
or
push
mov
lcall
fs
sub
mov
bound
fidivrs
push
jmp
cmpsl
adc
xchg
jo
inc
fstps
mov
push
adc
sbb
sbb
or
sub
lcall
aaa
xchg
ret
adc
pop
and
fldl
jno
mov
push
pushf
mov
cltd
iret
mov
inc
adcb
lcall
test
dec
sub
push
push
add
cmp
shl
call
or
adc
pop
dec
repnz
pop
cmc
rorb
bnd
sub
call
testl
in
fsubrl
fisttps
in
cmpsl
push
sbb
test
mov
lcall
jb
in
addl
push
addl
shll
xchg
mov
popa
or
call
outsb
or
movsl
enter
sbb
xchg
js
add
cmp
scas
loope
xchg
decl
jmp
cmp
in
inc
into
inc
cmp
pushf
pop
movl
jg
insb
mov
sbb
scas
inc
aaa
outsb
out
inc
adc
lret
sbb
cmpsb
pop
add
mov
cmp
mov
xchg
pop
push
int3
and
jecxz
jmp
cmp
loop
and
xor
mov
mov
sub
test
add
mov
loop
add
sub
lods
push
popa
pop
pop
daa
scas
div
mov
mov
mov
incl
popa
sbb
stos
or
insl
shll
dec
fnstcw
out
repnz
decl
out
sub
repnz
and
out
in
out
add
fwait
call
push
es
test
inc
rolb
xchg
sub
pop
fnstcw
sti
sub
push
bound
jmp
hlt
outsl
push
adc
jb
es
cmp
jno
pop
fldl
and
ljmp
pop
mov
daa
lret
cmp
xor
lods
pop
sub
in
push
mov
punpcklwd
inc
cwtl
lcall
ja
arpl
les
daa
pop
popa
sbb
lahf
cmc
ret
xchg
sub
mov
incl
inc
sub
iret
mov
in
adc
adc
cli
add
add
outsl
cli
aad
clc
adc
mov
lcall
add
call
movsb
dec
jmp
push
dec
fiadds
or
and
jno
int
je
js
and
lret
sbb
incl
shll
jmp
cld
stos
std
mov
fcomp
sub
jns
imul
fmul
mov
stc
icebp
rorb
mov
gs
andb
and
fistpll
sub
fcompl
pushw
mov
xor
adc
ljmp
pushw
mov
push
imul
mov
or
sahf
cmp
mul
shrb
in
ljmp
xchg
outsl
and
push
sbb
popf
sub
jns
in
sub
ja
ret
add
lcall
push
mov
rclb
dec
sub
adcb
push
pop
jmp
jne
adc
call
mov
mov
push
int3
sbb
cld
mov
scas
dec
pushf
jg
cmpsb
sbb
dec
divl
out
cs
das
jge
cmp
push
jae
pop
mov
lds
pushl
ljmp
test
add
iret
mov
enter
sub
incl
push
stc
adc
ljmp
popf
push
jno
xchg
cld
push
sub
xor
xchg
lcall
xchg
fisubrl
cmp
ss
mov
inc
mov
or
cmp
fcomip
cs
mov
push
xchg
loopne
add
lcall
dec
mov
loopne
dec
fldpi
ljmp
daa
shrb
or
mov
push
in
pop
enter
fwait
data16
loopne
xor
push
and
add
cmpsl
test
rol
sub
or
incl
shll
jae
imulb
sub
mov
mov
aam
int3
je
push
jle
xlat
leave
mov
outsb
outsb
pop
cmp
out
jne
mov
sub
addb
fcmovnb
jg
xor
fisubrl
clc
push
lret
and
pusha
outsl
push
pop
mov
mov
popa
jg
jp
sar
jnp
fwait
adc
push
js
ss
jmp
ret
incl
sahf
aam
xlat
push
jle
add
mov
cwtl
pop
xchg
xchg
das
adc
mov
cmpb
rorl
xchg
xchg
mov
testl
ljmp
xor
les
jecxz
fildll
xor
mov
int
xor
incl
add
je
test
jns
adcb
clts
call
push
add
int
lea
jo
inc
pushf
adc
jle
cld
lds
jge
inc
push
test
pushl
loopne
lock
cltd
notl
movsb
xchg
fwait
adcl
push
mov
add
aas
xchg
ret
ljmp
shl
shrb
xchg
cmp
jl
aad
cld
sbb
arpl
xlat
pushf
or
mov
mov
push
cmp
pop
xor
lret
xor
lea
test
jns
xchg
push
ja
les
dec
jecxz
mov
rcr
cmc
jmp
es
cmp
test
out
fidivrs
ljmp
pushl
and
mov
nop
jmp
movsl
add
sbb
inc
mov
mov
or
cmp
jbe
cmp
jae
enter
push
and
jae
lcall
inc
mov
xor
aam
fs
push
aam
insb
add
xchg
or
rcll
ljmp
int
subb
sub
dec
cld
gs
xor
out
dec
pop
xorb
mov
pushl
push
loop
fldcw
mov
sbb
jae
pop
sahf
shll
dec
scas
xor
lret
jbe
scas
mov
rorb
scas
clc
incl
fists
xchg
xchg
popa
xlat
sub
pushl
out
cmp
jg
dec
cmc
rol
mov
dec
cmp
adc
imul
test
jmp
add
pop
mov
or
lods
scas
jnp
push
mov
stc
push
je
sub
in
lcall
test
inc
repnz
lcall
cmc
mov
fdivrl
or
or
loopne
call
call
sub
dec
push
xor
jl
push
les
pushl
sub
push
popa
xor
lret
mov
cmc
inc
mov
push
lret
inc
ficoml
sub
decl
gs
call
jnp
dec
addr16
inc
insb
ret
mov
sbb
int3
push
pushl
push
out
mov
daa
std
pop
int
xchg
and
ss
cli
shll
aas
daa
adc
je
fldl
je
ljmp
push
sbb
into
dec
mov
ljmp
js
scas
fisubrl
sti
and
jmp
jmp
add
stos
call
pushl
cs
cmpsb
push
scas
pop
in
jae
xchg
mov
aas
scas
stc
outsl
mov
xor
pop
mov
xchg
inc
push
dec
dec
xchg
push
pusha
sti
pop
mov
inc
mov
pop
lret
adc
cmp
jmp
out
mov
jp
lcall
cltd
daa
dec
ds
jp
cmp
rcll
decl
xor
adc
cltd
and
fidivs
loope
pop
sub
sbb
cmp
inc
popf
nop
mov
xor
sub
aas
or
outsl
incb
mov
das
lahf
cmpsb
jmp
xchg
es
mov
cmp
je
lahf
mov
and
das
add
call
std
mov
aam
outsl
fcomi
lcall
push
jge
mov
es
inc
add
aam
ds
es
aad
mov
cmc
xchg
jo
mov
dec
mov
and
into
ror
fidivl
cltd
and
sbb
lods
xor
ljmp
sub
hlt
and
sbb
sarb
or
jecxz
scas
inc
loopne
mov
inc
movsl
lret
loope
dec
stos
sbb
loop
cmp
pop
and
in
push
sar
mov
ficoms
sub
inc
mov
mov
in
sub
mov
jg
push
dec
mov
test
not
jae
add
ds
mov
aas
mov
cltd
js
stos
add
ljmp
cmpsl
or
sub
cmpsb
jo
pop
inc
inc
test
out
mov
push
hlt
dec
inc
sub
lcall
scas
mov
fimuls
rdtsc
imul
dec
push
add
lcall
jnp
clc
and
and
fwait
mov
sbb
mov
cmp
jg
test
outsl
ss
out
pop
scas
rolb
es
pusha
lcall
fwait
cld
lock
mov
int3
sub
stos
in
mov
lcall
clc
bound
stos
popl
mov
pop
lret
dec
movsl
dec
imulb
mov
adc
dec
ss
call
sub
movsb
repz
jecxz
mov
inc
jge
je
xor
outsb
sahf
scas
imul
aad
mov
pushl
pop
push
in
jmp
shlb
hlt
and
xor
mov
inc
push
dec
xchg
pushl
daa
fildl
sar
fildll
mov
loop
data16
test
ljmp
out
clc
mov
shll
pop
cmp
es
pushf
sub
lcall
adc
scas
push
lahf
xchg
pop
jnp
lahf
jecxz
mov
das
lcall
and
xchg
jg
ficoms
jne
pop
insb
xchg
popf
mov
adc
sar
fdiv
mov
xor
aad
enter
add
insb
lods
sbb
mov
fwait
std
adc
jb
pop
mov
incl
mov
mov
and
adc
mov
cmp
push
mov
push
pop
adc
iret
repz
jae
jo
addb
dec
jge
push
sbbb
out
pop
or
lds
xor
sahf
xchg
jnp
popf
xchg
jmp
jg
mov
xchg
out
add
cs
les
test
sub
push
std
orb
xor
inc
inc
rolb
dec
jb
fucomi
adc
pop
pop
push
jge
stos
jno
mov
and
push
cld
mov
mov
fwait
sub
addr16
call
out
data16
pop
in
mov
insb
or
xchg
push
inc
mulb
imul
icebp
loop
aas
adc
stc
jle
add
jnp
imul
ljmp
cld
pop
js
dec
pop
mov
nop
jp
leave
adc
inc
mov
push
outsb
mov
jno
nop
jg
cli
test
mov
sbb
clc
jnp
xor
sbb
sbb
inc
mov
aaa
rol
js
inc
sti
xchg
xlat
test
cli
lcall
jmp
jo
lods
push
xor
bound
sbbb
push
push
mov
cmp
jmp
imul
mov
mov
cmp
into
jb
add
clc
pop
fnsave
idiv
incl
imul
dec
scas
aam
lock
xor
or
inc
mov
dec
adc
jp
cli
pop
std
xchg
mov
lock
call
adc
mov
mov
jg
incl
das
jmp
rolb
dec
push
jg
pop
mov
add
dec
repz
test
pop
xor
jg
aad
lret
pop
jle
das
inc
cwtl
mov
jecxz
loopne
xchg
aad
mov
or
popa
dec
mov
rcll
push
or
test
data16
incl
cld
incl
fcomps
xchg
fmull
mov
decl
in
sub
ret
pushl
or
addr16
stos
pop
push
pop
stos
jb
mov
dec
cmp
incl
das
mov
mov
mov
and
outsl
shlb
pop
cmc
dec
cmp
mov
xchg
bswap
lahf
mov
mov
mov
cmp
leave
repz
jg
add
test
mov
daa
mov
bound
push
out
flds
call
daa
popa
jp
xor
pushl
mov
mov
add
ficomps
test
call
aad
cmp
mov
jne
push
cmp
leave
jb
mov
cmpsb
in
push
aas
jmp
sbb
lret
or
les
mov
outsb
iret
clc
arpl
mull
sub
xor
incl
fiadds
pop
xchg
pop
cmpsb
xor
mov
jle
mov
shll
push
jg
call
fadds
and
mov
mov
or
stos
sar
incl
insb
or
popf
in
ret
ret
repnz
lcall
fdivrs
pop
pushl
sub
popa
bound
and
or
pop
ret
jo
out
lret
sub
xchg
or
mov
sub
mov
lock
call
sarb
jge
incb
add
cmc
je
orl
push
push
addr16
xchg
add
xchg
jge
in
fimuls
push
sub
std
stos
incl
loop
xchg
addr16
lret
mov
sbb
and
xlat
mov
push
lret
dec
mov
ljmp
in
cmp
sbb
dec
sub
xchg
js
mov
lret
lcall
stos
std
loope
pusha
jge
cmp
xor
std
lea
push
jmp
add
fsubr
lret
adc
js
lahf
add
inc
lret
inc
push
mov
inc
mov
xchg
push
jmp
adc
xchg
mov
xchg
dec
jae
out
jge
mov
mov
xor
dec
xchg
dec
mov
cmpsb
pop
test
cmp
mov
jmp
jae
xchg
sbb
popa
aam
pop
mov
nop
js
inc
lds
cmp
cli
movsl
insb
xor
orb
add
fs
cmpsl
xchg
and
incl
out
int
shrb
pop
loop
jns
cwtl
mov
imul
adc
xchg
outsb
cs
pop
loop
sbb
test
cmpsl
ljmp
hlt
call
push
push
push
mov
mov
xchg
adc
mov
jne
inc
cld
call
adc
lret
daa
mov
push
fwait
stc
xchg
mov
addb
nop
mov
filds
xor
out
inc
loop
popa
sarb
adc
ficomps
pusha
decl
lods
xchg
dec
sbb
cltd
and
and
and
test
dec
push
push
loop
cmp
mov
mov
add
adc
ss
mov
push
lds
pop
incl
into
push
shll
push
cltd
mov
sbb
fwait
pop
mov
ret
mov
push
ljmp
call
int3
arpl
clc
sub
xor
dec
lret
jg
or
iret
inc
pusha
pop
adcl
and
cld
add
decl
xchg
sahf
je
xor
rcl
das
dec
inc
jne
cmp
shlb
cmpsb
inc
cli
jmp
jo
cmp
jbe
cmpsl
loopne
push
pop
fimull
push
dec
aas
leave
or
and
cmc
test
sahf
jae
lcall
mov
cld
push
std
call
adc
lock
insb
inc
das
repnz
enter
push
xor
js
imul
push
sbb
int3
pop
imul
inc
mov
jmp
push
inc
inc
xor
mov
or
cmp
mov
lret
mov
decl
outsb
jmp
sbb
shll
sbb
lods
inc
pop
cld
lcall
sbb
icebp
das
xchg
aaa
fldenv
lock
rorb
fidivrs
mov
push
or
or
adc
mov
mov
clc
or
cs
outsl
mov
test
gs
jg
pushl
pop
add
pop
aam
mov
icebp
cmpsb
clc
mov
mov
ljmp
mov
xchg
iret
cmp
loopne
sbbb
adc
lds
inc
sbb
push
out
in
mov
pushf
lahf
out
jg
fs
jle
xor
push
xchg
mov
call
and
lahf
inc
cld
idivl
pushf
enter
lcall
ror
add
outsl
fidivs
lock
mov
hlt
sbb
dec
mov
xor
jmp
jmp
lcall
dec
mov
or
xchg
mov
ljmp
mov
mov
inc
xor
add
data16
jae
arpl
add
cwtl
loop
jl
in
loopne
pop
xchg
or
insl
mov
ljmp
shlb
push
iret
addl
push
dec
fdivr
jmp
inc
jp
ljmp
mov
pop
test
ret
jmp
jb
sub
loope
mov
out
jne
call
loopne
jmp
daa
push
pop
std
lcall
hlt
push
fwait
shr
lcall
cltd
jle
sbb
scas
movsl
pop
pop
leave
andl
outsb
ret
cmp
adcb
xchg
lock
js
sub
and
inc
pop
sub
cs
pop
xor
xchg
mov
mov
xchg
mov
jb
sbb
leave
aas
fstl
mov
pop
mov
fldl
inc
sbb
shll
or
inc
fsub
sti
imul
mov
in
mov
js
mov
mov
leave
cmpsb
call
dec
ret
call
inc
add
test
jl
fcmovu
mov
cmp
test
lock
cld
sbb
mov
repz
jne
or
ret
and
dec
jmp
popa
inc
xchg
mov
xor
jp
add
cmp
push
daa
mov
lret
outsl
mov
adc
add
lcall
pop
pop
int3
cmc
or
mov
mov
mov
push
xchg
addr16
out
pusha
inc
pop
mov
or
jge
pop
jbe
fidivl
rclb
sar
bound
and
dec
test
mov
mov
mov
aam
adc
adc
pop
inc
ficoml
mov
xchg
pop
add
push
pop
sbb
leave
je
icebp
jle
xchg
dec
sar
iret
ljmp
insb
sbb
out
xor
daa
lcall
cmpsb
fwait
adcb
scas
jo
ljmp
rcr
dec
xchg
and
pop
jo
stos
jmp
jno
fcoms
jl
jno
lods
xchg
mov
mov
decl
test
mov
ja
lret
lcall
movsb
pop
pop
push
sar
incl
pop
insl
dec
push
mov
arpl
jno
pop
dec
xchg
ficomps
cwtl
xchg
hlt
push
enter
pop
cmc
out
xor
jge
xchg
stos
mov
push
push
inc
and
movsb
pusha
ljmp
aad
push
sbb
mov
xor
lret
ret
sahf
adc
dec
pop
insb
cwtl
faddl
mov
xchg
sub
push
xchg
in
movsl
xchg
jae
hlt
stos
push
inc
push
aad
or
decl
cltd
jo
in
outsb
or
aam
pop
fldenv
jg
xchg
ds
jmp
sub
mov
mov
push
xor
adc
adc
jge
ljmp
dec
into
std
fwait
mov
push
insb
pop
inc
lea
sub
mov
push
pop
pushf
clc
dec
popa
mov
test
movsb
inc
les
fisubrs
or
pop
adc
pop
add
out
cli
das
mov
sbb
aam
fistl
mov
idivb
pop
sub
mov
add
stc
sbb
sub
pop
mov
mov
xor
cmp
push
sub
sbb
cmp
inc
jae
pushl
std
mov
push
cs
push
imull
xchg
mov
out
and
jmp
inc
popa
jecxz
iret
ror
clc
xchg
and
pushf
ret
dec
push
ds
lods
and
push
es
out
xchg
test
pop
loopne
pushl
jecxz
add
inc
loop
insb
inc
mov
mov
outsl
stos
xchg
mov
aad
jecxz
shll
outsl
and
mov
mov
pop
loope
arpl
ljmp
adc
sahf
dec
gs
push
ljmp
addr16
ds
pushf
push
repnz
sbb
cld
mov
gs
loope
mov
push
xor
mov
clc
out
push
adc
add
pop
jae
inc
loope
stos
mov
test
and
call
fistpll
push
mov
iret
ror
mov
mov
decl
add
inc
test
inc
punpckhdq
aaa
gs
mov
cld
js
fwait
jb
jp
push
cmp
and
ljmp
inc
hlt
sbb
out
xchg
into
dec
and
cmp
sbb
lock
jg
xor
pop
jl
push
bound
xchg
sti
sbb
cmp
cs
jp
in
xor
cli
push
mov
sub
sbb
cmpsb
sub
cmpsb
cld
xchg
mov
iret
cmc
mov
and
cmp
push
xor
mov
sub
jg
adc
addr16
add
xchg
pop
xor
and
sub
cld
decl
xchg
leave
push
scas
cmpsl
fstpl
jle
into
sahf
imul
push
mov
add
xchg
mov
call
dec
and
in
nop
fs
fsts
mov
push
cmc
push
call
jo
mov
cmpsb
pusha
je
mov
movsb
mov
incl
shl
jg
mov
and
jmp
sub
imul
jmp
pop
adc
test
xchg
mov
jp
aaa
imul
jmp
rcrl
inc
imul
mov
jns
jne
das
mov
lods
push
movl
aad
jl
inc
adc
jge
lods
inc
fwait
mov
inc
and
and
inc
int3
dec
movsl
addr16
lea
mov
mov
aad
mov
mov
sarl
arpl
fdivrp
scas
pop
fsubrl
stos
cmp
pop
call
mov
std
rcrb
inc
test
insl
mov
add
sub
pop
cmp
rolb
and
sbbl
lret
xor
jecxz
es
movsb
pop
in
pop
and
mov
jmp
fisttpll
cs
cmpsb
jbe
or
fstl
orb
cmp
and
xchg
call
loopne
sti
dec
xor
sbb
mov
shlb
or
mov
lcall
pop
mov
mov
lods
xchg
pop
aaa
daa
test
add
mov
ljmp
mov
inc
loop
fsubs
leave
and
push
ja
ss
dec
je
push
sbb
jmp
push
cltd
sbbl
or
jns
call
decl
or
mov
push
xor
dec
andb
and
sti
push
in
cmpsl
ret
aaa
nop
mov
in
minps
ljmp
je
push
cmp
or
inc
rorl
cld
call
cld
sbb
pop
daa
out
push
fldlg2
bound
jl
enter
adc
jg
call
inc
xchg
mov
outsb
sbb
repnz
adc
test
loopne
mov
jmp
adc
mov
fcomps
jbe
lock
sbb
jmp
loop
push
call
lcall
jo
andl
and
rorl
fmull
jmp
aam
js
mov
push
pop
xor
sub
or
add
call
push
std
cmp
js
jno
jb
ffreep
mov
push
scas
bound
aad
xchg
dec
and
out
mov
je
mov
push
pop
ficoml
cmpsb
fbstp
cmp
rcrl
arpl
call
lahf
fistl
std
jo
icebp
mov
insl
mov
adc
scas
xchg
mov
adc
cmpsb
rclb
sahf
or
mov
stos
sub
nop
mov
iret
daa
loopne
jmp
popa
add
je
dec
push
std
mov
push
adc
std
xchg
lahf
dec
push
xchg
xchg
std
mov
sbb
loopne
test
mov
or
fprem1
cmpsb
movsb
stos
loope
push
add
lods
pop
data16
ds
cmpsl
jbe
daa
jbe
out
xor
scas
jg
jecxz
xchg
imul
jg
bound
xor
dec
inc
jg
out
mov
cmp
and
mov
decl
loopne
inc
shrl
imul
imul
inc
cld
ficompl
in
sub
cwtl
pop
cmc
cmp
mov
dec
call
dec
scas
test
mov
and
jb
lods
arpl
pop
sbb
xchg
je
pop
jne
xlat
arpl
jmp
add
xor
scas
ds
pop
lods
mov
mov
dec
push
js
push
cld
int
pop
xor
mov
ljmp
mov
aas
insl
dec
out
sub
adc
ss
jae
dec
lcall
add
sub
or
and
inc
lcall
xchg
mov
jno
jecxz
dec
xor
in
xchg
add
jns
mov
push
je
lcall
lret
in
pop
test
lock
cmp
mov
pop
push
lock
das
add
dec
add
push
cmp
dec
add
pop
dec
mov
and
jle
in
movb
jo
inc
aaa
imull
and
into
lahf
fwait
stos
push
cs
leave
loope
enter
and
mov
dec
xor
cmpsb
inc
hlt
mov
cmp
test
sub
addr16
push
and
mov
adc
pop
hlt
call
push
imul
lock
test
stos
orb
mov
jmp
scas
pop
cmpsl
lock
or
xor
scas
dec
xor
push
xor
cld
jmp
test
ja
jno
jo
rcrl
loop
or
push
cmpsb
inc
push
fidivs
or
out
fbstp
push
mov
pop
test
sbb
inc
adc
test
xchg
pop
add
mov
inc
dec
dec
xchg
inc
cli
lock
pusha
mov
pop
xorb
fucomip
sbbb
mov
pushf
js
out
scas
sbb
push
xor
mov
popf
push
clc
pushl
cmp
jecxz
adc
sub
popa
xor
sahf
mov
push
xchg
xchg
shll
scas
es
inc
cltd
mov
push
mov
adc
cmp
pop
cmc
call
jb
in
filds
mov
in
jmp
dec
ret
addr16
ljmp
pusha
daa
dec
js
sahf
mov
adc
adc
arpl
jmp
pushl
mov
fs
mov
ds
pop
jbe
add
out
mov
stos
in
cmpsb
inc
into
outsl
out
lahf
mov
push
arpl
mov
jmp
cli
push
outsb
add
fistl
mov
push
aas
push
inc
fwait
dec
xor
jno
scas
cmc
incl
cmc
imul
push
mov
push
adc
or
stos
stc
cli
cmp
fwait
mov
fs
setb
jle
scas
and
repz
cmp
je
bound
ljmp
lcall
aad
xchg
pop
or
mov
cmpsb
jno
jmp
aas
fistl
xlat
mov
sub
call
fldl
mov
sbb
in
call
decl
repz
push
pop
or
add
decl
add
xchg
mov
pop
imulb
fwait
mov
cmc
mov
adc
cmp
dec
xchg
jg
cld
daa
mov
jle
in
in
mov
lcall
and
ljmp
fmuls
popa
aam
and
clc
out
mov
stos
fildll
fsubrs
incl
add
lcall
out
push
mov
cmpb
pushl
iret
jbe
aad
ret
pop
jnp
sbb
loopne
pop
mov
and
fdivl
pop
xor
pop
jg
cmp
jns
dec
adc
xchg
sahf
pop
xchg
jb
xor
fld
dec
adc
sbb
decl
xchg
insb
int
insl
sub
faddl
cmp
mov
das
mov
mov
and
jae
xchg
sahf
jb
cmp
and
and
pushf
cltd
push
idiv
fcomip
sti
or
xchg
jns
hlt
jb
inc
add
loopne
das
aaa
popf
ret
xchg
add
mov
test
mov
xor
sbbb
pusha
cmp
call
imul
xchg
lret
pop
lds
adc
push
and
fwait
shlb
or
mov
decl
ds
inc
popa
inc
dec
push
inc
xchg
mov
jecxz
fmull
fcos
dec
ljmp
jmp
les
das
and
pop
mov
xchg
pushl
mov
insb
mov
push
adc
add
add
mov
xor
pop
pop
test
loope
testl
test
push
mov
dec
adc
inc
lahf
gs
adc
xor
inc
ljmp
adc
jmp
sub
sub
xlat
xchg
daa
jg
mov
cmc
pushf
daa
and
in
mov
push
dec
cmpsl
mov
cli
mov
ja
fcomip
icebp
hlt
test
loop
cmp
sbb
imul
add
jecxz
enter
ja
and
fcompl
inc
adc
in
call
int3
jge
into
or
insb
add
pop
loope
sub
mov
leave
shl
and
inc
movsb
lcallw
cmp
pop
add
mov
xchg
shl
sbb
sub
shr
add
ret
call
push
jnp
jge
inc
or
push
xor
sbb
jp
inc
fildll
xor
fbld
and
push
test
or
insl
loop
bound
xchg
mov
icebp
pop
and
lock
notl
inc
out
inc
insb
out
lcall
mov
ss
pusha
and
cld
shlb
sub
call
rolb
outsl
scas
cld
jnp
pop
sar
push
das
in
cmc
adc
jb
int
push
mov
push
scas
mov
sbb
inc
int3
outsl
sbb
push
jecxz
mov
add
icebp
bound
scas
movsb
decl
push
mov
testb
mov
push
cmc
or
jg
jmp
es
leave
add
pop
nop
dec
jae
lea
data16
pushl
inc
gs
jno
jmp
imul
jle
ret
loopne
sbb
aas
dec
adc
movsl
cs
outsl
cli
sbb
cmp
push
jl
es
inc
movsb
sti
xlat
jbe
push
lock
pop
dec
imul
jbe
adc
sbbb
sbb
cs
mov
clc
lcall
call
icebp
push
xchg
mov
jmp
jo
cmp
imul
mov
icebp
add
in
sub
mov
cmp
mov
cmp
mov
test
in
adc
incl
mov
scas
add
pop
ret
pop
test
cmp
xlat
aam
or
xor
jg
hlt
cmpsb
data16
ficompl
sti
sub
decl
mov
lret
cld
arpl
shlb
daa
mov
or
dec
inc
mov
clc
jg
mov
add
clc
sahf
decl
lock
mov
mov
mov
or
mov
add
sbb
ljmp
lcall
cmp
mov
xchg
dec
and
pop
mov
fbstp
xor
dec
dec
push
push
add
call
add
xchg
or
sbb
ret
mov
fwait
jg
and
mov
mov
jecxz
cwtl
push
push
pushl
pusha
and
cs
sbb
clc
movsl
lock
push
xor
xchg
stos
test
into
lahf
xchg
sar
cmp
imul
je
add
test
dec
push
xchg
std
outsl
mov
test
fdiv
mov
pushl
inc
cmp
in
cmp
andl
fs
dec
movsl
pop
mov
and
inc
cld
in
jnp
pushl
push
add
mov
push
shrl
jne
mov
aam
movsl
loope
jg
add
dec
fmul
dec
mov
xor
lcall
addl
push
add
std
jg
sub
orl
pushl
inc
mov
push
inc
mov
sbb
aad
cltd
pop
push
pop
ss
xlat
push
adc
test
jl
ss
in
aam
int
in
rorb
push
cmp
lret
jg
call
ret
xchg
loopne
and
in
cli
jne
jne
xchg
repnz
in
repz
sti
add
or
cld
decl
pop
and
jmp
inc
data16
dec
lcall
jo
cltd
dec
loope
mov
dec
out
mov
jle
cli
out
imulb
push
mov
das
sar
loopne
add
and
cmp
lods
mov
push
or
popl
jg
mov
jmp
sub
add
fwait
popf
fsubl
lock
and
lret
pop
ds
call
lea
push
jbe
jge
notb
sarb
out
or
inc
inc
call
scas
push
mov
jae
fs
cmp
mov
stos
mov
daa
xor
ret
add
mov
pop
call
push
cmp
loopne
and
pop
arpl
lods
test
ljmp
xchg
scas
xchg
mov
and
push
dec
test
mov
and
mov
mov
dec
and
xlat
movsb
sarb
sub
add
pushl
mov
rcl
pop
xchg
and
mov
cmpsl
push
fistpll
pop
lcall
add
dec
adc
jge
ret
sub
xchg
cmp
clc
adc
push
jg
jg
popa
or
pop
in
pop
add
loope
or
lock
cli
fwait
js
mov
ljmp
movsb
sub
inc
sbb
repnz
jno
mov
pop
mov
repz
sub
lds
push
jb
rcrb
sarl
ret
jnp
mov
xor
push
push
xchg
imul
pop
cltd
aas
cwtl
bound
or
xchg
in
push
adc
ljmp
stc
insl
cltd
adc
xor
xor
sub
mov
aas
idivl
outsl
xchg
dec
mov
fsubrs
or
or
mov
decl
cltd
lods
addl
rorb
pop
add
popa
adc
and
mov
insb
cli
bound
sub
mov
call
ret
jo
jg
pop
xor
popa
aam
cli
mov
leave
mov
stc
test
divl
dec
inc
cltd
lcall
imul
dec
out
jmp
stc
jno
dec
cwtl
mov
incl
xor
add
push
dec
jnp
loop
or
push
inc
jge
jno
ljmp
or
sub
call
add
loopne
scas
stos
loope
xchg
jg
rcrb
dec
adc
lcall
or
adc
bnd
mov
imul
orl
notb
xchg
or
jno
sub
fwait
jne
pop
data16
mov
push
punpckhdq
mov
loopne
adc
clc
push
or
xor
imul
js
fimull
sbb
jmp
sub
into
and
pop
and
push
pop
fldl
add
pop
inc
lcall
enter
ljmp
fidivs
movsl
dec
mov
aaa
fbld
aas
xor
lcall
out
jnp
inc
fld
fstps
cli
mov
icebp
jl
neg
pushf
dec
jg
or
aad
call
add
adc
in
and
xchg
clc
mov
fwait
jge
mov
stos
dec
fcomip
lcall
cmpl
sbb
xor
xor
or
push
xlat
mov
orb
imul
ja
loopne
faddl
mov
inc
mov
jle
fisubs
lock
incl
dec
test
ja
xor
sub
xchg
mov
push
hlt
jle
xchg
pop
inc
stc
pop
cli
mov
loopne
lret
shr
inc
push
sub
add
xlat
cltd
in
ror
inc
cmp
call
nop
inc
dec
iret
jbe
and
cltd
test
push
jb
addl
push
test
call
inc
and
and
aas
rorb
fwait
insl
std
sbb
cld
push
hlt
inc
add
sbb
mov
decl
mov
shll
lods
add
add
adcb
movsb
daa
inc
add
fdivr
fxch
dec
loop
shll
and
cmpb
mov
imul
loop
mov
push
dec
jg
add
nop
mov
sbb
adc
fsubs
cmpsb
jg
jmp
loope
mov
and
add
jne
cmpsl
or
dec
loope
gs
sbb
dec
adc
sahf
cld
mov
test
jle
inc
push
shrb
decl
cld
cmp
jp
cs
clc
fwait
xchg
fnstsw
mov
out
fadd
inc
jns
inc
xchg
loopne
xor
adc
hlt
pop
scas
test
push
sub
insl
lahf
stos
push
push
or
call
insl
jno
sbb
clc
jmp
pop
mov
call
aaa
ficoms
test
dec
leave
jbe
jmp
mov
add
das
dec
mov
mov
repnz
mov
mov
xor
mov
lods
dec
xchg
je
fcompl
cld
popa
jmp
or
lds
xor
dec
jmp
mov
mov
adc
jnp
and
adc
cld
ljmp
test
cmc
addl
gs
lds
arpl
es
or
call
or
jmp
jae
lock
sbb
cmp
loope
adc
add
cld
jg
and
outsb
cmpsb
gs
mov
xlat
mov
aad
jge
adc
stc
icebp
lret
lods
xchg
push
and
lret
add
movsb
hlt
int3
arpl
mov
inc
icebp
aad
fistpl
dec
lret
out
jbe
push
jge
addr16
jecxz
jnp
or
pop
jl
sbb
jg
aam
pop
mov
aad
and
mov
cltd
inc
pusha
inc
or
mov
test
aam
dec
push
adc
mov
inc
aas
es
mulb
decl
andb
sbb
jo
je,pt
ss
cmpsb
adc
incl
push
jmp
loopne
adc
and
push
xchg
sbb
push
and
cmc
push
inc
xchg
or
jb
mov
mov
inc
and
in
pop
test
fcomp
fs
jmp
out
mov
lods
xchg
daa
maskmovq
mov
cltd
nop
xorb
fwait
imul
pushf
push
punpckldq
ljmp
add
mov
int3
enter
sar
fwait
insb
lock
sub
mov
mov
cmp
pop
imul
loop
mov
inc
fs
lcall
divb
pshufw
mov
push
stos
dec
loopne
fsubs
cmpsb
aas
popa
xlat
imull
aas
addl
jns
test
fistpl
mov
out
mov
stos
add
sub
call
pop
loop
in
sub
clc
sbb
mov
rcrl
mov
or
cmp
mov
sbb
enter
mov
dec
decl
cli
cmc
ds
adc
popf
push
mov
loope
inc
in
xlat
inc
push
and
mov
test
sbb
jg
scas
mov
test
lahf
mov
rcll
nop
fimuls
sti
pusha
pusha
mov
lcall
in
fstp
out
push
mov
fdivrl
mov
loope
out
sub
mov
dec
xchg
jne
jmp
cwtl
cmp
and
jmp
je
push
pop
lods
ja
pop
in
dec
inc
ret
decl
ss
push
xor
cmpb
test
cmpb
ror
aam
or
or
adc
pushl
cltd
jge
jae
into
cmp
pavgb
cmpb
in
or
jmp
lret
leave
pop
push
popa
or
xchg
shl
pop
cmp
pop
mov
std
dec
pslld
jmp
out
pop
pop
cmp
sahf
mov
es
decb
mov
xchg
xchg
adc
pop
sub
xlat
ljmp
jmp
jo
out
lods
das
push
mov
shll
inc
mov
jmp
pop
mov
rcrl
ficoml
loope
dec
in
scas
mov
push
or
jmp
pop
std
lcall
jnp
fsubs
pop
mov
and
and
mov
jmp
insl
addl
fldcw
sbb
pop
call
xor
loope
pushf
movsl
repz
out
scas
int
cmp
push
mov
push
fadds
cmp
int3
xchg
icebp
and
incl
jl
notl
scas
mov
sub
xor
scas
sbb
ret
pop
jne
pop
out
pop
dec
fbstp
pushl
imul
enter
in
stos
out
adc
push
in
in
icebp
sub
jo
jmp
pop
jl
jne
xchg
xor
aas
daa
jecxz
jne
shrb
data16
sahf
jbe
cmpb
ljmp
inc
mov
daa
pop
cmp
xor
repz
scas
bound
std
xlat
adc
call
or
mov
pop
push
lock
cmp
push
and
pusha
inc
test
lret
jmp
js
xchg
pop
jbe
push
xchg
fldcw
jnp
add
mov
add
aas
jnp
mov
lahf
push
dec
pop
lret
sub
scas
sarl
pushl
popf
mov
push
fsubp
jmp
cmp
cli
cmp
sbb
xlat
decl
into
jmp
test
sahf
das
popa
fcomip
pushl
repnz
lret
xor
enter
or
loop
out
xchg
loope
call
pop
or
jne
xorb
test
push
xor
lea
pop
cmpsb
loope
fcomi
xchg
stos
aas
jecxz
cld
rcrb
outsb
pop
sti
fadds
jmp
push
decb
adc
fiadds
dec
mov
pop
adc
jo
xor
lcall
mov
and
ja
aad
bound
inc
add
leave
icebp
dec
dec
ljmp
push
mov
push
push
pop
pop
sbb
call
or
pop
sbb
push
jecxz
xchg
push
js
cld
pusha
test
jg
incl
mov
scas
and
mov
xor
add
loop
mov
cwtl
fiaddl
fwait
xchg
ds
nop
adc
call
or
lcall
inc
imul
fs
clc
ret
lock
pushl
sub
push
xor
repnz
out
cs
or
or
mov
jg
push
xor
lods
push
push
inc
mov
mov
cmp
rcrl
dec
jg
decl
lcall
inc
push
pop
mov
filds
popf
push
rolb
jae
jae
cmp
mov
sahf
and
fsin
mov
test
jg
inc
cli
dec
mov
adc
fcoml
inc
jno
movsb
iret
mov
fldcw
jne
xlat
xchg
das
mov
scas
scas
lods
push
popa
cltd
call
mov
outsl
adc
decl
mov
mov
add
and
xchg
jmp
mov
pop
pop
push
dec
pop
test
les
fidivs
fdivrl
mov
pop
mov
jp
je
cmp
in
push
inc
pop
out
movsb
shl
pop
popf
movsl
jbe
sbb
mov
mov
or
scas
push
jp
xor
xchg
push
lret
ja
mov
lock
je
pop
pop
push
lods
mov
or
adc
push
push
cmp
pushl
movsl
es
adc
in
sub
in
sub
fldt
incl
lds
add
out
call
pusha
imul
cli
mov
xor
std
fsubl
pop
addr16
sub
push
adc
dec
dec
movsb
scas
inc
cmpsb
cli
mov
lds
fmull
jg
xor
lock
aam
push
xchg
or
jno
and
mov
fwait
sub
cwtl
push
fimuls
or
add
shll
mov
decl
push
push
add
push
lahf
popf
jmp
xchg
bound
fcom
aas
sub
pop
movsb
xor
decl
aas
pop
cmp
shll
lock
cld
in
scas
cmpsl
repz
jae
xchg
shrb
pop
cli
incl
test
adc
aaa
mov
dec
and
ss
jmp
lret
pushl
test
or
and
add
gs
cmp
cmpsb
inc
push
push
push
call
mov
cmp
jbe
fisttps
ficoml
pop
mov
adc
je
dec
les
xchg
ljmp
xor
mov
in
in
mov
scas
fxch
das
sub
push
dec
push
pop
jb
bound
ljmp
cs
outsb
sahf
fnsetpm(287
lahf
clc
mov
out
push
mov
inc
test
test
jmp
repz
mov
fsubl
lcall
popa
cwtl
dec
addr16
mov
gs
repz
mov
into
lods
jbe
fsubl
push
popf
call
sbb
movsl
cmpsb
and
pop
imul
pop
push
xchg
push
dec
or
jp
std
push
and
test
xor
ficoml
cmp
incl
mov
jge
je
lcall
xor
rclb
ds
jns
iret
and
js
cmp
jne
add
sbb
mov
imul
lcall
pusha
jae
mov
sub
fidivl
mov
mov
aas
sub
jle
insl
push
insl
and
push
cmpl
aad
mov
xchg
or
pushl
sbb
dec
pop
push
icebp
fcoml
push
inc
xor
daa
add
shrb
dec
lret
out
adc
cmpsb
pusha
loopne
incl
inc
and
push
jge
fsubp
jl
ja
dec
cs
lcall
or
dec
sub
adc
daa
cmc
mov
pop
sbb
xchg
sub
add
jge
movsl
cmp
sahf
int3
push
push
mov
lcall
rclb
sub
repnz
pop
leave
rcrl
nop
jne
out
xor
stos
test
icebp
inc
push
js
mov
push
leave
add
popf
inc
sub
xchg
lret
loope
out
push
xor
or
pop
dec
stc
push
lcall
mov
pop
sub
testl
mov
xor
ss
cmpsl
add
and
and
sbb
xchg
and
loop
mov
jp
js
add
mov
lods
xor
test
fs
or
mov
xchg
out
mov
scas
and
push
and
xor
gs
pushf
xchg
ret
or
sub
push
and
stos
cs
inc
sar
mov
mov
sub
sub
jne
sub
push
cwtl
fs
ds
out
js
test
jae
push
or
sub
in
shlb
movsb
incl
add
dec
push
mov
fnstsw
xor
adc
dec
scas
popf
pushf
xchg
ja
incl
aaa
ror
aam
and
xor
mov
int
adc
lock
clc
incl
fiadds
jae
pop
shrb
aam
push
lods
xor
out
push
iret
or
push
insb
xchg
push
es
imul
jp
cld
mov
cmp
inc
cmp
sub
xchg
jmp
inc
sub
mov
xchg
loop
xlat
sbb
test
gs
cmp
lcall
adc
out
das
sbb
push
add
fisttpll
mov
xchg
xor
push
mov
lock
mov
cvttps2pi
mov
mov
mov
mov
out
notl
test
aas
outsl
loopne
or
ljmp
imul
js
or
negb
fnstenv
mov
pushl
pop
cmp
or
xchg
popf
cmc
pop
mov
adcl
sub
pop
pop
sub
jg
jns
pop
fstl
arpl
int
stos
popa
dec
pop
mov
test
mov
lcall
scas
mov
aas
loopne
mov
call
push
jbe
movsb
dec
fs
out
mov
xor
inc
test
xor
test
xchg
mov
or
pop
loope
ss
cmp
cli
or
repnz
andl
jb
ljmp
or
jge
cmp
cld
shlb
mov
pop
popl
daa
daa
mov
incl
mov
lret
sub
dec
ficomps
pop
paddusw
clc
fmul
push
jno
dec
incl
cld
sti
push
and
call
sub
or
rcrb
mov
fdivr
push
data16
adc
ljmp
sbbb
dec
enter
inc
nop
xchg
xor
decl
lock
sub
or
push
cmp
iret
loop
cmc
or
cmp
or
rorl
movsb
arpl
cmp
mov
mov
pop
pushl
cli
inc
xchg
sub
jmp
inc
cs
call
arpl
std
adc
xchg
fadd
dec
add
lcall
mov
fisttpll
pop
iret
mov
imul
dec
int
sbbb
hlt
xor
repz
mov
dec
push
mov
push
aas
aas
pop
sub
cmpsb
mov
xor
or
xor
mov
lds
dec
jg
add
fadds
sbb
xchg
jae
pop
mov
lcall
lock
shrb
incb
inc
inc
inc
mov
inc
inc
mov
ja
jne
scas
clc
ljmp
or
mov
popf
xchg
add
xchg
nop
jl
pop
adc
call
mov
inc
pop
shl
stos
iret
jp
xchg
arpl
fists
sbb
or
cmp
call
cmpsl
sbb
cmp
push
and
push
jae
cld
add
push
and
xor
cwtl
popf
xchg
outsl
cli
popf
mov
fmuls
push
fwait
and
push
int3
rorb
cmpb
loop
cmp
add
cmp
push
sub
test
xchg
jmp
ss
ret
jb,pn
out
xorb
test
sbb
push
pop
mov
and
hlt
shll
notl
sbb
shll
imul
pop
xlat
stos
loopne
adc
sbb
jle
pop
ret
pop
in
lods
or
mov
or
call
cmp
lds
popa
mov
cmpsl
mov
lcall
pop
sti
xchg
add
pop
mov
ljmp
scas
jle
push
arpl
out
mov
mov
xchg
jle
out
icebp
fisubrs
dec
ljmp
int
adc
mov
insl
xlat
insl
cli
or
jl
in
cmc
pop
negl
testl
call
jecxz
call
mov
jmp
pop
cmpsb
subb
and
pop
mov
adc
das
pop
jge
pusha
jmp
sub
lods
cmpsb
lahf
in
mov
xchg
out
xor
jae
jmp
and
imul
mov
mov
and
test
mov
jb
int
or
push
test
lock
push
jne
mov
call
jo
dec
jecxz
out
inc
inc
mov
mov
jne
add
test
rol
jns
push
xor
mov
sub
fcmovnbe
jo
pushl
sub
dec
insb
push
loop
cmpl
pusha
lods
lock
call
lds
xchg
addr16
popa
incl
cld
stc
imul
pop
mov
ret
shll
test
in
inc
inc
or
ljmp
xchg
jge
and
sbb
pop
and
fidivrl
pop
add
sbb
push
sub
jno
cmp
xchg
xchg
int3
divb
sbb
and
xchg
jno
lods
inc
inc
repnz
movsl
stc
fists
jns
inc
mov
lods
sbb
sbb
lcall
push
stc
sbb
pop
daa
jecxz
push
mov
or
xlat
mov
adc
jl
cmpl
ja
mov
insb
mov
sub
dec
ret
icebp
xchg
test
lcall
loopne
bound
pop
in
loop
decl
xchg
aad
jmp
mov
imul
js
mov
mov
mov
jmp
jne
inc
sbb
sub
sti
adc
pop
cmp
or
aam
sbb
outsb
decb
adc
ficoms
bound
and
rorl
lds
sub
cltd
scas
cld
inc
mov
decl
or
imul
loop
or
dec
fwait
rcrb
pop
xor
or
pushl
rcrl
je
push
test
aas
push
lret
out
in
scas
cmpsl
out
loopne
pusha
repnz
pushl
popf
sarb
sbb
push
lret
jl
in
lret
adc
popw
cld
out
jge
cmp
testb
push
jecxz
cmc
adc
sub
decb
inc
mov
mov
cli
mov
clc
out
cmpb
std
es
hlt
cmc
sub
movsl
xchg
imul
lcall
sbb
pop
inc
ljmp
sar
mov
mov
inc
out
jo
mov
jno
dec
popa
pop
or
jnp
cltd
js
inc
xchg
add
jp
sbb
xor
jmp
xorl
dec
cmpsl
repnz
lds
ja
pop
inc
sbb
idiv
ljmp
ficompl
cmp
into
jmp
lods
or
push
dec
mov
scas
jae
mov
ja
jmp
push
mov
xchg
leave
or
and
hlt
arpl
out
fildl
jg
pop
lods
stc
jns
je
pop
test
xchg
push
push
in
lods
ss
fs
aas
push
ja
xchg
int
cmp
jns
cmp
push
mov
mov
cmpb
ljmp
movsl
and
dec
rolb
rcl
lods
iret
jg
cmc
rcrb
ss
rolb
dec
xchg
push
dec
mov
mov
pop
repnz
ljmp
adc
movsb
icebp
jp
sbb
jbe
test
cltd
adc
test
fwait
repz
outsl
stos
hlt
or
inc
mov
aam
leave
ja
ljmp
clc
sbb
pop
data16
mov
xor
jmp
call
insl
jge
jae
xlat
inc
out
sahf
lock
xor
sbb
scas
loope
cltd
push
add
decl
out
sahf
xchg
or
imul
cmpb
out
cli
ret
and
lret
push
cli
xchg
jge
dec
shr
add
mov
mov
inc
stos
adc
mov
out
ss
sub
sbb
push
xchg
cwtl
inc
fsubrs
ss
mov
sar
push
loopne
pop
cmp
jle
add
pop
clc
sub
jle
or
jp
shlb
sbb
mov
rcr
jb
sbb
incl
pop
jmp
lcall
xchg
fistl
xchg
jle
rol
mov
call
sbb
or
js
mov
pop
adc
push
dec
daa
test
es
and
jg
pop
les
fs
push
fisttpll
mov
lods
fdivrs
repnz
pop
add
das
xchg
mov
leave
test
pusha
pop
sbbl
cltd
dec
xchg
cmp
lcall
sub
int
xchg
pop
dec
insl
int3
jp
sbb
rol
adc
insb
out
mov
lcall
pop
stos
cmp
popfw
loopne
lea
and
jecxz
cmp
and
pushl
lods
test
push
sbb
push
ja
add
aam
in
lea
loopne
push
jmp
fmull
pop
mov
mull
add
pusha
jp
data16
test
push
fstl
aad
pop
mov
mov
add
cmpsl
inc
pop
xor
pop
dec
mov
jmp
or
int
ljmp
add
outsb
jae
int3
and
leave
clc
mov
jb
mov
and
test
push
cmpsb
mov
jb
cmc
xchg
rep
out
sub
pop
adc
push
xor
int3
adc
jbe
jno
jnp
add
pushf
hlt
mov
push
mov
fisttps
jb
inc
cwtl
mov
lcall
repz
out
or
repnz
ljmp
sbb
test
xorb
add
cmp
lahf
xlat
outsb
sbb
outsl
call
popa
jg
pusha
rcrl
ljmp
xchg
xchg
pop
or
pop
xor
push
out
scas
cmpsb
mov
push
std
sbb
fs
fcomps
insb
dec
mov
mov
decl
jae
mov
ret
sub
pop
mov
je
roll
leave
js
or
iret
imul
in
pushl
jo
jmp
test
sbb
sbb
clc
lea
cmp
decl
cmp
mov
pop
movsl
cltd
repnz
add
push
imul
ljmp
add
jge
push
addr16
loopne
or
sbb
jmp
mov
cld
std
sbb
jl
rol
pop
idiv
cmp
call
jmp
lods
add
pushf
adc
movsb
add
sarb
push
test
adc
lcall
mov
addl
sub
cld
popa
ljmp
out
xlat
iret
test
pop
lock
data16
fwait
mov
or
shll
jmp
xchg
jno
pop
out
mov
call
dec
in
jnp
shll
out
mov
vmread
insl
and
ficoms
call
insb
sbb
fmuls
movsl
sbb
hlt
bound
jmp
push
loopne
mov
imul
insb
sub
lahf
pusha
dec
out
mov
xorb
jg
test
or
es
shr
fdivrs
fistl
jmp
mov
xor
xor
test
sarb
iret
lea
jb
sarb
mov
sbb
negl
pop
mov
loopne
shlb
pop
xchg
call
fadd
adc
jp
push
sahf
push
fbstp
push
mov
mov
es
cmp
stos
les
mov
sub
arpl
and
scas
push
mov
cmp
rclb
lahf
ret
cmc
sarb
lock
lds
lahf
cmpb
hlt
scas
push
ljmp
dec
sbb
js
outsb
dec
lds
sub
shl
mov
dec
adc
sub
pop
sub
ja
pop
or
or
pop
add
movsb
mov
aaa
inc
ror
incl
cld
inc
sti
out
rcrb
insb
dec
sbb
pop
or
out
adc
fwait
insb
cld
or
and
ja
mov
daa
das
clc
pop
or
push
or
adc
jns
in
xchg
jp
pop
push
adc
jmp
sbb
aam
add
out
outsl
sub
xor
in
mov
mov
ss
jg
mov
add
mov
nop
mov
mov
dec
mov
dec
cmp
jmp
stc
ret
xor
mov
enter
hlt
incl
addr16
and
jbe
lcall
sbb
popf
out
jne
lret
or
sub
pop
cmp
ss
cmp
ljmp
push
add
jg
xchg
jl
push
popf
xor
pop
cmc
andb
jp
cli
decl
and
adc
jg
mov
enter
dec
cltd
mov
adc
lods
mov
jmp
mov
js
ret
mov
cmpsb
nop
xor
fdivr
ljmp
icebp
out
divl
sub
rcrb
fsubrp
outsl
cmp
or
call
mov
inc
and
xor
fsts
mov
lds
xor
xchg
add
sub
and
jmp
mov
je
ljmp
insb
mov
movsb
rcll
out
ljmp
in
push
outsb
or
xor
cmp
outsl
push
subl
pop
mov
push
ret
ljmp
dec
xor
insl
ret
pop
jo
sub
addr16
loopne
inc
xor
insb
pop
fdivr
cmpsb
pop
cmc
sub
mov
dec
nop
jmp
sub
xor
push
sub
cli
inc
iret
decb
sub
dec
bound
xor
roll
aas
lret
xchg
xchg
outsb
mov
outsl
call
mov
repnz
neg
xchg
scas
mov
pop
inc
out
je
std
fdiv
xchg
xor
pop
cmp
ljmp
cmc
sbb
push
ds
xchg
popf
mov
mov
mov
xchg
into
pop
out
decl
out
and
fucomp
insb
sub
push
int3
cmpsl
cld
stos
cwtl
or
push
out
and
decl
lea
lea
js
push
nop
cmpsl
xor
sbb
loop
sub
lcall
bound
mov
mov
icebp
mov
sbb
out
mov
call
movl
adc
dec
stc
lds
mov
leave
loop
dec
xor
dec
jae
dec
pop
jns
shrl
or
fcoml
xchg
dec
xorb
pop
inc
jo
mov
xchg
jmp
xchg
mov
in
test
jmp
mov
fdivr
xlat
mov
in
inc
xchg
mov
sub
jl
les
dec
in
push
sub
rcrl
mov
mov
lods
sbbb
or
fisubs
incl
xor
ss
dec
push
adc
cmp
mov
lock
and
lcall
and
psraw
dec
lds
push
test
addr16
or
data16
out
jae
decl
pop
or
movsb
add
dec
movsb
mov
push
xchg
add
mov
adc
push
xor
sbb
fildl
rclb
dec
aam
jp
jmp
inc
push
mov
push
dec
mov
adc
inc
fldt
stos
aaa
xchg
int
pushl
insb
movsb
loop
dec
ret
push
in
in
mov
xor
sahf
shlb
jae
cld
in
incl
cld
pushl
mov
mov
in
imul
xchg
das
insw
add
incl
rep
cmp
hlt
int3
or
sbb
or
data16
mov
and
out
inc
dec
cmp
in
xchg
bound
test
lods
imul
jle
mov
clc
imul
sub
mov
shr
adc
mov
in
and
imul
jmp
shrl
and
shl
pushl
mov
cmp
dec
out
test
adc
mov
ljmp
xlat
fisttps
pop
out
pop
dec
xor
xor
ret
hlt
rol
push
cld
cmp
inc
cmpsl
lahf
arpl
ret
je
mov
add
gs
js
out
lahf
pop
cmp
lahf
adc
in
mov
lret
jg
dec
sahf
xchg
dec
pop
sub
cld
xorl
push
or
push
push
je
xlat
push
or
mov
dec
mov
popf
lods
jno
push
inc
lock
lcall
dec
lods
movsb
mov
in
lea
fisttps
xchg
mov
inc
mov
mov
push
ljmp
add
sbb
sbb
mov
sarl
les
jecxz
xor
fildll
xchg
lret
test
add
out
fisubrl
dec
fisubrs
scas
adcl
xchg
and
decl
mov
xor
ja
xor
cmpsb
loop
and
mov
pop
fildl
mov
pop
aas
test
sub
cmc
xchg
in
fimuls
clc
push
insb
inc
jp
scas
movsb
jecxz
mov
push
and
pop
lahf
adc
xchg
mov
pop
sahf
mull
inc
pop
inc
mov
aas
dec
xchg
inc
sbb
iret
testb
add
fisubrs
out
ja
push
jmp
call
mov
cmp
rcr
xchg
sbb
test
or
push
cmp
sub
ljmp
sbb
roll
cmp
cmp
xchg
inc
ljmp
push
idivl
mov
enter
xor
mov
cmp
imul
fisttps
test
jp
fmul
cmp
or
scas
mov
orl
in
incl
test
add
dec
xchg
cltd
loopne
add
mov
aam
or
sub
call
jecxz
lcall
arpl
popa
int3
out
test
dec
sbb
cmc
xor
outsl
lret
mov
dec
js
fldcw
add
out
cmp
xchg
push
lea
mov
jmp
decb
dec
jp
sub
negb
in
fsubp
cmp
loope
incl
cmp
xchg
sbb
shll
mov
in
inc
push
leave
mov
loope
push
jmp
lcall
sti
gs
fimuls
inc
xor
or
into
sbb
mov
mov
jge
aam
nop
loop
adc
arpl
call
inc
add
mov
pop
pop
data16
incl
and
aad
mul
sbb
aaa
mov
daa
adc
and
mov
insl
or
lea
and
sbb
or
mov
decl
insl
xlat
ja
or
imul
cmp
movsb
cwtl
pop
out
stos
inc
jns
ljmp
and
mov
in
mov
xor
gs
xchg
sub
loope
push
clc
stos
pushl
push
pop
cld
jmp
scas
adc
mov
inc
jo
fdiv
mov
aas
xor
mov
mov
std
cmp
push
fdivr
decl
and
dec
repnz
insb
mov
mov
in
movsb
xor
push
insb
js
movsl
and
lcall
adc
jmp
add
js
movsl
ret
shlb
add
dec
jnp
les
cmpl
sub
lcall
fimuls
popf
popl
enter
push
jne
jmp
or
mov
add
inc
mov
adc
and
popa
mov
pusha
lds
mov
pop
cmc
pushl
inc
aaa
mov
fcmovu
movsl
out
lds
xchg
call
xchg
in
mov
xor
out
cmp
pop
jb
cmpsl
mov
push
sbb
jmp
mov
fsubs
sbb
push
sbb
pop
xchg
xchg
mov
nop
imul
push
mov
out
cmp
pop
xchg
fdivl
leave
jne
jbe
adc
sub
decl
rep
sbb
mov
sbb
push
fdivl
adc
test
sbb
int
mov
rcrl
iret
gs
repnz
ja
pushl
pop
mov
jae
pusha
in
imull
test
fcomip
ljmp
mov
mov
mov
mov
lods
or
stc
cmp
decl
pop
mov
loopne
xlat
and
adc
sahf
dec
cmc
mov
je
icebp
faddl
sbb
dec
xor
mov
les
fisubrl
cwtl
xor
mov
pushl
fsubl
ds
shlb
lods
jp
rorl
push
mov
mov
pop
jg
xchg
adc
sbb
mov
js
aam
repnz
push
mov
pop
pusha
ds
jmp
aaa
nop
aad
dec
into
in
cltd
inc
rolb
lcall
aas
adc
xor
in
xor
xlat
aaa
push
mov
scas
clc
mov
push
cmp
sub
ret
and
sbb
mov
leave
insb
mov
fdivr
dec
out
pop
dec
lret
out
push
in
adc
mov
or
push
cmp
stos
mov
std
mov
sbb
mov
ljmp
mov
loopne
scas
mov
test
jno
icebp
pop
out
cmp
scas
mov
jne
mov
sti
cmp
pop
jns
pop
movsb
stc
xchg
lahf
lret
call
cld
incl
sub
push
push
mov
sarb
push
dec
push
insb
scas
jmp
incb
push
ret
and
mov
in
jno
stos
mov
aaa
icebp
push
sbb
xchg
decl
enter
xchg
repnz
in
out
popa
adc
xchg
out
and
pop
mov
pop
fs
fdivr
jmp
push
dec
and
std
or
jecxz
mov
out
bound
inc
mov
cmp
mov
cmp
rorb
gs
jo
insl
mov
cltd
imul
sahf
cltd
inc
mov
pushl
int
mov
push
mov
xor
cmp
inc
sbb
leave
sbb
inc
call
pusha
jl
mov
loope
mov
insl
nop
outsl
es
fdivrp
or
sub
pop
addr16
and
mov
mov
subb
lods
jne
mov
adc
xchg
into
mov
add
lcall
push
and
mov
test
cmp
cmpsb
cmp
sahf
in
mov
out
push
leave
cmp
test
movsb
lock
xchg
lcall
xchg
jmp
and
or
cmpl
cmpb
subb
or
dec
jg
ljmp
adc
repz
into
fwait
sub
hlt
or
ja
sbb
cmp
xor
push
mov
mov
js
mov
stos
mov
add
cmpb
mov
and
xor
cld
jg
movsl
pop
enter
jo
or
hlt
mov
outsb
inc
pushl
in
stos
sbb
shrl
jo
mov
nop
lods
xor
xchg
jo
outsb
jmp
jl
ja
lret
flds
pop
ljmp
lods
scas
lea
in
ljmp
stos
push
outsb
inc
mov
jle
sbb
or
push
fidivrs
ja
pop
pop
adc
or
inc
mov
push
out
sti
push
shlb
jmp
incb
shl
push
popf
pop
jb
movsl
jecxz
xchg
ljmp
xchg
clc
call
test
aaa
shrl
je
adc
incl
repnz
or
push
cmp
sub
inc
lea
repz
je
test
jmp
cltd
lret
cmp
xchg
xchg
pop
cmp
rorb
subb
mov
xchg
fs
and
call
movsl
bnd
loopne
in
ret
add
mov
test
xchg
in
lcall
lret
dec
add
aam
add
and
ja
loope
or
lcall
jl
jl
xchg
mov
fstpl
cli
xor
test
jmp
bnd
shrl
jmp
pop
repnz
dec
add
mov
cmc
sub
mov
in
jno
icebp
rorb
mov
push
loop
int
sbb
into
xchg
icebp
lcall
adc
es
cwtl
push
scas
ret
add
test
shlb
jno
and
push
lock
push
xchg
fcomip
push
sub
int3
jbe
xchg
dec
pop
lea
out
adc
fcomps
dec
sub
negb
incb
lods
pushf
mov
inc
sti
jnp
daa
repz
out
inc
ret
in
adc
push
lods
mov
jl
pop
xchg
push
mov
sti
fistl
and
cld
test
push
jmp
push
ss
stc
fnstsw
roll
mov
shll
adc
jno
ljmp
popf
xchg
cwtl
or
aaa
scas
out
aas
mov
and
ljmp
xchg
mov
mov
xlat
adc
xor
and
dec
mov
fdivr
incl
in
leave
adc
test
leave
and
getsec
cmpb
jo
cmp
movsl
fadds
xchg
stos
decl
sub
ret
ljmp
pop
dec
ja
rol
outsb
cmp
jmp
addb
mov
jbe
xchg
mov
movsb
lret
jo
sbb
scas
inc
fiaddl
lcall
xchg
fisubl
test
adc
push
or
ljmp
fisttpll
enter
stos
aam
in
in
lcall
add
sbb
repnz
pop
adc
adc
jl
pushl
sub
pop
jns
sbb
sub
or
sahf
mov
cmp
jno
dec
in
int
lods
in
bound
jo
push
cld
jl
lret
fstp
dec
sti
pushf
cmpsl
inc
dec
mov
mov
add
lcall
rep
insl
add
call
bound
mov
call
jge
aam
cmp
dec
add
or
sbb
in
pop
aam
push
addr16
icebp
cmp
dec
clc
push
test
shrb
push
repz
sahf
dec
sub
popf
lahf
fmul
in
and
adc
pop
insb
subb
mov
sbb
pop
hlt
jmp
ja
jno
aaa
ret
and
mov
sub
popa
test
lret
decl
or
imul
stos
insl
popf
lea
lsl
flds
jg
ljmp
lret
daa
mov
adc
sbbl
mov
mov
lcall
or
dec
sbb
and
icebp
bound
and
js
int
mov
lcall
add
sbbb
ror
arpl
jp
push
sub
call
mov
add
divl
call
into
push
push
xchg
sbb
in
and
mov
dec
cltd
cld
leave
mov
lret
push
lcall
fldl
fsts
inc
fsubp
data16
pop
jle
addr16
sar
push
int
mov
js
lcall
das
xchg
push
push
inc
lcall
in
mov
cltd
lcall
mov
fld
mov
out
push
push
fidivrl
fwait
push
fdivrs
jno
mov
cltd
add
mov
push
dec
adc
decl
dec
xor
int
leave
mov
icebp
shr
add
fistpll
sub
pop
icebp
sbb
mov
lods
rcrb
xor
add
jg
outsb
xchg
mov
xchg
loopne
xchg
xchg
dec
jne
test
ds
mov
in
lcall
push
lcall
pop
cmpsb
in
outsl
pop
orb
pop
jnp
cmp
ljmp
mov
inc
out
jae
imul
xchg
jge
mov
aad
js
mov
jp
pop
push
xchg
mov
clc
negb
jge
sub
test
jg
fsubrs
decb
fldl
dec
push
std
hlt
fwait
and
xor
icebp
jmp
movw
jns
sti
filds
int3
loopne
and
cmpsb
pop
divl
mov
lcall
aam
cli
dec
das
dec
scas
lahf
ja
sti
add
mov
xor
aas
decl
and
xchg
mov
xchg
inc
stos
xchg
push
xchg
xor
jo
push
outsb
cmp
jmp
pusha
inc
clc
xor
ret
inc
mov
je
arpl
cmc
inc
inc
mov
lcall
mov
mov
cmp
int
aad
fnstsw
das
jbe
scas
jg
ja
adc
out
mov
mov
jb
sub
jmp
decl
add
in
and
das
pop
sub
jp
cld
xor
mov
jmp
inc
movsb
sbb
inc
js
imul
pop
mov
cwtl
xor
adc
cmp
cmp
call
cmp
mov
pusha
jae
cli
lds
decl
xchg
push
add
outsl
in
mov
jp
fldenv
sbb
xchg
jg
ljmp
xor
mov
loope
dec
jp
jbe
leave
mov
idivb
inc
lret
loopne
bound
mov
cmp
lock
mov
cmp
negl
pop
cmpsb
punpckhdq
arpl
ljmp
es
and
loopne
subl
decl
jmp
push
push
cmpsb
inc
sarl
add
sahf
mov
out
ljmp
mov
pop
and
push
stos
or
push
xchg
mov
lods
ljmp
or
jmp
pop
jp
lcall
adc
call
adcl
or
and
scas
sbb
ss
mov
incl
lcall
ffreep
mov
inc
clc
outsl
popf
fistl
add
pop
xor
aas
push
mov
sbb
aaa
cld
add
popf
sbb
les
mov
jbe
aas
test
shlb
sbb
mov
jge
cmp
imul
adc
adc
inc
and
xor
call
or
iret
nop
xchg
xchg
mov
mov
sub
cli
and
test
pushf
lock
dec
sbb
adc
nop
scas
jo
xor
data16
cli
ret
in
cwtl
sti
call
popf
add
shll
rclb
mov
or
int
std
aam
lcall
rolb
in
or
jno
push
add
add
xchg
out
test
and
cmp
jnp
inc
xchg
mov
mov
inc
repnz
ret
outsl
mov
loop
cs
inc
or
jmp
enter
xor
mov
insl
call
mov
int3
sub
push
xchg
dec
sbb
or
push
mov
mov
clc
mov
pop
movsb
sbb
cmp
nop
sbb
adc
incl
sub
lea
xor
cmp
jno
cmp
fwait
xor
insl
fucom
pop
into
clc
and
clc
aaa
rorb
sub
add
mov
mov
sbb
jle
decl
inc
add
ret
dec
rorb
mov
add
mov
testb
xchg
or
pop
sub
pop
outsb
adc
adc
mov
mov
push
mov
jecxz
push
dec
clc
pusha
xor
inc
mov
ret
lcall
xor
or
gs
negb
hlt
mov
cwtl
push
xchg
test
mov
ret
sub
xor
dec
mov
int
out
jl
rolb
inc
ljmp
scas
out
imul
sub
mov
shl
pusha
sbb
subl
inc
sub
decl
lret
cmpl
or
loopne
lcall
insl
les
mov
sub
lcall
adc
cli
loopne
and
ljmp
sbb
pushf
mov
jne
or
xor
test
fcomip
mov
add
dec
push
mov
mov
rcr
cmp
xor
or
es
ja
jbe
pop
sti
rorb
sub
push
andb
pushl
movsb
add
sub
stos
into
mov
and
push
enter
inc
sbb
cmp
mov
dec
adc
or
mov
out
jge
popf
clc
lods
push
decb
lret
ljmp
and
lock
sub
scas
mov
cmp
mov
fcomip
cltd
mov
sbb
xchg
pop
mov
ds
addr16
outsl
lcall
jmp
movsl
mov
mov
pop
cltd
xchg
jo
sti
dec
lcall
inc
ss
aad
ljmp
pop
xlat
lcall
xchg
xor
bound
int3
cmpsl
lcall
jg
out
jp
imul
push
or
mov
pop
dec
mov
sarl
push
aam
or
or
popf
roll
push
cmp
xchg
ljmp
push
inc
das
inc
mov
lods
pop
popl
sbb
aas
je
inc
lods
xchg
lcall
add
bound
pushf
outsl
cli
decl
mov
jb
enter
pop
lock
add
mov
iret
adc
push
xor
xor
cli
xchg
pop
dec
sti
add
ljmp
addl
shll
cli
int3
adc
mov
inc
mov
sbb
movsl
push
cmp
cmc
ds
aad
loopne
cmp
adc
cwtl
adc
fs
iret
mov
add
jg
pushl
inc
xchg
fisubrl
adc
repnz
cmpsb
jecxz
orl
pop
sbb
mov
cmp
jmp
lret
fcomps
pop
roll
push
xchg
stos
mov
ret
sub
jmp
bnd
or
mov
add
lods
add
repz
adc
jmp
push
test
ja
sar
mov
push
cmp
mov
cmp
pushl
sbb
sbb
outsb
xchg
std
cmpb
out
fldenv
sbb
add
mov
adc
mov
mov
or
sub
rorl
sbb
mov
ja
fdivr
fcomip
test
jecxz
xchg
sbb
sbb
fnstcw
cmpsl
cwtl
push
call
test
add
push
neg
mov
mov
adc
addl
fdivl
sub
add
out
out
fldln2
shl
addr16
jle
call
add
cmp
mov
aas
jmp
loopne
iret
hlt
xchg
mov
aas
inc
xor
or
mov
push
cmpsb
xor
jne
jae
push
sar
mov
xchg
cmpsl
mov
push
faddl
scas
lahf
jmp
xchg
cmp
scas
ss
push
push
push
pop
push
shrl
lock
sub
incl
pushf
mov
cli
andb
mov
inc
lret
pop
and
shlb
mov
mov
lret
insb
decl
sub
cmp
loop
push
lock
jbe
pusha
push
sbb
inc
je
or
pop
in
add
dec
inc
mov
cmp
andl
cmp
repz
mov
push
or
and
xor
and
cwtl
cmp
mov
xor
mov
hlt
mov
movsb
jb
adc
mov
push
sbb
inc
in
lcall
and
ds
in
aas
rcrl
and
std
mov
pop
ds
jg
mov
in
mov
rol
cmp
jns
push
dec
cmp
incl
cmc
adc
sahf
or
xchg
jo
orl
jmp
push
fdivrs
decl
or
into
pop
arpl
js
adc
imul
std
test
decl
das
stc
sub
fsubrs
and
mov
dec
daa
mov
outsb
cmpsb
repz
mov
jg
jmp
sbb
or
imul
inc
faddl
sahf
adc
adc
jne
sbbl
jg
mov
cmp
sbb
movsl
jge
arpl
test
push
adc
nop
inc
push
fwait
iret
nop
pushl
and
xlat
aad
mov
add
push
xchg
jp
insb
lds
xor
call
pushl
call
fcoms
pop
xchg
lods
bound
inc
sub
cs
into
cmp
dec
inc
push
xchg
aam
jmp
xchg
jp
and
in
dec
cmpsb
jp
and
shrb
adc
mov
pop
popf
addr16
insb
xchg
ljmp
adc
clc
mov
jg
xchg
pop
fildll
sbb
fidivrl
or
loopne
dec
ss
mov
xchg
popf
jmp
int
mov
fwait
dec
jne
or
ss
mov
mov
jb
cld
ds
scas
addr16
decl
iret
std
add
addr16
out
adc
and
icebp
and
jge
lock
jmp
out
in
mov
loope
cld
sub
jge
ds
pop
or
push
jl
mov
jg
push
cmp
ds
xchg
ffree
sub
xchg
icebp
movsl
out
xor
lcall
sbb
loopne
call
or
stos
push
lods
push
push
jmp
push
daa
fisttps
sub
mov
pop
pmuludq
and
into
stos
push
sti
sub
pop
jmp
outsl
xor
cmp
cs
lret
leave
push
or
pushf
and
jae
sub
imulb
pushl
loope
cmp
fildll
push
mov
dec
xchg
xchg
loopne
jmp
pop
pushl
jge
mov
pusha
lcall
inc
xor
insl
jnp
adc
call
xchg
daa
jbe
mov
rcrb
and
and
add
pushl
fildl
jbe
ds
cmpl
mov
mull
call
insl
fsqrt
scas
lret
in
adcb
xchg
fwait
or
xor
jbe
pop
xchg
add
adc
movsb
test
push
test
cmc
xor
mov
inc
ljmp
pop
sbb
and
ss
push
xor
out
je
pop
cs
inc
mov
pushf
decl
daa
sub
mov
dec
lahf
pop
dec
xchg
mov
pusha
mov
mov
push
sbb
jmp
pop
popa
jecxz
fdivl
movl
shlb
lcall
dec
ja
mov
ljmp
mov
adc
inc
subl
cs
jg
hlt
pushl
push
pushaw
out
jmp
xchg
test
push
inc
pop
ljmp
cld
adc
fldenv
mov
testb
or
pushf
int3
mov
call
test
loope
add
mov
mov
andl
sub
daa
sbbl
jmp
pminub
mov
jmp
das
ljmp
shr
pusha
ja
repz
icebp
incl
andl
push
sbbl
pop
insl
in
cmp
icebp
test
orl
jbe
cmp
inc
in
jne
in
cmp
js
jecxz
in
xchg
sub
fadds
pop
sbb
cmp
adc
add
enter
add
sub
lret
pusha
data16
jg
jne
pop
popa
insb
aas
repz
int
ljmp
subl
sbb
xor
leave
mov
jae
arpl
mulb
pop
mov
repz
xor
xchg
and
movsl
addr16
dec
mov
xchg
mov
mov
scas
outsl
push
mov
out
enter
jmp
jmp
rolb
mov
cs
and
test
shll
push
mov
mov
pushl
mov
lock
sub
mov
inc
lret
push
fcoms
fdivr
call
test
mov
arpl
xchg
jne
repnz
test
fisttpll
ljmp
in
dec
mov
jae
jo
xchg
and
push
cld
dec
fisubrl
xor
loope
incl
push
adc
in
das
idivl
or
jle
popf
add
sbb
cmc
push
imul
push
js
inc
cs
mov
adc
clc
cmpsb
push
loopne
mov
xchg
orb
mov
xlat
xor
adc
jae
xchg
xchg
pop
pushl
and
in
mov
sahf
add
and
xor
daa
loopne
call
xchg
and
push
insb
mov
cmp
outsb
push
jle
inc
and
ljmp
sbb
pop
lock
xorl
decl
jb
xor
jg
xchg
mov
fiaddl
inc
pop
push
test
subl
push
jmp
mov
in
movsl
lock
ret
sub
inc
ret
pushl
fwait
pop
in
jmp
pop
test
movq
xor
inc
and
mov
in
into
pop
es
and
or
std
stos
loope
sahf
call
hlt
push
js,pn
cld
aaa
cmp
je
into
iret
in
popa
add
stos
pop
or
call
cmpsl
ljmp
loope
ds
pop
ljmp
iret
jmp
mov
sti
lret
mov
mov
fistpl
mov
mov
cmp
add
decl
movsb
dec
hlt
push
pop
inc
or
jb
call
jg
icebp
imul
mov
push
iret
loop
gs
sub
scas
pushf
lods
ds
call
in
cltd
js
and
jge
cmc
ljmp
mov
and
push
bnd
incl
cmpsl
jecxz
dec
arpl
lsl
cmc
xchg
cmpsl
push
inc
or
scas
rcrb
add
pushl
outsb
and
or
push
push
lret
xlat
fdivl
negl
dec
xchg
jns
cmpl
add
inc
dec
decl
sbb
lahf
imull
fwait
in
lea
or
lcall
jp
mov
push
in
in
adc
pop
andb
movsl
cmpsl
push
inc
aaa
push
xor
xchg
mov
ffree
and
cmc
popa
xor
pop
push
fistpll
sub
std
mov
pop
daa
inc
mov
jbe
xchg
jl
mov
xchg
ljmp
mov
pop
das
cmpsl
xchg
pop
addr16
jne
xchg
xor
jg
sahf
popa
push
das
push
call
cmp
cmp
sub
faddl
out
hlt
jbe
sbb
xchg
mov
ljmp
or
push
cltd
mov
xor
mov
lods
mov
mov
push
mov
sbb
or
or
enter
sbb
rcrl
sarl
push
out
pop
incl
pop
call
jle
icebp
pushl
ret
data16
inc
gs
shll
lcall
xor
shll
push
sbb
cmovo
dec
jl
divl
add
ljmp
cli
cmpl
movsb
test
andl
adc
add
decl
das
mov
xchg
sub
mov
frstor
fdivrl
inc
repz
push
hlt
std
clc
cmp
jae
cmp
out
mov
gs
xor
sub
pop
mov
xlat
scas
mov
push
pushl
loop
insb
outsl
hlt
popf
lods
stos
inc
dec
mov
test
in
int
test
gs
and
cld
decl
push
insl
pop
in
sahf
in
cmp
mov
pandn
jg
sbb
push
mov
or
sbb
sub
xor
idiv
decl
cltd
es
sbb
push
mov
xorl
or
ljmp
popf
loope
jp
and
jl
loope
xor
ja
xchg
add
stc
fdivrs
push
mov
scas
addb
ljmp
lret
inc
daa
mov
mov
add
lds
dec
adc
mov
ds
cwtl
adc
sub
inc
push
inc
jg
decl
inc
fmull
xchg
test
push
mov
mov
add
into
pushf
pop
jo
jmp
jge
cmp
cmc
inc
sti
fisubs
das
imul
jg
int3
and
mov
adc
mov
movsb
xor
pop
je
decb
out
pop
jmp
mov
xchg
or
test
dec
fdivrl
fdivr
inc
or
sbb
or
pop
mov
cmp
pushl
lods
addr16
les
push
cld
inc
jbe
mov
repz
and
cld
decl
aam
popa
repnz
mov
push
pop
jbe
adc
push
xorb
mov
stos
dec
pop
mov
dec
popa
mov
in
mov
fwait
scas
mov
shlb
shll
jne
sbb
pop
mov
pop
mov
scas
cli
jnp
mov
sti
insl
push
cmp
les
mov
lcall
xchg
adc
mov
mov
pushf
shlb
jbe
mov
adc
xlat
pop
cmc
mov
shlb
mov
out
mov
ret
lcall
leave
mov
mov
jg
andl
inc
mov
jns
arpl
test
cmpsl
xchg
pop
mov
ss
lcall
push
inc
rcll
repz
mov
push
jae
mov
insl
sub
xchg
xchg
loope
aaa
cwtl
inc
call
ljmp
pop
mov
push
mov
jae
mov
mov
adc
pop
lock
push
aam
bnd
sub
cmp
shrl
mov
push
pop
or
out
push
shlb
cld
addr16
mov
jle
stos
push
mov
fldcw
jle,pn
stos
xchg
sbb
push
mov
and
in
mov
ret
pop
mov
das
cli
call
lret
mov
out
out
adc
scas
cli
cmpsb
inc
dec
repnz
cmp
leave
pop
ss
je
in
cs
decl
jnp
inc
imul
dec
insb
shlb
sbbb
cmp
call
dec
test
or
xchg
mov
incb
mov
mov
je
sbb
mov
out
or
loopne
add
data16
in
and
adc
pop
pop
push
fmuls
decl
in
movsl
ss
orb
cld
jmp
rcrl
repz
lock
xor
ljmp
stos
insb
dec
rcrl
fisttpl
sbb
in
xor
add
lods
sub
scas
mov
push
pop
push
push
pop
dec
jo
lcall
jmp
ja
stos
fnstenv
sarb
mov
dec
fwait
xchg
fdivs
mov
jb
decl
inc
mov
and
popf
clc
nop
adc
cmp
mov
jmp
dec
aaa
cs
xchg
out
cltd
repz
jl
cmp
xlat
jbe
hlt
ja
cwtl
pop
cmc
call
or
cmp
fsubs
fimull
sub
adc
movsl
jecxz
out
add
add
cmp
dec
je
aam
xchg
pop
xchg
jae
adc
call
std
mov
negl
loop
or
jl
push
dec
sub
call
fisttpl
aam
mov
inc
mov
sub
xor
and
test
pushl
mov
pop
add
out
jp
pop
scas
dec
pop
mov
pop
sub
in
push
divb
in
cmpsl
sub
pop
in
adc
cmpsl
in
and
fs
ret
in
repnz
and
sarb
or
in
xlat
in
fisubrl
sti
ss
pushl
imul
cmc
jns
sub
add
dec
add
fdivrs
lea
cmp
pop
mov
insl
lea
or
inc
addb
lret
dec
iret
add
call
sbb
fstpl
pop
xor
inc
inc
or
leave
mov
decl
push
hlt
bound
scas
dec
test
ds
jle
inc
add
cmc
add
mov
push
ret
mov
pop
or
mov
push
imul
xor
mulb
jb
lock
lcall
lcall
sbb
fwait
in
add
xor
pop
std
fmull
aad
push
aad
loope
std
sub
and
xchg
popf
push
mov
call
fs
xchg
inc
xchg
repnz
test
test
cmp
jnp
mov
jp
and
fistps
pop
inc
cmpsb
add
ds
daa
scas
xchg
jbe
daa
cmc
mov
xor
jle
jle
in
and
adc
enter
out
mov
ljmp
ljmp
jbe
push
inc
mov
dec
add
incl
add
aaa
mov
jecxz
loop
push
dec
out
incl
ret
mov
sti
enter
js
pop
inc
jge
cmp
mov
outsl
arpl
call
mov
ret
jg
cmpsl
ljmp
xchg
es
add
sub
xchg
pop
addr16
in
test
ljmp
add
xchg
pop
call
cmc
out
pop
jge
mov
decl
jecxz
out
push
in
adcl
test
aam
in
add
mov
ljmp
mov
lret
cmp
ja
jp
mov
jbe
adc
cld
int
lds
inc
add
push
jae
adc
ficoms
decl
adc
sahf
movsl
mov
xchg
je
popf
push
inc
outsb
add
fwait
icebp
dec
es
and
lret
cwtl
addb
mov
sbb
mov
in
push
fcompl
jnp
test
fs
shll
add
dec
dec
les
ss
ficoml
sahf
subb
std
lret
push
mov
fmul
sub
push
add
jnp
mov
jae
jmp
icebp
call
push
fucom
lods
push
rorl
clc
mov
adc
mov
ficoml
pcmpeqb
add
pushl
rcl
loopne
mov
jbe
cmpsl
sub
scas
inc
jb
dec
bound
mov
add
push
sbb
lret
ja
dec
cmp
fs
xchg
stos
fmul
call
lods
lock
xor
cltd
mov
repnz
sbb
pop
sbb
jne
push
sub
add
xchg
imull
dec
insb
push
inc
loope
imul
lock
sarl
inc
nop
fdivrs
pop
pop
cmp
sub
mov
and
mov
pop
xor
jp
adc
add
stos
xor
ljmp
xchg
jbe
xchg
call
mov
push
stos
das
adc
xchg
cmpsb
lods
out
repnz
lcall
jmp
outsb
jle
add
aam
out
outsl
push
xchg
mov
cmp
cmp
aas
and
pusha
adc
jo
adc
lods
lret
mov
lods
test
ljmp
fdivrs
push
and
cmp
repz
sub
jmp
sub
popa
xor
leave
gs
std
mov
out
stos
bnd
jg
dec
into
jge
in
dec
in
int
les
imul
pushl
std
aad
xor
or
outsb
pop
xchg
daa
or
test
and
sbb
mov
in
js
cli
lods
or
add
inc
bound
call
sbb
shr
mov
incl
xchg
xor
mov
lahf
pop
push
in
xor
enter
sbb
jecxz
jg
xor
insb
out
inc
cwtl
fmuls
jmp
fstps
mov
mov
push
mov
enter
bound
out
mov
mov
xchg
push
std
dec
xchg
cld
nop
cli
sbb
ljmp
and
loopne
dec
cmpsl
fwait
push
hlt
fnstsw
xchg
ljmp
out
fisttps
add
mov
jae
lock
je
rolb
fld
decl
test
lds
inc
pop
nop
inc
pushl
xor
test
or
mov
test
add
inc
scas
cmp
mov
jmp
pop
jo
hlt
jg
outsl
pop
add
lea
and
mov
pushl
fdiv
leave
cmpsb
push
fldlg2
js
push
andb
insl
jno
mov
fwait
jmp
or
sbb
shll
push
or
mov
dec
fstpl
mov
ret
sub
mov
pop
es
aas
gs
in
mov
ja
repnz
xor
jmp
sbb
xlat
or
xchg
cmpsb
xor
mov
mov
mov
repnz
adc
sarl
hlt
pop
pop
and
push
add
pop
out
lcall
test
sub
or
test
ja
sbb
popa
pop
adc
lret
lods
adc
imul
mov
xor
xchg
call
jge
mov
ljmp
in
test
push
loop
push
stos
adc
ret
and
or
arpl
test
stc
fdivrp
ljmp
clc
rorb
enter
xchg
rorl
jo
or
cs
jecxz
sar
ja
call
sbb
rolb
pop
dec
xchg
xchg
and
mov
andl
jle
adc
aam
cltd
sub
xor
mov
outsb
loop
lock
filds
fs
js
loopne
shlb
mov
out
mov
sbb
aam
sub
fnstsw
xor
mov
lds
sub
sub
sbb
or
cmp
fsubs
dec
aaa
pop
jae
loopne
ljmp
pop
cmp
sub
lock
add
movsb
sub
movsl
stos
bound
jmp
or
push
add
int
jmp
and
push
insb
sahf
js
in
incl
add
mov
inc
jmp
aas
jecxz
or
mov
cld
imul
sub
push
jns
gs
pop
jne
jmp
or
outsb
push
nop
xor
inc
loope
mov
fs
imul
and
add
jbe
lcall
xor
fsubrs
or
cld
mov
loopne
subl
insb
mov
mov
jmp
inc
cmp
mov
leave
jecxz
mov
sbb
shrb
pop
adc
xchg
pop
test
outsb
and
dec
cld
call
dec
dec
jl
or
shll
or
add
les
fisttps
add
mov
cmc
decl
icebp
mov
cli
sbb
cmp
in
sbb
push
xor
fldz
leave
cld
and
fwait
stos
mov
pop
lods
std
mov
lcall
push
adc
clc
mov
pop
out
add
js
fisubl
fsubr
test
stos
adc
and
call
xchg
pusha
mov
icebp
pusha
cmp
lods
adc
jns
jns
out
xchg
cwtl
aas
roll
clc
hlt
jecxz
mov
sarl
js
or
lock
fsubrl
loopne
push
mov
dec
mov
dec
or
lcall
ret
adc
adcl
dec
fs
rcrb
adc
cs
fildl
adc
sub
aaa
movsl
jb
xchg
dec
mov
pop
mov
mov
dec
andb
clc
sub
pop
sbbl
adc
daa
outsl
cmp
lcall
outsb
dec
push
sub
dec
shll
or
push
sbb
nop
movsb
sub
push
rcll
cmp
out
sbb
cmpb
adc
repnz
mov
mov
inc
call
pop
dec
adcl
rorb
jns
and
fs
insb
mov
jmp
pushl
mov
mov
dec
xlat
stc
shll
cld
aaa
push
sbb
repz
addr16
and
gs
mov
jmp
mov
cmc
adc
iret
outsb
xor
xchg
lods
icebp
dec
push
xor
cmc
pop
add
xor
adc
push
ss
xchg
fwait
jmp
outsl
adc
mov
push
pop
mov
xlat
dec
xchg
dec
ds
insl
fcmovne
sub
jmp
cs
jo
fimull
jmp
sbb
mov
iret
xor
ljmp
sarb
inc
outsb
adc
jg
ret
fdivr
mov
sub
push
emms
jbe
int
jmp
test
mov
push
bound
mov
data16
cmpsl
jno
std
dec
cmpsl
mov
ficomps
scas
sahf
push
adc
sarb
rcrl
in
mov
adc
outsl
cli
push
mov
or
gs
dec
mov
xchg
xchg
add
imul
iret
adc
das
mov
dec
sahf
ds
jb
xor
call
jno
das
in
out
decl
inc
icebp
cmp
cld
ljmp
js
jmp
jmp
xchg
ret
js
cmp
and
pop
mov
addr16
call
ljmp
popf
pop
fcomps
sub
push
mov
adc
push
mov
lahf
daa
jmp
xor
jg
cwtl
test
das
shrl
push
repz
cmpsl
or
xchg
mov
push
xor
pop
in
movsb
pop
ret
cld
pushl
mov
jecxz
test
fcompl
incl
sahf
mov
stc
pushf
adc
pop
pop
jp
ja
ret
sbb
das
mov
sarb
insl
lret
mov
das
jno
pop
cmp
fildll
pop
lea
call
in
mov
push
clc
mov
adc
call
out
and
scas
lret
jnp
loope
jmp
inc
loop
das
clc
mov
aad
and
jbe
cmpsb
mov
dec
lods
mov
pushl
es
cmpb
pop
aam
repz
inc
lahf
test
and
or
or
xchg
xchg
dec
inc
cmpsb
inc
int3
mov
flds
dec
fcmovne
negb
int
out
rcll
fs
incl
cltd
cmc
in
sub
pop
mov
stc
xor
mov
popf
int
loop
fcmovnbe
lock
call
js
lea
sbb
mov
mov
push
int
push
call
decl
int3
cmpsb
gs
mov
jmp
xchg
out
adc
sub
ljmp
out
out
aad
dec
cmp
mov
dec
dec
sub
jl
xchg
cmp
xchg
cld
decl
cmpb
outsl
fstl
xor
cmp
addr16
adc
cmp
adc
incl
out
push
jg
clc
inc
cli
xor
orl
repnz
popf
les
ljmp
clc
fwait
and
dec
xchg
dec
aam
jmp
ja
mov
je
icebp
incl
loope
jg
ds
push
mov
xchg
in
data16
inc
push
bound
mov
cmpsb
sub
and
incl
mov
push
imul
jae
sub
ja
js
mov
xchg
addb
add
jge
or
mov
and
clc
add
sbb
pop
hlt
add
daa
cmpl
inc
cli
ljmp
mov
or
or
push
pop
sub
jg
ljmp
lahf
insb
push
call
dec
adc
sub
add
int3
repnz
sub
sbb
call
xchg
and
inc
ret
sbb
enter
lret
push
sbb
call
jp
bound
cld
ds
sahf
mov
dec
jp
add
outsb
or
push
aad
cmp
pop
rolb
rolb
adc
xor
push
push
pop
ljmp
dec
add
fisttpll
push
pop
xchg
xchg
ret
cli
mov
scas
enter
xchg
mov
xchg
out
sub
filds
xor
popa
dec
mov
push
adc
lcall
jb
lret
dec
push
lret
sub
testl
adc
adc
xor
lock
scas
pusha
scas
cmp
sub
lock
out
push
mov
mov
mov
jbe
lret
fdivs
hlt
and
and
adcb
pop
in
add
pop
push
push
outsl
and
inc
icebp
and
rorl
pushl
outsl
je
cwtl
pushf
cmpsb
add
push
sbb
inc
nop
sbb
or
fcoms
pushf
mov
xchg
cmpb
mov
sbb
ret
in
stos
out
jp
push
mov
and
cmp
push
xchg
pop
xor
pop
in
pop
aam
out
stc
loope
inc
dec
aas
rolb
jns
add
pop
push
add
insl
dec
push
dec
arpl
inc
sub
mov
ljmp
clc
mov
test
dec
or
adc
call
inc
ljmp
cmp
mov
mov
sbb
lods
push
and
cmp
add
dec
jb
mov
call
gs
fsubrs
ret
inc
in
mov
or
pop
mov
jg
in
sarb
push
jecxz
jns
push
pusha
int3
out
orb
inc
stos
repz
jg
lock
mov
and
cmp
xlat
dec
aas
jb
mov
sbb
aaa
mov
fnstcw
lcall
jg
sbb
shlb
dec
adc
cli
inc
push
scas
sub
xor
sbb
decl
pop
sub
push
ficompl
mov
pop
inc
cmc
mov
sbb
imul
pop
ret
les
push
mov
mov
mov
negb
cmp
scas
jl
shll
or
sub
adc
sub
xor
fiaddl
lret
in
ljmp
fdivs
andl
xorb
sub
or
sbb
adcl
jmp
scas
or
clc
outsl
mov
arpl
ljmp
jmp
or
mov
cltd
shlb
mov
fdivrl
fnstcw
mov
divb
out
movsb
xor
mov
sbb
or
push
rcrb
shll
cmp
jns
sbb
or
sub
push
xchg
loopne
or
xchg
and
decl
out
enter
fnsave
push
and
dec
lahf
lods
pop
out
into
insl
js
lds
or
xor
jp
movsb
inc
cmp
mov
test
cwtl
pop
repz
jns
ljmp
in
xchg
outsb
add
cmc
loope
sbb
mov
mov
pop
call
call
clc
mulb
pop
loop
popa
sbb
js
mov
sbb
incl
cld
sbb
pushf
lods
push
jb
iret
test
pop
push
inc
pop
push
hlt
mov
in
mov
add
popa
mov
ret
push
ret
cmp
jg
adc
ret
add
lea
and
add
arpl
or
fdivr
lcall
sub
sub
pop
xlat
xchg
ror
sub
adc
mov
loopne
ud0
pushl
cmp
movsb
sub
and
out
xor
mov
xchg
insl
or
cltd
imul
or
sarb
xchg
sub
jg
push
adc
jg
adc
dec
and
mov
xchg
sar
adc
stos
lcall
mov
cmp
mov
dec
push
cld
xor
jmp
enter
jp
cmp
sub
or
or
and
fstpl
mov
fwait
xor
xchg
adc
ss
pop
xchg
lret
sbb
mov
ljmp
push
sub
int
jnp
ja
mov
out
push
cmpsl
mov
sub
push
clc
out
shll
fildll
stos
jg
xor
inc
pop
mov
mov
push
negb
push
pop
adc
imul
cmp
xor
pop
dec
daa
lea
cmp
and
cmp
loope
lret
xor
push
std
cli
mov
adc
pop
test
ds
fwait
xor
sub
jmp
jge
push
mov
push
ret
fsubrs
mov
mov
push
fiadds
repnz
js
inc
jg
repz
in
aad
sbb
pop
xchg
jmp
jne
mov
notb
jbe
sahf
sahf
pop
sahf
and
inc
inc
lock
inc
int3
mov
mov
mov
and
or
lods
or
std
push
cmp
call
dec
jmp
push
add
mov
arpl
cmp
mov
fiadds
fistps
pusha
ds
insb
jbe
or
adc
out
sbb
jnp
push
sbb
aas
sub
pop
lcall
or
pop
xchg
cmp
call
mov
xor
adc
sub
mov
pop
rcrb
scas
sbb
push
call
sti
xchg
cwtl
jl
xor
cs
inc
clc
jo
daa
push
inc
popf
sbbb
cltd
mov
add
jg
pushl
add
mov
sub
in
and
push
movups
pop
popf
dec
cmpb
adc
jle
mov
add
mov
fistpl
xlat
add
cwtl
fs
into
or
add
ljmp
incl
addr16
mov
insb
xor
mov
mov
sub
clc
subb
mov
stos
dec
mov
ljmp
sti
out
inc
mov
pop
fwait
sbb
cmp
roll
incb
mov
mov
incl
adc
rolb
imul
rorb
lds
jno
jg
mov
dec
push
pop
xchg
mov
push
inc
into
dec
mov
push
stc
add
stos
nop
dec
lods
push
popl
fsub
fnstenv
ds
add
mov
fimull
sbb
jmp
pop
mov
dec
mov
sbb
and
scas
xchg
or
jmp
pop
push
sbbb
mov
xor
adc
dec
add
test
add
jnp
mov
test
cmc
mov
pusha
inc
ljmp
fwait
mov
cmp
scas
stos
je
sub
cld
in
cld
dec
sub
incl
imul
fmuls
sub
adc
lds
mov
bound
sub
xor
decl
inc
sub
lea
test
inc
aad
popf
cmp
movsb
push
orl
add
jl
push
cmp
xor
int3
push
cmpsl
push
pushw
into
cltd
mov
add
pop
cli
negb
cmp
les
incl
lock
out
push
dec
imul
enter
loopne
or
ror
subb
and
hlt
dec
sub
dec
push
or
mov
ret
lcall
fdivr
fistps
in
and
sbb
mov
imul
enter
pop
sbb
jmp
mov
nop
pusha
pushf
lret
movsb
dec
xchg
sbb
call
mov
andb
inc
jno
mov
inc
ljmp
lahf
cwtl
mov
push
insl
sbb
sbb
scas
mov
pusha
pushl
jae
sahf
loopne
iret
pop
push
mov
sar
push
mov
sub
xchg
movq
dec
fsubrl
stc
jno
sbb
in
mov
push
and
shrb
inc
int3
arpl
decl
jge
push
pop
fwait
push
in
push
sub
push
add
scas
adc
mov
and
aas
add
mov
leave
aaa
aaa
pop
dec
mov
add
jmp
xchg
and
xchg
dec
loope
mov
mov
lret
sbb
pop
mov
out
sbb
jae
call
mov
cmp
mov
mov
lea
or
call
idiv
inc
xchg
negb
outsl
cld
add
xor
adc
icebp
jae
gs
cs
ljmp
fisttps
pusha
and
rolb
mov
std
xchg
icebp
cmp
dec
adc
incl
sbbb
stos
adc
push
lret
mov
and
sub
pop
or
lret
mov
push
int3
les
nop
sub
pop
cmc
mov
push
stos
mov
jno
dec
mov
dec
shl
mov
mov
divl
cld
adc
xor
pop
jmp
mov
arpl
lock
dec
cmovnp
rcrb
andb
incl
dec
fadds
addr16
pop
mov
inc
aad
sub
mov
pop
and
inc
jno
jmp
sbb
cltd
xor
sbb
ss
xorl
ret
in
xor
mov
jmp
notl
jp
out
mov
imull
fcmovbe
movsb
lret
push
insl
xchg
test
xchg
xchg
push
ficoms
incl
jbe
sti
dec
dec
lds
mov
push
add
std
outsl
aam
push
outsb
jp
jnp
and
aad
mov
das
inc
xchg
jo
imul
mov
push
ds
mov
call
push
or
xor
mov
xchg
nop
sbb
pusha
mov
orl
jle
mov
push
in
mov
xchg
xlat
jge
divb
outsb
clc
xor
mov
cmp
dec
mov
push
mov
dec
inc
xor
hlt
jg
lcall
sbb
mov
jo
cmp
in
cltd
xor
aaa
ret
push
jle
and
int
incl
cld
jmp
mov
cmp
addr16
mov
push
jge
cmc
xor
out
pop
mov
scas
into
push
jmp
ljmp
push
mov
dec
add
push
dec
jp
or
mov
mov
inc
and
mov
incl
jns
xchg
imul
push
dec
sbb
outsl
cmp
xchg
hlt
cmp
adc
mov
add
ss
fwait
int
mov
jecxz
ljmp
mov
xor
sub
insb
mov
loopne
pop
inc
lods
loope
mov
mov
adc
lods
shrb
rcrl
dec
jo
mov
add
pop
sti
ret
dec
inc
movsl
or
imul
out
xchg
and
mov
and
and
imulb
sub
cs
jns
jp
xor
jmp
push
icebp
inc
mov
cmp
in
mov
daa
rcl
adc
fimull
push
fistpl
outsl
orb
mov
js
scas
jne
mov
enter
outsl
cli
decl
imull
mov
dec
pushf
test
or
bound
mov
cmp
pop
mov
call
adc
sub
out
dec
or
mov
push
inc
es
loope
call
insl
and
xchg
ret
xchg
mov
push
or
adcb
shlb
mov
lcall
mov
push
pop
lock
xchg
push
jno
leave
lods
daa
dec
mov
inc
push
inc
xor
fldcw
mov
xor
jp
sbb
fwait
out
les
movsb
mov
sbbb
inc
push
ljmp
sub
cmc
mov
add
sarl
clc
mov
and
jg
mov
aam
cmp
mov
leave
sahf
mov
out
das
xchg
cmc
stc
out
jno
mov
xchg
inc
das
movsl
das
and
sbb
out
jb
sbb
xchg
cld
fcompl
jne
inc
loopne
loope
jns
fs
std
add
incl
fidivrl
push
sbb
fs
insb
or
testl
and
or
pop
aas
clc
ljmp
sub
xchg
sbb
testb
cmp
test
das
adc
jmp
pushl
push
test
mov
push
xchg
mov
mov
jg
incl
ljmp
outsb
sub
jp
or
xor
stos
inc
jo
ljmp
and
mov
fwait
jb
out
test
imul
ja
and
pushl
int
sbbl
mov
dec
mov
test
pop
push
das
lods
jne
sti
xchg
mov
sbb
loopne
jmp
push
lret
or
inc
pop
mov
pop
movsl
sti
outsb
sbbw
call
incb
push
outsb
dec
dec
ds
cmp
pushf
mov
xor
cmp
dec
xchg
lahf
jl
stos
popa
or
or
lcall
jb
loop
lcall
dec
sub
jno
rcll
out
push
cmp
call
out
or
jmp
push
aas
jo
iret
cs
jmp
lock
notb
scas
lret
and
loopne
and
outsb
decl
punpcklwd
pusha
xchg
add
mov
and
cmp
mov
xlat
call
mov
cmp
sbb
sub
lret
xchg
mov
add
jle
lea
and
je
mov
dec
mov
jbe
mov
add
dec
push
push
cwtl
stc
adc
mov
ja
rclb
fldt
jne
pop
and
jmp
and
dec
cs
lds
cs
adc
xchg
sbb
gs
fidivrl
ljmp
insb
jg
push
inc
xchg
mov
scas
test
fmulp
fwait
sti
push
hlt
jo
and
lea
aas
ljmp
clc
mov
int
ror
or
xchg
or
insb
inc
daa
or
mov
dec
mov
jnp
lret
lcall
and
xchg
push
jbe
ja
mov
lahf
pop
or
popl
jle
dec
lcall
jg
mov
or
sbb
xchg
lahf
addr16
mov
lcall
mov
dec
xorb
mov
adc
hlt
pop
out
popf
xchg
jmp
idiv
jmp
shll
lds
jecxz
xchg
scas
mov
adc
stos
pop
ffreep
mov
mov
dec
mov
std
jmp
pop
pop
flds
pusha
stos
cmpsl
jmp
sub
cld
lret
or
call
rorb
shll
xorl
negl
or
jae
sub
cld
int3
mov
test
decb
gs
mov
aad
cmc
sub
lea
test
iret
gs
cltd
rorb
mov
call
xor
divl
mov
cltd
lcall
out
cmpsl
mov
shrb
mov
cltd
shl
inc
mov
icebp
decl
pop
push
leave
cmovns
rdmsr
in
add
mov
out
push
les
repnz
and
test
lds
xchg
imul
xchg
jae
cmp
jmp
repnz
and
mov
lods
xchg
dec
and
stos
jle
dec
fisttpll
shl
enter
adc
ror
jmp
rol
fstl
jecxz
pop
push
mov
cwtl
lcall
sub
sar
lods
out
mov
repnz
call
cmpl
sub
std
filds
push
inc
jb
or
adc
pop
ljmp
push
enter
imul
inc
call
add
stos
push
sub
lahf
mov
mov
mov
dec
popa
aas
and
xchg
test
ljmp
je
repnz
push
xchg
sti
xor
mov
push
test
xor
sub
imul
inc
loop
or
lock
dec
sub
scas
mov
pop
popa
mov
lret
fs
mulb
jb
loope
cmpsl
not
cmpsb
sbb
inc
inc
imul
lret
sub
adc
push
xor
cmp
cmc
pop
sbb
dec
push
fs
pop
aas
sub
dec
aam
mov
int
gs
fstps
aam
lods
loope
inc
rol
incl
inc
out
mov
pop
lret
push
and
stos
cli
testb
iret
decl
lahf
lret
hlt
sbb
das
ss
jl
and
lods
and
xchg
push
ljmp
incl
push
leave
lret
sub
pop
xchg
movb
pop
mov
ds
loope
push
xchg
inc
movsl
push
inc
ljmp
in
addr16
sbb
test
pushf
sbb
xor
mov
lcall
je
cmp
clc
ds
push
lds
sahf
dec
fdiv
movsb
ret
popa
sti
dec
mov
jmp
xor
sbb
ficompl
imul
wrmsr
out
inc
mov
jno
jg
jo
cltd
stc
loop
mov
pop
fwait
dec
test
push
mov
cli
pop
push
lods
das
testb
xchg
paddw
jg
dec
insl
push
xor
insb
aas
jecxz
test
bound
ror
popa
mov
lcall
push
jno
fwait
xchg
or
cltd
mov
mov
mov
inc
test
add
inc
sar
lock
pop
jecxz
mov
in
add
and
mov
into
inc
pop
aaa
or
and
outsl
mov
cltd
mov
pop
jns
or
push
das
incl
push
data16
int
lock
in
pushf
enter
cmpb
adc
xchg
mov
ljmp
sub
call
scas
insb
gs
mov
js
mov
adc
das
sbb
jmp
outsl
xchg
outsl
jns
sub
sbb
pushl
dec
cmp
mov
sub
lds
mov
pusha
dec
and
sbb
jns
std
aam
mov
ret
lods
push
push
mov
pushl
push
inc
loopne
jge
sbb
pop
ja
jmp
sahf
imulb
jp
repnz
loop
dec
mov
ja
xchg
push
adc
cmp
mov
inc
inc
rcll
cmc
mov
je
jecxz
aad
out
jmp
mov
je
fists
and
mov
fistpl
jae
jnp
or
stos
sahf
push
cmpsb
or
ss
mov
cmp
incl
iret
mov
mov
inc
mov
ss
mov
adc
test
jmp
enter
mov
sbb
repz
leave
imul
push
bound
push
inc
push
cld
cmp
je
adc
adc
fs
xor
lods
punpcklbw
idivl
ja
iret
imul
mov
push
mov
add
popa
sbb
ret
cld
out
inc
dec
mov
cs
inc
out
pop
jp
push
scas
out
pushf
sbb
mov
push
nop
add
pushl
enter
jl
pop
das
addr16
add
mov
decl
nop
paddb
ja
mov
repz
rorb
ljmp
hlt
fdivrp
daa
mov
add
pop
push
pop
pop
inc
add
cmp
int
mov
in
sbb
or
call
push
lock
ss
loopne
mov
or
add
push
aaa
mov
gs
movsb
mov
mov
mov
push
idivl
mov
sub
pushl
jl
scas
pop
inc
inc
ss
imul
movsb
pop
test
adc
nop
push
adc
arpl
arpl
es
mov
mov
jg
or
inc
cmp
xlat
mov
outsb
xor
in
cmpsl
popa
dec
rcl
lret
test
dec
hlt
xor
sbb
xor
pop
push
icebp
mov
pushl
xor
stos
jle
jl
int
fdivrl
repz
or
adc
inc
pop
sbb
jnp
cmp
mov
dec
out
std
lods
mov
testl
test
andl
inc
loopne
sbb
adc
sub
xchg
pusha
sarl
pop
mov
mov
push
lahf
jg
cmp
js
jle
aaa
sbb
ret
out
outsb
sahf
sbb
movsb
lahf
outsl
addr16
cmp
dec
int3
stc
mov
out
lret
mov
inc
or
lcall
mulb
adc
xor
sbb
jno
fdivr
lds
cmp
mov
lcall
or
jo
in
and
sbb
mov
fwait
ljmp
xchg
mov
and
movsb
hlt
pusha
aad
out
pop
xor
adc
sbb
out
out
sub
pop
jbe
ljmp
sbb
mov
xchg
movsb
xor
sub
loopne
in
fwait
cmpb
jae
int
fmuls
inc
negb
pop
leave
call
push
push
cmc
xchg
jb
adc
xchg
std
mov
fnstcw
stos
out
mov
stos
mov
lret
mov
jns
add
call
subl
xor
jbe
push
pop
mov
loopne
add
mov
jp
ljmp
cmc
imul
jo
cmp
jge
scas
sbb
out
mov
and
fwait
or
fnsave
push
sti
push
jno
lret
pop
cmp
incl
arpl
movsb
lods
int
xchg
aaa
cs
shlb
cwtl
enter
cmp
or
popf
xchg
jmp
out
sub
cmpsb
lcall
sbb
ret
stos
dec
fwait
stc
je
in
sar
ljmp
cli
push
loop
adc
movsl
jno
mov
pop
mov
fs
loope
sbb
mov
adc
sub
outsb
mov
repnz
or
fsts
mov
lock
mov
aas
adc
fld
or
push
xchg
fistl
orl
push
pop
push
lcall
push
mov
xor
or
daa
ja
les
cmc
pop
divl
call
xor
xchg
in
dec
hlt
iret
mov
push
gs
daa
jmp
push
push
incl
sahf
inc
xchg
cwtl
test
or
push
shlb
fsubrs
mov
incl
outsl
movsl
mov
and
lods
scas
inc
push
ljmp
pop
pusha
nop
and
incl
aam
or
jnp
inc
mov
add
push
aam
cmpsl
jmp
jb
jno
call
adc
popl
loope
jo
xchg
shl
andb
das
cmpsb
mov
mov
push
int3
cmp
or
dec
inc
xchg
xchg
pushf
cltd
aad
shlb
enter
decl
stos
aaa
sub
bnd
std
jns
movsb
mov
push
lcall
sti
cmp
sbb
mov
test
xchg
mov
lahf
ds
arpl
fsub
std
adc
es
xor
cltd
popf
in
decl
loopne
ja
xor
or
mov
lea
stos
sbb
fisttps
rolb
mul
jno
inc
xor
aam
pop
jne
mov
jg
or
notl
fucom
inc
test
mov
pushl
push
add
xchg
and
xchg
popf
jp
xlat
mov
pop
mov
dec
ljmp
in
cmpsb
movsb
mov
jmp
sub
jmp
popa
pop
stc
gs
rorl
inc
inc
jb
ret
xchg
pop
incl
and
scas
push
sbb
dec
jle
push
mov
dec
cmp
das
jae
cli
inc
push
inc
jl
shll
mov
paddq
bound
inc
jnp
rolb
xchg
mov
dec
push
and
jle,pn
rcr
cmp
push
movlps
pushf
lea
mov
lea
and
jmp
jmp
out
sahf
nop
cmp
lahf
repnz
add
lcall
rcrb
and
mov
sti
shl
fwait
mov
fisubrl
loope
dec
and
push
nop
or
jge
addr16
cmpsl
lea
push
std
jmp
mov
add
ss
lock
inc
push
adc
pop
push
cmp
cmp
mov
fs
cmp
aaa
ret
inc
push
out
fnstsw
add
test
test
ljmp
ret
test
repz
std
dec
movsb
xchg
pop
into
lds
lea
in
jp
sbb
xor
push
fiadds
mov
xchg
out
ljmp
lock
and
fcmovne
jle
push
adc
call
inc
sub
js
xchg
xchg
decl
dec
dec
jnp
inc
mov
subb
lods
or
cltd
inc
sbb
cmp
incl
sbb
push
and
call
gs
mov
jmp
pop
and
aad
mov
jnp
lcall
fstl
in
pop
sbb
decb
out
test
repz
scas
mov
jle
push
and
jg
mov
sti
push
sub
lods
imul
sub
add
lret
imul
andb
mov
sbbb
cmpsl
pusha
xor
push
pop
lea
pop
test
pushl
push
xchg
popf
insl
mov
scas
lcall
cmp
decl
push
and
dec
xor
cmp
sbbb
mov
out
jl
inc
or
call
sub
aad
sbb
sbb
dec
adcb
shlb
ret
sqrtps
jg
decl
loope
sarb
scas
pushf
add
call
push
inc
ljmp
mov
cmpsl
and
ljmp
push
sub
mov
jne
decl
nop
add
xor
jl
mov
iret
xlat
xchg
fchs
imull
xchg
aaa
popf
or
xchg
cmc
sbb
cltd
mov
out
cli
decl
cmc
pop
jns
mov
inc
insb
outsb
push
add
adc
dec
call
lcall
icebp
add
xchg
push
inc
fisubrl
sub
sahf
mov
insb
sub
aaa
into
mov
stc
inc
or
leave
outsl
xchg
and
stos
andl
mov
cmpsl
jmp
pop
subl
sub
ficompl
sub
test
rorl
xlat
sarb
call
pop
rcr
add
imul
clc
and
aaa
dec
and
mov
test
push
push
mov
ljmp
out
or
rcll
into
lret
jno
push
ret
or
xor
ljmp
imul
add
adc
sub
sub
out
ss
adc
push
ud0
lcall
pop
movb
dec
mov
aaa
xchg
mov
fistps
or
cmp
jmp
pop
cli
cli
stos
mov
es
push
sbb
push
sub
mov
call
mov
sbb
jnp
das
ret
in
popa
in
dec
clc
in
mov
pop
fsubrs
sub
inc
adc
les
leave
inc
jmp
loop
insl
fnstenv
out
loope
cmp
pop
and
adc
add
jmp
adc
mov
int
and
push
jo
push
and
bound
jmp
scas
dec
jno
and
jae
sbb
mov
cmp
aad
push
sbb
hlt
sbb
xchg
add
cmp
xor
repz
incl
mov
adc
fildl
dec
out
jns
adc
adc
test
ljmp
loop
mov
sbb
jle
std
sub
shlb
mov
into
imul
arpl
decl
dec
push
dec
xchg
mov
add
movl
mov
test
inc
push
push
sub
lods
pop
jae
or
mov
pop
scas
sub
std
cmc
jnp
fcmovnbe
test
or
xor
or
iret
adc
movsl
arpl
cmp
jmp
dec
sbbl
loopne
lea
ljmp
dec
jg
mov
adc
test
adc
or
push
cmp
call
xor
or
hlt
and
mov
push
xor
mov
jo
and
dec
test
ljmp
popf
xor
push
inc
in
xchg
xchg
jb
lea
sub
adc
sub
sbb
push
aad
ret
jge
lods
mov
mov
adc
push
mov
and
mov
mov
mov
mov
dec
fdivrs
fnsave
int3
clc
ficoml
xor
sar
ja
call
adc
loope
or
loopne
xchg
xor
xlat
sbb
jmp
packsswb
mov
xor
addr16
in
stos
jo
call
sti
add
cmp
jmp
ret
pushf
fcomi
ret
push
push
mov
push
insb
cmp
sub
in
stc
inc
sbb
mov
adc
inc
insl
dec
adc
and
ret
mov
inc
ss
mov
pop
out
les
out
cmp
lcall
loop
gs
int
rclb
out
pop
mov
inc
pusha
and
mov
data16
jmp
je
sbb
outsl
dec
lret
insl
mov
push
cmp
pop
xor
xor
adc
addr16
cmpsl
cmp
sbb
out
cs
shll
pop
bnd
or
inc
das
mov
rorb
mov
decl
call
insb
inc
jnp
mov
pop
subl
inc
lea
ljmp
out
lods
sbb
dec
in
inc
inc
hlt
jns
add
mull
in
fprem
andb
jle
dec
cmp
adc
cld
jne
imulb
add
adc
add
in
sar
decl
inc
shl
ret
test
fstps
fsubr
mov
out
aas
pop
test
xor
adc
mov
jmp
cmpb
jmp
push
fstpl
in
stos
mov
dec
mov
int
pop
gs
iret
test
mov
jns
daa
mov
clc
aad
inc
test
outsl
add
pop
idivb
or
push
nop
pop
jae
adc
adc
dec
or
xor
lcall
ds
jl
leave
adc
out
xor
xor
mov
mov
mov
sbb
jmp
jmp
loopne
jp
mov
push
sub
pop
or
loop
push
sub
decl
mov
mov
xchg
push
push
int3
lea
jecxz
mov
adc
push
pop
decl
sti
shll
dec
daa
loopne
in
fcmove
fcomp
lds
mov
or
fisubrl
xchg
out
sbb
gs
gs
dec
lds
lock
mov
mov
sbb
jbe
mov
stc
mov
adc
mov
and
cmp
jmp
nop
int
ss
cli
decl
jno
rol
outsb
subb
mov
fcompl
sbb
sub
or
pushl
imul
and
sub
fstpt
mov
sarb
or
cmpsb
in
mov
add
mov
dec
pop
shlb
mov
pop
jg
jmp
jmp
insl
sahf
mov
andl
and
mov
pop
in
test
fdecstp
cmp
pop
cs
mov
cli
lcall
pop
or
scas
test
ror
clc
push
and
or
push
fs
lds
cli
cmp
jmp
sar
das
cli
fistpll
mov
sbb
orl
mov
and
sub
ljmp
test
inc
sub
sub
and
aad
jae
push
rorb
push
test
orl
popa
inc
cltd
fisttpl
cltd
or
cmc
lahf
js
pushl
push
pushf
push
lahf
les
je
cwtl
xchg
push
pop
push
adc
inc
cmp
and
dec
fildll
sar
ljmp
in
imul
fisttpl
mov
aad
mov
fs
ljmp
add
ret
cmp
cmp
ret
cmc
out
xchg
jne
inc
sar
call
mov
stc
add
cmpsl
mov
test
pop
sub
inc
call
ljmp
clc
shlb
das
sti
push
or
data16
lret
mov
ljmp
jns
sbb
lods
sti
sbb
ficompl
sbb
dec
insb
or
sub
jmp
jbe
adc
daa
imul
repz
das
imul
imul
popf
das
push
push
push
cli
dec
and
cmpl
cmp
or
jnp
and
scas
xchg
fsubp
movsl
push
fildll
mov
test
xchg
pop
add
int
xor
repz
inc
lds
sub
ja
or
cld
push
lea
jnp
repz
and
inc
subl
cli
int3
shlb
dec
lret
icebp
mov
push
dec
cmp
call
and
nop
pop
cmc
enter
repnz
int3
adc
int
lret
mov
fisubrs
jnp
jnp
sar
lcall
ret
ss
dec
clc
mov
pop
arpl
jp
jbe
outsb
mov
insl
adc
int3
xchg
decl
call
out
mov
aaa
jle
and
and
arpl
pushl
dec
inc
or
pop
add
aad
sub
ucomiss
nop
cmp
out
lcall
push
lods
or
mov
xchg
dec
divl
add
mov
push
test
incl
test
rorl
jno
cltd
jle
push
stc
into
sarl
cli
or
push
inc
push
sbb
sbb
add
das
cli
incl
pop
dec
jbe
add
fistpl
sar
mov
jmp
xchg
push
into
cli
pop
pop
add
iret
push
cmp
test
mov
in
sbb
adc
mov
fistps
sar
inc
sbb
push
int
in
jnp
push
or
inc
bound
pop
repz
testb
push
outsl
sub
fnstsw
pusha
inc
jne
test
shl
clc
imul
sti
shrb
ret
sbb
or
ljmp
fldl
add
icebp
movsl
or
shrb
ret
and
ja
fwait
bound
test
lock
in
push
jp
pop
xlat
loope
xchg
jno
mov
filds
fists
cmpsl
std
pop
in
or
or
sbb
push
inc
jbe
adcb
ja
incl
dec
repnz
inc
popa
mov
xor
outsl
fcoms
mov
out
scas
fbld
int
lods
mov
push
adc
mov
mov
lahf
add
adc
shrb
addl
fadds
adc
adcl
cli
clc
test
icebp
mov
sbb
add
cmp
cmpsb
insl
xor
aas
and
jl
dec
pushl
mov
leave
flds
add
fxtract
jl
mov
xchg
sbb
fwait
sbb
lcall
fcomps
fsincos
test
mov
mov
mov
xlat
jecxz
ss
incl
inc
out
sub
and
and
daa
sti
lods
and
out
mov
movsb
decl
pop
ljmp
fmulp
mov
das
push
sub
cld
in
cmp
sbb
ljmp
mov
aam
xor
iret
dec
mov
push
roll
loopne
xor
inc
pop
fwait
inc
xchg
mov
cmp
dec
or
or
ret
mov
or
scas
pop
fisttpl
lcall
shlb
pop
into
rcll
mov
sub
xchg
call
fadd
lcall
lock
mov
push
out
mov
incl
lock
xchg
mov
lea
xor
into
and
dec
mov
add
mov
xor
jns
adc
std
pushl
lcall
fst
pop
push
call
add
fs
cmp
xor
decl
rclb
call
loop
mov
mov
shrl
icebp
jmp
pop
mov
ficoml
mov
mov
nop
out
adc
cmp
sub
inc
mov
out
mov
or
xchg
addr16
adc
xchg
inc
inc
and
add
pop
xchg
push
add
sbb
mov
push
cmp
mov
adc
rcrl
into
stos
leave
pop
es
shrl
jae
jg
jmp
popf
inc
adc
call
cmp
and
push
push
add
xor
imul
daa
pop
cmp
test
out
or
xor
pushl
dec
sar
iret
xor
aam
in
andl
xchg
mov
jle
mov
mov
fildl
jno
jnp
shlb
fmull
dec
cmpb
jecxz
mov
ljmp
pop
pop
or
call
mov
jae
mov
xor
xor
loope
cmc
dec
xchg
jmp
pop
aam
stos
inc
arpl
pop
inc
outsl
cmp
cli
inc
clc
incl
ljmp
imul
and
xchg
pop
pushl
lcall
pop
pop
in
mov
sub
rclb
lret
add
adc
sar
jmp
cmp
adc
xchg
mov
lea
sbb
fwait
out
xchg
xchg
dec
jmp
test
fdivrs
pop
lahf
dec
sub
mov
xchg
mov
xchg
jnp
rcl
mov
adc
mov
mov
fwait
pushl
lods
xor
lds
or
cmp
movb
popa
mov
fcom
clc
jb
arpl
adc
fcmovu
in
pop
push
cmp
aam
es
xor
push
test
fsubl
cmp
and
imul
decl
xacquire
cmp
mov
pop
mov
aas
lret
cmpsl
push
cmpsb
inc
add
fwait
test
orb
repz
dec
xchg
xor
dec
sbb
imul
cmp
nop
leave
mov
pop
adc
jg
icebp
jo
ljmp
int
mov
testl
xor
mov
rorb
push
ljmp
nop
fcomip
push
xlat
pop
dec
out
imul
jmp
adc
rorb
push
sub
push
add
scas
stc
xchg
mov
not
lock
outsl
or
hlt
in
sub
adc
loopne
ljmp
pop
adc
test
loopne
push
enter
test
pushf
push
mov
add
decl
mov
filds
shlb
jno
push
mov
jb
arpl
js
test
jg
lock
mov
arpl
jne
xchg
bnd
jecxz
adc
mov
gs
adc
inc
js
xor
call
lret
sbb
stc
inc
add
sahf
mov
in
cmp
stos
push
fwait
js
jg
fbstp
and
sbb
jle
mov
aam
or
fsub
aaa
bound
jno
shrb
leave
rcrb
add
push
lods
loopne
mov
fsubrp
hlt
cld
js
int
sub
lcall
xorb
or
incl
cli
mov
adc
call
mov
stc
cmp
into
xor
and
cmp
scas
add
mov
add
jg
andps
aam
mov
outsb
jl
sub
lcall
adc
mov
inc
jp
in
or
push
mov
ss
xor
mov
mov
or
mov
xchg
outsl
outsb
mov
dec
mov
jnp
pushl
adc
cmp
cltd
mov
arpl
out
mov
hlt
jp
mov
imul
push
pop
add
inc
mov
add
js
jmp
jp
fsub
fstl
in
xor
cmc
cmp
fs
push
jp
fwait
inc
stc
inc
and
mov
das
cli
ljmp
push
imul
xchg
lea
mov
dec
pushl
out
outsl
jge
inc
aam
and
pop
sub
and
lcall
cmp
xor
cs
aad
es
sti
sti
mov
or
adc
gs
cmpsb
andb
rorl
call
shrb
ljmp
ds
pop
scas
adc
data16
push
out
out
aad
lcall
cmc
scas
loope
mov
push
sbb
mov
or
sbb
rolb
xchg
dec
pop
lcall
jmp
pop
leave
aad
das
mov
pop
gs
rcl
rolb
push
fs
lds
lcall
mov
mov
lods
add
jg
ja
jb
sbb
push
fcoml
stc
sbb
icebp
cmpsb
and
cmp
ljmp
xchg
fcoms
mov
xchg
push
and
icebp
fwait
jge
stc
adc
jmp
sub
xor
or
lcall
pushf
jecxz
push
pop
outsb
test
sbb
fcomps
jmp
push
in
mov
rclb
xchg
cld
inc
inc
xor
or
js
xchg
push
inc
scas
aas
mov
mov
cltd
into
xor
fsubrl
adc
jno
push
iret
jmp
loop
jg
mov
push
jl
ss
or
and
mov
inc
or
push
pop
push
and
mov
mov
cwtl
incb
mov
loop
xor
jnp
jle
call
lcall
scas
cmp
pop
dec
arpl
lock
mov
jb
fldl
lds
adc
call
roll
inc
add
sbb
mov
lods
add
hlt
lods
xor
xor
fmull
push
incl
inc
mov
pusha
aam
mov
data16
nop
or
push
sbb
dec
pop
movsl
jno
imul
sbb
in
adc
cmpsb
aaa
push
cli
lcall
sbb
nop
xchg
addb
stos
in
mov
adc
fwait
sub
and
xchg
and
aaa
pop
jbe
mov
jmp
push
sbb
fcoms
test
sub
js
aam
jbe
cmpsb
decl
xchg
call
push
scas
dec
pop
pop
adc
outsl
dec
cltd
scas
fists
mov
jg
pop
out
mov
cmpsb
shlb
inc
xor
rorl
and
jle
int3
sahf
inc
mov
movsb
sub
push
mov
call
clc
cmp
call
inc
mov
cltd
or
push
cmp
mov
aaa
jno
mov
clc
scas
nop
lods
xchg
mov
jp
sbb
call
std
pop
frstor
mov
enter
cmp
xchg
and
ljmp
push
and
arpl
jmp
lea
adc
pop
inc
cld
fisttpl
mov
je
fwait
sarb
sub
loop
jge
lahf
xor
call
push
pop
call
lcall
jl
fidivrs
ss
push
stos
in
pop
mov
incl
sbb
filds
mov
rorl
dec
xchg
sub
movb
sub
call
fwait
adc
sbbl
js
push
pusha
mov
inc
sarl
outsb
sub
push
mov
loopne
mov
andb
mov
jl
push
add
das
dec
test
call
std
inc
or
push
addr16
mov
pop
jb
sbb
loopne
jecxz
pop
cmc
jo
outsb
cmp
cli
inc
fnstsw
iret
shl
fcoms
clts
out
fcompl
mov
cmc
lds
inc
repz
sbb
inc
sub
ljmp
jle
in
mov
sbb
psadbw
decl
sub
imul
dec
sub
mov
dec
ret
xchg
cmp
insl
loop
call
push
sbb
push
aad
inc
push
and
xor
add
cli
ljmp
adc
bound
aaa
push
mov
insb
ds
pushl
mov
pop
jno
mov
in
or
jae
lret
je
adc
scas
cmpsb
icebp
pop
adcl
sub
sbb
add
addb
push
adc
into
inc
xchg
adc
xor
rcll
mov
ud0
mov
bound
mov
jns
sbb
popa
pop
mov
sbb
pop
sbb
pop
loopne
mov
out
push
hlt
adc
dec
mov
inc
mov
or
pop
cltd
dec
cld
cli
sub
dec
cltd
imul
pop
push
jecxz
mov
dec
aas
jge
loope
lods
ljmp
xor
call
mov
mov
mov
sahf
iret
sub
stos
mov
pop
adc
and
loope
and
inc
jbe
sar
cmp
dec
mov
mov
jne
and
pop
lock
push
ljmp
xor
out
js
inc
decb
fcomip
aam
pop
in
push
lods
insb
pop
lahf
pop
mov
add
mov
jg
add
mov
mov
jmp
pop
jmp
mov
mov
lods
xchg
pop
mov
popl
xor
ret
jmp
aad
and
incl
stos
jmp
jmp
push
dec
sbb
mov
shr
in
or
jg
ret
cmp
fnstcw
cmp
mov
jg
popa
cmp
xor
dec
test
fwait
in
pop
popf
loop
cmp
xchg
or
je
mov
test
mov
sub
cmp
xor
jbe
inc
pop
xor
pushl
jl
dec
jo
xchg
pushw
insl
in
int3
fidivrl
sahf
loopne
test
mov
sar
lcall
imul
jo
lds
fildll
push
rcrb
jne
mov
dec
ja
and
fdivl
add
sti
test
pop
sub
mov
xchg
in
dec
or
insb
out
das
cmpsl
cmp
scas
mov
push
mov
inc
add
and
out
cmpsb
jnp
ds
loopne
and
and
mov
ds
sbb
cmc
adc
rcrl
inc
cmp
out
ja
bound
adc
stos
fcompl
cmpsb
or
dec
cmp
jg
scas
addr16
dec
adc
xorb
out
mov
xor
sub
icebp
jns
cmp
incl
movsl
cmpsb
add
jns
std
sbb
inc
fwait
fs
shl
xchg
decl
test
inc
fcompl
dec
push
push
mov
js
std
inc
scas
enter
adc
movsb
mov
mul
pusha
push
and
cmp
aas
clc
filds
push
jb
icebp
mov
adc
andb
out
inc
and
or
jnp
push
or
add
dec
inc
inc
xchg
xchg
sar
decl
imul
pop
outsl
movl
add
dec
push
test
jle
call
or
cmp
sahf
push
inc
sbb
or
out
jmp
jl
dec
add
icebp
movsl
mov
xchg
and
into
call
shlb
call
repnz
jmp
mov
add
popa
xorb
dec
push
xor
sub
lock
incl
je
or
das
push
sbb
mov
in
popa
cli
div
dec
dec
call
adc
fstl
ljmp
lcall
aam
xchg
ss
popa
xchg
inc
mov
sub
es
ljmp
lock
ret
pop
mov
in
jae
cmpsb
js
push
out
cmp
ret
cmc
ljmp
daa
int
mov
xchg
pop
imul
or
xchg
inc
lret
call
mov
xor
dec
sti
bound
cmpsb
repnz
dec
push
fldenv
or
mov
xchg
lock
aad
out
add
inc
enter
fidivrs
sbb
test
movsl
pusha
scas
cld
test
in
fisttps
add
scas
addr16
repz
stc
inc
push
and
test
out
add
ror
pop
pushl
sahf
lea
cmp
add
ljmp
inc
daa
sbb
fs
xor
jb
aad
add
push
cld
mov
dec
fadd
adc
je
cmp
ljmp
das
mov
or
sti
ss
inc
scas
mov
repnz
je
cmp
cld
mov
fisubs
push
or
lods
aaa
stos
cmpsb
je
arpl
mov
ret
push
decl
in
dec
hlt
js
mov
jmp
cs
cmpsb
cmp
xor
jne
aas
fisubrl
rcll
loopne
sbb
movsl
pushl
test
and
popf
dec
adc
jne
xchg
lods
mov
sbb
lea
sub
clc
call
sahf
push
out
push
je
pusha
and
dec
int3
pop
lods
jmp
or
adc
mov
cmp
pop
push
cmpsl
mov
mov
pop
fsts
push
stc
lcall
lcall
lahf
enter
sub
cmc
or
mov
lahf
out
push
loopne
jle
pop
xchg
stos
ljmp
jl
fsts
xchg
sbbl
test
xorl
bound
sub
pop
mov
jmp
cmp
or
sbb
add
cli
mov
push
jmp
jp
rolb
jmp
push
pop
jae
adc
and
insl
js
cli
mov
jae
mov
push
sbb
mov
xchg
insl
xchg
aas
jl
jne
inc
fninit
rolb
inc
mov
add
adc
mov
cmc
test
mov
and
jg
mov
jo
and
or
imul
test
test
mov
decb
mov
loopne
add
adc
les
std
inc
gs
inc
scas
insl
lcall
jg
inc
mov
nop
sarl
adc
dec
sbb
xor
std
pop
aad
lret
xor
sbb
push
push
cli
outsl
cmp
lods
inc
pop
adc
xchg
aad
xchg
jg
movl
loopne
adc
dec
sar
pushl
add
push
xchg
mov
sbb
cli
mov
les
jo
mov
pop
leave
xor
dec
xorb
icebp
cmp
pop
test
movsl
push
xchg
inc
sbb
nop
imul
inc
loop
dec
repz
adc
mov
push
and
lcall
cs
ret
test
jmp
sbb
push
push
pop
sub
arpl
aaa
test
sub
bound
movsb
shlb
xchg
in
ret
sbb
push
push
jo
and
adc
ret
mov
jnp
call
adc
xrelease
pop
jno
rcll
int3
ss
xor
dec
nop
incl
mov
push
das
and
pop
into
rcr
cmp
frstor
pop
decl
mov
movsb
mov
cs
mov
sahf
div
shl
enter
pushl
or
arpl
push
repnz
cs
test
inc
xchg
pop
loope
jl
enter
adc
shrl
ljmp
xor
xor
dec
push
aas
scas
pusha
and
sub
add
pop
or
lahf
dec
loope
pushl
sbb
sbb
in
leave
add
loopne
mov
push
das
jge
sbb
ret
lock
rcrl
cmp
pop
jmp
mov
or
pop
sahf
les
stc
enter
fadds
mov
xor
jns
pop
lds
lcall
jge
leave
int
push
xchg
jae
xchg
or
dec
mov
mov
loope
xchg
iret
dec
jp
ficompl
ljmp
add
mov
push
fidivl
mov
repz
cli
xor
jmp
fidivs
pop
shrb
dec
movsb
add
imul
clc
jg
pop
pop
lret
add
lds
bound
jb
ljmp
mov
mov
lcall
adc
dec
xor
mov
push
cwtl
add
out
in
icebp
xor
xchg
add
lahf
jg
test
inc
test
nop
fists
fcoml
nop
int3
pop
add
test
push
loop
push
xor
mov
xlat
xchg
testb
fidivl
push
inc
push
adc
clc
push
dec
fisubrs
bound
mov
lock
adc
sbb
or
jmp
rep
sarb
sbb
andl
fistps
adc
std
aad
daa
pop
mov
icebp
int
ljmp
lcall
insl
icebp
push
inc
inc
push
pop
xchg
dec
or
sahf
xchg
leave
test
aaa
scas
jecxz
das
ret
decl
push
mov
repnz
orb
and
push
push
mov
stc
cmpsl
xchg
subb
jg
insb
lods
pop
jle
aad
les
mov
pop
sub
mov
aam
push
sarb
ja
pushf
lds
scas
add
xchg
sar
sar
sub
push
mov
sub
incl
push
lcall
lea
pop
bound
outsl
push
std
out
xchg
inc
xchg
repz
popf
mov
call
or
mov
imul
cmp
jmp
jle
mov
xchg
fwait
xchg
das
aad
dec
test
outsl
imulb
das
clc
call
or
add
fs
or
lret
jbe
mov
push
cld
jmp
jbe
cmc
std
sbb
imul
sti
jns
and
mov
inc
jmp
decl
cld
imul
imul
sub
inc
push
sbbl
std
pusha
mov
loop
push
imul
push
call
push
pop
stos
fwait
daa
int3
mov
iret
mov
jae
ljmp
mov
mov
and
xlat
xchg
mov
inc
mov
popa
jmp
imul
decl
insb
movsl
dec
sub
inc
in
popf
sbb
ret
dec
inc
sub
call
sbb
call
jb
ds
xlat
leave
xor
les
mov
push
je
mov
xor
jae
pushl
out
adc
push
jecxz
sarl
mov
xchg
xchg
push
hlt
sbbb
and
or
fidivl
mov
jns
outsl
xchg
test
loop
or
xor
xchg
push
mov
clc
idiv
scas
repz
dec
lock
xor
adc
outsl
xor
repnz
jecxz
sbb
mov
mov
xor
int
out
pop
cli
outsl
inc
xor
dec
and
fsubl
mov
sti
sti
cltd
xlat
hlt
shll
dec
int
outsl
jne
ret
clc
inc
dec
sbb
int3
push
ljmp
xchg
push
aad
decl
mov
leave
push
mov
ret
pop
mov
mov
inc
sub
lock
call
mov
rclb
adc
add
mov
data16
and
js
push
pop
ret
push
cli
and
fistpl
mov
incl
mov
xchg
mov
mov
mov
dec
dec
inc
ljmp
clc
jg
sub
add
in
add
inc
pop
and
pushl
loope
add
xchg
and
test
and
jo
dec
leave
cmp
vpmulhw
jae
mov
mov
movsb
push
and
std
hlt
cmpsl
lcall
adc
stos
in
jmp
mov
arpl
icebp
mov
mov
call
jp
arpl
mov
push
xchg
pop
sar
or
sti
leave
bound
lea
testl
data16
pop
and
fwait
add
aaa
xchg
mov
jecxz
movsb
ljmp
cmp
into
mov
out
cmp
jae
cmp
out
popf
nop
fs
mov
push
jae
xor
inc
gs
les
mov
jne
inc
mov
xchg
outsb
cmp
sti
insb
push
or
sbb
sahf
call
gs
inc
loopne
ljmp
addr16
sub
aad
mov
in
sub
dec
pop
je
push
jecxz
mov
pop
ficompl
dec
xchg
or
imul
ljmp
fimuls
jmp
fists
cmp
loopne
and
sarl
mov
jle
mov
call
aad
xor
popf
push
loop
dec
std
mov
ret
sub
add
stos
xlat
ljmp
test
jo
cmp
fimuls
push
fnstcw
xor
inc
or
jg
push
jle
imul
mov
orl
call
add
addb
outsb
jbe
mov
mov
xor
cmc
sub
jmp
jns
mov
fs
cmp
jg
out
push
pop
mov
mov
adc
dec
xchg
mov
into
in
mov
xorb
rol
xor
dec
in
fdiv
pop
scas
inc
popa
sub
mov
push
outsl
ss
sbb
cld
popa
mov
imul
inc
pop
pop
ficompl
pop
insl
adc
std
cli
xor
or
pop
iret
rcrl
dec
imul
inc
iret
pop
cli
filds
repnz
push
ret
dec
mov
test
xchg
xor
in
mov
std
movsb
mov
sbb
aaa
xor
lock
adc
mov
mov
mov
clc
and
std
lods
adc
lcall
sbb
xor
data16
dec
dec
add
sub
addr16
aam
xchg
sarb
fists
nop
loopne
mov
call
push
mov
jge
sub
int3
or
icebp
and
sub
xlat
call
or
lock
mov
scas
fabs
mov
ljmp
inc
in
dec
and
lock
int
jbe
add
decl
clc
adc
sub
inc
cmp
jb
and
push
jmp
leave
pop
pop
and
nop
or
call
loopne
mov
add
mov
mov
mov
push
stos
out
push
mov
mov
arpl
fdivs
inc
dec
mov
sub
jge
daa
pushl
lea
js
lahf
shr
mov
pop
lcall
push
in
inc
mov
dec
div
ja
incl
decb
xchg
in
mov
or
clc
shrb
in
dec
js
imul
xor
mov
mov
and
test
outsb
push
jb
mov
repz
pushl
add
push
jno
std
sub
aad
mov
clc
jge
sub
clc
jnp
cltd
push
ja
mov
dec
jecxz
mov
fisubs
mov
mov
dec
pop
jmp
xchg
imul
push
jae
push
adc
repz
xlat
mov
jle
push
xchg
jl
andl
xchg
lock
enter
scas
xchg
test
xchg
or
dec
testb
ljmp
adc
push
adc
aad
outsl
adc
fwait
cmp
loope
call
fstpt
dec
scas
cmp
out
inc
enter
mov
cmp
decl
sub
outsb
pusha
repnz
cmp
xor
and
inc
lock
jg
push
cmpsb
outsl
repnz
les
cmp
jo
imul
cmp
fildll
je
stos
push
les
out
lret
out
in
in
or
fs
inc
xchg
adc
lret
xor
addb
or
cmp
std
fmulp
push
cmp
sub
inc
inc
ficomps
mov
arpl
loop
ret
int3
dec
sub
repz
xchg
fs
sbb
jmp
inc
cmp
adc
popl
lahf
cs
mov
cwtl
bound
xchg
mov
pop
sarb
frstor
lcall
mov
and
xrelease
jns
std
or
or
gs
enter
call
cmp
pop
bnd
repnz
push
fwait
pop
repz
xchg
lahf
pop
fldlg2
adc
inc
dec
pop
das
mov
jae
rclb
xchg
jg
incb
mov
xchg
add
add
loope
mov
in
xor
imul
aam
sti
sub
cmpsb
jle
ss
inc
inc
aad
add
cs
aam
scas
loop
fisubrl
call
call
popa
mov
ret
xchg
jae
and
test
or
mov
mov
lods
jns
push
mov
je
jmp
jg
div
cmp
pop
std
enter
push
inc
outsb
lret
aad
sub
mov
mov
stos
aaa
ret
and
icebp
lcall
xor
scas
push
clc
int
mov
xchg
cmp
mov
test
jg
decl
add
outsb
mov
pop
xchg
in
lret
insl
iret
es
cmp
ljmp
cmp
jo
or
jb
adc
dec
sbb
lret
add
movsl
push
adc
xor
incl
push
scas
mov
shrl
cs
cmp
cld
mov
or
push
and
inc
jne
mov
mov
inc
sub
adc
clc
jmp
pushl
gs
std
jge
xor
imul
pop
xchg
adc
decl
mov
leave
pop
jnp
clc
dec
rorl
lcall
jb
mov
add
nop
cwtl
aaa
adc
sub
incl
js
cmc
mov
mov
mov
or
cwtl
mov
outsl
and
and
int3
fs
mov
fwait
stc
insl
std
decl
add
out
and
add
mov
das
adc
or
popa
sub
fcomi
and
cmp
call
push
in
ds
or
pushl
sub
addb
decl
fnstsw
pop
mov
mov
je
incl
gs
push
sbb
stos
jecxz
dec
jns
mov
aam
add
jno
lret
push
dec
pop
clc
pusha
jb
mov
hlt
cmp
incl
arpl
inc
int
cmc
pushf
mov
jmp
jns,pt
lock
mov
lret
push
test
mov
jg,pt
icebp
outsl
les
gs
push
fs
ja
js
xor
aas
inc
cltd
mov
add
sub
push
cltd
pop
jbe
or
xor
lcall
nop
mov
in
int3
xchg
jle
pop
cld
mov
pop
imul
sub
sarb
jb
cmp
jl
mov
call
mov
xor
mov
cs
push
loop
lea
test
jg
mov
movsl
fwait
mov
fists
loope
sub
xchg
mov
inc
das
inc
fwait
xchg
inc
addb
ss
int3
add
out
incl
mov
insb
repnz
jle
jns
into
and
cwtl
std
lret
jg
data16
mov
mov
mov
inc
adc
scas
jbe
pushl
fsts
pop
inc
sub
ret
mov
jmp
push
pop
inc
scas
cmp
lock
repz
xchg
mov
je
jae
decl
sti
and
les
inc
jg
fimuls
cwtl
mov
clc
pop
aad
movsl
push
cmpsb
mov
cmp
fildll
mov
leave
xchg
repz
mov
fsubr
xor
scas
mov
lcall
mov
xchg
pushf
dec
jne
scas
adc
enter
sub
rcll
fstpt
cmp
sarl
test
mov
in
loope
sub
mov
jg
add
mov
dec
or
inc
lea
pop
xchg
mov
adc
mov
cmp
movsb
fstpl
in
cld
int
test
mov
aad
gs
in
cmc
ret
sbb
jg
shlb
jp
clc
sahf
jmp
xor
push
repnz
xor
add
ljmp
ljmp
xor
jnp
mov
data16
mov
negb
stos
or
js
cmpsb
bnd
ret
push
ljmp
mov
mov
and
mov
xlat
fwait
jbe
mov
pushl
cltd
mov
fisubrl
or
test
mov
mov
xchg
insb
mov
cmc
ds
idivb
mov
cmp
add
fdivrp
lret
xchg
push
aaa
adc
jbe
int
push
xchg
pop
rcrl
mov
sbb
movsb
insl
cs
repnz
fstpt
movsb
and
ret
inc
sbb
aad
rol
mov
sti
add
sub
ljmp
imul
pop
or
push
add
xchg
mov
aaa
loopne
mov
mov
pop
pusha
sub
mov
add
mulb
xchg
jp
ljmp
lock
cmp
push
arpl
sbb
inc
mov
scas
push
adc
incl
jbe
popf
xchg
aas
mov
cmc
rcrl
push
push
cmpsb
xor
mov
adc
daa
test
dec
or
xor
xor
pop
ret
xchg
jmp
mov
ljmp
xor
bound
shlb
mov
mov
mov
cli
mov
fnsave
push
and
mov
lcall
dec
negl
cmpsb
mov
sbbl
call
xor
jmp
aaa
add
adc
insb
stos
cmp
fwait
das
clc
jmp
push
dec
sub
fsubrl
xor
enter
mov
push
incl
lods
mov
mov
daa
into
sbb
sbb
arpl
ds
dec
ror
ss
inc
iret
dec
out
sti
xor
add
inc
lret
add
in
es
jg
mov
faddl
imul
push
out
call
incl
xchg
mov
loope
clc
xor
insl
movsl
add
js
cmp
out
mov
push
and
mov
cmp
cwtl
daa
cmpsb
stos
xchg
cmpb
cmpsl
mov
popaw
sub
dec
sti
stos
push
loop
je
jb
or
testl
sbb
imul
push
ljmp
lods
pop
mov
or
inc
and
mov
ret
mov
jmp
pop
rclb
mov
dec
fisubrl
adc
insb
iret
aaa
adc
or
iret
decb
rcll
incl
or
jns
pop
orb
mov
inc
or
loope
ds
lock
outsb
adc
dec
sub
dec
lods
adc
jge
in
or
decl
dec
out
loope
push
test
jge
add
out
std
jg
pop
test
inc
rcl
dec
call
out
out
ja
clc
lcall
xor
call
fimull
popf
fdivp
sbb
xlat
add
fcoml
sbb
xchg
xchg
cmp
mov
lods
icebp
movsb
jns
call
fld
data16
pop
arpl
imull
or
mov
adc
pusha
fwait
pop
cltd
dec
xor
sub
or
inc
mov
iret
scas
push
lcall
cmp
push
icebp
pop
mov
xor
clc
xchg
xchg
dec
mov
sub
repnz
sub
out
lret
dec
call
loopne
adc
xor
mov
adc
aad
and
xchg
or
fbld
jmp
dec
loopne
mov
jmp
sahf
in
ds
sbbl
ljmp
cltd
add
inc
je
xchg
adcb
test
test
popa
dec
lock
movsl
stc
lods
and
ljmp
sar
xor
jbe
inc
gs
mov
add
or
dec
mov
ljmp
stos
in
mov
mov
push
mov
sub
and
push
ljmp
loop
and
hlt
subb
xchg
cmpsl
or
mov
xor
decl
mov
cli
mov
popf
inc
mov
inc
add
or
fwait
mov
push
mov
jmp
xor
push
mov
daa
mov
ljmp
addr16
or
popa
shrl
jbe
hlt
push
ror
test
fneni(8087
adc
xor
roll
dec
in
daa
inc
push
mov
fst
xchg
ret
or
decl
cmp
lock
xor
mov
or
and
loopne
ljmp
mov
push
std
movsb
gs
xchg
data16
adc
mov
pop
mov
or
aas
or
insb
mov
incl
inc
cs
fwait
clc
je
jb
cmpsl
and
lret
pop
adc
push
stos
adc
mov
decl
popa
movsb
jbe
inc
leave
mull
int3
or
je
dec
imul
mov
cmp
sbb
jb
sar
insb
push
fdivr
fbld
out
gs
rcrl
lods
add
mov
or
xchg
lock
loope
std
mov
mov
call
jb
pop
dec
cmp
stos
jb
mov
in
test
scas
xchg
scas
and
idivb
shlb
push
dec
add
and
pop
mov
lods
cmp
jne
or
lcall
add
dec
cli
popf
jnp
in
enter
jle
pop
add
xor
mov
cli
decl
push
mov
sub
push
fists
psrlw
mov
sahf
dec
ficomps
mov
shr
mov
jo
sub
aad
gs
popa
jnp
ljmp
pushl
cmp
xchg
call
xor
push
cmpsl
pop
mov
idiv
cmp
and
nop
mov
mov
pop
lahf
push
or
cld
push
cli
mov
adc
mov
push
mov
inc
in
leave
les
lods
int3
repz
push
cmp
jae
push
push
push
popa
lcall
popa
xor
in
push
add
leave
out
mov
sub
aad
xor
jmp
or
out
js
sub
push
adc
mov
mov
jle
adc
sub
insb
inc
fdivp
and
decl
adc
jg
test
fwait
dec
leave
push
enter
mov
lds
add
leave
int3
rcl
xor
das
mov
jmp
jnp
fdivrs
scas
xlat
push
push
jge
jl
js
xchg
xor
decl
xor
testl
lret
cmp
mov
jbe
std
in
lea
bound
je
mov
rcrl
cld
call
mov
outsb
fnstenv
jecxz
aam
pop
xchg
outsl
cwtl
sub
cmpsl
pop
mov
call
out
cmp
call
or
xchg
fwait
test
in
dec
lea
add
lret
push
cmpsb
shlb
xor
dec
jno
stc
sbb
popf
cmpsl
jg
push
fcomip
dec
xchg
push
jbe
adc
jns
inc
push
mov
lods
ss
out
push
cli
pop
add
lahf
call
loope
mov
or
shll
lret
call
add
ljmp
scas
into
mov
dec
cmpsl
adc
jmp
mov
mov
push
add
fisttpll
jp
sbb
lcall
xor
jne
je
dec
push
cli
and
and
jl
mov
call
cltd
jmp
xchg
je
inc
lcall
mov
xlat
mov
das
inc
insb
xor
cwtl
out
push
sar
aas
push
jno
movsl
sahf
mov
mov
push
loopne
xor
pop
jmp
or
orb
icebp
incl
sub
mov
pop
mov
lahf
inc
je
xchg
inc
jns
dec
jle
cmp
ss
xchg
ss
mov
fimuls
mov
arpl
sbb
pop
mov
pushl
lahf
add
inc
cmc
dec
push
mov
mov
bound
sbb
inc
in
jecxz
pop
lock
cmp
and
mov
mov
insb
cmp
pushl
mov
andb
int
aad
push
and
and
pop
hlt
cltd
aam
push
test
leave
push
push
sbb
stos
pushl
mov
call
xor
add
xor
lcall
adc
jo
jne
and
sub
loop
test
ljmp
cld
fwait
incb
dec
push
and
dec
loopne
repz
loop
movsl
or
lret
insl
push
mov
lret
mov
pop
test
repnz
aam
mov
add
les
pop
stc
je
pop
jno
lcall
mov
std
mulb
jl
das
sbb
pushl
sub
or
inc
mov
mov
cmp
and
or
pop
xlat
stc
test
adc
xchg
lahf
push
xchg
hlt
mov
clc
add
jg
fistps
sbb
shll
rclb
xor
xchg
or
pushl
xchg
cmpsl
dec
push
or
xor
pop
add
hlt
push
inc
push
and
cltd
inc
fildll
mov
jge
inc
jbe
pop
shll
jmp
fistps
inc
cmp
cltd
rolb
lea
imul
cmp
iret
out
imul
scas
and
and
ss
fnstsw
jno
fstps
push
and
mov
incl
jbe
push
jmp
xchg
cli
xor
rcl
jp
xor
fistps
cmp
imul
jl
mov
shufps
mov
fdivs
scas
bound
lock
ljmp
mov
lret
dec
or
xchg
sbb
lea
mov
mov
pop
dec
lods
jbe
push
adc
call
test
rorl
popf
inc
popa
je
daa
mov
pop
fucomi
dec
add
repnz
in
out
sub
sbb
cmp
mov
vphaddudq
fnsave
pop
xor
inc
adc
std
movsb
cmpsl
inc
or
jecxz
in
xor
andb
in
call
mov
and
enter
sahf
jae
and
fisubrl
jge
hlt
xor
insb
push
repz
add
inc
in
mov
lods
cmpl
pop
imul
in
add
jb
fidivs
mov
mov
in
push
mov
out
mov
pop
push
add
out
clc
mov
push
sahf
dec
daa
inc
int3
xchg
loopne
out
test
insl
sti
incl
repz
cmpb
stos
test
dec
test
aad
sub
mov
call
leave
rcll
push
test
inc
jns
cmpsb
push
adc
lcall
push
mov
and
and
aaa
xchg
push
xchg
clc
sbb
xlat
pop
test
push
or
loope
xchg
mov
mov
and
or
xor
out
loope
jmp
mov
mov
xchg
cmpsl
sub
aad
int
push
ficompl
sbbl
mov
lea
lahf
in
aas
mov
add
jns
pop
hlt
loop
pop
cltd
arpl
mov
pushl
lcall
pop
push
ret
test
add
jmp
mov
arpl
test
aam
mov
decl
dec
xchg
sub
fstpt
filds
jp
insb
imul
in
pop
hlt
jmp
add
xchg
popf
and
add
add
aad
dec
mov
add
decb
pop
lock
mov
inc
jecxz
repnz
adc
inc
jne
ds
jmp
adc
fwait
mov
ss
mov
shll
lcall
jg
test
sub
push
push
jg
pusha
sbb
mov
shl
sarb
fsts
in
pop
push
ljmp
pushl
mov
cmp
jne
stos
mov
pop
test
in
or
jl
xchg
cmp
push
cld
ljmp
jns
lea
jmp
sub
cmc
push
stos
xchg
mov
cmp
in
lcall
fnstcw
sub
jno
jl
mov
mov
out
push
in
int
add
testb
jne
hlt
cmp
and
lea
push
xchg
jbe,pt
xchg
push
mov
and
stos
mov
scas
cmp
ret
iret
je
stos
add
sahf
cmp
pushl
or
data16
sub
xchg
mov
or
xchg
clc
sub
cmpsb
xchg
pop
test
ss
test
incl
popa
pop
aaa
jecxz
adc
ja
stc
adc
jmp
add
hlt
sbb
push
mov
cltd
sbb
adc
sbb
mov
les
cmpsl
sub
les
popf
sub
sarb
sub
sub
in
xchg
aas
and
subb
into
test
popf
mov
ljmp
push
adc
es
cld
lcall
es
cld
insl
cmp
rcl
aaa
add
rclb
icebp
popf
push
xchg
xor
lods
imul
rorb
movsl
lahf
loop
ja
xchg
mov
dec
push
pop
icebp
fdivrp
aam
sub
into
stos
xor
out
jo
mov
imul
decl
mov
stos
jae
fistpl
xchg
inc
jmp
xchg
sub
lock
std
addr16
add
movsb
push
enter
call
dec
das
dec
stos
lret
jbe
xchg
push
insl
std
mov
fbstp
cs
mov
mov
mov
adc
scas
cmp
push
or
jmp
popa
adcl
repnz
dec
mov
das
lcall
jge
sub
push
push
lods
jmp
mov
je
sbb
cmp
loopne
test
ljmp
cli
adc
cmp
lods
mov
loop
ja
xor
xchg
jbe
mov
jg
hlt
inc
test
cmp
sti
sub
and
loopne
ds
jmp
push
pop
pop
push
test
add
mov
jo
sarb
pop
mov
fstl
insl
mov
clc
imul
or
loopne
inc
cmp
pop
sub
outsl
clc
ficoms
push
xchg
scas
lcall
pop
loop
outsl
push
sub
or
call
lods
mov
in
arpl
repz
jmp
push
fcmovnbe
scas
pushl
jmp
mov
mov
insb
jmp
imul
sbb
dec
adc
or
pop
inc
cmp
jbe
push
sub
push
jle
jmp
jl
push
out
cmp
cld
inc
pop
pop
xchg
dec
dec
lret
dec
adcb
jae
mov
inc
adc
cli
in
aaa
mov
in
mov
fsubs
in
les
in
add
dec
int3
leave
push
jge
or
dec
clc
pop
mov
push
aas
lods
hlt
lock
jecxz
adc
push
fs
and
pop
lret
ljmp
iret
das
cmpl
mov
xor
scas
xchg
push
test
mov
cld
jg
and
and
test
sbb
pop
dec
popf
inc
xor
fbstp
sarb
repz
cmc
xchg
lock
ljmp
push
push
sub
cmpb
test
out
push
adc
push
lcall
push
mov
sahf
hlt
test
jno
xorb
add
push
pop
daa
pop
scas
inc
jle
jle
enter
or
cli
xor
test
outsb
adc
jns
push
cmp
cltd
cmpl
hlt
addr16
stos
cld
mov
or
mov
or
ss
in
ja
ljmp
fsubrs
out
psrad
sbb
shrb
inc
mov
pop
pushl
insl
fwait
jecxz
mov
inc
sahf
push
and
push
mov
cmp
dec
fcmovnb
sbb
cmc
dec
fldenv
shlb
call
mov
sub
xor
ljmp
repz
and
pop
adc
enter
div
add
insl
pusha
mov
mov
filds
adc
xor
push
jne
lcall
imul
and
cmp
aas
lret
mov
push
push
decl
push
cmpsl
in
mov
inc
fdivrs
scas
add
lea
fwait
push
negl
out
fcomps
ljmp
inc
jno
cmp
mov
mov
sbb
fdivrs
out
ja
imul
add
in
hlt
dec
add
mov
lods
jmp
adc
xor
add
mov
xor
fsubr
and
test
cs
ljmp
push
dec
sub
jbe
mov
inc
jle
pushf
clc
decb
std
incl
jmp
orl
jmp
pop
ss
shl
lock
mov
out
cli
ja
fisubrl
iret
xor
push
xor
aas
sbb
push
jo
clc
mov
sbb
or
lock
addl
movsb
lcall
xchg
jbe
sub
ja
into
sahf
jl
or
ror
in
rcll
loopne
loop
pop
cltd
fcos
jmp
dec
or
push
add
mov
ficoms
dec
mov
adc
das
imul
test
jmp
shlb
dec
xchg
in
cmp
adc
jge
loopne
adc
stos
mov
loope
decl
xchg
gs
adc
insb
ss
pop
jbe
mov
lahf
mov
lcall
push
imul
pop
lods
ss
jmp
sbb
push
ret
in
mov
xchg
fnsave
push
cld
shrl
lock
aam
inc
ljmp
pop
push
mov
out
xor
repz
popa
mov
or
and
jmp
jns
dec
fcmovnu
les
lods
sbb
pop
cmpb
and
push
gs
mov
ljmp
js
push
mull
sbb
jne
cmp
add
je
sahf
je
gs
in
fstpl
inc
cmp
es
sbbb
lret
mov
adc
je
mov
xchg
xor
xchg
mov
push
lds
or
decl
data16
sbb
mov
add
test
shrb
jg
fdivp
mov
mov
mov
add
dec
mov
popa
in
sbb
call
pushl
lds
mov
fimuls
imul
cli
sbb
mov
xchg
xor
loopne
jae
sbb
ljmp
movsb
dec
push
cltd
outsl
shl
xchg
js
xlat
fimuls
pop
jbe
ret
outsb
test
lcall
and
inc
jmp
movd
sub
setno
lcall
clc
mov
or
into
and
out
inc
add
ljmp
mov
cmpsl
int3
adc
call
fbld
negb
ret
jmp
repz
adc
push
add
decl
fcmovu
in
sahf
icebp
clc
xor
test
paddd
push
fsubp
mov
pop
jmp
lock
bound
xor
xchg
daa
fisubrs
mov
xchg
pop
inc
mov
sub
or
adc
xchg
mov
add
incl
mov
add
push
scas
dec
cmp
dec
dec
mov
scas
lret
loopne
in
outsb
out
pushl
xorl
jp
test
test
ljmp
xchg
mov
in
call
push
movsb
mov
lahf
jae
out
fstpl
call
fimuls
es
adc
cmp
cli
out
xchg
gs
sub
or
cmp
icebp
fimull
aaa
into
xchg
test
inc
js
and
lcall
jmp
push
insb
push
inc
jmp
out
and
addb
in
add
push
jmp
stos
dec
mov
stos
mov
inc
jb
adc
mov
sar
jg
or
in
call
nop
push
mov
push
fcomip
jp
pop
xchg
dec
loopne
sbb
stos
sarl
inc
push
cmc
jmp
sar
sub
pop
and
lods
xor
test
stos
test
aam
aaa
adc
pushf
mov
dec
lock
incl
jg
imul
xlat
imul
pop
orb
inc
ss
jecxz
sub
sbb
ljmp
add
mov
mov
xor
in
outsb
pop
in
int
push
negb
loopne
adc
cmpsb
out
lcall
sub
mov
sbb
outsl
stos
pushaw
fdivrl
addr16
call
xchg
add
mov
std
adcb
leave
jmp
int3
jno
dec
pop
clc
notl
cmp
inc
push
xchg
lods
or
push
daa
ja
fldenv
int3
pop
dec
jmp
add
fdivs
push
pop
aas
sub
push
out
imul
data16
adc
and
dec
push
repz
lods
into
xorl
mov
divb
xor
jnp
pop
and
inc
ljmp
sbb
addr16
rcrb
pop
add
inc
jmp
out
mov
jl
scas
pop
fbstp
bnd
outsb
in
test
sbb
aas
insl
sub
call
addr16
addr16
hlt
adc
mov
dec
push
ja
rcrb
or
ret
call
mov
mov
sub
jb
insl
pop
jne
les
cld
sti
cwtl
ljmp
sbb
loope
mov
sbb
xlat
aaa
popf
dec
or
sar
decl
pusha
mov
xlat
xor
ret
adc
ja
adc
stc
das
loop
adc
cmp
lcall
out
popf
sub
dec
mov
test
adc
outsl
xorb
mov
in
lcall
lods
pop
fistpll
push
xor
jb
and
shlb
fcompl
daa
lods
inc
mov
cmp
sahf
out
dec
or
sub
out
arpl
daa
dec
mov
fbld
stc
faddp
or
jp
enter
std
push
fucomp
clc
ljmp
call
dec
jl
xchg
pop
mov
push
pop
pop
data16
call
out
stos
mov
enter
jp
dec
daa
xor
push
cmp
andb
incl
jle
inc
jns
lea
in
add
jnp
xor
stc
or
stos
js
inc
cld
lcall
sbb
mov
or
je
adc
xchg
inc
mov
or
fistl
pop
loopne
fsubrp
pop
fsts
sub
push
mull
and
mov
push
scas
inc
jmp
and
mov
fs
rolb
cmp
mov
mov
or
inc
cmp
call
sahf
fisubrs
imul
jmp
mov
daa
lds
adc
dec
cmpsl
es
in
push
push
sbb
scas
lret
movsl
mov
cld
ljmp
mov
popf
sbb
loop
mov
movsl
sbb
sub
pushl
js
divb
jl
adc
mov
hlt
call
dec
inc
or
pushl
incl
fdivrp
inc
sub
int3
scas
fisubrs
lods
adc
lock
pushl
clc
ljmp
adc
dec
push
enter
test
test
mov
pushl
cmp
cwtl
push
pop
jp
lahf
sti
ret
push
mov
or
fs
loopne
inc
xchg
cmp
mov
mov
pusha
pop
nop
sub
clc
push
jl
mov
imul
jnp
and
jecxz
ficomps
ljmp
int3
lods
pop
leave
test
cld
sbb
test
pusha
or
jecxz
mov
cli
ret
mov
ljmp
hlt
push
mov
jge
adc
add
je
rolb
ljmp
mov
mov
nop
jl
jo
arpl
jno
stc
lock
inc
mov
lcall
sub
jnp
lret
and
mov
pop
sahf
scas
les
sub
xchg
fisubrs
pushf
mov
pop
jl
xchg
and
inc
cmp
pop
or
aaa
dec
add
incb
adc
decl
scas
lds
loop
mov
mov
push
push
mov
sub
pushl
out
arpl
loope
and
pop
xchg
pop
shl
popf
pop
xor
mov
fwait
push
mov
push
mov
cmp
pop
out
daa
xchg
pop
call
nop
mov
je
mov
push
jb
popa
jmp
mov
lods
outsl
in
int
cld
mov
call
and
mov
xchg
in
xor
sub
pop
jbe
ljmp
xor
mov
aad
cs
sbb
mov
pushf
pushl
or
xchg
test
es
dec
pop
lahf
mov
fwait
sub
out
add
decl
subl
xor
std
fcompl
loope
inc
mov
bound
fbld
test
js
fiadds
adc
jg
xchg
sub
ss
adc
jae
or
loopne
call
jecxz
cmp
je
add
xchg
fiadds
pop
xchg
lahf
jmp
test
cli
daa
outsl
jmp
test
movsb
xchg
repz
cmp
outsl
and
lret
and
add
std
pop
jns
dec
ret
sub
pop
xor
push
lock
or
xorb
push
shrb
inc
mov
jnp
rcr
and
pushl
data16
in
pop
test
and
or
bound
jl
aam
xor
jne
pop
mov
outsl
push
ss
les
mov
popa
es
scas
mov
fstpl
dec
push
adc
or
iret
aad
mov
sbb
pushl
les
cmp
pop
pop
data16
mov
test
call
pop
mov
or
mov
xchg
mov
sarb
call
cmc
or
lcall
mov
xor
push
jno
ja
outsl
jge
add
lcall
out
mov
outsl
cmpsb
cmpsl
cli
iret
imull
popf
movsl
cmp
test
pushf
or
xlat
popf
sub
cmpsb
decl
scas
mov
negb
xchg
fisubl
dec
pop
jno
shl
or
add
ret
jge
mov
fisubrl
test
mov
aaa
mov
xor
add
lea
fdiv
call
inc
jo
lcall
iret
xchg
xchg
xchg
sbb
cmpsb
mov
sbb
mov
lahf
xchg
mov
lret
mov
xchg
sbb
mov
and
add
push
mov
mov
incl
sub
dec
repnz
in
push
jge
cltd
out
add
adc
cs
or
add
incl
movsb
sbb
out
call
in
push
mov
mov
lods
pop
adc
clc
dec
cltd
aad
scas
addb
movsb
pushl
pop
daa
jbe
je
fwait
fisubrs
lods
inc
mov
fidivs
fwait
aad
push
adc
push
data16
pop
call
mov
sbb
shlb
adc
cs
pop
jae
decl
cmp
adc
stos
mov
sub
pop
incl
test
mov
mov
scas
divb
je
pop
inc
rcll
jp,pn
rcll
ljmp
roll
shrl
movsl
adc
jle
xchg
loope
jecxz
in
loopne
push
mov
lret
inc
vmaxps
sahf
or
enter
jmp
loope
xor
movb
jp
inc
fcoml
dec
cltd
lock
sbb
pop
jge
mov
int
aam
rol
repnz
push
sbb
fwait
push
mov
xor
stos
adc
nop
bound
xor
in
jmp
leave
or
xor
stos
xchg
mov
cs
aam
dec
xchg
mov
aad
popa
mov
cltd
add
push
testl
push
ljmp
js
call
neg
test
pop
dec
cmp
pop
xchg
dec
push
dec
cmp
addl
stos
xor
and
arpl
call
stc
mov
out
mov
jmp
push
or
xor
sbb
add
sarb
call
mov
int
pushl
push
sbb
xor
jge
or
ret
sbb
popf
sti
mov
cli
or
call
jg
js
les
xchg
cs
loop
call
insl
rcll
in
outsl
mov
repz
cwtl
mov
ja
bound
dec
mov
mov
pop
xor
ss
fucomi
movups
es
inc
arpl
jbe
sub
and
push
push
mov
js
pop
push
popf
decl
mov
out
xor
push
out
and
xchg
ja
hlt
xor
mov
and
ljmp
clc
push
cmpsb
cltd
inc
sub
push
pop
inc
sbb
fldenv
addl
dec
mov
iret
shr
mov
lahf
pushl
jmp
inc
cmpsl
xor
add
clc
out
testb
push
aad
dec
jnp
decl
lock
or
adc
adc
lods
jns
ljmp
popa
sbb
data16
hlt
fisttpll
push
sbb
push
cli
fidivl
loopne
pop
cmp
add
fists
xor
fcoml
jne
mov
cld
pop
mov
mov
test
std
push
push
xorb
or
push
hlt
aaa
shrb
inc
or
pop
icebp
ljmp
cmp
sbb
dec
xor
sbb
adc
ljmp
sbb
dec
fmull
mov
push
push
push
mov
cmp
lock
ss
data16
incl
adc
or
sahf
je
movsb
icebp
sbb
test
jl
setg
or
incl
pop
dec
insb
dec
xor
push
scas
pop
int
sub
dec
and
pop
fadd
jbe
jmp
jg
in
iret
xor
xchg
push
adc
jb
dec
test
fdivr
mov
enter
mov
push
shll
adc
xchg
lods
dec
repz
daa
outsl
addb
mov
inc
cmpsb
sahf
mov
sbb
pushl
adc
mov
lock
mov
push
into
ds
lret
std
mov
incl
aad
sahf
mov
fcoms
jno
leave
adc
push
adc
inc
mov
mov
frstpm(287
std
jg
adc
add
test
jnp
push
mov
xor
fmull
xchg
inc
jns
jns
outsl
mov
ljmp
and
cmp
adc
int3
insl
xor
dec
pop
loopne
jb
fbstp
imul
pop
shr
icebp
incl
mov
jmp
sub
out
stos
loop
sbb
fcomip
call
push
test
arpl
scas
loop
gs
or
ljmp
adc
jae
add
lret
pop
out
cmp
cmp
leave
inc
inc
fadds
lret
cmp
stos
test
cwtl
inc
repz
faddl
sub
lahf
inc
test
cli
decl
outsl
xchg
popf
call
fistps
inc
jle
fsts
cs
pop
jg
inc
sub
clc
inc
test
sbb
data16
adc
lcall
or
dec
les
mov
push
mov
test
in
cs
xorb
leave
dec
movsl
mov
pop
cmpsb
inc
imul
push
mov
scas
popf
aas
mov
call
mov
cmp
int3
push
loop
in
sar
xor
bound
xchg
mov
lcall
inc
aad
fsubl
sahf
int
lods
scas
das
push
push
dec
ret
jg
out
test
sahf
mov
jo
xchg
pop
mov
mov
mov
fstp
call
in
adc
fildll
mov
test
xor
sbb
out
fldpi
jmp
inc
pop
in
test
and
enter
lock
dec
cli
mov
pop
repz
add
push
inc
jmp
decl
fildl
clc
icebp
sub
cmp
inc
sub
dec
test
int3
call
inc
xor
inc
xchg
je
ss
lcall
cmp
in
insl
mov
mov
add
test
mov
call
mov
inc
popa
shlb
cs
lods
insl
lret
add
xor
call
inc
sub
rcll
insb
outsb
out
mov
dec
sbb
or
es
add
mov
pop
cmc
call
or
mov
pop
mov
inc
xor
fsub
imul
xor
dec
or
adc
aam
hlt
push
mov
push
dec
jmp
pushl
adc
add
lret
mov
jp
jns
es
pusha
loop
jmp
scas
cmc
inc
pop
imull
mov
icebp
mov
je
jnp
filds
jp
adc
orb
lahf
mov
clc
sbb
jmp
mov
cmp
shl
xor
ret
push
adc
pushf
dec
mov
mov
sbb
les
push
pop
or
push
jne
mov
jmp
sub
or
sbb
lcall
push
out
in
or
xor
icebp
mov
jg
and
fmull
dec
fsubrs
fdiv
lcall
push
call
lock
lahf
jbe
adc
jne
pushl
mov
dec
outsl
imul
jbe
xchg
xlat
xchg
andl
xchg
call
sahf
push
jmp
inc
cmpsl
push
and
dec
adc
xor
int3
in
sar
fldl
lock
and
sub
pushf
ds
outsl
or
icebp
incl
imul
flds
or
lock
negl
fs
jnp
orb
ljmp
push
testb
add
pop
jecxz
xchg
shrl
pop
shrb
shl
lret
inc
movsl
mov
cmp
mov
mov
roll
inc
sahf
lea
inc
icebp
imul
fists
call
sti
add
fcoml
lods
insb
into
push
out
filds
ss
jle
cmp
aad
sbbb
test
mov
movsb
xchg
int3
sub
das
gs
cmpsl
dec
pop
add
push
sub
iret
loop
and
xor
mov
push
xor
add
ljmp
lods
pop
divb
jb
btc
mov
aas
dec
mov
mov
xor
and
fisttps
decl
sahf
leave
jo
rolb
adc
cmp
jg
lret
hlt
or
pop
jle
mov
call
push
je
or
sahf
loopne
inc
xorl
loop
sbbb
jmp
fstpt
shll
pop
icebp
and
fimuls
jbe
mov
jo
ljmp
sbb
xor
pop
mov
or
jns
add
or
test
dec
into
and
test
movsb
idiv
int
icebp
nop
mov
fdivrp
cmp
fcmovnu
xchg
pushl
ret
scas
imul
pushf
and
sbb
adc
gs
and
decl
scas
scas
aas
clc
pop
pop
jle,pn
or
mov
xchg
or
lods
aad
insl
movsb
push
decl
push
pop
xchg
ljmp
mov
cmp
and
enter
pop
pop
shll
xchg
adc
add
decl
mov
roll
xor
xchg
mov
imul
fsubl
in
cltd
popl
sbb
in
pop
stos
push
pop
mov
aad
hlt
mov
mov
imul
fisubs
dec
aaa
xchg
push
outsl
cltd
outsb
cmp
lcall
cmp
mov
shl
sub
cmp
test
popf
jl
mov
mov
fisttps
in
add
push
dec
fnstsw
and
pop
sub
loopne
adc
pop
or
daa
test
xor
ljmp
lahf
ljmp
jnp
rolb
hlt
movsb
sbb
add
xchg
sbb
push
sahf
and
pusha
or
les
inc
incl
or
hlt
adc
cmp
stos
sub
sub
in
push
bound
stos
pushl
in
xlat
xor
ja
imul
sahf
scas
adc
push
dec
cwtl
push
lcall
gs
neg
add
je
jl
cs
sbb
add
inc
dec
xor
call
lock
adc
fdiv
xor
sub
cmp
mov
and
ss
mov
inc
sar
jg
dec
xchg
jns
fwait
pop
jns
outsb
pop
sbb
and
xchg
dec
out
inc
out
int
jl
icebp
xor
ret
stos
pop
outsl
jne
push
and
fsubs
push
lock
xchg
sub
cwtl
push
cwtl
dec
je
xchg
mov
stc
rcl
dec
sub
xchg
push
mov
lock
out
mov
aas
popf
and
mov
ljmp
mov
insb
test
jb
rcrl
pop
lds
out
and
lcall
mov
or
push
lods
push
xor
sarw
leave
sti
test
lock
mov
dec
loope
incl
clc
rcll
xchg
and
scas
enter
decl
mov
push
jae
aam
outsb
js
addr16
jo
sub
nop
clc
jg
mov
hlt
cmp
pop
mov
and
add
jle
enter
inc
sbb
pop
xor
xorb
incl
or
jno
mov
ret
jnp
push
push
fwait
iret
test
adcl
ljmp
and
jl
imul
fnstenv
in
sbb
gs
arpl
cli
pop
or
std
fidivl
pop
popf
icebp
ficompl
fs
mov
add
inc
jmp
dec
scas
jge
shrl
cmp
cs
pop
inc
fwait
jo
add
or
push
test
out
xchg
lcall
movsl
insl
hlt
insb
pop
iret
addr16
lods
push
push
adc
and
lcall
outsb
inc
or
popf
lea
jg
lods
aas
xor
stc
fmull
dec
pop
pushl
sbb
xchg
and
mov
sub
out
pop
mov
xchg
or
mov
and
imul
stos
fmuls
adc
repz
cmpsb
pop
inc
popf
inc
jb
mov
iret
xchg
xor
call
and
fucomp
lods
fldenv
aam
dec
cwtl
inc
and
add
dec
or
shrb
or
cmpsl
shl
sbb
shl
dec
adc
xor
ljmp
jg
mov
pusha
mov
in
cli
out
rolb
movsl
adcl
ret
adc
loope
clc
ja
mov
adc
mov
insb
mov
sti
mov
inc
iret
sbb
push
into
mov
jecxz
outsl
sbb
dec
mov
xchg
jmp
mov
jg
cmc
cld
jg
outsl
jl
dec
cmpsb
pop
adc
js
ss
jno
mov
jmp
dec
out
dec
std
add
pushf
push
pop
ret
and
push
loopne
push
lret
test
lea
sub
jmp
ljmp
cmpsb
inc
cli
inc
jle
call
mov
sub
in
leave
pop
cmpsb
xchg
xchg
cmp
in
cmp
xor
ficomps
call
fmuls
cmp
cmp
mov
out
repnz
push
xchg
or
sbb
cld
sub
add
repnz
lcall
insb
xchg
jp
inc
xchg
lods
dec
add
outsb
lock
popa
scas
movsl
mov
loopne
lock
divb
dec
sub
test
ret
test
mov
in
call
cmp
dec
xchg
pushf
mov
fnstcw
addr16
dec
mov
xor
in
sbb
cmpsb
addl
or
insl
sub
ljmp
cmp
jle
pushl
dec
scas
mov
test
push
rclb
jno
mov
pop
enter
idiv
ljmp
pusha
cltd
jae
mov
xchg
sub
test
and
dec
sbbb
fcoml
dec
in
lock
mov
cmp
out
nop
sahf
mov
dec
and
mov
inc
sbb
xlat
testl
lea
push
jae
fcomi
adc
dec
ljmp
inc
cld
insb
inc
lods
fnsave
std
in
imul
fdivr
cmp
lret
xchg
push
cmp
mov
pop
clc
in
gs
inc
sbb
push
pop
push
sti
or
rcll
fistpll
and
mov
mov
cmp
sahf
fcmovne
mov
push
xchg
or
adc
mov
int3
pusha
lea
movsl
paddw
mov
aaa
xchg
push
cmp
dec
push
push
xchg
cmc
out
jecxz
pusha
xchg
dec
sub
push
mov
scas
es
lcall
push
xor
scas
inc
sub
stc
sbb
ss
movsl
lret
icebp
or
loopne
jmp
cmc
mov
pushf
arpl
jnp
lds
jo
out
bound
dec
nop
adc
mov
mov
cmpxchg
jg
inc
add
cmc
pop
dec
add
test
jg
fadds
bound
mov
adc
ret
lods
bound
out
insb
loope
pop
mov
xor
lcall
notb
push
dec
dec
sarl
mov
adc
popa
popa
xchg
push
ljmp
sub
or
enter
adc
or
fnsave
jns
adc
cmp
mov
std
das
shlb
mov
movsl
sbb
jmp
es
shlb
jle
pop
gs
aad
lea
mov
push
scas
arpl
cmc
adc
loopne
pop
loopne
clc
inc
aam
xchg
xlat
test
and
inc
adcb
lcall
insb
mov
cwtl
fwait
fwait
outsl
jp
test
jns
rcrb
adc
call
jle
or
clc
ja
mov
dec
and
dec
test
das
mov
ds
imul
dec
call
sbb
add
jp
push
push
inc
push
mov
add
scas
repz
push
xchg
rcrb
movsbl
sbb
imul
add
mov
mov
shrb
fldcw
insb
outsl
rorb
stos
sbb
lds
movsl
ljmp
iret
jmp
int
add
xchg
xor
loop
xchg
jb
cmp
ljmp
push
lods
sbb
movsl
push
pop
add
jg
push
data16
cltd
jg
outsb
ljmp
sti
pop
call
sahf
mov
lock
sbb
int
cmp
cmp
fldcw
xor
push
sub
mov
outsl
xchg
jge
lea
loop,pt
push
out
sub
into
icebp
cmpsb
mov
loop
xchg
and
push
shlb
dec
mov
mov
fcompl
pop
scas
mov
xor
in
adc
imul
inc
or
sti
pop
jecxz
add
sbb
adc
outsl
daa
stc
arpl
aaa
cld
push
clc
cli
mov
mov
and
cli
cwtl
out
add
pusha
out
mov
daa
jmp
xor
add
dec
mov
push
xor
scas
inc
cmpsl
cmp
add
sarl
clc
in
ret
xchg
or
mov
pop
xorl
inc
mov
lods
sub
lods
imul
pop
aad
jae
loope
popa
dec
lea
ljmp
in
dec
pushf
xor
out
inc
decl
arpl
in
cwtl
test
loope
fs
xor
or
jmp
push
psraw
stc
push
in
dec
mov
push
sbb
pushl
shrl
pop
cmp
into
imul
loope
flds
stos
cmp
or
out
outsb
mov
pusha
imul
adc
sub
cs
and
decl
test
xchg
xchg
dec
cli
or
cld
out
add
in
nop
sub
jo
and
imul
cmpsl
mov
and
mov
lcall
imul
pop
inc
mov
inc
shll
sbb
add
add
jmp
jecxz
xor
mov
pop
lods
sub
lcall
sub
or
sbb
mov
cmp
cwtl
add
sbb
mov
mov
ljmp
jecxz
mov
gs
sub
decl
inc
push
mov
ja
iret
inc
xor
xor
dec
jns
xchg
mov
ljmp
sti
jle
test
es
xchg
cs
dec
fstpt
xchg
pop
std
pusha
fisubrl
out
cmp
xchg
push
lcall
jbe
sub
fnstcw
sarl
add
outsl
scas
adc
adc
ds
hlt
jl
mov
push
adc
fidivs
in
leave
add
mov
inc
mov
adc
cmp
push
idivl
or
les
incl
in
lea
cmpb
mov
cwtl
incl
enter
fwait
sbb
out
jge
testb
and
cmp
jae
push
das
pushl
sar
popf
aam
and
mov
inc
and
into
add
mov
sub
dec
cld
stc
data16
gs
mov
lods
sub
mov
inc
loop
int3
outsl
mov
mov
jns
shl
call
jecxz
push
ds
xchg
and
xor
out
jge
mov
decl
sub
pop
jge
js
das
xchg
lods
fs
imul
pushl
movsb
nop
nop
mov
std
push
stos
js
sbb
daa
xchg
xchg
mov
hlt
fistl
fdivr
inc
dec
mov
push
je
loope
add
inc
lcall
dec
adc
das
adc
xchg
in
insl
cmc
mov
ljmp
fidivs
iret
mov
fs
inc
stos
mov
dec
idivb
repnz
enter
incl
negl
xor
fadds
je
in
mov
cli
outsb
gs
dec
fildll
sti
loop
sbb
in
mov
and
push
mov
enter
mov
imul
clc
pop
sbb
pop
jns
sbb
shll
andb
sub
call
ja
pop
stos
sbb
cmp
shll
adc
jl
decl
mov
lret
aaa
nop
icebp
iret
rcrl
popf
push
ret
xor
push
or
in
call
sbb
dec
mov
and
imul
push
add
decl
lret
daa
sub
lret
stos
popa
enter
dec
xlat
jmp
mov
adc
push
xor
lahf
into
push
lret
hlt
sbb
pop
lcall
call
jle
push
cmp
pop
pop
pop
sub
pushl
movnti
pusha
push
in
mov
sbb
enter
lock
nop
add
js
orl
pop
cltd
test
and
popf
dec
jne
fcompl
inc
mov
insl
hlt
mov
out
ficomps
fcomip
lcall
leave
add
test
ss
mov
and
cmp
les
js
xchg
popf
imul
sub
jo
xor
pop
andb
mov
dec
mov
xlat
jo
cmp
sub
sub
mov
cld
mov
xor
lcall
sbb
xchg
mov
mov
movsl
hlt
es
sti
mov
pop
hlt
incl
movsl
cmp
cmp
mov
cmp
mov
test
mov
iret
jne
mov
dec
rorb
pop
pop
mov
or
push
push
loopne
pop
aas
imul
leave
clc
jmp
mov
sbb
dec
lock
imul
lds
mulb
add
out
pushf
aaa
orb
sbb
or
mov
mov
push
mov
xlat
and
int3
call
std
fisubrl
sarb
fistps
cmc
cmp
jecxz
mov
movsb
push
and
pushl
and
loop
inc
lahf
jo
test
or
cmpsl
push
into
cwtl
mov
imul
adc
xchg
push
loopne
out
pop
pop
sub
es
xor
inc
out
orl
jne
add
xchg
xchg
push
insl
test
adc
cli
mov
subb
lcall
lcall
out
push
jmp
mov
daa
or
aam
fsubl
arpl
aaa
and
and
mov
stos
sub
ljmp
jno
sub
lds
xor
xor
fsubp
pop
call
call
or
adc
pop
pop
and
lea
lcall
inc
aaa
dec
in
cwtl
push
cmc
ficomps
cmp
rcrl
cltd
lahf
test
imul
pop
lcall
cmp
js
push
inc
nop
sub
cmp
sbb
iret
adc
jmp
xchg
lret
std
pop
jno
mov
lds
sub
push
loope
iret
call
cmpsb
sub
scas
das
pushl
mov
jae
popf
cmpl
mov
out
inc
inc
mov
lock
in
or
cmp
jle
testb
dec
push
push
enter
and
out
les
mov
into
push
dec
or
pop
fldt
lcall
adcb
mov
outsb
mov
xor
mov
ss
shlb
pop
or
stos
rcl
and
clc
ljmp
loope
pop
orb
jl
addr16
orb
or
push
fisubl
and
and
js
stc
push
mov
xchg
jecxz
add
dec
pop
push
pop
jmp
lock
mov
aaa
cltd
sbb
insl
or
mov
decl
mov
sub
mov
push
rcll
xor
and
xchg
jg
jg
iret
push
cmp
fdivrl
mov
push
inc
rclb
adc
decl
push
mov
cwtl
mov
insl
sbb
mov
add
mov
push
decl
mov
hlt
or
mov
pop
shlb
fs
decb
adc
push
lret
in
add
inc
test
mov
hlt
mov
sub
dec
or
cmpsl
sbb
inc
push
scas
inc
adc
and
pushl
sub
sbb
pop
jno
or
push
loopne
std
decl
mov
call
xchg
test
sub
push
stc
and
pushl
mov
lods
xchg
lahf
xchg
les
lcall
notb
jmp
add
ret
cmp
mov
je
scas
int3
xchg
push
clc
push
sbb
ljmp
mov
repz
pop
divb
fdivl
or
mov
adc
imul
pop
cli
mov
mov
leave
enter
sbb
insl
mov
das
mov
mov
ret
decl
push
enter
or
les
lcall
ds
dec
add
and
jae
jmp
xchg
shl
cwtl
inc
fwait
ror
cmpsl
add
ja
ds
mov
popa
ret
stos
jno
sub
push
icebp
jg
fisubl
out
jbe
rolb
push
std
lahf
jbe
push
sbb
xor
mov
jo
pop
stc
sahf
mov
ljmp
push
hlt
and
xchg
fstp
push
in
and
loop
mov
mov
xchg
cwtl
mov
lcall
sahf
lahf
push
int
fwait
or
push
mov
fmulp
ds
xor
lods
int
pop
fdiv
call
adc
repz
outsb
nop
arpl
int
cmp
decl
pop
mov
fnstsw
xchg
mov
xchg
ret
das
dec
ret
mov
incl
testb
aam
mov
pop
jb
add
jge
sar
ljmp
loop
test
clc
shll
fcom
aaa
inc
jnp
push
incl
push
push
pusha
insb
push
dec
andb
and
mov
jmp
xlat
pop
aaa
test
add
dec
cld
mov
fwait
shll
aad
sub
mov
xchg
sahf
loope
jle
in
in
jo
cmc
mov
cli
lahf
pop
jo
outsb
pop
out
data16
out
cli
jg
adc
enter
push
ljmp
mov
insl
pop
jg
in
out
shrl
mov
sbb
sahf
pop
dec
clc
push
jne
ss
lcall
enter
cs
sub
jp
adc
div
mov
jmp
gs
test
repnz
test
push
xchg
mov
adc
and
jnp
jo
inc
loop
mov
pop
icebp
mov
jle
dec
sub
push
and
and
push
mov
call
dec
clc
jmp
rcl
push
jns
sub
or
or
push
loop
pop
jno
cmp
cmp
es
add
sub
or
clc
pushl
push
hlt
pop
cmpb
mov
or
mov
sbb
cmp
xlat
cld
sbbl
inc
xor
push
add
pop
mov
stos
cs
clc
mov
call
xor
sbb
call
push
push
gs
pop
and
inc
jl
fadds
ljmp
inc
push
aas
fbld
arpl
pop
bound
data16
scas
pop
addr16
ljmp
or
pusha
jge
insb
mov
jge
fs
repnz
cmp
decl
lock
pop
xchg
add
jae
mov
jnp
psubsb
pushl
imul
decb
shlb
hlt
inc
std
sub
hlt
aaa
jp
mov
popa
and
rcrl
and
stos
cmp
mov
lcall
dec
or
jno
or
fiaddl
sarl
push
jae
sub
push
push
inc
xchg
xchg
jmp
cmpsb
sbb
sbb
test
push
scas
sbb
loop
inc
lds
lods
xchg
test
aaa
adc
pushl
cmc
or
out
push
cmp
test
outsl
ret
shlb
xchg
cmc
mov
aaa
cld
lcall
mov
ret
adc
popf
stos
or
xchg
out
cmpsb
adc
popf
ds
out
clc
lcall
sbb
das
cmpsb
mov
hlt
sbb
xor
mov
or
data16
das
rep
push
out
pop
xor
pop
jecxz
adc
jge
xor
es
push
xor
and
or
incl
mov
loopne
adcl
repz
rcr
hlt
imul
mov
hlt
jg
push
sub
incl
ret
hlt
add
adc
sbb
push
aas
lods
mov
dec
in
jnp
repz
xchg
push
pushl
test
jns
sub
adc
mov
xchg
jnp
dec
repz
add
add
jns
mov
out
pop
mov
int3
jg
jnp
adc
insb
or
scas
call
nop
dec
cld
adc
mov
fcoms
xchg
mov
xor
stos
xor
fcoms
mov
call
pop
or
scas
pop
pop
mov
cmp
inc
pop
je
decl
adc
je
pop
jbe
ret
jmp
repnz
add
fimull
popf
xchg
jb
fwait
iret
jbe
pop
push
jae
push
jmp
call
sub
pusha
pop
inc
vmovdqu
mov
pop
les
int
mov
mov
ret
push
shrb
mov
and
cmpsb
pusha
loop
and
ljmp
mov
push
adc
push
adc
ljmp
mov
mov
sahf
push
jp
movsl
mov
outsb
daa
aas
adc
push
adc
push
sar
cli
push
push
outsb
or
cmpsl
mov
test
out
arpl
pushl
adcb
fldt
movsl
pop
cli
sbb
push
push
push
xchg
out
jmp
and
push
mov
add
dec
dec
xchg
xchg
adc
and
fbld
loope
pop
pop
into
dec
lea
cmp
jl
jle
sti
iret
mov
pop
clc
imul
sahf
add
scas
adc
xor
loopne
loopne
cli
pop
xchg
loop
lock
or
dec
pushf
cmp
jg
sub
mov
sub
fistpll
or
sti
icebp
rcl
or
xchg
xor
inc
clc
movsl
clc
popf
jg
xchg
das
shrl
push
or
lcall
aam
ret
jle
mov
push
ficomps
loop
imul
pop
jns
rcl
fcomip
lcall
repz
out
rcr
inc
mulb
push
mov
add
push
adcb
add
mul
ljmp
add
jl
or
lret
push
dec
aad
jmp
clc
jmp
cmpsb
out
movsl
push
mov
std
pop
mov
mov
xchg
add
mov
repz
mov
loope
decl
pop
inc
jns
shlb
dec
stos
decl
popa
push
jnp
ljmp
mov
mov
imul
enter
push
outsb
clc
clc
fld
faddl
fstps
outsb
test
xor
add
push
dec
mov
mov
mov
dec
into
repz
nop
mov
lret
stos
pop
stc
gs
fs
inc
add
ljmp
ret
pop
ljmp
push
mov
shll
jge
movsb
mov
add
cmc
and
daa
xchg
push
mov
cs
adc
incl
loopne
insl
push
and
cmpsl
and
push
xchg
dec
js
xchg
add
arpl
xor
xor
mov
idivb
js
add
stc
jns
fiaddl
mov
dec
cli
push
sub
fst
add
sbb
sbb
adc
mov
lcall
cmp
insl
push
or
dec
sahf
cmpsl
dec
sub
jge
or
xchg
pop
pop
dec
stos
decl
lock
mov
sbb
repz
jno
xlat
xchg
mov
push
cli
inc
or
mov
mov
adc
jnp
xchg
out
popa
ds
lret
xchg
int3
jae
mov
push
outsl
daa
lret
dec
add
cmpsb
in
or
mov
inc
loopne
mov
cld
les
push
fwait
jg
jmp
test
mov
cltd
add
mov
lcall
lret
out
mov
adc
cmp
inc
xbegin
orb
aaa
xchg
es
jnp
sti
push
loope
fidivl
leave
and
xor
fwait
incl
mov
out
sbb
dec
clc
push
jno
mov
hlt
lcall
arpl
mov
and
push
in
test
lock
pushl
cmpsl
les
jb
mov
stos
dec
jne
test
pop
dec
or
std
lcall
add
into
clc
xor
loop
cltd
jns
lods
mov
adc
ja
clc
insl
ud0
sub
xlat
xchg
in
sub
test
pop
decl
jnp
adc
mov
sahf
test
pushl
jmp
ret
sub
aas
or
add
ja
add
add
lcall
adc
sub
mov
insb
sbb
fnstcw
jl
outsb
repnz
icebp
jg
mov
sarb
testl
inc
ljmp
rol
jl
lahf
jl
testl
ds
or
sbbl
pop
into
fldt
inc
popf
xor
pop
xorl
lcall
xabort
jle
nop
sub
ficoml
daa
int
aaa
lret
cmpsl
and
pushl
call
lahf
ss
popa
aad
mov
mov
lea
loopne
dec
and
incl
ljmp
lods
das
and
int
sahf
mov
push
lret
lret
jg
push
mov
popf
in
xchg
aam
sub
mov
inc
movsl
dec
pushf
test
lret
das
mov
insb
cmc
jecxz
push
gs
jle
bound
jg
mov
mov
addr16
push
jge
dec
xchg
jbe
cmp
jle
xchg
push
es
sbb
das
addr16
pop
cmp
repz
xchg
or
mov
fcmovnb
lds
sar
ja
push
mov
in
jecxz
iret
and
pop
addb
decl
je
mov
pop
mov
ljmp
stc
sub
into
cld
ljmp
mov
push
std
call
negl
lcall
out
int3
loope
adcl
out
clc
mov
mov
sub
adc
or
jmp
sbb
in
jmp
xlat
push
ja
addr16
insl
fs
push
inc
shll
out
sahf
cmc
mov
push
jae
insb
mov
mov
addb
decl
aad
aad
aaa
jb
inc
push
addr16
ljmp
enter
pop
cmc
fstp
lock
add
pop
dec
cli
shrb
leave
mov
aad
jo
ljmp
loope
aaa
shrb
sub
push
inc
add
pop
cmpsl
fadds
fwait
pushl
pop
mov
fucom
pop
jo
orl
orb
xor
push
popa
mov
decl
je
out
cmp
pusha
xor
and
sbbb
call
lret
mov
mov
sbb
mov
jge
incl
in
sbb
push
stos
sarb
decl
dec
cld
mov
fmull
or
jbe
daa
ret
loop
jl
and
stc
femms
ds
addr16
mov
pop
sub
jmp
push
mov
sbb
or
fdivs
iret
cmp
sub
xchg
sbb
rcll
cmp
xor
sbb
aad
out
xchg
subl
cmpsl
xchg
popf
out
sub
stc
es
arpl
aad
dec
xor
test
push
jno
pop
incl
jecxz
push
xor
scas
scas
dec
inc
push
push
mov
je
xchg
mov
roll
inc
jmp
xchg
add
pop
jge
jb
int3
push
dec
imul
adc
cmp
lcall
scas
adc
jle
adc
insl
popa
mov
or
sub
jnp
push
rorl
and
dec
mov
push
and
adc
or
push
xchg
enter
jmp
scas
add
jge
mulb
ja
xchg
lret
push
ja
pop
and
push
fnstenv
push
xor
or
jns
pusha
stos
out
sti
out
in
pop
adc
sub
decl
lea
jl
jp
dec
bound
popf
in
fbld
dec
lea
lahf
dec
mov
dec
outsl
cmp
push
adc
sub
lcall
int
xchg
jne
jg
adc
ljmp
pusha
cli
dec
mov
icebp
pop
cltd
sbb
cmp
pushl
icebp
mov
cmp
sbb
jecxz
test
cmc
jp
lahf
ret
rol
inc
sti
shrl
ds
cmpsb
cltd
cmp
jge
hlt
and
call
fbstp
pop
fisubrl
mov
lahf
out
out
rolb
dec
ljmp
xchg
iret
mov
add
add
adc
mov
mov
cmc
mov
sbb
push
sarb
cli
mov
test
mov
xchg
push
xchg
push
idivl
xchg
fwait
jmp
adc
ds
sub
xor
dec
cwtl
bound
decl
lea
call
pop
in
add
movsb
dec
cli
mov
or
mov
cltd
jno
pop
cld
xor
test
cs
ror
in
hlt
pop
push
ffreep
adc
jge
push
xlat
mov
pusha
sbb
arpl
fcoms
mov
loopne
xchg
mov
inc
jne
sar
incl
xchg
and
outsl
sub
cmpsb
push
add
rcrl
leave
jmp
jecxz
pop
jmp
mov
into
sub
lods
or
xchg
in
jnp
push
cltd
shrb
aad
and
dec
cmp
push
jge
enter
icebp
call
sub
stos
jo
movsb
lret
push
ljmp
pop
into
movsl
cwtl
jbe
inc
pop
sbb
mov
decl
fcoms
fs
mov
in
ja
push
pushf
mov
ss
pushf
add
xor
pop
mov
xchg
sbb
pop
pushl
pop
ret
bound
lahf
pop
add
ficomps
cwtl
dec
mov
jno
jb
mov
fstps
insl
inc
jne
jl
in
and
lret
add
push
and
or
or
fs
js
sarl
test
aaa
lods
inc
aam
pop
jmp
out
cli
ja
pop
xchg
cli
jbe
jno
mov
jl
pop
cmp
std
push
ja
std
jb
jp
add
and
mov
lds
repz
repz
fs
sti
mov
js
add
ljmp
cmc
mov
movsl
pop
mov
pushl
push
adc
mov
sbb
cmp
xchg
xchg
es
push
loop
mov
xchg
out
jg
incl
aaa
andb
inc
clc
mov
push
sbb
popf
cmc
pop
push
js
xor
cmp
decl
inc
dec
inc
maxps
inc
sub
ret
fisttpl
pop
orb
les
adc
call
pop
xor
sbb
xor
adc
lods
xor
cmp
out
mov
mov
lret
mov
imul
dec
jne
mov
incl
outsl
xor
jle
repnz
out
sbb
sar
add
movsl
pusha
loop
orb
decl
stos
xchg
outsb
add
testl
pusha
jns
inc
pop
knotb
and
push
fisubs
ljmp
rolb
mov
sub
cmc
sahf
insl
mov
pushf
or
loop
sar
incl
es
xor
push
in
ja
xchg
add
mov
mov
jmp
insb
ljmp
inc
mov
aas
mov
faddl
adc
mov
sub
mov
cmpsw
xor
fistpll
pop
aam
cltd
fldenv
sub
inc
decl
jge
sbb
sbb
lret
rcrb
dec
les
and
sub
lret
decl
lahf
pop
jne
mov
stos
fisubrl
pop
ss
sti
jecxz
leave
sub
sub
sar
incl
ss
inc
push
jbe
out
pop
jl
pop
adc
js
push
inc
sahf
scas
push
jo
jg
jl
xchg
mov
or
incl
jle
mov
je
mov
mov
xchg
mov
push
pop
cmp
inc
mov
xor
andl
subb
pushf
cmc
incl
jo
pusha
add
sti
sub
stos
pop
subl
mov
mov
cmpsb
push
idiv
lcall
add
sbb
lcall
ret
int3
shll
fwait
outsb
xchg
test
or
mov
les
decl
mov
rcrl
stc
es
lea
pop
dec
pop
dec
push
movsb
xor
cltd
xchg
lret
pop
pushl
repz
and
cmp
subb
mov
scas
pop
or
xor
mov
inc
test
xor
call
repnz
pop
cmp
idiv
xchg
mov
mov
and
push
gs
cli
inc
outsl
decl
fs
scas
jno
sbb
movsb
jno
xor
repz
sti
mov
ljmp
sub
jo
data16
jo
sti
cmc
imul
enter
jmp
sar
jmp
mov
push
rcrl
pop
pop
stos
std
push
nop
or
dec
sarb
xchg
jnp
mov
fmuls
shll
stos
cmp
lret
repnz
jmp
pop
fistpll
repz
jp
imul
xchg
jp
add
cmpsl
loope
fisubs
icebp
lcall
insb
lods
sbb
cmpsl
les
dec
fstl
adc
mov
in
repnz
fsubp
jecxz
dec
call
or
jno
mov
dec
inc
mov
stos
xor
jecxz
ficomps
dec
inc
mov
incl
push
inc
mov
cmp
adc
mov
xchg
add
inc
icebp
test
pop
and
das
pop
jns
scas
aas
cmpsb
dec
inc
in
push
cld
lcall
dec
and
mov
sarl
in
repnz
and
call
push
sub
jb
adc
sbb
and
lods
dec
mov
jg
pop
add
adc
mov
push
pop
dec
ds
adc
mov
push
lea
mov
iret
stc
cmpsl
jne
fstpl
adc
xor
ret
ljmp
lods
jae
dec
ud0
push
jg
push
add
cltd
mov
and
shr
cwtl
add
int
jg
in
enter
jmp
ret
fsts
dec
jno
push
aad
das
rorl
pop
cmc
jnp
sbb
push
ljmp
mov
shl
cmp
cmp
adc
and
mov
inc
jo
cmp
popa
sbb
xorb
lcall
out
jne
jmp
pop
dec
mull
lds
les
inc
adc
iret
outsl
dec
inc
mov
in
enter
xor
mov
lock
or
or
jmp
push
jbe
cwtl
std
jae
add
lahf
push
adc
mov
popf
xor
sar
mov
sbb
int3
mov
insl
pop
sbb
sarb
add
ljmp
xchg
add
cmp
clc
or
push
lea
fiaddl
roll
cld
mov
or
cmpsl
inc
pop
jns
orl
ljmp
stc
adc
mov
bound
pop
inc
sar
sub
test
scas
imul
std
mov
mov
adc
ret
mov
arpl
cmp
call
dec
jbe
into
fdivrs
imul
mov
or
outsl
adc
lcall
adc
dec
lcall
pushl
out
rclb
push
sbb
mov
dec
addr16
and
lock
pushl
jns
adcb
and
xchg
pop
cld
or
js
popf
mov
dec
push
loop
fbld
dec
sbb
bound
pop
mov
xor
mov
ljmp
int3
in
jns
mov
loope
rol
adc
adc
bound
dec
pop
mov
mov
pop
scas
incl
mov
inc
mov
ds
fmulp
aas
mov
push
sti
jmp
out
arpl
sub
fsubrs
decb
mov
loope
and
mov
sbb
sbb
or
cld
sub
xor
fwait
rcl
dec
inc
pusha
iret
mov
pushf
rorb
pop
cmpsb
push
es
bound
pushl
xor
lea
adc
jmp
daa
scas
jmp
adc
clc
test
rcl
sbb
dec
inc
pushl
std
ret
mov
jne
fwait
into
push
pop
out
xchg
arpl
mov
jle
jg
xchg
lcall
and
inc
jbe
test
cmp
push
mov
fidivrs
push
mov
dec
int
cld
cli
int3
pop
decl
pop
xchg
mov
inc
aam
rorl
lock
decl
dec
push
pop
les
mov
je
mov
fisttps
mov
push
fbld
mov
fcomps
or
insb
jg
jp
mov
pop
sbb
and
dec
sub
sbb
mov
data16
mov
lods
adc
clc
incl
inc
jno
mov
jbe
xor
jl
out
jns
jg
and
add
xor
mov
pop
divb
fisubs
jo
call
or
int
decl
push
shl
mov
test
inc
pop
fcompl
xor
mov
pop
enter
inc
dec
pop
insb
lahf
xchg
lock
loop
sub
xchg
sbb
fwait
fs
jae
jnp
out
test
aaa
inc
movsb
and
inc
js
in
and
es
mov
out
scas
xchg
sbb
aas
roll
push
sar
cmp
iret
add
sbb
cmp
repnz
test
lock
les
add
repz
ljmp
rcrb
push
repz
mov
xchg
lods
mov
lds
push
adc
ljmp
cmp
dec
lret
fmull
stos
adc
cmp
fldcw
mov
xor
addr16
mov
dec
loop
push
das
lcall
add
dec
movsl
imul
lock
lods
inc
fsubs
fs
adc
aaa
push
std
mov
ss
inc
xor
scas
in
lcall
pop
clc
decl
notl
adc
test
aaa
mov
sbb
out
js
inc
int3
mov
jne
rorl
mov
lcall
jl
cwtl
mov
mov
and
mov
adc
enter
inc
mov
mov
inc
jg
dec
movsb
mov
stc
push
idiv
mov
int
fisttps
or
lds
into
insl
xor
jmp
shlb
lcall
mov
sbb
rclb
std
mov
jmp
das
fsubs
pop
adc
test
pop
xchg
adc
stos
jp
ljmp
pop
inc
stos
pop
lahf
xor
add
ret
mov
dec
sub
repnz
adc
pushl
sahf
cwtl
into
cmc
fidivs
cld
insl
shrl
mov
sub
add
daa
in
daa
or
sbb
std
xor
sbb
or
mov
cwtl
mov
bound
jle
and
sbb
mov
ljmp
xchg
mov
add
out
repnz
dec
inc
push
mov
not
push
sbb
imul
adc
or
int
sbb
arpl
inc
mov
sahf
sbb
adc
mov
mov
call
push
xchg
or
icebp
push
push
sub
jmp
mov
adc
mov
jle
fcomip
push
add
mov
divl
pop
mov
push
pushl
add
mov
sbb
fiadds
into
jg
in
xor
iret
adc
jns
jnp
shll
or
jo,pn
insl
jg
add
out
pop
pop
sahf
mov
sete
insl
scas
xor
or
aam
push
and
dec
daa
sub
mov
pop
clc
out
or
loope
push
dec
jle
sub
loope
pushl
mov
push
pop
mov
cld
hlt
jmp
mov
fucom
dec
and
loopne
decl
ljmp
aas
in
dec
adc
ret
xchg
cmp
jno
iret
mov
icebp
iret
cs
lret
outsb
mov
and
dec
push
or
nop
std
shll
data16
push
xchg
mov
fldenv
mov
xchg
in
call
std
push
test
and
mov
clc
orl
ficoms
or
pushl
inc
push
test
std
addr16
scas
mov
jb
or
test
out
lret
call
push
aam
int
mov
mov
rclb
sarb
or
mov
adc
or
mov
push
xor
incl
mov
and
sub
push
mov
push
or
pop
jnp
hlt
loop
sbb
call
sub
sbb
add
addr16
sub
outsb
mov
lcall
lahf
sti
insl
int3
jmp
out
movsb
pop
push
int3
mov
enter
jbe
pop
aam
push
lods
cmp
dec
jns
test
ljmp
mov
mov
dec
fisubs
js
sub
mov
xchg
ror
out
add
push
cmp
fs
adc
mov
fldz
inc
mov
jmp
movsb
mov
loopne
lds
gs
and
in
and
xlat
or
jmp
pop
rcrb
mov
sub
stos
pop
pop
cmp
mov
inc
cwtl
sbb
out
pop
rcl
xchg
mov
lcall
incl
add
adc
daa
int
cmp
dec
cmp
push
out
mov
ds
popa
push
pusha
sub
dec
xor
jg
xchg
lcall
sar
ja
push
pusha
mov
arpl
rcrb
icebp
pop
cmpsb
loop
cmp
push
sti
add
cmpsl
xchg
inc
mov
mov
mov
in
dec
ja
out
fistpl
ror
loop
or
jo
jns
ja
mov
xchg
insb
jmp
pushl
shll
pop
dec
test
clc
sti
add
mov
pop
mov
cmp
mov
int
xchg
movsl
je
in
cmp
inc
stc
stos
cmp
sbb
decl
filds
xchg
mov
mov
sbb
sbb
mov
cmpsl
xchg
fucomi
loop
pop
stc
js
test
decl
mov
movb
call
enter
sub
shr
test
xchg
jae
imul
xlat
cmc
or
pop
xorl
decl
pop
icebp
ds
test
js
in
aam
clc
ljmp
lea
sub
xchg
or
mov
fistl
pushl
jp
inc
add
out
dec
ja
sbb
jne
mov
jl
pop
and
stos
sub
cmp
aad
fs
inc
lret
push
popf
adc
and
ja
jne
xor
jno
out
xor
mov
inc
fists
xor
and
hlt
xchg
lea
jg
outsl
ss
call
xchg
xor
insb
adc
imul
lret
lods
sub
mov
test
jg
pushl
xorb
pop
dec
cmp
lret
sub
or
fstp
jmp
push
sbb
jg
lock
call
pop
pop
in
xor
mov
lret
decl
shlb
pmulhw
cld
outsl
pop
push
js
and
test
mov
bound
push
ret
sarl
dec
stc
mov
test
jnp
subb
sbb
movsb
in
negb
jp
idiv
inc
xchg
pop
popa
fistps
xchg
adc
push
add
xor
adc
fisubrl
ljmp
repnz
imul
xchg
movsl
adc
mov
cmpl
lcall
ljmp
and
sbb
push
out
sbb
ljmp
cwtl
cmpsl
pop
jne
clc
pop
sbb
adc
fwait
js
and
daa
out
sub
fstpt
sbb
outsl
roll
pop
push
icebp
fnstenv
cmp
out
add
dec
mov
lcall
sub
jnp
cmp
cld
movsl
outsl
fwait
or
jmp
adc
pop
enter
xchg
push
fsubr
filds
jmp
in
int
adc
stc
std
dec
pop
cmp
shll
sub
popf
std
adc
mov
loope
incl
in
fstpl
std
fstpl
add
lods
jae
xchg
fisttpll
pop
add
stos
insl
sub
fndisi(8087
mov
push
add
or
fbstp
mov
insl
fwait
sbb
bnd
push
sar
pop
inc
fs
add
insl
aam
sti
movsb
mov
cmpsb
mov
or
push
clc
lods
out
iret
cld
xor
dec
lahf
clc
pop
xor
mov
or
push
icebp
lcall
sbb
push
fldcw
jl
adc
pusha
push
imul
movsl
jl
dec
xor
fmuls
lahf
pop
adcl
pop
fdiv
andl
mov
adc
fisttps
mov
les
pushw
test
pop
hlt
pushl
xor
out
ret
and
imul
rorb
scas
test
idivb
cltd
push
mov
sbb
loop
call
xor
push
adc
jg
sub
jge
sbb
xor
sbb
pop
sarl
add
lds
pushl
and
jle
dec
push
xchg
imul
fnstsw
lods
dec
addr16
out
jecxz
inc
call
mov
xor
xchg
mov
mov
push
popa
lea
in
inc
xorb
ja
lcall
gs
lret
in
mov
ljmp
and
sti
mov
std
add
pop
arpl
sti
mov
aam
and
xchg
call
fmull
cmc
loopne
xchg
mov
rcll
pusha
into
cmp
cld
out
or
ds
dec
aad
add
sub
popf
jecxz
lret
testl
dec
jl
jg
add
jns
xor
push
mov
jmp
mov
add
sbb
mov
loopne
mov
lret
jno
pop
xor
jge
lcall
push
jb
xchg
xchg
sbb
les
lahf
imul
mov
fisubs
cmp
xor
insb
dec
jecxz
inc
icebp
push
fwait
jmp
inc
or
mul
mov
test
or
inc
mov
and
lcall
pop
mov
adc
add
dec
xchg
sbb
jecxz
inc
icebp
adc
or
gs
sub
inc
sti
cltd
add
movsb
test
jp
xorl
pop
add
insb
xor
outsl
in
add
push
int
repz
call
sub
xor
lods
sub
xchg
scas
adc
clc
xchg
rorb
stos
jl
xorl
jmp
bound
lcall
stc
add
jge
cmp
ljmp
or
loopne
or
add
push
les
xor
jecxz
dec
jmp
sbb
cld
das
add
mov
mov
cmpb
adc
adc
jp
cmp
and
int
cli
decl
pushf
out
dec
dec
cwtl
sub
lret
lea
push
push
sub
ljmp
sbb
push
faddl
loop
cmp
daa
xchg
pop
push
shrl
mov
fistpll
lcall
xchg
push
add
mov
lcall
mov
xchg
stos
xchg
mov
dec
jg
call
xor
mov
pop
fldcw
jge
ds
dec
add
cwtl
jmp
cmp
sbb
jno
sbb
lret
cmp
sbb
in
cs
call
mov
add
mull
je
call
jnp
xor
pop
pushf
call
out
cwtl
cmp
xor
sbb
cmp
inc
mov
mov
add
cmp
decl
rcl
push
inc
xchg
mov
stos
pop
cmp
cwtl
aaa
mov
mov
int3
outsb
pop
cmp
mov
push
mov
insl
pop
jg
inc
mov
add
es
inc
enter
mov
and
data16
mov
and
mov
or
sub
xchg
lods
inc
incl
xorl
jno
cs
leave
dec
inc
add
lea
popf
jmp
repz
sar
call
fisubl
out
pop
ss
sub
sub
cmp
or
inc
adc
mov
jbe
pop
fdivrs
rcrl
lock
xor
shll
je
sub
rorb
call
std
jmp
mov
xchg
and
mov
xchg
shll
in
scas
adcl
jno
inc
pop
rcl
inc
dec
sbb
stc
icebp
cmp
pushf
dec
sbb
ljmp
cmp
cwtl
pop
shrl
gs
cmp
push
jno
push
hlt
inc
adc
int
call
jo
mov
or
fs
jmp
ljmp
mov
cmp
xor
movsb
or
sarb
and
loopne
cmp
jmp
fwait
incl
xor
pop
mov
cmp
imul
dec
fcmovb
sbb
flds
cmp
negb
cmp
sbbb
xchg
lds
push
pop
repnz
inc
insb
sub
clc
add
fcoms
pop
test
shl
call
sbb
mov
cli
loope
cmpsl
xchg
or
and
enter
std
mov
sub
push
pushl
stos
jp
pop
mov
xlat
andb
sbb
movsb
xchg
add
or
movsl
mov
mov
jmp
push
dec
pop
int3
mov
je
jle
inc
cmc
cmp
inc
in
push
decl
scas
daa
pop
subl
inc
pop
add
add
scas
mov
jmp
rorb
outsb
sbb
mov
adc
sti
cmpsb
push
jnp
dec
js
in
mov
inc
leave
lcall
xchg
jne
add
push
inc
lcall
ret
push
sub
clc
push
xchg
jg
decl
cli
cli
push
mov
gs
insl
lahf
repnz
sub
jnp
add
pop
sub
fs
adc
shlb
xor
push
mov
out
ja
nop
xchg
add
mov
sbb
adc
stos
das
sbb
jmp
pop
outsl
mov
mov
and
ret
jecxz
sub
mov
xor
ja
lcall
outsb
popa
and
inc
call
fstl
scas
popa
aad
icebp
push
cmpsb
inc
mov
decl
lahf
mov
test
xchg
popf
add
shl
pop
decl
mov
orb
gs
in
inc
dec
push
mov
bound
subl
iret
add
jg
push
aad
cltd
fidivl
lcall
mov
jle
outsl
xor
not
loop
sub
mov
enter
ljmp
bound
lock
adc
cmp
add
or
adc
test
fisubs
adc
push
cwtl
ja
dec
data16
mov
add
jmp
inc
leave
mov
testb
int3
lcall
add
mov
cmp
mov
xchg
lds
outsb
std
gs
jmp
imul
mov
jno
xchg
pop
aad
aaa
xor
mov
xchg
shl
loope
or
jmp
sti
roll
mov
pop
pop
pop
cmc
jb
xchg
aaa
cmpsl
les
jns
jmp
jge
mov
repz
cld
mov
or
lea
mov
dec
add
cld
cltd
dec
rcrl
call
lods
call
cmpsb
mov
dec
repnz
popf
fnstsw
xlat
les
xor
dec
adc
push
jecxz
stos
push
fidivl
sub
mov
mov
cmp
mov
icebp
incl
jo
mov
leave
add
ljmp
xor
incl
mov
and
and
mov
loop
and
icebp
and
es
scas
pop
clc
popf
mov
stos
xchg
in
or
hlt
dec
pop
mov
std
and
xor
divl
mov
std
decl
call
or
adc
xor
xchg
insb
insb
cmc
pop
leave
out
push
cmp
cmp
pusha
inc
push
loop
sub
fnstcw
push
sub
push
jnp
fisubrs
inc
add
mov
jle
test
and
dec
jecxz
cli
mov
lcall
pop
aas
sbb
mov
adc
repnz
idiv
cld
dec
js
and
lcall
fimull
adc
pushf
arpl
and
and
dec
and
mov
nop
jecxz
call
cld
cs
adc
and
mov
fistpl
vsubpd
and
decl
out
sbb
xchg
mov
pop
lock
lcall
mov
push
loope
loopne
adc
jg
push
movsb
fucom
push
add
sti
lcall
iret
fwait
loope
ljmp
pushf
sbb
sbb
aaa
mov
jae
jg
aad
out
je
call
or
addr16
int3
and
dec
xchg
mov
stos
imul
adc
out
add
pushl
fisttpl
inc
shll
outsb
mov
aad
mov
mov
or
movsb
cmp
cmp
jbe
sahf
lahf
cmp
aas
cli
icebp
imul
mov
push
movsl
xchg
dec
push
hlt
call
call
xor
popa
aaa
adc
rcl
xchg
jle
out
xor
cmp
out
fdivrp
fbld
push
sbbb
test
pushf
mov
and
pop
gs
and
jg
call
add
inc
jbe
jp
movsb
cltd
jns
rol
mov
adc
cld
mov
outsw
lock
push
xchg
les
les
je
or
ret
divb
cmpsl
and
mov
pop
mov
in
sub
or
push
clc
frstor
imul
dec
lcall
lods
adc
xlat
lods
adc
insl
pop
sub
lea
push
xor
inc
lcall
adc
pop
cwtl
insb
shrb
xchg
aaa
das
movsb
push
mov
sar
push
bnd
mov
arpl
mov
sbb
xchg
jb
pop
cwtl
clc
pushl
cs
sahf
mov
dec
ljmp
loopne
mov
mov
int3
pop
lret
pop
jg
addr16
dec
mov
cs
cli
subl
mov
je
cmp
pop
mov
push
addr16
sub
jg
test
adc
fiaddl
mov
fnstcw
repnz
sub
push
pop
push
in
nop
add
lods
fwait
jne
or
scas
jb
outsl
test
into
mov
sub
ljmp
scas
mov
push
push
jbe
ret
jle
push
inc
gs
jmp
fisubl
dec
test
xchg
adc
js
inc
lcall
sub
inc
mov
inc
divl
into
mov
push
incl
call
rorb
or
fisubrl
scas
jmp
dec
sub
add
and
in
ret
in
mov
jge
cmp
in
cmp
into
shll
jnp
aam
push
xchg
lods
and
fstpl
sahf
testb
loope
lcall
outsl
out
adc
inc
hlt
fs
inc
enter
push
mov
aam
or
jge
mov
sti
or
repz
imul
lret
jae
pop
lcall
and
push
sbb
stos
out
push
inc
sbb
push
imul
daa
inc
pop
xchg
in
cmp
adc
sti
xor
pop
adc
lcall
lcall
adc
or
sub
test
add
push
cmp
push
mov
out
cmp
sbb
sbbb
ret
ljmp
xchg
sbb
lock
addr16
push
fisttps
sbb
call
gs
icebp
enter
mov
xor
jno
imul
mov
mov
lret
pushl
dec
dec
ja
jae
pushf
ss
clc
out
jmp
ffreep
test
bound
push
mov
ud0
lcall
ds
dec
repz
out
mov
or
test
int
push
cmp
sbb
adc
lock
xchg
push
pop
mov
push
and
cwtl
adc
test
jg
mov
mov
push
clc
jle
int3
aad
int3
push
sbb
mov
cmpsb
shll
and
or
adc
ja
dec
jmp
jb
call
and
fisttps
adc
push
test
call
sub
aad
outsb
out
imulb
cmpsw
pusha
ret
and
js
stos
adc
fsubrs
mov
inc
push
jp
cmpsl
mov
cmpsb
jae
mov
mov
push
cmp
pushl
xor
xor
int3
sub
test
idivb
mov
shll
push
outsl
fdivr
lcall
lahf
inc
aaa
fistpll
cmpsl
xor
push
cmpsb
das
out
sub
iretw
hlt
aad
ljmp
out
sub
sbb
dec
aas
mov
jmp
lret
pop
mov
xor
out
sub
fdivr
xor
cmpsb
xor
ljmp
inc
mov
jle
push
pop
vmovapd
adc
mov
push
pop
pop
iret
sub
inc
imul
shlb
push
mov
repz
daa
mov
xor
jl
addr16
aam
mov
push
and
test
pop
and
insb
je
inc
or
mov
xor
jle
call
out
pop
cmp
cwtl
mov
mov
out
add
ljmp
jl
andl
mov
ret
pop
incl
cmp
movsb
insl
xor
xor
inc
cwtl
into
cltd
out
cmp
mov
rcll
and
decl
mov
dec
mov
cmpsb
dec
mov
mov
xchg
xchg
mov
inc
mov
pop
in
push
and
sbb
mov
sbb
push
pop
filds
nop
mov
cmp
call
add
dec
adc
push
lods
jge
xchg
jg
push
imul
and
ficoml
loopne
cmp
mov
mov
into
jbe
incb
mov
mov
icebp
inc
mov
xchg
clc
mov
adc
adc
xchg
jg
popf
fdivp
std
addr16
repz
mov
ja
frstor
mov
cmp
popf
orb
sbb
fidivrl
jmp
ja
add
jecxz
fildl
hlt
sarl
fcmovbe
adc
mov
mov
lods
call
loopne
xchg
sbb
ret
lahf
mov
cmp
and
push
and
idiv
jg
mov
jmp
sti
mov
jne
ds
dec
lods
mov
je
inc
or
jmp
out
jecxz
mov
inc
inc
pop
add
call
lahf
push
sub
push
nop
pop
scas
inc
sbb
outsb
out
int3
movb
aas
and
ds
push
cld
divl
cmp
dec
cmp
or
jns,pt
mov
add
or
xor
cmpsb
out
ds
scas
pop
outsl
add
dec
inc
pop
pop
stos
mov
int3
pop
mov
xor
incl
leave
enter
daa
and
xor
popa
lahf
fmull
mov
fmul
adcb
stos
jg
mov
sub
inc
mov
rorb
xor
jp
push
cmp
dec
imul
pop
mov
addb
lret
orb
mov
rclb
mov
inc
pushf
push
aad
outsl
mov
fstl
int
mov
pop
pushl
cld
pop
adc
scas
cli
xor
lock
in
arpl
in
int
ja
sbb
cld
push
popa
into
ror
stos
ss
ret
test
push
in
rorl
dec
mov
inc
inc
jp
add
ljmp
xor
fs
mov
js
test
loopne
xchg
decl
mov
cmp
push
push
mov
mov
sub
ljmp
stos
mov
push
lea
and
mov
xor
and
nop
popf
fstpl
test
xor
ds
test
pop
pop
pop
out
adc
pop
jns
bound
in
fdivrp
dec
jnp
ja
mov
arpl
xchg
decl
lcall
hlt
mov
mov
ds
mov
and
mov
jae
idivb
aas
jp
inc
adc
ss
inc
sub
rclb
pop
and
test
in
xchg
dec
lcall
inc
jecxz
ljmp
jne
xchg
mov
dec
outsb
cmp
push
dec
mov
lret
adc
mov
push
dec
lods
loope
push
jg
cmp
xor
pop
mov
mov
jne
dec
lcall
push
dec
xchg
mov
in
cmp
je
or
lods
mov
test
call
dec
mov
clc
hlt
sbb
xor
movsb
inc
or
or
out
pop
arpl
popa
dec
jnp
pushl
sub
and
push
or
jecxz
mov
aad
clc
sbbb
push
push
push
clc
jmp
pop
testb
ret
xchg
sti
mov
adcl
inc
gs
loop
inc
pusha
sub
incl
mull
cld
enter
dec
aaa
mov
int3
xor
lcall
lcall
andb
je
pop
outsl
adc
cs
rcll
sbb
push
arpl
icebp
pop
jle
mov
call
xchg
orb
mov
push
int3
jp
mov
call
mov
pushf
dec
aad
es
mov
lea
fidivrl
pusha
xchg
push
cli
cld
push
jbe
mov
and
sub
fbstp
hlt
jmp
in
jg
jp
inc
rcl
jge
inc
out
cltd
dec
jne
scas
dec
mov
fsubl
add
call
popf
add
sub
jb
ds
xor
test
jne
pop
test
mov
add
dec
inc
inc
pop
dec
or
push
lahf
movsb
pop
call
hlt
aad
jb
inc
push
scas
fisttpll
fildll
inc
jmp
or
stos
jmp
xchg
test
loopne
jmp
mov
call
or
pop
negb
addr16
adc
jo
incl
repz
dec
jl
cmp
mov
call
in
or
pushl
and
neg
enter
mov
adcl
jmp
or
ljmp
xchg
movsb
rcl
icebp
sbb
mov
sub
push
jo
dec
lea
mov
out
stos
into
xchg
inc
push
mov
mov
pop
cltd
lahf
xor
outsb
iret
iret
push
testl
cmp
cwtl
ss
shlb
icebp
sub
xchg
mov
icebp
xor
jmp
pop
mov
adc
int
inc
in
ljmp
inc
cmp
lods
fsubrl
loope
dec
lock
or
or
pop
mov
data16
jmp
sub
lods
xor
pop
test
xchg
pop
fmull
dec
and
popl
push
loope
mov
adc
pop
mov
pop
cwtl
test
push
xchg
mov
dec
pop
mov
outsb
jg
mov
inc
imul
cmp
mov
aad
fistps
add
nop
lock
lahf
shrb
jns
sahf
xor
mov
lcall
andl
cmpsb
jle
sub
cmc
sub
jmp
dec
shll
jle
dec
mov
stos
filds
jp
cwtl
inc
jle
sub
imul
cld
ret
outsb
jge
add
adc
lock
cwtl
popf
xchg
rorb
cmp
pop
test
push
enter
call
jb
div
xchg
cmp
in
xchg
mov
pop
icebp
xchg
fsubrs
sbb
push
dec
jle
notl
pop
sub
xor
test
shll
filds
sub
lea
in
cmp
jg
mov
insb
aad
cltd
jo
push
or
sub
sbb
inc
les
mov
aad
mov
sub
jg
inc
lock
rcrl
decl
jl
nop
jge
mov
nop
shll
js
bound
cwtl
inc
dec
pop
repnz
push
mov
jg
xchg
adc
sbb
xchg
xchg
pusha
mov
fisubs
sbb
add
aam
ds
mov
push
add
xchg
dec
shll
dec
hlt
push
ss
mov
nop
fidivrl
decl
loopne
mov
dec
int
cwtl
pop
mov
push
scas
jb
xchg
dec
mov
adc
push
and
call
test
pop
jmp
dec
push
cld
jg
sbb
jle
lahf
insl
push
sarb
mov
stos
and
add
mov
stos
fdivl
push
add
loope
lret
fcomip
lcall
add
lods
rol
std
inc
sbbb
outsl
inc
push
add
lcall
imul
mov
aas
lcall
mov
pop
dec
inc
iret
scas
int3
cld
mov
in
sbb
call
in
test
movsb
stos
fdivs
lret
arpl
adc
mov
inc
push
lds
and
pop
in
cmc
mov
loopne
cmp
push
mov
mov
decl
dec
loop
xlat
repnz
adc
imul
dec
out
lods
scas
push
std
incl
jae
xor
xor
xor
xor
sub
add
mov
lcall
push
mov
in
notb
mov
jp
pushl
test
xchg
je
sub
or
orb
xlat
or
cs
cmp
cmp
sub
jb
cmp
mov
sub
in
shrl
push
xlat
rclb
sub
add
imul
sub
repz
lods
cmp
in
and
rcl
das
jne
ret
das
clc
lcall
push
push
aad
and
adc
and
aam
pop
jae
in
lds
test
mov
cld
push
push
sub
jle
cltd
lock
mov
xor
cmp
xchg
or
out
sbb
jns
loope
test
repnz
jmp
imul
ret
cmpsl
jle
mov
clc
dec
std
gs
aaa
lock
je
xor
dec
sub
sar
mov
das
push
adc
jae
cwtl
ret
out
jg
loope
jle
push
fwait
scas
mov
bound
cmc
int3
call
push
inc
cwtl
dec
mov
pop
ud0
decl
adc
or
andb
call
addr16
sbb
out
or
pushl
movsb
xchg
xorb
das
out
dec
push
outsl
sub
lods
popa
repz
movsb
cli
addr16
stos
mov
data16
loope
imul
fsubrs
std
jmp
aas
sbb
nop
sbbl
imul
ljmp
scas
out
mov
inc
fs
push
mov
fstpl
push
xorb
lock
inc
fcomps
or
ljmp
pop
pop
fcomps
das
popa
xchg
cwtl
mull
rcl
lods
and
shl
mov
push
xchg
cltd
rcr
mov
movsl
nop
daa
add
mov
adc
jge
inc
ljmp
lea
lods
push
pop
xchg
cmc
mov
cltd
cmp
ljmp
lret
clc
dec
int3
pop
cs
fdivs
push
arpl
test
std
daa
jns
outsl
push
stos
decl
sbb
jp
ds
adc
push
dec
adc
pop
out
and
mov
and
and
jmp
mov
into
jnp
dec
pop
cwtl
mov
xchg
ud0
sti
pop
pop
mov
aad
mulb
pop
call
mov
pop
movsl
mov
pushl
not
adcl
and
cmp
loope
aam
das
jb
mov
ljmp
shlb
and
push
jg
adc
and
sbb
inc
jge
daa
stos
ror
mov
fwait
add
push
cmovbe
dec
dec
push
nop
push
and
cmc
fstps
into
in
mov
push
lcall
or
stos
test
pop
xchg
ljmp
cld
cmp
fstpl
data16
push
ret
or
jg
test
mov
dec
inc
sahf
lret
lea
mov
lods
das
xchg
pop
adc
xchg
scas
call
jle
sbb
out
xor
dec
nop
les
loop
pop
fwait
loopne
mov
insl
das
cli
push
pop
in
pushl
mov
rorb
xor
jle
ret
jle
pusha
or
mov
in
dec
dec
pushl
push
das
and
outsb
inc
add
add
call
into
mull
add
out
ljmp
repnz
insb
jo
jnp
or
cmp
sub
xor
gs
mov
jnp
sti
js
xor
dec
sbb
ljmp
inc
mov
rcrb
pop
push
insl
adc
call
mov
mov
jmp
xor
dec
dec
pop
adc
call
incl
push
sub
mov
test
push
mov
test
std
es
jg
das
xchg
icebp
xorl
cld
xchg
bound
xlat
mov
mov
jle
pop
mov
std
leave
adc
incl
mov
inc
cmp
jmp
mov
jmp
jno
pop
mov
div
jge
int3
inc
or
pop
mov
lret
add
les
inc
loope
jl
scas
out
inc
pop
pop
add
test
mov
mov
sbb
pop
pop
mov
mov
das
mov
imul
jmp
cmp
scas
shrb
or
pop
inc
xlat
or
sahf
pop
fimull
or
mov
dec
xchg
mov
mov
mov
dec
aas
ret
mov
out
inc
fldl
xchg
xor
xor
fnsave
lods
push
popa
call
adc
icebp
jmp
iret
insb
pop
jle
inc
mov
mov
push
fs
out
cwtl
jno
into
push
ja
fisubl
imul
ljmp
movsl
cltd
ljmp
popa
sbb
cmp
int
pop
out
pop
or
stos
push
xor
int3
stos
sbb
and
xchg
push
or
pushl
fldenv
mov
mov
pop
mov
mov
xor
fisubrl
lahf
xor
fldcw
push
mov
mov
mov
inc
ds
fsubrl
push
xor
adc
shl
cltd
inc
inc
decl
js
cmpsl
jl
and
jnp
mov
fs
jb
outsb
add
stos
scas
sbb
cmp
lret
jae
push
push
enter
push
sbb
mov
out
sarb
fbstp
add
das
inc
lret
cmpsb
mov
ret
mov
icebp
mov
jmp
pop
int3
movsb
push
adc
lret
clc
int
cmp
dec
ss
dec
std
ja
jmp
shl
je
mov
pop
inc
lret
jp
pop
jns
jns
addr16
mov
aaa
add
sub
mov
inc
push
or
call
insl
cwtl
jp
push
iretw
inc
insl
add
cmpsl
pop
mov
test
ret
mov
push
psrlq
fildl
push
stc
pop
sti
dec
popa
jecxz
stos
mov
push
scas
sub
and
dec
push
add
or
jmp
inc
call
in
in
xlat
lret
popf
add
shll
and
xchg
xchg
int
loop
dec
push
jns
mov
xlat
in
mov
leave
push
les
int3
out
je
lea
ficoml
sub
in
inc
scas
and
add
jmp
inc
adc
pop
push
adc
push
insl
and
mov
fcomip
decl
adc
dec
and
insl
sbb
ja
sub
iret
inc
xor
ret
lcall
xor
outsb
imul
fiaddl
pop
and
jl
dec
dec
insl
xor
jg
xchg
inc
es
cmp
movsl
xor
in
mov
or
jmp
fnsave
loop
pop
push
and
cmpsb
fistl
repz
mov
sahf
repz
outsb
pop
loope
cmp
and
call
stos
mov
out
rcl
inc
lock
outsb
fsubrl
mov
cli
out
dec
fdivl
fimuls
iret
inc
xchg
sahf
cltd
xor
stc
ja
cmpsb
ret
scas
xor
push
mov
cmc
sbb
in
jnp
sub
ljmp
mov
jno
fsubp
lods
rcrb
dec
push
subb
ljmp
inc
inc
xor
mov
jnp
fisubs
std
aam
xorb
jp
mov
cmp
fwait
pushf
pop
push
push
mov
enter
das
icebp
ja
pop
fcomip
dec
lea
jl
fstl
and
les
or
fidivrl
or
adcb
insb
mov
leave
and
dec
divl
mov
cli
lcall
aam
cmpsl
sub
ror
sub
iret
adc
rorl
dec
insb
pop
clc
cmp
mov
or
jne
test
jmp
shlb
pop
mov
xor
jp
cmpl
iret
dec
fistpll
cmp
or
ss
inc
aad
or
gs
dec
xchg
call
lds
xor
adc
adc
xchg
sub
adc
notb
adc
xor
inc
decl
or
outsl
xor
neg
ja
cltd
sub
ja
jg
jle
fbld
mov
adc
fs
push
mov
int3
mov
outsb
fimuls
lcall
mov
and
jmp
das
cmp
cmc
pop
daa
pop
sbb
xchg
jmp
add
mov
cmp
push
push
stos
push
mov
orb
sbb
ljmp
and
mov
push
jecxz
ja
and
insl
stc
add
cmp
divl
decl
push
fs
dec
lods
mov
and
shl
inc
xor
and
cwtl
outsb
mov
mov
decl
lock
loop
inc
jp
data16
das
mov
dec
sbb
out
cli
call
movsb
or
fistpll
xchg
pop
fdivl
scas
insb
sar
fbld
jo
andb
cld
loope
dec
xchg
jg
movsb
and
jne
clc
cmp
lcall
mov
mov
std
dec
xor
add
sub
inc
push
addr16
incl
or
or
pop
loop
mov
shl
adc
ficoms
data16
fstpl
hlt
ljmp
sbb
imul
icebp
dec
cmp
std
call
cmp
push
cltd
mov
pop
faddl
sub
popa
jno
stos
ror
test
stos
outsb
adc
cmp
inc
stos
scas
cli
lcall
sbbl
incl
daa
movsb
in
mov
mov
sarl
mov
jnp
jbe
mov
cld
fisttps
mov
icebp
adc
lret
movsl
or
rcl
mov
fisttpl
filds
aaa
imul
lods
mov
jmp
daa
adcb
mov
dec
add
pop
inc
jge
jmp
addr16
xchg
je
mov
movsb
and
jmp
inc
mov
ljmp
aam
cmp
xor
jge
inc
push
scas
repnz
or
jge
push
mov
mov
jmp
fwait
rcrb
pop
mov
jb
repz
pop
jae
ljmp
xadd
cltd
fistpll
out
adc
inc
sarb
add
out
mov
xchg
ljmp
pushl
lret
mov
xchg
mov
lds
scas
mov
add
call
hlt
mov
and
imul
mov
bound
sti
pop
jmp
inc
mov
movsb
pushf
enter
lcall
sbb
divl
cmpsb
ret
lods
mov
and
call
hlt
inc
fldenv
lea
pop
daa
fneni(8087
cltd
insl
xor
ficoml
lcall
pop
sub
pop
in
jp
sbb
lods
cmp
jne
xchg
cmp
rcl
mov
push
shll
jmp
push
push
mov
and
sub
xchg
cmp
sub
ljmp
out
pop
arpl
fstpl
hlt
sahf
dec
popf
push
mov
mov
and
pushl
and
xor
sarb
xchg
aad
xchg
inc
inc
pop
jg
mov
dec
mov
ljmp
cld
outsl
mov
in
pop
adc
aad
and
fildll
adc
xlat
cmp
add
sub
mov
fcomip
jl
je
xor
ret
push
or
mov
test
and
call
mov
push
sti
sbb
cmp
mov
cmp
mov
mov
notb
clc
sbb
out
aaa
pop
loope
mov
shl
loop
inc
push
sbb
add
jg
popf
xor
cmpl
aaa
or
push
dec
xlat
fldenv
sub
addb
out
call
and
mov
mov
es
push
hlt
incl
or
das
mov
sbb
cld
and
mov
std
adcl
mov
push
mov
insb
int
lret
jo
push
add
ja
fildll
dec
ss
outsl
fwait
imul
pushf
add
das
add
incl
push
out
jge
jae
arpl
cmp
push
std
mov
adc
or
ret
insb
jno
push
cs
loope
inc
pop
clc
incl
xchg
loop
js
mov
hlt
lcall
push
add
mov
inc
xchg
movsl
mov
dec
stos
jne
enter
out
push
dec
ljmp
cmpb
std
jecxz
dec
push
icebp
sbb
xchg
dec
cmp
decl
push
pop
xchg
and
xchg
xchg
add
inc
in
adc
mov
xchg
test
xchg
push
mov
push
push
outsl
sahf
pop
mov
es
mov
mov
negb
incl
cwtl
mov
add
xchg
std
pushf
mov
cmpb
xchg
ret
dec
loopne
addr16
jg
jle
pop
adcb
push
adc
push
sbb
mov
clc
fmull
cli
gs
add
sbb
mov
cmp
rcrl
jg
pushl
ret
push
nop
pop
cmp
xor
jmp
fsubrs
in
fwait
leave
fs
mov
inc
loop
mov
call
lret
jnp
in
push
xchg
iret
lods
dec
icebp
call
inc
rcll
jg
sub
mov
and
sub
aas
push
inc
or
dec
mov
rorl
add
push
xchg
jle
pop
push
xchg
push
sub
cli
sahf
jle
adc
incl
adc
movsl
mov
pop
mov
scas
inc
add
cmp
sbb
test
jbe
scas
mov
lods
push
hlt
pusha
mov
jno
pusha
aad
push
cmpsb
sub
lods
or
xor
pop
or
pushl
jg
fwait
lods
lcall
andb
push
adc
lcall
aam
inc
jbe
pop
cmp
jno
int3
scas
mov
lods
int3
adc
cmpl
push
xchg
lds
xchg
call
out
pusha
jmp
dec
jl
sti
cmc
pop
sbb
leave
outsl
movsb
sub
jmp
test
int
push
push
and
xchg
js
hlt
pop
pop
pop
ja
add
jg
adc
lcall
push
clc
xor
inc
dec
adc
pop
jns
fistpll
ljmp
cld
or
ds
jmp
pop
repnz
ja
adc
xchg
test
jg
movsl
jl
adc
movsl
xchg
inc
dec
mov
pop
cmp
jmp
iret
or
fidivrl
mov
int3
push
push
das
imul
inc
clc
out
push
adc
cmp
fs
insb
ss
test
xchg
test
add
mov
shlb
adc
decl
adc
jg
sbb
sarl
cmp
je
pop
mov
dec
out
in
or
xor
lcall
sbb
repnz
or
jle
mov
subl
mov
sub
rcr
mov
test
gs
fnstenv
popf
and
ljmp
pop
outsl
std
sub
adc
gs
add
ss
mov
xchg
movsl
ret
add
jmp
in
nop
jp
adc
pop
in
std
cmc
jns
jecxz
enter
inc
push
add
cmc
inc
loope
lcall
mov
and
sbbb
movsl
ja
push
sbb
mov
dec
inc
mov
and
dec
fdivl
sbb
dec
test
cli
inc
sub
sub
mov
lcall
mov
pop
or
loop
or
les
popa
imul
adc
add
pushl
movsl
popf
or
cs
cwtl
aas
xchg
jmp
addr16
adc
pop
lea
call
outsl
clc
pushl
pop
sar
mov
filds
xchg
push
push
mov
outsl
fcoml
cwtl
clc
pushl
sahf
pcmpgtb
cmc
xchg
out
call
jae
popa
lods
push
lea
leave
loopne
in
adc
push
pop
test
mov
jo
mov
fucom
mov
cmpsb
or
js
js
cli
sub
out
sbb
negb
call
cwtl
mov
sbb
add
repz
xor
cmp
mov
cli
sbb
inc
xor
in
jb
adc
loopne
mov
cmpsl
fcmovnu
adc
lcall
sub
daa
cld
xor
adc
mov
cwtl
lret
loop
pop
add
mov
cld
xor
inc
mov
repz
loop
int3
sbb
and
inc
xorl
xchg
add
xchg
sub
ja
inc
jp
mov
pushf
pop
scas
jmp
mov
call
cld
sbb
pop
cmp
xchg
icebp
ja
lods
dec
fiaddl
sbb
sub
bound
jo
xor
icebp
loop
ljmp
insb
ljmp
inc
fnsave
lcall
cmp
decl
inc
fbld
pop
mov
addr16
jl
jns
and
call
fbld
mov
in
adc
int
push
pop
xchg
inc
mov
popl
enter
dec
sbb
inc
scas
jno
fldt
xor
sbb
jnp
mov
inc
ds
decl
or
addb
leave
dec
shlb
hlt
xchg
incl
loope
or
mov
cmp
sub
aad
adc
stc
mov
mov
or
ljmp
movsl
mov
loope
pop
push
jmp
aaa
cld
decl
cmp
sbb
cmp
fisubrl
or
aad
ljmp
mov
enter
ljmp
xor
mov
movsb
pushl
push
in
sahf
loopne
jmp
aas
jnp
jb
xchg
outsl
decl
mov
test
fs
push
xor
ror
cmp
xor
jmp
movsl
mov
scas
incb
ret
dec
and
push
out
add
daa
fildll
pushl
add
and
fistps
cli
cmc
and
and
cmp
xchg
push
lcall
out
movsb
and
jb
mov
cmp
test
mov
ret
mov
sub
cmp
mov
mov
xchg
sbb
xor
push
and
cld
xchg
mov
pop
das
bound
into
adc
sub
stos
adc
decl
inc
lods
mov
js
std
or
cltd
imul
inc
outsb
data16
pop
aam
adc
lock
cmp
and
mov
inc
in
or
sar
dec
cs
pushf
bound
xlat
lret
or
adc
in
movsl
out
cltd
mov
mov
dec
mov
mov
add
fbstp
push
inc
push
movsl
sbb
jg
inc
push
pop
or
arpl
push
lods
xchg
mov
test
xor
pushf
sub
negl
ljmp
lcall
lock
push
add
cs
xlat
cmp
xor
stos
ljmp
pop
das
inc
enter
push
mov
or
aaa
pop
mov
jmp
dec
xchg
push
dec
dec
add
lahf
or
jns
lret
adc
int
test
or
shlb
mov
js
test
repz
lods
incl
xor
arpl
js
int
mov
mov
jmp
adc
mov
lock
cld
jne
sub
add
jmp
jne
ss
jno
ret
inc
inc
cs
pushf
xchg
jge
lock
add
xor
sub
sbb
es
ljmp
and
ljmp
jecxz
lods
dec
adc
cmp
ret
sub
sahf
mov
ljmp
in
dec
into
es
fbstp
and
xchg
jo
xor
fsubrl
inc
das
test
inc
push
adc
cmp
pop
mov
pushl
inc
pop
and
in
ficoms
and
andl
xchg
int3
ljmp
mov
enter
aad
rol
mov
popa
jle
and
xchg
daa
imul
mov
inc
cmp
negl
rolb
pop
lods
ret
mov
push
or
mov
incl
or
cmc
adc
mov
sahf
test
nop
rorl
nop
loopne
sbb
call
rolb
jge
lock
cltd
push
sarb
xchg
cld
fcomip
call
insl
daa
addr16
fs
int
mov
cmpsl
hlt
out
sahf
hlt
insb
xor
repnz
adc
dec
rcll
sub
test
xchg
xlat
push
and
fbld
or
jbe
cli
mov
mov
jmp
in
repz
out
and
data16
cmp
out
mov
cmp
xchg
or
mov
mov
mov
rclb
mov
stos
imul
mov
mov
jge
cmpsb
push
ds
test
insb
dec
fisttps
dec
push
add
adc
xor
push
lret
std
fdivrs
push
hlt
cld
adc
clc
imul
or
add
jns
or
ficompl
movsb
ja
fmul
adc
pop
cli
movsl
inc
jp
rorl
cmc
add
mov
cmc
fisttps
or
sarl
lret
and
lcall
adc
inc
cmc
adc
and
or
xor
sub
push
mov
repz
addr16
enter
inc
aaa
jo
jns
add
push
mov
nop
lcall
jecxz
in
pusha
ds
sbb
aaa
repnz
mov
xchg
incl
data16
or
loop
cmpsl
mov
cmp
scas
stos
test
push
push
xlat
push
lahf
pop
iret
cmp
cmp
push
cmpsb
dec
mov
ret
pop
sbb
xchg
inc
jb
jg
decl
pop
sar
sbb
adc
pop
push
and
lret
jecxz
xor
jp
jg
mov
outsb
scas
aaa
loop
fmulp
pop
dec
inc
rcl
addr16
pop
sub
adc
dec
dec
add
arpl
pop
imul
lret
pop
pop
jge
stos
sbb
loop
push
sub
jmp
loop
xor
sub
fcmovu
or
mov
jl
xchg
gs
sbb
frstor
decl
mov
push
dec
mov
mov
dec
sub
pop
jp
stc
ret
loop
lock
sbb
incl
les
xchg
fsubrs
xchg
rorl
jl
inc
sbb
fs
ds
or
ljmp
das
sbb
mov
jo
sbbb
out
xor
mov
push
clc
inc
out
hlt
and
cltd
mov
call
fstpt
sete
in
out
pop
out
fwait
mov
push
cwtl
pusha
push
addr16
mov
dec
push
bound
jg
lahf
adc
movsl
inc
sarl
add
mov
movsl
incl
aad
cs
mov
out
dec
xchg
xor
jmp
shll
and
test
xlat
cmc
pop
arpl
arpl
push
idivb
jg
fs
fs
add
fcomip
cmpsb
cmp
sub
cltd
xor
clc
jmp
dec
imul
jl
call
inc
jbe
call
mov
xchg
xchg
repnz
push
fs
std
jo
xor
add
mov
test
cmp
ljmp
dec
mov
xor
cmpsl
push
mov
test
enter
into
cld
cwtl
lock
push
lock
pop
jne
in
xchg
sub
popa
jae
in
addb
lcall
sbb
mov
shll
and
sbb
pop
je
fidivs
xchg
push
add
jge
aaa
cmpsb
vmovaps
loope
jg
rol
cmpsb
iret
iret
xchg
icebp
xchg
mov
mov
ljmp
cmp
pop
lea
inc
sub
push
xor
jg
mov
hlt
enter
cmp
ret
push
xchg
loope
xor
popa
cmc
idivb
mov
dec
popf
mov
data16
xchg
shlb
cmc
inc
rorb
ljmp
sbb
movsb
jne
rcr
jmp
sti
xchg
xchg
shll
dec
jl
pop
inc
inc
mov
dec
xor
incl
cld
pop
mov
push
pop
movsb
lock
mov
popa
jbe
scas
call
dec
daa
leave
aaa
adc
insl
imul
push
push
inc
pusha
dec
mov
arpl
decl
mov
repnz
mov
outsl
cltd
mov
popa
flds
pop
xchg
push
mov
sarb
jmp
jnp
push
xor
icebp
incl
push
inc
inc
sub
push
nop
scas
cmpsw
pop
or
les
stos
jg
mov
cmp
cmp
mov
xor
call
dec
lea
push
gs
and
mov
push
scas
xor
mov
repnz
setbe
fisubrs
sub
mov
dec
jb
mov
shrl
ljmp
pop
outsb
cmp
or
js
icebp
inc
es
push
sahf
decl
push
lcall
aas
mov
sahf
enter
jbe
daa
add
mov
mov
jg
cld
aad
dec
insb
filds
cmc
adc
call
pop
clc
push
test
lock
movsl
jg
ljmp
and
push
jnp
out
jnp
cli
inc
pop
ficompl
hlt
push
dec
push
and
scas
pushf
add
sbb
pushl
scas
movsl
cmpsb
loopne
insb
repz
test
jbe
or
sbb
ret
cmp
pop
call
mov
repnz
sbb
rclb
xor
push
jns
lcall
mov
aad
cmp
iret
sti
pop
testb
imul
sar
inc
das
add
sbb
aam
insb
mov
mov
sub
mov
or
mov
clc
test
das
pop
and
add
fbstp
inc
xchg
jl
inc
push
dec
push
jl
inc
add
stc
xchg
xor
and
call
fs
dec
sub
test
pop
cmp
jmp
gs
sbb
adcl
orb
adc
mov
jnp
push
or
jecxz
incl
cwtl
sub
and
pop
fmul
daa
fdivp
cmp
cmp
icebp
jae
xchg
xor
cld
mov
std
or
aam
inc
out
iret
dec
repnz
or
inc
xor
adc
ljmp
pop
ljmp
xchg
mov
lcall
clc
ljmp
cli
ljmp
js
dec
arpl
jecxz
push
xor
xchg
xor
mov
inc
mov
test
daa
in
jb
or
hlt
mov
mov
out
rol
lcall
cmpsl
imul
test
lahf
inc
ljmp
mov
ljmp
adc
outsl
js
fldl2e
and
sub
pop
pop
jmp
add
inc
jb
xchg
jbe
jb
inc
pop
in
xchg
jp
jp
repnz
fisttps
cmp
push
mov
push
icebp
inc
mov
xor
ficompl
and
decl
out
cmp
mov
dec
ror
mov
mov
imul
loope
addr16
cmp
jnp
xchg
test
lods
add
lret
jle
cmp
mov
jo
imul
mov
or
or
je
sahf
xor
adcl
cmp
push
add
shlb
jg
push
jp
or
pop
push
mov
adc
mov
jg
dec
push
jno
psadbw
xchg
ss
and
add
add
inc
sbb
jmp
int
les
in
stos
fcmovnbe
decl
loopne
lock
sbb
std
sub
fisttps
xlat
daa
lea
push
pop
jl
jno
jmp
xor
pushf
sub
jbe
dec
orps
in
mov
jmp
ss
imull
inc
pushf
xchg
xchg
jge
out
in
clc
aad
push
xor
fwait
mov
mov
dec
popa
pop
dec
mov
push
es
sbb
nop
dec
mov
out
data16
aam
lcall
js
mov
out
xchg
jg
outsb
dec
sbb
sarl
mov
mov
ljmp
enter
lcall
in
fldl
test
ljmp
and
rcll
cld
and
lret
ljmp
lcall
jecxz
mov
mov
jge
lods
sbb
push
and
loop
cmpsl
stc
push
jmp
loopne
lea
jb
xchg
lods
notb
addl
jmp
xlat
or
out
stos
leave
cli
cmp
or
in
rcl
ljmp
xchg
and
push
lret
mov
test
push
jae
sub
mov
pop
insl
mov
xlat
scas
mov
ljmp
add
stc
shrb
lds
pushl
pushf
popa
adc
xor
rorl
dec
adc
mov
int
adc
fisttpll
ficoms
jg
inc
adcl
pop
cmp
out
clc
mov
mov
sbb
inc
cmp
test
jle
jbe
jne
jns
xlat
xchg
idivl
jge
xchg
mov
xchg
outsl
push
out
jecxz
and
push
pop
xchg
inc
sub
xchg
test
jns
gs
stc
iret
ljmp
ret
inc
dec
dec
fcmovb
mov
mov
xor
mov
or
adc
incl
adcb
or
fidivs
aaa
pop
mov
fmulp
std
push
adc
jbe
and
int
pop
ljmp
and
pop
lcall
push
call
dec
cs
incl
mov
mov
jbe
in
mov
rol
ja
and
cmp
or
int
sub
nop
repnz
lcall
cmp
add
sbb
mov
xchg
lock
sbb
ljmp
push
test
cmp
pop
xchg
xchg
out
or
std
dec
popf
mov
xor
pop
cld
popf
cmp
pusha
and
pop
test
rcrb
lock
pop
sub
xor
repz
hlt
and
jmp
dec
test
mov
mov
iret
fdivrs
dec
push
adc
cltd
mov
out
lods
xor
add
and
in
jmp
mov
stos
fs
or
fists
arpl
lret
sub
mov
mov
sbb
xor
dec
loopne
rcrb
les
adc
sub
mov
cmp
cltd
decl
pop
dec
or
les
pop
and
movsl
pop
cmp
cmc
mov
das
lret
pop
push
mov
xor
add
cmp
in
mov
lcall
add
cmp
jne
pop
adc
jmp
and
or
in
cld
xchg
cmp
loope
imul
in
lret
bnd
or
repnz
jno
rorb
push
cld
and
mov
in
jnp
das
adc
adc
pop
xor
xchg
rolb
std
call
aam
gs
or
icebp
and
scas
push
scas
mov
pop
jge
lret
mov
push
sbb
xor
or
jmp
leave
mov
mov
inc
hlt
ja
dec
les
loop
mov
fcomip
mov
or
push
hlt
test
sahf
ds
out
stc
mov
add
jg
inc
cld
jmp
sahf
hlt
ljmp
decl
pcmpgtw
lds
cmp
pop
xchg
sub
mov
push
sti
or
or
mov
and
idiv
popa
pushf
xor
xchg
enter
pop
push
pusha
cltd
jle
stos
leave
in
jmp
je
movsl
add
outsb
cmc
popl
icebp
dec
mov
jge
fstps
incl
fldl
push
in
ficoms
test
out
dec
rclb
mov
lret
pop
test
clc
shrl
outsb
popf
jae
scas
testb
in
jg
inc
cmp
and
add
ret
outsl
pop
sahf
and
xchg
sub
lcall
mov
mov
xor
cmp
cld
pushl
scas
mov
push
and
jg
or
lret
cli
mov
mov
mov
fdivs
adc
pop
lods
jmp
sbb
hlt
mov
inc
adc
jmp
faddl
dec
popf
int
jb
test
insl
in
dec
pop
cwtl
mov
mov
js
ss
mov
call
popa
adc
pushl
jecxz
add
test
jnp
hlt
and
insb
pushf
push
cmp
dec
mov
cmpsl
aad
mov
test
jne
jecxz
mov
or
jb
push
sbb
pop
xchg
lret
cmc
data16
ljmp
cmp
aas
addr16
popf
mov
push
inc
fwait
mov
mov
mov
cmp
loopne
arpl
push
lods
aaa
outsb
add
mov
sbb
not
inc
cld
jmp
addl
jb
and
sti
subb
rcl
popa
sar
jg
and
xor
xchg
dec
xor
cmpsb
pushf
sub
test
incl
loopne
scas
sti
mov
jo
adc
push
hlt
jecxz
xor
call
nop
out
lods
push
movsl
dec
stc
adc
mov
push
cmc
xchg
in
dec
in
inc
xor
js
xchg
xchg
add
aam
cmpsl
push
sub
out
decl
cmpsb
jge
jbe
lret
jnp
sbb
xor
ret
iret
push
jle
aad
movsb
mov
ljmp
pop
cmpl
cmpl
or
push
sub
int
in
lret
cli
jmp
inc
lcall
in
jne
jp
leave
je
ret
jmp
hlt
js
push
ljmp
incl
into
cs
les
movsb
test
jns
add
mov
pop
ljmp
pop
stc
or
push
push
pop
or
push
and
scas
dec
cmpsb
sbb
data16
ljmp
xor
das
mov
push
sahf
mov
xor
mov
cmp
push
pop
cs
pushf
mov
jne
adc
in
arpl
adc
daa
sbb
loope
lea
jg
inc
test
or
mov
jne
xrelease
xchg
jmp
nop
xchg
sahf
mov
jecxz
jmp
mov
dec
into
xor
push
cld
cld
dec
push
inc
cmc
mov
inc
out
decl
imul
sub
movsb
mov
movb
pusha
int
inc
sbb
sbb
adc
lock
sbb
adc
lods
scas
xorl
adc
push
cmp
decl
in
adc
aas
fimuls
fimuls
jmp
out
aaa
shlb
add
test
mov
lds
cld
mov
mov
int3
and
cmp
gs
lret
mov
xchg
sti
int3
pop
call
test
jl
dec
sbb
call
xor
pushf
xor
pop
test
in
xor
add
mov
ljmp
push
int
gs
iret
mov
inc
cmp
jmp
call
mov
jne
push
xchg
int
aas
lea
inc
xor
mov
sub
add
jg
adc
emms
push
xor
mov
push
mov
sbb
ds
ljmp
pop
mov
push
add
mov
pop
or
add
pop
push
fcomps
push
push
cmpsb
dec
stos
inc
and
decl
movsl
sbb
sbb
call
push
mov
roll
push
mov
mov
into
and
ds
outsl
and
ds
lds
cmp
xor
sub
pop
jno
popa
fstpl
mov
aas
dec
insb
enter
ss
pop
imul
mov
ljmp
call
inc
in
mov
jp
jbe
sub
sbb
inc
push
out
imul
lcall
or
repz
mov
mov
and
adc
sub
xchg
lods
push
fnstenv
cld
pushl
sub
cltd
pop
pop
adc
scas
xchg
or
add
xchg
mov
fstp
and
push
pop
jecxz
mov
sub
in
decl
pop
cmc
lcall
cs
test
fs
fisubl
jns
inc
adc
rorb
jmp
sbb
mov
or
mov
cmpsb
outsb
data16
and
sub
aas
add
sbb
pushl
jno
data16
push
notb
mov
pop
out
repz
xchg
mov
jle
repz
lock
mov
and
dec
inc
rorb
mov
push
lret
jg
lcall
sahf
jbe
cmp
stos
xchg
ret
inc
pop
scas
push
add
ja
jl
cmp
mov
jg
daa
stos
sub
lea
adc
rcll
add
pushf
xlat
cld
push
lret
push
push
ljmp
add
fisubrs
cmc
sbb
pop
lret
repz
xchg
push
ja
mov
mov
cmp
fisubrl
add
or
jb
ljmp
aaa
scas
mov
add
shrb
mov
inc
lods
mov
mov
add
insl
jmp
push
and
and
out
sbb
scas
sahf
fs
insb
stos
mov
dec
add
and
into
daa
outsl
pusha
nop
or
push
das
cmc
leave
push
push
pop
push
jecxz
or
aam
nop
clc
mov
sbb
cmp
loopne
jbe
popa
lahf
push
cmp
test
add
rcrb
jmp
les
call
mov
sub
in
imul
adc
dec
adc
aad
and
cmp
sbb
imul
adc
jmp
sbb
xchg
fdivr
push
push
imul
lcall
cmp
fisttpll
mov
pop
test
jno
pusha
in
jle
adc
cmp
daa
lret
and
out
cli
push
aad
mov
incb
inc
cld
push
lret
stos
repz
fwait
popa
sbb
mov
ljmp
sar
add
in
aam
sub
or
popa
loop
adc
sbb
cmc
jmp
push
ret
orb
ret
mov
cltd
sub
cmp
roll
mov
fistps
call
cmp
orps
stc
idivb
mov
xchg
pop
addl
dec
mov
xor
in
mov
scas
xlat
pop
xor
call
dec
mov
xor
decl
pop
mov
in
shlb
pushf
and
repz
test
out
dec
push
loopne
repnz
repz
nop
hlt
mov
insb
sbb
mov
jo
out
cltd
pop
xchg
or
rolb
sbb
subb
cmp
call
loopne
sub
cmp
xor
xchg
movsb
mov
std
mov
lea
and
mov
das
loope
mov
jmp
ret
hlt
lods
lock
adc
scas
push
daa
push
enter
jne
ret
xchg
jno
or
cmpsb
bound
pushl
loopne
pushl
stos
das
lret
cmpsb
xor
jae
dec
cmp
std
call
mov
xchg
or
jp
arpl
mov
js
mov
cmp
and
mov
pop
mov
addr16
clc
pop
mov
sub
jmp
inc
andl
mov
sub
adc
imul
add
incl
aaa
adc
sub
in
pop
loope
jg
mov
dec
sub
cmp
call
sbb
mov
unpckhps
cli
mov
mul
jmp
lcall
arpl
pushl
cwtl
ret
xor
and
adc
mov
mov
add
popa
mov
jmp
jecxz
or
mov
mov
lea
pop
adc
aaa
dec
push
popf
decl
inc
insl
mov
and
adc
mov
outsb
int3
in
fucomi
sti
les
mov
xchg
mov
jecxz
lods
fs
sahf
test
leave
addr16
fstpl
call
mov
jns
scas
xchg
mov
add
fisttps
mov
jmp
sbb
inc
adc
sqrtps
xchg
sub
leave
decl
decb
popa
js
xchg
popa
bound
and
movsl
insl
mov
sbb
push
bound
lods
add
and
sbb
push
test
sbb
jecxz
lret
mov
xor
add
pushl
xchg
adc
add
ds
jle
cmp
mov
dec
dec
jo
mov
jg,pt
add
mov
fcos
inc
clc
cltd
sbb
popa
sub
add
and
nop
lret
aam
lcall
xor
pusha
enter
jb
in
sti
lret
arpl
addl
mov
jmp
or
pop
sub
mov
leave
sub
pop
scas
daa
xchg
in
out
mov
lods
sub
rolb
scas
mov
jmp
dec
mov
jecxz
xchg
adc
popa
sub
popf
lds
dec
mov
out
pop
mov
incl
repz
cmpsb
fdiv
test
mov
mov
push
leave
ja
and
inc
jmp
std
sbb
mov
lcall
in
icebp
insl
subl
adc
int
aaa
imul
les
or
mov
mov
jb
inc
push
xor
mov
push
jg
mov
adc
fwait
arpl
or
popa
fdivr
scas
test
insl
mov
sub
out
sub
pop
loopne
mull
mov
xchg
pushf
in
dec
fsubp
inc
shrl
shl
ret
fwait
test
mov
arpl
mov
sub
cltd
dec
add
adc
xchg
cmp
in
xor
mov
test
movsb
sub
repnz
test
dec
mov
adc
inc
xor
lods
cltd
push
mov
xchg
mov
lret
push
jge
jle
and
inc
xchg
add
nop
loop
fcoml
popf
divb
mov
int3
pop
sub
and
decl
or
fistl
inc
xor
pop
xor
xchg
mov
adc
decl
sarl
mov
sub
xor
pop
mov
mov
outsb
jno
imul
loope
enter
call
fidivrs
stos
stos
xchg
test
sbb
mov
push
pop
ja
cmp
jg
cmp
jge
psubsw
cs
adc
les
xchg
adc
adc
add
out
lcall
fwait
iret
mov
pushl
inc
js
das
js
push
xchg
mov
inc
sbbb
fsubrs
enter
incl
inc
sbb
adc
lock
xor
pop
dec
and
inc
aad
pop
mov
push
fs
sti
cmc
or
fcompl
pop
mov
mov
or
dec
mov
repnz
mov
imulb
mov
testl
popl
jb
aaa
pop
fldt
mov
cmpsb
aaa
loop
fcomip
imul
scas
cli
jle
xor
xchg
push
test
in
push
dec
sbb
cltd
jl
lcall
bound
sbb
dec
cmp
dec
rcr
mov
push
imul
adc
jle
xchg
aaa
stos
adc
aaa
adc
fisttpll
dec
inc
and
shlb
sbb
call
iret
cs
adc
mov
inc
xor
jbe
pop
pop
into
mov
mov
dec
ljmp
aam
pop
sbb
cltd
mov
leave
pop
mov
es
xor
cmp
pop
inc
inc
filds
shl
out
xor
popf
int
or
clc
in
iret
clc
das
clc
pop
jl
jp
icebp
xchg
push
nop
fmull
ret
sahf
ljmp
push
out
xchg
xchg
mov
gs
jp
jl
mov
jne
stc
xchg
mov
adc
dec
shlb
and
xlat
or
mov
cmc
mov
jg
decl
out
lret
enter
ljmp
dec
xor
or
stc
mov
ljmp
inc
pushf
xchg
insl
lods
negb
sbb
jl
fdivrp
fwait
movsl
mov
adc
filds
adc
mov
imul
stos
xchg
lahf
xchg
xchg
add
mov
bound
lds
jg
mov
mov
xchg
in
and
inc
push
pop
sub
or
sarb
jg
decl
pop
jmp
pop
pushf
add
xchg
cmp
mov
pop
adc
std
ljmp
inc
xor
mov
lods
sahf
aas
pop
mov
add
sahf
xchg
pushl
push
bound
or
jo
lcall
mov
and
in
lock
lock
mov
loopne
push
adc
lods
iret
gs
inc
xor
inc
adc
loope
xchg
jo
std
incl
fcomps
icebp
push
or
cmp
iret
imul
cli
dec
cmp
or
lcall
lcall
jl
mov
xchg
ja
loope
stc
lea
mov
or
lcall
lret
repz
lods
mov
enter
pop
adc
sbb
sti
cmp
cmp
push
cwtl
shll
dec
mov
sbb
outsl
andb
test
addb
adc
aaa
add
pushl
std
inc
dec
je
popf
not
mov
int
lret
mov
stc
mov
incl
sub
movsb
lea
jmp
outsl
sub
and
outsb
inc
lahf
jmp
sub
xchg
inc
mov
mov
add
movsl
clc
mov
loope
loop
push
add
and
outsl
sub
or
mov
dec
ss
or
xor
mov
das
clc
push
jbe
pop
push
jp
rclb
pop
dec
jae
push
cmp
pusha
sub
sbb
mulb
xor
call
gs
lret
or
push
nop
mov
xor
sbbl
shrb
mov
nop
dec
inc
adc
call
xchg
and
mul
ficoms
sub
jnp
pushl
adc
or
mov
call
wbinvd
idivb
and
clc
ljmp
rcl
test
ja
xor
les
loopne
fcmovne
mov
into
jb
push
mov
imul
sbb
test
inc
jecxz
repz
jmp
loope
mov
adc
test
test
int3
or
adcl
inc
std
ret
insl
xor
hlt
stos
cmp
jo
lret
clc
lcall
je
adc
decl
sbb
and
xor
addb
ret
sti
mov
stos
imul
je
shl
fsub
scas
dec
inc
jl
sarl
pop
lret
and
push
pop
or
js
mov
imul
sub
out
stc
out
in
pusha
sbb
push
es
daa
xchg
das
popf
ds
decl
repnz
hlt
inc
dec
add
jb
push
xchg
les
add
push
ds
xor
mov
fistpll
push
js
addb
out
sahf
sbb
add
inc
mov
imull
insb
cmp
jno
mov
popa
sub
nop
incl
es
ljmp
cld
std
adc
fcmove
outsl
jae
pusha
cld
les
mov
pop
out
popf
outsl
and
adc
in
test
adc
ret
popaw
adc
push
aas
push
sar
inc
repnz
mov
decl
mov
lock
adc
popa
mov
out
xchg
popa
mov
out
or
xchg
adc
sub
das
pop
outsl
mov
dec
dec
aad
mov
mov
xor
and
adc
imull
xchg
xor
sub
call
scas
js
mov
inc
dec
mov
mov
sbb
xchg
stc
push
fs
xor
cmpsb
inc
sti
sbb
xor
mov
es
out
jo
xor
jg
jle
inc
and
mov
adc
lds
push
push
test
out
jg
cmp
data16
jge
mov
jmp
inc
test
mov
dec
ret
or
ret
fistpl
sbbb
aad
mov
and
icebp
cmpsl
repz
or
pop
ljmp
pop
cmp
movsl
ljmp
faddl
sbb
pop
push
push
shrb
cmp
ss
push
dec
mov
jae
pop
and
and
push
aas
rcr
call
fstps
lods
mov
and
inc
dec
and
xchg
mov
mov
inc
push
mov
incl
xchg
in
je
aad
call
and
xor
xchg
in
insl
fdivl
popa
push
xchg
pushl
sbb
fcoms
sbb
imul
int3
out
icebp
inc
jne
fistpl
sbb
addr16
rcll
loopne
js
lock
in
xlat
mov
fimuls
sub
cmp
and
clc
sbb
and
nop
xchg
pop
and
repz
and
jg,pt
inc
mov
adc
push
dec
jg
popa
adc
sbb
lods
lds
adc
call
mov
sub
jge
gs
test
sbb
int3
mov
out
ret
call
popf
pop
stos
in
pop
mov
iret
lret
ficomps
jecxz
pop
pop
ss
mov
js
jno
add
cmp
cmp
es
sub
cld
dec
jp
pop
std
incl
fimull
imul
lret
nop
sbbl
or
jg
and
sahf
fimuls
push
out
xor
xchg
push
sahf
jns
out
xchg
mov
test
js
xchg
pop
outsl
mov
decl
dec
in
cmp
aad
popa
sahf
shlb
add
pop
jmp
aam
aam
pushl
xchg
push
cld
pop
sub
cmp
inc
inc
pop
pop
sub
mull
xorl
pusha
popa
pop
lock
fs
or
mov
ljmp
mov
aas
dec
xchg
mov
ret
mov
ja
sbb
push
jmp
xchg
loope
test
rol
push
pop
push
jns
jle
mov
xchg
int3
scas
pop
and
in
ljmp
jo
xor
xchg
xchg
sarb
repz
adc
incl
rorl
je
arpl
idivl
and
popa
loopne
mov
das
adc
fisubs
ss
aas
mov
lcall
xor
and
int3
out
stos
sub
incl
mov
mov
mov
mov
call
and
xchg
push
arpl
pushl
or
and
cmp
fwait
test
cmpsb
loope
dec
push
xor
jg
or
push
fldcw
sbb
add
shlb
add
dec
sbb
push
outsl
shlb
mov
negb
out
push
imul
fcomip
call
mov
ret
int3
into
dec
xchg
pop
push
cmp
lret
xchg
mov
ds
ljmp
data16
mov
stos
inc
xor
jg
dec
dec
pop
xor
movsb
lret
shlb
roll
fwait
push
scas
dec
outsb
push
jne
push
rorl
lds
pop
daa
hlt
pop
xchg
mov
repnz
inc
sub
lods
outsb
adcb
jl
cld
clc
call
ficomps
in
js
cmpsl
icebp
mov
mov
lods
push
test
or
pop
clc
ljmp
cmpsl
jle
test
mov
fdivrs
and
pushl
cli
mov
xchg
mov
test
decb
push
jp
test
fidivrs
jl
cmp
push
xchg
jl
in
add
call
lcall
dec
sub
inc
clc
outsl
jl
and
iret
lea
nop
xchg
jle
cmp
or
mov
fdivl
decb
cmp
shll
in
cmp
push
mov
and
xor
loope
push
xchg
decl
rcll
adc
add
shll
mov
mov
dec
add
and
decl
scas
in
lret
out
adc
jnp
fwait
and
xchg
test
mov
cmp
add
inc
inc
and
mov
incl
xor
ja
rorb
add
cld
cld
jmp
jmp
mov
mov
jg
add
lock
xchg
cmp
pusha
daa
sbb
cld
mov
lahf
rcl
mov
dec
inc
out
push
adc
les
jae
push
sub
jno
inc
imul
jmp
mov
jg
push
popa
sbb
xchg
or
mov
inc
loopnew
call
sub
mov
push
add
sbb
xor
loope
ljmp
hlt
out
lret
cld
stc
int3
inc
ret
and
dec
mov
cmp
push
adc
loopne
mov
ret
out
clc
gs
scas
add
pop
sbb
or
scas
mov
leave
sbb
scas
pop
sbb
push
gs
rcll
cli
decl
add
das
pop
js
jnp
and
push
pop
outsl
lcall
lret
lcall
dec
fisubrs
push
fs
mov
mov
jo
pop
fcom
sbb
fidivl
mov
cmpsl
dec
jecxz
adc
jl
or
ljmp
sub
adc
cs
xchg
aad
add
and
mov
push
cmp
pop
popf
imul
cmp
test
sti
aad
pop
or
push
pop
jae
popf
mov
shr
in
das
xor
out
idiv
incl
jno
dec
cld
ds
popf
dec
lods
lea
in
mov
cmpsl
xchg
push
outsl
or
dec
push
fcompl
push
iret
cld
cltd
es
cld
mov
xor
sbb
arpl
out
rcrl
add
cmpxchg
mov
jp
push
mov
sub
adc
fcompl
aas
daa
inc
xchg
xchg
aam
ret
fldl
cld
xor
loope
jnp
imul
ret
sbb
mov
mov
incl
stos
in
mov
pop
sub
dec
mov
aaa
repnz
cmpsb
test
into
mov
ljmp
hlt
fwait
jl
bound
mov
repnz
xor
and
aas
and
in
test
or
aad
push
dec
pop
adc
sub
js
mov
aaa
std
jg
adc
ret
mov
jb
nop
sbb
xor
sbbb
incl
std
xlat
mov
inc
mov
adc
jno
addr16
pusha
mov
fs
adc
lods
jmp
adcb
jle
lahf
add
loopne
aaa
adc
mov
addr16
cmp
in
and
das
outsl
push
mov
je
rcrl
push
jnp
ss
sub
popf
fchs
mov
das
mov
sbb
in
inc
lock
imul
rorb
das
cmpsl
aaa
aaa
popf
das
fs
or
ljmp
fcomps
and
in
dec
xor
test
cmp
mov
icebp
call
test
dec
or
xchg
xor
nop
push
mov
lock
ds
lods
ss
popf
add
mov
mov
sbb
jg
je
dec
inc
mov
stos
js
sbb
or
adc
or
incl
in
sqrtps
xor
mov
mov
adc
pop
sub
pop
push
dec
jp
xchg
jae
xlat
fbld
jmp
arpl
pusha
mov
push
mov
adc
sbb
jg
xchg
fidivrl
mov
cmp
adc
mov
int3
int
push
lock
inc
sbb
ljmp
sbb
jae
sub
std
fidivrl
bound
out
mov
xchg
incl
adc
xchg
lea
lds
jp
jb
rcrb
push
push
jae
push
fcmove
xchg
icebp
mov
and
add
js
jg
in
movsl
fildll
jp
cmpsl
sbb
add
mov
push
pusha
icebp
call
pop
into
aad
fucomp
inc
rorl
and
and
ljmp
pushf
sub
push
mov
pop
fnsave
fld
or
gs
add
add
pop
dec
adc
jl
jo
dec
mov
aam
subl
push
push
dec
push
imul
pop
test
out
ljmp
cmp
jne
clc
pop
add
mov
nop
jne
or
jbe
sub
scas
lcall
inc
xlat
or
push
or
cmp
call
nop
push
cld
inc
jecxz
gs
jge
mov
call
lret
fistpl
hlt
cmp
test
fsts
ret
jg
inc
mov
push
inc
jae
lahf
iret
mov
fidivrl
add
out
xchg
jmp
cmp
popf
dec
sbb
pop
test
lcall
xor
xor
fs
mov
rol
push
pushl
cmc
and
insb
jp
sbb
dec
dec
les
add
push
pop
xchg
decl
xor
mov
lcall
test
mov
cs
add
js
and
mov
enter
xchg
gs
ljmp
xchg
mov
call
jle
mov
sub
xor
sbb
mov
fldl2e
das
rolb
jp
leave
ljmp
xor
pop
xor
pop
jo
xchg
fs
fmuls
fisubrl
std
xchg
or
flds
insb
pop
ss
stc
cli
xchg
test
inc
rcrl
ljmp
xchg
mov
je
pop
add
outsl
test
popa
in
int3
sbb
sbb
xchg
pop
cmpl
cmp
mov
pop
test
mov
xchg
mov
inc
notb
imul
push
lock
mov
pushf
ds
jmp
cs
insb
pop
push
lahf
xchg
jo
pop
mov
push
sub
mov
push
mov
ljmp
fs
push
sti
mov
aaa
or
sub
push
jge
into
and
adc
ljmp
pusha
cld
xchg
inc
mov
add
pop
mov
fwait
cmp
xor
sbb
jbe
lods
scas
je
std
out
not
decl
cld
scas
in
popa
js
and
test
outsb
push
push
jp
outsb
cs
jl
adcb
mov
cld
pop
mov
jmp
call
inc
jns
inc
ret
push
xchg
repnz
xchg
push
cmp
out
outsl
dec
sbb
in
add
in
mov
cmp
imul
jmp
mov
push
sub
inc
subb
inc
push
js
ss
mov
push
mov
nop
sbb
orb
sar
pushl
push
pop
test
test
mov
rcl
xchg
dec
pop
int3
pop
jne
jge
pop
and
xchg
xchg
aad
xchg
in
and
pop
adc
out
push
jg
pop
mov
popa
cli
jmp
sbb
mov
aad
xor
pop
mov
popf
stos
stc
inc
push
push
iretw
sahf
inc
sarb
inc
ljmp
mov
add
divb
xor
incl
xchg
add
sub
pop
sub
out
push
repnz
jno
or
cli
mov
ja
loop
movsb
in
adc
push
adc
add
cmp
jle
decl
stc
pop
mov
push
and
push
xchg
fidivrl
or
hlt
cli
fcomip
pushl
jg
loope
imul
and
pushl
pop
lahf
mov
xchg
int
mov
pop
outsl
fcoml
xor
call
mov
repnz
in
jecxz
fldl
adc
addl
loopne
lcall
lock
lods
scas
outsb
lret
xchg
cmp
fsubrs
ljmp
dec
insl
jp
hlt
popf
les
mul
out
inc
aad
and
mov
add
and
decl
rolb
adc
bound
test
fcompl
dec
or
pushl
lock
pushl
mov
xchg
jg
pop
dec
call
cli
sti
movsl
fwait
or
push
add
cmp
lcall
mov
popa
mov
add
fcompl
cmp
insb
lods
lret
mov
cld
sbb
ljmp
jl
out
jl
push
pop
lods
sbb
mov
add
ret
fwait
and
cmp
push
mov
into
mov
inc
pop
inc
dec
mov
les
fdivrl
stc
cmpb
mov
leave
xchg
xchg
xor
adc
call
loopne
data16
mov
add
push
dec
xor
xchg
out
sar
jg
rcl
ficomps
fiaddl
ljmp
jge
ja
push
clc
incl
outsb
into
or
jmp
jns
nop
incl
mov
xor
in
mov
and
add
ljmp
ret
push
fcomip
fnsave
inc
inc
pop
jb
jge
mov
xchg
push
mov
mov
movsb
mov
push
xor
mov
out
mov
or
xor
mov
iret
lret
aas
jae
dec
dec
ljmp
pushw
in
jg
clc
adc
cld
sbb
aam
add
cmp
and
pop
clc
decl
cmp
lcall
xor
ret
enter
std
stos
or
jle
dec
ljmp
fsubl
cwtl
fbstp
je
adc
ljmp
cmpl
xchg
loopne
cli
in
sub
pop
pop
pop
into
leave
subl
push
stos
stc
in
inc
sbb
xchg
mov
dec
in
adc
sub
fwait
mov
lods
inc
mov
hlt
mov
xor
incl
mov
xchg
faddl
push
mov
push
jle
push
movsl
das
lret
dec
or
jno
pop
or
scas
ja
decl
call
sbb
shl
xchg
montmul
cmpsb
cmpb
aaa
out
mov
sub
test
out
dec
int
cmp
js
test
ljmp
sbb
and
sbb
mov
and
push
push
pop
cmp
mov
xorb
xorb
and
xor
decl
cmc
enter
stc
iret
or
sub
dec
jmp
lcall
mov
leave
mov
xor
sbb
es
jne
subb
mov
lcall
loop
les
dec
inc
dec
push
clc
subl
pusha
mov
sbb
lcall
imul
ret
call
and
fs
xchg
fistl
jo
cmc
jae
jno
or
dec
or
jmp
mov
or
fwait
push
cmp
mov
movsl
mov
testl
cld
fistl
bound
mov
pop
jne
in
adc
xchg
fwait
pop
or
or
xchg
imul
jmp
enter
pop
adc
push
push
dec
inc
xchg
jo
ja
jecxz
mov
inc
cld
pushl
lock
stc
call
mov
xchg
jg
cwtl
mov
inc
js
adc
cmpsl
test
jl
test
popa
xor
cmp
loopne
push
pop
outsb
cmc
ss
inc
jle
xchg
into
out
out
and
adc
lcall
add
test
mov
js
jp
call
and
ret
dec
scas
movlps
pop
movsb
cld
or
nop
testb
cmc
insb
jle
es
adc
pop
or
incl
les
in
mov
and
mov
lcall
xchg
xor
xor
shlb
int3
imul
jo
test
dec
mov
jno
adc
mov
sbb
fwait
cmp
aas
js
push
ljmp
inc
loopne
cld
pop
lods
push
lea
daa
inc
jg
out
xor
adc
jne
jae
jecxz
cwtl
dec
scas
xchg
enter
add
mov
mov
lods
cwtl
cmp
clc
lret
cmpsb
out
dec
pushl
std
jns
sbb
fld
js
xchg
xor
shrl
adc
xor
inc
pop
push
xchg
repz
jnp
mov
mov
pop
sbb
cmp
ljmp
imul
rcr
fadds
getsec
xor
jno
gs
loope
fisttps
mov
jo
in
loope
push
fsts
push
daa
fiadds
xchg
xlat
pushl
out
out
mov
mov
lods
imul
test
mov
push
ljmp
sar
loop
add
cli
push
enter
adc
adc
and
ljmp
dec
aas
add
jb
lahf
cmp
cmp
add
insl
push
dec
and
fistl
decl
inc
mov
es
xor
cld
push
jl
addr16
shll
cli
jecxz
mov
lcall
xor
pop
push
xchg
scas
sbb
push
jmp
jp
sbb
call
jo
test
je
ror
adc
push
xchg
xchg
xor
arpl
call
sub
and
cmpsb
push
or
call
out
dec
dec
decl
sub
cmc
cmp
jg
ret
mov
add
aas
repz
std
mov
fstl
push
and
xor
xorl
mov
mov
lods
adc
lcall
sar
cltd
and
cli
call
cli
mov
pop
cmp
jl
adc
jecxz
jmp
jno
stc
dec
ds
inc
xchg
sarl
mov
popf
sti
gs
sbb
pop
pop
leave
pusha
dec
add
mov
mov
push
xchg
in
sbb
scas
enter
sbb
or
mov
cmp
out
repnz
out
push
xchg
lret
pushf
ffreep
push
enter
jns
sbb
loope
sub
ss
xchg
in
sbb
cmpb
inc
or
test
mov
fisubl
call
cld
jo
sub
dec
adc
ret
sbbl
out
dec
jp
xchg
clc
mov
test
je
xchg
xchg
cwtl
or
je
stc
mov
ucomiss
push
mov
sbb
mov
mov
adc
lahf
movb
incl
jnp
popf
cmp
jle
mov
push
lret
sub
bound
mov
in
inc
xor
xor
mov
dec
mov
scas
jb
pushf
xlat
mov
sahf
cld
enter
jno
mov
pushl
mov
neg
decl
sahf
sbb
jb
jg
loopne
test
push
pushl
shrb
clc
xor
dec
mov
inc
xchg
rcrb
repz
jp
and
stos
imul
mov
in
jmp
add
cmp
test
jmp
cs
cld
jno
jg
lea
jbe
mov
dec
insb
pop
inc
clc
decl
lea
sbb
sub
or
push
idivl
and
pushl
sarb
ret
rorb
fstpt
dec
sbb
pushf
hlt
jg
decl
popa
jno
cli
call
rolb
sub
xor
scas
xchg
cmp
nop
lahf
adc
les
ja
call
andb
popa
fcmovnbe
pop
jbe
push
enter
fistps
push
cmp
pop
cs
call
xchg
mov
popf
sar
repnz
jmp
or
aaa
dec
loop
mov
mov
shrb
das
sar
or
mov
xchg
fstpl
repz
mov
and
sub
push
adc
mov
mov
ss
frstor
adc
inc
jnp
sub
lock
push
lahf
inc
in
inc
add
incl
add
sub
mov
pop
sub
incb
rcr
ds
mov
fcoml
mov
loopne
xchg
mov
lds
push
and
push
inc
mov
ret
test
incb
out
jmp
dec
lahf
out
movsb
mov
jg
stc
xor
pop
mov
rorl
ds
and
mov
loopne
adc
faddl
repnz
jno
and
mov
and
push
xor
mov
inc
fldl
les
or
out
mov
pop
mov
sbb
outsl
fistpll
lahf
cs
loopne
mov
lcall
rcrb
pop
movsb
out
mov
mov
repnz
or
mov
stos
rolb
push
mov
push
pop
inc
outsb
scas
dec
xchg
xor
pop
sbb
pop
jae
sbb
mov
inc
incl
cmp
jmp
stc
jmp
sub
sbb
or
push
xchg
adc
mov
and
aam
repnz
sti
mov
and
mov
ljmp
mov
mov
lcall
jae
cltd
and
fwait
add
mov
outsl
inc
push
cmpsl
insl
push
test
jns
loop
cwtl
add
ljmp
jg
lcall
jb
sub
loope
push
es
movsb
popf
orb
in
pop
adc
fistpll
cmp
mov
mov
rcll
or
push
cltd
push
icebp
lock
mov
jecxz
adc
popa
dec
gs
test
mov
cltd
mov
dec
ljmp
movsb
adc
test
push
lods
cmp
std
cld
sub
pop
lcall
push
jecxz
subl
dec
test
adcl
leave
fcomip
jle
rclb
cmpb
mov
insb
jmp
cmp
pop
cmp
and
je
pop
adc
rcr
jb
out
repz
mov
sarb
mov
sahf
mov
fadds
jns
xor
xor
mov
mov
xlat
stos
stos
sbb
pusha
imul
adc
lds
fsubrp
sub
fcompl
test
mov
js
sbb
jns
fcompl
adc
das
fcomip
sub
pop
mov
into
mov
adc
ror
pop
outsl
test
out
jmp
pop
sub
jp
jg
pop
xchg
pop
sahf
sbb
add
outsl
lds
adc
jne
dec
mov
ljmp
push
icebp
in
jns
imul
jbe
mov
lock
cmp
scas
xchg
sub
call
orb
repz
pop
cmp
lahf
mov
push
xchg
fisubl
jle
pop
mov
jns
push
sub
pushl
popa
pop
js
pop
aad
or
mov
hlt
enter
jb
fcoms
std
incl
sarl
loope
mov
mov
int
add
push
or
ds
incl
and
lahf
xor
in
and
inc
insb
fstps
mov
adc
push
fadds
mov
push
or
adc
inc
adc
ljmp
out
mov
add
fwait
mov
jmp
jb
sub
sbb
jae
out
mov
out
sbb
imul
hlt
jmp
out
jg
lcall
dec
lea
inc
mov
inc
adc
push
lahf
call
lcall
add
in
pop
pop
or
bound
das
ljmp
movsl
test
das
jle
pushf
mov
mov
sub
mov
mov
rcrb
sbb
shrl
inc
aas
fimull
das
add
stc
fiadds
push
or
hlt
es
adc
or
push
push
ljmp
push
lock
mov
test
jg
mov
xchg
adc
loopne
ja
clc
cmpsl
xchg
fnstsw
jmp
mov
and
lahf
jnp
inc
mov
mov
xchg
sub
pop
xchg
adc
clc
in
dec
inc
jno
mov
bound
bound
and
jp
popa
jbe
stos
dec
jno
lods
aad
in
scas
mov
pop
pusha
loop
test
lea
call
adc
sub
push
out
test
call
cld
mov
push
cmp
shrb
and
push
icebp
jnp
arpl
inc
cld
decl
jno
popa
jecxz
js
and
int
loopne
fcmovb
or
jl
mov
mov
or
ljmp
or
jno
jp
std
sbb
xor
ja
and
pop
out
aaa
dec
lock
jmp
aaa
inc
mov
pop
pop
in
test
or
subb
filds
aam
jg
cmp
outsb
clc
das
shrb
fcoml
jae
and
cmp
fisubrl
sbb
clc
cs
xor
inc
jg
sub
in
dec
push
fisttpll
lahf
pop
je
ret
push
add
lcall
inc
sbb
cmpsl
jne
xchg
pop
mov
call
repnz
mov
xchg
in
fnsave
inc
dec
imul
mov
and
and
aaa
or
or
add
mov
inc
add
les
insl
adcl
inc
fildl
outsb
std
cmpsl
add
xlat
enter
aas
and
jle
clc
dec
testl
mov
add
push
pop
insb
mov
sti
lds
addr16
cmp
cli
cs
repz
adc
enter
xchg
ljmp
mov
lret
icebp
cmp
jge
les
cwtl
icebp
mov
rorl
cmp
in
lock
and
adc
jno
test
pusha
out
decl
xlat
xchg
xchg
or
aam
lods
orb
xor
add
je
inc
xchg
add
xlat
sbb
loope
cmc
jecxz
cmpsb
jnp
xor
sbb
lcall
mov
cmp
and
push
or
lcall
fisttps
push
cmpsl
sub
mov
sbb
inc
jns
jmp
div
jo
fstpl
jae
cld
jnp
ds
mov
sbb
fisubrl
outsb
inc
xchg
pop
and
pop
incl
pop
jns
inc
stos
cmp
rcr
shrl
shrb
mov
and
push
js
cmp
call
jge
pop
mov
ja
dec
and
loope
ljmpw
shr
xor
movsb
iret
add
lcall
mov
test
jg
xor
testb
rorl
jbe
push
sub
dec
call
sub
xchg
arpl
fsubrl
mov
mov
or
mov
int3
pushl
hlt
mov
mov
sub
sbb
sbb
jb
inc
inc
mov
insb
dec
pop
decl
jmp
fabs
in
and
add
mov
outsb
ljmp
ljmp
cmp
push
sahf
movsl
jnp
mov
aad
into
pop
push
cmpsb
push
jbe
sbb
fsubrp
add
push
push
and
inc
xchg
stc
scas
into
ret
add
dec
ja
mov
ds
sbb
pop
je
fcoml
sbb
mov
push
fistpll
adcb
mov
outsl
xchg
rcrb
push
gs
push
lcall
adc
loope
and
sbb
add
adc
inc
mov
rolb
fdivrl
out
addb
iret
inc
push
popa
out
mov
fs
call
lods
data16
and
and
push
mov
mov
jl
lcall
mov
cmp
daa
insl
adc
lods
mov
mov
or
mov
out
stc
dec
test
inc
fwait
outsb
cmc
dec
push
test
daa
sbb
jge
push
outsb
mov
lcall
call
xchg
in
mov
mov
add
inc
or
aas
popf
negb
adc
imul
mov
insb
cmpsl
or
js
fidivrs
fists
incl
shl
inc
aas
inc
cs
jmp
mov
xlat
out
mov
mov
mov
divb
push
jl
clc
mov
inc
fwait
fwait
mov
mov
inc
repnz
or
incl
mov
lods
pop
inc
loop
sbbb
xor
add
ljmp
push
ret
pop
ret
arpl
les
lock
push
data16
fisttps
out
jae
loope
sbb
fsubrl
xor
mov
les
mov
fdivrl
pop
mov
test
mov
int
out
cltd
and
mov
xchg
pop
bound
cmc
ljmp
sub
fisubl
pop
out
out
bound
sti
cmc
rep
pop
lea
jle
dec
cld
int
fs
and
stos
adc
fwait
mov
roll
test
out
add
inc
pusha
add
mov
sub
vmwrite
inc
xor
lret
sti
adc
aad
icebp
incl
bound
jle
ret
xlat
cmp
pop
ja
lcall
lcall
lea
cld
jg
pop
test
pop
dec
sub
mov
mov
mov
sbb
inc
sbb
inc
sub
lock
clc
decl
mov
push
or
adc
dec
push
inc
imul
outsl
push
dec
xchg
inc
ret
ret
push
sub
sbb
mov
pushf
cli
mov
pop
xor
das
sub
jo
xchg
fsubp
fnstcw
sbb
push
clc
push
lock
mov
add
scas
sbb
jns
or
xor
das
cli
decl
jp
fidivl
jb
or
sub
jmp
add
mov
shlb
mov
add
leave
sbb
jp
lods
in
mov
decl
pop
fsubrs
imul
in
add
das
xchg
mov
int
mov
idiv
jmp
ret
rcrl
imul
xor
xchg
mov
xor
daa
call
inc
fstps
lods
int
addr16
mov
dec
mov
in
cmc
pop
inc
cmp
cmpsb
sti
sub
ret
out
dec
xor
mov
popa
mov
decl
push
pop
lret
add
jp
insl
in
inc
hlt
xchg
mov
mov
loop
out
loop
out
adc
in
lcall
frstor
mov
les
es
cmp
pop
jl
push
jg
dec
push
incl
adc
or
int
inc
pop
dec
push
iret
scas
pop
xor
adc
sar
and
clc
mov
movsl
stos
hlt
jb
shll
adc
sbb
pushf
movsb
fldenv
les
push
out
lret
sub
lds
repnz
aaa
js
mov
sbb
push
sub
xchg
loope
adc
sub
dec
mov
loope
decl
fwait
test
lret
dec
push
call
push
push
pop
cmc
lret
pop
push
shr
call
sub
mov
or
out
jmp
sub
in
out
push
push
loope
rcl
push
ljmp
mov
or
js
into
cmpb
jg
sub
inc
lock
sub
test
xor
andl
push
stos
stos
repnz
ss
push
sub
jle
jae
ss
push
mov
add
lcall
data16
out
jne
cmp
add
xor
lds
aad
in
inc
imul
stc
dec
insb
push
je
sti
jno
nop
xorl
inc
mov
aam
outsb
push
js
ret
iret
in
inc
adc
aam
jmp
push
cvtps2pd
fcomi
lret
scas
sti
aas
mov
mov
push
mov
xchg
add
mov
cmpsb
xchg
orl
andb
dec
fs
shlb
hlt
or
fistpl
loope
or
ficoml
mov
pop
lahf
xor
decl
mov
iret
mov
pop
push
and
lea
ljmp
xor
push
stos
test
repz
adc
mov
push
jg
adc
repz
mov
leave
jle,pn
loopne
ljmp
xchg
fcmove
repz
and
mov
mov
xor
pop
mov
pop
dec
imul
dec
xchg
xchg
pop
ret
push
out
in
jg
out
ss
push
sbb
imul
or
cmp
mov
push
ret
add
xor
popa
jbe
lret
dec
cmp
cmp
jmp
dec
imul
mov
mov
and
fistpl
addr16
ss
aad
cwtl
les
sbb
insl
sub
inc
xor
ficoms
daa
insb
in
mov
decl
push
cmp
mov
and
xchg
inc
loop
out
inc
lds
call
call
mov
ror
push
inc
bound
pop
int
rorl
lcall
push
insl
cltd
push
shl
loope
xor
les
aaa
dec
jne
outsl
int
push
addr16
repz
dec
les
mov
test
sbb
popf
mov
and
inc
gs
mov
imul
cmp
jbe
imul
mov
in
mov
cmp
pop
ret
jb
jecxz
lods
test
inc
stc
push
in
cld
insb
adc
and
lret
fcoml
mov
mov
pushl
jg
adc
jmp
push
mull
repz
mov
pushl
cmc
pushf
mov
popf
fbstp
mov
push
mov
test
mov
push
adc
lcall
lods
movsb
test
mov
inc
enter
jno
xor
fidivs
cmp
incl
out
push
mov
jg
int3
out
or
mov
sub
lcall
dec
out
add
rclb
fidivrl
push
inc
aam
cmpsl
lret
push
jae
imul
call
fs
fsts
pop
inc
and
lahf
ja
fs
pop
lahf
cld
fsubrl
mov
decl
push
cli
out
imul
jg
lret
mov
mov
cmp
insb
jne
call
xchg
mov
dec
sbb
dec
cld
subl
or
sub
mov
test
das
popa
sahf
pushl
pop
lods
or
mov
inc
sub
and
jl
adc
loope
mov
mov
push
call
sbb
jno
or
pop
push
pop
and
adc
rorb
iret
fstps
mov
mov
fldcw
inc
negb
jle
jle
xor
bound
fbld
cltd
adc
decb
jne
mov
mov
and
mov
push
sarl
les
fisubrl
dec
andb
idiv
out
clc
rclb
add
leave
adc
cmp
int
mov
adc
decl
pop
clc
xor
std
add
cmp
call
jge
or
les
repnz
jno
sub
or
outsl
cmc
arpl
sub
pop
decl
xchg
out
scas
mov
cmp
fs
jg
mov
test
aad
call
xor
push
imul
loop
daa
jmp
mov
sub
or
xchg
sbb
stos
or
mov
mov
outsb
cmp
decl
lock
dec
aas
mov
aas
add
jnp
fucomip
addb
inc
into
jmp
aam
call
daa
sbb
adc
out
dec
cltd
push
sbb
sbb
pushl
dec
int3
aas
cmp
rorl
dec
daa
xchg
fmull
shrb
push
pxor
in
test
xchg
add
adc
inc
jne
xchg
cs
push
inc
pop
cmp
mov
pop
sub
js
sarl
pop
pop
sarl
clc
dec
jle
div
cwtl
jns
imul
mov
outsl
jl
scas
xchg
mov
xchg
add
cmpsb
test
xor
xor
mov
jmp
decl
sub
arpl
pop
mov
enter
sbb
imulb
out
jge
lods
in
jmp
decl
and
cwtl
addr16
adc
lods
jmp
mov
ss
and
lods
and
dec
lcall
xchg
imul
mov
adc
sbb
sub
add
out
popf
sar
decl
rcrb
jae
push
xor
mov
aam
push
mov
push
push
or
push
mov
clc
call
shrl
cmp
into
dec
stos
stc
ja
mov
ds
add
inc
dec
rorb
inc
pop
cmc
or
shlb
lcall
mov
add
mov
inc
mov
test
jns
sti
arpl
jp
add
jo
xchg
inc
adcl
xchg
pop
mov
push
xchg
ret
stos
lea
inc
mov
sbb
mov
cmpsb
pop
jmp
insb
mov
push
inc
je
dec
icebp
cmp
loop
decl
fsts
jecxz
loop
and
jmp
movsb
push
test
loope
ret
test
dec
mov
data16
pop
cmpsb
push
ret
fidivl
ljmp
jge
jecxz
les
sbb
sbb
pop
sahf
mov
mov
pop
jge
adc
test
push
lea
lods
enter
mov
cmp
mov
fisttps
cmp
fsubs
fistpl
xor
adc
pusha
sbb
dec
cli
mov
xor
xchg
mov
mov
shrl
inc
test
or
decl
mov
sbb
test
inc
cmpsl
push
adc
icebp
enter
and
clc
roll
mov
aaa
cld
jmp
in
aaa
addl
sub
or
fnstenv
cmp
xor
push
jmp
loop
fs
je
in
int
mov
sbb
lahf
clc
subb
pop
scas
sub
call
mov
adcl
stos
adc
lods
dec
ljmp
fisttpll
data16
iret
cmpsb
pop
dec
jbe
test
jge
push
imul
adc
or
pop
mov
les
cmp
das
jecxz
adc
cs
movsl
cmp
xor
fsubrl
jle
jg
sbb
data16
xor
lret
imul
cli
xchg
push
jecxz
add
aaa
cld
xchg
xchg
add
add
mov
mov
into
cmpsl
jge
push
repnz
decl
or
sahf
lds
hlt
add
mov
pushl
out
lcall
cli
adc
xchg
cmp
mov
dec
sbb
cmp
outsl
push
jno
stos
aad
pop
sbb
fwait
enter
jno
in
dec
cmc
mov
lods
arpl
xchg
mov
jge
jno
and
add
shrb
repz
movsb
mov
hlt
xlat
lods
push
sub
mov
fisubrl
test
cmpsl
pop
int
or
je
push
add
bound
jmp
ret
lcall
fistl
fs
or
inc
nop
cmp
xchg
jns
pop
loop
je
jg
add
xorl
pop
cmc
pop
into
nop
dec
cmpsl
ja
xchg
push
sti
adc
sub
xchg
adcl
mov
inc
jg
or
mov
dec
loope
leave
pushf
mov
or
mov
dec
push
lds
pusha
mov
inc
ud0
decl
mov
inc
pop
mov
mov
xchg
inc
insb
xchg
add
sbb
or
decl
aas
xchg
and
push
sub
jnp
pop
cmp
ljmp
inc
enter
and
xchg
mov
xchg
lock
sbb
jno
loopne
gs
push
mov
imul
lret
and
int
icebp
pop
hlt
test
stos
fsubl
das
fcomip
out
mov
mov
imul
out
mov
pop
adc
push
xchg
cmpsl
mov
mov
rcrb
out
repz
out
mov
call
test
sub
dec
sbb
and
bound
and
adc
pop
lcall
xor
test
and
inc
mov
fwait
cmp
push
leave
or
fcomps
mov
inc
push
and
lret
lahf
jno
mov
sti
sbb
jmp
push
push
cmpsl
in
xchg
xchg
rcrl
pop
sbb
pusha
mov
fists
mov
dec
subl
mov
push
ffreep
mov
inc
stc
add
cmp
lcall
jge
loope
ret
push
notl
scas
xchg
push
gs
js
xchg
icebp
sub
sarb
out
cli
pushl
fwait
cmpsl
mov
and
negl
cmp
fbstp
cmpsb
dec
mov
mov
ljmp
jp
mov
loop
mov
dec
sub
in
outsl
ficoml
sbb
xor
xorb
cmp
lret
xor
cmp
stos
cld
lcall
mov
mov
pusha
push
mov
xor
cmp
shlb
clc
push
addr16
cli
sub
ljmp
or
adc
cmp
cmp
fisttpl
inc
cmp
cs
clc
clc
pop
in
aad
fildll
xor
mov
mov
imulb
call
out
jae
sub
jo
sbb
notb
mov
cmp
add
iret
xlat
out
mov
idiv
and
enter
mov
cmp
lds
les
and
imul
sahf
jno
das
fsubs
inc
inc
mov
adc
clc
push
ds
outsl
call
xchg
adc
xor
jge
sbb
push
icebp
cmpsl
adc
fisttps
inc
shlb
fdivs
inc
cwtl
mov
xor
icebp
aaa
jecxz
sbb
push
fwait
sbbb
ja
push
mov
int3
cmpsb
xchg
xchg
sti
push
ss
cld
ljmp
shl
inc
mov
mov
cli
dec
inc
icebp
jnp
outsb
pop
fcmovb
hlt
add
xchg
jae
idiv
decl
push
mov
ljmp
jl
push
idiv
in
add
cmp
lcall
sbb
bnd
stos
inc
rol
mov
dec
ljmp
or
xor
mov
mov
lea
shlb
xor
mov
cmp
xchg
in
sahf
xor
fs
int3
in
pop
cmc
pop
sar
mov
shl
dec
push
jb
lret
mov
pushl
imul
pusha
xchg
aaa
hlt
daa
pop
inc
and
push
mov
fadd
fs
jmp
movsl
push
pop
jle
fwait
push
sub
fdivrl
mov
add
xor
adc
xor
pusha
mov
in
incl
sbb
loop
ljmp
fadd
push
add
cmpsb
cli
mov
test
add
adc
incl
insb
and
loope
jge
xor
and
in
scas
jl
stos
in
or
jmp
pop
cmp
pop
out
adc
fildll
movsl
add
pop
jb
sub
dec
cmp
shl
ljmp
and
lods
cmp
jp
mov
lret
shl
movsb
pop
in
jg
cs
cmpsl
xorb
test
mov
push
or
or
fisubs
ja
mov
call
xchg
mov
cmp
std
fucomip
sbb
jl
dec
or
outsl
jnp
jge
mov
das
lcall
inc
mov
mov
mov
jmp
shll
inc
loopne
or
xor
dec
lcall
lock
sbb
push
scas
xchg
push
xlat
jae
push
negl
mov
mov
inc
jne,pn
ljmp
sub
js
add
daa
jle
add
xchg
test
ss
lcall
mov
fisttpll
xchg
loopne
sbb
and
cli
int
test
add
decl
call
xor
scas
inc
jp
push
dec
mov
mov
mov
pop
add
pushf
dec
pop
and
orb
aas
stos
lea
icebp
cmpsb
fcompl
fcoms
lcall
lcall
cmp
mov
sub
sub
push
out
adc
pop
sbb
in
je
cmpsb
les
decl
popa
ret
es
push
movsl
sahf
pop
sti
pop
jno
jg
push
into
xor
mov
fildll
dec
pop
xchg
mov
out
sahf
jmp
dec
or
movb
sbb
mov
jbe
aad
mov
mov
call
mov
ror
push
roll
mov
loop
lods
jmp
loop
mov
mov
inc
or
lock
push
cmp
aaa
mov
dec
ret
and
jnp
das
adc
push
xchg
mov
push
dec
sarl
pop
cld
pushf
stc
decb
lock
mov
mov
inc
dec
jl
sahf
dec
clc
call
imull
mov
push
outsb
je
rcll
and
fidivrs
shll
dec
inc
mov
nop
pop
sbb
out
adcb
add
call
mov
mov
cmpsb
xor
adcl
call
mov
sti
adc
jg
jns
rcr
push
imul
jbe
sti
es
xlat
cmpb
push
es
jg
and
dec
xchg
and
pop
push
jecxz
or
clc
fs
xchg
imul
push
pop
cmc
jle
ljmp
loopne
scas
leave
xchg
popf
xor
push
pushl
sub
in
jns
filds
test
stos
xchg
es
mov
lea
xchg
xchg
enter
mov
das
dec
test
xchg
fldl
in
sub
decl
decb
adc
call
scas
faddl
cmp
mov
or
call
jno
adc
mov
gs
hlt
shlb
jb
rcl
aas
xor
std
mov
jmpw
jb
stc
test
ljmp
push
cwtl
les
dec
dec
mov
movups
push
xchg
xchg
loope
jl
or
int
inc
insb
inc
scas
xor
movsl
outsl
loope
jbe
in
jl
es
push
jg
mov
hlt
sbb
push
and
push
push
jmp
mov
repnz
movsb
movsb
mov
pop
jns
pop
sub
ljmp
mov
mov
inc
out
jnp
cli
sbb
in
pop
lcall
adc
jg
mov
repnz
and
cltd
xor
filds
inc
les
inc
out
or
jge
sbb
pop
lea
and
jae
scas
jle
dec
frstpm(287
sbb
in
inc
repz
adc
inc
add
imul
repnz
jb
lods
pop
mov
mov
loope
mov
cmp
xchg
mulb
cmp
imul
stos
into
sbb
ljmp
cwtl
xor
je
cs
push
cltd
push
sbb
sarl
jo
or
jecxz
push
adc
sub
aad
adc
lods
lods
push
test
and
and
mov
xchg
sub
out
dec
cltd
mov
in
xchg
add
out
sbb
sbb
sbb
rorb
imull
and
shl
shrl
dec
jecxz
std
push
xor
mov
lcall
add
adc
in
push
outsb
jne
push
sbb
xor
push
jecxz
orl
jmp
inc
fists
or
or
jb
adcl
loopne
cmp
jae
jb
cmp
jmp
test
gs
ss
sahf
push
testl
pop
jge
sar
jmp
cmp
std
add
flds
mov
and
lods
mov
or
cmp
dec
inc
push
loopne
popf
jno
push
loop
inc
cltd
adc
loopne
out
push
mov
add
lods
mov
daa
popa
ds
lods
lock
inc
js
scas
xor
mov
or
mov
adc
mov
adc
jmp
scas
adc
jmp
mov
mov
bound
das
adc
pop
and
fldcw
sbb
insl
push
shlb
popa
out
imul
aam
inc
dec
f2xm1
mov
arpl
mov
aad
lods
aaa
fcoml
daa
mov
lahf
pop
cmp
insl
ljmp
test
cmpb
and
sbb
mov
pop
call
inc
and
scas
push
jb
push
mov
sub
test
mov
inc
fcomip
lcall
jno
ds
nop
aaa
xchg
mov
pop
imul
test
push
fnsave
insl
or
inc
xchg
jl
jp
push
add
bound
mov
jmp
jl
mov
jo
out
popa
cmp
mov
loop
pushf
cmpsl
fistpl
data16
fucomp
mov
test
fwait
lds
inc
jle
xor
pop
sbb
mov
movsb
jnp
ja
call
mov
sub
mov
xorl
push
xchg
psrlw
imul
addr16
icebp
dec
fcmovbe
jo
cmc
and
dec
pop
inc
sbb
xchg
inc
cmp
les
pushl
add
js
lahf
sub
mov
add
fiadds
pop
pop
popa
push
push
incl
or
push
scas
add
push
cmp
xlat
mov
add
mov
sub
mov
nop
jne
xchg
sarb
fucomp
inc
or
insl
outsl
arpl
call
pusha
in
lret
xlat
jns
rcrb
mov
mov
mov
push
das
and
call
aaa
mov
popf
dec
inc
gs
and
jl
jg
cmp
sbb
mov
test
sarl
xchg
pop
pop
sub
pop
jecxz
loop
shr
cld
loopne
sar
jle
push
or
mov
lret
mov
push
call
or
jb
mov
jecxz
add
xchg
inc
mov
jge
mov
cmp
cmpsb
mov
inc
xchg
mov
push
sbb
call
popa
repnz
fnstsw
push
and
inc
mov
roll
pop
mov
fwait
rorb
clc
ljmp
mov
pushf
nop
leave
imul
lcall
push
ret
and
fiadds
ja
ss
lods
jecxz
and
ljmp
xor
and
and
rorl
push
sti
pop
adc
add
idivl
xor
pushl
xor
out
add
bound
cwtl
loop
ljmp
sub
jg
scas
decl
jmp
or
pushf
add
repnz
xchg
es
mov
in
jae
das
andl
push
jmp
jae
cmp
aaa
xchg
sub
dec
fildll
cmpsl
fsubrs
push
mov
pushl
adc
or
fisubl
sub
push
in
cmpsb
xchg
lock
jg
out
shl
inc
aam
adc
pop
push
pop
or
mov
inc
cwtl
push
or
mov
pop
stc
adc
and
lcall
loope
mov
xchg
movb
cli
pop
out
and
call
pop
daa
pop
mov
js
mov
mov
xor
popl
push
data16
add
clc
mov
xchg
in
inc
mov
xchg
movsb
jbe
jne
add
test
mov
push
in
bound
int3
inc
mov
dec
jnp
mov
fildl
repnz
lds
fists
inc
dec
shr
sbb
mov
aas
xchg
mov
jp
fwait
ljmp
pop
lcall
ret
fstpt
into
fnstcw
or
pop
mov
jl
scas
clc
push
add
std
rclb
fcmovne
cld
xor
mov
cwtl
mov
cmp
or
popa
or
outsl
push
xlat
daa
shl
push
dec
mov
and
and
ffreep
cld
andb
push
push
mov
decl
lret
andl
dec
imul
or
mov
jl
lods
jg
rcrl
shl
dec
outsb
call
les
and
sbb
cmp
or
xor
fcomip
mov
xor
stc
sbb
mov
insb
pop
enter
sbb
ljmp
or
cmp
fistpl
addb
push
rcrb
sub
fwait
sbb
lcall
aad
push
fldl
fsubrl
dec
jae
lock
loop
es
je
mov
push
sub
mov
sbb
jmp
jns
pop
mov
sub
add
xor
icebp
call
mov
inc
cmp
js
loope
daa
out
jne
inc
dec
sub
add
lcall
adc
in
scas
xchg
and
hlt
clc
jbe
outsl
xor
push
xor
xchg
pop
stos
mov
sahf
pushf
stos
mov
mov
decl
xchg
je
bound
mov
popf
ds
out
inc
sti
aad
out
pop
add
hlt
aas
lods
adc
gs
fimull
ret
sbb
xor
add
pop
cwtl
jp
dec
mov
pushl
or
popf
adc
or
and
loopne
fistpll
insl
inc
loope
faddp
mov
rolb
sub
js
in
mov
inc
mov
xlat
inc
jecxz
in
jb
or
das
xor
push
pop
les
sub
aad
cmp
sub
mov
push
mov
jge
mov
stc
imulb
cmc
dec
test
cmc
cwtl
xchg
mov
mov
push
mov
mov
call
in
push
pop
sarb
test
out
and
les
pop
out
popf
sbb
cmp
orl
mov
sar
mov
dec
xchg
orl
cmp
scas
sbb
sub
mov
int3
add
fdivrp
add
pop
shll
push
loopne
xor
ljmp
jecxz
aad
es
daa
add
dec
lock
inc
adc
sbb
mov
je
mov
decl
stos
inc
nop
cmp
test
rcrb
push
jnp
ljmp
jle
jnp
mov
dec
sub
aad
in
jle
xor
sbb
repz
mov
idivl
mov
in
sbb
adc
test
call
or
leave
pop
xor
inc
scas
mov
stc
sub
lcall
pop
push
pop
cmp
xchg
xchg
cltd
shrb
sub
cwtl
je
ret
ret
pop
aas
ficompl
cmpsl
mov
inc
jle
jmp
mov
push
lock
scas
mov
or
cmpb
loop
call
xor
pop
xchg
xor
mov
push
adc
lock
fmul
push
test
inc
push
popf
jg
fucomp
push
push
aaa
and
push
fwait
jno
rcr
loop
adc
push
lea
clc
xor
call
adc
in
repnz
sbb
sub
push
jp
call
cmp
shlb
add
push
clc
incl
jo
dec
xor
jmp
addl
mov
fucomp
pop
repnz
sbb
ret
mov
or
inc
dec
lcall
adc
lds
xor
jb
xchg
mov
shll
mov
mov
and
pushl
decb
add
xchg
jo
mov
and
aam
call
ljmp
pop
push
fcoml
shlb
pop
pop
data16
std
clc
pop
jge
sub
jne
jle
push
or
lcall
mov
mov
xchg
xchg
aam
cmp
ss
pop
lea
aam
jg,pn
jmp
les
push
lea
pop
cwtl
pop
jbe
imul
out
stos
push
rcrb
mov
push
sub
mov
or
add
jl
mov
mov
add
cli
cmc
sub
fsubl
call
stc
adc
add
dec
push
pop
xor
call
sub
cs
movsl
hlt
push
xchg
call
cwtl
pop
sbb
mov
mov
mov
lret
fwait
lahf
xchg
stos
mov
test
pop
rol
std
fdivrl
sar
ds
enter
and
fs
int3
add
rolb
clc
push
push
sub
and
mov
jmp
lcall
push
pusha
mov
outsb
popa
ljmp
filds
sbb
insl
shl
jne
adc
inc
dec
scas
std
push
stc
mov
mov
jp
ss
in
mov
and
mov
enter
incl
mov
add
sti
insl
lods
jp
cmp
cld
adc
mov
je
insl
fisttps
outsb
hlt
push
sbb
mov
mov
cmp
dec
addr16
out
loopne
xor
roll
pop
pop
and
cmp
inc
inc
adc
lret
insl
sti
cli
lret
lods
pop
pop
test
add
enter
sub
lock
adc
jg
mov
cmp
mov
fisttps
add
mov
cmp
pop
test
js
loop
push
jno
inc
repnz
cmp
xchg
in
cmpb
dec
mov
inc
mov
decl
xor
adc
sahf
mov
in
aad
aad
lds
xchg
mov
add
pop
push
push
dec
mov
cmp
dec
or
or
jb
js
and
popf
sub
sub
jne
cmp
jle
cwtl
ljmp
loopne
or
popa
into
pop
pop
les
xchg
imul
inc
fs
pushl
lods
movsl
out
popf
std
bound
cli
pop
sbb
and
sub
out
mov
mov
call
sbb
or
loopne
and
sbb
int
mov
rolb
mov
mov
mov
push
stc
add
arpl
in
push
movsb
mov
cwtl
mov
add
ds
fnstenv
bts
fisubl
cwtl
outsl
leave
cwtl
incl
insl
fistpll
inc
popa
push
mov
shrl
pop
ljmp
xor
clc
push
sbb
and
rorb
pushf
add
inc
sub
clc
cmp
or
pop
mov
push
inc
and
and
sub
lods
cmpsb
in
mov
cmp
mov
rorb
xchg
mov
lods
jecxz
popa
call
mov
xor
lcall
rorb
mov
pop
clc
sti
sub
add
xor
rcll
das
clc
xor
pop
or
sbb
xor
sahf
jp
xor
lock
clc
gs
sti
negb
inc
cltd
rcrl
pusha
dec
push
testl
inc
cmp
or
xchg
add
xchg
cwtl
jecxz
mov
std
pop
mov
test
cmpsl
mov
sbb
lret
lock
in
imul
push
ljmp
adc
subb
cld
lahf
push
adc
cli
mov
jp
jmp
lds
ret
sbb
cmp
cltd
mov
call
stos
jnp
jecxz
inc
cs
aam
stos
xor
inc
imul
inc
int3
test
push
out
fwait
pusha
test
call
and
in
rorl
data16
xchg
inc
cmp
fimuls
add
mov
lods
subl
adc
dec
sub
lret
mov
mov
fcomip
cmpsl
inc
hlt
and
ret
pop
xor
add
out
cmp
lea
pusha
ss
mov
push
mov
push
fldcw
js
jge
nop
mov
jmp
in
xor
or
inc
sbb
mov
jbe
data16
xor
sub
push
or
mov
test
cltd
stos
jle
sub
mov
and
sub
data16
pop
shll
push
iret
sub
mov
mov
pusha
imull
dec
in
cmp
and
fstpl
push
loopne
mov
scas
notb
ljmp
xchg
inc
jns
enter
mov
push
rclb
ret
adc
testb
test
push
xchg
cmp
fld
clc
lea
iret
jns
fcmovu
lahf
mov
mov
mov
pop
aad
add
mov
sbb
xor
jmp
add
push
test
push
out
mov
jae
imul
push
dec
mov
sub
incl
decl
push
xor
lods
mov
push
mov
call
fs
in
stos
outsb
xor
or
pushl
mov
jmp
add
pop
pop
test
int3
pop
inc
call
sahf
iret
arpl
xchg
and
xchg
popf
jne
lods
mov
mov
stc
mov
movsb
outsb
pop
and
mov
out
push
inc
lods
addr16
jmp
push
and
mov
popa
inc
repnz
incl
clc
and
out
mov
push
pushf
push
loopne
push
adc
adc
incl
mov
or
jle
fldenv
or
sbb
shll
dec
jp
cmp
add
and
xchg
push
xor
or
pop
nop
test
dec
gs
jle
lcall
sahf
pushl
movb
dec
mov
je
std
adc
icebp
imul
shrl
xchg
fwait
insl
inc
jge
or
add
ljmp
fisttpll
lcall
xor
mov
pop
jae
in
dec
lock
es
outsl
push
push
popa
cld
jmp
test
icebp
dec
stos
add
cmpb
mov
xchg
lods
mov
cmp
jg
insl
insb
addr16
mov
jp
sub
loope
js
cltd
dec
jg
pushl
or
out
lods
mov
jl
mov
popa
sub
stos
decl
push
xchg
cmp
fwait
rcr
shlb
lcall
outsl
inc
xchg
or
jo
inc
sub
rorb
lock
cmp
lret
mov
pushf
mov
inc
push
add
pop
mov
inc
or
aam
fisubs
push
repz
jne
adc
fs
test
insl
mov
dec
pop
dec
jae
ljmp
lds
xchg
ret
mov
push
mov
dec
pop
scas
jns
ljmp
xor
cmpsl
and
mov
inc
pop
dec
push
leave
push
int
add
ljmp
cmp
xchg
cmpsl
imul
adc
icebp
pop
popf
xor
cs
adc
xchg
sub
aaa
jnp
out
push
orl
cwtl
mov
adc
dec
jp
cld
push
pop
rcrb
ja
adc
dec
xchg
jp
push
and
aas
xor
les
filds
fistpl
jp
mov
push
sbb
push
cmp
out
sub
les
xlat
add
sub
or
pop
rclb
push
adc
xor
inc
mov
pop
call
pop
mov
pop
icebp
jge
jl
mov
sbb
inc
incl
jae
arpl
cld
iret
jb
insl
dec
pop
mov
xchg
call
cmp
adc
divb
lret
and
ret
sub
out
ljmp
jge
push
jne
dec
add
inc
jl
push
inc
dec
daa
jmp
out
sbbb
mov
sbb
inc
inc
je
adc
mov
repz
push
lcall
inc
push
add
sbb
test
jae
xchg
mov
adc
push
loopne
add
icebp
sub
add
arpl
call
sub
mov
or
cmovae
addr16
into
addr16
js
cmpsb
xchg
enter
in
pop
pop
loope
in
jmp
sub
xchg
add
sub
cld
scas
fimuls
jb
decl
lock
sub
in
jmp
inc
pop
scas
adcl
je
cmpsb
dec
cwtl
outsl
jg
ret
mov
mov
shrl
icebp
xchg
push
idivb
fsubrs
jl
aas
inc
roll
xchg
add
inc
push
adc
mov
dec
adc
mov
ljmp
aas
mov
call
decl
test
in
repz
sbb
push
fwait
in
mov
and
jbe
ja
jle
pop
xchg
jmp
pop
in
jl
movsb
cmp
rcl
xchg
fwait
outsb
loopne
jno
mov
sub
pushl
enter
pop
out
or
shrb
xchg
xor
jmp
movsl
push
jl
mov
xor
repnz
shl
in
leave
flds
ljmp
mov
push
jbe
scas
sbb
das
pop
scas
cmpsl
sahf
add
sub
pusha
mov
ja
ret
aam
add
shlb
xchg
out
incl
cmp
or
mov
mov
mov
jno
cmp
cld
test
pop
pop
push
decl
ss
fsubrs
and
mov
lods
lret
xchg
inc
in
sbb
andl
mov
fdivs
mov
lds
mov
and
pop
push
jne
mov
lea
or
sbb
jg
out
pop
mov
or
out
mov
xlat
aas
mov
fisttps
add
dec
sbb
xchg
mov
sbb
jg
fstl
xchg
cmpsb
and
shlb
dec
dec
inc
and
js
dec
jl
xchg
pop
pop
std
lods
dec
in
aam
mov
icebp
dec
mov
sbb
xor
pop
je
jl
rorl
adc
mov
orb
jo
pop
aaa
in
insb
cmp
mov
aad
xchg
aaa
mov
add
dec
test
pop
bound
loopne
in
les
mov
cltd
out
cmp
cmc
dec
lods
or
jbe
jp
in
push
xor
movsb
xor
or
sub
xchg
fiadds
sub
sbb
jmp
mov
push
pop
ljmp
sahf
decl
call
cmp
xor
sbb
mov
das
clc
jmp
mov
push
mov
popf
jbe
or
addr16
ret
clc
mov
leave
sahf
ret
incl
mov
mov
cmpsl
mov
or
js
inc
cmpsb
rcrl
jae
fdivrp
lcall
lcall
xchg
cmp
js
xorb
push
sbb
xchg
nop
push
push
aad
int
decl
or
xchg
jp
xlat
in
or
dec
out
mov
ret
enter
or
popf
movsb
jge
iret
adc
out
dec
pop
gs
xchg
inc
lods
scas
push
clc
popa
add
mov
adc
and
pusha
sbb
push
mov
cmp
test
mov
movb
jge
adc
aad
add
and
mov
aas
xor
pushl
adc
daa
xor
mov
mov
jmp
outsb
je
lds
clc
scas
mov
call
adc
lock
call
loopne
mov
jno
sbb
pop
rorb
mov
loopne
push
pop
sub
sbb
pop
ds
inc
mov
fnstenv
lcall
push
aad
push
test
mov
loopne
sbb
outsb
pushf
pop
rorl
mov
add
push
lahf
sbb
mov
decl
jp
adc
fstl
addr16
repnz
lds
dec
xor
or
imul
call
sbb
pusha
push
dec
cld
scas
mov
cmp
sarl
add
cmp
jmp
fistpll
jmp
hlt
inc
sub
jge
je
loope
roll
std
adc
scas
and
sub
dec
nop
fcmovb
push
sti
inc
jno
imul
jmp
sub
shl
je
pop
xor
push
fs
mov
in
testb
out
incl
adc
lahf
dec
adc
scas
mov
decl
mov
das
add
xor
rcrb
in
sbb
and
dec
outsb
inc
pushl
movsl
mov
popa
fiaddl
shl
inc
data16
push
popf
mov
mov
jecxz
adc
gs
xor
add
or
iret
mov
rorb
lods
adc
repnz
cmp
adc
jmp
push
dec
jle
push
incb
xchg
dec
ljmp
lahf
xor
or
adc
xor
daa
and
ret
cmpsb
xor
fwait
mov
repz
mov
ljmp
out
pop
or
enter
pop
dec
or
jmp
push
push
jp
in
in
or
arpl
xor
xor
or
sahf
insl
sbb
add
mov
lcall
shlb
xchg
das
mov
pop
aaa
jecxz
mov
mov
jo
mov
ret
out
pop
dec
out
aas
fists
sbb
inc
outsl
je
pop
mov
xlat
mov
add
loopne
xchg
mov
dec
inc
subl
pushl
inc
lcall
cmp
inc
lods
std
mov
aam
and
and
push
aam
mov
aad
and
fwait
pop
in
call
or
cmp
lahf
fildll
in
mov
enter
cld
scas
adc
xchg
and
mov
sbb
push
call
insl
jmp
pushf
pushf
aas
push
xlat
sbb
loop
push
idivb
fs
jo
or
push
ss
jg
mov
pushf
xor
pushl
push
bound
loope
lcall
call
mov
inc
mov
outsb
xlat
mov
push
push
jae
sbb
aas
loope
incl
popa
push
jl
xlat
in
add
sbb
fidivl
xor
dec
or
mov
fstpl
pushf
mov
scas
mov
fsts
in
push
mov
sbb
xchg
stc
add
xchg
mov
jecxz
add
fwait
jmp
bound
mov
outsl
scas
pop
xchg
shlb
pop
inc
mov
or
pushl
ds
mov
sahf
adc
cwtl
push
lahf
popa
adc
daa
jp
push
into
orb
add
mov
shl
adc
mov
sub
jns
daa
movsl
jmp
sub
mov
xchg
loopne
and
jbe
icebp
stc
shll
call
je
stos
push
out
pop
js
lods
xchg
imul
lock
xchg
xchg
inc
dec
mov
push
mov
and
mov
loop
mov
imull
shl
xor
mov
shlb
add
jmp
cmc
icebp
lahf
in
or
push
add
mov
jno
xchg
stos
mov
ret
lcall
shrl
stos
mov
out
lods
sub
sub
sbb
insb
push
jo
lods
popf
pop
popf
in
call
dec
loope
push
test
test
lcall
decl
sub
xchg
scas
pusha
cltd
mov
popa
loopne
and
lcall
fbstp
pop
jp
pop
push
js
pushf
pusha
cmp
rcll
ja
push
cmp
incl
icebp
pop
mov
pop
loop
fistl
popa
inc
nop
mov
jbe
and
call
dec
gs
jg
test
out
ljmp
mov
mov
fdivs
or
pushl
dec
mov
mov
mov
ret
fldl
popf
adc
in
ror
jnp
js
imul
add
popf
imul
out
jns
dec
sbb
insb
or
or
push
mov
mov
adc
call
mov
das
xor
jae
jno
loopne
mov
rorl
test
mov
ja
and
shrb
call
insb
int
clc
mov
lcall
mov
outsl
into
mov
mov
pop
and
inc
lds
lock
jmp
add
call
cmpsl
jb
xchg
fists
jb
and
fisttpll
lcall
dec
and
push
pop
pop
scas
pop
inc
test
xchg
mov
pop
xlat
data16
lret
push
dec
push
jns
clc
call
test
adc
mov
lahf
xchg
fimuls
iret
rcrb
jo
aaa
push
cmpsl
pop
mov
xchg
icebp
or
rcl
push
or
ficoml
out
jae
mov
scas
incl
movsb
pop
lahf
in
cmc
and
add
sbb
or
lea
or
mov
test
popa
and
inc
cmp
mov
ja
xor
cld
repnz
mov
add
int3
outsl
sbb
jno
or
mov
mov
jecxz
cmp
jmp
jl
cs
cmp
and
ficomps
mov
lock
jne
insl
sub
decl
outsb
loop
add
addr16
sbbb
pop
mov
inc
enter
cmp
fcomip
xor
fstl
pushf
push
inc
add
dec
xchg
repz
jl
xchg
inc
in
mov
xlat
xchg
rcrl
sbb
test
dec
xor
xchg
sub
adc
fsubrs
clts
roll
movsb
les
inc
ret
stc
jp
dec
jle
mov
or
dec
push
adcb
repnz
inc
ljmp
mov
mov
xor
pop
jo
lret
sbb
icebp
imul
cmp
mov
push
push
jmp
jmp
nop
add
ret
mov
rolb
std
xchg
jl
xor
ljmp
mov
aaa
out
arpl
inc
loopne
repz
in
adcb
sahf
popf
ljmp
or
jge
mov
sarl
mov
inc
dec
sub
cmp
scas
ljmp
pop
xchg
sbb
divl
loope
loope
inc
push
data16
dec
pushl
adcb
sbb
push
icebp
dec
cmp
xchg
xchg
mov
lcall
dec
pop
push
adc
fiadds
ja
xchg
movsl
jmp
jge
inc
enter
decl
or
sbb
push
addl
lds
in
add
shrw
add
incl
push
lds
mov
hlt
lcall
jl
jl
out
xlat
aam
ss
xchg
jle
xor
mov
xchg
wrmsr
mov
cld
jg
add
mov
std
stos
adc
push
mov
call
ss
xor
mull
or
popa
je
ljmp
movsl
xchg
and
jmp
add
out
xchg
sbb
and
mov
xchg
cmp
jae
lret
pop
pushl
xchg
jo
jns
neg
mov
mov
pop
inc
rcll
movsb
mov
jecxz
push
sbb
orb
mov
sahf
cmpsl
andl
call
test
fsts
and
leave
or
dec
jne
ret
data16
test
pop
dec
xchg
call
dec
mov
or
jae
mov
jno
cmp
loope
mov
sub
xchg
add
faddl
cmp
outsb
stos
iret
mov
in
inc
aaa
ja
jns
in
int
inc
sbb
pop
inc
incl
jg
and
cld
xor
cmp
sub
mov
push
scas
xchg
mov
hlt
jb
mov
loope
js
ljmp
or
push
jne
mov
repnz
mov
scas
sbbb
rol
lahf
sub
dec
cmp
or
inc
mov
mov
mov
dec
jmp
and
pop
and
jns
and
pushl
les
sub
ret
xor
adc
outsb
jb
jne
ljmp
add
daa
out
cmp
sub
cmp
lods
aad
bound
add
lods
dec
dec
adc
sbb
ss
pop
xor
scas
push
mov
jmp
and
mov
aam
fsts
lds
jb
dec
mov
popf
stc
pop
adc
jmp
adc
push
cltd
adc
jae
mov
movb
xchg
call
and
ljmp
rcrl
jno
ret
mov
pushf
cmc
mov
jle
xchg
call
add
xchg
orb
add
inc
xor
xor
mov
pop
lret
xor
call
pop
pop
rcrb
stos
mov
dec
jns
fdiv
std
jbe
jl
mov
mov
pop
sbb
mov
xchg
pop
test
pop
je
aaa
mov
xor
push
mov
jmp
stos
negb
shlb
xchg
pop
test
mov
pop
cmc
push
mov
jl
out
dec
insl
out
jg
call
jmp
mov
xor
mov
mov
fsubl
aas
in
lock
gs
cmp
ror
xchg
or
cltd
popa
or
scas
inc
ret
scas
cmp
inc
frstor
push
dec
mov
or
shlb
out
mov
hlt
js
inc
ret
nop
push
push
ljmp
cli
push
mov
sbb
push
lahf
subl
push
stos
pushl
lcall
dec
sub
movsb
stos
mov
sub
mov
sub
sbb
out
data16
cmp
jecxz
adc
es
push
ljmp
xor
cwtl
jns
sbbl
inc
std
mov
insl
dec
cmp
or
ljmp
and
pop
cmpsl
mov
lahf
icebp
cwtl
inc
sbb
lret
pushf
push
ja
mov
shlb
call
in
xchg
jl
sbb
roll
orl
mov
pop
mov
push
scas
clc
mov
cmpb
mov
mov
push
and
mov
paddq
jbe
inc
incb
dec
call
sbbl
add
jnp
pushl
dec
fisubl
ljmp
sub
cmp
ds
fidivrl
xchg
inc
repnz
es
repz
cmc
pop
cltd
push
pop
maskmovq
pop
push
filds
add
nop
lock
mov
outsl
xchg
rcr
lret
adc
sub
nop
ret
jo
xchg
rcrb
jbe
decl
pop
jnp
sbbb
mov
xchg
push
and
adc
test
addb
loope
decl
xchg
mov
mov
sti
std
cmp
dec
jg
pop
jbe
and
in
cmc
push
mov
data16
cltd
mov
ret
arpl
push
inc
cmc
jb
gs
xor
in
sbb
push
outsb
xchg
nop
add
push
sbb
or
dec
lds
mov
mov
cmp
add
lret
insb
es
mov
mov
xchg
adc
push
push
cmp
or
inc
lcall
add
mov
aas
mov
andl
pushf
cwtl
sbb
loopne
icebp
push
jge
fcmovnu
icebp
mov
lcall
jno
and
repz
mov
sub
imul
jmp
xor
pop
jno
push
ret
mov
jmp
mov
js
jns
mov
dec
push
jb
js
stos
sub
sbb
fdivr
lcall
popa
adc
mov
pop
inc
xor
add
and
dec
aam
lahf
lcall
lcall
pmuludq
inc
pop
push
dec
mov
repz
push
inc
inc
in
xchg
jbe
fldl
xchg
inc
sub
sbb
xchg
lea
cmp
push
in
test
out
push
push
adc
fists
pushf
inc
je
pop
lret
loopne
sbb
hlt
sti
shl
fs
call
out
ljmp
fstps
push
cltd
sbb
enter
push
hlt
push
js
inc
aam
imul
jge
push
ret
aas
sub
pop
insl
jno
sar
jg
imul
xor
xchg
arpl
in
xchg
pop
mov
xchg
fisttpll
sub
test
jge
shrb
cwtl
push
inc
test
js
pop
adc
mov
or
mov
xlat
insl
mov
sbb
std
scas
in
outsb
pop
or
rclb
dec
out
mov
xlat
or
sti
lods
xchg
mov
adc
outsl
bound
out
push
xchg
testl
fbld
out
or
imul
cmp
incl
cmp
adc
rcr
adc
inc
sti
addl
mov
outsl
repnz
pushl
cmp
xchg
imul
outsb
sub
jbe
pop
sahf
movsb
repz
push
or
fistl
je
sbb
call
cmpsb
sub
hlt
negl
lds
out
push
mov
stos
cld
add
xchg
or
out
cli
pop
cmc
decl
sub
movsb
sub
pop
lahf
aad
js
scas
notl
call
inc
mov
testl
repz
dec
sbb
sbb
out
cmc
fwait
scas
pusha
sahf
outsb
mov
add
insb
pushf
sub
rorb
jne
fistps
cmp
rcll
sub
push
push
fst
movsb
or
jg
and
jge
jnp
int3
sub
in
sbb
out
decl
mov
sbb
sub
mov
mov
cmpsl
mov
mov
jmp
ss
out
push
pop
adc
sahf
mov
pop
sub
mov
dec
mov
insb
cmp
fcomip
jmp
mov
fiadds
pusha
cmp
pop
pop
lret
jg
sbb
test
push
ljmp
xor
int3
push
pop
push
xor
jo
mov
mov
push
call
movsb
rolb
cmp
cmp
pop
pushl
shlb
dec
jecxz
int
xor
je
arpl
gs
add
jmp
push
cld
int
lret
lcall
sahf
lahf
push
push
lahf
dec
lcall
cmp
mov
ljmp
cs
dec
pop
pop
repnz
shll
sub
mov
inc
imul
adc
mov
jmp
xchg
rcl
ret
and
fsts
pop
cmp
enter
incl
fimuls
lcall
stc
inc
pusha
cmpsl
push
mov
xchg
and
mov
es
mov
daa
xchg
mov
dec
adc
rcrl
xchg
mov
adc
mov
popa
jg
cwtl
jmp
or
xor
adc
push
dec
fwait
das
push
aam
push
sahf
pop
sub
adc
mov
xor
pop
dec
mov
xchg
xchg
dec
xchg
test
cld
pop
in
mov
mov
cli
ljmp
xor
jge
scas
outsb
out
out
sahf
enter
sub
add
and
lcall
sbb
xor
mov
push
popa
push
aas
ljmp
fstpl
mov
in
rcrb
lea
and
dec
xlat
aam
or
push
pop
pop
push
mov
in
cld
and
xchg
popa
jns
ds
pop
pushf
xchg
dec
ljmp
lea
or
adc
mov
shll
inc
fdivs
pop
xlat
inc
xchg
lahf
icebp
jmp
repnz
stos
xchg
bound
popa
in
push
dec
fcompl
add
mov
add
incl
cld
outsb
inc
cmp
xchg
push
push
inc
cmp
movsb
mov
push
inc
add
sub
jae
jb
clc
and
add
fistpl
adc
xchg
lcall
call
mov
imul
push
push
es
xchg
scas
lret
and
aaa
call
jne
nop
sbb
lds
fsub
mov
push
lds
bound
ja
fdivrp
mov
push
push
jmp
dec
shrl
imul
ret
testb
jl
jnp
jecxz
lret
push
push
cli
in
call
fwait
and
push
aaa
pop
mov
jp
cmp
mov
js
jg
das
mov
rcrl
mov
shrl
iret
xorl
incl
mov
xor
loop
mov
push
subb
adc
ret
adc
repz
jb
stc
sub
fcmovne
neg
or
inc
mov
push
into
lods
pop
je
std
icebp
incl
arpl
jo
in
push
mov
and
xchg
lods
aam
fs
sub
insl
push
ljmp
sub
mov
jnp
lret
pop
ljmp
mov
ljmp
mov
dec
jmp
add
int
bound
mov
leave
xor
pusha
inc
push
mov
and
sar
mov
ror
xchg
mov
push
loop
dec
scas
pop
repz
movsb
pop
jp
jg
loop
cmp
inc
xchg
mov
add
orb
or
pushf
leave
mov
out
push
cmp
call
test
and
es
enter
clc
das
xlat
and
pop
add
sub
push
out
pop
mov
jecxz
cli
inc
imul
xchg
imul
andl
mov
scas
arpl
mov
pushf
incl
movsl
adc
in
cltd
xchg
outsb
pop
outsb
sbb
dec
push
ja
mov
tzcnt
in
cmp
stos
mov
hlt
decl
adcl
sbb
dec
push
ret
ja
ljmp
xorb
mov
fimull
xchg
fidivrl
push
scas
test
adc
cmp
out
adc
arpl
lcall
push
shlb
fnstcw
lods
inc
leave
ljmp
mov
inc
fs
pushf
push
push
lock
hlt
xchg
cltd
in
in
push
aas
ss
incl
mov
mov
ja
stos
stos
rcrl
mov
mov
mov
dec
dec
sarb
cmc
movsl
mov
in
cwtl
mov
out
aad
aas
cmp
rorb
and
rorl
and
cmp
aad
cmp
pushl
adc
out
rcrb
cmc
mov
nop
push
jmp
fidivl
sbb
add
ljmp
stc
push
inc
idivb
gs
stos
fnsave
mov
adc
clc
ljmp
std
out
jle
push
push
shlb
sbb
cmpb
adc
pusha
les
pop
push
ret
data16
xchg
lcall
incl
fs
scas
mov
int
pop
test
mov
jo
mov
cmc
ret
jge
cs
lcall
adc
iret
out
xchg
push
fs
mov
fwait
xor
fstp
mov
scas
jp
decl
stos
aaa
lds
xchg
add
pop
cmp
movsb
mov
jmp
hlt
andl
adc
or
jg
decl
out
adc
adc
lcall
rolb
incl
std
push
fnsave
sbb
idivl
jne
call
dec
jge
subl
lahf
arpl
push
sarl
xor
or
mov
adc
stc
add
pushl
movsl
rorb
dec
arpl
repnz
sbb
ja
sbb
arpl
mov
xchg
cltd
ljmp
xorb
mov
orb
divl
clc
cmp
mov
stos
shlb
sarb
add
cwtl
pop
test
out
or
or
mov
pop
push
cmp
test
out
clc
lcall
xchg
mov
inc
stos
push
sti
int
push
cld
jne
mov
gs
pushl
out
add
pop
adc
lods
push
or
xor
mov
cmp
in
jae
pop
cmp
incl
fldt
cmp
pop
sub
and
inc
push
inc
lds
or
adc
movsb
rcrl
cli
incl
adc
data16
mov
out
xor
inc
mov
mov
adc
inc
cld
ljmp
mov
loop
and
jg
mov
cli
rcrl
imul
pop
mov
mov
cltd
sbb
jmp
movsl
imul
repz
push
mov
cmp
cmp
dec
xor
jo
jecxz
mov
incl
icebp
push
imul
sbbl
in
sbb
aam
sub
decl
sbb
cwtl
dec
fimull
lcall
pop
mov
test
idiv
inc
sbb
pusha
sbb
ljmp
adc
jg
xchg
mov
mov
lock
xor
ljmp
dec
mov
push
bound
cmpsb
xchg
test
lock
das
and
lea
in
sub
add
lret
stos
decl
jae
cltd
mov
gs
ss
ljmp
gs
test
xchg
push
sbb
mov
lods
fsts
inc
push
mov
jmp
dec
jmp
in
test
lret
fstp
mov
mov
xor
mov
sbb
lcall
push
in
rorb
and
inc
lcall
dec
or
sbb
js
outsb
push
mov
frstor
adc
jmp
addl
adc
add
subb
push
pusha
std
mov
xor
jno
or
data16
jmp
ret
aam
mov
pop
addr16
cwtl
out
xchg
icebp
cmpsb
cld
ljmp
jl
ljmp
sub
insl
sbb
xor
xchg
rolb
mov
lret
incl
mov
cmp
idivl
arpl
movsl
stos
or
out
dec
sbb
jae
lods
xchg
call
inc
ret
add
test
pop
stc
pmullw
cli
jnp
add
mov
aas
in
arpl
xchg
test
pop
fcoml
incl
sbbl
mov
xchg
add
mov
jle
daa
mov
sub
int
es
adcb
mov
cld
inc
popa
lds
dec
dec
pop
pusha
js
jb
xor
pusha
loop
pop
insb
add
mov
pushf
mov
pop
addl
dec
push
mov
ljmp
sarl
or
leave
movsb
ret
test
xor
sub
dec
push
ffree
mov
inc
rolb
int3
lcall
cmc
lret
ds
jge
or
add
jecxz
lods
mov
sbb
and
incl
xlat
sbb
mov
fs
mov
push
mov
fs
outsl
mov
scas
sub
or
decl
and
and
das
mov
jg
or
and
imull
loope
mov
dec
in
cmpsb
mov
mov
inc
inc
jb
jno
enter
push
mov
jecxz
mov
aad
repnz
xchg
imul
sub
jp
pop
mov
pushl
xor
insl
dec
std
aam
cmc
cltd
or
jno
out
movsl
subb
jg
pop
adc
pop
xchg
push
test
scas
or
outsb
mov
fisubrl
fdivrl
and
js
sarb
aam
mov
jmp
dec
mov
repnz
ljmp
mov
push
xchg
jecxz
test
insl
jnp
jmp
sbb
mov
jmp
and
adc
loope
in
ds
cmpsb
in
stos
clc
out
mov
cwtl
sbb
mov
inc
mov
pop
jge
jne
loop
int
jmp
inc
icebp
xchg
hlt
dec
insl
loop
add
aam
adc
mov
sahf
das
cmp
decl
jge
jb
push
jg
mov
cmpsb
push
outsb
in
aaa
xchg
fildl
mov
incl
dec
add
and
push
sar
lea
gs
mov
cwtl
cmp
xchg
scas
clc
jmp
adc
pop
xor
outsb
fnstenv
pusha
decl
jge
insl
or
out
out
in
lock
inc
testb
mov
mov
sbb
mov
andb
cmpsb
lods
fsubrs
mov
sti
aam
jp
pop
adc
jge
movsl
push
aaa
inc
inc
pop
aam
test
gs
cltd
ret
stos
pushl
sbb
sub
xlat
hlt
cmovl
xor
ret
jne
dec
mov
lret
cmc
lcall
data16
out
adc
stc
enter
sbb
in
push
or
pushl
push
ret
and
stos
call
sub
inc
addr16
push
mov
pop
fisubs
std
jmp
int3
mov
ja
imul
push
mov
sub
jl
lcall
xrelease
arpl
cmp
pushf
sbb
mov
sbb
sub
pop
mov
xchg
inc
daa
ljmp
enter
sbb
pusha
sbb
call
mov
test
popf
push
inc
lret
adc
leave
outsb
fs
inc
mov
clc
sti
add
inc
cld
fbld
push
test
dec
dec
int
xchg
mov
jmp
mov
lcall
or
or
add
cld
test
ljmp
sahf
popa
and
xor
addl
push
inc
jmp
pop
mov
cmpsb
insb
jae
cld
cmpb
lods
mov
jecxz
jecxz
insb
adc
push
lahf
repnz
decl
dec
push
in
inc
jnp
xor
loope
mov
xchg
testb
sbb
lcall
ljmp
mov
xor
out
mov
adc
jg
cmp
jp
test
pavgb
mov
decl
out
lock
jl
cld
mov
cmp
and
in
adc
sbb
fwait
sbb
aaa
std
incl
cmp
mov
mov
mov
dec
xor
mov
lcall
sub
enter
dec
dec
cltd
in
push
das
fnstsw
pushfw
mov
push
adcb
sub
out
xor
js
cmp
push
jbe
inc
mov
add
sub
inc
out
push
ja
cmp
push
popf
add
jge
mov
inc
mov
mov
cs
xor
lret
das
xchg
fisubs
ljmp
clc
incl
adc
jae
dec
pop
loope
popf
outsb
push
out
out
sar
lcall
sub
sbb
fcompl
mov
pushf
mov
xor
pop
jmp
mov
test
scas
push
inc
subl
mov
ljmp
pop
loop
mov
js
cli
jle
jns
insb
pusha
mov
or
push
adc
xchg
add
push
leave
fs
inc
fs
sub
inc
bound
lcall
lcall
push
xchg
pop
sysexit
mov
and
je
test
push
add
pop
xlat
push
jecxz
cmp
cmc
and
decl
jnp
gs
in
mov
sbb
sti
mov
andl
sub
lea
incl
into
mov
mov
xchg
scas
mov
pop
imull
out
clc
fwait
jle
dec
nop
mov
jl
sub
loopne
pop
daa
data16
call
testl
or
aam
lock
xchg
mov
inc
call
clc
ficompl
sub
mov
into
aaa
sbb
jb
push
icebp
cli
add
call
ljmp
lcall
jge
out
jle
add
lods
and
push
pop
test
cwtl
jg
ffree
inc
pop
clc
ret
mov
mov
decl
in
dec
pop
jecxz
push
inc
xchg
dec
or
sbbl
decl
lret
out
mov
cmp
ljmp
lds
mov
jl
ljmp
add
cs
mov
insb
sbb
sarb
lcall
mov
iret
into
ret
lret
or
pushl
call
adc
fmull
xlat
lcall
lds
popa
pushf
mov
dec
sar
pushl
xchg
in
push
push
jge
or
mov
pop
dec
leave
fiadds
dec
notl
pop
test
call
ljmp
add
stos
jns
mov
lret
xchg
xor
arpl
call
cld
and
test
inc
sbbl
pop
ficoms
or
jmp
adcl
push
insb
lods
popa
sbb
xor
inc
lds
call
mov
and
push
or
fstpt
inc
stc
inc
mov
mov
xchg
sub
ffree
cli
cs
pop
push
stos
cmp
call
sti
fists
push
dec
or
dec
stos
jnp
cltd
int3
cli
xor
stc
pusha
iret
cmp
call
xchg
pop
pushl
clc
bound
gs
insl
cli
mov
xchg
dec
add
sbb
push
roll
cmpsb
jp
ja
jbe
mov
xchg
jg
out
call
sub
sahf
out
add
pop
sbb
dec
addb
xchg
mov
int
xor
add
mov
cltd
mov
into
push
or
jns
lds
mov
inc
dec
les
lahf
aad
add
cmpsl
lcall
outsb
outsb
push
hlt
sub
adc
in
xor
cltd
add
fldt
stc
push
cmp
mov
sbb
adc
imul
mov
jg
add
call
call
icebp
js
cltd
push
rol
add
adc
xor
jo
lret
fldl
and
ljmp
shlb
rorb
repnz
test
dec
dec
nop
mov
scas
ljmp
daa
fs
test
pushf
sar
jg
out
jle
sbb
idiv
ljmp
imul
mov
inc
pop
ror
ret
sbb
cli
je
jmp
push
adc
cmp
int
xor
je
xchg
jp
les
ud0
xor
cwtl
xorb
xchg
popf
adc
sarl
clc
inc
ret
sbb
fwait
lcall
pushf
lcall
xor
xor
imul
dec
popf
pushf
test
add
decb
xor
mov
decl
mov
shl
inc
test
cs
jle
sub
jg
aam
mov
int
repz
arpl
jmp
test
fsub
cltd
loope
xor
xchg
mov
incb
pop
or
test
push
rorb
movsb
push
mov
push
call
mov
leave
xchg
aad
jo
sbb
imull
cmp
mov
ljmp
mov
incl
sbb
jle
inc
mov
adc
push
lea
test
jle
adc
call
jg
dec
sbb
sub
clc
mov
int
cmp
pop
mov
xor
test
fsts
inc
movsb
inc
test
mov
dec
mov
add
inc
es
scas
aad
pusha
ljmp
imul
xchg
and
cmp
pushf
push
jp
add
iret
adc
mov
cmp
dec
mov
pop
fnsave
aad
insl
in
idivb
xchg
dec
add
lret
xchg
ret
dec
jle
dec
xchg
lret
fsubp
mov
stos
dec
jecxz
aad
adc
pop
or
shrl
push
dec
scas
sbb
push
and
ja
sub
loopne
addb
mov
jmp
faddl
xor
mov
fdivrl
add
mov
jp
sub
sub
mov
stos
jno
inc
push
outsb
pop
or
add
adc
div
xor
mov
cli
pushf
xchg
pop
icebp
ljmp
in
fwait
out
mov
jb
repz
les
inc
xchg
addl
cmp
adc
pusha
cmpsl
lods
adc
pop
fdivl
js
scas
cltd
in
std
mov
jl
leave
adc
xor
push
aam
addr16
call
xor
and
pop
add
ret
xor
cmc
movsl
xchg
jns
call
lock
call
pusha
push
pop
lods
data16
xchg
scas
adc
dec
push
mov
dec
sub
lcall
fstl
adc
cs
pop
dec
cli
lods
sub
inc
push
lods
cmp
iret
pusha
sbb
repz
clc
std
insb
mov
mov
sahf
push
pop
xor
mov
ficoml
or
aaa
jge
mov
pop
hlt
ljmp
in
push
sahf
or
fcomi
pop
cld
inc
push
xchg
sahf
and
cmp
mov
out
xor
cmp
pushf
ljmp
test
or
in
sar
ret
ljmp
rcll
jns
popa
lret
pop
push
ficoms
dec
jnp
into
add
inc
loopne
rclb
and
pushw
push
cmp
cmp
aas
or
pop
mov
dec
pop
call
sub
daa
mov
dec
cmp
int3
rcl
pop
nop
insl
mov
in
push
mov
shll
aaa
or
movsb
adcl
or
mov
xchg
xor
cmc
jg
ffreep
int
add
and
fsubr
shl
adc
call
fdivs
enter
aad
int
dec
sbb
xchg
pushf
mov
ja
push
decl
mov
push
faddp
shrb
mov
pop
mov
dec
out
lock
lcall
imull
insl
jnp
lea
xchg
lret
dec
jg
test
xor
mov
ja
test
test
lcall
pop
push
les
mov
hlt
cmp
sarl
jmp
pop
jge
mov
lcall
jae
or
aam
mov
xor
fs
or
cmc
pop
hlt
lcall
repz
stos
mov
dec
pop
jecxz
hlt
pop
fidivrs
jg
call
cwtl
leave
dec
outsl
pop
sbb
sbb
mov
mov
loop
xor
mov
jnp
and
xchg
adc
adc
test
ror
mov
mov
jg
jns
leave
and
lret
sti
dec
push
inc
pop
nop
dec
pushf
insl
sbb
sub
or
incl
mov
mov
movl
push
cmp
jecxz
mov
loope
aam
icebp
cs
decl
sbb
into
mov
lock
js
inc
push
jmp
imul
dec
xchg
decl
mov
xchg
incl
push
pop
repnz
jnp
push
sarl
clc
popa
xadd
mov
repz
fwait
jnp
xchg
dec
in
out
insl
jae
cmpsl
xchg
mov
pop
push
cld
iret
mov
jne
fs
mul
ret
sub
and
scas
rorl
out
cmc
pop
dec
sub
imull
cli
jg
loope
hlt
pop
add
popa
std
xchg
bound
out
mov
pop
mov
mov
push
rcr
sbb
mov
ds
negl
lods
popf
pusha
pop
pop
lret
ljmp
incl
xor
cmp
xchg
jl
cmp
mov
adc
push
gs
push
cmp
repnz
ljmp
dec
fs
jae
rorb
push
rorb
fistl
int3
xor
or
sarl
mov
cmp
sbb
movsb
lock
xchg
loopne
cmp
call
add
inc
rolb
jne
adc
loopne
outsl
pushf
push
fdivrl
lcall
aas
xor
mov
divl
movsl
jne
adc
lret
lcall
cs
shlb
ds
imul
ja
inc
push
loopne
mov
insl
imul
pop
inc
adc
dec
mov
cmpsl
mov
icebp
fwait
add
cmp
and
popl
and
add
jmp
pop
mov
mov
pop
sbb
mov
in
cmc
sbb
sbb
enter
jge
cltd
mov
pop
xor
pop
mov
cmpsb
pushl
and
and
push
jbe
or
jg
or
dec
aad
scas
testl
int3
ret
jp
lret
dec
jmp
fadds
dec
jecxz
mov
jl
mov
inc
sbb
scas
andb
mov
inc
add
call
inc
sub
xor
lret
add
cmp
push
jle
dec
fwait
mov
and
adc
ljmp
xor
mov
jg
xor
decl
les
dec
jb
repnz
and
mov
push
gs
ljmp
pop
in
hlt
movsl
cld
push
xor
inc
pop
add
xchg
enter
mov
mov
ljmp
add
sub
in
insl
insl
aad
mov
or
loopne
push
jmp
nop
cmpsl
repnz
sbb
sbb
jp
pop
mov
fnstcw
push
xchg
pushl
rcrb
fs
xchg
adc
imul
mov
iret
pop
add
loope
jle
imul
mov
dec
adc
pop
xchg
dec
test
jg
decl
push
das
cmp
mov
xchg
rorb
jne
cmpsb
int3
loop
ret
call
add
jg
cltd
mov
sub
outsb
rcrl
lcall
iret
cmp
mov
nop
pop
and
lods
js
mov
mov
clc
addr16
std
mov
out
dec
jb
jg
push
xchg
and
loop
ljmp
or
mov
std
add
icebp
outsb
mov
ljmp
xor
xor
jp
and
add
push
sub
aad
cmpsb
xchg
in
ja
call
jmp
dec
sub
mov
mov
push
bound
popf
outsl
sahf
addr16
sbb
mov
push
lret
gs
mov
mov
cmpsb
insl
mov
cmp
jg
ficompl
iret
jmp
lahf
test
xlat
cmc
std
sbb
and
cmp
out
xchg
lahf
add
out
or
or
in
mov
in
dec
mov
mov
push
xchg
aad
fst
xor
inc
or
lock
mov
push
std
iret
inc
ret
cmpsb
pushl
xchg
dec
loope
sbb
jle
or
test
std
aas
jnp
stos
cmpsl
fists
mov
push
inc
das
aaa
ret
fs
mov
daa
jns
cmp
jb
and
out
rclb
cmp
mov
jl
decb
mov
outsl
mov
cmp
lret
fstpt
jmp
sub
jo
ret
pop
dec
push
pop
loop
in
mov
loop
loop
jg
outsl
push
xor
jecxz
adc
insb
xor
mov
mov
sbb
shlb
mov
mov
data16
decl
aaa
adc
pop
addb
enter
pop
mov
lcall
mov
fidivs
loope
pushl
pop
jne
mov
pushf
sbb
rolb
adc
cwtl
xchg
inc
push
jo
js
std
or
in
dec
push
push
ljmp
mov
or
and
cmpl
jmp
adc
inc
pop
lods
push
xchg
or
mov
je
sar
call
inc
adc
pop
cmc
out
cmp
roll
cld
jb
mov
mov
mov
ljmp
mov
fisubrl
xor
mov
dec
mov
sbb
clc
pop
push
jbe
je
pop
jmp
lds
push
xor
scas
mov
pop
cmp
xor
test
insb
cmpb
shrb
ret
and
dec
bound
jmp
cltd
jecxz
addl
movsb
jmp
xchg
movsb
sbb
test
mov
bound
and
jle
fistpll
stos
aaa
leave
mov
dec
pop
pushf
xchg
pushl
cltd
repnz
dec
pop
jle
cltd
clc
out
in
insb
pop
adc
mov
xor
mov
jmp
test
dec
lods
into
adc
push
pop
lods
pop
inc
movsb
lcall
xchg
mov
inc
cmp
add
inc
ret
pop
jmp
pop
jb
cli
imul
inc
div
inc
call
mov
add
clc
mov
pop
jns
pop
xlat
mov
pusha
pop
dec
mov
jno
outsl
cwtl
stc
lret
mov
arpl
shlb
push
in
jne
aad
ss
pushl
pop
xor
imul
mov
call
mov
push
cmp
mov
and
cmp
bound
imul
cwtl
inc
sbb
hlt
andb
movsl
adcb
decl
sbb
mov
pop
dec
ljmp
fwait
fwait
nop
push
rcr
sub
cmp
pushf
mov
ljmp
test
lcall
fwait
jns
xchg
mov
lcall
xlat
sub
adcl
lds
push
hlt
and
or
iret
pop
mov
jge
jb
dec
shld
inc
lock
mov
jecxz
lea
or
adc
xorb
xchg
mov
xchg
shlb
adc
mov
and
xor
ljmp
clc
outsl
pop
cmp
ret
dec
dec
mov
cmp
jg
mov
clc
push
xlat
mov
and
je
push
pushl
mov
xor
xchg
stos
imul
pop
or
jg
ljmp
pop
stc
lods
orb
and
adc
fwait
lcall
stc
mov
pop
cld
jmp
aaa
daa
xor
jle
mov
out
mov
inc
pusha
fstps
adc
out
loope
dec
fldt
dec
jae
jge
cld
pop
test
arpl
pop
or
push
jecxz
mov
mov
pop
cmp
aaa
mov
xchg
pusha
adc
call
scas
sbb
jo
push
sub
leave
mov
jne
mov
decl
adc
nop
mov
lcall
rcr
sahf
or
xchg
shll
add
cs
mov
incl
cld
ffreep
daa
nop
inc
add
into
jnp
sbb
incl
call
js
jns
mov
out
icebp
enter
jmp
cmp
xor
not
adc
call
push
xor
lcall
bnd
xor
ljmp
mov
cmp
push
das
sbb
add
mov
jmp
popa
ljmp
out
loope
es
dec
pop
std
fcomip
cmpsl
dec
jno
in
fcomip
ds
lds
cltd
cltd
bound
push
clc
call
mov
pushl
and
shlb
pop
adc
or
push
dec
push
push
jg
dec
jno
popa
mov
jg
rol
pop
aam
loop
pop
mov
add
and
cmp
jo
mov
ret
push
test
add
jecxz
test
jb
ja
and
or
sti
add
mov
adc
jg
fdivr
rorl
js
jmp
mov
add
sub
push
aaa
mov
stos
mov
xchg
inc
repz
int3
aaa
xchg
ja
fabs
in
popa
sti
mov
push
sub
cmp
out
popa
cltd
add
filds
sti
mov
cli
call
xchg
push
and
pop
fsubrl
mov
mov
mov
ja
cli
shl
inc
dec
out
ljmp
sbb
or
or
lcall
lcall
jmp
inc
push
adc
rcll
or
rcrb
sar
decl
dec
test
xchg
hlt
jb
rolb
out
jb
insl
push
mov
mov
aam
mov
push
dec
in
sbb
into
lea
push
aam
rorl
call
pop
xorl
ret
shlb
dec
ds
sub
jae
jmp
sub
sbb
addr16
call
jle
push
inc
negl
clc
cmpl
pop
xchg
jge
and
clc
dec
mov
mov
mov
cli
or
mov
inc
mov
xchg
std
out
mov
cs
xchg
inc
das
into
sti
out
mov
incl
push
mov
xchg
hlt
addl
dec
jo
mov
xchg
andb
jmp
mov
mov
movsb
sub
iret
ds
testb
loope
cmp
call
jle
dec
into
dec
push
and
iret
in
push
rol
mov
xchg
mov
sbb
inc
and
bound
dec
inc
fsubrs
cmp
dec
mov
dec
movsl
push
pop
ret
gs
cmc
shrl
push
or
sub
jecxz
rcrb
jp
pushl
pop
sbb
lds
lcall
add
jbe
arpl
test
or
ljmp
adc
clc
pop
lahf
dec
js
push
call
adc
fucomp
std
shrb
mov
sub
sbb
jmp
inc
lea
ret
dec
inc
popf
jnp
pop
mov
and
je
insl
jmp
repz
mov
mov
pop
adc
jnp
xor
cld
mov
ljmp
inc
and
fldcw
mov
call
test
leave
xchg
mov
call
mov
enter
pop
cmp
out
xchg
jl
jnp
mov
call
or
aam
ljmp
fadd
clc
ret
loopne
xor
mov
push
mov
cs
mov
ljmp
test
xchg
stc
movsl
mov
lea
or
ljmp
xor
fdivr
ljmp
sbb
ja
push
add
ror
mov
and
out
imul
adc
sub
push
cmp
call
sbb
rorl
add
int3
mov
sbbl
xchg
pop
outsb
mov
mov
lret
sahf
cmc
test
fwait
decl
sbb
mov
ds
movsl
mov
fidivl
pop
adc
es
call
xor
or
data16
jecxz
dec
sbb
cmp
cmpsl
enter
in
xor
cmp
icebp
or
dec
popl
lcall
push
loope
inc
ljmp
rdtsc
cli
movsl
lcall
mov
adc
xor
adc
call
loop
aam
pop
ret
cs
cmp
negl
lcall
xchg
or
incl
and
outsb
or
adc
push
or
add
dec
subl
imul
mov
inc
ss
xor
jns
rcr
je
orb
adc
sarl
xchg
and
inc
cmp
jns
mov
ss
or
cltd
pop
aam
into
das
inc
sbb
scas
jge,pt
mov
ljmp
or
pop
movsl
enter
add
out
testb
lods
jae
cld
ljmp
imul
xchg
or
lcall
sub
pop
int3
imul
icebp
test
jg
add
sub
rolb
jmp
sub
test
push
mov
popf
imul
pop
mov
xlat
ljmp
dec
adc
aam
mov
push
adc
ljmp
or
hlt
push
xchg
dec
std
push
xchg
shl
bound
dec
pop
push
movsl
dec
mov
sbb
push
lcall
cmpsl
scas
int
out
add
dec
dec
cmpb
daa
cmp
sub
pushl
mov
insl
leave
xorb
lret
inc
mov
fistpll
adc
cmp
adc
mov
mov
xlat
fidivs
adc
pop
fs
call
pop
mov
test
or
lret
test
or
outsl
adc
mov
enter
mov
imul
clc
xchg
sub
ret
xor
xlat
mov
xchg
lret
repnz
arpl
fcomip
in
pop
out
bound
icebp
mov
in
mov
aad
xor
test
hlt
add
dec
add
adc
pop
cmc
incl
sub
repnz
ds
mov
jnp
xchg
adc
xchg
shl
or
jne
ror
or
pushf
mov
push
out
adc
jmp
push
divb
cmpsl
mov
mov
mov
dec
add
inc
loop
jmp
cld
mov
pop
outsl
mov
mov
dec
push
and
lret
out
push
mov
outsl
test
pop
jg
lcall
add
push
add
xchg
loop
or
xchg
neg
fstps
loop
adc
lahf
xor
sti
jbe
je
dec
dec
sub
cltd
mov
xor
push
hlt
incl
adc
rorb
sbb
arpl
bound
fscale
idivb
xor
cmpsl
and
jne
pop
fmulp
es
out
or
xchg
dec
stos
sbb
fstpl
ret
xlat
add
mov
stos
and
cmp
std
mov
sbb
mov
mov
inc
cli
add
mov
xchg
cmp
xchg
or
and
loope
out
pop
imulb
fistps
xchg
xchg
and
or
int
lock
mov
mov
imul
jo
insl
decl
or
dec
inc
imul
cmc
int3
inc
push
jle
add
insl
sar
lcall
testb
mov
or
cmpsl
sbb
icebp
rcrb
dec
sbb
call
xchg
mov
xchg
mov
jmp
jg
cli
add
cmpsl
lds
mov
push
repz
je
sbb
rcll
mov
jno
mov
scas
or
popf
rorl
cs
call
or
dec
cmp
xor
lret
or
sub
test
ret
xor
adc
push
xor
adc
in
inc
ds
xlat
fwait
sbb
jb
mov
or
or
or
in
das
push
sbb
out
push
mov
movsl
outsl
test
dec
mov
mov
fwait
or
cmp
je
adc
aam
adc
dec
call
insl
dec
stc
outsb
das
sub
incl
fcomip
imul
clc
inc
mov
inc
loopne
lcall
mov
mov
xor
and
repz
jmp
jo
dec
inc
pop
rcrl
sub
incl
adc
scas
outsl
loopne
mov
and
and
pop
outsb
cmp
inc
mov
jmp
arpl
cmp
call
loopne
stos
push
jge
gs
loopne
adc
sti
xchg
mov
add
sub
call
jno
dec
cmpsb
lret
data16
call
ret
jle
outsb
sub
rcr
dec
mov
mov
imul
xchg
inc
icebp
scas
pushf
cmc
in
ret
into
ss
xor
idivl
fdivp
xlat
in
clc
nop
add
push
adc
jle
js
pushl
movsl
outsb
inc
xor
mov
mov
mov
scas
loop
orb
dec
pop
mov
xchg
add
imul
add
fs
leave
movsl
es
jg
lret
push
jecxz
ja
pusha
or
mov
cmc
pop
loop
or
mov
enter
mov
lds
push
shrb
pop
inc
jge
imul
ljmp
push
push
mov
push
inc
lods
jge
sub
or
pushl
mov
push
inc
push
data16
cmp
jb
jb
pop
loop
leave
xor
add
stos
incb
mov
fisubrs
leave
lcall
sbb
or
loop
arpl
inc
mov
cmpsb
inc
outsb
and
das
xor
mov
mov
movb
cmp
xorb
fwait
push
or
lret
mov
int3
inc
idivl
adc
shll
xchg
cmp
sarb
jg
and
mov
aas
leave
jbe
inc
lds
loop
jg
icebp
cmp
je
dec
jb
outsl
imull
aaa
inc
jecxz
orl
add
lahf
jl
test
into
ss
jg
cwtl
xchg
or
decl
cwtl
mov
push
int
mov
mov
into
cmp
and
mov
xchg
cmp
call
sahf
mov
xchg
push
insl
and
add
movsl
fwait
lea
je
decl
decb
int3
fnsave
jae
pop
xchg
sbb
enter
jl
and
add
mov
outsb
cs
in
push
fwait
scas
push
mov
je
or
mov
fisttpl
dec
and
test
ret
pop
mov
inc
jp
leave
mov
jmp
sbb
pmaddwd
stos
mov
mov
adc
push
jnp
les
test
jmp
push
and
iret
les
xchg
sbb
xor
mov
loopne
dec
or
stc
cmp
pextrw
pop
loopne
call
call
jp
sub
mov
xorl
ljmp
outsl
in
std
int
nop
add
rcrl
sub
add
push
test
jbe
ficomps
ljmp
cmpb
rolb
int
push
mov
add
jg
insl
sbb
mov
cs
pusha
ljmp
jmp
xchg
add
mov
xchg
or
ljmp
les
orl
jae
sar
test
stos
popa
and
aam
scas
test
clc
ljmp
shll
imul
push
jle
sbb
lea
cmp
icebp
dec
inc
mov
test
sbb
xchg
pop
rolb
scas
fs
call
inc
mov
adc
mov
push
pop
notb
sbb
jo
cltd
mov
cmc
addr16
scas
clc
ret
scas
imul
aaa
clc
cmp
push
adc
in
nop
mov
jb
push
sub
lcall
dec
inc
add
es
insb
les
fisubl
fcomip
pop
in
je
in
int3
cmp
pop
sbb
xchg
dec
jno
xchg
insl
test
aaa
fwait
cmp
lcall
dec
rolb
xor
mov
movsl
pusha
sbb
stos
ja
outsl
ret
pop
fstps
imul
lds
jne
jg
int3
sub
add
lret
or
stc
push
loopne
pop
mov
add
pop
and
in
add
mov
jge
ljmp
xchg
add
and
fsubrs
sub
mov
movsl
out
arpl
hlt
insl
std
std
adc
push
loop
adc
dec
push
mov
stos
fsubrs
pop
cmp
cli
pushf
repz
inc
fwait
or
mov
pop
sbb
leave
push
sbb
in
cs
jecxz
dec
mov
movsl
rcll
mov
and
outsb
call
dec
fldenv
add
in
sarl
sub
lcall
or
out
mov
push
and
rcrl
ljmp
xchg
xchg
test
xchg
add
xor
std
pop
xchg
jle
mov
jne
fwait
mov
iret
pop
popf
les
imul
pop
mov
gs
push
sub
cld
dec
or
sub
dec
add
sub
xchg
insl
mov
ljmpw
adc
out
sub
push
push
clc
lcall
cmp
rclb
arpl
pop
jp
in
das
lea
fnstenv
lock
sub
outsb
and
dec
ficompl
dec
sbb
xchg
pop
out
bound
pushf
dec
jb
pop
cmp
inc
rcr
les
out
popa
lret
outsb
neg
push
leave
out
fcmovne
mov
lret
insl
insl
dec
mov
pop
clc
into
sbb
leave
inc
outsb
mov
pushl
cltd
lods
dec
dec
in
sarl
xor
mov
mov
stos
popa
addr16
push
andl
xchg
mov
shll
in
pop
aam
inc
pop
pop
lret
sub
lock
incl
ss
push
out
rorb
sbb
mov
inc
mov
lcall
jbe
xchg
pop
xor
push
pusha
mov
popa
jp
add
dec
loope
les
hlt
outsl
pusha
push
pop
hlt
mov
jo
int3
dec
ds
imul
push
mov
loopne
ja
into
adc
or
xor
stos
cli
subl
or
jl
test
dec
ror
scas
pop
lcall
les
jmp
xor
cltd
decb
int3
into
pop
or
cmpsb
push
aam
sti
push
test
xchg
or
xlat
lea
inc
call
push
call
ja
xchg
mov
mov
out
repnz
pop
add
push
or
pop
int
rol
pop
adc
cmp
pushf
shlb
int3
add
arpl
jg
sub
jmp
cwtl
xor
pop
outsb
mov
mov
mov
mov
mov
xor
add
or
call
stos
aad
mov
shl
add
pushf
mov
and
inc
mov
daa
or
pop
cltd
adc
mov
mov
inc
mov
jae
das
lock
in
or
cmp
jmp
fdivrp
push
cltd
jecxz
xchg
push
jnp
jmp
repz
add
mov
push
jle
ja
pusha
notl
add
adc
ret
decl
das
ss
and
cmp
cmp
xor
movsl
ds
fdivrl
clc
lods
gs
sbb
push
add
out
adc
or
aaa
mov
incl
xchg
arpl
rclb
jno
outsb
call
fcmovne
xor
and
mov
stos
in
loope
pop
mov
sub
jp
push
push
inc
mov
jp
std
fimull
inc
out
ljmp
add
mov
lock
outsl
sbb
mov
mov
jg
inc
add
stos
sub
out
call
xchg
and
or
push
mov
cmp
faddl
call
jmp
jae
cld
cmpsl
add
jo
daa
inc
les
or
stos
repz
adc
decl
jo
fists
das
aaa
xor
mov
push
mov
or
add
je
ret
gs
mov
jle
mov
mov
mov
mov
pop
movb
dec
mov
fstl
movsb
mov
cmp
popl
mov
mov
clc
ret
pop
cmpsl
jmp
adc
sbb
std
fcoml
out
jo,pt
ret
cltd
ficompl
xor
push
shrl
outsb
jmp
lock
cmpsb
pushl
ja
cmpsb
push
fcomi
cmp
in
xor
incl
and
lods
lods
pop
dec
jns
cmp
mov
cmpsl
out
dec
dec
cld
and
jmp
popf
inc
rcll
dec
xchg
rcr
and
jecxz
leave
lock
mov
or
arpl
jg
decl
jle
inc
neg
sarl
sbb
mov
je
inc
jns
adc
cwtl
lcall
or
aaa
push
dec
in
lcall
gs
sti
sub
cmp
decl
std
pushf
int
jl
scas
sbb
pop
and
xlat
pop
pop
nop
addb
decl
sub
cmpb
outsb
sbb
test
lret
outsl
xor
decl
xorl
add
int3
xchg
repnz
out
jb
jnp
pushf
stos
out
push
mov
inc
mov
mov
xchg
cld
loopne
push
ljmp
pop
sub
sahf
dec
in
mov
jnp
movsl
aam
js
shr
sbb
call
cmp
pusha
pop
lods
and
outsl
addb
push
lcall
add
xor
insb
sub
cmp
std
or
clc
mov
xor
rorl
mov
cli
pushl
add
inc
dec
fsubl
in
addr16
stos
inc
inc
inc
aam
sub
adc
pusha
call
push
sbbb
add
pop
data16
xchg
pop
in
pop
inc
jg
push
pop
in
cmp
ja
out
fiadds
and
in
pop
cld
xchg
decl
sahf
mov
fbstp
arpl
repnz
insb
mov
cmp
cmp
fidivrl
sub
fldt
inc
xor
lock
scas
jbe
mov
inc
out
pusha
xor
sahf
icebp
jge
sub
stc
icebp
xchg
pushl
aas
test
push
ret
sarb
jb
adc
jmp
add
cmp
jo
mov
rep
out
stc
add
jmp
ret
pop
adc
addr16
pop
jle
je
mov
push
or
lret
stos
adc
lret
adc
ljmp
sub
adc
inc
addr16
dec
cwtl
and
sbb
sub
add
clc
decl
imul
sti
xchg
xchg
inc
cmp
incl
es
mov
js
ret
les
xor
cmpsb
xlat
dec
pop
hlt
out
clc
pushl
cmp
out
and
push
arpl
popa
cmp
repz
lcall
push
jo
mull
movsb
inc
bound
cltd
pop
inc
jg
jecxz
and
loop
lock
incl
lods
shlb
sahf
lock
call
imul
rcrl
int
call
mov
xchg
xor
cmpsb
iret
fnstsw
insb
push
xor
popf
push
mov
mov
sbb
jle
js
sti
jecxz
dec
int
loopne
inc
insl
out
movsl
sub
popa
mov
decl
jae
xchg
xchg
daa
sub
cmp
jns
flds
call
cmpb
jmp
scas
or
dec
mov
sbb
push
test
call
cmp
out
mov
fisubs
js
push
xlat
jmp
fnstcw
or
mov
decl
cwtl
loopne
push
jae
pushf
and
ss
xchg
scas
pop
mov
insb
aam
cld
lcall
dec
xchg
aas
or
mov
xchg
setp
out
push
mov
clc
and
push
out
or
mov
movsb
sub
or
shrb
ljmp
push
and
mov
fistps
add
fwait
jmp
out
insb
arpl
inc
push
sbb
mov
icebp
outsl
loope
lret
sbb
xlat
adc
mov
call
pop
ds
cmp
lea
mov
and
push
insb
mov
mov
push
mov
mov
dec
call
pop
xor
add
rorb
push
add
loopne
xchg
or
fcoms
insl
xor
call
andb
xchg
lret
or
mov
mov
je
fwait
sub
jmp
jecxz
sub
imul
add
fcmove
jmp
call
iret
push
jp
pop
fstl
pop
mov
xchg
xor
mull
push
addb
jecxz
imul
mov
popf
in
mov
jle
mov
dec
mov
fnstcw
jb
mov
imul
ljmp
incb
movsl
jmp
arpl
add
push
cmpb
jecxz
test
push
aad
add
xchg
and
or
xchg
or
push
mov
cmp
adc
gs
daa
loope
or
out
mov
fcomip
push
fsts
adc
adc
xor
rorb
push
mov
sub
mov
incl
shlb
jge
mov
pop
xor
das
ss
xor
or
fwait
pop
in
out
dec
xor
decl
mov
xor
xor
imul
inc
push
icebp
xchg
loope
pop
cmp
rcrb
push
xor
xchg
jae
and
movsl
cs
jg
ret
jge
scas
outsb
sub
push
mov
jmp
pushl
ret
lods
pop
pop
enter
movsb
push
js
std
sub
mov
xchg
push
fadds
leave
shll
orl
xchg
xchg
incl
pop
das
insb
movsb
sahf
sub
sub
in
push
les
xchg
mov
test
lds
outsb
nop
and
call
dec
sub
cltd
pushf
lds
add
fisubs
hlt
and
push
mov
mov
lcall
lods
push
jnp
inc
push
cmp
fcmovu
jle
rcll
lcall
fs
clc
ljmp
mov
adc
push
sar
test
int
jg
imulb
inc
scas
and
xor
inc
add
mov
in
or
ljmp
pushf
pop
pop
cmc
daa
mov
outsl
ficoms
or
jns,pt
add
and
call
or
call
cmpsl
add
aam
add
ljmp
push
hlt
fcomip
jmp
push
mov
cmp
shll
sbb
adc
fcoml
rcl
test
and
lods
clc
decl
pop
andl
pop
mov
jmp
push
ljmp
inc
jmp
push
stos
jle
rcll
push
call
sub
dec
cwtl
push
aaa
imul
int3
adc
into
pop
xchg
test
dec
add
push
mov
gs
pop
insb
jbe
pop
push
hlt
jne
inc
adc
inc
cmpsb
scas
push
pop
xchg
ret
cmpsl
mov
push
fxam
mov
movsb
push
cmpl
je
ret
cmc
pushl
mov
negb
mov
inc
icebp
jnp
mov
fists
data16
add
stc
mov
lcall
movsb
sbb
push
aad
pop
orb
loop
bound
ret
test
mov
ljmp
test
xlat
jbe
cmpsb
movntps
dec
jg
or
mov
ret
push
les
cli
into
cmpsb
loop
adc
and
pushl
movsb
xor
jo
loop
or
sbb
cmp
pop
lods
pop
cmp
push
dec
or
lcall
xchg
scas
xchg
lods
fstl
andb
sahf
mov
inc
cmp
xor
loopne
lret
imul
pop
je
cmpsb
pop
popa
dec
stc
sbb
outsl
xchg
test
ljmp
mov
imul
in
loopne
pop
shll
xchg
pop
dec
aaa
inc
jmp
outsl
sahf
int
stos
sahf
lods
cwtl
mov
adc
out
in
pop
sbb
rcll
gs
or
add
les
xchg
fidivs
scas
add
lcall
cmp
inc
dec
test
clc
or
inc
loop
scas
mov
incl
cmp
fstl
mov
mov
cli
or
ss
repz
ja
imul
jb
ds
xlat
push
decl
aas
inc
inc
sahf
sbb
ss
xchg
fbstp
enter
push
cltd
mov
popa
fisttps
jo
inc
out
aaa
push
jle,pn
mov
dec
mov
jecxz
sbb
pop
add
jl
call
and
sbb
dec
mov
adc
sub
repnz
fisttpl
imul
fmuls
cld
or
jl
jne
dec
mov
mov
xchg
pop
popf
push
inc
push
lahf
in
lcall
outsb
sbb
push
push
mov
xchg
mov
lods
out
std
ja
ljmp
push
adc
jg
or
adc
stos
sbb
push
popf
cmpl
aaa
out
xor
pop
movsl
jb
int
mov
cmpsl
cmp
inc
fdivr
jmp
adc
or
vpcomuw
jne
insl
repz
hlt
inc
mov
inc
inc
cwtl
mov
test
lret
or
incl
bound
push
fcmovb
jecxz
cmp
dec
adc
inc
dec
test
push
pop
jge
jae
dec
mov
adcb
data16
cltd
inc
aad
aaa
inc
cmc
xor
shlb
sti
xchg
rorb
das
pushl
add
orb
divb
add
mov
dec
in
jecxz
and
pop
icebp
sbb
rcr
xchg
inc
repnz
sub
lahf
mov
pop
sub
pop
inc
adc
add
scas
out
push
and
lahf
xchg
nop
push
inc
dec
xor
mov
aam
adc
mov
aaa
jg
sbb
nop
outsl
xor
pop
jle
stos
loop
mov
dec
xchg
mov
clc
out
cmp
into
cld
rcrl
and
incl
xor
mov
xchg
ret
fldcw
adc
fistpll
aad
decl
mov
mov
test
call
into
cwtl
cmpb
jnp
aam
aas
mov
or
jmp
loopne
or
pushf
jmp
push
jnp
out
stos
es
out
into
adc
into
out
add
push
out
lret
jmp
iret
incb
sub
mov
invd
jb
dec
push
lret
in
call
das
push
fdivrl
fsubrs
mov
pop
mov
pop
push
aas
add
decl
iret
xchg
repz
decb
or
jno
mov
mov
jmp
scas
jg
dec
ret
xchg
hlt
sbb
cmc
or
sti
out
add
add
out
outsl
cmc
fs
jbe
fisttpl
sub
mov
negl
mov
mov
xchg
jae
and
out
idivl
lcall
inc
hlt
push
dec
lret
fmull
add
imul
sub
jno
call
inc
jb
pop
xlat
fnstenv
shlb
jno
adc
dec
addr16
xor
clts
add
imul
test
aad
pop
imul
inc
sbb
dec
mov
shl
dec
outsl
inc
incl
fbstp
pop
xchg
imulb
push
cmpsl
or
dec
jmp
adc
loope
xor
fistps
adc
lcall
cmp
rcl
dec
test
lcall
sub
loopne
scas
jecxz
jbe
jg
jno
or
jp
ret
jle
dec
add
incl
les
imul
sub
push
mov
ret
add
push
addr16
decl
sbb
mov
xor
leave
sbb
jne
mov
and
push
pop
add
jmp
sbb
movsb
test
outsl
in
fmul
sbb
jg
xor
jno
in
jae
xchg
push
push
call
ljmp
xchg
fadd
sub
mov
and
cmp
cs
fucom
enter
call
push
sbb
push
or
mov
jge
test
out
cmp
or
pop
mov
fld
mov
movsl
inc
iret
dec
fildll
inc
call
dec
jno
frstor
mov
shl
cld
xor
fistl
xchg
adc
adcl
int3
add
sbbb
sbb
sbb
cmp
icebp
in
insb
push
sbb
lock
outsb
lahf
pop
fistpl
cmp
cmp
mov
add
dec
sti
sbb
inc
mov
ljmp
or
push
lret
jmp
lods
or
in
adc
lcall
in
mov
cld
cmp
mov
mov
mov
sub
inc
xchg
sahf
pop
xchg
stc
mov
pop
jmp
cmp
into
pop
lret
adc
enter
mov
fs
in
mov
test
add
mov
fcoml
es
mov
mov
sahf
or
jnp
call
arpl
pop
jae
leave
lret
mov
andl
xchg
cmpsb
pop
xor
ret
lcall
adc
int
clc
push
pop
stc
movsb
insl
std
call
pop
repz
xchg
xor
test
mov
pushl
cs
sub
push
and
es
jmp
leave
and
jmp
cmp
lcall
and
mov
call
cmpsb
jne
mov
in
push
mov
jnp
jo
xor
in
sub
adc
repnz
call
shll
jns
and
pop
inc
cmp
mov
xchg
daa
fndisi(8087
dec
pop
jb
pop
push
inc
mov
mov
shrb
pop
jge
es
nop
stos
push
push
iret
aas
in
add
aaa
sahf
xchg
call
pop
fmuls
mov
pop
and
sbb
jbe
and
mov
lods
xchg
mov
jl
sub
inc
clc
into
fsubr
mov
push
imul
call
std
les
mov
adc
std
std
fistpl
push
add
hlt
movsb
mov
dec
lea
lret
fsts
lock
in
mov
ds
out
and
imul
jmp
movsb
mov
repnz
ret
xchg
bound
cltd
adc
stc
sub
pop
sbb
xchg
call
shl
das
cmpsb
stos
aaa
pop
repz
call
out
inc
aad
cld
fadds
lcall
lods
int
jmp
lods
or
test
pop
xorb
dec
enter
jmp
xchg
lahf
mov
push
pop
mov
push
jl
sbb
sub
call
leave
adc
popf
mov
inc
loope
cmp
jg
sti
aam
and
gs
icebp
cmp
sub
repnz
ret
push
pop
in
enter
xor
filds
jmp
and
sbb
call
add
add
ds
pop
jae
sbb
or
outsb
mov
mov
xor
cmp
subl
cmpsl
mul
xchg
test
cmp
ret
jmp
inc
pusha
mov
xor
or
mov
daa
pop
test
ljmp
push
or
sahf
daa
sbb
imul
xor
jns
jmp
notb
mov
dec
xchg
outsl
add
lret
test
add
decl
cmp
adc
aaa
push
sbb
outsl
sub
jmp
push
jo
lods
mov
or
gs
inc
xor
mov
dec
out
add
in
xchg
es
popf
pusha
sbbl
xor
incl
iret
call
es
mov
scas
cmp
addr16
or
xchg
cwtl
push
mov
adc
imulb
clc
inc
xor
pop
mov
lods
push
test
or
cmp
push
or
ljmp
push
jge
sarb
xor
cmpsl
push
xor
pop
decl
mov
xchg
pop
rep
les
fst
xor
push
cmp
insb
mov
fdivrs
dec
jmp
ret
test
sub
ficompl
leave
and
movsl
leave
cmpsb
hlt
jg
jmp
mov
in
jle
fwait
xchg
int
rorb
cmc
push
adc
pushl
mov
addb
sahf
or
test
hlt
cli
inc
fninit
lds
push
clc
in
stos
cmpsl
mov
push
mov
mov
adc
jp
and
fsts
sbb
push
lret
or
ss
add
mov
movups
mov
sub
push
shll
push
or
aam
call
cli
sub
insl
sub
int3
cltd
mov
rol
adcb
jp
sub
cmp
and
nop
cld
mov
inc
insb
clc
xorb
mov
dec
pop
mov
addb
add
add
and
cmp
jo
mulb
pop
je
jg
ret
dec
push
pop
repnz
add
test
pushf
je
hlt
incl
fcomps
and
pop
aad
rorl
fstps
fistl
lods
lret
cld
ja
cld
outsb
orl
push
mov
ror
mov
jae
lahf
test
cmp
or
jg
or
mov
pop
mov
bound
pop
adc
xchg
sub
dec
xchg
xor
or
jns
lods
inc
push
stos
out
adc
cmp
into
movsb
les
jle
sub
adc
sub
mov
sub
popf
sbb
xor
xchg
lcall
in
dec
outsl
out
xor
sbb
mov
ja
scas
mov
testb
incl
clc
nop
mov
xchg
adc
shlb
leave
mov
dec
test
fisubrs
call
push
adc
jo
dec
push
out
pop
mov
ret
lock
push
loopne
call
sbbl
dec
dec
nop
imul
xchg
scas
sub
xchg
into
out
and
inc
xor
mov
stos
jge
cld
pop
idivb
icebp
repz
lret
adc
mov
popf
callw
pushf
or
sbb
ljmp
inc
sahf
jle
les
pushf
dec
mov
and
rcr
jae
sbb
add
movsb
lahf
sub
in
rep
daa
pop
dec
or
call
mov
lods
dec
gs
mov
and
mov
in
jo
mov
mov
cmp
iret
push
and
lcall
push
jne
mov
xor
cs
and
sub
cmp
push
ds
mov
add
je
adcb
in
pop
cmp
pop
movsb
pop
repnz
fsubs
mov
push
xorl
cmp
leave
out
arpl
jg
int3
aas
mov
insb
data16
movzbl
jmp
pop
nop
out
and
lret
ljmp
mov
mov
in
xchg
loopne
in
por
data16
loope
lahf
cmp
pushl
pop
fsubrs
mulb
xchg
inc
insb
adc
call
push
adc
mov
push
les
adc
jp
pop
dec
inc
lea
aam
ss
in
xor
and
call
repz
negb
or
xchg
xchg
call
lds
sbb
cmp
pop
testl
stos
pop
sub
jae
out
insb
push
cld
incb
ror
jmp
movsl
fdivrs
sahf
aaa
flds
cmp
and
lods
pop
or
dec
xor
dec
or
test
outsb
je
mov
dec
cltd
bound
sub
jmp
jl
push
pushl
aam
inc
stos
sub
in
push
pop
mov
cwtl
repz
mov
cld
dec
and
cmp
repnz
xchg
jge
notl
outsl
inc
inc
add
cli
call
das
adc
sub
clc
sti
test
cwtl
xchg
mov
mov
call
es
add
jne
cmp
nop
pop
or
push
mov
pop
mov
rcr
pop
sbb
dec
jns
pushl
or
in
mov
les
negl
mov
add
push
addr16
pushl
mov
roll
xchg
xchg
add
out
fwait
xor
cmp
inc
fdiv
mov
dec
inc
ljmp
xchg
cwtl
pop
negb
sbb
lods
pop
adc
mov
dec
ja
shll
sbb
incl
fisubrl
pop
fldl
add
jbe
lahf
psubb
mov
push
addr16
daa
pushl
mov
inc
inc
xor
jge
dec
out
inc
mov
mov
cltd
call
and
jne
and
loop
inc
sub
jp
cmp
jg
ds
adc
popa
jle
sahf
ds
subb
mov
andl
test
fdiv
jg
test
pop
add
sahf
pop
adc
fadds
lahf
xor
test
aam
aam
test
adc
pop
jae
add
pop
adc
cmc
push
jmp
jmp
mov
cli
mov
sar
jmp
mov
dec
xor
test
out
clc
ja
xchg
js
sub
mov
cmp
inc
inc
stos
mov
test
xor
popa
lcall
andl
push
or
and
cli
pop
jno
cwtl
clc
mov
insl
in
add
cmpsb
addr16
xchg
adc
aad
push
push
loop
scas
xchg
lcall
icebp
sbb
insl
in
out
jne
cmp
jl
adc
sti
dec
xor
adc
lcall
imull
outsb
imul
imul
cwtl
popa
or
repnz
es
inc
inc
cmp
jmp
pop
adc
adc
decl
gs
repz
xchg
jno
mov
std
pop
sbb
dec
mov
jmp
jne
cmpsl
insb
pusha
inc
mov
outsb
loopne
lods
lock
decl
push
and
lcall
sub
inc
add
jmp
jp
jnp
jecxz
pop
pop
lcall
push
push
mov
std
repz
mov
rcl
sub
lcall
jae
test
popf
push
gs
scas
clc
mov
add
jbe
aas
mov
jmp
xchg
push
fs
clc
test
and
add
dec
stc
shr
lcall
mov
cltd
mov
jne
fwait
addb
stc
adc
shlb
jnp
sub
xchg
cmp
out
mov
mov
sti
addl
mov
fistps
cld
fildl
pop
lods
sub
push
jns
movsl
aam
jg
shlb
cmpsl
dec
fstpl
idiv
mov
bound
shrl
sbb
jo
into
xchg
int
lock
or
pushl
sbb
add
jbe
push
test
push
call
inc
sar
mov
imul
addr16
pushl
std
in
in
lahf
jl
fcoml
lods
lahf
adc
cltd
inc
outsb
sahf
push
aas
js
adc
push
outsl
or
call
xlat
loope
rdpmc
fld
pusha
push
and
push
jecxz
add
mov
push
push
add
and
out
adc
jmp
std
push
push
cmpsb
jbe
cmp
push
in
add
push
fstps
xchg
xchg
cmp
sti
cmc
into
pop
mov
decl
pop
inc
fs
cmp
cmp
inc
pop
inc
xlat
cld
sub
pop
xor
bound
lcall
rclb
xchg
mov
sub
ljmp
je
pop
mov
aam
or
decl
das
xchg
mov
scas
sbb
in
xchg
mov
paddusb
ljmp
repnz
int
cmpsl
dec
gs
lods
mov
mov
in
out
movsl
sbb
jne
in
scas
or
or
dec
out
test
inc
loop
lahf
cmc
sub
loope
mov
fiadds
add
mov
xor
mov
fstpl
aas
jp
call
and
addr16
in
jmp
int3
bound
cmpsb
fistl
xchg
in
rcrb
aad
movsb
jne
mov
pop
aam
inc
decl
shlb
push
push
movsb
pop
fld
and
or
jecxz
add
pop
mov
decl
es
rcll
clc
imul
mov
shrb
insb
mov
sar
or
jo
scas
xlat
mov
jge
idivb
add
fsubs
loope
adc
fs
popa
dec
dec
jo
call
icebp
mov
mov
fmul
pop
cmp
and
jae
out
push
cmp
inc
insb
lds
pushf
lcall
mov
add
jmp
dec
sbb
cli
and
mov
pop
inc
xchg
dec
sahf
data16
pop
jmp
enter
fs
dec
icebp
aas
rorb
incl
bound
pushf
cs
jne
scas
repz
mov
or
push
or
jp
and
ljmp
loop
icebp
xchg
inc
pop
sbb
sub
loop
shlb
pop
stos
cmp
mov
inc
mov
inc
mov
shl
icebp
pop
iret
push
push
aam
add
mov
xor
adc
decb
shl
jo
cltd
clc
ljmp
aad
fs
dec
add
inc
push
mov
xchg
mov
popa
cmp
jge
fwait
jg
jo
repnz
and
jb
mov
fcmovbe
aaa
or
xchg
jmp
incl
nop
ss
mov
ss
mov
cltd
jge
mov
cli
mov
incl
stos
xor
dec
ret
jg
pusha
rorl
addr16
and
pop
loopne
adc
incl
icebp
and
ss
ljmp
mov
xor
mov
pop
cld
lcall
dec
jnp
push
mov
orb
mov
jg
dec
fs
jle
jg
pusha
fsubs
pushf
adc
test
pushl
iret
lcall
loopne
movsl
js
pop
pusha
fisubrl
fs
sbb
xor
jl
call
mov
push
cmp
rolb
pop
ds
cmp
out
loopne
fadd
in
push
outsl
aas
lods
test
cmpl
dec
and
mov
dec
mov
incl
popl
dec
pop
fcompl
add
stos
nop
call
outsb
test
mov
xchg
pop
and
pop
nop
mov
call
jns
sbb
and
mov
bound
mov
lret
xor
nop
std
lcall
shrb
outsl
test
in
xor
adc
mov
loopne
pop
xchg
add
call
stos
pop
aas
test
fwait
into
mov
pop
imull
rorl
pop
dec
push
pop
outsb
cmpsb
movd
cmp
mov
jo
dec
xchg
mov
stos
out
push
sbb
in
inc
int3
adc
mov
outsl
xor
push
loop
pop
in
popa
mov
and
movsb
sub
ljmp
sti
scas
push
mov
imul
pushf
testb
inc
jno
es
jle
sub
call
dec
pop
and
imul
dec
cmp
sub
push
xchg
clc
fidivrl
inc
cli
decl
nop
inc
jge
fcompl
jne
repz
shrl
insb
adcb
fnsave
mov
add
and
popa
iret
popa
add
shlb
ljmp
inc
outsl
js
insl
pop
int
jge
mov
jns
sbb
dec
fwait
repz
fimuls
mov
mov
jecxz
add
fldcw
sbbl
sarl
mov
decl
fisubrl
mov
cmp
mov
adc
popa
aam
jns
push
cmp
call
sti
insl
push
pop
arpl
or
xor
aaa
fcmovnu
sbb
pop
add
jmp
cwtl
jl
repz
mov
push
lcall
movsb
clc
sbb
loopne
lret
fisubrs
sub
cli
mov
mov
sar
or
out
jb
lock
push
jecxz
mov
mov
jmp
imull
daa
fdivl
add
jo
add
jge
iret
or
push
insl
sbb
sar
incl
xorb
imul
and
mov
push
push
mov
int3
je
xor
mov
scas
scas
fcomps
cmpsb
scas
adc
incl
pop
aas
adc
dec
push
push
cwtl
jbe
sub
jecxz
fcmovnb
enter
xchg
xchg
xor
jae
mov
cmp
ljmp
or
adc
stos
xchg
movsb
mov
xor
out
mov
loop
cli
iret
scas
cli
incl
packsswb
mov
mov
pop
out
lret
dec
cmp
outsl
repz
call
stc
sbb
ret
arpl
mov
mov
xchg
loopne
sbb
aas
xchg
nop
cmpl
mov
fisttps
shlb
jne
xchg
and
cmpsb
pop
lds
setne
xor
jl
mov
add
in
xchg
aad
shrb
pop
dec
leave
mov
incl
push
or
stc
cwtl
movsl
ret
xor
loop
mov
add
jno
inc
loopne
out
pop
cmc
decl
push
cmpsl
inc
lret
insb
mov
or
pop
push
jecxz
xor
jecxz
aam
fistps
icebp
iret
adc
shlb
mov
fcomps
cli
jb
and
aaa
es
mov
push
pop
dec
inc
stos
ret
and
mov
xorl
dec
or
lcall
or
mov
mov
xlat
push
movsl
rorl
call
xchg
pop
jo
push
and
pop
lea
add
aaa
cmp
rcrl
push
xor
adc
adc
push
jge
sub
call
xchg
cmp
adc
dec
stos
xchg
adc
lret
cmp
lcall
mov
xor
xchg
push
pushl
std
cmp
out
push
pop
testb
aam
xchg
inc
or
icebp
mov
mov
clc
call
and
pop
out
and
imul
inc
push
mov
xchg
pop
mov
adc
push
jmp
cld
mov
data16
jp
lret
adc
lret
xchg
outsl
jo
mov
out
xchg
jle
in
or
inc
js
negb
cmp
mov
cld
lcall
push
jb
mov
jno
in
outsb
test
add
cmp
lret
fwait
lcall
jae
nop
test
push
idivb
inc
lds
nop
mov
les
in
mov
popf
popa
in
fdivrs
pop
inc
test
push
dec
insb
out
pop
rcl
decl
aaa
mov
ret
shll
loop
cmp
daa
icebp
jmp
vfrczsd
loop
pop
iret
dec
mov
ljmp
cmp
inc
pop
shrl
incl
aaa
xor
fisubs
aas
in
out
jle
sbb
push
mov
ret
decl
jl
adc
loope
xchg
or
adc
inc
mov
mov
pop
cmp
mov
sbb
jmp
inc
pop
cmp
std
xchg
jae
mov
push
test
mov
mov
sub
js
mov
inc
fldl
jmp
cmp
into
and
inc
lea
mov
sub
inc
scas
clc
pushl
hlt
iret
lods
movsb
ss
outsb
ret
es
mov
iret
fistps
decl
jnp
sub
mov
cmp
dec
xchg
pushf
adc
fiadds
jmp
mov
xor
cltd
lds
mov
adc
out
push
cwtl
sub
shll
xchg
cmc
pop
into
mov
clc
loop
in
adc
sub
cmp
out
lds
lret
roll
pop
lret
mov
ret
dec
cmp
xor
adc
fimuls
scas
mov
decl
adc
out
orb
or
insl
es
test
jmp
add
movsb
popf
pop
sbbl
ss
jmp
pop
or
jecxz
ret
cli
sub
jbe
sub
mov
dec
jmp
pop
mov
pop
frstor
push
rcll
loopne
or
lcall
dec
jae
arpl
out
sub
fcmovnbe
add
inc
mov
gs
mov
ret
or
pushl
sub
jae
pop
cmc
sub
test
xor
dec
call
xorb
scas
mov
daa
mov
aad
bound
sbb
popa
aad
ljmp
int3
add
jp
movsb
inc
sbb
in
clc
lret
call
es
mov
in
popa
daa
xor
idiv
call
add
loope
hlt
xor
push
mov
hlt
cltd
pop
jmp
rcll
cmp
mov
popa
add
push
cmp
sub
xchg
cmp
int
imul
push
lret
jnp
cwtl
cmp
shlb
in
in
mov
add
das
mov
dec
sub
incl
jp
push
sbb
xor
pop
rcl
and
out
clc
fcomip
mulb
xchg
gs
sahf
outsb
bound
push
enter
or
outsb
out
mov
fucom
dec
loope
cmc
push
jmp
pop
ret
loop
stc
xchg
xor
lds
sub
movsl
rclb
inc
adc
push
dec
pop
sub
and
push
lahf
xor
pop
cli
jne
jl
xor
lods
hlt
out
insb
fs
sahf
or
jge
ljmp
xor
arpl
pop
push
adc
cmp
xor
or
lret
mov
stos
repnz
mov
inc
pushf
pop
decl
pop
hlt
rclb
lahf
rcll
paddd
pop
je
mov
pop
jmp
stos
roll
lcall
movsl
jg
jo
cwtl
jge
cmpl
decl
ljmp
sbb
jno
test
jnp
adc
inc
push
pop
inc
xchg
inc
decl
shlb
std
push
bound
fwait
mov
pusha
cmp
daa
test
and
in
sbb
ljmp
cmpsb
xor
loop
adc
stc
lods
xchg
and
pop
mov
adc
pushl
outsb
dec
adcl
or
test
cmc
jne
mov
hlt
leave
stc
ds
mov
pop
scas
lcall
or
pop
je
mov
hlt
imul
mov
or
nop
adc
daa
mov
mov
dec
out
jb
int
decl
push
outsb
imul
or
pop
cwtl
xchg
dec
sub
leave
adc
mov
jmp
xor
insl
cmp
mov
jae
dec
dec
adc
popf
fadd
xchg
push
pop
xchg
jmp
inc
and
mov
out
and
mov
sti
cmp
incl
mov
push
imul
ret
inc
and
std
mov
inc
xor
pushl
xchg
out
insl
dec
adc
push
aam
imull
stos
pushf
repz
xor
mov
sti
ja
call
mov
sahf
sub
cmp
sti
sub
addr16
jo
fldl
inc
call
pop
jb
and
inc
scas
popa
gs
rcrb
fmulp
roll
scas
and
ss
cwtl
rcrb
lds
jo
mov
loop
lahf
daa
sub
push
fcmovnb
inc
pop
jg
inc
mov
insb
or
and
sub
push
mov
iret
xchg
xchg
mov
add
ljmp
fcompl
mov
jns
enter
call
pop
push
mov
daa
std
insl
push
pop
push
lcall
roll
fdivs
add
outsb
mov
mov
pop
loope
incl
sbb
cmpsl
out
jecxz
arpl
adc
add
pop
mov
mov
push
dec
icebp
mov
pushf
jno
fcomps
mov
xchg
test
les
incl
pop
xchg
out
mov
fcoms
jp
pop
les
fwait
or
insb
mov
lcall
push
adc
pop
adc
scas
pop
mov
push
xor
xlat
pop
cld
pop
popa
or
push
in
icebp
pushf
jo
sub
loopne
jg
dec
cli
inc
xor
sahf
aaa
inc
sbb
rcrb
movsl
cld
or
xchg
adc
bound
repz
inc
scas
mov
jmp
push
sub
es
loopne
xor
push
mov
sbbl
incl
icebp
mov
in
out
jo
lock
cmp
mov
aad
cli
xor
lock
iret
mov
shl
pop
xchg
cmpsl
out
xor
adc
jg
pop
loopne
or
pop
adc
es
pop
push
push
test
sub
test
add
and
leave
ljmp
ljmp
inc
dec
adc
out
xorl
icebp
cmpsl
shl
cmp
fldl
cmc
mov
pushl
mov
test
in
push
repz
mov
dec
mov
cmp
inc
sar
pop
lret
negb
mov
movsb
cmp
adc
gs
fwait
xlat
out
stos
xchg
outsl
pop
cmpsb
bnd
sti
inc
mov
pop
adc
imul
sar
dec
cwtl
mov
js
push
lock
ficompl
std
mov
jge
daa
jle
jge
mov
testl
test
and
pop
adc
int
fildl
dec
and
lock
repz
stos
sbb
outsl
inc
fldcw
adc
stos
jp
lcall
mov
inc
or
xor
xchg
out
int
fs
int3
push
ja
mov
aam
sub
in
aad
out
ss
pop
movsb
in
xchg
int3
test
sub
sti
into
jmp
add
test
lahf
pop
sub
mov
xchg
invd
adc
lcall
pop
sub
inc
aaa
xchg
lahf
stos
nop
xchg
out
fwait
arpl
int3
cmp
outsb
mov
ljmp
cltd
in
xor
ljmp
xchg
jb
stos
les
xor
int
scas
mov
jmp
in
icebp
movsl
mov
int
clc
adc
test
xor
pop
mov
in
sub
incl
dec
fs
movsb
ret
or
sahf
mov
lret
nop
fcomip
adc
pop
outsl
mov
test
call
cmpsl
cmp
jg
and
pusha
mov
or
pop
aam
out
mov
ljmp
out
xchg
mov
pop
cmp
xor
cmp
add
xchg
icebp
dec
add
and
mov
fnsave
xor
mov
stos
push
int
aas
loop
lods
orb
out
push
push
dec
inc
xor
insl
jno
adc
mov
mov
out
stos
gs
ljmp
sub
adc
or
loope
fwait
outsl
ljmp
pop
shlb
or
lcall
pop
add
pop
cld
mov
mov
sbb
mov
push
call
daa
cmp
lret
jne
fists
dec
clc
or
shl
xor
mull
fstl
or
pop
xchg
clc
daa
popa
fdivrl
fistpll
push
mov
xchg
in
push
dec
data16
inc
ljmp
xchg
outsb
mov
mov
pop
jnp
xor
cli
pop
aaa
decb
lcall
dec
inc
mov
loopne
sbb
inc
shll
xorl
xlat
ss
jp
mov
mov
incl
mov
sbb
push
ds
jp
test
lods
or
decl
incl
mov
inc
mov
dec
cmp
out
jl
pop
cmp
cli
cmc
in
lea
jl
adc
mov
sbb
mov
loope,pt
pushl
fs
pop
mov
pop
mov
xchg
int
and
sbb
or
sar
and
add
xor
mov
mov
push
leave
lods
push
sti
das
loopne
mov
loope
gs
xchg
push
fdivs
fcos
jg
fs
push
mov
ds
stc
push
outsl
jae
leave
mov
mov
cmp
sbb
and
sbb
xor
jg
mov
or
add
pop
mov
mov
mov
sti
lret
cmp
mov
dec
or
dec
out
or
jge
cs
mov
jl
sub
jge
enter
pushl
sub
jge
shl
ss
and
and
ljmp
hlt
imul
out
dec
clc
lcall
sbb
gs
gs
data16
mov
ljmp
dec
push
popa
xchg
jbe
cwtl
sub
sahf
or
pop
jp
sbb
stos
xchg
mov
icebp
sbb
test
pop
test
dec
mov
xor
std
and
orb
inc
cmp
sahf
adc
out
ljmp
sbb
mov
cmp
pop
add
xchg
sti
sub
add
in
outsl
fbld
cli
push
jo
mov
push
arpl
std
fadds
ss
mov
jbe
mov
mov
pop
in
ja
pop
cmc
or
or
out
mov
stos
out
dec
cwtl
insl
pop
ficompl
ss
adc
ret
dec
adc
iret
js
outsl
cli
push
sbb
cld
call
xor
pop
cmp
rolb
decl
cs
add
sub
add
xlat
sbb
lret
adc
jo
int3
mov
jle
pop
sub
xor
xchg
xchg
js
mov
cmp
insb
cmp
ja
ljmp
cmpsb
or
jnp
imul
mov
dec
or
dec
insl
arpl
adc
cmp
mov
jl
in
inc
or
mov
push
pop
pop
ljmp
or
jecxz
sbb
shrb
lea
jg
fisttpl
adc
ljmp
call
fstl
mov
and
jg
lcall
push
cmp
and
mov
mov
fs
mov
fsts
imul
lcall
cmp
cmpsb
jnp
push
sbb
and
dec
mov
xchg
or
loopne
pop
fstpl
lods
nop
enter
jns
js
mov
dec
push
inc
out
stos
sub
shlb
fildl
test
mov
dec
xor
and
pop
dec
mov
leave
pop
lret
mov
dec
cmp
push
mov
lret
and
cli
mov
push
xchg
xor
mov
lods
jmp
pop
mov
cmpsl
ficoms
js
ret
add
jmp
lods
lret
push
or
lahf
pusha
bound
fldl
das
cmp
pop
push
jg
aad
and
adc
pop
stos
test
int3
je
aam
push
rcr
push
adc
lods
mov
cmp
sub
fwait
sbbb
ret
cmc
jge
bound
cli
mov
inc
arpl
xorb
jmp
jmp
fisubrl
jge
icebp
jnp
lcall
insb
daa
lods
jo
test
pop
in
scas
jg
lock
mov
and
push
or
jae
xor
ljmp
divl
clc
iret
mov
lcall
in
pushf
mov
pop
ud0
incl
ljmp
clc
mov
lret
xor
mov
andb
or
mov
push
les
xchg
enter
dec
cld
mov
cmpsl
addb
decl
scas
mov
data16
sbb
hlt
aam
in
out
mov
jno
jg
pushl
std
mov
sbb
xchg
bound
jne
cld
nop
xchg
mov
leave
inc
fs
call
data16
scas
imul
clc
or
push
xchg
ljmp
dec
jo
enter
xchg
push
mov
iret
daa
les
stos
pop
mov
inc
jae
pop
sarl
ret
sbb
sbb
mov
fidivrs
out
push
fcoml
jne
ljmp
add
cmp
test
jae
pop
cmpsl
mov
pop
xor
xchg
or
jmp
popa
jl
pop
jbe
mov
jns
mov
and
rclb
cmp
lock
mov
pop
or
ja
adc
inc
out
dec
cmp
lcall
cli
cmp
aam
call
data16
aad
scas
push
adc
arpl
pop
adc
inc
fsubrl
call
stos
cmp
scas
mov
enter
push
pop
pop
subb
push
int3
and
push
cld
ja
mov
outsb
pushl
mov
lds
or
stc
inc
jns
inc
cmp
test
neg
aas
filds
outsl
mov
pushl
call
mov
dec
out
mov
jo
cmp
mov
enter
call
mov
push
pmaxub
dec
sbb
pop
enter
lret
dec
ja
ljmp
lcall
imul
sbb
adc
test
ror
pop
or
cld
push
inc
repz
sub
mov
jmp
and
inc
xchg
ljmp
popa
xor
fidivs
out
mov
or
inc
mov
pop
xchg
jp
jne
inc
js,pt
lcall
inc
mov
mov
stc
inc
xchg
xchg
clc
pushl
repnz
data16
fmuls
pushf
mov
cmp
ljmp
dec
mov
jae
jg
add
hlt
addr16
ds
inc
in
pop
and
incl
mov
push
mov
fldl
icebp
jo
dec
and
pop
cmp
dec
rcll
adc
and
mov
cld
or
movsb
push
dec
xor
jb
lods
popa
out
loope
stos
lods
rcl
or
pushl
idivl
adc
sbb
outsl
ss
mov
sbb
aas
pop
push
out
push
mov
add
aad
xor
loope
xor
fwait
iret
pop
push
mov
shll
shll
lods
adc
int
mov
ds
fptan
cld
andl
rolb
mov
icebp
pop
push
f2xm1
or
mov
pop
adc
sbb
in
outsl
dec
shl
xchg
arpl
jmp
xchg
ds
push
aam
ffreep
pop
int
add
shlb
out
sti
shrb
lahf
loope
adc
scas
cli
push
mov
push
jnp
ret
les
inc
lods
push
int
out
add
mov
mov
dec
ds
cli
jecxz
into
sub
cmpsl
mov
decl
push
lods
lcall
push
xor
imul
mov
movsl
fwait
xchg
lock
and
ds
jp
or
mov
into
xor
sbb
out
insl
or
popf
sbb
add
pusha
mov
lea
call
lahf
pop
movsb
shll
stos
scas
loope
shrl
pop
inc
xorps
ljmp
scas
dec
jb
sbb
jp
sub
dec
cli
jl
addb
jmp
in
sbb
mov
push
mov
mov
mov
cld
aaa
lods
xchg
xchg
cmpsb
sbb
mov
cmp
std
arpl
repnz
add
ret
push
lret
inc
jae
xor
ljmp
rcrb
cltd
sub
ret
aam
inc
ljmp
idivl
pop
xchg
mov
inc
or
dec
sub
sarl
xchg
cld
mov
pop
lock
out
clc
pop
dec
fcoms
clc
xchg
and
add
cmpsl
test
test
lea
mov
mov
cmp
scas
rcrb
movsb
inc
inc
sub
xorl
test
nop
mov
fcomip
fbld
insl
aam
rcll
inc
pop
sbb
mov
mov
ljmp
shrl
sti
push
dec
lea
jbe
mov
sahf
pop
ljmp
xor
and
incl
dec
cli
fistps
aaa
xor
aas
xorl
frstor
adc
cmc
cmp
iret
fs
push
fwait
mov
shlb
mov
hlt
push
inc
push
les
daa
and
loopne
lea
int
lock
xchg
pushf
add
test
sahf
xor
loopne
or
add
cmc
adc
mov
mov
ret
and
or
lds
push
push
cmp
std
mov
int
outsl
fdiv
ljmp
push
lds
outsb
imul
jle
cmc
push
cmp
js
lea
push
or
rorb
pushaw
and
cmpl
cli
push
hlt
stc
repnz
inc
call
push
pop
insl
xchg
fbld
xchg
sar
fbld
gs
mov
mov
ljmp
clc
mov
fdivr
sbb
jg
insb
and
xor
and
pop
mov
pop
andl
cmc
push
xor
out
cli
sub
adc
dec
repnz
jbe
pop
xor
out
cli
sbb
or
dec
jg
pop
sbb
mov
add
popa
dec
mov
sub
lcall
sub
lret
scas
push
mov
mov
mov
inc
lds
ds
pop
adc
or
scas
lcall
or
test
and
or
xchg
fucom
repz
cld
ljmp
or
xchg
push
movsb
sarb
jb
inc
cli
test
jle
mov
ljmp
ficoml
shl
mov
fwait
sbb
xchg
cmpb
mov
dec
or
push
adc
inc
ret
pop
sbb
fdivrp
call
adc
sub
and
pop
cmp
push
pop
hlt
adc
jne
fsubrl
mov
stos
inc
idiv
inc
shl
pop
add
dec
mov
out
fldcw
cmp
pop
pop
jg
mov
cltd
incl
sbb
imul
mov
add
xorl
leave
ret
call
pop
es
push
repnz
pop
imul
lods
lods
cmp
xor
fs
test
xor
scas
cli
jmp
jo
ss
inc
xchg
scas
push
decb
xchg
addb
xor
jg
std
adc
push
push
jnp
cmpsb
in
pushf
cwtl
dec
iret
int3
sub
decl
mov
pushf
shlb
pop
push
divb
sti
xchg
jns
out
or
fwait
lcall
or
add
sub
sbbl
bound
adc
adc
decl
dec
mov
xchg
mov
jp
mov
mov
inc
repz
lock
jbe
jae
cs
pop
daa
cmp
aas
fsubrl
fwait
pushl
pop
test
stos
add
loopne
mov
ficoml
xor
pop
mov
call
in
and
add
lcall
cmp
faddl
mov
call
sub
cmp
sub
jmp
je
jl
sbb
xchg
movsl
mov
lds
setb
repz
jg
icebp
jno
hlt
inc
jae
sti
dec
mov
push
sbb
sahf
rolb
loop
push
lret
push
jbe
cmpsb
mov
incb
sub
pusha
mov
in
mov
or
push
mov
test
fdivr
es
cli
adc
jnp
xchg
xor
ljmp
addr16
jo
addr16
fimull
adc
cmp
lahf
add
aas
mov
or
add
lock
dec
popa
mov
jmp
daa
daa
ja
jg
test
pop
pop
push
inc
mov
jne
push
test
push
sub
add
mov
cs
inc
and
test
repz
push
movsl
int
jg
pushl
pop
sahf
lds
scas
je
xchg
mov
cwtl
jg
sarb
dec
call
xor
xchg
push
out
lock
jle
ljmp
fmuls
dec
fs
inc
xchg
gs
call
aam
sbb
std
jmp
fnsave
popf
cld
push
fcmovu
push
js
es
les
adc
repz
jmp
mov
cld
xchg
jnp
pushf
xchg
sbb
mov
xchg
fbld
out
leave
mov
in
fcoms
xchg
fldt
cli
sub
ja
mov
arpl
test
cltd
ds
mul
pop
clc
ss
xchg
xor
jmp
inc
popf
ret
adc
xchg
xchg
sub
jl
incb
jnp
gs
ja
scas
mov
mov
lcall
xor
idivb
icebp
mov
and
out
clc
movsb
loop
decb
ds
or
movsb
push
std
cmp
in
out
pushl
adc
xchg
pop
sub
mov
push
rclb
add
mov
sbb
dec
daa
inc
std
imul
or
ds
inc
sbb
cmp
popf
lds
ja
dec
mov
mov
movsl
les
mov
pushf
jg
sub
jne
loopne
cmp
ds
adc
mov
scas
gs
cmp
inc
jbe
push
push
mov
das
add
loopne
dec
aas
aaa
cmp
fimull
mov
ja
decl
pop
mov
mov
sbb
lret
push
jmp
aam
and
call
test
jae
inc
out
mov
mov
shll
push
xchg
push
into
test
xchg
lret
xlat
add
jp
iret
jae
sbb
cmp
movsl
add
fs
xchg
dec
xchg
negl
sub
jp
std
int
out
ljmp
or
mov
stos
notl
cs
sbb
incl
ja
mov
shr
adc
not
push
mov
mov
or
mov
pop
mov
arpl
mulb
aaa
mov
pop
cmpsl
repnz
fmul
lock
fwait
inc
daa
mov
or
and
mov
ret
je
in
push
int3
inc
repnz
pushf
out
mov
sbbb
enter
data16
push
stc
int
xchg
testb
dec
mov
decl
imul
int3
sbb
sbb
cwtl
jno
xlat
sahf
clc
sub
into
out
rclb
cmp
push
or
pop
jge
outsl
jb
cli
bound
repnz
ficomps
lcall
loop
ror
xor
xchg
or
loope
ljmp
inc
call
shll
mov
pushl
add
mov
push
mov
iret
dec
xor
push
lods
adc
enter
call
cltd
outsl
iret
and
xchg
sbb
or
mov
enter
sbb
popa
push
inc
test
incl
andb
xchg
icebp
mov
sub
mov
sbb
lock
push
jb
sub
mov
adc
adc
push
xchg
dec
sti
data16
ljmp
out
mov
cmp
aad
daa
ds
fsubrp
popf
inc
or
movsb
xchg
ja
ljmp
xchg
xor
fdivs
imul
cmp
out
in
dec
add
mov
adcb
cmpb
push
fcomps
lcall
sbb
sti
cmp
pop
loopne
popa
or
scas
push
xor
and
ljmp
sahf
shl
cli
inc
jno
add
arpl
pop
xchg
in
ljmp
popl
mov
cmpsb
les
add
roll
jg
lcall
inc
jbe
ljmp
mov
cmp
pop
jmp
sbb
outsl
cs
inc
dec
push
repz
add
mov
sbb
insb
mov
or
test
lock
jo
dec
cmpsl
adc
or
mov
inc
adc
sub
rcrb
jecxz
ljmp
test
jae
daa
fdivrp
ljmp
sbb
das
ret
or
aad
push
mov
push
cs
pop
fdivr
pushl
imul
dec
pusha
mov
scas
pop
xchg
out
clc
add
jmp
mov
mov
and
jl
in
lret
mov
inc
outsl
or
sbb
pop
ret
fwait
adc
cmp
dec
and
insl
shl
mov
aad
xlat
fildll
jmp
jnp
adc
lock
xchg
sub
scas
xorb
inc
std
incl
sbb
out
es
lods
jne
out
xchg
adc
sbb
or
xor
jns
in
lcall
loopne
stc
dec
cmp
add
sbb
sti
stos
jns
pop
inc
pop
sub
test
out
scas
and
sahf
je
ret
adcb
pushl
xchg
mov
xor
punpckhdq
jmp
ljmp
insl
pusha
xchg
xor
shlb
ret
xor
xchg
and
repnz
shrb
add
decl
mov
xor
mov
adc
out
inc
mov
and
ljmp
movsl
jmp
mov
jp
lock
push
xchg
jo
xchg
ljmp
nop
inc
ret
imul
call
mov
lret
sub
push
jns
mov
add
xchg
inc
stc
aad
push
push
cld
lea
fs
jmp
jmp
lock
shl
xor
push
xor
adc
cld
cmp
and
fmul
jg
fsubrs
ljmp
sbb
sub
rol
aam
daa
inc
aam
pop
push
or
scas
and
ret
xchg
lcall
xor
pop
movsl
cmp
mov
xor
xchg
pop
ret
cmpsb
jmp
jmp
pushl
xchg
cld
popa
push
xor
ds
push
ljmp
sub
add
insb
lods
scas
push
xor
sub
lcall
pushl
mov
cmpb
insl
push
cmpsb
incb
jle
dec
and
rorl
sbb
jg
fdivrs
jae
pusha
mov
iret
lods
push
test
inc
and
adc
jmp
fst
add
mov
xor
mov
fstpl
or
je
sub
fld
pop
into
push
sti
out
or
fisttpl
inc
lcall
jo
adc
les
cmc
clc
lcall
xor
sub
xchg
mov
adc
or
add
cld
test
xchg
jecxz
sti
fcomps
dec
sahf
sarb
das
insb
cli
mov
insl
pop
fnstsw
test
push
sahf
push
std
dec
inc
fbstp
into
test
decl
inc
sub
jl
inc
push
xor
jae
push
es
test
and
or
xchg
xor
sbb
call
test
xor
mov
scas
lret
mov
pop
je
jle
push
testl
mov
decl
dec
stc
outsb
imul
ds
push
loop
mov
cmpl
mov
into
repz
push
cs
aam
inc
xor
loop
jp
xor
pop
int3
and
jmp
mov
out
js,pt
leave
inc
cwtl
adc
addl
pop
js
into
inc
cmpb
cltd
fisubrl
outsl
xor
sti
gs
inc
mov
loopne
add
decl
push
in
nop
out
xor
test
xlat
iret
pushl
mov
mov
loopne
stos
xchg
stos
loope
xchg
cmp
in
outsb
mov
or
test
cld
cmp
jge
incb
dec
xchg
lock
decl
inc
push
repz
out
sbb
sub
lcall
rorb
add
mov
add
out
popf
fisttps
lahf
jnp
cli
cmp
jmp
fldenv
xchg
cwtl
pop
push
xor
xchg
int
ljmp
or
leave
cmp
adc
inc
insl
mov
xor
mov
rcrl
push
mov
inc
lock
push
mov
sete
mov
add
pop
enter
mov
lock
enter
dec
push
sbb
ja
scas
dec
inc
ljmp
jmp
sub
jl
adc
decl
push
xor
add
sub
push
dec
outsb
lock
in
inc
movsb
dec
add
call
mov
mov
inc
sbb
push
loop
jg
sbb
pop
adc
ds
lods
pop
std
decl
dec
subl
jle
shlb
insl
bound
dec
lea
ljmp
sub
dec
fldenv
hlt
out
sub
pop
sbb
xchg
pop
cld
test
cmp
or
jnp
xchg
pop
push
jmp
scas
lods
pop
or
cmp
dec
out
sbb
sub
arpl
scas
dec
dec
adc
pop
nop
sar
push
lret
xor
jae
into
push
fbld
inc
mov
lret
out
fistl
cmpsb
pop
adc
in
loop
out
cli
mov
sub
cld
dec
es
lcall
cmp
lods
sbb
decl
and
xchg
addb
dec
ja
sti
rorl
cmp
mov
sbb
mov
cli
hlt
mov
pop
dec
cs
repnz
pop
iret
mov
es
pop
cmc
fwait
lea
mov
int3
sbb
scas
sub
pop
mov
lds
mov
mov
xchg
mov
ja
fcos
push
enter
cmp
sti
les
js
pop
sbb
fdivrp
push
jmp
gs
cwtl
and
inc
xor
pop
pop
out
fistl
notb
xchg
mov
jo
add
xchg
xorl
xchg
pop
adc
mov
test
dec
shlb
aas
mov
je
arpl
popa
incl
sar
push
add
xor
sti
and
and
dec
daa
inc
fwait
lahf
fldt
sub
out
push
dec
std
add
fidivl
and
mov
and
adc
mov
shlb
pop
scas
cmpsl
sub
mov
pop
hlt
adc
out
inc
rcl
push
idivb
adc
lcall
sahf
decl
pop
cmp
adc
aad
notl
add
insl
inc
cwtl
pop
repnz
fnsave
lea
je
ret
ljmp
sub
roll
or
push
andl
hlt
jmp
cmp
jmp
outsb
sbb
imul
jbe
jae
decb
movsl
aas
insb
xchg
cmpb
cmp
pushf
in
inc
in
loope
scas
cmpb
lcall
inc
mov
insl
int
fnsave
dec
mov
movsb
out
in
int3
fbld
ljmp
cmc
mov
cmp
adc
add
out
jnp
sub
inc
pushf
mov
popa
addr16
mov
ds
xor
adc
cmpl
stc
mov
pop
insb
or
and
call
cmp
inc
push
test
xor
test
arpl
idiv
jmp
dec
jge
cmp
or
adc
push
mov
lea
cmpsl
xlat
scas
adc
mov
jmp
mov
mov
rol
popa
mov
hlt
dec
dec
jbe
rcrb
adc
lock
out
sub
xchg
repz
std
and
lods
xorb
rclb
mov
lret
dec
pop
pop
jno
clc
pop
lcall
cmpl
ljmp
pop
xlat
xor
decl
adc
out
shrb
into
jmp
jmp
sahf
popf
pop
jmp
test
out
lcall
xor
inc
loope
or
mov
orl
sar
jmp
addr16
sbb
cmpsb
inc
or
lea
sub
fcomps
sub
fbld
dec
sbb
pop
arpl
out
sbb
aam
mov
sahf
repz
pushf
lret
call
je
and
xor
cmp
adc
faddl
push
push
xor
popa
xor
add
adc
roll
add
pop
iret
mov
fsts
js
mov
inc
lret
sbb
push
iret
xchg
in
cmp
adc
incl
inc
and
pop
xchg
xor
inc
xlat
dec
fisttps
xchg
icebp
enter
out
or
inc
dec
mov
daa
pop
outsl
repnz
ss
int3
enter
je
jmp
xchg
lret
push
dec
xor
inc
test
sbb
fstl
cwtl
xor
push
and
enter
dec
cmp
fwait
inc
std
sub
movsb
inc
dec
mov
pop
jne
call
pop
aaa
roll
lret
fadd
mov
std
dec
sbbl
mov
xchg
icebp
scas
mov
cmpsb
leave
inc
out
pop
outsl
dec
dec
cmpb
idiv
mov
out
sub
pop
push
mov
and
aaa
ss
add
test
repnz
subb
mov
jo
xlat
fiadds
inc
mov
pop
clc
insb
jbe
cmp
testb
movsb
jmp
ret
ljmp
jl
inc
mov
cmp
or
push
inc
xor
pop
dec
test
sub
add
aad
lret
sub
add
insl
cmp
cld
xchg
cmpb
xor
jl
inc
sahf
stos
in
jmp
fsub
fs
xchg
bound
lock
sbb
dec
jbe
xchg
cmp
jge
xlat
sub
fwait
mov
mov
mov
es
and
jns
adcl
inc
sbb
pop
cmp
mov
mov
sbb
fs
cmp
lret
lret
outsl
cmp
scas
mov
sbb
xor
push
dec
push
mov
push
dec
out
aas
or
shlb
add
es
or
dec
idivl
inc
pop
xor
mov
nop
mov
pushl
lret
xor
ret
ljmp
subb
out
nop
mov
scas
test
test
pusha
mov
mov
in
pop
sbb
incl
stos
cmp
insl
mov
mov
xor
push
out
dec
sub
push
xchg
mov
sbb
out
sbb
decl
mov
testb
mov
pop
jge
leave
dec
add
jg
aam
jg
insb
ret
ret
mov
xchg
test
lahf
sti
aam
int
jo
mov
imul
and
ret
faddl
loop
push
push
xchg
and
in
inc
sub
pushl
pop
lret
add
adc
jo
xor
jg
push
mov
clc
lcall
or
lods
mov
xchg
clc
lods
fldt
xor
lds
outsb
jne
filds
inc
call
push
loop
dec
sub
push
push
incl
jae
pushf
dec
fistl
cltd
test
ja
hlt
in
cwtl
mov
cmp
mov
cmp
inc
repnz
xchg
push
cltd
cmc
xor
and
sub
decl
mov
sub
test
adc
or
jno
jp,pt
loope
clc
incl
dec
xor
sti
inc
adc
adc
bts
fbld
push
sub
sbb
push
sbb
push
lods
pop
mov
mov
aam
or
int3
pop
xor
lcall
add
xchg
es
nop
test
mov
popa
adcb
test
and
pop
imul
rorb
adc
mov
lcall
dec
adc
frstor
out
jg
cwtl
jb
pushf
push
mov
hlt
das
xor
pushl
cmp
xchg
or
sbb
adc
dec
lock
shlb
adc
out
cmp
ss
data16
outsb
mov
mov
cs
out
dec
dec
inc
push
lret
jns
clc
mov
hlt
push
xchg
cmp
xchg
lock
fisttpll
jo
icebp
ror
out
lcall
push
dec
loope
incb
jmp
or
cmpsb
mov
mov
push
mov
scas
mov
mov
ret
aam
add
aaa
insb
cmc
mov
enter
fcoms
fsubrs
pushl
sub
mov
xor
jle
xor
dec
mov
std
inc
sbb
sub
rcl
xchg
icebp
inc
cmp
and
dec
jo
jmp
xchg
dec
xchg
fdivl
shlb
lcall
push
cmpsl
xchg
mov
stos
xor
fidivl
out
jg
sbb
das
scas
cld
jo
jecxz
push
add
cli
sub
inc
insl
inc
mov
inc
ljmp
fldt
outsb
jae
std
inc
xor
and
enter
sub
or
pop
es
sbb
movsb
add
pop
nop
xchg
jle
loop
mov
mov
inc
push
inc
mov
fcomip
cmp
ds
mov
cwtl
inc
nop
or
cltd
call
dec
and
aaa
std
cmp
mov
xchg
out
lods
outsl
pusha
sub
les
enter
inc
loope
push
addr16
or
call
hlt
push
lods
clc
std
pop
pop
sbb
push
lcall
pop
fsubr
leave
in
pop
std
call
std
sub
jno
cmc
push
sub
jne
xchg
adc
stc
mov
pushl
jne
loop
xor
fcompl
in
pushf
loop
fdivrl
xlat
mov
jns
mov
clc
ljmp
popa
push
ret
daa
dec
dec
mov
fcomip
imul
dec
cmpsb
pushf
repz
aad
jnp
addr16
ret
call
data16
cmp
movsl
sub
dec
fildl
call
mov
std
out
add
push
sbb
jecxz
loope
sub
lcall
cltd
dec
mov
xchg
imul
decl
stos
cwtl
and
xchg
jb
fildl
push
xchg
jae
pop
shll
ds
mov
call
inc
in
pop
cmp
sbb
ljmp
or
call
xchg
mov
inc
fmuls
int
shrl
mov
movsl
mov
lcall
and
aam
mov
mov
lret
mov
xchg
fbstp
mov
dec
xor
jecxz
push
jecxz
pop
mov
sbb
pushl
ret
je
dec
inc
shll
push
xor
mov
cmp
pop
movsb
int
jge
push
jg
and
jb
xchg
rclb
add
jecxz
cwtl
sbb
fcomip
xlat
aad
jmp
ds
mov
pop
orl
dec
push
push
jae
lahf
cli
int
cltd
mov
in
cmp
xchg
or
icebp
popa
push
std
or
inc
loop
mov
pop
std
test
fdivr
add
inc
inc
xchg
and
inc
fld
aaa
push
add
cmp
add
jbe
xchg
sbb
test
js
dec
bound
xchg
iret
add
dec
gs
jo
and
push
popl
daa
dec
loop
loope
lret
div
decl
inc
gs
jae
jb
gs
mov
daa
adc
adc
push
push
push
xchg
mov
insb
divl
dec
inc
je
pop
and
xor
add
adc
fcomi
imul
push
mov
jae
dec
adc
dec
xchg
js
inc
in
in
fwait
and
mov
int3
aam
mov
jb
inc
push
or
and
add
add
inc
movsl
and
mov
test
add
imul
mov
or
fisttpl
adc
jg
mov
inc
stos
mov
mov
mov
push
and
push
add
adc
and
dec
arpl
or
add
jmp
and
inc
xchg
mov
add
das
mov
push
pop
popa
push
dec
or
lret
jmp
cmp
daa
pop
and
and
orb
loop
aas
stos
adc
inc
sbb
push
push
pop
outsl
es
sbb
cmpsl
or
xchg
add
test
inc
adc
fbstp
mov
add
outsl
lret
mov
mov
or
sub
and
or
push
fwait
mov
and
add
ljmp
je
xchg
add
dec
inc
lret
adc
outsl
outsb
imul
push
cmp
je
xchg
in
imul
push
jb
and
imul
sbb
and
or
test
movsb
fiaddl
and
orl
mov
movsl
xchg
jno
add
inc
xchg
or
push
or
mov
cmc
bound
xor
push
push
stos
push
mov
dec
add
add
movl
jns
mov
mov
stc
jae
test
test
inc
jb
testl
dec
imul
cmpsb
add
add
mov
test
mov
and
inc
and
pop
inc
or
test
int
inc
rcll
pop
mov
adc
lea
stos
call
nop
add
jae
and
movsl
push
xor
sub
nop
pop
orb
mov
sub
dec
dec
loopne
das
add
push
dec
add
add
jp
or
cmp
popl
mov
add
sbb
daa
incb
or
inc
inc
pop
add
mov
mov
nop/reserved
add
jbe
imul
add
or
ds
nop
outsb
sub
xor
test
in
dec
mov
push
js
mov
xor
mov
add
cmpsl
dec
rorb
add
mov
push
mov
lods
popa
mov
shlb
jge
sub
addb
cmp
into
jo
fisubrl
dec
jb
inc
inc
add
lcall
gs
sbb
lock
add
push
sub
dec
loop
loopne
jae
dec
clc
testl
aaa
add
mov
add
and
add
add
add
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
push
add
add
add
addb
add
add
add
add
add
add
add
add
add
dec
add
addb
add
jo
add
cwtl
add
addb
add
rolb
addb
add
add
add
add
add
add
add
add
add
pusha
add
add
adc
add
add
add
add
add
add
add
add
add
add
mov
add
add
aas
add
add
add
add
add
add
add
add
add
add
mov
add
sbb
aas
add
add
add
add
add
add
add
add
add
add
fadds
add
xor
aas
add
add
add
add
add
call
pop
cmp
pop
mov
cltd
ss
pop
push
in
xchg
push
inc
cld
nop
ds
pop
cmp
pop
mov
cltd
ss
pop
push
in
xchg
push
inc
adc
cmp
pop
mov
cltd
ss
pop
push
in
xchg
push
inc
and
ds
sub
cmp
into
jle
pushf
pop
out
push
xlat
or
cmpsl
ljmp
sub
xchg
cltd
mov
sahf
out
or
sub
or
dec
or
or
mov
cmp
lcall
and
jnp
imul
test
or
push
std
dec
rorl
into
in
sub
push
push
rorb
gs
sbb
insl
pop
adc
les
fstpl
xor
add
lods
insl
xor
xchg
or
std
fwait
out
loop
es
popa
js
jecxz
cmp
mov
in
mov
xchg
icebp
sbb
push
insl
xchg
jnp
scas
mov
mov
sahf
sahf
sbb
repz
dec
sub
mov
add
mov
jle
cmpl
nop
mov
jmp
imul
lods
aas
jl
cltd
inc
mov
and
in
or
pop
and
mov
mov
jle
shr
pop
jb
and
pushf
mov
sbb
loope
mov
rol
repz
xchg
lods
push
leave
and
subl
sub
loopne
cmp
sar
pusha
sbb
cltd
dec
lret
adc
nop
lcall
addr16
sub
ret
xor
pop
xchg
ret
push
icebp
inc
nop
mov
cli
std
ljmp
jmp
mov
mov
push
int3
add
push
leave
push
movsl
cltd
mov
add
cmpsl
xorl
iret
sub
dec
ss
cmp
cmp
lock
jl
mov
xor
add
lahf
test
mov
mov
into
test
adc
cmpsb
jl
jnp
push
in
push
mov
popf
aam
xor
dec
ret
divb
sub
pop
lods
mov
aam
dec
fcompl
pop
cmp
push
xchg
scas
in
lea
lcall
push
jo
push
insl
popl
xchg
pop
mov
inc
loopne
xchg
push
enter
stc
pop
inc
js
sbb
add
xchg
push
setnp
lods
jp
inc
hlt
ljmp
aas
icebp
movsb
push
fwait
inc
pop
sub
xor
in
fs
cmp
aas
jp
leave
mov
insl
clc
inc
arpl
iret
jns
xchg
ss
sbb
test
or
loope
adcl
adc
stos
cwtl
push
jae
ljmp
repz
push
test
in
mov
fimuls
or
imul
and
in
jge
cmp
rorb
insb
cmc
dec
out
push
jl
cltd
xchg
in
out
int
jb
or
adc
add
dec
loope
mov
inc
and
bound
ljmp
inc
test
xchg
dec
pop
daa
mov
lods
push
cld
fs
fcmovu
std
aad
jg
cmp
lods
jno
ffreep
mov
mov
lds
imul
decb
pop
jbe
lcall
adc
cwtl
int3
testl
imul
cmpsb
ljmp
sbbb
jns
jecxz
mov
arpl
xchg
push
dec
adc
xor
sbb
dec
imul
add
andb
repz
pop
in
mov
lahf
ret
xchg
int3
mov
hlt
mov
cmpsb
enter
jb
jecxz,pn
call
sbb
cmp
add
dec
pop
out
ffree
jge
adc
mov
enter
mov
push
dec
and
add
add
shl
shl
jbe
jae
movsl
cmp
in
clc
mov
popf
repnz
cmpl
push
iret
mov
push
xchg
fmuls
mov
add
aam
push
sbb
xor
jns
cmpsb
adc
mov
inc
sahf
cld
stos
sahf
daa
jne
rorl
mov
daa
into
aam
add
jno
mov
xchg
pop
int3
lock
fs
cmc
xchg
fld
fs
mov
in
lahf
cmp
push
cmp
sar
push
sbb
mov
adc
divb
jle
sub
add
cld
loope
mull
push
movl
sub
fdivrs
xlat
xchg
std
stos
xor
cmp
repz
add
scas
xor
mov
adc
xchg
or
adc
aad
jne
adc
cmc
cmp
lret
jle
mov
aas
add
add
add
push
aas
add
add
enter
lods
push
aas
add
push
aas
add
push
aas
add
push
aas
add
push
aas
add
aas
add
pop
aas
add
add
add
pop
aas
add
add
add
pop
aas
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
gs
xor
ja
outsb
push
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
gs
imul
imul
jb
arpl
jb
