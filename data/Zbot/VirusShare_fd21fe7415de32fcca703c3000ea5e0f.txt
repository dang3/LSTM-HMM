mov
add
lcall
add
add
add
pop
add
out
add
repz
add
prefetchnta
add
sbb
add
sbb
add
add
inc
sbb
add
add
pop
sbb
add
add
lea
add
popf
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
sbb
add
sbb
add
add
pop
sbb
add
add
sbb
add
sbb
add
add
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
add
add
push
add
add
add
xchg
add
pushf
sbb
add
add
int
add
fistps
add
lock
add
sbb
add
sbb
add
sbb
add
sbb
add
add
inc
add
cmp
add
dec
inc
inc
xor
inc
cmp
add
add
dec
add
add
add
cmp
xor
dec
add
inc
add
cmp
inc
aaa
aaa
inc
add
xor
dec
add
add
add
xor
add
inc
add
add
dec
inc
add
inc
add
inc
inc
add
inc
dec
add
xor
sub
push
pop
or
imull
mov
add
add
add
incl
sub
lea
sub
lea
sub
call
or
lea
mov
add
mov
push
lea
push
push
mov
push
mov
push
mov
push
mov
push
lea
push
push
push
push
push
push
mov
push
push
call
xchg
ret
push
pop
lea
mov
sub
add
pushl
sub
xor
and
mov
pushl
imull
lea
push
call
mov
pushl
mov
lea
push
lea
test
jne
mov
add
mov
and
mov
add
sub
call
imull
lea
push
call
push
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
add
cmp
dec
add
add
inc
aaa
add
cmp
add
add
cmp
cmp
dec
add
dec
add
pushf
jbe
rorb
ljmp
cmp
push
pop
mov
mov
add
mov
push
call
jg
lea
add
mov
mov
test
jb
jne
push
pop
add
xor
sub
mov
inc
lea
imull
jbe
xor
not
xor
jg
mov
xor
push
call
mov
ret
mov
mov
incl
lea
mov
not
xor
add
movl
pop
mov
add
add
mov
add
ror
sub
xor
mov
sar
and
mov
lea
shr
add
xor
sub
je
mov
mov
sub
call
mov
leave
ret
add
mov
lea
jg
mov
mov
xor
jbe
and
mov
add
lods
lea
mov
sar
mov
mov
mov
and
or
add
add
and
neg
jg
add
inc
mov
shl
and
sub
add
or
cmp
jne
add
xchg
and
mov
sub
mov
mov
mov
mov
and
lea
add
mov
jg
lea
sub
jne
sbb
xor
and
push
jae
xor
mov
jg
or
mov
push
addl
jae
or
inc
lea
push
add
push
or
or
push
add
incl
lea
add
mov
mov
sbb
mov
call
or
jbe
mov
sub
lea
xor
sub
or
mov
mov
mov
lea
xor
not
inc
mov
jg
add
jg
sbb
mov
lea
mov
push
pop
add
add
jg
sub
add
mov
sub
jne
jg
or
mov
mov
in
sbb
pop
mov
leave
mov
stc
sub
mov
cmp
outsl
movsl
cmc
adc
in
add
outsb
push
xchg
pop
loope
add
sbb
aas
nop
loope
adc
into
insb
inc
or
outsl
push
xchg
pop
cmc
push
sbb
in
sbb
cmc
in
nop
imul
push
mov
sbb
fstps
daa
inc
mov
sbb
lcall
sbb
fisubrs
test
mov
out
sbb
mov
jmp
rcr
mov
inc
jae
fstps
sbb
mov
rcr
push
imul
aad
dec
dec
cmp
inc
inc
dec
inc
inc
aaa
cmp
cmp
add
add
inc
add
dec
inc
xor
cmp
add
add
dec
dec
aas
add
add
add
inc
add
inc
xor
inc
add
inc
xor
add
add
dec
xor
add
add
cmp
inc
add
xor
cmp
add
dec
cmp
add
add
add
cmp
add
inc
inc
dec
xor
xor
add
dec
add
add
cmp
add
dec
xor
xor
ss
inc
add
add
add
add
add
inc
add
add
cmp
add
add
add
add
mov
add
mov
adc
add
pop
add
pop
sbb
add
pop
add
jl
add
lods
adc
add
add
sbb
add
add
push
sbb
add
adc
add
pop
add
test
add
add
pop
add
out
add
repz
add
prefetchnta
add
sbb
add
sbb
add
add
inc
sbb
add
add
pop
sbb
add
add
lea
add
popf
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
sbb
add
sbb
add
add
pop
sbb
add
add
sbb
add
sbb
add
add
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
add
add
push
add
add
add
xchg
add
pushf
sbb
add
add
int
add
fistps
add
lock
add
sbb
add
sbb
add
sbb
add
sbb
add
add
add
add
add
outsb
outsl
ja
jb
insl
push
outsl
imul
gs
jns
gs
popa
add
add
outsb
dec
arpl
add
gs
xor
fs
insb
add
add
je
push
dec
outsl
arpl
add
add
fs
push
dec
jne
je
inc
jns
add
add
imul
add
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
add
outsb
fs
imul
gs
add
add
jb
outsb
inc
add
add
je
outsl
arpl
gs
outsb
outsw
inc
add
add
gs
js
add
inc
imul
add
add
imul
add
add
outsb
inc
imul
outsb
addr16
add
add
push
gs
js
gs
imul
gs
add
inc
gs
jb
jbe
push
jns
gs
add
add
je
jb
imul
inc
add
add
insb
imul
popa
insb
add
add
je
jne
jb
outsb
je
imul
jns
add
add
jb
jne
insb
push
jne
jb
add
add
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
jne
jb
outsb
je
imul
jns
add
add
insl
popa
jo
imul
insb
add
add
je
je
jb
jne
dec
outsb
outsw
inc
add
add
jbe
inc
jb
je
arpl
push
arpl
outsb
add
add
gs
imul
add
inc
gs
je
dec
popa
outsb
fs
add
add
je
jb
jb
je
arpl
push
arpl
outsb
add
add
je
outsl
fs
gs
imul
add
add
insb
jae
inc
jbe
outsb
je
add
push
imul
jb
add
add
jb
insl
jo
add
jb
gs
xor
cs
insb
add
add
je
je
imul
inc
js
add
add
je
imul
popa
je
add
add
gs
add
inc
gs
jns
je
insl
inc
imul
jns
add
add
insb
insb
dec
popa
insl
gs
imul
inc
gs
jns
je
insl
push
imul
jae
insl
outsb
je
add
inc
outsb
jne
push
gs
jne
arpl
jns
gs
add
add
imul
gs
imul
outsb
gs
xor
cs
insb
add
add
jb
popa
insb
imul
arpl
imul
insb
add
add
jae
gs
insb
insb
outsl
arpl
jb
outsb
addr16
outsb
add
add
jae
jb
gs
je
imul
jns
inc
insb
insb
outsl
arpl
jb
outsb
addr16
outsb
add
gs
jne
xor
cs
insb
add
add
addr16
jb
popa
je
dec
gs
js
add
add
addr16
gs
popa
insb
jne
inc
js
add
add
addr16
jne
jb
dec
outsb
outsw
dec
gs
add
add
addr16
jo
outsb
dec
gs
js
add
add
addr16
gs
gs
dec
gs
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
add
addr16
insb
outsl
jae
dec
gs
add
push
gs
outsb
jne
dec
gs
js
add
jbe
jo
xor
cs
insb
cmp
dec
add
dec
add
cmp
xor
xor
dec
cmp
add
add
add
inc
dec
add
dec
cmp
dec
dec
ds
inc
inc
dec
xor
dec
cmp
add
dec
dec
dec
add
dec
cmp
dec
inc
inc
xor
add
xor
dec
add
dec
add
dec
add
ds
add
inc
add
inc
add
add
dec
add
ds
add
inc
dec
cmp
dec
dec
add
dec
inc
dec
dec
dec
inc
inc
dec
cmp
add
add
dec
cmp
add
add
add
dec
add
inc
add
add
xor
cmp
inc
dec
add
cmp
xor
inc
xor
inc
add
inc
cmp
add
add
cmp
xor
xor
cmp
inc
dec
add
xor
ds
dec
aas
cmp
inc
add
add
add
add
add
cmp
add
add
add
inc
inc
add
add
inc
inc
inc
dec
xor
cmp
add
dec
dec
cmp
add
add
cmp
add
inc
add
cmp
xor
cmp
inc
cmp
dec
inc
xor
add
inc
inc
add
inc
add
dec
inc
add
add
add
dec
cmp
add
xor
cmp
add
aas
add
xor
dec
add
aaa
add
dec
add
xor
add
add
xor
xor
xor
add
aas
cmp
cmp
add
add
dec
cmp
add
add
add
xor
dec
add
add
xor
aaa
xor
inc
dec
dec
dec
dec
add
add
add
add
inc
inc
add
inc
dec
add
add
inc
dec
cmp
add
dec
dec
dec
add
inc
add
inc
xor
add
add
dec
add
add
inc
dec
inc
add
cmp
add
inc
xor
xor
add
aaa
inc
dec
add
add
dec
inc
inc
cmp
add
cmp
dec
xor
dec
add
add
cmp
dec
dec
add
aaa
inc
dec
inc
inc
add
cmp
xor
add
add
add
inc
inc
xor
aas
xor
add
inc
cmp
add
cmp
inc
dec
inc
add
cmp
add
add
dec
inc
dec
add
xor
dec
dec
dec
dec
add
dec
add
inc
inc
add
dec
inc
cmp
add
xor
dec
inc
cmp
add
dec
dec
dec
add
dec
dec
add
inc
xor
cmp
dec
add
add
add
add
cmp
add
inc
inc
xor
xor
add
add
add
add
add
add
cmp
ss
dec
inc
dec
add
cmp
add
add
add
cmp
add
ds
add
inc
add
cmp
cmp
add
add
dec
xor
add
ss
inc
xor
add
add
dec
add
add
add
add
inc
inc
dec
add
inc
xor
inc
add
xor
add
add
add
add
xor
add
add
inc
cmp
inc
dec
inc
xor
dec
dec
inc
add
xor
dec
dec
add
add
cmp
add
xor
inc
inc
add
dec
cmp
xor
ss
inc
add
xor
inc
cmp
add
dec
xor
inc
add
cmp
ss
add
xor
cmp
add
dec
xor
cmp
add
cmp
add
xor
add
inc
add
ds
inc
add
dec
cmp
add
add
add
inc
cmp
cmp
dec
add
add
cmp
xor
dec
inc
xor
xor
add
add
add
add
add
add
add
add
inc
inc
xor
add
inc
ss
aas
inc
aaa
xor
add
dec
inc
dec
dec
add
inc
add
xor
xor
cmp
add
add
xor
inc
dec
add
cmp
dec
aas
xor
dec
add
cmp
dec
inc
inc
dec
cmp
add
inc
cmp
inc
cmp
add
add
inc
inc
cmp
xor
cmp
inc
inc
xor
add
cmp
aas
dec
ss
add
cmp
inc
add
cmp
dec
add
xor
cmp
dec
xor
xor
dec
add
add
xor
add
add
xor
add
inc
cmp
add
cmp
xor
cmp
inc
dec
inc
add
xor
inc
add
add
add
dec
add
xor
add
xor
add
add
aas
inc
dec
aaa
dec
inc
add
add
cmp
xor
dec
dec
aas
add
aas
add
cmp
xor
add
xor
inc
dec
xor
dec
cmp
cmp
dec
cmp
dec
cmp
aas
dec
xor
add
add
add
inc
inc
add
inc
xor
add
xor
add
xor
xor
cmp
cmp
aaa
cmp
dec
inc
add
add
add
dec
ds
cmp
add
add
xor
inc
dec
inc
dec
dec
add
add
xor
xor
inc
add
add
cmp
xor
dec
inc
dec
xor
dec
xor
aaa
xor
add
add
inc
add
inc
dec
add
dec
add
add
add
inc
add
add
aas
inc
inc
add
ds
xor
xor
add
add
aas
xor
add
xor
dec
add
add
dec
inc
add
inc
add
aas
dec
xor
inc
cmp
cmp
dec
inc
add
inc
add
dec
xor
inc
inc
add
inc
inc
dec
cmp
add
xor
add
add
dec
cmp
dec
inc
xor
add
add
dec
add
dec
add
ss
cmp
add
xor
add
xor
xor
aaa
add
add
dec
dec
dec
dec
inc
add
cmp
add
dec
aaa
cmp
add
dec
inc
add
inc
add
add
dec
add
xor
add
aas
add
ss
cmp
inc
dec
xor
xor
xor
add
add
inc
inc
inc
dec
cmp
xor
add
add
aaa
aas
inc
add
inc
cmp
dec
add
add
add
aaa
add
xor
inc
xor
cmp
inc
xor
inc
inc
dec
add
add
aaa
add
xor
inc
add
ss
add
dec
aaa
dec
dec
dec
add
add
add
add
add
xor
add
xor
aas
add
inc
add
add
add
dec
aas
xor
add
add
cmp
dec
xor
dec
add
inc
dec
cmp
add
add
dec
cmp
inc
dec
add
xor
add
inc
inc
ss
inc
xor
add
dec
aaa
cmp
cmp
add
inc
add
add
aas
cmp
add
dec
dec
add
xor
add
add
aas
dec
inc
inc
inc
add
inc
xor
add
inc
cmp
dec
cmp
aas
add
xor
cmp
cmp
add
add
inc
dec
add
add
xor
cmp
dec
xor
cmp
inc
ds
cmp
add
add
cmp
dec
inc
add
dec
dec
add
dec
dec
add
add
dec
add
inc
add
add
add
dec
dec
add
cmp
cmp
xor
add
inc
inc
dec
add
dec
aaa
inc
cmp
add
xor
add
dec
add
add
inc
add
add
add
cmp
dec
inc
cmp
xor
cmp
add
dec
dec
dec
add
dec
dec
xor
add
xor
add
add
add
add
add
add
add
aaa
add
inc
xor
xor
add
add
add
dec
inc
inc
dec
xor
xor
add
dec
add
dec
aaa
dec
dec
dec
xor
inc
xor
add
ds
inc
dec
xor
inc
xor
aas
inc
xor
xor
cmp
add
add
cmp
add
inc
add
xor
add
dec
add
cmp
dec
inc
add
xor
dec
inc
cmp
add
dec
inc
dec
add
add
aaa
inc
add
add
dec
cmp
cmp
aas
add
add
ss
xor
add
cmp
cmp
add
add
add
xor
add
add
cmp
dec
add
cmp
cmp
add
xor
aas
add
cmp
cmp
add
add
aaa
add
aas
add
add
cmp
cmp
cmp
add
add
inc
xor
cmp
aas
dec
inc
cmp
add
inc
xor
dec
inc
inc
aaa
add
dec
cmp
add
add
xor
add
cmp
cmp
add
dec
add
inc
inc
aaa
dec
add
add
add
add
inc
add
xor
add
inc
dec
add
inc
xor
add
xor
aaa
dec
add
add
xor
cmp
add
add
inc
dec
cmp
dec
add
inc
dec
inc
dec
cmp
inc
add
add
xor
dec
add
inc
inc
inc
add
dec
inc
aaa
cmp
add
inc
xor
add
dec
add
xor
xor
dec
add
dec
add
add
add
add
dec
add
add
xor
add
cmp
inc
dec
xor
add
add
xor
add
ds
aaa
aaa
inc
dec
add
inc
aas
inc
xor
add
add
dec
add
cmp
cmp
dec
dec
add
dec
dec
cmp
add
xor
add
xor
add
aaa
dec
cmp
inc
add
add
inc
inc
add
dec
dec
add
add
dec
add
inc
add
add
add
cmp
add
dec
add
inc
inc
inc
xor
dec
add
dec
inc
ss
add
cmp
inc
xor
xor
inc
xor
add
inc
inc
cmp
cmp
inc
add
add
ds
aas
xor
add
inc
cmp
add
add
inc
xor
dec
add
add
add
add
cmp
inc
add
xor
cmp
dec
ds
xor
dec
aaa
add
cmp
add
add
aaa
cmp
inc
inc
dec
dec
add
inc
ds
add
cmp
dec
xor
xor
add
add
inc
add
dec
add
xor
xor
xor
inc
ds
cmp
cmp
inc
dec
dec
inc
inc
add
dec
cmp
xor
xor
inc
cmp
dec
dec
add
aas
add
dec
add
dec
xor
xor
add
xor
xor
add
xor
inc
dec
xor
xor
cmp
cmp
add
cmp
xor
cmp
cmp
xor
aas
cmp
add
add
xor
cmp
aas
inc
add
dec
dec
add
add
cmp
inc
ds
cmp
inc
dec
dec
cmp
cmp
xor
aaa
add
dec
dec
xor
cmp
cmp
xor
inc
add
inc
cmp
add
add
add
xor
dec
add
aaa
inc
cmp
cmp
inc
inc
add
cmp
dec
dec
cmp
dec
add
cmp
inc
dec
add
add
inc
add
inc
add
cmp
inc
xor
dec
xor
add
dec
inc
dec
cmp
inc
cmp
inc
add
cmp
cmp
inc
dec
inc
add
xor
add
cmp
inc
cmp
cmp
aaa
inc
dec
inc
inc
dec
add
inc
xor
add
inc
ss
ds
add
inc
dec
cmp
xor
cmp
cmp
add
dec
cmp
cmp
add
dec
add
add
xor
dec
inc
add
xor
add
inc
inc
cmp
inc
inc
inc
inc
inc
add
add
add
dec
inc
add
aaa
xor
inc
add
dec
cmp
add
dec
cmp
dec
cmp
inc
inc
cmp
dec
xor
inc
inc
add
inc
cmp
add
cmp
inc
add
inc
inc
dec
dec
cmp
cmp
add
dec
add
cmp
add
cmp
inc
add
xor
add
inc
add
add
add
dec
dec
inc
inc
dec
xor
dec
xor
cmp
xor
cmp
inc
add
dec
ds
inc
add
cmp
xor
inc
xor
add
cmp
inc
add
xor
dec
add
dec
add
aaa
inc
xor
add
inc
xor
inc
aaa
inc
inc
add
inc
add
dec
add
inc
dec
cmp
xor
inc
inc
xor
cmp
inc
cmp
cmp
inc
add
xor
add
ds
dec
dec
cmp
add
add
add
add
xor
xor
cmp
dec
add
aaa
inc
add
add
cmp
add
inc
dec
ds
ds
xor
inc
add
cmp
aaa
xor
add
inc
add
cmp
add
dec
add
aas
add
inc
inc
dec
inc
inc
add
add
dec
dec
xor
inc
add
add
cmp
add
cmp
inc
add
aas
cmp
aas
cmp
add
dec
add
dec
dec
cmp
add
xor
inc
dec
inc
dec
inc
aas
dec
dec
cmp
aaa
xor
dec
cmp
xor
add
xor
inc
add
aas
xor
dec
dec
inc
dec
add
add
xor
add
dec
xor
cmp
add
add
add
inc
dec
add
add
inc
dec
add
cmp
xor
inc
aas
aaa
inc
xor
inc
xor
cmp
dec
add
add
add
add
add
inc
inc
xor
add
add
cmp
xor
xor
inc
cmp
xor
dec
add
add
add
dec
add
add
inc
cmp
add
cmp
add
xor
inc
aas
xor
add
add
xor
dec
add
add
cmp
add
aas
add
add
inc
cmp
inc
add
add
aaa
aas
dec
inc
aas
add
dec
aas
cmp
inc
add
inc
xor
xor
add
xor
dec
add
dec
inc
xor
ds
add
cmp
add
dec
inc
add
add
inc
dec
dec
xor
cmp
cmp
add
inc
add
xor
add
dec
dec
add
aaa
aas
add
cmp
inc
dec
add
dec
add
inc
dec
add
add
inc
add
inc
cmp
cmp
ds
inc
cmp
inc
add
ds
inc
add
inc
xor
xor
dec
add
add
add
inc
add
add
add
add
inc
ss
dec
xor
xor
aas
add
add
inc
dec
add
add
cmp
add
add
aas
xor
cmp
add
inc
dec
cmp
xor
add
add
add
dec
add
aaa
xor
add
dec
add
add
cmp
cmp
cmp
xor
dec
inc
add
cmp
inc
add
cmp
cmp
add
add
xor
aas
dec
dec
ds
xor
add
inc
add
dec
add
add
inc
cmp
aaa
add
dec
add
inc
inc
dec
add
cmp
inc
add
xor
ds
xor
ds
xor
add
inc
dec
add
cmp
xor
add
add
cmp
dec
add
inc
add
xor
add
cmp
add
dec
inc
add
inc
inc
add
add
add
add
add
aaa
dec
aaa
xor
inc
add
dec
aaa
cmp
xor
add
add
cmp
dec
add
dec
cmp
cmp
xor
add
dec
cmp
add
dec
add
inc
xor
cmp
xor
xor
inc
inc
dec
dec
dec
inc
dec
dec
dec
dec
xor
aaa
add
inc
cmp
dec
add
add
dec
add
add
add
inc
add
dec
xor
add
add
inc
dec
add
inc
inc
add
inc
inc
inc
inc
add
dec
add
add
add
cmp
add
add
add
dec
inc
add
xor
inc
add
dec
add
add
inc
dec
inc
inc
inc
ss
aas
aas
dec
add
dec
dec
add
xor
add
add
add
add
dec
xor
inc
add
aas
add
dec
inc
cmp
add
add
xor
dec
cmp
dec
cmp
xor
add
ss
.byte
.byte
xor
xor
xor
add
xor
xor
add
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
add
xor
xor
add
add
xor
add
xor
xor
xor
xor
xor
add
xor
xor
add
xor
xor
xor
xor
xor
xor
xor
xor
add
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
add
xor
xor
add
xor
xor
xor
xor
xor
xor
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
add
xor
add
xor
add
xor
xor
xor
xor
xor
xor
add
add
xor
xor
add
xor
add
add
xor
xor
xor
xor
xor
xor
xor
xor
add
add
xor
xor
xor
xor
xor
xor
add
xor
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
add
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
add
xor
xor
add
xor
xor
xor
xor
xor
add
xor
xor
add
add
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
std
jae
jbe
jbe
ss
push
ss
mov
std
jae
jbe
jbe
ss
push
push
std
ss
std
mov
and
mov
mov
add
pop
mov
je
pop
test
pushl
shrb
sub
sti
or
mov
je
mov
mov
xchg
jne
mov
cmc
mov
test
mov
sub
mov
std
scas
inc
mov
xor
inc
sbbb
jbe
xor
xor
jb
repnz
cltd
std
xor
sbbl
push
jb
sbb
pushl
push
jb
mov
iret
jb
jbe
sahf
jns
orb
xor
cld
bound
mov
jb
je
push
jne
jb
std
mov
xor
je
push
je
xor
std
mov
je
cmp
inc
and
je
push
and
xor
add
std
mov
jb
jbe
sahf
pop
mov
jb
sub
sub
and
mov
std
test
jb
inc
mov
xor
cmc
mov
jno
lcall
mov
sahf
mov
scas
std
xor
ss
jne
std
push
push
jne
std
es
movsl
jmp
push
jle
es
jne
jmp
push
jp
push
outsb
cmp
mov
pop
xor
std
xor
jbe
mov
lea
push
add
xor
jns
jb
std
and
std
jb
jne
pushl
push
jb
jb
cmp
mov
cmc
mov
sub
sub
and
ss
pushl
jbe
into
sbb
and
int3
ja
jbe
into
pop
pop
add
sahf
xor
jle
ja
jbe
into
lret
ljmp
mov
xor
jbe
into
into
cmp
mov
int3
ja
jbe
into
in
xchg
pushl
jbe
into
jle
pop
inc
sahf
mov
outsb
int3
ja
jbe
into
sbb
mov
int3
ja
jbe
into
out
ljmp
mov
xor
jbe
into
pop
je
ficompl
pushl
ss
and
and
xchg
pushf
std
scas
std
lea
sbb
mov
pushw
jbe
jbe
sbb
and
mov
push
sbb
push
jbe
jbe
and
sbb
mov
jp
sub
sub
and
and
xchg
pushf
std
mov
mov
push
std
scas
rep
add
sbb
and
and
sub
sub
jns
bound
std
mov
pushl
jbe
jbe
jle,pt
sti
ss
and
and
mov
cmp
pushl
inc
mov
xor
std
hlt
divb
jbe
inc
push
jne
std
xor
jb
pushl
push
jp
mov
dec
jbe
jae
xor
jo
jo
jb
jne
std
outsb
rep
add
testl
push
jne
std
sahf
cmc
mov
popf
jle
xchg
mov
std
cmp
std
mov
sahf
cmp
push
data16
or
jbe
inc
std
xor
jb
jne
std
cmpsb
sti
xor
iret
jb
jbe
sahf
mov
mov
rep
add
cmc
mov
cmc
or
jns
or
xor
ja
jbe
std
xor
cmc
mov
sub
sub
out
std
xchg
jp
inc
mov
rep
add
xor
mov
push
inc
push
ss
mov
je
mov
cmp
popf
testl
sub
lcall
std
scas
jmp
mov
xor
and
xor
mov
add
xor
std
es
jne
ss
std
cmp
push
mov
pushl
mov
dec
jbe
sbb
jne
ds
and
sahf
push
jne
loope
mov
jns
ss
repz
xor
pushl
xchg
std
and
in
jne
mov
cmp
bound
mov
sti
xor
xor
mov
jbe
xor
std
xor
bound
mov
sub
jp
and
jae
jbe
jbe
ss
mov
std
jbe
push
outsb
add
ds
sub
std
lcall
std
add
or
sub
xor
xor
inc
jbe
and
sbb
mov
std
and
mov
mov
xor
sbb
mov
xchg
and
and
mov
or
and
xor
cmpsb
jmp
xchg
cmpsb
std
cmp
adc
mov
ss
sahf
xlat
mov
and
rorb
ja
popa
sti
xor
jbe
xor
jbe
gs
mov
and
std
xchg
sub
std
lcall
std
dec
int
data16
std
cmp
movsl
inc
mov
xchg
mov
cmc
or
and
sahf
fisttpll
pop
test
jbe
cs
imul
pushl
mov
ss
and
leave
jbe
ss
and
data16
jbe
xor
es
sub
std
lcall
jbe
nop
lds
mov
scas
sbb
push
jbe
jbe
push
jbe
jbe
sbb
sbb
mov
xor
xor
ss
xor
push
ss
xor
data16
sahf
data16
jbe
pop
push
push
jbe
outsl
aaa
jbe
and
cmp
jbe
std
or
iret
data16
jbe
rcrb
push
jbe
jbe
push
jbe
jbe
sbb
sbb
mov
xor
std
xor
and
mov
scas
std
mov
dec
lea
nop
mov
xor
xor
xor
xor
xor
xor
xor
add
add
xor
add
xor
xor
xor
add
xor
add
xor
xor
xor
add
add
xor
xor
add
xor
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
add
xor
xor
add
xor
add
xor
xor
xor
xor
or
inc
add
add
add
add
sub
add
inc
add
adcb
add
pop
add
addb
add
add
add
jo
add
add
add
add
add
mov
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pusha
add
call
add
add
add
add
arpl
add
add
add
add
add
add
add
arpl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
push
push
push
add
add
push
push
push
add
add
push
push
push
add
add
add
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
add
add
push
push
add
add
add
add
push
push
add
add
add
add
push
push
add
add
add
add
add
add
inc
inc
inc
inc
inc
inc
inc
add
push
add
add
push
add
add
push
add
add
add
add
inc
inc
inc
jo
add
add
add
inc
inc
add
add
dec
inc
pop
add
int3
ret
inc
add
int3
and
inc
jo
add
add
add
add
int3
inc
add
int3
inc
add
insb
les
inc
sub
int3
movb
add
add
add
add
bound
js
and
ret
jo
add
add
add
add
mull
and
and
add
inc
add
or
add
add
mov
add
add
add
pavgb
add
loopne
add
loopne
add
loopne
add
incb
add
incb
add
incb
add
incb
add
incb
add
jmp
ud0
loopne
jmp
ud0
loopne
jmp
ud0
push
pop
jmp
pop
inc
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
pop
jmp
ud0
clc
aas
incl
add
add
add
and
add
add
call
add
add
les
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
or
add
bound
aas
add
add
add
add
add
add
add
and
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
add
add
add
xor
xor
xor
cmp
xor
xor
bound
xor
add
sbb
add
add
inc
add
insl
add
add
je
jae
add
inc
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
add
and
push
add
data16
add
jb
add
add
insl
add
dec
add
add
sbb
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
add
and
inc
add
data16
popa
add
and
inc
add
outsb
add
add
outsb
add
jb
and
sub
push
add
outsb
add
add
add
add
add
add
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
outsl
add
add
je
add
js
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
xor
cmp
cmp
aaa
add
add
add
add
add
add
and
push
add
data16
add
jb
add
add
insl
add
dec
add
add
add
add
add
add
popa
add
add
popa
add
add
popa
add
imul
add
add
add
add
add
add
dec
add
push
add
insb
add
push
add
add
jae
je
add
add
add
outsb
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
outsl
add
add
outsb
add
add
js
add
add
add
add
add
add
jb
imul
je
add
jne
imul
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
add
and
inc
add
data16
popa
add
add
add
cmp
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
add
add
add
add
add
add
add
and
add
add
push
add
add
imul
inc
add
imul
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
.byte
add
add
cmp
cmp
add
inc
cmp
cmp
xor
inc
cmp
dec
add
dec
add
aaa
inc
cmp
inc
add
add
xor
add
add
add
add
cmp
inc
inc
add
inc
add
cmp
add
dec
add
ds
dec
inc
cmp
cmp
dec
add
inc
aas
add
xor
xor
push
and
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
stos
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
and
inc
mov
insb
jnp
xor
xor
sub
and
add
inc
or
pop
aaa
dec
roll
xor
and
add
inc
mov
push
aaa
dec
and
xor
sub
add
pop
inc
add
push
aaa
dec
xor
xor
add
inc
add
xor
xor
js
and
add
inc
add
push
aaa
dec
xor
mov
sub
and
adc
inc
add
inc
aaa
dec
and
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sbb
loopne
sbb
sub
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
shlb
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
cs
aaa
dec
xor
xor
daa
and
adc
inc
add
push
aaa
dec
xor
and
add
inc
add
push
aaa
push
add
dec
inc
push
popa
add
inc
dec
or
dec
xor
xor
sub
and
hlt
sbb
sub
dec
xor
xor
sub
and
sbb
and
cmp
sbb
cmp
aaa
dec
leave
add
xor
and
add
inc
add
push
aaa
or
add
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
fsubl
and
hlt
sbb
fists
pop
les
xor
sbb
fists
push
les
xor
daa
and
push
aaa
clc
les
xor
frstor
and
cmc
sbb
fists
dec
movl
and
negb
inc
dec
fcoml
and
add
mov
daa
and
push
aaa
mov
add
into
fisubs
and
negl
inc
fstl
add
add
push
fbld
and
inc
test
push
aaa
dec
xor
xor
shll
and
rcll
ss
push
daa
and
inc
out
push
aaa
dec
xor
xor
daa
and
rclb
and
add
adc
and
rclb
add
add
or
daa
and
sbb
rclb
in
lret
add
xor
daa
and
add
inc
jle
push
aaa
rcr
xor
ljmp
pushf
fildl
xor
ret
clc
ljmp
push
fiaddl
xor
daa
and
sbb
rcll
fiaddl
xor
and
sbb
rcll
fiaddl
xor
jmp
inc
fcmovb
push
aaa
mov
ret
daa
and
in
sbb
ret
fldl
xor
and
inc
pop
push
aaa
and
add
dec
les
and
push
aaa
in
add
mov
daa
and
in
sbb
push
aaa
inc
faddl
xor
lds
and
push
aaa
sub
add
pop
lds
and
inc
nop
push
aaa
aam
add
sahf
lds
and
in
sbb
push
aaa
test
add
fadd
daa
and
in
sbb
ret
lret
xor
and
sbb
rclb
fildl
xor
ret
add
sbb
ret
push
aaa
pushf
fadds
xor
daa
and
inc
mov
aaa
cld
fadds
xor
jmp
push
aaa
sub
add
je
daa
and
sbb
ret
push
aaa
pop
fadds
xor
shll
in
sbb
ret
jb
add
lock
cmp
sbb
ret
inc
flds
xor
iret
daa
and
out
inc
aam
push
aaa
hlt
add
sahf
iret
daa
and
int
aaa
xor
add
push
iret
daa
and
inc
inc
int
aaa
jle
add
sub
daa
and
out
inc
repnz
push
aaa
xchg
xlat
add
in
daa
and
out
inc
mov
push
aaa
call
into
daa
and
int3
push
aaa
adc
add
pusha
into
daa
and
inc
xor
push
aaa
push
les
and
sbb
sub
xchg
int3
add
ret
and
std
sbb
sub
inc
xor
mov
sub
mov
or
push
mov
xor
xor
daa
and
stc
sbb
rcll
dec
xor
xor
fbld
and
negl
inc
push
rcll
pop
enter
shll
and
clc
sbb
rclb
or
xor
clc
sbb
rclb
int3
leave
add
inc
shlb
and
sbb
rclb
jbe
add
sbb
daa
and
clc
sbb
rclb
dec
leave
add
fbld
and
sub
xor
add
xor
and
sbb
fistl
scas
rolb
fldenv
and
icebp
sbb
fistl
rolb
mov
daa
and
sbb
fistl
or
add
push
fldenv
and
icebp
sbb
fistl
mov
fsubs
and
lock
ficoml
fadd
add
mov
lock
ficoml
adc
add
jp
daa
and
repz
ficoml
push
roll
cmp
daa
and
lock
lds
add
xor
sbb
ficoms
faddp
add
dec
fsubl
and
sbb
ficoms
add
add
add
daa
and
hlt
sbb
ficoms
dec
lds
xor
and
repz
fsts
bnd
xchg
and
push
aaa
xor
add
inc
and
sbb
fsts
pop
ret
adc
daa
and
repz
fcoms
or
add
test
daa
and
repnz
fcoms
add
xor
sbb
les
out
add
stos
fisubl
and
sbb
fcoms
xchg
fiadds
xor
daa
and
lds
out
fiadds
xor
out
sbb
lds
sub
add
fs
daa
and
sbb
lds
push
fiadds
xor
daa
and
out
sbb
les
pushf
filds
xor
daa
and
sbb
fcoms
jl
add
or
daa
and
sbb
les
adc
add
pop
daa
and
sbb
les
ljmp
and
repnz
sub
ror
add
dec
aad
and
sbb
xlat
push
aaa
jle
add
adc
daa
and
std
sbb
push
aaa
test
add
aam
and
push
aaa
fcmove
add
dec
aam
and
sbb
push
aaa
js
add
adc
daa
and
cld
sbb
sub
pop
xor
mov
sub
mov
adc
push
mov
xor
mov
sub
mov
or
push
aaa
lretw
xor
mov
jae
push
mov
xor
mov
sub
mov
add
push
mov
xor
mov
sub
mov
adc
push
mov
lret
add
in
shlb
and
add
roll
push
mov
xor
xor
shll
and
stc
sbb
rcll
enter
shll
and
add
inc
adcl
es
cwtl
daa
and
movsl
push
ret
shll
mov
pop
sti
pusha
mov
or
add
sub
xchg
push
add
cmp
inc
jae
push
inc
dec
and
jo
insb
pop
and
jb
inc
pop
and
jo
insb
pop
and
je
pop
pop
dec
and
jo
inc
pop
aaa
push
ds
inc
pop
inc
inc
inc
push
inc
jb
sub
push
push
xor
dec
push
inc
imul
daa
push
addr16
xor
and
jo
inc
dec
es
push
addr16
jne
inc
dec
fs
inc
sub
xor
xor
dec
push
inc
gs
or
xor
pop
push
dec
push
push
add
sbb
dec
cmp
push
jbe
jns
inc
inc
gs
jbe
je
aaa
push
daa
xor
xor
inc
adc
jge,pn
insb
sub
or
push
inc
dec
jne
jb
js
dec
inc
sbb
pop
bound
sub
and
jo
xor
pop
xor
xor
inc
inc
je
pop
add
push
aaa
or
push
inc
dec
gs
insl
jo
xor
push
jb
xor
inc
inc
je
pop
cs
pop
xor
push
insb
push
jb
push
dec
popa
jo
inc
inc
dec
es
inc
imul
add
inc
push
dec
ds
sub
push
pop
dec
inc
push
add
sbb
inc
es
inc
add
je
dec
inc
je
push
and
xor
xor
xor
inc
je
pop
add
sub
push
xor
arpl
jbe
dec
add
pop
sub
das
xor
inc
sub
outsl
add
sub
aaa
xor
dec
sub
add
sbb
sub
aaa
cmp
arpl
pop
sub
jo
aaa
inc
sub
aaa
das
xor
xor
push
and
je
outsl
sub
xor
dec
sub
add
sbb
sub
aaa
sub
outsb
xor
and
aaa
inc
sub
aaa
das
xor
xor
and
jb
sub
sub
sub
add
inc
je
xor
cmp
imul
sub
jae
insl
inc
sub
aaa
xor
xor
sub
and
inc
insl
sub
xor
push
sub
and
add
inc
mov
xor
xor
add
cmpsb
sub
ss
pusha
xor
add
lods
sub
ss
jge
lahf
sub
mov
sbb
mov
mov
test
sbb
mov
inc
inc
mov
xchg
xor
mov
jns
mov
sub
divl
fnsave
mov
pop
and
sub
mov
add
cmc
sub
and
add
inc
enter
xorb
xor
sub
iret
add
inc
shrb
inc
ss
xor
loop
popa
and
add
fsubrs
or
xchg
xor
jmp
push
and
add
loopne
pop
ss
sub
out
push
inc
call
xor
xor
sub
inc
lock
mov
sub
cmc
add
clc
sub
ss
outsl
xor
sub
incb
jp
ljmp
mov
xchg
sub
and
sub
xor
subl
cmp
mov
xor
xor
adc
sub
lahf
xor
xor
sub
and
add
fisubrs
push
ss
xor
xor
sub
and
add
inc
clc
sub
mov
insl
xor
sub
mov
sub
out
xor
xor
add
inc
stos
sub
out
data16
add
inc
mov
outsb
lock
xor
add
mov
xor
lock
and
add
inc
int3
sub
xor
xor
sub
rolb
push
inc
shrl
fs
xor
in
sub
fiadds
jae
loopne
push
lods
xor
xor
sub
and
add
inc
icebp
sub
mov
sub
and
add
std
sub
ss
imul
sub
add
cs
pop
jmp
sub
adc
mov
add
add
jno
cs
pop
loope
test
adc
cs
in
ret
add
add
jno
testb
xor
mov
mov
mov
mov
stc
pop
std
xor
mov
mov
loope,pn
icebp
xor
xchg
adc
cs
add
sub
adc
add
jno
cs
pop
mov
out
adc
add
jno
cs
pop
lea
jmp
leave
add
jno
cs
pop
xorl
shll
mov
test
stc
adc
add
jno
cs
cltd
xor
ret
add
jno
cs
add
sub
adc
add
jno
cs
add
sub
adc
add
jno
cs
pop
xchg
xor
sub
mov
das
dec
xor
sub
cmp
das
jbe
xor
xor
movl
sub
lret
add
jle
xchg
daa
iret
add
bound
fwait
xor
xor
roll
xor
sub
cs
fsubrs
push
xchg
xor
xor
loopne
pop
inc
loope
adc
test
inc
xor
in
pop
inc
in
pop
xor
popa
daa
call
das
sbb
mov
sub
push
inc
in
das
pop
xor
imul
icebp
das
add
mov
je,pn
mov
sub
xor
aaa
push
aaa
xchg
jae,pn
cmpsb
push
dec
inc
cmpsl
sub
xor
aaa
pop
aaa
cltd
jg,pn
stos
push
inc
inc
stos
sub
xor
aaa
pop
aaa
popf
cs
scas
push
inc
inc
scas
sub
xor
aaa
push
adc
push
sbb
sub
xor
aaa
add
test
and
mov
push
xor
aaa
or
mov
das
and
mov
aaa
or
lea
mov
mov
sub
xor
cs
and
ret
sub
xor
adc
sub
xor
cs
and
lret
sub
xor
sbb
iret
sub
xor
imul
sahf
aaa
inc
aaa
in
gs
xlat
sub
xor
cs
and
fldt
xor
outsl
and
fildll
xor
cs
jecxz
je
scas
aaa
adc
aad
xor
out
inc
xor
cs
jmp
dec
xor
cmp
out
sub
xor
or
repz
xor
cs
inc
imull
xor
cs
inc
sti
sub
xor
cs
incb
ds
ljmp
xor
xchg
xchg
das
scas
and
sub
stos
xor
pop
xchg
inc
test
ss
xor
pop
or
mov
xor
lods
xor
pop
mov
mov
cwtl
xor
ss
xor
pop
aam
mov
ss
mov
call
inc
ret
xor
ss
xor
das
mov
lds
mov
sub
xchg
xor
das
mov
inc
lret
xor
ss
xor
das
mov
inc
into
sub
lahf
xor
das
xchg
roll
mov
xor
movsb
xor
das
andl
pop
mov
xor
ss
jmp
pop
test
loop
loopne
test
das
xchg
and
pop
lods
inc
out
in
lods
ss
fsubrs
sahf
and
pop
mov
xor
ss
and
pop
movsb
inc
out
sub
mov
and
pop
fadds
sub
ret
das
loop
cmc
pop
faddl
sub
xor
das
out
and
pop
rolb
and
adc
cmp
xchg
and
add
or
bound
cmp
push
xchg
and
bound
cmp
add
int3
adc
cmp
add
and
adc
mov
inc
add
and
mov
sbb
add
or
arpl
and
cmpl
adc
and
add
or
pusha
iret
and
adc
ljmp
arpl
and
xchg
cmp
adc
and
add
or
arpl
and
mov
and
pusha
std
and
push
mov
xchg
adc
and
loope
rclb
cmp
pop
shll
sub
in
pop
adc
and
fs
inc
adc
and
add
or
adc
cmp
add
or
adc
cmp
lds
add
or
adc
and
popa
mov
cmp
add
and
loop
or
cltd
and
add
and
in
adc
or
mov
push
push
clc
cmp
andl
add
or
cld
cmp
xchg
jl
mov
and
idivb
sub
lea
or
mov
and
push
mov
pop
adc
and
or
leave
and
cmpb
adc
int
scas
fs
and
push
loopne
ds
or
popa
shlb
dec
pop
cltd
cmp
add
or
popa
xlat
and
xchg
cmp
add
or
frstor
in
xchg
cmp
push
out
and
fs
stc
adc
and
fs
push
adc
mov
or
adc
and
pop
in
or
in
and
movsb
cmp
shlb
push
icebp
or
popa
repnz
mov
and
push
cmc
or
mulb
aas
adc
and
stc
or
addr16
and
mov
pop
adc
and
add
or
popa
and
cmp
xchg
and
and
and
mov
scas
xor
and
arpl
and
mov
pop
xor
and
add
or
test
lret
push
jecxz
cs
or
arpl
and
adc
in
and
fbld
inc
pop
stos
cmp
mull
or
inc
jecxz
xorl
aad
repz
or
inc
out
test
mov
and
and
or
inc
jmp
mov
cmpsb
cmp
sti
and
or
inc
out
lea
mov
and
and
or
inc
repz
mov
and
and
or
inc
mull
mov
mov
call
and
or
inc
mov
cmp
cmp
movsb
or
push
cmp
cmp
cmp
test
adc
daa
pop
cmp
cmp
cmp
lods
or
pop
cmp
cmp
cmp
mov
or
daa
inc
cmp
cmp
cmp
mov
or
cmp
cmp
cmp
mov
daa
dec
cmp
cmp
cmp
mov
daa
dec
cmp
cmp
cmp
rorb
cmp
and
cmp
cmp
add
enter
leave
daa
jnp
cmpb
sti
and
xor
cmp
or
rorb
arpl
cwtl
cmp
cmp
aam
sub
cmp
adc
fmuls
imul
cmp
cmp
fisttps
adc
stos
cmp
cmp
jecxz
pop
dec
in
push
cmp
and
pop
dec
call
cmp
cmp
jmp
push
dec
in
daa
push
cmp
and
dec
dec
repnz
add
mov
and
dec
dec
mulb
add
mov
and
inc
dec
mov
aas
xor
xchg
es
jo
and
push
in
aas
add
push
and
and
push
loopne
cmp
fwait
es
jo
and
push
in
add
push
pop
jo
and
push
clc
aas
inc
add
push
pop
jo
and
push
cld
aas
inc
add
push
push
jo
and
push
lock
dec
add
push
push
jo
and
push
hlt
aas
dec
add
push
dec
jo
and
push
mov
push
add
es
les
dec
jo
and
push
mov
push
add
es
enter
leave
and
push
cmpb
add
es
int3
push
inc
jo
and
push
test
pop
add
es
rorb
jns
shll
push
cwtl
aas
bound
jecxz
inc
adc
push
mov
aad
sti
es
aas
stos
and
lea
fmuls
mov
fldenv
es
aas
scas
and
mov
fmull
test
es
aas
mov
out
es
xor
push
lods
push
loope
out
test
mov
shll
xchg
xor
push
mov
lods
aas
mov
xor
push
movsl
push
jmp
aas
mov
xor
push
fsts
and
movsb
aas
ret
es
adc
push
push
push
mov
cmpsl
adc
push
popf
jo
and
push
mov
es
clc
push
repnz
stc
and
es
stc
and
popl
movsb
adc
mull
push
xor
and
pop
call
or
popa
movsl
or
pop
in
adc
add
or
pop
loopne
stos
adc
and
aaa
inc
xor
xor
xlat
and
add
inc
or
push
aaa
inc
xor
xor
add
inc
adc
push
aaa
pop
xor
xor
xlat
and
add
inc
call
push
aaa
xor
xor
and
sbb
aad
aaa
outsl
xor
xor
and
add
inc
push
aad
aaa
insl
xor
xor
and
add
inc
push
aad
aaa
imul
xor
and
add
inc
push
aad
aaa
imul
and
add
inc
popa
aad
aaa
xor
xor
and
add
inc
arpl
push
aaa
xor
xor
and
add
inc
imul
aaa
dec
xor
xor
add
inc
mov
push
aaa
inc
xor
xor
add
inc
xchg
aad
aaa
cmp
add
mov
add
inc
xchg
aad
aaa
cmp
add
movsb
xlat
and
sbb
aad
aaa
outsb
xor
xor
add
inc
xchg
aad
aaa
insb
xor
xor
add
inc
cltd
aad
aaa
bound
add
lods
xlat
and
add
inc
lcall
xor
add
inc
popf
aad
aaa
inc
xor
xor
add
inc
lahf
aad
aaa
xor
xor
add
inc
stos
aad
aaa
and
add
pushf
xlat
and
inc
lods
aad
aaa
daa
xor
xor
add
inc
scas
aad
aaa
and
xlat
and
sbb
aad
aaa
sub
add
adc
and
sbb
aad
aaa
sub
add
test
and
inc
mov
push
aaa
das
xor
xor
add
inc
mov
push
aaa
sub
xlat
and
sbb
aad
aaa
and
add
mov
and
sbb
aad
aaa
cmp
add
lock
and
sbb
aad
aaa
cmp
add
repnz
and
inc
ret
aad
aaa
aas
xor
xor
xlat
and
sbb
aad
aaa
cmp
xlat
and
sbb
aad
aaa
xor
add
clc
xlat
and
sbb
aad
aaa
xor
add
cli
xlat
and
inc
lret
aad
aaa
aaa
xor
xor
xlat
and
sbb
aad
aaa
xor
xlat
and
aad
aaa
lret
xor
xor
xlat
and
aad
aaa
leave
xor
xor
xlat
and
push
aaa
iret
xor
xor
xlat
and
aad
aaa
int
add
rcl
and
aad
aaa
jmp
add
rcl
and
aad
aaa
jmp
xlat
and
push
aaa
out
xor
xor
xlat
and
sbb
aad
aaa
push
xor
xor
and
sbb
sub
push
lods
inc
xor
pushf
pop
inc
test
push
aaa
sub
and
pop
inc
xchg
push
aaa
push
inc
xor
popf
pop
inc
mov
push
aaa
push
lods
inc
xor
popf
pop
inc
mov
push
aaa
push
lods
inc
xor
popf
pop
inc
mov
push
aaa
push
lods
inc
xor
popf
pop
inc
mov
push
aaa
and
and
pop
inc
nop
sub
mov
es
sahf
pop
inc
xchg
sub
nop
scas
inc
xor
sahf
pop
inc
xchg
sub
scas
scas
inc
xor
sahf
pop
inc
xchg
sub
mov
inc
xor
lahf
pop
inc
cwtl
sub
sbb
and
pop
inc
lcall
xor
inc
pop
inc
aas
sub
add
xor
das
and
pop
inc
popf
sub
push
ja
xor
sub
and
inc
pop
inc
fwait
sub
sahf
je
xor
and
int3
inc
pop
inc
out
pop
aaa
mov
dec
sub
mov
pop
inc
jae
inc
aaa
ljmp
and
jae
cmp
or
sub
pusha
inc
pop
inc
inc
sub
adc
out
sub
dec
inc
pop
inc
jg
pop
aaa
jbe
inc
xor
inc
pop
inc
mov
push
aaa
bound
mov
inc
pop
inc
cvtpi2ps
aaa
ret
xor
pop
inc
mov
jb
xor
sub
inc
sahf
sub
pop
jb
xor
das
and
inc
pop
inc
mov
jae
xor
sub
and
inc
pop
inc
cmc
sub
aaa
lret
xor
inc
pop
inc
lea
push
aaa
cmp
xor
sub
inc
mov
jae
xor
xor
xor
pop
inc
popa
sub
bound
xor
sub
and
inc
pop
inc
popf
sub
push
jae
xor
and
inc
mov
jo
xor
sub
and
inc
pop
inc
shrl
inc
aaa
xchg
xor
inc
pop
inc
xor
push
aaa
jo
xor
sub
mov
sub
fidivl
xor
sub
jl
pop
inc
pop
sub
push
jo
xor
sub
and
pop
inc
xlat
sub
push
jo
xor
sub
inc
hlt
sub
jle
inc
xor
sub
and
pop
inc
sub
outsb
jo
xor
and
sbb
pop
inc
cmp
inc
aaa
inc
jo
xor
pop
inc
mov
pop
aaa
mov
sub
and
inc
pop
inc
mov
pop
aaa
xchg
jno
xor
inc
pop
inc
dec
sub
mov
xor
sub
and
pop
aaa
cli
jno
xor
and
jb
lret
xor
inc
pop
inc
cwtl
sub
and
xor
sub
pop
inc
pop
inc
and
jno
xor
sub
and
pop
inc
mov
pop
aaa
data16
xor
inc
pop
inc
sbb
pop
aaa
pop
jno
xor
inc
pop
inc
sub
dec
jno
xor
sub
inc
leave
sub
mov
inc
xor
ds
aas
pop
inc
pop
sub
xchg
push
inc
xor
pop
inc
ja
push
aaa
mov
inc
xor
aas
pop
inc
or
pop
aaa
cli
push
inc
xor
sub
and
sub
ljmp
and
sub
fimull
inc
xor
aas
pop
inc
int3
sub
xor
inc
xor
sub
and
pop
inc
mov
dec
aaa
jb
inc
xor
sub
and
pop
inc
pop
sub
push
inc
xor
sub
and
aas
pop
inc
or
pop
aaa
inc
push
inc
xor
aas
pop
inc
ja
jnp
sahf
cmovo
and
cs
ds
inc
adc
pop
aaa
testb
xor
sub
and
sub
out
cmovo
out
sub
and
pop
aaa
fimull
inc
xor
sub
and
push
aaa
cmovo
je
and
je
pop
inc
mov
pop
aaa
and
inc
xor
sub
pop
ds
inc
imul
aaa
add
inc
xor
ds
inc
pop
sub
push
inc
xor
and
sbb
pop
inc
sub
pop
cmovo
leave
sub
or
pop
inc
xor
push
aaa
dec
cmovo
mov
cmp
pop
aaa
cmpsb
or
xor
sub
and
cmp
push
aaa
xchg
or
xor
and
aam
pop
inc
mov
pop
aaa
orb
scas
sub
and
sub
ss
xor
or
dec
cmp
push
aaa
push
or
xor
cmp
pop
aaa
bound
xor
sub
and
cmp
dec
aaa
dec
or
xor
sub
and
cmp
inc
or
pop
aaa
cmpsb
or
das
and
cmp
inc
dec
sub
lcall
and
cmp
inc
xchg
pop
aaa
repnz
sub
test
pop
inc
sbb
inc
aaa
fimull
xor
js
pop
inc
cmp
or
sub
pop
cmp
inc
sub
add
sub
cmp
inc
pop
aaa
or
pop
sub
and
pop
inc
or
inc
aaa
inc
or
xor
inc
or
or
or
aaa
and
cmp
sti
sub
or
push
sub
and
inc
aaa
rorb
inc
xor
cmp
cmp
or
in
sub
and
inc
sub
or
inc
xor
sub
and
pop
inc
mov
jno
dec
or
add
add
inc
sub
decb
inc
xor
sub
inc
dec
sub
fimuls
inc
xor
sub
and
push
aaa
into
or
movsl
sub
and
inc
push
sub
push
or
fldt
sub
push
cmp
js
jg
push
inc
xor
sub
inc
inc
sub
lcall
and
cmp
ja
push
aaa
cmp
inc
xor
xor
push
cmp
or
inc
aaa
or
inc
xor
cmp
out
inc
aaa
push
or
or
sub
or
pop
inc
mov
inc
aaa
mov
sub
inc
pop
sub
orb
xor
sub
mov
sub
cli
or
xor
and
add
inc
inc
sbb
add
xor
and
pop
inc
push
sub
and
add
cmp
and
add
inc
sbb
push
aaa
mov
sub
and
add
inc
aam
adc
inc
xor
xor
sub
and
sub
dec
xor
xor
sub
sub
or
dec
add
push
aaa
dec
xor
jb
in
repz
mov
mov
loop
inc
jl
leave
lret
addr16
pop
jg
cmpsb
jmp
push
sub
mov
xchg
roll
mov
pop
mov
gs
cmp
push
flds
shr
xchg
inc
sbb
fcmovnbe
add
push
xchg
add
pop
adcl
aaa
test
pcmpeqd
and
push
adc
sbb
cmp
cmp
pop
nop
daa
cmp
jmp
filds
into
mov
dec
cmp
cmp
lcall
inc
or
fidivrl
test
xchg
or
inc
pop
pop
cltd
aas
and
jecxz
out
pop
lea
or
leave
mov
and
sbb
arpl
loopne
xchg
jno
xchg
jl
dec
or
add
inc
cs
hlt
fcompl
mov
mov
sbb
or
outsb
iret
xchg
out
jle
jnp
jo
mov
aas
cs
mov
imul
and
ficomps
sbb
pushf
pop
pop
add
sti
cmp
xchg
adc
add
aam
sarl
scas
in
imul
mov
cli
pop
lods
add
xorb
and
cmpsb
add
dec
sub
sbb
jbe
nop
and
cmp
insl
mov
repz
pop
pop
xor
cs
mov
popl
jg
and
xchg
add
mov
dec
sti
adc
cmp
bnd
sbb
insb
xchg
mov
add
cltd
add
jp
ret
and
fcoms
popf
repz
pop
mov
and
dec
or
ret
insl
xchg
xchg
and
jge
sbb
add
sub
xchg
mov
adc
add
xchg
pop
hlt
cmc
push
lods
fildll
sbb
jmp
sbb
xor
aaa
bound
add
lret
pop
xchg
push
jle
loope
mov
sub
ja
and
adc
mov
mov
iret
je
cltd
fimull
xchg
xchg
jb
jecxz
xor
mov
adcb
pop
sub
cmp
int3
leave
fs
xor
mov
test
jl
jge
xor
cmp
dec
fisttps
out
subl
push
xor
jo
cmp
and
js
fsts
push
cmp
adc
pop
out
xchg
sub
mov
fptan
or
stos
imul
ljmp
lea
repnz
dec
jmp
xchg
movl
mov
sbb
xchg
lret
hlt
xchg
xchg
outsb
stos
in
push
and
lods
jmp
sbb
in
inc
jns
xor
cmp
xchg
mov
xor
jns
push
xchg
mov
sbb
xor
jnp
daa
mov
fwait
leave
mov
lcall
dec
in
repnz
in
jl
stc
push
pushf
jbe
aas
and
sbb
sub
loop
inc
xor
sub
and
cmp
add
adc
pop
pop
inc
inc
sub
outsl
xor
xor
and
sbb
sub
add
inc
xor
and
cmp
add
adc
and
insl
adc
xor
push
jb
inc
pop
and
and
sub
jb
sub
and
insl
inc
sub
aaa
xor
xor
and
inc
dec
pop
adc
push
je
fs
push
inc
popa
sbb
pop
adc
push
je
gs
inc
push
push
jb
and
and
add
push
inc
push
pop
pop
push
insl
dec
es
and
dec
inc
push
jae
sbb
pop
bound
push
jb
pop
pop
inc
inc
fs
insl
and
push
aaa
push
push
jb
pop
dec
inc
gs
insb
sbb
dec
and
inc
inc
pop
pop
pusha
inc
dec
fs
jl
push
sub
xor
and
pop
inc
pop
sub
aaa
and
arpl
inc
sub
jae
jbe
data16
aaa
dec
xor
xor
sub
popa
add
add
push
aaa
jp
inc
jne
sbb
arpl
sbb
sub
sbb
xor
and
dec
inc
jb
cmp
cmp
imul
add
add
push
aaa
xor
dec
sub
add
sbb
or
push
add
pop
sub
jo
imul
jl
xor
sub
and
inc
push
jo
cmp
or
pop
push
inc
inc
push
add
sbb
js
je
pop
jae
xor
and
inc
adc
ss
sbb
fs
inc
push
inc
add
sbb
sub
dec
xor
xor
sub
and
jle
add
sub
and
dec
adc
or
inc
and
sbb
pop
push
aaa
and
and
sbb
sbb
cs
jbe
inc
dec
and
inc
push
inc
add
sbb
or
imul
inc
jb
cmp
das
xor
sub
add
insb
sub
aaa
dec
xor
xor
jno
ja
sub
push
cmp
xor
sub
and
cmp
sub
push
sub
and
cmp
jae
push
aaa
aas
inc
gs
push
inc
push
pcmpgtb
inc
pop
aaa
push
ds
inc
pop
inc
inc
push
dec
outsb
insl
jl
je
ds
sub
xor
push
jb
pusha
add
pop
cmp
pop
insl
push
pop
pop
fs
outsl
arpl
dec
inc
sub
pop
popa
sbb
push
push
add
arpl
jo
es
sub
or
gs
inc
and
outsl
xor
jb
and
pop
inc
pop
push
outsl
push
and
xor
jb
sbb
sub
jae
dec
dec
arpl
outsl
inc
push
inc
push
and
jne
outsl
inc
jl
es
add
jg
push
inc
imul
push
das
pop
je
inc
pop
dec
dec
add
inc
xor
push
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sbb
sub
push
inc
dec
sub
jno
dec
xor
push
inc
pop
sub
jno
cmp
jl
jno
sub
sbb
sub
aaa
sbb
xor
push
and
jo
je
sub
sbb
jb
pop
sub
imul
xor
xor
sbb
sub
push
inc
dec
sub
or
dec
xor
outsl
and
add
push
sub
sbb
sub
inc
dec
sub
xor
and
dec
sbb
jle
aaa
sub
popa
xor
and
jnp
outsb
dec
sbb
pop
insb
xor
outsl
bound
js
sub
or
dec
jb
dec
pusha
dec
insb
sbb
imul
pop
jae
inc
dec
outsb
gs
inc
inc
imul
inc
pop
push
and
ja
imul
aaa
and
sub
and
ja
jae
es
sub
insb
xor
and
insl
inc
sub
dec
xor
xor
imul
push
sub
aaa
sbb
inc
xor
and
jp
jb
cmp
xor
push
and
inc
imul
outsl
xor
push
and
add
push
sub
aaa
or
jne
inc
sub
add
je
add
das
xor
inc
sub
outsl
add
add
push
aaa
push
xor
push
sub
je
js
insb
sub
aaa
cmp
outsl
xor
and
insl
inc
dec
sub
aaa
dec
xor
xor
add
xor
push
adc
and
and
sbb
sub
aaa
xor
pop
sub
add
jb
cmp
xor
inc
inc
addr16
and
inc
je
inc
push
pop
and
jo
jne
push
aaa
or
sub
add
pop
sub
push
xor
push
sub
insb
add
add
push
aaa
jo
or
add
and
cmp
push
js
inc
pop
push
add
inc
es
push
add
push
sub
je
sbb
dec
xor
adc
push
and
adc
or
and
inc
or
sub
add
inc
das
sub
aaa
push
and
adc
add
inc
inc
sub
xor
inc
and
sbb
sbb
aaa
repnz
test
and
sbb
aaa
loop
inc
xor
pop
inc
pushf
sbb
aaa
rolb
inc
xor
pop
inc
add
push
xor
xor
and
or
adc
and
inc
cmp
cmp
push
dec
jo
sbb
dec
and
xor
xor
and
sbb
sub
aaa
outsl
xor
xor
sub
add
jae
push
aaa
outsl
xor
adc
add
add
push
aaa
pusha
xor
xor
add
inc
push
sub
aaa
cmp
dec
xor
push
and
inc
imul
xor
add
and
pop
inc
dec
sub
aaa
xor
push
sub
je
sbb
sub
aaa
sub
xor
dec
and
push
inc
push
sub
xor
inc
sub
insl
add
sub
or
outsl
xor
push
and
jne
sub
xor
and
pop
inc
insb
sub
aaa
cmp
jae
xor
and
add
inc
xor
gs
jl
cmp
xor
and
pusha
inc
jae
add
and
popa
xor
and
sbb
arpl
jp
xor
xor
sub
insl
add
add
push
aaa
and
inc
or
or
ja
outsl
inc
xor
pop
pop
pop
push
inc
bound
inc
bound
xor
dec
xor
xor
jns
gs
and
adc
cmp
push
pop
pop
dec
push
jns
sbb
js
fs
inc
inc
inc
inc
inc
push
and
inc
push
gs
pop
inc
cmp
xor
push
push
add
sbb
dec
xor
cmp
jae
dec
push
outsb
insl
insb
push
push
and
xor
xor
dec
push
outsb
insl
insb
dec
dec
cmp
ds
add
pop
pop
push
push
cmp
ss
dec
jns
pop
es
jns
inc
sub
and
insl
xor
jge
dec
xor
xor
add
inc
dec
jle
add
pop
inc
dec
jae
jl
sub
push
imul
push
ss
or
pop
push
dec
push
dec
outsl
outsb
sbb
inc
cmp
xor
dec
pop
jns
pop
outsb
inc
aaa
push
ds
outsl
pop
xor
and
sub
outsl
dec
or
and
daa
pop
aaa
and
pop
inc
inc
push
pop
add
sbb
dec
xor
inc
sub
inc
imul
aaa
add
jle
dec
dec
inc
imul
push
das
xor
xor
add
and
jb
sub
dec
push
inc
movaps
sbb
push
jl
jae
aas
sbb
pop
fs
add
daa
push
adc
cmp
inc
push
sub
inc
outsl
add
in
sti
mov
movsb
clc
fdivr
lock
int
sbb
inc
cmp
imul
jbe
bound
sbb
cltd
in
cmpsl
lea
mov
mov
mov
xor
xor
in
out
lds
xor
xor
jp
inc
inc
inc
insb
inc
jnp
data16
pop
xor
and
add
dec
gs
cmp
inc
sbb
jl
ds
sbb
and
dec
xor
xor
pop
pop
add
dec
push
sub
add
adc
cmp
dec
aaa
pop
inc
push
jb
imul
jle
jns
je
adc
xor
add
dec
xor
jnp
adc
pop
or
push
or
add
push
jns
cmp
daa
cmp
adc
dec
push
dec
jnp
outsl
dec
xor
xor
sbb
sub
pop
imul
daa
sbb
add
cs
push
push
sbb
and
jne
jnp
cs
ss
dec
jae
bound
pop
dec
jg
push
jns
addr16
inc
push
arpl
jbe
js
cmp
pop
insl
pop
push
jo
aas
push
pop
aas
pop
push
add
cmp
or
daa
dec
sub
sbb
pop
cmp
es
push
add
jno,pn
daa
push
adc
add
mov
scas
scas
mov
sahf
fldl
or
and
idiv
mov
aam
int
fldlg2
icebp
mov
loope
mov
out
movsb
lcall
xor
and
cmp
aaa
add
pop
pop
push
mov
add
inc
cmp
inc
push
pop
dec
inc
inc
outsl
popa
jno
jae
bound
dec
jno
cmovbe
and
pop
add
pop
push
ss
outsb
ja
jae
pop
pop
inc
adc
or
es
jb
ja
jle
das
xor
and
push
aaa
cmp
js
arpl
push
sbb
dec
gs
inc
jge
outsl
outsb
imul
or
dec
cmp
call
mov
fld
rcr
xlat
mov
shll
int3
imul
mov
and
push
jnp
and
push
push
push
pop
inc
addr16
sub
das
add
add
mov
lods
mov
test
xchg
cmpsl
mov
scas
mov
mov
lea
adcl
jle
jg
jbe
jp
pop
pop
sbb
add
cmp
imul
outsl
arpl
cmp
jle
dec
dec
inc
insb
push
bound
test
mov
lods
cltd
test
cltd
mov
push
aaa
pop
and
and
cmp
sub
sbb
pop
xor
add
mov
mov
test
lods
add
jg
jnp
popa
pop
inc
push
inc
push
je
imul
sub
and
jae
push
inc
cmp
cmp
push
push
pop
es
repnz
mov
int3
mov
lret
jecxz
int
jmp
out
inc
jns
cmp
pop
gs
pop
inc
inc
push
pop
data16
add
push
aaa
or
pop
jg
je
dec
push
sbb
sub
loop
mov
pushf
mov
and
sub
ds
add
inc
pop
xor
imul
inc
pusha
jno
pop
pop
adc
call
adcl
adc
jge
fs
push
push
pop
inc
mov
pushf
scas
cwtl
lea
xchg
mull
xor
xor
dec
data16
jo
jp
sub
push
dec
inc
push
push
dec
dec
arpl
inc
imul
and
inc
dec
push
pusha
add
inc
in
mov
rcr
ret
mov
fdivrs
sbb
cmp
sbb
add
loope
fxch
xchg
ret
aaa
das
dec
push
dec
push
push
pop
dec
insl
je
inc
insl
push
cmp
push
push
push
adc
ja
and
ds
je
pop
adc
bound
push
xor
add
inc
jge
cmp
dec
push
dec
pop
inc
add
sbb
decl
fnsave
sub
and
lret
aaa
cmp
dec
push
inc
jo
pop
cvtps2pd
push
imul
fs
or
push
inc
jne
inc
outsl
bound
add
push
aaa
lret
movsb
xorl
xchg
movsb
les
cld
stc
std
jmp
lret
iret
stos
ret
not
iret
cli
enter
mov
xchg
shl
sti
push
cli
enter
fyl2xp1
xchg
loop
loop
jmp
ret
inc
loop
xchg
cmc
mov
loop
sub
and
sub
and
cmp
sub
and
dec
pop
add
push
aaa
sbb
dec
push
push
inc
push
push
imul
sub
in
xchg
not
aam
and
pop
adc
ret
mov
xchg
jl
cs
dec
xor
xor
sbb
or
add
inc
lret
stc
sub
call
loop
cld
mov
shll
in
fcmovne
xlat
loopne
sbb
adc
jg
xor
xor
and
and
add
inc
push
das
push
outsb
pop
sub
sub
aas
cmp
push
push
sbb
sarb
int
xchg
and
sub
xor
aaa
mov
lods
addb
mov
rorb
add
inc
dec
inc
pop
jp
jl
imul
xchg
and
iret
xchg
aam
xor
jle
jp
push
pop
dec
sbb
sub
cs
fs
dec
dec
pop
push
jns
sbb
push
xor
inc
jns
xor
and
sub
sbb
imul
xor
adc
dec
adc
pop
or
add
xor
or
insb
or
add
jnp
jnp
imul
pop
jns
dec
dec
pop
dec
add
sbb
loopne
dec
xor
xor
sbb
xor
push
aaa
xlat
stos
test
add
sbb
in
sahf
call
in
out
fxch
stos
in
aam
ret
clc
fcom
in
fucom
loope
inc
xchg
mov
xchg
mov
mov
mov
xchg
movl
sbb
mov
popf
fcoms
and
out
out
popf
ljmp
add
sbb
sarb
xor
in
std
std
add
sbb
dec
sub
xor
xor
sysret
add
pop
jbe
jb
es
icebp
jmp
leave
sub
and
and
push
aaa
aam
div
lock
aam
sbb
push
js
jbe
sub
sbb
or
ds
jns
xor
dec
das
add
xor
add
push
aaa
shrl
jns
xor
sub
aaa
mov
fsubr
xor
and
push
jae
xor
xor
out
ljmp
xchg
fcom
test
shr
sti
lods
loope
cmpsl
aaa
xchg
mov
mov
xlat
add
inc
sbb
jge
jb
imul
sub
pop
jg
jg
jp
jo
sbb
inc
icebp
fnstsw
enter
and
jbe
ja
daa
dec
xor
xor
add
inc
adc
jbe
jae
sub
add
aas
imul
push
cmp
and
add
pop
sub
cmp
add
inc
pop
inc
push
insl
arpl
add
push
aaa
stc
test
and
sub
outsl
cmp
push
imul
push
push
push
inc
inc
mov
xchg
fadd
int3
and
mov
mov
xchg
rol
stc
jecxz
mov
xchg
lcall
neg
iret
sbb
pop
cs
and
dec
pop
pop
js
inc
pop
imul
dec
es
xor
sub
and
adc
push
aaa
cmp
sub
and
push
push
je
jo
cmpsb
mov
out
loope
add
insl
outsb
jle
pop
add
push
aaa
outsb
sub
pop
adc
dec
inc
xor
es
or
or
dec
or
sub
sub
sub
and
add
or
jnp
and
daa
jp
adc
and
xor
out
loope
sar
test
fwait
shlb
lcall
stc
dec
out
scas
cmp
cltd
jmp
and
push
pop
sbb
sub
sbb
jbe
push
push
push
pop
jae
aaa
xorb
mov
sahf
fnsave
mov
xchg
and
sub
mov
call
fsubrp
cltd
in
fcmovb
lret
repnz
lret
cltd
sar
xchg
scas
ret
mov
and
push
xchg
stos
call
inc
imul
and
inc
jo
dec
and
cmp
addr16
pop
xor
xor
jno
add
sub
mov
sub
and
imul
cmp
pop
pop
add
imul
cmp
xor
sbb
scas
shlb
xchg
mov
mov
mov
cmpsb
mov
mov
loope
stos
cltd
mov
mov
stos
les
nop
cwtl
shll
out
movsl
fsts
mov
add
sbb
jns
imul
push
gs
jbe
add
sbb
decl
ljmp
fistps
mov
enter
repz
hlt
ret
mov
out
aad
aam
add
sbb
pop
imul
cmp
pop
sub
and
icebp
in
not
scas
aaa
lret
xchg
nop
lahf
adcl
out
xchg
xchg
movsl
scas
movsb
test
mov
mov
mov
xlat
cwtl
xchg
cmpsl
fnsave
in
rolb
push
aaa
lods
jmp
lock
out
loopne
into
popf
lret
jecxz
loopne
std
loope
ret
into
in
sti
mov
mov
repz
cld
hlt
aad
repnz
inc
jp
cmp
dec
jnp
push
push
add
insl
outsl
xor
popa
pop
and
dec
sbb
and
sbb
dec
cmp
ds
ds
pop
data16
outsb
pop
and
inc
dec
add
imul
or
add
es
je
outsb
pop
xor
sbb
add
xlat
enter
out
mov
cltd
call
rol
mov
jmp
mov
fcmovnb
icebp
rcr
xchg
mov
test
clc
jecxz
stc
xlat
iret
or
neg
incl
mov
out
lahf
flds
test
mov
scas
xchg
mov
xchg
mov
jmp
std
cwtl
lahf
mov
lcall
xchg
xchg
rclb
mov
test
pop
inc
pop
js
push
cmp
das
dec
jbe
cmp
push
inc
push
inc
das
cmp
dec
jg
aas
dec
sbb
pop
xor
push
push
pop
push
push
adc
add
pusha
dec
jge
gs
dec
push
add
adc
jp
insl
or
das
cmp
jno,pn
pop
sub
jne
das
or
imul
cmp
adc
bound
or
pop
add
or
cmp
xor
wbinvd
push
inc
or
cmp
jb
cmp
xlat
lods
sbb
ret
mov
out
lret
aam
test
jecxz
call
nop
mov
rcr
call
fldcw
xchg
sti
into
jmp
clc
out
out
sar
rorb
clc
int
xchg
sahf
fcmovnu
sbb
std
xchg
jmp
xor
xor
call
loop
ror
fninit
push
aaa
gs
cmp
sbb
mov
test
mov
rcrl
inc
xor
je
and
xor
inc
jg
jb
push
inc
and
adc
push
xor
das
and
sbb
or
inc
gs
addr16
and
sub
push
push
push
sbb
pop
xor
xor
and
lret
mov
mov
add
add
sbb
das
sub
movq
pop
inc
and
es
adc
jns
add
cld
lcall
les
push
aaa
dec
pop
arpl
and
out
int
shl
rcrl
lods
std
test
mov
fcmovnbe
cwtl
test
add
pop
jae
push
inc
push
jne
jb
jnp
sub
dec
aaa
sub
aaa
mov
dec
lret
aad
out
shl
mov
lea
cltd
lock
ljmp
or
or
adc
inc
dec
jnp
cmp
add
ret
enter
call
mov
xchg
nop
and
jp
jae
push
aaa
cmp
arpl
ja
dec
and
jnp
popa
sub
aaa
push
xor
and
cmp
xor
push
adc
and
and
sbb
sub
aaa
dec
xor
xor
sub
js
insl
inc
add
push
aaa
sbb
xor
dec
and
insl
inc
sub
xor
push
and
outsl
inc
imul
xor
and
pop
popa
xor
popa
sbb
xor
xor
and
pop
popa
add
pop
mov
xor
es
xor
push
mov
fisubl
and
in
sbb
mov
pushf
xor
sub
test
mov
setg
cmp
push
jp
jb
into
pop
aam
and
jne
enter
loope
lds
rorl
inc
inc
and
xor
inc
shlb
gs
push
enter
jbe
xlat
lock
inc
push
pop
inc
lcall
mov
pop
jo
popa
add
insb
mov
outsl
xchg
enter
stos
or
cs
sbb
adc
addl
xor
sub
jl
setge
pop
lea
mov
sub
and
pop
lds
xchg
push
aaa
dec
or
aas
lods
xchg
and
add
orb
pushl
xor
es
gs
inc
sub
mov
mov
setge
add
push
pop
fisubs
inc
xor
decl
push
inc
sbb
mov
enter
and
hlt
mov
mov
or
incl
mov
jno
push
push
enter
jbe
xlat
lock
call
pop
cmpsb
mov
pop
shlb
popa
add
insb
mov
outsl
sahf
enter
and
sub
push
hlt
mov
cld
cmp
pop
jno
int3
inc
fsubrl
enter
int3
inc
mov
xor
sub
jl
setge
sub
pop
jmp
and
pop
icebp
dec
test
push
aaa
dec
or
aas
lods
shll
add
and
and
add
insl
cwtl
sub
cmp
pop
mov
xor
xor
arpl
push
in
pop
stos
dec
xor
xor
movsb
nop
sbb
aad
fcmovne
icebp
movzbl
push
dec
sub
mov
mov
setge
add
push
popa
mov
clc
mov
je
cmp
xor
pusha
arpl
dec
add
inc
push
aad
scas
pop
jno
mov
je
xchg
int3
pop
aad
enter
or
and
outsl
andb
xor
jo
mov
sbb
adc
iret
aas
xor
lods
pop
adc
mov
mov
cmp
decl
and
int3
shrb
push
aad
lock
inc
add
add
aas
sar
data16
mov
push
vmovntps
jns
xor
push
adc
push
daa
mov
popf
test
mov
sbb
stos
dec
aam
mov
popa
arpl
xor
int
add
add
jo
jbe
jne
out
adc
mov
loopne
gs
mov
inc
add
imul
sub
pop
jmp
mov
shll
dec
jns
jb
aad
iret
sbb
inc
rcl
xor
inc
rolb
fs
fdivrs
lods
test
dec
test
aaa
dec
or
aas
lods
bound
add
xchg
add
jp
jb
popa
mov
mov
and
add
je
imul
test
xor
es
call
rcr
dec
xchg
or
cmp
xlat
and
push
out
call
les
idivb
inc
push
jbe
shl
jp
aaa
int3
inc
and
xor
adc
test
es
mov
jg
pop
ss
call
push
inc
xchg
pop
adc
lods
outsb
fdivrp
decl
add
adc
inc
hlt
into
cwtl
addb
js
cmp
out
xor
xor
negb
push
aad
mov
mov
pop
std
dec
test
popf
pop
iret
xlat
fstps
pop
or
push
push
cmp
mov
call
lock
mov
iret
inc
out
movl
shll
sbb
insl
inc
andb
pop
lock
insb
or
push
inc
mov
xlat
pop
mov
mov
call
les
lods
enter
xlat
iret
pop
push
cwtl
pushf
orl
jns
test
in
dec
mov
add
push
pusha
pusha
xlat
je
pushl
mov
fmulp
jne
iret
jge
fidivs
out
mov
daa
xlat
mov
ror
fnstenv
insb
sar
jg
mov
xor
jnp
je
out
lock
push
pop
stc
je
iret
pop
out
cmp
das
lods
inc
mov
int3
jns
pop
leave
fisttpl
jg
fcmovne
fstl
data16
and
jne
jae
aad
cmp
mov
jnp
pop
inc
push
mov
iret
js
movsb
shlb
inc
ljmp
lock
push
lock
movsb
inc
js
pop
mov
jne
xchg
jnp
enter
repz
aas
lods
fs
xchg
shl
dec
popa
push
int3
inc
and
clc
lods
add
lret
fdivrs
xor
jg
jno
test
xor
test
add
jne
jbe
jne
icebp
hlt
lods
sub
adc
ret
push
push
mov
adc
int
pusha
mov
out
ret
push
inc
mov
xor
mov
dec
lcall
mov
into
add
cmp
into
dec
mov
sbb
rcrb
bswap
mov
stos
in
cmp
xor
sbb
aaa
xor
cmp
orb
jge
movsl
and
mov
sub
in
and
xchg
je
cmp
aaa
sbb
jg
stos
fmuls
daa
aas
mov
adc
xlat
lock
shlb
fbstp
popa
mov
sub
jb
jne
mov
dec
mov
inc
xor
daa
lret
sbb
push
jge
enter
inc
cmp
lock
pop
inc
sbb
pop
aaa
sbb
xchg
imulb
es
clc
xor
enter
jne
or
inc
xor
out
sbb
sub
jg
adc
pop
xor
mov
or
inc
sub
jp
add
sub
adc
mov
js
xor
call
into
xor
leave
sahf
lret
test
es
adc
lock
pop
inc
cmp
es
roll
jo
dec
sbb
inc
sbb
cld
cmp
jno
int3
add
mov
lods
loope
insl
xor
xlat
adc
add
sbb
in
adc
mov
push
fidivs
mov
in
movsb
pop
popa
add
sub
add
push
xchg
cmpsb
xor
dec
mov
xor
xchg
lock
jb
fincstp
mov
adc
dec
jae
inc
cmp
cmp
add
sbb
push
sbb
test
out
call
dec
dec
jae
cmp
add
fdivrp
cmp
dec
test
lods
enter
fisubrl
mov
ret
daa
daa
mov
lods
out
pop
adcl
push
mov
lahf
clc
add
inc
call
outsb
mov
jg
shrb
or
iret
ljmp
add
addl
mov
nop
sbb
and
ret
dec
xor
movsl
shlb
cmp
xor
test
fistpl
or
mov
je
in
cwtl
lods
or
push
aaa
mov
pop
add
inc
push
inc
push
pop
dec
pop
sbb
xlat
xor
adc
rcrb
mov
xor
cmp
jno
add
push
mov
iret
js
and
adc
fistpll
popa
rorb
add
pushf
andl
loope
and
add
push
mov
aas
lahf
jbe
push
pushfw
xchg
jbe
cmp
inc
or
xchg
push
adc
add
inc
into
jo
xor
jo
adc
scas
xchg
inc
dec
add
mov
pop
and
rcrb
xor
addl
arpl
pop
ficoml
rcl
mov
in
add
sub
xlat
inc
or
xor
cmpsl
push
adc
inc
lods
test
enter
jno
xchg
or
inc
add
pop
push
xchg
mov
sub
and
mov
lret
nop
xor
mov
mov
and
add
add
sub
ds
orb
das
and
jbe
jb
sbb
int3
iret
js
and
out
mov
xor
es
cmp
test
insb
outsl
lea
push
arpl
add
mov
sub
mov
int3
add
lea
mov
test
jo
mov
xchg
ror
push
inc
lods
fcoms
shrb
inc
sub
mov
shlb
add
inc
add
mov
icebp
add
xor
daa
and
pop
test
xor
mov
mov
xor
add
dec
pop
mov
mov
pop
pop
and
sub
inc
jae
mov
add
and
jmp
mov
sbb
sbb
mov
es
push
xchg
cld
lock
lods
enter
xor
stos
imul
push
dec
sub
jns
and
add
mov
loope
movl
enter
jae
mov
insl
push
cmpsl
pop
lret
sbb
jne
mov
decl
aas
dec
or
test
inc
lods
fs
mov
aad
jae
jno
mov
pushl
add
add
loopne
add
dec
scas
lods
inc
lock
jmp
fildl
daa
and
aad
push
xor
pop
xor
and
sub
sub
inc
xor
dec
push
add
sbb
and
adc
mov
insb
and
sbb
mov
dec
fiaddl
add
adc
push
pop
adcl
push
pop
xor
ja
xchg
add
adcb
mov
leave
sbb
push
push
xchg
xor
test
pop
inc
mov
sbb
mov
pushl
shr
inc
add
add
xor
xor
xor
adc
loop
xor
aaa
jno
jne
iret
cmp
mov
mov
xor
and
add
sub
aaa
push
jae
mov
add
push
enter
jae
movsl
bound
add
push
mov
xor
xor
inc
sbb
inc
and
mov
pop
mov
repz
adc
push
pop
mov
inc
xor
cmp
lcall
xchg
test
jb
sbb
mov
dec
jae
pop
iret
rcrb
add
or
test
xlat
xor
or
adc
xchg
xorb
and
call
into
jne
xchg
in
arpl
call
testl
fnstenv
adc
mov
mov
es
jne
test
mov
jmp
movsl
sti
out
lcall
fisttps
call
out
lcall
fbstp
call
out
xor
movsb
jb
xor
and
sbbl
cmp
push
mov
loop
xor
aaa
sub
clc
cmp
inc
adcb
mov
fdivs
cwtl
daa
sbb
jl
rclb
repz
mov
adc
inc
add
xor
ret
dec
xor
loop
xor
cmc
push
push
aaa
mov
mov
es
add
xor
inc
xor
adc
inc
insb
jp
dec
xchg
add
mov
cwtl
lods
test
push
aaa
mov
leave
iret
xlat
into
loop
add
int3
test
call
dec
add
lods
addr16
or
pop
inc
sbb
dec
mov
add
add
inc
inc
sub
xor
addr16
add
push
add
clc
ret
jge
int
in
shr
push
aaa
dec
mov
daa
and
ljmp
addr16
mov
xor
jbe
xor
mov
pop
jno
shl
add
xchg
movsb
pop
call
in
mov
inc
jo
jne
xchg
add
jp
inc
inc
fldcw
fs
push
jae
push
into
adc
movsb
shlb
ret
dec
xor
xor
call
sbb
movb
jmp
add
xor
leave
jmp
icebp
or
inc
aaa
sbb
enter
inc
push
add
or
xlat
push
sub
aad
jg
jno
mov
pop
and
inc
lcall
loopne
adc
sbb
xor
mov
or
cmp
jl
bound
add
inc
sub
xchg
or
add
pusha
jg
testl
xor
lods
insb
clc
mov
jns
sahf
xor
jbe
call
inc
rcrb
bswap
incl
mov
and
aad
iret
sbb
xlat
mov
add
aad
mov
mov
jne
push
call
mov
inc
xor
arpl
cmp
xor
dec
xor
inc
shlb
adc
ret
popa
enter
jbe
jae
jecxz
add
lcall
or
jmp
inc
cmp
test
push
aam
jmp
add
bound
or
add
sbbb
add
cmp
lods
sub
add
inc
add
jns
rol
daa
xor
ss
dec
jne
pop
ret
jg
fcmovne
aad
mov
adc
and
lea
aaa
mov
inc
and
add
xchg
lds
push
aaa
dec
popa
lea
and
xor
sbb
int3
push
aaa
dec
popa
push
fidivs
icebp
pusha
jbe
push
addr16
or
dec
mov
inc
mov
pmaddwd
push
mov
add
sbb
jns
mov
adc
ficoms
xchg
mov
inc
mov
xor
push
adc
pop
dec
pop
or
movsl
inc
fdivrp
push
push
lea
jmp
mov
jmp
pop
js
add
call
xlat
idivl
sbb
mov
add
vdivps
cmp
inc
and
add
adc
mov
inc
xor
pop
inc
sbb
call
in
mov
shlb
add
mov
cmpsl
xlat
das
mov
jmp
sub
fdivrp
mov
ret
pop
jns
cmp
jbe
jge
repnz
lea
fmull
jge
pop
and
enter
in
cmp
pop
add
xor
lcall
mov
xor
mov
dec
push
sar
mov
iret
fcmovnu
pop
and
addr16
add
push
mov
push
mov
fisttpl
jg
fcmovne
aad
mov
andb
push
ret
dec
xor
aaa
adc
push
daa
lea
jmp
fbstp
dec
call
lods
mov
inc
add
fldenv
mov
int3
fadds
pop
and
mov
sbb
cs
vpandnq
and
sub
sub
out
and
mov
test
sarl
mov
flds
sbb
dec
mov
inc
sbb
lods
cld
out
push
jp
xorb
and
pop
popf
xorl
iret
iret
xlat
jbe
jnp
sbb
sub
adc
ret
jge
int
in
sbb
pop
dec
xor
pop
mov
and
aad
cmp
xor
mov
inc
or
xor
mov
pusha
movsw
stos
jmp
adc
pop
inc
mov
into
cli
fadds
sbb
pop
scas
xchg
inc
dec
add
jae
sub
inc
push
mov
add
xor
dec
add
sbb
icebp
add
data16
add
sahf
mov
lods
scas
and
add
mov
int
int3
fcomps
pushf
pop
call
lods
aaa
lret
inc
cmp
dec
sbb
fchs
aaa
dec
movl
sub
movsl
adc
sbb
fiadds
rolb
and
and
jae
jnp
call
dec
es
aaa
mov
sub
sbb
subl
mov
jnp
sbb
adc
mov
aaa
dec
or
inc
and
out
call
ret
dec
xor
stc
ljmp
in
push
fbstp
popa
call
movsl
shlb
mov
add
xor
stos
mov
mov
sub
dec
xor
mov
cmp
xor
adc
inc
mov
fwait
hlt
js
leave
lock
dec
int3
jne
ljmp
sbb
and
inc
inc
ja
mov
and
shr
push
lea
xor
xor
ficoms
add
inc
mov
enter
jnp
scas
add
test
call
push
sbb
push
aaa
dec
fcos
add
sub
sbb
or
dec
mov
and
push
lods
inc
mov
add
out
push
fucomp
inc
imul
push
push
xor
sbb
ret
dec
xor
xor
es
fdivl
pop
inc
push
mov
fidivl
push
cltd
inc
add
jg
add
int
push
mov
ret
rcr
out
add
arpl
leave
lock
mov
test
add
pop
sub
add
jmp
jb
imul
aas
scas
xchg
and
add
ret
or
xor
sbb
outsb
jbe
pop
inc
adc
jge
daa
and
jae
call
mov
pop
push
cmp
callw
ss
mov
es
inc
loop
fst
adc
sub
and
or
push
ds
adc
adc
je
icebp
push
adc
push
mov
adc
add
add
adc
leave
push
and
lret
fisubs
or
and
aaa
mov
nop
es
mov
xorb
dec
xor
sbb
add
push
mov
adc
leave
jge
add
or
ja
sub
mov
add
lock
les
dec
lret
mov
mov
lods
out
sub
mov
dec
mov
xor
inc
sbb
jne
lret
push
dec
or
xor
push
sub
aad
fmull
sarb
out
xor
nop
xor
mov
mov
fisubs
add
pusha
mov
sbb
jb
adc
xor
outsb
es
movsl
shlb
push
jb
ds
lods
inc
and
test
ret
jne
sub
jmp
and
lea
sub
test
sbb
and
add
inc
or
leave
leave
or
inc
test
pop
mov
xor
xor
stos
gs
dec
sub
cmp
cpuid
mov
int3
iret
movsl
bound
push
into
adc
sbb
je
test
ret
jne
daa
fldt
jge
adc
sbb
and
add
mov
add
adc
pop
gs
dec
movl
or
cmp
les
sub
xlat
add
and
cmp
xor
xor
test
add
inc
push
mov
pop
pop
jne
sub
push
mov
outsb
or
pop
sub
xor
adc
mov
push
and
or
push
sub
or
adc
pusha
mov
push
fmul
fstp
ljmp
adc
push
adc
jmp
fld
daa
and
andl
es
mov
xor
xor
dec
pop
xor
sahf
test
ret
jne
daa
or
sub
push
fbstp
or
adc
call
cmpsl
push
adc
call
stos
xor
mov
add
push
xchg
add
and
mov
psubusw
test
insl
inc
adcb
mov
sub
and
adc
mov
jno
inc
xor
xor
or
adc
mov
xor
fcoms
sub
add
fs
xor
xor
dec
sub
mov
xlat
mov
pop
inc
mov
jne
fbstp
sub
xlat
pop
push
aad
mov
xor
mov
jo
push
inc
add
cld
cld
es
jne
lret
jb
into
adc
cwtl
add
cld
mov
pop
xor
insl
gs
push
adc
adc
lret
pop
gs
and
cmc
xor
xor
push
leave
mov
sbb
or
dec
mov
and
sub
push
adc
xor
inc
add
fbstp
sbb
data16
movsl
and
sbb
jp
add
lock
mov
and
and
and
lea
adc
dec
aas
push
pop
imul
movsb
enter
pop
or
dec
add
inc
inc
sub
xor
inc
cmp
pop
and
cmp
inc
and
adc
rcrl
and
pusha
inc
and
adc
mov
add
insb
or
push
push
ljmp
sbb
test
ds
fincstp
pushl
call
mov
aas
xor
fidivs
ret
dec
xor
inc
adc
into
mov
sbb
inc
push
inc
push
insl
ljmp
in
cmp
popa
jns
push
add
shlb
scas
mov
jbe
adc
je
jae
call
pop
pop
mov
sub
fs
add
sub
iret
cmp
xchg
add
jp
and
and
pusha
xlat
xor
adc
jp
and
add
loop
push
fnstcw
xchg
dec
nop
adc
sbb
dec
sbb
stc
dec
es
enter
stos
fisttps
or
icebp
bswap
add
ds
arpl
add
adc
add
push
icebp
xadd
jno
jge
pop
rcll
cmp
adc
into
ljmp
push
jb
push
lods
aaa
ds
call
sahf
in
sbb
das
xchg
xor
xor
call
or
add
ret
dec
xor
ds
pop
rcr
jne
icebp
mov
xchg
mov
inc
and
inc
sbb
es
mov
pusha
and
js
leave
ret
sub
mov
es
and
push
xchg
lods
add
push
gs
rep
pop
push
or
je
mov
add
mov
sahf
add
pop
jne,pn
test
in
jp
inc
inc
pop
add
rcrb
insl
xor
xlat
cmp
pushf
xorl
mov
call
adc
dec
incl
movsl
mov
adc
hlt
xchg
test
inc
adc
xchg
inc
adc
subb
aaa
mov
call
sbb
push
inc
push
aaa
dec
icebp
incl
xlat
xor
adc
ret
cmp
into
adc
xchg
add
mov
es
add
mov
xor
pusha
in
mov
sub
cmp
xor
dec
mov
fnstenv
adc
jmp
int3
inc
and
push
or
idivl
inc
iret
xorl
and
rcrb
ret
vpandnq
jo
xor
sbb
call
add
push
inc
sbb
inc
cmp
mov
xor
lock
out
jne
inc
add
outsl
mov
inc
fmul
lods
imul
lret
pop
ret
mov
lods
rclb
ljmp
jl
xor
lock
sub
jne
dec
lret
add
jne
dec
mov
imul
pop
je
hlt
adc
ret
xlat
adc
adc
nop
mov
jb
movsl
fcos
je
sub
jp
and
and
add
data16
add
add
sub
xorl
loopne
add
adc
fbstp
popa
incl
xlat
jae
test
insl
sbb
mov
mov
pop
mov
mov
or
jo
mov
mov
inc
mov
adc
add
cmpb
mov
cmp
fsts
icebp
addb
call
jg
call
lods
inc
inc
into
adc
jle
ret
push
mov
push
mov
add
sbb
shl
int3
and
mov
ljmp
arpl
pop
mov
mov
add
mov
mov
add
scas
enter
mov
add
sbb
shl
int3
inc
aam
testl
xor
daa
and
lods
loope
mov
or
push
pop
cmp
xor
cmp
add
into
sahf
addb
mov
dec
mov
fsts
ljmp
pop
pop
addr16
xlat
stos
fs
push
xchg
add
jp
ss
jmp
mov
push
sbb
clc
pop
jge
pextrw
lea
mov
insl
inc
adc
inc
pop
mov
push
sub
jne
mov
mov
imul
jb
lods
inc
mov
pop
fcmovu
adc
jne
imul
push
call
mov
sti
push
jp
cmp
loopne
cmp
in
jae
jo
cmp
inc
fistps
shlb
dec
push
jo
push
and
adc
aam
ret
inc
int
sub
add
aas
adc
mov
sbb
imul
test
cld
imul
pop
daa
lods
and
jp
std
sbb
iret
jo
jnp
adc
je
and
fxch
jo
jnp
adc
je
and
jmp
ffree
xor
lahf
sbb
aam
mov
daa
push
and
xor
sbb
iret
jo
out
sub
sbb
iret
sbb
sub
pusha
push
pop
push
iret
jo
in
mov
xchg
or
xchg
imul
lea
fldt
cmp
lcall
pop
sbb
sbb
aad
mov
pop
popl
popa
repnz
xchg
imul
push
iret
jo
imul
arpl
sbb
jmp
or
ret
sbb
out
add
jmp
mov
dec
pusha
dec
sbb
and
jg
out
pop
and
cmp
aam
mov
pop
popl
mov
incb
dec
adc
bound
adc
fisttpl
sbb
shr
cwtl
or
push
lahf
cwtl
ds
fwait
outsl
xchg
push
lahf
pop
xor
popf
jecxz
xchg
cmp
das
and
leave
jno
jb
cmp
xchg
cmp
xchg
pop
sbb
push
sbbl
mov
test
incb
xchg
adc
jle
iret
jo
lcall
sbb
cmp
repnz
iret
jg
in
fstl
std
sbb
js
sub
add
std
sbb
and
jmp
test
ficoml
sbb
test
lea
adc
cmp
mov
shl
sub
jp
rcrl
aam
mov
ds
fs
in
aas
imul
dec
ja
inc
imul
fiaddl
ds
sbb
lock
push
jns
lahf
nop
jp
sbb
and
mov
sbb
xchg
push
shll
mov
pop
add
nop
pop
push
mov
jb
push
lahf
fstpt
dec
mov
mov
ds
sbb
jge
or
xchg
shl
jge
int
in
add
sub
popa
sbb
sub
push
or
inc
inc
sub
mov
call
aad
pop
pop
mov
fstps
call
mov
inc
pop
mov
sbb
cmc
adc
test
or
divb
push
pop
pop
mov
push
cmc
or
int3
lea
enter
pop
xor
pop
jl
jle
loopne
das
adc
movl
dec
adc
inc
pop
pop
jno
mov
pop
cmp
lea
xor
pusha
xlat
xor
rcrb
dec
fiaddl
add
ja
jp
ret
dec
pop
into
or
rclb
dec
test
je
push
sbb
add
repnz
pop
pop
fisubl
adc
mov
xchg
sub
pop
sbb
ljmp
popf
test
ja
das
mov
pop
mulb
sub
sub
cmp
jg
cwtl
int
push
adc
loop
nop
lahf
mov
out
push
adc
inc
scas
cmc
jnp
mov
add
xchg
imul
iret
repz
rcrb
mov
add
out
push
iret
sbb
sbb
pusha
push
inc
push
iret
jo
in
mov
xchg
pop
pop
lods
imul
loop
ret
ljmp
sahf
sbb
popa
imulb
fistl
cmc
stc
imul
jae
jno
sub
jbe
lcall
aas
jns
sub
ficompl
inc
test
pop
jmp
cmp
nop
jno
hlt
sbb
jnp
jno
push
sbb
add
aaa
test
jo
inc
xlat
fstpl
ret
adc
sbb
das
pusha
add
repnz
cmc
sbb
scas
pop
aaa
lods
and
imul
xchg
sbb
inc
hlt
test
nop
jp
out
push
aam
popa
insl
and
lahf
sbb
xlat
and
cmp
push
fistpl
adc
push
frstor
imul
fdivl
push
cmc
sbb
lock
adc
push
pop
mov
mov
add
mov
push
fadds
loop
cmpsb
dec
and
std
leave
or
push
pusha
imul
and
shlb
dec
jecxz
mov
sti
jge
dec
cli
lahf
sbb
lock
pop
enter
loope
lahf
sbb
aad
jecxz
inc
xor
add
imul
xchg
sti
push
push
mov
ret
rcr
mov
jle
gs
dec
test
shll
mov
inc
sbb
jo
popa
xor
es
inc
adc
sub
xchg
int3
mov
xchg
or
or
adc
inc
add
push
ds
xor
fnstcw
and
mov
filds
pop
sub
gs
sub
mov
jnp
xchg
fadds
sbb
sub
pushl
sub
and
push
jl
add
in
movl
xchg
int
in
push
aaa
dec
fnstcw
xor
dec
sub
sub
mov
into
lea
add
cmp
cmp
xor
jne
enter
and
push
aaa
dec
xor
dec
sub
sub
mov
into
lea
add
in
and
dec
xor
pusha
mov
call
or
rcl
lock
pop
inc
add
add
lea
nop
xchg
and
add
adc
xor
adc
inc
sbb
lock
xor
movsl
pop
lea
ret
dec
xor
xor
adc
cmp
es
jl
bound
decl
inc
rclb
dec
xor
jecxz
shlb
push
push
lea
and
push
pop
das
jne
adc
scas
xchg
inc
jne
lea
mov
mov
pushf
enter
stos
rcll
and
adc
iret
icebp
jne
mov
dec
test
mov
xchg
scas
lret
xlat
fxch
mov
outsl
lods
ss
adc
sbb
insb
inc
xor
mov
mov
call
sub
jb
popa
lea
js
fs
jae
lea
and
push
pusha
mov
push
sbb
outsl
mov
push
fisubrl
and
test
inc
add
imul
test
xor
es
cmp
lods
out
dec
xor
fs
push
mov
push
add
mov
sub
outsl
cmpsb
or
test
lea
inc
pop
fnstcw
push
xor
mov
les
lea
call
scas
xchg
inc
sbb
jno
push
mov
inc
or
fs
decl
test
push
fneni(8087
lea
and
xlat
mov
arpl
adc
lcall
mov
enter
mov
or
repnz
dec
iret
pop
ror
ret
inc
inc
adc
movl
fsts
test
dec
cmpsb
fildl
xor
daa
mov
int3
test
push
pop
xlat
dec
addb
adc
aas
xchg
and
inc
sbb
lea
mov
enter
jb
dec
mov
inc
pop
bound
ficoms
icebp
popa
cmc
aad
mov
inc
add
jne
daa
stos
inc
incl
pop
jecxz
enter
or
sbb
push
inc
push
mov
xor
into
xchg
jmp
lret
inc
ja
mov
dec
and
sub
int3
mov
adcl
push
call
leave
or
sbb
cmpsb
jbe
dec
xor
fldt
iret
icebp
fnstcw
mov
es
push
repz
and
add
mov
xor
adc
lret
inc
ja
mov
and
popf
gs
push
aaa
sbb
mov
lea
addr16
lea
and
test
jne
imul
add
push
cmpsl
push
adc
popa
lea
add
xchg
xor
lea
add
mov
repz
mov
dec
cmp
mov
mov
inc
and
adc
or
insl
jmp
stos
in
cmp
push
jg
pusha
and
push
leave
in
out
mov
xlat
fidivrl
xor
jge
es
xorl
and
jbe
adc
mov
add
push
ljmp
pushf
mov
xor
sub
das
call
jns
add
cmp
iret
sbb
test
jns
pop
insl
insl
jae
les
sbb
mov
loope
xor
inc
ficoms
jp
and
inc
xor
dec
and
test
ret
je
mov
pop
and
cmpsl
sbb
jge
aaa
mov
int3
iret
xlat
jbe
and
cmp
mov
add
call
f2xm1
sbb
adc
stos
iret
call
flds
xlat
mov
pop
lea
in
xor
xor
add
and
mov
xorb
xor
adc
cmpsl
sub
mov
add
enter
inc
mov
test
int
fnstenv
add
sbb
mov
xor
into
or
pop
icebp
jg
ljmp
jmp
shrb
and
cmc
shr
push
aaa
dec
bound
pop
sub
mov
push
xlat
fldcw
sub
jmp
add
add
cltd
and
add
enter
jbe
js
ficoms
scas
xchg
inc
or
xor
sub
xor
adc
lea
and
push
mov
mov
aas
pop
daa
or
test
inc
cmp
mov
mov
ret
and
rolb
mov
jb
add
jns
pop
leave
add
movsl
vpandnq
jle
or
push
dec
ss
into
jne
add
jo
push
dec
mov
dec
mov
inc
daa
xlat
push
sub
and
mov
pop
and
rolb
xor
or
mov
cmpsl
int
add
inc
push
inc
js
aas
rcrl
xor
jae
mov
mov
std
xor
sarl
into
dec
mov
push
xor
add
iret
js
out
cli
add
pop
leave
jmp
in
cmp
sub
lods
test
in
jp
imul
sub
mov
dec
xor
lock
sbb
and
cld
xor
je
dec
mov
xor
mov
je
jb
sub
jne
xor
jo
je
add
jne
push
test
xor
dec
xor
lret
aaa
int3
pop
xchg
fld
adc
inc
lret
sub
es
sub
add
imul
mov
enter
lods
aaa
dec
xor
mov
mov
mov
xor
leave
xor
call
aas
leave
jne
add
lods
and
mov
movsl
or
sbb
jae
mov
pop
cmp
xchg
inc
test
dec
pop
pop
cmp
cs
shll
dec
scas
and
mov
push
xor
jae
in
xor
push
inc
jge
aas
rcrl
lods
xor
and
xchg
xor
jb
movsl
push
xor
pop
add
sahf
pop
add
fnstcw
mov
shrb
mov
xor
pusha
js
fidivs
xchg
adc
inc
ficomps
xor
pop
sub
mov
sbb
leave
call
in
mov
shlb
inc
push
jl
rol
mov
add
dec
orl
repz
add
inc
adc
enter
mov
lods
and
push
icebp
es
lods
fdivp
xor
xor
call
fld
jns
mov
xor
je
fldcw
sahf
and
mov
add
adc
lods
aaa
dec
addr16
xlat
cmc
sbb
setg
add
push
mov
fcomps
and
test
dec
test
aaa
dec
mov
xor
into
fcomps
sbb
clc
mov
cmp
js
and
lea
mov
into
sub
and
nop
add
outsb
and
jle
mov
sbb
sbb
inc
outsb
or
dec
xor
and
xchg
xor
cmp
add
pop
sbb
inc
test
mov
mov
sub
jno
lcall
inc
add
dec
mov
fsts
and
xchg
test
pop
mov
xor
xor
add
adc
fbstp
or
cmp
adc
mov
cmp
xchg
adc
xor
xor
stos
cmpsb
incb
sbb
mov
add
pushl
stc
xlat
idivl
lea
add
mov
push
adc
fsts
and
xchg
test
and
mov
and
mov
inc
in
ljmp
sub
call
aad
adc
fs
pop
add
lcall
add
and
xor
js
jmp
add
ret
xlat
divl
mov
jg
out
call
scas
xchg
inc
dec
into
inc
aaa
mov
dec
cmp
popa
and
add
rorb
inc
call
lods
pusha
mov
mov
icebp
test
push
push
mov
add
stos
mov
pusha
data16
sub
xchg
add
jp
arpl
xor
pop
push
movsl
push
test
add
cmp
movl
add
fisubl
xor
fwait
mov
add
push
mov
inc
cltd
xor
sbb
mov
cmp
and
sbb
jno
test
enter
jae
movsl
arpl
push
lea
mov
adc
jne
jae
lea
outsl
mov
mov
cmp
sub
xor
out
arpl
add
inc
mov
add
mov
fnstenv
push
out
mov
add
jae
lods
out
push
push
dec
push
lea
and
xor
dec
add
ror
mov
call
addr16
xor
adc
lret
cmp
push
mov
pop
add
mov
push
fstpt
jne
test
adc
mov
popf
dec
or
pop
dec
into
je
cmp
dec
and
sbb
sbb
enter
jecxz
add
mov
or
xor
jne
push
call
lret
sbb
mov
fcomp
add
sbb
rclb
dec
mov
push
cli
pusha
sub
mov
test
xor
mov
outsl
scas
inc
mov
push
cmp
lea
xchg
dec
iret
mov
fisttpl
movsbl
lret
pop
clc
xchg
je
out
mov
leave
loope
cld
cmp
inc
add
pop
iret
dec
xor
xor
imul
pop
out
jl
jp
ds
fdivrp
call
xchg
lcall
xlat
lods
cmp
aad
mov
and
adc
pop
mov
iret
jle
pop
sub
and
lea
lods
enter
push
enter
inc
cmp
cmp
bswap
xor
xor
mov
inc
add
push
mov
into
xlat
test
adc
add
lods
rcrb
pushw
testl
scas
sub
jl
fnstcw
add
push
mov
jmp
jb
jne
insb
xor
xor
lret
and
cmp
fbld
sub
add
sbb
arpl
mov
adc
in
aas
jno
mov
sub
stos
dec
or
call
outsl
leave
icebp
cmp
jae
in
xor
fs
mov
leave
fcoms
inc
mov
popa
enter
or
daa
mov
mov
sahf
and
pop
xlat
fldenv
add
push
push
aad
or
xchg
sub
lods
dec
add
aaa
dec
mov
cmp
pusha
daa
and
mov
mov
mov
test
push
lds
sub
mov
xor
sub
filds
add
sub
mov
cld
mov
sub
sbb
push
filds
imul
dec
cmp
ret
dec
xor
mov
or
inc
add
mov
int
daa
and
add
and
add
jne
out
test
pop
mov
xor
xor
jne
mov
iret
lods
add
xor
push
sub
jl
addr16
je
arpl
pop
fcmovu
roll
push
aaa
dec
into
jne
mov
fsubs
add
dec
push
push
fbstp
popa
incl
xlat
cmc
movsb
shlb
jne
fbstp
lea
and
sbb
lcall
enter
inc
jl
into
jle
jmp
rclb
mov
fnstcw
push
daa
iret
mov
xor
sub
mov
lret
call
fisttpl
and
push
inc
mov
inc
xchg
add
jno
mov
into
das
add
enter
testl
fsts
lahf
adc
sub
inc
mov
sub
jle
pop
rolb
cmpsb
mov
lret
mov
sub
add
dec
adc
cmp
into
cmc
scas
add
vdivps
dec
and
sub
add
xor
jp
mov
fdivrs
xlat
push
sub
add
adc
in
repnz
je
in
cwtl
lods
adc
push
aaa
sbb
pop
cmp
lods
inc
clc
dec
test
and
xchg
xlat
pop
call
cmp
inc
nop
imul
xor
add
push
enter
mov
and
aad
ss
xor
and
scas
xchg
inc
bound
ficoms
ficoms
aas
or
lea
js
movsb
lock
out
push
ret
mov
lea
push
decl
adc
add
or
aas
lods
aas
and
add
lea
outsl
mov
inc
bound
jb
and
jne
push
mov
push
push
add
fbstp
mov
inc
fdivrp
call
lock
xor
loope
loopne
sbb
in
pop
shrl
xor
insl
into
add
add
enter
inc
imul
lea
push
xor
adc
add
pop
cmc
adc
lods
out
aas
and
jne
add
mov
fcmovu
call
hlt
cld
aad
add
push
mov
xor
dec
adc
pop
iret
sbb
inc
jo
dec
and
xchg
adc
cmpsl
mov
fstpt
test
and
out
jb
rorl
xor
pop
push
out
pop
ret
dec
xor
mov
pop
or
addr16
mov
int3
iret
xlat
jbe
mov
xchg
push
aaa
dec
mov
andb
insl
test
and
sbb
jno
dec
mov
dec
pop
add
test
jecxz
jp
push
mov
pushl
push
push
int3
jne
or
dec
and
fisubrs
lock
aas
leave
call
jle
pop
rolb
cmpsb
sub
push
lds
into
push
add
fnstcw
mov
adc
mov
mov
xor
sub
add
add
or
mov
cwtl
lods
test
push
aaa
sbb
bound
mov
inc
add
jns
xor
mov
inc
add
movsb
xor
adc
movsl
and
sbb
jp
mov
jmp
and
ret
dec
xor
push
and
and
dec
xor
and
sub
and
pushl
xor
jbe
dec
jp
and
add
call
scas
xchg
cmp
mov
cmp
push
sub
mov
jl
and
fldcw
test
inc
add
add
into
sub
and
nop
add
outsb
and
jle
jmp
arpl
inc
outsb
jne
fucomi
cmp
and
xchg
xor
fwait
and
xor
stos
push
and
inc
test
and
inc
adc
jle
mov
and
jbe
je
or
ja
mov
cmp
enter
lea
aaa
sbb
jo
push
xchg
add
ds
out
xchg
adc
xor
xor
xor
pop
jbe
mov
shlb
jo
scas
gs
push
jl
aad
aaa
inc
mov
xor
sub
inc
add
mov
iret
add
xor
and
aad
adc
shll
test
inc
add
add
xchg
xor
sub
add
lods
inc
outsb
adc
push
jo
into
icebp
cmpsb
pop
sub
mov
pop
sbb
icebp
mov
sub
ds
daa
and
ljmp
sbb
push
fs
dec
test
leave
cmc
adc
lock
xor
jne
dec
lret
jp
dec
xor
add
push
adc
push
add
mov
rclb
out
aam
enter
daa
fsubs
ja
add
mov
insb
outsb
cwtl
daa
jp
in
addl
mov
xor
es
push
jae
push
fbstp
popa
call
dec
dec
lea
ret
dec
xor
mov
pop
or
mov
mov
sub
and
lea
dec
xor
mov
xchg
ret
es
jno
jbe
arpl
out
lea
push
int3
and
lea
cmpsl
xlat
dec
mov
jmp
or
fdivrp
cmp
dec
cmp
inc
mov
and
mov
xchg
dec
aaa
dec
xor
jbe
push
and
pop
lods
and
push
aaa
ret
je
add
movsl
mov
adc
lods
inc
call
push
int3
and
test
xor
jge
pusha
je
arpl
pop
popa
add
sub
cmpsl
pop
ret
mov
into
push
test
aam
inc
mov
jge
inc
ds
jno
jne
sbb
mov
dec
lret
mov
in
sbb
pop
stos
fistpll
jbe
call
or
mov
xchg
add
xor
jbe
mov
int3
mov
aaa
dec
xor
gs
add
inc
dec
xor
lds
cmp
push
xchg
xor
or
add
mov
adc
adcl
lea
or
inc
jnp
sbb
add
adc
into
xchg
sub
mov
fwait
xor
es
cmp
mov
adc
test
inc
add
mov
fadd
sub
add
inc
sar
pusha
iret
mov
pushf
orl
xor
sub
jp
data16
mov
cmp
clc
daa
and
push
int3
je
xor
orl
add
push
push
jle
shl
arpl
mov
pushf
xorl
call
test
and
stos
add
adc
push
mov
call
mov
or
mov
dec
adc
mov
test
inc
daa
stos
push
and
icebp
dec
mov
push
mov
xor
pop
add
je
push
outsl
mov
mov
adc
push
push
jbe
shl
arpl
mov
pushf
xorl
call
test
and
stos
add
adc
push
mov
call
mov
or
mov
dec
adc
mov
test
inc
and
icebp
fdivl
fiaddl
add
mov
fimuls
mov
aaa
dec
push
cmp
aas
lods
mov
add
ds
data16
pop
pop
sbb
je
daa
cmp
es
shll
or
push
es
mov
jb
mov
add
outsl
inc
push
or
xor
stos
xchg
and
sbb
jb
mov
xor
fs
pop
add
je
dec
addr16
jne
pop
pusha
shlb
add
lcall
mov
add
mov
icebp
cli
push
sub
mov
int3
jbe
fsts
and
hlt
dec
sub
mov
je
sub
sbb
jg
adc
adc
sbb
pop
mov
pushf
or
pop
and
je
or
dec
jmp
mov
or
push
and
jae
and
add
and
xchg
cmp
add
jp
xor
pop
gs
pop
addr16
or
or
icebp
add
rclb
repz
mov
sbb
jl
pop
sbb
rcrb
push
add
gs
inc
icebp
add
push
lock
xor
sub
lock
inc
add
out
dec
xor
int3
mov
decl
push
aad
mov
cmp
test
insb
pop
push
jl
mov
push
push
and
jae
lea
mov
iret
ror
add
pop
ret
and
jae
cld
inc
es
jle
jne
inc
test
sarl
js
pop
jmp
sarb
insb
outsb
loope
je
in
cwtl
lods
add
push
aaa
and
add
xor
movsb
add
out
push
ret
dec
xor
fidivs
lea
mov
dec
into
dec
add
cmpsb
call
cmp
es
iret
xlat
fsts
shll
not
dec
or
lods
hlt
push
out
pop
sub
xor
mov
add
sbb
push
jge
aas
inc
xor
fcmovne
arpl
and
ja
or
test
es
pop
lea
mov
inc
jl
mov
out
pushl
movsl
inc
xor
mov
decl
cmp
ret
je
fs
lcall
aas
mov
daa
and
xchg
hlt
fs
enter
aas
xor
dec
jl
jne
sbb
jle
ss
pop
pop
mov
lcall
pop
or
push
mov
iret
add
xor
sbb
inc
push
leave
dec
xor
mov
aam
fs
aad
aaa
dec
mov
arpl
push
dec
mov
dec
xor
mov
cmp
pushf
orl
xor
addr16
fs
push
xchg
fcom
lods
enter
inc
enter
movl
enter
jae
lods
out
test
sbb
mov
lock
test
in
jp
jb
fnstenv
mov
decl
pop
mov
xor
xor
add
inc
mov
mov
iret
js
movsb
fdivr
out
push
mov
mov
xor
insl
inc
test
and
arpl
decl
inc
sarb
mov
je
xlat
testl
lods
fs
lea
inc
push
pop
dec
mov
fnstenv
mov
aas
pop
daa
or
test
inc
jne,pt
jne
xchg
xor
jp
mov
into
dec
pusha
shlb
mov
mov
int3
inc
popa
mov
cmp
ret
mov
test
dec
adc
jne
sbb
cs
ss
into
jne
mov
fcoms
xor
add
sub
les
rclb
jl
and
mov
mov
arpl
arpl
push
lea
mov
lock
jne
and
add
out
clc
aad
daa
pop
jno
mov
daa
mov
jb
aad
iret
mov
adc
jo
fldenv
fs
and
dec
inc
ror
dec
add
js
into
and
and
inc
cwtl
jo
pop
or
sbb
dec
lret
sbb
scas
aad
sub
push
loopne
iret
or
sub
mov
int
add
inc
push
jl
clc
mov
mov
jecxz
lock
lods
aaa
dec
xor
mov
lea
f2xm1
mov
lods
out
jge
fld
notb
xor
int3
iret
xlat
jp
cmp
gs
mov
enter
enter
stos
popf
add
mov
mov
fdivs
movsl
mov
dec
mov
fistpll
xor
test
movsl
xor
lea
or
inc
xor
jne
pop
jo
aad
inc
dec
xor
sbb
cs
sub
sub
mov
cmp
adc
jl
popa
sub
or
fldt
adc
addl
mov
xor
es
push
jae
xor
add
fistpl
sbb
inc
add
nop
jg
xor
cs
sbb
das
lods
ss
xor
and
add
ss
xor
mov
lock
pushl
jb
xor
xor
add
shr
pop
ss
pop
popa
mov
cmp
sbb
dec
filds
push
add
lea
outsl
mov
inc
inc
lods
jne
inc
test
ret
dec
hlt
mov
sub
and
and
int3
iret
js
fs
ljmp
enter
pop
jno
mov
daa
mov
push
push
jge
mov
mov
fcmovu
call
mov
mov
sub
and
adc
xlat
testl
lods
pop
in
lcall
outsl
fisubl
mov
iret
iret
xlat
jbe
inc
cld
icebp
pop
mov
push
mov
iret
daa
mov
shlb
mov
pushf
push
xchg
call
mov
mov
ret
pop
mov
xor
xor
add
inc
mov
mov
mov
fcmovu
call
add
ret
dec
xor
fidivs
xorl
lock
fcmovnu
incl
xlat
inc
mov
jmp
lods
into
decl
inc
mov
mov
jb
cwtl
mov
cmp
push
outsl
inc
or
mov
inc
xor
fs
pop
lret
fsub
xor
mov
mov
jno
sbb
test
jle
movsl
imul
cmp
xchg
inc
dec
into
inc
fildl
call
xchg
add
jp
mov
int
int3
pusha
xlat
push
rol
inc
loope
add
push
enter
and
and
aam
enter
inc
int3
xlat
xor
inc
dec
mov
pushl
test
jae
call
lods
jne
inc
test
sarl
js
mov
add
mov
or
add
out
loop
cmp
inc
cmp
cmp
mov
rcrl
ret
jb
scas
fwait
inc
inc
fiaddl
mov
cmp
insl
mov
sub
pop
mov
cmpsl
int
add
inc
push
jl
rol
mov
add
scas
xchg
dec
xor
add
out
inc
adc
pop
sub
je
je
into
fildl
add
lret
push
adc
shlb
fsts
dec
gs
mov
xor
pop
sub
inc
add
xor
xor
lods
test
inc
add
add
imul
int
xor
mov
notb
inc
lcall
jg
jge
pop
fadd
push
gs
stos
enter
xor
sub
test
and
ja
add
test
and
dec
adc
jle
xor
sbb
inc
fisttps
or
daa
and
xchg
cmp
push
aaa
add
or
je
fildl
adc
inc
adc
sub
mov
dec
and
xor
gs
fsubs
jb
movzwl
and
aad
enter
pop
and
xchg
add
dec
into
sarl
cmp
add
dec
into
sarl
inc
and
adc
add
pop
add
clflush
dec
adc
es
sbb
scas
movsb
cmp
out
xor
stos
bound
and
shll
and
scas
push
and
icebp
or
aad
mov
jo
mov
icebp
js
aad
mov
inc
sub
mov
call
mov
fxch
jle
sbb
rcl
enter
mov
xlat
fldenv
add
sub
and
stos
inc
and
sarl
es
shlb
repz
dec
sbb
je
and
dec
dec
xor
call
cltd
jne
xor
mov
add
inc
lds
xor
je
outsl
mov
jg
push
and
xchg
cmp
outsb
add
add
jp
add
hlt
cmp
loope
adc
stc
mov
lods
out
add
pop
inc
ljmp
pop
shll
or
jb
lods
inc
outsb
adc
es
inc
and
lret
dec
filds
jne
xor
push
addb
or
dec
push
insl
ljmp
in
dec
push
aaa
dec
addr16
pop
pop
movsl
push
lea
mov
sub
icebp
and
mov
sbb
ja
inc
loope
outsl
mov
hlt
jne
cmp
add
fiadds
or
dec
fsts
fimuls
aad
popa
sbb
je
fdivrs
xor
adc
test
daa
sub
push
mov
lods
test
push
cmp
fs
mov
call
adc
testl
push
int3
jne
or
imul
stos
push
icebp
pop
loopne
push
enter
dec
jae
es
leave
ficoml
rcr
sahf
xor
xor
jno
or
out
lea
addr16
xor
nop
cmp
inc
sub
pextrw
cmp
aas
lods
lret
and
add
add
push
mov
xor
es
loopne
mov
daa
mov
push
fdivrp
incl
mov
push
aaa
and
inc
mov
mov
add
sub
daa
xchg
fstps
push
lea
sbb
mov
jno
inc
cld
jle
mov
sbb
outsl
scas
and
push
mov
call
inc
add
ror
pop
cmp
out
test
inc
add
pusha
sbb
movsl
mov
adc
daa
lret
ret
dec
lock
jne
and
add
out
adc
adc
iret
icebp
movzbl
sub
and
mov
lock
test
in
jp
jb
fsts
fs
and
ldmxcsr
repz
scas
popf
and
add
lcall
mov
fnstenv
inc
in
push
je
mov
xlat
sub
test
pop
mov
xor
xor
aam
int3
test
scas
enter
jbe
rcrb
add
nop
add
test
test
inc
inc
lods
out
call
scas
xchg
dec
cs
mov
adc
mov
xor
jb
sar
lods
aaa
dec
inc
add
ja
or
aad
xor
xor
push
aad
jge
mov
mov
in
and
and
mov
add
shl
pop
mov
dec
and
insb
call
sub
idivl
xor
jbe
sbb
jno
push
dec
int3
inc
rolb
mov
iret
js
push
lock
pop
mov
mov
cld
int3
and
test
dec
test
lods
enter
int3
inc
aam
xor
adc
lcall
jo
xor
push
lret
push
int3
jne
or
dec
xor
xor
push
icebp
ja
sub
aas
fld1
outsb
jno
es
pop
rolb
ret
fbstp
sub
ja
and
inc
add
into
mov
lds
sub
inc
xchg
push
ret
je
mov
and
pop
lret
mov
push
mov
nop
push
enter
mov
mov
loopne
inc
mov
divb
xor
fs
mov
xor
mov
inc
mov
stc
or
push
aaa
sub
inc
test
add
add
xchg
cmp
jne
sahf
notb
sbb
mov
scas
xchg
add
push
mov
mov
jb
mov
xor
inc
test
cmpsb
mov
push
ret
je
mov
add
and
pop
jmp
into
add
jbe
nop
jle
add
jg
inc
test
out
xor
push
mov
popf
sbb
mov
jo
xor
fs
jae
add
xor
ja
es
mov
stc
mov
mov
test
add
add
xchg
fndisi(8087
dec
xor
jne
sahf
scas
roll
sbb
mov
xor
arpl
mov
dec
mov
mov
inc
mov
push
ret
je
mov
and
pop
mov
push
mov
nop
or
add
jg
inc
in
notb
insl
negb
mov
insl
xor
dec
scas
fs
push
mov
dec
sub
inc
mov
stc
fldenv
push
aaa
sub
inc
jmp
add
add
xchg
xchg
dec
xor
jne
sahf
and
add
daa
mov
popf
pop
add
push
mov
das
inc
add
scas
mov
jl
sub
inc
out
repz
push
push
ret
je
mov
mov
pop
stos
mov
push
mov
nop
cmp
add
inc
ljmp
insl
cltd
popl
sbb
mov
imul
hlt
mov
xor
vmptrst
inc
mov
stc
call
mov
push
and
xchg
add
xchg
imul
mov
sahf
outsl
fildl
sbb
mov
mov
add
push
mov
xchg
inc
add
dec
mov
xor
inc
test
push
mov
push
ret
je
mov
inc
and
pop
dec
mov
push
mov
nop
dec
add
jg
inc
and
mov
mov
cmpsb
sbb
mov
cmpsl
xor
dec
scas
fs
xchg
add
xor
mov
inc
mov
stc
cmp
push
aaa
sub
inc
sub
xchg
add
xchg
dec
orb
mov
icebp
add
lret
fstpt
mov
test
and
inc
adc
ss
xor
push
mov
lock
mov
cmp
fs
mov
xor
mov
inc
mov
sub
xor
emms
mov
inc
mov
stc
inc
mov
sub
inc
jns
mov
nop
add
xchg
mov
dec
xor
jne
sahf
out
add
daa
mov
xor
arpl
cltd
jmp
jb
mov
test
push
mov
push
ret
je
mov
mov
jno
aaa
dec
push
mov
nop
xchg
mov
inc
je
or
mov
jle
inc
mov
add
xor
insb
es
xor
rcpps
inc
mov
stc
or
aaa
sub
inc
push
mov
and
xchg
or
xchg
clc
xor
mov
lahf
mov
add
daa
mov
xor
add
push
mov
stos
inc
add
mov
add
sub
inc
push
jne
sub
ret
jl
mov
and
pop
sub
dec
push
mov
nop
xchg
xor
add
push
ret
je
push
mov
mov
inc
mov
push
mov
nop
cmp
add
jg
dec
sbb
lea
insl
push
inc
mov
stc
sub
inc
inc
mov
daa
mov
fistpll
js
xor
ret
rcl
mov
dec
jae
mov
call
aaa
dec
mov
inc
or
out
idivb
int3
mov
leave
mov
mov
inc
cs
jg
loop
xor
fwait
push
xor
lods
inc
loopne
or
adc
adc
dec
fadds
lock
scas
and
add
xchg
imul
jge
int
in
ret
add
pop
jae
inc
or
jns
cli
xchg
cwtl
call
mov
ss
push
dec
adc
cmpsb
mov
pop
sub
mov
stos
aaa
dec
outsb
pop
push
push
mov
shr
push
aaa
dec
addr16
mov
std
jmp
int3
inc
push
add
icebp
cmpsl
add
mov
sub
imulb
inc
pop
mov
inc
fdivr
push
call
lods
ficoms
add
arpl
movsb
fs
out
push
ret
dec
xor
pop
call
aam
aaa
dec
mov
ja
call
xlat
testl
lods
fs
mov
int3
push
into
add
pusha
sbb
lock
mov
sub
mov
xor
fsts
sarl
test
fnstsw
sub
inc
add
cmp
inc
mov
and
mov
and
bound
js
mov
add
inc
test
daa
cmp
inc
fcomp
in
and
mov
lea
jo
sub
add
lret
fnstcw
fs
mov
xchg
lea
sub
idivl
cmp
inc
rol
test
hlt
rcll
lds
mov
fsub
inc
add
lea
jp
notl
out
xchg
sub
iret
icebp
jne
mov
mov
cmp
inc
pushf
imul
frstor
add
fbld
arpl
mov
add
inc
test
daa
cmp
inc
aam
je
and
test
inc
ret
add
sbb
inc
add
xor
inc
test
popf
lds
sub
jae
je
or
push
jp
fs
mov
rorb
arpl
test
insl
dec
call
mov
fldenv
adc
jbe
pop
cmp
sbb
sub
ljmp
xor
and
push
out
lock
push
arpl
mov
inc
add
jle
mov
in
xchg
aaa
dec
mov
inc
xor
pusha
and
push
adc
rorl
fsubrs
inc
cld
mov
and
movsl
pop
hlt
add
lcall
enter
inc
xor
testl
into
fdivs
mov
sbb
shll
js
jo
mov
push
jp
push
stc
ljmp
in
push
push
aaa
dec
bound
pop
and
inc
in
adc
mov
jns
test
fcomp
lcall
daa
cli
sub
xor
jns
pop
jecxz
add
mov
jge
and
xchg
xor
jb
jne
xor
mov
decl
sbb
mov
mov
movsl
arpl
mov
jbe
sub
and
mov
lods
inc
jg
lea
pushl
mov
fnstenv
xor
movsl
fcos
je
rcrb
mov
leave
iret
xlat
jbe
push
out
lods
cmp
aaa
fs
mov
call
shl
dec
into
dec
iret
inc
nop
movsl
pop
clc
add
push
filds
imul
stos
dec
hlt
xchg
xchg
mov
inc
sarb
add
pop
jecxz
enter
push
cltd
jecxz
lods
filds
dec
fcoms
lods
lods
call
mov
fneni(8087
fsubrp
outsb
in
mov
mov
mov
insl
jmp
stos
in
xor
push
leave
or
cmp
es
push
cmpsb
rorl
push
inc
xor
jno
add
lods
enter
arpl
push
jno
add
rolb
xor
dec
push
pop
and
je
rorl
xor
or
push
or
insb
mov
testb
xor
decl
dec
call
jne
mov
push
cltd
dec
sub
mov
jne
fdivs
and
test
xor
jl
inc
inc
or
sub
pop
leave
fildl
jnp
mov
leave
or
sub
clc
or
jne
cmp
fdivrs
into
jnp
jmp
pop
push
cmp
dec
jae
int3
and
test
xor
inc
pop
add
fldt
adc
push
lcall
cmp
mov
cmp
ljmp
notl
ret
jge
int
in
icebp
inc
add
add
or
inc
adc
pop
inc
add
iret
sub
int3
iret
js
add
out
je
daa
aas
mov
int
xlat
into
or
je
daa
aas
and
push
dec
nop
or
call
mov
das
arpl
call
fdiv
adc
ret
jge
int
push
dec
mov
sbb
aaa
xor
scas
jl
decl
adc
mov
push
jle
fidivs
icebp
dec
rcl
mov
js
and
add
sbb
push
jns
inc
adc
arpl
jno
adc
mov
je
pop
cmp
and
push
out
je
adc
mov
or
and
pop
mov
dec
mov
xor
jno
adc
jge
and
and
outsb
mov
rolb
cmpsb
mov
xor
es
sbb
add
jns
jbe
sub
mov
cmp
test
in
lcall
xor
mov
call
xor
in
xlat
xchg
sub
leave
cmp
sbb
aam
aaa
dec
mov
fstps
iret
setg
inc
add
jno
daa
mov
jb
adc
iret
cmp
mov
adc
mov
add
adc
leave
jb
popa
shrb
call
cmp
lcall
std
jmp
push
push
into
adc
stos
lock
dec
test
inc
xlat
pusha
jle
lods
dec
add
pop
mov
lods
in
into
je
mov
rcrb
enter
aaa
and
sbb
pop
push
mov
xor
es
add
sahf
ja
sub
idivl
jo
jle
movsl
sub
pop
cmpsb
ffreep
add
xor
loope
test
dec
iret
pop
into
fiadds
out
in
mov
mov
imul
out
rcrb
bswap
add
adc
add
out
jne
lods
in
mov
into
iret
xlat
jbe
jne
icebp
jle
sub
mov
test
into
xlat
jne
out
cmp
cmp
xchg
int3
iret
xlat
push
aad
xchg
sub
add
pop
cli
repz
dec
and
cwtl
lods
sbb
push
aaa
sbb
test
xlat
fnstenv
neg
les
enter
xor
cmp
pushf
orl
xor
push
jmp
dec
test
leave
jb
gs
push
dec
andl
adc
xchg
fidivs
xchg
mov
pop
imul
and
movsb
fs
mov
mov
xlat
push
jne
js
dec
lods
enter
pop
xor
insl
sbb
pop
push
pop
dec
fidivrl
or
push
daa
cmpb
jne
rorl
xor
fs
lcall
pop
dec
ficompl
mov
dec
incl
insb
push
cmp
jne
pop
sub
jge
call
daa
xor
ss
mov
js
ficoml
rcr
or
add
pop
jo,pn
dec
xor
xchg
leave
mov
push
hlt
mov
fcomp
lcall
inc
add
inc
lret
pop
jno
mov
pop
push
inc
fmull
adc
int
xlat
scas
daa
mov
sbb
inc
cmp
fs
jne
dec
mov
xchg
iret
sub
sbb
xor
dec
xlat
flds
inc
sbb
mov
push
ret
ja
cli
repz
int
in
mov
add
fbstp
popa
incl
out
arpl
add
shrl
sub
testl
jne
push
lea
in
xor
xor
mov
and
ljmp
in
jmp
arpl
std
out
call
push
popa
lods
jne
xchg
add
mov
pusha
mov
sbb
ret
dec
xor
fcos
je
lret
lods
and
xlat
push
sub
adc
jns
js
adc
cmp
fxch
inc
aad
inc
inc
into
adc
jle
pop
xchg
add
jecxz
aas
dec
mov
jo
call
mov
add
or
pop
adc
jl
and
sbb
icebp
and
sub
outsl
insl
or
sub
and
pop
fstl
jae
roll
push
and
and
sub
add
lea
or
push
insl
mov
ret
dec
xor
or
mov
enter
xchg
inc
sbb
lea
sbb
fnstcw
add
sub
sbb
ds
into
add
add
daa
mov
ss
mov
xor
inc
test
es
cmp
cmp
stos
and
add
into
je
sub
jmp
add
xor
push
push
or
inc
dec
sub
out
in
cmp
aaa
adc
outsb
repnz
ja
push
lods
and
cmp
fidivs
dec
icebp
push
inc
jae
fisttpl
and
shlb
and
cmp
stos
out
fsubrp
stos
sub
ret
inc
jae
int3
and
pop
fildl
jns
mov
cmp
add
pop
push
push
decl
jmp
or
dec
mov
dec
pop
and
aaa
iret
clc
je
aas
lahf
out
call
scas
xchg
inc
push
and
leave
nop
inc
test
and
sub
cmp
adc
dec
and
enter
or
inc
in
pusha
iret
cmp
xchg
xchg
xchg
enter
add
sbb
mov
popa
sbb
imul
add
jne
call
testl
lods
bound
pop
mov
xor
xor
sub
add
or
adc
push
leave
or
cmp
es
lods
enter
xor
lea
and
divl
dec
xor
sub
hlt
add
inc
push
fyl2x
sbb
sbb
and
pushf
xorl
nop
xor
es
stc
icebp
sbb
pop
jbe
repnz
add
xor
int
add
mov
mov
inc
add
adc
adc
pop
bound
or
lea
insb
jo
mov
cmpsl
out
adc
xor
xor
les
and
mov
sbb
xchg
daa
shl
push
dec
mov
inc
jae
int3
and
jmp
jl
sub
aas
pop
orl
push
inc
lea
push
aad
pop
jno
mov
pop
jae
add
int3
inc
push
dec
addr16
mov
mov
sub
jno
mov
push
aaa
dec
popa
incl
xlat
xor
rclb
xor
mov
sub
jno
xor
fcompl
push
mov
add
and
jb
dec
fstpt
and
leave
add
aad
mov
add
lods
les
sbb
popa
roll
xlat
xor
clc
mov
mov
push
pop
mov
test
sub
iret
into
movzwl
sbb
ds
int
pop
push
jb
decl
adc
mov
push
mov
lcall
aaa
jne
mov
push
ret
mov
mov
push
repnz
mov
mov
inc
sub
and
or
adc
pop
push
add
fadds
fdivrp
push
icebp
and
aad
popa
mov
in
and
sbb
test
mov
or
and
pop
xchg
add
jne
push
xor
std
ja
cmp
xor
mov
add
fldt
sbb
pop
test
push
pusha
arpl
xor
adc
mov
or
inc
sbb
cmp
push
call
xlat
idivl
xor
fsts
decl
jge
into
push
xor
movsl
decl
or
adc
push
mov
add
out
add
inc
jae
jno
insl
repz
int
in
xchg
inc
add
add
mov
lods
rclb
push
lret
mov
mov
pop
xor
jge
jae
mov
or
adc
mov
sbb
jb
addr16
pushl
inc
clc
dec
int3
test
enter
add
insl
fisubs
adc
mov
inc
and
movsb
jbe
out
data16
aas
inc
xchg
fadds
ljmp
sbbl
push
mov
sub
add
inc
or
jne
incl
int3
inc
push
inc
addr16
adc
sbb
setl
add
push
cmp
jne
cmp
sub
xor
sbb
xorl
push
call
mov
pop
and
out
into
icebp
fistps
mov
inc
pop
pusha
mov
mov
lret
fldcw
xor
and
outsl
add
pushf
push
adc
lea
cmp
stos
into
call
idivl
sbb
test
lods
dec
and
adc
scas
aaa
dec
flds
fnstcw
sti
insl
push
setl
adc
push
fcomps
call
fs
cmp
xor
adc
sbb
cs
enter
add
sbb
push
jge
xor
and
mov
mov
outsb
sbb
hlt
inc
and
inc
add
mov
mov
daa
mov
int3
inc
push
adc
shl
iret
mov
pop
sbb
jae
adc
fldcw
mov
jg
negl
pop
mov
sbb
out
je
adc
ja
add
xor
stos
dec
and
int3
inc
push
dec
addr16
jne
pop
fadds
fdivrp
xsaveopt
test
les
lods
adc
jp
push
and
mov
into
add
jmp
int3
inc
push
adc
mov
dec
aam
mov
mov
je
add
inc
and
inc
add
push
or
inc
or
pop
and
lret
dec
or
inc
or
jl
fiadds
enter
pop
mov
lea
sbb
fidivs
mov
dec
or
cmp
mov
and
mov
adc
adc
and
mov
sub
push
adc
push
mov
or
pop
gs
add
or
lret
dec
pop
aas
and
or
push
fs
push
dec
sub
push
adc
popa
push
ja
jl
sbb
or
push
and
ja
inc
sub
aaa
dec
xor
fcmovne
outsb
and
leave
or
dec
push
int3
inc
or
mov
ret
daa
sahf
sbb
ja
sbb
fidivs
mov
dec
or
cmp
dec
decl
loopne
dec
xor
inc
adc
lods
sbb
adc
std
flds
sub
scas
outsb
sub
fidivs
mov
fnstcw
loope
pop
inc
lret
nop
xor
mov
mov
mov
add
lcall
xor
xor
insl
xor
lea
adc
into
push
int3
inc
and
fs
sbbb
add
enter
jae
lods
out
adc
push
aaa
dec
into
adc
lret
lcall
inc
sub
movsl
mov
adc
je
xor
das
or
add
int3
test
enter
jbe
js
aam
add
stos
push
dec
rorl
daa
pop
xchg
dec
adc
lods
addr16
je
arpl
insl
sub
add
mov
iret
js
fs
icebp
subb
push
fcompl
sbb
jne
jbe
sbb
inc
imulb
ss
jbe
sub
fs
adc
inc
add
pop
icebp
add
jne
and
add
xchg
add
mov
lea
js
fcoml
add
das
xchg
jb
xor
dec
sbb
es
inc
cld
lcall
popa
incl
rcrb
ljmp
repnz
je
in
cwtl
lods
lock
aaa
sbb
mov
outsl
pop
sbb
jecxz
mov
es
icebp
sbb
jb
inc
loop
xor
adc
fsubrs
and
test
dec
test
aaa
dec
or
aas
lods
add
add
push
testl
cld
int3
iret
jns
out
call
scas
xchg
cmp
cmp
xor
daa
nop
fs
jmp
or
mov
mov
or
xor
mov
xor
int3
mov
fisttps
ljmp
jne
jbe
call
scas
xchg
cmp
sti
add
xor
push
fdivl
icebp
add
in
ss
xor
fdivrp
jmp
adc
xor
jnp
call
scas
xchg
cmp
stos
add
xor
pushf
roll
sub
psubsw
pop
daa
jbe
sub
inc
xchg
push
aaa
dec
xor
cmp
insl
sahf
and
add
enter
orl
int3
sub
dec
bound
jo
test
sub
jb
test
pop
pop
imul
dec
test
aaa
dec
pop
sbb
fcoms
pop
movsl
cmp
pop
mov
xor
xor
push
dec
adc
lods
mov
cmp
lds
sub
jb
inc
out
adc
ljmp
xor
mov
inc
add
push
mov
sub
cs
out
adc
into
push
mov
add
popf
orl
xor
test
scas
mov
jmp
push
mov
call
sbb
aad
adc
add
inc
negl
aaa
js
mov
adc
push
adc
scas
mov
jns
inc
sub
ret
insb
mov
call
fcomip
jne
and
jne
out
insb
aas
adc
mov
xlat
push
cmp
jp
inc
add
jne
imulb
and
fnstsw
xor
mov
xor
divb
inc
test
mov
xor
mov
push
pop
ret
dec
xor
push
push
pop
mov
roll
push
and
jnp
filds
add
arpl
sbb
mov
mov
mov
pop
aaa
fidivs
icebp
hlt
sub
push
add
stc
ljmp
cmp
cmp
sub
xor
dec
lods
les
adc
js
mov
or
scas
push
xor
dec
inc
cmp
arpl
pop
jmp
ljmp
pushf
scas
lods
lea
cmpsl
xlat
sbb
pop
ficoms
scas
xchg
cmp
testl
push
lea
mov
or
and
test
dec
test
orl
xchg
les
aad
enter
scas
je
mov
filds
fdiv
jl
add
lods
cmp
inc
add
xor
icebp
test
sub
mov
sti
inc
cmp
arpl
add
dec
inc
add
lods
inc
xchg
mov
push
rcll
mov
dec
test
xor
es
inc
loopne
or
aad
mov
iret
mov
jmp
mov
iret
dec
xor
and
aad
mov
iret
dec
fsincos
and
dec
lea
call
movsl
shlb
aad
aaa
dec
incw
xlat
xor
inc
sbb
shlb
int3
inc
enter
out
outsl
mov
fucomi
jl
and
push
aaa
je
arpl
decl
push
incw
xlat
xor
adc
adc
mov
cmp
dec
orb
push
mov
cmp
iret
arpl
xor
dec
movsl
flds
jne
lret
scas
enter
add
xlat
fxch
sbb
mov
pop
mov
fldcw
ret
dec
xor
and
add
mov
xor
xor
cmp
test
sbb
adc
jmp
add
inc
fsubl
out
lea
push
fcmovnu
push
and
movsb
aad
aad
and
cmp
mov
fnstenv
mov
and
push
xchg
les
xor
sub
xchg
inc
add
test
push
aaa
dec
jns
inc
or
movsb
stos
add
inc
adc
cmp
xchg
add
xor
jns
mov
pop
mov
mov
adc
outsl
mov
fisttpl
and
lock
add
push
mov
aas
lods
dec
and
add
test
rorb
outsl
sub
and
push
inc
push
cmpsl
fbld
fsubrs
and
popf
inc
xchg
lods
enter
ss
stos
insb
rclb
adc
movsl
cld
int3
iret
js
xor
adc
pop
mov
xor
xor
cli
adc
jp
pop
inc
cmp
sti
mov
nop
pop
imul
imul
mov
and
fucomip
loopne
add
fnstcw
pusha
mov
xlat
push
cmp
aad
fists
stos
fwait
or
jne
fildl
mov
jmp
xor
aad
pop
pop
jno
fcomps
stos
fsubrs
jle
cmp
sbb
push
xchg
push
add
fbstp
pusha
out
arpl
adc
sbb
movsl
ja
dec
pop
or
mov
lcall
pop
dec
iret
pop
ja
addb
inc
push
fbstp
pusha
sar
add
jg
test
lods
enter
mov
aad
fimuls
mov
int3
mov
scas
enter
ret
fdiv
jno
add
lods
cmp
popa
add
xor
out
jge
push
dec
xchg
ljmp
cmp
fnstcw
sub
dec
or
push
push
ljmp
scas
jle
mov
push
mov
sub
dec
inc
fistpll
inc
mov
push
out
test
fstpt
push
imul
test
jne
xchg
add
jp
mov
into
dec
pusha
sbb
jb
jmp
inc
add
xchg
addr16
xor
into
ficoms
adc
mov
cmp
xor
sbb
jl
dec
movsl
pushf
sub
out
pop
and
adc
out
jge
push
leave
dec
sub
cmp
add
jmp
lcall
xor
push
lea
push
ret
dec
xor
mov
decl
dec
adc
data16
xlat
push
std
lea
add
push
fs
pop
ficoms
rcll
mov
movsl
fcos
jl
leave
mov
inc
jb
movsl
xor
call
das
mov
mov
sbb
out
push
jns
mov
iret
js
ficoms
scas
xchg
cmp
and
push
leave
call
rcrl
jne
imulb
and
add
cmpsb
imul
iret
filds
add
xchg
push
fidivs
call
jg
inc
sub
cmp
and
sub
sbb
roll
shlb
add
mov
into
movzwl
jne
adc
daa
aas
mov
mov
insb
jge
je
arpl
arpl
add
mov
xor
xchg
out
lock
dec
xor
and
out
lock
aas
mov
mov
insb
dec
lcall
mov
arpl
es
jne
icebp
je
sub
mov
movzwl
cmp
xor
dec
fimull
dec
int3
into
push
push
add
lret
lods
enter
jbe
sub
inc
adc
sub
int3
inc
and
push
idiv
out
clc
sub
cmp
insb
or
insb
jne
add
pop
ret
daa
xor
scas
jl
call
lods
inc
scas
fnstcw
xor
lods
fs
cmp
dec
test
stos
enter
les
daa
mov
mov
mov
and
pop
idiv
out
shlb
int3
iret
jge
int
in
cmp
jge
lods
inc
jno
inc
daa
xor
pop
movsl
push
aad
cmp
sub
push
ud0
mov
mov
xlat
int
call
mov
mov
inc
out
inc
orl
jns
mov
lods
adc
fbstp
popa
incl
out
arpl
add
outsl
adc
sub
into
icebp
icebp
mov
sbb
rcr
jb
add
arpl
dec
test
jns
data16
aas
sub
lea
and
jge
lods
ljmp
xchg
inc
inc
add
ficoml
loop
je
add
add
push
push
inc
add
fidivrs
and
mov
or
mov
lcall
inc
ror
cmp
lock
sub
dec
filds
jo
leave
dec
xor
cmp
lods
and
xor
push
lea
addr16
inc
mov
add
popf
xorl
push
cld
test
insl
dec
inc
stos
lods
enter
dec
out
push
fdivrp
call
mov
int
xlat
jbe
jge
out
and
adc
iret
icebp
je
imulb
jp
xor
mov
xor
push
cmp
jmp
fnstenv
pop
add
lock
lods
inc
out
test
mov
lock
and
cmp
xor
adc
inc
enter
or
add
sub
jge
jb
popa
call
dec
add
enter
orl
andb
add
dec
outsl
movsl
insb
mov
inc
daa
lods
jne
icebp
insb
push
sub
mov
fsts
ljmp
jo
mov
mov
insb
pop
lea
addr16
je
arpl
push
je
add
fisttpl
fstps
fdivrp
jne
lret
xchg
jb
push
lahf
xor
es
fisttps
add
or
pop
push
dec
test
ror
int3
xor
fidivs
icebp
call
push
mov
bound
mov
insb
aad
enter
inc
xor
arpl
add
or
mov
ret
inc
mov
lret
fisttps
mov
push
ret
pop
mov
into
dec
data16
out
in
inc
or
fldcw
iret
xlat
movsl
flds
jne
pop
call
fimull
mov
xlat
push
daa
movb
jmp
xchg
jb
xor
fisubs
mov
pushf
stos
das
rclb
xchg
int3
inc
fsts
out
call
mov
cmp
call
cmc
ret
add
addr16
add
jne
inc
and
adc
ljmp
xor
mov
cmp
inc
addr16
lret
gs
aas
sbb
gs
iret
xlat
lods
stc
call
je
hlt
adc
lods
int
in
or
mov
xchg
push
push
xchg
mov
pextrw
mov
insl
movsb
shlb
rcrb
adc
insl
fldenv
call
test
lea
js
popa
push
dec
sub
aad
cmp
add
add
daa
sbb
dec
and
test
xor
dec
mov
push
fldcw
dec
sub
aad
cmp
add
add
pop
mov
mov
hlt
inc
mov
inc
out
ret
mov
gs
push
cltd
inc
add
add
mov
pop
or
sub
lea
sub
repnz
cmp
daa
xor
xor
out
cmpl
xor
test
test
inc
hlt
adc
inc
inc
sub
aas
xor
mov
pop
je
hlt
pop
mov
rclb
leave
cmp
aaa
sbb
or
inc
fcoml
mov
xchg
sub
mov
and
clc
inc
lds
push
push
cmp
jp
add
inc
adc
mov
inc
mov
jbe
xchg
xor
test
cld
fs
pop
fmulp
pop
push
es
iret
insl
fisubrl
adc
bswap
cmp
cmp
pop
cs
add
or
rcrl
cmp
fdivrp
xor
push
pop
jecxz
xor
in
jb
mov
inc
and
adc
adc
inc
xor
daa
xchg
add
sbb
dec
xchg
aas
jb
mov
and
mov
xchg
jp
inc
xor
mov
repz
pop
jno
nop
pusha
sub
clc
or
aaa
or
mov
xorb
inc
mov
xchg
xorb
sub
loop
sub
aaa
jmp
adc
and
mov
xchg
cli
xor
xchg
and
popa
add
repz
pop
jno
nop
loopne
and
mov
add
add
mov
xchg
add
jb
xchg
adc
adc
jmp
adc
xor
mov
xchg
jp
inc
xor
mov
repz
pop
jno
nop
pusha
sub
jo
add
mov
or
mov
xorb
inc
mov
xchg
xorb
sub
loop
sub
aaa
jmp
adc
xor
mov
xchg
cli
xor
xchg
test
popa
add
repz
pop
jno
nop
loopne
and
mov
jg
push
pop
inc
mov
xchg
add
jb
xchg
adc
adc
jmp
adc
xor
mov
xchg
jp
inc
xor
mov
repz
pusha
sub
pusha
or
xor
and
xorb
inc
mov
xchg
xorb
sub
loop
sub
aaa
jmp
adc
xor
addl
adc
jmp
mov
addl
and
and
add
icebp
xlat
dec
jae
xchg
mov
and
mov
and
xor
adcb
mov
nop
pop
daa
jo
test
add
loopne
adc
jmp
mov
popa
add
xchg
or
inc
xor
push
sbb
fnstcw
into
iret
xlat
jge
push
push
xchg
je
cmp
aaa
and
fincstp
push
jge
push
dec
jae
int3
out
jb
inc
add
jo
adc
mov
push
jbe
sbbb
add
test
xor
pop
sub
adcb
scas
enter
mov
pop
cmp
xor
mov
add
xlat
adc
inc
sbb
dec
fstps
stos
ret
pop
ficoml
movb
leave
push
clc
xor
fstps
jge
insl
or
pop
jno
mov
lea
adc
lods
inc
inc
into
mov
pop
push
stos
inc
clc
pushf
xorl
mov
xor
lods
flds
outsl
pop
addr16
clc
fs
sub
push
or
iret
rcrb
mov
sbb
jg
movl
sbb
sbb
leave
jmp
mov
sbb
inc
or
leave
jg
out
mov
xlat
sarl
push
fs
cmp
pushf
xorl
pop
sub
sub
pop
sbb
inc
pop
jne
hlt
adc
or
iret
pop
add
inc
sub
into
dec
mov
push
das
pushl
aas
add
xor
loope
ret
push
mov
push
addr16
cmp
xor
cmpsl
rol
xchg
xor
es
cltd
ficompl
inc
mov
addr16
fs
xor
inc
sbb
pop
pop
pusha
sbb
push
fs
xor
inc
sbb
pop
jno
hlt
pop
mov
jne
xor
dec
int3
jne
ljmp
xlat
into
jnp
add
incl
sub
sbb
lea
js
xor
adc
mov
imul
arpl
or
adc
mov
pop
xlat
xor
inc
sbb
mov
fisttps
into
dec
mov
push
jo
inc
adc
rol
rolb
loopne
pop
inc
push
aad
arpl
add
shl
lcall
enter
jae
mov
insl
inc
outsl
lods
ss
adc
sbb
insb
dec
cmp
inc
inc
into
jne
fadd
fcomp
call
push
pop
cmp
aaa
shlb
jae
jecxz
add
adcl
cmp
and
sub
jae
mov
fxch
nop
iret
xlat
jg
push
mov
shr
push
aaa
dec
callw
xlat
fldcw
rolb
pop
lret
xor
sub
add
inc
add
add
jne
sub
mov
je
iret
pop
fcmove
enter
jmp
fbstp
pusha
shlb
pushf
aam
enter
iret
fcomps
pop
and
test
xor
adc
les
inc
push
jl
icebp
bswap
add
mov
mov
nop
cmp
scas
lods
cmp
hlt
add
xor
push
hlt
call
testl
sahf
and
add
js
fisubs
xor
lods
mov
add
and
add
sub
xor
push
inc
add
in
mov
mov
outsb
int3
test
push
leave
push
outsb
sbb
ljmp
lock
fisubs
mov
mov
iret
xlat
dec
and
mov
xor
push
daa
xor
adc
pop
orl
call
sbb
lea
push
sbb
and
outsl
test
into
iret
xlat
jbe
aad
sbb
ret
dec
xor
inc
rol
add
xchg
add
jne
insb
xor
xor
lret
hlt
sbb
mov
inc
int3
xor
bound
jmp
aaa
dec
xor
and
and
pop
or
jns
neg
and
shrb
arpl
into
xlat
fnstenv
inc
mov
stos
mov
jmp
sub
jne,pt
inc
mov
mov
inc
and
iret
sbb
adcb
add
cmp
push
je
mov
mov
call
fidivs
call
fdivs
outsb
pop
cli
repnz
je
in
lcall
xor
pusha
add
jo
mov
lea
add
insl
and
mov
int3
inc
push
add
rclb
add
call
mov
or
mov
add
cmp
mov
inc
pop
jl
divb
add
mov
sub
idivl
adc
outsb
cmp
mov
jge
addr16
fcomp
incl
adc
jmp
mov
test
or
xlat
lods
roll
sub
and
add
and
outsl
add
dec
int3
pop
push
jb
cltd
inc
add
mov
jg
add
fnstcw
and
into
push
and
pop
or
and
xor
lods
and
and
or
jne
int3
inc
push
dec
addr16
dec
and
mov
imulb
inc
add
add
dec
and
test
into
icebp
jne
pop
sub
inc
add
mov
xor
add
xor
pop
xor
mov
pop
pop
xchg
movsb
pop
call
in
mov
shlb
inc
push
jl
pop
dec
pop
mov
adc
jmp
lret
mov
jno
pop
mov
popa
xchg
mov
lahf
xchg
add
push
pop
notb
sub
dec
add
mov
push
fisubrl
es
cmp
sbb
xor
enter
inc
adc
leave
pop
out
test
f2xm1
aas
xor
movsl
or
mov
dec
or
xor
sub
push
call
popa
notl
jne
and
add
fs
mov
mov
add
lret
pop
iret
mov
mov
icebp
les
sub
mov
inc
lret
mov
sub
test
pop
mov
mov
sub
add
imul
pop
pop
and
ret
cmp
and
leave
push
hlt
xor
ljmp
flds
xchg
jb
adc
rorl
mov
mov
pop
pusha
stos
inc
lock
je
mov
shrb
fsubl
sbb
je
fs
jle
les
sbb
jl
lods
sbb
cmp
out
ds
mov
mov
fdivr
and
mov
stos
add
xchg
push
xor
jae
in
xor
outsl
mov
mov
mov
and
inc
mov
mov
fsubl
stc
enter
jb
xor
xor
rcrb
or
pop
mov
imulb
or
inc
stc
jle
addr16
ficoml
add
mov
or
cmp
jl
mov
cld
add
inc
add
adc
leave
icebp
cmp
jae
in
xor
mov
mov
aam
arpl
inc
cmp
jp
testl
aas
mov
outsl
stos
and
jle
and
es
je
mov
add
sub
xor
stc
ljmp
inc
cmp
fistpl
cmp
arpl
push
pop
xor
test
sub
shll
sub
add
jne
int3
pop
shrb
xor
push
and
mov
fcmovu
clc
ret
inc
hlt
shrb
addr16
mov
xor
scas
fs
ljmp
jg
mov
into
mov
fmul
cmp
add
push
mov
xor
lods
stc
test
insb
pushf
test
daa
dec
shll
adc
stos
lret
lea
xchg
inc
aaa
dec
mov
push
inc
mov
lret
fbld
into
call
stos
inc
or
pop
lcall
icebp
push
add
xor
mov
pop
mov
pop
mov
add
add
jge
test
inc
cmp
inc
add
jb
aas
cmp
cli
pop
sub
lret
insb
push
push
aad
aas
mov
jg
fs
call
add
mov
add
mov
pop
rolb
cmpsb
mov
lret
mov
sub
push
inc
push
aaa
dec
adc
inc
cmp
sub
mov
mov
loope
jl
inc
adc
xor
sbb
jmp
jbe
xor
mov
adc
popf
fisttps
gs
fcoms
test
into
icebp
je
imulb
add
or
ret
mov
xchg
push
add
inc
add
mov
xor
lods
flds
push
jbe
dec
inc
and
inc
or
push
add
xor
inc
ja
int3
inc
or
fidivs
icebp
lret
outsb
sub
push
adc
ss
clc
adc
inc
lcall
and
mov
inc
sbb
xor
fdivrl
ja
push
lods
inc
inc
mov
sub
inc
lcall
test
sarl
shl
add
popf
xorl
mov
call
scas
xchg
inc
pop
pop
add
add
xchg
mov
fsubl
xlat
mov
sub
mov
sbb
outsl
lods
push
and
jae
in
xor
fs
jne
mov
shrb
mov
pop
xor
xor
push
inc
add
push
fnstenv
inc
sub
lcall
dec
int3
mov
daa
mov
lret
ror
pop
xchg
xor
es
andb
in
pop
ret
dec
xor
xor
mov
stc
ret
pop
addb
scas
fs
fxsave
add
pop
ds
sub
cs
sbb
mov
xor
xor
popa
daa
jae
xor
or
sub
and
pop
dec
pop
xorl
and
mov
adc
xor
sub
pop
data16
and
data16
sub
pop
pop
enter
sub
xlat
fldenv
add
push
mov
or
push
aaa
pushl
mov
dec
fstps
jne
pop
orb
fidivs
push
test
and
dec
call
sbb
add
push
cmp
jbe
push
or
push
cmp
jbe
dec
mov
lods
inc
push
iret
fcmovnb
rcr
fiadds
push
aaa
mov
fwait
and
data16
or
aam
dec
xor
mov
call
inc
lea
call
cs
adc
sub
push
bound
cmp
scas
xchg
cmp
inc
add
xor
xchg
adc
xlat
sub
xor
add
lods
enter
xor
test
jno
inc
jmp
ja
mov
inc
sub
mov
push
enter
mov
push
add
lret
popa
in
mov
stos
fidivs
jne
xchg
add
jp
and
mov
pop
repz
xor
jg
sub
push
add
das
cmp
and
mov
enter
orb
out
fsubrp
mov
inc
add
inc
xor
add
cmp
mov
arpl
adc
inc
mov
cmp
jbe
push
or
push
and
pop
lds
dec
notb
clc
xlat
into
pop
adc
sbb
inc
negb
or
pop
and
setge
sti
iret
sarb
nop
add
and
movzbl
insl
and
or
jne
mov
xor
jns
sub
xchg
mov
sub
mov
mov
xor
mov
inc
add
fnstcw
jo
cli
sub
loopne
call
scas
xchg
inc
aaa
mov
or
add
mov
mov
call
mov
fstpt
and
and
insl
push
xor
mov
ficoms
fxsave
add
xchg
or
leave
ja
iret
insl
ror
dec
std
out
lcall
or
call
dec
sbb
pop
xchg
push
mov
push
xor
mov
insl
inc
ljmp
js
jne
fcoms
insb
dec
jmp
add
push
add
mov
or
inc
mov
mov
sbb
push
stos
inc
sub
cld
or
push
mov
sbb
into
fmuls
adc
push
icebp
imul
outsl
jbe
call
mov
rcr
outsb
bound
mov
test
dec
test
push
aaa
dec
mov
pop
xor
mov
sub
sub
and
dec
xor
js
jl
pop
mov
dec
xor
test
fdiv
lcall
push
mov
test
xor
sarl
daa
xor
mov
xor
pop
and
addb
xlat
inc
dec
xor
int3
inc
and
test
into
icebp
jne
pop
sub
inc
add
loopne
jl
and
inc
push
enter
jle
rorb
add
nop
add
test
xor
sub
into
icebp
int
sub
xorb
add
sub
ret
dec
xor
jge
into
adc
ret
mov
test
xor
es
inc
and
xchg
or
push
add
mov
sub
and
push
aas
aad
mov
sub
and
rcr
xor
add
or
pop
pop
stos
add
daa
mov
mov
push
das
incl
lret
fdivrs
inc
mov
push
inc
movsl
pop
call
outsl
mov
dec
test
cmp
je
lods
inc
mov
jge
fidivs
xchg
mov
stos
enter
inc
pop
imul
negb
mov
ss
pusha
stos
inc
in
xchg
or
mov
sbb
xor
stos
dec
hlt
sbb
dec
xor
ret
iret
insl
fisubrs
in
rclb
into
decl
inc
or
sub
jne
test
mov
and
push
hlt
call
jae
mov
outsl
push
test
and
add
sub
jb
mov
sub
add
mov
xor
pop
cli
leave
or
inc
mov
fmull
shrb
loop
mov
shr
push
aaa
dec
bound
aam
arpl
xor
push
mov
icebp
bswap
dec
and
mov
or
or
inc
insl
or
je
lret
lods
inc
inc
into
jbe
fcoms
fnstenv
dec
xor
push
and
sub
or
mov
xor
clc
jmp
xor
scas
xchg
inc
dec
leave
mov
sbb
pop
inc
cmp
xor
dec
cmp
fidivs
ret
dec
xor
and
sub
fs
cmp
xchg
pop
xor
xchg
cmp
xchg
add
xor
and
adc
dec
sub
insb
in
fldt
dec
cmc
lret
das
shll
lods
out
ja
push
inc
adcb
inc
sub
cmp
inc
pop
pop
or
ss
add
adc
add
push
test
add
jbe
xchg
mov
pop
push
fistpll
dec
mov
push
or
mov
es
add
test
xor
imul
sub
inc
dec
jns
cmp
inc
loop
adc
inc
inc
pop
add
add
xchg
mov
mov
in
pushf
and
and
fucomi
add
sub
sub
ja
or
pop
xor
jbe
out
add
cmp
pushf
clc
int3
iret
lods
out
add
push
mov
test
inc
shlb
or
lea
ret
dec
xor
lods
inc
mov
pop
aaa
dec
mov
inc
aas
mov
insl
inc
test
daa
xor
fstp
push
inc
xor
stos
sub
dec
inc
jno
outsb
or
dec
jmp
jae
pop
js
aaa
je
arpl
imulb
add
lods
mov
xchg
js
and
jbe
enter
inc
dec
testb
sub
and
adc
ror
dec
test
iret
xlat
fldenv
xchg
lods
enter
aaa
into
xlat
fnstenv
dec
into
mov
mov
jbe
sub
xor
jmp
sarl
inc
dec
cmp
mov
shrb
test
inc
add
sti
xor
jmp
xor
xchg
cmp
jb
cmp
js
es
cltd
cmp
sub
lgs
fcmovne
and
pushf
lcall
xor
or
push
aas
mov
inc
dec
testl
stc
sub
cs
pop
or
inc
pop
inc
lret
int
cmp
dec
test
push
aaa
dec
mov
into
xchg
leave
add
lret
cmp
adc
scas
xor
lods
stc
test
push
vcvtsi2sdl
dec
in
fcmovnbe
pushl
lret
cmp
mov
mov
popf
in
sub
jbe
push
pop
xor
out
call
mov
fnstenv
add
aaa
or
dec
inc
sub
xor
adc
inc
adc
inc
es
push
mov
lcall
aaa
leave
sub
inc
mov
dec
call
in
xchg
and
inc
sub
lret
xlat
idivl
xor
inc
add
xlat
inc
hlt
sbb
sbb
bound
mov
adc
ljmp
xor
es
rorb
and
xchg
add
mov
and
add
jge
mov
xor
int3
inc
into
pop
or
sbb
call
mov
enter
mov
inc
ficoms
imul
movsl
shlb
ficoms
aaa
ret
aas
mov
out
test
es
jl
aaa
mov
pop
rolb
cmpsb
mov
lret
mov
add
and
push
fs
test
aas
scas
dec
and
sub
mov
je
adc
inc
in
push
adc
sbb
ja
js
test
and
test
shrl
or
stos
add
pop
daa
shll
jg
js
gs
fiadds
dec
xor
or
sub
movsl
rorb
inc
add
push
fmull
pop
aas
mov
or
mov
adc
scas
gs
and
dec
xor
aaa
mov
mov
inc
shll
test
sub
test
and
dec
mov
fstpt
sbb
scas
push
and
jg
cli
cs
xor
push
and
xor
push
stos
inc
adc
jno
popf
nop
enter
aaa
pusha
movsl
addr16
xor
mov
mov
daa
mov
lret
jle
ds
add
mov
jg
cli
cs
and
adc
mov
repnz
mov
and
jne
sub
lods
insb
adc
inc
mov
xor
push
sbb
out
setge
mov
ljmp
mov
xor
xor
andl
mov
pop
aas
cmp
gs
repnz
mov
and
and
aas
lahf
sbb
inc
push
jb
push
adc
movsl
into
add
push
gs
push
inc
cmp
or
add
dec
xor
mov
rorb
pushf
add
push
mov
iret
sbb
les
sbb
test
or
popa
rclb
adc
sbb
idivl
sub
dec
cmp
addr16
xor
xlat
adc
inc
mov
adc
sub
inc
jmp
cltd
or
stos
and
mov
adc
popf
mov
inc
or
leave
mov
sbb
ljmp
mov
push
cmp
test
inc
pop
sub
loopne
call
sub
adc
or
dec
and
lret
inc
sbb
arpl
mov
add
adc
dec
xor
xor
jne
adc
dec
push
mov
add
xor
mov
lret
inc
icebp
dec
add
jae
insb
add
movb
mov
or
and
aas
stos
sub
call
jo
add
fwait
cmp
mov
js
push
dec
cmp
xor
xor
andl
lds
or
bound
push
sub
into
adc
scas
gs
xchg
add
sbb
jne
mov
inc
cmp
aaa
mov
in
daa
jo
movsl
flds
setl
add
push
push
ds
and
lea
inc
jp
and
sub
xchg
and
sbb
jb
test
insb
add
fxsave
std
jne
jnp
clc
and
add
lds
push
aaa
dec
popa
mov
pusha
xchg
and
add
xchg
std
and
push
aaa
dec
fldcw
in
ljmp
adc
and
sub
incb
adc
cmp
inc
and
dec
pop
sub
xchg
or
inc
sbb
lods
je
dec
sbb
outsb
xchg
aaa
dec
into
je
sub
loopne
push
push
adc
push
aaa
dec
fldcw
in
push
icebp
aam
sub
ds
and
mulb
ss
and
add
ja
ss
je
pop
gs
jp
ss
mov
shll
sub
leave
and
out
mov
fisttps
jns
movsl
and
sbb
jp
ficomps
add
add
sbb
test
lcall
or
and
add
mov
sub
into
adc
jbe
adc
inc
inc
mov
xor
jbe
add
push
aaa
sbb
or
sbb
or
push
int3
and
ljmp
mov
sbb
icebp
movsb
add
push
enter
sti
iret
rcrb
add
enter
sti
iret
rorb
add
sbb
adc
mov
in
and
movsl
out
call
xor
adc
test
sarb
xor
notl
fsubrs
int
jecxz
add
aaa
add
shlb
incl
shrb
ret
dec
xor
inc
add
pop
and
add
aaa
xor
and
xor
int3
inc
sub
dec
add
sbb
dec
xor
int3
inc
and
js
add
mov
dec
xor
int3
inc
cmp
push
push
mov
sbb
fisttps
sbb
insl
gs
mov
int3
iret
xlat
mov
push
jmp
fs
mov
fisubs
add
pusha
rorl
sub
push
and
icebp
jp
sub
mov
test
notb
pop
push
aad
add
add
and
mov
xor
xchg
cmp
out
xor
jle
dec
add
mov
ds
xor
and
imul
xor
lods
cmpb
mov
inc
add
and
rcrb
popa
inc
movsb
ret
lret
addb
mov
fstl
sbb
inc
xor
pop
adc
out
and
add
ds
xor
mov
enter
or
test
sub
lods
inc
and
adc
push
fmulp
mov
or
call
mov
cmp
pop
adc
jo
xchg
xchg
push
adc
call
mov
jle
cmp
dec
xor
add
in
adc
mov
and
fdivs
and
add
int3
jl
push
mov
movsl
push
dec
call
and
leavew
enter
mov
imul
adc
stos
gs
dec
lret
adc
xor
and
jmp
mov
push
adc
add
push
call
shl
inc
mov
dec
sub
and
mov
jbe
sbb
adc
fidivs
test
sbb
sub
mov
push
push
pusha
iret
cmp
lcall
jne
sub
bound
add
jb
lea
sbb
and
aas
inc
and
xor
mov
add
push
inc
bound
sbb
add
rcrb
mov
xlat
push
add
add
lods
inc
outsb
adc
es
inc
and
enter
sbb
into
adc
fidivs
mov
dec
into
je
add
xor
adc
sbb
dec
xor
xor
pop
add
add
add
push
insl
ljmp
in
cmp
popa
jns
divb
xor
loope
adc
and
shll
jno
into
pop
jmp
out
or
add
push
jl
and
pop
imul
mov
stos
fs
jno
enter
sbb
adc
test
cld
and
mov
call
fidivs
out
inc
cmp
aaa
mov
hlt
fisttpl
and
jecxz
mov
inc
or
push
rorb
lcall
mov
aaa
popa
lods
out
adc
mov
dec
into
adc
lret
jae
lcall
mov
mov
and
ljmp
mov
push
and
sbb
push
inc
pop
enter
jno
xlat
xor
adc
addb
shlb
inc
fidivs
aad
out
pop
jno
lock
add
je
push
pop
dec
into
xor
ficoms
call
lock
pop
xor
push
in
lcall
rclb
fistpll
sbb
push
mov
jl
or
dec
push
dec
out
push
es
inc
and
test
iret
icebp
je
iret
pop
add
pushl
push
ret
mov
ret
jle
adc
cmp
or
inc
mov
cmp
lods
xor
lret
inc
push
dec
outsb
cmp
jns
ret
dec
mov
pop
orl
push
mov
dec
xor
xor
and
jno
push
xchg
add
outsb
and
mov
inc
orl
mov
insb
or
push
and
inc
gs
lods
mov
and
bound
test
lods
enter
cmp
jbe
sub
inc
xor
stos
in
xor
lea
addr16
fsubs
jo
stos
fs
push
xchg
add
jp
and
gs
cmp
sbb
jmp
mov
add
inc
sub
add
mov
stos
or
mov
mov
jb
mov
lods
and
das
push
mov
sbb
cmpsb
mov
mov
jnp
fistps
add
xor
stos
jne
icebp
cmpsb
or
push
fs
push
pusha
iret
pop
add
lcall
adc
sub
jge
or
dec
cmp
cmp
xor
repz
or
adc
movb
xchg
addr16
mov
xlat
push
sub
and
shr
jle
inc
fidivs
sub
mov
mov
and
xchg
leave
scas
enter
mov
pop
xor
dec
or
mov
mov
mov
fstps
pop
jno
cmc
inc
xor
leave
dec
or
inc
lcall
aas
sbb
push
pop
xor
push
add
adc
mov
adc
sbb
inc
xor
popa
sub
or
repnz
je
in
dec
lret
add
cmp
or
inc
mov
fnstcw
pop
add
inc
and
loop
aad
mov
adc
and
call
fld
iret
je
mov
jne
lret
ror
mov
mov
fldt
adc
sbb
and
rcr
bound
push
xchg
mov
out
pop
aaa
dec
mov
scas
fs
lea
add
add
xor
sbb
ja
xor
mov
iret
xor
data16
xchg
or
ret
mov
test
inc
or
push
or
insb
dec
push
aad
enter
jae
lods
out
int3
cmp
in
fnstcw
jns
mov
int
or
push
pop
jno
cmc
inc
xor
ja
mov
test
ror
insb
iret
nop
and
add
mov
dec
xor
push
call
idivl
adc
inc
adc
fsts
adc
mov
pop
jno
mov
push
call
lret
push
aas
dec
fiaddl
mov
xlat
jns
pop
ret
push
mov
data16
cli
dec
sub
push
daa
cmp
dec
ror
pop
mov
sbb
repnz
test
or
sub
stos
les
add
daa
add
xor
jnp
mov
jbe
mov
call
xor
arpl
into
movsb
cld
jmp
jb
dec
fstpt
pop
repnz
es
add
fldcw
aas
cmp
mov
lea
push
mov
lret
xlat
fldenv
pop
jbe
sbb
dec
iret
iret
xlat
js
add
dec
pop
mov
fnstcw
cmp
out
push
cmp
loop
jne
mov
mov
pop
or
inc
mov
fistpll
push
mov
inc
lcall
xor
mov
lea
adc
aad
enter
fdivs
sbb
jle
pop
fildl
test
call
jno
push
icebp
mov
dec
xor
lock
add
jne
popa
mull
pop
sub
test
rol
jne
shrb
pushf
xorl
arpl
fstp
lcall
inc
add
mov
cmp
lods
stc
test
insl
je
shrl
xor
sub
in
sub
mov
dec
sub
shl
lcall
xor
into
je
and
loope
call
lcall
outsb
jae
and
je
push
aaa
iret
icebp
jle
sbb
adc
test
aas
sbb
lret
or
sub
mov
mov
jne
jno
sbb
orb
test
dec
xor
je
ror
inc
inc
or
cmp
xor
bound
dec
scas
or
inc
cmp
out
or
push
call
testl
iret
call
xlat
divl
push
add
sbb
movsb
sarb
mov
and
inc
and
fisttpl
je
daa
adc
inc
dec
push
or
pop
and
cmp
cmp
pop
jle
jnp
lods
out
pop
and
scas
jne
dec
ror
inc
inc
adc
sub
or
lcall
iret
or
pusha
outsl
pop
loopne
and
xor
lea
xor
jbe
jae
mov
ret
cmp
lret
push
xchg
mov
cmp
idivl
push
mov
sub
aad
fmull
cli
sbb
pusha
stos
push
and
imul
aaa
dec
xor
pop
je
cltd
mov
or
push
mov
cmp
ss
mov
push
mov
cmpsb
fildl
cmpl
jno
fsubl
dec
cltd
or
push
pop
inc
pusha
push
fcmovnb
sbb
and
mov
adc
mov
jmp
sar
sub
cmp
into
repnz
sbb
enter
leave
fnstenv
mov
adc
pop
lret
push
mov
sti
add
cmpsb
pop
incl
insl
inc
div
shl
dec
fldcw
idivl
ret
dec
lret
fdivrs
sbb
div
jne
mov
outsl
lods
mov
pop
daa
popa
mov
cltd
mov
sbb
or
pop
and
inc
push
aas
shl
flds
test
sub
xchg
mov
ss
lret
mov
sub
mov
or
jo
leave
xor
leave
push
dec
jmp
xor
inc
fdivr
test
sbb
jb
or
je
loopne
mov
test
es
je
mov
add
fisubs
je
xor
dec
daa
adc
inc
dec
iret
ret
fdivs
dec
movsl
fsubrs
jne
add
in
sub
stc
add
sub
push
xor
imul
loope
fxrstor
pop
adcb
or
xchg
out
jmp
xchg
xor
inc
or
add
push
int3
jno
xor
mov
ja
mov
out
fiadds
add
mov
dec
loopne
jae
jmp
xchg
leave
jmp
daa
adc
inc
pop
pop
sarb
aas
lahf
out
popa
inc
lea
shlb
stc
add
js
fistpl
inc
div
fprem1
mov
mov
mov
cltd
inc
pop
push
adc
stos
arpl
and
ja
fbstp
mov
add
add
lret
xchg
icebp
dec
xor
mov
sbb
push
insb
imul
repnz
ja
negb
mov
xor
xor
stos
or
pop
inc
inc
ds
lods
je
leave
stos
mov
add
loopne
out
int3
je
fcompl
rcrl
adc
push
or
int3
push
mov
fucomi
lods
out
ret
dec
pop
mov
pusha
in
shlb
jecxz
ret
cli
or
mov
mov
fnstenv
fsubl
add
mov
es
lret
mov
sub
popf
lcall
fcmovnu
aaa
call
stos
inc
inc
insb
mov
cmp
repnz
xor
or
mov
lds
add
test
or
shll
ss
jmp
fldenv
mov
or
dec
xor
fsubrl
in
push
mov
mov
mov
lods
cmp
nop
cmp
adc
xor
mov
sbb
inc
fidivrl
mov
fsubs
test
in
insl
pusha
mov
imul
or
push
add
fcompp
jmp
lea
mov
adc
sbb
loopne
fldenv
and
mov
outsl
stos
mov
xor
out
mov
add
push
xor
jne
test
sarl
aaa
aas
mov
sbb
dec
inc
adc
aas
add
mov
dec
jne
sbb
xor
aad
mov
imul
sub
mov
mov
mov
xlat
int
push
mov
ret
rcll
xor
mov
es
adc
add
jmp
cld
pop
inc
sbb
jmp
pop
ret
mov
adc
ror
inc
inc
or
mov
sub
inc
pop
jp
pop
mov
loop
mov
sbb
pop
pop
push
leave
or
sbb
jne
lret
das
lret
mov
add
add
js
call
idivl
or
jbe
lods
out
adc
stos
stos
enter
mov
cmpl
je
fnstenv
dec
leave
orl
and
call
lods
jb
or
aas
stos
push
fdivrp
push
es
lods
mov
fmuls
sarl
mov
mov
mov
sub
push
mov
lea
js
scas
fs
mov
call
add
aas
lahf
cs
cmp
xor
inc
inc
andnps
inc
pop
enter
cmc
cmp
cmp
aas
stos
mov
testb
or
inc
cs
mov
setge
sbb
lahf
sub
xor
inc
inc
push
push
mov
sub
inc
pop
jp
pop
mov
mov
clc
fsubrs
dec
pop
and
add
lock
jno
jne
mov
fisubl
mov
xor
mov
lea
xor
es
call
idivl
or
adc
add
push
xor
rcrb
call
mov
inc
xor
fs
mov
jmp
mov
fstps
decl
fnstenv
mov
or
push
pop
jno
hlt
pop
mov
jne
xor
dec
jb
mov
clc
or
sub
mov
mov
mov
lcall
lret
inc
push
leave
leave
and
dec
movsl
jb
daa
adc
inc
inc
jae
cmp
sub
shlb
add
pop
enter
xor
sub
dec
or
lock
shrb
push
stos
aaa
roll
inc
push
jns
mov
enter
pop
adc
test
jle
lret
fnstcw
and
add
sarl
inc
inc
pop
and
mov
fldenv
mov
sub
bswap
mov
adc
jb
fyl2x
adc
and
fidivs
icebp
hlt
repz
add
int3
inc
or
mov
call
repz
add
mov
inc
je
adc
leave
jmp
loope
leave
insl
dec
adc
inc
jno
mov
imul
pop
push
mov
fdivrs
or
lcall
and
jb
sarl
into
jne
or
push
arpl
aad
mov
inc
and
mov
cltd
inc
xor
movsb
shrb
and
xchg
sub
shll
push
inc
push
hlt
ss
and
inc
inc
xchg
inc
sete
hlt
stc
sub
inc
int
sub
sub
mov
out
dec
or
mov
lods
pop
and
xchg
cltd
mov
xlat
enter
lds
jmp
add
xlat
sarl
xor
jo
pop
adc
jmp
ret
daa
cmp
je
mov
jmp
lret
test
std
fsubs
sarl
imul
rolb
and
push
sbb
pop
add
inc
pop
add
jmp
data16
pop
xor
inc
pop
dec
mov
pop
sbbb
sti
sbb
push
lret
jmp
xor
inc
scas
sarl
lea
decl
xchg
push
xor
jge
or
mov
ret
gs
call
fbstp
and
bound
xor
adc
xor
xor
push
paddd
rcr
push
or
lods
enter
push
mov
mov
add
lods
dec
dec
mov
int3
repz
leave
mov
out
lea
aas
sbb
gs
cmp
filds
mov
jne
mov
jmp
xchg
push
hlt
jne
aas
pusha
xlat
push
add
or
inc
aaa
dec
xor
mov
pushl
lcall
cmp
jmp
stos
in
push
lcall
and
sub
jmp
or
inc
aam
pop
icebp
jmp
stos
or
or
leave
ret
push
mov
cld
xor
push
xor
es
mov
or
insb
mov
mov
or
or
fwait
cmc
inc
xor
add
ljmp
pop
call
repnz
mov
jne
icebp
std
aad
mov
adc
dec
enter
lret
jmp
mov
mov
mov
nop
aas
add
add
mov
mov
cwtl
daa
jle
xor
push
ret
scas
xchg
inc
pop
mov
xor
and
inc
jne
rorb
xor
add
data16
rcr
rcrb
mov
jb
push
stos
pop
imul
test
jne
add
data16
rcr
shrb
lea
test
and
jp
push
push
inc
dec
jo
fiaddl
call
lret
daa
adcl
inc
pop
mov
push
and
jp
push
push
inc
dec
jo
fcom
sbb
jecxz
add
in
mov
mov
and
xor
mov
fdivs
fdivrp
mov
rcrb
popa
mov
and
rclb
call
mov
xor
pop
fildl
jl
mov
xlat
fldcw
sub
mov
pop
addr16
cmpl
lret
pushf
inc
js
mov
push
stos
fadds
je
jg
decb
outsl
inc
sub
adc
pop
je
mov
mov
inc
pop
add
rorl
dec
inc
into
add
dec
scas
sub
xchg
mov
jle
xor
and
sub
push
adc
out
mov
push
add
adc
lret
inc
aaa
test
sub
xchg
mov
mov
jae
in
xor
push
jl
mov
pop
je
and
add
jp
lcall
leave
adc
xor
js
cmp
mull
or
cmpsl
pop
out
je
fisttpl
shrb
sub
cmp
mov
mov
xchg
add
sub
jne
cwtl
daa
lret
fnstenv
mov
lock
sub
xor
adc
enter
mov
jnp
pop
inc
or
and
mov
sub
and
jne
insb
xor
insl
xor
mov
jp
cmp
ffreep
jg
mov
sbb
dec
mov
or
sarl
or
stc
xor
mov
cmp
ss
adc
iretw
ret
cmp
mov
push
inc
ja
mov
fnstenv
adc
fidivl
mov
fstps
fidivl
inc
ss
inc
int
sti
cmp
cmpsb
fisttpl
shrb
pop
addl
fldcw
cmp
pop
mov
into
dec
ja
arpl
jmp
cltd
mov
mov
pushl
dec
jmp
mov
add
cmpxchg
mov
jns
sub
iret
add
int3
iret
push
out
clc
push
jb
mov
cs
out
lcall
xchg
rorl
push
cmp
dec
xchg
ljmp
outsb
and
inc
adc
xor
loop
or
leave
mov
push
movsw
imul
call
push
jb
sbb
mov
mov
add
mov
stos
insb
rorb
lods
enter
out
outsl
sbb
enter
dec
and
enter
mov
mov
push
mov
movb
outsl
mov
ret
jl
fucomi
rcr
fimuls
mov
stc
int3
iret
movsl
imul
inc
jmp
aaa
dec
xor
cld
int
fld1
ret
mov
outsl
inc
dec
xor
cmp
xchg
and
push
dec
jb
xchg
lods
enter
stc
icebp
leave
and
subl
pop
inc
jae
adc
sbb
lret
mov
aaa
lea
cwtl
sbb
lret
lret
jecxz
xor
scas
mov
jl
ror
and
sbb
sub
add
xor
adc
adc
cmpsb
add
inc
xor
xchg
push
dec
test
sar
lret
and
dec
in
adc
jmp
xor
out
xor
lret
mov
aaa
mov
pop
sub
adc
adc
in
jb
adc
imul
lds
jno
mov
sub
adc
push
shrb
adc
int
aad
imulb
jmp
fadds
cmpsb
and
jo
shrl
sub
mov
xlat
xor
adc
rcrb
bswap
push
pusha
arpl
mov
lock
outsl
pop
jno
mov
pop
arpl
jne
xchg
inc
aaa
dec
xor
inc
cmp
push
fcos
adc
xlat
idivl
adc
jne
jbe
jne
jae
lcall
enter
jae
lods
out
or
push
icebp
bswap
add
inc
rcr
xor
adc
push
aad
mov
cmp
jo
lods
lcall
orl
and
sub
insl
js
jecxz
pop
inc
jae
nop
sbb
and
xor
sub
pop
mov
adc
enter
mov
add
lock
sbb
sbb
jl
fstpt
mov
rorl
decl
lock
adc
sbb
fisubrs
je
dec
xor
fcos
or
idivb
mov
xor
adc
add
mov
aam
inc
add
xor
sbb
imul
xchg
mov
jns
scas
and
add
into
dec
xor
xor
loopne
repnz
add
fwait
mov
into
cmp
and
mov
setl
jns
adc
shr
jb
mov
inc
or
push
fcomip
leave
orl
pop
mov
stc
jle
test
mov
add
add
push
aaa
ret
mov
iret
jb
lret
in
mov
pop
cmp
add
inc
dec
aam
addl
xor
decl
pop
addl
and
and
inc
gs
cli
adc
and
je
in
dec
lret
mov
push
aaa
dec
data16
mov
sbb
mov
or
or
call
testl
push
xor
sub
mov
fisubrl
ret
test
mov
lret
inc
repnz
mov
dec
xor
mov
xor
pop
jp
es
adc
mov
mov
sbb
dec
aam
mov
outsl
loope
sub
push
sub
cmp
orb
es
or
out
aaa
or
enter
jae
inc
es
incl
sbb
inc
lods
enter
pop
cmp
insl
gs
subl
les
sub
cmpsl
pop
out
sbb
mov
iret
xlat
dec
or
outsl
pop
filds
ljmp
push
cmpsl
pop
aas
sbb
int3
inc
and
push
inc
sub
idivl
or
inc
cmp
adc
add
xchg
mov
fsubl
adc
dec
or
inc
or
inc
lcall
pop
inc
into
jne
iret
cmp
pushf
xorl
dec
add
fsts
or
adc
mov
cmp
jae
in
xor
push
jge
enter
fucomi
mulb
and
adc
xlat
pusha
jle
fs
sbb
ret
dec
xor
and
or
cmpsl
pop
rcrl
addr16
movsb
shlb
aas
push
and
outsl
jbe
jecxz
add
test
inc
lret
pusha
sbb
jb
and
push
sbb
adc
sbb
adc
movsb
shlb
inc
rolb
pop
push
dec
and
test
xor
sbb
fbld
push
sub
inc
icebp
inc
add
push
lea
xor
ficoms
scas
xchg
inc
imul
mov
ljmp
aas
ds
or
test
inc
and
xor
adc
test
daa
xor
enter
adc
lret
ret
jno
cmc
dec
xor
fdivrl
jb
inc
loope
push
cmp
jns
jmp
adc
and
sub
sbb
xor
lods
inc
cld
dec
adc
dec
enter
in
call
sub
iret
xor
jne
jno
or
out
mov
imul
int3
js
push
cld
push
jae
lcall
enter
inc
or
adc
adc
adc
or
pop
push
cs
push
adc
sbb
inc
xor
jmp
mov
and
and
push
inc
dec
addb
cmp
add
mov
ja
push
clc
decl
shl
cli
repz
int
cmpl
xchg
add
pop
cmp
test
insl
popa
push
popa
jmp
mov
shrb
scas
data16
jmp
mov
push
and
adcl
inc
movsb
sar
jge
int
in
inc
pop
xor
popa
shrl
iret
or
push
xor
push
cmpsl
pop
lahf
sbb
and
iret
xlat
scas
je
lea
scas
push
aas
cmp
gs
push
in
dec
adc
pop
pop
popa
and
add
xor
jo
push
push
out
inc
cmp
aaa
iret
icebp
je
or
push
adc
int3
inc
movb
aas
and
pop
xlat
xlat
fxch
adc
insb
mov
pop
push
and
iret
pop
lret
mov
sub
adc
ret
jge
int
xor
int3
inc
imul
adc
inc
and
xor
adc
add
les
fstpt
push
or
insb
dec
push
popa
call
mov
jle
lods
inc
push
mov
fidivs
icebp
ja
aad
enter
ret
fcoms
fistps
pop
call
in
mov
inc
jne
fldt
jb
sub
push
into
adc
test
lock
dec
xor
add
push
jno
xor
addr16
push
fidivs
xchg
mov
cmpsb
or
cmp
mov
fimull
mov
incl
movsl
arpl
push
mov
std
xlat
idivl
xor
jnp
rorb
outsl
stos
fs
je
arpl
mov
decl
lret
xchg
cmp
inc
sub
popf
push
cmpsl
pop
scas
sbb
sar
sbb
cmp
add
push
cmp
add
pusha
jnp
jb
push
out
or
inc
jae
jno
mov
pop
xor
jne
xchg
je
cmp
aaa
mov
incl
xlat
lock
push
aam
aad
push
inc
push
int3
inc
je
ljmp
aas
and
aas
sahf
arpl
pop
leave
fisttpl
mov
cmp
movsb
shlb
std
fnstenv
iret
icebp
je
pusha
xlat
icebp
dec
adc
pop
out
lods
push
mov
add
xor
aad
cmp
xlat
xor
adc
rcrb
mov
inc
and
lods
fs
sbb
ja
cmp
push
add
adc
push
add
sub
mov
sub
call
jno
je
sbb
dec
add
lahf
dec
add
addr16
or
jb
jne
adc
test
sbb
jg
dec
add
mov
ds
xor
pop
pop
fs
hlt
daa
jo
adc
dec
add
fistpl
pusha
adcl
jne
lea
adc
and
inc
cmp
arpl
add
sbb
aas
mov
or
incl
mov
sbb
fcom
test
dec
aam
push
or
push
enter
in
jae
jecxz
add
test
mov
call
push
sbb
je
arpl
fsts
inc
mov
mov
xor
xor
sbb
jno
inc
adc
pop
lods
loope
inc
or
cmpl
jne
or
aaa
xor
int
mov
leave
push
popa
repnz
aaa
mov
and
imulb
xor
xor
xor
test
xlat
inc
sbb
clc
test
adc
aas
xor
mov
add
inc
add
pop
dec
pop
js
jo
fsts
out
or
inc
fistps
add
pop
test
xor
sbb
pop
and
inc
mov
pop
pusha
push
gs
cmp
pushf
xorl
xor
inc
add
push
addr16
jbe
sub
and
decl
adc
inc
or
and
add
in
mov
and
es
pop
inc
sbb
ds
arpl
stos
fdivs
out
add
repnz
jno
je
or
push
and
test
adc
xlat
push
xor
adc
outsl
xor
jno
test
int3
jne
xchg
jb
xor
xor
rol
lcall
inc
mov
inc
iret
pusha
xlat
push
fisttpll
pop
pop
enter
jae
lods
out
or
pop
dec
xor
int
enter
push
clc
call
pusha
notl
and
stos
inc
or
xorl
fdivs
jle
sub
jmp
icebp
add
mov
rcr
fbld
jno
fistl
roll
push
pop
dec
bound
pop
sub
and
insb
dec
mov
enter
jae
mov
push
lds
xor
xor
sarb
adc
or
push
adc
xor
aad
inc
pop
jno
push
xor
and
xchg
add
jp
aaa
pop
xor
int3
inc
fcomp
push
or
or
adc
inc
cmp
insl
rclb
push
lea
aad
iret
mov
lock
cmp
pushf
xorl
filds
daa
fs
mov
outsl
inc
inc
jmp
cmp
filds
sub
ror
xlat
jno
adc
adc
enter
inc
cmp
popa
sbb
add
decb
les
mov
stos
testl
add
popf
orl
xor
data16
pop
mov
sub
jp
xor
fiaddl
outsl
test
inc
mov
xor
sub
mov
enter
repz
cmp
ficoms
pop
push
ss
xor
mov
sub
and
push
out
pusha
cmp
aaa
lret
mov
hlt
pop
mov
pop
lds
cmc
jne
and
jge
sbb
ss
enter
mov
jne
fnstenv
into
jne
mov
cld
out
mov
xlat
in
ds
incl
xlat
push
add
ja
mov
pop
int3
dec
mov
sub
push
sub
and
aas
iret
pop
push
jno
call
mov
mov
mov
mov
hlt
daa
jo
jne
xor
out
adcb
aas
sub
jbe
mov
loope
test
pop
int
je
or
sub
lcall
fistps
dec
iret
pop
ret
loope
mov
adc
ret
jge
int
in
adc
sub
pop
fiadds
inc
xor
repz
adc
mov
or
inc
pop
pop
nop
sbb
push
decl
mov
gs
loope
call
add
arpl
loope
call
lods
out
icebp
jne
or
push
add
scas
mov
iret
xlat
stos
movsb
clc
sti
out
push
test
in
iret
mov
loope
adc
mov
jae
in
xor
push
jl
rcrl
arpl
add
xchg
sub
dec
mov
add
jmp
push
inc
xor
in
xor
mov
lock
jne
and
add
popa
dec
int3
mov
std
jmp
vdivps
cltd
mov
fsts
pop
call
or
cli
rep
add
push
push
xchg
jl
adc
sbb
add
xlat
push
add
rcrb
pop
add
ficomps
es
inc
call
mov
aas
ja
push
mov
popf
mov
xor
lods
loop
or
cmc
lods
enter
push
mov
dec
adc
addr16
pop
jno
pop
xor
call
xor
aad
aas
mov
test
inc
sbb
xor
adc
adc
inc
bound
mov
pushf
lcall
incl
xlat
push
sub
lcall
fimull
pusha
fadds
fdivrp
xor
pop
pop
jecxz
aas
dec
fs
mov
xor
ret
mov
cs
jg
dec
or
sbb
gs
clc
xchg
adc
dec
sbb
outsb
or
imul
and
rcl
sbb
cs
adc
lret
mov
jns
add
out
or
mov
xor
jmp
sbb
sbb
fldcw
mov
fisubs
ret
mov
sub
aas
dec
xor
xor
lahf
and
mov
add
cmp
inc
xchg
ja
jp
ret
mov
add
add
sub
test
dec
nop
pop
dec
mov
push
mov
pop
call
mov
xor
lods
out
addr16
mov
shll
aaa
mov
push
and
call
mov
add
add
add
aad
mov
fcoms
clc
fdivrp
mov
mov
mov
mov
pop
cmp
dec
test
push
aaa
dec
or
aas
lods
lret
add
pop
push
and
add
outsb
jl
movsl
fiaddl
sbb
je
cmp
loopne
xor
adc
cs
sbb
mov
add
mov
or
pop
mov
mov
cmp
aas
jns
inc
ficoml
ljmp
add
mov
clc
fdivrp
push
jae
lcall
dec
mov
sbb
add
xchg
mov
adc
js
mov
enter
jno
inc
mov
and
and
ret
mov
cmp
push
int3
inc
pusha
into
out
inc
fnstcw
xor
mov
mov
cmp
dec
mov
xor
jb
xchg
pop
sub
xchg
inc
inc
popa
mov
fdivs
fcomp
decl
adc
inc
sub
loopne
add
push
or
xor
fldt
dec
and
inc
adcb
imul
push
jns
call
ljmp
pop
jns
aaa
les
ret
dec
push
fistpl
push
enter
push
xchg
into
dec
inc
pusha
scas
pop
dec
call
fisttpl
outsb
ret
mov
stos
push
xor
inc
inc
xor
mov
and
stos
push
xor
leave
push
aad
mov
xor
xor
lods
je
mov
jmp
xor
mov
adc
jne
xchg
push
aaa
adc
aas
popa
mov
cmp
mov
jnp
sub
jne
mov
jle
inc
add
jp
pop
push
mov
inc
or
mov
inc
mov
scas
jno
cmp
je
imul
jl
sbb
push
and
orl
lods
pop
or
call
mov
jae
call
inc
push
idivl
jne
jno
movsl
sub
movzbl
and
add
add
daa
nop
pop
add
stc
inc
xor
pop
shrb
loopne
add
push
mov
aas
lahf
daa
stos
dec
pop
xchg
inc
xorl
cmp
jmp
test
inc
ficoml
rcr
pop
mov
outsb
lods
or
push
testl
addr16
movzbl
ror
add
mov
jns
add
xchg
push
push
jmp
xor
pushl
xor
and
mov
mov
icebp
into
and
add
nop
add
mov
hlt
mov
mov
xchg
pop
add
cmp
inc
mov
mov
outsl
stos
mov
mov
sbb
iret
jno
jb
mov
push
and
mov
mov
and
loope
add
adc
roll
cmp
stos
cmp
xor
jno
jae
mov
and
popa
mov
lock
call
iret
cmp
mov
jno
cmp
outsl
inc
sub
fdecstp
mov
add
and
mov
mov
mov
mov
push
adc
aad
mov
js
xchg
sub
pop
mov
ret
mov
sbb
and
and
pop
mov
jbe
push
cmp
lcall
movsb
or
dec
or
out
jbe
push
enter
sarl
mov
cmp
aaa
cmp
mov
mov
pop
insl
mov
mov
inc
sub
jno
bound
dec
mov
adc
dec
xor
inc
mov
imul
jbe
adc
and
daa
into
xlat
fldcw
dec
cmpsl
inc
ss
xchg
cmp
pop
daa
loopne
add
and
shrb
push
sub
jne
aaa
dec
lock
and
sar
add
fildl
mov
lods
push
cld
mov
lret
xchg
xor
xor
xor
mov
out
setge
sbb
mov
out
jmp
inc
outsl
pop
cli
repnz
mov
push
jge
mov
insb
add
call
jns
outsb
cmp
push
add
insl
pop
ss
xor
fcomi
aad
fimuls
fnstenv
mov
into
jmp
rclb
das
aaa
ds
mov
or
sbb
aad
fmull
inc
daa
jo
sub
and
jo
jbe
loope
sbb
jg
and
inc
xor
and
mov
dec
xor
mov
jne
imul
sub
jbe
pushl
div
or
adc
jne
jae
pop
roll
fmuls
pop
cmp
call
rol
daa
int
jno
leave
xor
mov
rol
daa
int
mov
int3
repz
cmp
push
scas
fwait
inc
inc
mov
push
mov
xor
add
and
push
test
sub
lret
sbb
jo
mov
mov
mov
xchg
ficoms
dec
xor
ret
push
add
pop
leave
lock
js
scas
pop
sub
pop
insl
add
push
aaa
adc
mov
adc
jae
xchg
adc
mov
xor
xor
and
rol
inc
adcl
dec
addr16
mov
inc
and
jb
insl
mov
cmp
jbe,pn
inc
and
test
or
rolb
push
adc
icebp
add
cmc
inc
xor
repz
jne
fsts
mov
and
rcrb
fidivs
nop
out
sti
mov
out
xor
fucomip
ds
mov
stos
fsubs
ja
inc
lret
mov
mov
sbb
callw
mov
pop
mov
lods
out
clc
out
call
or
aas
or
xlat
fldenv
call
or
push
icebp
imul
mov
enter
adcl
cmp
int3
mov
jmp
test
sarl
aam
dec
jmp
stos
cmpsl
sub
sar
fidivrl
imul
push
call
mov
inc
mov
pop
adc
inc
and
mov
mov
jge
ret
mov
mov
pop
pop
fildl
mov
jbe
mov
push
push
adc
mov
mov
pushl
icebp
pop
xchg
movaps
rcr
mov
xchg
dec
rol
mulb
mov
xor
aaa
mov
mov
fisubs
add
push
addr16
add
mov
adc
add
mov
pop
jl
bound
xlat
aad
mov
mov
inc
adc
mov
add
mov
loope
and
sbb
xchg
jae
sbb
and
sub
adc
outsb
push
mov
dec
scas
jne
and
mov
mov
xor
adc
push
pop
mov
fildl
xor
push
pop
mov
aaa
jne
sbb
add
enter
aaa
dec
xor
pop
and
nop
cmp
outsb
pop
call
stos
fdivrs
xor
mov
mov
cmp
and
mov
and
movzbl
and
scas
jbe
dec
xor
xor
sub
out
and
inc
add
push
aas
dec
xor
hlt
inc
and
push
add
out
push
aad
lock
adc
es
jmp
fnstenv
insl
sub
mov
push
cmp
pop
pop
sub
push
jl
gs
mov
je
push
dec
add
lahf
push
ja
dec
xor
or
ja
ror
dec
cmp
xor
sbb
arpl
sbb
mov
xlat
fldcw
inc
aad
icebp
cmp
mov
xor
mov
jmp
rcll
adc
and
pop
es
mov
bound
add
push
aaa
push
icebp
and
and
add
inc
mov
add
lock
es
lea
mov
mov
sbb
adcl
dec
inc
sub
push
and
lret
push
lret
mov
test
dec
aas
lods
insl
and
xor
dec
imul
sub
and
sarl
adc
adc
mov
inc
or
lods
inc
and
adc
cmpsb
cld
int3
iret
lods
out
test
adc
pushf
pop
mov
and
cmpsl
adc
cli
iret
iret
xlat
mov
inc
add
fnstenv
sub
add
fsubrp
adc
xor
xor
cmp
and
cli
jecxz
lcall
lods
fsubl
jl
and
rcr
inc
and
jb
in
adc
xor
xor
cmp
and
xchg
int
scas
push
aaa
dec
mov
jmp
jmp
cmp
xor
dec
iret
pop
add
lea
push
mov
push
iret
iret
xlat
mov
mov
mov
xchg
and
add
data16
aad
pop
mov
add
fsub
fstp
incl
adc
add
xor
or
lods
enter
outsl
sbb
stos
dec
or
inc
mov
push
ret
jne
pop
mov
push
sub
add
lods
inc
outsb
inc
jmp
mov
add
test
shll
outsl
jbe
stos
in
fisttpl
jg
fcmovne
fstl
pusha
mov
rorb
rcrb
mov
shrb
and
test
aaa
or
fld
sar
fnsave
mov
leave
repz
icebp
cmp
xor
push
mov
shrb
pop
and
xor
sub
movsb
pushl
push
mov
fprem
cltd
filds
stos
add
jae
mov
shl
dec
outsb
rcr
mov
push
enter
enter
mov
out
cmp
jmp
fnstenv
push
pop
pop
mov
pop
shl
test
es
clc
mov
sub
mov
stos
sbb
into
icebp
into
cs
inc
lcall
xor
jb
gs
test
clc
pushf
mov
mov
stos
shlb
jne
stos
adc
xor
inc
cmp
jmp
xlat
enter
mov
out
cmp
jmp
fnstenv
push
pop
pop
mov
pop
shl
mov
mov
int3
lods
rclb
pop
mov
iret
into
jbe
jg
stos
iret
shl
ret
mov
pop
das
mov
inc
sub
fnstcw
mov
fisubl
fcmovu
clc
cltd
filds
stos
add
jae
mov
shl
dec
outsb
rcr
lods
rclb
sbbl
push
cmp
cmp
xor
flds
push
mov
mov
pop
ss
push
mov
pop
inc
mov
jne
lods
push
hlt
mov
lret
fisubrl
jnp
pushl
xlat
imul
in
nop
or
ret
lret
leave
mov
mov
mov
adc
cmp
icebp
pop
cli
repnz
stos
or
lret
pop
test
and
leave
icebp
add
add
push
add
sub
or
inc
lock
jbe
and
clc
jg
fcmovne
fisttpll
xor
jo
stc
ljmp
xor
fdecstp
hlt
flds
xor
dec
shr
sbb
mov
cld
jb
icebp
cmp
enter
sbb
lea
push
push
faddp
hlt
aam
enter
xor
jmp
push
and
adc
leave
leave
add
stos
out
fsubrp
push
dec
mov
inc
jmp
pop
cmp
fisttpl
jg
fistpl
addr16
mov
add
mov
popa
mov
or
inc
xlat
jmp
jae
push
aad
aas
sbb
adc
movsb
sarb
inc
and
iret
jg
add
mov
pop
pop
ja
aas
dec
add
fadd
jge
int
jmp
mov
inc
into
dec
aas
mov
rcrb
aad
enter
aas
mov
sub
jne
test
aaa
js
jmp
pop
sub
push
and
out
and
lods
inc
outsb
and
add
cmp
cmc
inc
xor
test
jle
daa
push
dec
mov
dec
mov
push
push
xor
jg
aas
sub
mov
rol
stos
out
push
push
dec
mov
dec
mov
inc
cmp
xor
adc
lods
mov
mov
push
jg
shlb
adcb
jbe
push
ljmp
push
scas
mov
adc
and
loop
fmulp
xor
xor
push
sub
cs
pop
add
stos
xor
and
push
cmp
sbb
mov
mov
pop
sub
jbe
out
sbb
push
out
into
mov
mov
insb
lcall
enter
jae
mov
out
pop
pop
mov
xor
push
fdivrp
call
mov
inc
adc
mov
call
mov
into
dec
sar
out
jne
mov
mov
leave
ret
setge
aaa
push
pusha
xlat
xor
inc
sbb
clc
test
xor
push
stos
sbb
setne
or
sub
xor
inc
sbb
rcrb
ds
inc
xor
add
pop
add
jmp
addl
mov
xor
es
and
je
ror
pop
inc
dec
pop
mov
and
xchg
add
jp
mov
mov
pushf
sbb
xlat
mov
mov
rorb
div
jno
call
sub
icebp
and
and
fisttpl
mov
dec
iret
stos
jne
push
call
mov
into
pop
insl
stc
jmp
stos
in
xor
popa
rol
int
pop
sub
pop
insl
inc
and
fsubl
xorb
sub
inc
cltd
adc
or
enter
inc
mov
out
or
mov
lret
data16
and
incl
ret
jg
pop
outsb
mov
and
xchg
jl
aas
adc
jns
jmp
mov
fs
lcall
cmovno
fdivrp
cmp
xor
mov
insb
fdivs
mov
sbb
sub
mov
popa
js
xor
adc
push
mov
data16
movsb
fs
out
push
aad
pop
mov
xor
jo
sbb
mov
cmp
test
xlat
fsts
mov
jl
mov
into
dec
movsw
mov
adc
xlat
push
mov
pushl
xor
es
push
test
xlat
pop
pop
lcall
fs
mov
sub
add
dec
lret
add
mov
data16
mov
test
and
jns
mov
repz
clc
mov
jbe
mov
dec
int3
test
lods
enter
mov
call
scas
movsb
inc
pop
mov
jbe
jne
xchg
cld
aam
enter
std
iret
xlat
adc
int3
dec
rorb
imul
lods
test
out
jp
aaa
mov
and
jo
mov
or
pop
push
adc
ficomps
rolb
mov
repnz
xlat
adc
call
mov
mov
pop
cs
xor
roll
mov
sub
inc
jno
sbb
xlat
fldenv
lea
data16
push
hlt
jne
cmpsb
and
add
push
js
adc
pop
repz
mov
fsts
push
pop
aas
add
or
push
int3
and
ret
dec
lret
mov
arpl
push
jae
lea
and
add
test
push
sub
inc
in
inc
add
push
lock
loopne
xor
loope
cld
mov
inc
add
inc
or
add
call
ret
push
mov
xor
mov
push
jae
lcall
mov
fs
add
dec
ds
addr16
aaa
dec
add
push
pop
aas
adc
ror
int3
iret
pop
add
shlb
add
loopne
mov
cmp
push
out
pop
aas
adc
iret
icebp
je
xlat
xor
iret
aad
lock
jns
insb
cld
push
sub
sbb
xchg
repnz
sub
fs
add
inc
add
mov
js
xor
adc
and
aaa
push
ja
repz
lcall
xchg
push
ret
ja
add
loope
xchg
add
ficoml
pop
orb
das
push
stos
fisubs
jne
xchg
add
pop
inc
push
or
pop
and
je
jge
pop
pop
mov
aas
pop
and
cmp
daa
jae
xor
lock
stos
fidivs
jne
jae
lea
mov
imul
inc
mov
or
filds
xor
pop
add
mov
xlat
mov
adc
call
or
mov
call
cmc
ret
add
mov
pop
cs
cld
out
pop
aas
adc
ret
je
mov
xlat
push
dec
push
push
xchg
jl
aas
adc
sbb
lea
jns
lods
dec
in
dec
pop
push
xchg
inc
aaa
dec
jns
arpl
jmp
mov
dec
or
adc
sub
mov
test
ret
je
or
pop
pop
ja
lea
aad
aas
sbb
pusha
iret
pop
xlat
test
xor
mov
mov
loope
adc
outsb
pop
mov
ret
adc
rcr
xor
xor
test
call
add
aas
cmp
jbe
test
and
decl
mov
mov
push
inc
xor
fwait
cmc
dec
xor
fsubrl
sbb
aas
sbb
or
test
inc
push
adc
inc
push
aad
jnp
jno
mov
pop
inc
jb
inc
in
push
cmp
jns
add
in
and
outsl
cmpsb
addr16
je
arpl
jne
enter
and
and
mov
push
xor
jne
lods
inc
mov
cmp
test
insb
dec
lcall
enter
jae
stos
imul
cmp
xor
dec
xor
mov
or
popa
notl
clc
ret
mov
int
push
jno
xor
add
fnstenv
inc
clc
dec
sub
inc
jb
or
call
movsb
shlb
fiadds
mov
jne
jbe
jne
nop
sbb
aad
push
pop
jno
mov
pop
aas
fidivs
dec
adc
inc
pop
dec
into
jne
iret
cmp
pushf
xorl
clc
int3
and
mov
sbb
call
in
bound
adc
lea
and
push
pop
sub
push
or
iret
rcrb
pop
add
ficomps
sub
std
mov
mov
mov
push
cmp
inc
in
lcall
pusha
and
incl
xlat
lock
shlb
rcrl
ds
sbb
jle
leave
fildl
inc
lods
popa
mov
je
jo
mov
roll
push
inc
inc
jmp
and
rcr
jmp
push
addr16
adc
sbb
ljmp
push
aaa
jns
jmp
mov
add
inc
push
inc
addr16
mov
gs
dec
mov
dec
pop
add
jge
gs
dec
mov
dec
mov
inc
jnp
ficoms
insl
gs
push
enter
mov
sub
pop
mov
pop
pop
jno
repz
repz
iret
pop
add
inc
sub
xor
ficoms
pop
in
dec
xor
data16
xor
inc
sbb
mov
je
xor
es
add
or
aas
bound
or
test
inc
and
adc
lcall
xor
jne
mov
or
daa
das
sarl
mov
shr
mov
repnz
cmp
int
mov
xchg
sbb
outsb
and
enter
stos
shl
pop
aas
mov
sbb
and
es
dec
jb
imul
sbb
stos
pop
inc
adcl
fnstenv
cmp
jmp
jne
fnstenv
xor
es
loope
cltd
mov
aas
mov
lock
gs
out
mov
pop
xor
jne
or
into
or
mov
or
shrd
xchg
ljmp
mov
aaa
cmc
leave
jmp
sub
dec
into
je
xor
fidivs
aad
out
pop
jno
lock
add
je
push
pop
dec
into
xor
ficoms
jmp
inc
aas
mov
and
xor
add
mov
xlat
iret
mov
add
push
mull
sub
add
stos
fnstenv
mov
xor
sub
inc
add
xchg
dec
bound
mov
pop
cmp
add
inc
je
outsl
aaa
dec
xor
inc
push
adc
insb
imulb
mov
xor
jle
adc
sub
cmp
xor
xor
pop
gs
jne
jb
push
pop
dec
pop
xorb
sub
add
pop
lcall
enter
jae
mov
insl
push
push
mov
mov
jne
dec
mov
dec
mov
int3
outsl
jbe
jecxz
add
jmp
lods
inc
inc
mov
int3
fadds
in
fdivrp
mov
lret
mov
int
push
mov
shr
push
aaa
dec
bound
mov
push
sub
test
scas
hlt
iret
xlat
mov
into
ds
push
aaa
mov
jl
popa
add
lods
enter
and
add
enter
int3
iret
ret
dec
add
fyl2xp1
mov
lods
out
sub
sbb
jns
popa
lea
or
test
lret
testb
sub
jne
xchg
xchg
fs
dec
mov
inc
xor
std
jle
mov
sbb
call
in
mov
or
sbb
scas
stos
lret
push
mov
jmp
vdivps
aas
cmp
push
call
fwait
hlt
leave
stc
cli
repz
int
inc
adc
clc
aad
pop
iret
icebp
je
mov
sub
je
jae
lea
data16
adc
inc
and
push
add
or
adc
mov
inc
add
loop
enter
jg
fistpl
jne
mov
fsts
test
xor
inc
inc
push
pop
xor
dec
add
outsl
inc
call
pop
add
jne
out
or
and
mov
cld
and
mov
add
rcll
into
pop
outsb
repz
push
and
lcall
inc
pop
int3
inc
sub
xor
adc
lcall
into
jmp
mov
fdivrp
pop
sub
ds
push
sbb
imulb
mov
daa
leave
flds
inc
and
sub
xor
add
xor
inc
fdivs
sbb
jno
inc
cmp
enter
xor
sub
movsl
shlb
cs
insl
rep
out
ficomps
dec
lret
pop
aas
lret
fisttpll
xor
sub
mov
mov
lods
out
adc
pushf
mov
mov
lods
out
add
xor
mov
add
sbb
lea
push
mov
push
push
push
jno
xor
arpl
cmp
pushf
xorl
dec
pusha
rclb
add
popf
xorl
dec
cmp
pushf
mov
movl
popa
add
lods
enter
imul
jbe
xor
mov
or
mov
sub
leave
fnstsw
jge
fnstenv
jne
push
push
aad
das
and
push
iret
pop
cs
add
out
mov
shl
pop
mov
inc
push
stos
je
xchg
add
jp
inc
dec
into
adc
movsb
shlb
rolb
mov
and
ljmp
outsl
stos
enter
int3
and
mov
addr16
mov
push
mov
cwtl
adc
jne
pop
mov
xor
push
mov
jmp
pop
lcall
pusha
mov
stos
loop
mov
push
pop
jecxz
pusha
jns
cmp
int3
xor
test
jle
add
and
mov
imul
xor
jo
xor
inc
and
or
push
int3
out
pop
adc
clc
xor
aaa
jmp
xlat
lock
mov
inc
lcall
stos
das
or
mov
push
lods
add
xor
arpl
dec
loop
xor
aaa
adc
cmp
push
sub
and
sbb
inc
push
push
push
sbb
fidivs
dec
cmp
fs
cmp
mov
or
inc
adc
add
decl
mov
int3
xor
mov
push
ret
aad
lret
push
jae
inc
sub
adc
sbb
mov
dec
into
xor
ficoms
jmp
sbb
iret
xlat
mov
inc
add
add
sbb
add
fadds
in
decl
icebp
dec
xor
int3
inc
or
lods
xchg
sbb
add
mull
lods
out
test
aam
dec
xor
arpl
daa
and
decl
adc
mov
ds
repz
sub
mov
mov
ss
xor
add
fstpt
mov
adc
lea
data16
inc
and
push
xor
inc
lea
fldt
jmp
ficoms
jno
add
xor
xor
and
push
cmp
dec
jo
pop
icebp
sub
and
sbb
xor
xor
xor
lods
inc
add
daa
push
imul
and
cmp
sub
rcrb
mov
or
mov
idivb
lea
aaa
xor
int
in
add
dec
es
bswap
add
out
out
fidivrs
adc
mov
mov
test
ja
add
xor
xchg
inc
add
fnstenv
mov
push
leave
call
scas
xchg
inc
xor
pop
ret
sub
fsub
mov
es
or
jne
dec
and
into
fidivrl
dec
mov
push
sbb
and
mov
fdivs
sbb
imul
jb
inc
mov
inc
push
inc
push
add
xor
add
cmp
lcall
je
mov
sbb
and
add
push
ret
mov
lea
shrb
inc
aad
decb
les
inc
push
cmpsl
mov
mov
adc
inc
test
adc
jne
mov
ds
lds
scas
enter
mov
aad
ficoms
out
mov
ds
jne
ja
xchg
add
fildl
jg
fcmovne
fisttpll
data16
push
sub
imull
or
push
push
mov
nop
sbb
ret
mov
mov
adc
push
or
lcall
jno
jbe
mov
dec
int3
inc
fiadds
pop
aad
inc
xor
dec
and
xor
bswap
cmp
mov
inc
inc
daa
inc
add
mov
add
es
and
pop
push
test
inc
iret
sbb
pop
inc
sub
popa
mov
shlb
incl
ret
jno
cmc
inc
xor
fdivrl
adc
mov
xor
mov
mov
push
pushf
xorl
inc
and
movsb
shlb
ss
jae
jno
mov
sub
sub
mov
mov
mov
dec
mov
in
pop
jb
pop
mov
mov
mov
push
punpckhbw
and
and
add
int
cmpl
pop
ja
dec
pop
add
inc
or
fidivs
mov
dec
into
adc
movsb
shlb
and
jae
xor
in
add
dec
pop
mov
add
rclb
adc
mov
inc
xor
out
xor
pop
adcb
andps
cmp
jmp
push
xchg
push
inc
cmp
aaa
mov
cmp
push
mov
adc
xor
iret
pop
cs
cld
dec
mov
dec
mov
inc
sub
and
inc
and
enter
inc
int3
rclb
add
incl
andb
andl
push
mov
cmp
inc
adc
shlb
mov
dec
push
mov
popa
and
jp
pop
pop
add
push
mov
ja
and
orl
pop
mov
push
aam
lods
dec
clc
dec
sub
inc
push
enter
jbe
js
xor
adc
test
daa
cs
add
jne
jbe
inc
or
jne
filds
fnstcw
xor
sub
add
push
inc
dec
or
inc
sub
inc
cld
add
aas
dec
fs
popa
stos
inc
fldl
push
int3
inc
add
into
jne
iret
pop
cs
cmp
sbb
call
in
fs
jne
ret
lods
inc
inc
pop
add
inc
and
pop
call
xlat
idivl
xor
ficoms
mov
adc
mov
ret
scas
sbb
pusha
arpl
push
or
add
or
and
pop
dec
enter
inc
and
push
or
insb
mov
or
test
inc
sub
mov
dec
mov
xor
push
mov
adc
int
fs
scas
sbb
sub
inc
cmp
xor
rcrb
roll
jo
stos
fs
dec
mov
inc
incw
xlat
push
sub
pushf
xorl
movl
cmp
shrb
ss
into
mov
and
lods
inc
pop
incw
xlat
push
sub
pushf
xorl
sbb
cld
jmp
adc
sub
enter
inc
cmp
xor
mov
push
arpl
out
push
push
dec
mov
jl
adc
fidivs
mov
mov
xor
daa
and
stos
ret
pop
fildl
jg
fcmovne
fldl
fs
push
xchg
add
jp
jb
sbb
xor
xlat
xor
adc
rcrb
inc
pop
movsb
pop
jo
stos
fs
push
icebp
nop
mov
push
mov
jle
sahf
sbb
sbb
sbb
iret
xlat
jbe
sub
ror
mov
push
mov
decl
mov
mov
push
dec
push
mov
fnstenv
call
cmp
loopne
and
sbb
stos
mov
mov
fsubl
test
in
xchg
add
jp
aaa
and
dec
and
add
enter
inc
sub
out
cld
ret
mov
incl
mov
out
jmp
flds
pop
or
jne
icebp
rcl
lods
addr16
xlat
fnstenv
ja
mov
sbb
adc
add
pop
ret
mov
xor
stos
fisubs
mov
cmp
inc
inc
pop
and
xor
rcrb
mov
leave
icebp
xor
jae
in
xor
push
jl
addl
jmp
lret
daa
ret
mov
xchg
cmpsb
adc
add
inc
inc
mov
into
mov
inc
sbb
fiadds
xor
mov
push
scas
or
xchg
inc
or
leave
dec
cld
xor
into
inc
sar
out
add
push
aaa
ds
arpl
xchg
xor
xchg
jb
movsl
xor
leave
andl
mov
mov
lock
cs
rclb
daa
shl
dec
mov
ret
xor
xchg
xchg
outsl
stos
mov
xor
fdivrs
sar
add
push
aaa
imul
dec
add
fs
cmpsb
jns
xor
imul
incl
fnstcw
push
mov
dec
outsl
fldenv
fs
test
enter
inc
fisubs
add
add
negb
aaa
cmp
inc
mov
dec
bound
mov
inc
repz
mov
out
add
sub
dec
inc
je
aas
lahf
and
adc
xor
dec
outsb
pop
push
push
mov
shr
push
aaa
dec
addr16
mov
decl
jne
fdivs
addb
pushl
int3
test
scas
enter
and
sahf
xor
add
and
adc
inc
cmp
push
adc
or
adc
mov
inc
push
int3
inc
cmp
xor
adc
adc
inc
inc
ja
int
pop
mov
rcrb
adc
loop
mov
stos
lret
push
xchg
je
cmp
aaa
jns
push
mov
push
dec
adc
cli
push
or
push
test
test
daa
gs
push
out
or
add
cs
lea
adc
pop
add
jnp
push
or
insb
mov
cld
xlat
idivl
cmp
inc
rcl
mov
or
pop
iret
leave
dec
clc
push
inc
in
int
movb
lcall
enter
jbe
jbe
call
lea
mov
xor
jne
push
xor
int3
lea
push
arpl
jbe
or
adc
mov
inc
jae
add
lea
mov
mov
push
cmp
jmp
xchg
les
adc
lods
test
and
call
mov
enter
mov
test
loopne
icebp
je
push
stos
pop
loope
jne
mov
sub
inc
aas
mov
adc
xlat
idivl
xor
dec
xor
jne
test
adc
stos
jecxz
leave
ret
push
mov
add
xor
dec
adc
insb
dec
mov
fistpll
pusha
call
adc
jg
inc
ficoms
jbe
sbb
adc
mov
or
push
cmp
pop
and
rolb
or
mov
and
inc
adc
add
xor
cmpsl
xlat
fbstp
lahf
fdivrp
push
int3
inc
fiaddl
mov
iret
shr
call
testl
and
and
push
sbb
sub
xor
push
xchg
xchg
into
mov
push
lea
aad
mov
jno
insb
outsb
loope
xor
push
xchg
lods
add
push
fs
decl
jne
lods
and
and
fcmovu
decl
push
mov
sub
mov
mov
les
outsl
jbe
loope
adc
les
xor
sub
inc
jmp
pusha
testl
insb
sbb
add
jmp
enter
call
testl
stos
movsb
mov
out
push
cmpsl
xlat
xorl
mov
mov
lods
enter
cmp
xor
xchg
icebp
mov
xor
stos
je
add
inc
or
call
aaa
or
push
enter
jmp
arpl
sbb
scas
aaa
dec
xor
mov
fcmovnu
call
dec
ss
lea
xor
push
cmpsl
mov
into
pop
push
push
jns
add
sbb
scas
out
mov
push
pop
sub
and
adc
sbb
dec
xor
xor
dec
gs
push
jae
lea
addr16
int3
iret
sbb
jno
mov
outsl
out
and
lea
push
lea
ret
fs
and
add
not
aad
mov
ds
repz
stos
movsb
mov
out
push
ret
dec
xor
repz
ljmp
mov
bound
dec
xor
xor
sbb
push
aaa
jns
xor
pushf
adc
pop
add
or
push
iret
test
or
mov
lret
mov
repnz
mov
add
sbb
xor
adc
int3
mov
mov
add
fmuls
mov
aaa
dec
or
cmp
mov
fdivrs
and
add
testb
scas
lret
out
add
imul
pop
test
mov
outsl
test
int3
iret
mov
cltd
jg
stos
sub
lods
add
hlt
adc
lea
call
lods
inc
lock
adc
xlat
shll
xlat
xor
adc
shlb
xor
lods
out
add
sbb
mov
call
push
sarb
adc
iret
icebp
jne
mov
xor
push
leave
call
xor
jbe
add
xor
shll
mov
add
vdivps
dec
jmpw
mov
out
pop
ret
enter
push
push
dec
mov
mov
or
dec
and
mov
dec
mov
mov
dec
mov
pop
mov
iret
pop
add
push
xchg
xlat
pop
cmp
arpl
dec
movsl
add
sbb
aas
adc
xor
cli
jmp
xchg
add
mov
dec
mov
add
adc
out
push
or
and
jp
sbb
xlat
int3
inc
and
jne
and
xor
mov
imul
pushl
mov
lods
loope
into
dec
js
sar
je
pop
std
mov
xor
ret
inc
lret
nop
aas
dec
fs
mov
cmp
mov
sub
pop
rcrl
addr16
add
fnstenv
adc
test
es
lret
dec
hlt
xor
sub
push
pop
negl
sub
aas
aas
sub
mov
outsl
inc
sub
fxch
shl
insl
stc
jmp
stos
in
xor
push
jl
out
shll
mov
out
ljmp
divb
xor
stos
fs
push
jae
push
lods
inc
inc
pop
dec
and
test
dec
test
push
aaa
dec
pop
and
movsl
arpl
push
call
add
push
mov
push
sub
out
or
adc
iret
icebp
movzwl
lea
mov
add
mov
cmp
xchg
pop
mov
fdivs
ror
push
push
and
jne
fnstenv
sbb
xor
dec
add
fisttps
in
fistpl
out
mov
cmp
pop
and
call
xchg
je
arpl
pop
sub
inc
xor
push
or
push
iret
mov
or
mov
sbb
out
arpl
jmp
enter
pop
xor
ljmp
aad
loope
icebp
je
mov
inc
in
lcall
pop
push
into
jne
pop
xlat
fnstenv
adc
mov
imul
jge
int
in
or
iret
roll
mov
nop
sbb
in
pop
enter
ret
and
movsb
shlb
ret
xorl
xor
pop
sub
and
push
jae
lcall
enter
jae
mov
push
lds
callw
xlat
fldcw
fldenv
add
add
push
inc
jbe
fnstenv
jno
jbe
mov
clc
xor
mov
mov
adc
xor
mov
pop
add
dec
bound
iret
clc
jbe
mov
fldcw
add
sbb
sarb
mov
xlat
arpl
cmp
xor
sub
xor
cmp
inc
xchg
ja
jne
dec
mov
inc
into
adc
movsb
rorb
add
jns
mov
into
pushl
pop
push
cmp
mov
clc
int3
inc
and
xor
adc
orl
shll
jae
jecxz
add
jnp
mov
or
out
ja
lea
aaa
jae
or
daa
adc
je
xchg
jns
shll
leave
dec
add
inc
cs
dec
mov
or
aas
xor
adc
bound
inc
iret
mov
push
pop
mov
sbb
pop
cmp
adc
add
incl
sbb
jne
xor
push
push
or
rcrb
dec
mov
aaa
mov
and
xlat
test
jne
fisttpl
dec
lret
mov
imul
fstl
call
add
jae
insl
test
hlt
nop
add
cmpsl
pop
repz
int3
inc
and
lods
adc
push
mov
inc
pop
add
rorl
push
ret
mov
incl
mov
scas
mov
mov
fdivrs
mov
ss
aad
ret
mov
lock
push
int3
mov
lret
add
mov
mov
out
inc
cs
fcoms
xchg
fdivrp
xor
stos
push
aad
ret
or
jne
pusha
rolb
jmp
xor
mov
hlt
int3
inc
shrb
test
shll
xor
scas
cmp
inc
mov
inc
out
push
mov
leave
ret
cmp
inc
add
sub
inc
pop
inc
jmp
xchg
jno
xor
jecxz
add
test
incl
movsl
push
shll
fcomi
mov
mov
mov
jge
xchg
pop
cmp
test
inc
shrl
je
sarl
daa
ror
das
inc
xor
out
ret
je
jns
sub
add
mov
int3
fadd
xchg
fdivrp
mov
jp
pop
jp
dec
xor
xor
jo
adc
scas
xchg
inc
pop
addr16
mov
mov
lods
mov
adc
icebp
adc
aad
pusha
mov
ja
stos
ret
pop
rolb
mov
sub
ds
insb
inc
inc
jge
inc
outsb
cmp
xor
add
push
or
icebp
je
or
push
xor
imul
and
jbe
je
or
push
and
xor
or
dec
xor
fsubrl
dec
jb
mov
mov
clc
cmp
lods
fs
xor
xor
out
sbb
insl
dec
adcb
or
cmp
jle
shrl
add
xchg
jne
mov
test
inc
hlt
out
hlt
scas
xchg
cmp
ret
add
xor
cltd
cmp
sub
jae
xor
and
xchg
sbb
stos
push
inc
mov
xor
sub
ss
sbb
push
push
fbstp
dec
mov
sub
outsl
lods
aaa
mov
inc
and
imull
push
fstps
int3
iret
xlat
mov
add
sub
cmc
jne
es
out
mov
or
or
cmp
inc
aas
fsts
add
sbb
fmul
fcomp
incl
enter
aas
inc
stc
int
movzbl
stos
add
xor
jns
rclb
fs
inc
inc
inc
sbb
and
mov
mov
and
push
sub
adc
jne
xor
xor
adc
rcrb
bswap
xorl
loopne
sbb
repnz
mov
jp
mov
fisubrs
jge
imul
xlat
fnstcw
inc
loope
sub
aas
adc
jle
adc
xor
js
push
inc
inc
push
mov
sub
jne
cmp
fidivrl
sbb
cs
dec
or
inc
add
or
stos
rolb
push
inc
dec
or
pop
push
adc
sbb
inc
jno
jo
xchg
inc
repnz
and
sub
add
sbb
or
cmpsb
sbb
insb
mov
add
mov
or
leave
sub
sub
ja
mov
mov
sub
dec
push
jl
mov
and
pop
and
adc
lret
pusha
jg
imul
sbb
mov
or
inc
jne
push
sub
and
pop
pop
mov
and
inc
ja
pop
xor
je
jp
and
mov
cld
gs
pop
ficoms
scas
xchg
inc
inc
mov
and
je
xchg
xor
adc
insb
outsb
jae
jecxz
add
mov
clc
mov
mov
repnz
lea
popa
mov
in
mov
insl
dec
adc
dec
inc
mov
ds
and
enter
jne
or
inc
shrb
lcall
je
fsubrs
stos
pop
xor
jne
lret
fnstenv
fimull
mov
cmp
add
insb
mov
popa
testl
int3
or
fbstp
xor
push
or
ror
inc
dec
add
les
enter
enter
mov
dec
or
push
mov
dec
mov
mov
pop
scas
or
inc
push
mov
mov
icebp
dec
mov
inc
inc
or
push
pop
pushl
pop
lcall
enter
jae
lods
out
and
push
push
or
int3
mov
xor
sbb
ljmp
loope
jne
flds
or
inc
sahf
ja
stos
ret
pop
rolb
cmpsb
mov
daa
mov
xlat
mov
daa
ret
je
xchg
mov
enter
jb
mov
ficompl
setp
add
push
fs
insl
fidivl
mov
test
iret
icebp
movzwl
in
jp
and
add
xlat
push
xor
adc
xlat
idivl
dec
orb
adc
mov
xor
pop
inc
fs
cld
fldt
mov
rcrb
aas
lds
dec
shlb
push
pop
ljmp
cs
pop
mov
adc
mov
and
mov
and
or
lcall
lea
push
js
and
jmp
mov
out
mov
add
sbb
ret
inc
cld
mov
in
mov
js
pop
mov
into
dec
outsl
jae
fs
rolb
cmpsb
pusha
push
addr16
call
rcl
enter
xor
sub
mov
les
and
pop
cmp
xor
into
icebp
jne
mov
sbb
push
mov
mov
orl
push
inc
incl
lret
mov
mov
cmp
icebp
inc
lods
aad
mov
je
jne
call
mov
pop
pfnacc
add
push
jne
add
stc
lods
out
cs
shl
or
mov
push
mov
xchg
adc
mov
mov
iret
mov
xchg
xchg
imul
cli
repz
int
push
sub
dec
xor
arpl
dec
add
sbb
lcall
enter
jae
mov
insl
ja
ja
inc
push
or
inc
jne,pt
inc
adc
jne
lods
inc
inc
jmp
and
sub
pop
jne
jae
test
and
xor
ret
dec
xor
repz
jecxz
add
jnp
pusha
outsb
xor
test
sbb
jbe
test
pusha
leave
roll
mov
sub
add
sbb
lcall
enter
jae
mov
out
outsb
cmpsl
pop
iret
sbb
es
and
push
scas
inc
sbb
and
jne
enter
faddl
pop
add
xor
and
out
cmp
adc
ret
aaa
cmp
inc
add
lods
dec
or
jbe
add
cmp
jmp
sub
and
outsl
pop
or
xor
cmpsb
and
push
out
aas
cmp
cmp
xor
inc
sbb
jne
cmc
dec
xor
shlb
sub
stos
push
aaa
and
push
int3
and
mov
test
xor
adc
jg
ljmp
adc
enter
int3
inc
or
fidivs
mov
dec
mov
cmp
call
xchg
lods
add
pop
dec
mov
out
jo
rorb
and
xor
inc
in
lret
mov
mov
add
lods
push
jnp
jb
popa
incl
xlat
xor
rcrb
bswap
mov
ret
and
leave
call
push
add
js
dec
add
inc
push
into
je
sbb
out
sub
adc
rol
rolb
lods
jmp
mov
nop
into
adc
stos
pop
inc
lret
nop
xor
xorb
sub
push
and
out
sbb
adc
mov
and
iret
cmp
pushf
orl
xor
fsubrl
sbb
push
cmpsl
xlat
iret
mov
jmp
fisubs
and
decl
adc
jg
les
xor
pop
jle
idiv
insb
dec
call
popa
push
dec
mov
pop
inc
mov
mov
fxch
dec
mov
mov
mov
je
mov
decl
jne
f2xm1
mov
lods
out
adc
sub
aad
cmp
lods
out
push
inc
lcall
outsb
pop
cli
repnz
xchg
add
out
adc
rcr
pop
xor
stos
movsb
clc
std
out
push
inc
movsb
aaa
dec
xor
sbb
and
in
inc
add
and
je
xlat
fnstenv
subb
add
add
xor
lods
mov
ret
mov
xor
stos
je
xchg
clc
xlat
lods
enter
cmp
add
vdivps
dec
into
jne
iret
cmp
pushf
xorl
jb
add
jns
leave
ret
mov
mov
sub
stos
push
pcmpeqw
push
testb
mov
inc
or
push
or
cmp
daa
xor
xor
add
jmp
cs
dec
jb
jns
out
push
icebp
and
jno
add
add
ss
xor
inc
adc
fnstenv
adc
mov
ror
mov
pop
int3
inc
or
fidivs
mov
mov
hlt
and
mov
cmp
push
and
repz
xor
push
dec
jb
jns
aaa
dec
xor
pop
xor
es
aad
adc
adc
stos
lock
je
add
and
data16
xor
inc
sbb
sarb
into
adc
jg
ret
inc
orl
add
pop
and
data16
adc
decl
adc
mov
xor
jg
clc
jbe
cmp
mov
sbb
sub
xor
mov
popa
negl
push
mov
inc
add
pop
dec
jmp
add
and
cmp
cmp
incl
dec
scas
pop
inc
inc
repnz
mov
or
push
mov
lcall
xor
addr16
lea
push
xchg
incb
or
call
movsl
shlb
push
inc
xor
je
sub
adc
fld
leave
iret
incl
movsl
mov
inc
call
mov
inc
add
or
int3
test
push
xor
xor
movsl
shlb
push
inc
xor
cmp
nop
mov
jne
cmp
add
call
dec
popa
push
int3
and
test
xor
jl
and
and
pop
test
and
push
out
sbb
adc
sbb
push
push
aam
je
rclb
repnz
mov
sub
add
pusha
lea
add
in
ss
mov
jl
ds
xor
sbb
ljmp
mov
lea
aaa
sbb
adc
test
and
ret
pop
mov
xor
xor
pusha
or
add
movsb
push
aas
sub
xlat
push
cmp
adc
outsl
xor
mov
and
lea
inc
ret
mov
test
aas
lods
lea
add
xchg
add
pop
inc
add
sub
insb
pop
imul
push
inc
or
sbb
mov
outsb
jns
int3
and
test
xor
insb
imul
xlat
push
xor
lea
sub
pop
push
mov
add
out
ja
xor
push
dec
neg
inc
je
lods
inc
outsb
and
and
push
xchg
add
dec
xor
mov
pop
or
add
out
inc
adc
insb
pop
lea
add
inc
xor
push
adc
insb
push
push
aad
aas
mov
movsl
bound
and
lods
and
and
mov
sub
pop
jbe
mov
dec
and
jns
pop
mov
sbb
ss
mov
inc
adc
and
stc
pop
insl
inc
test
aas
xor
jbe
je
adc
enter
jae
lods
out
xchg
rcr
add
fcmovnb
ja
mov
cmp
pop
xor
jb
popa
call
dec
adc
mov
int3
lock
inc
rolb
mov
call
or
hlt
pop
mov
lods
daa
mov
int3
dec
xor
jno
lgs
jge
inc
shrd
dec
xor
dec
xchg
xlat
fldenv
mov
lea
lods
std
push
add
jl
fcoml
cmp
and
or
pop
push
mov
dec
mov
and
jl
inc
push
mov
inc
inc
mov
add
enter
in
cmp
push
int3
inc
cmp
nop
movsb
aad
mov
and
bound
adc
and
mov
mov
mov
pop
addl
jle
pop
fisttpl
jg
fcmovne
fstl
pusha
movsw
push
aad
enter
ret
mov
test
inc
xor
inc
mov
dec
xor
xor
pop
sub
and
out
mov
mov
insl
mov
or
adc
movb
sbb
jmp
das
lods
push
mov
push
jl
jnp
and
jge
into
jge
jmp
enter
idivl
dec
incl
mov
add
pop
mov
mov
movsl
arpl
call
scas
xchg
inc
sbb
cmp
jl
je
lret
fnstcw
xor
mov
mov
pop
dec
mov
mov
mov
add
add
cmpsb
xchg
dec
xor
adc
jmp
lret
xlat
in
aas
sub
addl
ret
mov
mov
sub
sub
test
shrb
in
add
sub
sub
mov
and
mov
push
sbb
scas
xchg
inc
inc
into
je
and
push
add
call
mov
push
and
movsb
shlb
inc
ss
dec
adc
inc
or
push
lret
fbstp
and
jae
sbb
cmp
and
cmp
fstps
jb
jmp
mov
or
jne
xchg
or
mov
dec
xor
jl
sub
mov
add
test
inc
hlt
in
add
pop
or
popa
enter
or
test
out
mov
xlat
enter
jne
sub
int3
dec
push
push
sbb
cmp
push
out
lcall
xchg
dec
add
int
pushl
adc
mov
outsl
jno
ja
ljmp
adc
lods
enter
int3
inc
or
leave
jb
out
mov
xlat
sarl
call
stos
clc
test
xor
dec
mov
lods
out
pop
fisttpl
jg
fistpl
pop
add
xor
dec
add
sbb
mov
lods
out
sub
jbe
mov
xor
pop
aas
sbb
inc
cmp
ret
int
out
fadd
push
mov
repz
jecxz
add
stos
mov
lds
daa
stos
inc
or
mov
mov
shl
aad
mov
dec
xchg
lock
mov
xor
mov
add
adc
push
adc
mov
nop
add
mov
or
ds
xor
cmp
inc
inc
movb
sub
and
lcall
arpl
int3
iret
lods
out
fsubr
add
es
jg
mov
xor
es
add
das
jno
ret
jns
mov
call
mov
mov
je
mov
nop
xor
scas
movsb
cmp
in
add
xor
out
pop
andl
jbe
fldcw
mov
ss
lea
in
enter
aas
mov
sub
mov
inc
xor
mov
mov
lret
fstpt
mov
sub
jbe
add
lock
inc
mov
dec
ss
mov
mov
std
out
mov
xlat
enter
jne
stos
into
adc
pop
jno
cmpsl
adc
sbb
jbe
iret
xlat
mov
sub
mov
mov
cmp
stos
jle
insl
outsl
xor
adc
inc
or
jl
fsts
or
pop
jp
pop
cmpsb
pop
dec
xor
xor
pop
lods
test
out
jp
ljmp
sub
cld
ret
mov
mov
mov
adc
call
add
insb
outsb
jae
jecxz
add
stos
mov
gs
cmp
and
xor
and
add
mov
mov
dec
pusha
shlb
call
mov
inc
and
outsl
dec
mov
enter
jnp
ficomps
pop
adc
pop
test
into
icebp
je
mov
xor
pop
leave
call
mov
mov
push
inc
test
insl
and
add
mov
xor
lea
out
lret
nop
sub
mov
icebp
hlt
lahf
aad
mov
inc
cmp
push
xor
test
adc
nopl
sbb
mov
xor
wrmsr
jnp
jg
pusha
call
stos
dec
adc
test
jnp
jns
mov
add
out
jo
jecxz
mov
mov
lock
dec
push
xor
add
xor
jno
add
inc
add
lods
inc
inc
testl
adc
enter
enter
xor
sub
or
loop
std
ret
je
mov
pushl
ret
cmc
dec
xor
fs
add
lods
add
dec
call
xor
adc
test
daa
and
je
and
sub
jns
cmp
daa
mov
ret
push
inc
adc
inc
movl
mov
inc
pop
ret
pop
dec
in
mov
sub
in
jp
into
and
outsb
rcrb
sbb
add
sbb
add
incl
mov
xor
ljmp
enter
dec
cmpsb
into
adc
movsb
shlb
sbbl
pusha
mov
in
int3
inc
rcr
call
scas
xchg
cmp
pop
dec
iret
xlat
adc
adc
scas
xchg
cmp
push
int3
iret
stos
push
dec
jge
pusha
mov
jbe
sub
out
repz
lret
inc
aad
insb
xor
xor
push
lcall
and
and
fsts
call
sarl
mov
push
mov
push
xor
sarb
aaa
ljmp
cmpsb
rolb
inc
lcall
xchg
mov
enter
push
std
ret
pop
mov
xor
xor
jne
pushl
icebp
sub
aad
mov
test
ss
adc
mov
pushl
add
popa
call
stos
inc
adc
add
mov
add
insl
lods
inc
clc
dec
sub
into
ss
out
out
daa
andl
jae
je
arpl
pop
sub
jne
out
std
xlat
idivl
aas
mov
adc
jne
filds
sub
pop
into
fidivs
call
lods
add
sub
pop
call
add
aas
aad
inc
rcl
adc
int
out
mov
push
xor
int
in
add
fistps
adc
sub
mov
pop
mov
aam
test
ret
jns
adc
add
push
aaa
dec
movl
ret
jne
sub
jns
enter
ror
mov
ja
mov
mov
movsl
arpl
push
push
int3
inc
fiadds
enter
jmp
sbb
outsl
pop
mov
data16
icebp
es
xor
push
hlt
push
out
std
xlat
idivl
add
fnsave
out
adc
dec
mov
je
lret
fldt
sarl
mov
adc
inc
fisubrl
fdivrp
xor
push
pop
jecxz
cmp
mov
mov
fisubs
or
adc
sbb
fstpt
clc
call
lds
pop
call
test
and
mov
clc
int3
aas
lods
mov
mov
inc
into
fistl
shrb
cmpsl
push
adc
push
mov
ljmp
mov
dec
mov
inc
jnp
pop
add
andb
dec
incl
xlat
push
sub
ss
sub
aad
mov
inc
sub
xor
sbb
inc
push
dec
addr16
jmp
int3
cmp
test
insl
push
adcl
dec
inc
or
add
inc
push
pop
ss
je
adc
push
add
sub
lods
enter
cmp
ret
jl
push
xchg
jne
cmpsl
add
jns
cmp
inc
sbb
xchg
adc
mov
std
jecxz
stc
or
push
sub
cld
and
iret
icebp
jbe
addr16
and
mov
scas
addb
into
inc
xor
ret
sub
cmpsb
mov
xor
sub
inc
cmp
and
js
jmp
pusha
xlat
push
sub
mov
dec
inc
xor
sub
and
ljmp
cmpsl
scas
leave
mov
push
fstpt
push
xchg
cld
aam
enter
int3
iret
test
pop
push
jne
cmp
dec
xor
mov
enter
cmp
push
mov
xor
sub
pop
ja
dec
mov
add
pusha
jle
fs
jmp
icebp
add
push
add
cmp
jae
in
xor
pusha
cmc
movl
inc
cmp
outsl
inc
xor
mov
arpl
pop
lods
push
or
adc
sub
addr16
jno
lods
test
aas
and
add
xor
daa
inc
inc
dec
add
mov
dec
mov
sub
mov
xor
dec
xor
inc
cmp
mov
adc
in
enter
xor
sub
sti
scas
out
mov
or
mov
int
add
inc
adc
jae
add
int
push
lea
enter
lret
mov
ja
ret
push
mov
inc
or
sbb
mov
rclb
pushl
lea
addr16
mov
int
xlat
into
mov
jge
push
jbe
je
cs
pop
lods
pop
cld
dec
int3
mov
scas
enter
iret
xor
es
and
inc
inc
jbe
dec
enter
rcrb
leave
call
jmp
mov
sub
adc
mov
jo
push
sub
iret
rcrb
mov
leave
or
push
cmp
mov
lret
push
aas
pop
pop
pop
or
repnz
and
rolb
cmp
inc
lods
mov
push
jne
push
cld
or
mov
add
les
lea
adc
inc
ja
pop
add
sub
push
inc
sub
inc
mov
adc
movsb
shlb
inc
fnstcw
sbb
jmp
mov
lret
add
fistl
add
xor
dec
adc
mov
mov
mov
out
adc
push
aaa
shll
sbb
jg
ret
dec
lret
mov
cmc
jne
es
xchg
out
mov
xlat
in
ds
lea
js
xor
adc
push
or
aas
cmp
jne
fnstenv
adc
mov
mov
inc
cmp
push
xor
mov
filds
xchg
movsl
xchg
arpl
sbb
ljmp
iret
pop
and
inc
sti
sbb
inc
into
add
pop
popf
adc
test
fiaddl
jne
lret
lods
addr16
add
insb
outsb
mov
sbb
shlw
cmp
decl
test
es
push
cld
xor
decl
mov
decb
jnp
adc
push
mov
mov
test
fldcw
test
push
aaa
dec
mov
es
push
jae
push
aad
sub
sub
push
or
into
shlb
pusha
data16
and
insb
pop
lcall
enter
cmp
scas
and
ljmp
aas
lcall
adc
test
sbb
inc
div
fcos
inc
xchg
icebp
outsb
test
or
add
inc
inc
mov
daa
inc
cmp
or
mov
mov
inc
pop
dec
scas
insb
push
cmp
lock
mov
das
and
jp
push
push
rclb
xor
je
fildl
mov
sbb
inc
cmp
push
adc
mov
mulb
inc
xor
je
jp
pop
inc
popa
mov
adc
je
out
sbb
inc
lcall
add
pop
leave
fistpl
jg
fistpl
mov
jno
fdivrs
add
bswap
push
pop
xor
into
mov
jmp
vdivps
leave
dec
cld
aaa
inc
or
icebp
je
aad
mov
inc
sub
dec
fbstp
int
int3
inc
and
mov
jmp
jae
jne
insb
xor
xor
lahf
arpl
mov
ret
add
int3
mov
push
sub
aas
call
mov
push
mov
jg
inc
sub
xor
and
cmp
sub
cmp
je
mov
pop
or
mov
mov
inc
daa
cmp
insl
fmul
mov
rcl
enter
test
lods
insb
or
test
into
icebp
je
mov
adcl
inc
aam
addr16
or
sub
fistl
leave
adcb
ficoml
push
mov
adc
push
outsl
sub
inc
lret
mov
cld
jae
lea
addr16
or
pop
fmul
sbb
out
test
sub
testb
xchg
out
ljmp
pop
pop
fisttps
dec
mov
push
and
rcrb
sbb
fs
xlat
fsts
decl
or
mov
mov
mov
mov
dec
lods
insl
and
nop
sub
shll
mov
add
aaa
adc
inc
imul
fs
cmp
pushf
xorl
xor
es
inc
cmp
and
inc
xor
fnstenv
adc
inc
mov
or
mov
push
push
dec
lret
lods
enter
jmp
rcr
xor
adc
mov
ret
xor
daa
xchg
mov
lcall
pop
int
jbe
xlat
xor
inc
sbb
inc
ret
aas
int
movsb
cmp
test
push
vcvtsi2ssl
sub
jge
xor
stos
jbe
xor
add
push
aaa
popa
scas
add
xor
daa
pop
call
push
mov
jge
lahf
arpl
cmp
ds
inc
jg
inc
adc
pop
push
mov
dec
pop
dec
jg
add
sbb
xor
je
sbb
jns
cmp
cmp
cmp
roll
lds
test
hlt
repnz
mov
mov
fdivrs
xor
adc
inc
test
daa
jns
sar
int3
xlat
xor
adc
sbb
add
push
ja
sub
mov
jne
mov
dec
popa
push
iret
cmp
xchg
add
add
cmp
lods
lock
aad
xlat
push
adc
or
mov
stos
inc
or
loopne
sub
sbb
jno
loopne
cmp
jg
dec
xor
inc
adc
out
adc
fmuls
adcb
testb
sub
and
fcomi
insb
outsl
scas
xor
add
ret
out
arpl
add
sbb
rclb
xor
ss
cld
mov
xor
sub
xchg
add
or
adc
mov
or
insb
or
xor
jle
pop
sbb
add
push
mov
flds
xor
pop
or
out
lods
and
inc
xor
rclb
ret
mov
xor
sub
inc
mov
fcoml
inc
cmp
push
in
push
dec
xor
mov
add
fwait
cmc
inc
xor
fdivrl
ja
mov
fcmovbe
enter
xor
fiadds
add
inc
je
ror
dec
xor
xor
dec
and
jne
mov
dec
mov
daa
and
je
dec
mov
inc
mov
push
daa
xchg
out
add
mov
sbb
int3
inc
and
xor
adc
test
es
dec
cld
xor
lods
cmp
add
lcall
xor
xor
add
negb
pop
orb
es
adc
adcb
aas
ret
insb
cld
pop
adc
push
sub
xlat
jg
jge
push
inc
insb
pop
add
lock
sbb
pop
dec
cmp
icebp
je
adc
insb
dec
call
popa
jmp
fidivs
out
or
add
mov
or
mov
or
sub
cmpsl
xor
xor
mov
inc
add
or
pop
jae
dec
cli
lcall
xor
xor
addl
sbb
dec
xor
mov
and
je
jl
sub
aas
push
jmp
stos
pop
or
push
cmp
sbb
adc
jno
push
in
jmp
cld
int3
inc
or
jne
out
cmp
inc
or
inc
jbe
repnz
inc
and
inc
fmul
out
cmp
daa
sub
push
lock
xlat
push
add
mov
adc
push
aaa
dec
into
jne
iret
jns
pop
leave
fistpl
pop
divl
dec
xor
mov
sub
and
rcl
jmp
mov
test
add
dec
test
push
aaa
dec
or
xor
sub
mov
sub
aad
daa
and
push
int3
and
push
icebp
test
aad
fdivr
or
xor
sub
movsb
aas
jmp
mov
or
push
mov
add
aam
mov
je
aas
cmpsb
outsl
fdivrp
lcall
mov
and
xor
test
out
call
lock
dec
xor
mov
xlat
mov
ret
add
mov
cmp
cs
out
inc
insb
enter
int3
iret
sub
sbb
add
inc
jne
fnstenv
mov
and
setge
aad
adc
add
lock
inc
add
dec
xor
test
ret
sub
scas
inc
enter
repnz
lods
out
test
out
decl
inc
mov
int
xlat
fsts
insb
dec
push
mov
mov
int
push
dec
lret
adc
sbb
faddl
mov
pop
js
add
mov
adc
int3
mov
adcl
shlb
insl
outsb
push
add
lret
cltd
dec
add
push
mov
inc
sub
or
xor
fyl2xp1
mov
daa
xchg
loope
inc
std
lret
fnstcw
mov
and
add
daa
ret
mov
sbb
inc
add
fldt
mov
ret
xor
add
pop
mov
cs
inc
ljmp
test
add
xor
and
ret
inc
insl
dec
push
lcall
xor
scas
jl
cmpl
push
pop
dec
fiaddl
push
sub
sbb
into
ret
dec
xor
and
push
shrb
xor
jg
jecxz
out
mov
fnstenv
mov
lds
pop
outsb
jne
fiaddl
jae
andl
gs
mov
notl
test
daa
daa
sbb
push
sbb
inc
fxch
iret
into
je
shlb
mov
je
imul
jg
xor
adc
inc
push
cmp
sbb
movl
fmull
mov
push
sbb
decl
adc
push
mov
inc
sbb
iret
pop
sub
fbstp
inc
into
push
inc
inc
mov
fisubs
add
sbb
sti
roll
add
push
jae
push
popa
in
mov
lods
fldcw
test
inc
add
jbe
adc
and
decl
adc
push
mov
test
xor
es
or
outsl
pop
imulb
push
fisubs
jne
dec
test
loop
je
mov
inc
or
ljmp
sbb
loopne
adc
test
stos
fmull
jge
mov
and
push
push
pop
add
xor
int
testb
je
add
xchg
add
xor
and
add
xor
cmpsl
pop
lahf
sbb
jne
mov
jmp
ret
push
inc
inc
bound
xchg
sub
and
sbb
roll
cmp
sub
add
inc
push
into
jne
mov
jne
lret
mov
dec
fsubrs
push
das
push
push
jno
add
push
pop
dec
xor
xor
cmp
or
insl
pop
push
jge
xchg
dec
xor
pop
xor
jne
int3
inc
addb
aas
int
cmc
fcoms
pop
dec
add
fs
sub
add
sbb
loop
incl
mov
out
imull
aaa
inc
xor
inc
sbb
adc
mov
test
inc
xchg
aas
lahf
out
mov
dec
and
pop
lcall
pop
or
xor
fsts
or
adc
push
push
and
shlb
add
inc
add
jno
pushf
es
mov
push
cmp
sub
lret
xor
xchg
test
add
inc
ror
cmp
bnd
mov
add
push
inc
jb
movsb
and
xlat
mov
add
adc
and
sub
aas
sarl
jb
lods
test
add
inc
mov
add
jno
aaa
xor
out
stc
cmp
adc
push
rorl
jno
sub
psubsb
mov
outsl
nop
sbb
jb
lods
insl
and
nop
leave
add
push
aaa
shll
mov
add
aaa
jns
inc
icebp
cmp
flds
adc
inc
imulb
xchg
xor
xor
data16
fs
scas
xchg
inc
jbe
pop
pop
and
rcrb
fidivs
pop
push
jl
in
hlt
cmp
jno
shrb
incl
pop
call
loopne
jo
jo
mov
out
inc
adc
jno
jne
data16
lret
fldcw
mov
mov
jo
shlb
add
inc
add
adc
mov
dec
mov
push
sbb
adc
fnstcw
push
sub
or
insb
pop
push
jl
negl
popa
push
add
xchg
cmp
icebp
in
aad
add
outsl
inc
push
adc
sbb
daa
jo
shlb
add
inc
add
es
inc
push
int3
iret
lods
out
inc
decl
adc
mov
xor
cmpsl
sub
mov
add
call
xlat
idivl
and
arpl
adc
add
ret
mov
pop
add
jbe
stos
pop
ficompl
decl
cli
and
xor
push
cmp
es
sub
sbb
and
xor
cmp
inc
sbb
subb
aaa
dec
mov
cmp
add
push
mov
xor
push
and
dec
mov
ds
ja,pt
adc
fxch
sbb
xlat
lods
out
pop
fistl
jl
inc
outsb
cmp
inc
or
fidivs
mov
mov
js
jo
lods
fsts
insl
mov
adc
jge
int
mov
aad
das
mov
adc
inc
cmp
push
or
out
push
adc
ror
fstpt
mov
inc
pop
pop
call
in
gs
jne
mov
pop
into
jne
data16
xor
inc
sbb
clc
jge
sub
ja
jl
adc
adc
rcl
mov
in
adc
into
push
adc
ds
idivl
dec
lea
and
dec
sbb
cmp
sbb
push
movsb
sarb
push
inc
aaa
ds
orl
es
or
ret
mov
test
inc
pusha
fsts
and
imul
mov
inc
or
jb
out
or
insb
sbb
and
pop
pop
inc
imulb
xchg
xor
xor
inc
cmp
test
jp
mov
es
adc
lods
inc
outsb
into
jne
iret
pop
cmp
jne
dec
mov
inc
into
jne
iret
cmp
inc
sbb
xor
fsubrl
lds
sub
popa
sbb
jne
fidivs
out
sub
daa
adc
xor
push
sbb
insb
push
lcall
enter
int3
and
mov
adc
add
xor
arpl
add
push
mov
ds
xor
mov
test
push
aaa
dec
fldenv
iret
xlat
mov
inc
add
lods
add
and
and
mov
inc
add
add
or
dec
mov
rclb
xchg
sub
rorl
xor
daa
xor
call
mov
inc
or
or
jp
add
divl
imul
sbb
sub
xor
test
or
fldl
xor
xlat
add
and
xor
and
xor
lods
inc
and
adc
sbb
add
xor
bound
add
inc
inc
pop
jno
mov
pop
xor
inc
push
lods
inc
outsb
sub
inc
xor
out
and
lods
and
and
mov
pop
inc
lret
nop
sbb
mov
fdivrs
fdivrp
test
xor
ja
adc
jle
push
adc
xchg
cmp
jl
pop
dec
into
jne
iret
cmp
dec
push
lcall
mov
iret
cmp
nop
add
scas
mov
mov
dec
lods
rclb
andl
je
xlat
enter
xor
push
jb
adc
movsb
xor
inc
xor
pop
or
ja
or
dec
jmpw
mov
and
aam
loop
into
fdivs
sbb
movsl
shlb
xor
dec
xor
and
mov
je
push
and
mov
pop
or
jp
js
daa
leavew
dec
or
inc
arpl
mov
rcrb
aas
cmp
jns
adc
add
inc
mov
inc
add
add
inc
add
daa
dec
xor
and
mov
lcall
fistpll
insl
ss
xor
add
nop
cmp
pop
int3
adc
push
xchg
lods
add
data16
adc
arpl
add
mov
sbb
jb
push
sub
sbb
mov
and
into
lea
js
fs
push
dec
push
push
fptan
cli
iret
xlat
lods
flds
sbb
lret
xor
jne
icebp
and
aad
fsubl
xlat
fnstenv
xor
mov
mov
jmp
insl
fcmove
into
out
mov
shll
loope
jo
andl
push
mov
push
or
adc
pop
iret
xlat
jo
call
mov
pop
mov
jae
lods
out
or
lods
enter
xor
fisubs
je
xor
aaa
mov
mov
or
ror
int3
inc
jo,pn
pop
mov
or
mov
add
sbb
xor
imul
inc
mov
add
arpl
add
lea
push
test
pop
dec
mov
cmpsb
jmp
xorb
enter
xor
aas
arpl
push
mov
mov
call
aad
pop
push
jae
fcmovnu
xchg
mov
inc
mov
cs
vpandnq
ja
push
mov
pop
push
mov
cmp
imul
dec
scas
jmp
cld
mov
hlt
movzbl
xor
mov
dec
cmp
scas
je
je
lret
fiaddl
mov
and
cmpsb
cmp
outsb
xor
insl
and
xor
adc
mov
or
and
mov
int3
cmp
mov
cmp
jb
sbb
sub
lret
jno
jb
fstpt
and
xchg
add
rorl
leave
add
inc
stos
adc
push
inc
insb
adc
lock
xor
and
and
jbe
jne
mov
mov
loop
cmp
mov
and
jb
push
inc
mov
inc
iret
or
push
rcrb
mov
cs
vpandnq
push
dec
mov
mov
daa
xchg
loope
inc
in
jmp
dec
fsubs
xor
adc
xor
in
pop
ret
dec
xor
xor
adc
test
es
int3
pushl
xor
in
int3
test
enter
inc
cmp
jnp
mov
enter
push
testb
add
sbb
dec
mov
inc
aaa
sbb
enter
inc
mov
push
and
xor
mov
call
add
jp
loope
icebp
repnz
insl
bound
pop
dec
iret
adc
pop
add
fcmovu
cmp
mov
int3
iret
xlat
sbb
orb
adc
mov
out
add
sub
push
add
pusha
push
lea
je
arpl
mov
push
cmp
inc
bound
pop
fdivrp
jmp
cmpb
test
in
aas
mov
out
rcll
mov
scas
je
cmp
and
pop
ds
into
xlat
fnstenv
adc
fxch
jno
movzwl
decl
adc
pusha
sbb
xor
cmp
dec
test
lods
enter
cmp
pop
cmp
adc
or
inc
cmp
fnstenv
adc
jmp
testl
mov
sub
mov
mov
int
jne
mov
out
mov
mov
adc
pop
sbb
out
adc
mov
cmp
inc
jge
jne
jbe
inc
aam
mov
dec
mov
inc
pop
jle
xor
adc
mov
push
pop
fnsave
or
push
push
push
out
lock
fistpl
adc
stos
inc
or
dec
out
mov
pusha
pop
sub
add
sbb
into
xlat
or
push
xor
dec
sub
sub
mov
or
and
mov
sub
jp
fldl2t
iret
iret
xlat
fsts
out
mov
dec
adc
aas
lods
mov
add
and
pop
pop
mov
aam
and
inc
adc
pop
aas
daa
or
mov
adc
je
dec
mov
mov
cmp
mov
adc
int
int3
arpl
xor
xlat
aad
ret
mov
jle
fs
push
movhps
je
arpl
push
icebp
pop
aas
out
or
push
pusha
pop
daa
fsts
inc
std
push
inc
adc
jle
add
sbb
ret
xor
lea
adc
enter
push
cmp
fs
adc
mov
aaa
inc
jae
jl
jne
js
fisubl
cmp
into
jne
iret
pop
lret
adc
add
fsubrs
fcmovu
ljmp
pop
push
into
jne
iret
cmp
jae
lea
mov
iret
xlat
fsts
out
test
adc
sbb
adc
stos
inc
sti
inc
pop
pop
jecxz
cmp
inc
cmp
pop
in
insb
inc
cmp
inc
inc
incl
xlat
push
int
decl
jl
mov
decl
lcall
enter
jae
lods
out
mov
andb
jle
push
and
dec
lret
pop
inc
add
je
iret
xlat
mov
mov
imul
iret
cmp
xchg
xchg
test
sbb
add
sbb
ja
pop
lcall
aaa
mov
mov
xchg
add
shl
inc
addr16
stos
inc
or
inc
add
pop
popa
sbb
push
adc
das
xchg
xor
xor
je
icebp
dec
or
lods
mov
inc
sbb
add
decl
mov
or
push
and
rcrb
aad
adc
jmp
adc
and
adc
mov
add
xor
jbe
jge
xor
mov
test
inc
push
fsts
sbb
aas
cs
mov
mov
push
cmp
pop
fcoml
daa
mov
int3
inc
and
xor
adc
mov
dec
xor
ds
pop
fidivs
dec
mov
dec
outsb
pop
outsb
repnz
xlat
add
cs
ds
push
sub
lcall
add
inc
xor
cmp
pushf
xorl
cmc
xor
lods
popa
or
push
pop
aas
mulb
xor
xor
shlb
add
inc
add
flds
cmp
sbb
xor
push
jae
int3
and
test
xor
aas
cmp
xor
mov
dec
mov
dec
outsl
ret
fisubs
loope
inc
sbb
mov
and
ret
fiadds
pop
sub
dec
cmp
test
insl
dec
cmp
inc
dec
add
jae
and
je
adc
ja
outsl
ret
jge
int
add
push
shrl
inc
into
mov
jmp
vdivps
jg
sbb
xlat
xor
inc
sbb
lock
movsb
inc
push
or
inc
movsl
pop
or
insl
dec
push
fbstp
popa
lea
js
add
jmp
ret
push
inc
incw
xlat
xor
add
and
ror
daa
arpl
xor
fdivs
xchg
pusha
mov
or
outsb
cmp
adc
jne
testl
xlat
push
xor
jne
adc
aas
repnz
xor
insl
ljmp
add
xor
jo
jo
add
idivl
push
incl
cmp
fs
adc
fld
iret
je
or
push
push
ljmp
lcall
cmp
incl
xlat
push
sub
inc
sub
dec
pop
xor
xlat
push
sub
adc
cmp
mov
or
call
movsl
out
push
icebp
push
int3
inc
and
inc
sbb
push
mov
pop
add
sub
or
pop
pop
fs
jl
jo
js
pop
ret
push
mov
add
xor
sbb
push
scas
xchg
inc
pop
pop
add
cmp
and
add
push
cmp
scas
add
xor
sbb
and
lea
call
sbb
int3
iret
xlat
jbe
lea
push
mov
inc
imul
icebp
sbb
cmp
mov
enter
and
and
mov
inc
mov
push
inc
loop
or
lea
push
call
xlat
idivl
xor
dec
xor
ret
mov
push
fidivs
out
je
adc
iret
icebp
je
xlat
adc
adc
ret
mov
jmp
subb
jg
ret
dec
lret
mov
leave
frstor
gs
daa
ficoms
jp
and
inc
xor
sbb
xchg
jl
cmp
aaa
mov
mov
mov
and
inc
pushf
xorl
and
and
lcall
nop
sbb
jb
dec
and
je
pop
add
pop
or
jb
into
jne
jmp
lret
dec
jne
mov
fidivs
aad
pop
dec
pop
add
movsl
bound
adc
inc
jecxz
leave
mov
daa
mov
pop
mov
pop
mov
pmuludq
mov
jne
pushl
lret
stos
ss
xor
test
mov
push
les
sub
mov
or
add
xchg
je
cmp
aaa
ret
mov
pop
outsl
xlat
inc
clc
or
aad
cmp
and
xchg
dec
or
mov
std
ds
cmp
outsl
and
loopne
adc
mov
or
and
test
xor
cmp
and
sub
mov
lods
out
mov
push
add
xor
pusha
pop
jmp
xor
push
iret
pop
fidivs
aad
aas
pop
jno
mov
pop
push
dec
call
pop
pop
enter
jae
lods
out
adc
jbe
dec
xor
inc
sub
jae
lea
incl
inc
add
scas
xchg
aad
mov
adc
and
sub
sub
addr16
je
arpl
cmp
jae
lea
addr16
repnz
xor
sub
adc
adc
cmp
and
lea
js
adc
adc
loop
adc
leave
icebp
cmp
jae
in
cmp
add
fs
repnz
add
inc
add
and
ret
jge
and
xor
adc
sbb
shlb
mov
and
fadds
sub
inc
dec
mov
lods
aas
add
mov
sub
pop
inc
inc
mov
add
adcl
push
int3
out
out
xchg
rcrb
pop
mov
daa
pusha
xlat
xor
inc
sbb
rcrb
or
push
mov
sub
lods
inc
and
adc
std
xlat
testl
out
shlb
fnstenv
mov
and
mov
jmp
lret
adc
inc
pop
and
pusha
xor
aas
and
xor
lods
inc
and
adc
lds
xorl
lods
les
dec
lret
mov
pusha
data16
and
add
int3
test
scas
enter
inc
cmp
xor
adc
lret
mov
add
add
mov
sbb
test
scas
enter
mov
add
icebp
xor
mov
mov
and
mov
xor
or
aaa
xor
sub
sub
fs
mov
mov
add
dec
push
push
addr16
ficoms
mov
incl
sbb
enter
inc
xor
add
and
sbb
mov
into
adc
test
or
xorb
je
arpl
mov
inc
call
fbstp
popa
push
pop
xor
dec
mov
dec
mov
push
mov
xchg
add
jp
adc
in
sub
fimuls
jge
and
and
mov
je
sub
cmpsl
pop
mov
pop
and
add
out
inc
scas
add
mov
and
decl
dec
or
cmp
je
fdivrp
push
dec
adc
add
pop
mov
in
test
mov
dec
sbb
xor
jnp
sbb
aas
mulb
xor
test
inc
add
add
js
jg
mov
std
cmp
jbe
fdecstp
mov
lret
inc
ja
popa
push
int3
inc
fsubrl
jp
pop
inc
sbb
jne
js
fs
out
hlt
ret
mov
jmp
add
fsts
pop
pop
push
aad
push
pop
jno
or
sub
mov
push
shll
icebp
shlb
shlb
pop
cwtl
sub
and
ret
add
dec
xlat
fldenv
inc
rcll
iret
cld
add
xor
out
pop
sarl
mov
call
pop
add
lods
pop
pop
pop
cmp
sub
lock
lods
mov
iret
mov
sbb
cmpsl
xlat
xor
outsb
jbe
call
inc
push
mov
adc
sbb
sbb
lret
xor
ficoms
mov
add
repz
mov
adc
aas
mulb
xor
push
dec
push
out
mov
mov
xor
sub
inc
push
lods
inc
inc
into
xlat
mov
add
fidivl
push
xor
xor
cmp
nop
pop
sub
jno
je
imulb
and
jne
adc
aas
xor
or
mov
ja
call
mov
lcall
mov
fnstenv
shll
or
test
xor
shll
enter
push
decl
or
test
inc
sub
xlat
mov
test
xor
into
adc
stos
push
test
xor
lret
and
pop
pop
stos
xchg
inc
add
incl
call
fnstenv
mov
push
and
lret
jle
aaa
dec
mov
inc
aaa
js
xor
adc
mov
repz
sub
xlat
mov
mov
inc
and
js
xor
adc
cmp
inc
adc
inc
es
adc
scas
leave
add
push
enter
jae
test
sbb
adc
sub
inc
add
idivl
inc
orb
es
xchg
ficoml
loope
cmpl
mov
and
jbe
jbe
or
push
outsb
test
daa
cmp
mov
push
and
mov
fidivl
fidivl
mov
jne
lds
inc
add
lock
and
ret
push
jmp
cmpsb
ljmp
mov
add
inc
jne
popa
mull
imul
inc
je
adc
mov
and
push
add
inc
and
mov
and
loopne
movsl
push
adc
and
cmc
dec
xor
fsubrl
adc
lcall
enter
jae
lods
out
and
int3
inc
jp
enter
jne
js
addr16
lea
popa
in
enter
stos
pusha
rclb
xor
fwait
cmc
dec
xor
fsubrl
int
add
add
pop
rcll
jae
js
xor
adc
test
es
jge
aaa
popa
inc
inc
lods
dec
and
adc
add
pop
inc
adc
lods
out
dec
andl
fs
jb
xor
dec
lea
push
mov
dec
mov
dec
and
test
iret
icebp
jne
pusha
xchg
cmp
icebp
and
aad
mov
inc
or
add
dec
push
fyl2x
mov
jbe
les
test
adc
add
push
xor
and
inc
mov
sbb
dec
inc
add
nop
xor
mov
mov
jle
rorl
jp
mov
imul
mov
inc
and
popa
iret
cwtl
jb
add
out
cld
cmp
aaa
and
jmp
movsb
cmp
and
cmpsl
pop
fistps
fstps
iret
xlat
out
loop
push
xchg
mov
insb
inc
enter
xor
mov
sbb
push
fxch
jns
pop
fistl
test
insl
dec
lcall
cmp
mov
and
fildl
aad
adc
ror
or
fidivs
adc
dec
mov
mov
or
repnz
je
in
lcall
xor
pusha
inc
daa
ficoms
jp
and
inc
xor
repz
test
pop
js
sbb
xchg
fcomp
decl
push
aaa
sbb
lcall
or
mov
pmaddwd
push
mov
add
test
into
icebp
jne
pop
sub
inc
add
fcmovne
mov
mov
fnstenv
adc
test
pop
mov
insb
or
test
sub
ds
adc
add
push
aaa
sbb
pop
adc
adc
test
daa
inc
mov
mov
sub
jno
mov
test
into
icebp
je
pop
insb
jl
push
lea
dec
jp
xchg
cmp
mov
add
nop
add
outsb
add
je
bound
push
xchg
lds
push
aaa
dec
popa
mov
jl
fwait
mov
out
rcrb
ret
xor
pop
add
inc
sub
push
je
and
out
and
lods
loope
jne
cmp
jnp
jb
add
inc
add
inc
xlat
pop
jno
mov
sti
add
les
and
xor
lods
test
subl
xor
mov
pop
sbb
inc
inc
testb
jb
add
pop
gs
add
testb
jne
add
pop
gs
add
testb
jb
add
pop
cmp
jbe
testb
jb
add
inc
and
sub
mov
pop
dec
add
fs
or
daa
mov
dec
xchg
push
aaa
dec
mov
int3
aas
scas
adc
xor
aad
jecxz
jno
mov
test
inc
add
push
int3
and
xor
enter
mov
add
mov
pop
add
adc
mov
dec
and
jbe
jne
mov
dec
mov
sbb
popf
mov
into
mov
xor
fidivs
jge
inc
inc
into
adc
stos
fadds
stos
aaa
dec
xor
xlat
xor
adc
enter
push
push
adc
xor
adc
sub
incw
xlat
xor
adc
ret
lods
cmp
hlt
add
xor
bound
mov
jne
and
pop
arpl
decl
mov
mov
and
lea
sbb
pusha
mov
or
and
test
dec
test
add
inc
and
push
and
out
and
cmp
or
add
cmp
repnz
imull
daa
dec
cmp
xor
loope
or
xchg
and
xor
dec
add
scas
adcl
incl
xlat
xor
cmp
fsts
mov
mov
jae
lcall
mov
fnstcw
dec
sub
inc
sbb
inc
push
jbe
push
adc
push
leave
adc
out
jmp
lods
add
inc
xor
cmp
out
adc
adc
mov
jo
jo
jns
xor
inc
lret
nop
aas
dec
fs
mov
inc
xlat
add
cs
lods
out
and
mov
pop
js
sbb
push
fstp
ljmp
outsl
into
enter
inc
cmp
xor
adc
jmp
lods
inc
pop
into
jne
iret
pop
ficoms
jecxz
cmp
add
and
cld
aam
mov
inc
push
add
push
cmp
adc
push
lock
and
xchg
xor
pop
jae
int3
int
int3
mov
push
cmp
xor
daa
daa
mov
adc
or
lods
mov
mov
adc
inc
cmp
jne
out
mov
adc
adc
ret
jge
int
add
push
popa
roll
shlb
lcall
add
inc
xor
fsts
push
push
lcall
fbld
cmp
push
adc
insb
push
push
aad
aas
mov
fs
jo
js
ret
adc
movsb
xor
jle
push
or
cmp
into
icebp
je
or
insb
push
lcall
mov
cmp
paddusb
push
push
lcall
enter
int3
inc
and
xor
adc
pop
ja
daa
dec
fs
sub
sbb
inc
imul
enter
loope
sbb
je
xor
aaa
aas
and
inc
and
adc
mov
xlat
push
xor
insb
dec
aas
and
or
pop
outsb
repnz
je
in
out
inc
shrb
aaa
dec
mov
pop
pop
leave
outsb
sti
out
test
es
jno
adc
jb
push
xor
jne
lret
lods
inc
inc
fstps
xor
jne
mov
aas
cmp
xor
pop
call
in
lds
add
lret
es
mov
lods
out
sbb
sub
sbb
inc
pop
into
jne
mov
or
adc
pop
into
jne
iret
pop
xor
jne
mov
ljmp
xor
imulb
xchg
xor
xor
and
lds
sub
push
and
and
out
adc
or
cmp
jmp
out
adc
daa
daa
sbb
jne
iret
cmp
inc
sbb
cmp
rcr
ss
and
xchg
xor
pop
jae
fmul
dec
mov
push
cmp
xor
daa
daa
mov
adc
or
fdivrl
mov
adc
inc
cmp
jne
out
je
adc
adc
ret
jge
int
add
push
popa
roll
shlb
lcall
add
inc
xor
fsts
push
pop
lcall
fbstp
cmp
push
sbb
insb
push
push
aad
cmp
lods
xor
pop
inc
adcl
mov
xor
es
je
mov
mov
pop
sbb
pop
inc
enter
jle
xlat
push
sub
inc
inc
enter
inc
and
fsts
insb
dec
aas
shlb
or
pop
outsb
repnz
sbb
pop
push
popl
imul
adc
sbb
xchg
ret
outsl
or
ret
or
jne
stc
cmc
jae
aaa
mov
add
fcomps
fnstenv
or
ret
mov
int
negb
add
push
xor
jne
inc
push
into
pop
stc
out
rcrb
mov
sub
mov
rcrb
bound
jle
jns
and
jmp
enter
jb
popa
jmp
data16
xor
inc
sbb
leave
call
in
mov
add
and
add
inc
add
flds
inc
fildl
rcr
fiadds
es
shll
jg
test
insl
push
push
add
pop
jmp
mov
int3
inc
repnz
dec
jmp
and
fildl
jg
fcmovne
fnsave
lds
add
lret
es
aam
int
lods
out
sub
insb
pop
aas
adc
lcall
sbb
dec
jecxz
rolb
call
out
fiaddl
gs
cmp
inc
mov
cs
vpandnq
fisubs
loope
inc
sbb
mov
call
movsl
shlb
pop
je
je
jne
mov
out
test
and
add
jge
ja
adc
out
mov
mov
xor
xor
adc
pop
jecxz
xor
orl
xor
push
dec
cwtl
xor
aaa
hlt
xchg
sbb
dec
add
int
aad
clc
mov
sub
jno
push
icebp
nop
outsb
aad
add
addr16
cmp
decl
adc
mov
inc
sbb
mov
icebp
pop
jb
lods
pop
sub
inc
xor
xor
jl
pop
aaa
ds
orb
das
and
jbe
pop
call
addr16
jbe
adc
ror
mov
push
fadds
fdivrp
pop
inc
addl
mov
xlat
push
sub
mov
or
cmp
mov
fld
jge
push
cmp
icebp
dec
mov
fsubl
inc
call
mov
dec
test
cld
and
push
loopne
ja
mov
and
stos
or
sub
xchg
xor
arpl
sub
fldenv
add
inc
pop
pop
mov
cmp
into
and
jmp
ret
shl
pop
into
inc
iret
mov
or
dec
jb
popa
test
daa
mov
push
das
jb
dec
xor
jne
into
movsb
enter
mov
mov
fsubs
inc
lret
ret
jno
cmc
inc
xor
fsubrl
sbb
push
mov
add
loopne
incl
insb
push
call
mov
and
shr
inc
add
xchg
jb
xor
jbe
sub
xor
mov
jmp
cmp
push
add
in
std
int3
iret
shl
call
jo
je
arpl
jl
lcallw
daa
and
daa
xor
jle
insb
call
fsubr
into
ljmp
je
xchg
add
jp
pop
pop
push
add
pop
sub
stos
mov
mov
mov
mov
sbb
cmp
pop
add
xor
ljmp
cmpsl
pop
iret
sbb
sub
sub
dec
add
xchg
xchg
mov
enter
mov
daa
mov
test
ret
je
mov
push
inc
push
insb
shl
dec
not
fldcw
test
push
aaa
dec
into
adc
test
clc
xchg
add
jp
pop
push
push
add
pop
sub
stos
call
fsubr
into
ljmp
testb
je
filds
fsts
out
mov
inc
dec
adc
push
imul
out
call
mov
xor
xor
cmp
push
test
pop
iret
je
arpl
sbb
push
insb
mov
mov
popf
lcall
divb
cmp
push
cmpsl
xlat
mov
jmp
sub
xor
adc
mov
mov
inc
sbb
push
add
jg
mov
lret
push
mov
call
fsubr
lea
xor
movsl
inc
and
mov
iret
js
and
push
js
add
inc
cmp
leave
jno
daa
sub
ret
mov
fnstenv
lea
sub
call
negb
pop
ja
dec
addr16
dec
pop
push
icebp
outsb
std
aad
fcompl
jne
mov
fldenv
jne
out
call
mov
xor
leave
fisttpl
jg
fcmovne
aad
mov
inc
and
add
lret
aas
xor
xchg
cmpsb
mov
and
mov
call
cmp
dec
adc
fsubs
fnstenv
pop
popa
mov
ja
adc
push
insb
shl
ljmp
cmp
inc
push
sbb
pop
push
adc
sub
mov
test
into
icebp
je
add
iret
xchg
add
sbb
add
cwtl
dec
xor
mov
pop
outsb
lods
ja
icebp
add
aad
mov
xor
jbe
xor
jbe
dec
xor
mov
add
sbb
test
jb
dec
xor
ja
jbe
les
mov
dec
xor
inc
and
clc
lret
vdivps
mov
je
jno,pt
inc
cmp
addr16
int3
iret
lods
out
xor
and
shll
mov
lret
lcall
daa
rol
push
pop
xlat
fldenv
ds
mov
jmp
int3
ja
mov
mov
or
and
push
icebp
arpl
aad
add
jno
insl
imul
push
adcl
sbb
mov
pop
or
sub
push
fisttpl
inc
mov
pushf
mov
cmp
inc
xor
into
pop
test
out
rcrb
mov
test
and
xchg
ss
jge
mov
test
inc
sub
loope
adc
add
aad
mov
adc
xor
jg
xchg
mov
push
imul
insb
pop
inc
add
pusha
rorl
sbb
sbb
push
dec
xchg
ljmp
fmul
xlat
mov
sbb
xchg
inc
pop
add
jne
rorb
inc
lret
or
mov
add
outsb
inc
add
add
inc
sub
lea
adc
dec
addr16
inc
cmp
aaa
ret
dec
and
fdivr
aam
ljmp
inc
add
fbstp
xor
movsl
and
sbb
add
jp
into
cmp
das
or
xor
and
add
xor
sbb
ret
push
adc
mov
inc
rol
mov
xchg
enter
mov
lock
int3
and
mov
adc
push
adc
rclb
es
xor
sbb
outsb
jbe
sbb
and
inc
sub
aad
imull
inc
pop
or
push
sar
lcall
ss
xor
add
lret
sub
inc
xchg
cmp
lea
cmp
adcl
rcr
fimuls
sub
jae
or
xchg
daa
and
dec
ret
es
jge
or
cmp
sbb
inc
mov
xor
sub
ret
fabs
mov
jle
aam
jmp
ret
daa
aas
iret
jecxz
mov
sub
and
sub
cmp
or
daa
mov
int3
inc
push
push
sbb
adc
movsb
shlb
inc
mov
push
fldcw
test
push
aaa
dec
pop
or
push
decl
adc
mov
test
call
test
and
mov
jmp
test
rol
lds
lods
mov
inc
add
inc
pop
imul
leave
sti
out
push
mov
mov
pop
jge
sbb
add
jbe
pop
and
lea
sbb
leave
idiv
out
test
es
movl
gs
icebp
ljmp
xchg
lock
jecxz
ret
decl
outsb
add
jle
xlat
fxch
or
icebp
adc
mov
push
add
call
ror
dec
inc
push
mov
or
scas
mov
mov
inc
xor
jbe
xor
aad
inc
pop
jno
push
xor
and
test
call
lods
inc
outsb
sub
dec
lods
xlat
fsts
imul
lahf
mov
hlt
add
xor
jg
out
mov
mov
cmpsl
inc
push
mov
call
jae
sub
add
nop
hlt
sub
push
aaa
pop
mov
dec
add
push
inc
mov
call
jbe
push
lret
fadd
jo
mov
test
imul
shlb
rol
add
jno
xor
call
dec
lret
mov
lret
fisubl
add
sbb
rcrb
add
dec
fsts
push
icebp
stc
data16
mov
mov
sub
mov
mov
mov
push
and
inc
in
jge
insb
aaa
ds
incl
inc
daa
ja
sbb
xchg
inc
and
and
inc
pop
jnp
enter
aaa
iret
pop
cs
mov
outsl
pop
mov
inc
inc
int3
inc
and
insb
hlt
push
dec
jb
ret
mov
test
inc
add
push
adc
cmpsb
fistpll
dec
iret
push
lods
fld1
out
mov
ret
aaa
test
inc
and
mov
mov
jne
iret
cmp
out
call
mov
out
jecxz
add
test
mov
mov
xor
dec
mov
xchg
fdivrp
test
dec
test
push
fmulp
xlat
loopne
incl
cltd
cmp
sub
ret
xor
xor
and
and
xor
ficoms
pop
push
ss
xor
fldt
fnstenv
adc
setl
enter
xor
enter
pop
cmpsb
mov
xor
push
leave
neg
add
mov
mov
add
sbb
inc
adc
inc
pop
jbe
jbe
jg
lods
dec
call
lods
mov
xor
fldt
incb
dec
test
mov
pushl
subb
call
daa
fbld
xlat
push
int
out
mov
adc
insl
fdivrs
leave
ficoml
rcl
mov
in
aas
xor
mov
adcl
pusha
data16
gs
sbb
and
push
mov
call
scas
xchg
cmp
lret
xor
sbb
sub
push
sub
lods
inc
and
test
into
icebp
movzwl
sub
and
jne
lret
add
imul
add
call
scas
xchg
cmp
addl
xor
add
dec
cmp
insl
xor
mov
call
scas
xchg
cmp
mov
pop
xor
je
lret
cmp
insl
xor
mov
call
scas
xchg
inc
cmp
add
xchg
mov
mov
fs
call
inc
push
add
fnstcw
iret
xlat
lods
movsl
and
sbb
inc
lret
xor
gs
icebp
add
aad
mov
inc
cs
add
dec
adc
fnstenv
jbe
dec
mov
and
dec
mov
je
pop
call
callw
xlat
je
or
enter
and
jge
in
fistl
jg
fcmovnb
aaa
sbb
jnp
dec
add
popa
in
mov
xor
inc
mov
inc
add
pop
mov
scas
fs
call
fxch
jno
je
mov
push
out
clc
jge
enter
repz
cmp
push
clc
push
out
or
xor
iret
mov
jp
pushl
hlt
adc
ret
jge
int
in
adc
ret
leave
stc
incl
jmp
ficoms
lcall
inc
mov
jne
arpl
push
sub
sbb
ret
mov
mov
fsub
push
fdivrp
pop
xchg
sbbb
xor
mov
mov
mov
push
cmpsl
pop
das
sbb
jne
mov
cmp
ljmp
mov
movsl
push
shr
movsl
push
lret
shr
mov
fldenv
jne
lods
inc
mov
pop
sub
jne
icebp
std
aad
mov
iret
xlat
lods
loop
add
sbbl
in
mov
and
ja
jne
int3
jne
cmp
xor
insl
mov
push
pop
cmp
sub
jne
out
hlt
aad
daa
sbb
fcoms
mov
pop
mov
or
dec
lret
mov
pusha
mov
decl
imulb
push
aaa
jns
jmp
sbb
and
in
inc
add
and
into
iret
xlat
jbe
push
cmpsl
xlat
cmp
pushf
xorl
dec
pusha
shlb
lcall
inc
inc
mov
fnstenv
inc
adc
into
icebp
je
iret
pop
lods
test
in
call
daa
aas
sbb
cmp
iret
xlat
lods
stc
lea
add
xchg
jge
ret
negb
mov
xor
out
leave
jbe
lret
dec
jne
or
inc
cmp
jecxz
cmp
xor
test
or
jb
push
sub
mov
lret
inc
adc
sbb
adc
inc
jno
icebp
or
out
hlt
jmp
lret
orb
out
lret
inc
add
leave
cmp
fists
call
int
inc
sub
xor
add
pop
push
inc
pop
and
pop
pop
push
mov
or
adc
dec
push
dec
pop
and
jecxz
push
icebp
out
aad
mov
repnz
ja
lock
cmp
addr16
jae
fs
pop
and
pusha
aad
enter
jne
shlb
ret
mov
incl
shr
jmp
aaa
sub
nop
push
mov
mov
stos
clc
test
aaa
inc
mov
add
lea
adcl
inc
inc
jle
fimull
lods
fsts
cmp
xor
inc
arpl
mov
cmp
rcrl
pop
leave
or
call
fisttpl
sahf
cs
xor
in
mov
cwtl
lods
lods
and
sbb
ds
incl
in
push
aaa
mov
enter
adc
push
dec
sub
jns
and
call
sbb
scas
ss
mov
push
arpl
jmp
add
add
movsl
push
mov
call
fbstp
pusha
movsl
mov
adc
into
pushl
add
sbb
test
enter
es
and
fcoml
dec
pop
adc
imul
filds
imul
dec
adc
add
dec
xor
xchg
inc
decl
inc
loop
pop
inc
imul
lcall
cmp
addb
xor
out
push
fbstp
popa
mov
pusha
xlat
xor
adc
lret
lods
enter
xor
sub
mov
dec
xor
ficoms
xchg
add
jp
lock
adc
movsb
shlb
inc
scas
enter
scas
pop
aad
fidivs
ret
daa
xor
insl
pop
push
mov
cmp
xor
test
lea
push
lea
mov
into
iret
xlat
into
mov
jmp
vdivps
gs
lea
jmp
add
xor
mov
inc
mov
int3
iret
xlat
jns
pop
leave
fildl
jg
fcmovne
sub
push
xchg
xor
jb
bound
aaa
and
pushf
aad
aad
addr16
or
setge
add
push
add
addr16
dec
add
inc
push
mov
fnstenv
adc
mov
int3
aas
lods
mov
sub
cmpsl
out
stos
mov
ljmp
repz
cmc
push
add
pop
mov
scas
daa
or
lea
js
add
sbb
lea
push
int3
inc
aam
testl
mov
push
cmp
cmpsl
jae
incl
mov
pusha
jg
fidivs
out
test
es
clc
inc
xor
daa
lret
ret
lods
and
inc
xor
pop
fcmovu
adc
scas
mov
lea
push
call
or
lock
cltd
jl
sub
push
fs
add
inc
push
into
adc
movsb
shlb
pop
cmp
sldt
mov
out
mov
xlat
enter
inc
shrb
shrb
pusha
shr
sahf
insl
xlat
fldenv
adc
das
scas
adc
stc
xor
fsts
ficoms
lea
addr16
int3
iret
stos
loop
test
push
faddp
ret
mov
test
inc
xor
push
cld
call
lods
inc
mov
outsb
outsb
iret
xlat
int
push
icebp
mov
adc
leave
lock
idivb
inc
add
ret
dec
jne
xor
test
and
cmp
aaa
shll
xchg
in
arpl
mov
or
cli
sub
xor
mov
inc
sbb
fdivs
and
mov
add
xor
xchg
xchg
sub
fincstp
push
aad
fwait
push
jae
nop
xor
fs
jno
aaa
push
enter
jno
mov
xchg
mov
outsl
ret
jge
int
in
push
adc
push
ror
ljmp
pop
popf
push
inc
push
pusha
sbb
xchg
sahf
iret
xlat
mov
inc
add
fldenv
popa
push
push
add
push
aad
mov
test
sub
lods
inc
in
dec
sub
jge
fildll
dec
mov
setge
sub
aaa
fldl
cmp
sbb
add
push
pusha
sbb
inc
sahf
iret
xlat
scas
fs
test
dec
test
push
aaa
dec
mov
daa
mov
int3
inc
into
add
push
inc
xor
into
lods
jmp
enter
testl
movsl
pop
in
push
vmovntps
je
arpl
jno
call
mov
movzwl
sub
and
loop
ja
push
fcmovnbe
test
fimuls
loop
pop
lcall
out
lods
jmp
enter
jb
popa
push
jbe
call
rcll
xor
pusha
mov
shlb
mov
and
cmpsb
jle
sbb
jg
filds
dec
mov
call
rorb
xor
mov
sub
and
inc
in
dec
xorb
dec
sbb
mov
andl
xlat
jo
xor
mov
adc
push
xchg
mov
mov
push
or
adc
or
inc
xor
adc
clc
sbb
pop
int3
iret
lods
out
or
xchg
push
xor
insl
int3
lods
fs
lea
or
inc
insb
mov
mov
lods
out
or
push
aaa
dec
incw
js
inc
pop
jmp
lret
add
aas
jmp
pop
sub
push
inc
mov
sarl
pop
lods
or
lret
xchg
xor
inc
mov
in
push
dec
lret
push
jns
pusha
call
and
lcall
mov
and
cmp
scas
lods
inc
pop
into
jne
mov
jmp
enter
dec
pop
mov
sbb
or
cmp
cs
xor
sbb
test
call
rorl
xor
mov
xlat
movb
adcl
ds
lods
fsts
ljmp
in
mov
mov
sbb
pop
mov
bound
cmp
pop
das
stos
dec
les
adc
mov
enter
adc
shll
shrl
lcall
decb
les
sbb
jl
mov
fcom
jg
decl
push
add
fmuls
lods
inc
lock
mov
xchg
mov
push
inc
add
jne
mov
mov
pop
ja,pn
testl
lcall
sub
cmp
call
add
cmp
ja
adc
out
mov
sbb
sbb
fs
and
pop
push
ret
mov
lea
js
and
fisttps
call
mov
inc
adc
xor
jne
adc
cmc
or
mov
inc
daa
mov
inc
in
inc
cmp
and
jge
int
push
dec
lret
add
aaa
pop
cmp
popa
add
outsb
insl
mov
mov
lods
out
test
inc
add
xchg
cmp
pop
add
xor
ja
clc
inc
mov
sbb
pusha
rolb
xchg
mov
xor
xor
test
add
cmp
jb
add
jo
jnp
lods
jl
ljmp
add
xor
sbb
push
ret
mov
test
aas
lods
cmp
add
lcall
xor
xor
pop
sbb
stos
sub
jp
test
xor
mov
test
push
aaa
dec
mov
push
sbb
dec
push
call
mov
cmp
jne
push
pop
dec
imul
push
xlat
fldenv
sub
inc
xor
shll
sbb
push
ret
mov
test
inc
sbb
stos
inc
cld
icebp
mov
aad
mov
cmp
jl
call
fmull
add
jle
incl
pop
mov
xor
xor
or
jb
add
rclb
call
ja
mov
inc
and
and
inc
in
or
add
hlt
fs
iret
lods
out
sub
pop
mov
or
push
int3
inc
and
fisubrs
scas
fwait
inc
pop
pop
add
push
xorps
enter
inc
xor
mov
jne
sar
dec
mov
or
inc
mov
mov
xor
leave
fisttpl
jg
fcmovnb
jb
mov
push
mov
push
jge
testb
mov
jae
sub
dec
pusha
mov
sub
jno
or
jmp
test
inc
and
inc
add
fnstenv
dec
daa
mov
add
enter
popa
dec
xor
sub
mov
mov
int
mov
shlb
lods
xor
xchg
jge
mov
jne
add
fsts
jg
call
fyl2x
mov
mov
jae
sub
cmp
jno
mov
call
scas
xchg
inc
pop
mov
dec
dec
cmp
lret
scas
pusha
mov
test
inc
xchg
stos
fs
dec
lret
or
into
test
inc
adc
mov
or
sbb
push
adc
inc
dec
jbe
adc
jae
sar
daa
cmp
xor
or
xor
je
add
sbb
sbb
je
js
es
mov
into
dec
or
push
mov
inc
enter
ret
jl
test
insl
imul
int
inc
cmp
arpl
add
dec
test
shll
rcrb
ja
aad
fisubrs
dec
mov
fxch
sbb
out
mov
mov
cmp
xchg
or
mov
jmp
jmp
fs
add
mov
rcll
push
aad
mov
mov
sub
mov
mov
xor
scas
bound
flds
pop
je
cmc
pop
xor
inc
or
ficoms
mov
je
fcomps
fnstenv
push
jae
gs
cmp
dec
test
sbb
adc
jg
movl
outsb
cmp
cmp
mov
sbb
je
fcomps
test
xor
push
jae
fs
cmp
icebp
dec
hlt
aad
mov
into
je
fcoms
out
in
cmp
aaa
adc
jmp
stos
in
cmp
add
fs
call
stos
jne
popf
orl
xor
movsl
fiadds
sbb
push
inc
aaa
inc
mov
lods
sbb
adc
mov
jmp
fcomps
loope
jecxz
dec
xor
or
and
pop
inc
sbb
js
push
cmp
or
xor
stos
pop
xor
setg
add
push
fs
in
and
fsts
insb
dec
push
aad
out
push
jae
mov
and
fcos
mov
adc
add
dec
inc
repz
lret
lods
enter
xor
sub
xchg
je
fnstcw
lcall
and
mov
add
filds
fnstcw
iret
xlat
mov
inc
add
fldenv
and
or
sbb
pop
inc
sbb
jl
jb
cwtl
dec
adc
sbb
xor
jp
lret
pushl
addr16
push
sbb
and
int3
iret
mov
loope
imul
dec
xor
stos
push
sbb
push
adc
out
mov
dec
mov
mov
mov
loope
imul
dec
xor
add
and
add
cmp
rolb
lcall
aaa
dec
xor
add
sbb
push
adc
inc
sub
sub
call
sub
movzwl
inc
cmp
and
pop
addr16
xlat
shlb
xor
adc
pop
jb
add
sub
jle
or
mov
mov
and
xor
jo
xor
out
push
cmp
jno
xor
jle
add
jmp
lret
jb
mov
jmp
mov
movsb
inc
mov
outsb
popa
push
fidivs
pop
call
incl
xor
gs
ret
mov
add
mov
and
xor
popa
jne
rdpmc
add
sarb
enter
inc
and
lods
jb
call
mov
xor
push
and
lcall
dec
mov
js
push
inc
dec
pop
or
pop
sub
mov
dec
xor
inc
adc
push
sub
and
add
or
pop
insl
mov
mov
and
or
out
add
or
test
adc
pop
popa
inc
xor
inc
cmp
mov
int3
js
fnstcw
dec
jns
gs
xlat
push
sub
ljmp
and
sarl
js
push
pushl
icebp
movsb
push
aad
pop
inc
callw
xlat
fnstenv
adc
fyl2x
mov
mov
or
pop
push
sbb
imul
add
mov
pop
pusha
iret
cmp
out
adc
daa
cmp
adc
mov
pop
mov
mov
mov
fisubs
push
ret
mov
test
inc
pop
movsl
pop
or
insl
xor
pop
mov
jb
adc
flds
fldenv
aad
inc
push
pop
decl
xor
lcall
xor
xor
xchg
sub
jb
mov
push
add
call
sub
or
pop
fldt
int3
iret
jnp
xor
adc
lcall
enter
inc
cmp
xor
les
or
outsb
repz
sbb
dec
test
push
aaa
dec
mov
into
cld
inc
jmp
enter
lahf
dec
inc
and
inc
or
leave
cs
out
push
aad
fistpl
add
inc
test
jmp
push
mov
adc
adc
sti
iret
ret
xchg
test
and
enter
lahf
dec
test
jne
out
or
mov
mov
mov
mov
imulb
pop
jbe
shll
fcomps
push
mov
pop
fldenv
jge
xlat
fsts
call
lods
inc
dec
fstps
iret
xlat
fsts
and
add
pop
into
pushl
sbb
sub
aaa
ret
jbe
mov
mov
pop
inc
lcall
mov
adc
jo
inc
adc
fisubs
or
mov
jmp
sub
call
test
and
mov
push
dec
xor
push
mov
cmp
xor
mov
mov
cmp
gs
xchg
add
ds
push
fidivs
pop
call
into
je
jo
bound
call
rorl
and
push
sub
add
fnstenv
sub
gs
repnz
cmp
inc
dec
addr16
mov
ldmxcsr
inc
adc
into
into
dec
jmp
lret
dec
mov
adc
lods
gs
nop
push
sbb
push
adc
inc
adc
sub
sub
dec
and
fmuls
push
inc
sub
gs
cmp
lcall
mov
int3
inc
dec
jne
adc
ret
mov
or
pop
xor
inc
and
sub
inc
ret
into
jmp
xorb
and
bnd
data16
and
cmp
xor
cmp
xor
mov
sbb
push
mov
out
push
call
cmp
sbb
arpl
xlat
int
add
mov
outsb
and
jne
adc
mov
fmul
iret
xlat
stos
push
and
icebp
push
aad
mov
jge
and
lret
inc
ja
jmp
iret
pop
ss
jne
out
or
lods
and
sub
mov
sub
clc
aad
mov
into
adc
leave
iret
in
out
adc
inc
pop
cmp
inc
cs
nop
call
loop
or
pop
push
or
inc
or
mov
add
and
fiaddl
ficoms
into
test
aad
enter
sub
inc
add
addl
sub
adc
ret
imul
iret
jmp
je
insb
cmp
enter
jmp
sub
mov
stos
sub
xor
repz
push
and
push
mov
cmp
out
cmp
xor
rcrl
pop
notb
xor
lods
stc
jne
pop
sub
push
in
ret
push
jae
test
insl
jg
aaa
stos
sub
xor
ss
mov
jb
and
addr16
push
jae
inc
adc
mov
mov
dec
mov
sub
mov
adc
jle
fisttpl
mov
cmp
pop
jne
insb
mov
dec
xlat
and
sub
pop
push
add
push
sub
xor
adc
lcall
sub
int3
iret
pop
sub
dec
aad
enter
jle
xlat
fldcw
je
add
int3
pop
dec
xchg
sarb
arpl
mov
rcrb
lds
jno
mov
xchg
or
dec
inc
or
add
pop
jne
mov
push
popa
fsubs
push
mov
push
iret
pop
stc
or
aad
inc
sbb
ret
or
sub
sub
ret
push
xchg
sub
xor
xor
adc
add
mov
pop
jno
mov
sbb
dec
mov
pop
aaa
push
and
xchg
leave
ds
data16
pop
pop
dec
push
lea
ret
dec
xor
mov
sub
inc
add
dec
mov
push
jae
lea
addr16
fldt
push
int3
jne
or
dec
aas
add
pop
xor
mov
sub
push
mov
int
add
xchg
add
mov
mov
movsl
push
dec
movl
mov
add
inc
les
ret
ret
mov
test
inc
and
inc
les
icebp
cmpsl
lods
enter
int3
jge
push
std
push
xchg
xor
jb
xchg
inc
xor
pop
sub
mov
fbstp
popa
push
pop
sub
enter
and
inc
xor
dec
int3
jne
mov
fdivs
sbb
movsl
shlb
data16
repz
lcall
push
popa
lea
js
cmpsl
jmp
sub
daa
xchg
adc
aas
xor
dec
cmp
jne
sbb
push
pop
aaa
dec
pop
push
mov
sub
es
je
mov
mov
xchg
push
aaa
dec
xor
inc
inc
movsl
arpl
lea
call
js
test
aas
xor
daa
jae
je
xor
sub
stos
ds
xchg
les
ret
fcomi
movsb
test
insl
dec
push
cmpsl
xlat
xor
and
inc
jmp
inc
pushf
into
inc
inc
iret
gs
push
test
out
sub
mov
mov
inc
sub
add
lcall
add
add
mov
cld
call
testl
lods
fs
pop
mov
pop
xlat
fldcw
mov
filds
int3
mov
fldcw
test
cmp
jns
mov
imul
pushf
mov
push
shlb
add
jae
lea
outsl
mov
sbb
test
or
mov
lods
mov
dec
xor
aad
loope
lret
fildl
mov
cmp
xchg
and
andb
loop
dec
xor
pop
loopne
out
test
aas
xor
lods
mov
sbb
inc
mov
xor
sub
ret
push
gs
sti
mov
into
push
out
test
es
je
pusha
pusha
xchg
push
sub
add
mov
jno
mov
mov
add
jg
fldenv
jne
push
mov
cmp
sbb
lahf
repnz
fldenv
lcall
mov
int3
shlb
je
shll
cmp
sbb
push
ret
xor
lods
enter
inc
int3
shr
lcall
jb
mov
insb
fdivrp
pop
xchg
add
je
decb
les
inc
push
cmpsl
mov
mov
adc
es
sbb
das
and
dec
lea
mov
mov
pushf
mov
popa
mov
mov
xchg
ss
cltd
fbld
call
sbb
or
inc
inc
popa
call
and
out
or
adc
into
pop
push
je
xchg
clc
xlat
lods
enter
xchg
iret
xlat
xchg
and
ret
push
mov
sbb
push
push
jae
lea
adc
fstps
out
inc
cmp
jae
add
addr16
pop
jbe
pop
cmp
adc
dec
and
iret
cmp
pushf
xorl
and
push
add
push
cmpsl
push
adc
mov
ja
add
inc
lea
adc
jge
jg
icebp
test
decl
add
pop
mov
fiadds
add
arpl
and
lea
and
push
adc
fldcw
add
inc
push
inc
mov
mov
dec
adc
mov
xor
int
in
jge
push
jge
jb
popa
lea
js
and
aaa
mov
jae
cld
inc
xor
xchg
xor
jb
in
xor
pop
pop
movsl
pop
aad
call
f2xm1
iret
ljmp
inc
mov
push
pop
dec
fldcw
aad
xlat
movsl
in
push
icebp
push
dec
aad
push
mov
add
jl
pop
add
or
hlt
cmp
push
out
in
adc
roll
fmuls
loope
je
fnstcw
mov
call
sbb
ja
jmpw
fdivrl
and
fistl
jg
fcmovne
aad
mov
adc
pushl
mov
dec
mov
and
sub
pop
dec
jmp
jb
mov
movb
into
mov
rol
aaa
dec
xor
and
fwait
add
aad
aas
mov
push
push
bound
push
mov
and
pusha
mov
add
cmp
enter
pop
and
pop
gs
cmp
jne
adc
push
sub
inc
cmp
aaa
mov
add
jo
mov
push
xor
adc
ja
add
xor
lods
inc
or
test
mov
sbb
mov
sbb
pop
fstps
loope
push
out
and
fyl2x
shll
inc
adc
and
or
aad
jae
add
xor
fmulp
mov
inc
cmp
adc
imul
sub
add
mov
mov
and
fsub
popa
fdivrp
andb
sub
cmp
add
pushf
data16
call
insb
rcl
icebp
cmp
jae
in
xor
andl
sbb
push
ficoms
mov
call
mov
test
push
aaa
sarl
jb
dec
loope
add
ret
push
cmp
mov
lods
stc
cmpl
jne
fnstenv
add
inc
and
test
sub
shll
pop
and
cmp
aad
mov
xor
xor
pop
pop
inc
aas
mov
jbe
js
fidivs
lea
jbe
enter
sub
sub
movsl
adc
mov
into
add
jmp
pop
dec
mov
mov
mov
xlat
sub
imul
xor
lds
jno
jle
push
in
mov
test
sarl
enter
push
lea
mov
cwtl
or
je
xchg
add
jge
aaa
mov
mov
insl
adc
mov
pusha
fdivrp
mov
negb
mov
iret
pop
cs
push
sbb
aad
jecxz
jno
mov
pop
aas
stos
inc
or
jb
je
iret
pop
fidivs
dec
test
sbb
outsb
jne
xlat
fsts
jg
call
add
int3
mov
adc
add
mov
incl
shrb
lcall
xor
int3
and
mov
adc
inc
sbb
jge
iret
pop
jbe
inc
sbb
mov
adc
dec
inc
xor
pop
sub
and
mov
mov
mov
adc
lret
rorl
xor
imul
inc
sbb
adc
pop
pop
fbld
dec
xor
stos
inc
adc
xorl
xor
sub
jp
faddl
add
aad
fistpl
add
leave
ret
push
mov
push
fs
adc
pop
inc
out
mov
mov
or
mov
mov
imul
lock
adc
aaa
dec
mov
mov
lret
gs
push
mov
cld
arpl
sub
pop
lret
inc
xor
xor
cmp
lcall
int
adc
or
test
jb
fsubs
test
roll
mov
jge
push
inc
call
inc
daa
and
and
or
call
test
sbb
enter
int3
aas
sub
mov
jp
pop
push
mov
adc
fmuls
call
mov
cwtl
daa
jle
leave
fisttpl
jg
fcmovne
aad
mov
inc
lods
adc
add
into
xor
lea
lcall
filds
dec
mov
sub
mov
add
mov
dec
add
gs
and
vdivsd
xor
add
iret
cmp
lcall
xor
xor
add
inc
orl
dec
mov
jp
insb
jne
lret
cmp
dec
xor
add
mov
jmp
rolb
bound
pop
push
inc
fcompl
pop
pop
mov
call
mov
add
sub
subl
daa
aas
mov
push
mov
call
jmp
pusha
pop
xlat
lods
out
ljmp
cld
cmp
dec
and
push
add
jmp
or
out
cli
ds
add
adc
mov
pop
aas
sub
movsl
test
sbb
pop
pop
mov
fsts
icebp
xchg
aad
mov
into
je
mov
inc
sbb
decl
push
lock
or
jo
into
mov
hlt
xor
pop
daa
fcoms
in
pop
inc
sub
push
dec
and
and
mov
jg
xor
xor
pop
inc
mov
pop
ret
jge
aas
xchg
fdivrl
arpl
mov
insb
mov
hlt
sub
sub
or
mov
and
mov
pop
pop
mov
pop
xor
pop
add
call
jns
and
sub
sbb
ds
lods
insb
or
sbb
inc
push
ss
xor
xor
adc
lret
mov
mov
xlat
push
sub
loope
call
ror
mov
and
inc
add
and
xor
jno
xlat
lods
gs
xchg
dec
hlt
xor
push
cmp
xor
adc
int3
je
adc
or
dec
mov
pop
inc
lret
nop
cmp
mov
fmuls
test
xor
dec
inc
and
sbb
sbb
mov
aas
iret
pop
ficoms
test
gs
xor
pop
push
push
aad
aas
mov
stos
jne
inc
mov
dec
insb
ret
jge
int
or
xchg
inc
ja
jge
xor
jge
sbb
dec
xchg
incl
xlat
push
sub
adc
mov
and
stos
inc
sub
push
cmpsl
pop
and
into
jne
fsubrs
incl
bswap
outsl
leave
adc
xor
xor
or
mov
sbb
fcomp
test
insl
sub
jne
aas
or
push
cvtps2pd
push
ret
mov
mov
and
adc
jne
adc
add
je
and
add
je
or
dec
xchg
incl
xor
push
and
out
or
inc
sti
pop
jno
mov
je
or
addr16
jne
adc
push
sub
shl
ljmp
lea
and
and
xor
and
push
sub
adc
or
scas
insb
ret
jge
int
in
ret
add
pop
cli
dec
mov
push
dec
xor
jae
lea
cmp
or
aas
jb
ja
call
cmp
add
pop
sub
xchg
pop
mov
pop
inc
and
inc
or
push
push
push
lods
inc
outsb
sub
inc
adc
fsts
or
adc
push
mov
inc
or
lods
inc
and
adc
into
jne
fmuls
fdivrp
and
jne
fbstp
cmp
xor
sbb
xor
aad
daa
sbb
jne
iret
cmp
inc
lret
nop
and
push
mov
call
mov
lods
out
and
cmpsb
popf
pop
push
in
jo
into
movsb
icebp
jmp
ret
xor
jg
xor
adc
pop
je
hlt
adc
add
mov
out
test
es
jns
cmp
pop
pop
sbb
outsl
pop
cmp
inc
pop
into
jne
mov
adc
xor
jp
in
into
pushl
pop
cmp
adc
and
mov
leave
dec
out
mov
mov
inc
and
stos
push
adc
xchg
je
fbstp
mov
aaa
jno
push
xchg
add
jp
movsb
mov
pushl
pushl
mov
aas
cmp
es
and
fistl
jg
lods
out
adc
outsl
pop
pop
dec
pop
add
jne
fdivrp
and
jne
bswap
outsl
cmp
xor
push
xchg
lods
call
mov
inc
jae
jno
fcompl
pop
inc
push
aad
rcrl
add
lock
ret
es
cmp
sub
sub
and
fadd
js
push
inc
inc
mov
and
popa
mov
pusha
mov
in
and
jns
pop
cmp
adc
icebp
lea
cmc
push
add
xor
jb
dec
imul
js
cs
xchg
push
xor
inc
add
push
dec
sbb
pop
setge
xor
repz
xchg
loope
add
cmp
push
add
add
push
or
push
sub
dec
lret
xor
cld
sub
test
dec
sub
sti
dec
popa
int
into
add
xor
fiaddl
nop
jge
dec
imul
daa
xchg
popa
add
shlb
mov
adc
shll
fcomps
fdivrp
test
xor
dec
add
mov
sub
inc
andb
pop
push
jbe
shrb
cli
jg
icebp
test
xor
sbb
repz
je
in
lcall
mov
call
mov
mov
mov
push
push
mov
push
or
je
push
aas
sahf
gs
sar
and
mov
in
jg
inc
add
add
into
mov
adc
push
jne
icebp
jl
aad
mov
add
into
ds
jmp
lret
and
mov
mov
insl
adc
dec
inc
mov
incl
shl
call
mov
cld
pop
xor
into
mov
pop
jge
or
cmp
lcall
mov
pop
xlat
fldcw
mov
das
dec
fsts
jo
call
flds
fldcw
iret
xlat
lods
push
clc
call
add
pop
ud0
outsl
jbe
loope
leave
fildl
jg
pop
outsb
mov
and
dec
sub
push
aaa
and
lea
push
call
fldcw
mov
es
fs
pop
inc
lcall
lods
loope
icebp
jne
mov
dec
fsubrp
cmp
sub
jns
mov
pop
das
out
insb
out
call
mov
int3
fsubrs
fdivrp
lea
adc
lfs
sub
and
mov
enter
testl
lods
bound
xor
test
mov
add
pop
inc
mov
ret
pop
mov
xor
xor
xor
jmp
xor
ret
mov
lea
push
call
filds
mov
int3
mov
push
bound
mov
test
jne
xchg
xor
inc
push
enter
mov
xlat
fldcw
ret
mov
orb
sub
jmp
fbstp
popa
incl
movsl
arpl
jo
mov
cmp
jge
xor
inc
cmpl
jne
cmp
adc
mov
flds
outsl
ds
dec
jg
mov
jno
mov
pop
dec
xor
xor
call
dec
mov
test
inc
jno,pn
mov
xchg
push
enter
call
jne
icebp
in
aad
pop
dec
pop
add
shr
sub
aad
jb
test
fldcw
outsb
aad
mov
iret
rcrb
call
mov
xlat
adc
mov
sub
cs
pop
cmp
mov
lcall
sbb
xor
or
sub
in
xor
push
cmp
pop
or
fcomp
mov
rcrb
mov
inc
xlat
ficoms
jp
and
inc
xor
mov
test
dec
test
pusha
fnstenv
sub
adc
or
aas
es
xor
es
add
mov
mov
push
lds
push
aaa
and
add
adc
jno
pop
in
test
shr
outsb
shrb
inc
add
mov
iret
xlat
mov
inc
add
cmp
sar
jp
mov
enter
filds
into
mov
call
jp
fildll
dec
mov
call
add
ds
int3
iret
mov
icebp
test
lods
addr16
jl
xlat
jbe
push
push
cmp
adc
fdivrp
sbb
adc
cmp
nop
add
xor
jno
add
push
enter
jae
lods
out
or
scas
xor
aad
mov
ficoms
push
inc
test
ror
int3
inc
inc
jne
enter
aas
aad
enter
xor
loopne
leave
pop
aas
out
lcall
mov
iret
shrb
lcall
inc
or
cs
pop
and
rcrb
and
jb
inc
and
add
arpl
lods
mov
inc
and
pop
rcrb
ret
mov
incl
mov
decl
movsb
adc
inc
iret
xlat
dec
and
aad
mov
mov
fcomp
ljmp
test
jne
fcoms
fdivrp
push
lods
add
cmp
iret
cmp
and
add
push
cmp
dec
dec
iret
ja
jp
jne
test
jns
leave
icebp
xor
jae
in
xor
mov
sarb
xchg
or
mov
dec
mov
call
fidivl
mov
cmp
dec
daa
and
test
dec
test
aaa
dec
mov
cmp
jge
and
pushw
test
push
add
push
daa
nop
jmp
add
lret
xor
mov
jne
mov
xchg
aam
lods
enter
int3
iret
mov
sub
cld
aad
cmp
ret
fdivrs
fdivrp
mov
jle
ss
xchg
mov
jmp
dec
mov
add
int3
iret
js
gs
add
mov
dec
fldenv
iret
xlat
scas
fs
notl
dec
pop
add
xor
dec
and
inc
dec
call
mov
jo
lret
mov
gs
mov
rolb
push
sub
add
inc
adc
movsb
hlt
cld
out
call
mov
inc
jb
imul
add
fisttpll
lods
mov
inc
cli
stos
sub
mov
fcomip
or
int3
mov
or
pusha
mov
iret
iret
xlat
jbe
inc
xor
adc
gs
into
jne
retw
push
out
or
stos
das
cmpsl
xlat
ret
mov
pushl
push
cmpsl
or
jbe
shl
push
dec
inc
jge
pop
dec
mov
mov
decl
orb
into
orb
push
sub
les
lods
enter
xor
pop
sub
out
out
jmp
pusha
notl
and
je
in
lcall
addr16
fldt
mov
nop
xor
aas
ss
fldenv
and
push
cmp
adc
sti
mov
call
adc
ljmp
decl
sbb
jge
sub
bound
stc
aad
mov
ds
xor
es
inc
and
test
ror
dec
adc
mov
inc
add
fld
and
mov
fsubrs
sbb
lret
mov
jne
iret
xlat
lods
insb
or
dec
fbstp
dec
mov
push
push
mov
mov
fbld
dec
mov
push
mov
mov
fists
dec
mov
push
movb
rcll
sbb
lods
testl
adc
daa
leave
sub
mov
mov
mov
push
xor
test
rol
lds
xlat
fldcw
je
push
icebp
dec
xor
mov
jmp
lret
mov
iret
push
int3
iret
test
add
cmp
daa
ss
divl
jg
and
rol
enter
pop
and
dec
aaa
jmp
mov
sub
dec
mov
add
add
mov
sbb
dec
mov
add
adc
and
imul
lret
jb
dec
addr16
lods
out
push
sbb
push
xor
inc
or
push
add
and
cmp
inc
ret
adc
inc
add
cmp
jmp
mov
add
xor
popa
test
cmp
xchg
mov
adc
inc
inc
jno
cmc
cmp
out
repz
sub
es
cmc
ror
sbb
out
sub
add
pop
add
aaa
lods
sbb
and
imul
xor
int
jno
xlat
and
and
lcall
mov
aaa
mov
sbb
enter
cmp
jmp
aaa
or
jle
iret
xlat
movsl
inc
or
cltd
cmp
or
jno
clc
test
aaa
xor
jae
mov
lea
adcl
inc
inc
jle
fidivrl
loope
adc
cmp
es
ret
xor
dec
pop
or
pop
insl
repnz
je
in
lcall
xor
mov
and
jb
push
xchg
mov
repz
mov
xor
xor
add
inc
adc
lfs
sub
and
iret
push
aaa
dec
mov
and
pop
pop
or
ja
bound
lods
ljmp
or
mov
add
mov
lea
test
pop
mov
xor
xor
or
pop
inc
inc
mov
adc
stos
lret
and
add
pop
mov
mov
test
xor
es
setge
and
std
xor
shr
call
mov
xor
xor
push
arpl
pop
adc
lods
and
pop
cs
das
out
mov
xlat
sarl
incl
sarb
xchg
mov
fsubl
aas
sbb
xlat
int
cmpb
xchg
ss
aas
push
mov
jmp
enter
cmp
inc
or
sbb
mov
lret
shrb
pop
sub
arpl
decl
mov
push
xor
sub
or
sub
dec
adc
iret
cmp
out
or
jmp
mov
mov
add
sbb
inc
add
imul
test
xor
sbb
push
lds
sub
leave
iret
add
mov
sbb
mov
xor
ss
and
ret
pop
mov
xor
xor
pop
sbb
roll
imul
shll
inc
push
insl
dec
adc
jne
add
xchg
inc
inc
jmp
sar
add
inc
or
lret
fs
lock
push
pop
dec
andb
pop
add
jmp
lea
insb
jbe
jne
fiadds
dec
xor
es
and
data16
mov
lods
out
imul
int3
cs
popa
pop
xor
icebp
div
aad
enter
stc
iret
inc
das
jns
into
icebp
jne
aad
mov
inc
inc
mov
add
xchg
add
sub
or
adc
call
fbstp
xor
push
or
and
arpl
sub
call
mov
adc
int
push
mov
test
js
jmp
adc
pop
inc
sbb
xor
jo
fldenv
mov
jmp
and
je
dec
call
mov
inc
aaa
inc
es
lock
out
push
aad
fistpl
add
or
dec
lret
pop
mov
fsts
pop
push
mov
fistpll
dec
insl
xlat
add
adc
rcl
mov
push
fcmovnbe
xchg
fcomp
mov
vdivps
aaa
and
inc
and
adc
push
mov
std
int3
iret
addr16
sar
jne
mov
push
into
jne
iret
pop
ss
jne
mov
dec
outsb
pop
mov
add
lods
push
jl
mov
inc
and
inc
cld
sbb
test
xor
mov
pop
adc
xorl
or
mov
je
dec
mov
xor
mov
je
push
stos
fistpll
push
jae
pop
dec
fstpt
or
mov
sub
jmp
mov
fisttps
ret
outsb
loope
je
in
lcall
xor
pusha
data16
cli
push
jns
imul
es
inc
cmp
mov
xor
xor
add
xor
lods
loope
bnd
pusha
xlat
push
add
cmp
daa
ret
jno
jne
imulb
add
pop
inc
add
cmp
inc
and
push
mov
adc
add
arpl
or
add
jae
adc
inc
or
test
dec
test
push
aaa
dec
mov
int3
adc
call
hlt
inc
mov
xor
sub
lea
and
fbstp
adc
inc
or
test
dec
test
enter
pusha
popa
add
xlat
add
xlat
xor
inc
push
jp
mov
fsubs
jo
stos
push
and
mov
fistps
ret
dec
mov
add
test
inc
xchg
js
xchg
inc
and
adc
popf
push
adc
mov
lods
and
push
xchg
lds
push
aaa
dec
popa
mov
pusha
inc
sbb
mov
push
fisttps
push
dec
mov
movsb
sarb
je
inc
mov
sub
dec
mov
add
mov
test
inc
sub
sbb
sbb
dec
arpl
push
add
adc
mov
outsb
jae
les
dec
push
push
pop
add
jmp
xor
clc
scas
lods
inc
jle
mov
mov
and
sbb
lret
xor
decl
adc
popa
sbb
lods
rclb
dec
repnz
inc
mov
insl
ja
loop
ret
dec
lret
mov
lret
xor
sub
pop
or
lcall
enter
int3
and
mov
adc
add
xor
arpl
add
sbb
scas
push
ss
xor
and
add
les
add
test
sbb
ret
mov
test
aas
lods
cli
and
add
pop
jmp
xchg
add
mov
fcos
ret
iret
xlat
stos
push
and
mov
fistpll
lods
add
add
sbb
inc
xchg
js
xchg
inc
and
adc
popf
push
adc
cmc
pusha
movsl
mov
inc
push
cmpsl
adc
inc
sbb
jl
sbb
into
outsl
enter
sub
xor
add
popa
push
pop
xor
pop
ljmp
fldenv
or
inc
popa
dec
pop
sbb
or
jbe
lcall
inc
xchg
add
push
add
int3
add
inc
test
or
mov
lret
push
test
insl
pop
lcall
sub
jne
ja
pop
add
push
push
jae
call
fnstcw
xlat
lods
gs
inc
pop
pop
mov
add
les
push
xor
pop
push
adc
and
call
test
cld
pushf
xorl
inc
pop
mov
test
aaa
mov
mov
and
jge
push
pusha
je
arpl
pop
cs
pop
call
mov
int3
iret
lods
out
add
jge
mov
cmp
pop
cwtl
movsl
jne
mov
fsubs
xlat
push
fucomp
daa
ss
add
dec
add
jns
pop
leave
fistl
aad
lret
mov
inc
es
cmpsl
out
mov
mov
cmp
ret
lcall
addl
add
adc
add
add
mov
xor
pusha
add
and
add
stc
lock
mov
cs
notl
push
fdivs
xchg
cltd
call
mov
jae
in
push
dec
adc
fld
mov
add
jmp
movsl
jmp
call
into
jbe
mov
push
jge
aad
enter
jbe
jnp
jmp
call
fld
jno
je
or
push
sbb
jl
inc
mov
cmp
pop
and
or
out
jmp
mov
mov
dec
cs
lcall
fisttps
pop
dec
data16
call
insb
xor
xor
jb
sub
ret
mov
ret
add
jmp
loopne
cli
sbb
fildll
into
dec
repz
loop
push
jae
push
mov
lock
and
icebp
adc
js
ret
mov
xor
arpl
adc
sub
add
subb
je
in
cwtl
lods
push
sub
sbb
loopne
incl
lcall
xor
mov
jmp
jns
scas
dec
ss
xor
iret
cmp
lcall
xor
mov
call
pop
outsb
enter
cmp
fsubl
and
lea
mov
lods
out
push
ljmp
mov
enter
or
push
sbb
lea
data16
lods
out
sub
insb
stc
call
mov
out
addb
mov
iret
jg
fisttps
popa
lods
enter
add
xlat
push
aad
daa
xor
jmp
cmp
iret
ret
pop
dec
add
sbb
scas
loop
mov
push
int3
inc
sub
xor
adc
dec
pop
push
ss
xor
imulb
and
jne
jb
add
mov
sub
add
adc
push
int3
iret
mov
pop
xchg
push
fdivl
add
mov
adc
lods
and
rolb
cs
inc
out
jge
push
inc
pop
push
movsw
mov
adc
mov
sarb
xor
mov
repz
ret
jns
aaa
jns
push
jae
je
call
repz
fiaddl
rcr
ficoms
jae
push
mov
lock
and
icebp
cmc
cld
aad
hlt
pop
mov
and
add
push
push
fisttps
mov
gs
mov
cmp
mov
dec
movsl
sbb
je
test
dec
icebp
push
bound
and
jmp
fbstp
pusha
shlb
incl
pop
jecxz
fbld
sub
leave
xchg
into
out
mov
xchg
fists
sub
jo
sbb
add
addb
mov
xlat
jg
test
insl
dec
call
xchg
sbb
jb
mov
je
jno
inc
push
jae
int3
xchg
xor
arpl
push
sbb
roll
arpl
adc
mov
dec
push
sub
add
shrl
and
and
jae
in
xor
fs
mov
mov
push
nop
add
ret
mov
test
aas
lods
mov
add
xchg
pop
sbb
xchg
push
jae
lock
sbb
test
daa
xor
xchg
add
xor
and
or
into
and
mov
xlat
push
and
push
sub
movl
sbb
and
shll
sub
push
push
cmp
adc
ljmp
cmp
fnstenv
addr16
dec
add
icebp
nop
test
lods
mov
inc
and
mov
call
add
jmp
fmull
add
icebp
lock
lods
mov
inc
add
lock
and
pop
pop
jecxz
add
jno
mov
int
cmpl
add
mov
mov
insb
dec
outsl
stos
stos
dec
xor
sub
and
sbb
inc
push
addr16
insb
lock
scas
mov
nop
xor
scas
movsb
inc
adc
pop
ret
jmp
push
push
xor
fistpl
pop
cmp
mov
sub
mov
leave
notb
or
pop
into
lods
jnp
xchg
mov
sbb
int3
mov
je
sub
aad
aas
dec
out
push
fistpl
push
push
jae
lea
fucomip
mov
int3
loope
clc
fwait
sbb
shll
cmp
and
and
push
or
cmpsb
mov
int3
mov
push
xor
inc
loope
add
push
enter
ficomps
xlat
fldenv
call
into
jne
fsubs
test
incl
lret
dec
inc
pop
hlt
jne
mov
lret
or
aaa
xor
int
in
mov
add
rcll
xor
fdivrp
lea
jge
enter
pop
mov
mov
jg
loope
xchg
inc
add
rcll
xor
jne
daa
and
add
inc
fnstcw
xor
add
adc
test
bound
movzwl
icebp
xchg
mov
into
out
jmp
enter
iret
mov
test
pop
in
xchg
xor
dec
int3
mov
xchg
push
std
out
call
mov
fnstenv
adc
test
es
or
lock
mov
lret
inc
lret
inc
xor
loope
dec
and
xor
mov
insb
dec
mov
mov
int3
mov
and
mov
lret
fxch
mov
dec
movsl
pop
cld
add
outsl
cmpsb
xor
shrb
inc
call
lods
enter
jbe
mov
and
pop
inc
lret
fnstcw
inc
mov
mov
cs
enter
add
sbb
push
jge
xor
mov
rclb
xlat
idivl
aaa
inc
ficompl
and
ss
dec
xor
repz
mov
enter
mov
test
sub
lret
inc
gs
sub
pop
xchg
xor
es
repz
fxch
iret
into
movzwl
sub
and
insb
mov
outsb
sub
cmp
fadds
divb
lret
fistpll
pusha
sbb
inc
iret
faddl
add
or
aad
mov
and
addl
mov
sub
or
div
aad
adc
ficoms
xlat
into
in
push
jmp
enter
mov
test
add
sbb
or
dec
popa
xor
fdivs
mov
adc
dec
mov
push
push
cmpb
xor
sbb
add
fsubrs
push
fbstp
xor
gs
dec
test
shll
mov
add
add
adc
scas
gs
xchg
add
outsb
jne
ja
add
test
and
enter
mov
je
push
jecxz
inc
sbb
ljmp
ficoms
das
callw
fldcw
and
mov
lret
xchg
cmp
loope
test
mov
inc
adc
xlat
into
cmp
je
dec
insb
dec
add
jns
pop
mov
sbb
cs
mov
xor
stc
add
jecxz
mov
leave
sub
and
sbb
ja
or
inc
xor
dec
mov
mov
ljmp
push
and
mov
sub
leave
cmpsl
cmp
xchg
cs
xchg
sbb
sub
pushf
repz
pop
mov
inc
xor
cmp
fldt
cmpl
xor
xor
lahf
out
inc
adc
cmp
fnstenv
mov
jg
xor
popa
mov
fdivrs
fdivrp
imul
inc
sub
aas
inc
xchg
xor
stos
inc
or
add
pop
mov
sub
cmp
insb
push
mov
xor
fiaddl
mov
inc
cmp
xor
sarl
inc
adc
jmp
xchg
push
mov
adc
jb
fstpt
xchg
add
sub
mov
fdivs
lret
push
js
mov
sub
pop
jno
cmc
inc
xor
fsubrl
dec
jb
sbb
data16
jae
mov
enter
dec
scas
mov
dec
or
fcmovnb
jl
or
mov
jp
add
fnstcw
mov
aaa
test
sbb
add
jne
stos
jno
pop
mov
rol
imul
mov
cmp
mov
fs
mov
cmovbe
jne
ja
pop
xor
jp
pop
push
mov
rclb
sarl
nop
cmp
test
or
dec
rcrb
jmp
ret
push
mov
les
push
adc
mov
jge
fnstcw
sbb
sbb
arpl
lret
jns
mov
pop
xlat
sbb
sub
aam
std
lds
jle
mov
loopne
inc
mov
mov
sub
stos
outsb
add
int3
dec
sub
bound
scas
data16
in
cs
mov
inc
add
pop
out
lret
xor
mov
es
jl
repz
jmp
dec
lret
xor
aaa
mov
lret
mov
gs
repnz
mov
leave
cmp
mov
clc
xor
mov
vandnps
mov
fsubs
je
lret
flds
mov
scas
cmp
aam
mov
pop
and
jbe
sub
mov
jp
cli
cs
je
mov
clc
setne
aad
add
xor
xor
popa
cmp
dec
mov
enter
aas
mov
mov
push
pop
jno
cmc
push
xor
repz
jae
in
xor
mov
mov
mov
adc
mov
xorb
add
adc
out
std
sbb
pop
mov
leave
jge
jns
sbb
lods
je
mov
cli
lea
ret
xchg
jmp
fnstenv
pop
adc
jmp
push
cltd
jge
mov
pop
and
repnz
addb
je
or
xor
aad
mov
daa
mov
push
dec
mov
mov
roll
mov
hlt
lods
cmp
pop
xchg
sub
inc
idivb
out
out
lcall
xchg
push
icebp
pmulhw
cmc
jne
daa
movsb
fstpt
ret
push
inc
dec
mov
lods
and
inc
out
add
and
dec
in
sub
movb
mov
or
iret
insl
cli
stos
inc
enter
push
dec
scas
xor
lret
pop
xchg
add
faddl
mov
push
stos
push
mov
pushl
push
pop
insl
inc
cmp
inc
inc
mov
xor
std
sbb
inc
out
adc
aaa
int
cmp
scas
and
adcb
adcb
shlb
sub
push
fsubs
mov
xor
sub
mov
pop
mov
or
or
and
arpl
add
fbstp
inc
into
jne
iret
pop
fidivs
dec
mov
mov
pushl
shrb
cltd
setge
fbstp
jge
fidivs
xchg
xor
in
push
rorl
aad
fs
call
fnstenv
incl
sub
jno
cmpl
ljmp
mov
mov
rclb
and
and
pushl
inc
call
imul
xlat
fnstcw
mov
pop
leave
call
in
mov
add
ja
xor
jb
insl
popa
divl
adc
les
popf
mov
cmp
xchg
add
xor
stc
enter
jp
or
mov
jl
sbb
scas
mov
mov
or
daa
cmp
cmp
arpl
xor
adc
movzwl
enter
addr16
inc
xlat
xor
and
addr16
leave
mov
mov
add
dec
mov
iret
or
pop
mov
daa
cmp
sub
jbe
dec
and
cmp
insb
inc
mov
mov
les
test
hlt
lcall
dec
in
dec
xor
and
mov
xor
xor
jbe
push
xor
call
jl
sbb
imul
add
lret
shrl
daa
mov
inc
mov
test
mov
in
pop
lret
mov
das
xor
xchg
push
add
pop
daa
inc
sahf
push
daa
xor
sbb
inc
add
lods
jb
mov
das
xor
xchg
or
mov
sub
ja
imul
loope
dec
enter
sarb
loope
rolb
mov
xchg
mov
in
jge
nop
add
mov
mov
mov
nop
adc
mov
in
sub
imul
pop
lcall
fs
mov
or
nop
mov
dec
jmp
int3
lods
insb
adc
pop
mov
pop
leave
cmp
push
call
or
adc
lret
inc
mov
adc
inc
leave
sub
or
inc
daa
aas
movsb
inc
call
jmp
cmp
call
rol
vpandnq
imul
dec
add
ret
sarl
mov
sbb
mov
imulb
and
xchg
ds
shlb
sub
or
push
nop
or
rcll
and
test
lock
int3
mov
push
aaa
popa
xrelease
ret
and
push
pop
adc
jle
push
and
add
adc
out
jne
cs
cmc
dec
mov
mov
int3
inc
rcr
push
hlt
call
pop
cwtl
pop
leave
mov
mov
roll
mov
leave
push
in
mov
and
sub
mov
mov
leave
inc
outsl
inc
ss
ljmp
jne
push
notb
mov
add
insl
push
add
xor
dec
stos
xor
aas
lahf
mul
inc
pop
sbb
push
divb
paddsw
iret
insl
stos
inc
out
call
flds
mov
jmp
filds
sub
jb
or
inc
and
xchg
inc
fcoms
notb
mov
out
aas
lahf
jae
cmpb
mov
inc
dec
push
cmp
pop
mov
push
and
call
out
sbb
push
ljmp
mov
and
adcb
adcb
shlb
sbb
push
fldenv
je
jg
push
repnz
pop
mov
lahf
jae
or
xchg
inc
mov
mov
fsubs
scas
and
add
or
and
arpl
add
fbstp
inc
into
jne
iret
pop
repnz
dec
mov
mov
pushl
shrb
xchg
setge
jge
fidivs
xchg
xor
in
push
rorl
scas
fs
call
fnstenv
xor
pusha
iret
pop
shlb
push
icebp
rcrb
lods
xor
mov
ret
and
aad
cmp
cmp
arpl
int3
iret
stos
arpl
adc
lcall
push
fcomp
lcall
lret
fwait
cmc
pop
xor
fsubrl
dec
jb
sbb
data16
jae
mov
enter
dec
cmpsb
mov
or
xlat
sarl
mov
fs
add
fnstcw
mov
and
dec
fcoms
das
inc
mov
xor
sub
mov
psubusw
xor
sub
or
mov
or
mov
and
push
pop
mov
mov
cmp
cmp
aas
aaa
mov
mov
in
cmp
mov
call
pop
lock
add
rcll
xor
and
jp
ds
rorl
fmuls
add
pop
fcmovnb
fs
sbb
lods
jl
sub
dec
scas
repz
ret
pop
or
mov
jmp
jge
mov
dec
sub
xor
jle
mov
push
adc
mov
xor
xlat
arpl
cmpb
mov
inc
push
mov
adc
sub
adc
jle
outsl
scas
sub
cld
ljmp
pop
mov
rolb
mov
or
xor
scas
sub
mov
mov
in
gs
push
call
cmpl
mov
xchg
or
roll
leave
incl
mov
add
pop
and
ret
add
pop
out
push
push
ljmp
ss
cmc
jl
out
cld
mov
cld
cmp
lods
fcomp
pushl
lret
inc
dec
into
xchg
dec
xor
jo
arpl
call
fnstenv
mov
lods
out
pop
inc
mov
xor
mov
cmc
mov
int
mov
arpl
sbb
gs
cli
mov
loop
int
cmp
imulb
and
inc
out
mov
mov
fsubs
stos
les
add
push
mov
mov
mov
nop
adc
and
add
repnz
xchg
add
inc
inc
outsb
jno
mov
mov
nop
add
mov
jge
mov
clc
push
testb
inc
mov
xlat
push
rorl
fisubrs
cmp
insl
shrb
fsubrs
rcll
xor
inc
in
xchg
jge
insb
xchg
xor
jne
mov
enter
sub
dec
js
pop
loopne
insb
inc
mov
mov
push
and
inc
stc
stos
adc
inc
pop
cmc
jne
es
fsubl
or
pop
inc
enter
jle
pusha
movsl
loopne
mov
ljmp
in
lods
fs
pop
mov
xchg
mov
lods
fmull
lods
aaa
ds
jbe
pop
add
push
insb
mov
or
inc
shl
mov
dec
mov
fdivs
scas
and
add
pop
xor
mov
sub
and
push
mov
dec
xlat
es
add
sbb
ret
aas
outsb
lods
loopne
call
fdecstp
or
call
test
mov
fidivrl
push
testl
or
filds
sub
xor
fsts
insb
mov
mov
lock
add
pushf
xorl
mov
fcom
push
aad
mov
lods
lcall
mov
xor
out
inc
aad
mov
jne
out
add
xor
cmpsl
pop
sub
fnstcw
iret
xlat
and
push
mov
mov
loope
or
sub
subl
shll
in
sbb
push
int
aam
enter
insl
stc
ljmp
inc
imul
sub
jb
mov
add
add
or
inc
or
jb
mov
dec
aas
sahf
popa
pusha
add
dec
mov
bound
or
inc
enter
mov
jne
xor
cmp
cmpsb
fiaddl
jne
jp
pop
mov
sbb
adc
push
imul
xor
sti
sub
daa
jno
jae
mov
inc
and
lret
inc
ds
push
or
adc
inc
idivb
or
pop
dec
cmp
cmp
inc
dec
iret
jbe
andb
pop
inc
pop
call
in
mov
push
add
add
xchg
mov
push
adc
test
sbb
and
cmp
aas
lods
cmp
testb
out
xchg
mov
push
add
and
les
in
mov
popf
cmpb
out
pusha
pop
nop
adc
dec
imul
rol
cs
nop
add
dec
imul
sub
inc
cmpl
xsave
xor
fsubrs
xchg
inc
xor
out
ret
filds
inc
xor
in
add
mov
je
cmp
xor
aaa
je
cmp
test
data16
fsubl
test
sbb
and
mov
cmp
xchg
out
movzwl
jbe
enter
cmp
jmp
scas
xor
pop
iret
dec
insb
clc
cmp
out
scas
insb
rorb
mov
mov
mov
xor
popf
je
fdivrs
mov
xor
lods
sarl
ret
push
mov
jbe
mov
add
nop
or
adc
daa
sbb
and
jnp
and
add
insl
out
out
add
cmp
and
mov
test
and
xchg
mov
jmp
add
mov
call
imul
and
and
mov
pop
xchg
push
roll
jnp
inc
and
inc
or
inc
inc
and
add
cmovnp
add
xchg
sbb
mov
call
sbb
jae
lret
jns
dec
rorb
mov
jp
pop
inc
mov
xor
and
aaa
rol
stos
aaa
dec
xor
test
dec
loope
and
inc
adcl
cmp
jbe
mov
add
repnz
mov
mov
jne
lods
fs
mov
push
cmp
inc
out
test
push
lds
jl
mov
push
loopne
andb
aas
sub
adc
jge
inc
rol
daa
mov
push
shll
ljmp
mov
push
mov
or
js
stos
push
push
nop
adc
test
dec
aas
inc
daa
fsts
out
mov
into
fsubs
nop
inc
dec
insl
jns
pop
jb
add
mov
aam
lret
insb
cltd
mov
enter
jbe
jg
clc
call
sarl
jmp
push
ret
mov
jmp
iret
pop
stos
push
aam
xor
mov
call
test
cld
pushf
xorl
inc
mov
inc
cmc
lret
push
jb
mov
ljmp
jg
xor
shr
int
fldenv
je
push
jns
mov
dec
and
lcall
push
mov
or
jne
leave
fadds
test
and
hlt
fsts
filds
ds
lds
and
idiv
insb
popf
call
mov
out
pop
pop
rolb
mov
jmp
xchg
adc
dec
mov
jecxz,pn
add
test
push
pop
mov
icebp
hlt
adc
mov
cmp
inc
daa
and
andl
dec
push
shll
mov
inc
add
add
sub
or
movzwl
and
mov
dec
setge
es
and
inc
jp
dec
xor
inc
cmp
pop
dec
push
jns
leave
ss
fdivs
sbb
test
adc
dec
xor
outsb
push
fxsave
or
dec
mov
out
cs
rcll
dec
mov
iret
mov
and
push
cmpsl
or
ret
je
mov
cmp
test
xchg
repz
jne
dec
mov
pop
push
leave
leave
adc
out
arpl
add
outsl
stos
xlat
dec
xor
hlt
jne
cmp
add
repnz
test
aas
and
jbe
sub
fiadds
pop
mov
lea
xor
lods
inc
sub
inc
push
add
xlat
fldcw
or
mov
into
xlat
fldcw
add
mov
into
xlat
push
xchg
pop
xor
lret
mov
inc
fxsave
or
inc
pop
xor
pop
xor
sbb
jbe
iret
push
fnstenv
adc
mov
mov
cmc
jne
daa
jbe
xchg
enter
int3
inc
cmp
xor
adc
push
ret
mov
xor
mov
leave
fildl
aad
xor
cmp
pushl
mov
dec
into
jbe
fsubs
fdivrp
ljmp
call
into
jbe
fcoms
xor
call
je
aad
hlt
pop
mov
sub
xchg
mov
dec
xor
xor
or
lret
mov
mov
add
or
fsubrs
inc
lock
inc
and
and
mov
pop
movsb
divb
lcall
enter
pop
jb
fldenv
add
push
add
cmp
jae
in
xor
fs
jne
addr16
sub
inc
pop
inc
lcall
fisttps
jae
int3
mov
sub
mov
pop
or
xor
or
test
into
icebp
movzwl
rcll
push
or
sub
ficomps
jmp
shlb
mov
shll
out
inc
cli
mov
push
aas
sahf
lods
inc
int3
jg
jecxz
mov
push
aas
sahf
out
or
push
test
scas
lret
mov
mov
inc
cmp
push
dec
sub
adcl
stos
fs
inc
dec
int3
push
fcmovu
dec
mov
insl
stos
enter
ljmp
xor
loop
icebp
mov
or
jecxz
sub
fs
lock
ror
addr16
or
cli
mov
pop
mov
dec
mov
ret
iret
mov
sbb
lret
dec
jns
mov
cs
pop
dec
aaa
je
arpl
jmp
decb
mov
int
stos
push
jl
mov
test
push
cmpl
pop
mov
iret
jle
stos
enter
test
jne
mov
cld
out
mov
xlat
enter
xor
loopne
fistps
aad
cmp
jle
mov
or
mov
sub
inc
scas
push
mov
scas
push
or
inc
push
or
push
mov
cmp
add
push
mov
cmp
lods
out
shl
lret
cmpl
leave
cs
mov
cmp
jo
popa
lea
js
fs
out
shrl
sub
inc
xchg
cmp
fs
jae
lea
addr16
or
dec
push
push
vcomiss
jns
cmp
inc
cmp
fidivs
out
or
xor
into
test
aas
lods
call
mov
mov
add
bound
ret
scas
fcmove
mov
push
mov
dec
fyl2x
sbb
aad
sbb
jno
dec
or
ret
insb
lock
cmp
push
shrl
push
aaa
sbb
sub
xor
stos
or
sub
mov
int3
aas
lods
lahf
and
add
push
dec
aas
adc
ja
daa
xor
daa
mov
js
ds
into
incl
xlat
xor
inc
sbb
inc
fnstcw
mov
adc
jbe
nop
xor
inc
mov
shll
les
aas
add
mov
xor
pop
bound
jne
lret
cld
shlb
mov
shlb
mov
sub
mov
add
outsl
scas
inc
pop
into
dec
iret
mov
das
stos
lret
lea
inc
inc
enter
pop
cmp
pop
adc
out
inc
ret
mov
adc
jb
sub
into
pop
dec
iret
xlat
push
xor
inc
sub
mov
ja
sbb
lea
addr16
inc
mov
lcall
xor
jne
add
popf
scas
add
push
jg
test
je
sbb
into
testl
movsl
lcall
arpl
add
insl
mov
push
inc
lret
cmp
mov
test
aas
lods
sbb
inc
out
add
imul
dec
test
aaa
dec
mov
add
add
sbb
shr
mov
loop
lret
loope
out
add
xor
cmp
sarl
and
test
les
aam
lods
enter
call
add
xchg
add
mov
call
movsl
rorb
cltd
add
push
mov
hlt
mov
add
enter
int
xlat
jo
inc
hlt
dec
sub
jmp
out
test
xchg
jb
cmp
jne
mov
pop
xchg
push
mov
xor
cmpb
and
repz
mov
lds
inc
mov
daa
cmp
inc
dec
popl
mov
sub
mov
rcl
dec
mov
xor
jecxz
add
in
movsl
sarl
and
jmp
jb
scas
cmpb
lock
mov
and
loopne
or
lret
dec
out
lret
mov
sub
ljmp
popa
dec
jecxz
cmpsl
icebp
popa
movsl
sar
fmuls
and
dec
jecxz
cmpsl
icebp
popa
movsl
shl
fcoms
fcmovnu
jp
mov
xor
sbb
je
sub
mov
rcl
stos
out
or
out
add
and
cmp
incl
cmp
sub
fs
js
inc
add
pop
ret
pop
inc
or
and
pop
lods
mov
lods
enter
jbe
js
fcoms
inc
pmullw
int3
inc
les
add
jp
jb
mov
iret
cmp
jmp
pop
lea
and
sti
rclb
xlat
xor
movsb
sub
mov
imul
shl
sti
icebp
shll
loop
sbb
xor
and
or
lret
xchg
inc
lock
push
or
enter
jmp
das
jns
lret
icebp
pop
cmp
lods
mov
test
xor
es
roll
data16
clc
inc
push
shll
inc
loopne
rcll
sarl
cmp
icebp
xor
add
scas
fs
cmp
xor
jb
mov
xor
adc
jne
jg
or
je
icebp
or
insl
aam
int
pop
in
sbb
pop
lret
sarl
and
dec
call
testl
dec
cli
or
inc
mov
and
jb
popa
push
fstpt
es
jmp
jl
ss
pop
bswap
xlat
mov
inc
add
add
pmullw
xor
ljmp
xchg
cmp
mov
lods
fs
jle
add
inc
ds
push
mov
mov
mov
icebp
lret
and
ja
xchg
mov
aam
enter
cmp
jbe
and
mov
push
sub
into
ss
lcall
ss
xor
loope
cmp
jae
fnstenv
inc
xchg
icebp
lret
or
xchg
inc
mov
mov
adc
add
ljmp
cmp
fstpt
or
adc
shll
xor
jne
enter
jb
push
mov
dec
sbb
lret
jmp
mov
add
mov
cmp
mov
or
shll
outsb
dec
sar
or
pop
out
push
mov
sub
add
int3
mov
mov
leave
mov
mov
mov
test
lret
xlat
fxch
fwait
add
inc
lcall
fucomip
cmp
cmp
jmp
jl
xor
or
xlat
mov
int3
inc
sahf
add
imul
xor
push
or
dec
pushf
ss
push
andb
or
bound
fs
nop
pop
push
mov
mov
nop
and
push
aam
mov
mov
mov
inc
scas
inc
call
mov
and
aad
aad
mov
and
push
xor
inc
sub
ds
fldcw
call
lods
inc
mov
xlat
int
mov
icebp
iret
not
lods
faddl
jne
iret
pop
cs
mov
out
pop
je
decb
or
jmp
or
pushl
mov
orb
decl
xor
and
jb
xchg
push
xor
xor
jecxz
clc
push
notb
mov
or
cmp
inc
sub
sbb
or
jge
add
js
mov
aaa
adc
push
mov
mov
sub
fcomip
dec
push
xor
es
inc
in
shlb
lret
adc
push
dec
fnstcw
pop
mov
call
add
out
or
xchg
mov
iret
xlat
sub
aas
and
xor
xchg
rol
push
or
mov
and
or
jne
loop
mov
jmp
scas
leave
std
or
aaa
sub
mov
int3
or
sar
and
scas
add
adc
xor
fcomip
lea
mov
jmp
test
lea
xor
fidivs
xchg
adcb
inc
inc
into
adc
fcomps
fnstenv
aaa
cmp
out
call
test
xlat
idivl
das
mov
fisubs
xorb
push
aaa
dec
adc
inc
int3
daa
xchg
loope
push
mov
push
jmp
lods
adc
inc
xor
or
out
add
adc
mov
adc
jo
flds
adc
decl
push
daa
or
call
sbb
and
and
lods
adc
and
iret
or
aad
int3
out
sti
xchg
int3
jmp
lret
in
adc
shlb
dec
xor
xor
jp
add
inc
push
add
push
es
xor
sub
push
add
es
xor
xor
sbb
add
and
sub
dec
xor
sub
add
jno
add
imul
sub
xor
add
push
add
inc
es
xor
xor
jp
add
push
push
add
push
es
xor
and
sub
xor
add
push
add
cmpsb
daa
dec
xor
xor
sbb
add
xor
sub
dec
xor
and
sub
xor
add
push
add
xchg
dec
xor
and
sub
xor
add
es
xor
and
sub
push
add
out
dec
xor
and
sub
xor
add
daa
dec
xor
xor
add
daa
dec
xor
add
jg
add
xchg
daa
dec
xor
xor
add
add
es
dec
xor
add
pop
push
add
mulb
dec
xor
and
sub
xor
add
push
add
push
es
xor
and
sub
xor
add
push
add
cmpsb
daa
dec
xor
and
sub
xor
add
daa
dec
xor
add
mov
add
cli
daa
dec
xor
and
sub
xor
add
push
add
jbe
dec
xor
and
sub
xor
add
push
add
inc
daa
dec
xor
and
sub
xor
add
push
add
push
daa
dec
xor
and
sub
add
loope
add
cmpsb
cmp
lock
sub
add
pop
push
add
xchg
dec
xor
xor
add
and
add
xor
xorb
add
dec
add
jge
dec
xor
cmp
sub
dec
add
out
dec
xor
add
mov
add
cli
cmp
movsb
cmp
sub
dec
add
lret
xor
add
xchg
dec
add
fidivrl
dec
xor
add
gs
add
sub
dec
xor
cmp
sub
xor
add
push
add
popf
cmp
push
cmp
sub
add
push
dec
add
push
cmp
inc
cmp
sub
add
and
sub
dec
xor
cmp
sub
add
xor
sub
dec
xor
cmp
sub
add
xor
sub
dec
xor
cmp
sub
add
add
sub
dec
xor
cmp
sub
add
ficoml
sub
dec
xor
cmp
sub
das
add
loope
add
cmpsb
cmp
inc
and
sub
add
and
daa
dec
xor
cmp
add
rorl
xchg
dec
xor
cmp
add
rorl
sub
cmp
add
mov
cmp
mov
xor
xchg
das
add
mov
add
cli
cmp
movsb
cmp
add
test
sub
cmp
loopne
xor
cli
das
add
rorl
xchg
dec
xor
cmp
add
rorl
sub
cmp
add
scas
dec
add
cmp
xchg
sub
add
pop
cmp
insb
cmp
sub
add
mov
sub
cmp
inc
cmp
add
jno
add
cmp
and
add
add
sub
dec
xor
cmp
sub
add
add
sub
dec
xor
add
dec
pop
add
std
das
dec
xor
sub
sub
add
pop
add
arpl
xor
sub
add
dec
add
mov
xor
sub
add
dec
add
mov
dec
xor
cmp
add
fisttps
sub
xor
lcall
sub
cmp
jle
xor
mov
add
push
add
and
mov
sub
add
daa
dec
xor
sub
add
cmp
cmpb
sub
add
mov
add
xchg
daa
dec
xor
and
sub
xor
add
add
push
cmp
mov
sub
add
add
push
cmp
push
xor
push
add
mov
cmp
sahf
cmp
sub
sub
add
dec
add
sarb
xor
xor
cmp
add
dec
add
inc
cmp
adc
xor
sub
add
dec
add
push
cmp
test
xor
fisubrl
add
cmpsb
cmp
lock
xor
lret
add
dec
add
mov
dec
xor
cmp
add
cmp
sub
dec
xor
cmp
sub
add
das
dec
add
pusha
cmp
sarb
sub
dec
add
out
dec
xor
sub
add
idivb
dec
xor
sub
add
idivb
dec
xor
sub
add
mov
xor
int3
das
add
ret
sub
cmp
add
iret
dec
add
cmpb
xor
xor
jp
add
inc
dec
add
push
cmp
push
aas
xor
push
add
push
dec
add
push
cmp
inc
aas
xor
sbb
add
cmp
xor
xor
or
add
jbe
dec
xor
aas
xor
cmp
add
inc
cmp
adc
xor
sub
add
push
cmp
add
xor
fisubrl
add
loope
add
cmpsb
cmp
xor
cmp
sub
sub
add
dec
add
mov
dec
xor
cmp
sub
sub
add
dec
add
xchg
xor
cmp
sub
sub
add
dec
add
xchg
cmp
xor
cmp
sub
dec
add
out
dec
xor
cmp
sub
sub
add
cmp
xor
xor
add
add
into
es
xor
sub
add
cmp
xor
sub
add
dec
add
mov
dec
xor
xor
dec
sub
add
add
ss
xor
sub
add
cmp
cmpl
add
orl
xor
sub
add
cmp
xor
sub
add
add
es
xor
cmp
sub
sub
add
dec
add
inc
cmp
xor
cmp
sub
sub
add
dec
add
push
cmp
xor
cmp
sub
sub
add
dec
add
cmpsb
cmp
xor
lret
add
dec
add
mov
dec
xor
cmp
sub
sub
add
dec
add
xchg
xor
ljmp
sub
dec
xor
cmp
sub
sub
add
dec
add
out
dec
xor
cmp
sub
push
add
idivb
xor
mov
dec
add
cmp
xor
stos
sub
add
cmp
xor
stos
sub
add
dec
add
es
xor
dec
sub
add
add
ss
xor
jp
add
inc
dec
add
push
cmp
xor
push
add
push
dec
add
mov
dec
xor
xor
push
add
push
dec
add
push
cmp
xor
sbb
add
and
sub
dec
xor
cmp
sub
sub
add
dec
add
inc
cmp
xor
sub
add
mov
add
push
cmp
xor
fisubrl
add
loope
add
cmpsb
ds
xor
cmp
sub
sub
add
dec
add
mov
dec
xor
cmp
sub
sub
add
dec
add
xchg
dec
xor
cmp
sub
sub
add
add
xchg
ds
xor
cmp
sub
dec
add
out
dec
xor
sub
add
ds
xor
cmp
sub
dec
add
ds
xor
sub
add
ds
xor
sub
add
add
es
xor
xor
dec
sub
add
add
cmpb
pusha
cmp
sub
add
inc
dec
add
push
ds
xor
xor
push
add
push
dec
add
push
ds
xor
xor
sbb
add
and
sub
dec
xor
sub
add
cmp
xor
cmp
sub
add
sarb
xor
cmp
sub
sub
add
add
dec
ds
xor
xor
dec
sub
add
add
xor
xor
cmp
sub
sub
add
dec
add
add
xor
cmp
sub
sub
add
dec
add
mov
cmp
sub
sub
add
dec
add
pusha
cmp
xor
cmp
sub
sub
add
dec
add
lahf
aas
dec
xor
cmp
sub
add
cmovp
sub
dec
xor
sub
add
aas
dec
xor
sub
add
dec
add
iret
aas
dec
xor
sub
add
aas
dec
xor
sub
add
aas
dec
xor
xor
push
sub
add
dec
add
nop
cmp
xor
pushf
sub
add
cmp
xor
mov
add
mov
cmp
xor
mov
dec
add
sarb
sub
add
sarb
xor
pop
sub
add
add
and
xor
dec
sub
add
add
xor
xor
jl
add
dec
dec
add
add
xor
insb
sub
add
add
adc
xor
sbb
add
das
dec
add
pusha
cmp
xor
or
add
aas
dec
add
jo
dec
xor
cmp
sub
add
cmovnp
sub
dec
xor
cmp
sub
add
pop
dec
add
push
cmp
xor
fsubrl
add
out
dec
add
mov
cmp
sub
sub
add
dec
add
mov
dec
xor
cmp
sub
sub
add
dec
add
cmpb
xor
cmp
sub
sub
add
dec
add
nop
ds
xor
sub
add
ds
xor
sub
add
ds
xor
sub
add
ds
xor
sub
add
ds
xor
xor
pop
sub
add
add
and
dec
xor
xor
dec
sub
add
add
xor
dec
xor
xor
jl
add
dec
dec
add
add
dec
xor
xor
insb
sub
add
add
adc
dec
xor
cmp
sub
add
das
dec
add
pusha
ds
xor
cmp
sub
add
aas
dec
add
jo
dec
xor
cmp
sub
add
cmovs
sub
dec
xor
cmp
sub
add
pop
dec
add
push
ds
xor
cmp
sub
sub
add
dec
add
mov
cmp
sub
sub
add
dec
add
mov
dec
xor
cmp
sub
sub
add
dec
add
cmpb
xor
cmp
sub
sub
add
dec
add
nop
aas
dec
xor
sub
add
aas
dec
xor
sub
add
aas
dec
xor
sub
add
aas
dec
xor
sub
add
aas
dec
xor
xor
pop
sub
add
add
and
dec
xor
xor
dec
sub
add
add
xor
dec
xor
xor
jl
add
dec
dec
add
add
dec
xor
xor
insb
sub
add
add
adc
dec
xor
cmp
sub
add
das
dec
add
pusha
aas
dec
xor
cmp
sub
add
aas
dec
add
jo
dec
xor
cmp
sub
add
cmovns
sub
dec
xor
xor
sub
dec
add
push
aas
dec
xor
xor
sub
add
out
inc
add
mov
xor
sub
add
incl
sub
xor
sub
add
iret
inc
add
xorb
xor
xor
sub
add
filds
sub
xor
sub
add
loopne
dec
xor
xor
inc
and
add
add
or
xor
jno
add
dec
inc
add
jbe
dec
xor
add
lahf
inc
add
shlb
dec
xor
xor
adc
add
inc
add
jge
dec
xor
xor
dec
add
jg
add
xor
dec
xor
xor
jl
add
dec
inc
add
add
dec
xor
xor
and
add
inc
add
adc
dec
xor
xor
sub
add
das
inc
add
pusha
xor
cs
sub
add
aas
inc
add
jo
dec
xor
xor
sub
add
cmovbe
sub
dec
xor
xor
sub
add
pop
inc
add
push
xor
xor
add
out
inc
add
mov
xor
add
incl
sub
xor
add
iret
inc
add
xorb
xor
and
add
nop
xor
mov
daa
add
scas
inc
add
loopne
dec
xor
daa
add
mov
xor
sahf
xor
add
popl
sub
xor
mov
add
lahf
inc
add
shlb
dec
xor
xor
pop
daa
add
outsl
inc
add
and
dec
xor
xor
dec
daa
add
jg
add
xor
dec
xor
xor
jl
add
dec
inc
add
add
dec
xor
aaa
xor
and
add
lods
xor
xor
xor
add
das
inc
add
pusha
xor
cs
add
aas
inc
add
jo
dec
xor
xor
add
cmova
sub
dec
xor
xor
add
pop
inc
add
push
xor
xor
fsubl
add
inc
add
mov
xor
int3
and
add
inc
add
mov
dec
xor
xor
cld
and
add
inc
add
xorb
xor
xor
in
and
add
inc
add
nop
xor
mov
and
add
xor
scas
xor
mov
add
xor
sahf
xor
mov
inc
add
shlb
xor
and
add
xor
jle
xor
pop
and
add
add
and
dec
xor
xor
dec
and
add
add
xor
dec
xor
xor
jl
add
dec
inc
add
add
dec
xor
xor
insb
and
add
add
adc
dec
xor
xor
sbb
add
das
inc
add
pusha
xor
cs
or
add
aas
inc
add
jo
dec
xor
xor
cmp
add
cmove
sub
dec
xor
xor
sub
add
pop
inc
add
push
xor
aaa
xor
fsubl
add
mov
aaa
xor
int3
and
add
mov
dec
xor
aaa
xor
cld
and
add
xorb
xor
aaa
xor
in
and
add
nop
xor
mov
and
add
loopne
dec
xor
and
add
lock
sahf
aaa
xor
mov
inc
add
shlb
xor
and
add
shlb
dec
xor
xor
pop
and
add
and
dec
xor
xor
dec
and
add
xor
dec
xor
xor
jl
add
dec
inc
add
add
dec
xor
xor
insb
and
add
adc
dec
xor
aaa
xor
sbb
add
das
inc
add
pusha
xor
cs
xor
or
add
aas
inc
add
jo
dec
xor
aaa
xor
cmp
add
cmovne
sub
dec
xor
aaa
xor
sub
add
pop
inc
add
push
xor
xor
sub
and
add
inc
add
mov
xor
sub
and
add
inc
add
mov
dec
xor
xor
sub
and
add
inc
add
xorb
and
xor
cmp
add
add
sub
dec
xor
xor
sub
and
add
add
push
ss
xor
xor
sub
and
add
inc
add
cmpsl
aaa
dec
xor
xor
sub
and
add
inc
add
mov
dec
xor
xor
sub
and
add
inc
add
xchg
dec
xor
xor
sub
and
add
inc
add
xchg
aaa
dec
xor
xor
sub
inc
add
out
dec
xor
and
add
aaa
dec
xor
inc
pop
test
arpl
in
pop
xor
imull
add
add
ret
adc
testb
sub
and
and
xor
xor
mov
sub
icebp
cmp
xor
popa
je
insl
push
movsl
in
pop
fisttpl
in
pop
sub
mov
inc
sbb
push
aaa
repz
xor
sbb
icebp
mov
rclb
dec
mov
sub
stos
fisubs
jne
lcall
lock
xor
and
adc
sbb
add
push
aaa
leave
icebp
add
loopne
lods
and
scas
add
test
add
cmpl
jl
shll
xor
popa
add
inc
mov
and
sub
jne
ret
push
hlt
leave
dec
push
adc
sbb
ret
inc
inc
dec
mov
sub
jmp
inc
jmp
lret
push
jb
mov
adc
jmp
fs
lcall
xor
inc
ss
fisubrl
mov
das
leave
lret
mov
mov
jmp
pop
xor
inc
call
repnz
jmp
pop
add
gs
subl
mov
movsl
pop
add
inc
subl
mov
and
subl
mov
or
xlat
fldenv
lcall
je
jae
sub
fiadds
xchg
add
and
mov
xor
fiadds
or
dec
repnz
jmp
pop
xor
ljmp
leave
movlps
daa
call
jmp
mov
mov
sbb
cli
xchg
mov
adc
lock
insl
add
cmp
and
add
xor
lods
and
scas
dec
lea
fdivl
mov
aaa
iret
clc
in
jge
cmp
mov
xorl
in
ljmp
xor
jo
and
dec
add
inc
ret
test
xorl
in
inc
and
adcl
aas
aaa
call
loop
mov
mov
mov
and
mov
pop
xor
xor
stos
arpl
add
lcall
je
cmp
stos
arpl
add
cmp
xor
je
xor
stos
pop
daa
and
ret
push
hlt
leave
je
cmp
test
and
jne
test
mov
into
xor
sub
mov
push
ret
mov
ret
mov
sub
push
push
call
xchg
mov
xor
inc
rcrb
fisubrl
mov
and
cwtl
add
inc
ret
test
add
loop
inc
cmp
rorl
and
pop
fcmovnu
decl
jno
movlps
lock
decl
jno
movlps
mov
adc
adc
sub
leave
dec
add
inc
sub
fcmovb
inc
or
mov
stos
pop
aaa
add
test
mov
xor
sub
mov
add
repnz
push
and
inc
cmp
pop
adc
repnz
push
daa
call
jmp
add
mov
inc
lcall
fdivrp
int3
iret
jmp
pop
std
jmp
ret
push
hlt
leave
dec
add
dec
and
dec
std
jmp
ret
push
hlt
mov
stos
arpl
add
icebp
cld
aad
fisttps
dec
mov
xor
jne
xchg
add
sub
adc
je
xor
stos
pop
aaa
add
test
mov
add
addb
call
leave
lret
mov
aas
cmp
add
test
push
fistpl
faddp
mov
outsl
jno
movlps
lock
call
rorl
xor
mov
and
mov
daa
add
rcrb
fcmove
inc
xor
imul
out
data16
lods
enter
xor
into
cmp
jmp
orb
xorl
in
dec
cld
out
adcl
xor
call
loop
lock
jmp
and
call
ret
mov
orl
pop
daa
call
jmp
inc
adc
call
mov
mov
ds
sbb
xlat
fwait
dec
xor
mov
and
mov
lock
mov
ret
mov
ds
push
sbb
xlat
mov
dec
es
mov
ror
mov
ret
mov
ds
adc
xlat
pop
dec
xor
fistpl
faddp
andl
pop
mov
cmp
inc
push
jl
fcmovb
jge
push
inc
inc
mov
cmp
pop
outsb
leave
dec
out
ret
test
push
fisttpl
ret
andl
pop
mov
cmp
inc
sbb
or
fcmovb
jge
push
inc
push
mov
cmp
pop
mov
or
das
cmp
or
cmp
ret
call
xchg
mov
adc
icebp
scas
cli
aad
fistpll
dec
mov
xor
std
aad
hlt
shll
or
test
mov
stos
pop
aaa
add
test
mov
and
mov
test
push
fistpl
fs
add
push
fucomip
int3
dec
rep
pop
aaa
add
xlat
lods
enter
and
mov
out
ret
mov
and
call
test
push
fistpl
faddp
andl
push
fildll
int3
dec
rep
pop
aaa
add
test
leave
dec
or
inc
jp
push
adcl
aas
aaa
call
loop
jge
inc
jne
mov
mov
and
mov
aaa
daa
add
fdivr
fcmovb
jge
push
inc
pop
flds
leave
iret
xlat
movsl
pop
or
insl
dec
call
bnd
loop
inc
add
or
jb
xor
fistpl
rcr
fiadds
sub
mov
push
mov
xor
jne
icebp
xchg
cld
aad
hlt
leave
dec
push
xor
into
jecxz
jmp
ret
push
inc
sbb
mov
mov
push
ret
mov
ret
mov
and
xchg
inc
xor
mov
fdivrp
ret
lcall
mov
movsl
pop
push
push
insb
push
call
mov
cmp
pop
sub
js
out
ret
ret
mov
ret
mov
and
mov
mov
ds
push
call
xchg
mov
daa
add
shrb
fcmovb
jge
push
inc
pop
fnstenv
lret
movsl
pop
or
push
lds
push
aaa
mov
jmp
pop
push
add
push
push
daa
aas
and
and
jge
sbb
mov
ret
fstpt
ret
andl
push
fisttps
dec
rep
pop
aaa
add
shrl
and
loope
out
adcl
ds
out
lret
xlat
cmpl
jne
rorl
and
fsubr
incl
pop
fisttps
rcrb
xor
imul
out
jge
push
inc
pop
fsts
pop
or
push
les
mov
movsl
pop
push
add
push
stos
enter
cmp
daa
mov
test
mov
xor
popa
clc
out
adcl
inc
mov
xor
sub
js
jmp
addb
call
mov
push
ret
mov
ret
mov
and
das
mov
aaa
daa
add
fcos
lcall
pop
mov
jmp
pop
push
push
insb
push
call
mov
cmp
pop
aas
leave
or
out
ret
test
pop
fcmovnb
fsubrp
push
icebp
mov
aad
hlt
shll
or
test
leave
dec
push
xor
into
repz
out
jge
push
inc
sbb
into
leave
iret
xlat
in
jge
sbb
ret
mov
orl
push
sbb
mov
mov
pop
xor
fmuls
dec
add
fucomip
lret
dec
rep
pop
aaa
add
test
leave
dec
or
inc
and
test
jmp
sub
test
mov
mov
sub
addl
ret
aad
adc
je
and
sub
filds
cltd
cmp
and
cli
int3
iret
jmp
and
scas
dec
lea
fdivl
mov
aaa
iret
clc
loope
add
sbb
jmp
inc
adc
push
icebp
je
aad
hlt
sarl
mov
cmp
and
xor
xor
mov
sub
icebp
mov
nop
loope
pop
xor
insl
add
jge
push
xor
ret
mov
ret
mov
add
inc
inc
or
mov
cmp
xor
rdtsc
add
or
shl
dec
into
shl
jne
es
inc
cmp
push
xchg
inc
xchg
add
and
je
or
push
sbb
es
or
push
or
insl
addr16
es
or
push
cmp
insl
push
cmp
es
or
push
sub
insl
inc
cmp
es
xor
lods
and
scas
dec
lea
fdivl
mov
aaa
iret
clc
loopne
add
fidivrl
push
pop
and
dec
stc
out
ret
mov
or
add
sbb
ljmp
adc
arpl
cmpb
jne
mov
lock
or
dec
xor
mov
sub
icebp
ret
lcall
outsl
jo
aaa
adc
inc
ss
fcmove
inc
or
inc
mov
and
add
hlt
lea
xor
es
inc
and
testl
add
sub
lcall
xor
jmp
xchg
cmc
jmp
lret
push
jb
mov
adc
jmp
sbb
sbb
mov
inc
xor
jg
test
leave
dec
push
xor
movsl
pop
push
pop
addr16
test
cmp
pop
push
mov
sub
fcomi
leave
rorb
mov
and
sbb
mov
ret
mov
es
push
cmp
xor
ret
mov
ret
mov
sub
call
jmp
push
fisttpl
ret
and
jne
mov
lock
sub
aas
mov
push
dec
mov
and
lock
xor
sub
add
pop
in
aaa
dec
xor
fcoms
fs
pop
push
pusha
fistpll
adc
gs
xchg
fisttpll
shll
jne
ret
es
jmp
fisttpl
jne
test
mov
mov
iret
xlat
lods
sbb
pop
bound
testb
sub
and
push
or
xor
xor
into
cli
hlt
jmp
ret
push
inc
inc
mov
and
jge
push
ds
adc
lret
int3
repz
gs
call
shll
jne
ret
das
pop
leave
enter
stos
fbld
je
icebp
adc
aad
hlt
leave
lret
cmovbe
stos
fildll
jl
icebp
add
aad
hlt
mov
mov
cmp
inc
or
lea
xor
es
inc
and
testl
add
jp
lcall
adc
iret
jmp
loope
add
cmp
mov
leave
sub
call
bnd
stos
inc
sbb
add
test
jbe
sub
and
mov
pushf
adc
ja
add
xor
leave
or
out
adcl
cmp
and
xor
hlt
not
lods
hlt
ja
add
xor
ret
inc
mov
rcl
inc
mov
aas
inc
and
test
mov
into
test
jmp
sub
mov
sub
insl
add
add
dec
aaa
dec
xor
mov
inc
add
add
push
dec
pop
fldenv
pop
push
pop
addr16
enter
repz
es
sbb
fcomi
leave
rorb
mov
and
adc
mov
ret
fistl
inc
add
or
jb
xor
hlt
jne
and
add
ja
or
xor
sub
call
test
push
fcmovne
fstp
faddp
cmp
jb,pn
repz
mov
lcall
dec
rep
fsubrl
aad
hlt
leave
lret
push
inc
and
lcall
dec
rep
fsubrl
jne
lcall
dec
repz
sbb
pop
adc
je
xor
in
in
push
loope
inc
add
push
aaa
dec
xor
xor
daa
and
adc
inc
mov
push
aaa
dec
xor
xor
sub
and
hlt
sbb
cmp
roll
xor
sub
and
add
inc
mov
and
xor
and
add
inc
add
push
aaa
enterw
cmp
and
sbb
sub
dec
xor
xor
daa
and
adc
inc
test
push
aaa
dec
xor
xor
sub
and
cmp
mov
add
xor
and
add
inc
clc
rcll
lret
xor
daa
and
add
inc
add
push
aaa
cwtl
lret
add
nop
cmp
and
sub
dec
xor
xor
shll
and
push
aaa
dec
xor
xor
sub
and
sti
sbb
cmp
add
add
xor
and
add
inc
mov
push
aaa
xchg
daa
and
add
inc
add
push
aaa
hlt
int3
add
pushf
cmp
and
jecxz
inc
add
push
aaa
dec
xor
xor
daa
and
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
lods
lds
xor
fsubl
and
cmc
sbb
fists
outsb
les
xor
sbb
fists
cmp
add
mov
daa
and
fists
mov
add
out
frstor
and
cmc
sbb
fcoml
push
movl
and
sbb
fcoml
into
movl
and
push
aaa
mov
add
sub
daa
and
negl
inc
dec
fstl
sub
add
inc
fbld
and
push
aaa
mov
add
xchg
shll
and
push
aaa
adc
add
je
daa
and
sti
sbb
sub
cmp
add
mov
cli
sbb
rclb
clc
lret
add
mov
daa
and
inc
dec
rclb
jb
add
sbb
daa
and
sbb
rclb
dec
lret
add
xor
and
sbb
rclb
fildl
xor
ljmp
mov
ret
push
jmp
inc
sbb
push
aaa
outsb
fiaddl
xor
daa
and
sbb
rcll
fiaddl
xor
daa
and
rcll
fiaddl
xor
ret
daa
and
jmp
inc
ljmp
xor
les
and
push
aaa
fildl
xor
and
sbb
push
aaa
xor
add
mov
in
sbb
push
aaa
hlt
fldl
xor
les
and
in
sbb
push
aaa
faddl
xor
sbb
push
aaa
and
add
dec
lds
and
push
aaa
in
add
lock
and
in
sbb
push
aaa
cmpsb
faddl
xor
lds
and
push
aaa
push
fildl
xor
daa
and
ljmp
push
fildl
xor
ret
out
sbb
ret
push
aaa
and
add
jl
daa
and
jmp
push
aaa
ljmp
and
sbb
ret
push
aaa
push
fadds
xor
daa
and
jmp
push
aaa
dec
fadds
xor
shlb
shr
sbb
push
aaa
mov
add
or
daa
and
sbb
ret
movsb
add
ror
daa
and
out
inc
mov
add
stos
iret
daa
and
push
aaa
sub
add
fs
daa
and
sbb
int
aaa
push
add
xor
daa
and
out
inc
fmul
push
aaa
sahf
xlat
add
hlt
into
daa
and
int3
push
aaa
add
mov
daa
and
sbb
int3
push
aaa
sbb
add
je
daa
and
sbb
int3
push
aaa
push
fldl
xor
daa
and
add
inc
push
aaa
mov
aad
and
add
inc
or
push
mov
xor
mov
sub
mov
add
push
aaa
sub
add
or
daa
and
inc
add
push
aaa
xchg
movb
neg
daa
and
stc
sbb
rcll
dec
enter
shlb
and
clc
sbb
rclb
repnz
add
cwtl
shlb
and
rclb
cmp
add
outsb
shlb
and
sbb
rclb
leavew
add
adc
daa
and
sbb
rclb
mov
fbld
and
add
inc
jle
push
aaa
dec
xor
xor
daa
and
icebp
sbb
fistl
test
add
repnz
and
fistl
enter
pop
fldenv
and
sbb
fistl
insb
rolb
fldenv
and
icebp
sbb
ficoml
pushf
roll
lock
and
ficoml
ret
xor
and
sbb
ficoml
add
add
adc
daa
and
lock
ficoml
inc
roll
xor
daa
and
out
sbb
ficoms
inc
add
add
daa
and
ficoms
xor
add
pop
fsubl
and
sbb
ficoms
jle
add
sbb
daa
and
hlt
sbb
ficoms
cmpsb
ret
in
and
repz
fsts
in
ret
lods
and
fsts
cmp
add
push
and
inc
adc
push
aaa
outsb
ret
add
and
repnz
fsts
inc
add
fisubl
and
repnz
fcoms
test
xor
daa
and
sbb
fcoms
rol
add
dec
fisubl
and
sbb
lds
test
add
mov
daa
and
push
aaa
rcr
add
mov
daa
and
sbb
lds
push
fiadds
xor
daa
and
out
sbb
lds
inc
fiadds
xor
daa
and
out
sbb
les
mov
add
push
fisubl
and
sbb
fcoms
jo
add
jb
daa
and
sbb
les
filds
xor
daa
and
push
aaa
filds
xor
fisubl
and
add
inc
cwtl
xlat
push
aaa
xor
add
push
aad
and
sbb
xlat
push
aaa
outsb
int3
add
cmp
daa
and
cld
sbb
push
aaa
test
add
mov
daa
and
push
aaa
ss
xor
daa
and
sbb
push
aaa
push
add
cmp
daa
and
add
inc
adc
push
mov
xor
mov
shlb
and
add
roll
add
or
sbb
rcll
dec
xor
mov
shll
and
sbb
outsl
sub
pop
xor
mov
sub
mov
pop
sub
cmp
add
adc
sbb
out
rclb
xchg
lret
add
sub
mov
add
push
aaa
sahf
enter
shll
and
rcll
lods
enter
sub
and
xor
push
pop
sub
inc
dec
sub
and
insl
adc
xor
push
jb
inc
pop
es
add
popa
dec
push
pop
sub
inc
dec
imul
xor
pop
cmp
xor
arpl
je
xor
aaa
inc
cmp
jo
ja
push
bound
je
outsb
dec
push
pop
and
push
xor
sub
je
imul
pop
pop
pop
cs
add
push
sub
inc
imul
sub
inc
inc
inc
je
lret
dec
es
push
outsb
inc
xor
fbld
inc
gs
or
dec
daa
pop
das
jns
pop
push
inc
inc
jbe
add
push
inc
and
push
insb
jne
dec
inc
and
dec
sub
daa
push
es
push
push
insl
pop
and
add
sub
mov
gs
inc
jne
jl
imul
xor
push
and
jl
je
pop
inc
das
pop
je
xor
inc
and
inc
inc
and
pop
je
inc
inc
inc
outsb
bound
and
aaa
xorl
dec
dec
gs
insl
xor
ds
jae
dec
jg
and
add
gs
pop
inc
das
pop
je
xor
repnz
sub
das
jns
pop
push
inc
inc
and
pop
sub
sub
pop
push
sub
jne
and
inc
push
inc
pop
dec
inc
push
jae
jge
std
sub
pop
sub
jne
dec
inc
and
pop
aaa
cmp
push
inc
pop
imul
cmp
sub
aaa
or
push
inc
dec
bound
gs
outsl
pop
sub
xor
xor
inc
dec
imul
dec
xor
xor
push
imul
pop
sub
inc
jg
and
pop
xor
es
or
insb
push
sub
jae
xor
and
xor
addr16
data16
and
push
or
inc
pop
inc
inc
jb
jae
sub
sbb
xor
xor
push
imul
pop
sub
inc
jg
and
daa
inc
cmp
fs
push
inc
popa
sbb
add
gs
jno
imul
push
xor
inc
js
dec
jbe
insl
and
pop
cmp
pusha
inc
pop
dec
dec
addr16
sbb
sub
pop
inc
dec
push
inc
push
jb
daa
imul
xor
sub
jo
ja
inc
inc
and
cmp
pop
push
inc
push
jb
jb
das
addr16
add
inc
push
dec
push
inc
push
gs
je
push
pop
cmp
xor
adc
das
push
pop
cmp
xor
push
outsl
arpl
sbb
and
inc
sub
push
jb
and
and
jg
dec
inc
jg
and
es
push
pop
outsl
pop
pop
dec
dec
push
xor
dec
das
popa
pop
and
inc
add
sub
je
js
imul
pop
popa
dec
inc
outsl
add
inc
dec
es
das
inc
jae
pop
inc
arpl
add
push
sub
pop
push
inc
and
pop
and
jle
push
and
inc
pop
pop
and
cmp
pop
jp
jae
dec
push
imul
inc
and
xor
sub
popa
jbe
add
es
sub
pusha
push
dec
push
dec
outsl
outsb
sbb
sub
pop
gs
dec
dec
arpl
inc
fldcw
pop
pop
ds
jb
inc
inc
push
dec
arpl
adc
es
and
sub
je
insb
xor
cmp
push
pop
jb
push
dec
outsl
inc
add
incb
dec
es
push
popa
pop
fs
dec
inc
add
push
inc
inc
dec
es
push
pop
jl
dec
add
push
ds
push
pop
inc
dec
inc
inc
add
fiaddl
dec
es
inc
imul
je
and
xor
push
push
xor
sub
insb
gs
sub
push
pop
push
pop
jae
push
pop
inc
jne
insl
jl
pop
sub
pop
inc
outsb
dec
dec
gs
js
gs
aaa
out
xor
push
pop
je
inc
insb
jne
arpl
fdivl
or
push
inc
dec
imul
push
add
jbe
or
outsb
push
jbe
push
push
je
jo
gs
aaa
xchg
push
push
inc
insl
dec
inc
dec
pop
sub
aaa
fnsave
inc
inc
push
dec
push
inc
push
jb
and
and
xor
push
inc
insb
jne
arpl
js
sbb
inc
push
inc
jb
insl
gs
cs
inc
ds
push
pop
insl
push
xor
and
insl
pop
imul
inc
push
pop
arpl
add
inc
or
gs
xor
pop
and
insl
add
and
push
jb
push
inc
inc
jbe
add
inc
inc
dec
cmp
push
inc
pop
outsb
inc
popa
jo
inc
enter
or
popa
push
dec
inc
jno
jb
inc
jecxz
add
ja
pop
push
jl
dec
add
inc
and
push
insb
bound
push
pop
inc
js
inc
lea
add
jne
inc
inc
and
add
sub
xor
add
inc
pop
push
and
dec
sub
pop
sub
pop
jge
dec
push
imul
xor
push
popa
push
pusha
pop
dec
inc
gs
or
inc
cmp
xor
inc
push
inc
gs
jb
sub
aad
dec
push
push
pop
gs
gs
insl
and
sub
push
pop
jb
push
dec
adc
xor
sbb
jbe
dec
inc
add
jb
inc
dec
arpl
pop
imul
jbe
insl
dec
es
and
sub
insb
je
add
aaa
arpl
imul
add
inc
inc
daa
inc
and
pop
push
push
inc
imul
sub
xor
push
inc
push
jno
je
push
add
xchg
or
inc
inc
jb
jp
add
sub
add
pop
push
inc
js
sbb
sub
inc
inc
insl
push
push
outsl
jb
inc
in
sub
push
jge,pt
inc
inc
insl
push
push
outsl
jb
inc
push
cs
cmp
push
pop
imul
pop
cs
cmp
push
pop
js
dec
je
jp
inc
push
push
aaa
pop
xor
push
inc
insb
inc
jne
outsl
dec
pop
dec
dec
xor
xor
dec
inc
inc
insb
jbe
gs
xor
push
insl
pop
inc
dec
bound
gs
outsl
pop
sub
xor
xor
dec
inc
dec
gs
xor
sbb
inc
push
push
jne
jne
jb
es
sub
xor
sub
je
jo
gs
pop
das
xor
bound
inc
popa
jae
or
pop
aaa
dec
dec
xor
xor
dec
inc
push
imul
push
insb
jne
inc
inc
jne
insl
jl
jnp
adc
pop
inc
inc
inc
outsl
popa
insl
jl
outsl
pop
add
es
insl
push
jge
push
dec
je
jbe
outsb
pop
add
push
pop
dec
push
inc
inc
imul
or
inc
inc
push
insl
dec
es
and
dec
dec
inc
insb
sbb
sub
inc
push
dec
inc
bound
insl
and
pop
push
aaa
dec
xor
dec
push
gs
jge
outsl
inc
es
xor
xor
push
imul
dec
and
add
add
jb
jae
jl
push
dec
ds
das
xor
jb
je
and
aaa
addr16
dec
dec
popa
je
adc
xor
inc
add
mov
gs
add
dec
cmp
dec
xor
xor
push
ja
outsb
push
data16
cmp
xor
gs
dec
inc
jo
jo
ja
xor
and
xor
push
gs
insl
and
inc
ds
pop
push
jo
pop
inc
inc
jbe
add
inc
push
inc
and
pop
outsl
push
xor
adc
pop
jb
aaa
aaa
pop
xor
inc
dec
pusha
dec
insb
gs
cmp
and
inc
dec
push
gs
insb
pop
pop
jle
push
outsb
push
inc
dec
inc
inc
add
push
add
fs
jnp
add
push
pop
inc
and
add
je
daa
inc
cmp
arpl
and
add
je
xor
js
push
pop
sub
ss
dec
cmp
xor
dec
push
push
imul
xor
xor
inc
push
push
outsl
push
and
jge
aaa
xchg
push
pop
gs
dec
inc
outsl
fs
movntps
pop
inc
dec
dec
inc
jb
pop
and
aaa
jl
inc
push
inc
arpl
bound
xor
push
ds
add
in
jb
popa
outsb
push
popa
pop
aaa
jp
inc
jae
push
dec
and
add
addr16
and
inc
inc
pop
push
pop
push
pusha
add
mov
dec
xor
cmp
push
pusha
pop
dec
inc
push
add
inc
dec
es
inc
jae
push
dec
jbe
jae
popl
dec
xor
and
pop
inc
js
dec
arpl
inc
sbb
pop
push
pop
pop
dec
dec
push
push
jb
and
dec
aaa
or
pop
addr16
dec
inc
outsl
ja
xor
adc
jl
push
push
push
inc
push
push
gs
sub
dec
xor
bound
inc
popa
jae
add
es
cmp
mov
dec
pop
or
cmp
popa
jb
push
imul
and
outsb
ds
sbb
push
jno
out
push
ja
xor
cmp
pop
inc
sub
or
arpl
pop
and
arpl
inc
jbe
add
and
pop
inc
js
dec
arpl
inc
dec
sub
push
es
popa
inc
push
insb
and
add
gs
pop
push
cmp
push
push
imul
and
outsb
adc
xor
pusha
dec
inc
dec
dec
gs
popa
dec
aaa
pusha
dec
xor
arpl
bound
push
jb
cmp
xor
inc
dec
jae
jl
inc
inc
xor
js
xor
daa
and
insl
add
es
cmp
sub
popa
inc
je
pop
inc
jbe
adc
push
push
pop
inc
jae
arpl
push
sub
push
sub
inc
dec
push
add
or
pop
aaa
pop
add
inc
inc
insb
inc
push
imul
sub
aaa
push
push
data16
dec
dec
inc
push
jb
and
fnsave
push
push
data16
dec
jbe
outsl
arpl
sub
push
jb,pt
inc
inc
pop
push
inc
add
inc
inc
dec
es
and
pop
inc
insb
and
dec
and
inc
and
inc
inc
pop
push
pop
push
fs
sbb
sub
inc
inc
dec
inc
inc
push
add
inc
dec
bound
push
popa
inc
push
jp
dec
add
push
inc
inc
dec
es
inc
jae
push
dec
addr16
add
jp
pop
and
add
sub
outsb
dec
sub
cmp
inc
pop
inc
dec
jbe
add
inc
dec
bound
push
jb
push
inc
inc
inc
je
ja
outsl
pop
aas
push
ds
outsl
pop
sub
gs
adc
jne,pn
inc
pop
pop
dec
push
add
push
inc
inc
inc
cmp
inc
pop
pop
dec
push
add
or
pop
aaa
pop
push
push
jae
inc
inc
push
jbe
add
inc
dec
cmp
push
inc
pop
jno
outsb
fs
push
pop
xor
pop
outsb
xor
gs
gs
insl
and
inc
cmp
and
pop
dec
dec
outsb
push
sbb
sub
pop
and
inc
inc
dec
ja
insl
and
pop
dec
xor
ja
push
jne
jb
and
inc
and
inc
xor
stos
and
insl
adc
xor
inc
push
pop
pop
dec
dec
push
push
je
xor
adc
inc
inc
push
dec
push
inc
inc
gs
je
and
xor
push
popa
je
sub
and
gs
pop
and
insl
push
imul
arpl
inc
dec
gs
popa
dec
aaa
arpl
pop
gs
inc
pop
jno
movsl
add
je
cmp
pop
ja
pop
inc
inc
jbe
add
inc
inc
inc
xor
inc
jo
inc
jg
and
add
popa
pop
push
pop
cmp
sub
imul
push
jg
and
add
outsb
dec
cmp
pop
pusha
inc
dec
dec
je
pop
inc
dec
pop
xor
jne
pop
imul
xor
push
and
inc
sub
and
and
das
data16
inc
sub
je
jbe
push
inc
cmp
and
sub
push
gs
inc
inc
and
xor
jbe
outsb
jge
ja
cmp
push
arpl
inc
inc
jae
push
and
pop
push
jo
pop
inc
inc
dec
ja
jbe
outsb
pop
and
sub
push
push
pop
dec
imul
es
aaa
xor
addr16
dec
inc
outsl
ja
inc
cmpsl
sub
push
imul
jno
jae
inc
std
sub
push
push
pop
push
dec
jb
adc
dec
es
push
jae
jl
dec
inc
push
add
pusha
and
pop
inc
popa
dec
inc
outsl
add
dec
sub
pop
inc
sub
and
push
dec
dec
and
gs
scas
and
insl
push
imul
inc
sub
das
je
cmp
pop
ja
fsubrl
arpl
popa
jne
gs
es
push
pop
jb
jb
js
dec
dec
and
gs
and
insl
and
pop
aaa
push
arpl
inc
sub
ss
dec
xor
xor
dec
dec
push
gs
add
cmp
or
dec
dec
dec
push
imul
sahf
xor
push
gs
dec
jne
popl
inc
ds
ds
dec
push
pop
pop
outsl
push
gs
sbb
sub
pop
inc
popa
push
inc
insl
inc
jbe
outsb
pop
push
aaa
or
gs
dec
jne
insl
and
aaa
inc
xor
inc
imul
jae
and
add
dec
inc
pop
inc
dec
push
popa
imul
dec
es
cmp
pop
push
inc
jno
rolb
dec
xor
cmp
inc
jne
jge
dec
push
inc
js
inc
inc
sub
pop
inc
popa
push
inc
insl
push
jl
je
outsb
ss
inc
push
and
add
pop
sbb
pop
inc
inc
pop
inc
jbe
imul
push
bound
jge
dec
push
add
gs
push
dec
es
dec
bound
inc
jb
popa
insl
and
sub
ss
inc
push
push
inc
sub
xor
inc
pop
inc
push
push
imul
cmp
push
push
jg
and
add
popa
pop
push
pop
cmp
dec
inc
pusha
add
xor
inc
push
pop
ja
inc
jg
and
pop
and
jns
inc
ds
insl
jle
pop
push
dec
arpl
inc
repnz
push
cmp
inc
inc
pop
inc
dec
dec
gs
push
add
pop
packsswb
add
dec
dec
dec
add
cwtl
inc
dec
pop
add
pop
pop
pop
dec
jb
sbb
sub
pop
push
pop
dec
jb
sbb
sub
inc
aas
push
insb
pusha
pop
dec
and
dec
and
and
jp
dec
jne
jno
dec
add
outsl
cmp
daa
jp
dec
jne
jno
sub
dec
and
imul
push
dec
sub
inc
outsl
ja
gs
es
pop
arpl
outsb
addr16
sub
aaa
mov
inc
inc
dec
pop
push
data16
and
add
push
insl
xor
sub
outsb
dec
xor
aaa
inc
cmp
pop
push
inc
and
pop
and
jns
push
sbb
inc
pop
dec
dec
jb
insl
cmp
sub
aaa
or
inc
inc
imul
inc
inc
cmp
das
dec
je
xor
shlb
dec
jo
das
push
inc
and
push
push
pop
pop
dec
dec
and
pop
and
jns
push
sbb
inc
pop
dec
dec
jb
insl
cmp
daa
pop
xor
dec
push
jne
imul
xor
cmp
pop
inc
dec
and
add
imul
js
push
arpl
add
inc
inc
pop
sub
arpl
push
dec
push
inc
inc
outsl
ja
gs
es
and
push
push
push
jns
inc
jb
dec
and
jb
data16
dec
sub
gs
insl
and
pop
cmp
jb
jge
inc
jb
sbb
sub
pop
and
push
pop
inc
pop
inc
push
gs
jb
es
push
push
jae
inc
inc
push
push
outsl
jb
inc
mov
add
bound
inc
pop
dec
push
jns
jl
arpl
inc
ds
jb
push
dec
dec
and
xor
push
push
push
push
pop
push
dec
je
push
das
inc
add
pop
pop
inc
push
push
push
jb
aaa
imul
pop
inc
dec
jno
scas
add
jns
es
push
popa
inc
push
pusha
inc
push
push
inc
cmp
das
inc
je
inc
pop
dec
dec
addr16
jl
jne
cmp
jne
inc
push
pop
dec
push
je
imul
inc
imul
jb
xor
pusha
dec
xor
ja
push
jb
arpl
pop
sub
inc
arpl
pop
push
dec
jb
js
insb
sub
xor
push
dec
push
push
imul
and
pop
inc
jnp
inc
insb
add
inc
jne,pt
inc
inc
pop
dec
pop
dec
popa
push
add
dec
aaa
or
inc
inc
pop
jb
imul
jb
and
es
addr16
inc
sub
push
gs
gs
add
es
gs
jg
and
add
jns
es
inc
push
and
push
das
imul
dec
inc
pop
inc
dec
push
push
and
xor
jo
push
dec
sub
dec
ds
dec
xor
dec
push
gs
insl
dec
pop
dec
ds
outsb
inc
pop
inc
dec
jbe
add
sbb
inc
dec
fs
arpl
sub
dec
xor
dec
push
gs
jbe
adc
es
push
inc
push
dec
jno
pop
add
jb
aas
inc
add
push
xor
jbe
je
dec
xor
pop
aaa
cmp
push
inc
jg
and
dec
xor
add
xor
jne
jb
insl
xor
push
aaa
sub
jge
inc
jae
js
imul
xor
pop
pop
push
push
imul
aaa
sbb
pop
jns
bound
gs
outsl
pop
sub
xor
pusha
dec
push
dec
inc
imul
add
insl
push
sub
popa
insl
sub
ss
push
imul
push
dec
push
add
push
es
je
dec
dec
push
gs
sbb
sub
push
ds
push
pop
pop
pop
je
outsl
je
inc
mov
add
push
insb
push
inc
dec
insl
inc
jns
sbb
sub
push
ds
inc
pop
pop
dec
dec
dec
gs
sbb
sub
push
ds
inc
push
push
insl
pop
push
outsb
push
outsl
inc
add
push
inc
inc
jae
jno
jbe
gs
push
sub
xor
pop
and
insl
sub
es
and
push
push
jg
and
dec
xor
add
inc
xor
push
outsb
jae
xor
es
or
jae
pusha
dec
push
dec
dec
jae
adc
aaa
sbb
fs
outsl
pcmpgtb
shrb
jg
push
je
pop
inc
inc
inc
jb
js
push
xor
pop
inc
inc
dec
fs
jo
gs
jbe
push
jbe
xor
and
jl
insb
outsl
sub
inc
je
sub
inc
dec
push
jb
add
pop
xor
xor
push
je
imul
inc
aaa
jb
data16
arpl
push
jb
sub
inc
ds
pop
xor
jae
inc
inc
je
push
das
jae
xor
push
add
pop
sub
push
outsb
jo
imul
push
xor
and
dec
or
pop
daa
bound
inc
inc
and
add
jb
cmp
or
outsl
pop
ja
outsl
xor
daa
inc
inc
inc
sbb
inc
imul
js
inc
outsl
inc
aaa
add
pop
fs
pop
sub
and
jl
je
adc
inc
popa
inc
pop
dec
dec
inc
inc
imul
lcall
inc
dec
bound
arpl
aaa
xor
inc
insb
outsl
arpl
push
mov
adc
inc
pop
dec
inc
bound
push
xor
adc
push
je
je
fs
arpl
outsl
inc
push
aaa
sbb
push
push
inc
pop
dec
push
gs
pop
inc
push
sub
push
cmp
inc
jo
sub
and
jl
je
adc
inc
popa
inc
pop
dec
dec
inc
inc
inc
sbb
sub
push
arpl
inc
jp
dec
add
inc
inc
push
dec
ds
sub
push
pop
dec
inc
push
add
jns
inc
dec
cmp
inc
jae
xor
jmp
inc
gs
je
push
je
xor
ja
outsb
xor
es
push
inc
dec
xor
popa
gs
xor
outsl
fs
ds
pusha
xor
jno
push
inc
outsb
je
and
dec
xor
xor
inc
popa
fs
imul
push
dec
push
inc
fs
dec
cmp
pusha
jno
inc
dec
add
inc
push
jns
jbe
push
jb
inc
pop
jb
push
je
sub
add
pusha
jno
dec
inc
je
sbb
jns
push
pop
inc
and
add
pop
arpl
inc
and
pop
push
jb
outsl
imul
jae
or
je
dec
inc
je
pop
and
pop
cmp
push
popa
inc
push
outsb
push
dec
insl
push
insl
jb,pn
push
aaa
adc
inc
push
inc
pop
imul
pop
aaa
pop
sbb
inc
push
jg
and
add
jb
adc
inc
gs
inc
inc
push
inc
add
xor
inc
maxps
jae
push
push
imul
inc
add
inc
pop
pop
inc
and
pop
push
inc
cmp
push
push
pop
inc
bound
insl
sub
xor
push
inc
pop
pop
pop
inc
pop
je
or
insb
or
inc
outsl
inc
inc
imul
push
insl
jb,pn
pop
dec
dec
xor
imul
sub
add
inc
arpl
inc
push
gs
jb
jo
xor
outsb
push
je
dec
xor
pop
sub
push
outsl
jb
sub
dec
je
xor
cmp
sbb
push
pop
push
fs
sbb
sub
pop
ds
jb
push
pop
ja
gs
add
cmp
imul
add
push
cmp
inc
bound
inc
inc
imul
aam
dec
pop
inc
dec
push
dec
gs
and
dec
adc
es
add
insl
sub
je
dec
and
dec
add
inc
gs
inc
jg
and
push
xor
and
push
push
inc
pop
inc
push
je
sbb
sub
pop
ds
jb
push
pop
gs
outsl
jae
or
ss
das
xor
jns
push
inc
jb
jl
inc
inc
cmp
das
push
je
xor
push
and
insl
and
inc
aaa
inc
or
push
pop
jge
dec
inc
add
dec
pop
es
add
dec
push
push
gs
add
sub
aaa
add
inc
jno
inc
jae
jno
and
pop
sbb
push
gs
inc
imul
das
je
and
inc
dec
inc
push
inc
and
das
je
and
inc
push
push
inc
addr16
push
imul
aaa
add
push
inc
inc
inc
push
push
jne
xor
and
pop
outsb
jb
sub
inc
gs
adc
inc
adc
pop
gs
pop
push
pop
dec
outsb
jg
push
sub
aaa
add
push
inc
inc
inc
push
push
gs
adc
inc
cmp
pop
pop
dec
inc
inc
imul
push
sub
inc
ds
inc
push
push
jp
push
jne
push
dec
dec
xor
inc
jae
xor
jno
dec
dec
push
add
add
pop
xor
jne
jae
xor
aaa
and
dec
xor
inc
jge
inc
jb
jl
dec
inc
xor
dec
xor
jle
push
pusha
jo
pop
xor
dec
aaa
inc
or
gs
xor
fsubs
dec
gs
adc
dec
and
inc
insl
xor
jb
push
dec
sub
dec
ds
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sbb
add
sbb
sub
sub
add
sub
and
sbb
sub
sub
add
xor
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
sub
dec
xor
xor
sub
and
inc
pop
inc
add
push
aaa
dec
xor
xor
sub
and
pop
inc
add
push
aaa
dec
xor
xor
sub
and
mov
add
push
aaa
dec
xor
xor
sub
and
sub
dec
xor
xor
sub
and
mov
add
push
aaa
dec
xor
xor
sub
and
pop
inc
add
push
aaa
dec
xor
xor
sub
and
sub
dec
xor
xor
sub
and
mov
add
push
aaa
dec
xor
xor
sub
and
mov
add
push
aaa
dec
xor
xor
sub
and
pop
inc
add
push
aaa
dec
xor
xor
sub
and
sub
dec
xor
xor
sub
and
xchg
pop
inc
add
push
aaa
dec
xor
xor
sub
and
xchg
pop
inc
add
push
aaa
dec
xor
xor
sub
and
push
pop
inc
add
push
aaa
dec
xor
xor
sub
and
sub
dec
xor
xor
sub
and
pop
inc
add
push
aaa
dec
xor
xor
sub
and
sub
dec
xor
xor
sub
and
pop
pop
inc
add
push
aaa
dec
xor
xor
sub
and
sub
dec
xor
xor
sub
and
pop
inc
add
push
aaa
dec
xor
xor
sub
and
push
aaa
dec
xor
xor
sub
and
pop
pop
inc
add
push
aaa
dec
xor
xor
sub
and
pop
pop
inc
add
push
aaa
dec
xor
xor
sub
and
sub
dec
xor
xor
sub
and
pop
pop
inc
add
push
aaa
dec
xor
xor
sub
and
pop
inc
add
push
aaa
dec
xor
xor
sub
and
push
aaa
dec
xor
xor
sub
and
pop
pop
inc
add
push
aaa
dec
xor
xor
sub
and
pop
pop
inc
add
push
aaa
dec
xor
xor
sub
and
pop
inc
add
push
aaa
dec
xor
xor
sub
and
dec
pop
inc
add
push
aaa
dec
xor
xor
sub
and
dec
pop
inc
add
push
aaa
dec
xor
xor
sub
and
pop
inc
add
push
aaa
dec
xor
xor
sub
and
sub
dec
xor
xor
sub
and
dec
pop
inc
add
push
aaa
dec
xor
xor
sub
and
dec
pop
inc
add
push
aaa
dec
xor
xor
sub
and
push
aaa
dec
xor
xor
sub
and
cmp
push
aaa
dec
xor
xor
sub
and
push
aaa
dec
xor
xor
sub
and
pop
inc
add
push
aaa
dec
xor
xor
sub
and
sub
dec
xor
xor
sub
and
ds
inc
add
push
aaa
dec
xor
xor
sub
and
pop
inc
add
push
aaa
dec
xor
xor
sub
and
aas
pop
inc
add
push
aaa
dec
xor
xor
sub
and
aas
pop
inc
add
push
aaa
dec
xor
xor
sub
and
pop
inc
add
push
aaa
dec
xor
xor
sub
and
inc
add
push
aaa
dec
xor
xor
sub
and
pop
inc
add
push
aaa
dec
xor
xor
sub
and
lcall
dec
xor
xor
sub
and
pop
inc
add
push
aaa
dec
xor
xor
sub
and
jne
inc
add
push
aaa
dec
xor
xor
sub
and
pop
inc
add
push
aaa
dec
xor
xor
sub
and
sub
dec
xor
xor
sub
and
sub
dec
xor
xor
sub
and
mov
fadds
sub
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
or
and
sbb
add
push
ret
ss
ja
sbb
add
adc
sub
add
sub
sub
add
push
push
add
pop
inc
push
insb
aaa
insl
jbe
sbb
xchg
add
pop
adcb
aaa
lods
jbe
sbb
aam
in
pop
ret
aaa
in
jbe
sbb
adc
sub
add
sub
sub
clts
or
adc
insb
cmp
jl
shufps
or
lods
jns
adc
or
adc
sbb
cmp
jns
adc
inc
or
sub
add
sub
sub
push
push
or
adc
insb
cmp
jl
push
or
lods
cmp
push
xchg
aam
in
adc
sbb
cmp
js
adc
inc
or
sub
add
sub
sub
or
insb
adc
insb
cmp
jl
or
lods
adc
jnp
adc
or
adc
sbb
cmp
jnp
adc
inc
or
sub
add
sub
sub
or
or
adc
insb
cmp
jl
or
or
lods
cmp
or
or
or
adc
sbb
cmp
jp
adc
inc
or
add
cmp
push
or
or
inc
sbb
jl
or
or
sbbb
push
xchg
or
adc
sbb
cld
push
push
or
adc
sub
push
sbb
cmp
or
cs
xor
sbb
and
add
inc
mov
out
pop
addb
add
sbb
adc
xor
ja
sbb
add
cmp
inc
ss
ja
sbb
add
pop
add
xor
and
lods
add
and
push
dec
aaa
dec
jbe
sbb
movb
lds
out
aaa
jecxz
pop
adc
imul
or
adc
js
adc
or
xchg
or
dec
or
cmp
jae
imul
or
push
mov
stos
sbb
cmp
testl
xchg
sarb
xchg
xchg
or
push
fists
ss
adc
or
punpcklbw
cmpl
jg
adc
or
add
cmp
pop
jle
adc
mov
push
sarb
clc
jle
adc
add
or
and
xor
pop
jo
inc
add
ja
push
xor
sbb
pop
and
sbb
adc
xor
jo
sbb
push
add
add
movsl
adc
sbb
push
out
add
adc
sbb
add
sbb
jae
sbb
or
push
add
jns
mov
sbb
add
hlt
sbb
adc
xor
jb
sbb
add
adc
xor
jb
push
push
jne
push
pop
push
push
adc
xchg
push
stc
add
add
adc
adc
or
push
ret
adc
les
sbb
roll
pop
into
push
hlt
aaa
in
push
adc
imul
mov
jns
adc
push
mov
sbb
jns
test
or
push
jp
adc
or
or
cmc
cmp
jp
push
jg
jge
jne
mov
cmp
jge
push
or
push
push
push
adc
jmp
cld
pop
push
or
or
scas
fnstcw
adc
outsl
or
pop
sbbb
aas
sbb
dec
push
aaa
xor
xor
jg
pop
xor
scas
sbb
add
sbb
mov
in
jo
sbb
lret
pop
negb
adc
sub
imul
jl
in
leave
aaa
mov
rsqrtps
aas
or
pop
sbb
cmp
jnp
adc
loope
mov
ficoms
rcrl
sti
cmp
jge
push
pop
or
or
in
stc
cmp
jl
pop
sub
orl
fcoml
and
jo
inc
cmp
push
aaa
incl
std
add
jnp
sbb
add
pop
sbb
push
push
cmp
push
mov
adc
adc
xchg
sbb
adc
or
test
and
add
inc
lcall
add
sbb
adc
stos
pop
add
push
insl
or
cmp
jg
mov
add
xor
sub
xor
loope
jle
aad
movb
add
or
jb
sbb
add
add
adc
xor
jg
cmp
data16
adc
pop
pop
ja
gs
push
mov
out
pop
mov
xorb
xchg
xchg
push
loop
fstpl
rcll
std
aaa
adc
adc
push
or
sbb
addr16
adc
psubsb
test
test
lcall
adc
or
cmp
xchg
adc
push
aam
mov
adc
jnp
adc
or
mov
cmc
sbb
cmp
inc
adc
or
or
xchg
adc
jp
push
fisttpll
call
adc
arpl
adc
or
pop
jns
add
push
aaa
xchg
add
add
sbb
adc
xor
jne
pop
cltd
add
pop
aad
gs
mov
daa
cmp
js
adc
or
stos
adc
sbb
scas
pop
ljmp
adc
into
jl
pop
mov
lods
or
push
rclb
jl
adc
or
or
and
jg,pt
adc
or
or
dec
ds
jg
adc
or
arpl
jb
outsb
jg
adc
or
jnp
pop
lcall
or
btr
ret
jg
adc
or
ret
pop
ljmp
or
sub
adc
push
jle
adc
sub
pop
adc
cmp
es
adc
push
or
pop
jnp
arpl
jno
insl
adc
jl
mov
mov
jle
adc
movsb
or
pop
mov
mov
mov
or
pop
lcall
call
adc
add
inc
sub
and
xor
jno
sbb
push
add
add
xor
imul
pop
dec
add
add
inc
adc
xchg
xchg
add
add
sbb
adc
xor
jae
sbb
add
add
xor
jne
push
push
add
jecxz
fstps
js
jno
and
or
pop
repz
loopne
jle
adc
add
pop
sub
and
dec
jae
sbb
add
adc
aaa
dec
jbe
sbb
mov
adc
cmpb
jns
adc
or
cmp
jnp
adc
or
clc
adc
sbb
cmp
jp
adc
jns
inc
or
jns
cmp
insb
push
movsb
or
mov
inc
push
sub
iret
pop
xor
inc
adc
jl
adc
or
xor
push
jne,pt
adcb
pop
or
mov
movsb
jg
adc
dec
or
pop
dec
push
jl
fwait
jle
adc
mov
mov
aam
add
sbb
sub
pop
add
jp
imul
xor
jo
sbb
adc
pop
add
mov
stos
xor
add
add
xor
add
add
pop
sbb
jne
push
xchg
add
sbb
xchg
je
pop
pushf
add
sub
adc
sbb
add
pop
mov
push
pop
aaa
jbe,pt
sbb
bound
pop
mov
jns
adc
paddw
rorb
ret
sbb
xchg
js
adc
or
inc
adc
sbb
cmp
jnp
adc
or
or
push
add
inc
dec
adc
push
lds
lock
adc
sbb
jns
lods
adc
imul
cs
cs
outsl
or
or
push
adcl
add
into
jg
push
dec
aas
jo
test
push
add
xor
daa
and
add
inc
or
dec
pop
jbe
push
add
mov
jno
sbb
add
inc
adc
xchg
jo
sbb
push
pushf
add
add
sbb
adc
xor
cmc
sbb
add
xor
jne
push
mov
fs
push
ss
xor
inc
ss
ja
sbb
add
pop
aaa
push
push
aaa
cmp
sub
cmp
push
dec
aaa
dec
jbe
sbb
outsl
add
pop
pop
push
xchg
aaa
mov
sbb
mov
push
iret
aaa
int3
jbe
adc
ucomiss
ja
dec
adc
jns
adc
or
sbb
inc
js
adc
push
cmp
sub
jb
popa
sbb
jg
lahf
adc
or
sbb
outsb
sbb
std
jp
push
aaa
or
or
lds
outsl
pop
sub
push
xlat
adc
xor
adcb
cwtl
pavgw
sub
cmp
xor
add
pop
sbb
adc
jae
jg
movsl
pop
dec
add
add
sbb
adc
pop
jae
sbb
push
add
xchg
sbb
adc
xor
jb
sbb
sub
iret
adc
inc
pop
testb
pop
sub
getsec
xor
mov
or
or
adc
sbb
cmp
jp
adc
and
jae
movsl
adc
sbb
ds
jle
adc
add
xor
daa
and
inc
adc
push
sbb
push
inc
sbb
jno
sbb
jb
dec
add
push
adc
sbb
jg
cmp
inc
sbb
adc
xor
jae
sbb
jne
push
add
xor
jb
push
push
add
add
mov
and
incb
hlt
add
push
jecxz
xor
mov
mov
push
mov
add
adc
add
lods
sub
and
mov
push
jle
inc
add
stc
adc
xor
add
xor
jl
jb
je
mov
jbe
jns
dec
add
out
add
add
adc
sbb
cmp
addr16
or
or
push
sbb
cmp
and
push
xchg
adc
les
stos
or
or
inc
ds
jg
adc
or
push
sbbl
ds
jg
adc
or
or
pop
mov
iret
aas
sbb
push
aaa
jp
add
aas
sbb
adc
xor
jno
sbb
pop
test
add
adc
sbb
push
add
fbstp
pushl
sbb
add
sbb
jno
mov
sbb
add
das
sbb
adc
sbb
add
adc
xor
inc
add
add
mov
xorb
in
add
pop
pushw
addr16
arpl
sbb
add
pop
sbb
cmp
jns
adc
or
sbb
cmp
jns
adc
outsb
or
or
sbb
gs
adc
push
out
or
sbb
cmp
js
adc
insb
or
sbb
adc
or
adc
sbb
cmp
jp
adc
or
or
or
adc
sbb
xor
push
or
dec
sbb
fcoms
inc
or
pop
push
pop
adc
fistpll
push
or
push
or
jecxz
jmp
or
pop
mov
xlat
aas
hlt
jle
jp
aaa
dec
xor
xor
sbb
jno
sbb
pop
add
add
sbb
xor
push
test
testb
sbb
adc
add
pop
sbb
add
add
adc
xor
jne
push
incb
dec
add
push
cmpsb
sbb
call
add
adc
pop
ss
add
pop
mov
pop
repz
jbe
sbb
addl
lcall
sbb
and
sbb
jg
mov
les
out
into
or
adc
sbb
cmp
adc
push
and
jle
xchg
adc
js
adc
js
inc
or
pop
sbb
adc
or
cmp
jp
adc
jne
dec
or
mov
movsb
cmp
jp
adc
or
mov
jge
push
mov
test
adc
jge
add
aaa
xor
xor
sbb
repnz
jae
sbb
jg
push
adc
push
faddl
enter
les
cmp
adc
push
xlat
or
sbb
cmp
jnp
adc
adc
jecxz
sarl
lds
adc
or
or
or
cmp
cmp
and
adc
or
adc
or
xor
inc
ds
jg
adc
or
punpckldq
cld
and
adc
or
pop
fcompl
add
inc
test
push
aaa
or
roll
sub
push
adc
sbb
add
sbb
adc
xor
xor
xor
push
test
repnz
xor
dec
add
pop
jae
or
jge
jg
clc
jbe
adc
pandn
mov
sbb
cmp
js
adc
push
rorl
or
adc
sbb
and
adc
pop
or
or
push
sbb
adc
ucomiss
sbb
mov
ret
or
ret
cmp
add
adc
jne
dec
adc
xchg
jl
adc
aaa
dec
mov
xor
data16
sbb
add
mov
mov
jae
sbb
in
mov
sbb
adc
aaa
push
lsl
add
pop
adc
xor
adc
add
jae
mov
aaa
mov
mov
xchg
add
add
jns
adc
jae
adc
mov
push
jnp
adc
movsb
adc
sbb
cmp
adc
or
or
sbb
cmp
je
aad
cmp
pop
jb
pop
aas
out
jle
mov
add
daa
sbb
adc
lds
sbb
push
push
add
inc
adc
popf
push
icebp
add
cmp
shll
add
pop
push
add
mov
shlb
sbb
mov
lock
sbb
adc
test
adc
jnp
adc
or
push
adc
pop
cmp
jge
pop
cmp
call
push
stos
pop
gs
addr16
adc
mov
and
sbb
sbb
push
add
add
sbb
adc
sub
push
aaa
scas
add
add
ss
add
mov
mov
das
jle
adc
add
xor
daa
and
add
inc
sbb
sbb
sbb
popl
out
cli
adc
xor
jno
sbb
add
sbb
adc
xor
inc
add
push
aaa
xor
add
xor
adc
inc
xor
sbb
pop
into
add
les
int
in
cmpsb
pop
dec
add
adc
adc
inc
xor
sbb
push
into
add
les
int
in
cmpsb
push
dec
add
adc
adc
inc
xor
sbb
add
xchg
sbb
jae
sbb
add
adc
inc
xor
sbb
add
add
add
sbb
sub
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
sub
and
add
inc
add
push
aaa
dec
xor
xor
outsb
leave
cmpb
les
inc
xlat
jmp
std
dec
fistpll
xchg
mov
sahf
and
mov
adc
pop
sbb
arpl
cmpl
jmp
jns
adc
and
imulb
push
repnz
xor
sahf
fstl
cltd
push
test
cmpsb
inc
mov
mov
mov
fdivl
test
enter
jp
cmp
sahf
inc
mov
cmp
jmp
xchg
scas
mov
jl
and
pop
cmp
push
sub
mov
fiaddl
mov
and
out
push
shlb
sub
jnp
int3
adc
lea
popa
cmp
cltd
fmuls
stc
dec
jmp
and
test
sub
mov
call
lahf
imul
push
shll
sbb
push
jnp
and
inc
dec
adc
dec
pop
sub
push
call
inc
or
out
xchg
stc
jmp
dec
mov
sub
nop
mov
dec
decl
andl
dec
fildll
addr16
dec
add
popf
mov
dec
add
pop
aas
icebp
adcl
inc
adc
push
sub
aad
outsl
int3
xchg
mov
inc
cltd
pop
fidivl
pop
cmp
dec
mov
lea
adc
mov
xor
movsl
mov
jno
xor
mov
pusha
inc
das
mov
test
scas
cmp
cmp
imul
in
subb
or
dec
sub
mov
icebp
das
pop
sbb
insb
cmpsl
mov
dec
flds
and
sub
imul
inc
ljmp
and
mov
call
dec
pop
or
sti
aad
mov
jns
jmp
fcompl
icebp
mov
cmp
cli
ja
pusha
add
cmp
dec
add
inc
xor
add
xor
dec
cmp
xor
aaa
inc
add
inc
add
cmp
cmp
add
add
dec
xor
inc
add
add
xor
add
add
inc
add
inc
xor
inc
add
dec
xor
inc
inc
inc
aas
add
inc
xor
inc
aaa
inc
xor
add
add
cmp
dec
xor
cmp
cmp
cmp
inc
inc
add
cmp
add
inc
inc
add
dec
add
add
aas
cmp
add
xor
xor
add
add
xor
cmp
cmp
add
add
add
add
add
aas
add
add
xor
add
xor
xor
inc
inc
add
add
add
inc
cmp
add
add
add
add
add
cmp
cmp
add
inc
add
add
cmp
cmp
add
add
add
dec
add
aas
xor
inc
dec
cmp
dec
inc
add
add
ds
cmp
add
add
add
inc
add
add
add
inc
add
cmp
dec
add
add
xor
xor
cmp
xor
add
xor
dec
add
xor
add
inc
xor
add
add
add
add
xor
add
xor
add
add
inc
ds
add
add
cmp
dec
add
dec
dec
dec
add
inc
xor
add
add
xor
cmp
dec
inc
xor
add
xor
cmp
add
.byte
