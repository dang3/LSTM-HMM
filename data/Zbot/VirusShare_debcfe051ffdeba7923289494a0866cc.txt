adc
add
dec
adc
int
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
push
pushl
pop
call
lea
pop
mov
ret
and
xor
sbb
sub
mov
mov
pusha
call
add
push
mov
sub
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
cli
xor
mov
mov
test
dec
pop
sbb
or
stc
ret
mov
push
mov
sub
push
push
push
call
add
pop
lea
pop
mov
ret
add
add
cwtl
clc
jecxz
mov
sub
push
pushl
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
add
out
add
das
mov
repnz
xchg
push
xchg
int
bswap
mov
lahf
shlb
mov
xlat
and
pop
mov
stos
out
push
in
add
or
test
sub
in
sub
ss
push
call
add
pop
lea
pop
mov
ret
add
in
sub
push
push
lea
push
subl
lea
push
subl
lea
push
lea
push
mov
push
subl
mov
add
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
lea
mov
mov
add
push
pop
xor
add
test
je
add
lea
push
popl
pushl
pop
dec
lea
and
pushl
lea
pop
repz
jmp
mov
pop
ret
out
movsb
test
pop
ja
addr16
xchg
dec
xchg
xor
mov
fstp
adc
sub
push
push
pushl
push
pushl
call
add
pop
lea
pop
mov
ret
add
add
in
sub
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
jmp
mov
mov
sbb
out
mov
sub
push
push
pushl
push
push
call
add
pop
lea
pop
mov
ret
shl
sub
test
jnp
and
es
push
std
xchg
aad
add
inc
jle
mov
leave
icebp
push
pop
sbb
xorl
inc
shl
int3
xor
shl
mov
dec
push
xchg
push
lds
mov
and
outsl
inc
ret
js
jno
outsb
xchg
sar
shr
inc
lret
es
pop
inc
sti
das
flds
xchg
into
sbbl
mov
dec
dec
cmp
pop
add
xor
fcmovnb
add
pop
mov
jmp
ret
push
pop
clc
sbb
sub
mov
enter
in
add
cwtl
and
add
add
cmp
add
dec
and
add
and
add
and
add
and
add
add
data16
add
add
sub
add
cld
and
add
and
add
add
add
add
and
add
add
jb
add
clc
and
add
and
add
add
out
and
add
and
add
add
jl
add
pop
and
add
add
and
add
add
add
add
test
add
int3
and
add
add
add
and
add
and
add
and
add
add
and
add
add
add
add
fisubs
add
nop
and
add
and
add
and
add
and
add
and
add
and
add
add
cmpsb
and
add
and
add
and
add
and
add
add
data16
add
add
sub
add
cld
and
add
and
add
add
add
add
and
add
add
jb
add
clc
and
add
and
add
add
out
and
add
and
add
add
jl
add
pop
and
add
add
and
add
add
add
add
test
add
int3
and
add
add
add
add
insb
jae
gs
popa
insb
jne
add
fs
outsl
outsb
jae
insb
gs
add
inc
add
outsl
jae
dec
popa
outsb
fs
add
inc
outsl
jo
inc
imul
imul
jb
je
arpl
add
mov
push
insb
gs
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
gs
je
jb
jne
dec
outsb
outsw
inc
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
fs
outsl
outsb
jae
insb
gs
add
add
fs
imul
add
das
add
outsb
fs
je
insl
push
add
add
je
jb
jbe
push
jns
gs
add
add
insb
gs
jae
dec
jne
gs
add
inc
gs
je
imul
push
add
fwait
add
insb
jae
inc
jbe
outsb
je
add
add
gs
inc
imul
gs
fs
outsl
outsb
jae
insb
gs
add
add
inc
gs
outsl
imul
jbe
jae
add
add
popa
jo
imul
insb
jae
jb
outsb
inc
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
inc
jb
dec
jae
add
add
inc
push
inc
jae
jb
outsl
jb
add
inc
jb
dec
jae
add
pop
add
addr16
outsl
js
add
inc
jb
dec
jae
add
or
push
gs
jb
inc
jb
outsl
jb
pop
add
addr16
outsl
js
add
add
arpl
inc
jae
jb
outsl
jb
push
add
outsb
fs
push
push
add
outsb
fs
push
push
add
outsb
fs
push
pop
add
addr16
outsl
js
add
add
jo
jb
inc
jb
outsl
jb
inc
push
push
push
dec
push
cs
insb
add
outsl
add
jo
jb
push
push
outsl
push
inc
popa
je
add
outsb
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
outsl
ja
gs
outsl
jb
push
dec
add
insl
add
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
inc
push
inc
inc
dec
push
cs
insb
add
add
add
add
xor
add
pop
add
orb
add
jo
add
mov
add
add
add
add
add
mov
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
sbb
add
add
add
add
add
add
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
inc
add
test
add
cmp
add
add
add
add
add
ja
add
add
add
add
add
add
add
add
add
xor
add
cwtl
roll
or
add
add
add
add
add
add
add
and
add
add
andb
add
push
sub
sub
xchg
xchg
xchg
add
scas
scas
lods
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
lods
mov
mov
fwait
pop
xchg
xchg
xchg
or
jle
jnp
jnp
lods
stos
stos
add
cmpsl
cmpsl
push
mov
mov
mov
ret
les
int3
into
int
rcl
shr
rcl
shl
rcl
iret
hlt
int
int
leave
repz
enter
in
mov
mov
lods
lods
stos
lea
lcall
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
and
mov
leave
leave
lret
not
rcl
cld
fcomp
std
fcom
xlat
xlat
xlat
aam
rcl
sar
int
int3
aad
aad
ror
sar
ret
std
mov
mov
lods
iret
movsl
movsb
mov
dec
das
xor
and
add
push
add
add
add
add
add
add
add
add
lods
stos
lods
add
scas
sbb
mov
jnp
mov
sar
leave
lret
dec
rcl
aam
fdivr
xlat
xlat
call
aam
dec
into
into
dec
int3
int3
call
aam
into
into
int
mov
mov
mov
std
cmpsl
cmpsl
cmpsl
ljmp
pop
or
inc
add
add
add
add
add
pop
add
add
add
add
add
add
pop
push
pop
add
dec
add
pop
add
push
or
inc
or
sbb
push
add
add
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
dec
enter
into
int
rcl
sar
xlat
fcom
call
xlat
call
dec
int
dec
lret
int3
into
into
inc
inc
rol
mov
mov
ljmp
mov
lcall
and
push
add
add
add
cmp
add
sub
add
and
add
push
add
add
add
add
pop
pop
pop
add
popa
arpl
imul
bound
pop
fs
inc
sbb
prefetch
push
push
sbb
ss
cmp
cmp
and
adc
add
add
add
add
arpl
add
mov
pop
mov
mov
mov
mov
mov
rol
leave
leave
call
rcl
call
aam
call
aad
call
rcl
dec
leave
enter
vcmpsd
mov
mov
ljmp
movsl
mov
xchg
xchg
xchg
lcall
addb
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
arpl
push
push
push
add
jno
jg
jl
jg
jge
jno
jb
arpl
mov
cmp
inc
inc
mov
outsb
outsl
outsb
nop
bound
pusha
inc
inc
inc
xor
add
add
add
add
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
inc
enter
leave
leave
dec
leave
lret
dec
leave
inc
mov
mov
ljmp
movsl
movsb
lcall
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
fwait
fwait
lcall
ds
push
prefetch
add
add
add
add
add
add
add
add
add
add
add
add
outsl
outsb
outsl
add
pop
or
pusha
mov
incb
jnp
jl
jp
jo
jo
addr16
fdivs
jae
jge
jge
jp
jns
fs
inc
inc
cmp
sbb
sbb
movups
stos
stos
stos
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsl
cmpsl
cmpsl
lcall
xchg
xchg
incl
addl
xchg
xchg
xchg
mov
mov
xchg
mov
jp
jns
das
das
das
das
add
add
add
add
add
add
add
add
add
add
mov
pop
push
addb
in
mov
incl
mov
std
xchg
jg
jo
jo
jne
je
jg
jge
addl
xchg
addr16
cmp
es
push
jle
jle
lcall
shrb
lods
stos
sti
lods
lods
lods
stos
lods
stos
stos
test
movsb
std
lcall
incl
jle
jp
jns
jp
jp
mov
cwtl
movsl
movsl
mov
sti
mov
mov
mov
mov
mov
scas
scas
stos
xchg
sbb
add
add
add
add
add
add
add
add
pop
pop
adc
movsb
cmpsb
out
lods
mov
xchg
xchg
incl
test
std
xchg
xchg
xchg
std
xchg
xchg
xchg
stc
xchg
xchg
xchg
in
mov
or
addb
mov
push
push
or
inc
inc
dec
imul
xchg
xchg
leave
lcall
out
fwait
fwait
cltd
stc
std
mov
mov
mov
mov
mov
jmp
scas
lods
mov
mov
mov
mov
mov
std
mov
mov
movsb
mov
jnp
scas
test
add
pop
adc
test
mov
incl
xchg
decb
xchg
xchg
pushf
sahf
popf
std
movsl
movsl
movsb
stc
mov
xchg
xchg
in
nop
nop
xchg
in
xchg
push
jne
prefetchw
add
or
or
sub
push
dec
dec
dec
data16
jno
xchg
xchg
rclb
xchg
xchg
std
lea
nop
call
sahf
sahf
jmp
lods
pushl
cmpsl
scas
mov
xchg
test
rolb
mov
mov
ljmp
sahf
adc
add
add
pop
adc
scas
mov
les
fwait
incl
mov
nop
nop
xchg
call
xchg
xchg
pushf
popf
sahf
movsl
movsl
movsl
test
test
movsb
mov
xchg
fstpt
jl
push
push
push
outsl
dec
dec
dec
pop
popa
bound
je
mov
jg
test
mov
mov
xchg
testl
mov
jmp
lahf
pushl
imul
mov
xor
jbe
mov
movsb
mov
mov
mov
mov
mov
add
pop
pusha
adc
mov
ljmp
popf
decl
call
xchg
xchg
call
cwtl
xchg
fwait
cltd
cltd
lcall
mov
movsb
movsl
stc
cltd
cltd
lcall
xchg
xchg
les
cltd
lcall
xchg
cmc
xchg
test
std
xchg
jae
cltd
push
test
movsl
dec
jg
lods
inc
jge
mov
jp
mov
je
mov
outsb
ljmp
adc
lods
or
lods
or
mov
jle
mov
mov
stos
pushf
mov
movsb
movsb
add
mov
add
pop
adc
mov
jmp
nop
xchg
call
lcall
sahf
mov
popf
lcall
xchg
cwtl
call
xchg
nop
call
xchg
cltd
cld
cwtl
xchg
pushf
stc
lahf
lcall
sahf
mov
xchg
imul
cwtl
dec
jp
cltd
cmp
lcall
lahf
pop
arpl
mov
adc
adc
lods
adc
lods
adc
lods
adc
mov
imul
mov
insl
mov
fwait
scas
mov
lods
lods
scas
movsb
movsl
mov
add
add
add
add
mov
pop
pop
adc
mov
mov
sahf
call
sahf
jmp
movsl
movsb
jmp
mov
decl
mov
decl
mov
cltd
jb
cltd
arpl
call
sub
decl
adc
xchg
or
call
add
cltd
add
sahf
pop
pop
jmp
sbb
mov
outsl
pushl
pop
outsb
mov
and
mov
and
aas
test
ret
mov
scas
scas
mov
lahf
lahf
mov
add
pop
pop
adc
scas
mov
shlb
lcall
movsb
movsl
ljmp
test
ljmp
cmpsl
cmpsb
lcall
orb
mov
decl
sub
mov
incl
or
push
incl
add
lea
pop
call
add
cltd
add
lahf
add
or
pushl
es
mov
sub
inc
sub
sub
sub
dec
xor
dec
inc
mov
lods
mov
mov
lret
movsb
dec
mov
mov
add
add
add
stos
movsb
test
adc
test
ljmp
sahf
jmp
stos
stos
ljmp
lods
lods
pushl
scas
scas
jmp
jno
incl
or
push
incl
add
push
incl
add
xchg
push
decl
push
call
add
mov
add
scas
adc
mov
cmp
dec
cmp
dec
cmp
call
cmp
call
cmp
xchg
dec
mov
std
mov
mov
movsb
mov
mov
add
dec
dec
adc
mov
mov
mov
test
ljmp
mov
pushl
mov
mov
mov
lods
test
decl
push
decl
push
decl
or
xchg
decl
add
popl
pop
call
pop
jmp
add
lods
add
jb
ret
cmp
int
call
inc
mov
rorb
fmuls
fmuls
fisttpll
fistl
call
xchg
std
mov
mov
movsl
movsl
movsb
arpl
mov
add
add
add
fwait
cwtl
cltd
add
dec
adc
jnp
movsb
popf
mov
lcall
stos
stos
pushl
mov
pushl
mov
mov
mov
jmp
cmp
mov
pop
call
sbb
mov
decl
or
add
xchg
add
xchg
add
pushf
add
mov
add
stos
add
mov
fs
and
nop
call
push
xchg
call
push
cltd
fistl
fcoml
fists
jmp
push
pushf
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
jne
sahf
sahf
or
xchg
xchg
xchg
add
inc
adc
js
lahf
cltd
sahf
jmp
sahf
lcall
mov
mov
mov
mov
mov
mov
mov
ljmp
inc
jne
nop
and
xchg
and
call
and
xchg
sbb
xchg
or
popl
push
call
add
mov
add
lods
add
mov
fs
mov
xor
call
pop
fwait
fldenv
jmp
arpl
jmp
cmpsw
jmp
gs
call
imul
fldl
ret
mov
test
lahf
lahf
mov
add
inc
inc
adc
jb
lcall
jmp
lods
scas
pushl
mov
mov
mov
mov
ljmp
push
cmp
sub
lcall
lcall
sbb
pop
call
pop
jmp
add
lods
add
mov
pushw
call
inc
xchg
fsubrl
jmp
outsl
stos
jmp
jno
call
je
in
jae
jmp
mov
out
jbe
out
jne
out
jae
jmp
xchg
mov
test
lcall
sahf
add
jle
ds
outsb
js
mov
sahf
fwait
pushf
pushl
mov
mov
mov
mov
mov
movsl
scas
lcall
xor
mov
aaa
je
sahf
xor
cltd
sbb
pop
call
add
movsl
add
test
popa
pushl
add
mov
sbb
fistl
in
mov
ljmp
in
xorl
push
xchg
push
test
ljmp
inc
mov
test
sahf
pushf
popf
daa
mov
lahf
mov
add
pusha
add
aaa
cmp
pop
pop
push
jne
jle
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
mov
inc
mov
jmp
cmp
inc
jle
mov
aaa
jbe
cltd
sbb
xchg
add
popf
add
mov
add
scas
add
mov
data16
mov
add
call
and
mov
jmp
mov
push
mov
push
pop
push
nop
nop
push
xchg
push
ret
out
mov
fnstenv
clc
lods
lods
test
xor
pushf
sahf
add
add
add
inc
add
xor
push
inc
dec
inc
jb
pop
dec
in
push
decl
mov
mov
mov
sar
inc
mov
jge
lcall
dec
cmp
dec
test
movsb
xor
lcall
add
mov
add
lods
add
mov
arpl
mov
add
movl
in
xchg
vlddqu
fwait
push
lcall
clc
sahf
lret
sti
lahf
into
cld
popf
int
cld
lcall
fidivrs
cli
mov
mov
lahf
lahf
mov
add
add
add
add
cmp
dec
jecxz
pop
pusha
call
mov
mov
mov
sar
ret
ret
inc
inc
enter
mov
mov
ljmp
dec
mov
movsb
sub
lcall
jmp
arpl
mov
arpl
mov
add
enter
rorl
out
mov
push
cmpsb
int3
push
movsl
int3
clc
cmpsb
into
cli
cmpsl
sar
cld
cmpsb
sar
cld
test
std
test
sar
std
test
push
lahf
jmp
mov
dec
lret
mov
mov
mov
xchg
xchg
add
lcall
xor
add
sub
or
bound
push
xlat
jne
jno
mov
rol
rol
mov
inc
enter
rol
pushl
push
test
scas
push
mov
lods
dec
test
lahf
sbb
popf
add
mov
add
mov
arpl
mov
add
into
add
fadds
jb
ficoms
push
popf
lret
lods
aam
sti
scas
aam
cli
mov
cli
mov
cld
mov
mov
mov
mov
mov
std
mov
push
cmpsb
mov
call
lret
mov
mov
mov
xchg
xchg
or
add
add
xor
add
dec
ss
jo
cltd
fwait
cltd
rol
jmp
fcom
not
rcl
std
int3
into
into
dec
lret
leave
lret
leave
dec
lret
lret
inc
enter
scas
jmp
push
mov
stos
cmp
lcall
add
add
mov
fs
mov
add
iret
add
add
filds
je
ljmp
sti
lods
aad
mov
fcos
mov
fdivr
cld
mov
xlat
mov
fdivr
mov
fdivr
clc
mov
jmp
mov
call
leave
int3
mov
sahf
mov
or
add
add
xor
add
add
pop
or
enter
loop
out
out
in
out
loope
loope
fsub
fcomp
fdivr
fcomp
std
into
ror
mov
push
test
test
add
jmp
add
mov
add
lret
add
aam
jno
fildl
jne
in
js
in
das
xchg
push
mov
sti
mov
loopne
inc
loopne
inc
loope
inc
loopne
inc
loopne
inc
loopne
inc
dec
fdivrp
std
enter
lret
cld
mov
leave
call
lret
into
mov
mov
xchg
adc
add
add
std
add
std
add
incb
hlt
div
or
out
in
pop
in
in
in
sub
out
in
dec
jmp
jmp
jmp
aad
fstp
jmp
mov
xchg
test
jns
mov
add
ljmp
add
mov
add
into
add
add
add
ljmp
cld
mov
loop
cld
int3
loop
dec
out
dec
jecxz
dec
jecxz
dec
loop
std
into
loope
call
jecxz
shl
shl
shl
cli
ret
out
mov
inc
ret
ret
test
mov
cwtl
xchg
add
add
add
std
std
add
std
incb
div
clc
add
hlt
repnz
repnz
out
icebp
out
pop
out
lock
in
in
pop
fnstsw
loope
mov
xchg
sti
mov
pop
pop
jmp
add
mov
fs
mov
add
rolb
jb
fildl
jbe
in
jns
in
push
jl
cmc
pop
test
cld
shl
dec
in
std
shl
std
shl
std
shl
std
aad
std
fsubr
std
fsubr
fucompp
fucomi
dec
loop
hlt
aam
in
lret
repz
stos
fwait
xchg
xchg
xchg
and
xchg
xchg
add
sti
add
cld
stc
add
cli
cli
add
cmc
hlt
or
aam
xor
mov
xchg
negb
add
add
scas
add
mov
add
lret
call
add
fildl
ja
out
js
in
sbb
cld
loopne
fld1
std
fucomi
fldpi
fucomi
fucomi
fucomi
fucomp
fsubr
fucomip
fsubrp
loopne
aam
push
ret
call
ror
clc
stos
stos
stos
lods
xchg
xchg
xchg
outsl
outsl
jo
xchg
xchg
xchg
add
loope
add
leave
sbb
stos
jl
repnz
and
mov
add
mov
arpl
mov
add
into
add
add
filds
je
call
sub
cld
shr
jmp
lock
std
fucomi
fucompp
std
call
jmp
std
shl
cld
shl
sti
shl
push
into
clc
lret
fdivrp
cmc
ret
xlat
in
mov
jmp
rcr
fcomp
fdivr
mov
mov
fwait
lcall
cltd
lcall
mov
mov
add
enter
rol
scas
mov
jmp
add
mov
arpl
mov
add
rolb
outsb
fadds
jb
loop
jp
call
xor
cli
leave
sti
lret
loop
sti
clc
mov
aad
hlt
mov
into
push
mov
int
ljmp
jmp
ret
sar
ljmp
cmc
fnstsw
fucomip
mov
mov
xchg
add
add
add
int3
add
rol
mov
cmpsb
loopne
ss
mov
add
mov
gs
mov
add
int3
pop
jo
rorb
jmp
sbb
call
mov
ljmp
std
loop
ret
cld
fbstp
neg
mov
lret
int
fmul
rcr
fmulp
shl
aad
out
loop
jmp
jmp
popf
ljmp
push
lods
lods
lods
adc
cmpsb
test
add
ret
roll
ret
roll
sahf
stos
aam
dec
cmp
sbb
cmpsb
sbb
lods
and
js
mov
inc
test
ret
push
mov
leave
fs
mov
out
mov
enter
lret
lret
rcl
lret
mov
into
shlb
fcom
jg
fcmovu
jb
loopne
gs
jecxz
out
call
xor
div
mull
icebp
lock
or
mov
int
mov
add
mov
mov
roll
mov
stos
xchg
lock
jne
ljmp
mov
sarb
test
mov
pushf
leave
ret
into
lret
ror
into
addr16
rcll
rcl
dec
fcom
inc
rcl
aam
aad
fsubs
fcomp
fcompl
fneni(8087
ficoms
fsubp
loop
jecxz
out
jmp
in
lock
add
sti
cmc
add
cld
add
incb
std
add
mov
mov
mov
lods
mov
mov
mov
mov
mov
ret
push
rol
inc
ror
xor
into
lret
ror
and
aam
sbb
aam
adc
rorl
aam
aam
rcr
xlat
add
add
loopne
add
jecxz
add
in
ljmp
std
incb
mov
mov
add
rol
ret
sub
mov
mov
push
rol
or
leave
movl
int
add
aam
add
fcom
add
fcom
add
fcom
add
aad
add
fsub
add
aam
add
loopne
add
fnstsw
add
out
add
repnz
std
add
std
std
add
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarl
les
ret
ret
ret
mov
mov
mov
ja
stos
test
and
add
add
add
add
add
add
add
add
mov
mov
aam
iret
iret
jmp
aam
cmc
aam
sar
iret
rcl
cli
int
lret
stc
lret
hlt
mov
mov
lods
fwait
xchg
xchg
xchg
dec
cmp
add
sbb
add
adc
add
push
add
add
jg
addb
aas
inc
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
cld
rcl
into
aad
xlat
call
xlat
aad
iret
ror
dec
iret
into
dec
int3
lret
mov
mov
stos
stos
stos
icebp
cwtl
xchg
xchg
mov
or
or
add
add
add
add
add
add
add
add
add
add
jne
jne
jae
je
data16
dec
dec
dec
cmp
sub
sub
xor
dec
sub
inc
adc
sub
add
add
mov
mov
mov
mov
mov
mov
dec
lret
rcl
sar
aam
sar
lret
lret
inc
rol
mov
mov
stos
stos
test
xchg
cwtl
cwtl
jmp
outsl
outsl
xchg
adc
add
xor
add
add
add
add
cmpl
test
jnp
push
push
pop
pop
pop
movsb
push
push
push
stos
push
push
insb
outsb
insl
push
pop
pop
cmp
cmp
pop
outsl
jo
adc
mov
mov
sar
mov
mov
mov
ljmp
fwait
fwait
call
xchg
xchg
cltd
fwait
lcall
dec
dec
dec
adc
adc
add
add
add
add
add
pop
cltd
fwait
cltd
add
pushf
cwtl
cltd
fcoml
addl
jmp
js
sarb
jns
jns
jnp
jb
je
push
push
push
cmp
aaa
pushf
sahf
pushf
mov
scas
scas
repz
lods
lods
sti
lods
scas
lods
std
test
test
call
xchg
call
mov
scas
jmp
scas
scas
leave
cmpsb
movsb
movsb
cltd
je
jae
adc
adc
add
add
add
add
outsl
outsl
outsb
pop
nop
mov
loop
cltd
pushf
incl
mov
sti
xchg
xchg
xchg
lock
nop
fimuls
mov
jp
and
inc
inc
inc
inc
dec
jo
jo
mov
cltd
lcall
std
mov
mov
xchg
xchg
xchg
lcall
cmpsb
cmpsl
mov
mov
mov
scas
mov
mov
mov
movsl
mov
addb
add
add
add
add
pusha
or
lods
mov
movsl
lahf
movsb
decl
mov
xchg
xchg
xchg
std
sahf
lahf
mov
negl
addb
push
push
push
outsl
imul
jge
subl
mov
lcall
mov
pushl
pop
mov
mov
mov
mov
mov
out
lods
lods
insl
test
add
add
add
add
pop
or
mov
in
movsb
cmpsl
call
xchg
xchg
call
xchg
cwtl
cwtl
cwtl
lcall
lahf
sahf
cli
xchg
xchg
cwtl
jmp
xchg
lea
popl
mov
xchg
imul
sahf
dec
jp
mov
xor
jb
mov
outsl
ljmp
sbb
pop
mov
mov
jle
movsl
movsb
push
pusha
pop
pop
or
mov
lcall
sahf
popf
jmp
lahf
lahf
call
mov
lea
mov
xchg
jae
cld
xchg
pop
cmp
dec
jp
nop
cmp
xchg
sub
xchg
sbb
call
push
ljmp
sbb
mov
outsb
pushl
push
jae
mov
pop
mov
scas
scas
xchg
lahf
popf
sahf
adc
add
add
pusha
pusha
pop
or
mov
stos
mov
mov
ljmp
cmpsl
test
decl
cmp
mov
decl
adc
xchg
pop
decl
add
xchg
add
popf
add
test
pushl
sub
mov
xor
enter
leave
xor
xchg
inc
test
mov
test
test
pusha
pop
pop
or
movsb
test
cmpsl
mov
cmpsl
ljmp
mov
pushl
mov
decl
addps
xchg
push
incl
add
popl
push
call
add
cmpsb
add
mov
outsb
inc
aaa
cmp
inc
mov
rolb
roll
call
inc
xchg
call
bound
stc
mov
mov
movsb
movsb
movsl
daa
std
add
add
add
pusha
or
mov
ljmp
mov
mov
mov
ljmp
push
jnp
nop
push
popa
call
adc
pop
decl
add
sahf
add
cmpsb
add
scas
add
and
rorl
fsts
fcompl
jmp
pop
sahf
jmp
pop
mov
fisubrs
dec
cmpsl
mov
ret
cmpsb
xor
add
add
dec
pop
jl
jl
fwait
xchg
lcall
lods
scas
pushl
mov
mov
lcall
cs
sub
xchg
and
xchg
adc
add
lahf
add
add
scas
add
mov
xor
fisubl
jmp
insb
test
jmp
jo
in
jno
jmp
jp
call
test
std
mov
test
addl
dec
dec
pop
outsl
outsl
push
mov
cwtl
pushl
mov
mov
mov
jne
lcall
ja
sahf
sub
call
add
movsb
add
stos
add
mov
gs
or
call
inc
xchg
jmp
js
ljmp
push
test
push
xchg
fldt
mov
push
fwait
fwait
lcall
sub
push
push
push
dec
pop
pushw
loopne
mov
mov
sarb
mov
xchg
ljmp
sub
cltd
or
add
add
mov
fs
mov
push
jne
loopne
mov
push
xchg
ret
push
cwtl
push
xchg
clc
lcall
notl
inc
mov
stos
popa
mov
add
add
xor
add
pop
pop
pop
fisttpl
mov
mov
ret
ret
pushl
pop
xchg
lods
dec
test
mov
add
cmpsl
add
mov
fs
mov
add
fsubs
cmp
jl
push
mov
into
stc
test
cli
stos
sar
sti
stos
iret
stos
sar
stc
cmpsb
int
out
leave
inc
mov
stos
jne
popf
popf
or
add
add
push
dec
dec
aaa
jae
jb
test
int
out
iret
lret
cmc
lret
sti
enter
enter
mov
bound
jmp
add
mov
gs
add
into
add
fiaddl
je
ljmp
sti
mov
std
mov
mov
xlat
std
mov
fcos
cld
mov
lret
rol
scas
lods
lods
mov
add
add
add
add
pop
or
aad
dec
loop
fsubp
fistps
fcmovu
fcom
out
shll
test
or
scas
add
mov
add
add
in
jl
repnz
mov
std
loope
inc
loopne
std
enter
leave
fdivrp
dec
loope
cld
out
mov
leave
divb
sahf
popf
sbb
add
add
std
add
incb
ljmp
in
in
in
xor
loopne
loop
les
mov
mov
add
mov
arpl
ret
dec
add
fldl
je
jmp
insl
mov
std
ret
sti
shl
std
shl
std
shl
shl
std
out
call
out
cld
shl
push
enter
int
stc
mov
mov
and
add
add
incb
incb
cld
cld
cld
pop
aam
aam
mov
pop
mov
lahf
or
ljmp
add
add
roll
outsl
fiadds
jbe
out
and
std
shl
fsubr
fldl2e
xlat
jmp
cld
xlat
out
cld
aad
push
fdivr
loopne
aad
mov
popf
popf
das
add
add
int
int
mov
arpl
ljmp
addr16
add
roll
jb
loop
ja
out
das
nop
push
fwait
enter
loope
clc
lret
loopne
test
aad
repnz
lock
sar
in
in
aam
in
in
fsubrp
enter
test
stos
das
std
incl
aad
push
mov
jae
push
addr16
mov
imul
sbb
int3
and
sub
sti
loopne
lcall
mov
out
jecxz
lret
mov
lret
mov
sarb
jecxz
ficompl
in
out
jns
rcl
dec
mov
add
add
mov
inc
mov
movsl
les
xchg
mov
fidivrl
andb
int3
mov
ret
ror
rol
lret
insl
ror
into
pop
ror
rorl
xlat
fdivrs
loopne
fisubrs
in
fisubs
jecxz
lock
jmp
or
std
std
add
add
add
std
incb
mov
mov
outsb
scas
mov
lods
data16
mov
mov
mov
xor
leave
enter
rcl
pop
mov
rcl
or
or
int3
int
lods
stos
lods
add
incl
incl
cltd
lcall
rol
or
int3
int3
add
std
add
add
add
add
add
lock
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
cltd
fwait
fwait
add
ret
enter
leave
mov
rol
mov
mov
scas
insb
lods
lods
stos
xor
jae
add
add
add
add
add
add
add
add
add
add
add
add
stos
lods
stos
add
mov
jmp
aad
std
rcl
sar
int
iret
std
stc
mov
test
andb
push
add
add
add
add
add
add
add
add
jno
jno
addr16
inc
inc
das
sub
inc
inc
and
add
add
mov
mov
cmpl
dec
int3
int3
call
rcl
dec
into
iret
inc
mov
ljmp
lahf
lahf
sti
mov
das
push
add
add
add
add
jae
jae
test
adc
outsb
outsb
ret
bound
insl
outsb
outsl
jb
popa
bound
pop
pusha
pop
sbb
mov
in
mov
mov
mov
stos
lods
lcall
xchg
xchg
lcall
xchg
cltd
lds
jb
es
pop
add
add
je
je
fwait
xchg
pushf
mov
xchg
xchg
mov
test
addl
push
dec
push
inc
mov
popf
into
mov
lahf
mov
decb
mov
popf
pushf
pushf
ljmp
mov
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorb
lods
movsl
test
cld
mov
mov
xchg
xchg
xchg
cld
popf
pushf
popf
cmc
lcall
mov
push
push
imul
jle
mov
xchg
notl
mov
pushl
xchg
mov
test
call
stos
stos
stos
add
add
add
scas
test
xchg
xchg
xchg
call
fwait
cltd
lcall
lcall
xchg
mov
loope
jbe
out
xchg
arpl
std
lcall
ljmp
and
mov
outsb
pushl
popf
lods
lock
mov
imul
into
add
xchg
pop
scas
movsl
stos
test
lahf
sahf
sahf
jmp
movsl
movsb
call
push
decl
inc
jb
lea
push
mov
popa
call
or
or
scas
sbb
pushl
and
jnp
lds
xchg
rcrb
subl
jne
push
mov
movsl
test
test
mov
pushl
xchg
decl
or
mov
push
decl
add
mov
adc
shll
lret
aas
mov
iret
inc
mov
aam
mov
aam
xchg
dec
cltd
mov
mov
mov
movsl
movsl
mov
add
push
test
mov
scas
pushl
mov
mov
call
push
pop
decl
add
mov
add
mov
push
xchg
fstpl
fistps
jmp
popa
movsl
jmp
movsw
call
lcall
cmpsl
test
pop
add
add
popa
popa
popa
adc
sahf
lcall
mov
mov
mov
fwait
dec
jge
pushf
xor
lcall
jmp
add
mov
dec
xor
call
jp
out
jge
out
jle
fstps
mov
and
add
add
adc
imul
mov
mov
mov
ret
sar
mov
jmp
jle
sahf
and
pop
ljmp
add
les
insl
fmull
in
mov
hlt
xchg
xchg
enter
jmp
cmpsl
mov
movsl
sub
inc
inc
aas
adc
push
xchg
mov
mov
inc
ret
vcmpsd
ljmp
sbb
cmpsb
add
mov
gs
add
aam
js
ljmp
cli
lods
sar
cli
lods
sar
cld
scas
sar
cld
lods
sar
jmp
lret
mov
movsb
ds
incl
xor
jno
mov
mov
aad
mov
aad
rcl
out
lret
enter
mov
jmp
add
add
aad
jno
out
xchg
clc
mov
cld
mov
inc
std
rcr
std
ret
out
mov
shl
cmpsl
cmpsl
dec
jg
addl
stos
lods
lods
add
in
in
or
jmp
out
outsb
fcmovu
fisubl
movsl
and
pusha
mov
add
add
out
aaa
xchg
cld
scas
std
int
dec
out
call
out
call
out
call
in
hlt
leave
fcos
rol
int
scas
scas
scas
popa
cmpb
std
incb
incl
int
shrl
lahf
sbb
stos
add
mov
add
loop
jp
hlt
push
movsl
std
loopne
std
aad
std
aad
std
shl
std
aam
sti
shl
push
fdivr
fcmovne
shl
mov
mov
xchg
xchg
xchg
pop
ret
ret
mov
mov
cld
lods
add
mov
push
jae
fstpl
cmp
lock
shl
call
rcl
out
shl
out
rcl
ljmp
scas
ret
vsqrtpd
add
add
rol
mov
stos
xchg
dec
and
push
mov
shll
lret
mov
xlat
mov
lret
adc
into
outsl
xlat
int
pop
xlat
dec
in
fistpll
out
out
in
in
out
sbb
rol
add
mov
cmp
mov
scas
push
mov
mov
lds
sbb
bswap
into
int3
or
aad
push
std
std
incl
cmpl
add
add
add
rol
std
incb
std
incb
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
and
inc
repz
test
arpl
pop
mov
das
push
fsub
jnp
cmp
imul
imul
jge
mov
fisttpll
aad
xor
repz
test
pop
mov
push
movsl
xlat
jecxz
or
mov
stc
sub
cwtl
pop
sbb
mov
insl
lds
cmp
jp
and
adc
cltd
inc
jb
adc
cwtl
das
divl
mov
dec
or
cmp
insb
popf
pop
jnp
lea
cltd
xor
adc
test
xor
xchg
push
insl
xchg
hlt
mov
pop
insl
add
cli
adc
lea
jge
test
in
add
pop
xor
insb
add
push
out
xchg
and
add
fsts
and
sbb
inc
xlat
jle
in
outsl
lahf
pop
cmc
rclb
jl
and
and
ja
ds
cwtl
mov
repz
fidivrl
or
les
cs
mov
push
inc
fidivs
xor
test
lcall
out
and
aaa
dec
insl
add
dec
insb
add
mov
add
test
aas
and
lds
in
test
jecxz
les
add
xor
and
test
cmpsb
cmpsb
out
fcom
pop
hlt
or
add
add
mov
mov
adc
data16
xor
cmp
push
jmp
test
lret
mov
jecxz
das
adc
cwtl
andl
mov
mov
cmp
lahf
cmp
lret
sti
cwtl
cmp
leave
sbb
in
ljmp
mov
add
add
pop
mov
and
cmp
pop
stos
ss
mov
xor
add
sbb
pop
mov
cmp
aam
mov
rcl
fucomip
xor
rolb
jo
inc
popf
xor
jne
mov
adc
jo
sbb
dec
cmp
into
insb
imul
inc
aas
addr16
jo
add
xchg
push
pop
mov
int
loop
mov
push
dec
hlt
pop
repnz
inc
cmp
ja
call
out
leave
adc
jne
sbb
and
sub
inc
nop
mov
ret
stc
cmp
pop
adcb
ss
test
sahf
xor
mov
fldt
rorb
jb
sub
stc
nop
fidivrs
cld
mov
pop
scas
xor
sbbl
push
xor
cmp
push
ljmp
jno
sub
fnsave
es
cld
xchg
push
pushf
lods
inc
into
jb
mov
out
lret
bound
lds
iret
testb
je
push
out
dec
xchg
pop
sahf
imul
sbb
inc
fisubrl
mov
inc
mov
mov
fnstsw
movzwl
test
xor
movsb
cmp
sub
fnstenv
scas
dec
loopne
sub
mov
push
lods
lods
push
xchg
jmp
push
jmp
sub
pop
movsl
dec
loopne
jle
mov
rcrl
lods
inc
dec
repnz
and
bound
shr
repnz
pop
out
adc
lahf
inc
call
es
insl
mov
mov
rorb
cli
cmp
shlb
pop
sbbl
data16
ss
or
mov
fldcw
rorl
fdivl
sub
pop
stos
cli
xchg
fdivrl
std
scas
std
sbb
add
int
and
jmp
jbe
push
test
jb
es
add
jb
fdivl
xchg
stc
jno
mov
adc
testb
pop
scas
inc
inc
xchg
loopne
fadd
pop
push
mov
movsb
cmp
adc
mov
dec
loope
aad
pop
add
adc
push
or
jbe,pt
in
mov
ret
imull
jnp
inc
out
xchg
dec
leave
pusha
jnp
shrl
fwait
jg
roll
jo
xor
call
test
lock
lret
xchg
pop
bnd
repz
xchg
sub
jnp
push
dec
sbb
jbe
lock
mov
cmpsl
ds
std
arpl
sub
test
leave
xor
cli
xchg
popa
clc
push
mov
dec
loope
inc
pop
insl
push
movsl
lcall
sub
orl
data16
scas
inc
add
in
test
stos
or
lock
mov
xchg
pop
scas
imul
repnz
insl
add
sub
sahf
pusha
lods
xchg
sub
mov
mov
or
jecxz
in
std
xchg
jmp
xor
pop
imul
test
outsb
bound
std
xchg
jmp
aad
imul
mov
loop
sbb
imul
dec
fs
in
rcrb
cmp
data16
xor
in
mov
mov
lret
shrl
mov
scas
inc
jne
fnsave
test
push
out
dec
dec
loop
xor
popa
cmpsb
sbb
cmp
dec
out
jp
pop
lock
mov
push
out
aas
jnp
ret
pop
push
sbb
xor
dec
outsl
push
jl
iret
data16
dec
in
push
lea
cltd
outsl
push
int3
mov
mov
cmpl
outsb
sahf
mov
adc
push
lea
cmp
pop
push
int
iret
mov
inc
call
aaa
jnp
data16
pop
repnz
mov
movsl
cmp
ss
ss
cmpsl
sarl
stc
nop
jle
pop
imul
jecxz
jp
adc
pop
fnstenv
sti
xchg
je
sbb
fidivrs
fnstenv
ss
scas
push
in
fnstsw
testl
in
aad
out
ds
outsw
aaa
lods
inc
data16
hlt
call
xor
fs
jmp
aas
pop
hlt
insl
xor
fbstp
mov
outsb
in
test
xor
cmp
add
mov
cmp
aas
push
imul
out
cmp
cs
mov
jne
ljmp
ret
push
ljmp
adc
outsl
mov
sbb
inc
imul
push
ljmp
pop
jne
std
xchg
lock
mov
test
jl
lock
int
hlt
out
sub
sbb
fs
add
pop
call
or
repz
mov
xchg
mov
sbb
adc
sub
sub
push
ljmp
jmp
mov
fildll
dec
and
inc
or
jbe
addr16
mov
and
rcl
cs
lret
cmpsl
ds
xor
push
mov
mov
fisubrl
mov
sbb
pop
jae
pop
test
into
shlb
leave
sbbb
sbb
aam
imul
mov
lds
and
adc
push
sub
pushf
pop
insb
add
mov
fisttpl
das
cmp
sbb
mov
inc
subb
xlat
sti
dec
loop
stc
inc
icebp
stos
inc
and
in
andl
cmp
or
testl
lea
sub
adc
into
cld
and
es
push
ljmp
sti
xchg
leave
popf
mov
lret
in
insb
adc
pusha
negl
cmp
outsl
xor
mov
stc
nop
mov
xchg
or
sub
imul
push
mov
into
and
sbb
sub
cmp
testb
mov
cmpsb
call
or
and
sub
adcb
movsb
loopne
pop
sbb
lock
cmp
lock
cmp
addb
into
gs
ljmp
inc
lock
jmp
das
lret
mov
in
loop
sbb
jne,pt
jo
cmpsl
mov
fnstsw
push
psubsb
inc
sbb
fcomi
bound
insb
subl
mov
push
or
xor
sub
cmp
outsl
push
scas
cmpl
repz
or
cwtl
das
push
and
push
jge
dec
stos
jl
sub
enter
es
adc
push
dec
push
xchg
nop
pop
test
jmp
mov
or
dec
loopne
sub
shlb
adc
popa
clc
adc
adc
outsb
es
scas
push
mov
mov
loopne
clc
adc
dec
push
jne
test
mov
or
sbb
xchg
aaa
loop
test
aas
stos
subb
mov
inc
pop
mov
lcall
repnz
jmp
push
sti
test
cmpsl
dec
push
jae
les
push
mov
out
jbe
adc
xchg
sbb
sub
fxch
dec
clc
sub
push
sub
cmpsb
mov
mov
out
xchg
out
outsb
add
iret
fiadds
jno
stc
shlb
dec
es
cmp
mov
lahf
sub
sbb
pushf
add
leave
mov
jno
jle
js
mov
popf
loopne
pusha
add
loop
fnsave
xor
mov
push
stc
jge
push
test
mov
shll
sbb
movsl
sbb
dec
push
test
inc
lahf
sub
cmp
pop
shrb
imul
iret
jbe
out
je
out
dec
xchg
inc
cld
push
cmpsb
pop
xor
nop
inc
ret
icebp
sbb
movsl
fmul
jae
idiv
out
sub
cmpb
mov
in
scas
fadd
add
add
pop
pop
data16
pop
out
or
faddl
inc
sub
jmp
push
jbe
push
mov
cltd
cmpsl
test
out
xchg
mov
adc
inc
ret
push
lods
jnp
icebp
aam
push
push
xchg
out
xchg
sub
pop
incl
les
mov
dec
aad
and
inc
add
and
pop
xchg
sub
add
insb
dec
cli
or
ja
xchg
sub
cli
hlt
push
push
cmpsb
mov
push
daa
sbb
out
out
xchg
push
subl
jb
stc
aad
xor
push
sub
mov
sarl
pop
js
push
cmpsb
or
in
inc
lahf
inc
cmp
pop
dec
test
mov
mov
inc
pop
out
mov
and
movsl
xchg
mov
inc
fistl
aas
xchg
lock
scas
outsl
scas
mov
shrl
scas
testl
int3
decl
into
outsl
orl
jl
jns
cmc
xchg
fdivrl
std
jp
insl
inc
jp
xlat
mov
out
in
ficompl
xor
scas
scas
inc
loopne
mov
or
lret
cld
fidivs
shr
cwtl
je
dec
and
lret
push
push
jp
popf
lock
inc
jmp
pop
mov
mov
sub
lds
inc
and
add
imul
imul
sub
cmp
mov
lods
jp
fbstp
movsl
xor
fbld
shrl
xchg
push
or
nop
jecxz
or
sahf
hlt
mull
and
fistpl
fwait
push
sbb
push
out
imul
dec
mov
dec
sahf
pushf
rcr
nop
daa
fidivl
aam
mov
pop
repnz
fcoms
jp
adc
cs
lahf
clc
jmp
das
rorl
mov
cmp
jbe
fnstenv
xor
shlb
xchg
loop
push
out
cld
test
outsb
add
andl
push
movsl
push
mov
popa
std
pop
mov
lods
push
icebp
xchg
sub
mov
loope
add
cs
gs
lcall
bnd
pop
icebp
ljmp
adc
dec
and
jns
inc
fadds
rcrl
push
call
sbb
fidivs
xor
cltd
sbb
ja
cmp
xor
pop
pop
out
dec
jnp
mov
addr16
xchg
jmp
mov
or
mov
insl
ljmp
lock
insl
add
sbb
xchg
push
push
movsl
mov
mov
ret
add
fsubrs
sub
loope
lods
testb
stos
and
das
add
push
inc
dec
inc
imul
mov
shrb
dec
or
data16
sahf
xor
lods
push
mov
mov
hlt
sbb
rorl
dec
inc
pop
sahf
dec
hlt
data16
sbb
mov
xchg
inc
das
insb
mov
dec
in
fadd
push
std
stos
jge
clc
push
fbstp
adc
mov
aad
mov
ret
fsubrs
in
rcrb
mov
popf
rdmsr
push
out
push
sub
mov
fsubrl
fbld
in
loop
push
sbb
jae
dec
lcall
cmp
scas
sub
xlat
outsb
adc
ss
xor
pushf
lahf
pushf
push
jmp
mov
jb
into
jnp
int3
xor
nop
daa
subps
mov
fistpll
out
int3
arpl
adc
andl
push
or
push
arpl
mov
push
rolb
pop
sahf
mov
and
fistps
xlat
pushf
clc
xor
gs
cmc
ljmp
adc
aas
jge
lds
xor
ret
mov
push
xchg
outsb
or
cmc
mov
in
fisttps
out
xchg
fisttps
out
push
cmp
add
test
imul
jns
ds
stos
inc
dec
push
xchg
frstor
pop
xchg
sti
aad
fdivrl
repz
rcrl
mov
xor
aam
pop
sub
orb
loopne
cmp
int3
fsubs
or
xchg
cltd
and
cmp
mov
mov
xor
pop
dec
pop
shrl
loopnew
mov
add
shlb
sbb
sbb
xor
or
es
in
jp
out
movsb
out
insb
add
mov
and
xchg
sub
xchg
mov
dec
pop
sbb
loopne
nop
ja
pushf
xor
and
push
loop
leave
mov
rcll
lods
push
pop
out
xchg
outsb
add
daa
pushf
mov
test
xchg
sub
mov
dec
rcr
outsl
je
shlb
xchg
add
insl
xor
mov
xchg
ret
test
sub
imull
dec
loope
popa
push
call
xchg
lods
sbb
cmp
xchg
mov
mov
mov
xor
loopne
cmc
pop
shrl
push
call
repnz
movsl
jle
adc
bound
dec
loope
fmull
push
push
add
add
push
xchg
dec
mov
test
cmpsb
cmp
xor
pop
movsb
pop
fnsave
loop
pminub
test
sub
xchg
xor
or
jmp
push
mov
add
ret
cmp
adc
cmp
ja
outsb
cmpb
xchg
insl
cmc
ffreep
pop
ficompl
cmc
mov
in
outsl
jae
stos
lods
mov
mov
xor
adc
cmpsb
adc
ds
add
add
sbb
jp
xchg
outsl
stos
inc
mov
int3
enter
ret
or
jle
adc
js
popl
mov
rclb
cmpsl
lahf
sbb
flds
lds
pusha
notl
dec
jecxz
jnp
adc
mov
shrl
mov
jo
xor
mov
rcll
inc
repz
inc
or
and
es
decl
inc
fdivrl
xchg
arpl
lds
addb
sbb
jno
sahf
adc
ss
aaa
adc
add
push
sub
inc
int3
pop
not
scas
stc
nop
mov
rcll
scas
or
xor
push
shll
pop
in
jb
dec
push
out
pop
mov
mov
rcrl
adc
sub
std
xchg
cwtl
sbb
sbb
mov
aad
xor
mov
dec
and
popa
ljmp
xchg
movsb
xchg
mov
push
shrb
arpl
mov
jb
inc
faddl
popf
push
movsl
ret
cli
xlat
jmp
ret
fadds
sbbb
repz
loope
dec
nop
daa
dec
dec
push
inc
mulb
fidivs
fmull
xchg
stos
dec
lods
inc
jae
or
lock
mov
dec
testb
arpl
lahf
push
into
fs
pop
jl
mov
pop
lds
jb
daa
sbb
stc
test
ret
sub
sahf
xor
fldenv
and
adc
clc
movsl
bound
enter
stc
lock
add
adc
and
pop
adc
gs
enter
outsb
jne
dec
out
xchg
push
popf
and
insl
add
dec
and
adc
and
mov
popa
clc
push
inc
pop
jg
outsl
push
sahf
cwtl
in
mov
rolb
lcall
and
mov
inc
xlat
mov
aad
cmc
sub
and
out
inc
jl
jp
inc
fidivl
loope
clc
dec
daa
mov
mov
jb
insl
xchg
test
xchg
shll
in
cld
sbb
add
sbb
inc
cltd
xor
insb
pop
icebp
jle
mov
mov
aad
push
in
sub
xchg
pushl
push
inc
shrb
aaa
aas
aad
lock
repz
jecxz
out
push
movsl
or
push
cmp
sub
fs
xchg
cmp
mov
sbb
push
push
inc
xchg
sub
cmp
lods
ret
pop
ds
mov
push
adc
push
and
push
movsl
inc
inc
xchg
cs
jo
ret
xchg
or
shrl
push
imul
dec
xchg
xchg
iret
insl
pop
mov
call
cmp
pop
dec
addr16
fimuls
loope
mov
lock
call
cmpsl
or
mov
rclb
mov
lret
pop
icebp
mov
shlb
fistpll
push
lret
lret
daa
xchg
sub
pop
mov
mov
std
dec
inc
fdivrl
fstl
jns
mov
or
loope
cmp
rorl
xchg
sub
aam
inc
gs
or
sbb
or
sub
cld
xchg
out
mov
adc
ds
data16
ret
inc
pop
in
test
pop
hlt
cmp
jnp
push
push
sub
ds
cltd
xor
push
dec
fisttps
mov
std
xchg
dec
out
dec
mov
add
xchg
cmc
loop
clc
mov
cmpsb
cmc
adc
cwtl
push
push
lds
sbbb
shlb
bnd
cmp
adc
pop
repz
xchg
cmp
adc
mov
out
ja
das
mov
in
xchg
mov
clc
mov
cltd
pusha
adc
insb
mov
int
mov
xor
into
dec
adc
mov
das
mov
adcb
pop
mov
imul
mov
or
lret
xor
adcb
insb
movsb
jbe
mov
ret
mov
sub
lods
add
fwait
xor
cmp
cmp
and
int3
mov
inc
jge
jae
enter
imul
subl
add
jno
pop
mov
xchg
sub
lds
pop
rcll
push
out
jnp
dec
loop
lahf
jge
loopne
jge
mov
nop
daa
cmp
pop
les
and
cmp
jne
dec
cmpsl
dec
mov
jle
leave
pusha
add
icebp
mov
fdivl
jns
mov
or
lret
sbb
push
repz
and
jo
movsb
inc
push
in
jbe
mov
leave
sbb
sub
int3
arpl
mov
into
gs
mov
adc
ss
movsl
addr16
loopne
mov
add
fimull
or
and
sub
lcall
cmpsl
loop,pt
sbbb
add
pop
xor
push
out
mov
pop
push
stos
add
jmp
bndstx
in
push
inc
fmuls
stos
pop
neg
popa
pop
scas
xchg
cld
jge
cs
int3
in
pushf
xor
mov
jne
mov
shrl
lods
xchg
sub
jp
mov
xor
pusha
test
sub
fadds
jno
or
les
jl
jl
pop
sahf
push
in
iret
cmp
add
mov
pop
mov
je
xchg
test
leave
xor
xchg
arpl
mov
mov
cmp
cmp
or
pop
icebp
pop
in
stos
adc
ss
addr16
xchg
sub
mov
fldt
or
mov
pusha
leave
lock
subl
popa
push
outsl
sub
mov
rcll
jp
mov
frstor
data16
mov
shr
sti
andb
mov
fdivl
jmp
rorl
adcl
out
add
es
mov
and
addr16
fmull
gs
sahf
mov
pusha
mov
adc
mov
fildl
xchg
add
shrl
and
lahf
ss
cmp
mov
fcmove
arpl
cwtl
das
andb
and
jg
mov
lret
call
fwait
jb
insl
add
xchg
dec
jno
cld
stos
in
insb
add
int3
int
idivb
add
push
sbbb
mov
fdivl
push
int
mov
popa
pop
mov
ja
jb
cli
stos
fucomp
jg
int
mov
sub
jnp
jae
lods
arpl
into
adcb
mov
mov
aam
fs
xchg
sahf
push
mov
fsubr
lods
sbb
aad
mul
js
push
push
jmp
mov
popa
clc
clc
jb
and
int
and
jle
and
enter
jmp
sbb
dec
outsl
xor
lret
lock
jecxz
adc
aaa
mov
jno
xor
xchg
int3
jle
fwait
cmpsl
in
outsb
add
repz
and
ljmp
fisubrs
movb
xor
int
add
pop
repnz
pusha
fs
cltd
int3
xor
cmc
mov
js
push
add
std
xchg
stos
pusha
push
scas
cmc
mov
jb
push
add
jl
jno
dec
stos
pop
pusha
testl
pop
loopne
push
hlt
sub
sub
dec
popf
xor
into
cld
xchg
clc
cltd
or
inc
jecxz
mov
mov
push
mov
mov
sub
inc
aam
mov
lahf
fnstenv
rcrb
jns
or
les
std
fs
sahf
push
shrl
mov
sbb
xchg
or
movsl
xor
daa
mov
mov
mov
xor
cmpsb
cmp
and
scas
inc
jl
pop
xor
jge
push
je
xchg
out
test
mov
xchg
in
inc
std
xchg
jp
in
test
fwait
es
and
push
pop
movsl
lods
inc
fiadds
cmp
cmp
add
scas
inc
loopne
jge
outsl
add
cmp
pop
out
test
test
push
lods
insl
hlt
push
mov
mov
dec
mov
xchg
sub
xlat
and
pop
divl
xor
dec
test
lret
cmc
lods
jne
push
testl
lods
inc
cmc
mov
mov
sahf
adc
push
ljmp
lods
xor
jge
notb
mov
dec
adc
jl
lods
ss
jno
sti
xchg
stc
xchg
repnz
sbb
xchg
inc
in
cmc
mov
or
and
sti
mov
mov
fisubl
adc
mov
inc
in
add
mov
add
ljmp
movsb
std
xchg
filds
and
add
and
mov
and
fdivl
pop
push
ret
pop
mov
stos
inc
pusha
stos
jl
aam
jne
mov
fsubrp
orl
sub
mov
adc
scas
loop
push
sbb
aas
xchg
sub
lcall
ja
or
shll
push
or
jl
pop
jne,pn
pop
jp
mov
cld
xchg
add
cmc
mov
and
mov
adc
sbb
xchg
ret
divb
jne
inc
add
mov
xchg
push
push
in
xorl
mov
ss
sbbl
xchg
inc
out
je
sbb
les
adc
adc
inc
faddl
cmpsb
outsl
push
roll
mov
loope,pn
adc
push
out
mov
out
gs
in
aad
aam
shl
ss
sbb
push
mov
cmp
jp
mov
mov
fldl
scas
nop
sub
lret
in
xchg
sub
xlat
mov
add
insl
add
and
xchg
sub
jae
xchg
lret
add
insb
je
xor
push
xchg
lock
jbe
std
movsb
jecxz
test
addr16
hlt
cmp
leave
outsb
adc
dec
loopne
arpl
add
ljmp
bound
xchg
jnp
fcmovnbe
outsl
add
sub
or
test
les
xchg
ljmp
and
dec
add
cmp
push
negb
mov
and
stos
mov
flds
mov
cmp
push
out
xchg
inc
cli
lea
adc
jecxz
or
call
cmp
sahf
cmp
mov
ljmp
in
ss
fstpl
pop
push
test
pop
jmp
lods
jl
aam
insb
stc
mov
mov
daa
fstpt
pop
dec
mov
xor
jns
arpl
leave
hlt
xchg
stc
aaa
ss
push
daa
rolb
fnstsw
pop
in
or
test
out
imul
aaa
je
or
mov
mov
fcoms
lcall
bound
adc
mov
inc
lret
pop
popa
out
pop
sub
rcrl
mull
int
mov
pop
shlb
bound
in
pop
and
mov
arpl
ficompl
mov
mov
ds
xor
adc
add
adc
xor
mov
enter
jne
fsubs
fisttpl
repnz
out
mov
fstpl
lcall
or
push
jle
mov
outsl
scas
sub
out
mov
fnsave
std
lods
inc
adc
jmp
xor
xchg
pop
cmpl
arpl
mov
and
inc
icebp
add
push
scas
inc
je
aam
arpl
mov
or
dec
sbb
xor
xor
arpl
lret
push
nop
and
mul
xchg
sbb
shlb
mov
ljmp
shll
cli
jbe
sbb
filds
mov
bound
int3
push
mov
pop
jno
mov
aad
lods
xchg
xor
jl
push
test
xchg
xor
dec
hlt
xchg
jbe
lds
lcall
mov
shl
jnp
aas
lahf
and
or
jp
outsb
mov
jp
fstp
pusha
sti
repnz
js
adc
jg
sub
bnd
lahf
bnd
mov
jle
lret
adc
bnd
sub
nop
jno
hlt
jns
mov
js
stc
sub
pop
add
ja
sub
and
lret
add
int3
lahf
push
push
es
repnz
aas
lea
cwtl
jno
mov
mov
sbb
add
mov
pop
cmp
pop
push
bound
push
aad
xchg
loopne
jp
or
mov
jp
inc
out
xchg
adcl
lock
adc
or
and
popf
sbb
ret
sub
adc
mov
mov
dec
scas
dec
test
fidivs
aam
loope
adc
xchg
inc
es
pop
addr16
scas
cwtl
jns
and
int3
lods
inc
decb
push
in
cmp
shrl
pop
outsb
add
movsb
mov
sub
lds
mov
add
pop
xor
push
pop
mov
pop
fwait
test
mov
lret
popf
xor
dec
and
xchg
mov
jns
call
or
cmp
mov
mov
xchg
sub
jmp
mov
xor
push
shrl
lea
sbb
popf
xor
std
pop
scas
cs
dec
dec
adc
cwtl
mov
fnstcw
or
adc
pop
dec
das
jns
sti
xchg
mov
dec
in
rcrb
mov
jmp
add
mov
push
cltd
cmpsl
ds
fbstp
adc
xchg
sub
jnp
xor
add
jns
push
test
sbb
cmpsb
ja
mov
inc
or
and
xor
pusha
or
lock
imul
pop
mov
enter
lret
imulb
jl
je
pushw
mov
mov
xor
rcrl
inc
mov
inc
cltd
xchg
pop
lea
enter
or
movsb
pusha
lcall
andl
sub
mov
in
xor
jae
ret
test
enter
sbb
loopne
xchg
insl
jle
or
fadds
xchg
into
mov
dec
sbb
inc
divb
adc
xchg
out
subb
xor
fs
outsl
addr16
or
ret
bound
add
outsb
cmp
mov
mov
in
pop
lods
add
lods
sbb
add
pushf
adcb
mull
mov
cmp
ds
push
sbb
mov
shl
cs
cltd
or
lcall
push
test
lcall
test
lock
sub
mov
xlat
push
outsb
bound
aas
xor
out
andl
sub
es
mov
repz
sbb
es
scas
loope
dec
aam
clc
aas
sbb
andb
out
psubusw
add
repnz
mov
sahf
aas
call
jnp
cld
mov
fdivrl
repnz
and
mov
mov
dec
adc
mov
mov
and
jo
popf
mov
daa
fcoml
push
adc
and
mov
xchg
xchg
mov
in
add
jp
or
out
enter
dec
cmp
inc
jae
push
adc
or
mov
shll
pop
mov
mov
mov
nop
xorl
adc
sbb
setl
lds
out
fistpl
mov
lods
jmp
nop
and
outsb
lock
pop
imul
push
jo
pop
push
test
lock
pop
push
pop
mov
mov
fcoms
push
enter
push
rcll
scas
cs
loopne
cmp
jnp
das
stc
add
jp
ret
cmc
xchg
loope
or
cltd
sbbl
gs
xchg
daa
lods
call
out
mov
daa
add
les
adc
sbb
cli
cmovnp
inc
cmp
test
pop
std
loopne
dec
pop
stc
imul
loopne
int
stos
std
fildll
push
fistl
mov
cltd
cs
sub
mov
sub
dec
in
loope
fcomps
sub
outsb
mov
push
shrl
add
push
icebp
in
jo
xchg
cltd
lods
jne
neg
inc
mov
enter
lea
mov
aaa
lcall
movl
and
dec
mov
inc
lea
cmp
pop
sub
icebp
mov
mov
pop
pop
jns
lods
rcrl
xorl
pop
cs
orb
or
lahf
iret
jnp
out
daa
mov
mov
xchg
fisttpll
jb
xor
dec
pop
mov
xchg
sbb
cld
shl
sbb
insl
rcrb
aad
das
xchg
movq
cmpl
xor
cmpsl
into
test
mov
inc
inc
shlb
arpl
mov
pop
dec
xchg
push
push
xchg
leave
adc
or
cmp
xchg
push
arpl
cmp
pop
insb
or
add
push
pop
cmp
pop
mov
adc
shll
push
mov
sub
mov
in
dec
jmp
popf
js
dec
sub
push
or
rorl
into
sub
hlt
sub
mov
fs
sbb
testl
xor
jmp
sbb
repnz
xchg
sub
test
sbb
jb
xchg
jnp
mov
pop
ljmp
stos
mov
jp
pushf
jmp
jae
out
or
popa
shr
lds
jp
sbb
xchg
inc
hlt
xchg
xchg
dec
in
iret
xor
stc
add
sub
hlt
repnz
rcll
idivl
sqrtps
xchg
out
jbe
and
test
adc
push
loopne
cwtl
cmp
in
mov
dec
inc
dec
stos
leave
mov
mov
test
jae
jge
push
fs
fcomps
mov
xlat
ss
or
jne
inc
add
notl
xchg
loope
lea
mov
dec
pop
sub
es
jnp
pushf
or
mov
xlat
repz
in
jb
push
pusha
jb
dec
cmp
test
movb
mov
pop
cmp
push
fisubrs
data16
jne
cmp
inc
dec
ret
push
fidivrl
enter
cli
dec
push
cmp
outsl
fcompl
jo
shll
cs
sub
inc
inc
sar
lods
mov
ds
pop
jb
mov
cmpsl
icebp
jge
inc
pusha
add
cmc
scas
push
cld
xor
hlt
dec
filds
push
fdivrl
add
xchg
imul
jecxz
pop
mov
js
stos
iret
lods
cmpsl
lock
loopne
xor
fs
daa
adc
call
fstp
push
lods
sub
int3
test
xchg
xor
push
rcrl
mov
popf
jb
push
loopne
adc
inc
leave
and
jae
push
adc
adc
ficompl
jno
cmpb
into
or
xchg
jge
push
fwait
mov
cltd
pop
adc
jnp
pop
jg
pop
adc
movsl
into
dec
lea
fisubl
cmpsb
xor
fcompl
stos
or
cld
sub
and
mov
push
adc
mov
es
fisubl
add
dec
jo
and
lds
loopne
jecxz
call
mov
ljmp
aad
or
sahf
dec
test
loope
aas
dec
jge
arpl
mov
repz
xor
and
add
loop
inc
dec
jge
xorb
out
or
sbb
fwait
or
xchg
insb
stos
addr16
xor
adc
cwtl
in
stos
loope
sub
inc
mov
enter
pushf
sti
cmp
test
pushf
cwtl
jno
jo
je
cwtl
xor
mov
pop
loop
sub
aas
fdivrl
add
andl
add
out
xor
xor
mov
mov
std
add
pop
test
sbb
inc
adc
xchg
aaa
movl
repz
and
cmp
push
sarl
inc
adcl
pop
pavgw
xchg
sbb
mov
movq
call
in
mov
mov
push
xor
add
and
fmulp
mov
mov
inc
icebp
gs
cmp
xchg
mov
xchg
and
adc
lahf
sub
adc
or
ds
movsl
bound
push
popf
sub
nop
jo
sub
dec
push
sub
insl
pop
dec
xlat
insl
rorl
pop
mov
sub
adc
decb
add
xchg
mov
cmp
lods
aaa
in
ds
adc
fisubrl
mov
ljmp
mov
inc
repnz
mov
adc
sbb
sbb
sub
je
xlat
es
xchg
pop
pop
loopne
cld
out
repnz
jnp
or
xor
or
insb
rolb
data16
inc
aad
sub
lret
cmp
movl
lahf
sbb
jbe
and
adc
js
sub
fistl
rep
popf
aam
mov
shl
pop
ja
add
jae
and
mov
das
pushf
xor
or
mov
loopne
sahf
test
roll
les
mov
or
addr16
lock
nop
negb
xor
or
sub
sub
rcrl
jbe
js
orl
adc
clc
cmp
or
or
imul
outsl
push
rorb
fsubrs
test
cltd
xchg
mov
xor
or
adc
std
call
cmpsl
nop
jmp
mov
call
xchg
jg
fstpl
scas
jl
dec
sub
lds
xchg
jmp
push
mov
mov
push
cmpsl
jns
xchg
and
test
adc
pop
inc
in
inc
aas
fistpl
dec
push
or
sub
mov
xor
add
inc
cs
lahf
pop
cmpsb
test
sub
inc
mov
push
mov
adc
aas
cmpsb
mov
adc
je
inc
arpl
pop
bound
cmp
cmp
mov
dec
add
enter
cmp
imul
ja
dec
cmp
js
dec
or
icebp
mov
sbb
int
adc
mov
repz
rol
mov
repnz
xchg
add
pop
jnp
cmp
iret
rcrb
push
xchg
lret
pop
sbb
adc
icebp
jle
insb
pop
cmp
sbb
xchg
dec
sti
aam
jb
pop
sbb
pushf
test
pop
ret
shlb
mov
or
in
popf
loop
repnz
pop
xchg
fsubrl
xorl
adc
sbb
fldcw
xor
xchg
xchg
ljmp
cwtl
lock
add
loopne
cmpsb
in
mov
mov
test
fs
dec
adc
xor
and
mov
test
movsl
mov
xor
jnp
insb
xchg
test
inc
outsb
xor
jns
jl
mov
incb
mov
aam
mov
mov
inc
mov
scas
jb
into
mov
divl
mov
dec
insb
fsubrs
mov
lods
shll
das
pop
lods
xor
push
inc
jp
loop
sti
imul
les
mul
js
leave
push
adc
call
sysret
rcr
in
cmp
test
lds
mov
insl
pop
movl
rorb
insl
pop
inc
mov
sub
xor
insl
xor
mov
adc
leave
add
gs
pop
add
int3
add
repz
sarl
ja
pop
in
addr16
sbb
pop
sbbl
rcr
call
jb
divb
in
in
mov
les
and
filds
push
lds
jmp
cmp
sahf
sub
cmpsl
loope
lea
int3
adc
mov
mov
outsl
xchg
insl
jns
sbb
mov
hlt
rorb
dec
or
mov
mov
xor
insb
mov
mov
call
sub
cmp
stos
mov
call
bound
and
les
orl
js
mov
and
data16
test
lock
mov
cmp
xor
decb
fdivrl
cmp
inc
mov
mov
bound
iretw
pop
sub
pusha
or
mov
dec
les
mov
iret
gs
cmp
outsb
ja
mov
in
pop
mov
jp
insb
pop
scas
sub
dec
jbe
pushf
shll
pop
jg
adc
xlat
xor
mov
add
fs
jl
mov
nop
insl
ja
jmp
mov
icebp
mov
cmp
ds
fucom
in
xor
pop
adc
jle
cli
sub
lea
push
arpl
or
sbb
jo
jo
mov
pop
outsl
adc
xor
push
dec
xor
cwtl
push
mov
loope
pop
cs
mov
es
and
ljmp
nop
pop
mov
sarl
pop
stos
mov
xorb
add
inc
add
pop
cmp
dec
int
mov
incl
add
ret
jnp
push
jno
pop
call
or
mov
shll
inc
fbld
or
sahf
cmpsl
insl
mov
mov
js
fmuls
into
mov
in
cmp
jbe
scas
sub
cmp
dec
or
notl
adc
cld
jmp
and
roll
out
cmp
roll
stos
lret
pop
and
and
lods
lcall
push
das
addr16
pop
and
insl
nop
xchg
fisttps
push
ss
mov
stos
jecxz
cmp
cmp
ss
adc
decl
cmp
aad
int3
cmp
in
sbb
ljmp
insb
cmp
lds
movsb
fcmovu
rorb
dec
lret
cli
rcl
iret
imul
cwtl
mov
and
fstpl
sub
jecxz
rcr
add
cs
cs
pop
pop
add
roll
pop
xor
xchg
dec
rol
dec
xchg
les
repnz
cld
pop
rclb
outsl
sub
repnz
jl
or
ss
xchg
cwtl
cltd
sar
shl
fcmovu
das
je
sbb
jg,pt
data16
loop
mov
popa
jnp
xchg
out
sub
push
repnz
adc
pop
adc
sub
and
jg
out
inc
xor
int3
inc
dec
pushf
inc
ljmp
mov
lock
stos
and
fistpll
cmp
mov
daa
xor
insb
test
add
lret
mov
push
std
adc
aam
shl
sbb
pop
adc
cmp
pop
xor
add
xor
mov
andl
pop
and
call
dec
and
fiadds
push
ja
push
push
fwait
out
addr16
push
je
inc
jne
dec
xor
push
add
and
pop
mov
xchg
fiaddl
test
mov
les
jecxz
sbb
pop
mov
and
jp
cmp
imul
cmpl
mov
pop
je
pop
call
test
repnz
push
sarb
hlt
out
xchg
ret
ja
dec
dec
adc
and
leave
das
aad
inc
pop
xchg
popf
mov
ret
jle
and
ret
push
and
and
push
sbb
lret
les
fstpl
mov
scas
fcmovne
jg
or
xchg
lds
scas
push
les
fimull
shrb
adc
fucom
add
xchg
test
out
lock
add
push
cmp
fimull
xor
out
das
dec
and
pop
add
not
mov
stos
mov
jp
push
xor
xlat
cltd
jne
mov
sarb
sarl
jmp
in
aaa
adc
js
cmp
adc
das
sarb
add
out
test
rcrb
in
repnz
cwtl
mov
test
mov
mov
out
jne
jo
push
test
shlb
pop
dec
sub
cmpsb
pop
aas
mov
int3
add
in
out
add
add
das
pop
pop
test
xlat
pop
test
xlat
adc
and
pop
inc
sub
aaa
cmpsb
dec
loop
push
pop
sti
add
sbb
cltd
cmpsl
pop
into
cmp
xor
push
xchg
xor
nop/reserved
sbb
jbe
fisttpl
cmpb
sahf
andl
imul
and
rcpps
push
cmc
les
arpl
xor
sbb
movsl
adc
stc
lret
mov
inc
lods
xor
mov
pop
sub
sub
lret
mov
mov
adc
pusha
sbb
mov
xor
test
mov
jb
cwtl
or
mov
adc
cmc
movsb
outsb
or
lcall
ss
and
shl
clc
jmp
cmp
fsubrp
cmp
fstpl
jae
and
xchg
test
outsl
and
cmp
repnz
jnp
rcrb
jmp
cmp
aaa
arpl
dec
push
mov
and
rcrl
sbb
aam
xor
movsl
std
lds
mov
mov
js
int3
fbld
ds
test
mov
inc
out
repz
mov
mov
mov
int3
jne
outsl
push
pop
nop
enter
push
int3
out
mov
in
shrl
or
and
pop
push
mov
in
dec
mov
ret
cmp
es
sub
mov
mov
jbe
fstps
in
rorl
mov
mov
movsl
xchg
jle
out
leave
je
add
sbb
jg
xorb
inc
sbb
in
insb
pushf
lea
push
mov
es
and
shl
out
inc
cmp
and
sarb
daa
lahf
fs
push
inc
sar
loope
es
jl
std
mov
insl
or
pop
sar
sahf
arpl
jb
cmp
adc
xchg
sbb
inc
hlt
xchg
add
nop
inc
dec
jae
ret
mov
arpl
xor
sub
or
mov
mov
ljmp
push
fucom
pop
sub
pop
cmp
adc
dec
and
out
dec
sub
stos
jae
imul
arpl
mov
and
rorb
jnp
aad
lcall
xchg
mov
sub
es
outsb
aam
sub
adc
lock
ljmp
adc
and
sbb
ds
popf
je
xor
test
push
mov
or
dec
mov
jo
xchg
mov
jo
xlat
lods
aad
faddl
std
or
test
shll
add
sbb
dec
adc
ja
sub
repz
fstps
std
pop
rolb
mov
lret
fldt
add
popa
jle
idivl
xchg
inc
mov
fimuls
in
cs
aam
fldcw
fcomps
cmp
xchg
xchg
or
mov
inc
out
orl
or
jns
pop
xor
jnp
cwtl
jmp
mov
fdivrl
cmpl
adc
subl
add
cld
out
and
jle
enter
cmp
scas
fisubs
fisubl
aad
clc
push
icebp
lods
mov
imul
imul
sbb
cmp
mov
mov
mov
rclb
jo
xchg
pop
pop
jns
cmpl
rolb
adcl
xor
stos
adc
lcall
movsb
cmp
and
cmp
ja
mov
sbb
rclb
jecxz
das
sub
jo
ds
mov
ror
xor
sub
iret
es
cs
xchg
dec
pop
pop
ret
int
cmp
cwtl
ss
mov
mov
pop
xlat
ss
sti
jle
lret
xchg
lods
add
fistps
pop
insl
mov
and
popl
add
mov
popl
daa
pop
pop
sbb
mov
leave
sub
js
push
lea
scas
or
cld
enter
call
das
push
or
xchg
lea
int3
push
cmp
adc
mov
cmp
cmc
pop
mov
or
in
push
sub
push
gs
cmp
xchg
std
dec
mov
xchg
movsl
sbb
gs
aaa
loopne
dec
pop
xor
in
cmp
xchg
jge
movsl
push
cld
jnp
movsb
icebp
xlat
mov
xchg
orl
aam
nopl
dec
mov
pop
cli
test
and
jne
dec
fsts
shrd
lds
inc
test
mov
out
repnz
call
lret
mov
pop
add
and
inc
mov
ss
push
sub
mov
sub
cmp
adc
inc
pop
out
or
daa
insl
adc
pop
lahf
aaa
inc
test
out
push
fstpt
adc
push
loopne
push
inc
mov
cmp
xor
mov
pusha
or
xor
stc
mov
xor
or
test
ret
push
mov
and
int3
jns
xor
out
cmpsb
popf
flds
inc
push
push
or
and
cld
xchg
int
sbb
inc
mov
inc
out
out
and
fwait
cmp
push
jg
xchg
insl
mov
push
sbb
and
daa
cs
xchg
cld
stos
push
mov
mov
xchg
cmpsl
stos
cmpsl
xchg
orb
orb
std
and
mov
cli
pop
jb
sub
jne
mov
dec
cmpsl
inc
pushf
fisubrs
dec
pop
mov
je
pop
xchg
adc
jbe
daa
sub
ds
pop
sahf
fcomp
lods
ret
inc
fistpl
dec
popf
leave
cs
int3
call
push
outsl
leave
imul
dec
sbb
dec
pop
pop
loope
int3
cltd
data16
cmp
movsb
pop
jp
lods
push
inc
sbb
adc
out
xchg
sahf
or
sbb
push
or
das
gs
fstp
push
movsl
mov
aam
xor
cmpsl
inc
lods
lahf
ds
pop
pop
rol
jl
cmc
imul
or
dec
mov
push
leave
inc
imul
pop
sub
sub
push
add
pushf
jns
les
cwtl
nop
mov
jns
aad
dec
adc
push
jnp
sti
push
dec
test
and
and
sub
push
shll
aam
cld
push
adc
mov
dec
adc
and
jnp
loope
pop
dec
mov
push
ljmp
imul
scas
adc
std
mov
inc
mov
test
cltd
aas
sub
ja
cmp
cmc
sub
out
addr16
aaa
and
fsubrs
push
cmp
sub
les
negl
fidivs
aad
inc
jns
add
dec
sahf
aaa
fwait
adc
setl
dec
gs
xor
out
sti
pop
xchg
ret
cmpsl
inc
jns
out
fiaddl
cli
mov
push
push
shrb
outsb
push
jo
jmp
movsb
into
xchg
mov
push
jo
bound
in
xor
pop
sub
in
nop
cmp
lds
cmp
roll
adc
data16
aam
push
cmpsl
cmpsb
outsb
fisttps
adc
push
repz
inc
adc
cmp
scas
enter
push
sbb
jmp
hlt
mov
jg
addr16
shrl
rcrl
inc
cwtl
fsubrl
pusha
sub
lock
mov
xchg
push
mov
jbe
rcr
mov
pop
fs
jecxz
stc
repnz
rclb
lcall
js
shlb
pop
push
outsb
jnp
xchg
loop
imul
imul
dec
das
stc
sarb
out
mov
pop
adc
and
ljmp
gs
and
fucomip
mov
push
inc
pop
jae
mov
fimull
call
pushf
outsl
mov
cmpsl
mov
jae
mov
aas
mov
mov
inc
lcall
or
and
fs
incb
inc
sub
adc
cmpsb
lcall
xor
pop
lret
jmp
pop
inc
mov
arpl
imul
mov
outsl
push
sbb
inc
sbb
mov
dec
mul
jae
nop
imul
out
cwtl
nop
ret
es
add
mov
jae
xor
dec
lcall
xchg
stos
pop
sbb
pop
out
fisttpll
mov
dec
add
lods
xchg
mov
add
jl
test
cltd
adc
sub
cmp
out
inc
sub
je
out
mov
add
pop
fs
pop
call
xchg
cwtl
mov
aas
into
dec
leave
mov
pop
imul
in
jnp
push
insl
cltd
out
xchg
jp
jl
cld
imul
mov
dec
add
or
push
cs
pushf
lahf
imul
push
sbb
mov
idiv
add
jle
push
popa
sub
add
pop
ret
and
jg
xchg
and
je
bound
int3
ljmp
xchg
cld
outsb
ja
cmpb
pusha
pop
popf
push
pop
fs
push
and
jns
int3
sbb
xchg
int3
jns
out
cltd
push
fs
add
xor
mov
mov
mov
xchg
ss
cwtl
lcall
mov
fxch
imul
jmp
xor
jmp
movsb
xor
in
sbb
in
aam
and
data16
push
fsubrl
movsl
in
pop
call
jb
enter
inc
mov
es
icebp
cmpsb
test
fwait
mov
es
aam
or
dec
add
test
mov
inc
jb
out
movsl
or
popf
dec
inc
mov
aas
sbb
jle
or
aaa
shl
loop
popl
in
lds
mov
mov
adc
or
shrl
int
lcall
lods
call
xorl
push
in
mov
jnp
xor
shr
dec
mov
rolb
outsb
stc
pusha
repnz
dec
jp
cltd
pop
scas
mov
test
pop
hlt
fsubs
inc
das
sub
mov
cmp
xorb
jecxz
in
aad
jecxz
popa
push
xor
inc
ret
add
jo
imull
loopne
mov
roll
mov
xchg
adc
jmp
std
call
cmp
addr16
sub
inc
adc
jno
dec
aam
jp
dec
mov
inc
pop
mov
sbb
shr
fstps
pop
and
adcb
xchg
adc
inc
fisttpll
repnz
jnp
push
sub
call
or
mov
cmpb
jmp
xor
int
sbb
jns
or
cmp
test
sbb
in
cltd
int3
inc
lds
push
stos
insl
movsb
xchg
clc
add
add
lret
and
movsb
lods
add
dec
out
lock
fsin
xor
pcmpgtw
testl
call
adc
jle
imul
sbb
lret
jl
cld
mov
sbb
pop
dec
lock
sub
sbb
insb
adc
shlb
orl
add
jb
hlt
push
data16
subl
push
dec
test
enter
push
jnp
adc
or
mov
aaa
pop
sub
sub
das
cs
fstps
add
mov
arpl
sub
jle
jnp
and
or
and
testb
adc
rep
cld
cmp
xchg
orl
push
fldl
out
inc
fwait
push
mov
adc
mov
mov
ret
pop
push
cmpsl
testb
rorl
ret
pushf
lret
pushf
in
cmp
jo
jl
aad
cmp
jne
mov
test
cmc
ss
xchg
loope
loop
lcall
xchg
lea
inc
xor
xlat
push
je
fmull
rcll
dec
add
insl
in
push
addb
mov
mov
aad
sub
xor
push
jg
mov
leave
ljmp
xchg
cwtl
js
lret
mov
outsl
add
or
cmpsb
jnp
pusha
in
roll
cwtl
inc
jns
insb
dec
push
lcall
outsb
push
scas
mov
fcoml
sbb
jg
cwtl
jge,pt
jbe
or
push
fwait
lcall
mov
idivl
dec
dec
stc
lret
inc
out
bound
or
dec
mov
into
push
pushf
pop
or
fisubl
imul
fwait
lds
aas
xchg
inc
and
imul
adc
sub
cwtl
lods
or
push
cwtl
pushf
repnz
mov
test
mov
arpl
sti
rep
mov
add
adc
push
orb
xchg
sbb
jmp
jmp
aad
cltd
hlt
cmp
loope
jecxz
mov
ljmp
mov
stc
xorb
mov
add
jl
aam
movsb
call
fwait
movsb
or
sub
fidivrl
jbe
pop
xorb
out
adc
xchg
push
jae
test
sbb
sbb
mov
and
dec
jae
cmpsl
mov
xchg
sbb
rcrb
sbb
push
es
mov
cs
jne
dec
es
scas
shrl
rolb
cwtl
sub
lock
imul
fs
xchg
call
mov
xor
xor
mov
loop
jno
xchg
add
sub
pop
mov
inc
dec
movsl
mov
insb
stos
pop
lret
bound
xchg
adc
mov
sub
cmp
mov
lds
inc
xlat
add
and
and
mov
inc
fdivs
xchg
stc
fnstenv
mov
out
pop
sti
lds
testb
out
mov
roll
test
adc
in
cmp
mov
inc
fsubp
and
gs
add
aaa
jbe
test
les
push
test
adc
pop
mov
or
movsl
aad
rolb
dec
punpckhbw
add
xchg
sub
xchg
mov
mov
ret
pop
mov
imul
and
cltd
gs
shrl
xchg
stos
rcrl
sub
or
xchg
inc
xlat
xor
push
jmp
jns
xor
push
cmp
push
sbb
mov
sub
mov
out
nop
loope
xor
mov
dec
and
mov
bound
xor
lahf
mov
push
fnstcw
lea
cli
fdiv
stos
or
cld
adc
enter
sbb
dec
cmpsl
push
outsb
push
sub
jb
and
rorb
arpl
test
movsl
les
loope
bound
mov
clc
xchg
xchg
daa
rolb
loope
jo
stos
add
enter
sub
inc
xorb
repnz
in
push
lods
mov
lret
bndldx
add
lock
movsl
cmp
pop
and
data16
pop
div
dec
xchg
imul
js
cmp
or
add
aaa
cmp
dec
cmpsl
xchg
in
sbb
test
enter
and
mov
iret
and
jl
pop
jp
mov
push
and
insb
xchg
stos
jg
sbb
stos
outsl
push
sbb
enter
ja
adc
movsl
cmp
fwait
call
jmp
dec
jecxz
loopne
mov
pop
das
add
out
jl
scas
inc
xchg
push
jge
test
mov
pop
dec
out
pop
inc
clc
push
jg
dec
popa
jbe
or
rcrl
add
inc
ds
sbb
mov
nop
daa
push
xor
inc
ja
cmp
or
sbb
aam
das
rclb
popf
xchg
bound
xchg
mov
pop
push
hlt
cld
xchg
lret
aaa
mov
sbb
xchg
or
nop
bound
xchg
sbb
xchg
xchg
jno
ret
mov
mov
scas
out
xchg
mov
or
fidivl
xor
mov
lock
into
testl
imul
or
shlb
ss
daa
lret
bound
insb
sbbl
cli
inc
fucomp
scas
lods
inc
and
jb
adc
push
out
ljmp
or
sub
pop
jge
nop
jnp
lea
movsl
sub
inc
jnp
cmp
cmp
in
push
pushf
xor
data16
ds
xchg
out
lret
mov
cmp
inc
out
je
or
sbb
pop
or
sbb
and
sub
fbstp
dec
jmp
jg
push
out
lahf
mov
shrl
dec
loopne
repnz
and
jle
inc
stc
jne
inc
cwtl
add
push
ljmp
mov
fidivs
rcrl
xchg
outsb
int3
xchg
cmp
add
sbb
cmp
and
and
and
xchg
lods
repz
pop
dec
dec
xchg
shlb
addr16
mov
bound
fistpll
fnstsw
xor
sbb
cmp
xchg
daa
fadds
in
or
dec
test
sub
xor
jl
add
xchg
cli
fdivr
loop
inc
imul
jns
ss
and
ljmp
add
adc
jl
cwtl
mov
es
rorb
popf
popf
das
xchg
sub
xor
dec
sbb
inc
dec
inc
add
iret
subl
sub
ss
mov
lock
xchg
data16
repnz
stos
scas
ljmp
cwtl
out
push
enter
sbbl
adcl
jae
rcl
fsts
out
cld
bound
dec
idivl
fnstcw
or
into
gs
and
xchg
ret
or
jnp
and
xchg
pop
inc
fmull
in
add
imull
inc
fisttpll
fsubrs
xchg
add
lret
mov
xor
int
adc
int3
arpl
aam
xchg
dec
jecxz
or
jp
testb
pop
aad
popl
out
xlat
decb
xor
mov
mov
daa
and
mov
push
xchg
pop
cmp
jbe
or
jge
sbbl
repz
cld
repnz
pop
sbb
pusha
neg
inc
push
out
jno
imul
lcall
sub
mov
sub
jo
cmp
mov
ja
add
push
sbb
in
xor
inc
xor
pop
lock
or
or
sub
xor
daa
fbstp
xor
xor
aaa
cbtw
das
push
das
int
pusha
xchg
xchg
sub
jnp
push
lods
dec
es
mov
test
jb
and
repnz
xchg
mov
or
shrl
cmp
movsl
fisttpll
sub
adc
sub
int3
xchg
rolb
jns
mov
xchg
jb
xchg
leave
stc
nop
cli
popa
inc
fcoms
cmp
cwtl
jl
or
cmp
pop
aas
jbe
aas
sti
xchg
scas
push
sbbl
sbb
popa
js
push
pop
lds
les
push
out
pop
push
out
xchg
adcb
xchg
sub
cmc
insb
add
jecxz
les
mov
and
xor
insl
add
inc
inc
xlat
xor
in
inc
jne
cmp
lods
inc
push
dec
mov
movsl
dec
testb
dec
cmp
aas
pop
into
gs
dec
jns
aas
aad
les
push
mov
inc
pop
mov
data16
insl
add
gs
out
pop
out
cmpsb
pop
pushf
xor
dec
orl
cmp
inc
jbe
xor
cmp
lods
fiadds
inc
and
sbb
xchg
retw
pop
cltd
ljmp
add
call
outsl
inc
mov
adc
cmp
lahf
popf
fbstp
enter
push
rcrl
ja
adc
pushf
xor
dec
or
xor
dec
cwtl
xor
movsb
ret
hlt
cmpsl
sub
push
out
out
xchg
push
sbb
insl
mov
movsl
dec
out
mov
mov
sub
lea
xor
nop
addr16
nop
sarl
mov
dec
out
stos
cmp
fsubl
loopne
cmp
mov
push
lcall
mov
movsl
pop
inc
mov
lock
aaa
nop
daa
cmpsl
pushf
add
adc
pop
dec
out
xchg
inc
xlat
mov
jp
cld
dec
jecxz
mov
mov
cmpsb
pop
mov
and
xor
sub
adcb
test
popf
mov
clc
jo
cwtl
das
fidivs
push
arpl
sub
cmp
mov
aad
push
xchg
insb
add
dec
lock
cli
xchg
dec
aas
jae
scas
xchg
movsb
cmp
scas
in
test
adc
inc
pop
jo
push
fwait
loope
int3
xchg
lock
pop
jl
dec
dec
outsl
push
cmp
std
xchg
popf
push
mov
add
lods
clc
and
sbbl
or
cmc
mov
sub
pop
push
adcb
and
jg
lods
js
fdivrp
es
or
mov
and
jg
mov
inc
fcmovb
pop
fbstp
sbb
sub
sbbb
lahf
fidivs
adc
stc
inc
aas
es
lahf
rcrl
fbstp
or
pop
nop
daa
push
and
popf
test
cwtl
das
mov
mov
push
insb
inc
imul
pop
popf
addr16
mov
test
inc
xlat
inc
repz
outsl
push
dec
cmp
push
dec
xlat
fbstp
sahf
adc
sbb
lods
inc
dec
sbb
adc
repz
adc
out
xor
sub
xor
mov
xchg
sub
ret
add
push
aas
pop
shlb
ds
or
mov
inc
and
sub
fidivs
lcall
xchg
sub
xchg
cmpb
repz
test
push
pop
loop
push
mov
loop
out
dec
rclb
pop
sahf
xchg
stc
or
mov
mov
cmpsb
cmp
popf
pop
cmp
loopne
push
aam
lret
sbb
stos
mov
or
lret
push
movsl
sti
mov
mov
push
xor
imul
in
orl
bound
xchg
sub
clc
shrl
rolb
add
mov
ret
pop
rcl
insl
add
in
sbb
pop
dec
in
ljmp
pop
sbb
dec
out
aam
pop
enter
cld
or
jnp
mov
sbb
xlat
push
xor
cltd
imul
push
pusha
les
mull
sbb
adc
add
inc
jnp
ljmp
cmp
jg
scas
sbbl
out
adc
pop
xor
dec
inc
and
je
cli
xchg
add
push
mov
mov
jnp
stos
testb
sub
pushf
xor
add
mov
cmpsl
ds
lods
push
in
fimuls
mov
cmp
jp
push
repnz
shl
xor
sbb
stos
mov
fwait
xor
sarb
cwtl
cmpsb
cmp
es
rolb
mov
cltd
mov
xsha1
cmpsb
iret
or
cmp
ljmp
ret
lret
bound
mov
pop
hlt
loopne
mov
inc
cli
call
divl
mov
fsubp
jb
shlb
mov
sbbl
daa
iret
pop
repnz
mov
mov
popf
xor
mov
lds
mulb
out
xchg
shrl
cmp
arpl
inc
fxch
je
or
jnp
or
push
lcall
xor
pushf
mov
jne
push
or
fldl
and
in
sub
aaa
into
fimuls
pushf
xor
aam
push
enter
inc
or
jp
inc
jns
inc
insl
adc
jo
jo
mov
shll
adcl
mov
xchg
ljmp
dec
out
cmp
stc
mov
movsl
cld
xchg
lods
loopne
and
cmpsl
ds
and
mov
pushf
cmp
into
sbb
jnp
add
jle
les
jb
push
and
pop
mov
outsl
adc
or
inc
add
xor
sub
adc
mov
movsb
into
xlat
sbb
or
lret
lcall
mov
mov
xchg
sub
xor
lods
cmpsl
sbb
lds
out
push
xchg
shlb
push
adc
push
mov
jo
mov
movsb
jmp
in
fidivl
push
push
jmp
rcrb
out
test
push
movsl
mov
mov
aam
sub
sahf
pushf
sub
pop
fucomip
or
push
pop
sahf
jge
mov
fisttpll
adc
push
pop
xor
mov
movsl
rcrb
add
inc
fprem
inc
insb
add
popa
clc
dec
jge
xor
lods
test
fidivrs
mov
dec
adc
mov
mov
clc
mov
or
scas
cmp
ds
jbe
ss
nop
cwtl
pop
icebp
lret
out
in
jp
pop
pop
ja
cmp
xchg
sub
lea
scas
inc
fsubp
shrl
add
xor
repnz
in
test
movsb
pop
lcall
and
out
inc
inc
fidivs
push
rclb
sbb
out
jg
sbb
cmpsb
cmp
popf
xor
ret
pop
mov
jge
loopne
je
sub
xchg
pop
aaa
sti
xchg
imul
mov
sarb
rolb
fnsave
into
push
and
push
das
push
in
pusha
jne
push
cmpsl
xorl
cli
aam
sub
sbb
dec
dec
daa
scas
inc
pop
outsl
shrb
jp
lods
ret
cmc
scas
jmp
pop
out
xchg
sub
pop
or
imul
dec
loopne
mov
imul
clc
cli
xchg
sub
movsb
cmp
stos
inc
dec
jg
aad
jp
fs
loopne
mov
sbbl
mov
sbb
leave
inc
jns
push
stos
test
divl
or
std
sti
xchg
das
cmc
mov
imul
aaa
into
mov
mov
cli
xchg
test
ss
lods
pop
sahf
pop
xor
pop
fs
adc
mov
inc
xlat
add
dec
loope
push
lahf
cmp
inc
fcoms
mov
sbb
sub
test
movsb
shrb
add
scas
ss
testl
stc
jnp
jmp
cld
xor
out
mov
test
out
stc
nop
daa
das
or
aaa
xor
push
jae
arpl
mov
jmp
lahf
sub
mov
bound
inc
fldt
mov
sbb
es
sbb
in
inc
and
lea
popf
mov
out
xchg
xor
mov
loope
sub
mov
sub
jge
sbb
insb
xchg
xchg
mov
add
sbb
mov
or
add
pusha
int3
arpl
int
or
sahf
call
es
ja
pop
scas
subl
lahf
ret
mov
fidivs
mov
lods
daa
loop
pop
adc
pop
mov
dec
and
dec
in
clc
xor
jmp
out
xchg
jmp
sbb
lea
lods
inc
mov
sub
add
pop
aad
mov
decb
das
jge
lahf
push
stc
nop
xchg
mov
mov
int3
add
jnp
das
mov
rorb
lahf
rep
add
call
leave
pusha
mov
jne
stos
inc
sub
jne
pop
mov
push
mov
in
test
and
pop
aas
mov
lds
data16
lcall
imulb
add
mov
and
push
insl
xchg
stos
inc
or
gs
xchg
sub
fucomp
test
adc
shll
lods
inc
imul
push
in
mov
mov
imul
sub
fnstenv
xor
mov
loopne
mov
xor
mov
imul
mov
jg
repz
dec
ds
xor
xchg
imul
fwait
fwait
std
xchg
or
fsubrs
cmp
lock
and
cmp
sarb
stos
insl
loop
mov
jne
inc
cmpsl
loope
or
mov
fsubrs
ljmp
fiaddl
and
xchg
loopne,pn
ss
adc
insl
or
pop
std
mov
sub
out
icebp
sbb
data16
mov
sahf
xor
xchg
mov
xchg
adc
sahf
xor
cwtl
xor
js
sbb
jl
push
out
test
or
and
xchg
repnz
jle
cmp
xor
jbe
out
mov
jbe
shl
repnz
mov
and
jle
jne
dec
ss
mov
enter
iret
inc
mov
sahf
xor
sbb
dec
cmc
mov
rol
push
repz
pop
nop
ljmp
enter
pop
or
pop
jnp
in
test
jp
dec
push
mov
dec
pop
jns
add
ret
cmp
dec
dec
pop
call
push
fcoml
std
scas
inc
out
call
ret
xor
push
sbb
loopne
lret
aam
push
enter
inc
sbb
testb
xchg
fimull
mov
cmp
lahf
lea
ss
push
fistpll
into
mov
pusha
mov
cmpsb
jae
fld
jp
mov
mov
mov
pop
sub
jmp
shrl
pop
sahf
orl
fwait
xor
mov
shrl
sub
jns
cmpsl
insl
add
loopne
adc
add
cmpsl
xor
and
xchg
mov
popa
lds
jecxz
leave
dec
loopne
mov
out
clc
mov
shlb
pop
imulb
in
int
mov
fidivl
scas
outsl
push
loope
imul
cli
adc
dec
xor
inc
jno
push
in
scas
andl
ljmp
add
inc
insb
add
inc
adc
xor
inc
fwait
inc
mov
cmp
dec
out
dec
pop
repz
icebp
mov
dec
hlt
mov
cmp
xor
xor
mov
shlb
inc
in
sbb
sbb
inc
jecxz
js
es
bound
xchg
jns
mov
std
sahf
mov
push
out
cmp
inc
or
xor
cmp
jae
mov
ss
popf
xor
ja
idivl
or
push
cmp
xchg
push
jae
in
push
out
xchg
outsb
jl
pop
ljmp
fs
sub
ja
sti
xchg
push
jo
insb
mov
mov
js
mov
stc
nop
daa
mov
inc
mov
xchg
aad
push
leave
testl
shlb
mov
test
jne
fsubl
rcl
repnz
imul
mov
adc
push
arpl
pop
cmp
dec
out
cs
add
call
inc
fadd
inc
mov
jbe
out
xchg
int
mov
sub
or
fmuls
mov
out
jl
dec
scas
in
dec
fnstsw
mov
fsubp
jecxz
cmp
fldcw
add
add
dec
test
cmpsl
mov
mov
mov
rorl
movsl
cld
dec
repz
xor
int3
arpl
subl
icebp
fdivl
xchg
cmpsl
push
add
out
das
cmpsl
dec
popa
clc
test
in
jns
loopne
out
jbe
fbstp
fs
cld
lea
shll
or
mov
jg
push
push
imul
imul
lods
xor
aas
pusha
xor
mov
mov
add
push
scas
inc
dec
in
mov
ret
pop
cmpsl
hlt
ret
pop
daa
cmpsl
pop
sahf
push
inc
pop
hlt
jb
int3
arpl
call
inc
mov
push
out
loop
rclb
inc
dec
in
andl
ja
cli
xlat
inc
faddp
in
and
push
pop
jbe
xor
xorb
push
imul
pop
call
cmp
or
shll
push
cmp
inc
cmp
xor
push
mov
mov
mov
test
mov
stos
fimuls
pop
sub
mov
popf
js
scas
inc
shll
xchg
icebp
xor
in
push
call
xchg
jmp
sbb
xchg
sub
pop
scas
inc
dec
outsl
daa
mov
repz
stos
inc
jae
mov
shl
xor
arpl
stos
inc
ja
mov
shl
mov
aam
or
jbe
sahf
cmp
or
lods
inc
sahf
jle
repz
mov
fisubl
mov
stos
inc
inc
icebp
cwtl
das
and
cmp
shrl
pop
ja
imul
outsb
add
int3
sti
adc
xorl
dec
movsb
lods
inc
sbb
icebp
lods
cmp
popa
imul
adc
mov
and
in
nop
mov
call
in
dec
addb
push
repnz
adcb
das
xchg
ss
jno
sub
and
rcl
jg
adc
repnz
jecxz
scas
jg
push
repz
adc
push
scas
inc
mov
jb
jge
cmpsl
cmp
fists
movsl
xchg
or
fwait
mov
xchg
cs
pop
int
pusha
inc
sub
lahf
enter
inc
shrl
mov
mov
sti
mov
adc
jno
lods
inc
outsb
dec
out
lret
cmc
push
in
fnstenv
jb
test
andb
out
sahf
nop
sub
ja
sub
jmp
fnop
or
fildll
test
xchg
sub
orb
mov
mov
test
sub
fldenv
xlat
pusha
cli
fsubrs
add
inc
or
leave
pusha
adc
mov
sub
jl
mov
ficompl
cs
xor
add
pop
decb
out
cld
jb
adc
add
mov
mov
push
cmpsl
ja
adc
dec
dec
in
xchg
int
mov
xor
pop
cmc
pop
repnz
fs
jb
sbbl
add
les
pop
mov
push
sub
jmp
imul
dec
pop
mov
push
jmp
sbb
fs
add
test
jl
mov
cmpl
jle
lods
stos
fwait
xor
lock
test
scas
sbb
stos
shl
or
jecxz
aam
inc
cmc
movsb
cmp
popf
in
test
or
arpl
pop
xchg
fwait
out
or
cs
lock
icebp
sti
xchg
sub
int
xor
xchg
sub
xchg
add
fldcw
mov
cli
or
test
mov
jns
push
lahf
fdivl
clc
mov
and
cmpsl
movsl
ret
add
mov
mov
fimull
sbb
pop
repz
xor
adc
adc
or
ds
in
pop
sbb
xchg
sub
loop
cwtl
das
mov
fnstsw
mov
mov
inc
jle
jle
cld
xchg
je
jge
inc
xchg
mov
pop
jecxz
add
cmpsb
cmp
cld
mov
mov
xlat
dec
out
test
fnstenv
jp
or
outsl
aaa
jne
add
xchg
sub
mov
mov
jnp
sbb
mov
shrl
push
sbb
je
dec
fbstp
sbb
pop
inc
fimull
pusha
pop
fwait
repz
pop
fnsave
fsubrs
sbb
cmp
ret
pop
nop
loopne
lds
addr16
and
fs
add
iret
cmpsl
pop
cmc
out
push
xor
dec
mov
mov
enter
push
lods
mov
insl
sub
jo
push
ret
jl
xchg
xlat
fnsave
xor
and
pop
divb
mov
push
dec
push
adc
cmp
sbb
pop
jns
jge
arpl
clc
xor
xchg
cmp
leave
and
cwtl
mov
pop
sub
push
aas
dec
sbb
subps
rorl
jb
fldcw
pop
pusha
jge
scas
mov
mov
test
filds
cmpsb
inc
fistl
or
jle
out
add
int3
xor
mov
fisubs
iret
lea
loop
dec
loop
add
shll
push
adc
jno
loope
sub
sub
dec
pusha
idivl
lcall
pop
nop
daa
xchg
cld
arpl
ljmp
lcall
sub
jbe
mov
ds
stos
lock
cmp
lret
cmp
ds
sar
xchg
ret
xlat
jno
fidivl
sbb
jb
idivb
add
or
cmpb
into
pushf
cmpsl
ds
jb
nop
subl
fbstp
rcrl
stc
add
out
mov
mov
or
push
pop
nop
or
and
arpl
aam
xor
int3
arpl
lds
mov
rcl
cli
xchg
leave
jbe
xor
xor
iret
cmp
fnclex
jns
adc
lret
aam
aas
adc
ss
test
sub
mov
fsubr
or
lock
loop
cmp
sbb
and
dec
loopne
xchg
mov
cmpsb
int
leave
pusha
pushf
pop
hlt
lcall
lcall
mov
push
popa
lods
inc
push
cli
or
addr16
fnsave
and
lds
mov
lea
jns
scas
loope
and
stos
push
add
jbe
push
add
dec
out
ret
jns,pn
push
imul
test
std
xchg
push
jmp
push
jmp
mov
and
mov
xchg
xor
test
inc
push
test
in
push
in
sbb
ret
pop
mov
sub
jnp
sub
dec
loope
mov
pop
add
das
andb
lods
xchg
sub
xchg
and
inc
xchg
cmp
fidivl
pop
cwtl
das
dec
lahf
int3
arpl
pop
mov
popf
addb
arpl
repz
cmpsb
lea
fcomip
mov
mov
dec
jmp
test
xlat
shrl
lcall
cwtl
add
jbe
lock
xchg
int
or
push
popf
push
sub
jo
scas
and
sarl
cmp
lods
push
lret
inc
push
out
movsl
cmp
and
push
ja
shrl
in
and
arpl
add
scas
inc
fsub
scas
icebp
mov
mov
fiadds
mov
test
inc
xor
sbbb
add
shrl
jp
nop
insb
into
adc
lcall
pusha
lods
and
into
xchg
inc
fbstp
mov
mov
bound
xor
push
dec
jecxz
loop
xchg
sub
inc
pop
vcvtdq2ps
mov
lea
sahf
loopne
lock
mov
sahf
xchg
sub
inc
inc
fdivl
xchg
shrb
pop
iret
dec
jle
vmwrite
test
xor
dec
sbbb
icebp
call
or
shlb
hlt
stos
cmp
ljmp
ss
ficomps
iret
out
or
loop
dec
loope
add
je
adc
pop
pop
pop
icebp
xchg
push
lcall
ja
clc
mov
es
jle
inc
leave
inc
fisttpl
movsb
xchg
jbe
jbe
outsl
cltd
mov
mov
sbb
push
inc
lods
lods
inc
pop
ljmp
xor
add
pop
repnz
addr16
popa
dec
in
jp
adc
jno
jne
lcall
outsb
add
xchg
out
mov
mov
mov
or
mov
push
jmp
xchg
imul
pop
aas
push
out
jle
bound
mov
sbb
cmp
loop
clc
xchg
xchg
pop
cmc
les
jl
pop
or
xor
push
ljmp
jno
loopne
insl
adc
nop
daa
xor
hlt
outsb
arpl
scas
and
rcll
jg
sbb
jb
xchg
cmp
rorl
adc
jb
cs
mov
and
jne
push
push
insl
xchg
pop
gs
mov
and
pop
int
cmp
sub
push
adc
or
pop
movsl
xchg
pop
test
in
clc
jecxz
adc
sbb
dec
ss
xor
and
mov
outsb
push
adc
inc
das
cmc
mov
jge
xchg
adcb
mov
fwait
xor
aam
enter
push
cmp
dec
out
pop
fsubrs
js
add
mov
loop
mov
std
add
inc
push
push
xor
xchg
pop
mov
out
idiv
outsl
push
sub
add
and
push
mov
sarl
push
loop
xor
ds
repz
add
adc
adc
or
nop
es
movsl
cli
mulb
mov
mov
mov
xchg
andl
ss
loopne
or
icebp
fdivr
popf
pop
das
push
addb
jmp
adc
negl
and
fnstcw
test
leave
int
fwait
iret
xchg
fidivrs
in
call
or
cmp
sub
mov
dec
loop
xor
pop
add
addr16
push
out
test
test
mov
push
sti
sub
sub
stos
inc
cmpsb
dec
dec
fistpll
enter
data16
rcrb
out
dec
icebp
test
and
pushf
lahf
inc
mov
mov
leave
adc
inc
ljmp
xchg
cmp
jle
jmp
or
fimuls
dec
dec
dec
shrb
rolb
cmc
mov
aam
stos
add
jle
shrb
jb
ds
pop
int
push
cld
shlb
mov
rolb
fisttps
std
sub
pop
push
pop
je
xor
push
scas
shr
xor
fists
call
mov
iret
aam
das
enter
push
mov
test
imul
add
stc
add
inc
xor
push
movb
pop
sahf
add
out
lock
nop
daa
js
sbb
sarb
test
jbe
inc
dec
popa
clc
cmp
adc
add
sub
inc
add
movsl
cmp
enter
insl
xor
les
push
pusha
incl
out
fs
or
add
in
test
inc
ficompl
scas
nop
aaa
pop
js
incl
dec
xor
sahf
jbe
out
aam
pop
leave
rolb
inc
add
loope
movsb
lret
dec
fsubp
fsubs
lods
mov
test
pop
cwtl
and
jne
aam
daa
xor
jns
fadds
xchg
gs
mov
arpl
pop
jo
lret
cmc
cmp
inc
popf
or
lahf
mov
mov
sbb
mov
nop
push
ret
std
or
pop
clc
loop
adc
pop
lret
xor
push
and
sub
aaa
cli
xchg
inc
pop
sub
imul
test
push
sub
cs
sub
cmpl
or
xlat
pop
aam
inc
inc
mov
iret
scas
dec
scas
add
shr
cmp
in
mov
jp
outsb
xchg
test
xchg
sti
jl
into
dec
mov
cmpsl
push
aam
jnp
daa
inc
jmp
into
imul
mov
fwait
loop
cmpsl
outsb
jns
lahf
scas
ret
dec
fcoml
add
shrb
xor
sbb
call
push
repnz
std
out
cmpsb
mov
xor
je
mov
int
cld
mov
cli
and
xor
out
out
sub
outsl
sbb
hlt
xor
rorl
pop
outsb
ja
addb
add
or
out
xor
add
inc
mov
ss
fiadds
jecxz
mov
and
sub
scas
rcll
dec
inc
fdivrl
int3
inc
movsl
into
sbb
mov
cmp
cmp
adc
sbb
inc
jp
in
adc
std
inc
dec
fs
scas
sbb
jmp
arpl
push
mov
sbb
dec
jg
sub
mov
pop
jae
popf
imul
or
pop
fs
in
push
fdivrl
stos
add
out
test
dec
cs
mov
inc
fcoml
mov
sub
dec
mov
mov
add
jne
scas
popf
out
or
inc
filds
ljmp
add
repz
and
ds
std
mov
mov
jmp
xor
jmp
gs
lret
cmp
push
add
xor
stos
sbb
stc
mov
cwtl
mov
push
inc
inc
lea
pusha
addr16
sarl
and
push
add
lods
out
imul
mull
jbe
mulb
or
lock
into
or
inc
xchg
and
inc
pop
rcrl
outsb
in
mov
data16
inc
jp
loopne
fidivrs
test
inc
sbb
not
repz
popf
xor
fisubrs
rol
push
push
adc
sbb
xor
xor
addr16
mov
cmp
lret
clc
xchg
test
add
imul
jl
js
roll
pop
in
or
pop
inc
sub
and
or
stos
mov
enter
js
mov
pop
mov
shlb
aad
lds
inc
sbb
clc
push
sbb
fwait
mov
xchg
roll
cwtl
mov
int
in
lods
xchg
pop
jo
pop
sbb
int3
out
in
dec
data16
loopne
jle
lods
fstl
mov
adcb
and
std
push
push
in
pop
rcll
dec
js
loop
push
and
mov
xchg
cmp
adc
pop
cld
mov
xchg
pop
aad
mov
lahf
xchg
and
sbb
ds
xchg
push
or
test
or
imul
push
jmp
outsb
lea
jg
popf
addb
add
xchg
les
sbb
int
stos
inc
and
lahf
pop
icebp
pop
push
in
sub
sub
adc
and
cli
mov
imul
fdiv
orb
xchg
add
cmp
std
arpl
and
call
sti
fnstcw
pop
mov
jp
jg
test
inc
mov
fs
add
cld
cmp
xchg
shrl
lahf
inc
or
mov
in
jbe
imul
mov
pop
add
mov
ljmp
mov
out
dec
pop
push
int3
sbb
push
ret
pop
insl
adc
mov
mov
stos
js
mov
sbb
sbb
orb
fdivrl
sub
sbb
fsubs
test
ret
bound
pop
inc
jp
lret
push
push
clc
jmp
call
jns
xor
push
loop
mov
cld
xchg
daa
mov
in
xchg
xor
mov
sub
es
test
jle
imul
pusha
ja
out
jp
movsl
int
das
add
xor
movsl
inc
cwtl
lahf
movsl
paddb
outsl
add
xlat
mov
xchg
mov
push
mov
out
test
mov
dec
ja
pop
lock
int3
das
aam
inc
sbb
adc
xchg
cmc
inc
xchg
xor
std
movsb
xor
mov
mov
add
in
mov
cmpsb
add
ret
in
mov
daa
ret
jno
or
outsl
xlat
rorb
xchg
push
test
lahf
xchg
sub
cmpsb
ds
mov
sub
mov
andl
pop
fdivrs
lret
inc
dec
call
fsubs
and
push
testl
dec
or
jbe
lods
jns
mov
stos
nop
adc
mov
imul
jmp
dec
lods
loope
adc
or
ljmp
arpl
pop
inc
xchg
xor
sbb
and
in
sub
int
or
cli
or
sbb
repnz
xchg
jge
sbb
sub
in
or
insl
cltd
jae
insl
in
adc
dec
js
cmc
imul
pop
jg
pop
jb
sbb
lds
lods
pusha
ret
xchg
rorl
fisubrl
dec
add
pop
mov
mov
pop
gs
stos
in
test
idivb
ror
stc
mov
stos
fistl
mov
add
dec
iret
std
stos
in
xor
cmp
adcb
subb
sbb
ljmp
out
sbb
sub
sub
mov
xchg
mov
dec
and
dec
add
ljmp
inc
repz
mov
mov
cmp
divb
or
int
jl
xchg
ss
xchg
jnp
je
sub
mov
cld
push
scas
jbe
imul
push
xor
stos
aas
xchg
mov
jge
insb
xor
aad
mov
sub
jnp
fwait
and
sbbb
lods
jne
mov
lret
test
ljmp
shl
test
jmp
in
mov
popf
mov
sar
leave
dec
gs
sbb
cmpsl
mov
cmpsb
sub
test
sub
jge
push
sarl
cmp
add
or
or
xor
ljmp
or
jae
and
mov
stc
nop
mov
cmpsl
test
pop
scas
loopne
cs
ss
sbb
dec
push
push
jmp
insl
imul
movsl
jb
xlat
in
lahf
adc
aaa
es
jge
inc
fstpt
push
lock
out
and
push
test
lret
cld
xchg
xchg
sub
sbb
mov
sbb
jno
cmp
outsb
idivb
lods
scas
pop
testb
imul
and
push
mov
jo
movsl
sqrtps
inc
mov
imul
xor
lea
push
gs
pop
adc
jecxz
pop
push
and
scas
push
lret
cld
das
xor
ss
adcl
mov
jle
gs
popa
mov
insl
and
sarb
icebp
adc
pop
cmc
inc
xor
fstl
scas
push
int
sbb
das
xor
aaa
push
adcl
movsl
shll
add
lods
imul
jle
jp
mov
adc
mov
fdivrp
xchg
adc
adc
xor
scas
leave
fwait
xor
xorl
mov
mov
jmp
jo
out
mov
shll
jp
lods
adc
sub
int
inc
jmp
dec
cltd
and
arpl
shrb
jae
andl
jge
push
xchg
mov
shl
loope
pop
fiadds
outsl
adc
jl
lock
dec
lea
mov
stos
push
ficompl
leave
jo
popa
cmpsb
push
lods
mov
rcrb
sbb
jnp
psrlq
push
lock
jle
call
mov
ficoml
cmpsl
or
push
movsl
inc
sub
lds
sub
xchg
jle
jecxz
mov
loope
shrb
add
imul
push
pop
xchg
mov
cmp
loope
les
add
pop
xor
jecxz
dec
push
loop
xchg
cwtl
mov
rcrl
repnz
push
mov
adc
aad
dec
cmp
jge
pop
repz
sahf
pop
icebp
iret
mov
js
and
xor
inc
xchg
sub
xchg
xchg
mov
enter
in
shrb
push
testl
mov
enter
add
decb
cmc
add
stos
inc
test
lret
out
add
cli
ljmp
dec
or
mov
adc
inc
xlat
sub
jmp
addr16
pop
cmc
jp
or
int
sub
add
sahf
xor
inc
mov
sti
lods
xchg
fcoml
push
sbb
and
rolb
cmpsb
pop
lock
enter
clc
js
sub
add
jp
and
ret
mov
jmp
hlt
mov
or
add
adc
enter
out
cmp
sbb
dec
cmp
in
mov
stc
xchg
xchg
negb
xchg
sub
scas
aaa
into
pop
and
xchg
cmp
lea
call
jns
fnstenv
jge
sub
and
xchg
jo
leave
pusha
mov
fimull
mov
aad
in
inc
push
xchg
sub
adc
rcrb
mov
int3
adc
inc
cmc
sub
inc
and
pop
lods
aam
cmc
pop
adc
pop
test
inc
add
cmpsb
cwtl
dec
out
push
dec
clc
jge
sub
jo
nop
fisubl
mulb
and
sbb
pop
bound
ret
jp
fwait
loopne
es
rclb
insl
and
rcll
mov
fnstenv
cmp
pop
push
int
pusha
pushl
xor
enter
test
sbb
fistps
lds
addr16
and
sub
add
fildll
in
xor
and
out
push
adc
adc
repz
out
popa
lods
adc
jns
adc
popa
popa
repnz
mov
lret
sarl
stos
adc
add
sub
and
and
xchg
or
add
mov
dec
fidivrs
mov
or
pop
fstps
xabort
mov
ficomps
imul
ljmp
sub
sbb
aas
pop
icebp
jo
and
ret
mov
pushf
xor
hlt
dec
out
cmp
cmp
pop
int3
popf
push
out
adc
mov
lods
xchg
cmpsb
xlat
cli
push
out
push
push
aad
pop
shr
fistpl
cld
or
sbbl
push
mov
lods
fwait
add
mov
push
call
or
jg
lahf
fsubl
out
les
xchg
sub
int3
push
mov
in
mov
jno
loopne
adc
lret
add
sbb
hlt
in
testb
aad
pop
fsts
jmp
push
aad
xor
gs
mov
fldenv
mov
sbb
jl
lods
cmp
add
data16
les
push
nop
daa
imul
pusha
push
daa
les
aas
mov
das
mov
outsl
in
mov
cwtl
mov
xchg
popf
sbb
jle
jecxz
add
incl
out
int3
inc
adc
aad
repz
iret
bound
inc
lock
mull
popfw
xor
lock
loope
cmp
loopne
mov
lods
add
lods
movsb
int
pop
lds
shl
mov
pop
into
in
mov
and
or
insb
mov
mov
aam
lahf
ss
cmc
scas
inc
daa
adc
aaa
insb
xchg
test
sub
dec
fbstp
sbb
xor
loope
sub
jl
dec
in
data16
iret
data16
xchg
jl
out
fnstenv
push
cmpsl
test
mov
insl
movsl
mov
outsl
rcr
pop
xor
aam
repnz
mov
test
lret
loope
cmpsb
pop
push
mov
dec
push
popa
add
xor
jb
adc
test
adc
outsl
push
movsb
xchg
ljmp
cwtl
into
push
and
aam
jecxz
ret
inc
pop
mov
mov
test
mov
fisubl
ret
daa
cmpl
int3
imul
notb
pop
popw
shlb
xchg
pop
mov
movsb
pop
ret
dec
stc
jae
out
cmp
fwait
xchg
in
pushf
jecxz
lock
add
es
xchg
cmpsl
es
ljmp
mov
das
stos
push
out
fcoml
stos
inc
push
mov
xchg
loope
aam
dec
enter
out
sub
pop
out
in
lahf
or
xchg
jns
sub
push
rcr
jbe
jno
test
jno
aad
mov
scas
in
xor
test
xchg
sub
xchg
mov
sub
fs
dec
mov
mov
push
sub
mov
jno
or
pop
call
adc
in
fbstp
stc
nop
sarl
arpl
imul
mov
pop
mov
loop
pop
pop
add
insb
popa
jnp
test
std
int
or
push
xchg
sub
mov
nop
adc
mov
cli
test
in
sbbl
std
cli
jl
jecxz
rolb
jbe
cli
dec
sarl
dec
push
aas
call
scas
xor
fisttps
in
ljmp
cli
or
in
jo
sbb
sbb
cltd
ljmp
loopne
aam
jg
les
cmp
and
out
dec
bound
scas
xchg
mov
stos
mov
push
or
mov
pop
mov
adc
lcall
adcb
push
call
inc
add
xchg
bound
mov
dec
and
mov
dec
lods
dec
out
jo
je
sbb
mov
cmp
popa
clc
enter
addr16
fnsave
push
ljmp
and
cmc
movl
not
jns
pop
sbb
xchg
push
lods
test
arpl
iret
hlt
mov
aam
cli
and
sahf
xor
inc
inc
add
pop
enter
pop
push
in
dec
test
lock
imul
insb
es
xchg
dec
data16
jg
popa
clc
cmp
adc
cmp
dec
loope
cs
loopne
fistl
cmpsl
or
mov
stos
push
in
or
push
xlat
pop
add
mov
incb
sahf
das
or
test
pop
movsb
inc
sbbb
arpl
ljmp
in
popf
xchg
sub
sub
hlt
lahf
cwtl
fdivl
sbb
mov
jge
popf
xor
iret
xchg
mov
mulb
in
sbb
inc
lods
inc
fstpl
dec
inc
fidivrs
mov
outsl
sti
arpl
push
test
sbb
dec
loopne
sti
adc
iret
pop
adc
je
and
push
movsl
jle
sbb
push
adc
or
and
inc
rcl
mov
jb
pop
push
loop
push
and
sbb
xor
cmp
jnp
mov
pop
sub
mov
lods
lods
adc
or
lods
inc
loope
push
in
out
shrl
xchg
pop
scas
add
js
xchg
and
mov
cmp
xchg
stos
leave
pop
icebp
mov
pop
gs
dec
push
adcb
loope
popf
aam
jne
fiaddl
call
jl
jp
rcrl
adcb
incb
push
push
cmpsl
sbb
movsb
adc
iret
scas
lds
leave
xlat
repz
fldt
faddp
pop
jmp
or
pop
xchg
mov
lds
dec
dec
jecxz
or
dec
cltd
adcl
in
xor
push
mov
stos
add
mov
leave
xchg
mov
mov
fsubrs
mov
les
icebp
mov
fildl
hlt
daa
das
add
pop
cwtl
jno
das
cmpb
push
add
fdivs
adc
stc
jl
ret
xchg
movsb
jecxz
fwait
mov
xchg
out
incb
fwait
lods
icebp
jg
into
jp
aam
add
ret
incb
and
xchg
pop
repnz
out
xor
shrl
in
sbb
sub
xchg
mov
lcall
sbb
cwtl
jl
pop
or
das
scas
inc
jl
ret
popf
lds
loopne
dec
lock
mov
fldcw
jae
or
xchg
xor
ret
pop
pop
push
imul
ss
in
addl
test
adc
call
sub
add
mov
fbstp
mov
rclb
subb
lea
mov
xor
fistpll
cmpsl
dec
add
into
movsl
push
repnz
xor
notl
scas
mov
fbstp
stos
push
lods
fisttpl
xchg
jl
ds
sahf
adc
ds
ret
sbbl
mov
pop
mov
scas
scas
es
cmp
jb
lods
and
and
push
std
fcoml
loopne
cmp
xchg
mov
pusha
xchg
push
test
sub
fnop
or
mov
cs
lea
xchg
xchg
cltd
xchg
jecxz
push
mov
incb
xchg
sbb
mov
adc
mov
ficoms
test
mov
mov
hlt
movsb
sti
push
les
sbb
out
and
lods
and
push
mov
call
es
and
sub
push
adc
gs
pushf
push
dec
mov
mov
push
dec
push
dec
imul
jne
test
sub
hlt
ljmp
and
loop
fs
sbb
fldenv
call
and
jnp
das
lods
repnz
and
fcompl
cmc
lock
ds
pusha
push
add
movl
sbb
xchg
pop
dec
in
mov
xor
adc
mov
mov
xor
mov
push
subl
popa
pop
movsb
insl
stos
add
pop
lahf
push
out
jg
enter
dec
sub
mov
cmpsb
cmpsl
repnz
jb
or
cmpsb
mov
lahf
jmp
shr
movlhps
enter
add
in
or
jp
cld
mov
cmp
adc
inc
ljmp
push
cmp
rolb
jb
push
ss
pop
sub
jb
cmp
adc
pop
outsb
pushf
outsl
push
jb
jle
xchg
sub
dec
cmp
xor
adc
push
movsl
push
cltd
lock
arpl
sbb
mul
outsl
bound
scas
cli
pop
adc
mov
std
xchg
enter
int3
mov
cmpsl
std
fnstcw
lahf
ss
add
mov
xor
and
pushf
cmpsl
loopne
scas
xlat
mov
iret
data16
fucomi
or
arpl
cmp
jns
xchg
rcll
mov
sarl
stos
pop
mov
adc
icebp
jl
fists
jl
cmpsl
bswap
push
adc
das
mov
data16
jae
jne
dec
xor
ja
ss
mov
hlt
mov
mov
push
cwtl
into
call
insl
in
mov
lock
pop
aam
fsub
push
out
adc
ds
loopne
or
pop
jne
scas
push
xchg
or
pop
push
dec
filds
aaa
into
das
daa
jl
lret
lret
inc
aaa
jle
push
adc
push
insl
fs
pop
and
mov
or
leave
sub
and
ret
ja
stc
or
sub
push
pop
xlat
ficoms
fisubrl
repnz
mov
shrl
out
flds
mov
cmp
daa
xor
mov
mov
mov
fwait
mov
sbb
cmpsb
cmpsl
les
aad
dec
fbld
lcall
scas
outsb
fcmovbe
lock
imul
adc
sub
aaa
lock
inc
and
push
repz
std
xchg
clc
adc
dec
mov
inc
iret
imul
mov
jle
xor
xor
mov
or
cs
jge
mov
jo
cmp
imul
cmp
mov
inc
dec
pop
lcall
in
enter
clc
faddl
inc
das
stos
stos
pop
pop
mov
roll
mov
les
dec
fbstp
jge
add
clc
pop
insl
jae
mov
xchg
push
sti
jae
mov
inc
shlb
jge
lcall
adc
mov
dec
xchg
push
xchg
mov
loopne
insl
cltd
lock
leave
clc
cli
mov
lret
into
loop
cmpsb
fidivl
jle
cmp
xchg
imul
lea
jo
fildll
fwait
xor
mov
daa
mull
pop
imul
es
pop
stos
pop
jne
outsb
cmpsl
inc
xor
nop
iret
enter
int
addr16
sub
into
nop
push
sbb
shll
jge
pop
flds
jle
leave
scas
inc
sarl
shlb
std
mov
imul
pop
xor
lmsw
push
loope
pop
inc
lahf
jp
pop
add
std
je
popa
jle
adc
sbb
stos
mov
pusha
ja
das
loop
fcom
outsb
push
jnp
and
xlat
and
scas
xor
xchg
and
rcrb
sbb
and
mov
repz
nop
sbb
fidivs
cmp
sahf
aas
leave
xor
fnclex
notb
push
filds
sub
pusha
push
test
imul
inc
inc
pop
add
repnz
xchg
lcall
scas
daa
mov
cli
xor
ficomps
pmaxub
cld
stos
into
add
mov
fisubrs
mov
fsubrs
mov
fwait
lret
jp
adc
mov
ret
into
xchg
sub
repnz
xor
clc
lret
fs
cld
test
data16
mov
std
call
ret
mov
pop
jae
mov
push
and
icebp
cmp
mov
jnp
mov
inc
fnstenv
lods
or
fisttps
push
sub
scas
mov
jle
imul
mov
pop
mov
cmp
leave
insl
push
lods
mov
push
test
push
inc
cwtl
pop
cmp
or
pop
hlt
scas
dec
lret
js
mov
loope
int
and
test
maxps
jmp
gs
xor
push
bound
jb
jno
clc
das
xor
insl
fldcw
cmpsl
jae
fnstenv
and
enter
mov
mov
popf
xor
ret
movsl
sahf
or
mov
dec
icebp
loope
lock
push
sbb
xor
pop
rcrl
inc
and
mov
popf
movsb
clc
iret
mov
add
test
push
std
lds
shl
adc
and
mov
adc
and
in
imul
out
push
in
dec
pop
test
adc
pop
leave
outsl
dec
xlat
push
or
inc
pop
or
jbe
out
subb
mov
ljmp
sbb
scas
orb
testb
mov
ret
inc
ret
movsb
cmp
out
das
or
cmp
jns
mov
repz
mov
mov
rolb
out
loopne
out
test
out
out
popf
xor
idiv
ja
pop
ss
adc
stc
fmuls
scas
add
push
push
out
xor
in
fiadds
push
sub
xor
mov
jmp
sbb
ljmp
jne
sbb
int
and
xor
cld
and
dec
dec
sub
dec
xor
adc
mov
sti
push
popf
xor
sbb
insl
add
scas
inc
inc
and
outsl
ja
xlat
negb
iret
imul
mov
fists
lret
mov
xor
sbb
movl
shr
enter
push
int
pop
leave
pop
xchg
fidivs
sbb
lock
sahf
sub
mov
out
inc
divl
sub
or
pop
lea
ljmp
sbbl
dec
sahf
sub
ret
out
pop
adc
pop
mov
dec
cwtl
das
xchg
pop
dec
adc
ret
stos
fildl
pop
je
cmpsl
ds
xchg
test
pop
insb
inc
dec
std
sbb
pop
cmp
lahf
cmc
mulb
aas
movsb
cmpb
rcll
aad
out
sub
es
push
push
test
fcmovu
push
daa
pushf
out
loop
lds
xchg
xchg
sbb
loope
sub
aam
addl
in
or
imul
repnz
mov
ret
mov
pop
dec
sub
ror
enter
push
sub
mov
cmp
stos
std
popa
clc
pop
pushf
fwait
insl
sbb
xchg
hlt
out
mov
mov
sub
mov
jne
clc
je
insb
leave
cmp
fldl
cmpb
fnstsw
mov
jb
lock
pop
jae
pop
rclb
dec
dec
out
inc
cs
xor
jo
fisubrl
je
push
push
call
aam
xor
stos
ret
loop
and
and
ret
xchg
shrb
out
fdecstp
in
stos
leave
decl
rorb
sbb
repz
xlat
clc
inc
jne
pop
pop
adc
in
shll
dec
jno
jecxz
add
jno
movsl
mov
cmp
movb
repz
fistl
outsl
mov
ljmp
mov
xor
jge
push
repz
jecxz
mov
mov
popf
push
push
jle
fistl
adc
in
scas
lcall
lods
xchg
xchg
lahf
pusha
xor
mov
and
in
stc
jmp
xor
cmp
inc
fisubs
popf
loope
lret
push
cltd
lds
popa
mov
insb
out
pop
pop
mov
push
notb
mov
ljmp
fsubl
std
addr16
adcb
add
mull
cmp
sbb
insb
test
popf
cmp
push
imul
xor
lahf
scas
dec
mov
xchg
sub
in
lret
xchg
pop
jmp
lock
jns
rep
pop
insb
add
xor
fdivs
jl
fstl
aam
mov
rcrl
lret
xor
push
negl
iret
sbb
sub
ljmp
jmp
push
xchg
push
inc
pusha
sarb
fbstp
out
push
leave
lahf
ss
jne
push
lds
pop
lock
out
rorb
xchg
sub
push
enter
pop
jb
cmp
inc
xchg
and
test
mull
and
insb
lods
inc
sahf
ja
test
mov
jb
shrb
addr16
sub
pop
mov
out
add
stos
decl
out
in
nop
lea
rolb
jmp
xor
loop
xchg
je
mov
sti
ret
jecxz
fsub
mov
movsl
adc
gs
mov
shrl
xorl
pushf
mov
push
lahf
addl
xchg
mov
mov
adc
pop
repz
jo
mov
out
dec
enter
lret
xor
mov
cmp
outsb
loope
in
jl
idivl
push
inc
fmull
out
daa
rcr
jle
fdivs
adc
loopne
test
cld
rorl
cmpsb
fisubrl
sbb
jo
idivw
loopne
outsb
xor
stos
sbb
iret
imul
shll
daa
add
mov
insl
adc
arpl
add
xchg
add
es
fucom
icebp
dec
lea
jne
nop
cmpsl
pop
adc
ret
popf
xlat
scas
cmpl
add
int3
mov
push
and
stc
fsubrl
cmp
push
jmp
fisubrl
push
fsubs
pop
xchg
pop
aas
push
popa
or
movsl
and
lret
mov
imull
xchg
mov
scas
call
loop
rcll
xchg
in
push
jl
in
mov
inc
xchg
dec
mov
pop
jg
aad
outsb
movsb
test
pop
xchg
sbb
xchg
mov
adc
nop
push
and
pop
cmp
mov
pusha
movsb
outsb
lea
mov
insb
jl
add
pop
test
popf
mov
iret
sub
out
jl
shlb
popf
outsb
xchg
and
and
cmp
and
enter
mov
fcoml
mov
fisubs
stos
sbb
jne
shrb
mov
aam
mov
xor
jo
add
orl
push
lods
lods
push
dec
rcpps
jmp
jecxz
xchg
jb
shll
ja
mov
mov
add
inc
mov
jmp
shlb
pop
imul
imull
in
sbb
add
jnp
movl
mov
or
pop
jne
sub
jmp
sarl
mov
repz
rclb
adc
leavew
cs
mov
orb
fmul
mov
inc
mov
mov
jb
lahf
enter
stc
push
fsubs
jbe
es
loopne
ss
mov
aas
mov
data16
mov
shlb
daa
dec
sbb
and
xchg
sub
cld
mov
dec
rolb
daa
xchg
movsl
mov
mov
cltd
mov
pushf
xor
in
lock
dec
jbe
icebp
adc
dec
cmp
adc
mov
pop
adc
jb
movl
cmc
adc
clc
inc
mov
push
xchg
sub
loop
inc
cmc
sub
xchg
inc
mov
and
int3
dec
stc
jl
out
movsb
dec
stos
xchg
mov
ret
push
ficomps
dec
iret
pop
dec
sub
and
fs
rcll
sbb
jb
test
push
pop
sbb
cmp
push
fwait
aam
lret
lock
jns
scas
sub
in
mov
enter
test
adc
xor
stc
pop
or
fidivrl
xchg
xchg
lcall
std
or
cmp
or
xlat
aaa
cmpsb
xchg
loope
or
loope
add
pop
mov
push
popf
mov
sti
fisttpl
inc
sti
jecxz
xchg
xchg
enter
pushf
call
xorb
lcall
test
inc
pop
push
or
sub
cmpsb
push
xor
sub
in
fsubrs
jae
pop
rcrl
cs
pop
inc
shr
addl
cmpsb
enter
test
mov
mov
or
jbe
fdivs
ja
enter
sub
jno
mov
jp
not
icebp
mov
lods
cmc
icebp
repz
mov
es
cs
int3
dec
jecxz
inc
mov
leave
pop
push
jb
ss
cmp
jmp
inc
jmp
divb
in
scas
data16
daa
mov
pop
push
fcmovne
pop
lea
les
mov
push
stc
jl
cmp
into
or
xchg
ds
ljmp
ret
dec
loopne
shll
mov
ss
sbb
jmp
push
mov
lods
xor
adc
push
mov
mov
jl
fbld
pop
adc
dec
popa
sub
cmp
aad
ljmp
loope
or
scas
sbbl
imul
inc
pop
stos
cmp
xchg
sub
outsl
mov
aaa
call
rolb
inc
stos
sbb
ss
lds
fwait
inc
fmul
xor
stos
sbb
adc
push
mov
xchg
lods
inc
mov
cs
insl
aad
popf
in
push
jl
mov
daa
add
movsl
add
sarb
xor
sbbl
inc
jecxz
mov
bound
pop
xchg
or
pop
sbb
loop
iret
push
sti
sbb
cmpsl
ljmp
mov
xor
mov
in
inc
mov
std
push
ror
ror
sub
rcr
sahf
xchg
fcoms
mov
lcall
popf
jns
mov
sbb
cmc
lods
dec
pusha
mov
push
push
pop
lds
sbb
les
push
out
jle
sbb
sarb
mov
sub
lret
sub
int
dec
lds
mov
clc
hlt
es
sbbl
out
cmpl
mov
outsb
add
push
lret
mov
cld
daa
jbe
xchg
sub
test
xchg
cwtl
cmc
sbb
mov
test
cmp
arpl
mov
mov
loopne
int
cwtl
das
stc
xor
mov
dec
jecxz
mov
push
in
bswap
fwait
lea
cld
mov
mov
cwtd
and
jge
inc
xchg
or
and
sahf
inc
push
jno
push
push
dec
push
xor
nop
mov
out
xchg
or
or
inc
mov
ret
fstl
push
fstps
or
mov
out
and
test
scas
jge
or
sub
outsl
sub
fistpl
sbb
aad
adc
loope
push
mov
arpl
sbb
test
pop
repz
xrelease
cmp
mov
repnz
sbbb
clc
or
sbb
cmpsb
cmp
cmpsl
in
aad
mov
jecxz
sub
dec
iret
push
dec
add
addr16
mov
jle
daa
and
frstor
mov
jecxz
insl
add
push
fnsave
clc
mov
std
cmpsl
leave
mov
mov
movsb
dec
loopne
mov
or
mov
les
rcll
inc
frstor
enter
arpl
dec
push
pop
cmc
jg
jmp
sub
scas
inc
rcr
lcall
jmp
ret
pop
mov
inc
stc
nop
xor
cmp
push
inc
or
mov
fsts
lret
addl
mov
icebp
inc
fsubp
ja
imul
rcrl
mov
dec
lea
push
je
ret
pop
push
xchg
xchg
adc
mov
xchg
xchg
ja
flds
loopne
mov
jmp
ljmp
out
out
jno
in
ret
movsb
add
adc
cmp
mov
in
neg
push
pop
xor
inc
and
mov
cmc
cli
leave
pop
in
or
jo
sbb
je
add
addl
mov
dec
inc
sahf
movsb
movsb
dec
cmpsl
testb
push
dec
push
aaa
mov
scas
sbb
mov
cmp
cmp
clc
xchg
repz
out
cmp
out
rorl
mov
dec
mov
cli
mov
sub
movsb
cmp
aam
jg
cli
xchg
xchg
mov
sbb
and
aaa
into
cmp
lds
push
in
mov
jae
fucomip
push
sbb
xchg
sub
cmp
pop
outsb
push
mov
xchg
into
gs
aaa
in
subl
in
lret
insl
pop
cmp
sbbb
cmp
cmp
frstor
in
pop
pop
xor
mov
addl
jge
cmp
faddp
pop
push
mov
loope
push
leave
test
adc
dec
aam
add
sub
les
adc
fnsave
jo
aaa
bound
lret
flds
notb
ljmp
sbb
xchg
jb
mov
or
cmp
mov
out
arpl
xchg
adc
mov
stos
js
test
mov
hlt
addr16
rcr
add
ret
ljmp
daa
pusha
lret
fisttps
cmc
cld
jbe
mov
into
sbb
loopne
lock
cmp
push
call
or
outsl
fcmovu
adc
mov
xor
fmuls
pop
pop
dec
push
sub
negb
aam
mov
jge
sub
sahf
mov
pop
imul
ror
adcb
fdivrp
and
xor
cmp
and
xchg
jmp
andb
or
xor
push
jb
xchg
sub
xchg
hlt
data16
mov
sub
mov
jno
lods
or
fst
clc
sahf
dec
jg
shll
dec
cmpsb
xor
test
mov
sbb
push
mov
add
aaa
xor
in
push
out
lahf
orl
or
fmulp
sub
xchg
sub
dec
add
mov
sbb
inc
xchg
jne
mov
pop
and
mov
sbbb
aad
mov
add
dec
cmpl
imul
popf
fidivl
mov
lods
repz
push
mov
insl
inc
scas
mov
xor
mov
xchg
sbb
jg
xor
test
xchg
inc
in
jbe
repnz
cld
cmc
adc
fsub
popa
inc
sahf
stc
ja
jnp
xor
pop
js
adc
nop
mov
pusha
xor
mov
inc
xchg
mov
cmp
or
aas
mov
mov
sub
push
pop
sub
push
xlat
inc
adc
jecxz
pop
mov
and
movsl
jmp
popa
dec
sbb
push
pop
sub
and
inc
stos
pop
dec
mov
mov
pop
push
iret
fldl
mov
shrl
xor
xchg
mov
adc
and
cltd
jp
inc
mov
dec
subb
and
xor
xor
mov
inc
jecxz
lods
imul
rolb
push
sbb
es
push
xchg
mov
pop
jg
mov
jecxz
jmp
loopne
dec
cmp
ljmp
lea
mov
sub
sti
or
sti
repnz
jle
iret
push
das
pop
mov
inc
mov
add
call
mov
xor
into
faddl
fwait
inc
xor
imul
mov
adc
and
cwtl
test
es
subb
sbb
xor
jge
jb
testb
icebp
popa
aas
xor
push
cmpsl
mov
mov
sti
mov
adc
rol
adc
fwait
inc
jne
fidivs
cld
cmpsb
add
add
adc
iret
loope
dec
test
xchg
sti
rorb
sub
push
mov
jnp
lahf
sarb
xchg
mov
mov
push
clc
daa
jmp
gs
adc
xchg
jne
fwait
cmc
xor
ljmp
dec
subb
mov
pop
sbb
pop
inc
fldcw
insl
sub
fmuls
push
pop
pop
pop
mov
sub
test
fnstenv
iret
inc
out
xchg
je
jno
mov
clc
popa
in
addr16
push
rcll
loop
sub
and
loop
fwait
lcall
outsb
xchg
lods
mov
out
sbb
jne
push
pushf
mov
popf
fs
and
ret
mov
inc
insb
pop
movsl
imul
or
mov
pop
sbb
cs
insl
mov
dec
adc
cld
outsl
push
mov
ret
call
sbbb
and
fildll
xchg
sbb
ficoml
adc
lods
inc
test
retw
fldl
or
pushf
in
mov
rcll
lds
bound
in
rol
lods
and
shl
sar
inc
push
push
cmc
sarb
lahf
fdivr
test
sub
movaps
insb
inc
cltd
dec
mov
cmp
and
push
push
inc
mov
lcall
xor
pop
jae
inc
int3
pop
mov
xchg
cs
dec
int
loop
mov
scas
lret
or
test
lods
sub
and
ds
lods
mov
or
inc
add
insl
mov
js
mov
scas
out
mov
cli
xlat
je
pop
in
sbb
dec
icebp
sub
in
in
mov
push
gs
popl
pushf
mov
cltd
sub
cld
jnp
test
pop
lahf
shlb
popa
subl
xor
adc
call
adc
das
icebp
pop
and
push
xchg
cmp
mov
add
loopne
stos
aam
mov
filds
fistpl
xlat
cmp
clc
cmp
test
lret
cmp
mov
xchg
scas
clc
fidivrs
push
lods
pop
cwtl
inc
in
mov
push
xchg
cmp
jne
mov
retw
push
scas
testl
sub
stc
mov
test
pushf
add
cmpl
or
adc
and
mov
sub
std
rcrb
or
popl
cmp
in
dec
inc
lret
inc
bound
and
popa
xor
fstpl
stos
aas
lods
pop
out
out
xor
shlb
fs
lret
xor
sti
xor
xchg
mov
dec
fsubs
push
fstpt
js
lret
popf
mov
sub
adc
popa
mov
xchg
out
inc
test
inc
xchg
outsb
fisubs
test
push
fsubl
andb
push
scas
push
or
stc
nop
shrl
pop
xchg
and
fnstenv
scas
fpatan
fdivr
subb
mov
jno
addb
mov
out
outsl
test
and
dec
seta
xor
shl
jp
inc
and
sti
shlb
or
mov
fistl
xlat
repz
test
xor
mov
adc
fdivs
push
sub
ss
and
jge
test
jae
jmp
mov
jno
xor
mov
es
in
lcall
xor
push
ja
mov
xchg
imul
pushf
adcb
repnz
inc
push
movsl
jne
rol
fistpl
andl
xchg
adc
push
in
sub
lock
popa
mov
shr
cmpsb
aaa
push
jp
shlb
mov
out
or
hlt
arpl
sbb
adc
testb
pop
push
fwait
and
push
and
pushf
sub
xchg
adc
mov
cmp
sub
test
jge
mov
jle
inc
scas
in
jl
ljmp
lds
push
clc
add
and
ret
add
fwait
and
icebp
push
mov
xchg
jb
xchg
pop
jb
imul
pushf
outsb
leave
call
scas
fisubrl
fimuls
adc
and
ja
lods
arpl
xor
leave
push
sbbb
jb
enter
add
xchg
dec
mov
lcall
or
mov
pop
mov
test
inc
sbb
xor
das
dec
xor
pop
out
aas
or
into
gs
stos
mov
stos
lahf
mull
loopne
jae
sbb
loope
inc
adc
mov
rclb
pop
imul
push
push
ret
stos
push
sbb
stc
leave
cmp
pop
sbb
rol
mov
and
test
jge
in
push
out
hlt
mov
ss
dec
push
push
fmul
test
fsubl
arpl
mov
sahf
ss
xchg
jmp
xor
movsl
add
jb
xlat
enter
push
and
mov
mov
loop
fs
ds
addr16
out
or
mov
aam
or
push
fidivs
fnstcw
push
inc
adc
xchg
mov
outsl
inc
mov
push
sti
pop
cmpl
ret
mov
add
or
push
scas
jg
aad
repnz
mul
xchg
mov
xchg
sub
or
push
test
jnp
repz
mov
push
test
fiadds
and
pop
sbb
sbb
mov
shr
pop
in
mov
mov
je
adc
mov
push
mov
or
ret
dec
cmpsl
or
jns
daa
jae
and
push
push
jmp
arpl
mov
xchg
test
pop
and
adc
fwait
arpl
lds
inc
cmpsl
jne
mov
stc
xor
imul
rolb
xchg
add
fwait
inc
in
add
dec
hlt
ja
sbb
rcrb
jb
jle
push
test
pop
and
iret
inc
mov
pop
cwtl
in
push
inc
out
enter
pusha
mov
daa
push
loop
out
fildl
popf
sub
bound
sbb
jbe
aaa
push
inc
inc
push
jmp
rcrb
iret
cmpsl
mov
push
ss
and
mov
xchg
rcll
add
push
ds
pop
das
sti
adcl
inc
jns
mov
call
or
outsb
es
sbb
xor
mov
shr
in
sbb
cmp
negb
loop
mov
inc
daa
insl
sbb
dec
int
and
outsl
jb
mov
cmp
aaa
stos
sbb
divb
bound
mov
jecxz
lock
ucomiss
call
pop
jl
jns
sub
add
in
subl
mov
jle
in
jge
sub
in
daa
xchg
insb
bnd
fcmovnu
xchg
loope
test
sahf
test
add
xchg
cli
lods
mov
push
lods
std
fsubl
aad
or
mov
mov
insb
pop
repnz
int3
pop
mov
dec
enter
inc
int
out
push
daa
sti
jo
mov
pop
fistps
das
mov
xchg
roll
mov
mov
daa
test
aad
mov
dec
sub
lock
jmp
or
ficoms
xor
es
and
scas
orl
or
orb
mov
or
mov
lahf
and
xchg
xlat
xor
push
adc
fcoml
sbb
movsl
xchg
pop
xlat
aad
inc
pushf
push
mov
cmp
lock
push
movsl
jl
add
pop
pop
subb
call
xor
jae
add
sbb
jne
add
dec
and
inc
repz
lds
test
lds
mov
mov
ds
mov
jg
rorb
outsl
sbb
sti
mov
add
mov
loope
lcall
xchg
push
cltd
cmpsl
pop
ret
or
sub
add
mov
cmpsl
js
clc
int
xchg
pop
lock
lods
pop
cmpsl
jns
push
stos
rcll
xor
js
sahf
push
pop
mov
sti
cmp
jle
dec
mov
scas
mov
adc
xor
leave
enter
into
xor
rolb
test
sub
loopne
or
or
mov
push
add
mov
mov
lds
insb
out
pop
push
pushf
test
mov
dec
mov
xor
jp
sbb
mov
inc
xor
stc
filds
jmp
push
mov
jbe
add
push
in
cmpl
adcb
jae
scas
mov
ds
and
inc
jg
mov
mov
js
testl
cmpsl
stc
fsubrs
pop
test
sbb
arpl
ljmp
dec
xchg
int3
pop
push
xor
popf
test
dec
dec
repnz
es
or
mov
shlb
push
data16
push
cmp
into
test
sub
jg
jge
icebp
sub
sub
xor
xor
sti
inc
in
push
mov
jecxz
mov
fs
and
mov
push
add
test
xchg
mov
jae
sub
inc
xchg
mov
mov
fcmovne
out
sbb
xlat
adc
aam
popa
inc
ret
push
xacquire
xchg
dec
push
or
push
mov
mov
lods
fnsave
into
les
jl
add
mov
pop
call
inc
cmpsl
cmp
pop
insl
enter
dec
lods
out
jg
jo
add
inc
xchg
mov
call
repz
cli
inc
iret
scas
mov
push
in
add
jp
cld
push
lcall
lock
int3
pop
dec
xlat
aad
jge
jmp
mov
out
mov
push
mov
call
cmpl
aas
mov
mov
inc
stc
aas
pop
sahf
outsl
es
mov
pop
sbb
sbb
add
out
mov
add
xor
adc
dec
imul
mov
mov
into
ret
pop
add
imul
jns
xchg
stos
fs
jno
mov
inc
fsubs
pop
sarb
adc
data16
les
mov
in
mov
outsb
mov
adc
ss
xchg
mov
lea
or
pop
test
movsl
adc
mov
inc
jge
sti
mov
lods
outsl
cld
imul
ds
xchg
and
lock
dec
fisubs
mov
dec
aad
jl
cmpsb
rcr
fwait
xchg
mov
and
lock
mov
add
and
out
in
jnp
into
push
and
pop
push
xor
xchg
push
jnp
push
mov
xchg
xchg
cmp
or
adc
cmpsb
les
jbe
cmpsb
scas
xchg
jne
icebp
out
pusha
jo
repz
iret
xchg
scas
popa
call
pop
mov
int
inc
aad
loop
insb
push
mov
ljmp
push
cmp
test
scas
fnstsw
jns
xor
fmull
cmc
jns
daa
sub
in
shl
into
adc
inc
mov
mov
clc
inc
test
popa
test
fiadds
stos
cwtl
testl
ret
sbb
mov
cli
sahf
adc
lods
test
push
stos
dec
mov
jl
imul
mov
sbbb
mov
sbb
sbb
and
cmc
lret
add
loop
std
cmp
enter
dec
or
inc
stos
mov
ret
adc
jns
lods
out
sbbl
lahf
sub
lock
push
pusha
testl
mov
mov
xlat
scas
push
gs
lcall
or
scas
jge
out
pushf
ret
lods
fistl
das
es
push
pop
cmp
push
scas
mov
mov
sarb
stc
stos
mov
cld
push
mov
fsubl
push
xlat
test
jne
sub
push
je
mov
cmp
popa
jb
popa
cmp
adc
setbe
loopne
push
je
imul
aaa
mov
mov
test
stos
mov
sbb
push
insl
leave
ret
mov
push
loop
js
pop
sub
iret
sub
add
mov
pop
add
mov
jno
mov
lock
test
sbb
lcall
push
lcall
lods
inc
pushf
and
adc
lret
jns
mov
movsl
call
push
sub
movsb
mov
xchg
push
jbe
pop
iret
adcb
and
sbb
pop
stos
es
mov
xchg
sub
mov
jle
stos
fwait
dec
sub
test
enter
scas
insb
cmp
insl
cwtl
sbb
lcall
xchg
cwtl
shrl
out
mov
cmp
fwait
or
lea
shll
inc
cmp
xchg
popa
jecxz
sbb
in
sahf
mov
mov
cs
aad
mov
xchg
dec
dec
xchg
inc
fcmovb
outsl
repz
imul
lahf
inc
mov
xlat
movsl
in
arpl
xchg
adc
testl
repz
xchg
sbb
mov
jnp
and
leave
mov
adc
inc
inc
out
jae
fmuls
sub
repz
daa
mov
mov
movsb
mov
cmpsb
ljmp
icebp
ja
shrl
enter
sub
xchg
dec
or
add
jecxz
lret
xchg
push
in
lret
inc
sub
lahf
dec
and
stos
mov
pop
repnz
aam
sub
add
es
lods
stos
call
sbb
mov
imul
dec
xor
sti
pop
xchg
dec
lea
fisttps
stc
push
lock
stos
ljmp
flds
mov
xor
push
add
jl
enter
ss
dec
mov
xlat
push
ds
dec
xchg
or
dec
daa
stos
fs
loop
mov
nop
sbb
leave
push
adc
jno
sbb
andl
jmp
push
fwait
adc
jp
ja
push
push
ljmp
mov
shl
mov
imul
mov
jns
std
and
pushf
scas
dec
leave
mov
ret
add
adc
add
jne
loop
into
push
or
mov
xchg
sub
cld
cmp
mov
xor
mov
xor
xor
mov
lds
lea
xchg
andl
adc
test
mov
lret
mov
mov
jbe
adc
popa
fdivl
push
dec
out
fyl2xp1
sub
insl
cmp
addr16
aaa
cmp
rcr
sbb
mov
shrl
fstpl
inc
fists
daa
push
xchg
mov
jecxz
adcl
mov
and
add
xor
out
jmp
movsl
aaa
push
fnstenv
dec
je
inc
ficoms
push
add
aas
ret
adc
and
xor
cwtl
xchg
or
call
jecxz
testl
ret
adc
inc
and
add
mov
lock
cmp
adc
jle
cltd
inc
add
and
ret
push
push
mov
mov
push
xor
aam
xchg
adc
in
out
addr16
lret
sub
fcmove
sub
mov
mov
pop
lds
inc
lahf
stos
jp
repz
xchg
xchg
clc
hlt
pop
cld
push
inc
adc
inc
arpl
sbb
sbb
mov
xchg
pop
push
imul
adc
cmpsb
out
adc
adc
sub
into
aam
lcall
and
and
push
mov
sbbl
or
cmpsl
or
fdivs
push
sahf
cli
daa
fisttpll
mov
or
mov
ds
or
mov
movsb
iret
je
into
sbb
mov
inc
movsb
imull
rol
divl
dec
xor
loop
lahf
nop
popf
and
or
xchg
ret
fcomps
jb
inc
loop
inc
sbb
inc
mov
stos
lods
cmp
orb
inc
movsb
imul
mov
lock
orl
fs
jmp
xchg
ret
lret
pop
dec
mov
gs
fnstsw
inc
cli
sub
stos
orl
xchg
mov
add
mov
std
pusha
pop
rcl
or
test
daa
mov
mov
mov
xor
and
jmp
xorl
pop
cmp
scas
daa
jns
xchg
mov
les
imul
jp
shlb
sbb
sahf
xchg
push
adc
and
xchg
and
fsubrl
pop
pop
mov
daa
clc
jns
cmp
push
pusha
inc
outsl
and
dec
aas
xlat
or
in
add
lret
jae
pop
jne
aaa
mov
jo
xchg
xchg
xor
insl
and
hlt
mov
jnp
dec
mov
cli
jl
xchg
mov
mov
mov
cltd
enter
arpl
push
cmp
mov
mov
ja
mov
filds
cmp
push
xchg
adc
cmpsl
sub
lds
mov
das
jp
ja
bound
sub
rolb
add
mov
cmc
xchg
pop
aam
mov
add
lahf
lcall
mov
mov
dec
push
cltd
aad
out
add
cmc
mov
movsl
pusha
not
mov
xchg
adc
and
cmp
imul
hlt
dec
mov
cs
in
int3
dec
shl
pop
stos
xchg
fdivrl
out
js
call
sbb
mov
pop
sbb
cmpsb
adc
movl
popa
pop
call
call
cli
lds
test
xor
scas
inc
test
and
lret
cld
xor
popa
clc
test
daa
ljmp
push
cmp
adc
mov
aas
push
ljmp
jno
lahf
cltd
pop
or
lds
pusha
mov
addr16
lods
mov
pop
insl
int
mov
mov
and
sub
mov
mov
mov
in
mov
cld
sbb
test
sub
out
inc
sbb
outsl
jnp
xchg
lret
cmp
pop
negb
jmp
mov
std
inc
les
xor
repnz
pop
mov
dec
mov
ss
lock
mov
cmp
aad
fidivrs
in
xor
push
mov
jb
shrd
bound
es
mov
mov
jge
ret
mov
inc
outsl
cmpl
je
out
xchg
adc
xchg
cltd
mov
mov
aaa
push
xchg
mov
ja
cli
stos
jmp
pop
sbb
adc
pop
aaa
xor
addr16
addr16
arpl
jns
inc
fmul
nop
sub
and
les
repnz
add
aas
or
pop
daa
in
xchg
out
mov
outsl
or
data16
testb
adc
rol
xor
popf
mov
push
ret
mov
test
mov
loope
daa
mov
xchg
in
inc
out
into
cmp
jb
pushf
fsubrp
cli
lret
adc
ss
xlat
ja
ficoms
sub
in
cmp
or
out
xchg
dec
xchg
pop
jg
jmp
arpl
pop
lcall
dec
loop
aas
xchg
push
inc
clc
mov
fdivl
cmp
mov
push
push
push
fstpl
call
xor
outsl
add
mov
jge
adc
inc
mov
lock
addr16
jl
push
orb
xor
lods
xchg
enter
inc
movsb
test
xchg
outsb
das
jns
popa
dec
ret
xor
into
movsl
pop
sub
xor
ss
loopne
into
stc
push
push
scas
decb
insb
scas
pushf
lcall
test
int
pop
and
nop
aad
cmp
outsl
jnp
pop
dec
sbb
mov
mov
or
es
bound
xor
sub
jnp
sbb
pushf
cmovg
jge
dec
mov
arpl
jno
dec
cmc
add
lods
jnp
ja
stos
mov
fwait
inc
test
sbb
xchg
lds
pop
hlt
xlat
pop
sbb
lods
movsb
add
jmp
or
loopne
outsb
sahf
or
pop
lret
aas
xchg
cmp
imul
ja
enter
cmp
fisttps
shrl
mov
mov
jle
sub
pop
rcr
jg
or
insl
test
push
clc
adc
rclb
or
mov
mov
xchg
mov
sub
pmullw
fcomps
lods
sbb
loope
mov
and
mov
or
int3
or
fucomi
stos
jnp
jecxz
scas
sub
adc
cs
movsl
jmp
jle
sbb
sbb
decb
inc
sbb
xchg
pop
inc
stc
xor
imul
jl
push
dec
dec
popa
add
imul
lock
push
jl
mov
add
rcrb
out
icebp
and
rorb
cmpsb
sbb
inc
mov
push
int
popa
mov
cmp
mov
jbe
mov
xor
sub
push
or
je
mov
mov
mov
popa
or
stos
or
mov
iret
pop
mov
add
rorb
and
sub
fmuls
scas
xchg
insb
in
dec
push
outsb
cmpl
ret
icebp
push
mov
mov
test
loopne
mov
push
cmp
cmc
in
jecxz
pop
mov
jb
jnp
in
clc
imul
shlb
jns
jne
push
decb
push
push
cmp
xchg
int
les
addr16
push
in
xchg
cld
ss
push
inc
xor
jmp
aaa
into
and
lret
out
mov
stc
jg
xor
or
shr
push
adc
add
lahf
ss
mov
xor
fnstsw
dec
iret
data16
inc
push
iret
andl
inc
or
add
aad
mov
movsl
repnz
daa
sbb
or
mov
incb
test
aaa
dec
in
shll
add
adc
popl
repz
loope
fdivp
xor
test
scas
int3
mov
xlat
mov
jb
sub
imul
adc
mov
stos
xor
or
cmp
push
sub
mov
je
pop
jmp
lods
cs
jbe
out
pushf
cwtl
sbb
add
test
in
int3
lods
inc
push
or
arpl
push
stos
adcl
ja
xorl
pop
aad
sahf
mov
inc
xlat
or
test
mov
fadds
or
dec
and
bound
and
rol
std
ss
pop
sti
and
fbld
mov
popa
arpl
mov
es
jnp
adc
int
sbbb
xchg
cmp
fdiv
and
mov
loope
pop
or
cmp
je
or
jo
fucomip
adc
mov
ret
sbb
insl
scas
sub
xor
loop
push
cld
hlt
loopne
sbb
jae
push
out
sbb
add
jge
sbb
fwait
push
fstl
fistpll
xchg
dec
add
lcall
and
dec
loopne
leave
and
add
cli
out
push
inc
xchg
imul
mov
xor
xor
decl
cmpsb
push
ljmp
cmp
xchg
inc
in
xlat
sbb
push
imul
fs
fwait
mov
and
push
push
xchg
pop
or
test
cld
sbb
mov
cwtl
and
inc
fnsave
out
mov
jb
cltd
sub
gs
push
fsubl
mov
jne
inc
push
mov
repnz
js
int3
pop
and
mov
mov
mov
gs
jp
push
or
dec
xor
jle
movsb
cmp
lahf
pop
out
arpl
push
sub
pop
jbe
adc
std
xchg
sti
repz
push
xchg
dec
pop
stc
and
repnz
jno
loop
ffreep
sahf
jl
sub
mov
mov
cltd
dec
pop
movsb
repnz
imul
xor
ja
popf
xor
lds
push
jle
test
scas
movsl
adc
xor
shrb
fldenv
inc
xchg
jno
fcoml
lahf
arpl
xchg
popl
add
jp
ja
xchg
cmpsl
dec
lahf
pop
inc
andb
pop
mov
mov
pushf
inc
xlat
popa
psubsw
or
data16
iret
inc
test
hlt
jecxz
lret
xchg
adc
inc
out
xor
fisubs
adc
pop
js
lds
mov
call
mov
daa
inc
pop
inc
adc
inc
and
cltd
push
or
mov
push
ret
and
mov
test
out
movsl
std
and
mov
xor
stos
or
lcall
sbb
stc
call
dec
ds
out
push
lods
push
mov
rep
jo
add
fcoml
mov
loop
hlt
lahf
dec
nop
mull
adc
jge
sub
dec
in
add
cmp
inc
dec
dec
lret
push
ds
jo
jmp
idivl
dec
mov
hlt
dec
jb
and
subb
maxps
fdivl
or
nop
roll
fisttpl
insb
addb
jmp
mov
mov
xor
sti
and
hlt
into
enter
lds
mov
and
inc
sub
sti
and
sar
pop
dec
pop
push
and
inc
xchg
into
loope
lret
pop
mull
mov
xchg
icebp
stos
sub
movsl
pushf
or
inc
aad
mov
xor
add
xchg
push
mov
sbb
pop
outsl
std
cmp
and
fmuls
xor
ljmp
or
popf
in
inc
or
call
popf
mov
idivl
insl
or
jle
div
dec
mov
arpl
js
sbb
jmp
stos
jl
mov
adcl
in
or
sub
lcall
jbe
repz
cli
clc
es
mov
pop
stc
mov
mov
or
cmp
mov
stc
inc
mov
cmp
xchg
out
xor
jg
sahf
push
pop
jnp
aas
and
fidivrs
pop
hlt
or
sub
jl
sub
pop
ffree
add
pop
jg
mov
inc
sti
or
adc
les
pop
add
test
sbb
sarl
inc
daa
adc
add
dec
cmpl
outsl
mov
pop
mov
mov
stos
adc
push
fldenv
adc
movsb
cmpsl
or
data16
mov
test
add
mov
dec
mov
dec
mov
out
sub
in
insb
jle
in
mov
insl
inc
shll
mov
push
out
stos
inc
add
adc
push
mov
mov
pmaxsw
insb
add
dec
fildl
test
pop
sub
test
sbb
sbb
mov
ret
mov
in
dec
sub
imulb
mov
out
mov
in
pop
adc
jp
cltd
and
stos
add
push
push
xchg
aam
xlat
dec
sub
jne
into
push
je
jmp
addl
lods
outsl
ljmp
xchg
cmc
insb
xor
insb
or
enter
push
jbe
inc
shr
xchg
gs
idiv
sub
lods
nop
push
mov
lock
scas
imul
out
jb
push
mov
cmp
add
adc
pushf
mov
jmp
push
ds
repnz
cltd
test
lcall
fistpl
sub
gs
bound
aaa
test
insb
pop
adc
sahf
add
shlb
insl
out
sbb
aaa
call
insb
dec
mov
mov
hlt
inc
popa
lods
mov
jb
pop
pop
adc
mov
adc
pop
mov
inc
in
inc
push
push
cmp
xchg
jecxz
test
jg
cmc
push
pop
and
out
es
aas
repz
cmpsb
push
pop
cmp
cmc
ljmp
cmc
inc
jnp
dec
inc
loopne
outsl
pop
jmp
mov
lahf
mov
mov
mov
fidivl
mov
das
sti
stos
mov
ficoml
add
push
imul
add
movsl
cmp
dec
rol
jmp
mov
cwtl
push
jp
push
xor
jnp
dec
adc
popl
sti
loopne
jo
cltd
add
mov
rorb
fcomps
sbb
out
sub
mov
sbb
cwtl
scas
xchg
shll
test
cmc
sbb
loopne
das
dec
lcall
rcrl
cmpsl
add
or
aam
rcrl
pop
sbb
dec
inc
in
jns
pop
mulw
push
psraw
ret
aam
ljmp
lods
arpl
mov
enter
rorl
pop
mov
inc
jg
cmc
mov
sahf
jecxz
jmp
dec
sub
imul
fisubrs
xchg
popf
ret
and
and
jecxz
lcall
or
cmp
stos
orl
cmp
insl
xor
sub
xor
mov
repz
jbe
or
inc
mov
pop
stos
sub
inc
pop
je
shll
popa
clc
add
scas
addb
cwtl
movl
je
cs
push
dec
das
xchg
arpl
movsb
dec
pop
fnsave
ja
xor
test
cld
ss
call
pop
fwait
and
sub
loopne
pop
testb
xchg
jbe
sbb
mov
incb
ds
subb
jg
out
cmp
out
test
movsl
das
jbe
sbb
pop
cwtl
mov
and
cwtl
cltd
push
imul
mov
jb
ss
xchg
and
jne
arpl
sub
pushf
jg
ljmp
pop
or
in
loopne
xchg
xor
movsl
sarl
dec
mov
aas
rcll
iret
data16
es
pop
dec
insb
xorb
xchg
push
fists
pop
movsb
cmp
cmp
icebp
sti
sbb
ret
mov
test
fstpt
xor
inc
pop
lods
mov
and
cmpsb
mov
xor
lea
jg
pop
push
fidivs
frstor
mov
push
xchg
fidivl
push
and
notl
notl
xlat
jmp
lret
sub
int
fstp
xor
jne
push
std
inc
out
test
es
mov
mov
popa
aad
fists
pushl
test
mov
leave
loop
mov
in
inc
dec
dec
js
pop
cld
pop
jle
dec
clc
cmp
push
ror
sub
jbe
sbb
outsl
ret
xor
decl
cmpsb
dec
and
cmc
fwait
push
orb
push
pop
mov
push
clc
int
cmp
scas
ljmp
jo
inc
pop
fdivl
or
sar
mov
insb
xorb
mov
shl
push
and
xlat
movsb
sbb
dec
inc
dec
xchg
mov
xor
mov
outsb
jle
aad
jl
test
sub
jo
jo
fisubrs
dec
add
add
adc
and
into
inc
and
addr16
sbb
jmp
push
adc
cmp
fsts
sti
pushw
mov
sbb
ljmp
icebp
pop
push
jmp
fldcw
dec
mov
jp
sbb
lret
test
lods
push
es
fsubr
push
xchg
insl
lock
mov
add
daa
leave
mov
je
mov
mov
or
adc
aas
in
or
adc
mov
adc
xor
fs
sarb
fucom
cmp
inc
mov
loopne
jmp
mov
int
sbb
jo
in
and
lods
outsb
xchg
cs
in
push
or
mov
push
popf
dec
test
cmpl
jge
mov
pop
xchg
add
cmp
cmp
in
xlat
icebp
dec
jnp
sti
adc
lret
or
insl
pop
ja
movzwl
pop
and
jb
jne
jge
mov
mov
pop
in
lds
pusha
push
sub
in
xorb
hlt
dec
push
mov
and
montmul
cmpsb
xor
lea
sbb
cwtl
lcall
inc
xor
insl
sbb
fs
cld
mov
test
cs
mov
popf
lret
cwtl
pop
inc
jbe
xchg
cs
xchg
test
fimull
rorl
mov
adc
push
pop
add
cmc
push
cmp
dec
popa
cltd
outsl
cmp
push
mov
js
sub
pop
jle
stc
clc
inc
xchg
adc
sbbl
lcall
shll
insb
shlb
scas
inc
in
xor
xor
sahf
fwait
and
in
fidivrs
inc
test
or
nop
fs
mov
shl
jnp
jmp
or
rcrb
jl
xor
das
lds
into
lock
ficoms
shrb
jb
and
xchg
outsb
add
clc
lods
adc
xor
jbe
adc
jne
sbb
fs
push
sbb
mov
mov
or
push
in
mov
adc
sbb
addr16
and
leave
pusha
cwtl
fwait
pop
cltd
inc
popa
jb
push
xchg
inc
fadd
mov
sbb
arpl
nop
dec
lds
mov
xchg
clc
pop
mov
mov
jmp
fsubp
popf
out
nop
or
mov
xor
insl
push
orl
inc
sub
adc
js
mov
push
call
out
mov
data16
bound
inc
mov
pop
cmp
pop
dec
aas
mov
jno
bound
adc
pop
lahf
cmp
fldenv
add
jb
ret
adc
stc
sub
mov
inc
mov
cltd
test
adc
inc
adc
shl
nop
das
in
push
cmp
pop
shrb
outsl
nop
out
sbb
sbb
not
and
lods
mov
fmuls
cwtl
add
push
jmp
ljmp
int3
stc
sub
mov
test
ja
mov
mov
cmpsb
adc
fildl
and
mov
xor
xchg
or
cmpsb
mov
inc
cmp
notl
jp
fnstenv
pop
insl
push
dec
push
test
repz
and
hlt
sahf
xchg
mov
cmp
sub
xor
ss
dec
pop
cmp
add
pop
sbb
in
dec
aam
gs
sbb
mov
arpl
loope
sahf
ljmp
gs
leave
push
and
add
mov
lret
mov
cmp
daa
xor
lahf
aas
out
pop
std
sahf
sbb
je
jbe
sub
cmpb
aaa
inc
fld
lea
in
out
pop
cmp
in
addr16
adc
sahf
mov
jl
out
add
xchg
lahf
mov
in
lret
jo
mov
cli
xchg
insb
mov
add
int3
cld
add
ja
pop
icebp
sub
movsl
cmp
fcoml
fwait
push
or
ljmp
icebp
dec
stc
fcomps
add
pusha
pop
xor
lea
and
pop
clc
mov
jns
xchg
sbb
popf
xlat
mov
dec
adc
jbe
xchg
dec
add
xchg
fisubrs
int3
stos
mov
imul
int
aam
mov
sbb
movsl
sbb
or
jnp
paddsw
xchg
dec
jmp
mov
nop
loope
push
push
arpl
cmpps
adc
imul
pop
add
mov
inc
shll
pop
cmp
imul
mov
lea
imul
xchg
cmpxchg
js
xchg
lock
cli
xlat
lahf
mov
repz
clc
adc
cltd
adc
aad
das
out
cmc
sarl
jg
lods
out
ljmp
iret
xchg
push
mov
lea
adc
sbb
into
jnp
rcll
dec
or
cld
xor
mov
pop
divb
jecxz
addr16
add
das
push
pop
shr
lret
and
sbb
orb
cmp
and
push
cltd
sub
jbe
cmp
inc
enter
das
cmc
cmp
sbb
in
testb
pop
jae
popf
mov
sbbl
hlt
addr16
lahf
addr16
xchg
push
test
cmpsb
lock
insb
jae
lea
test
outsl
cli
or
adc
aas
mov
mov
sarb
dec
outsb
jae
test
scas
leave
jno
cli
ja
fwait
jne
push
sub
push
push
add
shl
pop
aam
cmpsl
lds
testb
aad
cmpl
sub
mov
div
push
outsl
stos
enter
call
loop
cld
sahf
nop
xlat
xchg
sbb
imul
cltd
pusha
stos
add
scas
loop
ficoms
out
and
insl
push
mov
sub
jp
mov
adc
test
xor
outsl
loop
test
mov
or
mov
les
or
pushf
cmp
mov
cwtl
xor
sbb
mov
pop
cwtl
ljmp
fs
cld
mov
add
bound
outsb
pop
or
sub
xchg
add
popf
rcrl
cli
fwait
push
mov
fxch
arpl
shrl
lods
inc
cltd
push
xchg
jmp
xlat
sub
loopne
cmpsl
loope
xchg
pop
or
push
hlt
imul
int
mov
cltd
lock
mov
iret
and
inc
dec
test
lret
push
es
dec
sbb
imul
rcrl
jno
push
jmp
stos
test
or
sub
lcall
js
aad
push
or
test
sub
push
xor
call
cmp
shll
inc
insl
stos
xchg
stos
fmull
icebp
adc
sub
bndstx
inc
cltd
push
mov
das
arpl
inc
daa
and
jns
jo
inc
xlat
fildl
push
xchg
clc
enter
stos
jne
popa
pop
mov
movsb
in
cmpsl
adc
xchg
cs
dec
sub
pop
mov
cmp
aad
jge
fsubrl
mov
xchg
sbb
mov
add
push
shl
add
jg
push
push
mov
push
xchg
es
pop
mov
ds
roll
dec
adc
dec
dec
or
dec
add
test
shl
lods
jmp
or
lea
sbb
add
jg
shrl
sub
cmp
dec
inc
add
push
dec
jl
dec
cld
ror
data16
push
mov
or
sub
mov
lock
mov
fs
sbb
outsl
dec
test
call
push
imul
sbb
cs
roll
pop
add
iret
push
lock
iret
adc
jbe
pop
sub
scas
jb
aaa
xor
jne
sub
lea
data16
dec
mov
mov
mov
into
fcmove
jo
negb
or
dec
mov
vpmadcsswd
pop
lds
repnz
movsl
cmp
aam
pop
addr16
mov
and
shlb
imul
les
push
jne
outsl
mov
dec
mov
mov
scas
mov
fadds
scas
stc
shrl
sbb
sahf
pop
xor
hlt
and
mov
lret
mov
in
inc
iret
fs
lods
fs
inc
les
xchg
arpl
enter
inc
mov
mov
or
fcmovne
popf
sbb
js
mov
cmp
jb
mov
leave
push
pop
mov
push
in
pop
cmp
aaa
adc
scas
inc
xor
and
nop
ret
xorb
ljmp
in
dec
jmp
push
cmpsl
mov
subb
mov
mov
inc
int
jl
fstl
push
das
cld
xchg
out
rorl
loop
or
arpl
pop
ds
mov
adc
mov
xor
pop
out
cmp
jbe
mov
rolb
and
pop
repnz
lahf
arpl
jns
scas
int
mov
or
je
lods
ja
push
lock
mov
sub
js
push
jbe
in
leave
fistpl
pop
ficomps
or
sub
ret
push
je
pop
and
es
lods
cmp
jno
rorb
out
insb
dec
fsubrs
lret
jl
push
lods
sbb
sahf
mov
shl
gs
fistl
sbbl
out
lret
dec
scas
mov
xor
fnsave
sub
inc
cmpsl
testl
je
jl
cli
out
std
lret
fwait
lods
dec
push
popf
mov
icebp
xor
jb
ss
or
ficoms
xor
mov
cmp
cmp
sub
push
mov
jge
inc
fcompl
in
adc
notb
xchg
mov
sub
sub
push
mov
jecxz
inc
fildl
jmp
push
sbb
dec
and
stos
aad
jmp
negb
into
outsl
push
or
shlb
icebp
popa
cld
ret
pop
sub
ja
pop
ret
cld
dec
lds
cwtl
call
mov
add
jae
adc
addr16
daa
add
pop
hlt
sub
out
loopne
adc
icebp
outsl
adcl
call
jp
jns
pop
stos
dec
xchg
cmp
popf
neg
inc
andl
dec
or
pop
fisubl
std
mov
divl
push
cmp
insl
jb
xchg
lea
inc
loope
or
mov
adc
cmpsb
cmp
int
int3
dec
cmp
adc
push
pop
rcrb
in
xor
in
sub
mov
dec
sbb
sub
cmp
lret
popf
xor
adc
xchg
add
mov
cmp
adc
aas
xor
cmpsl
insl
pop
out
sahf
out
js
lahf
jle
icebp
jnp
scas
inc
repz
mov
out
int
cmp
icebp
jmp
aad
insl
shufps
xor
insb
xor
imul
test
sbb
loopne
and
int3
mov
lret
lock
cli
lds
cli
fdivrs
or
cltd
out
in
push
jae
sbb
dec
mov
xchg
cmc
arpl
lods
xchg
mov
dec
mov
jo
sub
lock
inc
jle
push
lods
inc
nop
sub
fwait
jb
enter
xlat
lret
lea
mov
xor
pop
jp
movsl
in
aas
stc
add
insb
jmp
sbb
mov
lods
xchg
cmpsl
stos
sahf
xor
inc
push
xchg
cmp
xlat
jo
or
jecxz
repnz
mov
push
js
push
add
movsl
lock
mov
mov
int3
fcoml
xor
xchg
dec
loopne
or
mov
adc
mov
pop
shl
xchg
fwait
in
push
in
mov
popa
add
movsb
sub
xchg
sub
outsb
test
xor
jbe
jp
xor
mov
xor
adc
addb
ret
push
add
mov
lret
cmc
or
mov
xchg
add
add
fwait
pop
ret
jecxz
popf
mov
fdivrl
push
das
cmpsb
dec
add
repz
dec
in
call
rcrl
or
adc
xchg
mov
mov
out
or
dec
cld
sub
cvtps2pd
jle
dec
add
in
lds
xlat
sbb
jmp
lods
sbbb
ret
jnp
cmp
les
dec
mov
adcl
ds
popf
xchg
fnsave
hlt
mov
dec
push
jbe
out
adc
mov
stc
nop
dec
loop
push
adc
les
adc
jne
sub
xor
cmpsb
push
lods
sub
sub
adc
int
xchg
cmc
xchg
jecxz
jge
arpl
imul
dec
or
popf
dec
dec
and
jl
sbbl
fstl
fdivrs
and
nop
xchg
rcl
sub
int3
xchg
adc
cmp
mov
mov
imul
shrl
cmp
mov
sbb
mov
enter
cmp
rol
sarb
add
sub
jnp
xlat
pop
sbb
call
pop
aaa
dec
cmp
or
movb
and
out
imul
repz
jbe
cmpsl
out
cmp
dec
push
insb
fwait
fwait
iret
ret
xor
lods
test
or
lret
push
lods
test
stc
adc
das
push
add
sar
pop
or
outsl
mov
dec
xchg
inc
insb
sbb
add
inc
xchg
or
dec
icebp
out
loopne
adc
adcl
cmc
mov
or
sti
bound
sahf
push
mov
ret
mov
jno
shl
mov
pop
adc
movsb
sbb
lret
adcl
aad
test
mov
dec
inc
jbe
jl
jns
push
cs
fildll
dec
jmp
mov
cmpsb
add
imul
jb
and
xor
pop
xor
inc
gs
add
popf
je
mov
sti
cmpb
clc
aam
pop
cmc
sarb
cli
cmp
hlt
sbb
loope
jmp
cld
aaa
fs
xchg
pop
test
in
or
mov
cmpsl
mov
scas
mov
xchg
into
aas
loop
call
and
cli
rorb
pop
outsb
xor
sti
add
bound
adc
jmp
sub
call
adcb
scas
movzwl
fcmove
xor
pop
pop
sub
stos
cmp
pop
dec
or
shll
mov
jl
mov
ljmp
inc
inc
sbb
and
inc
testl
pop
mov
pop
adc
jne
or
pop
inc
xor
popf
test
int
pusha
cli
xchg
push
add
cltd
std
stos
es
add
jge
clc
inc
push
fimull
cli
xchg
jmp
xor
into
data16
xor
jne
imul
xor
mov
sbb
sub
sub
lods
aad
test
jns
repnz
xchg
xor
inc
popf
clc
out
pop
inc
jle
scas
scas
fs
dec
mov
loopne
push
jmp
or
aam
js
mov
adc
or
xor
shlb
push
loope
or
out
outsb
adc
es
sub
das
in
mov
push
mov
bound
fbstp
lret
sub
fmul
into
gs
push
cld
add
shlb
dec
adc
lret
test
ret
testl
inc
mov
gs
cmpsb
rorb
enter
shrl
addr16
into
push
push
popf
scas
test
xor
push
jno
mov
adc
rcl
icebp
mov
out
dec
pop
add
stos
pop
jmp
add
mov
and
rorl
dec
xor
and
jno
or
lods
xchg
mov
in
mov
inc
sub
inc
pop
nop
sbb
sbb
jne
mov
shl
lock
sub
add
into
ret
loope
outsb
adc
cmp
and
xchg
popf
inc
pop
lods
fistpll
pop
test
xchg
xchg
push
xchg
xchg
bound
mov
ja
inc
xlat
push
adc
pop
dec
and
mov
push
stos
mov
dec
dec
or
inc
push
xlat
sub
mov
sub
ds
add
pop
inc
xchg
push
shll
cmpsl
mov
fcoms
mov
out
mov
xchg
jnp
adc
inc
fisubs
mov
clc
pop
movsl
dec
push
or
pushf
lret
mov
call
out
add
movsl
inc
mov
sbb
in
in
cwtl
and
add
cli
jo
add
js
dec
push
xchg
xor
push
sbb
mov
mov
push
jnp
push
push
or
aaa
push
cmp
lcall
push
test
dec
dec
cmp
jns
push
and
mov
scas
cmc
in
pop
add
insl
in
sbb
rorl
ja
mov
pop
cmc
xchg
jo
ds
adc
idivb
adc
dec
and
jecxz
jns
fcompl
je
sbb
subb
dec
hlt
pop
in
add
outsl
jno
push
nop
lahf
dec
mov
jecxz
scas
sbb
mov
jp
push
ljmp
jno
mov
inc
insb
sub
repnz
cmp
adc
mov
movsl
lea
or
fs
xchg
fcmovnbe
push
cmpsl
adc
mov
ret
cli
jg
mov
sbb
rolb
fstpt
sarb
adc
in
push
pop
mov
in
push
push
sarb
aam
and
in
scas
mov
sub
inc
cmp
jg
mov
fwait
sbb
sbb
inc
insb
mov
iret
clc
add
push
int
push
scas
mov
sub
mov
outsl
movsb
jg
out
int3
aas
sub
mov
out
jl
fucomp
mov
mov
clc
or
cmp
inc
jg
ljmp
aaa
adcb
and
xchg
xlat
mov
mov
adc
xchg
mov
sbb
icebp
mov
filds
and
fsts
fistpll
mov
mov
pop
rcrb
add
mov
mov
pop
out
fwait
jg
or
test
mov
aam
popa
push
cmc
pop
and
xchg
sub
push
and
mov
add
dec
pop
hlt
cmpsb
outsb
mov
mov
cmp
push
ret
insb
add
ret
gs
lret
push
into
xor
lods
lret
mov
cmp
mov
loop
or
out
jmp
adc
ret
stos
call
outsl
xchg
pop
jne
fwait
pop
icebp
dec
xor
mov
ret
jge
pop
das
jp
add
cltd
test
adc
push
sub
popf
inc
pop
dec
loop
cmpsb
and
sbb
call
dec
inc
lret
and
mov
lea
fisttpl
lds
test
jne
loop
cltd
scas
add
sbb
xchg
mov
dec
mov
imul
outsl
in
out
cltd
hlt
ret
mov
mov
xor
cwtl
popa
jbe
dec
insb
or
fwait
orb
xchg
sti
and
inc
mov
leave
aam
sbb
loop
dec
fdivs
add
pop
xor
push
dec
loop
xor
outsb
mov
cmp
lods
jns
aam
iret
rclb
lds
fisubrs
mov
popa
addl
or
rcll
and
sbb
push
mov
xchg
daa
inc
mov
iret
or
jae
dec
data16
je
mov
sbb
imul
and
into
xor
inc
add
mov
and
sub
xchg
orb
ss
jecxz
xchg
mov
das
xchg
mov
or
mov
inc
movsl
adc
mov
call
cmp
repnz
pop
lret
mov
add
pop
dec
cmp
mov
add
mov
add
scas
int
loopne
xor
hlt
scas
xchg
decl
sub
dec
popa
adcl
decl
sub
out
out
xchg
mov
cwtl
fsubr
fsubrs
stos
push
test
dec
repnz
lock
int
push
ret
aas
dec
jmp
xchg
mov
outsl
test
enter
pop
add
cmp
in
in
test
out
sub
cmp
or
push
jge
imul
add
pusha
xchg
fldenv
test
pop
sbb
jns
or
sub
loopne
rclb
loope
xor
in
mov
cmp
lret
lret
jmp
fs
shrb
cmp
sub
testl
xor
jmp
out
mov
inc
addr16
jne
xchg
cmp
pop
lods
push
mov
sbb
xor
stos
sub
in
pop
sub
or
nop
test
fadd
sub
popf
div
cmp
ljmp
test
int
adc
jb
xor
sbb
ss
iret
mov
fbstp
ljmp
mov
cli
push
enter
mov
xor
ljmp
mov
ret
xor
push
add
ret
jle
sbb
testb
movhps
popf
xchg
pop
mov
jno
mov
stos
xchg
xchg
sub
sarb
in
inc
mov
testl
dec
loop
push
aaa
adc
mov
mov
popa
cld
adc
hlt
js
gs
xchg
push
shl
call
mov
addr16
inc
fildll
pop
or
std
mov
mov
fmuls
fstpl
xchg
or
in
fidivs
add
imul
faddl
and
test
sahf
stos
lds
sbb
jb
test
add
xchg
add
push
mov
cmp
cmp
mov
and
daa
addl
jmp
aam
jo
mov
repnz
jo
jno
cmp
cmp
dec
pop
sbbl
xor
movsb
je
sbb
lahf
xor
push
out
mov
icebp
outsb
xchg
mov
jmp
jo
cltd
inc
push
pop
outsb
data16
mov
lods
in
fldl
xor
repnz
shll
das
repnz
xchg
xor
push
jecxz
outsl
call
sub
mov
dec
in
movsl
inc
jecxz
inc
gs
inc
cmpsb
cmp
add
cvtps2pd
add
pop
int
rcl
mov
pop
cmpsb
ds
xor
mov
fcmovb
inc
stos
sub
xchg
mov
jns
popl
dec
call
sahf
xor
int3
outsb
cmp
jns
xor
sbb
xchg
sbb
and
or
sub
jg
xchg
cmp
xchg
movsl
sbb
or
test
bound
sub
iret
arpl
add
pushw
pop
push
pop
std
inc
cmp
inc
cmp
fisttpll
mov
fnstcw
incl
imul
ret
arpl
xchg
rcrb
loop
pop
in
sub
xchg
adc
jge
jbe
out
and
push
mov
push
lret
or
mov
xchg
leave
je
lret
fucomip
dec
data16
adc
jle
jmp
shlb
outsb
or
mov
into
insb
add
ljmp
cmp
mov
cmp
int3
add
sbb
xchg
cmp
push
xor
repz
setbe
mov
cmp
insl
jecxz
xor
imulb
xor
arpl
repz
fnstcw
test
daa
cmp
cmp
adc
out
cmp
pop
ret
testb
sub
cmpsb
fs
sbb
repnz
movsb
cld
cmp
adc
jg
push
or
sub
cmp
lods
push
xor
sub
lahf
loope
dec
fisubl
or
mov
and
lret
adc
popa
jo
xchg
and
dec
sarb
rcrl
int
or
aam
not
negb
mov
cli
xchg
mov
push
in
ss
push
pop
jae
xchg
and
cmp
inc
repz
lcall
push
in
xchg
mov
fxch
mov
and
lret
loop
int
aad
pusha
addr16
aaa
movsb
jg
jp
inc
inc
pop
jecxz
int3
xor
pop
sub
push
sbb
xchg
ficomps
sbb
data16
cli
data16
imul
jge
and
repnz
sub
xchg
mov
out
mov
xchg
xchg
sbb
cmp
leave
clc
dec
push
mov
idivb
jle
pop
jl
lds
ja
leave
test
dec
lcall
sbb
mov
daa
or
mov
or
out
aaa
into
sbb
shrl
sbb
and
cmpsl
push
scas
xor
repz
sbb
cmp
or
in
mov
jno
fildll
sbb
push
fldenv
test
sub
cmp
sahf
lret
cmp
pop
out
imul
mov
hlt
dec
xor
jns
adc
insb
pop
mov
imul
add
aam
fxtract
int
mov
addr16
mov
repnz
mov
adc
jno
mov
sbb
arpl
inc
gs
mov
xor
push
js
shl
mov
enter
fsubrs
xor
scas
add
pop
ja
jmp
pop
xchg
jo
into
gs
inc
fldl
and
daa
xorl
jnp
push
xor
add
or
inc
int
xor
gs
push
or
mov
inc
push
das
lds
jno
test
dec
pop
roll
xor
adc
pop
pop
mov
fidivs
dec
adc
sub
popa
pop
mov
or
mov
movsl
repnz
xchg
and
cmp
mov
test
pop
pop
mov
or
mov
xor
jmp
loope
loopne
loopne
dec
test
xchg
shl
fmuls
xor
inc
xchg
fcmovnbe
shll
cmp
xchg
jecxz
cmpsl
cmp
aad
scas
pop
push
movsb
xor
inc
dec
pop
rolb
cmpsb
fisubs
repnz
jge
push
dec
and
or
or
pop
pop
daa
lock
js
in
test
dec
push
aaa
mov
sub
sti
dec
fildll
mov
and
mov
and
jge
mov
daa
sub
das
or
and
push
pop
lods
mov
or
rcrl
fisubrl
add
push
cmpsl
mov
aam
cltd
je
aam
sub
popa
xlat
cmp
loope
adcb
xchg
ja
xchg
sub
push
jno
mov
in
jmp
insb
hlt
and
hlt
mov
out
stc
pop
dec
xchg
add
or
xchg
in
adc
jl
shlb
iret
and
sarb
push
mov
lods
test
mov
sti
loope
je
xchg
ss
mov
out
pop
dec
mov
mov
mov
in
mov
mov
bndstx
dec
mov
jge
test
lods
or
stos
fisubrl
mov
cmp
cmp
fnstsw
cld
shll
fimull
scas
gs
sub
enter
daa
push
icebp
scas
pop
dec
outsl
cmpb
fstps
leave
int
xor
dec
icebp
mov
in
mov
inc
push
scas
repnz
stos
adc
mov
loopne
addr16
or
outsl
sti
jae
test
or
clc
sub
lods
mov
adc
push
ret
xor
push
rolb
pop
add
nop
lods
stos
inc
loop
cli
repz
clc
sbb
dec
inc
pop
xchg
push
push
decl
hlt
push
lock
push
sti
frstor
jge
cmpsb
andb
sbb
adc
sub
frstor
cmp
push
repnz
cmc
shlb
mov
xchg
test
inc
lock
or
dec
xchg
sub
xchg
pop
fsts
nop
sbb
push
mov
push
mov
push
or
int
xchg
test
pop
mov
loopne
cmp
mov
mov
shl
mov
cs
pusha
and
adcl
xlat
dec
cmpsb
fnstenv
or
jo
cmc
int3
bound
mov
enter
arpl
movsl
jns
lea
sub
bound
push
sub
fwait
lcall
inc
addr16
outsl
inc
mov
add
mov
pop
xchg
jne
xchg
sub
test
aad
frndint
sub
jo
rcrl
push
mov
ja
ja
imul
fsubr
add
push
fiadds
mov
dec
ljmp
es
ss
xchg
dec
xor
mov
out
nop
pop
xor
outsb
cltd
xor
mov
call
iret
test
aad
in
jmp
lods
icebp
fwait
les
fnstsw
mov
and
or
inc
into
sti
mov
sub
pop
fcoms
lds
mov
outsl
loop
mov
pop
xchg
dec
lds
mov
push
dec
inc
cmp
inc
mov
test
popf
pop
xchg
sub
lods
xchg
or
js
das
mov
mov
dec
push
scas
hlt
aas
jns
in
in
cmp
popf
pop
clc
jecxz
mov
stc
in
imul
call
or
fbld
pop
in
xchg
test
aas
je
mov
inc
jnp
fsubrs
loop
adc
pop
fdivs
push
in
inc
or
testl
jbe
push
fcoms
ss
out
repz
imul
sub
jae
lcall
xor
imul
movsl
cmc
pop
mov
adc
mov
cmpsl
out
in
sub
pop
cwtl
jae
inc
int
dec
or
xor
lcall
out
xor
inc
pop
and
pop
mov
lea
sarb
or
fdivr
gs
aam
add
xchg
cs
pop
mov
enter
shrl
dec
jecxz
cmp
es
dec
scas
lret
adc
ret
decl
fsubrl
cmpsl
pop
mov
loopne
mov
or
mov
mov
int
std
lods
testb
loopne
leave
and
das
pop
int3
and
jmp
pop
ljmp
xor
jg
dec
mov
jp
es
sub
fldt
sbb
inc
mov
xchg
sub
mov
pop
and
fisttpl
jnp
mov
push
xchg
mov
pushf
lea
add
inc
push
xor
test
inc
mov
movsb
dec
jl
inc
sbb
sarl
lds
sub
ret
sub
xchg
sti
sbbb
pop
push
lret
inc
adc
popf
push
add
mov
pop
scas
xchg
stos
pop
aad
sbbb
enter
test
mov
inc
fisubrs
pop
lret
or
aaa
dec
push
fwait
dec
pop
sbb
enter
loop
sahf
push
fisttps
aam
test
inc
rcrl
cmp
dec
es
xchg
sub
mov
and
out
fsubrp
or
dec
push
daa
mov
inc
cld
les
addr16
sbb
ss
shll
or
inc
jecxz
cltd
roll
push
out
es
test
int3
push
or
pop
and
mov
xor
mov
clc
bound
and
incb
jnp
xor
xor
mov
pop
in
addl
sub
adc
push
jg
add
gs
and
mov
cli
adc
xchg
mov
jae
fwait
sub
int
mov
push
cmpsl
stos
test
out
dec
fwait
sub
mov
mov
mov
sbb
cmp
xor
gs
adc
or
fnstsw
addr16
stc
mov
leave
mov
std
push
clc
xchg
icebp
push
iret
xchg
mov
mov
pusha
les
call
xor
and
hlt
mov
and
in
test
arpl
nop
lret
pop
rorb
adc
icebp
in
inc
or
adc
mov
int3
repnz
pushf
pop
mov
shrb
cmp
out
sub
sbb
jne
jbe
idivb
mov
ja
movsl
add
rclb
xor
sub
jmp
push
in
add
push
cmp
rcrl
dec
push
jge
lret
and
push
lods
mov
xor
pop
pop
imul
mov
es
inc
push
int3
and
xor
jne
sub
adc
jbe
imul
pop
test
adc
shrb
les
stc
inc
je
cmp
int3
inc
mov
ds
inc
test
jp
sbb
sbb
add
clc
aad
pusha
jge
xchg
adc
out
cmp
xchg
xor
fdivl
stc
inc
dec
and
jnp
mov
adc
sbb
lds
arpl
fistpl
cli
cmc
gs
rcrb
jge
movsl
sti
outsb
mov
jnp
stos
and
push
movsl
push
pusha
fs
dec
push
mov
push
sub
jnp
stc
into
arpl
js
push
ljmp
adc
cltd
xor
add
sbb
mov
jae
ret
jnp
jg
pop
mov
jle
jp
or
push
push
nop
inc
sbb
or
daa
loop
pop
call
outsb
cmp
and
outsl
pop
aas
pusha
fwait
nop
jmp
xchg
fldl
outsb
sbb
dec
cwtl
jno
push
stos
in
xchg
sarl
andb
ror
mov
xchg
push
xlat
mov
dec
scas
sahf
xor
adc
sti
test
lret
fwait
mov
xchg
sarb
outsl
lods
imul
adc
rol
dec
mov
fsubrp
pop
xchg
aaa
gs
xchg
jle
das
mov
cld
outsl
adc
push
and
jne
sbb
test
mov
lea
and
nop
xchg
imulb
sbb
test
daa
ret
rorb
hlt
cmp
fldt
push
cmp
fcoms
stos
and
jbe
xor
pop
xchg
repnz
shlb
fsubrl
jg
adc
sar
mov
pop
aas
addr16
fbstp
sbb
or
repnz
cli
cmp
lret
jae
pop
loopne
mov
jno
and
movsl
lods
stos
out
jbe
movsb
pop
mov
or
popf
addr16
or
cmp
out
push
mov
rcrl
decb
and
sbb
jns
mov
shll
mov
jbe
shrb
dec
incb
push
gs
inc
gs
jo
mov
in
das
pop
ss
lods
mov
and
mov
jae
rorb
jl
fildll
int3
js
mov
sub
or
push
cmpsb
lock
jbe
push
addl
testb
xor
inc
popf
pop
pop
jb
and
stos
pop
incb
adc
in
rorb
adc
ss
jnp
fimuls
int3
pop
add
gs
xor
xchg
sbb
adc
inc
or
inc
in
xchg
ss
lahf
xlat
out
cmp
es
hlt
in
hlt
jecxz
das
add
fisttpll
aam
mov
pusha
mov
lea
adc
pop
fcompl
lcall
stc
and
pop
outsb
mov
push
mov
in
push
mul
out
pop
adc
lcall
cwtl
stos
and
nop
mov
cwtl
int
ljmp
imul
inc
stc
adc
cwtl
mov
inc
in
pop
bswap
mov
adc
mov
das
icebp
sahf
pop
xchg
xchg
add
test
je
pop
or
xchg
ror
dec
pop
scas
jns
cmp
mov
lods
mov
stos
xchg
xor
or
mov
mov
pop
test
mov
inc
pushf
fstpl
addr16
mov
test
popa
and
in
sbb
cltd
inc
pop
gs
sbb
cwtl
loopne
and
lods
dec
add
scas
push
sbb
cmp
push
and
ss
cs
nop
dec
mov
out
mov
ror
or
xchg
sub
loop
sarl
aam
aad
dec
mov
hlt
lcall
in
imul
xor
test
and
adc
mov
sub
mov
insb
mov
jmp
pop
iret
insb
pop
xor
push
repnz
cmp
jne,pn
js
bnd
ret
inc
push
mov
aas
push
sub
and
xor
mov
popf
add
cmpsl
xor
and
push
and
xchg
lahf
movsl
ds
int3
insl
mov
mov
in
js
jns
icebp
mov
or
arpl
daa
mov
adc
xlat
push
popf
jo
add
imul
lods
inc
mov
orb
mov
jmp
pop
shll
loopne
dec
std
aam
daa
imul
sub
mov
in
pop
pop
outsb
adc
xchg
sbb
aas
mov
out
jo
add
add
out
mov
mov
xchg
in
push
stos
out
push
cmp
in
or
pop
sbb
jno
dec
cld
into
add
and
iret
or
movb
rolb
sbb
push
jbe
ds
stc
sti
imulb
mov
xor
fcomip
adc
fs
inc
add
sbb
arpl
add
cmp
ret
add
cmpb
sub
dec
xor
lcall
jecxz
jle
aad
xchg
push
cmp
adc
inc
lret
cld
out
inc
frstor
push
pushl
rcl
outsb
add
jno
xchg
xor
pusha
repnz
or
cwtl
inc
cmc
jne
fwait
cmpsb
sbb
rorb
jns
push
popa
clc
sahf
cltd
sbb
imul
xchg
pop
mov
std
cmp
jae
inc
lods
faddp
or
jl
jg
pop
lea
movsb
push
pop
pop
xlat
loope
xor
ds
push
cmpb
lea
jmp
sbb
adcb
or
sub
clc
cmp
ror
in
push
sub
popa
sbb
and
dec
call
sbb
dec
adc
sahf
es
mov
sbb
mov
adc
orl
push
xchg
popf
inc
aaa
sbb
adc
adc
inc
dec
stc
mov
aaa
push
mov
xor
mov
cwtl
xor
sub
jae
int3
mov
xor
or
inc
lods
inc
or
bound
and
mov
cltd
adc
mov
dec
mov
movsb
or
rcr
mov
in
xor
test
sub
shll
movsl
mov
push
mov
adc
pushf
mov
mov
inc
cs
std
lods
cmp
and
xor
push
mov
addr16
iret
mov
mov
or
jb
scas
pop
jmp
hlt
mov
xchg
jmp
xor
jbe
jle
xchg
repz
inc
mov
inc
mov
fwait
mov
lret
sub
adc
jecxz
test
sbb
ds
int3
ds
int3
and
ss
stos
lret
fisttpll
jle
xor
or
or
loope
inc
bound
sub
cs
test
add
ds
push
xchg
scas
xor
jne
and
das
insl
adc
sbb
pop
jge
push
fiadds
scas
pop
ja
int
or
aaa
inc
fwait
test
cmpl
sahf
xchg
pop
test
lods
mov
cmp
fs
xchg
cmpsb
adc
pop
inc
adc
xchg
cs
pop
imul
hlt
or
in
outsl
dec
xor
jo
adc
test
mov
fs
sbb
xchg
int
sub
mov
xchg
pop
and
jnp
cli
or
xchg
xchg
int
stc
sub
cs
inc
jno
out
loopne
push
jo
inc
mov
fiaddl
cmpb
insb
xor
mov
loopne
loope
scas
mov
dec
das
push
mov
xchg
pop
and
add
mov
jae
or
push
adc
mov
sbb
push
cmpsb
rclb
out
jl
fiadds
pop
scas
test
push
jne
cmpsb
jns
orl
cmp
addr16
xchg
xor
dec
push
pop
xor
jne
pop
addr16
inc
mov
lret
lcall
ljmp
and
loop
xchg
stc
add
push
dec
cmp
ds
iret
cli
test
sbb
outsb
push
test
inc
mov
push
pop
lcall
dec
mov
std
fwait
mov
pop
out
jg
and
jo
cmp
in
xor
das
out
push
pop
rcr
mov
jne
push
inc
mov
xchg
push
jo
jl
sub
in
lds
mov
fnstenv
sbb
adc
push
xchg
icebp
aad
stos
lea
add
xchg
push
mov
adc
inc
sahf
push
sub
and
jmp
sub
pop
ds
rorl
negb
jecxz
pop
subl
jp
mov
mov
sbb
dec
add
shll
repnz
mov
xor
addr16
mov
or
enter
inc
in
data16
push
scas
mov
and
pop
push
loop
dec
and
movsl
cmp
inc
outsb
clc
jnp
inc
fucomp
loop
movsl
mull
outsb
test
cmp
jge
popa
sub
mov
sub
xchg
pushf
add
sbb
int
adc
pop
call
in
hlt
addr16
mov
mov
dec
pop
ror
sub
in
adcl
outsl
dec
dec
mov
outsb
mov
ss
sti
stos
in
pop
cmpsb
ds
fcmovnb
pop
and
add
je
in
rcll
adc
jae
and
outsl
inc
aam
aas
popf
push
aam
cld
xor
sti
mov
adc
sti
popf
cmc
dec
hlt
mov
inc
stos
dec
fsubs
lods
popa
sub
mov
push
test
push
cmp
and
jmp
sub
lods
stos
pop
in
into
cltd
jp
enter
xchg
test
dec
pop
scas
lods
dec
mov
lods
movsb
dec
mov
fcmovnbe
insb
or
ljmp
mov
mov
outsb
outsb
pop
std
and
jle,pn
mov
cld
lods
inc
lret
pop
icebp
push
mov
js
pusha
arpl
cmp
pop
xchg
adc
test
jg
mov
les
jb
lahf
inc
inc
dec
or
pop
in
fldenv
in
cmp
fsts
pop
fwait
push
inc
fdivs
jl
mov
fbstp
pop
push
jae
popa
std
lods
stos
inc
pop
je
es
add
pop
ret
daa
adc
adc
mov
xchg
dec
neg
orl
lock
and
or
aam
fwait
hlt
fcomip
cltd
dec
adc
jl
mov
les
fidivrs
cmp
test
in
test
jnp
adc
xor
sahf
or
fs
enter
mov
and
rorb
push
cmp
mov
fmuls
sub
stc
cld
cmpb
lahf
ss
dec
pop
fbstp
and
sbb
xor
pop
gs
aaa
stos
mov
popf
mov
fldenv
aad
fcmovb
fcmovb
test
repz
pushf
mov
out
js
jge
push
arpl
pop
test
fsubs
add
clc
cmpsl
lret
std
out
jo
pop
sbb
cmp
cmc
adc
add
xchg
dec
sbb
add
dec
test
jbe
out
in
jg
shr
sbb
inc
pushf
jne
or
inc
push
and
imul
cmp
popf
pop
aam
jg
cmp
mov
and
ss
pop
cwtl
jae
loopne
test
out
pop
sub
insb
jo
je
dec
push
repnz
cmp
dec
push
xor
dec
outsl
mov
jo
std
shrl
lods
sub
xchg
mov
push
jmp
mov
mov
rcrl
fsubp
repnz
and
dec
es
dec
mov
aaa
jle
push
sahf
or
cmp
sub
repnz
inc
icebp
inc
push
jl
loopne
mov
shl
cmp
cmpsl
cli
mov
dec
daa
addl
outsb
xor
push
jmp
mov
mov
cmp
xchg
leave
xor
pusha
fistpl
inc
inc
adc
popa
clc
stos
pop
aam
jbe
xchg
in
xlat
fdivl
jb
sbb
mov
jl
fbld
mov
stos
add
inc
jbe
cmpsb
cmpsl
sub
mov
imul
add
mov
mov
daa
add
jl
fwait
loopne
shlb
pop
mov
sbb
shll
insb
mov
jmp
mov
popa
outsb
in
add
xorb
adc
push
sbb
lcall
adc
push
add
mov
addr16
jle
leave
adc
cltd
cmp
sbbb
cs
lods
popl
mov
adc
les
and
in
in
cmp
adc
mov
in
jg
ficoms
push
lahf
test
int
mov
cmpsl
inc
sbb
xorl
jns
xchg
or
lret
and
add
sbb
mov
test
mov
mov
pop
dec
mov
mov
pop
int3
mov
aas
pop
inc
lret
pusha
in
stos
fistpll
sbb
clc
xchg
ljmp
hlt
imul
mov
sbb
enter
scas
mov
dec
jge
iret
data16
mov
dec
testl
pop
and
aam
or
push
xchg
push
in
mov
mov
lret
cld
and
adc
jb
adc
test
cmpl
leave
call
jge
cmp
mov
xchg
ja
mov
jp
lret
mov
adc
add
clc
sub
je
adc
mov
pop
int
lods
mov
into
sub
or
xor
clc
jle
sub
mov
push
fwait
shr
pushf
cmpsb
push
inc
push
mov
xchg
jge
inc
pop
ret
ljmp
jno
and
mov
xor
aas
pop
inc
out
aam
cmp
dec
in
pop
dec
loopne
dec
lcall
stos
mov
imul
enter
jp
out
out
js
adc
orb
mov
dec
cs
lock
adc
test
lret
lret
rorl
jle
popa
es
xchg
jae
push
movsl
mov
ss
jo
sub
loopne
addr16
mov
rolb
jl
rcrl
fwait
cwtl
jle
xor
in
mov
jmp
imul
mov
xchg
sub
popf
shr
mov
adc
arpl
test
push
leave
mov
jae
in
add
int3
xchg
fs
adc
mov
mov
cld
dec
pop
pop
gs
mov
sbb
push
jp
pusha
ljmp
lods
sbbb
mov
xchg
andb
jno
mov
inc
and
xor
inc
push
jo
mov
push
call
insl
or
xorl
mov
jae
pop
push
push
out
jbe
subl
hlt
and
sub
movsb
pop
mov
push
mov
ss
loope
shrb
int3
xchg
adc
xor
incl
daa
xchg
xchg
int3
das
push
bswap
and
mov
and
xor
jl
and
jp
hlt
cld
iret
push
outsb
xchg
lds
add
sbb
jae
cmp
jns
xor
jp
mov
jbe
sub
xlat
loope
test
and
inc
adc
xlat
ficomps
pop
repnz
sbb
or
addr16
out
mov
and
popa
movsl
lods
inc
out
cmp
adc
xor
push
adc
mov
sti
push
in
stos
fstpl
imul
sub
pop
dec
sti
sub
or
xor
inc
jmp
enter
arpl
rorb
cmp
adc
xor
push
inc
bound
push
rorl
and
call
movsb
mov
push
aaa
into
imul
adc
ds
or
adc
push
mov
jne
or
rorl
sub
loope
mov
push
push
les
inc
jne
sub
in
loope
or
sbb
rcrb
jp
cmpsl
push
sbb
pop
dec
sub
jp
lea
xor
and
lret
fisubl
mov
ja
cmpsl
mov
lret
insl
inc
test
out
arpl
cmp
jmp
xchg
dec
out
cmp
jmp
sub
jmp
dec
mov
insb
jmp
sbb
mov
inc
mov
cld
mov
ret
jae
out
cmpsb
sarl
into
icebp
add
repnz
jae
and
jns
mov
cs
data16
sub
add
pushf
fldenv
test
dec
xor
cmp
rcl
pop
daa
int
adc
lea
shlb
jnp
lods
adc
push
push
mov
mov
outsl
loop
mov
insb
in
jge
jb
ds
lret
dec
xchg
xor
mov
pop
movsl
adc
into
jb
xor
adc
lock
test
and
sub
lds
scas
mov
in
sbb
xor
push
loop
add
inc
mov
fcomps
xchg
sub
and
sub
adc
jne
shll
fcompl
push
mov
dec
stos
ds
movsl
in
mov
std
mov
in
and
rclb
push
pop
mov
inc
stc
adc
jne
sahf
fdivl
mov
out
mov
inc
out
cmp
arpl
push
jmp
dec
mov
lods
cmpsb
out
push
ljmp
jmp
lcall
and
xchg
and
ljmp
mov
mov
mov
xor
out
inc
push
cwtl
pop
jns
jmp
pop
sbb
adc
inc
andb
test
notl
outsb
add
mov
add
cli
xchg
das
ret
loope
jp
dec
popa
cmp
adc
cld
or
jl
push
add
mov
sub
insl
ds
sub
add
outsb
push
scas
cmpsb
les
sub
shl
adc
jp
fwait
or
xchg
jb
enter
stc
or
scas
scas
sarl
jae
imul
xchg
dec
hlt
out
cmp
das
sub
rorl
inc
inc
mov
enter
jp
int3
and
dec
decb
pop
add
nop
stos
es
shll
xchg
dec
pop
lret
nop
fs
add
mov
jne
insl
test
push
or
jns
jae
or
std
fs
ds
xchg
pusha
pop
mov
add
pop
stos
movsb
cmp
mov
push
repz
push
bound
addr16
arpl
arpl
out
bound
mov
in
sub
cld
int
lock
daa
cmp
loop
fiaddl
adc
jp
inc
pop
jae
jo
out
dec
pop
xor
fsubl
ljmp
lods
mov
cmc
inc
fdivl
fldcw
sahf
mov
push
pushf
lret
mov
mov
cmp
sbb
mov
jno
test
test
lods
fucomi
outsb
jmp
sahf
lods
bound
and
mov
movsl
out
popf
xchg
adc
jne
notl
aaa
pop
jg
mov
jg
in
imul
stos
lds
test
shl
fldl
addr16
push
cmpsb
fwait
out
push
sbb
fs
jno
xor
fbld
lcall
roll
or
sub
iret
cmp
or
lds
jg
cmp
andl
and
jae
xchg
roll
and
pop
push
xchg
push
shlb
fsubs
ljmp
push
lds
test
pop
push
push
xor
push
pop
jl
repnz
mov
xlat
cmp
push
xor
js
lods
xorl
lret
fisttpll
rcrb
mov
adcl
in
fsubr
cmc
or
cmpsl
jmp
loop
adc
sub
lret
popa
mov
push
jmp
out
mov
pop
pop
movsb
cmpsb
sti
pop
sbb
sub
movsb
add
cmp
sub
push
jle
jb
mov
test
mov
in
fisubl
ja
mov
add
lock
outsb
sbb
scas
sbb
inc
test
fcomip
inc
das
int3
mov
fdivl
ja
inc
sbb
mov
icebp
shrb
ss
rcrb
cld
rclb
sbb
mov
out
mov
adc
push
push
sbb
xchg
and
cmpsl
rdtsc
fimull
aaa
sar
jp
mov
xor
gs
cmp
push
mov
xchg
push
mov
fcompl
mov
dec
push
mov
adc
jge
push
pop
xor
mov
addr16
shrl
or
xchg
clc
jb
xchg
sbb
cmp
or
mov
xor
fisttps
aas
in
cmp
call
mov
pop
xor
pop
mov
into
gs
out
inc
ja
shrl
insl
add
lahf
dec
pop
and
fnstenv
lahf
pop
dec
test
stc
sub
cmp
push
aas
pop
mov
cmp
mov
mov
movl
sbb
rclb
cli
pushf
fldcw
outsb
test
fdivrl
xchg
daa
aad
xchg
cmp
pop
addr16
cmp
sub
pop
std
loope
sbb
push
pop
add
mov
test
or
add
xchg
in
enter
loop
xor
ret
test
add
jbe
jns
add
aam
mov
xor
inc
sub
xor
xor
push
sub
push
cmpsb
sub
add
faddl
hlt
in
mov
pushf
and
push
lock
and
repz
xor
or
stc
in
out
jmp
inc
imul
scas
rcr
fadds
cmp
adc
lret
mov
loope
pop
mov
mov
std
inc
pop
test
js
add
push
fstl
fnsave
jl
fistl
push
inc
xchg
push
int
in
lret
rcr
fs
popa
jbe
xchg
push
or
cld
push
or
xchg
inc
mov
shl
mov
insb
into
in
stos
dec
mov
mov
pop
add
sub
push
add
push
sub
and
enter
sbbw
and
enter
pop
imul
cmp
mov
lret
shlb
xchg
mov
sub
mov
testl
test
mov
cltd
xor
mov
aaa
pop
jae
push
jle
pusha
enter
cmp
adc
dec
int3
pop
not
movsb
std
imul
xchg
dec
adc
mov
repnz
mov
popf
arpl
jns
lods
stos
or
xchg
aas
fistl
inc
mov
fs
aam
loope
aas
adcb
lds
lods
and
xorb
andb
mov
loop
nop
cmp
lcall
mov
daa
jecxz
jg
pop
mov
clc
mov
push
std
xchg
add
add
sbbl
mov
pop
dec
sbb
inc
outsb
sub
xor
or
scas
sbb
outsl
in
ret
inc
jnp
stc
nop
jnp
pop
dec
or
imul
jo
sub
or
addr16
pushf
test
xor
push
out
mov
int
cmpsb
lea
sub
in
sub
ret
lcall
jbe
inc
insl
push
out
out
cmp
popa
outsb
jle
jae
adc
xor
inc
dec
push
fists
add
mov
mov
add
sbb
mov
push
mov
ds
cmpsb
cmp
movsl
push
sbb
bound
addr16
jle
jae
pop
pop
inc
sbb
jbe
dec
push
push
xchg
dec
pop
call
in
cwtl
push
jmp
xchg
inc
adc
mov
cmp
inc
popf
dec
lea
in
mov
leave
pop
mov
shrl
jge
jo
mov
fists
adc
loope
ret
fbld
out
nop
imul
jns
sahf
mov
les
nop
out
js
test
pop
hlt
mov
bound
jne
cmp
or
mov
mov
add
push
clc
es
dec
nop
inc
movsl
clc
jle
sub
js
cltd
hlt
cmp
pop
mov
mov
cwtl
mov
dec
and
dec
aas
ss
lcall
push
mov
mov
xchg
call
sbb
push
xor
mov
lcall
movl
pop
rcrl
sub
xchg
fwait
lock
cmp
mov
loopne
outsb
xor
fcompl
xor
out
aas
jp
xor
mov
xor
mov
imul
cmp
aas
mov
jnp
mov
jnp
dec
adc
outsl
xchg
notb
or
adc
addr16
insl
jge
stc
int
or
mov
jl
pusha
ret
fwait
cltd
inc
aas
in
outsb
push
test
pop
cmp
inc
pop
or
loopne
or
and
jmp
xor
and
add
insb
mov
xchg
je
jmp
fmull
mov
int
mov
fildl
dec
add
pushf
mov
mov
or
xchg
or
vshufps
or
test
sbbl
mov
call
or
xchg
aaa
mov
rorl
dec
pop
testb
jge
mull
jmp
xor
out
andb
nop
insl
test
dec
jbe
fnstsw
daa
mov
sbb
insl
lahf
pop
push
test
leave
movsb
sbb
negl
and
xlat
mov
add
aas
mov
ret
mov
fyl2x
push
js
aad
dec
movsb
xchg
aam
cwtl
sub
sub
cmp
popa
test
inc
inc
adc
cmp
push
jae
and
sbb
cs
fsubrs
sbbl
and
jo
sub
out
lods
sahf
pop
test
adcb
test
xchg
sub
add
sub
inc
mov
test
xor
pop
jl
jmp
out
sbb
jo
adc
lahf
add
iret
insw
mov
out
popa
jbe
mov
sbb
repnz
stos
sbbl
dec
ja
cmp
sbb
sub
lods
mov
push
jl
testb
or
pop
cs
lds
sbb
ja
in
popa
je
xchg
add
push
shrl
mov
loopne
loop
setnp
imul
sbb
loop
push
add
fisubl
rclb
inc
push
and
sbb
lahf
inc
fucomi
mov
mov
sbb
rcr
jmp
fcoml
orl
lds
xlat
dec
lcall
mov
sarb
add
into
mov
pop
lret
xor
and
jecxz
xchg
jge
or
mov
lret
std
nop
out
enter
mov
and
inc
loopne
popf
add
repnz
mov
and
cmp
test
rolb
and
movsb
lcall
popf
popa
sbb
cmp
je
dec
mov
xor
mov
cmp
push
jmp
push
jmp
xchg
ds
mov
jl
push
scas
sub
popl
call
add
xchg
xor
push
adc
mov
out
pop
add
loope
or
aas
out
data16
pop
sbb
jge
cld
push
jmp
lock
imul
sbb
stos
inc
loope
jo
daa
test
adc
jmp
fisttpll
mov
mov
cmp
adc
xchg
mov
sbb
aas
mov
push
adcb
sbb
sub
sub
lea
cmp
inc
mov
out
jp
aaa
sbb
jle
rcr
cltd
pop
lret
test
popf
shl
pop
cmp
mov
jne
fldt
xchg
test
les
push
jmp
sbb
icebp
mov
fidivrs
cmc
dec
or
xorl
add
lods
sti
and
pop
rorl
sub
icebp
xor
nop
pop
adc
mov
dec
cmp
aam
xchg
push
adc
or
pop
adc
inc
lods
jg
sub
cmp
jb
adc
movsl
lock
gs
pop
xchg
mov
test
dec
aaa
adc
push
mov
jns
push
imull
sti
pusha
movsb
icebp
push
popa
jns
adc
notl
jne
fwait
sub
movsb
xor
inc
inc
icebp
jg
test
mov
clc
or
or
pop
jne
lahf
lea
cmp
movsl
daa
mov
xchg
dec
mov
out
movsl
push
mov
gs
cmp
cmp
jno
push
fdivrl
sbb
mov
or
or
xchg
xor
outsl
jnp
push
cmp
ljmp
fldenv
mov
inc
loopne
ljmp
rep
inc
loop
data16
pusha
mov
or
jnp
stos
nop
jge
mov
clc
sahf
hlt
fbld
mov
xchg
sbb
dec
add
mov
mov
xchg
mov
mov
ljmp
jno
imul
mov
or
add
adc
mov
sbb
shl
inc
mov
ja
repnz
lret
and
loope
lods
sbbb
or
adc
or
insb
sub
cmpsl
pop
jmp
mov
jmp
adc
pop
mov
jg
insb
mov
sahf
scas
daa
cmp
mov
jb
scas
sbb
insl
adc
sbb
out
pop
mov
or
push
inc
mov
fwait
sub
in
div
jmp
sub
dec
push
popf
jg
andl
push
pop
lahf
or
bound
ja
sub
push
iret
push
mov
jns
cld
pop
mov
push
jmp
add
jo
jmp
fldl
out
sti
xchg
push
pop
das
mov
lods
sbb
insl
pop
aaa
into
cmp
dec
pop
mov
mov
ja
pusha
mov
imul
push
mov
mov
ss
stos
popa
dec
adc
push
setl
mov
pusha
add
jne
sti
cmpsb
mov
sbbb
or
fdivl
mov
repnz
out
jg
or
lret
dec
loopne
hlt
dec
cmpsl
cmp
push
mov
jnp
fstpt
xchg
cli
push
loopne
daa
cwtl
cmp
mov
ror
scas
inc
add
pop
fiaddl
sahf
push
push
push
loop
jmp
push
sbb
jl
loope
mov
inc
lods
xchg
cwtl
arpl
or
jle
fwait
mov
xor
movsl
gs
push
jmp
inc
mov
inc
rol
idiv
mov
push
lds
pop
fs
movsl
in
popa
loop
xchg
inc
fidivrl
sbbl
lahf
hlt
arpl
adc
imulb
jne
std
clc
movsl
inc
push
xchg
sub
jmp
mov
les
ret
in
dec
cmovo
sar
sbb
cmpsb
lds
test
sbbl
sti
jb
ret
lret
and
out
inc
push
out
mov
outsl
add
mov
push
mov
or
sub
push
jb
pop
cmp
lret
sti
arpl
ja
and
fidivl
cmp
bound
sbbl
mov
and
mov
inc
call
loopne
jbe
rcrl
jno
pop
mov
and
mov
sti
xchg
cmp
pusha
test
pop
xchg
sub
pop
xchg
xor
in
jmp
in
push
xchg
sbb
dec
das
jae
fdivl
jns
cmc
lds
in
jecxz
jecxz
bound
ret
jle
movsl
and
fisttpl
repnz
mov
pushf
xor
insl
xor
cmp
sahf
and
pop
lock
pusha
das
inc
jbe
add
cwtl
int
mov
shr
jns
sbbl
adc
mov
iret
in
icebp
and
les
les
add
push
fwait
sub
aam
add
mov
pop
ds
aam
xor
pop
pop
xchg
add
xchg
pop
mov
cmp
xchg
out
stos
hlt
add
dec
push
popa
fdivrl
sbb
xchg
js
cmp
xor
xchg
jecxz
imul
pushf
jae
mov
adc
pop
inc
inc
dec
repnz
pop
jl
mov
ja
aas
cltd
add
cmpsb
sbbl
pop
loopne
xor
fcoms
test
dec
decb
pop
lcall
add
lods
inc
test
xchg
add
mov
sub
iret
mov
addr16
pop
gs
mov
aam
mov
ret
mov
mov
pop
mov
lods
into
loopne
arpl
popf
jns
mov
and
cmp
push
xlat
mov
popa
les
xchg
pop
dec
lret
bound
add
and
pop
movsb
inc
mov
es
jno
add
lods
add
arpl
inc
mov
push
ljmp
jb
sbb
or
cmp
add
pop
ret
dec
test
loopne
pushf
mov
js
stc
jge
das
lret
js
idivb
mov
sahf
loopne
shll
and
xchg
hlt
push
mov
das
clc
dec
in
dec
cmc
inc
lcall
jl
sar
cwtl
cmp
sub
int
cld
jne
notb
jae
and
xchg
mov
inc
mov
sub
out
movsb
xchg
out
inc
lahf
mov
testb
int
cmpsb
dec
hlt
push
stos
jo
mov
or
leave
movsb
or
test
out
lcall
cmp
in
mov
shll
xor
clc
or
imul
xor
scas
imul
cltd
aam
adc
aaa
mov
xchg
jmp
out
popf
jb
add
int3
icebp
insb
mov
roll
fmull
and
adcb
push
pop
pop
add
mov
gs
fwait
adc
test
mov
push
lret
sti
sub
jnp
or
scas
push
xchg
mov
aas
addr16
cmpsl
in
scas
out
sub
mov
or
aaa
stos
jecxz
sbb
aaa
and
out
sbb
inc
loop
mov
pop
je
popf
imul
fwait
mov
bndstx
or
subb
push
loope
or
cmp
in
popa
mov
movsl
mov
cmp
jp
cltd
pop
repnz
sub
mov
mov
inc
hlt
sub
sbb
mov
addb
inc
adc
ljmp
lret
jecxz
pop
fs
push
add
or
or
mov
add
out
andb
cwtl
mov
nop
in
push
mov
ret
outsl
and
mov
cmp
fxch
add
sbb
sbb
sbb
fisttpl
mov
ss
clc
mov
dec
lcall
scas
adc
lds
mov
in
addr16
ret
lods
mov
adc
xchg
in
pop
pop
cmp
not
pop
hlt
sbb
ds
cs
adc
popa
inc
test
repz
dec
fisttpl
adc
cld
dec
mov
fcoms
xor
arpl
adc
jae
sub
movsb
les
insb
sbb
and
not
mov
in
jge
or
cmp
adc
sbb
pop
pop
imul
and
mov
addl
cli
pop
sbb
iret
mov
cmp
in
jecxz
in
fsubrs
mov
mov
and
mov
xor
clc
or
sbb
mov
insl
shrb
pop
pop
mov
xchg
cmpsl
adcl
call
sahf
shrd
stos
sbb
pushf
movb
out
fistl
mov
movsb
xchg
scas
shlb
or
xor
dec
dec
inc
shlb
and
sahf
je
or
jns
add
int
nop
mov
inc
xchg
stos
xchg
cmpsb
push
jne
or
out
pop
loop
cli
push
rcrb
cmp
xchg
or
mov
pushf
jmp
mov
int
mov
mov
jg
rcl
outsl
adc
imul
je
scas
mov
adc
mov
loopne
test
aam
shrb
ficomps
jl
fwait
cmpsl
fidivrl
cltd
and
popa
jnp
adcb
pusha
aad
or
test
adc
ret
rcll
orb
fildll
mov
adc
sbb
pop
cmpsb
jp
dec
out
std
mov
sbb
pop
test
and
jle
arpl
cltd
xchg
pop
sbb
push
mov
or
imul
cli
or
xor
das
in
in
es
mov
xchg
scas
and
jbe
inc
call
in
or
dec
cwtl
lcall
fsubrs
imul
inc
sub
jne
sbb
push
sub
push
or
xchg
push
stc
rcl
adc
leave
xchg
mov
in
dec
push
rolb
mov
std
in
das
outsl
sbb
sti
shlb
aad
inc
int
js
in
lds
cmp
mov
push
push
mov
inc
mov
pop
dec
scas
les
push
mov
xchg
lret
cmp
test
mov
mov
iret
pop
push
outsb
cmp
shr
mov
arpl
shrl
or
repnz
hlt
mov
loope
sbb
lds
jp
fildll
xchg
dec
xor
mov
stc
or
int
fisubs
or
mov
cwtl
addr16
or
pop
lret
loop
inc
mov
push
movsb
pop
mov
pop
jb
mov
xchg
push
adc
lret
jmp
or
xor
xor
sahf
lods
sub
jno
cmp
sub
inc
adc
cmp
dec
mov
mov
jmp
das
ret
jge
push
jmp
fldt
cmpsl
ss
lret
sub
gs
inc
ja
dec
mov
push
fistpll
pusha
aad
bound
xchg
pop
sahf
cmp
sarl
fisubs
imul
loopne
cmp
sbb
lock
hlt
adc
sbb
push
jmp
inc
xor
push
pop
out
add
pop
stc
daa
test
xchg
cs
in
scas
xchg
cs
lea
cmp
mov
into
mov
and
cmpsb
cs
shrb
loopne
mov
repnz
pop
dec
int
aaa
ljmp
lods
movsl
xor
hlt
mov
add
rclb
xor
out
pop
inc
push
mov
gs
jo
push
adc
cli
inc
cmp
jo
push
mov
into
jmp
fnsave
add
inc
nop
call
jp
out
dec
pop
negl
gs
mov
in
lahf
iret
addr16
je
jge
shrl
push
js
xor
mov
loope
sbb
push
ret
ret
push
hlt
xor
scas
mov
or
lea
or
decb
out
mov
dec
ja
dec
jmp
fcomps
ds
dec
test
movsl
xor
pop
jecxz
pop
add
mov
dec
pop
data16
lods
fstpt
shrb
jg
mov
fistl
mov
and
mov
inc
cs
ret
ret
or
int
sbb
and
rcrl
mov
or
mov
add
insl
and
xor
mov
mov
inc
ljmp
mov
sbb
outsl
not
lret
daa
sbb
inc
inc
and
push
push
or
jmp
fxch
mov
test
mov
jmp
jno
leave
adc
sub
push
cmp
jecxz
mov
or
sub
aaa
push
in
cli
or
adc
fistpl
mov
mov
jae
dec
pop
sub
shlb
push
icebp
jne
push
daa
ljmp
mov
jecxz
push
jl
add
inc
pop
mov
arpl
ljmp
sbb
lods
push
sub
iret
inc
sub
or
and
scas
and
xchg
test
pop
in
das
inc
imulb
cli
jae
ficoms
test
add
sub
jmp
stos
mov
dec
fnstenv
loopne
mov
movsb
adc
pop
not
sub
test
sbb
dec
cmp
xlat
cmpsb
ret
push
aad
mov
dec
jecxz
adc
je
push
or
std
js
sbb
lods
jno
adc
cltd
jb
and
mov
sti
scas
pop
lock
hlt
mov
mov
fisttpl
loope
jno
mov
xchg
xor
repnz
dec
adc
push
cwtl
out
lds
lds
adc
ss
pop
cltd
je
lods
adc
xlat
repz
int
mov
adc
cmp
lods
push
push
icebp
rcrb
imull
fsts
cmp
or
pop
adc
daa
or
dec
add
inc
out
popf
or
sub
jp
xchg
jge
popf
jo
sahf
movsl
repnz
fldt
and
popf
sub
or
sbb
ret
xchg
stos
gs
repnz
sti
adc
cmp
outsl
xchg
ljmp
addr16
jns
in
and
push
or
lods
inc
push
out
add
pop
adc
xchg
lods
fistpl
add
mov
push
push
test
jb
jg
es
dec
mov
lods
loope
repnz
push
loop
dec
or
inc
sahf
ljmp
cs
int
gs
lock
test
ret
and
sbb
add
adc
shll
fsubs
test
leave
pmaddwd
stos
in
cmp
jno
xchg
pop
insl
neg
mov
mov
xchg
mov
lcall
adc
xchg
xlat
shl
xor
ret
loopne
aad
mov
pop
mov
les
pop
fists
jge
cmp
or
clc
jmp
mov
aaa
mov
pop
repz
notl
fidivs
jg
inc
std
jo
mov
and
aam
jge
jmp
rclb
fdivrl
xchg
xchg
rolb
pop
cld
fcomps
pop
mov
leave
xor
mov
xchg
cmp
ljmp
pop
push
or
popa
xchg
mov
popa
mov
mov
repnz
sbb
ja
xor
mov
mov
lods
popf
add
mov
and
out
inc
xlat
pushf
sahf
out
into
cwtl
pop
rorl
push
push
jmp
dec
pop
adc
fcmove
and
push
loop
enter
lock
gs
mov
fmul
mov
mov
orl
xchg
pop
xor
push
pop
cmpsb
mov
mov
inc
jo
outsl
out
cld
mov
movsl
aas
mov
or
stc
mov
add
xchg
orl
mov
sbb
add
pop
arpl
jnp
cmp
mov
fiaddl
fbstp
push
into
jno
jecxz
mov
sub
sahf
cmp
push
push
pop
rcll
adc
hlt
in
xor
push
push
or
je
push
xor
mov
dec
sbb
ja
dec
in
lcall
popf
aam
sub
decb
cmpsl
xor
mov
adc
pop
mov
mov
jecxz
loopne
fisttpll
adc
gs
iret
cli
aaa
mov
in
faddl
out
mov
cmpsl
mov
mov
inc
test
pop
xor
pop
mov
popf
hlt
jnp
mov
sbb
jne
lcall
das
cmpl
xor
or
sti
push
popa
gs
fwait
xchg
rorl
push
fsubrs
cs
jge
jbe
das
push
pop
lock
mov
push
jno
enter
insb
jmp
pop
scas
and
mov
stos
push
pop
shl
xor
movsl
push
cmp
call
enter
sbb
jl
pusha
xor
xchg
pop
push
aas
xchg
push
roll
loopne
or
std
jne
dec
cmpsl
push
shrl
mov
sarl
std
xchg
jmp
enter
and
testb
stc
mov
mov
add
enter
je
loopne
shlb
popf
cld
push
jp
rorl
inc
push
push
cld
out
das
mov
vsubps
or
or
mov
mov
pop
cmpsb
ss
ror
dec
test
and
pop
mov
mov
repz
mov
aad
pop
xchg
dec
sub
mov
lret
sbb
in
dec
ret
lret
cmpb
cwtl
push
test
lahf
push
es
jo
xchg
inc
inc
mov
ret
pop
fisubrl
pop
inc
pop
ds
pop
add
mov
mov
enter
das
ljmp
daa
movsl
adc
repnz
add
add
jb
adc
lock
dec
dec
pusha
stos
sti
mov
add
sub
pop
xor
mov
jp
push
lods
mov
fwait
mov
roll
loopne
push
xor
or
xchg
xchg
cmp
fwait
repz
and
jmp
mov
imul
pop
adc
cltd
stos
add
sub
and
sub
ss
jg
aam
sti
push
sub
test
into
cs
inc
test
pop
mov
ret
in
pop
mov
stc
xor
sub
insb
iret
sub
call
jb
inc
inc
mov
aam
pop
enter
push
jmp
les
jno
pop
cmp
addr16
int
pop
jmp
mov
aad
adc
aad
gs
fldl
xchg
xchg
mov
xor
pop
or
insb
or
jbe
repz
mov
cmpsb
imul
aaa
iret
lahf
cmp
arpl
jmp
xor
inc
outsl
ficoml
cmp
cmpsl
or
repnz
aaa
sbb
push
jns
je
inc
push
xchg
jno
test
mov
mov
push
movsl
push
pop
pop
mov
pop
jge
repz
jg
inc
mov
mov
cld
adc
clc
repz
mov
jp
mov
or
dec
pop
ret
lock
cmp
adc
xchg
and
cwtl
pop
sub
jp
mov
loope
push
xor
lods
das
out
xchg
or
loope
test
jp
cmp
push
xor
cmpsl
ds
fs
add
xchg
or
cmp
cltd
pusha
and
jmp
notl
mov
les
aaa
mov
pop
inc
addr16
fcomi
push
inc
lds
ret
lahf
and
inc
clc
fwait
mov
xchg
and
xchg
xor
hlt
imul
lahf
ss
cmp
adc
pop
push
or
in
das
xchg
jmp
mov
adc
push
popf
fsts
or
inc
mov
loopne
rorl
cmp
push
add
pop
add
es
aad
jne
sub
fwait
push
or
popl
mov
out
das
adcb
push
andl
mov
add
leave
push
jno
sbb
pop
outsb
outsl
or
dec
subl
mul
cmp
mov
and
into
es
fiaddl
inc
fdivl
sti
sbb
push
notb
ret
cmc
mov
test
jae
jecxz
mov
loop
mov
mov
sahf
rcrl
cmpsl
mov
jns
xor
dec
ljmp
pop
popl
push
jmp
sti
enter
mov
xchg
lea
divl
sbb
aad
adc
push
lcall
ja
mov
mov
or
lcall
sbbl
push
movsl
ret
dec
jmp
test
leave
stos
sbb
insb
div
jmp
popa
xor
fistpl
cld
inc
imulb
popa
adc
rcll
loope
in
fimull
hlt
xor
push
in
sub
push
cmp
push
sub
dec
movsb
lahf
mov
shr
mov
jl
inc
dec
and
test
xlat
sbb
das
cmp
scas
mov
lahf
pop
sahf
adc
jge
mov
out
cmc
jno
and
mov
cltd
mov
ror
and
and
mov
mov
push
int3
in
les
data16
inc
pop
pop
dec
mov
testb
icebp
pop
in
push
aad
dec
out
jmp
xchg
mov
fwait
jge
xchg
lds
add
nop
and
leave
outsl
jae
lahf
loop
ljmp
lcall
shll
les
jle
xor
or
cmp
fs
int
int3
jo
push
cmp
jne
xchg
pop
sub
cli
pop
ret
jae
jge
das
xchg
or
orl
gs
or
dec
jo
push
adc
push
inc
xorb
inc
clc
xor
jge
ss
adc
pop
jecxz
mov
push
push
mov
push
aas
xchg
hlt
in
cmc
mov
call
adc
popf
test
mov
leave
and
addr16
jl
decb
mov
xchg
int
dec
inc
fidivl
outsl
adc
adc
arpl
and
nop
adc
sub
sbb
mov
push
or
add
and
sub
mov
dec
adc
or
test
scas
mov
jmp
or
nop
rol
jbe
xchg
push
icebp
pusha
cmpsl
jno
repz
sub
divl
adc
dec
cmpl
pop
adc
movsb
add
push
clc
inc
or
pop
fdivrl
dec
loope
push
js
push
lret
cld
je
pop
sbb
add
fidivs
sub
adc
xor
push
jl
sahf
mov
addr16
jns
cs
imul
xchg
cmpl
test
jbe
cltd
inc
cmp
test
ret
sub
rclb
imulb
js
fsubp
cld
andnps
lcall
dec
filds
ret
xor
xor
xchg
hlt
jnp
and
push
sub
dec
testl
jp
or
or
shrl
cwtl
outsl
push
inc
decb
jle
mov
push
lahf
and
jae
lds
popf
xchg
std
mov
push
test
scas
lea
push
xchg
das
orl
hlt
sbb
pop
dec
in
jnp
xchg
sub
push
sbb
testb
fmulp
aaa
outsb
adc
pop
fdivl
or
xor
orl
sub
pushf
mov
mov
jo
xchg
idivl
adc
xchg
mov
jns
mov
cmp
dec
sbbb
je
lcall
push
sub
out
mov
test
iret
movl
mov
rcll
jge
push
scas
enter
out
ret
loope
sti
push
inc
aas
jl
jno
lret
jne
fwait
repz
out
aas
sbb
pop
lahf
divb
jg
dec
xor
ret
repnz
mov
movsb
adc
xchg
data16
jae
mov
outsb
dec
call
int3
out
lea
lret
or
and
rcrb
jne
and
rcrb
push
int3
cmpsb
cmp
mov
mov
push
jne
imul
cmpsl
das
dec
push
cmp
dec
jo
sti
cs
lcall
xchg
pop
sbb
add
ss
adc
addr16
out
push
dec
xchg
pushf
ss
imul
or
jno
lock
add
out
js
cwtl
ja
ljmp
xor
hlt
dec
ret
inc
popf
test
pop
adc
push
mov
movsl
xchg
mov
cmp
or
mov
add
lock
ss
push
aaa
fldt
subl
dec
pop
ja
push
xchg
xor
mov
call
adcb
data16
ds
fisubrs
in
push
cmp
mov
imul
es
push
js
jns
push
mov
lret
mov
adc
add
jae
ficomps
xchg
mov
mov
mov
push
push
pop
fisubs
mov
push
fwait
jl
mov
out
dec
fnop
mov
xchg
mov
arpl
int
rorb
xchg
jp
xchg
add
sbb
mov
in
add
mov
or
pop
dec
add
sub
sub
ret
fcoms
adc
ds
popf
daa
push
out
push
jns
je
lock
sbb
test
lret
jp
aaa
mov
cmpsb
jmp
push
cmp
addr16
pop
jmp
inc
xchg
adc
sbb
dec
bound
jg
shrb
js
lea
movsb
jae
jge
cs
cmc
stc
mov
cmpsl
jg
movsb
inc
xor
jns
sbb
fwait
mov
or
and
or
jo
cld
mov
sub
mov
adc
nop
xchg
adc
push
es
dec
adc
xchg
or
jle
imul
jg
mov
iret
jp
jne
lret
bound
mov
insl
add
xor
sbb
test
icebp
push
insb
popf
stos
cs
das
add
in
adc
add
lds
imul
dec
mov
xor
adcb
jg
outsb
mov
xchg
or
xlat
xor
mulb
andl
ljmp
dec
inc
pusha
pushf
fsubrl
leave
cmp
jle
imul
test
or
add
inc
mov
jnp
jecxz
ja
mov
jecxz
fidivl
dec
pop
push
pop
jg
sahf
pop
scas
inc
xlat
sbb
bound
push
les
mov
inc
add
wrmsr
clc
adc
and
leave
mov
pop
mov
mov
mov
jmp
cmp
repz
pop
clc
and
out
andl
jns
xchg
mov
pop
mov
cmp
sub
int
shll
mov
fisubs
je
xor
in
jle
aas
fbstp
or
test
test
sub
xchg
push
jnp
lock
mulb
cmc
or
inc
push
je
push
rorl
into
jo
enter
adc
lods
cpuid
cli
cmp
cmp
sbb
mov
and
inc
cmp
data16
jb
fldt
call
xor
mov
int
sbb
repnz
sbb
push
jg
xor
mov
hlt
cmc
inc
adc
sbb
xchg
jg
int3
mov
gs
lea
mov
lahf
gs
mov
sub
out
mulb
jmp
jmp
les
cmp
mov
jge,pt
push
xchg
sub
movsb
lods
js
loope
xor
outsb
jecxz
loopne
outsl
loop
mov
fs
insl
push
mov
jg
sbb
lret
gs
lret
sbb
les
jno
mov
sbb
dec
pop
xchg
inc
lret
nop
fwait
inc
leave
filds
popf
arpl
and
and
add
fnsave
jge
cld
out
mov
and
mov
rcll
xchg
orl
dec
fstpl
push
mov
sahf
fnsave
and
shrd
adc
cmp
out
jno
sbb
or
or
xor
into
mov
dec
enter
daa
bnd
inc
and
or
lahf
adc
sbb
mov
gs
mov
cmpl
in
lcall
mov
fsubrs
inc
stc
lea
mov
inc
insl
pop
fadds
rolb
hlt
xchg
mov
push
inc
orb
popf
jno
and
adc
sbb
sub
jmp
imul
adc
dec
jbe
jbe
movsb
leave
sbb
cmp
cmc
xor
aam
sub
gs
cs
jg
push
and
and
xchg
dec
aad
cltd
mov
jle
lret
cli
or
push
out
test
inc
lods
dec
insb
mov
mull
inc
jmp
sbbl
mov
fldt
add
pop
xchg
cmpsb
andnps
sub
xor
push
push
xor
inc
sbb
mov
repnz
and
test
lret
addr16
cmpsb
mov
pop
inc
push
icebp
cli
test
xchg
lods
add
sub
dec
cmp
push
add
add
daa
mov
and
xchg
push
mov
ja
xor
sbb
mov
addb
sarb
and
jp
subl
mov
adc
xor
mov
push
fadd
leave
inc
out
in
sbb
pop
xor
mov
push
fldt
fisttps
ljmp
cmp
inc
xchg
add
hlt
xor
popf
jbe
insl
int3
shrb
repz
mov
adc
in
and
adc
push
adc
and
andl
or
les
in
leave
cs
mov
add
cmpsb
test
push
cmp
imul
fwait
movsl
push
sti
fcoms
ret
push
jae
mov
dec
bound
jnp
cmc
pop
mov
out
mov
cmp
ja
mov
inc
leave
sahf
mov
sub
jp
fldenv
mov
ljmp
stos
mov
add
int3
testb
jne
xor
fistps
push
pop
xchg
and
jbe
mov
aaa
out
ljmp
mov
mov
icebp
xchg
xchg
cld
push
inc
fs
stos
mov
jge
fdivs
ja
scas
inc
mov
xchg
add
ss
push
jle
mov
loopne
fucomi
jnp
in
dec
dec
lcall
and
xchg
fildl
pop
push
mov
add
xor
cwtl
push
les
std
xchg
mov
les
jp
jp
sub
ffree
dec
jg
fisubrl
sbb
add
cmp
popa
push
jp
rcl
jo
mov
or
ror
sub
aam
cli
add
scas
xor
jp
in
test
cmc
aad
lcall
xchg
popa
pushf
loope
out
cmp
push
jge
mov
clc
xor
push
cmpl
mov
lods
xchg
xchg
pushf
push
pop
loope
mov
int3
mov
clc
movsb
les
push
shld
pop
mov
xor
lcall
dec
pusha
aam
pop
cwtl
or
xor
fsubrl
imul
xchg
xchg
mov
lds
idivb
sbb
int3
js
jmp
and
jbe
aad
xor
mov
inc
xchg
sahf
addr16
fdivl
push
sbbl
test
hlt
int3
mov
mov
push
out
mov
imul
inc
mov
fiadds
andl
jge
sub
and
je
and
ds
outsb
pop
sub
adc
stos
int3
dec
mov
mov
jg
repz
ss
ljmp
js
lds
mov
ja
adc
jmp
popa
rol
mov
imul
inc
cwtl
in
inc
fucomp
inc
pop
stos
stos
dec
cmp
jnp
mov
mov
rcll
inc
aaa
mov
pop
push
or
xchg
add
hlt
pop
std
sahf
add
rorb
ret
hlt
xchg
aaa
and
popa
clc
sbb
mov
pop
adc
repnz
ljmp
xor
mov
push
xchg
sahf
fstpt
sbb
sbb
cmp
adc
xor
jae
mov
outsl
lods
push
rcrl
out
xor
xor
add
ret
add
sbb
jno
push
inc
fwait
test
addr16
dec
rorl
popf
inc
idivl
push
ss
loopne
test
enter
das
cmp
sub
push
into
mov
fidivs
mov
lahf
mov
in
mov
xchg
xchg
nop
xchg
push
out
cmp
bsf
std
pushf
dec
add
pop
icebp
dec
scas
pop
dec
movl
xchg
out
dec
mov
ljmp
pusha
mov
mov
fs
movsb
mov
pushf
lods
pop
inc
bound
pop
xor
add
int
push
mov
and
in
insb
sbb
call
push
mov
mov
mov
mov
out
jo
icebp
push
add
les
dec
negl
adcl
test
xchg
stc
lods
dec
mov
cmpsl
fs
and
inc
adc
out
pop
movsb
mov
jmp
orl
mov
test
ja
or
mov
scas
addl
dec
pop
pop
mov
cmp
call
xlat
inc
shll
adc
fstpt
call
cs
jae
mov
push
mov
and
sbb
testb
pop
or
dec
dec
mov
test
lret
enter
int3
sub
add
stos
sub
xor
cltd
out
es
adc
mov
test
pop
loop
xrelease
movsl
inc
cmc
pop
mov
mov
push
fsts
push
inc
in
mov
mov
std
sub
cwtl
fs
mov
dec
or
hlt
or
roll
sbb
sub
mov
jns
fs
shll
dec
data16
sbb
or
pop
mov
outsb
lods
cmp
out
negb
mov
cmp
xor
sbb
push
dec
lock
aaa
mov
push
scas
jnp
mov
mov
adc
inc
mov
imul
push
adc
fistpl
das
mov
xorb
cmp
mov
mov
mov
idivl
sbb
gs
out
cmp
fsubl
stos
xchg
dec
insb
inc
stos
mov
xor
pusha
pop
and
mov
aas
test
test
xchg
dec
fidivs
xchg
addr16
pop
sbb
fstpl
mov
scas
mov
mov
push
cmp
mov
push
in
cmc
push
outsb
mov
shll
jle
arpl
mov
ljmp
xchg
sbb
xor
lret
sub
adc
dec
das
enter
negl
or
cmpsl
fsubrs
jmp
jb
popf
sub
call
movl
aam
mov
lock
mov
movsb
pop
into
pop
lea
mov
dec
push
push
inc
fsub
out
fimuls
stc
ss
fiaddl
std
or
sahf
aas
fadd
pushf
nop
pop
fs
jns
and
dec
push
mov
xor
dec
lahf
jbe
add
push
mov
test
cmpb
mov
call
jae
les
push
in
jmp
dec
mov
out
dec
mov
or
clc
arpl
or
loope
inc
lcall
pop
enter
addl
jg
es
jl
sbb
test
inc
clc
mov
adc
sbb
cwtl
xchg
inc
repnz
fldenv
sub
pop
mov
cmp
and
cld
mov
aaa
xchg
push
mov
ljmp
mov
push
cltd
and
lret
jne
bound
scas
jnp
mov
or
xor
mov
adc
fwait
pop
push
fists
jmp
lahf
pusha
fisttpll
and
pop
xchg
add
outsl
mov
sbb
icebp
setnp
push
stos
lods
mov
lea
out
pushf
dec
int3
shrl
jge
or
fildll
xchg
mov
sub
ds
sbb
ss
lods
outsl
or
xor
pop
mov
pop
rcrl
mov
adcb
fldcw
cmp
jnp
or
test
mov
cmc
pop
push
imul
out
popa
inc
sub
jg
jge
adc
jne
push
imul
xchg
xchg
sbbb
xchg
mov
adc
and
es
adc
xchg
stos
fpatan
jg
sbb
adc
leave
push
in
and
fidivl
and
pop
mov
andl
scas
lods
mov
xor
hlt
push
pop
and
xor
aam
icebp
mov
cmc
pop
push
stos
xlat
xsha1
cmpsb
or
sbb
sbb
jg
mov
mov
and
inc
push
test
or
inc
sub
pop
sbb
or
fwait
xor
fistpll
cltd
ss
push
mov
outsb
shlb
mov
aad
stc
leave
pop
movsb
leave
or
xchg
scas
es
mov
insl
mov
lahf
push
xor
sbb
inc
push
push
cmp
fbstp
sti
add
adc
lcall
jp
dec
add
enter
sbb
inc
sahf
rcrb
movsb
cmp
jmp
out
push
mov
jmp
and
xlat
adc
push
cmp
je
or
push
mov
arpl
xchg
xchg
mov
pop
scas
mov
in
fdivrs
lea
push
mov
mov
cld
jp
inc
cli
addl
aam
out
cmp
xchg
lds
mov
das
inc
je
sub
cmc
sbb
xchg
test
loopne
mov
out
fwait
inc
cmpsb
cmp
adcb
mov
xor
inc
mov
popa
in
cmp
sbb
sub
js
addb
in
mov
mov
inc
push
sbbl
frstor
mov
pusha
scas
aas
loopne
lret
xor
hlt
pop
imul
addb
mov
imul
cmpsl
mov
mov
dec
adc
repnz
fucomp
roll
orb
cmp
mov
sub
sbb
inc
mov
add
leave
mov
jg
dec
xor
jmp
rcrb
ds
loope
push
rcll
scas
out
insb
mov
dec
lods
jg
sbb
jl
inc
xlat
dec
jns
push
test
pop
fcoml
bound
xchg
in
xor
xor
sub
lcall
xor
mov
sbb
mov
addr16
or
scas
inc
rclb
scas
leave
mov
fs
loopne
adcb
int3
dec
add
iret
das
fnstenv
mov
inc
arpl
cmp
mov
pop
or
fidivrl
jp
xchg
sbb
ds
test
cltd
fmuls
mov
jb
stos
dec
movsl
and
jp
fiadds
inc
loopne
push
cwtl
lods
mov
ds
push
jg
sbb
popf
push
mov
jecxz
sbb
jae
fcoms
incl
shlb
xchg
cli
sub
sub
adc
lret
les
scas
mov
xor
cld
jge
cs
push
pavgb
lock
lds
mov
cld
sbb
rorb
mov
aaa
in
add
push
neg
mov
scas
out
daa
mov
fs
jp
js
adc
out
jmp
fisttpll
pop
mov
push
out
test
cmpsl
inc
cmc
add
das
jmp
es
cli
inc
aas
shrl
add
jmp
push
jns
fistpl
xchg
add
fstpl
daa
mov
sub
repnz
insb
pop
xchg
arpl
push
sub
in
lods
inc
mov
rcrl
xchg
pop
das
or
into
arpl
pop
push
movsb
aaa
inc
push
cli
jnp
push
ret
mov
mov
jmp
testl
or
and
xlat
push
push
xchg
sub
mov
xchg
repnz
mov
es
push
jge
sahf
push
add
and
lods
icebp
in
mull
iret
sub
or
cmp
add
xor
icebp
insb
jle
sub
mov
sbb
cmp
lret
daa
sbb
shlb
sbb
dec
cmp
and
jns
inc
aas
dec
inc
mov
popf
lods
bound
fsubp
js
pop
je
pop
jle
push
jne
push
test
aas
add
fstpl
vpcmpeqd
jmp
imul
sub
sahf
leave
jns
lock
fwait
push
and
loop
movsb
xchg
fldl
iret
lds
pop
xchg
movsb
stos
mov
jbe
sbb
jge
mov
fwait
aaa
mov
hlt
imul
or
xchg
jbe
idivl
fldenv
jle
pop
push
lock
xchg
pop
adcl
adc
push
and
lret
dec
shl
stos
and
repnz
int3
add
inc
add
sbb
inc
fwait
div
xor
xchg
cmpsl
lahf
sbbl
xor
mov
cmp
push
ffree
rcl
icebp
xchg
xlat
icebp
dec
loop
lret
sub
push
stc
test
ret
in
es
adc
cmp
cs
adc
das
xchg
xchg
bswap
or
andb
lret
xacquire
loope
sbb
xlat
and
xor
xor
movsb
jo
cmp
test
stos
mov
les
aam
sub
cltd
les
stc
shrl
daa
jg
inc
fcmovu
mov
fcmovu
push
push
movsb
cmp
sub
jb
and
adc
mov
jne
ja
pop
mov
xchg
xchg
movsb
dec
sbbl
outsb
pop
mov
dec
rcr
cmpb
mov
insl
add
out
fldenv
mov
xor
and
decb
in
pop
fwait
pop
inc
out
jl
inc
popa
jge
mov
dec
data16
xchg
lods
rcl
movsl
cmp
ljmp
push
lret
sti
js
pushf
test
bound
add
aad
push
lods
ljmp
add
sbb
jl
rorb
inc
sbb
xchg
lods
leave
jne
je
push
mov
xlat
fwait
push
mov
or
divb
sarb
inc
fs
add
in
adc
xchg
cmp
push
movsl
daa
jge
adc
int3
lret
add
xlat
and
pop
or
xchg
sbb
xlat
arpl
xchg
mov
sub
test
dec
loop
mov
mov
insl
imul
into
cli
pop
clc
das
xor
sahf
push
lret
or
jb
inc
push
cmpsb
cmp
aad
jg
sbb
pop
mov
fbstp
mov
mov
dec
pop
cmpsl
aam
jno
mov
add
cmp
inc
pop
stos
clc
jl
sub
es
int
enter
xchg
lea
xchg
xchg
pop
stos
mov
fadd
lea
mov
outsl
mov
lds
in
pushw
xchg
repz
push
mov
cmc
inc
das
daa
inc
add
lods
fistl
and
pop
push
mov
test
inc
icebp
call
xchg
andl
icebp
xchg
enter
or
rcll
lock
inc
mov
imul
stc
adc
mov
mov
mov
arpl
cmc
mov
out
rcrl
sbb
sahf
cmp
jbe
xchg
clc
lea
xchg
mov
fs
pop
rcrl
mov
stos
clc
and
jl
sbb
popf
lcall
sbbb
rcr
jb
hlt
lret
xchg
xchg
push
insb
inc
stos
loopne
mov
pop
mov
jp
inc
lahf
push
add
adc
xor
dec
xchg
jnp
leave
xchg
adc
scas
push
les
adc
aaa
cli
daa
pop
icebp
adc
mov
cmc
or
adc
mov
add
nop
xchg
xchg
add
nop
js
mov
cwtl
dec
stos
pop
push
je
jne
mov
fldl
fiadds
sub
daa
cltd
jl
outsb
or
push
ss
or
dec
in
mov
xchg
add
dec
xor
out
addb
imul
jl
xchg
push
mov
fisubs
movsl
stos
and
push
stc
nop
jno
xor
loope
sub
xlat
push
sub
mov
adc
lahf
in
lret
fcomps
push
jb
loope
push
xchg
insb
mov
pop
pop
stc
mov
and
adc
aaa
dec
cltd
repnz
and
movups
imulb
jae
roll
out
jnp
push
mov
dec
fsubrs
jmp
mulb
push
clc
xor
mov
pop
jns
in
insb
js
push
and
xchg
mov
inc
mov
xchg
mov
xchg
xchg
xor
jg
mov
popa
mul
pop
jmp
adc
shll
and
push
mov
into
jl
fwait
lds
addr16
pop
in
insb
pop
and
mov
shll
lret
test
jbe
cmp
pop
aam
sahf
mov
ficompl
scas
lods
sub
jecxz
sbb
jp
add
and
nopl
int3
push
push
fidivl
bound
aam
jle
jnp
repz
jo
dec
and
sti
lret
dec
out
in
scas
inc
or
das
cmpl
call
lods
mov
popf
fsqrt
rorl
movsl
sub
mov
lcall
sub
push
jno
add
rcll
insl
xchg
xor
sub
mov
out
and
out
sub
mov
das
orl
aaa
clc
aad
daa
fs
push
int3
and
bound
jno
dec
xchg
jmp
fcomps
pusha
cmp
cmp
insl
jnp
fnsave
fsubrl
push
inc
testb
pop
lock
mov
mov
shlb
popa
mov
jmp
mov
lret
push
dec
adc
xchg
ret
push
lcall
inc
daa
mov
stos
or
fwait
add
pushf
movsb
cmp
jns
gs
jno
js
add
mov
push
lds
xchg
lock
sahf
add
push
pushf
lods
gs
jbe
push
scas
mov
pusha
pop
jp
out
popl
lret
addr16
xchg
mov
lcall
scas
in
or
add
pop
sbb
popf
sti
inc
xor
inc
clc
jp
mov
lcall
inc
pop
lds
js
pop
add
adc
aad
or
sub
out
sub
xchg
and
testl
push
xchg
mov
sub
inc
xchg
xor
dec
in
sbb
scas
out
roll
inc
sbb
lcall
lds
inc
mov
fcmovne
out
xchg
mov
inc
mov
mov
bnd
scas
lods
push
inc
int
dec
ss
cmp
testl
xor
mov
pop
leave
outsl
mov
cli
mov
cli
addl
loopne
ret
and
test
add
or
xchg
jg
cs
fst
mov
pop
scas
xchg
mov
fwait
test
add
insb
ret
repnz
pop
cli
pushf
dec
lea
pop
out
adc
or
gs
mov
inc
pop
jp
jo
clc
into
xchg
dec
jmp
in
adc
fisttps
data16
cwtl
icebp
xchg
jg
inc
fsts
pop
outsb
aam
testl
rolb
mov
popa
pop
push
lahf
jbe
mov
dec
and
std
jg
xchg
hlt
mov
cmp
stc
dec
jge
and
push
enter
stos
sbb
lea
inc
leave
test
adc
fbstp
push
adc
push
jg
push
push
lcall
add
dec
cltd
sub
cmp
loopne
icebp
and
pop
filds
push
jmp
test
inc
testb
cmp
dec
hlt
not
ds
fst
arpl
ficompl
pop
lret
sub
scas
test
sbb
aam
shl
cmpsb
cmp
testl
test
or
fs
xor
test
mov
xchg
das
mov
pusha
mov
std
xchg
sub
mov
add
jae
outsl
inc
mov
jl
out
cmpsl
ds
push
xlat
out
repz
and
push
test
int
jl
pop
jecxz
inc
xchg
or
jp
sub
sbb
sub
daa
pop
inc
push
cmp
dec
mov
xor
ljmp
xchg
pop
loope
cmp
cmpb
es
jge
test
push
shlb
push
jae
dec
add
cmpsl
lret
and
dec
xor
ss
jo
sub
popa
jne
push
test
fdivrl
fsubs
shll
adc
addr16
je
or
adc
call
or
enter
jp
into
adc
bound
xor
jp
mov
outsb
ja
stos
sbb
jle
gs
insl
iret
lret
add
dec
lret
and
mov
clc
ja
mov
xor
movsl
cmp
ds
sub
jo
stos
jne
movsl
push
ret
shrl
cmpsl
cwtl
push
mov
push
cmc
sbb
lahf
jo
add
mov
xchg
dec
in
jp
aad
es
sarb
xor
jle
xor
and
enter
mov
xor
pop
lea
mov
sbb
or
add
push
jl
inc
xchg
sub
fidivs
cwtl
jno
jnp
pop
xchg
pop
ss
test
xchg
jne
popa
jle
scas
std
outsb
xchg
mov
les
popa
lock
js
mov
dec
rclb
dec
insb
out
cmp
call
adc
sbbb
xor
cmp
imul
fimull
and
loope
push
das
pop
loop
adc
or
in
test
jno
je
adc
scas
push
jle
pop
adc
sbb
jae
sub
pop
and
icebp
mov
out
xchg
rorl
loop
adc
mov
in
xchg
dec
cmpb
xor
adc
enter
inc
shl
cmp
nop
mov
fsubr
aad
jle
mov
test
int
imul
cli
movsb
or
lea
int3
and
movsb
jg
sub
loop
pop
sbb
adc
ss
jae
and
aad
rolb
or
int
push
leave
fstps
cmpsl
outsl
gs
daa
inc
push
test
scas
scas
mov
dec
jecxz
testl
mov
aad
jg
cmp
adc
xchg
add
fwait
ljmp
mov
fiadds
sub
cmpsl
fs
jl
stc
int3
bound
outsb
inc
cmp
iret
push
dec
mov
das
ss
std
cmp
leave
jno
decl
inc
mov
mov
mov
pop
inc
andl
sbb
jb
mov
arpl
xor
into
fsubrl
xor
negl
pop
xor
lahf
cmp
xor
xchg
push
add
jae
lahf
adc
inc
loop
fidivrl
add
push
insl
sub
mov
ret
xor
jb
jg
jl
xchg
lcall
cmpsb
les
inc
sub
or
pop
lret
push
push
sub
stos
scas
loopne
pop
shlb
pop
aam
push
mov
adc
cmp
xorb
push
push
stos
jmp
mov
aam
repnz
pop
add
cmc
loope
and
mov
mov
imul
dec
jecxz
inc
sub
push
ljmp
sub
adc
jae
movsb
gs
add
jl
jp
fld
insb
fwait
ret
inc
aam
jne
inc
jne
aad
xlat
cs
add
outsb
test
push
inc
sub
and
xchg
jo
lds
push
push
jae
mov
xchg
enter
and
ja
shll
mov
jns
dec
xchg
outsl
movsb
out
in
test
push
pushf
push
or
cltd
pusha
into
xor
pop
sub
inc
scas
inc
add
mov
scas
jp
push
cwtl
dec
stos
inc
mov
adc
and
loope
xchg
mov
cmpsl
outsb
and
cmpsl
std
pop
or
xchg
sbb
adc
in
in
rcrl
or
mov
mov
push
aam
jne
in
cwtl
adc
ss
inc
nop
mov
mov
jo
cwtl
push
pop
push
mov
testb
dec
fbstp
xor
push
push
and
mov
mov
jnp
xorb
mov
cld
insl
shlb
imul
xchg
add
dec
les
jle
sbbl
call
xchg
mov
sub
cmc
lret
les
std
push
dec
jne
adc
roll
fcoms
into
pop
dec
jge
fidivs
mov
mov
pop
dec
sub
nopl
push
in
mov
and
pusha
shll
std
gs
jbe
fidivrl
or
inc
repnz
orb
jbe
jbe
mov
shll
popf
push
bound
sub
mov
or
mov
cmp
pop
lret
mov
mov
sub
je
or
ss
dec
push
and
push
sahf
adcb
inc
push
fs
decb
repnz
dec
mov
fdivl
ja
cmp
jg
inc
pop
aam
xchg
jle
cmp
repnz
cmp
cmp
nop
sarb
ret
mov
loope
jb
add
lods
cmp
push
jecxz
insb
ljmp
xor
mov
push
movb
les
sub
ret
dec
cs
and
call
push
adc
pop
pushf
mov
cli
adc
cwtl
jmp
out
jae
xchg
out
decl
mov
arpl
inc
pop
cs
xorb
mov
dec
insl
mov
cmp
xlat
pop
fdivp
in
mov
jecxz
cmpsb
push
in
aaa
inc
mov
lcall
test
mov
push
and
roll
stc
pop
pusha
jmp
in
xchg
cmp
cmp
push
out
dec
enter
notl
mov
fdivl
push
mov
insb
jge
xor
mov
js
fmuls
dec
dec
and
or
int3
mov
add
mov
pop
xchg
sub
cli
test
mov
stc
dec
sbb
xor
jle
push
cltd
jnp
shrl
or
jle
leave
int3
jg
xor
pop
xchg
dec
and
cmp
mov
cmp
jo
and
andl
mov
mov
xor
dec
pop
add
loop
loope
pop
inc
mov
cmpsb
cmpsl
cmp
push
jno
inc
js
push
in
mov
adc
outsb
pop
std
fbld
jae
pcmpeqw
bound
sub
pop
fwait
add
jmp
mov
hlt
shlb
mov
xor
sub
push
ret
push
inc
adc
push
lods
mov
mov
notl
loop
add
ja
sub
scas
jecxz
mov
sbb
sbb
xchg
mov
sahf
mov
fidivrl
dec
cmp
lds
cmp
mov
fcomi
test
loopne
out
arpl
push
pop
js
mov
jecxz
cmp
adc
hlt
imul
adc
push
not
or
icebp
inc
inc
out
stc
leave
mov
fucomip
rcrb
enter
mov
xor
fistpll
addl
mov
dec
add
xchg
push
sub
dec
iret
ja
pushf
dec
and
sub
or
pop
cmpsl
sub
nop
psubsw
ja
inc
or
je
mov
jnp
testl
xor
add
xchg
dec
fcoms
mov
or
inc
mov
loopne
loope
or
and
jl
xlat
xor
or
xchg
shrl
dec
pusha
stos
mov
loop
cld
and
lock
mov
jns
lea
mov
dec
std
xchg
aas
push
sbb
mov
sbb
lds
lea
or
and
xchg
addr16
sbb
inc
ds
adc
dec
inc
daa
lds
in
add
xor
out
bound
inc
rcrb
sbb
notl
mov
pushf
pusha
iret
push
mov
mov
repnz
push
lds
jp
jecxz
and
cmp
cmp
in
mov
mov
shrl
pusha
jle
test
pop
mov
notb
sbb
mov
pop
shlb
lret
adc
jo
cld
stos
rcl
inc
gs
add
pop
loopne
sub
inc
out
outsl
in
lret
scas
in
or
xchg
mulb
pop
lahf
aas
test
sub
xor
pop
das
add
mov
bound
dec
rclb
nop
pop
imul
push
cs
sub
aad
mov
movsb
mov
iret
mov
test
lret
mov
add
pshufw
mov
fdivs
xor
xchg
jb
orl
mov
mov
xlat
repz
pop
or
jmp
dec
rolb
add
ret
push
repz
outsl
inc
lods
stos
call
push
jb
adc
iret
add
stos
pop
lret
loopne
jae
xor
inc
fcmovnb
pusha
inc
dec
lea
rcrb
imul
adc
lods
lret
push
iret
push
test
nop
push
cmpsl
push
push
daa
xchg
add
push
cmpb
adc
xor
mov
mov
into
xchg
push
addl
movsb
and
mov
xor
fwait
test
dec
pop
ds
nop
lods
push
add
mov
mov
pop
out
push
lods
push
test
jb
cmp
mov
aad
jae
test
dec
movsl
sbb
and
sar
sub
mov
ja
fldenv
add
jge
push
inc
pop
dec
xor
inc
xlat
xchg
insb
fists
cmpb
push
shl
aas
fucomi
cs
sahf
clc
filds
mov
aad
outsl
adc
xor
add
rcrl
and
loop
xor
pop
mov
jnp
sub
and
daa
data16
push
or
pusha
movsb
mov
insl
fdiv
iret
sbb
lret
lret
fcomp
scas
add
push
ljmp
addr16
mov
xor
add
cli
xor
push
inc
dec
mov
jge
call
sbb
stos
jle
jge
int3
scas
aaa
ljmp
idivb
push
xchg
and
cli
cltd
or
cwtl
es
rcrl
push
aas
ret
test
mov
push
adc
dec
xlat
movsb
pop
int
jno
scas
mov
adc
ret
rcrl
sub
pop
ds
jle
out
mov
nop
add
mov
sbb
jg
xchg
aas
dec
push
jl
mov
rcl
jmp
lds
xchg
gs
outsl
stc
mov
or
out
fcoms
xor
in
inc
in
pop
aas
lret
movsl
xchg
cld
mov
dec
xchg
push
or
popa
not
insb
dec
mov
bnd
mov
fldlg2
adc
ds
sbb
mov
pusha
enter
test
js
mov
pop
cli
mov
aad
xchg
cltd
pusha
test
mov
inc
call
test
call
shlb
xchg
mov
push
out
out
outsb
jns
icebp
mov
gs
fwait
inc
add
rol
jne
ret
das
loop
jno
xchg
and
insb
loopne
sub
cmp
in
dec
push
mov
stos
adc
repz
in
repnz
dec
xlat
push
in
inc
imul
std
cld
fs
lahf
lods
push
xchg
jg
aad
mov
adc
movsb
seta
jge
mov
pop
jmp
call
jae
mov
dec
js
jne
sub
xor
adc
xor
aaa
inc
data16
push
pop
push
js
jo
cmp
clc
mov
lods
out
push
dec
int3
add
xorb
xchg
cli
pop
sub
int3
adc
aaa
incb
out
lds
mov
and
jns
jb
repz
out
cmpsl
rolb
popf
stc
ret
aam
das
cli
or
sub
fsubrs
jbe
and
jno
adc
dec
movsl
cmp
add
push
call
mov
cmp
xor
outsl
push
out
ss
sarb
test
mov
sahf
in
xor
cld
arpl
adc
mov
in
lcall
jg,pt
lea
add
sbb
es
jae
orb
dec
divb
jmp
mov
cmp
jg
minps
test
pop
pop
mov
cmp
cmp
xor
sahf
rclb
dec
stos
das
xor
test
or
mov
mov
sub
or
dec
xchg
mov
test
xchg
xchg
mov
pop
outsb
mov
fsubs
push
mov
jl
or
and
std
inc
jl
push
sahf
es
out
clc
pushf
scas
cmp
fbstp
inc
push
in
jmp
add
mov
insl
gs
add
inc
lret
lds
test
stos
push
pusha
xchg
jno
sbbl
mov
lcall
adc
mov
jno
ret
push
fcompl
fld
sti
test
push
je
cmp
in
mov
movsl
adc
inc
cmpl
sarl
dec
push
or
xlat
lock
out
push
jg
icebp
mov
mov
fs
cmpsb
push
sahf
iret
push
ror
lods
stc
jbe
fbstp
adc
iret
sub
insl
inc
fsubl
xchg
call
aad
ds
gs
aaa
cld
out
xchg
insb
outsl
add
idivb
jne
test
push
in
and
push
divl
int
xor
cmp
iret
pop
mov
or
insb
imul
std
nop
xor
xor
cld
inc
sbb
int3
sub
aas
shr
mov
inc
sbb
push
in
xlat
je
xchg
add
subl
sbb
pop
or
xor
ja
icebp
repz
clc
mov
imul
stos
mov
jge
mov
push
out
into
jecxz
arpl
cmp
adc
fistl
dec
and
or
stos
cmp
mov
xchg
repz
push
push
mov
sub
pop
clc
nop
cld
mov
push
int3
rcrl
add
push
int3
stos
jl
fsubr
xchg
sub
inc
sbb
inc
pop
xor
rcl
mov
xor
ljmp
cmp
jp
jbe
cmp
push
es
outsb
hlt
cmpl
jae
sub
mov
push
push
or
push
aaa
rol
out
mov
popf
hlt
lret
xchg
es
fs
inc
daa
cmpsb
test
lock
pusha
lods
imul
push
lock
jo
jp
iret
imul
sub
stos
xlat
pop
shrl
push
ja
mov
stos
cwtl
dec
insl
add
xor
in
mov
mov
add
jmp
outsl
fidivl
out
ja
push
fldt
aas
mov
push
jnp
push
add
sti
dec
out
jp
daa
lods
mov
ret
sub
push
add
and
push
push
push
adc
pusha
rorb
mov
data16
inc
sahf
call
and
mov
xchg
jo
or
imul
push
sbb
insl
repnz
push
fsubrs
mov
repz
mov
in
shrb
daa
inc
pop
mov
jb
lahf
xchg
movsb
add
mov
ret
or
ret
mov
dec
in
ror
ss
sbb
cmp
cmp
lahf
and
xor
leave
push
cli
add
mov
sub
mov
sub
in
enter
add
pop
mov
lea
sar
inc
mov
push
inc
js
mov
add
fidivl
mov
mov
in
mov
pop
adc
insb
lcall
loop
enter
adc
and
sbb
ds
insb
cmp
aam
call
dec
stos
xchg
lcall
and
jecxz
test
rcrl
aas
push
ret
fwait
mov
gs
ret
add
xchg
jae
xlat
mov
inc
adc
sbb
inc
cmpsl
pop
xor
lret
popa
imul
xor
jge
or
xchg
dec
addb
inc
repnz
stos
leave
add
shl
cltd
stos
mov
fidivl
jecxz
sbb
imul
loop
insl
or
xchg
cmpsb
dec
ja
mov
data16
push
out
xchg
pop
lods
cwtl
jbe
xor
xlat
jp
outsb
addb
pop
imul
clc
jbe
or
cs
cld
fwait
pop
dec
push
pop
test
add
lods
inc
pop
sbb
in
cli
ret
jmp
das
shl
and
adc
shrb
jmp
pop
cwtl
aam
cmp
in
leave
cmp
push
outsb
out
out
push
mov
outsb
pushf
pop
in
push
xchg
sub
gs
add
jae
cmp
push
imul
pop
fs
icebp
aas
xor
inc
dec
xchg
in
test
add
sbb
jmp
nop
sbb
add
imul
or
repnz
inc
ja
mov
xor
and
or
add
cmp
scas
js
pop
push
in
dec
ja
push
lea
jmp
mov
adc
xchg
jmp
sub
xchg
jns
ds
jns
cld
inc
mov
mov
popf
cmp
call
ds
imul
sub
popf
xor
mov
inc
xlat
xchg
movsl
sbb
and
mov
cmc
int
daa
pop
add
sub
cmp
test
add
dec
testl
es
xchg
ds
imulb
and
sarb
ljmp
cmp
addr16
mov
mov
shlb
add
adc
sti
push
fs
and
mov
pop
leave
sbbb
paddb
outsb
ret
xor
jge
addr16
and
dec
mov
jo
ds
shll
add
shlb
pop
xor
mov
dec
dec
and
jne
cmp
sbb
dec
pop
sub
cmp
cmpsb
jg
mov
hlt
push
mov
mov
cmpsl
aaa
negl
shl
fisttpll
inc
mov
das
fstpt
xchg
mov
shrl
pop
fidivl
sbb
ss
xchg
jmp
inc
mov
sti
mov
xor
lcall
test
stos
pop
push
ret
les
loopne
or
jb
dec
sbb
test
ret
xlat
je
inc
call
je
mov
fs
test
inc
pop
pushf
xchg
bound
test
mov
mov
pop
xor
jp
cmpsb
fs
incl
push
nop
ljmp
fimuls
int3
dec
jne
pcmpgtd
aam
testl
nop
cltd
sbb
cmp
sti
xchg
into
lret
mov
dec
test
loop
loop
movsb
dec
incl
add
stos
cmpsb
and
hlt
daa
into
mov
jns
pop
push
push
fcom
ja
into
and
stos
mov
lret
jne
xchg
cmpsl
lods
push
movsl
ffree
sbb
test
ja
pop
test
shlb
rorb
mov
adc
adc
mov
ret
sbb
push
arpl
mov
loopne
adcl
fwait
pushf
rolb
mov
lahf
xorb
push
add
cmp
push
rolb
inc
lret
push
sbb
push
mov
aas
cmp
sbbb
in
push
and
cwtl
jbe
mov
mov
out
mov
jns
jl
mov
shll
mov
into
dec
fcoml
push
shufps
rcrb
push
sbb
sub
adc
push
xchg
fwait
mov
in
sub
sbb
adc
push
mov
mov
out
popa
or
stos
xchg
or
lods
es
push
add
xor
andl
nop
sti
xchg
add
testl
dec
push
test
lret
insb
out
jl
lea
mov
insl
popf
mov
jo
sub
inc
sbb
dec
dec
and
lods
sbb
enter
mov
add
adc
and
dec
or
xor
adc
inc
pushf
xor
push
bound
mov
jns
sub
adc
push
lcall
pushf
mov
std
inc
lods
mov
lret
sbb
test
push
xor
stos
or
jb
in
sbb
in
lds
cmp
inc
mov
fwait
push
pushf
pop
add
push
mull
imul
xchg
sub
outsl
add
adc
jb
add
pop
jbe
cmp
push
cmpsl
push
push
sbb
insb
lcall
add
lods
cmc
inc
mov
xchg
fisttpl
outsl
mov
test
pop
sbb
ds
repnz
pop
fsubrl
xchg
test
pop
int3
sub
jno
sti
ret
mov
cltd
mov
fisttpl
xlat
bnd
sbb
adc
movsl
jne
mov
push
jl,pt
mov
push
mov
aaa
fldcw
gs
inc
aad
inc
mov
mov
inc
ficomps
shlb
xor
mov
xchg
shr
repnz
and
adc
inc
ret
ret
cli
test
lock
jae
ljmp
xchg
sbb
mov
adc
adc
pop
and
inc
stos
nop
fistps
out
cmpsl
inc
inc
push
xor
mov
mov
imul
out
out
fwait
xchg
cmc
int3
xlat
mov
addr16
pop
mov
mov
jmp
js
loopne
dec
ljmp
xor
adc
cmp
hlt
and
and
enter
mov
loopne
stc
in
dec
in
scas
sbbb
jnp
jbe
add
fnsave
lea
sub
stos
mov
loop
mov
ret
rcrb
xorl
dec
loopne
lahf
add
fldt
ret
and
das
pushf
and
pop
xor
pusha
xorb
lea
test
shrl
cmpb
addb
js
dec
in
and
xchg
icebp
cs
and
clc
pop
push
inc
gs
test
push
cmp
insb
jmp
pop
xchg
xchg
in
xlat
outsb
xor
mov
movsl
pop
sub
xchg
push
cmp
mov
cmp
repnz
push
xchg
lea
mov
sub
nop
jnp
xchg
push
fldt
mov
js
jg
call
fcmovb
daa
push
cmp
pop
outsl
dec
cmp
mov
cmp
imul
mov
dec
mov
daa
or
std
dec
xchg
fnstsw
inc
mov
mov
js
cmp
les
dec
sbb
push
xchg
mov
adc
fimuls
cld
repnz
and
cmp
push
mov
push
frstor
adc
stos
push
push
lcall
push
loopne
mov
cmpsb
lock
xchg
jmp
add
pop
xor
subb
fucom
pushf
cli
in
lock
xchg
into
jbe
cmp
into
gs
sbb
or
mul
mov
stos
mov
aam
ja
ljmp
pop
clc
jae
iret
ss
repz
push
daa
stc
popf
dec
pcmpeqw
jns
cmp
mov
les
in
in
add
inc
loope
imul
scas
ss
addb
cld
push
out
push
sub
jnp
hlt
nop
arpl
repz
es
into
jge
je
mov
adc
xorl
xchg
sub
mov
mov
insb
xor
orl
add
adc
mov
adc
in
lahf
and
enter
rcrl
sbb
and
arpl
cmp
dec
shrl
mov
pop
jns
adc
aaa
push
cmp
add
add
xor
cmc
fadds
xchg
test
inc
mov
into
ss
inc
push
add
cmp
push
pushf
mov
mov
hlt
jg
lret
shr
cld
mov
mov
pop
jle
int3
and
jnp
outsl
icebp
subl
inc
shrl
daa
cwtl
repnz
xor
test
stc
ret
mov
es
ret
or
mov
mov
add
gs
and
inc
mov
mov
add
lea
mov
pop
sahf
sbb
clc
es
call
in
xchg
jno
lods
or
mov
into
xchg
sub
sbb
cltd
add
xchg
xchg
jmp
jb
clc
or
sub
pop
adc
inc
es
push
xor
scas
pop
lods
adc
sub
fldl2t
imul
mov
cmp
mov
xchg
add
inc
pop
add
mov
jne
icebp
enter
cmpsb
dec
pop
inc
and
scas
push
or
mov
inc
out
mov
fiadds
dec
or
ds
inc
in
mov
insl
test
jne
mov
pop
push
and
test
adcb
sub
add
xchg
popf
adc
into
inc
jb
int3
xchg
sbb
aam
cmp
pop
adc
cld
xchg
std
cs
in
andl
scas
and
into
leave
mov
cmp
mov
and
es
lds
xchg
int
push
test
push
sti
inc
or
cli
or
push
jmp
test
pop
mov
pop
fimull
inc
xlat
icebp
dec
imul
mov
lahf
in
in
movsl
ret
icebp
jns
pop
and
push
movsl
push
dec
mov
int
or
xchg
xor
outsb
jne
inc
cmpsl
xchg
jb
hlt
push
cwtl
stos
repnz
push
fnsave
mov
in
xor
push
dec
sbb
jl
xor
stos
mov
sbb
bound
pop
jecxz
lods
lahf
jno
cltd
push
clc
sub
stos
jge
cltd
sti
dec
out
inc
adc
je
shl
fadd
jne
fstps
jo
daa
orb
lcall
add
scas
mov
pop
mov
cmpsl
xchg
add
push
test
add
jo
xor
insl
lret
inc
loopne
fsubl
inc
inc
rcrb
mov
imul
in
add
and
fstpl
cwtl
push
clc
sahf
mov
jno
popa
ja
and
pusha
inc
xor
shrb
pop
insb
std
and
das
outsb
loope
imul
test
sub
mov
adc
repz
fucomi
in
sub
test
loop
xor
lds
or
mov
fstp
arpl
xchg
shl
stos
and
xor
mov
cmp
insl
loop
ds
cmp
dec
lds
movsl
adc
sub
stos
dec
sahf
push
pop
xchg
imul
pop
ds
das
jge
mov
cmp
and
lcall
fadds
mov
pop
fnsave
mov
lds
xchg
and
sbb
pop
xchg
cmpsl
sbb
mov
ja
ret
inc
adc
pop
push
sub
push
mov
sti
push
mov
sbb
xor
adcb
arpl
adc
cltd
insb
roll
subl
iret
fldenv
lods
ljmp
sbb
and
fcoml
push
adc
in
popa
jo
xor
xlat
sti
push
jno
mov
jmp
mov
leave
je
push
jecxz
xchg
jns
iret
mov
mov
icebp
jl
pop
inc
fisubs
stos
sbb
sbb
gs
adc
lret
insl
mov
mov
sbb
in
imul
or
dec
or
lea
pusha
ss
or
mov
call
imul
ret
sbb
jle
cmp
pop
aad
cmp
data16
cmp
movsb
mov
daa
imul
add
inc
jno
leave
leave
cmpsl
mov
out
add
mov
iret
fnstsw
push
cmpsb
cmp
push
jno
sub
adc
pop
lods
pop
jl
jo
ss
out
adc
push
cltd
ds
ljmp
sub
jb
adc
mov
bound
ja
sarb
les
ljmp
mov
cmc
mov
adc
fs
fwait
push
push
pop
jg
inc
idivl
sub
jns
test
sbb
pop
divb
push
adc
lret
pushf
cmc
adc
sbb
lods
xor
xchg
sbb
aam
das
icebp
dec
inc
daa
jp
jmp
insl
xor
push
ret
or
push
mov
imul
aam
inc
popa
push
popa
mov
js
pusha
adc
push
mov
mov
jno
pop
stos
insl
ret
pop
ret
jb
in
cmp
das
out
jge
inc
insl
xor
les
test
test
sbb
test
xchg
aaa
mov
repnz
jnp
dec
and
int3
mov
cld
ss
xlat
ret
cmc
pop
xlat
es
cmp
mov
adc
adc
and
nop
xchg
jge
stos
mov
cpuid
in
pop
xor
mov
jae
stos
mov
es
stos
insb
inc
pop
inc
clc
mov
mov
arpl
mov
jo
adc
jl
jmp
pop
cmp
pop
mov
jnp
dec
outsl
xchg
cmp
adc
push
fisubrl
out
dec
fsubr
push
or
mov
add
add
cs
movsl
push
push
sbb
movsb
or
xchg
lds
loope
jmp
push
pop
leave
push
push
das
scas
cld
xchg
sbb
ja
lea
sbb
push
inc
aam
mov
jl
outsb
mov
jno
push
or
jl
jp
ljmp
cmp
add
mov
push
xchg
sub
test
push
pop
jno
add
mov
jmp
sub
xchg
data16
jmp
push
add
xor
insl
scas
pop
mov
mov
inc
sbb
and
outsb
lds
xor
aam
dec
pop
in
mov
out
pop
ret
aad
scas
testl
xchg
cwtl
mov
adc
cmpsb
mov
gs
scas
add
int
sahf
sbb
repnz
xor
popa
fsubl
sbb
pop
imul
cmp
mov
xchg
js
push
ret
adc
out
clc
add
xchg
push
arpl
fbstp
mov
push
shll
dec
push
and
aaa
sbb
call
lods
cmp
pushl
push
aam
stc
inc
shll
inc
loope
pop
dec
cmp
cmp
decl
mov
stc
ret
aad
push
icebp
negl
mov
xor
pop
push
int
ja
sub
add
hlt
mov
fimuls
imul
push
sbb
push
or
xchg
add
je
jle
adc
inc
sbb
cmpsl
insl
and
mov
imul
dec
pop
inc
mov
insl
mov
stos
sub
jb
jno
dec
xchg
xchg
sbb
les
inc
aaa
into
jno
outsb
loope
scas
push
or
outsb
shr
outsb
iret
pusha
ss
test
out
cld
xchg
pop
fnstsw
mov
xor
out
push
or
jge
sub
fnsetpm(287
add
dec
xor
dec
push
push
out
push
xor
mov
test
adc
dec
cmp
push
jno
pusha
rclb
push
jmp
shll
dec
add
inc
push
imul
das
ficompl
mov
mov
nop
jge
cmp
test
add
test
pop
insl
shll
xchg
pop
daa
jle
sub
insb
ss
mov
sbbb
stos
std
jbe
or
jle
pop
popa
adc
inc
sub
xor
fnsave
sub
jns
push
cmp
push
stc
pushf
adc
mov
fbstp
jns
dec
in
loope
fistl
notl
pop
mov
out
inc
call
fmul
bound
jae
pop
stc
out
push
sbb
sarb
sub
lahf
push
cmpsl
pop
lret
stos
add
shl
ds
insl
add
push
jg
inc
jno
dec
mov
insb
out
pop
or
scas
in
fnstenv
orl
aas
mov
popa
add
aaa
xchg
jne
jbe
pop
pop
add
ss
das
adc
sub
and
mov
idivl
cmp
mov
inc
movsl
xor
rorb
cmc
mov
adc
pop
jge
jmp
imul
adc
es
jp
xor
mov
add
dec
cltd
aaa
add
out
and
cli
or
jbe
mov
clc
aad
inc
movsl
or
fs
fnstsw
push
xchg
bound
pop
xlat
fwait
lds
nop
psadbw
call
hlt
pop
shlb
sti
jp
lds
adc
frstor
and
sbb
leave
fsts
addr16
outsb
ficoms
jp
inc
scas
pusha
cmpsb
filds
mov
int
cmp
lea
inc
xor
shl
sbb
dec
out
cmc
adc
ret
int3
mov
cli
push
orl
clc
daa
in
adc
inc
or
cltd
xchg
mov
loopne
cmc
or
add
sti
jmp
mov
loope
sbb
cltd
rcl
fdivrl
stos
es
ret
sbb
xchg
inc
xor
sbb
mov
jnp
mov
movsb
xor
sbb
or
add
push
pop
aas
mov
and
insl
sub
test
dec
mov
popf
xlat
gs
mov
dec
cmp
stos
inc
test
lds
int
fistpl
cmp
cmp
jae
mov
in
inc
xlat
mov
pop
cmpsb
add
pushf
adcl
xchg
cli
icebp
dec
cmp
adc
mov
xchg
popa
cmc
mov
ss
addr16
hlt
imul
or
or
movsl
ljmp
les
popf
pop
lcall
dec
mulb
and
push
jge
ficoms
push
call
pop
xor
and
into
imul
mov
std
adc
push
ret
loope
cmp
and
sub
mov
or
jo
mov
push
pusha
ss
inc
mov
addb
jo
iret
ret
imul
pop
into
fstl
aad
inc
not
inc
push
add
adc
jecxz
fldcw
lods
movsl
xchg
inc
popf
ljmp
mov
int
cmpsb
les
sub
push
fucomi
push
cld
xor
ljmp
lds
les
cmp
mov
dec
lods
inc
cwtl
pop
jb
fisttpll
jl
dec
arpl
out
leave
pop
lock
push
ja
mov
fdivrp
or
cmpsb
push
aas
mov
cmp
push
arpl
xchg
cld
xchg
pmulhw
sbb
pushf
xor
sub
jle
test
push
inc
fwait
xor
aas
push
mov
cmp
imul
sbb
sbb
movb
jmp
popa
lods
and
shrb
push
dec
je
dec
jge
and
insb
ljmp
inc
cmpsl
fcmovne
fsubs
pop
xchg
sub
fld1
cli
nop
sub
and
mov
fsubl
imul
sbb
mov
sti
cmp
repnz
xchg
inc
pop
jmp
adc
testb
xlat
pop
lcall
arpl
pop
mov
fstpl
xchg
aas
hlt
mov
sbb
ljmp
ja
out
stc
rorb
push
std
or
fbstp
add
xor
jbe
mov
xchg
jnp
xchg
sub
push
pop
mov
jmp
xchg
inc
repz
jg
dec
mov
xor
inc
outsl
leave
adc
imul
lock
addr16
xchg
call
mov
cmp
jne
stc
fs
xchg
pop
or
lock
lea
inc
mov
xor
arpl
rolb
and
mov
js
inc
and
sti
dec
mov
or
imulb
imul
fildll
arpl
test
cmp
rcrl
int3
lds
loope
in
in
aaa
stc
and
pop
mov
sub
mov
mov
dec
xor
xor
add
fbstp
mov
sbb
js
repnz
stos
adc
seto
pop
sti
mov
ret
jl
ret
lods
das
in
mov
mov
test
mov
cmp
push
fwait
ret
cmp
outsl
mov
jno
scas
cwtl
lret
jae
leave
out
repnz
int
mov
adc
cmc
mov
scas
dec
pop
cli
aam
push
and
dec
xchg
js
dec
push
mov
dec
decb
push
adc
mov
push
push
ss
ret
ret
stc
nop
bound
rcll
sbb
pusha
test
aas
mov
sbb
inc
bound
sub
mov
ret
ror
push
insl
das
ds
add
in
ss
icebp
int
arpl
cmp
lods
pop
inc
scas
xchg
popa
icebp
xor
xchg
int
ds
mov
cmp
enter
insb
pop
out
loopne
das
or
sti
sbb
sarb
ds
sarl
mov
clc
mov
fcmove
loop
testl
mov
cmc
push
rol
lcall
adc
mulb
daa
adc
cli
pop
mov
and
jp
and
movsl
test
cmpsl
jp
sub
stos
mov
dec
cmpsb
jno
pop
push
mov
sbb
fistpl
add
loopne
sbb
orb
nop
xor
inc
in
mov
out
inc
ja
sbb
aaa
jo
mov
insb
push
cmc
mov
cltd
mov
cmp
xor
movsl
std
push
sbb
stos
not
push
inc
rol
lock
shl
pushf
ret
dec
adc
inc
mov
mov
imul
adc
jle
int
enter
xlat
out
dec
dec
sub
in
movsb
inc
lfs
les
int3
fdivrs
test
enter
push
cwtl
ja
mov
data16
pop
clc
test
sub
mov
cltd
mov
mov
inc
test
dec
pushl
push
push
mov
or
xor
popa
and
jg
xchg
hlt
cltd
std
sarl
adc
mov
lea
out
in
addl
push
mov
jecxz
jecxz
sub
sub
dec
into
add
shlb
push
or
testl
push
pop
mov
outsl
sbb
or
adc
mov
add
mov
mov
dec
in
or
or
add
call
or
loopne
add
or
cmp
ret
cmp
loopne
adc
pop
nop/reserved
pop
sbb
leave
inc
sub
dec
inc
mov
test
shlb
xor
in
and
add
adc
icebp
test
xchg
xor
mov
fs
push
push
loope
pop
inc
push
js
movsl
icebp
inc
lea
mov
push
dec
sub
xchg
popf
mov
out
hlt
lock
ss
inc
in
sbb
sub
xor
sbb
inc
clc
leave
add
jnp
stos
je
pop
pop
inc
leave
mov
std
dec
xor
jne
insb
mov
dec
bound
rcrl
insb
xchg
fsubr
xor
push
repz
fists
ret
xchg
mov
bound
push
icebp
pop
fidivrs
mov
push
mov
stc
and
push
add
dec
sbb
inc
insb
xchg
pop
mov
insl
jno
shll
cmpsl
or
inc
push
jae
and
jo
xor
imul
stos
cmpsb
xchg
adc
rol
cld
xor
scas
or
sahf
or
ss
call
xchg
popf
mov
insl
push
jns
xchg
into
out
out
jp
cmp
fs
or
ja
enter
test
xchg
outsl
pop
lahf
pop
cs
cli
inc
dec
loop
insb
loopne
and
cmp
and
aaa
fstpt
arpl
fsubs
addr16
repz
sarl
sbb
inc
lds
rcl
or
in
cmp
ror
ss
sub
popa
cmpsl
inc
push
and
pop
xor
xlat
int
aam
xchg
add
push
xlat
outsb
jle
xchg
mov
sbb
sbb
jp
xor
arpl
rcr
fistl
cld
pop
mov
filds
adc
fs
aas
mov
or
aam
mov
or
les
xor
xor
sub
inc
shll
adc
jmp
int
cs
xor
cld
aam
test
lock
lcall
inc
cwtl
sbb
pusha
inc
sub
pop
loopne
std
dec
std
and
aam
lods
inc
fisttpll
aaa
ja
gs
add
mov
xlat
aad
mov
mov
push
loopne
fs
mov
fnstsw
ja
mov
xchg
sbb
sbb
sbb
fidivrl
repnz
and
or
sbb
pop
data16
inc
ja
adcl
pop
xchg
mov
sub
jp
mov
fwait
dec
pop
inc
bound
sahf
and
cld
and
mov
xor
jb
std
xchg
xor
xchg
es
shll
int
insb
ljmp
sub
jg
dec
les
push
rcrl
cmp
or
cli
xchg
push
mov
xchg
xchg
push
stos
add
mov
cmp
icebp
and
sbb
hlt
sarl
mov
sbb
nop
bound
sub
pop
jmp
push
jbe
pop
das
cwtl
jo
sbb
inc
and
ds
xchg
mov
adc
stos
jno
movsb
mov
push
adc
and
sub
pushf
call
adc
inc
cmp
cmpl
push
in
ss
iret
xor
leave
xor
in
stos
or
andl
arpl
jno
jnp
shll
jle
cli
sub
shll
fadds
xor
into
lods
add
test
push
or
movsl
cmp
shrl
js
rol
push
pop
sbb
jnp
loope
and
add
xchg
mov
sbb
in
mov
ljmp
imul
fwait
inc
int
xor
cmpsb
out
push
or
push
lods
vpmaddwd
sti
dec
shrb
fistpll
mov
pop
cmc
push
sub
adc
add
xchg
jnp
in
pop
or
loope
adcb
sbb
lcall
push
xlat
add
add
ss
pop
mov
insb
jnp
and
stos
pop
fsubr
mov
shlb
lds
aam
arpl
dec
jg
lods
les
pop
push
popf
aam
inc
lahf
xchg
cmc
and
mov
add
sahf
add
adc
jp
mov
fwait
or
int
sar
lret
roll
xchg
pop
dec
sarb
add
xchg
scas
or
dec
jmp
cmc
nop
lea
dec
add
imul
jmp
mov
add
push
incb
inc
dec
pop
into
inc
repz
pushf
cli
test
or
into
push
in
aad
mov
in
xchg
jae
int
ljmp
test
pop
pop
cld
dec
std
insl
jmp
pop
dec
mov
cmpsl
sbb
mov
iret
adc
lea
mov
jge
movsb
cmp
xchg
test
jecxz
aaa
mov
sub
dec
fstpt
int
push
js
aam
xor
dec
ds
daa
sub
les
scas
jp
iret
sahf
dec
xchg
loopne
repz
push
or
outsb
mov
call
and
pop
xor
jge
dec
mov
lock
stc
movlps
pop
dec
pop
cmp
xlat
cmp
lods
adcl
pop
xor
daa
std
mov
cmp
inc
sbb
leave
sub
mov
mov
xchg
loopne
in
mov
divb
decb
add
scas
cld
lcall
jne
inc
cltd
lret
lret
add
inc
push
inc
sti
push
fwait
in
stos
iret
lahf
dec
xchg
adc
mov
sub
nop
push
movsl
icebp
and
or
stc
fbstp
fnstcw
or
mov
xor
scas
fdivs
pop
add
mov
jg
out
gs
mov
clc
daa
imul
inc
sbb
add
xlat
mov
push
mov
mov
negb
call
test
mov
push
sbb
into
mov
cmp
in
dec
fisttps
xchg
data16
dec
out
popa
jo
adc
das
divb
sahf
sub
mov
rclb
fbstp
push
sarb
hlt
rcrb
mov
add
mov
call
dec
in
jns
std
pop
sahf
sub
shll
popf
andb
test
mov
lds
sbb
cmp
jnp
call
mov
leave
test
pop
call
data16
push
ja
cli
std
dec
cmp
fdivrl
xor
mov
ds
fisttpll
sbb
cmp
cmp
subb
add
or
xorb
inc
mov
sub
jbe
test
dec
ja
jge
aas
cs
cmp
sti
pushf
filds
xchg
lods
pushf
xorb
push
test
push
ret
pop
out
rclb
xor
add
cltd
test
dec
popf
pop
xchg
jne
clc
cltd
inc
push
sti
in
aam
sub
lret
pop
test
pop
cmp
dec
fwait
xor
cld
sbbb
adc
mov
sti
pushf
cmp
cltd
lods
adc
jge
lock
inc
pop
aaa
and
loopne
out
adc
ss
call
or
pop
ror
movsb
repnz
in
xor
cmpb
lret
sbb
das
mov
insb
out
mov
hlt
mov
pop
or
jo
xchg
or
data16
push
in
jge
xchg
dec
aam
or
mov
jg
xchg
adc
aad
popf
add
bound
sahf
cmp
jno
ficoms
lods
jo
xchg
pop
cli
cltd
jo
inc
shr
test
mov
xor
aaa
adc
stc
push
xchg
pushl
into
popa
lret
adc
adc
mov
mov
pop
mov
inc
adc
xchg
fnstcw
fimuls
je
inc
faddl
push
divl
leave
jbe
jns
cli
mov
sbb
xchg
inc
or
gs
xchg
pop
mov
mov
repnz
ljmp
arpl
mov
data16
imul
sub
in
adc
mov
dec
sbb
scas
cli
nop
push
aaa
and
xchg
push
dec
dec
jp
xchg
push
or
data16
sbb
jns
mov
lahf
cli
dec
jnp
mov
mov
sub
sub
ss
lods
sbb
fidivs
sub
lock
mov
xor
test
in
inc
clc
adc
mov
lahf
push
rcrb
add
hlt
lret
loopne
cmp
cld
lret
sbb
bound
dec
xor
inc
mov
jb
xchg
bound
js
andb
iret
jno
pop
repnz
shrb
lock
lret
sub
jg
pop
fdivl
xor
js
aaa
pop
pop
filds
jns
cmpb
rol
cmpsl
hlt
pop
xor
jns
loope
cld
lods
dec
mov
inc
jno
gs
cmpsl
cmp
mov
pop
and
jo
rcll
xchg
xor
loop
jae
test
mov
mov
sub
pop
not
xchg
fnstcw
dec
cmp
bound
pop
icebp
or
notl
pop
out
pop
stc
mov
jno
les
cld
xchg
imul
and
mov
lahf
sbb
inc
mov
pop
arpl
cmp
jne
mov
inc
lods
pop
scas
stos
cmp
enter
xchg
pop
cld
fisubl
std
test
out
shll
pop
push
int3
enter
nop
daa
adc
xor
cmc
in
les
push
aaa
add
js
je
inc
push
insl
push
sbb
push
sbb
enter
cmc
aam
roll
and
out
or
push
jno
inc
pop
pop
shlb
pop
les
inc
push
sbb
jae
fidivrl
lret
pop
sbb
add
aaa
push
mov
add
xor
test
cwtl
add
jge
pop
xor
dec
jmp
lahf
test
sbb
sbb
mov
and
xchg
cmp
call
or
sub
test
imul
out
adc
scas
mov
call
xor
dec
dec
cld
xchg
dec
pop
leave
clc
push
sahf
fstps
jge
sub
jle
mov
andl
pop
xlat
mov
inc
sbb
push
cs
lea
bound
xchg
push
xchg
sub
lret
mov
xor
xchg
cli
add
cmpb
xchg
mov
jbe
xor
sahf
mov
pop
ljmp
subl
andb
push
jecxz
aas
xor
cmp
cli
mov
insb
ss
inc
dec
mov
cld
in
inc
outsb
inc
repnz
imul
shll
das
out
flds
inc
fsubp
loope
out
mov
mov
test
inc
je
bound
add
outsl
mov
push
in
hlt
push
ret
push
leave
xchg
xor
jae
sahf
sti
fldenv
fidivrl
xor
fmull
push
mov
aas
sub
pop
or
mov
out
cmpsl
jo
dec
cmp
sbb
cld
and
xchg
out
andl
push
jbe
pop
mov
jae
scas
ret
aad
pop
cs
pop
jge
cmp
nop
inc
ffree
xor
jo
in
and
test
mov
dec
xchg
les
imul
sub
xchg
mov
ret
sub
sub
push
paddusb
xor
push
xchg
sub
cld
xchg
es
jno
test
sahf
xor
cmp
jnp
pusha
movsl
cmp
jle
andb
stos
mov
add
jp
or
mov
dec
mov
call
push
insl
pushf
mov
mov
out
pushf
adc
fcomps
xchg
loop
popa
or
movsb
cmp
jp
js
rcrl
adc
andb
mov
scas
pop
xchg
sub
in
xor
lret
push
inc
inc
sti
and
cmp
push
mov
je
pop
mov
sub
pop
inc
int
jns
roll
scas
mov
jno
call
pop
out
adc
mov
push
fbld
lcall
xchg
xchg
sbb
das
iret
iret
outsl
lods
push
sbb
sub
sbb
xchg
dec
fs
pop
mov
sbb
push
push
jmp
lret
cmp
jl
jno
shrb
rclb
jmp
loop
inc
arpl
jge
lret
cmpsb
aaa
mov
inc
and
xlat
in
push
or
insb
shrl
and
or
mov
jmp
mov
ljmp
es
pop
pop
adc
lods
cmp
mov
push
add
int
pop
or
shll
fwait
xor
mov
std
pop
push
push
pop
daa
mov
pop
mov
pop
jecxz
lahf
mull
mov
xchg
in
jmp
cmpsl
mov
inc
bnd
stc
daa
mov
andb
dec
je
loop
sub
fmuls
cmpsb
or
adcb
pop
dec
jecxz
popf
sbb
xor
cmp
out
sbb
into
and
add
jns
stos
inc
jecxz
pop
fistpll
fucomi
jl
jg
mov
xor
jnp
sbb
dec
lods
cmp
outsl
add
repz
test
jmp
loopne
jno
push
mov
jns
scas
xchg
pop
sbb
test
mov
mov
aas
pop
sub
aas
lea
pop
fisubrs
sbb
jno
push
jae
xchg
adc
sahf
cmp
shr
or
pop
scas
and
daa
jo
in
mov
ljmp
insl
maxps
movsl
inc
in
loopne
enter
add
push
cltd
das
loopne
inc
and
fcomip
pop
adc
sbb
and
cmp
aaa
jb
outsl
iret
mov
scas
inc
xor
inc
fsubrp
or
mov
scas
inc
adc
xchg
ds
cmp
xor
ja
clc
dec
out
push
andl
pop
mov
cmp
test
and
gs
add
aas
push
push
adc
lcall
aam
orl
xor
and
cmp
je
inc
flds
or
mov
testl
faddl
jo
mov
pop
mov
push
ret
jl
adc
sbb
test
pop
outsb
jmp
mov
dec
mov
popa
jae
movsl
jno
xorl
cmp
pop
iret
xchg
cmp
in
enter
cmc
push
jne
sti
pop
stc
sbb
lret
push
jns
subb
mov
push
mov
cmp
and
test
sbb
mov
add
testb
push
fs
mov
xchg
mov
pushf
xor
jbe
xor
jbe
xor
sbb
sbb
sbb
mov
mov
sti
sar
aad
into
cmp
or
cmp
lods
cmpsl
cmp
push
sbb
int3
insb
push
inc
test
push
jbe
fwait
push
mov
dec
stc
xchg
scas
jp
mov
inc
inc
idivl
ja
test
push
pushf
pop
iret
pop
add
out
into
push
call
daa
xlat
ljmp
mov
insb
adc
ja
movsl
lcall
inc
iret
sbb
sbb
lods
rcrl
jns
fisubrl
dec
outsb
sub
pop
aad
les
icebp
push
sub
adc
cmc
iret
add
xor
daa
sti
jp
adc
testl
jo
lahf
and
push
call
lcall
jmp
mov
jbe
and
aad
add
jmp
outsb
mov
push
xor
mov
pop
repz
jno
adc
addb
pop
pop
out
movsl
push
mov
sub
jno
jg
sbb
aad
pop
jne
push
ja
add
addr16
push
cmpsb
popf
loopne
sbb
int3
pop
lahf
pop
pop
jle
mov
in
or
les
in
jecxz
xchg
cmp
dec
fdivr
jo
aaa
xchg
cmc
push
adc
and
push
enter
jmp
aad
mov
push
sub
scas
fisubl
jecxz
pop
jae
stos
xchg
hlt
inc
pop
outsb
es
popl
jmp
outsl
pop
mov
cmc
out
insl
stc
inc
jecxz
dec
mov
xchg
nop
jmp
mov
mov
andb
mov
rclb
lret
and
add
mov
adc
leave
cmpsl
shll
cwtl
repnz
inc
stos
xlat
in
das
xchg
xor
lods
and
je
dec
xor
adc
popa
sbb
call
xlat
sub
push
sbb
imul
pusha
fisttpl
adc
sub
mov
jno
ljmp
push
in
in
repnz
imul
outsb
cmp
mov
mov
lock
push
sahf
fwait
std
lods
int3
lock
subb
dec
cmp
shlb
cmp
pop
fwait
or
ret
insb
addr16
cmpsl
and
add
imul
popa
shl
fld
fld1
add
cmp
cmpsb
movsb
pop
icebp
mov
ret
ds
or
and
int3
ss
in
mov
mov
into
loopne
inc
testl
xchg
cs
mov
stos
add
sahf
in
jp
imul
popf
fdiv
push
imul
sub
repz
pusha
fsubl
or
xchg
cmp
daa
push
out
add
hlt
push
fidivrl
xlat
push
cmpsb
pop
jmp
clc
adc
sub
mov
pop
divb
sub
loop
test
nop
sbb
lods
push
fnstcw
push
adc
jl
cmpsl
xor
dec
in
jle
push
insl
dec
shlb
js
movb
clc
sub
cmp
jo
jl
dec
fwait
jg
fildll
fcomp
and
pop
sbb
cmp
out
notl
pop
testb
lcall
data16
sarl
sbb
jae
inc
pusha
mov
dec
jecxz
add
xor
imul
dec
rcrl
fisubrs
dec
das
lahf
mov
ret
pop
mov
add
ljmp
pushf
out
pop
sbb
sbb
hlt
mov
call
scas
xchg
push
push
add
mov
push
inc
iret
and
imul
stc
cmpsl
ss
lea
push
das
cmpsl
xchg
push
in
mov
or
fistpl
imul
lods
and
cmpsb
xor
mov
arpl
adc
aas
push
mov
shrl
and
test
mov
jb
dec
test
imul
orb
mov
out
pop
adc
insl
rolb
fwait
es
jg
iret
movsb
and
fcmovnbe
inc
push
enter
icebp
pop
xor
mov
mov
xor
insb
sbb
sub
enter
cli
inc
sbb
inc
ret
call
mov
pop
mov
hlt
popl
sub
pop
dec
xor
hlt
mov
call
dec
fadd
out
adc
push
inc
rorb
push
pop
push
mov
push
rol
add
xchg
shrb
rcrl
xchg
and
cs
add
and
xor
pop
dec
mov
mov
add
stos
push
cmpsb
mov
or
iret
jb
and
pop
rolb
mov
loop
imul
add
rcrb
adc
bound
inc
cli
sti
jle
adc
lea
imul
mov
inc
and
arpl
inc
inc
cmp
fldenv
or
cmp
pop
sahf
fs
cs
cmp
pop
ret
mov
imul
and
mov
and
in
movsb
jmp
in
inc
cmp
popf
mov
popf
addr16
mulb
iret
lea
test
mov
filds
add
cli
push
xorl
pop
hlt
mov
shr
mov
sub
push
in
icebp
js
mov
subb
sbb
bound
jmp
add
mov
mov
cmpsb
mov
repz
cld
leave
sub
les
dec
rorb
lea
inc
f2xm1
jp
xor
xor
addr16
popa
shr
adc
xor
sbb
jo
fildll
loope
lods
xchg
adc
js
fisubl
ror
pop
daa
inc
out
inc
pop
fldcw
mov
xor
imul
cmp
les
sub
fdivrs
pop
insl
pop
sub
imul
jle
outsl
das
push
fisubl
xor
and
mov
out
packssdw
add
push
repz
stos
jns
push
dec
adc
sahf
xchg
sub
jge
cwtl
stos
cmp
data16
imul
sbb
call
leave
pusha
into
xchg
ja
shr
fwait
or
cmpsb
sub
mov
sbb
ret
icebp
lods
outsb
or
lret
rcrl
pusha
outsb
cmpsb
jae
cmp
pop
xor
fwait
xchg
ss
adc
das
ja
pusha
aaa
inc
lret
sub
xchg
ljmp
xor
addr16
scas
inc
je
pop
popf
push
int3
arpl
dec
mov
inc
lcall
add
add
or
aaa
cwtl
and
repnz
push
jmp
xchg
sahf
push
and
scas
inc
or
lret
mov
addr16
imul
mov
aam
mov
ret
xor
mov
repnz
mov
movsl
imul
mov
and
push
scas
out
fimuls
pop
mov
bound
mov
aad
mov
in
shll
xchg
cmpsl
dec
mov
mov
jns
push
and
fsubr
push
lea
inc
imul
fisubrs
sub
mov
lds
mov
sbb
and
adc
lahf
lret
mov
je
mov
clc
jbe
xchg
lahf
inc
fisttps
pusha
fiaddl
pop
mov
jo
outsl
push
pop
mov
subl
ds
mov
xchg
stos
jmp
xchg
sub
incl
fsubrl
aam
pop
push
lock
jns
sti
cmp
test
fstp
jl
inc
push
popf
sbb
mov
imul
inc
pop
shr
or
cmpsb
mov
nop
jno
add
cmp
push
xchg
jbe
pusha
xor
mov
out
sbb
dec
or
xlat
xchg
sub
xorl
mov
mov
fcomp
jmp
dec
ret
data16
pop
testl
and
push
repz
dec
arpl
adc
push
dec
mov
add
push
andb
fucompp
gs
jb
cmp
shr
jmp
push
cwtl
mov
push
sub
jns
mov
inc
fcomip
xor
pop
movsb
sbb
fbld
dec
mov
mov
clc
push
outsb
or
dec
sbb
nop
sub
outsl
push
mov
or
fs
cld
xchg
aas
hlt
push
repz
and
std
jbe
xor
mov
adc
sub
jae
pusha
pop
adc
or
add
pop
mov
push
jae
popf
sub
mov
add
sub
sub
dec
mov
out
cwtl
pop
mov
mov
nop
hlt
mov
lret
aad
mov
inc
inc
mov
pop
out
mov
adc
ja
test
cmc
fdivs
xchg
nop
sub
test
enter
jb
icebp
stos
dec
pop
push
dec
or
mov
jns
es
aas
dec
add
test
sub
mov
out
adc
ja
popf
insb
mov
lods
out
jle
lahf
out
jne
out
je
cmc
les
dec
mov
outsb
loopne
int3
sub
sbb
pop
mov
pusha
jmp
cmp
leave
inc
and
cwtl
std
push
jb
push
fnstenv
aad
mov
push
icebp
aaa
into
and
jo
push
int
aas
testb
clc
lcall
les
cmp
pusha
into
mov
xchg
mov
push
sahf
stos
jle
jns
out
jnp
or
cmp
jbe
loop
aaa
sbb
iret
pop
jns
lock
sbb
push
xorb
jecxz
or
es
lahf
cs
scas
outsl
sub
mov
push
dec
sub
sbb
or
cwtl
adc
mov
ret
scas
std
lds
aaa
js
test
and
sub
int3
aad
icebp
cmp
mov
rolb
jmp
jmp
or
mov
xor
push
fcomi
shlb
enter
inc
cltd
and
push
push
loop
data16
bound
add
popf
orl
mov
push
fwait
cwtl
out
fisubl
add
jns
mov
mov
popf
arpl
popa
int
push
mov
ficoms
les
js
push
ds
lret
lret
fst
cltd
or
sbb
pop
and
insb
fcoms
dec
jecxz
jge
sub
xor
mov
and
mov
xor
push
in
cmp
in
cmpb
insb
or
ljmp
xchg
rcrb
rcrl
pusha
daa
sbb
and
std
push
jge
sub
mov
ja
dec
shr
xor
jmp
sahf
sbb
fcoml
testb
lahf
popa
jmp
mov
inc
cmp
fwait
arpl
push
stc
popa
lods
aaa
shll
pop
inc
mov
lds
mov
ret
sbb
mov
lahf
sarb
pop
in
jb
movsl
xchg
pop
adc
or
ret
das
mov
mov
adc
cltd
mov
jle
daa
popa
aad
pop
repz
and
ljmp
push
icebp
pop
ret
pop
repnz
mov
jns
pop
dec
insl
jg
fisubl
and
xchg
xor
in
pushl
cmp
out
pop
rorb
xchg
stos
lcall
je
lahf
sbb
shlb
mov
jns
stos
jmp
fwait
pop
mov
sbb
aaa
loop
dec
mov
fisttps
sub
js
int3
jne
mov
pop
aaa
aaa
shlb
loop
in
push
mov
insl
es
repz
roll
scas
add
lds
mov
jecxz
adc
pop
jmp
push
outsb
cwtl
ljmp
sbb
mov
nop
jle
addr16
push
sbb
mov
mov
xchg
jecxz
sbb
fisttps
shll
cmp
xchg
add
std
loopnew
jg
mov
push
je
push
js
iret
in
add
push
sti
mov
jge
ret
mov
sbb
mov
out
imul
sub
in
dec
fwait
and
ret
stc
and
imul
or
dec
repnz
sub
in
cmpsl
outsl
pop
mov
adc
subb
mov
mov
lods
add
push
or
pop
lcall
and
xchg
xor
mov
push
lea
popa
lock
jmp
cltd
pushf
push
loop,pt
enter
shrl
emms
dec
loope
xor
mov
sbb
addl
pushf
sbb
mov
fidivl
sti
sbb
sub
xor
jno
push
sbb
xchg
and
scas
pushf
ja
in
and
xor
dec
push
test
sbbb
push
jp
test
rep
sbb
sbb
icebp
shl
ss
ret
clc
pop
out
xor
pop
cmc
sbb
in
das
xor
jl
out
mov
jno
adc
or
scas
addl
dec
pop
popf
out
dec
adc
cltd
popa
push
notl
in
mov
inc
jle
call
jno
xchg
push
and
push
xlat
mov
mov
xor
cmp
int3
fsubrs
rcrb
imul
inc
push
lea
je
lret
mov
sub
mov
aam
movsl
mov
inc
fiadds
add
mov
pop
jle
call
cmp
pop
andb
js
sub
lods
std
pmaxub
mov
into
in
bound
or
inc
xchg
sub
mov
inc
nop
lea
out
push
ljmp
jb
mov
mov
repz
inc
gs
int3
push
push
inc
add
fistps
shrl
lds
decl
jo
repnz
testb
jne
mov
fnstcw
adc
dec
dec
ret
subl
xchg
add
pop
mov
sub
stc
aas
sarb
int
aad
push
push
stos
fnstcw
lock
sub
dec
sub
jle
stos
inc
stos
push
jge
sbb
xchg
sbbl
push
pop
out
xor
add
sbb
fwait
enter
out
lcall
fsub
jno
push
ja
xchg
jne
lea
add
and
xchg
push
mov
in
mov
dec
push
in
inc
scas
or
xchg
adc
mov
pop
xor
mov
add
and
in
aas
shl
mov
pusha
adc
addr16
roll
gs
mov
sub
pop
mov
repz
mov
and
stc
mov
iret
pmaxub
adc
push
hlt
cmpsl
dec
xchg
cmp
in
les
fldl
mov
push
mov
mov
cmpsl
xor
adc
and
mov
rcl
dec
jnp
icebp
jge
out
scas
adc
enter
das
mov
add
insl
jp
mov
adc
rcrl
loope
loopne
ds
inc
mov
fisttps
and
aaa
je
cmp
pop
into
dec
leave
xor
in
in
ss
pop
fbstp
dec
dec
rep
inc
jecxz
dec
push
out
pushf
pop
sbb
mov
push
cmp
pushf
pop
lahf
shl
sub
pop
mov
inc
cmp
sub
clc
add
mov
mov
adc
lock
add
inc
add
fstpt
push
push
mov
jg
adc
xchg
push
jmp
outsb
fadds
and
cmp
ss
or
push
stc
aaa
into
das
inc
jnp
or
setge
pusha
dec
dec
pop
das
stc
jo
jle
sbb
dec
jo
jle
adcl
repnz
inc
cmp
repz
pop
icebp
setno
dec
pop
sub
ljmp
stos
sbbb
orl
xor
lahf
loopne
pop
addr16
xchg
push
adc
daa
dec
add
push
movsb
test
mov
xchg
sub
fsubrl
xchg
xchg
jo
xor
ficomps
add
push
jne
and
fdivrl
popa
arpl
xchg
pop
inc
scas
fs
mov
js
xor
loop
xchg
dec
xor
push
repnz
aas
lea
repnz
pushl
lea
repnz
les
xorb
adc
sarb
sbb
inc
faddl
sub
stos
pusha
arpl
mov
add
jl
add
iret
mov
cld
mov
pop
jge
frstors
and
aaa
and
test
es
sbb
dec
pop
loopne
scas
cmp
pop
mov
test
or
aad
adc
and
or
lret
call
mov
push
mov
push
and
arpl
je
fdivl
jnp
pop
fldl
mov
test
cmpl
or
push
cmp
ret
out
fsubs
outsb
dec
jle
mov
lds
sarb
xchg
xor
nop
adc
xchg
cmc
adc
daa
mul
pop
in
int
ds
sbb
xchg
jle
fldcw
into
sbb
mov
pop
repnz
cmpsb
dec
pop
cld
sub
in
imul
mov
arpl
and
or
mov
and
jge
and
sbb
mull
add
insl
lods
mov
push
jp
fwait
lods
clc
data16
dec
and
repnz
test
add
imul
ss
mov
sbb
mov
iret
pushf
sub
addr16
pop
and
aad
xchg
pop
and
mov
stos
fwait
aad
sysret
mov
or
lret
jnp
dec
xor
jge
sbb
jecxz
pop
xchg
mov
inc
pusha
inc
add
pop
sub
mov
dec
or
sbb
aas
int3
imul
test
dec
fsubs
imul
cmp
daa
sahf
lret
xchg
jae
imul
and
mov
es
push
pop
xchg
ja
test
dec
pop
mov
jle
jmp
out
sub
xchg
fnstcw
xchg
jl
inc
push
popf
in
fiadds
sahf
mov
ret
xor
ss
out
jne
xchg
xchg
pop
cmc
cmc
ficoml
inc
ss
and
dec
pop
mov
cmpsb
sarb
and
scas
popa
fdivrl
fists
push
gs
enter
dec
adc
bound
xchg
stos
fidivrs
imul
shl
sbb
arpl
mov
js
imul
sbb
mov
enter
inc
sub
or
jne
jecxz
inc
jb
xchg
push
add
adc
sarb
push
das
jg
pop
insb
fs
cltd
js
xchg
jge
das
mov
inc
insb
cmp
and
and
add
push
add
popf
mov
ss
inc
fisubrl
push
pop
cmc
xor
pop
cmc
mov
andl
adc
mov
fisttpl
fists
sbb
dec
mov
cmp
lea
push
repnz
stos
jae
cmp
push
cli
int
xor
cmp
fwait
jnp
add
push
jns
lret
sub
xchg
rolb
push
xor
inc
imul
push
lock
aad
inc
pop
pop
repnz
push
and
ss
fwait
adcb
xor
cmpsb
pop
xor
mov
icebp
pushf
sbb
movsb
and
mov
xchg
cli
mov
pop
andl
imul
adc
cvtpi2ps
iret
or
xchg
mov
mulb
push
fcoms
sahf
movsb
repnz
xor
in
mov
mov
cmpsl
inc
mov
divl
scas
stos
int
and
mov
das
jb
test
add
push
add
mov
fwait
lret
aas
mov
popa
and
clc
pusha
andl
fidivrs
outsb
sbb
mov
push
cmp
cld
sbb
fldcw
or
lret
add
push
inc
cmp
and
jbe
jae
sub
call
jns
lock
jae
shl
adc
stc
pop
mov
outsl
imul
scas
inc
mov
pop
int3
arpl
and
xchg
movsb
pop
stc
cmp
xor
adc
lret
add
icebp
pop
xor
jnp
fs
and
xchg
ficoms
repz
xor
and
or
negl
in
call
fisubrs
shl
andl
xor
cli
add
xchg
dec
call
hlt
xchg
shrb
sti
fwait
add
xor
pop
mov
push
sub
leave
out
mov
cmp
mov
fists
arpl
shlb
push
or
in
dec
cmp
ja
sub
fs
xchg
xchg
lcall
inc
rcrb
scas
adc
imul
or
aam
xchg
pushf
gs
leave
rcl
sub
inc
roll
mov
sbb
jle
hlt
jg
jbe
push
jge
ljmp
jae
popa
adc
and
lret
mov
bswap
and
pusha
mov
xchg
data16
cmp
inc
cli
mov
adc
sarb
std
xchg
test
inc
movsb
ja
sbb
mov
mov
shr
sarb
aaa
push
hlt
fdivs
insl
xor
ret
into
into
dec
loope
or
jnp
fsubrs
push
ss
xlat
lret
xchg
sbbl
outsl
cmpsb
lods
jl
add
in
popf
xor
into
xchg
pop
rorb
push
jmp
xorb
stc
addr16
inc
fs
int3
push
dec
add
mov
out
inc
mov
je
call
outsb
pop
loopne
dec
idiv
insb
ret
sub
pop
js
pop
pop
test
and
jbe
test
cmp
ret
ja
jp
jns
cmp
cmpsb
add
adc
insl
or
sub
sbb
out
movsb
mov
test
push
pushl
orb
stc
jo
push
push
sbb
xchg
enter
xor
pop
or
xchg
je
dec
shlb
call
and
mov
jo
out
xchg
sbb
pop
mov
mov
dec
mov
cmp
xchg
mov
adc
mov
or
rcr
jne
and
cmpsl
ret
cmpsl
hlt
and
scas
hlt
and
mov
popa
aas
mov
test
les
jnp
pushf
xchg
call
push
leave
dec
xor
jl
insb
and
ret
movsl
dec
addr16
cltd
outsl
sub
mov
iret
lret
aam
ljmp
jb
push
dec
jle
dec
jb
daa
pusha
nop
xor
mov
push
ret
add
add
das
test
add
jg
mov
mov
hlt
sbbb
icebp
push
daa
dec
nop
mov
bound
pop
sub
push
cmp
mov
or
xor
xchg
mov
in
cli
imul
add
add
xor
inc
sbb
sub
pop
cmp
mov
loope
pusha
mull
jmp
xor
ds
lods
adc
inc
into
movsb
inc
add
inc
sbb
gs
mov
imul
push
xchg
pop
jg
cmp
inc
in
or
jmp
xchg
push
push
notl
or
push
mov
loop
daa
sub
aad
cli
add
cmpsl
xorl
cld
fistps
sub
sahf
cmpb
out
dec
hlt
sub
les
into
mov
pop
cs
cmp
add
into
fs
xchg
sub
xchg
dec
mov
jg
fsub
jp
xor
mov
arpl
xchg
call
or
mov
sbb
push
loope
add
push
or
cmp
lret
jne
lods
inc
mov
ja
lods
sub
sub
into
inc
cmp
mul
ret
sbb
mov
cmp
add
xor
pushf
and
mov
data16
mov
push
lea
dec
push
fldenv
lock
cmpsl
cmp
mov
pop
lock
jmp
lods
mov
ss
or
rorl
out
fcomps
aaa
dec
adc
outsb
pop
jb
mov
loopne
xchg
and
jns
lret
fiaddl
out
sbb
mov
frstor
popa
loop
addr16
aas
add
dec
ret
inc
mov
iret
popf
xchg
mov
jno
jne
fucom
lcall
push
lods
xor
mov
movsb
aas
pushf
outsl
popf
pop
jge
inc
ret
out
dec
xchg
insl
adc
out
dec
and
dec
mov
flds
push
and
out
sbb
xchg
stos
ja
pop
cld
aam
test
mov
and
test
test
adc
and
lcall
in
mov
loop
dec
jle
jg
test
sbb
or
lahf
mov
int3
out
ret
jle
cmp
mov
popf
pop
mov
sub
mov
outsl
sub
dec
lret
inc
jecxz
pushf
push
cli
js
inc
stos
sbb
mov
shl
pop
sub
jns
pmaxub
adc
inc
and
inc
pusha
jb
and
ja
sub
lcall
repnz
ja
and
add
ja
or
push
addl
xchg
adc
or
add
clc
inc
test
mov
adc
or
mov
xchg
sub
loop
adc
and
mov
ficomps
test
add
aad
cmp
movsb
lods
adc
mov
popa
jmp
cmc
cmpl
and
shll
inc
in
inc
pop
push
cmp
ret
stc
adc
push
jl
pushf
add
mov
or
lea
movsl
daa
enter
pushf
mov
repnz
in
push
sub
add
ret
hlt
xchg
push
mov
fdivr
adc
pop
dec
loop
aaa
mov
aas
je
jae
push
sub
addl
in
push
mov
rcl
jo
dec
aad
push
jp
fistpll
xor
icebp
pop
popa
stos
andb
pop
push
ljmp
add
xchg
mov
inc
outsl
xchg
fs
pop
stos
sbb
inc
xchg
sub
mov
push
int3
add
add
imul
leave
outsb
out
adc
push
data16
test
mov
roll
popf
hlt
dec
jecxz
movsl
sub
mov
sbb
jle
xor
pusha
pop
leave
adcl
fsub
aaa
test
adc
loopne
mov
call
rolb
jge
inc
fisubrl
dec
out
arpl
adc
mov
cmp
sti
lock
fs
xchg
adc
cmp
out
sti
sbb
dec
inc
jg
cmp
fnsave
push
jnp
inc
daa
sbb
sub
lahf
sbb
fists
mov
sbb
clc
xchg
pop
repnz
dec
or
pushf
xor
xchg
in
stos
gs
mov
dec
icebp
arpl
mov
jmp
pop
xchg
sub
push
imul
sbb
dec
dec
mov
int
lret
mov
mov
pop
jne
and
and
push
addr16
hlt
adc
push
lods
xlat
and
pusha
ljmp
mov
sbb
push
sbb
mov
test
mov
sbb
push
jl
adc
cmp
mov
push
pop
adc
or
mov
fiadds
and
fnsave
stc
movsb
pop
or
cld
pop
cld
cmovb
fxtract
pusha
es
mov
test
push
fsubrs
fisubrl
shlb
mov
in
cmp
xor
fnstenv
mov
aam
jge
mov
mov
test
aaa
inc
hlt
leave
pop
clc
mov
clc
inc
push
cmp
pop
fadd
rol
sub
arpl
inc
lret
inc
pop
sub
jge
xor
int3
cltd
dec
jnp
dec
ret
flds
mov
out
xchg
xchg
sub
clc
sub
scas
xchg
cld
jb
test
mov
fwait
xor
les
dec
cmpsl
out
loop
cmp
jecxz
xchg
mov
pop
into
cmp
mov
lret
sbb
inc
mov
pusha
pop
arpl
xchg
push
cld
jp
subb
push
nop
mov
push
jns
or
or
cld
imul
pop
jp
push
inc
iret
gs
sub
push
out
push
jp
sub
leave
and
lcall
jnp
add
cwtl
sbb
lret
sbb
sbb
and
cwtl
fs
inc
fs
adc
idivb
xor
mov
push
add
sbb
inc
inc
mov
gs
fidivrs
aam
ficomps
in
mov
test
xor
movsl
pop
fwait
sti
jp
stc
inc
stos
inc
dec
xchg
add
jecxz
stos
ljmp
ret
cmp
cmpsb
insb
add
lret
cmp
lods
inc
fisttpll
xlat
mov
or
jnp
or
and
inc
pop
mov
in
or
ss
aaa
lret
lret
cld
fldenv
or
mov
xor
xor
in
lods
or
cmp
pop
lcall
inc
fcomps
ret
jl
pop
xor
popf
dec
fsubl
out
add
out
or
sbb
push
adc
mov
adc
push
xor
and
out
adc
aaa
fs
mov
push
loope
mov
mov
movsb
pop
xlat
mov
fistpl
or
out
test
mov
fdivp
mov
repz
cmpb
repnz
scas
sbb
daa
sarl
pop
pop
lods
push
shlb
xchg
push
shll
jg
jnp
gs
sbb
adc
pop
aas
push
cmp
or
dec
cmp
jns
mov
cld
enter
aam
arpl
push
mov
testb
sub
inc
mov
in
inc
insb
adc
mov
call
shrb
mov
pop
jmp
and
sbb
popa
jl
cmp
add
inc
out
inc
ljmp
xchg
jnp
dec
dec
sbb
cmp
mov
push
mov
cltd
out
lahf
jns
into
cs
or
dec
fs
pop
cli
jg
jg
inc
movsl
xchg
jnp
inc
push
lret
outsl
mov
jne
inc
enter
test
push
pop
mov
xchg
fisubs
jne
iret
push
in
mov
and
push
popa
incb
das
subl
addr16
mov
mov
ret
loopne
and
inc
add
shrl
add
push
xchg
addr16
pop
shlb
xor
jns
fwait
add
std
add
cltd
sbb
ret
jle
int
in
jno
aam
dec
adc
popa
imul
cmc
xchg
sub
shll
sbbb
jo
in
inc
sarl
rorl
dec
dec
sub
test
inc
les
mov
push
sbb
xchg
and
repnz
push
jp
jnp
das
pop
fists
push
js
push
xor
sbb
shrb
fidivs
mov
mov
add
and
fsubl
sbb
pop
sbb
push
inc
pop
loopne
jl
mov
lods
push
xchg
xor
jae
shll
imull
cli
pushf
sti
mov
add
lods
idivb
mov
enter
fidivl
add
jg
dec
mov
out
mov
dec
jle
add
icebp
xchg
adc
insb
out
jge
push
xor
sub
inc
mov
and
add
adcb
sub
push
stos
loopne
add
or
and
push
sub
pop
xor
lahf
std
push
nop
imul
out
sub
inc
fiadds
stc
dec
je
je
imul
gs
mov
add
imul
mov
std
or
add
fisttps
out
sub
inc
nop
imul
divb
dec
xchg
fsubrl
and
push
enter
int
mov
sarb
cvtps2pi
jmp
or
xlat
icebp
divb
xor
insl
mov
fwait
testl
jbe
mov
push
fldlg2
or
push
enter
xchg
loope
inc
aas
testl
sub
incb
lea
sub
dec
lods
sub
fisubrs
sbb
je
xchg
sub
fwait
test
dec
pop
fldenv
lret
pop
dec
std
push
into
enter
xor
lret
jns
jge
xchg
stos
inc
jmp
xchg
aam
into
inc
inc
fdivrp
lock
stc
loopne
xor
pop
dec
mov
in
xor
cmc
jbe
mov
sbb
or
push
adc
cld
push
inc
aas
dec
pop
out
int3
popf
fadds
sub
mov
in
add
push
sub
pop
and
fdivrl
mov
cwtl
mov
mov
pop
int
mov
lea
add
shrb
repnz
scas
out
inc
sti
ret
ss
arpl
data16
fimuls
mov
jl
xlat
mov
shll
adc
inc
sbb
insl
out
sbb
fsubrl
add
mov
mov
pop
adc
scas
int3
mov
es
pop
xlat
clc
inc
cmpsl
sbb
outsb
add
xchg
dec
jno
cwtl
push
in
sbb
aaa
or
sti
outsb
push
jo
or
fiadds
jo
jg
and
lods
pop
lds
mov
repz
or
inc
and
arpl
aam
rorb
mov
jg
lahf
mov
mov
push
fmull
aaa
mov
push
fidivrs
mov
or
test
sarb
push
stos
jg
fdivrp
iret
fsubr
adc
testb
cmp
or
dec
sbbb
stc
sbb
clc
push
mov
mov
scas
inc
cli
sbb
sti
leave
xchg
int
jmp
stos
jmp
scas
sbb
and
out
adc
ret
hlt
mov
jno
popa
add
xchg
jecxz
icebp
fsubrs
xchg
inc
jae
punpckhdq
lock
mov
es
ds
mov
jae
push
xor
sbb
outsl
stc
cmp
enter
loopne
jns
ret
and
adc
cs
pop
out
jmp
pop
jg
and
dec
dec
push
or
and
jg
fnstenv
mov
loop
nop
push
inc
mov
adc
mov
sbb
lahf
leave
repnz
mov
cmpsb
enter
xor
nop
popa
fcompl
jg,pt
jo
pushf
outsl
pushf
aam
test
scas
shrb
int
in
push
lock
dec
adc
inc
cltd
xchg
push
test
sahf
lock
cmp
sahf
test
or
mov
mov
lock
movsb
pop
cmp
push
cmpsl
es
mov
mov
js
or
scas
inc
mov
int
movsb
mov
orb
fimuls
or
sub
outsl
in
std
nop
out
pop
mov
dec
outsl
jp
mov
sarb
push
or
adc
mov
ror
or
pop
fs
xchg
jle
jmp
into
sub
inc
or
subb
xor
stos
in
adc
int
jo
mov
nop
sbb
push
dec
mov
nop
jg
inc
dec
negb
push
inc
out
inc
lds
mov
sub
xor
or
stc
ss
lahf
mov
xchg
sbb
pop
and
mov
aad
leave
or
cmp
push
cmp
rcrb
int
and
movsb
dec
dec
outsb
jbe
jnp
sti
stos
das
and
sti
icebp
fsubrl
sbb
arpl
sub
movsl
mov
les
ret
rcll
sbb
sbb
and
fwait
mov
sbb
inc
cmp
cmp
aas
in
add
pushf
fiadds
lretw
mov
xor
imul
das
shrb
sarl
or
hlt
les
orl
fstl
rcrb
jae
inc
mov
and
xchg
xor
jo
lahf
data16
test
mov
fisttpll
fsts
xor
cmpsl
jecxz
fmuls
cmp
add
pop
sub
lods
inc
rorl
jnp
inc
adc
pop
pusha
jp
test
push
je
mov
dec
adc
or
or
jo
cld
iret
data16
jnp
ljmp
aaa
and
mov
fsubs
aas
fcmovbe
dec
mov
sbb
push
cld
movsb
ss
cwtl
mov
dec
fs
lcall
pop
ljmp
mov
push
dec
lea
js
into
cmp
popf
adc
dec
xor
xchg
dec
lahf
push
mov
cmp
hlt
mov
and
cli
mov
mov
inc
orb
jnp
call
scas
jle
mov
into
hlt
dec
adc
adc
mov
and
mov
add
sbb
nop
test
dec
in
xchg
inc
fsubs
pop
out
inc
scas
int
inc
dec
lret
push
dec
in
stos
push
pushf
push
add
outsb
scas
leave
int
mov
inc
jns
stos
es
inc
fiaddl
test
mov
sbb
sbb
out
cmpsl
ds
mov
cmp
js
shr
sbb
test
push
hlt
ss
in
or
push
std
cltd
loopne
inc
sti
hlt
mov
sbbl
out
sbbl
mov
xlat
montmul
cmpsb
xchg
sub
jg
mov
adc
jns
sbb
addr16
sub
enter
int
push
dec
or
enter
icebp
pop
push
hlt
sub
lcall
setge
lea
mov
ss
dec
test
out
push
jmp
fcompl
rcrl
mov
fbstp
sahf
xchg
mov
xlat
int
bound
or
dec
repnz
inc
ret
insb
or
sahf
in
out
add
jnp
push
repnz
add
adc
mov
imul
sub
or
sub
inc
pop
xor
jnp
lret
mov
mov
loopne
cmp
mov
mov
jae
adc
divl
and
mov
sbb
insl
and
jle
in
sbb
pop
scas
pusha
inc
cli
dec
push
xchg
mov
or
jmp
hlt
mov
int3
int3
in
xor
rcl
inc
faddl
test
sub
repnz
xchg
mov
push
out
lods
xchg
jle
leave
or
mov
cmp
loop
ds
iret
out
dec
cmpsb
xchg
xchg
stos
mov
in
in
int3
loop
push
fbld
fdivl
and
rclb
jb
rolb
push
xlat
cmp
jno
mov
dec
add
pop
jnp
mov
pop
or
shlb
fs
dec
xchg
sub
mov
fisubrl
or
incb
clc
mov
les
inc
in
jbe
pop
xchg
inc
ss
sbb
push
fbld
orl
push
lods
lcall
inc
scas
inc
mov
mov
aad
idivb
fdivs
fisubs
push
outsb
subl
xchg
in
mov
hlt
sbb
loope
ret
sub
push
jecxz
lods
mov
pop
test
jnp
imul
cmpsb
sar
push
mov
sub
popf
add
mov
xchg
stos
mov
in
lret
fwait
push
icebp
dec
movsb
dec
out
loopne
push
pop
aad
dec
dec
sub
cwtl
push
es
adc
lods
hlt
mov
sub
mov
push
testl
shll
dec
jp
lret
inc
push
psrad
dec
xor
dec
out
test
pop
out
adc
jg
xor
mov
int3
cmp
psubsw
fidivs
pushf
adc
movsl
mov
mov
sbb
jns
cmp
sbb
icebp
xor
jl
jnp
inc
fucomi
jns
clc
push
repz
fcomi
jle
sub
pop
notl
mov
sub
js
mov
cmp
enter
sbb
xchg
lods
pop
mov
pushf
push
in
lea
rcrl
push
scas
sbbl
xchg
stos
in
inc
mov
loope
insl
lcall
hlt
loop
lods
stos
in
push
std
je
xor
andl
mov
or
cmp
cmp
push
repz
movsb
repz
stos
sub
or
xchg
and
sbb
push
mov
cmpsl
out
pop
std
xchg
cmp
push
in
sbb
inc
xor
push
push
push
pop
push
test
fidivl
paddq
cmpsl
adc
sbb
dec
jne
aad
jle
negb
aam
jle
jp
xchg
aas
mov
jmp
xchg
xchg
outsl
call
mov
or
or
mov
xchg
jp
daa
lds
pop
mov
add
mov
sub
icebp
or
in
adc
ret
sahf
mov
xlat
scas
inc
sti
and
xor
lret
xor
test
pop
sbb
xchg
out
sahf
mov
xchg
cmp
shlb
ljmp
insb
cmp
mov
test
add
insl
rclb
add
sbb
inc
jae
xor
mov
lea
mov
add
and
cmp
inc
jmp
mov
push
out
in
add
jle
cmp
lods
imulb
sub
sbb
push
fcmovnb
add
mov
paddsb
add
jo
lods
jl
cmpsl
or
mov
mov
xor
cwtl
int
imul
push
sub
outsb
mov
jl
mov
out
mov
jecxz
clc
aaa
mov
fadds
jp
push
cmp
pop
stc
pusha
push
mov
scas
fs
dec
mov
adc
pusha
or
mov
js
pop
mov
push
mov
xchg
into
rolb
daa
fs
push
xchg
dec
and
cltd
ror
int
add
xorl
lds
push
inc
fs
int
and
movsb
cmp
dec
push
stc
and
ljmp
mov
pop
mov
std
je
cmp
imul
xor
push
jl
fs
shll
jae
mov
aas
sbb
mov
sbbl
ja
fbld
decl
mov
xor
mov
push
inc
mov
push
and
lea
sub
insl
lds
ficoml
xor
out
test
push
or
cmp
iret
into
pop
sub
aaa
or
dec
es
dec
fisttps
stc
data16
rclb
in
sub
add
inc
inc
insl
add
add
jae
cs
loope
sbb
insl
xor
sbb
mov
mov
hlt
jmp
ret
xchg
mov
add
hlt
out
pop
cmp
dec
dec
notb
or
ds
jmp
dec
jecxz
pop
mov
popf
xchg
xchg
or
push
repnz
outsl
shlb
cmp
shrb
or
mov
pop
mov
loopne
rcrb
dec
mov
and
push
aad
push
insl
mov
jecxz
call
aas
cmp
repnz
ljmp
fisubrl
bound
ss
enter
cmp
imul
dec
sub
push
or
int
sub
mov
psadbw
add
push
add
arpl
in
pop
cmp
cmp
cmpsb
dec
fs
nop
mov
mov
rcrb
jo
popf
xchg
xchg
mov
scas
test
pop
call
or
cmp
inc
addr16
xor
push
repnz
hlt
pusha
fdiv
clc
mov
test
mov
inc
xchg
cs
stos
shlb
xor
adc
and
repz
xor
or
ljmp
arpl
les
sbb
enter
jo
aaa
adc
mov
rcrb
jns
mov
pop
xchg
jbe
into
enter
outsb
or
mov
xlat
gs
or
sub
jl
adcl
scas
push
push
pushf
stc
mov
or
lea
sahf
fxtract
dec
test
add
enter
jo
cmp
sbb
xlat
mov
pushf
xor
xchg
xor
call
sub
mov
sbb
clc
insl
in
xor
rclb
cli
xor
jl
test
mov
out
inc
mov
sub
loop
mov
out
shll
pop
pop
sbbl
adc
jne
jge
stos
lods
jns
sahf
mov
mov
jecxz
jmp
mov
lret
push
in
pop
out
out
dec
sbb
js
push
inc
mov
mov
aam
jg
mov
in
and
push
nop
jae
push
shrb
repz
fnstcw
fld
leave
dec
sbb
xchg
add
aaa
ffreep
mov
sub
aas
push
push
jecxz
push
adc
or
stos
jne
jle
fwait
in
pop
sbb
mov
je
lcall
bound
outsl
popf
push
inc
sub
lret
out
ljmp
lock
or
adc
jbe
sbb
xchg
js
lock
push
rcrl
popa
clc
cmp
jecxz
int
pop
and
insl
sarl
fmul
nop
push
inc
adc
aad
in
pop
pop
pop
xlat
mov
sahf
movd
ja
and
fs
roll
addr16
enter
mov
or
xor
pop
bound
and
shll
dec
or
xchg
mul
in
dec
sub
pop
sub
cmpsb
jl
jle
test
and
mov
ljmp
ja
and
inc
mov
push
cwtl
xor
cwtl
pop
and
mov
xchg
dec
mov
cmp
or
jecxz
push
dec
loope
ret
sbb
call
divb
adc
or
sub
mov
sbb
dec
ret
xor
sub
xchg
dec
lods
mov
and
aam
scas
xchg
xchg
adc
xchg
ret
push
dec
aas
pop
xchg
jl
pop
cmp
push
dec
xlat
push
insb
ljmp
fdiv
test
cmp
cld
add
push
adc
test
add
fdivs
mov
scas
sub
jmp
cmpsb
adc
ja,pt
lods
push
lods
add
data16
fnstsw
pop
push
add
rorl
adc
enter
mov
nop
or
std
xor
jle
test
and
sbb
into
jns
cmpsl
cmp
daa
pop
das
fnsave
orb
mov
lret
xchg
scas
in
es
cmp
mov
sbb
fcoml
les
fldl
sti
jb
sbb
mov
pop
mov
nop
adc
addr16
sti
mov
lods
dec
loopne
gs
and
scas
test
xchg
sub
dec
adc
lods
fidivrl
fsubrs
dec
cmp
fadd
mov
push
xchg
add
xchg
stos
pusha
fildl
aas
insl
mov
mov
mov
jbe
nop
mov
add
fsubs
out
adc
push
pop
scas
inc
cmp
cmp
arpl
jnp
xchg
les
and
divl
pusha
pusha
data16
and
mov
outsl
outsl
adc
ret
dec
or
and
inc
sub
or
arpl
out
pop
sar
rorl
aad
mov
xor
jle
or
lahf
jp
pop
xchg
sub
jle
add
mov
and
pop
pop
sbb
mov
lret
xchg
jno
sbb
mov
or
and
xchg
pop
push
and
movsb
and
popl
xor
push
or
arpl
call
repz
ja
ds
mov
jl
stos
ss
es
call
mov
sub
sub
push
loope
xchg
inc
mov
mov
push
mov
adc
adc
lds
mov
aas
pop
test
mov
push
popa
sub
fsts
mov
fcomip
je
and
xor
mov
sbb
insb
sbbl
xor
mov
test
inc
out
sub
cltd
push
sub
fdivl
cmp
lds
push
lret
inc
dec
decl
adc
outsl
inc
das
inc
push
stc
aam
or
fwait
imul
call
push
jno
popf
sub
dec
sbb
outsb
xchg
pop
add
pop
dec
xor
pusha
fildl
loop
repnz
dec
xlat
pop
fistpll
lahf
mov
jb
rorb
dec
fstl
scas
popf
pop
repnz
div
mov
push
in
xor
sbb
inc
je
jp
gs
xchg
add
pop
call
or
imul
xorl
jo
insb
neg
sbb
mov
clc
iret
iret
les
ret
test
mov
shr
mov
aam
std
and
repnz
loope
inc
cwtl
ljmp
rcll
mov
or
out
xchg
push
cmc
lcall
enter
mov
xor
mov
push
add
stc
push
sub
je
ret
cmp
int
leave
insb
lret
pop
mov
lods
bound
outsl
stos
or
push
ljmp
jno
nop
pushf
mov
inc
adc
mov
mov
lret
add
std
push
sub
lcall
outsb
mov
sbb
mov
cmp
add
popa
mov
repnz
mov
pop
sti
js
jne
dec
idivl
jo
imul
dec
lock
jb
fyl2x
bound
mov
testb
mov
hlt
aas
mov
loopne
je
mov
sub
push
and
or
fcomps
loopne
or
and
in
insl
adc
or
push
fnstcw
sub
aaa
xlat
lods
jg
or
cmp
xor
insl
out
sub
into
or
rorl
int3
es
adc
mov
xor
hlt
cmc
add
xlat
inc
popf
or
sti
mov
lcall
in
incb
leave
pop
test
mov
mov
test
xchg
cmp
negl
fisubrs
mov
push
scas
xchg
sub
dec
mov
imul
lock
pop
sahf
xchg
push
or
in
mov
jge
jg
cli
lds
in
xchg
xchg
mov
jmp
mov
scas
and
notb
roll
or
sbb
in
sub
fsubp
les
lcall
and
scas
inc
mov
sub
mov
fnstsw
shlb
rcrl
pop
cmpsb
jnp
fs
cmp
ret
ss
test
mov
mov
inc
lds
xor
xorb
fldt
nop
inc
push
lahf
cmp
shll
arpl
dec
adc
jl
in
test
jns
dec
push
or
inc
outsl
mov
sarl
shrl
jb
popf
add
ficoml
jae
mov
jmp
iret
push
cmp
mov
ret
jge
rorl
outsb
nop
adc
or
mov
pop
cmpsb
out
jp
fdivrl
mov
cwtl
sbb
jmp
cmc
jl
loopne
ljmp
insb
mov
fstps
test
or
dec
fdiv
mov
outsl
fidivl
filds
rcrl
out
cmp
shlb
inc
dec
pusha
jnp
imul
in
cmpsl
adc
mov
cmpsl
outsl
in
aad
push
lods
test
mov
add
sar
push
add
adc
jl,pn
lahf
push
bound
inc
test
cwtl
mov
lahf
or
les
pop
aam
or
loop
xchg
jge
aas
scas
mov
cmp
dec
mov
cli
test
sbb
stos
inc
in
or
add
bound
popa
loopne
xchg
aad
lahf
xchg
lahf
cmp
mov
fcomi
sub
push
out
shr
test
sub
pushf
or
dec
xchg
sti
mov
adc
mov
hlt
inc
xor
ljmp
icebp
push
divb
cmp
xor
push
daa
or
adc
fnsave
scas
xchg
push
lcall
sbb
xchg
in
mov
popf
dec
addr16
jnp
ljmp
mov
lahf
cld
lds
jge
xchg
sub
icebp
fiaddl
fwait
pop
out
sub
and
fistps
mov
jne
jp
inc
inc
jle
movsl
icebp
xchg
mov
add
push
dec
test
sti
mov
xor
sbb
mov
add
xor
roll
sbb
rorb
movsb
xacquire
int
insl
dec
call
sbb
icebp
movsl
pop
daa
jecxz
sbb
or
bound
hlt
imul
mov
add
mov
rclb
into
lahf
push
mov
pop
icebp
js
outsb
ds
dec
jp
hlt
cmp
ss
iret
movsb
vandps
jmp
ret
ret
out
popa
inc
loop
scas
sbbl
cmp
jno
out
mov
adc
ds
sbb
cmp
clc
cmp
sub
addr16
inc
dec
lods
jno
push
ja
mov
fbstp
jg
fcmovnu
adc
cmp
js
shll
ret
add
sub
xor
pop
icebp
pusha
dec
mov
repz
pop
push
pop
sti
inc
mov
cmp
sbb
aad
cmp
cmp
insl
mov
sbb
mov
mov
xchg
in
adc
pop
fdiv
adc
mov
push
insb
aas
jecxz
and
in
stos
daa
adc
inc
pusha
ss
inc
call
popa
ss
leave
adc
call
xor
push
leave
lock
fbld
mov
jae
lret
sti
push
mov
push
shrb
outsl
dec
inc
jle
lods
xchg
dec
mov
in
stos
insb
pop
ja
cmp
add
and
mov
xchg
add
jge
repnz
jns
add
jle
cmp
mov
ret
outsb
imul
pusha
stc
push
cmpsb
push
idiv
mov
xor
out
and
rorl
ss
pop
scas
inc
cmp
push
or
in
xor
add
xchg
aas
add
pop
movsb
out
sub
push
mov
push
roll
loopne
je
insb
in
lods
rcrl
in
imul
mov
push
inc
push
adc
fwait
sti
dec
xor
cld
mov
mov
xor
fadd
adc
inc
out
xor
or
and
aas
push
and
out
and
int
xor
shlb
cmpsl
repnz
mov
mov
fcom
lret
push
dec
imul
lcall
jl
inc
arpl
jns
add
fidivrs
sbb
jmp
mov
jg
lahf
adc
or
cwtl
and
inc
mov
sbb
mov
jb
loope
adc
dec
inc
out
dec
adc
cmp
dec
xor
add
ss
add
nop
lcall
ja
lcall
mov
aas
xchg
xchg
push
test
inc
xor
sarb
bound
inc
nop
xor
bound
cmc
push
jno
mov
repnz
movsb
xor
aad
jnp
emms
jmp
mov
push
pop
movsb
hlt
orl
addr16
das
mov
push
push
js
outsb
stos
lds
mov
pop
jae
jns
push
sbb
rorl
xor
or
cltd
bound
stc
nop
bound
jo
sub
je
and
xor
movsl
jmp
test
outsl
push
out
mov
in
add
inc
gs
add
sbb
sarl
sbb
es
cmp
jnp
lret
out
xchg
pop
adc
scas
dec
shlb
imul
xchg
outsb
cmp
fnsave
sbbb
out
pop
test
xchg
cmpsb
mov
sahf
aas
inc
push
bnd
push
fisubs
rcrb
or
lea
in
iret
inc
incb
or
lret
and
cli
xchg
ds
je
fldt
jnp
ret
test
inc
xchg
add
adc
ret
pop
fidivs
adc
push
jmp
ss
aaa
popf
ljmp
lods
orl
dec
shll
mov
cmpsb
cli
and
pop
adc
inc
jge
push
test
push
mov
shlb
or
pop
inc
scas
dec
adc
insl
push
mov
mov
fwait
rcrb
std
loope
xchg
cmpsl
popa
xor
and
or
inc
sbb
xchg
or
loopne
mov
lods
nop
adc
or
inc
push
push
sub
fisubl
and
cmc
cmovp
je
mov
fcompl
sub
jo
cld
testl
and
adc
incl
mov
sub
movsl
push
adc
shll
lds
sarl
jp
dec
push
add
int3
fcomps
and
dec
test
mov
outsl
sbb
jle
add
fsubr
jp
sbb
and
call
test
outsl
lods
loop
loopne
fistpll
shl
in
popa
rcll
adc
ret
pop
mov
adc
lods
xchg
xchg
imul
mov
adc
mov
jae
inc
enter
fisubrs
popf
mov
mov
mov
insb
dec
sbb
lea
mov
pop
call
movsl
icebp
aad
movsb
cmp
adc
adc
ret
jle
rcrl
add
test
cmp
cmp
sbb
jnp
sbb
jg
pop
scas
mov
test
adc
sbb
push
cltd
out
mov
sub
sbb
iret
lock
mov
lds
inc
jno
add
bound
and
add
xor
int3
add
adc
lea
jle
add
test
inc
call
or
pop
mov
xchg
sub
mov
mov
push
lods
inc
test
call
jo
out
inc
scas
xchg
or
movsb
in
std
mov
sub
inc
pusha
mov
out
test
xor
adc
ja
aam
dec
mov
fisttps
xor
data16
add
outsl
cmp
mov
adc
and
mov
and
fcomp
adc
ljmp
mov
push
nop
pop
imul
push
scas
mov
jge
jl
push
and
sahf
dec
jae
inc
jmp
ret
fcmovu
and
and
add
sbb
out
push
fistps
aad
xor
std
xlat
add
jecxz
pop
es
repz
mov
cmp
cmp
fiaddl
sub
xor
xchg
xchg
mov
push
push
repnz
leave
shll
fiadds
insb
pop
cmpsl
jne
aas
jle
dec
imul
or
push
divb
add
pop
push
int3
call
icebp
or
lret
adc
cmp
mov
lods
mov
clc
in
or
jge
mov
inc
arpl
mov
mov
mov
mov
fstl
stos
shlb
call
or
jo
out
pop
loope
mov
test
negl
jne
sbb
enter
pusha
fcoms
test
stc
test
das
lods
xor
fisttpl
pop
jae
pusha
add
jge
xchg
push
inc
mov
leave
ja
sub
cmpsl
mov
jmp
adc
cmp
cmpsb
sbb
cmp
dec
stc
mov
aam
mov
xchg
pop
pop
pop
arpl
mov
xor
push
and
push
inc
inc
popf
inc
mov
mov
pop
mov
mov
call
sub
xor
ljmp
xor
pop
out
sbb
sub
ljmp
xor
pop
sbb
ljmp
loop
aas
jbe
cmp
mov
sahf
test
movsl
pop
mov
imul
ja
iret
ret
stos
movsl
in
mov
sahf
push
insb
pop
idivl
cmpsb
lcall
bound
in
push
add
mov
lea
inc
scas
or
mov
frstor
push
inc
ss
jl
pop
push
mov
sub
add
dec
jl
sbb
or
mov
adc
ljmp
xor
sub
cld
out
dec
jns
xchg
sbb
mov
adc
jns
out
lds
cwtl
outsl
pop
add
hlt
xor
cmc
mov
out
in
adc
stos
add
test
mov
pop
dec
mov
dec
mov
adc
sbb
dec
in
gs
push
and
inc
mov
jg
xchg
hlt
or
iret
add
or
pop
fimuls
and
mov
fistpll
scas
sbb
mov
rorb
adc
jp
or
pop
cmp
decl
push
mov
or
fcmovnb
jno
mov
mov
int
jmp
and
and
jo
movsl
inc
fs
ret
jge
movsl
in
push
negl
ret
inc
xchg
cmc
dec
mull
cmpl
lahf
movsb
jge
dec
fnstenv
xor
push
in
aad
bound
mov
pop
mov
xchg
lret
push
jmp
js
jo
lret
inc
scas
pop
add
xchg
repnz
decl
add
pop
lea
mov
sbb
cmp
cmp
sbb
lahf
sahf
scas
iret
mov
insb
mov
pushf
xor
repz
dec
pusha
clc
fistpll
sub
sub
cs
lock
pop
ljmp
jle
mov
add
xchg
shrl
sbb
push
repnz
sbb
testl
mov
shlb
and
add
ja
xor
jp
mov
js
dec
imull
cmpw
rcrb
ja
sti
das
cmp
int3
imul
out
adc
stos
adc
mov
lret
test
out
mov
rcrl
mov
in
add
mov
jbe
inc
sbb
jmp
sbb
les
cmpsl
adc
repz
fnop
sub
clc
fidivl
or
xor
clc
push
jno
xor
and
mov
fistpl
xor
fsubs
pop
notb
cld
xlat
ret
je
adc
inc
jp
dec
push
fwait
mov
cwtl
in
clc
sarl
lods
loop
or
cli
mov
sub
std
pop
sub
jbe
jne
or
mov
xchg
xor
pushf
lods
push
sbb
ds
loopw
mov
xchg
xchg
mov
sbb
sbb
jo
loope
sub
push
test
lock
dec
hlt
movsl
mov
imul
lock
in
xchg
push
lret
adc
sbb
xor
lock
sub
addr16
sub
push
test
sub
lcall
and
popa
fsubrs
pop
imul
mov
out
mov
sahf
xchg
popf
ljmp
int
leave
push
mov
aas
mov
dec
sahf
int3
aad
mov
inc
pop
add
lcall
inc
stc
aad
pop
cmc
mulb
daa
data16
test
lret
adc
scas
dec
and
and
sbb
add
outsl
push
out
shl
insb
push
mov
fistl
fwait
repz
aaa
cmp
pop
scas
inc
pop
sub
lods
inc
lods
sbb
mov
movsb
insl
push
das
movb
dec
or
jbe
dec
push
pop
dec
pop
mov
adc
insl
pop
mov
mov
pop
jle
xor
inc
ret
xor
imul
repnz
jmp
or
ret
sub
test
add
es
addr16
adc
stc
jg
jg
lods
rol
xor
add
inc
je
pop
cli
jmp
call
mov
movsl
add
pop
test
push
push
in
psrlq
pop
stc
dec
aas
loop
loop
in
shll
xchg
add
and
xchg
mov
and
mov
mov
aad
push
and
insl
adc
imul
mov
sarb
and
push
ss
repz
push
fsubr
test
adc
roll
jl
cltd
jl
xorl
mov
xchg
add
ret
divb
push
lret
push
mov
and
test
inc
mov
xor
xor
orb
mov
stos
pop
jl
inc
inc
or
sbbb
add
mov
cmpsl
cltd
cmp
pop
movsb
enter
pop
aam
out
xchg
out
outsl
out
dec
das
arpl
dec
push
and
adc
iret
ret
sub
aas
test
fisubs
pop
dec
pop
pop
je
mov
pop
mov
xor
aam
loope
bound
int
ret
cwtl
cmpsl
cmpsl
fwait
scas
fnstenv
shll
rorl
and
sahf
xor
add
mov
xor
sbbb
mov
gs
lods
cs
push
push
insb
or
mov
fidivl
push
repnz
cwtl
fdivl
lods
in
lods
cli
adc
ds
loope
mov
jmp
fldt
sahf
pushf
cld
jns
mov
push
push
jp
ret
jmp
add
or
xchg
jmp
jnp
mov
data16
xchg
push
dec
push
aam
std
xchg
inc
xor
nop
dec
mov
add
and
cmpsb
ret
xchg
repz
js
into
in
jge
cmc
mov
inc
push
add
jns
aad
jg
fstpt
mov
imul
cmp
jb
pop
sub
pop
or
in
cli
push
push
movsl
pusha
lock
dec
into
pop
mov
inc
and
outsl
dec
push
add
mov
push
rcrl
xor
pop
ror
lcall
push
and
mov
add
enter
and
aas
imul
xorl
fldt
fdivrl
xchg
sub
in
pusha
cmp
mov
pop
xchg
mov
cli
mov
outsl
aaa
cli
sub
add
xlat
cmp
push
aaa
into
dec
outsl
roll
adc
imul
mov
cmp
lret
add
xor
mov
loope
sarl
sub
out
stos
push
stc
cli
adc
inc
dec
jb
test
jl
loopne
popa
xor
pop
lret
push
dec
ja
mov
rclb
mov
fistpll
scas
mov
ret
jmp
test
cli
xchg
aas
push
jge
je
cld
andl
out
xor
pushf
gs
mov
sbb
pop
in
add
out
bound
inc
mov
jns
pop
ljmp
push
cmp
adc
scas
lcall
jae
lahf
movsb
push
pusha
jnp
adc
push
rorb
js
sub
inc
push
repz
outsl
push
add
into
lret
sahf
or
aad
adc
and
clc
xor
test
ja
adc
xchg
mov
push
leave
or
and
xchg
sub
ljmp
icebp
jg
pop
jle
jmp
xchg
cwtl
inc
pop
xor
and
loope
dec
push
je
lahf
jo
dec
fcoms
add
sbb
add
popf
js
inc
in
sbb
cmp
jmp
out
push
adc
and
mov
mov
push
movsl
mov
sub
aas
addb
mov
jle
je
xchg
pop
mov
inc
mov
mov
adc
out
inc
hlt
add
push
bswap
dec
clc
or
xchg
gs
cmpsl
dec
mov
xchg
mov
je
data16
lods
xor
xchg
jecxz
scas
test
sbb
push
cmp
mov
inc
push
mov
stos
xchg
push
and
inc
xor
ss
leave
jecxz
daa
mov
neg
scas
inc
push
xchg
sahf
repnz
jno
loopne
test
push
push
mov
hlt
loopne
xorl
adc
sub
adc
push
dec
sbbl
pop
inc
cli
adc
xor
push
xchg
pop
hlt
mov
sbb
call
iret
and
mov
in
stos
adc
mov
lahf
out
jae
sti
or
iret
push
mov
call
test
daa
outsl
inc
jno
les
outsl
sbb
push
sbb
cmc
test
push
jmp
push
cmp
cwtl
mov
jle
xor
iret
nop
movsb
repnz
cmp
stos
outsb
mov
dec
ret
ret
sub
cmp
adc
cmp
add
lods
cmc
lahf
daa
inc
int
lods
cmp
gs
mov
push
test
popl
dec
in
cwtl
cmpsb
inc
movsl
pop
pop
adc
cwtl
pop
out
mov
jno
sbb
pop
jl
mov
popf
shll
xor
mov
jo
jo
hlt
jno
cmp
xorb
pop
inc
cld
outsl
ss
cwtl
add
push
jge
adc
cmp
xchg
adc
test
mov
stos
cmpsl
sbb
faddp
push
lds
arpl
mov
int
popa
arpl
popa
clc
adc
ss
xchg
lock
test
sub
cmc
mov
mov
sbb
mov
sub
push
nop
data16
sbb
mov
lea
push
movsl
mov
adc
arpl
jle
xchg
imul
test
out
and
fcmovnb
gs
pushf
pop
test
cmp
or
sbb
loopne
push
add
cmp
mov
cmpsb
ljmp
pop
lock
clc
test
sti
xchg
mov
repz
in
cwtl
xchg
mov
jnp
pop
pop
in
lret
mov
lods
pushf
sahf
fwait
int
scas
sbb
daa
mov
adc
jae
in
aaa
in
adc
sbb
xor
push
addl
flds
pop
pop
and
mov
inc
push
cmp
jae
mov
mov
and
adcb
pop
out
jb
or
sbb
in
dec
pop
sahf
or
push
ljmp
inc
pop
ja
mov
cmp
fadd
push
or
lahf
mull
push
in
dec
ret
leave
sbb
movsb
mov
in
inc
aaa
inc
xchg
cmp
loope
lds
ret
cmpsl
push
dec
mov
dec
loope
push
adc
mov
js
mov
push
cmc
call
inc
add
popf
in
pop
mov
ds
sahf
in
or
add
push
xchg
add
das
xor
aaa
stos
xlat
mov
int3
mov
fistl
stos
rolb
out
adc
enter
jg
stos
cmpl
jo
add
ds
sarb
sahf
out
cmp
jp
and
add
inc
stos
ficompl
lret
sbb
or
mov
adc
in
lea
test
push
aas
lock
popf
jbe
mov
inc
xor
cmp
adc
dec
mov
cmp
or
bound
xor
cwtl
std
dec
repnz
mov
add
xchg
jge
cmpsb
add
xchg
cmp
cmpsl
mov
fsubrl
fsubl
sbb
mov
fs
roll
lods
test
or
or
imul
das
and
mov
mov
fbstp
call
or
daa
sub
xchg
adc
lock
sbb
lock
repnz
add
xor
cmc
mov
rorl
adc
lds
leave
popf
fnstenv
mov
into
mov
negl
int3
scas
cmp
popf
sbb
fucomi
add
shlb
fcom
xchg
repz
cmpsl
pop
idiv
inc
aaa
dec
dec
cs
push
insb
xor
add
daa
test
cli
mov
orb
mov
icebp
jnp
pusha
sbb
jo
xlat
cmp
or
mov
mov
mov
test
pop
divl
mov
popf
es
pop
xor
jnp
and
sbb
cmp
ror
mov
xchg
push
stos
or
add
mov
mov
popf
or
das
scas
outsb
xchg
sub
call
mov
xor
cmp
push
pop
dec
xchg
sub
xor
in
cmp
jmp
cmp
les
dec
mov
sti
ret
mov
cmp
xchg
jmp
jb
inc
nop
and
xchg
cmp
loopne
and
push
xchg
clc
jecxz
mov
scas
push
jmp
iret
jmp
or
rolb
aad
int
lods
mov
xor
fcoml
out
push
jno
xor
mov
jne
sahf
mov
pop
call
loop
pop
xchg
sub
xchg
jns
adc
xor
repz
or
jne
xchg
sbb
xchg
mov
arpl
push
orl
fimuls
in
out
jnp
adcl
cmpsl
mov
popf
jg
arpl
fs
fstl
mov
or
mov
mov
add
lods
dec
mov
pop
xor
insw
les
orb
xchg
adc
cwtl
test
dec
mov
mov
jle
int3
stos
xchg
push
nop
imul
sub
dec
icebp
out
mov
xor
dec
fwait
test
lods
jno
sbb
cmp
loope
fists
push
leave
adc
jne
ss
xchg
jbe
lea
test
inc
xchg
out
in
mov
cmp
inc
fyl2x
xor
cmpsl
mov
adc
addr16
testb
cmp
lods
jle
clc
lock
aaa
xor
pushf
xchg
clc
cmc
jmp
mov
or
enter
mov
cmp
call
stos
sbb
xchg
xor
sbb
and
sub
push
cltd
nop
daa
fstl
jmp
aaa
sbb
add
push
push
imul
push
orl
repz
add
repnz
inc
sbb
push
enter
rcrl
les
loop
movsl
cmpxchg
sarl
leave
movsb
jmp
lcall
imul
negb
in
dec
cmp
sub
pop
xchg
mov
sbb
xchg
sbb
push
mov
inc
push
add
fs
fisttpl
inc
xchg
jmp
in
je
icebp
enter
xchg
dec
push
hlt
mov
jns
mov
xchg
mov
ret
fistps
fnstsw
pop
pop
pusha
jb
test
popf
mov
xor
arpl
mov
adc
and
shr
and
or
xchg
popf
mov
mov
push
jmp
add
add
push
fsubrl
push
push
add
mov
shll
cli
iret
push
insb
call
fidivs
out
jno
mov
outsb
add
sub
imul
sqrtps
xorb
sub
mov
arpl
outsb
adc
and
inc
flds
mov
iret
jb
test
xchg
xor
test
mov
lret
dec
mov
inc
add
out
adc
jnp
call
xor
sub
arpl
in
add
sbb
xor
outsl
jg
or
shr
mov
dec
mov
mov
fs
out
pop
xchg
hlt
js
stos
mov
out
iret
push
int3
js
or
or
mov
dec
das
iret
cmpsb
dec
mov
loope
xor
fwait
xchg
sub
andb
imul
in
ror
sbb
pop
push
test
shll
lock
mov
dec
cli
lret
das
sub
mov
sub
int3
dec
in
aaa
mov
mov
into
jl
lret
push
pop
rolb
mov
push
add
sub
lods
mov
inc
andl
pop
jle
pop
test
jle
clc
std
cmpsb
cmp
cwtl
sahf
pop
mov
cmp
lcall
fdivs
mov
movb
stos
aam
xchg
xor
adc
inc
push
js
push
fcomp
cli
xor
test
and
xor
jl
pop
cmp
sbbl
xchg
push
mov
clc
addr16
sbb
lret
call
call
add
add
mov
sbb
fwait
pusha
cltd
dec
clc
xchg
xchg
testb
fidivrl
cmpsb
xchg
aas
cmp
jne
add
pop
mov
dec
cmpsb
in
pop
sub
shrb
shlb
fdecstp
sbb
dec
outsb
in
stos
adc
push
add
push
fwait
xlat
mov
mov
bound
notl
repz
adc
test
xchg
jle
dec
push
imul
xor
mov
out
test
addr16
xor
push
addb
mov
inc
out
lcall
jae
push
or
aaa
jp
mov
pop
fisttpll
or
daa
sahf
sub
pop
jmp
mov
into
mov
iret
test
insb
mov
loop
pop
xchg
jbe
clc
inc
lds
cmp
cmp
mov
unpcklps
loope
mov
shrl
repnz
testb
mov
out
add
or
or
repnz
lods
and
sti
jns
xor
xchg
mov
cltd
jno
or
addr16
xchg
xchg
mov
adc
adc
stos
shrl
iret
shll
mov
cmpsl
test
mov
jne
repnz
dec
ds
addl
cltd
lahf
sbb
mov
addr16
inc
cltd
imul
lcall
and
lea
push
mov
dec
dec
adc
mov
dec
adc
xchg
and
jns
je
push
xor
lahf
mov
cltd
and
mov
call
pop
pop
and
mov
int
js
pop
mov
dec
adc
jl
notb
jmp
pop
or
daa
addr16
pushf
popa
rcrb
add
int3
hlt
dec
xchg
shrb
push
aam
rcrb
sbb
rcl
xbegin
inc
fcompl
subl
push
xor
ljmp
push
ret
mov
inc
iret
jb
add
push
inc
sahf
or
sti
dec
fimuls
lods
mul
icebp
dec
pushf
add
out
sbb
add
xor
ficompl
adc
pop
lcall
rolb
xchg
cld
pop
or
mov
pop
xor
jmp
xchg
jg
ret
mov
jp
push
and
data16
cmp
mov
sbb
jb
add
ret
cmc
pop
jne
mov
pop
cmpb
push
lcall
add
insb
xchg
enter
pop
flds
nop
repnz
pop
lock
xchg
es
mov
ja
mov
clc
fnsave
and
jp
lahf
push
mov
test
test
aad
cmp
sub
jbe
pusha
test
dec
jle
pop
cli
push
cmpsb
pushf
scas
jb
movsl
sbb
fdivl
sahf
sbb
xor
inc
popa
fdivl
out
orl
push
stc
jp
cmp
pop
xchg
daa
loop
movsb
or
jae
in
cmpsl
jne
mov
jo
sahf
mov
cmp
cs
add
scas
and
lea
fcoml
fwait
test
sbb
cld
xchg
imul
sub
and
pop
mov
repz
adc
int
shlb
daa
inc
xchg
mov
out
pusha
lds
cmpsl
out
dec
stc
cmp
out
sbb
inc
fistl
jp
mov
dec
adc
pusha
xor
cmp
aas
mov
dec
sub
shlb
push
xchg
shl
test
sbb
loop
movsb
cs
add
cmc
xchg
sbbl
add
sar
fistps
fmull
idivl
loop
fcom
push
js
push
xor
negl
fisttps
pop
icebp
xlat
enter
stc
js
mov
lods
popf
xor
cmp
jmp
clc
dec
mov
xchg
pop
scas
enter
inc
gs
fsts
movsl
push
bnd
jmp
pop
mov
dec
dec
test
inc
add
sub
insl
sbb
int3
shlb
sbb
or
movsb
cmp
mov
push
cli
and
sbb
mov
stos
mov
mov
loopne
pop
sub
movsb
rorb
stc
mov
pop
xchg
sbb
sbb
push
fs
jne
adc
enter
sbb
adc
xchg
xor
pushf
dec
movsb
inc
ficoms
lcall
loopne
push
push
or
and
icebp
cltd
xor
push
cmp
inc
jo
scas
mov
mov
icebp
shll
mov
adc
enter
dec
push
mov
lds
dec
adc
push
mov
sbb
xor
sbb
pop
mov
leave
push
inc
push
mov
addr16
lock
bound
leave
repz
push
jno
inc
je
cmp
out
push
push
outsb
psllq
call
mov
arpl
and
flds
lods
in
mov
out
inc
push
in
rcrb
xor
push
xchg
imul
fs
cmpsl
xor
movsl
daa
ljmp
jle
cmp
xor
fwait
inc
jecxz
sahf
cmp
sbb
out
arpl
hlt
push
in
dec
lret
mov
mov
sub
adc
jge
push
scas
jb
sbb
jno
out
cli
xchg
fnstsw
jmp
scas
cli
cmp
mov
shll
loop
add
adc
xor
dec
daa
mov
jbe
xor
mov
fisubl
lret
ss
xchg
mov
mov
pop
cltd
xchg
inc
movsl
dec
fiaddl
movsb
arpl
sbb
jno
out
inc
pop
push
insl
clc
pop
and
cmp
pop
arpl
imul
pop
mov
negb
push
ffreep
cmp
mov
shll
pop
lret
jge
push
sub
loopne
cltd
push
test
enter
bound
incl
xor
lahf
cld
lret
imul
rdtsc
adc
push
pop
push
sub
test
pusha
test
mov
push
fcomi
jp
sub
jg
mov
and
lods
fistpll
int
push
jmp
cmpsb
dec
push
shlb
out
add
mov
pushf
jecxz
mov
jg
mov
fbstp
ljmp
xchg
adc
pop
aam
rorl
mov
cltd
icebp
repnz
pop
and
jecxz
gs
xchg
cli
inc
mov
jns
mov
add
mov
fldenv
dec
hlt
mov
dec
data16
jl
push
hlt
lds
xchg
xorl
ja
mov
test
lods
es
jp
push
push
add
dec
movsl
bsr
mov
enter
enter
bound
add
push
test
popf
in
jnp
cltd
xor
mov
and
cltd
lds
ret
fdivr
jecxz
enterw
mov
push
notb
pop
inc
pusha
pop
sbb
adc
arpl
mov
sbb
pop
xor
jns
mov
clc
repz
lock
mov
and
push
in
inc
push
dec
push
adc
mov
lds
inc
dec
mov
loope
daa
mov
mov
mov
mov
outsl
sub
addr16
lret
arpl
popa
or
incb
or
or
cmp
cwtl
xor
mov
push
push
sbb
jp
lret
cltd
cmp
xlat
push
insb
add
jo
rcrb
scas
pop
lea
ja
jbe
aam
pop
fisubrl
and
cmc
ljmp
jne
adc
pop
fstpt
rcl
jne
loop
push
pop
and
sbb
fs
push
mov
sub
mov
rolb
sbb
push
jmp
ds
pop
insl
out
pop
pusha
mov
daa
pop
jno
jns
xchg
scas
sbb
sbb
sti
in
add
mov
mov
movsl
sub
pushf
test
rcrl
and
test
cmp
rcl
aaa
lret
jmp
inc
enter
int3
jmp
sub
icebp
fwait
mov
pop
add
daa
notl
inc
inc
xlat
jne
vpsadbw
enter
stc
push
inc
js
cmp
push
push
movsb
fsubs
cs
sub
jns
aas
leave
cmpsl
jbe
fldt
cmp
rcll
or
imul
mov
fadds
cwtl
or
xchg
inc
cs
cmp
gs
xchg
xor
adc
push
jp
push
fs
int
adc
sub
arpl
add
lsl
mov
loope
lret
int
jo
fs
bound
jmp
push
shl
mov
gs
sub
xor
inc
ljmp
addr16
cltd
dec
nopl
xchg
outsb
ja
cmpsb
out
stos
xchg
popf
mov
add
adc
sub
int
and
xorb
fnstenv
icebp
inc
popa
fstps
push
mov
adc
in
jbe
xchg
fistpll
movsb
in
inc
pop
mov
jmp
paddusb
clc
sbb
fsubs
xor
and
pop
pushf
enter
mov
jnp
insl
lret
in
add
jno
add
cmp
fstps
push
xchg
call
pop
pop
arpl
inc
fidivrl
xchg
jne
and
cltd
inc
incb
gs
fcmove
xchg
inc
sub
andl
ror
into
mov
gs
mov
or
jno
test
outsb
pop
and
test
xor
xor
lahf
xor
scas
mov
xchg
test
shll
push
shlb
pop
push
add
push
inc
scas
pushl
lahf
repz
xchg
dec
xlat
jne
pop
shrb
jl
dec
push
hlt
mov
push
imul
in
push
arpl
movd
xchg
push
pop
mov
adc
dec
and
xchg
cmp
sti
hlt
nop
cmp
in
fcmovnbe
hlt
mov
cmp
outsl
push
fwait
xor
xor
insb
inc
notb
push
rcrl
hlt
enter
mov
mov
add
or
nop
notb
jbe
cmp
sahf
test
and
xor
jp
adc
lock
mov
cmc
stos
cmp
sub
into
dec
pop
add
int
hlt
inc
sahf
clc
in
jno
jnp
mov
sub
loop
js
test
shrl
or
out
test
ret
or
divb
jnp
std
sub
add
lds
imul
mov
pop
out
xchg
pop
mov
sub
xchg
mov
add
popf
jno
xchg
out
xlat
pop
lldt
xor
fidivs
xor
and
sbb
mov
jmp
aam
sub
pushf
add
call
ret
les
push
es
xchg
and
cmc
scas
push
inc
push
cmp
push
cmc
outsl
enter
pop
aam
add
repnz
sbb
sbbl
xor
nop
pop
in
lods
fdivrp
add
push
cmc
ljmp
xor
add
iret
jl
jne
jmp
adc
dec
lahf
add
cmp
popa
cmpl
fs
les
dec
adc
int
int3
push
daa
pop
xchg
mov
adc
mov
adc
cltd
pop
pop
ret
mov
push
xlat
adc
fcoms
jecxz
cmp
inc
mov
push
dec
cmp
loop
mov
repnz
rcr
leave
jns
cmpsl
adc
xchg
jmp
icebp
cmp
adc
jecxz
popa
pop
mov
and
pop
jne
das
ret
pop
in
mov
jno
pop
lcall
pop
adc
mov
divl
sbb
lret
dec
cmpsb
in
xchg
fisttpll
movsl
shll
dec
loopne
les
stos
or
enter
push
xor
stos
inc
insb
je
lahf
roll
fcmove
xor
outsb
lock
push
scas
inc
xchg
mov
aad
je
iret
dec
mov
jl
push
sub
push
mov
dec
and
test
inc
fisubl
add
inc
test
pop
add
repz
cmp
jle
sub
fnsave
out
mov
aam
inc
sahf
pop
cmp
xor
addr16
orb
mov
push
in
pop
sbb
shlb
fdivs
ds
stos
popf
fmuls
out
jge
stos
inc
sub
sub
je
xchg
cmpsb
filds
test
loop
adc
dec
test
or
cmp
adc
dec
mov
lds
and
fcompl
out
xor
push
add
insl
cmc
and
or
cmpsl
mov
fldl2e
mov
ret
out
lock
sub
insl
xor
mov
push
mov
and
pop
pop
pop
xchg
jae
je
shrl
and
inc
shll
inc
add
cwtl
cs
dec
mov
sbb
xchg
cmp
add
mov
mov
out
mov
push
cmp
adc
adc
fildll
pop
xor
and
sahf
out
testb
ds
das
inc
sti
push
adc
mov
pusha
push
sub
sub
cld
enter
mov
inc
cmpsl
pop
stos
insl
push
insb
sub
mov
stc
jae
inc
and
adc
sbb
push
loopne
popf
xchg
xor
jp
loop
sub
cmp
shlb
pushf
xchg
dec
iret
mov
xor
pop
les
inc
inc
repz
jbe,pt
test
pop
mov
movsl
dec
mov
aam
xor
mov
jbe
xor
bnd
arpl
jecxz
bswap
lret
mov
dec
xchg
dec
jmp
cmp
mov
addl
sahf
xor
je
push
jl
inc
jnp
aam
test
out
mov
add
xor
mov
pop
jge
cmp
pop
mov
cmp
sbb
aas
cltd
xor
or
sub
enter
scas
sbbb
sahf
pop
js
mov
xchg
push
xchg
mov
iret
xchg
std
and
arpl
idivb
mov
stos
outsl
cmpsb
movsl
add
dec
mov
xor
nop
mov
out
mov
adc
mov
out
jbe
sbb
and
cmp
test
fnstcw
sbb
mov
mov
fwait
add
popf
stos
das
push
cwtl
outsb
lret
jbe
out
xchg
sbb
lret
cmpsb
mov
pop
dec
testb
xor
out
aaa
cmc
lods
adc
repz
icebp
adc
xor
in
pop
mov
jns
push
xchg
mulb
mov
out
repz
enter
add
jnp
addr16
sbb
dec
jne
sbb
addr16
cwtl
inc
mov
inc
unpcklps
arpl
jl
lock
mov
push
cmp
and
arpl
and
mov
leave
push
or
xchg
lret
fcmove
test
std
fcoms
cmp
jb
popf
clc
bound
sub
popf
repnz
dec
jne
push
xor
outsb
mov
pop
sub
xchg
je
test
jae
mov
jge
sti
jg
sti
xchg
mov
pop
jae
lret
mov
mov
ret
push
mov
pop
push
pop
sub
nop
push
imul
add
shll
xchg
loope
call
dec
loop
repz
cmc
pop
daa
fcoms
int3
das
pop
inc
fwait
mov
dec
ss
jl
jmp
stos
jno
mov
and
js
insl
outsb
fs
adc
add
mov
shld
icebp
xor
xchg
imul
clc
aam
out
mov
test
shrl
mov
mov
add
lock
mov
cmpsl
not
jo
cmpsb
jl
or
imul
stc
les
xchg
xor
sbb
lods
iret
mov
cs
cmp
sbb
in
mov
inc
pop
jno
push
jnp
mov
or
fstpl
mov
frstor
xor
jle
mov
jge
nop
and
popf
xchg
test
mov
mov
jns
movb
scas
clc
sahf
sub
add
ret
iret
loope
mov
cs
leave
repnz
out
ret
mov
popf
arpl
cmp
mov
out
push
cmp
xchg
es
or
sarb
fwait
xchg
int3
pop
xchg
popa
int
push
hlt
jnp
cli
xchg
loop
mov
sahf
out
aad
mov
les
xchg
test
jp
insl
pop
push
cmpsl
in
push
cmp
mov
cmc
adc
jo
or
push
scas
imul
lods
mov
jae
cwtl
or
jmp
fldcw
mov
adc
lods
loopne
test
and
inc
add
outsl
push
scas
xchg
or
and
mov
sahf
xchg
jecxz
mov
cwtl
repnz
xor
pop
xchg
inc
ficoms
idivl
mov
jo
les
imul
xchg
sti
outsb
sbb
jnp
cmpsl
sbb
mov
xlat
jo
push
loop
or
adc
jno
aad
out
and
mov
scas
inc
data16
pop
xchg
leave
mov
aam
or
mov
je
stos
jge
xchg
dec
dec
xor
and
ds
aam
test
push
cmc
dec
mov
mov
rol
loop
test
dec
jne
daa
data16
mov
movsb
inc
mov
pusha
test
jmp
sbb
repz
call
int3
mov
xor
adc
imul
test
xchg
lcall
pusha
adc
test
ds
shrb
mov
push
sbb
adc
outsb
inc
in
jmp
xchg
call
or
mov
lock
js
jl
subl
aas
std
mov
xor
ret
xchg
gs
cltd
popa
xorl
mov
aaa
xchg
ds
mov
stos
pop
and
addr16
lret
loope
jmp
into
push
inc
shlb
or
xor
paddw
ret
pop
adc
dec
nop
das
jbe
outsl
or
rol
push
jno
inc
out
iret
mov
mov
mov
mov
pop
cmp
xchg
mov
daa
xor
fldl
das
cmp
cs
sub
inc
pop
cwtl
jbe
lea
adc
fstpt
jl
leave
push
test
enter
int3
lret
pop
mov
ljmp
inc
push
ljmp
dec
cli
or
cmpsb
cmp
mov
jg
pop
mov
cmp
outsb
shll
cmp
les
nop
mov
mov
in
dec
sbb
and
gs
push
rclb
inc
and
jne
inc
inc
push
ds
xor
cmc
jo
out
es
and
fs
inc
ficompl
dec
cmp
sub
sti
and
inc
stos
leave
inc
andb
sbb
mov
dec
lea
fcoms
cltd
sbb
cwtl
xchg
jnp
mov
mov
or
cmp
mov
cwtl
cltd
out
stos
call
fbstp
mov
std
subl
adc
sbb
adc
mov
inc
popa
movsb
dec
fmull
inc
xlat
je
fistpll
push
mov
out
in
out
mov
push
dec
lret
cmp
fnstenv
xor
scas
adcb
pop
and
iret
cmp
popf
inc
aaa
cmp
int3
fnstsw
call
mov
loop
div
or
pop
imul
sbb
sbb
aam
vxorps
lock
frstpm(287
insl
mov
push
jne,pt
xchg
jg
sub
adc
test
mov
pop
xchg
add
inc
test
add
mov
jae
dec
out
cli
clc
jo
jmp
daa
mov
or
int3
jbe
mov
lods
js
pop
xor
in
shll
mov
mov
stos
mov
fildll
cli
ljmp
fdivrl
addr16
mov
pop
neg
je
inc
jge
dec
sub
fidivl
stc
sub
push
xlat
popa
sbb
int
sub
loop
push
test
enter
or
jns
xchg
testb
sub
leave
or
mov
jo
or
movb
cmpsb
cmp
pop
out
dec
sbb
sub
sbb
pusha
inc
int3
xor
add
jne
cld
cmp
push
xor
push
xchg
mov
jl
sbb
lret
clc
pop
lea
hlt
in
mov
inc
test
repz
push
stc
fidivs
repnz
push
push
xorl
mov
mov
mov
push
stc
lods
inc
xchg
nop
pop
mov
btr
and
mov
sub
fmul
imul
scas
in
cwtl
jle
or
in
cld
xor
pop
push
aaa
and
inc
or
cmp
inc
cmpsb
dec
push
and
sbb
add
popf
shlb
test
xchg
jl
test
xchg
lods
jne
mov
dec
add
mov
adc
add
fnstcw
idivb
ja
push
lret
into
ljmp
fdivl
mov
iret
jecxz
jnp
test
cmp
lock
int
mov
scas
add
mov
mov
sub
push
cmc
insb
jecxz
dec
pop
adc
gs
les
adc
fsubl
outsl
call
aad
adc
jae
in
sub
fisubl
jg
mov
js
int3
scas
dec
and
push
fstpt
push
mov
or
cmpsb
outsb
stc
xorb
pushf
inc
inc
push
push
xchg
data16
leave
xor
lds
ljmp
fmuls
xor
sbb
data16
jnp
es
cmp
jns
sub
sbb
cmp
xchg
lock
loop
cmp
add
push
scas
push
stos
mov
int
stc
cmpsb
movsb
sbb
ljmp
jmp
ss
mov
adc
xchg
mov
stc
push
cmpsl
fisttps
dec
out
stos
inc
loopne
nop
stos
cmpsl
inc
dec
dec
lock
loop
movsl
cmp
mov
mulb
dec
out
out
int3
fcomp
cmp
xchg
mov
lcall
out
pop
scas
sbb
inc
lret
fsubs
xlat
and
pushw
int
and
jbe
pop
and
leave
sbb
pop
dec
push
jg
test
test
or
outsb
sti
or
push
jmp
loopne
mov
add
ret
imul
movups
ds
jmp
mov
mov
mov
shl
and
fadds
cmpsl
mov
andl
pop
and
aad
fwait
dec
pop
cli
rcrl
add
dec
std
lock
mov
dec
push
or
xor
mov
in
sub
sub
hlt
or
mov
rcll
mov
iret
mov
pop
fiaddl
pop
cmp
xlat
mov
dec
cmp
add
mov
fimuls
cmp
sbb
arpl
lods
leave
movsb
jbe
repz
aas
bound
int
clc
lret
outsb
out
int
mov
mov
les
shrb
adc
jecxz
jno
pop
arpl
push
mov
add
cs
sbb
mov
lods
mov
cwtl
inc
out
pop
sub
mov
icebp
shll
or
fadds
out
shlb
ljmp
sbb
lock
repnz
mov
cmpsl
or
mov
xor
fstpl
hlt
mov
int3
jle
shl
lahf
push
ljmp
jno
rolb
rcrl
sbb
cmp
mov
mov
outsl
movsl
jmp
cmp
add
and
pop
mov
cmp
push
mov
inc
add
push
xor
scas
add
stos
inc
xchg
sub
int3
xchg
mov
ss
ret
pop
pop
jl
leave
push
xchg
push
xor
xchg
into
inc
mov
cltd
fs
xsavec
fsubrs
rcll
push
xor
xor
movsb
shrl
leave
inc
loope
push
ret
repz
ds
inc
jg
std
in
out
stos
pop
and
xchg
jne
ja
adc
jnp
xor
int
leave
ffree
por
xor
gs
mov
ds
push
fcoms
ss
sti
push
jne
lahf
int3
adc
int
cld
das
insb
mov
pushf
in
dec
in
inc
fstpl
jo
push
add
sbb
push
outsl
jnp
sti
mov
xor
inc
hlt
mov
cmpsl
mov
fbstp
sub
inc
mov
adc
loop
sub
cmp
mov
jp
lds
bound
sub
push
sbb
inc
insb
sub
sbb
push
dec
loope
movsl
or
dec
dec
jl,pt
push
ja
cmp
sbb
mov
mov
and
nop
push
popf
push
mov
neg
out
aam
or
inc
xchg
xchg
mov
xor
shrl
lahf
mov
fisubrl
or
bound
dec
iret
push
fwait
jbe
imul
xchg
cmp
fs
lahf
test
shll
pop
ret
outsl
mov
mov
mov
add
mov
adc
test
in
mov
xchg
ljmp
insb
shll
mov
and
jno
rolb
sub
gs
and
das
mov
inc
mov
in
dec
and
mov
fldenv
jns
dec
mov
xchg
lock
sbb
push
lods
out
mov
std
jmp
adc
outsb
xchg
jno
adc
enter
push
mov
push
sbb
test
ret
sub
inc
mov
gs
and
and
xchg
cli
roll
bound
cmpsl
sub
in
cmp
add
jns
clc
clc
push
push
sbb
dec
jecxz
pushf
hlt
addr16
filds
mov
or
lock
addr16
int
pop
xor
shrl
sub
rolb
das
sahf
sbb
imul
ja
fcoml
cltd
mov
insl
hlt
adcl
mov
mov
js
jl
fmuls
stos
fcoms
adc
adc
ret
neg
movsb
lock
jg
daa
mov
nop
cld
lret
popf
push
rcll
sbb
cs
adc
xchg
add
mov
stc
push
movsb
mov
out
pop
popl
xchg
push
stos
or
mov
bound
ja
shlb
dec
add
stc
ljmp
ljmp
inc
sub
shrl
cld
cwtl
and
xchg
ret
inc
xchg
cmp
jge
fmuls
lods
and
sub
sti
ds
sub
cmp
xchg
and
sbb
sub
jmp
imul
addr16
dec
inc
inc
mov
push
cmpsl
push
jl
adc
aaa
add
and
stos
and
sti
adc
arpl
sbb
mov
jle
imul
je
shll
mov
mov
lds
es
dec
iret
and
mov
push
dec
pop
cli
inc
pop
loopne
lea
adc
daa
inc
lock
cltd
push
sub
ljmp
pop
lds
cmp
jo
mov
aad
push
jno
adc
sbb
mov
fsubrl
mov
mov
or
xchg
pop
rorl
adc
std
das
add
sahf
lds
into
outsl
je
addb
rorb
mov
xor
cmp
int
aas
push
jg
das
fdivr
sub
test
xchg
dec
add
cmp
xor
shrl
rcrb
aad
shr
mov
push
out
and
inc
sti
aad
ss
jno
jo
in
mov
sub
fldcw
into
lods
inc
add
lret
xor
fwait
inc
test
lret
jnp
in
mov
gs
scas
and
jl
mov
nop
repz
scas
dec
in
jp
mov
sahf
cmpl
xor
imul
filds
ret
jp
sarb
aad
lds
mov
out
rcrl
mov
mov
dec
into
sbb
loopne
cmp
les
pop
in
pop
repz
call
push
push
pop
add
daa
loope
push
push
sub
aaa
lcall
pop
js
lret
insl
repz
jne
aad
clc
mov
adc
push
lock
jmp
scas
mov
mov
lret
cwtl
ret
dec
cltd
ja
xor
ficoms
mov
mov
imul
movb
dec
fidivl
mov
xor
test
inc
xchg
lock
xchg
mov
mov
add
jl
and
fsts
in
and
ja
mov
scas
rcrl
adc
sbb
ffreep
in
cmp
cmc
add
mov
mov
call
inc
sub
ret
xor
out
dec
dec
sub
mov
rol
and
pop
mov
lds
hlt
and
jb
inc
std
jns
aad
lcall
jg
sub
mov
clc
and
fimuls
xchg
sbb
sbb
sub
popf
jnp
fwait
jecxz
and
std
sbb
std
cmp
jmp
or
and
xchg
xor
orl
add
imul
pop
ss
test
dec
lea
jb
insl
loop
jecxz
lcall
or
push
fnstcw
jno
leave
aaa
ret
push
gs
aas
sub
or
adc
divl
mov
mov
mov
icebp
mov
cmpsl
pop
call
cmp
inc
popf
or
jo
mov
lock
enter
shr
pop
out
fdivl
push
ffree
pop
mov
sub
pop
loopne
bound
bound
cwtl
xor
aad
jns
div
and
dec
pop
shr
rcl
mov
cld
mov
loope
adc
dec
or
pop
out
out
sbb
mov
jg
push
fcoms
mov
jle
scas
sbbl
daa
sub
pop
fwait
mov
xor
pop
push
add
test
or
cmp
jmp
inc
shll
and
or
pusha
out
jno
and
add
cli
pop
and
adc
arpl
mov
sbb
dec
jo
cld
mov
aad
cmp
int
cmp
ja
jbe
stc
inc
popa
sub
cwtl
pop
sbb
xor
jp
insb
sarb
scas
stc
test
adc
mov
dec
test
inc
push
in
lgs
in
ret
push
xchg
pop
enter
shlb
fildl
outsb
xlat
test
pop
ds
fdivl
sub
fidivrs
arpl
imul
xlat
xor
xor
mov
pop
dec
push
popf
and
and
sahf
ss
lock
xor
shlb
push
mov
push
shl
and
mov
push
jecxz
push
mov
shlb
ja
insl
test
aas
test
add
inc
and
repnz
js
mov
ret
outsl
arpl
sbb
push
movsb
movb
je
and
cmp
int
call
insb
inc
push
cltd
imul
mov
lcall
lcall
inc
push
inc
movsl
sbb
sti
add
in
jmp
lret
xor
pushf
pop
inc
gs
mov
cwtl
push
shll
adc
pop
into
enter
sub
sbb
add
rcl
sub
rclb
ret
xor
div
outsb
lods
ljmp
dec
arpl
sub
insl
jb
jl
lret
lahf
sti
lds
pop
xchg
scas
adc
out
dec
insb
jbe
pusha
daa
mov
andl
xchg
mov
jnp
cmp
shrb
rorb
notb
scas
fcmovnbe
rclb
out
clc
movb
test
ret
lret
adc
daa
xchg
into
iret
fs
mov
jae
jbe,pt
repz
adc
mov
mov
push
test
mov
dec
std
mov
inc
movsb
push
outsl
push
mov
sub
or
daa
inc
push
mov
pushf
pop
jnp
mov
rcrb
dec
or
xchg
fimull
sbb
daa
cs
jnp
sahf
pop
sub
xchg
add
out
pushf
pop
mov
insl
jge
testl
cmpsl
ret
xchg
stc
inc
sub
scas
dec
push
sbb
lock
gs
adc
lret
xchg
jns
xchg
imul
xor
sub
push
sbb
jmp
or
and
mov
stc
xchg
je
xor
xlat
xor
pushf
xor
adc
push
sarb
ja
insl
push
mov
jae
mov
jl
and
call
inc
xor
add
lods
outsl
test
push
imul
pop
push
call
imul
cmp
out
dec
aas
out
xchg
aaa
pushf
pop
add
xchg
test
xor
lret
xchg
in
lock
outsb
sub
aad
mov
decl
cmpsl
enter
movsl
int3
jg
mov
add
sbb
mov
not
xlat
movb
push
push
leave
add
mov
loopne
inc
adc
cmpsb
addl
sbb
mov
int3
sbb
insb
pop
in
cmc
mov
out
int
vpaddq
repnz
adc
wbinvd
repz
icebp
sbb
leave
cmp
clc
cs
mov
pop
cwtl
jl
xchg
mov
sub
daa
sub
test
pop
dec
mov
dec
sbb
iret
jecxz
imul
insb
add
mov
sub
movsb
ficoms
pop
ljmp
inc
movsb
adc
pop
das
sub
pop
repnz
insl
adc
shrb
dec
insl
mov
mov
fcomps
stos
popf
xor
pop
scas
inc
jbe
cmp
call
imulb
inc
aam
pushl
mov
lahf
or
dec
in
cltd
movsl
xchg
lock
jb
pop
movsb
daa
cmpsb
push
xor
fisttps
aaa
mov
movsb
mov
lret
bound
push
ljmp
aas
and
ja
inc
cltd
test
and
push
push
mov
or
jae
das
jmp
xorb
and
aam
rep
addb
nop
mov
dec
pop
mov
cmpsl
inc
sub
mov
xchg
pop
int
cli
xchg
int3
push
add
push
sub
in
test
cmpsl
or
pop
inc
hlt
inc
cli
fs
mov
imul
popa
add
xor
push
inc
mov
popa
lahf
ds
test
ss
inc
mov
or
aam
int3
pop
idivl
rorl
sub
xor
mov
jmp
adc
aaa
stos
mov
dec
adc
lods
push
pop
imull
xlat
js
jnp
jnp
out
sub
jne
fs
pop
andb
or
mov
mov
int3
aaa
mov
mov
jl
jl
ja
mov
decb
sub
lret
add
push
jns
and
adc
dec
sub
mov
out
mov
aad
shlb
loope
pop
cmp
aaa
int
push
or
into
cltd
dec
xchg
pop
lret
mov
push
jne
lock
sarl
lcall
jbe
sub
cmp
or
cmp
pop
mov
imul
rorl
lret
es
mov
xor
xchg
add
test
mov
push
sub
add
outsl
sarb
inc
sbb
pop
scas
push
decl
fcomip
sub
scas
inc
cmp
jns
sbb
je
dec
sub
loope
aas
setne
push
dec
mov
dec
jmp
jl
ljmp
jbe
sbb
or
jecxz
insl
cmp
pop
jo
mov
shr
nop
daa
aam
xorb
pop
sbb
adc
pusha
mull
repnz
rcl
sub
je
jg
sub
aam
jb
cmp
push
add
hlt
cmpsl
push
fs
std
mov
into
nopl
arpl
setp
cmp
pop
pop
cmp
repz
cmp
dec
iret
bound
pminsw
loopne
or
jae
data16
imul
ljmp
aas
jl
insb
jg
sahf
dec
nop
dec
dec
inc
ret
jge
sbb
sahf
inc
jb
in
out
sub
jbe
inc
into
sbb
imul
leave
jne
or
cmp
and
addr16
andb
data16
jnp
pop
and
ds
fidivs
cmc
fnstsw
gs
dec
aaa
pop
dec
rcrl
mov
jmp
cmp
and
add
mov
popa
stc
test
data16
lret
dec
jae
sbb
ret
lock
mov
mov
out
jl
push
mov
decb
jg
fmull
push
mov
mov
pop
xor
in
inc
lods
sbbb
push
xchg
add
test
movb
pop
xlat
push
fnsave
std
lods
cmpsb
push
inc
aas
repz
sti
shrl
rcr
dec
push
mov
jecxz
sbb
cmp
and
or
jbe
stos
mov
xchg
adc
popf
in
or
ds
rorl
lret
test
inc
jle
pop
mov
ret
pop
pusha
pop
aas
mov
loope
push
rcrb
stc
pop
outsb
sub
mov
ljmp
hlt
bswap
sarl
inc
rcr
xor
dec
ror
push
pusha
int
xor
cmpsb
pop
lods
mov
outsb
insl
sub
addr16
hlt
js
outsb
mov
sbb
adc
xchg
pop
scas
inc
xchg
dec
imull
dec
mov
popa
mov
icebp
outsl
or
cmp
ljmp
cwtl
push
mov
and
mov
iret
lahf
testl
jle
jno
sbb
push
jge
dec
ret
outsb
sbb
lahf
in
outsb
mov
div
push
fldenv
mov
mov
imul
mov
test
aas
pop
dec
lock
sub
shl
mov
cmc
in
daa
add
comiss
xchg
jmp
mov
or
jns
mov
add
xor
inc
cmp
lods
mov
out
dec
pop
arpl
mov
lods
inc
rorb
icebp
inc
aas
push
sbbl
add
adc
ss
add
loope
rcll
jmp
aaa
scas
daa
jl
xlat
leave
push
or
sub
mov
call
cmp
lret
daa
lcall
adc
mov
cmp
outsb
xchg
or
das
pop
in
or
or
lahf
std
xor
rcl
add
push
or
leave
mov
aam
fsubr
push
std
cmp
repnz
popa
call
mov
pop
or
mov
arpl
dec
in
aas
stc
push
sahf
in
or
test
clc
in
cmp
and
inc
fwait
pop
inc
mov
rol
inc
pop
daa
std
aaa
imul
cli
add
aas
mov
add
or
repnz
mov
fiaddl
pop
dec
pop
out
push
into
xchg
or
dec
mov
pop
in
rol
pop
gs
in
loop
cmp
negl
fwait
dec
mov
aam
or
ret
cmp
dec
fisttps
fmulp
es
pop
lock
std
shrb
lea
ret
push
xchg
std
mov
arpl
or
rorl
lock
insb
inc
sti
push
imul
mov
and
jg
xchg
mov
mov
int
inc
jp
fiadds
xor
pushf
xor
adc
or
movsb
cmp
mov
lcall
jb
scas
and
cld
jns
jl
pop
adc
les
test
inc
scas
xor
jp
imul
lcall
insl
roll
rcrb
xchg
cmp
imul
mov
pop
xor
dec
push
insb
rcl
rorb
xor
imul
sbb
push
std
xchg
jbe
xchg
sti
call
mov
lret
gs
mov
adcb
jle
or
push
xchg
std
xor
cltd
inc
stos
lock
test
enter
aad
rol
pop
mov
je
push
sbb
and
test
push
mov
mov
and
add
leave
sub
in
stc
mov
dec
leave
pusha
push
mov
out
push
sub
int3
xor
xchg
ss
mov
inc
jmp
xchg
lods
popf
call
scas
cmp
fimull
add
sub
ret
xchg
add
in
xor
jo
popf
cs
enter
add
cmp
loope
dec
sbb
popa
cltd
jns
mov
mov
andb
and
leave
sbb
push
fwait
mov
in
pop
sbb
std
dec
icebp
adc
shlb
aam
ss
lcall
sbb
sub
pop
repz
or
iret
nop
ss
test
jge
sub
ja
int
lods
add
pusha
fstl
je
bound
mov
inc
lock
push
mov
data16
sbb
mov
fcoms
xor
pushf
mov
out
or
and
push
xor
adc
jmp
push
test
jmp
cmp
jecxz
jae
pop
enter
jb
jmp
imul
sbbb
mov
xor
adcl
scas
mov
loopne
aad
stos
push
shll
mov
pushf
sub
sub
imul
imul
mov
push
int
mov
dec
or
and
inc
dec
addl
push
outsb
lock
jmp
dec
test
mov
dec
movsl
cmp
aad
fcomps
lahf
lahf
sbb
inc
rolb
mov
popa
das
push
stos
mov
dec
in
aas
pop
in
sub
push
enter
ds
vhaddpd
inc
aaa
into
int
ret
out
push
cltd
xchg
icebp
shlb
adc
push
das
add
incb
cmp
xor
sbbl
push
mov
xchg
orb
mov
jg
mov
cwtl
aad
stos
insl
mov
xor
xor
sbb
and
push
jp
xlat
dec
pop
fisttps
lcall
add
mov
and
mov
mov
push
out
push
outsl
pushf
xor
mov
xchg
shll
cmp
sbb
jge
clc
or
xchg
inc
sarb
xchg
add
loope
add
add
stos
inc
mov
add
or
add
mov
das
test
mov
lods
daa
pop
cli
rcll
fs
call
mov
inc
popf
mov
iret
inc
xlat
add
lret
bound
mov
hlt
dec
mov
clc
mov
loope
pop
mov
mov
cmp
sub
jl
pusha
dec
cmp
sahf
test
in
mov
push
stos
lcall
and
in
pop
out
addl
testl
mov
shrb
add
jp
push
inc
jge
mov
cld
test
dec
cmp
fisttps
notb
adc
mov
leave
int
xchg
loopne
and
jmp
out
jo
or
stc
adc
sub
insb
adc
sub
enter
lret
int3
dec
xchg
inc
repnz
sti
xchg
xchg
adc
push
mov
cwtl
aaa
and
jmp
mov
mov
sub
or
dec
test
pop
fidivl
and
xchg
js
aaa
ret
bound
in
or
cmpl
icebp
cmp
xor
repnz
mov
xor
jns
push
fildl
jne
js
push
sahf
mov
sub
mov
cmp
aad
fwait
mov
push
inc
pop
andl
data16
adc
push
loope
hlt
mov
lret
adcb
incl
cmp
sub
mov
mov
mov
fwait
mov
jno
mov
or
sbb
or
rorb
mov
loopne
jecxz
dec
dec
or
lock
mov
cbtw
fwait
xor
ds
in
filds
mov
clc
and
adc
lea
cmc
xchg
mov
cs
xor
jl
push
and
jmp
sub
dec
pop
mov
bound
jl
jmp
adc
jbe
dec
loopne
js
mov
pop
ficompl
and
cmp
mov
aas
add
pop
jno
add
sbb
imul
std
mov
jle
mov
movsb
aaa
push
cmpsb
sbb
fsts
cmp
xchg
cmpsl
mov
cmpsl
xchg
out
xchg
sub
pop
das
lock
pop
sub
sbb
jns
rorb
pop
rolb
lods
pop
lds
cwtl
fcompl
mov
inc
fcomps
frstpm(287
insl
mov
or
int
dec
xor
aas
push
in
add
pop
ret
mov
pop
cmp
adc
movsb
mov
pavgw
movsl
mov
sub
daa
shlb
ficoms
hlt
out
test
push
xor
roll
xchg
jmp
lcall
cmp
adc
push
cli
cmp
cltd
jecxz
ret
pop
out
test
xchg
enter
xchg
cmp
push
pop
mov
addr16
lret
sarl
sti
pop
rcrb
sub
and
push
add
sub
adc
fdivl
cmc
out
es
cld
push
mov
pop
fisubl
aas
test
lcall
push
xlat
std
push
daa
jle
pop
pop
mov
lahf
and
loopne
dec
scas
or
cmpsl
out
int
jle
js
xorl
xor
cmp
mov
inc
daa
dec
sub
ret
je
xor
lock
xchg
enter
mov
push
and
shr
push
mov
gs
mov
test
adc
aam
aas
loop
jb
xchg
lds
sbb
in
push
mov
or
push
cwtl
xor
add
insl
jmp
or
sahf
dec
or
adc
adc
cmpsl
push
sbb
enter
add
dec
int3
clc
lcall
add
daa
mov
pop
jns
pop
movsb
aam
xor
ljmp
push
sub
mov
xor
push
jne
fsubl
pop
cmpsl
mov
and
add
jge
push
je
inc
sti
jmp
aas
or
lock
mov
stos
mov
add
mul
cmp
cwtl
cmpsb
stc
pop
jne
xlat
inc
inc
ja
arpl
fmul
mov
xor
aas
mov
push
inc
pop
movsl
mov
xchg
jae
cmp
stc
mov
ljmp
sbb
pop
cmp
mov
xchg
sbb
scas
add
jecxz
xor
xchg
mov
xor
push
iret
pop
dec
int3
sub
push
xchg
cmpb
or
dec
and
arpl
sbb
push
add
shlb
sub
loop
inc
mov
pop
testl
sub
hlt
out
test
scas
push
insb
sar
outsb
pop
ret
dec
xlat
xorl
pusha
int3
sbb
mov
add
shrb
rclb
sub
decl
mov
icebp
insb
pop
pusha
sub
out
rcrl
lds
into
push
ss
xchg
push
rcll
push
add
aam
dec
out
test
xchg
mov
fistps
int
loop
loop
mov
fwait
imul
popf
jb
enter
adc
mov
into
nop
sbb
pushf
and
xchg
jne
pcmpgtd
dec
push
inc
xchg
mov
push
xchg
pop
mov
js
add
scas
mov
iret
icebp
adc
sub
xor
xchg
mov
sub
ret
mov
cmc
lret
pop
imul
popf
inc
sub
dec
jmp
xchg
or
stos
pop
mov
imul
in
ds
and
push
add
pop
mov
imull
adc
cmpl
push
in
daa
cmp
imul
inc
mov
push
popf
xchg
outsb
fsubs
movsl
jmp
mov
or
mov
inc
stos
mov
jl
sub
cmp
mov
pop
lock
subb
jb
jo
add
std
testb
mov
loopne
insb
xchg
adc
mov
fsub
mov
stos
in
sub
mov
pushf
push
inc
call
mov
mov
push
std
jle
dec
lahf
movsb
push
inc
mov
inc
fisubrs
inc
sbb
mov
outsl
pop
out
popf
int
leave
leave
jg
add
out
out
dec
adcl
sbb
ds
pop
gs
sahf
dec
cmp
inc
dec
xor
mov
cmp
lret
cmp
add
pop
ds
inc
jp
mov
push
mov
xchg
cmp
js
jbe
dec
lahf
popf
inc
aad
jg
repz
mov
pushf
scas
and
das
ds
loop
jae
lret
js
cli
pushf
jo
mov
call
dec
dec
cld
add
shlb
lret
mov
dec
mov
inc
and
and
inc
mov
stos
arpl
std
inc
inc
mov
mov
inc
xchg
mov
push
adc
inc
aaa
and
push
int3
fnstsw
mov
inc
fld
cmp
imul
addl
dec
loope
xchg
push
out
imul
out
jns
sbb
testb
cmp
xchg
cmc
cmp
das
addr16
call
jne
iret
into
jp
pop
lock
lods
inc
enter
jo
mov
flds
cmp
xor
fsubrs
pop
pop
clc
push
jmp
xchg
in
test
xchg
xchg
pop
mov
pop
cmc
mov
inc
ljmp
xor
movsl
stc
sti
and
mov
xchg
test
and
jmp
push
es
xor
addr16
cmovle
add
adc
cmp
dec
inc
ds
shll
sbb
cmp
inc
ljmp
dec
ret
and
add
dec
xor
dec
pop
cmp
mov
pop
or
scas
ficoms
add
aaa
cwtl
jae
dec
xor
xchg
bound
mov
leave
pop
das
jle
cli
rol
daa
aad
imul
push
loope
mov
sub
cmc
push
addb
cmpsb
push
lods
xchg
sub
sarl
pop
dec
bound
aad
aad
out
cmp
jecxz
stos
enter
addl
or
jmp
test
daa
mov
and
jbe
in
or
add
lcall
lahf
and
push
xadd
cmp
mov
push
lret
lahf
fcmovnu
rcl
mov
cmpsl
call
fldt
loop
insb
pop
pop
push
mov
fists
jo
lds
ss
imul
push
sbb
xor
cmpsl
mov
push
push
cltd
clc
loope
sahf
push
sub
or
notb
cs
or
or
mov
dec
adc
push
push
xor
in
adc
mov
stos
ljmp
cli
shl
stc
mov
jmp
mov
imul
inc
movnti
jno
mov
jnp
daa
ljmp
cmp
fisubs
or
out
dec
xchg
dec
push
and
cs
inc
inc
fidivs
mov
pop
xchg
cmp
in
xchg
addb
mov
movsl
int3
mov
xchg
jecxz
aaa
enter
jno
mov
mov
pop
lret
mov
leave
add
imul
jmp
rcr
adc
daa
adc
shl
out
sub
inc
lcall
inc
fisubl
std
xor
test
push
cmc
imul
push
or
cmp
add
adc
in
je
fs
jmp
xchg
dec
sbb
mov
mov
mov
bound
mov
mov
loopne
movsl
cmp
push
in
ja
leave
adc
inc
inc
xlat
jnp
mov
jnp
pop
cmc
jle
je
lea
jp
mov
aad
or
mov
leave
repnz
sti
imul
test
cltd
cwtl
xchg
les
cmc
cli
push
loope
pushaw
outsl
cmp
dec
shrb
sub
clc
cmp
outsl
aad
subl
mov
sbb
sbb
pop
pop
jbe
int3
imul
jb
xor
stc
into
dec
sbb
aas
lods
ljmp
mov
mov
xor
or
cli
jne
sbb
or
sbb
lcall
addl
fs
and
addr16
or
push
jnp
and
sub
and
popa
and
sub
aas
shrl
rorb
data16
sbb
les
ficompl
mov
repz
vmovd
fbld
fs
rol
data16
icebp
jmp
and
sahf
outsl
mov
pop
rclb
adc
dec
fdivrs
rorl
insb
les
call
paddb
mov
cli
outsl
rcr
loopw,pt
inc
pop
sbb
ja
cmp
dec
fwait
xchg
ja
mov
ljmp
in
xchg
gs
stos
test
push
push
mov
mov
insb
test
popf
push
cmp
clc
es
iret
jno
mov
dec
jle
cmc
mov
test
js
jl
shrl
sbb
outsb
adc
addr16
jecxz
jae
arpl
arpl
and
mov
repnz
leave
movsl
repz
in
out
pop
lds
add
jle
mulb
adc
xchg
sti
xchg
inc
sub
mov
push
test
rcrb
mov
insl
les
notl
stos
sub
pop
pinsrw
scas
arpl
jmp
sahf
mov
int
jg
xchg
stc
lea
inc
ds
add
addr16
int
mov
pop
gs
das
pop
mov
pop
popa
int
xchg
rcrb
in
pusha
inc
sub
inc
sbb
mov
movsb
inc
xor
adc
shr
lcall
loopne
imul
add
mov
aaa
and
mov
loopne
lds
xchg
sub
inc
jmp
or
push
mov
jnp
push
sub
xor
mov
adc
mov
lahf
mov
xchg
add
decb
push
adc
sub
stos
jo
adc
push
mov
bound
lret
inc
mov
fimull
test
das
es
and
fcompl
jge
dec
push
ja
ret
repz
xchg
aam
add
daa
daa
idivl
mov
xchg
cmp
enter
lock
pop
sti
xor
negl
and
jle
jb
roll
iret
arpl
jg
or
xchg
iret
std
xchg
dec
enter
outsl
sbb
push
pop
lret
fstl
mov
add
fcmovbe
aad
hlt
iret
cmp
jbe
rorl
data16
mov
push
mov
roll
enter
jae
inc
icebp
or
push
sti
pushf
lcall
aaa
cmc
xchg
sub
fsubrl
hlt
push
mov
jl
pop
in
pusha
clc
pop
sbbb
xchg
les
pop
lret
xchg
mov
fldlg2
jecxz
sbb
lods
push
sti
popf
inc
pop
add
add
mov
or
adc
subb
xchg
loop
sub
xor
mov
inc
xchg
mov
or
ljmp
pushf
and
and
xor
popa
in
sahf
push
aas
sub
hlt
rcr
cmc
inc
fdivrp
repz
out
and
xchg
sub
enter
pop
mov
ret
sub
test
cmp
ja
inc
mov
mov
xchg
add
mov
xchg
sub
add
xchg
fstps
out
mov
mov
adc
mov
insl
in
pop
daa
imul
cmpsb
jae
cld
pushf
mov
clc
jae
push
bound
loop
and
mov
ret
repnz
ret
popf
scas
hlt
enter
mov
push
imul
xchg
daa
adc
lahf
jb
dec
fldenv
dec
lret
and
fwait
jbe
je
call
push
in
xor
mov
loopne
pop
outsb
jg
dec
push
aam
sbb
subb
sub
pop
jle
insb
mov
dec
xchg
or
mov
loopne
push
fiadds
roll
js
pop
inc
inc
mov
sub
mov
test
xchg
out
stos
pushf
fmul
push
jbe
repnz
ja
jmp
xchg
jno
pushf
imul
in
lahf
mov
fwait
dec
pop
ficoml
enter
in
testb
push
push
icebp
movsb
push
das
jle
mov
cwtl
mov
push
pop
mov
les
mov
jle
sbb
dec
jp
xorl
pop
cmp
xor
cmp
add
adc
add
popa
mov
pop
clc
pop
push
inc
mov
xchg
jg
dec
or
cmp
xchg
icebp
mov
and
xchg
push
int3
inc
lods
inc
mov
lods
inc
call
cltd
std
fwait
xchg
shll
jge
xchg
iret
in
pop
xchg
cmc
or
ja
push
xor
jp
je
sub
sahf
adc
xchg
inc
stos
inc
js
push
inc
sbb
fisubrs
arpl
fcom
and
fisubrs
int3
jno
jns
jne
sbb
sub
push
cmpsl
jo
call
rcrb
pop
jb
leave
mov
push
shl
pop
pop
call
in
das
ss
gs
inc
and
mov
arpl
inc
push
mov
sub
test
xchg
and
jnp
rcrl
sub
xchg
testl
aas
fcoms
dec
aam
inc
push
or
shlb
pop
pop
lock
cmpl
cmp
mov
int
in
daa
shlb
hlt
roll
mov
insb
cmp
add
addr16
pop
push
lret
out
pushf
jle
mov
call
push
iret
jo
jl
fbstp
inc
dec
in
and
inc
dec
dec
jmp
adc
jnp
dec
or
mov
dec
jo
xchg
pop
dec
ficompl
fisttpl
mov
les
sarl
adc
sub
sbb
imul
mov
cli
es
add
xchg
es
and
mov
jmp
or
shr
in
ljmp
xor
popf
push
cwtl
ljmp
and
push
mov
into
inc
out
inc
outsl
add
mov
test
loop
sahf
in
lods
jne
test
imul
sahf
mov
push
lahf
mov
cmc
jecxz
dec
xchg
inc
test
aas
xchg
out
sub
addb
xor
mov
adc
push
insl
ret
addr16
out
xor
and
pop
loop
mov
lods
push
dec
call
in
xchg
nop
fwait
cmpsl
xchg
outsb
test
popf
cmc
repnz
lock
stc
or
adc
push
sub
sbbl
mov
dec
bound
pop
insl
sbb
add
lods
push
mov
stc
mov
lods
fwait
setp
adc
subl
push
fs
cld
cltd
hlt
mov
in
push
lahf
sti
movsb
and
cmc
arpl
sub
sbb
push
or
orl
sarl
loope
pop
stc
jo
iret
rep
cmp
pop
shlb
jp
and
lcall
push
test
popa
sub
hlt
lret
jge
xchg
mov
sub
and
push
dec
stos
je
cwtl
loope
push
push
sbb
mov
inc
bound
test
hlt
loope
xlat
mov
push
mov
fistpll
pop
jae
xor
inc
std
sbb
xor
cli
xchg
dec
fcomp
cmpl
imul
pop
test
pop
add
ljmp
cmp
mov
scas
fwait
jbe
pop
and
lcall
mov
ljmp
lods
push
lret
jae
loopne
and
pop
xor
pop
add
out
mov
dec
aas
roll
jns
push
imul
jo
clc
dec
inc
inc
mov
loope
notb
add
push
sub
addb
and
rcrb
addr16
xchg
jb
je
pusha
vmovntdq
popa
and
jo
roll
dec
and
shlb
jmp
cltd
aad
stc
fidivl
mov
mov
or
sarb
aaa
pop
arpl
cmpsl
add
or
rcl
insl
and
ud1
gs
jl
sbb
inc
xchg
sbb
jecxz
je
inc
enter
cmp
ja
in
add
xor
test
lods
stc
jo
movsb
sahf
mov
adc
movl
push
push
push
inc
add
call
xor
les
add
shl
stos
xor
cmc
daa
in
push
cs
arpl
fdivs
fidivrl
sub
popa
pop
loop
adc
push
call
xchg
push
mov
aam
loop
pusha
dec
push
test
cmpsl
lcall
mov
fldcw
inc
dec
add
dec
push
sub
cmp
shl
lea
cltd
add
test
inc
or
stos
dec
sbb
jae
cs
loop
and
xchg
fisubl
pushf
jg
ds
inc
in
loop
cmp
leave
pusha
enter
je
push
scas
and
push
cmp
ret
loop
fiaddl
in
test
shl
iret
sbb
movhlps
testb
mov
inc
pop
fstp
das
xorb
lds
xlat
sbb
std
and
and
out
or
cmc
sbb
mov
sub
push
dec
sub
leave
pop
xor
xchg
fnstenv
rcr
enter
shl
cwtl
adc
lods
sbbb
cmp
push
mov
mov
xor
outsb
popf
or
cmp
insb
fists
push
and
leave
cli
lret
jae
push
jmp
sahf
xchg
jo
out
fstpt
popa
daa
negb
sub
mov
imul
mov
dec
mov
mov
leave
dec
lods
mov
ja
je
mov
or
cmp
ror
sbb
mov
mov
and
xchg
add
and
orl
repnz
gs
mov
outsb
fstl
push
push
ret
inc
push
inc
jle
fs
mov
popa
lods
lds
mov
sarl
pop
js
int
adc
push
ljmp
out
mov
or
outsb
rcrb
sbb
push
mov
adc
cmp
pop
jmp
arpl
sub
pop
xlat
lods
cli
lea
pop
ljmp
arpl
jecxz
daa
mov
and
fstpl
dec
sbb
jg
lahf
popa
out
lret
andb
xchg
call
or
dec
cmpsb
or
jge
ja
aas
pop
out
jle
rcrl
in
out
mov
les
andl
in
mov
xchg
cmp
xor
insl
loopne
hlt
aas
cmp
adc
fs
imul
stos
cmp
fisttpl
or
loopne
sar
in
cmp
int3
outsb
and
mov
test
in
xchg
cld
xchg
lods
iret
flds
fwait
adc
xchg
pop
pop
aas
adc
add
xchg
ds
dec
pusha
dec
sti
push
test
in
or
push
adc
pop
inc
gs
movsl
mov
sti
adc
inc
jns
mov
test
int
xor
mov
sarl
hlt
loope
popf
xor
jns
mov
mov
fmulp
mov
es
movsb
scas
inc
add
stos
and
in
stos
mov
mov
jo
mov
push
sbb
push
mov
lret
fld
jnp
push
cmp
movsl
shrb
inc
insb
int3
out
test
cwtl
cmp
xor
popa
sbbl
or
pop
pop
fbld
inc
sub
cltd
dec
pop
pop
inc
stos
ret
inc
dec
jp
inc
ljmp
call
inc
mov
mov
fsubp
add
add
arpl
insb
lret
or
testl
int
lahf
jns
mov
xor
sbb
sbbl
inc
dec
add
cmp
daa
roll
and
ret
dec
lods
jmp
pop
xchg
cmpsb
cld
fcmovnb
cmp
sbb
nop
push
fbld
adc
movsb
pmullw
std
sbb
dec
cli
sbb
mov
dec
jg
mov
andb
xor
cmpsl
popa
sub
loop
data16
mov
jne
adc
rcr
jnp
fildl
mov
inc
leave
push
ljmp
or
movsb
insl
scas
jp
imul
jno
fidivl
arpl
aad
fmull
mov
shll
ficoms
mov
sarb
loopne
mov
lock
mov
imul
add
sbb
testl
int
dec
fidivs
or
xor
stos
jne
inc
aad
gs
loopne
adc
inc
add
mov
mov
inc
aam
inc
add
mov
and
inc
ficomps
std
pop
je
xor
and
gs
lock
loopne
cmp
jae
push
gs
out
xchg
lods
aam
mov
jae
mov
jnp
xchg
add
dec
sub
jns
adc
mov
movsl
enter
ss
and
inc
scas
xlat
jl
andl
pop
mov
xchg
mov
jae
pop
pop
xchg
inc
and
addr16
sub
cli
mov
insb
pop
or
push
into
push
and
orb
xor
sti
adcb
push
mov
xor
pop
test
sti
cmp
pslld
nop
sbb
adc
push
outsl
scas
mov
or
fs
aas
jbe
sub
pop
mov
lea
pop
loope
mov
sub
mov
fiadds
hlt
int3
push
std
shll
into
add
add
das
pop
jp
xlat
arpl
push
repz
lahf
loopne
loop,pt
xchg
mov
lods
jne
ficoms
xor
inc
xchg
imul
or
lods
inc
pop
jns
outsb
push
mov
sbb
mov
push
or
cmp
xchg
jo
and
lahf
imul
insb
mov
fwait
dec
xor
jp
rcrb
sub
or
aaa
xchg
mov
rorb
arpl
aam
int3
sahf
sarl
jns
mov
inc
pop
daa
mov
mov
das
outsb
pushf
cvtdq2ps
or
dec
inc
inc
icebp
sbb
lcall
sub
jns
push
cltd
xchg
mov
ja
sub
push
pop
leave
lock
and
fstl
mov
xor
in
xchg
dec
iret
aam
jmp
sbb
mov
fldt
jnp
inc
mov
mov
mov
mov
or
inc
mov
daa
dec
les
dec
pusha
push
dec
inc
lret
mov
jb
ret
push
in
mov
push
jmp
nop
cmp
xchg
insl
or
mov
sarb
hlt
dec
test
inc
call
xlat
xlat
out
dec
mov
fistps
sbb
cmc
pop
jno
xchg
enter
negb
ficoml
fiaddl
push
xor
xchg
repz
pushf
add
mov
in
pop
mov
lahf
push
xchg
popa
ret
xor
sub
lods
and
sbb
dec
xlat
jl
sub
scas
fnstenv
add
inc
add
and
ret
outsl
or
mov
ds
into
enter
sub
cmp
fistps
sbb
jae
outsl
mov
std
outsl
add
mov
and
sti
push
popa
fwait
scas
das
icebp
push
mov
test
mov
adc
mov
mov
jge
stos
es
fstpt
adc
push
jo
add
stc
lea
test
inc
leave
lahf
jb
scas
inc
leave
mov
rcrl
mov
push
push
nop
sub
pop
push
and
push
mov
cli
inc
mov
lods
inc
aam
cltd
ret
inc
cmc
lret
add
jg
lods
ljmp
xchg
fadd
sub
aaa
or
sub
ss
outsb
pop
loopne
pop
lahf
repnz
testb
pop
sbb
fistpl
cld
mov
and
push
pop
testl
or
and
jb
sti
push
cmp
loopne
inc
loop
je
and
and
mov
xchg
lds
fists
cs
and
cmpb
out
xchg
out
rorb
add
scas
and
pop
into
push
inc
push
sub
cmp
mov
pop
imul
std
pop
and
aas
push
call
push
sbb
push
xchg
inc
aad
cmp
xor
inc
sahf
mov
subb
mov
push
sub
scas
popf
push
push
fisttpl
sub
shrl
pop
mov
jecxz
add
sbb
add
rcl
mov
loope
iretw
jo
jg
lret
fnsave
jb
xchg
adc
inc
lds
add
fsubs
cwtl
stos
jmp
stc
nop
pop
dec
imul
mov
sub
dec
mov
mov
and
xor
xchg
jne
ret
rcrl
ja
and
pop
hlt
add
or
jnp
dec
imul
lock
in
mov
sbb
insl
xor
mov
jae
or
insb
mov
xchg
shll
add
sahf
mov
movsb
mov
xchg
insl
sbb
push
call
add
sub
les
lock
mov
pop
rorb
mov
cmp
cltd
xor
dec
ljmp
and
test
nop
dec
cmc
mov
fisubrs
cmp
jo
xchg
adc
ljmp
movsb
ficoml
xor
in
cli
mov
into
mov
inc
lods
in
mov
fildl
iret
sub
push
fmul
xor
jmp
mov
enter
xor
cmc
cs
pushl
pop
inc
cli
dec
mov
inc
or
adc
mov
sub
pop
mov
cmp
and
lods
dec
inc
xlat
sbbb
add
pop
ja
or
insb
mov
imul
in
pop
or
inc
ds
pop
ja
out
jmp
call
or
pop
mov
testl
add
mov
pop
mov
push
in
scas
cmc
adc
dec
pop
mov
dec
outsl
jp
xchg
pop
mov
outsl
repnz
stos
je
int
mov
pop
xchg
pop
int
mov
lcall
sbb
fldl
dec
rcrb
rcrl
pop
test
test
aaa
dec
and
int3
stos
xor
daa
clc
fsubp
nop
stos
dec
jbe
push
xor
or
aas
push
pusha
sar
call
push
je
pop
pop
inc
jecxz
lcall
lcall
inc
cmpsl
xor
fdivrl
pop
insl
mov
jbe
insb
addr16
sbb
filds
insb
lret
cmp
mov
cmp
mov
lcall
or
pop
mov
je
push
out
xchg
stos
imul
and
push
outsb
or
xor
or
xchg
jl
mov
jmp
inc
adc
negb
rcr
mov
dec
dec
pop
fmuls
negl
sub
js
arpl
add
test
lds
pop
daa
inc
xchg
leave
push
adc
clc
cmpsb
out
xlat
test
cmp
in
or
mov
rol
aaa
in
lret
sub
and
cli
push
fiadds
pop
add
clc
inc
xor
out
in
cld
cmp
notb
pop
andl
rcrb
jb
xchg
lods
orl
or
adc
imul
lahf
test
push
push
data16
test
clc
icebp
sub
pop
adc
jmp
cwtl
sahf
sub
mov
movsl
cmp
fistps
mov
iret
xor
cld
je
mov
mov
lret
xchg
lds
bound
imul
and
dec
cmp
cld
fnstenv
cs
lds
push
cmp
mov
pop
cmpsl
pop
hlt
push
aas
andl
outsb
ljmp
and
jmp
stos
add
std
dec
movsb
cmp
outsl
aaa
push
mov
cmpsb
xchg
push
stc
mov
add
clc
jns
push
nop
lcall
ljmp
mov
les
cli
xchg
sub
repz
mov
daa
mov
jmp
push
adc
xchg
jg
and
ret
js
rcrl
mov
rcr
and
add
sub
mov
in
push
xor
ret
xor
nop
sbb
sti
push
mov
ret
fidivs
push
dec
and
pop
and
add
sub
ljmp
les
cmp
jbe
sbb
mov
mov
jbe
fdivrl
pop
ljmp
out
xchg
arpl
add
adc
cmp
out
pusha
dec
popa
add
lods
xor
inc
xchg
hlt
pop
inc
push
and
or
inc
inc
shll
push
mov
xor
insb
add
stc
xlat
sub
add
clc
jge
in
sbb
xchg
fdivs
push
popa
or
xor
orl
xchg
mov
xor
fcomps
mov
add
subb
sub
icebp
add
rclb
out
inc
cmp
test
and
and
je
add
aam
xchg
jle
fimuls
pushf
jl
or
sahf
and
adc
pop
test
adc
sbbb
nop
jns
mov
shrb
inc
psubq
shrb
push
in
ljmp
push
in
inc
push
dec
mov
push
xor
fwait
pop
xor
test
xchg
rorl
mov
and
movsl
jmp
test
lods
addr16
loop
ja
cs
jnp
rorl
icebp
je
test
push
loope
mov
dec
pop
loop
push
ljmp
jb
cmp
adc
mov
jns
dec
out
test
les
outsb
hlt
sbb
add
add
xor
repnz
movsl
icebp
ja
push
test
clc
imul
and
test
and
cltd
xchg
xor
inc
add
xchg
test
jle
lret
in
mov
insl
add
sbb
xchg
adc
outsb
inc
inc
sub
sbb
repnz
sarl
in
js
out
jmp
imul
jne
sub
dec
cs
out
stos
dec
int3
popa
xor
jbe
push
push
mull
dec
push
mov
dec
pop
sub
mov
and
cmp
pop
aaa
or
aam
adc
ret
pop
mov
enter
pop
jo
dec
outsl
push
jp
and
rorb
pusha
pushf
or
add
aaa
push
mov
add
sub
push
out
adc
je
xchg
xchg
mov
dec
sahf
lods
jle
cmp
jnp
mov
pop
pushf
pop
cmc
loope
negb
jge
test
and
jge
aas
shl
stos
inc
insb
adc
dec
adc
or
mov
movsb
and
xchg
dec
push
adc
sbb
dec
inc
aad
out
and
lea
nop
sbb
ss
jno
pop
lcall
push
jmp
repnz
sub
test
or
fstpl
inc
cmovae
inc
aas
or
sbb
push
push
xor
xchg
pop
and
cld
outsl
and
roll
jae
push
mov
fnstenv
shlb
mov
loop
mov
les
insl
push
imul
or
aam
adc
out
add
sub
inc
inc
adc
loopne
push
rcl
je
xor
mov
sub
xchg
outsb
lret
sub
pushf
int3
dec
in
mov
add
in
mov
and
in
xor
sbb
pop
insb
mov
jg
imul
loopne
nop
adc
mov
imul
and
cmpsl
xchg
insl
jae
rcrl
pusha
addr16
mov
push
push
dec
or
lds
ljmp
rcrb
jmp
popa
jae
mov
sub
test
jbe
jmp
cmc
or
rcrl
inc
fdivs
js
loopne,pt
add
mov
cmpsb
sub
ljmp
fcomps
sarb
in
inc
into
lods
loop
xor
push
in
mov
dec
mov
push
dec
loope
divb
sbb
das
mov
repz
cmp
push
rcrb
outsl
jmp
cmp
add
ret
push
cmpsb
dec
jge
xchg
mov
out
lret
push
inc
and
and
cwtl
insb
mov
out
sbbl
jns
stc
mov
pop
insb
mov
test
outsb
push
pop
pushf
stos
mov
and
loop
cmp
jae
rol
jecxz
dec
lret
and
dec
pop
inc
inc
push
ljmp
fisttps
negl
inc
xor
loopne
add
mov
fidivrl
mov
pop
cli
clc
adc
mov
xor
jo
push
stos
in
jae
ret
lcall
push
cwtl
cmp
xchg
cltd
cwtl
pushf
xor
mov
mov
jg
jmp
repnz
pop
jge
scas
and
and
imul
jns
ja
and
aad
in
int
or
jb
cltd
mov
mov
outsl
add
cld
mulb
stc
clc
adc
movl
int3
pop
shll
adc
insb
lret
or
xor
mov
xor
xchg
lods
dec
mov
fcmovb
jnp
les
pop
inc
out
cld
shll
and
sub
cmp
scas
inc
add
loopne
outsl
push
jmp
out
jo
sti
or
int
loopne
lods
mov
fidivrl
fstl
push
push
add
ljmp
add
or
pop
mov
in
inc
and
dec
insb
add
cmp
mov
ss
and
in
push
ret
nop
xchg
cmpsb
sbb
in
pusha
mov
mov
in
sahf
adc
adc
fs
lds
adc
push
sti
dec
stos
insb
push
sbb
repz
mov
and
imul
jno
lods
mov
adc
xchg
mov
xchg
icebp
popf
dec
and
sbb
insl
pop
cwtl
add
sub
jge
mov
jl
pop
aad
jnp
leave
sub
mov
int
and
sub
adc
jae
addl
cmpsb
frstor
rcrl
xchg
adc
cmpsb
push
scas
pop
rorb
cmp
stos
leave
dec
dec
addr16
pop
ss
cmp
mov
sti
push
shll
pop
dec
notb
or
call
xor
sub
sahf
bound
ja
in
gs
cmp
popa
sbb
rorb
sbb
je
mov
dec
xchg
xor
xchg
loope
or
pop
in
cmpsl
lcall
daa
jp
fistps
rcrb
mov
pop
cld
stos
aad
shlb
push
adc
mov
fs
and
inc
push
cmp
xchg
adc
rcrl
scas
repnz
insb
insl
add
fs
cld
adc
pop
stos
sbb
push
xchg
das
lods
and
jb
inc
lods
push
lock
popa
ja
imul
dec
sbb
adc
lods
push
push
pushf
iret
jecxz
dec
adc
sbb
daa
ds
dec
mov
rclb
xchg
jp
inc
push
int
ds
vmovntps
rcrl
scas
add
in
mov
push
mov
fldt
addb
pop
mov
sbb
cld
jnp
insb
lods
push
int3
arpl
ds
cmpsb
jne
mov
stc
jo
dec
xchg
in
lret
sbb
les
outsl
andb
xchg
insl
test
mov
mov
pop
sub
dec
and
mov
test
aam
add
adc
sub
addr16
sub
sbb
cmc
jle
push
icebp
cltd
sbb
inc
dec
cmpsb
sti
inc
and
lret
and
mov
pop
scas
test
sbb
xchg
and
sahf
nop
lods
mov
xor
sarb
addl
in
gs
and
sbb
and
inc
arpl
imulb
xchg
push
sbb
sarb
addl
dec
sbb
in
push
sub
cmp
insl
fnstcw
dec
pop
repz
sub
adc
arpl
xor
sub
xor
cltd
mov
lds
adc
pop
orb
dec
mov
loop
fdivs
mov
fwait
imul
pusha
mov
in
cmpl
scas
sti
jecxz
and
sbb
mov
lahf
sbb
movsb
cld
lock
and
xchg
btr
mov
xchg
pop
stos
or
loope
cmp
stos
push
ds
mov
mov
add
add
pop
arpl
dec
fiaddl
add
xor
arpl
push
imul
pop
out
pushf
dec
mov
inc
lret
repnz
fmuls
jb
mov
inc
cwtl
sbb
mov
sar
mov
adcl
imul
sbb
in
icebp
insb
cwtl
xor
xchg
jns
jmp
sbb
or
xchg
sub
test
imul
push
sub
lret
mov
cld
test
dec
mov
pop
mov
mov
les
add
imul
or
xchg
mov
mov
xchg
sub
push
xor
sbb
push
scas
mov
das
out
gs
scas
xlat
sbb
pusha
cmp
add
or
push
or
pop
xchg
jp
mov
mov
in
fisttps
jle
mov
sub
addl
sub
gs
mov
jl
sarb
or
idivb
push
mov
xchg
pop
cmpsl
std
inc
mov
imul
cmpsb
jge
jg
xchg
icebp
ja
pop
cltd
negb
das
xor
adc
lahf
out
or
cmp
adc
mov
iret
fs
test
insb
popf
mov
aas
inc
mov
fwait
scas
outsl
mov
adc
xor
pushf
xor
push
test
add
xchg
popa
sysexit
or
mov
xchg
add
adc
bound
mov
pop
outsb
cli
pop
dec
adc
jge
add
loop
or
inc
pop
push
jo
cmc
adc
mov
sbb
daa
sbbl
out
ljmp
mov
call
and
push
out
mov
dec
bndstx
aaa
xor
adcb
mov
fstl
jle
or
dec
daa
ret
jnp
mov
sbb
shlb
lea
jl
pop
xchg
dec
inc
jb
mov
jne
jne
mov
jg
aas
std
sbb
stc
add
adcb
jbe
icebp
add
fs
add
test
mov
lahf
ja
inc
sub
flds
xor
xor
adc
bound
xor
dec
loop
sarl
xchg
sub
push
repz
and
out
call
aad
mov
fnstenv
aam
push
and
addb
das
les
ret
dec
icebp
pop
testb
outsl
sub
mov
inc
out
pop
ja
jns
pop
lds
imul
outsb
push
jl
jne
arpl
or
pop
repnz
fistps
mov
push
out
dec
or
ds
sub
aaa
adc
dec
or
adc
test
push
push
inc
pop
inc
aaa
js
jne
sub
mov
and
dec
lock
outsl
mov
ret
mov
lock
scas
sti
cmp
adc
xchg
push
lock
out
xchg
loop
ja
cmp
jne
inc
push
xor
dec
cmp
stc
stos
add
fcoml
out
mov
dec
xchg
add
mov
loopne
xchg
test
ds
inc
into
fs
sti
push
sbb
js
mov
in
xchg
add
int
jmp
inc
push
fldenv
inc
lods
in
sbb
sub
repz
pop
hlt
mov
xlat
jns
popa
roll
sub
inc
jmp
out
xor
movsb
stc
sbb
movsb
inc
lods
loop
test
loope
mov
call
mov
xorl
setl
mov
je
out
loope
js
inc
dec
aad
mov
shrb
out
out
inc
inc
outsl
ds
fisttpll
pop
test
outsb
loop
loopne
cld
add
sbb
into
je
pusha
std
aam
call
rolb
sub
cmpsb
dec
pop
mov
push
mull
mov
mov
sub
int3
movsl
out
jo
in
std
jp
mov
lds
lock
dec
mov
popf
adc
sbbl
xchg
pop
cmovs
rorb
xchg
mov
inc
fdivrs
fwait
test
xchg
inc
leave
sbb
dec
aad
mov
or
inc
cmp
xchg
int3
negb
or
stos
xchg
xor
popa
cmc
nop
xlat
dec
jnp
xor
mov
mov
stos
data16
and
mov
and
sti
cli
es
mov
inc
mov
or
or
iret
jbe
test
add
pop
push
pop
outsl
dec
fdivs
xchg
pusha
sub
arpl
xor
lret
loopne
xchg
imul
shlb
je
fstps
loope
in
cmp
lock
adc
and
xor
adc
mov
out
xchg
jne
call
cmpb
or
out
xor
jl
aad
mov
add
cmpsb
mov
sbb
xchg
add
mov
fisubrs
lret
pusha
and
inc
stos
fimuls
cmpsl
mov
inc
mov
andb
pushf
xchg
mov
mov
pop
imul
push
jecxz
push
sub
call
add
jb
lock
lahf
jns
adc
mov
roll
test
dec
imul
iret
cmp
aaa
lock
je
mov
mov
sub
add
call
xchg
ret
mov
or
push
lds
test
mov
loope
xor
sub
pop
pop
push
add
or
fiadds
daa
cmp
xor
int
cmpl
sub
and
pop
jnp
ljmp
jne
jne
out
sti
push
push
jne
pop
dec
or
shll
sarl
inc
lret
dec
sub
mov
addr16
adc
lcall
cmc
jl
xchg
dec
push
push
roll
repnz
lds
mov
lea
sbb
dec
bound
mov
gs
add
enter
adc
ss
push
mov
ret
mov
int3
and
adc
jae
dec
dec
dec
cmp
lds
out
notl
xchg
out
and
pop
in
jle
stos
xor
mov
push
xor
adc
outsl
jge
addb
pop
cmpsl
cmp
adc
cltd
les
mov
test
sub
lret
shll
and
fdivrs
out
and
pop
push
fiaddl
ss
icebp
xor
fistpl
push
xlat
mov
fnstsw
notb
clc
xchg
inc
sbb
in
xchg
pop
out
sub
pop
jecxz
mov
cmp
adc
rcr
movsb
xor
lahf
and
sub
sbb
lods
arpl
outsl
arpl
or
xor
scas
xor
out
mov
popf
frstor
fidivrl
push
in
or
rcrl
pusha
and
xorb
lds
adc
xchg
bound
std
sub
orb
xchg
outsb
and
and
int3
jmp
pushf
and
xor
sahf
sub
sahf
lcall
lock
cltd
lret
dec
sub
lea
shrl
jns
daa
popa
fcomip
data16
cmp
movl
mov
aaa
lea
inc
ficompl
mulb
inc
push
daa
xchg
imul
xor
cli
mov
outsl
es
xchg
pop
nop
shlb
int3
ret
dec
repz
dec
movsb
loope
hlt
push
add
hlt
dec
dec
fidivrs
or
int
push
or
adc
iret
and
cwtl
popf
mov
imul
pop
mov
or
ret
rolb
push
mov
fsubrp
push
pushf
inc
push
jns
or
jecxz
negl
sbb
cmpsl
jno
jmp
insl
xchg
outsb
rcrb
stos
pop
out
jo
stos
jp
mov
jae
mov
adc
sbb
ficompl
fwait
pop
test
add
cmpsl
out
pop
push
std
fcoml
cmpsl
stos
sbbl
push
pop
decb
sbb
fnsave
inc
js
push
add
sbb
and
iret
fiaddl
scas
xchg
xchg
xchg
mov
aas
sbb
push
xchg
adc
test
add
xsha1
cmpsb
push
pusha
xchg
pusha
mov
sbb
mov
mov
lock
or
cmp
jne
mov
and
dec
adc
negb
fstpt
pusha
and
sbb
jne
inc
mov
in
inc
int3
stc
push
push
lcall
stos
mov
xchg
sub
dec
push
and
push
jo
xor
sub
dec
enter
repz
dec
inc
bound
test
shll
popf
test
loopne
xchg
mov
or
adc
jg
shrl
xchg
inc
stos
loop
loop
jecxz
push
mov
je
cmp
ljmp
int
or
pusha
outsl
dec
test
icebp
push
inc
fstl
xchg
xchg
jbe
adc
fstps
aam
aad
divl
imul
fdivs
jmp
sbb
xor
push
scas
jbe
ret
insl
aaa
inc
lds
inc
mov
mov
out
adc
fisubrs
jnp
mov
jns
shlb
sub
mov
mov
lock
pop
adc
aam
inc
dec
in
leave
fdivrs
push
lret
pop
jne
jae
push
mov
cwtl
pop
adc
pop
leave
lods
data16
lods
bound
cmp
aam
inc
clc
inc
xor
or
dec
xchg
sub
test
add
fs
inc
pushf
aaa
js
aad
pusha
sub
adc
pop
addb
daa
movsb
testb
xchg
mov
push
push
enter
fiadds
mov
mov
movsb
pop
sti
adc
dec
pop
pop
xchg
dec
adc
mov
or
dec
les
out
pop
push
jle
gs
popf
adc
cmp
push
jecxz
sub
push
jae
faddl
cli
dec
or
dec
inc
or
imulb
mov
sbb
dec
cmp
push
icebp
arpl
xchg
adc
scas
push
rol
mov
rorb
add
ja
inc
shrl
xor
bound
mov
je
pop
lods
inc
into
gs
pop
negb
push
sub
adc
cmp
ljmp
pop
sbbb
sbb
or
add
inc
es
adc
pop
std
lahf
sbbl
popf
sbb
xchg
xchg
cmp
pop
insl
add
mov
xlat
adc
cs
jecxz
push
mov
in
or
mov
mov
in
cmp
test
or
push
shl
movsl
push
xor
and
gs
sarb
push
mov
fisttpll
xorb
in
and
xchg
push
jno
daa
sub
cmp
ljmp
inc
cmp
or
mov
fimull
sub
sub
lcall
pop
ret
mov
fstpl
sbb
mov
xchg
mov
xchg
pop
or
scas
repz
lods
mov
imul
cmc
jns
push
insb
stc
push
cmpsb
mov
stc
mov
gs
mov
and
inc
push
cli
xchg
mov
and
xchg
dec
mov
and
daa
inc
or
dec
mov
ljmp
je
adc
lds
add
or
and
mov
int
into
push
cmc
push
scas
push
add
jp
jecxz
fsubl
ret
dec
sbb
fdiv
sbb
xchg
mov
movsb
in
fwait
inc
fstps
xchg
ds
mov
out
out
aaa
stos
fildll
into
outsb
or
aad
mov
stc
int
xorl
mov
int
push
jp
divl
push
push
and
sub
repz
jnp
cmp
push
jmp
and
stos
insl
sub
mov
sarb
repnz
cmpsl
into
rcrl
dec
xchg
mov
fistpl
xor
bound
jmp
aam
aad
sbb
pop
dec
dec
incl
push
imul
sbb
loop
adc
mov
nop
pop
cltd
ljmp
mov
jmp
dec
out
or
lcall
and
fdivr
in
sub
sub
dec
mov
aam
stos
lock
or
dec
lods
fildl
js
mov
ss
jge
mov
outsb
xchg
sub
mov
out
dec
sub
fdivs
lea
sub
or
loopne
sub
loope
ja
daa
and
mov
out
xchg
daa
dec
adc
cmp
rorb
jle
inc
fucomi
jbe
add
xlat
cs
jmp
inc
popa
mov
lcall
lret
and
sub
fisubrs
enter
mov
into
out
and
fdivrl
iret
cmp
push
mov
leave
pop
stos
xor
stos
test
pushf
sub
bound
shl
xchg
into
mov
adc
mov
pop
pop
jnp
push
test
addr16
jmp
js
cmp
push
fidivrs
push
sbb
fwait
sub
scas
inc
out
aaa
stos
je
int
xchg
inc
adc
pop
mov
dec
cmp
movsb
loope
lahf
cs
mov
add
ret
sbb
or
mov
imul
mov
or
ficoml
rorl
movsb
add
sbb
mov
dec
psrad
xor
jmp
dec
jecxz
xchg
aam
xchg
out
addl
leave
das
imul
into
mov
or
scas
adc
in
jmp
movsl
cmpb
int3
push
test
into
xchg
dec
int3
pop
jg
lods
sbb
ljmp
xchg
mov
rcll
mov
xchg
adc
pop
sbb
or
or
call
outsb
dec
outsl
rclb
xchg
xchg
inc
and
movsl
xchg
pop
push
inc
aad
aam
ret
pop
sub
dec
cmpsb
mov
pop
stos
lret
jge
and
std
xchg
imul
xchg
je
rorb
mov
dec
in
test
mov
jnp
cmc
or
cmp
and
nop
mov
push
cli
ret
aad
imul
fwait
xor
mov
negl
in
adc
int
push
xchg
pop
aaa
push
jbe
xchg
xor
cmp
and
or
incl
imul
cs
adc
sbbl
inc
mov
enter
stos
outsb
cmp
pop
shrb
sbb
fcmovb
icebp
cmp
cmpsb
sbb
mov
dec
cbtw
pop
fbstp
lods
sub
stos
std
mov
mov
jmp
add
mov
hlt
popl
rorl
movsl
cmp
jo
mov
orb
cmpsb
inc
push
incb
int
in
cmp
pop
mov
push
stos
pop
out
cmp
pop
testl
dec
jne
mov
jl
mov
pop
aaa
push
cltd
lds
stos
mov
jbe
xor
subb
xchg
cmpsl
mov
aaa
and
and
movsb
aaa
add
jno
daa
cmp
dec
pop
out
jns
movsl
mov
dec
jbe
negl
jl
add
movsb
lds
lahf
push
and
or
mov
in
pop
insb
fnstsw
repnz
rolb
mov
adc
or
pusha
mov
scas
dec
push
in
in
popa
push
into
lret
bound
push
fld
pop
sahf
shrl
shl
fildll
pushf
push
loop
data16
jns
cmp
flds
shrb
dec
fsubl
int3
sarb
fisttpl
mov
push
cld
push
sub
push
mov
fmull
adc
inc
mov
loope
mov
dec
or
cmp
fsts
sbb
sbb
dec
sub
xor
inc
add
push
scas
xchg
outsb
add
fmul
cmpl
pop
adc
push
pop
cmp
mov
cmp
xor
ss
les
or
mov
inc
mov
pusha
inc
cltd
push
mov
inc
pop
arpl
cmpsl
xchg
xor
leave
or
iret
scas
sub
xchg
fadd
and
add
sbbl
rsm
lahf
fsubrl
adc
sub
pusha
sub
jge
xchg
and
ficomps
sbb
les
and
cmp
sahf
lods
lds
sti
or
data16
fsubl
mov
mov
aas
bound
mov
adc
daa
add
xchg
or
daa
mov
dec
dec
popa
rclb
rorl
aas
cld
adc
cmp
mov
or
pop
sub
rcll
scas
sbb
arpl
cmp
out
dec
push
dec
push
in
xchg
jbe
jmp
inc
cmpsl
cmpsl
lds
movd
mov
xor
icebp
rolb
and
jle
rorb
and
mov
notl
cmp
mov
xchg
jge
incl
pop
lahf
mov
xchg
push
inc
mov
adc
test
inc
push
mov
push
jo
stos
leave
pop
xchg
repnz
sbb
mov
cmp
into
decl
jo
in
stos
inc
mov
add
cmp
push
daa
inc
subb
and
lock
lods
jle
dec
lods
add
rcll
push
xor
push
mov
or
or
add
xchg
fstpl
imul
insb
clc
push
mov
test
mov
shr
mov
cwtl
les
jno
jns
aam
add
dec
movsl
adc
xchg
loope
lock
js
jl
jno
cmp
pop
dec
and
mov
cmp
rcrb
and
aaa
sub
jno
negl
int3
call
in
test
int3
jle
mov
or
mov
enter
pop
adc
and
dec
and
mov
lea
sbb
outsl
cmp
js
jle
dec
add
call
scas
hlt
lods
xor
pop
add
pop
imul
gs
jnp
pop
jp
hlt
out
add
pop
pop
and
mov
jmp
aaa
ljmp
insl
inc
sbb
sahf
daa
inc
std
and
cmp
cli
mov
aaa
icebp
shll
and
fs
repz
lret
cmp
push
ljmp
call
das
and
mov
or
push
movsl
push
outsb
pop
mov
cmp
cld
inc
or
lcall
pop
jl
leave
pop
jge
les
jg
insl
in
xor
hlt
gs
test
test
cld
mov
add
mov
sub
imul
pop
imul
out
test
dec
or
ja
push
fwait
push
insl
add
and
popa
and
js
pop
stos
inc
ret
arpl
cmp
mov
les
xchg
sub
mov
lret
xchg
jbe
call
jo
mov
clc
mov
sub
xchg
fsubs
mov
jno
xorb
cld
out
pop
jmp
cs
pop
inc
sahf
fsubr
mov
mov
xor
int3
into
push
mov
mov
aas
popf
lock
es
inc
adc
shl
mov
sub
push
movsl
icebp
fnstcw
mov
jl
cmp
leave
loop
shlb
test
lods
jp
sub
rcr
gs
sti
dec
jecxz
cmp
cwtl
mov
ja
sub
mov
scas
inc
pop
dec
dec
test
push
scas
test
lret
test
int
inc
jmp
ret
fstp
and
ljmp
lods
in
and
dec
ja
dec
cld
fs
pop
xchg
frstor
nop
out
or
cli
push
jmp
pop
std
nop
sub
or
push
pushf
out
fs
addl
loope
jmp
shr
add
orb
decl
sarl
inc
fbstp
mov
push
push
inc
inc
cmp
or
mov
test
jmp
dec
jecxz
repz
xor
cmc
mov
sbb
add
call
ret
or
sbb
lcall
in
xor
push
add
xchg
and
mov
cltd
mov
mov
mov
sarb
fdivp
jo
outsb
inc
jne
dec
int3
xor
cmp
and
xlat
icebp
idivl
mov
jae
mov
mov
or
adc
push
cmpsl
in
js
pop
xchg
or
jb
pop
push
nop
sub
nop
add
push
jle
out
xchg
jno
movsb
fs
sub
and
lods
sbb
sbb
cmp
mov
or
push
and
sub
pushf
movsl
xchg
add
push
mov
inc
fcoms
loop
mov
dec
in
repz
jo
insb
add
dec
mov
seto
shrl
xchg
xor
pop
sarb
mov
cmp
mov
lahf
fsubrp
cltd
inc
xor
lret
sbb
notb
push
mov
out
inc
fs
and
xor
xchg
mov
aas
dec
mov
insb
add
jp
loop
jb
mov
pop
jne
or
fistpll
fisubl
hlt
mov
mov
test
scas
out
imul
insb
cmc
add
mov
out
sbb
push
xchg
pushf
pop
repz
fucomp
out
es
push
jecxz
sub
fists
faddl
mov
inc
cli
pop
outsl
cli
xor
mov
mov
pop
ljmp
xorb
jb
out
mov
into
jge
cmp
sti
mov
add
shlb
fiaddl
cmc
sti
out
push
aad
xlat
or
stos
subl
mov
or
out
mov
shrl
mov
push
or
mov
stos
lret
bound
xchg
dec
add
mov
rorl
push
dec
cwtl
or
cltd
cmp
aam
ds
cmp
jb
xchg
xchg
lods
sti
mov
cltd
mov
adc
mov
ljmp
imul
xor
xlat
pop
repnz
or
push
mov
pop
mov
inc
adc
in
iret
cmp
mov
lock
xor
sub
xlat
arpl
pop
enter
je
shrl
js
cmp
test
mov
scas
adc
sbb
js
mov
and
pop
rcr
out
mov
in
dec
pop
sahf
pop
jle
test
add
mov
jo
add
insl
loopne
enter
cmc
ja
imulb
nop
xchg
fcompl
mov
stos
es
add
xorl
jns
mov
cmc
push
inc
xor
jb
movsl
mov
hlt
dec
pmulhw
add
xchg
pop
stc
popa
fdivrl
arpl
sub
loope
add
inc
ret
jns
xor
das
inc
ds
dec
mov
stos
sbb
push
mov
adc
sub
mov
imul
ret
mov
lods
and
mov
sub
sbb
repnz
fcomip
dec
popa
adc
aaa
xchg
subl
cli
bound
sarb
pop
and
in
mov
push
push
push
out
jb
cmp
pop
mov
ja
jno
sbb
mov
stos
call
cli
add
xchg
arpl
nop
test
dec
jno
jb
out
jne
jge
sarl
jnp
out
popl
xchg
ds
add
fisttpl
adc
jb
into
test
jecxz
or
std
mov
mov
jg
sub
ret
test
pop
cmpsb
test
mov
fisttps
or
insl
test
adc
lahf
push
or
insb
sbb
mov
ret
ret
cmp
pusha
pop
test
inc
sbbl
pop
fwait
repz
jle
jne
mov
xchg
nop
or
adc
icebp
or
inc
in
cmpsl
mov
cmpsl
pushf
icebp
mov
jo
lods
sub
adc
mov
fucomp
addb
fbld
push
out
fbstp
cmp
jp
adc
lahf
inc
in
mov
movsb
mov
imulb
lret
jge
rcrb
test
xchg
or
movl
jg
add
les
xor
repz
and
or
lcall
push
and
or
fcmovbe
popa
js
push
ret
adc
cmc
in
cmpsl
adc
add
pop
sub
jnp
push
lahf
je
and
lea
mov
push
jo
push
inc
pop
lds
fdivl
dec
xchg
sbb
testl
inc
mov
bound
es
pshufw
test
mov
push
loop
inc
push
mov
xchg
sub
jg
rcrb
cmpsl
ret
test
insl
mov
jnp
adc
leave
int
dec
sub
mov
push
and
xor
fnstsw
xor
dec
pusha
aas
outsb
loopne
mov
dec
ds
shl
sub
jl
inc
adc
pop
inc
bound
jbe
jno
sbb
mov
out
pop
and
add
pop
add
or
mov
mov
dec
mov
or
xor
addb
jae
divl
push
push
pop
mov
dec
fsubrs
imul
and
add
mov
mov
xor
add
fs
push
jle
jo
and
cmp
test
sbb
jle
aam
adc
ja
mov
sbb
pop
push
nopl
loope
push
pop
in
jecxz
dec
gs
mov
xlat
stc
xor
mov
js
inc
ljmp
out
mov
shll
outsb
sub
mov
adc
aad
stos
xchg
fdiv
inc
fiaddl
popa
test
mov
sub
fcoms
ja
adc
pop
push
sub
jno
aaa
mov
mov
dec
test
stc
adc
sti
test
sahf
mov
sbb
cmp
insl
ret
in
adc
lock
out
push
fsubrp
andl
je
or
jno
or
sahf
jns
nop
jb
inc
sub
roll
jne
xor
xor
sbb
loopne
pop
and
iret
mov
push
xor
insb
mov
lahf
es
adc
xor
push
cli
hlt
shll
pop
cmc
jnp
stc
xor
shll
fsts
fistl
repnz
or
mov
iret
ret
ja
push
rorl
jno
mov
insb
push
in
aas
xchg
mov
in
xchg
test
sahf
aad
adc
sar
adc
mov
mov
dec
ret
data16
mov
sub
inc
push
lea
sub
sbb
sbb
pop
xchg
cs
fsubrp
xchg
inc
jecxz
dec
adc
notb
sub
cmpb
ss
jge
lret
enter
loope
jno
sub
jmp
sub
add
repz
sub
sbb
mov
cmp
aaa
into
pop
rclb
inc
xchg
pop
stos
mov
fbstp
add
or
xchg
cmp
sbb
xchg
adc
dec
in
out
sbb
cmp
mov
ret
push
rol
gs
testb
jno
sbbl
jl
mov
add
jae
sbb
xor
dec
push
mov
subl
imul
pop
loope
out
pushf
inc
ljmp
ficoml
sbb
shr
pusha
push
xchg
sbb
xlat
and
push
mov
dec
pop
jbe
into
cmp
adc
lret
pop
lock
decb
stos
movsl
push
call
scas
aas
stos
in
pop
mov
sbb
push
lock
mov
in
mov
cwtl
sbb
in
call
in
xor
sbb
cmpsb
dec
addb
aam
and
imul
imul
inc
aas
pop
stos
jne
pop
push
and
cmp
jle
adc
sub
push
lods
insb
popf
popa
mov
xor
cli
loopne
or
decl
dec
aam
dec
push
push
add
adc
mov
mov
push
push
xchg
sbb
adc
jae
adc
fbstp
pop
movsb
jecxz
in
xchg
pop
lcall
sbb
mov
mov
out
and
lock
cwtl
jne
or
ds
ljmp
xchg
xchg
out
inc
mov
lods
int
push
hlt
adc
sub
punpcklbw
jl
pop
popf
mov
fldenv
stos
subb
push
lret
mov
adc
and
mov
mov
sub
aam
or
xor
aas
sahf
push
pop
lcall
loopne
lcall
and
je
roll
test
ficoml
cmpsl
fs
jmp
stos
sbb
stos
orl
aad
pop
dec
out
out
movsb
cmp
sbb
pusha
lahf
add
sbb
sahf
lods
fsubl
js
in
cmpsb
aam
jle
jo
jmp
ds
xlat
pop
rol
fsubl
insb
imul
call
icebp
inc
test
loope
fstpl
cmc
add
test
test
inc
pop
mov
mov
sub
sub
fists
ds
push
mov
xor
add
and
xor
sbb
cmp
sbb
ret
fbld
mov
add
call
insl
wrmsr
lea
push
pop
out
pop
mov
aas
mov
andl
and
icebp
lcall
dec
aaa
cmc
pop
jo
cltd
jecxz
lret
cld
inc
sub
shll
sub
lret
adc
mov
sti
push
test
dec
fnstenv
push
fidivl
jecxz
lods
mov
mov
mov
mov
inc
cmp
imul
sbb
jl
ja
rcrl
mov
add
sub
decb
imul
ret
add
enter
ret
stos
jmp
hlt
mov
mov
xchg
imul
adc
outsb
xchg
sub
inc
dec
mov
mov
fst
repnz
jne
pop
xor
popa
gs
mov
iret
jbe
les
mov
jmp
adc
jno
inc
fistps
jl
add
rcl
int
pop
or
adcl
mov
dec
or
nop
inc
adc
xchg
or
xchg
pop
mov
fldl
loope
sub
xacquire
mov
push
test
mov
pop
ja
insb
loopne
arpl
bound
pop
xchg
mov
repnz
inc
sub
dec
push
std
notb
and
jle
icebp
jae
mov
or
pop
leave
pusha
mov
insb
sbb
test
mov
repz
pop
mov
cltd
icebp
inc
mov
mov
add
popa
mov
sbb
cmc
push
clc
add
lcall
aam
inc
pop
add
cmp
add
mov
js
rorb
cltd
mov
movsb
jge
mov
je
int3
xor
dec
stos
aam
int3
leave
lret
fisttps
push
mov
aas
stc
jae
pop
mov
jbe
sub
jp
inc
jnp
adc
or
lea
ds
rorl
enter
shl
aam
xchg
lret
xlat
inc
cltd
imul
mov
hlt
imulb
dec
mov
pop
push
movsl
push
jmp
xacquire
xchg
add
xchg
xchg
rol
fsubrs
data16
mov
jg
loop
aam
cld
nop
push
inc
stos
xchg
test
inc
lahf
sub
mov
popf
ja
dec
sbb
pop
jno
and
out
sbb
add
pop
clc
inc
fs
xchg
mov
inc
loopne
push
fstpl
out
das
pop
pop
aaa
lret
aaa
jmp
in
push
add
data16
jae
andb
jae
test
and
push
leave
and
jb
xor
shll
pop
test
xor
mov
xor
jg
pop
push
cmpb
dec
pushl
pop
sbb
and
je
mov
pop
fs
mov
and
leave
mov
adc
stos
xchg
sbb
mov
out
jnp
fldt
test
mov
jnp
jmp
cmp
sbb
adc
aaa
fisttpll
imul
mov
popa
clc
dec
cmp
test
add
mov
dec
ljmp
pushf
or
and
adc
hlt
jge
stos
lcall
jge
fcom
add
mov
jg
ljmp
dec
dec
xorb
jecxz
ds
jne
cld
fs
pop
jmp
and
cltd
mov
and
xor
test
ficompl
addr16
icebp
xor
fldcw
orl
cmp
sub
or
or
jp
in
inc
pop
sub
adc
mov
jmp
add
push
into
cwtl
dec
dec
ss
fldenv
sub
mov
iret
sahf
shrl
roll
sbb
ja
or
push
test
pop
mov
clc
xlat
xor
rcrb
ljmp
cmpl
js
xchg
push
popa
sbbl
mov
bound
mov
pop
cmc
add
mov
negl
fwait
pushf
push
int
loopne
bound
lods
imul
insl
sub
clc
pop
out
lock
sahf
xor
sbb
pop
or
std
sbbb
push
sbb
sbb
xor
daa
scas
sbb
lret
aaa
pop
jbe
pushf
cmpsb
test
adc
mov
jbe
push
fmuls
arpl
jmp
jnp
sbb
xorb
aam
adc
movlps
rolb
data16
test
adc
mov
aas
fdivrl
out
lods
lcall
mov
jg
popa
aad
aad
or
or
xor
movsl
cmpsb
movsb
xchg
dec
adc
inc
in
add
into
mov
and
stos
je
pop
lret
paddb
scas
push
out
loope
js
pop
or
adc
in
dec
pop
adc
stos
cs
aas
aad
or
hlt
push
dec
pop
lcall
dec
in
xchg
pop
cmp
pop
fsubl
pop
push
xchg
jnp
repnz
cld
daa
test
lods
std
cltd
sbb
and
scas
dec
cmp
adc
jmp
fistpl
ds
test
cmpsb
inc
and
xchg
enter
adc
mov
push
mov
xchg
rorb
add
pop
add
sbb
mov
lods
ret
jb
lret
cwtl
pop
adcl
mov
iret
xor
sub
imul
pusha
push
jns
sbb
fisubl
jbe
cltd
mov
and
test
scas
ret
lds
inc
fiaddl
mov
sti
pop
pop
adc
jecxz
mov
stos
out
mov
lret
and
test
push
rcr
mov
or
jne
add
mov
clc
loop
outsb
cli
lods
xchg
pop
mov
je
mov
sub
jp
ljmp
subl
dec
adc
xlat
dec
arpl
mov
test
xor
push
sub
jmp
sub
mov
jbe
ja
lds
sbb
jl
cltd
cwtl
movsl
cld
and
pop
sti
lock
dec
mov
mov
shr
push
ds
cltd
or
push
jp
stos
scas
add
add
in
in
repnz
pop
jbe
mov
pop
jno
jb
loopne
and
out
into
jb
or
push
or
cmpsb
and
jnp
dec
hlt
mov
call
cmp
lret
or
adc
inc
jl
arpl
inc
sbb
mov
xchg
mov
and
pushf
pop
cmpsl
jae
xchg
sbbl
lods
fxtract
pop
test
sti
and
ret
push
adc
push
enter
pop
cmc
ljmp
or
jns
loopne
fsubl
rorb
push
xchg
fdivrl
xchg
aaa
cld
rcrl
faddl
pop
add
xor
inc
mov
xchg
test
adc
int
jmp
test
jecxz
in
add
outsb
and
and
sbb
dec
mov
out
loope
std
aam
in
into
scas
xchg
sub
subb
add
push
repnz
mov
inc
fbld
ja
vpaddq
lcall
push
cld
outsl
test
mov
pop
psrlq
movsb
lahf
fsub
leave
mov
mov
adc
mov
iret
sti
and
jno
pusha
sti
push
cwtl
jmp
or
push
jae
test
rcll
sbb
cmp
sbb
nop
gs
mov
cmp
and
std
cmp
pusha
test
jbe
andb
jmp
xor
outsb
xchg
add
mov
fwait
push
scas
insb
rcrl
movsb
ja
out
and
fcmovne
xor
sub
sub
push
scas
mov
in
jbe
loopne
or
xor
lds
out
dec
es
fnstsw
fwait
mov
sub
cmp
js
ret
sbb
or
push
and
dec
pop
data16
jo
nop
and
cmp
bound
sbbb
test
mov
sub
mov
inc
push
out
pop
jecxz
mov
pop
jle
cmpsb
push
lahf
cmpsb
sbb
out
push
cmp
rol
mov
and
or
rorb
test
mov
jg
fcoms
sub
mov
call
pop
into
test
test
je
lods
or
lahf
testl
icebp
pop
das
movsb
or
jns
jne
add
inc
scas
arpl
fcmove
dec
jl
mov
ror
jo
int3
mov
popa
add
test
in
add
cwtl
adc
cmpsl
sahf
xor
mov
mov
mov
cmpl
pusha
push
mov
insl
mov
pop
add
js
stc
mov
dec
add
rcrb
xor
loop
sarb
popa
add
inc
movsb
mov
push
shll
pop
xlat
into
add
cwtl
subb
sahf
in
int
mov
nop
jbe
shl
rcl
xor
mov
clc
scas
sbb
nop
dec
dec
clc
das
fbstp
outsl
rcr
push
pop
mov
daa
push
pop
mov
mov
adc
xor
std
mov
mov
mov
add
clc
xchg
cmc
cld
es
ljmp
push
aas
push
push
push
mov
jl
loop
mov
and
jo
arpl
and
and
fimull
shr
mov
es
scas
jg
pop
int3
push
pusha
pop
out
and
xchg
loope
fcmovb
jne
int
in
sbb
lretw
xlat
popa
lods
pop
repz
scas
fnstsw
lahf
sub
dec
dec
pop
sar
outsb
je
mov
xor
pop
ja
mov
out
mov
and
scas
test
fnstenv
das
add
xlat
into
lods
xchg
add
in
sub
lret
mov
mov
mov
ds
scas
stos
and
je
nop
addl
push
pop
scas
cmp
cld
fcompl
xchg
inc
stos
or
xchg
repz
lock
out
push
aas
iret
sarl
mov
xor
cmpsb
gs
jo
sub
dec
out
dec
lahf
repz
sbb
imul
push
icebp
ja
and
test
lret
jb
cmpsb
icebp
jecxz
insb
cli
xchg
sahf
ret
mov
add
pop
xor
xor
sbb
pop
xchg
mov
add
and
adc
mov
mov
sbb
inc
or
cmp
in
movsb
and
mov
les
in
mov
fyl2xp1
cmp
rolb
jle
shrl
xlat
loope
in
and
enter
and
xlat
inc
iret
mov
testl
jno
shrl
iret
mov
pop
push
mov
jbe
cmp
int3
fwait
mov
lock
cmp
cmpsl
cmc
mov
in
inc
sbb
jmp
pop
pop
stc
int3
mov
das
loop
jno
mov
in
lds
insb
inc
adc
out
vmread
ficomps
push
jns
cmp
push
in
fcmovnbe
mov
push
or
psubusw
outsl
mov
pop
jbe
mov
insl
fcmovne
sbb
cmp
cli
inc
inc
icebp
adc
nop
mov
fcoml
sub
dec
out
sub
popa
mov
ljmp
aad
or
shrl
jbe
fbstp
xchg
dec
xor
push
test
jbe
cmp
pop
cmp
and
cmp
into
pop
nop
repz
and
iret
cltd
test
es
xchg
inc
repnz
mov
fists
std
cmp
test
lock
imul
pop
mov
nop
add
inc
add
ficompl
and
fisubrs
std
iret
mov
mov
fidivs
fucomip
clc
or
add
push
mov
fnstcw
xchg
cmp
sbb
or
leave
push
mov
or
mov
mov
xlat
cmpsl
loopne
xlat
dec
xchg
pop
jne
cld
aas
and
mov
out
mov
iret
subb
shr
nop
mov
fsubrp
sbb
cmp
jl
arpl
or
mov
and
fnstsw
push
ja
mov
outsl
mov
pushw
je
or
out
mov
cli
push
adc
dec
adc
aam
pop
push
or
ret
call
popf
mov
add
test
fistps
lret
push
adc
bound
adc
test
sti
ja
scas
int
notl
out
pop
addb
dec
rcrl
fs
jg
jg
call
pop
test
xor
jl
shrl
loopne
loope
gs
inc
push
jmp
jae
scas
cmp
hlt
cmp
andl
ljmp
jno
push
sub
out
sti
adc
arpl
mov
inc
into
adc
cwtl
push
out
pop
aad
mov
xor
fwait
sub
aam
leave
pop
lcall
pop
movsl
mov
pushf
out
in
data16
jne
pusha
lds
lea
sub
leave
lock
addr16
test
mov
shl
inc
cltd
shlb
in
xchg
dec
dec
pop
dec
mov
push
mov
cmp
xor
mov
inc
xlat
sarb
fldenv
xchg
inc
rolb
shrb
and
adc
mov
bound
aad
fwait
testl
or
ljmp
mov
outsl
xor
sbb
push
xor
xchg
inc
inc
out
xor
fidivrl
movsl
push
aaa
add
push
movsl
push
call
fidivl
es
lret
test
or
in
stos
mov
imul
jae
push
pop
insl
xchg
hlt
loope
mov
xor
scas
mov
xchg
mov
add
clc
xor
jbe
inc
mov
repz
scas
loopne
bound
movsl
jbe
lahf
xor
adc
adc
sub
cmp
mov
mov
add
fsts
mov
push
adc
in
into
rorb
pop
rcl
pop
in
dec
in
or
insb
fwait
gs
adc
insb
and
sahf
push
mov
push
mov
mov
cmp
or
out
lret
sbb
jg
sub
mov
or
idivl
pop
in
dec
mov
imul
imul
fidivrs
sub
mov
fmuls
xor
sbb
mov
adc
mov
xor
in
xchg
mov
or
or
or
jecxz
repz
iret
mov
jl
shrl
popf
add
cvtpi2ps
sbb
xchg
inc
icebp
loopne
adcl
enter
mov
jns
cmp
es
imul
jae
inc
dec
arpl
jge
lahf
imul
jmp
outsl
jns
movsl
and
cmp
imul
dec
inc
ficompl
dec
stos
xchg
sub
adc
adc
xor
sub
add
aam
pop
or
stc
out
jge
rcr
jl
adcb
mov
mov
lock
add
pop
jnp
pop
ret
push
lret
and
jne
jp
push
mov
inc
popa
xor
mov
fadds
add
cmpsb
idivb
leave
jecxz
push
add
adcl
mov
loopne
sarb
insb
test
fildl
shrl
mov
or
iret
enter
insb
mov
imul
lret
fbld
push
push
mov
test
fnstcw
pop
fnstcw
push
sub
imul
cli
adc
sahf
or
int
test
pop
sub
add
aad
insl
imul
add
push
push
fbld
notb
jmp
pusha
xchg
lea
nop
sub
notb
or
rcrb
jl
out
popa
jo
xchg
xchg
mov
or
outsb
sbb
ret
xor
xchg
faddl
mov
int
call
jb
imul
push
movsb
out
inc
pop
dec
inc
imul
pop
xor
xchg
in
popf
aaa
aas
loope
mov
clc
mov
push
xor
or
adc
push
sbb
es
insl
dec
mov
xor
fcmovnbe
shl
cld
jnp
xor
pop
fucom
mov
xor
or
clc
shrb
push
lods
cmp
xor
loopne
sub
push
test
xor
adc
into
push
nop
cld
pop
dec
jno
sub
arpl
and
cmp
dec
in
add
xor
arpl
dec
jo
outsb
sub
rcl
mov
inc
xchg
fld
loopne
ret
inc
inc
add
push
out
movsl
call
mov
jne
adc
push
scas
dec
and
inc
inc
fxch
jb
rorl
shlb
jge
and
mov
adc
inc
mov
dec
sar
imulb
subb
data16
inc
fldl
arpl
das
pop
fwait
mov
jmp
mov
pop
mov
pop
jg
enter
inc
aam
rorl
inc
pop
and
jno
sub
xchg
or
sbb
push
dec
push
sub
sub
aas
xor
rol
mov
leave
out
insb
cli
mov
xchg
add
dec
fldl
xor
sub
pminub
push
xlat
xor
xchg
call
dec
bound
dec
mov
mov
into
mov
adc
adc
dec
lcall
inc
jle
jns
sbb
push
sarb
xlat
loop
xchg
iret
fistpl
cmp
jmp
lods
js
fisubrl
xchg
mov
push
cmp
subl
push
icebp
sbb
sub
xor
lret
iret
loop
sub
fmul
aaa
xchg
add
cmp
stc
or
xor
mov
lret
fdivrs
sbb
mov
repz
stc
fcoms
cwtl
pop
int
std
cltd
out
inc
imul
shll
stos
addr16
je
jmp
cmp
icebp
cmp
and
adc
xor
shlb
xor
xor
stos
cli
pop
hlt
push
in
mov
pop
jae
or
cs
push
mov
test
fisttps
mov
rol
and
jnp
roll
jb
sub
push
sbb
lcall
and
lods
pusha
mov
push
fwait
and
adc
dec
pop
push
in
mov
lcall
jge
cltd
scas
cmp
jp
cld
out
aad
push
xor
xor
add
sti
push
loope
mov
enter
test
mov
sbb
mov
cmp
mov
inc
shlb
push
mov
ret
in
in
xor
mov
push
in
incl
xchg
mov
push
pop
add
in
sbbl
cmp
std
imul
mov
test
cmpsb
and
sub
mov
insl
jle
sbb
and
out
test
aad
test
in
jmp
dec
dec
push
add
test
dec
nop
movd
mov
stc
shrb
repnz
xchg
sbb
and
and
mov
mov
or
scas
xchg
pusha
xor
push
mov
mov
divb
jl
rol
js
jecxz
ret
adc
ret
dec
imul
lret
xchg
aaa
or
cmpsl
ret
leave
jne
or
mov
fsubrs
nop
mov
movsb
loop
sub
cmp
div
or
and
ljmp
shrb
jg
and
mov
fdivl
jns
or
movsl
push
add
jae
test
sbb
lret
push
arpl
push
inc
in
out
jmp
jb
cmpb
xchg
add
inc
in
sbb
lahf
jbe
in
cmp
out
lea
fs
movsb
sub
push
push
push
lcall
add
imul
push
in
out
dec
lock
cltd
cmp
repnz
addr16
cmp
in
mov
mov
xchg
ja
stos
out
cmp
mov
ss
mov
imul
stos
jnp
sub
jo
jle
push
les
jns
cmp
mov
imul
dec
lds
outsl
pop
arpl
pusha
mov
xchg
js
test
add
push
nop
push
and
loop
adc
or
mov
cmp
fwait
mov
int
mov
mov
aaa
into
xor
cmp
push
cmp
add
adc
adc
rolb
out
test
test
jg
lea
dec
xchg
insb
sbb
mov
out
loope
xchg
loope
call
sub
mov
sub
stos
xchg
jmp
test
and
jg
je
dec
ljmp
or
sub
jno
lods
and
inc
fimull
xor
adc
das
int
in
fldcw
inc
push
repz
adc
pop
into
mov
sahf
pop
inc
scas
xchg
xchg
cmp
rep
ffreep
fnstcw
pop
test
xchg
repnz
lods
xchg
mov
jo
fcompl
cmp
mov
mov
clc
les
xor
pop
ret
ror
add
gs
insl
pop
dec
test
sahf
mov
out
dec
call
jnp
fisubl
and
sub
add
xor
jae
mov
or
mov
fs
add
push
lock
test
test
addb
std
test
xchg
ret
andl
lret
loop
or
popa
sbb
shrb
test
imul
lea
push
cs
dec
mov
adc
and
decl
lret
ljmp
pop
mov
push
lret
outsb
inc
jecxz
in
xor
stc
aad
or
iret
mov
adc
js
xchg
push
cmp
add
xchg
imul
std
js
sbb
addb
mov
jbe
lret
pop
inc
jb
lods
jo
lods
dec
fisttpll
and
aam
data16
fwait
adc
xlat
dec
decb
les
add
fbld
loopne
pushf
leave
stos
xchg
in
sbb
mov
int
add
xchg
lcall
lret
and
and
fisubrs
cld
push
js
inc
stc
loopne
ret
adcl
loope
or
mov
sarl
cmp
fistl
ds
cwtl
ss
adc
mov
inc
pop
cmpl
incl
inc
pop
out
fld
bound
jo
inc
mov
outsb
fwait
sub
add
loope
xor
inc
dec
mov
sub
sub
dec
ret
sbb
and
mov
das
clc
push
ret
xchg
decl
test
mov
fisubrl
insl
dec
cmp
mulb
sub
xchg
push
jae
sbb
jmp
push
fnstsw
frstor
int3
cmpsl
dec
pop
fsubs
fwait
fs
addr16
jbe
scas
sbb
add
push
cwtl
sbb
sbb
mov
inc
lods
push
mov
out
rcll
xchg
pop
repnz
mov
pop
push
sbb
testb
ljmp
mov
test
scas
cmp
movsl
in
int3
inc
push
mov
mov
mov
mov
xchg
xchg
mov
sbb
inc
xlat
cmp
loop
push
sub
ret
pushf
cmp
cmp
jmp
or
add
adc
shr
mov
pop
jmp
or
inc
push
inc
fisubrl
xor
and
jnp
or
arpl
cmp
lods
repz
fistpll
mov
and
rcl
xor
pop
dec
shll
out
js
lahf
leave
dec
aad
xor
pop
mov
mov
dec
adc
push
mov
dec
or
nop
mov
cmp
aam
das
mov
rorb
inc
xchg
and
sub
sub
mov
popf
lods
les
add
clc
adc
xchg
mov
jmp
inc
inc
fdivl
sbb
adc
mov
mov
fldenv
jp
sbb
pop
or
std
xchg
sub
fisubs
dec
sbb
pop
pop
pushl
test
clc
jp
in
dec
fwait
shll
xchg
sbbl
jo
or
fwait
das
in
test
mov
inc
ret
fldenv
pop
ljmp
dec
popa
inc
push
jmp
or
mov
and
test
cmp
test
xchg
sub
mov
adc
add
inc
pop
mov
fcmovne
loopne
add
mov
and
push
out
gs
xchg
adc
sub
psrlq
and
mov
sbb
jl
jne
cmc
mov
push
fsubrs
sbb
aam
imul
inc
ljmp
out
add
in
dec
andb
pop
mov
pusha
and
dec
and
popw
fnsave
xor
je
hlt
inc
mov
scas
lds
fs
inc
lret
mov
dec
hlt
push
xchg
fisubrs
fwait
sti
fcomp
jae
cltd
jecxz
and
xchg
stc
fistpl
imul
cwtl
push
repz
sbb
shl
test
fsubrp
enter
pop
dec
pusha
xor
shll
aaa
sbb
xchg
mov
lea
or
jl
dec
xchg
pop
jbe
es
mov
lods
jmp
adc
sbbb
xor
mov
add
addb
fsubrl
dec
leave
flds
xor
sub
stos
es
push
fcoml
mov
xor
out
ss
jge
imul
mov
adc
xchg
push
push
push
test
scas
mov
or
jg
cmp
loope
pop
dec
icebp
pusha
inc
in
sbbl
or
rcrl
or
shll
xchg
pushf
lcall
inc
out
fnsave
hlt
addr16
mov
mov
cltd
mov
dec
sahf
pop
add
test
jne
xor
pop
ja
add
mov
lret
pushf
das
ds
cwtl
inc
cmp
loopne
mov
test
mov
stos
push
fstpt
cltd
xor
xor
int
in
sbb
push
mov
adcl
jmp
fistps
pop
lods
repnz
das
add
pushf
cltd
cmp
xchg
cmp
cmp
adc
in
add
cmp
xchg
jge
mov
andl
ret
inc
std
xor
scas
iret
xor
jbe
ljmp
mov
std
or
pop
std
aas
push
leave
loope
je
rclb
stos
inc
shrb
jecxz
enter
or
fs
inc
fcomi
adcb
in
subb
shll
addb
test
and
fnstenv
add
test
lret
xlat
jns
mov
mov
dec
inc
out
aad
push
pop
fisttpl
int
mov
test
mov
mov
call
dec
cmp
enter
cmp
das
repnz
movsb
dec
sar
mov
adc
xchg
out
jge
pusha
fimull
test
lods
data16
xchg
stos
sub
fwait
xor
imul
pop
cmp
push
pop
pop
sbb
sub
adc
cmpsl
inc
or
jmp
and
mov
adc
jb
fwait
mov
xchg
mov
lods
mov
cmp
or
and
xchg
mov
in
push
cmp
adcb
add
cld
pop
repnz
jecxz
xor
or
cmp
aam
mov
fisttps
popa
lea
sbb
xorl
aam
js
jne
and
mov
xchg
mov
iret
xor
lcall
mov
or
pushf
jecxz
mov
ja
int
mov
or
les
or
mov
lock
xchg
jecxz
jecxz
or
stos
xchg
push
pop
hlt
mov
add
arpl
adc
and
movsl
xchg
xor
push
in
cld
pop
xlat
mov
inc
push
es
dec
cmpsl
out
mov
shrl
push
decb
out
dec
insb
mov
and
dec
adc
lret
cmp
test
in
or
std
or
jp
dec
lods
pop
cmpsb
pop
das
das
shrl
xlat
rcl
repnz
mov
aad
cwtl
push
jb
mov
sub
popf
pop
dec
cmp
andl
inc
pop
dec
in
inc
sub
mov
jae
jp
int
div
push
sbb
pop
jmp
cmp
pop
out
or
or
push
outsb
dec
xchg
cmp
jle
mov
push
push
setne
popf
pop
adc
stc
jne
daa
inc
cmp
push
mov
arpl
loope
and
xor
inc
dec
popf
jge
xchg
inc
xchg
sub
adc
sub
push
fistpl
xchg
add
pop
dec
imul
push
rolb
pop
in
leave
je
mov
test
mov
sbb
pushf
fildl
mov
mov
jecxz
or
add
mov
mov
cwtl
cmp
and
in
fwait
pop
in
cmp
or
daa
jg
insb
nop
dec
dec
cld
mov
jo
notb
mov
sarl
arpl
mov
cmp
rclb
sbbl
push
push
into
adcl
sbb
cmp
and
xor
orl
pop
cmpsb
sbb
sbb
mov
daa
in
xor
cmpsb
shlb
loopne
push
divb
xor
shrl
leave
test
pop
test
jmp
add
rorb
add
pop
push
jg
arpl
and
bound
lock
push
je
pop
pop
outsb
inc
jle
int3
lahf
add
rcr
nop
xor
inc
push
not
adcb
pop
adc
fsub
cmp
lcall
mov
mov
mov
xchg
xor
les
and
hlt
sub
xor
cmp
or
out
cmp
fwait
xchg
sbb
xchg
lods
je
mov
pusha
and
in
test
aam
mov
dec
js
inc
cmp
push
mov
xchg
xlat
ljmp
cmpsl
inc
aas
mov
ret
repnz
adc
pop
test
xchg
mull
fistpl
mov
loop
and
pop
in
mov
scas
jno
cmpsb
jmp
pop
fdivl
data16
sarb
test
testb
cmpb
cpuid
mov
mov
lock
sbb
cmp
sub
mov
std
iret
sub
or
imul
jl
mov
or
or
pop
ljmp
ss
sbb
arpl
decl
outsl
fidivrs
in
negl
xchg
es
pop
popf
hlt
fstps
fmuls
inc
out
addr16
pusha
push
pop
shlb
fs
xlat
cltd
scas
imul
cld
inc
jg
push
pop
add
pop
adc
pushf
ret
push
inc
sbb
xchg
inc
popa
xlat
cmp
sahf
pop
fldl
stc
fs
loope
mov
pop
stos
js
pop
mov
adc
aaa
cmp
push
icebp
repz
xor
cli
add
das
lea
inc
dec
pop
add
sbb
pop
sbb
xchg
insb
fwait
lock
pop
scas
cmovo
mov
int
lods
lcall
pop
xlat
adc
push
jmp
pop
out
and
lret
es
bound
shrb
jo
inc
sub
cmc
push
shrb
or
mov
add
das
aam
loope
sti
xchg
lea
cmc
xor
int3
mov
mov
hlt
mov
les
cli
test
mov
adcb
inc
adc
add
arpl
sbb
xor
jle
ds
adc
inc
mov
adc
shrb
xchg
cltd
inc
ret
call
or
pop
sti
push
sbb
cmp
fists
pop
jmp
add
pop
push
or
in
mov
fistpl
cmovg
mov
pusha
xor
mov
rorb
shll
jo
cs
stos
lea
clc
xor
scas
xor
push
popa
pop
jge
push
lahf
adc
sbb
ret
or
cmp
stos
outsl
xchg
cld
int3
or
popa
sbb
inc
sbbl
or
pushf
xor
popf
cmc
or
leave
je
push
out
fcmove
scas
mov
pop
sub
or
dec
push
imul
icebp
std
insb
fcoms
mov
lods
jmp
sti
imul
cmp
pop
cmp
cmp
add
xchg
push
test
movsl
add
aad
or
popf
outsb
loope
pop
aaa
jb
pop
cmp
jecxz
pop
nop
xchg
mov
ret
mull
test
mov
mov
clc
in
inc
mov
out
aaa
mov
out
je
inc
inc
cltd
cli
out
xor
sub
xchg
mov
outsl
cmp
push
mov
xor
inc
lcall
fdivr
pmulhuw
add
xor
xchg
data16
sbb
sbbl
jg
ret
out
and
test
test
mov
pop
icebp
pop
sbb
xor
testl
dec
dec
std
mov
fsubrs
gs
push
fimuls
lods
or
push
mov
div
mov
sub
cmp
ficompl
jecxz
jmp
cmpsb
ja
fwait
inc
pop
cmc
icebp
xchg
push
xor
pop
xchg
push
mov
scas
outsb
divl
ret
pusha
mulb
fiaddl
popf
arpl
ret
iret
push
push
in
pushf
dec
mov
and
add
xor
sarl
repnz
xchg
pushf
jle
into
bnd
adc
push
stos
int
dec
std
inc
fnsave
shlb
clc
mov
dec
pop
or
push
lods
imul
push
out
xchg
lods
or
inc
test
in
bound
int3
mov
addl
jmp
xor
add
push
aaa
inc
adc
outsb
adc
fnstcw
popf
adc
push
inc
xor
cli
inc
mov
cltd
cwtl
or
mov
add
mov
into
fdiv
shl
mov
dec
loopne
aam
insl
mov
mov
fwait
and
call
mov
push
je
ljmp
jge
adc
icebp
and
sub
push
inc
jle
add
sub
sub
jmp
outsl
fisttpll
insl
stos
jno,pt
dec
adc
xchg
aad
clc
push
movsb
out
daa
aas
aam
clc
jo
cmp
sub
sub
pop
inc
dec
add
daa
fisubs
inc
js
pop
stos
pop
push
fmul
sub
and
push
rorl
and
mov
or
lret
xchg
aas
push
push
les
add
cld
lcall
jne
out
mov
insl
sbb
ljmp
cmc
addb
into
loop
cmp
les
or
ljmp
clc
fs
inc
xchg
cmpb
cli
test
mov
inc
mov
mov
fistpl
lea
pop
mov
lods
adc
fidivl
fidivs
or
rep
jle
dec
xchg
stos
mov
clc
int
cmpsl
sub
int
jno
test
movsb
xor
js
pop
xchg
call
mov
shrl
insb
mov
lods
ret
lcall
lcall
bound
outsb
ljmp
jmp
push
mov
pop
adc
sbb
decb
xor
add
insl
cmp
inc
or
hlt
in
xchg
mov
mov
cmp
xchg
pop
lods
sahf
mov
jae
lods
inc
rcll
mov
mov
out
dec
dec
fcomps
notb
out
pop
adc
movsb
inc
data16
mov
repnz
jmp
xchg
mov
clc
int
adc
push
insl
add
icebp
insb
jp
ret
jle
adc
fidivrs
test
sbb
inc
or
lea
xor
rcll
popa
addl
dec
mov
shlb
push
shr
jge
bswap
daa
movsb
cmpsl
aas
ret
mov
fisubl
fimuls
xchg
push
mov
notl
inc
jg
cmp
cmp
ja
jb
into
xchg
pop
adc
jmp
mov
push
mov
fucomi
insb
stc
add
push
dec
enter
pop
roll
mov
or
imul
xchg
movsb
mov
xchg
popa
faddl
lcall
ret
test
pop
cmp
xchg
inc
sbbb
stos
cmpsl
push
jecxz
ss
sub
cld
sub
ret
outsb
lcall
mov
mov
cli
inc
sti
mov
push
pop
cmc
fiadds
cmc
lahf
nop
jge
add
xchg
out
dec
dec
incb
cmp
loopne
cld
aam
fnsave
sub
bound
or
or
cmp
pop
fcomps
imul
sub
sahf
sbbl
and
leave
inc
mov
jge
jmp
jno
add
push
ss
not
ja
mov
mov
fidivl
sbb
jne
cmpsb
pusha
sbb
repz
addl
mov
out
dec
dec
lea
xor
sbb
jecxz
pop
out
jmp
mov
js
test
cmpsl
cmp
jp
rol
stos
in
imul
and
jbe
pop
das
ljmp
popf
sbb
inc
and
dec
xchg
rcrl
jge
xchg
es
cmp
dec
dec
loop
dec
inc
push
dec
iret
push
sub
push
dec
test
das
lea
sbb
outsb
cmc
jl
es
push
insb
sbb
xor
jmp
dec
pop
aas
aad
jmp
pop
jb
fidivl
or
aad
lcall
jl
mov
add
xlat
jno
mov
jle
jnp
dec
adc
dec
mov
mov
mov
pop
pushf
fsubrs
in
daa
mov
test
shlb
xor
sbb
mov
out
enter
mov
mov
jmp
jle
pop
enter
pop
ljmp
arpl
mov
push
inc
pop
bound
in
sbb
lds
cltd
test
orl
cmpsb
inc
lcall
and
inc
cmc
mov
pop
add
dec
adc
stos
inc
imul
sbb
cmpsl
loope,pt
adc
xor
pop
test
mov
sti
jp
adc
cs
cltd
js
mov
icebp
movsl
xorb
in
sub
mov
cmp
xchg
aam
pop
pop
mov
add
jno
filds
adc
imul
notl
jb
outsl
jp
sbb
bound
jnp
subb
jge
mov
xor
test
lods
sub
cmpsb
repnz
int
mov
fisubl
scas
cmp
sbb
test
scas
repnz
mulb
lods
or
frstor
pop
jno
push
xlat
roll
hlt
js
dec
sub
dec
dec
fadd
cmp
stc
stc
dec
loope
iret
push
sbb
pop
pop
scas
pop
lock
std
cmp
int3
insl
sbb
dec
sbb
shrl
mov
icebp
cmp
mov
cmpsl
sbb
iret
mov
push
inc
test
pusha
mov
test
test
lret
sbb
das
jge
xchg
inc
jmp
pop
in
inc
fsubr
imul
or
jne
mov
repz
jae
inc
bound
lds
imul
mov
push
insb
fstps
xor
jns
mov
por
clc
test
loopne
not
xchg
fdivs
ja
jle
mov
notb
push
into
inc
sahf
sub
incl
xchg
lcall
cli
test
stos
das
sub
push
push
enter
jmp
repz
jns
cmp
xchg
push
movsl
adc
mov
push
push
push
xor
or
popf
xor
xchg
inc
xor
mov
mov
popf
cmp
mov
add
fcmovne
push
push
std
mov
repz
inc
inc
popa
cli
lahf
clc
rcrl
or
movsl
sub
xlat
dec
in
cmp
sub
je
or
inc
sbbb
mov
mov
addl
mov
in
sbb
shl
cmp
sbb
pop
pop
repz
call
add
xor
inc
into
out
js
cmp
stos
mov
lcall
out
jp
adcb
int3
sbb
shrb
pop
js
lock
shll
mov
and
dec
test
add
sub
cmc
mov
inc
adc
jle
fdivl
xchg
or
push
mov
xchg
add
xlat
push
fwait
aad
mov
es
hlt
lock
das
std
mov
jle
xchg
push
jno
shl
mov
pop
jle
sbb
dec
mov
lds
aaa
dec
pop
imul
mov
inc
fs
mov
popa
add
out
roll
dec
add
add
and
cltd
popf
test
outsb
add
imul
mov
mov
inc
dec
das
in
xchg
or
jns
dec
aaa
dec
adc
inc
imul
push
push
shrb
into
fidivs
jg
dec
pop
lret
lods
add
push
inc
lcall
and
inc
stos
mov
mov
test
popl
jecxz
jb
cmp
inc
sarl
xchg
loopne
testl
lahf
pause
daa
and
mov
xchg
cmpsb
xor
jb
cmp
fstl
mov
xchg
addr16
cwtl
mov
sti
in
shrb
mov
repnz
je
and
inc
sbb
mov
pop
sbbb
out
jae
arpl
sbb
insb
xchg
scas
xchg
icebp
scas
mov
jg
sti
shlb
shrl
push
popa
es
sub
in
insb
cmp
leave
pop
les
push
out
psrlq
xor
inc
mov
lock
enter
ret
fidivs
add
dec
dec
sti
aaa
pushf
jae
fistps
lods
idiv
pushf
sub
cmpsb
push
mov
rolb
fnsave
les
imul
inc
ficompl
mov
xor
xchg
fstpt
call
cmc
pop
lods
push
daa
xchg
jno
jg
das
push
or
enter
sti
nop
sub
mov
scas
inc
call
int
rorb
and
bound
das
xchg
repnz
pushf
daa
shl
lcall
xor
mov
pop
add
sub
jl
fstpl
xchg
xlat
insb
add
dec
cmp
insl
loop
and
or
mov
repnz
mov
js
push
nop
pop
xor
xchg
and
xor
sbb
cmc
adc
xchg
sub
sub
push
gs
jb
xchg
sub
dec
cmp
sub
adc
push
out
mov
outsb
add
mov
leave
push
add
mov
aaa
pop
pop
xorb
adc
sub
mov
inc
sub
sbbl
jg
xchg
pop
jbe
aam
dec
push
adc
mov
pop
out
push
add
fs
jmp
repz
stos
sbb
pop
in
test
and
ficomps
push
rol
sbb
mov
lahf
mov
jmp
or
xor
gs
movsl
enter
fnstcw
mov
adc
test
jne
and
mov
adc
xchg
mov
cmp
insl
test
push
fstpt
enter
or
and
sub
mov
cmpsb
mov
add
xlat
sub
or
je
xchg
call
jbe
push
cwtl
sbb
bndstx
push
push
dec
dec
loopne
ss
jo
repnz
fisubrl
lret
mov
xchg
pop
imul
xor
jg
shl
lds
movsl
aad
jge
mov
fdiv
cmpsb
into
add
mov
ja
cwtl
cmp
pop
jmp
inc
fsubl
aas
scas
fdiv
or
cmp
sbb
insb
into
enter
adc
mov
roll
sbb
or
neg
in
pop
jbe
shrl
xchg
dec
je
and
push
stc
shl
mov
sar
jnp
outsb
sarb
lods
mov
push
push
jmp
sub
jno
inc
dec
outsb
sti
outsb
mov
and
jg
or
movsb
rclb
addb
xchg
jle
pop
insl
inc
xchg
arpl
and
push
jg
mov
pop
dec
pop
cmpsl
out
mov
fstps
pusha
lret
dec
int
pop
xor
stos
sahf
loopne
inc
out
mov
in
cmp
jnp
jge
rcl
daa
fdivl
dec
xor
popf
or
mov
rol
popa
jl
xor
push
mov
stos
push
sub
mov
call
rorb
cmp
pop
ja
pop
xor
lcall
insl
push
sti
loop
pop
enter
cli
pop
xchg
sub
test
cltd
in
dec
add
xchg
add
dec
movsw
std
push
subb
sub
ja
sbb
ds
gs
repnz
addr16
fnstcw
sub
jo,pn
xchg
jno
rcll
xchg
popl
mov
in
inc
or
mov
fidivrs
add
ljmp
das
in
sbb
sub
xor
int
dec
test
das
jns
ficomps
jge
push
cmp
add
mov
mov
in
aam
dec
testb
cld
sbb
jmp
sub
pop
and
mov
int3
sub
fwait
or
dec
in
jnp
gs
outsb
and
sub
cmp
inc
dec
hlt
adc
out
adc
xor
ljmp
lahf
push
popf
sbb
jnp
cmpsl
lods
addr16
xchg
insl
test
push
jl
sub
rcrl
test
mov
jl
cmovle
jge
lret
lret
push
dec
movsb
jnp
xchg
add
pop
adc
cmp
push
jb
jl
inc
sbbl
test
cli
push
mov
inc
cwtl
push
outsl
mov
mov
lcall
push
outsl
lcall
mov
adc
mov
pop
out
lea
imul
clc
mov
sarb
adcb
push
inc
jbe
xchg
mov
out
insl
cmp
out
addsd
mov
js
lcall
pop
push
xor
cmp
and
sub
shrb
outsb
pop
mov
and
ret
movsl
xchg
ficoml
dec
sub
push
ret
adcl
cmpsl
movsb
pop
push
add
xorb
loope
mov
shll
popa
loopne
xchg
add
adc
out
bound
push
xchg
jbe
push
stc
mov
mov
cmp
xor
cmp
mov
dec
xchg
xor
pop
outsl
cs
xchg
inc
in
and
cli
mov
adc
cmp
or
and
ret
xchg
xor
dec
mov
lock
lock
lods
loope
pop
not
subl
cmp
jns
ret
sti
out
bound
xchg
adc
push
xor
arpl
jp
mov
fsubp
jl
jecxz
inc
mov
stc
out
outsl
mov
mov
aas
dec
push
mov
sahf
std
xchg
cmpsb
lds
cmp
idiv
mov
push
sbb
xchg
dec
add
mov
jmp
mov
call
fstps
mov
fcoml
add
adc
or
in
clc
sbb
out
aad
inc
cli
outsb
jns
jge
or
cmp
and
cmp
movsb
lods
pop
adc
into
inc
pop
and
mov
adc
push
subl
jnp
in
push
dec
jmp
insb
mov
jl
xchg
rorl
fwait
inc
cs
jne
js
shrl
test
jae
and
mov
mov
shr
rcll
jne
xor
adc
out
aaa
inc
jns
mov
sbb
add
shlb
pop
repnz
lahf
into
adc
mov
sub
popf
stc
xchg
xor
shrl
or
sbb
sbb
test
insb
sub
or
adc
xchg
pop
out
or
sbbl
and
cwtl
and
int
mov
pop
aaa
push
sub
out
xchg
das
fs
stc
mov
xchg
ja
in
rclb
xor
lret
push
xor
push
out
push
sbb
mov
push
ficoml
addl
in
fs
ret
setne
add
mov
adc
ficoms
jb
lock
xchg
fwait
push
mov
add
cmp
xchg
xchg
sub
movsl
lods
mov
fidivl
nop
std
jecxz
int
xrelease
xor
fisubl
or
inc
lods
lods
jecxz
sahf
push
dec
das
jl
mov
in
cmp
imul
pop
call
pop
out
add
inc
mov
and
js
inc
push
cmpsl
sbb
fstpt
cmp
lret
xlat
movsb
mov
aas
enter
sub
fimuls
sti
gs
shll
loopne
jmp
xchg
sbb
pop
sahf
push
lcall
push
or
hlt
push
inc
pop
mov
add
mull
xchg
adc
cmp
sbb
dec
pop
cmp
rcrl
jnp
xchg
and
mov
mov
lods
icebp
jae
pop
call
les
xorb
push
mov
leave
push
repz
add
cmpsb
cmp
inc
fsubrp
aam
dec
lock
dec
mov
jl
faddp
sbb
test
pop
jnp
out
sarb
or
insl
xchg
cs
jl
lahf
mov
hlt
insl
stos
outsl
leave
or
scas
mov
xor
int3
fidivrl
fmull
mov
jne
push
iret
icebp
jg
inc
push
inc
push
loopne
lds
mov
cmp
push
or
in
dec
adc
sub
call
inc
out
lahf
xchg
push
mov
sbb
js
cld
mov
jl
outsb
xor
dec
mov
fimull
pop
idivb
addb
or
and
sub
shrl
dec
int3
inc
cli
negb
daa
mov
dec
pop
popa
and
xor
scas
and
outsb
add
mov
dec
call
fsubl
jp
cmp
in
push
popa
jle
xchg
jno
and
pop
add
mov
call
add
ds
inc
not
xor
or
out
sub
pop
in
dec
out
int
mov
fstp
pop
addr16
inc
aas
shlb
xchg
pop
lock
pop
mov
int
add
mov
inc
mov
push
lahf
andl
mov
push
fbstp
mov
sbb
iret
jecxz
cld
sahf
ss
mov
sti
mov
or
je
xor
lock
mov
sbb
sub
xchg
outsb
xchg
sub
mov
xor
dec
sarl
shlb
movsl
movsl
jmp
int3
xchg
lret
aad
mov
loopne
icebp
xchg
push
mov
pop
mov
loop
cmp
imul
loope
lods
call
test
pop
and
jae
call
mov
sahf
lods
jae
nop
out
xchg
xor
fsubrs
neg
out
jle
ljmp
jmp
cmpsl
and
xor
repz
dec
mov
add
in
inc
in
stos
test
sub
xor
fildll
mov
cld
add
test
in
push
push
fstpl
push
out
mov
xlat
add
mov
jp
sub
data16
cwtl
and
lcall
inc
stos
or
push
fmuls
push
mov
sahf
clc
mov
fcmovb
pushf
mov
test
cmp
stc
or
push
jg
ret
pop
mov
hlt
je
in
and
xchg
add
notl
std
and
jg
xchg
cltd
cmpsl
ret
int
push
imul
jmp
jmp
dec
xor
ds
inc
mov
dec
jle
out
mov
fidivrl
sbb
inc
sbb
xor
xlat
sub
gs
mov
or
nop
and
xchg
or
or
sub
in
cwtl
sub
pop
or
aam
jae
cmp
pop
addr16
push
aaa
stos
xor
sub
test
inc
aaa
int
push
push
push
mov
xchg
ss
push
mov
es
mov
adc
popa
lret
loop
inc
push
inc
push
lock
cmp
notb
and
pop
and
push
dec
adc
repz
loope
enter
pop
scas
mov
mov
ret
test
push
xor
add
and
repnz
cmpsb
lcall
fisttpll
push
jmp
jl
cmp
notb
outsl
mov
ret
dec
inc
pop
cmp
into
xchg
xor
push
push
pop
ss
ja
cmpsl
bound
icebp
sbb
dec
adc
loop
sarb
or
sub
push
cs
xorl
xlat
cmp
mulb
push
aaa
les
pusha
or
adc
ret
jmp
sub
dec
jg
sahf
pop
mov
add
fdivl
sub
cmpsl
jecxz
mov
add
repz
std
test
mov
xor
push
push
adc
lahf
add
or
adc
sbb
sbb
imul
mov
fcompl
add
and
mov
mov
pop
sahf
xorl
daa
out
loopne
cltd
pop
mov
loopne
ror
lahf
rol
gs
es
sbb
in
xor
ja
pop
dec
repnz
fbstp
pop
aaa
mov
mov
add
mov
popa
fidivs
out
pop
cmp
pushf
cld
dec
inc
js
dec
sbb
lock
adc
arpl
adc
fmuls
add
lods
xchg
lock
stos
inc
mov
and
es
fisubrl
mov
sarl
aas
fs
out
mov
add
inc
adc
sbb
pop
call
add
outsl
arpl
xor
orb
test
dec
mov
fsts
sub
ret
outsl
jae
xchg
outsb
and
jmp
push
subb
scas
sahf
or
movsb
push
repz
jo
and
nop
adc
add
stc
iret
stos
mov
fdiv
cmp
push
pxor
aaa
xchg
xor
stos
in
mov
test
test
daa
daa
leave
cs
lock
push
lods
push
mov
xchg
jl
outsl
push
pop
mov
dec
jo
into
push
rcrl
aaa
push
xchg
adc
fisubrs
dec
fsubl
orl
sub
cwtl
lods
icebp
dec
cli
cs
imul
push
bound
lcall
mov
std
push
rcl
setns
push
jp
adc
pop
ss
out
add
popa
pusha
adcb
shll
push
push
push
xchg
cli
or
lahf
or
mov
call
lds
push
mulb
pop
add
pop
lcall
loopne
push
jg
sub
mov
cmp
popa
out
xchg
jb
int
mov
sub
dec
mov
jl
and
dec
pop
dec
orb
xlat
and
jl
mov
addr16
mov
or
push
xchg
dec
rolb
int3
jo
adc
and
lds
add
lea
sbb
mov
stc
cmp
in
sub
clc
fdivs
imul
lods
jg
outsb
xor
push
gs
jle
push
xchg
mov
cli
push
mov
ja
test
xchg
push
jbe
int
shrl
test
mov
adc
jo
cmp
and
add
stc
mov
loop
testb
or
rcr
stos
jae
out
lcall
ss
sti
jge
or
add
out
cmpsb
repnz
cmp
jo
jae
scas
sub
lock
pop
cltd
xlat
mov
mov
push
aaa
mov
out
jl
fimull
sub
insl
insl
pop
bnd
cltd
sbb
inc
jo
push
daa
xchg
faddp
mov
cli
inc
sub
jno
das
fdiv
insl
fcmovb
hlt
call
xchg
push
aas
test
in
testb
repnz
imul
push
orb
pop
loopne
add
mov
daa
xchg
sbb
das
outsb
inc
cmp
pushl
pop
xchg
rcll
rclb
jecxz
lea
clc
cmp
mov
cmpsl
filds
mov
add
push
loopne
mov
mov
jecxz
shrl
call
repnz
call
js
mov
movsl
add
pop
jl
pop
mov
shl
andl
xchg
stc
jae
insb
sahf
out
sbb
decb
repnz
jl
sbb
sbb
shll
add
xchg
push
mov
sbb
scas
popa
push
fwait
gs
jb
xchg
andps
sbb
les
out
icebp
jae
mov
movsl
inc
mov
xchg
fisttps
scas
cmc
ficompl
out
or
or
in
mov
ljmp
pop
gs
xchg
flds
mov
repnz
in
out
lods
sub
cmp
jns
mov
mov
outsl
inc
fcompl
enter
mov
mov
push
das
mov
ret
inc
xchg
jecxz
or
sub
xchg
scas
sti
mov
repnz
inc
lret
fildll
fmuls
test
icebp
mov
mov
jae
popf
inc
fnstenv
out
mov
rcrl
je
in
adc
xor
clc
cmp
fwait
sbb
repnz
arpl
stos
cmp
xchg
mov
mov
sub
test
imul
and
inc
pop
repnz
mov
sbb
add
test
push
sub
mov
es
push
test
sub
jecxz
in
insl
push
fidivs
sub
jecxz
in
fwait
aas
call
lea
mov
data16
mov
xchg
and
mov
xor
push
mov
pushf
jp
dec
cmp
loopne
test
fisttpl
out
das
js
pop
adc
aad
dec
and
push
add
fiadds
cmovge
dec
mov
adc
add
dec
mov
xor
shlb
jp
into
insb
or
mov
popf
jge
inc
int3
mov
pop
aaa
cmpsb
sbb
pushf
outsl
leave
fcmovb
test
or
inc
lods
or
dec
cld
pop
in
and
fistpl
cli
cmp
ja
outsb
movsl
mov
dec
loop
xchg
imul
inc
mov
sbb
dec
fstpt
and
and
jp
mov
fbld
shll
pop
imul
scas
fwait
mov
pop
push
mov
add
test
pop
out
or
pushf
dec
sub
push
pop
sbb
push
push
mov
inc
pop
push
jecxz
jp
jp
movntq
mov
lock
jecxz
ds
adc
hlt
movsb
dec
cmp
push
repnz
fimull
in
sub
int
out
jne
push
push
cmp
fcomip
je
jle
aas
bound
in
push
add
aaa
sub
lcall
vzeroupper
neg
cmpsl
ds
shll
aam
inc
lds
int3
in
fwait
fs
out
mov
xchg
mov
cmc
pop
cwtl
das
or
add
popf
hlt
mov
fisttpll
adc
mov
inc
sbb
mov
fisubrl
mov
std
ret
hlt
push
fwait
push
cmp
in
mov
adc
cmp
pop
xor
inc
xchg
push
jnp
or
mov
inc
loopne
lea
shlb
mov
sti
inc
scas
sub
mov
sbb
enter
scas
lods
in
ds
inc
and
sarl
lret
rcl
imul
in
cmc
sbb
aad
clc
movsl
mov
or
out
xor
movsb
cli
xchg
and
mov
fdivrp
dec
or
fimull
mov
add
xchg
lret
jae
les
xchg
adc
enter
fmull
ret
gs
pop
out
lea
cld
push
mov
mov
jecxz
out
movsl
aas
xor
mov
notl
fsubl
add
mov
mov
int3
addb
mov
inc
test
stos
sub
fldcw
je
push
adc
fs
push
repz
and
test
loop
pop
adc
push
cwtl
fisubs
sbb
mov
insb
dec
cmp
xor
mov
mov
mov
cmp
std
ljmp
or
sbb
sub
sub
inc
cmc
sub
pop
add
xchg
and
xlat
shlb
mov
imul
hlt
mov
sub
fldl
or
mov
negb
sub
pop
cmp
adc
fcmovne
sbb
movsl
cmp
mov
aam
mov
dec
cmc
shl
lods
jge
mov
dec
dec
pop
mov
sbb
mov
mov
repnz
rorl
cmpsb
xchg
arpl
arpl
mov
mov
test
js
fs
mov
imul
push
pop
mov
movsb
rol
mov
roll
test
push
pop
jle
addr16
cmp
add
mov
push
cs
shl
mov
dec
out
pop
cmp
outsb
sub
xor
cmp
in
outsb
popf
push
daa
jmp
rorl
xchg
jae
shlb
and
xchg
dec
or
mov
enter
movsl
lret
arpl
loope
stos
cmp
outsl
jnp
out
xor
out
mov
jae
mov
mov
adc
jle
pop
jecxz
jae
das
jl
add
scas
dec
pop
out
jg
mov
arpl
adc
adc
jns
dec
mov
push
mov
repz
adcb
mov
dec
xchg
mov
cmc
sub
sub
loop
xor
xor
inc
divb
loop
inc
xchg
ljmp
mov
mov
shr
std
addr16
mov
cltd
jle
add
fs
test
sbb
mov
push
fiaddl
into
pop
call
lret
and
hlt
cs
pop
jecxz
xor
fdivl
mov
mov
or
cli
cmp
mov
daa
sbb
jmp
mov
fsubs
nop
stos
jmp
mov
cmp
stc
stc
call
shl
push
cli
mov
mov
lret
vpunpckhwd
popf
movsb
ror
es
dec
call
push
sub
inc
or
dec
sarb
inc
ljmp
xor
mov
popa
jecxz
xchg
jns
xor
dec
jecxz
inc
xchg
cwtl
shl
sub
push
scas
repz
imul
es
jmp
out
xor
ret
psubsb
ja
push
test
mov
add
mov
sub
outsl
ficompl
sbb
or
cmp
cmpsb
dec
das
mov
xor
popf
or
mov
jge
adc
dec
dec
in
jns
xchg
pushl
lock
and
xchg
or
out
fs
sub
pusha
outsl
ds
mov
lcall
pop
outsl
xor
inc
sbb
cmc
xchg
cmp
popa
stos
or
and
sbb
xchg
sub
push
push
int
insb
or
cmp
bound
ficompl
or
or
lods
fcom
imul
in
mov
sbb
mov
jbe
inc
cwtl
sub
repz
inc
test
dec
mov
leave
pop
mov
scas
sub
loopne
xchg
cs
add
scas
into
int
sub
ds
movsb
mov
jnp
adc
or
hlt
lret
aam
roll
sub
or
and
cld
push
cwtl
push
jmp
ficoml
in
jne
dec
xor
aas
jge
scas
in
mov
and
mov
fwait
dec
setbe
push
call
pop
lret
rorl
sub
dec
mov
aad
fld
add
pushf
sub
pop
loope
std
adc
scas
xchg
jg
jb
daa
movsb
shr
xor
mov
push
and
and
inc
arpl
mov
call
stos
icebp
adc
lret
add
sbb
pop
mov
test
fwait
lds
xor
mov
hlt
iret
flds
testl
xchg
je
out
or
pop
repnz
inc
pusha
and
pop
test
int
out
scas
pop
incb
enter
jns
xor
mov
mov
cmpsb
dec
jns
insb
xchg
pop
xor
sbb
outsb
sbb
mov
cmp
add
arpl
lret
das
testl
out
xor
lods
push
sub
inc
int
cld
aad
insl
ss
cmpsb
push
push
jg
xor
out
in
out
xor
fdivrp
mov
test
out
push
lret
jne
popf
inc
fimuls
pop
mov
in
fsubr
dec
cmp
or
out
iret
popf
dec
movsb
shlb
shlb
dec
test
xor
jnp
negl
insb
add
imul
adc
jbe
mov
in
inc
jp
je
xchg
pusha
cmc
lods
leave
or
or
insb
or
or
lret
push
je
ja
push
mov
push
xor
nop
jo
xsaveopt
popa
xor
and
lahf
mov
push
in
mov
adc
jmp
ljmp
mov
dec
mov
push
push
int3
fcomp
iret
mov
add
arpl
mov
mov
and
add
scas
fs
push
outsb
cmp
xor
daa
mov
xor
cli
inc
sub
mov
stos
lods
add
int
and
xor
sahf
lock
dec
mov
cli
daa
mov
in
pop
bnd
jmp
dec
mov
or
jp
imul
sbb
das
or
popa
lahf
dec
fnsave
repnz
lcall
jno
sub
and
es
call
je
ljmp
es
mov
pop
push
dec
pusha
dec
movsl
xor
test
xor
jbe
test
adc
pop
in
fstl
ret
and
andb
or
cmp
xchg
sub
push
fisttpll
movsb
sbb
pop
movsl
icebp
cmp
ret
sbb
subl
lods
imul
adc
fcoml
sbb
dec
mov
scas
cltd
test
nop
cmp
mov
xchg
inc
push
fnstenv
call
clc
dec
cmp
push
lods
pop
jmp
jge
movsb
sub
lcall
pop
xor
lds
aas
out
cmp
loop
pop
movsl
xchg
pop
push
in
shll
lds
test
std
cwtl
shlb
xadd
xlat
repnz
mov
push
jns
enter
cmpsb
mov
inc
sahf
test
inc
cld
fwait
xchg
dec
in
mov
adc
push
in
jbe
xchg
enter
cmp
insb
jno
inc
les
arpl
notb
shrl
push
push
inc
mov
cmp
fstpt
pusha
mov
sub
push
and
dec
mov
cmp
loopne
add
add
jno
jb
mov
sbb
lcall
movsl
jge
ror
push
pop
dec
cli
movsl
ret
repz
cmp
dec
or
xchg
push
in
data16
xchg
jmp
lret
or
pop
pop
fsubrs
mov
dec
add
cmc
mov
sub
mov
jge
add
push
and
adc
cwtl
or
jns
aad
pop
jno
jg
jge
mov
sub
imul
ss
inc
jp
dec
mov
sub
mov
lcall
out
lods
mov
inc
jmp
add
sub
test
or
mov
mov
jle
lock
push
mov
sub
and
icebp
adc
or
push
xor
cltd
int
fadds
fwait
scas
testl
cmpsb
dec
push
mov
call
cmp
aaa
push
xchg
into
inc
xorb
rorl
add
jg
adc
jb
jle
adc
out
jmp
sub
and
sub
cmp
arpl
ret
sub
popf
or
lcall
adc
adc
push
int3
mov
ja
xchg
cmp
mov
push
addr16
pop
sti
stos
pop
add
mov
mov
pop
repnz
inc
mov
jb
jns
pop
mov
stos
inc
shll
dec
inc
in
aad
push
xchg
push
pop
xchg
lret
jnp
jmp
add
outsb
or
imul
std
into
sbb
ds
out
test
fcmovne
cmp
cmp
rcrl
xchg
and
je
pop
or
lret
enter
clc
fmull
mov
pop
pop
ja
adc
rcr
lret
and
pop
mov
xor
scas
ja
loopne
enter
xchg
stos
mov
in
sub
hlt
mov
add
xchg
mov
fistl
out
lcall
dec
or
xchg
sbbb
xlat
pop
mov
icebp
pop
mov
sti
push
je
and
cwtl
sub
fildl
sbb
rcll
out
scas
pop
out
fsubs
jmp
sbb
or
sti
mov
sub
and
add
pop
inc
mov
push
lcall
mov
roll
push
cwtl
adc
popa
das
gs
inc
adc
sub
jbe
sub
in
lock
dec
aad
dec
cli
in
push
testl
add
jge
out
adc
xchg
pop
add
sbb
and
push
shl
stc
sti
jnp
fdiv
mov
pushf
and
cld
iret
xchg
inc
arpl
je
dec
lods
mov
movsb
std
insl
or
mov
sbb
sbb
ret
mov
push
aam
cmp
rcrl
inc
dec
ja
ds
scas
fsts
inc
aas
xor
push
shlb
test
in
fs
mov
pop
sub
sub
add
test
movsw
sub
adc
mov
test
iret
and
lret
push
push
cmp
or
push
fidivs
inc
mov
xor
les
mov
mov
add
das
sub
and
mov
pop
andb
sub
adc
jne
cmp
cmpsb
int3
dec
push
jns
mov
jmp
pop
sub
pop
int
xlat
das
push
xchg
clc
jmp
movsb
loope
mov
mov
or
lcall
inc
xchg
sub
fcomps
dec
lock
xchg
and
fisubs
lock
stos
js
adc
or
dec
pop
and
leave
push
aas
addl
popa
aam
push
addr16
mov
rclb
mov
lahf
ss
sub
cmp
mov
lods
in
mov
jnp
add
and
sbb
outsl
lds
and
pop
shll
mov
repnz
jl
jns
hlt
int3
push
jg
mov
in
xor
sbb
add
adc
or
inc
mov
punpcklbw
fnstcw
xchg
in
js
jle
dec
cmp
pop
xorl
adc
push
sbb
mov
adc
stos
adc
jl
sbb
sub
clc
leave
aas
mov
outsb
rorb
pop
or
pop
mov
adcl
sub
pop
cmp
movsl
out
sbb
or
je
jecxz
das
test
loopne
and
sub
mov
adc
push
in
jp
adc
cmc
xorb
cmp
outsl
test
fiaddl
adc
mov
xchg
push
jb
cmpsl
cwtl
pop
fdivr
xchg
xor
sbb
popa
push
movsl
dec
and
push
imul
shl
mov
movsb
imul
popa
icebp
push
fwait
lea
dec
push
loop
enter
adc
or
or
mov
into
sub
or
inc
test
inc
jl
movsb
shlb
fs
ljmp
cmp
incb
pop
fcmovnu
into
mov
shlb
push
aam
stos
dec
aad
outsb
pop
imul
test
out
outsl
inc
arpl
xchg
sbb
sti
imul
sti
lds
pop
cmpsl
push
xchg
cmp
sub
add
cmp
mov
xlat
dec
cmp
push
popf
dec
loop
or
outsl
xchg
insb
imul
mov
adc
jge
pop
insl
xor
push
jns
repz
das
fcmovne
clc
rorl
xchg
lcallw
test
sbb
lock
cmp
jb
cmp
cmp
xchg
test
adc
arpl
sub
mov
repnz
sbbb
test
sbb
jl
push
inc
rorl
outsb
sbb
fnstenv
dec
flds
pusha
pop
hlt
xchg
adc
pop
xchg
sub
test
mov
nop
dec
pop
adc
xor
in
and
sbb
sbb
paddq
shrb
jg
stc
mov
cltd
cmp
adc
mov
mov
cmp
into
int3
out
inc
cltd
movsl
adc
cmpsb
cmp
add
adc
xor
mov
xor
xor
lahf
movsl
push
and
mov
sub
repnz
shll
mov
push
cmc
adc
adc
sub
fisttpll
ret
xchg
fstl
in
lods
push
jbe
daa
xchg
xchg
daa
inc
push
add
cmp
lds
push
push
jle
cmp
dec
movsb
jl
mov
shrb
cmp
inc
mov
setns
sbb
and
lea
pop
mov
daa
mov
pop
testl
std
out
dec
pop
mov
inc
cmp
dec
icebp
pop
out
xchg
stos
inc
leave
in
jmp
mov
leave
loope
sbb
mov
shll
pop
pop
adc
mov
hlt
mov
clc
dec
mov
mov
mov
cmp
mov
push
in
or
dec
test
out
leave
mov
mov
dec
cmp
add
rorb
cmpsl
or
dec
testl
inc
adc
jne
push
adc
xor
int3
jae
loope
jns
ja
fstpl
push
mov
das
pop
test
shrb
jmp
mov
sahf
sbb
cmp
sbb
xchg
outsl
xchg
mov
inc
icebp
push
jp
push
mov
icebp
xor
and
rcrl
ffree
pop
mov
je
cmpsb
pop
outsb
out
jge
lds
cli
insb
lds
call
and
xchg
lods
mov
pop
loopne
in
incl
imul
mov
in
xchg
popf
jns
stc
out
inc
loop
aam
mov
lods
nop
enter
jmp
push
jle
inc
mov
je
push
mov
inc
sub
jae
popa
and
aad
pushf
sti
movsb
aam
rolb
jns
es
cmp
insl
fwait
in
lds
jb
popa
mov
dec
insb
movsb
push
add
mov
jno
pop
call
clc
cmpsb
rcll
pop
insl
push
sub
jnp
add
mov
adc
in
cmpsb
dec
out
bnd
adc
roll
and
ret
leave
les
movsb
xchg
mov
mov
fbstp
nop
aad
ret
cmp
inc
test
mov
pop
test
lock
rclb
mov
sbb
loop
js
xchg
cmp
xorb
and
mov
pop
xchg
shrl
and
and
pop
shlb
dec
lods
mov
and
cmc
pop
iret
sub
jne
daa
aad
hlt
ljmp
cmc
mov
jmp
push
push
jp
subl
fs
pop
xlat
leave
fnstenv
mov
fnsave
adc
arpl
outsl
and
pop
repz
sti
push
movsl
sub
xlat
adc
subb
xchg
daa
stos
les
push
int
popa
cmc
out
add
in
add
sub
aas
mov
xchg
in
sbb
fmuls
cmpsl
out
clc
jp
loop
pop
sbb
pop
loop
dec
clc
dec
cmc
cmp
mov
pop
cmp
xchg
inc
lcall
arpl
pop
data16
flds
mov
shrl
orl
outsb
cltd
pop
addr16
bnd
adc
mov
lret
sub
sti
stos
add
mov
push
js
daa
and
out
bound
aaa
xchg
cmpsl
inc
pop
minps
mov
icebp
aas
ja
inc
mov
jo
rorl
cwtl
xor
push
inc
push
in
testl
cld
mov
std
mov
scas
xchg
push
das
lcall
rolb
pusha
push
pop
xor
pop
jb
add
cs
aam
divl
sub
ds
pushf
vpaddb
fldenv
sub
xchg
and
fstl
test
fdivl
jmp
fwait
xor
int3
jg
scas
inc
jle
jne
sbb
into
or
inc
les
jge
js
or
mov
imull
test
push
xchg
mov
or
popa
clc
push
daa
iret
xchg
aad
lcall
push
cli
pushf
fistpll
xchg
and
push
cmp
test
push
xchg
adc
sub
jo
cmpb
push
lcall
cmp
push
fcmovnbe
mov
mov
jae
nop
outsl
cmpsl
loop
nop
int
rorl
sub
jns
bound
outsb
or
sbb
dec
inc
rcrl
add
clc
sub
pop
lock
mov
xchg
xchg
sub
ljmp
cmpsb
jmp
out
xor
adc
and
arpl
pop
test
stc
adc
or
sarb
cld
iret
or
push
push
adc
sbb
insl
test
imul
iret
and
jnp
pop
mov
xor
pushf
xor
jnp
outsl
pushf
xor
and
fcompl
inc
bound
or
inc
cmpsl
inc
sarl
mov
dec
outsb
shlb
movsl
inc
push
loop
cmp
stc
lcall
test
outsb
fsubr
fwait
xchg
das
cs
loope
sub
dec
out
cmpb
test
mov
push
je
int
push
cltd
shrb
mov
or
insb
shrl
pusha
push
inc
fs
cmc
movsb
pop
and
push
adc
inc
mov
popa
fsubr
adc
xor
cmp
imul
push
fnstsw
lret
test
pop
bound
sbb
jmp
and
test
arpl
inc
adc
stos
xchg
push
mov
js
sbb
insb
pop
out
call
data16
or
push
inc
sbbb
adc
jb
push
lods
movsl
icebp
or
sar
push
inc
and
lret
leave
inc
fiaddl
out
in
inc
test
mov
fcmovnbe
pop
xor
push
pop
xchg
cmpsb
dec
loop
push
test
popf
push
xchg
mov
mov
add
aaa
mov
out
add
adc
ficomps
xchg
add
out
test
xchg
xor
pusha
stc
dec
icebp
lock
ds
lahf
test
movsb
jp
out
jl
add
add
pop
stos
fistps
mov
fstpt
mov
in
jmp
sub
lcall
push
scas
jp
loopne
decl
mov
or
cmpsl
dec
lahf
mov
xchg
jp
sub
jg
in
adc
sbb
ljmp
neg
mov
fdivl
inc
gs
xor
and
cld
pop
dec
test
push
addr16
pop
and
loop
mov
pop
inc
jmp
insb
jmp
ljmp
jecxz
xor
jo
pop
xor
es
cmp
jnp
bound
xchg
fs
in
inc
pop
mov
addr16
pop
mov
sub
arpl
add
sub
jp
icebp
jecxz
inc
and
inc
lcall
sbb
enter
ds
cmpsl
mov
fnstenv
test
rolb
insl
pop
int3
mov
mov
imul
lahf
mov
mov
ds
adc
inc
paddq
insl
stos
xlat
out
cmpsl
jge
add
sbb
ucomiss
cs
cmp
xchg
call
dec
mov
push
test
sub
lahf
mov
adc
xchg
gs
jecxz
jecxz
and
push
andb
std
inc
fwait
nop
mov
loope
add
clc
xlat
pop
push
pop
fst
dec
mov
or
add
mov
sbb
mov
lret
icebp
cld
mov
dec
push
mov
sbb
xchg
enter
inc
push
mov
lcall
or
inc
das
das
jno
pushf
ljmp
repz
bound
jbe
or
addb
or
xor
pop
mov
cwtl
insl
adc
inc
jnp
adcl
hlt
lret
loop
insb
pop
iret
stos
mov
xor
sbb
es
jno
jecxz
mov
jg
popa
mov
scas
sub
arpl
cmp
pop
cmp
mov
aas
cmp
stos
push
push
cmp
add
or
mov
aam
jb
sbb
ljmp
lret
repz
rcrl
cmp
insb
adc
sbbl
inc
fbld
mov
or
push
pop
sub
xchg
add
arpl
movsb
fldenv
push
sbb
jbe
test
movsl
lret
repz
test
cld
xchg
pop
mov
pop
pop
repnz
jle
iret
je
dec
pop
cmp
jecxz
push
rolb
fucom
sub
and
roll
ss
sbb
add
mov
add
out
or
mov
outsb
or
mov
insb
mov
push
sbb
adc
pop
js
sahf
jne
out
aad
pop
mov
push
ljmp
jmp
cmpsb
out
push
mov
push
mov
mov
push
jo
xchg
ficoms
into
or
cmp
aaa
outsb
xor
arpl
xchg
add
mov
iret
add
push
mov
push
pusha
rolb
adc
in
inc
ret
pop
clc
pop
out
jo
loop
lret
jne
ljmp
insb
add
sbb
aaa
dec
lods
cmp
mov
adc
addr16
jle
insb
fs
xor
shrl
dec
mov
sub
pop
lcall
sbb
push
jge
mov
sarb
pop
hlt
test
sub
fldcw
cmpsl
jo
stos
in
push
icebp
lea
lcall
cwtl
lea
xchg
push
imul
sbb
and
lock
rorb
shl
mov
push
cmp
bswap
rorb
push
icebp
pop
mov
pop
out
pop
nop
out
lock
movsl
mov
or
xor
lcall
pop
pop
inc
leave
lret
sti
pop
adc
push
mov
in
pop
pusha
cltd
and
outsl
mov
movd
push
cli
cmp
cmp
mov
or
add
xchg
jecxz
and
fcoml
lock
jnp
mov
adc
xchg
dec
inc
adc
js
lcall
push
aas
pop
popf
rclb
mov
cmp
mov
cmp
mov
sbb
lock
mov
xchg
sbb
insl
inc
mov
sbb
and
je
test
mov
ficomps
jbe
std
pop
and
dec
adc
sarb
mov
push
outsl
add
scas
enter
ficoms
or
jecxz
xor
cmp
push
pop
cwtl
sbb
ljmp
and
ss
lret
pop
out
jge
jl
iretw
sahf
gs
js
mov
jecxz
sub
mov
rclb
leave
xchg
jae
cwtl
and
mov
push
aas
into
movsb
add
push
jno
sub
es
js
xor
mov
faddl
sub
mov
mov
mov
dec
hlt
xlat
repz
and
icebp
loopne
in
sbbb
jo
mov
aaa
stos
pop
test
out
xlat
or
inc
pop
std
rcll
mov
pop
testl
icebp
or
stos
sti
mov
fcmove
mov
daa
and
das
mov
dec
jae
loop
sbb
and
or
lea
mov
and
cmp
fldcw
adcl
xor
jns
cmp
arpl
add
sub
mov
outsb
sbb
aam
loop
adc
mov
sbb
mov
xor
out
sti
mov
adc
jne
and
push
xchg
js
mov
adcl
scas
xlat
jmp
mov
cmpsl
cmp
popa
inc
sbb
shl
cmp
out
jo
fidivrl
gs
testb
sti
mov
cmp
mov
sbb
mov
add
sub
mul
jns
fmull
xchg
ja
les
mov
jo
jns
push
ret
fists
cmp
mov
out
sub
dec
sbb
clc
and
sbb
inc
fmul
xor
xor
jmp
push
mov
cmpsb
scas
jnp
mov
fiadds
cmc
aam
mov
out
lret
fadds
iret
cs
int
add
jecxz
cmp
pop
test
mov
push
pusha
enter
xlat
cmp
scas
lea
scas
mov
mov
js
cs
fsubr
fidivl
push
loope
push
cmp
loope
aaa
push
adcb
add
pop
outsb
sbb
sbb
test
mov
outsb
xchg
jae
mov
dec
or
inc
mov
jb
xchg
outsb
inc
ffreep
pop
jns
clc
lock
xchg
in
mov
push
push
dec
mov
mov
push
jo
or
jge
mov
adcb
fxtract
xlat
jmp
xchg
mov
in
lcall
mov
icebp
sub
and
push
jae
or
inc
repz
paddw
pusha
pop
scas
out
lfs
out
ficoms
es
test
movb
pop
and
pop
pop
sbb
subb
xchg
aad
cli
in
clc
xlat
test
fbstp
popa
stc
jbe
stos
mov
flds
and
cmpsb
add
inc
pop
outsb
loope
adc
push
out
loopne
push
leave
adc
incl
int3
inc
pop
pop
or
jecxz
xor
and
xchg
lock
push
repnz
sub
jmp
fsubl
push
aam
aaa
or
adc
and
jns
and
arpl
dec
sbb
add
pop
shlb
repz
shrl
sbb
dec
js
jl
cmp
pop
push
xchg
std
push
sahf
pusha
aaa
leave
push
cltd
push
insl
jb
sbb
lcall
jl
pushf
enter
repnz
mov
jp
sbb
cltd
adc
cmp
in
cltd
inc
mov
xchg
pop
or
mov
out
mov
pop
jbe
shrb
insl
popa
jnp
add
std
jmp
mov
add
aam
mov
in
cmc
or
push
jecxz
xor
mov
mov
sbb
pusha
xlat
scas
mov
lcall
mov
adc
push
dec
sub
pop
leave
lcall
dec
je
je
mov
jae
out
or
push
jmp
xchg
xlat
adc
mov
xchg
stos
pop
rcrb
sub
arpl
loopne
mov
cmp
jp
adc
cmp
inc
lds
pop
mov
push
loop
pop
add
mov
lcall
dec
and
pop
xlat
mov
add
lret
or
std
sub
mov
movsb
stc
je
sbb
movsl
mov
push
ret
data16
xchg
pop
inc
xlat
lret
mov
xor
mov
push
loop
sbb
daa
js
ss
fsubs
lods
and
ljmp
ljmp
or
inc
addb
lea
jl
push
insl
rolb
add
not
push
in
sbb
inc
mov
icebp
imul
pop
and
and
push
inc
stos
and
into
push
test
jbe
xchg
push
popf
fmul
mov
pop
cmp
popf
sbb
pop
shlb
xor
and
dec
dec
xlat
ljmp
lret
lea
jg
jne
icebp
loopne
fcoms
fwait
and
pop
lock
lea
and
mov
adc
add
test
andb
cwtl
cmp
pop
fcomi
fadd
test
or
pop
push
push
in
inc
arpl
mov
insl
jnp
xchg
mov
lock
jae
in
add
jp
add
imul
mov
loope
pop
dec
imul
jns
daa
cmp
adc
inc
mov
cmp
sub
pop
mov
sbb
in
test
jle
aaa
daa
push
lret
fwait
lock
push
aas
stos
outsb
cmp
scas
or
inc
lret
data16
adc
js
out
cltd
fsubl
or
int3
scas
or
add
daa
inc
out
pushf
inc
jmp
setle
add
mov
jae
dec
sub
xor
xor
lcall
inc
push
lods
pop
inc
negl
pushf
xchg
jo
add
push
dec
shrb
add
jge
cli
loope
lahf
lock
ret
movsb
das
cmp
push
pop
jnp
imull
fisttps
sbb
out
inc
daa
jbe
xchg
out
movsb
inc
jmp
mov
ss
mov
fs
xchg
and
gs
mov
push
adc
mov
cmp
ds
in
sub
leave
popl
jge
push
out
xchg
cli
insl
sahf
test
push
int
mov
gs
push
dec
mov
shlb
pusha
sub
jnp
adc
mov
and
or
setns
lcall
insb
xchg
push
add
shlb
and
xor
cmp
movsl
icebp
rcrl
pusha
and
push
loope
cmp
shlb
sbb
ljmp
lods
cs
pushl
mov
test
ljmp
inc
test
xlat
push
xor
mov
cmpsb
pop
mov
scas
adc
inc
arpl
xchg
lods
jmp
cld
std
xorl
mov
inc
push
ljmp
out
push
add
out
das
hlt
xchg
add
loop
fninit
stos
inc
adc
or
nop
in
or
and
stos
and
or
mov
xchg
sub
and
lea
test
push
mov
mov
je
xchg
push
mov
and
sti
fbld
xchg
fs
rol
pop
pop
dec
movsl
add
jbe
mov
pushf
mov
nop
adc
in
shll
enter
jnp
mov
pop
mov
psubb
mov
bnd
js
adc
fimull
jg
test
mov
inc
pop
in
inc
aam
jns
and
jle
xor
rclb
xchg
arpl
sub
fmul
push
gs
and
add
xchg
ret
xrelease
stos
adc
leave
push
lahf
xchg
add
mov
ds
stc
jae
and
pop
stos
call
ret
inc
dec
mov
pop
mov
es
adc
aam
jae
std
xchg
inc
inc
jge
in
in
ja
jle
in
add
out
popa
test
inc
mov
stc
jo
addr16
sub
aam
test
popf
js
je
add
repz
add
iret
test
mov
mov
mov
pop
mov
xor
jae
in
jbe
sub
cmpsb
imul
mov
lret
mov
dec
adc
filds
mov
xor
push
addr16
stos
dec
inc
out
out
std
fists
sahf
jge
push
data16
adc
loop
adc
ljmp
sub
inc
lods
inc
fmuls
roll
insb
jne
lret
jne,pn
faddl
lea
bound
and
outsl
and
mov
xorl
cwtl
loop
test
jns
out
pop
hlt
lret
aad
movsb
insl
clc
and
into
clc
cmp
xor
call
jae
dec
dec
pop
subb
mov
fldt
pop
xor
cmp
mov
mov
in
insl
jnp
inc
push
shll
idivb
mov
mov
aad
fadd
negb
cmp
insl
mov
aas
push
push
push
jo
das
push
es
jne
inc
sub
dec
clc
mov
lods
mov
add
aad
cmpsb
xchg
outsb
cmp
pop
mov
mov
dec
pop
inc
cmp
cs
cmp
mov
push
std
je
mov
jle
push
mov
mov
cmpsl
xorl
xchg
enter
fxch
push
cld
push
dec
cmp
lock
call
jge
insb
test
inc
push
inc
xchg
fcomi
test
push
int
jge
iret
fnstsw
scas
sub
push
xchg
xchg
js
hlt
movsb
repnz
repnz
adc
pusha
in
and
mov
lret
outsl
cli
jae
xchg
sbb
sub
scas
shl
loopne
dec
adc
out
ret
push
movsl
in
inc
or
jecxz
stos
fcoms
fisubrs
data16
ds
mov
sahf
mov
imul
mov
mov
inc
fs
shl
scas
repnz
add
cld
pop
jno
mov
mov
fldln2
leave
sbb
shll
dec
sbb
repnz
inc
fadd
int
jo
pop
fbstp
sbb
xor
xchg
gs
sbb
pop
jbe
into
sbb
xchg
sub
test
ds
xchg
mov
pop
sub
outsl
jnp
xchg
inc
cmp
je
push
mov
adc
inc
cltd
icebp
add
sbb
or
aaa
scas
fbld
pop
add
cltd
push
cmp
or
enter
sub
lods
cli
mov
ret
imul
xchg
xchg
movsl
mov
movsl
fwait
je
push
inc
jmp
imul
stc
mov
mov
cltd
push
ja
pop
adc
xor
adc
outsb
cltd
lods
mov
mov
inc
push
mov
mov
xchg
dec
pop
cmpsl
jbe
in
int3
adc
add
xchg
cmpsb
xor
xchg
mov
sbb
repz
and
sbb
adc
mov
ret
popa
imul
cmpsb
in
dec
xchg
sbb
jae
cmc
mov
cmpb
pop
mov
xchg
mov
and
ds
xchg
push
aam
hlt
nop
jae
enter
ds
add
lea
mov
jmp
push
and
pop
divl
push
add
jnp
int3
hlt
imul
movsl
inc
popa
jmp
and
bound
xor
mov
ss
popa
add
pop
invd
ret
movsb
std
lahf
jo
lds
cld
js
sahf
mov
repz
scas
idivl
mov
push
hlt
cmpl
mov
lds
or
lods
jne
es
inc
js
push
sub
or
push
out
rclb
mov
mov
push
jne
push
push
lea
sti
mov
sbb
pushf
int
xchg
sahf
or
inc
mov
sarl
js
sub
jns
aam
xchg
scas
imul
push
sbb
adc
inc
or
jbe
lds
adc
pop
sub
pop
das
cs
test
adc
fidivs
or
add
mov
mov
jp
adc
ds
add
jnp
adc
xchg
adc
fdivs
xlat
jecxz
fisubs
xchg
mov
movsl
mov
test
cmp
in
dec
and
mov
repz
data16
popl
fisubl
or
jp
xsaveopt
sbb
pusha
sub
imul
repnz
fmuls
mov
dec
push
and
pop
fildl
cltd
push
mov
popa
adcl
nop
scas
cmp
mov
sub
in
popf
lea
add
push
xor
xor
sub
repnz
outsl
sub
dec
mov
js
add
movsb
dec
mov
iret
ret
xor
push
pusha
pop
push
inc
or
lcall
mov
dec
xor
clc
addr16
sub
push
jge
loopne
mov
cmpsb
outsb
mov
lds
and
lahf
out
xchg
xchg
pop
add
clc
std
cltd
aaa
test
arpl
add
or
mov
aad
pop
pop
xchg
mov
wrmsr
jns
mov
mov
add
xchg
pop
out
inc
aam
clc
cmp
mov
fbstp
xchg
movsl
xchg
call
cmp
les
decl
inc
xchg
fisubs
add
movsb
repz
dec
and
aam
and
std
fwait
or
and
mov
bnd
xor
xchg
stos
cltd
shll
add
clc
mov
outsb
add
dec
aaa
mov
inc
inc
arpl
dec
cmp
mov
mov
push
jae
adc
test
lds
sarl
sbb
pop
cmc
mov
into
xor
pop
xchg
andb
pop
sub
fidivs
mov
test
adcl
in
sub
inc
add
dec
data16
in
push
out
mov
cld
call
sub
push
pop
stc
shll
scas
lock
int
test
xchg
lods
adc
pop
loop
pop
pushf
cli
shrl
sub
mov
je
loope
xchg
mov
movsb
out
jns
repnz
sbb
mov
je
adc
pop
mov
adc
rcl
push
inc
loop
bound
pop
icebp
scas
cmpsb
outsb
push
jl
add
in
out
sti
sbb
test
mov
jl
add
sub
sub
lahf
fldl2t
iret
loop
sbbb
adc
out
push
sub
pop
lods
addb
mov
mov
popa
punpckhwd
jecxz
or
sbb
push
int3
in
out
lods
sbb
xor
js
lcall
mov
aaa
dec
call
into
cmp
call
out
pop
cli
fidivl
mov
rcrl
int
add
out
mov
adc
fbstp
xor
xchg
cmp
dec
or
sbb
loopne
adcl
add
jne
in
hlt
dec
sahf
popa
out
aad
ss
dec
je
cld
dec
lock
shr
pushf
xor
dec
jno
cltd
xor
pushf
mov
sbb
pop
insl
std
push
mov
jl
out
and
pusha
pop
pop
sahf
cmp
mov
jne
mov
pcmpeqd
fwait
or
notl
out
jbe
mov
inc
enter
out
xor
cwtl
bound
or
popa
lcall
fwait
add
mov
pop
or
cld
inc
fs
and
in
std
mov
das
out
outsb
adcb
fnsave
adc
xchg
add
ret
jne
push
addl
outsl
jecxz
jmp
dec
pop
mov
sub
add
aaa
dec
pop
pop
dec
fcomps
movsl
icebp
xlat
test
sbb
mov
loop
fistl
lret
and
mov
add
rolb
pop
push
fsubrl
aaa
dec
pop
loop
sbb
std
adc
loope
movsl
mov
cwtl
push
lret
and
jp
push
outsb
jp
jecxz
test
mov
cmpsl
mov
cs
iret
out
int
dec
push
xor
dec
fidivs
clc
or
jle
repnz
sbb
ret
imul
jg
inc
jmp
or
aam
lds
fstpt
imul
cli
test
ja
mov
bound
lcall
sbb
mov
ret
in
sbb
test
and
call
push
xor
sbbb
adc
mov
das
sti
dec
pop
ss
scas
mov
dec
popl
sbb
mov
sub
iret
and
ficompl
adc
fsubrl
stos
outsb
and
rcl
sbb
and
rcl
cli
leave
loope
xor
idiv
inc
ss
out
adc
add
inc
mov
stc
pop
mov
shrl
jge
out
fists
repnz
outsl
cmp
add
je
ja
aas
shl
adc
rorl
jmp
cltd
aaa
repz
sbbb
push
push
adc
push
sub
int3
mov
push
mov
dec
sub
add
pop
dec
test
es
cltd
or
cmpsl
mov
cmp
xor
test
sub
lods
scas
dec
jns
loopne
in
adc
xlat
adc
sub
xchg
jmp
in
stos
xlat
push
loop
xor
mov
cmp
les
fadds
ret
in
xchg
aad
stc
cltd
mov
testl
ss
iret
mov
test
outsb
add
cli
dec
push
mov
push
lret
cld
aaa
adc
jae
loop,pt
scas
fsubrl
xchg
jae
pop
mov
jp
outsl
popa
js
lods
add
aad
or
cmc
std
nop
fildll
stos
inc
pop
repnz
in
enter
push
inc
fbld
iret
xchg
jmp
xchg
test
bound
xor
xchg
dec
cmc
mov
lds
mov
scas
or
or
sbb
or
bound
aam
cmpsl
or
scas
cs
subb
pop
sub
sub
dec
dec
lods
jg
cvttps2pi
shr
cmc
dec
mov
add
jo
sbb
sub
and
inc
enter
enter
insb
pop
and
push
mov
call
loope
or
cs
pop
push
or
leave
mov
out
push
clc
lret
cli
push
out
scas
push
xchg
stos
stos
ss
je
fsubs
push
mov
jbe
sub
nop
pop
sbb
adc
lock
jg
and
orl
pop
jae
movsl
dec
pop
ja
xchg
aas
xchg
outsb
bound
cmp
xor
das
seta
mov
aam
lret
and
dec
xchg
xor
lods
ljmp
pushf
sub
pop
dec
fsubrs
in
dec
inc
jp
push
inc
cmpl
mov
push
clc
and
jp
ret
test
hlt
xchg
aas
sarb
loopne
sti
push
loopne
push
adc
imul
rol
xchg
arpl
jmp
bound
mov
xchg
lret
inc
push
cmpl
rcr
aam
std
mov
xchg
stos
fstl
add
rcll
add
sbb
adc
jbe
push
test
or
ljmp
jge
lret
cmp
fwait
xor
push
sub
fdivp
push
pushf
repnz
lds
sub
in
rcll
jb
and
scas
xchg
mov
pusha
and
xlat
or
fwait
sbb
pop
xor
push
mov
push
dec
lds
mov
shrb
xor
data16
shrl
jl
inc
fstl
mov
mov
mov
or
insl
push
pusha
jns
test
mov
mov
je
sarb
out
cmp
add
sbb
lahf
repnz
xchg
aas
mov
icebp
mov
sub
out
pop
stc
jecxz
daa
aas
lea
repnz
sahf
push
sbb
or
xor
bound
mov
divb
xchg
pusha
mov
jmp
int3
lret
jo
jp
dec
pop
push
xchg
fwait
sti
lcall
mov
mov
cmp
xchg
adc
sbb
sbb
fldl
push
in
pusha
clc
and
inc
decl
inc
jmp
pop
mov
lds
mov
popa
enter
test
test
pusha
xchg
mov
pop
xor
adc
ds
lods
jmp
loop
shll
or
lds
imul
lods
mov
rol
popa
lcall
stos
loop
xor
dec
inc
mov
push
inc
fsubrs
jno
mov
jnp
sub
iret
insb
nopl
mov
add
syscall
ljmp
jo
jmp
sub
sub
cmp
push
icebp
movsl
pop
adc
lret
repz
cmp
jns
adc
sbb
jne
xor
dec
dec
or
add
xchg
sub
mov
mov
aam
xchg
dec
add
movsb
cwtl
and
and
inc
push
or
cmp
jle
push
dec
push
nop
loop
push
cmc
sti
popa
leave
mov
in
mov
cmpsb
lock
lods
cs
xchg
movsl
sub
add
or
sub
in
xchg
shrb
adc
xor
js
scas
repnz
sbb
xchg
sub
movl
pop
ret
jg
fcoms
push
into
inc
aad
out
push
xor
or
cli
rcrb
add
data16
shl
xor
dec
icebp
cmp
outsb
add
push
inc
mov
hlt
imul
aam
sbb
mov
inc
push
mov
inc
andb
pop
out
jnp
mov
fstpl
push
mov
push
iret
stos
outsl
mov
roll
push
andb
jae
and
rorl
push
lret
xlat
fists
mov
enter
mov
adc
xchg
enter
cmp
adc
mov
shld
mov
movsb
ja
or
xchg
sar
ljmp
xor
fildl
push
lcall
test
mov
lcall
xor
ret
inc
push
mov
popa
orl
jl
jae
fidivrl
lahf
leave
adc
or
jmp
dec
jno
dec
xchg
xor
aam
push
and
jg
sub
das
mov
in
shr
pop
mov
aas
lods
shrb
inc
aam
loop
pop
cmp
mov
mov
dec
imul
nop
push
lock
fstpt
pop
add
stos
mov
cli
xchg
stos
es
pop
mov
inc
and
inc
jb
cmp
pop
dec
mov
mov
daa
ds
imul
push
xchg
add
push
movsl
ret
push
punpckhwd
push
cwtl
xor
into
jo
add
insl
and
sbb
mov
inc
or
jmp
mov
lcall
in
stos
jmp
mov
jne
sub
xor
cmp
push
cld
mov
rolb
mov
in
jne
and
notl
popa
jbe
jbe
stos
cmp
std
lahf
scas
push
mov
test
jbe
fnsave
int3
mov
mov
sahf
pop
inc
adc
jp
sbb
mov
jnp
inc
outsl
xchg
fld
mov
arpl
loope
dec
add
sbb
mov
movsb
xchg
xchg
enter
push
loopne
dec
sub
inc
xor
das
dec
lcall
push
loop
or
test
adc
js
xchg
lock
cmp
movsl
cmp
mov
addr16
in
or
test
sub
and
mov
mov
testb
lcall
adcb
loope
mov
shll
leave
cs
jle
lds
fbld
xor
dec
and
cmpsb
aas
xor
xchg
cmpsb
scas
lret
add
jl
adc
jle
sub
pop
pushf
sbb
mov
and
loopne
mov
rol
pop
sub
mov
test
aas
lret
inc
push
jecxz
stos
jae,pt
xor
aad
test
mov
sub
gs
cli
xchg
repnz
jo
and
pop
ds
nop
stos
repnz
test
sub
and
js
mov
inc
push
add
in
xor
adc
lret
dec
push
or
das
leave
scas
mov
mov
mov
adc
jae
push
jns
push
loope
xchg
movsb
mov
dec
pop
push
addr16
movsb
xchg
xchg
add
in
addl
loopne
jg
mov
mov
xchg
mov
pop
ja
pop
push
ret
dec
mov
push
push
pop
or
or
jl
stos
cmp
jg
dec
mov
cld
dec
sbb
js
inc
mov
popf
clc
mov
jg
subl
push
sub
ficomps
jno
push
mov
insb
mov
add
movsb
int
ret
mov
pop
mov
pop
scas
and
mov
sub
dec
mov
sbb
sarb
push
icebp
add
fldl
test
cmp
mov
stos
mov
jmp
add
mov
add
and
faddl
jb
jb
add
push
mov
and
add
mov
dec
fistps
and
mov
mov
jmp
call
mulb
push
lahf
xor
loopne
xchg
orl
insl
jl
adc
or
shrd
lods
mov
mul
jg
mov
arpl
mov
data16
add
in
inc
mov
mov
sbb
mov
xchg
sub
iret
scas
or
cmpsl
pop
lods
insl
dec
fildll
add
jecxz
pop
in
push
addr16
adc
ret
jl
inc
clc
ds
jae
nop
int
pop
cli
dec
movsw
lods
xchg
sub
mov
mov
push
cmpsb
add
push
je
cs
mov
mov
push
testl
jle
lods
pop
ret
mov
push
mov
or
sti
push
jge
xchg
addr16
xchg
xlat
sub
cmp
inc
mov
mov
xor
pmulhuw
outsl
cmpsb
jnp
fisubrl
dec
mov
inc
pushf
push
je
mov
in
and
pop
cmp
xlat
popf
jg
nop
into
xchg
imul
pop
mov
pop
repnz
shll
or
into
and
push
out
sbb
dec
xlat
jns
fdiv
pop
shrb
sbb
arpl
inc
cltd
jmp
adc
mov
stc
sub
leave
or
andl
xor
stos
push
enter
or
fldenv
js
fisttpll
test
pop
or
mov
mov
insl
add
fidivs
jne
lock
mov
sbb
mov
es
outsb
jo
xchg
dec
mov
mov
fimull
in
jl
xchg
mov
movsl
pop
jg
dec
shrl
mov
divl
loopne
or
jmp
mov
inc
or
jge
in
inc
push
lahf
mov
inc
loop
pushf
lods
stc
fcmovne
mov
subb
push
lahf
xor
add
ret
imul
jbe
cwtl
and
push
mov
loopne
or
xor
push
sbb
inc
sbb
js
push
pop
or
out
out
xor
lret
cmc
inc
lret
mov
in
sub
sbb
mov
jge
and
movsb
scas
aas
pop
pusha
mov
jecxz
mov
pop
dec
loopne
orl
sub
mov
mov
int
push
jg
dec
mov
sbb
fs
fs
or
xor
addb
xor
xchg
lret
loop
pop
inc
adc
fistpl
or
popa
std
ret
jecxz
lds
bnd
add
jp
inc
push
lret
dec
mov
xor
mov
add
xor
sbb
or
cmpsb
jnp
shrl
jl
add
clc
ret
scas
test
loop
mov
pop
or
int3
cmpb
jbe
push
insb
mov
push
hlt
movsl
mov
imul
add
dec
mov
mov
xor
icebp
xor
int3
inc
inc
mov
add
pop
inc
movsl
ret
push
pop
mov
rcrl
je
or
jmp
jle
jp
mov
or
adc
cmpsb
movsl
xchg
xlat
movsl
sub
add
inc
push
jne
pop
pop
hlt
and
in
movsb
mov
popf
repnz
jmp
aad
sbb
mov
out
push
shll
mov
add
xor
adc
iret
push
jg,pn
sub
inc
dec
subb
das
sbb
and
aam
inc
or
movsl
stos
dec
adc
mov
lods
rclb
test
pop
sahf
cmp
les
arpl
scas
or
mov
lock
sahf
fisubrl
test
sbb
push
pushf
mov
xchg
ss
ret
xchg
pop
scas
push
mov
outsb
test
and
movsl
hlt
push
pop
insb
insl
jle
jns
fldenv
shlb
sub
mov
cwtl
mov
inc
aas
push
repnz
popa
xchg
adc
addb
test
fisttps
xor
cmp
mov
insb
xlat
jnp
test
jge
cmp
jb
mov
mov
clc
sub
xchg
insl
lods
aas
cmp
inc
fcom
pop
pop
cltd
push
sub
cmp
pop
and
and
xor
es
pop
loope
js
dec
push
sbb
sbb
es
jp
dec
lahf
jp
subb
subl
push
mov
mov
jnp
mov
push
cld
push
cwtl
je
inc
fstl
je
mov
cld
ret
mov
xor
jns
sahf
adc
inc
subb
mov
xchg
mov
aas
xor
xor
xor
pop
jp
adc
fwait
xchg
mov
ret
inc
push
aad
in
mov
mov
ss
stos
loopne
add
mov
stc
sub
das
mov
pop
add
dec
dec
je
fdivl
adc
sbb
mov
inc
xor
loopne
mov
stc
adc
in
das
jle
pushf
dec
sub
add
mov
rolb
add
out
das
mov
hlt
add
add
jle
sub
pushf
data16
mov
inc
js
fidivrs
cltd
loope
jmp
fcomps
std
and
sbb
cli
iret
push
sub
sbbl
fistl
pop
loope
xor
lahf
enter
xorl
adc
incl
dec
ss
xlat
stc
popf
or
cmpb
mov
sahf
pushf
push
adc
cmp
in
push
flds
shlb
mov
std
jb
sub
mov
cs
bound
pop
enter
ljmp
iret
imul
imul
inc
fisubrs
mov
hlt
mov
jne
mov
push
nop
shll
jnp
ja
iret
sub
cmp
dec
jge
add
out
outsl
out
std
pop
cwtl
xlat
mov
in
orb
stos
aaa
and
into
aam
adc
lock
aam
cltd
pop
jns
test
rcrb
push
jl
and
popa
or
push
push
cli
jns
ljmp
add
shlw
inc
ja
cli
mov
mov
iret
push
xor
or
adc
xor
mov
add
cld
sbb
dec
aam
pop
into
xchg
arpl
mov
adc
outsl
xlat
adc
test
xchg
inc
dec
ror
pop
pop
mov
and
mov
jns
adc
fsubrl
push
repz
rcll
jp
inc
bound
push
sbb
add
or
push
dec
mov
cmpsb
xor
mov
xchg
sbb
sahf
je
aam
mov
popf
int3
aam
dec
sbb
inc
fstpt
fdivrl
leave
fstpt
jnp
dec
sbb
adc
leave
addr16
out
repnz
or
inc
daa
xor
mov
jae
in
pop
mov
cmp
push
inc
subl
mov
into
lret
imul
sub
mov
mov
je
imul
int3
jno
dec
loop
icebp
mov
xchg
sti
sarb
sarl
and
sub
lret
rolb
mov
push
dec
leave
and
mov
pushf
sub
int
into
gs
in
fidivl
dec
pop
cli
adc
pop
adc
add
push
mov
lret
and
int3
imul
and
adc
aad
mov
int3
std
jo
mov
lods
pusha
shrb
shl
repnz
cltd
test
cmp
or
dec
xor
enter
push
fsubrl
test
xchg
cmp
mov
ds
inc
adc
xlat
notb
aaa
lea
xor
jns
dec
push
jmp
jb
add
mov
imulb
mov
pusha
aam
mov
xchg
leave
mov
ljmp
sti
mov
or
jecxz
push
xor
cmpsl
ret
add
push
les
cmp
repz
sti
inc
and
loop
loopne
stos
mov
pop
jns
adc
mull
out
or
stos
or
jb
pop
mov
xchg
cwtl
and
mov
xchg
jno
jo
hlt
sbb
sub
or
cli
pop
and
adc
pop
jno
jecxz
jns
jne
cmpsl
cmpsb
aas
js
sahf
sahf
sbb
mov
dec
or
cmp
out
mov
push
adc
dec
rorb
stos
in
enter
push
outsl
mov
repz
fnstsw
mov
add
pop
jb
aad
xchg
pusha
pop
sub
imul
push
sahf
or
in
adc
daa
xor
jae
mov
adc
add
mov
jl
adc
loop
mov
ficoml
mov
xchg
dec
imul
iret
int3
and
xor
pop
sub
pop
xlat
lret
add
push
sbb
je
mov
add
fdiv
dec
sar
icebp
std
xor
cs
jge
add
mov
xorl
int3
out
dec
das
ss
and
sub
sbb
mov
pop
repz
xor
dec
and
jle
xor
ljmpw
xchg
pop
repnz
lcall
mov
leave
mov
fcmovbe
fmuls
mov
xchg
test
sbb
bsr
idivb
punpckhbw
mov
or
push
sub
push
cmp
add
add
xchg
xor
sub
cmp
call
push
push
cmc
movsb
dec
cmp
fbstp
dec
push
cmp
addl
je
mov
aas
adc
fmuls
xchg
pop
out
lds
cmc
dec
ret
nop
xchg
mov
jg
pop
scas
call
mov
pop
test
sbb
mov
nop
lods
xor
imul
repz
scas
int
cmp
or
mov
xlat
adc
inc
fstpt
add
pop
bound
call
pop
sbb
xchg
roll
incb
js
aas
lods
xchg
pop
push
movsb
movb
pop
mov
bound
icebp
ds
pop
add
pop
call
into
aam
push
add
push
test
outsb
cmpsb
cmp
push
sbb
shll
bound
sub
and
lods
lcall
imulb
pusha
aaa
call
leave
lret
xchg
in
add
jbe
dec
pop
sbb
mov
fisttpl
fisubrs
add
mov
iret
adc
shl
testb
mov
xchg
aaa
outsl
imul
out
int
out
or
dec
or
xchg
cmp
pop
jno
adc
jbe
mov
sub
jb
adc
sbb
xor
clc
mov
in
outsl
xchg
sub
mov
aaa
cmp
mov
xchg
jl
jecxz
mov
aad
and
in
loopne
enter
push
repnz
xchg
daa
rorb
in
xchg
push
cli
mov
sti
inc
or
adc
add
out
adc
and
arpl
sahf
test
push
xor
cmp
daa
and
imul
mov
inc
ficompl
sbb
test
or
cli
ds
pushf
call
sbb
les
jle
add
lret
fldl
pop
nop
xlat
mov
push
cs
jbe
cli
xchg
sub
and
and
inc
add
pop
cmp
sbb
arpl
mov
jno
cs
cli
cmp
add
sarb
jno
sarb
mov
out
in
inc
subl
fisubrs
pop
sub
enter
mov
ljmp
call
aam
nop
sbbl
ret
jmp
js
inc
lods
mov
dec
addr16
stc
cmp
and
xchg
sub
add
lods
cltd
mov
lret
fstpl
stos
pop
or
loop
shll
or
jecxz
loope
scas
inc
repnz
adc
rcl
out
push
xchg
pushf
jbe
rcrb
xor
addr16
lea
adc
adc
xor
push
in
out
shrb
pop
or
xchg
xchg
jmp
push
cmp
mov
test
fs
or
push
das
pop
fwait
pusha
js
xchg
pusha
push
fists
jg
adc
mov
aaa
mov
jp
enter
rol
mov
pop
scas
xor
pop
repz
sub
adc
mov
xchg
jmp
cmp
inc
ror
or
adc
cmp
cmpsb
mov
mov
mov
icebp
adc
test
xchg
cmp
jp
cmp
cmp
dec
negb
fcoml
fwait
in
test
or
xchg
test
scas
popf
cmc
daa
push
lock
in
sti
test
cmpsl
mov
leave
and
pop
push
push
add
jne
jmp
mov
out
mov
push
jl
mov
gs
subb
clc
mov
repz
scas
mov
xlat
sub
lods
add
jne
scas
push
fildl
mov
xor
dec
mov
repnz
mov
or
xor
fs
mov
mov
fucom
cli
xor
inc
aad
jle
fs
mov
sub
sub
cmc
scas
mov
daa
in
mov
cld
aas
add
xorb
sbbl
es
and
loope
loope
adc
add
dec
jp
bound
xlat
inc
or
les
je
test
cltd
xor
js
jnp
popa
nop
pop
imul
pop
repnz
lods
xor
pop
adc
in
test
andb
push
cltd
bound
pop
leave
jb
leave
cmc
out
jno
pop
xchg
xchg
cmp
out
popa
stc
cltd
xor
ljmp
cmp
js
mov
xor
and
cmpsl
push
movsb
stc
adc
stc
cs
shrb
xor
sbb
push
push
xchg
outsb
jge
inc
pop
cld
pop
notb
mov
fnstsw
hlt
push
push
inc
mov
fwait
and
pop
jle
lret
gs
js
add
cmp
dec
cwtl
mov
clc
adc
push
repnz
mov
mov
cltd
xor
mov
jle
xchg
mov
push
lods
fildl
cltd
sub
xor
pusha
push
adc
icebp
lcall
mov
loopne
add
adc
mov
in
inc
sbb
mov
data16
fstl
imul
or
pop
adc
mov
sub
jbe
and
ja
or
not
xor
loope
xor
push
hlt
push
lea
pop
pop
jae
mov
movsl
sarb
gs
mov
push
lret
inc
sbb
pop
data16
push
sarb
xchg
cmc
pusha
xor
jp
adc
push
push
dec
dec
mov
and
push
stos
push
push
jns
inc
cmp
lds
out
imul
dec
bound
gs
psubsw
test
iret
fidivrl
pop
out
push
inc
mov
sbb
lock
mov
repnz
mov
jbe
fildll
sub
popa
fmul
iret
xor
rolb
xor
or
adcl
ljmp
xor
je
in
test
mov
adc
mov
cmp
mov
js
cmpsl
scas
sbb
jns
cmpsb
cmp
sbb
andl
mov
xchg
imul
cwtl
mov
out
pop
aas
push
and
cli
pcmpeqd
jl
add
and
cmp
ljmp
add
and
pop
mov
xor
push
sbb
loop
lahf
outsb
mov
or
popa
fnstenv
sbb
sti
in
ret
popa
xorl
lods
dec
bnd
std
shrb
sbb
shll
inc
add
inc
mov
sbb
sub
mov
test
cmp
adc
jmp
outsl
push
fdivs
pop
push
mov
icebp
and
inc
ja
fs
xor
arpl
adcl
cs
iret
lahf
dec
es
fs
and
mov
fdivrl
fcomip
ss
cmp
aas
xchg
inc
cmpsl
jp
pusha
mov
sbb
data16
mov
cwtl
cli
or
repz
test
lcall
or
aas
mov
lret
adc
dec
out
pop
pop
nop
add
rcrb
mov
cmpsb
cmovne
push
xorl
or
xor
mov
dec
push
outsl
push
in
and
mov
mov
xchg
xor
test
adcl
jmp
jne
das
add
push
popf
and
xchg
add
adc
adcb
jmp
clc
inc
scas
fnstsw
negl
sbb
mov
inc
data16
xchg
or
test
and
mov
loope
pop
xchg
loopne
inc
outsb
dec
loopne
add
mov
idivb
fst
popf
xor
sub
xor
sbb
or
and
leave
sub
popf
xor
xchg
dec
stos
xor
push
push
cmp
mov
repnz
repnz
add
insl
sbb
add
cmp
jno
aas
jmp
pop
into
les
sub
ret
mov
mov
addr16
insl
mov
jg
jo
xchg
inc
popa
mov
leave
pop
shrl
popa
lds
aaa
stos
movsl
outsl
and
mov
jl
outsl
ds
cmp
lahf
imul
imul
mov
lcall
xchg
je
negb
fildll
mov
push
fs
imul
mov
sub
mov
dec
pop
jmp
aad
mov
mov
inc
mov
cltd
jns
dec
sbb
fistpl
ja
dec
sbbl
xor
sub
scas
hlt
xchg
ja
jae
cs
lahf
hlt
test
mov
scas
push
and
mulb
inc
mov
push
shlb
outsl
mov
scas
inc
fidivrl
fs
push
jbe
mov
sub
idivl
xlat
adcb
shll
push
out
push
jbe
test
pop
mov
inc
cwtl
incb
outsl
int3
sub
cmc
into
jno
push
pop
iret
jecxz
std
iret
mov
lcall
es
aaa
loop
pop
cmc
pop
mov
divb
adc
gs
scas
ljmp
lcall
mov
or
cmp
jge
sub
ret
gs
ja
nopl
and
pop
std
dec
dec
xor
repz
xchg
dec
pop
mov
fsubl
pusha
mov
cs
repz
inc
sub
lock
idiv
sub
mov
inc
add
scas
call
ljmp
scas
xchg
xchg
shrb
int
inc
fs
lock
sti
xchg
daa
outsl
mov
aas
push
pop
and
daa
lds
cmpsb
aaa
sbb
je
add
aad
dec
adc
outsb
daa
sub
pop
pop
adc
and
jb
dec
jo
add
aam
popa
push
stos
xchg
enter
push
int3
arpl
ljmp
subl
pop
fcomip
dec
into
lods
fdivl
mov
mov
imul
or
popa
pop
icebp
mov
xor
pop
or
pop
mov
dec
sbb
inc
insl
iret
jl
jbe
jns
mov
in
call
pop
sub
push
xchg
xchg
sub
rolb
cmp
adc
lahf
xor
mov
popa
and
add
pop
inc
int
jle
enter
fisubl
int
jle
pop
sub
stos
lods
imul
add
sbb
and
outsl
mov
cmp
adc
int3
fdivp
lahf
stc
rorl
adc
jo
cmp
sbb
out
shlb
leave
add
add
aaa
outsb
leave
xlat
rcll
inc
inc
jnp
insl
mov
push
cmpsl
loopne
mov
aad
ss
jg
cmp
jnp
jp
mov
jle
or
mov
sub
je
call
into
lret
fdivrl
stos
lds
fistpll
insl
xor
movsb
jns
addl
das
adc
data16
xor
push
inc
inc
int3
push
cmc
mov
pop
jle
inc
mov
xor
test
push
fwait
jmp
popf
push
adc
fstpt
inc
lret
sbb
mov
scas
cmp
jbe
test
rcl
xor
lock
mov
jl
pop
add
mov
jne
rclb
ret
adc
jle
mov
inc
fsubr
dec
xor
push
fsts
leave
arpl
out
lods
mov
xchg
pop
add
mov
jge
fimull
rclb
cmp
mov
jbe
push
fstpt
adc
test
scas
lret
hlt
shll
sub
xor
ss
sbb
add
lock
dec
mov
cmp
cmc
cli
jns
sub
and
xorb
jae
jo
out
cmp
insl
rcr
repnz
push
or
mov
mov
cli
xor
xchg
icebp
outsb
daa
dec
pop
add
mov
pop
aaa
pop
xorl
repz
data16
add
test
js
xchg
mov
ficoml
xlat
mov
push
or
xchg
das
addr16
pushf
adc
mov
in
lea
cmp
pop
sub
jmp
inc
lret
push
and
stos
mov
mov
xor
sub
xor
xlat
imul
push
shr
test
std
mov
data16
insb
sbb
adc
sub
fwait
xlat
sub
or
mov
je
mov
adc
arpl
xchg
jg
mov
push
adc
ret
dec
fdivrs
cmpb
dec
jecxz
jns
mov
or
xchg
pop
hlt
fidivs
xor
std
stos
out
add
stos
cli
mov
push
ret
dec
std
xchg
cmp
mov
idiv
xchg
iret
pushf
mov
cmp
push
fisubrl
cmpsw
dec
subb
sbb
cmp
and
xchg
lahf
push
sti
sub
in
adc
jecxz
xlat
testb
fst
cmp
and
es
xchg
pop
mov
push
mov
outsb
movsl
dec
je
shrl
dec
test
and
aas
enter
mov
sahf
and
inc
and
pop
aaa
or
cli
rcll
add
ss
arpl
call
pop
and
pop
and
sbb
iret
in
cmp
inc
fucom
fldl2t
call
cmc
sahf
stos
sub
cmpsl
mov
lock
and
mov
nop
xor
in
lret
or
xor
cmpsb
decb
mov
xlat
aad
inc
fs
iret
jo
push
sub
or
or
or
pop
ja
jge
pushf
daa
cmp
push
movsb
mov
push
call
dec
ret
rcrb
sbb
sub
add
push
dec
pop
fcompl
ret
mov
pop
xor
nop
xor
pop
jp
xchg
imul
push
aam
inc
nop
mov
aam
or
mov
add
jge
rcl
add
outsl
daa
sbb
ret
sub
outsb
das
popf
loopne
scas
call
ds
shrl
ret
enter
das
jmp
or
sub
add
scas
dec
cmp
cltd
sti
mov
ljmp
fnstcw
imul
sbb
push
push
inc
fidivs
add
xor
clc
mov
dec
pop
in
bound
dec
jne
jecxz
mov
pop
cmp
cmp
cmp
pusha
clc
mov
cmp
adc
pop
inc
mov
xor
jbe
mov
fcoms
lea
loope
mov
int3
nop
xor
out
lods
std
sbb
or
shlb
mov
xchg
or
jmp
push
push
xor
iret
out
or
adc
mov
sub
jmp
cwtl
xor
pop
dec
sub
xor
rorl
cmp
lahf
jne
xor
cmp
jne
adc
jno
fldcw
in
and
cld
pop
scas
cmc
dec
push
sub
rorl
movsb
rorb
mov
mov
lahf
insl
pop
jno
addl
shrb
pop
iret
int3
or
push
adc
cmp
push
push
outsl
cld
xchg
mov
push
or
mov
stc
cmp
pop
repz
fildll
cli
mov
fcoms
into
fdivrs
hlt
push
inc
sti
xor
insl
or
es
jecxz
fisttps
mov
jae
rorl
cwtl
addr16
inc
ss
ja
lock
out
add
enter
xchg
jmp
shll
mov
rol
bound
xor
insl
ja
jnp
lret
ret
aad
pop
pop
xor
loope
outsb
mov
cwtl
ret
inc
out
adc
loop
inc
notl
jp
inc
lods
test
lods
sub
pop
call
leave
fnstcw
xor
xchg
sub
nopl
jae
push
sbb
sbb
cld
rcl
cld
les
sbb
inc
mov
mov
leave
inc
mov
xor
sub
mov
repnz
mov
dec
mov
outsl
xchg
nop
jo
insl
lret
test
lock
inc
pop
push
mov
or
popa
jnp
fdivrl
cmpl
mov
fwait
scas
data16
xchg
lret
jno
xchg
pop
add
dec
mov
idivb
nop
sub
les
pop
dec
int
mov
sbb
das
pop
mov
inc
pusha
jl
bound
xchg
jp
xchg
mov
hlt
popf
dec
adc
pop
jae
loopne
pop
mov
dec
pop
sbb
and
add
in
sbb
mov
push
mov
dec
inc
jp
nop
inc
icebp
icebp
pop
mov
and
std
add
cs
ds
mov
pop
xchg
xchg
fnstsw
jmp
jne
in
xchg
sarl
ds
out
jo
fs
fwait
aam
loope
jae
lods
push
inc
xchg
xor
lcall
nop
inc
sbb
push
push
lret
aas
mov
mov
lea
adc
mov
cltd
jmp
mov
pop
leave
pop
jae
push
insb
xor
ss
into
add
jg
push
or
adc
jp
dec
sub
jp
dec
and
mov
rol
and
xchg
aad
jle
aaa
out
cmp
pop
pop
xor
scas
mov
mov
and
mov
fisttpl
push
add
ret
icebp
cmp
ret
push
inc
sbb
jge
rol
jp
dec
lods
aam
lea
add
mov
push
mov
inc
dec
mov
push
out
pop
fnstenv
xor
jmp
and
setl
sbb
adc
jbe
xor
orl
push
andl
adc
and
jl
mov
js
and
xor
push
inc
inc
std
cmp
sub
shl
push
mov
stos
xor
and
sub
dec
lods
scas
xchg
cmp
pop
les
cmp
jecxz
pop
push
add
jmp
jns
hlt
inc
add
ljmp
or
int3
gs
dec
cmp
jge
push
inc
ss
push
xchg
faddl
and
mov
fisttps
sbb
ret
sub
and
mov
adc
dec
int3
lret
xchg
jp
loopne
lret
adc
mov
adc
and
jbe
dec
sub
insb
orl
lret
fiadds
fdivr
call
xor
imul
repnz
inc
push
fsts
jecxz
pusha
xor
push
fs
mov
adc
add
and
je
les
iret
sbb
push
jae
add
pop
inc
cld
ret
iret
data16
loop
cli
enter
add
xor
aad
call
pop
dec
dec
pop
mov
rcl
in
popa
icebp
sbb
dec
xchg
mov
sahf
aad
and
push
push
pushf
sti
loop
and
pop
ds
pop
cmp
jp
stos
inc
scas
mov
outsb
or
inc
sbb
movsb
negb
shrb
aad
loopne
jnp
cmp
jecxz
mov
pop
mov
adcb
mov
or
jp
test
inc
mov
enter
inc
adc
pusha
lds
clc
bound
es
in
add
out
cmp
push
outsb
cli
fadds
mov
adc
shlb
movsl
jecxz
sbb
jl
aam
mov
out
mov
lahf
stos
sbb
loope
lock
adc
repz
pop
pop
test
mov
nop
add
lahf
je
xchg
int
dec
push
cmpsb
insl
sub
popf
popa
gs
idivb
push
mov
jge
mov
or
in
movsb
adc
and
cmp
mov
cmp
jmp
lea
and
es
mov
mov
mov
dec
adc
jae
jb
int
test
shll
je
ds
out
xor
mov
fcoms
dec
insb
inc
dec
repnz
fsubrs
inc
mov
mov
fmul
xor
shr
jle
xor
jle
cmp
filds
mov
jo
int3
negl
sub
pusha
negl
dec
rol
dec
mov
leave
aam
ret
notb
xor
pusha
je
rolb
or
inc
iret
ret
pop
out
sbb
ret
adc
push
js
dec
pop
sub
test
cmp
sub
rorb
in
into
gs
add
outsb
jge
popa
movsl
lds
ret
push
mov
scas
enter
int3
enter
xor
push
loop
mov
movsb
add
jb
adc
je
fbstp
mov
lods
push
pusha
dec
rclb
cmp
push
push
test
out
sbb
lds
cmp
xchg
lock
sub
repz
pop
aad
sub
cmpsl
in
xlat
mov
inc
repz
xor
mov
sbb
xlat
cmp
inc
gs
cmp
xchg
sub
xchg
rol
pop
mov
cmp
test
xchg
jo
pop
or
or
sti
sub
push
divl
xlat
sbb
lea
jg
lcall
orb
icebp
fucomip
les
je
shlb
ffreep
pop
rep
adc
xor
shll
jae
xchg
or
and
into
lret
mov
repz
sub
rolb
xchg
jp
cmc
adc
and
in
in
push
in
jge
inc
jae
loopne
popl
fidivs
cltd
shlb
pop
cmp
push
inc
and
push
arpl
call
imul
das
jmp
push
push
mov
and
imul
xor
popa
ljmp
mov
sub
pop
repnz
sbb
mov
rolb
push
aas
aad
sub
dec
inc
mov
lcall
loopne
outsb
hlt
data16
push
fcomip
mov
sub
xchg
mov
sar
add
sbb
mov
subb
adc
xor
cmp
mov
inc
mov
xor
pop
insl
sbb
xchg
mov
hlt
sbb
andb
int3
mov
dec
mov
shld
and
xchg
mov
stos
aas
roll
jo
ljmp
vcvtps2pd
pop
loope
loope
bound
stc
stc
dec
das
mov
push
aas
enter
mov
lret
cmpsb
cmp
or
ror
inc
push
int3
sbb
jae
push
push
mov
and
test
pop
push
ds
mov
cmpsb
add
mov
les
sarb
lret
sub
lds
push
stos
push
leave
push
mov
daa
lods
inc
call
add
pop
inc
inc
add
call
ficompl
jae
and
inc
xor
sti
inc
push
shlb
push
stos
popa
in
cs
mov
sub
clc
imul
mov
pop
in
cmc
leave
movsl
inc
jge
jmp
add
cltd
or
testl
adc
xchg
jb
sub
loope
lret
mov
jge
cld
pop
call
mov
fadd
jecxz
repnz
mov
call
dec
inc
push
cmp
cmp
push
cwtl
mov
in
out
inc
sub
sbb
aaa
ror
pop
loope
movsb
repnz
mov
mov
decl
inc
mov
nop
loopne
push
iret
into
enter
pop
lret
xor
iret
rcrb
jmp
movsl
inc
and
test
cwtl
lret
bound
mov
in
jmp
mov
jle
test
add
das
mov
lret
insl
xchg
push
lea
lock
fsubs
fdivp
cld
or
mov
xchg
lods
mov
lret
sub
call
iret
mov
hlt
jb
dec
aaa
mov
pop
xchg
xor
mov
out
inc
gs
sarl
aaa
push
push
cmp
sbbl
out
and
aaa
cld
aam
cmp
xor
arpl
or
cmp
sub
aas
ret
jae
cs
or
mov
sbb
fsubs
outsb
shll
stos
jnp
mov
or
popa
push
mov
icebp
or
sub
mov
jge
jbe
dec
loope
fwait
test
shl
mov
arpl
nop
pop
xchg
and
inc
dec
jae
cmp
xor
cmp
lea
mov
sbb
push
nop
xor
jmp
nop
xchg
pop
int3
test
pop
imul
and
add
push
mov
inc
ljmp
aad
loopne
mov
mov
daa
sbb
imul
ret
fwait
pop
cmc
mov
mov
fs
lea
cmpb
jnp
push
cmp
bnd
dec
xor
mov
pop
pop
imul
cmp
mov
sub
cmp
aas
mov
stos
in
mov
adc
xchg
inc
pop
rol
nop
cmc
mov
notb
cmp
push
in
imul
sbb
and
mov
fbld
lret
xchg
ljmp
mov
sub
loope
sbb
xchg
sahf
dec
repz
out
add
lret
adc
mov
leave
push
bound
mov
outsb
out
cmp
addr16
imul
xchg
and
iret
jno
jmp
gs
push
and
mov
or
in
sbbb
daa
jl
push
shll
and
out
cld
adc
out
sbb
es
push
push
es
js
inc
mov
call
addr16
divb
lods
notl
sti
inc
mov
push
inc
aas
psllq
add
adc
push
js
sub
jge
push
jmp
and
xor
cmp
mov
pop
mov
fdivl
ret
in
divl
cmp
and
mov
or
andl
icebp
sbb
and
sahf
outsl
jmp
and
insb
repz
and
popf
xchg
add
pop
add
xchg
inc
insl
jge
xchg
pop
ljmp
cwtl
daa
ja
fiaddl
cltd
aam
cwtl
push
call
xor
js
cmpsl
out
jo
pop
xor
pop
push
xor
mov
inc
adc
fsubrs
subl
mov
in
xlat
mov
adc
movsl
dec
fcompl
pop
lret
xchg
daa
adcb
aam
inc
push
mov
cmp
in
out
xrelease
jle
repnz
pop
pop
sbb
insb
inc
adc
fcoms
xor
jge
mov
xchg
cmpsb
hlt
xchg
pop
pop
out
cmpsl
nop
xchg
repz
mov
cmp
ficoml
jae
lods
popa
mov
push
dec
xchg
mov
xor
mov
jl
xchg
xchg
push
fwait
repnz
mov
shr
js
or
cmp
mov
xlat
orl
orl
push
jge,pt
in
fadd
sbb
rcrl
lods
mov
dec
gs
jns
jne
jbe
mov
and
xlat
mov
jg
xor
jle
inc
test
xor
int
push
mov
mov
add
repnz
dec
cs
mov
mov
cmpl
loop
mov
lcall
in
aas
add
sbb
sahf
push
pop
aaa
int
jl
mov
inc
jp
pop
out
fs
daa
test
ja
lock
sbb
mov
test
sub
rol
outsb
movsb
fnstenv
pop
repz
cmp
scas
push
jl
loopne
out
popf
cwtl
call
sbb
mov
push
add
adc
sbb
or
xchg
cmp
iret
loop
in
hlt
rorl
add
dec
in
rcrb
cmp
sbb
sbb
mov
jns
lret
fdivrs
negb
mov
add
stos
mov
andl
js
xor
ljmp
dec
push
sbbb
xchg
sbb
jge
sbb
xor
rcrb
or
mov
cmp
test
subl
rcl
sub
add
adc
cmpsl
dec
pop
and
mov
push
aaa
movsb
push
add
mov
lcall
cmp
popf
add
sbbl
sbb
xchg
jne
ret
loop
or
xchg
aam
dec
mov
sub
out
or
cmp
cmp
stc
nop
test
mov
mov
push
ret
jle
mov
cmc
push
inc
loopne
in
decl
jne
or
pusha
lds
and
pop
notl
push
push
mov
scas
orb
hlt
sub
imul
add
neg
shlb
lret
sbb
dec
inc
dec
test
cmp
pop
stos
jg
lods
iret
gs
movsb
cli
pop
fstpt
int
sti
int
in
into
dec
and
iret
je
lret
mov
jmp
test
pop
mov
aas
in
loopne
mov
cmpsl
mov
mov
in
inc
test
push
lcall
mov
sub
test
int
mov
daa
jne
sti
cmpsl
push
push
sub
int
add
mov
aam
sub
aas
aaa
pop
dec
lock
push
repnz
lret
adc
ljmp
mov
sbb
scas
mov
popa
sub
push
pop
sub
sub
xchg
cmp
dec
sbb
adc
arpl
push
and
or
push
aam
test
rcll
leave
add
inc
stos
jmp
lahf
sub
cld
test
es
cs
pop
or
dec
aad
mov
lea
js
notb
stc
popf
int
sahf
jne
decb
jge
and
xchg
push
xchg
ss
lret
ss
dec
inc
mov
sub
cwtl
test
jle
jecxz
pop
icebp
leave
lahf
push
mov
cmp
add
cld
hlt
xor
mov
daa
push
and
pop
lods
add
in
sub
pop
jno
cmpl
pop
xchg
pop
in
enter
icebp
pop
icebp
adc
inc
ljmp
and
adc
lds
and
and
outsb
clc
stos
roll
mov
and
jge
and
mov
mov
fcomps
push
xor
push
imul
push
cmp
mov
lret
stos
aas
jb
dec
in
in
cmp
cmp
inc
stos
pop
pop
adc
int
adc
xchg
jecxz
stos
mov
dec
or
leave
out
mov
ja
or
cmp
pop
lods
popf
outsb
add
repz
and
adc
add
mov
aam
fbstp
jle
loopne
test
mov
jl
mov
adc
loope
push
mov
loop,pt
lods
adcb
int
clc
arpl
ljmp
push
mov
pop
gs
jns
jecxz
mov
sub
stos
insl
movl
movsl
push
lods
test
jmp
aam
push
out
jne
aad
add
lods
lds
jg
jno
pop
fisttpl
stos
stos
mov
sub
imul
ret
add
cmp
pop
xor
mov
out
inc
add
dec
inc
sbb
cmpl
mov
ret
dec
addr16
jns
out
push
shll
mov
popf
and
mov
inc
rorb
jecxz
rcrl
push
mov
inc
mov
xlat
or
in
inc
and
xchg
lret
insb
jle
sahf
push
jmp
sbb
mov
push
lds
push
fldcw
mov
outsl
es
xor
in
arpl
stc
push
pop
lds
int3
subl
setns
in
mov
push
xchg
jmp
push
and
inc
fcmovbe
out
push
cld
out
cmc
popa
jmp
cmp
cmpsl
sbb
sub
push
dec
mov
push
jno
add
arpl
dec
out
push
out
mov
lock
leave
fcmovbe
out
or
leave
xor
push
xor
rclb
xor
in
insl
jge
mov
out
pop
mov
fnstenv
aam
imul
xor
adc
stc
pop
jnp
and
lret
inc
sub
mov
gs
lcall
stc
je
aaa
mov
jle
or
add
sub
mov
xor
pop
cmp
cmp
mov
fildll
mov
sub
aaa
mov
push
and
popa
negb
inc
flds
lcall
mov
xor
adc
dec
mov
cmp
jno
cmp
das
scas
inc
mov
xchg
or
test
lcall
push
fimull
fcompl
adc
prefetchw
inc
dec
push
sub
mov
xchg
movsb
mov
mov
mov
sbb
dec
push
and
jnp
add
mov
push
jge
loop
imul
pop
add
stos
scas
hlt
fsubl
sbb
mov
dec
cmpsb
lock
adc
cmp
lods
addr16
push
lret
fiaddl
lahf
push
sub
aam
popa
cmp
outsb
xor
daa
cli
mov
mov
push
scas
sub
mov
mov
lahf
scas
inc
or
stos
mov
push
hlt
inc
dec
add
ss
jno
stos
and
cmpsb
int3
sbb
fs
stos
in
xor
outsl
ret
icebp
adc
push
imul
push
jae
pop
ljmp
jno
cmc
mov
lret
or
cld
loopne
ja
sbb
jmp
out
sub
lds
pop
movsl
mov
in
mov
in
jecxz
imul
xchg
std
or
sub
pop
xchg
mov
in
ret
pop
stc
or
jg
inc
int
insb
xor
dec
mov
or
insb
ds
dec
lds
les
pop
xchg
sub
xchg
mov
jg
lret
jae
sub
repz
inc
adc
aad
lods
and
inc
data16
jno
xchg
cmp
stos
inc
lds
push
in
scas
jle
mov
or
lret
mov
lret
pop
ja
call
sub
popf
inc
repnz
cmpsl
cli
push
or
dec
fbstp
cwtl
stc
dec
push
fisubs
adc
pop
es
and
inc
test
stc
fimuls
sub
rorl
imul
shlb
lahf
addb
sbb
jle
xor
outsb
dec
dec
inc
push
jecxz
jb
mov
sbb
lret
cmc
mov
xor
sub
data16
sub
push
hlt
fwait
sti
add
cmp
cmpsl
pop
mov
mov
cld
mov
test
push
sti
fbstp
push
adc
fwait
test
or
mov
nop
stos
sbb
push
jbe
xchg
xchg
je
int
movsl
pop
mov
pop
jo
cmc
sbb
shrl
and
pop
push
flds
into
movsb
enter
cmp
xchg
ljmp
not
lret
xlat
add
push
in
movsb
sub
sub
out
cli
cmp
inc
cs
cmp
inc
mov
outsb
sbb
xor
ja
dec
mov
push
inc
lods
and
je
push
fidivl
cld
push
dec
loop
or
jp
pop
std
xchg
push
lods
xor
dec
adc
aam
xor
or
inc
mov
jb
in
test
je
pop
xchg
mov
gs
aam
push
pop
pusha
sbb
movsl
push
mov
shrl
cltd
and
mov
xchg
rcll
pusha
int
inc
cmp
inc
push
sbb
sti
loope
xor
int3
les
pop
and
add
xchg
xchg
fmul
in
sbb
inc
xorb
loope
push
adc
cltd
lea
je
pop
scas
inc
ja
stc
adc
repz
mov
mov
sbb
adc
in
int3
fimuls
rolb
rolb
cmc
mov
add
lret
fidivrs
icebp
or
pop
inc
stos
sbbb
shll
scas
push
cwtl
dec
mov
rcrl
into
sti
cmpsl
xchg
out
pop
inc
add
ja
mov
xlat
ss
std
xor
mov
sbb
jge
push
in
xchg
inc
scas
hlt
cmp
or
repnz
mov
mov
add
je
stos
xor
bound
sub
pop
dec
cmp
push
aas
sbb
lret
sbb
pop
push
pop
push
arpl
or
and
sub
fsubs
cmp
out
xchg
xchg
ljmp
push
outsl
test
inc
fcompl
add
xor
xchg
or
aaa
mov
sub
mov
in
cmpsl
pusha
or
xor
shll
ret
dec
add
push
pop
cwtl
stos
nop
ss
or
jne
mov
and
sti
push
out
mov
mov
add
ljmp
mov
jne
test
movsb
add
inc
sbb
bound
jl
cmp
test
aaa
add
xor
ret
inc
addr16
jp
or
cs
mov
jl
cmp
push
scas
test
sahf
icebp
cmpl
js
call
inc
call
call
outsl
add
test
clc
sahf
xchg
mov
call
dec
loope
push
arpl
push
test
in
lea
leave
cli
loope
daa
xchg
es
pop
push
sub
fimuls
mov
mov
psubw
out
dec
cltd
mov
dec
fst
jnp
inc
pop
dec
test
movsl
repz
and
sahf
stc
stos
fistpl
jne
fcoml
dec
pop
insb
cwtl
daa
ljmp
pop
loope
imul
in
lds
mov
stos
inc
jbe
pusha
inc
out
xchg
loope
or
arpl
and
cli
pop
jno
lods
fwait
push
cli
pop
iret
ja
sbb
dec
cmpsl
stos
xchg
inc
lods
xchg
xor
xchg
adc
and
mov
jp
xchg
inc
aam
mov
fsubrs
adc
pop
mov
and
push
mov
jo
dec
shrb
add
xlat
fwait
inc
mov
mov
adc
bound
sub
movsl
mov
fdivrs
lret
add
mov
dec
push
and
aad
in
mov
mov
sub
out
cwtl
xor
stc
xor
cltd
pop
mov
loope
inc
pop
mov
add
push
cli
and
xor
roll
push
push
fidivrs
mov
mov
mov
inc
jle
data16
imul
fildll
test
rcl
xchg
data16
mov
cmp
dec
bound
inc
inc
std
gs
cmpsl
fistpll
or
sbb
mov
imul
mov
add
pushf
adc
addr16
test
and
dec
add
jp
sub
push
loop
pusha
mov
push
rcr
cs
fmull
mov
inc
std
mov
aad
dec
in
jb
ss
imul
cmpsl
es
xchg
sub
mov
jp
out
es
orl
out
adc
mov
pop
push
sub
mov
fiadds
movsl
jb
ds
ja
into
xor
inc
xor
xorb
outsl
jge
push
mov
inc
lea
add
push
in
out
icebp
dec
pop
pop
jne
push
sarl
mov
sbb
stos
test
pop
lret
xchg
push
mov
addb
inc
stos
and
inc
add
mov
jo
sti
lods
sub
ret
mov
orb
jns
mov
xorl
push
int3
add
mov
push
dec
and
push
pop
les
mov
add
sahf
sub
sets
inc
push
xorb
jae
or
xor
dec
jmp
and
mov
pop
or
jle
push
jae
mov
mov
fdivs
mov
pop
orl
dec
sbb
jb
cmp
sar
daa
fisttpll
lahf
push
test
jne
sbb
mov
sbb
push
test
ficoms
into
cmpsb
xchg
inc
add
pop
push
pop
sbb
jbe
movsl
mov
pop
sbb
test
sub
push
push
dec
mov
jns
int3
and
xchg
mov
jnp
xor
daa
std
mov
out
cmp
mov
jecxz
js
fidivrl
iret
push
neg
mov
jo
fidivrl
xlat
xor
mov
addr16
mov
fbld
dec
mov
fstpt
mov
pop
mov
iret
pop
ja
lea
test
mov
pop
mov
jmp
js
xchg
push
lds
jno
iret
sub
mov
cmpsb
into
jp
or
setbe
and
inc
adc
add
test
lret
int3
enter
sub
or
bound
jno
sbb
mov
mov
jmp
cmp
icebp
std
lahf
ret
leave
xchg
enter
inc
and
ret
fidivl
shll
stos
sbb
xchg
mov
mov
xor
insb
inc
imul
xlat
les
imul
inc
pop
cld
out
cmpsl
xor
leave
flds
sbb
stc
mov
fwait
add
sub
dec
xchg
pop
dec
adc
xchg
add
mov
mov
add
mov
aaa
rcrb
mov
das
leave
or
testb
test
fwait
jg
sub
in
xor
loop
inc
je
jmp
sbb
or
xchg
mov
pop
add
mov
movsb
mov
das
and
ds
insb
sub
mov
movsb
xlat
stos
stc
popf
test
pop
xor
sub
push
ficoml
jae
or
out
lods
leave
into
inc
daa
ss
loope
dec
xlat
sub
jne
enter
orb
nop
add
xchg
xor
fiadds
ja
stc
xor
add
lret
and
mov
enter
mov
cld
lcall
loopne
cmp
enter
repnz
adc
sbb
clc
pop
frstor
jae
push
mov
xchg
lret
stos
cmp
mov
lahf
push
imul
out
xchg
lods
mov
pop
mov
test
mov
insb
sbb
add
add
sbb
enter
add
mov
jp
dec
xorl
jmp
xchg
xor
je
and
ds
pop
ljmp
cmc
mov
mov
jecxz
fwait
dec
pop
inc
mov
fsubs
les
in
mov
pop
push
addr16
lcall
mov
jne
pop
into
je
movsb
jecxz
sbb
jmp
lea
out
cld
scas
outsl
mov
xor
pop
insb
andb
xchg
icebp
into
das
mov
jle
and
ljmp
scas
fidivrl
inc
mov
je
icebp
movsl
pushf
sbb
in
mov
fbstp
adc
mov
bound
loope
cs
mov
lret
mov
fldt
cmp
cmpsl
pop
cmp
mov
inc
push
add
cld
stos
repnz
push
xchg
aas
pop
insb
adc
push
ss
and
add
cmp
adc
mov
call
int
mov
and
mov
fistpll
xchg
ljmp
cwtl
pusha
rcl
cli
adc
in
stos
outsl
lret
jae
xor
jp
bswap
dec
fwait
pop
ret
mov
mov
gs
fbstp
or
fisubs
mov
mov
ds
mov
and
nop
sub
pop
icebp
pushf
xor
jnp
mov
mov
int
and
lock
xchg
jbe
sbb
adc
mov
xchg
jmp
int
cmp
and
fstps
ret
je
sub
out
push
pop
scas
std
cwtl
pop
adc
outsl
fstl
cli
icebp
test
scas
jmp
dec
lahf
test
loope
es
adc
jbe
xlat
pop
js
sbb
mov
mov
sbb
jecxz
cmp
inc
inc
sub
ljmp
mov
push
xchg
popf
xlat
not
inc
fcoml
movsl
xchg
xor
pop
shrb
outsb
push
jno
pushf
insl
mov
inc
std
nop
xor
xchg
xor
add
and
arpl
push
or
mov
test
or
xor
pop
shll
add
push
sahf
adc
lret
cmc
insb
lock
das
and
iret
movlps
mov
adc
imul
jns
jne
xor
sbb
int3
mov
xlat
mov
mov
jno
aad
jp
stos
jmp
lret
fs
xor
shlb
insb
in
push
data16
push
fwait
repnz
dec
ret
cmp
mov
jae
sub
out
mov
mov
mov
faddl
and
pop
bound
adc
fadds
and
cs
aas
cld
mov
lcall
cmp
dec
dec
pusha
aas
add
fadds
xchg
adc
dec
in
push
pop
imul
xchg
and
popa
xor
decb
jge
test
or
or
insl
out
scas
jno
mov
sbb
dec
ret
int3
mov
mov
jg
xor
mov
push
dec
jecxz
mov
push
movsl
scas
fdivrs
mov
mov
sti
xor
pop
sbb
loopne
pop
mov
add
mov
aaa
push
mov
adc
mov
fwait
icebp
repnz
lods
enter
inc
pop
imul
add
fsubl
rcrl
in
mov
stos
loopne
inc
cltd
sub
push
sarl
insl
mov
mov
dec
jecxz
popa
and
add
jg,pt
scas
test
adc
or
popa
adc
dec
dec
xor
js,pt
mov
jnp
jnp
in
jg
xlat
push
xlat
inc
push
cmp
popf
mov
fbld
mov
fsubl
mul
xchg
sarl
pusha
pop
push
or
cmp
clc
jne
and
pop
jle
push
popa
ss
inc
inc
mov
js
lahf
in
mov
cmp
mov
insb
pop
in
jle
adc
jbe
mov
add
sbb
mov
sbb
cld
cmp
sub
dec
call
push
mov
lret
arpl
aam
call
and
mov
ret
mov
mov
mov
jl
rolb
ss
cmpsl
pop
add
jl
pop
xor
test
inc
mov
jnp
in
test
jno
fstpl
push
rcl
push
inc
sbb
xor
jns
stos
test
aaa
leave
es
inc
pushf
adc
std
out
bound
mov
pop
adc
aam
xchg
mov
loope
jno
push
sub
data16
popa
jnp
in
mov
or
push
inc
outsl
xchg
outsb
popa
xor
and
push
mov
out
stos
jge
mov
xor
clc
int
fstpt
out
and
mov
mov
scas
aas
push
outsb
add
frstor
popf
inc
xchg
mov
cmp
sub
xor
jbe
sub
mov
or
loope
or
repnz
jp
pop
aam
in
in
mov
mov
jnp
mov
test
push
push
outsb
sbb
or
pop
imul
pop
mov
ret
sbb
sbb
clc
cmp
pop
lods
adcb
sahf
inc
jecxz
sarl
xor
shll
mov
test
cmp
adc
loop
das
lds
dec
in
rcl
test
push
ja
dec
test
or
imull
cmpsl
sbb
out
mov
test
push
enter
mov
dec
pop
mov
sub
mov
call
or
sub
mov
sbb
inc
push
sub
ljmp
das
mov
xchg
cmp
int
inc
jmp
test
arpl
rcrb
jne
pop
je
adc
ljmp
movsl
inc
mov
cltd
jo
pusha
xchg
fidivrs
mov
add
push
push
push
ret
add
ret
sbb
stos
les
sbb
mov
repnz
loopne
pushf
sub
jle
fsubs
repnz
ss
add
fldenv
add
iret
adcl
sbb
lea
call
push
shr
divl
jecxz
arpl
lret
outsb
dec
js
xchg
aam
js
fnsave
push
push
ret
mov
shlb
xchg
and
out
lock
ljmp
jg
into
insl
mov
leave
insl
cld
leave
int3
sub
sub
call
pop
lods
mov
into
insl
addl
repnz
out
shl
or
outsb
mov
cmpsl
mov
call
in
cli
and
inc
test
pop
xchg
xor
jae
andb
and
inc
mov
sbb
shrl
push
ret
jmp
dec
mov
pop
xor
cmc
stos
aaa
insb
sahf
dec
and
mov
es
lock
jno
ret
repz
adc
pop
repnz
and
push
fcompl
idiv
push
pop
dec
scas
mov
decl
stos
inc
xchg
inc
scas
add
fbld
pop
xchg
out
mov
addr16
jb
out
inc
sbb
xchg
std
lock
loopne
ss
adc
cmp
test
push
into
fcmove
push
pop
clc
or
lret
icebp
dec
subl
mov
repz
filds
cltd
shlb
lahf
testl
daa
or
sbb
clc
iret
out
sahf
sub
stc
ss
dec
mov
pop
ret
mov
jecxz
fadds
pop
mov
xchg
pop
dec
fistpl
ja
fiaddl
and
movsb
fbstp
enter
test
pop
xchg
aad
movb
sub
pop
hlt
mov
mov
int3
mov
decb
insb
add
sahf
mov
dec
adc
mov
sbb
sub
push
in
adc
cmp
adc
imul
js
mov
xchg
sahf
fistpl
outsb
gs
les
sbb
lahf
xchg
xchg
ds
aad
mov
mov
les
stos
adc
pop
and
jmp
js
dec
push
mov
sbb
pop
ja
push
push
mov
jmp
nop
inc
push
decl
xchg
push
adc
mov
jp
xor
push
in
mov
je
lods
sub
adc
dec
or
dec
lock
jge
pop
outsl
pmulhuw
lret
pop
cltd
and
mov
imul
testl
cmp
push
jo
lods
jae
test
mov
arpl
jae
sbb
mov
loopne
lods
adc
data16
xor
int
add
inc
push
jg
push
mov
cld
or
prefetch
mov
mov
outsb
inc
push
pop
orl
mov
lcall
and
rcl
std
jp
xor
mov
jge
cmp
ljmp
sbb
ljmp
icebp
add
js
push
or
fistpl
fwait
test
push
sub
mov
insb
dec
add
or
ljmp
mov
inc
gs
xchg
cmp
ret
sub
pushf
mov
cmpsb
lock
ret
sti
es
je
imul
popa
cmpsl
stos
push
mov
jne
mov
test
dec
mov
sbb
les
jbe
mov
in
and
inc
push
inc
adc
xor
mov
cs
fstpl
add
sbbl
pushf
xchg
pop
gs
out
out
or
xchg
sub
imul
xor
sbb
jno
mov
xchg
dec
js
cmp
xorb
sub
pop
loope
sub
cld
sub
mov
dec
xchg
ja
sub
add
sub
fstpt
outsl
jno
clc
cmpsb
dec
cs
iret
inc
pop
inc
in
lods
inc
loopne
in
adc
push
mov
std
test
out
stos
push
ja
inc
fs
fsubrs
pusha
adc
daa
lret
xor
data16
imul
test
lods
into
fsub
loopne
iret
lds
jb
sti
out
out
bswap
lahf
mov
cmpsl
sbb
pop
cltd
notl
out
das
pminsw
rclb
or
jno
fsubs
push
insb
jns
jmp
xchg
sub
ss
push
jbe
movsb
xchg
pop
movl
dec
aam
inc
mov
cmp
mov
out
add
add
scas
movsl
xor
subl
cmp
xchg
inc
fwait
out
shll
xor
add
decb
inc
or
mov
push
mov
push
adc
adc
int
loop
adc
stc
mov
mov
mov
jne
lock
xchg
add
xor
push
das
popf
pop
add
ds
in
push
arpl
lea
mov
lret
lock
imul
adc
push
mov
mov
loopne
mov
xchg
push
push
test
ret
adc
pop
jle
mov
xor
in
cmpb
cld
adc
icebp
jp
inc
outsl
or
fldcw
adc
mov
call
nop
jge
ljmp
xor
mov
and
and
rorl
fcomip
cmc
test
cmp
js
push
inc
push
cmpsb
lea
add
ljmp
xor
or
cmpsl
jnp
sub
xchg
mov
dec
lret
adc
jnp
sbb
xor
dec
aam
stos
cmp
jp
fidivl
divb
push
pop
fsubs
lret
mov
ret
out
sti
repz
scas
dec
cmp
jle
imul
popf
movsb
inc
fcmovbe
mov
popa
clc
fmuls
sbb
mov
adc
lds
fs
mov
mov
jmp
aas
mov
int3
repnz
add
push
jecxz
aad
repz
xchg
mov
aad
inc
insb
xor
mov
shll
adc
pop
push
sbb
xor
mov
mov
jne
leave
mov
xchg
ljmp
scas
in
movsl
pop
inc
movsl
icebp
jmp
mov
or
fs
sbb
test
cmp
movsb
xor
nop
out
push
xchg
adc
sbb
sbb
rcl
xor
or
lods
sub
and
shll
cmpb
movb
cmp
in
pop
cmp
shr
pop
jmp
or
mov
jecxz
mov
test
scas
fsubrs
js
push
repz
lea
daa
test
lret
adc
dec
xchg
adc
xchg
movsl
cmpsl
mov
pop
enter
cmp
and
int
sahf
fcoms
stos
add
dec
icebp
leave
in
out
xor
test
loopne
cld
pushf
inc
xor
in
sub
mov
lock
add
lret
push
add
loope
add
aas
xchg
jle
ds
push
es
mov
mov
mov
lods
cld
arpl
sub
mov
mov
push
jmp
fstps
adc
subb
mov
push
outsb
cmp
ljmp
push
test
scas
outsb
ljmp
imul
rcrb
shr
push
repnz
mov
inc
fiadds
inc
cs
fcomps
call
fistpll
das
test
enter
cli
pop
pop
inc
cltd
into
xchg
gs
enter
sbb
sbbl
rcr
add
ds
out
push
lret
push
push
xchg
in
dec
jbe
pushf
or
orb
jg
fisttpl
es
outsb
ret
push
sub
jl
jnp
xchg
mov
out
inc
pop
es
jo
lods
cmp
in
nop
cmp
lret
adc
jno
or
or
jle
mov
push
jae
add
jbe
pop
xlat
mov
adc
pop
push
pop
cmp
inc
std
xchg
jmp
sbb
pop
xor
dec
gs
xchg
leave
cmp
lret
sahf
outsb
loope
and
and
cmp
in
jg
repnz
jp
cmpsl
ret
mov
xor
cmc
mov
out
ret
loop
insb
fnstenv
sbb
cmp
xchg
pushf
push
xlat
mov
lea
test
shrb
loopne
push
sub
xor
and
cs
or
and
out
into
adc
shll
loop
pop
mov
stos
jns
cmpsb
adc
ret
dec
mov
sub
jns
jns
leave
mov
ss
aas
lret
inc
inc
push
or
sub
adc
ss
sub
testb
xor
mov
xlat
xchg
sahf
dec
in
mov
mov
adc
outsb
rcl
cmpl
sub
dec
js
or
dec
mov
mov
cli
test
push
jbe
daa
sub
xor
jne
stos
in
clc
and
cmp
push
or
mov
sbb
jle
out
xor
out
in
xchg
sbb
aaa
fdivl
xor
shl
lds
jnp
pushf
stos
inc
into
sub
push
popf
popa
sbb
xor
pushf
sbb
sub
xlat
daa
in
push
movsb
repnz
adc
add
jg
sub
je
xchg
shll
loope
mov
mov
sbb
jne
int3
je
mov
xor
sub
fwait
mov
mov
pop
adc
mov
jg
cmc
or
dec
or
into
xor
pushf
sub
sub
cltd
in
sub
cli
and
inc
xchg
pop
inc
inc
sbb
in
jno
lahf
mov
fimull
xchg
xchg
mov
nop
decb
out
pop
mov
adc
jge
popf
aas
cmp
cmpsb
cmp
and
dec
loopne
movsb
movsl
jmp
xlat
insb
cwtl
xchg
out
ret
cmp
xchg
into
lods
or
or
xchg
decb
adc
test
pushf
pop
aaa
faddl
dec
mov
xchg
jns
push
xchg
cs
divl
adc
call
clc
je
in
push
pop
testb
popa
fsubrp
jge
xor
sub
mov
xchg
ret
int3
arpl
push
mov
mov
or
icebp
cltd
hlt
sbb
and
add
in
mov
mov
cmpsb
and
pop
ret
hlt
jl
jl
test
cmp
mov
pop
adc
bound
xchg
xor
add
daa
lret
inc
gs
and
xor
ds
or
and
lods
sbb
xchg
adc
jbe
xchg
cmpsl
test
orb
xor
xor
mov
jl
imul
jmp
lret
fwait
repnz
cmp
sahf
ss
sti
xchg
jge
lcall
test
mov
test
imul
jmp
mov
dec
into
jp
xor
jo
mulb
ret
pop
jmp
push
jg
pop
mov
cmp
mov
loopne
enter
scas
cmp
sbb
mov
push
jae
fidivrs
cld
in
jp
mov
je
or
xchg
cld
movsb
mov
mov
lea
rorb
data16
fldt
rorl
dec
pop
mov
aad
cs
cmpsl
loop
repnz
push
and
push
jno
bound
jae
inc
aam
jb
lahf
xor
stos
mov
fdivrl
mov
mov
lock
repz
inc
loope
lret
and
inc
pop
loop
xchg
push
jmp
out
daa
das
push
jbe
push
xor
shl
jge
xor
pop
movsb
jge
sub
call
mov
push
mov
and
sti
pop
jne
mov
inc
jge
cmp
mov
rcrb
xor
dec
and
cwtl
lcall
adc
and
xlat
je
cmpsb
clc
sbb
enter
adc
lea
gs
ljmp
inc
cmp
mov
adc
fstps
dec
fistpl
push
push
and
push
jne
imulb
and
jo
dec
jmp
dec
sub
cli
pop
dec
jmp
cmp
pop
mov
add
inc
xorb
or
push
sub
xchg
add
fidivs
jmp
sub
push
mov
mov
lds
insb
cld
fimuls
ss
fisubl
shr
ficompl
cmpsl
mov
out
outsb
fstpt
inc
mov
fcomps
sub
fildll
faddl
dec
lds
out
ss
inc
shrl
cmp
out
push
repnz
push
adc
enter
xor
mov
idivl
mov
mov
jnp
insl
lods
sbb
xlat
and
adc
arpl
mov
ret
sbbb
cmpsl
lahf
inc
sub
mull
or
mov
arpl
loopne
out
aam
loope
sbb
and
xor
lahf
out
js
and
inc
scas
inc
cmp
rolb
into
gs
fbstp
fstpt
bound
addb
in
cltd
jge
fisubl
iret
frndint
lret
and
xor
in
std
jno
fsub
imul
lods
mov
out
fdivs
sub
hlt
stos
sti
cld
outsl
test
leave
push
lods
jae
or
hlt
push
and
out
stos
loopne
mov
or
sub
cltd
push
js
ljmp
pop
daa
or
outsl
out
and
lret
filds
push
push
mov
dec
dec
and
dec
ds
dec
mov
movsl
ret
mov
mov
in
fmuls
add
jmp
insb
js
pop
shrl
mov
sub
out
xchg
mov
sub
jle
and
mov
mov
xor
je
jo
gs
or
push
lret
xor
jae
in
sub
icebp
jmp
cld
inc
stos
sbb
scas
dec
pop
adcl
cmp
jmp
popa
cld
jo
sarb
push
movsb
jns
jmp
xor
or
add
inc
shll
push
repnz
js
dec
sub
adc
cs
sbb
add
mov
jne
pop
dec
xor
or
sbb
or
mov
or
adc
divl
pusha
and
cld
adc
mov
imul
or
push
jno
adc
outsl
lods
dec
mov
lea
cmc
lea
mov
out
add
gs
and
xchg
out
cmpsb
movsb
jecxz
in
push
inc
inc
inc
mov
inc
and
push
push
pusha
clc
sbb
pop
mov
sarl
cwtl
mov
int3
lret
testl
sub
decb
into
and
gs
xor
push
sub
insb
mov
pusha
mov
push
xor
sub
sbb
inc
push
cwtl
pusha
test
sub
stos
mov
fsubs
cmpsb
push
sub
add
pop
xlat
sub
pop
xor
mov
mov
push
push
pop
loopne
add
xor
mov
lret
rcll
js
mov
pushf
add
and
aas
popa
mov
loope
jns
cmp
fldenv
into
mov
lret
out
data16
mov
enter
mov
mov
gs
pop
fistl
mov
add
scas
out
adc
dec
dec
xchg
in
sbb
xchg
inc
out
in
inc
add
decb
into
sti
aaa
push
cmpsl
out
and
push
insb
inc
adc
mov
mov
stc
in
movlps
inc
dec
data16
mov
mov
cmp
push
pop
andl
jb
loopne
or
aam
scas
out
rcrl
adc
cs
and
dec
inc
adc
mov
fisubl
hlt
pop
jmp
test
clc
or
mov
lea
or
ret
mov
jno
adc
stc
pop
js
ds
jno
xor
sub
test
mov
scas
push
push
pop
mov
dec
push
cs
and
les
aad
shll
push
pop
rolb
fs
loope
subl
test
and
jbe
out
mov
cs
or
pop
mov
test
push
mov
pushf
out
jg
insb
mov
ljmp
dec
xor
loop
orb
out
ss
xor
int
loope
mov
pop
ret
mov
sarb
clc
vprotw
cmp
loopne
fucom
inc
push
dec
inc
lret
loope
data16
mov
jno
push
lcall
into
clc
sahf
cli
push
gs
in
adc
lcall
push
subl
repnz
push
ret
mov
mov
cmc
sarb
adc
mov
xchg
rcrl
dec
sbb
imulb
cmp
aas
push
mov
sub
mov
sbb
xchg
cmp
jne
cs
out
jne
xchg
mov
fs
fstl
add
jnp
mov
ja
iret
add
insl
xchg
sbb
mov
out
inc
in
clc
add
testb
pop
divb
cmp
push
xchg
adc
add
jnp
and
pop
cmp
loope
popa
popf
mov
dec
mov
dec
in
push
mov
insl
shll
mov
pop
xor
mov
arpl
fimuls
data16
add
sbb
in
mov
jmp
loop
dec
iret
lcall
movsl
inc
pop
fisttps
push
bound
pop
add
aas
push
mov
mov
push
es
xchg
sarb
mov
icebp
sbb
sub
xchg
or
lds
rol
dec
add
xlat
inc
mov
jmp
hlt
mov
cmp
inc
arpl
sbb
mov
movsb
repnz
jl
pop
sbb
xchg
ljmp
xor
cmp
push
daa
or
test
mov
jg
mov
out
jo
sbb
pop
add
cmp
sbb
jo
sbb
inc
fwait
icebp
cmp
adc
dec
sbb
fisubrl
jmp
mov
mov
repnz
stc
rclb
adc
filds
xlat
aaa
sub
mov
fwait
sbb
mov
pop
bnd
pop
aad
mov
adc
aad
cli
ffree
sub
jno
dec
dec
scas
push
into
clc
or
jg
cli
cmp
adc
ja
add
cmpsb
xchg
add
inc
cmp
jb
or
dec
or
adc
push
punpcklbw
sub
out
push
aad
mov
sbb
xchg
sub
xchg
nop
int3
out
in
mov
int3
cmp
mov
lds
in
pop
or
add
orl
mov
aam
ret
stos
push
sbbl
popa
cmp
mov
fistpll
es
jno
inc
fsub
jle
aas
dec
test
cmp
cmpsb
mov
test
aas
cwtl
sbb
cmp
xor
pop
outsl
notl
sahf
inc
fmulp
in
inc
call
fstpl
sub
sbb
into
cmp
popa
subl
stc
nop
inc
dec
or
cmp
pop
add
shrl
clc
movsl
aas
int3
arpl
push
out
outsb
int
sub
scas
mov
ficomps
in
sub
jg
xchg
adc
arpl
lahf
and
lcall
sahf
sub
push
xchg
fwait
push
jb
aam
xor
jecxz
fabs
mov
push
push
je
and
aas
test
aad
andb
test
push
test
in
loopne
push
add
mov
add
jae
loopne
or
out
inc
pop
xor
out
addr16
les
sub
dec
lock
push
inc
aas
addb
cmp
inc
push
inc
ljmp
and
scas
and
dec
cld
cld
xchg
enter
dec
jmp
das
shll
sbb
xor
dec
push
call
sbb
ret
pop
inc
lods
jnp
jbe
push
jae
stos
add
lock
and
cltd
bound
icebp
jbe
mov
mov
cmp
js
sbb
jl
push
add
mov
daa
mov
jns
push
sub
mov
mov
loopne
adcb
add
aas
xor
sahf
and
inc
inc
push
stc
in
jmp
xor
aas
inc
xor
add
add
pop
in
loopne
cmp
mov
repz
cmp
pushf
dec
aaa
dec
dec
cld
aad
or
ss
in
jle
mov
push
sti
insb
push
add
sbb
jle
xlat
int3
mov
popf
imulb
mov
xor
lret
ljmp
or
mov
into
lea
pop
inc
push
loopne
inc
inc
loop
jb
mov
mov
das
lea
dec
lret
lock
pop
mov
fnstcw
cmpsl
iret
cltd
nop
pop
lret
call
pop
add
out
xor
repnz
icebp
and
mov
inc
in
dec
rcll
enter
shlb
add
nop
in
in
push
repnz
jbe
aam
int
or
add
es
dec
dec
test
pop
fcomip
adc
pop
xchg
popf
jecxz
xchg
xchg
jp
jbe
dec
test
dec
pop
mov
pop
das
rcl
sbb
add
pop
jecxz
xchg
dec
das
jmp
pop
xchg
daa
pop
aaa
inc
ret
cmp
xor
dec
out
pop
sub
cs
mov
ljmp
and
ljmp
cs
mov
push
mov
imul
mov
stos
and
ja
dec
mov
jecxz
push
mov
sub
inc
call
pushl
shll
les
cmp
pavgw
ljmp
jmp
ss
jmp
and
pop
aam
inc
negl
pop
mov
mov
imull
dec
pop
jnp
inc
pop
addl
adc
js
xchg
mov
sub
adc
rcrl
add
imul
mov
int3
cld
mov
bound
scas
cmp
fimull
pop
lods
rcrb
push
jne
mov
push
or
mov
xchg
jnp
scas
in
xor
lea
add
leave
xor
pop
or
cmpsl
sub
mov
push
cs
fmuls
in
dec
jmp
dec
push
movsb
clc
enter
xor
ljmp
cmpsl
test
sarl
xor
call
cmp
sbb
out
outsl
dec
mov
jge
jbe
stc
pop
int
bndldx
pop
jp
jg
mov
pop
rcrb
ja
and
test
xchg
int3
adc
std
cltd
xor
add
mov
in
push
pop
mov
pop
push
mov
xchg
cs
test
aam
adc
mov
mov
and
nop
cmp
test
in
ljmp
in
adc
jg
dec
mov
adc
int
mov
and
mov
inc
out
addl
sub
out
push
pop
mov
mov
popf
mov
sub
mov
divl
insl
addr16
lds
ss
test
pop
mov
sahf
mov
fdivrs
pop
pop
jae
test
push
nop
lock
pop
imul
push
pop
loope
scas
out
mov
movaps
and
mov
movsl
movsl
or
cwtl
mov
push
push
sahf
cmp
das
shl
dec
call
jae
ret
lds
push
loope
scas
mov
xor
dec
mov
mov
xchg
mov
lret
mov
inc
mov
jmp
or
inc
mov
fs
cs
add
pop
scas
movsb
and
loopne
test
pop
enter
mov
or
pop
shrl
imul
and
dec
adc
lret
outsb
lret
pop
sti
pop
jb
stos
mov
out
jbe
dec
test
adcb
or
mov
jl
into
ret
jbe
xor
dec
in
jne
lret
loopne
and
mov
xor
leave
mov
push
pop
js
out
inc
pusha
jno
jle
xchg
push
sub
cltd
xor
popa
or
jo
sub
imul
icebp
dec
test
sbbb
dec
mov
inc
vandnps
inc
in
push
dec
into
and
push
jle
mov
inc
subb
out
push
xor
ss
push
mov
inc
pusha
inc
mov
xchg
fidivrl
imul
mov
fisubrs
mov
rcrl
in
pop
das
sahf
push
test
je
fisubrs
push
push
imul
gs
je
xchg
sub
sub
adc
or
pop
or
imul
scas
pushf
xor
mov
jecxz
fwait
in
test
mov
or
add
pop
pushf
or
jge
nop
lods
xor
sbb
cltd
inc
sahf
inc
push
rcrl
mov
arpl
push
testb
sarb
mov
popf
xlat
xchg
add
adc
pop
insb
and
movb
notl
dec
jb
ljmp
jno
and
pop
cmp
xchg
dec
dec
sahf
mov
pop
cmpsl
out
mov
sbb
inc
inc
bound
jb
mov
mov
arpl
sub
dec
mov
dec
addb
loop
jnp
jmp
mov
add
es
mov
xchg
aam
pusha
aas
mov
pop
sub
adc
inc
bnd
mov
aad
jp
mov
pop
or
test
dec
fs
popf
or
fsubs
ja
ljmp
movsb
mov
lea
pop
add
das
leave
adc
add
inc
sar
popf
add
dec
scas
lods
lss
ljmp
jg
jnp
ret
mov
pmulhw
and
shrl
push
es
ret
and
sub
xlat
sbb
fildll
inc
lock
xor
dec
adc
sbb
sub
lret
mov
stos
cltd
test
insl
pushf
idivb
mov
adc
push
cwtl
mov
rorl
test
lret
int3
sahf
nop
push
xchg
loope
ljmp
mov
push
mov
fistpll
and
jge
inc
pop
scas
out
test
jp
mov
add
xor
loope
rcrl
and
das
movsl
fildll
jl
loopne
xchg
je
int
sbb
dec
in
jg
pop
test
in
aam
inc
add
cli
xchg
fcmovbe
fadd
or
sbb
xor
dec
mov
push
push
sahf
cmp
iret
mov
dec
es
aas
fstpt
call
in
push
test
xor
pushf
divl
pop
lds
jno
xor
lret
ret
orb
repnz
mov
sti
cltd
cmpsl
add
cmp
stc
adc
jae
and
dec
sbb
cmp
xor
or
notl
sub
and
inc
sahf
cmp
shrb
jp
adc
ljmp
popf
dec
insl
xchg
sub
jge
and
jo
pop
daa
pop
xor
jne
xor
sbb
dec
gs
mov
das
mov
gs
int
mov
xchg
insl
rcll
cmp
mov
sbb
cld
dec
cmp
cwtl
out
lret
ds
aam
mov
add
ljmp
push
or
insb
jnp
insl
loope
xchg
push
inc
pushf
inc
ret
ror
hlt
mov
and
test
add
mov
enter
scas
das
add
add
xchg
mov
xchg
test
test
out
outsb
mov
les
push
insb
inc
pushf
leave
loop
jnp
shl
and
sub
int
fnstenv
out
sub
fcmovnbe
stc
or
inc
sti
loope
push
adc
sbb
xor
xor
dec
jecxz
pop
aas
scas
movsb
daa
push
fldl
ljmp
int
pop
div
mov
enter
movsl
fisubs
push
mov
mov
andl
es
cli
lret
xlat
ljmp
call
dec
dec
and
jp
xor
mov
fnstcw
or
lcall
mov
jl
pushf
cmc
xchg
mov
inc
cmp
push
addr16
mov
sbbl
sbb
mov
sbb
into
push
and
add
mov
psubd
and
sbb
sub
xor
aaa
lds
aad
pushf
push
test
stos
fwait
stc
xor
xor
gs
inc
flds
test
mov
test
popf
into
ja
mov
and
pushf
int3
aas
movsb
fucomip
dec
sahf
pop
test
jne
sbb
or
or
jp
inc
inc
test
test
jo
add
inc
stos
sub
inc
clc
add
test
std
popa
enter
or
pop
fistpll
push
inc
inc
pop
add
imul
fs
adc
mov
test
pop
mov
pop
stos
mov
cmp
jae
pusha
push
sub
cmp
sti
mov
lods
push
fimuls
mov
xorl
mov
cld
scas
imulb
jg
popa
bnd
rorl
xor
jno
sbb
insb
pop
daa
sbb
int3
enter
push
cmp
mov
xchg
in
fs
inc
adc
pop
sub
hlt
sub
and
jl
pusha
sub
lret
mov
insl
lock
add
push
int3
out
cmpsb
pushf
xor
je
sbb
push
xchg
mov
jae
sbb
cld
mov
jno
shll
jg
popf
lds
mov
dec
movsl
lds
outsb
popa
ret
filds
call
xor
pop
dec
loope
cltd
add
and
pop
aaa
pop
imul
jecxz
cmp
cli
jbe
repnz
add
and
and
cltd
xlat
push
out
inc
pop
stc
jbe
outsb
mov
outsl
xor
pop
xchg
lahf
clc
jae
inc
out
xor
ja
inc
rcll
sbb
pop
xchg
adcl
fidivl
push
mov
fbstp
pop
jne
lock
jo
insl
ja
lea
out
xchg
ret
add
xor
je
cli
mov
jmp
push
jnp
jle
mov
push
pop
in
test
fdivr
popa
clc
out
in
scas
jnp
dec
add
jns
leave
push
rclb
ss
popa
mov
arpl
inc
pusha
push
add
int
sbb
mov
cwtl
xchg
std
jno
das
mov
lahf
xchg
addr16
sub
mov
outsb
cmp
pop
cmp
cmp
pop
outsl
cmp
jg
jno
xchg
pop
scas
popf
stc
loop
xchg
inc
inc
sub
dec
rcrb
add
aam
nop
or
ret
test
es
andl
stos
lds
xor
mov
dec
movsl
inc
and
repnz
cli
pushf
xor
ss
in
leave
push
jge
mov
pop
jne
push
xorb
loop
in
add
xchg
rorl
fucomi
xchg
movsl
or
and
xchg
insl
add
imul
insb
lods
push
addb
and
mov
jmp
mov
cs
cld
leave
sarb
pop
cld
mov
pop
xchg
lret
add
in
sbb
sbb
lods
aas
lret
mov
jb
cmpsl
cmp
adcb
mov
push
jl
sub
rcr
movsb
push
clc
pop
shll
loope
add
ror
mov
inc
lea
imul
mov
out
out
inc
das
shrb
fcoml
pop
push
insb
sbb
xor
xchg
pop
dec
mov
cmc
push
scas
test
sbb
ja
in
mov
test
pushf
sub
pop
lahf
or
inc
and
push
dec
pop
sub
cli
daa
ret
push
mov
mov
outsb
pop
fnstsw
aad
int
into
notb
dec
mov
pop
insb
inc
sbb
cmp
or
out
push
addb
ds
std
cmp
daa
or
pop
shrb
ret
je
pop
mov
notl
xlat
pushf
popf
jbe
mov
adc
and
das
mov
popa
push
cmp
pop
enter
jno
or
mov
lahf
outsl
xor
es
xchg
jmp
xor
lcall
mov
push
scas
mov
leave
mov
sbb
jbe
repnz
testl
adc
xchg
jb
das
in
andb
popf
sbb
cwtl
or
pop
in
and
cli
je
xchg
xchg
fistpll
aaa
push
int3
xor
jmp
push
jbe
pusha
jmp
jp
test
or
leave
jne
xor
sub
mov
fnstsw
aad
or
ljmp
dec
sarb
add
pop
mov
jmp
test
cli
stos
cmp
dec
je
push
mov
jmp
and
sub
inc
fs
mov
xchg
insb
pop
pop
pop
mov
movsb
lret
outsb
sti
inc
test
adc
sub
pop
mov
xor
icebp
nop
sbb
es
cld
ja
inc
sarl
in
inc
testl
jb
inc
adc
or
pop
test
push
loope
lods
or
rcrl
push
mov
mov
cmp
xchg
fucomp
inc
stc
andb
outsl
enter
xchg
xchg
scas
push
test
sbb
fisttpl
mov
sarb
daa
sub
iret
data16
cmp
pop
ret
dec
mov
roll
xor
dec
mov
in
rcrb
jmp
push
sub
ret
pop
mov
cmp
add
lods
imul
in
jne
push
sbb
roll
cmp
and
cld
push
neg
jne
clc
mov
sar
fnstcw
or
cltd
std
ja
pop
cmp
shlb
stc
das
movsl
mov
jae
mov
jge
cmp
pop
testl
and
push
push
push
add
js
adc
xchg
sub
out
mov
cmp
outsl
sub
out
adc
mov
shrl
xor
fwait
out
data16
roll
mov
ret
and
dec
xchg
inc
ja
loop
test
fwait
lods
lea
mov
mov
cmp
sub
xchg
sub
inc
pusha
xorb
ljmp
jmp
std
das
dec
pop
ror
mov
mov
cmp
mov
nop
pop
rclb
jp
and
and
mov
push
cmpsb
jecxz
push
leave
push
sub
xlat
insl
into
xor
lahf
ss
dec
and
sub
das
xchg
adc
loopne
sub
xor
mov
and
fidivrl
or
push
call
jl
jo
mov
popl
call
xor
cmp
inc
or
fdivs
mov
xchg
lret
orl
sub
cmp
push
stos
jmp
push
inc
je
es
push
jno
out
sahf
test
inc
or
xchg
mov
fistps
and
xor
lret
fcomip
cld
and
push
iret
arpl
je
clc
cli
mov
inc
cmp
gs
sub
push
mov
jg
fnstcw
mov
xchg
mov
dec
lods
rcll
fs
mov
xor
push
in
cmp
jns
ljmp
inc
push
out
aas
movzbl
pushf
cmp
mov
mov
fnstenv
movsb
adc
test
fdivrs
loopne
dec
push
js
cmp
and
push
ret
aam
push
test
std
pusha
arpl
imul
ret
or
cs
loope
insl
ret
mov
insb
jl
or
jp
loopne
cmpsb
and
add
jns
dec
xor
jle
insb
add
adc
out
leave
sbb
xchg
and
mov
jp
dec
mov
fsubp
test
jge
aaa
jns
stos
out
add
movsb
mov
lahf
andl
ficoms
insb
sti
and
adc
stos
cmp
rcl
arpl
inc
or
adc
int
insb
add
push
xchg
sub
cld
inc
mov
cld
adc
movsb
sbb
roll
jno
sbb
out
call
lods
out
fidivrl
leave
iret
aam
je
int
adc
xor
int3
leave
pusha
ljmp
cli
lea
sub
mov
neg
loop
sbb
cmp
loop
fidivs
adc
push
cmpsb
mov
test
icebp
sub
aas
sarl
pop
mov
scas
cli
insb
test
dec
xchg
cmp
mov
mov
push
adc
cmpsb
pop
cmpl
outsl
push
shrb
mov
sbb
aas
lock
in
add
sbb
dec
push
mov
dec
inc
push
hlt
addr16
in
aaa
add
push
mov
mov
sbb
sub
add
mov
cld
inc
cmpl
icebp
xchg
sahf
pop
mov
repz
sbb
lods
cmp
xchg
in
dec
scas
add
push
outsb
outsl
lds
dec
and
inc
inc
iret
cmp
push
addr16
mov
pop
movsl
and
fistl
out
lcall
repz
lods
xchg
adc
add
das
dec
add
dec
daa
adc
jb
iret
jecxz
sbb
inc
dec
mov
xchg
mov
movsb
xor
aad
mov
push
inc
add
xchg
out
fdiv
clc
push
movsl
lods
xchg
outsl
ret
sub
cmp
add
pop
push
jmp
mov
jmp
fnstsw
les
ret
jmp
imul
lret
push
je
lock
ret
sub
dec
cmp
ds
clc
testb
andl
and
dec
xchg
mov
or
jnp
dec
xor
push
cmpsb
jnp
int3
test
pop
mov
cli
pop
aas
dec
mov
xchg
ret
int3
cwtl
push
sbb
push
mov
add
es
mov
cmp
jp
pop
mov
pop
sti
or
stos
jle
xchg
push
fidivl
call
clc
and
mov
dec
lds
mov
adc
fidivrl
int3
out
push
fdiv
mov
cmpsl
mov
lret
jecxz
mov
jne
lcall
arpl
leave
push
in
or
scas
je
sarb
jmp
fstl
leave
subb
in
push
aas
aad
out
and
cmc
adc
mov
fnstcw
orl
rolb
pop
or
push
imul
mov
mov
jno
inc
sahf
lret
dec
jns
movsl
sbb
adc
insl
xchg
insl
scas
call
mov
push
cmp
mov
subb
dec
jecxz
rcll
loop
pop
adc
dec
mov
and
sbb
pop
out
loopne
mov
clc
jg
leave
test
scas
adc
fists
xchg
scas
cmp
push
imul
cmp
xchg
out
xor
xor
push
stos
repz
mov
adc
imulb
cwtl
mov
ds
push
stc
clc
cmp
in
ds
adc
cmp
adcl
icebp
mov
fldl
fistl
sub
roll
popf
add
out
pusha
minps
sahf
jb
cmpsl
mov
xchg
lods
cs
mov
ficompl
stc
test
gs
jp
roll
fs
sbb
sub
xor
enter
adc
push
add
dec
jbe
inc
les
inc
sbb
mov
movsl
and
repnz
xlat
cmp
jp
add
out
js
ljmp
inc
sahf
imul
ljmp
je
test
sbb
ffreep
call
stos
mov
and
sahf
jne
xchg
or
hlt
pop
cmp
mov
cmc
arpl
dec
test
inc
lods
inc
je
lret
and
inc
mov
jbe
aaa
int
cmpsl
mov
addr16
pop
sub
sbb
test
pop
data16
scas
je
mov
int3
xchg
imul
xchg
bound
inc
iret
mov
rorl
dec
mov
out
cs
cmp
add
js
or
fldcw
pop
les
xchg
ret
call
out
lds
push
stos
in
dec
push
adc
lcall
imul
shlb
ret
jge
mov
negl
dec
dec
sbb
push
jbe
xchg
cmp
xor
in
fsubr
scas
and
add
arpl
pop
outsl
lds
sbbb
pop
lea
cli
addr16
adc
jns
mov
adc
xchg
mov
fdivr
rolb
sbb
dec
clc
pop
testl
popa
andl
inc
lock
lds
ljmp
icebp
fisubrs
nop
jecxz
mov
in
or
jae
jmp
mov
nop
sub
out
cmpsl
cwtl
movsl
dec
sti
push
xchg
ffreep
fs
adcb
pusha
and
jbe
ds
leave
cmp
shrl
adc
push
mov
lret
sbb
scas
in
sub
hlt
cmp
pop
dec
test
fwait
add
out
xor
pop
fstpt
int
pop
sub
xchg
dec
test
outsl
dec
daa
pop
mov
ss
out
push
sbb
shl
push
fwait
add
subl
xchg
pop
mov
fidivrs
outsb
jo
or
out
imul
arpl
sti
mov
or
jle
mov
xchg
cld
out
jecxz
sbb
xchg
bound
mov
mov
push
xchg
daa
and
add
add
push
test
mov
mov
aaa
jbe
sbb
insb
push
je
mov
cmp
dec
imul
push
daa
clc
mov
inc
mov
jmp
cwtl
and
cld
pop
mov
mov
push
sbb
cmp
fiadds
scas
or
addb
out
pop
cmp
inc
popf
jg
xor
outsl
negb
ret
or
mov
sub
sub
cmpsl
movsb
xchg
sbb
adc
aad
jl
test
inc
loope
aaa
xor
movsb
fidivl
sarl
in
pop
dec
jno
fdivrl
idivb
ds
mov
inc
sbb
loope
movsb
fwait
int3
push
jmp
mov
ds
push
dec
or
aam
daa
mov
adc
jb
and
aad
lret
out
gs
orb
and
push
mov
sahf
jp
push
and
or
or
xchg
sbb
test
lret
imul
cli
add
daa
test
stc
cmp
add
fnsetpm(287
xchg
pop
pusha
repnz
pop
imul
iret
mov
push
push
add
iret
xor
cmpsb
cmp
ud1
loope
leave
xchg
xchg
and
scas
ret
push
pop
dec
scas
xchg
ss
test
adc
fucom
test
out
pop
leave
sbb
testl
nop
daa
in
in
lods
mov
lods
xchg
into
add
sarb
call
inc
pop
xor
arpl
addr16
adc
cmp
popa
lods
dec
dec
ja
sbb
jp
outsl
pop
pop
sub
test
data16
mov
xchg
xlat
hlt
out
inc
sbb
add
int
pop
inc
push
maskmovq
mull
adc
jno
xor
cld
push
icebp
or
mov
sahf
xchg
add
jno
sub
push
jo
or
add
dec
adc
sti
adc
push
sub
data16
int3
lods
mov
rclb
jno
pusha
or
dec
je
cmp
or
insl
adc
jbe
gs
xchg
xor
xchg
cld
mov
push
ficomps
js
mov
sbbl
cmp
and
int3
filds
divb
jbe
pop
dec
sub
adc
faddl
pop
js
mov
push
scas
adc
shlb
push
iret
fildll
cmpsl
pop
dec
pop
xchg
add
out
or
jl
xor
sub
and
xchg
mov
sahf
int3
in
sub
cmp
xor
dec
stos
or
jno
pop
dec
cmp
ret
sbb
fdivrp
cli
fwait
pop
mov
divl
or
fidivs
sbbb
jmp
pop
sbb
mov
or
adc
dec
fs
jp
push
lahf
out
les
mov
dec
sub
aam
pushf
push
jmp
mov
add
ret
sbb
sub
inc
adc
mov
pop
icebp
add
adc
push
xor
lret
sub
xorl
rcrl
xchg
andl
sbb
dec
adc
popf
jae
or
fidivs
dec
jnp
mov
mov
stos
div
mov
sbb
stc
add
loopne
mov
mov
pop
or
inc
or
push
sub
inc
outsl
mov
jmp
sbb
adc
scas
mov
bound
iret
push
jae
adc
repz
rorl
sbb
mov
pop
sub
jmp
popf
xor
inc
jmp
aad
add
cmc
mov
dec
jb
mov
outsl
jecxz
std
push
add
mov
in
fsubl
sbb
ret
inc
iret
push
ljmp
adc
push
cmp
movsb
imul
ret
dec
pop
into
or
andl
aam
xchg
imul
repnz
xchg
mov
dec
arpl
xchg
sti
xchg
movsl
xor
mov
mov
addb
mov
xchg
rcr
hlt
xchg
or
push
pop
jnp
mov
jae
mov
je
stos
jmp
mov
fwait
push
adc
xor
jo
xchg
call
xor
fs
popf
xchg
lret
arpl
and
daa
jae
pushf
insb
or
adc
inc
outsb
add
je
fdiv
cmp
adc
rcl
out
xor
je
pop
push
sar
loop
add
or
and
push
shl
sarb
and
adc
stc
cmp
lea
inc
push
cmp
xlat
mov
sbb
stos
add
jo
popa
lcall
mov
xor
filds
or
add
dec
xchg
mov
mov
jnp
mov
pop
roll
sub
cmc
cmc
std
into
push
jp
inc
out
adcl
mov
ret
inc
jb
bound
xor
ret
ret
add
push
test
cli
fcomps
xchg
or
push
cmp
cmpsb
xchg
xlat
call
xchg
cli
mov
mov
iret
dec
sub
shl
cwtl
leave
int
jle
lcall
and
shl
adc
std
jno
dec
cmpsl
cli
adc
mov
rcrb
imul
jecxz
xchg
icebp
std
or
lret
push
mov
std
push
fwait
pop
mov
movlps
sbb
loope
ret
hlt
sbb
pop
cmp
xor
in
dec
pop
imul
out
pop
cmp
test
sub
pop
negl
cmp
cmp
cmp
stc
lds
ret
inc
mov
or
fdivl
jl
rclb
sahf
daa
enter
int
divl
addl
or
cvtdq2ps
jge
call
insl
add
mov
adc
call
mov
xchg
and
pop
imul
mov
lods
push
pop
fistps
xor
mov
aam
mov
jns
xor
cltd
adc
jle
inc
mov
pop
enter
sbb
dec
outsb
arpl
pop
aas
movsl
lea
sub
subb
dec
incl
decb
push
jge
data16
cmpsl
imul
jns
pop
sbb
fistpll
push
cmpsl
sbbb
sbb
and
aam
adc
cmpsl
push
mov
add
adc
cmpb
test
and
test
sbb
push
cwtl
pop
cld
sbb
cmpsl
dec
pop
sbb
in
jns
out
cmp
mov
lahf
push
stc
pop
push
pop
outsl
sub
dec
pop
cmp
pop
add
js
pop
stos
ljmp
fisttpl
cli
out
test
lea
sbb
daa
es
aad
aad
out
jle
cmp
add
repnz
popf
js
cld
daa
sub
or
push
lea
cmp
mov
add
mov
les
pop
push
jecxz
or
pop
lcall
or
mov
clc
movsb
orl
outsl
out
test
mov
or
xchg
and
clc
pop
mov
xor
and
pop
icebp
adcl
sbbb
aad
inc
insl
add
xchg
cmpsl
xor
mov
mov
lahf
stc
and
cmp
lds
test
repnz
mov
movsl
addl
xchg
mov
andl
jne
std
js
push
js
fbld
cmpsl
cli
mov
add
add
pusha
in
mov
testb
jns
xor
push
mov
mov
mov
jbe
sbb
and
xchg
xor
push
fstl
jp
cltd
adcb
jecxz
jle
jnp
adc
xchg
or
cmpsl
jle
es
jp
jecxz
adc
push
test
mov
sbb
lea
mov
jae
xor
xchg
push
push
aam
lods
jno
pop
pop
xchg
sbb
das
aam
cltd
insb
mov
mov
cmp
loop
sahf
clc
xchg
mov
test
int3
jo
mov
mov
lea
lcall
cltd
sbb
fcmove
insb
pop
cmp
and
icebp
push
popf
and
jle
jmp
dec
and
mov
pop
or
or
or
pop
out
scas
mov
js
or
loopew
scas
push
std
aas
pop
mov
push
or
fstl
or
jnp
gs
inc
aaa
sti
inc
jecxz
stc
cltd
ss
add
lods
imul
sbb
ljmp
je
inc
add
fisubrl
testl
pop
mov
cltd
push
xorw
int
movl
sub
cmp
das
dec
sbb
jge
rol
mov
push
test
mov
leave
xor
ljmp
out
mov
ds
gs
dec
shll
mov
ds
sub
pop
cmpsb
sar
cs
test
frstor
stos
movsl
inc
sbb
mov
in
xor
mov
out
mov
cs
mov
jne
jo
jecxz
bound
int
push
inc
inc
aas
lret
clc
xor
das
shrl
fstpt
ss
or
fldcw
mov
lret
loop
negl
sarb
fmul
jae
dec
mov
add
jge
lea
push
xchg
mov
mov
cmpb
out
xchg
lahf
and
dec
xchg
mov
mov
xchg
out
scas
sub
dec
loopne
xchg
sahf
mov
push
inc
add
jo
mov
add
data16
dec
insb
add
data16
mov
mov
adc
fisttpll
sbb
push
pop
incl
daa
mov
xor
mov
push
add
sub
mov
outsb
mov
sbb
pushf
cmpsl
lahf
cld
push
test
cltd
mov
mov
insb
push
sbb
sbb
mov
ror
shll
jg
pop
ret
mov
cli
push
imul
sbb
mov
test
push
mov
lret
cltd
jne
add
fisubs
repz
dec
xor
in
adc
xor
in
xchg
cmpsl
subl
adc
imul
lret
sub
xchg
inc
pushf
dec
inc
pop
cmp
push
sbb
dec
jno
ret
sub
test
js
loopne
fcomp
mov
leave
fstl
maskmovq
and
dec
mov
ds
adc
es
mov
leave
jns
mov
jnp
in
test
xor
rorb
repz
sub
je
jb
out
imul
sbb
jl
or
inc
sbb
push
inc
icebp
aaa
pop
ret
lock
push
mov
jae
test
arpl
sbbl
fbstp
into
test
imul
jge
fcomi
insl
loope
dec
add
mov
push
stc
jp
mov
xchg
jno
push
or
adc
clc
sub
xchg
dec
arpl
mov
or
mov
ror
dec
loop
mov
inc
outsl
je
inc
scas
into
fcomip
push
inc
lcall
test
ljmp
push
dec
adc
cmp
xchg
and
popf
add
repz
mov
push
dec
cmp
push
cs
addr16
and
lock
push
dec
in
pop
xor
jle
push
jns
test
bound
and
cmpsb
in
lret
cmp
xchg
js
fisubrs
xlat
jmp
shlb
imul
adc
fldt
insb
dec
arpl
ja
xlat
out
xor
cmp
addr16
inc
adc
negl
and
stc
into
sti
mov
xor
out
stc
mov
imul
sar
xor
movsb
mov
fldt
imul
orl
xlat
adc
movd
mov
subps
xor
sub
das
or
sub
ret
cltd
pop
dec
cmp
cmc
aad
cmp
inc
push
gs
pusha
and
jg
xor
sarb
repnz
sbb
cmc
push
js
adc
xchg
insb
push
mov
push
dec
jmp
pop
fs
and
fwait
adc
test
inc
cmp
imul
mov
negb
in
cmp
fsubrl
lcall
push
jb
push
jae
add
test
mov
cmp
pop
adc
fldl
jecxz
in
jmp
lock
sbb
stc
xor
cmpsb
rcrb
jo
outsl
imul
outsb
adc
jb
outsb
hlt
adc
out
push
inc
fs
push
push
and
inc
gs
dec
arpl
bswap
cmp
jmp
sub
mov
push
fs
lcall
adc
xchg
xchg
pop
dec
dec
in
or
leave
push
rcl
clc
jecxz
cmp
dec
mov
jnp
or
mov
lret
jb
mov
int3
push
out
dec
adc
xchg
sub
jge
xor
out
and
or
and
xor
cltd
orl
cmp
in
testl
mov
xor
sub
sbbb
fnstenv
cltd
test
jg
cmpsl
dec
roll
sub
or
and
js
sbb
xchg
dec
jle
cs
test
pushf
dec
mov
loope
pop
xlat
in
rclb
test
push
xor
sub
xor
sbb
pop
cmp
push
pop
sbb
adc
repz
or
cmp
fildl
sub
int3
pop
cmp
xchg
push
dec
mov
mov
cmp
inc
inc
call
dec
loope
cmp
xor
adc
test
call
insb
loop
lret
inc
arpl
mov
mov
test
cmp
shrl
notl
push
push
clc
jae
loop
ret
notb
ret
jle
mov
or
adc
jb
push
pop
xor
in
push
rcrb
add
sub
ffree
dec
push
mov
notl
xor
aam
stc
dec
and
loopne
jae
in
pop
push
push
cwtl
adc
lock
out
cmpsl
bound
xchg
and
dec
sbb
jbe
jae
mov
mov
cmovae
loope
inc
loopne
aas
sbb
fwait
jecxz
adc
in
movsl
cmp
out
dec
mov
xor
mov
inc
mov
in
adc
cld
pop
lahf
insl
inc
fcoml
leave
mov
cs
int3
add
fcmovnbe
jne
sbb
xchg
fistl
adc
out
sti
pop
jg
push
lcall
mov
push
sbb
sbb
push
sbb
jg
cmp
push
cmpsl
std
lcall
in
inc
cmpsb
inc
out
pop
jge
ds
hlt
mov
hlt
or
out
pop
sub
sub
pushf
fistps
hlt
mov
leave
xor
rcl
jno
aas
js
inc
cwtl
xor
repz
xchg
mov
insl
cwtl
in
ds
decl
mov
pop
cmp
stc
imul
lods
mov
in
push
orb
and
clc
mov
sar
jmp
pop
or
pop
call
pop
dec
mov
in
xor
or
filds
xor
cmp
fcmovbe
lods
or
ja
mov
inc
out
jns
in
int
mov
xor
jbe
push
xchg
push
inc
cs
pushl
shl
sbb
xor
fstp
hlt
mov
jl
aad
add
in
aad
hlt
test
dec
mov
sbb
call
dec
mov
push
in
xor
lret
mov
xchg
test
or
cmp
add
jb
inc
sub
daa
stc
nop
pop
int3
mov
jns
mov
arpl
adc
dec
fnstcw
xchg
jno
and
insl
xor
shrl
add
fs
ja
jbe
shld
inc
and
pushl
ret
mov
pop
dec
loope
sub
pop
cld
push
dec
sti
pop
cs
mov
dec
adc
outsb
dec
arpl
repnz
loopne
xor
inc
push
jg
cmpsb
cmp
jge
cs
sub
fldcw
imul
jne
in
divl
into
das
pop
pop
push
lods
mov
fsubr
push
loopne
leave
and
shll
inc
mov
mov
add
push
inc
call
fldl
lea
sbb
mov
ret
and
xor
movsl
pusha
mov
pop
jns
and
jns
test
imull
jb
into
aaa
cmp
sub
aam
cmp
cmc
mov
pop
and
fstpl
xor
cmp
adc
hlt
push
dec
xchg
lock
mov
aad
lahf
push
mov
jle
inc
enter
xchg
push
inc
pop
ds
and
and
sub
push
jmp
out
jo
scas
roll
add
sub
xorl
sub
sbb
popa
inc
popa
xchg
icebp
xchg
and
notb
jle
dec
inc
out
jmp
ss
int3
push
call
xchg
push
in
push
lea
xor
lods
push
push
jo
int
jno
lds
ljmp
inc
ficompl
shll
mov
mov
fs
or
push
xchg
mov
shll
insl
push
pushf
xor
in
out
fcmovbe
mov
jo
es
xor
test
push
jae
mov
mov
push
mov
adc
inc
push
fwait
data16
je
arpl
popa
xchg
sahf
and
stos
mov
push
and
popf
jo
shl
sbb
mov
pusha
loop
in
add
inc
xlat
test
stc
xorl
pop
repz
adc
cwtl
mov
add
mov
ret
or
cmpl
mov
int3
or
test
cwtl
sbb
pop
fdiv
idivb
insl
insb
sbb
xchg
jge
cmpsl
jp
dec
dec
scas
dec
test
xlat
icebp
pop
cwtl
push
pushf
loope
cmp
add
sub
pop
sarl
pop
iret
and
imulb
cmp
adc
dec
push
sbb
bound
ja
adcb
xor
sub
rcrl
insb
fwait
sub
dec
hlt
add
pop
insl
add
xchg
adc
loop
sub
cltd
cmp
int3
inc
push
bound
xor
inc
ficoml
jmp
xchg
jo
mov
or
faddp
sbb
mov
div
dec
repnz
push
daa
jp
shlb
mov
jbe
mov
jge
addb
sbb
push
pusha
jge
or
mov
xchg
add
jle
mov
mov
lcall
clc
sub
fcoms
push
push
scas
les
hlt
lret
xor
pop
jns
into
mov
inc
sti
movsl
pop
dec
add
dec
outsb
shll
xchg
sbb
xchg
es
dec
les
add
pop
sbb
in
xorl
inc
push
xor
pop
mov
rcrb
push
cmpsl
fistpll
sub
pop
into
mov
push
push
mov
sub
and
scas
push
scas
push
imul
or
mov
mov
in
and
pop
mov
mov
mov
mov
dec
outsl
xchg
out
xor
fmull
mov
scas
cmp
and
jl,pn
mov
dec
and
pushl
mov
add
or
adc
mov
dec
out
mov
imul
lds
mov
mov
and
jecxz
fsts
flds
add
daa
lahf
push
xor
cmpl
pop
mov
mov
dec
dec
sarb
mov
jge
shrl
sbb
xorb
add
xlat
subl
sbb
mov
cltd
jl
outsl
add
sbb
cwtl
and
and
in
jmp
push
or
lcall
sub
pop
cs
loop
dec
mov
ljmp
aas
flds
xchg
dec
mov
sub
in
dec
cmpsl
movsb
in
stos
sub
adc
outsl
inc
pushf
xor
in
test
adc
sbb
dec
lahf
clc
mov
out
inc
dec
jno
sub
and
repz
stos
sub
add
lods
inc
lret
sahf
inc
push
jbe
ss
pop
inc
inc
sbb
les
cmp
test
xor
xchg
pushf
dec
or
xchg
insl
ret
mov
hlt
aaa
sbb
dec
popf
mov
imul
inc
bound
xchg
dec
mov
fsubr
leave
les
ucomiss
fstl
cltd
insb
add
mov
mov
or
in
out
fadd
sbb
jne
sub
aam
sahf
xor
add
fistps
mov
imul
jp
lret
insl
lock
mov
test
cmpsl
xchg
jl
or
es
fbstp
sarl
out
jo
jne
mov
enterw
iret
daa
inc
test
outsl
data16
ss
lret
xchg
pushl
mov
notl
jns
mov
push
cmp
out
or
test
mov
cld
and
pop
mov
inc
rcr
and
add
in
mov
fs
pop
jmp
mov
stc
je
pop
mov
nop
ret
stos
iret
sub
orl
lock
cmpsb
test
sub
addr16
ss
das
inc
rclb
push
popf
dec
repz
popf
bound
pop
lahf
add
jl
push
cli
push
adc
clc
xchg
pop
push
xchg
aam
ljmp
idivb
pop
push
xor
loope
movsb
jecxz
add
aam
mov
add
fwait
out
dec
mov
in
stos
xchg
popf
mov
push
xor
jmp
inc
sbb
xor
shll
xchg
push
cwtl
mov
adc
sub
push
ds
loopne
loopne
movsb
lds
adc
xchg
mov
cmp
idivb
jbe
xchg
sbb
sub
daa
pop
nop
xchg
xchg
clc
adc
mov
xlat
bound
mov
aas
mov
jb
jecxz
imul
cmp
stc
imul
mov
ret
filds
mov
add
pop
movsl
push
push
stos
inc
hlt
loope
mov
sarb
rol
cltd
sbb
inc
dec
mov
call
stos
or
jns
and
mov
jmp
jae
rol
cwtl
pop
sub
mov
enter
and
push
adc
jbe
push
cmp
mov
out
int3
mov
lret
outsb
in
fdivrl
sbb
cmp
fwait
pop
rcl
xor
je
xor
call
sbb
push
jbe
push
mov
xchg
cmpsb
cmp
negl
icebp
adc
in
pushf
sub
adc
mov
sbb
adc
or
aam
lods
cmc
in
push
data16
cmc
push
and
mov
stos
xor
aas
jmp
adc
or
loope
lods
mov
lret
ss
int
mov
cmpl
mov
cmpsl
add
mov
iret
inc
arpl
mov
mov
out
xor
mov
data16
es
repz
insl
sub
mov
cmp
or
dec
add
popa
lods
xchg
test
push
es
mov
in
outsl
add
mov
sbb
cmpsl
inc
xor
out
jecxz
int
inc
xor
add
enter
adc
xchg
cmp
pop
sub
push
jg
add
xor
and
test
xchg
int3
or
jl
daa
scas
cltd
or
adc
clc
int3
jmp
xor
pop
mov
loope
ficomps
cli
mov
outsl
loopne
dec
pusha
aas
inc
jno
jae
push
test
mov
lods
cld
leave
push
aas
lret
cld
pusha
ja
or
fdivl
pop
mov
mov
outsl
daa
dec
sbb
cwtl
movsl
pop
ss
out
jge
test
cmp
sbb
pop
mov
popa
cmp
rol
sbb
mov
jno
fs
inc
sub
enter
fisubrs
nop
cmp
lcall
sbb
nop
fnstsw
std
test
add
adc
sbb
add
lds
mov
mov
sbb
dec
xchg
push
imul
test
arpl
into
xchg
shlb
mov
mov
xchg
shr
pop
xor
lret
popa
jl
es
subl
lret
js
push
call
fs
outsl
loop
or
lcall
and
data16
push
add
sbb
mov
jb
cltd
push
mov
daa
addr16
je
mov
in
pusha
and
cmpsl
ds
fldl
mov
dec
and
xchg
push
add
fwait
add
rolb
test
fxch
ss
jns
cmpsl
in
aaa
pop
fchs
mov
lea
test
daa
or
movsb
rcll
cli
push
test
fstpl
js
xchg
pop
sbb
arpl
rol
rep
loopne
cltd
fists
es
sub
jecxz
les
mov
xor
shl
lahf
not
jbe
mov
push
push
xchg
out
enter
nop
aad
jo
sar
repnz
shl
adc
loopne
popf
subl
ljmp
push
jle
pop
jo
imul
stos
cmp
dec
clc
adc
fbstp
std
fwait
push
xor
sbb
push
fnsave
ret
sub
repnz
add
in
pop
or
outsb
dec
rcrb
insl
cmc
push
and
sub
jno
dec
jg
cmp
movsl
jno
pop
push
mov
mov
adcl
jl
leave
lcall
or
in
adc
mov
addl
cld
std
dec
and
or
mov
xchg
xor
dec
pop
imul
pushl
nop
inc
cwtl
std
fnstenvs
and
mov
roll
ficoml
in
adc
dec
inc
cmpsl
and
add
rcl
pop
je
dec
or
add
nop
xchg
mov
or
js
pusha
xchg
and
pop
adc
dec
xor
mov
nopl
dec
cmp
add
xchg
imul
or
lods
aam
popa
ljmp
aad
push
jno
adc
push
cmp
mov
mov
lock
lds
sti
aad
and
std
push
xchg
dec
pop
cli
jecxz
sti
mov
gs
lret
pop
mov
adc
outsl
clc
test
lock
inc
xor
js
shll
loopne
insl
movsb
ds
mov
adc
add
je
push
adc
inc
js
gs
xor
add
fcmovu
mov
xchg
pop
jnp
sbb
test
ljmp
inc
sbb
movsb
cmp
mov
ret
adc
mov
adc
pop
fiadds
notb
pop
in
pushf
test
mov
insl
jg
xchg
into
push
cmpsl
lock
leave
add
mov
fstps
lret
outsl
cli
into
lret
lods
clc
inc
test
xlat
outsb
push
stc
cmc
adc
int3
mov
insb
out
aad
ffree
or
shrb
mov
rorb
aad
pop
jg
sbb
pop
mov
jg
int3
lret
test
mov
ljmp
push
sub
push
push
popa
add
shll
rorl
popa
test
mov
sbb
out
dec
inc
dec
dec
inc
cmp
out
jo
jbe
divl
adc
xor
xchg
xchg
add
inc
push
inc
push
and
cmp
cltd
shlb
in
in
popa
and
xchg
pop
test
and
or
sbb
jo
fwait
and
sbb
pop
jno
cli
xor
pop
mov
pop
test
rcrb
sbb
inc
xchg
inc
cs
ds
stos
jp
aam
cmc
int3
test
aam
and
into
idiv
iret
jmp
andl
cmp
adc
sbb
or
adc
or
and
int
sub
lods
sub
testl
jb
imul
outsl
cld
mov
pop
cmp
rcrb
inc
push
xchg
aad
iret
cmp
cwtl
pop
push
inc
dec
sub
dec
cmpsl
outsl
loope
aam
mov
ljmp
sub
inc
pop
in
sti
pusha
std
mov
test
adc
jae
dec
dec
fninit
mov
cmpb
in
push
call
cmp
mov
lcall
jmp
movb
inc
sahf
adcb
nop
inc
and
js
and
cwtl
popf
adc
mov
into
lret
dec
mov
mov
ret
dec
scas
out
xor
mov
mov
jge
mov
dec
dec
cmp
cmp
xchg
push
mov
push
add
icebp
test
adc
sahf
dec
pop
filds
sub
cmpsl
adc
push
ret
pop
adc
and
or
and
out
ljmp
add
push
in
lcall
mov
out
lcall
cmpsl
or
fdivs
stc
sahf
sbb
pop
cld
inc
mov
imul
daa
push
cmpsl
push
inc
arpl
xchg
cmp
mov
data16
das
sbb
jno
cmp
iret
push
outsl
cmpsl
sbb
in
adc
lret
je
test
jmp
repnz
dec
pop
repnz
cmpsb
arpl
cmp
push
stos
test
add
jecxz
stc
in
lret
and
jae
xlat
shrb
mov
dec
test
push
mov
add
adc
cmp
lcall
addr16
fsubs
fldl
inc
push
add
nop
adc
data16
popf
sahf
jns
daa
daa
xor
cs
mov
clc
jnp
cmp
push
addb
cmp
negl
mov
cmp
outsb
rol
cmp
stc
insb
jle
ret
sub
pop
ficomps
fisttps
cmp
adc
pop
imul
or
inc
xchg
lods
lcall
or
ret
int
jns
mov
push
add
pop
movsl
dec
lret
dec
rolb
stos
movl
arpl
out
xchg
aam
jno
loope
lahf
sbb
jl
out
and
loopne
cmp
idiv
aad
jo
and
push
popa
jmp
arpl
mov
inc
xor
mov
sbb
pop
test
mov
or
loop
outsl
dec
adc
ss
std
fdivrl
xor
mov
mov
cmpsb
adc
stc
shr
outsl
loopne
cmp
int
int
cli
dec
loop
adc
imulb
bt
inc
push
movsb
outsl
mov
imul
aas
adc
mov
in
push
mov
loopne
je
in
mov
out
ret
sti
push
add
mov
push
inc
insb
cmp
cmpsb
lock
aam
sbb
sahf
jo
in
std
mov
add
mov
jno
outsb
ret
xchg
fsubl
inc
add
or
lcall
push
mov
push
sti
stos
fdivl
sub
dec
inc
cwtl
lea
pop
add
lret
js
xchg
sub
popf
mov
cmp
scas
call
into
jp
leave
jp
xchg
sbb
fimuls
movsl
mov
push
push
fsts
jns
repz
test
int3
and
inc
push
ss
test
inc
push
or
mov
pusha
test
pop
mov
lret
dec
jae
or
je
mov
jno
xchg
daa
xlat
test
or
aas
inc
jnp
dec
fwait
mov
pop
cmp
outsb
jp
loop
insl
mov
xchg
inc
insl
clc
cmpsl
ss
dec
push
filds
mov
fs
movsl
pop
inc
pop
or
out
rcrb
addr16
cmp
mov
aas
addr16
cltd
mov
cmpsl
outsb
out
or
js
outsb
das
lods
test
ljmp
repz
pop
mov
lcall
cld
ljmp
inc
iret
mov
imul
mov
jb
and
push
cmp
push
into
mov
je
pop
lock
adc
cmovb
ror
xor
jnp
outsb
sub
dec
mov
pop
xor
shl
push
dec
jle
aam
lahf
inc
in
je
daa
cmpsb
push
lret
mov
xor
in
call
and
jge
inc
scas
jp
jns
jmp
add
or
hlt
das
cmpsl
das
fmuls
mov
sub
rclb
hlt
mov
jl
andl
loop
mov
cmp
push
dec
in
arpl
mov
sub
std
sbb
shrl
outsl
jno
mov
inc
pop
fidivs
addr16
sub
add
je
repnz
mov
jg
out
jmp
pop
in
xchg
dec
mov
push
es
insb
mov
pop
outsb
mov
test
addb
pop
repz
imul
mov
js
sbb
scas
sub
lods
rcrl
xchg
and
lahf
mov
js
and
inc
push
je
mov
outsb
jmp
and
vcvtps2pd
cmp
or
or
aas
lahf
test
mov
mov
fcom
pushw
cmp
pop
aad
sarb
jg
popa
in
ljmp
push
mov
fbld
pop
data16
mov
fwait
jl
push
out
and
insl
shr
xchg
cltd
outsb
hlt
mov
ret
insl
mov
add
add
test
xchg
test
cmp
or
xchg
rcrb
or
mov
gs
sbb
pop
cmpsl
sbb
mov
push
lods
lret
test
bound
test
cwtl
cltd
fsubr
sarb
adc
std
sub
jecxz
stc
test
daa
gs
push
push
lret
xchg
add
aam
icebp
mov
dec
idivb
nop
cmpsl
mov
in
sub
dec
sbb
dec
outsl
or
test
xchg
dec
decl
test
into
and
lea
or
fs
cmp
mov
lret
add
jne
outsl
pop
and
cmp
aas
sbb
in
test
sbb
lods
gs
cwtl
jo
add
sbb
sbbb
jo
dec
jp
je
push
das
cmp
rorl
jb
or
pushaw
inc
mov
popa
mov
add
and
clc
xchg
in
mov
pop
inc
inc
dec
loopne
mov
cmp
push
dec
lods
dec
mov
orb
fildl
push
jnp
movsb
mov
in
ss
stos
call
loopne
pusha
cmp
cmpsb
fcomp
xor
add
adc
fwait
and
daa
xor
or
xchg
inc
aaa
adc
or
or
das
pop
repz
xorb
xlat
fnstcw
fistpll
enter
and
dec
das
aam
popf
test
and
or
dec
push
in
and
imul
and
loope
addr16
sub
jns
loope
test
sti
adc
and
sbbb
hlt
add
fld
loopne
lret
mov
sbb
pop
ficoml
rcrl
add
sahf
das
adc
popa
clc
inc
das
or
push
and
aas
movsb
gs
pushf
bound
aaa
push
inc
pusha
mov
add
xchg
mov
jmp
mov
jle
dec
ds
pushf
cmp
pop
push
mov
in
or
insb
sub
mov
mov
pop
jnp
fidivs
mov
xor
dec
dec
mov
or
xor
test
out
jecxz
jmp
sub
or
repnz
scas
push
imul
dec
and
cmp
sub
lahf
stos
and
push
add
test
lock
fists
das
fptan
mov
ret
xlat
inc
scas
adc
sarb
dec
stos
icebp
ret
mov
das
loop
ljmp
ffreep
jns
in
in
push
xor
call
push
mov
mov
xor
jnp
push
test
mov
xor
or
pop
std
pop
push
jnp
xchg
fwait
test
push
sub
add
jbe
and
push
dec
lods
mov
imul
repnz
cmp
xchg
ss
mov
roll
jnp
lret
push
es
mov
ret
mov
imul
pop
push
dec
push
mov
pop
xor
pop
mov
cwtl
addr16
loop
cmp
add
adc
sahf
and
sub
cmp
jmp
ret
push
cmp
sbbl
ds
xor
cmp
push
xchg
adc
test
xchg
mov
jg
mov
les
in
pop
sub
rcrb
lret
sub
sub
fidivl
into
lret
push
push
mov
xor
fimull
mov
rcrb
repnz
popf
lds
adcl
insb
mov
stos
mov
mov
mov
and
xlat
adc
es
jle
xchg
push
out
xchg
int3
shlb
dec
pop
add
out
ss
jno
mov
lods
inc
cli
pop
or
mov
xor
xor
dec
or
push
hlt
ja
addr16
xor
cmp
or
cmp
xor
sarb
sub
mov
mov
outsl
push
jl
jg
push
in
loop
cmp
into
jge
push
enter
adcb
mov
mov
cmc
or
hlt
push
pop
push
mov
insb
adc
lods
dec
xchg
xor
aaa
mov
xchg
mov
mov
xchg
pusha
es
xor
sub
or
mov
out
outsb
inc
test
xor
dec
jl
xor
adcb
sbb
pop
mov
mov
jge
xchg
sub
cmp
in
mov
cld
mov
ds
xchg
mov
mov
gs
xchg
cmp
push
xchg
shl
in
sahf
int3
popf
xor
loope
mov
mov
lret
or
add
imul
dec
fists
cmpsb
mov
or
add
cmp
jno
popf
sbb
and
loopne
mov
push
jmp
mov
inc
and
pushf
popa
cmovb
adc
adc
xchg
and
lret
out
divb
mov
leave
push
hlt
push
fcmovb
movl
dec
test
mov
fidivrs
sahf
mov
push
mov
out
cli
insl
orl
fldcw
clc
cli
repnz
dec
sysenter
mov
or
push
xlat
imul
fidivrl
cli
lret
push
test
jnp
sarb
mov
or
pushf
adc
test
fiadds
sub
sub
test
sub
enter
xchg
inc
cmp
popa
cs
cmpsb
xlat
ds
or
in
into
daa
sbb
in
fmull
or
jns
xorb
push
and
push
iret
lods
mov
out
sub
pop
add
mov
outsl
inc
mov
stos
adc
pop
imulb
clc
mov
insl
ret
iret
gs
out
inc
fcmovb
cmp
jg
mov
bnd
fbstp
loope,pn
adc
sbb
arpl
dec
push
push
jno
xchg
inc
jl
mov
ja
cmpsb
fnstenv
repz
or
sbb
xchg
mov
jbe
push
mov
mov
shl
jae
mov
test
jo
pop
inc
cmp
lcall
push
cmp
ljmp
jno
adc
and
dec
sbb
dec
pushf
mov
push
mov
mov
ficoms
into
test
ljmp
fwait
pop
cmpsl
mov
xchg
out
xchg
inc
sub
jbe
jmp
sar
cli
mov
roll
pop
cwtl
jmp
sbb
pop
push
scas
dec
aas
lods
mov
mov
lret
roll
cmp
lret
push
xchg
cmp
shl
xchg
shrl
dec
loopne
arpl
mov
shrb
lcall
jo
je
cmp
dec
sbb
mov
dec
cmpsb
mov
out
shr
int
xchg
in
mov
pop
imul
pop
mov
pop
push
in
jns
insl
int
sbb
pop
mov
out
sub
cmpsb
inc
cwtl
sub
dec
dec
imul
cmp
mov
dec
out
sbb
int
xor
mov
stos
mov
xlat
mov
mov
sub
ja
adc
xchg
and
xchg
jmp
leave
dec
mov
leave
movsb
in
int
setno
dec
fldt
js
rclb
mov
mov
xchg
mov
fwait
jle
movsl
xorb
cs
stos
pop
adc
mov
mov
lea
add
sahf
das
adc
mov
fwait
ud0
cmp
out
pop
lahf
push
sti
xchg
xchg
andl
xor
mov
test
andl
xchg
lret
aas
filds
psubsw
popa
icebp
movsl
popa
and
les
jl
jmp
sti
iret
xchg
inc
xchg
ja
sarl
sbb
mov
add
fmuls
cmp
add
in
push
jb
ret
mov
jp
ret
loope
lcall
push
jne
insw
scas
mov
in
push
aad
sub
pop
repz
stc
xchg
cs
push
and
add
test
jl
push
jmp
sbb
jb
and
aam
fwait
pop
inc
or
push
pop
pop
jg
jbe
jns
xchg
sub
and
dec
pop
jp
loop
dec
adc
decl
sbb
sarb
cmp
or
pop
jnp
inc
mov
ret
outsl
mov
push
and
and
imul
shl
mov
jmp
xchg
lock
jnp
nop
cli
sub
mov
sub
hlt
and
or
popa
aaa
fisubl
popa
mov
inc
push
pop
psrad
nop
push
mov
clc
xchg
popa
fldlg2
test
in
divb
jmp
and
pushf
push
cli
push
sti
sub
out
jmp
ret
mov
ss
std
nop
mov
dec
arpl
popa
jmp
insl
mov
mov
mov
out
stc
xor
sub
xor
ret
loopne
mov
ficompl
add
das
push
jge
test
movsb
add
sbb
add
push
cmc
icebp
out
mov
adc
mov
hlt
inc
js
sbb
push
sub
stos
jns
lea
sbbl
add
out
inc
pop
sub
adc
decl
pop
adc
mov
sahf
xor
jno
insl
xor
jb
scas
xorb
push
fldl
ja
xchg
sub
sbb
sahf
mov
and
clc
xlat
mov
xchg
cmc
cmp
jge
lcall
ja
mov
loopne
dec
test
loop
push
mov
popf
dec
xor
icebp
sbb
popf
adc
scas
xchg
jl
sbb
orl
mov
aad
mov
ret
scas
inc
lods
sub
imul
loope
jmp
jbe
shr
mov
lret
sbb
test
xor
xor
mov
fisubs
jnp
ljmp
xor
or
cmp
scas
mov
jl
in
sbb
sahf
sahf
fisubs
ficomps
push
nop
sbb
stos
cmp
sti
push
imul
shr
pop
xchg
pop
stos
jno
fnstenv
push
dec
movsl
dec
sti
testl
ret
push
lods
xor
push
pusha
clc
adcl
pop
mov
dec
pop
and
push
mov
xlat
fmul
aaa
xor
call
sbb
in
mov
fistl
loopne
addr16
xor
push
dec
aas
lret
pop
fsubs
mov
imul
movsb
ffreep
fcoml
test
mov
and
fcom
inc
pop
ss
in
xchg
cmovno
fisubl
sub
das
sahf
adc
dec
cmp
jge
mov
pop
dec
xchg
pmaxsw
and
xor
mov
push
dec
or
jle
aas
xchg
into
addr16
test
add
adcl
scas
andb
push
pop
pop
mov
jp
push
jle
inc
sbb
ljmp
aas
xlat
mov
xor
cmp
ret
call
test
lcall
cmpsl
cmp
faddl
js
adc
scas
inc
xor
adc
leave
fxch
mov
andb
pop
or
cwtl
je
daa
mov
lods
aam
pop
sahf
adc
popf
inc
mov
popf
call
std
adc
testl
mov
rclb
jbe
mov
fidivrs
out
xor
and
add
sub
xor
aam
mov
xlat
stc
or
int3
aas
rcr
insb
inc
fistl
or
jno
push
test
aaa
cld
sti
or
cmp
jmp
pop
and
push
test
mov
outsb
mov
push
add
mov
mov
les
push
pop
stos
dec
fsts
gs
or
jae
sti
fildll
test
jg
add
adc
cmp
mov
shlb
scas
and
data16
std
call
and
mov
jb
dec
jae
idivl
hlt
clc
popf
xor
into
sbb
mov
jmp
aad
xchg
cmp
adc
xchg
and
negb
pop
cmp
fwait
lcall
and
xchg
xor
lock
ljmp
cwtl
das
cs
lret
mov
inc
mov
inc
jecxz
loope
loope
ret
xor
mov
mov
inc
mov
mov
add
aas
dec
push
pushf
lahf
mov
mov
inc
jno
sbbl
push
and
test
push
mov
icebp
js
je
rorb
in
pop
rcrl
arpl
test
movsl
sub
jae
jne
mov
adc
jae
pop
push
outsb
push
aaa
inc
pop
sbb
xor
inc
gs
xchg
movsb
mov
mov
rorb
lret
xor
mov
adc
lods
inc
dec
xor
xor
and
mov
and
push
ret
jl
in
rcrb
mov
sbb
test
xlat
pop
insb
and
out
xchg
mov
in
add
pop
fs
out
nop
loopne
sbb
lret
scas
xor
cmp
sbb
lods
cltd
mov
loope
mov
cld
adcl
or
dec
jbe
sbb
les
jae
daa
lahf
xor
cmp
repnz
jnp
mov
movsl
loopne
sahf
and
inc
vmwrite
ss
insb
and
dec
push
xchg
inc
push
fnstcw
bound
pusha
out
mov
dec
nop
jnp
shl
movsb
inc
push
loop
sbb
dec
adc
xor
lahf
xchg
pop
addr16
push
out
xor
ss
sahf
push
and
test
shrl
jp
lahf
js
out
aam
inc
push
mov
ja
outsl
out
sbb
hlt
cmp
call
icebp
ds
inc
pop
adc
and
sahf
test
xorl
jmp
sbb
or
into
loopne
add
cwtl
pop
fldt
std
inc
imul
add
dec
mov
jae
or
xchg
and
notl
add
dec
test
in
jbe
mov
sarl
pop
sti
sbb
xlat
and
mov
je
xchg
sahf
adc
test
sub
mov
nop
das
xchg
pop
int
mov
xchg
cmc
scas
jmp
or
sub
ror
hlt
cld
dec
mov
mov
or
dec
test
shlb
sub
jle
stos
cli
push
fdivr
add
data16
and
mov
jle
xchg
push
dec
pop
lods
mov
aas
mov
xchg
sub
adc
xor
sub
jns
inc
scas
andl
pop
shlb
icebp
xor
into
fadd
daa
mov
push
cmp
outsb
cmp
pop
test
add
in
jmp
and
cs
mov
push
fiaddl
adcb
gs
add
data16
pop
jb
fwait
iret
data16
push
and
add
out
popf
xorb
mov
xchg
nop
addb
jns
imul
sarb
cli
inc
iret
movsb
sbb
rolb
ficoml
and
jle
sbb
add
xchg
add
mov
dec
loope
lret
cmpl
iret
mov
daa
xor
scas
movsl
sbb
mov
dec
cmp
out
xchg
pop
test
pusha
imul
lds
mov
mov
pusha
sbb
pop
and
mov
xchg
jge
outsl
ds
sbb
fs
in
mov
rcrb
sub
cltd
clc
xchg
mov
push
jbe
xchg
mov
popf
fiadds
hlt
aam
and
jle
mov
jecxz
sub
add
stc
das
dec
das
stc
icebp
js
frstor
js
and
dec
xchg
jo
mov
mov
jnp
or
ja
pushw
mov
mov
je
and
inc
xchg
add
pop
sti
or
mov
fisubrs
cmp
adc
ret
ror
inc
mov
push
cs
call
pop
jns
mov
jl
cmpsb
inc
xchg
in
pop
add
mov
push
xor
push
ds
in
scas
xchg
lods
pop
outsb
test
mov
sbb
shll
cmp
lea
xor
imul
das
mov
cmp
and
xchg
xor
dec
stos
popf
std
mov
movsl
jp
out
adc
clc
xchg
test
cmp
sbb
ret
dec
sbb
hlt
xor
sbb
and
push
repnz
aaa
push
fwait
cmp
lahf
and
push
cmpsl
mov
cmp
xorl
in
jl
lods
movsb
nop
int
popf
or
and
loopne
and
popa
mov
and
inc
push
filds
stc
loopne
imul
mov
sti
mov
xlat
out
xor
mov
maxps
fwait
insl
ret
ds
add
and
jo
dec
dec
lret
lds
hlt
sbb
adc
fwait
sub
imulb
mov
jbe
pop
icebp
dec
into
adc
inc
andb
sbb
inc
gs
cmp
jnp
push
nop
xchg
mov
mov
add
xor
insb
mov
sahf
repnz
mov
push
and
out
inc
aam
pop
fs
jb
inc
push
adc
fwait
mov
mov
inc
fstpl
je
nop
neg
jge
mov
pushf
push
add
mov
cs
pop
dec
fsub
dec
dec
test
sub
sar
jge
push
ss
fs
decl
sarl
inc
mov
subl
pop
popf
sahf
xchg
jae
pop
ds
jo
add
cmp
mov
fidivl
cmpsb
lds
sub
mov
pop
push
push
lret
test
lret
es
cmp
addr16
jge
mov
test
fidivrl
movsl
push
inc
je
dec
mov
adc
sahf
arpl
lea
fnstenv
cs
sti
sahf
imulb
xor
ret
addr16
jp
lock
jb
lds
jg
sub
int3
dec
inc
pop
sub
jae
mov
and
stc
nop
out
mov
sbb
jle
repnz
loopne
scas
xchg
in
shlb
pop
in
inc
or
mov
adc
aas
test
xchg
inc
mov
out
adc
mov
out
mov
repz
jg
out
mov
push
or
bound
push
lcall
xor
or
mov
mov
cmp
and
and
sub
repnz
rcrb
ret
jbe
aad
xlat
cld
push
or
jmp
xchg
in
repnz
js
iret
arpl
movsl
pop
dec
or
std
push
push
out
es
fcoml
xchg
cmpl
push
xor
inc
fnstsw
xor
lret
xor
add
sbb
mov
jp
das
mov
fwait
cmp
pop
xor
push
xchg
ja
jge
sub
je
dec
add
jp
jae
sub
sbb
mov
push
pop
sbb
daa
pop
cmp
aas
adc
or
ss
sub
pop
xchg
insb
cmp
or
pop
cld
scas
mov
std
xchg
pop
dec
ret
pop
sbb
ds
push
pop
mov
mov
scas
cld
sbbl
cmp
sahf
mov
repnz
loope
addr16
fstpl
jl
add
dec
in
jb
mov
out
sbb
fwait
sbb
sub
xchg
inc
adc
mov
xor
lods
scas
jo
inc
push
mov
sahf
outsl
mov
arpl
std
lret
pop
pop
add
popf
arpl
push
push
sub
imul
jl
int3
lods
cmp
adc
into
push
insl
les
inc
sbb
adcl
xor
cmp
jl
pop
adc
repz
or
in
jge
lock
insl
mov
jne
cli
out
lds
sbb
aas
rep
jmp
pusha
insl
jg
pop
call
xchg
lcallw
ljmp
scas
sbb
scas
push
mov
jmp
cmp
or
idivb
popf
cld
in
cmpsb
pushl
xor
dec
xor
pop
shll
hlt
ss
mov
add
dec
pop
outsb
decb
push
inc
cmp
test
pop
add
inc
xor
and
dec
mov
or
inc
fistpl
aas
shlb
dec
popa
jmp
cld
cmp
aam
cwtl
pop
addr16
loope
jae
or
inc
lea
lock
sbb
add
inc
pop
push
scas
mov
in
push
xchg
dec
jne
hlt
out
es
cld
xchg
sbb
pop
iret
sub
and
mov
jno
or
sub
movsl
iret
xchg
fdivs
es
das
push
loope
mov
mov
aas
push
sub
pop
push
mov
adc
jae
xor
xchg
push
leave
ja
mov
and
imul
int3
scas
add
data16
loop
pop
hlt
ret
stc
cmp
cmp
dec
loope
scas
inc
xlat
enter
lock
popf
mov
mov
imul
popa
clc
or
mov
outsb
cli
sbb
mov
mov
jecxz
adc
pop
push
push
jae
ds
dec
rcl
dec
test
xor
mov
dec
xchg
or
ret
clc
shrl
jb
sbb
je
add
out
push
cmpsl
dec
leave
lea
dec
orb
stc
mov
fbstp
push
dec
mov
pop
add
sub
mov
das
lahf
add
jo
repnz
pusha
dec
lods
jo
pop
out
dec
sarl
push
mov
push
pop
movsb
lea
test
test
hlt
jg
jp
dec
cmpsl
cltd
sbbl
push
test
xor
sub
or
movsb
cmp
inc
adc
mov
mov
dec
sub
loopne
shrb
adc
lock
imul
pushf
cmc
sbbl
hlt
and
dec
popf
or
shlb
dec
cmp
push
int3
das
adc
jmp
int
inc
outsb
push
das
loop
and
lea
nop
scas
lds
shll
sti
jecxz
aaa
mov
mov
pop
add
mov
dec
xchg
mov
out
xchg
push
jns
mov
aam
push
xchg
loop
jl
cmp
popa
and
lea
pop
scas
cmp
fbld
cmp
push
rorb
cmp
int3
mov
add
int
adc
inc
sbb
mov
jb
movsb
fwait
push
pop
lds
jmp
mov
shlb
je
cmp
push
fcoml
mov
jbe
scas
push
sub
xor
pop
sbb
ss
push
lcall
scas
insb
pop
shlb
cmp
mov
iret
push
mov
stc
sbb
push
cmp
jb
adc
xor
inc
cmc
jecxz
das
xchg
pop
in
mov
ret
aad
je
movsl
dec
sub
jl
lret
fsubrp
push
out
xchg
jp
pushf
mov
fisubrl
or
push
push
lock
iret
gs
outsl
out
push
scas
lock
mov
js
in
push
fmulp
nop
dec
pop
lret
sbb
jecxz
pusha
fistpll
sub
notb
push
sub
sub
shll
xchg
in
clc
and
adcb
jl
pop
fs
sbbb
or
fstl
sbbl
test
cmp
fdivl
or
cs
fcoms
inc
call
sbb
ljmp
dec
mov
les
xchg
sbb
sbb
xchg
push
movsl
iret
loope
mov
in
mov
cwtl
push
pop
jecxz
xor
pop
sub
jp
jb
mov
icebp
adc
mov
popl
imul
fcomi
add
arpl
xchg
popa
mov
inc
fldenv
decl
iret
jl
shrb
pop
dec
or
call
inc
or
push
popf
arpl
and
mov
popa
cmp
xlat
dec
xor
adc
in
inc
adc
cltd
ss
xor
pop
inc
add
add
sbb
jo
mov
fneni(8087
insb
cmp
xor
jne
inc
es
cwtl
mov
adc
mov
shrb
jno
pop
pop
inc
test
push
cmp
xlat
jl
std
pop
leave
cs
add
pop
out
scas
lahf
jp
pop
ss
leave
mov
mov
or
lahf
sub
inc
jb
movsb
dec
push
push
push
imul
orb
fbld
dec
dec
movsb
add
jge
movsb
les
xor
orb
mov
sub
in
add
mov
fwait
cmp
fadds
add
hlt
mov
push
sub
int3
pop
mov
leave
xchg
in
je
shl
dec
bound
push
lahf
and
adc
ret
inc
sbb
inc
or
mov
insl
sub
xor
xchg
mov
and
mov
fdivl
adc
loop
sbb
xchg
andl
adc
outsl
push
scas
std
sbb
adc
adc
data16
fistpll
push
push
cmp
pushf
jge
leave
xchg
repz
and
aas
mov
subl
cmp
jns
sub
popa
adc
adc
push
loope
outsl
add
push
push
pop
orl
lcall
jle
mov
jle
push
adc
sub
mov
addr16
loope
pop
lret
aam
cs
loopne
mov
int
push
popf
sub
in
mov
es
lods
shl
cwtl
test
cmpsl
mov
adc
xchg
jmp
pop
sbb
and
mov
jg
in
pushf
or
pop
jb
jne
push
push
pop
push
push
jl
inc
xchg
cmp
rorb
jne
push
fucomip
out
jle
cld
sysexit
jae
iret
mov
add
sbb
ret
lret
stos
and
mov
xor
mov
ret
bound
paddusw
dec
bound
std
pop
mov
inc
push
scas
sahf
adc
loop
push
fwait
jecxz
mov
popf
popa
mov
fsubrs
mov
ret
lcall
and
out
adc
pop
inc
lret
cld
out
xchg
cmc
cwtl
out
int3
push
cltd
xor
rcl
out
or
add
decb
jne
jne
pop
leave
pop
cmp
pop
push
inc
ds
mov
xor
push
and
jmp
jae
stos
xorl
inc
fcoml
arpl
pop
inc
cmp
aad
mov
mov
mov
addr16
ret
je
or
and
cld
xchg
and
push
repnz
jae
xorl
ljmp
out
mov
mov
pop
mov
sti
add
repnz
xchg
pusha
cmp
cs
movsl
scas
out
push
aaa
imul
hlt
mov
push
dec
dec
adc
and
dec
jmp
add
jp
xchg
out
test
and
pop
shll
lcall
imul
xchg
pop
cli
push
xor
push
mov
pushf
dec
and
sbb
sahf
shlb
inc
inc
les
pop
in
xor
idiv
cmp
insl
xchg
inc
fs
pushf
stos
inc
into
jo
subl
in
pop
ja
stos
sbb
inc
dec
jae
push
mov
fldt
inc
push
scas
lret
loopne
inc
fsubr
test
jg
xchg
pop
repnz
cmp
aam
jl
xchg
sub
sbb
mov
adc
dec
push
sub
jle
mov
jmp
data16
mov
hlt
sub
xchg
mov
jp
fsubl
testb
stos
dec
test
mov
push
rcrb
jne
lods
xchg
out
add
loope
cmp
fsubrp
test
mov
fwait
cld
repz
cmp
pop
loope
rcr
dec
dec
js
in
flds
movsl
dec
cmp
out
lea
and
outsb
pop
jbe
das
ss
push
clc
cmp
jae
pop
clc
xchg
push
movl
cs
xchg
mov
mov
aam
sbb
sarb
test
or
push
iret
dec
movsl
jne
sbb
dec
or
cmc
daa
daa
imul
int
add
scas
stc
out
add
aaa
sar
in
stos
inc
xchg
adc
clc
dec
mov
ss
icebp
out
test
gs
fwait
pusha
bound
cs
repz
scas
adc
xchg
daa
shrb
in
sbb
mov
xor
lea
in
stos
fwait
popf
mov
or
out
dec
mov
cmp
inc
mov
dec
psubsb
jl
sub
je
mov
push
ret
rcr
jb
sbb
cmp
mov
jns
pop
aad
mov
or
inc
mov
adc
sbb
les
mov
or
jle
mov
mov
in
pop
sbb
cmp
shll
lock
fyl2x
out
scas
sti
repnz
and
inc
mov
imul
cmc
ljmp
dec
fcoms
lahf
bnd
push
ljmp
jb
pop
mov
jp
shl
ret
arpl
push
scas
out
movsb
cmp
push
ret
sahf
outsl
orl
xor
mov
add
testb
arpl
pop
mov
jecxz
lret
addr16
add
sbb
xor
arpl
mov
sbbb
fsubr
in
lea
pop
cmp
sub
fs
pop
repnz
idivb
scas
inc
fwait
mov
mov
movsb
cmp
sub
add
sbb
shrb
cmp
out
in
xchg
xor
and
scas
mov
xor
pop
dec
mov
sahf
mov
or
mov
std
dec
lea
push
inc
je
dec
jge
pushl
pusha
mov
js
jns
das
adc
dec
iret
cmp
pop
push
mov
jmp
loope
es
cmpsb
mov
sbb
aas
das
cmp
jnp
add
add
in
push
fs
lds
mov
mov
sub
std
lds
out
fstl
lods
inc
lahf
cmc
loop
daa
ror
js
add
add
hlt
mov
lods
jmp
es
jle
pop
out
lahf
pop
cmc
rclb
repz
xchg
lahf
cmpsl
repnz
jno
jmp
or
mov
lret
xor
add
scas
jae
loope
inc
out
adc
lock
xor
cmpsl
ds
xchg
aas
inc
out
sub
int
xchg
mov
jp
js
mov
cltd
testb
mov
in
and
jb
loop
out
cmpsl
xor
mov
nop
fbstp
pop
jae
sarl
push
dec
arpl
shrb
faddl
popa
sbb
stos
inc
outsb
mov
adc
out
jmp
ss
loop
fcompl
inc
repnz
inc
mov
inc
push
jo
in
dec
sahf
mov
enter
xor
cmp
dec
jecxz
sub
jb
add
rcll
mov
test
daa
fmuls
fsubs
gs
pop
inc
movsb
mov
jnp
loope
iret
data16
add
testl
fidivrl
add
inc
ss
frstor
aas
rcrb
or
mov
sub
sbb
mov
aam
mov
fnstcw
mov
insl
inc
bound
stos
imul
das
mov
inc
mov
test
daa
pop
sub
jle
repnz
push
xlat
loope
enter
jno
sti
cmp
rclb
int
adc
std
mov
lds
cmp
aaa
gs
gs
xor
jg
or
or
jne
or
filds
stos
fmuls
fsubl
dec
jnp
rcrb
sbb
stc
push
cld
out
sub
cltd
pop
adc
add
xor
out
dec
jae
rcll
pushf
ja
jnp
pop
sub
fwait
out
inc
mov
inc
or
mov
inc
mov
inc
dec
mov
add
das
adc
pop
and
dec
xor
dec
in
mov
or
ficoml
imul
das
inc
mov
push
mov
jmp
pop
mov
adc
fs
xchg
das
fisttpl
push
repz
inc
fwait
sub
xor
pop
testl
in
jl
push
jp
cmc
mov
push
in
mov
cltd
push
sub
xchg
push
pop
xchg
lea
fwait
popa
scas
mov
daa
les
push
fldcw
ret
push
cmpsb
nop
repz
clc
icebp
nop
out
mov
cmpsl
repnz
mov
das
push
cmpsl
call
and
cmp
pushf
daa
pop
outsb
loop
push
jecxz
mov
sahf
out
mov
sub
or
sbb
sahf
add
aad
xor
loopne
aam
cltd
or
movsb
cmp
rcll
mov
outsl
sarb
sub
mov
outsl
add
out
mov
nop
nop
repz
mov
call
sub
push
jge
std
pusha
pop
pop
cmc
push
xchg
scas
stos
ljmp
xor
jge
push
push
add
out
inc
inc
add
mov
sub
cmp
out
call
add
pop
fstl
mov
pop
in
lods
add
pop
stos
push
dec
clc
add
or
repz
pop
and
xchg
pop
mov
sahf
xor
out
iret
push
je
out
mov
movsb
xchg
push
dec
and
or
cs
xor
push
bound
cmp
test
bound
jnp
dec
adc
and
mov
imul
lidtl
das
lock
dec
cmpsb
inc
push
addr16
in
in
out
ret
ss
push
mov
je
les
dec
or
sub
leave
mov
loope
ret
test
clc
push
pusha
inc
scas
cwtl
cli
scas
mov
lret
sub
xchg
arpl
xchg
in
repz
and
pop
stc
nop
mov
repnz
notb
push
movsl
pop
mov
and
popf
mov
lea
cmpsb
test
or
sbb
lds
jbe
clc
inc
inc
lahf
sahf
mov
gs
xor
mov
push
das
dec
dec
loopne
movsl
cmp
mov
je
clc
shlb
cmp
movsl
mov
loopne
mov
adc
aad
or
cs
leave
sub
fs
sbb
mov
mov
sbb
fnsave
out
dec
dec
inc
into
pop
cmp
aaa
cmp
mov
mov
xchg
data16
test
je
sub
xchg
mov
and
iret
into
dec
pop
push
fnstsw
daa
mov
push
push
neg
jne
movl
jmp
mov
inc
dec
and
ljmp
adc
arpl
imul
jle
mov
pusha
push
fdivp
push
xchg
mov
sub
xchg
jo
push
es
xchg
insl
xchg
jb
xor
movsb
not
xor
push
or
add
call
movsb
mov
xchg
sub
xor
aas
xchg
pusha
into
mov
iret
in
fs
mov
add
or
cmp
jge
inc
push
lock
mov
fcomps
sub
dec
stc
cli
mov
jecxz
xor
popl
popf
shlb
lea
lods
rcll
jae
xor
sti
arpl
pushf
mov
adc
mov
in
jl
lret
js
popf
pop
push
adc
hlt
hlt
pop
mov
cmc
pop
loope
lcall
mov
lcall
inc
aaa
mov
imul
xchg
je
mov
cltd
shlb
sub
fisttps
idiv
loop
in
and
xchg
adc
mov
push
xchg
xor
test
jnp
jle
fsub
outsb
pop
and
push
movsl
xor
mov
into
flds
or
push
jns
ret
les
out
add
sub
imul
mov
or
mov
loope
xor
xchg
sub
nop
xchg
add
pop
test
cltd
rcrb
inc
mov
jle
fwait
sub
dec
add
les
mov
sub
mov
fisttps
lahf
add
into
push
xor
and
scas
fcmovnbe
push
add
test
outsl
cmp
mov
in
or
stos
inc
cs
jmp
cli
enter
jb
jne
mov
jge
mov
rcr
sub
iret
repnz
push
jne
sub
cmp
cmp
push
pop
sbb
nop
repnz
pop
in
clc
or
push
xlat
outsb
adcb
mov
jns
je
mov
aaa
shrb
fisttps
addr16
mov
and
mov
shl
push
sub
fwait
xor
add
dec
test
hlt
pop
jo
insl
fcoms
insl
mov
adc
mov
inc
frstor
ja
mov
cmpsl
jl
jbe
inc
sbb
cmp
xor
pop
ss
jns
push
aaa
xlat
cs
fwait
xorl
push
out
cmpsl
into
fdivl
inc
push
and
bound
je
mov
xchg
jo
cld
fwait
jne
out
scas
inc
rcrb
or
and
push
fdivs
sbb
bnd
inc
fdivrp
pushf
mov
test
inc
add
test
clc
inc
inc
or
push
ds
imul
repnz
stos
out
in
rolb
xchg
inc
cmpsl
lods
out
in
ret
xchg
and
push
jmp
std
mov
ss
mov
cmp
cmp
or
ret
sti
or
pop
hlt
pushf
das
scas
fbld
mov
addb
fwait
xor
cwtl
sar
test
nop
in
test
in
fstpl
xor
xor
mov
mov
popa
lods
sub
mov
mov
cmp
fsubrs
mov
pop
test
add
repz
jecxz
adc
pop
inc
push
js
jnp
popa
loopne
push
adc
fdiv
pop
test
or
cltd
mov
inc
in
push
sbb
add
subl
loopne
out
std
clc
enter
cmp
cs
incl
fwait
aaa
dec
mov
sub
push
and
xchg
inc
repnz
mov
ret
loope
test
mull
jns
jl
inc
jle
stc
fisttpll
sub
smsw
inc
dec
mov
cmpsb
rcrb
push
mov
xor
adc
jecxz
push
cmc
imul
mov
faddl
shll
subl
pop
push
aam
or
insl
add
fstps
cmp
je
dec
inc
inc
aaa
test
stos
lahf
data16
xchg
shr
stos
push
inc
je
stc
lods
mov
cmp
out
xchg
shrb
jge
cmpsl
jne
lods
push
mov
cmp
xchg
sbb
dec
push
scas
outsb
call
lock
or
call
cmp
mov
nop
sub
lods
inc
ja
mov
adc
mov
iret
sbb
ja
ja
push
imul
pop
aaa
dec
adc
cmp
or
rcl
or
jbe
outsb
mov
mov
aaa
xchg
inc
jno
aam
push
scas
into
sbb
out
mov
insl
adc
pop
or
lcall
in
ljmp
pop
xchg
dec
test
mov
ja
jae
or
pop
into
filds
cmp
xchg
pop
fidivs
xor
aam
hlt
xor
adc
pop
sub
ret
jae
pop
dec
lret
jl
cmovno
imul
push
or
sahf
sti
and
adcb
inc
jg
mov
xchg
sub
daa
stos
jl
push
sbb
ret
fldenv
cmp
inc
cmp
add
pop
fistl
insl
push
out
mov
stc
sub
mov
orb
out
jge
cmp
test
jecxz
ret
cltd
and
ds
mov
pop
test
popa
add
xor
mov
dec
xchg
inc
popf
mov
xchg
or
sahf
imul
movsb
hlt
lea
nop
xchg
sub
cmp
sub
std
je
scas
push
adc
mov
mov
loop
xor
ljmp
sbb
jecxz
pop
cmp
gs
nop
ljmp
movsb
cld
jmp
sbb
notl
orl
out
pop
imul
movaps
xor
inc
arpl
cli
or
stos
cmp
stos
xchg
sub
and
sahf
jne
dec
xor
adc
cs
cmc
inc
pop
cmp
jbe
mov
shr
sarb
iret
test
scas
mov
mov
adcl
jnp
repnz
fnstenv
scas
rorl
jnp
seto
and
mov
xchg
cs
insl
fbld
test
pop
add
mov
inc
shll
push
push
cmp
adc
dec
and
jno
dec
and
iret
pop
pushl
mov
mov
out
add
mov
fistl
arpl
jae
imul
data16
rcr
movsb
hlt
sbb
insb
lock
mov
adc
mov
pop
testb
cld
xchg
adc
popf
mov
insl
test
or
nop
movsl
or
std
repz
fcoms
cmpsl
ret
xor
test
icebp
pop
arpl
scas
pop
pop
adc
gs
xor
out
repz
mov
add
xchg
insl
dec
and
movsl
xor
aas
neg
sub
adc
pop
mov
iret
outsl
repz
lcall
pop
lret
or
or
fdivrs
xchg
fsubl
add
mov
push
adc
fwait
xor
sarl
lock
nop
adc
sub
imul
cmp
lods
add
dec
int3
arpl
lea
test
loop
dec
adc
adc
jl
in
pop
pop
lods
add
outsb
andl
and
cmp
sub
daa
push
cli
aad
in
pop
testb
mov
jg
add
pop
test
testl
jb
adc
or
jo
loop
inc
adc
out
lods
and
pushf
jo
out
loop
mov
jecxz
push
ret
mov
push
pop
loop
incl
lea
add
das
fnstenv
call
dec
aad
mov
fidivl
and
jecxz
add
or
jbe
arpl
cmp
jbe
les
dec
movsb
pop
test
mov
xor
testl
inc
pop
inc
fwait
mov
pop
jbe
sub
and
cmc
or
mov
mov
inc
pop
adc
push
lock
add
int
push
in
sub
jne
jns
inc
mov
sbb
lret
loop
out
loopne
sub
dec
jmp
lds
jb
push
and
loopne
push
add
in
mov
fiaddl
fnstenv
in
pusha
cmp
xchg
sub
mov
mov
xor
into
sub
mov
movsl
sbb
sub
hlt
stc
push
jmp
repz
push
inc
dec
or
add
jl
lret
xor
bound
mov
sbb
dec
je
jge
cs
mov
jecxz
arpl
pop
test
jg
loope
xor
mov
mov
in
ss
xor
pop
scas
fdivr
cwtl
loope
pop
outsb
cltd
ss
cmp
mov
cmpsb
xor
jbe
push
mov
push
jnp
pushf
aad
decb
cwtl
xchg
mov
mov
adcb
andl
test
mov
and
sbb
lea
popa
cmp
fwait
out
inc
pushf
sbb
and
cltd
xor
cwtl
cmpsl
ja
outsb
mov
cmp
lret
aaa
inc
lods
ror
leave
or
xchg
xchg
ret
xchg
sub
xlat
xor
add
jle
das
sbb
lds
xchg
xrstor
mov
dec
cld
push
cwtl
mov
and
pop
push
icebp
push
call
decl
scas
inc
mov
cmp
and
rorb
mov
lds
adc
jg
in
mov
ss
xor
inc
or
cli
inc
icebp
jnp
mov
ret
int3
xchg
lret
adc
rcll
push
mov
mov
push
dec
lret
mov
mov
gs
hlt
cmp
cmp
inc
fldt
mov
mov
inc
addb
fists
adc
fs
sub
mov
stc
adc
movsb
pop
out
xchg
lds
cmp
cs
ret
aam
bound
jo
dec
jmp
push
push
iret
inc
xchg
add
test
mov
pop
mov
jno
ret
and
and
lock
sbbl
hlt
sarb
rcr
repz
dec
pop
outsl
jg
sub
fsubrs
mov
pop
cmp
jnp
xchg
xor
sbb
push
sbb
or
popa
cwtl
sub
popa
cmc
jp
outsl
mov
mov
in
jge
dec
jecxz
ret
repz
mov
cmc
cwtl
xchg
shrb
loopne
jns
xor
mov
int3
sbb
fmulp
ror
mov
cwtl
lock
int3
sub
push
pusha
xchg
test
mov
out
sub
xchg
and
push
je
repnz
dec
icebp
int3
sbb
popa
fnstsw
xor
cltd
xchg
pop
mov
rep
scas
dec
mov
xchg
sbbb
mov
dec
gs
or
jle
sbb
and
filds
imul
xchg
outsb
mov
out
sti
cmp
mov
lret
jnp
gs
leave
push
dec
mov
fwait
or
dec
movsb
add
mov
ds
dec
lds
mov
lret
adc
xor
loope
pop
sbb
and
cmp
jbe
aas
enter
cmp
pop
stos
jb
add
pop
jp
sub
xchg
adc
je
mov
sbb
sti
es
or
inc
sub
shr
repz
in
andl
pop
and
adc
inc
cmpsb
icebp
cmp
lds
ret
insb
jne
jle
js
lcall
pop
push
mov
jb
fldenv
jb
scas
scas
xchg
sub
aad
cmc
shrb
sar
add
mov
lret
repz
push
shll
neg
mov
inc
or
repz
push
pusha
rol
pop
popa
ds
out
and
faddl
cmp
and
out
add
xor
jnp
adc
adc
clc
scas
jo
sub
xchg
pusha
stos
pop
pop
mov
mov
xchg
sti
leave
push
mov
push
and
jae
lahf
dec
jge
add
sbbb
pop
call
inc
jae
and
sub
mov
jo
dec
hlt
mov
sti
pop
out
add
scas
stos
aas
icebp
and
pushf
test
dec
insb
push
mov
push
out
fstp
inc
sbb
in
test
inc
sub
cwtl
sbb
and
sahf
repnz
sub
xlat
dec
outsl
push
jp
jl
jne
lea
add
ljmp
jecxz
repnz
outsb
jg
fsubl
adc
cli
mov
xchg
mov
cmp
addl
mov
push
mov
popf
and
stos
bound
push
push
data16
cmp
push
ficompl
jb
inc
movsb
test
ja
int3
push
sub
scas
cmp
mov
icebp
aam
sbb
repnz
adc
in
xorb
shl
xchg
test
inc
xchg
icebp
fidivrl
call
sbb
daa
mov
movsb
int
mov
jecxz
pop
popf
push
push
movsb
cmp
sbb
fadd
fmuls
push
sub
inc
or
popa
repnz
xchg
in
xor
xchg
jmp
sbb
test
stc
lcall
pop
adc
adc
push
lea
stos
jp
shll
mov
inc
mov
outsl
xchg
cmpsb
adc
stos
inc
pop
insb
xchg
mov
xlat
ljmp
push
test
popf
add
movsl
and
jne
mov
rcll
lret
mov
xchg
sub
pcmpgtw
arpl
hlt
sbb
test
mov
sub
pop
call
ret
test
xor
jmp
inc
ja
mov
fstps
int
stos
mov
jbe
orl
pusha
adcb
mov
and
mull
xchg
xor
mov
adc
dec
adc
pop
jecxz
pop
notb
mov
sbb
add
stos
repz
into
fs
dec
inc
popf
icebp
fcmovb
sti
add
and
shrl
inc
jbe
sub
and
cwtl
sti
mov
xlat
cmp
cmpsl
xor
mov
aaa
stc
pop
aad
ror
in
jbe
cmp
les
xchg
sti
test
pop
ret
jae
fsubs
mov
and
mov
mov
ljmp
mov
repnz
cmc
dec
pop
add
xchg
scas
jge
aam
dec
mov
jecxz
inc
or
les
cmc
sub
nop
inc
stos
and
frstor
scas
xchg
out
iret
data16
in
daa
jns
loop
inc
lcall
xchg
sahf
jge
inc
mov
std
enter
push
xor
xchg
jnp
adc
loope
outsb
mov
outsb
xor
jnp
sbbl
test
cmp
sbb
sbb
sub
mov
cmc
mov
mov
insb
int3
data16
int3
mov
arpl
mov
push
das
movb
dec
fcoml
ret
divl
out
mov
lcall
in
xchg
mov
cmp
jp
inc
jl
cmp
adc
mov
xchg
adcb
das
stos
div
mov
stos
push
addr16
js
sti
xchg
insb
outsb
add
movsl
mov
and
inc
les
lcall
xchg
loope
dec
and
movsb
lods
stos
xor
jecxz
pop
lock
inc
hlt
jae
es
mov
push
sbbl
ss
out
push
mov
enter
and
push
push
lret
push
in
push
or
inc
cltd
cli
bound
adc
repnz
cmp
pop
stc
pop
push
jo
fcomps
and
cwtl
add
lret
std
push
repz
push
jg
nop
sbb
xor
mov
aam
lea
ret
and
inc
rorb
and
les
inc
std
ljmp
das
jnp
mov
cmp
cmc
mov
gs
jp
mov
xor
xor
nop
out
test
xchg
inc
imul
loopne
cmpsl
push
mov
fbstp
lds
dec
push
test
or
pop
mov
out
sub
inc
mov
pop
push
sbb
addr16
loope
mov
pop
int
dec
and
xchg
out
stos
inc
fistpll
cli
xchg
lods
jl
jno
cld
xchg
cmp
ss
das
sbbl
pop
cmp
jnp
das
out
inc
ljmp
rolb
and
insb
shrb
cmpsb
mov
pop
packuswb
jge
es
mov
sbb
out
gs
test
add
push
push
imul
clc
lock
xor
mov
sbbl
and
call
imul
jne
ret
lds
sub
clc
iret
lea
cltd
or
test
imul
jmp
xor
xor
adc
lock
adc
xlat
fcomip
cmp
and
das
dec
rcr
jae
scas
stc
popf
sbbl
ljmp
push
clc
lret
iret
gs
inc
jbe
jno
stos
sahf
aad
sbb
mov
sbb
dec
fimuls
test
jns
xchg
jno
stc
loop
or
jl
inc
rol
dec
jmp
jp
in
fwait
repnz
adc
mov
push
ret
xchg
cmc
ficompl
cld
push
push
sbbl
addr16
rcr
mov
jle
pop
icebp
adc
movsb
or
cli
inc
ljmp
lods
cmp
negl
mov
stc
addl
out
cwtl
pop
fldcw
andl
ret
sub
ljmp
cltd
cmc
inc
cmc
pop
scas
es
or
inc
xor
push
cwtl
aaa
lahf
mov
xor
clc
cmpsl
or
pop
xor
push
imul
jle
jnp
sbb
pop
pop
cmp
lock
inc
imul
lods
rol
jmp
test
insb
add
faddp
pop
cmp
mov
cmp
pusha
sub
lea
enter
add
lds
dec
cmpsl
and
in
push
adc
cmp
hlt
dec
adc
sub
sahf
push
mov
test
daa
inc
ret
lret
in
add
jno
clc
mov
cmc
mov
insl
cmp
shlb
xor
mov
pusha
adc
jb
adc
dec
dec
stos
mov
lahf
repnz
sbb
add
pop
out
mov
cmp
lds
es
and
and
lods
push
mov
mov
filds
lcall
xchg
push
out
shll
push
inc
scas
jge
in
andb
adc
mov
je
xor
aam
jle
test
in
imul
cmp
jno
leave
mov
repz
xchg
cmpsl
sub
ds
xor
dec
popa
int3
push
xor
sub
mov
loopne
mov
cmpsl
sub
pop
mov
clc
sub
pop
pop
test
pop
psubb
pop
imul
and
das
inc
aas
mov
sub
dec
loop
mov
sub
ja
je
cmp
mov
cld
xchg
cmp
fsubrp
inc
pop
sbb
mov
xchg
dec
sbb
test
inc
cmp
or
jo
cmp
loope
sub
add
negb
jmp
subl
outsl
mov
sbb
inc
mov
nop
xchg
ds
sub
test
xchg
hlt
ret
imul
push
aas
nop
cmp
adc
iret
dec
or
jb
imul
adc
inc
xor
pop
and
cld
dec
std
sahf
mov
xor
ljmp
lcall
and
sbb
push
mov
into
xor
mov
mov
mov
jo
out
sti
loopne
cld
aad
xor
pop
std
ss
sub
mov
push
mov
inc
xor
mov
dec
cmp
adc
fwait
repz
mov
mov
mov
mov
leave
pop
jb
clc
cli
jp
inc
lods
sbb
push
sbb
dec
pusha
cmpsb
in
cmp
cmp
cmpsl
ret
jmp
sbb
enter
fwait
mov
idivb
pop
sbb
xchg
cmp
cs
outsl
fnstenv
or
push
add
data16
and
and
xchg
cmc
xchg
mov
dec
bound
movsb
popl
sub
rcrb
add
popa
jo
data16
ficompl
nop
push
popa
lods
cs
bound
repnz
add
dec
mov
jnp
push
jno
cmp
cli
shrb
inc
or
inc
pop
mov
insb
lret
fs
xchg
sbb
sarb
jns
mov
adc
add
add
sbb
jp
pop
mov
cmc
and
andl
in
cmp
gs
mov
pop
xorl
pop
mov
xor
outsb
and
push
mov
jb
jl
jo
add
cmpb
sub
icebp
mov
fcom
jle
mov
ror
xor
cmp
in
push
jo
mov
je
fs
mov
loope
push
xchg
addr16
aas
pop
das
pop
jbe
cmp
shlb
cmp
xor
jno
push
mov
aad
cmp
faddp
inc
pusha
push
xor
pop
aad
add
lret
test
repz
es
ss
lods
rcll
add
cmc
mov
les
das
dec
sahf
psubusw
icebp
cmp
dec
in
mov
das
jp
insl
repz
mov
cmp
das
in
imul
fsubrs
inc
in
ja
repz
mov
pop
inc
bound
mov
test
lcall
test
shr
adc
loop
pop
cmp
xchg
js
push
gs
incb
mov
adc
mov
loope
lods
and
sbb
jmp
incl
loop
jl
push
xor
push
popf
adc
add
jmp
or
cltd
test
sub
jae
cmp
xlat
popf
hlt
push
lret
xchg
sbb
dec
adc
inc
ss
repnz
mov
jae
decl
movsb
lods
xchg
jp
shl
imul
jne
aam
xchg
push
movsl
jbe
inc
push
lahf
lods
nop
lods
fidivrl
sub
repz
cmp
aam
sub
stos
jmp
cmc
pop
lahf
pop
ds
mov
jbe
fidivl
pop
mov
inc
fmuls
icebp
push
and
outsb
or
push
dec
pop
lods
jmp
push
icebp
cmpsb
mov
arpl
rcrl
in
push
cmp
or
test
mov
cmpsl
movsl
data16
xchg
or
stc
sahf
insb
jle
xchg
pop
cmp
cmp
fnstsw
xchg
fistpll
and
jno
out
sbb
jp
arpl
inc
mov
jecxz
xchg
popa
pop
aaa
push
in
dec
mov
or
aad
push
mov
add
inc
fbstp
jae
shrb
push
sbb
fidivrl
rcrl
mov
pop
jl
setle
inc
inc
add
sti
push
mov
je
push
andb
pop
call
daa
mov
insl
insl
and
loope
mov
ret
loope
cmp
push
mov
xchg
and
fldt
pop
mov
push
dec
jl
les
mov
mov
push
gs
jle
jbe
and
popa
push
mov
mov
inc
test
cmp
cmp
fsubp
mov
js
sbb
nop
fbstp
dec
cwtl
jne
mov
xchg
dec
xchg
sti
adc
pop
jmp
loope
out
xor
jns
lret
lods
push
imul
mov
dec
test
call
cmp
inc
push
xchg
adc
out
mov
inc
push
cmp
test
sub
adc
repnz
in
pushf
mov
jns
mov
jnp
cmp
jbe
ja
push
call
call
push
repz
aas
sbb
and
loope
data16
lcall
inc
cmp
fcomip
mov
sbb
fldt
leave
insb
lods
lock
jbe
and
jo
lea
popa
add
sub
add
adc
cmpsb
test
add
mov
repnz
mov
xchg
add
push
test
rcll
and
dec
hlt
rorl
mov
test
les
mov
lcall
and
dec
push
xchg
jp
frstor
cwtl
test
cwtl
fistpl
in
cmc
int3
sub
cmp
inc
pop
incb
das
mov
stc
push
outsb
xor
test
rcrl
xchg
or
cmpsl
cmc
ds
rcll
push
lea
sbb
xchg
shl
negl
das
mov
jge
sub
mov
mov
pop
je
int
movsb
je
and
aam
jae
popa
sub
xchg
repz
cmp
xchg
pop
in
mov
xchg
inc
pop
jo
mov
cmp
cmp
mov
pop
clc
pop
push
out
push
inc
mov
sub
inc
mov
push
das
out
notb
jae
ljmp
xchg
cmpsl
cld
stc
lods
inc
sub
mov
je
insl
add
jae
mov
sti
dec
xor
pusha
stos
add
cmp
inc
test
test
jmp
outsb
or
jl
aam
mov
or
push
fisubrl
stos
outsb
xor
jae
fistpl
add
xlat
jge
add
out
and
jmp
jecxz
mov
les
dec
loop
mov
xlat
or
aam
add
fs
pop
vaddss
mov
inc
outsb
sar
inc
out
ja
push
xchg
subl
cmp
xor
loop
std
inc
pushf
aad
adc
test
jo
pop
sub
test
insb
cmp
sahf
sub
ret
ret
sbb
notl
xor
shl
xchg
sub
pop
fdivrs
mov
out
mov
ds
popa
dec
pusha
xchg
stc
aaa
lods
test
cmc
cltd
dec
mull
in
push
pop
jnp
rcl
ja
add
in
push
mov
cmc
in
mov
inc
fnstenv
mov
iret
in
dec
loop
insl
sbb
mov
addl
push
pop
std
pusha
or
mov
pop
sahf
mov
fbstp
xchg
mov
and
pop
or
jp
add
sub
test
jl
sarl
push
jnp
mov
repz
sbb
inc
js
insb
adc
cmp
sbb
and
xchg
xor
jb
push
mov
jle
ffreep
rolb
loop
aas
push
add
jmp
outsl
push
lods
jg
push
mov
mov
int3
mov
push
pop
xor
cltd
sub
xor
jbe
cs
pop
dec
sahf
cmc
sti
insb
mov
sbb
sbb
jg
sbb
movsb
inc
pushf
mov
psubusw
ja
adc
sarb
fists
faddl
shl
ret
sub
sub
je
mov
pushf
enter
pop
insb
out
sti
mov
jg
gs
ja
mulps
inc
cmp
enter
sbb
jg
push
mov
xor
push
sub
lahf
or
inc
xchg
and
xor
push
fisubrs
add
push
popa
inc
mov
xchg
out
pop
or
and
cmp
pop
xabort
in
cli
dec
pop
sub
stos
mov
fldenv
push
insl
pop
mov
xor
repnz
jg
hlt
mov
add
int3
jne
inc
jmp
dec
sbb
dec
adc
das
jo
clc
jnp
sbb
mov
mov
xchg
incb
popf
dec
pop
repz
lock
fucom
ljmp
insb
ss
xor
sbb
or
test
sbb
dec
inc
mov
xchg
mov
dec
andl
mov
mov
mov
lock
mov
stos
or
xchg
sub
sbb
ret
pushf
popa
mov
pushf
xor
movsb
mov
outsl
add
fsubs
sar
sbb
and
daa
andb
shrb
popa
pop
xor
ret
cs
xchg
pop
and
jnp
jne
outsb
scas
sub
scas
mov
cld
or
sub
popa
sti
cli
pop
fisttps
ljmp
jle
push
cmp
jecxz
xor
mov
add
pushf
test
xchg
push
inc
rcrl
sub
imul
ljmp
inc
xchg
fadd
addr16
cmp
sub
rol
pop
sarb
sti
repz
mov
mov
adc
sbb
mov
mov
les
pusha
int
dec
test
push
xor
cmp
mov
add
scas
or
push
fmull
popa
notl
cmp
scas
addr16
inc
lea
lret
hlt
push
ret
jb
cmc
js
aaa
data16
mov
ret
scas
daa
or
cmc
call
xchg
jle
cmp
and
aaa
jp
rolb
adc
in
cmp
pop
mov
or
xchg
stos
std
add
andb
xacquire
aam
stos
sub
mov
and
mov
movl
mov
in
aaa
push
aaa
clc
mov
pop
out
movswl
sub
fnstcw
jp
cs
into
cmpsb
push
sub
pop
pop
lcall
inc
mov
push
dec
inc
dec
sahf
stos
add
mov
adc
daa
lret
addr16
lret
or
jle
sbb
pusha
gs
xor
aaa
xor
cmpsb
frstor
push
or
stc
repz
and
and
or
xchg
cmp
imul
jg
cmp
movsb
xchg
sub
pop
pop
xor
in
sub
ret
hlt
out
push
cmp
loope
jo
fs
imul
lds
mov
adc
xchg
add
movsl
adc
rclb
dec
in
add
cmpsl
xchg
insb
add
inc
mov
push
int3
cs
add
dec
cmp
add
jmp
xorb
push
je
cmp
add
pop
imul
inc
mov
dec
jmp
or
cs
ret
shlb
out
jb
fcmovb
loope
test
bound
les
add
nop
test
mov
fisttps
stos
data16
shrl
mov
pusha
orb
or
inc
jbe
mov
lcall
jne
icebp
mov
mov
mov
faddl
xchg
mov
fmulp
and
sub
xor
imull
sbb
adc
shlb
out
insl
rcrl
cmp
mov
dec
lcall
iret
and
pop
push
in
test
out
ret
push
mov
int
mov
pop
add
fcmovnu
lret
push
push
push
test
cmp
pop
xchg
in
enter
mov
scas
inc
jmp
int
mov
int
cmp
mov
stc
test
mov
mov
ret
insl
out
pop
sbb
aad
jae
fildll
sbb
mov
jae
movl
jbe
fsubl
inc
inc
jne
data16
push
push
test
ss
dec
loope
push
lret
jne
imul
enter
xchg
cmp
lret
mov
adc
pop
cmc
mov
sarl
mov
jl
xlat
cmp
mov
push
mov
push
mov
aaa
in
icebp
int3
inc
incb
cmpsl
push
call
sahf
stc
or
mov
or
rcrb
dec
sbb
mov
out
and
and
inc
repz
push
mov
adc
outsl
jne
cmp
push
sbb
sarl
pop
xor
dec
cmp
mov
lret
and
sbb
or
daa
test
fstpt
clc
and
in
push
push
lods
idiv
fdivl
xor
xchg
arpl
inc
fiaddl
nop
outsb
mov
and
fsubl
mov
cmp
imul
aas
mov
scas
std
fldl
popa
mov
adc
cwtl
and
sti
mov
cltd
notl
and
in
bound
fsubl
adc
inc
cld
jp
cs
cwtl
in
cwtl
sbb
ret
cwtl
das
cmc
lea
dec
cmp
sbb
mov
pop
lret
icebp
sub
mov
pop
pop
sarl
mov
loope
call
dec
xor
jp
dec
pushf
xor
fsubrl
fstl
clc
dec
or
pusha
ret
push
cmp
test
fisubl
cmc
cmp
dec
pop
les
ljmp
cli
popa
fdivrs
xchg
je
push
xchg
or
in
pop
dec
loopne
mov
ja
sar
sbb
mov
sbb
xor
jae
add
scas
jmp
aaa
xchg
ss
cs
lcall
fisubrs
mov
pop
push
lods
out
loop
scas
sahf
jbe
iret
lret
sbb
dec
jge
push
and
mov
popf
adc
js
test
xchg
cltd
xchg
sub
mov
in
sub
lods
jns
inc
nop
jnp
lret
nop
pop
js
xchg
pop
cmpsl
adc
fcompl
mov
pop
push
pushf
push
sub
aas
add
pop
daa
push
lea
gs
add
xor
pop
jb
jbe
mov
ficoml
addr16
std
enter
add
pusha
mov
fstp
dec
imul
fiadds
push
xor
loopne
fucom
inc
add
xor
loope
test
dec
jecxz
rcl
test
add
fwait
flds
mov
pop
sbb
dec
sahf
mov
push
cwtl
fldt
sbb
jecxz
jl
dec
sub
cmp
xchg
cld
shrl
cmp
cmpsl
ds
push
jne
imul
test
mov
mov
gs
inc
jmp
jb
jne
into
gs
test
dec
repz
test
ja
movsb
mov
push
mov
in
and
fisttpll
sub
push
mov
xor
je
sbb
insb
aas
sub
ret
es
mov
mov
rol
repnz
mov
mov
popf
push
jbe
outsl
adc
and
jo
mov
divl
aas
dec
std
movd
mov
rcl
cli
pushf
pusha
dec
aad
lock
cwtl
std
rcrl
mov
sub
dec
push
cmp
leave
test
repnz
pop
sbb
xchg
adc
and
sbb
and
xor
dec
rcl
jbe
daa
jns
pop
es
data16
cli
std
mov
push
js
mov
setle
inc
dec
push
mov
push
popa
lods
lcall
push
cwtl
out
add
or
and
sbb
xor
into
jb
lds
lcall
cmpsl
add
test
inc
leave
mov
mov
insl
subb
pop
inc
out
inc
rol
jo
adc
insb
mov
sbb
inc
lahf
negl
stc
or
popl
imul
jle
pop
cmp
jge
mov
mov
cmpsl
ret
mov
shr
push
lods
and
mov
int
cld
arpl
sti
pushf
and
sti
ljmp
call
movsb
xlat
mov
movsb
jns
add
test
push
sub
fnstsw
mov
imul
add
add
shlb
out
cmp
icebp
stc
dec
dec
cmp
in
stos
or
rcll
fdivl
test
sbb
ds
pushf
jp
das
sub
sbb
cmp
inc
pop
fs
inc
pop
dec
xor
cld
in
rcrb
pop
push
xchg
xchg
add
lea
add
lods
std
jo
sbb
jmp
enter
sub
out
outsl
xchg
lcall
sub
push
outsl
or
mov
sbb
fadd
mov
jg
shlb
pop
mov
xlat
and
xchg
push
pop
mov
mov
popf
mov
sbb
aam
adc
jl
cmc
fdivrs
ja
mov
lock
xchg
mov
sub
xchg
ss
movsb
pop
ja
or
jo
sbb
adc
mov
je
xor
shll
imul
aaa
popf
and
sub
orl
inc
xor
push
jg
lret
sbb
into
xor
cmp
and
sbb
hlt
adc
daa
cmp
or
sub
movsb
repnz
ficomps
mov
xchg
add
mov
dec
cmc
xlat
cmc
cmp
js
pop
insb
iret
mov
xchg
into
enter
mov
pop
test
icebp
movsl
jmp
aaa
loope
push
aaa
and
lret
sbb
shrl
xchg
les
rol
pop
loope
cltd
popf
cmc
ret
sub
in
jl
in
sbb
or
mov
cltd
pop
imul
loope
rcrl
outsl
xchg
movsl
cmp
and
and
pop
cmp
ds
fsubl
jmp
in
out
popfw
mov
jmp
push
mov
sbb
leave
pop
in
cmp
push
pop
negl
jl
in
loopne
push
push
adc
fwait
lcall
stos
pop
mov
stc
scas
mov
mov
mov
lods
rcrl
pusha
sub
cltd
adc
add
mov
pop
mov
lret
movsb
inc
shlb
inc
clc
repz
mov
cmp
inc
pop
mov
push
insl
cld
dec
pop
cmp
jle
lods
pop
cmp
sub
ljmp
push
mov
mov
xchg
mov
and
pop
outsb
mov
cs
jns
pop
mov
mov
rol
outsl
movups
mov
les
pusha
gs
movsl
mov
mov
enter
fcompl
jmp
jmp
mov
out
inc
and
cmp
cmp
xlat
mov
cs
pop
mov
or
mov
insb
xchg
dec
fsts
cmpsl
inc
scas
add
clc
xchg
or
mov
inc
push
mov
ss
aaa
outsb
fimull
cmc
jg
mov
test
or
mov
imul
jne
shlb
sub
adcl
and
jl
imul
inc
and
mov
sbb
mov
xlat
outsb
mov
cmc
cmc
jns
gs
shrl
mov
rclb
loope
aas
xor
xchg
aad
les
je
pop
jno
dec
pop
imulb
pop
pusha
aam
lods
inc
in
das
int
inc
incl
je
mov
sarl
scas
mov
xchg
dec
in
cmp
mov
mov
std
arpl
cs
ret
fildll
and
mov
sbb
pop
add
dec
jecxz
push
insb
sbb
cli
push
xor
sahf
mov
cli
jge
adc
iret
daa
clc
xchg
lock
sub
fisttpl
jle
out
mov
testb
mov
aaa
mov
pop
xor
push
ss
cwtl
in
and
push
dec
pop
push
out
pop
icebp
mov
pop
mov
sbb
dec
cmc
mov
jecxz
lea
shl
cmp
mov
stos
adc
jb
das
in
test
inc
fdivrs
push
fisubrl
adc
dec
das
mov
aam
or
sub
jno
nop
aam
dec
add
nop
xor
es
mov
cmp
jmp
rcrl
in
cmc
dec
fcomip
jns
pop
es
mov
cld
adc
mov
adc
pop
mov
insb
cmp
mov
dec
popf
sahf
jg
mov
sbb
std
inc
jmp
xchg
inc
dec
loopne
cmpsl
std
or
out
shlb
rol
xor
cmc
cltd
mov
aad
rol
mov
xor
mov
push
lods
pop
pop
test
add
ljmp
into
adc
pop
xchg
cmc
add
inc
and
aaa
movsb
notl
pop
lds
loopne
push
bound
push
xor
and
inc
push
xchg
lock
mov
add
fidivs
insl
add
jp
xchg
lods
inc
je,pt
int
mov
into
xchg
add
xchg
mov
lahf
or
mov
jbe
or
jno
aas
cld
xchg
jo
cmp
add
inc
and
mov
and
daa
ret
gs
jge
mov
push
fiadds
sti
ljmp
or
sahf
rcl
gs
popf
jg
mov
test
push
cwtl
push
sahf
out
mov
push
cmp
mov
rolb
push
push
shrb
daa
arpl
mov
xchg
aaa
add
push
fimuls
das
stos
mov
shll
dec
inc
push
xor
lods
xor
out
out
cld
inc
mov
cmp
xlat
or
xor
fsubrp
push
pop
popl
or
mov
shrb
int3
jne
pusha
popf
sbb
mov
push
add
lods
mull
jb
in
ret
dec
and
and
call
jne
bound
push
sbb
gs
sbb
dec
xchg
lcall
add
loopne
addr16
or
or
popl
hlt
xor
fsub
mov
mov
push
popa
push
cltd
inc
and
sub
xor
shrb
int
js
xchg
test
sbbl
mov
or
ds
stc
or
pop
popa
sahf
rclb
cmpsb
and
sahf
scas
jb
fdivr
add
flds
daa
mov
and
xchg
ret
int3
sub
mov
in
pop
cmp
mov
test
inc
pusha
mov
cmpsb
imul
and
cmp
lahf
icebp
or
daa
dec
notb
and
scas
jb
mov
adc
icebp
pop
xchg
pop
sub
shlb
fisttps
daa
hlt
cmp
data16
push
xor
mov
jg
cmpsb
mov
cmpsl
jbe
or
loopne
push
add
das
xchg
jno
repnz
testl
iret
cmp
pusha
std
fistpl
mov
sub
call
lcall
scas
ficoml
out
test
mov
jl
popf
rcll
shl
std
jmp
mov
sub
mov
push
mov
jb
and
mov
es
mov
xchg
cmp
lahf
test
adcl
sub
xor
lods
pop
inc
or
push
adc
fcomps
pop
arpl
push
imul
ret
pop
push
in
dec
fstps
adc
sub
idivl
fdivrl
setle
xchg
sub
mov
jle
and
push
xchg
mov
pop
adc
jno
imul
inc
and
jns,pn
mov
or
jnp
adc
pop
cmpsl
xor
mov
scas
inc
push
pop
loop
filds
sub
or
or
sub
cmpsb
inc
into
and
or
xchg
into
ret
mov
pop
jmp
scas
sbb
cli
loop
dec
push
lcall
je
inc
outsb
jne
lret
push
xchg
icebp
hlt
inc
cli
imulb
imul
push
dec
xchg
mov
pop
lcall
jmp
push
cltd
and
cltd
data16
inc
bound
jecxz
push
icebp
lods
test
push
adc
test
popf
inc
sar
leave
and
repz
inc
fxch
jg
jmp
sahf
pop
pop
mov
imul
xor
mov
add
mov
aaa
pusha
imull
pop
push
pop
mov
xor
sub
rcrb
sbb
pushf
adc
jecxz
mov
imul
notb
clc
repz
pop
sbb
shl
nop
mov
repz
cli
jne
cwtl
das
lcall
stc
insl
test
pop
les
xor
mov
jmp
add
adc
clc
mov
hlt
jecxz
loop
rcr
xor
lods
fildll
std
jg
add
dec
push
jno
mov
jae
imul
dec
push
mov
xchg
mov
lea
icebp
push
and
aas
pop
call
test
shrl
gs
inc
lods
ds
xchg
insl
push
lds
popa
add
and
push
mov
push
test
dec
mov
lret
sahf
and
sarl
test
sub
scas
mov
adc
cmp
fcoms
and
icebp
mov
adcl
ja
jb
pop
dec
inc
dec
dec
repnz
daa
and
scas
fnstenv
pop
fsubr
sbb
xchg
jbe
xor
int3
insb
push
insl
ret
dec
or
movsl
cmpsl
mov
push
pop
xchg
mov
mov
or
loopne
xor
push
out
sti
push
pop
rcll
mov
test
xchg
repnz
into
fnstcw
jno
jge
fs
or
cmp
jge
cli
mov
not
ja
lea
jle
mov
lea
mov
insl
lret
out
fidivl
or
test
sbb
and
jp
inc
push
jns
clc
pop
and
inc
xlat
mov
jo
and
adc
gs
or
mov
or
or
shl
mov
mov
xor
sbb
out
inc
dec
lea
sub
pop
push
inc
xchg
ffree
xchg
das
push
jmp
scas
loop
jns
inc
repz
sti
adc
cwtl
inc
sbb
movlps
lcall
ja
adc
adcb
or
fstps
inc
cmp
dec
cmp
sbb
add
xor
aad
mov
cmp
mov
push
mov
push
test
scas
mov
adc
inc
arpl
jo
cmp
mov
jle
mov
push
mov
pop
xchg
bound
movl
xor
or
or
lret
or
leave
or
fstl
cmpsl
push
and
dec
fisubs
fnsave
or
mov
outsb
mov
mov
dec
dec
xchg
ja
cli
ret
adc
jmp
daa
add
movsl
cmp
dec
ss
test
mov
xor
adc
enter
loop
daa
aaa
pop
movsl
cld
xchg
xlat
ja
jg
in
xor
jnp
in
mov
adc
mov
lret
xchg
dec
xor
or
cmpsl
sub
jns
pop
imul
mov
test
xor
mov
insb
xlat
xor
mov
jg
outsl
in
jns
push
dec
sub
scas
mov
sbb
decl
mov
lcall
mov
xchg
pop
mov
clc
adc
rcr
std
push
push
in
shll
xchg
cli
mov
lret
out
sbb
les
mov
pop
aam
xchg
orl
shl
cmpsb
mov
mov
rol
jbe
dec
hlt
sub
scas
into
push
int
mov
mov
mov
cltd
loop
into
pop
mov
sub
movsl
inc
loopne
mov
mov
dec
repz
pop
jmp
sbb
call
and
or
inc
sub
add
cltd
xor
mov
mov
mov
mov
sahf
pop
dec
movsb
sub
aaa
into
js
pusha
xorb
or
bound
icebp
mov
lldt
xor
insb
loopne
push
mov
popa
sbb
ja
call
add
outsb
movsb
and
stos
adc
test
ja
xor
cmpsb
pop
clc
mov
mov
sub
push
cltd
mov
test
test
push
adc
xchg
xor
stos
stos
sbb
ds
cmpsb
call
test
jne
lods
loope
imul
inc
aam
cmpl
jns
test
xchg
ss
dec
test
and
adc
cmc
mov
jne
into
sbb
stos
mov
in
ja,pt
jo
mov
inc
test
mov
xchg
out
inc
mov
mov
cmc
xchg
shll
dec
call
or
add
cmp
lock
dec
dec
enter
cld
inc
dec
dec
pop
stc
lds
imul
mov
push
sti
add
movsb
lret
cld
shll
or
jge
xlat
xor
push
inc
outsl
int3
fistl
and
enter
mov
dec
xor
orl
ror
loopne
sbb
lods
lahf
mov
jle
add
adc
mov
inc
insb
jle
and
call
loopne
fsubr
adc
fs
xor
add
test
popa
ret
icebp
fwait
pop
ljmp
mov
lcall
test
lret
je
inc
mov
mov
pusha
divl
mov
adc
pop
stos
sbb
clc
adc
pop
mov
js
push
dec
push
mov
cmc
mov
xor
bound
adc
outsb
std
loopne,pn
fwait
and
jl
xchg
adc
ds
fwait
xchg
xor
into
or
shlb
movsb
lret
into
aas
std
lds
mov
mov
xchg
sub
sub
test
mov
mov
inc
cmc
ja
jb
push
cltd
jnp
lea
fwait
xchg
add
lcall
jmp
cmp
imul
std
and
and
sbbl
mov
loopne
or
lea
lods
jecxz
aaa
into
mov
ret
arpl
push
outsl
test
test
fiaddl
or
mov
lcall
sbb
or
pop
aad
js
das
push
adc
adc
push
in
fbstp
sub
rclb
mov
addr16
outsl
rcrl
andb
fldpi
fldenv
pop
sub
stos
adc
fmull
lods
hlt
std
outsl
and
mov
stos
rorl
mov
push
pop
xlat
or
cmp
outsb
push
inc
bound
mov
jbe
int
out
and
jecxz
push
xchg
lock
mov
je
xchg
les
sti
mov
xor
in
movsb
inc
cmp
xchg
mov
xor
mov
or
or
cld
ret
mov
cmp
sbb
mov
cs
outsl
xchg
imull
xor
in
inc
fldcw
and
popa
push
les
push
xor
jmp
cmpl
imul
pop
stos
mov
dec
inc
fsubr
jae
pop
ficomps
push
push
push
mov
mov
int
out
leave
popf
clc
int
insl
insb
inc
gs
push
sbb
int
inc
xor
daa
or
ss
fidivrl
and
repz
push
xchg
loop
mov
insb
rcr
movsl
adc
stos
adc
jne
shrb
andb
cmc
in
push
cli
or
mov
mov
mov
cmc
push
xchg
sub
js
insl
out
scas
mov
push
mov
iret
and
add
scas
and
int
aaa
inc
in
or
call
sahf
js
inc
sbb
inc
sbb
push
mov
adc
fs
push
fmul
inc
mov
lods
xor
xchg
lods
sub
popf
mov
xor
mov
mov
out
cs
and
jbe
jl
in
jmp
mov
fs
stos
mov
mov
in
pop
sahf
lock
cmp
inc
mov
pop
movsl
cli
xor
inc
pop
or
loop
lea
gs
and
sub
mov
mov
enter
clc
jg
fsubl
iret
dec
pop
gs
inc
mov
fadds
cs
popa
cmp
push
ja
dec
bnd
pop
sub
imul
inc
push
add
repnz
test
jp
js
or
sub
jb
fsubr
mov
in
inc
add
cmp
mov
out
sub
outsb
adc
stc
ja
jno
and
push
xchg
jg
push
cli
outsb
jge
insb
or
sbb
xchg
testb
push
cmpsl
pop
jnp
cli
test
test
jns
lret
ja
push
nop
add
mov
dec
jnp
std
insl
push
adcl
sbb
out
clc
sub
sub
sbb
xor
ss
int3
pop
dec
fldcw
notl
cmpsl
repnz
sbb
loopne
lea
cmp
mov
mov
xchg
xor
push
xchg
push
sbb
inc
sub
pop
or
ljmp
add
data16
cwtl
lcall
imul
ds
jl
sub
int3
aaa
movsl
shlb
test
rcrl
push
xchg
sbb
in
mov
dec
mov
add
mov
inc
sbb
daa
inc
das
adc
sub
and
sbb
enter
sub
pushf
xor
and
leave
pop
inc
pop
sub
outsb
pop
repz
aaa
sbb
mov
or
stos
mov
in
call
cld
sbb
pop
addl
lea
mov
popa
clc
cmp
mov
call
or
mov
fldt
xlat
and
fcomi
sbb
js
cwtl
and
or
pop
scas
shlb
add
daa
lods
mov
sahf
es
popa
aaa
mov
std
and
pop
push
test
mov
dec
rcll
xor
jle,pn
xchg
cmc
adc
jne
inc
cmpsl
jmp
rolb
mov
push
test
add
sub
push
adc
ss
cmp
pop
push
xchg
xor
mov
push
jl
dec
popa
or
movb
in
testb
push
out
aam
inc
xor
rclb
inc
fs
repnz
stos
inc
rcr
jg
and
inc
lret
cld
adc
or
lret
fistpl
data16
sub
mov
mov
loopne
pop
out
mov
or
ds
add
insl
mov
adc
ss
pop
icebp
mov
movsl
add
pop
psubusw
sub
aam
mov
cmc
ljmp
push
fidivl
mov
subl
mov
mov
inc
mov
pop
mov
imul
out
ficoml
subb
mov
inc
fnsave
jo
cltd
sbb
push
mov
sarl
jmp
mov
mov
out
or
popf
and
in
inc
jbe
and
xchg
faddp
insb
add
sahf
insb
inc
roll
push
dec
aaa
sbb
and
test
and
clc
stos
add
out
ss
insb
mov
dec
jae
out
xchg
xchg
jecxz
dec
sub
scas
in
hlt
int3
xchg
inc
pushf
sbbb
popa
out
and
mov
jp
jge
test
mov
cmovbe
lcall
pop
jg
push
push
lret
or
mov
or
lock
loop
cmc
clc
or
or
gs
into
cmc
jno
sbbl
mov
incl
add
bound
sbb
jmp
and
inc
les
dec
daa
out
scas
inc
and
add
cli
nop
daa
sub
inc
xchg
push
xor
into
sub
insb
lods
sbb
popf
xor
xchg
sub
pusha
mov
in
sbbl
test
js
popa
test
cmpsb
decl
movsl
aam
in
adc
mov
push
mov
into
into
add
movsb
popa
imul
inc
mov
or
mov
lock
stos
push
les
cmpsb
cli
push
push
sub
clc
mov
imul
or
pop
lock
sub
ret
clc
add
mov
push
push
mov
pop
iret
pop
out
jns
and
dec
cmpsl
ds
xchg
cmp
push
ds
mov
in
jbe
mov
jp
mov
mov
std
enter
sarb
mov
jle
sbb
aam
mov
nop
inc
repz
popf
scas
inc
lret
xlat
mov
ljmp
or
xchg
mov
data16
mov
cmp
dec
jge
cmp
or
dec
cmp
insl
icebp
cmp
dec
mov
xor
andb
mov
cs
lea
loope
rorb
int
or
lock
xlat
outsb
sub
inc
test
cmc
mov
adc
flds
pop
jmp
jae
jg
aaa
mov
push
in
fadd
adc
data16
ret
lret
mov
lods
fs
sbb
rcrb
fwait
and
je
xorb
stos
xor
push
push
xlat
loopne
movsb
imul
push
and
mov
test
loopne
out
rcll
push
lods
loop
pop
cmp
and
sub
stos
mov
in
mov
test
dec
imul
sahf
aas
testl
shlb
inc
and
push
sbb
pop
cmp
fs
in
lods
adc
mov
sahf
je
cwtl
cmp
xor
mulb
cmp
lods
inc
jbe
pop
push
mov
lods
ss
lret
push
xor
js
xor
lret
mov
cltd
xchg
xchg
xlat
faddp
mov
mov
bound
push
push
rorl
sbb
cmp
mov
xor
push
or
dec
mov
sub
aas
bound
xchg
divl
sub
sbb
fs
clc
ret
es
ror
push
mov
mov
push
test
popf
jg
iret
jns
repz
bound
adc
andb
jl
mov
call
sbbl
jne
dec
fprem
cmc
push
lcall
push
test
dec
sub
mov
addr16
pop
or
mov
mov
inc
inc
cmp
nopl
mov
inc
pushf
cld
inc
and
pop
out
iret
jbe
xor
sbb
mov
mov
das
mov
rclb
out
lahf
sbb
dec
out
and
sub
fldcw
in
pop
pop
in
mov
cmpl
pop
xor
jge
inc
sbb
out
dec
cmp
subl
pop
jb
add
inc
lods
into
xchg
outsb
jl
data16
adc
mov
sbb
pop
ret
push
fistps
sbb
adc
test
pusha
inc
test
call
cli
ret
mov
jp
roll
sub
adc
fsubl
and
inc
adc
push
or
jecxz
dec
lods
inc
jl
push
lea
pop
push
cmpsb
scas
dec
pop
jns
mov
int
test
push
mov
bound
inc
mov
push
push
iret
pop
movb
jge
out
jnp
shr
jle
mov
inc
mov
pop
push
push
mov
push
pop
js
mov
jecxz
adcb
or
push
arpl
fsubrp
adc
and
ja
inc
mov
cltd
jg
cmpsb
repnz
outsl
mov
cltd
add
not
sbb
cmc
nopl
ret
push
jne
imul
movsl
mov
loop
loopne
or
xor
inc
lret
xlat
aad
mov
adc
sbb
xchg
mov
jno
sbb
mov
add
testb
stc
pop
jp
jp
cmp
mov
or
fldenv
scas
push
xchg
dec
inc
bound
sbb
jnp,pt
jo
test
sbb
mov
sbb
and
sahf
adc
data16
fsubrp
mov
stc
mov
icebp
dec
cld
insb
adc
lea
jbe
sbb
pop
shrl
dec
mov
mov
fwait
std
dec
loopne
mov
mov
jne
add
xor
scas
and
leave
int
xor
lret
rcrb
aad
push
outsl
notl
popf
mov
out
imul
movsl
shll
cwtl
mov
sub
mov
xor
mov
inc
push
jmp
jp
ljmp
filds
jl
mov
arpl
lret
cmp
repnz
std
and
cltd
or
popa
fcompl
xchg
sub
pusha
fldcw
sub
stc
inc
mov
mov
mov
pop
in
cmp
add
vucomisd
scas
gs
int
movsb
cmc
cli
sub
mov
mov
inc
xlat
xor
push
cltd
leave
push
pop
insb
test
adc
das
repz
ret
test
inc
mov
sub
add
xor
jl
and
mov
clc
xchg
xchg
jp
cmpsl
arpl
xchg
cmc
andl
out
aad
and
push
mov
xor
sbb
xor
mov
fwait
clc
pop
int
lahf
fisubl
push
test
sbb
test
cmpsb
insb
rorl
arpl
packssdw
pop
mov
ds
mov
in
dec
inc
insb
add
icebp
setnp
fwait
xor
and
push
and
sbb
adcl
pop
pop
and
daa
adc
sub
cmp
inc
es
subl
aad
mov
stos
lods
ss
jne
mov
inc
push
imull
inc
xchg
fsubrl
mov
sub
outsb
push
aam
jp
js
mov
add
sub
and
ljmp
enter
leave
ret
aaa
in
push
out
mov
outsl
in
outsb
hlt
sub
cmp
inc
mov
test
and
gs
inc
pop
mov
sub
and
mov
ret
adc
add
lods
adc
fidivs
push
jno
subb
and
mov
push
mov
dec
push
and
sbb
mov
negb
insb
and
fdivrp
or
and
dec
les
cmc
cli
rol
loop
lret
faddp
push
xchg
inc
fnstenv
add
sub
call
xor
jmp
inc
adc
leave
je
dec
sub
ja
xchg
mov
sbb
out
add
adc
push
into
std
cmpsb
mov
dec
mov
xor
insl
mov
pop
movsl
and
cmp
sbb
jp
add
xor
cmp
pop
pop
mov
xorl
jns
lcall
hlt
push
mov
jp
outsl
call
inc
sub
pusha
adc
mov
xlat
cld
lcall
fucomp
mov
lods
mov
aad
xchg
add
add
xchg
imul
imul
cmpsl
sahf
xchg
xchg
cld
add
mov
inc
or
je
or
mov
pop
out
jle
int
stos
push
ja
push
sbb
test
clc
popf
popa
push
add
push
out
pusha
test
push
insb
clc
lods
fisttpl
lods
sbb
clc
adc
sbb
ret
adc
repnz
idivb
setle
inc
scas
std
xchg
pop
ja
rol
or
xchg
dec
lock
mov
ja
imul
and
data16
dec
in
cld
je
cmp
dec
inc
mov
ja
jmp
shll
js
fcomps
daa
popa
dec
sbbb
ds
cmp
and
out
mov
test
bound
pop
xchg
orl
mov
je
xor
inc
adc
lcall
xchg
cmp
pop
sbb
rcll
hlt
and
cmp
ljmp
xchg
adc
push
aas
bound
adc
int3
les
xchg
popf
ret
rcll
xor
or
jg
pop
repz
adc
nop
push
lret
jp
fnstenv
fdivl
push
adc
aaa
xchg
cmp
popf
xor
lea
shrb
xor
xchg
jo
hlt
jecxz
repnz
push
ds
cmp
add
and
mov
inc
fsubs
mov
mov
push
adc
or
sbb
out
test
ja
cmp
mov
arpl
pushf
cltd
jnp
xchg
sub
test
ljmp
lds
imull
or
and
imul
adcb
das
jae
fstpl
mov
aam
mov
push
cmp
dec
loop
xchg
inc
repnz
std
mov
xor
jae
xchg
mulb
xlat
repnz
adc
mov
and
lret
pop
push
xor
js
xor
call
xchg
mov
lds
in
or
pusha
mov
pop
jmp
sti
sbb
mov
insb
jne
js
sbb
icebp
inc
and
xchg
addr16
notl
dec
xchg
dec
lahf
and
cmc
outsb
sbb
lds
insl
jae
mov
mov
pop
ljmp
movsb
rorl
subb
jb
test
mov
loopne
pop
cwtl
mov
jmp
cmp
mov
and
and
xor
imul
inc
push
dec
xor
mov
insb
lods
jmp
ds
cmc
sbb
bound
test
stos
mov
push
fs
xor
imul
stc
lock
or
pop
or
sub
jle
ret
insl
and
push
ljmp
pop
sub
pop
jle
xor
push
out
add
movzwl
pop
cltd
mov
test
fdivs
adc
negb
push
jmp
inc
sbb
dec
and
in
adc
rcr
les
mov
fdiv
sub
jge
pop
movsb
ljmp
rcll
jle
mov
clc
test
vpackssdw
or
lret
loopne
sub
mov
stos
and
mov
orb
shll
cld
fistl
mov
sahf
andl
in
lret
mov
aam
mov
xchg
pop
out
popa
movsl
sub
test
cwtl
gs
adc
leave
hlt
mov
enter
lods
movsb
mov
sbb
movsl
outsl
or
or
add
into
mov
jle
out
in
push
mov
cmp
arpl
mov
cmpsb
outsb
enter
jae
sub
out
cmpsb
out
adc
aas
gs
pop
jbe
xchg
mov
pop
jnp
push
sub
inc
mov
and
or
cmc
and
sub
insb
sbb
xor
lcall
lock
inc
std
jb
fsubrs
and
fsubs
into
pop
cmp
inc
pop
popa
notl
jmp
sub
addr16
sub
int
sti
bound
fadds
daa
popa
into
ret
mov
loop
cltd
test
and
inc
leave
xlat
imul
pop
or
loope
iret
leave
and
rcrb
test
movl
adc
loope
mov
jg
insb
aad
xor
mov
sub
ret
insl
push
stos
xchg
sbb
push
mov
fisttpll
scas
mov
push
inc
push
sbb
inc
loop
loope
negb
lock
and
jno
or
mov
hlt
sbb
js
add
dec
mov
shrl
imul
jmp
sti
into
dec
hlt
sub
cmp
pop
add
sub
int
idiv
idivl
ret
ja
ret
pmaddwd
pop
add
stos
mov
fsubl
stos
and
mov
inc
inc
push
add
pusha
inc
mov
ljmp
les
mov
pop
rclb
mov
pop
add
adc
in
fcoml
scas
xchg
push
push
mov
fildl
fsubr
dec
and
int
adcb
push
jge
cld
mov
enter
dec
pop
xchg
mov
or
clc
mov
call
or
lock
mulb
rcll
cmp
inc
out
fisttpll
adc
pop
push
ljmp
addb
and
pop
cmp
inc
xlat
dec
cmp
xchg
repz
outsl
insb
in
and
pop
jecxz
jmp
cmp
dec
outsb
movl
jp
jne
andb
or
mov
adc
jp
addr16
aaa
and
test
out
aas
notl
or
mov
dec
jmp
pop
out
push
cli
pushf
push
sbb
dec
jne
cmpsl
into
repnz
stos
out
outsb
hlt
sub
das
mov
fcomip
pop
adc
sbb
mov
xor
icebp
push
test
mov
ret
jne
pop
xlat
jne
mov
push
cmpsl
xchg
movsl
mov
cmp
scas
movsl
sub
push
mov
iret
jmp
push
push
mov
ficoms
cmpsb
jge
roll
mov
xchg
and
ja
inc
and
stos
inc
mov
incb
mov
fwait
sti
add
cmpsl
sub
cmp
mov
and
or
mov
insl
sub
out
stc
cmpsl
cld
mov
clc
sahf
out
adc
sub
jge
aam
ss
lods
and
push
dec
or
pop
cli
mov
xchg
jmp
jecxz
cwtl
dec
pop
addr16
popf
outsb
pop
testb
jge
dec
push
jge
test
and
xor
in
push
and
add
mov
sub
insb
add
fmuls
sbb
push
sbbb
in
dec
loope
sub
mov
dec
sub
outsb
lds
leave
dec
pop
sub
xor
and
movsb
cmp
xchg
adc
imul
and
bound
lds
mull
mov
inc
cmp
popf
int
jg
mov
xchg
push
in
mov
in
dec
cmp
add
out
ficomps
jns,pn
mov
mov
popa
push
loop
inc
lds
out
push
cmc
shl
mov
xor
mov
fs
repz
leave
and
cli
xchg
jmp
mov
inc
or
sbb
pop
dec
sbb
repnz
mov
adc
mov
xchg
jge
jle
pop
inc
lahf
jns
inc
mov
insl
sbb
mov
shll
mov
stc
cmp
stc
or
push
pop
notl
mov
mov
testb
mov
clc
fldt
sbb
inc
test
decl
lds
repz
or
mov
add
out
in
inc
bnd
outsl
push
pop
inc
add
dec
push
mov
mov
xor
and
adc
xlat
fwait
jl
ror
ds
dec
icebp
out
pop
icebp
and
aam
stc
leave
test
negl
repz
pop
call
and
mov
and
repnz
jno
in
and
bound
outsl
push
cwtl
dec
pop
cltd
adc
scas
dec
ret
subl
loopne
push
mov
jb
xor
xchg
shrb
pop
fld
sbb
leave
cmp
std
repnz
cltd
and
push
sub
dec
decl
ljmp
jno
dec
rcr
jnp
inc
pusha
lret
jp
dec
pop
fcmovnbe
mov
out
dec
mov
sbb
cmp
push
sub
dec
roll
arpl
cmp
adc
fistpl
int3
inc
and
imul
pop
imul
pop
fimuls
dec
cmpsb
out
or
xchg
mov
push
lds
dec
cmpsl
cmp
xchg
in
pop
cmpb
mov
xor
shrl
ffree
pop
ss
xchg
rorb
cltd
icebp
and
lds
es
cmpsl
fs
xchg
enter
mov
fucom
sbb
inc
cmp
hlt
mov
iret
xchg
sub
mov
inc
jecxz
pop
hlt
nop
mov
xchg
sub
xor
hlt
mov
xchg
sub
pop
hlt
dec
in
inc
faddl
sub
stos
inc
push
ret
pop
repnz
lret
inc
loopne
mov
and
cmpsb
xor
fs
stos
push
inc
xchg
sahf
jne
fwait
or
and
adc
cli
add
sbb
xor
inc
mov
paddusw
out
jp
ja
adc
jp
das
lods
push
push
mov
xor
fsts
cmp
xor
mov
add
popf
xor
je
das
insl
lea
sbb
push
jbe
push
xlat
ljmp
movsl
repz
and
fnsave
dec
enter
mov
repnz
aam
hlt
mov
jmp
fs
push
sbb
mov
mov
mov
add
xchg
inc
int3
std
out
imul
sbb
scas
and
call
addb
dec
xor
rcl
sbb
push
ret
lods
gs
sbb
pop
imul
lock
dec
icebp
insb
mov
cmpsl
ds
inc
sub
jg
divl
insl
pop
fs
cmp
inc
jg
or
insl
ja
pusha
outsl
xor
stos
inc
push
push
cmc
mov
sbb
jno
push
jns
arpl
cwtl
idivb
jb
push
xchg
lcall
out
dec
cwtl
jae
iret
jae
add
xchg
cwtl
sub
out
xor
lahf
nop
fs
enter
mov
or
ds
test
loop
mov
insl
pop
in
nop
and
inc
sbb
add
pop
push
push
cltd
movsl
jmp
jnp
or
sbb
shl
rorb
add
xor
or
mov
sub
push
fsub
icebp
push
sub
add
decl
hlt
mov
ljmp
subl
mov
fnstsw
push
fisubrs
js
push
and
iret
dec
sbb
aam
aas
int3
mov
jns
xor
into
in
add
leave
mov
pop
rcr
popl
sti
call
adc
mov
fimull
imul
xlat
sarl
addb
mov
fldcw
insb
test
and
mov
add
sbb
ror
sbb
test
test
pop
sbb
pop
xor
and
and
cmc
inc
inc
or
fnstsw
dec
sbb
jge
xchg
xchg
add
pop
push
xor
pop
repz
add
pop
test
hlt
or
lea
rorb
dec
stos
add
jg
ret
dec
adc
dec
and
inc
pop
jge
inc
scas
jle
into
iret
popf
enter
je
inc
mov
or
imul
add
jnp
xchg
add
jmp
inc
shlb
mov
adc
loop
insb
mov
cli
cmp
mov
or
push
add
jmp
push
push
jae
push
mov
aam
or
in
inc
int
jge
mov
loopne
push
pop
fdivs
dec
jecxz
push
xor
cmp
lds
popf
mov
mov
les
mov
cltd
xchg
test
pushf
xchg
pop
and
push
test
or
jbe
dec
cmp
stc
inc
jecxz
jg
jno
jno
iret
mov
mov
add
push
or
dec
andb
rol
aaa
inc
and
xchg
adc
lods
dec
jb
out
arpl
div
arpl
sahf
xchg
jns
sub
sbb
out
mov
xchg
mov
inc
dec
jmp
outsb
sbb
mov
xchg
out
movsl
sbb
cld
rol
repz
jbe
js
bound
sbb
mov
sbb
or
cmp
and
cmpsl
dec
sub
std
sub
stos
xchg
jns
es
adc
mov
jp
mov
push
push
scas
push
or
xor
das
mov
mov
nop
and
cmc
cmp
loopne
sbb
pop
lret
fwait
dec
loopne
test
rolb
pop
dec
jle
shrl
lds
xchg
jne
mov
mov
bound
mov
dec
mov
lahf
xchg
pushf
sub
dec
dec
pop
jo
loopne
cmc
cmp
and
fbld
mov
xchg
xor
enter
ljmp
push
cmp
xchg
cld
sbb
mov
or
outsl
push
andb
in
icebp
jno
xchg
scas
repz
loop
leave
fs
dec
xchg
add
imul
jmpw
imul
movl
addr16
add
insl
dec
jbe
jle
sbb
xlat
xor
sub
test
cmp
xchg
test
sub
sub
lea
mov
push
push
int3
mov
mov
out
mov
stos
jp
pop
les
jmp
inc
dec
jmp
dec
clc
loopne
push
add
push
clc
sub
shrl
inc
push
cmpsb
xor
sbb
lret
aas
insb
jle
pop
fildl
adc
sub
fs
push
cltd
sub
movsl
xor
lahf
push
inc
sbb
enter
shlb
lcall
ss
clc
shl
sbb
jg
adc
lcall
xchg
scas
inc
jl
mov
jae
and
push
push
leave
pusha
cmpl
and
sahf
xor
dec
jb
sub
sub
xchg
sub
push
sub
fistpl
xor
pusha
adc
sti
jle
jns
xchg
lods
arpl
mov
ljmp
shrb
add
xor
sub
ds
lea
subb
cmc
xlat
insl
subb
xchg
pusha
mov
stc
nop
cmp
aas
lahf
jo
mov
jae
cmp
ret
rcll
aas
cmpsb
sbb
repz
cmp
enter
arpl
mov
ja
sbb
mov
mov
inc
movsl
cmpsb
mov
xlat
lret
cmpsb
jbe
xor
in
outsb
cmp
stos
inc
out
jl
push
scas
in
add
mov
mov
shrl
mov
pop
add
repnz
outsb
nop
aaa
dec
mov
xor
xchg
scas
push
aam
jo
loop
fcomps
push
sbb
shlb
movsb
jp
in
ret
mov
jmp
test
ss
fdivp
xchg
cwtl
mov
negb
jb
mov
mov
insl
xchg
sbb
xchg
imul
add
divl
pop
outsb
adc
mov
and
aas
inc
xchg
movsb
leave
xor
mov
sub
lock
jp
push
jbe
jl
jle
js
lods
xchg
pop
push
xchg
xchg
sub
or
mov
cmc
std
jl
mov
dec
mov
push
lock
cld
nop
cmp
inc
lret
lcall
jmp
lret
je
sub
xchg
in
loopne
cmp
jns
out
call
insl
mov
mov
lahf
out
adc
mov
mov
inc
xchg
xlat
xor
add
xchg
imul
aaa
mov
flds
sbb
jge
arpl
mov
mov
in
into
shll
or
cmp
xchg
mov
inc
pusha
repnz
inc
fidivrs
call
insl
insl
inc
lcall
ds
xchg
pop
mov
out
popa
clc
push
dec
mov
clc
popl
sub
xchg
bound
fs
je
fbld
lret
ror
mov
loopne
jge
pop
sub
jl
push
inc
mov
and
in
popa
push
test
lret
call
int3
in
mov
int3
sbb
pop
out
lret
or
in
and
mov
mov
mov
push
repnz
ret
push
stc
jl
lods
loopne
mov
jl
loop
sub
and
pop
jmp
mov
mov
push
mov
stc
enter
ficompl
adc
mov
js
mov
jp
movsl
mov
mov
cmpl
out
mov
shl
push
cmc
rolb
rcrb
ljmp
je
push
fsts
and
xor
xor
ret
inc
adc
dec
pop
ds
pusha
in
lods
inc
repnz
call
movsl
pop
mov
push
test
lret
jae
sbb
cwtl
pop
adc
in
jns
push
mov
in
push
jl
mov
push
cmp
ja
xor
push
cmp
test
push
cmp
push
aas
or
rcll
dec
rorb
sbbl
or
mov
add
and
jmp
xor
cwtl
cmp
xchg
dec
test
xchg
push
leave
int
mov
mov
sub
adc
sub
mov
pop
sub
xor
mov
clc
bound
xchg
sbb
inc
mov
adc
je
push
ja
jns
call
int
aam
mov
dec
pop
insl
int3
push
jmp
pop
jo
inc
cmp
je
jb
movsb
cmc
aaa
fwait
add
or
add
adc
push
inc
fisttpll
mov
in
xor
jecxz
aas
sbb
in
ret
adc
adc
shrl
cmc
mov
sahf
push
aas
cmp
sbb
jle
cld
insb
mov
add
imul
das
lahf
push
lods
int
in
or
dec
je
xchg
das
jle
mov
lds
pop
mov
sub
int
jecxz
in
sahf
pop
call
sbb
xor
fbstp
dec
xchg
pusha
loopne
scas
cli
lret
cmp
bound
aad
std
add
mov
adc
add
pushf
test
jmp
outsl
mov
subb
xchg
pop
cmc
xor
in
jmp
or
divb
pop
insl
jmp
add
dec
mulb
dec
mov
frstor
xchg
ret
int3
fisttpl
std
aad
jp
sub
cltd
in
mov
test
iret
shrl
lcall
mov
jecxz
jbe
mov
inc
pop
mov
adc
movsb
andl
mov
xor
push
xor
dec
mov
jnp
lock
fs
pusha
add
jbe
push
mov
iret
jecxz
mov
jbe
scas
cmp
and
lock
nop
sub
std
xor
test
cmp
push
inc
mov
in
fdivl
sub
rcl
in
es
xchg
call
repz
pop
dec
jecxz
call
pop
cmp
sub
sti
popf
and
push
jno
cld
jmp
mov
jne
mov
stc
pop
bound
sbb
and
daa
mov
adc
push
mov
in
jecxz
nop
push
sub
mov
aas
shrl
dec
jb
cmc
xchg
repnz
lahf
sub
add
add
sub
addr16
hlt
pop
sub
or
push
popf
push
add
inc
pop
es
add
xor
push
repnz
push
add
bound
xchg
out
in
sbb
out
xor
inc
negl
out
lods
jmp
mov
stc
pop
mov
cmp
cmp
sti
jle
ss
sbb
dec
and
adc
mov
add
sti
test
or
or
pushf
aam
pop
and
cmpsl
xchg
dec
aam
sbb
or
pusha
inc
fwait
gs
push
sub
sub
dec
pop
sbb
addr16
mov
and
les
xor
pop
jae
popa
out
jecxz
push
pop
addr16
sbb
pop
setns
xchg
pop
cmpl
and
adc
data16
push
jno
dec
xor
imul
sub
js
rep
lahf
daa
cmp
icebp
scas
out
mov
jns
js
sub
add
lea
pop
idivb
je
push
sub
and
xchg
inc
pop
imul
inc
ds
lods
and
mov
and
mov
neg
fs
cmp
sub
jp
and
xchg
shlb
les
in
mov
lret
cli
inc
cmpsb
cmp
sbb
aaa
std
add
addr16
jne
xlat
cmpsl
inc
popa
mov
nop
outsb
cltd
mov
fiaddl
data16
lret
movsb
out
mov
pop
or
mov
fisubl
push
pop
notl
dec
xor
cmp
insb
in
cmpsb
xchg
lods
sahf
pop
mov
lds
inc
arpl
dec
aad
mov
and
mov
outsl
shr
add
cmp
dec
xlat
and
mov
test
fnstcw
sbb
push
int3
dec
bound
popa
cmp
jecxz
and
xor
rep
out
sti
loope
jecxz
and
sti
sahf
mov
mov
ja
nop
jo
cmp
jo
in
push
cmp
mov
push
in
cltd
sbb
cmp
icebp
iret
lahf
sbb
fildll
inc
xchg
pop
dec
lret
mov
in
jecxz
mov
cwtl
jecxz
xlat
mov
mov
test
jno
ja
pop
daa
sub
mulb
cmp
mov
cmp
mov
jae
pop
hlt
push
je
inc
cmp
push
push
lahf
pop
xor
push
xchg
stos
adc
mull
xchg
mov
cmp
mov
cmp
cli
and
jl
jne
add
push
out
call
cmpsl
or
mov
sub
pop
fld
add
push
and
jne
shl
sbb
and
jle
test
or
sub
clc
and
loopne
jge
mov
pop
cmc
or
mov
sub
cmp
jbe
add
sar
outsl
push
das
xor
jmp
fldln2
ret
jecxz
imul
sbb
ss
rcr
adc
dec
adc
jbe
fbstp
popa
ffreep
fists
sub
loop
scas
das
sbb
dec
cmp
addr16
lret
sbb
add
bound
sbb
mov
pop
insb
call
adc
fstps
mov
inc
fsts
dec
mov
aam
xor
fwait
dec
mov
fwait
or
push
mov
inc
push
mov
xchg
cwtl
in
push
movsl
test
fisubs
sbb
insb
add
movsb
mov
imull
pushf
sbbl
jp
lock
out
mov
in
push
dec
mov
ja
push
adc
dec
cmp
cmp
cmc
mov
jecxz
jns
sub
out
jg
lods
mov
shr
add
or
push
inc
mov
jo
dec
sti
inc
lods
fldenv
test
test
mov
insl
cmp
jl
rclb
or
fldl2e
xchg
fimuls
les
cmc
mov
push
enter
stc
negb
add
xchg
sbb
adc
sub
arpl
push
scas
test
mov
mov
lds
inc
lret
clc
push
mov
fisubl
sub
sbb
clc
dec
and
std
mov
popa
jns
sbb
sub
mov
jo
mov
add
imul
inc
fsubs
leave
jl
addr16
fld
orb
repnz
xchg
sbb
sahf
jg
jge
out
cltd
xor
jl
push
mov
inc
bound
arpl
fstps
adc
add
pop
mov
outsl
cmp
cmpsl
jl
add
adc
adc
pop
aaa
lds
xchg
sub
cmp
mov
cmp
cmpsl
dec
mov
mov
mov
adc
or
jae
pushl
and
xchg
pop
cmpsb
dec
pop
mov
sbb
imul
add
mov
or
jp
xor
in
aas
dec
sub
adc
enter
out
mov
or
adc
xchg
add
std
cmp
jne
dec
jmp
leave
lret
or
sub
dec
push
arpl
jns
add
or
es
fisttps
sbbl
leave
pop
mov
insb
inc
ficompl
out
sbbl
inc
push
in
inc
jle
int3
sub
jo
data16
shrl
sub
jp
sarl
xchg
sub
mov
cltd
stos
les
jbe
jle
add
enter
adc
out
inc
sub
cmp
jmp
roll
and
xchg
rcrl
scas
dec
push
data16
xchg
push
jns
dec
mov
fwait
xlat
outsb
int
adc
loop
mov
push
cmc
push
adc
ja
push
aas
out
sub
push
add
lret
sbb
cmpsb
lds
std
sbb
test
add
cmp
dec
mov
mov
add
sbb
clc
jp
push
inc
dec
test
lcall
xor
fcomip
xor
xchg
or
mov
sbb
push
add
mov
adcl
jo
inc
jmp
aas
ja
ja
rorl
arpl
movsl
icebp
pop
and
mov
sahf
or
xchg
mov
nop
repz
xchg
mov
xor
jne
or
fwait
movsl
js
and
scas
push
popf
xor
or
jp
mov
xchg
add
les
xchg
and
push
ljmp
pop
cmp
pop
sbb
or
dec
dec
pop
hlt
cmpb
gs
add
ret
sub
mov
add
cmc
add
testl
pop
addr16
mov
ret
cmp
into
xchg
add
dec
sub
arpl
ds
shrb
and
fistpll
and
lahf
jl
shrb
ret
push
popf
call
and
pop
sbb
int
arpl
scas
int
xor
insb
inc
xor
adc
cmpsb
dec
or
jmp
lcall
mov
cmp
shrb
loope
mov
pushl
and
ds
xlat
in
std
adc
fisttpll
aas
and
jle
or
popf
lods
pop
cltd
cmp
std
jne
dec
xor
and
sub
and
and
cmp
out
adc
adc
sub
cld
daa
jg
adc
pop
pop
shrl
popa
lods
lds
mov
pop
stos
ret
out
std
divb
lret
mov
mov
adc
ret
pop
adc
pusha
imul
es
aaa
sub
mov
or
dec
jns
mov
xor
or
outsl
xor
add
jecxz,pt
adc
mov
push
or
cwtl
test
mov
jmp
and
mov
or
xor
xor
lahf
adc
js
push
mov
dec
pop
mov
mov
jl
or
cltd
pop
inc
fwait
gs
push
stos
loopne
and
inc
es
jle
hlt
sbb
jl
test
stos
inc
sub
test
jo,pn
adc
test
mulb
xor
adc
or
lcall
test
imul
enter
dec
mov
lea
movd
dec
scas
jb
fbstp
outsl
adc
scas
mov
int
sub
hlt
int3
mov
mov
push
mov
mov
jnp
and
outsb
js
inc
leave
and
mov
stos
xchg
push
cmp
push
js
inc
in
ret
and
bound
lret
dec
and
clc
and
inc
mov
bound
mov
mov
fldt
lds
out
xlat
push
stc
mov
jp
cmp
push
xchg
aaa
loopne
mov
jmp
sub
call
sbb
pop
repz
jns
jbe
jns
pushf
xor
insl
add
es
fs
mov
inc
outsl
adc
mov
lods
lods
js
outsb
inc
orb
push
sub
lea
dec
jbe
add
inc
jae
mov
ljmp
ficoms
cmpsl
bound
push
int
ds
jl
cltd
test
cmpsb
lods
test
mov
mov
and
pop
inc
mov
mov
jp
dec
sti
mov
xchg
sbbb
cmpsl
dec
lcall
push
or
push
lahf
arpl
in
aaa
int3
push
inc
fisubl
inc
repnz
adc
cmpsl
lcall
sar
dec
imul
movsb
out
movsb
jmp
or
push
inc
jecxz
fiadds
and
lret
push
scas
rol
iret
sbb
push
rcrb
repz
ljmp
lods
mov
jae
fsubrs
pop
cld
xchg
cwtl
jae
int
mov
pop
sub
icebp
xor
es
loope
inc
push
or
xor
push
loopne
or
shrb
mov
xchg
mov
loope
mov
pop
push
cs
xchg
lcall
cmc
pop
imul
mov
xchg
testl
stos
sahf
mov
mov
or
aaa
fidivs
js
fucomip
cltd
adc
mov
xor
adc
fs
out
and
ljmp
sub
add
jno
xchg
std
jns
push
sub
movhps
xchg
movsb
push
fisubl
lret
xlat
or
pop
xor
pop
cmp
cmp
in
or
inc
pop
cmp
dec
jns
xlat
dec
xchg
in
jge
and
or
vfmsub132ss
shlb
pop
cmp
jbe
iret
dec
inc
push
std
push
adc
sti
mov
ja
mov
daa
cmp
gs
jp
ffree
pop
pmaxsw
test
insb
pop
loope
mov
repz
dec
jmp
cmp
pop
pop
movsb
int3
int3
cmp
lret
jae
scas
ljmp
fwait
lods
into
aas
cltd
rorl
pop
aas
adc
jecxz
mov
push
push
rcll
and
ljmp
add
and
in
mov
in
inc
loop
lcall
dec
in
subb
inc
out
jns
mov
push
add
mov
xor
imul
push
pusha
sbb
or
and
lock
repnz
push
cs
adc
jno
lahf
and
inc
mov
mov
push
mov
stos
mov
je
add
lods
inc
mov
and
stc
mov
xchg
fstps
cmpl
call
ret
sbb
repz
test
push
call
cmp
sbb
insb
outsb
add
push
pop
outsb
stc
mov
aam
adc
scas
push
fcompl
jmp
out
mov
pop
fildll
dec
add
decb
rcrb
cmp
xor
ljmp
mov
sub
xchg
outsb
loope
xchg
pop
xlat
lea
out
fwait
sahf
push
xchg
arpl
push
daa
popa
mov
rorl
mov
fadds
in
mov
and
lods
xor
inc
mov
xchg
popa
addr16
shlb
jl
icebp
mov
aas
mov
mov
out
in
or
mov
insl
pop
mov
hlt
mov
cmp
mov
repz
cmpsl
aaa
lcall
lret
data16
mov
fsubrs
mov
inc
ljmp
int3
insb
inc
fistpl
ret
andb
or
insl
ret
test
mov
hlt
mov
pop
mov
mov
cmpsb
add
jmp
in
cmpl
stc
inc
add
and
int
popa
clc
fdivl
pusha
cmpsl
and
mov
push
fcoms
push
mov
mov
inc
insl
jo
popa
dec
push
sub
xlat
rcrl
fisttpll
push
xor
test
ds
adcb
jae
dec
arpl
pop
icebp
add
rol
stos
sbb
sub
fcompl
repnz
xor
test
ret
das
insl
lret
sti
mov
jns
ljmp
inc
cli
cmp
fistpl
lret
cmp
ds
xchg
ret
sub
mov
mov
sbb
test
insl
jae
test
fcoml
jg
iret
mov
stos
inc
test
insb
add
movsl
repz
push
jp
cmp
test
movsl
cwtl
das
fadds
mov
xor
add
adc
ss
scas
movsb
cmp
xchg
cwtl
das
xor
shll
dec
sbb
ds
rorl
xlat
adc
out
test
add
lea
sub
aas
or
inc
cmp
je
sahf
xor
push
mov
mov
lock
xor
lods
inc
inc
push
jo
mov
or
mov
sbb
loope
ds
pop
call
push
mov
testl
cmc
pop
dec
in
and
push
lods
imul
je
clc
mov
xlat
add
cs
and
jge
jmp
movsb
mov
mov
fildll
adc
stc
cmp
push
outsb
push
jb
aas
mov
nop
daa
xchg
vmread
cmp
dec
insl
jle
adc
rcll
push
out
idivl
out
test
dec
lcall
xchg
loopne
les
ss
pop
in
test
stos
push
jmp
push
ret
pop
test
pop
cmc
and
jl
jae
xchg
adc
fdivl
and
xchg
es
ds
sbb
sti
cltd
ss
and
jno
jmp
or
ja
lods
movsb
inc
sbbb
enter
fwait
pop
cmc
rcrb
pop
hlt
dec
hlt
out
and
andb
jns
repnz
shlb
adc
jne
ljmp
lcall
inc
out
fwait
enter
push
ljmp
adc
daa
ja
and
les
cmp
inc
out
out
adc
sub
mov
pop
out
mov
loopne
lahf
adc
xor
lea
or
test
add
jae
sub
rcr
mov
mov
fstps
inc
mov
rcrl
call
icebp
stos
in
mov
into
mov
cld
ss
arpl
push
dec
test
fwait
aad
pop
add
loop
push
sbb
cmp
add
or
mov
inc
jae
mov
jl
jp
jno
sbb
dec
jb
popf
mov
jp
int
and
mov
mov
jp
outsl
stos
sub
pop
jb
repz
jns
cmp
push
js
dec
lods
into
ja
mov
jle
out
les
lahf
cmpsb
and
xor
jne
mov
push
jge
xchg
mov
mov
sti
insb
ljmp
jle
mov
ret
repz
adc
jg
xchg
scas
mov
cwtl
das
mov
jl
jns
mov
adc
outsb
xor
sahf
inc
sbbl
cmpl
fdivl
imul
mov
lods
scas
std
xchg
fidivs
xor
jg
jno
xchg
movsb
dec
xchg
sub
in
stos
test
adc
ja
stos
movsl
inc
popf
xor
jl
fnsave
outsl
push
sahf
inc
in
test
ljmp
imul
js
js
mov
addr16
xchg
dec
dec
in
mov
xlat
gs
xchg
cwtl
dec
adc
pop
mov
fsubrs
inc
mov
jae
mov
mov
sti
xchg
fisubrl
xchg
test
mov
aam
into
gs
dec
sbb
mov
push
sub
jbe
xchg
fnsave
arpl
jp
icebp
stos
scas
daa
mov
mov
jbe
adc
jno
jmp
ja
int3
arpl
xorb
inc
rcrl
repnz
xchg
mov
popf
xor
bound
dec
loopne
push
int3
gs
mov
sub
subl
or
xchg
mov
push
out
dec
daa
mov
xchg
stos
or
mov
inc
faddl
gs
roll
inc
mov
mov
iret
mov
mov
or
and
xchg
pop
add
jg
jne
jmp
into
data16
sti
cmpsl
xor
aam
jnp
inc
cmc
dec
gs
mov
add
jmp
or
jl
in
mov
sbb
xchg
mov
cmp
rorb
pop
inc
out
xchg
adc
jo
xchg
xor
jne
mov
out
mov
clc
xor
dec
in
push
xchg
mov
fsubrs
std
push
call
sqrtps
xchg
fsubrs
mov
adc
sub
jle
cmovp
jbe
sub
cmc
pop
movsl
popa
clc
sarb
mov
testb
and
push
xchg
or
cmpsl
call
cli
xchg
cmc
aas
popf
xor
push
fbstp
mov
out
xchg
fadd
pop
or
inc
popa
add
jae
xorb
mov
cmp
adc
ss
arpl
push
dec
push
mov
les
push
dec
in
or
insb
add
mov
or
lret
sub
dec
xchg
sub
cmpsl
jns,pt
ds
xchg
cmp
shr
rcrl
aaa
into
sbb
adc
xor
addr16
push
lods
mov
fidivl
xlat
push
call
push
and
push
jne
lods
mov
ret
and
cmc
iret
ret
pop
mov
push
sahf
jl
mov
mov
es
jns
clc
push
sbbb
adc
pop
mov
mov
cltd
movsb
jo
shlb
mov
sub
pop
cs
dec
fnstenv
imul
fcmovb
stc
adc
sti
pop
outsl
sub
dec
hlt
or
mov
sub
out
cld
cmpsb
sub
dec
daa
andb
xchg
mov
test
push
and
jg
cmc
mov
mov
or
and
shrl
dec
fnsave
out
xchg
lods
call
sbb
cmp
cmp
mov
jne
inc
fdivrs
insb
or
dec
js
jge
add
fwait
xor
push
jmp
cmpsl
pop
mov
stos
imull
or
sub
adc
mov
lahf
xor
push
mov
pop
sub
test
sti
push
mov
dec
lds
movb
push
pop
out
std
jbe
adc
pop
ljmp
aas
stos
inc
jno
push
enter
je
je
les
xchg
jp
imul
pushf
movsl
cmp
jbe
adc
aas
dec
add
lea
cmc
sbb
and
xchg
push
mov
push
push
icebp
jp
lret
push
cmp
inc
fcompp
mov
cmp
rcrb
adc
pushf
out
pop
or
int3
dec
shrl
sbb
mov
inc
pop
or
scas
ja
in
je
es
xor
push
pop
into
mov
pop
jo
jne
push
inc
push
mov
push
mov
sahf
or
inc
mov
sbb
push
scas
xchg
daa
dec
je
dec
inc
pop
call
and
cmp
dec
test
outsb
sahf
cmc
in
mov
mov
or
int
cmp
stos
or
dec
mov
xchg
sub
movl
cmc
in
or
lods
pop
or
ret
fs
mov
outsb
mov
inc
sbbl
addr16
stos
pop
in
or
mov
mov
jmp
or
adc
xchg
xchg
mov
in
ja
pop
ja
inc
dec
cmp
dec
xchg
std
movsl
insl
ret
mov
daa
or
mov
sub
jp
loopne
sahf
pop
xchg
mov
xchg
ja
rcl
in
stos
inc
outsb
mov
stos
popa
sbb
xchg
ja
nop
mov
push
cmp
push
pop
xchg
sub
movsl
push
cmp
stos
xchg
sbb
add
add
call
pop
imul
ret
or
stos
outsl
pop
mov
test
test
mov
xchg
xchg
aam
push
shll
imul
push
inc
lds
jge
test
jmp
aam
or
out
lds
sub
out
jg
popl
mov
sahf
adc
xchg
sbb
and
sti
fcoms
addl
inc
jp
pop
test
pop
or
pop
test
dec
push
add
push
out
pop
jmp
push
fwait
shlb
and
ja
and
jl
push
sbb
call
fistl
sbb
mov
aas
mov
clc
cmc
insb
mov
sbb
xlat
push
nop
sub
lea
mov
inc
sbb
dec
jl
test
push
mov
xchg
mov
scas
sub
pop
aam
outsb
jmp
or
pop
test
jns
jb
or
mov
dec
outsl
add
mov
jl
jecxz
pusha
xor
jge
sub
mov
jae
stos
loop
adc
data16
mov
pop
pop
inc
mov
inc
jne
cmpsb
xor
insl
arpl
inc
cmp
into
movsb
mov
xchg
sbb
sub
jne
lock
sbb
outsb
into
dec
cmp
iret
data16
mov
jno
outsb
cltd
sub
and
outsl
mov
clc
daa
and
pcmpeqb
jmp
insl
dec
and
pop
pop
rclb
push
xor
inc
sbb
sub
divl
stos
popa
sbb
or
nop
push
xchg
aaa
sbb
xchg
xor
adc
push
mov
xchg
out
cmpsl
fimull
push
xor
mov
adc
cmp
sarl
mov
cwtl
add
lahf
sbb
inc
sahf
adc
or
adc
xor
mov
flds
lods
inc
mov
add
repnz
pushf
jg
ret
sub
fistpl
cmp
cld
cmp
into
jae
daa
push
enter
jb
jg
int3
sbb
fidivl
outsl
inc
rcll
fwait
arpl
pop
mov
jnp
pop
mov
scas
jle
or
in
pop
in
hlt
mov
mov
jb
pusha
xchg
jns
insb
mov
push
js
pop
mov
fidivs
mov
cmc
xchg
fwait
xchg
pop
mov
inc
add
jae
je
xchg
nop
jmp
xchg
stos
test
push
mov
nop
lahf
mov
mov
cmp
pop
repz
fisubs
cld
push
das
and
lods
mov
rorl
xchg
jne
aam
loope
fcoms
lock
imul
cmp
pop
iret
sbb
lods
xchg
imul
js
lret
subb
mov
dec
rcrb
xor
rcr
repz
pop
pop
cmpsb
mov
add
xchg
popf
adc
rcrl
sbb
inc
pushf
jne
or
cmp
jl
jae
sbb
aam
push
rorl
mov
lods
or
pusha
test
movsb
fwait
dec
loop
jmp
dec
in
sbb
xchg
mov
xor
lcall
adc
cmpsl
out
add
ljmp
jmp
jbe
lods
inc
mov
fwait
jne
xchg
and
pop
cli
sub
add
inc
lahf
sbb
xor
in
js
cmp
cmp
testb
pop
mov
pop
negl
inc
xchg
mov
mov
or
int3
cmp
adcb
not
mov
aam
stos
gs
ffree
push
mov
mov
out
popl
pop
lret
sti
pop
loope
inc
sbb
ljmp
and
dec
add
xchg
pusha
shlb
adc
ja
inc
shrb
mov
inc
add
and
mov
pop
rclb
cltd
pop
out
push
notb
rclb
or
test
lret
jnp
fistpll
or
rorb
arpl
rep
jmp
push
adc
and
or
cmpsl
bound
cmp
cmp
in
jnp
inc
jle
xor
xchg
dec
shrb
fsubp
sbb
jns
in
mov
pushf
lods
pop
or
jno
push
leave
ret
xchg
cmc
push
mov
ret
fstl
pop
cmc
mov
jmp
fld
mov
inc
add
xor
pop
sti
daa
stos
test
mov
jnp
mov
mov
or
pop
mov
mov
mov
rcrw
mov
lcall
xchg
std
jp
ret
and
jge
dec
mov
andb
decb
hlt
inc
mov
cld
in
lds
sarl
jle
mov
fdiv
movsl
mov
loop
addr16
inc
jg
inc
sbb
sub
mov
insb
mov
or
aaa
mov
push
sarb
ljmp
sbb
lds
movsb
std
xor
sbb
js
jae
jge
add
cs
addl
scas
flds
or
sbb
adc
out
popf
pop
lahf
fcoml
xor
lock
stos
jg
push
sbb
loop,pn
xor
add
or
ror
in
testb
cmp
std
mov
cmp
inc
mov
pop
push
addr16
lret
mov
push
nop
inc
movsl
cmp
jg
xlat
pop
sahf
mov
sub
sahf
xor
cmpsl
inc
fwait
add
sti
push
push
mov
sub
jecxz
sahf
lcall
outsb
imul
addr16
bound
cmpsb
lods
push
sbb
clc
sub
jle
repz
leave
aad
push
and
insb
loopne
fidivl
sub
imul
cmpsb
les
adcb
iret
test
rorl
imul
ja
test
mov
mov
jge
xchg
pop
jg
movsb
pop
jbe
ret
fmul
iret
push
lock
pop
add
xlat
scas
inc
or
out
push
shrb
mov
rorb
pop
int3
xor
nop
in
add
outsl
push
and
cmp
pop
es
dec
and
push
mov
inc
data16
out
add
ret
inc
cmc
xchg
or
mov
imul
cli
push
jmp
inc
dec
addl
dec
push
lcallw
pop
xor
add
jge
jmp
inc
sahf
cli
push
sbb
dec
ret
lods
pop
or
mov
xlat
jg
sub
sarb
sub
scas
inc
fisubrl
aaa
or
sub
call
loopne
and
sahf
scas
in
mov
inc
inc
mov
adc
nop
jl
in
pop
fildl
mov
jmp
mov
dec
or
jbe
dec
xchg
xchg
pop
in
mov
lock
popa
clc
daa
repnz
jbe
mov
jmp
pop
pop
movsb
aas
aad
jecxz,pt
repnz
cmpsl
sbb
lahf
or
mov
jg
sub
fwait
jno
inc
sarl
in
rorb
scas
pop
dec
jp
pop
shll
pop
movsb
cwtl
mov
push
popa
mov
loope
dec
mov
add
lds
sub
xchg
vhaddpd
add
mov
sbb
scas
cmp
decb
push
sbb
cmp
jmp
xor
cld
jno
fisttpl
std
sub
jmp
xchg
xchg
fcompl
adc
js
cwtl
dec
leave
leave
xor
inc
js
pop
int
arpl
sub
popf
push
push
aad
out
inc
mov
mov
lock
fsubs
into
and
mov
loop
aam
sbb
insb
adc
ss
fdivl
sbb
or
pop
icebp
ret
sub
sbb
or
in
xchg
movsl
and
or
jnp
in
push
jmp
rorl
shr
mov
xlat
ficoms
clc
push
mov
mov
out
lods
mov
sub
fcom
xor
loop
sbb
fildll
out
adc
popf
mov
mov
sbb
mov
ret
cmp
aaa
les
xor
jge
bound
sub
fsts
sub
dec
jl
mov
daa
sbb
lcall
std
orb
icebp
pminub
out
int
test
test
int3
or
jp
imul
stos
push
call
and
ss
push
dec
rorl
mov
std
pop
lods
les
imul
cs
lock
adc
inc
jae
cmp
std
mov
clc
sub
add
add
pop
in
pop
jmp
mov
es
mov
test
add
lea
pop
mov
imul
xor
cltd
ss
loope
sbb
jp
push
cli
or
sbb
popf
sbb
out
push
fisttpll
popa
scas
mov
mov
in
outsb
xor
or
mov
inc
inc
in
xchg
hlt
dec
xor
jno
push
inc
dec
sub
dec
pop
fwait
xchg
aas
imul
mov
jne
mov
sub
scas
mov
mov
stc
add
out
cli
int
rol
adc
ffree
in
clc
fiaddl
lret
xchg
scas
fnsave
jmp
jle
inc
mov
shlb
scas
cmp
sti
xchg
int
sub
inc
stos
or
dec
loope
cmp
dec
jle
sub
je
dec
adc
insb
adc
stos
popa
mov
addr16
dec
mov
mull
fs
push
or
xchg
ja
stos
out
sbb
inc
xchg
lock
push
pushf
nop
dec
cmp
xchg
xchg
mov
push
cmpsb
aad
stos
loope
leave
push
xlat
movsl
lods
icebp
aad
sub
shll
aam
loop
movsl
cmc
push
ror
jmp
in
fsubrl
mov
inc
mov
enter
jae
pushf
mov
sub
ja
push
in
mov
adc
push
flds
divl
inc
adc
in
test
out
mov
bound
lahf
or
mov
add
lods
xchg
js
and
push
movl
lods
push
lret
lock
pop
pop
mov
cmp
xor
shll
or
dec
loope
pop
rcrb
pop
ret
dec
andb
xor
sahf
inc
cmp
into
push
add
jmp
mov
in
push
mov
xchg
sbb
repz
and
dec
inc
scas
push
mov
sbb
rcrb
adc
mov
sub
aas
filds
popf
xor
and
insb
sub
cmp
sbb
inc
sbbl
pop
xchg
aaa
int
jnp
and
adc
inc
inc
lret
es
push
sbb
push
cmp
outsb
jecxz
add
adc
push
jmp
xor
mov
jg
push
mov
dec
mov
xchg
pop
push
icebp
test
rcll
jae
lds
jb
push
clc
and
lea
out
sbb
pushf
xor
pop
clc
pop
lods
mov
xor
jge
push
iret
and
mov
xor
sbb
push
ret
rcl
inc
shlb
sub
popf
popa
fisubs
imul
jmp
push
dec
sbb
mov
sub
hlt
add
ret
cwtl
adc
das
stos
cmc
mov
fidivl
and
xlat
push
jns
push
jmp
mov
jge
push
mov
lcall
sarl
sbb
ret
sbb
fsubs
lock
lods
add
mov
out
clc
push
mov
or
jno
pushf
ficoms
and
test
js
jno
js
mulb
sbb
mov
rcll
stc
jo
jmp
stos
ficoms
jo
mov
sahf
xchg
fists
jecxz
add
movsl
mov
in
or
mov
call
mov
adc
or
pusha
cmpsl
in
or
lcall
je
shlb
out
fwait
mov
movl
jbe
call
shlb
inc
lret
xlat
pop
inc
fmull
stos
ljmp
xor
mov
loopne
dec
mov
sub
add
jo
push
scas
jle
sbbl
sbb
rorb
xchg
outsl
mov
movsl
adcl
jne
out
and
std
push
sarb
mov
psubq
fdivl
cmpsb
pop
test
push
mov
jb
cmp
in
xor
out
stos
mov
jp
icebp
inc
shl
mov
adc
pushf
movsl
cmp
pop
cltd
mov
or
stos
daa
add
test
jnp
or
fwait
leave
xor
adc
mov
in
sbb
das
in
jo
das
arpl
sbb
fiadds
dec
pusha
into
add
stos
jmp
xchg
fsub
rcll
mov
cld
out
xchg
adc
scas
aam
rcr
in
js
mov
fcoml
fisttps
jecxz
adc
pop
cwtl
fdivl
test
out
movsb
mov
jmp
jne
ljmp
mov
jmp
movb
or
cmpsb
test
push
jmp
out
imul
and
add
outsb
fistl
lret
cmp
divl
icebp
pop
push
iret
jbe
loope
daa
and
pop
lcall
fs
fisubrs
rorb
jmp
ja
add
clc
sub
xchg
mov
mov
ret
nop
loope
aam
add
mov
stos
xlat
sbb
adc
ret
xchg
and
sub
xchg
pop
test
mov
xchg
push
inc
fidivl
loop
mov
pop
push
lret
pop
shll
loope
pop
std
pop
test
inc
fcoml
push
push
jns
shll
sub
adc
and
pop
std
xchg
dec
insb
movsb
push
mov
sbbl
ret
xchg
xchg
leave
add
out
daa
mov
or
adc
shll
loop
ss
cmpsl
int3
in
push
shr
cld
sub
rcl
push
sar
repz
aad
sub
test
xchg
int3
mov
xchg
mov
xchg
fistl
fisubl
pushf
mov
or
gs
xchg
pop
and
xor
pop
push
popf
xchg
cs
lret
sahf
mov
add
push
adc
sbb
in
test
rcll
addl
sbb
jae
and
xor
cmp
repz
push
adc
int3
push
sub
inc
outsl
arpl
aaa
or
subb
or
jne
pop
xchg
flds
gs
clc
xor
xchg
lret
push
and
sbb
popa
movb
loop
test
lret
lock
xchg
js
rorb
xor
push
add
imul
xor
add
xchg
movsb
jbe
orl
fimuls
mov
and
dec
jae
imulb
sbb
das
stos
jge
repz
xor
rcll
add
into
inc
xor
jno
push
xchg
sbb
xor
ja
stc
sub
jp
and
movsl
cmp
je
push
inc
mov
inc
add
pop
or
les
stos
inc
cwtl
xchg
mov
idivb
mov
mov
mov
sahf
clc
mov
cmpsl
mov
dec
mov
push
and
xchg
mov
data16
insl
ret
sbb
cmc
xor
loopne
sbb
mov
gs
push
or
sbb
or
xchg
add
cmp
icebp
xchg
nop
mov
aad
fucom
pop
repz
ss
jo
test
jno
imul
out
popa
ret
cld
xchg
push
subl
ds
pop
sahf
mov
dec
mov
out
dec
les
cmp
mov
ljmp
loope
pushl
add
xor
sti
jne
dec
push
sbb
adc
int3
incb
loop
lcall
pop
adc
test
std
xchg
int3
sahf
je
ffree
dec
lds
adc
inc
xchg
xor
or
je
popf
and
sbbb
sti
pop
jb
outsl
mov
cmp
addl
stos
pop
and
jns
xchg
std
inc
and
xor
inc
enter
jmp
xchg
xor
fs
test
xor
xchg
mov
lock
lret
movsl
orb
cmpsb
jne
cli
out
push
hlt
sbb
mov
rsqrtps
push
pop
int
mov
sub
arpl
movsl
dec
into
inc
cltd
iret
push
enter
mov
pop
orl
pop
out
mov
adc
and
adc
xor
adc
leave
aas
movsl
xchg
repnz
mov
rol
popa
stos
fadd
shlb
shlb
cmpsb
lret
mov
test
adc
stos
lock
fcos
xor
jmp
lods
inc
xchg
movsb
imul
xchg
js
fadd
ds
lret
mov
cmp
pop
icebp
rolb
adc
pop
stos
scas
inc
fnstsw
sub
jecxz
sub
ljmp
lds
jmp
jnp
xor
lds
out
and
sbb
pop
dec
in
sbb
sti
hlt
sub
pop
sti
es
mov
cmp
push
insl
call
cmpsl
stos
jbe
and
cmp
test
add
jp
and
dec
xchg
pop
sbb
sbb
js
cwtl
jle
addr16
iret
xor
jae
arpl
or
jo
insl
xchg
jp
popf
mov
jnp
jge
bound
xchg
mov
mov
addr16
mov
push
add
std
leave
push
lret
xor
xor
or
and
adc
sbb
pop
jmp
adc
ds
and
imul
inc
ljmp
adcl
push
icebp
jmp
mov
clc
pop
lcall
add
inc
popf
loopne
stc
cs
mov
push
out
rorb
xlat
push
stos
jmp
lahf
test
pushf
xor
aas
push
mov
cmpsl
loope
scas
loopne
xor
lret
jl
sbb
mov
outsb
pushl
aas
imul
lea
jl
imul
stos
jp
xlat
jno
int3
out
jb
out
pop
mov
mov
enter
push
push
jmp
cmp
jl
mov
pop
lea
loopne
or
int3
xor
sbb
dec
mov
lods
pop
push
mov
fidivs
test
xchg
mov
stc
ret
aas
push
cmp
addr16
ja
loope
xchg
sub
fisttps
jmp
jp
mov
pop
rclb
add
mov
push
sbb
jns
jle
mov
hlt
sbb
cmp
mov
xlat
outsb
pop
out
xor
push
lret
pop
add
js
xchg
xchg
mov
add
insb
mov
lea
sub
arpl
xchg
dec
daa
ljmp
or
push
push
jae
outsb
inc
add
popa
js
cs
sub
adc
fwait
mov
sub
jl
fidivrs
xor
in
ljmp
hlt
lds
fidivrl
xor
xchg
ja
popf
es
nop
xchg
in
stos
or
cmp
stos
mov
xor
mov
and
adc
insl
or
pop
sahf
cmp
std
sbb
sub
mov
pop
add
sahf
mov
imul
cmpsb
pop
fnstenv
negl
test
test
sub
mov
loope
dec
cmc
insl
daa
outsl
call
jp
sbb
test
inc
in
xor
push
addr16
icebp
cwtl
aas
dec
in
mov
insb
add
or
cs
and
pusha
mov
xchg
aaa
test
imul
repnz
fucom
jnp
pop
adc
popa
lods
cs
and
das
aad
aad
push
push
andl
repz
movsb
mov
jns
adc
int
das
decl
pop
jl
mov
push
popf
loop
iret
jae
insb
movsl
lock
stc
inc
push
mov
sbb
test
lds
popf
out
icebp
pop
mov
js
push
insl
add
mov
and
mov
shrb
or
pop
cmp
pop
out
nop
xlat
push
movsl
or
sub
pop
add
mov
lods
push
inc
fadds
test
neg
pop
xchg
push
cli
jge
sub
movsl
cmp
dec
fwait
xor
ret
pop
clc
mov
loop
dec
repz
outsb
and
daa
cmc
mov
mov
loop
es
ret
jge
adcb
addb
out
mov
cmp
lods
inc
cwtl
cmp
insb
mov
fwait
xor
loopne
push
adc
inc
push
adc
jge
sahf
std
add
out
shlb
icebp
pminub
adc
inc
data16
sahf
lret
or
in
xor
sbb
adc
mov
scas
call
lcall
mov
adc
dec
inc
or
aam
cltd
pop
jb
mov
mov
adc
add
sub
mov
testl
jns
dec
lcall
sub
pop
inc
inc
fstpt
je
lahf
lods
xchg
repnz
sbb
lcall
and
sbb
popa
xlat
xchg
stos
adc
add
lods
repz
add
repnz
and
jp
or
xchg
push
ret
call
and
mov
dec
dec
cmpsb
add
insl
shrb
mov
sbb
cmp
jge
call
and
push
loopne
lds
dec
in
cmp
dec
mov
cmpb
callw
and
lcall
fnsave
lock
lock
lods
add
imul
cmpsb
in
lods
int
in
addr16
jmp
mov
and
pop
mov
in
pop
stos
test
or
out
add
sub
cld
in
dec
test
insl
daa
mov
cmp
xor
sub
mov
adc
mov
dec
test
fidivs
ss
mov
xchg
pop
pop
leave
push
xor
call
xchg
jns
add
arpl
and
fs
push
aaa
lahf
push
hlt
das
xor
push
mov
and
dec
rolb
add
inc
sbb
mov
loope
cmpsl
repz
push
xchg
xchg
aam
pop
add
push
call
imul
adc
test
movsb
xor
xor
rorl
mov
lcall
andb
loopne
sbb
jns
call
mov
aaa
mov
aad
les
push
ret
ljmp
popa
in
cld
pop
pop
cmp
loope
adc
inc
notb
out
jmp
xchg
std
scas
gs
mov
outsl
and
cmp
in
js
and
cmpsb
repnz
pop
jb
enter
rcll
sbb
loopne
mov
lcall
je
dec
or
pop
pop
dec
loop
sbb
test
dec
or
mov
aad
pop
nop
cmpsl
das
adc
sbb
mov
adc
dec
xchg
or
jmp
es
aaa
mov
nop
pop
movsl
adc
xchg
into
xor
or
pop
cld
daa
inc
scas
loopne
or
xchg
jg
loope
movsl
pop
jmp
mov
shlb
add
lds
sub
push
push
sti
xchg
das
push
rcll
add
dec
test
cmp
mov
aam
lcall
adc
outsb
sbb
iret
mov
movsb
push
cmp
lods
in
stos
aad
rclb
sbb
shr
jg
fisubl
push
imul
pop
out
add
out
xchg
loopne
add
add
cmpsb
cmp
and
imul
test
fisubrl
jno
test
xchg
sub
ds
jmp
pop
dec
in
repz
icebp
in
pop
testb
iret
sub
rorb
push
movsl
push
ss
test
jne
dec
not
imul
mov
daa
call
or
stos
ficomps
repnz
ret
jmp
pop
fdivs
subl
dec
inc
out
push
stc
mov
push
add
mov
test
mov
sub
push
mov
pop
or
push
out
mov
pop
shlb
pop
xchg
xor
stos
inc
adc
fcoms
mov
test
push
mov
mov
or
cmp
cmp
sub
sar
insl
hlt
and
aaa
push
push
aaa
pushf
inc
inc
test
js
xchg
out
jne
hlt
lret
xchg
rclb
mov
push
sti
mov
mov
push
inc
add
adc
inc
out
mov
push
cli
test
lods
xor
jecxz
mov
mov
jo
sbb
pusha
sbb
insl
mov
adc
fldcw
xchg
sub
in
lods
cmp
faddp
push
pop
jmp
in
ds
insb
cmc
pop
sub
mov
lods
jmp
insb
testb
jno
xchg
shl
outsb
enter
push
stos
xor
jecxz
outsb
shrb
jne
jb
or
pusha
push
pop
sti
pop
rcrb
out
add
mov
nop
inc
fiaddl
add
mov
xchg
imul
fcmovb
mov
and
rcll
xor
xor
jae
fcoms
jmp
push
xchg
lods
das
mov
mov
push
in
dec
adc
icebp
mov
cmp
mov
jg
push
pop
popf
movsl
daa
sub
sarb
es
mov
in
jecxz
repnz
inc
js
jp
outsb
orl
mov
inc
inc
aad
js
mov
bound
ret
mov
insb
aad
pop
and
movsl
movsl
lea
dec
repz
aad
cld
out
and
xorb
jp
xor
movsl
adc
inc
add
loope
aad
jecxz
mov
bound
rorl
cmpsl
cmp
and
xor
jns
gs
loope
xor
aad
stc
movsl
cmp
cmp
add
jae
aad
pop
gs
into
fdivrs
jmp
sub
stos
inc
xor
lds
dec
or
sub
sbb
ljmp
pushf
dec
mov
out
insb
iret
insb
xor
imul
outsl
lods
adc
and
adc
sub
jno
in
insl
inc
insb
mov
and
or
mov
insb
in
in
nop
inc
mov
mov
in
outsb
fisubrs
mov
pop
mov
imul
lods
adc
and
cmp
ja
jae
push
insl
mov
and
or
pop
in
scas
nop
inc
movsb
clc
dec
or
sub
push
les
mov
les
jge
adc
adc
fwait
or
push
leave
cmc
out
test
cld
clc
pop
xchg
pop
cmc
and
xchg
inc
enter
sbb
push
mov
fidivrl
fimuls
add
add
or
push
ja
sahf
popa
dec
or
les
leave
sbb
and
push
add
or
lcall
test
lock
mov
xlat
subl
add
into
out
aam
cmc
adc
pop
in
cmp
roll
push
add
mov
pop
jo
add
dec
outsl
push
add
xchg
clc
pop
pop
in
cmp
mov
nop
aad
scas
rcr
jge
mov
pop
out
addb
int
aam
unpcklps
pop
push
cmp
mov
xchg
push
add
push
pop
cld
pop
das
std
pop
aad
call
or
fsts
cltd
cld
xchg
cmpb
pop
cld
pusha
es
xchg
pop
and
loop
test
in
sbb
decl
xor
push
hlt
je
test
mov
sub
xchg
stos
xor
inc
or
dec
adc
mov
dec
int3
adc
sub
add
orl
jmp
stc
cmp
aaa
inc
mov
sbb
pop
cwtl
sbb
ja
add
xor
sub
xor
jl
test
xchg
mov
outsb
dec
adc
push
mov
stos
lods
ss
es
call
pop
stc
shll
mov
ljmp
cmp
adc
push
ja
stos
jl
inc
or
push
fldenv
filds
cmp
loopne
xor
aad
xor
rorw
stc
fs
std
daa
stos
push
jmp
aad
lods
and
loop
mov
jge
rolb
fldt
jae
jne
es
push
popa
adc
sub
cli
data16
or
push
jmp
std
pop
add
mov
repnz
xchg
pop
add
mov
pushf
inc
cmovle
gs
popa
jno
sarb
push
cmpsb
daa
and
faddl
fcomi
pushf
inc
lea
lahf
inc
in
jl
inc
repz
pusha
cwtl
mov
sbb
stos
mov
inc
pop
add
bound
cli
fs
cltd
mov
inc
pop
xor
xor
dec
adc
jmp
aaa
xchg
push
bound
dec
fiaddl
and
jbe
inc
pop
cli
jg
stc
pop
jbe
jne
jne
add
test
push
push
fstpl
js
lods
pop
incb
dec
xchg
inc
repz
add
imul
pop
cld
jno
sti
pop
jle
iret
mov
addr16
jno
not
xchg
or
jne
or
imul
jb
push
subb
fidivl
jns
mov
or
dec
insb
out
das
lahf
daa
mov
xor
push
aam
dec
sub
out
jbe
sbb
popf
cmp
dec
out
scas
or
aad
adc
aad
dec
arpl
insb
and
push
cmp
pop
add
imul
jae
xchg
mov
sub
sbb
or
in
shrb
jecxz
loopne
jmp
push
cli
cmc
fs
push
aad
fucom
and
daa
dec
inc
adc
mov
dec
insb
xchg
adcl
movsl
xor
push
xchg
fdivrs
xchg
pop
mov
cld
inc
dec
or
call
pop
rcll
and
dec
test
hlt
pop
fildll
stos
adcl
popf
push
pop
cmp
fdivs
sahf
das
pop
test
lds
xchg
aas
loope
cmp
out
std
es
hlt
mov
jb
mov
jo
mov
aam
dec
stc
add
push
xchg
movsl
das
mov
mov
outsl
jmp
xchg
test
ror
pop
cli
push
adc
push
dec
push
push
cmpsl
mov
xchg
add
gs
xchg
jl
cmpsb
dec
int3
sbb
in
leave
adc
inc
jp
or
mov
sub
popa
sub
lea
hlt
dec
adc
adc
inc
jns
sub
sti
pusha
xor
test
mov
aaa
imul
pop
dec
cltd
inc
mov
in
and
aaa
leave
xchg
inc
out
cwtl
xlat
xchg
xor
or
fs
xchg
add
inc
or
jp
outsb
lock
push
cli
push
sub
mov
stos
inc
sahf
inc
fadd
test
push
sarl
sbb
cmpsb
imulb
pop
pop
lock
mov
mov
loopne
pusha
jecxz
das
push
clc
pop
sbb
dec
or
inc
inc
orps
sarl
mov
addr16
aam
push
push
xchg
cmp
xchg
xchg
inc
pop
jns
into
jmp
testb
mov
cmpsb
pop
cwtl
jno
dec
and
xchg
xchg
nop
jne
out
or
lcall
and
ljmp
clc
pusha
or
mov
push
std
lock
mov
idivl
movsl
xchg
sbb
and
ret
mov
mov
call
cli
arpl
dec
lock
xor
mov
stos
out
pop
xchg
mov
cmp
sarb
orb
ret
nop
ficoml
xchg
aam
sahf
inc
mov
dec
or
into
movsl
das
mov
js
add
push
mov
or
push
mov
push
std
aaa
add
sets
push
int3
push
int3
ljmp
sbb
dec
sbb
data16
dec
jecxz
stc
sub
mov
dec
adc
test
pop
out
imul
outsb
pop
push
add
ret
scas
insl
out
mov
fdivrl
aad
cmp
int3
adc
push
es
xchg
lock
xchg
in
xor
stos
gs
and
leave
cwtl
fnstcw
adc
lock
int3
je
in
mov
sbb
mov
das
sti
aad
sub
fildl
inc
push
cs
or
pusha
fbstp
sar
addb
mov
push
sbb
jne
cwtl
dec
sbb
inc
xor
jp
and
in
xor
fs
mov
stos
es
sbb
imul
lods
xchg
je
xchg
sahf
into
fidivrs
leave
lods
adc
dec
mov
jne
cs
std
imul
sbb
pop
and
ds
dec
push
push
add
jne
loope
and
push
in
call
je
mov
bound
mov
sub
fs
jns
je
mov
cld
mov
mov
xchg
inc
add
push
add
jg
imull
daa
loop
mov
inc
das
push
sbb
bound
popa
lahf
inc
scas
xor
jae
rclb
pop
arpl
sub
mov
jno
jecxz
sub
mov
stos
outsl
bnd
das
or
mull
mov
rcl
insl
int3
nop
ja
push
testl
add
pop
dec
dec
call
bound
mov
ror
imul
sbb
sahf
dec
test
xor
fwait
sahf
cmp
mov
sub
cmc
das
test
mov
test
dec
lods
bswap
mov
mov
cmp
imul
imull
jns
adc
call
clc
data16
or
and
leave
mov
cmp
mov
xor
inc
pop
testb
push
jmp
sub
pushf
loopne
dec
sarb
mov
add
pop
mov
rclb
cltd
mov
lods
inc
or
int3
test
pusha
inc
sqrtps
pop
cli
icebp
mov
xor
inc
adc
mov
je
xor
es
mov
stos
xlat
js
mov
nop
cmp
sahf
ss
std
leave
add
inc
jmp
cmc
sub
sbb
xchg
pmullw
test
pushf
cmp
idivb
jb
out
imul
sub
push
mov
cmpsl
adcl
mov
out
int3
jp
popa
lahf
sbb
lds
cltd
ds
mov
mov
je
imul
mov
inc
decb
xlat
sub
aam
cmp
into
jns
daa
mov
jo
outsl
pop
dec
xor
addl
jnp
jle
les
lahf
fildll
into
icebp
stc
scas
inc
sub
add
cmpl
jmp
jnp
cmp
int3
or
xchg
lods
and
andb
fdivp
jbe
dec
adc
int3
pop
inc
jns
enter
cwtl
sbb
out
adc
inc
mov
sub
mov
sub
faddl
mov
testb
fs
pop
push
testl
in
addr16
icebp
scas
sub
fdivrs
mov
or
jns
cld
and
addl
pop
je
add
jmp
rcrl
mov
cmpsl
fnstsw
inc
out
jb
or
test
add
dec
lods
mov
push
mov
add
mov
add
and
pop
mov
iret
push
sub
sub
fiaddl
cli
and
inc
or
mov
scas
movsl
sub
jg
push
dec
out
lods
dec
dec
adc
adc
outsl
icebp
call
xchg
cmp
pusha
daa
cmpsl
test
je
add
lods
lock
or
call
jae
ficomps
inc
adc
stos
sub
cs
push
cmc
or
xor
push
popa
icebp
loope
imul
or
add
adc
xchg
sub
dec
push
sub
pop
cli
inc
cmp
cmpsb
xchg
lret
stos
sub
into
lret
mov
montmul
cmpsb
inc
sahf
out
xchg
xor
les
gs
shlb
lcall
ljmp
add
iret
jae
push
enter
aam
fbld
inc
pop
test
mov
mov
push
add
fidivrl
fs
into
rol
xchg
lcall
mov
repz
test
test
sbb
out
cmpsb
adc
pop
repz
sub
cmp
mov
xchg
in
scas
sub
add
mov
std
push
in
push
jns
test
addr16
lcall
in
imul
xchg
inc
stos
cltd
cmp
popa
sub
aas
repnz
cmp
cmp
repz
jb
in
xlat
or
into
daa
pop
dec
adc
xor
xchg
aaa
out
ss
xchg
lcall
xchg
pop
out
insb
roll
imul
and
gs
fwait
inc
adc
ja
lea
mov
mov
ljmp
fldenv
add
sub
mov
mov
and
shr
mov
adc
test
mov
sub
lcall
mov
jbe
mov
push
mull
in
lods
cs
lcall
cmp
mov
lods
xchg
in
imul
daa
mov
pop
lret
cld
jns
subl
fs
add
fisttps
cltd
xor
out
enter
fwait
inc
gs
jl
jbe
dec
loop
popf
inc
shl
jmp
lock
xchg
and
fs
cmp
mov
cltd
loopne
in
ret
into
jmp
scas
lret
repz
cmp
and
movsb
mov
adc
test
rorl
test
fbstp
push
adc
pop
cli
divl
inc
or
inc
or
loopne
push
popf
cmc
int3
nop
sub
xchg
ds
mov
das
ja
pushf
xchg
mov
aam
or
cwtl
add
rorl
mov
pop
jnp
jle
push
imull
mov
inc
or
pop
add
jb
xchg
cld
pusha
inc
cmp
cmp
xchg
insl
repnz
rorl
dec
xor
and
jg
sbb
pop
xchg
fadds
std
or
jb
xor
jno
push
stc
leave
push
daa
test
and
ljmp
repz
js
mov
ja
push
bound
enter
orb
mov
add
or
inc
dec
iret
xchg
insb
stc
pusha
add
pop
cmpsb
aam
jecxz
mov
les
xor
pmullw
rorb
jns
inc
int3
xchg
xchg
inc
add
cmp
xor
mov
mov
mov
mov
cmp
fcmovnu
gs
lret
enter
push
sbb
pop
outsb
test
and
jns
inc
or
movsb
push
sti
movsb
add
daa
mov
xor
xor
cmp
mov
mov
les
shll
or
es
pusha
pusha
in
inc
cwtl
sarb
xchg
in
jb
sub
cwtl
inc
or
call
in
inc
movsb
xor
inc
repz
inc
sti
mov
dec
jle
mov
fs
push
mov
fs
mov
jg
mov
jle
addr16
aad
lock
lods
sub
cmp
js
mov
adc
mov
sbb
rcrb
sbb
inc
adc
add
lock
in
shrb
adc
dec
jle
jge
sbb
incl
xor
aas
dec
push
cltd
inc
jmp
fidivrs
adc
push
mov
call
mov
pop
rcrl
mov
rorb
pushf
xchg
inc
adc
ret
adc
loop
add
sahf
add
jp
rcrl
inc
or
out
push
jl
mov
fs
xchg
addb
xchg
xchg
sub
into
sbb
aaa
pop
fadds
loop
test
hlt
cli
pop
fisubs
cmp
mov
nop
aas
in
pop
imull
lcall
mov
dec
mov
xchg
inc
addr16
push
dec
jnp
mov
or
sbb
dec
sub
scas
and
cmpsl
sub
fcmovu
xchg
xor
mov
mov
jp
mov
mov
test
mov
mov
xchg
mov
xchg
fldt
mov
xor
inc
ret
stos
cs
sahf
in
fwait
xchg
push
add
roll
lret
adc
dec
mov
inc
dec
popa
cmc
lcall
cmp
fs
sbb
dec
push
divb
xchg
lds
movsl
jae
pop
mov
shlb
xchg
pop
add
mov
mov
sub
nop
cmp
mov
xchg
nop
cmp
push
out
jb
pop
incl
or
adc
xlat
pushf
inc
lcall
roll
decb
in
mov
mov
ljmp
fs
mov
mov
mov
rol
out
push
adc
jbe
dec
lds
aaa
into
adc
popa
xchg
scas
sbb
inc
xor
inc
shlb
jno
mov
inc
or
sub
int
in
fwait
jg
fiadds
icebp
iret
xchg
iret
out
dec
and
lods
pop
aaa
icebp
pop
mov
mov
xor
cmpsb
daa
pop
xchg
cmp
sub
or
adc
jl
push
dec
mov
cmp
leave
movsl
sub
pop
mov
mov
pop
jnp
rolb
fucomip
or
push
add
push
in
lcall
sbb
push
cmp
xchg
or
in
imul
icebp
mov
and
mov
cmp
mov
mov
mov
roll
lret
mov
inc
jmp
xchg
mov
js
pop
cmpsl
xchg
cmp
nop
lds
sbbb
stos
je
mov
nop
bound
in
sub
xchg
addr16
movsb
pop
lret
mov
xchg
dec
sbb
sbb
lea
or
mov
insb
loop
lret
xchg
sub
mov
push
jecxz
cwtl
aaa
insl
cld
or
xor
in
sub
xchg
dec
cs
mov
and
pushf
adc
sbb
enter
dec
nop
inc
pop
std
movsb
ss
xor
adc
leave
xor
loope
sub
scas
movsb
and
push
add
mov
negl
inc
or
stc
insl
pusha
testb
repz
mov
mov
push
iret
push
and
jno
xor
dec
adc
lret
cld
bound
sub
fwait
in
insb
fistpll
inc
push
lcall
mov
cmpl
mov
mov
int3
mov
xchg
aas
or
fstpt
cwtl
mov
lcall
sub
insl
test
push
cmp
and
aaa
sbb
popa
fcomip
push
jae
xor
pop
stos
ss
stos
jne
xchg
cmpsb
xchg
pop
add
roll
mov
test
in
dec
das
outsl
lock
sahf
sub
mov
jle
outsl
cmpsb
sub
mov
into
mov
shl
jno
jecxz
pop
and
xor
pop
mov
es
inc
ja
ja
fs
decb
sub
pop
dec
imul
out
mov
cmpsb
inc
xor
xchg
sti
xchg
fildl
test
stos
adc
add
adc
test
test
inc
or
arpl
jae
icebp
pop
xor
jne
es
mov
sbb
pop
inc
dec
pop
add
or
pop
push
sti
aas
add
mov
cmpsl
fnstsw
clc
adc
stc
mov
mov
pop
mov
jecxz
dec
push
dec
hlt
pop
add
mov
adc
mov
fs
mov
in
jne
dec
inc
or
pop
add
xor
fisubrl
mov
mov
or
aas
mov
mov
xchg
inc
mov
test
sti
aaa
inc
or
sahf
mov
sbb
or
push
or
arpl
add
xchg
jns
xor
or
jbe
cmp
daa
push
out
call
jo
loopne
mov
mov
clc
mov
xor
scas
xor
movsl
insl
jp
enter
pop
aam
lock
lahf
add
push
lret
in
inc
pmuludq
sub
and
inc
adc
cmp
cwtl
repz
jnp
inc
adc
cmp
and
pop
fisttps
pop
sub
addb
fwait
inc
jg
mov
jo
loop
sbb
pop
popf
adc
test
add
push
xor
xorl
mov
xor
sbb
or
mov
push
or
dec
adc
insl
inc
adc
aad
aam
out
insb
pop
jl
cmp
xlat
sbb
add
imul
xor
fs
pop
stc
pop
arpl
out
push
xchg
xchg
mov
outsl
cmpsb
jge
mov
mov
in
push
aam
cmp
cmp
mov
xchg
xchg
es
iret
mov
out
push
fnstcw
mov
inc
mov
mov
jg
mov
sbb
movsb
pop
faddp
pop
adc
loop
rcl
jnp
add
and
jae
cmp
stos
or
pop
xchg
jns,pt
outsl
hlt
subb
sarl
je
push
inc
or
imul
orb
xchg
cmp
int3
leave
xchg
dec
cld
cmp
sbb
pop
rcrb
and
adcb
call
and
loope
mov
in
xor
pop
idivl
mov
inc
push
in
aam
in
xor
cmp
mov
inc
inc
push
mov
adc
dec
std
inc
or
jmp
dec
push
cmp
adc
dec
pushf
inc
jb
in
jbe
fiadds
pop
push
test
mov
xlat
adc
mov
scas
lcall
mov
jo
fidivrs
sub
sbb
sbb
mov
sub
push
addr16
ja
stc
pop
in
imul
repnz
mov
mov
js
jl
or
cmp
add
push
nop
push
lds
addb
adc
iret
out
inc
or
lret
inc
pop
sbb
pop
and
sahf
les
push
notl
ret
fsubp
imul
movsl
dec
pusha
idivl
xor
movlps
mov
iret
xchg
shrb
fiadds
push
fadds
test
out
je
mov
or
pop
data16
mov
mov
cmpsl
loopne
pushf
aas
mov
mov
sub
pop
test
xchg
cmpsl
mov
cmp
stos
cld
pop
and
xor
test
rorb
or
mov
in
jo
test
pop
arpl
out
sub
adc
rclb
pop
push
push
cld
or
sub
mov
pop
add
jmp
rol
pop
jmp
adc
test
pop
jo
out
or
jae
fstpt
push
jg
fisubs
mov
pop
mov
insb
push
adcl
push
in
imul
lahf
cmp
cmpsb
mov
repz
out
mov
add
aam
incb
cmpsb
sub
dec
repnz
insb
or
jb
ja
out
pushf
movsl
sub
addl
test
ja
xorb
push
std
mov
push
jnp
std
inc
jmp
xchg
jbe
add
lea
sbb
test
jecxz
pop
aad
pop
scas
sub
dec
test
jecxz
xchg
les
or
mov
push
jg
pop
dec
into
mov
xchg
pop
loopne
cli
pop
mov
movsl
xor
dec
pop
sti
jo
icebp
pop
out
mov
pop
jecxz
mov
adc
pop
fwait
jge
bound
loopne
inc
aad
xorl
pop
add
xchg
repz
insb
push
addr16
scas
shlb
or
lods
mov
stos
notl
pop
leave
outsb
andl
subl
or
sub
iret
mov
fistpl
mov
pop
fistpll
push
int
inc
pusha
stc
pop
jno
pop
decb
jnp
xchg
bound
shll
nop
dec
push
imul
cwtl
jne
jmp
divb
jp
mov
push
aam
call
imul
imul
stos
sub
jl
dec
fdivs
cltd
arpl
test
sub
mov
inc
pop
pop
popa
mov
stos
nop
cmp
leave
imul
fistpl
mov
inc
or
mov
jae
cmp
std
pop
push
xor
inc
mov
lods
scas
xor
lds
sti
sub
mov
in
xchg
lds
movsl
iret
xchg
inc
mov
in
insb
adc
dec
dec
or
fwait
mov
outsb
dec
rcll
cmpl
adc
lds
lods
sub
rolb
outsl
call
nop
inc
rolb
pushw
mov
dec
sbb
shr
mov
test
lret
ret
xchg
sbb
lahf
pop
les
scas
ret
add
sarl
push
ror
add
mov
hlt
in
pop
dec
out
clc
lcall
and
int
and
add
mov
stos
pushf
inc
lods
sahf
aam
scas
mov
es
je
fidivrs
arpl
xchg
cmpsl
mov
sub
xor
outsb
out
jne
flds
add
mov
fcoms
jae
adc
incl
cmpsl
pop
call
scas
sub
mov
cmpsb
ss
aam
pop
xchg
push
pop
imul
das
stos
mov
xchg
imul
inc
and
ja
cmp
xchg
or
or
inc
sarb
xchg
cmp
idivl
loop
stc
bound
addr16
xchg
loopne
jbe
mov
gs
loop
pop
push
not
mov
fwait
cmp
xchg
mov
in
sbb
adc
lea
dec
fmul
mov
cwtl
mov
out
inc
cmc
popw
scas
call
add
sub
aaa
dec
or
fcomps
push
insl
sub
shlb
sub
popf
fsts
les
mov
and
xchg
push
movsl
ret
inc
adc
inc
aam
mov
scas
xor
mov
mov
sti
jge
jae
into
jo
hlt
sub
xor
jne
mul
outsb
push
xor
xor
je
or
xor
mov
ret
mov
stos
or
xchg
bound
mov
mov
fnstcw
lea
mov
cs
lods
pop
push
les
mov
orl
leave
xchg
aas
sarl
inc
sub
cmpsb
pop
jb
inc
in
mov
movsb
add
mov
stos
push
add
mov
mov
cli
pop
jmp
rclb
popf
jl
adc
inc
por
enter
add
mov
push
mov
fsubrs
scas
aad
std
mov
jg
out
push
std
js
insl
testb
sarl
push
rorb
lret
orl
xlat
pop
add
stos
sbb
sbbl
and
test
adcl
mov
sbb
mov
xor
popf
inc
mov
mov
movd
sarl
jge
cltd
stc
push
mov
jg
aam
scas
insb
push
rcr
pusha
jmp
or
xchg
pop
add
mov
pusha
mov
lods
lock
sub
inc
pop
ds
pushf
adc
call
mov
scas
mov
cmp
dec
rol
clc
xchg
xchg
sub
xor
inc
pop
inc
adc
mov
jge
push
fnstcw
cmpsb
xor
jb
cmp
roll
fdiv
pushf
aaa
mov
and
pusha
sar
adc
movsb
outsb
push
mull
je
in
jl
inc
setg
jno
push
je
ret
jle
add
pop
mov
xor
arpl
inc
cs
add
lahf
adcl
pop
mov
or
sub
lds
loopne
mov
jmp
mov
sbb
nop
inc
ljmp
mov
movsb
arpl
lea
jnp
repnz
or
push
mov
test
insl
add
pop
stc
mov
ds
add
js
cmp
cli
out
mov
out
and
fstps
jle
xchg
add
ja
cmp
cmp
mov
scas
inc
dec
mov
mov
leave
nop
lock
xchg
cmp
loope
sub
xlat
sbb
cs
mov
lret
push
lock
imul
ja
int
scas
daa
mov
ret
pop
inc
pop
scas
inc
push
arpl
mov
adcl
mov
dec
loope
das
push
out
pusha
and
aas
push
add
push
and
loope
adc
add
aam
loopne
sub
inc
xor
cmpb
stos
sub
or
mov
add
cmpsl
sub
lret
cmp
mov
ds
and
lcall
jno
dec
lahf
inc
rcrb
and
push
dec
and
leave
mov
fbstp
adc
jnp
sarb
out
sbb
outsb
push
inc
fiaddl
popa
clc
xchg
jle
in
push
clc
inc
imul
jno
xchg
mov
gs
loope
jne
lahf
sahf
pop
or
int
int3
sub
in
cmp
push
jge
je
mov
xchg
ret
add
push
sti
dec
adc
rcrw
xchg
cmp
dec
jb
pop
insb
lock
mov
fisubs
mov
add
lods
imul
lds
and
mov
sub
adc
lret
leave
out
xchg
dec
jbe
adc
mov
mov
cmp
arpl
xchg
cmp
gs
jle
fwait
inc
cmp
mov
cmp
add
and
aaa
cmpsl
push
into
fnstenv
das
lods
aas
add
nop
daa
test
jp
and
and
test
stc
mov
js
mov
mov
mov
jl
fwait
cmp
cmpsl
ss
cmpl
sahf
sbb
mov
push
xorl
int
inc
sahf
cmp
fwait
jmp
sbb
fdivl
or
mov
out
repz
mov
cmpsb
ja
mov
dec
or
lods
mov
andl
xor
dec
mov
cltd
cmp
pop
aas
cltd
dec
push
add
cmp
cmp
pop
lock
add
mov
imul
fcoms
pop
mov
mov
xor
bound
fwait
jg
cmpsb
cmp
cwtl
and
pop
push
mov
loop
sar
push
mov
xchg
or
repnz
enter
and
lds
enter
adc
push
movsb
aad
xor
mov
fldl
and
xchg
mov
adc
xchg
jne
call
leave
cli
and
mov
dec
inc
fidivrl
cmp
lahf
sahf
popa
clc
iret
rcrb
lock
and
jns
inc
inc
popf
xor
xchg
cs
xchg
mov
dec
jmp
fnstenv
or
testl
shlb
lret
das
aaa
xor
fs
dec
in
test
mov
imul
fmuls
and
sub
inc
pop
push
cmpsl
cmpl
mov
lds
out
add
jecxz
sub
add
cwtl
jl
and
into
lret
sti
out
cmp
testl
jle
mov
ret
hlt
out
sbb
mov
dec
imul
fwait
mov
push
mov
icebp
mov
adc
lods
inc
xor
cmpsb
arpl
lret
xchg
test
jmp
pop
pop
jno
cmp
imul
mov
push
lods
lods
lods
inc
movsl
cmp
add
arpl
and
pop
push
push
ljmp
cmpsl
or
stc
stc
es
dec
dec
inc
fstpt
rcrl
mov
adcb
adc
inc
inc
sahf
xor
xchg
xchg
mov
dec
ljmp
imul
clc
insl
pop
repnz
mov
cmpsl
jecxz
xor
adc
push
jmp
mov
add
xlat
mov
das
sub
cmpb
mov
lds
call
jp
and
add
test
pop
mov
leave
inc
fsqrt
out
cmp
clc
dec
inc
pop
bnd
jg
mov
rcrl
pop
adc
mov
push
fidivl
mov
push
mov
icebp
mov
movhps
bound
int3
xchg
subl
in
dec
loop
push
jb
cmp
imul
mov
push
lods
lods
scas
inc
fmulp
movsl
cmp
dec
arpl
and
pop
push
push
ljmp
movsl
or
clc
mull
mov
dec
dec
inc
fstpt
cmp
stc
int3
mov
adcb
adc
inc
inc
sahf
xor
xchg
xchg
mov
dec
jmp
or
insb
cmp
pop
repz
mov
test
fidivs
xor
xor
push
dec
in
xorb
test
add
aad
and
sub
cmpl
aam
call
jnp
and
popf
push
dec
add
cmpsb
fwait
and
clc
in
ds
sbb
dec
aas
pop
repz
jg
sahf
xchg
jp
ret
mov
cwtl
das
push
adc
imul
imul
mov
or
adc
nop
subb
mov
push
ljmp
jb
ss
pop
push
nop
daa
mov
pop
stos
stos
scas
inc
fmul
cmpsb
cmp
das
and
pop
push
push
ljmp
mov
add
sbb
mov
inc
inc
fstpt
ds
cltd
stc
lret
repz
jmp
pop
sbb
ds
xor
xchg
xchg
mov
dec
call
or
insl
cmp
clc
mov
mov
test
or
cs
jmp
xchg
insl
add
rorl
and
dec
test
popa
lods
mov
call
jl
and
sahf
push
inc
add
movsb
cltd
and
imul
aas
sbb
stc
dec
cmp
adcb
jnp
sarl
xor
mov
dec
mov
insb
mov
fcomi
mov
adc
mov
push
jmp
rorb
add
jae
xor
imul
push
xchg
sub
test
inc
fcmove
cmpsl
ds
sti
int
sub
dec
jmp
xorb
mov
les
cltd
cmc
repz
mov
dec
inc
inc
fdivl
aas
lcall
hlt
in
jmp
jl
inc
cmp
outsb
popa
lcall
mov
dec
out
or
outsb
cmp
cmc
mov
scas
adc
or
xor
xor
ljmp
jno
mov
outsb
add
add
mov
sub
stos
inc
jle
lret
bound
lret
jmp
jge
pop
or
jbe
es
enter
hlt
jmp
arpl
inc
cmp
insb
push
jl
mov
loopne
xor
movsbl
xor
jae
xchg
insl
mov
fxtract
mov
or
mov
sub
test
mov
scas
lods
push
in
dec
in
add
and
push
xchg
sub
cmpsb
mov
fmul
test
cli
stc
into
sub
pop
dec
dec
in
cmpl
jl
lahf
or
repz
sub
inc
inc
inc
fnsave
xlat
cwtl
xchg
fs
mov
sbbb
or
adc
cmp
xor
mov
push
in
fdivl
push
fsubrs
xor
xchg
gs
testb
lods
adc
fstp
ss
pushl
leave
xor
push
jmp
push
push
out
jge
or
rclb
and
and
inc
push
dec
stos
inc
jl
int3
arpl
lret
cld
lock
and
or
je
daa
mov
mov
fdiv
out
xlat
sbb
pop
cmc
push
sbbb
mov
mov
lcall
xor
je
test
insl
mov
sti
xchg
out
hlt
mov
or
mov
sub
test
mov
lods
lods
push
in
dec
in
je
xor
insl
add
push
xchg
sub
movsb
mov
test
sub
enter
in
cmpl
mov
roll
out
sub
inc
inc
inc
fnsave
inc
fcoms
mov
sbbb
or
cmp
pop
pushf
xor
mov
push
jecxz
fdivl
add
cli
xchg
arpl
mov
stos
adc
int
xor
das
sub
push
push
call
lods
mov
nop
daa
add
lea
and
inc
jnp
int3
arpl
enter
out
out
and
mov
jae
daa
mov
fdiv
out
fcoms
adc
cmp
imul
adc
mov
fwait
xor
or
push
xor
je
adc
mov
sti
xchg
in
cmc
mov
push
sbb
pop
pop
cmp
mov
enter
in
fcmovne
dec
out
cld
je
and
push
dec
xchg
sub
mov
stos
inc
clc
cmc
into
gs
sbb
pusha
dec
dec
in
cmpl
jle
fwait
or
icebp
in
sub
inc
aas
inc
fnsave
inc
fsts
mov
imul
jecxz
sbb
mov
xor
mov
push
loop
fdivl
add
jno
das
cli
xchg
popa
push
clc
scas
mov
push
lods
fcmovnbe
ss
std
xor
cs
push
jmp
dec
push
jmp
stos
mov
nop
daa
hlt
mov
push
inc
lods
inc
jns
int
movsl
lcall
clc
in
call
mov
jno
sub
ret
mov
inc
fsts
ss
mull
sbbl
mov
mov
fistpl
cmp
mov
jne
sbb
xchg
loop
testb
daa
adc
pop
push
cmp
xchg
leave
stos
test
out
fxch
push
out
cli
jne
sub
outsl
push
push
dec
xchg
sub
lea
mov
stos
inc
div
iret
and
popa
dec
inc
in
test
call
mov
out
jmp
rcrb
mov
outsb
arpl
xchg
gs
shlb
sbb
or
cmp
sahf
xor
mov
fcmovu
je
add
jb
sub
stc
nop
xchg
pop
scas
aaa
into
add
xor
in
push
dec
push
ljmp
jno
ror
xchg
sub
repnz
es
mov
push
inc
lods
inc
ja
into
mov
in
xor
jmp
mov
outsl
push
rcrb
inc
fsubrp
loop
ficoml
pcmpgtd
inc
xor
clc
gs
test
xchg
xchg
mov
fstps
pop
cmp
push
pop
pop
fbstp
jg
jo
scas
std
xchg
loopne
testl
push
push
cmp
test
lret
pop
out
xlat
leave
push
call
sub
pop
dec
dec
xchg
sub
mov
rol
lods
inc
hlt
icebp
shlb
push
lret
bound
out
test
jmp
mov
in
jmp
es
insb
popa
inc
fistl
mov
stc
in
test
adc
sbbl
fs
lahf
mov
mov
jne
add
jae
sub
xchg
pop
push
cli
xchg
test
mov
cmpsb
sbb
add
ss
and
push
dec
push
jmp
jne
or
enter
lock
daa
and
dec
dec
inc
scas
inc
jne
iret
mov
ret
hlt
jmp
or
inc
cmp
lahf
insl
push
es
jmp
inc
fistl
or
stc
arpl
sbb
test
cmp
xlat
sahf
xor
cmp
mov
ja
jge
jno
lods
xchg
clc
popl
add
lods
push
push
cmp
xorl
cmpsb
movsb
pop
lock
push
jmp
sub
jno
dec
dec
xchg
sub
insl
es
pushf
mov
into
shrb
and
arpl
out
xchg
sbbl
out
ret
daa
mov
push
inc
fcoml
mov
cli
loop
test
add
sbb
xor
aaa
mov
mov
jbe
fdivl
sub
xchg
pop
push
cli
xchg
cmpl
scas
movsb
sbb
add
ss
and
push
dec
push
jmp
je
or
fwait
jb
int
xchg
sub
out
nop
daa
and
mov
dec
inc
scas
inc
jae
shlb
xchg
int3
arpl
shr
repz
sbbl
cmp
lahf
imul
cwtl
mov
mov
ljmp
cmp
pop
xchg
mov
movsb
cmp
aad
xor
aaa
sub
mov
jno
stos
call
add
sbb
lods
push
push
cmp
xorb
mov
push
jmp
daa
sbb
dec
dec
xchg
sub
insb
es
fwait
mov
int
lods
inc
icebp
out
shrl
adc
arpl
out
xchg
ljmp
mov
sub
pop
or
mov
imul
mov
faddl
sbb
push
mov
pop
mov
mov
jbe
std
fdivl
sub
xchg
pop
push
cli
xchg
cmpb
mov
cmp
push
ss
and
push
inc
push
jmp
jae
or
lret
xchg
sub
in
nop
daa
push
sbb
inc
jno
shrl
xchg
int3
arpl
shr
repnz
adcl
cmp
lahf
imul
mov
jmp
or
cmp
pop
xchg
nop
addb
jecxz
sahf
xor
aaa
es
jns
jns
jno
stos
add
std
push
mov
and
scas
push
dec
cmp
xorb
mov
les
cmc
repz
and
inc
xchg
sub
pushf
cltd
mov
lret
mov
shrb
adc
fs
aas
lock
jmp
xchg
xchg
push
movsl
ret
mov
mov
adc
ss
loope
pop
inc
fisttpll
scas
fs
xchg
xor
mov
pop
mov
mov
ja
sti
fnsave
xchg
pop
dec
sti
xchg
cmpb
stos
mov
cmp
std
repz
into
and
pop
lock
inc
push
in
jbe
ja
mov
les
sub
mov
dec
cmp
shrb
nop
int
ret
xchg
jecxz
adcb
or
xchg
mov
mov
out
inc
fmull
or
cmp
cli
pop
pop
mov
mov
sbb
rcrl
pop
xor
push
jecxz
mov
jb
test
stc
nop
cld
sti
pop
mov
push
sbb
jle
ss
lahf
pop
repnz
push
jmp
icebp
jns
and
xchg
jbe,pn
xchg
sub
mov
shrl
bswap
gs
cmp
in
adcl
mov
adc
sub
cmp
loop
pop
inc
fimuls
lods
gs
fstp
xchg
or
sbbl
sub
mov
pop
mov
mov
js
stc
fnsave
call
jle
sbb
mov
int3
cmp
std
icebp
aaa
into
and
pop
icebp
push
inc
push
in
je
js
mov
les
sub
sbb
inc
insl
imul
popf
mov
sarb
adcb
adc
gs
mov
jecxz
fadds
or
imul
sub
pop
pop
mov
mov
scas
scas
cmpsl
loope,pt
lahf
add
pop
xor
push
in
mov
jb
test
stc
nop
cli
sti
and
dec
dec
ds
outsb
ss
lahf
pop
repz
push
jmp
icebp
jp
and
jae
inc
inc
cwtl
das
jbe
xchg
sub
mov
aam
sbb
into
gs
cmp
in
adcl
or
adc
sub
aaa
xor
jecxz
pop
inc
fimuls
stos
gs
fcmovnu
mov
or
sbbl
sub
mov
pop
mov
mov
jns
neg
je
daa
add
jl
push
mov
popf
sbb
cld
out
aaa
into
and
pop
repnz
inc
push
in
jb
jns
mov
ret
xchg
cs
out
sub
pop
mov
dec
cmp
imul
mov
fucomip
adcb
adc
arpl
xchg
test
mov
out
inc
faddl
or
sub
pop
pop
mov
lea
sbb
lahf
incl
pop
xor
mov
jl
jae
jae
cmpsl
add
clc
stc
and
dec
dec
aas
jl
aaa
into
popf
popf
pop
hlt
into
mov
jnp
and
je
inc
inc
cltd
xor
sub
mov
inc
jmp
or
cmp
mov
in
test
mov
mov
adc
shll
dec
filds
test
std
mov
or
test
sub
dec
mov
pop
mov
rclb
jecxz
add
fidivs
and
cld
xchg
jp
pop
mov
fwait
sbb
cli
in
cmp
push
sbb
repz
aas
push
in
jo
jp
mov
rcrl
push
adc
mov
imul
gs
fucomp
orl
adc
popa
popa
xor
xchg
subb
mov
dec
in
aam
fldl
es
push
pop
mov
mov
sbb
lret
mov
pop
xor
mov
jl
jb
je
movsl
add
div
and
dec
dec
aas
jp
cmp
pushf
fwait
pop
hlt
int3
mov
jnp
pop
adc
inc
inc
cltd
xor
xchg
sub
mov
dec
call
or
addr16
repz
out
test
mov
mov
lsl
ret
dec
in
push
dec
loopne
subb
cmpsl
addr16
fcom
mov
pop
cli
test
sub
cmp
lds
rcrl
jecxz
add
fbstp
and
cwtl
push
inc
std
xchg
jns
pop
mov
lcall
clc
in
cmp
sbb
ds
out
outsl
insb
jp
sahf
nop
jne
ret
das
icebp
jecxz
sub
ss
push
mov
mov
mov
fsubr
test
or
or
nop
subl
in
roll
add
insl
add
and
mov
mov
sbb
lret
cld
std
pop
das
push
rclb
in
xorb
mov
cld
xchg
div
and
dec
inc
aas
js
cmp
fwait
cltd
pop
hlt
lret
out
in
jmp
adc
ds
xor
xchg
sub
mov
out
aad
push
or
push
imul
mov
fsubrl
or
cs
in
push
dec
loope
subb
cmpsb
push
and
daa
cmpsl
ds
dec
movsb
cmp
lds
ret
int
jp
repnz
and
add
ja
and
leave
lds
aad
ljmp
dec
cmp
out
insl
push
adc
cltd
xor
loope
sub
adc
dec
data16
insl
xchg
xchg
addr16
test
adc
pop
pop
xor
mov
shll
dec
filds
add
xor
data16
push
push
mov
xchg
sbb
enter
sti
enter
rcrl
out
subb
mov
ret
hlt
repz
inc
inc
inc
xlat
jbe
cmp
cltd
xchg
pop
cmc
enter
jmp
jl
sbb
lcall
mov
dec
in
insl
adc
shrb
xor
lock
push
movsl
xor
or
sub
in
push
dec
loop
jle
add
rorl
push
sub
movsl
cmp
js
pop
stos
sahf
ret
pop
ror
in
std
icebp
loope
and
add
jbe
and
enter
hlt
jmp
pop
cmc
inc
cmp
insb
push
ja
mov
loopne
sub
ud1
xor
outsb
xchg
xchg
push
out
out
xchg
or
cmp
leave
mov
ret
push
out
rorb
add
outsl
push
xor
addr16
push
push
lea
cmpsb
stos
inc
fadd
mov
pusha
sub
ret
dec
out
jle
loopne
mov
sar
repz
and
inc
inc
inc
fdivs
rcrb
mov
jge
sbb
cmp
sub
mov
loopne
outsb
adc
shrl
xor
mov
icebp
mov
lods
fstp
xor
or
sub
out
push
dec
loop
jge
add
mov
mov
add
xchg
sub
inc
push
dec
movsl
cmp
ja
pop
test
lret
cld
lock
and
add
fwait
pop
mov
push
push
out
sbb
adc
dec
std
xorb
push
testl
loopne
test
es
test
mov
dec
push
test
dec
dec
pusha
jmp
mov
in
xchg
rorl
mov
sub
inc
jbe
jbe
out
push
dec
pop
daa
and
jae
jae
test
pop
stos
xchg
inc
cmp
negb
xchg
aaa
ret
ficomps
and
insb
xchg
inc
or
hlt
sarl
push
aam
pop
das
or
aad
add
fst
idivb
mov
pop
mov
je
jb
xor
cmp
pop
cmpsl
sbb
bound
outsl
in
pushf
xchg
test
loope
and
lahf
lret
daa
fbstp
mov
jecxz
add
adc
mov
xchg
enter
add
ror
mov
je
addr16
test
ljmp
insb
cmpsl
mov
int3
mov
shll
fisubs
dec
cs
pop
dec
and
jle
stos
push
sub
movsl
adc
js
jns
cmp
dec
adc
cli
lret
stos
push
mov
mov
add
ljmp
jne
add
add
jp
push
loop
push
dec
push
xchg
pushf
sbb
xchg
arpl
cmc
popa
inc
lea
add
sub
cmp
int
mov
jge
mov
movsl
adc
adc
fbld
dec
cmp
pusha
pusha
stos
add
add
mov
inc
jp
mov
mov
pop
js
clc
in
dec
fsubs
aaa
arpl
lcall
dec
adc
lea
imul
roll
mov
sub
add
add
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
push
jb
addr16
insl
pop
dec
popa
insl
and
je
jo
cmp
xor
and
cmp
popa
jae
gs
bound
fs
je
je
ds
gs
jb
jo
imul
addr16
insl
and
arpl
jo
imul
jae
jb
jo
imul
jo
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
add
outsl
loope
push
mov
idivb
mov
xor
pop
jb
test
or
mov
scas
stc
xchg
les
outsb
xchg
int3
and
dec
lock
call
out
sbb
lods
sarb
data16
testl
lahf
cmp
loopne
stos
lret
or
repz
divl
mov
and
mov
dec
mov
ja
fldl
sti
jmp
nop
lds
jns
push
stos
je
fdivp
sub
mov
jbe
and
push
mov
ja
test
mov
fwait
inc
je
adc
dec
sbb
and
int3
iret
push
nop
jno
aad
repz
push
xchg
mov
mov
bound
iret
sub
das
inc
xchg
lcall
jne
flds
xchg
leave
sub
in
cld
pop
lahf
fs
jmp
aas
dec
sbb
enter
mov
js
or
sti
lahf
in
pop
out
sbb
jns
inc
mov
int
xchg
jnp
scas
movsl
lods
movsb
orl
daa
mov
inc
int3
fstps
insl
cmc
pand
ficompl
icebp
and
cwtl
xor
push
repnz
rclb
cmp
mov
cs
cmp
aaa
adc
add
scas
dec
mov
aaa
adc
inc
mov
or
mov
sub
adc
push
fnstcw
jo
add
xor
ret
rcrl
xor
cmp
mov
psllq
addr16
add
cmp
paddw
dec
pop
jnp
push
jne
or
jo
or
incl
xchg
stos
pop
dec
inc
int3
out
clc
insl
or
xor
test
orb
mov
or
stos
or
sbbb
and
mov
push
mov
and
push
and
add
or
dec
xchg
js
imul
sti
jb
insb
mov
fwait
cmpsb
push
jno
sub
in
xchg
enter
sbb
loop
popa
into
aaa
and
jge
xor
lret
leave
fiadds
clc
mov
sahf
test
mov
mov
addr16
cwtl
imul
addl
cmp
movsl
pop
mov
out
and
mov
sub
popa
negl
sub
insl
xchg
pop
or
mov
sbb
push
ret
leave
repnz
mov
mov
sbb
jbe
push
fildll
cmp
cli
repz
or
pop
sub
xchg
add
scas
je
mov
mov
cmc
pop
xchg
add
add
in
jge
xor
pop
in
aad
cmp
test
orl
repz
sbb
bound
xchg
insl
in
adcb
jge
sbb
repnz
adc
decl
out
sbb
cmpsl
popa
icebp
stos
les
out
push
push
jecxz
mov
dec
push
movsl
xchg
scas
ret
xchg
add
scas
shlb
push
outsb
push
mov
push
sbb
dec
mov
or
mov
pusha
push
push
stos
shll
lea
popf
xchg
mov
pop
sahf
inc
adc
cs
push
scas
rorl
rclb
into
add
push
mov
add
cmc
insb
lea
enter
sbb
cs
js
sub
shr
daa
xlat
mov
mov
inc
lds
inc
cmp
inc
mov
jle
jae
mov
outsl
jae
dec
mov
jle
je
dec
mov
dec
je
cmc
rcl
iret
movsb
das
arpl
enter
imul
pop
inc
cmc
insb
xchg
repnz
call
in
cmp
adc
and
jge
sarb
cli
xchg
das
jl
inc
pop
xchg
int
or
adc
scas
test
andps
push
jb
aaa
xchg
mov
mov
xchg
mov
pop
pop
sbb
repz
or
sub
lods
cmc
or
inc
std
js
aaa
mov
mov
inc
jae
mov
pop
cmp
dec
jp
sub
jns
adc
sub
pop
sub
and
fdivs
jp
jge
or
sarb
adc
shr
sbb
mov
mov
inc
roll
lods
push
std
fmull
push
push
adc
lods
mov
push
cmp
adc
xchg
not
sbb
stc
mov
xchg
pushf
pop
or
sbb
gs
cmp
xchg
popa
movsb
xchg
ja
mov
dec
js
mov
mov
push
xor
cli
out
addr16
push
cwtl
mov
dec
incb
jbe
out
jae
jmp
jle
push
mov
sub
out
int3
lea
js
xchg
jne
mov
pop
mov
adc
mov
jp
fcoml
shlb
mov
mov
das
dec
inc
and
sbb
in
sarl
dec
jl
and
aam
test
jb
adc
icebp
jmp
add
jns
clc
stc
dec
out
addr16
or
mov
test
iret
xor
ror
cwtl
or
lcall
mov
or
insl
call
sbbl
fisubrl
or
sub
shlb
jae
xchg
cwtl
imul
jno
cmpsb
cmp
add
jge
cmp
fdivs
lret
pop
jbe
neg
and
push
out
in
outsb
popa
pusha
xchg
fwait
fwait
mov
bound
mov
je
sahf
arpl
mov
xor
mov
jp
or
pop
dec
jae
inc
add
xor
adc
jns
or
xlat
jge
pop
lahf
pop
cmpsl
aad
mov
int3
ss
inc
cmp
sbb
vmptrld
dec
jbe
sar
pop
into
fwait
loopne
roll
fs
lret
iret
mov
mov
push
lods
sbb
cmpsb
pop
sbb
xor
data16
pop
cltd
dec
rcrb
das
dec
fs
mov
out
dec
dec
xor
cmp
int3
xor
jle
insl
pushf
pusha
fcmovnb
repz
je
in
bound
or
sub
ret
fs
pop
cli
aaa
adc
pop
shll
mov
pop
loopne
nop
jns
sub
and
sbb
add
or
cltd
push
stc
xchg
mov
sahf
and
jno
out
pop
mov
sbb
pop
mov
pop
jno
jecxz
pop
mov
and
loope
pop
mov
mov
mov
je
pusha
fst
dec
aad
stos
in
sbb
sub
push
mov
mov
divb
fdiv
adc
movsb
mov
mov
xor
mov
jl
je
pop
fistpl
fadds
ja
xchg
mov
jmp
jb
jns
mov
push
pop
in
mov
inc
xchg
cltd
lods
cmp
sbb
loop
popf
mov
scas
adc
inc
jnp
mov
test
mov
mov
cmpsb
test
xor
dec
cwtl
decb
or
fcmovnu
mov
push
pop
imul
xor
shl
test
push
cli
bound
or
jnp
fstps
and
std
jo
popa
or
xchg
and
out
add
imul
sub
adc
push
adcb
hlt
push
decl
cli
and
test
push
