push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
orl
mov
cmpl
je
push
call
mov
mov
mov
cmpl
je
movl
jmp
mov
add
addl
mov
mov
cmp
jae
mov
add
mov
add
mov
mov
jmp
movl
jmp
mov
add
cmpl
je
lea
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
lea
push
pushl
mov
push
mov
cmpl
je
andl
mov
cmpl
je
mov
and
subb
cmp
jne
mov
and
cmp
je
movl
jmp
mov
and
cmp
je
mov
and
cmp
je
mov
and
cmp
jne
subw
movl
jmp
mov
and
cmp
je
mov
subb
and
addw
cmp
jne
mov
and
cmp
jne
movl
mov
imul
add
mov
lea
push
mov
push
mov
mov
orw
sub
push
mov
subl
mov
subl
add
addb
push
call
mov
imul
add
mov
lea
push
mov
push
mov
mov
sub
subw
push
mov
mov
add
push
call
andw
jmp
mov
mov
add
cmpl
je
mov
add
mov
mov
add
mov
mov
movzwl
add
mov
cmpl
je
mov
movzwl
cmp
jae
mov
imul
mov
mov
mov
mov
and
cmp
je
mov
and
cmp
je
mov
and
xorl
cmp
je
movl
jmp
mov
and
cmp
je
cmpl
je
mov
mov
add
mov
mov
pushl
pushl
pushl
pushl
mov
mov
mov
mov
jmp
mov
pop
ret
mov
pop
ret
sub
push
mov
sub
movl
movl
movl
mov
movzbl
mov
andb
movzbl
cmpl
je
sub
mov
cmp
jne
subw
mov
movsbl
cmp
je
mov
add
mov
mov
add
mov
jmp
mov
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
mov
movzwl
mov
mov
mov
add
mov
cmp
jl
cmpl
jg
mov
add
mov
mov
movzbl
mov
subl
cmpl
je
mov
mov
add
mov
cmp
jl
orb
cmpl
jg
mov
add
mov
cmpl
je
mov
cmp
je
mov
sub
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
mov
mov
cmpl
jne
mov
jmp
mov
movzwl
cmp
je
mov
jmp
mov
mov
add
addb
mov
mov
cmpl
je
mov
jmp
mov
add
mov
mov
add
mov
mov
movzwl
cmp
je
mov
movzwl
cmp
je
mov
jmp
mov
add
mov
cmpl
je
mov
mov
mov
cmpl
je
mov
mov
mov
cmpl
je
mov
mov
cmpl
je
mov
mov
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
mov
and
cmp
je
movl
jmp
movl
pushl
lea
push
pushl
cmpl
je
mov
push
call
mov
add
mov
cmpl
jne
mov
jmp
mov
cmpl
jne
orw
mov
jmp
mov
mov
add
mov
mov
mov
add
andw
mov
movl
jmp
mov
add
mov
mov
cmpl
je
xorb
add
andl
mov
mov
mov
cmp
jae
addl
movl
mov
mov
add
mov
lea
mov
mov
add
cmp
jne
movl
jmp
mov
mov
add
mov
movzwl
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
cmpl
jne
cmpl
je
mov
mov
cmp
jae
mov
mov
add
push
mov
push
call
mov
add
cmp
jne
mov
mov
jmp
jmp
cmpl
je
mov
cmp
jne
mov
mov
jmp
jmp
mov
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
pushl
pushl
push
cmpl
je
call
add
pushl
pushl
push
call
add
pushl
pushl
push
call
add
mov
mov
add
mov
cmpl
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
add
mov
cmpl
jne
mov
mov
mov
mov
mov
mov
push
mov
push
addb
call
mov
add
mov
cmpl
jne
jmp
mov
mov
add
mov
push
mov
mov
push
call
mov
addw
add
mov
cmpl
jne
jmp
mov
mov
add
mov
jmp
mov
mov
mov
mov
cmp
jne
cmpl
je
cmpl
jne
or
jmp
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
sub
movl
movl
movl
movzbl
cmp
jne
jmp
mov
cmp
jae
mov
mov
andw
lea
mov
cmpl
je
mov
movzwl
movzbl
cmpl
je
add
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
jmp
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movw
movw
mov
mov
mov
mov
movzwl
cmp
jle
movzwl
or
mov
mov
mov
mov
mov
orb
movzwl
cmp
jle
movzwl
or
mov
cmpl
jbe
movzwl
cmp
je
cmpl
je
movzwl
cmp
jne
mov
jmp
movzwl
movzwl
cmp
je
mov
jmp
mov
add
mov
mov
cmp
jne
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
lea
push
pushl
mov
push
mov
push
call
mov
add
cmpl
je
push
call
add
mov
push
mov
push
mov
push
mov
push
mov
push
cmpl
je
addb
cmpl
je
cmpl
je
orl
mov
push
pushl
call
cmpl
je
andw
pushl
call
mov
mov
cmpl
jne
jmp
lea
push
mov
push
mov
push
mov
push
call
mov
add
cmp
je
jmp
lea
push
lea
push
mov
push
mov
cmpl
je
cmp
je
jmp
mov
push
pushl
call
mov
cmpl
je
lea
push
lea
push
mov
push
mov
push
andl
call
mov
add
cmp
je
jmp
mov
mov
mov
addw
mov
mov
mov
movl
cmpl
je
mov
push
xorb
pushl
call
mov
pushl
call
cmpl
je
mov
pushl
call
mov
mov
pop
ret
push
mov
sub
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
pushl
push
call
add
pushl
pushl
push
call
add
pushl
pushl
push
call
add
pushl
pushl
push
call
add
pushl
pushl
push
call
add
pushl
pushl
push
call
orl
add
cmpl
je
call
mov
add
cmpl
je
call
cmpl
je
push
mov
push
call
xorb
mov
orw
mov
cmpl
je
add
mov
cmpl
jne
jmp
movl
pushl
pushl
mov
push
pushl
orw
cmpl
je
call
mov
mov
cmpl
jne
jmp
movl
mov
movzbl
cmp
jne
cmpl
je
mov
push
andb
mov
push
xorl
mov
push
mov
cmpl
je
mov
add
mov
mov
push
andw
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
lea
push
lea
push
addw
lea
push
pushl
mov
push
call
orw
mov
cmpl
je
cmp
je
jmp
push
mov
push
call
mov
mov
push
mov
push
call
mov
orl
mov
andb
push
mov
push
call
mov
andw
mov
push
mov
push
call
mov
mov
push
mov
push
call
mov
mov
push
mov
push
call
mov
mov
push
mov
push
call
mov
mov
cmpl
je
push
mov
push
cmpl
je
pushl
pushl
orw
push
call
add
pushl
pushl
push
call
add
lea
push
lea
push
lea
cmpl
je
push
subb
mov
push
lea
push
lea
push
cmpl
je
mov
add
mov
add
mov
mov
push
mov
push
mov
subb
push
call
add
mov
push
mov
push
mov
push
mov
orb
push
mov
push
mov
push
andw
pushl
mov
push
mov
push
mov
push
mov
push
pushl
mov
subb
push
call
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
add
mov
cmpl
jae
mov
add
mov
pushl
lea
push
pushl
cmpl
je
pushl
call
mov
mov
call
mov
addb
mov
cmpl
jne
cmpl
je
cmpl
je
cmpl
jne
mov
jmp
jmp
mov
jmp
jmp
mov
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
lea
push
call
jmp
mov
add
mov
cmpl
jae
pushl
push
push
call
pushl
pushl
addw
pushl
pushl
cmpl
je
push
push
call
jmp
jmp
lea
push
call
lea
push
call
xorl
mov
pop
ret
push
mov
sub
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
mov
pop
ret
jmp
mov
call
push
mov
sub
movl
call
call
mov
cmp
je
jmp
pushl
pushl
pushl
pushl
lea
sub
push
call
add
movb
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
lea
push
call
subl
add
subl
lea
push
call
mov
mov
cmpl
jne
jmp
lea
push
call
add
lea
push
mov
push
cmpl
je
push
mov
push
pushl
call
mov
cmpl
je
pushl
call
mov
mov
cmpl
jne
jmp
mov
push
lea
push
pushl
mov
cmpl
je
mov
andb
cmpl
je
jmp
mov
mov
mov
mov
add
mov
mov
and
cmp
je
mov
and
mov
cmpl
je
call
cmpl
je
xorw
mov
mov
mov
subw
movl
cmpl
je
mov
push
pushl
andw
call
mov
pushl
call
cmpl
je
cmpl
je
mov
push
pushl
cmpl
je
sub
add
mov
subw
mov
mov
mov
cmpl
je
mov
mov
cmpl
jne
jmp
lea
push
call
add
lea
push
mov
push
call
mov
mov
cmpl
jne
jmp
movl
movl
lea
push
lea
push
pushl
call
mov
mov
andw
cmpl
je
jmp
mov
push
pushl
call
mov
pushl
call
mov
mov
cmpl
jne
jmp
mov
push
pushl
call
mov
cmpl
je
push
mov
add
push
mov
cmpl
je
call
mov
cmpl
je
pushl
call
mov
mov
pop
ret
push
mov
sub
movl
movl
movl
pushl
push
mov
push
call
add
pushl
pushl
mov
push
call
add
mov
pop
ret
push
mov
sub
movl
movl
movl
pushl
push
mov
push
call
add
pushl
pushl
mov
push
call
add
mov
pop
ret
push
mov
sub
movl
movl
movl
pushl
push
mov
push
call
add
pushl
pushl
mov
andl
push
call
add
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
lea
push
call
cmpl
je
mov
pushl
call
mov
mov
cmpl
jne
jmp
mov
mov
mov
lea
push
mov
push
mov
add
push
pushl
mov
push
pushl
call
mov
mov
cmpl
je
jmp
mov
mov
mov
cmpl
je
add
lea
push
call
mov
mov
cmpl
jne
jmp
lea
push
call
add
lea
push
mov
push
call
mov
xorb
mov
cmpl
jne
jmp
pushl
pushl
call
cmpl
je
subw
mov
mov
xorw
mov
movl
cmpl
je
cmpl
je
mov
push
pushl
call
mov
pushl
call
mov
mov
pop
ret
push
mov
sub
movl
movl
movl
pushl
push
mov
push
addw
call
add
pushl
pushl
mov
push
call
add
mov
pop
ret
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
mov
mov
andw
movb
cmpl
je
cmpl
jne
jmp
mov
cmp
jae
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
je
mov
mov
add
mov
jmp
mov
pop
ret
push
mov
sub
movl
movl
mov
mov
mov
mov
jmp
mov
add
mov
mov
cmp
jae
mov
add
mov
mov
jmp
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
mov
mov
movb
cmpl
je
cmpl
jne
or
jmp
jmp
mov
add
mov
mov
cmp
jae
subl
mov
add
mov
mov
mov
add
movzbl
cmpl
je
movzbl
cmp
je
or
jmp
jmp
mov
mov
pop
ret
push
mov
sub
movl
movl
movzbl
cmp
jne
jmp
jmp
mov
add
mov
mov
cmp
jae
mov
mov
mov
add
mov
mov
movzbl
movzbl
add
mov
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
mov
and
subw
cmp
je
orw
jmp
mov
add
mov
mov
push
pushl
call
mov
pushl
call
mov
mov
cmpl
jne
jmp
pushl
push
mov
push
call
add
mov
movl
mov
push
mov
push
mov
add
push
call
add
mov
mov
mov
mov
mov
mov
movl
jmp
mov
add
mov
mov
sub
cmp
jae
cmpl
je
mov
push
mov
mov
lea
push
pushl
call
jmp
mov
mov
sub
mov
mov
movl
mov
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
add
mov
movl
movl
movl
movl
jmp
mov
add
mov
xorl
cmpl
jae
pushl
mov
push
lea
push
call
add
mov
push
lea
push
pushl
call
cmpl
jne
pushl
lea
orw
push
mov
push
call
add
jmp
mov
mov
add
mov
mov
jmp
mov
sub
mov
subw
mov
add
mov
mov
mov
mov
mov
mov
mov
cmpl
je
movl
jmp
mov
add
mov
mov
cmp
jae
mov
push
mov
add
push
pushl
call
jmp
movl
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
mov
mov
movl
movl
movl
cmpl
je
cmpl
je
cmpl
jne
or
jmp
mov
mov
mov
addl
cmpl
jne
mov
mov
add
cmpl
je
mov
mov
add
cmp
jbe
xorl
or
jmp
mov
cmpl
jne
jmp
mov
mov
add
mov
mov
cmp
jne
mov
mov
mov
mov
jmp
mov
mov
add
cmp
jbe
mov
jmp
mov
mov
add
mov
add
cmp
jbe
or
jmp
mov
mov
push
mov
xorb
add
push
mov
add
push
call
addw
add
mov
cmpl
jne
jmp
mov
mov
add
mov
mov
mov
add
mov
mov
cmp
jne
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
mov
mov
mov
addw
mov
mov
mov
movl
mov
imul
mov
movl
jmp
mov
add
xorw
mov
mov
cmp
jae
mov
shl
mov
shr
xor
add
mov
mov
shr
and
mov
mov
add
xor
mov
sub
mov
mov
sub
mov
mov
shl
mov
shr
addl
xor
add
mov
mov
and
mov
mov
add
xor
mov
sub
mov
jmp
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
sub
movl
movl
mov
mov
mov
mov
mov
mov
movl
movl
movl
jmp
mov
add
mov
mov
cmp
jae
mov
shl
mov
shr
xor
add
addb
mov
mov
and
mov
mov
add
xor
add
mov
mov
add
mov
mov
shl
mov
shr
xor
add
addl
mov
mov
shr
and
mov
mov
add
xor
subl
add
mov
andb
jmp
mov
mov
mov
mov
mov
cmpl
je
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xorl
mov
movzwl
cmp
je
mov
jmp
mov
mov
add
mov
mov
cmpl
je
andw
mov
jmp
cmpl
jne
pushl
pushl
mov
mov
addb
push
pushl
cmpl
je
push
call
mov
mov
mov
mov
mov
add
cmpl
je
push
mov
push
mov
push
subl
call
add
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
push
mov
andl
push
mov
push
mov
push
call
add
mov
mov
sub
mov
cmp
je
mov
push
mov
push
call
add
mov
push
mov
push
mov
push
call
mov
add
cmp
jne
jmp
mov
mov
cmpl
je
mov
movl
mov
mov
mov
addw
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
jmp
mov
push
mov
push
mov
push
mov
push
cmpl
je
call
mov
mov
cmpl
je
cmpl
jne
mov
jmp
pushl
pushl
call
mov
andl
pushl
call
mov
mov
mov
mov
mov
mov
movl
pushl
pushl
mov
mov
push
mov
push
call
mov
mov
pushl
pushl
mov
mov
push
mov
cmpl
je
call
add
mov
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
mov
mov
mov
orb
mov
mov
mov
mov
movzwl
lea
mov
movl
jmp
mov
add
mov
mov
add
mov
mov
mov
movzwl
cmp
jge
mov
mov
mov
pushl
pushl
mov
push
mov
mov
add
push
addl
call
mov
mov
mov
cmpl
je
mov
mov
push
mov
mov
add
push
mov
subb
push
call
add
jmp
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
mov
mov
subl
mov
mov
mov
add
mov
mov
cmpl
jbe
subl
mov
mov
add
mov
mov
cmpl
jbe
mov
mov
add
mov
mov
add
mov
movl
jmp
mov
add
mov
mov
add
mov
mov
mov
sub
shr
cmp
jae
mov
movzwl
sar
mov
mov
movzwl
and
mov
mov
mov
cmpl
je
jmp
jmp
mov
add
mov
mov
mov
add
mov
cmpl
je
orl
mov
jmp
mov
mov
add
mov
cmpl
je
jmp
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
add
mov
mov
cmpl
jbe
mov
mov
add
cmpl
je
mov
jmp
mov
add
mov
mov
cmpl
je
cmpl
je
mov
mov
add
push
call
mov
mov
cmp
jne
movl
jmp
mov
cmpl
je
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
add
mov
cmpl
je
jmp
mov
add
mov
mov
add
mov
mov
cmpl
je
mov
mov
and
andl
cmp
je
mov
mov
and
push
mov
push
call
addl
mov
mov
mov
jmp
mov
mov
add
mov
mov
add
push
mov
push
call
mov
mov
mov
mov
cmpl
jne
movl
jmp
jmp
cmpl
jne
jmp
jmp
mov
mov
pop
ret
push
mov
sub
movl
movl
movl
mov
mov
cmpl
je
mov
cmpl
je
mov
mov
mov
mov
add
orw
mov
pushl
pushl
mov
mov
push
cmpl
je
call
mov
movl
mov
cmpl
je
andl
pushl
pushl
mov
mov
push
call
xorl
mov
push
pushl
call
mov
pushl
call
mov
pop
ret
mov
add
add
push
add
and
add
add
inc
push
add
push
push
add
bound
add
add
xchg
add
push
add
mov
push
add
fcoml
add
push
add
add
add
push
add
push
push
add
sub
add
add
push
push
add
fs
add
je
add
mov
add
push
add
push
add
aam
add
loopne
add
notb
add
push
add
sbb
xor
dec
push
add
pop
push
add
push
push
add
mov
xchg
push
add
mov
push
add
ret
add
push
add
call
push
add
add
add
adc
add
add
inc
push
add
mov
add
outsb
push
add
pop
push
add
in
push
add
add
add
mov
dec
add
jl
add
outsb
dec
add
bound
add
add
dec
dec
add
cmp
add
xor
add
dec
add
adc
add
dec
add
lock
add
out
add
fimull
add
dec
add
rorb
lods
dec
add
cwtl
dec
add
mov
add
add
insb
dec
add
pusha
dec
add
push
dec
add
inc
dec
add
cmp
add
add
sbb
add
or
add
dec
add
out
add
fmuls
add
dec
add
mov
dec
add
lcall
add
add
outsb
dec
add
bound
add
add
cmp
add
sub
add
dec
add
add
add
hlt
inc
add
fiaddl
add
inc
add
mov
inc
add
add
add
nop
dec
add
sahf
dec
add
jl
add
mov
add
mov
dec
add
fmuls
add
dec
add
repnz
add
decb
add
dec
add
push
dec
add
sub
add
dec
add
dec
dec
add
pop
dec
add
push
add
jle
add
mov
add
dec
add
mov
dec
add
dec
add
in
add
testb
add
add
sbb
add
push
add
cmp
add
add
pop
push
add
insb
push
add
js
add
xchg
add
push
add
lret
add
push
add
cld
push
add
adc
add
sub
add
add
dec
push
add
pusha
push
add
jb
add
adcb
xchg
push
add
movsb
push
add
mov
add
ret
add
push
add
jo
add
pop
dec
add
dec
dec
add
cmp
add
xor
add
dec
add
push
dec
add
decb
add
dec
add
fimuls
add
dec
add
mov
dec
add
mov
add
add
pusha
dec
add
dec
dec
add
cmp
add
es
add
push
dec
add
or
add
dec
add
loopne
add
enter
mov
add
mov
dec
add
jl
add
insb
dec
add
pusha
dec
add
push
dec
add
inc
dec
add
xor
sbb
or
testb
in
add
aam
add
dec
add
mov
dec
add
xchg
dec
add
jp
add
push
add
pop
dec
add
dec
dec
add
inc
dec
add
xor
add
dec
add
adc
add
dec
add
lock
add
loopne
add
int3
dec
add
mov
dec
add
add
add
mov
add
add
add
add
outsb
add
jbe
add
data16
insb
add
add
jb
add
add
add
add
add
dec
imul
jb
dec
insb
insb
insb
outsl
outsl
imul
add
add
add
jne
inc
xor
jb
gs
xor
add
add
add
add
mov
add
loopne
add
call
add
add
add
add
push
add
lods
inc
add
inc
inc
add
jle
add
or
add
add
add
add
mov
add
pusha
inc
add
cmp
add
rclb
add
inc
add
mov
add
add
push
add
and
add
add
inc
push
add
push
push
add
bound
add
add
xchg
add
push
add
mov
push
add
fcoml
add
push
add
add
add
push
add
push
push
add
sub
add
add
push
push
add
fs
add
je
add
mov
add
push
add
push
add
aam
add
loopne
add
notb
add
push
add
sbb
xor
dec
push
add
pop
push
add
push
push
add
mov
xchg
push
add
mov
push
add
ret
add
push
add
call
push
add
add
add
adc
add
add
inc
push
add
mov
add
outsb
push
add
pop
push
add
in
push
add
add
add
mov
dec
add
jl
add
outsb
dec
add
bound
add
add
dec
dec
add
cmp
add
xor
add
dec
add
adc
add
dec
add
lock
add
out
add
fimull
add
dec
add
rorb
lods
dec
add
cwtl
dec
add
mov
add
add
insb
dec
add
pusha
dec
add
push
dec
add
inc
dec
add
cmp
add
add
sbb
add
or
add
dec
add
out
add
fmuls
add
dec
add
mov
dec
add
lcall
add
add
outsb
dec
add
bound
add
add
cmp
add
sub
add
dec
add
add
add
hlt
inc
add
fiaddl
add
inc
add
mov
inc
add
add
add
nop
dec
add
sahf
dec
add
jl
add
mov
add
mov
dec
add
fmuls
add
dec
add
repnz
add
decb
add
dec
add
push
dec
add
sub
add
dec
add
dec
dec
add
pop
dec
add
push
add
jle
add
mov
add
dec
add
mov
dec
add
dec
add
in
add
testb
add
add
sbb
add
push
add
cmp
add
add
pop
push
add
insb
push
add
js
add
xchg
add
push
add
lret
add
push
add
cld
push
add
adc
add
sub
add
add
dec
push
add
pusha
push
add
jb
add
adcb
xchg
push
add
movsb
push
add
mov
add
ret
add
push
add
jo
add
pop
dec
add
dec
dec
add
cmp
add
xor
add
dec
add
push
dec
add
decb
add
dec
add
fimuls
add
dec
add
mov
dec
add
mov
add
add
pusha
dec
add
dec
dec
add
cmp
add
es
add
push
dec
add
or
add
dec
add
loopne
add
enter
mov
add
mov
dec
add
jl
add
insb
dec
add
pusha
dec
add
push
dec
add
inc
dec
add
xor
sbb
or
testb
in
add
aam
add
dec
add
mov
dec
add
xchg
dec
add
jp
add
push
add
pop
dec
add
dec
dec
add
inc
dec
add
xor
add
dec
add
adc
add
dec
add
lock
add
loopne
add
int3
dec
add
mov
dec
add
add
add
mov
add
add
xor
inc
gs
popa
jae
inc
jb
outsl
jb
add
dec
outsl
arpl
gs
outsb
outsw
push
add
xchg
add
je
gs
imul
lea
inc
gs
imul
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
push
add
jo
popa
arpl
imul
inc
gs
jb
imul
inc
add
push
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
add
je
outsl
insl
jo
je
jb
popa
insl
gs
add
mov
bound
inc
gs
gs
inc
je
insl
add
sahf
add
outsl
bound
inc
fs
je
insl
inc
add
sub
insb
jae
jb
popa
je
add
xor
insb
jae
jb
jo
inc
add
xor
inc
jb
popa
je
inc
jbe
outsb
je
add
inc
add
gs
je
dec
jne
gs
add
test
inc
gs
push
dec
outsl
arpl
add
add
jb
insl
jo
inc
add
bound
push
outsb
insb
outsl
arpl
add
bound
dec
popa
outsb
fs
add
stos
add
outsl
bound
dec
outsl
arpl
add
bound
inc
insb
insb
outsl
arpl
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
sgdtl
je
jne
jb
outsb
je
push
add
scas
add
outsl
bound
push
gs
insb
insb
outsl
arpl
cmp
insb
jae
jb
outsb
push
add
pusha
add
gs
inc
imul
insb
outsl
bound
push
imul
insb
jae
jb
jo
push
add
adc
push
jb
je
inc
imul
gs
je
inc
imul
gs
imul
gs
add
push
gs
fs
imul
gs
jne
jb
outsb
je
jb
arpl
jae
in
inc
gs
outsl
insl
jo
je
jb
popa
insl
gs
add
movl
jo
ret
outsl
jb
popa
je
gs
popa
addr16
add
sub
jb
insl
jo
add
int
inc
gs
inc
push
add
jecxz
dec
outsl
popa
fs
imul
add
push
add
je
jb
arpl
fs
jae
add
movl
dec
imul
out
dec
outsl
popa
fs
imul
add
xchg
add
je
jbe
outsb
je
add
add
popa
insb
inc
jb
gs
add
popa
insb
inc
insb
insb
outsl
arpl
add
add
outsb
inc
imul
jae
jb
outsb
inc
add
push
add
outsl
jae
dec
popa
outsb
fs
add
add
imul
insb
gs
bound
arpl
add
insb
gs
jae
dec
jne
gs
add
bound
inc
jb
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
pushf
add
fs
imul
add
je
gs
je
jo
imul
nop
add
je
outsl
jns
imul
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
jbe
push
imul
arpl
push
gs
imul
js
inc
add
dec
add
je
jns
je
insl
dec
outsb
jne
ret
gs
popa
addr16
gs
ret
add
jae
popa
addr16
outsl
js
add
inc
outsl
jo
push
arpl
jge
dec
outsb
je
jb
arpl
arpl
add
popa
bound
imul
inc
add
jne
je
insb
imul
inc
outsl
jb
popa
je
add
je
inc
insb
imul
add
and
dec
outsb
jne
je
insl
inc
outsl
jne
je
add
gs
dec
outsb
jne
add
add
jo
outsb
fs
outsb
jne
add
inc
push
outsb
jne
je
insl
add
push
gs
arpl
insb
insb
push
popa
outsb
add
inc
add
je
arpl
insb
insb
push
popa
outsb
add
inc
add
je
arpl
insb
insb
push
outsl
jae
add
add
je
insb
imul
inc
outsl
jb
popa
je
popa
insl
gs
add
add
je
insb
imul
dec
ja
gs
mov
inc
jb
ja
gs
inc
add
dec
outsb
data16
popa
je
push
arpl
add
popa
insl
gs
arpl
add
jb
insb
insb
push
imul
dec
add
je
arpl
insb
insb
push
outsl
jae
add
push
gs
outsl
jb
addr16
jne
fs
imul
add
je
gs
popa
addr16
add
outsb
jae
popa
je
dec
inc
dec
push
jns
inc
arpl
insb
add
test
push
jb
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
outsb
jae
popa
je
dec
gs
popa
add
xchg
add
jo
je
push
popa
addr16
add
mov
inc
gs
jb
jns
arpl
add
je
outsl
jns
jne
jae
jb
mov
push
outsb
push
imul
outsl
outsl
imul
testb
imul
popa
jae
inc
add
xchg
inc
gs
imul
outsl
arpl
add
add
popa
outsb
addr16
insb
imul
inc
push
add
inc
gs
imul
popa
arpl
outsb
je
add
add
jae
push
jne
je
gs
popa
addr16
add
imul
imul
inc
outsl
jb
popa
je
add
repz
je
insb
imul
je
sub
inc
gs
outsb
jne
je
imul
add
jo
imul
add
je
insb
imul
inc
popa
je
add
addb
gs
jb
insl
gs
jb
arpl
cmp
jae
inc
insb
imul
add
fadds
dec
jo
outsb
inc
insb
imul
add
inc
gs
imul
add
jae
dec
gs
popa
addr16
add
pop
add
je
imul
outsb
addr16
add
pop
add
gs
je
push
imul
push
add
dec
gs
jo
add
dec
add
je
jns
je
insl
dec
gs
imul
inc
gs
gs
je
je
add
add
je
inc
add
add
insb
gs
jae
inc
inc
add
add
je
outsl
arpl
add
nop
add
dec
arpl
imul
imul
add
stos
add
ja
arpl
add
inc
add
je
jns
inc
outsl
insb
outsl
jb
add
insb
insb
push
arpl
mov
push
popa
imul
inc
gs
inc
dec
inc
push
jb
arpl
add
add
je
jne
jae
jb
xchg
add
push
imul
pop
add
je
imul
outsb
addr16
add
insl
add
outsl
ja
arpl
insb
insb
inc
popa
jb
jle
dec
outsb
jbe
insb
imul
je
add
fs
arpl
insb
gs
je
jb
inc
add
fs
jne
jae
jb
add
fs
arpl
inc
add
fs
je
imul
push
gs
imul
outsl
outsl
imul
add
inc
jb
popa
je
push
imul
inc
add
add
je
outsb
jne
inc
add
je
jne
dec
outsb
jne
add
bound
outsb
jne
je
insl
add
lods
add
ja
outsb
jne
popa
jb
pop
add
je
imul
popa
arpl
outsb
je
add
popa
je
push
imul
outsl
add
outsl
ja
imul
sub
push
gs
insb
imul
push
imul
xlat
add
outsb
fs
imul
sbb
push
outsb
fs
gs
popa
addr16
add
mov
inc
jb
ja
gs
push
add
push
push
jb
outsl
jb
add
add
je
insb
imul
inc
outsl
jb
popa
je
popa
insl
gs
add
add
imul
imul
inc
outsl
jb
popa
je
add
mov
dec
outsl
popa
fs
je
imul
inc
gs
insb
imul
inc
popa
je
add
mov
dec
jae
insb
imul
inc
outsl
jb
popa
je
jbe
imul
rolb
outsb
jne
inc
insb
imul
inc
outsl
jb
popa
je
add
adc
push
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
insb
addr16
jne
je
outsb
inc
push
add
add
inc
insb
addr16
je
insl
add
xor
push
gs
insb
addr16
je
insl
push
gs
inc
add
add
arpl
insb
addr16
jne
je
outsb
add
loope
push
gs
jae
addr16
add
push
add
insb
gs
jae
inc
popa
jo
jne
add
add
inc
gs
insb
addr16
je
insb
dec
inc
add
mov
inc
imul
add
je
insb
addr16
je
insl
push
gs
inc
add
add
je
popa
jo
jne
add
test
inc
jb
ja
outsl
arpl
push
arpl
push
inc
push
xor
cs
insb
add
cmp
inc
jb
popa
je
inc
outsl
outsb
je
outsb
imul
push
add
je
bound
arpl
add
inc
gs
je
arpl
bound
arpl
mov
push
gs
insb
imul
je
add
iret
add
insb
arpl
insb
gs
gs
add
je
gs
inc
outsl
insb
outsl
jb
add
add
je
imul
outsl
jb
add
gs
gs
dec
bound
arpl
dec
add
gs
je
push
outsl
insb
imul
add
inc
gs
gs
dec
gs
imul
push
gs
arpl
push
arpl
fiadds
push
gs
dec
inc
imul
imul
gs
outsl
jb
inc
inc
add
add
je
imul
dec
jb
inc
js
add
gs
arpl
imul
xchg
add
jne
dec
gs
inc
imul
jb
popa
je
inc
dec
inc
imul
add
je
dec
inc
imul
je
insb
je
add
add
je
outsb
push
inc
imul
jb
add
jns
gs
inc
imul
gs
je
gs
push
outsl
fs
inc
imul
jae
xor
inc
gs
outsb
push
inc
imul
add
gs
popa
insb
gs
gs
outsb
je
imul
gs
gs
inc
imul
js
push
add
gs
inc
outsb
push
inc
imul
jb
je
push
add
je
outsb
insb
gs
add
je
outsb
push
inc
imul
add
inc
jb
popa
je
push
popa
insb
gs
gs
add
je
gs
inc
imul
js
add
gs
je
inc
imul
imul
push
add
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
and
popa
je
inc
imul
add
gs
je
inc
outsl
outsb
je
add
add
gs
je
inc
outsl
insl
jo
je
bound
inc
add
push
add
gs
inc
inc
add
adc
inc
imul
add
je
jne
inc
add
or
je
jne
push
add
jp
inc
gs
gs
inc
js
outsb
je
outsl
imul
inc
gs
gs
inc
js
outsb
je
outsl
imul
inc
gs
gs
arpl
popa
jo
add
add
je
imul
je
js
add
add
jbe
inc
inc
add
mov
push
arpl
jae
bound
add
push
gs
imul
addr16
js
add
jns
outsb
push
inc
imul
je
popa
jo
outsl
fs
mov
jns
gs
inc
imul
add
cld
add
je
imul
inc
js
inc
js
add
add
je
jb
jae
dec
jb
inc
js
inc
inc
dec
xor
cs
insb
add
add
je
popa
jbe
inc
imul
add
or
inc
gs
jo
outsb
inc
imul
add
arpl
fs
xor
cs
insb
add
or
inc
jb
popa
je
push
outsl
outsl
insb
bound
inc
js
inc
dec
dec
inc
push
dec
xor
cs
insb
pushl
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
add
sub
add
or
add
inc
push
gs
inc
xor
jb
gs
xor
enter
xor
gs
call
inc
and
jge
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
mov
add
add
gs
inc
nop
out
ds
dec
addb
fcoml
push
lcall
int
push
jns
or
das
test
xchg
mov
push
loope
add
ror
nop
addb
inc
ret
dec
pop
lahf
adc
mov
stos
fs
or
push
addr16
insl
add
loopne
insl
mov
sbb
outsb
push
int3
dec
enter
in
mov
jb
js
sahf
pop
add
mov
mov
add
imul
jge
ret
loop
cmp
lar
and
jge
pushf
adc
or
push
cmp
je
ja
pop
frstor
testl
inc
cmp
stos
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
loop
add
mov
out
and
mov
and
rorl
das
push
mov
xor
push
mov
mov
out
into
popf
out
and
mov
dec
sbb
rolb
pop
and
addr16
add
lds
push
lahf
or
decl
lret
fadd
aad
fucomip
push
sbb
adc
pop
out
xchg
nop
outsl
lahf
aaa
into
pop
shll
aaa
sbb
movsb
test
mov
mov
addr16
cmp
mov
shlb
movsb
mov
cmp
cmp
jnp
insb
pusha
lods
in
add
fstpl
or
mov
movsl
pop
cmp
or
and
cmpsb
cltd
jle
cltd
xorl
in
mov
clc
mov
insb
insb
jg
aaa
lret
and
test
daa
stos
dec
mov
sub
fisubrl
xchg
dec
mov
fdivrs
xchg
push
mov
sub
cmp
loope
mulb
mov
out
lahf
adc
sti
je
mov
push
pop
adc
popa
jno
addr16
roll
add
or
and
or
fcmovnbe
sbb
push
in
mov
push
aam
sbb
or
jnp
test
sub
js
add
ss
sbb
ja
jo
sbb
push
hlt
pop
or
mov
inc
mov
sbb
js
leave
cmpsl
cs
into
add
mov
dec
cmpsl
jmp
daa
xchg
mov
mov
or
cli
cwtl
shrb
insb
push
pop
sub
data16
adc
mov
sub
push
jecxz
cmp
movsb
mov
negb
cmpsb
les
pop
lret
dec
inc
and
jecxz
sub
mov
jb
arpl
xchg
add
pop
sbb
sub
adc
pushf
mov
push
out
loope
lea
mul
sbb
dec
imul
adc
sahf
dec
loopne
cmpsb
mov
mov
pop
call
bound
jge
sbb
cld
adc
xchg
js
lcall
jbe
dec
and
jg
movb
sub
dec
out
fs
push
mov
addr16
pop
imul
xchg
popf
dec
xchg
mov
inc
stc
dec
push
loopne
xor
sbb
mov
mov
sbb
adc
inc
test
mov
and
and
xor
ss
cmpsl
mov
add
pop
push
ror
lods
fldcw
popf
movsb
jnp
or
repz
in
dec
ds
add
push
in
lret
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
xlat
add
add
pop
imul
or
mov
jnp
or
lock
mov
pop
ficomps
push
cmp
icebp
sbb
loop
adc
mull
fadd
push
test
cmp
lret
sbb
andl
outsb
mov
push
outsl
pop
mov
jno
outsb
mov
aad
in
pop
xlat
out
cmpsb
lods
mov
bound
or
cmp
sbb
push
pop
loopne
int
sbb
or
test
inc
cmp
mov
subl
cs
mov
sbbb
xchg
adc
pop
sbb
mov
sti
cmpsl
sub
push
lret
xchg
lock
xchg
adc
into
cmp
cmp
das
xor
stc
jb
and
lret
mov
xchg
xchg
seta
add
cmp
or
mov
xchg
cmpsb
std
dec
xor
adc
pop
fiaddl
jp
sub
loope
and
aaa
mov
add
or
call
loope
cmp
out
dec
dec
add
test
enter
adc
sbb
sbb
call
enter
insl
mov
adcl
cmpb
mov
pop
lret
stos
dec
pop
and
mov
fwait
test
fcoms
outsb
pushf
aaa
imul
add
push
fcoms
fwait
dec
add
add
jne
scas
push
outsl
sbb
shlb
pop
ret
or
push
pop
push
addr16
pop
sar
dec
cmpsb
out
xor
lcall
jg
jns
or
enter
stc
xchg
push
or
pusha
or
sub
insb
imul
dec
mov
movsl
or
stos
cwtl
xorl
scas
and
jb
mov
out
push
movsl
or
push
ret
pop
lods
dec
and
dec
lea
adc
pop
in
push
mov
push
pop
int
js
popl
cmp
inc
sub
rcrb
fnsave
lcall
xchg
push
xor
mov
lahf
clc
jg
mov
cmpsl
mov
cmp
cmp
lea
mov
push
lods
fwait
data16
mov
outsl
and
pop
aam
jno
fnsave
add
es
xor
pop
inc
out
mov
jb
mov
pop
or
xchg
push
pop
jg
outsl
dec
dec
jo
push
jno
adc
xlat
jg
stc
imul
and
push
inc
gs
xchg
in
inc
shrl
jbe
sub
stos
pop
jbe
mov
sti
and
fcomip
and
ljmp
mov
jnp
fisubl
jae
sub
or
mov
add
jne
insl
or
imul
push
insl
cmp
hlt
xor
sarb
pop
js
scas
xor
in
or
push
cmp
add
jb
jmp
add
mov
mov
sub
in
jo
ret
and
enter
outsb
adc
loop
in
cmc
lds
ja
pop
dec
shlb
pop
aad
insl
mov
add
inc
xchg
or
and
cmp
je
mov
inc
inc
jbe
test
inc
into
lea
or
jbe
ret
push
adc
ja
cmp
cwtl
sub
push
pop
test
flds
mov
dec
cmpsb
dec
inc
loop
insl
xor
sbb
cmp
imul
xor
cmp
xchg
addr16
xor
pop
jne
xchg
or
lcall
ss
add
push
mov
mov
mov
xor
adc
aad
push
cld
inc
dec
jp
imul
jl
shr
shl
push
imul
jmp
adc
and
fwait
adc
mov
xchg
scas
dec
loopne
iret
jl
ret
xchg
mulb
push
fstpt
pop
xor
mov
cmp
mov
nop
das
push
push
nop
pop
jo
sbb
push
inc
fsubrs
bound
mov
int3
les
lcall
sub
mov
and
xchg
add
stc
js
std
leave
lret
sbb
pop
mov
adc
jecxz
lahf
cmp
mov
ret
ss
xchg
leave
mov
cmp
loop
push
hlt
xor
pop
es
mov
cmpsl
cltd
jge
pop
cmp
dec
adc
xor
mov
pop
push
jae
xlat
ds
insb
mov
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
push
add
add
add
repnz
sbb
cmp
inc
dec
ljmp
xchg
xchg
testb
mov
pop
pop
sub
xor
gs
inc
sub
jecxz
jbe
repz
bound
lret
mov
pop
push
mov
lods
sub
xor
std
lods
push
mov
fs
push
pop
xor
and
and
mov
ljmp
jne
shlb
dec
in
push
lret
das
repnz
clc
mov
push
mov
pop
scas
movsb
ljmp
call
xchg
adc
push
dec
push
xchg
aad
inc
lea
xor
cmp
jg
call
jb
mov
aaa
mov
subl
out
mov
dec
jne
lock
fstpt
mov
rol
and
push
sub
cmc
js
cltd
push
scas
and
outsb
push
lahf
pop
adc
pop
orb
or
fwait
pop
sub
icebp
cmpsb
pop
inc
inc
mov
test
push
cs
xchg
lock
push
push
add
inc
jmp
cmpsb
fldl
push
lret
add
push
jno
mov
mov
cmpsl
adc
ljmp
and
cli
cmpl
filds
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
dec
push
add
mov
andl
pushf
cmp
dec
popf
lret
or
imul
pop
inc
lret
inc
and
in
jne
push
xor
call
pop
push
jmp
adc
pop
js
mov
daa
xchg
cmc
aaa
mov
xchg
dec
jge
add
mov
push
xor
fsubrp
pop
fnstsw
and
mov
jno
lret
je
popf
aaa
and
insl
cmp
clc
out
jmp
ljmp
adc
mov
pop
jnp
or
imul
xchg
xchg
call
sub
aaa
cmp
into
aad
std
jmp
cs
and
fwait
pusha
push
dec
sbb
lahf
mov
inc
in
xchg
xchg
pushf
push
mov
jecxz
bound
inc
push
fdivrp
in
push
sbb
jb
sub
mov
or
add
sti
mull
push
cmpb
loopne
dec
imul
pop
scas
scas
ret
popa
dec
fmull
and
les
decb
ror
fisttps
add
and
push
stos
jb
cltd
fnstsw
fisttpll
pushf
leave
pop
and
fs
cmpsl
add
popf
lret
push
sarl
ljmp
mov
xchg
test
and
outsb
test
and
mov
pusha
ss
push
rorb
sbb
push
mov
pop
mov
ljmp
xor
addr16
push
inc
add
jo
scas
dec
jl
sbb
bound
mov
popf
push
out
ss
mov
add
push
sbb
sub
stos
dec
aaa
cld
mov
adc
idiv
outsb
int
pop
cs
add
std
xchg
es
mov
int
cmp
lret
loopnew
mov
aas
std
xchg
sbb
lcall
mov
mov
mov
loopne
lods
hlt
nop
cmp
sbb
loope
sbb
stos
adc
sub
ret
mov
outsb
cmpb
movsl
test
cmp
nop
gs
fisubs
inc
popf
add
or
mov
sub
pop
mov
push
mov
adc
pop
stos
loopne
repnz
test
pop
out
fimuls
xchg
mov
stos
and
or
call
mov
not
movsb
adc
in
popa
mov
xlat
adc
in
je
cli
jno
in
and
mov
xlat
xchg
je
inc
sub
push
insb
std
xor
mov
enter
out
lret
jl
sbb
je
mov
ret
daa
cmp
fdivrs
xor
sub
push
add
mov
enter
cmp
cmp
out
pop
mov
stos
mov
inc
jbe
sub
mov
popf
mov
and
jbe
dec
ds
lea
int3
mov
jle
and
xor
fistl
jmp
std
mov
or
sbb
fcmovnu
nop
cmc
imul
sub
cltd
fsub
mov
int3
sti
and
clc
cli
leave
cmp
push
hlt
out
mov
cwtl
fsubl
add
les
xchg
data16
pop
xchg
push
out
inc
xchg
lds
or
xor
imul
shl
mov
sbb
daa
fisubs
out
in
jl
rcrb
insb
pop
out
scas
inc
rcrb
xchg
fcomps
in
ret
mov
xor
dec
xchg
mov
cmp
insb
push
inc
xor
adc
mov
jl
sbb
out
adc
push
cmp
mov
jbe
insl
ror
daa
adc
loopne
sbb
std
sub
movsb
lods
std
shrb
pop
dec
mov
hlt
push
std
test
in
aas
cmp
iret
adc
and
push
cmpsb
loope
xor
outsl
lret
dec
mov
xchg
aaa
jno
nop
or
add
dec
mov
cmp
sub
into
sub
jg
jecxz
mov
push
dec
pop
movsb
icebp
sub
inc
nop
jne
sub
or
jle
mov
push
mov
add
dec
testl
xor
adc
sub
shlb
iret
mov
pop
fs
imul
icebp
pop
add
es
and
les
push
or
cld
rolb
cmc
nop
push
xor
xchg
inc
jnp
sub
jl
jno
cmp
add
jns
mov
dec
fwait
pusha
mov
mov
add
enter
jnp
movsb
ds
rolb
jo
mov
jg
cmpsl
xchg
ret
xchg
inc
mov
pop
ret
add
adc
dec
mov
pop
sbb
call
xor
xchg
test
lock
ljmp
addb
movsl
jecxz
shll
sub
and
stos
stos
pop
push
inc
lcall
call
lock
sti
sbb
jne
je
jo
add
test
sbb
test
cmc
xchg
push
xor
add
lock
pop
and
inc
jb
dec
cmc
pop
cmp
jge
inc
jge
out
idivl
imul
and
mov
jno
jb
pop
cmpsb
stos
lahf
mov
jnp
add
test
dec
dec
lods
jp
pop
aaa
cmp
or
popa
out
push
mov
fcoml
pop
add
push
inc
sbb
mov
mov
ficoms
mov
or
stc
test
xor
lea
data16
leave
dec
js
test
movl
xor
and
dec
xorl
fs
js
and
push
arpl
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
add
add
add
add
fldenv
fwait
cmp
adcw
mov
xchg
dec
push
xchg
pop
int
test
test
outsb
lea
mov
dec
pop
and
sarl
movups
ds
loop
aaa
filds
dec
rclb
xchg
pop
pop
test
lods
iret
cmp
push
inc
daa
sbb
sub
clc
loope
into
mov
pop
stos
mov
fs
jg
mov
dec
arpl
and
mov
clc
mov
mov
fldl
push
jle
testb
mov
lcall
mov
pop
mov
jns
mov
jae
or
mov
pop
nop
jecxz
fs
std
lret
roll
mov
imul
adc
in
ss
fwait
and
addr16
popa
rcr
and
sbb
into
es
adc
xchg
mov
inc
sahf
and
pop
adc
lret
int
lcall
push
adc
imul
mov
push
mov
stos
sub
adc
lahf
jns
mov
mov
test
sbb
pop
fbstp
and
aaa
lock
push
aas
inc
aam
ljmp
inc
push
out
fucomip
mov
push
xchg
pusha
rclb
add
or
cltd
adc
mov
cmp
adc
xchg
adc
mov
fldl
lds
sbb
mov
and
xor
pop
adc
scas
jns
iret
int
inc
imul
addl
fildl
push
lret
or
ja
mov
lret
mov
pop
data16
sub
popa
or
pop
push
or
jb
sbb
scas
and
mov
testl
icebp
jp
inc
cwtl
mov
push
jns
jnp
scas
pushf
dec
inc
icebp
cmpsb
push
adc
cmp
cli
insl
xchg
jl
lds
and
lods
out
cld
push
fisttpll
sahf
add
fldcw
out
ljmp
in
sbb
test
mov
dec
test
mov
or
jo
mov
sub
lods
dec
push
daa
clc
pop
mov
xlat
ss
and
fimuls
xor
cmp
stos
push
lret
xor
add
lock
loopne
cmp
sub
lret
fbld
cmpsb
cmp
dec
sbb
pop
mov
mov
add
push
int3
stc
imul
ret
push
jp
push
jnp
pop
jle
xchg
add
inc
adc
cmpsb
je
fcomp
stos
hlt
add
push
cmpsb
dec
xchg
pop
es
xchg
test
testb
jl
out
adc
test
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
ljmp
add
jge
lret
les
mov
lock
adc
and
out
movb
pop
mov
loop
inc
or
lods
in
or
fstps
stc
jnp
mov
inc
sti
loope
mov
insb
cpuid
sub
inc
cmpsl
imul
fistpll
pop
lds
sub
jle
pop
xor
dec
test
inc
jp
xlat
mov
test
sbb
jo
je
sarl
cmp
int3
ret
shrb
jns
and
scas
cmp
loope
ret
push
lea
push
add
fldcw
mov
sbb
dec
dec
addr16
xchg
lods
test
aaa
int3
enter
fucompp
inc
movsb
jl
adc
mov
mov
cmp
pushf
sbb
sbb
popa
lods
xor
dec
call
adc
pop
sbb
jo
je
shll
jae
and
pop
and
push
leave
das
or
or
mov
mov
xchg
xor
lret
lods
sub
in
addb
xor
insl
ja
adc
xor
sbb
test
push
sub
adc
rcrb
xor
cmpsb
jb
jb
popf
push
and
mov
xchg
lea
sbb
shlb
jae
hlt
mov
adcl
push
jl
sbb
mov
cmp
mov
mov
jae
inc
out
xor
cmpb
xor
pop
test
sub
lahf
sbb
sub
jge
mov
sbb
adc
inc
jns
out
and
xchg
mov
jbe
mov
cwtl
mov
fsubp
mov
scas
dec
cld
jl
mov
jb
addl
xchg
or
scas
adc
jle
xchg
sahf
mov
repnz
pushf
inc
push
jge
jp
push
adc
cmpsb
jae
jmp
addr16
jl
xchg
and
pusha
adc
cwtl
mov
popa
cmp
push
jo
outsb
addb
ja
mov
sbb
loope
movsl
pop
pushf
pop
pop
rcrl
pop
jecxz
popf
sub
sti
pusha
xchg
push
push
in
xor
lret
test
push
xor
lds
ja
sbb
jno
jecxz
lahf
sbb
xchg
mov
mov
mov
pusha
cmpsb
sbb
jmp
aad
mov
sub
push
push
add
cmp
push
xchg
lds
stc
adc
aam
arpl
notl
push
in
js
test
popf
clc
ljmp
mov
inc
xor
xchg
rol
push
aaa
lds
je
ljmp
inc
xor
nop
sbb
jbe
mov
dec
jbe
pushf
bound
jno
iret
adc
test
gs
pop
std
outsl
jp
jno
or
hlt
cli
add
sbb
test
adc
fildl
pop
mov
pop
scas
lock
daa
xchg
mov
ds
sub
mov
rcll
sbb
push
inc
loope
or
std
mov
add
pop
outsl
cmpl
out
mov
mov
and
test
ss
add
scas
push
lea
cld
bound
mov
jo
jg
mov
in
or
mov
or
dec
xchg
popf
xchg
adc
subl
repz
jge
and
add
loope
inc
or
rcrb
xchg
lahf
xchg
arpl
cmp
stc
sbb
sub
popa
or
push
jmp
loop
add
jmp
insl
jb
mov
mov
test
cmpsl
mov
ja
add
pop
inc
or
notl
in
jecxz
sbb
repz
cmp
ret
fistps
clc
aad
cltd
lea
push
ja
imulb
roll
jg
aam
ljmp
jge
mov
scas
lods
inc
push
test
xchg
sbb
fldenv
pop
sub
sti
cmc
inc
lret
shrb
inc
outsb
addr16
sub
jecxz
sbb
adc
stos
sbb
pop
call
ds
lcall
cmp
out
cmp
jmp
xchg
das
adc
pop
pushf
add
fnstsw
pop
push
mov
cmc
out
into
dec
lret
xor
cmpsb
popa
xchg
test
stc
imul
push
push
adc
fsubl
xchg
sbb
mov
loope
aas
and
les
inc
mov
fs
jne
push
jmp
xor
xchg
les
sbb
out
dec
jmp
adc
add
inc
lcall
shlb
adc
jmp
inc
sbb
inc
adc
xor
outsb
movsl
fwait
sbb
lcall
out
xchg
or
fisttps
data16
mov
in
sar
int
mov
push
movsl
cmp
arpl
jbe
cmpsl
dec
dec
bound
out
or
pushf
mov
out
jle
ljmp
or
xchg
cmp
jecxz
cli
jl
pop
xor
fiaddl
jnp
sub
inc
lea
push
sbb
call
push
and
pop
and
pop
insb
pop
mov
cmp
adc
adc
cwtl
xor
dec
adc
pop
mov
and
cld
addr16
and
cmp
loopne
aam
iret
rcrl
add
popl
jnp
je
loope
incb
jne
in
pop
mov
xlat
push
insl
xor
pop
cmpsb
mov
subl
imul
and
sti
scas
hlt
sbb
jno
sbb
stc
lods
jno
mov
stos
or
aam
fs
jp
cmp
and
idivl
jp
lods
jmp
mov
flds
cmp
in
cmp
and
jb
adc
adc
jnp
subb
adc
cli
push
adcb
in
ficoms
or
and
mov
cld
jae
rclb
pop
lcall
and
out
or
adc
or
jb
mov
int
or
enter
mov
popa
ret
mov
in
stc
push
fs
rorb
inc
enter
leave
js
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
add
add
leave
dec
es
ret
adc
fdiv
add
idivl
inc
sti
dec
lea
pop
int3
and
xchg
nop
cwtl
jns
jecxz
xor
stos
push
inc
or
xlat
xor
adc
add
insb
xor
lock
gs
movsl
jecxz
fldenv
cltd
andl
pop
mov
and
inc
xor
nop
rcrl
mov
inc
cwtl
pop
sub
push
sbb
mov
dec
jle
pop
lea
sub
dec
pop
mulb
mov
or
fisttpl
lahf
push
insb
outsb
sbb
stos
pusha
scas
mov
stos
cmp
mov
pushf
dec
xchg
xchg
cmp
nop
addl
lcall
add
jb
sbb
fnstsw
xor
cmp
das
adc
cmc
and
pop
xor
into
test
cwtl
mov
leave
lret
cwtl
inc
jg
xchg
or
hlt
mov
sbb
and
lret
xor
jmp
in
mov
jle
and
push
das
xchg
sahf
out
mov
and
gs
or
in
popa
shl
dec
sbb
je
mov
or
pop
stos
mov
mov
or
hlt
cmp
push
push
jnp
je
xor
push
mov
inc
imul
adc
lock
inc
popa
jecxz
cmp
or
jnp
scas
xchg
jl
mov
mov
adcb
add
leave
mov
xor
mov
leave
and
idivl
leave
xchg
stos
xchg
adc
pop
flds
mov
sbb
sub
jge
xlat
lea
mov
pop
mov
push
test
sub
clc
addr16
clc
pop
lret
outsb
rolb
jno
data16
xor
clc
repz
jge
jb
cmp
add
es
sub
or
in
leave
add
dec
sbb
pop
add
or
lds
flds
insb
dec
jo
aam
push
shlb
ljmp
pop
push
sub
out
xor
loope
jle
cs
jno
popa
mov
inc
sbbl
xchg
adc
pop
xlat
add
lods
inc
mov
dec
notb
jmp
int3
push
js
dec
push
mov
arpl
stc
lret
pop
clc
les
in
js
sbb
mov
cmp
mov
ss
push
pusha
faddl
sahf
xor
dec
call
daa
in
shlb
sub
xor
dec
or
insb
ds
or
loop
sub
dec
repnz
fiaddl
mov
js
lods
cmp
cmp
jecxz
mov
aam
leave
add
sbb
mov
pop
cmp
mov
mov
push
pop
insl
std
mov
dec
nop
idivb
stos
std
js
addr16
ljmp
loope
sub
add
lcall
mov
add
std
ljmp
adc
sbb
xchg
orb
sub
pop
mov
enter
mov
mov
adc
insl
shl
movsb
pop
fcom
ja
cvtpi2ps
sahf
mov
inc
mov
push
std
inc
jle
mov
loope
pop
ficoms
in
and
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
faddl
add
cmc
add
add
pop
pop
lcall
imul
sub
stos
outsl
test
movsl
xorl
mov
out
or
data16
xchg
adc
outsl
clc
sub
push
sbb
test
push
dec
push
sub
neg
mov
xor
cli
je
ljmp
xlat
fdivrs
jge
cld
aad
pop
xchg
mov
iret
mov
push
pop
out
repz
stc
jg
xchg
push
push
roll
cmc
xor
jnp
sub
lods
loop
inc
cmp
outsb
xchg
addr16
pop
iret
test
adcb
pcmpgtw
or
lret
jmp
out
aas
enter
mov
aaa
les
int
out
es
jnp
dec
lock
mov
adc
rorl
sbb
cmc
test
dec
ffreep
fidivl
decb
xchg
movsb
and
xchg
fldcw
rorb
and
adc
in
cmp
out
neg
out
push
add
jns
dec
cld
cmp
pop
mov
cmp
xor
pop
cmp
les
jp
pop
fadds
add
out
sub
lcall
gs
inc
xchg
pop
pop
jno
aas
scas
push
clc
movsb
and
in
roll
pop
push
ret
loope
iret
mov
jnp
mov
pop
jae
add
xor
lcall
add
and
leave
sbb
cltd
test
fistpl
xor
sub
addr16
push
inc
mov
dec
daa
dec
nop
push
mov
or
out
test
xchg
sbb
call
int3
lret
hlt
push
shll
insl
addl
sbb
dec
fnstcw
mov
iret
aaa
call
sbb
loopne
inc
xchg
adc
frstor
cmpsl
outsb
pop
scas
ucomiss
mov
clc
loopne
mov
fnstsw
or
cli
icebp
mov
es
mov
or
adc
nop
cmp
inc
sub
daa
and
inc
daa
xchg
dec
hlt
int
jge
and
ret
jmp
adc
sahf
or
dec
mov
dec
adc
lods
cmpsb
xor
dec
idivl
cmp
xor
nop
dec
xchg
in
sbb
test
dec
jmp
and
xchg
xchg
rorb
clc
cmpb
lcall
pop
jae
fcoml
jae
jae
das
ss
out
and
mov
vunpckhps
cmpl
cli
jno
sub
pop
fnstsw
mov
sarb
movsb
gs
pop
mov
popa
rolb
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
mov
add
dec
or
add
xor
xor
lods
cwtl
lret
and
mov
mov
pop
mov
sahf
test
push
xchg
dec
sbb
or
mov
cmp
inc
dec
dec
sbb
outsl
fs
jl
hlt
mov
ljmp
pop
scas
ret
fwait
pop
aam
in
test
mov
cwtl
fbld
aad
mov
jo
ljmp
and
inc
bound
jl
push
out
jne
int3
fs
mov
and
repnz
js
cmp
push
mov
sbb
hlt
dec
pop
rorl
repnz
mov
into
push
sbb
xchg
sub
out
das
dec
cli
jmp
rclb
loope
cs
xorl
cmp
mov
iret
lock
sub
xor
add
push
mov
ret
movsl
nop
xor
adc
or
dec
jns
ljmp
jns
test
pop
add
rclb
repz
mov
loop
out
ja
pop
mov
aas
loope
mov
jne
pushf
lret
ret
xor
sub
jmp
jecxz
leave
jmp
jg
leave
dec
jae
and
es
mov
sub
out
shr
call
das
dec
loope
pop
ret
mov
fs
adc
jge
mov
es
in
cmp
add
ss
testb
movsl
or
fidivrs
push
jle
mov
and
in
xchg
push
pop
push
jmp
into
dec
mov
jbe
fistpl
mov
cmp
push
sub
roll
xlat
pop
jbe
sub
xchg
or
repnz
xchg
mov
xor
or
jmp
dec
dec
fs
fldt
mov
inc
sbb
push
mov
repz
ljmp
imul
mov
je
mov
dec
stos
mov
lods
mov
das
in
add
cmp
add
dec
jo
loopne
add
inc
js
loopne
cld
cmc
iret
call
dec
sbb
addr16
sbb
cmp
push
or
mov
push
dec
sub
adc
push
sahf
sbb
pop
les
bound
push
lret
inc
and
lods
mov
roll
mov
jae
pop
xor
dec
sbb
hlt
sahf
push
push
jmp
or
push
inc
fistpll
not
xchg
adc
mov
xchg
aaa
xchg
je
adc
xlat
inc
mov
mov
xchg
das
push
out
xchg
mov
cmp
sub
pop
jl
xlat
jb
pop
ret
and
insl
lods
add
shl
test
mov
add
push
sarb
fs
and
xchg
imull
mov
mov
cmp
jmp
xor
js
mov
cld
cli
jne
sub
dec
roll
aad
push
xlat
clc
adc
xchg
lahf
fmuls
popa
movsl
mov
pop
dec
loop
lods
jo
xor
xor
sbb
imul
xchg
test
int
mov
xor
ret
lods
iret
imul
je
adc
xchg
sbb
test
test
sub
xor
bound
in
sub
mov
sbb
jbe
stos
xchg
sbb
cmp
xchg
outsl
xchg
jl
xor
mov
int3
subl
je
jle
lods
stos
out
mov
jmp
or
cmpl
hlt
cmp
xchg
fmuls
orb
sbb
sub
mov
xchg
movsb
icebp
ret
dec
jle
cmp
fcmovnb
mov
fidivrs
xchg
aad
xchg
lods
xor
push
mov
es
jbe
outsl
pop
lds
in
int3
repnz
add
dec
and
loop
add
mov
stos
lods
pop
jb
and
popf
cmp
test
sub
adc
jl
pop
mov
dec
jbe
mov
pop
push
sub
xor
insb
xor
mov
xor
fisubrl
stc
jp
faddl
inc
adc
int
sarb
cwtl
or
stos
ljmp
xor
scas
xor
adc
dec
lds
sub
fnstcw
lock
jne
std
mov
movsl
mov
dec
push
sti
arpl
sub
push
loope
or
mov
mov
mov
out
lods
pop
aad
mov
jnp
mov
inc
cs
mov
pop
jle
int3
sub
jae
pop
mov
shrl
in
mov
mov
adc
in
jmp
or
daa
test
movsb
movsb
jo
dec
dec
xchg
inc
push
xchg
xchg
lea
add
rol
push
adc
and
in
sahf
nop
xor
sahf
cli
call
fisttpll
movsb
dec
es
add
sub
xor
mov
inc
sbb
or
sub
aam
mov
in
mov
jnp
popf
aaa
push
aas
mov
arpl
xor
ret
add
xor
adc
adc
movl
mov
sti
pop
enter
and
pop
jl
ljmp
test
or
adc
jmp
jecxz
aas
int3
sbb
addl
xorl
dec
sbb
jge
pop
mov
xchg
and
das
in
repz
lock
aaa
inc
xor
mov
in
ss
push
aad
mov
jno
sub
fcmove
inc
and
xchg
popf
push
aad
enter
addr16
lds
sbb
dec
cmp
gs
jno
inc
nop
or
or
fnstcw
out
dec
xchg
imul
pop
int3
shlb
adc
pop
dec
in
pop
xchg
and
scas
icebp
add
xor
insb
pushl
pop
or
in
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
aas
pop
add
loope
add
jg
cmpl
jecxz
aad
fwait
inc
mov
aad
lea
mov
jbe
ljmp
arpl
int3
xlat
pushf
fs
insb
xchg
loopne
pop
and
lock
mov
outsl
dec
repnz
sbb
dec
inc
lods
out
jecxz
flds
mov
jp
adc
jp
popa
adc
sub
pop
jp
cmp
stos
add
dec
push
mov
pop
imul
pop
xchg
add
addr16
popf
sub
int
dec
push
bound
xchg
cld
lds
test
mov
pusha
sub
and
inc
jg
inc
imul
in
outsb
sub
es
xor
xchg
daa
dec
pop
sbb
stos
inc
enter
les
sbb
in
pop
cmp
push
push
and
lods
int3
mov
mov
mov
fcomp
push
dec
jecxz
cmp
dec
xor
mov
push
mov
movsb
je
loop
popf
sub
sub
mov
mov
fnstcw
cmp
repnz
repnz
dec
cld
cwtl
daa
imul
lahf
imul
int
lods
inc
jg
int3
repnz
lcall
sahf
movsl
mov
rorb
or
bound
and
xchg
es
aad
movsb
shlb
mov
popa
xor
inc
lock
jo
fsqrt
push
push
adc
ljmp
push
and
sub
dec
dec
and
movsl
pop
in
jnp
jne
xor
test
lahf
sub
call
mov
jp
push
or
stos
test
andnps
xchg
sub
clc
mov
in
and
cwtl
and
sbb
lods
rcrb
sbb
and
cmp
mov
iret
out
flds
pop
sbb
out
out
call
lahf
aad
xor
cmc
icebp
jae
rol
mov
pop
mov
xor
nop
mov
push
push
adc
aas
lock
scas
xor
xchg
mov
test
cmp
jg
pushf
add
mov
les
test
test
scas
xor
dec
inc
cs
push
shll
sub
xchg
dec
mov
push
cltd
lcall
mov
or
push
mov
fcomps
fbld
xor
loop
dec
out
fucom
and
sub
and
sub
pop
pop
push
jecxz
es
cs
out
insl
dec
into
loope
ds
lock
cmpsb
das
sub
inc
fwait
xorb
pusha
inc
cltd
fxch
test
cmp
mov
stos
roll
xorl
jae
les
or
sub
sar
jns
sbb
jo
cltd
jge
aas
pop
pushf
rol
sar
mov
arpl
icebp
cmpsb
loopne
dec
in
insl
test
shll
leave
mov
mov
sbb
xchg
lea
xor
xor
icebp
inc
jbe
pop
push
bound
pop
pushf
pop
in
mov
in
dec
xor
xor
fbld
test
mov
sbb
ss
shl
lret
pop
pop
loopne
lahf
sub
and
bound
adc
sub
xchg
out
faddl
das
rclb
mov
push
ljmp
mov
mov
data16
or
test
xchg
movsl
mov
cmc
js
test
fwait
dec
daa
lahf
mov
cmpsl
test
pop
sbb
shr
fdivs
adc
lahf
fsub
adc
mov
sub
das
daa
cmp
cmpsl
lods
xlat
or
or
push
inc
mov
test
cmp
pop
jecxz
push
mov
sti
lods
inc
cmpsb
jae
cmp
js
fcmovnb
sbb
fs
sbb
xchg
inc
scas
and
mov
out
sbb
in
test
push
xor
push
lods
dec
data16
loope
mov
mov
xlat
lahf
and
shlb
aaa
push
and
dec
xchg
negb
xchg
pop
addr16
repz
cltd
dec
ljmp
push
add
mov
comiss
jb
xor
pusha
cmc
xchg
jne
lods
inc
pop
add
aad
in
sbb
lods
mov
dec
dec
insb
std
mov
mov
pop
jmp
sar
mov
jg
add
jl
dec
xor
out
mov
loop
inc
int3
push
aam
std
arpl
or
push
lea
ret
ret
test
mov
in
call
adc
jo
outsl
loopne
jb
sbb
sub
xor
lcall
sbb
aam
xchg
jecxz
lds
jno
xchg
jae
jae
adc
jle
cmp
xchg
mov
mov
sti
dec
int3
adcl
cli
cmp
sahf
call
push
dec
sbb
jnp
int
dec
xchg
push
dec
xchg
sahf
pop
jae
sub
pushl
dec
outsl
adc
mov
iret
pop
and
jmp
mov
lret
outsl
inc
ret
loopne
rol
imul
sbb
aam
pop
add
adc
mov
push
xchg
and
pop
jbe
sub
nop
mov
out
push
cmpsl
leave
out
sbb
cld
jb
cli
xchg
adc
lods
popa
sub
pop
and
and
call
imul
loopne
in
jb
jnp
dec
lret
push
std
lcall
outsb
clc
mov
push
int3
stos
add
in
ja
cs
add
or
or
addr16
or
ss
xor
lret
test
push
rclb
cwtl
jge
and
gs
mov
psrlw
or
outsl
pop
xor
sub
push
out
repnz
out
mov
fstl
push
leave
add
push
aas
imul
add
je
sbb
sbb
jae
into
mov
pop
fs
push
mov
mov
das
mov
cmpsl
repnz
jnp
clc
cmp
fbstp
push
sbb
std
cli
cmp
insl
inc
sarl
and
test
sbb
pop
mov
pop
aaa
ss
test
ret
rclb
jnp
jbe
cmp
mov
adc
add
mov
push
ficomps
bound
or
es
inc
and
aas
xchg
popa
dec
xor
or
iret
and
lods
add
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
add
add
push
idivl
imul
lret
sarb
inc
ja
fdivrs
mov
adc
into
push
jp
inc
lret
loopne
test
and
ss
test
fwait
subb
or
dec
das
sbb
cmp
popa
mov
pop
push
pop
sub
or
jae
xor
mov
pop
out
loope
xor
jno
xchg
out
jbe
mov
pop
aas
sub
ret
scas
jg
addr16
pop
xchg
bound
hlt
es
es
in
lahf
xor
dec
out
lret
adc
jmp
incl
sub
jge
cmp
and
ja
out
sbb
inc
lock
hlt
cmp
sahf
adc
pop
jmp
push
jmp
dec
fwait
push
sbb
and
or
add
jae
aam
out
or
pop
pop
jo
cmp
jle
dec
mov
pusha
pop
pop
sbb
into
das
or
out
mov
addl
jbe
hlt
inc
jns
sub
bound
sarb
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
push
add
add
push
add
xor
loop
mov
cld
mov
push
or
lret
add
adc
mov
aam
pop
rcrl
inc
ja
pop
cmp
pop
xchg
cmp
push
mov
pop
mov
fwait
fs
sbb
push
cmp
cwtl
or
or
cli
xchg
or
jae
jl
inc
test
mov
mov
cmpsb
and
int
add
fisubrs
adc
rcrl
ss
sarl
or
and
cmp
lock
lret
call
rcl
fsts
xor
mov
out
dec
in
jb
in
mov
cmp
and
sub
mov
ficompl
pop
jne
cmpsb
mov
adc
dec
arpl
enter
pop
xor
dec
pop
loop
lret
mov
sbb
push
dec
das
pop
hlt
inc
cmpsl
les
cmp
shr
jo
jp
sbb
sbb
outsl
pusha
push
std
sahf
mov
xor
xor
pop
aam
jl
gs
push
lahf
dec
cmpsl
or
jle
cmpsb
test
mov
xchg
add
mov
pop
fwait
lcall
lret
idiv
push
or
cli
and
icebp
ret
push
adc
inc
imul
shlb
add
xchg
test
jbe
test
xchg
loope
jbe
mov
add
cmp
loope
and
inc
imul
into
xlat
sub
push
bound
mov
or
ret
dec
mov
and
aas
aas
cmp
xchg
jp
cs
add
cmpsl
jecxz
lahf
push
lock
insb
pop
fs
jl
in
adc
js
and
int
stos
mov
iret
and
adc
xchg
out
dec
int3
mov
sub
xchg
leave
clc
js
gs
jbe
sbb
mov
cmpsl
dec
pop
sarl
mov
mov
sbb
adc
in
jle
aaa
cltd
and
xor
sar
and
jne
inc
mov
fstpl
aaa
jne
inc
in
test
call
jp
push
loope
mov
and
outsl
aaa
mov
sbb
mov
pushf
inc
push
mull
push
leave
aas
ret
push
test
dec
out
jbe
add
jg
pushfw
xchg
mov
andl
jecxz
adc
pushf
mov
pop
xchg
in
cmp
rcrl
and
lret
aad
addr16
hlt
xchg
sub
sbb
out
jns
dec
sarl
or
hlt
jae
xlat
push
adc
xor
sub
cmp
pop
pusha
aaa
cmp
movsl
dec
push
lahf
or
cmp
jp
test
out
cmpl
xor
or
scas
sbb
and
out
stc
inc
and
jne
dec
sub
cs
add
pusha
cmp
lock
sahf
nop
lods
xor
push
ret
cmc
sahf
aas
subl
stos
xor
stc
out
inc
jg
add
inc
enter
hlt
pusha
jecxz
jns
ss
inc
cld
jp
xor
aad
cwtl
les
fcom
imul
cmp
or
clc
jmp
iret
mov
jnp
push
push
jno
or
pusha
dec
add
test
std
mov
push
stos
addl
iret
ret
outsb
movsb
stc
push
pop
mov
cmc
mov
ds
jo
push
sbb
cmc
scas
sub
sub
sar
jmp
ret
stc
mov
push
int
pop
out
jbe
mov
xchg
sub
ret
sub
repnz
xchg
mov
xchg
or
or
addb
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
add
add
divl
xor
in
sbb
push
push
xor
aad
xor
pop
mov
cmp
sub
scas
pop
sar
mov
repz
sarb
cs
xor
scas
in
mov
jns
lret
adc
mov
popa
pusha
xor
add
push
jp
and
adc
mov
fnstsw
iret
push
test
pop
js
enter
jp
push
jo
loope
pop
out
sahf
fdiv
pop
dec
dec
std
xor
std
daa
dec
mov
adc
sbb
add
cmp
pop
popa
fwait
push
push
popf
jle
jne
push
jbe
mov
jno
fst
clc
xor
int
in
fmuls
lea
fstpt
fmull
sbb
and
jno
add
in
push
mov
pusha
jg
jmp
lods
hlt
xor
mov
sub
cmpsb
sbb
in
adc
decb
sub
mov
sub
scas
pop
sub
sbb
lock
mov
es
and
push
std
cmpsb
scas
adc
or
addb
fisttpll
pusha
mov
inc
pop
inc
pushf
jnp
fildl
aaa
ret
mov
mov
int
dec
pop
pop
sub
cli
loopne
lds
cmp
std
lds
cmp
sub
les
stos
dec
mov
shll
outsb
insb
popf
mov
mov
inc
inc
pusha
imulb
jnp
mov
push
push
lret
stos
lret
movsl
inc
or
push
aam
mov
andl
and
pop
xor
out
bound
dec
stos
test
inc
xchg
xor
cmp
test
cld
dec
lds
cmpsl
jns
inc
dec
xchg
mov
bound
cltd
ja
jg
xor
loopne
jno
fs
and
pusha
fildll
pusha
stos
aaa
push
sbb
mov
mov
testb
icebp
add
fdivl
cmp
mov
fwait
test
sbb
pop
in
fcmovnbe
aad
jbe
pop
mov
rclb
mov
xor
pushf
cmp
test
stc
imul
enter
or
lock
xchg
in
xlat
mov
es
fstpl
xchg
jns
ja
loopne
sbb
aaa
clc
arpl
add
outsl
aaa
mov
add
lcall
in
xchg
push
and
jge
push
out
fiadds
mov
aas
and
int
jo
addr16
sub
ret
fcmovb
mov
lea
cmc
pusha
and
and
sub
cmpsl
cmp
adc
add
push
sti
jne
sbb
push
insl
mov
imul
xor
mov
sub
adc
cs
pop
push
xchg
fwait
imul
mov
orl
dec
pop
lock
push
ja
xchg
out
and
sub
inc
push
aaa
icebp
inc
popf
mov
scas
fistl
pop
or
scas
fsubs
and
dec
pop
mov
adc
pop
cmc
jb
imul
sbb
dec
xor
rolb
or
cmc
mov
clc
mov
pop
inc
outsb
sbb
and
mov
nop
das
add
xchg
jo
pop
je
and
adc
cld
mov
mov
cmp
xchg
mov
sbb
repz
fists
jecxz
adc
aam
cmpsl
out
subl
push
in
xor
xchg
sub
ja
push
stos
int3
mov
xlat
push
xor
imul
repnz
mov
dec
mov
and
inc
xor
fisubs
sbb
cmpsb
ljmp
sub
iret
hlt
lods
stc
add
lret
daa
cmpl
lods
pop
xchg
in
repz
test
jns
adc
fstl
nop
and
mov
stc
inc
fnstenv
in
fnstenv
push
lcall
lret
add
stc
push
aam
dec
rcrl
rorb
sti
outsb
mov
jg
jbe
mov
and
fdivl
inc
push
cmp
jmp
nop
lds
das
mov
test
xchg
es
xor
jo
xchg
imul
xchg
cmp
add
fs
aad
jae
jae
jo
xchg
sub
jmp
dec
or
add
inc
clc
movsl
push
inc
sub
sub
xchg
sbb
das
out
dec
call
fxch
push
out
pop
leave
inc
pop
xor
xor
gs
sbb
push
lret
andb
aaa
inc
rorl
dec
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
add
add
shrb
insb
dec
mov
lahf
sbb
jno
and
clc
xor
stos
add
jbe
pop
inc
ret
mov
vmovaps
push
test
dec
push
push
mov
fimuls
test
lahf
addb
pop
mulb
fdivrl
subb
lock
pusha
orl
loop
les
mov
stos
mov
inc
pop
gs
inc
push
xchg
jle
sub
pop
mov
test
inc
faddl
dec
mov
out
inc
out
xchg
lods
and
sbb
mov
jo,pt
sbb
sub
aas
add
mov
push
cmpsl
ja
je
pop
popa
arpl
push
xchg
addr16
add
jae
adc
or
mov
push
subb
sbb
scas
mov
and
xchg
mov
sub
dec
fidivs
sarb
ret
aaa
jp
jnp
mov
sbb
xchg
lock
jle
sub
dec
test
pop
cmp
imul
mov
das
cmpsb
es
lock
shr
ss
push
dec
or
push
push
mov
in
popa
loop
adc
xchg
or
cld
add
mov
addb
xchg
sbb
pop
jp
jns
cmp
sbb
fstpl
add
adc
jae
jae
and
pop
call
sbb
xchg
lea
cmp
arpl
xchg
pushf
sbb
xlat
inc
mov
mov
inc
cmpb
pusha
ds
inc
jp
push
jge
movsl
jmp
mov
cmp
out
jle
jns
insl
mov
or
xchg
dec
movsl
cmc
fmull
jge
pop
sarl
sub
fisttpl
loope
jb
xor
dec
pop
sbb
xor
pop
cwtl
sbb
and
mov
and
push
lock
jbe
in
loope
psubq
adc
loope
loop
push
fdiv
adc
sub
jo
or
sbb
popl
fsubrp
inc
adc
imul
hlt
mov
repz
inc
xchg
sti
inc
push
dec
mov
push
subl
jg
inc
data16
jmp
outsl
iret
mov
bound
aas
xor
xchg
adc
outsl
insb
mov
xor
mov
sbb
or
add
jg
adc
addr16
outsb
aad
addr16
and
xor
in
test
es
inc
xor
lret
rorl
les
jge
gs
int3
in
jno
push
dec
dec
pop
add
lds
gs
cmpsb
es
loop
cmp
fsubr
dec
add
pop
push
pop
sub
inc
mov
mov
fisubs
sbbb
cmp
cmp
aad
xchg
out
sbb
imul
inc
out
add
and
push
int3
xlat
pop
push
stos
jmp
xchg
wrmsr
lods
jecxz
inc
xchg
mov
mov
mov
adc
push
jl
enter
or
sbb
movsl
cmc
and
test
jp
std
push
sbb
add
dec
insl
clc
cwtl
jns
xor
dec
or
xor
out
enter
imul
mov
dec
lea
js
xchg
pop
mov
sahf
mov
mov
dec
lds
cmp
adc
mov
jecxz
fwait
sub
jg
lods
inc
enter
out
loopne
sub
and
sarl
dec
pop
ja
int
dec
int3
bsr
mov
sbb
mov
into
js
and
insl
cs
or
rclb
sub
pop
loop
push
xor
sbb
and
stc
pop
mov
adc
mov
and
inc
mov
pusha
iret
cmc
outsb
call
mov
jb
std
clc
push
lcall
fisttpl
movsb
jne
pop
movsb
mov
push
adc
sbb
jg
pop
xor
mov
or
stos
mov
dec
filds
shll
dec
add
push
push
leave
xchg
mov
xor
jmp
mov
jo
cmp
mov
sbb
mov
test
shlb
lea
fs
sti
push
sub
xchg
popf
push
push
fs
cmp
adcb
cli
mov
in
push
mov
sub
jbe
imul
push
add
mov
shrb
mov
mov
push
mov
push
ja
mov
mov
out
cmp
and
rolb
inc
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
mov
add
adc
add
cwtl
inc
icebp
push
rcr
inc
jo
mov
aaa
adc
ret
mov
jp
xor
dec
xor
jae
xchg
cmp
bound
outsb
inc
stos
xor
enter
push
pop
xchg
pop
jbe
mov
sbb
jp
pop
jmp
nop
int
nop
adcl
jne
or
rorl
test
push
fdivl
mov
in
in
negb
pusha
jne
ja
mov
lret
pop
push
cmpsb
sub
jo
cmpb
push
call
mov
cmpsl
stos
xorb
inc
inc
imul
es
cs
and
cwtl
mov
arpl
dec
testb
mov
add
xchg
jb
xchg
add
dec
fcomps
in
or
or
cmp
daa
jo
mov
les
xor
adc
arpl
xchg
pusha
pop
xor
push
dec
out
subl
lock
adc
rcrb
adc
test
or
lods
push
mov
jge
push
pop
out
jmp
lods
mov
mov
daa
scas
mov
xchg
mov
xchg
subb
ss
mov
lock
dec
aam
sub
push
movsb
mov
repz
add
outsl
les
cld
jb
iret
out
imul
pushf
dec
sub
adc
dec
sbb
js
mov
iret
inc
repz
nop
xchg
or
mov
test
dec
push
sbb
in
sbb
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
pop
add
outsl
or
add
mov
idiv
sbb
mov
pop
pop
mov
mov
data16
popa
mov
iret
lods
imul
xchg
inc
jg
jno
imul
adc
fldenv
add
pusha
bswap
cld
mov
add
lods
scas
or
mov
cmpsl
aaa
lock
mov
inc
adc
sti
adc
leave
and
lods
into
cli
repz
ljmp
jg
pop
lock
outsl
js
mov
ss
pop
dec
bound
adc
inc
mov
or
mov
push
mov
leave
call
add
gs
ret
divl
inc
pop
ret
xlat
insl
ficoml
jns
cmp
lret
mov
jle
pop
sub
xchg
repnz
xchg
iret
movsb
inc
mov
shll
shlb
pop
push
out
adc
out
fsub
xor
repz
outsb
test
iret
sbb
testl
dec
cmp
fstps
lods
cmovs
jg
adc
loope
xchg
push
xor
fdivl
xor
push
inc
insb
rcll
adc
ret
mov
inc
in
ret
das
xor
add
rcr
stc
push
xchg
inc
int
loop
mov
idivl
popf
pop
outsl
loopne
sub
inc
shl
roll
cmpl
std
mov
adc
cmp
adc
outsb
je
sub
imul
cwtl
jns
push
sbb
jb
lret
lahf
fwait
scas
fnstcw
push
in
insb
sbb
add
dec
test
xchg
hlt
sbb
push
cmp
xchg
stc
pop
and
jb
or
lods
xchg
loop
test
sti
movsl
push
push
imul
mov
pushf
adcl
pop
inc
mov
sbb
mov
cmp
jge
ljmp
cmp
loopne
lods
andl
jge
iret
pop
dec
mov
scas
mov
fprem
daa
and
mov
test
js
cmc
in
or
shrb
sahf
sbb
xor
es
push
shlb
lds
addb
jmp
mov
xor
adcb
out
lods
std
inc
add
and
xlat
idiv
jb
and
mov
lahf
add
jno
inc
testl
in
nop
sub
shlb
hlt
cld
stc
sahf
div
xchg
clc
xchg
sub
xor
mov
add
stc
mov
jb
and
sub
aaa
hlt
jl
imulb
mov
cwtl
push
inc
cld
cmp
hlt
and
movsb
adc
mov
adc
adc
out
mov
aaa
mov
push
sahf
push
jb
aaa
jns
in
scas
lds
xor
pop
jmp
fstpl
jo
mov
int
jecxz
jne
sbb
out
lods
lea
and
ja
testl
or
into
loopne
dec
mov
imul
pop
add
inc
leave
or
or
pushf
popa
stos
mov
fucomi
out
sti
add
jno
dec
jg
fsubrl
xor
and
push
sub
sbb
gs
icebp
mov
rcrb
xchg
shrl
imul
js
push
es
lahf
cld
out
rcll
xor
movsl
jle
fstl
pop
leave
inc
lods
or
xor
dec
dec
pop
imul
add
cld
in
rcll
sbb
add
dec
es
loopne
enter
xchg
xchg
jmp
dec
popf
push
cmp
aas
dec
or
pop
pop
movsb
push
enter
sbb
popa
cmp
xchg
sub
popf
out
lock
call
int3
inc
addb
fucomi
mov
mov
pop
inc
into
scas
pop
push
jle
xchg
mov
lock
push
xacquire
ficoml
stc
adc
jno
int
push
lahf
enter
mov
sbb
xor
adc
and
push
arpl
lret
subb
add
in
das
pop
cmpsb
xchg
xor
sub
xchg
mov
lret
sub
loopne
push
jnp
and
pop
xchg
inc
pop
lea
lret
pop
mov
sub
inc
nop
jbe
mov
outsl
sbb
push
fisttpl
aam
arpl
adc
shl
jne
pop
adc
jo
aaa
xchg
lock
xchg
neg
pop
push
sub
dec
mov
jp
jno
sti
mull
fcoms
gs
add
fcoms
aaa
dec
cs
loop
sub
adc
push
sbbb
xchg
jo
pop
into
sub
mov
xor
adc
xor
jge
mov
dec
rolb
ud0
jmp
in
sub
and
imulb
test
cli
sti
sub
pop
test
scas
pop
insl
or
mov
dec
js
add
xchg
pusha
and
jecxz
dec
fmull
cli
cmp
cmp
and
rorb
divl
shr
pop
pop
and
scas
or
sbb
in
sub
jo
sbb
jmp
shrb
lret
or
movb
lahf
cmc
loopne
adcb
ds
lock
sbb
xlat
xchg
mov
ss
int3
pusha
and
jne
adc
jge
mov
stos
xchg
push
inc
test
div
enter
into
mov
rcrb
jae
dec
xchg
mov
jmp
negb
idivl
imul
gs
pop
std
pop
fmul
xchg
mov
mov
popa
mov
or
mov
aas
adc
aas
inc
scas
jle
xor
mov
cmp
mov
call
and
imulb
xchg
and
sub
xchg
movsl
popf
dec
add
fiaddl
outsl
xor
aas
pop
push
je
pushf
jae
notb
sbb
pop
les
test
sarl
mov
mov
cmp
cld
mov
outsl
sti
dec
outsl
ficoms
clc
cmpsl
movsl
push
fcom
jo
xchg
hlt
sbb
mov
outsl
inc
and
add
fistpll
sti
cli
mov
fadds
sahf
adc
gs
lret
fimull
ljmp
pop
sbb
push
addb
sub
inc
jbe
rclb
dec
adc
pop
mov
stc
jbe
shll
lahf
lea
cmp
inc
dec
pop
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
inc
add
add
add
add
sub
push
cmpsb
mov
test
jne,pt
dec
lods
ljmp
ja
dec
daa
rcrl
sub
nop
ret
jl
mov
movsl
cwtl
inc
sbb
test
das
out
jecxz
rolb
sti
xlat
cmpsl
stos
push
mov
imul
or
or
xor
arpl
mov
outsl
std
lea
push
sti
inc
dec
sbb
mov
mov
lret
mov
test
dec
bound
mull
rolb
repnz
add
stos
adc
adc
aas
sbb
or
mov
xchg
pop
sub
mov
mov
pop
cmp
iret
sub
ja
fs
je
fdivp
lods
dec
lret
pop
pushf
cltd
jp
cltd
mov
push
add
iret
pop
jne
ss
inc
mov
and
inc
and
xor
cld
cmpsb
pop
mov
sub
call
pop
mov
in
xor
mov
insl
insb
in
mov
sahf
addr16
fs
push
mov
push
mov
movsb
in
ret
or
lea
je
pushf
sti
dec
cmp
dec
xchg
ds
into
xor
jmp
adc
sub
push
std
lret
sti
or
pushf
test
cs
push
fcmove
adc
orl
mov
icebp
mov
add
scas
cltd
pop
cltd
je
xor
or
push
pop
daa
mov
jnp
out
inc
jle
mov
mov
stc
add
js
sahf
xchg
push
mov
sub
xchg
push
inc
out
and
mov
mov
popf
lret
and
add
jno
sub
iret
inc
xchg
orb
shrl
fbld
sub
jmp
cmpsl
cs
jns
clc
je
sbb
adc
pop
add
jp,pt
fiadds
pusha
sub
push
pop
loopne
aas
sbb
mov
repnz
push
dec
add
push
mov
adc
fs
stos
stos
push
lcall
int3
xchg
movsb
in
ds
jne
xlat
adc
rolb
push
leave
cld
mov
mov
mov
add
pop
xchg
lds
dec
mov
in
pop
push
add
pop
outsb
loopne
inc
int3
jp
ja
stos
fdivrs
scas
gs
loopne
stc
mov
pop
jne
mov
or
mov
add
pusha
icebp
cmpsb
sub
sub
adc
add
cmp
mov
or
inc
out
push
addr16
nop
mov
xchg
clc
pop
cmp
out
sar
dec
lock
inc
pop
mov
xchg
inc
adc
and
add
out
adc
push
pop
testb
lahf
mov
xor
subb
test
test
cmp
pop
psraw
add
mov
insb
add
adc
imul
fwait
dec
fsts
hlt
jo
leave
ss
jecxz
pop
dec
or
sub
jnp
cmc
icebp
loope
test
lret
cmp
cmp
or
push
dec
pop
inc
mov
cmpsb
seto
bound
sbb
out
dec
push
sbb
movsb
ds
or
mov
mov
xchg
mov
pop
bound
mov
adc
cmp
fwait
or
xchg
movsb
cmp
push
nop
pop
lods
mov
insb
dec
lock
pop
leave
mov
sti
or
jbe
sub
dec
stc
arpl
fisttps
pop
xorl
aad
jb
mov
test
xchg
cld
stc
cli
xor
and
push
gs
xchg
mov
xchg
movsl
and
sti
jmp
push
push
aaa
xor
sub
fucomip
mov
or
mov
add
sbb
push
aaa
das
push
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
add
add
add
add
xor
imul
daa
rcrb
mov
jbe
lret
mov
lds
pop
es
rcrb
pushf
xchg
xchg
mov
enter
add
push
bound
leave
pusha
push
xor
cmpsl
je
pop
pusha
es
mov
pop
mov
cmp
cmpl
mov
dec
out
push
ret
mov
or
imul
sarb
dec
scas
shll
sahf
aas
push
mov
add
clc
je
repnz
sarb
arpl
mov
mov
fisttpll
fiaddl
fsubr
test
cmc
ljmp
sub
imul
push
jmp
adc
inc
mov
push
out
mov
std
addr16
pop
add
into
mov
fcoml
pop
out
xlat
data16
inc
pop
loop
cld
lret
lcall
xor
push
out
fldcw
dec
int3
push
pushf
pop
dec
negl
jbe
inc
loopne
loop
bnd
mov
repnz
cmc
adc
pushf
mov
dec
cmpb
test
cmc
mov
test
pop
inc
loopne
loop
repnz
cwtl
jo
out
popf
sub
adc
addb
ret
dec
jbe
inc
loopne
loop
repnz
dec
loop
sti
mov
pop
roll
add
imul
sbb
adc
push
test
lret
fcmovnbe
shll
sbbb
sub
sbb
fistpll
leave
shlb
fwait
mov
mov
sub
cltd
inc
cmpsb
test
add
pop
fwait
loope
int
lret
push
iret
fs
dec
push
scas
lret
rcrb
mov
stos
outsl
add
fs
mov
pop
pop
outsb
mov
repz
xor
not
jnp
data16
enter
pop
in
orl
repnz
es
adc
movsb
arpl
movsb
cmp
adc
int3
out
mov
cmp
scas
cs
cmp
fdivrs
add
aas
jb
out
es
push
xchg
cmc
iret
enter
scas
dec
cmp
inc
push
movsb
mov
dec
xchg
sub
test
shll
sub
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
add
add
jb
fnsave
test
mov
movsl
es
xchg
and
add
pop
das
pop
hlt
mov
dec
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
pop
add
add
xlat
mov
dec
adc
xlat
jns
imul
sub
insl
sub
jbe
jne
push
cmp
jo
or
jo
rorl
or
mov
aaa
fldl
popf
dec
cmp
push
out
mov
enter
pop
insb
cld
mov
sub
ljmp
push
outsb
je
into
lahf
int
dec
insb
mov
sbb
movsb
sbbl
jb
dec
inc
out
imul
adc
sub
ja
dec
popf
idivb
ljmp
jbe
inc
push
cli
mov
mov
inc
add
test
loope
imul
xchg
mov
subb
pop
adc
insb
pop
xchg
mov
inc
xchg
outsl
outsb
outsl
xchg
add
xor
mov
jg
icebp
xchg
fcmovbe
std
in
enter
sub
negb
jle
mov
jae
sub
xchg
repnz
xchg
mov
cmpl
test
mov
aad
cmpsl
pop
dec
add
pop
std
adc
jmp
or
add
movsl
fwait
insb
mov
lret
out
pop
aas
push
dec
cmp
add
push
sub
xor
cmpsb
pop
ficoml
ja
hlt
fwait
pop
loopne
negb
mov
pop
jge
or
mov
aaa
shlb
aas
jge
inc
mov
push
push
pop
adc
mov
arpl
mov
xchg
push
pop
push
inc
mov
inc
pop
and
jns
or
add
hlt
or
pop
xchg
cmp
adc
dec
daa
mov
mov
add
jnp
mov
mov
ret
bound
in
sub
lock
mov
xchg
fnstsw
out
cmp
ret
adc
fsubs
cmp
loopne
jns
mov
notb
cmp
jb
into
jnp
je
or
cmp
pop
int3
xor
jns
repz
aaa
xchg
fldl
test
adc
lds
out
int
cmp
jnp
out
test
jmp
das
push
ret
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
add
add
out
inc
pop
lahf
gs
dec
leave
sub
lea
bound
or
fbld
push
jno
inc
pop
xchg
cmpsl
jg
js
mul
notl
ja
or
imul
iret
sbb
mov
lret
sub
xor
stos
in
push
bound
test
mov
or
jno
cld
dec
mov
loope
rclb
repz
xor
mov
fstps
jne
pop
add
dec
add
mov
mov
int
insb
scas
lret
les
jnp
call
xor
pop
movups
xchg
imulb
mov
push
cmp
out
fimuls
add
jge
lahf
sub
xor
shlb
sub
mov
test
imul
mov
lods
ret
outsl
cmp
cld
or
add
jae
into
dec
insb
inc
sbb
in
shrb
rolb
mov
inc
orb
pop
adc
dec
std
mov
inc
arpl
ds
test
lea
xor
mov
xor
mov
adc
sbb
lods
enter
jbe
mov
rcll
test
cmp
hlt
jo
mov
or
sbb
aam
shll
ficoml
icebp
sub
repnz
adc
mov
inc
scas
clc
push
adc
mov
fsubrs
movsb
sbb
and
shlb
mov
mov
dec
adc
xor
adc
cmove
ds
ret
dec
jno
xor
push
inc
lret
push
mov
dec
sbb
add
adc
repnz
imul
test
mov
inc
scas
std
ljmp
scas
sub
lds
inc
out
jno
jo
clc
test
scas
sbb
shrl
and
je
stos
pop
cmc
incl
push
mov
fmulp
dec
mov
ds
fidivrs
mov
or
insl
xchg
pop
outsb
mov
xor
loope
jne
pop
mov
scas
stc
pusha
push
js
cmpsb
sbb
pop
scas
mov
cwtl
dec
push
lret
mov
sbb
pop
lret
lea
and
decb
cmc
imul
pop
cltd
rclb
jae
sti
mov
iret
hlt
xor
jb
aad
rclb
inc
mov
out
xor
mov
fnstenv
stc
lcall
call
xchg
adc
aas
and
prefetch
or
mov
dec
es
xchg
in
mov
test
mov
push
stos
xor
fwait
and
push
xchg
fistps
imul
pop
dec
fdivr
mov
es
jae
jae
mov
mov
test
fincstp
test
mov
sahf
rcrb
test
cmp
mov
dec
outsb
nop
dec
roll
movsb
sbb
repz
repz
dec
mov
scas
adc
cmpsl
call
out
mov
outsb
imulb
in
mov
adcl
push
sub
data16
cwtl
inc
mov
mov
adc
or
sarl
insb
xor
shll
mov
lds
mov
in
nop
out
sti
data16
cld
scas
out
insl
in
mov
xor
add
mov
lcall
cmpsb
jp
mov
stc
sahf
aaa
dec
cli
lret
xchg
and
cmp
arpl
pop
push
leave
fnstenv
push
into
movsl
add
repz
ret
cmpsl
dec
jl
xor
scas
ds
lcall
push
lahf
imul
out
fmul
or
mov
sub
loope
inc
aam
in
inc
rcll
xor
in
mov
inc
loop
je
pop
and
call
xchg
jo
push
test
int
jne
xor
dec
xlat
push
ss
sarb
xchg
fbstp
mov
and
and
cmc
xor
push
gs
das
test
clc
imul
jl
inc
dec
lds
pop
sti
sub
pop
xchg
dec
lret
insl
in
ljmp
es
ss
ja
inc
insb
sbb
std
dec
lret
lcall
scas
adc
fisttpll
or
push
push
lcall
dec
pop
and
mov
movsb
aas
sub
sti
xchg
jp
xor
pop
add
int
xor
or
adc
or
inc
cmp
mov
test
dec
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
add
add
push
xor
repnz
inc
adc
push
dec
mov
out
inc
insb
aas
jns
cmp
mov
mov
iret
ja
push
movsb
leave
pop
popa
sub
sbb
shlb
or
and
jg
test
mov
sub
and
fwait
pop
xchg
jp
dec
in
adc
adc
jmp
push
xor
push
stos
dec
dec
dec
fiaddl
popa
jle
movsb
xor
shll
dec
icebp
and
ret
add
xchg
and
cwtl
das
nop
js
xchg
dec
xor
sub
xchg
mov
add
in
jbe
jo
push
jae
pop
jnp
ss
pop
or
aas
cmpsb
subl
sarl
mov
rcrl
push
push
int
sbb
xchg
in
in
mov
cld
aad
cs
jle
hlt
inc
dec
aam
in
inc
jle
jg
add
lea
nop
lods
sbb
test
push
sub
push
jno
and
frstor
in
je
ja
mov
movsl
pop
push
shll
xchg
in
pop
in
xchg
pop
mov
stc
jae
enter
pop
cmpsb
and
xor
push
fidivl
xor
repz
jmp
sub
xchg
pop
movsb
add
rcll
pop
cmp
pop
mov
mov
out
test
sub
scas
lahf
hlt
dec
sub
popf
in
sub
mov
push
lods
into
mov
rorl
insl
lods
cs
jmp
mov
sbb
std
aas
std
cmp
rcll
push
scas
lea
jb
sbb
insl
and
jne
dec
mov
xor
mov
pop
call
push
inc
adc
mov
cmp
in
mov
or
repnz
xlat
popf
andb
sub
adc
test
idiv
into
and
cmp
mov
xchg
push
insb
fstps
loop
test
jecxz
sbb
xor
imul
pop
fnsave
lods
addr16
or
xchg
sbb
ror
pop
cmp
and
movsl
add
icebp
push
push
pop
loopne
mov
es
sub
push
or
sbb
cmpsl
add
movsl
xchg
jl
cld
pop
cmp
adc
fs
mov
sbb
push
and
nop
sub
jbe
call
xchg
aad
pop
lret
int
add
or
mov
jge
xchg
out
or
loope
push
mov
or
sbb
adc
add
and
fdivl
dec
jecxz
sub
pusha
push
and
push
jnp
mov
and
cs
outsl
inc
xor
xchg
insb
xchg
xchg
inc
jb
cs
popa
add
stos
pop
and
in
push
fisubl
cmpsb
xchg
jnp
xchg
xchg
loopne
jmp
jo
sbb
xor
lret
push
sbb
fwait
add
inc
arpl
mov
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
add
stos
pop
add
ds
cld
push
adc
inc
ds
notb
fldt
adcl
inc
outsb
outsb
fnstcw
test
rcr
dec
movl
pop
mov
dec
lret
out
xlat
xchg
sbb
incl
imul
loope
outsb
and
adc
mov
inc
lcall
daa
sbbl
data16
dec
dec
fwait
movsb
movsl
add
int3
mov
mov
mov
popa
pop
mov
dec
pop
in
mov
scas
adc
inc
std
cmp
adc
mov
sub
sub
aam
aam
pusha
inc
sbb
mov
bound
xchg
arpl
mov
or
pusha
arpl
cmp
cltd
pop
ljmp
outsb
push
pop
rcll
cli
lea
fucomip
leave
sbb
fxam
or
lods
pop
insb
popa
push
and
clc
cmpsl
pushf
gs
jne
sub
fildll
mov
mov
pop
xor
js
mov
and
cs
pop
xchg
fidivs
cld
mov
cmp
das
and
out
test
insb
push
adc
mov
inc
xchg
popa
in
testl
cmp
mov
sub
push
into
jge
test
xchg
aas
xchg
imul
movsl
ds
or
icebp
dec
fwait
pop
lds
cwtl
xchg
pop
arpl
pop
dec
or
xchg
push
sahf
mov
sub
ficoms
cli
aas
or
pop
es
jge
test
stos
sbb
cltd
loopne
push
mov
or
jne
pop
sub
loopne
mov
xchg
mov
js
adc
les
cs
xchg
jbe
test
out
pushf
add
xchg
js
xor
es
and
sbb
test
add
lret
jo
sub
xor
jg
loop
imul
in
jp
and
cli
subl
xor
fsubrl
outsb
call
or
repnz
xchg
mov
mov
pusha
pop
jbe
out
sub
inc
xorb
aam
loope
xor
aad
push
inc
mov
xchg
repz
jl
dec
inc
xor
ret
push
test
mov
jae
mov
scas
mov
pushf
mov
push
loopne
stc
mov
cltd
rclb
pop
stc
int3
mov
push
sub
mov
inc
std
or
and
lahf
bound
xor
xchg
ljmp
or
mov
scas
xor
sub
and
sbb
jns
push
push
ds
into
dec
stc
inc
test
xor
sbb
xchg
inc
pushf
out
ror
or
iret
mov
pop
cmp
arpl
test
ljmp
iret
dec
xor
leave
xor
mov
cmp
xchg
test
das
dec
into
add
out
movsb
push
ror
stc
sbb
xlat
push
push
loop
push
sbb
xchg
mov
pop
pop
les
aad
cmc
pop
jno
loope
jae
or
mov
mov
adc
fcoml
and
movsb
sbb
notb
repnz
sti
lock
and
bound
outsb
push
insb
enter
inc
aam
testb
cld
jae
jb
mov
mov
jbe
xchg
pop
pusha
or
sbb
sub
jge
add
sbb
push
mov
shrb
sub
divb
adc
fwait
pushl
pop
das
sbb
and
and
bt
xchg
mov
jbe,pt
ds
jns
jmp
jno
and
pusha
test
jb
call
fstl
and
mov
mov
movsb
xchg
adc
enter
bound
add
inc
pop
and
cmp
xchg
fucomi
pop
jne
out
mov
dec
add
pop
aad
add
xchg
mov
andb
leave
push
pop
cmp
loopne
mov
add
xor
xchg
sbb
cmp
xchg
adc
int3
pop
lahf
mov
jecxz
mov
imul
xchg
test
xchg
adc
push
add
in
sahf
sub
in
fisubs
es
outsb
sarl
push
cmp
and
cmp
andl
faddl
fiaddl
ljmp
dec
jmp
xchg
mov
cmp
adc
push
js
jmp
fildl
adc
xchg
jae
xchg
push
or
mov
test
test
icebp
fadds
mov
ljmp
mov
xchg
pop
fstl
jp
aad
stos
cltd
ret
les
pop
sbb
mov
push
ljmp
mov
push
lret
mov
cmpl
in
or
inc
jae
push
cmp
lret
fstpl
sbb
std
dec
pop
dec
bound
int
push
cwtl
sbb
call
and
push
mov
inc
push
cld
mov
cwtl
inc
mov
push
xchg
test
mov
cli
pop
ret
or
xchg
cmp
push
cmc
pop
in
test
je
fstps
into
cld
mov
nop
sbb
push
aas
hlt
or
jae
pushf
sbb
lds
cmp
mov
and
push
inc
stos
outsb
mov
mov
push
std
lods
pusha
rorb
or
outsl
addr16
in
xchg
add
fimuls
pop
pushf
clc
inc
jmp
fsubrl
nop
clc
hlt
test
clc
mov
cmp
cmpl
in
dec
sti
sub
xorl
dec
lahf
enter
out
outsb
inc
fistl
cmpsb
mov
add
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
int3
add
add
add
ret
outsl
pop
xor
cmp
xchg
xor
mov
jae
leave
popa
loopnew
pop
adc
mov
xlat
jo
fs
pop
in
xchg
iret
shl
xor
addl
mov
shlb
fcompl
fdivs
loope
mov
xor
jno
aaa
sbb
dec
jp
dec
xor
xchg
xchg
push
and
insl
lds
jo
and
mov
imul
mov
outsb
dec
mov
or
xor
or
lock
ja
out
adc
mov
sbbl
fidivrs
lret
popa
int
cwtl
int
push
fcoms
std
mov
loopne
pop
adc
call
cmp
xchg
aad
int3
add
jb
test
leave
mov
xchg
scas
mov
sub
push
mov
aaa
xchg
clc
dec
inc
cmp
pop
sub
test
pop
ret
xor
mov
mov
loopne
dec
sub
data16
mov
es
add
repnz
je
cmp
and
mov
jae
and
and
dec
push
repz
sbb
xchg
add
test
repz
jae
pop
mov
jbe
adc
aam
xor
jmp
adc
add
lock
or
or
aas
outsb
mov
iret
lret
mov
ficoms
scas
lods
shll
loop
movsl
mov
push
dec
xor
loop
je
xor
stc
push
jp
push
iret
mov
lods
lods
cmp
int3
add
and
aas
mov
test
push
cmp
mov
dec
jge
fmull
lea
mov
push
xchg
leave
xor
fstpt
nop
test
cmp
mov
inc
mov
lods
sbb
aas
pop
dec
mov
lds
fldcw
add
fistpll
dec
push
es
push
pop
les
push
es
adc
mov
jl
dec
test
xchg
ja
int
and
pop
ret
dec
jnp
xor
mov
lahf
aaa
addr16
std
push
lahf
mov
xorb
lods
cli
lret
add
test
pushf
rcl
popa
or
data16
pop
loop
cmpb
dec
pop
es
call
lds
inc
stc
push
xchg
dec
sub
aam
lret
loop
rclb
hlt
adc
loope
push
daa
cwtl
xlat
jnp
imul
leave
cwtl
mov
pop
mov
mov
aaa
xchg
push
mov
icebp
pop
mov
clc
test
js
hlt
pop
imul
cmp
test
js
repnz
xor
cmpsb
xchg
push
inc
jp
test
dec
sbb
pusha
mov
ss
cli
movntq
mov
pusha
add
fidivrl
push
inc
add
fdivs
stos
cltd
aad
repnz
inc
pop
adc
das
inc
cmpb
bound
sahf
cmp
and
inc
mov
jns
nop
mov
cmp
pop
ret
shrl
inc
mov
pusha
dec
jecxz
inc
mov
sbb
lock
adc
enter
sub
push
push
sti
xor
jl
or
mov
sub
mov
test
and
clc
negb
jp
call
mov
mov
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
pop
add
ljmp
mov
cmp
dec
jns
push
mov
mov
jo
dec
mov
sub
fistpl
xchg
mov
add
mov
loop
mov
mov
cld
push
mov
lea
addl
push
orb
ss
sub
and
cmp
call
add
lret
insb
enter
and
ja
xor
xlat
aam
mov
mov
pop
jle,pn
outsb
xchg
fidivl
call
jmp
cmp
push
aaa
jge
pusha
jns
cmp
inc
sub
rcrl
ret
popa
push
adc
ja
or
fistpll
sbb
inc
stc
xchg
bound
imulb
pop
adcb
mov
dec
dec
cmp
js
sub
clc
dec
jns
push
das
in
pop
fwait
xchg
pop
out
inc
push
idivl
dec
ds
fmuls
rcrb
mov
add
push
push
cld
and
mov
jns
sahf
sub
nop
add
lret
or
loopne
fcomps
or
orl
ja
and
or
rcrb
ja
or
aad
cltd
sarb
inc
sub
jecxz
pop
jecxz
popa
into
lods
imul
fwait
jp
or
add
pusha
add
inc
lret
xchg
rcr
fucom
ljmp
fwait
cmc
dec
je
cld
dec
xor
ja
repz
cmp
scas
dec
cmp
xchg
ljmp
add
lds
push
roll
cmp
jne
pusha
imul
dec
mov
and
fisttpl
cmp
sbb
and
jb
add
xor
in
jae
or
pop
sub
mov
stc
lret
jo
nop
in
pop
inc
out
jne
mov
test
cmc
or
fistpll
add
push
pop
imul
pop
in
jns
call
pop
js
out
sbb
mov
popa
dec
and
pop
dec
scas
fbld
cmp
push
jmp
inc
push
test
iret
jmp
xchg
push
sbb
xor
mov
loope
sub
enter
jno
aas
mov
cli
xchg
pop
or
add
push
add
dec
pushf
dec
add
inc
lahf
mov
xlat
mov
test
xchg
ret
jmp
into
lods
cs
pop
lods
cli
cmp
xchg
cmpsl
test
add
test
xor
dec
xor
dec
jl
je
jmp
push
lret
ja
mov
loop
das
jne
ljmp
std
cmp
adc
jecxz
test
stos
lods
sbbl
test
inc
into
xchg
hlt
shlb
jae
mov
and
into
stos
dec
rclb
cmpsl
push
out
rorb
sbb
sarb
sub
xor
rcl
cmc
out
push
xor
xor
dec
daa
dec
pusha
imul
xor
or
int
pop
and
cli
sub
and
in
fcmovu
mov
cltd
lcall
jecxz
jp
les
inc
scas
fisttpll
inc
adc
inc
pop
pop
into
es
imul
jnp
int
xchg
mov
mov
mov
cmp
ret
fistps
sbb
popl
and
mov
cli
mov
xchg
es
imul
push
jmp
js
inc
rcrl
in
inc
mov
sub
lods
mov
jnp
mov
out
dec
cmp
fwait
mov
bnd
push
in
insb
mov
mov
mov
int
jl
or
loop
inc
mov
pushf
lret
and
inc
loopne
mov
cwtl
or
mov
dec
mov
pop
mov
mov
xor
mov
adc
aad
icebp
mov
sbb
cmp
sbb
sbb
popa
xchg
inc
pop
lds
push
sbb
mov
sub
xor
insl
push
dec
fisttpl
push
push
popa
mov
lahf
cmp
jb
std
in
test
aaa
stos
push
lea
mov
scas
xchg
fcompl
mov
jb
movsl
ret
jne
sbb
mov
and
or
jmp
mov
mov
dec
cmp
inc
arpl
cli
pop
xchg
movl
push
fld
xor
xchg
push
std
adc
daa
popa
jbe
pop
push
insb
sub
icebp
test
mov
pop
pop
stos
sub
and
mov
js
mov
negl
mov
dec
sbb
push
mov
add
and
mov
pop
cmp
ja
dec
xchg
aad
mov
int
shlb
fs
push
aas
jmp
cmpl
adc
popa
xchg
imul
mov
cmc
int3
push
repnz
lret
sbb
inc
or
in
dec
leave
pop
xor
in
ljmp
sbb
call
jg
sub
xchg
iret
ficoml
xchg
int
dec
jge
sub
imul
mov
fadd
js
daa
jne
loop
adc
or
pop
call
outsl
icebp
xchg
inc
sahf
fistpll
lret
hlt
add
je
sub
adc
fstps
jl
mov
rolb
lcall
fiaddl
stos
mov
loopne
jne
rcl
mov
push
pusha
lock
pop
sahf
add
sbb
add
loop
or
addb
pop
pop
xlat
mov
int3
mov
lods
lahf
xchg
in
cmp
pop
aad
and
rcr
and
mov
pop
inc
mov
rorb
mov
les
test
test
test
les
outsb
sbb
push
mov
adc
mov
sub
test
pop
aas
fldenv
gs
test
mov
xchg
mov
pop
inc
mov
shrb
mov
sub
std
mov
insl
mov
pop
rorb
sbb
xor
pop
inc
cltd
sahf
shlb
xchg
hlt
adc
outsl
test
xchg
inc
sti
lahf
lcall
lea
dec
jns
jbe
jp
add
or
icebp
jae
sub
adc
pop
jecxz
mov
pop
xchg
mov
add
mov
or
lods
loope
iret
push
arpl
inc
cmp
lret
fcomi
xchg
pop
and
dec
js
push
cmc
mov
push
out
mov
aad
mov
push
shl
sub
in
call
iret
or
pop
mov
cld
mov
jle
test
pushf
jns
mov
xchg
mov
sbb
xchg
mov
mov
mov
iret
mov
cmp
sbb
mov
mov
xor
out
pop
jl
cwtl
mov
aam
xchg
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
inc
push
add
pushf
or
add
pop
xlat
xor
jmp
push
mov
testl
ss
inc
pop
mov
repz
mov
mov
fistps
xchg
rolb
mov
lea
test
in
iret
push
sub
fwait
mov
lods
and
dec
and
test
das
push
push
xchg
inc
sahf
xor
call
xor
and
dec
kandw
cmp
data16
jmp
push
ja
mov
sarb
fs
push
repnz
ud1
mov
add
notb
mov
and
cmp
daa
or
xlat
aas
ja
inc
mov
ljmp
fists
xchg
fwait
push
mov
pop
icebp
pop
ja
sub
sub
xor
cmp
movsb
push
cmp
dec
pop
or
or
adc
xor
iret
fwait
aaa
add
push
sti
cmp
add
mov
push
push
lea
ss
mov
cwtl
movsb
push
push
adc
sub
add
popf
or
aaa
in
nop
lahf
fildll
shr
xchg
inc
nop
bound
dec
jp
fstps
push
ljmp
push
fdivrs
dec
cmpsl
mov
add
rorb
lret
insb
xchg
jno
enter
std
pop
cmp
sbb
sub
idivl
xchg
into
or
das
pop
add
mov
cmc
and
pop
sub
sbb
dec
push
mov
cmpsb
pop
fisttps
mov
cmc
psubb
pop
or
adc
mov
inc
aad
iret
mov
in
lods
cmpb
inc
aam
jmp
fstps
adc
je
and
add
ret
sbb
and
jl
pop
fmull
adc
jnp
sub
in
sahf
call
mov
sbb
jle
xor
lds
out
into
ret
int
cmp
mov
enter
sbb
fwait
push
test
inc
out
mov
inc
cltd
shrl
cmp
or
pushf
jle
pop
out
inc
andl
nop
scas
xchg
mov
or
stos
scas
mov
inc
repnz
imul
sarb
push
mov
sbb
pop
movsb
aas
xchg
and
in
sbb
popf
pop
dec
xor
repnz
inc
xchg
and
addr16
loop
jb
loope
call
aas
or
enter
xchg
sbb
lahf
jg
mov
in
ret
jnp
rorl
nop
sub
jne
addr16
cmp
xchg
outsb
pop
add
outsl
repnz
jle
sbb
or
mov
pop
pop
sbb
mov
or
cmp
sbb
cmc
data16
mov
cmp
xchg
int3
mov
mov
or
cld
stc
sarb
lret
xorb
fwait
mov
call
fadds
adc
push
mov
mov
push
icebp
paddsb
xor
cld
imul
mov
adc
xor
out
add
loop
out
movsl
mov
cmp
sub
push
and
lret
stos
cltd
and
popf
mov
and
cmp
imul
lods
mov
rclb
add
cmc
fidivl
push
test
out
xor
das
lds
pushf
dec
out
cmp
stc
stos
inc
outsb
xor
and
popa
je
and
mov
dec
shl
outsb
or
jl
shrl
lret
sub
mov
outsl
sub
sbb
das
or
into
icebp
shrl
xchg
inc
test
jecxz
jge
iret
xchg
mov
mov
out
lds
sbb
add
ljmp
dec
rcrl
or
fildll
jl
sub
ret
loop
ficoms
in
clc
and
stc
push
dec
ja
popa
jne
arpl
or
sub
xchg
addr16
cmp
cld
stc
dec
add
jbe
bound
add
dec
push
insl
je
mov
push
ror
xor
fsave
jl
xor
jmp
in
lret
imul
cmp
repz
jmp
xor
push
mov
std
pop
mov
cmpl
es
xchg
test
cmc
shlb
sbb
lods
sar
mov
push
adc
push
in
xchg
jg
enter
mov
sbb
push
cli
fbstp
stos
pop
cmp
faddl
cli
sbb
pop
add
test
nop
arpl
adc
jne
cmp
xchg
xchg
cmp
mov
dec
pop
dec
xor
push
repnz
sbb
add
sahf
xor
loope
mov
add
pop
mov
iret
ss
stos
xchg
sti
call
leave
pop
or
loope,pn
cmp
aas
push
xlat
mov
inc
sbb
xor
icebp
mov
movsl
test
loope
test
jle
xorl
adc
outsb
out
jp
or
inc
rcll
cmc
popf
test
inc
mov
xor
icebp
je
stos
loopne
push
out
push
aaa
gs
lods
daa
push
outsl
sbb
inc
jne
mov
xor
aad
cwtl
mov
mov
dec
mov
aad
xchg
rcr
stc
and
jns
stos
sbb
rcrb
push
sti
or
pop
mov
jp
sbb
into
mov
inc
lea
scas
pop
jns
push
inc
and
lods
and
and
icebp
movsl
mov
inc
jge
popf
cmp
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
add
add
ljmp
sub
xchg
out
inc
ja
xlat
pusha
sub
inc
mov
shl
sub
pop
dec
test
test
jns
popa
aam
dec
push
mov
pop
or
sbb
rol
mov
outsb
xor
aam
mov
das
dec
shrb
sbb
push
lcall
jns
shlb
cmpsl
xor
arpl
adc
and
or
outsb
rorb
push
fistpll
sbb
jae
adc
testl
rcrl
mov
pop
mov
and
sub
mov
sub
pop
sbb
das
ret
push
dec
push
fdivs
push
add
and
xor
imul
nop
mov
xor
dec
xchg
gs
mov
fidivrs
aad
lret
frstor
mov
dec
aad
ret
mov
adc
and
pop
das
sub
push
leave
fsubs
das
adc
jp
das
imul
movsl
push
bound
andl
jp
dec
cld
pop
loopne
cs
sub
lcall
ds
jns
fwait
ljmp
ja
pop
ja
fmul
cmp
out
or
jo
xchg
inc
bound
dec
sub
cmp
inc
xchg
sub
jle
clc
fists
shll
adc
sbb
or
lea
es
add
pop
pop
or
cmp
sbb
cltd
pusha
push
xchg
cltd
inc
cwtl
clc
dec
out
jge
push
and
and
push
andb
ret
xor
mov
inc
push
out
add
mov
out
push
mov
notb
sarb
lock
call
sub
leave
jp
sub
and
pop
sarl
inc
jp
fidivrl
mov
push
xor
push
popa
adc
stos
sbb
cmp
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
add
add
pop
mov
jle
or
xchg
stos
lea
into
sbb
mov
inc
rcl
out
std
inc
cltd
mov
int3
test
push
negl
pop
sub
loope
out
sub
gs
jg
mov
push
xor
popa
imul
mov
aaa
repnz
or
jo
pop
nop
jne
xchg
cmc
xor
scas
or
daa
sub
cmc
push
cmp
in
loope
jge
mov
mov
inc
sub
xchg
jecxz
add
imul
data16
xchg
mov
mov
and
in
mov
ljmp
xlat
fnsave
mov
xor
sbb
or
jns
adc
pop
pop
push
stos
ret
sbb
mov
mov
xchg
push
lock
mov
out
js
push
mov
sub
or
adc
bound
out
jne
out
xor
mov
fdivrs
insl
adcl
push
mov
es
or
pop
stos
jns
push
lock
mov
add
imul
das
cltd
adc
mov
pop
mov
push
pop
inc
mov
jp
mov
sub
push
clc
xor
cmp
sbb
xor
jge
xor
dec
outsb
sbb
xor
add
das
mov
repz
push
dec
inc
mov
jns
notb
ja
dec
call
pop
and
sub
and
int
ds
movsb
sahf
daa
mov
mov
jb
mov
inc
int
outsl
arpl
mov
int3
dec
push
sbb
xor
out
adc
mov
pop
mov
iret
mov
ret
pop
fmul
xchg
mov
je
push
cmp
sub
or
lds
jae
lcall
jge
hlt
inc
cmp
add
scas
sahf
mov
sbb
jns
pusha
std
hlt
push
icebp
loopne
int3
sti
sbb
jo
clc
add
cmp
adcb
int3
mov
pusha
pop
sub
ljmp
mov
addb
xchg
push
sub
scas
push
mov
mov
out
mov
addl
je
rcrb
add
sub
xchg
cs
int
dec
outsb
mov
nop
jge
mov
shrl
lahf
adc
mov
sub
mov
sbb
js
dec
xor
cmpsb
add
jmp
jbe
call
mov
mov
xor
pop
out
adc
xor
dec
jge
mov
cld
pop
adc
push
mov
pushf
les
cmp
or
inc
mov
xor
pop
movsb
outsb
sub
fwait
popf
xchg
iret
out
fidivrs
ret
aad
adc
dec
pop
imul
stc
xchg
int
mov
lock
pop
fimuls
es
fimuls
or
das
neg
sub
call
push
in
or
dec
lcall
sub
mov
inc
dec
int
dec
dec
sub
add
fmuls
pop
addr16
mov
jge
aas
lock
jg
mov
dec
filds
inc
or
fistps
out
repz
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
add
add
add
sub
cmp
fists
pushf
fcmovbe
lds
pop
mov
sub
outsl
mov
xor
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
scas
push
add
xchg
add
aaa
jb
pop
pop
sahf
push
mov
push
and
and
adc
jg
dec
mov
jne
addr16
lock
adc
sub
subb
jmp
pop
pop
es
jl
jb
jle
xchg
jmp
jno
iret
push
outsl
mov
push
data16
or
popa
push
test
mov
repz
in
rorl
imulb
in
mov
leave
outsl
mov
jp
fistpl
pop
nop
push
dec
mov
sub
mov
xlat
outsl
mov
fsubrs
jo
fldenv
pushf
jecxz
lds
sub
pop
lret
inc
mov
jne
xchg
aad
lea
jle
and
call
data16
jp
mov
out
sub
addb
add
inc
outsl
test
inc
and
lcall
xchg
cmp
aam
popa
mov
das
adc
sub
fwait
jp
ja
mov
stos
adc
and
xchg
jecxz
fpatan
das
movsl
stc
scas
mov
sbb
lea
lods
fistpll
xor
cmc
pop
gs
outsb
xor
aad
cmp
sarb
and
movsb
sub
test
outsl
lahf
push
mov
pop
cmp
repz
fstpt
inc
dec
arpl
repnz
lods
xor
mov
sub
mov
insl
sbb
inc
mov
lds
or
loope
lods
mov
dec
sahf
sub
fisttpl
das
xchg
pop
stos
setae
cltd
je
out
mov
std
jb
subb
gs
and
sbb
pushf
insb
iret
mov
adc
stc
mov
xor
pop
lds
mov
xchg
sub
lcall
cmp
lds
outsb
sbb
fiadds
insl
cs
push
sbb
xor
jnp
inc
or
push
xor
xchg
pushf
imul
insl
addb
int
fiaddl
test
pop
pusha
mov
pop
fldl
inc
inc
pop
imul
pop
or
dec
adc
fwait
push
push
pop
leave
data16
out
add
out
loop
push
inc
cmp
and
inc
sbb
fcmovu
les
sub
ja
inc
mov
mov
cwtl
aam
pop
inc
jle
dec
push
xor
mov
mov
pop
sarl
inc
notl
cmpsl
aaa
jo
jecxz
cmpsb
push
stos
imul
orl
imul
push
xor
es
lahf
cwtl
stc
mov
in
shl
jmp
iret
xchg
and
push
ss
jnp
and
repz
or
add
mov
cli
adc
aaa
into
pop
loope
jl
pop
dec
daa
jge
jns
fs
clc
hlt
das
inc
mov
mov
cmpsl
testl
adc
mov
or
inc
adc
lcall
cmc
inc
mov
loop
test
fwait
mov
cmp
fisubs
inc
cltd
sub
jmp
adc
dec
call
jge
scas
ret
or
add
fs
add
push
mov
ljmp
out
cmc
test
jge
sbb
aad
sar
ret
ss
scas
clc
pusha
sub
pusha
jno
jno
xchg
test
push
push
jae
test
and
sbb
fucomp
sub
xor
fildl
xchg
xchg
pusha
dec
jl
mov
sahf
mov
cld
mov
lahf
pusha
push
jle
lcall
push
mov
lcall
ljmp
dec
xchg
cmp
out
movsl
gs
cmp
add
pop
sbb
adc
or
jno
in
cli
and
mov
mov
xlat
cwtl
js
cmp
dec
addl
pop
fwait
sbb
mov
shrb
sbbb
dec
out
sahf
sbb
sbb
pop
lock
js
push
cmp
aaa
xor
and
shll
mov
jp
mov
push
nop
leave
pop
insl
jno
aad
or
mov
js
xor
dec
push
inc
mov
aaa
dec
movsb
addr16
add
loop
pop
repz
sub
jmp
jp
pop
add
cmp
lock
xchg
fwait
sbb
cltd
hlt
and
adc
and
es
cltd
inc
dec
add
insl
push
mov
inc
das
lret
xchg
call
mov
out
inc
mov
test
out
ret
xlat
rcrl
adc
pop
jnp
mov
pop
lcall
pushf
mov
jne
dec
dec
loopne
and
xchg
cmp
movsl
sbb
push
push
jne
mov
mov
aad
sbb
loope
hlt
movsb
aam
and
insb
orb
inc
jne
push
xlat
mov
and
int
mov
xor
xchg
inc
mov
push
imul
dec
push
call
cltd
push
inc
cmpps
inc
rorl
sub
icebp
fistpl
iret
scas
push
sbb
xchg
sub
xor
mov
test
mov
push
jmp
mov
and
sub
subb
pop
inc
aam
subl
cltd
popa
xchg
xorb
out
out
sbb
add
jl
sub
mov
cmp
add
jae
imulb
mov
fstl
les
adc
dec
pop
popf
jne
or
leave
mov
fsubrl
les
cmp
ja
movsb
gs
mov
inc
lods
je
adc
mov
and
jmp
mov
lds
pop
ja
fildll
or
dec
push
cmp
jle
xchg
and
lcall
cmp
daa
rcr
xor
mov
lret
in
adc
pusha
popa
jl
divb
and
stos
testb
add
ja
pop
mov
adc
adcl
mov
push
call
jno
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
and
add
mov
xor
xorl
or
jnp
sub
add
mov
jp
popa
outsb
lret
jnp
jae
sahf
add
stc
mov
aas
jmp
add
mov
roll
pop
int3
cltd
xor
idivl
rcll
loopw
cmpsb
dec
sub
adc
cmp
cs
lret
shll
imul
out
loope
sub
out
loope
out
sbb
rolb
mov
lds
and
push
add
dec
xchg
loope
xchg
xchg
int3
mov
and
loopne
xchg
scas
fs
adc
pop
and
or
das
mov
mov
rep
inc
mov
int3
pop
cmp
inc
iret
cld
ficompl
cmpl
ret
arpl
ds
mov
sub
cltd
imul
movsb
push
add
insl
shr
xor
push
xor
mov
mov
or
mov
inc
fistps
in
push
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
push
add
add
add
pop
sbb
push
imul
push
adc
xchg
bound
inc
lcall
push
push
lahf
mov
fisttpll
mov
sbb
add
mov
add
cmpl
mov
sub
add
xorb
xlat
stos
pop
push
cmp
in
mov
sbb
fildll
xchg
xlat
stc
mov
mov
inc
rcl
push
mov
mov
dec
push
fs
or
add
lahf
or
inc
popf
inc
pop
test
stos
push
lods
dec
stc
push
pop
seto
and
push
sti
fidivl
push
dec
xchg
or
popf
xor
pop
and
push
je
sub
ljmp
cmp
lcall
idivb
mov
cmc
loope
out
xorb
popa
popf
xor
push
fistpl
push
dec
pop
pop
inc
mov
lods
pop
addl
dec
jge
fstpt
pop
outsb
cwtl
sbb
repz
cmp
or
jge
pop
cld
shrb
inc
cmp
mov
test
or
inc
pop
int
pop
fwait
dec
out
std
pop
dec
aas
imul
xchg
mov
ret
outsl
push
adc
arpl
hlt
lcall
sahf
mov
sub
dec
rcrl
cmp
xchg
xchg
aad
xor
mov
pop
inc
jmp
sub
in
leave
aam
and
shlb
and
xchg
add
add
lret
test
lret
pushf
adc
dec
in
xchg
xor
loopne
stc
lret
mov
lock
jecxz
lcall
inc
hlt
sbb
sbb
dec
xlat
add
or
adc
pushf
xor
add
dec
inc
sbb
out
pop
sbb
pop
imul
in
shrb
sti
adc
xchg
jp
in
push
mov
jb
or
cmp
push
inc
in
es
xchg
loopne
int
mov
popf
ja
cmp
mov
mov
frstor
mov
xor
aas
into
adc
data16
push
push
stos
jno
xchg
or
inc
push
iret
into
lods
cmp
icebp
pusha
ljmp
aaa
bound
jb
mov
fldcw
insb
nop
movsb
lds
into
adc
lea
adc
inc
dec
xchg
pop
scas
imul
rclb
scas
fisttpll
dec
aas
pop
aam
daa
fadd
jge
iret
popa
fiadds
or
or
stos
mov
push
jo
dec
jp
mov
inc
mov
dec
push
adc
cmpsl
fistpl
jnp
xor
ljmp
stos
out
inc
xor
popf
testl
xor
xchg
int3
fisubl
inc
ja
pop
imul
inc
hlt
mov
aad
out
and
das
repnz
add
push
add
pop
mov
stos
dec
xor
aas
pop
sbb
out
ss
mov
mov
stos
es
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
add
jl
add
aaa
int3
in
cmpsl
cltd
mov
mov
pop
mov
rclb
push
and
cmp
dec
sub
scas
mov
cmp
xor
jne
dec
insl
cmp
pop
mov
rcl
popa
inc
cmc
and
mov
mov
shrl
mov
mov
sbb
and
push
icebp
xchg
lcall
dec
inc
shlb
imul
inc
ljmp
push
sbb
xchg
jb
fldt
jo
xlat
clc
pop
movsb
inc
sub
adc
cwtl
inc
in
mov
aas
mov
fimull
inc
or
jle
in
je
iret
jle
dec
pop
lods
fcoml
lock
sub
repz
gs
sarb
xchg
lock
fmuls
ljmp
jg
mov
es
mov
xchg
pop
testb
int
xor
aam
mov
in
scas
cld
ret
stos
fists
ss
and
shlb
lret
bound
int3
movsb
xchg
mov
mov
or
insl
pop
outsb
outsl
sbb
loop
mov
pop
je
adc
mov
sub
mov
arpl
jge
pop
pop
in
int3
mov
lahf
insl
and
adc
mov
xchg
iret
adc
idiv
xchg
inc
mov
cmp
jnp
fwait
mov
icebp
add
mov
dec
sbb
push
jnp
pushf
push
cmc
cs
jo
gs
sub
mov
cmp
fs
and
lahf
orb
loope
loop
mov
adc
lcall
addr16
outsb
mov
mov
add
xor
xor
scas
cmp
xchg
das
or
push
arpl
push
ret
sbb
add
push
fisubs
sahf
inc
adcl
popf
lahf
adc
les
push
int
mov
fdivr
out
add
cmp
pop
fdivrl
cmp
sub
cmp
cmp
stos
mov
push
leave
xor
fcoms
jo
sar
inc
or
sub
or
movsl
sbb
fists
inc
xchg
out
shll
push
in
nop
sub
popf
dec
jg
stc
and
inc
mov
fnstsw
test
or
movsl
xor
mov
decb
test
inc
dec
lret
fsincos
sbb
pop
add
dec
arpl
push
xchg
fcompl
lods
test
pop
popa
scas
fbld
movsb
mov
add
ja
shrb
int3
pop
je
mov
inc
lret
mov
xlat
stos
push
jmp
jae
dec
xorb
add
mov
adc
repnz
lods
imul
inc
aam
xlat
mov
fdivr
stos
adc
negb
data16
imul
and
push
push
into
jl
push
add
stc
push
inc
adc
jle
dec
imulb
loope
pop
cs
lea
dec
jg
out
mov
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
aaa
add
add
test
dec
pop
roll
imul
cmpsl
xchg
jmp
stos
loope
repz
jmp
cmp
ljmp
push
clc
inc
cmp
lret
dec
les
mov
pop
jge
cli
mov
jmp
xchg
and
xchg
outsb
insl
push
push
and
adc
inc
gs
and
shll
out
gs
ljmp
cmc
imul
mov
add
subl
dec
mov
jns
push
or
mov
mov
fs
mov
dec
or
mov
gs
or
out
and
add
mov
mov
jle
pop
sbb
jle
pop
pushf
fldl
sub
add
jmp
sbb
daa
push
mov
or
jo
and
mov
out
mov
icebp
aad
aas
or
pop
inc
xlat
cli
stc
pushf
xchg
inc
je
shl
mov
hlt
fwait
and
mov
stos
jge
push
jae
add
out
dec
shrb
subb
lods
jae
pop
mov
xorl
lods
or
pop
lds
inc
mov
mov
stos
ss
loopne
mov
ds
xchg
daa
pop
test
cmp
pusha
addr16
js
lea
mov
test
dec
fisttpl
das
dec
mov
inc
das
mov
fxch
jne
outsl
dec
andb
pop
mov
fidivs
daa
stos
orl
sub
popa
pop
jb
lods
fcmovbe
xlat
mov
loopne
and
hlt
imul
pop
inc
inc
sub
repnz
jns
xchg
fdivrl
sub
lret
add
popl
push
clc
mov
fildll
pop
xchg
gs
pusha
cs
outsb
in
inc
push
xlat
dec
scas
jns
xchg
int3
test
call
xor
insb
and
pop
xlat
add
outsb
push
mov
pop
scas
jp
movsb
fdivl
push
outsb
std
sbb
leave
push
js
outsb
inc
mov
push
adc
fdivs
xchg
cwtl
mov
mov
or
xchg
push
lods
push
mov
in
adc
fwait
mov
adc
dec
push
iret
lret
add
shl
cmp
xchg
sbb
xchg
loop
je
adc
mov
int3
js
es
xchg
nop
cltd
dec
enter
add
nop
mov
xchg
inc
int
out
call
popa
std
cmp
sub
push
cli
test
mov
shl
test
sub
sbb
jmp
add
xor
or
mov
cli
mov
cmc
xor
fisubs
mov
sti
mov
and
sub
in
add
sbb
push
add
stos
mov
out
les
mov
adcb
clc
mov
dec
mov
stos
push
inc
adc
sub
push
outsl
mov
std
nop
fisttpll
outsb
fsub
jne
daa
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
push
add
aad
add
xchg
ficomps
sarb
outsb
stos
lods
insl
int
pop
pop
xchg
dec
and
push
loopne
pop
push
das
aad
sti
addr16
push
pop
inc
arpl
push
addl
js
dec
lock
dec
dec
fldcw
int3
xchg
sub
jno
lods
ret
ret
lahf
push
jg
push
imul
dec
loopne
sbb
push
lds
mov
lret
inc
sub
sti
mov
push
subl
sbb
and
pop
js
stos
in
jle
nop
addb
adc
push
jae
inc
push
fists
imul
movsb
pop
lds
mov
or
xor
js
xor
dec
and
adc
pop
dec
jb
mov
add
sbb
ret
push
jnp
imul
push
in
mov
ljmp
imul
in
sbb
push
pop
jge
jge
test
aaa
jb
mov
rorb
mov
int
clc
cmpsb
mov
std
pop
insb
jns
and
push
and
lds
bound
push
mov
fwait
in
pop
repz
push
sbb
je
rcrb
jnp
cltd
mov
les
test
pop
lret
pushf
je
cmp
pop
push
andl
std
mov
in
mov
in
frstpm(287
xor
sbb
and
cmc
jg
or
fistpll
test
or
or
push
cmpsl
pop
aaa
mov
sbb
sub
lret
jae
push
imul
fists
pop
data16
enter
pop
xor
das
jne
cmp
jmp
and
orb
dec
dec
call
jecxz
sarb
loop
jb
out
or
decb
or
dec
das
out
test
cmp
lods
dec
mov
push
in
xchg
outsl
test
jnp
fsubl
inc
hlt
cmp
push
push
push
or
and
decl
fmull
inc
mov
movsl
enter
inc
pop
sti
shrb
dec
add
sbb
jb
cld
dec
ret
or
add
rolb
lahf
loop
adc
repz
sub
cmpsb
rorl
dec
loopne
add
dec
fisttps
xor
mov
rcr
or
in
mov
mov
sub
mov
pop
jno
xor
inc
xchg
inc
lret
push
hlt
or
xlat
lahf
pop
mov
sbb
xorl
xlat
xchg
sub
adc
iret
push
jg
ret
les
or
movsb
jge
push
pop
out
lret
sbb
pushf
push
mov
pop
push
in
adc
mov
jno
lock
neg
scas
cmc
dec
shrl
setl
dec
mov
pop
nop
inc
sbb
pop
adc
int
push
sbb
add
mov
and
pop
test
push
mov
xchg
int
fs
mov
xchg
cltd
cmp
and
mov
push
enter
mov
mov
dec
out
xchg
jl
mov
inc
xor
jbe
push
js
movsb
push
xchg
idivl
dec
push
mov
dec
push
mov
outsl
insl
and
js
out
dec
xor
jb
int
and
xchg
sbb
cmp
adc
cld
insl
push
fistl
inc
xchg
inc
dec
inc
xchg
adc
mov
popl
push
adc
and
mov
mov
push
rolb
pop
mov
loop
push
lret
mov
lahf
add
xor
adc
mov
cltd
movsl
hlt
and
mov
dec
pop
pop
push
add
mov
adc
xchg
decl
jg
fwait
popf
imul
cld
loopne
xchg
lea
daa
push
testb
pop
dec
sbb
pushf
xor
hlt
shrb
mov
inc
stos
jno
mov
adc
sbb
dec
and
add
int
jno,pn
inc
xchg
int
into
insl
adc
pop
pushf
cmpsb
cmp
mov
mov
xchg
add
or
adc
or
fidivs
inc
lret
idivb
pop
jecxz
and
cmp
stos
repz
add
lret
pop
daa
jnp
test
aaa
dec
mov
cld
sbb
lock
xchg
imul
pop
out
fstps
xlat
dec
xchg
mov
sbb
mov
iret
ljmp
jno
sahf
mov
xchg
ud2
fists
push
adc
lods
and
jg
fsubr
out
dec
mov
inc
fldcw
in
push
icebp
cmp
js
or
in
sbb
mov
mov
pop
xchg
xor
mov
push
and
lahf
lods
jns
sbb
dec
lock
sahf
das
stos
jecxz
test
in
mov
pop
push
repnz
inc
scas
mov
push
call
fsubs
cmc
das
xchg
cwtl
and
in
movl
mov
cmpl
cmp
lret
in
scas
push
movsl
jge
shll
push
js
insb
out
jns
icebp
cli
ja
mov
imul
jnp
or
xchg
mov
repnz
adc
jbe
or
jl
out
mov
scas
mov
pop
xor
cmpsb
xor
xchg
fisttpll
test
fmull
cltd
xchg
pop
mov
and
add
fsts
sbb
and
fcmovnbe
push
in
sbb
mov
int3
in
xlat
lret
sti
scas
mov
ret
out
pop
lock
jno
test
jbe
outsb
faddl
out
adc
and
mov
and
add
push
and
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
xor
add
scas
or
add
ret
cltd
scas
movsb
data16
dec
popa
in
mov
pop
xchg
pop
adcb
pop
std
andl
cmpsb
add
je
mov
xlat
sbb
repz
iret
push
stos
cmp
pop
xor
dec
call
push
insl
in
adc
cmpsb
mov
pop
inc
pop
adc
sbb
fisubrs
and
stos
shr
mov
push
xor
insl
pop
pop
push
mov
cld
pop
mov
dec
add
push
or
inc
aam
cmp
cmp
jle
pop
clc
repnz
sbb
out
sbb
addr16
cmpb
jo
jle
and
pop
sub
and
call
mov
push
enter
es
clts
repz
cltd
pop
xor
neg
jl
fdivs
dec
movhps
flds
add
adc
gs
xchg
out
or
sbb
idivb
lret
rcll
shrb
mov
xchg
repz
pop
cmc
hlt
or
leave
into
in
pop
dec
pop
shlb
pop
scas
sub
jne
ja
je
jno
popf
mov
out
xor
mov
cmp
and
popa
mov
cmovge
icebp
or
stos
jmp
or
jae
and
call
mov
push
cmp
leave
iret
inc
fisubrl
imul
pop
adc
rclb
sti
and
sbb
hlt
iret
jmp
stc
cmpl
mov
or
push
mov
dec
jno
mov
xlat
imul
and
aam
and
fcomps
mov
mov
js
hlt
mov
cmp
iret
mov
lcall
inc
or
jae
call
xchg
sbb
xlat
outsb
push
movsl
push
or
push
pop
pushf
xlat
inc
pop
sbb
mov
out
push
or
dec
inc
jle
or
jo
lods
push
lods
aam
cs
cli
fs
pextrw
xchg
cwtl
and
insl
pop
rorb
push
cmpsl
hlt
mov
mov
jp
mov
push
ret
xchg
mov
stos
jno
movsl
xor
mov
or
or
into
push
enter
adc
lods
jae
sbb
pop
and
dec
xchg
in
dec
in
sti
cmc
enter
jge
dec
jns
mov
lods
dec
dec
cmp
add
fdivrl
xchg
xlat
cltd
out
xor
and
mov
mov
clc
or
adc
out
mov
stos
cmp
cwtl
stc
add
ret
xchg
add
mov
sahf
inc
xchg
lea
mov
dec
fwait
cmpsb
test
jmp
popa
push
pop
je
std
cmpsb
leave
cmovne
rol
popf
fistps
sbb
inc
pop
div
add
std
popf
pop
loop
or
dec
mov
mov
adc
mov
shrl
daa
push
xor
aad
sbb
adc
imul
and
dec
leave
aaa
fstl
mov
outsb
test
loopne
adc
xor
push
xor
and
xor
push
add
mov
aad
outsl
dec
add
arpl
fwait
cld
out
pop
push
and
pop
ljmp
ja
mov
dec
movsl
test
mov
call
lcall
dec
xor
rcll
push
xlat
add
and
add
fsts
sub
push
fcompl
test
or
into
adc
xor
pop
mov
pop
jbe
xchg
jnp
pushf
pop
lahf
dec
aas
sti
cld
adc
sbb
sbb
test
xchg
ss
xor
cmp
ljmp
sub
jmp
adc
sub
lcall
mov
adc
inc
std
ss
adc
mov
sbb
scas
fwait
out
lods
out
sub
fcmovnbe
ja
shlb
inc
stos
lods
dec
icebp
gs
mov
push
js
iret
push
xchg
xchg
push
inc
push
mov
test
mov
arpl
sub
mov
xchg
movsb
mov
aad
mov
mov
pop
lea
hlt
sub
jae
cmp
add
mov
inc
ja
inc
sahf
inc
add
vsubps
out
ret
xchg
in
inc
pop
mov
mov
flds
insb
jbe
psrad
pushf
pop
popf
movsl
mov
xchg
popa
sbb
push
out
shlb
pop
jmp
mov
loopne
and
mov
das
arpl
dec
inc
or
pop
inc
inc
test
xor
inc
inc
adc
or
pop
xchg
mov
push
jno
scas
in
inc
adc
int3
lds
and
or
je
cmp
push
cmp
das
pop
mov
out
pushf
pop
lea
sub
jmp
mov
sbb
das
movl
jle
and
in
sub
xchg
clc
and
rorl
xchg
adc
jae
out
sub
cwtl
mov
mov
mov
pop
fisubl
mov
invd
or
jge
add
xchg
cmp
inc
mov
int
jne
mov
jbe
adc
xor
lret
jo
gs
cmp
pop
mov
and
and
movsb
std
mov
addb
loop
ja
movsb
stos
mov
adc
lret
push
cmp
shlb
adcl
aam
imul
fcomi
ljmp
jo
mov
dec
add
dec
mov
and
adc
sbb
inc
es
xorl
mov
movsl
ret
push
or
into
popa
push
mov
add
inc
xchg
sub
mov
es
or
divl
lret
push
cmpsb
inc
movb
dec
cmp
bound
mov
mov
cmp
jno
in
xor
inc
sbb
mov
jnp
sbb
or
or
xor
jnp
call
push
call
sbb
enter
cs
cmp
xlat
sub
in
das
push
rol
and
push
cmp
sbb
push
mov
cmp
mov
fsubl
inc
push
test
jge
dec
jle
push
fdecstp
stos
pop
mov
and
cmp
dec
rorl
and
pushf
cmc
test
lret
hlt
packsswb
dec
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
lahf
add
add
shrb
loopne
dec
jbe
xor
test
sub
add
sahf
cld
lcall
jg
sbb
push
sub
in
add
mov
subb
int
add
mov
ss
xlat
xchg
sub
jbe
fnstenv
adc
aaa
pop
scas
pop
xorb
mov
in
mov
add
ja
and
mov
fwait
add
subl
jp
addl
add
inc
icebp
je
dec
jo
inc
lahf
call
mov
rclb
cmp
cs
das
xorb
aam
mov
jecxz
jmp
fsub
jl
or
leave
movb
mov
aad
enter
lcall
inc
shll
push
fdivr
xor
cmc
xor
sub
xchg
and
leave
sub
decl
lcall
out
stc
xchg
and
dec
xor
ja
and
std
pop
sub
mov
inc
cmpsb
lcall
movl
and
les
jp
fistpl
movsl
and
pop
enter
gs
ret
sub
push
jae
divb
cmp
xor
jbe
lods
jmp
push
scas
mov
xchg
sbb
mov
iret
xor
ja
movsl
jns
mov
vpcmpgtw
jg
add
fldenv
gs
call
scas
inc
lret
sbb
inc
cmp
out
mov
test
sub
mov
pop
jae
movsb
adcb
inc
test
xor
repz
addr16
cmpsl
inc
pop
mov
ror
loope
iret
mul
stos
movsl
aas
cwtl
hlt
xlat
rcll
dec
in
insb
mov
stos
in
je
inc
jb
inc
rcr
dec
and
sbb
aam
insl
jne
xor
push
icebp
xor
mov
fadd
sub
dec
fldenv
in
es
dec
push
push
xchg
sti
sub
push
mov
jle
movsb
in
dec
cmp
adc
fidivl
add
out
pop
pop
out
in
aaa
call
mov
rolb
mov
or
scas
cli
jb
dec
f2xm1
lock
les
cmc
enter
cmp
icebp
lcall
inc
push
cmp
loope
lahf
out
adc
sub
scas
mov
out
arpl
dec
dec
jb
xor
jne
dec
jb
xor
jne
dec
dec
pop
add
or
add
adc
clc
aas
mov
lods
movsb
xchg
fistl
xorl
ja
movsb
jns
in
push
idiv
pop
inc
xchg
icebp
xor
mov
mov
popa
xor
jne
or
xor
jbe
fcomps
cltd
out
inc
je
jae
jl
mov
shl
fmul
sti
xchg
icebp
xlat
xlat
dec
jmp
mov
mov
and
mov
inc
pusha
test
icebp
mov
mov
jbe
mov
and
leave
cld
dec
pop
movsb
cmp
or
aam
fcoms
lret
fmull
xchg
ja
ret
push
mov
mov
enter
sbb
fdivr
pop
sbbl
rorl
fstpl
adc
xchg
iret
dec
xlat
inc
bound
stos
push
mov
mov
push
sub
or
aad
mov
mov
xchg
sbbl
sub
add
idivb
out
push
cmpsb
pop
mov
jno
push
xor
adc
push
jbe
jl
orb
inc
mov
clc
mov
ret
popf
icebp
test
lcall
rcrl
inc
push
rorb
fcompl
xchg
arpl
inc
fidivs
adc
ss
mov
mov
outsb
aad
jne
es
sbb
push
jmp
push
pop
faddl
scas
popa
push
lret
mov
rdpmc
data16
push
mov
push
push
adc
add
jns
lret
mov
jnp
cli
test
ret
andb
arpl
jbe
pop
clc
lods
stos
mov
push
jb
or
and
add
in
sbb
jecxz
jnp
out
test
inc
sub
repnz
lods
lea
in
lahf
outsl
aas
adc
fidivs
or
mov
insb
repz
imul
mov
divb
leave
les
xchg
adc
in
jmp
mov
add
lahf
adc
loop
div
popl
sti
loope
sbb
enter
and
stc
sub
popf
mov
in
into
mov
or
jmp
out
aas
and
jp
xchg
dec
dec
cld
mov
sbb
outsb
pop
add
iret
das
ficoms
cmp
sub
ret
xor
call
aam
mov
pop
pushf
inc
push
jle
mov
fadd
push
jbe
lret
xchg
jne
cmp
adc
adc
sbb
je
rcr
jno
aam
mov
cltd
loope
pop
std
mov
cld
mov
mov
jmp
sbb
sbb
jne
dec
mov
dec
stc
add
loop
lock
das
xchg
loope
pop
lret
idivl
jmp
cmpsl
popa
cwtl
mov
jne
loopne
bnd
xor
mov
xchg
mov
stos
fimull
insb
repz
cltd
sub
popa
pop
cltd
aam
movsb
fcoml
fildll
icebp
aad
mov
add
push
push
sbb
mov
xchg
adc
push
mov
ffree
mov
mov
out
nop
xor
cmpsl
pop
ror
call
xor
add
mov
push
sub
test
dec
inc
rolb
pop
mov
pop
mov
frstor
add
mov
mov
int3
push
jno
jb
loope
mov
fnsave
add
mov
pop
rorl
inc
in
aam
in
adc
lret
mov
out
aaa
shlb
call
sahf
sub
mov
cmpl
inc
test
sbb
lea
mov
call
mov
mov
andb
mov
mov
test
xor
cmp
cmpsl
or
lods
sahf
dec
inc
inc
out
pop
pop
cmp
es
test
in
int
cli
shll
add
mov
mov
stos
push
fdivl
or
int3
cmp
or
stos
out
xchg
or
clc
add
int3
cld
and
cmp
loope
pusha
dec
pop
test
test
clc
and
aam
stc
outsl
jno
jg
cmpl
push
lock
sub
inc
or
sbb
out
lock
mov
in
fdivrs
mov
ret
fdivs
jne
mov
jbe
iret
or
xchg
adcb
arpl
xchg
mov
sub
sti
lds
cmp
fisubrl
arpl
jge
jb
cmpsb
popf
adc
cmp
mov
push
push
sub
call
xchg
pop
daa
lods
jo
xchg
push
in
cmp
sbb
mov
fildl
cld
into
rclb
xchg
mov
dec
dec
jg
jp
shrl
mov
pop
mov
or
adc
cmpsl
jno
dec
lock
mov
fnstenv
push
push
inc
dec
sbb
out
stos
and
cmp
jg
ret
adc
int3
lahf
mov
test
add
cmpsl
sub
loope
ficoml
xchg
pop
test
fists
mov
dec
dec
mov
in
dec
mov
addr16
inc
adc
inc
cmp
cmpsb
stos
adcb
repnz
adc
push
pop
lods
test
les
std
stos
rclb
mov
mov
or
and
sbb
push
xchg
rorl
sub
or
jmp
outsb
loope
movsb
scas
movsb
out
idivl
sbb
addr16
repz
fstpt
jmp
aam
icebp
xchg
and
or
loope
aam
push
add
push
jge
jp
pop
jle
outsb
add
adc
xor
addr16
ja
sbb
cmc
frstor
loopne
jmp
pop
out
adc
xchg
imul
dec
xorb
pusha
outsb
jo
cmp
repz
sub
mov
loopne
inc
out
jae
pushf
mov
bound
lock
dec
sub
inc
into
add
int
cli
shrl
push
outsl
push
mov
jmp
imul
mov
dec
aaa
jmp
dec
out
enter
cmp
mov
jnp
or
and
sbb
inc
es
add
ja
push
cmpsb
out
cmp
je
dec
inc
ss
stos
mov
int
fildll
lret
inc
shll
mov
dec
ds
lahf
ficoml
iret
jb
jmp
gs
jb
add
cmp
movsl
mov
mov
ja
mov
add
inc
dec
ficoml
pop
mov
mov
xlat
push
pop
sub
aam
bound
xor
adc
mov
sbb
pusha
xchg
int
shl
push
mov
inc
ret
sub
add
mov
pop
adc
out
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
scas
add
add
push
add
lock
jle
cltd
dec
fbld
push
pop
dec
ja
stos
xchg
cmp
pop
outsb
jge
mov
mov
xorb
repz
push
and
dec
popa
mov
arpl
fs
push
pop
rolb
push
cmp
cltd
insb
mov
lcall
lods
movsb
aaa
inc
xchg
cld
data16
ficoms
cmp
ror
testb
jg
jmp
loop
jbe
in
aam
imul
fdivr
in
dec
pop
enter
mov
pop
jae
jnp
mov
mov
cmp
mov
mov
les
ja,pt
roll
lds
lea
jne
sub
jb
icebp
xchg
dec
xchg
cli
aas
dec
xchg
jmp
xchg
xor
mov
movsb
loopne
push
or
add
xor
cmp
int
push
ljmp
fcmovu
lret
xorl
xchg
lret
mov
lahf
outsl
leave
popa
adc
lcall
scas
outsl
and
xor
pop
hlt
mov
out
mov
loopne
insl
scas
ds
cmp
aad
adc
aaa
lds
dec
rcll
sub
les
ret
int3
rolb
xchg
out
sbb
add
les
push
popf
sbb
dec
mov
mov
lock
sbb
pushf
pop
dec
mov
pop
push
sub
sub
sub
mov
cmpsb
xchg
fwait
test
int3
das
xor
jne
iret
inc
and
mov
movsb
mov
xchg
dec
in
fs
mov
out
sub
imul
pop
push
adc
lods
out
fdivs
insl
sub
cmp
pop
sti
fnstcw
mov
mov
push
cs
sbb
jb
jae
outsb
mov
pop
in
aas
or
push
cmp
xchg
sbb
jne
fldl
aam
or
pop
pop
lds
mov
xchg
cwtl
push
add
pusha
inc
nop
das
mov
fwait
aaa
fistps
xchg
mov
sub
outsb
pop
data16
js
lods
push
clc
jo
enter
add
dec
lret
test
cmp
aam
sbb
sti
cmp
xlat
xchg
lock
push
scas
sbb
in
sbb
out
push
aaa
cmp
loopne
mov
cmp
dec
adc
and
filds
cs
pop
negb
xchg
in
loopne
jge
or
push
and
shlb
mov
and
popf
lock
sub
mov
daa
call
scas
mov
mov
imul
and
xlat
or
std
or
mov
ss
add
pop
push
cmc
mov
aas
fsub
push
loope
push
rcrl
in
ss
and
mov
lret
add
xchg
add
xchg
jmp
adc
outsb
xor
mov
scas
out
inc
jne
jle
xchg
mov
cmpsl
cwtl
lret
icebp
clc
movsb
inc
mov
inc
ja
mov
pop
outsl
and
add
scas
push
fidivl
lea
lds
jle
mov
in
push
and
into
mov
adc
test
dec
idivb
adcl
xor
lret
test
inc
xor
cli
mul
in
fisubs
in
adc
inc
or
aaa
pop
fstp
add
ja
insl
xlat
sbb
xchg
pop
arpl
jmp
xlat
jg
ret
subl
add
cmp
jae
dec
xchg
pop
pop
dec
sti
aas
enter
pop
sbb
hlt
cmp
pop
dec
stos
cmp
xchg
aaa
cmpl
mov
sahf
data16
mov
fldl
push
xor
loop
enter
sub
imul
sbb
iret
dec
decb
adc
sbb
push
lods
stc
and
mull
xor
sbb
in
nop
or
push
aad
mov
scas
imul
frstor
imul
cltd
pop
and
sbb
in
or
cmp
xchg
pop
pop
or
or
std
xor
scas
sub
insb
test
clc
mov
push
lret
outsb
jno
sbb
cmp
stos
mov
jp
push
stos
push
mov
aam
xor
lahf
mov
bound
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
adc
pop
add
push
sub
and
xchg
setns
push
iret
push
push
scas
xchg
push
mov
cmp
adc
mov
add
and
test
int
fcompl
fistl
push
sbb
les
popf
sti
add
adc
jne
sbb
rorl
sahf
inc
mov
dec
and
push
arpl
insb
sahf
inc
arpl
loopne
in
fs
repz
mov
mov
aad
add
mov
pop
cld
pop
adc
jmp
mov
out
sub
insb
push
pop
loop
dec
mov
xor
aas
cmp
repnz
sbb
jmp
xor
sti
pop
xchg
rorb
adc
cmc
imul
sbb
pop
xchg
mov
xchg
stc
fs
or
es
test
mov
in
adc
ret
inc
cs
jbe
dec
jnp
jo
push
pop
mov
mov
xchg
mov
stc
aaa
xchg
mov
out
shl
movsl
and
add
mov
mov
mov
ljmp
cld
xor
movsl
xchg
or
xlat
pop
repnz
fisttpl
pop
pusha
gs
inc
jnp
sti
xchg
push
pusha
out
sahf
std
inc
lds
jg
and
mov
jae
and
inc
cmp
leave
clc
sub
push
je
push
push
push
es
in
add
sahf
jnp
fs
icebp
in
inc
ds
add
mov
mov
cli
adc
fs
mov
pop
push
es
push
xchg
sbb
lock
pop
ljmp
lods
in
imulb
jbe
push
mov
or
jmp
pop
or
imul
jb
inc
jb
xor
jo
repnz
pusha
add
lods
ja
push
js
fistpl
popa
push
xchg
inc
aad
mov
test
xchg
sbbl
scas
in
push
enter
nop
or
jnp
enter
test
movb
aad
adc
xor
stc
cmpsl
scas
pop
leave
or
roll
aas
leave
and
out
call
popf
adc
cli
xor
adc
xchg
push
ds
cmp
sbb
movsb
cli
faddl
in
inc
test
cwtl
addr16
jp
sub
fwait
pusha
push
mov
popa
pop
mov
add
in
pop
sub
mov
jnp
sahf
jbe
leave
sub
pop
pop
xor
inc
mov
xchg
loop
dec
pop
shlb
add
xor
xor
mov
mov
movsl
push
testl
mov
shl
das
out
into
fdiv
pop
cmp
data16
stos
aaa
popf
or
push
pop
sbb
fwait
sbb
leave
lahf
loopne
andl
into
sbb
xchg
push
aad
aad
shll
jnp
push
pop
fsubs
pop
sbb
inc
test
cmp
mov
adc
cmpsl
arpl
imul
out
or
push
sub
imull
daa
popa
mov
or
iret
mov
jg
stc
sub
cwtl
xor
adc
adc
test
push
pop
shl
mov
pop
sarb
lods
call
push
cmp
insl
push
sti
adcl
sub
mov
es
mov
and
clc
inc
out
lock
mov
add
or
dec
add
repz
dec
out
lcall
sbb
rcrb
and
rorb
inc
mov
cmp
sti
in
push
ret
xor
xor
popf
orb
jle
and
sbb
stos
push
mov
sub
test
pop
insb
loop
mulb
pusha
mov
ret
or
cld
cmp
je
cmpb
pop
mov
ljmp
sub
shll
je
xchg
test
pop
repnz
decb
clc
icebp
xor
xlat
je
mov
lods
in
gs
lock
adc
add
cmpsb
out
and
cmp
xor
pop
out
cltd
sub
stos
push
cmc
rcrb
adc
xchg
int3
cs
into
dec
pushf
fmull
int3
cmpsb
sbb
mov
rorb
sbb
mov
leave
push
mov
add
jle
stos
roll
pop
cli
mov
mov
icebp
dec
mov
add
pop
mov
mov
fldcw
mov
out
ljmp
dec
shl
jle
xor
adc
aaa
negb
stos
lods
xor
stos
push
aas
ret
insb
pop
and
lods
imul
jg
mov
sbb
bound
mov
mov
and
add
pop
inc
add
cld
lds
mov
orb
add
lods
mov
ds
inc
add
mov
mov
ss
leave
pop
scas
cmp
fisubrs
bound
fcomi
out
hlt
lods
loopne
cmpsl
mov
ljmp
in
ljmp
imul
cld
sbb
mov
shll
xor
or
push
in
dec
pop
sahf
push
aam
jbe,pt
pushf
scas
lods
mov
sbb
xchg
mov
out
daa
addr16
outsb
cmpsb
nop
dec
push
addr16
dec
je
pop
jne
sub
icebp
inc
fmull
cmc
xor
sbb
bound
xor
leave
sti
jge
movsl
lods
shlb
shlw
dec
les
or
fdivr
jne
outsl
sub
cmp
dec
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
inc
add
add
add
add
or
movb
pushl
nop
fildll
ss
lcall
sti
repnz
ficomps
daa
mov
pop
xchg
das
pop
or
js
scas
enter
sti
cs
rcr
adc
pushf
clc
pop
jae
and
pop
cmpsb
fildll
mov
dec
sub
mov
mov
push
inc
and
cltd
mov
mov
sahf
repnz
sub
add
cs
incb
jl
outsb
mov
ss
sub
andb
lods
or
les
lea
pusha
add
dec
xchg
stos
test
dec
mov
out
pop
test
ret
adcb
fadd
push
aaa
or
insl
cmp
das
scas
popa
loopne
jecxz
aaa
sub
leave
adc
sbbb
push
jle
in
jbe
imul
fsubr
dec
leave
add
sbb
inc
sub
in
mov
jno
lahf
popf
push
add
mov
sub
pop
adc
inc
mov
lahf
mov
push
jbe
and
or
out
push
and
inc
mov
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
add
add
add
clc
mov
test
inc
dec
xor
in
jle
push
jae
rcll
fsubs
inc
outsb
cmpsl
push
rorl
outsl
inc
cmpsb
xchg
lret
cld
sub
in
mov
or
int3
fs
in
lret
test
mov
push
sbb
lods
add
lahf
mov
pusha
xorl
or
add
xchg
out
push
outsl
fldcw
sub
cltd
mov
lahf
inc
push
adc
leave
and
cltd
pusha
xchg
adc
stc
sarb
xchg
sub
nop
pop
std
movsl
scas
ss
popa
aad
or
enter
mov
push
ds
movl
loope
sub
insb
pusha
xchg
out
aad
mov
and
dec
fwait
or
push
jge
xchg
ret
iret
jp
in
iret
insb
or
cmpsb
mov
and
data16
inc
xchg
lcall
shlb
movsl
sti
movsl
jo
pop
pop
dec
hlt
outsl
aad
inc
jmp
mov
hlt
ficoml
sbb
das
jg
cwtl
push
mov
call
aam
ja
insl
stos
mov
bound
cli
clc
jle
scas
cmp
pop
addr16
pop
sbb
jne
clc
lock
and
adc
pop
pop
dec
lods
pop
inc
hlt
fiadds
outsl
xchg
shl
bound
rorb
or
repz
mov
inc
sbbb
arpl
push
mov
popa
lods
bnd
or
fbstp
push
int3
call
sti
jne
inc
xor
push
fs
cmp
cwtl
cmpsb
leave
jge
shl
jbe
jp
sti
cmp
ret
ret
and
popf
cmpsl
xchg
cmc
pop
add
imull
jbe
sbb
sbb
pop
sbb
fucompp
out
je
push
movsb
dec
pop
test
mov
adc
data16
std
mov
or
pop
lret
int3
aam
loop
mov
lret
ret
outsb
dec
fstps
insb
push
test
xchg
add
sub
into
mov
push
jne
dec
mov
mov
subl
sub
mov
jbe
jmp
mov
rcrb
imul
sub
div
frstor
fstpt
push
jns
cmpsb
mov
and
add
fcoml
cwtl
sub
sub
pop
addb
jns
sub
and
and
adc
shl
outsb
stos
mov
lea
outsb
xlat
pop
jno
aaa
mov
inc
pop
mov
sbb
imul
pusha
sti
xchg
jo
pop
out
sub
sbb
dec
sarl
into
mov
and
jns
out
sub
fsubl
ljmp
mov
lods
push
xorl
repnz
lret
xchg
divb
dec
inc
sub
push
insb
push
mov
fistpl
rcrb
jno
mov
inc
sub
scas
cld
adc
into
jbe
jmp
dec
add
dec
xor
inc
and
nop
test
clc
loopne
add
int
insb
addr16
xchg
dec
je
test
inc
push
mov
adc
xchg
movsb
fs
cmp
inc
popf
je
addr16
add
mov
cmp
mov
jbe
fs
mov
jne
dec
jb
xor
jne
dec
jb
xor
insb
push
add
stc
push
add
fstl
gs
add
adc
pop
and
fldenv
shr
cmpsb
mov
jecxz
test
inc
xchg
mov
add
ljmp
sbb
or
jns
lret
lds
push
or
addr16
xlat
andb
test
pushf
ss
clc
mov
jo
mov
mov
mov
int
ror
jnp
sbb
arpl
dec
lea
hlt
out
push
mov
rcr
leave
ja
ud1
mov
cmovs
mov
mov
leave
mov
out
push
jnp
push
fstpl
rolb
push
in
push
inc
ret
push
push
outsl
mov
xchg
aad
cmc
mov
cmp
push
cmp
push
shrd
int
add
outsl
jecxz
cwtl
mov
adc
xor
lods
in
mov
fiadds
sbb
leave
push
repz
imul
stc
vpsubusw
dec
js
push
jg
adc
mov
xchg
xor
adc
mov
enter
lds
adc
cwtl
jl
es
jge
sti
test
dec
pop
aad
pop
dec
test
lea
push
xchg
ljmp
inc
sbb
jmp
notb
imul
adc
push
sub
in
push
addr16
cmc
and
mov
jns
lea
and
rorl
std
and
dec
mov
leave
push
and
cld
sbb
lds
adc
mov
push
in
xchg
mov
dec
push
push
sub
lret
jne
fmull
out
dec
push
leave
gs
jecxz
cmp
insl
pop
das
call
cltd
lea
mov
sahf
mov
jecxz
aaa
add
push
jns
mov
inc
movl
aaa
inc
test
xor
fsubrs
mov
lds
enter
mov
add
xor
loop
arpl
loope
pop
dec
aam
pop
test
and
or
inc
or
and
inc
inc
mov
lods
adc
adc
or
pop
fimull
fidivrs
mov
adc
mov
cmp
lret
dec
adc
jns
adc
or
adc
flds
pop
notb
fwait
xchg
das
push
and
inc
xor
push
cmp
dec
mov
dec
sbbl
lahf
xor
jecxz
fcmovu
lods
popf
lds
sub
hlt
dec
mov
outsl
les
sbb
inc
cmc
stc
sti
push
fsqrt
lods
negl
mov
push
pop
sahf
lret
cmc
mov
add
mov
xor
pop
push
pop
out
xchg
cmp
stos
loop
test
out
lret
add
inc
inc
scas
lds
push
dec
aaa
xor
xchg
cmpsl
mov
push
inc
pop
mov
cwtl
xor
aad
rep
mov
add
sub
daa
lea
sub
xor
std
xor
xchg
in
pop
fndisi(8087
aad
dec
dec
xchg
pop
mov
jg
pop
push
push
xchg
out
xor
sbb
sub
jge
add
stc
push
jp
out
int3
in
insb
xchg
rcrb
repnz
outsl
imul
inc
insl
movsl
stos
inc
mov
jp
test
jge,pt
insl
pushf
outsb
dec
push
rolb
popf
inc
andl
pop
call
insl
jmp
sahf
xchg
xor
mov
shr
imul
je
nop
rcrb
fcompl
mov
cmpsb
jbe
jo
fistpl
ret
sbb
mov
jg
leave
mov
mov
pop
imul
push
aam
test
out
dec
xchg
sti
lret
ss
daa
jne
leave
sbb
loop
pop
mov
popa
clc
jmp
js
cmp
inc
loopne
fs
sub
dec
repnz
push
dec
mov
divl
xor
sub
fcoml
pop
outsl
xchg
cmp
mov
les
xchg
aad
imul
pop
loopne
add
aaa
cli
mov
jg
mov
sbb
dec
int3
ror
je
daa
out
fstpl
aad
jl
sahf
addr16
es
lret
lahf
bound
dec
fsubl
lret
sub
les
mov
jecxz
push
cld
adc
lcall
popa
aas
xor
lahf
out
test
mov
push
add
test
pushf
popa
out
mov
addr16
ds
jne
xchg
fcmovu
mov
lret
lds
rol
aaa
mov
out
out
sbb
pop
jecxz
daa
sub
push
dec
inc
or
xchg
dec
pop
pushf
and
xlat
jmp
dec
or
hlt
push
jns
pop
je
insl
xor
xchg
push
leave
pop
cmpsb
push
xor
mov
mov
adc
pop
imull
cmpsl
push
movsl
int3
jb
test
dec
out
xchg
mov
popf
cld
dec
das
mov
inc
movsl
repz
and
fdiv
dec
push
cwtl
jmp
std
fstpt
push
aad
inc
aas
xchg
ja
adc
gs
fsub
test
js
dec
mov
pop
ss
mov
xchg
or
stc
and
mov
pop
sub
xchg
pop
leave
sbbl
je
sbb
mov
and
fcomps
xor
fisubrs
test
inc
pushf
mov
or
arpl
inc
ds
lea
adc
jmp
scas
sbb
xor
andb
inc
or
jbe
dec
push
push
sub
pusha
adc
mov
rorb
repz
mov
ret
or
in
inc
rclb
pop
pop
and
stos
movsb
and
mov
stc
icebp
pop
out
xor
mov
mov
jg
loope
mov
pushf
fs
xchg
mov
orb
movsb
add
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
add
add
add
das
dec
pop
les
jae
aaa
pop
pushl
rorb
push
mov
call
cmc
or
and
pop
mov
mov
sbb
lods
idivb
adcl
mov
ja
stos
inc
mov
jl
inc
and
insb
shll
mov
test
outsb
add
test
jbe
aas
and
lcall
inc
jl
fidivrl
out
imul
pop
cmpsb
test
sbb
sub
xchg
or
xor
or
sub
add
mov
cmpsb
movsb
test
aam
int3
aas
mov
mov
add
xchg
fnsave
and
mov
lahf
dec
adc
out
cmp
xchg
imul
xchg
fprem
stos
fiadds
in
sahf
popa
icebp
sbb
fstl
mov
andb
and
movsb
sbb
fnsave
xchg
xchg
sub
pop
pop
aad
movsl
dec
jmp
lea
sub
lods
mov
xchg
mov
repz
shlb
arpl
shlb
ja
add
stos
push
mov
das
push
push
mov
cmp
inc
cmpsl
jns
jl
jg
push
mov
push
aad
mov
mov
xor
mov
scas
pop
cld
hlt
cmc
mov
cmc
sub
inc
jg
mov
jge
iret
xor
xchg
push
add
push
out
sbb
jnp
outsb
jge
mov
jbe
jns
dec
mov
ret
mov
test
fdivrl
pusha
loope
xchg
test
sub
in
or
aaa
jmp
dec
rol
out
insb
popf
pushf
orl
fldlg2
test
pop
xor
ficompl
add
push
add
shlb
notb
stos
fcomps
imulb
mov
fildll
xchg
pop
adc
rcrb
jnp
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
add
in
add
add
add
jns
sub
jmp
push
dec
add
cmpl
shll
xorb
shll
pop
sub
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
mov
push
add
scas
enter
cs
sbb
jbe
jecxz
loope
fnsave
shlb
xor
xchg
cmp
in
cmp
and
ss
sub
mov
cmp
inc
xchg
sbb
mov
bnd
push
int3
lahf
xchg
xor
lcall
in
inc
cmpl
push
pop
jp
stc
xchg
scas
clc
in
or
or
lods
repz
ss
stos
push
cmp
pop
orl
scas
call
jmp
aas
push
cmp
in
ljmp
decb
stos
push
jae
mov
xchg
hlt
rclb
scas
push
leave
push
es
popa
dec
and
fisttpl
xor
and
xchg
imul
mov
jno
rclb
or
orb
sbb
sahf
dec
xorb
repz
xor
jno
out
jp
outsl
dec
xorb
jbe
cmp
test
ret
xchg
or
lea
sbb
test
and
xor
pop
rorl
pushf
mov
rcll
movsl
inc
sub
jle
mov
or
lods
and
or
xlat
inc
jp
cmp
addr16
mov
cwtl
sbb
xor
sti
dec
icebp
adc
push
push
fdivp
jecxz
movl
and
aas
popf
in
lea
adc
inc
ret
sub
outsl
add
xchg
adc
test
sbb
fisttpll
pushf
push
enter
push
sub
aad
ret
repz
jecxz
cmp
fcompl
mov
mov
jge,pt
mov
sub
lds
mov
jge
lahf
push
lds
aad
lods
add
ret
mov
sbb
push
mov
dec
add
push
jge
dec
pop
repz
push
ja
push
test
push
xchg
fucomp
mov
xchg
adc
sbb
nop
imul
sbb
bnd
push
xor
ss
push
mov
sbb
aas
test
lods
popa
std
cmp
cmpl
xchg
jno
outsl
and
jnp
hlt
insb
mov
sbbl
test
cmpsb
repz
into
mov
aad
sbb
cmp
dec
jp
jge
sbb
test
xchg
pop
push
in
sub
cmp
movsb
imul
mov
test
mov
iret
cmc
roll
mov
jnp
loopne
push
sub
xor
pop
mov
jo
imul
les
xor
lods
pop
push
cmpsb
jno
cmpsb
jl
ds
fnstenv
cli
lock
sahf
loopne
rorl
xchg
shll
cmp
add
repnz
std
push
dec
sahf
mov
fisubl
sub
xchg
push
jnp
push
hlt
jbe
lret
ljmp
insl
jbe
or
hlt
inc
insl
sub
ljmp
mov
adc
popa
add
push
shlb
pushf
leave
inc
sbb
popf
gs
test
mov
xchg
subl
in
fwait
add
daa
lcall
dec
fwait
movsb
repz
cmc
mov
lods
fisubl
outsb
loope
ljmp
mov
hlt
ss
sarl
loope
repnz
lea
test
add
out
mov
xchg
test
cltd
andl
idivb
lahf
or
popa
add
fs
pushf
mov
xchg
dec
mov
pop
mov
aad
pop
ljmp
xor
sub
mov
jge
into
negb
pop
ss
sub
addr16
xor
test
dec
enter
mov
pop
sub
cmp
insb
sub
test
sub
sbb
rcrb
mov
loopne
loop
inc
out
inc
add
dec
aam
xchg
push
clc
mov
xchg
popf
add
test
cwtl
or
mov
dec
inc
subb
dec
pop
xchg
mov
shlb
mov
xlat
mov
xor
and
mov
adc
mov
pop
ret
mov
lock
push
lret
lods
in
lock
mov
add
mov
push
inc
out
push
test
movsl
andb
imul
lahf
xchg
dec
jmp
pop
pop
and
sbb
nop
fisubl
pop
jp
in
cli
jne,pt
mov
pop
arpl
jns
nop
fcoms
pop
adc
fucomi
nop
fistps
lods
or
inc
adc
data16
cwtl
loope
push
sub
cwtl
mov
sbbb
clc
stos
add
jl
arpl
push
or
mov
fstpl
test
outsb
hlt
sub
cmp
sub
add
jp
pop
and
int
push
stos
es
sub
and
repnz
mov
mov
pop
cmpsl
xchg
xor
inc
mov
add
or
dec
add
push
int
cmc
enter
je
gs
push
add
push
mov
add
sarl
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
push
add
mov
data16
fbld
scas
sahf
pop
xchg
insb
movsb
mov
mov
int
inc
sti
xchg
sbb
fsts
mov
pop
pop
push
mov
add
mov
test
push
xchg
cltd
lock
fdivr
aam
rol
cwtl
cmp
push
inc
das
adc
jl
sub
fcomp
inc
fwait
adc
xor
cmpsl
lea
jl
pop
xor
mov
adc
enter
push
pop
sbb
popa
mov
jbe
mov
pop
ret
aaa
loopne
jmp
sbb
les
mov
adcb
mov
or
je
call
sbb
jle
movsl
std
inc
mov
in
lahf
outsl
cmpsb
and
pop
cwtl
add
gs
loopne
pop
clc
sub
out
into
adc
cwtl
jecxz
inc
test
dec
fs
pushf
into
loopne
lcall
xlat
jnp
jecxz
and
pop
les
js
push
js
adc
pop
subps
push
cs
mov
add
cmpsl
andl
lods
pop
add
std
out
xchg
repnz
xlat
inc
imul
cmp
mov
inc
push
std
inc
mov
xor
shll
adc
std
test
mov
mov
cli
clc
clc
aas
ret
pop
xor
je
lods
mov
cs
mov
sar
ror
mov
mov
lcall
xchg
cmpb
mov
push
adc
sub
add
push
adc
push
call
mov
ffreep
mov
mov
jb
jnp
mov
and
mov
gs
stc
stos
add
mov
jecxz
cmpsl
in
cmp
insl
and
popa
mov
lret
sub
inc
fwait
sub
mov
dec
xchg
sbb
inc
lods
sub
test
mov
and
xor
cmpsl
je
imul
fsubl
call
loopne
stc
jg
mov
xchg
and
cmc
xlat
mov
paddw
and
pop
lret
sbb
mov
pop
sti
fiaddl
cmp
ds
imul
stc
push
sub
sbb
pop
repnz
ljmp
inc
push
pop
sbbl
add
lret
and
fadds
orb
dec
enter
jns
inc
jmp
xchg
mov
dec
scas
mov
es
mov
hlt
inc
mov
mov
xor
mov
nop
mov
lahf
lods
sub
cmc
jl
dec
push
jmp
xor
xor
jg
in
sbb
bnd
adc
cwtl
mov
cmp
adc
xchg
icebp
test
inc
das
mov
rcr
loop
popa
shll
adc
pop
dec
jnp
sub
iret
mov
jmp
jae
adc
xchg
and
xor
adc
es
push
xchg
ret
popf
push
test
push
cltd
arpl
and
outsl
in
pop
stos
inc
loopne
and
cmpsb
fstl
adc
in
outsb
lds
lods
inc
loopne
cmpsl
loopne
das
or
mov
push
loop
cmp
sub
xchg
mov
fmulp
mull
xor
xchg
mov
insl
add
loop
loopne
cmp
cs
in
xchg
fsubl
and
ret
test
dec
jl
inc
mov
push
or
mov
or
and
nop
rolb
les
xchg
dec
pushf
mov
sub
loop
ja
outsb
push
adc
iret
mov
lods
cmp
stos
leave
adc
push
pop
jne
dec
in
xchg
mov
add
cmp
jno
bound
gs
shrl
clc
jp
sti
movsb
cmp
mov
insb
int
int
mov
add
into
lret
in
pop
mov
rep
mov
movsb
hlt
idiv
aaa
jne
adc
out
pop
hlt
fs
jb
je
xchg
xchg
add
aam
mov
or
dec
pop
in
sti
mov
fsts
xchg
sbb
and
fimull
test
das
and
sub
mov
pushf
inc
aam
andb
dec
push
into
jne,pt
ficoml
inc
or
repnz
mov
lods
dec
inc
cmp
stos
jne
pop
jmp
mov
imul
orb
stos
jge
nop
dec
stos
or
push
shll
jo
test
dec
jecxz
add
fwait
insl
roll
orl
repnz
adc
mov
dec
add
mov
push
fcoml
and
mov
cmpsl
push
push
int
dec
push
adc
mov
decb
pop
mov
inc
pop
pop
push
aad
xor
adc
pop
jmp
in
xchg
mov
cmp
dec
mov
out
out
dec
mov
aaa
jb
push
jg
adc
or
rclb
adc
push
cmp
cmc
mov
test
cmp
xor
pop
push
xchg
test
inc
xor
pop
sbb
aam
add
les
lahf
and
data16
int3
fwait
xchg
add
loope
jno
xor
test
icebp
sub
lret
xchg
test
adc
iret
pop
mov
inc
adc
cmp
ds
cmp
and
nop
push
stos
ret
adcb
jo
fsubrl
mov
out
cmp
xchg
jo
inc
in
int3
mov
out
push
mov
mov
add
mov
push
inc
adc
cld
gs
inc
ss
ds
jb
xchg
xor
ret
mov
pop
and
inc
sbb
xlat
push
push
icebp
les
mov
mov
xor
popa
and
xchg
pop
xor
jge
fs
cmp
inc
jnp
mov
sub
inc
imul
mov
jl
cwtl
and
js
mov
mov
fidivl
mov
pop
fnstsw
mov
fistps
jp
add
int
pop
pop
fs
daa
mov
lahf
stos
lret
push
and
inc
imul
adc
and
xor
sub
gs
out
clc
jo
jl
xlat
mov
mov
push
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xchg
add
add
add
jp
xchg
jne
scas
lret
das
lret
stos
mov
cmc
push
jl
mov
jmp
mov
imulb
and
jne
movsb
adc
movsl
xor
cwtl
lret
sub
push
cwtl
xor
xlat
pop
fmulp
jmp
or
hlt
fwait
lods
scas
es
movsl
and
add
fs
negl
pop
mov
sbb
imulb
or
mov
scas
xor
das
pop
rolb
xchg
loopne
pop
dec
inc
stos
adc
sbb
fwait
jno
push
enter
sbb
ret
push
xor
popa
sub
jge
pop
jge
sti
dec
shll
jle
mov
js
jmp
stos
add
push
cmpsb
push
push
fistpl
in
repz
ret
push
adc
roll
xchg
sbb
addr16
and
push
andw
jnp
ljmp
mov
ja
adc
xlat
dec
xchg
adc
lcall
loope
shrl
add
mov
enter
fwait
push
mov
jbe
popa
cmp
jae
cmp
jp
in
in
imul
enter
jns
mov
xor
dec
leave
call
ret
dec
or
insl
push
scas
in
out
ret
in
xchg
jb
push
sbb
loop
adc
jg
mov
jge
ret
jbe
inc
sarb
add
popf
mov
push
add
cmpsb
jp
mov
mov
pop
ds
mov
call
dec
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
add
add
add
add
or
std
fucom
sub
pop
imul
fwait
jne
out
cwtl
xchg
mov
or
mov
jmp
or
sbb
mov
leave
jle
jge
popa
js
mov
or
aad
in
sub
dec
or
pop
bound
dec
outsl
popa
popl
icebp
push
lock
sbb
adc
mov
repz
shrb
push
or
daa
pop
testl
fsts
jle
xlat
pusha
out
fnstcw
out
xchg
outsb
lahf
lds
leave
sbb
or
jo
inc
mov
rcrl
mulb
ret
add
popf
divl
and
xchg
jp
cwtl
loope
scas
push
and
dec
lret
jno
insb
scas
into
cmpsb
push
lock
outsl
jns
fxch
sub
fstpl
xchg
inc
dec
pop
jecxz
leave
jp
enter
xchg
loop
push
aaa
movsb
in
mov
lahf
xor
lcall
adc
push
out
roll
and
xchg
mov
ret
mov
out
adc
loop
cmc
dec
and
or
dec
sub
or
scas
xlat
cli
ret
jge
mov
jl
push
sub
fstpt
push
dec
mov
lret
mov
mov
pop
push
daa
out
xchg
push
inc
and
sub
test
mov
cwtl
mov
pop
inc
add
pop
lahf
jge
in
fs
push
sub
pop
push
inc
jnp
dec
ror
loope
or
push
js
jnp
sti
sbb
cmp
sub
xchg
out
inc
pop
xchg
inc
outsl
aam
clc
jmp
xor
add
shll
loopne
fcompl
push
data16
add
mov
movsl
cmc
out
out
jge
jmp
rorb
sbb
loop
cmp
lods
pop
stc
arpl
cmc
fs
pop
rcll
popf
insl
stc
jge
cmp
outsl
mov
addr16
scas
xchg
mov
int
call
aam
mov
ds
cmpsl
dec
pop
mov
btr
out
imul
pop
mov
insl
insl
and
fimull
sbb
imul
addr16
ret
pop
jle
fcoml
dec
rcrb
jnp
xchg
mov
adc
mov
mov
push
pop
movsl
jnp
push
in
xor
cmpsl
int
sub
xchg
push
xor
and
lods
dec
lods
shlb
test
xor
add
jmp
test
in
shrl
jge
and
insb
emms
jnp
ret
out
jmp
push
sbb
cmp
out
xchg
popa
dec
mov
mov
sbb
sarb
shld
ret
cmpsb
sub
mov
in
pop
lods
int3
mov
pop
mov
or
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
and
add
sti
add
add
test
push
bound
test
push
push
out
mov
cmp
mov
insb
cmpsb
add
cltd
call
push
jmp
lcall
inc
cli
leave
bound
mov
pop
ds
xchg
cmp
jnp
jge
dec
add
and
dec
cmpsb
fnstcw
cmp
je
jnp
xchg
adc
pop
add
or
lock
aas
inc
xor
jae
cmpb
cmp
inc
jmp
test
xlat
and
in
rcl
dec
push
out
idivb
fcmovb
imul
pop
cmp
loop
pslld
aas
arpl
mov
dec
jl
pop
mov
rol
adc
add
dec
pop
loopne
xchg
imul
jg
push
mov
cld
jmp
mov
psubq
aaa
fbstp
add
lea
ja
pop
xor
loop
iret
mov
pop
inc
mov
dec
jnp
xlat
and
push
xchg
cmp
or
sarl
jb
nop
sub
mov
inc
adc
lods
test
ret
aaa
es
xor
sarl
pop
les
xor
in
jecxz
call
fadd
pop
icebp
pop
xor
jo
jecxz
jbe
inc
mov
cmp
mov
cmc
mov
push
in
dec
aam
or
jno
sub
push
sahf
jl
test
adc
mov
mov
aad
jne
mov
jbe
lock
inc
fmul
jle
in
aam
test
xchg
outsl
jno
fldcw
pop
cmpl
clc
gs
mov
dec
movsl
jge
jge
out
jle
xor
lret
xor
lods
lods
shr
sarb
xor
xchg
ret
and
jno
imul
scas
rcrb
adc
xor
aad
ret
mov
or
dec
imul
insb
cmp
add
das
dec
arpl
aaa
mov
test
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
mov
add
sub
add
stos
out
xor
push
sbb
and
hlt
js
shl
les
lock
mov
rcrl
mov
sbb
xor
fimuls
push
sbb
lea
adc
out
pop
rcr
inc
aas
enter
fnstenv
cli
jns
push
push
imul
jle
and
jns
xor
sahf
jg,pn
pop
mov
pop
mov
ss
add
es
inc
jo
mov
icebp
mov
add
sub
movl
cmpsl
shll
jl
cmp
sub
mov
movsl
sti
or
xor
sbb
xchg
daa
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
lcall
add
inc
fcmovnb
int
cmpb
jle
sub
adc
pop
pop
cs
call
insl
pop
movsb
dec
aas
push
cmp
out
mov
pop
mov
aam
pop
inc
push
decb
or
inc
adc
adc
cmp
inc
jl
pop
push
mov
xchg
mov
sub
aam
mov
xlat
call
mov
ret
dec
lods
jnp
xchg
fstpt
scas
xor
jmp
fs
faddl
imul
xor
in
sub
iret
xchg
divb
ds
pop
lcall
cli
adc
adc
cmpsl
stos
loop
insb
cmp
in
jge
orb
cmp
xchg
clc
lret
sbb
add
fstps
add
aam
cmp
and
mov
mov
lods
shlb
loope
xchg
mov
cld
fistps
int3
dec
popf
pop
add
ret
dec
sbb
cld
dec
or
dec
insl
jp
jl
das
add
mov
shll
lret
dec
repnz
add
pushf
pushf
or
aam
mov
cmp
jle
sub
pop
xchg
mov
mov
ljmp
movsl
cmpsl
and
out
cwtl
cwtl
and
jne
movsl
xor
insb
push
jbe
cmpsb
fsubp
stos
push
pushf
or
mov
arpl
lea
pushf
push
pop
popa
dec
add
lods
subb
cltd
pop
lds
and
or
add
mov
cwtl
sbb
in
outsb
mov
push
in
stos
sarb
repnz
repz
and
xchg
dec
orl
inc
mov
sbb
push
cltd
stos
or
mov
pop
mov
or
xor
mov
cmp
fcomp
mov
jle
movsb
xor
jns
imul
and
js
into
repz
cmp
jbe
inc
adc
mov
into
adc
pushf
data16
fadd
les
mov
mov
mov
es
and
fisubrs
mov
sub
je
test
test
cmp
test
int3
pop
or
rorl
and
sub
lods
imul
mov
lods
jmp
mov
mov
icebp
adc
incb
mov
hlt
and
popa
dec
scas
fcoms
jge
mov
in
outsb
and
fdivp
pop
test
xchg
xchg
fbstp
cmp
sti
and
jge
or
sbb
cmp
loop
orl
xor
cmpsb
add
add
sub
and
and
xor
insl
jb
mov
xchg
mov
or
lds
std
movsb
or
mov
out
or
adc
pop
push
sbb
mov
pop
inc
ljmp
sbb
cltd
adcl
adc
pop
imul
fcomp
mov
stc
in
push
dec
push
sbb
cmp
out
xchg
dec
mov
inc
jbe
iret
or
pop
mov
sbb
mov
mov
repz
aam
mov
dec
mov
inc
add
shlb
mov
dec
lods
cmp
or
scas
inc
mov
negb
cmpsb
leave
mov
xchg
xchg
and
mov
mov
jmp
cmp
insb
std
sbb
mov
mov
push
sub
imul
xchg
sub
mov
inc
out
add
in
push
xchg
shll
mov
mov
pop
inc
pop
fbstp
sub
push
sbb
mov
mov
push
inc
push
enter
das
in
js
cwtl
push
mov
adc
mov
inc
inc
dec
cmpsb
clc
push
inc
xchg
mov
xchg
mov
rcrb
ret
andb
and
in
sub
hlt
xchg
push
sarb
mov
jbe
pop
fldcw
mov
xor
cmp
lret
xor
and
push
fmull
lcall
adc
pop
mov
daa
mov
loopne
adc
xor
imul
fbstp
outsb
push
icebp
fs
mov
lods
cmp
push
pop
lds
int3
imul
mov
movsb
mov
xchg
dec
testl
cli
repnz
mov
add
cmp
xchg
addb
add
pop
out
and
fmul
inc
mov
lds
lods
dec
mov
add
icebp
pop
mov
ficomps
mov
cli
sub
inc
xchg
mov
into
dec
pop
in
add
xor
mov
mov
test
int
cs
xor
xor
or
dec
fcoms
jmp
das
jmp
imul
mov
imul
std
cmp
jge
sahf
mov
sbb
xlat
sub
cmpsb
mov
fs
mov
sti
aaa
dec
xor
xor
fcoml
or
sbb
mov
jb
mov
sub
dec
mov
jge
fdivrl
mov
and
iret
xchg
push
pextrw
popa
jmp
test
inc
cmp
xchg
sti
push
into
inc
mov
xor
jb
shl
cmp
xor
inc
xchg
andb
int
cmp
adc
xchg
push
stos
jp
jnp
or
dec
arpl
push
popf
fwait
test
and
int
imul
inc
or
fnstenv
xchg
jge
in
mov
inc
lods
gs
mov
jp
mov
cwtl
push
ljmp
adc
cmpsb
lods
aam
and
test
or
or
or
xor
xor
cltd
mov
lea
xchg
movsb
loopne
push
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
mov
add
add
jmp
outsb
je
sbb
and
xor
push
repz
cmpsl
loop
push
sub
ljmp
fcoml
inc
jmp
jne
or
mov
flds
jo
shr
sub
mov
pushf
pusha
xor
xorb
test
xlat
std
xor
jns
push
enter
mov
and
jnp
fmulp
icebp
fwait
sub
or
or
loop
jne
ljmp
cmp
fsubp
notb
ss
mull
setae
ljmp
movsl
fstpl
mov
into
mov
es
dec
cwtl
loopne
loop
mov
cmp
loop
cmp
addb
inc
push
add
inc
cmp
pop
sbb
adc
add
mov
fwait
or
es
insb
inc
mov
sbb
pop
mov
cmpsl
inc
add
lahf
shll
sbb
lods
dec
xchg
repz
adc
jl
add
pop
mov
insl
xchg
xchg
sub
and
jecxz
cmp
scas
inc
nop
ret
int3
jnp
add
cs
xlat
sahf
pop
sbb
xchg
jge
xor
cmp
out
imul
and
insb
xchg
jl
mov
push
ss
adc
rcrb
divl
loopne
mul
mov
sub
adc
sub
sbb
dec
je
mov
push
sub
push
cmp
mov
repz
mov
in
adc
lea
mov
addr16
push
pop
push
mov
add
mov
jo
mov
pop
cltd
adc
lods
insb
ds
scas
jl
frstor
push
inc
or
sbbl
aam
push
mov
mov
repnz
idiv
and
outsb
testb
fisubrl
shlb
mov
call
fs
push
mov
dec
add
scas
outsl
jg
mov
inc
lods
cmc
pop
push
mov
stos
pop
cld
mov
mov
or
xor
loopne
add
jle
mov
hlt
or
mov
add
cmp
sub
xor
cli
jge
leave
ret
pop
es
mov
stos
mov
mov
insl
inc
pop
cmpl
mov
pop
outsl
jbe
arpl
inc
mov
ds
clc
jne,pn
int3
sbb
mull
lea
mov
jmp
int3
aaa
test
mov
adc
add
sbb
mov
insb
adc
ljmp
or
or
mov
inc
pop
mov
mov
es
jle
shrl
call
scas
add
sbb
in
es
loopne
adc
xchg
inc
sub
insl
imull
sub
adc
rcl
test
aas
mov
and
adc
in
lods
testb
and
sub
addr16
mov
pop
int3
gs
and
sbb
lret
pop
decl
imul
sti
and
cwtl
push
fsubrl
outsl
sub
das
outsl
and
movsl
movsl
loop
ret
push
pop
lods
jmp
fldl
inc
inc
mov
cmp
mov
std
sahf
jae
jecxz
in
out
pop
inc
fwait
xchg
jb
pop
or
repz
lret
and
fldenv
or
fildl
adc
mov
sahf
or
rolb
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
add
add
lahf
aaa
mov
in
movsl
mov
sub
mov
pop
in
xchg
loopne
movsb
ffree
pusha
cmpsb
xchg
pop
popa
jne
and
call
xor
cwtl
dec
test
or
std
cld
pop
daa
icebp
pop
rcrb
cwtl
sahf
lahf
imul
add
cltd
out
sbb
jge
mov
dec
dec
sub
hlt
push
ficoml
popl
add
repz
adc
das
mov
clc
mov
mov
inc
repnz
and
cmpsb
fldcw
xchg
jg
xlat
ljmp
sahf
inc
xchg
inc
stos
lea
sarb
xor
leave
sar
xchg
jno
pop
lcall
lds
rcrb
leave
sbb
cltd
repz
jno
mov
dec
and
fdivrs
mov
rcl
js
add
push
sub
dec
testl
and
xlat
test
js
scas
rol
icebp
stos
sbb
adc
dec
ret
push
mov
cmp
cmp
clc
jo
fisubrs
in
in
into
ret
cmc
and
mov
add
mov
scas
pop
and
cmp
inc
aas
or
in
repz
dec
loop
rcll
dec
cmp
sbb
es
mov
mov
and
pop
nop
bound
stc
sub
loop
nop
fwait
imul
lock
mov
push
mov
loop
jns
pop
add
cli
gs
xchg
scas
and
xchg
andb
push
sti
xchg
mov
stos
jle
jmp
rorl
inc
test
adcl
sbb
rcll
cmpsb
xchg
std
jecxz
pusha
jb
leave
dec
jb
loope
push
decw
sub
or
movsl
daa
cwtl
jb
xchg
push
mov
pop
mov
add
aas
dec
jecxz
jae
lds
jle
jecxz
test
inc
dec
and
aam
push
lea
xchg
stc
repz
cmp
mov
mov
jge
ds
lcall
bound
lahf
cmp
ljmp
cmp
xlat
js
jae
hlt
in
lahf
pop
adc
sahf
or
call
mov
imul
iret
gs
push
xchg
inc
in
xchg
xchg
push
xchg
xchg
mov
scas
flds
inc
jmp
add
xchg
pop
dec
mov
add
push
f2xm1
into
lods
pop
outsl
fcomip
movsl
inc
dec
sub
mov
xchg
jmp
shll
sbb
cmp
and
lock
jb
xchg
fistl
xchg
mov
push
popf
pusha
push
jnp
lock
loope
and
cs
mov
push
inc
fstpt
xor
pop
xor
adc
lret
jnp
scas
scas
fisubl
insl
cmp
std
sub
xchg
jl
inc
mov
scas
xchg
lds
or
mov
hlt
pop
adc
inc
mov
jns
popa
arpl
pop
subl
xchg
imul
push
inc
xor
jb
cmp
push
es
mov
sti
xor
jne
pop
jb
xor
cli
pop
addr16
mov
xchg
cmp
rcrl
clc
jl
jl
xor
xchg
pop
push
test
clc
cmpsb
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
sub
add
add
arpl
and
jg
pop
sti
cmpsl
pop
aam
rcrl
leave
push
push
ret
push
push
dec
lret
arpl
les
push
testb
cmp
xlat
sub
jb
addr16
mov
push
add
mov
pop
je
out
mov
or
mov
push
jge
mov
jno
loopne
lods
fnstenv
xlat
je
out
call
int
fdivrp
fcoml
gs
jbe
xor
mov
add
cwtl
repnz
iret
pop
test
subb
mov
mov
cltd
into
add
mov
lds
repnz
mov
daa
xor
test
dec
xchg
and
rcll
xlat
subb
adc
pop
popa
add
sbb
test
je
ror
imul
or
jmp
fyl2xp1
ss
loope
in
fisttps
xchg
mov
clc
jle
jecxz
ds
paddq
inc
cmp
cmp
movl
push
xor
xchg
std
sub
dec
cltd
data16
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
add
out
add
add
push
cmpsb
sub
sahf
pop
sbb
scas
fucom
cltd
fucomi
sbb
shl
adc
jbe
cld
xor
jae,pn
sbb
ret
cmc
leave
rcl
sub
xchg
loopne
fs
adc
lock
lea
mov
sbb
mov
dec
inc
push
stos
xchg
or
xchg
scas
mov
pop
pop
fsubs
aad
sahf
or
cwtl
xor
push
cli
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
lcall
add
sub
sbb
push
fisubl
cmp
sub
mov
outsl
sbb
lea
add
push
mov
neg
xchg
pop
mov
jo
inc
adc
cmp
jl
xchg
outsb
fwait
iret
xor
jmp
fwait
mov
mov
mov
sbb
jbe
fcoms
fistps
jl
imul
adc
fistl
adc
ret
jns
call
or
dec
cmp
mov
ss
shrl
imul
jne
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
ljmp
add
addb
pop
jmp
sbb
pusha
inc
repnz
or
test
insb
pop
int3
nop
es
movd
lock
sti
push
rep
popa
lret
adc
jle
mov
jp
add
adc
shrb
ret
test
aas
xchg
dec
or
add
sub
pop
mov
jnp
cltd
dec
add
xchg
in
jbe
push
insb
add
mov
inc
loope
sbb
pop
mov
push
xchg
cmp
or
imul
ss
pxor
push
mov
mov
sbb
dec
mov
mov
mov
push
std
push
xchg
jne
push
xchg
adc
add
jmp
jae
push
pop
cld
addl
dec
int
jge
sbb
mov
shr
mov
adcb
roll
adc
sti
ss
jl
data16
inc
dec
hlt
pop
mov
sbb
add
adc
jp
jp
push
push
inc
arpl
and
xchg
arpl
add
xchg
mov
push
dec
je
inc
lds
subl
addl
xor
pop
jle
cmpsl
outsb
imul
sub
push
or
cmpsb
ja
test
sub
sbb
imul
sbb
pop
and
mov
addr16
rorl
ja
push
pop
nop
addl
arpl
and
cmp
shlb
mov
outsb
movsb
or
out
stos
iret
ret
lods
sub
dec
pop
lods
enter
imull
pop
jo
je
fdivrs
outsb
mov
xor
popf
xchg
mov
scas
shl
shr
movsl
fdivl
mov
test
push
mov
rcrl
lcall
outsl
fstl
adc
loop
dec
data16
gs
pop
add
shlb
lock
add
fnstsw
add
and
fmuls
daa
and
hlt
mov
ret
and
sarb
xor
enter
xchg
push
outsl
pop
loop
dec
jno
pushf
mov
shl
sbb
les
jns
scas
add
xchg
movsb
out
adc
test
cmp
ret
sti
and
sbb
mov
jo
leave
es
mov
lret
xchg
lcall
push
pop
cld
std
repz
adc
cmp
xchg
cmp
adcb
xchg
loope,pn
cmp
pushf
enter
lret
in
inc
dec
out
mulb
adc
xor
ds
js
xchg
ljmp
xchg
pusha
mov
addr16
addl
lods
inc
fs
mov
fnstcw
call
cmp
out
sbb
pop
aam
stos
sbb
mov
das
pmaxsw
xchg
add
out
jmp
fs
outsl
ss
scas
inc
divl
mov
into
cli
or
dec
adc
push
mov
rolb
cmp
push
fmulp
add
pop
add
frstor
pop
jne
adc
mov
hlt
cmp
popa
hlt
push
out
or
lea
inc
xchg
stos
clc
add
fcoml
cmpsl
push
or
int3
jo
loop
mov
push
fs
cwtl
leave
shlb
fisubl
movsb
dec
or
pop
nop
jbe
inc
mov
dec
addr16
jp
insl
sub
lods
adc
out
adc
andb
adc
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
mov
add
xchg
add
xchg
mov
dec
mov
and
mov
fs
mov
pop
pusha
jnp
push
jge
mov
aaa
cwtl
pop
cltd
and
clc
lcall
mov
xchg
push
mov
nop
mov
add
pop
imul
and
js
xchg
mov
jns
push
loop
adc
dec
xchg
daa
lcall
mov
or
into
les
pop
sbb
or
mov
push
pop
xor
fnsave
nop
add
mov
cmpsb
sub
sarb
and
arpl
mov
push
lahf
mov
aad
push
fdivl
adc
and
jbe
mov
or
jb
jl
pop
in
add
dec
rolb
fimuls
or
ja
hlt
nop
ljmp
data16
adc
test
test
cmp
jp
popa
testb
sbb
adc
adc
dec
jno
sahf
test
or
je
lcall
mov
iret
adcb
pop
dec
xor
fadd
add
mov
aad
out
pop
sbb
ja
xchg
add
test
dec
mov
shll
sub
mov
mov
jbe
test
scas
or
out
mov
pop
aad
je
inc
scas
mov
fmuls
xchg
push
jo
sti
jmp
inc
cmp
push
call
js
push
pop
dec
fyl2x
push
pusha
jo
push
sbb
sbbl
sbb
jle
imul
mov
pushf
daa
pop
in
je
pop
or
test
lret
imul
rolb
ja
movsb
pop
dec
jae
testl
imul
jbe,pt
adc
inc
sub
mov
pop
pushf
pop
in
add
cs
in
arpl
lock
xchg
std
sti
lret
cmc
scas
sbb
pop
mov
in
lea
cs
in
mov
add
mov
and
pop
fs
push
loope
xor
pusha
jmp
or
cmp
inc
mov
shrb
enter
lea
leave
shrb
fcomip
lods
sub
imul
push
add
je
cmpl
add
or
or
mov
and
xchg
in
ljmp
inc
out
sbbb
roll
or
jl
ss
mov
in
jb
push
loopne
dec
mov
scas
xchg
nop
jno,pn
pop
out
outsl
mov
mov
sahf
mov
xchg
dec
mov
dec
mov
stos
and
out
push
call
enter
sub
flds
dec
call
cmp
scas
pop
sub
xor
add
dec
or
call
add
int
jmp
or
push
les
int3
lret
mov
int
push
dec
movsl
xchg
sbb
jecxz
iret
push
pop
push
and
mov
rolb
or
jmp
jbe,pn
fwait
out
xor
fadds
xchg
xchg
aas
mov
jle
fwait
les
incb
jmp
fidivs
int
ficomps
arpl
mov
push
mov
testl
pop
sbb
pop
sub
adc
sbb
sub
andb
cmp
iret
xor
or
add
mov
aas
pusha
sub
add
push
pop
clc
pop
push
push
out
pushl
cmp
sti
jmp
push
add
adc
out
mov
mov
ds
aaa
sub
jp
call
pop
jbe
pop
push
fwait
mov
nop
das
scas
sbb
ljmp
dec
xchg
mov
push
int
mov
jp
inc
dec
sbb
addb
push
ret
lock
fwait
xlat
dec
into
sbb
or
bound
cmp
mov
sbb
xchg
pop
movsb
lret
adc
cmc
push
sbb
test
nop
jmp
out
out
push
mov
inc
out
lret
xchg
in
pop
cmp
into
xchg
mov
add
xchg
imul
lahf
pop
mov
stos
int3
adcb
aaa
cli
insb
push
test
lds
movsb
dec
cmp
inc
movsb
js
pop
test
push
or
sbb
dec
rcll
testb
mov
adc
mov
pop
stc
add
lret
sub
mov
and
sbb
add
xor
out
xchg
jge
and
hlt
sbb
mov
out
adc
push
dec
cmc
ss
insb
aad
or
cmc
mov
leave
mov
sbb
jl
xor
cmc
testl
sub
scas
jmp
xor
aad
cmp
out
lfs
mov
cmp
push
test
leave
subb
into
in
mov
es
jle
ret
xor
add
pop
mov
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
add
add
add
loop
fiadds
xchg
push
adc
and
sbb
xchg
in
jmp
mov
mov
nop
das
and
cltd
xchg
mov
shll
aas
xchg
xor
mov
pop
fldl2e
sbb
inc
in
push
xchg
pop
sbb
test
or
hlt
adc
icebp
mov
jecxz
stos
idivb
and
adcb
lcall
rclb
repz
mov
aad
sbb
js
and
pusha
notl
mov
adc
int
inc
jmp
pop
xchg
sbb
add
outsl
cmp
inc
ror
cmp
pop
icebp
pop
fisubrs
cmp
rorb
jle
jae
sbb
pop
mov
das
lock
stc
insb
mov
gs
repz
cmpsb
faddl
mov
jne
xor
mov
popa
sarl
or
ret
pop
icebp
gs
or
sbb
data16
mov
add
das
dec
xor
or
pop
in
scas
jg
fists
add
mov
ficompl
lahf
jae
sub
out
shlb
xor
and
insb
push
cmp
pop
push
adc
cmc
fstl
mov
push
xlat
pop
sbb
je
push
andl
fnstcw
sub
mov
loop
dec
aad
sbb
push
cld
and
xchg
stos
cwtl
cmp
adc
mov
mov
in
call
sbb
lcall
cltd
mov
sub
in
ret
push
jne
testb
mov
aam
push
filds
fnclex
jb
mov
jecxz
or
mov
jg
xchg
stc
lods
and
fs
inc
daa
test
mov
fsubrl
repz
mov
cs
stc
ds
dec
arpl
sbb
pop
adc
mov
outsb
insl
sub
leave
insb
lea
push
nop
pusha
lret
cmp
cs
lret
dec
loop
or
rcll
jg
faddl
das
pop
jno
or
and
cmpsl
push
push
int
fmull
arpl
mov
addb
mov
jg
xchg
adc
jbe
jecxz
popa
pop
out
cld
or
movsb
add
sbb
test
mov
repz
out
xchg
xor
popa
jge
sub
or
xchg
and
mov
les
mov
orl
jecxz
jmp
stc
jnp
pop
adc
imul
mov
addr16
pop
imul
fdivrl
jp
jp
test
out
mov
out
pop
push
pop
ficomps
aam
adc
adc
xlat
adc
fs
or
lods
jns
cmp
sarb
and
ss
out
jne
push
mov
cld
or
lods
or
out
hlt
nop
in
jnp
std
mov
sbb
leave
xor
sub
lret
dec
cli
shll
loope
pop
add
test
fldenv
mov
in
or
pusha
pmullw
pop
inc
imul
aas
fstps
pop
je
sbbl
adc
outsl
lock
mov
js
jmp
jmp
fwait
iret
mov
mov
cmpsl
pop
mov
mov
push
imul
xor
repnz
mov
or
loop
add
orl
ret
mov
inc
jmp
addr16
mov
xor
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
push
pop
add
inc
or
add
dec
sbb
mov
fisttpl
or
notl
movl
mov
pop
push
dec
icebp
pop
stos
or
mov
cmp
inc
popf
imul
sbb
movsb
xor
std
jle
nop
add
xor
jno
jge
or
popf
xchg
das
mov
fs
add
add
jbe
ret
mov
lcall
sbb
jns
fistpll
std
pop
or
arpl
hlt
daa
out
sub
mov
push
or
push
push
hlt
cs
rclb
push
aad
dec
sar
and
xchg
and
repnz
adc
xchg
aaa
push
movsb
loope
int
jae
inc
pop
xchg
xor
outsb
out
mov
aas
scas
cltd
in
popa
xchg
push
mov
mov
sti
mov
pop
insb
pop
cmp
and
sbb
ficoms
scas
cmpsl
pop
fcomip
mov
jno
jno
pop
lock
dec
pop
ret
adc
sub
dec
xor
fisubs
aad
jns
mov
icebp
inc
and
cwtl
in
imul
dec
or
out
sbb
lcall
loop
repnz
popf
stos
and
mov
out
lahf
filds
mov
fs
in
clc
add
int
ja
inc
push
andl
xor
jge
cmpsl
mov
cmp
mull
rcrl
mov
push
xchg
pop
sub
cmp
sbb
cmp
dec
imul
int
mov
in
outsb
mov
pop
idivb
adc
push
adc
adc
pop
xor
in
loope
mov
popa
mov
mov
lret
dec
int
push
push
jp
sub
lods
sub
mov
mov
fsubl
push
pop
popa
sahf
popf
jno
cltd
aad
mov
xor
sub
mov
lret
mov
push
sub
lcall
addr16
in
jo
and
jp
jge
mov
dec
aad
imul
popa
mov
and
and
imul
sar
mov
mov
jnp
scas
ror
push
stos
pop
mov
shrb
add
dec
cwtl
jae
je
or
mov
or
add
out
add
or
cmp
adc
scas
pusha
aaa
mov
outsb
subb
sub
inc
push
push
xchg
ficomps
rorl
ja
add
push
ljmp
cwtl
outsl
testl
mov
mov
push
sub
xchg
sub
in
cld
jno
and
sbb
cmc
lret
rcrb
sbb
shll
out
aad
gs
fstp
ss
xchg
fstl
push
fiaddl
enter
xchg
mov
fs
in
pop
es
xchg
mov
mov
lds
cmp
xchg
lock
add
push
int
mov
ljmp
cmp
mov
add
into
or
jns
sub
dec
mov
sbb
mov
stos
sbb
inc
movsb
das
or
add
lcall
push
pop
insl
enter
lahf
jno
jns
push
xor
jmp
adc
fwait
mov
mov
imul
imul
dec
pop
jnp
dec
mov
cld
pusha
add
xchg
mov
out
cwtl
xchg
in
jmp
in
jno
lahf
mov
sub
scas
test
push
scas
push
dec
jg
inc
test
loope
and
test
andb
dec
dec
ja
sti
cmpsl
mov
test
inc
popf
xchg
ja
xchg
mov
xchg
enter
ror
adc
sti
sbb
test
es
mov
pusha
xchg
cmp
mov
movsl
bound
iret
daa
iret
pusha
mov
or
call
push
mov
or
jl
push
inc
inc
jns
fstl
mov
in
and
cmp
shll
loope
jbe
push
dec
push
lcall
sahf
mov
pop
pushf
mov
push
pop
mov
testl
mov
cltd
xlat
icebp
and
push
pop
adcb
loopne
inc
sbb
or
mov
adc
pusha
lods
xor
shl
jp
inc
dec
call
push
or
adcb
fistpl
icebp
fwait
push
int3
sbb
aaa
push
cmc
add
and
cmpsl
mov
aas
adc
jp
inc
mov
cmp
mov
je
xchg
sbb
push
sub
sub
ret
adc
cld
dec
jle
lahf
sbb
ja
and
cltd
es
xchg
lods
rclb
jbe
fldt
les
es
pop
icebp
push
out
aam
lret
popf
pop
das
mov
clc
outsb
or
popf
outsl
outsl
lds
les
stos
shll
mov
pop
cmpb
sub
pop
mov
fs
jle
mov
cli
loopne
in
jecxz
push
xchg
lcall
mov
aam
cmp
sub
lcall
sbb
pop
lock
aam
sub
sub
jg
iret
loop
sub
jne
or
xor
and
pop
or
pushf
xor
outsb
mov
push
aam
lret
adc
and
adc
loopne
xor
push
mov
in
dec
add
shr
jns
and
rcrb
and
loopne
dec
mov
or
push
pop
pop
inc
mov
push
ljmp
inc
mov
pop
scas
or
cld
outsb
dec
insl
and
call
pop
xchg
sub
xchg
xor
call
call
xchg
pushf
mov
and
push
mov
hlt
fstpt
imul
popf
inc
inc
mov
mov
xor
in
fwait
out
xor
ret
dec
or
clc
and
cmpsl
cmpsb
mov
cld
adc
fwait
jo
mov
lods
mov
rcrl
mov
fs
dec
imul
in
cwtl
add
das
lds
je
xchg
mov
daa
and
shl
mov
pop
dec
xchg
lret
cmpsl
arpl
int3
test
jo
pop
mov
sub
inc
lret
mov
leave
and
push
ja
icebp
and
aas
adc
cmp
or
mov
mov
es
pop
int
fcompl
sub
add
lret
test
roll
sbb
and
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
push
add
add
pop
test
stos
aaa
adcb
jl
mov
mov
mov
cmp
out
ret
scas
out
xchg
inc
and
sbb
cmp
pushf
cld
pop
mov
aaa
add
sub
loope
push
lret
jo
xchg
xchg
pop
lods
mov
test
sbb
pop
add
mov
mov
es
or
jne
scas
or
add
pop
js
push
lock
inc
jge
dec
xor
js
push
lcall
sbb
jae
and
test
fidivrl
out
push
test
int
xlat
mov
xchg
lea
push
dec
dec
xor
mov
and
inc
pop
adc
adc
fcmovnbe
negb
inc
xchg
loopne
fisttpl
and
adc
cmpsb
sar
in
lcall
pop
scas
cmp
jg
add
es
outsl
mov
test
inc
pop
xor
pop
lahf
mov
fwait
push
mov
icebp
mov
push
addr16
xchg
mov
dec
push
aam
or
jmp
int3
insb
lea
inc
int3
mov
or
cmp
jo
gs
sbb
add
jp
mov
cmp
dec
adc
push
xor
rorb
dec
mov
push
mov
cmp
push
push
sbb
arpl
lahf
testl
rclb
inc
mov
inc
imul
bound
dec
fwait
push
jb
ljmp
sbb
bound
add
and
test
in
sbb
push
jmp
push
mov
push
pop
cmp
mov
popf
sbb
in
and
xchg
push
mov
pop
jno
push
lds
jmp
shll
xchg
push
mov
cmp
movsl
inc
stos
testl
or
cmp
shll
test
cs
loop
lret
lret
sbb
loopne
movsb
les
and
std
sbb
scas
or
test
lcall
sub
sti
or
jns
sub
cmp
xlat
mov
sbbb
jle
or
ffreep
push
mov
nop
ja
mov
cmp
xchg
xor
in
cwtl
and
into
das
lret
addb
hlt
mov
into
cs
les
in
mov
cmp
pusha
jns
roll
imul
out
mov
add
popf
addr16
icebp
aaa
out
and
loop
sbb
and
lea
mov
mov
adc
or
xchg
outsb
pop
xchg
fnstsw
jns
lods
pop
shr
push
cmp
push
mov
mov
cmp
add
mov
jp
imul
jmp
cmp
or
cmp
pop
mov
fsts
mov
les
mov
adc
mov
lods
add
dec
xchg
xor
cs
std
and
and
and
adc
cmp
lock
add
mov
cs
xchg
pop
adc
outsb
add
in
jecxz
mov
vmread
bound
mov
sub
push
shll
test
rolb
scas
jmp
fildl
imul
xor
js
ret
js
fsubrs
stos
pop
lcall
out
xor
dec
pop
aas
incl
addb
inc
xor
test
orl
dec
and
mov
dec
pop
push
ret
mov
stos
lcall
mov
sub
les
pop
add
sub
mov
fidivs
or
push
pushf
add
jle
xchg
xchg
mov
ret
push
or
sbb
sub
mov
data16
decl
mov
movl
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
pop
add
and
add
repnz
push
movsl
mov
ret
sbb
bound
lahf
push
or
fistpll
sbb
pop
cmpsl
cwtl
xchg
or
add
add
sbb
int
adc
sarl
sub
sbb
sti
add
in
pop
xchg
pop
add
pop
cmp
fwait
jecxz
outsb
fisubl
mov
popf
nop
cmp
int3
out
stc
push
sbb
jle
pushf
repz
cwtl
sbb
dec
adc
into
call
loopne
mov
xchg
and
or
lcall
inc
in
xchg
jmp
sbb
roll
mov
dec
mov
leave
xchg
dec
jno
movsb
leave
mov
gs
int
xchg
sbb
repz
je
mov
mov
jle
push
das
daa
aaa
jnp
inc
push
mov
clc
hlt
mov
add
mov
shll
dec
in
sub
adc
fistps
bound
lods
rorl
sub
mov
repnz
xchg
mulb
xorb
call
jle
inc
daa
fsubrs
and
jge
aaa
movsl
stc
pusha
gs
mov
adc
push
clc
inc
xchg
sbb
dec
xor
jp
jge
push
sti
icebp
inc
gs
xor
outsl
or
fwait
daa
mov
fwait
movsb
leave
cmpl
dec
pop
xor
fs
xchg
rorb
pop
bnd
adc
hlt
mov
mov
adc
bswap
test
xorb
int3
pusha
popf
aas
mov
jne
dec
sbb
cmpl
lahf
push
jmp
push
xlat
push
and
pop
gs
jl
mov
arpl
lcall
sub
icebp
push
mov
pop
fbld
icebp
adc
sbb
mov
in
sbb
mov
and
cmp
push
dec
fsubs
pop
inc
cmp
pop
fsubs
sbb
adc
inc
sahf
lea
rcrb
std
dec
and
data16
jl
cmp
addl
ret
sbb
jecxz
xor
testb
into
sub
push
jecxz
dec
push
mov
jne
mov
packssdw
xchg
es
cld
ficomps
test
inc
icebp
pop
xchg
hlt
sub
daa
pusha
adc
lods
and
aam
mov
push
dec
cmpsb
xchg
jno
pop
loopne
arpl
and
pop
sub
jl
cmp
and
cmp
iret
xchg
out
aas
arpl
arpl
cmpsb
es
cld
cmp
xor
push
std
in
and
sbb
jmp
push
pushl
jno
push
movsb
mov
push
das
inc
mov
jae
test
cli
mov
sub
dec
mov
arpl
jns
outsb
and
push
add
es
js
mov
add
out
push
sbb
popf
mov
in
mov
push
cmp
pop
cmp
test
lods
sbb
ficoms
cmc
shl
inc
or
sub
ja
jns
and
scas
jmp
scas
gs
leave
sub
or
out
mov
fs
mov
sahf
testl
dec
xchg
sub
mov
pop
out
scas
sub
xorb
adc
sahf
sahf
xchg
in
not
adc
push
push
shl
adc
xchg
out
daa
xor
or
mov
adc
xchg
shl
dec
sarb
sti
and
data16
in
lods
adc
push
sub
add
sub
add
aam
testl
push
sbb
cs
outsb
jl
pop
add
add
aam
fwait
fnstcw
xlat
mov
jb
dec
sbb
mov
mov
pusha
jne
xchg
ret
fistps
das
jmp
add
mov
mov
sbb
pop
adcl
xor
clc
xor
inc
pop
push
fs
jge
sbb
or
or
outsl
xchg
mov
push
cmpsl
mov
int
ret
or
lods
jb
push
jae
mov
fimuls
test
push
fwait
icebp
lock
push
mov
dec
repnz
add
push
movsb
test
and
adc
inc
lds
cwtl
js
or
inc
xchg
fs
shll
jno
and
mov
dec
mov
pop
jg
rclb
add
fisttpl
in
cmp
out
dec
in
xchg
sub
sub
dec
sbb
in
cld
push
push
jbe
cs
sub
jle
fimull
sbb
sbb
lods
dec
jecxz
rcll
xlat
ficomps
dec
xor
push
shll
insb
into
or
mov
fnstsw
mov
or
and
stos
lea
addl
adc
loope
cli
dec
sbbl
and
out
mov
pop
inc
pushf
fists
pop
mov
or
sahf
jmp
cld
lods
cmp
mul
fs
or
lret
addr16
minps
jge
in
clc
sub
jno
push
into
mov
and
cltd
mov
hlt
cld
jge
dec
and
pop
cmp
or
push
fdivl
and
into
mov
or
sub
dec
sub
jl
xchg
shll
sub
push
dec
pop
cmp
test
jge
mov
scas
fcoms
fs
test
xor
add
mov
inc
ficoml
fiadds
outsb
ficomps
das
push
lock
lods
stos
nop
roll
insb
push
sbb
mov
sub
sbb
jbe
cmc
fmul
addr16
xlat
aam
int
fldcw
inc
popf
repnz
mov
mov
psubusb
mov
push
cmp
pusha
out
sbb
sarl
arpl
jb
lret
repz
mov
imul
adc
std
adc
mov
xchg
jmp
ss
movsb
add
rolb
in
mov
jne
mov
lock
lcall
popa
jle
clc
adc
adc
mov
mov
cmp
mov
fsts
push
call
insb
sahf
mov
and
mov
aaa
ss
pop
push
test
push
push
cs
cmp
sub
sub
mov
jg
addr16
mov
mov
nop
mov
ja
push
stos
and
pushf
test
call
arpl
filds
cmpsb
adc
lcall
jns
dec
adc
fmulp
sub
mov
dec
ffreep
out
dec
in
push
jo
mov
mov
aaa
push
jno
add
std
inc
mov
out
mov
popf
cltd
xchg
rcll
arpl
xor
bound
push
aaa
dec
vpandn
and
jb
test
scas
es
and
test
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xlat
add
add
add
xchg
inc
lret
push
scas
jns
cmc
sbbl
jne
adc
rolb
dec
lea
inc
sbb
shlb
xchg
jl
xchg
stc
push
jb
cmp
test
in
test
or
inc
cs
aad
push
daa
aam
dec
push
iret
mov
xor
lock
jne
xor
or
test
out
sarb
insl
push
sarb
aaa
mov
and
sti
pop
pop
pop
push
xchg
inc
outsl
and
cmpl
sarl
pop
pop
dec
daa
push
movsl
pop
pop
mov
out
aaa
push
pop
std
lret
in
or
es
jns,pt
insl
mov
push
cmp
inc
cmp
pushf
scas
sub
or
mov
out
add
rcrb
add
addr16
sbb
push
sub
movsl
mov
sbb
mov
xor
xor
fmull
dec
or
ja
sub
cltd
movsb
insl
jb
incb
test
shr
mov
push
sbb
call
jge
push
jge
sub
xchg
mov
lods
stos
shl
mov
aas
ret
jecxz
add
jnp
xchg
bound
adc
dec
and
mov
test
jmp
sbb
popf
out
cmp
addr16
jae
adc
xchg
pop
xchg
xchg
fwait
mov
mov
push
pop
scas
clc
jb
imul
lret
mov
ljmp
mov
dec
pop
dec
jecxz
adc
imul
xor
arpl
xor
test
xor
std
mov
inc
es
arpl
cld
push
fadds
lods
icebp
sbb
fimull
adc
aaa
add
pop
xor
inc
aaa
aas
imull
and
sub
int3
incl
pop
add
xor
push
push
push
lea
xor
out
int3
or
fs
or
or
repnz
push
xor
test
out
mov
imul
lods
roll
lcall
mov
mov
std
outsb
lods
cmp
cmpsl
andb
bound
sub
fstps
call
jp
les
xchg
sbb
popf
cmp
pushl
fimuls
imul
fildll
push
xor
repnz
jns
mov
lods
loopne
mov
push
dec
mov
inc
push
cmp
dec
out
popf
or
adc
mov
and
movsb
jb
repnz
and
sub
add
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
add
add
add
add
popa
add
dec
les
sahf
stos
aaa
inc
adc
sub
pop
fisubl
sub
xor
pop
movsb
lods
jp
jae
push
arpl
imul
mov
jmp
mov
pusha
xor
lret
sbb
dec
push
pop
or
xchg
idivl
mov
loopne
outsb
loop
cmpsb
pop
cwtl
dec
sub
xor
fsubrs
out
rcr
mov
sub
in
jo
xor
pop
lock
gs
fldt
aaa
stc
stos
icebp
push
xchg
mov
loopne
push
pop
push
scas
xchg
xchg
out
vmread
call
sub
sbb
std
imul
pushl
sub
push
sbb
outsl
mov
stos
std
pushf
leave
pushf
bound
int
dec
cs
xor
xlat
mov
aad
lods
into
sti
mov
sbb
xor
and
xchg
add
stos
and
call
in
hlt
dec
fnsave
in
xor
or
adc
inc
nop
into
add
sub
out
cld
add
call
sbb
cli
cmp
ds
cmp
sub
sub
or
and
stc
or
mov
stc
mov
jo
in
jle
xchg
inc
out
inc
xchg
aas
push
cmp
add
push
sbb
inc
lods
pop
mov
jae
push
mov
jne
dec
push
cmpsb
and
dec
xchg
add
into
dec
leave
inc
ljmp
lods
dec
push
dec
or
and
loop
orb
adcb
insb
fisubrs
imull
movsb
pop
xchg
repz
mov
dec
cmp
push
dec
mov
cmpb
scas
gs
fildl
arpl
dec
pop
je
fs
ret
pusha
pop
movsb
fnclex
sbb
insb
out
dec
xor
bnd
push
test
sub
dec
icebp
sub
xor
icebp
test
rclb
mov
mov
movsl
pop
lods
in
inc
nop
inc
in
jecxz
push
inc
stos
scas
in
or
mov
push
testl
lods
pop
mov
fldenv
es
cli
out
mov
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
push
add
ss
add
inc
jb
cmp
fnstsw
lret
repnz
sbb
and
jge
sub
mov
out
lods
adc
push
xchg
test
inc
xchg
add
cmp
mov
push
xchg
std
xchg
cwtl
pop
or
or
out
popa
sbb
and
add
leave
sub
xor
cmp
mov
sbb
out
cs
outsb
inc
cmp
test
xchg
cmpsb
or
dec
jp
outsb
dec
ss
imul
fcmove
gs
ljmp
add
xor
push
xchg
nop
mov
lea
sbb
daa
jno
jno
sub
xor
insl
jns
into
add
xor
xor
ret
test
je
fildll
add
aad
pusha
sub
inc
sbb
sub
ret
cmp
lds
dec
leave
push
jo
outsl
or
mov
frstor
shll
inc
imul
mov
daa
in
popa
fdiv
lock
inc
rep
daa
stc
jnp
pop
ljmp
pushf
cmp
sub
dec
aam
fbstp
push
fmul
out
adc
mov
jb
sbb
mov
std
push
pop
testl
mov
out
mov
pusha
add
jnp
pop
sub
pop
and
mov
test
aam
shlb
lcall
out
jo
lock
iret
out
fisubrl
mov
insl
rorl
sub
xor
cmp
xchg
xor
rclb
dec
iret
dec
lds
jmp
scas
push
sbb
push
leave
pop
clc
xor
dec
push
jp
in
lds
js
scas
add
incl
dec
mov
sti
jg
les
lock
push
les
push
mov
push
xchg
insb
lods
jnp
push
xor
adc
adc
xchg
lock
loope
imul
mov
fistl
faddl
cmp
jae
push
test
cmp
push
dec
bound
lahf
cwtl
sahf
stos
jle
jmp
imul
cmc
mov
cmc
jns
loop
cmpsl
jge
and
mov
in
scas
sub
mov
int3
jns
and
loopne
int3
inc
mov
dec
jnp
insb
push
mov
rol
cmp
xchg
sub
aas
dec
mov
lods
imul
pushf
xlat
sbb
mov
pop
popa
out
pop
ljmp
pop
testl
in
add
ret
testw
inc
mov
stos
xlat
mov
loopne
mov
xchg
sub
ret
mov
insl
mov
inc
cmp
cld
scas
lahf
jmp
testb
push
mov
loop
push
or
push
or
mov
mov
push
xchg
pop
mov
jo
fisubl
addr16
and
pop
movsl
aam
sbb
or
pop
repz
jecxz
mov
pop
dec
mov
mov
mov
loope
xor
mov
mov
dec
xchg
mov
jmp
sbb
xchg
in
fisttps
sahf
int3
xchg
sub
rclb
or
sti
stos
int3
inc
test
pop
push
jp
fldenv
xchg
jbe
ret
test
adc
fsubl
sub
mov
adc
out
adc
testb
mov
mov
out
ljmp
pop
lret
pusha
test
and
leave
cvtps2pd
jmp
mov
idivl
fldl
mov
test
cmpsb
mov
jl,pn
lea
repz
mov
jle
call
mov
xor
sub
mov
jg
jbe
repz
inc
mov
jnp
out
scas
cli
mov
push
popa
in
pushf
jne
scas
arpl
mov
mov
lods
cmc
cmpsl
inc
push
rcll
push
inc
push
cmp
stos
pushf
test
imul
push
es
jo
rolb
jg
movsb
jecxz
inc
mov
mov
mov
loopne
xor
aad
fldl
call
adc
push
arpl
ja
out
sti
ljmp
cltd
mov
push
or
data16
mov
loope
jg
adc
lret
lea
push
push
das
jne
out
ljmp
mov
inc
sahf
out
push
jmp
rcrl
push
mov
jae
fcmovnu
and
jne
call
lret
sbb
xchg
stos
mov
sub
scas
or
dec
out
shlb
out
sub
xchg
mov
roll
ret
jle
sbb
sub
lock
pushf
push
out
jbe
mov
lahf
loopne
jle
inc
fs
out
pop
cmpsb
popf
lret
ret
pop
cld
adc
pop
loop
test
inc
xchg
cmp
push
or
sbb
leave
pop
out
dec
in
daa
pop
xchg
inc
xchg
push
lret
or
pop
jne
mov
pop
shll
inc
push
lea
jo
in
sar
adc
std
sbb
dec
push
jl
and
scas
mov
mov
xor
jae
dec
cltd
movsl
xchg
test
in
loope
data16
xchg
fsubs
mov
inc
lods
andl
shlb
inc
push
mov
mov
fs
add
and
or
jg
xlat
mov
or
popf
scas
dec
fiadds
sbb
call
out
or
jb
adc
test
shrb
jmp
call
or
es
adc
mov
or
scas
sar
and
xchg
mov
stc
nop
jp
inc
fimuls
dec
or
sub
stos
lcall
pop
push
enter
pop
inc
sbb
sti
sub
das
fisubs
cmp
xchg
int3
cmp
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
add
add
add
sbb
pushf
cmp
jge
repnz
je
mov
push
cmc
push
in
addb
adc
jge
dec
xor
jg
jmp
cmp
mov
pop
pop
out
add
cltd
pop
cmp
lahf
scas
mov
sbb
cmpsl
jns
stc
repnz
inc
adc
cltd
lea
dec
inc
jnp
iret
pushl
es
int3
lahf
pop
stos
dec
lcall
adc
cld
pushf
iret
inc
gs
out
ret
mov
mov
jmp
pop
loopne
enter
pushf
add
xchg
add
les
pusha
js
clc
popf
xchg
sub
xor
shl
lods
and
inc
int
push
pop
inc
sub
es
xor
andl
mov
jns
ret
xchg
test
add
pop
je
jecxz
rclb
cmp
mov
jmp
or
xor
cmpsb
mov
pop
xor
dec
mov
fldt
add
aam
cmpb
out
popa
xor
mov
jg
sbb
dec
sbb
lcall
shrb
sti
movl
nop
jo
insl
addr16
add
sbb
mov
push
or
das
in
xchg
daa
rclb
fcomps
sbb
out
test
cltd
hlt
mov
ret
or
mov
sub
and
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
push
add
and
add
pop
out
inc
cwtl
ds
jg
pop
and
push
cltd
bound
xor
int3
mov
dec
call
add
lods
dec
incl
and
mov
and
fisubrs
xor
insb
and
outsl
pop
cmc
dec
scas
std
arpl
mov
sbb
pop
mov
in
push
mov
adc
xor
pop
mov
cmpl
xlat
sub
call
cmpsl
dec
addl
sub
push
aaa
sahf
push
adc
aam
mov
in
dec
cltd
jno
jg
inc
mov
mov
push
jmp
xchg
mov
jl
stc
pmullw
fstpl
inc
inc
dec
lret
es
push
mov
adc
daa
add
jp
or
push
and
mov
and
and
test
pop
loopne
pop
loop
mov
inc
test
xchg
push
sub
add
adc
cmpsl
popa
sarb
sbbl
daa
outsb
ficoms
aaa
mov
pushf
add
shrb
inc
ljmp
cli
sub
lods
sbb
lret
add
pop
mov
out
lea
lcall
mov
pop
sub
push
xor
cmp
test
sbb
frstor
xor
int
addr16
movsb
xchg
inc
or
mov
clc
adc
test
rcll
pop
stos
sar
jmp
mov
pop
sub
gs
sbb
std
sbb
daa
jo
jnp
or
add
jnp
ja
jle
ret
and
ret
mov
out
pop
inc
clc
add
push
js
inc
sub
sub
pop
or
sub
pop
dec
jae
push
ss
jecxz
pop
push
out
fwait
mov
mov
test
ds
call
and
sub
sbb
shlb
bound
xchg
es
xor
or
test
aam
outsb
sub
mov
cmpb
lcall
loope
dec
mov
or
div
xor
sbb
xchg
push
mov
nop
scas
loopne
push
clc
or
xchg
fistpll
jp
fwait
pop
ret
pusha
aam
lahf
jl
arpl
mov
mov
or
cmpsl
jp
shrl
xchg
test
inc
cwtl
and
lea
and
fisttpll
jecxz
sub
cmp
and
mov
dec
push
daa
adc
rolb
popa
xor
ss
mov
cmp
sbb
sarb
call
cmp
mov
xor
mov
ret
inc
push
lahf
mov
aad
ds
mov
scas
sahf
sub
sbb
hlt
lock
fstps
test
stc
sbb
push
repnz
xor
push
pop
push
pop
aas
scas
aas
syscall
sbb
out
adcb
mov
mov
jecxz
cmp
and
pusha
stos
add
jo
sbb
or
mov
loope
pusha
ja
lock
inc
push
lds
inc
fcmovne
sub
jge
sub
xchg
xchg
loope
imul
mov
cmpsl
ds
shll
fmull
jns
mov
leave
xor
sub
test
adc
test
jno
sub
je
mov
add
cs
stc
jl
pop
push
jne
jo
jecxz
jp
insb
dec
adc
sub
xchg
and
jle
lret
lret
and
mov
xor
fnstsw
push
mov
mov
dec
push
cmp
ret
xchg
rcll
pop
mov
cmpsb
jb
sbb
andb
ret
push
sub
outsb
mov
jae
aas
lea
fs
jp
les
sub
pop
push
mov
jb
cltd
adc
jmp
popl
push
mov
outsl
add
lds
outsl
jae
pusha
push
test
mov
sbb
sub
jne
gs
stc
aas
pop
pushf
xchg
or
lods
cmpsl
mov
xchg
mov
pusha
mov
xchg
push
and
int3
cwtl
cwtl
jns
cmp
mov
xchg
mov
adc
cwtl
pusha
and
xchg
les
and
mov
mov
out
mov
or
stos
aas
pop
jecxz
mov
inc
lcall
shr
sub
fistps
ljmp
add
hlt
data16
dec
decb
shll
arpl
cwtl
icebp
pop
cmc
mov
push
je
xorb
xchg
cmp
or
mov
cwtl
pop
shll
or
mov
jae
iret
inc
adc
shl
rcr
stos
rcrb
sub
push
xor
mov
adc
push
sub
shrl
hlt
call
adc
movsl
inc
lcall
js
dec
fnstsw
and
roll
dec
adc
movb
add
icebp
jp
fld1
lea
fdivrl
and
lcall
aas
in
jle,pn
jns
xor
push
adc
inc
and
jge
dec
jg
fwait
and
lahf
addl
lcall
iret
lcall
ret
xchg
es
xchg
adc
jbe
lds
subb
cli
fisubrl
xchg
fildl
pop
pop
and
fisubs
jmp
lea
pop
enter
pop
lret
and
xchg
inc
sahf
xchg
popf
sbb
in
ds
ret
leave
insb
cwtl
pop
xchg
popf
adc
stos
jno
jl
adc
ljmp
push
imul
fildl
cmp
and
divl
jge
xchg
mov
pop
out
cmpb
cmp
loop
rcll
pop
dec
out
ret
cmpsb
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
bound
add
add
gs
jns
mov
ljmp
inc
jae
mov
jecxz
dec
stos
sub
inc
mov
mov
int3
insl
jb
mov
lods
lods
mov
inc
inc
enter
xor
test
pop
popa
scas
scas
les
je
cmpb
inc
jae
outsb
push
xor
mov
pop
mov
iret
int
adc
je
in
scas
mov
cwtl
sbb
fneni(8087
shll
mov
scas
xchg
push
test
pop
mov
stos
lods
shlb
cltd
ret
cmp
iret
lea
pop
cld
call
push
les
aam
ja
and
test
aaa
fmuls
push
rcl
xacquire
repnz
and
ds
xor
nop
push
lea
push
das
shrl
mov
push
aad
fildl
loopne
scas
dec
mov
mov
into
stos
mov
fld
sub
fmull
push
ret
mov
ret
stc
sbb
iret
clc
jno
adc
iret
sbb
or
pop
and
ret
mov
push
popa
cmp
insb
sbb
or
cmp
xchg
addr16
lods
cmpsb
jg
ret
xlat
out
sbb
out
jne
xor
mov
in
xor
sbbb
pop
adc
sub
lds
push
inc
jp
adc
dec
out
pop
jb
lods
std
ja
clc
cli
inc
pushf
loope
int
inc
stos
leave
out
jecxz
ret
inc
test
pop
loope
mov
mov
push
movsb
enter
nop
sbb
inc
out
xchg
lahf
cld
sbb
push
lods
push
mov
movsb
cmpsb
xor
popa
and
inc
ja
dec
add
add
stc
add
mov
xchg
popa
xchg
hlt
jo
push
jne
or
adc
jp
mov
std
xorl
add
or
aas
ljmp
fnstsw
adc
cmp
mov
cmp
lods
pop
mov
adc
adc
idivb
push
cld
fwait
adc
or
leave
ret
push
stc
rorb
inc
jb
jnp
hlt
add
subl
lahf
stos
jmp
aad
cmp
repnz
jmp
push
dec
test
stos
iret
add
sti
inc
add
cmp
fcmovnbe
nop
xor
fldl
sbb
mov
mov
push
cmc
sbb
mov
mov
push
daa
pop
mov
push
rolb
xor
pop
sbb
popf
pop
and
clc
pop
imul
mov
xlat
jl
mov
out
pusha
aad
mov
push
inc
and
mov
shrl
sub
int
pop
icebp
in
in
mov
mov
fwait
bound
pop
xor
cli
jne
loopne
dec
or
insl
adc
ficomps
inc
pushf
inc
pusha
jnp
imul
push
fbld
stos
loopne
fwait
test
sbb
pop
shll
lret
xchg
jb
pusha
push
addr16
sub
imul
xlat
test
int3
push
sub
cld
adc
fldt
int
mov
dec
sbb
adc
jle
mov
jb
jl
jg
mov
shll
fildll
nop
push
jne
pusha
add
push
cwtl
mov
sbb
es
imul
mull
lea
or
inc
ss
mov
es
mov
loopne
dec
mov
in
jl
push
dec
dec
jl
mov
loop
jg
and
jmp
cmp
xor
push
mov
into
sub
xchg
idivb
imul
out
enter
outsb
gs
into
repnz
outsl
movsl
shll
mov
mov
mov
mov
push
cld
jge
add
das
stos
in
push
jae
xchg
dec
xor
sub
lret
mov
repnz
jle
lea
cmp
lahf
add
cmpsl
sub
push
push
xor
cld
cmp
mov
push
cmp
mov
jb
xor
jne
dec
jb
xor
jne
dec
push
add
stos
push
add
sbb
notl
inc
push
fiaddl
pop
mov
cmp
push
or
or
outsb
and
push
test
push
fxch
ljmp
cmp
pop
das
sub
das
mov
ljmp
adc
jl
push
sub
and
mov
jbe
push
sti
sub
xchg
sti
pushl
ljmp
in
outsb
stos
les
cmp
mov
test
mov
adc
addr16
jge
mov
inc
adc
in
mov
jne
out
pusha
mov
enter
call
daa
call
ja
divb
xor
push
loopne
pop
push
sahf
dec
cmc
ret
ds
pop
dec
ret
and
in
push
cmpsb
hlt
xor
out
outsl
dec
fadd
xor
inc
dec
and
jle
and
std
andl
lret
mov
xchg
sbb
dec
and
sbb
cli
sub
pop
repnz
xchg
ja
daa
push
test
loopne
mov
and
dec
pop
jecxz
and
stc
push
outsl
mov
icebp
xchg
in
push
rcr
sarl
push
or
xor
push
loope
jecxz
rcrl
pusha
stos
inc
test
test
pop
stos
lods
dec
imul
repz
sbb
cmpsb
xchg
repnz
or
mov
pop
les
sub
cmp
decl
clc
jns
shrb
shr
and
pop
int3
jge
aas
mov
arpl
sbbb
jne
inc
rcrb
add
dec
ja
sbbl
xchg
and
and
and
xor
pusha
jnp
xor
xabort
cmp
inc
add
popa
push
fsubl
mov
idivb
sub
and
out
jmp
rorb
mov
xchg
add
les
xchg
sahf
das
cmp
sbb
lret
mov
imul
loopne
nop
push
mov
push
pushf
clc
iret
jge
sbb
test
jge
inc
mov
scas
dec
in
or
xchg
fwait
sub
cltd
lahf
jbe
rolb
shrb
xchg
mov
mov
dec
jp
inc
cmpsl
std
add
or
lretw
outsl
cmc
jne
or
xchg
scas
pop
test
pop
pop
cmpsl
mov
jbe
add
rol
call
test
or
int3
mov
push
stos
ret
addb
ss
mov
and
and
xchg
fistl
test
clc
pop
sbb
adc
push
loope
xchg
ljmp
icebp
jg
sbb
shrl
dec
jb
int
jmp
popf
mov
stos
dec
dec
push
xchg
fidivs
dec
lods
pop
xor
outsl
cmp
fdivrs
mov
jno
add
stos
imul
pop
cs
cmp
push
arpl
sub
sub
bound
jae
in
pop
mov
pop
xor
insl
clc
jmp
shl
ljmp
sahf
or
xchg
movq
and
cltd
push
arpl
imul
fldenv
add
lahf
lds
filds
inc
inc
jae
add
lret
movsb
scas
ds
sahf
nop
push
inc
ja
jmp
cmp
ds
mov
adc
xor
xchg
mov
ds
push
push
test
repnz
out
jns
sbb
sub
es
repz
push
xlat
iret
adc
pop
in
stos
stos
imul
movl
loop
sub
scas
xchg
pop
fmuls
gs
pop
aad
mov
mov
mov
sbb
repnz
adcl
lret
mov
fs
decl
daa
sbb
in
cld
daa
icebp
lcall
insl
jecxz
test
jno
xlat
mov
push
movsl
push
inc
stos
xor
cmp
sub
pop
or
dec
scas
loopne
mov
cmpsl
ficompl
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
bound
add
inc
add
decl
gs
aas
adc
xchg
into
add
neg
into
in
xchg
lods
rclb
pop
repz
xchg
jnp
inc
dec
and
in
popl
hlt
dec
push
xchg
fs
xchg
call
mov
cmpsl
mov
and
std
jns
inc
sub
cli
jg
daa
test
mov
loop
inc
and
cli
adc
insb
and
call
jne
imul
dec
pusha
pop
sbbl
push
popa
inc
lahf
xor
push
xchg
loop
inc
dec
push
xor
ljmp
in
xchg
inc
cmp
int
imul
jp
pushf
and
cmpl
cmp
mov
cmp
outsb
push
stos
mov
ja
lods
scas
sti
jns
pop
js
push
sbb
sbb
in
and
shufps
hlt
or
xchg
pushf
mov
jecxz
dec
mov
cs
mov
inc
push
insl
lock
or
pop
imul
xchg
scas
pop
test
inc
popa
push
into
push
out
adc
dec
mov
incb
gs
iret
inc
scas
outsl
or
ljmp
leave
rorl
popa
stos
out
adc
into
pop
mov
shlb
pop
shll
fistpl
cwtl
xor
add
sub
cwtl
mov
sbb
fcompl
out
xchg
cmp
and
xor
dec
adc
test
jno
mov
iret
adc
lcall
xchg
lds
mov
sbb
and
xor
pop
xor
xor
lds
mov
dec
jge
fldt
lahf
dec
insl
mov
out
arpl
std
or
pop
out
filds
sbb
cmc
push
fildl
fisttps
and
pop
xchg
testl
mov
jnp
ss
sub
mov
adc
rcr
rclb
out
mov
add
mov
popa
mov
adc
mov
inc
fimuls
ret
add
ja
mov
mov
adc
adc
jmp
xchg
out
dec
add
dec
dec
push
cmp
mov
fstps
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
add
add
pop
repnz
jbe
andb
cmp
pop
xor
adc
add
mov
mov
out
sub
call
cltd
add
jae
sub
mov
and
mov
cmp
test
cmp
fsubrp
cmp
stos
shrb
sub
dec
add
sbb
jmp
and
andl
or
sub
std
jecxz
push
outsl
pop
in
dec
sub
jle
repz
xor
dec
and
sbb
mov
add
pop
ss
lods
sbb
adc
pop
ror
call
scas
add
or
fadd
aam
cmp
jbe
adc
mov
fwait
pop
or
aas
enter
jnp
gs
test
cmp
stc
xlat
mov
push
scas
call
mov
loopne
test
sub
imul
les
cmp
out
test
mov
pop
inc
jmp
inc
push
aad
inc
push
cs
ret
sub
push
imul
mov
and
or
xchg
push
mov
add
mov
scas
aaa
stc
ds
mov
in
repnz
push
adc
lcall
push
mov
mov
push
lret
jp
hlt
jecxz
push
bound
jecxz
cld
inc
out
pop
dec
push
mov
cmpsl
les
insb
lret
mov
leave
cltd
insb
out
fldt
sub
mov
push
in
adc
test
jb
inc
mov
cs
adc
shl
daa
adc
cli
mov
mov
pop
lock
fdivrs
cmp
cwtl
dec
addr16
lret
mov
cld
xor
xor
jb
push
mov
enter
xor
mov
inc
lea
mov
sub
aaa
jge
add
xchg
mov
jmp
leave
mov
jecxz
aaa
mov
mov
mov
jns
push
dec
std
loop
loope
push
or
xlat
enter
jne
mov
xchg
orb
mov
dec
jns
leave
insl
push
push
xchg
add
std
arpl
aam
mov
xchg
mov
dec
or
xor
mov
ds
test
dec
or
test
and
cmp
arpl
push
sti
sahf
xchg
sub
sbb
sti
push
xor
ror
stc
jge
fwait
imul
test
arpl
es
in
push
out
or
icebp
cltd
sbb
cmp
les
in
stos
mov
imulb
into
negb
jo
cmp
fistpll
movsl
aas
push
inc
push
mov
sub
inc
mov
xchg
cmp
cli
pop
es
xor
bound
fadds
pusha
xor
jnp
or
sbb
sbb
in
mov
mov
loope
xor
hlt
jnp
jmp
xchg
je
aam
dec
or
cmp
sti
outsb
rol
ja
loope
icebp
sbb
sar
mov
shrl
roll
or
fcmovne
loopne
adc
and
sahf
fdivrl
sub
mov
subb
stos
pop
loopne
icebp
sbb
pop
pop
mov
mov
shl
mov
icebp
xor
jecxz
mov
pusha
jmp
je
movsl
mov
int3
stos
je
mov
push
loope,pt
add
arpl
sbb
xor
imul
jb
and
add
jle
lods
cmp
mov
push
xchg
ljmp
inc
stos
addr16
inc
out
insb
cs
push
iret
and
es
fsubrl
xorl
and
add
fadds
push
adc
jne
mov
not
out
frstpm(287
into
notb
mov
and
movsb
test
mov
cs
cmpsl
xor
xor
lock
clc
mov
pop
push
or
loope
push
addl
test
cmp
ljmp
test
mov
sub
jp
lods
fucomp
and
mov
adc
ja
popf
cmp
mov
loope
inc
popf
sbb
pop
xchg
mov
xchg
jb,pt
mov
or
loope
sahf
pop
jecxz
cli
add
jmp
push
add
nop
or
aas
inc
insl
xchg
dec
out
lcall
push
and
addl
adc
dec
inc
icebp
or
jecxz
pop
or
leave
gs
add
adc
xor
lret
mov
xor
mov
jbe
js
adc
add
push
sub
mov
sbb
xchg
fsubl
xor
lea
popa
mov
xchg
roll
pusha
jl
cmp
jle
stos
pop
inc
adc
loop
sti
ret
push
push
shlb
ret
xchg
cwtl
add
or
mov
aaa
ja
lret
fsubr
pop
mov
loop
and
and
addr16
loop
nop
sub
daa
jp
jne
shll
adc
jl,pt
test
aad
or
shlb
jnp
repz
adc
lea
sub
ds
iret
ret
mov
add
shrb
sub
shrl
mov
or
arpl
and
sbb
fdivs
out
inc
sahf
shrb
dec
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
push
add
testl
jg
push
movsl
addr16
xor
cmp
popa
mov
js
sti
insl
mov
push
or
inc
cmpsb
inc
cmp
in
shlb
xchg
imul
test
pop
or
adc
out
testl
je
js
push
cmpsb
js
cs
shrl
inc
clc
cli
test
test
xor
lods
jl
push
or
pop
je
xchg
jp
dec
ljmp
lods
sti
shl
outsb
test
inc
sbb
ljmp
xchg
cmp
test
xchg
fwait
xchg
xor
sahf
lods
fstpl
dec
je
push
and
and
mov
and
mov
mov
pop
cmp
je
mov
xchg
roll
pop
fs
cmp
and
adc
mov
mov
lcall
inc
push
xchg
ret
lods
mov
outsl
push
iret
xchg
mov
push
and
mov
xlat
cmp
mov
or
or
sub
and
test
dec
imul
xchg
int3
lret
inc
ja
lds
mov
clc
movsb
or
pop
bnd
mov
or
jnp
push
in
sarb
xchg
addl
mov
sub
ret
dec
jecxz
add
or
adc
sub
lods
inc
dec
xchg
fnstsw
sbb
fildl
aas
mov
pop
push
in
cmp
imul
sub
sbb
jmp
xchg
sub
adc
xchg
inc
or
imul
mov
imul
aad
es
sub
sbb
shrb
outsb
pop
leave
ror
mov
fldenv
mov
iret
lods
int3
inc
jmp
dec
cmp
test
pop
add
js
pop
jl
and
loope
out
jne
fnstcw
mov
dec
sub
cmpsl
dec
das
aam
xchg
andb
mov
filds
std
inc
dec
dec
lods
in
mov
dec
adc
test
stos
and
divl
xorb
in
out
lahf
cmp
in
sub
repnz
add
xchg
sarl
repnz
cmpsl
js
mov
adc
xor
add
add
mov
adc
mov
repnz
repz
sub
shrl
mov
das
das
imul
push
into
adc
fists
daa
sahf
sub
and
cmp
addb
aaa
mov
push
in
repnz
pop
cmp
adc
or
adc
sbb
push
es
jne
adcb
fs
les
xor
pop
push
xor
in
cmp
shrl
cmp
rorb
cmc
xor
aas
cmp
das
ret
or
daa
std
jl
and
cmp
cld
pop
fsubrl
lahf
jmp
add
hlt
dec
repz
dec
mov
cmp
and
cmpb
ret
imulb
mov
or
xchg
mov
inc
les
xor
je
sbb
out
inc
jae
cs
or
pop
add
cmc
mull
nop
xor
add
incl
add
pop
jl
sub
or
dec
inc
push
or
imul
jg
ljmp
push
push
cli
test
adc
sub
test
mov
loop
inc
mov
sub
push
enter
bnd
dec
sahf
pop
mov
sub
insb
into
mov
and
daa
pop
out
xor
xchg
sbb
mov
test
add
into
cmpsl
mov
xor
mov
mov
repnz
out
cmc
fucomi
movsl
fsubs
int3
loop
call
jbe
repz
lods
sarl
ljmp
jmp
xchg
pop
fnsave
jge
xchg
lods
sub
into
fisubl
divb
inc
dec
addr16
cmc
ds
mov
adc
les
test
pop
outsb
sub
pop
imul
fmull
mov
mov
mov
stos
mov
jp
lret
loop
leave
fwait
jle
xor
scas
or
mov
sub
sahf
mov
aad
inc
repnz
data16
inc
addr16
addl
inc
mov
inc
jp
rclb
mov
pusha
fnstenv
andb
divl
test
adc
xchg
jl
xchg
bound
scas
cmc
push
dec
lcall
mov
bound
adc
jae
pop
fdivl
imul
subl
es
stc
dec
xchg
in
and
and
lea
lds
outsl
cwtl
sub
jo
insl
sbb
loop
add
and
mov
pop
mov
push
or
ret
cld
jae
out
js
inc
adc
outsl
call
xor
sbb
loopne
ja
sbb
cmp
clc
loop
inc
mov
in
mov
loope
iret
pop
xorb
loope
push
ret
jl
fldl2t
jge
addr16
add
mov
adc
fs
push
ret
push
xlat
add
cmp
jg
lods
popa
mov
into
inc
ds
hlt
adc
adc
xor
adc
fidivrs
imul
lret
test
mov
arpl
in
xchg
jnp
mov
std
adc
data16
in
dec
xor
xchg
scas
mov
add
inc
sub
fs
pop
push
dec
mov
pop
pop
mov
dec
sub
setl
je
in
and
es
fimuls
mov
xlat
mov
pop
subb
inc
mov
cld
aad
jns
jg
insl
aad
mov
fiadds
and
mov
mov
call
leave
jb
or
and
inc
push
sub
xchg
lret
stos
mov
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
add
add
push
fdivrp
push
add
dec
mov
aas
xchg
jp
and
push
xor
and
idivl
aam
not
add
sbb
or
dec
stc
mov
in
inc
faddl
lds
int
mov
cli
in
hlt
mov
sarb
js
or
pop
stos
mul
cmp
xchg
mov
push
dec
outsl
es
mov
rcrl
jo
xchg
pusha
test
push
int3
lret
jno
mov
sbb
subl
jne
mov
arpl
imul
out
xchg
jmp
stos
ret
gs
xor
and
clc
inc
les
fadds
dec
lock
or
pop
pushf
lret
adc
lods
sahf
shll
cmpsb
into
and
insl
jmp
pop
mov
inc
add
fimuls
dec
insb
push
pop
jle
or
and
pop
lcall
cld
fistpll
ljmp
cmp
repnz
jecxz,pn
aam
inc
jge
mov
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jae
add
je
add
dec
rorl
movsl
cmp
out
sub
sbbb
es
inc
imul
scas
ss
adc
lods
push
fnstenv
fwait
mov
adc
dec
movsl
rorl
dec
lcall
ljmp
scas
imul
imul
pushf
xchg
shrb
push
pop
pop
and
pop
sahf
js
cmp
fs
lods
out
ret
xchg
test
scas
cmp
loop
je
jl
mov
xchg
clc
sbb
icebp
mov
ficompl
dec
mov
xor
mov
in
pop
int3
aaa
add
les
cmpsb
and
mov
and
pop
jo
jne
rclb
push
xchg
pop
repnz
pop
lcall
sbb
sti
andl
loope
repnz
rolb
xchg
or
pop
mov
mov
sti
push
sub
fisubl
fistl
mov
inc
lahf
test
movsl
stos
and
jmp
sub
and
pop
and
in
cld
aam
inc
dec
lods
xchg
inc
cld
dec
scas
mov
mov
jae
and
xchg
mov
mov
sbbb
icebp
xchg
cwtl
outsb
push
xchg
pop
pop
sbb
push
mov
sbb
inc
fldt
xchg
clc
mov
mov
lods
neg
xchg
stc
lds
scas
or
mov
xchg
lret
in
mov
pop
or
setnp
mov
ret
pop
mov
loopne
xlat
add
sub
or
cmpsl
nop
arpl
shrl
mov
xor
xchg
pop
leave
iret
call
shr
test
adc
scas
or
fsts
jns
es
scas
pushf
mov
jg
add
cwtl
push
xor
lahf
loop
jae
fisttpll
popf
jg
dec
inc
and
mov
mov
pop
lods
inc
in
sbb
mov
imul
jle
jg
mov
scas
enter
push
scas
and
sub
mov
mov
stos
pop
push
xchg
test
out
cmpb
fistl
mov
out
adc
setae
and
xchg
leave
xor
cmpsl
inc
cltd
or
jae
mov
or
rcr
xor
jl
adcb
icebp
lock
push
idivb
jb
shr
ret
leave
rorl
pop
add
test
mov
pop
cmpsb
imul
jl
popf
push
movsl
push
push
xchg
in
sbb
inc
sub
push
push
cmp
aam
jle
outsb
xchg
mov
mov
rol
sub
jl
add
ss
fmuls
scas
jne
mov
and
loope
mov
inc
mov
xchg
test
mov
cmp
add
insl
addr16
mov
rcl
pop
mov
dec
cmp
pop
and
outsb
lock
pop
sbb
jge
push
mov
test
push
aaa
sbb
ficoms
add
jmp
mov
jle
add
adc
jbe
xor
call
xchg
jge
dec
pop
rorl
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
add
add
add
js
in
inc
cmpsb
jnp
sub
or
lods
pop
fdiv
dec
movsl
xlat
iret
ljmp
cld
scas
lret
dec
sub
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
push
add
aad
adc
xor
lret
iret
lods
sbb
sbb
outsl
pop
jmp
mov
daa
lods
lret
lds
dec
and
adc
mov
icebp
push
and
jmp
ret
sub
ret
xchg
push
sub
cmpl
or
add
jne
movsl
mov
push
filds
subl
push
adc
pop
test
sbb
ljmp
cmc
or
mov
mov
jp
mov
cmp
mov
mov
shrb
push
notl
test
nop
js
inc
mov
mov
test
std
sbb
xchg
aas
pop
scas
je
xchg
push
adc
movsb
imul
es
or
inc
into
sbb
aad
push
add
int
out
out
out
push
jnp
dec
dec
push
stos
or
push
lcall
stos
jb
add
jmp
or
dec
popl
repz
dec
xchg
and
sub
push
xlat
and
das
pushl
adc
outsb
test
pop
lock
sub
push
fists
jnp
sbb
lods
sbb
cmp
adc
clc
inc
ret
leave
lea
lods
cmp
sub
xor
lea
hlt
lret
and
imulb
mov
lcall
lea
jb
pop
dec
and
shr
mov
xor
test
cwtl
testb
adc
mov
and
and
push
adcl
movb
inc
push
jb
jb
rorb
mov
movsb
fistps
adc
lret
sbb
subl
in
lock
ss
cmp
out
pop
and
mov
xchg
xchg
pop
or
mov
ret
cmp
mov
cmpl
inc
sbb
stc
mov
push
daa
sbb
xchg
nop
sub
imul
pushf
popa
jecxz
sti
pushl
jge
push
cltd
push
dec
push
sbb
jo
mov
and
pushf
dec
xchg
mov
test
inc
pop
xchg
pop
aad
adc
movsb
popf
gs
rcl
cmp
aad
in
xchg
mov
fisubrl
and
push
cwtl
xlat
sbb
lret
mov
mov
fnstsw
je
dec
imul
lea
test
push
push
pop
xorb
and
outsl
test
jecxz
or
ljmp
stos
cli
mov
les
lods
popa
xchg
and
rclb
xchg
fsubr
int3
jo
sub
sbb
mov
shlb
mov
mov
cmpsl
rol
and
pop
fnstenv
jmp
jp
cli
scas
fstp
insl
outsl
sub
sub
and
mov
out
sti
in
es
pop
or
cltd
ja
int3
inc
or
pop
popf
xchg
push
imulb
icebp
and
into
mov
ret
aam
and
push
or
or
mov
xchg
pushf
mov
inc
adc
aad
dec
sub
aad
pop
inc
adc
cmpsl
ljmp
cltd
push
pop
sbb
ss
stc
dec
das
sbb
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
dec
add
add
add
ret
cmp
pop
dec
mov
push
testb
dec
loopne
mov
xchg
and
xchg
in
xchg
fldt
sub
cs
pop
movsl
and
xor
dec
and
jns
sub
mov
je
cmp
and
test
push
out
and
aam
test
dec
dec
xor
mov
scas
aam
mov
lock
popa
outsl
sub
xor
sub
lret
ret
mov
xor
in
adc
or
fistl
notb
roll
push
xor
icebp
xchg
xchg
cmpsl
add
or
mov
adc
cmovnp
stc
mov
jne
loop
aad
or
dec
js
call
mov
addr16
imul
std
mov
mov
fistpl
mov
enter
push
pusha
mov
andb
mov
daa
xchg
nop
nop
mov
fcoms
sbb
int3
sub
mov
inc
jo
pop
sub
jp
pop
cmp
roll
cli
fadds
and
push
stos
jo
mov
adc
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
add
add
cmc
adc
dec
mov
cmp
mov
sbb
xchg
les
sbb
mov
aam
iret
lea
loope
push
mov
sub
dec
orl
mov
lock
js
aaa
divb
xor
push
pop
adc
sub
xchg
sbb
or
jmp
or
sti
adc
cmpsl
xor
mov
out
test
xor
pop
xlat
fcmovbe
mov
stos
and
in
outsl
cmpsl
test
add
aas
dec
push
cs
xchg
push
outsl
dec
push
enter
adc
dec
popa
xor
subb
and
lret
sbb
and
mov
lcall
out
xor
in
mov
out
mov
es
or
jbe
fiaddl
xor
push
orl
or
bound
popa
aaa
lret
jecxz
xchg
and
jnp
pop
sub
dec
icebp
jecxz
ror
shrb
testl
push
inc
mov
addr16
xor
mov
stos
mov
seta
mov
xchg
push
add
sub
adc
negb
mov
cmp
fwait
adc
sbb
mov
xor
dec
push
jb
sub
popa
push
pop
inc
xor
ja
push
fisttpl
push
out
and
add
mov
xlat
mov
add
cs
into
sti
jns
jo
add
jnp
pushf
push
int
or
clc
bound
pushf
cmp
pop
jmp
fsubrs
cmp
xchg
and
cld
inc
sbb
test
jp
movsb
cwtl
imul
stc
sahf
push
loope
int
pop
inc
xor
mov
mov
xchg
mov
adc
ret
push
stc
push
repz
iret
es
fimull
insb
es
ss
imul
mov
movsl
cwtl
mov
jecxz
fdivrs
sar
pop
into
sub
addb
add
or
dec
add
cmp
fnstsw
push
xor
out
test
and
jg
adc
fstps
dec
jae
int3
and
dec
pusha
pop
test
loop
iret
outsb
xchg
dec
decl
mov
int
lods
lret
push
sbb
rcrl
mov
mov
xchg
sub
cld
add
sti
mov
adc
int3
dec
lock
mov
mov
inc
movsb
mov
out
out
xchg
lret
dec
cwtl
lret
stos
test
popf
int
cwtl
idivl
xchg
testl
dec
mov
stc
sahf
out
movsb
icebp
ficoms
add
dec
mov
mov
push
cmp
add
insl
dec
out
outsb
addr16
dec
push
scas
mov
push
add
lds
out
aas
mov
adc
or
jb
cmpsl
seta
lds
jle
xchg
sub
aam
mov
out
fcom
stos
std
push
cld
pop
or
pop
lea
add
mov
loop
ret
xchg
jns
push
cld
sbb
cwtl
lock
mov
sub
addr16
iret
adc
int
jns
pusha
push
jl
mov
jge
cli
stos
pop
shll
or
jmp
das
adc
adc
aaa
xchg
push
scas
lcall
xor
or
and
stos
xchg
xchg
sub
std
cmc
sahf
fstl
daa
jne
in
repz
xor
adc
push
pop
cmc
mov
push
push
push
insb
push
stc
add
dec
mov
or
in
clc
inc
movsl
call
fs
icebp
inc
daa
sbb
data16
or
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jmp
add
add
mov
jae
orb
jg
push
dec
lret
sbb
dec
jl
mov
mov
inc
mov
bound
jno
xchg
cmpsb
cmpsb
inc
push
fiaddl
pushf
loopne
xchg
xor
test
jne
push
not
sbb
push
sub
push
aad
sub
rolb
jge
sbb
jecxz
jmp
lds
pop
xor
mov
push
sbb
popf
cwtl
in
js
arpl
sbb
icebp
lods
mov
jmp
fists
fs
and
jp
fmuls
ja
inc
fsubrl
push
xchg
movsb
push
cmp
push
xchg
popa
push
rcrl
cmc
outsb
test
xchg
in
jge
add
mov
aaa
add
push
push
popa
inc
sub
out
xor
repz
inc
dec
dec
inc
cmp
and
xor
mov
ljmp
data16
stc
jbe
and
inc
ret
push
adc
xchg
inc
sub
lcall
cmp
fcom
mov
sbb
cmp
jns
pusha
adc
jne
lods
push
xchg
mov
insl
mov
gs
call
jge
push
cmp
sti
xchg
movb
xor
or
ret
adcb
push
fwait
xchg
idivl
mov
test
int3
decl
fisttpll
xor
mov
xchg
xor
in
xchg
jo
fisubs
adc
inc
dec
fdivrs
out
mov
adc
xchg
xor
mov
push
jne
test
cmc
inc
shlb
sbb
jbe
testb
ds
arpl
mov
or
xchg
scas
loope
scas
incl
sbb
leave
mov
jmp
test
pop
fldl
test
jmp
xchg
xchg
cmp
das
dec
loop
loope
adc
scas
lods
adc
cltd
fs
cmp
out
push
clc
push
and
sub
xchg
pop
push
pop
or
add
sbb
rcrl
cld
test
test
lcall
dec
mov
sub
test
dec
dec
stos
andl
jnp
jns
xor
test
cli
or
cwtl
adc
or
xor
scas
xchg
shrl
inc
out
cmp
inc
test
mov
adc
inc
lret
dec
adc
push
push
stos
imul
xchg
movsb
dec
lcall
out
aas
clc
cwtl
ror
cwtl
mov
mov
push
das
test
shrl
mov
cmpsb
ljmp
outsb
popa
jl
cli
negl
je
mov
fnstcw
outsb
cli
pop
es
cmpsb
sbb
cli
cmp
fcomi
xor
pushf
xchg
int3
sahf
test
adc
push
dec
jb
mov
pxor
int3
adc
pop
inc
cmp
sbb
arpl
jp
inc
xor
sbb
test
xor
loope
pusha
sbb
push
std
movsb
popa
psadbw
iret
sub
int3
sti
dec
decl
mov
cmp
rcll
or
aas
mov
test
cs
dec
mov
dec
imul
sbb
cld
xor
cmpsl
cmc
fmuls
mov
cwtl
mov
inc
add
sub
rorl
or
pop
test
and
call
mov
lea
push
icebp
cmp
mov
cwtl
inc
cmp
sbb
jnp
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
sub
pop
add
sbb
shlb
mov
in
in
aas
sbb
inc
test
add
icebp
mov
icebp
cmp
icebp
aad
sti
outsb
cmp
mov
push
and
sub
xchg
test
cltd
xor
jbe
adc
repz
xor
xor
fld
mov
sarb
inc
xchg
lret
cmp
or
hlt
sarl
mov
leave
dec
pop
xchg
sbb
imul
ucomiss
nop
bswap
lea
or
mov
int
inc
mov
test
out
bound
daa
mov
jb
jp
sti
pop
mov
sub
nop
fistpll
or
cmp
fisttpl
add
dec
adc
or
xchg
and
clc
mov
jns
dec
insb
mov
shrl
pop
in
pushl
inc
andb
pop
mov
inc
pop
push
jp
pop
add
adc
mov
and
cmp
mov
inc
sub
cmp
in
xorl
xchg
push
test
cmp
enter
inc
mov
daa
jb
int
sub
mov
fdivrs
mov
in
cmp
pusha
pop
cltd
jg
push
fld
push
mov
call
lods
mov
cmc
dec
cltd
inc
arpl
dec
push
cld
inc
jg
lods
pop
push
mov
testb
int3
daa
or
cmp
inc
adc
rclb
xchg
scas
mull
lods
int3
stos
lcall
push
mov
out
aaa
xor
or
lahf
push
inc
out
jne
add
stos
adc
movsl
ss
repz
test
aam
pop
daa
repz
imul
test
aaa
imul
insb
addr16
jo
adc
lods
adc
push
push
movsl
fwait
ja
push
aas
mov
nop
bound
xor
xchg
fsubs
xchg
adc
leave
and
insl
mov
pop
push
int3
fwait
cmp
lcall
xchg
pop
push
push
into
ja
fsubr
sub
push
adc
fmull
and
vpcmpeqw
inc
stos
dec
or
hlt
bnd
in
jle
hlt
pop
fidivrl
pop
scas
mov
cmpsb
xchg
pop
lock
mov
test
adc
jmp
push
dec
cmp
xor
mov
lods
out
aaa
out
mov
adcl
inc
mov
pop
movsl
incb
rcrl
fwait
out
movsb
jl
dec
sub
xchg
aam
popa
xchg
push
test
pop
mov
cmp
add
cli
dec
jnp
lcall
xchg
loop,pn
stos
dec
imulb
loope
mov
and
pop
movsb
rclb
je
in
cwtl
ficoms
insb
lret
inc
xor
fadds
daa
iret
fldenv
pop
test
mov
popf
adc
push
push
cmp
dec
jg
pop
pushf
xor
sub
and
mov
xor
rcrl
jecxz
scas
cmp
mov
pop
push
mov
and
inc
int3
fwait
push
cmp
mov
xor
dec
int3
xlat
inc
cmp
inc
mov
dec
lcall
cmp
test
outsl
pop
sub
repz
les
mov
cs
call
pop
popf
add
jo
pushf
in
pop
and
mov
jo
inc
sub
xor
adc
cmpsl
hlt
mov
decb
jmp
adc
scas
or
mov
lods
js
call
mov
pop
rorb
pop
leave
dec
rorl
jns
xor
mov
xchg
add
pop
cltd
or
dec
jbe
ss
mov
xchg
loope
jb
adc
adc
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
add
add
push
add
loope
mov
mov
sbb
add
and
sub
fsub
and
sbb
mov
push
cltd
inc
cmpsl
mov
mov
xchg
jmp
ljmp
iret
cmpsl
lret
aam
aaa
fdivp
dec
out
mov
cmc
push
movsb
mov
dec
outsb
std
mov
add
inc
mov
shlb
ss
leave
mov
lret
jecxz
cmc
jae
lahf
and
sbb
or
dec
jbe
rcl
insl
xor
push
xorl
scas
jecxz
mov
pushf
call
add
shr
push
or
in
push
dec
jbe
sbbl
mov
push
pushaw
inc
jo
icebp
ljmp
outsb
or
sub
ljmp
jo
and
mov
pop
dec
enter
and
jnp
push
andl
rcrl
pop
dec
sahf
fwait
enter
movsb
cmp
lods
orb
cmp
mov
cmpsb
xchg
outsl
dec
adc
jge
adc
sbb
imul
dec
pusha
iret
cmp
push
push
jl
fistpl
aas
pop
xor
xchg
sub
pushf
out
not
mov
ljmp
sub
out
sahf
aaa
add
aad
lret
or
loopne
gs
xchg
ds
sbb
and
notl
cmpsb
xchg
mov
xorl
pop
icebp
call
adc
ret
daa
repz
push
mov
mov
fldenv
in
jle
pop
and
iret
inc
loopne
add
out
popf
push
sbb
mov
sbb
inc
inc
add
imul
cmpsl
pop
fcmovbe
push
xor
dec
cli
sbb
ret
pop
notb
divl
js
or
pop
loopne
popa
and
or
stos
xor
xchg
jo
xor
movsb
adc
je
sbb
push
or
in
daa
mov
sbb
repnz
js
lods
cmp
stos
adc
mov
adc
in
add
mov
push
aad
roll
pop
rclb
cmp
ja
fidivl
mov
mov
jmp
in
pop
cmp
push
mov
repz
sbb
out
xor
push
aas
sahf
dec
cmpsb
inc
hlt
xchg
fmul
jle
dec
xchg
mov
leave
data16
ljmp
imul
movsl
sarb
in
add
insb
fldcw
enter
push
mov
inc
pop
pop
xor
shll
enter
push
pop
push
sbb
lds
cmp
test
rcll
dec
enter
or
sub
flds
sti
push
ds
cs
xorb
lret
aaa
pusha
jle
fwait
push
subb
jp
jg
push
ret
xchg
out
lcall
mov
add
adcb
mov
sbbl
inc
jbe
jg
jmp
fs
sti
and
js
cmp
push
stos
mov
pop
add
jbe
cmpb
lock
cli
push
push
or
add
pop
lock
xchg
push
into
sub
clc
sbb
sbb
xchg
dec
inc
fistpll
stc
xchg
push
mov
xchg
mov
filds
scas
lock
loope
sbb
in
sbb
cltd
pop
ljmp
int3
mov
mov
cmpsl
aam
sub
imul
lds
fdivrs
sub
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
push
add
nop
or
add
stc
das
dec
mov
bound
push
mov
push
enter
or
or
xor
call
imul
shlb
pop
push
std
inc
xchg
mov
mov
push
popa
out
iret
sbb
mov
xor
inc
andl
cmpsl
inc
icebp
sbb
mov
ljmp
out
cmp
mov
and
imul
js
stc
adc
scas
shl
dec
mov
cmp
lcall
mov
jmp
pop
imul
test
jle
aad
jp
in
lret
and
lret
inc
leave
outsb
popf
ss
and
dec
inc
lods
call
pop
pusha
sub
ret
test
push
das
xchg
fistl
test
outsl
lcall
push
int3
out
cmp
dec
inc
leave
imul
hlt
jp
mov
ret
sbb
sbbl
popf
cs
div
mov
fdivr
adc
xor
push
or
jmp
adc
aam
mov
push
clc
push
and
dec
jle
dec
inc
adc
inc
inc
ss
xor
cld
push
mov
inc
mov
sbb
fs
dec
jecxz
mov
fmull
cmp
mov
adc
stos
les
inc
pop
aam
jae
mov
hlt
xor
cs
gs
cmp
cmpsb
int3
xchg
mov
sub
mov
lahf
xlat
pop
in
xlat
push
push
jl
push
xor
mov
fcoml
dec
in
dec
imul
pop
cli
std
mov
xor
rcll
fists
cltd
sub
inc
dec
xor
movl
mov
mov
outsl
dec
push
aam
mov
ss
adc
in
mov
jnp
dec
jg
sbb
cmpsl
daa
jo
sbb
and
sub
iret
stos
adcb
popf
repnz
lds
mov
lret
push
icebp
mov
gs
imul
jbe
scas
test
mov
push
or
pusha
outsl
or
std
jg
sbb
mov
push
test
push
lods
add
lcall
clc
in
push
jecxz
mov
xlat
xchg
sub
mov
mov
adc
add
pop
mov
lods
bnd
xchg
loopne
cmp
cltd
fdivrs
mov
rolb
jo
push
cs
addb
cs
pop
push
or
inc
xlat
lcall
cmpsl
cmp
call
lods
cli
pop
mov
sbb
pushf
ss
arpl
adc
stos
cmp
test
mov
aam
faddp
push
mov
imul
inc
add
mov
jns
xchg
mov
or
insl
xor
push
inc
scas
mov
xor
fists
push
jmp
jp
mov
out
imul
xor
xchg
pop
sbb
cmpb
cmp
in
inc
dec
enter
lret
or
pop
mov
fcomip
pop
cs
mov
and
push
push
mov
push
jo
ret
fcoms
stos
insl
add
inc
movsl
dec
decb
xor
pop
mov
loopne
popa
cld
sbb
push
lahf
add
and
test
aad
mov
outsl
arpl
push
adc
mov
add
sub
cmpsb
jmp
les
int
mov
add
xchg
jo
push
add
lret
jbe
loop
out
and
inc
call
or
add
mov
mov
xor
cmp
ret
outsb
aam
or
shll
rclb
sahf
inc
cld
cld
adcl
out
xchg
mov
cld
fbstp
jl
andb
sub
icebp
jno
xchg
data16
or
jmp
mov
inc
pop
popa
je
std
stc
inc
push
cmp
test
es
sbb
adc
enter
mov
imulb
sarb
arpl
push
mov
in
bound
xchg
cmp
or
in
and
ja
or
les
movsl
inc
lret
insl
jl
lods
fcoms
addr16
xchg
mov
xor
fldcw
ja
arpl
inc
gs
xor
repnz
scas
pop
and
mov
and
mov
mov
popf
out
sub
int
fdivs
rolb
flds
dec
ficomps
mov
stc
mov
cmp
notl
pop
jae
mov
adc
dec
popa
ficomps
pop
sbb
xchg
arpl
mov
popa
pop
pusha
adc
push
pop
fcom
adc
mov
cmp
out
cmp
int
pop
sbb
scas
imul
leave
cwtl
or
push
cmp
cltd
fadds
rclb
or
jnp
xor
cmp
mov
sbb
lea
xor
ljmp
fldl
sub
mov
loop
fiaddl
push
cmp
dec
lret
cmp
sbb
icebp
fcomip
xchg
sbb
imul
sub
mov
jle
xor
xor
pop
iret
mulb
popa
outsb
shrb
aam
subl
mov
push
test
imul
pop
push
dec
das
sbb
xchg
add
mov
inc
inc
dec
and
ss
test
fiadds
dec
cmp
sub
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
add
ja
add
test
lea
aas
stc
mov
insb
mov
into
dec
int3
movsb
shlb
xchg
xchg
daa
jl
jo
ss
mov
into
mov
test
mov
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
lahf
add
add
push
add
or
cmc
xorb
push
bound
jo
in
mov
movsb
xchg
mov
adc
iret
cld
mov
xchg
cmp
bound
scas
xchg
loopne
push
mov
cmp
and
inc
jmp
add
nop
ja
xchg
jno
shrl
in
daa
cltd
gs
xchg
jmp
lret
mov
sub
pushf
lods
adc
sub
addr16
pop
in
push
dec
mov
dec
cmp
mov
mov
mov
rclb
popa
dec
add
push
out
in
xorb
into
cld
mov
leave
fwait
cmp
sarb
cmpsl
sar
inc
push
mov
mov
rorb
cmp
inc
andl
push
sbb
mov
movsl
sbb
lods
lret
jmp
test
xchg
jmp
inc
imul
lea
pop
inc
daa
test
xchg
mov
cmp
jmp
sbb
jo
aad
xor
aam
rcll
inc
adc
adc
scas
mov
mov
ljmp
adcb
mov
repz
scas
jmp
cmc
lret
pop
aam
mov
xchg
mov
inc
sub
jp
ss
xor
cmp
repnz
pop
loopne
fdivrs
adc
repz
lret
push
test
es
xor
in
inc
out
shrl
or
xor
aaa
sbb
test
mov
mov
cmp
mov
ds
inc
xorb
iret
and
shll
jnp
mov
xor
jns
je
or
pop
insb
test
push
xchg
shrb
shr
pushf
jb
xchg
adc
insb
test
test
fsincos
aas
push
subb
xchg
imul
jnp
xchg
push
pop
or
and
lea
push
and
push
pop
fisttpll
jae
mov
or
xor
shll
test
les
out
mov
mov
popa
incb
ljmp
scas
mov
andb
inc
xchg
dec
insl
mov
aad
cmp
outsb
cmp
sbb
cmc
cmpsb
clc
sub
icebp
clc
pop
into
lock
data16
adc
shlb
or
enter
mov
mov
fmull
sub
or
jns
inc
cld
push
inc
xor
leave
push
jmp
in
repz
mov
push
cmp
js
fimull
xchg
xchg
mov
or
loop
out
adc
add
jge
cmc
push
mov
outsb
fidivs
mov
sbb
push
ja
or
sbb
lahf
sub
ds
faddl
mov
daa
push
imul
lret
outsl
scas
jp
or
add
mov
mov
loop
popw
inc
in
test
ds
xor
out
push
addl
jle
xor
jae
and
mov
pop
cmpsb
jb
imul
arpl
rcll
push
cmp
frstor
cmp
out
aad
add
push
jl
add
xor
cmp
and
add
xchg
pop
push
dec
jo
push
mov
ja
je
dec
jecxz
filds
dec
jecxz
daa
and
sti
out
dec
cmpsl
mov
mov
pop
inc
mov
test
push
xor
or
add
or
arpl
xchg
out
lods
pop
fldcw
mov
xchg
in
pop
pop
add
jo
cli
cld
pushw
cld
scas
jle
push
std
cwtl
sbb
lds
xchg
xor
or
sysexit
inc
dec
fs
add
enter
clc
pop
bound
mov
frstor
mov
inc
sbb
je
dec
aad
and
sbb
dec
ret
call
xchg
repnz
aad
dec
inc
fsubrl
arpl
jmp
dec
movsb
cmp
sbb
fs
jecxz
jge
mov
push
popf
mov
test
mov
xchg
data16
fmulp
sbb
push
out
enter
sbb
pop
dec
inc
cltd
add
mov
xor
xchg
loop
mov
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
add
add
add
add
out
fwait
jmp
lock
cwtl
daa
sub
lcall
mov
and
add
cltd
test
andb
shrb
movsb
inc
xor
add
js
jns
outsl
das
dec
insl
cwtl
adc
cmp
mov
or
lahf
in
add
fistps
push
xor
ret
stos
mov
mov
rcll
aad
sahf
insb
fisubs
sub
lods
popf
mov
mov
push
jle
test
or
lahf
push
sarb
fnstsw
inc
out
sbb
idivb
lret
sbb
and
sub
lret
ss
jnp
out
mov
push
push
in
das
cld
add
scas
xchg
dec
mov
test
or
adc
mov
push
mov
cmp
mov
and
and
mov
or
movsl
push
push
lds
fs
pop
add
cmpsb
cmp
enter
sub
jp
mov
pop
les
mul
pop
jne
outsb
popf
sbb
cmp
dec
mov
jb
jne
test
clc
adc
mov
ljmp
cmpsl
mov
or
xor
or
pop
mov
ja
mov
sbb
cwtl
add
xor
cli
cmpsb
aas
sub
jnp,pt
cmp
arpl
movsl
nop
sub
dec
out
outsb
loope
push
sub
repz
dec
insl
pop
bound
or
outsl
mov
bound
dec
addb
mov
and
add
jno
aas
je
aas
dec
movsl
sahf
sub
mov
cltd
pop
loopne
jp
into
sbb
arpl
test
sti
sbb
push
loope
inc
mov
mov
shrb
sub
es
sbb
cmc
xorl
lret
test
dec
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
aad
add
add
dec
imul
out
bt
or
jb
nop
lcall
inc
sbb
sahf
jnp
leave
mov
daa
dec
jge
mov
push
push
ret
negl
adc
gs
pop
fcomip
xchg
add
mov
mov
dec
leavew
lock
jl
lahf
sbb
pushf
inc
cs
fadds
sub
in
pusha
xor
fwait
insb
and
and
inc
xchg
add
and
aad
push
movsb
push
scas
push
icebp
dec
lods
inc
adc
ja
icebp
and
xor
mov
push
loop
add
rcrb
push
dec
in
shrb
cmp
jno
adc
sub
inc
lods
mov
sbb
in
lahf
ja
incl
xchg
pop
test
jns
inc
pop
fcomps
test
mov
sub
shrb
leave
lods
mov
adc
pusha
inc
out
imul
pop
js
pop
inc
sbb
aam
pushf
adc
aam
mov
pop
push
xchg
mov
inc
pop
divb
and
outsl
and
adc
mov
mov
cmp
or
xchg
mov
jp
loope
push
cmp
imul
out
adc
cmpsl
inc
out
xchg
call
fcompl
mov
push
mov
mov
inc
mov
jo
jne
popa
and
jp
or
in
daa
jg
push
loopne
jnp
loop
es
dec
xchg
sbb
je
fcoms
cmpb
xchg
fdivl
popf
mov
ds
dec
mov
mov
sbb
popl
sbb
mov
mov
pop
sub
int3
pop
adc
pop
in
cwtl
dec
call
cli
stc
xchg
pop
mov
mov
jmp
insb
mov
push
outsl
cltd
enter
aaa
loope
int3
cmpsl
vmread
add
lods
mov
mov
dec
mov
and
mov
sbb
and
xchg
aas
xlat
lret
icebp
mul
mov
shrl
sub
push
jns
push
push
add
xor
jmp
dec
popa
daa
inc
or
push
mov
outsl
pop
fdivrl
jle
mov
test
xor
popf
adc
nop
scas
mov
pop
jp
push
movl
cmp
jo
and
fbld
movl
cmc
out
push
mov
or
xlat
adc
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
add
add
pop
add
insl
mov
orb
pop
sbb
jns
mov
mov
js
push
out
or
cmpsb
dec
mov
das
mov
mov
cld
mov
xchg
cmp
cld
cwtl
mov
repz
outsb
add
push
ljmp
and
ss
pop
sub
ja
into
bound
cmp
xor
ret
sbb
pop
xchg
leave
call
shrl
push
jae
or
in
mov
and
fwait
popa
mov
mov
loopne
sbb
mov
enter
lret
js
pop
addb
push
cld
pop
sarl
fwait
xor
pop
and
push
add
bnd
out
aam
lea
nop
xchg
in
xchg
jns
sbb
cmp
jo
xor
ret
sbb
mov
repnz
mov
xor
sbb
mov
and
ss
cwtl
repnz
inc
push
dec
sub
mov
push
jle
adc
ficomps
push
jns
in
rclb
add
movsl
mov
sub
xchg
jp
sti
adc
aas
pop
jl
std
stos
inc
sub
movl
ds
sbb
scas
add
mov
push
pop
rol
mov
push
dec
jbe
jge
in
rcrl
test
cwtd
jge
and
pop
or
dec
dec
fstps
je
gs
imull
daa
jae
loopne
enter
xchg
mov
outsb
and
insb
xor
mov
push
in
or
ljmp
jb
adc
mov
jb
push
fdivp
ss
dec
cmp
inc
mov
push
es
arpl
sti
mov
and
push
loope
jmp
cmovl
mov
lret
add
dec
lods
dec
fisttps
cmc
push
sub
dec
out
jecxz
repnz
mov
test
cltd
scas
or
insb
cmp
or
in
jns
cltd
rcll
pop
inc
adc
xchg
mov
pop
add
and
mov
mov
cmp
scas
lock
push
adc
mov
mov
xor
mov
rcrl
ficoml
loope
cmp
js
xor
mov
or
lock
mov
xlat
pop
loopne
test
jne
mov
lods
mov
in
loope
rcl
rorb
cli
shll
es
inc
adc
mov
fdivs
add
push
enter
shr
fxch
cltd
push
sub
push
adc
adc
mov
pop
cmpsb
test
jmp
addl
adc
fucomip
int3
mov
push
xor
pop
popf
jmp
cltd
sub
ret
jp
adc
aam
gs
mov
movsb
jo
cmpsb
jae
shr
xchg
sbbl
dec
cmp
mov
int3
cmp
les
mov
xchg
js
int3
xor
jmp
push
adc
or
mov
mov
or
dec
xor
test
pop
test
jmp
add
fsub
movsb
pop
inc
ljmp
dec
pop
cmp
fs
int3
jo
or
xchg
mov
mov
rcr
cli
repz
mov
iret
nop
subb
inc
test
push
pop
jmp
ffreep
push
ja
lcall
sub
aad
mov
cmp
lret
add
mov
fstpl
mov
lret
pop
int
leave
sbb
andl
inc
shlb
sti
mov
mov
add
push
or
mov
sti
jo
jne
sub
or
adc
jp
xor
sbb
adc
mov
or
mov
clc
xchg
loope
imul
stos
adc
xor
or
cmp
add
mov
adc
sub
fwait
pusha
fistpl
sbb
cmp
pop
sub
icebp
pop
jno
adc
data16
xor
and
hlt
xchg
or
movsl
add
lahf
lret
scas
lds
dec
pop
out
or
cltd
jbe
clc
shl
fstp
mov
xchg
push
ja
add
inc
sub
aaa
in
stos
andps
dec
stc
cli
lods
cmp
fadds
cwtl
adc
sahf
and
imul
dec
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
add
out
add
aas
icebp
pop
jmp
dec
daa
cmpsb
inc
std
pop
popa
lahf
gs
adc
scas
sub
pop
jnp
mov
cmc
aad
xchg
pop
sahf
daa
jp
pop
jae
lcall
ds
sbb
loop
adc
sub
or
inc
xor
pop
adc
mov
jbe
cmp
pop
or
add
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
add
add
pop
cmp
jno
and
sub
nop
push
aas
rcrb
aad
mov
iret
push
outsl
dec
fidivrl
add
gs
shlb
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
pop
add
mov
cmp
pop
push
gs
cmc
ljmp
dec
and
movsl
inc
enter
loopne
fbld
cmpsb
pop
fstpt
xorl
xchg
lea
rclb
and
sbb
add
out
mov
fwait
xchg
loopne
cwtl
shll
push
push
xchg
outsl
inc
and
and
jl
sbb
cmp
sbb
jge
xchg
mov
sbb
xchg
jnp
cli
rcrl
leave
loopne
dec
in
scas
test
das
imul
rorb
fdiv
xchg
pushf
jne
cmp
pop
not
inc
ljmp
nop
add
lret
xchg
stc
loopne
mov
and
push
xor
popf
push
loop
xchg
enter
lods
pop
xor
ret
ja
sub
dec
mov
out
xchg
lock
xor
add
insl
mov
fwait
mov
mov
xlat
xchg
pop
dec
in
cmp
adc
mov
sub
loop
mov
pop
adc
sub
ss
lret
icebp
pop
adc
leave
leave
mov
mulb
out
je
out
outsb
pushf
or
imul
nop
js
dec
mov
cmp
stos
adc
cmp
jmp
cmp
mov
ficomps
sbb
dec
int
or
test
lea
and
pop
sbb
jge
inc
mov
popa
push
sub
pop
jno
and
jl
out
addr16
and
sahf
jb
inc
dec
divb
aas
arpl
es
aaa
out
adc
cmp
sbb
cmp
jo
in
inc
jae
ret
sub
mov
mov
ja
cmp
jle
rolb
ret
iret
in
push
and
imul
mov
leave
adc
ficoml
movsb
sub
and
jnp
icebp
dec
movsb
jl
out
or
jmp
arpl
aas
sarl
pop
icebp
cmpsl
imul
push
mov
ljmp
mov
or
lea
xchg
lret
xchg
insb
fsts
cmp
movsb
daa
pop
jne
jns,pt
sbb
lahf
lret
ret
lret
adc
lcall
ret
sahf
jno
sbb
jmp
jg
xor
out
adc
xor
jle
xchg
mov
fsubl
stc
nop
in
push
jo
cmp
inc
pop
imul
dec
pop
sbb
lods
addr16
fadds
lods
insl
fisttpll
sub
out
repnz
lds
lret
dec
stos
jecxz
pusha
inc
inc
les
pop
outsb
inc
cs
xchg
and
test
or
cli
push
notl
cs
clc
xor
mov
notb
mov
call
mov
lods
mov
pop
mov
es
int3
jae
xchg
pop
pop
xlat
sub
mov
jp
jecxz
in
fnstsw
lcall
lods
mov
hlt
shlb
cmc
mov
and
sbbb
sahf
pop
mov
repnz
fisubrs
pop
add
or
aad
test
push
ja,pn
push
out
and
mov
mov
sbb
jae
sbb
pop
mov
mov
xlat
stos
push
in
imul
lds
stos
xchg
push
cli
push
pop
outsl
sahf
xchg
aas
push
shll
in
cld
or
mov
xor
dec
adc
cmc
inc
mov
in
leave
in
out
pop
mov
add
add
adc
test
push
sub
cld
mov
mov
insl
call
shll
xor
and
in
sub
push
mov
jge
ds
cmc
lods
mul
lods
ret
cmp
and
jnp
cmp
and
shrl
add
xchg
scas
in
icebp
insl
add
xchg
pop
and
icebp
mov
repnz
push
ljmp
add
lock
sub
mov
fldl2e
adc
jns
inc
cmp
fwait
push
mov
pop
ja
cmp
lret
jg
imul
out
xchg
aaa
push
dec
ret
fwait
dec
sarb
mov
add
and
or
stos
push
sbb
ret
andl
fmuls
adc
repz
aad
aas
popa
dec
lods
pop
jne
mov
inc
lods
lea
add
leave
jbe
adc
push
cmp
mov
and
call
xchg
sti
jle
push
js
mov
repnz
repnz
xor
arpl
jle
and
dec
mov
or
cmp
lcall
fbstp
pop
out
sbb
in
lods
in
and
mov
xor
sub
call
push
test
sti
loopne
pusha
xchg
rcl
pushl
mov
shlb
push
iret
and
enter
hlt
jns
or
mov
movsb
gs
mov
push
dec
xor
loopne
jle
add
loopne
fucomi
pop
aam
dec
ret
adcb
repnz
sbb
xor
mov
sbb
xchg
sbb
decb
pop
js
xchg
mov
mov
mov
sbb
xchg
or
out
pop
popf
pop
inc
es
and
into
cmc
int
cwtl
scas
pop
orb
xchg
leave
or
out
pop
outsl
and
xchg
aaa
mov
xor
out
in
dec
sarb
test
xchg
xchg
leave
jg
scas
pop
lahf
fs
mov
cmp
xchg
xchg
or
xor
sbb
or
je
shll
xor
dec
and
push
mov
fiadds
and
mov
push
and
inc
sub
test
inc
dec
fstpt
imulb
sub
clc
mov
aad
outsl
pcmpgtw
jno
jge
xchg
mov
push
daa
daa
orb
les
pop
dec
insl
xor
fs
push
stc
cli
mov
sbb
bound
adcb
adc
repz
xor
das
addr16
or
divl
mov
lods
stos
cmp
or
ja
inc
xor
ds
or
cmp
sahf
sbb
mov
jmp
and
inc
mov
into
add
sbb
mov
dec
adcl
movb
mov
cmpsb
scas
jns
xor
and
dec
xor
push
inc
cmp
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
cmc
add
add
add
inc
outsb
insb
clc
int3
xor
mov
mov
add
add
mov
sti
in
aaa
or
fcmovnbe
gs
push
cltd
loop
add
sub
sahf
inc
mov
fcomps
push
jnp
mov
sub
pop
adc
shll
loopne
lret
call
clc
pop
inc
mov
mov
lea
mov
das
repz
push
mov
stos
fsubp
out
jbe
add
push
xchg
push
mov
add
xor
cs
inc
ljmp
nop
out
arpl
and
insb
pop
pop
and
cli
into
sbb
in
xchg
shrl
fwait
or
ljmp
movsl
mov
push
iret
shll
sti
or
leave
movsb
lds
pop
movsb
ja
ja
push
dec
push
clc
fsubrl
cmp
cmp
fcomps
jl
lret
mov
pop
les
and
jp
imul
popf
movl
mov
mov
pmuludq
rcrb
aam
or
xadd
loopne
lods
outsb
popl
add
mov
bound
insb
shr
dec
pop
or
fsubrp
mov
jb
inc
ret
pusha
loope
dec
cmp
fsubrs
ja
sbb
loope
add
xor
cltd
push
mov
xorl
push
dec
lret
xchg
je
push
shll
pushf
dec
adc
jp
and
push
pop
cld
aaa
loop
jg
je
incb
mov
cmp
jne
fs
mov
cmp
sub
shlb
xlat
lea
cmpsb
test
dec
loopne
mov
jmp
add
xor
mov
jge
je
shrb
adc
dec
and
stc
dec
push
sbb
lea
xor
xchg
cmp
sbb
adc
or
ja
add
cmp
cmc
fcomps
jp
push
cwtl
sti
sub
and
test
cwtl
lods
and
or
sti
xchg
lea
out
or
mov
cmpl
adc
stc
xchg
sub
and
outsl
dec
into
loope
addr16
ret
stos
repz
out
sub
js
cmpsb
fiadds
add
xor
std
cwtl
sbb
pop
sub
int3
movb
or
push
ret
dec
jg
icebp
pusha
lcall
popa
scas
sbb
ret
xchg
loopne
xchg
ds
popa
scas
mov
push
lea
lahf
adc
shlb
aam
dec
in
scas
outsl
cli
xchg
push
push
add
inc
fbstp
cmp
int
stos
daa
cmp
sahf
int3
mov
pop
fcomi
pop
sbb
sahf
or
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
rolb
add
lods
or
add
jbe
bound
cmp
iret
mov
dec
negl
add
and
sub
inc
push
in
mov
nop
bound
xchg
mov
sarb
push
cmp
sub
push
rorb
jmp
xlat
push
xchg
sbb
outsl
inc
fdivl
out
outsl
out
popa
cmpsb
add
mov
pop
lods
pusha
xor
or
pop
fidivs
adc
ss
in
xor
pop
jge
inc
pop
daa
xlat
add
std
push
xchg
pushf
add
arpl
jmp
adc
pop
xor
mov
or
mov
sbbb
cmpsl
jp
push
stc
out
fcomps
mov
mov
leave
push
pop
mov
xbegin
add
int3
pop
imul
mov
ret
push
jb
jp
fstl
sub
ja
andl
sbb
add
fldenv
call
ret
fsincos
cmpsl
xor
test
sbb
sar
dec
or
stos
and
sbb
movsl
loop
gs
shlb
mov
into
push
adc
cmp
dec
movsl
push
jge
hlt
and
or
mov
popf
adc
lea
test
pop
mov
aas
push
jmp
adc
lret
mov
inc
xor
cld
or
scas
add
and
or
xchg
or
jl
out
out
mov
pop
test
fidivs
mov
clflush
and
jmp
mov
sahf
adc
push
push
pop
add
and
inc
jne
pop
out
adc
xchg
mov
sbb
cmp
nop
pusha
xor
and
cmp
cmpsl
xor
repnz
ss
mov
add
imulb
mov
push
xchg
bound
xor
dec
repz
shr
insl
mov
cmp
or
sbb
add
in
adc
add
inc
cmp
cltd
fwait
test
popf
pop
mov
fisubs
xor
dec
js
sbb
lds
aas
xor
adc
fsubp
jp
movsb
jo
jge
in
imul
test
or
data16
or
mov
test
mov
ja
cmp
mov
adc
dec
mov
or
xor
ds
sar
xor
sub
icebp
neg
push
pop
in
lahf
pop
inc
lcall
xchg
iret
repnz
leave
add
push
push
cmpsb
testl
stos
ds
mov
add
xchg
out
jle
fcmovb
inc
imul
jmp
jmp
stc
das
ret
in
test
inc
jmp
hlt
rorl
pop
xor
xchg
inc
inc
repnz
into
imul
pop
dec
cmp
or
sub
ffree
ljmp
push
daa
cli
xchg
lret
sub
movb
mov
jecxz
popa
push
mov
ret
or
negb
pusha
sbb
dec
stc
mov
jle
test
stos
dec
out
fimull
jnp
outsl
xchg
int3
add
popf
in
je
ret
pop
outsl
daa
rorb
inc
lock
mov
jo
jb
dec
test
stos
testb
outsb
test
pusha
pop
call
ror
mov
aad
cmpb
mov
push
xchg
dec
data16
arpl
imul
inc
lds
ja
add
mov
loop
xchg
mov
jecxz
test
push
and
loopne
mov
jle
inc
pop
push
mov
xchg
jle
xchg
push
lods
test
mov
push
adc
mov
jbe
adc
fidivs
cs
test
leave
stos
jge
test
insb
jbe
rcll
jo
cmp
movsb
call
fists
out
popf
push
xor
xchg
or
pop
insb
rclb
pop
movq
cmpsl
out
adc
aad
sub
call
fmull
mov
cmpsb
inc
fwait
pop
push
cmp
jbe
repz
imul
inc
push
mov
adc
mov
mov
jle
pop
fcompl
push
jg
sahf
ficoms
sub
in
bnd
sbb
insl
mov
cmpsb
push
lret
mov
test
aad
fmuls
fsubrl
out
arpl
pop
jg
sub
in
push
xchg
enter
addl
lock
mul
adc
push
xchg
jns
shr
into
xor
or
lea
inc
repnz
fucom
add
push
or
mov
cs
lods
ret
out
or
push
push
pushf
daa
in
out
push
mov
sbb
add
push
pop
push
sub
jecxz
arpl
dec
out
xchg
push
inc
ret
jmp
pop
xchg
push
inc
pop
jmp
sbb
mov
inc
repnz
and
and
cld
mov
push
stos
add
inc
xchg
pop
dec
sub
add
pop
les
pop
leave
xor
cmp
sub
cmpsl
add
das
jno
xchg
es
and
push
mov
mov
mov
adc
loopne
inc
test
std
cmc
adc
lods
xchg
add
out
cli
or
enter
dec
dec
mov
push
leave
fdivr
icebp
xor
xchg
jle
pop
push
outsl
js
xchg
push
mov
icebp
jmp
test
xor
ja
and
xchg
shlb
push
cld
xlat
and
pop
push
add
popa
jge
test
test
or
loop
nop
adc
add
and
fnstenv
outsl
fsubrs
movsl
push
cmp
fdivr
leave
lret
xchg
pop
push
or
jnp
mov
adc
mov
sbb
adc
adc
in
cmp
les
sbb
fucomip
mov
leave
cltd
pop
in
sub
pop
sbb
add
dec
cs
or
movsb
bnd
mov
jmp
imul
or
loop
outsb
adc
fildl
out
or
mov
mov
add
push
push
push
in
push
sbb
push
cmpsb
in
cmp
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xchg
push
add
inc
pop
add
pop
lods
xchg
popa
xchg
dec
nop
jo
and
xchg
shl
imul
cli
std
push
xor
out
adc
mov
mov
push
mov
inc
imull
pop
jno
test
clc
mov
mov
mov
sub
mov
and
sub
xchg
test
fstpl
mov
add
test
inc
mov
js
push
cli
jge
nop
adc
push
std
xorl
loopne
cwtl
xor
out
rorl
push
jo
hlt
push
mov
loope
cmc
aas
ror
fiaddl
fdivr
repz
add
dec
jns
lcall
out
pop
lret
or
nop
movq
nop
lahf
pop
hlt
insl
mov
call
ret
add
sub
pop
mov
repnz
push
rorl
test
mov
sub
mov
mov
mov
test
jns
xor
fdiv
out
and
scas
dec
insl
cmp
sti
dec
or
push
add
lret
movsl
cmp
fwait
nop
and
ret
xchg
sub
aam
add
sub
in
sub
frstpm(287
int3
push
insb
xor
or
imul
in
xor
jb
fcmovnb
push
ja
fadd
add
mov
jge
mov
pop
mov
cli
movsl
addl
cli
fadds
lods
lock
insb
rorb
sub
adc
cmp
shlb
int3
mov
in
inc
jae
mov
push
ret
lods
cld
jne
push
ds
xor
dec
jl
mov
sub
cmpsl
cli
or
dec
inc
mov
sbb
aaa
mov
push
in
insb
mov
mov
mov
sarb
ja
movsb
mov
xchg
jb
pop
std
adc
mov
loope
cld
lods
icebp
adc
cmp
jmp
xchg
mov
mov
lock
cmp
jge
push
jne
sub
pop
jg
loope
push
jnp
sbb
or
scas
int
lahf
push
rclb
jecxz
jb
pop
push
negb
pop
inc
inc
pop
enter
faddl
scas
mov
das
pop
mov
jg
push
insb
sti
jnp
test
sub
loop
cltd
sbb
into
mov
cmova
dec
stos
lock
mov
dec
sbb
cld
daa
jp
rol
xchg
lods
popa
mov
test
cmp
rclb
cmp
cli
jb
and
out
imul
inc
nop
xchg
mov
fadd
sbb
sub
mov
pop
popf
mov
lahf
rolb
mov
cwtl
and
dec
or
add
orl
pusha
rcr
inc
sbb
jle
pop
shlb
push
fs
sbb
test
iret
cmpsl
imul
lret
inc
in
jns
cmp
repz
adc
bound
cmp
bound
cmpsb
sub
arpl
ljmp
movsb
lods
repz
add
out
dec
rorl
push
jo
and
or
sub
xchg
or
outsb
out
subl
pop
pop
inc
mov
sub
repnz
es
subl
push
call
sub
aas
and
jmp
clc
adc
rcll
int3
ret
mov
test
sti
jp
sti
std
add
out
arpl
xor
xor
imul
fidivrl
repnz
repz
out
and
push
and
loope
mov
loope
sub
test
std
push
pop
lods
popf
jnp
or
shrb
mov
inc
imulb
clc
pop
add
push
pusha
cs
pop
leave
pop
adc
adc
mov
in
dec
sub
sbb
daa
test
lret
push
ret
mov
xor
xor
push
mov
cmp
mov
mov
dec
lods
mov
in
or
and
negb
popa
filds
sbb
jle
pop
int
add
adc
add
inc
loop
lods
mov
mov
call
mov
arpl
cmc
popa
cmp
shll
mov
dec
adc
push
dec
xchg
cmc
addr16
cli
xchg
cli
jb
mov
shr
adc
pop
add
das
mov
arpl
std
pop
int
inc
or
mov
out
cmpsl
repnz
mov
outsb
or
pushf
fnstsw
pop
ljmp
rolb
xor
xchg
leave
lcall
cld
push
dec
push
mov
ret
push
in
push
mov
iret
mov
es
insl
mull
mov
bnd
jb
cwtl
leave
ds
cmp
movsl
test
lret
and
repnz
imul
ds
dec
popa
lcall
push
add
xor
jnp
mov
mov
jno
loop
xlat
divb
cmp
fbstp
sub
leave
and
push
ficoml
inc
sahf
rcll
mov
ficoml
pop
push
cmp
cs
sub
push
mov
mov
imul
pop
cltd
mov
add
call
hlt
insl
or
sbb
loope
out
push
and
test
imul
call
and
jge
pop
mov
out
xchg
xchg
and
dec
pop
cmp
arpl
rorl
mov
mov
das
xchg
cmp
mov
and
and
push
ljmp
movsb
or
dec
or
and
pop
mov
adc
loopne
pop
shll
or
push
sub
es
adc
pop
movsl
rorl
mov
mov
push
loopne
dec
push
repz
in
insb
xor
jae
dec
hlt
aaa
js
enter
leave
fsubs
into
xor
clts
xorb
test
cli
xor
lods
stos
mov
mov
dec
dec
mov
cltd
scas
mov
inc
pop
movsl
stos
and
rcll
inc
jp
mov
jl
aad
jl
dec
outsl
filds
sub
push
jae
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
add
add
add
add
rol
push
fisubrl
filds
out
pop
mov
cwtl
cwtl
mov
test
clc
lcall
fwait
rcll
lcall
pop
inc
negl
mov
aas
inc
mov
xchg
mov
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
nop
add
add
adc
pop
aam
xor
in
frstor
mov
or
inc
clc
or
jl
push
jnp
add
sbb
pusha
jecxz
mov
sub
in
sarb
std
lods
dec
sub
dec
inc
pop
sarb
mov
int
jae
xor
jl
push
stos
sub
testb
jne
sub
mov
out
pop
push
shlb
out
hlt
das
rcrl
bound
push
jmp
sub
je
sub
jle
insb
cmp
fldl
cmpsl
and
pop
lods
fs
repnz
fyl2x
mov
xchg
xchg
mov
pop
mov
dec
mov
jo
jne
cld
xor
dec
cmp
sahf
mov
fists
sbb
cmpsl
adc
pop
pop
sub
xor
outsb
repz
frstor
or
arpl
into
mov
addr16
mov
add
push
mov
jae
and
popf
jae
enter
adc
incb
inc
xchg
clc
popf
jle
loopne
fcmovb
sub
aaa
xor
sub
xor
sti
enter
xchg
fdivr
sbb
jbe
fimull
cmp
cmp
sbb
and
inc
les
xor
scas
pushf
lock
add
fisubs
mov
cmp
jl
dec
stc
dec
pop
pop
adcl
in
pop
dec
iret
and
xchg
aad
pop
mov
mov
fisubrl
gs
out
mov
push
push
js
xchg
lods
sbb
lret
and
inc
lea
mov
lahf
cmp
jecxz
jp
dec
ss
lret
lock
or
push
adc
into
and
sbb
add
adc
nop
pop
mov
daa
loopne
xchg
shl
imul
cs
out
sub
and
push
inc
mov
in
mov
lret
dec
dec
pushf
adc
cmpsb
dec
jne
inc
cmp
xlat
daa
xchg
and
cmp
lock
sahf
fstpt
lds
pop
add
xchg
call
out
push
mov
mov
jae
aaa
inc
aas
ror
pop
clc
jns
xadd
or
push
popf
sub
sbb
imul
movsl
sbb
fst
insb
xchg
aam
add
mov
dec
and
mov
iret
adc
cmc
data16
xchg
push
lcall
cmp
push
push
xchg
lods
loop
jbe
into
inc
shl
mov
adc
bound
mov
cld
inc
pop
aaa
aaa
fmul
fwait
jg
push
mov
addb
adc
out
dec
and
mov
imul
inc
mov
adc
jge
aas
mov
adc
loopne
dec
call
out
in
mov
xorb
xchg
pop
mov
mov
lea
xor
fbld
and
jb
xchg
mov
sbb
int
stos
movsb
push
mov
ds
jae
popf
xchg
push
and
mov
repnz
mov
pop
mov
test
sbb
adc
and
push
call
addr16
fldl
xor
jmp
cld
movsl
outsb
or
arpl
push
lahf
mov
pop
sbbb
dec
mov
jle
inc
cli
cmc
gs
pop
iret
push
in
jle
add
sti
sbb
xlat
sub
aad
add
shll
rorb
repnz
fsubs
fldl
mov
outsb
ss
sbb
jno
push
lret
or
int3
dec
mov
sub
pusha
sbb
and
jle
dec
xchg
orl
sbb
stc
lock
sub
adc
sub
pop
mov
inc
push
xchg
jmp
int
push
push
mov
iret
sar
outsl
ljmp
cmp
push
shrb
outsl
jo
rol
cmp
fists
pop
aam
aaa
cmpsl
int3
mov
cmovae
mov
int3
loop
scas
mov
aam
or
cwtl
jbe
inc
ljmp
xchg
filds
and
sbb
and
daa
ret
push
pop
subb
dec
test
repnz
push
mov
subb
or
mov
or
popf
adc
and
cmp
iret
fildl
mov
mov
in
inc
out
iret
or
dec
ret
jo
mov
mov
mov
jb
add
outsl
lret
dec
cmpsb
ss
ds
xchg
and
mov
icebp
lea
or
adc
aad
scas
xlat
cld
cmpsl
cmpsl
push
mov
mov
loopne
and
xchg
mov
sbb
insl
out
out
inc
aaa
mov
or
lods
popf
jns
mov
in
push
lahf
jbe
xchg
or
sub
dec
sbb
dec
mov
cmpsl
pop
out
pop
rcll
cli
or
and
add
push
mov
in
cmp
addr16
out
mov
push
cwtl
or
movsl
cmpsb
loope
pop
mov
insb
mov
das
mov
mov
push
fxch
arpl
jl
div
jne
mov
lahf
sbb
jg
cmp
or
call
rclb
cs
cmp
inc
cmc
aam
stos
in
xchg
fsubl
xchg
add
aad
sub
mov
addr16
xor
ror
mov
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
pop
add
cmp
add
bound
repnz
cmp
xchg
mov
and
jne
ret
out
sarl
xor
push
fdiv
das
loope
pushl
in
cwtl
and
fwait
lea
stos
xchg
push
jno
int3
andl
xor
dec
insl
ficoml
cmp
inc
nop
sub
dec
or
add
pushf
mov
cs
mov
jo
ret
jnp
cmpsb
js
call
scas
repnz
daa
fsubl
jns
movsb
push
push
pop
add
fdivr
mov
jnp
scas
mov
je
add
jmp
sahf
into
push
and
jge
repnz
loopne
pop
aad
aaa
and
in
mov
xlat
ss
push
push
idivb
jge
pop
jbe
pop
dec
fs
mov
jmp
cltd
lahf
lock
cwtl
loop
leave
fwait
movsl
add
adc
push
xchg
ret
mov
mov
xor
ja
mov
insl
push
pop
or
movsb
lea
mov
xchg
cmp
out
in
pop
adc
adc
mov
pushf
pop
sbb
mov
jp
cmpsb
mov
popa
mov
inc
push
test
xor
mov
sahf
test
push
add
mov
rolb
mov
cmpsb
push
ja
xlat
pop
inc
fcoms
dec
sbb
push
jbe
scas
cmp
mov
push
outsb
dec
movsl
test
jno
rcll
add
inc
in
push
shl
mov
aas
dec
jmp
in
push
scas
sub
sub
lret
add
xlat
es
daa
cmp
sub
jo
cmp
cmp
clc
loope
mov
loope
fcoms
call
cmp
clc
ret
push
push
rcrl
shlb
jecxz
test
xor
jns
repnz
iret
mov
int
pop
jns,pt
mov
cmp
cmp
fwait
cs
push
jns
scas
data16
sarl
leave
mov
rcl
insl
cmp
add
xchg
and
dec
dec
xchg
out
jp
add
mov
or
mov
cmc
jae
mov
arpl
xchg
cmc
rcl
dec
scas
lds
sarb
subl
jg
in
out
mov
jbe
aam
mov
out
sub
popa
sarb
or
sbb
and
out
add
dec
jp
and
ret
pop
dec
aaa
or
cltd
repnz
out
subl
xchg
sbb
mov
cli
rorb
push
xchg
in
sbb
inc
cmpsl
pop
dec
push
xor
sub
movsb
mov
jg
dec
cwtl
sub
sub
add
xchg
lcall
xchg
cmc
push
pushf
test
jle
mov
imulb
cmc
lock
mov
imul
outsb
xchg
fbld
nop
or
pop
xor
int
cmpsb
enter
icebp
outsb
mov
sahf
ljmp
cltd
repnz
loop
push
popa
mov
ds
rolb
mov
fldt
test
mov
add
dec
dec
dec
iret
xor
pop
push
cmpsl
inc
sbb
divb
xchg
shrl
mov
movsb
push
xchg
dec
mov
negb
fadds
jmp
cmc
mov
sahf
inc
push
sub
xor
and
cmpsb
pop
pop
outsb
cmpsw
and
out
jns
mov
sub
popa
jg
cli
and
and
pop
out
and
pop
push
cmpsb
sub
jl
scas
inc
xlat
adc
scas
inc
repnz
lods
ret
inc
add
gs
add
pop
or
mov
lods
nop
lods
pop
cmc
scas
repnz
mov
xchg
and
bound
out
xchg
pop
cwtl
inc
test
sub
or
cmp
and
mov
mov
or
xchg
or
adc
fidivs
push
pop
push
stos
xor
fadd
jecxz
xchg
jbe
sub
or
cli
dec
mov
jb
or
xor
dec
test
dec
xchg
mov
lret
ss
xor
fldcw
mov
lcall
popa
dec
fstsw
adcl
jle
outsb
jle
cmp
repz
stc
ds
outsl
mov
adc
lods
fildl
lret
cmp
pop
imul
adc
lods
ss
rorl
cmp
fbstp
lods
std
cli
mov
and
js
lods
scas
xchg
lcall
test
dec
add
sti
dec
jg
xor
inc
sub
push
adc
stos
dec
xlat
mov
scas
pop
in
repnz
xchg
movsl
cltd
jne
and
out
sbb
sub
inc
das
leave
jo
filds
pop
mov
mov
lods
in
into
mov
mov
mov
push
xchg
outsl
sub
cmp
jl
repnz
scas
popa
repnz
cmp
mov
sub
push
mov
movsb
ficoml
out
and
stos
or
mov
mov
pop
xchg
rorb
fstps
cmp
std
ds
push
imul
outsb
mov
or
out
cmpl
push
in
out
icebp
jp
hlt
dec
and
dec
scas
xchg
out
or
mov
jno
push
cli
jns
and
xor
cmc
adc
inc
cltd
or
push
into
test
cmc
pop
cmp
dec
data16
xor
adc
and
inc
scas
jl
aas
pop
push
push
aaa
out
xor
pop
or
outsl
jno
jle
inc
je
out
outsb
psubusw
dec
pop
std
jnp
xor
or
dec
or
bound
and
movsl
mov
inc
js
sub
sbb
cwtl
cltd
push
enter
lods
es
adc
and
ds
pop
enter
sbb
pop
rorl
push
xchg
aam
rorb
adcb
loop
dec
icebp
enter
jb
mov
test
ss
gs
aaa
cmpsl
and
xor
cld
outsb
lock
stc
cwtl
bound
adc
cmp
into
or
sbb
mov
mov
add
vpunpckhbw
ds
aas
mov
fcoml
test
movsb
adc
dec
repz
jl
icebp
ds
cmp
sbb
fildl
mov
adc
icebp
sub
push
adc
and
test
enter
push
movsl
test
stos
mov
cmp
inc
insb
dec
sbb
test
pop
out
mov
cmp
push
psadbw
add
add
out
xor
xchg
call
dec
cmpsl
sbb
jb
movsb
adc
sahf
dec
in
lds
jnp
mov
into
fbld
lahf
sar
call
add
popf
lcall
cltd
cmp
mov
sbb
and
xor
ficoms
stos
bound
testl
cmc
inc
push
mov
roll
mov
adc
out
adc
test
jecxz
shrl
mov
mov
pop
or
stos
pop
jge
pop
faddl
xor
sarl
dec
roll
jmp
add
mov
fists
dec
aad
add
jle,pn
stos
stos
jo
sbb
or
in
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
push
add
add
add
add
pop
add
fstl
test
or
mov
jg
fists
dec
sbb
sbb
xor
and
sub
dec
inc
addr16
pop
lahf
movsb
and
inc
bswap
jl
out
inc
xchg
pop
lea
std
and
stc
dec
adc
in
aas
mov
cmp
lods
flds
ret
in
sub
inc
cmpsb
mov
inc
ljmp
cmp
popa
scas
imul
cmp
push
stos
and
mov
enter
shll
xor
ja
dec
pop
or
sbb
stos
push
mov
mov
sub
push
inc
mov
or
xchg
mov
scas
cmc
mov
test
pop
stos
ds
jo
pop
sbb
mov
lahf
mov
xchg
push
cmpsl
aaa
jb
out
or
mov
xchg
adc
addr16
shlb
xor
inc
sub
into
out
mov
dec
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
out
add
in
or
add
aas
fsubrs
mov
lret
add
dec
fwait
xor
ficoms
pop
mov
xchg
xchg
adc
jno
dec
leave
movsb
into
pop
push
hlt
fistps
push
movsb
inc
ret
scas
inc
jno
mov
aad
pusha
xor
cli
lds
ljmp
lea
dec
mov
out
ja
jns
mov
loop
repz
movsl
inc
rolb
add
lds
jp
std
pop
mov
mov
insb
inc
inc
pop
sarb
outsb
adc
cli
fwait
pop
xor
das
xor
clc
jb
pop
arpl
cmp
push
mov
pusha
fldcw
mov
out
or
pushf
jno
mov
outsl
lcall
mov
int
insb
push
push
cmp
scas
shlb
cmpsl
jecxz
inc
clc
dec
fsubs
inc
pop
dec
xlat
imul
mov
iret
lds
jmp
push
ds
adc
sbb
cmp
fwait
ljmp
mov
inc
sbb
sbb
push
sti
mov
inc
js
int3
rcrl
pop
loop
sarl
subl
mov
xor
mov
push
lods
dec
fisubl
clc
mov
jb
dec
mov
insb
lock
sti
and
or
sar
cmp
ljmp
jae
push
xor
in
cmpsl
inc
popa
cli
ja
leave
mov
and
jp
mov
sub
dec
sub
mov
pop
gs
inc
cmp
fidivl
outsb
adc
icebp
dec
mov
jbe
adc
pop
or
push
and
adc
push
pop
jnp
fcomps
fisubs
cld
movsb
ret
cli
ja
dec
cltd
inc
fnstsw
or
adc
jnp
xor
pushf
pusha
pop
subb
inc
xor
aas
jns
sub
jl
xchg
xor
pop
sub
jae
lods
push
inc
ret
push
jne
adc
lret
mov
cmp
mov
sbb
sar
sub
and
jl
jae
lods
and
mov
dec
ja
jg
stc
cwtl
arpl
ds
cld
sub
jne
jmp
xchg
pop
inc
fisttpll
xor
fstl
bound
loop
jbe
xor
arpl
add
sub
xchg
das
daa
jg
jmp
cmp
stos
or
jp
push
adc
xor
lret
test
pop
out
enter
and
loop
out
decb
xchg
jno
inc
push
loopne
jo
add
jp
fnstcw
add
leave
mov
notl
pusha
popf
loope
repz
push
jb
mull
mov
aaa
cmp
jmp
mov
aas
jno
outsb
mov
jp
fwait
and
push
inc
pop
pusha
ret
fisubrl
addb
gs
inc
iret
dec
cld
xchg
push
in
pop
cmp
xchg
add
lretw
add
sbb
inc
in
je
test
mov
gs
push
fidivl
lds
test
add
aad
stos
xor
fsubr
dec
mov
lock
data16
xchg
fdivs
xor
stos
nop
aas
movsl
ds
dec
mov
dec
xor
or
xchg
xchg
aam
popl
and
in
cvttps2pi
divb
mov
test
push
sub
jbe
cld
addr16
test
ret
add
sbb
mov
jne
push
mov
sti
dec
sub
clc
mov
jno
aad
repnz
addr16
dec
adc
lahf
sub
lods
jecxz
insl
stos
pop
ljmp
add
xor
das
mov
pop
bndldx
adc
sbbl
or
loop
jg
movb
outsb
mov
sub
popa
pop
inc
pushf
sbb
pop
and
scas
in
fisttpl
repnz
xchg
jae
fildll
add
adc
cmpsb
das
cltd
mov
subb
jp
out
dec
je
fmuls
in
daa
movsl
test
sbb
scas
inc
data16
jo
inc
cltd
mov
pop
mov
shlb
pop
push
outsl
push
add
fwait
repz
pusha
jmp
in
pushf
or
subl
repnz
and
outsl
cmp
shll
push
add
jg
jge
push
dec
repz
shll
sbb
out
mov
jae
nop
and
jnp
mov
xchg
ret
stos
dec
insl
pop
push
mov
repz
fnstsw
adc
jno
leave
cmp
push
fwait
and
mov
inc
insl
dec
push
jp
add
imul
pop
les
lods
in
sbb
dec
mov
xchg
mov
push
and
hlt
jo
lret
jne
rcll
mov
adc
pop
xchg
jae
shlb
fstps
das
push
mov
sbb
pop
outsb
fsubr
push
mov
popa
cmp
scas
inc
inc
cmovb
sar
sbb
pop
add
int
jmp
testl
int3
push
mov
in
push
dec
jmp
add
xor
aaa
in
lcall
dec
pushf
pop
in
fdivs
sbbl
mov
lret
in
mov
cld
push
sti
jae
jp
xor
shl
mov
aaa
xchg
adc
call
imulb
xchg
bound
mov
xchg
dec
xchg
mov
mov
stos
in
leave
cmp
cmp
push
ss
clc
xchg
mov
xchg
xchg
data16
out
ret
sub
dec
adc
and
xchg
mov
fstl
jp
not
imul
mov
pusha
shrl
jo
shlb
addr16
push
pop
mov
lret
dec
in
adc
lock
inc
mov
jb
add
push
mov
aam
push
shlb
push
je
jo
movsb
je
sbb
dec
lods
cli
ficoml
jmp
lret
mov
push
push
outsl
cld
in
repz
dec
call
xchg
rclb
pop
test
fisttpl
mov
in
imul
das
mov
daa
pop
sub
jbe
push
dec
or
mov
cs
ret
mov
xchg
push
push
sub
push
repnz
imul
aad
andb
push
cld
lret
les
shrl
cmp
in
mov
lods
mov
cwtl
xor
cltd
xor
inc
sub
aaa
loop
loopne
pop
data16
xchg
cmp
repz
cwtl
adc
xchg
lahf
ss
jecxz
jmp
sbb
scas
xor
cmp
inc
mov
xor
outsl
dec
divb
lcall
push
mov
or
xor
xchg
loop
rcrl
xchg
rolb
dec
rep
sbb
or
movsl
dec
xor
jecxz
stc
and
cli
mov
movsl
mov
cmp
xor
adc
repnz
int
jo
ret
cmpsl
icebp
or
cmpsl
xchg
pop
ja
or
push
add
or
lea
imul
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
clc
add
add
add
add
xchg
or
sbb
pop
pop
mov
mov
dec
out
bound
pop
xchg
test
or
aad
ucomiss
cmpsl
sbb
lods
andl
mov
je
sub
sub
xchg
scas
push
addr16
pop
pop
mov
add
jae
jns
jge
dec
inc
xorl
rcrb
cli
stos
push
sub
rol
pop
dec
stc
movsb
mov
push
xchg
jp
aas
push
in
push
in
jno
out
mov
pusha
push
in
stos
jge
je
out
and
mov
lds
adc
push
mov
pop
inc
lea
sbbl
pusha
xlat
adc
sbb
aam
xchg
dec
pop
jne
je
and
xchg
fistps
rcr
mov
iret
dec
xchg
inc
lds
movsb
inc
mov
add
sbb
cmc
aas
fcoms
sbb
adc
xchg
in
cmp
mov
jge
jns
pusha
repz
out
or
mov
pop
jne
sbb
ss
mov
cmpsb
lahf
incl
push
test
cs
mov
cli
imul
xor
lret
fs
notb
jl
stos
cmp
ljmp
xchg
adc
pop
jo
mov
mov
or
push
repz
push
cmp
lds
out
jns
xor
add
or
jmp
sbb
sarb
push
add
fmull
clc
mov
stos
cmp
rclb
xchg
jnp
test
test
xchg
test
test
xchg
or
out
inc
loopne
cmc
mov
xchg
in
sbb
fs
adc
movsb
int3
fcmovb
cmp
bnd
lock
jns
push
popf
inc
mov
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jns
add
xlat
add
add
xor
lahf
lret
faddl
mov
mov
dec
inc
xor
lock
xor
into
dec
bound
xchg
shll
fs
enter
fstpl
aam
pop
mov
cltd
decl
shr
push
faddl
out
cmc
fchs
sub
adc
stos
xor
shl
cmpsb
sbb
push
mov
push
das
push
pop
les
insb
pop
and
add
push
mov
dec
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
mov
add
imul
mov
orl
lcall
movl
ret
loope
xorl
sub
jbe
int3
sti
sub
dec
mov
dec
pop
outsb
pop
pop
pop
xor
mov
das
push
sub
std
test
or
pop
cmp
jno
js
in
adc
jne
imul
xchg
inc
fldt
out
xor
shll
das
loop
jnp
arpl
decl
imul
sub
cmpsl
subb
fs
push
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
sgdtl
add
add
movsb
nop
call
loopne
sub
mov
ds
jge
cs
pop
cmc
mov
dec
shll
add
cs
mov
scas
aad
mov
ret
adc
test
add
pop
test
dec
lret
push
stos
mov
push
ret
sbb
adc
test
fwait
popl
jo
sahf
push
xchg
push
or
in
jb
in
outsb
imul
out
popf
and
adc
aaa
mov
mov
test
add
jle
dec
sbb
jb
cli
inc
loopne
jno
jl
jb
repz
dec
push
xchg
cmpsl
xlat
int
jno
jbe
xor
dec
cltd
xchg
insb
test
roll
ds
lret
xor
orb
add
shrl
das
or
pop
cmc
mov
gs
xchg
sbb
cmp
xor
adc
xchg
sub
mov
jbe
sub
int3
xchg
jbe
adc
xor
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
push
add
add
add
add
sbb
mov
clc
mov
add
pop
pop
add
imul
int
mov
lods
xchg
cwtl
pushf
and
adc
sub
jge
icebp
movl
xchg
dec
push
sbb
sub
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
aad
add
mov
mov
jmp
cmpsb
dec
test
push
pop
rorl
dec
lods
mov
pop
cmc
movsb
cmp
ds
jne
ljmp
je
add
sarl
jg
subb
ja
ret
cld
adc
xor
xchg
orl
xlat
pop
jo
pop
mov
js
in
lret
jge
xor
sub
pop
adc
int
lahf
ficoml
mov
clc
test
mov
mov
inc
sti
daa
insl
mov
pop
mov
mov
push
jne
outsb
xor
shlb
cmc
in
out
shll
pop
dec
into
stos
frstor
ja
jge
jo
dec
jo
dec
jno
aam
bound
fidivl
jle
push
imul
pop
nop
ret
out
cmp
jns
dec
insl
xor
cwtl
mov
xchg
ja
cmp
ljmp
pushf
out
cmp
and
stos
add
scas
or
xor
pushf
clc
dec
jo
inc
cmp
push
filds
pop
push
jne
sub
stos
hlt
dec
out
xchg
jle
jo
push
jecxz
inc
les
lds
cmp
sub
fnstcw
das
aaa
mov
test
xchg
push
fwait
push
xor
pushf
mov
loopne
mov
mov
adc
jg
mov
xchg
sbb
jl
lcall
add
call
dec
mov
sahf
fnstcw
test
inc
add
jecxz
jmp
push
cli
stos
mov
out
dec
test
std
loop
daa
lods
mov
inc
aam
rcll
ljmp
jb
add
sti
insl
fmull
call
xor
cmp
std
sub
cmp
sbb
out
add
int3
mov
pop
xor
lods
cmc
and
bound
bound
aaa
and
cmc
daa
sahf
into
sub
vsqrtps
insl
xchg
push
sbb
inc
pop
mov
cmp
inc
cltd
cmpsl
mov
xor
push
shrb
iret
xchg
enter
push
insl
jl
std
lcall
stc
sbb
inc
cltd
movsb
add
jecxz
mov
add
movsl
scas
nop
pop
lret
pop
push
or
js
inc
inc
jmp
mov
and
ja
rcr
push
stc
int
cmpsl
cmp
popf
arpl
bound
cmpsl
mov
inc
or
cmp
inc
in
movsb
test
cmpsl
loope
fsubr
cmp
and
push
icebp
js
inc
cmp
pop
mov
aaa
or
js
jae
das
mov
mov
popf
xor
enter
outsb
outsb
test
xlat
mov
inc
dec
fbstp
adc
mov
mov
ret
fiadds
xor
call
test
jno
popf
ja
add
fisubrs
inc
ja
sbb
hlt
mov
ror
mov
aad
popf
and
fcmovnb
dec
enter
push
addr16
sub
data16
add
and
pop
mov
daa
hlt
sbb
out
cmpsl
test
mov
in
sahf
pop
test
loop
mov
fidivl
sub
push
lock
push
iret
fwait
push
mov
subl
push
scas
aas
lret
xchg
xor
mov
adc
test
aaa
lret
mov
mov
decl
mov
xor
mov
data16
xchg
gs
or
mov
push
inc
stos
inc
dec
insb
or
cmp
out
inc
imul
adc
daa
adc
cmpsl
inc
xor
push
shrl
mov
cmpsl
mov
xor
push
cmp
adc
js
push
sbbl
sbb
mov
pop
into
movsl
cmp
sbb
pop
mov
subb
sbb
or
scas
mov
jnp
xchg
loope
mov
mov
inc
fldenv
cmp
dec
or
jbe
pop
test
imul
outsb
adcl
sub
loopne
add
popa
test
inc
fsubrl
fcmove
cmp
mov
jg
mull
scas
out
bound
cmp
dec
pop
mov
push
ret
jns
addr16
pop
lret
pusha
cltd
add
mov
out
dec
addr16
loop
out
jl
mov
xchg
dec
pop
mov
cmc
les
int
rol
fidivl
inc
rcll
fdivl
inc
and
and
jmp
pop
clc
fldt
arpl
popa
jno
cmp
push
insl
jns
add
jno
je
ret
jmp
mov
loop
jo
movsb
cmp
jb
mov
sub
icebp
push
sbb
jge
popf
je
jbe
pop
inc
inc
sub
rolb
in
gs
aaa
mov
dec
enterw
stos
ds
iret
iret
loope
mov
ret
pop
jne
cwtl
aam
sarl
enter
cmp
xchg
fldenv
dec
dec
fsub
adcb
pop
lods
jp
inc
imul
add
ror
push
lahf
insl
jge
mov
dec
jnp
dec
and
adc
mov
cmp
mov
imul
imul
and
into
lea
push
cmp
inc
xor
pop
repnz
lock
mov
and
sub
mov
jo
mov
aas
fcmovnbe
int3
sub
add
test
sbb
jae
cli
xorl
adc
addr16
fidivrs
pop
and
push
sbb
test
je
inc
insl
dec
pop
pop
aam
lret
lock
mov
into
fsts
or
sbb
or
pop
test
and
sbb
sahf
repz
dec
mov
dec
int3
jbe
call
jb
xchg
je
and
in
stos
leave
lods
fildl
jecxz
jecxz
or
add
xchg
rorb
ret
xor
dec
xor
std
dec
cmp
lret
lret
xchg
sub
repnz
js
xchg
jbe
movsb
int
insl
outsl
push
aaa
outsl
jle
shl
fmull
sbb
outsl
loopne
or
inc
or
pop
pop
add
adc
fistpl
dec
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
mov
add
mov
add
adc
cmp
ret
xchg
sahf
sbb
adc
sarb
mov
and
loopne,pn
xor
int
pop
xchg
rdmsr
push
dec
cmp
pushf
inc
mov
dec
mov
or
jle
sbb
and
pop
stc
pop
lcall
push
jne
pusha
mov
mov
or
fidivs
test
ficompl
hlt
cwtl
push
adc
ljmp
add
dec
add
lods
inc
or
test
or
lea
adc
mov
or
fcmovb
in
rclb
sbb
xor
stos
mov
je
insl
pop
sub
int3
dec
in
and
pusha
fwait
adc
sub
jb
inc
mov
adc
outsb
arpl
arpl
mov
data16
fs
xlat
mov
sbb
mov
cli
jge
ja
sub
push
xor
je
fs
mov
insl
fstpt
mov
jg
mov
enter
sbb
xchg
add
ret
rclb
mov
rorl
push
push
decl
cmpsl
mov
pusha
add
aam
sbb
sbb
scas
push
cmp
mull
movsb
pop
movsb
jns
push
push
add
cli
mov
jne
dec
jp
leave
cmp
dec
jmp
ds
inc
push
pop
push
dec
andl
mov
and
push
out
lods
mov
dec
jnp
test
iret
aad
inc
sbb
mov
jmp
add
xchg
stos
pop
or
out
and
loop
popa
xor
sbb
mov
fs
cwtl
mov
pop
push
xchg
mov
fdivs
popf
dec
cmp
rcrl
xchg
jb
adc
in
js
stc
and
jbe
mov
xor
jno
lods
and
int
call
ffree
sbb
or
or
add
xchg
pop
int
in
popf
loopne
pop
or
dec
shl
insl
adc
dec
test
or
sub
and
lret
cmp
push
jne
loope
xchg
cmp
les
mov
lret
xchg
ja
dec
sbb
dec
scas
xchg
cmp
pop
adc
sti
ja
mov
addl
in
test
push
dec
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
jl
add
test
add
sti
xchg
add
in
mov
out
clc
lret
inc
xor
cmp
jl
frstor
sbb
jbe
dec
add
cmp
and
xor
adc
pop
xor
andb
jno
movsl
int3
js
out
push
insl
xchg
and
inc
dec
incb
das
dec
jbe
mov
fstl
or
rolb
movl
mov
xor
push
repnz
push
aas
loopne
add
das
inc
repnz
adc
iret
int3
cmp
and
xchg
ja
ja
dec
aaa
xor
fistps
sbb
push
cwtl
or
aam
or
lds
es
into
sub
push
or
popf
std
aaa
mov
das
dec
push
int
adc
fs
push
sub
fistpll
sub
cli
jns
pusha
xor
addb
sub
test
lods
loopne
out
mov
xor
sti
and
lret
ss
push
jmp
adcb
jcxz
jbe
lods
mov
scas
in
add
shlb
mov
mov
aad
mov
sub
lock
jle
adc
addr16
scas
xchg
test
dec
mov
in
movsl
cmpsl
inc
iret
ds
icebp
jle
ret
pop
movsb
sbb
and
in
iret
out
es
or
mov
adc
or
dec
inc
fidivs
cmp
fcompl
jbe
aam
add
lahf
sub
mov
ja
inc
jge
lret
cmp
xor
js
push
pop
icebp
push
mov
rcll
adc
cmp
dec
add
cmp
xor
jb
push
cmp
movsb
dec
adc
dec
rol
pop
repnz
enter
push
sbb
pop
adc
in
frstor
shll
aad
repnz
pop
into
loop
inc
cltd
dec
sub
inc
mov
mov
mov
cmp
fcmovne
in
mov
pop
pushf
dec
adc
pop
inc
mov
mov
scas
fnstenv
shll
jno
rcr
xchg
insl
push
push
rcrb
sub
cmp
xor
scas
cmpsl
into
mov
movsl
das
out
movsb
inc
lret
cltd
rcrl
pop
fcomi
xchg
mov
fmul
popa
push
hlt
and
lret
lods
out
and
gs
pop
test
fldcw
pop
mov
xor
xchg
mov
and
stos
mov
sbb
mov
push
mov
stc
mov
mov
cmp
in
rdmsr
push
inc
arpl
and
mov
movsl
cmp
push
sub
push
adc
es
mov
std
lock
xchg
mov
stos
xchg
enter
out
fcmovbe
movsb
or
inc
jmp
sbb
pop
mov
sub
test
loope
sbb
ljmp
lock
call
add
push
mov
inc
jle
shr
push
rcrl
add
leave
cmp
sbb
push
sub
lahf
jp
test
xchg
mov
push
lods
and
mov
adc
jle
add
insb
sub
ret
push
mov
imul
xchg
pop
es
mov
repnz
fstl
outsb
lret
jmp
idivl
xor
mov
popf
inc
or
in
adc
out
push
lret
push
pop
aaa
dec
aaa
push
cmp
incl
cld
test
adc
icebp
mov
iret
pop
popa
jle
or
notl
sub
fwait
dec
test
scas
pop
sub
mov
mov
fdiv
cmp
iret
pop
movsb
mov
stc
cmp
test
decl
loope
xorb
xchg
arpl
mov
sbb
xor
push
in
mov
test
sbb
div
inc
inc
sbb
mov
in
negl
push
mov
lahf
int3
mov
mov
ror
call
xor
xor
icebp
cltd
addr16
add
xor
stc
pop
xchg
sbb
mov
adc
stc
ja
fdivs
jns
jg
cmp
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
push
add
add
add
mov
shll
cltd
cmp
sbb
sub
and
pop
and
adc
add
stos
jp
aad
inc
and
fadds
stos
xchg
loop
mov
iret
inc
in
aaa
push
add
adc
mov
push
add
push
cwtl
mov
jmp
out
push
mov
cwtl
pop
inc
push
push
cmp
hlt
and
and
lock
insl
mov
sbb
add
imull
push
adc
imul
dec
inc
clc
orl
lahf
xchg
or
repnz
in
mov
stos
pop
lods
push
pop
cli
arpl
mov
pushf
pop
jnp
std
test
outsb
imul
jl
and
and
xchg
shll
sbb
pop
push
gs
jne
xchg
cli
std
ret
xor
popf
imul
divb
in
call
mov
push
sub
push
sbb
mov
negb
scas
mov
arpl
enter
push
add
push
xchg
jb
std
push
adc
repnz
mov
push
mov
lods
xor
xor
add
out
nop
cwtl
iret
adcb
adc
jb
jecxz
jno
scas
sbb
jns
daa
push
loope
call
mov
xlat
bound
ret
loopne
cmpsb
repnz
dec
jo
test
test
pop
iret
dec
out
push
jbe
popa
loope
paddusb
xchg
sub
aas
test
adc
push
fcmovu
cs
sbb
lahf
pop
movsl
scas
jecxz
pop
sbb
adc
in
fcoms
repz
jb
insl
sbb
andb
pop
out
xchg
mull
scas
mov
shll
ret
jo
pop
inc
out
push
mov
mov
jge
into
xor
sub
rcl
icebp
mov
in
stos
bound
mov
push
jmp
pop
jns
adc
inc
cmp
shrb
dec
mov
inc
jno
inc
inc
divb
sub
cmpsb
scas
dec
add
adc
inc
xor
inc
divb
fwait
ds
dec
xchg
cmc
pusha
int
xor
icebp
icebp
push
or
add
inc
jb
add
cltd
mov
aas
inc
or
push
xchg
stos
rorl
fbstp
sbb
loop
jle
int3
mov
pop
or
mov
ss
dec
loope
xchg
xchg
add
jecxz
test
inc
xor
mov
stos
aas
add
sarl
inc
mov
lds
jae
inc
push
mov
in
loopne
int
xchg
shlb
int3
jo
or
aam
add
fwait
mov
mov
add
into
imul
lcall
or
pop
mov
jmp
and
jns
push
push
xchg
pop
push
pop
cmpsb
dec
adc
addb
dec
aas
mov
sub
stc
cltd
fnstenv
sbbl
test
jle
add
pop
test
lods
xchg
lods
dec
sbb
loopne
push
sbb
pop
cmp
aas
cltd
test
lock
pop
lds
or
and
pop
mov
add
push
add
outsl
fidivrl
xor
lock
loop
or
das
in
cmp
and
daa
mov
iret
adc
jle
xlat
jbe
push
mov
jb
xor
dec
lea
and
enter
jecxz
xchg
jnp
fs
or
xchg
ja
dec
cmp
and
mov
jno
fwait
lock
insl
xor
push
push
mov
add
xchg
test
pop
test
in
pop
or
test
hlt
pop
mov
popf
dec
iret
sbb
dec
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
cmp
add
inc
or
add
popf
sbb
push
sarl
lock
sub
xchg
sbb
lods
dec
pop
add
jb
aam
jge
pushf
add
hlt
mov
add
ss
lds
jp
dec
dec
and
lds
xor
stc
imul
mov
stc
sub
mov
xlat
or
lods
xor
loopne
add
add
mov
jno
and
inc
sub
imul
aas
mov
xor
arpl
mov
std
call
mov
jno
inc
popa
xor
stc
and
adc
jl
jle
cmp
mov
xor
pop
pop
lods
sub
xchg
xchg
xlat
inc
push
leave
shl
fldenv
xor
or
inc
fimuls
pop
or
jecxz
rorl
dec
pop
imul
xchg
xlat
adc
stos
out
push
jne
hlt
mov
sub
jb
out
xchg
mov
dec
sub
repz
sub
cmpsl
dec
xchg
insb
aam
cmpl
pop
daa
pop
loop
mov
cld
or
push
lahf
mov
roll
movsb
bound
xchg
sbb
mov
push
inc
dec
push
dec
stos
filds
sub
repz
push
shrl
ljmp
dec
xor
scas
movsl
inc
js
dec
rorb
xor
nop
fmuls
xchg
dec
pop
punpckldq
jle
xchg
lcall
repz
mov
popa
add
add
push
mov
pusha
dec
add
xlat
inc
lret
mov
mov
mov
mov
popa
insl
pop
lret
mull
dec
mov
mov
push
jbe
jnp
cwtl
in
out
sub
test
fwait
loope
jno
pop
mov
add
sti
jnp
mov
mov
fstpt
add
lods
stos
lods
sub
ss
sub
cmp
movsl
push
inc
stos
add
mov
cmpsb
adc
jg
fldt
repnz
inc
sub
in
jnp
jbe
add
mov
pop
clc
pop
cmc
fld
call
jecxz
sub
dec
arpl
cmp
mov
jbe
push
fistl
cmp
pop
ja
loope
sarb
and
lea
negl
push
sub
and
mov
xor
mov
or
and
lret
push
pop
in
stos
dec
cmp
pop
and
in
call
pop
loop
push
hlt
push
xchg
inc
jb
aam
scas
pop
adc
lret
jns
cmpsb
decl
out
sub
popa
and
jle
out
lea
mov
or
or
and
nop
dec
popa
insb
inc
sub
sahf
sbb
lods
pop
cmpsb
loope
inc
push
mov
adc
je
and
cwtl
testl
cmp
enter
cltd
int
cs
jp
lods
sbb
cld
out
test
inc
sub
fdivrs
inc
ficompl
test
mov
test
push
jmp
pusha
push
aaa
cltd
insb
out
data16
testb
popl
or
outsl
push
push
jmp
dec
push
jae
repnz
repnz
andl
jae
adc
mov
or
mov
addb
test
dec
push
lahf
sbb
gs
adc
mov
sub
stc
shl
js
nop
pop
cmp
les
mov
jnp
jg
out
stos
sahf
pop
dec
ljmp
notl
cmp
imul
ja
push
subb
jbe
into
imul
loopne
fsub
shlb
sub
icebp
sbb
jns
pop
sbb
lret
loope
repnz
push
movsb
ret
push
fmul
push
pop
addl
add
clc
jl
pop
ficoml
scas
inc
std
sbb
mov
out
or
jg
out
mov
fildl
xchg
in
add
jle
aad
shlb
jmp
xchg
das
pop
mov
daa
sbb
dec
jge
je
fsubl
movsl
pop
imul
push
pusha
xorb
ja
lcall
mov
push
sub
out
or
and
sub
jb
add
das
call
cmp
shlb
jl
xor
arpl
test
daa
lahf
pop
test
jp
sbbb
repnz
inc
inc
mov
add
and
lcall
add
loope
dec
jo
add
outsb
inc
stos
xlat
inc
fs
cwtl
shl
cli
movsbl
dec
nop
pop
cwtl
and
or
enter
cli
in
and
sub
xchg
repz
inc
test
mov
pop
pop
test
mov
sub
gs
cltd
repz
mov
int
lret
cmp
or
and
int3
mov
mov
out
vmovhpd
dec
mov
nop
sahf
aaa
cmp
pop
out
lcall
mov
push
jle
lds
out
call
push
lods
xor
out
imul
jne
fldenv
mov
bound
xor
pop
mov
imul
sub
push
adc
mov
in
jecxz
pop
and
pop
mov
sarl
out
insl
daa
loop
fisttps
psrld
in
fdivs
push
popa
xor
clc
lods
fmull
jmp
fs
in
enter
mov
rcl
and
pushl
mov
hlt
push
icebp
push
mov
lret
dec
inc
cwtl
ds
and
aam
das
sub
cmp
mov
mov
lods
loopne
sub
mov
mov
int3
aad
mov
je
adcl
insl
mov
insb
imul
ja
clc
leave
punpckldq
jl
notl
add
cmp
test
fildl
push
insl
ds
xchg
dec
sub
xor
aam
sti
jae
xlat
or
xlat
add
insb
test
addr16
and
push
mov
lock
add
cmpsb
mov
mov
adc
and
adc
das
jo
xchg
mov
insb
outsl
adc
inc
xorb
dec
adc
pop
dec
lods
push
nop
mov
call
arpl
sbb
or
es
data16
aas
icebp
cmpsb
mov
dec
adc
mov
xchg
jo
jg
mov
add
test
jp
scas
aad
xchg
imul
fmull
adcl
leave
call
outsl
arpl
aas
xor
outsb
xlat
loope
stos
aas
daa
ret
dec
push
push
sub
pop
cmp
push
inc
in
jecxz
mov
jb
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
add
add
push
and
push
je
jbe
iret
mov
fstps
adc
pop
adc
cmc
rorb
es
dec
inc
aaa
aad
xchg
push
pop
or
pop
and
jnp
push
test
xor
cmp
loopne
or
pop
sbb
mov
iret
mov
cmpsl
gs
mov
pusha
sub
mov
mov
mov
jno
imul
mov
sub
xchg
sbb
shrb
int
mov
adc
ss
mov
pop
orl
cmp
aam
and
mov
pop
in
shr
outsl
imul
rclb
jbe
xor
cmp
stos
mov
xorb
daa
outsl
pop
xor
aas
call
fwait
or
mov
dec
loopne
sbb
movsl
lret
mov
in
pop
dec
loopne
xchg
int
dec
or
subb
test
fcmovu
inc
jecxz
mov
inc
cmp
fidivs
xor
xchg
divb
subb
addr16
sub
dec
lods
sub
inc
jp
ja
add
mov
xor
cld
xor
cmpl
pop
lock
inc
jb
jno
mov
push
mov
lea
imul
xchg
insl
pop
jo
push
enter
pop
sbb
or
and
jne
cli
dec
and
jbe
and
inc
mov
and
push
fwait
je
push
dec
mov
lcall
mov
xchg
movsl
push
lock
push
jbe
outsb
pop
lret
or
mov
sub
gs
cmp
mov
mov
cmp
dec
jb
push
es
in
and
cmp
push
pop
mov
and
mov
xor
ss
dec
or
rcll
inc
xor
push
je
aam
xor
fwait
insb
es
mov
imul
inc
mov
ror
fs
xor
sub
pop
js
icebp
pop
test
xor
rolb
jb
fcoml
jb
and
adc
mov
jge
push
adc
sub
inc
lods
pop
xor
add
addr16
pop
push
xchg
orb
dec
cmc
ss
lcall
jmp
push
or
and
rorl
test
notb
mov
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
add
add
jge
push
lret
call
cs
jle
pushf
pop
jae
mov
mov
xorb
ja
fmull
movsl
xchg
das
mov
cmpsb
adc
jnp
and
ficoms
adc
mov
pusha
repz
cmp
into
add
fidivs
xchg
scas
jb
mov
xlat
loope
pop
mov
stos
mov
inc
daa
lea
mov
ja
mov
dec
pop
add
adc
fs
add
int3
cmpl
mov
mov
and
xchg
or
imul
pop
addr16
in
pop
icebp
adcl
sti
mov
add
mov
mov
push
lea
adc
outsl
std
mov
icebp
cs
push
push
std
sbb
push
push
add
xor
in
sbb
mov
test
or
std
in
scas
mov
test
xchg
sahf
dec
hlt
jl
hlt
insl
loop
xor
mov
mov
add
cwtl
int3
mov
sub
inc
out
mov
pop
pop
push
and
inc
in
mov
les
lods
sti
xchg
leave
jmp
jbe
adc
dec
mov
ret
push
jl
or
call
pop
mov
test
lcall
fists
push
fldenv
ljmp
test
rcrb
sub
cmc
jge
popf
mov
mov
sbb
arpl
cmp
das
mov
sub
aaa
loope
subl
push
push
mov
movsb
sub
cmp
pop
popf
sbbb
xchg
or
dec
sub
dec
int
into
push
outsl
sbb
xchg
pop
popf
dec
xlat
and
aad
out
inc
fisubl
daa
inc
sbb
cld
test
bound
mov
cs
neg
and
rcll
mov
or
fcomi
mov
cmp
push
shrb
sub
and
mov
insl
sarb
call
int
popa
rcll
jno
lcall
pop
cmpsb
push
shrl
sbb
test
test
jp
loope
sbb
push
cmp
push
imul
fcmovnu
movsbl
push
lcall
mov
incl
mov
push
lret
adc
xchg
push
scas
xchg
jmp
mov
into
cmp
loope
cmp
cli
sahf
sub
and
adc
add
cmp
sbb
shlb
add
add
push
iret
adc
dec
or
cmp
dec
xchg
test
sbb
inc
pushf
sub
ds
lods
outsl
lret
mov
adc
out
xor
push
pop
cld
jb
add
add
mov
loopne
inc
mov
cltd
xchg
imul
out
inc
push
lahf
sahf
cmp
cld
and
or
add
or
push
lahf
pushf
push
fimuls
call
in
adc
jl
mov
and
and
nop
fs
pop
je
xor
inc
cmp
xchg
push
sbb
mov
test
sub
push
fadd
sbb
clc
enter
enter
sarl
xchg
xor
loopne
dec
xchg
ret
cs
loop
jne
and
or
shrb
mov
rcrl
jp
gs
cmc
jle
xchg
cmp
lds
ljmp
mov
fcmovnbe
jb
jb
movsb
mov
lock
inc
mov
xchg
dec
divl
push
out
sbb
fiaddl
xor
adc
and
pushf
scas
xchg
sub
in
daa
pop
xor
push
out
inc
pop
sbb
pop
mov
add
fldt
mov
bswap
jns
rcrl
mov
out
sub
subl
or
or
and
ss
fsubp
xorb
push
cmpsb
jnp
mov
jo
call
mov
inc
shlb
sub
lahf
stos
xchg
jp
mov
mov
adc
add
pop
mov
pop
adc
js
dec
rcr
arpl
jg
sti
xchg
ja
lahf
icebp
stos
or
pop
loope
movsb
loopne
xor
xor
aad
outsl
fidivrs
xor
mov
jl
int
ret
cmp
scas
add
adc
add
jmp
jbe
les
add
sub
xchg
inc
jo
sahf
out
adcl
lcall
lret
lret
in
in
sbb
xor
push
out
push
sbb
test
mov
mov
ret
mov
orl
insb
or
push
shlb
mov
idiv
cmp
mov
jbe
ret
inc
imul
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
xchg
add
add
add
add
les
arpl
setns
jns
pop
xor
int
popf
cmp
xor
push
stos
cmp
test
pop
ficompl
ljmp
jg
jle
fwait
inc
mov
in
lret
pop
jae
rol
inc
mov
lods
cmp
or
mulb
lea
adc
fsubs
push
push
and
je
cmp
fs
or
dec
in
divb
pop
icebp
into
or
and
sbb
test
mov
insl
fistps
cmc
adc
mov
aad
int3
adc
bound
xchg
outsb
loopne
push
cmp
scas
xlat
popf
cmp
adc
in
pop
mov
scas
dec
fwait
setns
in
xor
inc
jle
mov
fs
inc
cmp
mov
ds
in
popa
rol
add
mov
dec
ja
push
pop
movsl
xchg
shlb
lods
jg
addr16
xchg
mov
pop
jno
inc
push
into
rcrl
icebp
and
mov
adc
jns
mov
xchg
icebp
ljmp
mov
mov
xlat
dec
in
push
xor
adc
test
dec
stos
adc
dec
inc
out
and
mov
aaa
adc
mov
xchg
mov
xor
shll
mov
bound
repnz
rclb
int
inc
sub
aad
and
cmc
movsb
lock
mov
lock
add
lods
jecxz
add
lcall
push
movsl
adc
cltd
jmp
xchg
xchg
es
stos
ds
and
in
aaa
das
imul
outsb
dec
sbb
push
sub
push
loope
pop
hlt
and
cmp
jmp
mov
nop
pop
inc
mov
lahf
xor
push
in
stc
mov
xchg
push
dec
shrl
ss
mov
xchg
dec
mov
fistpll
push
mov
push
xchg
mov
and
lods
bnd
and
xlat
mov
inc
inc
mov
sbb
push
jmp
dec
push
sbb
shll
js
hlt
idiv
mov
lods
bound
cmpsl
sub
pusha
cmc
hlt
push
sbb
lahf
pop
call
in
mov
aaa
popf
push
mov
sbbl
enter
pop
or
ljmp
or
adc
mov
fcmovbe
mov
or
arpl
or
push
in
vcvtsi2ssl
or
enter
add
xchg
xor
xchg
push
test
lret
test
cmpsb
mov
stos
out
stos
cli
xor
mov
jnp
jno
cmp
push
stos
adc
jmp
repz
das
mov
insb
cmp
mov
das
fists
pop
in
outsb
jp
rcrl
dec
add
cmp
pusha
push
stos
sub
xor
pop
push
outsl
xlat
cltd
jne
shrl
enter
ss
ret
lds
scas
sub
jne
in
xor
dec
push
or
dec
dec
xlat
sub
pop
jo
push
iret
jb
fdivr
adc
ret
movsb
insl
inc
popf
pushf
out
orb
lods
inc
stos
add
fwait
pop
ds
icebp
adc
ret
sub
pop
inc
ficoms
inc
fidivrs
inc
stc
mov
ljmp
ss
scas
bound
incb
cmc
pusha
pop
std
dec
rolb
add
and
xchg
hlt
mov
scas
hlt
shlb
aas
rol
nop
mov
push
repnz
cli
lods
ret
gs
push
in
ret
ja
sub
xchg
lods
cmp
jno
test
xor
repnz
pusha
repnz
or
sbb
fsts
and
sti
xchg
adc
xchg
xor
cmp
dec
out
cmp
jge
out
cs
sbb
jne
mov
jne
insb
decl
icebp
out
jmp
pusha
and
hlt
or
jno
mov
xchg
cs
xchg
lds
mov
push
aaa
mov
and
sub
adc
jns
insb
xchg
lds
jo
aas
out
push
cmpb
adc
pop
jns
add
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
add
add
add
add
mov
pop
inc
add
jnp
andb
and
add
xchg
addr16
dec
push
jns
xor
xchg
ret
sub
xchg
rorb
rol
mov
enter
and
adc
jmp
sub
pop
ror
and
inc
mov
data16
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
iret
add
add
push
lret
dec
daa
fnstcw
sub
lods
insl
and
shlb
cmp
add
stos
and
mov
daa
push
mov
xor
ds
xorl
and
cmpl
xor
xchg
pop
or
inc
push
stc
sub
ret
xchg
push
outsb
pop
sbb
js
sbb
add
ret
sbbl
call
jecxz
jmp
push
fmull
lea
loop
fisubrl
dec
jno
xor
insb
sbb
leave
out
pop
int
idiv
outsb
xchg
in
cmp
adc
sub
xor
fcomi
pop
repz
mov
add
bound
lds
sub
sub
sub
mov
inc
push
or
mov
popa
lret
jnp
jnp
lock
outsl
jnp
mov
dec
xchg
loopne
sub
pop
jecxz
jbe
je
and
dec
repnz
cwtl
packsswb
cs
xor
mov
mov
test
outsl
arpl
mov
inc
clc
jns
repnz
imul
cmp
xchg
bound
int3
call
ret
dec
cmp
xor
icebp
push
xor
nop
lret
std
iret
ficomps
push
out
mov
sub
cmp
arpl
shlb
stos
sbb
inc
int
sub
dec
inc
leave
aam
push
or
jno
xor
dec
mov
push
push
adc
push
repz
sbb
add
push
pop
aam
out
pop
sti
and
cmpsb
arpl
xor
cmc
fnstenv
sub
push
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
add
add
add
daa
push
stc
mov
jo
rclb
xor
xlat
sarb
sbb
mov
push
push
out
leave
dec
clc
cmp
xchg
mov
movsb
or
mov
rcll
mov
fs
scas
xchg
ljmp
repnz
shll
scas
cli
in
movq
or
lcall
inc
bound
ss
stc
aas
cmpl
out
fdivs
cld
sbb
out
and
iret
ret
repnz
arpl
inc
ja
ficoml
mov
mov
mov
ret
xor
cmp
ljmp
xchg
push
repz
cmp
jle
stos
in
pop
cmp
in
jb
imul
sbb
add
mov
ljmp
dec
jecxz
cmp
xchg
pop
outsl
inc
sub
and
scas
sahf
push
jle
sub
data16
jecxz
mov
mov
insl
dec
xlat
and
stc
bound
pop
imul
adc
dec
mov
xor
fcom
fcoml
arpl
pop
in
lea
insb
cli
fiaddl
adc
adc
jno
pop
jg
inc
icebp
sbb
cmc
adc
fisttpl
lcall
hlt
fs
ja
push
mov
inc
mov
mov
movsl
mov
test
xor
pop
gs
or
dec
inc
xor
inc
dec
push
sub
xor
jl
push
in
and
cmp
push
outsl
aad
adc
inc
in
fwait
add
cmp
dec
push
popa
iret
pusha
pop
bound
daa
mov
fists
xlat
stc
call
dec
sbb
aaa
loopne
cwtl
scas
sti
addb
pop
outsl
lret
mov
bound
cmp
sbb
xor
fstpl
push
lds
arpl
push
push
pop
pushl
pop
test
lahf
das
sbb
stos
mov
mov
cli
pop
inc
jno
add
jp
pop
and
cmpsl
dec
push
fadds
sub
cmp
in
loop
pop
mov
lock
xorb
dec
lahf
xor
push
pop
rcll
sub
out
ret
inc
dec
shrl
imul
xchg
std
mov
mov
cltd
jle
pop
ret
in
cmp
mov
jo
mov
dec
int
sbb
rorb
jo
sbb
cmp
mov
shr
shl
lret
sbb
shrl
stos
add
shlb
inc
jmp
js
nop
fcomps
pop
out
es
mov
lea
mov
pop
pop
sub
push
aam
sbb
rclb
sbb
loope
mov
fwait
xor
cs
out
or
test
loope
dec
jecxz
enter
out
mov
jmp
adcl
sarl
sbb
popa
in
sti
insb
and
test
aas
rolb
hlt
in
jns
xor
ds
or
xchg
rclb
inc
pop
sbb
jmp
arpl
das
dec
cmc
mov
iret
mov
test
mov
push
mov
scas
std
cmp
in
and
std
loope
repnz
dec
and
jle
cwtl
adcl
pop
fucomi
cwtl
dec
je
aas
add
stos
mov
pop
mov
adc
int3
iret
xor
iret
xchg
jmp
imul
mov
subl
in
lahf
dec
out
mov
outsb
adc
pop
cmp
cmp
mov
testl
orl
pop
push
cmp
mov
add
mov
cmc
fisttps
mov
scas
mov
fs
dec
cmp
out
pusha
inc
fldl
outsb
jns
in
popf
mov
ja
ljmp
mov
dec
xchg
ljmp
lret
sub
test
push
sti
ds
xchg
jnp
jecxz
or
cmp
mov
and
adc
test
test
sbb
adc
xor
adc
out
jmp
and
sub
gs
mov
dec
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
push
add
push
push
add
dec
mov
cmc
icebp
inc
or
int3
mov
mov
int3
push
sbb
inc
aas
mov
jns
or
jp
test
cwtl
fiaddl
xor
nop
fidivrs
fmuls
mov
inc
movsb
nop
sbb
testb
add
shr
mov
inc
push
pop
mov
add
lods
sub
je
loopne
dec
adc
pushf
and
test
and
cmpsl
xor
push
leave
leave
loopne
adc
xlat
jle
lcall
shr
popf
xchg
mov
cmpsl
push
mov
and
or
leave
loop
xor
inc
sbb
push
and
inc
pushf
loopne
xor
add
cmpsb
push
sub
or
or
cli
mov
cmpsl
out
int
inc
cwtl
lods
test
sub
imul
xchg
int3
push
into
mov
adc
je
loop
pop
xor
in
aam
jno
lods
jmp
inc
in
lret
andl
insb
test
sub
in
jl
mov
xchg
andl
mov
dec
inc
dec
and
sarl
pop
imul
int
mov
inc
jnp
int3
inc
frstor
cmpsb
sub
cmp
push
dec
xchg
mov
dec
mov
push
orb
push
mov
fistl
out
and
into
fimull
sub
inc
mov
mov
pop
push
cmp
scas
jno,pt
lock
pushf
pop
xchg
iret
ret
pusha
cmpsl
push
cmp
or
xchg
mov
sbb
lock
mov
ja
pop
pop
inc
stc
into
xchg
sub
je
fwait
adc
call
lock
rcr
mov
pop
lcall
pop
xor
mov
push
xor
ja
insl
idivl
mov
sbb
dec
icebp
inc
sbb
mov
adc
sub
imul
shll
sub
je
cmc
inc
jg
sub
dec
aad
cmp
lahf
push
xchg
and
dec
shlb
xor
adc
mov
adc
incl
aaa
dec
popa
insb
sub
mov
xchg
or
pop
xchg
dec
test
sbb
mov
pusha
or
push
outsb
testl
sbb
push
sub
int3
push
mov
ficompl
inc
cmp
pop
mov
push
mov
sub
xchg
or
xchg
stos
shll
adc
adc
callw
cltd
jmp
psubsb
out
xchg
add
inc
mov
mov
jg
push
rclb
int3
mov
xorb
xor
pop
sub
dec
jg
mov
pop
cltd
and
mov
iret
dec
je,pt
orb
notl
in
stos
out
into
or
xor
sbb
or
or
enter
fdivrs
pop
pop
jg
ss
out
popf
dec
add
cmp
lods
aas
cmpsl
push
shr
sbb
push
or
pop
std
cmp
push
jo
jge
out
aad
sahf
sub
lods
mov
mov
or
iret
sbb
xor
jle
pop
jmp
add
xchg
ljmp
cmp
mov
iret
xor
pushf
nop
xor
aad
xchg
icebp
adc
or
sub
les
push
repnz
dec
mov
pop
pusha
lcall
cs
enter
xchg
scas
out
inc
clc
outsl
fidivrl
cmp
pop
add
vpsllw
or
test
les
cmp
pop
aad
ja
sub
mov
rcrl
or
and
addb
scas
enter
insb
test
repz
jp
test
scas
sti
mov
in
lahf
cmp
push
cmp
es
insl
test
aam
sar
test
dec
arpl
faddl
pop
mov
mov
ret
outsb
into
nop
int
and
std
das
cmpsb
insl
mov
outsb
cli
or
dec
enter
lret
inc
mov
out
cmp
inc
adc
mov
mov
ljmp
sbb
movsb
cmp
std
jge
mov
shr
sub
test
push
jne
mov
shl
cwtl
cli
es
or
loop
add
fstl
fcmovbe
in
fdivr
bswap
loope
dec
push
in
orb
and
xor
push
xchg
fst
mov
aaa
mov
mov
push
fisubrl
cmp
or
push
xor
insl
jmp
inc
dec
sarb
inc
add
mov
xchg
xor
pop
xor
jmp
push
sbb
and
aad
pop
mov
xorl
test
inc
mov
repnz
fldln2
mov
call
lret
sub
mov
pop
mov
stos
cmpsb
loope
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
stc
pop
add
rorb
add
xorb
ffreep
test
pusha
rol
sbb
int3
popf
mov
mul
ret
enter
xor
int3
mov
mov
xor
inc
xchg
add
out
lret
pop
leave
pop
push
mov
cli
push
push
push
sub
add
add
ficompl
mov
and
inc
cmp
fimuls
repz
or
pop
data16
popf
out
sub
mov
cmp
enter
mov
addr16
mov
pop
add
cmp
pop
call
outsb
pop
les
jno
push
das
inc
pop
and
and
pop
jne
jnp
jne
fistps
xchg
and
xchg
adc
mov
xchg
pop
xchg
sub
push
lret
leave
pusha
inc
dec
pop
movl
negb
dec
ja
pop
sub
push
gs
xchg
xor
call
mov
dec
mov
out
jle
inc
pop
inc
mov
dec
notl
cmp
jecxz
and
outsb
push
call
cmc
sub
mov
sub
enter
pop
jmp
hlt
sti
push
mov
and
lcall
cmp
in
jbe
ja
fwait
clc
shlb
xor
outsb
mov
xchg
testl
dec
insb
jmp
xchg
mov
test
add
fs
out
dec
subb
or
dec
fucom
ds
dec
or
pop
fildll
imul
sahf
subl
cmp
xor
out
mov
icebp
cmpsb
pop
push
adcl
pop
sub
inc
shlb
mov
sar
pushf
call
dec
repz
outsb
rcr
inc
inc
stc
xor
jge
iret
or
xorb
pusha
xchg
jb
xchg
and
adc
popl
dec
ljmp
sub
cwtl
lea
fcomip
mov
ret
out
outsl
dec
mov
or
outsl
rorb
addb
out
fcomps
stos
cmp
push
arpl
push
jmp
fsubrl
orl
add
dec
in
mov
push
and
subb
test
adc
adc
out
mov
mov
and
sbb
mov
testb
lret
in
adc
out
sti
pop
nop
xor
dec
mov
subb
jecxz
roll
sub
psubd
xchg
sarb
jne
mov
insb
cmp
mov
pop
inc
and
sbb
dec
jae
xor
push
filds
dec
sub
out
and
mov
lds
sbb
mov
movsl
inc
fisttpll
adc
push
and
xor
iret
icebp
xor
rcll
cmp
sub
push
pop
loopne
inc
fsubs
xchg
repz
xor
pop
test
xor
pushf
mov
nop
mov
and
jno
sahf
into
pop
lea
add
rorb
or
jns
sub
inc
addr16
mov
and
adc
xchg
rcrb
jmp
xorl
push
imul
nop
sub
jmp
mov
sahf
ja
xor
aam
push
shr
arpl
sbb
jecxz
adc
test
jnp
mov
rcll
inc
cmp
or
xchg
lcall
aam
sti
shr
rorb
sti
lret
fnsave
pop
jbe
push
lods
es
mov
push
mov
arpl
mov
incb
fwait
sub
push
leave
movsl
cmpb
js
loope
in
xchg
addr16
arpl
and
je
jb
lea
add
mov
jne
mov
jge
int
mov
mov
push
and
or
fnstsw
sbb
mov
lea
icebp
jnp
std
cmc
in
mov
push
sbb
inc
movsl
jno
xchg
mov
sub
xor
lret
jmp
outsl
lahf
jns
into
leave
adc
enter
adc
xor
xorb
shll
sub
sub
shl
jmp
addr16
je
andl
or
jle
xchg
inc
pop
mov
into
out
fwait
stos
push
dec
loope
and
insl
ret
and
into
in
mov
or
stos
mov
cmpsl
icebp
lcall
loop
cs
cwtl
mov
inc
notb
xchg
add
fisubrl
push
movlps
sub
xchg
cmpsb
add
sbb
mov
and
addr16
xchg
lret
shll
inc
cmpsb
sub
push
int3
or
js
aad
dec
pop
or
sbb
cmpsb
imul
push
xor
test
icebp
pop
mov
push
xchg
roll
inc
fidivs
bound
push
sahf
sbb
or
xor
sahf
mov
and
cld
popa
pop
cmp
jg
sbb
jb
push
mov
std
or
negl
cwtl
xor
inc
mov
lret
repz
sbb
adc
ret
lea
jnp,pn
rorb
fnstenv
rolb
mov
cld
dec
jle
lret
cli
push
dec
movsb
ret
mov
jnp
sub
jo
ss
addr16
pop
ret
subb
fcoms
dec
addr16
call
xchg
xor
push
out
mov
and
mov
cld
shrb
addl
and
outsl
in
lcall
push
or
cmp
push
cmp
mov
cwtl
les
cli
sub
xchg
aam
sub
hlt
fwait
push
inc
imull
dec
xorl
push
cld
adc
add
in
adcl
ret
sub
cwtl
mov
or
xchg
nop
loop
adcl
jne
lds
mov
pop
sbb
aam
int
movsb
fdivrs
sbb
sub
adc
jbe
divb
push
setp
scas
push
iret
or
and
sahf
scas
incb
push
int3
sub
inc
mov
insl
fsts
insb
sbb
and
int
sub
cmp
test
into
in
jae
scas
aam
jo
pushf
ret
jne
or
pop
xor
loopne
inc
push
shrb
je
cmc
pop
sub
jg
les
jns
rcrl
xor
xchg
ret
push
imul
add
xchg
sub
pushf
leave
inc
mov
lret
adc
fcmovnu
js
out
sub
jnp
xor
call
imul
add
push
aas
dec
outsb
xor
cmpsl
add
and
pop
xlat
adc
inc
inc
cwtl
ret
lods
mov
lods
jno
adc
test
fistpl
cmp
inc
mov
out
xchg
pop
mov
loope
out
and
cmp
mov
add
cmpsl
out
push
push
or
add
jbe
xor
xor
lret
jnp
orb
cld
xor
cmpb
pop
addr16
dec
imul
mov
pusha
sar
mov
out
ljmp
pushf
lret
mov
ds
lds
in
xor
lea
jns
loope
sub
sbb
sbb
lret
fsubr
mov
mov
cmp
in
enter
lea
dec
mov
add
lcall
call
inc
iret
or
jmp
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
add
add
dec
or
or
shlb
sbb
call
repz
das
scas
sti
insb
pop
aas
insl
shlb
pop
ljmp
push
shl
popf
jb
push
push
or
mov
jge
dec
fidivrs
xchg
repz
jmp
test
inc
mov
dec
in
imul
cld
stos
xor
out
push
pop
mov
and
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
pop
add
imul
push
jmp
inc
jne
dec
ds
inc
adc
popa
mov
inc
push
ficoml
fdivrs
lret
dec
dec
loope
leave
lods
rorl
push
fbstp
cmp
cmp
fstpt
push
int
mov
fs
and
inc
out
push
mov
cmc
mov
adc
lods
sti
dec
xchg
xchg
int
mov
movsb
and
jge
repz
pusha
adc
adc
push
and
stos
into
test
ret
loopne
jo
scas
cmp
cmp
push
and
mov
mov
mov
sti
xchg
jmp
mov
sub
sbb
cmp
push
dec
and
mov
roll
adc
mov
cmp
call
adc
mov
outsl
and
jne
gs
dec
adc
fwait
push
xor
icebp
cmpsl
mov
jp
mov
add
pushf
mov
jnp
jg
mov
mov
mov
sbb
aaa
jbe
sub
mov
push
or
add
test
dec
push
in
insl
imul
insb
mov
cmpsl
cld
mov
sti
pop
ss
imul
lcall
idivb
push
shlb
inc
pop
cmp
stos
dec
mov
je
stc
mov
rorb
imul
add
dec
push
adc
repz
insb
xor
or
aad
inc
enter
lret
fistpll
mov
je
mov
loop
in
lea
insb
and
add
cwtl
pop
test
sub
outsl
cmpl
cmp
add
push
call
sti
xor
mov
xor
mov
sbb
adc
mov
movsl
aaa
push
fcompl
xchg
sbb
repz
in
jmp
out
call
sbb
mov
idivb
jg
sub
fiaddl
dec
hlt
scas
xor
lds
cmpsl
add
pushf
cltd
pusha
cmc
sbb
push
inc
push
jnp
sub
lret
loope
movsb
les
ret
faddl
mov
or
pop
jge
in
in
testb
test
push
movsb
adc
out
stc
pushf
sbb
scas
fs
sbb
std
lahf
fnstsw
jne
mov
mov
xor
ret
mov
jmp
add
inc
mov
jae
outsl
cmp
popa
push
jg
sub
test
xchg
dec
or
or
xchg
lods
inc
aas
cmp
cs
xchg
cmp
cmc
js
sbb
jns
pop
fisttps
inc
and
mov
jno
push
cli
jne
mov
xchg
push
dec
xor
cmp
cmc
or
xchg
mov
mov
mov
add
addb
outsl
adcl
into
pop
in
mov
inc
or
mov
sahf
xor
cwtl
pop
faddl
loope
cmp
jmp
test
mov
int3
sbb
cmpsb
sub
push
adc
shrl
jl
addb
jmp
arpl
or
orb
inc
push
out
mov
aad
in
cmp
scas
sti
and
adc
add
or
in
subps
push
jnp
lock
test
in
and
mov
mov
mov
mov
mov
push
push
mov
iret
int3
jecxz
xorl
bound
inc
add
scas
call
push
cmc
movb
mov
lds
xchg
dec
int3
jb
inc
jecxz
lea
xchg
xorb
leave
mov
cli
into
inc
push
xor
add
int
or
jne
push
call
int
or
jbe
int3
cmp
dec
xorl
xor
out
xchg
push
fmull
sbb
push
mov
test
push
adc
xchg
call
rclb
jae
jg
and
or
inc
add
dec
pop
push
dec
mov
jmp
sbb
xchg
arpl
js
out
arpl
push
ret
shrl
clc
push
push
je
push
jnp
inc
mov
pop
push
jge
in
call
mov
push
jle
lea
pop
lds
loopne
or
pop
and
jno
test
in
dec
or
popa
xchg
xor
sub
mov
push
testl
push
dec
js
or
lret
inc
in
push
cmpsl
adc
in
pshufw
mov
sub
inc
xchg
hlt
in
std
jmp
test
ds
dec
stc
xchg
fsts
mov
mov
aaa
push
mov
pushl
aad
rorb
scas
mov
sbb
adc
adc
mov
mov
sub
js
jl
jo
xchg
loop
mov
mov
pop
jno
inc
mov
aam
imul
mov
dec
sbb
aas
push
mov
mov
jo
fildll
sub
lret
add
and
add
pop
loope
pcmpeqw
xor
inc
gs
das
ja
or
and
fiaddl
mov
testl
fists
stos
mov
pop
dec
lahf
xlat
test
fimuls
sub
ds
pop
mov
mov
xchg
jae
rcrl
xor
cmp
pop
push
das
ret
push
sar
pop
sbb
loope
dec
enter
dec
xor
cs
xor
xor
dec
and
leave
aad
adc
mov
adc
jne
sbb
addl
jle
lcall
inc
mov
xchg
adc
mov
inc
movsl
push
leave
out
push
loope
pop
cltd
bound
push
loopne
or
push
pop
icebp
add
mov
and
push
nop
aaa
sahf
faddl
jno
enter
lods
movsb
fmuls
jmp
jecxz
stos
adc
frstor
jno
xor
cmp
rcrb
in
les
mov
stc
pop
mov
mov
and
add
adc
sbb
xor
jno
dec
and
scas
adc
mov
or
sub
popf
daa
xchg
add
lock
cmp
testl
scas
jbe,pt
dec
mov
insb
out
mov
cmp
repnz
scas
leave
scas
jbe
and
repz
ss
or
pop
add
lds
adc
frstor
cltd
out
imul
jecxz
and
mov
xchg
and
stos
push
sub
addr16
pop
push
jae
in
mov
inc
lret
sahf
stc
outsb
and
lea
xor
xchg
dec
lcall
mov
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
sysret
add
jmp
pop
lret
lahf
xchg
mov
ret
das
push
add
jecxz
pushw
push
je
movsb
std
and
hlt
dec
shlb
or
mov
cmpb
aas
push
scas
data16
in
push
into
xor
es
push
hlt
lods
repz
push
test
jl
push
dec
popf
das
repz
xlat
sub
cmpsb
call
lea
lock
inc
dec
out
scas
xchg
enter
mov
adc
inc
mov
pop
cmc
push
push
sub
sub
inc
sbb
mov
test
pushf
dec
arpl
jns
or
sbb
mov
adc
mov
outsb
aas
adc
jmp
das
or
xor
add
std
push
push
xor
mov
push
fwait
out
mov
push
mov
shl
pop
aad
add
rclb
mov
jbe
int3
jecxz
mov
mov
push
scas
insl
jns
arpl
or
aad
mov
je
int
aaa
iret
lret
adc
jb
js
je
or
push
imul
push
sbb
push
adc
pop
xchg
and
mov
push
sub
fs
mov
lock
sbb
jp
inc
shrb
dec
adc
jecxz
fwait
lock
mov
sub
dec
out
ljmp
jbe
jo
rorl
jae
shrb
xchg
sub
sti
js
mov
dec
inc
test
ljmp
popa
jge
nop
cmp
inc
fidivl
stc
inc
inc
std
xchg
out
aam
inc
in
push
add
clc
xor
inc
mov
push
bound
pusha
mov
mov
scas
clc
xchg
mov
pop
scas
mov
bnd
out
bound
fisubrs
test
mov
fdivrp
fldcw
fs
fwait
cmp
mov
aaa
mov
jno
mov
fs
xchg
outsl
push
inc
lea
sbb
es
outsl
xchg
push
mov
mov
mov
not
fcoms
in
mov
repz
push
loop
mov
outsl
jge
adc
fists
arpl
iret
ljmp
and
jge
fisttpll
cmp
add
enter
xchg
jle
hlt
jne
test
pop
pop
dec
mov
sub
mov
jmp
popa
pshufw
je
or
jmp
sbb
test
insb
sti
test
fwait
roll
sub
shlb
hlt
lock
lahf
sbb
dec
and
lret
mov
loopne
es
xlat
cmpsb
mov
movsl
scas
mov
inc
sbb
jp
stc
lds
filds
insl
push
and
gs
push
std
daa
pop
jmp
mov
dec
inc
mov
mov
std
js
mov
pop
jno
scas
inc
pop
push
out
pop
and
stos
or
fldt
lret
push
pushf
cmp
pop
jae
mov
push
enter
adcb
or
aad
lahf
mov
cwtl
mov
jne
imul
outsl
cmp
mov
es
push
aaa
lods
jns
lcall
mov
idivb
mov
adc
inc
xchg
adc
pop
add
xor
fdivp
cld
incb
sub
jnp
les
jp
jp
pop
sahf
cli
and
jns
jg
flds
pop
fadds
lahf
outsl
iret
inc
adc
cwtl
inc
cli
scas
fs
dec
js
pop
adcl
pop
lcall
adc
or
jmp
cltd
lea
repz
inc
dec
lock
mov
hlt
ljmp
repnz
dec
fistl
mov
je
lds
mov
or
add
adc
jp
or
insl
xor
jno
aad
jnp
std
cltd
mov
or
xor
enter
push
icebp
mov
in
or
add
neg
out
std
push
mov
jp
jns
jg
sub
icebp
xchg
adc
out
mov
sbb
push
leave
xchg
dec
aas
sti
ret
push
cs
mov
mov
outsl
add
jbe
inc
rorl
sbb
pop
adc
shll
rcrl
cmp
mov
pop
lods
aam
cmc
xchg
add
fisttps
sub
test
lds
idiv
movsb
dec
push
leave
rcl
ljmp
fwait
jo
pop
gs
mov
adc
lcall
addb
push
sub
xchg
fldl
mov
out
mov
fcoml
dec
xor
addr16
lds
out
xchg
push
sub
sbb
push
sub
xchg
rcrb
add
push
cvtps2pd
pop
mov
mov
sub
ds
or
jecxz
imul
pushw
push
movl
or
insl
pop
lods
push
aam
or
int
add
pop
push
jno
cwtl
es
mov
pusha
cli
popa
in
mov
or
and
repz
fmul
mov
cli
jne
sub
and
inc
leave
ror
data16
stc
leave
into
in
add
sub
jns
adc
inc
pop
lds
jle
mov
push
inc
inc
pop
bound
jp
sbb
inc
mov
movsb
inc
repnz
outsl
sbb
inc
clc
pop
pop
mov
cwtl
cmp
insb
test
xchg
mov
sbb
push
inc
jmp
sbb
cmc
mov
jns
pop
data16
data16
lea
mov
movsl
xchg
pop
ret
lret
mov
scas
push
cmp
fstl
pop
jp
flds
js
popl
shlb
cmpsb
pushf
gs
jae
sti
add
push
pushf
jne
sbb
lcall
push
mov
xchg
lret
ljmp
call
xchg
add
fimull
jb
addb
sarl
int
and
dec
inc
jns
mov
ret
sub
jp
sarl
pop
les
jnp
lret
xchg
iret
outsl
lret
xchg
push
jp
cwtl
xchg
ret
outsl
hlt
clc
je
test
cwtl
divb
les
mov
jge
stos
ret
mov
mov
jne
dec
and
call
ljmp
mov
push
lock
dec
bound
icebp
mov
pop
mov
add
add
jo
lea
ds
push
pop
hlt
add
sbb
and
push
shr
lret
push
out
sub
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
pop
add
icebp
or
add
adc
lds
into
adc
add
and
rcll
pop
mov
in
mov
pop
mov
cmpsl
adc
xchg
movl
decb
dec
cwtl
cmpsb
fldenv
mov
rorb
mov
clc
cltd
ds
in
pop
lcall
push
fxch
sbb
aaa
jnp
lods
xor
inc
inc
xchg
daa
stos
icebp
inc
arpl
pop
sbb
aam
push
jle
and
inc
cmp
pop
xlat
mov
cmp
sbb
push
ja
icebp
inc
xcrypt-ecb
cmpsl
dec
aaa
xlat
xchg
mov
test
test
out
add
jb
dec
shr
popa
jb
and
pop
inc
nopl
push
xchg
inc
xor
add
xorb
pop
shlb
call
cltd
out
xor
mov
pop
cmp
hlt
inc
cli
cld
cmp
stos
gs
repnz
jp
mov
xchg
push
insl
cmp
sub
daa
and
test
std
dec
lds
sarb
inc
and
mov
and
cmp
loop
mov
scas
dec
adc
jns
mov
imul
mov
daa
adc
sub
mov
add
insl
push
jmp
jns
dec
mov
or
iret
cmp
insl
inc
aam
jp
and
mov
jl
lahf
push
movsl
jo
and
fidivl
lods
jnp
imul
xchg
dec
das
pop
jle
dec
lcall
in
ficoml
subb
ret
xchg
cmp
dec
push
leave
sbb
loope
stos
dec
jecxz
xchg
push
cld
cwtl
jnp
sti
jno
pop
loop
into
and
out
jne
jno
mov
call
fidivs
pop
jb
inc
and
add
mov
aam
test
mov
cmpsl
cmp
dec
inc
lahf
mov
pop
fs
icebp
lcall
xchg
jne
sub
push
push
cmp
hlt
ss
lcall
add
inc
std
adc
sub
insl
fs
js
mov
lds
data16
pop
out
cwtl
mov
mov
mov
andps
ljmp
pop
xor
rcl
popa
pop
in
aas
or
fsts
mov
push
jge
pop
leave
adc
xorb
mov
mov
mov
cmp
adc
stos
stos
add
lret
pop
into
ljmp
aaa
shlb
dec
aaa
mov
xor
pop
ret
lock
adc
out
adc
fwait
pop
daa
sti
and
dec
mov
sub
cmpsb
adc
sub
or
push
mov
adc
jb
xor
sarl
aas
cltd
outsl
into
pop
add
mov
push
pushf
add
fwait
lret
fucom
lret
orb
insb
or
cmpl
jne
insb
adc
cwtl
xor
cmc
add
call
inc
inc
add
mov
int
xor
or
mov
aaa
jns
cmp
inc
gs
orb
mov
fcomps
jae
lcall
or
mov
out
or
cmpsl
imul
or
mull
les
bound
cmp
in
mov
loope
fnsave
adc
inc
cli
inc
mov
andl
push
mov
jl
mov
ja
pop
ljmp
out
jmp
test
pop
decb
xlat
test
pop
cmp
hlt
dec
hlt
dec
dec
pop
adc
adc
inc
aaa
stc
jnp
inc
movsl
jp
out
daa
or
adc
add
hlt
jmp
shlb
into
loope
divb
imul
popf
stos
cmpsb
mov
push
std
pop
cmc
lahf
push
imul
sub
fmuls
jo
sub
iret
sub
inc
shlb
cld
mov
mov
xchg
ja
into
and
xchg
pusha
sarl
lods
insl
cmp
dec
sub
push
sbb
shl
fstp
pop
insb
inc
and
inc
rcrb
sub
add
mov
mov
add
adc
lret
jmp
in
xor
push
xchg
cmc
pusha
push
lds
sbb
push
je
sub
data16
fwait
or
add
jb
lock
xchg
xchg
loope
test
xchg
push
inc
and
frstors
dec
sbb
ret
sarb
sar
movsl
sbb
mov
insl
sub
sub
cmp
push
sub
popa
fwait
bound
mov
cmp
ss
xor
add
outsb
stos
data16
jmp
aas
cs
cmp
jae
lock
fwait
out
into
sbb
add
xorb
movsb
cmp
pop
add
pusha
cwtl
xchg
shll
cmp
jne
in
mov
sbb
arpl
clc
movl
jne
mov
int
mov
jg
mov
mov
push
int
lock
mov
cmp
lcall
mov
hlt
sbb
into
dec
test
aaa
push
shll
lret
push
sahf
pop
xor
test
pop
repz
xchg
into
inc
cmpsb
or
mov
shr
stc
sub
pop
cmc
pop
mov
popa
out
push
xchg
out
rcrl
fistpl
nop
test
mov
push
and
push
push
fwait
mov
cmp
pop
into
add
pop
jmp
push
and
sub
push
lods
jae
jb
out
sub
xlat
aad
mov
pop
pop
lret
test
jge
push
inc
lea
pop
xchg
dec
xchg
popf
push
and
stos
jbe
add
sbb
mov
add
cs
test
mov
negb
xor
clc
jp
xchg
sub
adc
addr16
dec
negl
das
popa
jl
in
nop
aad
sbb
enter
cmp
mov
fisubrl
outsl
mov
addr16
xchg
popa
sbb
jg
stos
pop
xor
push
shrb
jl
or
mov
adc
or
xor
arpl
popf
shll
inc
js
xor
cmpb
dec
or
or
test
pop
js
leave
pop
ss
jg
hlt
leave
add
icebp
ljmp
xchg
lods
cli
push
in
push
jg
xor
aaa
sbb
neg
repnz
dec
jno
shll
sbb
sbb
push
pop
ret
repz
xchg
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
push
or
add
repnz
mov
mov
and
add
pop
imul
sbb
je
scas
jns
lret
std
adcl
adc
mov
pop
arpl
ret
adc
loope
and
lea
push
sub
adcb
mov
mov
mov
imull
test
daa
fst
es
jae
cmc
out
out
mov
jge
xor
mov
aam
push
push
pushf
lret
bswap
addr16
mov
stc
fnstenv
mov
icebp
pop
mov
pop
inc
mov
or
pop
mov
int
or
mov
sbb
addr16
sbbl
out
jnp
pop
insb
dec
aam
sub
sub
jbe
into
jmp
xor
push
mov
lds
xchg
xchg
lock
leave
ss
movzwl
call
sahf
push
sahf
xor
aas
mov
stos
into
clc
dec
pop
aaa
cltd
adc
mov
movsb
inc
pop
es
jo
scas
dec
gs
mov
imul
jg
mov
cwtl
push
pusha
mov
dec
mov
daa
dec
adc
ret
push
push
orl
jg
jmp
pop
lahf
out
xor
sbb
jmp
test
mov
fwait
fwait
imul
and
or
fdivl
cld
or
dec
call
push
push
out
jno
fiaddl
sbb
imul
frstor
test
in
xor
push
mov
ss
mov
pop
fidivl
xor
sti
mov
and
and
loopne
mov
push
arpl
sahf
decl
cmpsl
mov
xchg
push
insl
mov
mov
sub
xor
mov
rcrl
sub
pop
inc
pushw
dec
or
outsb
or
pop
mov
les
fwait
jmp
xchg
mov
js
pop
jge
xchg
cmp
lret
lock
push
lods
enter
pop
push
jno,pt
pop
jmp
stos
aas
sbb
jnp
int
sub
pusha
neg
mov
cmpsl
es
cltd
pop
and
jae
test
jae
test
dec
in
gs
rol
mov
push
mov
xchg
adc
add
cmp
bound
push
leave
testl
dec
int3
cmp
sub
addb
xchg
cmp
std
lahf
shrb
lret
jns
je
rcr
adc
scas
subb
sub
push
daa
pop
add
js
cmp
push
decb
in
dec
dec
pop
test
out
adc
fdivrl
aad
popa
loope
incl
int
testl
idivb
inc
push
mov
fstl
lahf
test
sbb
shr
xchg
pop
out
xor
xchg
jmp
clc
ja
aad
or
add
icebp
push
adc
adc
fs
enter
addr16
sub
in
rol
mov
mov
fnstcw
int3
pusha
lods
movsb
pusha
sub
loop
jge
std
imul
pop
push
iret
pop
dec
gs
add
xor
pop
cmp
lods
pushf
inc
imul
ds
mov
push
hlt
sbb
lods
stc
cwtl
or
jg
cmpsb
sbb
jmp
stos
dec
inc
arpl
inc
inc
imul
push
cmp
movsl
mov
mov
pusha
lret
lea
inc
sti
shll
lock
or
xor
sarl
inc
mov
add
js
push
ja
pop
cmpb
sbb
jnp
sub
mov
or
pop
and
mov
cs
notl
repz
hlt
xchg
shrb
fidivrl
imull
push
insb
or
imul
xchg
cmp
sub
rcrb
insb
mov
xor
movl
out
adc
cmp
fldt
pop
aad
dec
mov
mov
add
out
mov
std
cmpsb
mov
xchg
repz
movl
in
sub
push
mov
leave
fcompl
je
sub
and
pop
xchg
nop
mov
sahf
mov
sbb
test
insl
inc
cmpps
sbb
fnstcw
add
inc
cwtl
push
inc
dec
push
push
sbb
je
push
pop
repnz
lret
jmp
push
jg
ret
xor
cmc
gs
add
jo
mov
dec
pop
popl
sbb
cli
and
je
jg
inc
outsl
pop
xchg
cmpsb
nop
cmpsl
in
jg
push
ljmp
mov
shrb
add
notb
mov
in
pop
jne
cmp
sbb
pop
movsl
dec
inc
lods
lret
aas
jno
cmp
jae
inc
adc
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
add
add
add
add
adc
mov
mov
rclb
mov
insl
xchg
rcl
dec
nop
les
in
sub
outsb
mov
add
in
jg
sub
cmp
das
cltd
int
jae
adc
das
nop
cs
cmp
pop
jmp
fstp
hlt
adc
xchg
les
xor
insl
repz
cmp
push
lock
lds
adc
lods
out
xorl
cmp
ljmp
movsl
ret
inc
aas
xchg
dec
mov
pop
enter
adc
and
or
lcall
inc
and
fs
jb
cwtl
cltd
fdivrs
adc
jo
push
les
sbb
in
push
out
call
in
lret
movsb
iret
repnz
in
imul
cmp
fildll
mov
xchg
sbb
pop
jne
movl
dec
popa
pusha
adcb
pop
clc
cmp
pushf
mov
jnp
pop
xor
test
push
pop
test
xor
jb
xchg
and
je
fsubrs
push
bound
jge,pt
in
aas
or
lahf
in
iret
in
fwait
push
mov
stc
div
push
dec
ret
xchg
mov
addl
fs
insb
jmp
push
or
jecxz
jne
ror
xor
int3
mov
or
and
mov
or
jge
call
mov
lahf
scas
mov
xor
inc
jl
push
sub
sbb
fwait
out
push
adc
pop
gs
jg
inc
inc
fstpl
xor
mov
adc
xchg
or
ret
lcall
dec
mov
repnz
pop
jp
movb
fwait
or
xchg
ljmp
sbb
mov
jnp
jmp
stos
and
xchg
sbb
xadd
cwtl
push
fucom
sbb
arpl
ret
cmpsl
or
push
test
rorl
movsl
dec
sahf
adc
insb
sub
sub
mov
sub
pop
bound
stc
aad
hlt
imul
out
mov
dec
mov
lods
cmpsl
cltd
in
inc
inc
or
and
xor
nop
mov
ljmp
mov
cmc
jb
lds
sub
mov
scas
sar
and
pop
loopne
decb
mov
push
sub
inc
insl
jns
lds
lret
in
and
dec
movsb
aas
and
xchg
stos
popa
mov
in
das
je
or
cltd
and
mov
dec
jmp
mov
sbb
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
dec
pop
add
or
add
int3
mov
in
out
into
ret
fld1
jg
je
repnz
lret
mov
pop
or
cs
arpl
sbb
daa
stos
arpl
mov
sahf
rcll
sbb
dec
mov
mov
pop
pop
jmp
iret
ret
out
outsb
push
testl
mov
jae
push
dec
std
mov
adc
je
push
mov
loopne
sbb
out
mov
mov
out
sbb
imul
and
loope
rep
inc
test
cmpsl
cli
push
mov
add
and
lret
pusha
dec
jg
sahf
sub
xor
xor
popl
call
sbb
pop
loop
push
lods
adc
test
imul
mov
cwtl
call
loopne
xchg
cmp
pop
sbb
loopne
jbe
testb
iret
inc
mov
outsb
push
cwtl
ja
lods
imul
cmp
lret
loope
iret
dec
and
sub
mov
xor
das
fisttpl
into
lea
int
int3
ds
jo
ret
lock
pop
push
and
mov
mov
dec
mov
cmpb
rcll
sub
cli
and
jno
or
mov
xchg
xor
xchg
jmp
mov
das
mov
jb
fstps
push
lcall
mov
std
aaa
push
or
shl
dec
std
dec
mov
mov
mov
sbb
sti
flds
pop
pop
call
push
dec
push
sub
jb
sub
adc
push
int3
mov
jno
push
pop
jecxz
mov
jl
pushf
scas
push
push
pop
mov
rcl
lods
dec
and
mov
dec
xor
inc
or
inc
jl
cmp
xlat
jae
fsubrs
mov
dec
cmpl
movsl
mov
mov
xchg
hlt
push
scas
jbe
call
cmp
pop
pop
out
adc
dec
shll
adc
push
sbb
xor
out
cld
inc
mov
xchg
subl
lea
cltd
jg
pop
cmp
sub
shlb
or
int
sub
cmc
dec
dec
cli
push
jl
pop
dec
lods
lods
mov
adc
arpl
imul
push
clc
adc
xlat
lret
cltd
scas
imulb
push
sub
sbb
addr16
lock
shl
dec
dec
sub
imul
or
sahf
jp
mov
cld
ja
add
pop
es
push
add
push
jae
repnz
cwtl
rorb
jne
mov
stos
push
lcall
push
int
push
movsl
outsl
cmp
aam
rcrl
add
call
add
out
rorl
out
and
jnp
jno
push
subl
fcoms
pop
enter
es
mov
jmp
xchg
out
je
and
push
stos
sbb
fdivrs
xor
test
jae
hlt
jns
or
cwtl
fwait
push
pop
les
aad
in
js
sbb
add
je
or
pusha
xchg
popf
mov
push
std
sbb
inc
jmp
cs
pop
or
and
into
add
es
call
sbb
sub
les
dec
mov
dec
sbb
add
pop
push
repnz
mov
ja
mov
fisubs
cmpb
out
lds
dec
in
add
dec
mov
out
dec
add
push
icebp
fisubrl
call
ret
jo
insl
je
push
xchg
sbb
xchg
mov
push
stc
cmp
jnp
xchg
push
push
pop
and
xchg
notb
loop
inc
adc
mov
es
mov
js
hlt
pop
adc
push
mov
out
pop
pop
and
jmp
lahf
das
mov
jp
call
pop
add
sysexit
cld
roll
mov
mov
adc
data16
mov
into
inc
xchg
inc
je
out
bound
xchg
xchg
fs
push
sub
adc
and
mov
xchg
dec
inc
and
and
jg
out
ret
mov
ret
inc
xchg
stos
in
sbb
fsub
repz
pop
pop
or
pushf
adc
mov
jg
fsub
repnz
xadd
imul
and
mov
or
scas
gs
pop
xchg
push
sbb
mov
xchg
xor
movsb
mov
clc
fdivrs
sbbb
test
mov
aad
push
fsubl
adc
push
mov
leave
scas
xchg
mov
lahf
dec
jae
mov
fst
mov
push
pop
test
aaa
dec
jb
fwait
daa
dec
push
outsl
les
fisttps
mull
mov
enter
stos
sbb
cmp
inc
adc
add
call
subl
lret
imul
cwtl
mov
mov
mov
gs
adc
dec
jle
fs
cli
mov
imul
add
add
scas
pop
in
inc
jmp
lcall
mov
ficoml
pop
mov
hlt
mov
push
arpl
sbb
mov
inc
adc
arpl
sub
fildl
stos
mov
xor
mov
div
push
insl
clc
and
ja
or
cli
add
mov
xor
sbb
insb
fs
sbb
aas
mov
mov
repnz
mov
or
in
sbb
or
out
imull
jl
pop
sbb
cwtl
push
push
leave
push
push
xchg
mov
push
push
xor
cli
std
push
lods
enter
in
nop
lock
bound
cmpsl
jmp
aad
inc
psadbw
stos
mov
adc
outsb
imul
xchg
dec
jne
jo
mov
jno
loope
imul
add
stos
add
into
mov
cmp
jb
jbe
int3
xor
sub
xchg
fcoml
adc
ss
mov
cld
lds
mov
or
ret
dec
adc
sub
mov
enter
jge
cmpsb
fsub
push
out
sub
loope
fwait
enter
das
mov
repz
push
rcr
gs
scas
cld
mov
cmc
push
xor
xor
sub
in
cmc
push
pop
add
pop
mull
mov
cmpsb
in
xlat
lret
ret
addr16
adc
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
roll
add
orl
aaa
icebp
pop
lock
imul
lea
das
fstl
xor
scas
cmp
decl
or
mov
lea
nop
rcll
xor
or
dec
xor
jg
xchg
push
inc
push
push
std
mov
ds
flds
in
paddd
out
cli
sub
pop
mov
jbe
das
adc
cmp
call
loop
or
xor
xor
mov
out
jbe
push
nop
add
pop
inc
xor
sbb
mov
jnp
popa
bt
mov
jecxz
and
in
rcll
and
jecxz
test
iret
sub
ljmp
inc
mov
mov
push
in
pop
sub
negb
add
ss
push
push
mov
pushf
dec
dec
lock
jnp
or
out
jl
mov
push
lods
jp
cmp
mov
add
add
jg
push
or
loopne
sbb
daa
movsb
jmp
pop
aad
in
lds
in
pop
jns
push
filds
jo
cwtl
daa
addr16
pop
pop
and
push
pop
loope
fstl
jge
cmp
cs
ja
or
subb
xchg
xchg
test
call
testl
dec
sub
pop
in
dec
cmp
leave
repz
fbstp
lock
and
insl
pop
lret
push
test
push
adc
scas
sbb
mov
fistl
inc
mov
test
mov
add
or
push
iret
jnp
out
jmp
in
add
outsl
out
and
movsb
jo
mov
mov
jecxz
or
mov
xor
push
sahf
jo
sub
out
cmp
enter
outsl
mov
mov
cmp
or
mov
lret
add
add
xchg
ret
inc
sahf
cmc
ret
push
aad
fdivrl
daa
dec
outsl
cld
neg
mov
adc
or
cs
xor
mov
test
in
inc
lcall
loop
adc
mov
imul
pop
push
movsb
xchg
adc
ds
imul
and
sbb
fidivl
jae
xor
xchg
in
add
out
adc
sub
mov
xchg
imul
cmp
sbb
arpl
cmp
in
and
ss
adc
add
xchg
cmp
jg
jl
lea
or
cmp
cld
pushl
incl
xor
loope
outsb
mov
mov
lahf
ret
ja
movsb
lock
push
popa
push
popf
mov
out
dec
and
and
jl
sti
adc
test
int
in
into
pop
cs
push
lcall
jb
sub
pop
fwait
mov
cmpsl
mov
call
lret
adc
push
mov
jae
inc
push
repz
add
lret
mov
ja
cmp
callw
mov
pop
pop
test
pushl
sarb
ss
int
lret
scas
lds
and
pop
jp
xchg
push
dec
lds
mov
ss
shll
adc
mov
mov
hlt
jg
pop
jno
jmp
pop
shr
fwait
cmp
rclb
inc
sbb
imul
cmp
pop
mov
pop
movsb
jmp
adc
mov
popw
sbb
and
push
xlat
push
stos
call
mov
cmp
or
into
in
icebp
pop
lret
mov
movsb
cs
jno,pn
cmpsb
mov
or
cmpsb
lret
or
push
stc
sbb
mov
std
push
sti
loop
js
cmp
adc
pop
pop
cmp
push
jo
lods
cltd
cmpsl
inc
dec
and
mov
jno
jg
lods
je
xchg
mov
mov
xor
cld
loop
adc
ss
xchg
mov
dec
push
ret
insb
out
cmp
adc
jmp
imulb
nop
inc
int
outsl
aas
daa
jl
pop
jp
loop
out
adc
outsb
div
addr16
daa
sbb
sahf
data16
push
mov
mov
jbe
xchg
jbe
jle
add
jae
jno
mov
and
cmpsl
and
pop
jl
xchg
call
movsb
push
loopne
int3
adc
lahf
or
push
das
jns
sbb
jmp
push
rcll
stos
ss
pop
add
orl
cmp
jo
fucomip
in
xlat
cmp
ret
dec
pusha
popf
aas
and
hlt
lds
scas
mov
xchg
imul
fcompl
jne
insl
dec
fsubs
shr
leave
pop
xchg
addb
xchg
cmp
test
xchg
repnz
js
xchg
loop
aaa
aad
pushf
cmp
push
push
repz
cmp
lods
jns
sbb
lods
repz
mov
call
xor
inc
in
jne
mov
bound
and
and
xchg
enter
xchg
icebp
scas
push
andl
jge
imul
push
scas
out
xor
lods
push
rorb
test
jbe
xchg
jbe
stos
dec
mov
js
mov
fstps
dec
or
paddd
jnp
aaa
inc
shrl
aad
insb
or
adc
mov
sub
shl
andb
pop
xor
in
jmp
orl
add
adc
sbb
sub
mov
call
out
add
mov
and
cmp
xor
push
pop
xor
and
and
notl
addr16
ret
sub
fs
dec
or
out
and
fmull
pushf
xchg
xor
mov
dec
aad
clc
mov
andb
push
adc
fdiv
loop
lahf
xor
fs
outsl
adc
jbe
pop
jb
repz
jmp
sbb
dec
sub
push
pop
imul
dec
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
imul
add
aaa
icebp
xchg
or
xchg
mov
mov
int
push
mov
enter
ss
lods
mov
fwait
call
mov
mov
mov
in
pushf
push
shl
jne
cmpsb
jns
iret
les
cmp
out
lods
and
inc
mov
lods
leave
pushf
mov
pushl
loopne
mov
stc
dec
fs
xchg
iret
out
aas
inc
mov
mov
out
arpl
dec
in
or
pusha
mov
or
xlat
xchg
mov
inc
clc
test
jp
pop
gs
and
popa
mov
movsb
sbb
das
cmp
mov
pop
sbb
push
fs
enter
outsl
jp
loopne
imul
sbb
cltd
xor
hlt
jge
in
sbb
out
sbb
test
notl
dec
rcrb
arpl
lret
pusha
inc
in
cwtl
hlt
aaa
mov
fidivrl
daa
push
enter
mov
addr16
jo
pop
scas
cmp
inc
adc
mov
ja
xorl
ds
pop
out
fdivs
fsubrl
setle
dec
pop
mov
insb
lea
inc
stc
ja
push
loope
xor
pop
mov
push
inc
pop
mov
arpl
fmuls
lret
fiadds
cli
pop
pop
leave
xchg
test
aam
add
sub
jne
cwtl
add
xchg
xchg
clc
dec
ret
xchg
jle
dec
mulps
mov
repz
loope
mov
push
aad
mov
cmpsb
aam
loope
jno
cwtl
les
or
pop
rcr
test
stos
mov
sti
out
lea
jns
adc
mov
jae
xchg
cmp
test
orl
mov
mov
pop
inc
inc
push
push
jne
jne
dec
adc
ds
outsb
push
bound
fstpl
in
leave
pop
dec
pop
jmp
loop
xor
adc
inc
out
out
hlt
push
lcall
insb
mov
lcall
adc
lahf
add
and
imulb
jb
fisubl
lret
fistpl
jae
dec
dec
daa
aam
std
pop
icebp
les
out
enter
clc
mov
add
call
and
imul
sti
fldt
mov
sbb
mov
jnp
inc
xchg
fwait
sbb
jp
inc
lret
leave
lret
lods
shrb
dec
pop
sbb
sbb
fstl
mul
push
roll
testb
jge
xchg
cld
mov
xor
sti
or
xor
pop
pop
pop
cmp
lret
lds
orl
adc
int
dec
lcall
add
dec
inc
adc
sbb
in
xor
rcll
test
push
cmp
sub
inc
add
adc
inc
mov
jne
sbb
push
jmp
testb
inc
cwtl
das
lods
outsb
pusha
pusha
push
out
mov
add
mov
mov
imul
mov
mov
xor
sub
ljmp
sub
scas
adc
cmp
test
cmp
in
dec
fdivrl
xor
and
jb
mov
pop
push
or
stos
cmp
bound
mov
test
cmp
test
push
dec
dec
lds
fdivl
mov
push
inc
jg
mov
stos
fcoml
add
stc
ret
fcmove
adc
mov
pop
dec
fimuls
int
cld
outsl
mov
xchg
into
xchg
je
out
dec
cltd
fidivrs
fucomi
jp
bswap
ror
mov
test
movb
push
pop
mov
int
mov
or
prefetcht1
js
mov
jg
xchg
xchg
and
aas
imul
movsb
data16
bound
push
xchg
lcall
xchg
mov
or
adc
mov
jo
mov
sbb
pop
cmp
ret
xchg
inc
fnstenv
leave
fadds
mov
push
test
aad
nop
scas
xchg
gs
mov
test
mov
rorl
fisttpl
jnp
shrb
cmp
or
add
add
or
lds
dec
push
jae
adcl
mov
xchg
int
jge
push
inc
cltd
and
and
cltd
loopne
jae
cli
jns
fsubrs
sub
mov
add
jno
push
jle
addr16
pusha
pop
dec
pop
inc
cvtps2pd
pop
jo
pop
pop
jecxz
data16
mov
gs
sti
mov
sub
popf
jne
cmp
xchg
cmp
pop
aad
pushl
or
xchg
push
insl
jo
inc
lcall
insb
dec
sub
jae
outsl
mov
push
sub
inc
mov
jp
lret
mov
out
xor
cmp
leave
popf
lods
inc
mov
xchg
pop
in
ficoml
cmpsl
jbe
and
mov
mov
lea
push
icebp
push
imul
jmp
loopne
mov
adc
sub
inc
sahf
push
push
inc
outsb
xchg
add
cmp
in
je
add
cmp
aam
daa
les
ret
hlt
mov
pushf
sub
lcall
les
popl
fidivrl
pop
push
mov
gs
xor
rorl
cli
push
xor
pop
add
dec
xchg
inc
adc
leave
push
xor
icebp
into
pusha
or
int3
mov
cmp
mov
lods
xlat
ret
out
jnp
das
or
pop
rclb
rcl
inc
pop
sbb
outsb
xlat
jbe
imull
dec
push
test
loop
movsl
jne
cld
xchg
daa
push
in
mov
arpl
das
xor
push
fisttps
and
and
sub
inc
mov
pop
mov
aam
lods
test
repnz
lahf
out
into
jecxz
xchg
pusha
test
sbb
jmp
and
mov
pop
movsl
add
ret
cmp
stos
iret
sbb
addr16
push
insl
ljmp
inc
xchg
sub
mov
out
stos
mov
pop
subl
scas
push
jg
dec
into
repz
and
stc
jns
or
arpl
fdiv
dec
push
cmc
dec
adc
lock
adc
ljmp
call
jb
pop
dec
fdivrl
sbb
mov
rorl
cmp
dec
add
sbb
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
sti
push
add
and
add
add
in
mov
dec
stos
loopne
jmp
cmp
pop
fcmovnb
inc
scas
addr16
jbe
push
stc
dec
sbb
shll
xchg
aad
inc
sub
sub
adc
lret
fldenv
in
addb
sbb
cltd
push
js
fisubs
xor
mov
scas
gs
and
mov
push
sarb
arpl
jb
dec
lret
fstpt
xor
sbb
std
and
push
inc
dec
pop
xchg
ret
mov
movsb
xor
lret
cltd
or
jl
adc
in
pop
cltd
mov
mov
in
push
add
aad
dec
pushf
mov
inc
popa
sbb
push
hlt
stos
faddl
or
sub
pop
imul
dec
pop
xor
out
sbb
pop
jne
jno
mov
xchg
adc
das
jmp
xchg
dec
mov
lcall
jge
gs
cwtl
fstl
pop
aam
test
test
ss
stos
dec
or
cmp
jmp
out
inc
das
dec
inc
repnz
and
xchg
mov
pop
movsb
jmp
divl
gs
sub
mov
push
lret
sti
insb
lret
decl
sub
aaa
pop
jge
mov
jmp
jno
mov
push
mov
xchg
aaa
cmp
ficomps
xorl
stos
mov
lods
stos
mov
push
add
adc
lods
in
mov
dec
mov
es
call
scas
xor
inc
nop
add
icebp
pop
adc
xlat
mov
sbb
push
inc
into
mov
dec
inc
fucom
inc
out
push
sub
stos
jge
jmp
mov
ud2
in
or
repnz
outsl
and
scas
pop
ss
inc
push
call
xor
mov
iret
popf
shrl
ljmp
pop
fdiv
pop
jg
lret
popa
rorb
xchg
fstl
call
faddl
arpl
shlb
push
cmp
mov
repz
and
int3
test
in
cmpsl
ljmp
sub
mov
sub
pop
shlb
sub
and
sbb
dec
xor
jb
push
and
xor
loopne
xchg
test
jnp
add
movsl
pusha
jle
xor
in
mov
ja
or
out
sub
dec
cmc
movsl
xor
jb
adc
or
lods
and
mov
pushl
or
fistl
sti
dec
add
add
jmp
lret
and
fs
or
clc
mov
jb
lcall
rclb
fwait
push
xchg
pop
fnsave
fdivr
pop
sub
shlb
cmp
dec
popf
adc
not
repnz
jmp
or
pop
frstor
enter
aad
out
cs
mov
mov
sub
divb
enter
xchg
test
psraw
pop
in
outsb
lods
dec
mov
mov
adc
xchg
mov
das
xor
adc
inc
cmp
stos
jl
sti
mov
mov
iret
loope
popa
fldcw
and
lea
sbb
adc
aaa
cmp
movsl
lcall
dec
inc
dec
fidivrl
pushf
adc
inc
or
adcb
inc
shll
ja
ss
inc
adc
loopne
std
push
cmp
leave
insb
js
cmpsb
cmpsb
fs
jmp
sbb
in
and
inc
outsl
pop
rorb
inc
pop
es
ftst
xchg
jmp
inc
roll
hlt
cmp
inc
repz
nop
mov
mov
mov
sahf
movsl
repnz
sub
add
and
mov
mov
and
js
push
jecxz
movsb
xchg
xor
pop
iret
push
xchg
add
add
jmp
cli
fadd
sahf
inc
clc
pop
and
stc
call
movsl
xchg
push
pop
adc
add
aaa
add
shll
mov
shlb
xor
and
popf
out
mov
mov
fisubrl
movsb
sbb
in
cwtl
add
add
shlb
jp
jp
or
push
pop
pop
mov
jmp
out
test
pop
lods
or
xor
pop
inc
pop
xchg
mov
stos
fistl
fnsave
cmc
add
jl
push
test
out
mov
ret
in
dec
dec
xchg
sbb
das
jns
in
loop
icebp
ja
pop
mov
sbb
jne
fsub
cli
lret
mov
fistps
xchg
and
jle
or
addl
test
fsubrp
outsb
lea
aam
add
mov
add
push
add
xor
inc
pop
fmul
push
imul
jns
clc
jmp
push
fiadds
in
and
adc
pop
js
insl
ret
xchg
xor
loop
push
or
bound
pop
jae
sahf
xor
addr16
lods
adc
mov
mov
pop
cmp
push
cwtl
pop
xorl
xor
imul
ja
in
mov
cmp
les
xchg
lret
imul
mov
mov
or
out
in
xchg
popf
mov
pop
cli
hlt
add
jl
pop
pop
mov
dec
fs
incb
sbb
aad
or
pop
pop
repz
mov
fstsw
pop
sub
int
pop
repz
and
addl
pop
inc
pop
push
in
hlt
fdivl
dec
cmc
shlb
xor
movb
and
push
or
ljmp
testl
sub
cmp
mov
les
aaa
pop
lods
inc
stos
cli
loopne
mov
cmp
jno
xor
jmp
dec
pop
lea
or
cli
inc
xor
adc
mov
out
addr16
add
ficomps
mov
adc
lret
push
ret
jge
xor
mov
fistpll
push
rcl
cmp
fiadds
aaa
mov
sub
push
xor
sub
les
dec
xor
inc
or
js
mov
sarl
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
mov
add
add
mov
sub
mov
pop
addr16
std
pop
xlat
adc
sub
push
daa
aad
xchg
fs
or
dec
jbe
lods
arpl
out
lods
or
cli
int3
outsb
pop
jbe
mov
lcall
mov
xchg
pushf
cmc
jmp
or
mov
and
xor
loopne
xor
pop
test
cmp
cmp
out
inc
imul
mov
jg
pop
push
sub
rorb
cmp
leave
jne
hlt
inc
pushf
in
orb
jbe
push
mov
das
inc
mov
lock
std
or
push
xlat
clc
and
sub
cmpsl
outsl
mov
clc
loopne
mov
jbe
stc
sub
les
scas
jae
lret
inc
push
mov
call
cli
ds
data16
or
fcomps
lret
outsb
or
xchg
sub
adc
add
inc
es
xor
in
push
mov
push
sbb
adc
mov
jmp
cli
adc
cmc
xor
adc
test
mov
lock
cmp
stc
arpl
lock
sbb
stc
push
stc
shlb
insb
jp
xor
lea
pop
adc
add
ret
scas
shll
sti
xchg
sbb
shll
sbb
jmp
add
jb
mov
mov
outsb
and
cltd
mov
jno
inc
std
loope
test
aam
repz
push
xchg
adc
cltd
popf
push
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
scas
add
add
fmull
xorl
int
inc
jmp
inc
mov
mov
outsb
sub
shll
cmpsl
mov
dec
shrl
pop
addr16
dec
sahf
ret
inc
or
pop
sub
jae
jge
rorl
mov
mov
or
movsl
inc
jmp
add
jne
xor
inc
pushf
nop
ja
jmp
jmp
xchg
jns
sbb
icebp
leave
test
jb
xor
aad
cmp
and
mov
call
cmc
lcall
xorb
xchg
iret
pop
mov
into
sbb
sbb
int3
mov
in
aaa
xchg
cmp
and
cmp
xchg
sub
aad
enter
push
mov
imul
mov
inc
mov
mov
addr16
punpcklwd
cmpsl
adc
test
orl
fld1
lods
xor
lods
jb
pushf
and
xchg
nop
xor
outsb
inc
mov
inc
pop
pushf
push
and
xchg
sbb
mov
sub
ret
shrl
into
repz
sub
xchg
lcall
cmp
ja
int3
sub
mov
imul
rcrl
in
lea
stos
aad
add
fwait
int
test
push
sub
rcrl
std
insb
cmpsl
cli
mov
jge
xorl
inc
xchg
push
sub
rclb
mov
sbb
icebp
stc
or
ficompl
lea
and
arpl
cmp
dec
enter
xchg
xlat
cmpsl
fcoml
and
adc
fmull
add
cwtl
out
pop
mov
out
imul
and
hlt
clc
pusha
clc
or
add
inc
xchg
adc
addr16
or
imul
pop
sub
pop
sahf
xchg
insl
mov
xchg
inc
not
adcb
adc
xlat
or
fiaddl
insl
cmpl
mul
xchg
aaa
data16
adc
lds
mov
cmp
cmp
shl
mov
lret
imul
or
movnti
sub
cmp
mov
nop
fbstp
sarb
push
mov
in
or
faddl
out
xor
mov
push
test
pushf
lret
frstor
or
push
sub
add
and
pop
fcompl
and
xor
mov
jl
iret
jo
cwtl
and
push
negb
into
mov
icebp
push
lds
jno
add
sub
add
cmp
aam
sub
inc
add
dec
mov
bnd
push
iret
push
sar
push
lret
cld
cmp
mov
xor
mov
orb
dec
sub
jecxz
jl
jge
iret
mov
mov
mov
bound
out
mov
or
add
clc
sub
cmp
les
pop
mov
roll
aad
inc
pop
xor
sbb
add
and
push
sub
xchg
adc
inc
cmp
jmp
and
into
jnp
movsl
pop
xor
or
mov
xchg
add
and
bound
ror
pop
jl
dec
mov
or
sti
add
xor
sub
fisttpll
stc
or
xlat
lahf
xchg
mov
andb
das
insl
add
xor
mov
or
xchg
pop
call
int
jl
jecxz
xorb
js
mov
sub
hlt
mov
xchg
ljmp
push
sbb
mov
addr16
jmp
mov
inc
lcall
outsl
xchg
loopne
cwtl
dec
test
scas
pop
xorb
mov
cmp
shll
push
inc
hlt
xchg
pause
sbb
sarb
inc
sbb
lods
in
lahf
loop
push
pushf
out
movsl
jns
out
fiadds
mov
enter
sub
xchg
push
or
in
push
jge
sbb
sub
xchg
lods
mov
add
jecxz
jns
add
fwait
fwait
pxor
dec
aaa
pop
lcall
dec
xchg
dec
testb
mov
adc
shr
or
xchg
mov
outsb
inc
loop
jmp
cld
dec
fwait
mov
ret
mov
pop
sub
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
pop
add
sub
sub
jne
jmp
shll
xor
pop
ficomps
push
into
push
add
dec
out
stc
jb
out
sbb
mov
aaa
jbe
shlb
pop
push
adc
iret
mov
dec
popa
sub
imul
jbe
fsubs
cmp
adc
inc
push
sub
std
or
idivl
and
fwait
sbb
pop
xor
xor
adc
jmp
add
xchg
movsb
mov
jnp
shll
push
arpl
rolb
inc
data16
scas
jns
jnp
loope
hlt
cwtl
pop
insb
jl
mov
or
or
jg
leave
inc
jnp
xorb
adc
aas
inc
rcrb
cmpxchg
inc
loop
repz
jp
stos
lahf
lret
subl
push
xor
or
and
sarb
movsb
gs
insl
in
pminsw
fnstcw
loop
fwait
cld
sub
outsb
pop
ljmp
int3
movsl
xchg
subl
in
popa
adc
gs
cmpsb
sbb
jbe
push
iret
cmpsb
rcrb
xchg
enter
pop
mov
push
and
cltd
xorl
call
repz
ja
jbe
fwait
xor
std
add
inc
sbb
scas
mov
push
test
orl
enter
xchg
aas
mov
inc
sbb
add
cmp
mov
call
push
fsubrl
push
popf
test
test
hlt
aam
mov
push
pop
and
jecxz
loope
xor
pop
fwait
xchg
std
lcall
jge,pn
and
ret
sub
roll
add
in
mov
push
sbb
clc
fsubrl
or
clc
fdivl
jp
repnz
movsl
xchg
mov
sbb
or
sbb
inc
add
or
xchg
stos
pop
sub
mov
and
sbb
sbb
ds
jno
inc
pushf
je
xlat
dec
pop
icebp
enter
jg
push
add
dec
mov
cmpsl
iret
test
mov
fs
in
cmpsl
mov
es
divl
mov
or
lret
push
jo
sub
mov
jbe
fcoml
aam
pushf
out
mov
push
das
inc
pop
xchg
pop
mov
fistl
inc
dec
xor
pop
mov
loope
in
dec
or
fnstcw
add
mov
fcoms
mov
pushf
jae
lock
jne
mov
subb
inc
dec
add
jg
fwait
cmp
loopne
or
mov
sbbl
lds
push
xchg
xchg
dec
mov
fcomps
cmp
jl
je
aam
test
dec
inc
or
mov
sbb
idivb
fwait
mov
add
sub
faddl
fs
mov
mov
sbb
decl
pop
and
and
imul
push
and
daa
pop
push
lahf
sub
test
out
jb
int3
fs
ss
or
rclb
icebp
loopne
movsl
mov
scas
jmp
push
and
mov
mov
aas
scas
jmp
push
stos
jl
loop
sub
add
mov
cltd
mov
dec
aas
inc
dec
mov
insl
ds
and
push
rcrb
out
fildll
push
lret
jnp
dec
insb
push
inc
outsl
stc
pop
push
cmp
sahf
call
or
pop
sbb
mov
test
pop
adc
dec
movsl
iret
aas
xchg
xlat
xchg
cmp
mov
in
xchg
sbb
pop
dec
addr16
jmp
cmp
mov
jp
inc
mov
stc
or
push
jle
sub
mov
scas
div
mov
sbb
js
xchg
je
notb
jo
sub
fldl
dec
into
sbb
xchg
ss
pop
or
repnz
addr16
mov
mov
lar
mov
scas
mov
and
int
jp
inc
cs
pop
inc
pop
adc
mov
sbb
jae,pt
cmp
arpl
test
pushf
and
cmc
jbe
mov
cmp
pop
add
push
andl
cmp
enter
clc
in
add
sub
outsb
mov
minps
pop
int3
sbb
sub
mov
ret
adc
insl
sub
cmp
mov
push
ss
sub
daa
inc
std
ret
or
loope
push
das
scas
fmull
cmp
flds
not
mov
lea
mov
sub
push
or
cmp
cs
sub
jge
or
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jp
add
jecxz
add
dec
ds
push
lds
addl
adc
mov
xchg
xchg
daa
insb
call
xor
addr16
mov
stc
xlat
ret
mov
jbe
xor
add
dec
dec
rclb
adc
loop
lock
cli
jle
xchg
sbb
cmp
fiaddl
shll
sub
xor
das
push
fildll
cmpl
fidivl
sti
mov
cmp
dec
arpl
test
subb
mov
mov
aad
cltd
mov
mov
orl
mov
cmp
aam
repnz
push
lea
add
repnz
mov
sbb
mov
movsb
stc
mov
xor
sbb
std
sbb
jno
pop
xor
adcl
mov
sti
mov
mov
add
sbb
jl
sub
push
mov
sbb
movsb
pop
adc
mov
roll
mov
mov
jle
out
jg
ljmp
loope
sub
cli
mov
mov
fisttps
out
mov
and
mov
mov
pop
xchg
aad
cltd
inc
icebp
xor
gs
fidivrs
add
imul
shrl
insl
enter
shrl
in
jns
xchg
js
fiaddl
in
int3
cli
loop
xchg
mov
lret
xor
mov
mov
iret
gs
cmp
addr16
sbb
add
push
lcall
repz
xchg
or
mov
sub
mov
cltd
jge
lret
in
sbb
or
mov
jb,pt
and
pop
int3
test
addl
pop
shll
cmp
cmp
sarl
cmp
and
cwtl
xchg
xor
cmp
or
je
xor
test
pop
cs
rcll
jp
sub
test
adc
les
fimuls
aam
mov
loopne
lea
jo
rorb
xchg
lret
aaa
dec
cmpsb
hlt
lret
xchg
xchg
sbb
sbb
gs
mov
sbb
pop
mov
fsubrs
mov
movsb
cltd
dec
addr16
notb
push
es
push
in
jns
adc
lcall
daa
add
adc
dec
adc
jle
in
cld
mov
cmpsl
movsl
cmp
iret
call
mov
je
aam
add
xchg
mov
jge
pushf
cli
dec
lods
sub
js
pop
data16
push
ret
inc
xchg
push
adc
out
mov
scas
ljmp
test
sbbb
shrb
lret
push
sub
out
xor
sbb
cmp
add
movsl
jp
lea
mov
or
loope
mov
fcmove
lret
sbb
out
cltd
cmpsb
mov
add
sub
fcomps
jbe
pop
push
fistl
fiaddl
xlat
or
in
out
sbb
xor
xor
test
inc
add
arpl
hlt
rol
loop
jnp
sbb
data16
jb
dec
cmc
xchg
cmp
and
mov
scas
pop
mov
jne
cmc
xchg
int3
fwait
sub
dec
and
mov
daa
lret
or
sub
xor
outsl
jl
pop
fdivs
aam
adc
xchg
stc
sub
lret
pop
mov
daa
jbe
mov
movsl
jo
into
jne
sahf
and
sbb
and
push
ret
push
scas
mov
xor
loop
in
hlt
pusha
out
lds
outsl
mov
xchg
clc
sbb
sub
stc
dec
or
ficompl
sar
pop
mov
sbbb
daa
shrl
jne
xor
xlat
fxch
push
bound
shlb
in
push
add
popf
int
leave
and
push
lret
fs
adc
adc
enter
dec
pop
imul
push
daa
xchg
neg
pushf
sub
popa
xlat
inc
jno
xor
dec
imul
int
cs
sbb
js
xor
faddl
cmovp
xchg
jle
inc
adc
stos
add
ret
test
dec
out
push
lahf
aaa
xchg
decl
fsts
idivl
pop
sub
lret
inc
push
xchg
pop
mov
dec
popa
jge
pop
sti
push
jp
xor
clc
ret
shll
or
xor
divl
into
lcall
sti
testl
mov
pop
imul
and
and
cmp
pop
in
ja
mov
dec
add
in
ss
cwtl
negl
fcoml
rcrb
xorb
mov
or
sbb
add
cmp
push
adc
cmpsb
or
fdivs
jae
aam
adc
pop
push
addl
in
pushf
inc
test
lcall
inc
and
push
sbb
pop
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
push
add
add
add
add
loope
pxor
cmp
nop
jge
stc
or
cld
fwait
dec
addb
loope
add
lahf
or
inc
rorb
xor
mov
cwtl
xor
iret
mov
xchg
mov
jle
imul
ds
bound
in
roll
push
sub
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
pop
add
inc
or
add
pop
sub
adc
push
imul
pop
mov
cli
pushf
sar
pop
nop
mov
mov
xlat
lods
popf
cmpsb
mov
mov
inc
xor
dec
cmpsb
in
fidivs
and
test
jmp
sbb
push
xor
mov
jl
inc
addl
and
clc
fucom
sbb
je
mov
lods
sub
jg
sub
das
mov
cmp
enter
push
dec
in
movsl
lret
jp
stos
mov
cld
mov
sub
xchg
xor
nop
mov
adc
pop
xor
or
add
xchg
dec
cmpsb
jle
dec
int3
in
leave
adc
sbb
rcrl
xchg
fcompl
mulb
xchg
jmp
jp
pop
push
mov
lock
rcrl
mov
or
xor
sub
mov
push
sti
dec
outsl
dec
cmp
stos
mov
jb
jmp
in
push
hlt
pop
lods
and
and
cltd
jp
div
stos
xlat
or
cmp
sbb
leave
push
mov
orb
dec
std
push
in
cli
mov
mov
adcb
aas
mov
push
sbb
mov
xor
sti
add
sahf
shrb
hlt
sub
je
mov
out
pop
and
and
mov
fs
stos
sbb
mov
imul
mov
aam
sbb
iret
jecxz
push
stos
or
fsubr
sbb
add
inc
ds
daa
push
ss
div
push
data16
cltd
jo
ss
test
xchg
push
ret
xor
xor
les
cld
jo
data16
cli
ljmp
stos
jno
js
push
loope
pusha
int3
pop
push
push
inc
cmpsb
pop
fsubs
sti
mov
xor
rcll
or
shrb
jg
leave
lcall
ljmp
mov
shrd
cld
in
sahf
test
pop
imull
xchg
int3
lods
fstpl
stos
shrl
cli
xor
sub
popf
fimull
jg
out
dec
stos
arpl
cmp
movsb
ja
loope
pop
mov
jge
jecxz
jb
inc
loopne
pop
pop
cmp
or
mov
mov
stos
jns
shlb
cmp
scas
mov
and
bndstx
mov
push
mov
ffreep
sbbl
scas
push
mov
sbbb
cltd
sub
mov
add
sarb
paddq
sub
test
inc
ja
clc
dec
lods
jecxz
dec
fstpt
sub
jns
add
repnz
push
popa
jecxz
leave
das
rcll
sub
adc
insl
and
xchg
xchg
xchg
mov
xchg
sub
and
loopne
mov
mov
inc
test
xchg
push
imul
js
std
movsl
decl
jge
neg
jl
loop
mov
jmp
jl
and
ficompl
mov
mov
data16
push
ss
cltd
fisubl
aas
mov
bound
popa
sbb
pop
sbb
push
sbb
int
sbb
jbe
mov
mov
mov
aam
and
jae
inc
cmp
or
jp
and
dec
or
xor
mov
push
add
test
cmpsb
xlat
push
pop
andl
fst
cmp
and
jbe
out
pop
ret
mov
inc
mov
ja
or
outsb
ret
mov
add
and
lea
pop
inc
jge
pop
adc
in
cmp
insl
xlat
repz
loopne
sbb
fidivrl
and
or
sub
ljmp
arpl
ds
int3
in
or
popa
sbb
cmp
out
inc
fstpl
leave
and
xor
sti
pop
mov
or
and
dec
std
js
out
add
mov
stos
sti
mov
fiaddl
or
in
sbb
mov
icebp
test
inc
loop
jne
movsl
xchg
and
push
jl
popf
aam
leave
addb
jge
dec
sbb
adc
dec
fs
call
sub
lret
je
or
js
lahf
lock
or
sub
testb
jmp
push
pop
mov
aaa
xchg
lahf
add
pause
push
sub
dec
clc
call
sbb
outsb
cmp
sbb
movsl
or
jne
or
mov
sbb
pop
adc
sub
loopne
and
lods
clc
mov
xchg
dec
hlt
or
repz
ss
adc
dec
jo
das
cmp
jge
sarb
iretw
aaa
ret
std
inc
cmp
fiadds
mov
and
aam
jnp
into
and
add
inc
push
gs
rcpps
mov
dec
jb
mull
mov
repnz
push
pop
sub
or
inc
ja
add
pop
push
add
scas
push
sub
inc
and
gs
lret
xor
movsb
xor
ror
cld
push
jmp
dec
xor
xor
pop
pop
mov
loop
insb
mov
insb
aad
mov
decl
mov
dec
mov
hlt
lods
xlat
sbb
cmp
pop
sub
das
inc
and
stos
sbb
dec
outsb
dec
lahf
insl
in
xor
lea
mov
xor
and
lods
addl
movsl
inc
lods
cmp
lock
xor
test
call
decw
adc
es
sbb
ljmp
and
add
fs
mov
pop
outsl
and
fimull
out
jecxz
ret
lea
mov
jo
xchg
mov
cmp
ja
inc
adc
addr16
ret
out
mov
in
in
xor
and
pop
xchg
xor
or
jbe
pop
out
mov
mov
pop
pop
arpl
test
sub
cwtl
out
ret
lret
dec
dec
adc
les
test
cwtl
cmp
dec
fwait
movsb
vaddsubpd
adc
inc
adc
cmpsl
in
sub
das
cmp
in
out
cmp
xchg
sahf
pop
mov
mov
xchg
cmp
mov
and
add
xchg
pop
shl
cli
push
adc
outsb
xchg
stc
xchg
mov
jl
fmull
mov
xchg
jno
or
sub
pop
xchg
push
fstpl
into
ficoms
dec
pop
lahf
or
push
push
push
dec
movsl
pop
fstl
push
in
add
mov
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
out
add
xchg
add
or
popf
pop
fldl
push
push
sub
mov
dec
loope
mov
orb
push
shl
and
cmpsb
and
int
cld
sub
sub
lcall
pop
gs
fcomp
movsl
aam
movsb
stos
imul
inc
jo
lcall
mov
and
bound
pop
adc
xchg
and
adc
push
xor
mov
push
and
dec
imul
aas
push
cmp
cli
shll
pop
pusha
shlb
pop
sbb
fsub
mov
mov
sarl
in
call
arpl
pop
test
mov
mov
push
mov
jb
xchg
bswap
mov
add
cli
add
fcoml
push
sub
push
test
inc
stos
lock
jae
jmp
xchg
mov
lret
imul
push
mov
sub
pushf
mov
aas
pushf
mov
ret
sbbl
stc
or
fdivs
in
add
cmc
out
sti
cmp
and
lods
adc
loop
xchg
mov
cmp
and
cmp
inc
add
push
out
popf
dec
notb
cmpsb
test
repz
nop
insb
sbb
pop
dec
fisttps
cmp
sbb
popf
mov
cmp
fwait
out
loope
xchg
repz
or
ss
movb
hlt
sbb
jg
xor
in
xor
popf
mov
arpl
fidivrs
stos
push
sub
or
add
inc
push
enter
fdivrl
sub
into
cld
ss
push
js
orb
add
bound
mov
movsb
shl
push
scas
and
ret
repnz
xchg
and
in
xchg
or
push
mov
dec
aam
cli
es
mov
movsl
and
scas
daa
stos
dec
mov
adc
pop
enter
mov
mov
pop
xchg
sub
sbb
out
ror
dec
xor
sahf
out
clc
mov
or
lods
and
dec
test
mov
xchg
mov
push
adc
pop
fsubs
shll
xchg
mov
xchg
mov
add
lea
push
jns
lahf
rolb
aaa
sbb
fs
dec
mov
push
out
push
mov
sbb
xchg
ds
push
sti
mov
pop
sbb
pusha
clc
sbb
dec
movups
nop
pop
xor
loopne
push
dec
insb
addb
and
mov
ret
mov
push
insb
dec
push
lret
and
dec
addr16
cmp
lret
mov
jns
scas
jg
dec
mov
adc
dec
dec
imul
inc
js
in
mov
sub
lret
inc
pop
fiaddl
fiaddl
inc
dec
pusha
int3
lahf
xchg
mov
imul
cltd
loop
daa
sub
dec
fdivs
mov
inc
jnp
sbb
fcoml
or
inc
jle
and
scas
xor
lds
pop
insl
icebp
xor
imul
pop
sbb
fsub
in
ret
jb
jne
xorb
mov
shll
mov
repnz
lahf
sti
mov
add
jo
hlt
dec
jb
imul
add
mov
addr16
sbb
sbb
test
jl
fiadds
cmc
lcall
jmp
divl
scas
push
daa
lret
inc
jg
jo
rcl
bound
push
insb
or
dec
ds
adc
push
push
pop
cmp
lea
push
sbb
or
and
lods
mov
pop
adcb
push
add
or
setl
push
adc
test
js
pop
inc
mov
push
pop
clc
add
lea
xchg
cmpsl
or
and
adc
or
or
lret
and
xchg
xorb
adc
adc
icebp
test
adc
push
jb
out
outsl
sub
push
subl
jecxz
adc
inc
ljmp
sbb
dec
sbb
fcoms
mov
mov
fmuls
enter
scas
dec
jne
in
xchg
cmc
add
jb
aaa
mov
mov
add
shrl
sub
cmpsl
mov
imul
jl
sub
push
inc
stc
hlt
dec
push
pop
mov
jae
std
int
ret
repnz
repnz
and
push
push
lds
mov
fildl
push
call
sahf
or
jae
mov
jae
jg
outsb
push
xchg
cwtl
leave
mov
in
sub
sbb
add
inc
mov
inc
xchg
jg,pt
xchg
or
sub
pop
add
add
xor
rcl
cmp
ljmp
mov
jne
movsb
aad
and
stos
outsb
inc
into
pop
lcall
std
outsb
clc
js
jmp
or
cmp
push
cld
mov
aad
xor
cld
aas
pop
adc
xchg
pop
pop
mov
xchg
add
mov
rcrb
aaa
out
push
mov
hlt
iret
sahf
call
pushw
xchg
ss
mov
insb
jmp
mov
daa
jg
mov
jg
insl
sub
je
xchg
push
mov
dec
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
add
add
pop
adc
jg
je
inc
sahf
lea
pop
push
xchg
mov
inc
sub
mov
dec
stos
mov
repz
sbb
sbb
jp
rorl
nop
or
push
jae
jle
orb
ret
fidivs
add
leave
lret
int3
mov
sti
jb
inc
sbb
inc
cmc
xchg
xchg
jg
inc
or
pusha
or
jno
ret
je
xor
test
inc
xor
frstor
or
jmp
push
sbb
or
lds
sub
or
mov
addr16
pop
mov
jo
loopne
xchg
or
js
add
xor
mov
mov
pusha
testb
leave
call
jl
lret
push
xchg
pandn
mov
loopne
mov
dec
aas
aam
push
mov
push
jo
int
pusha
mov
sbb
sti
popf
pop
subb
fstpt
sbb
pshufw
cltd
mov
inc
ficoms
inc
push
mov
imul
or
push
pmulhw
mov
sub
ljmp
popf
out
xor
cmp
mov
hlt
ss
call
into
mov
addr16
insl
nop
xor
ss
mov
ds
je
jae
mov
lds
add
insb
mov
test
dec
ja
push
insl
js
lods
mov
ja
out
xorl
mov
stos
and
mov
sub
xchg
push
loope
aaa
pop
dec
mov
mov
aas
stc
dec
adc
sbb
and
jo
dec
and
pushf
movsl
mov
dec
scas
mov
dec
out
popa
push
aas
ficomps
stos
cmp
es
stc
filds
insb
data16
or
inc
imul
inc
xchg
cmpsl
fbstp
sub
sbb
mov
sub
sub
out
repz
insb
push
dec
push
push
cmpsb
sarb
out
inc
lods
scas
into
cmpsl
and
mov
cmp
fs
outsb
push
int3
out
sub
lods
mov
fstp
test
fs
aad
inc
lock
repz
and
cmpsb
insl
and
test
inc
ficoml
in
xor
lea
pop
xchg
fdivs
and
and
cmp
add
mov
xor
int3
adc
pop
subl
lock
aam
scas
jnp
dec
mov
pop
mov
jl
and
fwait
mov
xchg
rcrb
call
dec
jo
add
ret
xchg
cmp
cmp
into
loope
or
mov
cmpsl
xor
rep
stos
int
gs
aad
mov
fisttpll
ret
mov
jecxz
mov
insl
fdivr
fidivrl
xchg
cmp
cmpsb
repnz
addr16
jmp
or
iret
in
push
cmp
fbld
cs
add
add
je
popf
xchg
dec
xor
faddp
adc
out
inc
adc
ror
mov
add
daa
das
rcll
imul
sahf
lods
das
fiaddl
stc
mov
and
cmp
jmp
mov
sbb
pop
pop
sahf
xor
repnz
xchg
imul
wbinvd
roll
mov
push
inc
out
dec
mov
test
push
or
jns
test
push
int3
xchg
lods
sbb
and
pop
lea
jb
roll
packssdw
inc
repz
sub
and
mov
clc
imul
inc
sbb
fsts
dec
lods
cld
shl
loopne
or
iret
cwtl
lock
ss
lods
push
repnz
push
jnp
lahf
adc
and
sbb
movsl
arpl
in
jae
call
push
mov
push
out
push
push
jae
mov
ds
mov
movsb
leave
mov
or
sbb
lods
pop
adc
ret
testl
jb
mov
cmc
inc
xor
or
sarb
push
xlat
mov
mov
sbb
fwait
xlat
dec
jle
mov
pop
not
inc
ds
sub
xchg
std
cmp
mov
mov
cmc
dec
rcl
pop
hlt
xchg
ficompl
enter
adc
add
leave
mov
cwtl
and
clc
lret
fs
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
aam
add
sub
add
stos
into
scas
and
aam
sbb
mov
jns
cltd
push
fildl
inc
push
iret
xchg
std
jmp
jo
in
psadbw
sub
or
leave
cmp
cmpl
ficomps
fdivrs
push
test
and
mov
repnz
dec
shll
repnz
andb
push
or
lea
jg
rcrl
jne
cmp
lcall
ja
outsb
sbb
popa
inc
cltd
js
cmp
out
mov
inc
pop
inc
jne
es
enter
xor
lods
inc
jp
cmp
aas
sbb
xchg
idivb
pop
xor
jmp
int
mov
mov
push
sahf
dec
cld
and
xchg
pop
xchg
or
add
movsl
xor
jl
adc
sbb
aas
mov
dec
xchg
lret
es
jecxz
push
or
mov
shr
filds
fbld
adc
xchg
pop
cmp
out
and
out
xor
and
fsubs
mov
lea
xor
and
mov
pushf
pop
lods
mov
sti
adc
mov
pop
outsl
dec
loope
call
xchg
in
mov
ljmp
loope
lds
push
mov
popf
roll
test
ljmp
into
sub
pusha
call
stos
sub
dec
adc
add
les
aaa
sbb
sub
je
push
lds
aam
call
and
mov
in
mov
cwtl
es
adc
adc
mov
jne
cld
mov
cmp
hlt
dec
insb
xor
mov
add
xchg
adc
and
test
jb
icebp
addl
mov
jg
adc
push
mov
mov
sbb
popa
jnp
dec
xchg
or
sub
cmp
je
push
movsl
or
loop
ljmp
cmp
adc
dec
mov
mov
push
test
jmp
cmp
cmpsl
sbb
icebp
sahf
dec
rcll
fistpll
adc
scas
les
push
movsb
dec
jmp
cltd
fstpl
out
pushl
fsubl
push
clc
add
nop
push
lret
jecxz
mov
stc
mov
icebp
and
and
inc
fldt
or
dec
mov
and
and
xlat
inc
lods
mov
sub
pushf
jp
cli
scas
movsl
cmp
in
xchg
je
xor
mov
je
fcoms
aam
dec
mov
cmc
mov
push
fwait
jb
xor
dec
adc
cmpsl
std
pop
das
dec
lock
hlt
mov
mov
js
xchg
jge
sub
cltd
mov
retw
dec
sar
mov
clc
sub
scas
shlb
inc
mov
lret
lahf
push
outsl
adc
xor
inc
fwait
movsl
push
scas
sub
sti
sbb
jo
imul
mov
xchg
cmp
cmp
daa
mov
and
adc
call
jl
sub
adc
mov
mov
xchg
pop
mov
sar
pop
push
cmpl
push
xor
arpl
xlat
or
inc
mov
adc
sbb
sbb
out
divb
scas
push
jmp
ljmp
paddsw
out
in
fdivl
and
inc
jmp
xor
loopne
movsb
test
lret
hlt
loope
cld
data16
mov
jo
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
add
add
add
ss
mov
in
and
pop
mov
lcall
lcall
test
fldcw
pop
std
or
stc
push
or
aam
lret
xor
das
repz
push
cmp
fstps
xchg
mov
push
in
inc
sbb
xlat
mov
cmp
mov
dec
mov
dec
scas
daa
fcoms
push
xchg
leave
jb
push
movsb
add
out
arpl
js
icebp
ljmp
jb
or
mov
or
jl
test
inc
jp
dec
xchg
mov
in
jp
arpl
cmp
div
lods
push
ljmp
push
add
adc
fld
pushf
jns
mov
insl
sti
mov
pop
daa
dec
sub
cmp
xchg
test
sub
mov
dec
push
int3
stc
aas
xor
fadds
or
ficomps
inc
popa
or
xor
mov
mov
in
cmp
sbb
mov
pop
push
push
int
jle
int3
sbbb
sbb
xchg
aad
or
pop
add
stos
aaa
mov
ja
cmp
adc
loop
pop
inc
push
jno
loop
fwait
jl
push
sbb
andps
loop
pop
ds
add
pop
mov
nop
pop
rcr
xchg
cmp
out
add
outsl
sub
dec
jo
mov
cmp
inc
cmp
mov
xor
fidivs
ret
mov
pop
cmpsl
mov
cmp
sbb
or
cmp
cmp
push
lea
scas
mov
mov
pop
cmp
das
rorl
ret
jae
mov
mov
adc
pop
or
lods
mov
clc
xchg
movl
push
sahf
push
das
test
incl
arpl
cmp
dec
sti
mov
mov
add
data16
mov
or
sub
cmp
mov
in
push
jbe
aaa
push
xor
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
or
add
lret
add
inc
stos
inc
test
mov
sub
fldcw
cld
popa
mov
inc
jbe
icebp
sbb
xchg
push
xor
pop
stos
inc
mov
aam
lret
add
xor
sub
push
aas
xchg
xorl
arpl
pushf
xchg
lds
push
push
sbb
int
fwait
xchg
mov
dec
mov
dec
mov
lea
mov
loopne
lcall
mov
sbb
dec
sbb
mov
xchg
xor
inc
push
xor
std
lods
repz
les
or
mov
sub
dec
or
outsb
fcoms
fldenv
out
addr16
mov
add
pop
int3
mov
insb
imul
or
mov
adc
xor
stos
xor
outsl
and
inc
jmp
cmp
dec
movsl
mov
sub
cmp
mov
pop
in
inc
mov
movsb
popa
lods
lods
and
sub
rcr
xor
sbb
andl
lcall
jns
in
and
mov
test
and
lahf
int3
push
fisubrs
movsl
jb
sub
movsb
pop
xor
rcrb
rolb
xchg
sub
jnp
sbb
and
into
pop
nop
insl
xchg
xchg
cs
stc
adc
cmp
stos
mov
add
bound
mov
jno
or
and
pop
lret
test
inc
pop
pop
push
jno
push
sub
sbb
dec
nop
out
jo
idivb
jle
sbb
out
loope
mov
or
and
ja
hlt
mov
arpl
lcall
sbb
jns
test
adc
lahf
and
cmc
sub
mov
loopne
ljmp
int3
daa
jb
push
and
mov
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
movb
add
bnd
adc
movl
add
jb
lcall
jle
ss
outsl
xlat
ss
xchg
push
inc
or
pop
dec
outsl
clc
push
out
pusha
movsl
jne
xchg
sub
add
cld
pop
mov
hlt
lcall
mov
cmp
jo
dec
adc
xor
test
shll
test
flds
in
mov
mov
xchg
js
aaa
ds
pop
pop
fildl
inc
filds
dec
test
mov
into
orl
adc
adc
sti
xchg
push
sub
or
ds
popa
scas
dec
aas
in
fists
addr16
in
push
xchg
mov
ror
mov
mov
adc
rcrb
repz
pop
mov
add
enter
int3
movsb
mov
aam
jmp
insb
add
lcall
xchg
xor
je
mov
push
jns
adc
stos
cs
cmp
je
inc
push
jg
loope
jo
js
push
push
sub
dec
repz
fldcw
sbb
or
push
pop
iret
or
nop
dec
ja
xor
je
mov
sbb
dec
iret
push
ds
sbb
aas
call
add
cld
es
cmp
mov
pop
iret
out
leave
xor
flds
jg
push
push
dec
fdivs
sub
repz
into
rclb
jbe
pusha
xor
cmp
aad
aam
mov
mov
inc
clc
neg
pop
add
mov
aaa
gs
notl
andl
out
nopl
jp
dec
lcall
roll
rorl
stos
aas
cmpsl
or
xchg
sub
in
add
insb
sub
addr16
lods
mov
mov
nop
in
xor
fidivrs
fidivrs
outsb
aaa
mov
inc
outsb
f2xm1
cs
loopne
popa
fsubs
push
in
jns
jmp
fildl
push
adc
lock
sbb
mov
shll
adc
mov
pusha
lahf
test
rolb
xlat
cltd
mov
add
imulb
mov
movsb
mov
shlw
loop
xorb
int3
dec
stos
dec
and
call
jg
jmp
cmp
mov
jecxz
lds
movsl
mov
mov
inc
jl
rcll
sub
xchg
mov
sar
pop
outsl
sbb
sub
ret
or
pop
enter
cwtl
or
mov
push
das
in
jnp
aad
or
iret
lahf
mov
xchg
jle
or
lds
lock
push
popf
or
into
lcall
out
cmp
add
inc
pusha
xchg
jbe
push
pushf
sbb
and
test
pusha
sbb
jne
fadds
jae
std
cmc
je
in
mov
imul
test
ret
mov
movsl
jmp
in
in
dec
jns
test
cld
das
inc
jae
xor
pop
adc
test
ja
inc
jmp
adc
out
mov
jnp
sbbb
mov
ud0
out
dec
scas
subl
aam
popa
push
sub
pop
or
or
clc
cmpsb
push
clc
arpl
push
or
jl
call
dec
and
mov
arpl
inc
and
add
nop
aaa
push
iret
adc
int3
adc
fmulp
pop
and
idivb
cmpsb
sbb
test
inc
lret
push
faddl
mov
arpl
je
xchg
in
icebp
adc
cmovb
movsb
mov
icebp
push
sbb
repnz
mov
mov
pop
call
pop
adc
jne
sti
cmp
test
retw
les
test
mov
movsl
in
ret
xchg
jbe
cmp
push
jno
push
mov
pop
and
pop
add
fmul
test
xchg
fs
mov
and
ficoml
mov
test
cld
cmp
mov
shrl
dec
xlat
inc
icebp
jecxz
es
dec
pop
aam
push
xor
cmp
or
cmpsb
ss
ret
inc
repz
movsb
cmpb
shlb
addr16
jbe
dec
adc
repz
jb
mov
cmp
and
pop
enter
push
push
out
fwait
xor
mov
lods
addl
xor
xchg
jno
jecxz
cmp
aaa
xchg
inc
or
pop
cmp
inc
loopne
inc
add
pop
xor
fsubs
push
cmpb
jnp
jg
and
xchg
in
jne
ljmp
dec
not
jb
ret
mov
test
dec
fcmove
inc
push
subb
xchg
jo
hlt
sub
add
out
mull
fnstcw
and
push
cs
pop
pop
mov
xor
sub
in
outsb
inc
roll
int3
das
adcl
decb
push
iret
mov
push
xor
mov
pop
or
xchg
push
dec
int
or
out
xor
aam
pop
adc
bound
sarb
dec
xlat
fucom
cld
stc
fmull
daa
lret
int3
dec
push
fldcw
push
cmp
push
repnz
sbb
sub
fcmovbe
mov
mov
shlb
and
push
jp
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
pop
add
add
add
popf
orb
gs
out
es
mov
insb
scas
add
push
int
insb
sub
mov
aaa
mov
jle
xchg
mov
cmp
mov
mov
pusha
lods
jge
pop
mov
sub
in
ret
test
flds
add
xlat
mov
dec
dec
mov
sub
add
call
jge
cs
out
lods
mov
mov
lods
mov
and
aas
lret
das
adc
iret
cmpsb
add
mov
xor
insl
hlt
xchg
or
jnp
or
jge
mov
add
popf
movsl
sbb
jge,pn
inc
dec
fs
jmp
push
sahf
mov
into
push
pop
orl
leave
cmp
cmpsb
sub
push
sbb
push
adc
out
in
test
stos
test
mov
je
xchg
mov
cmpsl
push
sub
into
mov
adc
mov
das
mov
jmp
inc
into
loope
inc
mov
lret
loopne
stc
cld
testl
dec
movsl
cmp
cli
loope
in
enter
push
aam
jmp
stc
jne
adc
iret
add
cmpsl
mov
ficoms
popf
cmp
pop
xor
cmp
pop
mov
push
cwtl
add
in
sub
push
lds
cld
adc
dec
lock
iret
aas
test
push
pop
and
jo
loope
add
hlt
cwtl
repz
dec
repz
adc
mov
movsb
subl
flds
or
adc
xorb
fidivs
stc
jecxz
sub
mov
movsl
xchg
movsl
sarb
sti
test
rcll
cmp
jmp
dec
jns
stc
lcall
fsubr
pop
dec
cmc
push
loope
push
insb
movsl
jnp
scas
adc
xlat
pop
sbb
jp
mov
cmp
inc
and
push
iret
pop
sub
xor
inc
xchg
sbb
in
mov
inc
jnp
pop
data16
sub
sub
and
xchg
cmp
push
call
pop
ret
fisubs
das
inc
daa
cmp
inc
xchg
or
es
pop
test
push
jp
dec
ret
insb
sub
add
dec
orb
outsb
lock
mov
lods
jne
mov
aad
pop
leave
or
loop
pusha
inc
mov
sti
adc
dec
jno
mov
pop
xchg
aaa
and
repnz
test
add
push
jno
cld
inc
pop
push
xor
push
sub
push
fwait
adc
test
inc
cld
xor
out
cmp
jns
mov
icebp
mov
sub
pop
stos
sbb
in
loop
mov
scas
ror
xchg
push
lahf
inc
inc
daa
call
jp
jo
scas
ja
mov
out
xchg
test
or
xchg
or
test
mov
push
sub
imul
fistps
leave
xor
ret
or
inc
jg
add
sub
lock
out
insl
popa
fwait
je
inc
mov
xchg
cld
xor
out
enter
test
dec
jb
fwait
sahf
jge
inc
rolb
mov
xchg
clc
popa
aam
test
cmp
jne
pop
lods
push
imul
push
cmp
lods
mov
jno
ss
ljmp
xchg
mov
hlt
dec
xchg
dec
out
xor
jb
dec
jns
lds
loope
sbb
cmovne
inc
shrl
mov
xor
jmp
lea
repz
or
out
in
mov
movb
decl
jecxz
shlb
cmp
fwait
data16
dec
cmp
repnz
adc
mov
pop
out
in
push
mov
out
mov
pushf
push
mov
mov
xor
sahf
jmp
pop
mov
mov
mov
push
out
or
xchg
xor
popa
add
dec
lret
jp
sub
adc
imul
int3
adc
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
cwtl
add
add
add
add
leave
xor
inc
or
scas
nop
mov
sbb
loopne
xor
cmp
popf
add
inc
mov
aas
psraw
mov
sarb
push
mov
jnp
mov
mov
in
cmp
mov
or
pop
leave
mov
daa
lret
cmpl
xor
push
in
aaa
mov
xor
stc
or
pop
enter
clc
call
movsb
and
cmp
inc
hlt
dec
push
ret
pop
imul
pop
aam
scas
scas
jns
les
mov
sub
lods
dec
fidivl
dec
aad
imul
jp
fadd
push
imul
gs
jae
add
or
cmc
and
mov
or
ret
mov
mov
scas
xor
push
fildl
dec
loopne
leave
push
cmp
orl
int
jle
test
xchg
dec
test
fildl
mov
fsubp
mov
jge
gs
xchg
push
ss
mov
and
xorb
outsb
push
and
xor
cli
pop
and
inc
cmp
sbb
stc
xchg
pop
popf
int
mov
lods
pop
rclb
popa
or
sub
int
xchg
sub
push
push
jno
fisubrl
mov
cmp
pushl
pop
lods
or
cmp
fcmovbe
xchg
dec
dec
negl
sahf
stos
orb
in
adc
fcoms
mov
int
popa
mov
and
outsl
xor
lcall
vpslld
xor
pop
or
sub
pop
lahf
jb
push
push
jno
inc
out
movsl
mov
popf
push
stos
xor
mov
and
mov
dec
stc
cmp
addl
xchg
pop
push
iret
sub
call
bnd
dec
mov
add
or
adc
pop
js
jle
fstpt
xchg
icebp
inc
test
adc
ss
mov
ficoms
les
loop
stc
scas
jb
lds
test
inc
pop
orb
mov
enter
xchg
inc
push
je
and
push
and
xorb
pushl
pop
mov
jbe
sahf
repnz
inc
iret
dec
mov
add
add
adc
aaa
es
ss
inc
mov
jg,pt
icebp
or
mov
xor
add
add
mov
add
dec
cwtl
mov
or
pmaxsw
ss
xchg
dec
lcall
or
inc
in
loopne
ds
cli
pop
insb
popf
test
pop
mov
sub
sbb
cmp
mov
mov
xchg
std
lods
je
test
lods
hlt
mov
xchg
sbb
addr16
xchg
cld
out
mov
test
cmp
sbb
sbb
inc
mov
xor
xor
hlt
xor
sub
and
test
and
out
pop
jmp
mov
xlat
and
and
dec
inc
and
mov
dec
mov
push
stos
outsl
jp
xchg
mov
aad
mov
xor
inc
add
adc
push
push
adc
call
jmp
sub
arpl
clc
ret
lds
adc
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
mov
add
xchg
push
add
jb
lods
pop
push
inc
fisttpl
stos
push
jo
mov
cmp
jb
test
out
pop
sub
adc
dec
test
mov
pop
mov
scas
movd
jle
loope
neg
ljmp
shld
sbb
shlb
call
punpckldq
mov
push
push
pop
mov
mov
ret
lcall
mov
cmp
das
inc
cmp
fisubrl
add
xchg
cmp
mov
mov
adc
jns
movb
mov
test
fildl
adc
or
cmpsb
rclb
jb
pop
mov
mov
push
lea
rcll
aam
inc
inc
scas
pushf
pop
push
fstps
lock
stos
xchg
mov
xor
pop
push
and
pop
cmc
jnp
sub
movsl
pop
jbe
xchg
adc
mov
pop
clc
cmp
subl
mov
cwtl
or
jo
lret
pop
fidivrs
test
cmp
lahf
or
adc
mov
jne
bound
jmp
leave
mov
inc
leave
std
cmp
scas
xchg
call
mov
or
insb
shlb
andl
mov
inc
addr16
mov
pop
ret
xchg
cmp
stos
mov
add
into
les
jo
jns
stos
scas
pop
adc
sbb
notl
inc
das
mov
sub
ficoml
aaa
gs
inc
test
and
add
int3
arpl
cmp
sub
adc
cmp
pusha
mov
dec
fcmovnu
push
and
sbb
push
sub
fsubs
mov
dec
inc
jb
dec
roll
mov
inc
sbb
cs
adc
call
mov
cs
dec
mov
cmc
ds
movsl
mov
scas
sbb
mov
aam
push
inc
mov
jmp
clc
mov
mov
lret
fidivrl
jo
inc
pop
sarl
repz
dec
sahf
lcall
push
cld
shrb
fldcw
push
int
mov
jno
call
fwait
jnp
sbb
pop
jbe
push
and
jecxz
jl
daa
imul
fs
adc
jecxz
jb
xchg
out
stos
dec
shrb
mov
in
add
test
out
cmp
cmp
ljmp
mov
stc
sbbl
jecxz
fsubrl
push
in
add
add
and
fwait
imull
cli
out
jne
xchg
adc
mov
divb
xor
add
mov
lock
test
xchg
push
or
mov
fisttps
mov
xchg
test
jecxz
xor
js
or
cli
repz
add
jno
scas
xlat
sub
or
repz
jmp
jno
xor
or
push
jno
fnstcw
fildll
and
flds
mov
xchg
push
pushf
jle
inc
adc
or
enter
xchg
or
pop
push
and
or
cmp
jg
clc
data16
aas
and
xchg
loopne
push
mov
push
bound
lcall
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
add
push
or
add
je
outsb
push
dec
xchg
pusha
sbb
into
pop
std
int3
sub
xor
fnsave
testb
push
xor
rcll
mov
addb
xchg
xchg
jbe
mov
fisttpl
inc
mov
cmpsb
sub
ss
dec
xor
xor
lret
push
test
dec
cmp
xor
aam
lods
dec
ret
push
out
repz
daa
hlt
dec
ret
xor
sar
aaa
and
dec
test
notb
push
lock
shl
adc
dec
leave
icebp
ljmp
xchg
jge
out
jns
fdivs
inc
inc
push
les
imul
hlt
mov
cmpl
outsl
dec
movsb
pop
int
pop
int3
aas
icebp
fucom
psrld
out
cmp
cmp
sub
jo
icebp
out
fbld
or
add
xchg
cmp
dec
insl
adc
dec
push
xchg
mov
cmc
pushfw
fcmovnu
cmpsb
cmpsb
jne
push
dec
cmpsb
jecxz
mov
sub
or
cmp
fidivrl
mov
mov
icebp
mov
and
shrl
jo
inc
cmp
jg
je
inc
fwait
and
testl
mov
popf
pop
jnp
test
in
das
out
jg
inc
and
mov
daa
ljmp
mov
xchg
push
push
mov
sahf
and
clc
out
push
mov
push
inc
faddl
xchg
jno
jmp
mov
fildl
sub
xchg
scas
jg
xlat
cli
fs
mov
pop
push
dec
push
mov
xor
sbb
cmpsl
rcrb
xchg
push
inc
pop
rcrb
movl
daa
dec
jae
rorl
xor
jg
sti
cmp
cld
roll
adcb
stos
mov
repz
je
dec
mov
inc
outsb
xchg
pop
fisubrl
push
aaa
inc
dec
sub
push
iret
add
mov
push
jb
push
ss
jb
push
add
cmp
sbb
test
sarl
leave
jmp
push
out
xor
repz
mov
mov
imulb
pop
leave
fdivrl
mov
test
scas
lahf
fists
jbe
dec
lds
jns
and
jl
stc
in
or
xchg
pop
roll
jmp
andb
jmp
cmp
cmp
sbb
loop
pop
jnp
or
jnp
mov
outsl
lcall
sub
imul
pop
popf
outsl
pop
pop
or
mov
shlb
pop
dec
mov
call
subl
lcall
mov
gs
insb
cmp
dec
in
cltd
ss
int3
arpl
test
or
pusha
jmp
lods
leave
loop
ja
shrb
fwait
xchg
adc
cld
and
jnp
push
enter
xor
into
mov
push
in
aaa
sahf
mov
pop
push
in
add
test
lcall
lods
dec
mov
inc
pop
scas
jne
fcom
iret
pushw
pop
xchg
inc
cmp
cmp
fwait
test
rcrb
mov
cli
stc
test
jg
mov
test
pop
arpl
cmp
add
cli
js
mov
fildll
adc
mov
decb
fcmovb
lods
fucom
add
mov
lods
aas
addr16
jne
add
pop
xchg
nop
xchg
xorb
in
sti
xlat
xchg
push
es
sbb
add
movsl
jmp
jge
testb
repz
es
ja
mov
cltd
data16
inc
mov
inc
imul
inc
xlat
je
fcmove
xor
push
out
int
push
loope
sbb
or
insl
adc
mov
mov
lretw
jno
hlt
lahf
cmp
push
pop
sbb
sub
cld
cmp
mov
dec
loope
sar
add
and
jo
dec
jecxz
mov
int
lcall
push
pop
pop
jp
pop
sbb
in
jne,pt
call
fiadds
cmp
pop
xlat
mov
das
jecxz
xor
dec
adc
cli
fsubp
ja
out
fildl
cmp
inc
and
enter
sbb
outsl
sbb
sub
mov
cmpsb
imul
pop
mov
jbe
bnd
loope
dec
add
sub
dec
je
push
test
mov
mov
inc
adc
idivb
pop
loop
shrl
inc
ret
aaa
adc
addr16
mov
std
int
enter
out
fdivrl
inc
dec
push
imul
pusha
fucomip
jmp
pop
sub
dec
movsb
daa
dec
mov
lods
and
aam
jl
inc
jno
lock
jne
vmread
ljmp
pop
in
ret
shl
push
and
add
mov
das
sbb
inc
leave
stos
aas
xchg
push
pushl
les
addl
enter
mov
xchg
inc
aam
stc
cmp
daa
pop
int3
ret
int
pop
cmpsl
pop
or
push
inc
mov
dec
mov
cld
arpl
mov
dec
lea
sbb
jecxz
mov
das
jge
mov
fimuls
add
int3
mov
popf
pop
hlt
ret
sbb
inc
inc
lods
popf
test
sbb
fcoms
mov
iret
adc
pusha
xor
mov
in
cmp
pop
sti
pop
add
xchg
cmp
xchg
push
stc
cmpsl
dec
jl
push
mov
enter
ljmp
clc
imul
mov
inc
jns
cwtl
lret
iret
in
xlat
sarl
decb
sub
lret
cwtl
in
fwait
jl
loopne
push
popa
sbb
jle
adc
inc
inc
mov
inc
in
push
jb
fsincos
int3
movsl
fucomp
jne
cmova
out
adc
imul
testb
fnstcw
xchg
loop
fstps
sti
hlt
int
ds
test
cli
mov
xor
mov
push
jnp
data16
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
roll
add
xor
add
pop
sub
xchg
adcb
mov
outsb
ljmp
pop
arpl
pop
add
fisttps
ja
dec
mov
mov
xor
mov
sti
test
shr
mov
dec
ja
cmp
stos
daa
inc
add
cmp
test
lret
add
mov
xchg
fadds
scas
add
shrl
dec
lods
or
xchg
add
mov
les
out
test
movsl
mov
xchg
mov
test
sbb
jecxz
imulb
push
cmpsb
insb
inc
and
imul
outsb
push
pop
loop
pushf
es
jg
cmp
push
mov
push
jle
pushf
push
pop
roll
hlt
xor
or
insb
roll
out
push
cmp
scas
loop
imul
fstp
mov
test
dec
jl
pop
in
push
or
lods
daa
fcmovnb
mov
pop
mov
lds
mov
pusha
outsb
ret
rorb
add
out
call
push
addr16
shlb
fs
pusha
push
xchg
mov
fsubrs
rcr
lahf
or
scas
mov
adc
adc
pusha
cmp
cltd
dec
mov
push
les
bound
xchg
or
mov
lcall
sbb
pushf
push
in
incl
gs
addr16
push
push
mov
in
or
push
leave
cwtl
xchg
pop
ljmp
mov
rcrl
pop
lds
xor
push
mov
in
push
fcoml
cmp
leave
sbb
in
add
arpl
daa
repnz
add
faddl
dec
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
pop
add
testb
add
inc
pop
fnstenv
sub
cmp
in
push
out
mov
mov
mov
push
stos
push
or
xor
lock
sbb
loope
xor
ds
mov
xor
out
adc
or
stos
dec
dec
int3
xor
lret
in
call
int3
outsl
or
insb
fnsave
push
push
das
cli
mov
add
test
es
call
dec
int
pushf
repz
sbb
xor
loope
push
xlat
cmc
popl
stos
fs
paddw
and
dec
mov
mov
dec
lcall
leave
pop
scas
inc
loope
lods
mov
outsb
addr16
jge
lds
testl
in
stos
fadds
mov
daa
data16
xorl
push
ds
push
into
xchg
std
dec
loop
and
cmpl
movsb
add
mov
pop
xchg
outsl
movsb
jnp
les
cmc
mov
pop
xor
negb
xlat
les
movsb
rclb
adc
pop
testl
insl
sbb
and
inc
cld
imull
test
pop
xor
add
arpl
dec
mov
pop
pop
and
jp
push
jp
pop
and
popf
fdivs
movsb
or
gs
movsb
cmp
pinsrw
adc
in
outsb
inc
cmp
pop
in
adc
add
ret
mov
sbb
ljmp
or
shrl
lret
test
into
cwtl
lret
xchg
shrl
mov
mov
in
out
into
pusha
mov
mov
out
cmc
leave
in
pop
pop
mov
or
divl
popa
jns
sub
lret
pop
scas
or
mov
or
push
and
pop
jl
sub
in
and
add
mov
push
cwtl
outsb
outsb
test
pop
ljmp
imul
jge
sarb
inc
mov
inc
out
push
and
ljmp
jp
jno
or
addr16
test
or
mov
adc
mov
sub
and
shlb
lcall
mov
pop
sbb
pop
adc
adc
jge
outsl
inc
push
js
cmc
fadd
add
push
mov
push
push
out
pop
andl
mov
mov
mov
ja
cmp
int
adc
test
imulb
scas
mov
cli
push
cmp
in
inc
outsl
imul
jl
notl
lods
sti
dec
sbb
push
sub
das
popf
jg
inc
int
int3
and
mov
ret
in
fmull
ret
fbld
movsl
sbb
dec
add
das
enter
xchg
jecxz
or
inc
aad
loope
dec
outsb
pop
pop
sbb
ds
dec
cmp
push
ds
jo
pop
lret
les
sbbl
loope
dec
repz
pop
inc
push
push
dec
iret
dec
dec
sbb
lret
push
lods
push
or
cwtl
inc
mov
repz
repz
or
bound
xchg
xor
subb
mov
popa
lahf
or
in
imul
adc
mov
xchg
test
xchg
push
push
dec
mov
clc
movsb
shl
rcll
jmp
lret
subl
aas
mov
fisttpl
int3
cltd
ficoms
fisubrs
push
jl
pop
jmp
ja
push
push
pop
inc
sbb
loopne
mov
or
jecxz
lods
and
xchg
push
xor
pop
dec
push
iret
fnsave
addb
add
jnp
insb
repnz
xchg
xchg
push
jecxz
std
aaa
pop
mov
fldenv
out
adc
add
xorb
dec
jmp
jo
jne
or
loop
mov
fisubl
dec
add
xchg
sbb
loope
mov
clc
cmp
xlat
scas
pop
cmpsb
lahf
insb
or
push
pop
or
inc
xchg
rcll
nop
or
call
mov
lods
idivb
lret
push
movsl
inc
ljmp
shl
mov
data16
sbb
mov
xor
test
subb
sbb
shll
inc
inc
out
aas
lahf
jp
jb
mov
outsb
jecxz
jbe
je
adc
fdivp
jmp
xor
inc
std
dec
pop
add
outsb
filds
adc
fdiv
rorb
mov
aam
hlt
bound
or
leave
jl
push
dec
cmp
sbb
sub
movsl
mov
xor
xchg
addl
push
loop
lods
mov
mov
fnsave
addb
lock
fdivrl
mov
fldt
mov
pop
repz
lahf
repnz
xor
sbb
sub
push
mov
in
xchg
call
push
add
pop
or
xchg
pop
inc
pop
data16
inc
fstl
lret
aaa
call
testl
outsl
pop
adc
cltd
inc
mov
adc
aas
xorb
mov
sbb
sbb
push
mov
xchg
push
bound
jno
int
loope
into
xchg
out
fcoml
pop
add
sbb
repz
je
or
add
push
lret
aas
lods
and
movsl
enter
xchg
into
jbe
call
sub
addl
test
int
lods
in
cmc
or
vxorps
popa
loopne
dec
xor
ret
cld
dec
jg
test
mov
rolb
add
pushf
jns
xor
mov
out
lahf
pusha
or
add
std
xchg
mov
int3
pop
notb
push
je
inc
pop
mov
adc
sub
inc
cmp
outsl
sub
insb
push
popa
xchg
scas
xlat
out
out
out
push
pop
and
mov
cmp
pusha
gs
and
and
push
jb
popa
lahf
xor
dec
cli
jge
or
and
test
and
lods
push
sarl
aam
in
push
cmp
xor
or
or
pop
jae
enter
xor
cmc
sbb
mov
sar
sbb
int
sub
or
cmpsb
arpl
pop
push
mov
inc
fcmovu
das
je
jns
into
repz
fisttpll
add
pop
out
lcall
test
push
test
cmpb
xchg
in
movsb
xorb
xlat
mov
cmp
mov
out
pop
roll
scas
aad
pop
mov
out
sahf
or
jecxz
fimuls
aas
xor
and
scas
notl
mov
dec
sbb
out
outsl
rcr
leave
xchg
dec
shrl
fsts
outsl
push
mov
push
inc
loopne
jo
cwtl
push
mov
push
outsl
rcl
adc
adc
div
dec
or
pop
and
mov
lea
mov
push
mov
dec
xlat
sub
lahf
inc
mov
pop
dec
mov
xchg
push
sub
jecxz
es
xor
sbb
push
shll
push
test
cli
pop
rcl
push
subb
mov
dec
cmpb
clc
pop
mov
clc
fwait
cmp
out
sbb
xor
xchg
jmp
jo
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
imul
add
sbb
nop
hlt
add
imulb
fstps
call
xchg
add
cmpsl
or
dec
xchg
push
pop
mov
roll
jo
nop
xchg
stos
mov
cmp
mov
jge
sub
xlat
mov
cltd
shlb
in
mov
stos
or
cmc
push
xchg
pop
jnp
xor
ret
inc
into
aam
and
lods
clc
pop
fistl
cld
or
add
sub
lret
jne
sub
mov
mov
insl
add
or
push
dec
fimull
inc
popa
dec
mov
xor
imul
repnz
sub
jno
mov
or
clc
inc
mov
mov
negb
shl
sarb
insb
inc
fs
out
ss
in
sub
or
scas
aaa
push
add
push
mov
mov
mov
cs
mov
test
ja
jbe
push
mov
hlt
sub
aam
aaa
dec
test
adc
popf
fs
out
jmp
icebp
int3
push
cmp
stos
aaa
jne
lret
jb
cmc
test
push
outsb
aas
fs
int3
stos
jnp
xchg
push
loopne
movsb
sbb
sbbl
lods
and
or
pop
sahf
sub
cld
fdivrs
insl
cmp
dec
push
xchg
pop
es
inc
loopne
sti
sub
push
mov
clc
add
stc
ficoms
jmp
push
xchg
loope
cmpsl
or
mov
das
or
pusha
add
cmpsl
mov
jno
adc
scas
loopne
mov
imul
in
call
repnz
sub
pusha
mov
xlat
jge
xchg
jp
pop
adc
pusha
mov
push
mov
or
mov
sbb
iret
sub
mov
stc
fists
inc
push
mov
pop
cmp
insl
test
adc
das
sub
outsb
ret
cli
pop
sarb
pop
sahf
cmp
mov
jecxz,pn
xlat
pop
pop
test
push
ljmp
sbb
xchg
sbb
and
xor
cmpl
add
mov
lods
lret
nop
sbb
sbb
xchg
ret
inc
mov
dec
enter
dec
xchg
xchg
mov
xchg
inc
pop
cmp
push
aaa
dec
imulb
mov
enter
xor
pop
adcl
add
outsl
lds
mov
std
mov
lds
add
adc
jg
jo
add
pushf
mov
sub
pop
mov
or
add
push
sbb
dec
mov
movsl
mov
xchg
pusha
cmc
mov
ds
sahf
into
sub
xor
pop
fisubs
ljmp
xor
mov
inc
jmp
inc
jbe
push
cmp
dec
push
loopne
dec
lods
dec
pop
test
rcr
adc
cli
mov
rcrl
pop
lcall
xchg
test
cld
adc
mov
sbb
lahf
outsb
xcrypt-ctr
cmpsl
pop
push
add
ljmp
pop
pop
ja
gs
aam
sub
outsb
daa
int3
pusha
push
add
cmp
mov
push
out
fwait
dec
test
cs
adc
jg
sub
ret
call
loope
fstpt
or
mov
out
xor
stos
and
rol
sbb
psubsw
adc
dec
jb
inc
out
inc
add
sub
xor
or
pop
enter
jl
clc
mov
into
mov
je
rcr
xlat
loop
pop
fisttpll
xor
fsubrs
xlat
add
jl
call
insb
xchg
xor
pop
cmp
sbb
add
stos
push
adcb
push
std
jp
aas
lock
loope
xlat
mov
xchg
ret
pop
sub
lds
cmp
mov
negl
lret
sub
push
or
inc
cld
mov
inc
xchg
jl
je
sahf
add
xchg
movsl
jge
push
test
rcrb
mov
popl
ljmp
jne
add
sbb
movb
mov
inc
sub
jg
fucomip
pop
dec
dec
outsl
lahf
mov
fwait
notb
pop
lods
repnz
repnz
movsl
pushf
push
inc
or
mov
jg
inc
dec
mov
inc
lods
repz
in
add
fcmovbe
in
add
fdivrs
fdivs
add
pop
inc
cmp
in
mov
mov
mov
gs
sbb
sahf
push
cmp
add
sbb
sahf
jp
or
repz
mov
mov
adc
imul
sbb
in
pop
pop
es
movsl
nopl
lahf
and
push
dec
lods
mov
ret
cmpsb
add
and
flds
and
xchg
adc
jle
rcll
add
sub
fs
mov
lahf
out
outsl
xchg
and
or
fcompl
sti
outsl
xchg
mov
jle
adc
cmpsl
mov
jno
aas
inc
ret
and
adc
in
dec
into
in
fs
out
cmpsl
insb
rcrl
icebp
mov
jge
shll
cli
or
adc
xchg
sbb
icebp
adc
in
jmp
fcmovnbe
mov
or
jae
loopne
or
mov
ret
loopne
sahf
mov
aam
mov
fcoml
jnp
subl
ja
inc
inc
inc
push
jne
jge
pop
and
gs
hlt
nop
shrb
pushl
in
jae
lret
sub
test
or
outsl
popa
pop
mov
pop
nop
mov
inc
cli
jge
icebp
adc
xchg
pop
adc
lret
out
clc
daa
and
xor
adc
adc
inc
push
mov
loopne
into
pop
lods
push
outsb
insb
lea
pop
popa
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
add
add
add
add
mov
fcmovbe
or
add
mov
jo
mov
insl
jp
mov
sub
jae
insl
lods
in
out
arpl
fwait
jbe
adc
fsubrl
imul
cmp
out
sbb
mov
dec
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jp
add
mov
add
mov
mov
in
lret
imul
mov
lds
hlt
fs
addr16
xchg
mov
xchg
rorb
mov
scas
movsl
aad
loopne
push
xchg
insl
sub
outsb
scas
mov
mov
mov
in
mov
inc
leave
push
xor
lret
hlt
out
inc
cmpsl
cwtl
ret
aaa
or
or
fsubl
enter
out
aam
aaa
cltd
add
xchg
mov
and
cmpsl
jo
mov
arpl
cwtl
mov
jne
mov
lods
pop
jmp
push
lcall
xchg
lods
in
mov
cmpsl
popf
add
sub
mov
mov
sti
arpl
ja
jmp
cmpsb
pop
pushf
mov
push
push
and
mov
mov
cmp
dec
mov
mov
or
xchg
mov
mov
lock
inc
das
shrl
test
and
cmp
out
gs
addr16
into
push
dec
dec
mov
scas
jne
inc
js
into
into
inc
mov
das
mov
sarl
mov
mov
cmpsl
fiadds
cmpsl
sbb
sar
loope
jle
cmp
cwtl
das
pop
mov
lahf
je
pop
decl
idiv
mov
add
jl
cmpsb
add
mov
mov
pop
in
cmp
ja
jl
mov
jb
sbb
or
mov
aad
shlb
repz
mov
pop
push
rcll
cmpsl
adc
add
push
pop
jmp
cmpsl
stos
sub
jo
cmp
in
sbb
int
cmpsb
xor
repnz
cltd
gs
subb
in
leave
cmp
addb
sbb
cmpsl
movsl
flds
scas
mov
jo
mov
stc
sub
je
push
jns
clc
xlat
sbb
repz
xchg
stc
cmc
aaa
cltd
loop
or
add
pop
push
push
adcb
sbb
xchg
je
shll
stos
push
jp
push
pop
sbb
push
pop
inc
jge
xchg
cld
inc
adc
ret
mov
push
sti
outsl
mov
xor
std
stc
or
cmpsl
mov
ja
test
sbb
cld
adc
and
out
mov
pop
cli
mov
stos
fs
inc
lds
shlb
mulb
mul
mov
arpl
xor
lea
test
cld
mov
sbb
das
int3
sbb
mov
pop
js
in
lea
sbb
lods
test
scas
cmpsl
lret
xchg
sti
lret
and
jge
fisubrs
cmp
cmp
push
imul
pushl
push
push
inc
mov
xor
ss
clc
xor
jl
das
add
stos
jne
jno
cmp
sub
mov
dec
ret
in
stc
data16
or
test
mov
jno
icebp
dec
and
push
call
jbe
jne
dec
jg
pushf
and
sub
adc
add
movsb
pop
or
lcall
sub
es
sbb
js
mov
stos
add
inc
sar
mov
push
je
imul
sbb
push
das
fnsave
cmpsl
jmp
jg
pop
lahf
idivb
arpl
or
es
ja
add
dec
push
mov
inc
mov
jl
lods
xor
and
dec
mov
lods
mov
hlt
pop
out
icebp
addr16
lahf
mov
les
lock
sti
cltd
pop
cmp
jmp
jae
mov
out
xchg
dec
es
dec
add
repz
jl
xor
cmpsl
push
stos
aam
xorb
cmp
aaa
popf
dec
mov
js
sti
aad
dec
movsb
lds
int3
mov
rorb
push
les
push
push
dec
or
shrl
mov
push
add
jno
bound
shll
mov
lret
mov
adc
inc
and
mov
aad
jno
shlb
cmp
dec
sbb
nop
ja
imul
push
inc
sub
lods
mov
mov
fbstp
mov
jne
dec
jb
xor
jne
dec
jb
push
add
pop
pop
add
int
iret
jmp
popl
sub
sub
mov
imul
jg
xchg
push
pop
adc
ret
xchg
xor
xchg
mov
shr
and
sub
dec
popf
repnz
mov
add
push
mov
adc
xor
push
and
imul
mov
fcmovnbe
add
push
je
arpl
push
pop
call
ss
fcompl
add
inc
dec
cmp
outsl
mov
sbb
xor
mov
cwtl
stos
mov
pop
xchg
mov
jl
sbb
inc
sahf
and
mov
imulb
inc
shlb
xchg
add
jnp
mov
mov
aad
mov
mov
and
imul
scas
adc
gs
xchg
xor
fadds
or
lds
xor
inc
and
jne
mov
cmpsb
xor
pushf
pop
cmpsl
bound
pop
mov
pop
cli
xor
movl
cmc
fimull
push
lret
jl
out
mov
faddl
jbe
xlat
cmc
mov
and
scas
pop
jecxz
add
inc
xchg
xor
dec
jae
test
xor
test
cwtl
insb
xorl
mov
nop
jmp
cmpl
and
xor
bound
pop
repz
test
xor
movsb
or
or
adc
lahf
mov
fstpt
pop
jmp
adc
jno
inc
outsl
mov
pop
ret
lret
push
jnp
insl
push
inc
adc
dec
sub
pop
jnp
imul
adc
or
adc
fmull
jecxz
mov
mull
dec
pop
lret
or
sub
imul
dec
das
add
sbb
add
pusha
dec
jl
stc
lcall
mov
adc
lgs
rcr
lahf
fdivl
inc
push
ret
sti
mov
aad
lcall
jecxz
mov
das
and
xchg
icebp
sbb
jne
ja
testl
adc
xchg
mov
add
or
stos
sbb
add
jne
push
jecxz
lock
insl
sub
adc
int3
or
dec
mov
cmp
add
adc
repz
dec
test
out
pop
jns
das
enter
jmp
je
mov
push
repnz
test
add
cmpsb
lds
pop
jecxz
les
dec
add
mov
push
and
rorl
pop
lock
filds
xchg
loop
cmp
adcl
data16
push
xor
mov
mov
jae
mov
jp
or
sbb
hlt
xchg
add
lods
enter
ret
pusha
aaa
push
dec
adc
das
push
add
sbb
data16
sub
cmp
cwtl
leave
out
into
jne
xor
xor
fdivs
pop
movsl
xchg
int
or
arpl
jb,pt
pop
or
hlt
iret
adc
xorl
xchg
cld
and
bound
in
or
fldl
jb
inc
rolb
or
je
inc
adc
lock
lcall
fiadds
mov
or
add
inc
jge
xchg
and
or
mov
scas
nop
mov
ja
insb
out
dec
push
ret
fimuls
and
lahf
push
pop
push
cld
sti
lea
or
test
lret
int
cmpb
lahf
not
jb,pn
dec
jae
lds
cmpsl
aaa
pusha
repz
cmp
jmp
push
cmp
mov
into
adc
mov
outsb
add
gs
adc
shll
xadd
or
push
adc
dec
test
test
ffreep
pop
or
mov
cmp
dec
adc
das
inc
addr16
xor
dec
pop
push
repz
xchg
stc
call
sbb
lea
iret
movsb
jle
push
add
fnstsw
sub
mov
adc
push
out
or
fdivrs
jnp
imulb
in
push
icebp
jae
cmp
push
hlt
call
sub
iret
push
fabs
cmp
mov
mov
fiaddl
fsub
xor
test
xor
loop
xor
jge
mov
pop
dec
in
shrb
fbstp
xchg
rolb
aas
xor
xchg
stos
ss
cs
repnz
icebp
adc
cmpsl
push
mov
lahf
and
inc
or
mov
out
or
or
inc
or
or
shll
aas
add
ja
xchg
das
xor
jge
and
outsl
mov
or
insl
or
xchg
ficoms
shl
cld
push
jo
cld
push
xchg
jcxz
testl
out
push
ret
sbb
popa
mov
dec
xorl
ret
add
and
sbb
fs
cmc
data16
mov
imul
js
cmp
mov
mov
and
push
les
scas
das
dec
jae
xchg
xor
js
adc
rorb
add
lods
sub
push
cltd
test
jg
ret
repz
dec
cwtl
mov
push
mov
jle
dec
enter
mov
cmp
mov
xchg
sbb
mov
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
inc
add
add
xorb
mov
in
push
lock
andl
popa
testb
pop
push
inc
xorb
xor
lret
fldt
adc
jp
out
enter
cwtl
bound
scas
add
jmp
mov
ljmp
push
dec
test
jo
mov
jmp
dec
ret
xchg
iret
xlat
es
popa
scas
mov
jg
mov
ljmp
push
xor
xadd
pop
and
dec
jp
sbb
je
data16
dec
xchg
mov
stos
xchg
mov
add
jne
push
les
push
jp
cmp
je
data16
inc
add
mov
jne
push
mov
fmuls
xchg
lds
outsl
push
stos
xchg
add
mov
ljmp
mov
and
sub
mov
sub
mov
mov
xchg
movsl
negb
dec
mov
pop
test
mov
ds
out
cmpsb
jle
push
cs
cltd
int
dec
sub
ficompl
and
push
cmp
and
sbb
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
push
add
mov
in
dec
mov
aaa
and
ss
and
jge
repz
push
xor
icebp
ljmp
push
mov
jb
shll
sbb
and
push
dec
push
sbb
aad
mov
in
scas
sub
xchg
outsl
sbb
sub
add
inc
sub
mov
testl
daa
sub
xchg
xor
cmp
and
stos
vmaxpd
push
cltd
mov
cwtl
sbb
pop
adc
ja
cld
test
push
in
repz
in
jl
ljmp
shlb
notl
inc
repz
xor
hlt
cmpl
cmp
stc
les
pop
mov
push
sbb
push
jge
fdiv
mov
bound
jb
outsl
cli
arpl
pop
mov
sub
neg
jg
mov
les
cmpsb
jmp
pop
cmpsb
inc
push
sub
sbb
inc
add
cwtl
sbb
ljmp
gs
ja
xor
jmp
jg
mov
imul
and
pop
mov
sub
sbb
add
dec
cmp
sub
sbb
or
outsb
mov
cld
xchg
ret
xlat
add
mov
subb
arpl
imul
mov
cli
iret
mov
fsub
mov
push
shl
test
mov
sub
cli
dec
and
adc
scas
pop
lret
push
xor
fnstcw
push
sub
pusha
mov
add
sbb
gs
mov
mov
movsb
dec
xor
rorb
adc
xor
scas
lcall
cmp
mov
xchg
adc
mov
inc
stc
js
jo
movsl
xor
pop
xchg
sbb
xor
mov
test
lods
mov
inc
sbb
and
jnp
jl
inc
cmp
xchg
sub
jnp
jb
sbb
repnz
mov
rcll
cmc
popf
xchg
mov
jmp
xchg
xor
sbb
push
repnz
push
xchg
and
je
stc
xchg
xlat
mov
or
dec
fdivr
inc
ret
hlt
pop
lret
and
lods
push
lock
xor
mov
lods
inc
shll
jno
dec
bound
stc
scas
cmpsb
add
add
mov
aaa
fiadds
and
mov
pop
pop
scas
subb
mov
call
jno
addb
jae
add
out
fimull
sarl
es
out
bound
jecxz
sub
stc
subb
addl
wbinvd
or
shll
ja
mov
xchg
sbb
int3
outsl
and
inc
xchg
scas
out
mov
addr16
mov
xchg
xor
mov
adc
or
xchg
xor
mov
inc
ret
fildll
and
sub
std
add
push
call
xor
add
jnp
jns
sti
lock
xchg
fisubrl
or
pop
movsl
icebp
hlt
inc
iret
out
rorl
popa
je
dec
loop
in
cmc
mov
jae
popa
mov
inc
sbb
mov
inc
call
daa
loop
les
dec
mov
test
sti
add
mov
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
add
add
mov
cltd
push
aad
repz
lock
push
dec
pushf
dec
mov
lahf
pop
sbb
mov
push
fs
outsl
xchg
mov
add
cmp
ret
push
push
sub
sub
sbb
loope
sti
or
lods
or
mov
in
mov
push
lret
cmp
sbb
idivl
pop
lret
and
or
out
das
cld
push
test
jnp
js
mov
sub
add
mov
popa
and
dec
popa
pop
mov
mov
idivl
pop
ljmp
jl
sub
sbb
mov
adc
je
fcoml
add
jae
xchg
pop
mov
lock
mov
scas
fs
icebp
jnp
and
addr16
jl
add
mov
popa
add
clc
inc
addl
in
cmp
mov
and
sub
iret
rorl
xchg
sti
xlat
mov
or
gs
mov
jns
loopne
ja
repnz
jno
jb
push
push
push
dec
addr16
cmp
push
add
inc
sahf
pusha
jbe
das
das
xor
xchg
sbb
xchg
sub
cmpsb
mov
lahf
faddl
je
nop
xor
or
xor
mov
addr16
mov
pushf
movsl
js
out
rcrl
pop
dec
hlt
pop
inc
and
std
hlt
jnp
push
lock
cmp
xchg
jp
loope
cli
mov
gs
and
test
imul
inc
jge
add
out
inc
and
xorb
loop
adc
push
adc
daa
or
sub
mov
decb
mov
add
cmp
aaa
loop
jne
inc
ljmp
std
xlat
dec
cmp
fdivp
call
in
sbb
in
push
cmc
pop
pop
lret
movsb
inc
dec
insl
cltd
shlb
ljmp
in
mov
mov
scas
stos
push
dec
or
lcall
scas
adc
jg
mov
xlat
and
repnz
movsl
leave
cmp
jl
add
adc
cmp
dec
mov
daa
fisubrs
xorb
dec
jno
cmp
cmp
fidivrs
cmp
cmp
sbb
fldcw
loope
sbb
jae
pop
or
shll
cltd
push
adcl
jp
enter
insl
ljmp
cmp
pop
fadd
int
add
cmp
rcrb
xchg
outsl
pop
pop
xor
pop
xor
push
cld
icebp
cmpl
mov
cmpsb
push
pop
xchg
dec
mov
loopne
push
sbb
cs
mov
pop
and
xor
mov
xor
cld
shrb
jg
dec
jne
repz
ss
sarb
fs
les
test
int
mov
pop
jmp
inc
jl
out
ja
sbb
ret
das
int3
mov
dec
pop
aaa
cmp
insl
cmpsl
insb
push
icebp
push
sahf
into
lods
test
mov
jmp
loopne
mov
push
sub
pusha
mov
xor
lret
xor
push
adc
adc
and
and
xor
loope
stos
aas
mov
pcmpgtw
xor
and
inc
rcrb
imulb
arpl
mov
popf
das
dec
sbb
cmpb
mov
sahf
xchg
jno
inc
and
cmp
rcl
dec
out
inc
divps
enter
fsubs
xor
jae
loope
and
sbb
jecxz
dec
lea
jge
in
mov
pop
mov
fwait
xchg
jb
push
pop
jb
cmp
lock
insl
int3
inc
sbb
dec
sub
pop
jecxz
inc
and
call
call
mov
pop
iret
pop
push
shll
add
xchg
call
lcall
movsl
test
pmuludq
and
into
daa
idivb
push
outsb
cmc
xor
adc
dec
icebp
inc
or
out
fs
push
inc
decl
ffree
cld
es
cltd
das
fwait
loope
ret
js
rclb
sub
fisubs
pusha
sub
or
bound
xchg
jns
and
loop
push
mov
mov
movsl
and
adc
push
xchg
sbb
lcall
adc
xor
ss
pop
int3
outsb
sbb
fisttpll
xchg
in
pop
or
mov
insb
push
adc
outsl
popa
cmc
xlat
push
sbb
adc
xchg
lahf
pop
dec
cmp
pop
jmp
and
adc
fwait
cltd
jl
pop
xchg
in
cwtl
ja
mov
insl
or
inc
shlb
ljmp
fmuls
inc
add
jae
insb
leave
pop
add
sbb
mov
js
sbb
fwait
or
jecxz
imul
les
ror
sahf
jmp
filds
out
xchg
pop
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
adc
add
cltd
test
out
push
insb
insb
xchg
xchg
sbb
scas
xor
sub
adc
orb
mov
mov
fisubrl
mov
adc
jbe
out
arpl
push
push
jmp
jge
jno
jne
mov
js
sub
mov
jns
cli
insl
sbbb
inc
fwait
or
test
pop
xchg
aas
out
xor
sub
add
in
rcrb
outsb
andl
mov
and
fisttpl
out
pop
pop
lods
mov
fs
lock
popf
dec
sub
jle
fdivl
and
cwtl
pusha
push
jge
clc
rcr
pusha
in
fidivrl
test
jne
pop
push
mov
ja
sub
insl
and
dec
out
out
fistps
ret
sub
shl
xlat
add
in
sti
push
inc
dec
cmp
fwait
and
or
adc
cli
inc
xchg
mov
mov
rcrb
fdivrs
push
xorl
cld
mov
mov
sbb
scas
in
stos
inc
mov
pop
cmp
mov
jecxz
sub
fidivs
push
pop
push
ss
hlt
inc
inc
in
insl
add
test
inc
push
sub
imul
scas
neg
jmp
cmp
adc
adc
xor
cmpsl
movsb
xor
or
ljmp
sbb
ss
jp
ret
call
jmp
cmp
rolb
out
stos
mov
aam
ret
jno
gs
in
jp
push
insb
int
dec
lcall
adc
hlt
mov
fstl
jecxz
ss
mov
cmp
mov
or
imul
inc
sbb
mov
jbe
sbb
push
jg
js
cmc
ficompl
adc
dec
in
rolb
adcb
lcall
or
inc
lret
bnd
and
inc
dec
imul
movsl
cmp
cs
dec
mov
out
lea
push
gs
jg
stc
ror
xchg
jbe
jne
add
sbb
testl
cmpsl
lret
add
sub
loopne
xlat
ret
sub
daa
mov
pop
sbb
jmp
mov
push
sarl
mov
sbb
mov
in
outsl
dec
jp
xchg
inc
push
jno
add
lds
aaa
cwtl
inc
sub
stos
xor
jno
sub
or
repnz
ljmp
in
mov
sub
add
or
sbb
imul
popf
cmp
hlt
push
and
call
jl
jl
adcb
fstpt
popf
rcrl
lods
imul
push
xor
jp
ss
pop
lret
xchg
flds
xor
add
mov
pop
mov
pop
sbb
adc
sbb
cld
shlb
jbe
stos
test
inc
sub
negb
xchg
mov
jecxz
fimuls
stos
or
add
aaa
and
in
push
mov
mov
and
outsl
cmpsb
mov
or
and
jo
insl
in
inc
xchg
mov
hlt
repnz
xor
mov
push
push
sbb
xor
jne
in
adc
outsl
aas
cmp
test
inc
xchg
jg
xchg
inc
cmp
out
mov
popl
sbb
lods
mov
pop
adc
subb
shl
cmp
leave
fs
push
push
in
and
xchg
xchg
pop
lcall
xchg
call
stos
mov
jnp
push
mov
sbb
or
jp
repz
adc
enter
fxch
sbb
pop
das
add
cmpsb
inc
pop
sub
cld
loop
mov
pop
int
or
jg
outsl
sbb
hlt
ficompl
adc
and
pop
xchg
xor
mov
frstor
push
mov
in
ret
cs
scas
jg
mov
push
mov
popf
imul
jb
dec
pop
cs
sti
movsl
ljmp
mov
pop
sbbb
icebp
cwtl
sbb
xor
xlat
jne
pushl
cs
push
dec
mov
push
popa
das
es
adc
mov
mov
cmp
shl
rolb
mov
lea
rcrl
cmc
jp
xor
sbb
xchg
mov
or
cmp
mov
sbb
jae
out
cltd
mov
jp
add
and
mov
outsl
push
int3
roll
mov
lods
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
ret
add
push
add
in
stos
outsl
or
xchg
fs
sbb
mov
lods
push
pop
shl
out
shl
mov
sbb
cmpxchg
mov
scas
mov
das
or
push
mov
mov
repnz
lret
push
dec
sub
cwtl
aam
inc
sbb
clc
push
xor
inc
xor
push
mov
mov
mov
cltd
call
sbb
test
fsubp
out
sar
mov
sbb
sbb
cmp
add
enter
add
testb
das
or
sbb
shll
rcrb
adc
push
inc
or
lods
adc
out
fisubs
arpl
pop
pop
les
call
jl
ljmp
xchg
aad
loope
call
fadd
jo
jno
mov
mov
ret
adc
sbb
aad
cwtl
movsl
mov
add
ljmp
adc
lock
jl
sub
loope
mov
out
sbb
push
data16
dec
insb
dec
and
aas
push
mov
cmp
int3
push
xchg
fstpt
jne
pop
inc
icebp
aaa
sub
cmp
add
repz
or
push
pavgb
and
sub
imul
inc
sub
sub
ja
loopne
fwait
cmp
cwtl
adc
jo
cli
pop
loop
mov
outsb
in
test
mov
mov
mov
inc
mov
cmc
sbb
stc
sti
adc
jno
in
xchg
jnp
ds
mov
push
jl
pop
andl
cmp
test
dec
push
cltd
adc
dec
int3
adc
sbb
rolb
adc
rcr
loope
in
mov
jne
push
cmpl
ret
push
inc
orl
pop
shl
mov
int
iret
or
repz
ret
lods
mov
mov
in
or
fistpll
call
adc
aas
mov
inc
xlat
aam
pusha
jb
outsl
out
loop
sub
add
test
imul
mov
ret
loopne
icebp
ljmp
cmp
xlat
adc
std
lods
fisubl
test
sbb
jl
sub
cld
pop
out
xchg
mov
xchg
std
sarb
mov
int3
jg
f2xm1
xor
mov
scas
xchg
ss
sbb
stos
in
div
xchg
add
out
ficompl
sbb
stos
push
cld
pop
xchg
lods
add
or
adc
inc
call
fstl
cmc
cmp
xchg
sarb
dec
daa
call
test
mov
data16
sub
pop
fcompl
daa
testl
push
push
ficoms
cmp
movsl
cmc
jnp
xor
shll
pop
mov
addb
add
xor
insb
fsubr
jmp
sahf
stos
mov
test
inc
cwtl
push
imull
out
lods
add
adc
jnp
xor
and
daa
xlat
push
fwait
add
mov
out
mov
in
hlt
pop
out
jnp
xchg
dec
test
cmpsb
cwtl
outsl
or
js
lea
cmp
popa
pop
mov
jp
push
push
mov
mov
push
es
and
jg
xchg
jmp
hlt
and
lods
sub
jb
stos
xor
ret
cmp
pop
popf
and
out
ja
mov
add
and
mov
or
sub
imul
insl
add
dec
push
mov
addr16
inc
jle
aas
mov
lds
shll
cmp
cmp
bnd
nop
adc
mov
cmpsb
dec
jecxz
sub
int
rorl
pop
cmc
xchg
sbb
pop
jno
fxch
shrb
es
mov
xchg
jo
inc
jnp
push
push
inc
lret
cmc
mov
lds
lds
xchg
and
dec
or
out
repnz
iret
and
add
fisubrs
dec
sbb
mull
cmpsl
shl
mov
push
idivb
lods
aam
adc
pushf
pushf
pop
or
lret
jecxz
dec
aam
mov
jbe
jno
hlt
add
pop
inc
pop
cmpsb
mov
ja
dec
push
jb
adc
push
lods
inc
mov
jp
dec
mov
xchg
dec
jge
dec
sbb
mov
sti
je
addr16
ret
rorl
es
xlat
dec
lea
popa
xchg
lds
adc
cmpsb
sti
call
loope
jb
dec
fs
mov
outsl
mov
add
mov
cwtl
ret
pop
loopne
repnz
and
dec
lcall
sbb
loope
je
incl
test
mov
adc
mov
sahf
and
ret
and
cs
sub
cmc
out
pop
movsl
push
jb
dec
push
pop
cwtl
scas
pop
les
outsl
mov
outsl
fisubs
out
pop
daa
dec
cmpsl
inc
sbbb
es
jle
xchg
das
popf
mov
add
rolb
push
rclb
push
out
xchg
jnp
movl
mov
cs
ret
test
testb
js
repnz
dec
stc
andb
stos
xor
stos
cmpsb
loope
push
iret
pop
sub
pop
push
loopne
cmovge
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
add
add
push
add
ret
cld
fisubrl
scas
shlb
in
ljmp
mov
rcrb
leave
stc
xor
frstor
mov
mov
or
dec
je
mov
sbb
fwait
mov
inc
out
insl
cmpsl
rcll
dec
cmpsb
mov
movsb
and
pop
sub
int
and
rcll
jg
mov
jmp
xchg
dec
xor
pop
ficoms
pusha
jns
push
jecxz
mov
imul
jl
mov
mov
pushf
push
fnclex
dec
popa
ja
test
lret
jbe
mov
dec
jbe
adc
adc
inc
inc
inc
call
into
test
out
cmp
push
test
lock
scas
xor
movsb
lock
dec
daa
push
loop
and
inc
loop
xchg
cmpsb
and
daa
inc
enter
fadd
jbe
xchg
leave
dec
shrb
mov
jbe
adc
test
rclb
movsl
inc
inc
adc
aaa
jno
incb
aas
inc
test
negl
rorl
lahf
adc
fwait
push
fdivrp
outsb
adc
ficompl
ret
mov
push
and
iret
jns
push
outsl
cmp
mov
mov
mov
dec
jl
pop
clc
pop
or
jne
xchg
xor
or
jge
jmp
xchg
or
out
rcl
outsl
repnz
dec
nop
sbb
stc
fisttps
in
mov
fs
fcoml
mov
daa
daa
divl
and
iret
jecxz
mov
cltd
fisttps
in
jg
scas
xlat
dec
outsb
bound
int
mov
ljmp
mov
jne
lods
mov
mov
cld
dec
pop
fidivs
lock
adc
add
gs
fidivl
lcall
jno
jno
jae
cmpsb
and
mov
cmpb
clc
movsb
dec
mov
fwait
ret
sbb
in
stc
jmp
pop
loop
mov
mov
add
std
ret
mov
nop
dec
dec
cmpsb
mov
loopne
and
leave
mov
pop
or
movsb
jmp
or
or
pop
ss
rorb
pop
mov
jge
cmp
lock
gs
cmp
into
pop
aas
pop
jmp
aas
daa
inc
xchg
aam
or
jne
dec
jg
push
sahf
stos
push
inc
lds
pop
dec
inc
jge
inc
and
loope
lds
ljmp
lcall
out
mov
sbb
xchg
sbb
aas
jnp
inc
push
xchg
popa
sbb
movsl
lods
scas
mov
mov
movsl
xchg
in
push
mov
test
or
insb
clc
call
icebp
jp
bound
icebp
cli
mov
rcrl
xchg
lods
push
xchg
sbbb
jl
dec
add
insb
sbb
adc
push
push
push
adc
and
dec
outsl
or
insl
fimuls
imul
decb
iret
xchg
add
dec
cltd
sub
fxam
add
sbb
or
push
jns
xlat
clc
fidivrl
mov
rcrl
not
cmp
push
sbb
adc
movsl
imul
aas
popf
or
dec
rolb
mov
stos
shrb
pop
jno
popf
mov
xor
stc
shl
cmp
stos
mov
mov
nop
xchg
cmp
sub
jl
add
push
sbb
cwtl
lods
loopne
loop
es
jmp
cmp
push
cmp
pop
rol
les
pushf
ds
or
pop
xor
leave
lods
ficompl
mov
adc
mov
adc
iret
insb
loopne
xchg
out
loop
and
push
pop
mov
js
lcall
imul
aas
cwtl
mov
and
repz
stc
jns
aaa
dec
and
cmp
sbbl
es
dec
ljmp
mov
jge
pop
jg
inc
pop
icebp
cmp
test
fldcw
repnz
ss
out
xchg
incb
movsb
test
shlb
xchg
xchg
mov
dec
int3
mov
imul
int
ja
movb
mov
adc
inc
and
call
push
dec
jl
inc
test
jae
dec
cmp
movsb
push
lods
adcb
in
daa
inc
es
pop
fists
divl
sbb
sbb
pusha
sarl
fldt
lock
sub
aaa
jge
cmp
std
xor
iret
xchg
stc
call
pop
jnp
cltd
aam
int3
test
jne
adc
in
rclb
dec
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
or
add
scas
pop
add
sahf
in
clts
stos
rcl
inc
mov
out
sbb
jp
imul
and
jo
aas
lods
xor
ds
and
fnstsw
fdiv
aaa
xchg
loop
add
lahf
lock
mov
stos
sub
sar
inc
jb
sbb
jmp
shrl
imul
lret
xchg
popf
cwtl
mov
lods
outsl
nop
stc
mov
xor
das
insl
daa
std
push
popa
rcrl
xchg
int
test
pop
cmpsl
fucomip
jmp
mov
xchg
js
sub
sub
sub
push
inc
mov
add
aas
ret
push
out
jecxz
sbb
cmp
outsl
lds
bound
pushf
popf
mov
es
scas
or
rcrl
lahf
dec
push
pop
mov
dec
insb
mov
dec
hlt
xor
add
mov
jl
pop
inc
mov
pop
dec
add
fwait
pop
push
xchg
mov
imul
jmp
cmpsb
or
scas
scas
ret
mov
int
sahf
dec
lds
iret
mov
add
mov
mov
aaa
jns
fwait
push
addr16
int
add
mov
add
jae
out
in
out
inc
jb
aad
arpl
or
dec
js
fistps
cs
arpl
movsb
das
leave
sub
jmp
sbb
loopne
and
popf
les
xchg
xchg
dec
sti
pop
data16
fmull
pop
cs
rol
nop
push
push
xor
pop
test
insb
ljmp
lahf
dec
insl
push
movsl
mov
mull
insb
jp
imul
jg
les
insb
mov
mov
out
push
pusha
push
das
mov
daa
cld
leave
or
jnp
incb
mov
inc
in
data16
sti
in
sbb
pop
cli
push
jp
inc
inc
fmuls
xor
or
test
ds
loop
aaa
out
imul
xchg
fidivrs
push
outsb
es
push
mov
dec
sbb
imul
out
int3
aas
in
mov
mov
adc
or
xchg
negl
jbe
mov
mov
scas
mov
cmp
clc
js
lock
push
aas
pop
mov
xchg
sub
xor
mov
push
popf
xor
in
addr16
adc
inc
mov
push
add
sbb
fadds
cmpsl
jp
fcoml
or
mov
lds
adc
jns
mov
and
mov
pushf
dec
add
sbb
or
cmp
lock
sbb
mov
or
jne
pop
test
push
fisubl
fisubrs
fstp
mov
test
xchg
xchg
shr
pop
shlb
bound
lea
mulb
sbb
or
imul
cmc
cmp
out
in
idivb
ficoms
adc
adc
mov
mov
dec
pop
add
jns
sub
rolb
test
in
loopne
push
repz
lcall
xor
jae
mov
neg
cmp
dec
in
xchg
add
mov
call
or
jp
cs
pushl
orl
dec
mov
adc
mov
lods
mov
pop
sub
decl
ret
popf
push
orb
enter
fdivrl
shll
cmp
test
stc
sahf
out
push
jp,pt
rcl
call
adc
dec
push
fs
mov
jae
aas
pop
inc
mov
imul
pop
sbb
lock
cs
mov
fisttps
dec
adc
stos
addr16
loop
andb
rcr
sbb
ds
in
push
pop
aaa
push
sbb
sti
sti
addr16
push
imul
loopw
fdivrs
nop
out
outsl
cmp
sbb
movsl
sbb
mov
xchg
sbb
inc
add
rcr
imull
aaa
jb
adc
inc
mov
mov
push
sbb
outsl
daa
sbb
fidivrl
enter
cmc
stos
dec
stos
bound
cmp
mov
mov
mov
xchg
mov
mov
out
pushf
jbe
mov
rorl
jo
mov
jl
ds
fnstsw
out
add
mov
aam
aad
jae
ret
push
ljmp
sub
add
pushf
aaa
or
scas
std
push
jbe
aad
adc
inc
aaa
in
in
cltd
or
inc
or
scas
push
ds
or
pop
lret
cli
in
mov
test
lods
ja
aad
mov
ds
xor
incb
les
push
cltd
jmp
jb
mov
out
ds
jge
in
aam
mov
repz
inc
ds
sbb
outsl
addr16
call
xchg
cmp
out
mov
aaa
adc
push
shl
outsl
mov
popa
sbb
or
cli
xchg
sub
sbb
insb
negb
xchg
lods
fmull
cltd
pop
scas
inc
mov
mov
mov
xchg
pop
or
inc
fs
es
mov
cmpsl
in
bound
cmp
xlat
mov
mov
outsb
imul
rcll
cld
rcrl
shll
jbe
xor
mov
add
jp
cwtl
pop
addr16
cli
xchg
out
and
and
sbb
push
rclb
sub
call
push
pop
mov
adc
addr16
mov
out
push
xchg
scas
jb
mov
mov
jno
cmp
addr16
adc
and
mov
pop
push
pop
xor
into
stos
inc
icebp
mov
mov
dec
cmpsb
cmp
aad
xchg
pop
cmp
aam
mov
jmp
mov
inc
sub
jmp
inc
jmp
xchg
and
gs
loop
jle
push
es
push
sti
xchg
aad
fcmovu
insb
sub
push
std
in
repnz
push
loop
mov
dec
and
sar
pop
or
icebp
xchg
clc
jne
int
cli
push
dec
aad
cmp
dec
jne
adc
mov
jecxz
mov
push
push
push
pop
sub
sub
or
and
scas
lcall
lcall
cmp
adc
jmp
mov
push
push
into
dec
int3
and
xchg
das
stc
lret
faddp
cmp
sub
push
ret
scas
jg
in
repz
jle
call
mov
mov
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
or
add
cmc
ljmp
mov
gs
scas
insb
dec
outsl
mov
inc
addb
ja
cmp
out
popa
lods
and
leave
pop
cmc
xchg
cmp
daa
rclb
das
ljmp
sub
pop
into
test
daa
mov
ss
pop
ds
leave
in
jne
in
jne
mov
test
cmp
call
mov
out
sbb
add
sbbl
clc
mov
cmc
sbb
pop
mov
adc
adc
pop
hlt
add
lods
jnp
jbe
xchg
cmp
jo
aas
scas
add
adc
in
xorb
hlt
scas
add
cmpsb
mov
adc
pop
insl
cmp
in
lods
adc
xorl
mov
xor
sbb
repz
inc
jp
ss
pop
sub
mov
inc
jmp
fwait
dec
jp
data16
push
stos
push
ds
xchg
ret
xor
cmp
daa
lret
popa
repnz
mov
fwait
mov
std
lahf
cmp
inc
mov
xchg
test
in
repnz
stc
xchg
or
adc
lds
insb
add
pusha
inc
bound
repz
or
insl
jb
ret
xchg
sub
filds
clc
jmp
aaa
addr16
cmp
add
xlat
push
test
scas
incb
cmp
jbe
pop
add
cmp
scas
add
jno
mov
int3
xlat
int
out
das
call
jmp
mov
aas
xchg
lahf
data16
add
cmc
xor
jae
mov
sahf
mov
mov
cmp
mov
fsubs
divb
in
test
sbb
adc
adc
adc
rcl
ret
and
mov
push
sub
xchg
adc
cmp
mov
jl
pushf
xlat
and
jecxz
mov
push
xor
cmp
lea
or
add
addr16
jno
movsb
mov
jl
imul
ret
mov
mov
movsb
mov
xchg
ljmp
in
ja
iret
xor
das
lret
out
in
adc
inc
adc
mov
cltd
jg
outsb
cmp
aam
aas
lock
dec
pop
lcall
sarb
pop
mov
inc
stos
and
cmpsl
cmpsb
pushf
popa
sbb
aas
push
repz
call
mov
hlt
add
or
loope
aaa
inc
pop
aaa
and
jne
ficoms
jge
sti
inc
aad
cmp
loopne
pop
movsb
mov
lock
nop
mov
adc
sbb
xor
pop
push
call
dec
and
jno
fcmovnbe
rclb
mov
jge
imul
dec
adc
mov
xor
pop
cmpb
into
sub
mov
xchg
int
mov
mov
fsubrs
jl
not
pop
stos
in
sti
sbb
cmp
mov
fistpl
push
jb
and
sbb
movsl
mov
inc
cwtl
xchg
mov
xchg
adc
sbbl
subl
sbbb
repnz
push
xlat
in
mov
fnsave
ficoml
repnz
mov
or
push
data16
pop
es
push
pop
cmp
outsb
push
sub
into
add
dec
xchg
jae
cli
inc
pushf
xchg
mov
ss
inc
imul
popf
lret
pop
xchg
pop
hlt
mov
xchg
dec
sbb
addr16
mov
cmp
pop
and
sbb
ret
or
imul
into
adc
adc
pop
cmp
adc
rcl
gs
mov
imul
iret
push
push
inc
or
mov
loopne
loopne
mov
fists
lods
insb
rcl
fbld
jne
pop
jmp
push
xor
mov
pop
test
dec
arpl
stos
test
pushf
cli
sbb
push
mov
adc
dec
test
mov
pop
sahf
jmp
lea
xchg
sub
and
movd
lds
dec
pop
shl
pushl
out
push
ss
xchg
cwtl
inc
lods
pushf
xlat
add
mov
cli
shll
or
pop
inc
loope
stos
cmp
js
pop
pop
xchg
imul
ds
std
add
fidivl
inc
sub
cmp
or
mov
push
jp
in
es
inc
jnp
xchg
popa
mov
and
jo
or
adc
push
lds
jl
adc
add
test
dec
mov
sbb
outsb
lds
xor
sbbl
push
mov
xor
pop
xchg
jg
scas
mov
push
push
mov
lds
testl
pusha
xchg
sbb
or
call
imul
pop
lock
into
sub
jbe
fdivr
xchg
sbb
push
ljmp
xchg
aas
cli
or
inc
cs
mov
loope
in
mov
xor
dec
in
add
add
adc
loope
fildll
lods
mov
sti
pop
ja
cmp
cmc
add
sbbl
or
xor
stos
into
fisttpl
xor
test
mov
insb
sub
sahf
cwtl
sub
xchg
push
cmp
test
adc
out
mov
jno
dec
lds
aaa
push
nop
or
mov
sub
push
sti
pop
push
sahf
push
push
test
popf
inc
clc
jg
movl
sti
out
fnsave
out
test
out
ds
insb
mov
mov
push
jbe
jge
je
fmulp
stos
mov
loope
into
or
sarb
and
or
iret
insl
mov
mov
mov
jmp
sbb
fadds
repnz
mov
adc
fdivs
xor
shl
push
in
cmp
sub
fsubs
jmp
sbb
into
repz
fists
cmp
inc
cmc
adc
pop
or
mov
outsb
out
cld
mov
movl
mov
sbb
in
adc
xchg
mov
icebp
cld
insb
loop
xor
stos
mov
in
or
add
shll
cmpsl
xorl
adc
jp
jo
call
call
inc
lock
lret
push
sahf
add
push
pop
and
push
aad
cmc
in
add
das
mov
or
sbb
ficomps
push
mov
lea
and
and
or
pop
gs
push
sub
repz
popf
call
in
popa
bound
or
in
mov
xchg
xchg
icebp
mov
jb
lret
outsb
cmp
lahf
push
scas
push
xchg
popf
and
shl
hlt
pop
movlps
enter
adc
cmp
sahf
mov
cli
inc
jmp
cmp
lcall
or
into
pop
cli
jne
mov
dec
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
add
add
add
dec
mov
add
insb
xor
or
cli
xor
pop
cmp
or
sub
movsb
adc
jl
sub
rorb
pop
push
jg
xchg
pop
shl
xor
push
je
insb
sub
ja
fildl
dec
pop
mov
gs
push
js
and
movsb
and
push
jl
icebp
pushf
divl
pop
push
sti
or
pushf
daa
int3
outsb
add
pop
push
sbb
jmp
in
popa
jns
cli
inc
and
xchg
and
jp
inc
roll
leave
out
xchg
push
cwtl
andl
movl
imul
andl
nop
jmp
addr16
out
movsl
mov
cmp
xchg
shrl
jno
push
add
push
clc
insl
xchg
xor
xchg
movsb
inc
stos
adc
cmp
push
sbb
fmull
cld
roll
divl
lods
aam
stos
mov
inc
pop
int
loopne
repnz
sub
enter
jb
push
out
shlb
aaa
incl
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
push
add
add
add
add
push
test
lods
xchg
push
dec
pop
hlt
pop
loopne
push
mov
loopne
push
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
fwait
add
add
mov
lods
cmp
and
or
popa
cld
pop
outsl
call
sbb
lock
pop
pop
aad
les
sub
or
jle
out
movd
mov
mov
or
jne
popf
push
sbb
fbld
inc
or
pop
jle
sarb
xchg
push
rol
and
fdivrs
insb
movsb
push
in
daa
push
mov
repnz
inc
popa
mov
test
jmp
fcoms
sub
jg
mov
cmp
sti
sbb
xlat
mov
jbe
cmp
jg
int
mov
mov
in
push
or
mov
jne
es
xchg
shlb
imul
pop
addr16
jns
cli
lcall
push
and
icebp
push
je
mov
mov
push
pop
out
pop
sub
daa
mov
daa
add
fst
adc
push
or
jg
inc
imulb
pop
jge
std
iret
mov
rcl
add
pop
mov
add
dec
cmpsl
jg
fwait
arpl
ja
lahf
dec
lods
test
jne
mov
js
into
push
lods
xchg
xchg
mov
mov
std
jo
inc
int3
sbb
and
mov
mov
out
imul
lock
cmp
push
js
insl
lods
or
xchg
jecxz
inc
movsb
dec
bound
lret
add
pop
mov
sub
call
ficoms
push
jns
inc
es
add
into
pop
pop
xchg
jecxz
nop
dec
xchg
adc
inc
sub
out
push
add
cmp
arpl
adc
cmp
out
loop
mov
sbb
mov
cltd
mov
dec
jo
in
lods
stos
sub
enter
or
jnp
mov
lock
mov
lcall
xchg
dec
mov
mov
sbb
mov
fisttpll
pop
out
cmpsl
mov
add
cmpsb
les
loop
xchg
dec
cmp
loopne
xchg
movsb
pop
push
push
pop
mov
cmpsb
sub
loop
test
jp
andb
rolb
pop
mov
iret
imul
mov
push
dec
dec
cmp
lcall
fcmovnbe
add
daa
mov
out
nop
shll
movl
pop
add
callw
arpl
dec
mov
jecxz
adc
stos
pop
in
inc
xchg
inc
leave
mov
lods
sub
rorb
rorb
pop
ss
mov
mov
lds
gs
pop
test
mov
xlat
cli
dec
pop
pop
jnp
add
or
lcall
int3
call
stos
add
push
jns
sbb
xchg
mov
cmp
mov
cwtl
aam
push
outsl
pop
mov
or
js
xor
je
mov
mov
cs
sbb
cmp
dec
and
sahf
in
fwait
sbb
icebp
mov
sub
and
or
stos
add
adc
sarb
lret
dec
cmp
cmp
into
lret
jnp
out
in
pop
and
mov
dec
jg
xor
rorb
loopne
in
stc
mov
sbb
push
lock
mov
adc
jnp
das
dec
mov
mov
in
fstps
adc
or
mov
pop
adc
inc
cmpsb
mov
and
dec
stc
mov
scas
shlb
rcll
jns
or
loopne
xchg
add
lods
mov
mov
mov
xchg
ret
stos
in
outsb
adcb
stos
sahf
aam
jmp
mov
out
add
fnstsw
inc
test
push
notl
out
test
jmp
jne
dec
xchg
jbe
insb
sbb
mov
aaa
dec
lret
jle
and
mov
jbe
sbb
mov
lcall
xchg
lcall
repnz
lahf
and
pushf
mov
mov
jmp
sbb
xlat
fsubr
jecxz
es
in
test
jns
sbb
mov
pushaw
movsb
dec
mov
hlt
adc
pusha
lods
rol
mov
push
push
rorb
jmp
adc
mov
push
inc
jb
add
mov
call
lcall
mov
cli
push
mov
aam
test
add
fwait
cwtl
xlat
cmpsb
rcrl
outsb
push
pop
dec
je
mov
mov
inc
or
testl
cwtl
sbb
ds
mov
pushf
out
mov
enter
add
sbb
pop
fnstenv
lods
adc
cmpsl
imul
shll
daa
sbb
sarb
js
jns
sub
inc
cld
ret
rcrb
gs
orb
adc
lock
scas
cmp
cli
mov
sub
jl
xor
call
fildl
fsubrl
xchg
sub
movsb
rcrl
outsl
test
loope
in
cmp
xlat
dec
mov
sbb
test
je
div
shlb
ss
movsl
test
insw
mov
add
in
pop
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
ret
add
add
add
icebp
xchg
mov
cmp
jb
test
in
fisttps
lods
lcall
push
aad
inc
sub
sarb
dec
inc
mov
add
or
or
mov
sbb
and
enter
jne
push
sti
jns
xchg
push
cwtl
mov
je
stc
imul
jl
sbb
sbb
jp
or
daa
fs
outsl
es
bound
mov
dec
repz
mov
add
or
fnstsw
mov
mov
mov
cmpsl
imul
cmp
sbb
mov
push
xor
jne
stos
roll
cmpsb
cwtl
notb
dec
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
add
add
pop
add
push
lahf
js
ret
lds
push
in
and
mov
mov
xchg
cmpsl
adc
adc
jne
xchg
pop
jns
mov
push
inc
mov
dec
inc
imul
in
daa
movl
or
pop
mov
sbb
mov
inc
add
cltd
mov
jns
pop
sti
gs
bound
or
sub
mov
sbb
sub
call
jae
movsl
stos
pop
je
stc
adc
pusha
sbb
sub
jo
fnstsw
int
sbb
adcl
jmp
and
jp
pop
pushf
dec
mov
insl
leave
pop
mov
xor
pop
sarb
int3
xor
pop
sbb
lods
mov
aam
testl
hlt
mov
scas
jp
inc
loopne
test
cmp
aas
jne
or
aas
push
das
icebp
add
or
sub
insb
repnz
mov
out
int
mov
pop
push
xchg
push
imul
loopne
imul
dec
call
cmpsl
lret
mov
call
pop
arpl
data16
sti
xchg
mov
pop
mov
lods
lds
jp
dec
iret
in
fimuls
shlb
neg
add
dec
and
dec
push
or
xor
jb
jp
adc
bound
and
pop
jl
lods
jle
jl
outsb
enter
sti
inc
mov
push
aas
sub
test
add
out
xor
xchg
mov
repz
cmpsb
xchg
jg
sbb
test
pop
add
sub
das
lds
and
and
test
ret
sub
jmp
imul
cltd
leave
cli
out
lods
jb
cwtl
andl
mov
test
xor
loopne
jmp
inc
mov
cld
leave
aaa
jmp
std
xchg
dec
test
pop
jne
mov
movsl
mov
push
adc
xor
fidivrl
imul
loopne
inc
push
sti
cli
lods
loope
ljmp
loop
fs
adc
add
pop
mov
stos
outsl
je
mov
sbb
mov
inc
lcall
je
or
fs
xchg
jne
add
mov
fwait
push
lcall
repz
cmp
aaa
adc
fucomi
mov
lret
pushf
int
imul
push
insb
mov
loope
pop
pop
dec
sar
pop
sub
adc
in
mov
gs
pop
mov
mov
add
jne
add
test
bound
arpl
pop
stos
scas
lahf
mov
mov
aas
ficoms
xor
sub
out
outsl
mov
subb
xchg
mov
leave
fildl
rcrl
lcall
out
and
xor
or
lahf
cmpsl
js
sub
inc
out
and
call
int
sbb
stc
xchg
pop
xor
js
and
mov
repz
icebp
das
les
mov
jns
add
jns
enter
out
ret
inc
ja
dec
or
sub
xchg
jle
lahf
jnp
sub
jae
aad
jae
ljmp
aam
jno
jbe
insl
repnz
cmp
sub
aaa
mov
or
sbb
pop
fcoml
add
mov
sahf
daa
lret
sbb
imul
scas
cmovnp
push
sbb
sub
fisttpll
pop
sub
cli
inc
jbe
inc
add
sub
jbe
pop
push
inc
sbb
call
pop
xchg
test
gs
and
fisttps
test
aam
jle
mov
incl
mov
fidivl
xchg
dec
inc
bound
mov
xchg
scas
in
sarl
inc
repz
pop
push
arpl
jge
and
pop
clc
shrl
and
push
push
sbb
mov
xchg
out
cmp
jmp
sub
scas
fwait
adc
dec
dec
in
push
xchg
aas
inc
call
jge
xchg
push
test
inc
fs
pusha
les
jle
and
hlt
push
xor
mull
push
pop
adc
lods
popa
and
mov
ficomps
pop
test
inc
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jg
add
mov
lret
imul
loop
mov
div
loop
out
adc
xchg
test
repnz
inc
lret
sub
push
fldcw
scas
hlt
dec
fpatan
shr
jmp
ds
or
je
ret
dec
xlat
pop
shlb
sbb
ror
mov
pop
mov
insl
mov
insb
lahf
cltd
pushf
insb
out
lcall
popa
data16
add
pop
out
pop
dec
pop
xor
imul
mov
out
call
mov
cmpsl
mov
ficompl
xor
scas
xchg
mov
mov
cwtl
pop
sub
inc
add
adc
lea
mov
arpl
stos
jnp
inc
aaa
pop
inc
sbbb
daa
mov
ret
cld
dec
mov
xor
mov
es
icebp
sbb
mov
in
imul
ret
or
jecxz
out
bound
add
insb
xor
test
or
xchg
insl
push
lods
sti
cmp
mov
sbb
push
jmp
testl
jb
jne
fistps
psubd
sar
out
int
adc
sbb
stos
jns
mov
xchg
lea
push
mov
sti
xchg
lods
loop
inc
jnp
lods
push
add
jno
xchg
mov
push
sub
aam
cmpsl
repz
ljmp
sub
arpl
data16
cltd
dec
sub
mov
movsl
mov
fstp
xor
inc
xchg
cmp
sub
mov
and
ftst
sub
and
scas
mov
mov
xchg
loope
lock
scas
or
cmp
sbb
add
mov
push
rcr
sub
imul
jmp
movsb
or
sbbb
inc
enter
iret
xchg
sub
cmc
jae
fs
mov
outsb
or
in
aad
test
jbe
clc
cmpsb
push
add
or
loope
fincstp
sub
sbb
fistps
adc
mov
sub
popf
pushf
in
xlat
mov
jmp
push
sbb
andl
fucomip
adc
inc
push
or
je
mov
lea
jae
inc
sub
xlat
cmpsl
dec
dec
out
pop
push
adc
lods
adc
test
sbb
out
out
cld
aaa
adc
xchg
mov
add
mov
xor
fwait
sbb
mov
mov
xor
movsl
call
stos
sub
int
pop
xchg
mov
add
insb
cld
sub
int
loope
pop
cmp
fisttpll
lods
aaa
mov
stos
pop
inc
mov
jns
and
arpl
data16
pop
push
inc
int
ret
mov
xor
ss
out
add
sub
les
fwait
pop
mov
xor
cmp
mov
aam
enter
mov
lret
loop
xor
push
cmp
push
cli
push
jg
adc
push
inc
lret
add
fsts
je
and
push
mov
jp
scas
arpl
sub
div
mov
add
lret
scas
in
repnz
add
ss
inc
out
mov
movsb
scas
add
xchg
inc
icebp
decb
mov
stos
lock
dec
sub
push
gs
out
sbbl
xor
fmul
stos
das
test
data16
cltd
div
vpmulhw
fildl
pushf
pop
mov
ds
out
push
adc
cmc
and
jns
daa
xor
dec
sahf
push
inc
insb
xchg
out
xlat
lret
pop
jae
mov
xchg
xchg
inc
dec
xor
fiaddl
ror
iret
xchg
sbb
adc
or
adc
mov
pusha
shrb
jns
pop
pop
mov
jne
push
insl
sbb
sbb
push
sub
loop
fimuls
shll
movsl
inc
dec
hlt
int3
outsl
jne
or
sbb
pop
mov
sbb
ss
js
imull
jns
or
and
add
hlt
push
xchg
cmpb
loopne
sarl
dec
popa
mov
ljmp
imul
mov
fwait
add
inc
shll
mov
jge
or
ficompl
and
fistpl
sbbb
xor
or
icebp
push
push
xchg
stc
cs
divl
and
or
sbb
lods
fwait
arpl
and
push
fcoml
into
adc
dec
sbb
movsb
add
xchg
in
jle
mov
dec
fistpl
sahf
mov
mov
out
push
mov
or
out
xchg
outsl
mov
pop
cld
add
rolb
loope
cli
sti
movsb
cmp
out
cwtl
es
insl
incb
mov
xchg
movsl
lds
jae
and
jno
jb
testb
fld
js
ljmp
xor
mov
js
das
call
xor
jo
mov
scas
lods
dec
jl
loopne
push
mov
push
dec
adc
leave
fsubs
gs
xchg
ret
cmc
push
mov
xor
dec
pop
or
aaa
stc
pop
fstpl
xchg
iret
cld
repz
or
adc
jecxz
mov
ljmp
mov
lods
xor
and
or
scas
jmp
lret
inc
lods
push
cs
rcl
fwait
hlt
pop
sahf
sub
xchg
test
mov
stos
pusha
lahf
adc
subb
jno
insl
xor
adc
lret
mov
pop
jmp
icebp
xor
pop
daa
rolb
shl
mov
sub
sbb
loop
in
jns
jns
rorb
ljmp
push
lahf
sbb
push
enter
pop
xchg
fcoms
lea
mov
les
rcrl
les
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
test
or
add
sbb
addr16
aad
stc
fs
or
ficoms
mov
insb
push
add
push
mov
hlt
test
xchg
test
aas
inc
ljmp
cltd
lock
sbb
cli
test
clc
stos
add
pop
insb
jo
push
das
shrl
push
es
lcall
enter
outsl
pop
cmpsl
add
add
adc
or
adc
inc
push
js
or
popa
test
mov
mov
and
mov
inc
repz
push
push
in
mulb
cltd
addl
ret
cmpsb
stc
ret
addr16
lret
nop
inc
loop
xorl
fistpl
cltd
mov
dec
pop
hlt
xchg
mov
push
mov
sbb
jecxz
popa
or
jle
repnz
psubusw
jl
mov
xchg
mov
sbb
push
loop
loope
mov
inc
lcall
push
mov
pop
imul
sub
aaa
xchg
dec
cmp
in
sbb
xchg
dec
jl
and
xchg
mov
insb
pop
mov
outsl
cmp
arpl
mov
mov
mov
cmp
mov
cmp
fidivl
outsb
stc
mov
jle
sbb
pushf
cmp
add
lods
sbb
test
add
xchg
mov
xor
pop
sti
mov
sbb
mov
cmp
dec
out
jmp
test
push
jb
sahf
mov
cmp
cmpsl
mov
out
xchg
xchg
push
out
ss
xor
imul
arpl
mov
enter
jecxz
cmp
dec
shlb
iret
ja
mov
cmp
aas
jle
mov
pop
leave
out
mov
jmp
mov
push
mov
cmpl
inc
mov
icebp
cmpsl
and
sub
lret
pop
clc
cs
loopne
jle
lcall
inc
cmp
ds
les
inc
sbb
add
or
and
xchg
xchg
aam
sub
inc
inc
les
pop
cmp
cmp
das
pusha
cmpsl
inc
push
mov
imul
sti
push
dec
xchg
inc
icebp
jbe
lret
pop
or
cmp
adc
add
fbstp
ss
sub
scas
push
jg
mov
xchg
dec
mov
add
je
in
fwait
ret
into
sub
xchg
mov
bound
jae
out
mov
mov
call
hlt
lods
rorb
insb
adc
cs
arpl
jmp
pop
and
push
lds
xor
repz
mov
fwait
mov
inc
popf
or
mov
and
cmp
pop
cmp
pavgw
mov
cmp
mov
pop
or
dec
bnd
cmc
jno
cmp
jecxz
sbb
mov
inc
outsl
push
loop
ja
out
pusha
push
dec
popf
or
sbb
jne
sub
dec
xor
and
aaa
les
dec
mov
shll
adc
ljmp
fsubr
sub
fwait
pushw
sbb
mov
push
sbb
add
jle
adc
or
xor
pop
ljmp
je
fsin
les
push
std
mov
push
and
std
xchg
sbb
das
xchg
aaa
lock
shr
jnp
mov
ret
cmp
sbb
movsl
pop
cs
mov
pop
mov
jno
sub
ficoml
mov
inc
pop
adc
cmovno
dec
ds
pusha
pop
out
inc
jns,pn
dec
fcomip
loop
ficompl
shrb
xor
call
lock
pop
jb
cmp
int3
pop
jl
test
or
loopne
gs
jecxz
jge
jle,pn
leave
arpl
jno
rcll
push
jmp
jle
mov
mov
idivb
sahf
lds
popa
pop
popf
sahf
push
aaa
ret
add
std
push
hlt
das
sarb
lahf
cmpsb
dec
aad
mov
ret
sahf
sbb
orl
xchg
fisubrl
sub
repz
sub
xchg
push
cwtl
insb
test
scas
push
push
rcrl
dec
aam
add
gs
xor
add
cmc
sbb
xchg
xor
lock
jmp
xor
xchg
jmp
mov
lods
mov
push
sbb
push
fidivs
or
insb
pusha
lods
mov
adc
add
sub
xchg
or
inc
aam
inc
std
mov
rcr
adc
es
mulb
cmp
test
push
enter
mov
sbb
adc
jmp
testb
pop
sub
les
xchg
mov
pcmpgtb
xchg
xchg
mov
fimull
rclb
mov
pop
faddl
mov
insb
icebp
lcall
cmpsl
lds
pop
xor
pop
sbb
push
test
push
jmp
ljmp
bound
jg
add
mov
mov
shlb
adc
out
sub
xor
aad
cmp
sbb
pop
cmp
jnp
ficoml
insb
addr16
cmc
popf
push
xchg
das
es
xor
shrl
repz
mov
popa
cmp
xchg
inc
jbe
and
bnd
ja
sti
inc
fninit
lahf
push
cwtl
or
sub
mov
scas
ja
sbb
int
pushf
push
xlat
loop
test
and
int3
pop
push
loopne
pop
jae
mov
cmc
jbe
push
xchg
jo
cld
lock
cltd
sahf
lret
mov
jo
mov
je
add
mov
outsl
ljmp
pushf
andb
out
ljmp
inc
mov
and
fadd
lret
mov
lea
pop
ljmp
xchg
aam
mov
push
dec
out
dec
in
movzwl
cmp
ss
mov
mov
cltd
mov
xchg
call
cmpsl
inc
jo
mov
inc
imul
bound
cmp
mov
test
inc
out
mov
and
and
pop
test
scas
mov
addr16
inc
push
lods
xor
fiadds
pop
sbbb
adc
and
mov
jo
lcall
add
cli
add
popa
or
les
push
incl
sbb
mov
lds
in
jp
movsb
xor
jne
out
movsb
xchg
ret
sub
xchg
das
mov
daa
xchg
cmp
mov
and
mov
lds
push
cmp
rol
jmp
mov
lock
gs
repnz
xchg
push
xor
jb
in
daa
aaa
xor
sahf
repz
lds
pop
daa
cmp
mov
lahf
xchg
jno
mov
imul
inc
xchg
cmp
jae
loope
pushf
scas
and
push
dec
dec
mov
pop
ja
pop
pusha
mov
push
cmpsl
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
test
add
sub
add
sbb
sub
scas
inc
loope
dec
pop
in
ljmp
cmp
mov
push
push
adc
negl
or
loopne
popa
out
pop
sub
ja
dec
outsl
test
sbb
jge
ljmp
sub
sti
jmp
sbbl
mov
inc
aas
push
push
mov
in
xchg
in
and
inc
pop
cmp
pop
fstl
adc
inc
cmpsb
push
cmp
sub
mov
or
aas
sarb
in
dec
xchg
mov
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
ret
push
add
lds
add
dec
dec
mov
mov
je
or
push
ret
xchg
xchg
out
xlat
aas
gs
jo,pn
loopne
pop
sar
into
es
mov
rolb
lods
sub
aam
add
dec
bound
add
cmp
std
or
xor
movsb
fisubs
mov
and
mov
stos
fnstcw
push
jbe
inc
push
cmpsl
push
jnp
lea
or
std
sbb
fwait
pop
mov
or
mov
and
iret
mov
ds
inc
sub
adc
sub
fsubrp
rcl
adc
movsb
push
jno
jecxz
adc
or
fnstsw
sub
adc
xchg
int
dec
stos
and
lds
add
push
popf
stos
mov
mov
cltd
in
jge
ljmp
sahf
or
and
mov
push
adc
dec
clc
stos
repnz
push
scas
lods
pop
repnz
mov
icebp
loop
mov
pushf
dec
insl
jns
adc
into
ud1
mov
scas
lcall
les
lret
mov
push
movsb
jmp
sbb
cwtl
xchg
cli
xchg
pushf
repnz
pop
ret
test
dec
dec
pusha
fs
mov
in
push
push
nop
xchg
sbb
xchg
or
xchg
dec
mov
popf
ror
xor
ss
cmpsl
inc
sub
lods
pop
and
xchg
mov
into
adc
fstpl
data16
scas
data16
jge
icebp
push
aaa
lods
push
xchg
fisubs
push
or
call
mov
cmp
push
push
and
cmp
fisubl
dec
lret
movsb
andb
dec
cld
aad
jmp
push
cmc
outsb
lods
xor
cmp
add
std
ffreep
mov
cmpsl
mov
push
cmp
lods
mov
sarl
or
in
pushf
pushf
xlat
clc
add
sarl
adc
inc
rcrb
sbb
jb
mov
push
pop
repz
cmp
aas
pop
popa
lahf
push
stc
dec
sbb
push
mov
pop
in
mov
lret
in
andl
cmp
inc
push
popf
pop
xor
andb
in
push
imulb
movsb
lds
push
stos
ja
add
cs
and
and
outsb
popa
ret
push
adc
or
pop
adc
nop
mov
andl
add
push
lret
popf
arpl
xchg
lock
leave
loopne
cld
jp
or
shll
into
dec
dec
pusha
xor
shlb
mov
enter
cmp
sub
sbb
push
xor
ret
jge
sub
ljmp
dec
lods
int3
xor
dec
sbb
dec
mov
lds
std
es
movsl
cld
pop
fists
pop
std
push
fcompl
int3
dec
gs
mov
inc
pop
je
test
sbb
rcrb
aam
add
lret
pop
inc
inc
jmp
mov
push
je
out
aad
sub
jmp
lock
inc
or
gs
in
stos
jg,pt
jp
xchg
aam
mov
bound
pop
adc
clc
fsubrs
push
in
lret
imul
jle
mov
lds
xor
push
imul
adc
adc
out
flds
ret
push
fidivl
jp
jl
popf
icebp
ret
sbb
loopne
jg
cltd
add
jl
arpl
fcompl
in
stos
push
int
cmc
mov
fidivl
and
push
inc
outsl
repnz
mov
pop
push
mov
imul
pop
lcall
xor
fdivl
rcll
xlat
nop
and
sub
je
xchg
or
cs
pop
sub
stos
sahf
std
fiaddl
fnstcw
sub
shrl
pop
lret
mov
stos
outsb
jp
mov
jb
js
adc
mov
enter
in
nop
jns
mov
inc
lods
jo
pop
scas
ret
shl
rcll
mov
inc
add
cwtl
mov
mov
mov
mov
inc
sbb
test
mov
or
test
bound
leave
scas
push
xchg
imul
imul
fdiv
mov
xchg
clc
pop
ja
aaa
ret
xchg
sub
into
in
xchg
sub
hlt
inc
inc
mov
das
sub
cli
xchg
outsl
push
and
sbb
dec
cmpsb
loopne
nop
xor
xchg
push
arpl
enter
mov
loope
in
push
test
push
shr
int3
enter
sti
cmp
enter
mov
test
or
pop
cmp
ret
lret
jae
cltd
push
mov
adc
cs
hlt
mov
sbb
outsl
sub
int
push
xor
test
popa
loop
insb
aas
mov
movb
std
and
fldcw
js
mov
movsb
in
negl
pusha
jbe
enter
sti
mov
std
ror
push
mov
in
je
xor
jae
clc
aas
add
pop
mov
jae
neg
outsl
push
out
outsb
or
jo
stos
jp
int
add
inc
leave
push
cmp
imul
cmp
pop
inc
push
and
and
shll
inc
stc
jb
loop
xchg
in
pop
adc
cmp
cmp
in
sahf
popf
popa
mov
ficomps
xor
push
xor
push
call
in
or
pusha
js
sub
jg
iret
insl
xchg
pop
dec
cs
mov
in
loopne
jl
push
xor
aad
jnp
mov
clc
xlat
mov
lods
rcrb
in
mov
mov
mov
adc
mov
scas
clc
adc
loopne
push
mov
stc
movsb
jl
mov
or
lcall
cmp
pop
and
cmpsl
jb
pop
jmp
or
mov
movsl
cmc
leave
push
insl
into
fidivl
rorb
in
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
add
add
add
add
popa
inc
adc
es
outsb
ljmp
or
rorl
aaa
adc
pop
cs
add
popa
aas
paddd
push
xchg
popf
cmp
loope
stos
add
or
sarl
scas
adc
stos
sub
test
mov
push
jp
or
sbb
in
jl
push
ja
fsubs
ljmp
outsb
call
add
arpl
pop
dec
arpl
icebp
imull
mov
jbe
jl
pop
ljmp
push
rclb
push
xchg
jmp
dec
jecxz
andl
test
scas
sub
mov
aad
cmp
push
icebp
mov
mov
aam
fisttps
in
inc
fsubl
jmp
mov
xchg
mov
aam
mov
leave
pop
jmp
repz
mov
mov
insl
push
ret
sub
jb
fwait
jecxz
lods
mov
pop
push
jge
pop
dec
int3
fcompl
daa
mov
insb
ret
add
pop
push
ljmp
sahf
out
sahf
in
arpl
std
aas
inc
sub
cltd
inc
dec
ficompl
cmpsb
mov
cmp
jb
inc
hlt
dec
mov
ret
je
ss
mov
jae
and
inc
sahf
daa
inc
scas
pop
stc
mov
adc
stc
js
mov
xchg
cmp
sbb
fstpt
xor
and
roll
in
cltd
cmpsl
add
mov
xor
mov
mov
es
jo
out
in
ret
outsb
mov
lods
inc
loopne
fwait
mov
mov
loopne
sti
mov
lea
repnz
xor
mov
and
mov
pop
int3
movsb
push
dec
stos
add
or
add
lock
sub
sub
imul
ret
repz
cmp
lea
imul
call
dec
pop
fildll
orl
mov
ret
cmc
enter
xorb
mov
clc
shl
adc
cmpsl
mov
pop
inc
or
add
fcmovnb
cmp
xchg
stc
inc
ret
icebp
in
outsl
pusha
ret
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
push
add
iret
or
add
adc
sarb
dec
loopne
mov
repz
add
lods
or
shll
movsl
loopne
clc
cli
ficomps
testl
pop
mov
aam
mov
add
jbe
push
sbb
mov
mov
dec
clc
or
cmp
stos
pop
rcr
ret
pop
add
xchg
movsl
sub
aad
syscall
cmc
dec
add
push
mov
pusha
addr16
fisubl
push
xchg
shl
pop
push
loope
and
dec
in
dec
rcrb
push
mov
jp
adc
mov
and
xor
mov
test
stos
or
xor
adc
xchg
dec
or
jp
pop
mov
pop
into
mov
idivl
test
cmp
adc
cld
loope
jle
dec
mov
xor
xor
mov
sbb
in
movsb
mov
rol
shr
mov
roll
test
pop
or
add
push
mov
loopne
xchg
xorl
les
aaa
insb
xchg
jns
mull
loopne
mov
xchg
sar
xchg
in
stos
cmp
in
xlat
popf
mov
loop
xlat
inc
jb
cmp
cmp
pop
mov
mov
es
mov
imul
scas
inc
sub
push
adc
sbb
out
iret
and
mov
pop
testl
xchg
test
rclb
adc
add
adc
and
mov
outsl
jbe
and
icebp
xor
lock
testb
sbb
mov
push
xchg
rcll
cmp
and
mov
insb
and
push
pop
cli
mov
std
jbe
push
mov
ret
dec
ja
adc
jl
mov
cli
sub
cmp
push
sbb
mov
add
push
jbe
imulb
je
mov
mov
fiaddl
fldt
adc
sub
push
pop
vcvtsd2si
jecxz
std
dec
pop
ret
cmpsb
ja
fwait
jns
ficompl
mov
xor
or
dec
cmp
add
adc
std
and
push
sub
xchg
pop
dec
loope
jge
adc
inc
add
dec
out
jne
js
test
push
xchg
call
jnp
lahf
xlat
inc
cwtl
jnp
lea
jg
and
mov
out
lods
push
stc
addr16
push
lea
cmpsb
fadds
in
sahf
inc
pop
mov
add
mov
and
ljmp
inc
inc
jecxz
mov
mov
xchg
inc
outsb
mov
nop
push
and
dec
bnd
mov
ret
shlb
mov
push
call
aam
sbb
ja
inc
cmp
sub
in
xor
sub
outsb
call
push
dec
xor
xchg
fmull
insl
push
mov
dec
leave
inc
xor
subb
stc
dec
jecxz
sahf
bound
or
vaddss
cmp
or
mov
push
jl
push
cwtl
mov
rclb
imul
addr16
mov
lret
rorb
jne
push
or
frstor
push
or
jmp
iret
push
lds
push
loope
or
jae
lcall
mov
adcb
jns
gs
arpl
sbb
fstps
in
jnp
xor
in
lds
ret
shll
hlt
in
fcoml
aad
jge
in
mov
xor
jg
ss
fadds
hlt
lea
dec
iret
push
leave
push
adc
pushf
mov
dec
imul
subb
ds
cli
pop
es
xor
xchg
in
inc
sub
arpl
jb
iret
xchg
xor
cmc
stos
insb
pop
jno
lea
jae
or
and
jmp
in
dec
out
lcall
stos
and
xor
cltd
dec
aaa
mov
ret
cli
and
mov
pop
enter
gs
dec
inc
fwait
adc
sub
sbb
add
adc
mov
int3
pop
andl
add
inc
jp
outsl
imul
das
testl
sub
lret
mov
adc
jge
inc
hlt
jmp
push
int
addr16
adcb
xchg
dec
pop
lahf
cli
pushf
and
shlb
cmp
pop
das
mov
out
andb
sbb
push
pop
cmp
push
clc
push
rcr
dec
data16
inc
inc
xor
and
adc
add
sub
mov
pop
outsb
inc
jb
push
orb
adc
fnstenv
ds
in
das
cmc
icebp
mov
or
divl
ss
rorl
jge
bnd
ret
mov
in
pop
xor
loope
cmp
sbb
addr16
and
cmp
pop
in
sub
push
sbb
pusha
xor
out
pop
push
incb
inc
sbbb
repnz
fsubrl
enter
adcl
jns
add
mov
clc
popa
test
jae
mov
cmpsb
nop
or
jecxz
pop
aaa
inc
mov
pminsw
stc
adc
inc
mov
fdivrp
icebp
jnp
sub
cmp
mov
cli
jnp
ss
outsl
mov
inc
pop
stc
cs
leave
dec
std
adc
pop
sub
jne
lods
xchg
sarb
daa
out
stos
mov
stos
inc
lock
xor
sbb
ret
mov
mov
mov
dec
aad
push
or
ret
dec
or
lds
push
pop
inc
pop
add
mov
adc
sub
aas
repnz
pop
test
mov
cli
jae
insl
jl
cs
xchg
jmp
lahf
mov
inc
lea
push
pop
dec
cwtl
shrb
mov
xor
push
xor
jle
push
je
sbb
lcall
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
add
add
add
dec
push
sub
insb
jno
mov
sbb
pop
call
enter
repnz
and
adc
lods
fwait
push
push
push
push
fucomp
push
lods
lods
outsl
ret
inc
push
insl
cmp
iret
hlt
adc
xchg
outsl
xor
sbb
and
aad
jmp
jae
add
shrl
test
mov
push
xor
sbb
mov
cld
sarl
addr16
lret
cmp
push
les
or
fstl
ss
sahf
fdivr
mov
inc
dec
push
rcrl
popf
and
fldenv
fidivs
sub
out
or
inc
test
add
aaa
inc
arpl
jne
mov
and
add
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
rolb
add
addb
add
pop
push
daa
iret
movsl
inc
rol
sub
or
push
addr16
ficoml
or
aas
das
mov
lock
test
push
xlat
xchg
cltd
clc
mov
cmpsl
cmp
or
sub
push
mov
cmpl
pusha
push
xchg
rcll
fldt
stc
push
push
popf
mov
push
ss
mov
popf
mov
or
push
clc
lea
rcrb
mov
daa
dec
or
data16
cmpsb
fdivrl
xor
dec
jo
jb
jge
xchg
mov
loope
mov
shrl
dec
xor
es
mov
cmpsl
test
pop
pop
jne
rol
das
or
mov
or
jne
push
mov
dec
insl
sub
loopne
or
jae
insb
ss
xor
ss
xor
add
xor
je
xchg
int
mov
cs
stc
inc
ret
adc
mov
js
sbb
pushl
pop
dec
sub
mov
sbb
in
inc
or
repnz
mov
cltd
mov
jge
adc
out
pop
jno
or
pop
fstl
mov
ja
ror
add
mov
les
xor
fsubrl
lea
lret
icebp
inc
aas
mov
js
cmc
in
and
push
bound
mov
cmp
dec
sub
xor
movsb
inc
mov
rclb
xor
xor
jmp
nop
sub
inc
fwait
cmp
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
add
add
add
lods
ljmp
stos
test
lret
xlat
movsb
icebp
pop
sbb
fistpl
jne
pop
mov
cli
sbb
dec
loope
js
out
jecxz
outsl
inc
mov
cmp
mov
cltd
movsb
sub
dec
cmp
pop
mov
jmp
sbb
xchg
in
mov
push
insl
punpckhwd
out
ljmp
idivb
call
xor
cs
mov
loop
lds
jno
test
xor
movsl
pop
pushf
dec
shrl
mov
dec
dec
setb
cli
cmp
jle
shll
fcompl
hlt
sub
jbe
dec
nop
dec
aad
test
push
insl
aas
lcall
je
aam
xchg
cmp
cmp
pop
sti
push
push
in
mov
fisttps
addr16
xchg
aas
jne
cwtl
fsubrs
js
jo
out
mov
push
scas
pop
pushf
pushf
movsb
mov
dec
popf
pop
mov
subb
xchg
stos
dec
ficomps
xchg
xchg
clc
scas
dec
into
ds
dec
shrb
jle
mov
mov
add
inc
pop
cmp
adc
aas
test
ret
lea
fldenv
mov
inc
outsl
bound
flds
cmpsb
sub
std
adc
add
xor
hlt
and
inc
in
dec
xchg
add
mov
fldt
pop
lock
out
jne
fnsave
cmp
dec
inc
xor
xor
out
dec
push
cmpsb
push
std
mov
xor
popf
and
fisubrl
stc
jmp
repz
mov
into
gs
mov
ret
aaa
xchg
jecxz
test
pushf
addl
mov
fcomps
mov
leave
out
mov
sbb
push
ret
orb
sahf
and
flds
addb
jmp
adc
stc
mov
mov
add
adc
out
and
and
push
jnp
mov
fildll
imul
and
mov
push
mov
jae
pop
mov
stc
mov
and
mov
movsb
push
or
mov
pop
fistpll
add
scas
sti
lock
jnp
and
imul
fisubrs
stos
inc
pop
xorb
xchg
push
out
sti
pop
das
xchg
testl
addl
popf
and
insl
pop
mov
loope,pt
pop
mov
mov
cmpsb
in
mov
int3
mov
loopne
into
pop
data16
nop
outsb
mov
je
stc
shlb
xor
cmp
jne
xchg
shlb
leave
imul
push
cld
add
mov
outsb
fdivr
mov
push
inc
daa
stos
cld
lods
fistl
fistpl
mov
mov
lods
test
out
or
stos
mov
cmp
fmull
push
aam
loopne
and
sbb
or
jo
lock
jns
dec
je
hlt
jnp
or
adc
scas
sub
fucomp
outsb
or
movsl
lahf
cltd
pop
dec
ffree
push
scas
dec
mov
call
jo
lahf
frndint
xor
ss
add
and
loope
or
sub
cmpsb
mov
dec
shl
pop
mov
in
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
pop
add
and
add
mov
cltd
outsl
xchg
jo
shlb
repz
jge
mov
pop
js
pop
mov
cli
jp
push
in
cmp
mov
dec
mov
rclb
fcmove
out
xor
xchg
rorl
xor
call
incl
cs
sti
xlat
orl
sub
lcall
ljmp
add
jle
test
or
fstpt
fiadds
xor
lods
jmp
mov
leave
movsb
call
and
pushf
xor
mov
sti
dec
pop
lret
lods
call
ljmp
or
xor
pusha
subl
fmul
or
push
or
cs
xchg
and
jl
addr16
idivl
mov
pushf
dec
ret
inc
jae
repz
cmpsl
jecxz
xor
xor
cmp
sbb
mov
inc
js
sbb
rolb
mov
add
movsb
mov
sbb
pop
cwtl
cmp
mov
push
imul
or
adc
inc
gs
pop
imul
mov
cmp
repnz
mov
jne
stc
and
jl
xchg
inc
sub
cld
out
sbb
xchg
jb
dec
push
and
sub
mov
jg
push
in
je
in
lcall
aaa
cmp
popf
aas
and
jecxz
sub
decl
push
addr16
push
mov
fadd
scas
loopne
insl
pop
jo
add
sub
gs
mov
test
mov
sbb
fucomip
adc
xor
pop
int
pop
fldt
xor
mov
mov
lds
pop
mov
jmp
adc
iret
add
addl
repz
ss
mov
nop
lods
push
jo
mulb
sarl
movsl
loopne
ret
rcr
fmull
dec
fnstenv
and
xor
add
xor
mov
ljmp
test
stc
fmuls
in
aaa
bound
sbb
inc
inc
sbb
lods
cmp
hlt
stos
fistpl
cwtl
adc
add
popa
add
sbb
hlt
or
push
sbb
sub
sarb
lcall
sti
out
xchg
jmp
jl
jnp
stc
jb
ja,pn
iret
aad
xchg
int3
mov
dec
sti
std
push
fdivl
inc
scas
in
dec
ja
rorb
cmpsl
sub
clc
jns
adc
aad
sub
push
int
mov
out
lock
inc
mov
js
in
sbb
dec
sahf
push
pop
mov
sbb
push
mov
dec
cmc
pushf
lret
rcll
and
movb
pop
push
cs
insb
xlat
pop
dec
dec
fdivs
add
add
push
fstps
jp
aam
es
pop
adc
mov
movsl
push
mov
loope
inc
leave
arpl
sbb
xor
sbb
push
test
mov
jb
call
imul
adc
adc
mov
adc
mov
fdivr
push
xor
cmp
or
cmp
push
or
test
addr16
lcall
adc
lods
pop
xor
mov
addb
loop
lea
insb
pop
lods
popa
lods
ss
mov
push
in
dec
sti
lret
or
xchg
adc
sbb
cltd
push
fsubrs
cwtl
sti
mov
jmp
enter
pop
out
xchg
adc
unpcklps
inc
mov
in
xor
jmp
negb
rolb
sub
inc
int3
adc
ret
add
fadds
sub
mov
add
xchg
sbb
jg
inc
sbb
or
pop
sub
test
add
and
out
pusha
dec
push
fcomip
xor
mov
xlat
cmpsb
mov
imul
jns
cmp
popf
push
dec
pushf
mov
sub
mov
pop
hlt
dec
aas
imul
and
lock
aad
push
xorl
xchg
dec
lea
rorb
mov
cmp
push
mov
pop
fcmovb
ret
push
jle
inc
cmp
inc
sbb
imul
pop
xchg
or
rclb
je
mov
xchg
aad
insb
enter
add
jb
xchg
jne
mov
adc
add
push
lahf
mov
repz
push
push
sbb
stos
or
xchg
ret
addr16
es
push
cmc
int3
and
int
cmp
fdivr
adcb
adc
fmuls
je
negb
pop
pop
or
cmp
ljmp
inc
or
scas
call
pop
sub
mov
hlt
adc
adc
lods
xor
mov
xor
adcl
sub
testl
and
pop
in
push
shll
int
lock
fcoms
psrld
or
aam
xchg
or
aaa
ret
cmc
rol
fistl
ds
loopne
dec
call
lret
insb
nop
imul
shr
sbb
lods
dec
cmp
mov
std
paddsw
adc
xchg
stc
or
lds
and
mov
or
push
push
sub
repnz
daa
scas
fs
pop
pop
inc
loopne
sbb
je
repnz
test
sub
movsl
arpl
loop
and
push
xchg
stos
loope
push
bound
mov
push
stos
inc
data16
and
daa
cltd
sub
jecxz
jb
aas
orb
push
inc
mov
daa
scas
lcall
pop
vphsubbw
cvtpi2ps
jmp
or
fs
push
xor
push
ror
pop
icebp
add
mov
sbb
sti
pusha
cli
mov
mov
push
insb
push
mov
aas
mul
out
lcall
xlat
xchg
or
sub
scas
inc
jg
stos
rcll
pop
mov
stos
mov
and
push
mov
sub
add
outsl
insb
cmp
pop
daa
in
addr16
das
and
leave
aam
lcall
mov
cmp
inc
addb
dec
cmp
mov
xlat
out
add
push
cmp
and
stc
cli
out
jbe
fldenv
jg
mov
rcrl
lcall
jne
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
fiaddl
add
fldl
add
dec
cmp
imul
jns
iret
je
mov
xor
sbb
xor
mov
ljmp
popa
mov
cmp
fcom
idivl
cmpsl
sub
out
push
pop
popf
mov
inc
xor
push
sarl
lcall
sarb
loope
pop
pop
mov
or
adc
add
pop
fcoms
mov
lock
imul
pop
pusha
fcmovne
fwait
lea
mov
jecxz
jae
mov
dec
ds
imul
cltd
mov
add
push
dec
xchg
scas
mov
addr16
andb
push
jb
shl
mov
pop
push
push
bound
adc
jmp
imul
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
or
add
frstor
adc
inc
mov
fwait
mov
or
sbb
cmc
pop
ljmp
pop
shlb
jl
mov
sbb
mov
outsb
sbb
call
cwtl
add
pusha
addr16
jns
dec
jno
inc
mov
push
es
dec
or
fisubl
imul
test
je
test
call
add
dec
in
cmp
sbb
jecxz
sub
in
jmp
psubusw
dec
and
scas
dec
jb
icebp
stos
stos
ficompl
pop
mov
push
out
repnz
cmp
lret
jne
in
add
sbbl
fmuls
sub
aad
das
push
dec
mov
push
mov
pop
negb
repnz
int
or
repz
shll
clc
xchg
sub
cmp
adc
fldcw
cwtl
inc
test
lret
adc
inc
xchg
pop
fstpt
dec
xor
mov
xchg
adc
adc
cmpsl
sub
ret
adc
scas
mov
mov
test
cli
jb
fimull
or
mov
jo
lods
lods
imul
sahf
xchg
mov
in
into
call
dec
aam
bound
mov
mov
sbbb
aaa
mov
jo
xchg
adc
xchg
cli
sbb
jle
sbb
xchg
fimuls
fimuls
lods
sbb
push
mov
xchg
mov
push
jge
adc
push
pop
sti
stc
hlt
pop
ds
mov
inc
pop
mov
or
jno
xor
mov
xchg
pop
xchg
insl
cltd
push
inc
push
out
pop
out
into
mov
mov
lret
and
cmp
sbb
adc
cld
mov
into
aas
add
dec
in
into
sbb
xchg
and
cmpsb
inc
int
or
out
repz
insb
movsl
xchg
sarl
pop
sbb
mov
and
enter
xor
jg
stos
jl
outsb
xor
jp
cmp
and
es
push
mov
xchg
cmp
arpl
stc
pushf
mov
push
xor
cs
sub
les
inc
aad
pop
bnd
add
in
ss
pop
outsb
fldenv
in
pushl
jmp
sbb
mov
in
sub
test
inc
pop
dec
dec
arpl
sbb
sbb
mov
push
push
inc
ret
dec
ret
fiaddl
pop
xor
outsb
jl
icebp
sub
pop
push
enter
xchg
add
cmc
jl
xchg
add
sub
aad
cmp
icebp
arpl
aam
adc
dec
pop
xchg
repnz
notb
add
vmovsd
jbe
sub
cs
push
bswap
cli
data16
xchg
pop
cs
xor
dec
imul
shll
adcb
orl
jnp
mov
or
das
add
aaa
adc
pop
pop
sbb
mov
push
lcall
in
sti
out
sub
mov
cmp
rorl
xor
pop
and
test
mov
repnz
bound
rorb
mov
sub
mov
in
push
adc
push
std
inc
aad
jo
inc
sarb
ja
mov
sqrtps
jge
jb
subb
fwait
mov
push
repnz
lds
pusha
mov
cmp
mov
sub
xor
pushf
aam
push
xor
sbb
test
xlat
pusha
mov
and
test
mov
rorl
xor
pop
je
cmp
pop
lret
roll
xchg
jecxz
adc
sub
dec
push
mov
xor
xlat
in
loope
adc
test
jo
jl
clc
mov
mov
and
and
jp
inc
mov
inc
add
mov
add
pop
push
add
lods
add
pop
pop
inc
jns
add
stos
sarb
jne
or
mov
mov
xchg
pop
sub
and
sub
ds
mov
add
shl
test
jle
in
aad
xor
rcrb
jae
ja
mov
pop
aas
insl
push
sbb
dec
fmull
outsb
sahf
mov
mov
std
xor
loop
jbe
mov
arpl
add
add
mov
jle
leave
mov
add
push
js
inc
aam
nop
lods
adcb
or
or
aad
pop
lds
pop
mov
lods
xchg
fists
and
push
jg
aas
push
jle
repz
mov
loope
enter
das
fildl
sets
pop
into
in
ret
jecxz
cmp
adc
jmp
jle
insl
adc
movsl
push
jge
inc
pop
jne
push
lret
add
pop
inc
xchg
sti
mov
and
aas
imul
jb
jl
cmpsb
loope
popf
outsl
cmc
xor
mull
xchg
lods
xor
pusha
adc
jp
mov
add
fs
or
fimuls
adc
pop
movsb
sbb
sbb
and
lock
cwtl
xlat
inc
xchg
cmc
ja
sti
or
dec
sbb
xor
lret
push
test
xlat
call
dec
scas
lods
add
push
mov
dec
add
mov
aaa
inc
xchg
cmpsb
and
es
insl
xlat
jno
add
lods
cmp
sahf
mov
xor
cmpsl
or
jle
push
adc
push
mov
mov
faddl
jno
jecxz
lret
push
or
adc
fdivl
push
push
adc
lret
ds
lods
cltd
rorb
inc
pop
fcomp
jle
in
aas
adc
mov
xchg
out
repz
jge
add
testb
jb
sahf
xchg
cmp
ljmp
jecxz
inc
add
mov
push
and
jle
sub
adcl
mov
jle
es
mov
and
jmp
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
pop
add
add
add
test
icebp
and
rorb
repz
pop
lods
push
or
xor
and
repnz
cld
dec
or
xchg
stos
repnz
dec
mov
icebp
inc
rcrl
in
sahf
xchg
jge
push
or
lahf
cmc
adc
adc
nop
fmulp
cld
inc
add
xchg
dec
popl
pop
sbb
stos
int3
or
jne
inc
pop
pop
lds
xorl
add
fwait
lods
addb
push
cmp
xchg
jmp
pop
lock
adc
popa
shl
dec
and
pop
jns
addb
lods
and
mov
xor
ljmp
jp
pop
ljmp
mov
arpl
xor
lret
rcrl
orl
and
les
mov
mov
das
popa
or
ret
mov
mov
repz
test
mov
add
rorl
and
loopne
test
pop
ss
sbb
fs
loopne
aas
push
call
cmp
out
jno
xchg
fsubl
stos
lret
out
and
dec
mov
mov
mov
pop
dec
xchg
sbb
cld
jno
mov
and
mov
iret
jle
lret
jns
inc
add
arpl
mov
sub
and
negl
push
sar
mov
xor
and
mov
mov
iret
sub
rcl
mov
dec
sbb
cwtl
xchg
fwait
or
movsl
in
push
enter
cmpsl
pusha
mov
add
and
fisubrl
jae
add
fnstcw
sbb
add
pop
std
mov
and
xor
sub
int3
and
jno
hlt
mov
xchg
mov
mov
or
les
pop
lock
es
xor
jmp
jo
test
sub
test
sub
sahf
jmp
fcompl
sbb
pop
in
daa
mov
sub
test
gs
das
in
in
dec
ja
mov
sbb
push
lcall
dec
mov
insb
mov
sbb
jle
push
sbb
les
dec
xchg
adc
out
lret
aas
and
cld
mov
arpl
push
ss
push
mov
mov
jmp
loop
rcrl
lea
jmp
xchg
popf
inc
imull
call
cmp
mov
pop
add
mov
mov
and
insb
insb
xchg
xchg
sbb
pop
int3
jp
rcll
cmp
mov
jp
or
mov
push
xchg
lret
int3
fdivrs
add
out
ret
mov
movsb
sbb
scas
or
push
inc
inc
pushf
int3
stc
popf
aas
adc
test
test
pop
cwtl
xchg
mov
xchg
shll
mov
sbb
fiadds
bound
bound
mov
mov
stc
loope
or
insb
adc
lea
gs
mov
push
push
wbinvd
popf
cltd
xor
pushf
inc
imul
pop
pop
aaa
popf
movsb
mov
mov
push
orl
sub
sti
loop
cmp
stos
mov
push
or
fwait
mov
clc
add
pushf
pop
dec
fldcw
xor
push
jns
lret
divl
nop
ss
mov
mov
hlt
pop
mov
xchg
gs
dec
inc
ret
pop
push
mov
les
adc
jne
sarl
dec
in
pop
pop
adc
in
lcall
adc
test
push
mov
mov
je
into
or
mov
imul
sbb
pop
in
jo
adc
loop
sbb
icebp
pop
stc
adc
jmp
mov
push
in
inc
iret
jne
pop
fs
leave
jbe
xchg
cs
gs
push
fsubrl
fwait
stc
xchg
dec
ss
mov
or
push
cs
push
cltd
sbb
dec
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
loop
add
and
add
jle
aad
mull
dec
mov
jo
add
mov
jle
iret
sub
mulb
jmp
sbbb
lods
xor
push
int3
insl
jmp
mov
aaa
rclb
loope
iret
or
loope
and
push
cmp
jecxz
xchg
movq
add
cmp
pop
lock
mov
jecxz
loopne
push
mov
test
inc
pushl
lods
or
getsec
ja,pt
jle
xchg
cmp
or
dec
cmp
mov
outsl
fcmove
adc
push
jecxz
xchg
cld
bound
cltd
loopne
or
shl
cmp
cmpl
push
inc
xor
insl
popa
aam
add
jge
insb
pusha
inc
and
into
adc
inc
or
rorl
xor
dec
lds
xchg
dec
js
push
movsl
and
mov
inc
push
vpshaw
xchg
imul
add
mov
pop
sub
xchg
jmp
fistl
in
ret
xchg
icebp
push
jmp
pop
dec
dec
lds
and
std
adc
sub
das
bnd
into
fdivl
and
cwtl
add
out
push
jo
mov
jbe
push
das
dec
bound
dec
inc
adc
das
cld
outsl
out
mov
lods
xorb
pop
clc
cmpsl
pop
push
int3
aam
pop
sahf
jne
push
aam
mov
stos
sub
push
pop
fwait
sub
push
lock
inc
and
cmp
lret
add
sub
pop
inc
ds
xchg
inc
mov
je
push
jmp
push
int
outsb
outsb
push
jmp
scas
lcall
jmp
push
pop
hlt
cmp
sbb
adc
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
popf
add
add
add
add
or
out
aam
cli
sbb
xchg
adc
out
sub
dec
pop
pop
xchg
into
jns
mov
and
or
sub
test
mov
arpl
fcomi
into
jle
pop
mov
sarl
fldcw
ss
hlt
push
lods
and
adc
mov
or
sub
sbb
xchg
add
sti
inc
xchg
sub
sub
dec
roll
rcll
and
and
fs
lret
jmp
hlt
inc
push
mov
push
pop
pushf
jno
int3
inc
mov
push
stos
add
push
clc
sti
loop
inc
sahf
sbb
repnz
add
dec
js
fisubrs
pop
into
xor
popf
mov
pop
dec
arpl
pop
sub
lret
inc
jmp
pop
cmpsb
out
ja
add
sahf
mov
dec
xchg
imul
cwtl
mov
cmpb
sub
repnz
jecxz
out
mov
into
das
pop
pop
push
gs
adc
adc
inc
sub
aas
xor
mov
nop
pop
fwait
cwtl
xchg
adc
mov
sub
lcall
inc
mov
enter
pop
or
or
dec
dec
xor
enter
jae
repnz
rorl
push
sub
daa
push
call
or
cmpb
gs
mov
rcr
test
cmp
movsb
dec
jnp
scas
pop
xchg
cwtl
fwait
sbb
rclb
ficomps
into
loopne
dec
ret
outsb
or
rclb
iret
rclb
fsub
inc
sbb
pop
lret
sbb
mov
loop
sub
rcll
dec
pop
repz
jg
mov
sub
mov
lea
aad
test
outsb
dec
jo
jl
test
adc
into
inc
lret
ret
pop
popa
nop
rorb
mov
xchg
mov
ja
push
xchg
addb
ja
mov
cmpsb
imul
cwtl
repnz
in
push
or
xor
dec
mov
mov
out
or
insl
lahf
xlat
mov
push
sub
fwait
repz
insb
push
push
imul
sbb
and
xlat
inc
xor
adc
jb
icebp
adc
pop
jne
pusha
cmp
cltd
aad
jge,pn
mov
fsubl
mov
rcrb
sbb
out
jge
xor
insb
inc
aas
add
add
cltd
jno
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
fiaddl
add
lock
pusha
sahf
cwtl
pushf
mov
lods
xor
xor
mov
lds
sub
mov
push
lods
call
and
ljmp
into
clc
out
aam
fnstenv
inc
cs
adc
push
or
out
lahf
jmp
loopne
jecxz
test
lret
lods
pop
subb
add
loope
ret
jecxz
mov
xchg
jne
insb
push
jge
jae
popf
xor
inc
in
enter
cmpl
aas
notb
stos
jo
aam
jns
test
int3
aam
subb
adc
dec
sbb
je
ja
aam
shll
mov
mov
ret
or
iret
or
mov
mov
stos
add
icebp
inc
pop
inc
jecxz
dec
loopne
xchg
xchg
mov
stos
mov
xchg
stos
arpl
inc
rcr
jl
or
pop
xchg
push
out
lcall
aaa
leave
insb
enter
or
jge
mov
sub
pop
dec
mov
and
pop
test
je
sahf
mov
push
pop
in
jo
mov
leave
fstps
sbb
clc
pusha
inc
aad
imul
jo
dec
pop
jl
mov
or
adc
gs
sub
loope
divl
jg,pt
mov
jne
addr16
hlt
xlat
inc
jne
in
mov
lds
mov
ja
mov
sub
ret
lea
jg
or
testl
das
pop
popf
jle
lock
mov
fistpl
rolb
cmp
sbb
jmp
sbb
xor
imul
jbe
push
push
imul
mov
fcmovnb
sbb
in
test
jecxz
ds
sbb
setne
lahf
and
in
xor
lcall
mov
sbb
out
push
cmp
add
dec
scas
into
test
push
and
jle
push
xor
mov
rol
mov
sub
inc
and
pushf
and
xchg
repz
add
mov
sbbl
aad
lahf
fucomp
xchg
pop
or
mov
jg
stc
cmp
xchg
dec
jnp
pop
mov
xchg
or
push
push
sbb
ljmp
iret
jle
or
loopne
mov
in
adc
aas
repnz
dec
js
out
push
dec
jne
test
push
or
stos
shl
jo
lea
ds
push
mov
dec
mov
xor
scas
inc
aaa
dec
iret
aam
and
arpl
jbe
xlat
sub
xor
pusha
pop
loopne
in
and
or
test
arpl
push
pop
test
mov
daa
push
lret
push
mov
jmp
and
shlb
call
mov
xor
ret
mov
mov
add
mov
cmpsl
lahf
fucomip
xchg
mov
arpl
jecxz
xor
insl
cmpsl
pop
adc
mov
insl
pop
movsb
into
pop
jno
out
in
jno
mov
push
jmp
cmp
loope
xor
cmp
scas
inc
cmp
iret
xor
stos
adc
lahf
jg
and
sub
test
pop
loop
add
mov
sahf
and
int3
cs
sub
stos
fsubl
inc
fidivl
les
sti
mov
das
or
pop
ja
cmp
xchg
hlt
lret
mov
incl
lret
add
inc
lret
lret
cmp
orb
add
imul
adc
cwtl
push
xchg
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
mov
add
addr16
or
loope
pop
adc
mov
xor
pop
mov
inc
popa
pushf
fcomi
ss
lcall
fsubs
dec
shll
xchg
iret
push
mov
dec
mov
xor
scas
inc
aaa
dec
iret
aam
and
xchg
or
sbb
loop
xchg
mov
dec
fiadds
inc
dec
mov
aam
push
shl
in
jg
jns
pop
dec
inc
sub
dec
sub
incb
xchg
dec
jnp
in
repz
push
clc
xchg
movsl
mov
popa
cmp
lahf
aas
outsl
push
push
mov
xchg
sahf
andb
es
inc
xor
push
ljmp
sub
lock
inc
lock
sbb
or
imul
sbb
arpl
gs
adc
mov
fcmove
xchg
dec
or
xchg
in
jge
test
inc
divl
subb
or
add
dec
int
lds
pop
sbb
adc
enter
rcrb
sbb
sysexit
cltd
lods
cmpsb
cmp
pusha
jb
add
lret
outsb
push
adc
popa
loop
add
adc
cmp
shlb
add
scas
clc
inc
imul
cmp
mov
sbb
mov
jl
hlt
or
in
xchg
xchg
adc
cmp
lret
sbb
lea
mov
inc
cmp
dec
imul
sbb
arpl
insb
xchg
loop
repz
sub
add
bnd
movsl
xchg
lahf
add
and
insl
fs
movsb
mov
inc
pop
push
xor
sbb
push
outsb
add
lock
cld
mov
and
xchg
fstps
sbb
adc
mov
ljmp
loope
cli
imul
aad
xlat
xor
mov
mov
pop
test
jbe
gs
cli
int3
inc
add
inc
and
arpl
jecxz
dec
adc
lock
fdivl
jbe
ja
lock
in
mov
push
es
push
xor
js
xchg
mov
fstp
jne
or
add
cmpxchg
cmp
and
xchg
push
ret
jne
or
xchg
mov
mov
jl
stos
cli
icebp
adc
int3
call
xchg
pop
jnp
sti
lods
test
in
mov
jl
std
mov
iret
inc
sub
stos
rcrb
div
es
or
sti
xor
mov
mov
inc
dec
cmp
cld
imul
cmp
xchg
dec
out
jne
push
repz
dec
out
dec
int
push
loop
sbb
cmpb
xor
ja
xor
dec
sub
inc
test
mov
in
push
or
fldenv
stos
pop
mov
mov
cwtl
pushf
adc
cmp
adc
cltd
sbb
lahf
and
cmpsb
mov
pushf
xor
jns
inc
cld
fadd
or
mov
fsqrt
sub
insb
jg
aas
aaa
inc
jmp
add
xor
sub
mov
pop
mov
sbb
pop
ss
stos
push
cmc
loope
pop
ja
jb
pop
test
lahf
insl
stos
jo
push
and
bound
cmpsl
dec
pop
push
sahf
out
pop
inc
and
incl
shll
add
jne
adc
push
mov
sub
test
frstor
and
mov
and
cmc
insb
xchg
push
xchg
pop
gs
cmp
pop
cmc
data16
sub
stos
stc
pop
leave
ja
jb
fdivrl
lods
xchg
aam
inc
int
popl
jb
sbb
or
test
fwait
dec
and
pop
push
sahf
pop
lods
mov
pop
imul
mov
iret
bnd
inc
std
mov
bound
in
xor
in
mul
and
sti
cmpsl
lea
aad
shrb
jo
jle
into
jno
sarl
fcmovnb
cmc
push
and
sbb
xchg
lcall
inc
scas
int3
sti
or
cmpsb
add
es
xchg
jo,pn
fcmovne
dec
emms
jg
repz
movl
push
arpl
insl
adc
fisubrl
and
mov
lcall
xchg
ja
sbb
inc
imul
jge
adcb
pushf
xor
jecxz
xchg
call
fidivrl
fildll
and
lcall
xor
sub
adc
lret
jp
divl
cmp
add
movsb
mov
cmpsb
mov
jb
lds
mov
movsb
inc
sbb
pop
add
mov
sbbl
push
testb
outsb
cwtl
xchg
shll
mov
aaa
xor
xchg
cmc
out
mov
clc
pop
xchg
mov
or
bound
out
clc
push
aas
cmp
mov
sub
cmp
push
push
mov
jg
lds
and
xchg
fldl2e
das
imul
int
nop
out
jae
outsl
dec
sti
push
lahf
repz
dec
call
shr
outsb
push
lods
or
push
leave
call
je
cmpsb
add
add
push
add
je
in
mov
lods
xor
jg
int
fsubr
inc
movsb
loope
xor
sub
inc
mov
test
ljmp
dec
cs
jb
hlt
xor
jb
xor
dec
rorl
cmc
push
cltd
icebp
sub
stos
sbb
sbb
xchg
mov
push
xlat
icebp
dec
push
mov
test
out
sti
insb
stc
adc
add
dec
pop
adc
shrl
dec
push
mov
mov
fwait
push
scas
scas
cmp
push
fcmovu
cmp
jmp
mov
lods
in
add
xor
jno
inc
dec
mov
mov
xchg
loopne
push
jecxz
dec
mov
shl
mov
push
or
and
inc
mulb
gs
cltd
mov
pop
mov
pop
jns
add
mov
cmp
aad
ret
cmp
stos
mov
sub
inc
outsb
enter
jno
xor
ds
popf
jmp
sub
or
repnz
mov
jecxz
inc
cmp
mov
movsb
lock
js
icebp
into
stos
jo
idiv
stos
mov
stos
in
inc
roll
ret
push
imul
and
andl
sub
arpl
jmp
dec
dec
mov
and
ss
loopne
lods
loop
aad
mov
adc
test
sahf
sub
pop
sbb
stos
or
xchg
add
and
sbb
rcll
fwait
pop
mov
lcall
stos
ljmp
fistl
fs
rcl
das
adc
push
inc
jo
jmp
push
jno
inc
ret
mov
cs
pop
pop
inc
scas
xchg
ds
adc
leave
push
fnstcw
mov
cmc
lea
lods
movsb
aaa
adc
cmp
or
sub
sub
lea
fsubrp
ret
addr16
aam
imul
xor
cmpsb
vandnpd
jbe
push
mov
icebp
push
aam
outsl
and
push
inc
mov
inc
test
add
push
cwtl
xchg
xchg
sti
lds
outsl
push
sub
roll
xchg
cld
sub
mov
push
add
or
mov
push
pop
lret
pop
out
adc
dec
js
jb
add
add
or
cmp
xor
and
mov
jecxz
aad
dec
or
mov
jns
loopne
lret
stc
loope
enter
lds
mov
mov
mov
inc
inc
shrb
sbb
sub
push
add
loop
add
pop
pop
pushf
cmc
or
adc
ret
or
call
mov
and
mov
jle
sbb
scas
in
adc
ljmp
movsl
cli
pushf
pusha
and
sub
idivl
dec
add
icebp
nop
jmp
or
fmull
jge
js
mov
pusha
stos
cltd
dec
fldl
cmpsl
sbb
mov
pop
inc
sti
movsb
lcall
pop
psubusb
cmp
or
out
xchg
int
sbb
fisubrs
idivb
inc
fucom
lds
push
dec
or
mov
xor
dec
or
mov
divb
nop
mov
add
mov
dec
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
or
add
jmp
cli
adc
lock
and
or
inc
arpl
sub
testb
das
data16
movsb
xor
movhlps
sbb
lods
lcall
fildll
jb
cld
push
xor
icebp
in
pop
shlb
pop
in
lret
and
pop
test
lds
xor
or
icebp
cwtl
xchg
cmpsb
addr16
enter
fstpt
mov
sbb
adc
repnz
inc
into
or
jb
test
rcrb
sbb
mov
aam
lock
inc
in
mov
cmpsb
push
aaa
stos
push
je
jl
ss
pusha
sahf
adc
aad
dec
dec
mov
and
lret
mov
roll
pop
sub
sub
pop
push
push
jp
push
sbb
into
lods
outsb
inc
lret
rcrb
inc
out
jp
int3
xor
lds
lret
jnp
cs
jg
xor
inc
sahf
adcl
jns
push
mov
negl
fdivl
jne
jo
shll
mov
fidivs
repz
dec
push
mov
xor
sub
xchg
sub
pop
pop
in
mov
lret
mov
jp
mov
aas
xlat
cwtl
stc
sub
ret
dec
cmp
pop
enter
xchg
mov
dec
les
xchg
xchg
jae
lods
in
iret
cltd
lock
sahf
aam
dec
add
insb
inc
mov
les
mov
and
mov
mov
in
inc
call
jge
aas
inc
jbe
jg
mov
add
imul
adc
pop
cld
leave
repz
inc
pop
jb
jecxz
adc
dec
out
imul
inc
cmp
shll
sbbb
out
jecxz
xor
cmp
hlt
or
es
in
push
popf
sahf
and
sub
js
sub
mov
push
jmp
inc
sbb
daa
add
pop
je
pop
cwtl
idiv
mov
test
pop
stos
xlat
xor
jmp
ja
mov
subps
cmpsl
xor
jnp
test
fs
mov
dec
test
iret
stos
mov
sbb
push
cmp
pop
fdivr
ss
repnz
and
lds
fcmovnbe
stc
lea
mov
pop
fstenv
popl
call
lea
popl
pushf
fisttps
mov
sbb
je
loop
xchg
push
mov
jae
jo
push
jg
fildll
mov
icebp
hlt
hlt
andl
enter
push
nop
xor
fists
pushf
jnp
idivb
or
dec
mov
dec
add
sti
adc
dec
jge
popf
mov
sbb
mov
pop
out
jecxz
mov
in
pop
fidivs
mov
xchg
std
mov
inc
xor
divl
cmp
testl
inc
pop
push
repz
int
jo
js
call
jl
inc
leave
arpl
sarl
les
or
dec
movsb
mov
mov
cmp
jle
in
scas
shrl
stos
in
fnstcw
jns
stos
mov
insl
data16
aaa
lahf
mov
cmp
sbb
push
add
enter
inc
mov
adc
test
mov
lret
gs
push
mov
lret
and
jg
inc
lcall
sbb
out
scas
cmp
xor
xchg
bound
data16
cld
mov
add
cmpsl
xchg
and
xchg
sbb
mov
shrl
enter
mov
xchg
int
xor
sub
add
imulb
mov
aad
xchg
mov
and
jl
inc
mov
pop
lods
shll
movsb
push
inc
and
popf
mov
pop
rcrl
outsl
jp
inc
pop
mov
dec
sbb
sbb
xor
sub
dec
dec
and
xchg
es
jne
adc
sbb
dec
mov
mov
jp
push
sub
not
repz
fs
push
aas
cmp
lret
adc
int
and
add
mov
dec
inc
push
int
call
jge
pop
dec
inc
cmp
ret
scas
out
insb
setl
push
int3
pop
xchg
leave
lods
in
loop
popf
je
ret
adc
sub
push
cmp
or
gs
mov
sti
test
ret
sub
std
aam
aaa
mov
push
cltd
mov
dec
inc
mov
add
mov
mov
jg
pop
add
gs
and
jae
mov
enter
cld
jmp
dec
mov
arpl
jp
subl
add
mov
test
stos
jbe
inc
xor
imul
xchg
fdivrs
push
lret
hlt
jo
in
loopne
xor
adc
ljmp
addr16
mov
adc
push
lea
movsb
and
in
icebp
mov
and
adc
push
test
pop
out
and
pop
cmp
mov
adcl
mov
jg
add
sub
adc
push
loopne
mov
mov
je
mov
add
cmp
adc
dec
es
sbb
xchg
adc
test
pop
mov
leave
pop
int3
in
jmp
sbb
stos
inc
fwait
inc
xchg
aas
clc
dec
mov
pop
stc
mov
fbld
stos
test
sahf
cmp
jns
xor
sbbb
iret
sub
shlb
clc
pop
jge
aad
insl
or
jl
neg
xchg
push
inc
adc
xchg
and
and
arpl
pop
pop
adc
mov
mov
cmp
data16
jmp
adc
sub
adc
mov
int
adc
inc
jae
bound
stos
test
outsl
pop
pop
inc
ret
jle
cmpsb
mov
jns
cs
add
fwait
jne
loop
dec
mov
cmp
jmp
adc
mov
xor
shrl
inc
in
aad
adc
outsb
jecxz,pn
icebp
lods
mov
add
scas
js
pop
je
and
mov
cmp
aas
das
pop
mov
jle
inc
jecxz
sbb
sbb
out
mov
mov
ror
adc
je
gs
cltd
jle
dec
xor
adc
pop
mov
push
arpl
adc
aaa
push
mov
inc
mov
das
fs
mov
out
call
adc
adc
mov
or
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
pop
add
xchg
lea
scas
vpunpckhqdq
dec
jle
sti
push
into
xchg
cmp
mov
fwait
outsb
inc
xchg
es
icebp
mov
xchg
and
lea
ficomps
andb
or
lea
xor
inc
addr16
orb
push
repnz
loope
push
sbb
pop
lret
jns
add
mov
jo
xchg
mov
das
xchg
add
sbb
hlt
push
push
mov
inc
lcall
shl
aad
sahf
leave
xor
xlat
push
xor
mov
xor
fadds
fistpl
enter
sti
push
cmpsl
push
mov
xor
mov
hlt
push
sub
ret
ja
cmpsl
dec
jae
in
inc
test
mov
mov
pusha
and
outsl
stos
loopne
lea
std
ret
fidivrs
imul
fwait
sti
mov
pop
or
pop
aas
ja
push
push
movsl
imul
mov
mov
movsb
dec
xchg
mov
pop
js
ror
dec
aas
rcll
jbe
add
adc
sbb
pop
push
loopne
inc
out
outsb
mov
adc
pop
jb
fsts
xchg
std
outsl
or
dec
outsl
jb
mov
jo
inc
sub
mov
mov
aam
mov
enter
or
negb
std
push
xchg
clc
rep
in
inc
leave
test
mov
mov
adc
jecxz
cmpsl
into
movsb
push
xchg
mov
mov
dec
sbb
mov
lahf
xchg
in
lds
push
sbb
out
inc
movsl
or
mov
jno
rcr
mov
and
daa
loop
cmp
shrl
push
cmp
mov
lea
mov
into
mov
ja
leave
or
xlat
scas
scas
lret
popa
cmpsb
jle
pop
out
sub
incl
inc
roll
xor
push
roll
test
xor
mov
lods
dec
inc
sbb
js
movsl
and
jl
mov
inc
push
lock
xchg
adc
cli
div
and
xchg
pop
pusha
fwait
mov
dec
movsb
jmp
fisttpl
add
nop
inc
ja
or
or
cmp
dec
js
in
sbb
inc
mov
push
into
andb
xchg
scas
es
sbb
loope
adc
lock
cld
testl
test
sahf
lret
out
cmp
inc
hlt
pushf
test
jb
push
and
mov
scas
mov
add
movsb
xor
mov
or
fidivs
aam
and
adc
pushf
bound
dec
mov
xchg
sub
jp
aaa
aas
adc
push
jb
push
dec
jg
mov
mov
fwait
mov
lods
cs
push
imull
in
lret
push
jbe
adc
ror
das
dec
dec
add
xor
test
mov
pop
jge
popa
inc
adcb
push
adc
gs
inc
pop
inc
out
cwtl
cmpsb
loope
fs
inc
inc
pop
mov
push
notl
mov
push
add
xchg
sti
jmp
cmpsl
test
dec
inc
out
cmp
inc
jge
or
sub
bound
push
pop
loopne
ret
push
lods
ja
mov
rolb
adc
sub
xlat
out
mov
idivl
xor
or
mov
jle
notb
fdivr
imul
inc
cmp
xor
mov
add
mov
rcrl
decb
vaddps
imul
xor
mov
push
pushf
jno
jle
movsb
pop
inc
cmp
sub
pop
mov
or
pop
mov
loopne
push
cmc
jp
push
jecxz
add
cmp
repz
push
insl
sbb
xchg
fnsave
mov
test
std
xchg
dec
adc
pop
scas
mov
aaa
inc
std
push
in
test
lret
add
fwait
mov
mov
jno
cmpsb
sub
adc
jne
lock
push
pop
sub
cmpsl
xchg
and
fsub
out
jnp
cmp
mov
je
test
ret
and
jmp
mov
addr16
cwtl
pop
mov
cltd
outsl
or
xchg
jg
pop
xor
jge
mov
or
push
pop
stc
sub
clc
mov
lahf
push
mov
sarb
add
push
call
cmp
dec
mov
cwtl
lcall
pop
shll
dec
sbb
or
xor
stos
test
mov
fsubr
adc
jb
add
inc
aaa
xor
inc
jg
aad
shll
mov
add
sub
jae
stos
cs
imul
cmp
cld
push
jmp
add
cld
outsb
pop
xor
adc
sub
add
cld
or
mov
in
nop
dec
xchg
insb
add
jo
inc
or
in
imul
push
push
push
dec
inc
mov
xlat
mov
cmp
fldcw
adc
sarl
out
out
sub
jbe
jmp
mov
dec
jno
push
dec
dec
shll
xlat
rcll
pop
push
ret
cs
ss
xor
insl
in
add
dec
mov
cmp
pop
hlt
jb
sarl
add
jecxz
in
lods
dec
fnstenv
ds
repz
sbb
jl
dec
into
lret
lods
cltd
lods
sbbb
dec
imul
es
push
dec
dec
xor
pop
into
aad
add
or
mov
pop
sbb
aad
addr16
mov
jo
stos
test
andb
xor
ret
cmpsb
dec
fsts
dec
sub
loope
jb
push
repnz
jge,pt
arpl
jmp
lods
movsb
aaa
fdivp
std
out
pop
out
xchg
jbe
rclb
stos
insl
movsb
sub
mov
mov
lds
dec
xchg
mov
push
scas
cwtl
fidivrl
enter
inc
mov
ja
mov
test
jbe
sub
push
xchg
bndstx
loop
cmp
fstl
clc
pop
dec
or
sti
orb
enter
jae
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
add
add
add
add
xchg
dec
aam
std
std
icebp
push
mov
in
xor
adc
or
aam
dec
jp
pop
push
push
jl
xchg
out
lea
test
pusha
dec
gs
push
mov
sub
fcmovbe
in
lods
jmp
xor
test
mov
pop
pop
outsb
fcomps
jnp
push
xor
push
rcrl
sahf
arpl
adc
leave
ljmp
mov
add
and
jecxz
push
int
lock
rorb
in
nop
fnstcw
bound
mov
mov
and
cmc
iret
repz
xlat
jmp
daa
mov
cmp
lods
insl
sub
cmovne
bound
loopne
les
aas
mov
je
mov
jae
jle
rorl
mov
pop
inc
and
negl
xchg
scas
push
inc
push
inc
push
ja
add
xchg
adc
pop
xchg
jg
jl
dec
call
jmp
bound
inc
aaa
adc
sub
xlat
pop
cmc
lret
addr16
lcall
and
cld
das
dec
movsb
xor
jae
jecxz
xadd
adc
loop
jns
andb
aaa
sub
daa
add
push
test
out
xor
loope
mov
fcoms
and
out
out
subb
lcall
repnz
xor
sub
call
imul
add
xor
roll
mov
inc
jmp
mov
fistps
stos
jecxz
mov
mov
inc
sbb
add
mov
xor
jmp
in
test
ljmp
push
sbb
ljmp
imul
mov
add
mov
push
inc
xor
lret
mov
push
jo
xchg
je
mov
cmp
aam
ljmp
fisubl
dec
mov
xor
jmp
pop
push
fdivl
mov
arpl
push
sbb
les
push
push
scas
dec
fstpl
push
add
pop
sbb
cmpl
lock
inc
xor
shl
cmp
imul
dec
outsl
inc
orl
push
xchg
dec
test
fwait
repz
push
mov
cmp
xor
sti
jae
mov
add
push
sub
ret
xchg
mov
jmp
inc
bnd
inc
sub
add
jmp
pop
in
pop
cmpsb
popa
cwtl
rclb
adc
and
jg
ljmp
ds
and
push
aam
clc
xor
pop
inc
lds
nop
add
adcl
cmp
mov
xchg
and
dec
rcl
hlt
iret
iret
in
pop
push
shll
add
push
insb
mov
add
push
xchg
andl
scas
lods
out
dec
fdivl
mov
scas
xchg
lret
mov
jmp
decb
mov
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
sub
add
jb
add
xlat
mov
or
scas
push
xor
dec
rcl
xor
in
cwtl
pushf
pop
cmp
or
adc
addr16
and
cwtl
sub
in
test
mov
mov
jp
xchg
push
mov
or
add
nop
xchg
call
add
imul
in
cmovae
mov
dec
adc
testb
aas
insl
test
lret
rcll
jmp
imul
les
cmp
push
or
add
in
push
mov
push
push
push
mov
inc
mov
popf
push
out
nop
outsl
fstl
sti
lock
imul
lock
mov
add
jle
and
out
repnz
mov
mov
add
sbbl
data16
push
and
out
adc
lcall
add
fisttpll
pop
jecxz
stc
stos
test
dec
push
aaa
mov
xor
pop
add
das
mov
pop
dec
push
xor
call
pushf
mov
pusha
or
test
dec
mov
push
popa
jl
adc
pop
in
xlat
icebp
or
and
inc
mov
lods
xchg
sub
in
movsb
mov
lods
lret
je
adc
and
mov
addr16
and
lods
cmp
adcl
imul
rcrb
popf
sbb
mov
dec
mov
mov
add
xchg
out
mov
or
dec
in
add
dec
dec
adc
shlb
add
enter
mov
add
dec
bound
mov
loope
rcl
xor
in
sub
fucom
add
pop
xlat
out
fdivl
xor
in
pop
mov
out
dec
es
cmc
mov
push
add
xor
cmp
je
jns
xchg
mov
fisttps
xlat
sarb
xchg
xor
lret
mov
xchg
test
popa
ja
mov
out
push
ds
inc
in
mov
sub
push
cmp
cs
mov
inc
pushf
dec
call
fisubrs
cmp
and
loopne
cmp
xorb
in
mov
in
jno
addr16
mov
jmp
cmp
mov
dec
fcompl
dec
cmp
test
jne
scas
sbb
add
pushf
test
or
insb
xlat
mov
cmp
jg
jecxz
fs
lea
adc
ljmp
or
fiaddl
nop
cld
push
jo
inc
je
bound
fwait
mov
out
sbb
dec
sahf
mov
int
xchg
xor
pop
mov
pusha
arpl
lea
pop
mov
popf
or
repnz
in
jp
xchg
movsb
insl
arpl
out
loop
mov
lret
cmpsl
repz
adc
fstps
mov
lcall
inc
fwait
xchg
or
rorb
jae
mov
mov
push
shlb
and
adc
enter
rolb
mov
testl
mov
lock
or
add
stos
sbb
mov
xchg
in
sbb
iret
iret
repz
nop
repnz
fs
ficoml
fneni(8087
dec
jne
je
aas
push
mov
sbbb
mov
adc
and
je
push
loopne
xchg
mov
or
sbb
push
sub
pop
popa
popa
mov
fcmovbe
xor
cmp
pusha
add
popf
inc
mov
dec
leave
pop
lret
add
push
adcl
mov
or
rcll
cmp
enter
imul
sbb
repz
lds
cmpsl
push
clc
pop
adc
popa
scas
xchg
dec
add
outsl
sub
cmpl
arpl
rcr
cwtl
cli
or
je
movsb
shll
aaa
lds
mov
xchg
in
mov
stos
test
mov
dec
sbb
fmull
dec
sub
ss
mov
pop
and
lret
movsl
mov
rorb
add
pop
pop
shll
scas
mov
or
xchg
pop
jge
pop
negl
scas
jo
lds
jp
and
jae
xor
xchg
je
xchg
pushf
cli
pusha
adc
pop
cmp
or
push
cli
jns
cmpb
push
xor
push
sbb
es
sbb
jnp
dec
idivl
icebp
or
movsl
lcall
xlat
sub
adc
inc
fsubs
les
loop
dec
push
inc
dec
sbb
jno
cwtl
test
out
iret
outsb
inc
cmp
jno
push
daa
jne
les
popf
mov
xor
mov
into
add
fdivl
mov
mov
pop
ret
pop
hlt
or
lea
cmp
jmp
add
inc
pop
sub
test
cmpsl
lea
jb
add
add
jmp
pop
xchg
test
mov
xor
rcr
xchg
xchg
and
push
cmp
jae
dec
movsb
push
cld
push
and
xor
inc
pop
lods
aad
lea
aam
jge
adc
push
ret
xchg
roll
push
shl
sbbl
loop
inc
mov
or
pop
movsb
call
cltd
jne
in
mov
lods
pusha
icebp
out
outsb
faddl
out
push
xchg
adc
sbbl
xor
int3
notl
or
imul
pop
addr16
outsl
mov
and
mov
rcl
sbb
incl
cmp
ljmp
xchg
adc
add
mov
jmp
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
add
add
inc
push
nop
inc
jecxz
mov
and
mov
mov
jae
mov
inc
jno
inc
inc
jb
cmp
mov
xor
pop
test
arpl
imul
mull
dec
xor
mov
xor
xor
cmpb
mov
test
insb
pushf
push
lock
push
mov
lret
imul
dec
lahf
clc
mov
push
mov
loope
push
xor
sub
cmpl
push
inc
jmp
std
push
cmc
mov
repz
dec
leave
or
jl
or
les
inc
push
mov
dec
cmpl
jbe
xor
add
jle
mov
sbb
and
pusha
mulb
cmp
ss
je
in
jecxz
cltd
stc
sbb
repz
dec
cmpsl
dec
add
inc
adc
ja
jno
pop
mov
sbb
std
push
stos
aam
pop
jmp
lcall
mov
hlt
xor
stc
inc
inc
sbb
sahf
xchg
mov
mov
push
test
jb
push
mov
mov
std
add
lock
jns
nop
xchg
imull
fldcw
push
xchg
hlt
mov
inc
push
adc
push
xlat
repz
push
daa
or
xlat
mov
leave
inc
mov
mov
push
push
addr16
xor
stos
pop
outsb
inc
sub
arpl
roll
sbb
dec
xchg
dec
insb
mov
aad
xor
ficompl
and
repz
push
cmp
xchg
push
loop
push
mov
and
dec
fldenv
jae
rclb
push
lods
inc
add
dec
repnz
and
mov
fs
aam
mov
mov
sbb
xchg
outsb
pop
mov
es
adc
push
aas
enter
xchg
pop
aas
insb
xchg
int3
adcb
jmp
insl
pop
inc
sub
mov
mov
mov
int3
mov
pop
aad
fdivs
push
mov
scas
or
decl
sbb
push
xchg
out
mov
or
mov
add
enter
ljmp
imull
add
adc
out
xchg
ss
cmpl
and
sub
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
addl
add
add
add
mov
test
add
mov
adc
shrb
xchg
add
mov
das
cmpsl
xor
cmp
push
pusha
into
rcrl
pop
mov
lret
sbb
pop
ror
push
imul
idivl
lret
sti
pop
sarl
mov
pop
testb
inc
fildl
or
inc
repnz
push
icebp
push
test
sbb
sub
cmp
in
mov
ret
xchg
mov
outsb
jmp
lods
cmc
lea
mov
or
mov
push
popl
or
inc
xor
push
out
and
ss
into
ja
arpl
pop
add
inc
fwait
stos
push
pop
mov
pop
test
arpl
cmpsl
add
lods
stc
and
leave
xorb
outsb
test
addr16
stc
mov
mov
ret
sar
rclb
cli
sbb
mov
jecxz
add
add
je
pop
movsl
sub
out
sbb
iret
ret
call
sbb
dec
pop
push
pop
jo
cli
cs
inc
repnz
mov
lret
jmp
mov
push
sbb
sub
mov
sub
rol
and
in
dec
mov
xor
cltd
fwait
add
lea
mov
mov
test
xchg
adc
ja
test
fmull
sub
dec
insb
mov
dec
sub
mov
jle
inc
imul
cmp
pop
jb
sub
push
xor
mov
movsb
cwtl
icebp
orl
or
rcrb
adc
insb
loop
mov
pop
mull
jns
and
loop
repnz
cmp
xor
push
mov
xor
imul
in
mov
cmpsb
xchg
insl
xlat
int3
popf
fs
xor
mov
test
adcl
push
dec
clc
mov
ljmp
loopne
mov
jb
or
fisttps
into
sub
repnz
adc
jge
stc
push
or
inc
ds
sub
les
push
add
aad
mov
lahf
les
inc
mov
test
out
adc
xchg
int
cmp
fiadds
aad
push
xchg
xchg
icebp
fwait
pop
in
out
add
push
push
xchg
insl
or
mov
xorb
sub
jno
adc
add
aad
rcll
push
sti
cmpl
arpl
inc
lock
xor
loopne
add
add
lahf
sub
mov
push
out
jns
scas
sub
jnp
add
or
pop
and
sub
push
mov
cltd
out
shll
test
cmpsl
xchg
lock
sbb
xor
xchg
inc
loop
fsts
cmp
aas
sub
inc
notl
loopne
cli
cmp
jo
mov
inc
jp
insl
cmp
imul
fdivs
les
insb
sub
mov
movsl
ss
and
mov
xchg
mov
loop
mov
jo
push
les
cmp
sbbb
or
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jnp
add
push
add
add
fnstcw
inc
movsl
test
inc
sbb
pop
fnstcw
testb
xchg
ret
and
andb
sub
call
sub
stos
in
pop
push
inc
push
mov
test
mov
inc
fs
ljmp
add
adcb
ss
push
stc
sub
mov
cmc
cli
cmc
mov
mov
scas
shll
mov
ja
xchg
ds
jmp
aaa
xor
or
mov
push
decl
jecxz
inc
sub
inc
ds
and
or
cmp
cwtl
mov
cli
lds
test
and
notl
repz
arpl
mov
sbb
mov
iret
addr16
movsl
int3
push
mov
outsl
mov
test
mov
cltd
outsl
mov
push
les
loop
mov
xor
es
or
cld
cld
jb
push
sub
sbb
push
loopne
out
mov
push
mov
sbb
sub
imulb
mov
leave
dec
nop
cmp
fcoml
std
dec
aam
pop
das
dec
fsubl
push
add
fldenv
loop
cmp
loope
je
call
out
sbb
stos
ja
xchg
call
sbb
mov
sub
dec
je
push
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jns
add
repnz
add
loope
xchg
jecxz
insl
ret
jne
inc
inc
push
es
pop
ljmp
mov
iret
popl
icebp
loopne
jbe
mov
lea
dec
pusha
mov
xor
movsb
mov
xchg
test
mov
and
mov
cld
or
hlt
cmpsb
push
jecxz
lock
rorl
sbb
jns
fimull
pop
sub
sbb
mov
and
dec
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
add
add
add
add
add
mov
out
mov
lret
js
xor
mov
es
add
fiaddl
jl
jns
ja
aad
cmp
fwait
adc
sub
sub
js
inc
xlat
out
sbb
jae
cmc
imul
sub
lahf
aam
cmp
jge
mov
mov
enter
dec
cmc
insb
inc
jbe
lods
lea
repnz
arpl
sbb
sub
decb
push
dec
mov
jmp
daa
arpl
aam
jb
mov
jbe
mov
or
jg
push
mov
push
mov
call
mov
mov
movsb
or
das
ror
fwait
dec
adc
rcrb
in
inc
sbb
dec
mov
add
dec
mov
pop
out
mov
call
xchg
add
jae
idivb
xchg
leave
push
int3
or
xchg
xchg
loopne
add
cmp
jmp
jo
addr16
or
mov
fwait
mov
shll
push
pop
cmp
stc
xor
add
inc
fistpl
ja
mov
outsl
pop
xor
pop
xlat
pop
icebp
js
mov
xor
out
icebp
push
mov
sti
mov
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
daa
push
add
dec
push
add
inc
ficompl
push
mov
pop
and
and
pop
cmp
ret
das
ret
and
int
or
lret
sarb
or
push
xchg
xorb
rcrb
adcl
jnp
sbb
subl
icebp
sub
push
jae
pop
fnstcw
mov
or
insb
mov
leave
out
inc
dec
xchg
jbe
ljmp
push
popf
pop
mov
and
andb
shll
dec
or
lods
into
arpl
fwait
and
inc
fucomip
sub
lret
and
and
jns
fcomps
pop
pop
or
jmp
das
fimuls
cmp
lea
add
sbb
mov
or
test
orl
inc
mov
lods
add
cmpsb
push
sbb
push
pop
je
int3
mov
int3
jb
jp
inc
notl
add
or
fs
inc
push
rcr
lods
repz
sub
adc
cmp
in
pop
or
mov
fcmove
fistps
jb
into
movsb
cmp
nop
dec
into
clc
adc
test
js
cmp
gs
enter
push
loope
movsb
ss
xchg
xchg
and
orb
sbb
test
and
cmp
adc
inc
jle
rolb
fildl
pop
mov
xchg
sbb
shll
push
outsb
subl
imul
dec
cltd
idiv
jp
jmp
jmp
insl
sbb
pop
push
push
mov
xor
jge
cmp
gs
cwtl
ja
pop
mov
cmpl
mov
push
adc
push
mov
inc
cmp
fmulp
push
or
out
cmpsl
inc
push
pop
lahf
loop
mov
jge
pop
out
negl
jns
jle
jbe
dec
xchg
cmp
pop
out
clc
mov
mov
rcrb
cwtl
aad
jg
test
add
mov
pushf
adc
and
dec
aas
call
decb
adc
xchg
xchg
mov
stc
int
mov
out
jno
outsb
sbb
push
out
ret
push
bound
xor
fstpl
lods
aad
adc
inc
cmc
mov
adc
fdivrs
repnz
daa
sub
inc
cmp
stc
push
cmp
data16
repz
popa
cs
dec
mov
adc
mov
rolb
xchg
insl
test
xor
mov
mov
fisttps
inc
or
cs
es
inc
js
cmp
hlt
cmp
nop
xchg
ss
pop
and
jne
shl
jle
rol
dec
cld
cltd
xchg
ss
xor
fnsave
flds
inc
loope
movsb
xor
xor
stos
lock
mov
inc
push
cmp
mov
xor
testl
lods
stc
mov
jns
hlt
xor
mov
int
sbb
inc
ds
sub
cmp
outsb
lds
pop
das
and
imul
pop
rcll
jle
shrl
data16
sbb
insl
mov
pop
loop
xor
push
cmpl
mov
inc
stc
push
out
cmp
mov
adcl
data16
out
add
test
scas
jle
dec
sub
bound
sbb
sbb
cwtl
mov
jno
iret
into
pop
loope
and
dec
stos
add
adc
mov
cmp
jno
test
dec
notb
and
push
push
lea
pop
loopne
cmp
test
sarl
adc
mov
xchg
sbb
sub
gs
fldenv
adc
pop
rcrl
nop
daa
mov
jg
adc
fs
or
mov
push
xchg
ret
hlt
outsb
ljmp
mov
out
mov
cmpsb
push
push
push
dec
mov
mov
or
aad
add
dec
cmp
pop
xor
int3
mov
out
and
mov
adc
scas
adc
cmp
dec
mov
enter
or
loopne
mov
xor
dec
stc
call
adc
rcll
xchg
and
pop
and
movsb
js
movsl
sub
xchg
imul
cmp
or
xor
hlt
sub
lahf
adc
ret
inc
mov
mov
xchg
lcall
adc
or
pushf
cli
es
dec
cmc
sahf
mov
xor
sub
and
sbb
adc
jb
mov
fidivrl
daa
or
mov
or
or
sub
std
lods
jns
out
in
stc
push
sub
aaa
lds
sub
sub
dec
lods
out
js
mov
add
ljmp
pop
mov
pop
jge
jns
in
cs
adc
mov
aas
pop
out
scas
mov
cwtl
mov
xor
dec
test
sub
jl
vcvttsd2si
in
mov
xchg
pop
jns
lods
pop
mov
mov
and
out
mov
push
jp
aaa
mov
inc
loop
sbb
xchg
jp
loope
and
mov
bound
xor
addr16
xor
pop
bound
xchg
je
das
push
add
inc
cld
lods
nop
ja
adc
addr16
into
mov
das
mov
nop
bound
jno
jnp
addr16
mov
lcall
push
lcall
loop
in
jmp
or
sub
xchg
xchg
dec
sarb
mov
aad
enter
hlt
sbb
push
loopne
fpatan
arpl
cmp
cs
xor
leave
jno
pop
cmp
shll
sub
pop
into
push
sbb
mov
fucomi
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
pop
add
inc
or
add
pop
dec
pop
adc
ss
enter
or
mov
or
aam
addl
push
ficomps
inc
push
daa
jae
aaa
dec
dec
or
pop
or
aad
jnp
ss
movsl
gs
sbb
mov
jne
testl
sbb
cmp
int3
out
or
lret
mov
outsl
mov
xchg
outsb
cmp
inc
jp
ja
mov
xor
push
fucomp
fstl
mov
in
sbb
in
lock
mov
sbb
pop
and
inc
testb
pop
pusha
ljmp
and
mov
aam
scas
lcall
mov
jnp
in
ret
mov
loopne
es
dec
daa
mov
test
and
adc
shrl
rcll
dec
adc
repnz
outsb
jmp
fbld
push
dec
test
jge
or
inc
fisubrs
stos
ljmp
int3
nop
test
in
fs
inc
cmc
in
and
stos
push
sbb
push
push
push
mov
dec
xor
cmc
jp
out
lahf
push
dec
dec
outsl
shll
sbb
mov
mov
lods
out
and
xor
push
cmp
imul
popf
daa
subl
scas
or
ss
jne
inc
fisubl
subb
subw
sub
dec
pop
adc
push
div
ljmp
inc
fs
sbb
mov
ss
lret
dec
push
arpl
add
and
pop
scas
lcall
inc
jmp
inc
cmp
ja
insl
mov
cmp
lods
jbe
mov
out
xchg
jns
insl
mov
dec
iret
push
inc
lock
adc
push
push
rcr
loope
inc
cmc
mov
shr
inc
ds
sub
mov
dec
pop
sub
lock
aad
fs
mov
add
js
mov
fiadds
xor
adc
sub
push
push
adc
mov
dec
push
xchg
movsb
mov
sarb
icebp
push
jbe
call
cli
sbb
push
or
pop
adc
inc
xchg
mov
inc
cmp
mov
xchg
jmp
and
cmp
inc
fistpll
mulb
xchg
sub
popa
imul
mov
inc
mov
jmp
in
jl
pop
movb
push
pop
pusha
addb
decl
sti
pushf
mov
ficoms
xchg
xchg
scas
xchg
jmp
cmpsl
cmc
out
sbb
iret
repz
cs
inc
push
pop
xor
mov
je
mov
mov
loopne
cmp
cmpsb
jge
test
hlt
pop
jecxz
aas
xchg
daa
scas
xor
fs
or
icebp
das
add
repz
jb
rorb
pop
scas
jo
fstl
jae
lcall
scas
shlb
and
cmpb
popf
mov
out
adc
add
mov
xchg
cmp
aas
sarb
aaa
clc
pop
jb
popf
jae
hlt
jns
scas
mov
inc
insb
pop
test
push
dec
fcoml
addr16
mov
dec
das
outsl
jne
popa
ret
popa
fdivrp
loope
in
dec
pop
test
or
mov
or
mov
mov
pop
or
sub
and
push
mov
xchg
in
or
arpl
adc
inc
lret
iret
xor
inc
mov
push
mov
sub
push
rcrl
add
mov
mov
jbe
jge
cwtl
xchg
daa
xchg
stos
cmc
sti
loopne
into
and
into
pushf
in
add
jbe
in
scas
nop
pop
push
mov
loope
mov
bound
jmp
mov
jg
divl
pop
mov
push
adc
fmuls
pop
test
mov
push
and
test
arpl
ss
mov
push
sbb
repz
cli
dec
xor
icebp
or
jl
test
mov
lods
push
push
mov
xchg
test
add
shll
pop
in
in
loope
clc
fildl
xchg
adc
outsb
popa
xor
xchg
jae
stos
sbb
cmp
stos
sar
or
pushf
sbb
and
aas
push
lods
mov
jo
and
insb
popf
xchg
das
sub
test
add
lds
xchg
jge
or
jo
ret
loopne
lods
mov
aas
dec
sub
stc
add
and
ret
dec
push
mov
das
inc
pop
icebp
inc
cmpsl
xchg
stos
push
xchg
js
aaa
or
lahf
imul
mov
pop
sti
out
bound
xor
aad
loopne
inc
dec
fisubl
push
call
insl
test
stc
or
push
cltd
xor
cmp
mov
mov
push
xchg
iret
or
push
mov
bound
in
mov
xor
aaa
xlat
sbb
lea
lods
cmp
test
pop
int
mov
adc
rcrb
ret
daa
jnp
into
xor
fmul
testl
cld
dec
pop
pop
lea
out
push
cmp
adc
lea
movsb
mov
test
movsb
mov
bound
jae
jo
in
jmp
cmp
into
xchg
fucomp
addl
iret
jo
les
sbb
xchg
ljmp
sbb
xchg
js
in
mov
xchg
mov
pushf
movsb
jne
in
lods
dec
test
xchg
xchg
pop
out
push
insb
sub
mov
loope
pop
dec
imul
scas
rclb
cmp
mov
adc
bound
fs
int3
ds
addr16
jmp
cmp
dec
stc
mov
mov
cmp
jmp
sbb
iret
adc
mov
push
jo
lods
cmp
mov
cltd
test
adc
mov
cmc
sub
inc
shrw
sbbb
xor
insl
xchg
xor
jbe
sub
mov
and
fcomps
iret
xor
dec
mov
outsb
pop
mov
mov
fmull
loope
sbb
jb
sub
dec
aaa
push
iret
or
push
sbb
sbb
mov
xchg
loop
aas
mov
mov
scas
push
fiadds
sbb
push
scas
mov
fadds
cwtl
add
test
jno
pushl
in
add
adc
inc
mov
subl
mov
cli
hlt
aas
mov
insb
mov
in
in
adcl
bound
pop
fstps
leave
adc
mov
loope
pop
or
inc
inc
fcomp
movsb
or
scas
pop
lods
mov
pop
add
fadds
je
xchg
pop
add
pop
xor
pop
je
xlat
cmc
add
aas
rcrb
das
shl
pop
jo
pop
loopne
or
sbb
lods
fcmovnu
jno
sbb
pop
jns
pop
add
outsl
xor
insl
sbb
and
mov
push
or
inc
ljmp
xorb
ljmp
add
push
shlb
mov
push
popa
push
pop
pop
loop
lret
lahf
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
outsb
pop
add
mov
xor
sub
das
xchg
cld
orl
jns
fdivs
xchg
add
or
push
pop
jne
js
and
inc
out
stc
mov
push
int3
jns
iret
adc
push
aam
and
out
into
lahf
pop
inc
sub
rcll
pop
enter
fldcw
imul
or
jmp
mov
test
push
ja
pop
fbstp
pushf
mov
jmp
sbb
stos
mov
es
xchg
popa
and
lods
sub
lret
pop
scas
imul
pop
xor
xor
pop
cmp
cmp
pop
or
hlt
scas
pop
addl
cld
and
insl
jl
dec
lahf
hlt
test
mov
jmp
das
pop
push
jbe
mov
dec
cmp
cmp
ss
and
aad
rorl
sub
push
mov
sub
and
pop
xchg
adc
inc
or
insl
mov
outsb
sub
push
mov
ret
fstl
cli
imull
sub
and
cmpl
mov
ljmp
mov
pushf
js
outsb
pop
imul
ja
add
or
test
in
mov
test
adc
mov
ljmp
or
popf
cld
jno
push
iret
push
mov
lock
lret
adc
pop
jb
xchg
mov
dec
out
call
pop
push
inc
xor
push
movsb
rcll
mov
mov
jae
popf
xchg
sub
cmp
pop
add
jne
xchg
mov
fbld
xor
in
cmpsl
test
mov
push
mov
test
push
scas
outsb
push
push
pop
rcr
cmc
adc
pushf
mov
dec
or
je
adc
sub
mov
popa
scas
add
movlps
push
pop
inc
out
jle
pop
xchg
xchg
jp
stos
shll
dec
das
hlt
movsw
std
les
mov
sbb
leave
iret
loope
inc
scas
mov
lods
jmp
loop
loopne
cltd
xchg
inc
pop
push
movsl
push
adc
lret
xchg
sub
lcall
popf
pop
or
add
enter
and
ds
pop
push
fdivrl
movsb
sbb
and
jnp
lds
sbb
mov
mov
lea
lret
mov
test
dec
inc
jge
add
mov
lods
adc
cs
sub
xor
xor
es
sbb
xchg
or
pop
divl
pusha
xchg
popa
xor
xchg
dec
lods
adcb
pop
out
jmp
xchg
fs
mov
repnz
divl
cmp
sub
pusha
out
stos
adc
pop
pop
xor
or
jmp
cmpsl
adc
dec
push
jp
shlb
jbe
cmc
gs
scas
fnstenv
aam
push
xor
cmp
stos
mov
fst
mov
xlat
stos
cld
ljmp
mov
or
jl
loope
fwait
push
add
idivb
into
jmp
xchg
mulb
into
sar
jno
aaa
clc
and
cmp
push
out
sbb
fidivrs
aam
aam
add
loopne
scas
push
dec
pop
je
lds
ret
mov
mov
jg
rclb
leave
mov
imul
jge
fisubrs
in
lret
fimuls
push
sub
les
adc
or
or
sbb
scas
inc
bound
adc
jp
xorb
cs
imul
insl
call
aas
mov
mov
loope
lcall
mov
les
and
sub
cli
or
and
cmp
and
sti
xchg
repnz
fsts
cld
ret
cld
pop
ljmp
mov
fbld
nop
loop
js
xchg
mov
mov
dec
dec
dec
fstl
aad
adc
sub
nop
movsl
cwtl
movsb
int
xchg
data16
or
and
mov
aaa
and
and
sbb
fdivrl
sub
fisttpll
pop
adc
jns
aas
shrb
add
adc
scas
xchg
loope
aas
sub
stc
jbe
push
push
iret
jp
addb
or
jb
pop
jp
cmpsb
imul
loopne
in
xor
stos
jmp
enter
cs
mov
shll
les
fiadds
xchg
std
jg
xchg
out
lock
lods
nop
jecxz
imul
and
aaa
fwait
add
arpl
in
clc
mov
adc
scas
jg
pushw
and
sub
stc
or
pop
and
icebp
out
gs
repnz
or
popf
in
cld
cmp
push
popf
lcall
and
aam
xchg
push
adc
jle
dec
bound
call
cmpsb
adc
ja
add
or
push
xchg
subl
sub
loopne
jp
scas
ds
lahf
inc
or
cmp
cmpl
and
xchg
repz
xor
pop
adc
mov
mov
iret
inc
add
addr16
and
push
mov
ret
dec
fmul
pop
mov
push
add
sub
push
fwait
or
add
je
jae
call
sub
and
ja
jns
sbb
sbb
jmp
jne
sbb
scas
repz
andl
add
sbb
pop
and
gs
out
mov
dec
pusha
adc
mov
xor
jns
jp
sub
adc
cmc
cld
mov
inc
leave
jo
push
xchg
mov
xor
cmp
lods
xlat
lock
insb
or
int3
sahf
rcll
push
shlb
mov
cwtl
mov
es
daa
loopne
shll
or
je
mov
insb
mov
int
cwtl
mov
push
mov
or
pop
sub
fnstcw
dec
or
push
sbb
mov
jno
nop
je
mov
xchg
ja
add
shll
pop
sbb
cwtl
add
sub
shlb
andl
cs
adc
push
mov
lods
notb
jg
into
mov
hlt
negl
sub
xor
out
mov
mov
pushl
push
lret
mov
cmp
mov
mov
loop
pop
xchg
icebp
fs
lahf
mov
pop
sbb
repz
jp
inc
outsl
fcmovb
lock
cmp
popf
iret
dec
push
pop
mov
xor
mov
insl
xor
xor
push
lds
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
arpl
add
push
add
arpl
ret
push
mov
cmp
or
outsl
pop
or
lcall
inc
jle
out
cmp
inc
adc
das
test
scas
cld
xorl
fnstenv
fnstsw
out
inc
aad
sbb
dec
clc
mov
xchg
mov
arpl
sub
loope
sub
sub
xor
xlat
sbb
sbb
lcall
adc
add
cli
pop
pushf
fnstsw
push
or
mov
jge
repnz
mov
mov
fists
sbb
daa
aaa
pushf
xor
lcall
call
or
push
insb
movsl
and
mov
cs
lea
inc
mov
mov
lods
and
dec
add
xchg
out
cli
push
lds
insb
loope
adc
dec
mov
mov
xchg
and
lcall
and
out
shll
jnp
xor
and
pusha
out
xchg
mov
pop
or
lds
inc
pop
cwtl
loope
sub
push
and
push
and
shll
xlat
mov
rcll
subb
cld
jo
shll
push
add
sub
lods
les
testl
xchg
push
pop
pop
jnp
mov
mov
enter
ljmp
dec
xchg
insb
into
addl
js
in
stos
mov
ja
or
push
fistps
fwait
imul
jecxz
push
cmp
cmc
lret
mov
roll
xchg
pop
xor
test
push
pushf
jo
insb
sub
pusha
jbe
mov
lock
xchg
andb
sti
sbb
xlat
jae
and
xchg
and
iret
iret
inc
jle
mov
mov
lret
cmp
sub
dec
mov
lea
mov
xor
or
cmp
nop
mov
lock
pop
push
xlat
mov
and
push
in
xchg
cmp
xchg
arpl
add
in
pop
out
sub
xor
fwait
in
mov
test
jg
lcall
daa
xor
sub
pop
xchg
jae
dec
cwtl
ss
mov
int3
gs
lea
movsl
test
dec
sti
dec
push
or
sti
clc
pop
inc
push
jb
push
stos
xor
sbb
dec
sbb
sub
subb
je
xchg
repz
push
or
adc
xor
clc
sub
xor
int3
in
inc
inc
test
mov
add
jno
xchg
insb
mov
push
xchg
out
mov
int3
loop
sahf
pop
jae
sahf
imul
xchg
clc
mov
inc
adc
test
cmp
fwait
test
mov
test
negb
cmp
mov
adc
stc
jmp
cmp
mov
test
jecxz
cmp
aad
test
add
addr16
je
ja
inc
adc
jnp
jmp
lret
inc
scas
xchg
pop
scas
inc
loop
scas
xlat
idiv
clc
and
sbb
jp
subb
dec
mov
addr16
test
out
adc
or
xchg
movsl
mov
jbe
and
mov
xchg
mov
aaa
lahf
push
adc
mov
pop
mov
fbld
imul
add
fidivrs
in
xor
cltd
push
in
shlb
aam
lods
jnp
pop
out
mov
icebp
ss
jmp
lock
in
pusha
rorb
lahf
into
mov
cmc
sbb
fimuls
stos
add
gs
xchg
orl
mov
jp
xchg
and
mov
dec
jp
ret
in
mov
xchg
sbb
test
mov
mov
and
ss
cmp
jmp
jb
stos
pop
ljmp
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
add
add
xchg
jnp
ljmp
test
fidivl
dec
lds
bound
dec
add
out
pop
repnz
sub
dec
addr16
and
stos
mov
lods
sbb
ficompl
loop
lock
add
add
test
test
and
shl
xchg
sub
push
rolb
xchg
dec
push
add
arpl
push
xchg
xchg
lahf
or
jno
data16
jle
add
add
mov
fmul
clc
sbb
fwait
das
jl
cli
jl
jo
test
and
scas
into
out
dec
inc
sbb
fstp
mov
mov
add
jbe
jns
cmp
imul
cmc
dec
test
test
push
mov
mov
cli
or
std
test
je
in
out
in
gs
dec
sbb
and
bound
loopne
popa
jb
push
cmp
sub
cld
push
adc
jge
call
cmp
lret
das
shrb
mov
cld
rcl
fwait
and
cmp
pusha
ret
xor
xorb
sarl
jns
shrl
mov
ljmp
fwait
dec
and
cltd
push
xchg
lods
xchg
mov
mov
cmpsb
sti
aam
push
in
mov
and
cmp
imul
add
mov
repnz
jo
jo
dec
xchg
scas
aam
push
adc
mov
pop
pop
mov
jb
dec
mov
mov
mov
jge
out
jbe
pop
adc
imul
dec
mov
cld
push
sbbb
mov
sub
adc
enter
sahf
mov
mov
orl
test
xchg
fdivrl
stos
xor
mov
cmp
in
inc
fdivrs
jl
push
push
fcmovnu
shld
and
adc
mov
pushf
cmc
and
stos
and
fcomps
sub
mov
jl
mov
idivb
or
mov
dec
mov
jl
insl
add
jno
pop
adc
mov
xlat
cmc
jns
popf
push
int3
imul
and
int
mov
adc
je
lahf
adc
mov
test
sbb
lea
push
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
or
add
adc
mov
xor
je
pusha
imulb
mov
insb
fsubs
loope
test
into
aam
fbld
xchg
das
push
adc
cli
popa
and
ds
push
or
in
push
sahf
push
test
repnz
xlat
xor
inc
push
xor
out
mov
enter
jne
int
add
push
rclb
in
mov
inc
cli
lds
into
adc
gs
out
dec
cmp
push
lds
shrl
mov
fistps
loop
xchg
cmp
ss
mulb
xor
and
pop
roll
stc
repnz
mov
lods
ds
add
push
push
dec
mov
insb
add
pop
dec
fiadds
and
test
repz
sub
xor
mov
test
sbb
pop
int3
dec
hlt
xor
adc
lods
xchg
jne
nop
inc
fs
pop
inc
ljmp
push
cmc
pushf
xchg
das
imul
pop
sub
out
and
es
jmp
push
dec
jnp
mov
or
addl
xor
leave
add
test
adc
mov
jp
test
cmp
xor
lods
jbe
push
add
and
in
adc
mov
dec
xchg
push
push
fisubrs
mov
inc
mov
sbb
add
idivl
aam
jle
addb
cmp
and
mov
jns
sbb
into
icebp
dec
inc
arpl
dec
ljmp
ret
and
test
xchg
insb
cld
in
sub
rcl
ja
jae
push
rcr
mov
push
jle
rcrb
fisubl
aas
xchg
rorl
push
fildl
inc
xor
test
notl
mov
ja
sti
icebp
xor
pop
lds
mov
or
outsl
xchg
movb
insb
sbb
xchg
inc
inc
lea
ret
push
loop
push
lea
mov
dec
stc
clc
popf
adc
jmp
adc
cmp
rcrb
int
sahf
insl
push
repnz
ficoms
jb
rclb
test
ljmp
or
movsb
adc
pusha
mov
iret
sbb
enter
inc
out
das
mov
xchg
inc
aaa
dec
inc
aad
pop
mov
out
lahf
inc
arpl
adc
push
fsubrp
not
cmpb
jge
stos
jo
cmp
mov
call
test
ja
out
jge
fxch
scas
rcrl
lret
aas
add
adc
ds
jns
scas
mov
repnz
pop
jle
popf
add
mov
das
leave
sbb
pop
insb
jns
mov
and
gs
in
cmp
inc
mov
jl
add
push
add
jp
push
and
xor
ljmp
aaa
sahf
pop
push
leave
jecxz
es
xchg
mov
rcrl
sbb
cmp
push
jle
or
scas
repnz
ss
lahf
enter
jl
test
xor
arpl
fisubrs
push
xchg
popl
ss
pop
jnp
subl
jb
out
add
gs
ret
sbb
push
push
mov
push
subb
adc
mov
mov
lods
and
jecxz
mov
scas
push
sub
jmp
sbb
lods
push
roll
mov
mov
das
gs
cmovs
push
xacquire
or
cmp
jmp
pop
loope
lret
inc
jg
jb
adc
and
mov
rolb
sbb
push
push
xor
cmp
and
negb
fcmove
addr16
in
dec
inc
or
sahf
lea
sub
imul
jl
in
mov
sbb
mov
mov
add
and
jae
adc
insl
adc
pop
push
inc
jmp
cmp
in
sub
int
and
dec
sbb
cmp
push
movsl
dec
push
stos
mov
clc
fwait
rcrb
inc
cli
xchg
cmpsl
mov
cmp
mov
pop
or
int
inc
xchg
xor
lods
add
lret
xchg
mov
call
sbbb
clc
adc
mov
xlat
pop
xchg
pop
jae
rorl
insl
mov
dec
test
das
and
fadds
sbb
popa
lods
xor
dec
call
xor
dec
call
xor
dec
call
xor
dec
call
xor
dec
call
xor
dec
call
xor
dec
call
xor
dec
call
xor
dec
call
xor
dec
call
xor
dec
call
sti
fld
xchg
sti
clc
mov
adc
cs
or
icebp
pusha
xor
xchg
cmp
in
cmp
push
jmp
shlb
mov
push
xor
sahf
or
mov
mov
test
pop
gs
xor
mov
test
mov
fdivrl
stos
aaa
sbb
rcr
mov
and
leave
lock
jle
or
adc
les
add
js
fcmovbe
pop
dec
dec
test
jno
jmp
movsb
xchg
mov
cli
in
mov
mov
fs
call
cmc
cld
into
jecxz
sbb
shlb
bound
aas
pop
mov
jl
mov
push
cmpsl
cmp
repnz
xchg
lods
push
stos
movsb
les
int3
push
iret
push
xchg
cs
fwait
dec
lea
adc
fs
repz
enter
jbe
movsl
push
sti
cmp
jge
and
cwtl
pop
addr16
cld
fwait
sbbb
bound
fstl
and
mov
loope
outsb
ficomps
and
insb
aam
imul
inc
fs
dec
mov
lcall
fistps
insb
aad
push
adc
ds
cwtl
or
cmc
test
pop
loop
add
mov
sub
nop
lods
cmp
inc
cmc
stos
imul
cwtl
jnp
out
cmpb
cwtl
lods
out
aas
lcall
stc
fsub
sbb
test
js
and
xchg
push
pop
fdivrs
and
rorb
das
add
cmpsl
clc
mov
icebp
hlt
shll
dec
dec
arpl
inc
fwait
shrl
sbb
pop
push
xor
hlt
pushf
mov
sbb
xchg
add
lock
outsl
add
int3
outsl
dec
rorb
addl
cs
add
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
inc
add
add
add
add
fsubrs
cld
jge
out
repz
xor
icebp
xchg
and
in
mov
lds
dec
cmp
or
xchg
mov
insb
les
in
les
xchg
test
int
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
jne
dec
jb
xor
add
int
movsl
add
add
stos
leave
fdivs
enter
xlat
add
scas
dec
call
call
dec
call
call
add
add
rcl
movl
fdivs
xlat
lods
leave
add
leave
leave
add
add
stos
leave
fdivs
leave
lods
ror
movsl
add
add
mov
rcl
rol
add
add
mov
leave
leave
add
rcr
leave
fadds
add
mov
lret
ror
add
add
add
fmul
rcl
xchg
enter
add
mov
shlb
leave
xlat
xlat
cmpsb
fxch
lret
add
add
rcl
aam
leave
xlat
xlat
cmpsb
fxch
lret
add
fsubs
leave
xlat
xlat
int
sarb
aam
leave
mov
fmulp
add
or
add
add
pop
add
addb
add
nop
add
addb
add
add
addb
add
addb
orb
add
mov
add
add
add
add
add
adcb
add
add
add
add
add
add
add
adcb
add
add
adcb
add
pusha
add
adcb
add
js
add
add
adc
add
add
nop
add
addb
add
test
add
rolb
addb
add
add
addb
add
or
add
and
add
cmp
add
push
add
orb
add
push
add
add
add
add
add
add
add
add
add
orb
add
loopne
add
clc
add
adcb
add
adc
adcb
add
sub
addb
add
pop
add
add
add
cwtl
add
andb
add
add
andb
add
add
add
add
xchg
add
add
add
add
add
add
add
add
push
push
add
test
add
add
add
pop
add
add
pop
add
add
add
hlt
add
add
pop
add
xor
add
dec
pop
add
add
add
enter
pusha
pop
add
js
add
add
add
add
add
nop
pop
add
add
add
or
add
add
add
add
add
add
add
add
add
pop
add
or
add
pop
add
or
add
pop
add
or
add
pop
add
or
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
sbb
add
pop
add
add
or
add
add
add
or
add
add
dec
or
add
add
add
add
adc
add
add
adc
add
add
add
add
mov
add
or
add
add
add
add
test
add
pop
add
add
add
add
or
add
add
fmuls
add
adc
add
or
add
add
add
or
add
add
add
or
add
add
sbb
add
or
add
or
add
add
add
add
cmp
add
pop
add
add
add
or
add
add
or
add
push
add
add
add
adc
add
add
add
or
add
or
add
add
add
add
enter
pop
add
add
or
add
add
add
or
add
add
clc
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
cmp
add
or
add
or
add
add
pop
or
add
add
add
add
or
add
add
or
add
mov
add
adc
add
add
add
add
add
or
add
or
add
or
add
or
add
add
add
add
call
add
add
or
add
add
add
or
add
add
sbb
add
add
add
or
add
add
add
or
add
add
add
add
add
add
pop
or
add
or
add
or
add
add
js
add
pop
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
call
or
add
or
add
add
add
add
or
add
sbb
add
sub
add
cmp
add
dec
or
add
pop
or
add
push
or
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
or
xor
add
inc
mov
add
and
add
pop
mov
add
cmp
add
add
add
fisttpl
add
add
cmp
or
push
add
add
add
add
add
add
or
add
icebp
or
test
add
fadds
or
push
add
add
add
add
or
test
add
call
and
add
add
add
sbb
add
inc
or
push
add
add
add
add
add
add
dec
or
call
add
add
add
add
dec
or
test
add
mov
adc
add
or
push
add
add
add
add
push
add
pop
jns
add
add
add
add
add
or
addb
add
add
add
aam
add
add
add
or
dec
add
add
mov
add
enter
rolb
add
jecxz
add
add
add
or
xchg
add
sub
or
add
add
fimull
add
add
add
add
add
add
add
or
and
add
add
add
loopne
or
inc
add
add
loope
add
add
add
add
or
hlt
add
add
fisttpl
add
add
cwtl
cmpsl
or
pushf
add
add
add
add
or
nop
mov
add
sub
or
js
add
and
or
js
add
rcl
add
add
pop
les
add
add
add
add
dec
fmull
add
add
add
test
add
add
add
or
xor
add
or
add
mov
add
mov
add
add
add
add
aad
add
add
add
les
add
add
lock
add
add
add
add
add
stos
or
cmpsb
add
add
xlat
or
cmpsb
add
add
add
add
mov
add
mov
or
sahf
add
add
add
add
xlat
or
cmpsb
add
add
or
scas
add
add
add
add
add
add
fmuls
add
add
add
or
mov
add
add
add
add
rorb
mov
add
sub
or
bound
add
xor
or
inc
add
add
add
add
lret
into
add
add
add
add
out
or
or
add
sub
or
add
add
pop
icebp
or
push
add
add
hlt
or
or
add
or
or
cld
add
add
add
add
cli
or
out
add
add
testb
push
add
add
sti
or
rolb
add
xor
or
add
add
js
or
stos
add
add
or
or
add
jo
or
lods
add
add
testl
add
add
add
cli
or
loopne
add
xor
or
test
add
mov
add
adc
add
mov
add
jo
or
adc
add
nop
cmp
add
add
add
add
add
add
adc
or
test
add
test
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
loop
add
add
xor
xor
xor
cmp
xor
xor
bound
xor
add
inc
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
add
add
sub
and
dec
add
arpl
add
add
add
and
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
push
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
add
add
add
xor
xor
add
add
xor
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
aaa
add
xor
sub
xor
xor
sub
xor
add
add
pop
add
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
imul
add
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
add
add
daa
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
add
add
add
add
add
add
popa
add
jb
outsl
add
add
add
sub
and
dec
add
arpl
add
add
add
sbb
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
add
add
popa
add
jb
outsl
add
add
add
and
inc
add
add
push
add
add
add
add
dec
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
inc
add
add
push
add
jns
add
add
js
add
add
adc
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
push
add
outsl
add
imul
add
jbe
add
add
insb
add
jae
push
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
aaa
add
xor
sub
xor
xor
sub
xor
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
add
pop
add
outsl
add
and
add
outsb
add
add
add
dec
pop
add
outsl
add
and
add
jne
je
add
add
dec
dec
add
add
add
add
add
push
add
outsl
add
add
and
inc
add
add
add
add
jne
popa
add
add
add
add
add
add
add
add
add
inc
dec
add
add
add
insl
add
add
add
imul
add
inc
dec
add
insb
add
jns
add
add
dec
dec
add
add
jo
add
cmp
add
add
imul
add
add
dec
dec
add
outsl
add
ja
popa
add
add
add
add
add
popa
add
imul
add
add
dec
add
jbe
imul
outsb
add
je
and
insb
add
popa
add
add
add
add
add
add
add
add
add
outsb
add
jae
add
add
add
add
push
add
add
outsb
add
add
add
add
add
bound
outsl
add
je
and
push
add
push
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
add
add
add
add
loope
add
add
add
add
loope
add
outsl
add
jns
add
add
and
add
jae
je
add
add
add
loope
add
add
add
add
add
insb
add
arpl
je
and
add
insb
add
add
add
add
add
add
add
add
add
addb
loope
add
outsl
add
jns
and
insb
add
outsb
add
add
adc
add
imul
add
add
and
add
jo
add
add
add
add
add
je
jb
insb
add
add
add
add
push
dec
add
insb
add
jae
add
add
je
jb
insb
add
add
add
push
dec
push
add
imul
add
add
add
add
inc
add
add
add
je
add
add
jb
outsl
add
add
je
outsl
add
add
add
add
add
add
imul
inc
add
add
add
add
adc
add
imul
add
add
dec
dec
xor
xor
xor
and
add
push
add
outsl
add
and
add
insb
add
add
pop
add
outsl
add
and
add
outsb
add
add
add
dec
pop
add
outsl
add
and
add
jne
je
add
push
dec
inc
add
insb
add
add
add
arpl
jb
add
outsb
add
add
je
jb
insb
add
add
nop
add
jne
popa
add
add
add
add
add
dec
add
ja
add
add
inc
dec
dec
add
add
jne
insl
add
add
add
imul
and
push
add
popa
add
add
add
add
je
jb
insb
add
add
add
adc
add
outsl
add
je
jb
outsl
add
add
add
add
insb
add
jns
or
inc
add
add
add
outsb
add
add
add
add
cmp
add
add
imul
or
inc
add
add
add
add
dec
dec
push
add
add
and
add
outsl
add
ja
popa
add
add
add
je
jb
insb
add
add
add
add
push
add
add
and
add
popa
add
imul
add
je
jb
insb
add
add
sub
add
add
add
add
add
jo
add
nop
add
add
add
add
add
add
outsl
add
je
and
push
add
push
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
add
add
add
add
add
add
add
add
add
add
add
imul
add
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
or
dec
add
and
push
add
outsb
add
and
push
add
jb
imul
add
add
add
add
add
add
add
incl
add
add
add
add
add
push
add
add
pop
add
add
adc
incl
add
add
add
push
add
add
and
pop
add
incl
add
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
ja
ja
add
popa
add
jb
outsl
add
add
add
add
outsl
add
add
add
add
add
add
add
add
add
incl
add
jns
jb
imul
je
and
sub
inc
add
add
add
add
add
add
add
add
add
add
add
popa
add
jb
outsl
add
add
add
sub
and
dec
add
arpl
add
add
add
add
add
addb
add
push
add
add
add
add
add
add
dec
add
add
add
or
dec
add
and
push
add
outsb
add
and
push
add
jb
imul
add
add
add
add
add
add
add
add
add
incl
add
add
and
je
push
add
outsl
add
insb
add
add
imul
and
push
add
bound
and
insb
add
arpl
popa
add
add
outsb
add
add
add
push
add
add
add
jb
and
jae
jo
add
imul
and
je
push
add
add
popa
add
add
imul
and
jns
outsl
add
and
ja
outsl
add
insb
add
add
add
add
add
add
add
jo
add
add
add
add
add
push
add
add
pop
add
add
add
add
incl
add
popa
add
add
outsb
add
add
add
add
add
add
add
add
add
incl
add
add
add
push
add
add
add
xor
push
add
add
incl
add
push
add
add
imul
push
add
add
incl
add
arpl
add
add
add
add
add
push
add
add
mov
add
add
add
incl
add
outsl
add
jae
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
incl
add
cmp
addb
add
add
addb
stc
addb
clc
addb
testl
push
incl
add
incl
push
incl
add
add
hlt
clc
mov
clc
xchg
add
incl
mov
clc
js
xorb
idivb
clc
pop
ja
outsl
xchg
inc
jo
ja
addr16
hlt
addb
jbe
add
hlt
inc
inc
ja
add
jg
inc
ja
xchg
add
data16
jbe
jo
or
ja
divb
add
outsl
clc
xchg
jg
js
ljmp
jo
ja
clc
push
clc
data16
clc
pop
push
out
loopne
clc
pop
rolb
pop
addb
add
add
add
add
add
pop
rolb
pop
loopne
sub
add
adc
add
and
add
add
or
add
add
incl
div
clc
add
out
add
and
loopne
loop
faddl
cli
clc
clc
cmp
std
add
sti
sti
add
cli
cli
add
fcmovnu
jmp
jmp
fcmovnu
jmp
aad
jmp
fcmovnu
mov
fcmovu
xlat
add
repnz
push
lock
ja
jecxz
clc
loop
neg
ror
pop
loopne
xchg
in
jmp
stc
div
addr16
hlt
adc
lret
lret
movl
call
xchg
loope
in
fisttpll
fcmovne
aad
inc
loope
xlat
clc
loopne
jg
jmp
in
ja
in
ljmp
push
add
mov
mov
mov
rcl
roll
int3
les
aad
ret
leave
roll
fcmovbe
add
iret
enter
into
add
ror
and
sub
ffree
fst
shl
in
call
jecxz
call
jecxz
or
movsl
xchg
addb
lahf
nop
in
mov
test
into
mov
mov
into
shlb
rol
mov
xlat
aam
mov
lret
ret
int
shl
loope
add
fcmovnbe
mov
aam
roll
fst
sar
in
out
add
in
std
in
fildl
jecxz
loop
flds
loope
fdivr
add
jmp
cli
mov
lea
nop
jg
test
fwait
mov
stos
cltd
mov
mov
xchg
add
lods
popf
add
mov
lods
hlt
rol
mov
rol
mov
add
rol
repnz
lret
sarb
lret
add
aad
out
inc
and
add
in
jnp
push
add
push
fnstsw
add
subb
xchg
xchg
xorl
mov
sahf
mov
cmpsl
xchg
test
rolb
fcmovnbe
int
xlat
ror
add
fcom
sti
in
fildl
jecxz
fsqrt
aad
out
ljmp
in
jmp
in
ljmp
add
add
push
push
cmp
push
cmp
imul
insb
push
add
aas
rep
pop
inc
add
inc
bnd
dec
add
dec
icebp
jp
dec
add
lock
mov
test
add
jle
add
sahf
mov
ret
mov
mov
cltd
mov
dec
sub
mov
sub
add
aas
or
push
cmp
xorl
mov
movsb
add
enter
lds
cli
dec
sub
add
add
push
xor
add
add
dec
sub
add
push
xor
add
psadbw
push
add
and
push
aas
and
push
ds
push
cmp
add
sub
push
cmp
js
repnz
mov
scas
movsl
cltd
add
lock
das
add
inc
sub
add
add
cmp
add
push
xor
ficomps
add
pop
ss
push
xor
add
push
xor
inc
das
push
int3
aas
sub
mov
addr16
and
insl
push
sub
dec
cmp
add
aaa
cld
lea
add
pop
dec
add
push
cli
jg
pop
add
test
add
mov
clc
sahf
xchg
addl
lahf
xchg
negl
add
mulb
or
gs
or
add
sbb
jno
pop
add
repz
and
js
and
jne
and
jbe
and
jae
and
ja
and
ja
add
jae
add
xor
xchg
jle
add
pop
adc
jmp
incb
cld
cld
sti
jmp
std
std
std
out
out
out
add
fstp
jecxz
add
add
jge
js
js
loop
add
add
add
cwtl
bound
add
add
js
sbb
jmp
add
sbb
jl
add
add
jl
sbb
add
jl
add
nop
push
jnp
mov
mov
add
nop
add
sbb
push
jbe
mov
add
incl
js
sbb
add
push
jbe
testb
and
xor
add
jbe
mov
mov
incl
nop
nop
sbb
add
add
out
mov
add
push
nop
js
and
clc
ljmp
js
add
add
add
bound
incl
js
nop
push
add
add
adc
and
nop
add
js
push
and
adc
ljmp
nop
jnp
push
add
and
scas
das
jnp
add
add
add
jge
inc
inc
inc
jge
js
add
add
add
add
nop
nop
nop
js
add
add
clc
pop
push
out
loopne
clc
pop
rolb
pop
addb
add
add
add
add
add
pop
rolb
pop
loopne
sub
add
adc
add
and
add
add
and
incl
incl
incl
incl
xchg
subl
xchg
subl
xchg
subl
xchg
subl
incl
incl
incl
incl
incl
incl
jae
inc
and
inc
mov
out
out
out
out
out
out
jmp
call
pop
inc
mov
inc
and
incl
incl
incl
jae
inc
and
inc
mov
ror
out
out
out
fstp
loop
fdivr
loop
fdivr
loop
fdivr
out
out
out
out
out
out
call
pop
inc
mov
incl
incl
jae
inc
mov
jnp
call
add
dec
sub
call
out
out
fcmovnbe
into
jmp
jmp
jmp
out
out
out
call
pop
inc
mov
incl
xorb
jg
push
cmc
ror
decl
add
push
xor
decl
add
xchg
jg
fcmovnbe
into
jmp
jmp
jmp
fcmovnbe
iret
incl
pop
inc
xorb
aam
sar
ror
fcmovnbe
into
call
lret
decl
add
push
xor
call
add
shll
jmp
jmp
jmp
jmp
fcmovnu
inc
mov
incl
jo
fcmovnbe
into
fcmovnbe
into
jmp
jmp
loopne
call
lret
decl
add
push
xor
pop
jmp
jecxz
jmp
jmp
call
enter
jo
movl
loopne
push
cmc
hlt
decl
add
pop
cmp
lcall
add
push
xor
call
add
out
jmp
jmp
jmp
call
int
incl
jo
lock
iret
ljmp
dec
ret
dec
es
bound
or
pop
cmp
out
jmp
jmp
jmp
call
int3
incl
jo
aad
ret
loop
push
repnz
decl
add
sbbb
jo
pop
inc
mov
leave
jmp
jmp
dec
mov
pop
movl
fcmovbe
out
jmp
cli
stc
clc
ljmp
cmp
incl
mov
in
fdivrp
loop
fdivr
xlat
decl
jo
lea
push
cmc
int3
jmp
loopne
push
in
jmp
stc
div
std
std
std
push
bnd
adc
incl
pop
adc
in
fdivrp
aam
sar
push
cmc
xorb
incl
jae
inc
mov
iret
enter
in
call
in
push
icebp
out
call
ror
decl
add
dec
es
sbbb
int
mov
mov
pushl
inc
mov
incl
incl
jae
inc
and
inc
mov
ret
mov
call
enter
fstp
jmp
loopne
jmp
int
ret
mov
pushl
jbe
pushl
inc
mov
incl
incl
incl
jae
inc
and
inc
mov
push
cmc
xchg
subl
les
stos
jmp
subl
jae
inc
mov
inc
and
incl
incl
incl
incl
incl
incl
jae
inc
inc
jae
inc
lea
inc
jae
inc
lock
inc
lock
inc
jae
inc
lea
inc
inc
incl
incl
incl
incl
lock
rolb
js
add
addb
add
add
loop
add
add
add
cwtl
add
add
add
js
add
jmp
add
sbb
add
add
addb
jnp
add
add
add
vmread
sub
add
and
add
inc
add
add
add
adc
add
add
add
incl
add
incl
addb
addb
xchg
addb
xchg
addb
xchg
add
add
incl
add
incl
incl
incl
add
incl
clc
xchg
ja
ljmp
add
add
pop
xchg
incl
add
add
push
xchg
ja
ja
ja
js
decl
ja
ja
ja
mov
ljmp
decl
ja
ja
ja
push
xchg
inc
incl
ja
outsl
decl
dec
clc
pop
ja
ja
ja
ljmp
ja
hlt
hlt
ja
ja
ja
xchg
jmp
ja
or
dec
xorb
ja
jbe
clc
xchg
ja
popl
ja
ja
js
testb
hlt
clc
pop
ja
ja
js
testb
hlt
inc
inc
inc
xorb
outsl
testb
hlt
inc
inc
dec
xorb
outsl
testb
outsl
inc
inc
dec
xorb
outsl
testb
popl
xorb
outsl
testb
add
dec
ja
ja
js
clc
push
add
inc
inc
jo
ja
js
ljmp
jo
add
pop
mulb
ja
xchg
ljmp
jo
add
add
xchg
incl
add
je
fs
push
ja
add
add
inc
xchg
ljmp
ja
add
add
inc
ja
incl
add
pop
mov
push
imulb
ja
ja
ja
ja
outsl
incl
ja
js
push
jmp
mov
mov
clc
data16
incl
push
ud0
addb
incl
add
cld
add
aas
clc
add
pop
lock
add
pavgb
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
lock
add
psubb
add
cld
add
aas
incl
add
incl
ud0
ljmp
add
add
add
add
add
add
or
add
add
incl
div
clc
add
out
add
and
loopne
loop
faddl
cli
clc
clc
cmp
std
add
sti
sti
add
cli
cli
add
fcmovnu
jmp
jmp
fcmovnu
jmp
aad
jmp
fcmovnu
jmp
fcmovu
xlat
push
repnz
push
lock
call
fstp
jmp
fcmovnbe
into
clc
loopne
ja
in
jmp
stc
div
push
cmc
hlt
push
ror
jmp
push
jmp
xchg
loop
add
loope
push
in
fdivl
into
lds
aad
js
fcmovnbe
jmp
fcmovbe
js
jmp
in
ja
in
ljmp
push
add
cmpsl
cltd
ja
mov
mov
ja
lret
aad
sar
int3
les
aam
shll
sar
fmul
enter
into
ja
ror
ja
jmp
roll
ljmp
ja
jecxz
inc
in
fidivs
xchg
xor
lahf
nop
ja
mov
test
into
mov
mov
into
shlb
rol
mov
add
enter
lret
lret
ret
int
add
loope
inc
loope
ja
fcmovbe
neg
add
fcom
inc
fst
shlb
out
imul
in
add
inc
jecxz
fidivl
fstp
clc
loope
fadds
inc
lock
ja
mov
mov
nop
jg
test
fwait
mov
stos
cltd
mov
mov
xchg
test
lods
popf
mov
mov
lods
jo
ret
rol
mov
pop
fcmovnbe
movb
sarb
lret
iret
ja
and
add
js
push
jg
push
xchg
ja
jns
xchg
xchg
xchg
xorl
mov
sahf
mov
cmpsl
xchg
test
xlat
shlb
aam
call
ror
sar
in
fcompp
aad
out
ljmp
in
jmp
in
ljmp
decl
add
push
push
cmp
push
cmp
imul
insb
push
ds
insl
push
aas
clc
outsb
pop
inc
lock
inc
lock
dec
loopne
arpl
gs
sarb
subb
mov
test
orb
push
lea
mov
mov
mov
pushf
shlb
mov
dec
sub
loopne
sub
lock
sub
or
push
cmp
xorl
mov
movsb
dec
enter
lds
add
add
push
xor
lock
cs
dec
sub
add
push
xor
push
pop
cmp
insb
push
cmp
andb
adcb
in
ds
push
cmp
jg
inc
sub
js
jae
xorl
scas
movsl
cltd
in
sub
add
dec
das
add
inc
sub
push
xor
dec
cmp
add
xor
sbbb
int
ss
push
xor
add
push
xor
inc
das
push
jae
sub
mov
push
ret
addr16
and
insl
push
sub
dec
cmp
in
push
aaa
mov
outsl
pop
dec
mov
push
jae
jno
jae
xchg
jp
mov
mov
lcall
lahf
xchg
jae
cmp
xchg
popa
aas
or
push
adc
cmpsb
jno
pop
xchg
je
and
push
and
push
and
push
and
jbe
and
jae
and
ja
and
ja
incl
jae
jae
dec
xor
jle
jae
cmpsl
mov
pop
adc
out
jae
jae
cld
sti
jae
std
std
std
out
out
out
fstp
bound
cwtl
jge
bound
add
sbb
cwtl
cwtl
bound
cwtl
jl
add
adc
add
adc
add
inc
xor
adc
and
and
and
and
cwtl
bound
add
nop
popf
negl
and
add
sbb
and
sbb
sbb
sbb
sbb
jl
add
fisubs
sbb
lcall
and
sbb
and
sbb
sbb
cwtl
nop
das
sbb
fisubrs
jbe
shll
lcall
and
lcall
and
sbb
sbb
nop
add
add
add
add
xchg
stos
in
jbe
jl
and
and
and
and
and
xor
nop
add
add
add
das
sbb
and
in
das
and
sbb
sbb
sbb
sbb
sbb
jl
add
add
nop
jl
sbb
and
dec
jnp
stos
mov
mov
add
sbb
sbb
sbb
sbb
sbb
add
add
sbb
and
jbe
adc
sbb
sbb
and
loope
add
add
loope
sbb
sbb
sbb
add
stos
mov
mov
add
add
and
and
sbb
inc
jl
add
nop
jnp
and
sbb
sbb
and
bound
add
jmp
sbb
and
sbb
jl
add
nop
jl
sbb
and
add
add
add
mov
mov
mov
and
sbb
xor
add
nop
jge
sbb
and
add
in
out
mov
jbe
and
and
sbb
bound
inc
sbb
and
add
xchg
mov
mov
mov
in
and
sbb
and
inc
nop
add
nop
jnp
sbb
and
add
inc
aam
out
out
stos
cwtl
and
sbb
sbb
jge
add
nop
pushf
inc
xor
and
add
and
sbb
and
sbb
add
jnp
add
js
inc
sbb
and
adc
add
popf
mov
and
add
and
sbb
pushf
js
add
nop
jge
sbb
adc
add
push
aam
ljmp
sbb
inc
nop
add
add
nop
pushf
das
xor
and
add
popf
aam
jmp
jl
and
sbb
inc
jnp
add
add
js
jge
xor
and
add
cmc
shr
ljmp
inc
ja
add
add
add
add
and
add
rcl
ljmp
nop
add
add
add
add
jmp
add
and
adc
rcl
ljmp
add
add
add
js
js
xor
sbb
and
and
and
and
inc
jnp
js
jnp
js
nop
ja
jge
xor
sbb
sbb
sbb
add
xor
jnp
nop
add
add
ja
inc
das
dec
xor
push
xor
xor
inc
mov
add
nop
nop
ja
jge
das
das
das
das
inc
jge
cwtl
nop
nop
add
nop
nop
ja
cwtl
js
ja
nop
nop
js
js
nop
nop
nop
nop
nop
js
add
add
push
ud0
addb
incl
add
cld
add
aas
clc
add
pop
lock
add
pavgb
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
lock
add
psubb
add
cld
add
aas
incl
add
incl
ud0
ljmp
add
add
add
add
add
add
and
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
or
add
adc
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
add
add
add
add
add
inc
add
add
add
push
add
add
add
dec
add
add
add
cmp
add
das
add
add
add
add
add
add
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
add
and
sub
dec
push
dec
aas
mov
dec
mov
xorl
mov
cli
mov
sti
xorl
js
pop
fldcw
dec
mov
and
outsl
add
add
add
cmp
add
and
add
sldt
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
adc
pop
pop
inc
push
inc
cmpsl
ja
dec
in
xchg
jge
ljmp
mov
call
int
jmp
jmp
fcmovnbe
iret
dec
ret
mov
lcall
gs
repz
inc
xor
and
adc
add
push
add
add
add
add
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
pop
dec
ds
jl
popa
dec
call
mov
aam
push
out
ljmp
sti
clc
idiv
in
out
dec
ret
mov
js
dec
hlt
inc
aaa
sub
add
add
add
sbb
add
push
incl
incl
incl
incl
incl
incl
incl
add
add
add
pop
pop
dec
cmp
pushf
call
mov
in
in
in
call
out
jmp
in
call
jecxz
jmp
call
in
in
call
loope
loope
sar
shlb
lcall
xor
push
or
insb
add
add
add
sbb
add
add
incl
incl
incl
incl
add
add
add
dec
cmp
mov
into
loope
jmp
in
jmp
fcmovnbe
fst
sar
fst
sar
sar
sar
fst
sar
fst
sar
fst
sar
sar
aam
loopne
sar
fst
lret
dec
mov
outsl
lcall
aaa
or
add
aas
add
add
add
add
incl
incl
incl
incl
add
add
pop
dec
cmp
cmpsl
xchg
mov
jb
lcall
mov
leave
jmp
fcmovbe
aad
aad
aad
aam
aam
aam
aam
aam
sar
fmul
vshufps
call
xor
add
add
add
xor
add
push
incl
incl
incl
add
add
push
inc
xor
push
std
mov
nop
call
mov
jge
pop
pushl
adc
incl
add
inc
and
call
pop
jmp
in
jmp
aad
loopne
aad
loopne
aad
aad
aad
aam
aam
aam
fmul
mov
jno
incl
and
add
add
add
and
add
add
incl
sub
sbb
outsb
pop
inc
fstps
mov
sar
in
insl
pop
dec
incl
add
push
xor
call
add
dec
sub
incl
add
xchg
subl
in
loope
xlat
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
aad
aam
aam
aam
sar
aam
mov
pushl
inc
hlt
sbb
ja
add
cmp
add
adc
incl
add
add
dec
xor
mov
iret
jmp
fcmovbe
jmp
loope
pushl
push
cmp
pop
cmp
add
dec
sub
call
add
dec
sub
incl
add
scas
mov
out
loopne
fdivr
loopne
xlat
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
aad
aad
aam
aad
int
leave
mov
push
mov
add
add
add
add
push
inc
and
rcrb
mov
sar
aam
loope
xlat
jmp
fstp
dec
les
pushl
and
call
decl
add
pop
cmp
jmp
jmp
fcmovu
jmp
fcmovu
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
aad
aad
aam
aam
leave
sar
lcall
pop
sbb
das
add
add
jae
dec
bound
dec
cld
mov
nop
fmul
aad
aam
aad
loopne
jmp
loope
push
in
jmp
cmpsl
sahf
xchg
pushl
push
add
dec
sub
call
add
inc
and
call
jmp
jmp
fcmovu
jmp
fcmovu
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
aad
aam
aad
fcmovnbe
lret
inc
mov
incl
cmp
add
add
adc
push
xchg
test
inc
mov
fcmovnbe
int3
aad
aam
aad
aad
aad
loopne
xlat
out
ljmp
xor
add
push
xor
add
pop
cmp
lret
jmp
loope
jmp
jmp
jmp
jmp
fcmovnbe
jmp
fcmovbe
aad
aam
aad
fst
sar
int3
mov
push
pop
dec
inc
mov
add
add
mov
dec
mov
sar
aad
aam
aam
loopne
aad
loop
fcos
jecxz
fdivr
call
iret
lret
sub
decl
lcall
add
dec
sub
jmp
in
jmp
fcmovnu
jmp
fcmovnu
jmp
fcmovnu
jmp
jmp
fcmovnu
aad
aad
aam
sar
rol
mov
ljmp
dec
flds
add
dec
add
add
jnp
push
jecxz
subb
mov
sar
aam
sar
out
fdivrp
repz
lock
cld
cld
sti
std
std
cld
cld
cld
cld
cli
sti
incl
sbb
lcall
call
add
pop
cmp
imul
jmp
lcall
sbb
xchg
subl
aad
aam
aam
aad
mov
pushl
out
add
add
add
sbb
push
clc
xchg
xorb
shll
aam
out
cmc
repnz
std
std
std
dec
leave
ret
and
push
ss
pop
cmp
pop
xor
add
push
cs
push
sub
add
xchg
jmp
jecxz
aad
aam
aam
aad
sar
xchg
test
js
dec
sti
add
add
add
sbb
dec
clc
xchg
jg
dec
mov
sar
loop
fcos
jmp
out
hlt
icebp
lock
sti
sti
sti
std
std
std
ljmp
inc
decl
add
fs
or
pop
cmp
call
add
push
xor
decl
add
mov
jmp
jecxz
aad
aam
aam
aam
mov
pushl
dec
cli
add
add
add
sbb
dec
jecxz
js
dec
mov
int
jecxz
ljmp
cli
stc
clc
ljmp
xor
adc
arpl
lcall
pop
jmp
push
call
or
aas
es
test
call
fcmovbe
aad
aam
sar
rol
mov
pushl
inc
in
add
add
add
adc
subl
fmul
fcmovnbe
call
in
jmp
clc
div
jmp
loope
call
sub
imul
outsl
dec
sbb
pusha
cmp
ja
xlat
ror
inc
sarl
fstp
aad
aam
aad
fst
sar
lret
mov
jmp
inc
xlat
add
add
add
adc
inc
xchg
jne
dec
ljmp
mov
jmp
loope
in
jmp
lock
sti
cli
cli
incl
cmp
js
and
insl
dec
pop
incl
call
aad
aad
aam
aad
fcmovbe
leave
mov
push
lcall
cmp
add
add
outsl
pop
inc
pop
insl
push
aas
repz
xorl
mov
leave
jmp
fstp
jmp
in
jmp
div
repz
std
cld
sti
dec
leave
ret
decl
sbb
outsb
push
and
js
and
outsb
dec
push
lcall
in
jmp
loopne
aam
aam
sar
aam
mov
pushl
inc
decl
sub
push
add
add
pop
inc
sbb
cmp
mov
xchg
call
leave
mov
jmp
loopne
jmp
in
repnz
in
push
cmc
repz
std
sti
sti
incl
cmp
pushl
and
jo
sbb
xchg
jle
call
leave
mov
jmp
aad
fcmovnbe
lret
inc
mov
decl
dec
xor
sub
sbb
add
push
incl
incl
addr16
cmp
push
inc
xchg
subb
mov
jmp
jmp
loope
jmp
in
icebp
out
jmp
div
repnz
cli
clc
clc
std
cld
cld
jmp
lcall
sub
js
and
jbe
and
jo
sbb
ja
and
test
inc
mov
jmp
loopne
call
ret
mov
pushl
inc
incl
and
add
add
incl
incl
incl
push
pusha
dec
jmp
ret
fxch
jmp
fcmovbe
jmp
loope
ljmp
push
lock
push
repz
div
stc
div
inc
mov
and
pushl
and
js
and
je
and
insb
dec
adc
mov
mov
into
pushl
imul
dec
xor
adc
or
add
add
incl
incl
incl
incl
dec
ss
imul
ljmp
ret
mov
sar
in
fdivr
call
out
in
ljmp
lock
jmp
lock
jmp
stc
div
dec
lds
call
pop
jmp
sbb
outsb
dec
sbb
jb
pop
inc
mov
inc
mov
decl
push
cmp
cmp
sbb
add
add
add
add
incl
incl
incl
incl
incl
arpl
dec
imul
imul
mov
ret
fcmovnbe
into
jmp
fcmovnbe
jmp
jmp
loope
jmp
jecxz
call
in
jmp
jecxz
out
jmp
jmp
ljmp
jno
ljmp
cmp
mov
jne
ljmp
decl
and
adc
add
add
incl
incl
incl
incl
incl
incl
incl
gs
xor
push
cmp
jp
push
lcall
mov
call
lds
fcmovbe
lret
fst
sar
aam
loopne
aad
loopne
aad
aad
sar
fst
iret
jmp
fst
leave
dec
ret
mov
cltd
incl
push
cmp
push
cmp
xchg
add
add
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
arpl
addr16
cmp
jb
inc
decl
xchg
test
shlb
call
mov
call
lret
ret
lret
ret
lret
aam
mov
inc
mov
ljmp
jl
pushl
dec
jmp
ss
dec
cmp
jl
add
sldt
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
gs
xor
gs
xor
push
cmp
jae
inc
incl
jno
cmpsl
xchg
test
mov
xchg
mov
cmpsl
cltd
pushl
mov
pushf
mov
mov
jbe
dec
ljmp
cmp
pop
inc
das
les
and
add
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
arpl
arpl
dec
aaa
ljmp
inc
pushl
dec
jns
dec
jp
dec
pushl
dec
pushl
inc
ljmp
notrack
ss
inc
cs
add
add
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
imul
push
cmp
push
cmp
push
cmp
imul
lret
addr16
cmp
arpl
jnp
dec
xor
sbb
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
inc
add
incl
add
add
aas
clc
add
pop
lock
pavgb
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
pop
lock
psubb
add
cld
add
aas
incl
add
incl
add
xor
add
pusha
add
add
add
adc
add
add
add
incl
add
incl
addb
addb
incl
rol
addb
incl
incl
add
incl
incl
add
incl
incl
incl
add
add
add
clc
mov
decl
mov
decl
add
pop
js
decl
add
add
pop
js
decl
add
add
add
pop
js
clc
mov
add
pop
ja
ja
add
ja
decl
ja
ja
ja
ja
ja
xchg
clc
mov
add
ja
ja
ja
ja
ja
js
ljmp
ja
incl
ja
ja
ja
ja
ja
xchg
clc
mov
push
ja
ja
ja
ja
ja
mov
testb
push
pop
ja
ja
ja
ja
js
decl
inc
dec
pushl
ja
ja
ja
ja
mov
ljmp
ja
incl
inc
ja
ja
ja
ja
ja
clc
mov
jo
incl
pop
ja
ja
ja
ja
js
push
xchg
ja
jbe
hlt
inc
pushl
ja
ja
ja
ja
outsl
decl
ja
incl
ja
ja
ja
ja
ja
ljmp
ja
ja
ja
incl
ja
ja
ja
ja
ja
ljmp
ja
ja
ja
push
inc
inc
pop
ja
ja
ja
ja
xchg
clc
push
ja
jo
hlt
inc
inc
jo
ja
ja
ja
ja
imulb
ja
ja
jo
add
inc
inc
pusha
add
add
ja
ja
outsl
testb
add
or
inc
inc
inc
inc
incl
ja
ja
js
testb
add
add
inc
inc
inc
inc
inc
incl
ja
ja
js
testb
add
add
inc
dec
pop
ja
ja
js
testb
add
add
inc
inc
inc
inc
inc
pop
ja
ja
js
imulb
ja
add
add
add
inc
inc
inc
inc
dec
incl
ja
ja
js
imulb
ja
add
add
add
inc
fs
inc
dec
incl
ja
ja
mov
push
add
add
add
dec
add
ja
ja
ja
outsl
clc
push
add
add
add
ja
ja
ja
ljmp
ja
add
add
add
add
data16
ja
ja
ja
jmp
ja
add
add
add
push
inc
data16
ja
ja
js
incl
add
add
add
inc
data16
ja
ja
push
ja
jo
add
add
add
data16
ja
mov
clc
push
add
add
add
data16
ja
xchg
xchg
jo
add
add
or
data16
ja
xchg
incl
add
add
add
test
pushaw
ja
push
imulb
ja
jo
add
add
or
data16
outsl
clc
data16
ja
add
add
add
inc
xchg
jmp
xchg
ja
add
add
add
inc
xchg
push
data16
ja
ja
ja
ja
ja
js
outsl
jmp
mov
ja
ja
ja
ja
js
data16
push
pushw
ja
ja
ja
ja
mov
jmp
push
ja
ja
mov
jmp
mov
mov
jmp
pushw
mov
data16
jmp
data16
push
data16
decl
out
jmp
pop
incl
add
cld
add
aas
push
add
ud0
cld
inc
add
add
push
incl
inc
incl
add
add
incl
add
add
add
add
aas
incb
clc
add
add
pop
cld
add
add
add
pop
clc
add
add
add
psubb
lock
add
add
add
add
pop
lock
add
add
pop
loopne
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
rolb
add
add
pop
loopne
lock
add
pavgb
lock
add
add
add
add
pop
lock
add
add
pop
clc
add
add
add
aas
clc
add
add
add
jg
add
add
add
incb
incl
incl
inc
add
add
incl
ud0
sar
add
aas
push
incl
add
cld
jmp
pop
ljmp
add
add
add
add
add
add
or
add
add
incl
div
clc
add
out
add
and
loopne
loop
faddl
cli
clc
clc
cmp
std
add
sti
sti
add
cli
cli
add
fcmovnu
jmp
jmp
fcmovnu
jmp
aad
jmp
fcmovnu
jmp
fcmovu
xlat
push
repnz
push
lock
call
fstp
jmp
fcmovnbe
into
mov
push
in
jmp
stc
div
push
cmc
hlt
call
into
lret
lret
ja
push
jmp
jmp
loop
jmp
loope
jmp
loopne
mov
add
into
lds
loope
xlat
jmp
fcmovbe
out
jmp
in
add
in
ljmp
push
add
mov
mov
mov
pop
lret
aad
sar
int3
clc
aad
ret
leave
shll
roll
fmul
enter
into
fcmovbe
int3
mov
ja
loop
ja
shll
call
jecxz
call
jecxz
add
loope
ja
xchg
xorb
nop
outsl
mov
xchg
inc
mov
xchg
mov
mov
into
shlb
rol
mov
ja
enter
lret
lret
ret
int
mov
loope
jmp
fcmovnbe
ja
fcmovbe
aam
shll
xlat
sarb
out
jmp
loopne
in
fisttpl
ja
fstp
ja
ja
fcmovbe
push
jmp
ja
mov
mov
nop
jg
test
fwait
mov
stos
cltd
mov
cmpsb
xchg
jmp
lods
popf
ja
scas
mov
dec
mov
mov
rol
mov
ja
rol
ja
ror
dec
sarb
lret
ja
aad
ja
and
pushl
ja
push
or
push
inc
jl
push
ja
jns
ja
subb
xchg
xchg
xorl
mov
sahf
mov
cmpsl
xchg
test
xlat
sar
fcmovnbe
int
xlat
ror
jo
fcom
inc
in
fcompp
ja
fcmovbe
imul
ljmp
in
jmp
in
ljmp
testb
ja
push
cmp
imul
ljmp
cmp
imulb
aas
ja
pop
inc
add
inc
inc
jbe
dec
js
dec
ja
gs
idivb
jo
outsb
pop
add
jno
dec
mov
ja
jle
testb
mov
ret
inc
mov
pushf
inc
mov
cltd
ja
mov
add
dec
sub
add
inc
aas
es
push
cmp
je
imulb
mov
add
enter
lds
ja
sub
notb
add
push
xor
add
add
sub
add
xor
clc
pop
cmp
jo
cmp
add
and
aas
and
and
cmp
call
sub
push
cmp
js
inc
mov
mov
movsl
cltd
decl
ja
and
add
add
add
push
xor
ja
and
call
add
cmp
pop
ss
push
xor
add
push
xor
inc
das
push
ja
sub
fs
xor
and
push
sub
dec
cmp
add
aaa
je
jne
data16
mov
outsl
pop
dec
pushl
push
ja
jno
add
test
data16
ljmp
cmp
add
or
inc
or
ljmp
sbb
je
and
jbe
and
push
and
jbe
and
ja
and
ja
es
andl
mov
lcall
xor
jle
ja
cmpsl
mov
sbbb
jmp
cld
cld
sti
data16
ja
std
std
ja
out
out
ja
fstp
outsl
add
add
cwtl
pushf
js
js
js
add
add
cwtl
jl
testl
hlt
cwtl
bound
add
jl
loope
and
adc
bound
add
add
divl
add
adc
add
add
add
cwtl
bound
add
jl
loope
and
adc
adc
and
loope
cwtl
bound
add
cwtl
popf
jl
sbb
add
and
and
and
and
sbb
and
and
and
and
inc
negl
add
ficomps
sbb
sbb
sbb
sbb
sbb
and
sbb
sbb
sbb
and
sbb
inc
idivl
add
cwtl
popf
sbb
add
add
and
and
sbb
sbb
sbb
and
sbb
sbb
sbb
jl
add
and
cwtl
scas
sbb
add
sbb
sbb
sbb
lcall
and
sbb
sbb
das
jl
add
add
bound
sbb
stos
stos
in
in
mov
sbb
lcall
add
sbb
and
sbb
sbb
and
sbb
sbb
popf
fiadds
add
sbb
stos
stos
in
in
jbe
jbe
add
sbb
sbb
sbb
sbb
and
sbb
sbb
sbb
loope
nop
add
popf
inc
loope
sbb
ljmp
in
jbe
in
and
add
and
sbb
lcall
and
lcall
and
inc
das
jl
nop
jge
sbb
sbb
and
in
in
in
and
sbb
add
and
sbb
sbb
and
sbb
and
loope
nop
add
add
add
add
sbb
call
stos
stos
stos
stos
stos
in
mov
in
add
add
and
sbb
sbb
and
sbb
sbb
sbb
das
bound
add
add
add
sbb
and
and
sbb
in
in
inc
and
add
add
and
and
and
sbb
sbb
sbb
nop
add
add
add
sbb
sbb
sbb
sbb
add
stos
in
mov
in
add
sbb
lcall
and
sbb
and
lcall
and
inc
das
jnp
add
add
nop
popf
das
inc
sbb
sbb
sbb
jmp
sbb
adc
mov
mov
sbb
and
and
and
and
and
and
sbb
sbb
loope
nop
add
add
nop
jl
sbb
sbb
sbb
sbb
sbb
add
add
stos
stos
mov
mov
adc
sbb
sbb
sbb
sbb
sbb
sbb
inc
bound
cwtl
jl
xor
sbb
sbb
and
and
sbb
scas
stos
stos
in
mov
mov
and
incl
lcall
jmp
sbb
sbb
sbb
sbb
popf
cwtl
add
nop
cwtl
bound
sbb
sbb
sbb
and
add
lcall
add
mov
cwtl
adc
and
and
and
and
sbb
sbb
js
add
nop
js
inc
sbb
lcall
sbb
and
add
lods
stos
stos
mov
mov
mov
mov
in
in
add
sbb
sbb
sbb
sbb
negl
js
inc
sbb
sbb
and
adc
add
add
stos
stos
mov
out
mov
mov
mov
mov
and
sbb
sbb
and
and
popf
nop
add
nop
js
xor
sbb
and
adc
add
add
add
in
mov
mov
mov
mov
in
add
sbb
and
sbb
sbb
negl
js
inc
sbb
and
add
add
add
add
mov
out
mov
mov
in
and
sbb
sbb
and
sbb
das
popf
nop
add
nop
cwtl
pusha
inc
sbb
sbb
add
adc
add
add
add
mov
mov
mov
in
add
sbb
and
sbb
sbb
js
add
nop
ja
inc
xor
and
and
add
add
add
jnp
shr
out
out
mov
stos
stos
stos
and
sbb
sbb
and
xor
inc
pushf
nop
add
nop
ja
das
xor
sbb
and
add
add
add
add
mov
out
and
and
and
sbb
and
sbb
sbb
cwtl
nop
add
js
popf
das
xor
sbb
and
adc
add
add
add
ljmp
jmp
sbb
and
sbb
and
xor
ja
add
add
sbb
and
adc
add
add
add
add
mov
ljmp
jmp
sbb
sbb
xor
jnp
add
add
nop
ja
inc
xor
sbb
and
adc
add
add
add
nop
aam
jmp
jmp
ljmp
sbb
sbb
inc
inc
js
add
add
js
jnp
xor
sbb
sbb
adc
add
add
add
das
mov
jmp
jmp
add
sbb
sbb
sbb
xor
ja
add
add
add
sbb
and
and
add
add
add
xchg
mov
jmp
jmp
loope
and
sbb
dec
inc
popf
nop
add
add
add
js
pushf
inc
xor
sbb
and
and
add
add
add
sarl
jmp
jmp
repz
jl
js
add
add
add
nop
ja
das
xor
sbb
and
and
add
mov
jmp
jmp
jmp
and
inc
inc
js
js
js
inc
xor
sbb
and
add
adc
mov
ljmp
dec
das
jnp
js
nop
xchg
pushf
inc
inc
xor
add
and
and
and
adc
mov
jmp
repz
das
jnp
nop
add
js
ja
inc
inc
xor
sbb
and
and
and
add
adc
mov
call
jnp
nop
js
add
nop
nop
ja
pusha
inc
xor
push
sbb
add
and
and
and
and
and
scas
js
mov
jnp
nop
nop
add
scas
xor
push
sbb
add
and
add
and
sbb
add
sbb
scas
xor
jnp
xchg
nop
add
add
inc
inc
dec
xor
push
sbb
sbb
add
add
add
sbb
xor
xor
jnp
nop
nop
add
jge
inc
xor
xor
xor
push
xor
xor
push
xor
inc
das
inc
mov
add
add
jnp
inc
das
inc
inc
xor
xor
xor
xor
inc
pusha
jnp
ja
nop
nop
add
nop
nop
nop
ja
popf
jnp
inc
inc
das
das
das
das
inc
inc
bound
nop
nop
add
nop
nop
nop
nop
xchg
ja
pushf
pushf
pushf
pushf
popf
pushf
js
ja
nop
nop
nop
add
nop
nop
nop
nop
nop
nop
nop
xchg
nop
nop
nop
nop
nop
nop
nop
nop
add
add
nop
nop
nop
nop
nop
add
add
decl
out
jmp
pop
incl
add
cld
add
aas
push
add
ud0
cld
inc
add
add
push
incl
inc
incl
add
add
incl
add
add
add
add
aas
incb
clc
add
add
pop
cld
add
add
add
pop
clc
add
add
add
psubb
lock
add
add
add
add
pop
lock
add
add
pop
loopne
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
rolb
add
add
pop
loopne
lock
add
pavgb
lock
add
add
add
add
pop
lock
add
add
pop
clc
add
add
add
aas
clc
add
add
add
jg
add
add
add
incb
incl
incl
inc
add
add
incl
ud0
sar
add
aas
push
incl
add
cld
jmp
pop
ljmp
add
add
add
add
add
add
and
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
add
add
add
add
add
add
add
and
add
and
add
and
add
and
add
sbb
add
sbb
add
adc
add
or
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
data16
add
add
bound
add
pop
add
add
add
dec
add
add
add
add
add
add
add
add
add
or
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
add
add
add
add
add
add
daa
and
inc
xor
mov
jns
push
jmp
test
std
test
std
subb
js
push
ljmp
inc
lds
xor
add
add
add
pusha
add
add
add
xor
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
xor
push
jae
aas
xor
jle
push
incl
jl
lcall
xchg
mov
xchg
pushl
cmpsb
cltd
pushl
sahf
jmp
xorb
jb
jge
push
pushl
inc
testb
lret
sbb
add
add
add
cmp
add
sbb
add
or
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
add
add
sub
dec
cmp
jns
dec
cld
xchg
call
xchg
test
mov
lret
ret
in
push
hlt
repnz
cld
sti
cli
std
std
sti
cli
clc
cmc
hlt
jmp
mov
jmp
jbe
pushl
dec
jmp
in
sub
sbb
add
add
add
sub
add
or
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
pop
dec
aaa
mov
bound
mov
lcall
cmpsb
xchg
call
mov
push
jmp
stc
div
cld
cld
sti
std
cld
sti
stc
div
push
jmp
jmp
fcmovbe
dec
ret
stos
cwtl
mov
mov
jns
dec
std
pop
inc
xor
sbb
adc
add
add
add
adc
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
pop
sbb
inc
fs
sarb
push
call
lcall
loop
sar
jmp
out
jmp
in
push
hlt
repnz
sti
cli
stc
std
std
std
std
std
std
cld
std
std
cld
std
std
cld
std
std
std
sti
stc
stc
push
hlt
repnz
out
in
push
jmp
in
out
jmp
iret
inc
mov
lcall
imul
push
cmp
and
adc
add
add
add
add
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
inc
sub
push
inc
filds
jp
mov
enter
aad
jmp
fcmovnbe
call
loop
jmp
loop
jmp
loope
jmp
loopne
jmp
jmp
fstp
jmp
fcmovnbe
jmp
fcmovnbe
jmp
fcmovnbe
jmp
fstp
jmp
jmp
loopne
jmp
loope
jmp
loop
call
loopne
jmp
jmp
fcom
call
les
decl
push
inc
hlt
inc
xor
outsb
add
add
add
sbb
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
inc
sub
pop
dec
cmc
xchg
jmp
movsl
call
mov
int
sar
sar
sar
fst
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
sar
fst
sar
fst
sar
fst
sar
aam
loopne
sar
iret
fcmovnbe
call
mov
decl
pop
dec
cmp
add
outsb
add
add
add
add
add
add
incl
incl
incl
incl
incl
incl
incl
incl
add
add
jb
dec
xrelease
movsl
xchg
cmp
mov
call
ret
ljmp
out
ljmp
out
jmp
call
sar
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
sar
sar
fcompp
sar
into
call
enter
shll
xchg
jg
pushl
aas
xor
mov
add
add
add
add
add
add
incl
incl
incl
incl
incl
incl
add
add
sbb
and
push
inc
xlat
subl
mov
scas
mov
jmp
jmp
aas
cmp
add
dec
sub
add
arpl
jnp
dec
mov
out
jmp
fcmovnbe
aam
aad
aad
aad
aad
aad
aam
aad
aad
aam
aam
aam
aam
sar
aad
iret
call
mov
pushl
js
ljmp
ds
add
pop
add
add
add
add
incl
incl
incl
incl
incl
incl
add
add
pop
dec
cmp
fwait
mov
ret
mov
dec
shll
icebp
out
in
incl
adc
decl
add
dec
sub
add
dec
sub
decl
add
pop
inc
and
fcmovbe
int
jecxz
aam
aad
aad
aad
aad
aad
aad
aad
aad
aad
aam
aam
aam
aam
fcompp
aam
fst
sar
rol
mov
ljmp
outsl
pop
jmp
cmp
adc
add
dec
add
add
add
add
incl
incl
incl
incl
add
add
ja
dec
call
cmpsl
cltd
call
shll
aad
jmp
in
xor
sub
call
add
push
das
add
dec
cs
dec
sub
add
dec
sub
decl
push
inc
mov
jecxz
aam
loopne
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
aad
aad
aad
aad
aam
aam
aam
sar
aam
fcmovnbe
int
rol
mov
jmp
fs
call
das
xlat
add
add
add
add
add
incl
incl
incl
add
add
xor
sbb
outsb
pop
inc
in
jo
ljmp
mov
ret
xlat
sar
loopne
jmp
loop
pushl
sub
call
call
add
push
das
add
dec
cs
dec
sub
add
dec
sub
decl
call
enter
loopne
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
aad
aad
aad
aad
aam
aam
sar
aad
fcmovbe
lret
call
les
call
pop
inc
sti
es
add
add
push
add
add
incl
incl
add
add
dec
aaa
xchg
jnp
push
call
mov
call
mov
fcompp
aam
loope
jmp
loop
pushl
and
add
dec
sub
add
push
xor
call
add
dec
cs
dec
sub
add
push
xor
out
loopne
loope
loopne
fdivr
loopne
xlat
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
aad
aad
aad
aam
aam
aam
sar
aam
lret
ret
dec
mov
test
subl
pop
dec
xor
pop
add
add
add
add
incl
incl
inc
cmp
and
inc
in
xchg
ljmp
mov
aam
sar
loope
aad
jmp
inc
and
pushl
and
cmp
add
dec
sub
call
add
push
das
add
dec
cs
dec
sub
add
ja
inc
push
in
out
xlat
jmp
fcmovu
jmp
fcmovu
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
aad
aad
aam
aam
sar
aam
fcmovnbe
int3
call
ret
mov
call
pop
inc
ljmp
pop
push
fwait
add
add
add
adc
incl
add
add
pop
dec
xor
call
lods
mov
into
aam
aam
aam
loop
fcos
out
ljmp
jmp
aaa
pushl
and
decl
add
push
xor
call
add
push
das
add
dec
cs
dec
sub
lods
jmp
loopne
jmp
fcmovu
jmp
fcmovu
jmp
fcmovu
jmp
fcmovu
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
aad
aad
aad
aam
aam
sar
aam
int3
dec
mov
test
jp
dec
incl
es
add
add
add
pop
add
add
add
add
jge
push
jmp
mov
ret
aam
sar
aam
aam
aam
loopne
aad
in
repnz
in
lcall
and
pushl
cs
push
xor
call
add
push
das
add
dec
cs
fs
and
out
ljmp
loope
fcos
loope
fcos
loopne
fdivr
loopne
fdivr
loopne
xlat
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
aad
aad
aam
aam
aam
aad
fcmovbe
int3
call
ret
mov
jne
jmp
icebp
add
add
add
add
add
insb
push
inc
call
mov
xchg
dec
shlb
aad
sar
aam
aam
aad
aad
loopne
jmp
fcmovbe
aam
div
repz
and
cmp
add
push
xor
call
add
push
xor
call
add
push
das
add
int
jmp
jmp
fcmovu
jmp
fcmovu
jmp
fcmovu
jmp
fcmovu
jmp
fcmovu
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
aad
aad
aam
aam
fcompp
aam
fst
sar
rol
mov
call
pop
inc
jmp
pop
mov
add
cmp
add
or
pop
dec
push
jl
mov
les
fcompp
aam
aam
aam
aad
aad
loopne
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovu
push
out
out
decl
sbb
xor
sub
call
add
push
xor
call
call
add
outsb
push
sub
jmp
jmp
fcmovu
jmp
fcmovu
jmp
fcmovu
jmp
fcmovu
jmp
fcmovu
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
aad
aad
aam
aam
aam
sar
aad
sar
mov
jl
ja
dec
incl
sub
add
add
add
adc
dec
xchg
ja
dec
call
mov
call
mov
aam
aam
aam
aad
aad
loopne
jmp
xlat
xlat
jmp
loope
mov
and
cmp
add
pop
ss
push
xor
add
push
xor
call
add
rol
mov
jmp
fcmovnu
jmp
fcmovnu
jmp
fcmovnu
jmp
fcmovnu
jmp
fcmovnu
jmp
fcmovnu
aad
loopne
aad
aad
aad
aam
aam
aam
aam
fmul
enter
mov
stos
cwtl
xchg
jl
push
call
cmp
add
add
add
sbb
mov
lahf
mov
enter
aad
sar
fcom
aam
aam
aam
aad
aam
loopne
jmp
fcmovnu
jmp
fstp
jmp
loopne
jmp
jmp
fcmovu
clc
hlt
idiv
pop
dec
xor
xor
das
add
pop
ss
pop
xor
add
push
xor
pushl
ss
out
jmp
call
jecxz
call
jecxz
jmp
jecxz
jmp
jecxz
jmp
fstp
jmp
fstp
aad
aad
aad
aam
aam
aam
fcmovnbe
int3
call
ret
mov
nop
incl
push
inc
fiaddl
add
pop
add
add
bound
jnp
push
jmp
scas
call
int3
sar
aam
aam
sar
aad
ljmp
sti
cli
stc
std
std
std
std
std
std
cld
sti
cli
sti
stc
cli
ljmp
and
aas
es
pop
cmp
pop
aaa
add
pop
ss
push
xor
add
push
xor
call
add
push
xor
decl
add
dec
cs
dec
sub
decl
add
in
call
fcos
aad
aad
aad
aam
aam
fcompp
aam
iret
call
les
incl
pop
inc
ljmp
add
jns
dec
in
jnp
push
ljmp
mov
fcom
aam
sar
loope
in
ljmp
std
std
std
cld
cld
cld
sub
xor
cmp
lcall
lcall
add
pop
ss
pop
xor
add
push
xor
call
call
add
push
das
add
dec
cs
dec
sub
in
loop
fcos
aad
aad
aad
aam
aam
aam
fst
sar
rol
mov
incl
pusha
dec
cmc
add
add
add
and
dec
sti
jnp
push
ljmp
mov
fcom
sar
loope
xlat
ljmp
push
cmc
hlt
cld
cld
sti
decl
sub
dec
xor
jmp
or
pop
cmp
lcall
add
pop
ss
push
xor
add
push
xor
call
add
push
xor
decl
add
in
call
fcos
aad
aad
aad
aam
aam
aam
fst
sar
rol
mov
incl
bound
add
data16
add
js
dec
sti
jp
push
jmp
scas
call
int3
sar
loopne
aad
out
in
jmp
in
push
hlt
hlt
cld
sti
sti
push
lock
call
and
inc
das
push
jmp
ud0
or
pop
cmp
lcall
lcall
add
pop
ss
pop
xor
add
push
xor
call
call
add
in
call
fcos
aad
aad
aad
aam
aam
fcompp
aam
iret
call
les
incl
popa
dec
std
add
add
add
and
dec
in
js
dec
lcall
mov
sar
fcom
jmp
jmp
loop
jmp
in
lock
in
push
repz
sti
cli
cli
jmp
call
and
imul
jmp
or
lcall
add
lcall
add
push
xor
dec
xor
decl
add
dec
cs
in
call
fcos
aam
aad
aad
aam
aam
aam
fcmovnbe
int3
call
ret
mov
xchg
incl
pop
dec
cmc
add
add
add
pusha
dec
lcall
mov
call
mov
jmp
fcmovnbe
jmp
loope
ljmp
push
repz
cli
stc
clc
call
cmp
lcall
and
jno
push
ljmp
adc
gs
ud0
or
pop
cmp
lcall
call
add
xor
and
pushl
call
fcos
aam
aad
aad
aam
aam
aam
fnop
leave
dec
mov
mov
jle
push
ljmp
inc
jmp
add
add
jno
inc
mov
pop
inc
call
scas
mov
fmul
enter
aad
in
fdivr
call
jmp
push
icebp
out
stc
div
std
std
cld
push
div
call
and
push
ds
jae
and
je
and
imul
inc
adc
arpl
pushl
in
jmp
in
jmp
jmp
fstp
aam
aad
aam
aam
aam
aam
lret
ret
mov
jg
jp
dec
jmp
cmp
add
add
add
adc
inc
outsl
pop
inc
incl
movsl
xchg
call
ret
aad
ret
xlat
sar
jecxz
out
loopne
in
jmp
in
push
hlt
repz
sti
cli
stc
incl
cmp
ljmp
and
jne
and
je
and
outsb
dec
sbb
push
pop
xor
div
clc
jmp
fstp
jmp
fstp
jmp
fstp
aad
aad
aad
aad
aam
aam
aam
fst
sar
rol
mov
call
pop
inc
call
mov
add
add
pop
inc
pop
insb
push
ds
jl
push
ljmp
mov
mov
jmp
jmp
loope
ljmp
push
repnz
clc
div
std
cld
sti
jmp
loopne
call
and
push
aas
and
jne
and
jne
and
jne
and
jae
pop
ljmp
push
mov
in
aam
loopne
aad
loopne
aad
aad
aad
aam
aam
aam
aad
fcmovnbe
int3
call
ret
mov
mov
jbe
ljmp
incl
sub
add
add
push
pop
inc
call
scas
mov
call
into
aam
jecxz
call
jmp
in
push
repz
stc
clc
idiv
std
std
cld
jmp
cmp
push
cmp
ljmp
and
jne
and
jne
and
jne
and
jne
and
jne
and
rol
mov
out
aam
aad
aad
aad
aam
aam
sar
aad
xlat
int
dec
mov
xchg
jl
push
jmp
aaa
std
sub
sbb
add
sbb
add
add
incl
addr16
cmp
pop
inc
decl
pushf
mov
int
mov
aad
sar
aad
jmp
fcmovnbe
jmp
loope
jmp
in
jmp
push
hlt
repz
cli
stc
clc
std
std
std
pushl
cmp
call
and
jae
and
jne
and
jne
and
jne
and
jne
and
ja
es
mov
call
aad
aam
aam
aam
aam
fcmovnbe
iret
call
lds
call
pop
inc
call
sub
cmp
incl
incl
gs
aaa
aaa
imul
gs
call
mov
call
lds
sar
jecxz
fcos
out
jmp
in
out
in
ljmp
hlt
repz
cli
clc
clc
std
cld
cld
pushl
dec
call
and
pop
inc
and
jne
and
jne
and
jne
and
jne
and
jne
and
jne
and
mov
inc
mov
fcom
jmp
loop
jmp
fcmovbe
sar
aam
int3
dec
mov
xchg
test
ljmp
cmp
sub
add
add
incl
imul
mov
subb
stos
cwtl
xchg
int3
mov
mov
jmp
fcmovbe
jmp
jmp
in
ljmp
push
lock
push
repz
clc
div
sti
cli
cli
std
std
jmp
fstp
call
and
push
cmp
ljmp
and
jne
and
jne
and
jne
and
jne
and
jne
and
jne
and
jne
and
jne
and
test
in
out
jmp
fcmovnbe
fcmovbe
int3
call
les
call
pusha
dec
jmp
xor
pop
pop
subps
add
adc
add
add
incl
incl
incl
gs
aaa
cmp
cmp
call
stos
fwait
call
les
fcmovnbe
into
jmp
fcmovnbe
jmp
jmp
in
jmp
in
out
in
jmp
push
repnz
push
cmc
hlt
stc
clc
idiv
sti
cli
cli
cld
cld
sti
std
std
cld
std
jmp
cmp
call
and
push
push
and
jne
and
jne
and
jne
and
jne
and
jne
and
jne
and
jbe
and
in
call
sar
rol
mov
jmp
push
decl
and
daa
add
add
incl
incl
incl
incl
push
push
aas
jl
push
lcall
mov
call
les
into
jmp
fcmovnbe
jmp
jmp
jecxz
ljmp
push
out
jmp
repz
push
icebp
lock
hlt
repz
div
clc
div
stc
div
stc
clc
idiv
call
cmp
call
and
popa
inc
and
jae
and
jne
and
jne
and
jne
and
jne
and
jne
and
jnp
sub
ljmp
dec
mov
decl
pop
inc
jmp
xor
adc
or
add
adc
incl
incl
incl
incl
incl
incl
fs
cmp
cmp
outsl
pop
inc
incl
xchg
cmp
mov
call
lds
into
jmp
fcmovnbe
jmp
jmp
loope
call
call
out
out
in
ljmp
out
out
push
lock
push
icebp
out
push
icebp
out
push
repnz
sti
stc
stc
lcall
cmp
and
push
aas
and
push
push
and
jne
and
jne
and
jne
and
andl
jecxz
aad
int3
mov
xchg
call
pusha
dec
ljmp
aaa
incl
and
add
add
incl
incl
incl
incl
incl
incl
incl
arpl
push
cmp
jno
inc
incl
xchg
cmp
rol
mov
fcmovbe
int3
fcompp
aam
loop
fdivr
in
out
fdivrp
call
out
jmp
in
in
jmp
out
in
ljmp
in
ljmp
clc
div
dec
mov
call
and
push
cmp
call
and
pop
inc
and
gs
and
insb
dec
and
ja
fcmove
pushl
jle
pushl
dec
ljmp
cmp
dec
cmp
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
gs
xor
imul
pop
inc
incl
jle
ret
mov
call
ret
ror
mov
into
aad
loop
fdivr
jecxz
in
fdivr
out
fdivrp
out
loopne
out
loopne
call
in
jmp
in
jmp
jecxz
jmp
loop
out
jmp
jmp
loop
mov
jo
call
sub
push
cmp
call
pop
call
sbb
mov
jns
pushl
dec
ljmp
cmp
int
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
dec
ss
inc
incl
jge
shrb
call
mov
fcom
leave
iret
aam
loope
xlat
jmp
fstp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
fstp
jmp
fcmovnbe
jmp
fcmovnbe
jmp
loop
out
ljmp
leave
ret
mov
mov
dec
mov
pushl
dec
ljmp
lcall
loope,pn
push
adc
add
or
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
dec
xor
cltd
push
cmp
jo
inc
jg
push
call
sahf
inc
mov
call
ret
mov
call
leave
sar
int
lret
aam
fst
sar
sar
sar
sar
sar
fst
sar
into
fcmovbe
int3
fmul
call
lret
rol
mov
call
mov
ljmp
ja
pushl
ljmp
cmp
pop
inc
fnsave
and
inc
add
add
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
fs
xor
push
push
aas
pushl
dec
decl
mov
mov
xchg
inc
mov
dec
mov
mov
call
enter
lret
aad
ret
lret
ret
call
lret
ret
call
lret
ret
call
lret
aam
sar
mov
dec
shlb
mov
xchg
cmp
jnp
push
ljmp
inc
ljmp
cmp
push
inc
sub
add
pop
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
popa
dec
xor
dec
ss
push
cmp
outsb
pop
inc
pushl
dec
decl
xchg
cmpsl
xchg
test
mov
mov
dec
mov
mov
iret
shll
rol
mov
rol
mov
iret
shlb
mov
lahf
ljmp
mov
mov
jge
push
pushl
inc
ljmp
cmp
cld
dec
cmp
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
popa
dec
xor
dec
xor
push
push
cmp
jp
push
incl
jnp
lcall
xchg
cmp
popf
pushl
xchg
pushl
movsb
xchg
pushl
xchg
test
sahf
mov
xchg
jg
decl
imul
push
ljmp
cmp
pop
inc
das
iret
dec
cmp
or
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
popa
dec
xor
arpl
addr16
aaa
cli
imul
ljmp
inc
pushl
dec
jp
dec
jle
push
incl
outsb
pop
incl
insl
pop
jg
push
jnp
push
pushl
dec
pushl
inc
ljmp
aas
ljmp
cmp
addr16
ss
pop
inc
das
rorb
and
push
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
bound
xor
xor
xor
push
push
cmp
push
cmp
imul
push
ljmp
ljmp
ljmp
cmp
imul
jmp
xor
pop
inc
sub
mov
es
and
sldt
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
imul
pop
addr16
cmp
push
cmp
in
insb
push
ds
insb
push
ds
imul
push
cmp
addr16
cmp
pusha
dec
aaa
push
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
cmp
clc
add
pop
incl
add
loopne
add
decl
add
incl
or
add
add
incl
inc
incb
add
add
add
add
add
aas
add
clc
add
add
pop
add
add
add
str
lock
add
pop
add
loopne
add
add
add
loopne
add
add
add
rolb
add
add
incl
add
int3
addb
add
add
add
add
add
add
add
xor
add
incl
add
add
add
int3
add
add
add
cltd
cltd
add
add
add
data16
add
add
xor
add
incl
add
add
add
int3
add
add
add
cltd
cltd
add
add
add
data16
add
add
xor
add
incl
add
add
add
int3
addb
add
add
add
add
addb
add
add
xor
add
add
add
add
add
add
pop
jmp
add
add
pop
int3
int3
lock
add
setns
add
data16
add
add
pop
xor
cld
add
add
aas
add
incl
add
add
incl
int3
int3
inc
add
add
cltd
cltd
push
add
ud0
cld
add
aas
pushl
xor
incl
add
incl
add
add
add
add
adc
add
add
sub
add
add
adc
add
add
or
push
add
adc
add
add
add
add
add
and
adc
add
add
call
add
and
add
add
add
add
and
add
add
add
add
xor
add
add
push
add
xor
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
decl
add
andb
addb
add
add
addb
or
rol
jmp
addb
add
add
incl
add
incl
incl
incl
add
add
add
incl
decl
mov
or
decl
pop
xchg
testb
inc
ja
jg
divb
dec
ja
jg
clc
ja
xchg
ja
data16
incl
jg
push
xchg
add
push
add
add
push
add
ud0
push
add
jg
push
add
sysret
push
add
movq
push
decl
lret
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
rolb
xadd
rcrb
movaps
add
adc
add
and
add
add
or
add
add
incl
cld
sti
cld
add
stc
cli
add
idiv
xor
testb
icebp
repnz
lock
call
add
add
jmp
jecxz
cli
clc
clc
std
std
add
sti
sti
sti
cli
cli
push
icebp
icebp
jmp
jecxz
mov
rcl
dec
int
or
fadds
xlat
mul
loopne
ja
ror
mul
fstp
ja
call
loope
div
hlt
push
hlt
repz
leave
call
lret
push
call
loope
call
enter
iret
enter
lds
loopne
push
out
in
pxor
ljmp
shll
loop
sar
fst
iret
jmp
fcmovnbe
lock
rcr
roll
in
fldl
les
scas
rcl
ret
rcrb
rcr
aam
rol
out
ffree
rcrb
jb
mov
movsl
xchg
or
movsl
cltd
mov
mov
mov
rol
mov
add
ror
add
mov
add
fst
add
add
jns
dec
add
jl
or
subl
test
jmp
mov
mov
xchg
add
sarb
ror
add
dec
aad
ljmp
inc
icebp
out
jmp
out
jmp
add
fcmovbe
add
repz
add
repnz
lock
add
div
add
add
push
cmp
outsl
pop
inc
add
dec
add
dec
add
dec
add
add
imul
mov
add
jns
add
pop
incl
jo
ja
pop
add
xorb
jge
jp
popa
add
jb
add
cmpsl
fwait
add
and
int3
push
cmp
int3
jno
cmp
xchg
jl
int3
lahf
xchg
xchg
lods
mov
jle
leave
les
add
add
push
xor
cltd
push
xor
pop
cltd
fwait
mov
cltd
xchg
mov
mov
xchg
mov
add
cltd
pop
xor
add
aaa
add
push
xor
or
inc
sub
insw
push
daa
add
test
mov
andb
lods
cmpsl
data16
fiaddl
fstp
fdivs
pop
cmp
xor
adc
outsl
dec
sbb
jno
pop
add
and
jnp
add
cmp
test
add
dec
add
sbbb
flds
incb
std
add
cld
sti
add
cli
stc
add
clc
testl
repnz
add
lock
add
mov
add
std
add
cld
sti
clc
stc
clc
add
clc
idiv
cmc
div
add
repnz
out
lock
add
out
in
std
incb
sti
cld
cld
push
clc
clc
add
div
int3
icebp
repnz
icebp
icebp
int3
out
lock
out
out
int3
jecxz
in
fstp
fmulp
std
std
incb
stc
stc
cli
int3
cmc
cmc
testb
icebp
repnz
out
out
lock
in
out
cltd
incb
std
std
std
cltd
div
testl
repz
repnz
out
out
out
add
out
out
cltd
in
in
in
add
jmp
cltd
ljmp
in
in
in
in
loop
loop
loope
loope
loopne
loopne
fbld
fstp
add
data16
xlat
xlat
add
rcl
data16
int3
int3
add
leave
leave
xor
ret
ret
add
cltd
add
mov
xor
add
ja
je
je
insl
insl
insl
xor
data16
popa
add
pop
add
push
add
push
add
dec
add
add
xor
add
add
add
push
add
inc
dec
test
addr16
inc
xor
hlt
testl
add
inc
add
add
hlt
add
push
sub
inc
mov
mov
add
add
push
sbb
mov
sub
push
add
add
add
push
sbb
sbb
push
add
add
add
push
xchg
sbb
sub
or
add
add
add
sbb
xchg
stos
stos
jo
add
add
add
add
inc
sub
inc
push
push
add
icebp
add
add
add
add
push
push
add
or
icebp
add
add
add
or
or
add
or
icebp
icebp
add
add
add
add
or
std
add
add
hlt
add
add
or
or
les
std
add
adc
add
or
or
or
std
or
add
hlt
or
add
or
call
add
add
hlt
idiv
cli
cli
std
std
add
add
add
lock
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
rolb
xadd
rcrb
movaps
add
adc
add
and
add
add
and
incl
incl
mov
add
jne
stos
mov
out
jne
out
jne
stos
mov
pop
mov
add
incl
incl
incl
incl
incl
incl
incl
sub
push
add
pop
cmp
call
enter
out
jmp
iret
mov
lcall
inc
mov
add
outsl
add
add
add
outsl
push
push
push
jb
add
add
incl
incl
subb
mov
andb
das
add
push
cmp
push
repnz
jmp
loop
jmp
leave
sar
sti
sti
sti
sti
sti
incl
add
cmp
add
add
incl
incl
jle
push
lods
leave
mov
clc
ljmp
xor
lcall
lds
dec
mov
mov
cli
cli
cli
stc
stc
stc
incl
add
cmp
add
add
incl
incl
jns
dec
out
loopne
push
lock
ljmp
call
add
push
xor
dec
shlb
test
push
div
push
cmc
cmc
incl
add
cmp
add
add
incl
incl
je
inc
out
aad
jmp
loop
jmp
loop
xchg
jge
jmp
ud0
fcmovnbe
fst
into
incl
cmc
cmc
push
hlt
hlt
incl
add
cmp
incl
incl
jo
inc
lods
mov
lcall
fcmovnbe
inc
mov
and
jae
and
fwait
test
mov
lcall
repnz
out
out
out
incl
add
inc
add
add
incl
incl
imul
je
inc
mov
leave
fcmovbe
leave
pushl
sub
jl
das
incl
mov
out
jmp
add
inc
add
add
incl
incl
and
adc
push
inc
cs
test
ljmp
mov
scas
ljmp
jo
ljmp
in
in
jmp
fcmovnu
incl
add
inc
add
add
incl
incl
add
add
add
add
sarl
pushl
dec
pushl
dec
call
mov
in
in
in
fcomp
fdivr
lret
lret
lret
inc
mov
dec
incl
incl
incl
add
add
add
add
out
out
out
out
out
out
in
in
in
in
in
in
in
in
in
ljmp
mov
stos
stos
jmp
add
push
incl
incl
incl
add
add
add
add
jmp
ljmp
jmp
call
fcos
mov
xchg
xchg
decl
lcall
incl
incl
incl
add
add
add
add
out
jmp
out
jmp
out
jmp
out
jmp
jecxz
call
ljmp
push
div
inc
mov
add
incl
incl
incl
add
add
add
add
in
jmp
in
jmp
in
jmp
loope
call
aad
inc
ljmp
idiv
mov
add
incl
incl
incl
incl
add
add
add
add
jecxz
jmp
jecxz
rcl
sar
ret
ret
ret
pushl
mov
int
add
add
incl
incl
incl
incl
incl
add
add
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
and
add
add
incl
incl
incl
incl
incl
sarb
add
add
add
add
addb
sub
add
add
add
addb
add
add
addb
dec
orb
mov
add
add
add
add
add
add
add
adc
add
add
add
incl
add
mov
addb
addb
mov
rol
addb
mov
incl
incl
incl
add
incl
incl
incl
add
clc
mov
mov
decl
mov
mov
push
add
push
add
add
ja
add
add
lock
pop
mov
add
lock
js
add
js
add
push
add
xchg
ja
mov
push
add
dec
xorb
xchg
push
add
hlt
clc
pop
ja
xchg
push
add
ja
js
push
add
add
add
lock
inc
ja
add
lock
inc
ja
add
lock
ja
js
push
add
xchg
add
lock
add
inc
data16
add
lock
xchg
jg
js
add
lock
mov
ja
mov
push
add
js
xchg
xchg
add
lock
add
push
push
add
push
add
add
add
add
mov
push
add
add
add
add
decl
add
add
add
add
add
jg
push
add
add
add
add
add
push
add
add
add
add
pop
jg
push
add
add
add
add
ja
push
add
add
add
add
jg
push
add
add
add
add
clc
add
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
add
pop
lock
aas
lock
jg
add
push
add
push
add
ljmp
add
add
add
add
add
add
or
add
add
incl
cld
sti
cld
add
stc
cli
add
idiv
xor
testb
icebp
repnz
lock
call
add
add
jmp
jecxz
cli
clc
clc
std
std
add
sti
sti
sti
cli
cli
push
icebp
icebp
jmp
jecxz
call
rcl
dec
int
mov
fmuls
in
fdivrp
fcmovnbe
into
jmp
fstp
in
call
loope
div
hlt
mov
hlt
repz
int
call
lret
movl
call
loope
call
enter
iret
enter
lds
loopne
push
out
in
add
in
ljmp
shll
loop
rolb
fst
iret
add
fcmovnbe
ljmp
ja
roll
iret
lret
enter
fnstsw
lahf
nop
ja
mov
add
mov
ret
js
xchg
xchg
pop
loopne
aad
aam
roll
add
jle
xchg
movsl
xchg
add
cltd
mov
lret
mov
mov
xchg
ror
inc
iret
mov
jmp
fst
xchg
add
sbb
dec
incl
jl
inc
cltd
xchg
xchg
subl
test
inc
movsb
xchg
addb
lcall
mov
sarb
ror
pop
in
fidivl
fcmovbe
add
out
jmp
loop
add
out
jmp
out
jmp
add
fcmovbe
push
repz
add
repnz
cmpsb
movsl
movsb
clc
div
add
add
push
cmp
outsl
pop
inc
pushl
dec
add
dec
add
dec
mov
incl
imul
mov
call
jns
add
pop
pop
test
xchg
xorl
imul
xchg
xorb
jge
add
popa
add
jb
incl
cmpsl
fwait
add
and
call
adc
add
cmp
xchg
jl
lcall
mov
jle
leave
les
call
add
dec
sub
call
push
call
or
js
clc
fwait
mov
cltd
xchg
mov
mov
xchg
mov
lock
xor
lock
xor
add
pop
aaa
add
push
xor
or
inc
sub
lock
push
daa
lock
jge
lock
test
mov
andb
lods
cmpsl
lock
fstp
fdiv
pop
cmp
lock
lock
dec
sbb
jno
pop
lock
and
jnp
lock
cmp
test
lock
jne
lock
dec
add
sbbb
std
ljmp
stc
jmp
hlt
hlt
repz
repnz
mov
mov
mov
lcall
std
sti
cld
sti
clc
stc
clc
push
clc
testl
icebp
repnz
out
lock
out
out
in
out
out
cld
cld
jecxz
clc
clc
cmc
div
scas
icebp
repnz
icebp
icebp
imul
lock
in
out
out
add
in
fstp
fdivrp
std
std
stc
stc
cli
add
cmc
testb
icebp
repnz
out
lock
in
out
in
loope
std
std
aad
div
cmc
cmc
cmc
lods
repz
repnz
out
out
out
add
out
out
in
in
in
jmp
jmp
ljmp
add
in
add
in
jecxz
loop
jecxz
loope
fnstsw
loopne
rcr
ret
fstp
fnsave
xlat
xlat
xlat
int
rcl
add
int3
int3
dec
leave
leave
inc
ret
ret
mov
cltd
cltd
decl
mov
add
add
ja
je
je
insl
insl
insl
add
data16
popa
add
pop
add
push
call
push
decl
dec
incl
pushl
xor
incl
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
testl
add
std
add
add
add
add
add
add
add
mov
mov
icebp
icebp
icebp
hlt
icebp
icebp
add
add
add
add
add
add
add
add
add
les
or
int3
add
add
add
add
add
add
add
add
add
add
add
add
or
mov
add
add
add
add
add
add
add
add
add
add
adc
push
inc
mov
adc
add
add
add
add
add
add
add
add
adc
push
push
sbb
add
sbb
adc
add
icebp
add
add
add
add
add
add
add
pop
orb
or
or
mov
add
add
add
add
add
add
or
inc
push
dec
push
sub
or
or
jne
adc
add
add
add
add
add
add
add
add
jo
push
dec
push
add
or
sbb
jno
or
icebp
add
add
add
add
add
add
adc
and
sbb
dec
sub
or
or
mov
add
add
add
add
add
add
add
or
sbb
or
lea
or
and
add
add
add
add
add
add
add
adc
sbb
add
dec
or
dec
push
adc
icebp
add
add
add
add
add
add
sbb
sbb
add
sub
mov
and
addr16
add
add
add
add
add
add
or
add
dec
stos
stos
sub
or
mov
add
add
add
add
add
add
add
les
push
sbb
add
add
mov
sbb
or
or
icebp
add
add
add
add
add
add
les
sbb
les
add
mov
mov
dec
push
inc
int3
int3
icebp
add
add
add
add
add
add
les
sbb
sbb
sbb
stos
sub
mov
or
icebp
add
add
add
add
add
add
add
adc
jno
and
sbb
sbb
inc
adc
add
icebp
add
add
add
add
add
add
les
add
jo
inc
pop
sub
int3
add
add
add
add
add
add
add
add
add
les
or
push
push
push
push
mov
add
les
or
add
add
add
add
add
add
les
les
add
or
les
add
add
or
or
icebp
add
add
add
add
add
add
or
add
int3
add
or
or
int3
icebp
icebp
icebp
icebp
icebp
icebp
add
add
add
add
add
add
or
or
or
les
add
add
std
add
add
add
add
add
add
add
add
add
int3
or
int3
add
or
or
add
std
add
add
adc
add
or
add
or
or
or
std
add
add
add
add
add
hlt
add
les
add
or
les
or
or
or
add
adc
add
add
add
or
les
add
or
add
les
std
add
testl
or
or
or
or
or
std
adc
add
add
add
add
add
add
add
add
add
adc
add
icebp
icebp
hlt
hlt
hlt
hlt
hlt
div
cli
idiv
cli
cli
cli
cli
std
add
add
clc
add
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
add
pop
lock
aas
lock
jg
add
push
add
push
add
ljmp
add
add
add
add
add
add
and
incl
incl
incl
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
add
add
incl
incl
incl
incl
incl
incl
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
incl
incl
incl
incl
incl
incl
add
add
add
inc
cld
cld
cld
push
div
out
out
out
call
in
jmp
jecxz
jmp
out
out
out
out
push
cmc
cmc
sti
sti
sti
cld
cld
cld
cld
cld
cld
cld
cld
cld
sti
sti
sti
sti
sti
sti
clc
clc
clc
incl
add
inc
add
add
incl
incl
incl
incl
incl
incl
add
add
add
inc
std
std
std
stc
stc
stc
ljmp
inc
rol
mov
mov
scas
scas
scas
ljmp
mov
inc
rol
rcl
sar
call
div
cli
cli
cli
sti
sti
sti
cli
cli
cli
cli
cli
cli
push
div
incl
add
inc
add
add
incl
incl
incl
incl
incl
incl
add
add
add
inc
std
std
std
push
div
jmp
loope
inc
rol
mov
mov
call
xorb
test
xchg
mov
inc
rol
repz
stc
stc
stc
cli
cli
cli
stc
stc
stc
push
div
incl
add
inc
add
add
incl
incl
incl
incl
incl
incl
add
add
add
inc
std
std
std
clc
clc
clc
jmp
loope
pushl
insl
call
out
out
out
out
out
out
jmp
call
jns
pushl
push
cmc
cmc
stc
stc
stc
stc
stc
stc
push
div
incl
add
inc
add
add
incl
incl
incl
incl
incl
incl
add
add
add
inc
std
std
std
std
std
std
sti
sti
sti
ljmp
incl
cmpsb
cltd
call
lret
out
out
out
fstp
loop
fdivr
loop
fdivr
loop
fdivr
out
out
out
out
out
out
call
jae
pushl
in
push
div
clc
clc
clc
push
div
incl
add
inc
add
add
incl
incl
incl
incl
incl
incl
add
add
add
inc
cld
cld
cld
cld
cld
cld
push
hlt
hlt
call
rcl
decl
cmpsb
cltd
decl
das
add
dec
sub
call
out
out
fcmovnbe
into
jmp
jmp
jmp
out
out
out
call
jge
dec
iret
iret
out
out
out
push
div
push
div
incl
add
inc
add
add
incl
incl
incl
incl
incl
incl
add
add
add
inc
sti
sti
sti
sti
sti
sti
in
in
in
ljmp
insb
pop
call
lret
decl
add
push
xor
decl
add
xchg
jg
fcmovnbe
into
jmp
jmp
jmp
fcmovnbe
iret
incl
mov
push
div
push
div
incl
add
inc
add
add
incl
incl
incl
incl
incl
incl
add
add
add
inc
sti
sti
sti
sti
sti
sti
jmp
in
call
enter
ror
fcmovnbe
into
call
lret
decl
add
push
xor
call
add
shll
jmp
jmp
jmp
jmp
fcmovnu
inc
mov
call
loopne
push
cmc
cmc
push
cmc
cmc
incl
add
inc
add
add
incl
incl
incl
incl
incl
incl
add
add
add
inc
cli
cli
cli
cli
cli
cli
jmp
loope
decl
ror
fcmovnbe
into
jmp
jmp
loopne
call
lret
decl
add
push
xor
pop
jmp
jecxz
jmp
jmp
call
enter
jl
fdivr
hlt
hlt
hlt
push
repz
add
inc
add
add
incl
incl
incl
incl
incl
incl
add
add
add
inc
cli
cli
cli
cli
cli
cli
jmp
loope
incl
sar
out
loopne
div
hlt
decl
add
pop
cmp
lcall
add
push
xor
call
add
out
jmp
jmp
jmp
call
int
incl
repnz
icebp
icebp
incl
add
inc
add
add
incl
incl
incl
incl
incl
incl
add
add
add
inc
stc
stc
stc
stc
stc
stc
jmp
in
incl
ror
ljmp
dec
ret
dec
es
bound
or
pop
cmp
out
jmp
jmp
jmp
call
int3
incl
fstp
out
out
out
out
out
out
incl
add
inc
add
add
incl
incl
incl
incl
incl
incl
add
add
add
inc
clc
clc
clc
clc
clc
clc
jmp
xorl
out
fdivrp
cmc
repnz
decl
add
sbbb
jo
pop
inc
mov
leave
jmp
jmp
dec
mov
jo
loope
loope
in
in
in
jmp
out
incl
add
inc
add
add
incl
incl
incl
incl
incl
incl
add
add
add
inc
clc
clc
clc
clc
clc
clc
out
out
out
jmp
imul
out
jmp
cli
stc
clc
ljmp
cmp
incl
mov
in
fdivrp
loop
fdivr
xlat
decl
cwtl
jmp
in
jmp
in
jmp
loopne
incl
add
dec
add
add
incl
incl
incl
incl
incl
incl
add
add
add
inc
div
idiv
div
idiv
cmc
cmc
cmc
dec
les
call
int3
jmp
loopne
push
in
jmp
stc
div
std
std
std
push
bnd
adc
incl
pop
adc
in
fdivrp
aam
sar
insl
pop
inc
mov
in
fcomp
fdivr
add
add
add
add
incl
incl
incl
incl
incl
incl
add
add
add
inc
cmc
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
lock
jbe
fmul
enter
in
call
in
push
icebp
out
call
ror
decl
add
dec
es
sbbb
int
mov
mov
lcall
loope
fdivrp
dec
into
into
incl
add
push
add
add
incl
incl
incl
incl
incl
incl
add
add
add
inc
cmc
cmc
cmc
push
cmc
cmc
push
hlt
hlt
push
repz
fstp
xlat
call
jbe
inc
mov
call
enter
fstp
jmp
loopne
jmp
int
ret
mov
pushl
jbe
call
into
lret
fdivr
dec
int
inc
add
add
add
add
incl
incl
incl
incl
incl
incl
add
add
add
inc
repz
repz
repz
repnz
icebp
icebp
fdivr
movsb
cwtl
mov
subb
xchg
subl
les
stos
jmp
subl
mov
iret
int3
fcmovu
rcl
sar
int3
int3
int3
inc
ret
mov
add
pop
add
add
incl
incl
incl
incl
incl
incl
add
add
add
inc
icebp
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
lock
lock
lock
in
in
in
dec
ret
movsb
cwtl
mov
mov
jns
dec
jns
dec
decl
xchg
mov
sarl
call
aam
dec
into
into
inc
mov
mov
mov
incl
add
popa
add
add
incl
incl
incl
incl
incl
incl
add
add
add
inc
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
in
in
in
in
in
in
in
in
in
in
in
in
jmp
jmp
out
out
fcomp
fdivr
mov
mov
pushl
scas
scas
ljmp
mov
add
incl
incl
incl
incl
incl
incl
incl
add
add
add
inc
out
out
out
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
jmp
jmp
jmp
jmp
ljmp
fstp
mov
cmpsl
call
nop
nop
decl
xchg
xchg
call
mov
inc
incl
incl
incl
incl
incl
incl
incl
add
add
add
inc
in
in
in
in
in
in
in
in
in
jmp
jmp
jmp
jmp
jmp
jmp
ljmp
ljmp
jmp
out
jmp
loop
call
rcl
pushl
jp
jp
je
je
jno
jno
jb
jb
addl
add
incl
incl
incl
incl
incl
incl
incl
add
add
add
inc
ljmp
ljmp
jmp
jmp
jmp
jmp
call
out
loope
loope
fcos
mov
movsb
js
js
jae
jae
jb
jb
addl
inc
ret
ret
dec
enter
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
inc
call
call
call
call
call
call
jmp
out
jmp
in
jmp
loopne
fcos
rcl
sar
mov
xchg
xchg
sti
sti
sti
cli
cli
cli
stc
stc
stc
clc
clc
clc
fcmovnu
incl
add
or
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
inc
out
out
out
out
out
out
out
out
out
out
out
out
out
out
in
in
in
in
fcomp
fdivr
rcl
sar
mov
mov
xchg
xchg
xchg
fdivr
ret
incl
add
and
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
inc
in
in
in
in
in
in
in
in
in
in
in
in
in
in
jecxz
jecxz
fstp
fcomp
fdivr
rcl
sar
enter
mov
lods
lods
lcall
jmp
loopne
inc
mov
and
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
inc
in
in
in
in
in
in
in
in
in
in
in
in
jecxz
jecxz
fstp
xlat
xlat
xlat
call
rcl
inc
mov
pushl
mov
movsl
fstp
mov
incl
add
and
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
inc
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
loop
loop
fdivr
dec
iret
iret
inc
mov
mov
mov
ljmp
cwtl
pushl
loopne
inc
mov
sbb
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
inc
loop
loop
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
loop
loop
fdivr
aad
aad
into
into
into
inc
mov
mov
mov
ljmp
mov
cltd
inc
mov
incl
add
push
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
mov
pushl
mov
pushl
mov
stos
stos
stos
jmp
popf
call
nop
nop
call
xchg
xchg
lcall
mov
add
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
add
jmp
add
jmp
add
jmp
add
ljmp
add
add
add
add
add
add
add
adc
add
add
add
incl
add
incl
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
add
add
clc
mov
mov
mov
clc
push
mov
mov
mov
push
add
add
add
add
add
add
add
add
clc
push
add
add
add
mov
add
or
push
add
add
ja
mov
mov
or
push
add
add
mov
mov
clc
push
add
pop
js
jo
add
add
ja
add
clc
push
add
pop
mov
ja
ja
ja
xchg
or
push
add
js
jo
add
ja
ja
jo
or
push
add
mov
inc
xchg
ja
ja
js
add
clc
push
add
xchg
dec
hlt
jo
ja
ja
mov
or
push
add
ja
decl
pop
ja
ja
mov
clc
push
add
ja
hlt
clc
pop
ja
ja
js
or
push
add
hlt
inc
jo
ja
ja
orb
push
pop
mov
ja
outsl
dec
addb
ja
js
or
push
pop
mov
jo
cmove
add
ja
xchg
clc
push
pop
push
or
inc
inc
lock
ja
addr16
push
pop
push
pop
hlt
inc
inc
lock
ja
addr16
push
pop
push
add
dec
lock
ja
addr16
push
add
add
ja
orb
push
add
add
add
js
or
push
add
add
testb
ja
orb
push
add
ja
add
pop
inc
addb
xchg
clc
push
add
push
add
mov
or
push
add
mov
add
add
hlt
pushaw
js
add
clc
push
add
jbe
ja
add
add
or
push
add
pop
push
add
mov
clc
push
add
add
ja
ja
ja
xchg
push
add
add
xchg
xchg
add
or
push
add
add
or
push
or
push
add
add
add
mov
add
or
push
add
add
clc
push
add
add
clc
push
add
add
clc
push
add
ud0
clc
push
add
sldt
add
js
push
add
sldt
add
push
add
sldt
pop
js
push
add
sldt
ja
push
add
sldt
js
push
add
ja
push
add
sysret
js
push
add
emms
push
add
vmread
push
add
jg
decl
add
aas
cld
add
add
aas
incb
cld
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
jg
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
add
add
add
add
or
add
add
incl
cld
sti
cld
add
stc
cli
add
idiv
xor
testb
icebp
repnz
lock
call
add
add
jmp
jecxz
cli
clc
clc
std
std
add
sti
sti
sti
cli
cli
push
icebp
icebp
jmp
jecxz
call
rcl
dec
int
ljmp
fmuls
in
fimuls
jecxz
fimull
out
loope
div
hlt
push
hlt
repz
int
call
lret
xbegin
call
loope
mov
enter
iret
enter
fcmovbe
push
out
in
add
in
ljmp
shll
loop
sar
fst
iret
add
fcmovnbe
add
jecxz
xchg
sar
iret
lret
enter
fldl
mov
nop
ja
mov
push
xlat
int3
ret
clc
pushf
xchg
xchg
jmp
fcmovbe
add
mov
fcom
add
loope
jo
fcmovbe
clc
lcall
add
movsl
xchg
add
cltd
mov
mov
mov
rol
mov
ja
ror
xchg
mov
jmp
fst
add
add
sbb
dec
mov
jl
lcall
subl
test
js
xchg
cmp
lcall
mov
sarb
ror
clc
in
aad
ljmp
pop
icebp
out
jmp
out
jmp
clc
fstp
xlat
push
repz
add
repnz
lock
pop
cmpsb
movsl
movsb
ja
div
clc
dec
es
push
cmp
outsl
pop
inc
jo
pop
dec
jo
arpl
bound
jl
push
incl
imul
mov
ja
jg
clc
mov
jp
pop
pop
test
xchg
xorl
imul
xchg
xorb
jge
pop
jp
popa
add
jb
ja
jns
clc
mov
fwait
pushl
and
pop
push
cmp
inc
jno
cmp
jl
clc
lahf
xchg
xchg
lods
mov
jle
leave
les
ja
das
add
dec
sub
call
push
add
or
js
fs
mov
cltd
xchg
mov
mov
xchg
mov
add
fs
xor
add
pop
aaa
add
push
xor
or
inc
sub
imulb
daa
ja
jge
clc
fwait
test
mov
andb
lods
cmpsl
inc
in
fidivl
fcmovnu
clc
pop
cmp
add
adc
dec
sbb
jbe
and
jnp
cs
jg
cmp
test
ja
jne
or
js
pop
adc
fcos
incb
std
ja
cld
sti
add
cli
stc
xchg
clc
idiv
hlt
hlt
repz
repnz
add
lock
ja
mov
mov
popf
popf
pushf
clc
std
std
sti
cld
sti
add
stc
clc
mov
clc
divl
div
xor
icebp
clc
out
lock
in
out
in
add
incb
idiv
clc
add
div
clc
icebp
repnz
icebp
icebp
add
lock
out
out
mov
in
add
clc
std
std
stc
stc
cli
add
cmc
testb
icebp
repnz
out
lock
in
out
clc
std
std
std
add
div
add
cmc
cmc
add
repz
repnz
out
out
out
out
out
out
add
in
in
add
jmp
add
ljmp
in
in
in
in
loop
loop
loope
loope
loopne
loopne
fstp
flds
xlat
xlat
xlat
add
rcl
add
int3
int3
dec
leave
leave
clc
ret
ret
ret
mov
cltd
cltd
add
mov
jl
jl
ja
ja
je
je
insl
insl
insl
add
data16
popa
lcall
pop
call
push
add
push
add
dec
add
add
xor
incl
add
hlt
xor
hlt
hlt
xor
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
xor
div
xor
div
hlt
cli
incl
testl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
cli
add
add
add
add
add
add
int3
les
adc
or
int3
int3
add
add
add
add
add
add
hlt
testl
add
add
int3
or
mov
push
mov
add
add
add
add
add
testl
add
add
add
add
add
add
add
add
or
icebp
push
jo
push
push
push
jo
push
mov
adc
add
add
add
hlt
cli
add
add
add
add
mov
inc
dec
or
add
or
add
add
add
add
hlt
testl
int3
adc
xorb
sbb
add
add
sbb
add
add
add
testl
add
add
add
add
add
int3
add
or
sbb
sbb
or
sbb
sbb
sbb
sub
push
adc
add
add
push
testl
sub
push
sub
add
addr16
sbb
sbb
sbb
sbb
inc
jo
or
add
int3
push
cli
add
add
sbb
dec
jno
or
or
sbb
sbb
sbb
push
jo
add
add
push
testl
push
xchg
sbb
add
dec
test
or
sbb
sbb
sbb
sbb
cmp
add
push
cli
add
les
addb
sbb
dec
orl
lods
adc
or
or
sbb
sbb
sbb
int3
push
testl
xchg
sbb
sbb
push
orl
jne
or
or
sbb
sbb
sub
or
add
hlt
test
sub
sbb
sbb
add
dec
mov
or
or
sbb
sbb
sbb
mov
add
push
cli
add
or
dec
or
or
or
push
orl
sbb
sbb
sbb
dec
inc
push
or
add
testl
add
add
add
add
add
adc
inc
dec
or
sbb
sbb
sbb
sahf
add
add
add
adc
sbb
inc
jo
add
push
cli
add
adc
inc
dec
or
sbb
add
add
mov
cmpsl
dec
add
sbb
sbb
inc
push
adc
add
hlt
testl
sbb
sbb
add
add
pop
xorl
add
sbb
sbb
inc
insb
adc
int3
push
cli
add
adc
inc
dec
sbb
addr16
add
add
mov
cmpsl
dec
dec
add
sbb
or
xchg
insb
adc
int3
push
test
sub
sbb
add
add
add
stos
mov
add
add
sbb
sbb
jo
or
push
cli
add
or
sub
sbb
add
add
add
stos
stos
stos
addr16
or
or
push
or
or
hlt
testl
xchg
sbb
or
add
add
add
stos
stos
mov
or
inc
scas
xchg
or
add
hlt
cli
add
add
or
addr16
add
adc
push
add
add
dec
inc
imul
testl
push
inc
dec
or
sbb
add
add
inc
subl
or
push
les
or
push
test
jo
inc
dec
or
sbb
addr16
dec
stos
stos
stos
stos
or
push
push
adc
les
add
hlt
cli
add
int3
add
pop
imul
or
sbb
sbb
or
inc
dec
dec
lods
dec
inc
imul
or
or
hlt
test
or
dec
sbb
or
sbb
sbb
and
or
or
or
push
testl
add
mov
inc
sub
and
sbb
sbb
dec
dec
inc
push
imul
add
push
testl
or
or
jno
inc
inc
inc
inc
sub
xchg
inc
jno
push
mov
les
add
add
or
hlt
cli
int3
int3
int3
sub
les
int3
or
jo
push
push
push
imul
int3
or
int3
or
push
test
or
les
pop
inc
mov
jo
inc
pop
adc
les
add
or
or
testl
add
add
add
add
or
add
les
addr16
les
les
or
or
int3
les
les
les
add
int3
int3
push
jo
les
int3
or
or
les
les
les
add
or
add
add
int3
or
or
hlt
testl
les
les
add
les
les
add
les
int3
or
or
or
or
or
int3
aam
push
testl
or
or
les
les
add
les
add
les
idiv
push
cli
add
les
add
or
or
les
les
les
les
int3
les
testl
add
adc
cmp
add
or
or
or
les
or
or
les
les
add
les
add
add
add
add
adc
cmp
add
testl
les
les
add
or
or
or
or
les
testl
adc
cmp
add
add
or
or
les
add
les
les
les
or
testl
adc
add
cli
les
add
les
les
les
les
les
les
add
testl
cmp
add
les
les
les
or
les
les
add
add
les
add
int3
or
add
adc
cmp
add
testl
add
or
les
or
les
or
les
add
add
cmp
add
add
or
les
add
les
les
add
or
or
les
int3
or
adc
cmp
cli
add
or
or
or
add
or
or
or
or
add
les
notl
add
add
or
add
or
or
or
or
add
or
or
or
or
idivl
incl
add
div
cli
div
div
cli
div
div
cli
div
div
cli
div
div
cli
incl
decl
icebp
incb
add
add
cld
add
add
aas
incb
cld
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
aas
cld
add
add
add
jg
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
add
add
add
add
and
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
pop
push
pop
pop
add
add
add
add
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
js
add
jns
add
jns
push
push
push
add
cmp
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
repz
std
std
std
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
pushl
cmpsl
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
std
stc
stc
stc
push
icebp
icebp
ljmp
jmp
loopne
fdivrp
loopne
loopne
in
in
ljmp
stc
stc
stc
jns
jns
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
stc
stc
push
div
jmp
out
call
rcl
mov
mov
jmp
pushf
pushf
lcall
pushf
pushf
jmp
mov
mov
iret
iret
jmp
loop
push
repnz
stc
stc
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
cli
cli
cli
sti
sti
sti
cld
cld
cld
pushl
jne
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
stc
stc
stc
stc
stc
jmp
iret
iret
ljmp
lea
jns
pusha
pushl
push
pushl
dec
pushl
dec
pushl
dec
pushl
push
jns
pop
jg
outsb
decl
test
leave
jmp
jecxz
push
hlt
hlt
cli
cli
cli
sti
sti
sti
cli
cli
cli
cli
cli
cli
cli
cli
cli
cld
cld
cld
pushl
jne
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
stc
stc
stc
stc
stc
mov
lea
decl
xchg
test
lret
jmp
fcom
push
out
jmp
clc
cmc
hlt
push
repz
jmp
loopne
int3
pushl
push
decl
mov
fcomp
fdivr
repnz
cli
cli
cli
cli
cli
cli
cli
cli
cli
stc
stc
stc
sti
sti
sti
pushl
jne
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
stc
stc
std
std
std
std
std
std
clc
clc
clc
mov
scas
jge
incl
mov
mov
clc
cmc
repz
cld
cld
sti
sti
cli
cli
clc
div
stc
clc
idiv
cld
cld
cld
cld
sti
cli
push
out
jmp
loop
sar
shlb
pushl
pop
jmp
push
repnz
clc
clc
clc
stc
stc
stc
stc
stc
stc
sti
sti
sti
pushl
jbe
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
clc
clc
std
std
std
clc
clc
clc
jmp
loopne
pushl
popa
call
mov
jmp
ljmp
jmp
fstp
jmp
fcmovbe
aad
aam
aam
loopne
aad
loope
xlat
jmp
fcompp
jmp
jmp
fst
call
ret
mov
pushl
push
jmp
xlat
push
repnz
stc
stc
stc
clc
clc
clc
cli
cli
cli
pushl
jbe
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
div
cld
cld
sti
cld
cld
ljmp
jnp
popa
call
mov
call
enter
push
lock
push
lock
sar
aam
aam
sar
sar
sar
sar
sar
int3
dec
shll
jne
push
ljmp
loope
push
cmc
idiv
div
idiv
stc
stc
stc
pushl
ja
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
div
cld
cld
cld
push
div
call
rcl
incl
gs
scas
mov
incl
add
push
xor
call
adc
subl
aam
lock
aad
loopne
aad
aad
aad
aad
aam
aam
aam
fst
into
dec
mov
jb
jns
pop
inc
mov
in
in
in
push
div
clc
clc
clc
js
js
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
div
cli
cli
cli
jmp
in
ljmp
push
pushl
lret
loopne
cmp
add
push
das
add
dec
sub
aas
push
add
pop
inc
and
aad
push
lock
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
aad
aad
aam
aam
aad
fxch
enter
mov
lcall
fstp
push
cmc
cmc
clc
clc
clc
jns
jns
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
div
push
cmc
cmc
call
rcl
jg
lcall
shll
loopne
pushl
push
or
cmp
add
dec
sub
call
add
inc
and
pushl
cmp
loope
fdivr
repnz
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
aad
aad
aam
sar
aad
sar
xchg
test
jbe
push
dec
lret
lock
div
jns
jns
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
div
in
in
in
pushl
fs
pushl
ror
aad
loopne
decl
and
decl
add
push
xor
incl
add
cltd
xchg
jmp
fcmovu
jmp
fcmovu
jmp
fcmovbe
jmp
fcmovbe
jmp
fcmovbe
aad
aam
aad
fst
iret
inc
mov
jle
push
ljmp
call
idiv
jns
jns
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
div
jmp
in
call
jb
inc
mov
fst
sar
aad
aam
aad
in
lcall
sbb
call
add
push
sub
push
dec
lds
jmp
fcmovu
jmp
fcmovu
jmp
fcmovbe
jmp
fcmovbe
aad
aad
aam
aam
iret
ret
xchg
jle
call
loope
push
div
jns
jns
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
hlt
hlt
jmp
loopne
incl
subb
les
aam
aad
aam
aam
loopne
xlat
ljmp
dec
cmp
add
dec
and
popa
jmp
loopne
jmp
fnstsw
jmp
loopne
jmp
fstp
jmp
fcmovbe
aad
aam
aad
fmul
xchg
cmp
jne
fcmovu
div
idiv
js
js
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
div
fdivr
jns
push
jmp
lret
aad
aam
aam
loope
xlat
jmp
jecxz
ljmp
push
lock
pushl
and
push
xor
call
ljmp
daa
jmp
jecxz
aad
aam
loopne
aad
fcmovnbe
lret
pushl
push
call
aad
push
cmc
cmc
js
js
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
div
fcos
jae
dec
jmp
into
aad
ljmp
std
std
std
pushl
incl
add
pop
cmp
push
xor
or
push
ss
push
xor
decl
add
jmp
jecxz
aam
aad
fcmovnbe
int3
pushl
pop
dec
call
rcl
push
repz
pushl
jbe
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
div
fcmovnu
outsl
pop
inc
jmp
into
fcmovbe
jmp
loope
push
lock
cli
cli
stc
inc
sarb
pop
cmp
lcall
lcall
add
push
xor
call
decl
add
jmp
jecxz
aam
aad
fcmovnbe
int3
pushl
pop
inc
call
aam
push
icebp
icebp
pushl
jbe
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
div
fdivrp
jb
dec
lcall
lret
loopne
jmp
jecxz
push
out
in
clc
div
clc
div
jmp
aaa
incl
push
jmp
or
pop
cmp
decl
cmp
add
jmp
jecxz
aad
aam
aad
fcmovbe
lret
lahf
pushl
dec
call
xlat
xlat
push
out
out
pushl
jne
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
div
jmp
in
jnp
push
call
shll
in
fdivrp
out
in
jmp
call
sub
pushl
sbb
pusha
cmp
inc
jmp
jecxz
aad
aam
aad
xlat
int3
ret
jmp
push
fcmovu
out
out
out
pushl
stos
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
div
jmp
jge
incl
test
jmp
jmp
in
repz
sti
sti
cli
inc
mov
adc
jb
and
outsb
dec
pop
jp
cs
out
jmp
jmp
loope
aam
aad
aam
aam
iret
ret
xchg
jg
decl
loopne
in
in
in
pushl
jae
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
cmc
cmc
push
icebp
icebp
jmp
pop
inc
pushl
lret
sar
call
jmp
push
hlt
repnz
cld
cld
sti
sti
cli
cli
jp
pop
incl
push
pushl
and
outsb
dec
sbb
popf
xchg
jmp
loopne
aam
aad
int
mov
addr16
jmp
in
ljmp
pushl
jae
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
hlt
hlt
push
cmc
cmc
call
into
lret
pusha
dec
call
mov
leave
jmp
ljmp
push
cmc
hlt
std
sti
sti
call
int
jmp
adc
jo
pop
pushl
and
jo
sbb
xchg
jge
sar
aad
mov
ljmp
inc
sarl
jmp
pushl
jno
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
repz
push
cmc
cmc
push
icebp
icebp
jmp
arpl
scas
pushf
mov
rol
mov
jmp
ljmp
push
repz
cli
clc
clc
std
cld
sti
std
std
lcall
sub
pushl
and
ja
and
jo
sbb
ja
and
push
lock
int
mov
outsb
pop
decl
jecxz
call
out
pushl
jo
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
icebp
repz
std
std
push
hlt
hlt
push
hlt
hlt
jmp
in
jp
push
incl
cmpsl
cwtl
call
lret
into
jmp
jmp
jmp
in
push
icebp
lock
hlt
repz
stc
div
push
repz
incl
push
ljmp
push
pushl
and
jae
sbb
jmp
jecxz
inc
mov
decl
pop
inc
dec
int
jmp
out
jmp
in
jmp
in
std
std
cld
ljmp
outsl
stos
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
lock
cld
cld
cld
push
repz
repz
out
out
out
pushl
push
cmp
inc
mov
call
lret
iret
jmp
fstp
jmp
loope
ljmp
in
ljmp
icebp
out
in
out
in
ljmp
inc
adc
inc
sub
incl
push
jg
cmp
aam
mov
ljmp
inc
lcall
loop
jmp
in
jmp
jecxz
jmp
loope
clc
clc
clc
ljmp
insl
stos
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
out
out
cli
cli
cli
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
out
out
out
pushl
pop
inc
decl
mov
mov
into
jmp
fcmovbe
jmp
jmp
jmp
loopne
jmp
loopne
jmp
loopne
ljmp
ljmp
xchg
test
test
mov
outsb
pop
inc
call
jmp
jecxz
jmp
loop
jmp
loopne
cmc
cmc
cmc
ljmp
stos
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
in
in
stc
stc
stc
push
lock
lock
lock
out
out
out
in
in
in
ljmp
push
cmp
jl
push
jmp
cmpsl
call
lds
fcmovbe
leave
fcmovnbe
int
fcmovnbe
int
fcmovnbe
int
fcmovbe
lret
into
call
lret
rol
mov
mov
ja
ljmp
cmp
jmp
loope
jmp
jecxz
jmp
loop
fdivrp
fstp
icebp
icebp
icebp
ljmp
imul
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
in
in
clc
clc
clc
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
jmp
jmp
mov
imul
pop
inc
incl
lea
mov
xchg
inc
mov
inc
mov
scas
inc
mov
movsl
mov
xchg
cmp
js
pushl
dec
pushl
dec
jmp
loope
jmp
loop
jmp
loope
fstp
fcmovnu
fcmovnu
jmp
jmp
gs
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
in
in
push
div
in
out
out
out
out
out
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
jmp
in
ljmp
fs
ljmp
cmp
je
dec
jge
push
incl
je
incl
push
pushl
dec
ljmp
pushl
inc
lcall
fcom
jmp
loop
jmp
loope
fstp
fdivr
fcmovu
fcos
aam
aam
loope
loope
popa
popa
popa
test
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
ljmp
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
jmp
jmp
jmp
jmp
jmp
jmp
ljmp
mov
xchg
mov
xchg
xorl
je
jg
pop
incl
xorb
xchg
mov
mov
cmpsl
call
into
lret
loopne
jmp
fsubp
fstp
fcmovnu
fcmovu
fcos
fcomp
fdivr
aad
aad
rcl
sar
lret
lret
lret
call
lcall
pop
test
add
pop
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
jmp
hlt
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
ljmp
ljmp
ljmp
jmp
jmp
ljmp
jmp
jmp
jmp
out
jmp
in
jmp
loopne
fcmovu
aad
aad
int
int
lret
lret
lret
dec
lret
lret
lret
lret
dec
lret
mov
sar
mov
int3
jmp
pusha
mov
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
jmp
repz
ljmp
ljmp
ljmp
jmp
jmp
jmp
jmp
jmp
jmp
call
out
jmp
in
jmp
in
jmp
loope
fcmovu
iret
iret
iret
inc
ret
ret
pushl
mov
pushl
mov
pushl
lods
lods
ljmp
test
ret
dec
dec
imul
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
call
repz
jmp
jmp
jmp
jmp
call
call
jmp
jmp
jmp
call
out
jmp
out
jmp
in
jmp
in
jmp
loope
inc
pushl
fwait
fwait
call
mov
decl
mov
jmp
cwtl
cwtl
fldl
add
adc
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
out
push
repnz
call
call
call
call
call
call
call
call
call
jmp
out
jmp
in
jmp
in
jmp
loop
jmp
loope
fdivr
rcl
sar
mov
mov
jle
imul
jmp
popa
jmp
pushl
jae
popf
popf
popf
jmp
sub
aaa
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
out
push
icebp
icebp
jmp
out
call
call
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
in
in
in
in
jecxz
jecxz
loop
loop
loope
loope
fstp
fcmovu
int
int
mov
mov
cwtl
cwtl
cwtl
lcall
xchg
xchg
call
xchg
xchg
jmp
mov
repnz
sub
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
in
out
out
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
in
jmp
in
jmp
jecxz
jmp
loope
jmp
loopne
fdivrp
fcmovnu
xlat
xlat
xlat
dec
lret
lret
ljmp
cwtl
cwtl
cld
cld
cld
dec
int
out
sbb
sbb
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
in
in
in
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
jecxz
jmp
loop
jmp
loopne
fstp
fcmovnu
fcos
aad
aad
mov
stos
call
sti
sti
sti
push
icebp
icebp
mov
and
cmp
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
jecxz
out
out
out
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
jecxz
jmp
loope
jmp
loope
fdivrp
fstp
fcmovu
fcos
call
rcl
inc
cmpsb
cmpsb
cmpsb
call
cld
cld
cld
in
in
in
inc
ret
and
and
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
loop
in
in
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
jecxz
jmp
loop
jmp
loope
jmp
loopne
fstp
fdivr
fcmovnu
fcos
xlat
xlat
xlat
call
call
rcl
inc
rol
sahf
sahf
sahf
lcall
div
push
repnz
rol
adc
adc
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
loop
in
in
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
jecxz
jmp
jecxz
jmp
loope
jmp
loopne
jmp
loopne
fdivrp
fstp
fcmovnu
fcos
fcomp
fdivr
xlat
xlat
xlat
call
aad
call
aam
dec
lret
lret
mov
cltd
cltd
jmp
repnz
mov
and
cmp
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
loope
in
in
in
jmp
jecxz
jmp
jecxz
jmp
jecxz
jmp
jecxz
jmp
jecxz
jmp
loop
jmp
loope
jmp
loopne
fstp
fdivr
fcmovnu
fcos
fcomp
fdivr
xlat
xlat
xlat
call
aad
call
rcl
dec
into
into
inc
pushl
cltd
cltd
pushl
enter
and
cmp
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
loopne
loopne
jmp
jmp
jecxz
jecxz
loop
loop
loop
loop
loop
loop
loope
loope
loopne
loopne
fdivrp
fdivr
fcmovu
fcos
fcomp
fdivr
call
aad
call
aad
call
rcl
dec
leave
leave
mov
lods
lods
ljmp
mov
out
sbb
sbb
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
cmp
out
push
icebp
icebp
ljmp
jmp
jmp
jmp
call
out
out
out
in
in
jecxz
jecxz
loop
loop
loope
loope
fdivrp
fdivr
fcmovu
xlat
xlat
xlat
call
rcl
inc
mov
mov
mov
out
sub
cmp
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
push
push
push
and
fcomp
cli
out
out
fdivrp
fstp
fstp
fdivr
fdivr
fcmovnu
fcmovu
fcomp
fdivr
xlat
xlat
xlat
call
call
aad
call
aam
call
rcl
dec
iret
iret
dec
int
inc
mov
pushl
mov
cli
xchg
xchg
xchg
mov
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incb
add
add
clc
add
add
aas
int3
int3
clc
add
add
aas
cltd
cltd
clc
add
add
aas
data16
add
add
aas
xor
clc
add
add
aas
add
clc
add
add
aas
clc
add
add
aas
int3
int3
clc
add
add
aas
cltd
cltd
clc
add
add
aas
data16
add
add
aas
xor
clc
add
add
aas
add
clc
add
add
aas
clc
add
add
aas
int3
int3
clc
add
add
aas
cltd
cltd
clc
add
add
aas
data16
add
add
aas
xor
clc
add
add
aas
add
clc
add
add
aas
clc
add
add
aas
int3
int3
clc
add
add
aas
cltd
cltd
clc
add
add
aas
data16
add
add
aas
xor
clc
add
add
aas
add
clc
add
add
aas
clc
add
add
aas
int3
int3
clc
add
add
aas
cltd
cltd
clc
add
add
aas
data16
add
add
aas
xor
clc
add
add
aas
add
clc
add
add
aas
clc
add
add
aas
int3
int3
clc
add
add
aas
cltd
cltd
clc
add
add
jg
data16
add
add
jg
xor
add
add
jg
add
add
add
clc
add
add
dec
int3
clc
add
add
lcall
add
jmp
clc
add
add
pushl
xor
add
add
incl
add
add
add
clc
add
add
int3
int3
clc
add
add
lcall
add
jmp
cld
add
add
pushl
xor
add
ud0
add
add
add
or
adc
adc
add
add
sub
add
or
adc
add
add
or
push
add
adc
add
add
add
add
or
and
adc
add
add
call
add
and
add
add
add
add
and
add
add
add
add
xor
add
add
push
add
xor
add
add
add
add
xor
add
add
add
add
add
add
add
add
dec
add
adc
aas
add
dec
add
or
inc
add
loope
add
add
and
add
or
inc
add
add
or
dec
add
add
or
dec
add
dec
add
or
push
add
dec
add
or
push
add
dec
add
or
push
add
add
push
dec
add
or
pop
add
loope
add
add
add
add
or
or
add
add
add
dec
add
add
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
incl
pop
incb
add
incb
add
add
jg
add
outsl
incb
add
add
insl
mov
add
mov
add
add
or
add
or
add
or
add
or
add
add
add
inc
add
inc
add
inc
add
inc
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
dec
jmp
jmp
jmp
jmp
push
incl
add
add
add
sub
add
adc
add
and
add
add
add
add
add
inc
add
add
incl
add
lods
addl
incb
add
add
add
jg
mov
outsl
cmc
add
mov
add
mov
or
mov
add
push
add
cmc
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
loope
add
loope
add
loope
add
repz
add
add
add
add
add
add
add
add
add
xor
add
adc
adc
and
add
add
mov
add
adc
add
add
add
or
or
sub
add
and
add
inc
add
add
add
add
add
add
add
add
incl
add
add
add
add
pop
lock
psubb
add
clc
add
pop
cld
add
aas
cld
add
ja
add
incb
add
testb
or
mov
add
mov
add
mov
add
addb
add
add
clc
pop
clc
pop
push
pop
jmp
add
inc
add
inc
add
incl
add
incl
add
call
add
jmp
add
inc
add
jmp
ud0
jg
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
scas
addl
lock
psubb
add
clc
add
pop
cld
mov
add
cld
add
addr16
popf
add
mul
add
mov
add
mov
add
mov
add
addb
add
scas
cmp
pop
mov
add
add
rolb
push
rolb
push
addb
dec
add
dec
dec
add
add
add
cmp
add
add
add
add
add
inc
pop
in
inc
dec
jg
dec
add
add
add
add
add
and
inc
add
add
add
add
adc
add
add
add
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
incl
incl
add
add
add
add
add
add
add
add
xor
add
pop
add
add
add
push
add
jb
add
testb
add
jb
outsb
add
add
add
dec
push
add
jb
imul
add
imul
jb
outsb
add
add
add
xor
xor
xor
and
add
inc
add
add
jae
and
jp
add
add
outsb
add
add
jne
popa
add
add
add
add
add
dec
add
add
add
add
add
add
add
je
je
add
add
add
arpl
push
add
add
add
add
inc
add
jae
jo
imul
add
add
add
dec
dec
push
add
add
add
push
add
outsb
add
add
dec
pop
add
jb
cld
add
imul
add
jne
insb
add
outsb
add
add
add
push
add
jb
ja
in
jb
je
jae
add
add
dec
dec
pop
add
jb
cld
add
imul
add
add
inc
add
insb
add
and
outsb
add
arpl
push
add
add
add
add
add
add
add
add
inc
add
outsb
add
je
add
add
outsb
add
add
add
add
add
add
inc
add
jne
arpl
imul
add
add
add
add
add
add
and
push
add
push
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
add
add
add
add
loope
add
add
jae
jae
arpl
push
add
add
outsb
add
add
add
loope
add
outsl
add
imul
add
add
add
and
add
outsb
add
cld
add
add
add
add
and
add
add
arpl
push
add
add
insb
add
add
and
popa
add
jae
ja
in
push
add
add
nop
add
add
add
sub
add
outsb
add
outsb
add
add
add
jb
imul
add
add
data16
outsb
add
and
imul
add
imul
add
adc
add
add
add
add
add
and
add
add
data16
add
add
add
add
add
je
jb
add
add
add
add
push
dec
push
add
push
add
filds
add
or
push
add
add
sub
push
add
add
inc
add
jne
arpl
imul
add
add
add
add
add
add
jb
outsl
add
add
je
outsl
add
and
add
jae
je
add
add
outsb
add
add
add
add
add
add
outsb
add
add
or
push
add
add
sub
push
add
add
add
add
outsb
add
imul
je
add
add
dec
dec
xor
xor
xor
and
add
add
insb
add
add
and
jp
add
add
outsb
add
add
push
add
jb
add
jb
testb
add
jb
outsb
add
add
add
dec
push
add
jb
add
insb
add
imul
jb
outsb
add
add
add
outsl
add
add
imul
or
push
add
add
sub
inc
add
add
insb
add
je
in
je
add
add
inc
dec
dec
add
add
add
add
add
add
add
je
je
add
add
add
outsl
add
push
add
add
sub
dec
add
add
add
add
je
add
add
jne
outsb
add
add
add
inc
dec
add
bound
jae
jo
imul
add
or
push
add
add
sub
inc
add
outsb
add
popa
add
add
add
add
dec
add
jne
jb
cld
add
imul
add
jne
insb
add
outsb
add
add
je
jb
add
add
add
dec
dec
push
add
push
add
add
add
add
outsl
add
or
push
add
add
sub
sub
add
add
push
add
push
add
add
add
add
jne
jb
cld
add
imul
add
je
jb
add
add
sub
add
add
add
add
imul
add
push
add
outsb
add
add
add
insb
add
add
add
add
add
and
push
add
push
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
add
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
or
dec
add
and
push
add
outsb
add
and
push
add
jb
imul
add
add
add
add
add
add
add
incl
add
add
add
add
add
push
add
add
pop
add
add
adc
incl
add
add
add
push
add
add
and
pop
add
incl
add
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
ja
ja
add
popa
add
jb
outsl
add
add
add
add
outsl
add
add
add
add
add
add
add
add
add
incl
add
jns
jb
imul
je
and
sub
inc
add
add
add
add
add
add
add
add
add
add
add
popa
add
jb
outsl
add
add
add
sub
and
dec
add
arpl
add
add
add
add
add
addb
add
push
add
add
add
add
add
add
add
data16
add
add
or
dec
add
and
push
add
outsb
add
and
push
add
jb
imul
add
add
add
add
add
add
add
add
add
incl
add
add
and
push
add
add
add
add
and
dec
add
je
add
outsb
add
je
popa
add
add
jae
jae
add
add
add
push
add
add
add
add
jb
and
add
outsb
add
and
insb
add
imul
add
add
add
add
add
and
popa
add
sub
and
add
add
add
imul
testb
add
outsb
add
outsb
add
add
testb
add
je
add
add
add
add
add
add
push
add
add
pop
add
add
add
add
incl
add
data16
add
cmp
add
add
add
addb
push
add
add
sub
sub
lods
add
add
add
add
add
add
add
push
add
add
sub
inc
add
add
add
add
incl
add
push
add
add
add
xor
push
add
add
incl
add
jb
add
push
add
add
add
add
push
add
add
sahf
add
aaa
add
add
add
incl
add
jb
arpl
push
add
push
add
add
add
add
add
add
pop
add
outsl
add
and
popa
add
popa
add
je
add
add
ds
pop
add
outsl
add
and
popa
add
jb
imul
add
add
add
xor
xor
xor
and
add
inc
add
data16
arpl
push
add
add
add
je
adc
push
add
popa
add
add
add
add
add
dec
add
data16
add
imul
jb
add
add
add
add
jns
add
outsb
add
add
addb
dec
push
add
jo
jmp
add
jne
jb
add
add
dec
add
jb
add
add
add
inc
add
jne
arpl
insb
add
add
cmp
add
insl
add
outsl
add
imul
jb
add
add
dec
dec
inc
add
and
popa
add
popa
add
je
add
add
dec
dec
inc
add
and
popa
add
jb
imul
add
add
add
inc
add
imul
je
imul
and
outsb
add
outsb
add
add
push
add
jmp
add
add
add
add
push
add
jb
popa
add
call
add
jae
add
add
add
add
dec
add
jo
jb
imul
jb
add
add
add
add
add
jb
outsl
add
outsl
add
and
add
and
push
add
push
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
add
add
add
add
add
add
add
loope
add
outsl
add
jo
add
add
add
and
inc
add
add
imul
add
add
and
add
insb
add
add
add
add
and
add
jne
jo
jo
jb
imul
jb
addb
loope
add
add
add
je
imul
outsb
add
jb
and
add
add
je
add
add
add
nop
add
add
add
sub
add
jb
imul
addb
loope
add
jo
imul
and
insb
add
and
insb
add
add
adc
add
imul
imul
add
add
and
add
jne
jbe
jb
imul
add
add
add
je
jb
insb
add
add
add
add
push
dec
add
add
insl
add
jb
or
inc
add
add
add
add
push
dec
dec
add
jo
jb
imul
jb
add
add
add
add
inc
add
add
jmp
add
add
jb
outsl
add
add
je
imul
add
add
add
add
jne
imul
add
or
inc
add
add
add
add
adc
inc
add
data16
arpl
add
popa
add
add
add
add
xor
xor
xor
and
add
inc
add
data16
arpl
push
add
add
add
je
add
inc
dec
pop
add
outsl
add
and
add
jbe
popa
add
je
add
add
ds
pop
add
outsl
add
and
popa
add
add
jb
imul
add
add
push
add
add
outsb
add
add
add
add
jb
popa
add
or
inc
add
add
add
nop
add
jne
popa
add
add
add
add
add
dec
add
data16
add
imul
jb
add
add
add
add
jns
add
outsb
add
add
addb
dec
add
jne
jo
jmp
add
jne
jb
add
add
je
jb
insb
add
add
add
adc
add
outsl
add
je
jb
hlt
add
add
add
add
add
add
add
add
je
jb
insb
add
add
outsb
add
add
add
add
add
cmp
add
add
bound
outsl
add
imul
jb
or
inc
add
add
add
add
dec
dec
inc
add
and
add
jbe
popa
add
je
or
inc
add
add
add
add
add
inc
add
and
popa
add
add
jb
imul
add
add
je
jb
insb
add
add
sub
add
add
add
add
outsl
add
arpl
insb
add
add
nop
add
add
imul
add
addb
dec
inc
add
add
jb
outsl
add
outsl
add
and
add
and
push
add
push
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
add
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
or
dec
add
and
push
add
outsb
add
and
push
add
jb
imul
add
add
add
add
add
add
add
incl
add
add
add
add
add
push
add
add
pop
add
add
adc
incl
add
add
add
push
add
add
and
pop
add
incl
add
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
ja
ja
add
popa
add
jb
outsl
add
add
add
add
outsl
add
add
add
add
add
add
add
add
add
incl
add
jns
jb
imul
je
and
sub
inc
add
add
add
add
add
add
add
add
add
add
add
popa
add
jb
outsl
add
add
add
sub
and
dec
add
arpl
add
add
add
add
add
addb
add
push
add
add
add
add
add
add
dec
add
jbe
jb
imul
or
dec
add
and
push
add
outsb
add
and
push
add
jb
imul
add
add
add
add
add
add
add
add
add
incl
add
add
imul
add
and
insb
add
add
add
add
jae
add
add
push
add
add
add
outsl
add
insb
add
add
imul
and
push
add
bound
sub
and
outsl
add
and
insb
add
and
data16
arpl
push
add
and
insb
add
arpl
popa
add
add
add
add
jne
jbe
jb
imul
add
add
add
add
add
add
add
incl
add
jo
insb
add
arpl
add
add
je
mov
add
add
add
add
add
add
add
add
incl
add
add
add
push
add
add
add
xor
push
add
add
incl
add
push
add
add
imul
push
add
add
incl
add
jne
insb
add
jb
add
add
add
add
add
add
add
add
add
incl
add
jb
arpl
outsl
add
jb
imul
add
add
add
add
dec
add
add
popa
add
add
jae
arpl
imul
ds
push
add
add
arpl
imul
dec
dec
xor
xor
xor
and
add
dec
add
jae
je
jb
popa
add
add
add
add
adc
push
add
popa
add
add
add
add
add
inc
add
jae
jae
popa
add
add
add
add
add
popa
add
add
add
add
add
inc
dec
push
add
jo
jb
outsl
add
add
imul
dec
dec
inc
add
arpl
insb
add
add
cmp
add
popa
add
jbe
outsl
add
add
add
add
dec
dec
inc
add
popa
add
je
imul
dec
dec
dec
add
add
add
add
add
add
dec
dec
inc
add
insb
add
popa
add
add
add
outsl
add
and
arpl
popa
add
imul
je
outsl
add
add
add
add
add
dec
add
jo
outsl
add
je
popa
add
imul
imul
add
add
push
add
add
jo
popa
add
add
add
add
add
data16
jb
insl
add
jp
imul
imul
jne
and
push
add
push
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
add
add
add
add
loope
add
add
insb
add
popa
add
add
add
loope
add
outsl
add
imul
add
and
add
arpl
outsl
add
add
add
add
and
add
insb
add
insl
add
outsb
add
addb
loope
add
insb
add
add
imul
popa
add
add
add
add
add
add
add
nop
add
add
add
sub
add
imul
das
loope
add
jo
imul
arpl
outsl
add
add
add
insl
add
outsb
add
add
add
add
imul
add
add
and
add
jo
jb
imul
add
add
je
jb
insb
add
add
add
add
push
dec
add
push
add
add
add
je
jb
insb
add
add
add
push
dec
push
add
add
jo
popa
add
add
add
add
add
inc
add
add
add
and
jo
jb
outsl
add
add
add
jb
add
add
add
add
add
jae
arpl
imul
je
jb
insb
add
add
add
adc
add
imul
popa
add
add
jp
popa
add
add
add
xor
xor
xor
and
add
add
outsl
add
je
jb
popa
add
add
add
add
add
inc
dec
add
outsb
add
jb
popa
add
add
jae
arpl
imul
ds
add
imul
arpl
imul
add
add
add
push
dec
add
arpl
push
add
outsl
add
add
outsb
add
add
outsl
add
add
je
jb
insb
add
add
nop
add
jne
popa
add
add
add
add
add
inc
add
jae
jae
popa
add
add
add
add
add
popa
add
add
add
insb
add
add
add
je
jb
insb
add
add
add
adc
add
outsl
add
je
jb
outsl
add
add
jb
add
add
add
push
add
add
jb
outsl
add
add
imul
je
jb
insb
add
add
outsb
add
add
add
add
cmp
add
imul
jbe
outsl
add
add
or
inc
add
add
add
add
dec
dec
push
add
jae
jae
outsl
add
add
add
jbe
popa
add
je
imul
je
jb
insb
add
add
add
add
add
outsb
add
add
je
jb
outsl
add
add
add
add
outsb
add
add
outsl
add
add
jb
popa
add
insl
add
or
inc
add
add
add
sub
add
add
add
add
imul
popa
add
add
add
imul
add
addb
dec
add
outsb
add
outsl
add
insl
add
jp
imul
imul
jne
and
push
add
push
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
add
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
or
dec
add
and
push
add
outsb
add
and
push
add
jb
imul
add
add
add
add
add
add
add
incl
add
add
add
add
add
push
add
add
pop
add
add
adc
incl
add
add
add
push
add
add
and
pop
add
incl
add
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
ja
ja
add
popa
add
jb
outsl
add
add
add
add
outsl
add
add
add
add
add
add
add
add
add
incl
add
jns
jb
imul
je
and
sub
inc
add
add
add
add
add
add
add
add
add
add
add
popa
add
jb
outsl
add
add
add
sub
and
dec
add
arpl
add
add
add
add
add
addb
add
push
add
add
add
add
add
add
inc
add
jb
imul
dec
add
and
push
add
outsb
add
and
push
add
jb
imul
add
add
add
add
add
add
add
add
add
incl
add
arpl
imul
arpl
popa
add
add
add
add
outsb
add
add
imul
outsl
add
add
add
push
add
add
add
add
add
add
insb
add
insl
add
outsb
add
add
add
add
add
jo
jb
imul
add
add
add
add
add
push
add
add
pop
add
add
add
add
incl
add
jae
imul
outsl
add
add
add
add
add
add
add
add
add
incl
add
add
add
push
add
add
sub
inc
add
add
add
add
incl
add
push
add
add
add
xor
push
add
add
incl
add
jne
insb
add
add
add
add
add
push
add
add
sahf
add
aaa
add
add
add
incl
add
outsl
add
insb
add
popa
add
add
add
add
add
add
inc
add
insl
add
outsb
add
add
add
add
ds
inc
add
add
popa
add
add
add
dec
dec
xor
xor
xor
and
add
dec
add
jae
je
jb
popa
add
and
je
outsl
add
add
add
popa
add
add
add
add
add
inc
add
push
popa
add
add
add
add
add
popa
add
add
add
add
add
inc
dec
push
add
jo
jb
outsl
add
add
imul
add
dec
dec
inc
add
arpl
insb
add
add
cmp
add
bound
outsl
add
imul
jb
add
add
dec
dec
inc
add
popa
add
jp
popa
add
add
add
dec
dec
inc
add
add
add
add
add
dec
dec
dec
add
and
jae
add
add
popa
add
addr16
add
add
add
add
add
add
jne
insb
add
add
add
add
add
inc
add
outsb
add
imul
jb
popa
add
imul
add
add
add
add
dec
add
jo
jb
imul
jb
add
add
add
add
add
arpl
popa
add
add
add
add
imul
add
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
add
add
add
add
add
loope
add
jb
add
add
add
add
and
add
outsl
add
imul
add
add
and
add
add
jb
add
add
and
add
insb
add
insl
add
outsb
add
jb
addb
loope
add
add
add
arpl
imul
popa
add
and
and
je
outsl
add
add
add
add
add
add
imul
addb
loope
add
jo
imul
and
jbe
in
add
arpl
jne
insb
add
add
adc
add
jb
arpl
push
add
add
add
and
add
bound
jb
imul
add
add
add
je
jb
insb
add
add
add
add
push
dec
add
add
jb
popa
add
or
inc
add
add
add
add
push
dec
dec
add
jo
jb
imul
jb
add
add
add
add
inc
add
add
add
jb
and
jo
jb
outsl
add
add
je
outsl
add
add
add
add
add
popa
add
add
or
inc
add
add
add
add
adc
add
add
add
add
dec
dec
xor
xor
xor
and
add
add
outsl
add
je
jb
popa
add
and
je
outsl
add
add
add
add
jne
insl
add
outsb
add
add
add
add
ds
inc
add
add
popa
add
add
add
push
dec
add
popa
add
je
popa
add
add
and
arpl
outsl
add
jo
insb
add
je
popa
add
add
je
jb
insb
add
add
nop
add
popa
add
add
add
add
add
inc
add
push
popa
add
add
add
add
add
popa
add
add
add
insb
add
add
add
je
jb
insb
add
add
add
adc
add
outsl
add
je
jb
outsl
add
add
add
push
add
add
jb
outsl
add
add
imul
inc
add
add
add
outsb
add
add
add
add
cmp
add
add
outsl
add
imul
jb
or
inc
add
add
add
add
dec
dec
add
add
insb
add
outsb
add
add
and
jne
outsb
add
add
popa
add
outsl
add
add
je
jb
insb
add
add
add
add
push
add
outsl
add
add
popa
add
imul
popa
add
add
add
add
or
inc
add
add
add
sub
add
add
add
add
jne
arpl
insb
add
add
nop
add
add
jne
add
add
addb
dec
inc
add
add
arpl
popa
add
add
add
add
imul
add
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
add
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
or
dec
add
and
push
add
outsb
add
and
push
add
jb
imul
add
add
add
add
add
add
add
incl
add
jo
je
popa
add
add
add
add
add
add
add
add
add
adc
incl
add
add
add
push
add
add
and
pop
add
incl
add
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
ja
ja
add
popa
add
jb
outsl
add
add
add
add
outsl
add
add
add
add
add
add
add
add
add
incl
add
jns
jb
imul
je
and
sub
inc
add
add
add
add
add
add
add
add
add
add
add
popa
add
jb
outsl
add
add
add
sub
and
dec
add
arpl
add
add
add
add
add
addb
add
push
add
add
add
add
add
add
inc
add
jb
imul
or
dec
add
and
push
add
outsb
add
and
push
add
jb
imul
add
add
add
add
add
add
add
add
incl
add
add
add
jp
arpl
popa
add
add
add
add
add
add
arpl
imul
and
push
add
bound
and
sub
push
add
dec
add
add
add
and
add
jo
add
imul
jno
jne
add
add
insb
add
add
jb
arpl
push
add
and
insb
add
arpl
popa
add
add
jne
add
add
add
add
and
popa
add
jb
imul
add
add
add
add
add
add
add
add
add
add
incl
add
imul
arpl
imul
cmp
add
add
addb
push
add
add
add
add
add
incl
add
add
add
push
add
add
add
xor
push
add
add
incl
add
jo
je
popa
add
add
add
add
add
add
add
inc
add
add
add
add
incl
add
arpl
add
add
add
add
add
add
add
add
incl
add
popa
add
imul
jb
add
add
add
add
add
add
loope
daa
pop
add
add
ds
jle,pn
pop
add
add
dec
dec
xor
xor
xor
and
add
pop
xor
data16
cmp
add
add
add
add
add
jne
mov
add
add
dec
dec
add
add
inc
dec
sub
add
fcomps
add
add
add
inc
dec
lea
jne
add
add
jmp
cld
xor
xor
add
dec
sti
pop
dec
xor
bound
add
add
dec
dec
dec
push
add
add
dec
dec
cmp
xor
add
add
loopne
cld
xor
xor
xor
xor
xor
dec
xor
pop
xor
add
add
add
add
sub
add
add
add
add
xlat
xor
xor
xor
xor
add
add
add
add
push
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
and
and
imul
xor
xor
add
add
add
add
add
add
loope
xor
xor
xor
add
add
add
add
add
loope
xor
xor
xor
add
add
sub
add
add
and
xor
add
add
sub
add
add
and
dec
push
fs
sub
add
add
xor
data16
sahf
bound
add
add
sub
add
add
add
nop
add
add
add
sub
xor
add
xor
xor
xor
xor
xor
add
add
add
add
xor
xor
add
add
sub
add
add
and
xchg
dec
xor
add
add
sub
add
add
add
add
je
jb
insb
add
add
add
add
push
dec
mov
sub
add
sub
or
inc
add
add
add
add
push
dec
xlat
xor
xor
xor
xor
add
add
add
add
xlat
xor
xor
xor
dec
adc
add
add
sub
add
add
add
jge
dec
sub
add
sub
or
inc
add
add
add
add
adc
push
add
add
sub
add
add
dec
dec
xor
xor
xor
and
add
pop
xor
data16
cmp
add
add
sub
add
inc
dec
loope
daa
pop
sub
add
sub
add
add
ds
jle,pn
pop
sub
add
sub
add
push
dec
aad
jmp
mov
xor
xor
xor
add
add
sub
or
inc
add
add
add
nop
add
jne
mov
add
add
dec
dec
add
add
inc
dec
sub
add
fcomps
dec
add
add
add
je
jb
insb
add
add
add
adc
ss
mov
add
sub
add
add
inc
dec
lea
jne
add
add
sub
or
inc
add
add
add
outsb
add
add
add
add
cmp
pop
dec
xor
bound
sub
add
sub
or
inc
add
add
add
add
dec
dec
and
xor
nop
xorb
add
add
sub
or
inc
add
add
add
add
add
dec
push
imul
bound
add
sub
or
inc
add
add
add
sub
add
add
add
xor
xor
xor
add
add
add
add
xor
xor
add
add
sub
add
addb
dec
push
add
push
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
and
and
imul
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
add
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
or
sub
add
pushl
scas
xor
add
add
add
push
add
add
mov
pop
add
add
add
add
incl
add
add
add
add
add
push
add
add
pop
add
add
adc
incl
add
add
add
push
add
add
and
pop
add
incl
add
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
ja
ja
add
popa
add
jb
outsl
add
add
add
add
outsl
add
add
add
add
add
add
add
add
add
incl
add
jns
jb
imul
je
and
sub
inc
add
add
add
add
add
add
add
add
add
add
add
popa
add
jb
outsl
add
add
add
sub
and
dec
add
arpl
add
add
add
add
add
addb
add
push
add
add
add
add
add
add
mov
or
sub
add
pushl
scas
xor
add
add
push
add
add
pop
add
add
add
add
incl
add
insb
add
add
imul
and
push
add
bound
and
outsb
xor
xor
add
push
add
add
add
push
pop
xor
xor
jbe
jbe
xor
xor
xor
pop
push
xor
dec
xor
push
xor
add
add
add
add
push
add
add
pop
add
add
add
add
incl
bound
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
push
add
add
add
xor
push
add
add
incl
add
push
add
add
imul
push
add
add
incl
xor
xor
add
add
add
push
add
add
mov
add
add
add
incl
jno
add
add
add
sub
add
add
add
add
add
add
ds
pop
add
add
ds
sub
pop
add
add
dec
dec
xor
xor
xor
and
add
data16
push
call
add
add
add
add
push
sub
inc
dec
dec
dec
add
add
inc
dec
sub
add
lcall
add
add
inc
dec
lods
fs
add
dec
dec
stos
pop
scas
jae
add
dec
push
push
add
dec
dec
jmp
fisttpl
dec
dec
aam
ficoms
add
add
mov
push
jge
jno
inc
jb
add
add
add
add
mov
add
add
add
add
push
bound
add
add
add
push
mov
add
imul
add
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
add
add
add
add
loope
push
pop
push
sub
add
add
add
add
loope
pop
ss
sub
add
sub
add
add
and
lea
add
add
sub
add
add
and
and
xchg
sub
add
add
push
or
inc
add
add
add
add
pop
add
addb
loope
pop
ss
xchg
movsl
arpl
add
add
add
add
add
sub
add
add
and
bound
pop
sub
add
sub
add
add
add
add
je
jb
insb
add
add
add
add
push
dec
add
in
xchg
sub
add
sub
or
inc
add
add
add
add
push
dec
push
bound
add
add
add
add
sbb
pop
lods
fs
add
sub
add
add
add
nop
cli
push
sub
add
sub
or
inc
add
add
add
add
adc
in
or
add
add
sub
add
add
dec
dec
xor
xor
xor
and
add
data16
push
call
add
sub
add
inc
dec
ds
pop
sub
add
sub
add
add
ds
sub
pop
sub
add
sub
add
push
dec
push
add
add
sub
or
inc
add
add
add
nop
add
push
sub
inc
dec
dec
dec
add
add
inc
dec
sub
add
lcall
sub
or
inc
add
add
add
add
adc
cmpsl
arpl
push
sub
add
sub
add
add
inc
dec
lods
fs
add
sub
or
inc
add
add
add
outsb
add
add
add
add
cmp
push
add
push
add
add
add
je
jb
insb
add
add
add
dec
dec
adc
sub
add
sub
or
inc
add
add
add
add
add
adc
sub
add
sub
or
inc
add
add
add
sub
add
add
add
pop
scas
jae
add
add
add
add
pop
test
add
dec
jae
mov
add
imul
add
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
add
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
or
dec
add
and
push
add
outsb
add
and
push
add
jb
imul
add
add
add
add
add
add
add
incl
pop
add
add
add
add
add
add
add
add
add
adc
incl
add
add
add
push
add
add
and
pop
add
incl
add
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
ja
ja
add
popa
add
jb
outsl
add
add
add
add
outsl
add
add
add
add
add
add
add
add
add
incl
add
jns
jb
imul
je
and
sub
inc
add
add
add
add
add
add
add
add
add
add
add
popa
add
jb
outsl
add
add
add
sub
and
dec
add
arpl
add
add
add
add
add
addb
add
push
add
add
add
add
add
add
push
bound
pop
add
or
dec
add
and
push
add
outsb
add
and
push
add
jb
imul
add
add
add
add
add
add
add
add
add
incl
push
push
pop
fists
jg
push
inc
push
and
sub
push
add
dec
add
add
add
bound
arpl
mov
add
jbe
xor
testb
add
add
add
add
add
add
add
add
add
add
incl
jg
add
add
add
add
add
add
add
add
incl
add
add
add
push
add
add
add
xor
push
add
add
incl
pop
add
add
add
inc
add
add
add
add
incl
insl
add
add
add
add
add
add
incl
mov
add
add
sub
add
add
add
add
add
ds
pop
outsl
cwtl
cmp
add
add
dec
jle,pn
pop
outsl
cwtl
cmp
add
add
xor
xor
xor
and
add
outsl
cwtl
cmp
push
call
add
add
add
add
push
ljmp
dec
dec
dec
add
add
inc
dec
sub
add
fcomps
add
add
add
inc
dec
lods
fs
add
dec
dec
int
pop
mov
add
dec
adc
pop
add
add
dec
dec
jmp
dec
popl
add
add
mov
nop
add
add
dec
dec
xchg
insb
or
gs
jno
inc
jb
and
add
sub
add
add
add
add
pop
push
jo
and
add
add
add
add
xchg
mov
add
add
push
add
add
add
and
aaa
add
add
add
add
add
add
loope
push
or
add
add
add
add
add
loope
mov
mov
add
add
sub
add
add
and
dec
sub
add
sub
add
add
and
sub
xchg
sub
add
add
push
js
sub
add
sub
nop
add
add
add
sub
push
add
addb
loope
mov
mov
nop
push
jge
add
add
add
add
sub
add
add
and
xchg
pop
push
or
add
sub
add
add
add
add
je
jb
insb
add
add
add
add
push
dec
fcoml
dec
push
inc
add
add
add
je
jb
insb
add
add
add
push
dec
pop
push
jo
and
add
and
jne
and
push
add
add
sub
add
add
add
jge
sub
add
sub
or
inc
add
add
add
add
adc
mov
add
add
sub
add
add
dec
dec
xor
xor
xor
and
add
outsl
cwtl
cmp
push
call
add
sub
add
inc
dec
ds
pop
outsl
cwtl
cmp
add
add
sub
add
add
ds
jle,pn
pop
outsl
cwtl
cmp
add
add
sub
add
push
dec
push
pop
sub
add
sub
or
inc
add
add
add
nop
add
push
ljmp
dec
dec
dec
add
add
inc
dec
sub
add
fcomps
dec
add
add
add
je
jb
insb
add
add
add
adc
cmpsl
arpl
push
sub
add
sub
add
add
inc
dec
lods
fs
add
sub
or
inc
add
add
add
outsb
add
add
add
add
cmp
push
ss
sub
add
sub
or
inc
add
add
add
add
dec
dec
sbbb
sub
add
sub
or
inc
add
add
add
add
add
sbbb
sub
add
sub
or
inc
add
add
add
sub
add
add
add
xchg
pop
mov
add
add
add
add
data16
add
sub
add
addb
dec
fcoml
inc
add
add
push
add
add
add
and
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
add
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
or
dec
add
and
push
add
outsb
add
and
push
add
jb
imul
add
add
add
add
add
add
add
incl
pop
add
add
add
add
add
add
add
add
add
adc
incl
add
add
add
push
add
add
and
pop
add
incl
add
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
ja
ja
add
popa
add
jb
outsl
add
add
add
add
outsl
add
add
add
add
add
add
add
add
add
incl
add
jns
jb
imul
je
and
sub
inc
add
add
add
add
add
add
add
add
add
add
add
popa
add
jb
outsl
add
add
add
sub
and
dec
add
arpl
add
add
add
add
add
addb
add
push
add
add
add
add
add
add
mov
xchg
push
add
add
add
add
add
push
add
add
popa
add
jae
and
push
add
jb
imul
add
add
add
add
add
add
add
add
incl
push
mov
add
inc
push
and
sub
push
add
dec
add
add
add
bound
popw
arpl
mov
jbe
push
push
add
add
add
add
add
add
add
add
incl
jg
add
add
add
add
add
add
add
add
incl
add
add
add
push
add
add
add
xor
push
add
add
incl
pop
add
add
add
inc
add
add
add
add
incl
insl
add
add
add
add
add
add
incl
mov
add
add
sub
add
add
add
add
add
push
add
ds
xchg
int
roll
add
dec
dec
xor
xor
xor
and
add
test
push
mov
add
ret
add
add
add
adc
mov
enter
add
inc
dec
scas
mov
movl
dec
adc
add
add
addb
dec
xchg
mov
movl
add
add
add
lods
ffree
add
add
dec
dec
sbb
add
add
add
add
dec
sbb
add
add
pop
lds
pop
mov
dec
dec
movsb
mov
mov
dec
dec
fnstenv
je
and
pop
mov
ror
add
dec
add
add
add
add
and
adc
add
add
add
js
add
add
add
push
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
and
adc
add
add
add
add
add
add
loope
jl
mov
xor
push
add
add
add
add
loope
mov
add
sub
add
add
and
lds
mov
scas
sub
add
sub
add
add
and
lods
rcrb
add
add
add
enter
add
rcr
sub
add
sub
add
add
add
nop
add
add
add
sub
scas
add
addb
loope
mov
cmc
mov
adc
or
jl
sub
add
sub
add
add
and
lds
scas
sub
add
sub
add
add
add
add
je
jb
insb
add
add
add
add
push
dec
jmp
xor
inc
add
add
add
je
jb
insb
add
add
add
push
dec
js
add
add
add
and
add
add
add
add
xor
and
ffree
xor
sub
add
sub
add
add
add
enter
add
add
sub
or
inc
add
add
add
add
adc
hlt
mov
add
sub
add
add
dec
dec
xor
xor
xor
and
add
test
push
mov
add
ret
add
sub
add
inc
dec
push
add
dec
add
add
add
add
dec
xchg
int
shrl
add
sub
add
push
dec
add
mov
and
movsb
ret
mov
sub
add
sub
or
inc
add
add
add
nop
add
add
add
scas
mov
movl
dec
adc
add
add
addb
dec
xchg
mov
sub
add
sub
or
inc
add
add
add
add
adc
call
mov
inc
add
add
add
add
lods
ffree
sub
add
sub
or
inc
add
add
add
outsb
add
add
add
add
cmp
mov
lods
xor
push
add
add
add
je
jb
insb
add
add
add
dec
dec
pop
aad
add
mov
lods
and
pop
lds
pop
mov
push
add
add
add
je
jb
insb
add
add
add
add
pop
aad
add
mov
lods
and
movsb
mov
mov
push
add
add
add
je
jb
insb
add
add
sub
add
add
add
mov
add
add
add
sarb
dec
add
add
add
add
push
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
and
adc
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
add
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
or
dec
add
and
push
add
outsb
add
and
push
add
jb
imul
add
add
add
add
add
add
add
incl
movl
add
add
push
add
add
pop
add
add
adc
incl
add
add
add
push
add
add
and
pop
add
incl
add
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
ja
ja
add
popa
add
jb
outsl
add
add
add
add
outsl
add
add
add
add
add
add
add
add
add
incl
add
jns
jb
imul
je
and
sub
inc
add
add
add
add
add
add
add
add
add
add
add
popa
add
jb
outsl
add
add
add
sub
and
dec
add
arpl
add
add
add
add
add
addb
add
push
add
add
add
add
add
add
hlt
lds
scas
add
or
dec
add
and
push
add
outsb
add
and
push
add
jb
imul
add
add
add
add
add
add
add
add
add
incl
add
and
cld
enter
mov
and
lods
cwtl
mov
add
lds
xchg
mov
add
into
and
or
jl
inc
and
ror
enter
ret
and
add
add
add
add
add
push
add
add
pop
add
add
add
add
incl
into
cmp
add
add
addb
push
add
add
sub
sub
stos
add
add
add
add
add
add
add
push
add
add
add
xor
push
add
add
incl
movl
add
add
push
add
add
imul
push
add
add
incl
roll
add
add
add
add
add
add
add
add
add
incl
shrb
add
sub
add
add
add
jae
arpl
jb
imul
and
imul
je
push
add
add
outsl
add
imul
imul
arpl
popa
add
jae
imul
and
push
add
push
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
and
je
outsl
add
add
jne
outsb
add
add
insb
add
ja
insb
add
add
add
add
data16
add
je
and
arpl
outsl
add
je
imul
add
and
je
outsl
add
add
jne
outsb
add
and
jns
outsl
add
jb
and
arpl
outsl
add
jo
jne
je
add
and
insl
add
jns
and
bound
add
outsl
add
add
add
outsb
add
add
jo
outsl
add
jae
imul
add
add
add
add
add
outsl
add
and
ja
popa
add
je
and
je
outsl
add
add
bound
outsl
add
je
and
je
push
add
arpl
jb
imul
aas
add
add
imul
add
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
sbb
push
add
push
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
inc
add
popa
add
jb
outsl
add
add
add
and
inc
add
add
push
add
jbe
imul
sub
sub
add
ja
data16
add
add
add
ja
data16
add
add
add
jo
insb
add
add
add
add
imul
jae
and
sub
sub
add
add
add
add
add
add
add
add
jb
outsl
add
add
je
outsl
add
and
sub
sub
add
js
add
add
add
add
js
add
add
add
add
imul
add
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
and
ja
imul
and
add
jb
arpl
push
add
outsb
add
add
imul
add
jo
je
and
imul
add
add
add
and
inc
add
insb
add
and
jbe
add
insb
add
outsb
add
jae
popa
add
je
add
add
add
outsb
add
add
add
and
push
add
jb
imul
and
ja
add
je
add
push
add
add
jne
jae
add
data16
add
jb
je
and
ja
imul
sub
and
jb
add
add
add
je
and
add
jb
and
inc
add
insl
add
jne
je
add
and
insl
add
add
insb
add
arpl
push
add
add
jae
add
add
imul
je
and
insl
add
push
add
add
testb
add
je
add
and
push
add
add
add
add
and
inc
add
jae
data16
add
jb
jne
outsb
add
and
add
jae
and
push
add
jb
imul
jae
and
popa
add
bound
jb
add
push
add
add
add
imul
add
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
sbb
push
add
push
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
inc
add
popa
add
jb
outsl
add
add
add
and
inc
add
add
push
add
jbe
imul
sub
sub
add
ja
data16
add
add
add
ja
data16
add
add
add
jo
insb
add
add
add
and
inc
add
je
add
add
and
sub
sub
add
add
add
add
add
add
add
add
jb
outsl
add
add
je
outsl
add
and
sub
sub
add
js
add
add
add
add
js
add
add
add
outsb
add
add
arpl
jb
imul
and
add
and
arpl
add
add
and
popa
add
imul
je
imul
and
jb
popa
add
add
je
imul
insb
add
and
js
jmp
add
add
outsb
add
add
add
add
imul
add
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
add
imul
sbb
add
jmp
add
add
outsb
add
add
sbb
add
je
and
jo
popa
add
and
jae
jne
jae
jo
add
add
add
and
imul
add
je
and
jo
outsl
add
jae
imul
add
add
jne
add
add
outsl
add
add
and
outsl
add
add
outsb
add
je
add
jb
and
outsb
add
and
jb
jmp
add
jae
jae
add
add
insb
add
jae
add
add
outsl
add
push
add
add
sub
add
jae
and
popa
add
popa
add
add
outsb
add
add
and
insb
add
and
js
jmp
add
add
outsb
add
add
add
add
arpl
jb
imul
mov
add
imul
add
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
sbb
push
add
push
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
dec
add
popa
add
jb
outsl
add
add
add
and
inc
add
add
push
add
jbe
imul
sub
sub
add
ja
data16
add
add
add
ja
data16
add
add
add
jo
insb
add
add
jne
jae
and
insb
add
jae
and
data16
arpl
push
add
jae
and
sub
sub
add
add
add
add
add
add
add
add
jb
outsl
add
add
je
imul
and
sub
sub
add
js
add
add
add
add
js
add
add
add
and
jae
arpl
jb
imul
and
add
insb
add
add
imul
popa
add
add
add
je
popa
add
add
popa
add
add
outsb
add
add
add
and
insb
add
and
jb
imul
outsl
add
add
imul
add
add
add
add
imul
add
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
add
add
add
outsl
add
and
jbe
imul
add
add
outsb
add
add
jb
outsl
add
add
and
jo
outsl
add
add
bound
bound
add
add
popa
add
jae
popa
add
add
add
insb
add
add
insb
add
arpl
arpl
outsl
add
add
add
add
outsl
add
jo
jne
je
add
add
add
outsb
add
add
jb
outsl
add
jo
add
add
add
add
add
arpl
jb
imul
aas
add
add
imul
add
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
sbb
push
add
push
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
inc
add
popa
add
jb
outsl
add
add
add
and
inc
add
add
push
add
jbe
imul
sub
sub
add
ja
data16
add
add
add
ja
data16
add
add
add
jo
insb
add
add
je
je
imul
and
data16
insb
add
and
sub
sub
add
add
add
add
add
add
add
add
jb
outsl
add
add
add
jb
add
add
add
add
add
js
add
add
add
add
js
add
add
add
add
add
arpl
jb
imul
and
add
and
add
je
popa
add
add
add
add
jne
insb
add
and
add
je
loope
and
jo
jb
outsl
add
outsl
add
popa
add
add
and
jno
jne
add
add
insb
add
add
add
jb
outsl
add
add
je
outsl
add
and
add
and
inc
add
add
push
add
and
add
add
jne
je
add
add
add
je
popa
add
add
je
add
add
add
imul
outsl
add
je
imul
popa
add
add
push
add
jne
je
loope
outsb
add
add
add
and
jae
jne
and
push
add
and
jo
outsl
add
add
add
and
outsb
add
and
jb
add
jo
outsl
add
add
jb
add
add
add
add
and
popa
add
jne
insb
add
jb
and
add
add
arpl
jb
imul
aas
add
add
imul
add
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
sbb
push
add
push
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
dec
add
popa
add
jb
outsl
add
add
add
and
inc
add
add
push
add
jbe
imul
sub
sub
add
ja
data16
add
add
add
ja
data16
add
add
add
jo
insb
add
add
add
jae
and
insb
add
jae
and
popa
add
arpl
push
add
jae
and
sub
sub
add
add
add
add
add
add
add
add
jb
outsl
add
add
je
outsl
add
and
sub
sub
add
js
add
add
add
add
js
add
add
loopne
cld
xor
xor
xor
xor
xor
xor
push
loopne
xor
add
imul
add
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
and
outsb
xor
nop
cmpsb
pop
dec
xor
dec
xor
arpl
data16
xor
add
push
xor
jle
jle
cltd
jge
jge
xor
xor
pop
push
jnp
xor
dec
xor
mov
push
xor
dec
xor
mov
jle
pop
xor
xor
xor
xor
xor
lahf
pop
dec
mov
imul
xor
dec
xor
add
add
imul
add
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
sbb
push
add
push
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
aas
add
popa
add
jb
outsl
add
add
add
and
inc
add
add
push
add
jbe
imul
sub
sub
add
ja
data16
add
add
add
ja
data16
add
add
add
jo
insb
add
xor
data16
aad
mov
xor
add
add
add
add
add
add
add
add
add
add
add
xor
xor
xor
add
add
add
js
add
add
add
add
js
add
add
add
jno
inc
jb
dec
test
sub
subl
and
push
add
push
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
and
pop
nop
cmpsb
pop
dec
xchg
dec
dec
add
sbbb
out
in
jle
dec
mov
xor
pop
or
dec
mov
mulb
xchg
mov
push
xchg
pop
add
das
es
orl
sub
pop
lcall
add
imul
add
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
sbb
push
add
push
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
cmp
dec
add
arpl
jb
outsl
add
add
add
and
inc
add
add
push
add
jbe
imul
sub
sub
add
ja
data16
add
add
add
ja
data16
add
add
add
jo
insb
add
bound
xchg
dec
and
sub
sub
add
add
add
add
add
add
add
add
push
and
sub
sub
add
js
add
add
add
add
js
add
add
jno
inc
jb
dec
or
dec
or
add
arpl
jb
imul
and
add
mov
add
insb
add
jae
push
add
add
add
and
test
nop
cmpsb
pop
mov
sbbb
jl
mov
push
dec
mov
xchg
sub
addb
pop
push
bound
push
leave
popa
or
pusha
dec
orl
jae
sub
into
push
aas
add
add
imul
add
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
add
sbb
push
add
push
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
cmp
dec
add
arpl
jb
outsl
add
add
add
and
inc
add
add
push
add
jbe
imul
sub
sub
add
ja
data16
add
add
add
ja
data16
add
add
add
jo
insb
add
bound
addr16
push
push
sub
add
add
add
add
add
add
add
add
and
push
add
add
add
add
js
add
add
add
add
js
add
add
je
and
fnstenv
pop
and
movsb
ret
mov
mov
je
and
inc
add
add
push
aad
mov
pop
and
in
mov
and
rol
add
mov
add
add
lods
shll
in
mov
pop
aad
mov
call
lds
and
push
cmc
mov
aad
leave
and
dec
lds
add
ret
and
mov
mov
enter
add
add
mov
add
leave
call
ret
mov
enter
aas
add
add
imul
add
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
sbb
push
add
push
outsb
add
add
insb
add
add
outsb
add
insl
add
je
imul
and
and
and
and
and
and
and
cmp
dec
add
arpl
jb
outsl
add
add
add
and
inc
add
add
push
add
jbe
imul
sub
sub
add
ja
data16
add
add
add
ja
data16
add
add
add
jo
insb
add
mov
or
jl
sub
sub
add
add
add
add
add
add
add
add
pop
mov
and
sub
sub
add
js
add
add
add
add
js
add
