or
add
adc
add
sbb
add
sub
add
cmp
add
dec
int
add
add
insb
int
add
add
roll
add
add
int3
int
add
int
add
int
add
into
add
sbb
add
cs
add
dec
into
add
push
into
add
cwtl
into
add
lods
into
add
mov
into
add
fmul
add
out
into
add
add
add
push
iret
add
xor
add
dec
iret
add
pusha
iret
add
mov
add
xchg
iret
add
scas
iret
add
mov
iret
add
fmul
add
out
add
lock
add
or
add
sbb
add
rolb
add
rolb
add
add
rolb
add
add
xchg
rolb
add
rolb
add
rolb
add
rolb
add
rolb
add
add
adc
add
and
add
roll
add
roll
add
add
add
add
test
add
mov
inc
add
lea
xor
xor
or
add
clc
jno
add
inc
add
jb
js
je
jb
arpl
jae
add
jae
arpl
outsl
add
add
add
add
add
jne
outsb
add
add
add
add
jb
jb
outsl
add
and
add
add
or
add
add
add
push
add
and
add
jb
outsl
add
or
add
dec
add
inc
add
add
jb
jb
outsl
add
or
add
add
add
inc
add
dec
add
add
jb
jb
outsl
add
or
add
add
add
add
add
add
add
add
je
je
add
jo
je
and
je
outsl
add
add
jae
add
add
push
add
dec
add
add
outsl
add
add
add
jb
outsl
add
and
je
push
add
add
jae
jae
add
bound
insb
add
and
add
jb
imul
and
outsb
add
je
imul
and
arpl
outsl
add
add
add
outsb
add
je
imul
imul
je
imul
or
push
add
imul
imul
imul
je
add
and
popa
add
add
jne
add
add
outsb
add
add
outsl
add
jb
and
popa
add
jo
insb
add
arpl
popa
add
add
outsb
add
add
add
je
and
imul
insl
add
jae
je
and
insb
add
imul
add
add
add
add
and
jb
add
jne
insb
add
add
data16
add
popa
add
add
outsb
add
and
popa
add
and
dec
add
dec
add
add
outsl
add
jo
imul
add
add
add
add
insb
add
sub
and
data16
outsb
add
je
imul
and
data16
outsl
add
and
popa
add
add
popa
add
add
add
add
outsl
add
jae
je
jb
jne
arpl
je
outsl
add
and
outsl
add
and
data16
outsl
add
and
inc
add
add
popa
add
outsb
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
insb
add
arpl
popa
add
add
add
outsb
add
outsl
add
insl
add
je
imul
or
add
add
add
add
add
add
add
add
je
je
add
jo
je
and
je
outsl
add
add
outsb
add
je
imul
imul
and
je
push
add
push
add
add
outsl
add
add
add
add
outsb
add
add
outsb
add
add
add
add
add
jae
and
imul
imul
je
add
and
popa
add
add
jne
add
add
outsb
add
add
outsl
add
jb
and
popa
add
jo
insb
add
arpl
popa
add
add
outsb
add
add
add
add
add
add
add
add
add
add
push
add
add
outsl
add
add
outsb
add
je
imul
imul
add
add
add
add
add
add
add
add
add
outsb
add
bound
insb
add
and
je
outsl
add
add
outsb
add
je
imul
imul
and
push
add
or
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
insb
add
ja
imul
imul
je
imul
imul
je
imul
or
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
jae
je
add
outsl
add
add
outsb
add
je
imul
imul
je
imul
or
add
add
add
add
add
add
add
add
add
jb
add
add
imul
jne
popa
add
add
jne
outsb
add
je
imul
and
arpl
popa
add
add
add
add
add
add
add
add
or
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
pop
add
outsb
add
js
imul
popa
add
add
imul
je
popa
add
insb
add
or
add
add
add
add
add
add
add
add
add
add
outsb
add
bound
insb
add
and
je
outsl
add
add
jo
add
and
arpl
outsl
add
jae
outsl
add
add
add
add
imul
or
add
add
add
add
add
add
add
add
add
add
outsb
add
js
jo
add
je
add
add
add
jo
and
add
jb
outsl
add
or
add
add
add
add
add
add
add
add
add
add
outsb
add
js
jo
add
je
add
add
jne
insb
add
add
add
add
add
add
add
imul
add
jb
jb
outsl
add
or
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
je
push
add
add
add
add
add
add
add
add
add
add
add
add
bound
outsl
add
je
sub
sub
and
push
add
add
add
outsb
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
add
jbe
imul
outsb
add
add
je
or
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
popa
add
add
insl
add
outsb
add
add
add
add
add
add
add
add
add
add
add
insb
add
popa
add
add
add
add
outsl
add
outsb
add
add
jne
jo
jo
outsl
add
je
and
outsb
add
je
and
insb
add
popa
add
add
add
add
add
add
add
add
sbb
or
add
rcrb
inc
add
add
add
add
add
sbb
adc
add
rclb
inc
add
add
add
add
add
pop
inc
add
add
add
push
inc
add
add
add
inc
add
add
add
push
inc
add
add
add
add
add
inc
add
add
add
adc
add
cmp
add
add
add
adc
and
add
loopne
inc
add
add
rclb
add
add
movsb
adc
jp
add
mov
inc
add
add
add
add
add
inc
add
imul
outsl
add
outsl
add
je
and
push
add
jae
jne
popa
add
add
sub
sub
and
push
add
outsb
add
add
add
add
add
jb
popa
add
jns
add
add
or
or
add
add
add
add
add
add
jo
jb
outsl
add
jb
popa
add
and
outsb
add
insl
add
and
jne
outsb
add
outsb
add
ja
outsb
add
add
add
add
jne
outsb
add
add
add
add
jb
jb
outsl
add
and
or
or
push
add
outsl
add
jb
popa
add
cmp
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
or
add
add
add
add
add
or
add
nop
add
add
add
add
add
dec
add
push
add
inc
add
add
add
add
add
add
add
jae
jb
add
jae
gs
popa
insb
jne
add
jae
gs
popa
insb
jne
add
jae
insb
insb
outsl
arpl
add
add
je
jb
arpl
jae
imul
popa
je
outsl
outsb
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outsl
js
add
push
add
push
add
add
add
add
add
add
add
dec
add
add
insl
add
add
jae
add
add
add
add
add
add
dec
add
dec
add
add
add
and
jns
jns
jns
jns
add
dec
add
das
add
add
add
jns
add
add
push
add
add
add
inc
add
add
add
inc
add
arpl
add
bound
add
add
add
dec
add
jbe
add
bound
add
add
add
dec
add
je
outsl
add
add
add
push
add
jo
je
add
bound
add
add
inc
add
add
jae
je
add
add
dec
add
insb
add
add
add
dec
add
outsb
add
add
add
inc
add
jb
imul
dec
add
jb
arpl
push
add
bound
jb
jne
popa
add
jns
add
add
dec
add
outsb
add
popa
add
jns
add
inc
add
arpl
add
dec
add
jbe
add
dec
add
je
add
push
add
jo
add
inc
add
add
add
jne
insb
add
add
jne
outsb
add
add
popa
add
add
inc
add
jb
add
dec
add
jb
add
inc
add
bound
add
dec
add
outsb
add
add
popa
add
add
add
jns
add
add
inc
add
imul
jns
add
add
push
add
jne
jb
jae
add
jns
add
add
push
add
add
add
add
jns
add
push
add
add
add
jns
add
dec
add
outsb
add
add
add
add
push
add
outsb
add
add
add
add
push
add
je
add
inc
add
imul
push
add
add
add
add
add
dec
add
outsb
add
add
jne
outsb
add
add
cmp
cmp
add
add
fs
dec
dec
dec
dec
and
and
jns
add
das
fs
jns
add
add
push
dec
add
inc
dec
add
inc
arpl
bound
add
add
dec
outsl
jbe
insl
bound
add
add
dec
arpl
gs
push
gs
gs
bound
add
add
addr16
je
add
insb
jns
add
add
outsb
add
add
inc
jo
imul
arpl
add
inc
bound
popa
jb
add
add
dec
popa
outsb
jne
jb
add
add
jbe
dec
arpl
gs
inc
jne
add
insb
add
outsb
add
jns
inc
jo
add
jb
inc
bound
dec
popa
outsb
add
je
jb
popa
jns
add
add
imul
jne
jae
popa
jns
add
add
outsb
gs
popa
jns
add
push
jne
jae
popa
jns
dec
outsl
outsb
fs
jns
add
outsb
fs
jns
add
je
inc
jb
add
add
add
add
outsb
add
outsb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
test
test
test
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
jnp
jge
jg
addl
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
decl
add
and
add
inc
add
add
add
lahf
add
adc
add
in
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
ret
push
mov
push
andl
jmp
mov
inc
mov
mov
cmp
jae
movzbl
mov
add
movsbl
xor
mov
add
mov
jmp
mov
leave
ret
push
xor
mov
mov
mov
lods
mov
pop
ret
push
mov
push
andl
cmpl
je
mov
add
movsbl
test
je
mov
inc
mov
jmp
mov
leave
ret
push
mov
push
cmpl
jne
cmpl
je
or
jmp
cmpl
je
cmpl
jne
xor
inc
jmp
cmpl
jne
cmpl
jne
xor
jmp
cmpl
jne
cmpl
jne
mov
movsbl
mov
movsbl
sub
mov
jne
mov
movsbl
test
je
mov
inc
mov
mov
inc
mov
jmp
jmp
cmpl
jne
pushl
call
mov
cmpl
jne
pushl
call
mov
mov
cmp
jne
cmpl
je
cmpl
jne
mov
sub
mov
jmp
andl
jmp
mov
inc
mov
mov
cmp
jge
mov
movsbl
mov
movsbl
sub
mov
je
jmp
mov
inc
mov
mov
inc
mov
jmp
mov
xor
cmpl
setg
lea
neg
sbb
and
leave
ret
push
mov
sub
mov
xor
mov
movl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
mov
pushl
push
lea
push
call
pushl
push
lea
push
call
lea
push
pushl
call
mov
lea
push
pushl
call
mov
mov
xor
call
leave
ret
push
mov
sub
mov
mov
add
mov
mov
add
mov
mov
mov
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
mov
mov
add
mov
lea
mov
cmpl
je
push
push
mov
mov
add
push
pushl
call
test
jne
mov
mov
add
mov
lea
mov
mov
mov
add
mov
movzwl
lea
mov
mov
mov
add
mov
jmp
jmp
xor
leave
ret
push
mov
sub
mov
xor
mov
andl
andl
jmp
mov
inc
mov
cmpl
jge
mov
mov
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jge
mov
mov
add
mov
xor
divl
mov
movzbl
add
and
jns
dec
or
inc
mov
mov
mov
mov
mov
mov
mov
mov
movzbl
mov
mov
jmp
andl
jmp
mov
inc
mov
mov
cmp
jae
mov
add
and
jns
dec
or
inc
mov
mov
mov
add
and
jns
dec
or
inc
mov
mov
mov
mov
mov
mov
mov
mov
movzbl
mov
mov
mov
mov
mov
add
and
jns
dec
or
inc
mov
add
movzbl
xor
mov
add
mov
jmp
mov
mov
xor
call
leave
ret
push
mov
sub
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
xor
inc
jmp
mov
sub
mov
mov
cmpl
jne
xor
inc
jmp
mov
mov
add
mov
mov
cmpl
je
mov
mov
sub
shr
mov
andl
jmp
mov
inc
mov
mov
cmp
jae
mov
mov
movzwl
sar
mov
mov
mov
movzwl
and
jns
dec
or
inc
mov
movzwl
test
jne
jmp
movzwl
cmp
jne
movzwl
add
mov
mov
mov
add
movzwl
add
mov
mov
mov
jmp
xor
jmp
jmp
mov
mov
add
mov
jmp
xor
inc
leave
ret
push
mov
sub
mov
mov
add
mov
mov
cmpl
jne
xor
inc
jmp
mov
mov
add
mov
mov
cmpl
je
mov
mov
add
push
call
mov
cmpl
jne
mov
mov
add
push
call
mov
cmpl
jne
xor
jmp
mov
cmpl
je
mov
mov
add
mov
jmp
mov
mov
add
mov
andl
mov
cmpl
je
mov
mov
add
mov
cmpl
jae
mov
movsbl
test
je
mov
inc
inc
push
pushl
call
mov
jmp
movzwl
push
pushl
call
mov
mov
cmpl
je
mov
mov
add
mov
mov
mov
jmp
mov
mov
mov
mov
add
mov
mov
add
mov
jmp
mov
add
mov
jmp
xor
inc
leave
ret
push
mov
sub
andl
andl
cmpl
je
mov
mov
mov
movzwl
cmp
jne
mov
mov
mov
mov
add
mov
mov
add
mov
mov
cmpl
jne
push
push
mov
pushl
push
call
mov
cmpl
je
push
pushl
pushl
call
add
push
pushl
mov
mov
add
push
call
add
mov
movzwl
imul
push
mov
add
push
mov
mov
mov
lea
push
call
add
mov
cmpl
jbe
mov
mov
sub
push
mov
add
push
mov
add
push
call
add
andl
jmp
mov
inc
mov
mov
movzwl
cmp
jge
mov
add
mov
mov
mov
add
mov
mov
mov
pushl
mov
mov
mov
add
push
mov
mov
mov
add
push
call
add
jmp
pushl
call
test
jne
push
push
pushl
call
andl
jmp
pushl
call
test
jne
push
push
pushl
call
andl
jmp
mov
mov
mov
mov
mov
leave
ret
push
mov
sub
mov
xor
mov
movl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
call
call
call
call
pushl
push
lea
push
call
pushl
push
lea
push
call
lea
push
push
push
lea
push
call
push
call
mov
pushl
push
lea
push
call
lea
push
push
push
lea
push
call
push
call
mov
call
pushl
push
lea
push
call
lea
push
push
push
lea
push
call
push
call
mov
pushl
push
lea
push
call
lea
push
push
push
lea
push
call
push
call
mov
pushl
push
lea
push
call
lea
push
push
push
lea
push
call
push
call
mov
pushl
push
lea
push
call
lea
push
push
push
lea
push
call
push
call
mov
push
call
mov
andl
push
push
pushl
call
mov
call
pushl
pushl
call
mov
call
pushl
call
mov
call
pushl
pushl
call
mov
pushl
push
call
mov
cmpl
jne
push
call
mov
mov
push
pushl
lea
push
pushl
call
mov
call
call
call
call
call
call
lea
push
pushl
call
mov
cmpl
je
push
mov
mov
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
call
mov
xor
call
leave
ret
push
mov
sub
mov
xor
mov
movl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
pushl
push
lea
push
call
pushl
push
lea
push
call
pushl
push
lea
push
call
pushl
push
lea
push
call
pushl
push
lea
push
call
pushl
push
lea
push
call
pushl
push
lea
push
call
lea
push
push
push
lea
push
call
push
call
mov
lea
push
push
push
lea
push
call
push
call
mov
lea
push
push
push
lea
push
call
push
call
mov
lea
push
push
push
lea
push
call
push
call
mov
lea
push
push
push
lea
push
call
push
call
mov
push
push
call
mov
pushl
push
call
push
call
mov
mov
mov
add
mov
mov
cmpl
jne
push
call
push
call
xor
jmp
xor
pushl
call
mov
xor
call
leave
ret
push
mov
sub
mov
xor
mov
push
lea
push
push
push
call
mov
cmpl
je
call
push
call
call
call
call
call
call
call
mov
xor
call
leave
ret
push
mov
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
xor
pop
ret
cmp
jne
repz
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
cmp
jb
cmpl
je
push
push
and
and
cmp
pop
pop
jne
jmp
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
inc
add
inc
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
out
inc
add
xchg
int3
xchg
les
inc
add
inc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
inc
add
inc
add
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
mov
in
mov
mov
and
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
mov
dec
mov
push
mov
pop
mov
pusha
mov
push
mov
orl
sbb
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pushf
mov
movsb
mov
mov
inc
add
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
mov
push
mov
cmpl
jne
call
pushl
call
push
call
pop
pop
pop
ret
push
push
call
lea
push
call
xor
cmp
jne
push
push
push
push
call
mov
cmp
je
mov
jmp
mov
cmpl
jne
mov
cmp
jne
cmpl
jbe
xor
cmp
setne
mov
call
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jns
push
call
pop
call
mov
call
mov
call
test
jns
push
call
pop
call
test
jns
push
call
pop
push
call
pop
cmp
je
push
call
pop
call
testb
je
movzwl
jmp
push
pop
push
push
push
push
call
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
mov
cmpl
jne
push
call
call
movl
mov
call
ret
call
jmp
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmpl
jne
push
call
pop
push
call
push
call
leave
ret
push
mov
and
test
jne
mov
and
shr
je
jmp
lea
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
lea
dec
jne
test
je
mov
shr
test
je
lea
movdqa
movdqa
lea
lea
dec
jne
and
je
mov
shr
je
mov
mov
lea
lea
dec
jne
mov
and
je
mov
mov
inc
inc
dec
jne
pop
pop
pop
pop
ret
mov
sub
sub
push
mov
mov
and
je
mov
mov
inc
inc
dec
jne
shr
je
mov
mov
lea
lea
dec
jne
pop
jmp
push
call
mov
xor
ret
mov
push
mov
mov
mov
cmpl
jne
cmpl
jne
mov
cmp
je
cmp
je
cmp
je
cmp
jne
call
xor
pop
ret
push
call
xor
ret
mov
push
mov
push
call
test
je
push
push
call
test
je
pushl
call
pop
ret
mov
push
mov
pushl
call
pop
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
push
call
mov
push
call
push
call
push
call
push
call
push
call
push
call
add
pop
ret
mov
push
mov
push
mov
xor
jmp
test
jne
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
cmpl
je
push
call
pop
test
je
pushl
call
pop
call
push
push
call
pop
pop
test
jne
push
push
push
call
mov
mov
pop
mov
cmp
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
pop
test
je
push
push
push
call
xor
pop
ret
push
push
call
push
call
pop
andl
xor
inc
cmp
je
mov
mov
mov
cmpl
jne
pushl
mov
call
mov
mov
test
je
pushl
call
mov
mov
mov
mov
sub
mov
cmp
jb
call
cmp
je
cmp
jb
pushl
call
mov
call
mov
call
pushl
call
mov
pushl
call
cmp
jne
cmp
je
mov
mov
mov
mov
mov
mov
jmp
movl
cmpl
jae
mov
mov
test
je
call
addl
jmp
movl
cmpl
jae
mov
mov
test
je
call
addl
jmp
movl
call
cmpl
jne
movl
push
call
pop
pushl
call
cmpl
je
push
call
pop
ret
call
ret
mov
push
mov
push
push
pushl
call
add
pop
ret
mov
push
mov
push
push
pushl
call
add
pop
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
mov
push
mov
call
pushl
call
pop
push
call
int3
mov
push
mov
xor
mov
cmp
je
inc
cmp
jb
xor
pop
ret
mov
pop
ret
mov
push
mov
sub
mov
xor
mov
push
push
mov
push
push
call
mov
xor
pop
mov
cmp
je
push
call
pop
cmp
je
push
call
pop
test
jne
cmpl
je
cmp
je
push
push
mov
push
call
add
test
jne
push
mov
push
push
mov
call
mov
test
jne
push
push
push
call
add
test
je
xor
push
push
push
push
push
call
push
call
inc
pop
cmp
jbe
push
call
lea
mov
sub
push
sar
push
sub
push
push
call
add
test
jne
push
mov
push
push
call
add
test
jne
pushl
push
push
call
add
test
jne
push
push
push
call
add
jmp
push
push
push
push
push
jmp
push
call
mov
cmp
je
cmp
je
xor
mov
mov
cmp
je
inc
cmp
jb
push
lea
push
lea
push
mov
call
pop
push
lea
push
push
call
mov
pop
pop
xor
pop
call
leave
ret
push
call
pop
cmp
je
push
call
pop
test
jne
cmpl
jne
push
call
push
call
pop
pop
ret
mov
push
mov
push
call
mov
test
je
mov
mov
mov
push
cmp
je
add
lea
cmp
jb
add
cmp
jae
cmp
je
xor
test
je
mov
test
jne
xor
jmp
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
push
mov
mov
mov
cmp
jne
push
pop
mov
andl
add
cmp
jl
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
pop
mov
pop
or
pop
pop
pop
ret
mov
push
push
xor
cmp
jne
call
mov
test
jne
mov
mov
cmp
ja
test
je
test
je
cmp
jne
xor
test
sete
mov
movzbl
push
call
pop
test
je
inc
inc
jmp
cmp
ja
inc
mov
test
jne
pop
mov
pop
ret
cmpl
jne
call
push
mov
push
xor
test
jne
or
jmp
cmp
je
inc
push
call
pop
lea
mov
test
jne
push
inc
push
call
mov
pop
pop
mov
test
je
mov
push
jmp
push
call
cmpb
pop
lea
je
push
push
call
pop
pop
mov
test
je
push
push
push
call
add
test
jne
add
add
cmpb
jne
pushl
call
andl
andl
movl
xor
pop
pop
pop
pop
ret
pushl
call
andl
or
jmp
xor
push
push
push
push
push
call
int3
mov
push
mov
push
mov
push
xor
push
mov
mov
mov
movl
cmp
je
mov
addl
mov
mov
cmpb
jne
xor
cmp
mov
sete
inc
mov
jmp
incl
test
je
mov
mov
inc
mov
mov
movzbl
push
inc
call
pop
test
je
incl
cmpl
je
mov
mov
incl
mov
inc
mov
mov
test
je
cmpl
jne
cmp
je
cmp
jne
test
je
movb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
dec
test
je
movb
inc
incl
test
jne
mov
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
movsbl
push
test
je
call
pop
test
je
mov
mov
incl
mov
inc
incl
mov
mov
incl
mov
jmp
call
pop
test
je
inc
incl
incl
mov
inc
jmp
test
je
movb
inc
mov
incl
mov
jmp
mov
pop
pop
test
je
andl
incl
leave
ret
mov
push
mov
sub
push
xor
push
push
cmp
jne
call
push
mov
push
push
mov
call
mov
mov
cmp
je
mov
cmp
jne
mov
mov
lea
push
push
push
lea
call
mov
add
cmp
jae
mov
cmp
jae
mov
shl
lea
cmp
jb
push
call
mov
pop
cmp
je
mov
lea
push
add
push
push
lea
call
mov
add
dec
mov
mov
xor
jmp
or
pop
pop
pop
leave
ret
mov
push
mov
sub
push
push
call
mov
xor
cmp
jne
xor
jmp
cmp
je
add
cmp
jne
add
cmp
jne
push
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
pop
mov
cmp
je
push
push
pushl
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
push
call
mov
jmp
push
call
xor
pop
pop
pop
leave
ret
mov
push
mov
sub
push
lea
push
call
push
push
pop
push
call
pop
pop
xor
cmp
jne
or
jmp
lea
mov
mov
cmp
jae
add
orl
movw
mov
movw
movb
mov
mov
mov
add
lea
add
cmp
jb
push
push
cmp
je
mov
cmp
je
mov
add
mov
add
mov
mov
cmp
jl
mov
cmp
jge
mov
push
push
call
pop
pop
test
je
addl
lea
mov
cmp
jae
add
orl
andl
andb
andl
movw
movw
movb
mov
add
add
lea
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
cmp
je
mov
mov
test
je
test
jne
push
call
test
je
mov
and
mov
sar
shl
add
mov
mov
mov
mov
mov
mov
push
lea
push
call
test
je
incl
addl
inc
incl
cmp
jl
xor
mov
shl
add
mov
cmp
je
cmp
je
orb
jmp
movb
test
jne
push
pop
jmp
lea
neg
sbb
add
push
call
mov
cmp
je
test
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
push
lea
push
call
test
je
incl
jmp
orb
movl
inc
cmp
jl
pushl
call
xor
pop
pop
pop
leave
ret
or
jmp
mov
push
mov
mov
push
mov
cmp
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
mov
push
mov
cmp
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
call
ret
call
ret
mov
push
pushl
call
mov
test
jne
pushl
call
mov
push
pushl
call
mov
pop
ret
mov
cmp
je
push
pushl
call
call
orl
mov
cmp
je
push
call
orl
jmp
push
push
call
push
call
mov
movl
andl
xor
inc
mov
mov
movb
movb
movl
push
call
pop
andl
pushl
call
movl
call
push
call
pop
mov
mov
mov
test
jne
mov
mov
pushl
call
pop
movl
call
call
ret
xor
inc
mov
push
call
pop
ret
push
call
pop
ret
mov
push
push
call
pushl
mov
call
call
mov
test
jne
push
push
call
mov
pop
pop
test
je
push
pushl
pushl
call
call
test
je
push
push
call
pop
pop
call
orl
mov
jmp
push
call
pop
xor
push
call
pop
mov
pop
ret
mov
push
call
mov
test
jne
push
call
pop
mov
pop
ret
push
push
call
mov
test
je
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
cmp
je
push
call
pop
push
call
pop
andl
mov
test
je
push
call
test
jne
cmp
je
push
call
pop
movl
call
push
call
pop
movl
mov
test
je
push
call
pop
cmp
je
cmp
je
cmpl
jne
push
call
pop
movl
call
push
call
pop
call
ret
mov
push
call
pop
ret
mov
push
call
pop
ret
mov
push
push
call
mov
test
jne
call
xor
pop
ret
push
mov
push
push
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
cmpl
mov
mov
je
cmpl
je
cmpl
je
test
jne
mov
mov
mov
movl
mov
mov
call
mov
cmp
je
pushl
push
call
test
je
call
pushl
mov
call
pushl
mov
call
pushl
mov
call
pushl
mov
call
mov
call
test
je
mov
push
pushl
call
call
mov
cmp
je
push
push
call
mov
pop
pop
test
je
push
pushl
pushl
call
call
test
je
push
push
call
pop
pop
call
orl
mov
xor
inc
jmp
call
xor
pop
pop
ret
push
push
push
call
xor
test
setne
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
pushl
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
pushl
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
sub
push
mov
push
mov
xor
push
mov
movb
movl
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
testb
jne
mov
lea
mov
mov
mov
mov
cmp
je
lea
lea
mov
lea
mov
mov
mov
test
je
mov
call
movb
test
js
jg
mov
mov
cmp
jne
cmpb
je
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
movl
jmp
mov
cmpl
jne
cmpl
je
push
call
add
test
je
mov
push
push
call
add
mov
mov
call
mov
cmp
je
push
push
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
mov
cmp
je
push
push
mov
call
jmp
mov
push
mov
sub
mov
andl
andl
push
push
mov
mov
cmp
je
test
je
not
mov
jmp
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
cmp
jne
mov
jmp
test
jne
mov
or
shl
or
mov
not
mov
pop
pop
pop
leave
ret
andl
ret
push
push
call
call
mov
test
je
andl
call
jmp
xor
inc
ret
mov
movl
call
call
ret
push
call
mov
ret
mov
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
mov
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
mov
push
mov
mov
pushl
call
pop
ret
push
push
call
xor
inc
mov
xor
cmp
jne
call
push
call
push
call
pop
pop
mov
lea
cmp
je
mov
jmp
push
call
pop
mov
cmp
jne
call
movl
xor
jmp
push
call
pop
mov
cmp
jne
push
push
call
test
jne
push
call
pop
call
movl
mov
jmp
mov
jmp
push
call
pop
movl
call
mov
call
ret
push
call
pop
ret
mov
push
mov
mov
push
lea
cmpl
jne
push
call
pop
test
jne
push
call
pop
pushl
call
pop
pop
ret
mov
push
mov
mov
mov
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
push
cmp
je
mov
imul
add
add
cmp
jb
imul
add
pop
cmp
jae
cmp
je
xor
pop
ret
pushl
call
ret
push
push
call
xor
mov
mov
mov
cmp
jg
je
mov
push
pop
sub
je
sub
je
sub
je
sub
jne
call
mov
mov
test
jne
or
jmp
mov
mov
jmp
pushl
mov
call
pop
lea
mov
jmp
mov
sub
je
sub
je
dec
je
call
movl
call
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
movl
push
call
mov
xor
cmpl
je
cmp
jne
push
call
cmp
je
push
call
pop
xor
mov
cmp
je
cmp
je
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
movl
cmp
jne
mov
mov
mov
add
cmp
jge
mov
imul
mov
mov
incl
jmp
call
mov
movl
call
cmp
jne
pushl
push
call
pop
jmp
mov
mov
cmpl
je
push
call
pop
ret
push
call
pop
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
xor
call
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
sub
mov
xor
mov
push
mov
push
cmp
je
push
call
pop
andl
push
lea
push
push
call
lea
mov
lea
add
mov
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
lea
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
lea
push
call
test
jne
test
jne
cmp
je
push
call
pop
mov
pop
xor
pop
call
leave
ret
mov
push
push
mov
push
push
call
add
push
call
push
call
pop
ret
mov
push
mov
pushl
call
test
je
pop
jmp
pushl
pushl
pushl
pushl
pushl
call
int3
xor
push
push
push
push
push
call
add
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
pushl
call
test
je
pushl
call
pop
test
je
xor
inc
pop
ret
xor
pop
ret
mov
push
mov
mov
xor
cmp
je
inc
cmp
jb
lea
cmp
ja
push
pop
pop
ret
mov
pop
ret
add
push
pop
cmp
sbb
and
add
pop
ret
call
test
jne
mov
ret
add
ret
mov
push
mov
push
push
push
mov
push
pushl
call
pushl
mov
mov
call
mov
cmp
jb
mov
sub
lea
cmp
jb
push
call
mov
lea
pop
cmp
jae
mov
cmp
jae
mov
add
cmp
jb
push
pushl
call
pop
pop
test
jne
lea
cmp
jb
push
pushl
call
pop
pop
test
je
sar
push
lea
call
mov
pushl
mov
call
mov
add
push
call
mov
mov
jmp
xor
pop
pop
pop
leave
ret
mov
push
push
push
call
pop
pop
mov
push
call
mov
mov
test
jne
push
pop
pop
ret
andl
xor
pop
ret
push
push
call
call
andl
pushl
call
pop
mov
movl
call
mov
call
ret
call
ret
mov
push
mov
pushl
call
neg
sbb
neg
pop
dec
pop
ret
mov
push
push
xor
pushl
call
mov
add
cmp
jb
pop
pop
ret
int3
mov
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
cmpl
jne
xor
mov
cmp
sete
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
add
movzwl
push
push
movzwl
xor
push
lea
test
je
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
movl
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
movl
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
xor
cmpl
sete
mov
ret
mov
movl
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
mov
push
mov
sub
mov
xor
mov
mov
push
mov
mov
push
push
mov
call
andl
cmpl
mov
jne
push
call
mov
test
je
mov
push
push
call
test
je
mov
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
mov
test
je
push
push
call
push
call
mov
mov
mov
mov
cmp
je
cmp
je
push
call
pushl
mov
call
mov
test
je
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
orl
jmp
mov
cmp
je
push
call
test
je
call
mov
test
je
mov
cmp
je
push
call
test
je
pushl
call
mov
pushl
call
test
je
pushl
pushl
pushl
pushl
call
jmp
xor
mov
pop
pop
xor
pop
call
leave
ret
mov
push
mov
push
mov
push
test
je
mov
test
jne
call
push
pop
mov
call
mov
pop
pop
pop
ret
mov
test
jne
xor
mov
jmp
mov
cmpw
je
add
dec
jne
test
je
sub
movzwl
mov
add
test
je
dec
jne
xor
test
jne
mov
call
push
pop
mov
mov
jmp
mov
push
mov
mov
push
mov
push
push
test
jne
test
jne
cmp
jne
xor
pop
pop
pop
pop
ret
test
je
mov
test
jne
call
push
pop
mov
call
mov
jmp
test
jne
xor
mov
jmp
mov
test
jne
xor
mov
jmp
mov
cmp
jne
mov
sub
movzwl
mov
add
test
je
dec
jne
jmp
mov
sub
movzwl
mov
add
test
je
dec
je
dec
jne
test
jne
xor
mov
test
jne
xor
cmp
jne
mov
push
mov
pop
jmp
mov
call
push
pop
mov
mov
jmp
mov
push
mov
mov
mov
add
test
jne
sub
sar
dec
pop
ret
mov
push
mov
push
mov
push
test
je
mov
test
jne
call
push
pop
mov
call
mov
pop
pop
pop
ret
mov
test
jne
mov
jmp
mov
sub
movzwl
mov
add
test
je
dec
jne
xor
test
jne
mov
call
push
pop
mov
mov
jmp
mov
push
mov
mov
test
js
cmp
jle
cmp
jne
mov
pop
ret
mov
mov
pop
ret
call
movl
call
or
pop
ret
mov
push
mov
mov
push
mov
movb
test
jne
call
mov
mov
mov
mov
mov
mov
cmp
je
mov
test
jne
call
mov
mov
cmp
je
mov
mov
test
jne
call
mov
mov
testb
jne
orl
movb
jmp
mov
mov
mov
mov
mov
pop
pop
ret
mov
push
mov
sub
pushl
lea
call
movzbl
mov
mov
test
jne
cmpl
je
mov
mov
movzwl
and
jmp
xor
test
je
xor
inc
cmpb
je
mov
andl
leave
ret
mov
push
mov
push
push
pushl
push
call
add
pop
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
push
push
mov
push
xor
lea
push
push
call
xor
movzwl
mov
mov
mov
mov
shl
or
lea
stos
stos
stos
mov
add
lea
sub
mov
mov
mov
inc
dec
jne
lea
mov
mov
mov
inc
dec
jne
pop
pop
ret
mov
push
mov
sub
mov
xor
mov
push
push
lea
push
pushl
call
mov
test
je
xor
mov
inc
cmp
jb
mov
movb
test
je
lea
movzbl
movzbl
cmp
ja
sub
inc
push
lea
push
push
call
add
mov
add
test
jne
push
pushl
lea
pushl
push
push
lea
push
push
push
call
xor
push
pushl
lea
push
push
push
lea
push
push
pushl
push
call
add
push
pushl
lea
push
push
push
lea
push
push
pushl
push
call
add
xor
movzwl
test
je
orb
mov
jmp
test
je
orb
mov
mov
jmp
mov
inc
cmp
jb
jmp
lea
movl
xor
sub
mov
lea
add
lea
cmp
ja
orb
lea
jmp
cmp
ja
orb
lea
mov
jmp
movb
inc
cmp
jb
mov
pop
xor
pop
call
leave
ret
push
push
call
call
mov
mov
test
je
cmpl
je
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
andl
mov
mov
cmp
je
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
mov
mov
mov
push
call
movl
call
jmp
mov
push
call
pop
ret
mov
push
mov
sub
push
xor
push
lea
call
mov
cmp
jne
movl
call
cmp
je
mov
andl
jmp
cmp
jne
movl
call
jmp
cmp
jne
mov
mov
movl
jmp
cmp
je
mov
andl
mov
pop
leave
ret
mov
push
mov
sub
mov
xor
mov
push
mov
push
mov
push
call
mov
xor
mov
cmp
jne
mov
call
xor
jmp
mov
xor
cmp
je
incl
add
cmp
jb
cmp
je
cmp
je
movzwl
push
call
test
je
lea
push
push
call
test
je
push
lea
push
push
call
xor
inc
add
mov
mov
cmp
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
lea
push
push
call
mov
add
imul
mov
lea
mov
jmp
mov
test
je
movzbl
movzbl
jmp
mov
mov
or
movzbl
inc
cmp
jbe
mov
add
cmpb
jne
mov
incl
add
cmpl
mov
jb
mov
mov
movl
call
push
mov
lea
lea
pop
mov
mov
add
add
dec
jne
mov
call
jmp
orb
inc
cmp
jbe
add
cmpb
jne
lea
mov
orb
inc
dec
jne
mov
call
mov
mov
jmp
mov
xor
movzwl
mov
shl
or
lea
stos
stos
stos
jmp
cmp
jne
or
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
orl
call
mov
mov
call
mov
mov
call
mov
cmp
je
push
call
pop
mov
test
je
mov
mov
mov
rep
andl
push
pushl
call
pop
pop
mov
test
jne
mov
pushl
call
test
jne
mov
cmp
je
push
call
pop
mov
push
mov
call
testb
jne
testb
jne
push
call
pop
andl
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
pushl
call
test
jne
mov
cmp
je
push
call
pop
mov
push
call
movl
call
jmp
push
call
pop
ret
jmp
cmp
jne
cmp
je
push
call
pop
call
movl
jmp
andl
mov
call
ret
cmpl
jne
push
call
pop
movl
xor
ret
mov
push
mov
cmpl
je
pushl
push
pushl
call
test
jne
push
call
mov
call
push
call
pop
mov
pop
pop
ret
mov
push
mov
mov
push
push
test
je
mov
test
jne
call
push
pop
mov
call
mov
jmp
mov
test
jne
mov
jmp
mov
sub
mov
mov
inc
test
je
dec
jne
test
jne
movb
call
push
pop
mov
mov
jmp
xor
pop
pop
pop
ret
mov
push
mov
push
push
xor
pushl
call
mov
pop
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
xor
push
pushl
pushl
call
mov
add
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
xor
pushl
pushl
call
mov
pop
pop
test
jne
cmp
je
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
mov
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
lea
movl
cmpl
je
mov
test
je
push
call
cmpl
je
mov
test
je
push
call
add
decl
jne
mov
add
push
call
pop
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
push
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
lea
movl
cmpl
je
mov
test
je
push
call
cmpl
je
mov
test
je
push
call
add
decl
jne
mov
add
push
call
pop
pop
mov
pop
pop
ret
mov
push
mov
push
push
mov
mov
xor
push
cmp
je
cmp
je
mov
cmp
je
cmp
jne
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
mov
sub
push
call
mov
mov
sub
push
call
mov
sub
push
call
pushl
call
add
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
lea
movl
cmpl
je
mov
cmp
je
cmp
jne
push
call
pop
cmp
je
mov
cmp
je
cmp
jne
push
call
pop
add
decl
jne
push
call
pop
pop
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
test
je
push
mov
cmp
je
push
mov
call
pop
test
je
push
call
cmpl
pop
jne
cmp
je
push
call
pop
mov
pop
jmp
xor
pop
pop
ret
push
push
call
call
mov
mov
test
je
cmpl
je
call
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
andl
pushl
add
push
call
pop
pop
mov
movl
call
jmp
push
call
pop
mov
ret
int3
int3
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
pushl
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmpl
jne
push
mov
call
mov
mov
call
jmp
popl
add
pop
pop
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
pushl
pushl
pushl
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
pushl
pushl
pushl
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
pushl
call
add
pop
ret
call
test
je
push
call
pop
testb
je
push
push
push
call
add
push
call
int3
mov
push
mov
mov
test
je
sub
cmpl
jne
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
test
jne
cmp
jb
cmpl
je
jmp
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
mov
push
mov
cmpl
jne
call
movl
call
or
pop
ret
pushl
push
pushl
call
pop
ret
push
call
pop
ret
mov
push
mov
sub
mov
xor
mov
mov
push
xor
push
push
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
mov
sub
dec
cmp
jge
inc
mov
mov
cmp
jne
mov
mov
mov
mov
mov
xor
cmp
push
push
pushl
setne
pushl
lea
push
pushl
call
mov
mov
cmp
jne
xor
jmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
call
pop
cmp
je
movl
add
mov
jmp
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
mov
push
push
push
pushl
pushl
pushl
call
mov
cmp
je
mov
test
je
mov
cmp
je
cmp
jg
push
pushl
push
pushl
pushl
pushl
call
jmp
mov
cmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
movl
add
jmp
push
call
pop
cmp
je
movl
add
mov
jmp
xor
cmp
je
pushl
push
pushl
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
pushl
push
push
pushl
call
mov
push
call
pop
pushl
call
mov
pop
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
pushl
lea
call
pushl
lea
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
call
add
cmpb
je
mov
andl
leave
ret
mov
push
mov
push
push
mov
xor
mov
push
xor
push
push
mov
cmp
jne
mov
mov
mov
mov
mov
xor
cmp
push
push
pushl
setne
pushl
lea
push
pushl
call
mov
cmp
jne
xor
jmp
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
call
pop
cmp
je
movl
add
mov
test
je
lea
push
push
push
call
add
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
push
call
mov
pop
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
pushl
lea
call
pushl
lea
pushl
pushl
pushl
pushl
pushl
push
call
add
cmpb
je
mov
andl
leave
ret
mov
push
mov
push
mov
cmp
ja
push
push
cmpl
jne
call
push
call
push
call
pop
pop
test
je
mov
jmp
xor
inc
push
push
pushl
call
mov
test
jne
push
pop
cmp
je
push
call
pop
test
jne
jmp
call
mov
call
mov
mov
pop
pop
jmp
push
call
pop
call
movl
xor
pop
pop
ret
mov
push
mov
mov
test
je
push
xor
pop
div
cmp
jae
call
movl
xor
pop
ret
imul
push
mov
test
jne
inc
xor
cmp
ja
push
push
pushl
call
test
jne
cmpl
je
push
call
pop
test
jne
mov
test
je
movl
xor
jmp
mov
test
je
movl
pop
pop
ret
mov
push
mov
cmpl
jne
pushl
call
pop
pop
ret
push
mov
test
jne
pushl
call
pop
xor
jmp
push
jmp
test
jne
inc
push
pushl
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
je
cmp
jbe
push
call
pop
call
movl
xor
pop
pop
pop
ret
call
mov
call
push
call
pop
mov
jmp
call
mov
call
push
call
pop
mov
mov
jmp
mov
push
mov
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
pushl
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmpl
je
cmp
jbe
lea
mov
mov
mov
cmpl
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
and
add
sbb
or
pop
jmp
push
lea
sub
and
add
sbb
or
pop
jmp
pxor
push
push
mov
and
test
jne
mov
and
shr
je
lea
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
dec
jne
test
je
mov
shr
je
jmp
lea
movdqa
lea
dec
jne
and
je
mov
xor
shr
je
mov
lea
dec
jne
and
je
mov
inc
dec
jne
pop
pop
ret
mov
neg
add
sub
xor
push
mov
and
je
mov
inc
dec
jne
shr
je
mov
lea
dec
jne
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
sbb
not
and
mov
and
cmp
jb
mov
pop
xchg
mov
mov
ret
sub
test
jmp
int3
jmp
int3
int3
int3
int3
int3
int3
incl
add
add
add
add
cmp
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
incl
add
add
pushf
inc
add
incl
add
add
incl
add
add
incl
add
add
popf
inc
add
incl
add
add
popf
inc
add
incl
add
add
incl
add
add
pushl
mov
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
mov
add
incl
add
add
incl
add
add
incl
add
add
movsl
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
add
add
incl
add
add
incl
add
add
dec
stos
inc
add
stos
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
int3
add
lcall
add
int
add
int
add
adc
add
int
add
int
add
add
cmp
add
dec
int
add
add
insb
int
add
add
roll
add
add
int3
int
add
int
add
int
add
into
add
sbb
add
cs
add
dec
into
add
push
into
add
cwtl
into
add
lods
into
add
mov
into
add
fmul
add
out
into
add
add
add
push
iret
add
xor
add
dec
iret
add
pusha
iret
add
mov
add
xchg
iret
add
scas
iret
add
mov
iret
add
fmul
add
out
add
lock
add
or
add
sbb
add
rolb
add
rolb
add
add
rolb
add
add
xchg
rolb
add
rolb
add
rolb
add
rolb
add
rolb
add
add
adc
add
and
add
roll
add
roll
add
add
add
add
test
add
add
add
mov
push
insb
gs
lret
add
popa
jo
insb
insb
outsl
arpl
iret
add
popa
jo
jb
add
inc
add
je
jb
arpl
fs
jae
add
cmp
dec
outsl
popa
fs
imul
add
adc
dec
outsl
fs
gs
popa
outsb
fs
gs
add
in
add
imul
jb
gs
add
imul
insb
insb
outsl
arpl
add
add
imul
jae
xchg
add
je
imul
je
add
push
dec
inc
dec
xor
cs
insb
add
jmp
push
jns
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
inc
push
xor
cs
insb
add
xchg
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
dec
gs
jo
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
arpl
inc
gs
je
jb
jne
dec
outsb
outsw
push
add
add
gs
imul
outsl
arpl
jae
add
add
je
jne
jb
outsb
je
jb
arpl
jae
roll
fs
gs
js
gs
imul
gs
add
push
outsb
push
gs
js
gs
imul
gs
add
dec
jae
bound
addr16
jb
jae
outsb
je
add
dec
jae
jb
arpl
jae
jb
gs
je
jb
push
jb
jae
outsb
je
sbb
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
lret
arpl
gs
outsl
imul
add
gs
imul
je
je
dec
popa
outsb
fs
add
adc
inc
gs
outsl
fs
gs
imul
add
adc
inc
gs
outsl
fs
gs
imul
add
popa
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
inc
push
dec
jne
je
inc
jns
gs
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
outsl
add
gs
popa
outsb
fs
gs
outsl
jne
je
add
add
imul
inc
jb
je
arpl
push
arpl
outsb
inc
outsb
fs
jo
outsb
inc
outsl
jne
je
repz
je
imul
roll
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
arpl
gs
outsl
imul
add
insb
jae
insb
insb
outsl
arpl
add
add
insb
jae
gs
popa
insb
jne
add
add
insb
jae
gs
popa
insb
jne
add
add
insb
jae
jb
gs
add
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
push
gs
popa
jae
inc
jb
outsl
jb
add
add
je
jne
jb
outsb
je
push
dec
add
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
add
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
add
popa
jo
jb
popa
je
add
cmpsl
add
gs
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
roll
gs
jne
jb
outsb
je
jb
arpl
jae
add
inc
gs
jns
je
insl
push
imul
insb
gs
imul
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
out
add
je
jb
jb
je
arpl
push
arpl
outsb
add
aas
add
fs
imul
add
jb
inc
gs
push
dec
outsb
outsw
add
inc
gs
inc
push
add
aaa
add
je
inc
dec
inc
push
add
or
dec
jae
popa
insb
imul
add
add
je
push
outsb
ja
outsb
fs
add
popa
jo
imul
dec
inc
dec
popa
jo
je
imul
add
insb
je
inc
jns
gs
outsl
push
imul
imul
je
imul
push
add
rolb
dec
gs
jo
gs
insb
insb
outsl
arpl
add
add
add
add
push
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
or
or
or
or
or
or
or
or
add
xor
pop
pusha
push
nop
xchg
cwtl
pushf
mov
mov
mov
enter
rcl
aam
fcomp
loopne
in
call
icebp
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
push
push
push
movups
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
push
push
pop
pop
pop
pop
sbb
sbb
sbb
sbb
sbb
sbb
pop
and
and
and
and
and
and
daa
sub
sub
sub
sub
sub
sub
das
xor
xor
xor
ss
cmp
cmp
cmp
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
or
or
or
or
or
or
or
or
dec
out
mov
add
add
add
add
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
or
add
insb
add
add
add
add
add
add
add
sbb
add
jb
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
cmpsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
or
add
or
add
or
add
fnstsw
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
add
arpl
addr16
insl
outsb
outsl
jo
jb
je
jbe
js
jp
add
add
add
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
add
arpl
addr16
insl
outsb
outsl
jo
jb
je
jbe
js
jp
add
add
add
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
add
add
movsb
add
add
jns
and
add
add
add
cmpsb
filds
add
add
add
add
add
add
add
cmp
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
in
call
add
add
add
add
mov
add
add
push
ficompl
and
pop
fisubrl
xor
adc
add
xor
incb
add
add
add
add
add
add
inc
add
and
cld
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
inc
add
inc
add
add
add
add
inc
add
add
inc
add
pop
inc
add
pop
inc
add
inc
add
pop
inc
add
inc
add
pop
inc
add
push
inc
add
push
inc
add
push
inc
add
add
add
add
add
add
add
push
inc
add
push
inc
add
push
inc
add
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
sbb
inc
add
sbb
inc
add
sbb
inc
add
sbb
inc
add
inc
add
inc
add
sbb
inc
add
inc
add
inc
add
inc
add
sbb
inc
add
sbb
add
sbb
add
add
add
add
add
ljmp
shr
add
ljmp
shr
add
ljmp
add
add
add
add
xor
inc
add
and
nop
and
inc
add
ljmp
add
add
add
add
incl
add
add
add
add
add
add
in
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jg
jg
jg
sub
inc
add
add
add
add
add
add
add
add
in
inc
add
and
or
inc
add
add
add
add
add
add
add
add
add
add
and
add
cmp
add
add
add
add
add
add
add
adc
add
push
add
addb
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
addb
add
add
in
add
add
add
mov
add
add
add
add
add
add
and
cwtl
imul
into
push
xor
loop
aaa
dec
pushf
mov
xor
xor
andl
ljmp
insl
push
sbb
icebp
cmpsl
popf
jnp
xchg
cmp
add
outsb
outsb
sbb
jno
loope
lret
add
xlat
adc
cmp
dec
addr16
shrl
adc
repz
push
adc
in
and
and
mov
lea
cld
inc
sbb
pop
sbb
mov
jp
cmp
add
push
sbb
push
mov
dec
out
jl
in
or
test
out
or
or
sub
outsl
and
xor
pop
pop
clc
fnstenv
add
mov
mov
adc
pop
fmull
xchg
push
inc
inc
std
in
inc
mov
inc
call
add
push
mov
cmpsb
sub
data16
scas
xor
movsl
cs
pop
cli
jmp
cld
dec
cs
jecxz
or
mov
fwait
push
pop
arpl
test
sub
xor
call
push
inc
in
popf
loope
push
push
lock
push
adc
or
in
pop
pop
jmp
ret
lds
mov
mov
out
push
xchg
lock
int
fidivrl
add
add
sub
imul
cmpsb
pop
enter
or
mov
dec
in
jg
xor
inc
and
imul
and
outsb
int
or
xchg
or
aas
loop
shl
cmp
lcall
sbb
xchg
adc
sahf
pop
dec
cmp
mov
adc
xor
stos
push
ret
jns
mov
mov
adc
aaa
cltd
cmpsb
pop
ja
or
rclb
jle
notl
aad
dec
xchg
xor
mov
push
movsb
sub
dec
jmp
out
and
dec
xor
imul
add
je
pop
mov
dec
lcall
loope
and
lcall
lcall
movsb
call
mov
push
jle
xlat
pop
jno
test
pop
push
daa
imul
cltd
fwait
testl
lcall
inc
sub
push
test
mov
out
stos
mov
sub
add
pop
aam
dec
loop
mov
test
fldt
int3
xor
xor
mov
out
arpl
test
cmp
xchg
stc
pop
inc
cwtl
cltd
dec
mov
cld
fdivs
lahf
shr
push
scas
out
dec
dec
adc
xchg
or
pusha
and
lea
dec
cmp
or
push
fdivl
push
cltd
jmp
adc
cmpsb
or
pop
psrld
pop
cli
test
pop
dec
stos
inc
aam
sbb
ja
mov
lock
les
out
popa
sub
stc
test
xor
fdiv
daa
push
xchg
lret
pop
cmp
into
sbb
and
cs
dec
push
sti
aaa
or
inc
jae
sub
jg
jae
idivb
jecxz
pop
xchg
sub
scas
inc
xor
aam
mov
mov
push
push
xchg
daa
pusha
xor
add
jmp
xchg
adc
jbe
mov
shrb
cmp
je
repnz
mov
pop
pop
sub
cmpsl
test
ret
add
mov
test
pop
test
inc
xchg
out
mov
inc
add
loope
dec
sbb
rorb
popa
or
lods
cli
inc
in
adc
jecxz
xchg
addr16
cld
mov
mov
fiaddl
test
sub
ret
insl
sub
pop
fisubs
mov
inc
and
pop
or
jge
into
sub
repnz
add
leave
inc
out
in
data16
insl
and
nop
jge
push
sub
push
cli
mov
xchg
pop
mov
jns
xor
test
inc
stc
js
jp
mov
jnp
sarl
das
mov
cmpsl
mov
pop
adc
inc
into
shlb
jno
cltd
cmp
aad
pop
mov
fwait
addr16
mov
out
cs
movsb
xchg
out
loop
into
dec
notb
mov
loopne
clc
inc
lahf
or
aas
inc
push
aad
test
sbb
pop
dec
add
jo
add
jbe
out
add
data16
lods
fwait
sbb
iret
and
cltd
xchg
testl
add
js
leave
scas
std
xchg
mov
scas
xchg
sub
cmpsb
fstps
xlat
sub
or
ss
and
arpl
pop
loop
add
pushf
cmp
filds
pop
mov
xorb
jbe
sbb
xchg
mov
test
pop
push
gs
inc
and
outsb
movsb
nop
sarb
jg
jg
pop
sub
aas
inc
sbb
mov
mov
bnd
pop
mov
ret
jno
fldl
arpl
hlt
popf
jne
test
sbb
insl
mov
fwait
dec
ret
fadds
add
pop
dec
mov
jne
adc
ja
xchg
pop
lods
inc
aaa
or
inc
ss
out
cmp
jmp
adc
or
or
push
leave
sub
pushf
inc
or
orb
mov
cmp
pop
sub
cmp
pop
dec
mov
cmp
loopne
jmp
mov
xchg
loopne
out
sahf
mov
std
push
or
add
fs
inc
ds
enter
dec
aaa
mov
sahf
fisubrl
pop
and
shrl
inc
test
or
test
add
sbb
mov
cld
pop
movsl
xlat
adc
shlb
jnp
push
or
mov
mov
mov
mov
pushf
test
jno,pt
or
dec
xchg
or
mov
js
push
outsl
cmp
push
jle
pusha
mov
dec
subl
out
not
sahf
adc
push
outsb
sub
and
aad
sub
lea
or
inc
repz
add
sbb
das
adc
xor
push
pop
cmp
and
sbb
push
cmp
sbb
jle
push
push
xchg
stc
inc
or
cld
cmpsl
lahf
cvtps2pd
insb
repnz
arpl
lock
repnz
inc
or
lods
cmpsl
bound
mov
sbb
icebp
pop
add
jne
stos
lock
clc
sbb
push
addl
cmc
dec
int
orb
fnstenv
push
add
cmp
bound
mov
cmp
stos
ss
cmp
ss
js
lcall
lock
and
mull
mov
mov
add
mov
arpl
push
dec
jmp
xchg
sbbl
jae
pusha
mov
in
dec
add
ljmp
push
dec
xchg
stos
add
pop
roll
push
xor
jecxz
sub
imul
add
scas
cmp
and
pop
mov
loop
out
out
sub
ja
add
add
xor
lds
pop
adc
out
popa
lahf
loop
in
pop
popa
rolb
cmp
add
sbb
aam
xchg
mov
mov
push
fsubs
jge
adc
scas
mov
insb
stc
dec
sbb
mov
xlat
fstps
pusha
push
in
jl
push
cmp
jno
subl
xchg
nopl
push
dec
stos
outsl
je
xor
mov
loop
andb
das
mov
sub
push
pop
pop
add
jp
jmp
dec
test
sahf
cmp
cwtl
pop
jle
ja
in
enter
rcrb
lds
sbb
sbb
mov
and
inc
pop
jno
mull
add
jge
jge
movsb
movsl
stos
jb
adc
inc
xchg
push
push
xor
fs
movsb
xor
push
int
add
es
cmc
mov
hlt
pop
and
push
and
ljmp
inc
xor
or
loopne
push
mov
push
push
xorb
adc
fwait
aad
sbb
in
and
fisttpll
ret
in
jmp
inc
inc
jne
sub
cmp
ss
pop
lcall
mov
cmp
pusha
pusha
insl
push
clc
les
mov
xchg
jecxz
jg
mov
jmp
jne
adc
mov
inc
cmp
repz
xor
ljmp
and
bound
sub
test
mov
jp,pn
ror
cmp
ja
cld
mov
xchg
pop
sbb
jbe
dec
pop
loop
dec
out
movsb
stos
lea
inc
cmp
mov
pop
sbb
mov
out
popf
fnstcw
clc
mov
xchg
inc
xchg
pop
ret
mov
ret
and
xchg
aaa
fcmovnbe
pop
push
mov
pop
pop
roll
xor
xchg
push
xchg
sub
push
lret
add
jno
popf
pushf
nop
jbe
xor
xor
sub
pop
push
xor
jg
outsl
xchg
fs
cmp
mull
or
and
pushf
enter
dec
out
inc
pop
add
adc
stc
inc
xorb
fisttpl
inc
push
pop
xorb
push
jge
cmp
pop
fcmovnbe
stos
or
adc
lahf
loopne
add
jl
xchg
pop
test
lahf
std
sti
xor
sub
pop
sbb
repz
add
fistps
cmp
sub
inc
xchg
jae
decl
cld
jge
sub
cltd
loope
lock
dec
cmp
cli
rol
add
cld
mov
popf
in
mov
imul
pop
out
lret
lea
insl
push
int
cmp
mov
inc
inc
sbb
add
mov
subl
test
add
sub
mov
orl
shr
lods
and
stos
popa
xchg
adcb
nop
and
inc
jmpw
psrlq
jno
cmpsl
inc
das
dec
in
bound
push
leave
xchg
loop
ss
push
shlb
pop
cmpsb
mov
ret
loope
sti
out
divb
inc
bound
in
push
aam
je
push
pop
arpl
and
imul
int3
out
ffreep
imul
ja
inc
push
xchg
mov
push
dec
mov
mov
scas
jae
cmp
loop
aas
sbb
test
ret
mov
je
jle
sahf
stos
icebp
shll
aaa
push
cmp
jge
cli
insb
and
cmc
movsl
neg
cld
mov
jge
push
sahf
dec
inc
cld
mov
fwait
add
xor
push
sbb
xchg
jnp
aam
addr16
inc
rorb
rolb
stos
scas
and
movsb
pop
out
inc
pop
mov
xchg
fists
push
xchg
ljmp
and
int3
bound
jae
or
and
add
mov
es
cld
mov
mov
mov
lods
mov
add
insl
out
and
add
movsl
in
leave
xor
into
jns
pop
add
push
scas
mov
jb,pn
bnd
and
sbbb
pop
in
sub
ljmp
mov
nop
sub
mov
sub
stc
fimuls
xchg
call
xor
cmpsb
cmp
sarl
add
jecxz
add
stos
push
cmp
mov
mov
or
scas
jbe
pop
and
loop
xor
dec
mov
ja
ja
aaa
scas
hlt
sub
imul
dec
insl
sub
dec
std
mov
nop
aam
lcall
push
clc
add
sbb
dec
lcall
pop
push
insb
js
inc
or
out
dec
inc
arpl
dec
bound
lahf
jae
aad
sbb
push
xchg
inc
mov
cmpsl
sbb
mov
test
or
xor
stc
mov
in
push
packsswb
mov
rcll
mov
xchg
lods
inc
inc
popf
mov
sub
nop
push
jns
pop
in
push
bound
cmovge
mov
xor
repz
mov
adc
hlt
jbe
xor
or
pushw
hlt
jmp
xchg
or
push
or
mov
and
or
bound
pushf
sbb
sbb
call
mov
and
shlb
mov
pushf
dec
jmp
sbb
das
stc
add
lret
jge
xor
mov
sub
outsl
fcomp
mov
ret
mov
aaa
xor
xor
cwtl
lock
xchg
jecxz
pop
dec
aaa
adc
repz
dec
jns
outsb
dec
clc
fucomip
mov
sbb
mov
jbe
mul
lret
test
lods
mov
andb
and
inc
in
insl
stos
into
fisttpl
jg
adc
pop
in
nop
out
sbb
movsl
cltd
cmpsb
sub
sub
bound
jmp
push
inc
bt
push
shl
cli
add
pop
and
out
nop
and
push
call
sbb
mov
fsubrs
push
xchg
fcoms
inc
mov
sbb
dec
rcrl
xor
cmp
in
pop
cwtl
sbb
adc
clc
sbb
popa
pop
cmp
cmp
xor
adc
aas
cmp
in
jecxz
lods
addb
mov
ds
aam
jle
push
clc
fistps
mov
rolb
stc
adcl
jns
ds
cmc
sub
sub
mov
pop
idivl
lcall
lods
jnp
xor
fldenv
inc
cmc
mov
lods
imul
ret
es
adc
mov
and
jnp
cmp
pop
push
test
in
xor
and
sti
add
pop
insl
pop
sub
inc
aad
gs
adc
js
test
cmpsl
mov
cwtl
or
push
xchg
inc
mov
cmp
mov
les
jmp
sbb
mov
das
xor
pop
cmc
xor
or
cli
insb
subb
rcrb
push
cmp
mov
add
mov
push
int
out
sub
clc
cwtl
jbe
movsb
lods
sarl
add
or
ds
sub
stos
test
adc
ret
cmpsl
cmpsb
sub
dec
push
xchg
adc
fsubr
js
jge
les
cmp
cmp
xchg
and
cmp
adc
ljmp
add
pmaxsw
enter
lds
xchg
pop
jno
push
pop
jbe
sarl
mov
aam
sub
xlat
lock
push
adc
inc
and
aas
cmp
push
cltd
pusha
sub
xor
pop
jne
out
loope
jo
test
mov
sub
rorb
imul
or
aaa
push
push
xor
sahf
and
dec
into
mov
leave
jg
mov
mov
adc
enter
mov
sbb
add
movsl
mov
mov
inc
pop
and
hlt
shr
push
xor
cmp
xchg
mov
add
xor
mov
outsl
mov
sub
loopne
loopne
cmc
adc
aad
mov
sub
fsqrt
cwtl
inc
shrl
dec
sbbb
cmp
iret
jmp
inc
out
enter
iret
xor
call
push
push
push
inc
and
adc
dec
adc
lea
cmpl
test
out
jl
mov
mov
push
push
push
pushf
add
sti
sahf
test
push
adc
test
nop
add
inc
sbb
rcrl
cli
cmp
outsb
sub
int3
push
push
rep
mov
vpsubd
notb
rolb
mov
jecxz
sbbb
jmp
mov
es
dec
xchg
jo
bound
sbb
sbb
cld
out
dec
mov
cli
pop
dec
and
jge
fstl
jno
dec
cld
dec
dec
inc
dec
lds
iret
jle
fiadds
dec
lds
popf
lods
dec
xor
mov
mov
jp
cmpsl
lahf
ds
inc
add
in
mov
and
sbbb
stc
jmp
sub
xlat
push
sub
ljmp
cmp
in
gs
mov
sub
jns
fldcw
pushf
xorb
out
pop
imul
lods
push
xchg
std
xchg
fadd
loopne
dec
in
lds
pusha
sbb
jae
imul
test
cmp
out
mov
leave
mov
sbb
jno
imul
test
out
mov
adc
cmpsb
fs
pop
pusha
sahf
jnp
add
mov
dec
cmpsb
mov
leave
mov
je
mov
mov
and
jno
shlb
into
mov
pushf
aas
pop
mov
aad
sahf
out
gs
in
jns
ljmp
mov
es
sbb
leave
sbb
inc
popf
test
call
ret
cmp
call
xchg
cld
repz
pushl
rcrl
pop
imul
adc
fildll
sub
mov
cmovge
fwait
jb
adc
out
or
sub
aam
adc
in
jnp
or
inc
scas
mov
sub
es
dec
shll
loopne
out
shlb
scas
or
pushf
adc
pop
idiv
lods
inc
cmpsb
sahf
and
or
rcrb
mov
mulb
push
inc
cmc
jp
xchg
mov
sbbl
pop
ja
dec
outsl
cmpsl
mov
aaa
sub
dec
xor
repz
adc
cwtl
xchg
fcmovnbe
inc
xor
into
fcmovnu
test
cmp
in
jns
mov
pop
pop
loopne
sbb
sarl
dec
xor
pop
mov
and
mov
sti
repz
add
leave
flds
iret
insl
xchg
push
adc
insl
dec
mov
pop
inc
loope
and
adc
jecxz
mov
pop
pop
push
icebp
jl
jne
mov
pushf
cmpsl
insl
call
xchg
lret
jle
out
repz
ret
pop
addr16
adc
xchg
fisubl
dec
pop
xchg
mov
scas
mov
jle
add
xor
imul
jb
in
movsl
fnstcw
jo
and
popf
rorl
adc
or
pushf
clc
shlb
addr16
test
js
ljmp
xchg
mov
leave
in
insb
orl
or
and
fcomip
xchg
push
stos
sub
repnz
nop
lret
mov
ficompl
mov
bound
shlb
jns
sahf
in
sub
mov
ret
mov
jmp
lods
lret
rol
jle
inc
add
adc
push
cld
and
xchg
dec
push
pushf
repz
jno
jge
lock
fcoms
pop
dec
adc
int
push
sub
push
xor
icebp
mov
mov
rcr
testl
loop
dec
mov
xchg
inc
outsb
addr16
mov
xchg
dec
adc
jecxz
leave
xlat
mov
mov
fdivr
sub
dec
jg
and
mov
mov
fsubr
popa
xor
gs
loop
push
pop
ljmp
add
je
imul
inc
sub
imul
xchg
gs
jmp
or
lea
or
int
xchg
mov
and
jns
push
jecxz
sar
enter
mov
sbbl
and
inc
outsb
xchg
sbb
dec
jmp
xor
fs
jecxz
imul
pop
jg
vpmacssdd
testl
jns
fs
sub
jb
mov
xchg
sbb
xchg
insl
mov
das
scas
shll
pop
mov
mov
jmp
hlt
cmp
ljmp
add
adc
arpl
adcb
int
or
aad
in
loope
mov
inc
das
xor
pop
icebp
popa
movsb
mov
ds
fbstp
jbe
xchg
out
insl
jae
pop
sbbl
adc
push
repz
cmp
jge
fwait
mov
ret
pop
dec
das
cmc
mov
neg
sub
fdivrl
outsl
jecxz
insl
cmpsb
aas
push
rcll
inc
hlt
std
xchg
addl
fsub
pop
lret
out
dec
xorl
and
and
cmp
ljmp
mov
enter
je
sub
aam
in
inc
imul
or
push
call
jl
push
fistps
pop
cs
mov
xchg
pop
pop
mov
jge
lret
xor
mov
add
jae
pop
fwait
or
push
call
stos
outsb
lahf
xor
sti
inc
add
jle
push
ss
jb
mov
ffreep
imulb
fcoms
imul
mov
jo
adc
aad
and
jns
cmp
dec
push
push
in
testl
aam
push
popa
pop
dec
mov
cmpsb
adc
adc
movsb
js
les
mov
int3
mov
cmpsb
cwtl
push
mov
mov
repnz
cwtl
das
jmp
stc
cmp
dec
lcall
cltd
movsb
sbb
jae
push
fmull
xchg
mov
jp
or
mov
xchg
jns
dec
push
lret
mov
xchg
lds
sub
push
add
arpl
adc
icebp
outsb
repnz
xorl
outsl
dec
inc
fdivp
movsb
xchg
ret
adc
xchg
lahf
cs
push
loopne
movsl
mov
adc
adc
fnsave
fnsave
or
mov
mov
pop
shll
or
cmp
xor
aaa
mov
sbbl
popa
mov
int
xor
mov
in
dec
dec
push
insb
pop
mov
push
or
push
outsl
mov
dec
inc
stos
jbe
loope
out
shlb
or
cmp
jnp
loopne
pop
iret
add
and
mov
in
shrb
mov
mov
adc
xchg
cmp
and
inc
loope
stos
pop
or
sbb
dec
cmpsb
and
mov
sbb
in
addr16
mov
or
shll
dec
and
shlb
mov
aas
sbb
push
adc
popf
xorl
lcall
loop
dec
push
aas
int3
pop
mov
push
push
sbb
and
jo
clc
popa
and
bound
pop
loope
orb
dec
xor
loopne
loop
jb
adc
in
int3
popf
rcll
xchg
mov
test
xlat
scas
and
push
out
dec
add
or
leave
cmp
mov
popa
shll
xchg
mov
roll
mov
in
dec
sbb
pop
out
inc
movsl
call
pusha
icebp
out
xor
xchg
jmp
mov
xchg
jge
sbb
add
dec
fcoms
std
js
or
out
enter
in
outsb
loope
loope
adc
popa
xlat
jae
fwait
out
aad
push
jnp
lods
and
in
mov
mov
cmp
mov
addl
sbb
mov
adc
scas
xor
call
inc
mov
inc
xchg
sbb
mov
add
push
aas
pop
ret
adc
outsb
xchg
ret
enter
xchg
add
sub
fnstsw
fcom
in
addr16
in
call
hlt
xchg
out
loop
aaa
fsubl
stos
adc
push
adc
enter
push
mov
jle
js
mov
loop
out
pop
loop
dec
mov
inc
cmp
fdivl
repnz
xchg
inc
addr16
jne
cmpsl
xchg
pusha
addr16
mov
out
leave
inc
adc
cmp
sub
pop
movsl
and
jge
mov
orb
icebp
xchg
cwtl
mov
int
stos
loopne
cs
aam
iret
push
out
jnp
sub
jb
nop
fwait
sbb
jmp
loopne
push
mov
loope
jmp
jge
lret
nop
add
aad
ret
loop
mov
cmp
mov
test
fsts
mov
pushf
call
xchg
in
inc
xor
cvttps2pi
jae
lds
sub
stos
out
pop
aad
xor
repnz
subl
std
mov
and
xor
jg
test
aad
call
xlat
xchg
pop
pop
mov
sub
repnz
aaa
push
mov
xchg
ja
dec
andb
int3
popa
inc
int
les
sub
mov
sbb
jne
add
add
pusha
mov
and
push
outsl
aam
inc
scas
pop
outsl
or
xor
sbb
xor
and
xor
sub
cmc
pop
or
icebp
dec
adc
lock
int3
jecxz
dec
or
sub
adc
popf
xchg
and
hlt
add
adc
xchg
js
aas
adc
xchg
mov
jge
nop
cmp
jno
pop
xchg
mov
out
imulb
std
adc
inc
leave
je
test
iret
pop
cli
stc
adc
jecxz
push
fs
cld
dec
les
daa
nop
push
iret
dec
mov
cmp
sbb
push
mov
adc
cmp
in
sbb
push
rorb
adc
iret
or
push
cmpsl
rclb
je
push
movsb
test
addb
xor
push
inc
rorl
xchg
pop
adc
mov
push
call
mov
inc
imul
sub
mov
call
mov
je
int3
inc
xchg
testb
mov
mov
xor
das
fldenv
js
and
inc
dec
pop
test
lcall
clc
out
addr16
lret
ficoms
xchg
test
sub
daa
push
sub
out
movsb
cltd
pop
jg
or
les
add
lret
fists
das
ljmp
pop
xchg
xchg
addl
ja
movsb
mov
mov
jle
pop
pop
cli
push
out
xchg
jmp
mov
mov
adcl
movsb
jo
nop
hlt
movsl
xor
and
cmpsb
lods
mov
out
xor
and
leave
inc
orb
push
and
inc
repnz
xchg
ret
jl
imul
xor
push
shrl
test
addr16
pop
in
in
xorl
outsb
sbb
xor
addr16
mov
cld
ljmp
insb
cmpsl
pop
inc
sahf
pop
mov
dec
lea
cmp
jno
test
test
pushf
hlt
enter
mov
mov
mov
fstl
aad
adc
sub
inc
in
add
jns
xor
xor
add
push
mov
stos
inc
adc
xchg
cmp
stc
inc
stos
adc
stc
fsubrs
inc
in
das
pusha
cld
dec
mov
add
push
repnz
int3
adc
adc
inc
into
imul
sbb
es
sub
dec
or
mull
leave
mov
jae
movsb
sbb
xlat
mov
push
jmp
sub
je
in
ljmp
push
inc
bound
pop
pop
aad
jnp
mov
sarl
data16
rolb
lret
imul
divb
rcrl
aas
mov
mov
xchg
movsl
or
xor
lcall
das
mov
pop
fmull
mov
orb
fimuls
xchg
push
lea
or
mov
lods
fcoml
or
sub
cmp
iret
hlt
arpl
leave
rorl
loopne
adcb
ds
fwait
mov
stos
stc
pusha
cmp
out
scas
shrb
mov
repnz
int
sti
jo
mulb
movsb
add
je
mov
dec
in
mov
mov
movsl
sbb
push
mov
mov
repnz
dec
xor
aad
mov
push
insb
xor
loop
ret
sbb
jmp
scas
data16
lods
jg
dec
sbb
ja
push
mov
ja
movsb
aas
dec
sahf
xchg
imul
inc
push
fwait
dec
push
push
mov
inc
adc
xor
enter
inc
inc
xlat
mov
push
mov
mov
sahf
or
push
cmp
and
mov
ret
nop
mov
xor
movsl
rolb
jge
or
jg
fisubs
test
push
idivl
push
and
jbe
test
sbb
pop
int3
in
enter
xchg
cmp
sbb
inc
mov
or
les
jl
sahf
lcall
mov
arpl
das
rep
jecxz
pop
ror
comiss
lahf
lret
adc
hlt
fdivrs
int
xchg
gs
jo
inc
and
cli
in
mov
xlat
nop
out
cmp
and
stos
int
ljmp
shr
dec
pop
adc
cmp
neg
mov
arpl
mov
dec
sub
xor
fiadds
cmp
inc
add
dec
mov
rolb
test
sub
dec
mov
mov
sbb
mov
and
and
rorb
fcmovnb
mov
lods
push
stc
or
addl
sub
jp
dec
loop
inc
jmp
mov
outsl
test
sub
add
pop
das
xchg
dec
test
adc
leave
add
inc
inc
adc
lcall
mov
mov
les
push
rcrb
push
dec
cltd
and
in
lret
or
andb
loop
sub
sub
lcall
cmpsl
popa
inc
mov
rolb
jg
jg
int3
xchg
in
aam
getsec
xor
mov
cmp
and
hlt
pop
std
or
imull
mov
or
inc
sub
jnp
gs
dec
inc
cmp
xchg
xchg
ret
add
sbb
rclb
or
xchg
clc
fisubl
cwtl
pop
out
scas
xchg
inc
imul
loopne
xor
into
pushf
fidivs
mov
bound
leave
imul
sbb
cli
cmpb
in
cmp
xor
xchg
jmp
mov
mov
bound
adc
push
lret
mov
in
pop
adc
mov
lea
sub
sub
repnz
loop
cmpsl
inc
xor
jge
or
cli
aad
cmp
sub
push
mov
leave
mov
xor
mov
sbb
andb
xchg
adc
faddl
bound
fstl
nop
pop
jl
jmp
scas
sar
sub
dec
fsts
or
xor
lods
mov
into
push
repnz
into
lods
mov
sub
or
push
mov
lea
sti
sbb
ret
popa
mov
push
xchg
nop
imull
xor
lcall
dec
sbb
or
mov
out
push
rorl
push
add
inc
push
pop
jmp
adc
jmp
mov
mov
test
dec
ret
push
dec
or
fwait
loope
add
push
pop
or
add
scas
sbbb
test
dec
mov
hlt
pop
outsl
xchg
mov
mov
adc
add
aas
push
dec
test
js
cmp
adc
pop
sbb
lods
shll
xchg
adc
daa
xlat
mov
les
loopne
cli
and
mov
mov
loope
sub
or
enter
fsubs
mov
add
imul
mov
dec
sbb
jmp
xorl
mov
clc
xchg
cld
add
xchg
lods
lods
call
adc
hlt
xor
jecxz
call
imul
loope
xlat
icebp
and
pop
daa
shll
sub
jbe
mov
nop
stos
xchg
call
out
rcrb
cmp
das
clc
inc
sahf
vmread
push
mov
lea
mov
mov
pop
stos
cltd
mov
cmpb
int3
pop
cmp
push
pop
mov
stos
adc
ss
hlt
outsb
inc
rcrb
jo
stc
push
xchg
lods
shr
lahf
or
dec
jae
lret
mov
outsb
cld
insl
mov
rolb
xor
rcl
add
dec
lret
sbb
xchg
add
add
stc
dec
icebp
test
leave
lret
jbe
cs
imul
jnp
adc
sarl
push
test
test
xchg
inc
in
fs
or
cmpsl
lock
push
xor
out
fucom
lahf
or
je
add
xchg
or
jns
out
test
int3
mov
in
mulb
push
lods
mov
sub
loope
jns
shlb
or
icebp
push
insb
mov
mov
xchg
dec
loop
dec
into
jb
add
ja
rolb
add
leave
test
popf
test
cmp
test
mov
pop
add
mov
push
mov
lea
xlat
dec
lds
out
cmp
jne
stos
and
mov
adc
gs
fistps
push
jno
pop
inc
test
sbbb
cmpsb
test
jb
jnp
sar
jo
cmp
or
lods
inc
lock
jl
pop
call
adc
fwait
xchg
add
in
ret
and
cmp
xchg
xchg
sbb
mov
shlb
pushf
and
std
in
push
rorb
push
int
mov
fmuls
and
cmp
mov
mov
mov
das
add
inc
arpl
stos
stos
jbe
inc
nop
add
cmpsb
jb
push
cmp
std
push
jb
js
jo
sbb
lds
or
fiadds
arpl
imul
mov
sbb
inc
js
aas
repz
pushf
adc
xor
aas
aaa
andb
cmp
mov
iret
and
iret
sub
pop
inc
insb
daa
jo
scas
subb
sub
adc
mov
mov
dec
mov
dec
xor
mov
or
add
dec
das
in
push
leave
xlat
les
and
clc
loop
mov
sbb
loope
pop
mov
dec
in
lret
out
push
push
fldenv
jle
jmp
push
subb
push
add
lret
cmp
cmp
mov
insl
outsb
mulb
pop
sub
incl
fisubrl
mov
ss
xchg
lods
push
dec
adc
or
push
in
pop
aas
push
xor
nop
pop
add
sub
sti
mov
lods
mov
repz
incl
xchg
sbb
adc
stos
dec
pop
repnz
push
push
orl
mov
loopne
int3
xchg
jmp
pop
mov
jg
mov
lret
sbbb
sub
pushf
ret
xor
mov
iret
jecxz
test
aaa
inc
sub
test
mov
mov
loope
pop
add
xchg
sbb
rorb
mov
std
fsubrl
dec
or
fistpl
fidivrs
mov
int
sub
lock
enter
sbb
mulb
inc
lahf
pushf
and
lds
out
adc
mov
out
lock
pop
mull
rorl
xchg
add
cmp
test
mov
pushf
into
rcl
or
or
rcl
mov
mov
mov
sbb
mulb
push
les
lahf
cmovo
nop
loope
mov
js
imul
lcall
dec
pop
loopne
adc
mov
xchg
icebp
pop
test
fs
xchg
mov
or
insb
je
xchg
fucom
sbb
push
jb
cmpsl
cmpsb
and
in
in
in
bound
lock
movl
pminsw
or
test
or
rep
aad
xchg
outsl
adc
inc
dec
imul
sar
or
mov
sbb
sti
mov
inc
sub
push
popf
mov
aam
mov
fisubrs
iret
pop
jae
and
shl
pop
lock
out
pusha
loop
scas
call
jmp
and
pop
cmpsb
sti
stc
adc
out
fwait
inc
ljmp
sti
mov
iret
push
cmp
sbb
ljmp
add
rorl
mov
sub
loop
cmp
test
int
cmc
js
sbb
sti
dec
out
rcl
out
insb
fdivl
dec
loop
stc
dec
mov
adc
or
mov
popa
enter
jmp
dec
pop
jge
push
push
stc
sbb
jnp
xchg
mov
pop
fisttpll
push
ds
fisttpll
fs
ss
in
cmp
mov
jns
movsl
adc
imull
loop
aad
in
cmp
bound
xchg
scas
or
xor
daa
ds
mov
add
pop
pusha
cmpxchg
in
pop
push
or
pop
pushf
inc
cld
mov
inc
or
fwait
adc
sbb
or
xor
mov
push
test
mov
jnp
outsb
cmp
cmp
xchg
ds
rcl
stc
inc
arpl
xchg
xchg
fwait
sbb
decl
shlb
into
jns
cmp
cwtl
jl
into
dec
or
in
push
push
xchg
fistps
mov
mov
push
std
add
scas
xchg
cld
adc
cld
push
pushf
jecxz
sub
je
mov
xchg
bnd
pop
shl
in
sbbb
pop
sbb
xlat
or
sub
fsubp
fildll
sbb
stc
push
loop
xor
add
pop
xchg
jmp
mov
add
cwtl
stos
sbb
subl
shll
shll
cmpsl
push
push
or
repz
pop
inc
popa
ja
call
push
jge
pop
movsb
pop
push
and
fisubrl
cmpsl
jecxz
dec
and
jne
scas
popa
test
sub
push
in
cmc
shl
jl
imul
iret
sub
mov
cmpsb
mov
ret
scas
inc
sbb
inc
push
outsb
xor
fisttpll
cltd
adc
ret
jp
ficoms
pop
dec
divb
mov
stos
scas
xor
and
xor
sti
in
dec
mov
out
les
test
fcmovnu
scas
stc
leave
adc
sti
add
cmpl
mov
or
jle
jno
das
rcrb
xchg
movsb
mov
xlat
stos
xchg
jp
iret
push
xor
loopne
dec
enter
pop
xor
pop
dec
inc
push
fcomps
test
pop
lret
xor
mov
jp
movsl
aas
hlt
dec
test
sub
xchg
stc
jnp
fisubrs
ss
jle
loope
fwait
cmp
into
fs
push
jp
push
dec
mov
cltd
sbbl
jp
aam
add
add
lods
or
adc
mov
push
jo
lret
jge
add
xchg
push
inc
fildll
xor
movsb
and
sub
shlb
imull
repnz
sahf
cmpsl
inc
push
cmp
cltd
adc
nop
in
mov
push
ljmp
xor
pop
dec
orl
ja
mov
pop
mov
inc
bound
pushf
add
lret
mov
adc
shlb
out
fcoms
dec
mov
inc
adc
lret
mov
mov
je
xor
mov
mov
add
push
adc
lock
sar
out
aad
jb
jmp
mov
lcall
insb
sbb
xchg
loope
adc
mov
je
repnz
scas
je
lret
xchg
dec
ret
faddl
adc
aaa
cmpsb
cmpsl
gs
mov
out
mov
mov
andb
adc
ret
test
mov
int3
ds
mov
loop
adc
mov
or
sub
cld
shrb
in
inc
mov
sbb
out
xchg
mov
sbb
iret
iret
mov
inc
cmpsb
les
and
imul
cld
push
or
fiadds
call
jle
add
fidivl
comiss
repz
mov
xchg
sarl
pop
rol
out
dec
loop
lcall
cmp
in
cmp
inc
push
rclb
sub
popa
sti
xchg
sbb
push
or
adc
dec
push
lods
int3
adc
cli
inc
and
jae
mov
dec
mov
addb
icebp
js
xor
adc
out
cld
faddl
sbb
jp
and
xor
mov
jl
push
test
pop
loopne
sbb
cli
adc
dec
stos
inc
aas
xchg
loopne
inc
je
sti
imul
inc
adc
aaa
xor
cmp
cli
fwait
mov
or
pop
mov
popf
sbb
push
push
jl
lcall
jg
or
test
aad
imul
add
inc
out
sbbb
into
lret
lret
lock
shlb
mov
leave
adc
je
mov
mov
push
pusha
sbb
in
ret
mov
xchg
push
std
insb
mov
leave
jecxz
pop
sub
int
test
mov
icebp
jl
repnz
jb
sarb
xchg
or
les
xchg
pop
rcl
cmp
movsl
mov
lods
dec
test
loopne
cmp
adc
pop
in
pop
inc
out
imul
fwait
jp
lahf
mov
in
and
fsubs
or
in
lret
sti
cli
sub
mov
ficompl
jb
pop
adc
inc
loope
sub
int
jbe
cmp
mov
loopne
and
mov
jb
movsl
xchg
dec
bound
xor
and
mov
inc
xor
stc
inc
xor
leave
cmpsb
enter
inc
cmc
dec
push
mov
sbb
xchg
loope
push
pop
add
xchg
or
inc
adc
test
or
inc
adc
push
ljmp
out
shl
cmc
lret
fwait
or
pop
insb
pop
cmp
mov
rorb
xchg
jne
mov
jmp
movsl
push
je
xor
xchg
jne
mov
adc
int3
lahf
push
sub
and
jg
ret
mov
orl
dec
cmp
mov
xor
insl
pusha
sbb
sbb
fbstp
dec
sub
cmp
mov
sub
sbb
lods
jecxz
mov
sub
outsl
push
das
mov
outsb
int3
pop
dec
xor
mov
sub
or
sbb
xchg
and
push
xchg
push
jmp
daa
sbb
dec
cmp
lahf
mov
xchg
xchg
xchg
imul
test
decb
out
jl
or
cmp
loope
add
icebp
mov
xor
outsb
addl
add
jno
inc
xor
fcmovnbe
sar
xor
call
imul
cwtl
xor
add
out
xor
add
xor
sub
cmc
push
mov
and
jae
mov
data16
repnz
mov
andb
mov
xlat
xor
imul
cmc
je
cmp
lcall
ds
xchg
lcall
and
add
fs
cld
rcrb
or
sbb
fdivl
cmpsl
sbb
add
xor
dec
add
in
push
pop
shr
push
and
int3
or
jecxz
mov
inc
lcall
fisubrl
data16
pop
xchg
sbb
mov
popa
sub
nop
insl
jne
popf
outsl
mov
std
push
sub
pop
inc
loop
stos
push
popf
outsl
mov
inc
sub
aas
stos
jmp
mov
movsl
sbb
push
xor
inc
iret
aad
cmp
xor
mov
push
data16
sbb
push
add
push
aam
push
mov
loope
mov
test
cmp
jno
clc
pop
or
fs
inc
sbb
test
adc
or
stos
cli
xchg
xchg
cmc
imul
add
mov
adcl
jae
imul
mov
mov
ss
out
jmp
sub
push
out
mov
sahf
dec
gs
fisubl
sbb
cmc
push
in
imul
add
insb
mov
and
shl
mov
dec
out
mov
push
sub
sub
push
inc
xchg
repz
sbb
stos
fisubrs
mov
pop
pop
mov
add
xchg
loop
mov
sub
jo
jne
iret
jp
mov
cmc
je
test
ja
ret
inc
stos
dec
lea
add
fs
push
pushf
push
dec
and
pop
hlt
dec
or
mov
js
inc
inc
push
movsl
ja
sub
add
fsubrl
leave
mov
mov
lods
div
jnp
jb
subl
test
pop
cmc
lock
popa
mov
jmp
pop
das
sahf
cltd
push
clc
and
fldln2
sbb
outsl
push
add
dec
sbb
xchg
add
cmpsb
loopne
sub
out
mov
add
push
adc
sub
lods
std
dec
aas
mov
sbb
fdivs
and
mov
mov
xabort
pusha
outsb
jle
sahf
xchg
mov
cmp
pusha
pop
mov
jmp
push
iret
dec
mov
scas
dec
daa
lock
lret
and
mov
jmp
cmp
sti
xor
sub
push
in
mov
sub
call
inc
and
cs
or
pop
mov
push
or
inc
leave
jnp
cmp
adc
xchg
or
adc
loopne
xchg
out
mov
ret
scas
adc
push
in
or
cmc
sbb
and
mov
xchg
dec
adc
test
mov
push
and
or
fwait
rolb
jo
and
sbb
arpl
mov
inc
fadd
jl
jp
imul
scas
and
in
mov
pop
out
sub
and
vpunpckhbw
sub
mov
jne
mov
push
jae
rcr
fcmove
push
test
in
and
pop
out
or
fldl
mov
stos
pop
jb
add
xchg
dec
test
dec
hlt
sub
cmpsl
adc
je
mov
out
clc
jno
add
xchg
mov
dec
jmp
jp
mov
hlt
push
dec
jg
in
jmp
inc
sbb
sbb
imul
push
cltd
inc
jmp
std
outsl
jae
mov
dec
test
fstpt
pop
mov
mov
test
xor
cmp
in
loopne
xor
stos
xlat
jmp
das
shr
and
cmp
push
daa
inc
clc
lret
add
imul
cmp
mov
xor
and
and
popf
dec
adc
insb
push
pop
call
mov
sub
mov
xchg
jnp
dec
pop
jbe
push
cltd
into
test
stos
jo
cs
js
rcrl
adc
add
xchg
dec
dec
movsb
or
popa
mov
movb
dec
ja
or
xchg
adc
fldt
icebp
lret
stos
cmp
mov
js
push
sub
sub
test
push
je
push
cmpsl
dec
mov
jmp
fldcw
pop
je
mulb
xchg
stos
rorl
xchg
loop
out
cmpsb
jp
push
push
test
aas
les
jl
adc
fmul
mov
aaa
daa
mov
bound
outsb
push
imul
dec
inc
ja
pusha
test
dec
shl
xchg
jne
jnp
iret
mov
orb
mov
ds
mov
and
pushf
push
sub
pushl
pop
xor
sarb
xchg
xchg
fdivrs
aad
and
orl
std
jnp
test
inc
pop
mov
bound
jno
fs
xor
test
sbb
or
daa
and
jnp
xchg
mov
fisttpl
leave
sbb
pop
mov
xchg
push
popa
mov
mov
sub
push
push
andb
pop
adc
push
mov
mov
lock
and
push
jg
sbb
jae
clc
inc
mov
push
cld
aad
mov
push
jmp
aaa
cmp
mov
pop
jg
daa
mov
popf
pop
lcall
sbb
ficompl
and
ret
notl
ja
shrl
push
ja
cmp
adc
jmp
or
scas
cmpsb
mov
cmp
jge
mov
mov
sti
into
popf
lea
mov
lods
popf
mov
xor
add
sarb
lods
dec
popa
dec
aas
xchg
sti
movl
mov
in
add
mov
stc
frstor
pop
scas
dec
in
sbb
add
xor
xor
aad
jecxz
jl
sahf
mov
ret
mov
fisttps
fiaddl
pop
in
xchg
mov
jo
cmp
test
ss
test
add
cmp
aad
call
push
loopne
cs
mov
sub
sbb
add
daa
xchg
sbb
dec
cld
push
daa
ljmp
rolb
out
scas
cmpl
mov
push
push
xchg
mov
jle
or
pop
imul
jmp
jg
out
xchg
inc
push
call
rclb
scas
inc
sahf
loope
nop
fs
pop
jno
test
int
dec
mov
mov
xor
popa
push
jae
sarl
inc
aam
dec
movsb
jle
imul
gs
inc
jmp
jne
and
repz
add
mov
and
and
mov
xchg
adc
pop
lcall
jne
pusha
sti
repz
add
mov
stos
test
nop
push
out
cmp
ljmp
mov
add
lret
test
add
xor
in
sahf
mov
mov
cmpsb
pop
fsubrp
stos
jnp
sbb
movsl
fsts
push
jle
sub
add
rolb
mov
mov
sub
jle
inc
fidivrs
sbb
adc
push
push
jecxz
pop
out
sbb
mov
fwait
rcr
aaa
mov
pop
mov
shrb
lahf
ja
mov
mov
or
cmp
cmpb
fildll
test
mov
enter
xchg
test
or
gs
pop
in
xor
popf
iret
stos
xlat
inc
stc
sbb
sbb
jo
jne
imul
jg
pop
xlat
shll
mov
mov
daa
pop
lods
test
sub
sub
cmp
adc
rolb
stc
xchg
repz
in
shlb
pushl
imul
test
mov
lds
loopne
sub
jae
pop
divl
inc
mov
pop
jl
bound
je
rcl
cld
cmp
sbb
dec
xlat
mov
mov
xchg
pusha
in
mov
fildll
notb
lret
mov
mov
int
mov
test
xchg
dec
cmp
movsl
icebp
mov
ds
test
inc
outsb
jg
add
ds
adc
jns
jp
push
sbb
jnp
cmp
ret
mov
test
rcr
jae
adc
xor
int3
or
xor
push
sbb
pop
add
push
sti
cmp
xchg
push
push
dec
insl
mov
shlb
aad
cmp
fiaddl
orb
nop
cmp
xchg
mov
clc
jp
cmp
aad
jg
iret
sbb
push
xor
or
jmp
mov
jne
sbb
imul
sbb
mov
insl
lea
xchg
pop
fisttps
into
shrb
inc
daa
fsts
push
mov
dec
mov
push
cmpsl
mov
out
jg
jno
xor
or
mov
cmp
pop
sub
jmp
loope
lahf
mov
out
xor
inc
icebp
mov
push
inc
mov
lret
test
add
add
sbb
xchg
aas
pop
fisttps
rep
push
cltd
push
dec
dec
fstpt
cmc
loopne
xchg
fistl
sbb
xlat
loope
dec
stos
inc
rol
aam
test
iret
pop
mul
data16
fisttpll
pop
inc
outsl
pop
js
mov
jbe
imul
fdivrs
dec
inc
mov
mov
xor
mov
jmp
add
inc
xor
pop
subb
ret
fs
sbb
jmp
sub
jmp
jecxz
call
vunpcklps
cld
push
gs
or
or
mov
push
gs
lret
sub
jmp
add
mov
sti
test
jns
dec
shr
shlb
mov
mov
and
push
rcrb
fsub
xchg
and
jbe
sbbb
std
xchg
in
push
jg
scas
push
sahf
dec
adc
dec
ret
jae
fs
add
jle
jle
dec
out
ja
pop
insl
push
pusha
cmc
ret
pop
ficomps
repz
xor
out
cmp
xchg
dec
sbb
cmp
scas
inc
stos
sub
pop
test
jo
xchg
aad
and
insl
inc
add
movsl
push
and
dec
dec
sbb
dec
jle
adc
sti
push
in
mov
mov
add
int3
sbb
sub
cmovle
push
repz
dec
and
test
repz
mov
fisttpll
xchg
repz
rcrb
dec
xchg
xchg
loope
xchg
xor
push
xor
jle
mov
lret
cmp
adc
push
push
pop
ds
leave
mov
mov
push
pushf
in
xchg
insl
les
or
clc
push
jle
test
inc
push
push
or
cmc
or
lea
dec
movsl
add
test
add
inc
mov
dec
scas
dec
jbe
gs
je
mulb
add
xchg
inc
mov
daa
pusha
jl
je
shrl
xor
movsb
xor
pop
fbld
je,pn
jle
pop
xchg
pusha
mov
sbb
fnstsw
push
ljmp
outsl
imul
shrl
sub
cwtl
xchg
mov
push
out
outsb
mov
inc
add
les
dec
fistps
push
pop
hlt
repz
and
jo
rcrb
cltd
clc
xor
out
shlb
push
push
fidivrl
dec
nop
add
inc
aad
dec
maskmovq
idivl
pop
sti
jb
dec
xor
push
adc
jo
outsl
dec
add
push
pop
sub
arpl
cltd
mov
mov
jns
lock
popa
push
aam
xchg
orb
cwtl
int
mov
pop
jp
lods
push
jp
sarb
add
daa
mov
xorb
fwait
pop
mov
repnz
int3
shl
mov
aam
xchg
xchg
mov
sub
adc
subl
pop
cmp
adc
stc
mov
pop
pop
iret
adc
insb
cmp
mov
aaa
xchg
sahf
xlat
xor
jmp
pop
ja
jnp
push
mov
push
xchg
cltd
sub
xchg
and
adc
data16
sub
iret
icebp
and
ja
push
hlt
test
dec
xchg
push
insl
xchg
andb
addr16
jbe
pop
pop
inc
sti
fisubl
mov
fwait
adcl
aam
lret
fstl
movsb
stos
stos
das
mov
or
les
lret
cmp
inc
std
leave
ret
iret
lret
cmpsl
test
call
dec
test
dec
shlb
dec
call
mov
mov
bound
jmp
jg
es
shll
addr16
sar
inc
nop
je
push
or
hlt
or
push
popf
stc
cmpsl
adc
pop
pop
out
xchg
push
push
pop
filds
gs
jg
and
inc
push
daa
xor
sub
stos
mov
cld
leave
xchg
imulb
mov
arpl
std
cltd
xor
sbb
adc
lcall
clc
fwait
pop
outsb
lcall
cld
fisubl
jae
jns
popf
dec
inc
ja
mov
sub
or
add
jge
mov
movsl
push
pop
mov
sub
dec
pushf
mov
push
addr16
sub
mov
or
imul
push
xchg
and
leave
rcr
mov
mov
test
or
shr
lods
jp
mov
and
lds
jmp
mov
xor
out
arpl
cmpb
decl
or
pop
mov
dec
push
out
test
ret
mov
pop
and
orl
adc
aam
dec
fs
or
mov
jmp
mov
into
lret
or
cs
pop
push
mov
es
test
mov
in
mov
mov
xor
mov
dec
daa
dec
push
fcmovnb
mov
rcl
mov
jns
scas
fdivrl
fcoms
push
inc
jge
jnp
fmul
mov
std
jl
les
inc
cmpsb
repz
lock
sbb
mov
jge
xchg
call
incl
push
push
repz
pop
xchg
dec
int3
xor
in
xchg
fsubl
inc
cmc
xchg
je
ret
insl
clc
inc
mov
out
scas
lret
loopne
test
in
lcall
rclb
xchg
xchg
dec
xchg
jae
outsl
mov
inc
test
lret
lret
xorb
scas
mov
mov
in
roll
cmpsl
mov
push
add
call
ret
cmp
icebp
shrl
fsub
gs
movsl
icebp
loop
in
jnp
das
cmp
push
lcall
pop
push
arpl
mov
xchg
cltd
roll
das
popa
aaa
imul
push
pop
mov
or
xor
jmp
stos
rol
loope
fadds
scas
mov
imulb
fstpt
out
pop
imul
lahf
mov
js
push
pop
xchg
stos
rcrl
and
rorb
mov
mov
push
cmp
add
adc
movsl
or
mov
lods
lea
mov
mov
sbb
cs
shrl
lret
dec
insb
into
xor
mov
scas
or
xchg
jno
add
rcr
or
push
pushf
jmp
popf
loop
out
push
push
movsb
jb
jne
loope
fs
xchg
in
popf
aad
or
push
popa
jns
cmpsl
cs
xchg
lret
adc
pushf
loope
or
and
xlat
ret
dec
push
mov
pushf
daa
xchg
xchg
fwait
les
in
sub
in
xor
mov
dec
imul
xchg
or
scas
mov
loopne
xor
rorl
scas
dec
popl
repnz
notl
sbb
test
pushf
sahf
push
cmp
subb
pop
mov
mov
and
inc
push
andl
aad
es
bound
inc
shlb
and
xchg
cmpsl
xor
mov
mov
mov
pop
stos
int
mov
push
mov
movsl
ffreep
or
je
adc
mov
push
xor
pop
js
clc
adc
inc
out
imul
pop
or
jae
std
mov
xchg
and
cmp
scas
or
push
jp
hlt
data16
adc
out
cmc
and
test
outsl
gs
test
jecxz
cwtl
les
jo
lock
inc
stos
es
cltd
push
outsb
and
sub
aam
push
xlat
push
fistl
addb
xchg
popa
jmp
bound
jb
mov
inc
push
mov
xor
and
arpl
push
xchg
cltd
push
rcrl
addl
lahf
sbb
sbb
mov
push
and
rorl
xchg
jmp
ja
push
and
lahf
rep
add
xchg
mov
js
je
mov
dec
mov
insl
in
and
in
outsb
int3
mov
nop
mov
push
adc
mov
clc
pop
push
pop
push
pop
dec
mov
and
push
hlt
iret
pop
cltd
mov
xor
sub
iret
movsl
adc
leave
xchg
and
cli
push
dec
arpl
xchg
popf
fwait
ja
pop
mov
cli
into
inc
rorl
mov
push
pop
sbb
loop
sub
fwait
leave
popa
jge
dec
xor
andl
jle
inc
sahf
aad
stos
cmp
dec
bound
xchg
dec
add
jbe
scas
xchg
dec
or
cmpsl
mov
mov
mov
fmull
stc
mov
std
and
or
lcall
cmc
pop
lea
xor
je
cltd
push
inc
dec
and
cmp
pusha
cmovne
pop
insb
cmpsb
mov
jbe
cwtl
jecxz
add
sbb
pop
pushl
mov
and
cmp
test
jmp
sbbb
sahf
xor
mov
push
out
mov
mov
pushf
xchg
dec
xchg
pop
int3
mov
cmp
fld1
cmpsb
sub
xchg
sbb
fldt
adc
jp
mov
pop
xchg
sub
mov
loop
add
cmc
cwtl
lods
rol
out
xor
mov
cmp
aaa
shrb
mov
pop
or
dec
ljmp
push
rorb
inc
lods
mov
cltd
ja
mov
addb
sbb
jmp
mov
pop
mov
jmp
inc
cld
mov
mov
cmc
mov
mov
fnsave
inc
int
in
dec
adc
loop
lret
mov
icebp
dec
in
push
pop
popa
rorl
rclb
inc
leave
fstpt
aad
nop
leave
push
shlb
dec
pop
xchg
xor
test
jns
test
stos
push
sbb
inc
cmpb
jnp
ret
aam
pop
mov
xchg
sub
addl
push
orb
inc
mov
xor
cld
cmc
sbb
and
mov
cltd
pop
push
add
lret
outsb
jb
sbb
jge
loop
dec
insb
rolb
cltd
insl
loop
loopne
sti
aam
loopne
sbb
popf
or
jmp
push
mov
push
push
lds
cmc
inc
and
add
or
imul
into
clc
arpl
push
scas
rorl
push
inc
jb
inc
cmp
and
jle
push
cmp
out
pop
imul
je
cmp
or
or
sti
or
ss
adc
test
push
push
xor
pop
inc
shlb
jecxz
movsb
fisubl
aam
xchg
test
xor
fstpt
outsb
insl
mov
je
adc
sti
push
dec
or
pop
or
fwait
pop
mov
ljmp
movsb
or
adc
cmp
icebp
pushf
pop
push
xchg
xchg
jmp
sub
or
push
pushw
leave
cmp
and
xor
jo
add
dec
arpl
fdivs
mov
mov
lods
sbb
imul
icebp
push
testb
mov
sub
cmp
or
mov
mov
test
in
out
sub
add
stos
inc
punpckhdq
sbb
pushf
flds
inc
scas
xor
cmp
or
jo
and
leave
mov
pop
adc
jae
popa
out
iret
js
fsts
cld
dec
fcomp
lahf
loopne
icebp
sub
add
and
loopne
stos
jne
or
pop
shl
daa
mov
fnstsw
mov
lahf
push
cmpsl
repnz
rolb
iret
ficoml
hlt
fcoms
mov
mov
dec
int3
xor
pop
or
pop
lahf
mov
push
loopne
mov
jecxz
xchg
nop
pop
jp
mov
mov
mov
push
iret
sahf
icebp
aas
cmp
int3
push
out
fidivrl
xlat
subb
int
dec
push
push
sub
dec
xchg
push
xchg
daa
sbb
fists
mov
cmp
lahf
inc
sbb
clc
das
jmp
push
inc
daa
adc
outsb
push
lds
sbbl
lcall
imul
out
xor
je
gs
xor
inc
xchg
xchg
in
cltd
pushf
and
jb
dec
or
pop
stos
adc
out
sbb
insb
push
pop
shll
adc
lret
mov
call
xchg
add
cmp
adc
jle
clc
mov
mov
jae
or
sahf
aad
sub
dec
ss
scas
imul
xor
mov
push
cmp
mov
mov
adc
mov
xchg
jb
xor
es
mov
push
mov
cmp
lcall
and
cmp
lret
aas
mov
jmp
and
pop
add
mov
mov
dec
int
jae
test
cmp
xor
dec
push
dec
or
xor
leave
jnp
xchg
or
call
pop
fstpl
iret
mov
shr
pop
sub
cwtl
into
test
inc
pop
cmp
or
loope
and
cmpsw
mov
mov
sahf
xchg
inc
mov
ret
loope
sbb
mov
jne
jb
loopne
push
vcomiss
push
or
or
cmp
test
cmp
sarb
mov
lods
stc
and
jo
push
nop
fucomip
jbe
pop
push
sbb
lock
ret
rcll
mov
push
call
lods
nop
adc
cli
negl
jnp
int
into
cmpsl
shr
bswap
sarb
cmc
cmp
dec
pushf
sarb
leave
inc
jle
jne
ljmp
leave
outsb
arpl
cwtl
add
mov
ret
mov
outsl
and
int3
mov
dec
fidivrs
shlb
and
mov
int
dec
fmull
mov
cwtl
mov
cmp
and
mov
pop
js
or
lods
loopne
mov
inc
mov
cli
loop
inc
jecxz
pop
leave
fmull
fsubl
mov
shufps
adc
dec
lock
in
jmp
inc
dec
add
ljmp
and
or
fbld
imul
sbb
and
mov
cld
leave
gs
shlb
push
lahf
clts
ja
jle
xchg
notl
test
jns
cmp
or
pop
int
sarb
sti
jbe
sub
jmp
mov
sbb
ja
shll
xor
sahf
in
xchg
adc
in
mov
adc
mov
adc
popa
fs
jp
das
dec
test
inc
aam
adc
mov
pop
xchg
dec
js
add
test
mov
adc
sub
cmp
fcmovnu
incb
adc
cmc
lcall
adc
add
decl
ret
mov
sub
incl
add
push
or
leave
mov
int
sbb
sub
lods
xchg
jecxz
ret
mov
cmp
inc
in
lock
push
stc
subb
xchg
mov
scas
test
xchg
pop
pop
jo
mov
lahf
cltd
out
xor
imul
fnstsw
test
xor
fsubs
cmp
gs
mov
cli
in
mov
mov
sub
imul
in
mov
movsb
push
scas
ror
es
jb
xlat
sbb
pop
fimuls
mov
inc
popa
dec
in
aam
push
imull
ljmp
adcb
outsb
xor
repz
add
int3
or
loop
lret
lods
pop
pop
das
jae
mov
test
cmp
and
adc
das
sub
adc
xor
mov
sub
das
mov
sbb
ja
inc
pop
mov
xchg
lret
jecxz
std
push
and
test
popa
rclb
xchg
cltd
cli
cltd
or
ds
sub
push
dec
xlat
mov
mov
lods
in
popa
or
sub
ds
lret
cld
mov
shll
xchg
jno
adc
pop
jb
inc
into
sub
stos
dec
adc
adcl
int
bound
imul
mov
sbb
push
adc
pop
jp
push
icebp
lods
cmovns
jge
xchg
push
bound
repz
enter
mov
bound
xchg
pop
or
push
jmp
imul
mov
adc
es
xchg
outsl
adc
or
cmp
sbb
leave
insl
sbb
icebp
sub
ljmp
inc
mov
jmp
dec
cmpsl
mov
jl
std
enter
lcall
xchg
pop
add
jl
dec
adc
stos
les
push
jge
imul
adc
ss
mov
cmpsl
xchg
out
and
dec
sub
mov
and
loope
pusha
push
or
add
push
mov
jbe
push
lds
mov
push
sbb
cmpsb
pop
fucom
js
xor
mov
or
ss
stos
and
xlat
mov
test
push
aas
dec
stc
inc
lock
mov
cmpsl
fidivrs
xchg
sbbl
xchg
jp
mov
notl
movsb
push
or
es
int3
outsb
mov
sub
or
or
test
sahf
push
mov
dec
inc
sbb
xchg
pop
in
ret
call
and
and
xor
rcll
xor
xchg
movsl
mov
in
mov
in
enter
xchg
fistpl
idivb
fnsave
jge
xchg
dec
bound
subl
xchg
push
inc
jne
fldcw
movsl
mov
dec
mov
lods
sub
mov
mov
mov
sub
mov
cmp
or
out
scas
cmp
mov
sbb
stos
fcmovnu
loope
outsb
push
loopne
lret
pop
jle
cmp
scas
icebp
mov
dec
push
mov
sbb
into
and
ds
mov
mov
sbb
mov
leave
lea
mov
xor
cmc
inc
icebp
xchg
ret
adc
out
pusha
sub
pop
inc
sub
pop
nop
xchg
fs
mov
shl
or
pop
scas
fidivrl
xor
pop
sub
lods
mov
push
lret
sti
sub
sub
lds
fs
or
repnz
jge
rcrb
fnstsw
add
imul
mov
popl
loopne
loope
adc
mov
fwait
movsb
fs
daa
mov
push
push
mov
pop
cmp
or
sub
bound
cld
in
ja
jg
or
adc
dec
push
js
jo
push
sbb
inc
jnp
lret
test
imul
pop
imul
pop
sti
jge
call
dec
adc
xor
ret
aad
lods
cwtl
outsb
jle
fwait
adc
jmp
xchg
sbb
in
int
push
data16
cmp
xchg
addr16
cmc
xor
sbb
aad
mov
xchg
push
mov
ljmp
push
repz
sbb
add
sub
movsb
inc
aad
cmp
xor
push
imul
das
loopne
jnp
dec
fnstenv
imul
mov
mov
pop
jmp
cmp
cltd
inc
call
cwtl
lods
cltd
jns
sub
sub
ror
ss
cmp
out
and
clc
insb
or
sarl
in
hlt
adc
in
sahf
sahf
inc
lahf
shlb
mov
add
ljmp
gs
stos
xor
iret
out
daa
xor
and
or
fadds
je
adc
lods
lds
out
dec
inc
mov
push
pop
jg
rolb
xchg
les
pop
inc
sbb
jo
leave
cmp
cli
mov
ja
lea
jecxz
push
mov
fcoms
and
addr16
add
outsb
sti
or
jns
cmp
mov
push
inc
loopne
sub
sbb
nop
loopne
in
in
iret
cmp
test
into
test
shrb
dec
pushf
push
push
ret
imul
sbb
sub
sub
xor
orl
mov
pusha
inc
xchg
xchg
mov
xor
sub
out
es
out
jge
mov
cmp
mov
mov
rclb
test
stos
scas
movsb
lahf
jge
and
mov
ret
scas
ja
cmp
xor
mov
add
sbb
add
push
pop
pop
inc
aad
mov
jg
sbb
jns
fildll
adc
push
pop
mov
ficomps
jecxz
andb
pop
mov
jbe
push
lret
mov
cmc
ds
insb
pop
mov
sar
dec
mov
scas
lea
cli
xchg
out
mov
pop
sarb
loopne
mov
push
mov
add
push
mov
mov
movsb
sub
pop
xor
rcrl
stc
add
das
mov
push
insb
xchg
or
sub
dec
jg
xor
sbb
icebp
jecxz
mov
mov
cmp
and
push
pop
lods
and
mov
sbb
int3
mov
xlat
or
and
pusha
or
jae
lea
scas
push
xor
xchg
in
mov
testb
std
lret
into
fmul
or
fisubrl
stc
inc
adc
shlb
pop
push
aaa
and
insl
out
ficoml
lea
xchg
mov
popa
jno
pop
push
push
cmpsl
xorb
cmp
adc
sti
ficompl
xchg
das
mov
mov
inc
pop
cmp
enter
icebp
lods
sub
bound
fld1
or
pop
out
in
pop
adc
or
cs
adc
pop
mov
push
je
lods
les
ret
scas
or
dec
add
add
andl
sbb
xchg
fisttpll
pop
dec
pusha
jae
jl
jecxz
aad
cmp
jge
xor
test
mov
je
dec
stc
sub
stos
adcl
dec
xchg
rorb
outsl
hlt
cmp
shll
gs
lods
stc
pop
shrl
inc
mov
aaa
movsl
xchg
add
lock
stc
fistpll
hlt
jle
adc
inc
pusha
mov
jbe
dec
push
cmp
fnstcw
stos
outsb
push
inc
in
mov
sbb
les
test
mov
rdmsr
mov
jmp
jle
fldt
dec
sbb
jp
sbb
pop
mov
loopne
xor
dec
xchg
jp
xchg
fcoml
sub
into
nop
xchg
fcmovne
xor
inc
mov
push
jl
dec
test
leave
cmpb
fwait
cli
sub
push
jbe
sub
sar
cld
out
dec
repnz
cs
pop
aad
pop
in
je
jnp
pushf
ficomps
movsl
push
aam
xchg
int3
cli
jno
popf
inc
sub
xchg
sbb
mov
adc
cld
pmaddwd
xchg
pop
jae
inc
aas
xchg
add
in
aas
push
outsl
add
jg
pop
lret
sub
jo
mov
cmc
pop
mov
jno
xchg
loopne
mov
push
pop
dec
mov
mov
test
in
cwtl
cmp
or
sub
mov
sub
xchg
push
mov
out
mov
add
push
fs
add
jp
sbb
jmp
in
addr16
cld
into
push
iret
mov
inc
arpl
cmp
jg
mov
mov
rcl
bound
cmp
xor
jbe
shlb
mov
adc
mov
in
lcall
mov
rolb
int
lahf
adc
cmp
das
jo
sub
pop
sbb
mov
xchg
test
imul
jge
pop
push
jp
sahf
call
call
insb
lcall
add
fidivrl
repnz
scas
mov
ror
push
xor
ss
inc
adc
sub
cmp
test
xchg
ret
stos
fisubs
push
pop
fmull
icebp
dec
jne
into
cmovle
stos
sbb
adc
adc
inc
sub
push
sbb
push
lea
sbb
or
jle
jg
sub
jno
inc
aam
out
loope
add
mov
dec
inc
and
xchg
cmc
jns
jg
mov
ja
negl
jnp
orb
xchg
fiaddl
int3
sub
add
inc
jb
cmc
pop
std
sub
pusha
adc
lahf
sub
mov
pop
cmpsl
icebp
mov
fidivrs
dec
outsl
fldcw
cmpsb
cld
xor
sbb
cmp
scas
mov
pop
ja
shlb
push
das
dec
ret
loope
aad
sahf
insb
sub
xor
nop
dec
mov
lcall
or
push
pop
and
das
negb
xor
icebp
ficompl
mov
xchg
movsb
mov
pushf
std
or
dec
mov
inc
pop
fldcw
mov
xor
ret
mov
loopne
mov
loope
xchg
dec
sbb
aam
and
mov
fimull
xor
lock
mov
bound
jb
cmc
dec
dec
jp
ss
enter
dec
jbe
mov
out
shll
pop
cmp
lods
sbb
into
sub
push
sub
pusha
cwtl
enter
lods
and
cmp
xchg
pop
pop
dec
stos
inc
loopne
jne
mov
xchg
stos
and
out
xchg
dec
mov
repnz
xor
add
xor
insb
mov
repnz
scas
sbb
jae
sahf
inc
lods
mov
cmp
adc
sub
dec
adc
or
aaa
dec
test
hlt
data16
sbb
adc
jbe
ret
mov
inc
stc
sub
mov
mov
jne
jae
mov
pop
das
mov
dec
stos
mov
shl
shlb
xchg
or
or
jbe
jl
add
jmp
jae
push
jecxz
bound
mov
and
pop
inc
jp
jge
imul
test
repnz
and
andb
xlat
das
or
fnsave
mov
mov
mov
ss
dec
mov
mov
icebp
test
xor
imul
push
or
in
pop
lods
mov
scas
clc
or
sub
ret
movsl
jb
inc
stos
xchg
inc
ja
jmp
test
push
adcb
xor
or
ret
mov
fst
dec
inc
sbb
daa
mov
jg
inc
mov
rcrb
int
loope
shrl
loop
cmp
add
dec
or
rcrb
outsb
jmp
lret
loope
jne
shr
lds
jecxz
int
lret
popa
push
cmpsl
outsb
xchg
pop
xor
xchg
mov
xchg
mov
dec
clc
addr16
mov
pop
or
fwait
ret
add
adc
sbb
and
stc
sub
mov
mov
xor
add
test
cmc
pop
mov
sub
dec
data16
inc
test
adc
shll
sub
shll
mov
test
ret
and
adc
dec
test
pop
sub
mov
out
sub
cmc
sbbl
cmpsl
test
pop
mov
add
repnz
mov
sub
orb
rclb
das
jnp
mov
push
pop
popa
ret
sbb
xchg
and
xor
pop
xor
sub
jb
test
sbb
rcrb
xor
mov
fidivl
fstp
fdivl
jle
scas
arpl
fs
int
xor
and
repz
dec
fdivr
lcall
es
int
fs
xchg
inc
sbb
imul
mov
aaa
add
sbb
add
inc
notl
mov
sti
mov
jmp
add
sbb
ss
push
cmc
jp
and
stc
lds
fnsave
mov
icebp
rorl
jo
dec
inc
stc
xchg
out
jae
sti
mov
lods
imul
rcrb
subb
cli
pop
sbbb
pushf
lods
jnp
sahf
inc
fimuls
and
xor
pop
int3
out
and
repnz
xchg
cmp
jne
mov
addl
jno
jns
and
xor
aaa
add
jb
out
jnp
jle
mov
call
stos
rcrl
adc
xchg
lea
dec
cmp
pop
mov
jle
jge
inc
mov
mov
xchg
mov
jno
push
or
das
xchg
add
jb
stos
lock
xchg
pusha
push
ljmp
sahf
psubw
insl
insb
and
mov
mov
movsb
hlt
das
rorb
sbb
inc
cwtl
les
and
and
mov
push
mov
pop
in
adc
ret
sub
mov
and
cli
and
cmpb
dec
in
imul
adc
iret
dec
sbb
in
jnp
shrl
lret
out
lcall
dec
mov
inc
mov
mov
loopne
outsb
add
xor
jne
push
sub
jae
adc
aad
mov
daa
and
insb
dec
mov
jg
or
into
outsb
insb
out
mov
push
mov
dec
cli
mov
push
pop
dec
loop
dec
mov
rolb
and
pop
outsl
pop
dec
fwait
repz
xor
out
xchg
add
in
push
test
inc
fsubr
stos
adc
mov
sbb
jmp
cmpsl
add
mov
jmp
fmull
mov
mov
cmc
push
pop
repz
add
xchg
out
pop
aad
jb
ss
fs
sbb
jmp
fcom
or
mov
mov
pop
push
shrb
mov
pusha
ds
adc
sbb
popa
in
push
sbb
pop
lods
and
movsb
or
pushf
sbb
cmp
ret
hlt
mov
cmp
add
lahf
stos
mov
lods
adc
mov
push
push
sahf
out
dec
and
pop
xor
push
ret
push
mov
xor
enter
push
ja
enter
jl
loop
nop
or
aaa
pop
jo
fldl
fldt
in
jbe,pt
pop
hlt
lea
push
dec
movsb
stos
test
mov
fs
faddp
push
xchg
pause
and
pop
lock
mov
call
jae
xchg
rclb
stc
xchg
outsl
iret
or
lods
pop
hlt
loop
setg
xorb
cmc
sti
into
pop
outsb
lea
and
popa
jp
inc
xchg
xor
add
cmp
xchg
mov
adc
adc
sbb
fiaddl
pop
arpl
in
cld
push
xor
ret
aam
mov
adc
sbb
mov
icebp
arpl
fwait
popa
inc
mov
and
mov
push
loopne
scas
rorl
add
lret
mov
cwtl
daa
cwtl
bound
pop
push
in
xor
push
lods
add
pusha
pop
jns
push
imul
sbb
sbb
outsl
inc
xchg
sub
arpl
pop
gs
xor
mov
nopl
mov
movups
sub
pop
test
inc
movsl
sbb
pop
outsl
sbb
mov
fwait
testl
jno
shll
pop
inc
sub
xchg
aas
ja
xchg
ret
das
mov
insb
cmp
dec
add
xchg
cmp
cli
xchg
leave
out
pop
loope
jo
loope
xor
pushf
jb
xchg
scas
ret
xlat
shll
push
xchg
and
ds
loopne
imul
pop
and
and
pop
pop
lret
and
outsl
aam
mov
mov
out
add
std
jmp
cmp
out
mov
lahf
loop
mov
fcomps
mov
out
inc
mov
sarl
adc
xchg
punpckhdq
popf
int
stos
ret
lret
push
popl
jmp
push
out
lcall
mov
cmc
xchg
and
jae
jns
sbb
jge
data16
stos
loop
loop
nop
add
rcr
mov
sbb
rclb
scas
cmpsl
notb
xchg
pop
push
add
add
dec
imul
outsb
push
pop
inc
jne
mov
bound
stc
in
nop
loope
push
and
lcall
inc
xchg
je
dec
dec
lods
fsubrs
cmpsl
sub
and
lods
jle
fistpll
or
aad
dec
hlt
ret
lea
jne
sbb
cwtl
inc
dec
adc
ja
popf
and
xor
xor
cmpsl
jb
jae
cmp
jbe
jmp
cmp
imul
or
fstpl
fwait
cmpl
adcl
mov
dec
pop
shlb
adc
stos
add
cmpsl
push
enter
into
inc
not
pop
jns
in
cwtl
dec
dec
mov
dec
jb
push
lret
out
push
and
test
ja
lret
jp
into
cwtl
inc
mov
shrd
jmp
mov
adc
adc
hlt
dec
into
sar
xor
xor
inc
dec
in
sbb
push
scas
pop
insb
sub
cvtps2pi
push
jno
js
fwait
xchg
adc
test
fildl
mov
pusha
dec
pop
fbld
stos
cs
pop
mov
mov
in
aas
jmp
xor
adc
xchg
andl
sti
mov
jnp
ret
aad
mov
ds
push
movsl
push
push
fnstsw
imul
lret
fs
xchg
xchg
lods
orl
ret
and
push
pop
ja
inc
scas
sbb
push
pop
shl
pop
call
cmpsl
aas
bound
cs
stc
sub
aas
scas
add
pop
and
inc
outsl
es
call
jle
in
imul
cmpsb
cmp
imul
lds
call
fdivrl
jle
out
or
mov
inc
mov
xchg
cmpsb
ljmp
mov
mov
repnz
jns
popf
xor
xchg
mov
xchg
xchg
add
or
fwait
mov
adc
repnz
shlb
xor
clc
pushf
mov
mov
xchg
dec
sub
std
stos
lods
fwait
in
add
bound
jae
add
aas
aam
sbb
lea
sti
lea
push
int3
ss
inc
inc
scas
aas
jmp
aad
add
loop
loopne
dec
push
or
pop
hlt
std
or
ret
test
push
pop
dec
gs
cld
sahf
jns
jecxz
and
iret
maskmovq
mov
mov
jae
push
jae
cmpb
inc
and
ljmp
xlat
fstp
mov
nop
or
pusha
cmc
psrlw
adc
addb
pop
lods
cmpl
test
push
dec
cltd
in
out
xor
rorl
cmp
push
sarl
loop
cmpsb
fidivrl
xor
dec
xchg
fcmovne
jecxz
xchg
mov
jo
sub
lret
jns
mov
mov
adc
mov
mov
inc
adc
mov
pop
jbe
aam
or
leave
into
push
shrl
mov
jecxz
pop
or
das
pushf
or
pop
mov
clc
xchg
add
shlb
push
lahf
xor
mov
lods
fisubrl
mov
popa
or
jo
sbb
aam
shll
aaa
test
jb
xchg
out
push
repnz
loopne
mov
jmp
shrb
xlat
add
inc
jmp
aam
out
and
sbb
sbb
test
data16
leave
push
pop
mov
push
push
ds
push
mov
sbb
fcomps
imulb
scas
xchg
in
adc
cmpsb
in
lret
dec
aad
adc
cmp
popf
sub
xchg
push
xor
xchg
test
pop
mov
pop
and
adcb
bound
adc
sahf
mov
pop
sbb
loopne
mov
lock
xchg
mov
scas
lret
sti
sub
pushf
in
repnz
stos
lods
mov
add
mov
insl
jp
cmpsl
fbstp
mov
xchg
fimull
fwait
mov
addl
pop
test
cmpsl
out
sbb
sub
cwtl
cwtl
cmpsl
xchg
xlat
jno
fdivrs
repz
jg
mov
adc
jecxz
popa
jecxz
mov
adc
nop
dec
out
pop
push
add
xchg
add
adc
xorl
jns
jp
inc
sbb
sti
jecxz
pop
adc
dec
outsb
fsubs
lods
mov
inc
bound
jne
xchg
nop
iret
xchg
dec
mov
mov
neg
pop
push
psllw
mov
and
es
fstpt
adc
movsb
fisubrs
shlb
xor
int3
cmp
pop
mov
test
lea
cmp
pusha
dec
cmp
mov
imul
dec
jb
xlat
inc
sub
cmpsl
mov
jbe
pop
jnp
movsb
xor
test
mov
pop
jmp
mov
notl
gs
aas
mov
jmp
mov
xchg
arpl
jg
sbb
shr
es
inc
or
push
mov
daa
sub
or
pop
rolb
inc
movsl
pop
ljmp
adc
call
push
imul
rcrl
pop
loope
xchg
push
add
testb
jb
dec
fdivr
and
nop
add
mov
jmp
push
sbb
cs
in
adc
out
sbb
push
mov
sub
mov
test
test
mov
cltd
inc
push
mov
sbb
iret
jne
repnz
cli
or
mov
pop
mov
push
xchg
sar
xchg
sbb
out
enter
push
nop
int
sub
jmp
pusha
shl
lock
pop
mov
vpcmpeqd
inc
mov
hlt
pop
repz
insb
mov
les
xchg
inc
or
inc
push
fs
cmpsb
movsl
lods
call
cmpsb
sub
xchg
dec
pop
or
mov
and
js
inc
into
lods
jnp
mov
lea
imul
mov
xor
inc
cli
lds
push
frstor
aas
pop
lods
mov
movsl
push
and
mov
xlat
or
mov
mov
add
fdivl
into
fcomps
addr16
mov
xchg
ja
mov
in
jl
into
ret
jle
insl
lret
cmp
adc
les
push
push
push
fwait
lods
stc
lds
or
add
lods
scas
das
cmp
loop
in
mov
mov
pusha
mov
cld
mov
xor
icebp
jno
cmp
cmp
dec
movsl
mov
pushf
ficomps
xorl
jae
stos
test
mov
in
mov
push
xor
cmc
cmc
or
or
pop
sub
ror
mov
xchg
jns
hlt
mov
cmpsl
mov
dec
movsl
push
inc
xor
pop
loope
mov
testb
jmp
fisubrl
sbb
add
mov
fildll
inc
ss
xchg
mov
dec
cld
add
ja
fists
insb
ja
or
pop
jl
enter
or
jb
add
scas
ficompl
xchg
test
out
xchg
cli
push
or
mov
popf
sub
fsubr
ret
xchg
add
xorb
and
adc
lcall
sbb
aad
aaa
sbb
xchg
fiadds
fucom
mov
xlat
movsl
sub
push
push
mov
hlt
pushf
cmp
cli
inc
mov
mov
lret
popa
subl
stos
push
push
in
cmp
or
mov
lds
imul
mov
xchg
imul
adc
movsb
pop
jbe
and
jbe
frstor
mov
xlat
push
push
call
pop
into
cmp
test
aam
dec
xor
lcall
pop
add
lret
out
jmp
push
movb
paddw
ljmp
pusha
push
repnz
add
xchg
aad
xor
insb
hlt
fldcw
or
mov
in
jmp
fdivl
jne
popf
mov
sbb
jne
mov
xor
push
js
leave
addb
jmp
dec
repnz
mov
xchg
lcall
inc
call
push
imull
out
xchg
adc
imulb
aam
cmp
nop
cltd
arpl
lock
and
cmp
xchg
add
xchg
repz
add
push
movsb
and
mov
nop
mov
shrl
inc
stc
je
xor
cmp
mov
rorb
push
scas
sbb
xchg
les
fcoml
es
test
ret
jbe
xlat
jno
adc
loop
faddl
outsl
mov
pop
loope
or
push
ficomps
mov
popa
push
nop
lods
and
lret
in
pop
sahf
inc
cmpsb
xor
xchg
inc
sahf
jl
inc
aad
ret
sti
sub
mov
fstpl
and
inc
sarb
mov
lods
jecxz
sub
pop
lcall
fcomps
lds
fbld
repnz
stos
int3
sub
rep
out
pop
add
xchg
pusha
test
push
int
push
xor
fisubrs
dec
pop
inc
cli
sub
pusha
push
adc
pop
ror
push
mov
dec
jo
xchg
push
jae
xchg
mov
in
jge
jp
std
adc
pop
aas
add
push
fs
insb
sahf
push
addl
mov
ficoml
movsl
or
pop
or
push
and
push
dec
shrl
pushf
movb
dec
sub
inc
cmp
in
mov
mov
push
cmp
idivb
inc
jo
ja
sbbl
loop
rorb
cmpsb
sbb
fnstcw
dec
xchg
sub
bound
repz
push
jae
scas
sub
in
dec
mov
or
into
xchg
mov
fadds
ret
fucomip
pop
push
test
jnp
js
pop
inc
movsb
mov
fs
adc
push
pop
sahf
enter
sub
andl
mov
loopne
mov
push
mov
jnp
mov
sub
pop
std
lret
adc
or
mov
nop
incb
mov
or
add
out
aam
mov
test
dec
daa
jge
xchg
fisttpl
shrl
mov
cmp
pop
jl
inc
and
repz
cltd
push
gs
mov
pusha
ja
scas
xchg
adc
mov
push
inc
sbb
bound
cld
mov
or
xchg
mov
mov
daa
out
mov
jae
inc
call
lcall
add
arpl
popa
mov
xor
cmp
xchg
scas
sub
jo
incb
dec
mov
rorb
cmp
and
int3
std
jp
inc
shll
dec
xor
test
sub
pusha
sbb
adc
xor
stc
sbb
scas
xchg
das
fsubrl
push
mov
cld
je
or
mov
popf
mov
jns
dec
sub
adc
sahf
and
xchg
or
enter
loop
lea
pop
push
xor
dec
cmp
repnz
jge
ret
mov
insl
jns
sbb
mov
test
testl
mov
dec
fimull
out
and
xchg
test
push
or
xor
xchg
icebp
fnstenv
stos
pop
into
lcall
or
mov
xor
inc
cwtl
sub
sbb
aad
xlat
out
mov
xchg
xchg
sub
sti
inc
sub
sar
mov
cmc
push
xor
sbb
mov
clc
cltd
sbb
xor
nop
ja
sbb
sbb
or
cli
das
test
sbb
xchg
push
and
aas
in
mov
xor
test
mov
or
adc
xchg
hlt
xor
adc
and
sarl
fildll
into
imul
jp
cmc
rol
into
mov
or
sahf
daa
aam
lcall
dec
mov
xor
arpl
mov
cs
jns
leave
push
mov
add
adc
ret
dec
jle
pop
xor
xchg
sti
dec
out
xchg
mov
in
shrl
dec
push
and
jmp
dec
push
xchg
cmp
and
into
mov
push
sahf
popf
cmp
pop
xchg
jl
lods
push
mov
xchg
xor
loopne
lahf
js
jae
dec
push
scas
outsb
cmp
ss
test
loope
mov
or
xchg
pop
insb
xchg
stc
jo
xchg
inc
sub
fs
xchg
push
sahf
fwait
xchg
jp
loope
lret
push
gs
rcrb
cmpl
dec
aam
push
loope
outsb
pop
int3
stos
push
dec
and
sub
ret
lock
xlat
fists
adc
fisttpll
sub
push
xlat
out
movsb
sbbb
lods
sub
and
pop
in
xorl
dec
push
nop
mov
jp
cmp
push
pop
pop
and
ret
sub
add
vunpcklps
dec
jne
cmp
dec
arpl
cmpsl
inc
adc
sub
aas
fcmovnu
je
cld
cld
in
in
push
cli
push
xchg
imul
inc
ficoml
jl
lret
fadds
lock
push
sbb
repnz
jmp
fwait
jl
add
iret
mov
in
mov
and
cmp
jbe
jbe
out
lret
in
aaa
mov
or
push
adc
adc
mov
jns
xor
sbb
dec
mov
je
popa
and
adc
push
jg
pop
stos
cmp
pop
adc
mov
pop
dec
xchg
add
cmc
jge
cmp
cmp
jo
cmp
adc
pop
icebp
lods
mov
divb
cwtl
pop
test
lahf
dec
movsl
cmp
lcall
ficomps
dec
ds
imul
sbb
popf
into
subl
mov
push
lea
sahf
fcmovb
xchg
cmp
jp
lods
sub
bound
out
fsts
dec
cmc
aas
inc
int
xchg
pop
push
xchg
cmp
cwtl
jg
cli
dec
push
cmp
inc
xchg
inc
popf
das
sub
mov
push
push
lods
sti
cmp
fistps
push
stc
stos
sub
fsts
lds
ss
scas
lcall
aad
les
push
cmp
add
dec
cmpsb
push
fiaddl
int
sub
in
mov
push
iret
xor
cltd
xlat
mov
addr16
out
pop
adc
ljmp
imul
mov
push
mov
xorl
flds
push
cld
aam
push
add
mov
mov
jae
dec
mov
mov
andb
test
xchg
icebp
and
popa
cmp
and
jo
insb
mov
xor
jb
cmpb
mov
shrl
sub
insl
dec
aaa
sahf
dec
lret
movsb
xlat
add
das
mov
pop
ret
pop
add
jne
adc
add
mov
je
sar
push
mov
push
test
sbb
dec
dec
fwait
sbb
add
clc
gs
rcl
mov
out
fisubs
mov
movsb
dec
jb
lret
inc
mov
dec
or
xorl
adc
int
je
rclb
imul
mov
xchg
iret
aad
loopne
aam
ret
jecxz
jle
std
xchg
jle
dec
and
sub
push
stos
imul
out
faddp
cmp
dec
cmp
leave
arpl
jmp
imul
imul
mov
les
in
cmc
ficoms
cmpsl
cltd
mov
sub
mov
xchg
dec
add
rolb
push
inc
sub
addr16
popf
push
sbb
mov
leave
mull
lahf
jmp
push
mov
lahf
push
es
cwtl
jle
jl
call
jle
jbe
outsl
xchg
mov
rcrl
ror
lcall
aaa
sub
pop
stos
xchg
or
jnp
mov
cs
leave
ja
outsb
andl
mov
lcall
lods
lds
out
jg
push
inc
popa
mov
add
pusha
dec
repnz
test
dec
fwait
mov
in
mov
scas
adc
sub
xor
xchg
mov
cmpb
icebp
mov
mov
push
sub
cmp
out
fisttpl
push
and
jbe
xor
int3
xchg
sbb
jnp
and
into
jbe
fwait
sbb
adc
jge
popa
lcall
sub
push
sbb
test
gs
es
aad
jae
cmpsb
test
sbb
xchg
or
stos
add
rorl
mov
add
daa
in
sbb
inc
cmp
vunpcklps
xorl
out
repz
sbb
das
pop
sub
enter
adc
sub
fs
pop
cmp
mov
shl
fisubrl
aaa
iret
and
mov
popa
jno
lret
cld
rolb
pusha
aam
mov
cli
orb
xchg
daa
nop
inc
xorb
xchg
and
shlb
adc
cmc
cmp
cmpsb
icebp
sti
xchg
push
nop
pop
idivb
enter
jg
push
scas
into
mov
xor
and
mov
stos
imul
and
and
xchg
dec
addr16
incl
xor
mov
sbb
call
xchg
ret
repz
jp
test
mulb
jo
pop
jnp
cmpsl
aad
jl
cltd
fidivrs
jbe
aaa
and
sub
or
dec
inc
leave
cmpl
add
jg
lods
adc
xchg
test
lock
repz
inc
mov
out
jae
frstor
inc
or
jb
pop
jns
and
fdivp
push
enter
rcr
call
scas
pop
lds
mov
shll
mov
pop
jnp
mov
push
dec
popl
xor
sbbb
mov
psadbw
gs
and
test
cli
lret
jp
out
fdiv
push
out
inc
fmull
shl
xor
loopne
push
mov
out
daa
leave
push
jae
xchg
add
pop
add
lods
mov
xchg
cli
mov
mov
dec
xchg
decb
mov
add
mov
xchg
rcl
aas
and
lods
cmp
jge
or
jmp
add
fldl
xlat
fwait
scas
inc
fwait
sbb
cmc
stos
add
icebp
cmp
test
mov
das
arpl
std
sbb
icebp
popf
cltd
sbb
ret
lods
fcoms
mov
loopne
push
arpl
pop
out
aaa
and
imul
in
mov
sbb
jnp
mov
cmp
push
sub
call
pop
rdmsr
ds
lock
inc
mov
sti
xchg
and
jle
out
test
movsl
loope
xchg
popf
data16
add
ret
daa
dec
xchg
in
and
aas
inc
lods
adc
pop
add
xchg
dec
addr16
les
mov
incb
mov
insb
mov
push
arpl
or
xchg
push
fwait
push
loope
inc
ljmp
xlat
cmpsb
mov
repnz
adc
aas
sbb
sub
sub
push
push
call
loope
test
sub
cld
lret
sub
shr
imul
les
add
pop
das
sbb
mov
out
test
pushf
test
or
jle
cmp
jns
cmp
mov
sbb
push
or
mov
jo
fsubr
add
mov
inc
inc
nop
jp
pop
bt
shl
in
lcall
jbe
pop
and
orb
mov
fstps
xor
jo
stos
push
and
ds
push
mov
stos
add
je
jo
mov
mov
rcrl
test
aad
aaa
loop
fnstsw
and
jecxz
mov
nop
scas
cmp
ljmp
push
mov
pop
fildl
lret
jo
call
in
aas
fsubl
cli
xchg
mov
sbb
pop
push
jns
and
jno
test
pop
lock
cmpsl
in
push
cli
daa
push
jne
jb
fcoml
push
add
pop
mov
push
or
test
jb
mov
filds
mov
in
xor
arpl
testb
push
jmp
outsl
sbb
add
and
xor
cmc
mov
cmp
inc
shrb
insl
in
inc
lods
cmp
pop
gs
and
push
fistpl
imul
bound
lcall
cli
lds
imul
inc
ljmp
cmp
lea
nop
les
or
jnp
test
mov
inc
stos
lret
test
sbb
es
xlat
push
div
loopne
xor
in
ret
add
inc
ljmp
xor
jb
jb
popf
testl
imull
inc
pop
mov
cmp
pop
fistps
mov
fnsave
movsl
ljmp
dec
jno
fidivrl
scas
outsl
clc
int3
lcall
imul
imul
xlat
xchg
dec
aad
jnp
fisubs
jne
add
sbb
dec
sub
imul
ljmp
adc
pop
fs
lods
jg
or
out
int3
mov
sarl
aas
mov
and
pop
jno
fstpt
sub
pop
add
and
loope
loope
or
testb
mov
in
lds
inc
call
imulb
repz
sub
jp
mov
aaa
adc
sarb
pop
xor
mov
rcrl
jge
mov
cmp
inc
loop
mov
xchg
adc
mov
push
xor
bnd
jns
mov
sub
and
xlat
int
sub
push
or
xchg
sahf
mov
sar
pop
or
jle
cmp
sbb
adc
xor
sub
mov
xchg
mov
pop
push
xor
roll
lods
gs
int3
push
insb
cmp
cmp
cmp
outsb
lea
pushf
xchg
push
jl
jb
cltd
out
lock
and
adc
mov
jbe
sbb
adc
dec
adc
and
add
mov
stos
pop
add
orl
lock
jle
adc
icebp
lods
push
sub
out
repnz
movsb
mov
jg
imulb
dec
and
and
inc
arpl
decl
out
or
jmp
add
mov
inc
pusha
jmp
cwtl
stos
mov
mov
or
out
xor
dec
lds
mov
rcll
aad
inc
and
ja
jae
mov
in
mov
in
xchg
jae
xor
testb
aam
movl
mov
js
mov
outsb
fnstsw
fisttps
repnz
push
notb
jmp
inc
xor
es
cltd
into
ss
or
push
sub
ret
jno
bound
push
mov
iret
aas
ret
mov
pop
mov
xchg
sub
imul
lret
sbb
enter
jecxz
cmp
pop
dec
add
inc
rcl
add
mov
sbb
int3
es
dec
inc
lods
or
aas
daa
push
push
mov
inc
mov
cmp
sub
inc
js
cltd
mov
fs
pop
movsb
out
dec
cmpsb
cmp
shll
fldenv
mov
insl
push
daa
bnd
jne
les
inc
push
ds
push
cmp
or
ja
xorb
cmp
test
or
mov
add
dec
xor
sbb
dec
arpl
sbb
sti
pop
fldenv
xchg
imul
roll
fisubs
mulb
sub
sub
dec
lea
cwtl
pop
lahf
dec
mov
xor
jbe
jnp
popf
rolb
scas
jo
add
insl
xor
aad
movsb
jno
jmp
out
push
dec
cmpsl
clc
mov
sub
jmp
les
mov
loop
lods
stos
sub
das
pop
shll
add
jmp
nop
aam
insl
push
ja
mov
xchg
fucom
inc
add
fdiv
test
inc
scas
jg
fs
negl
movntq
stos
daa
fists
out
push
sbb
and
daa
adc
fistl
xlat
notb
imul
add
cld
xorb
pop
push
cmpsb
dec
into
mov
mov
pop
shlb
pop
jl
pop
rcll
sbb
jb
sub
push
xchg
ja
lret
call
loop
sti
adc
cli
scas
cli
aas
jbe
shll
pusha
aad
adc
mov
outsl
das
popa
repz
cmp
imul
mov
cmpsl
ljmp
in
dec
cltd
das
jno
std
xlat
pminub
fisttpl
into
xchg
pop
sbb
in
add
mov
out
add
sbb
sbb
mov
scas
lcall
arpl
mov
jnp
pop
push
push
call
movsl
or
and
ss
call
in
xor
les
repnz
ljmp
lock
test
aas
rcr
or
loopne
jp
push
andb
sti
push
mov
ljmp
dec
hlt
test
es
outsl
push
out
int3
sub
xor
hlt
or
jnp
es
fs
sub
sub
and
ljmp
repz
jmp
add
pop
cli
or
sub
into
pop
mov
pusha
add
jp
outsl
pop
cmpsb
mov
movsl
js
mov
push
add
sbb
mov
pop
xchg
xchg
pop
pop
jne
maskmovq
divl
mov
aas
gs
cmp
xor
xchg
add
test
xchg
mov
arpl
lds
add
ja
aam
xor
je
jmp
enter
ss
fidivs
inc
mov
out
jmp
or
mov
test
adc
push
es
subl
mov
sti
fsts
or
push
fimuls
sbb
push
loope
sub
xor
cmpsl
icebp
repz
popf
inc
mov
lds
hlt
cltd
jg
xlat
cmpsb
lahf
mov
push
lcall
sahf
sub
mov
insl
pop
fwait
lods
jl
inc
and
stc
test
rol
cli
shlb
pop
in
repz
dec
cmp
jbe
push
xchg
stos
lock
lcall
lret
imul
popf
jmp
adc
sub
xchg
pop
sti
cmp
lods
imul
xchg
pop
nop
insl
jg
push
push
inc
ds
shlb
iret
push
pop
mov
xor
and
adc
lds
decb
pop
outsb
pusha
xor
icebp
mov
outsb
adc
shlb
test
sub
fsubrl
pushf
call
leave
mov
jnp
mov
repz
or
pop
dec
arpl
fldl
push
push
aaa
loop
stc
dec
or
cs
cwtl
mov
cltd
mov
stc
in
and
sbb
push
fdivp
lods
movsl
cmp
push
movb
push
mov
repz
vpaddusb
int
inc
sub
inc
mov
push
sub
cmp
jno
std
sbbl
int
lds
push
ljmp
cli
dec
mov
sbb
lahf
xor
insb
rol
and
inc
in
mov
lds
push
xor
fbld
inc
mov
sbb
push
jecxz
xchg
enter
push
outsl
jne
repz
out
dec
jmp
lcall
jecxz
push
ljmp
enter
test
mov
inc
add
sub
mov
push
adc
les
out
xchg
mov
lret
mov
rorb
or
into
push
dec
lahf
shll
dec
xchg
mov
cmp
xchg
inc
sbb
adc
jns
imulb
dec
sbb
outsl
fidivs
jnp
xorb
clc
mov
jp
test
test
push
push
loop
and
dec
add
mov
and
rcrl
outsb
pushf
lcall
jmp
sub
sub
ja
inc
xor
test
and
xor
lea
or
cmpsl
and
call
mov
scas
and
push
mov
dec
fwait
fwait
aas
int
mov
movl
nop
arpl
addb
lea
push
in
mov
cwtl
insl
jnp
inc
repnz
sbb
test
or
jmp
fisubl
cmp
sbb
jae
or
cmp
push
dec
inc
call
sub
pushf
mov
outsb
mov
xor
mov
pop
adc
pusha
mov
loope
sub
inc
inc
lahf
dec
push
pop
jmp
test
fsubrp
sbb
cmp
ja
jnp
scas
xchg
mov
insl
pop
add
inc
or
pop
jge
sub
sub
lret
xor
iret
mov
mov
ja
lret
stos
mov
loop
mov
add
jb
lea
mov
jns
scas
incl
pop
dec
mov
test
pop
arpl
mov
jo
adc
inc
pop
jle
xor
xlat
lret
lea
mov
scas
mov
pop
mov
pop
int3
stos
cwtl
mov
fs
pop
mov
fsubrl
push
adc
mov
call
dec
add
js
scas
aad
iret
outsb
mov
mov
addb
loop
jg
xor
add
dec
stos
push
jne
adc
stos
cltd
xchg
or
cld
loop
push
mov
add
roll
jns
hlt
shll
daa
lods
or
pop
ja
rcll
aam
xor
sub
dec
data16
mov
and
cmp
mov
push
dec
mov
jecxz
dec
rol
dec
popa
pop
jge
int
aam
lods
aad
ficompl
stc
xchg
daa
push
je
xchg
or
add
push
rorb
clc
jo
inc
movl
fsub
nop
loope
nop
iret
decl
ja
mov
les
icebp
bound
push
aam
mov
sub
fistpll
push
adc
pop
adc
loop
xor
dec
jo
lods
wrmsr
sbb
loope
pusha
dec
lods
lahf
subb
out
les
cltd
repz
pop
adc
dec
mov
jb
dec
mov
out
cmp
sahf
ljmp
rorl
sbb
rclb
lahf
and
and
or
loope
hlt
mov
dec
sub
jbe
jle
cmp
lods
pushf
mov
push
and
xchg
sbb
pop
push
mov
aad
push
xchg
jge
flds
cmp
mov
adc
sbb
int3
call
mov
mov
je
loop
cmpsb
cltd
dec
movsb
in
add
jbe
aad
adc
mov
inc
dec
aas
dec
mov
dec
cwtl
push
orb
negb
cs
pop
loope
cmp
sbb
imul
divb
lgs
fstps
cmpsb
lcall
cmpsl
or
mov
arpl
pusha
into
ret
and
roll
sarb
or
pop
sbb
inc
repnz
insl
scas
shlb
xor
push
sti
addr16
mov
jno
adc
pop
and
xor
repnz
dec
jo
inc
jns
mov
inc
xor
pop
and
and
cltd
ja
and
cld
sbb
inc
add
or
push
stos
negl
mov
xchg
fbstp
pop
adc
ret
pop
icebp
push
int3
outsl
ret
bound
testl
ret
xchg
xchg
xchg
lds
inc
or
cmc
clc
dec
pop
cs
adc
push
loopne
cld
in
mov
jge
mov
push
aad
mov
ds
mov
in
sub
clc
xchg
xchg
aad
or
call
cmp
lahf
orl
rcrb
cs
adc
paddq
pusha
ret
mov
jno
leave
stos
sub
dec
dec
push
or
jecxz
pop
sbb
mov
adc
hlt
mov
sub
lea
xchg
or
mov
fsubs
popa
mov
pop
pop
out
into
cmp
popa
pop
sti
jnp
and
pusha
push
or
mov
lret
sti
jmp
test
shlb
popa
jmp
stos
pop
mov
loopne
das
or
stc
jae
data16
repnz
pop
add
dec
cmp
mov
das
imul
push
cmp
jecxz
aas
add
jno
dec
sub
sbb
and
sub
xor
mov
addl
xor
sub
cmp
push
cmp
sarl
pushf
rorb
int3
pusha
pop
scas
mov
cmp
outsb
sub
xchg
add
cmp
and
or
rorb
fldl
xchg
push
adc
ja
push
scas
mov
mov
in
push
jecxz
clc
test
inc
adc
xor
mov
imul
jo
into
cmp
mov
and
lret
or
popa
stos
sbb
mov
imul
pop
jle
jecxz
jp
pusha
insl
ds
push
lock
xor
add
js
adc
inc
add
fstl
xchg
pop
ss
add
push
push
adc
pop
xchg
idivl
adcb
jle
adc
xor
leave
mov
xchg
adc
or
mov
test
fsts
mov
mov
mov
mov
js
mov
pop
test
mov
out
in
jb
scas
xchg
sti
fucomip
mov
int
std
push
ja
inc
jo
push
cmc
jne
xchg
lret
movsb
and
mov
mov
popa
outsl
xor
addr16
xor
sbb
inc
ss
sbb
sahf
repnz
pop
mov
pop
sub
popa
xchg
add
stos
add
pop
adc
cmp
dec
add
push
mov
mov
fucomi
push
jmp
aad
and
sahf
aad
addr16
mov
or
test
mov
rolb
psubd
cmp
repz
mov
jecxz
ret
ja
mov
ds
in
mov
xchg
sti
dec
pop
test
dec
pop
out
jo
mov
mov
sti
mov
pop
sub
pop
mov
leave
mov
cs
fwait
adc
iret
loope
sub
fmull
push
mov
jle
sti
jno
loopne
jp
jg
sti
push
mov
bound
cmpsb
and
mov
in
icebp
pusha
shl
ret
cmp
dec
xchg
test
shlb
inc
dec
cmpsb
fadds
addr16
lcall
xchg
and
mov
and
add
pop
cld
xor
gs
or
clc
mov
push
push
push
mov
push
sti
je
rcl
jae
jns
mov
lods
pushf
jmp
push
or
cwtl
mov
mov
mov
into
mov
fs
mov
lcall
mov
call
sbb
insb
jb
ficompl
inc
js
les
cmp
push
movsl
dec
jg
adc
dec
scas
icebp
jb
aaa
or
mov
stos
adcb
sub
andb
cwtl
lret
push
sub
imul
fmul
adcb
lret
daa
jp
andb
mov
addr16
das
imul
lea
stc
pusha
dec
and
shl
mov
and
jecxz
xor
mov
dec
fyl2xp1
or
mov
mov
out
es
or
insb
addr16
cmp
sbb
xor
push
jae
fildll
in
jg
sub
xchg
inc
dec
sub
movsb
mov
insl
lret
mov
inc
movsl
popa
sbbl
sbb
xchg
ljmp
vcomiss
mov
cmpsb
lods
sbb
lea
dec
pop
ret
inc
mov
pop
push
daa
addl
rclb
mov
sub
adc
insl
sti
jb
sahf
inc
push
xor
push
mov
sub
out
jl
cmpsl
sbb
fs
loopne
movsb
sub
or
mov
cld
adc
ja
sbb
orl
sahf
loop
push
sbb
and
adc
jecxz
mov
inc
mov
xchg
mov
sub
mov
push
add
push
push
movsl
sub
stos
out
shrb
sub
cmpb
pop
mov
dec
pop
scas
mov
into
xchg
aam
outsl
idivl
fidivrs
in
or
rcr
pop
test
fdivr
sbb
mov
mov
dec
lret
loop
jns
xchg
dec
scas
inc
hlt
icebp
mov
popa
or
cmpl
adc
mov
xchg
pop
int
mov
mov
dec
cmpsb
ret
pop
mov
les
bound
addr16
std
mov
or
out
xchg
fisubrs
push
fwait
aam
mov
aam
jl
mov
adc
int3
stos
mov
xor
sub
sahf
into
sti
and
adc
in
stc
or
pop
mov
jne
mov
call
adc
addr16
sub
adc
pop
mov
ret
pop
jo
testl
in
mov
rclb
add
frstor
mov
mov
cmc
es
scas
xchg
jg
in
decb
and
enter
insl
ljmp
mov
out
popa
filds
lods
cmp
xor
jne
out
roll
dec
mov
sbb
inc
cmpsl
data16
ljmp
xchg
rcr
push
aas
sahf
sarb
pop
bound
aad
push
dec
xchg
dec
in
fisttpl
add
shll
sbb
lcall
fdivp
out
inc
jo
sbb
inc
xorl
lds
adc
test
pushf
pop
cmp
push
xor
mov
scas
sub
sbb
xchg
pop
mov
and
mov
mov
sub
dec
ror
jbe
mov
cmpsl
insl
ljmp
and
fbld
addb
test
add
xchg
push
fnstenv
pop
sbbl
or
pop
push
xchg
movsl
icebp
lods
sub
pop
ffree
pop
xor
add
call
loop
sub
add
in
icebp
pop
fwait
orl
jns
repnz
adc
pop
imul
into
lock
mov
mov
pop
lret
fwait
dec
push
and
fstpt
dec
nop
jp
mov
jmp
dec
pop
fimuls
cmpsl
jl
int3
jno
mov
out
lret
sbb
aas
bnd
pop
jnp
xchg
push
subl
adc
push
pusha
out
sub
pop
sub
pop
pop
test
das
scas
push
mov
mov
cmp
stos
jno
sbb
and
pop
add
lods
mov
pop
jp
bound
roll
pop
inc
adc
pop
cmpsl
lods
jmp
mov
int
dec
add
aaa
jmp
arpl
cmc
cmp
jae
adc
je
call
push
adc
outsl
in
cltd
rol
mov
inc
xchg
jp
mov
lahf
mov
mov
inc
inc
aaa
pop
jle
mul
rcrb
daa
pop
cmp
add
jbe
adc
imul
xchg
dec
dec
pop
int3
or
cltd
test
pop
shll
cmp
xor
push
aad
lret
add
bound
loop
repnz
mov
ret
inc
fldcw
xor
test
and
dec
scas
js
jmp
cmp
push
pop
sarb
in
sahf
mov
jmp
mov
and
jo
jge
insl
ljmp
or
scas
mov
psubb
sbb
add
mov
push
inc
adc
or
mov
iret
add
lahf
xchg
and
scas
sti
int
inc
stos
aas
test
adc
jecxz
xor
fbld
adc
mov
shll
leave
cld
movsl
mov
stos
repnz
cmpxchg
lcall
outsb
dec
or
lods
push
xchg
bound
pusha
and
shl
clc
movsl
scas
loopne
inc
xlat
xchg
cld
xchg
dec
cmp
cmc
pushf
mov
jo
add
push
mov
sbb
and
or
call
mov
xor
inc
inc
xor
push
mov
or
push
mov
xchg
out
add
fwait
or
popf
jmp
rolb
pushf
add
xchg
sub
outsl
in
jb
xor
call
insl
sbb
gs
inc
xchg
bound
jno
pop
dec
add
clc
bound
insb
mov
or
incb
inc
xor
mov
and
jg
int
add
scas
enter
or
ret
xchg
idivb
test
jnp
add
mov
ficomps
cltd
push
fildl
fbstp
repz
das
nop
pop
dec
movsb
dec
dec
mov
mov
or
xor
out
adc
xor
pop
or
xchg
ljmp
in
dec
int
rcl
add
rorl
out
mov
sbb
fbld
jno
sahf
mov
ss
out
mov
mov
out
pop
imulb
aam
mov
add
pop
add
testl
add
enter
and
jg
enter
push
pop
xchg
loop
cwtl
mov
push
xchg
stos
lret
sbb
mov
and
ss
adc
add
cmp
iret
jne
mov
xchg
xor
in
jecxz
lods
push
adc
xchg
test
in
push
xchg
inc
jo
add
add
mov
xchg
aaa
data16
push
loope
inc
in
movsl
xchg
out
sub
dec
fptan
lahf
xor
push
push
xchg
or
popa
mov
cmp
push
cmp
jne
push
cmp
test
loop
setle
sarl
movb
inc
pop
xchg
mov
movhps
fwait
and
fnsetpm(287
sub
cld
jne
ljmp
inc
xchg
cwtl
loope
pop
aaa
xor
fmulp
push
dec
jmp
jle
mov
xchg
jg
popa
push
daa
adc
jae
mov
fwait
mov
jmp
inc
add
push
cmp
fwait
xchg
jns
stos
fdivrs
stos
cwtl
popf
mov
loop
je
push
xchg
adc
jo
aaa
inc
adc
in
insl
and
imul
add
icebp
into
sbb
inc
aad
mov
xchg
sbb
sub
dec
popf
movsl
add
cmp
add
stos
jmp
inc
ljmp
daa
mov
popf
or
imul
inc
aaa
sbb
jl
fcomp
mov
push
adc
test
inc
test
jne
push
popa
dec
adc
add
xchg
cmpsb
lods
or
dec
out
aad
push
in
jno
imul
lcall
and
cmp
inc
jg
dec
out
and
dec
shll
test
push
xchg
mov
sbb
or
inc
xor
jmp
mov
adc
ret
js
mov
rclb
push
in
adc
lea
xchg
add
les
in
push
mov
xchg
sub
inc
or
mov
movsb
psubusw
lods
xor
lea
daa
hlt
loopw
daa
imul
or
loopne
imulb
mov
xor
data16
cmpsb
cmp
xlat
adcl
sub
je
pop
inc
ja
cmp
jl
pop
mov
loop
insl
arpl
or
fwait
jmp
fs
mov
mov
in
call
sub
aad
in
shll
cli
gs
mov
std
ffree
cmp
fiaddl
push
pop
inc
pop
lret
ss
mov
add
ja
ret
outsl
cli
test
shlb
xor
inc
aam
or
out
pop
mov
dec
jb
jno
adc
lods
jge
pop
addr16
and
mov
mov
jg
dec
sahf
push
push
cmp
jbe
mov
sti
pop
sbb
std
sub
pop
leave
inc
sub
int
fisttpll
pop
leave
adcb
std
inc
dec
in
in
out
outsb
xchg
mov
cmp
test
cltd
jl,pt
clc
ja
cmp
test
or
outsl
out
jno
adc
int3
out
jge
aaa
jbe
xor
cmp
lods
mov
iret
icebp
adc
pusha
xor
push
pop
js
sbb
iret
mov
data16
pop
jecxz
in
mov
call
or
clc
rclb
inc
cli
ret
push
cwtl
aaa
inc
cltd
push
cmp
cmp
add
jmp
mov
mov
mov
mov
sub
inc
mov
xchg
popf
adc
inc
repnz
cld
shll
dec
mov
leave
out
push
shl
mov
adc
nop
sub
push
mov
addb
push
movsb
lods
sub
mov
in
ljmp
js
lahf
ret
sub
fwait
stos
or
ret
js
inc
sbb
mov
mov
dec
mov
and
push
or
xor
push
xchg
push
sub
scas
call
int3
push
lock
loop
popa
pop
xor
cld
xlat
pusha
lock
cmp
inc
lods
movsl
cltd
jg
sbb
les
lock
aaa
xor
mov
mov
cmc
jecxz
imul
jns
dec
push
mov
adc
add
jge
add
jmp
xor
xchg
fidivl
jno
push
pop
add
jl
stos
and
dec
in
push
adc
mov
xlat
mov
sbbb
sti
outsb
fidivrs
je
stos
dec
lret
push
mov
inc
mov
mov
xchg
inc
insl
jl
popf
and
faddp
push
add
and
int3
mov
sti
lret
push
mov
and
or
pop
xchg
xchg
xor
lea
scas
stos
sbb
ss
mov
pushl
push
jnp
mov
int
sbb
test
push
mov
mov
ret
cmp
rcrb
add
and
sbb
add
jle
test
jne
lret
adc
lret
xlat
stos
cli
mov
dec
push
test
dec
xchg
pop
flds
insb
dec
push
sub
xchg
xchg
in
pop
cmp
ds
in
xor
fildl
and
lsl
jae
pushf
dec
outsl
inc
scas
mov
hlt
cwtl
ficompl
add
or
xor
adc
leave
scas
repnz
pop
out
leave
into
pop
xchg
lret
sbb
push
mov
jle
mov
mov
in
sbb
xchg
pop
push
mull
xchg
jb
dec
pop
mov
mov
xchg
aad
sub
adc
jle
add
cs
mov
xor
mov
and
in
fisubl
in
imul
dec
mov
jae
pop
arpl
add
cmp
rolb
adc
jp
arpl
jl
enter
arpl
loopne
push
adc
fxtract
add
fcmove
pop
xchg
pop
sbb
cmp
push
aad
les
xor
sub
cmpsl
fs
xchg
push
int
cld
push
in
stc
jnp
fcmovnb
push
aam
pop
mov
cmp
pop
jl
imul
cmp
xchg
inc
mov
mov
nop
scas
popa
ss
fimull
fbld
cwtl
rcrl
push
ljmp
clc
mov
xchg
inc
mov
imul
pusha
add
stc
insl
cmpb
cmc
int3
xor
mov
push
sbb
and
lods
call
loopne
mov
mov
jne
push
xlat
sbb
clc
nop
sahf
pop
pop
inc
data16
cli
or
jbe
push
mov
ja
xor
in
imulb
cmpsl
or
sub
in
out
sbb
jmp
lods
popf
and
into
mov
push
jmp
les
cmpb
adc
jmp
jp
out
hlt
cmp
out
aaa
ja
sbb
mov
lods
mov
pop
jp
add
test
stos
loop
pop
loop
and
adc
sub
les
pop
mov
sbb
and
sbb
sti
mov
jg
inc
cli
add
adc
add
arpl
push
insb
mov
and
test
inc
inc
in
pop
call
mov
dec
loop
fcompl
mov
jl
mov
adc
inc
cmp
jb
das
mov
shlb
rol
add
ja
out
xchg
cltd
mov
sarb
xchg
sub
mov
xchg
int
push
xor
mov
sbb
lcall
add
ss
gs
dec
sar
leave
inc
inc
mulb
addr16
rcll
push
or
int3
adc
sahf
cmp
adc
ret
insb
and
jnp
lods
jo
mov
in
jg
mov
daa
mov
test
or
mov
xchg
divb
jbe
fdivl
mov
push
push
adc
test
dec
and
ret
sbbl
test
adc
loopne
jno
sbb
popa
and
mov
add
push
push
mov
insl
mov
jp
lods
xchg
cli
adc
pop
and
loope
lcall
sarl
adc
sub
ud0
insl
ljmp
imul
xchg
adc
leave
fidivl
adc
mov
dec
dec
insl
ja
adc
lods
in
push
sbb
stc
int
es
mov
mov
jae
push
pop
outsb
lods
movsl
nop
jno
cmpsb
pop
sub
mov
mov
or
inc
mov
jnp
icebp
adc
xchg
xchg
and
push
xor
lret
mov
or
mov
and
jg
xor
lcall
inc
adcl
insb
push
call
loop
and
jo,pn
push
sub
test
push
call
jno
push
jle
out
fildl
sbb
insl
stos
addr16
dec
and
xor
pop
test
call
cmpsl
popf
mov
aas
pusha
aas
push
pop
mov
or
in
std
into
ror
inc
cmp
inc
cmpsl
and
or
les
sti
adcl
cmp
inc
xchg
xor
sub
xchg
aas
sbbb
pop
cmpsb
mov
mov
lea
std
and
test
cmp
inc
or
or
sbb
push
out
mov
cwtl
fwait
es
xchg
fisttps
mov
into
movsb
xor
imul
push
pop
xchg
and
adc
pop
or
out
lods
xor
mov
out
addr16
sub
call
les
ret
mov
jno
xor
sub
loopne
and
push
lds
mov
stc
jmp
jp
and
stc
iret
pop
pop
les
and
push
add
rorl
lcall
xorb
jb
pop
mov
imul
test
jecxz
iret
test
movb
ficoms
or
arpl
std
xchg
clc
addr16
cmp
pop
jo
xor
scas
nop
jmp
or
aaa
push
out
ds
notb
xchg
jns
out
imul
jbe
lretw
mov
mov
cmpsb
jp
sahf
repz
loopne
push
lahf
cmp
leave
popa
fstpt
addl
test
mov
repnz
pop
jae
jo
jle
sbb
dec
inc
shl
cld
mov
mov
gs
jb
mov
push
mov
push
pop
push
and
imul
sub
add
fs
jg
mov
les
cld
rcrb
addr16
mov
rcll
outsb
adc
loope
and
xchg
xlat
fildll
lcall
inc
hlt
test
daa
sbb
pushl
xchg
add
cwtl
gs
xchg
dec
pop
stos
mov
cs
jge
popa
push
add
daa
pop
xchg
pushf
icebp
pushf
lds
fisttps
ds
neg
popf
sub
cmp
out
cmc
inc
sub
test
inc
pusha
sahf
out
sbb
mov
jmp
imul
inc
pop
xchg
mov
jno
xchg
mov
pop
mov
shrl
or
mov
cld
shlb
rclb
mov
cld
dec
cmp
ljmp
mov
sbb
mov
rsm
cli
and
orl
sub
int
inc
int3
movups
cmpsl
imul
das
push
aaa
adc
hlt
loope
repz
fidivs
ret
sbb
lods
sbb
adc
in
push
mov
jge
pop
mov
pop
int
cld
test
enter
xchg
or
sub
popf
cmc
jae
or
imul
cs
aad
adc
push
adcb
inc
cmp
das
mov
lods
popa
out
imul
or
xchg
and
jno
and
sbb
xor
cmp
inc
iret
dec
dec
mov
fbld
enter
jecxz
cs
aam
scas
push
and
std
mov
xlat
sub
cmpsl
inc
pop
imul
testl
mov
int3
dec
mov
dec
lea
popf
mov
in
cmp
aaa
imul
adc
mov
mov
pop
add
insb
inc
pop
mov
xchg
ud0
adc
ds
jmp
inc
add
mov
inc
cmpsl
pushf
pop
push
cmp
jae
adc
test
call
bound
push
daa
sbb
dec
jl
das
push
das
add
pop
inc
mov
mov
add
sbb
fistps
mov
lea
xor
sbb
cwtl
enter
out
cmpsb
cmpsl
imul
and
in
cmp
addr16
shll
cs
scas
xor
fistl
dec
pop
push
push
int3
or
inc
aam
fsts
mov
xchg
gs
js
test
ror
xor
jle
popa
out
shrb
cmp
push
bound
or
dec
mov
jge
fdivs
dec
jno
repnz
faddl
mov
cmpl
cltd
pop
sub
ret
inc
outsb
ds
pop
cld
out
add
mov
std
xor
data16
pop
xchg
cmp
lea
inc
pusha
or
fcom
gs
dec
dec
loop
adc
in
testb
fidivrl
push
cmp
repnz
insl
inc
push
push
sub
sahf
lock
push
movsl
jbe
sub
vsubss
cmc
adc
jne
std
iret
and
aas
stos
push
out
stos
xor
fsubl
xor
ss
bound
push
mov
adc
stc
jb
cmpsb
arpl
rcrb
data16
popf
pop
es
sbb
test
pusha
in
scas
push
adc
jno
jns
in
add
sub
lret
pop
mov
gs
jg
imul
dec
add
xor
cmp
mull
and
mov
dec
inc
xor
loop
loope
xchg
sbb
sahf
movsb
leave
dec
bound
mov
test
add
mov
dec
xor
xor
out
and
sub
xchg
test
lock
and
mov
int3
lahf
sbb
pop
dec
fcomps
xchg
rcrl
pop
decb
pop
push
out
mov
into
ret
sbb
in
xchg
clc
inc
mov
jne
cmp
jo
aad
mov
aas
sbb
sub
mov
outsb
jb
loope
push
fld1
popa
js
sub
outsl
pop
out
xchg
repz
mov
xor
in
mov
stos
or
mov
das
cmp
call
push
pop
imul
repnz
lea
dec
or
movl
jbe
stc
lret
imul
insb
mov
and
adc
mov
insl
andl
cmp
or
jb
sub
mov
jecxz
arpl
ret
mov
fs
xor
pop
bsr
add
sub
out
mov
orb
jne
cs
sub
out
hlt
pop
adc
push
and
lods
and
je
popa
jb
ret
movsb
insl
fnstcw
cmp
in
das
jmp
mov
cld
stos
dec
adc
xor
mov
repnz
addr16
insb
pop
xor
das
inc
pop
jns
jp
lcall
adc
les
loope
xchg
xchg
ret
inc
pop
sub
adc
ja
test
sbb
pop
testl
mov
xchg
iret
rcrl
mov
push
inc
cmp
inc
pop
jle
gs
push
pop
fildl
and
cs
notl
xchg
es
test
dec
adc
and
test
lea
jne
jg
inc
add
enter
jge
movsl
cmp
aad
cmovbe
xlat
xchg
clc
adc
test
dec
loopne
xorps
fwait
pop
test
ds
shll
sub
sbb
jp
pop
adc
into
push
repz
pop
loopne
ret
in
sbb
jecxz
addr16
jmp
push
fxch
push
push
adc
cmc
es
movsb
dec
sbb
rclb
shll
mov
lret
sbb
add
js
aad
dec
cmpsb
shrb
jp
test
int3
clc
lahf
inc
lcall
mov
jb
inc
dec
and
cmp
pop
sub
dec
xor
insl
pop
iret
lret
mov
into
out
cmp
enter
pop
and
dec
sbbl
sti
rcrl
xor
imul
rcll
adc
inc
out
aas
dec
rorb
xor
push
hlt
jae
mov
sub
inc
xchg
ds
shl
sub
jp
mov
pusha
xor
mov
les
mov
fisubrs
or
movl
movb
sub
jl
scas
nop
hlt
cmc
scas
sbb
sub
cltd
mov
jl
iret
jns
cmp
paddd
rorb
or
mov
mov
xchg
xchg
mov
and
push
cld
insb
xor
lahf
sub
leave
mov
jmp
cli
sahf
xchg
pop
pop
or
mov
mov
pop
and
repz
mov
insl
adc
lcall
jp
shrl
or
mov
idivl
int3
lcall
push
pop
sahf
sbb
jl
jns
sbb
mov
xor
cpuid
aam
push
push
mov
xchg
mov
test
cmp
push
push
adc
ljmp
jno
mov
out
sub
dec
add
jge
xchg
jmp
xchg
roll
inc
shl
daa
ss
mov
test
mov
jno
sbb
out
mov
lods
or
outsb
mov
mov
pop
rcll
push
lods
fnstenv
insb
dec
jle
aad
jle
lods
nop
int3
fistpll
outsl
mov
es
and
inc
fwait
aaa
mov
mov
inc
cld
dec
test
gs
jb
jle
mov
andb
push
fisttps
stos
dec
fmul
jne
lock
xchg
imul
aam
xchg
cmc
jns
sbb
test
jns
enter
lret
add
repnz
dec
dec
cli
dec
cmp
lods
cmc
ja
leave
push
mov
gs
mov
test
xchg
cmp
cmpsb
aas
call
push
mov
or
int
mov
jl
push
insl
push
fisttpll
fcoms
push
xchg
sbb
bound
jno
dec
jno
add
test
outsb
push
xor
xor
fidivrl
push
push
jns
xchg
ficoml
push
ja
andl
daa
pop
bound
mov
repnz
pop
inc
repnz
xor
loop
jne
rcrl
mov
aam
imul
stos
cmpsl
mov
fcmovbe
pop
pop
or
push
xchg
xchg
mov
fcoml
sbb
cli
cmp
inc
pop
lcall
clc
pop
inc
pop
jle
fstps
scas
cwtl
lret
xchg
mov
imul
movsl
mov
fstl
sti
mov
push
jg
mov
cld
xlat
jle
mov
dec
mov
or
inc
xchg
adc
out
pop
fisttpll
arpl
lret
test
jmp
out
or
adc
lcall
push
inc
and
fadds
add
int3
and
push
push
and
jl
inc
add
push
push
pop
mov
sub
repz
int
or
pop
mov
outsl
inc
and
scas
leave
shrb
push
sub
add
jns
or
sbb
mov
mov
das
jmp
cmpb
test
push
into
sub
sahf
xor
out
jae
mov
out
add
lods
cld
call
sti
adc
mov
mov
shl
inc
shr
sbb
test
sbb
jmp
sbb
inc
add
daa
in
iret
stc
xchg
jmp
sbb
shrb
push
fwait
mov
lret
jecxz
pop
pop
scas
mov
add
imul
js
and
xor
fxch
divb
inc
shll
pop
nop
aad
dec
sub
in
mov
and
jnp
sub
fistps
cmpsl
fisttpl
sar
xor
xor
stos
and
inc
and
inc
xor
out
les
sti
mov
pushf
add
sbb
fdivrl
fistps
sbb
cwtl
lea
pop
imul
dec
mov
fwait
mov
and
pop
andb
rol
cltd
pop
add
in
outsl
jne
and
jle
and
or
out
cltd
and
or
shr
xchg
sub
mov
cmp
leave
jmp
sub
and
outsl
hlt
fildll
xchg
mov
mov
aas
cmpsb
pmullw
test
ljmp
mov
repnz
insb
cwtl
dec
pop
and
adc
pop
ret
test
dec
enter
xchg
scas
dec
testb
add
xor
sub
shlb
mov
es
sub
mov
push
mov
sbb
jecxz
mov
push
cmpsl
jecxz
push
cwtl
movsb
in
sbb
repz
add
jno
orl
leave
lock
sub
sub
xchg
inc
pop
cmp
jo
lahf
ljmp
push
aas
incl
aad
mov
sti
cwtl
push
movb
imul
push
inc
out
mov
push
out
fdiv
negl
mov
and
jnp
pop
notb
dec
xchg
mov
setbe
dec
imul
pushf
jne
inc
jbe
add
dec
or
cmc
adc
add
pop
pop
in
adc
push
pop
jecxz
out
xlat
in
jne
cltd
cmp
cmp
adc
xor
mov
pop
add
aam
cwtl
loop
sbb
xor
push
fisubrs
or
pushf
lret
or
dec
adc
test
sahf
addl
addr16
insb
sub
rcll
xchg
daa
push
mov
sahf
gs
xor
add
roll
ss
fcmovne
icebp
adc
out
jge
push
adc
add
int3
xchg
mov
in
mov
addr16
push
cli
dec
mov
sub
das
andl
add
mov
int3
dec
sub
pop
sub
jmp
rorl
jns
lahf
cmp
lret
xchg
push
mov
cmp
scas
fidivs
jl
and
mov
rcrl
mov
enter
pusha
jne
push
loope
pop
frstor
or
orb
mov
lods
test
pop
fildl
pop
lahf
cmpb
mov
data16
fidivs
iret
mov
xor
pusha
pop
push
sbb
mov
nop
test
je
sbb
dec
and
dec
call
mov
out
test
xchg
movsl
mov
jb
insb
es
rorb
out
mov
mov
popf
xchg
pop
clc
sub
pop
dec
bound
pop
jmp
into
xor
xchg
outsl
push
cmpsb
and
push
out
add
sbb
scas
clc
mov
mov
xchg
nop
xor
outsl
dec
xchg
test
and
ds
cmp
and
xchg
and
sub
sub
mov
xlat
xchg
add
ja
mov
out
or
push
cs
out
sbb
arpl
call
and
lahf
mov
mulb
fidivrl
sub
in
mov
sti
sbb
adc
mov
pusha
sub
mov
imul
sti
pop
push
cmp
outsb
mov
sub
inc
sub
leave
out
cmp
mov
and
jbe
stc
movsl
lds
inc
imul
xor
push
sub
adc
icebp
or
mov
sbb
icebp
sbb
stos
stos
or
fidivl
pop
push
shr
rcrl
sub
jns
adc
jns
inc
mov
idivb
mov
movsb
pusha
mov
xchg
add
lret
aaa
das
fildll
add
shr
andb
xchg
add
pop
push
test
je
iret
sub
int3
inc
add
sbb
pop
addr16
xorb
shl
rclb
repz
mov
add
dec
mov
addr16
scas
mov
pop
mov
and
leave
mov
ret
inc
fcoml
test
xor
and
jmp
push
pop
pop
mov
jno
push
sbb
icebp
xchg
inc
pop
xorl
jnp
outsl
lea
mov
aad
pop
js
push
dec
lret
jo
shrd
lcall
mov
jo
jno
iret
fbld
dec
sub
out
xchg
addr16
jmp
cmp
outsb
dec
daa
fs
dec
inc
push
cltd
ret
les
mov
or
xor
cmp
jle
arpl
mov
pushf
addr16
mov
mov
fildll
pop
jno
inc
shrl
movsb
fiadds
test
mov
adc
cltd
stos
out
pop
lret
fstpl
mov
es
xchg
fnstsw
js
cld
data16
loop
mov
cmp
sub
jb
or
in
push
and
std
lret
cmp
inc
xor
out
fprem1
sub
stos
push
int
xchg
jecxz
aad
xor
sub
outsb
clc
shlb
movsl
jg
and
xchg
shrb
into
lret
mov
pop
cmp
mov
push
fldl2t
mov
mov
imul
test
fwait
repz
xchg
add
test
lcall
jno
cmpsl
mov
scas
shrl
sbb
cli
pop
add
xor
and
sub
pop
out
xchg
jne
daa
in
jecxz,pt
push
jg
mov
push
sub
repz
bound
je
std
fld
cli
inc
bound
mov
outsl
mov
mov
or
cli
inc
push
enter
push
sarb
sbb
fsubs
xchg
sbb
jle
xchg
shl
pusha
xor
icebp
mov
xor
adcl
push
movsl
mov
cmp
rclb
push
int3
lock
out
cltd
cmp
sahf
and
push
mov
jge
das
xchg
inc
je
sbb
jge
loope
cmpsl
insl
ja
repz
and
es
lock
gs
and
movsb
mov
mov
lret
pop
sbb
das
and
in
xor
insb
add
sbb
test
iret
and
sarb
pop
sbb
xor
push
sbb
inc
xor
aas
js
cmp
jp
or
imul
rcl
ficoml
in
and
icebp
pop
mov
mov
stos
or
adc
insb
into
push
mov
add
pop
and
out
rclb
fiaddl
cmpsb
sub
mov
xchg
xchg
fwait
mov
hlt
dec
cmpsb
inc
je
loope
in
mov
and
pop
adc
js
fdivs
cmpsl
push
sbbl
pop
push
adc
adc
sub
jno
push
ret
inc
mov
mov
mov
lock
and
stos
ja
data16
push
sar
pusha
xchg
enter
and
mov
push
mov
adc
sub
mov
adc
cmp
popa
xchg
xor
pop
ficompl
shl
std
div
addr16
arpl
scas
sbb
mov
pushf
mov
adcl
inc
sub
cmpsb
outsb
cmp
push
mov
mov
push
dec
mov
fstps
pop
push
push
dec
cld
mov
pop
mov
or
dec
xor
xchg
fsubl
bnd
jmp
bound
xor
or
lahf
jmp
add
lds
mov
inc
or
dec
pop
arpl
insl
cmp
lret
testl
add
mov
stos
jo
sub
xchg
push
jb
mov
cmc
popa
pusha
test
jne
out
mov
add
jge
pop
jno
dec
lcall
fs
push
push
jge
and
fistpll
ds
jmp
call
hlt
jl
int3
sbb
jp
roll
in
cmpsl
cmp
push
sbb
mov
shrl
inc
rcrl
pop
xchg
loopne
push
mov
sbb
xor
mov
xchg
pop
and
cmp
push
push
dec
add
andb
ret
xchg
pushf
adc
shrb
xchg
shrl
mov
jp
adc
inc
push
adc
and
incl
lcall
in
call
fmuls
lcall
fists
stos
adc
test
and
adc
imul
jb
scas
insb
push
inc
loop
js
pop
dec
xor
or
sbb
fldl
in
shrl
fwait
pop
jno
loope
fldt
sub
inc
pop
ffreep
inc
mov
jnp
stos
int
movsb
lcall
mov
sarl
cmp
xchg
stos
inc
jl
inc
loopne
lds
dec
jae
mov
jne
imul
mov
sti
and
push
add
loopne
cmp
adc
repz
add
push
test
pushf
mov
lahf
sub
shlb
inc
popa
ffree
mov
mov
int
out
jnp
in
jo
inc
dec
mov
cmp
sub
adc
mov
cli
movsl
out
xchg
cmc
stos
mov
inc
dec
outsl
mov
inc
adc
jecxz
mov
push
into
or
sub
adc
adc
lahf
adc
aam
int3
bswap
into
ljmp
inc
and
pop
in
mov
xlat
aad
out
sbb
inc
inc
in
sbb
xor
push
xchg
add
aad
iret
pop
popa
jmp
dec
jp,pt
xchg
xchg
bound
fstpt
mov
out
cmp
inc
pushf
push
rcrl
js
dec
pop
insb
stos
out
inc
jns
xchg
iret
sbb
push
lahf
jne
xor
cmc
inc
jb
idiv
idivl
jmp
add
push
sub
je
int
pop
out
cmpsb
cmp
add
xchg
jb
ret
mov
scas
xor
movsb
push
jl
cwtl
sub
leave
popf
and
dec
jp
mov
sarl
and
adc
sbb
aaa
dec
push
popf
outsb
xchg
testl
mov
in
push
pop
insl
jl
stos
lea
cmp
sub
lods
jb
leave
dec
pop
xchg
cmc
xchg
jbe
jl
dec
adc
xor
lods
pop
loop
imul
fs
push
mov
sbb
adc
or
pusha
pop
mov
dec
xor
jo
cld
add
mov
cmp
imul
add
fdivs
mov
xchg
jae
gs
mov
dec
fmulp
cli
lcall
fildll
cmp
xor
sti
xlat
pusha
xchg
movsl
cld
insl
outsl
out
or
mov
mov
pushf
pop
or
xor
rcrb
inc
mov
out
scas
inc
jecxz
popa
sub
rcll
inc
test
mov
push
add
inc
mov
inc
jg
cmp
lahf
or
push
pop
arpl
ret
xchg
pop
or
mov
test
jne
mov
movl
je
jno
pop
cmpl
mul
sub
adc
mov
inc
dec
cmp
add
enter
xchg
imul
sbb
dec
push
out
stc
std
push
stos
mov
push
inc
jnp
add
mov
jg
or
xor
fcoms
repz
in
daa
mov
cwtl
std
jge
rorl
int3
aas
mov
rcl
jge
cmp
cs
fs
cmpsb
sub
dec
add
ficoml
ret
or
and
arpl
jg
ljmp
adc
ffreep
xor
cmovnp
and
popf
push
inc
add
lea
pop
push
mov
sub
jne
inc
scas
or
addr16
fidivl
stos
add
mov
xchg
cmpsb
push
pop
add
inc
bound
fwait
cmp
jne
mov
aam
mov
inc
push
pop
inc
inc
stos
mov
lock
into
cld
pop
jne
sahf
push
orl
jmp
sub
pusha
fiadds
shlb
and
loop
pop
imul
jnp
mov
in
jg
mov
mov
mov
jle
std
cmp
fildl
ret
push
pop
and
mov
adc
mov
push
in
pop
pop
movb
jae
enter
inc
inc
xchg
movsl
push
fldenv
jl
push
xchg
cmpsb
sarb
fcomps
xor
inc
jbe
jae
cmc
mov
mov
mov
stc
aaa
and
mov
popf
add
shll
push
stc
jbe
popf
lods
sbb
and
test
test
movsb
mov
sub
pusha
sbb
popa
mov
out
pop
mov
shrb
hlt
sbb
jmp
std
mov
sahf
movups
out
in
add
lods
mov
fisubrl
xchg
xor
mov
mov
mov
out
imulb
in
jge
or
pusha
ss
push
in
sub
fidivl
pop
imul
pop
xor
sub
jecxz
inc
scas
loopne
xor
and
mov
popa
es
rorb
pop
sbb
mov
sarb
mov
les
loopne
fcmove
test
sbb
mov
push
loope
mov
insb
shlb
push
pop
out
fdivrl
mov
cmpsb
fldt
cmp
test
mov
out
xchg
movsl
ss
jae
nop
mov
lcall
add
sub
dec
push
jmp
add
adc
popa
add
and
mov
mov
shrl
dec
sbb
call
mov
ficoms
jle
jae,pt
jne
sub
test
xchg
jno
cmc
xor
ds
lods
lock
and
outsl
fimuls
stos
dec
loope
scas
mov
dec
xchg
in
pop
inc
fwait
pop
rolb
xchg
sti
mov
dec
stc
mov
xlat
sbb
cwtl
dec
dec
xor
dec
mov
enter
mov
bound
mov
gs
xchg
movsl
mov
inc
sub
sbb
jo
stos
jg
movsl
lret
push
jae
clc
push
cs
arpl
gs
loop
xchg
and
jp
mov
ljmp
xchg
fsub
inc
cs
rcll
jo
dec
popa
inc
out
sub
mov
fidivrl
sub
sub
roll
push
scas
jge
dec
mov
cltd
outsb
or
bound
pop
pop
push
pop
adc
xor
imul
leave
imul
aaa
sub
or
add
pop
xor
pop
roll
xor
iret
sbb
pop
inc
and
adc
inc
jge
addl
je
lahf
cmp
les
das
test
shl
lods
scas
mov
lods
mov
shll
push
popl
pop
rorl
jle
je
int
movb
cmc
call
dec
fs
arpl
repz
mov
inc
es
sbb
sub
add
cmpsb
test
out
jle
mov
mov
adc
pop
push
int
sbb
mov
scas
inc
repz
mov
add
pop
sbb
jg
lahf
push
mov
mov
adc
jo
pop
xchg
lds
and
fdivl
clc
addb
fadds
imul
mov
cltd
out
cmp
movsb
fsubrs
in
test
in
adc
pop
out
ret
pushf
add
xor
lcall
shll
mov
mov
mov
xor
push
mov
xchg
mov
inc
mov
push
dec
mov
repnz
mov
lods
loope
jecxz
int3
push
outsb
stos
out
test
adc
fsubrl
sti
dec
movsb
rcr
aas
push
jmp
lds
jo
cmp
push
jle
stos
mov
jbe
sahf
pop
std
mov
jmp
xchg
dec
inc
repz
xchg
aas
xor
mov
jmp
dec
es
fwait
int
fistl
push
movq
push
mov
nop
sahf
cmpsl
sbb
push
mov
xor
or
bound
ja
jb
test
jno
mov
out
jbe
xor
cmp
pushf
cmpsb
push
loope
xchg
int3
adc
les
xchg
ljmp
mov
call
xor
lret
mov
bound
cmp
dec
jnp
aad
fldl
xor
lret
arpl
mov
in
adc
push
nop
jmp
jp
mov
mov
aam
xlat
add
movsl
sub
sbb
outsl
lahf
fstpt
gs
sbb
cmp
inc
cwtl
sbb
or
mov
mov
lcall
mov
push
aam
add
popf
dec
jbe
cmpl
and
mov
mov
cmp
icebp
fisubs
aam
iret
adc
loopne
xor
xor
xor
fisttpl
xchg
fidivl
push
inc
jae
pop
push
scas
sahf
adc
icebp
fildl
or
lcall
das
jge
les
cmp
mov
aaa
icebp
lock
xchg
xchg
popa
fbstp
mov
push
fnstcw
lods
sub
insl
leave
lcall
push
andb
push
pop
adc
mov
clc
mov
or
sbb
xor
xor
mov
sub
pop
xlat
ljmp
cwtl
cmpsl
cmp
mov
mov
mov
mov
test
sub
movsb
and
or
cmpsb
xchg
sub
mov
fisttpl
add
mov
cmp
jmp
adc
aam
js
add
in
xor
or
inc
sub
cmp
xor
jg
add
xor
int
aam
inc
outsb
mov
lahf
pop
sub
es
jno
jnp
xor
add
repz
add
jecxz
dec
enter
out
add
mov
add
int3
pop
or
mov
fldenv
inc
sbb
ret
rcrb
inc
es
jmp
scas
int3
cld
repz
inc
sub
mov
dec
into
push
test
adc
shrb
sub
iret
push
pop
aam
jl
jl
fcmovnu
add
sub
shrb
cli
sub
jmp
bound
sbb
add
dec
mov
xchg
stos
js
xor
lret
pop
loope
aas
mov
lahf
mov
cmpsb
push
mov
in
lds
call
lahf
pop
adc
push
mov
pusha
sbb
test
jg
popa
popa
jmp
xor
jae
dec
mov
scas
aad
rep
or
push
stc
aas
and
cmc
adc
repz
sub
adc
mov
sub
test
notb
mov
push
mov
cwtl
mov
inc
mov
mov
movsl
repnz
lea
call
jecxz
xchg
ret
aaa
sti
std
push
scas
pop
fidivrl
mov
aad
insl
mov
sti
xchg
lret
inc
movsl
adc
and
je
stos
lea
ljmp
mov
fisubs
insl
mov
insl
fs
lods
mov
outsb
in
insb
dec
mov
sub
shlb
cli
push
xor
jmp
test
adcl
cs
jne
or
mov
icebp
jp
daa
inc
xor
dec
clc
je
xor
enter
sub
xchg
xor
idiv
test
inc
cmp
or
sbbl
pop
inc
nop
and
jns
sbb
movsb
cmp
divb
in
sub
or
adc
test
addr16
pop
in
test
lcall
mov
iret
mov
or
std
mov
test
test
int3
or
jb
mov
and
inc
push
push
stos
mov
fstps
jle
inc
add
sahf
dec
icebp
pop
popf
push
push
sub
xor
mov
dec
into
jb
pop
mov
jno
repnz
mov
xchg
jecxz
mov
mov
loope
mov
xlat
xchg
cli
ljmp
cmp
sub
adc
inc
ficomps
mov
iret
adc
pop
ficoml
mov
insb
cmp
pop
outsl
in
pop
aaa
sahf
dec
daa
fs
jns
pop
loop
jb
dec
pop
mov
rcl
jmp
add
stos
and
add
xor
mov
pop
mov
cmp
xlat
jns
mov
xlat
into
inc
dec
jb
pop
push
das
xor
inc
out
add
adc
movsb
mov
push
sahf
scas
push
add
fs
test
icebp
add
mov
jno
mov
call
fists
cmpb
sbb
jns
mov
inc
push
aad
mov
insl
jl,pt
dec
inc
test
inc
push
lcall
pop
adc
mov
dec
lods
xchg
rclb
pop
sbb
cmpl
mov
mov
push
xchg
add
stc
push
ret
movsl
mov
jno
std
cmpl
sub
xor
sbb
xor
dec
mov
push
pusha
mov
or
movsb
inc
and
dec
ljmp
pop
shr
mov
xor
mov
mov
cmpsb
jns
decl
cmp
gs
insl
dec
out
movsl
fldenv
sbb
daa
les
xchg
jge
xchg
sbb
fistps
dec
iret
add
lock
jmp
rcl
sub
push
jl
ja
add
pop
fnstcw
cmp
dec
mov
mov
daa
test
inc
mov
aam
test
xor
aam
and
das
repz
push
fsubrl
fcmovne
out
test
and
loope
xchg
add
bound
or
pop
xlat
xchg
pop
adc
lds
fwait
ja
loopne
mov
jns
in
imul
and
adc
push
push
xchg
jl
push
sti
pop
sbb
xor
outsl
cmp
bound
xor
inc
inc
xor
jnp
fwait
inc
jle
and
mov
mov
test
add
aam
shr
aaa
enter
cmp
insl
mov
and
pop
adc
dec
clc
loope
add
cmp
push
xchg
mov
xorb
mov
push
jmp
inc
out
aad
je
out
inc
shrl
xchg
jge
cmpsl
adc
dec
jo
es
push
int3
and
push
movsl
mov
cmp
jb
loopne
mov
lahf
rorb
movsb
cmp
mov
das
je
andb
sub
imul
aaa
mov
notb
sbb
cmp
jl
popf
xor
inc
mov
lahf
je
stc
andl
sub
jo
jbe
stos
out
out
dec
int
mov
pusha
jbe
lods
xchg
rorb
jmp
cltd
mov
pop
aam
lret
xor
or
dec
cmp
push
and
xor
test
bts
in
lods
mov
es
andb
mov
inc
dec
lods
and
ja
dec
iret
aad
sub
out
stc
mov
ja
inc
mov
sbb
jp
jne
lds
rorb
mov
push
imul
dec
repz
filds
jo
add
or
pop
imul
xor
cs
in
jb
jl
mov
xchg
push
or
mov
push
or
mov
or
ret
test
sbbl
rclb
fstps
lret
jecxz
js
and
test
cli
jo
rorb
pop
dec
dec
sbb
cmpl
out
sbb
xor
sbb
in
pop
sub
movsb
mov
insb
add
je
addr16
mov
and
mov
mov
dec
outsl
cmc
in
inc
or
stos
and
and
cmp
clc
lret
filds
ds
test
fisubl
adc
test
mov
sti
push
aad
loop
cs
cs
sub
push
xchg
or
mov
aaa
or
iret
adc
jno
sub
lahf
loop
in
adc
cli
into
lock
mov
je
sbb
dec
js
sarb
into
mov
push
xchg
pop
or
sub
mov
lret
aam
dec
lret
xor
lds
pop
or
mov
jmp
cmp
cltd
mov
cli
mov
jecxz
add
or
adc
test
filds
ljmp
call
fmulp
ds
mov
jl
hlt
sub
xchg
es
jae
and
outsl
xor
or
jp
fdivrl
cli
and
jge
fs
popf
xchg
leave
cld
bound
scas
xchg
xor
test
adc
jle
xchg
lahf
or
inc
jns
pop
xlat
cmpsl
jb
orl
nop
roll
jbe
inc
dec
pop
insb
scas
mov
call
popa
std
adc
lret
or
jo
subb
mov
in
cmc
or
lahf
sub
xchg
adc
leave
inc
loopew
or
or
lea
in
mov
pop
jne
mov
rol
pop
jmp
pop
ret
xchg
loope
jg
and
outsb
fdivrs
mov
sbb
daa
xchg
imul
ljmp
cs
test
rcrb
cmp
and
inc
mov
outsl
sub
mov
in
xchg
imul
mov
push
push
mov
icebp
out
jns
repz
test
in
test
es
nop
testl
inc
xchg
nop
lret
fwait
add
add
arpl
or
mov
test
mov
lds
pop
pop
popf
in
es
int3
mov
dec
pop
lahf
mov
and
inc
xchg
mov
or
sarl
aas
rcrl
ja
fs
fndisi(8087
xor
andb
mov
sub
lcall
xlat
cmp
insl
fisttpll
add
push
call
push
sti
and
jnp
mov
imul
jne
mov
add
ret
rclb
test
mov
ret
bsf
xchg
pop
hlt
shlb
mov
sbb
lods
and
sti
cmpsl
aas
dec
jo
jo
sahf
xchg
pop
xchg
pop
xchg
mov
pop
mov
ficoms
lock
mov
in
inc
xor
jge
repz
mov
cmp
ror
stos
cmp
stos
cmpsl
ljmp
push
push
mov
sbb
or
sub
adc
xor
sub
jne
sbb
jb
mov
loopne
rcrl
rcrb
pop
sbb
pop
test
push
xchg
in
hlt
flds
mov
dec
gs
in
inc
cmp
xlat
push
out
mov
inc
cmp
cmp
inc
cmpsb
push
jo
push
gs
gs
sbb
test
insl
das
jmp
pop
stc
pusha
or
or
lods
pushf
in
pusha
inc
in
movsb
push
lret
outsl
int
lds
in
mov
daa
popf
ja
sbb
lahf
roll
xlat
push
outsl
adcl
dec
adc
dec
pop
out
push
int3
cmp
insl
pop
xchg
inc
mov
stos
jo
lret
sarl
es
add
js
add
mov
dec
add
movsl
adc
hlt
jns
jmp
ror
cmp
mov
out
xchg
movsb
pop
lods
testl
fyl2x
shll
xchg
mov
jmp
dec
fwait
mov
and
addr16
jge
pushf
jg
ficomps
jae
sub
out
notl
push
jmp
sti
jmp
xor
loope
mov
test
push
inc
nop
jno
sbb
mov
fisubrl
fs
add
scas
out
int3
dec
and
mov
and
jb
negl
push
inc
js
pop
push
dec
and
mov
dec
fdiv
sbb
mov
scas
xor
loope
sub
mov
in
mov
add
test
into
int
ffree
push
xchg
aaa
jne
adc
dec
lret
dec
imull
mov
mov
mov
or
cmp
inc
aas
sub
xchg
cmpsb
pop
adcl
push
sti
in
gs
shrd
daa
test
subl
pop
imul
outsl
lock
cmp
insb
rsqrtps
pop
add
outsl
lea
ds
repz
or
sub
loop
mov
push
inc
add
push
mov
pushl
jne
push
popa
or
and
idiv
scas
pop
add
jg
adc
dec
xchg
jmp
arpl
nop
jecxz
test
jnp
fisubrs
sub
jne
adc
xlat
xchg
es
add
xor
xlat
rcll
pop
push
call
cmp
mov
push
sub
mov
or
or
dec
pop
enter
in
mov
sub
mov
mov
hlt
in
or
movsb
movsl
arpl
mov
mov
imul
push
and
js
jae
int
outsb
cmpsb
and
es
gs
dec
fnstsw
push
cmp
dec
pushf
pop
in
cmp
repz
sub
repnz
add
push
and
loopne
loop
jae
stc
imul
jl
leave
xor
pop
neg
in
scas
inc
dec
mov
cmp
test
je
test
xchg
sub
aaa
pop
inc
roll
bound
out
push
xlat
repz
rolb
ds
jo
shlb
movsl
push
call
jne
jge
lock
sysexit
int3
pop
arpl
inc
xchg
mov
daa
adc
dec
int3
mov
fstpl
daa
ficoml
cmp
rorl
mov
sbb
sbbl
cmp
push
cwtl
lret
lret
adcl
inc
adc
xchg
icebp
sti
cli
test
cmpsl
ja
or
arpl
sub
std
mov
adc
xor
pusha
cli
rolb
push
cmp
and
lahf
sub
flds
dec
jmp
sahf
repz
out
loop
or
jbe
or
dec
lcall
clc
rcl
push
dec
sbbl
mov
and
inc
jge
dec
cwtl
fisubrs
and
fcomps
push
xor
pushf
push
mov
pop
push
outsb
sub
push
mov
ficompl
call
adc
lea
mov
mov
insb
cwtl
icebp
addr16
js
jp
mov
and
mov
cmp
rcrb
and
push
out
mov
push
imul
cmc
cli
add
outsb
mov
cli
add
ss
inc
ja
shrb
and
sbb
mov
test
outsl
add
test
test
jl
mov
nop
push
jp
xchg
jp
pop
fisubrl
fs
xchg
ja
pop
sub
inc
insl
sub
pop
andps
mov
testl
cmp
mov
xchg
cs
mov
push
imul
or
pusha
out
test
cmpl
pop
xchg
sbb
adc
mov
scas
or
dec
daa
mov
mov
add
sahf
cmpsl
ret
xlat
jle
or
mov
jmp
inc
push
xchg
jge
jmp
sbbl
fists
aas
out
test
mov
int
add
scas
cli
jecxz
in
dec
mov
xchg
jp
roll
inc
adc
aas
stc
lds
sub
data16
loope
xchg
xor
inc
lds
mov
dec
add
lods
or
inc
mov
imul
xor
sub
jmp
cmpb
in
push
inc
jp
jb
rcrl
xor
mov
xchg
shll
js
adc
ret
lahf
arpl
dec
pop
test
loopne
xchg
pop
add
mov
pop
fsubrl
add
mov
mov
std
insb
loop
jmp
dec
or
mov
push
cwtl
ds
xlat
add
jno
loopne
inc
xor
cld
fnstenv
mov
pop
pop
push
and
jo
aam
insl
cmp
rcl
xchg
mov
addb
or
call
push
or
xchg
jo
dec
cmp
popa
push
or
xor
std
fnstsw
cld
push
sub
dec
and
lret
xchg
aas
inc
cmc
and
xor
adc
lea
xchg
stc
dec
out
jnp
fdivrl
jns
maskmovq
testl
fildll
add
in
push
roll
inc
insb
mov
shrl
sbb
jo
mov
bound
push
lret
dec
sub
jp
data16
mov
xchg
adc
or
mov
sub
add
lock
iret
ss
daa
insb
pop
rcl
es
fwait
arpl
mov
pop
push
aaa
push
aaa
enter
cmpsl
jns
es
leave
jo
pop
in
negl
mov
lock
fs
jbe
hlt
or
fxam
mov
jbe
psubusb
cmp
cmpsb
testl
push
inc
inc
jmp
jo
ret
out
lret
xchg
dec
ss
and
mov
adc
jge
rol
subb
sbb
sbb
and
jecxz
cmc
rorb
test
push
mov
adc
popf
scas
pop
push
dec
sub
dec
int3
xchg
xlat
xlat
movsb
lock
mov
pop
xchg
dec
fs
jmp
rcl
and
ret
addr16
add
ds
mov
pop
xchg
fs
dec
mov
inc
dec
adc
add
jbe
addl
dec
dec
push
add
pop
aad
sarl
test
push
sub
sub
push
ja
push
test
loopne
dec
mov
jle
in
hlt
mov
shlb
ljmp
mov
sbb
or
out
or
sub
outsb
mov
mov
outsb
leave
repz
pop
inc
cmp
test
clc
jo
into
push
call
scas
and
daa
sbb
mov
mov
add
int
mov
push
mov
aaa
inc
mov
les
iret
imul
push
sbb
mov
int
mov
scas
movsb
push
fistpl
pop
fisubrs
cmpb
pop
push
loope
stc
cmp
mov
stos
sub
mov
or
push
movl
jle
fnstcw
sub
andb
pop
and
xor
push
push
sub
jns
aad
mov
xor
lock
push
sahf
mov
pop
inc
inc
in
clc
dec
test
sbbb
rep
jle
test
ret
loopne
insl
test
loop
in
sub
cli
fisubl
xor
cmp
shl
pop
scas
int
in
push
aas
push
lret
or
icebp
cmp
les
push
in
lds
push
repz
int
cmpl
aas
mov
das
negb
fiaddl
stos
into
xchg
cltd
sbb
addb
hlt
xchg
mov
adc
out
aam
adcl
push
lock
or
rcll
rolb
mov
sub
lods
mov
jmp
addr16
mov
sbbl
fdivrl
sub
jb
stc
bound
jne
xchg
ja
adc
lods
mov
out
in
push
adc
pop
movsb
dec
adc
outsl
push
in
fwait
xchg
pop
fildl
hlt
pop
add
xor
out
sub
pop
lock
sub
jmp
jbe
fs
jb
pop
cmpsl
add
jl
sarb
cmc
mov
mov
rcrl
mov
mov
clc
jbe
in
xor
or
icebp
sub
insb
cmp
out
add
lods
xchg
pop
int
jp
in
ljmp
idivl
xchg
ja
test
stos
shll
outsl
mov
sub
xor
pop
push
jns
cmp
jle
mov
outsb
mov
adc
inc
xor
mov
ret
xchg
test
jg
mov
adc
les
and
dec
xor
and
in
push
pop
repz
sbb
push
push
dec
rcll
jnp,pt
sub
add
pusha
pop
jg
and
pop
in
popa
aad
mov
jle
and
mov
stos
xor
push
lds
sbb
lods
xchg
stos
popa
loop
mov
pop
xchg
cli
out
clc
xor
push
test
test
or
xchg
enter
mov
movsb
jle
push
and
fnstsw
nop
addb
xor
rclb
add
sub
cmp
mov
xchg
xor
aam
shrl
lret
rorb
out
mov
clc
sub
sti
mov
fsub
out
xchg
pushf
test
dec
pop
rclb
jp
jbe
ss
xchg
and
fisttpl
inc
je
mov
popa
in
push
std
clc
sbb
mov
add
sahf
dec
push
in
ror
xor
aaa
dec
popf
test
js
push
movsb
mov
pop
in
xchg
je
lahf
pop
mov
shll
out
test
movsl
mov
mov
push
scas
dec
lahf
addr16
xor
stos
xor
ret
lods
fwait
out
adc
mov
sbb
popf
pop
iret
mov
push
in
inc
call
shl
inc
out
xchg
fs
jmp
jne
sub
sub
bound
xchg
or
mov
in
xor
insl
cld
pop
pushf
stos
mov
push
push
lcall
add
pushf
add
sbb
sub
in
and
mov
sbb
adc
std
inc
lret
loopne
fcomps
add
sbb
jecxz
xor
push
and
ret
ret
scas
sbb
cmpsl
jg
cli
push
inc
pop
dec
test
mov
dec
xlat
jge
sub
loope
push
jne
push
outsl
adc
fstpl
outsl
loop
rcrl
lea
sub
test
push
push
mov
andb
movsb
scas
scas
mov
xor
test
out
sbb
sti
in
mov
fcompl
push
jno
out
call
shll
lods
add
add
std
insb
orb
andb
je
xchg
mov
and
sti
and
jno
sbb
mov
ja
pop
jb
push
out
jno
mov
pop
aas
jno
inc
lods
insl
mov
pop
or
inc
cmp
icebp
int
out
xor
call
je
aam
es
rcrl
ret
push
inc
mov
cmp
fld
dec
xchg
adc
fsubl
mov
in
mov
xor
or
mov
mov
push
sbb
xchg
sbb
jl
push
xlat
push
jle
mov
int3
add
pop
icebp
lock
call
std
and
shlb
rclb
enter
inc
mov
pop
push
cmp
and
es
cmp
xor
icebp
mov
scas
scas
enter
insl
fisttpll
pop
loope
cltd
sti
ret
jge
pop
mov
nop
in
jl
xor
movsl
stc
popf
add
in
xchg
and
sub
xchg
arpl
cmp
cmp
or
cmp
mov
push
sbb
es
pop
test
addr16
lahf
jecxz
adc
mov
sahf
inc
or
rcrb
scas
xchg
mov
xor
mov
scas
sbb
gs
fsts
add
cmc
jle
lret
add
jle
sbb
out
std
mov
std
insl
mov
movsl
rorl
sbb
incl
add
or
ret
dec
push
insb
cmp
test
ss
repz
dec
sti
out
iret
push
mov
jb
call
nop
test
pop
and
mov
es
cmp
jecxz
in
adc
sub
inc
loop,pt
cwtl
pushf
mov
mov
mov
fs
mov
push
push
mov
sbb
imul
xchg
cmp
addl
mov
mov
lods
jmp
fisubs
int3
cltd
arpl
sbb
xor
stc
iret
popf
fsubs
inc
aas
mov
xor
repnz
out
xchg
mov
adc
mov
sbb
mov
sub
xchg
enter
sub
cmpsl
dec
sbb
push
xor
lret
sub
fisttps
jg
cmp
arpl
daa
mov
sub
push
gs
sub
out
and
fs
cmp
mov
lret
popf
mov
stc
sbb
dec
mov
sahf
mov
fwait
xchg
push
inc
fwait
pop
mov
sbbb
std
fsubs
cmp
mov
adc
fisttpll
pop
jb
hlt
mov
test
cmp
push
jne
pop
push
xchg
xlat
push
mov
add
test
ret
in
cmp
repnz
enter
jae
and
push
cmp
mov
bound
cltd
inc
adc
stos
int3
xchg
push
mov
mov
in
pushf
xchg
cmpsl
fwait
jb
fdivrp
int3
jle
outsl
adc
mov
test
gs
mov
mov
xlat
jo
mov
cli
jnp
pusha
push
decl
inc
js
bound
xchg
pop
xchg
lret
jg
xchg
pop
xor
and
xor
fs
xchg
or
loop
call
xchg
jmp
out
fwait
jle
add
lcall
mov
mov
cmp
mov
push
std
shlb
mov
in
jns,pt
stc
cltd
scas
inc
mov
inc
inc
rolb
fidivs
jg
adc
hlt
push
mov
adc
mov
adcb
xor
mov
cmp
push
lahf
scas
test
cmp
add
aam
push
mov
in
loop
push
movsb
or
lds
mov
mov
and
xor
out
out
pop
es
adc
dec
and
lret
lods
sub
sbb
pop
inc
cli
fstpl
in
xchg
mov
dec
ror
pop
xchg
sbb
lcall
push
in
jae
mov
arpl
adc
mov
negb
shll
cs
or
cmp
lcall
xchg
sti
mov
xor
mov
and
outsl
icebp
push
fiaddl
inc
pop
jle
mov
jmp
lret
popf
and
mov
or
xlat
ret
inc
sub
mov
or
push
stos
push
mov
testl
int3
mov
lds
sbb
pop
cmpsl
xor
je
xchg
rolb
testl
mov
aas
inc
lock
data16
mov
cmc
push
test
pop
fstpt
jbe
mov
push
dec
in
or
rorl
xlat
gs
aad
enter
pop
test
push
enter
mov
add
inc
pop
int3
push
test
cmp
push
xor
movsb
lds
xchg
cld
out
mov
outsb
jmp
iret
andl
lahf
pop
fchs
push
ljmp
lea
idivl
test
adc
lcall
loopne
mov
push
fwait
mov
gs
xchg
shll
mov
xor
push
jns
or
cmc
adc
popa
jg
xlat
lahf
inc
pop
push
insb
pop
mov
mov
repz
loopne
loope
out
xchg
push
jg
cmp
loopne
fldenv
xchg
add
stos
das
pop
into
sbb
adc
push
mov
in
ffree
xchg
sub
sub
popf
leave
dec
jge
fs
xchg
inc
xchg
int
lret
jecxz
out
fistpll
jno
add
mov
add
pop
cmpsb
pushf
das
pusha
add
jo
add
xor
sahf
push
pushf
je
cmp
push
add
mov
xor
xor
gs
mov
push
addr16
pop
push
mov
fnstenv
and
dec
sbb
xchg
ret
lea
push
fisttpl
cli
in
fdivl
inc
mov
jmp
jecxz
jae
push
jle
xchg
sub
repz
loop
jmp
push
or
out
mov
cmc
jecxz
je
lcall
xchg
cltd
jbe
call
push
mov
pop
sahf
addr16
test
ret
jb
mov
push
and
xorl
cmp
sti
outsl
lret
mov
rol
pop
fsubs
pop
push
icebp
and
mov
test
stc
jnp
lcall
inc
ret
stos
mov
jecxz
ds
xor
inc
push
test
xchg
inc
or
push
mov
jle
enter
in
cmp
inc
jno
jg
dec
out
mov
sbb
inc
sbbb
out
icebp
push
call
inc
movsl
data16
adc
fnstsw
inc
push
jns
das
sbb
leave
or
cmpsb
xor
pop
and
xor
cmp
sub
test
xchg
pop
fcmove
popf
pop
mov
aad
enter
push
aaa
jno
add
fdivs
bound
test
xor
push
stos
sahf
pop
jl
sub
xor
rcrl
fnstenv
sbb
adc
add
rorl
jbe
pop
fisttpll
xchg
adcb
pop
xor
mov
jns
in
testb
jb
sub
dec
inc
pop
xor
test
bound
fstpt
or
shrb
out
test
lret
ljmp
inc
call
mov
call
in
xor
xchg
nop
mov
mov
dec
subl
arpl
cmp
sub
and
andb
sbb
and
shr
cld
push
lret
push
mov
sbb
mov
or
loop
jge
cltd
mov
out
or
pop
mov
test
pop
addr16
ja
push
sub
mov
in
addr16
mov
ror
std
jmp
pop
leave
fstl
out
cmp
imul
testb
pusha
fucomi
jne
sub
mov
pop
in
jp
fcmovnu
fists
xor
cwtl
insb
jns
ljmp
mov
push
leave
push
mov
insl
cs
rcrb
jp
and
out
lret
push
rol
fs
push
mov
xlat
stos
call
iret
push
dec
xor
sarb
mov
jae
cmp
outsb
jbe
fistpll
in
push
das
push
cs
ret
int
shlb
test
addr16
or
inc
fwait
mov
jae
aad
adc
mov
xchg
mov
cwtl
adc
lret
aas
mov
cld
or
sbbl
ds
sub
mov
or
jg
jns
mov
sahf
add
frstor
je
call
dec
in
daa
pop
xchg
inc
ret
das
hlt
insl
inc
popl
mov
test
pop
or
out
lea
imul
fstpt
push
dec
xor
xchg
daa
mov
loopne,pn
hlt
inc
data16
push
mov
push
or
sarb
insb
les
sahf
jb
adc
adc
adc
add
or
pop
mov
dec
insb
add
mov
insb
inc
movsl
sub
nop
pop
rcl
lods
cmp
push
adc
sub
push
mulb
jge
inc
testb
fists
dec
cmc
pop
je
jmp
mov
sbb
jno
ds
cmpsb
imulb
mov
aam
add
pop
mov
outsb
push
fsub
js
add
lcall
cmp
roll
les
test
mov
aam
loop
xor
orps
mov
xor
cmpsl
jb
mov
lock
jle
and
jge
inc
jmp
cmp
pop
sti
jmp
cltd
or
rcrl
pop
or
cmp
dec
inc
add
imul
push
push
mov
sahf
xor
iret
xchg
dec
jmp
fwait
out
xchg
imul
imul
mov
mov
xchg
mov
int3
add
xchg
add
mov
jecxz
repnz
push
push
mov
jmp
mov
push
subb
aad
sub
sbb
xlat
jno
xchg
dec
repnz
or
imul
outsl
in
push
adc
addl
stos
imul
loope
out
cmpsb
sbb
cmp
mov
test
mov
lahf
scas
in
xchg
xor
ja
or
popf
adc
fnstsw
das
aam
push
dec
sub
popf
push
mov
adc
push
scas
outsl
icebp
mov
subl
icebp
jle
sub
in
jb
cld
stos
inc
jl
jb
nop
jle
in
or
scas
lea
mov
mov
adc
in
mov
mov
push
cmp
enter
sub
inc
lret
and
lahf
pusha
cmp
int
inc
mulb
pop
and
ret
cli
dec
jns
xchg
sahf
and
mov
test
clc
outsl
mov
std
sbb
or
iret
repnz
imul
add
enter
adc
xchg
xchg
pop
daa
lock
mov
cmp
stos
out
arpl
adcl
test
adcb
fistl
fstpl
adc
adc
jmp
dec
outsb
jo
jge
cli
pop
xchg
out
dec
push
aas
jnp
test
ds
cmc
push
cltd
test
mov
dec
pop
mov
scas
pushf
shrl
pop
stos
or
jns
sahf
cltd
sub
das
xchg
xchg
cmc
xor
mov
stos
and
lds
xchg
adc
push
and
stos
inc
mov
cmpsb
push
aad
sub
cmpsl
xchg
scas
lahf
mov
lret
sbb
cmp
nop
movsb
ss
push
mov
loop
mov
or
pop
xchg
popf
xchg
fisubl
xor
inc
addr16
inc
ss
sbb
sub
dec
cmp
mov
dec
roll
adc
inc
insb
stos
test
push
pusha
mov
or
or
sub
enter
cmpsb
adc
push
sbb
ss
stos
mov
xor
lds
mov
enter
dec
dec
jl
pop
test
loopne
inc
sub
ret
dec
fiadds
add
jmp
fsts
ljmp
lods
not
cld
add
leave
out
inc
push
push
xchg
jg
xchg
arpl
dec
int3
or
outsb
sbb
aaa
inc
movsl
test
fidivrl
and
mov
add
addr16
add
adc
adc
mov
fwait
mov
xor
inc
insb
insl
les
sahf
add
push
in
sbb
xlat
mov
loop
bound
add
and
jg
sub
push
test
xchg
sbb
daa
inc
dec
loop
data16
nopl
mov
adc
lds
pop
repz
xor
add
test
pusha
xor
or
fmulp
xor
jne
mov
xchg
sbb
and
cli
in
lods
or
popa
push
mov
clc
xor
xchg
lds
popf
pop
in
sub
fidivl
mov
push
outsb
nop
add
xor
fidivrl
shr
mov
cli
push
mov
inc
pop
mov
rolb
cmp
clc
pop
cmp
or
fsubrp
sahf
push
dec
in
and
add
adc
inc
push
or
lret
scas
jnp
jne
repnz
xor
fwait
clc
jecxz
in
adc
repnz
outsl
arpl
ret
sub
into
cmp
push
lods
fldl
xlat
jae
cmp
sarb
arpl
aas
data16
aaa
xchg
pop
or
aam
cmpsb
cmp
f2xm1
dec
dec
fimull
jne
loopne
sbb
lods
arpl
or
pop
jno
pop
jecxz
mov
imulb
icebp
in
lods
mov
jb
mov
jge
mov
lahf
shrl
insb
cli
jo
adc
or
xchg
fldenv
mov
rcr
sbb
fistpll
lret
mov
xor
pop
popa
js
movsl
dec
cmp
xchg
stos
test
pop
in
mov
ret
fucompp
pop
push
lea
push
push
mov
mov
xchg
shlb
es
andl
test
jae
and
pop
push
int
rorl
test
add
xchg
xchg
mov
dec
inc
mov
insb
inc
dec
xchg
outsb
call
adc
adc
mov
insl
jge
jno
mov
or
ja
pop
insl
mov
lret
sbb
or
and
aas
in
ljmp
pop
lcall
sub
adc
cmp
sbb
mov
pop
popa
es
inc
in
pusha
sti
pop
out
cmpsb
loop
call
cltd
mov
push
dec
cmp
in
scas
dec
aas
xor
shrb
out
or
add
xchg
insl
enter
cmpsl
aaa
push
sbb
icebp
jne
xor
cmpsb
xchg
mov
lods
dec
add
aas
inc
push
or
or
movsl
imulb
cmp
and
and
ret
mov
ljmp
xor
out
insb
jb
inc
xchg
notb
aam
pop
repz
data16
mov
cmp
jae
push
pop
dec
xchg
call
jnp
in
or
je
in
stc
inc
inc
popf
cmp
sbb
loop
scas
and
push
lret
mov
mov
in
push
mov
inc
jne
aad
roll
xchg
iret
in
pop
mov
arpl
in
test
jno
sbb
and
mov
and
sub
xchg
test
roll
cmp
aas
mov
dec
inc
and
cmp
shrl
add
lahf
xchg
pusha
sbb
jg
outsb
sbb
mov
dec
clc
aad
rol
bnd
and
push
adc
testl
xchg
popl
ds
les
mov
adc
dec
sbb
ret
imulb
lds
loopne
sub
xchg
sti
pushl
ja
lds
ljmp
mov
aad
sub
push
sub
dec
ret
jmp
cmc
mov
add
jle
in
xchg
adc
cmpsl
sahf
add
xlat
enter
clc
ds
adc
lea
cltd
int
dec
xlat
cld
fsts
sub
ret
mov
inc
cs
pop
add
mov
jecxz
pop
mov
imul
xor
inc
xor
sbb
clc
insb
pop
mov
jp
pusha
jmp
mov
xor
xchg
xor
push
jmp
xor
push
adc
testl
push
mov
add
mull
shr
adcb
cmp
clc
and
mov
sarb
ffree
ret
inc
inc
frstor
cmp
jno
mov
mov
or
ljmp
jno
pop
adc
hlt
mov
js
sbb
out
mov
fstpt
in
cli
jl
lds
cli
and
push
cmpsb
push
jmp
pop
int
xchg
decb
mov
shlb
ret
inc
or
shl
mov
shrl
ss
shr
xchg
pop
sub
sbb
ja
or
pop
and
icebp
imul
dec
jns
pop
sub
out
std
lret
jns
mov
sub
push
hlt
inc
mov
or
pusha
xchg
add
xor
arpl
ljmp
push
mov
jnp
jo
sahf
mov
ds
lock
repnz
and
mov
sbb
sub
sbb
cli
jg
cmpsb
and
mov
repnz
mov
cli
pop
and
dec
repnz
inc
test
mov
inc
int3
stos
loopne
dec
pop
pop
jle
fisttps
pop
dec
les
sahf
jns
cmp
imulw
loope
idiv
jae
daa
loopne
mov
jne
mov
ficoms
sbb
xor
fcmovb
aaa
adcl
push
or
xlat
dec
ret
sub
add
adc
mov
sub
or
pop
mov
adc
fwait
mov
pop
add
mov
adc
cmpl
and
xor
sahf
js
iret
push
loopne
add
jg
out
orl
add
inc
xor
cmpsl
add
hlt
cmp
je
stos
movsb
push
jne
int
pop
rorb
add
cmpsb
fadd
lahf
scas
adc
push
cli
sbb
adc
incl
aam
stos
pop
fstpl
adc
lock
stos
into
pop
sbb
aaa
leave
mov
cmpb
mull
loopne
jnp
pop
sub
outsl
ret
push
dec
sub
add
std
xchg
xchg
cmpb
sub
mov
ret
out
stos
repnz
repz
cs
mov
inc
xor
stos
out
inc
pop
dec
dec
xor
divl
cmpsb
mov
aas
call
in
imul
ljmp
lods
mov
mov
fcompl
mov
in
in
jb
cmp
jns
test
cld
or
mulb
lods
inc
add
orb
in
loop
dec
mov
push
inc
dec
mov
mull
or
mov
jl
fnsave
sbb
test
out
xor
xchg
jmp
shlb
jmp
sub
add
pop
aaa
jbe
shll
cmp
ja
pop
jge
pushf
xchg
ljmp
ds
inc
xor
test
stos
test
dec
cwtl
cmpsb
sub
cmp
jno
int3
out
mov
clc
daa
jae
mov
shl
xchg
cmp
sbb
mov
and
shlb
push
cwtl
inc
or
sbb
roll
js
push
xlat
inc
je
push
dec
dec
bound
xor
fnstenv
addl
loop
sbb
inc
cwtl
xchg
repz
in
add
test
mov
fidivrl
dec
push
test
das
dec
push
into
sti
fstl
jle
or
and
add
popa
subps
push
stos
shll
das
shrb
mov
dec
loop
gs
cmpsl
sub
aaa
add
cld
pop
out
inc
push
cltd
out
or
jecxz
aad
jae
jecxz
fs
stos
mov
jecxz
jno
aaa
shl
xchg
adc
nop
jnp
mov
imul
push
xor
xor
incb
test
inc
dec
cmpsb
bound
xchg
xor
dec
repz
adc
test
roll
sub
fs
ljmp
test
daa
lcall
jecxz
pusha
inc
ret
out
aaa
jle
pop
scas
sbb
sub
xchg
jne
mov
cmp
sbb
ret
push
add
rcr
out
cmp
add
mov
inc
dec
cli
pop
push
jne
and
push
dec
adc
sub
mov
test
addl
push
or
imulb
lea
mov
ret
adc
mov
in
mov
or
jnp
lock
sub
xchg
lock
std
rorb
adc
or
xchg
add
fsts
gs
fstl
push
and
mov
cmp
hlt
pop
pop
xor
inc
mov
addr16
insb
xchg
iret
xchg
sub
sub
dec
cmp
arpl
mov
ret
pop
ljmp
out
mov
pop
xchg
dec
and
dec
mov
pop
mov
out
add
mov
jne
mov
enter
mov
cli
jl
iret
dec
pop
inc
mov
jle
call
pop
aas
ret
inc
mov
sub
and
mov
mov
hlt
outsl
mov
clc
dec
mov
imul
mov
add
inc
aam
and
sbb
icebp
sti
out
push
fwait
mov
int
fwait
icebp
mov
fildll
sbb
jle
shll
cmpsl
testb
stos
pop
push
cmc
std
and
pop
rolb
mov
cmpsb
movsl
sbb
push
test
xor
cmp
sub
and
repz
mov
mov
rcr
dec
js
cwtl
inc
cmc
aad
sbb
or
out
jl
rcl
cs
mov
push
insl
cli
push
add
daa
cmp
sti
data16
loopne
sbb
imul
xchg
sub
pop
ljmp
icebp
popf
cmc
lahf
test
lods
pop
xchg
and
mov
gs
cmp
mov
out
lret
icebp
fisubrs
mov
xchg
test
aaa
add
fwait
mov
mov
iret
fstps
jb
repnz
pop
test
push
popa
inc
xor
xchg
faddp
aaa
lods
xchg
jbe
xor
arpl
adc
pop
push
xchg
scas
stos
ficompl
xor
jb
int
pop
ud2
negl
sbb
or
xchg
pop
mov
mov
es
or
dec
out
mov
xchg
pop
fs
outsl
lea
ljmp
clc
xchg
mov
xlat
std
pop
scas
fwait
xlat
pop
aam
xchg
adc
inc
adc
loop
dec
iret
and
add
mov
add
push
int
or
in
scas
cmp
lea
lret
pop
adc
in
lret
sbb
idivb
jne
fimull
push
push
mov
test
jnp
hlt
adc
mov
jge
out
cmpsl
loope
loopne
ror
test
jge
jno
insl
mov
xchg
sub
push
cmp
mov
pop
and
lcall
jns
fidivs
jecxz
fnstenv
push
mov
push
and
cs
pop
inc
lock
negl
add
lods
xor
ss
inc
pop
rcll
loop
mov
xchg
loopne
pop
pop
sarb
ljmp
aaa
inc
xchg
xor
sti
inc
repnz
shrl
mov
test
arpl
loopne
in
cmpsl
addl
fsubrs
or
mov
je
or
jp
test
ja
dec
data16
sbb
cmp
mov
pop
test
sbbb
cmc
inc
test
xchg
xlat
cmc
adc
cmpsl
movsb
inc
pop
pop
xor
jo
outsl
push
adc
jns
jp
sahf
scas
sub
test
jge
cmp
bound
sbb
cwtl
mov
les
aad
js
or
repz
ret
mov
cltd
pop
mov
movsl
push
dec
outsb
mov
mov
sbb
pop
jg
sbb
into
stc
ja
fsubl
cs
push
aam
sarb
mov
mov
sub
push
and
arpl
mov
mov
jno
gs
fildl
mov
lcall
lret
sbb
cs
or
movsl
xor
je
repz
aad
cmp
rcrl
clc
hlt
repz
adc
cmp
movsl
ret
lcall
movsl
jne
out
sti
cmp
mov
icebp
je
add
std
adc
add
adc
mov
jo
es
leave
add
lock
in
pop
icebp
push
jbe
sbb
pop
cmp
lret
mov
arpl
aam
inc
scas
imul
jg
push
dec
neg
bnd
std
sbb
test
mov
aam
lds
test
ljmp
pop
gs
adc
pop
fs
out
cmp
push
out
and
sbb
js
outsb
inc
sbb
xlat
xor
mov
loopne
test
mov
pop
mov
shlb
movsl
nop
jmp
adc
xchg
outsl
cmpb
aas
mov
cmp
or
inc
adc
xchg
pop
mov
lea
mov
rclb
jmp
arpl
mov
lea
stc
andl
movsb
bound
lds
jbe
insl
int
mov
in
iret
clc
sub
fucomi
aad
and
cwtl
and
enter
add
xor
sub
ds
int
sub
jmp
ljmp
loope
dec
testl
adc
je
sbb
adc
push
cmp
test
push
mov
inc
aad
sub
sarl
out
dec
inc
out
aam
push
cmp
pop
jp
popf
mov
in
jmp
dec
daa
loop
cmpsl
adc
sub
das
sti
xorps
jg
cld
jg
sbb
mov
pushf
mov
in
add
decb
cli
push
lcall
fstpt
insb
into
mov
add
add
loopne
subl
xor
sub
nop
xchg
push
sub
inc
cmp
fs
popf
jne
pop
js
xor
sub
xchg
xchg
leave
testb
pop
in
addr16
rorb
scas
mov
cltd
cmp
and
cmp
cmp
hlt
test
mov
push
jo
test
fisubs
inc
fucomip
jle
xor
mov
jp
dec
clc
repnz
popf
adc
dec
or
or
pop
dec
cmp
and
mov
and
lock
jne
rorb
fistpl
mov
xor
mov
jle
stc
or
mov
sbb
mov
mov
jmp
pop
out
add
xchg
sti
stos
in
xchg
ret
pop
in
sbb
jb
in
or
cli
xchg
cwtl
cmp
pop
aam
stc
int3
cmp
cmp
icebp
adc
dec
or
cmpsl
pop
dec
mov
dec
inc
lret
enter
xchg
xor
sub
movsb
and
pop
and
xchg
adcl
mov
loopne
ret
mov
sub
xchg
push
popa
clc
jno
or
xor
or
outsb
jno
rorl
call
xor
int
cmpsl
ret
movsb
in
mov
adc
mov
ret
mov
rorb
cmp
adc
jl
adc
js
cltd
push
mov
mov
jp
shr
pop
out
roll
inc
gs
push
adc
xchg
stc
and
rcrb
sbb
sbb
mov
sbb
aad
or
mov
mov
or
mov
out
aam
xchg
int
call
cwtl
inc
addr16
jae
fistpll
and
bound
sub
dec
imul
or
push
sahf
arpl
cmp
imul
push
xor
hlt
cmp
or
in
mov
fs
xchg
xchg
daa
xor
xor
and
js
testl
mov
push
cwtl
andb
push
ret
into
mov
in
ds
sbb
or
lret
pushf
mov
jnp
mov
lret
enter
rcrb
subl
test
cmp
lcall
lods
sbb
cmp
add
orb
out
and
xchg
out
test
and
and
rcrb
mov
aam
hlt
faddl
and
lcall
gs
pop
cs
lock
lock
push
mov
dec
aaa
xchg
add
int
addr16
aad
push
inc
outsl
mov
loope
and
insb
imul
js
push
mov
sar
lods
mov
and
les
and
pusha
imul
mov
scas
mov
sbb
push
fdivr
cmp
jbe
sbb
cld
sub
xchg
fidivs
fiadds
pushf
jge
or
rcl
arpl
in
mov
out
pop
outsb
or
xor
into
dec
mov
in
push
sbb
sbb
repz
mov
sub
cmp
dec
call
xchg
ret
not
xchg
aam
push
jbe
fcomp
mov
bound
xchg
push
mov
sub
pop
pop
jl
mov
lock
add
xor
dec
sub
xor
fucomi
shll
fdivp
mov
outsb
jne
pushf
sbb
xor
and
mov
stc
dec
push
mov
testl
add
insb
dec
xor
in
mov
ja
push
icebp
popa
decb
or
mov
push
out
sub
clc
push
push
xlat
mov
sbb
pop
pop
rcll
fxch
jge
and
xchg
inc
imul
mov
mov
mov
arpl
aam
fsts
jecxz
mov
fldt
pop
or
cmc
js
mov
addr16
stos
mov
add
or
adc
insb
ds
jo
sub
mov
push
mov
push
stos
lea
je
adc
xchg
dec
nop
adc
push
cwtl
mov
and
dec
or
dec
pop
inc
out
pop
cmp
mov
mov
inc
imul
push
sub
lahf
pop
pushf
int3
push
lods
leave
das
jg
call
sbb
paddq
test
push
mov
fsubrl
lahf
or
add
mov
cwtl
cmp
dec
or
mov
jns
pop
in
and
fsubrs
out
enter
jne
mov
or
cmp
addb
test
cltd
out
dec
push
pop
sub
add
mov
push
imul
loope
sbb
jg
lea
mov
adc
es
mov
into
jno
jo
mov
push
mov
stos
stos
mov
leave
inc
movsl
aaa
js
test
mov
cli
xor
mov
mov
mov
inc
mov
out
sub
testl
inc
iret
mov
mov
pop
sbb
mov
jmp
es
sub
shll
into
stc
cli
push
mov
not
add
int
daa
xchg
outsl
fs
popa
dec
cmpsl
fwait
int
mov
enter
lds
pusha
adc
pop
cmpsb
push
into
mov
mov
pop
mov
pusha
mov
xchg
jge
mov
sub
lcall
into
sti
jb
fwait
cmpsl
fwait
clc
insl
stc
cs
cmp
pop
mov
push
repnz
cmpsl
pop
in
xor
sub
orb
lds
mov
sub
jnp
pop
push
aaa
sahf
cmpl
enter
and
and
pushf
sbb
jl
lret
test
pop
jp
loop
push
lahf
test
dec
stos
loop
and
fiaddl
cli
ja
and
cmp
adc
mov
xchg
adc
mov
mov
int
push
cmp
adc
mov
stos
sbb
jecxz,pn
mov
and
xlat
notl
je
out
es
pop
fbstp
and
or
pop
or
jns
inc
sbb
push
out
bound
popf
enter
dec
sahf
mov
popf
sbb
xchg
repz
dec
in
sub
mov
adc
cmpsl
push
roll
loope
jbe
lahf
and
jne
mov
xchg
outsb
lret
popf
pop
pop
aaa
fcoml
dec
fistps
shrl
xchg
into
push
and
rcr
push
push
cli
mov
cwtl
out
dec
fisttpl
inc
push
aas
je
sarb
addl
fnstcw
mov
push
sub
xchg
mov
in
dec
adc
lods
or
inc
insb
or
push
icebp
xor
pusha
xor
ret
cmp
push
sti
fiadds
xchg
jno
in
cmp
add
lret
push
xchg
jbe
int3
repnz
adc
in
xchg
dec
inc
das
xchg
dec
push
movsl
dec
pop
push
jecxz
jne
mov
push
in
lock
xchg
xor
rcrl
sbb
adc
pop
mov
shl
lcall
gs
xlat
xchg
lcall
jg
pop
inc
les
sub
mov
fldenv
cmpsl
test
mov
sbb
add
lods
xchg
int3
mov
sbbb
push
outsl
pop
and
sbb
xor
pop
mov
movl
shll
adc
xchg
into
sarl
scas
and
imul
dec
pop
pop
cmpsl
icebp
xchg
pop
js
mov
inc
out
divl
push
sub
jp
cld
insl
in
sti
sbb
jl
jb
cmp
rorb
sub
xor
pushf
adc
leave
and
insb
jle,pn
sub
jg
loope
out
jecxz
test
sbbb
ret
daa
mov
pop
jg
mov
mov
push
mov
dec
inc
scas
mov
sbb
fcoml
in
add
iret
push
arpl
call
js
pop
hlt
mov
xor
test
or
mov
cmpsl
clc
add
addr16
out
pop
lcall
aas
mov
int3
mov
adc
imul
dec
lock
stos
cmp
cld
fsubrp
xchg
xor
popf
icebp
dec
movsl
xor
push
xor
pop
movsl
out
mov
push
dec
push
add
add
repnz
xchg
cmpsl
pop
dec
pop
orb
pop
cmp
icebp
push
mov
outsb
lret
popf
sarb
sbb
or
pushf
and
popa
sub
or
cltd
cmp
push
daa
cmp
xchg
movsl
loope
stos
in
push
or
mov
in
rorl
add
xchg
mov
and
inc
jbe
in
out
and
push
lds
std
pop
dec
lds
dec
pop
push
lea
xchg
xchg
popf
xchg
imul
je
mov
imul
pop
ret
jge
data16
lods
mov
movsl
outsb
bound
lea
hlt
pop
and
push
pop
psrld
cmp
lods
les
push
pop
out
ds
or
sahf
push
mov
outsb
sub
push
xchg
or
jnp
dec
or
lahf
inc
add
and
scas
adc
sub
sbb
pop
out
cmp
cmpsl
fisttpll
daa
and
and
lret
shll
cmp
mov
push
pop
cmpb
ja
popa
and
mov
adc
mov
add
adc
das
into
stc
clc
repz
imul
sub
and
pop
inc
jae
mov
lret
inc
inc
arpl
lods
outsb
int3
mov
pusha
je
xchg
xor
lds
mov
push
xlat
push
push
or
xchg
push
mov
hlt
pop
xchg
leave
cmp
repz
mov
jo
enter
ljmp
sbb
sbbb
sbb
add
hlt
xor
pop
cltd
andl
add
cmp
or
push
cmpsl
lret
inc
add
inc
mov
fiaddl
jecxz
mov
js
shrl
fcmovbe
icebp
lods
cmp
addl
ds
addr16
cmp
faddp
gs
lcall
das
mov
pop
pop
add
fwait
and
pop
add
rol
jecxz
jmp
pop
loop
ljmp
add
mov
mov
cmp
jo
push
stos
jmp
pop
adc
jg
sub
inc
stos
jle
sbb
sub
jbe
mov
leave
lret
cmc
fists
and
test
jae
sbb
cmp
ret
lret
sub
dec
cmp
adc
xchg
jle
sbb
add
push
aaa
xchg
int3
mov
sti
lods
inc
mov
lods
fimuls
addr16
add
push
dec
cltd
test
loop
test
or
negb
sub
add
xorb
addb
test
cmp
lock
lds
test
repnz
test
icebp
ret
sbb
repnz
or
sub
mov
scas
jmp
mov
pop
scas
push
cmpb
nop
daa
pusha
mov
cmp
push
jecxz
pop
aad
push
loop
jno
push
lahf
mov
jne
sbb
test
xor
push
sub
sub
andl
pushf
daa
pop
inc
dec
int
mov
test
ss
lods
and
jg
xchg
mov
neg
repz
push
out
pusha
outsl
cltd
fldcw
cmp
cmp
pop
fiaddl
jb
mov
movsb
iret
mov
rolb
fstps
sub
cli
loope
mov
cmc
inc
ss
mov
xor
lcall
pushw
pushf
mov
lods
insl
ljmp
pusha
xlat
insb
sbbb
cmp
cmp
mul
pop
loop
fstpt
and
pop
adc
sub
inc
cli
out
dec
loop
rcrl
fucomp
movsl
push
xchg
or
icebp
xlat
pusha
sbb
jns
sub
iret
or
inc
aam
shlb
jle
mov
shrl
fcmovb
stos
outsb
or
mov
fadds
in
ffree
imul
or
push
loopne
dec
cmc
movsl
clc
mov
push
mov
sub
push
rcrb
iret
lahf
or
or
mov
into
fs
fwait
addr16
insl
test
add
sarl
jg
rcll
and
sbb
ret
pop
add
inc
adc
pushl
pop
fistpll
ja
fsubrs
jg
mov
jl
in
loopne
push
lret
out
fadds
cmp
jp
sbb
icebp
in
call
das
jnp
jae
and
mov
adc
sub
add
or
clc
out
cmp
mov
imul
sbb
jecxz
imul
stos
imul
pushf
cmp
stos
int
cli
lret
test
inc
movups
int3
not
pop
xchg
mov
sbb
xor
fistpll
xchg
xor
sbb
or
sub
mov
or
dec
fstl
dec
test
push
in
adc
and
pop
out
outsl
or
adc
les
das
dec
mov
xchg
jb
mov
iret
sbb
add
je
pop
dec
mov
lret
xchg
lret
les
ljmp
js
mov
scas
sbb
mov
scas
mov
bound
cmpsl
stc
xchg
xlat
mov
push
add
fsubs
and
gs
outsl
pushf
mov
add
mov
jle
lahf
sbb
fadds
outsl
insb
aas
shrl
mov
insl
in
add
enter
inc
imul
cld
lods
cmc
and
loope
mov
sbb
imul
loopne
mov
push
jp
cmp
lahf
out
sti
in
inc
cmpsl
mov
sub
fnstsw
repz
out
or
adc
shr
movsl
cmp
jl
test
imul
dec
decl
mov
xchg
popf
pop
movsl
repz
cwtl
popf
pop
add
and
imul
testl
clc
cmp
ret
cmp
mov
cmp
andl
jle
jge
pop
adc
lahf
jge
mov
stos
daa
xchg
pop
leave
push
inc
jmp
ret
lret
mov
decl
sbbb
rol
sub
shrl
pop
push
mov
adcb
rcrl
and
mov
mov
adcb
les
push
fsubs
rcrb
add
push
arpl
xchg
or
hlt
cmp
je
jmp
bound
inc
movsl
mov
in
push
adc
xchg
movsb
subl
jo
pop
insb
pop
and
xchg
xor
rolb
cmp
jns
or
xchg
scas
hlt
cltd
out
push
inc
jmp
mov
inc
rorb
lods
sbb
int
cmp
inc
sarl
jbe
xchg
sti
mov
push
into
push
push
ret
ss
outsb
adc
mov
sbb
negl
jne
cli
lret
push
cmpsb
push
lea
outsb
cmp
and
into
adc
dec
push
stos
sbb
mov
lods
gs
push
xchg
shll
and
icebp
jbe
adc
int3
lea
loop
push
fists
outsb
inc
iret
pop
aam
xchg
xchg
pop
pusha
enter
into
sub
or
inc
or
jns
push
mov
nop
jp
addr16
jae
div
loopne
xchg
out
sub
mov
mov
push
dec
repz
hlt
fistpl
test
push
fidivrl
sahf
sub
ds
addb
cs
xchg
mov
sti
jae
xor
adc
cmp
jg
xchg
int3
cmp
clc
xchg
pushf
dec
cmp
fxch
imul
movsl
dec
fstl
scas
dec
xchg
fbstp
jne
inc
cmp
xor
and
imul
ret
outsl
cld
sbb
add
push
ret
leave
dec
mov
dec
sub
xlat
shl
iret
mov
mov
popf
adc
outsb
mov
scas
ljmp
add
and
das
scas
pop
notl
adc
xchg
es
stc
into
dec
sbbb
mov
ljmp
ljmp
movsb
decl
sub
sbb
dec
out
or
dec
pop
rcrl
xor
sub
shl
clc
xchg
dec
jecxz
adc
mov
mov
shrl
int3
push
out
and
fimuls
stos
pop
cmp
bound
cmp
ret
adc
aas
mov
imull
xlat
shlb
popa
or
sbb
stos
fwait
push
into
dec
cmp
and
notb
call
and
xor
dec
lahf
and
add
pop
mov
hlt
mov
shll
int3
adc
pop
lock
fisubs
inc
push
cmpb
adc
scas
loopne
push
int3
cmp
inc
imul
push
inc
sub
ja
js
in
imul
and
cmp
dec
add
in
nop
aaa
add
pop
jbe
ljmp
and
and
mov
pop
ljmp
or
push
inc
jge
and
push
adc
mov
out
dec
jmp
inc
mov
add
fdivrs
pop
add
and
sub
sahf
push
jmp
cmp
loop
inc
push
pop
out
mov
mov
into
cmp
enter
jae
js
in
mov
ljmp
gs
scas
mov
mov
xor
lcall
outsb
jl
cwtl
out
sbb
rcr
push
aam
adc
flds
inc
lahf
jge
popl
nop
mov
sbb
and
inc
je
popf
push
arpl
mov
outsb
and
xor
jmp
arpl
xchg
std
push
or
scas
imul
jmp
das
aaa
sbb
movsb
adc
loopne
test
push
sub
sub
push
pop
or
jl
cmp
jmp
int3
bound
and
cmp
iret
rorl
lods
inc
sarl
sub
popf
xor
mov
push
or
flds
or
lret
inc
adcb
in
popf
das
xor
test
ds
nop
xor
dec
push
and
inc
pop
addb
or
scas
adc
push
sub
movsl
mov
jp
xor
or
mov
ret
pushf
jge
call
call
sbbb
scas
push
lcall
into
cmp
sub
mov
lods
push
ljmp
jnp
or
gs
mov
mov
sbb
adc
addb
cmp
mov
inc
cltd
add
xor
call
mov
repz
cmpb
jns
cwtl
jns
mov
xlat
mov
pop
rclb
aam
rclb
push
jle
dec
movsl
call
mov
lods
inc
insl
scas
scas
push
roll
sbb
stos
adc
xlat
xor
cmp
jne
sub
adc
cmp
popa
sub
loop
xor
inc
loopne
adc
sahf
pandn
loopne
fsubrp
jecxz
neg
xchg
mov
jle
or
movsb
xor
mov
xor
pop
or
repz
sub
repz
push
out
sbb
adc
mov
hlt
mov
fstps
test
and
cli
xchg
add
jb
jb
push
and
stos
add
mov
mov
inc
mov
push
js
enter
out
enter
mov
mov
test
mov
pop
sahf
das
mov
test
scas
pusha
out
push
pop
mov
fsubrl
js
add
dec
ret
inc
xor
jp
dec
ret
pop
inc
lret
iret
mov
push
or
js
and
sbb
adc
mov
mov
enter
dec
push
pop
lods
inc
adc
or
fmull
pushf
in
dec
aas
xorl
adc
dec
notl
outsb
jecxz,pt
push
mov
cmp
jb
aas
int3
aam
pop
lret
imul
push
inc
cmp
int
add
mov
pop
into
sbb
xchg
fildll
jns
push
inc
lcall
loope
nop
add
hlt
fildl
ljmp
dec
mov
sahf
inc
outsb
jmp
sbb
fnstenv
jns
adc
insl
sbb
nopl
sub
adc
adc
sub
cmpsb
dec
stc
inc
push
imul
outsl
sub
fildl
pop
push
jecxz
addr16
std
shlb
les
pop
inc
jmp
arpl
seta
shlb
pop
lret
nop
push
lods
mov
fsincos
lock
daa
pop
cmpsb
das
out
dec
xchg
int3
sbb
and
test
fdivrp
push
and
scas
cmpsb
int3
adc
hlt
mov
aam
ficomps
subl
decb
mov
test
ffreep
call
movb
and
sbb
lds
add
not
mov
add
test
lods
test
jecxz
xchg
mov
add
push
xchg
repnz
push
xorl
jge
and
mov
mov
test
call
push
adc
cmpsl
call
push
imul
mov
mov
or
test
mov
and
adc
lds
xchg
xlat
mov
roll
mov
cs
adc
jae
jae
gs
sub
push
inc
dec
jb
add
les
sti
pop
scas
cmp
pop
push
mov
addr16
pushf
cld
and
test
int
lret
shlb
sub
cmpsb
mov
sbb
test
arpl
xchg
mov
adc
jae
and
add
push
mov
popf
pop
add
cmp
ficomps
addr16
aas
inc
cwtl
cli
cmp
and
adc
ja
add
mov
and
cwtl
or
add
maskmovq
negl
sbb
lahf
push
add
push
sti
mov
xor
fildl
ja
push
lods
std
rorb
int
ss
and
out
daa
cmp
mov
enter
mov
xchg
lcall
inc
sti
adc
cltd
mov
jmp
cltd
aad
js
xor
and
or
pop
mov
es
add
imul
dec
adc
decb
mov
inc
sub
cmpsb
adcl
jae
les
insl
push
in
inc
sub
in
frstor
xchg
pop
aaa
popa
xor
cmp
outsb
es
dec
pop
and
inc
sbbb
cltd
loope
popf
movsl
inc
shrl
shlb
sbb
lea
rolb
pop
pop
pop
inc
sbb
outsl
pop
mov
push
and
rol
ret
xor
cs
test
rcrb
inc
fists
fcomp
cltd
insb
in
mov
popa
lcall
sub
daa
push
aam
mov
push
out
mov
fwait
popa
mulb
rcrb
jge
adc
push
pop
out
cmp
adc
add
lea
lret
add
stos
addr16
mov
out
xor
mov
sbb
movsl
shl
mov
les
mov
cmpsb
sbb
jmp
mov
jmp
sub
cmp
out
outsb
jl
loope
sbb
xchg
les
adc
sbb
int
xorb
test
hlt
fs
daa
dec
data16
cltd
movzbl
pop
out
scas
push
pop
push
scas
stos
inc
jb
and
clc
sbbl
mov
icebp
out
lahf
sahf
dec
inc
sbb
jnp
repnz
rcrb
mov
pop
dec
jae
add
jb
cmp
into
jecxz
fmul
mov
gs
nop
mov
lahf
mov
jecxz
add
sti
pop
aam
or
and
sub
jp
lods
inc
pop
sbb
popf
or
daa
lds
mov
cmc
xor
leave
pop
mov
mov
mov
hlt
push
mov
dec
lods
mov
mov
jle
pushf
lcall
mov
insb
fisttpl
xchg
xchg
fstps
jl
jnp
popa
subl
mov
sbb
outsl
mov
jle
fistps
jle
jns
lock
lret
push
je
pop
dec
jbe
cmc
xchg
sub
pop
shrl
mov
std
bound
stos
mov
jmp
call
insb
mov
cld
jmp
enter
nop
dec
jl
mov
pop
stos
iret
xor
mov
clc
ret
cmpsl
mov
jae
jno
and
xchg
lock
jae
sbb
pop
and
into
nop
jl
mov
ffree
lods
add
mov
jecxz
es
pop
pop
adc
fcmovnbe
je
mov
lcall
and
jae
pop
xor
aam
mov
fiadds
adcl
stc
rorb
inc
insb
repnz
dec
outsl
add
andl
inc
mov
fnstsw
xor
jge
dec
notb
mov
sbb
jb
inc
xchg
out
mov
test
jmp
mov
pop
lcall
mov
in
sbb
mov
aas
pop
sbb
pop
mov
imul
loopne
mov
lret
mov
dec
xchg
pusha
lds
sbb
push
addl
jnp
daa
sbb
push
daa
cmc
out
std
mov
cmp
cmp
aam
repz
loopne
int3
in
out
xor
pushf
pop
push
mov
icebp
lock
jmp
sbb
lcall
or
std
adc
mov
jbe
xor
nop
adc
fstpt
insb
pop
push
cmp
adc
repnz
mov
fsubs
test
lcall
push
out
mov
pop
das
jae
dec
xor
mov
outsl
lods
and
imul
mov
xchg
out
fs
andb
out
adc
mov
cld
daa
frstor
and
mov
lcall
loopne
aam
xchg
sbb
icebp
pop
pop
push
fcmovnb
jmp
and
imul
daa
sahf
ficoml
push
out
cmp
and
lock
fdivl
sub
xchg
test
push
jne
loopne
test
imul
fiaddl
testl
pop
sarl
lret
push
dec
negl
shrl
hlt
and
into
out
test
test
cwtl
jbe
cmp
rcrb
xchg
fnsave
pop
jb
cmpsb
sbb
movups
push
popf
jbe,pn
xorl
iret
je
jbe
outsl
fldcw
sahf
xor
or
ffree
rcrb
lds
mov
popa
loopne
cld
fwait
cld
into
ljmp
dec
fstps
test
or
inc
xchg
push
cs
xchg
inc
push
lock
push
jmp
mov
pop
shl
stc
push
inc
xor
push
jmp
insl
movsl
push
out
jnp
ror
imul
mov
sub
mov
lcall
mov
loopne
push
xor
loope
jl
dec
xchg
sbb
xlat
ror
adc
ret
into
cwtl
push
movsl
and
pop
sbb
jmp
push
adc
icebp
test
and
cwtl
xchg
cmp
xchg
push
mov
dec
cmp
xlat
xchg
xchg
mov
das
jge
push
mov
aaa
out
or
adc
jle
rcll
cmp
test
mov
xchg
xchg
push
cmpsl
js
pop
nop
sbb
xchg
cmp
inc
ja
lods
stc
enter
movsb
or
arpl
aad
xlat
nop
in
inc
insl
pop
pushf
mov
mov
insb
mov
lahf
jne
xchg
sbb
out
push
fisttpll
add
stos
out
hlt
mov
aaa
rorl
dec
xchg
mov
dec
in
lods
pop
dec
xchg
fidivl
pop
add
sbb
adc
and
outsl
mov
test
mov
notl
cwtl
push
in
jecxz
jne
in
sbb
shlb
mov
push
ror
xorb
adcl
js
sarl
push
adc
nop
mov
inc
sbb
sbb
xor
dec
xor
jge
push
and
int3
cmpsb
addr16
dec
mov
cmp
adc
or
into
scas
jno
inc
mov
add
imul
xchg
cs
adc
cmpb
out
sbb
sbb
xchg
jmp
mov
jl
or
jb
inc
ret
outsl
addl
xchg
push
sarl
jge
inc
add
adc
insl
push
cmp
ret
xchg
and
mov
lret
mov
xchg
adc
jbe
and
jae
or
cmp
les
mov
icebp
add
repz
add
adc
push
xchg
or
push
aas
add
dec
lods
sub
cs
mov
shrb
test
imul
fisubrl
int3
xorb
outsb
push
stos
mov
cmp
dec
adc
rclb
sub
jmp
mov
mov
imul
push
xlat
mov
shll
dec
push
and
call
outsl
jl
adc
mov
inc
mov
xchg
dec
xor
mov
pop
mov
daa
and
mov
or
and
jae
cmp
sahf
enter
xchg
pop
lods
adc
dec
addr16
test
adcl
add
pop
inc
sbb
add
inc
mov
mov
mov
mov
out
out
stos
push
inc
mov
or
inc
push
aam
or
cmp
add
mov
cmc
mov
xor
push
mov
push
aaa
adc
in
sahf
leave
stc
aaa
or
lahf
and
xor
fldcw
dec
lods
dec
xor
imul
data16
jle
movl
cmp
sbb
aad
sti
daa
mov
xchg
mov
inc
mov
sbb
sbb
xchg
cmp
xor
movsb
pop
sbb
mov
sub
pop
ret
daa
pop
cmpsl
lret
outsl
pop
sub
cwtl
adc
popf
mov
mov
bound
jl
mov
das
and
push
js
lds
mov
push
xlat
pop
in
jle
xchg
mov
sbb
push
xchg
dec
pop
ja
mov
dec
aam
mov
rcrb
repz
inc
icebp
add
icebp
sbb
push
dec
mov
ljmp
push
insl
xchg
adc
xchg
stc
sti
adc
hlt
sbb
jno
cmp
jb
dec
leave
adc
push
mov
push
loope
fdivr
je
and
add
insl
inc
in
mov
jae
adc
icebp
iret
icebp
sub
mov
in
cwtl
push
subb
repz
rcrb
inc
pushf
cld
mov
iret
xchg
popa
mov
decb
pop
dec
inc
add
loop
div
xchg
hlt
mov
out
inc
inc
mov
gs
jno
dec
jmp
push
jno
dec
fnsave
enter
xchg
adc
sarl
mov
dec
xor
sbb
adcl
stos
aam
and
frstor
rcll
lea
int3
and
mov
mov
sbb
iret
lea
data16
cmp
rorl
out
jae
cmpsb
mov
xor
push
nop
andb
fisttps
mov
dec
mov
xchg
dec
sub
leave
outsl
fdivrl
scas
jmp
mov
scas
insb
out
pop
dec
rcrb
mov
pop
or
pushf
rdpmc
pusha
test
mov
fcomps
jb
shl
pushf
cmpl
add
ret
aam
bound
mov
lods
mov
mov
push
cld
jno
lods
xchg
outsb
cmpsl
rcrb
pusha
ret
mov
sub
and
les
and
or
cli
or
ficoml
gs
cmp
and
loop
lods
insl
cltd
test
lret
add
push
mull
loopne
dec
xor
adc
gs
push
lea
sbb
mov
jnp
daa
lcall
sub
add
idivb
scas
jb
sub
mov
test
cmc
mov
jbe
dec
pusha
or
mov
inc
loope
fcmovu
mov
shlb
js
and
push
cmp
mov
clc
enter
iret
dec
mov
cmp
dec
mov
dec
mov
nop
inc
mov
or
pop
pop
jl
es
xchg
aad
gs
loop
iret
jg
es
cld
cltd
mov
sub
add
xlat
hlt
stc
or
jl
mov
dec
adc
ja
icebp
fldcw
scas
mov
movsb
arpl
test
jecxz
cltd
popf
sub
orb
dec
xor
dec
scas
or
icebp
loopne
aas
push
xor
enter
inc
lret
pop
mov
and
push
lret
push
in
mov
pop
cmc
dec
mov
ja
add
pop
stos
pop
js
iret
xchg
outsb
pushf
cmc
xor
mov
stos
push
mov
sbb
lahf
mov
icebp
pop
pop
xchg
jbe
int
dec
sub
ja
mov
pop
cmp
mov
dec
xor
enter
movsl
jnp
and
pushl
icebp
mov
cmpsb
roll
mov
mov
add
lock
fstpl
sbb
int3
in
push
outsl
in
push
cwtl
lcall
dec
or
test
and
pop
xchg
xor
mov
push
sbb
out
into
cmp
dec
int
jmp
fwait
jno
adc
ror
sub
jns
bound
pop
pop
jg
jl
lods
adc
enter
popf
into
dec
ret
hlt
dec
and
je
aam
xchg
pushf
mov
arpl
dec
outsb
cs
arpl
stc
pop
bnd
or
cwtl
jo
int3
add
cmp
fistps
sub
or
popa
mov
or
dec
mov
or
cld
adc
lret
sbb
jb
shlb
imul
add
ret
mov
mov
sahf
stos
xchg
mov
dec
lods
and
sub
and
add
jno
and
jmp
cld
imul
push
push
adc
mov
mov
flds
sbb
loop
sbb
add
gs
mov
jbe
push
jmp
aad
or
mov
push
pop
call
xlat
push
inc
inc
pop
xor
jp
sbb
movsb
adc
iret
inc
mov
mov
js
adc
sbb
orb
inc
add
and
lcall
mov
pop
mov
xchg
dec
xor
xchg
pop
call
push
cmp
jmp
cltd
out
add
xlat
xchg
pop
lods
loope
and
add
fidivrs
xchg
ret
add
push
mov
dec
mull
mov
inc
and
pusha
add
mov
cltd
bound
jp
stos
or
mov
pop
shlb
idivl
mov
negl
pop
dec
inc
jns
dec
xchg
add
jbe
pusha
mov
add
xor
or
addr16
mov
cmp
scas
sub
imul
mov
xor
cltd
mov
int3
out
mov
mov
mov
mov
cmpsl
jp
inc
mov
push
xor
sti
ss
inc
push
sub
test
or
add
fbstp
add
xor
add
cmp
and
xchg
je
fisubl
bound
cld
mov
mov
or
adc
mov
xchg
dec
jecxz
fbstp
out
or
mov
mov
xchg
mov
daa
out
popa
dec
es
outsl
scas
sbb
es
dec
or
nop
jae
stos
ret
push
jno
jg
add
lods
in
pop
pop
scas
push
cmc
fsubp
mov
adcl
outsl
cmpsb
sti
and
jo
dec
je
arpl
sub
jae
and
mov
filds
or
mov
dec
gs
pop
pop
sbb
pop
nop
xchg
lret
je
repnz
xchg
aaa
sbbl
adc
xor
loope
stc
mov
arpl
sbb
dec
es
jnp
scas
add
out
jne
sub
out
sarb
out
movsb
loop
clts
lret
xchg
push
fdivl
dec
out
stos
int
ret
cmp
icebp
pop
inc
add
mov
ret
xor
dec
sub
pop
adc
sub
out
mov
add
ljmp
xchg
aas
sbb
call
or
popa
ret
dec
repz
aad
push
and
mov
rcpps
cmp
adc
cmp
sarb
cmp
test
jae
add
cmp
or
push
adc
sub
push
aaa
lcall
std
add
pop
sbb
testl
dec
pop
stc
movsl
test
pop
inc
xor
cmpsl
jg
rcrl
mov
cli
and
fmuls
sbb
lea
int
push
xchg
insb
sbb
pop
popa
sub
das
insl
xor
loope
dec
push
lahf
push
inc
imul
clc
mov
ljmp
stc
arpl
xchg
cmp
or
push
test
jl
xchg
popa
repz
sub
push
das
iret
popf
inc
cmc
jecxz
cmp
call
cmp
cmp
outsl
adc
xchg
cmp
js
js
int3
adc
jg
mov
fsubr
jns
pop
movl
mov
outsl
mov
std
cmp
jo
stc
fnstsw
sti
pop
and
fadds
and
mov
enter
or
mov
out
enter
cmp
scas
jb
adc
cmpsb
sbb
sbb
insl
mov
sub
pop
lods
add
adc
fimuls
push
popf
iret
inc
inc
iret
xchg
fsubl
imul
das
dec
inc
shlb
cli
adc
in
push
mov
sbb
flds
pusha
enter
pop
inc
aam
dec
gs
movsb
cli
lock
stc
inc
int
imul
rep
and
and
cmpsl
xor
lods
mov
push
push
mov
cmp
loopne
ds
lods
lahf
mov
pop
adc
push
mov
and
hlt
and
xchg
sub
idivl
mov
je
xchg
cmp
jmp
mov
or
ret
hlt
xor
imul
and
dec
sbbb
sub
sbb
pop
stos
or
jno
mov
lret
sub
mov
fldcw
jl
add
mov
das
mov
lcall
jo
or
aam
add
or
mov
jne
lods
popa
dec
or
push
inc
in
push
addr16
loopne
int
data16
xchg
push
adc
mov
pop
adc
int
pmaxsw
adc
xchg
cmp
bound
jbe
addr16
in
push
int
dec
psubb
jo
mov
icebp
sbb
call
sti
push
into
notb
daa
mov
insl
push
gs
add
push
cli
popf
jp
pop
stc
jg
or
pop
call
fstps
push
mov
inc
mov
scas
mov
adc
clc
out
pop
mov
aam
je
xor
cltd
mov
ss
leave
in
push
xchg
out
xchg
lods
les
mov
mov
xchg
cltd
cmp
lcall
mov
fisubs
adc
dec
xchg
adcb
loope
inc
insl
loopne
sub
xor
lock
or
adc
mov
paddsw
in
add
pusha
sub
mov
pop
mov
addl
ret
sub
in
loopne
std
pop
cmp
adc
and
data16
loope
lcall
and
ds
icebp
pop
cwtl
mov
cmpb
ds
xchg
push
mov
jae
aad
sbb
enter
in
insl
pop
sub
cmc
mov
mov
fwait
mov
dec
or
clc
sub
repz
jp
xlat
mov
pushf
std
mov
scas
hlt
adc
adc
dec
xor
mov
jno
aad
xchg
mov
push
jnp
add
scas
sbb
ficoms
or
jnp
or
or
dec
mov
cmp
xchg
fnsave
fs
nop
gs
daa
in
or
je
mov
ret
mov
or
orb
and
out
xor
jns
test
jmp
aas
and
icebp
dec
fwait
sbb
mov
testl
jb
pop
cmpsl
mov
xchg
out
das
enter
jmp
mov
pop
leave
dec
test
fldenv
psubq
leave
std
fimuls
call
in
lea
or
jl
in
gs
test
scas
jecxz
mov
push
jmp
add
cli
inc
push
sub
jne
in
out
or
cmpsb
push
xchg
fs
xchg
dec
movsb
push
jbe
sarb
sub
xorb
jb
inc
lods
out
insl
jbe
mov
dec
insb
push
lds
sbb
jno
gs
adc
mov
mov
and
or
addr16
mov
cli
hlt
dec
dec
mov
cmp
sarl
fisttpl
jnp
into
jl
or
xchg
lcall
mov
push
addr16
pop
dec
bound
jbe
jns
sub
push
test
pop
adc
pusha
in
in
mov
test
imul
aaa
push
or
lock
fcoml
sbb
in
cld
jp
pushf
rclb
dec
pop
sub
inc
adc
shlb
rolb
or
xor
push
mov
and
sub
jle
insb
mov
push
mov
gs
push
cmp
arpl
dec
ja
clc
popf
xor
icebp
push
mov
lahf
dec
jle
or
xor
cmpsb
mov
mov
jge
sbb
pop
movsb
sbb
push
movsl
push
stos
imul
mov
lahf
cmp
push
mov
scas
push
pop
outsb
mov
sti
xchg
popa
push
sbb
shll
pop
push
add
in
push
iret
insb
xor
pop
inc
loop
jns
jmp
xchg
loope
adc
jmp
push
mov
or
cltd
outsb
imul
imul
fwait
jecxz
push
ljmp
leave
or
xor
dec
into
and
and
imul
orb
dec
sub
popa
rcrl
mov
rcll
push
sbb
push
xor
xchg
push
aad
je
lock
pop
pusha
push
jp
dec
jmp
sbb
inc
daa
xor
imul
cmpsb
mov
mov
fimuls
add
sub
movsb
sub
loop
jl
in
adc
notb
jle
arpl
mov
jge
outsb
ret
xor
sti
sbb
add
lods
jg,pn
xchg
jo
cli
filds
mov
mov
cli
in
call
iret
fstpt
mov
pop
sbb
push
in
sar
dec
nop
mov
test
imul
and
jno
test
test
jle
mov
inc
xchg
mov
iret
mov
lock
add
sbb
mov
negl
xlat
fildll
jne
push
pusha
mov
lea
insb
call
pop
scas
push
push
adc
sub
and
jbe
jecxz
xlat
aad
test
cmp
stos
mov
int3
popf
arpl
mov
push
into
jecxz
mov
inc
sub
ret
and
xor
stc
lods
movsb
lcall
push
idivl
sub
pop
addr16
outsl
das
jmp
add
adc
and
and
je
adc
push
cmp
mov
mov
mov
das
rcrl
popa
jnp
mov
adc
xlat
xor
pop
ds
inc
call
or
add
leave
aad
gs
dec
sub
jecxz
mov
sub
das
inc
push
jns
pop
inc
mov
stos
xchg
int
pop
and
adc
mov
out
jp
mov
stos
test
lahf
loope
mov
push
lea
mov
loope
mov
clc
push
repnz
lret
int3
adc
jle
add
test
or
ret
xchg
mov
cmp
cmpsl
mov
cli
bound
fst
clc
push
adc
inc
repnz
jecxz
filds
loope
cld
pop
repz
push
mov
aam
std
adc
mov
out
push
sub
inc
lock
cld
js
sbb
pop
adc
mov
xlat
movsl
adc
pop
in
jo
inc
fwait
out
adc
dec
sti
or
xor
arpl
xor
je
sub
dec
imul
push
int
lret
sbb
pop
test
or
int
mov
fnstcw
xchg
add
mov
ret
shlb
jo
sbb
add
scas
jl
push
mov
mov
pop
repnz
out
xchg
mov
sbb
incl
outsb
sub
mov
testb
scas
shl
out
rcll
fwait
pop
cwtl
mov
dec
inc
hlt
mov
test
adc
movsl
xor
les
rcrl
mov
fdivrl
and
push
in
aad
mov
lea
outsl
cmp
xor
or
call
sub
test
sub
fucom
or
fcompl
ss
mov
sbb
arpl
xor
and
and
aas
popa
gs
fildll
cmp
out
inc
lcall
fnstcw
ss
das
pop
test
push
cmp
fnstsw
bound
and
out
daa
xor
sbb
push
adc
notl
add
cmp
test
mul
adc
lods
add
mov
insb
cmpsl
lea
aas
out
test
inc
mov
xchg
mov
sub
push
push
xchg
cmp
outsl
repnz
jecxz
jne
cmpsb
sub
or
bound
jecxz
jecxz
out
popa
push
pop
jns
bound
cs
sbb
clc
cmpb
test
in
arpl
jns
gs
add
xor
push
test
sub
cmp
sub
jecxz
xor
jp
and
sbb
mov
xor
xchg
dec
mov
lahf
add
jl
je
or
mov
shrb
fistpll
cs
std
dec
xor
and
mov
push
mov
mov
stos
pop
decb
ror
cltd
sub
cmp
dec
inc
je
dec
push
stos
jb
inc
sbb
insb
sub
out
dec
aas
push
cli
jmp
testl
push
and
stos
ret
out
jne
pusha
mov
dec
mov
inc
test
je
outsl
ds
outsl
mov
inc
mov
xchg
inc
movb
rcll
dec
sub
ss
add
adc
xchg
xchg
push
mov
scas
ret
mov
mov
pop
lods
dec
jae
inc
dec
adc
ljmp
sbb
stc
mov
cmpsl
pop
xchg
iret
imul
add
cmc
cmpb
in
cld
fnstcw
stc
dec
mov
jle
addr16
jnp
mov
and
mov
lods
push
mov
cs
fldl
in
gs
push
imulb
inc
fmul
jo
dec
in
dec
mov
scas
xchg
pop
ss
outsl
push
jmp
stc
mov
sahf
and
adc
stos
ret
scas
lahf
pop
fldl2e
in
ds
push
or
cmp
int3
and
add
nop
mov
aas
inc
cld
sbb
sbb
add
ret
xor
out
jge
testb
cmp
cmpsl
mov
or
test
mov
xor
inc
imul
xchg
out
stos
cmpsl
insl
add
les
lock
ss
mov
addr16
jecxz
cmpsl
mov
mov
push
mov
jnp
mov
jmp
and
push
popa
sbb
and
xor
mov
adc
jmp
loop
cmp
bound
pop
int
xchg
arpl
out
or
mov
dec
stos
mov
iret
arpl
dec
ss
fisttps
cmp
push
dec
pop
cmp
fdivs
jae
mov
cmp
mov
jle
and
mov
and
repz
pop
sub
sbb
adc
adc
cmpsb
loop
mov
dec
inc
lcall
addr16
adc
sbb
nop
dec
clc
lret
movsb
push
leave
enter
pop
pushl
add
es
xchg
xor
cmp
jo
rorl
add
sti
div
leave
sbb
subb
xor
fidivrs
push
dec
cli
lock
or
in
fildll
jno
xchg
gs
out
xchg
stos
xchg
mov
dec
test
stos
or
xlat
jne
pop
sti
mov
je
fisubrl
jb
dec
add
lret
sbb
mov
xor
popa
mov
jl
aas
cld
lock
pop
inc
mov
push
xchg
mov
jge
or
push
add
mov
cmp
push
jno
adc
outsl
mov
cmc
cmpb
pop
int
sub
fbstp
enter
jns
sbb
pop
pop
cltd
call
enter
adc
dec
das
jae
into
aad
mov
pop
add
inc
negl
fcomip
bswap
mov
pop
test
loopne
xor
dec
mov
add
shl
cwtl
leave
std
xlat
lcall
and
and
push
dec
ret
addl
imul
inc
scas
cli
push
sub
loop
mov
jl
fidivl
cmpsb
int
jo
xor
adc
mov
lcall
adc
nop
adc
out
mov
ret
add
aad
cmp
and
iret
fisttpll
push
nop
mov
addr16
arpl
add
inc
cmp
dec
dec
sbb
or
jge
sub
jae
les
sbb
outsl
push
sub
jg
lahf
mov
lock
faddl
mov
mov
cmpsl
test
sbb
out
jo
push
jne
add
and
sbb
sub
sub
outsb
mov
push
xchg
sub
sub
mov
das
loop
ja
jns
in
ss
ret
jno
call
mov
adc
dec
sub
inc
sbb
mov
out
icebp
cmp
adc
lea
cli
xor
jnp
mov
xchg
jmp
das
sub
mov
cmpsb
sbb
loopne
mov
in
adc
daa
mov
cmc
dec
or
les
leave
adc
jne
mov
and
mov
repnz
and
loope
sub
pop
inc
cmp
cmpsl
es
mov
xor
xchg
mov
das
cmp
push
arpl
movb
sbb
jg
pop
xchg
jbe
and
dec
cld
mov
push
dec
sti
adc
popa
fldt
lahf
int3
jnp
cli
sahf
inc
push
adc
gs
adc
or
sbb
adc
xor
xchg
cmpsl
sub
push
xor
mov
jp
es
inc
gs
xor
xor
add
dec
dec
clc
add
mov
jl
call
pop
or
or
mov
call
push
loop
lahf
xor
lret
inc
dec
pop
mov
push
xchg
cmc
fnstsw
pop
mov
jo
xchg
scas
ljmp
test
loope
fs
test
push
inc
pop
mov
ret
mov
inc
jl
sar
adc
popa
adcb
rol
shrl
push
inc
jbe
fstps
and
leave
jecxz
fsts
mov
pop
lock
add
das
insl
cli
jns
jbe
or
in
mov
neg
sub
lahf
fwait
por
and
sbb
mov
or
stc
mov
dec
out
cmpl
xor
pop
mov
pushf
scas
mov
mov
jne
xchg
idivl
mov
adc
cmp
roll
pop
int
pop
cmp
push
testl
movsb
mov
sbb
dec
jnp
lock
sbb
in
dec
out
lds
jge
rolb
adc
xor
jbe
lods
jle
adc
xchg
filds
mov
je
mov
push
icebp
pushf
add
sub
jo
xlat
cmp
out
push
fisttps
je
cmp
ficoms
fistps
xchg
or
push
jecxz
sub
mov
jnp
mov
push
lret
push
lea
movsb
mov
pop
jge
aad
add
cwtl
xchg
fldcw
rcl
jno
push
sub
int3
insl
sub
mov
xchg
cld
xchg
cs
pushaw
test
sub
mov
mov
jl
ret
cmpsl
xchg
add
inc
add
les
lods
outsb
sbb
push
lock
and
das
aaa
es
out
sub
pop
xchg
xchg
inc
adc
jmp
add
push
pop
jae
mov
mov
inc
inc
loop
hlt
stos
pushf
popf
out
cmp
idivl
mov
push
in
add
mov
fdivrl
lea
cs
mov
daa
inc
xor
sbb
jecxz
clc
outsl
flds
nop
and
pop
sarl
mov
or
repz
jle
mov
mov
cmp
push
pop
sub
push
xchg
repnz
mov
pop
jecxz
mov
inc
or
sbb
mov
stc
shll
pop
pop
mov
pop
cld
dec
add
clc
popf
jp
inc
cmp
test
push
dec
push
pop
push
jb
xchg
into
sub
seta
out
push
out
xor
bnd
inc
xor
pop
sarl
inc
clc
push
je
mov
mov
inc
outsb
and
add
int3
mov
scas
add
in
push
dec
mov
fcmovnb
mov
dec
push
mov
test
movsl
and
pop
cld
push
mov
add
cmpsb
dec
in
lahf
mov
lahf
fldcw
push
adc
scas
add
or
sub
mov
jl
xor
push
fld
subl
lea
mov
and
and
pop
push
sub
rclb
stc
mov
enter
and
push
xor
daa
outsl
and
nop
sbb
pop
negb
out
push
std
lds
dec
add
out
adc
enter
shr
or
push
mov
sub
aas
pop
and
je
sub
xor
shlb
and
stos
sbb
push
in
mov
mov
dec
or
lcall
cmp
xchg
int
jbe
push
je
cmc
adc
fadds
rolb
mov
shrb
fmull
adcl
mov
lock
mov
and
ret
cmp
in
lods
outsl
push
sub
push
filds
inc
repz
jmp
cmp
imul
pop
loopne
push
ret
sub
kmovb
mov
and
dec
gs
bnd
pop
and
jne
in
xchg
inc
mov
negl
mov
inc
mull
nop
fidivrs
lods
mov
int
dec
push
cmpsl
sub
lcall
xor
inc
mov
pushf
add
dec
or
mov
stc
in
cmc
filds
inc
ds
mov
add
xor
ret
in
insl
in
les
sbb
cmp
cltd
pop
xchg
lock
jns
mov
mov
mov
adc
adc
pop
inc
mov
mov
popa
pop
in
mov
mov
push
rolb
and
loope
push
addr16
cmp
imul
sub
pop
jno
or
jnp
and
push
call
lods
popa
pop
lock
pop
daa
mov
inc
scas
daa
inc
add
adc
xchg
push
jecxz
in
sbbb
dec
leave
outsl
jle
xor
mov
jl
cmp
xor
rcll
mov
scas
das
fisttps
leave
jl
pushf
loop
mov
xchg
in
mov
lea
cltd
push
jg
in
aaa
adc
arpl
fistpll
outsl
fbstp
imul
stos
mov
dec
jecxz
push
jl
dec
add
mov
sbb
or
cltd
popa
bound
dec
fstp
jl
sarl
mov
dec
mov
std
xchg
push
and
mov
enter
jle
hlt
addl
div
pop
and
pop
xchg
or
cmc
jl
je
and
addb
out
imul
lahf
cmp
lock
dec
cmp
add
push
add
xor
adc
push
and
mov
push
jge
cmpb
mov
jmp
push
or
pushf
cmp
test
ficoms
mov
push
sti
fbld
shl
add
lea
jl
mov
and
xlat
imul
mov
aad
sbb
jbe
in
push
shrb
out
ret
ret
popa
mov
stos
sti
cmp
out
test
mov
fwait
mov
loopne
mov
xchg
leave
fs
movsl
cmpsb
bound
or
jae
add
dec
daa
or
push
xorb
imul
pop
sbb
test
pop
lahf
fwait
mov
dec
jae
mov
jle
in
jne
rcr
or
sub
cmc
test
push
push
pop
xchg
xchg
or
mov
pop
jmp
mov
in
jns
sbb
jmp
aad
mov
jns
pop
and
insb
push
addb
fcomps
repz
sub
in
pushf
mov
notl
stos
push
cli
jne
inc
push
pop
ficoml
testl
dec
inc
iret
inc
cmp
popf
push
fnstenv
add
mov
adc
mov
push
jle
out
and
in
dec
cmp
fwait
dec
das
int
jmp
sub
push
mov
repnz
mov
push
xchg
test
cli
outsl
dec
push
sbb
sub
sbb
cmp
in
pop
loop
lds
negb
jnp
lea
inc
js
fmuls
or
cli
sub
xor
pusha
cmp
xchg
das
cmp
xchg
jno
dec
inc
sub
sub
adc
shll
popa
pop
cmp
lods
aaa
scas
call
push
sbb
aad
fnsave
insl
lods
out
push
inc
xchg
cmp
imull
add
test
jmp
outsb
jle
inc
xor
stos
ret
jns
xchg
mov
adc
push
mov
add
cwtl
dec
cltd
sarb
fsubrs
and
int3
dec
js
jecxz
jmp
rcrb
and
sti
sub
fists
test
add
lcall
mov
sub
loopne
push
adc
shl
bound
das
add
xchg
dec
push
inc
stos
push
or
lret
movsb
pop
into
outsl
scas
call
dec
and
sbb
std
notl
sub
dec
mov
mov
mov
push
push
fdivl
and
push
scas
sbb
fwait
adc
pushf
mov
test
mov
insb
sub
jge
insb
shrb
mov
push
mov
sbb
es
xlat
inc
and
leave
mov
aad
and
mov
jns
mov
dec
mov
lcall
mov
sub
mov
mov
pop
outsl
out
sti
aaa
ror
xor
or
ds
es
pop
lea
cmp
movsl
fdivrs
ds
mov
scas
mov
xchg
jl
fidivrl
fisubrl
addr16
fwait
inc
sbb
int3
jge
iret
divb
sahf
cmpsl
adc
mov
mov
cvtpi2ps
push
lock
mov
mov
or
outsb
and
sbbb
inc
pop
push
jmp
xorl
sbb
lods
xchg
sub
mov
jmp
movsl
test
xchg
negb
addr16
stc
add
lock
mov
dec
in
sti
jge
xlat
xchg
or
dec
xchg
mov
xchg
cmc
daa
in
fcomp
out
fwait
mov
fmuls
sti
nopl
cld
lock
sahf
sub
ljmp
xchg
inc
fwait
mov
mov
inc
and
fwait
movsl
jmp
push
xlat
repnz
dec
inc
mov
xchg
inc
popf
jg
jle
jb
ds
pop
push
test
sbb
and
test
or
adc
testb
mov
cmp
push
movsl
sbb
ljmp
pop
jno
mov
mov
je
push
push
loope
loopne
cmp
imul
pop
cli
int3
mov
lds
mov
shlb
push
jae
js
adc
lcall
cmc
adc
fisubs
xchg
add
dec
jns
insl
dec
das
out
mov
jo
pop
imul
pop
psubw
mov
rorl
jns
inc
cld
shrl
jl
sarb
in
push
andb
mov
out
icebp
cmpsl
imul
enter
mov
or
push
into
std
cwtl
push
mov
les
pop
mov
mov
inc
pop
bnd
scas
dec
dec
das
sbb
jg
pop
mov
leave
xchg
mov
int3
sbb
cwtl
push
loopne
addr16
mov
sbb
movsb
inc
dec
int
pop
aas
and
push
xchg
cmpsb
adc
inc
test
cs
lahf
pop
cmp
pop
xchg
mov
push
mov
sub
lahf
jno
push
jge
xor
inc
lcall
xchg
inc
push
cli
or
pop
inc
xor
pop
mov
and
cmp
and
mov
in
pusha
rcrb
jo
cmpsl
xor
stos
xchg
mov
lret
push
adc
xor
cli
in
xor
loope
insl
int3
dec
roll
ds
dec
sbb
mov
dec
adc
movsb
sbb
xchg
ljmp
add
xchg
dec
pop
pop
insl
push
or
out
jp
adc
sbb
adc
bound
leave
dec
cltd
inc
stos
add
jmp
mov
xchg
int
mov
sbb
dec
push
cmp
mov
nop
dec
adc
and
mull
out
xchg
inc
xor
enter
pop
push
out
mov
push
and
inc
rclb
lahf
roll
dec
mov
ss
xchg
rcr
xchg
cmp
xchg
add
jb
jno
push
sbb
jmp
je
xchg
popf
jb
inc
or
inc
pop
push
out
xor
das
and
jbe
repz
dec
xchg
xor
nop
mov
xlat
xor
xchg
loopne
dec
adc
jmp
or
mov
jp
das
adc
jne
mov
adc
push
ss
sub
dec
pop
xchg
pop
ljmp
adc
xchg
or
je
xor
testl
mov
or
std
nop
lahf
inc
popf
lret
mov
dec
jl
mov
repz
ror
cmp
mov
repnz
shr
push
stos
xchg
xor
cwtl
adc
mov
outsl
cmc
mov
cld
mov
shl
cmp
int3
jp
or
mov
mov
popf
imul
push
xchg
daa
out
imul
dec
mov
cmc
jmp
lret
jb
jnp
mov
jae
pusha
iret
dec
cmp
hlt
lcall
rcl
flds
dec
int3
dec
enter
movsb
mov
sbb
mov
and
jmp
int3
push
ret
rorl
jl
addr16
in
fcoms
les
insl
in
dec
cmp
fdivs
push
lahf
sub
xor
mov
imul
add
push
mov
cmpsl
fcom
popf
xor
mov
cli
pushf
dec
pop
lahf
mov
push
dec
dec
lcall
add
push
fadds
aad
push
or
and
int3
cmp
xor
jne
out
std
jl
cmp
mov
mov
clc
xchg
in
xchg
lods
movsl
js
jae
jg
cmp
xchg
leave
xchg
dec
cmc
pushw
in
jno
add
cltd
aad
mov
cmp
inc
shl
sbb
dec
aad
inc
push
dec
sbb
test
xlat
jl
jbe
je
jecxz
pop
hlt
imul
mov
dec
ss
sbb
cmc
outsl
adc
mov
inc
pop
push
xor
nop
sarl
sub
aam
jle
mov
xchg
sub
and
push
movsb
ret
jne
xchg
inc
xor
in
and
clc
xor
lahf
cltd
and
mov
rol
dec
jl
loope
push
ror
movsl
lods
push
jl
xchg
fcompl
jbe
pop
xchg
scas
mov
push
xor
cmp
sbbb
int3
sbb
sub
mov
push
repnz
and
xchg
pop
rcl
movsb
pop
movsb
dec
dec
imul
bound
xor
xchg
nop
and
cmp
in
jae
inc
lahf
sub
adc
pop
mov
inc
mov
push
outsl
add
test
push
push
cmp
mov
mov
jnp
shl
and
sbb
push
negl
push
aad
pop
sbb
pop
xor
mov
cmc
rcrl
sub
mov
mov
adcb
pop
jge
mov
cmp
sbb
cli
ljmp
mov
cmc
or
pop
or
icebp
mov
repnz
mov
aaa
mov
scas
jp
fcmovnu
pop
mov
mov
rcll
mov
out
cltd
stos
daa
adc
mov
mov
std
lret
jg
push
sub
mov
push
out
test
and
lret
xor
adc
ret
leave
and
repz
pusha
sub
stos
jae
addr16
pop
push
out
sub
bnd
mov
pop
adc
sbb
add
sub
adc
adcl
ja
xor
mov
ss
sub
inc
test
repnz
rcl
xchg
push
jmp
out
cmp
mov
mov
out
xchg
add
lods
dec
jle
push
ds
mov
clc
dec
iret
mov
lret
and
nop
inc
dec
xchg
xchg
dec
pop
ljmp
push
push
jecxz
ja
clc
in
and
inc
push
jmp
push
sbb
add
mov
in
sahf
pop
xchg
int3
stos
jne
sub
pop
jo
mov
push
fsubrl
arpl
or
stc
inc
int
fisubrs
or
cmp
mov
testb
adc
sbb
or
cmpsl
cs
les
fdivrs
sub
sub
fstps
pop
dec
incb
inc
mov
imul
movsb
or
mov
dec
cmp
push
sub
cmpb
lods
ds
fmuls
mov
xchg
in
punpckhwd
mov
xchg
iret
mov
lods
dec
jbe
mov
popa
std
dec
push
stos
es
cmp
gs
sub
xor
scas
push
add
movsl
xchg
sub
push
mov
aam
adc
ret
popf
aaa
pop
dec
rcl
push
cwtl
insl
cmp
dec
jmp
inc
inc
inc
das
pop
inc
cmpsb
push
pop
je
testb
xor
fwait
mov
sub
scas
push
icebp
cmp
jo
cmpsb
repnz
addl
scas
xchg
mov
pop
in
mulb
cmp
bound
imul
fsubs
push
insb
adc
out
das
pop
push
lret
add
int
adc
fists
cmpl
fildl
in
stc
pop
pop
loop
mov
fwait
js
mov
out
mov
fistl
lods
lcall
inc
xchg
stos
fidivs
xchg
daa
adc
push
inc
ret
adc
and
jne
pop
xor
aaa
mov
sahf
push
shrl
xor
outsl
cmpsb
pop
xchg
clc
lret
js
or
or
pop
iret
test
ret
xor
push
movsl
adc
mov
orb
dec
mov
imul
cmp
sbb
mov
data16
add
pop
outsb
ficompl
push
cwtl
adc
mov
add
cltd
or
lods
mov
inc
xor
scas
cmc
cmp
aam
xchg
adc
ret
push
rcl
and
and
inc
popf
add
xor
loopne
mov
xor
movsb
adc
cs
adc
adc
aad
inc
add
jg
xchg
lcall
mov
or
popf
sbb
scas
subb
loope
aad
lods
hlt
mov
test
lcall
scas
loopne
mov
insl
adc
call
pop
clc
loope
xlat
sbb
cli
lods
int
inc
inc
push
test
ret
xor
nop
inc
dec
sbb
xor
addr16
xchg
aas
sbb
jb
gs
pop
cmp
mov
jnp
lcall
inc
sbb
inc
mov
fcomi
mov
or
jae
mov
daa
mov
mov
inc
pop
jmp
push
popf
jnp
lds
dec
aam
jb
push
scas
cmc
lret
sub
pop
insl
dec
lods
stc
cs
push
sbb
add
sbb
sub
cli
or
aam
stc
mov
or
or
xchg
lahf
pop
and
push
and
lahf
push
enter
xlat
ret
ss
out
inc
mov
jge
out
xor
cltd
push
cwtl
xchg
mov
mov
jp
add
lret
pushf
cmp
scas
and
rclb
inc
push
stos
in
ds
jmp
xchg
xor
mov
push
adc
cmp
out
add
cmp
test
cmp
mov
cld
cmpsl
cmpsb
testb
cmpsl
shll
jb
aas
rcrl
sarb
out
pop
jb
pop
pop
jp
cmpsb
hlt
cmpsb
mov
insl
aam
gs
xor
test
adc
cmp
add
xor
out
cmp
and
sarb
fadds
mov
fbstp
sbb
ret
ljmp
sub
movsl
pop
mov
call
aad
insb
mov
pop
inc
xchg
pop
inc
push
sub
fstpl
addr16
add
dec
mov
pop
inc
lret
adc
ret
mov
sti
test
scas
jmp
push
rcrb
loopne
adc
cmp
push
xor
test
mov
lods
fwait
imul
xcrypt-ofb
cmpsl
sub
arpl
int3
lea
add
rcl
lret
xchg
mov
filds
cs
jmp
xchg
fsubr
push
jl
push
adc
push
in
mulb
pop
mov
push
out
fs
and
out
ljmp
cld
mov
jg
repnz
and
mov
nop
dec
pop
ficomps
mov
push
mov
mov
push
xor
fstl
inc
xchg
push
mov
lock
std
mov
jns
enter
cmp
test
ss
mov
inc
call
aam
enter
jb
push
aas
sbb
test
jl
gs
jbe
xor
or
inc
xchg
cmp
xlat
pop
cmpsl
xchg
pop
inc
mov
ret
daa
jg
in
push
in
popf
pushf
loop
cli
mov
adc
add
jbe
pop
stc
xlat
xchg
push
jge
stc
xchg
jecxz
mov
rcrb
clc
aad
in
sub
aad
in
repnz
fimuls
aam
and
or
inc
or
fimull
mov
mov
cmp
cld
adc
int
pushf
push
jo
xchg
cmpsb
dec
sbb
insl
shl
xor
pop
adc
mov
int3
mov
jmp
adc
cli
fildll
add
loop
mov
push
int
roll
pop
mov
sahf
sbb
lock
push
lea
ss
in
cwtl
dec
cli
jnp
jle
dec
mov
sti
shrl
mov
inc
xchg
cmp
push
imul
or
jp
dec
push
hlt
mull
out
xchg
sarl
les
ret
pop
jg
push
leave
stos
lods
cmp
bnd
mov
adc
or
push
in
jecxz
stos
cld
xor
pop
push
outsl
cmc
pop
dec
data16
icebp
push
ret
add
lea
sbb
inc
pop
mov
add
mov
mov
jnp
dec
insl
jp
sub
incl
leave
movsb
push
mov
leave
imul
push
adc
shll
xchg
push
xchg
stc
fwait
add
adc
xor
inc
add
loope
cmp
push
add
sarl
rcrl
jnp
popf
mov
popa
rolb
cld
push
mov
mov
dec
sbb
adc
and
push
lret
xlat
mov
cmp
jge
dec
dec
push
nop
xor
cld
push
sub
sti
xlat
lock
loopne
scas
mov
inc
mov
mov
aaa
or
jno
and
cmc
pusha
js
dec
stc
stos
aaa
mov
popf
lds
or
ja
das
inc
sub
es
jo
push
jmp
test
loope
mov
mov
push
xor
popa
push
or
sbb
popa
stc
hlt
je
jne
movsb
fiadds
out
jne
inc
rclb
add
fistpll
xchg
in
push
jne
arpl
and
cmp
addr16
dec
popa
rol
pop
dec
fcomps
and
hlt
push
inc
mov
cmp
int
xchg
sub
loope
mov
jle
mov
jp
pushf
mov
out
mov
mov
and
push
add
fidivrs
push
faddl
sar
xchg
xor
outsl
mov
leave
push
outsl
or
ljmp
add
ret
mov
cmp
mov
xchg
cmp
lahf
xchg
push
jno
xor
jo
inc
lahf
sbb
mov
test
adc
xchg
cmpsb
insl
dec
push
ds
push
out
jp
mov
daa
pop
ss
sub
mov
push
and
rol
inc
subb
pusha
jo
test
inc
ret
pop
sub
push
outsb
lods
mov
xchg
xchg
jne
rol
mov
movsl
jae
adc
dec
out
mov
dec
ret
xor
xchg
int3
fmull
jp
dec
rorb
mov
lcall
rcr
mov
adc
and
sub
lds
pop
sbb
or
cli
mov
and
cli
xchg
mov
scas
mov
sub
lea
clc
cltd
push
outsl
push
mov
insb
cmp
xor
mov
adc
aas
or
and
cli
mov
pop
or
sub
add
jle
loopne
add
fcmovnbe
inc
in
loope
sbb
xchg
xchg
sub
bound
call
push
pop
cmpsb
add
jmp
mov
sub
cmc
decl
jno
jmp
in
cmp
fdivl
inc
add
daa
mov
pop
xor
mov
js
hlt
addb
adc
xchg
sbb
jmp
test
lea
mov
test
pop
lods
dec
lcall
adc
test
jle
mov
cltd
test
pop
sub
adc
cmp
nop
mov
adc
in
cmp
nop
push
sbb
cwtl
mov
mov
int
xor
cmp
inc
xchg
mov
or
subl
je
push
std
jmp
mov
pop
aad
pop
inc
out
fildll
adc
mov
mov
les
in
mov
mov
and
mov
fcmovnu
je
cltd
pop
jp
inc
sahf
push
lock
push
xor
or
push
mov
outsb
out
fbld
insl
jecxz
xlat
mov
fadds
xchg
mov
mov
icebp
in
or
mov
stos
test
push
dec
ret
ret
dec
imul
jg
jge
out
cmpsb
sub
pop
repnz
inc
adc
xor
cld
lahf
mov
loop
jae
cmovns
mov
sub
mov
mov
dec
sub
push
push
insb
addl
jae
fsubs
fidivl
fcmovb
aad
ja
sub
push
push
sbb
int
add
mov
adc
inc
sti
xor
leave
pop
out
xor
or
add
out
loop
xchg
jp
mull
addr16
lods
in
xor
stos
and
add
sbb
mov
out
div
lods
sbb
js
push
fwait
sub
movsb
loope
jae
sbb
push
imul
loope
out
std
inc
rdmsr
xchg
mov
int3
nop
sbb
sbb
xchg
fcom
sub
inc
leave
push
data16
sahf
sti
xchg
jns
sbb
push
mov
xor
daa
mov
in
call
push
sbb
push
dec
sbb
scas
ret
sub
adc
fildll
mov
imul
hlt
je
xchg
les
mov
nop
or
mov
jne
out
dec
call
mov
daa
fcomp
rcll
aaa
mov
ja
fcoml
xor
cli
nop
sbb
clc
scas
xor
push
movsl
jae
ret
fldl
xor
dec
xchg
inc
cld
fld
and
lea
sbb
mov
mov
fwait
icebp
cmp
cld
cmp
sarb
mov
decl
fwait
dec
aas
jns
ret
jnp
sti
push
mov
dec
dec
iret
mov
frstor
mov
out
mov
adc
xchg
lock
mov
jns
add
xchg
adcb
repz
add
adc
daa
add
jecxz
mov
nop
ret
mov
outsl
inc
arpl
shrd
add
sbb
mov
imul
roll
cwtl
adc
xor
dec
cmp
jecxz
pop
dec
sub
lock
sbb
sub
dec
cwtl
add
call
frstor
add
dec
add
insb
or
pop
lds
pop
pop
adc
in
cmp
stos
aad
orl
or
push
inc
mov
sub
std
in
inc
cmp
pop
jno
fnstcw
incl
sbb
ljmp
fidivl
lret
loop
outsb
test
and
les
pop
shll
rorb
mov
outsl
xchg
cmp
sbb
es
xchg
mulb
jp
int3
xchg
cmp
cld
pop
cmpsb
int
push
jne
or
ds
js
mov
jns
adc
mov
in
es
lock
cmc
jle
jns
mov
shr
sbb
dec
push
pop
push
sub
mov
mov
jb
mov
and
inc
xchg
gs
mov
insl
out
jle
xchg
das
cltd
lahf
pushf
lds
jl
out
xor
add
negb
push
push
imul
out
xchg
xchg
sub
dec
lods
outsl
incb
testb
jno
add
inc
fbstp
ss
and
stos
js
pop
add
mov
insl
and
imul
or
adc
fcmovnb
pop
sub
aas
dec
dec
xchg
andl
and
sub
mov
sub
xlat
bound
pop
mov
jg
dec
jmp
cmpsl
rol
pushf
in
add
test
jl
fdivs
dec
adc
lods
mov
mov
imul
and
nop
cmp
cmp
push
adc
and
add
nop
jbe
pop
mov
cwtl
and
xchg
sbbb
or
cmp
mov
unpcklps
dec
jecxz
loop
cwtl
iret
movsb
or
shrl
jb
scas
ljmp
inc
test
push
test
repnz
jg
movb
movsb
outsb
mov
add
movsb
mov
fisubl
inc
adc
cmpsl
push
push
inc
dec
and
ja
stc
sub
jecxz
push
dec
lret
lods
or
adc
dec
repz
and
repnz
add
xchg
xor
push
std
popf
arpl
lods
aad
test
jmp
aam
into
jmp
movsb
imul
test
stos
nop
cmpsl
jne
inc
jge
out
aas
push
adc
pop
adc
cmp
pop
jns
add
jmp
rcll
iret
test
sbb
cmp
push
cld
pop
sbb
movsb
ljmp
flds
ret
and
xchg
ja
push
sub
mov
test
ret
cld
ljmp
ja
jno
sub
shll
pop
cmp
jno
sbb
fs
add
mov
jle
push
inc
hlt
xlat
sub
scas
enter
cmp
cwtl
and
xchg
mov
and
int3
ja
xchg
aam
jmp
mov
or
add
out
sub
add
dec
xor
dec
bound
lret
push
stc
mov
iret
xlat
rcr
roll
cwtl
xor
daa
xor
pop
paddb
outsl
lods
loope
jne
clc
rcrl
testl
mov
mov
jnp
inc
sti
push
repnz
or
mov
mov
les
aam
ret
pop
sbb
jno
decb
je
lock
into
cmp
fnstcw
cmp
sbb
and
sub
fcoml
pop
or
inc
jns
add
push
ret
push
adc
daa
lock
mov
xchg
popf
push
xchg
sahf
setne
loop
pop
pop
xchg
sbb
add
test
or
lds
cmp
insl
mov
test
lea
scas
les
orl
pushf
aam
mov
jge
test
mov
fildll
fists
jbe
mov
xchg
and
lret
stos
fadds
mov
ret
imul
jmp
clc
fiadds
loopne
dec
repnz
cmpsb
pop
or
jg
daa
sbb
sub
mov
lahf
add
or
test
jne
sbb
loop
dec
xchg
imul
mul
mov
xchg
add
outsl
ljmp
call
icebp
addr16
orb
stos
mov
sub
lahf
jmp
test
jg
cli
sbb
push
cmp
jbe
das
iret
sbb
cld
xchg
stos
stc
cs
lea
popf
fsubrl
nop
inc
testl
mov
cmp
loopne
movsb
jg
icebp
adc
out
fstpl
test
mov
mov
in
cmp
dec
fiadds
in
adc
sub
scas
lahf
mov
stc
out
sbb
jle
vmwrite
in
adc
pop
les
enter
or
and
icebp
dec
sbb
aam
sbb
jne
sti
sbb
int
dec
xchg
dec
mov
insb
pop
in
xor
ficoms
mov
xchg
xor
lods
mov
mov
repz
ljmp
sbbl
outsl
data16
scas
and
icebp
stos
push
addb
push
pop
neg
dec
lahf
seto
jmp
sti
test
sbb
test
stos
add
xchg
aam
mov
loopne
mov
and
fiaddl
xor
mov
sahf
mov
ss
stos
fldt
jmp
add
rorb
or
or
xchg
sbb
gs
out
clc
dec
int3
sbb
rolb
test
add
das
xor
fcoms
mov
mov
push
outsl
addb
outsb
cmpl
lahf
sbb
xorb
in
shl
faddp
outsl
shll
scas
adc
xor
mov
mov
xchg
fwait
out
inc
test
ret
js
arpl
dec
imul
xor
dec
dec
js
call
push
shl
sar
add
pshufw
les
push
lcall
bts
lahf
xchg
and
scas
push
pop
insl
dec
mov
int
xor
push
inc
xor
ljmp
repnz
outsb
fbld
or
pusha
test
sahf
mov
cmp
test
ljmp
stos
es
iret
js
pop
adc
and
mov
push
push
icebp
int3
inc
sbb
rclb
push
out
inc
pop
mov
cmp
pop
dec
mov
imul
lcall
xor
aaa
iret
xchg
push
cld
repz
push
jecxz
mov
cmp
sub
xchg
dec
call
xor
mov
add
mov
and
dec
lds
dec
and
xchg
in
sbb
sbb
sbbb
adc
mov
popf
popa
test
js
popf
sub
mov
add
dec
pop
xor
icebp
ja,pt
scas
or
sbb
adc
mov
rorb
jmp
jle
push
out
icebp
out
pushf
mov
mov
push
push
dec
frstor
test
incb
popa
sbb
aam
xchg
fwait
lret
loopne
ror
dec
xor
inc
mov
jle
or
jge
inc
ret
jecxz
mov
mov
in
movsb
test
repnz
mov
imul
xor
add
push
adc
dec
jne
std
pop
pushf
pop
xor
push
jns
inc
inc
xor
fwait
je
lods
jmp
sbb
sbb
fcomi
pop
mov
dec
shlb
outsl
rclb
xlat
jno
push
jno
rorb
mov
lods
jg
sahf
cmp
push
popf
jae
loopne
push
cli
les
clc
jl
xchg
and
mov
inc
aaa
jbe
insb
aad
push
inc
pushf
sub
xor
push
cmp
test
ret
xchg
aam
pop
cmpsb
pop
testl
or
inc
xchg
sahf
cmp
xor
mov
negl
jae
mov
test
or
sarl
and
pop
clc
inc
xor
pop
inc
rcrb
mov
cmp
adc
push
mov
movsb
stos
jae
das
xor
nop
pop
mov
sub
xchg
adc
rcr
out
dec
inc
jbe
xor
add
scas
mov
insl
gs
adc
pop
fucomip
dec
inc
mov
inc
sub
lret
pushf
sar
cmpsb
fidivrs
int
pusha
adc
pop
daa
daa
repz
out
loopne
lods
lret
popf
pop
or
scas
out
aas
dec
sub
inc
fnstcw
testl
pop
scas
mov
mov
mov
inc
in
xchg
popf
push
sub
ficoml
iret
imul
icebp
or
leave
dec
inc
stos
sbb
adc
test
add
aaa
std
and
mov
inc
add
sbb
fdivs
out
dec
mov
in
cltd
push
or
jnp
push
in
sub
sbb
xchg
call
or
repnz
lds
jl
cmpsl
xchg
jno
into
andl
enter
xor
jne
repnz
scas
sub
in
adc
jp
es
sbb
fsincos
sbb
pusha
ret
dec
stos
pusha
stc
or
xchg
idivb
aaa
inc
lods
lods
insl
daa
loopne
fs
sbb
xchg
fs
and
movsl
cwtl
push
xchg
and
xor
xor
aam
inc
lret
xor
or
dec
inc
mov
dec
js
lahf
mov
mov
out
sti
adc
lcall
mov
enter
xchg
dec
lea
adc
daa
pop
fucomip
and
scas
dec
imul
push
out
ss
and
or
cmp
mov
and
jbe
and
mov
cltd
outsl
or
addr16
mov
cmp
sbb
fwait
jne
pop
pop
or
mov
pop
orl
sahf
fs
outsl
pop
mov
xor
cli
nop
std
dec
jne
rorb
cltd
cmp
mov
sbb
xchg
ret
push
sub
mov
xchg
insl
xchg
and
int
stos
arpl
test
pop
je
ss
popf
sub
or
frstor
mov
loop
mov
jmp
shrb
sarb
scas
ret
lds
or
les
enter
ss
enter
stc
lcall
ds
push
idivb
out
jmp
cmp
sahf
data16
jno
pop
mov
or
mov
add
insb
hlt
in
sbb
xchg
pop
push
lret
insl
lock
dec
jns
xchg
and
in
clc
xchg
out
adc
jmp
out
mov
xchg
pop
mov
outsb
and
shrl
pop
leave
cwtl
jae
sbb
dec
mov
daa
fnstenv
lahf
lcall
arpl
cmc
jl
jg
jl
or
add
push
adc
sbb
flds
jns
or
int
sbb
test
std
dec
push
adc
mov
jbe
push
icebp
idivb
js
in
xor
scas
cs
adc
cld
cmc
fmull
clc
or
push
push
mov
es
ret
dec
xchg
xchg
pop
stos
inc
or
test
push
mov
jge
xlat
loopne
push
mov
sbb
arpl
in
fwait
lcall
mov
mov
mov
push
stos
inc
xlat
sahf
lcall
sarb
jmp
fidivs
in
nop
jl
sub
pop
xor
cmp
cli
data16
lret
mov
sar
cmp
jg
lahf
rorl
mov
push
jl
data16
xchg
loopne
lds
fsubs
loop
pop
adcb
add
into
shl
scas
mov
fisubs
xchg
push
and
hlt
sub
sbb
mov
int
vcvtsi2sdl
inc
lahf
mov
popf
fimull
imul
xor
cmp
or
rcl
push
sarb
mov
adc
cmp
inc
je
shrl
mov
push
leave
sbb
into
pushl
cmpsl
mov
push
ds
pop
bnd
in
out
or
adc
ja
jns
pop
xchg
ret
jbe
pop
dec
bound
xchg
hlt
insb
inc
push
and
inc
mov
sbb
aaa
pop
xor
push
mov
int
sti
shlb
adc
push
lahf
imull
fwait
jl
push
pop
mov
xor
mov
sbb
shlb
dec
jne
bound
jae
push
fisubl
dec
shll
xor
xlat
push
loopne
sahf
jl
and
je
bound
inc
pop
xchg
jns
or
jnp
aaa
xlat
and
mov
mov
js
xchg
jmp
outsb
mov
xchg
js
sbb
mov
xchg
fwait
aas
jne
testb
cmpb
out
pop
lahf
out
and
mov
sub
lods
sub
mov
jne
fbld
aad
test
dec
test
mov
mov
jl
cltd
or
cltd
sub
gs
pop
mov
subb
cmc
or
xchg
cmp
test
mov
loopne
shrl
lods
in
adc
mov
inc
xor
fbld
fimull
inc
dec
fcmovnb
movsb
sbb
mov
or
cli
loop
mov
jmp
sahf
dec
rcl
xor
icebp
jmp
adc
pop
ss
xchg
jg
xlat
addl
shrl
loopne
push
es
sbb
repnz
ja
pushf
sbb
adc
test
cli
sbb
jecxz
icebp
decb
xchg
xchg
scas
imul
dec
sub
adc
mov
cld
mov
xchg
mov
mov
negl
add
arpl
or
fstps
sahf
xchg
daa
add
cmc
inc
in
push
sub
push
cli
sbb
pop
push
or
or
call
insb
pop
scas
mov
dec
adc
test
mov
ret
push
sub
repnz
popf
fs
ret
add
rclb
dec
jne
negb
data16
dec
nop
inc
movsl
or
js
pop
out
ret
ret
ret
xor
notb
insb
sub
cltd
pop
pusha
jge
fsubl
pop
insl
mov
cmp
pop
movsl
push
or
movsl
sub
into
flds
xchg
push
cmp
fst
mov
loope
push
cmp
ficompl
adc
xlat
ret
cmp
mov
adc
movsw
push
or
xchg
aam
or
xchg
test
or
fldlg2
stc
adcl
aaa
mov
cmp
pop
mov
inc
push
cli
sbb
pop
inc
jne
adc
imul
inc
enter
sbb
bound
fisttpll
sbb
scas
pcmpeqb
pop
pop
rep
push
addb
sbbl
push
and
lahf
arpl
arpl
xor
inc
mov
inc
ss
sbb
sti
or
bound
imul
movsb
and
mov
fadds
fidivl
sub
pusha
frstor
lods
xor
mov
and
sub
pop
pop
xchg
loopne
xchg
int3
insb
sub
movsl
sub
sbb
cwtl
lods
adc
fsubrl
enter
fsts
sarl
addr16
pushf
pop
aad
mov
or
inc
dec
daa
xor
push
cmp
push
daa
xor
dec
cmc
aad
fcomps
sub
pop
test
loope
pop
fcmovu
adc
hlt
nop
pop
mov
pop
aad
pop
adcl
sub
dec
jmp
mov
sub
popf
stos
imul
mov
lret
jnp
das
std
mov
test
ret
dec
test
ficoms
jge
mov
sbb
cwtl
insb
inc
cmp
pop
insl
dec
int3
popf
push
in
in
lea
mov
imul
push
fnstenv
adc
or
pop
xchg
rorb
pop
jbe
stc
hlt
test
jae
orl
jb
push
into
xorb
call
and
out
lods
fwait
test
xor
btc
mov
push
sub
insl
sbb
xchg
inc
loopne
push
outsb
in
xchg
aad
out
pop
inc
pop
pop
push
fcoms
inc
jecxz
inc
aas
xor
std
lods
and
gs
xor
pop
aaa
sub
jo
test
adc
lret
cmpsb
mov
mov
add
sbb
loop
jle
out
bound
sbb
rorl
arpl
xor
push
icebp
lcall
ret
rcrl
lods
out
mov
jge
xlat
insb
clc
jle
pushf
ljmpw
aaa
jmp
mov
pop
negl
jo
mov
jmp
pop
popf
adcb
jno
sbb
std
aas
nop
adc
imulb
push
push
das
jo
mov
jb
pop
lcall
rclb
or
or
lret
pop
push
jbe
jnp
add
jmp
aam
pop
push
addr16
movsl
inc
shr
shlb
enter
mov
or
pop
and
insl
push
aas
jb
out
xchg
jecxz
jp
aaa
sbb
sbbb
shlb
fsubs
out
or
loopne
lods
in
cmp
ret
and
push
inc
push
nop
fisttpll
movsb
std
pop
pop
mov
jns
lds
cmpsl
adcb
lahf
lret
push
xchg
subl
add
push
cltd
cmp
inc
jg
negl
mov
adc
out
je
cmp
lret
push
or
mov
xor
and
aad
fsts
or
dec
dec
stc
enter
roll
inc
sub
add
or
shlb
jne
daa
cltd
lock
ds
in
xor
mov
ret
xor
xlat
mov
jecxz
pop
test
push
xor
or
adc
aad
fidivrs
inc
push
aam
inc
pop
add
dec
and
mov
in
xor
lea
pop
pop
pop
sahf
mov
lock
cltd
pop
aad
hlt
ljmp
popf
outsl
fisttpl
ss
testl
mov
mov
mov
mov
pop
orb
lods
enter
mov
icebp
enter
cmp
adcb
mov
call
push
and
or
ret
and
sub
into
ljmp
push
or
adc
jp
inc
pop
fsub
xchg
aas
les
xchg
xor
pop
imul
loopne
imul
test
in
leave
test
jg
mov
adc
jmp
call
in
outsb
filds
jge
mov
pop
out
orl
mov
or
mov
xor
or
add
and
xor
jge
loopne
rorb
fisttps
outsb
fsubrl
mov
icebp
dec
enter
pop
adc
loop
scas
adc
mov
jb
lea
cld
sbb
and
cmpsl
les
inc
stc
sub
mov
pop
mov
xor
sbb
lods
mov
cli
hlt
stos
mov
fisubs
inc
xrelease
addb
mov
push
inc
and
cmp
fnstcw
inc
scas
test
lods
or
ljmp
lods
mov
into
sahf
jg
ja
cli
fs
repz
mov
and
arpl
fimuls
xchg
or
cmp
xchg
in
cs
ljmp
sub
jle
cs
stos
push
sub
cwtl
mov
stos
add
sub
adc
rcrb
jb
push
inc
xor
leave
pop
jp
sar
es
xchg
les
fbstp
push
insl
cld
mov
sbb
in
outsb
imul
pop
jl
adc
push
ret
aam
mov
adc
loopne
add
in
pusha
jg
data16
mov
das
in
pusha
imul
lds
popl
rcrl
and
and
jo
ja
push
jbe
and
dec
lret
add
inc
insl
bound
fwait
jbe
icebp
movsl
pop
and
movsb
out
jecxz
test
cmp
mov
jl
lret
mov
sbb
adcb
mov
rcll
cmp
pop
scas
sub
repz
xchg
cs
scas
dec
add
push
les
jg
fs
dec
sahf
sahf
repnz
test
dec
dec
inc
cmc
in
sbb
imul
dec
lods
mov
cmp
push
sbb
imulb
mov
shrb
pop
cs
clc
jg
xchg
loopne
mov
push
sub
ja
std
xchg
in
dec
mov
and
sub
pop
sbb
or
fmul
mov
cmp
xor
inc
dec
or
scas
js
mov
xor
push
dec
ficomps
ret
scas
dec
je
test
jne
outsb
cltd
dec
or
nop
out
mov
push
sbb
or
nop
ficoms
mov
imul
sub
xor
and
or
in
xor
and
ss
rcrl
in
add
shl
int
mov
gs
and
adc
inc
scas
fdivrl
mov
es
pop
pusha
imul
push
dec
fwait
jo
cwtl
add
imul
dec
test
and
lock
test
fsubrl
or
ret
and
les
and
add
inc
inc
jno
fucomp
dec
and
imul
adc
mov
push
push
and
mov
mov
pop
or
sbb
mov
xchg
mov
enter
or
stos
jg
mov
rcll
add
add
dec
cmp
insl
adc
ret
cmp
inc
cmp
pushf
and
popa
mov
sbb
jge
aam
xchg
mov
add
ret
cwtl
push
xchg
xchg
cld
aad
dec
sub
sarb
es
mov
adc
and
ds
jmp
pop
pushf
push
int3
pop
xor
add
pop
adc
pop
ror
add
pop
mov
add
sub
mov
inc
ficoms
scas
pop
inc
out
jbe
dec
ja
int
pop
shrb
in
push
in
dec
add
xchg
jne
jb
mov
dec
sbb
mov
add
fidivs
push
in
lahf
in
cld
into
test
mov
adc
jmp
ret
movsb
and
test
insl
aam
insb
inc
dec
mov
imul
lods
bound
lock
xchg
popf
mov
fildll
jo
mov
cmpsl
shrl
flds
cmp
outsb
aam
mov
dec
daa
into
adc
imul
xchg
xchg
and
lds
or
add
ficoml
pop
or
std
mov
pushf
out
adc
ret
mov
cli
lcall
sahf
dec
cltd
aas
movsb
insl
cld
es
jl
push
sbb
insl
repnz
arpl
adc
adc
repnz
test
cmp
sbb
stos
mov
mov
loope
loopne
rclb
add
push
push
lret
mov
jae
pop
push
jmp
js
cmpsb
push
test
jae
or
outsl
jae
push
scas
popf
xchg
daa
in
jmp
icebp
lods
je
or
pop
xchg
jne
lret
mov
and
xchg
loop
fdivrs
popa
out
add
mov
loopne
cmp
jmp
ljmp
inc
xlat
les
cmc
jns
add
shll
test
cmpsl
sub
push
and
sub
popf
lods
push
adc
call
pop
or
cmpsb
cmpsb
pop
call
dec
mov
inc
popa
jecxz
and
sub
jno
and
mov
test
jae
and
cmpsb
mov
pop
xorl
jnp
or
push
leave
jmp
add
in
outsb
push
mov
ror
cs
adc
addb
mov
incl
and
mov
std
dec
enter
aam
sbbl
jl
or
scas
fcomps
repnz
dec
xchg
ret
xor
mov
aas
and
cmp
pop
xor
or
mov
inc
xchg
push
mov
xchg
mov
add
bound
rcll
das
out
gs
incl
mov
push
rorl
popa
jbe
out
insl
adc
pop
mov
repz
aas
repz
sbb
cmp
pop
out
xchg
sub
jb
push
pop
stos
and
sub
cli
mov
mov
add
in
mov
add
jno
sbb
mov
inc
inc
push
out
cltd
clc
and
imul
aaa
push
pop
cmpl
pop
xor
data16
stos
repz
mov
adc
xor
sbb
mov
in
ret
xor
je
call
cmp
iret
mov
das
cmc
mov
lock
and
sbb
dec
add
push
int3
or
push
arpl
js
sbb
adc
addr16
pop
lret
push
imul
addr16
pusha
mov
sbb
jb
movsl
lahf
movsl
adc
add
mov
xlat
mov
loop
rorb
push
push
mulb
and
add
or
pop
daa
dec
and
das
pop
fwait
ljmp
sub
iret
mov
shll
xchg
jno
mov
mov
cmp
mov
mov
inc
test
xchg
xor
loopne
or
mov
sbbl
stc
or
adc
jecxz
jecxz
testb
xchg
fisttps
xchg
cli
insb
sub
adc
es
mov
mov
adc
wrmsr
mov
mov
cmp
push
bound
orb
aam
xchg
fiaddl
sbb
adc
cmp
push
aaa
icebp
scas
push
movl
add
sti
add
sbb
ljmp
rorl
sbb
pop
or
insb
push
or
xlat
fwait
sbb
mov
fsub
call
inc
insl
xlat
iret
adc
pop
lahf
sahf
inc
test
insb
xchg
mov
inc
xor
mov
cld
add
add
addr16
icebp
mov
push
dec
pushf
stos
data16
dec
sbb
push
nop
xchg
xchg
js
inc
dec
pop
mov
xor
inc
or
pop
arpl
in
dec
rclb
lea
fbstp
push
insl
shll
cmp
in
lods
scas
adc
xchg
cld
xchg
or
push
jmp
in
add
into
int
jl
pop
call
popa
cld
imul
jo
cmp
scas
or
add
nop
ss
arpl
sub
enter
hlt
rcl
pop
jae
stos
test
cs
subl
leave
xchg
or
jmp
ficomps
pop
cmp
lea
pop
shlb
and
and
jmp
jle
jb
popf
mulb
dec
mov
xor
repz
into
cmpsb
in
sub
push
sub
sbb
sub
movlps
mov
es
cmpsb
sbb
and
test
lock
adc
inc
shlb
add
pop
es
dec
mov
sahf
and
std
cmc
lret
mov
stos
xchg
movsl
jg
shl
lcall
loopne
mov
and
shlb
out
mov
test
sub
cwtl
sub
shrb
adc
ljmp
xlat
out
inc
cli
imul
cmp
cs
pop
mov
movsl
or
inc
mov
cmp
notb
add
out
and
adc
adc
repnz
les
dec
add
insb
mov
mov
mov
cs
stos
dec
mov
mov
ja
scas
clc
iret
std
inc
lahf
mov
aam
pop
mov
hlt
in
enter
lahf
fisubs
mov
popa
out
jge
mov
insl
dec
cmp
movsl
stos
adc
pushf
pop
sarl
ss
test
cmpsl
into
mov
mov
push
push
push
pop
push
mov
fadds
inc
lds
sbb
mov
stc
stos
out
pop
sub
xorl
stc
jbe
and
mov
test
sub
mov
push
rclb
or
dec
leave
xchg
mov
testb
lret
mov
mov
cmpsl
fstps
shll
aas
test
enter
or
push
sbb
insb
cli
mov
pop
fmul
or
push
pop
lods
adc
sar
dec
dec
outsl
dec
push
mov
aaa
insb
jmp
lds
mov
jae
addr16
push
xchg
or
or
adc
in
andb
shlb
inc
jne
mov
sahf
xor
scas
adc
xor
fwait
nopl
push
xor
jl
lods
push
test
dec
rcrl
xchg
inc
test
sbb
pop
inc
rol
inc
jecxz
xchg
mov
add
test
mov
jp
pop
jge
cmp
jbe
bound
sti
rol
xor
sub
movsb
mov
cmc
insl
mov
shrl
add
xchg
rep
pop
test
lods
add
das
stos
nop
decl
xchg
jbe
push
fisttpll
push
dec
clc
sub
popf
lods
cmp
dec
out
xor
xor
ljmp
dec
std
rcr
pop
cmp
xchg
daa
out
lcall
pop
inc
push
insl
or
add
ret
mov
mov
stos
leave
rolb
lods
xchg
xor
pop
scas
xor
adc
push
mov
and
add
xchg
mov
adc
cmc
lret
dec
and
lcall
or
aad
lock
jnp
pop
sbb
fdiv
outsl
lret
sbb
add
arpl
xchg
leave
hlt
cmp
test
mov
mov
jns
pop
dec
or
xor
in
cmpsb
das
mov
pop
mov
sbb
pop
cli
test
add
andb
je
sub
mov
aad
iret
add
inc
lods
lods
xor
mov
imul
adc
pop
iret
addl
sbb
in
loopne
out
and
icebp
adc
mov
jle
pop
dec
rcll
inc
cmp
lcall
sub
test
inc
lock
mov
aas
mov
outsb
adc
add
push
outsl
sub
fldenv
sti
mov
jecxz
dec
call
scas
ljmp
push
jmp
dec
push
adc
jae
frstor
ss
std
lahf
adc
pop
cmp
mov
lret
pop
les
ret
mov
popf
decb
js
je
clc
or
iret
stos
dec
test
cs
xorl
enter
push
cmp
clc
nop
mov
inc
xchg
fnstcw
add
push
lret
js
xchg
mov
xchg
shrl
or
stos
push
mov
adc
push
scas
popa
mov
pop
push
inc
mov
mov
out
leave
adc
je
or
and
shll
sti
imul
in
dec
mov
or
push
push
mov
mov
in
jne
out
lock
lret
cmp
dec
pop
testb
and
stc
sbb
adc
movsb
xchg
jle
lock
mov
movb
les
lock
inc
mov
xchg
pop
and
jge
subb
out
ja
pop
pop
xor
incb
jnp
mov
push
xchg
xlat
popa
dec
hlt
ret
or
pushl
push
inc
push
lret
nop
cwtl
mov
aad
adc
xchg
inc
cmp
pmaxsw
mov
push
rolb
xchg
mov
int
hlt
pop
fsts
fidivrl
adc
adc
rcrl
lret
and
xor
adc
leave
lods
xor
test
jge
cltd
add
sbb
pop
test
push
mov
jle
ficompl
and
mov
mov
xchg
or
adc
dec
in
inc
out
push
or
dec
cmp
cmp
xchg
call
stos
test
out
mov
jb
or
pop
dec
adc
leave
dec
inc
sbb
or
std
dec
cwtl
mov
imul
mov
fwait
and
mov
shlb
xor
xchg
cmp
dec
lret
out
cmp
xor
or
sarb
jge
mov
mov
xchg
cmp
or
inc
sarb
out
jae
fcomps
arpl
out
idivl
popa
and
sub
dec
push
jnp
into
cwtl
cmc
call
cmp
mov
out
cmp
les
fdivs
and
aam
mov
clc
or
lods
pop
mov
fcomps
and
sub
sub
aas
cwtl
mov
out
mov
and
ds
mov
dec
mov
popf
pushf
enter
mov
das
sub
adc
adc
push
cmp
lods
cmp
or
int
cmp
neg
pop
test
popf
pop
or
insb
lret
jp
pop
sti
aad
cmp
xchg
add
imul
jge
jmp
adc
adc
movsb
sti
fsubrl
pop
add
enter
in
movsb
jns
adc
jle
in
sbb
fwait
call
and
lods
push
lahf
xchg
loope
pop
adc
jne
sbb
push
xchg
mov
or
pop
or
jmp
hlt
mov
sub
and
stc
cs
mov
arpl
sub
push
and
addr16
lods
fwait
xor
inc
mov
test
and
iret
mov
jne
ret
lcall
xor
sar
jo
daa
rorb
lea
adc
int
aaa
int
clc
pop
imul
mov
push
shll
cld
mov
icebp
aad
mov
icebp
push
dec
fwait
mov
jg
sub
fcomip
add
pop
xchg
add
insb
ret
jno
outsl
arpl
mov
pop
lods
sbb
cmp
imul
sahf
xor
pop
xor
pop
testb
les
sbb
pop
and
adc
les
add
ljmp
movsl
jmp
pop
stc
mov
cwtl
pop
ss
dec
xor
fcomp
sub
fiaddl
push
aaa
mov
fdiv
aad
in
or
jge
mov
sbb
jmp
dec
sbb
or
enter
xor
rol
mov
mov
or
shll
dec
pop
mov
and
sub
dec
jae
cmp
cmpsb
xchg
push
cwtl
jno
test
ljmp
and
cmp
cmp
mov
outsl
cmp
je
lods
mov
pop
gs
pop
sbb
push
push
mov
mov
mov
push
pushf
test
shll
aad
and
das
test
fcoms
std
imulb
mov
mov
leave
orl
ds
adc
ficompl
or
mov
sbb
jns
fbld
mov
add
data16
cmp
rorb
ds
jae,pt
mov
shlb
fdiv
add
sbb
xor
push
loopne
jle
adc
loopne
and
inc
call
adc
sahf
pop
jno
daa
mov
adc
ja
orb
repnz
jns
xchg
mov
inc
cmp
xor
sub
dec
sbb
iret
mov
repnz
and
pop
dec
mov
mov
sub
gs
out
repnz
out
pop
insl
dec
divl
pop
movsl
test
dec
fnsave
xchg
adc
xor
sti
aad
ret
pushf
ret
stc
imul
test
mov
cs
mov
mov
rorb
es
lods
inc
mov
adc
dec
bound
aad
mov
inc
push
xchg
les
or
cmp
xor
sti
cltd
add
and
inc
ret
xor
fisttps
mov
sahf
xor
es
push
push
xor
jp
pop
ljmp
or
ljmp
lcall
call
lret
inc
mov
into
in
repnz
imul
xchg
mov
xor
mov
cs
cmpsl
mov
add
orb
neg
push
lds
mov
mov
insl
out
lock
shl
jmp
sti
and
mov
aad
dec
fists
jecxz
fwait
std
sbb
xlat
stc
push
push
nop
adc
mov
int3
stos
xchg
sbb
in
clc
scas
xchg
sub
out
pop
xchg
les
loop
mov
xchg
xchg
lods
int
lods
mov
lret
push
fdivs
test
aad
add
mov
fldenv
mov
xchg
rsm
outsl
xlat
or
push
scas
mov
jno
bound
mov
push
sub
into
cmp
aaa
add
cmc
std
cmc
jp
cld
in
data16
ds
push
std
mov
clc
orb
mov
mov
cld
mov
push
rorb
add
fs
cmpsb
push
call
pop
mov
adc
add
push
fimull
daa
jl
push
mov
or
mov
or
xor
test
movsb
mov
out
or
scas
lret
add
loopne
inc
insl
adc
sbbl
test
aam
push
jle
dec
notl
and
jne
sbb
decl
push
call
inc
lods
xchg
cmp
xchg
nop
push
cmp
vmwrite
add
xor
pop
adc
add
js
daa
or
movsl
inc
cmp
xchg
test
pop
mov
test
addr16
out
pop
mov
mov
pop
xchg
pushf
xor
mov
adc
je
mov
stc
shl
sarl
or
mov
cmp
push
adc
or
jmp
int
mov
cmc
mov
into
out
xchg
push
or
push
sbb
test
xlat
repz
in
testl
xlat
and
fmull
and
xor
fstpt
vshufps
adc
mov
rcrl
dec
inc
sbb
cmp
adc
xor
jp
pop
out
pusha
subl
inc
mov
inc
cmp
les
xor
movsb
inc
inc
fwait
or
stos
mov
jne
cmp
mov
mov
mul
and
je
out
mov
mov
mov
push
add
mov
mov
nop
mov
cmp
adc
cmc
and
les
or
push
nop
popf
sbb
ljmp
mov
out
pop
and
dec
add
sub
and
imul
add
aad
adc
mov
mov
or
jbe
lock
mov
loopne
dec
or
mov
pop
jbe
data16
push
nop
cmp
ljmp
pushf
dec
cmp
push
mov
inc
cmp
imul
adc
inc
daa
push
lahf
dec
xchg
sub
pop
mov
shlb
xor
xchg
mov
addr16
push
jg
jo
mov
lret
jnp
mov
and
pop
loope
je
mov
lcall
clc
lods
push
xchg
movsl
push
dec
push
jle
cli
push
loopne
dec
std
or
dec
sub
xchg
ss
cwtl
cmp
lcall
mov
fisubl
pushf
lods
ret
loopne
mov
lods
nop
into
xchg
mov
ja
jg
and
mov
sub
arpl
mov
mov
pop
add
mov
or
mov
push
jae
mov
rcll
xchg
inc
js
dec
mov
sub
ret
pop
fwait
xor
adc
loopne
leave
pop
cmpb
shl
arpl
inc
lds
adc
sbb
imul
scas
cmpsl
fcomp
and
repz
shll
ljmp
inc
xor
xchg
fnsave
xor
loope
mov
sbb
sbb
and
cmp
inc
loop
jge
out
dec
mov
push
into
shll
pop
adc
jo
dec
jle
outsl
aam
dec
mov
cwtl
pop
inc
mul
sub
into
ljmp
pop
and
mov
sahf
add
rclb
dec
push
ficompl
sbb
pop
inc
mov
leave
mov
or
inc
pop
mov
push
rcrb
mov
mov
pop
jnp
inc
jecxz
imul
sub
xchg
xor
gs
daa
cmp
inc
xor
out
xorb
lret
mov
dec
push
inc
xchg
lret
out
mov
mov
and
mov
fisttpl
mov
jbe
add
fsts
fsubl
iret
mov
ds
push
mov
lods
std
xor
mov
xor
repnz
xor
mov
jnp
int
insl
inc
mov
adc
out
sbb
push
cltd
push
pusha
ljmp
dec
or
pop
add
imul
mov
aad
repnz
add
dec
out
jp
mov
inc
dec
std
stos
pop
jg
jns
jmp
cmpsb
jle
mov
add
push
daa
jg
std
push
rol
mov
xchg
movsl
out
hlt
add
je
rcrl
pop
lods
aam
and
clc
mov
in
sub
adc
lock
sub
mov
mov
mov
mov
or
out
cmp
lahf
test
xchg
dec
out
pop
nop
jmp
lret
inc
xchg
insb
outsl
xor
out
mov
mov
stos
cltd
cld
mov
xchg
cwtl
xchg
in
aad
inc
rcl
add
push
popa
pop
mov
jmp
and
rclb
jle
pop
xlat
cld
loopne
jge
outsl
xor
dec
inc
inc
push
xchg
lds
xchg
mov
sub
cmp
fcmovnb
adc
xchg
loope
cmp
adc
mov
scas
or
and
push
push
pushf
popa
mov
insb
lcall
xchg
icebp
sub
ret
mov
and
lods
adc
push
jle
mov
cwtl
stos
les
dec
mov
mov
pop
pop
pop
pop
movsl
int
dec
xchg
sub
push
ds
xlat
popa
dec
lcall
mov
sub
dec
add
stc
push
add
mov
mov
sub
jae
in
xor
push
leave
mov
jnp
mov
rcll
ret
xchg
imul
push
jae
push
jg
adc
cmp
push
mov
adc
push
loope
into
ja
cs
daa
inc
sub
cmp
hlt
mov
aaa
out
aas
fcoml
sbb
mov
adc
push
ficomps
mov
jb
mov
or
lret
aad
adc
int3
and
hlt
fidivrl
adc
sarl
inc
cmp
es
pop
fucomi
pop
mov
xor
mov
aas
cmp
out
sti
ds
les
nop
fdiv
out
addb
inc
out
push
or
or
dec
js
cli
neg
and
cmp
adc
lods
fdivrl
cmpsb
jmp
test
dec
dec
mov
xor
xor
and
push
call
aas
add
inc
pop
sbb
push
adc
cmp
cwtl
mov
ret
mov
and
and
mov
enter
jbe
data16
shlb
add
repnz
push
insb
pop
cmp
mov
test
sarb
rclb
inc
int3
pop
pop
lods
loope
jb
stc
lods
stos
int3
rolb
insb
lret
sbb
adc
and
test
pushf
pop
stos
ljmp
jns
mov
mov
xchg
lahf
or
and
fldenv
xchg
push
enter
pop
and
add
pop
std
pushf
clc
push
lcall
arpl
and
fwait
dec
mov
dec
out
movsl
push
dec
fsubl
and
addr16
jg
jnp
push
push
mov
pop
or
ds
js
fildl
push
out
rorb
test
push
xor
adc
xchg
imul
pop
test
adcl
fildl
xorl
pop
fcoms
aas
enter
cmpps
mov
insl
ss
push
cmpsb
jecxz
fadds
dec
repz
sub
xchg
sub
xchg
pusha
xchg
jno
popl
mov
push
mov
sbb
ret
ret
and
pusha
inc
add
popf
jne
xchg
test
gs
inc
xchg
jne
fidivs
jne
sar
pop
jo
aam
push
pop
lock
test
test
jle
sbb
in
lret
fiaddl
outsb
push
xchg
jp
xchg
mov
outsl
daa
mov
in
lahf
jno
cld
fildl
xor
frstor
arpl
mov
jg
lds
inc
addr16
jge
movsb
cld
dec
add
js
jmp
mov
cmpsb
loope
sarb
mov
ss
cmc
push
mov
test
cmc
in
xchg
shlb
sahf
int3
mov
add
std
movsb
out
sub
dec
sbb
clc
xlat
pop
stos
cwtl
pop
adc
push
cmp
xlat
or
jg
sbb
xchg
and
mov
sbb
out
loope
movsb
mov
mov
sub
pusha
add
iret
out
lods
pushf
cmpsl
xchg
cld
xor
adc
testb
cmpb
inc
push
icebp
aam
xor
jbe
dec
jmp
mov
mov
mov
push
lods
pop
xchg
xchg
out
cmc
jle
push
mov
aad
icebp
jno
xor
add
xor
arpl
and
and
int3
xchg
lods
ret
sub
int
or
cvttps2pi
pusha
fwait
test
adc
cmp
stc
popa
sub
cmc
xchg
xchg
mov
stos
aad
je
push
pop
jecxz
inc
jb
cmpsl
adc
cmc
loopne
insl
mov
icebp
lcall
dec
dec
je
call
push
incb
shlb
fidivrs
mov
add
inc
lods
std
bnd
fcomps
xchg
mov
sbb
sub
and
movb
gs
adc
addr16
push
mov
daa
test
sbb
push
pusha
shl
scas
shl
push
mov
iret
cli
xor
mov
and
imul
shrb
stos
repz
lret
sbb
jg
aaa
mov
xlat
cs
xorl
dec
mov
pushf
inc
cmovl
lds
inc
in
addr16
inc
mov
fcomp
xor
jns
lret
jg
js
jbe
aad
and
inc
inc
mov
or
dec
xor
or
lret
lods
mov
mov
out
mov
mov
inc
leave
jl
lcall
bound
pop
mov
pop
out
mov
jns
pop
mov
test
enter
inc
sbb
mov
dec
aam
sbbl
fs
lods
movsb
cmp
je
insl
mov
out
in
std
sub
sub
mov
pop
adc
imul
stos
rcll
jmp
cmp
popa
leave
jbe
mov
out
cmp
adc
orb
push
ja
pop
call
adc
enter
sbbl
push
in
clc
insb
subl
xchg
cmp
daa
adc
in
in
and
insl
jle
pop
cmp
mov
outsb
loope
pop
repz
shrd
in
incl
xchg
xchg
out
sbb
jle
pop
xchg
sahf
es
adc
out
jmp
push
ret
cs
mov
clc
sub
and
scas
mov
es
outsl
mov
mov
in
push
pop
adc
pop
stos
lods
pop
jp
add
jecxz
mov
pop
mov
in
sbb
fwait
and
push
lea
mov
dec
cmp
pop
divl
or
aad
mov
add
aaa
jp
mov
jg
rol
sbb
xchg
data16
sti
ss
lret
aas
test
pop
jle
imul
mov
mov
aaa
out
pop
pop
mov
and
popa
cmp
pop
mov
push
inc
cmp
pushf
mov
in
adc
inc
lahf
cmp
pop
push
fidivrs
push
jecxz
push
ret
sbb
and
scas
pop
pushf
jae
xchg
fldenv
or
push
xlat
and
xor
sub
in
cmp
xor
aas
fcomip
pop
into
rolb
push
mov
pusha
xor
lods
into
int
mov
mov
out
pop
ss
and
push
adc
movsl
push
nop
pop
repz
sbb
es
mov
fsubrs
mov
pop
add
scas
sbb
add
sub
mov
push
push
jle
add
pop
or
xchg
stos
test
inc
push
lods
and
test
imul
jb
pop
push
push
sub
xor
cmp
cmp
or
xor
xor
push
enter
and
mov
pop
es
add
mov
pop
ficompl
fisubl
add
jmp
out
pop
outsb
sbb
and
and
sti
push
and
clc
repz
sub
push
ja
leave
add
cwtl
outsb
imul
mov
xor
popa
inc
clc
xchg
inc
push
loopne
mov
push
pop
xchg
outsl
in
mov
test
pop
aad
enter
test
jge
push
mulb
nop
mov
mov
shrl
gs
xchg
pushf
cmp
pushf
cwtl
lahf
inc
lahf
mov
movsb
add
sub
xchg
or
pop
push
jb
repnz
push
cs
inc
repz
push
sub
or
adc
mov
push
lea
cmp
sbb
pop
out
sbb
and
insb
sub
int3
jno
push
test
pop
int
sbb
and
and
lahf
iret
sbb
jne
push
mov
fwait
cmc
xor
repz
fidivl
mov
outsl
add
jns
std
mov
inc
dec
cmp
mov
les
and
jle,pn
insb
fstl
int
fbstp
or
sbb
lods
das
aaa
stos
cltd
fwait
lret
js
imul
mov
ljmp
xor
or
and
lret
arpl
sbb
ret
loopne
sbbb
imul
pop
int3
out
cmp
adc
ljmp
pop
inc
lahf
push
jmp
pop
es
jnp
mov
or
dec
mov
pushf
jb
dec
call
das
sbb
and
jp
pop
loopne
xor
mov
cltd
push
mov
jnp
adc
pop
lock
les
mov
sub
out
and
adc
daa
jg
mov
or
xchg
insl
cmpsl
stos
out
rcr
dec
ds
dec
mov
add
iret
movsb
insb
mov
and
inc
and
cmpsb
aad
loopne
icebp
pop
and
mov
or
pop
sbb
adc
pushf
adc
pop
pop
jnp
sbb
stos
jp
addl
mov
orl
jb
xchg
mov
mov
inc
sub
xorl
and
shrl
jg
les
jb
ret
or
jo
mov
test
mov
adc
fdivrl
testl
jnp
cmp
imul
dec
adc
fcmovnb
test
mov
imul
sbb
ja
sbb
sub
in
popf
mov
and
rcrb
fcomps
int
es
cmp
fs
repnz
pop
push
aaa
mov
movsl
loope
jo
and
xchg
cmp
xor
pop
dec
ljmp
jbe
mov
cmp
cmp
lds
movsl
das
int3
ret
jo
pop
sub
pop
cmpsl
enter
popf
stc
insl
inc
fisttpl
mov
scas
fcmovnbe
and
pop
pop
cmpl
lods
add
loopne
mov
sub
pop
dec
xchg
cld
or
inc
filds
sti
cmp
or
mov
dec
insb
sub
jmp
pop
ljmp
adc
addl
or
push
lea
bound
repz
push
cwtl
test
adc
pop
lea
dec
shll
push
pop
jmp
stos
sub
xor
lds
insb
hlt
jecxz
in
push
fs
add
and
cmpl
inc
fmull
add
int
stc
pop
xchg
imul
adc
test
cmp
add
push
dec
xchg
sarl
movsb
cli
dec
iret
sub
bound
aaa
jge
aad
xchg
xchg
add
and
or
pop
xchg
xchg
jle
jne
add
add
sub
inc
jecxz
je
cmp
jbe
lds
push
xchg
xchg
mov
xor
mov
mov
jg
mov
fsub
jge
les
mov
mov
push
mov
popa
das
xchg
or
and
ljmp
pop
inc
xchg
fwait
push
xor
insl
icebp
faddl
or
cmp
cltd
mov
lcall
add
push
push
outsl
into
mov
cs
push
cmp
mov
push
mov
in
adc
cli
stos
push
mov
jp
sbb
std
xor
mov
mov
pop
push
or
dec
jo
rcrl
push
push
je
cmp
pop
sbb
mov
into
add
jns
pop
stc
mov
cld
jg
and
inc
rcrb
push
pop
xor
sbb
movsl
stos
sub
xchg
and
mov
int3
test
xchg
ss
pop
lea
mov
daa
insl
aam
xor
pop
loopne
mov
mov
out
int3
inc
pushf
out
dec
mull
loop
fistps
cmpsb
dec
test
inc
ret
pusha
fs
jp
mov
js
mull
jns
xor
arpl
mov
adc
lea
sbb
jg
cwtl
dec
xchg
mov
or
in
adc
xchg
add
xor
movsl
jle
xor
popa
jnp
cmpsb
leave
sub
xor
cmp
dec
or
xor
stos
xchg
fsubrp
and
xchg
das
aas
and
testb
push
leave
and
js
add
pusha
stos
xchg
popa
jge
inc
leave
mov
xchg
enter
rol
dec
lock
or
fists
mov
rcrl
and
les
push
out
pusha
in
add
dec
jae
mov
nop
mov
scas
xchg
fwait
adc
sbb
jmp
mov
push
movsb
fildl
lret
or
xchg
aaa
mov
stc
ljmp
rcrb
jne
int3
insl
add
inc
dec
sti
lahf
test
test
jnp
push
in
aaa
sahf
rclb
in
and
test
pop
mov
lods
outsl
movl
pushf
pop
divb
mov
mov
in
insl
adc
or
std
inc
add
cmc
loop
scas
pop
push
lcall
xlat
inc
stos
les
inc
movsb
int
inc
inc
aam
xchg
pop
daa
imul
cmpsb
inc
dec
dec
sbb
cmp
adc
aad
scas
fwait
jne
cmp
movsb
push
lock
sbb
pop
add
sbb
not
jae
sti
fstps
and
cmp
imul
sub
mov
add
sub
and
adc
rcl
adc
subb
jmp
or
push
not
and
mov
lods
add
jmp
sub
ret
pop
cli
mov
aas
cld
adc
loop
movsb
cmc
sub
pop
test
adc
mov
mov
cmpsl
lret
das
xchg
dec
dec
or
cltd
movsb
and
sub
ret
pop
dec
cwtl
xchg
cmp
insb
adc
jb
arpl
push
push
cltd
sub
inc
pop
xorb
mov
cmpsb
inc
das
xchg
cmp
mov
xor
repnz
pushf
inc
sbb
adc
gs
std
push
mov
test
mov
call
fistps
loope,pt
inc
sub
dec
cmc
xchg
jmp
mov
push
xor
out
sahf
cmc
flds
xchg
xor
jl
add
cmp
mov
in
cmpsl
lahf
push
in
rcrb
mov
inc
mov
rclb
aas
cld
test
cmp
in
cmp
push
ficomps
pslld
mov
stc
xchg
xor
ss
sub
gs
ret
in
pop
add
push
loop
fnstcw
call
aam
mov
mov
ret
loop
subps
mov
stc
in
clc
shrl
or
outsb
mov
in
aas
sar
test
rep
inc
pop
fisttpll
xor
cmp
or
and
adc
cmpsl
lret
jne
cltd
mov
test
arpl
mov
sar
lods
fbstp
sti
xlat
sti
cmp
cli
mov
cmpsl
in
jl
pop
mov
inc
repnz
in
xchg
cmp
mov
jns
inc
mov
dec
cmp
and
push
and
cmp
sub
push
xor
leave
mov
es
aam
stc
imul
aas
add
outsl
mov
mov
std
push
sub
push
sub
sub
pop
cmp
mov
or
adc
adc
cmp
push
fimull
xchg
dec
adc
jle
xchg
xchg
shlb
jp
pslld
or
inc
popa
xor
xor
inc
xor
sub
xor
xchg
dec
int
inc
lret
mov
cmp
mov
add
pop
sub
pusha
mov
xchg
pop
lahf
cmp
or
sti
push
mov
arpl
dec
adc
ja
popa
dec
dec
loope
jg
inc
inc
test
rclb
dec
loope
lods
push
add
and
ss
inc
cmp
sbb
push
adc
outsl
xor
and
sbb
fbld
sub
and
pop
mov
inc
pop
lret
xchg
pop
add
repz
jle
sbb
push
in
rorb
hlt
mov
push
cld
cmp
mov
cmpsl
stos
inc
cwtl
jae
stos
sbb
testb
mov
push
mov
inc
pusha
int3
add
mov
mull
outsl
in
out
pop
adc
subl
mov
int3
adc
outsl
arpl
lahf
pop
clc
shlb
xor
out
inc
mov
inc
sti
dec
ret
mov
add
cli
stos
fwait
mov
iret
sbb
rcll
addr16
cmc
mov
jmp
int
mov
fs
pop
out
push
in
lea
sub
cmp
bound
mov
ret
arpl
xchg
fs
cmp
sub
js
mov
data16
sbb
icebp
xor
xchg
loope
push
lret
cli
dec
je
idiv
cmp
xlat
fiaddl
inc
fisubl
cli
into
popf
inc
mov
into
out
mov
mov
popa
sbb
cmp
mov
inc
repz
inc
fdivrl
movsl
in
xor
out
stos
xchg
add
adc
int
jb
jg
rclb
jge
adc
mov
mov
imul
div
sbb
xchg
mov
loope
aaa
sub
push
nop
or
sub
out
mov
jmp
test
insb
fldt
call
adc
or
and
pop
das
fnstcw
popa
neg
mov
xchg
push
clc
pop
cmc
into
adc
pop
cwtl
inc
pop
ja
cli
push
dec
aas
std
adc
fidivrs
mov
xor
addl
and
cwtl
pop
loopne
mov
and
xchg
ret
and
std
and
xlat
mov
sbb
mov
sbb
mov
jbe
pop
in
cli
mov
jnp
sub
xchg
std
outsl
pop
movsl
jge
movsb
lods
jp
icebp
jle
rorb
out
push
bnd
push
decl
repnz
out
fadds
sbb
insl
xor
leave
sbb
xchg
mov
mov
shll
lahf
imull
jae
jg
out
ljmp
cmp
sbb
xchg
cmp
aas
pop
pop
inc
insl
mov
mov
xor
addb
or
aas
jp
jl
stc
mov
pushf
adc
xchg
aas
loope
ljmp
test
in
or
sub
loopne
dec
mov
mov
xlat
cs
mov
jmp
dec
leave
out
leave
mov
hlt
repz
sti
mov
xchg
sahf
inc
sub
xor
push
cmp
jl
in
mov
out
inc
lret
outsb
mov
lcall
xlat
lds
jnp
pushf
adc
pop
and
lods
ret
push
imul
mov
xchg
iret
cmp
nop
movsl
adc
push
test
or
int
mov
push
or
jbe
jb
into
cmp
jmp
stos
aam
push
out
inc
and
daa
mov
aaa
loopne
in
sub
and
pop
jnp
scas
repnz
sbb
adc
lea
mov
outsb
pop
movsl
addr16
and
gs
sti
or
sbb
and
lret
lcall
popf
pop
pop
cli
adc
dec
xor
into
pusha
mov
ljmp
pop
data16
in
dec
or
cmp
push
cmp
push
mov
rcrl
stos
rcrl
jmp
and
mov
aaa
test
sub
icebp
shll
jp
daa
popf
lea
pop
inc
push
fwait
cwtl
pop
loopne
push
stos
sti
imul
movsl
xchg
pop
clc
nop
xor
ss
cwtl
imul
fs
je
lea
inc
outsb
sub
cmp
mov
outsb
mov
mov
xor
repnz
cmp
repnz
sbb
fists
insl
lea
dec
pop
or
mov
orl
push
pusha
push
or
inc
es
fdivrl
out
xor
in
and
or
push
push
jns
push
push
and
xor
pop
sbb
notb
and
jle
imul
cmp
imul
jno
pop
pop
outsl
fiaddl
mov
and
outsb
lods
out
adc
add
cmpsb
cmp
int
mov
sub
aam
dec
jbe
int
js
jo
sahf
push
stc
push
and
lds
mov
outsl
mov
movsl
cld
pop
cmp
jnp
iret
mov
icebp
lds
test
jns
stos
or
mov
dec
fadds
cwtl
repz
testb
mov
sbb
or
or
jno
dec
mov
push
and
push
ret
loopne
sbb
inc
ja
jns
xchg
mov
xchg
pop
push
aam
out
fnstenv
lods
xlat
xchg
pop
xorb
mov
pushf
in
add
icebp
sbb
jp
dec
adc
adcl
lea
adc
rorb
mov
imul
fistpl
inc
inc
xchg
das
dec
adc
mov
sbb
cmc
adc
subl
sbb
loopne
outsl
pop
dec
out
mov
cmpsb
mov
pop
nop
out
add
adc
dec
bound
inc
xor
arpl
lret
popfw
inc
and
pusha
inc
cs
push
jle
inc
outsb
adc
or
mov
fisttpl
ja
mov
stos
xchg
js
jbe
aas
stos
aad
add
in
mov
in
enter
cmp
ret
ja
loopne
xor
int3
xchg
mov
pop
jp
stc
cltd
repnz
xchg
xchg
ja
xor
mov
dec
mov
mov
mov
pop
xchg
movsb
lcall
inc
mov
popf
mov
push
push
bound
enter
jle
mov
mov
loopne
fists
jmp
pop
sub
outsl
pop
in
mov
imull
xchg
dec
jmp
mov
in
movsb
inc
adc
lcall
outsb
jecxz
jl
xchg
outsl
fidivrl
rcll
xor
adc
hlt
mov
pop
push
mov
and
ds
push
or
lret
mov
jmp
xor
idivb
shlb
or
insl
adc
repnz
sbb
icebp
int
movsb
jo
adc
pop
mov
sub
sbb
xchg
cmpsb
imul
or
sbb
mov
sbb
pop
cwtl
add
push
sti
adc
push
imulb
in
dec
leave
frstor
cmpl
xchg
stc
in
xchg
mov
mov
push
pop
adc
dec
xchg
xor
xor
jbe
ss
nop
adc
jge
sbb
or
push
int3
insb
adc
mov
clc
gs
repz
jmp
lods
aas
xchg
lods
or
sub
pop
xchg
push
lods
bound
ss
bound
aam
push
lods
test
jmp
lock
outsb
lock
cltd
ss
daa
rol
sbb
ljmp
and
jbe
insb
push
gs
cmpb
push
adc
sbb
shlb
scas
aam
mov
mov
inc
lahf
sbb
call
fadds
cmp
push
cld
jns
fs
jno
push
adcb
ds
inc
pop
aas
out
and
inc
inc
ja
in
fiaddl
or
fldenv
add
nop
lods
ud1
sbb
push
jmp
add
cmp
popf
jp
sub
addr16
xor
mov
mov
int
cmp
fbld
jmp
lds
outsl
outsb
mov
pop
dec
adc
mov
xor
adc
fldenv
inc
pop
sbb
cmp
jb
roll
and
push
add
xchg
dec
call
sbb
mov
jg
dec
jo
fistpll
xor
dec
fists
hlt
mov
fcomip
mov
sub
sbb
stos
add
jl
notb
cs
arpl
cld
fidivl
ljmp
and
sbb
push
mov
jge
notb
lret
test
repz
adc
or
mov
dec
aad
dec
jae
adc
inc
dec
jmp
insb
add
push
loop
ljmp
rorl
and
les
adc
jmp
inc
pop
add
xchg
mov
xchg
pop
cltd
in
mov
inc
sub
mov
je
pop
aas
jne
adc
xchg
or
xchg
test
addl
mov
arpl
lahf
les
adc
ds
and
cli
pop
adc
cmpsb
add
insb
flds
add
mov
pop
mov
pop
hlt
jg
movb
dec
scas
mov
pop
jl
out
shrl
out
std
push
push
mov
movsb
add
push
xchg
mov
add
out
lods
add
and
popf
xchg
stc
mov
add
xchg
adc
das
icebp
loopne
mov
sub
pop
adc
bound
jmp
add
jmp
mov
sbb
inc
fnsave
loop
mov
xchg
ja
xchg
sahf
mov
fisttpll
cld
rcll
ret
or
ljmp
sub
rcll
fsubp
inc
cmp
xchg
ficoml
sbb
gs
je
xchg
lock
scas
les
dec
mov
nop
dec
push
iret
loopne
sbbb
ds
out
shl
cmp
pop
and
loopne
in
pop
jg
push
pop
jbe
cmpsl
xchg
xor
test
sarb
or
mov
xor
mov
repz
clc
fidivrs
add
pop
in
fsubrs
push
cmpsb
mov
dec
adc
loopne
je
mov
cmpsl
pop
mov
mov
sbb
sub
and
mov
xchg
cs
les
and
ret
ret
cmp
adc
push
jg
out
int
call
sub
xor
cmpsl
xchg
cmp
xchg
jns
pop
mov
test
fs
mov
mov
adcb
js
out
sub
imul
mov
jo
or
cs
inc
out
jp
pushf
ljmp
clc
xor
dec
sbb
outsb
aam
push
push
adc
cmpsb
mov
mov
xor
sub
sbb
xchg
inc
fdivs
fcmovbe
xor
addr16
sbb
fdivrl
sub
popa
mov
ja
push
ret
mov
push
out
xchg
sti
mov
loop
pop
xchg
push
mov
mov
test
aad
inc
mov
insl
xchg
shlb
push
fwait
dec
push
bound
fimuls
movsl
out
ja
das
rcl
jbe
cmpsb
mov
fs
movsl
jne
or
mov
ficoml
ss
repz
add
xor
lea
xchg
inc
call
aaa
sbb
pusha
jo
loopne
fs
in
in
and
ret
xor
cs
int3
les
in
popf
mov
and
mov
xor
cwtl
jbe
mov
pop
xchg
jecxz
cmp
daa
xor
js
and
cmp
sub
rcrl
or
ret
or
lds
push
imul
mov
mov
or
addr16
push
pushf
jns
adc
scas
out
mov
dec
xor
or
aaa
in
movsb
inc
or
ret
mov
pop
mov
nop
inc
mov
in
pop
sahf
inc
out
cmpsl
iret
ss
in
leave
mov
sahf
ja
out
imul
add
fs
cld
cld
arpl
mov
mov
dec
jle
pop
lahf
pop
and
sub
push
in
mov
call
iret
jmp
mov
iret
adc
enter
dec
fs
dec
leave
xchg
xor
jbe
sbb
mov
dec
fmuls
sbb
imul
gs
mov
pop
xor
mov
fcompl
nop
adc
inc
mov
jns
push
sub
jae
push
mov
int
in
pusha
leave
rolb
xchg
mov
pop
push
xor
call
cwtl
mov
int
ret
cltd
rcll
and
scas
dec
xchg
imul
lcall
fsub
movsl
mov
fsub
bound
sub
cli
xlat
aad
mov
aam
cli
mov
fdivrs
push
mov
and
jmp
lds
scas
dec
or
xchg
mov
pop
fcmovb
push
xchg
ret
mov
mov
inc
mov
jo
inc
xor
ds
in
jle
pop
dec
gs
jne
insl
xchg
push
popa
mov
movsl
xchg
je
cwtl
lret
or
pop
pop
sub
movsb
adc
adc
bound
inc
push
jg
or
int
stc
mov
push
and
mov
lods
aaa
sti
stc
dec
and
sbb
jp
push
lods
adc
and
sbb
jle
lods
push
inc
adc
xor
dec
test
mov
xor
nop
leave
jbe
inc
loop
mov
jle
loope
mov
adc
test
scas
int
addl
popa
xorb
adc
jp
mov
or
dec
cmp
inc
xchg
fmull
dec
jecxz
jl
sahf
and
scas
adc
cmp
stos
cmpsb
mov
rcll
mov
out
cmpsl
iret
sbb
loopne
pop
scas
inc
lret
cltd
outsb
inc
push
arpl
popa
pop
push
xchg
mov
int
jmp
cli
outsb
ret
leave
repnz
pushf
lock
ret
sar
xchg
xchg
xchg
pop
test
inc
testl
xor
loopne
not
mov
aaa
xor
fidivrs
jmp
sbb
and
mov
jmp
iret
jo
leave
cmpsb
bound
pop
mov
test
loope
cli
adcb
cltd
call
fimuls
in
stos
jge
xor
inc
xor
lds
or
lods
jb
ret
pop
cmp
mov
test
push
pop
sti
js
and
push
jmp
push
fs
cmp
out
jns
xchg
xor
push
sbb
stc
frstor
adc
push
lock
jae
mov
jo
enter
imul
xlat
rorb
in
ret
mov
addr16
pop
sub
xor
mov
or
xchg
lcall
outsb
pop
std
es
push
xor
cmp
fisubl
jae
sbb
arpl
aad
mov
add
add
mov
sbb
leave
cmc
aas
lea
test
push
aad
outsl
stos
dec
cs
out
rolb
push
stc
cld
jg
jnp
mov
hlt
movsl
mov
pusha
jge
and
adc
sbb
movl
ss
cmp
xchg
lock
cmp
inc
xor
sti
add
and
dec
aaa
insb
in
or
ficompl
jae
mov
jg
push
rcrb
add
xor
insl
mov
xchg
cwtl
dec
sti
or
rol
mov
or
out
dec
mov
push
jne
into
sahf
hlt
cmpsb
ja
xchg
pusha
pop
ss
jb
mov
adc
xor
jge
jbe
ss
push
mov
movl
push
fisttpl
sahf
sub
mov
cmp
ds
or
xchg
das
adc
imull
push
mov
cmp
clc
outsb
fldenv
cmc
sti
int
pop
lds
or
repnz
mov
push
sub
jne
cwtl
jl
lock
pop
push
jbe
aas
fldt
adc
dec
xchg
imulb
popa
add
call
or
sub
dec
cmp
xchg
jo
je
sbb
mov
and
pop
inc
mov
adc
ficoms
test
out
es
sbb
pop
outsl
inc
shll
mov
mov
inc
pop
mov
mov
push
inc
arpl
gs
sbb
into
cli
mov
push
sbb
xor
xchg
mov
jb
mov
popa
sbb
leave
notl
aad
jno
xor
imulb
lods
push
sub
lcall
cmpsb
cld
sub
mov
stos
inc
fstps
mov
ss
cmp
mov
lahf
sbb
xchg
hlt
add
pop
dec
or
sbb
cwtl
dec
call
out
cmp
and
ret
cmp
inc
loop
bound
jb
or
loopne
inc
cmp
lock
movsl
shr
mov
jg
inc
addl
jo
jne
mov
aad
cmpsl
int3
xchg
enter
push
sbb
push
jmp
cmp
pop
and
addl
jp
and
xchg
mov
lods
cmp
dec
pusha
mov
xchg
xchg
cmpsl
push
push
inc
icebp
cs
sti
out
clc
scas
xchg
and
mov
mov
push
adcb
mov
mov
gs
push
mov
xlat
sti
inc
cmp
xchg
dec
dec
sbb
incb
cmp
xor
mov
push
pop
js
sbb
ret
fnstsw
sub
mov
movsl
sbb
es
mov
push
or
xchg
popa
jmp
push
jge
jae
hlt
cli
xor
and
dec
sub
imul
xor
cmp
lcall
and
sbb
out
out
xorb
push
push
lret
movsl
insl
or
push
stos
loope
xor
and
jle
push
in
daa
pushf
push
scas
test
mov
lahf
inc
enter
cwtl
or
fisubrs
fcoml
cwtl
in
xchg
popa
mov
in
cs
in
loop
aam
outsb
sub
jnp
stos
bound
mov
xchg
inc
cltd
mov
ss
ljmp
or
fstpt
testl
dec
jle
dec
and
cwtl
loope
pop
or
mov
movsb
scas
pop
and
and
pop
lods
inc
jl
dec
jg
inc
ja
or
leave
dec
sarb
add
xchg
fwait
cwtl
adc
ds
push
ret
or
rcrb
fs
into
outsb
daa
fsubrs
dec
std
mov
add
and
mov
cmp
sub
mov
outsb
jae
jne
jae
ds
mov
scas
hlt
addr16
stc
and
ficompl
jb
sub
movsl
jmp
push
fcoms
xorl
sub
add
sub
iret
push
jecxz
addr16
lahf
jnp
inc
sbb
dec
sbb
inc
stc
pushf
aad
dec
ficompl
adc
pop
mov
inc
push
lcall
cmpsb
and
xor
jns
xchg
hlt
hlt
cmp
stos
xchg
ja
xchg
push
jnp
mov
loop,pt
or
jmp
idivb
xor
mov
push
adc
jg
sbb
bound
outsl
sbb
pop
inc
mov
std
jp
cmpsl
js
and
add
sbbl
lret
insl
sub
movsb
arpl
inc
add
inc
inc
out
xchg
test
adc
inc
movsl
xor
dec
xchg
push
xlat
push
rolb
mov
scas
aas
hlt
and
fiaddl
mov
push
enter
mov
add
inc
arpl
ja
je
cwtl
mov
jg
fisubl
in
adcl
inc
ds
mov
imul
bound
dec
lret
mov
mov
push
rol
pop
pop
sub
idiv
or
aam
mov
and
sub
add
and
jp
and
dec
sbb
sub
fld
dec
jbe
sarl
jo
jge
push
ljmp
mov
mov
push
jg
arpl
mov
inc
xor
lcall
pop
jbe
adc
push
enter
fs
pop
and
cltd
pushf
push
xchg
add
sub
mov
outsb
or
addb
int3
pop
scas
out
jae
add
sub
xchg
mov
jno
into
adc
pop
pop
or
sbb
dec
pop
loopne
xor
in
ljmp
faddp
sub
sub
lods
sahf
sub
fldt
dec
rcr
xor
in
pop
loop
inc
out
jae
add
fld1
and
cltd
fdivrl
cmpl
adc
xchg
xor
or
fucomp
inc
mov
dec
lcall
loop
xchg
mov
push
add
mov
adc
push
adc
outsl
xchg
mov
addr16
mov
xchg
sbb
mov
adcb
adc
add
and
pop
jno
aas
cs
popf
hlt
mov
cli
movsb
sub
lcall
lcall
inc
dec
sarb
mov
cmp
jae
in
cmp
popa
js
or
add
lock
mull
iret
adc
xchg
ds
jno
out
pop
sahf
jae
xchg
ja
lods
mov
lcall
mov
jns
dec
inc
loope
lahf
gs
lahf
and
inc
push
or
stc
scas
xor
sbb
pusha
inc
sub
jp
push
mov
inc
enter
stos
xchg
arpl
mov
mov
mov
mov
jb
mov
xchg
in
pop
inc
addr16
fstpt
fdivs
iret
outsl
xchg
pusha
sbb
cmp
and
jnp
aaa
sbbl
das
push
in
mov
sub
mov
mov
inc
sbb
sti
rorb
pop
cmpsb
xor
ret
xlat
repz
out
cmp
pushf
pop
inc
or
xchg
lea
ja
int
dec
aad
push
negl
adc
and
clc
push
test
jae
dec
add
sub
dec
xor
push
jp
inc
mov
das
ror
fisubs
aaa
push
mov
xchg
shll
addl
lahf
sub
scas
jge
add
cmpl
in
movsl
shrl
xor
ror
xor
pop
sub
adc
lods
xchg
loop
pop
das
insb
sbb
mov
pop
daa
mov
roll
xchg
lds
dec
sub
addb
mov
out
xor
aas
xchg
xlat
sub
sbb
or
inc
pop
in
test
stos
pop
xchg
nop
mov
pop
and
pop
mov
mov
lahf
test
lods
push
in
cli
ret
daa
and
xor
push
insb
js
sub
pop
repz
testb
shll
lods
stos
andb
cs
mov
aas
clc
mov
add
push
sub
cmp
mov
mov
cmpsl
pop
insb
aaa
inc
inc
adc
xchg
push
adcl
jbe
and
in
jmp
xchg
push
test
or
stos
repz
ss
clc
or
pop
push
xchg
daa
dec
mov
jmp
incb
mov
mov
inc
mov
sbb
dec
mov
push
aaa
lret
dec
addr16
lahf
sub
lods
bound
sub
pop
sahf
insl
jge
and
lret
rcr
xchg
dec
sbb
mov
push
cmpsb
xchg
outsl
mov
add
stc
lahf
inc
stc
add
and
daa
mov
addb
out
fs
aas
mov
xlat
repnz
cmc
hlt
pop
sbb
pop
cmp
mov
or
aam
popf
subl
and
mov
pop
leave
mov
mov
addr16
outsl
sub
dec
int3
cmp
cmp
xor
fldpi
or
mov
inc
push
xchg
add
int3
sub
outsl
cltd
repz
aaa
lods
sub
push
push
pop
fdivr
sub
jecxz
pop
shl
mov
ds
dec
add
or
push
jb
sub
pop
push
out
dec
or
scas
out
stos
add
and
jmp
mov
rorb
xor
ja
add
add
xor
rcrl
mov
ss
clc
lret
lock
cmc
mov
scas
data16
and
sbb
icebp
dec
arpl
add
pcmpgtd
cmp
sbb
push
pusha
mov
lret
call
ljmp
sbb
in
mov
adc
or
pusha
imul
push
popa
shl
mov
fiadds
inc
dec
xor
aas
pop
mov
test
dec
mov
and
mov
dec
and
stos
add
mov
shlb
inc
pop
xchg
dec
mov
mov
and
js
ficomps
js
pop
jp
clc
push
ret
mov
xor
adc
out
lret
mov
push
mov
cmp
mov
push
nop
nop
fwait
mov
jns,pn
out
push
xchg
cmc
push
mov
fsubrl
add
sahf
xchg
push
testb
in
inc
or
xchg
lds
mov
mov
jo
cli
in
cwtl
subb
into
push
int3
jb
fnstenv
insl
adcb
pop
pusha
lret
sub
loope
cwtl
xchg
pusha
inc
fidivrl
add
rolb
fmull
and
xchg
dec
bound
mov
inc
fwait
dec
loopne
jb
push
movl
adc
jecxz
fcmovu
jne
adc
ffree
xor
or
aad
add
pop
cmpsl
jnp
cmp
ret
enter
pop
rorb
imul
push
mov
lret
sbb
lods
ljmp
lds
mov
xchg
push
lods
mov
mov
test
cmp
cmp
adc
push
std
or
mov
test
ret
sbb
loop
les
jecxz
gs
pop
sbb
sub
mov
or
push
jb
lret
pusha
aad
pop
test
adc
pop
sti
add
repnz
mov
ret
xchg
and
sub
sbbb
xchg
pop
in
push
mov
aam
scas
test
xor
loope
mov
outsl
xor
xor
leave
testb
sbb
loopne
lahf
lahf
test
imull
data16
in
fildll
jle
loop
pusha
mov
stos
inc
rolb
cmpsl
xchg
fstpl
dec
xchg
movsb
inc
inc
sbb
cmp
lods
lods
in
in
cmp
sbb
jge
xor
js
and
incb
mov
and
out
scas
add
ror
adc
stos
cmpsl
push
dec
movsl
pop
sahf
negb
sbb
fcomps
rol
and
leave
dec
sbb
shrl
cmpsl
movsl
xor
sbb
in
test
jp
test
cwtl
pop
int
sub
xchg
dec
shlb
dec
stc
dec
adc
sahf
jae
or
lods
fdivs
out
popf
int3
cmc
sbb
jmp
test
lods
add
push
iret
pusha
mov
rcrb
daa
mov
std
out
into
push
subl
xor
in
xchg
or
pop
push
mov
popa
cmpsl
cltd
or
or
insl
cwtl
cltd
insb
int3
fcmovne
mov
cwtl
pop
notl
addr16
ficomps
ds
sbb
scas
sub
les
pop
pushf
cmc
inc
les
jns
mov
loop
bound
sbb
inc
je
out
push
leave
xor
add
adc
mov
mov
cs
mov
mov
xchg
push
repnz
stos
das
mov
mov
cmp
jb
test
out
test
fisubs
add
push
dec
pop
xor
in
jns
dec
push
data16
iret
imul
xchg
hlt
es
add
popf
sbb
shrl
mov
cmp
jbe
jmp
ret
mov
rcr
mov
clc
mov
mov
cmp
lods
int
shrl
sti
stos
incl
js
add
add
or
xor
iret
xlat
jns
xchg
dec
clc
mov
fs
arpl
aaa
imul
or
jge
iret
adc
loopne
xor
xor
loope
jbe
mov
je
lret
push
inc
iret
das
mov
pop
pop
inc
dec
lods
add
sub
ss
insb
mov
xor
imul
or
adc
orb
lret
xchg
xlat
decb
enter
sahf
add
lcall
or
jmp
mov
adc
std
push
pop
aaa
movsl
iret
sbb
ss
iret
xor
mov
es
popf
inc
test
adc
cltd
jmp
or
inc
rorb
xchg
aaa
dec
scas
cs
test
push
enter
lods
pop
pop
fsubrs
repz
and
push
in
js
ficoms
or
or
int3
xchg
mov
mov
and
insl
lods
xor
push
xchg
sbb
jge
sbb
adc
mov
lcall
ss
stos
movl
mov
inc
shrl
xor
xor
mov
cmp
dec
pop
ss
pop
call
adc
push
fmul
jmp
js
mov
test
mov
inc
xchg
jbe
hlt
jmp
adcl
ss
inc
popa
mov
jle
jb
and
data16
aam
dec
hlt
sahf
fadds
out
mov
adc
fdivrp
mov
scas
xchg
outsl
push
insb
adc
ja
jmp
cmp
cmpsl
push
cld
push
add
or
jns
add
mov
ljmp
test
mov
fwait
push
stos
push
pusha
jb
js
movb
cmp
out
adc
icebp
or
fsubrl
sub
sbb
xlat
adc
lret
mov
adc
xor
ja
and
inc
xchg
cmp
lret
cmp
and
in
inc
mov
neg
test
ljmp
test
test
mov
or
aad
test
cmp
das
cmp
mov
int
pop
mov
add
pop
mov
push
mov
and
lcall
clc
shrl
sub
xchg
repnz
imul
adc
out
pop
sbb
mov
out
in
sub
adc
adc
mov
les
loopne
ja
loope
popf
shll
inc
add
mov
daa
out
mov
lahf
comiss
and
stc
inc
mov
jb
mov
mov
mov
addr16
add
lds
dec
or
xor
dec
clc
sti
mov
fidivl
out
xlat
lahf
in
scas
mov
sahf
adc
ljmp
push
push
or
movsb
jp
xchg
add
in
sub
lret
mov
mov
cli
aad
xchg
sti
jbe
shlb
add
jg
hlt
mov
inc
dec
mov
jge
mov
popa
or
mov
sbb
jb
les
rol
jb
pop
stos
movsb
inc
add
mov
outsl
bound
mov
and
add
mov
mov
pop
mov
fmul
sbb
aas
mov
bound
test
cmpxchg
fiadds
mov
push
jbe
push
xor
push
rclb
lcall
test
les
pop
aaa
or
mov
push
loope
sub
mov
lahf
and
mov
leave
das
stos
aaa
in
mov
ds
inc
add
daa
in
pop
add
cli
notl
pop
pusha
xchg
sbb
cmp
jne
in
jp
xchg
test
push
sbb
fs
incb
imul
xor
mov
sbbb
push
ficomps
int3
push
rorb
push
orl
imul
push
adc
xlat
aaa
scas
sbb
bound
das
rcr
lret
or
or
jae
pop
adc
cwtl
push
pop
lds
mov
ficoms
aad
push
aad
cmc
rcl
inc
push
in
arpl
mov
mov
arpl
bnd
popf
into
and
inc
test
pushf
inc
pop
xchg
push
insb
sub
lret
jle
out
hlt
cmp
stc
adc
in
push
std
leave
out
imul
pop
imul
rcrb
jle
in
add
push
inc
into
xchg
xchg
into
in
out
cmpsl
mov
push
inc
out
and
xor
out
test
divb
xorl
pop
cld
aam
ss
lods
into
mov
ja
ret
lods
mov
mov
mov
xor
dec
jecxz
jl
mov
test
loop
ret
add
fwait
js
mov
aam
fwait
xchg
cmpsl
enter
jp
data16
cli
push
hlt
jecxz
out
inc
and
fdivs
jmp
out
roll
add
ret
xor
xchg
int3
jns
mov
in
sbb
cmpsl
in
pop
xchg
dec
jns
cmpb
mov
ja
cmpsl
dec
xlat
sti
jns
insb
sarb
add
std
lcall
inc
aaa
aaa
xchg
mov
jmp
shl
xchg
or
loop,pn
push
jbe
or
xchg
stos
andl
jp
insb
adc
rclb
mov
popf
cmp
ljmp
mov
push
mov
dec
sbb
fdiv
in
or
cmp
push
push
push
mov
and
dec
stos
pop
stos
in
lahf
add
xor
std
repz
mov
rcr
dec
out
pop
xchg
pusha
mov
flds
mov
dec
outsb
adc
pusha
fimuls
sbb
mov
xchg
in
push
xchg
push
push
fcom
mov
jbe
inc
popf
fnstenv
xchg
daa
pop
cmp
or
mov
jp
push
mov
iret
xor
lods
or
push
punpckhwd
dec
push
lcall
xor
clc
jp
ljmp
out
xor
ja
je
ja
cmc
filds
lcall
adc
repz
pop
leave
mov
movsb
xor
in
mov
or
movsl
or
push
push
int
xorb
push
cmpsl
jae
mov
jg
xchg
mov
test
cltd
pop
in
push
cmc
mov
ss
ret
bound
roll
push
and
dec
sbb
scas
prefetchwt1
push
cltd
dec
jae
lcall
stc
es
jl
sub
mov
mov
dec
packsswb
inc
push
in
lret
inc
mov
push
mov
sub
pusha
fisubrs
mov
mov
xor
ss
rclb
jns
xchg
jl
pop
out
xlat
dec
or
inc
mov
test
inc
fwait
mov
fstpl
pusha
loop
inc
add
mov
mov
repz
mov
add
or
popa
mov
imulb
movsl
mov
xchg
pop
xchg
insl
jmp
jns
mov
mov
fildll
aaa
xchg
aam
pop
jns
push
loop
icebp
and
cmp
adc
dec
cmc
sbb
icebp
sub
inc
mov
mov
cltd
xlat
adc
in
xchg
jb
movsl
sub
ljmp
das
xor
mov
je
popf
mov
jmp
aas
mov
ljmp
js
sub
mov
push
into
xorl
push
mov
fistl
add
push
dec
add
shlb
nop
popf
stos
int
sub
in
xor
cs
lods
lahf
outsb
mov
inc
fistl
fsubrs
sub
add
ret
jle
outsl
ret
xlat
imul
test
jb
repnz
and
xchg
push
xchg
les
test
xchg
cmpsl
pop
loopne
add
dec
jbe
in
sub
loopne
xor
pop
in
ljmp
push
cmp
int3
dec
push
ds
mov
pop
in
mov
std
ret
mov
popf
clc
daa
aaa
lret
inc
xchg
and
inc
inc
call
push
fadd
je
fnstcw
aad
sbb
addr16
xchg
jb
xchg
dec
ja
dec
popf
inc
ret
pop
lods
mov
fmulp
out
loope
test
in
adc
xor
jl
mov
cmpsb
addl
xchg
mov
sub
dec
or
sub
xor
mov
xchg
jecxz
dec
or
std
adcl
rcrb
sub
andl
pop
push
data16
sbb
in
dec
cmp
sub
and
stc
cld
mov
daa
pusha
repnz
jb
loopne
hlt
cwtl
aam
push
push
rcl
dec
ds
push
add
ljmp
js
mov
sti
add
testb
test
sahf
xchg
pusha
into
jns
dec
mov
mov
sbbl
movsb
dec
shll
mov
xchg
and
imul
sub
insl
rclb
gs
hlt
gs
mov
pop
adc
mov
lock
int
mov
inc
xor
pop
mov
scas
jmp
aad
stc
inc
add
testb
xchg
das
lret
mov
inc
sarb
mov
loope
mov
or
scas
and
sti
pop
into
pop
sbbb
or
repnz
leave
enter
mov
sbb
test
add
cli
pushf
sbb
cmpsl
inc
in
test
fidivl
or
aaa
ljmp
in
out
mov
pushf
jl
mov
repz
cmpw
pop
push
add
xchg
adc
aas
leave
sub
lret
mov
imul
add
pop
test
dec
inc
aaa
jno
adc
mov
push
lds
cmpsb
cmpl
jnp
daa
mov
jmp
sub
dec
adc
or
cld
mov
movsl
lret
mov
sub
repnz
jp
add
jle
mov
lahf
sub
sub
aad
xchg
xchg
fists
jg
sbb
and
orl
orl
out
inc
leave
les
cmp
mov
movsl
popa
xchg
or
push
pop
repnz
mov
std
jg
xor
add
mov
sub
push
xorl
test
jne
adc
pusha
out
jae
cli
or
nop
out
xor
je
aas
cwtl
out
arpl
xchg
js
add
cwtl
icebp
mov
into
cs
ret
xorl
xlat
jge
and
pusha
mov
sbb
sub
push
or
mov
mov
mov
mov
xor
repnz
and
shl
in
push
in
sbb
adcl
hlt
push
jg
notb
leave
shl
xchg
dec
in
pop
push
clc
cmpsb
cmpsb
dec
push
and
xor
inc
mov
cmc
mov
jp
imul
push
shlb
fdivrp
xor
into
out
inc
repz
fisubl
gs
pop
bound
mov
mov
pop
mulb
or
xchg
push
jl
and
add
int
in
lret
enter
stos
imul
outsl
leave
jbe
fscale
mov
test
add
das
mov
jmp
sahf
xchg
push
movsl
mov
jbe
je
lret
push
int3
mov
pop
pop
iret
mov
xlat
jnp
dec
fmull
push
ret
shrl
hlt
fstpl
leave
iret
mov
lahf
or
ljmp
je
shrl
mov
add
xor
dec
xor
lret
aam
sbb
ljmp
xor
leave
pop
cld
mov
notb
pushf
push
adc
fsubl
mov
mov
lret
push
xlat
or
ss
ja
push
repz
cmpsb
arpl
idivl
rclb
sti
arpl
mov
addb
or
push
out
or
pop
int3
mov
sub
aad
mov
andl
inc
mov
jne
xlat
xor
mov
dec
sbb
std
in
adc
mov
or
inc
mov
mov
push
mov
iret
xor
jmp
xlat
in
pop
dec
pop
mov
lock
fwait
test
lods
xchg
sbb
test
sar
out
mov
inc
jns
cltd
lret
fwait
jnp
inc
push
mov
outsb
notb
or
xchg
loop
and
pop
enter
inc
mov
jle
scas
push
rcll
imul
or
pop
jno
sub
mov
les
xchg
aad
insl
jbe
push
adc
orb
inc
lods
stc
pop
and
xchg
mov
jbe
dec
sarb
dec
mov
or
xlat
pop
ss
mov
sbb
xchg
orl
dec
adc
jg
ljmp
loope
sti
cmp
sahf
mov
push
mov
adc
push
adc
push
jecxz
xor
pop
adcb
lret
lcall
cmp
dec
and
rclb
insb
mov
pop
leave
ss
out
mov
and
cmpsl
and
jb
cwtl
lock
adc
lret
out
sti
and
push
dec
and
or
mov
mov
test
mov
jo
or
pusha
inc
ljmp
cmc
inc
mov
pushf
movsb
sbbl
sbb
arpl
adc
mov
rcll
xor
push
mov
shrb
rcr
xorl
lret
sbb
or
jae
dec
mov
or
mov
pop
push
fbstp
mov
bound
pop
push
jnp
and
movsb
lret
mov
push
leave
fists
nop
lea
jbe
pop
mov
out
and
fs
enter
ret
adc
mov
fistps
fwait
out
pop
or
in
lods
ret
arpl
xchg
test
push
popf
mov
lds
mov
jp
dec
and
pop
ljmp
std
mul
jae
fldenv
push
push
mov
dec
mov
cmp
rorb
and
or
add
aaa
mov
clc
int3
mov
xchg
mov
or
and
adc
loopne
pop
jmp
das
test
mov
addr16
xlat
cltd
cmc
push
stc
sarl
ds
mov
dec
lret
sub
stos
xchg
xchg
je
adc
mov
xor
add
jo
aaa
or
mov
imul
dec
and
call
inc
or
or
clc
mov
xor
adc
insl
jmp
cmpsb
dec
push
add
mov
pop
bound
adc
in
gs
push
mov
sti
stos
xchg
iret
inc
sbb
and
outsl
arpl
sahf
sti
mov
and
out
mov
mov
push
or
into
xor
rcll
mov
std
gs
jmp
add
or
mov
call
and
imul
cmp
sbb
mov
ljmp
leave
jp
and
inc
rolb
sarl
lods
xor
xchg
jbe
lea
or
mov
scas
jge
outsl
pop
test
fcomps
push
mov
lods
cld
outsl
data16
stc
jge
test
ret
push
xchg
ficoml
loopne
inc
dec
xor
popl
loop
mov
stos
and
fisttpl
out
mov
adc
imul
jg
jmp
jge
mov
out
clc
mov
pop
lds
mov
roll
mov
fiadds
or
jle
mov
fidivl
push
push
std
std
dec
add
xchg
cmp
scas
xchg
mov
lret
push
xchg
adc
daa
xor
jg
cmp
mov
cmpl
sub
xlat
dec
sub
outsb
inc
pop
pop
daa
js
jecxz
adc
cli
xor
pop
aaa
incl
out
imul
popa
jp
loop
cmp
bound
aas
and
cld
loopne
pushf
or
cld
outsl
bound
nop
inc
dec
loopne
out
out
pop
jge
cwtl
lods
or
fxtract
jbe
std
jnp
mov
jne
inc
mov
es
xchg
or
pop
and
loope
shlb
mov
iret
int
push
mov
inc
sub
adc
sub
mov
lea
push
test
push
aam
in
push
pop
dec
iret
push
adc
mov
sbb
ja
jo
mov
jne
movsl
mov
test
mov
xor
mov
std
in
bswap
jmp
stos
mov
lahf
push
aas
lret
subl
jg
pusha
ja
push
push
adc
cmc
adc
cmp
int3
push
dec
arpl
cmp
stos
push
mov
inc
xchg
xor
mov
mov
dec
sbb
sbbl
cmp
jnp
test
dec
ljmp
jo
inc
dec
fmull
sub
into
popf
fadd
aam
enter
xchg
pop
test
cli
dec
dec
jp
jmp
push
in
mov
xchg
cltd
adc
push
hlt
repnz
int3
cmp
in
or
push
mov
popf
mov
xlat
les
stc
pop
stos
sbb
jmp
lea
fsubl
in
sti
ja
fldenv
add
xor
repz
pop
jns
outsl
and
mov
ljmp
call
xor
lds
stc
and
jg
aad
clc
cltd
adc
push
or
call
cs
add
xor
jb
mov
adcl
outsl
xor
arpl
adc
add
stc
lret
and
xchg
outsl
das
cli
rcll
pop
movaps
insb
test
lret
movsb
xchg
test
jl
mov
daa
mov
xor
adc
popa
test
aam
enter
adc
xchg
jmp
imul
sub
mov
mov
lock
cld
into
mov
fld
jb
fwait
inc
sub
add
shr
test
push
iret
dec
lret
jno
and
jle
xchg
int3
popf
imul
mov
mov
cmp
inc
push
rolb
int3
into
mov
push
mov
and
sbb
pusha
and
sub
inc
or
xor
repz
pop
jecxz
loopne
inc
js
lret
shlb
xchg
xlat
pusha
xlat
sbb
cmpsl
mov
pop
mov
jnp
jg
shl
cwtl
js
mov
and
lds
jg
push
movsl
imul
shl
push
mov
jg
stos
dec
notb
aas
lods
add
inc
xlat
sbb
test
roll
push
lock
sbb
arpl
inc
daa
lods
sub
jo
mov
push
cmp
jne
outsl
lods
in
in
or
mov
pop
and
or
push
or
xchg
jmp
ret
and
xorb
lcall
lock
or
movsl
xor
lahf
test
jp
addl
xchg
jbe
sar
add
dec
mov
call
push
lret
mov
aad
push
lods
ret
movsl
out
dec
or
lcall
xchg
out
out
shufps
cmpsl
sahf
in
adc
fsubs
dec
lret
negl
sti
mov
cwtl
push
or
test
inc
dec
xchg
fstpt
jo
aad
mov
mov
sub
sahf
push
or
xor
arpl
mov
cwtl
hlt
dec
or
or
mov
and
push
dec
call
xlat
xchg
pop
bound
xor
imul
mov
popa
inc
pop
dec
mov
or
lcall
xorl
pop
mov
mov
js
jg
jno
movl
out
xchg
dec
repz
pop
cmp
mov
shll
push
rol
push
sbb
leave
in
fisubs
or
popa
data16
pop
push
push
loopne
mov
mov
lahf
nop
xlat
pusha
imul
cld
je
mov
mov
jecxz
pop
dec
add
mov
push
or
sbb
jge
iret
mov
pushf
arpl
cmpsb
jns
cld
mov
lret
jmp
jno
shl
movsl
jge
test
cwtl
out
or
push
dec
shrb
fs
aas
pop
pop
mov
int
inc
pop
sub
jne
xor
inc
mov
mov
call
adc
xchg
popa
jl
adc
sbb
std
ja
push
add
ja
movsl
js
aaa
into
call
add
jge
dec
cs
or
xchg
loopne
jecxz
xor
data16
push
rorb
ds
and
sbb
xchg
xor
pop
mov
ret
popa
js
xor
mov
jns
js
gs
inc
or
jecxz
iret
mov
and
repnz
cs
sub
mov
push
jp
inc
mov
in
adc
or
cwtl
out
push
sbb
sbb
sti
xchg
jns
xor
repz
aam
ret
dec
cld
test
or
jae
mov
gs
mov
inc
pop
and
stc
aas
add
and
incb
dec
sarb
push
mov
adc
mov
out
pop
int
fs
aam
test
mov
sbb
out
xchg
in
xlat
push
addr16
xor
push
push
dec
stos
add
test
push
pop
mov
inc
mov
push
ljmp
jne
xor
shll
int3
mov
dec
in
rcll
and
sbb
leave
inc
int
inc
mov
sbb
out
stc
popf
xchg
in
cltd
arpl
cmp
push
bound
fsubs
push
jp
neg
inc
test
adc
push
iret
outsb
fwait
leave
cwtl
pop
xor
aaa
int
enter
or
in
rol
dec
cwtl
inc
fwait
pop
and
fstl
test
call
in
or
jge
pop
add
jle
inc
jg
push
and
lret
rol
jge
jne
xor
leave
repnz
int3
dec
pop
xor
enter
rclb
xor
xchg
cmpsb
sti
xlat
inc
push
cld
jns
pop
mov
mov
out
xchg
xchg
and
mov
in
sar
fstps
rorb
push
adc
rorl
js
add
push
mov
fiaddl
sbb
hlt
adc
loope
mov
xchg
pushf
test
mov
mov
idivb
inc
cmpb
mov
dec
dec
sti
lods
cld
icebp
ja
sti
hlt
int3
gs
dec
imul
inc
test
lea
pop
call
lret
jbe
fs
gs
mov
sbb
jno
add
out
cmp
testb
sbb
sub
cwtl
jne
int3
xchg
dec
dec
sub
repnz
pop
enter
sbb
and
add
or
les
outsl
ds
jo
adc
sahf
add
dec
add
inc
pop
cli
jle
add
stc
mov
xchg
adc
cld
pusha
scas
jb
shll
fcoml
les
in
mov
add
dec
shr
xor
add
mov
cwtl
xor
rclb
sbb
or
sbb
call
mov
and
cwtl
std
imul
push
sub
mov
mov
popa
jle
loopne
aaa
fisttps
xchg
ret
ret
pop
mov
in
cmp
xchg
fwait
jbe
test
es
lock
push
mov
pop
mov
in
in
adc
mov
shl
lahf
aad
jns
js
imul
adc
sbb
pop
cli
stos
loopne
adc
xor
lret
sub
push
rcrb
xchg
xchg
movsb
or
std
mov
jmp
mul
or
xor
adc
sahf
push
in
inc
sbb
lret
sub
adc
sbb
loop
mov
jmp
rorl
mov
sbb
test
in
mov
movsl
sbb
rorl
xor
cmp
enter
popf
fisttpll
pop
shrb
cmc
and
insl
cmp
mov
lahf
out
cmp
lods
pop
jge
inc
out
fiadds
sub
je
mov
dec
test
sbbb
es
or
and
inc
stos
out
in
jecxz
sbb
sbb
mov
hlt
in
loop
adc
push
dec
mov
call
xor
in
cmp
sbb
or
and
outsl
repz
mov
adc
cmpsb
ss
jl
pop
dec
test
push
clc
rorb
mov
mov
xor
jecxz
pop
or
inc
idivl
push
fdivl
push
into
pop
push
mov
outsl
stos
inc
inc
mov
loopne
push
jbe
lahf
sti
mov
ret
test
int
push
mov
pop
mov
pxor
add
mov
rorb
cmp
sbb
and
bound
lcall
mov
or
add
lds
stc
data16
jne
cmp
addr16
fsubs
std
mov
jne
cmpsl
dec
jnp
and
pop
rorl
push
dec
fidivl
lods
and
sub
sub
out
adc
cmp
out
push
les
pushf
add
aas
sub
mov
movl
fs
add
xchg
cltd
jle
pop
nop
sub
scas
enter
mov
xchg
bound
cltd
push
sti
fldenv
in
pop
jecxz
cmc
inc
inc
mov
dec
sub
repz
aas
cmp
loop
in
js
sub
mov
mov
lea
cmpsl
cmovs
dec
inc
outsb
imul
daa
into
mov
ljmp
adc
xchg
adc
nop
push
add
cmp
arpl
push
mov
aas
das
mov
fisttpl
imul
mov
mov
loop
or
add
das
lock
daa
inc
cwtl
cli
je
push
dec
jl
scas
and
inc
cmp
mov
ds
dec
mov
mov
jge
pop
push
aas
mov
sbb
jb,pn
sub
cmp
push
xchg
iret
stos
and
jb
xchg
cwtl
fstl
jecxz
adc
adc
mov
scas
dec
lds
sbbb
enter
dec
sbb
test
jae
mov
push
dec
mov
add
dec
mov
xor
imul
mov
lahf
mov
lds
mov
lahf
mov
xor
test
and
bound
insl
aad
pop
xor
cld
jo
xchg
icebp
jne
xchg
data16
addl
push
les
in
pop
cmp
addb
out
mov
mov
mov
add
push
xchg
xchg
xor
push
in
dec
mov
push
pop
insb
sbb
push
mov
ja
movsb
xorb
ror
mov
inc
mov
and
in
outsl
push
pop
fs
sub
sbb
dec
hlt
pop
mov
das
cmp
lods
pushf
jl
add
sub
out
lods
jle
jecxz
and
pop
jge
icebp
icebp
popf
push
test
shlb
outsl
decl
jnp
cmp
jecxz
add
adc
ret
cs
loopne
inc
mov
movsb
pop
mov
cmp
loope
dec
pushl
adc
push
cmpsb
fstps
cli
pusha
cwtl
enter
dec
jns
cmp
push
hlt
xor
sbb
leave
inc
or
cmp
bound
mov
xchg
or
cld
cmp
cld
mov
andl
in
test
push
inc
nop
xor
or
testb
movaps
mov
inc
xchg
mov
xchg
scas
ficoml
lret
mov
lcall
fldcw
jbe
sub
pop
pushf
xchg
cltd
mov
and
shlb
bound
jp
cmp
jl
jbe
cmp
in
mov
mov
push
cli
dec
mov
sbb
push
mov
leave
dec
sub
popa
orl
stc
push
xor
sbb
fistpl
dec
das
mov
outsb
cmc
push
int3
enter
out
stc
push
sub
or
pusha
rclb
aaa
push
inc
mov
repz
push
sub
xchg
out
add
ds
sbb
or
fcoml
dec
xchg
xchg
push
jb
mov
lahf
lahf
divl
and
cmp
outsb
xor
sahf
push
push
cmpb
pop
mov
incl
dec
pop
xchg
stos
lods
cmp
incb
mov
lahf
sbb
mov
hlt
jno
mov
push
cmpb
leavew
je
fxam
xchg
xchg
mov
arpl
dec
xor
adc
xor
cmp
mov
nop
push
leave
movsl
insb
sub
pop
enter
push
hlt
push
and
lret
inc
cmp
in
fbstp
sub
dec
fcmovne
inc
push
push
lea
movsb
jp
daa
clc
jne
lret
mov
enter
movsb
enter
inc
nop
rcll
out
inc
jecxz
cmp
jne
popa
jge
into
in
mov
repnz
cmp
mov
int
fcompl
addr16
mov
stc
daa
jl
dec
das
xchg
xchg
adc
call
xor
jb
fiaddl
roll
pop
cmp
mov
mov
mov
dec
mov
cmpsb
sbb
push
nop
mov
repnz
fcmovbe
pushl
xchg
sub
leave
push
jbe
pop
push
push
dec
into
stos
pop
mov
jo
mov
ljmp
dec
outsl
pop
sbb
neg
sbb
rcll
fldl
jg
xor
xchg
aaa
sub
in
mov
pop
jo
ja
in
pop
decb
adc
mov
rcr
icebp
push
shrl
scas
or
lods
pusha
adc
adc
inc
inc
xchg
pop
or
lods
mov
lds
cmp
ds
push
xchg
jne
dec
xor
fs
push
pop
push
aaa
gs
push
jne
adc
fnstcw
mov
std
xor
dec
jmp
mov
sbb
sub
fcomp
call
insl
mov
test
outsb
sbb
add
lods
fs
jg
je
cli
es
test
mov
std
int3
xlat
xor
loope
shll
daa
sbb
fiadds
fcomps
cmp
call
mov
inc
mov
mov
jno
or
enter
movsl
fdivs
in
cltd
pop
jns
jl
sbb
mov
adc
mov
insb
sub
cmp
ret
adc
je
xor
mov
jg
sbb
stc
out
aad
stos
js
pop
and
sbb
dec
xor
sub
fmull
adc
dec
adc
or
int
mov
gs
jp
movsl
mov
mov
push
jae
inc
scas
pop
sahf
mov
mov
sbb
dec
mov
add
inc
sbb
add
pop
out
xchg
shrl
push
jns
pushf
pop
int
in
lret
mov
test
xchg
mov
mov
sahf
bound
js
repz
ja
popf
fs
inc
push
jmp
je
xor
jae
ljmp
les
dec
fucomi
cmp
dec
arpl
add
xchg
and
and
xor
jl
mov
lret
and
pop
test
dec
push
push
addl
pop
addr16
push
adc
mov
pusha
dec
ja
mov
pop
mov
jne
gs
dec
negl
mov
dec
adc
out
mov
and
lds
cmp
lock
pop
push
jbe
stos
push
mov
fs
push
dec
xchg
data16
lret
jmp
mov
mov
movsb
mov
inc
add
lret
push
test
shlb
pop
movb
inc
dec
fldcw
inc
jge
xchg
pop
icebp
iret
aas
jnp
inc
push
insb
inc
mov
ret
adc
mov
ljmp
lock
jo
push
fmuls
adc
lds
mov
scas
push
push
xor
gs
xor
daa
popf
fdivrs
je
push
dec
pusha
fmul
mov
push
xchg
aam
pop
loopne
shll
push
lea
add
sti
jecxz
mov
mov
mov
sub
mov
mov
rcll
sub
out
jp
sbb
adc
roll
cwtl
ficomps
iret
test
test
lock
je
mov
cmp
outsb
or
fwait
push
xor
adc
mov
sub
orb
repz
out
and
push
mov
inc
xchg
pop
cmc
insb
cmp
rol
mov
daa
lret
pop
in
jecxz
mov
jae
dec
loop
fldl
pop
movsl
inc
enter
pop
nop
fsqrt
dec
sahf
jno
sar
insb
outsl
mov
adc
sahf
sbb
pop
dec
xor
mov
fs
push
aad
adc
lret
ja
outsb
fwait
insl
add
push
mov
xchg
mov
sbb
inc
xlat
or
sbb
jb
mov
jo
aaa
arpl
repz
ljmp
mov
mov
test
jmp
test
or
push
test
inc
cltd
jmp
mov
add
adc
addr16
std
add
stc
add
mov
push
rol
das
adcl
scas
mov
outsb
adc
add
lret
mov
lock
test
sbb
sub
or
popf
mov
dec
out
cwtl
add
testl
mov
ljmp
jne
adc
lea
xor
ljmp
call
in
mov
dec
flds
lds
dec
jle
cmp
nop
xchg
fcomps
popf
cmp
es
idivb
scas
cmpsl
push
ret
dec
rorl
test
daa
dec
cmpsb
shll
dec
cmp
subl
mov
cmpsl
call
lahf
cwtl
jge
mov
add
imul
icebp
int3
loop
lret
cmc
mov
add
pop
cmp
pop
pusha
and
lock
lret
pushf
push
push
pushl
fisubl
and
test
ret
dec
cs
add
fisttpll
and
inc
mov
test
mov
xor
aam
add
sub
sahf
pop
cld
aad
mov
lahf
sbb
xor
add
xchg
pop
lods
mov
add
daa
xorl
pop
xor
or
push
stc
mov
mov
xorb
fmul
xor
add
sahf
fisubs
jne
sarb
addb
xor
dec
out
mov
mov
and
add
arpl
sbb
shrb
push
push
lock
je
mov
add
fdiv
cmp
stos
pop
lcall
es
out
jo
pop
enter
out
cmp
xor
fwait
ret
mov
out
inc
gs
mov
xchg
lock
sub
aam
fisttpll
xor
dec
sahf
out
leave
ror
dec
push
outsb
out
push
mov
movsl
sub
sub
movsl
mov
jmp
out
icebp
mov
adc
call
xorb
pop
push
mov
push
cs
cmp
stos
stos
popf
jl
sbb
cld
sbb
hlt
insb
cmpsb
aas
xchg
or
adc
lock
repz
mov
jnp
jge
mov
xorb
cltd
pop
jp
cmp
dec
sub
cli
jb
fs
pushf
pop
ror
ficompl
jp
lcall
mov
cmp
sbb
cmc
rol
out
into
xchg
jno
popa
ss
movsl
push
inc
xchg
popa
push
js
mov
test
fisubrl
mov
push
ja
push
in
xor
lret
lea
rcr
pop
mov
push
push
mov
mov
cli
or
inc
aam
adc
and
test
add
stos
inc
fadd
leave
jg
jle
mov
sbb
xorl
movsb
repz
pushf
inc
lock
cld
cmp
xor
adc
sub
shlb
gs
scas
pop
push
mov
add
mov
int3
sbb
lds
in
sub
aam
jge
xchg
scas
movsl
lods
sarl
or
stos
leave
fdivl
xchg
mov
adc
adc
jecxz
scas
dec
sbb
cmp
xchg
loopne
cltd
xchg
loop
add
xchg
jmp
mov
jne
pop
out
cmpsb
jmp
aam
pop
cmpsb
mov
out
sbb
fisttpll
incl
inc
out
mov
mov
out
or
hlt
pop
negb
push
out
cs
test
push
ss
popa
sbb
je
rolb
outsl
test
dec
cmc
jp
scas
std
mov
imul
into
cli
mov
xor
test
lods
fdivrs
push
cmp
jp
xor
sahf
sub
and
cmp
add
leave
clc
sahf
iret
jle
xor
es
aaa
hlt
fwait
pop
mov
mov
add
sbb
mov
pusha
data16
mov
lds
mov
mov
adc
test
push
sub
loope
ljmp
xor
jp
data16
fucomp
stos
aad
dec
jl
popf
std
mov
inc
scas
push
ret
inc
addr16
dec
out
sbbb
or
push
xor
xchg
jmp
aad
sbb
inc
push
cs
mov
fwait
sub
cli
pusha
xlat
fs
xor
out
and
xor
frstor
fistpl
xchg
std
repz
sti
ds
xorb
sti
xor
cltd
mov
idivb
rcrb
add
mov
mov
imul
call
and
sub
stc
pop
imul
and
dec
pop
add
mov
add
adc
lret
jle
and
sub
popf
pop
push
mov
call
loope
adc
clc
xor
mov
fldl
fmuls
fs
cmc
mov
or
rcrl
xchg
adc
mov
mov
or
cmp
ljmp
jbe
mov
repnz
mov
push
mov
xor
jae
popf
and
inc
mov
cltd
test
mov
push
repz
movsb
push
imul
or
adc
lods
mov
mov
bound
imul
jnp
inc
stos
xchg
cmpsb
sub
arpl
inc
cmp
fiadds
mov
arpl
aad
jae
dec
sbb
insb
shlb
pop
test
adc
cwtl
adc
cmpsl
sahf
das
mov
inc
xlat
pop
pop
repnz
repz
mov
mov
or
dec
sub
outsl
test
movsl
int
mov
cmp
bnd
insb
inc
into
xor
enter
fcomip
mov
int3
nop
lret
dec
mov
flds
inc
sbb
xchg
add
repnz
fstp
mov
mov
mov
movsb
push
leave
inc
das
hlt
outsb
test
push
lret
test
sti
movl
push
idiv
jl
fdivrs
push
sub
mov
jle
or
push
fnstenv
loop
mov
test
add
mov
aas
push
mov
cmp
adc
push
or
loop
cmc
jbe
ret
nop
inc
aaa
outsl
pop
mov
mov
rclb
mov
aam
inc
pop
loope
sbb
shrb
ds
push
popf
out
fidivrl
dec
push
enter
inc
or
fisubs
xor
imul
jae
cmpsl
inc
dec
enter
fmuls
and
ficompl
jns
pop
inc
jl
ljmp
lock
or
mov
adc
repz
mov
jle
push
jo
jo
mov
xor
imul
mov
adc
push
out
mov
rolb
loop
das
arpl
mov
or
cmp
xchg
pop
aas
hlt
pop
mov
or
add
cli
and
popf
fstpt
and
jb
aas
test
out
sahf
pop
inc
sub
out
add
jmp
daa
cltd
cld
add
pop
pushf
jbe
add
push
adc
ret
testb
jmp
xor
aaa
mov
xor
or
inc
xchg
mov
das
repz
dec
sbb
test
push
inc
test
xchg
jnp
jnp
sbbl
cmp
inc
mov
adc
je
std
adc
dec
ds
dec
push
fwait
idivl
sub
xchg
push
clc
jmp
stos
xor
cmpsl
inc
adc
addr16
xchg
cmp
js
rcl
mov
cmp
in
movsb
fisubrs
mov
mov
and
dec
push
and
push
lret
cmp
push
jle
leave
mov
fst
out
ljmp
pop
icebp
scas
add
lds
movsb
mov
sbb
mov
sahf
jge
cs
and
pop
test
pop
into
lods
adc
pop
jb
pop
xchg
icebp
ret
dec
mov
mov
cmp
mov
inc
jns
negb
rcll
lret
dec
jp
inc
xlat
mov
in
mov
xor
lds
inc
xchg
xchg
cltd
aaa
sbb
or
xchg
xor
icebp
fwait
ret
in
test
imul
mov
popa
dec
sbb
in
sbb
xchg
out
jg
mov
outsb
cld
add
and
jne
mov
cmp
ret
sbb
push
in
js
in
clc
imul
or
arpl
stc
outsl
mov
mov
add
ret
into
push
dec
fadds
mov
dec
mov
mov
loop
lock
shr
cmp
lcall
pusha
add
test
inc
or
adcl
aad
int
jmp
ss
mov
ja
mov
repz
xor
add
push
mov
inc
fistpl
dec
jge
scas
jo
pop
cli
movb
fcomi
adc
mov
pop
xchg
sub
fidivl
inc
xchg
mul
or
mov
mov
dec
outsb
and
addb
int
cmp
adc
nop
xorb
mov
or
xor
jb
sub
out
add
fldl
arpl
pop
rolb
jb
jns
enter
testb
add
fisubl
push
inc
lock
jns
dec
repnz
jmp
mov
pop
out
lock
fwait
insb
das
pushf
repnz
xor
lret
bound
nop
iret
les
lcall
jmp
xadd
imul
shrl
cmp
fdivrp
cmp
or
lods
mov
in
and
add
enter
andl
call
sub
or
xchg
daa
call
mov
or
test
enter
or
dec
cli
push
push
xchg
mov
jg
mov
cmp
xlat
pusha
sub
add
xchg
jae
idivb
shrl
sbb
cld
inc
test
mov
cmpsb
xchg
jmp
sbb
outsb
or
pop
int
or
push
cmpsl
cwtl
adc
popf
idivb
mov
scas
insl
adc
bound
rol
imull
mov
and
aam
shrb
push
push
out
adc
fbld
iret
sbb
push
fwait
mov
in
mov
jns
adc
inc
pushf
or
xor
mov
cmp
push
xor
clc
popf
leave
mov
out
jnp
mov
sub
dec
jbe
sub
scas
and
fnstcw
out
dec
cmp
push
or
movsb
push
push
into
push
push
pushf
mov
cmpsl
mov
std
fistps
mov
jmp
stos
push
das
out
scas
mov
jge
jg
pusha
pop
fs
into
inc
pop
loopne
fxch
sti
mov
das
int
mov
test
lock
sahf
inc
mov
test
les
jmp
push
sti
inc
or
out
ds
xchg
dec
mov
mov
pop
push
in
mov
ja
pop
jbe
mov
or
dec
xchg
cmc
push
pop
mov
shll
fistl
mov
mov
and
or
lret
xorl
add
xchg
adc
inc
out
dec
loope
cmp
mov
aas
mov
jne
xlat
mov
sbb
push
inc
inc
loopne
push
push
nop
test
and
lahf
mov
in
mov
sarl
pop
pop
aas
mov
push
xor
mov
push
sub
xchg
es
xor
xchg
sbb
inc
mov
je,pt
push
dec
addr16
sbb
add
pop
pop
adc
fwait
aas
sub
cmpsb
sub
aad
pop
repnz
sbbl
adc
dec
stos
out
fldcw
xchg
add
xchg
adc
pusha
fdivs
jg
cld
mov
mov
adc
fcompl
int
dec
scas
decl
popa
push
dec
mov
adc
push
out
xlat
push
hlt
pop
movhps
dec
loop
aam
jo
cmp
inc
loopne
lea
aas
movsl
sbb
aam
mov
and
mov
jo
inc
xchg
mov
push
jl
shll
leave
stc
iret
pusha
cmc
into
lret
dec
mov
dec
mov
mov
je
lods
lcall
test
pop
pop
inc
mov
dec
cmpsb
and
mov
stos
and
jge
mov
push
push
std
jle
ljmp
mov
jbe
jecxz
leave
jecxz
or
sbb
orb
jo
jbe
mov
sub
xchg
iret
fsubrp
xchg
xchg
and
jbe
in
arpl
stos
dec
scas
or
call
ljmp
mov
outsl
fldl
xchg
into
clc
jg
lret
loop
push
or
lret
fndisi(8087
inc
sbb
add
aaa
dec
in
gs
fsubl
dec
pusha
jmp
js
sar
lcall
movsb
mov
fwait
insb
std
adc
jae
sub
push
lret
push
sub
sub
or
fs
mov
loopne
dec
push
inc
dec
ret
gs
push
xor
push
icebp
or
mov
or
xor
adc
arpl
xchg
les
cmp
ret
fdivrs
push
mov
mov
rcr
xorl
mov
sti
mov
sub
pop
in
mov
test
inc
fwait
and
bound
fcomip
push
cmp
aad
mov
clc
loop
dec
hlt
loopne
adc
inc
mov
in
inc
adc
ja
fucomp
mov
mov
mov
mov
lret
mov
jb
in
inc
leave
sti
xor
mov
adc
testb
mov
test
adc
cmp
jl
cs
push
loopne
imul
jbe
in
jae
and
xchg
lret
imul
pop
test
lds
es
mov
pop
mov
jmp
test
push
rcrb
insl
out
sub
fdivs
in
cmp
arpl
cmp
jnp
mov
or
pop
daa
inc
and
sub
adc
push
xor
inc
clc
data16
scas
mov
call
fisttpl
aam
leave
movsb
mov
mov
lds
inc
pushl
hlt
jne
push
adc
ja
lea
aad
jmp
loope
test
mov
xor
aas
adc
nop
jnp
dec
mov
or
or
sub
fstps
jne
fs
push
shl
mov
add
ficoml
scas
cmp
call
xor
jl
out
inc
and
sbb
push
nop
or
cmc
sub
cmp
push
ss
mov
aam
pop
push
in
push
fstpt
shlb
adcl
push
cmc
mov
xchg
ljmp
sbb
test
xchg
pusha
call
jnp
inc
pusha
jbe
insl
inc
xchg
scas
imul
sub
jne
xorb
dec
sbb
xchg
lahf
mov
loop
and
pop
insb
pop
xchg
mov
dec
test
push
mov
add
aam
push
adc
sub
add
pop
ficompl
xchg
and
fwait
inc
xor
xchg
repnz
popa
push
adc
outsb
test
push
or
sub
jle
pop
cmp
icebp
arpl
in
jne
or
pushf
mov
lret
mov
mov
adc
mov
lret
sbb
adc
dec
minps
movsb
inc
jg
add
outsb
mov
mov
popl
cwtl
vmwrite
clc
fiadds
mov
into
jle
add
es
rorl
lea
mov
sbb
scas
inc
pop
icebp
ljmp
mov
mov
mov
cmp
sbb
rolb
add
int
inc
cs
rorb
jno
pushf
test
mov
lea
xchg
pmaxsw
fldln2
clc
pop
sbb
xor
push
cmc
jle
cmp
inc
fcoms
rclb
push
clc
and
adc
xlat
xchg
mov
ret
aaa
ja
xlat
ret
scas
inc
xorl
push
add
pop
bound
aam
aaa
push
push
and
adc
cmp
cmp
loope
pop
insl
and
jb
push
dec
dec
stos
mov
cld
insl
test
aam
mov
sbb
push
pop
adc
and
mov
jg
pop
xchg
cmp
inc
or
gs
sbb
inc
ds
xchg
test
pop
push
bound
ljmp
test
pop
negb
adc
scas
xchg
dec
or
xor
inc
in
adc
in
shrl
js
jae
outsb
sbb
inc
divb
mov
repz
mov
xor
and
xor
or
pop
jns
xchg
pop
testb
mov
mov
push
ljmp
mov
clc
jno
dec
or
push
xor
push
jnp
sbb
pop
fstl
pop
jbe
push
outsl
xchg
addb
lret
inc
xlat
insb
push
lds
xor
aam
cmp
fsts
dec
adc
aad
xor
pop
cmpsb
jns
out
sub
jno
add
out
pop
daa
stos
and
fwait
cmovs
jo
inc
jno
into
push
push
xchg
and
push
ss
xor
movsb
clc
and
adcb
enter
jg
add
loope
sub
dec
mov
andb
fimuls
cmpsl
cmp
push
in
jae
arpl
jmp
popl
push
mulb
cli
adc
fidivs
jl
pop
add
xchg
mov
jne
mov
push
imul
std
sbb
insb
fmuls
sbb
ljmp
mov
inc
out
movsl
cmp
sbb
cmp
decl
loop
jg
cltd
sub
adc
and
jecxz
pop
jns
in
gs
shll
insb
pop
sahf
gs
pop
adcb
cmp
std
sub
xor
mov
je
add
jne
or
lock
inc
andb
mov
cmp
cld
cli
insb
xor
lcall
ds
jne
push
xlat
or
push
ret
push
adc
lar
pusha
shlb
insb
mov
xlat
mov
xchg
and
xchg
call
movsl
pop
out
push
inc
or
sub
add
pop
jle
into
or
sbb
lods
push
repnz
xchg
lea
mov
add
dec
lods
in
adc
insl
sti
mov
mov
movsl
pop
xor
sahf
adcb
mov
pop
imul
pop
or
in
aaa
push
popf
add
into
mov
sub
es
xchg
das
adc
xchg
loop
loopne
xor
pop
push
xor
cmpsl
mov
or
loope
popa
out
outsl
roll
cmc
sub
fdivs
lret
scas
cmp
and
sub
sbb
xor
mov
push
add
fnstenv
inc
mov
lods
sti
mov
pop
inc
roll
cmp
lcall
fcomip
ror
sbb
jecxz
ja
jns
push
orl
scas
pop
xor
lods
outsb
push
pop
mov
inc
mov
sub
cltd
push
mov
add
pop
jb
or
hlt
pusha
lds
jno
inc
shrl
fdivs
xor
push
push
mov
iret
aas
outsl
movsb
leave
std
cmpb
pop
int
sbb
fcomps
lahf
jae
enter
stc
mov
push
pop
mov
lds
push
jl
or
test
shlb
sti
inc
sbb
mov
inc
jge
mov
sti
push
push
and
dec
sbb
stos
dec
scas
pop
mov
imul
pop
ret
jno
cltd
les
xor
popf
push
jmp
jmp
mov
fs
mov
clc
inc
pop
pushl
mov
or
cmpsl
jp
movsb
repnz
dec
dec
inc
test
call
jge
mov
mov
mov
fdivl
inc
daa
rcrb
jbe
xchg
sbb
fcompl
xchg
jbe
mov
mov
cmp
andl
cmp
jb
push
jo
sub
jnp
sub
adc
loope
xlat
out
stos
mov
and
xor
jnp
lahf
mov
sbb
movb
ljmp
fcmovnb
cmp
mov
xchg
cmp
and
or
aad
call
mull
hlt
add
push
mov
rclb
inc
sub
cld
cmp
mov
outsl
popa
inc
mov
or
cmpsl
cmc
and
cltd
cmp
xchg
jae
outsb
mov
mov
pop
icebp
mov
pop
lcall
and
jbe
or
bound
pop
add
es
push
hlt
in
add
mov
push
ds
adc
subb
int
sub
sub
rclb
ret
imul
mov
lock
sub
or
clc
inc
or
lea
mov
or
xchg
inc
testb
or
sbb
mov
mov
push
scas
mov
mov
jnp
xchg
incl
xchg
into
pop
loopne
push
loope
or
dec
cs
je
jno
mov
xlat
ret
add
rclb
cmp
sbb
adc
xchg
cmpl
negl
ljmp
xor
adc
push
stos
data16
pop
cmp
jno
gs
insl
adc
jo
sarl
ret
rcl
lods
pop
jmp
and
in
cmp
push
mov
pop
std
xchg
aad
xor
add
sbb
cmp
mov
jg
or
fxch
stos
sahf
cmpsb
addl
mov
adc
scas
subl
lahf
cmpb
mov
jmp
lcall
popa
or
mov
add
cld
insl
cmpsl
fwait
mov
push
dec
outsl
pop
lcall
xchg
cmc
pop
cmp
add
imul
imul
int3
mov
mov
sbb
add
in
add
inc
dec
hlt
call
inc
jecxz
inc
outsb
cli
cmpl
jb
fsubrl
jecxz
imul
xchg
imul
push
push
jmp
xor
jne
scas
mov
inc
and
aad
insb
cmp
loope
hlt
pop
fidivrl
sbb
int3
mov
incl
outsl
cmp
in
imul
jbe
pop
loopne
ljmp
cs
ljmp
sarb
dec
testl
int
push
fisubs
imul
ds
cmp
xor
iret
cltd
call
les
add
pusha
xor
scas
scas
jae
gs
shrb
sahf
lods
jb
mov
out
mov
push
pop
push
adc
pop
in
inc
into
notb
and
sbb
xor
jns
push
pop
and
test
push
cmp
sbb
add
add
pop
sub
sub
idivb
mov
xor
fdivrp
inc
push
and
or
lea
std
mov
xchg
mov
add
mov
es
mov
hlt
inc
pop
sub
repz
lcall
jnp
push
shll
cld
or
jge
pushf
dec
cltd
nop
into
test
cmp
fxch
fisttpl
inc
jno
shlb
xor
ret
aad
int
sub
lahf
xchg
fdivr
pop
and
call
mov
stos
mov
aad
and
cmp
imul
mov
jae
call
pop
or
jnp
dec
ror
mulb
xor
xchg
add
sub
jno
test
in
jg
test
outsl
pop
bound
test
push
sbb
daa
js
movsb
mov
mov
movl
mov
lock
cmpsl
mov
jns
xchg
jmp
frstpm(287
push
jecxz
cmp
cmp
mov
xchg
sub
mov
sub
fwait
mov
mov
int
out
and
mov
cmp
rcl
and
jmp
and
fldenv
jge
xchg
push
aaa
jg
adc
dec
mov
loopne
fs
lret
lahf
fidivrs
dec
or
in
shlb
jbe
aaa
or
test
cmpsb
fimuls
inc
out
idivl
clc
pusha
mov
scas
dec
cli
repz
fadd
in
clc
xor
call
je
cmp
mov
sbb
xchg
nop
xchg
xchg
xchg
pop
mov
into
push
jo
test
xchg
out
imul
iret
aas
inc
call
stos
dec
fdivrs
lods
imul
aam
xchg
mov
fcmovne
popa
dec
int
sub
int
jbe
jl
lods
mov
push
les
ficoms
pusha
dec
sub
lret
sahf
ffreep
mov
inc
cmp
xchg
mov
adc
jg
xchg
jae
cld
jne,pt
pop
xchg
pop
mov
pop
mov
outsl
mov
lcall
push
jns
dec
mov
loopne
das
das
loope
mov
sub
jmp
sahf
mov
adc
pop
push
aad
xor
dec
mov
push
ret
or
add
mov
ljmp
cmp
inc
dec
in
ret
xlat
dec
clc
xchg
std
stos
mov
push
imul
push
popf
xchg
shl
cmp
adc
outsl
jl
stos
shl
xlat
aaa
add
and
cs
mov
mov
adc
mov
jp
loopne
sbbb
cmpsb
sbb
push
popf
lret
or
in
mov
in
int3
pop
and
fsubs
pusha
adc
push
jnp
jmp
mov
arpl
xchg
out
je
movsl
sti
mov
xor
call
jg
nop
pop
pushf
bound
mov
imul
es
jl
decl
xchg
mov
mov
aad
mov
pushf
fimuls
testl
adc
add
in
adc
shlb
pop
into
scas
xor
mov
ret
mov
sbbl
shr
pop
fcmovbe
jbe
pop
out
loopne
pusha
push
aaa
add
mov
pop
subl
lock
mov
loopne
adc
add
outsl
cmp
pop
mov
cmp
mov
fidivrl
es
aaa
xor
in
and
inc
loopne
ja
pop
xchg
sbb
test
clc
loope
cs
push
push
xchg
or
cmpsl
jbe
imul
sti
popf
pop
int
cmpl
ficomps
ljmp
adcl
sbb
outsl
pop
and
mov
mov
mov
hlt
dec
into
xor
cmp
mov
nop
ret
nop
shlb
std
test
and
mov
fwait
xor
rcr
or
out
nop
xchg
or
push
rcrb
test
inc
pop
lret
mov
repnz
push
push
sub
ficoml
xchg
mov
in
std
js
ds
push
int
xchg
inc
push
scas
loop
sarb
into
inc
push
lods
aaa
nop
mov
adc
jb
cmc
jle
sbb
xchg
dec
jge
ret
push
and
push
clc
or
cmpsl
lret
roll
adc
icebp
fsubs
mov
xor
add
mov
mov
lea
cli
cmp
pop
fstpl
mov
dec
mov
push
inc
or
cmpsb
cltd
repz
mov
inc
ja
jp
sbb
cmp
xor
and
imul
inc
push
add
jne
jnp
stos
jle
inc
ret
cmp
push
jmp
jge
xchg
in
aam
dec
ret
fisttpl
fimull
inc
test
pop
cmp
mov
jno
jg
sbb
or
and
sbb
sub
js
xchg
dec
fnstsw
cmc
cltd
xchg
stos
lods
jmp
insb
stc
es
lcall
jns
or
cld
cmpsb
mov
lret
addr16
cmp
pop
inc
mov
jp
loope
stc
and
outsb
push
mov
pop
jmp
jmp
iret
xchg
add
scas
lret
push
int3
and
in
pop
push
push
xorl
mov
jbe
and
js
add
lcall
sbb
add
mov
data16
sahf
sub
das
sub
xchg
pop
lret
sbb
pop
repnz
mov
push
sbb
and
or
call
sub
inc
sbb
push
mov
ljmp
adc
add
outsb
insb
incl
stos
inc
jne
dec
es
push
rol
mov
test
or
das
shl
insl
add
mov
scas
int
pop
xchg
sbb
jmp
adc
push
ret
mov
loopne
push
loop
cmpb
cltd
inc
or
pop
inc
add
fsubrs
dec
pop
test
aas
pop
test
mov
lods
mov
imul
fadd
fstl
pop
data16
imul
subl
imul
cmp
std
jecxz
lahf
ret
jo
push
lds
ret
popf
dec
rclb
cltd
mov
jmp
sar
pusha
es
repnz
push
fstl
inc
inc
movsb
lahf
mov
leave
xor
jmp
push
addr16
pop
mov
cmp
repz
iret
loop
faddl
or
and
rcrl
xor
inc
push
and
incl
and
aas
cmp
andl
inc
push
bound
sub
jne
and
cmp
mov
cmp
pop
lods
jl
cmp
jge
outsl
rolb
ljmp
push
lret
pop
mov
add
iret
xchg
sahf
jb
cmp
and
shr
call
lcall
in
push
loop
mov
pop
jae
jne
fstps
in
fs
popa
xchg
int
cmp
xor
out
push
imul
mov
ds
in
sub
sbb
mov
fcmovb
fildl
icebp
sbb
jns
lcall
inc
repz
jecxz
or
ljmp
lahf
jg
cmp
xchg
xchg
imul
push
and
dec
inc
imul
ds
pop
cmp
xor
hlt
rolb
or
push
into
data16
enter
xor
mov
pop
les
gs
in
sub
movsb
and
xor
mov
add
dec
pop
cli
jl
fisttps
pop
enter
sub
arpl
push
push
sbb
shlb
test
pop
inc
nop
or
movsb
xchg
bound
lcall
push
mov
xor
mov
movsb
pop
or
dec
dec
jno
adc
pop
adc
pop
and
and
dec
hlt
inc
js
mov
adc
insl
pop
cmp
int
xlat
icebp
lahf
push
jns
int3
xchg
aam
push
and
ds
push
fmull
xchg
mov
cmp
jb
into
popa
sahf
and
sbb
mov
xchg
lcall
enter
or
jg
push
add
mov
mov
scas
and
loope
aam
call
ret
test
les
push
pop
xor
cmp
xchg
and
movsl
pop
jb
movsl
test
loope
shl
insl
or
inc
dec
cmp
movntq
out
lods
xor
or
push
sub
add
sub
mov
pushf
lret
dec
pop
sbb
push
iret
add
gs
outsl
pop
cmp
lret
jnp
rcll
mov
ficoms
sub
mov
movsb
insl
push
pushf
roll
lahf
jne
out
cmp
sub
sub
add
push
xor
lods
scas
fcomi
jl
inc
test
stc
cmpsl
xor
mov
pop
xchg
fucomip
sbb
or
mov
inc
or
sbb
push
rcrl
adc
mov
addr16
cmpsb
mov
and
lock
dec
inc
cmpsl
insb
je
loope
adc
cmp
xorl
sbb
fidivrl
mov
arpl
stos
testb
mov
ret
out
mov
push
lods
xlat
pop
leave
fnstenv
mov
gs
cmp
and
sub
mov
test
pop
addr16
mov
pop
test
rep
nop
leave
and
sbb
push
shrb
or
sbb
add
jnp
aam
pop
call
push
scas
push
cmc
jnp
sbb
pop
xor
jns
jle
loop
insl
scas
outsb
adc
sbbl
loope
sti
cmp
das
pop
sub
jb
mov
pop
sti
dec
pop
out
xchg
imul
cmp
push
mov
sub
mov
mov
das
adc
imul
lcall
cmp
adc
inc
orb
mov
mov
sbb
out
sub
ftst
lcall
dec
jne
mov
dec
push
or
gs
push
lcall
movsl
cmp
orl
sbb
pop
daa
test
mov
insl
pop
cmpl
pop
mov
and
fisubs
cmp
dec
notb
jg
xchg
fnstcw
sbb
sbb
sar
adc
shll
popf
lahf
adc
imul
daa
lock
add
jae
outsl
daa
into
jp
add
cs
xchg
pop
rcll
test
imul
xchg
mov
pop
push
xchg
cs
pop
icebp
aaa
xchg
jb
shrb
in
cli
ljmp
jmp
jb
jae
cmp
aaa
sbb
hlt
in
pop
add
push
scas
ja
mov
rcl
sub
push
mov
mov
ljmp
push
clc
mov
cmp
sub
arpl
pop
mov
icebp
add
into
in
lock
out
mov
rorb
call
mov
fildll
movsb
jecxz
dec
adc
adc
cmc
mov
popf
rolb
shr
xchg
push
push
or
sbbb
nop
cmp
jl
mov
adc
out
mov
push
insl
mov
mov
pop
xor
ret
jno
xchg
mov
add
incl
mov
sub
gs
inc
arpl
arpl
sbb
mov
pop
sub
cmp
cmc
jp
hlt
xchg
push
jmp
rolb
andl
call
sbb
sub
inc
sub
icebp
cs
jge
xchg
mov
push
testb
jae
int
andb
repnz
lret
rolb
ljmp
movsb
mov
sub
push
mov
xchg
cmp
jge
jbe
xor
data16
lahf
clc
in
and
loop
cmp
icebp
lea
mov
push
add
aad
mov
jmp
loop
pop
subl
xor
cmp
mov
jno
mov
arpl
add
sbb
lret
lret
iret
adc
xchg
or
push
iret
dec
test
inc
push
or
faddl
cltd
jbe
add
scas
imul
in
mov
stos
pop
jge
xchg
dec
cs
imul
outsb
ficompl
les
ret
xor
dec
rorl
and
mov
dec
mov
inc
adc
jmp
fldl
ret
jae
frstor
ret
inc
je
cmp
and
and
pop
popa
jle
in
pop
outsb
xchg
dec
lcall
lock
dec
mov
movsl
adc
pop
and
notb
cmp
aad
xlat
cmpl
jns
xchg
jecxz
add
or
xor
mov
aaa
movsb
mov
jp,pt
sahf
jmp
and
jno
mov
arpl
push
xchg
xlat
xchg
inc
xchg
leave
int3
outsb
mov
rclb
out
sub
popa
xlat
arpl
add
cmp
push
gs
leave
and
rolb
mov
xor
insb
dec
jecxz
jle
fstp
jno
outsl
xor
sbb
cmpsl
push
clc
add
lods
jle
push
jae
pushl
mov
xor
aaa
mov
movsb
je
sub
dec
xchg
out
fsub
loop
push
or
mov
pop
mov
inc
or
enter
std
jp
andl
das
dec
and
mov
pop
adc
pop
pop
cmp
popf
inc
in
cmp
jecxz
cld
in
mov
push
sti
aam
and
popa
dec
cmpsb
and
repnz
add
pop
jae
adc
loopne
mov
sbb
jbe
mov
and
fs
ret
outsl
lcall
out
lods
mov
jl
imul
mov
jno
and
dec
lock
popa
add
xor
pop
pushf
jo
jle
sub
sub
mov
add
jne
mov
mov
adc
adc
jns
cltd
test
sbb
add
divl
mov
inc
mov
mov
fwait
mov
out
mov
fimuls
mov
push
xor
dec
dec
cmp
xchg
jecxz
sub
in
call
lea
xlat
je
mov
push
fiadds
jo
dec
into
aam
sub
cmp
xchg
adc
mov
xlat
loope
push
cmpsb
mov
and
cmp
gs
xlat
testl
push
shlb
pop
out
dec
bound
sub
xor
xchg
cli
mov
orb
repz
push
ss
cmc
mov
in
or
gs
fildl
jg
add
cmpsb
aaa
or
sbb
mov
sub
loop
iret
mov
fmull
push
loopne
je
stc
or
dec
pop
into
dec
movsl
sbb
test
gs
and
push
cmp
data16
mov
enter
out
outsl
divl
adc
push
push
pop
addr16
out
loop
cmp
ja
mov
int3
dec
fs
bound
mov
mov
out
lcall
arpl
out
and
cmp
out
bound
cmpsl
cmp
int
add
scas
cmp
test
and
leave
push
jg
mov
sbb
femms
stc
pop
push
mov
xchg
in
je
lcall
es
push
sub
xchg
int3
and
mov
adc
adc
sarl
dec
pop
in
addr16
pop
mov
ja
lods
pushf
mov
pop
add
repz
jle
mov
dec
sbb
sti
lock
adc
out
pusha
and
repnz
js
xchg
mov
mov
pop
dec
decb
lcall
adc
in
in
scas
into
jnp
popf
mov
inc
mov
shl
or
pop
cmp
aas
int
sub
mov
lcall
mov
pop
imul
outsl
or
orb
dec
leave
push
mov
pusha
popf
jne
in
testb
cs
dec
call
inc
xor
and
das
insl
xchg
push
insb
push
xchg
into
movsb
repnz
rcl
fisubl
fxch
stos
dec
inc
mov
lods
aas
imulb
ficompl
movsl
imul
repnz
jns
cmp
sbb
insl
cwtl
insl
std
mov
call
out
mov
inc
mov
cmp
mov
lock
daa
add
shrb
jge
inc
mov
cli
fs
lea
mov
imul
lock
sub
rcr
mov
xor
outsl
imul
test
sbb
loopne
test
and
js
xchg
cmc
inc
movsl
xchg
lahf
xchg
loope
paddb
lcall
out
push
and
lcall
cltd
cmpsb
fwait
jmp
ss
daa
cli
sbb
mov
lcall
inc
xchg
nop
lcall
sub
ret
adc
ror
pushf
jp
mov
sahf
inc
xor
icebp
pop
xor
aaa
imul
int
into
add
movsl
shr
ss
lock
jmp
scas
mov
cmp
rcrl
mov
and
out
push
rcrl
mov
cli
shrb
insl
mov
xor
lcall
adc
outsl
xchg
int3
cmp
bnd
loope
inc
aad
xchg
mov
leave
repnz
lds
mov
jecxz
pop
mov
ja
xchg
cli
or
or
and
rcrb
mov
adc
inc
lret
jge
bound
cmpsl
adc
incb
jno
aam
bound
and
hlt
lcall
sti
fnsave
ficomps
mov
jle
imul
and
sti
add
scas
movsb
push
imull
sub
jno
jbe
insb
popf
cli
adc
out
ror
and
test
push
popl
fs
mov
pop
in
test
cmpsb
xor
pop
in
sbb
mov
out
mov
fisttpll
jo
mov
ss
mov
jno
mov
cwtl
stos
mov
jle
mov
mov
mov
outsb
cmp
dec
mov
pop
ja
cmp
jae
icebp
inc
shr
ret
negl
aad
jg
mov
ficoml
out
ficompl
mov
int
sub
into
push
mov
mov
call
mov
cld
dec
cld
sbb
dec
inc
dec
les
mov
dec
cmp
repz
adc
sbb
aas
pop
inc
cmc
and
out
scas
imul
adc
movsl
icebp
in
aaa
add
testb
and
inc
fwait
inc
je
sub
sbb
lret
dec
jno
movsb
jo
popa
fs
shrl
cmpsb
mov
cmp
sub
arpl
icebp
into
mov
scas
sarb
pushf
xor
imul
mov
jg
stos
mov
mov
xchg
mov
stos
out
cmp
xchg
add
out
xlat
pop
rclb
movsb
in
jg
lods
rep
push
rep
std
divl
repz
cld
dec
aam
jle
sbb
out
mov
and
jb
cli
sbb
lea
loop
adc
xor
add
outsl
enter
xor
bound
xor
rclb
sahf
and
or
in
sbb
sbb
push
std
testb
rorb
adc
ret
sbb
nop
xchg
push
pusha
push
pop
lods
rorb
shrl
jo
sbb
pop
fsubrp
mov
pusha
out
and
fidivs
out
jl
je
cvtps2pi
cmp
stos
or
cmc
mov
insl
inc
pop
adcb
fchs
jo
inc
mov
aaa
jp
mov
mov
dec
fnstsw
dec
push
bound
or
pop
ret
dec
repz
cmp
fidivl
sbbb
mov
fadd
jecxz
sbb
sbb
mov
adc
pop
xor
test
lods
movsl
mov
loope
cltd
sbb
push
rcr
dec
jle
sub
or
out
ret
add
push
mov
cmp
dec
sbb
fs
insl
sbb
int3
scas
psubusw
cli
insb
aas
es
bound
push
dec
loop
jl
icebp
clc
rolb
call
inc
cltd
mov
jo
jae
hlt
out
cmp
inc
jmp
dec
mov
out
dec
adc
xor
incb
or
push
mov
rclb
cmpsb
sbb
dec
mov
aas
inc
inc
sub
pop
and
std
cltd
cmp
sbb
jmp
dec
push
shl
inc
jne
test
adc
adcb
cs
lods
xchg
shlb
out
cmp
mov
cmpsb
hlt
jg
mov
pop
scas
sbb
xorl
cmc
mov
xchg
rcrl
xor
fiaddl
push
push
mov
push
jl
test
loope
and
fdiv
and
call
stos
mov
int3
int
cmp
mov
shll
outsb
dec
insb
pop
enter
dec
and
fs
mov
mov
cmpsl
call
or
sbb
mov
scas
adc
ljmp
arpl
push
pop
aaa
ret
mov
stos
bound
outsb
rclb
cltd
cwtl
ss
ss
and
dec
popl
insb
push
sbb
sub
and
fiaddl
xor
mov
call
add
pop
sbb
decb
lods
mov
inc
adc
mov
jle
inc
jecxz
lret
pop
bnd
pop
in
repnz
jmp
sbb
add
sti
sub
lret
scas
inc
pop
jne
pop
rep
xchg
jl
mov
cmp
xchg
rcrb
jbe
andb
test
jecxz
subb
ds
adc
int3
fstpl
in
sbb
dec
js
or
loopne
fcmovb
adc
xchg
aaa
das
scas
sub
mov
mov
inc
hlt
sbb
jle
shrl
fwait
ljmp
mov
insl
sbb
das
inc
and
lods
jmp
mov
std
xchg
jmp
lock
rolb
cmp
jg
movsb
dec
jne
lret
xchg
rcrb
gs
dec
mov
cli
rorl
pop
xchg
aas
pop
push
sbb
fstl
sub
dec
divb
sub
popf
jle
inc
xor
ds
mov
andb
test
pop
dec
pop
sar
push
mov
xchg
je
add
test
dec
movsl
icebp
xlat
call
xor
out
outsb
das
cmp
pop
xor
in
cmp
insb
jne
mov
testl
jmp
mov
push
xor
enter
xlat
mov
adc
aaa
sahf
popf
push
imul
adc
push
fadd
mov
jae
sub
mov
mov
xchg
cmpsl
fisttps
ficomps
loopne
cmp
loop
inc
fidivl
fistpll
lock
push
cmpsl
cmpsl
xchg
lret
add
inc
sbb
mov
cmpsl
test
mov
rcrl
mov
cmpsb
js
adcl
adc
sub
jno
adc
pop
jne
fildl
insb
jmp
xor
gs
xchg
aam
lret
scas
add
sub
clc
mov
mov
popf
or
adc
jge
dec
push
ss
dec
ret
pop
add
xor
js
incl
jo
nop
pop
fmull
rclb
add
cmp
cmp
or
xchg
mov
cmp
jecxz
inc
leave
fsubs
lahf
loopne
lock
mov
dec
inc
dec
aas
pop
pushf
getsec
lahf
outsb
popf
fimull
dec
in
notb
notl
loopne
push
xor
push
std
xchg
les
adc
jo
es
jl
lahf
xchg
enter
movsb
xchg
push
lret
fwait
std
mov
cmp
out
out
fsubrs
into
xor
jnp
hlt
adc
mov
out
pop
sbb
or
xor
dec
add
cmpsl
jmp
bnd
mov
lret
mov
mov
xchg
je
mov
mov
sub
cmc
cmp
sub
ja
ret
and
xchg
fwait
inc
mov
orl
xchg
dec
jbe
std
cld
fstps
jle
incb
mov
std
push
icebp
neg
adc
movsb
mov
add
fs
pop
imul
push
push
pushf
inc
scas
stc
add
bound
out
jle
push
mov
repz
mov
pop
fimull
jge
cmc
dec
enter
or
mov
push
xor
test
sub
fldcw
mov
inc
sti
sub
cwtl
sbb
ljmp
movsb
rolb
arpl
out
in
mov
cmpsb
in
dec
cwtl
xorb
clc
dec
and
and
cmp
sub
xor
lahf
test
mov
leave
mov
pop
push
mov
rcrl
ret
push
dec
cltd
sahf
mov
cwtl
add
pop
jecxz
push
xchg
xor
mov
push
mov
popf
lret
hlt
mov
or
lods
mov
int
pop
repnz
push
jo
sbb
ss
inc
test
sub
cmp
mov
pop
dec
cmpsb
cmp
pop
loopne
inc
sub
jne
mov
inc
popf
lret
adc
sahf
adc
je
mov
adc
push
jo
jmp
mov
xor
lret
cmpsb
shlb
inc
mov
inc
in
sub
adc
adc
mov
jmp
mov
scas
or
jnp
fstp
sub
movsl
sub
adc
sub
fldenv
outsl
and
icebp
push
ljmp
lds
push
dec
imul
xor
aaa
repz
int
pop
jns
fabs
movsl
push
shrb
ret
stos
pop
cmp
add
xor
imul
outsl
xor
lods
insl
das
cld
ljmp
pop
in
into
and
std
sub
mov
jle
xorb
movsl
mov
rorb
adc
leave
jle
mov
dec
and
mov
arpl
fisubl
push
fdivr
mov
inc
sub
sti
mov
int
add
movsl
push
jge
jb
out
add
shl
aaa
and
add
mov
in
outsb
adc
imul
cwtl
cmp
mov
ljmp
push
jg
dec
fidivrl
push
outsb
imul
mov
iret
hlt
mov
or
leave
aad
lds
sbb
and
imul
inc
scas
call
xor
and
xor
add
and
lock
aam
bound
gs
push
dec
mov
cmpsl
jno
push
pop
sti
pushf
nop
mov
shr
xchg
mov
adc
out
test
inc
das
fucom
lea
adcb
aad
and
cmc
sbb
mov
xchg
mov
xor
aas
std
xor
pop
dec
pop
cmp
pusha
lods
sbb
push
push
outsb
jp
jge
push
cs
mov
pop
imul
dec
call
mov
mov
fldcw
ja
inc
popa
and
sub
push
jecxz
or
sub
dec
xorl
sbb
into
dec
mov
je
cmp
xor
xor
lock
mov
fstpl
fucom
add
dec
dec
dec
xchg
mov
mov
ret
or
pop
sbb
xchg
repz
lock
jmp
pop
sbb
neg
enter
clc
jno
ds
lahf
lcall
adc
xchg
xor
mov
cmc
push
fwait
xchg
mov
outsl
jae
jge
sub
call
stc
sbb
xchg
divl
outsb
push
enter
pop
adc
call
mov
fiaddl
sbb
or
lods
shrb
mov
aam
dec
or
or
adc
inc
lods
movsb
dec
in
xor
and
jl
cwtl
mov
cmp
dec
and
cmp
or
sbb
int
in
lea
inc
sbb
pushf
mov
out
test
pop
addr16
adc
cmp
test
sub
sahf
mov
ret
push
fisubl
jg
insl
jne
xchg
in
cld
xchg
pop
push
sub
mov
push
push
gs
ds
adc
push
pop
sbbb
add
dec
push
cmc
imul
rorb
movsb
lcall
xchg
xchg
adcl
mov
sarl
leave
jp
or
sub
sahf
fisttpl
cmpsb
push
shrb
mov
dec
xchg
lea
xorl
jnp
fisttpl
xor
or
cmp
jge
addr16
je
lret
sti
jecxz
test
es
push
sub
shr
inc
dec
mov
cmp
dec
sti
movsl
repz
mov
negl
aad
ret
repnz
dec
cmpsb
dec
leave
jg
int3
xor
add
xchg
cwtl
and
bound
sbb
cmpsb
jg
xchg
jge
popf
stos
inc
push
mov
repnz
cmpl
scas
std
mov
gs
cld
mov
cld
inc
and
fs
into
jmp
adc
jbe
repnz
push
sbb
out
xchg
mov
mov
pop
into
adc
fsubs
movsb
inc
cmp
sahf
xor
lods
mov
mov
ds
dec
adc
pop
cld
jnp
push
adc
adc
aas
inc
mov
jnp
and
ds
gs
into
ret
fs
aam
or
cltd
test
jns
sbb
orb
and
outsl
mov
push
add
xorb
jnp
add
push
sbb
dec
push
sarb
dec
push
fs
push
mov
cmpsl
mov
fs
ss
mov
adc
fwait
sub
mov
add
or
pusha
cmpsb
mov
mov
out
sub
imul
add
sub
mov
add
jo
jbe
out
lds
ret
push
dec
dec
rcr
jae
out
stc
lea
pusha
lahf
mov
dec
push
mov
mov
mov
aam
xchg
loopne
cmp
ja
jno
into
adc
aas
cmp
mov
push
pop
mov
or
lret
or
dec
in
je
xchg
jmp
pop
mov
push
movsl
sbb
popf
jp
lahf
pop
enter
and
mov
lret
and
xchg
int
clc
sbb
mov
jbe
push
inc
or
xlat
jnp
shrl
dec
lret
aaa
mov
fs
es
fwait
inc
mov
mov
andb
push
xor
test
push
add
aam
test
leave
dec
sub
sbb
mov
pop
pop
sbb
idivb
add
sub
jmp
int
sti
adc
shlb
push
int3
mov
vminps
andl
subb
push
pop
jp
mov
and
inc
out
adc
cltd
call
mov
decb
int3
dec
shl
ja
dec
je
decl
sbb
sbb
or
rol
aam
adc
stos
mov
jae
sub
pop
pushf
inc
sbb
lcall
pop
or
shr
or
push
push
mov
add
xor
aas
jne
repnz
fsubrs
out
fwait
inc
scas
or
add
jmp
or
iret
push
fdivl
jg
jno
hlt
sahf
js
aaa
ljmp
stos
mov
or
xchg
dec
sub
mov
dec
call
sti
int3
cmp
negb
scas
lret
xchg
aaa
sub
movsb
iret
das
shlb
ret
cmp
jb,pt
pushf
mov
lods
sub
insl
rcll
cmpsb
dec
jle
pop
mov
adcl
add
or
int
xchg
in
repz
mov
pusha
jle
iret
and
push
repz
iret
addr16
jb
pop
es
xchg
call
dec
loop
cmp
popa
ret
cmp
rol
push
pop
dec
adc
mov
aas
mov
repz
push
les
sub
adc
out
rorl
loope
ret
inc
call
aas
arpl
and
shlb
sti
adc
mov
cmp
shlb
idivb
movsl
scas
aaa
outsl
mov
ftst
nop
nop
and
enter
jbe
push
rep
push
aas
push
addb
fbld
mov
cmpsl
jns
dec
jne
jl
push
sbb
xorl
adc
mov
xor
push
testl
bound
push
sub
jmp
in
or
dec
cltd
xor
call
pop
dec
dec
and
jmp
popf
lock
jno
fnsave
cmp
xor
in
mov
mov
lock
andb
js
lcall
scas
pop
mov
xchg
push
push
test
loop
jbe
cli
andl
push
sub
mov
xor
add
cs
sub
inc
cmp
ret
popf
divl
dec
stos
xor
adc
mov
enter
adc
popa
xor
fimull
lods
cltd
push
push
push
enter
cmp
into
cmpsb
repz
ret
xor
pop
sbb
pop
push
ss
dec
push
dec
xchg
and
rorl
and
mov
push
loope
dec
fsubrl
jns
dec
push
cmpsb
sbb
cmp
fdivr
dec
pop
cmp
xchg
jno
ljmp
inc
into
sbb
rcrb
gs
insl
outsb
sarb
into
lds
fstl
mov
mov
mov
adc
add
adc
xor
into
or
loop
mov
jle
xchg
jb
pop
jp
ds
cmp
fdiv
mov
jg
mov
and
dec
dec
jno
or
cli
idivb
pshufw
inc
jae
test
pusha
imul
stos
js
xchg
push
es
jno
ss
pop
repnz
popf
lret
push
cmp
repnz
in
shrb
xor
xor
fisttpl
and
notl
mov
cmp
mov
pop
add
popa
stc
adc
scas
jmp
lock
mov
lret
daa
cmpsb
fistps
mov
test
mov
in
or
shl
out
mov
fdivrl
jo
xchg
aaa
adc
xor
lahf
rolb
sub
out
shlb
popf
mov
dec
outsl
cmp
push
imul
and
mov
add
pop
jnp
ret
dec
fsubrl
mov
jecxz
mov
pop
mov
mul
jbe
dec
push
or
sar
xor
xor
daa
rcrl
in
repnz
cli
jmp
es
mov
hlt
stc
sbb
dec
sub
daa
adc
into
outsb
sti
leave
push
fsubrs
or
lret
push
mov
dec
outsb
fistps
popw
add
jns
je
mov
xchg
pop
xchg
sbb
cs
aaa
xor
mov
cmpb
mov
adc
mov
mov
pusha
out
fdiv
bound
xchg
js
out
lds
jge
lods
sub
mov
mov
je
adc
nop
pop
sti
into
xchg
test
mov
push
push
iret
or
sub
orl
shl
in
push
or
and
inc
inc
in
fildll
adc
add
xchg
es
jo
mov
mov
ficoms
test
stos
leave
mov
inc
fs
out
push
xchg
call
imul
jle
scas
inc
test
push
mov
jg
popa
mov
dec
jl
mov
clc
jae
jge
fistl
mov
fmulp
sahf
cmp
stos
into
sub
dec
ret
sub
pop
push
mov
mov
mov
jp
mov
xor
jge
xor
imul
enter
mul
insb
sub
jb
mov
fidivl
xchg
dec
mov
je
aam
pop
xorb
sti
and
pop
fs
movb
or
mov
outsb
pusha
test
outsb
or
pop
fcmovb
jl
jg
sbb
lahf
out
pop
fidivs
lock
jns
push
sub
pushf
push
cmp
out
jne
mov
repz
int3
adc
test
lret
pop
imul
push
inc
xchg
and
add
mov
ljmp
pusha
xor
je
mov
pop
dec
inc
mov
push
dec
call
fdivrs
fidivrs
mov
add
into
mov
in
inc
pop
shrl
mov
xchg
sti
add
bound
enter
jo
ljmp
push
je
push
test
lea
in
xchg
mov
hlt
pop
pop
loope
sub
mov
inc
in
lock
addb
push
jbe
add
xor
push
adc
mov
cmp
mov
mov
mov
shrd
es
push
inc
add
pop
or
dec
mov
jmp
cmp
mov
sahf
sbb
or
inc
stc
inc
mull
xor
testb
in
repnz
pushf
ret
fwait
popa
sub
jge
add
hlt
hlt
std
std
adc
cmp
jp
insb
aas
shlb
mov
call
jo
out
sar
mov
sbb
sub
lea
mov
pop
scas
nop
in
add
pop
mov
loope
arpl
je
inc
aas
push
push
mov
dec
icebp
jg
xchg
loop
imul
lahf
jp
sahf
pop
cli
out
cmpsb
lods
or
jb
ficompl
lods
xor
xchg
adc
mov
popf
add
lret
cwtl
lret
sub
pop
outsb
push
xchg
dec
sbb
add
xlat
and
addr16
pop
inc
xchg
inc
adc
idiv
dec
rol
jae
jl
int3
shl
fwait
xchg
in
vminss
push
pop
jb
push
mov
scas
std
jg
fsubrl
pop
or
mov
adc
or
cmp
es
jl
push
jnp
dec
adcl
mov
xor
push
jl
js
sub
test
pop
and
cld
arpl
jae
or
and
jne
inc
scas
js
fyl2xp1
adcl
aad
aaa
iret
mov
jg
je
roll
push
out
and
jmp
imul
insl
iret
in
mov
bound
push
push
and
arpl
xchg
pushf
mov
popf
jae
mov
je
mov
bound
or
fwait
lea
push
mov
dec
jg
ror
daa
hlt
call
fsubs
dec
jge
in
imul
pop
ret
jb
add
adc
jne
sub
lods
test
dec
outsb
loopne
jb
rcrb
xor
out
ret
mov
out
repnz
sub
add
das
pop
lods
or
bound
adc
rclb
inc
aad
pop
jne
jne
push
outsb
scas
inc
xchg
cwtl
fcompl
inc
outsl
js
mov
cmp
pop
adc
cmpb
inc
jb
loop
add
js
ret
pop
rorb
cltd
loopne
lcall
scas
push
cs
shr
sub
sub
out
idivb
jns
push
repz
cmpl
ljmp
out
movsb
fcoml
js
orl
aaa
mov
lock
loop
push
pop
push
cmpsl
aad
or
rorl
repnz
loop
decb
fwait
in
inc
in
jmp
and
fnstsw
xchg
mov
sbb
outsb
addr16
jmp
idiv
adc
iret
dec
mov
fcom
push
test
and
leave
call
bound
jecxz
fbld
mov
out
mov
in
cmp
sbb
fwait
sbb
fldenv
test
loopne
in
aam
and
sbb
repnz
ja
mov
pop
je
cld
ja
mov
sub
rcll
outsl
mov
sbbb
lods
clc
xor
sbb
paddusb
gs
inc
adc
add
jg
sahf
inc
jae
jb
push
loopne
push
push
jmp
adc
movsl
push
lcall
and
fnstenv
mov
lods
sahf
sbb
int3
add
ret
lret
push
aaa
lahf
push
sub
xchg
adc
sub
movsl
and
fistpl
outsl
lahf
or
pop
pop
daa
mov
mov
enter
add
out
push
loope
rcr
mov
mov
push
dec
sub
pop
add
stos
jne
and
mov
or
adc
stc
lock
sbb
ret
test
mov
inc
fdivrp
cmp
sbb
cmp
in
add
pushf
cmp
inc
sub
xchg
sahf
pop
push
scas
jbe
cld
xor
sbb
xor
test
sub
mov
push
inc
loope
lea
sbb
lock
cmp
xchg
cli
xchg
fiaddl
cld
mov
outsb
or
jbe
jno
and
cmp
push
lret
xchg
cltd
lds
sarl
cmpb
mov
xor
cmpsb
in
push
jno
inc
mov
mov
cmpsb
rcrb
mov
shrl
xchg
cltd
pop
fiaddl
imul
imul
mov
pushf
xor
mov
adcl
fisubrs
les
ja
cmpsb
dec
xor
pop
push
fadds
push
or
dec
mov
lcall
xor
cmp
popf
xchg
xchg
repz
push
inc
in
repnz
stos
mov
cmp
push
or
add
scas
ret
xchg
pusha
jl
dec
divb
and
out
xlat
add
adc
pusha
mov
lret
loope
icebp
int
and
dec
jne
xor
in
rol
pop
cmc
add
scas
test
and
mov
ljmp
jecxz
ret
pop
shr
popa
xchg
shr
fcmove
pop
movsb
test
out
and
xchg
cld
add
icebp
and
jmp
add
push
test
mov
jbe
pop
aad
into
inc
and
scas
jl
enter
add
sub
imul
add
mov
and
pop
and
or
xor
push
imull
sub
and
mov
mov
jb
xor
mov
lret
jge
scas
mov
fists
or
imul
adcl
movsb
testb
jb
jecxz
mov
sub
xchg
pop
mov
push
ja
dec
fldt
js
imul
and
or
ror
and
mov
pop
lahf
fmull
out
out
sub
jle
adc
jo
faddp
pop
jmp
jmp
stos
xchg
gs
daa
xor
xor
push
mov
lods
enter
jg
add
mov
int
repnz
repnz
push
addl
inc
cmp
push
dec
pop
test
faddl
jl
cs
int
sbb
mov
mov
mov
push
add
push
xlat
mov
mov
fstpt
fwait
push
jecxz
jb
and
out
push
fcomps
jmp
push
pushf
xchg
fdivr
test
mov
pop
fistpl
out
jo
push
cli
pop
in
and
sbb
test
sbb
push
lcall
mov
stc
jb
into
and
mov
lcall
insl
or
enter
xchg
test
pop
add
lock
jle
es
dec
nop
jb
ja
fwait
lods
jnp
cltd
dec
int3
adc
movsl
dec
test
xlat
cli
mov
jnp
nop
lds
popf
mov
cli
jl
aam
rcrl
and
push
insl
or
nop
shrb
scas
loopne
sub
dec
scas
movsl
add
in
scas
scas
dec
add
xchg
mov
lret
imul
xchg
hlt
pop
cmpl
dec
jg
xchg
cwtl
mov
cmp
pop
adc
add
movsl
inc
ss
stos
aad
popa
jge
jne
fwait
jp
xor
mov
mov
sbb
rclb
loop
andl
jge
cmp
sub
dec
enter
pop
lret
loopne
xchg
inc
adc
or
dec
or
cmp
ret
arpl
mov
xor
scas
mov
push
dec
lret
fs
gs
xor
cltd
ret
xchg
loopne
jmp
aaa
decb
jb
fwait
insb
adc
call
mov
das
dec
push
xchg
clc
xchg
cli
cltd
fiaddl
stos
cld
pop
and
sbb
outsb
fs
out
jge
fdivl
push
dec
push
sbb
push
shrb
jb
popa
fnstenv
jg
jmp
es
incb
xorb
or
xchg
das
shlb
mov
icebp
mov
stos
cwtl
pop
jg
and
cmp
les
jg
push
stos
cmp
mov
mov
repz
outsb
xchg
sub
push
imul
lcall
test
inc
cmpsb
dec
daa
ds
lock
and
std
fcmovb
loope
mov
xchg
mov
stc
xchg
mov
mov
push
cmp
inc
cltd
pop
ret
adc
add
sub
cwtl
xchg
cs
pop
mov
fiadds
mov
nop
cmc
inc
outsb
push
and
loope
clc
leave
jnp
movsb
add
mov
lahf
outsb
iret
jp
adc
xor
sbb
jae
push
pop
inc
push
into
cmp
enter
ret
push
in
aam
sbb
insl
inc
pop
ficoml
cmp
div
out
adc
outsb
je
pop
adc
jecxz
pop
adc
lahf
add
lret
sub
mov
cmpsb
jge
mov
add
mov
leave
enter
aaa
js
int3
dec
insl
stos
cmp
test
cmc
pmullw
addr16
adcl
mov
lods
push
dec
mov
std
lds
sub
aam
inc
imul
sub
gs
mov
mov
xchg
lret
pop
jb
xor
cmpsl
sarl
js
jg
cli
adc
pop
data16
imul
seto
ljmp
adc
movsl
test
sbb
iret
xor
xor
jns
test
insl
int
cmpsl
cmpsb
xchg
or
int
dec
or
jmp
sub
mov
mov
sbb
mov
xor
add
cmc
and
loope
jge
mov
jl
pop
loopne
popf
cmp
into
sahf
aam
mov
or
jno
add
sti
jmp
pop
mov
pop
popa
mov
sbbb
loopne
adc
inc
and
mov
adc
xchg
pusha
xlat
cwtl
jp
sar
dec
mov
sbb
jno
push
aad
jo
sti
jl
ds
cmp
sub
cmp
nop
dec
dec
xchg
push
fidivrl
in
out
and
cmp
jp
orl
jl
es
xchg
into
push
sbb
cmpsl
cmp
adc
call
fnstcw
pop
fwait
es
and
add
adc
sub
or
loop
jge
fadds
js
stc
jnp
mov
and
mov
popa
mov
lock
addr16
dec
mov
in
testl
dec
xchg
xor
leave
pop
sub
fcoms
dec
ret
cmpsb
xchg
xor
jne
push
add
push
lea
iret
scas
enter
fists
add
arpl
xchg
adc
rolb
xor
add
adc
in
mov
fisttpll
lods
out
sub
jnp
lret
out
jg
jle
out
xor
dec
mov
mov
cmp
das
jne
paddd
pop
ja
ja
adc
dec
pop
jp
loope
and
cmp
rcrb
or
icebp
ss
mov
lods
add
push
pop
pop
push
mov
stc
shl
jecxz
cli
out
les
push
out
cmpb
ret
sub
call
iret
sbb
jl
cmc
cmc
adc
lahf
outsb
dec
sti
mov
aas
hlt
xchg
push
mov
jne
pop
cs
jecxz
das
imul
out
sarl
mov
pop
loope
jns
xlat
pop
int3
repz
gs
sti
insb
je
xchg
or
pop
sahf
push
popa
xchg
and
push
cli
or
je
inc
out
addl
scas
lods
add
in
and
sbb
pop
inc
popf
adcl
ret
mull
repnz
xor
dec
xchg
outsb
ficoml
sahf
mov
lock
jecxz
sti
aaa
or
les
push
sahf
jno
add
imul
inc
and
inc
test
jl
negl
punpckhwd
cmp
ficoml
lcall
aam
shrl
fld
dec
outsl
into
dec
aam
int3
imul
push
ret
pop
int3
lahf
cmp
out
dec
out
pop
js
adc
adc
icebp
ljmp
push
repnz
movsl
fcmovnu
mov
popf
lock
push
jg
inc
push
lahf
repnz
int
movsb
andb
add
insb
nop
push
imul
pop
inc
lret
icebp
mov
out
ret
mov
add
gs
xor
repnz
or
insl
adc
sarb
mov
push
mov
ror
dec
xor
jl
stc
inc
sub
cmp
insb
stos
mov
test
lea
lods
rcl
xchg
movsb
cmpb
xchg
jmp
dec
mov
xlat
pop
add
bound
pop
inc
scas
cmp
jg
mov
mov
or
fstpl
ret
pop
dec
jb
jl
xchg
ss
dec
clc
rclb
jo
mov
lret
cltd
inc
jns
inc
cltd
or
imul
and
pushf
adc
ss
jmp
insb
fmull
clc
xchg
add
add
notl
mov
cmp
fidivs
sarl
maxps
xchg
mov
lcall
and
xlat
add
ret
leave
add
mov
fcmovnu
mov
mov
or
aas
ja
daa
int3
lcall
jnp
adc
adc
mov
insb
pop
pop
mov
jecxz
iret
cmp
fstpl
lret
add
mov
jno
pop
outsl
add
daa
mov
adc
sbb
pop
xchg
mov
cmp
insb
pop
fisttpll
cmp
sub
popf
mov
push
hlt
mov
or
shl
pop
xchg
lock
pushf
xor
scas
and
xchg
jg
mov
aad
and
sti
sub
subb
mov
xchg
outsb
push
sub
mov
sahf
push
adcl
dec
mov
mov
sub
insb
movsl
jno
repnz
pop
push
xchg
adc
vpsrad
sbb
or
stc
push
xor
sbb
mov
mov
cmp
adcb
and
pop
pop
dec
add
add
insl
je
mov
xchg
push
arpl
lods
lret
imul
mov
pop
xor
ss
fs
insl
xchg
sbbb
sarl
mov
mov
sbb
leave
repnz
xchg
push
js
mov
fs
or
loope
jbe
fwait
mov
sub
iret
push
fidivs
shlb
in
cli
lret
push
mov
dec
idiv
or
ja
cmp
loopne
xchg
push
enter
xchg
out
dec
adc
daa
pop
icebp
in
leave
jmp
mov
jo
lds
xlat
test
jae
popa
ret
pop
ljmp
nop
popa
test
js
adc
insb
lods
push
xchg
cmp
sbb
and
ret
test
mov
pop
or
cld
ja
pop
sbb
clc
popf
daa
in
js
mov
lods
cmpl
and
stos
cwtl
jecxz
push
xchg
lods
add
ret
fs
loope
cmc
dec
pusha
subb
mov
frstor
test
mov
mov
sub
cs
mov
push
test
fnstsw
push
ss
sub
cmp
int
jns
pop
lret
xor
push
fs
idivb
push
aad
add
pushf
sub
lea
gs
xor
bound
xor
test
push
fisubrs
les
popf
hlt
mov
xchg
mov
mov
sbb
dec
retw
push
inc
int
push
shl
mov
insb
or
enter
movsb
js
es
push
jecxz
and
or
pop
or
int3
mov
loope
arpl
cwtl
push
push
sub
ret
or
dec
lock
lcall
mov
or
xchg
fimuls
idivb
push
fbld
ret
mov
sub
push
iret
lock
mov
cmp
fists
sbb
sub
fs
cld
insb
and
xor
push
fs
sti
xor
arpl
jbe
mov
cld
jmp
jg
push
movsl
sub
mov
daa
mulb
cmpsl
adc
cmp
mov
pop
loop
sti
insb
cli
mov
cmp
loopne
xor
mov
xchg
cmpsb
arpl
xchg
aad
shrb
into
test
dec
sub
bound
or
cmp
mov
xor
lods
mov
inc
push
arpl
movsb
fsubs
cmc
mov
nop
loope
scas
int
nop
out
pop
int
inc
das
add
ljmp
loope
sub
dec
xor
or
ja
xchg
aam
femms
in
and
pop
dec
jg
jae
mov
add
aad
lcall
dec
jge
pop
jg
jae
rorl
adc
outsb
push
jp
jl
roll
push
rolb
in
push
leave
hlt
out
dec
movsb
pop
pop
cld
cld
mov
xchg
jb
movsb
push
mov
iret
push
or
sub
in
test
pop
mov
mov
mov
pop
pop
flds
jmp
sar
mov
lds
pop
xor
jnp
mov
push
es
fcmovb
xchg
pop
pop
aaa
dec
sub
cmp
js
xchg
test
and
bound
call
int
jge
loope
leave
jl
aas
adc
insl
outsl
fsubl
add
jno
mov
popf
inc
or
inc
fildll
orb
sbb
mov
test
test
pop
and
or
inc
sub
lcall
cmc
mov
xor
cli
repnz
push
into
daa
jns
popa
inc
mov
xchg
fmuls
or
pop
sti
imul
daa
sub
std
data16
sbbb
jmp
or
xchg
push
cld
test
xchg
mov
jb
mov
adc
fwait
call
out
sti
mov
lods
in
sbb
shll
lret
lods
cmp
sti
jle
mov
ret
xchg
imul
dec
inc
aas
jae
sub
jbe
insl
adc
xchg
sbb
sub
std
mov
pop
fsub
cmpsb
cmp
data16
es
mov
leave
jmp
jnp
shll
stos
mov
push
pop
mov
fbstp
push
lock
outsl
inc
insb
out
push
jbe
test
dec
shl
je
or
imul
mov
add
mov
shll
push
sub
and
pop
into
add
fs
xorb
xor
cs
jp
imul
dec
mov
pushf
push
push
inc
jb
jo
adc
pop
adc
popa
push
sbb
lock
sbb
mov
test
xor
sbbl
or
adc
xor
stos
adc
rcrl
sub
adc
dec
scas
ljmp
movsb
mov
and
sbb
aad
sbb
sahf
sbb
cmc
xor
mov
pushf
sbb
stc
dec
jno
fisttps
adc
sub
push
fstpl
pop
xchg
mov
dec
mov
mov
pop
out
push
jecxz
xor
je
mov
cmp
pop
pop
and
js
rcr
shr
std
fsts
push
sbbb
mov
mov
das
ficompl
or
pop
xchg
cltd
ret
jno
sub
cwtl
scas
jbe
into
cli
mov
inc
or
loopne
dec
pusha
mov
outsl
iret
leave
clc
shrl
mov
std
test
fmuls
inc
inc
ljmp
cld
mov
scas
in
aas
orl
sbb
les
pop
aaa
pop
mov
jae
mov
stos
cmc
mov
pop
inc
mov
jbe
fstpt
out
cld
jecxz
inc
mov
aam
lahf
movb
out
ljmp
and
dec
fs
addr16
push
rcrb
xor
sub
rcl
add
pop
jo
or
jns
jg
enter
jns
pop
jb
dec
xor
dec
pop
ficomps
inc
aas
push
mov
orl
cmp
inc
xlat
loop
dec
adc
jecxz
rdmsr
add
imul
pushf
mov
fwait
mov
sbb
pushf
scas
cs
lcall
jbe
mov
es
pop
shl
cmpsl
cmp
ret
cmpsl
lahf
xchg
cmp
xchg
lret
jne
xor
into
outsl
push
sbb
push
dec
addb
inc
xchg
dec
aam
aad
repz
mov
ret
jl
int3
cmp
jmp
fwait
add
or
sub
add
fdivrl
dec
imul
rcrl
es
dec
ret
pop
mov
je
inc
mov
test
inc
xor
dec
pop
pop
jbe
stos
roll
dec
add
out
add
mov
push
addr16
inc
dec
xchg
stos
sub
aam
inc
or
inc
insl
inc
fdivrl
jno
daa
lcall
mov
fstl
push
xchg
jne
sub
pop
push
mov
mov
xchg
loopne
mov
inc
mov
test
inc
lret
repz
xor
xor
repnz
movsb
and
out
scas
loope
cwtl
js
wrmsr
jb
jne
mov
push
add
mov
mov
jno
pusha
shr
and
and
jne
repnz
cs
in
inc
mov
xor
into
sub
sbb
pop
xchg
ds
mov
add
sub
in
dec
add
shrl
xlat
stos
and
outsl
xor
mov
xlat
scas
mov
outsb
mulb
xchg
shll
es
push
and
sub
fcoms
jp
insb
enter
cmp
lret
or
mov
das
les
mov
test
lods
cmp
out
push
andb
and
xor
test
daa
leave
outsb
sbb
add
adc
dec
sbb
aad
mov
out
jnp
pushf
add
ljmp
dec
rcrl
or
jmp
incl
mov
xlat
std
pop
mov
lods
sub
gs
cmp
cmp
fmull
add
cmp
hlt
cmp
fs
mov
int
imul
outsl
dec
lahf
shl
sbb
jp
iret
ret
jl
jbe
mov
jno
jno
imul
les
xor
or
lret
std
fiaddl
loop
sub
adc
loope
or
add
roll
test
shrl
xor
data16
stos
fcmovbe
mov
push
mov
pop
cmp
inc
shll
push
mov
jle
fcomps
push
lock
ja
jecxz
pop
jb
aaa
push
out
enter
push
in
mov
jnp
xor
rcrb
jns
insl
pop
xchg
sbb
add
fidivs
xchg
dec
jae
mov
inc
jae
xor
andl
mov
mov
pop
lods
aam
fmul
insl
sbb
mov
mov
mov
mov
movsl
in
mov
mov
mov
repnz
xor
inc
mov
pop
ficoml
insb
scas
jg
jno
popa
mov
loope
sahf
push
syscall
jb
cmp
loope
jg
pop
es
int3
out
or
out
loopne
scas
mov
adc
inc
xchg
pop
cli
aaa
mov
enter
pop
add
loope
out
int3
outsb
test
int3
add
arpl
pop
rcrl
cmp
idiv
cmp
cmpsb
sbb
mov
pop
fldl2t
in
call
push
pop
xlat
incl
les
lds
or
out
cmpsb
sti
lcall
call
mov
test
dec
mov
mov
icebp
mov
xchg
or
test
mov
xchg
lahf
push
add
dec
cmpsb
in
and
movsl
pop
add
pop
loop
dec
add
int
test
hlt
dec
dec
cmp
insl
jns
push
and
ja
sarb
jns
ficomps
inc
popa
jns
mov
mov
sbb
add
or
inc
push
dec
subb
lcall
adc
jb
arpl
sti
ret
push
mov
xor
aaa
push
inc
inc
mov
mov
loopne
mov
arpl
cmpb
pop
mov
ret
and
sub
mov
aaa
sub
fldenv
dec
pop
mov
jl
adc
out
ror
push
aas
dec
cmp
lds
sub
pop
out
mul
ljmp
cmp
ret
sub
out
pop
gs
pop
dec
pusha
sbb
gs
out
and
stc
outsb
xor
xor
lock
scas
fstl
addl
pushf
sbb
and
ftst
stos
shrb
mov
ffreep
pop
push
int3
jo
mov
mov
outsb
push
xorl
in
xor
and
xor
movsl
sub
sub
inc
lret
movsl
call
xchg
push
fdivrl
jbe
sub
mov
lret
jo
pop
out
into
jle
xchg
push
nop
mov
nop
and
test
or
setle
pop
sub
mov
je
addl
shl
mov
cmp
xor
xchg
mov
and
lcall
xlat
gs
ja
dec
jnp
mov
scas
cltd
sbb
adc
lahf
repnz
pop
call
adc
orb
mov
loopne
push
and
or
jb
fs
xchg
push
rclb
sbb
sahf
jmp
test
sub
push
enter
or
aad
aaa
in
sub
fidivrl
push
inc
add
lods
in
cmp
inc
adc
mov
aad
or
add
mov
fiaddl
ss
lock
sti
and
cwtl
fisttpl
call
ds
stos
aam
mov
add
xlat
pop
adc
add
pop
mov
sbb
add
cmp
dec
xchg
and
xorl
insl
add
fucomi
xchg
fdivs
outsl
mov
sbb
jno
lea
aam
inc
sbb
xchg
sbb
rolb
cmp
cmp
pop
inc
test
outsb
fdivl
pop
or
dec
mov
mov
push
push
push
dec
int3
pop
jl
pusha
or
fcompl
sbb
or
sbb
popf
add
bound
loop,pt
insb
mov
out
lods
adc
xchg
insl
dec
int
xchg
faddl
xchg
daa
xchg
outsb
and
inc
sbb
mov
shr
mov
jne
bound
out
cmp
xor
xchg
in
shld
ja
daa
shl
dec
loop
xchg
hlt
or
into
mulb
push
leave
inc
rolb
aad
inc
inc
imul
sbb
aam
sti
scas
push
mov
jp
in
or
jns
mov
push
mov
mov
lcall
out
jnp
iret
in
dec
mov
cmpsl
in
jg
adc
cli
dec
inc
shr
mov
mov
addr16
fdivl
cmp
jmp
jbe
fcoml
adc
addr16
pop
scas
fcompl
inc
stos
cld
xor
xchg
jns
adc
add
popa
mov
or
sub
pop
sub
and
inc
push
xchg
arpl
jle
fs
jno
stos
enter
rcll
mov
test
in
rcrl
jnp
jle
jno
jo
inc
jl
dec
xchg
repnz
sub
sub
sub
or
repnz
jne
ficompl
rclb
mov
aas
adc
fimuls
cmpsl
jmp
sbb
daa
add
lods
fildl
std
dec
inc
aas
jo
bound
gs
xchg
jb
jno
mov
and
jae
cmp
adc
lret
pop
fstp
ret
cmp
insl
pop
mov
xchg
inc
inc
jnp
pop
lock
and
mov
push
leave
lds
push
adc
aas
jnp
js
adc
test
jp
push
ret
mov
sarl
dec
shll
ljmp
sub
xchg
loope
xchg
cmp
aaa
and
mov
lea
jnp
mov
and
and
outsl
sbb
mov
inc
xor
int
nop
ja
adc
push
sub
test
in
push
xchg
out
mov
xor
sahf
dec
movb
sub
in
adc
sub
ret
gs
adc
jecxz
xlat
ds
and
jge
test
sub
cli
clc
mov
pop
pusha
cmp
popf
iret
les
mov
imul
sub
sub
daa
fiaddl
xor
out
or
sub
pop
and
xor
push
mov
pop
es
ds
jne
int3
lcall
dec
fdivs
cmp
roll
mov
es
nop
xor
xchg
xor
add
xchg
call
mov
jle
cbtw
xchg
lret
in
subl
add
aam
mov
out
jecxz
cs
adc
adc
das
lret
test
pop
sbbb
es
inc
int
jle
jl
insb
aam
movsl
xlat
jl
mov
mov
out
mov
pop
inc
inc
xor
cwtl
stos
lret
rcr
cmp
jle
sti
pushf
or
fs
ljmp
or
mulb
xlat
es
cs
lods
test
push
mov
push
mov
jb
jp
int
nop
mov
test
jmp
cli
js
dec
cmp
cld
test
fcmovnb
mov
sub
cmp
jmp
mov
rorb
mov
mov
imul
xchg
jns
cmp
push
out
int3
xchg
sub
push
hlt
andb
js
bound
out
aas
add
adcb
data16
inc
jo
dec
xchg
out
flds
ficompl
insb
or
pop
int3
sbb
pop
xchg
out
cld
mov
in
scas
mov
mov
aam
push
jp
xchg
dec
dec
jle
mov
daa
sub
pop
sub
cmp
xor
shl
lret
test
mov
inc
test
ret
mov
in
repz
stos
rcpps
dec
addr16
or
push
test
cmp
lahf
gs
into
mov
mov
out
jle
mov
ret
adc
adc
leave
les
sbb
leave
sahf
jnp
sub
xchg
jecxz
sahf
sbb
mov
aas
push
mov
cmp
push
mov
jo
sub
test
adc
dec
loope
rolb
mov
push
imulb
jle
pop
mov
loopne
pop
push
and
popf
push
pop
or
and
dec
fldt
lcall
adcb
pop
pop
pop
push
cwtl
dec
hlt
fnstcw
sub
cmpsl
in
dec
shrl
inc
loopw
icebp
sbb
xor
jns
pop
jo
sub
inc
lea
popf
or
mov
inc
scas
pop
test
popa
jo
je
movsb
into
mov
mov
dec
jmp
inc
sub
ds
push
pop
sbb
mov
xlat
lods
inc
mov
mov
nop
icebp
stos
scas
or
mov
iret
cld
inc
xchg
sbb
lods
lock
push
jmp
xlat
ja
dec
mov
jnp
xchg
mov
adc
popf
cmpl
sbb
sub
jns
mov
jne
ret
push
les
mov
subl
or
cld
cmp
or
xchg
test
sbb
repz
ficomps
mov
insl
xchg
stos
sbb
iret
inc
push
outsb
outsb
je
filds
fwait
inc
mov
aam
stos
dec
jae
mov
mov
inc
dec
adcb
xor
sbb
xor
ss
leave
mov
jmp
mov
push
cmc
mov
hlt
dec
mov
mov
mov
into
jle
xchg
andl
fcmove
ret
xchg
aad
push
jg
lahf
add
pop
lock
sub
repz
jg
adc
and
sbb
lea
sbb
mov
addr16
mov
add
aas
xor
outsl
js
dec
roll
shll
adc
cmp
sbb
les
ja,pn
es
outsb
pop
or
pop
xor
cmp
out
adc
ss
mov
bound
mov
dec
adc
dec
dec
jmp
fwait
notb
adc
adc
popf
lods
or
mov
cmp
add
mov
test
adc
fnstcw
lods
and
mov
call
adc
aas
cmc
jae
xor
or
jbe,pt
out
push
aas
pop
les
jnp
lahf
out
xlat
xor
push
popa
faddp
addb
in
loopne
sbb
lock
nop
mov
fsts
pop
rcrl
push
xor
in
xlat
daa
fisubrs
pop
mov
mov
sahf
xor
sbb
in
mov
cltd
shll
mov
popa
and
mov
jne
aam
or
add
int
xor
push
out
adc
xchg
ror
js
mov
call
inc
leave
cmpsl
mov
sbb
and
insb
int3
dec
lods
dec
aad
push
lret
push
cmp
fadds
movsl
aaa
mov
mov
mov
xchg
jno
cmpb
and
mov
dec
xchg
jg
jae
lock
mov
add
add
add
mov
movsl
or
outsb
hlt
inc
inc
cmpsl
cmp
fldenv
mov
fxch
addr16
jl
and
xchg
sbb
fsub
inc
xor
icebp
js
push
push
aaa
mov
pop
cwtl
repz
hlt
js
mov
jne
je
cmp
inc
sbb
rep
fadds
roll
cmp
imul
testl
rcrb
cmc
dec
fs
lods
inc
add
pushf
and
stos
insb
mov
mov
push
cltd
jecxz
fwait
ja
fbstp
or
cmp
jg
sub
mov
sub
int
pop
cltd
insb
fldl
xlat
gs
mov
sbb
lret
fs
dec
xor
xor
sub
jae
mov
cli
add
hlt
pushf
pop
out
movsl
pushf
pop
push
arpl
ja
or
mov
fdivl
lret
xchg
add
add
incb
cmpsl
add
ss
in
sbb
mov
inc
std
inc
push
sti
leave
xor
jg
sti
xorl
xor
loop
or
sarb
aad
pop
lcall
xor
mov
mov
mov
sub
outsb
cli
cmp
leave
sub
jno
mov
xlat
stos
jb
push
add
jne,pn
fdivrl
add
outsb
jne
push
out
pop
fnstenv
fdivs
pushf
ljmp
ljmp
push
ja
dec
lds
pusha
jne
repnz
std
or
shrb
bound
pop
mov
cmp
push
lcall
or
sarb
outsb
cmp
jl
out
stos
push
mov
push
jae
movsb
dec
cmp
push
xchg
xchg
sbbb
pop
push
bound
int
xor
in
push
mov
push
sahf
cmpsb
push
jecxz
ror
mov
sti
push
mov
imul
js
punpcklwd
aas
xor
inc
ja
movsb
jbe
and
fdivrl
insb
je
xchg
ret
mov
and
mov
in
xor
jo
popf
jb
out
mov
sbb
outsb
or
fs
nop
cmp
mov
adc
adc
sbb
sub
mov
jle
mov
xor
mov
mov
xchg
or
or
js
push
sbb
inc
out
xchg
loop
ret
push
filds
dec
adc
xchg
je
pushf
or
lock
les
int3
xchg
ljmp
inc
in
pop
mov
add
scas
sar
jmp
sahf
jae
jle
xchg
scas
mov
push
jg
loop
cmpb
adc
sub
aas
ret
sbbb
das
and
fs
lds
pushf
add
cmp
cmp
or
sub
jge
fdivrl
mov
add
xchg
xchg
pop
jp
insb
jno
out
pop
pop
in
pop
sbb
test
push
lahf
loop
aam
or
push
jne
adc
mov
adc
pop
pop
push
minps
or
pop
repnz
jge
xor
lea
mov
aam
out
cmp
aam
xor
sbb
icebp
leave
push
jl
jne
cmp
shlb
pusha
pop
fildl
dec
or
mov
sbb
xchg
mov
or
aaa
sub
pop
icebp
imul
ds
rcrl
cmp
imul
test
adc
push
das
push
jmp
js
mov
and
mov
bound
jnp
std
cmpsb
xchg
aas
shl
push
xor
dec
add
add
jns
mov
mov
cmp
shl
and
test
gs
test
ss
int
popf
shll
mov
pop
outsl
xchg
ret
loope
xlat
lods
adc
repnz
sbb
repnz
xlat
add
mov
leave
call
loop
in
fidivrs
dec
xor
and
ret
cwtl
mov
push
or
cmp
call
std
loop
fwait
push
fsubrs
inc
sarl
mov
in
imul
xchg
fs
add
adc
add
pop
loope
iret
mov
mov
xchg
mov
add
xchg
push
les
jnp
lods
js
cmp
cmp
adc
out
xor
add
pop
in
stos
shrb
call
lea
lahf
mov
xor
sbb
fstl
push
dec
es
xor
into
leave
shrl
dec
adc
inc
sbb
pop
mov
mov
test
dec
sub
incl
mov
mov
lcall
int3
test
and
jbe
push
inc
aaa
xchg
test
pusha
xchg
and
test
xchg
ss
int3
scas
push
int
ljmp
mov
adc
mov
daa
js
mov
loopne
xchg
push
xor
fidivrs
movsl
imulb
mov
ficoml
sahf
adc
nop
jge
jnp
cmp
cmc
cmp
int
mov
nop
adc
sbb
enter
xlat
hlt
clc
mov
push
cmp
xlat
or
lods
xchg
jbe
push
sbb
xchg
cmp
sbb
add
cmp
aaa
lret
cmp
push
nop
mov
mov
xor
pushl
lcall
adc
or
push
cli
repz
jecxz
and
pop
pop
cmp
bound
rcll
jb
adc
inc
dec
sbb
push
movsl
rol
add
push
shl
imul
sub
add
adc
fnstenv
sub
test
das
ljmp
fistps
pop
jg
popa
repz
stos
dec
sbb
int3
adc
in
mov
or
lcall
lret
out
jg
ds
pop
adc
int3
mov
ret
inc
mov
in
lret
sbb
int
adc
movsl
in
lret
xchg
mov
flds
stos
test
aaa
pusha
cmp
cltd
push
roll
or
ret
inc
sub
and
outsl
jns
sbb
push
loop
or
ss
mov
outsb
inc
or
jmp
xchg
nop
mov
mov
jge
loopne
ljmp
sahf
mov
imul
jno
mov
repz
stc
pop
into
or
mov
lods
cmp
fadd
idivl
xchg
push
mov
cmc
int
jle
jp
mov
cmp
mov
mov
je
adc
sub
push
push
in
jne
call
aam
mov
or
jg
insl
scas
jno
lahf
pop
adc
xchg
jo
add
aad
add
dec
pop
xorb
or
popa
sbb
mov
inc
decl
testl
lret
scas
mov
pop
mov
imul
jae
jo
nop
in
sub
sub
sbb
cmc
dec
cs
dec
add
cmpsl
aaa
xor
out
mov
mov
aad
mov
add
mov
xchg
jmp
sub
and
sbb
and
loope
add
ret
dec
aas
fs
std
mov
fildll
std
sub
inc
add
sarb
fwait
xchg
jno
jno
mov
fcmovnbe
push
jno
icebp
push
xchg
out
cltd
pushw
mov
repnz
pop
add
inc
cmpsl
in
adc
sub
out
inc
mov
sti
xchg
or
adcb
xchg
jmp
out
adc
pop
ljmp
lahf
xchg
loope
fucom
sar
outsl
mov
and
lea
cmp
repnz
movsb
xchg
notb
mov
push
xchg
pop
xor
and
and
jmp
dec
cwtl
mov
cwtl
cmpsl
xor
mov
inc
out
jg
lret
adc
push
dec
popa
pop
push
mov
ret
rcl
mov
pushf
leave
mov
jno
jb
sub
aad
jmp
loopne
notl
jmp
pushf
inc
jb
outsb
mov
shlb
xchg
testb
ljmp
testb
jg
adcb
stc
mov
shr
push
sti
loopne
rcrb
cmp
cmp
sbb
mov
iret
lret
jg
popa
stos
jg
mov
test
sub
imulb
cld
add
add
aad
int3
mov
pop
daa
int
dec
leave
dec
push
jbe
sahf
outsb
sub
add
xlat
add
push
test
sahf
jl
adc
mov
cmp
outsl
insl
movl
pop
inc
mov
pop
fdivl
lcall
pop
sub
scas
punpckhwd
sub
rcpps
mov
fnsave
movsb
lret
dec
xor
inc
mov
loop
push
sarb
push
sub
and
sbb
inc
pop
or
mov
dec
inc
dec
stc
movsl
jnp
cmc
push
inc
sub
jg
shl
bound
mov
cli
stos
adc
jmp
sub
cmp
fwait
cmc
cmpsl
movsl
and
test
cwtl
iret
and
out
outsb
sub
mov
or
jno
push
xchg
and
dec
mov
inc
out
mov
js
jg
je
loop
iret
sarl
push
test
out
repz
mov
sbbb
stc
xchg
inc
mov
sub
inc
pusha
xchg
jne
adc
xor
ret
mov
scas
rcll
aaa
lahf
mov
int
in
dec
fwait
jns
cmpsl
jle
mov
cmpsb
je
fnsave
outsl
in
fcoml
mov
pusha
pop
adc
test
mov
pop
jb
mov
pop
mov
jmp
int
xchg
pushf
and
inc
xchg
mov
scas
leave
test
mov
out
sub
jbe
add
inc
test
les
pusha
mov
mov
in
sti
pop
hlt
test
stos
add
dec
and
jecxz
inc
into
cmp
mov
push
cmc
jmp
outsb
or
mov
stos
std
jb
lahf
adc
into
mov
add
jnp
jbe
fwait
cmpsl
insl
arpl
into
andl
jl
inc
fdiv
loopne
cld
aad
scas
xor
and
inc
test
and
or
jmp
push
pop
mov
imul
fwait
mov
pop
pop
arpl
inc
or
add
lcall
sbb
push
push
add
xorl
jmp
outsl
mov
pop
push
sete
cmp
add
out
mov
roll
sub
stos
outsb
aam
xchg
sub
and
mov
mov
lret
jno
movsl
ror
shll
repz
adc
sbb
add
lods
cli
fcom
ja
mov
fs
stos
fwait
ret
mov
lcall
pop
shlb
jne
test
mov
pop
mov
jbe
inc
rcrl
lret
inc
mov
dec
out
hlt
sbb
aaa
loope
lret
into
mov
int3
bnd
cmc
adcl
mov
mov
dec
out
jbe
insb
adc
cmc
sbb
outsb
in
sub
push
ljmp
cmp
out
mov
pop
dec
in
jecxz
mov
push
out
cmp
shll
aam
pop
cmp
push
scas
or
int
in
pushf
fimull
outsl
sbb
mov
test
inc
shl
mov
fwait
dec
cmp
adc
cs
xor
sub
inc
icebp
rolb
jp
pop
es
into
jp
lock
movsl
scas
fwait
icebp
jb
adc
scas
jp
and
inc
xor
jl
pop
push
or
shr
jl
orl
hlt
and
repnz
das
and
jno
icebp
fstpl
cltd
xor
xor
sub
inc
inc
push
out
aad
or
xchg
sbb
sub
sbb
std
cmp
ds
cmc
icebp
insl
dec
jne
inc
mov
sti
add
or
cmp
out
ffree
xor
sub
sub
scas
mov
mov
adc
rcrb
sar
dec
inc
pop
push
push
push
add
pop
int3
or
mov
xchg
jp
sub
cmp
xchg
cmp
lea
mov
add
or
push
jl
jne
sub
push
xchg
in
add
mov
cwtl
mull
cmp
xrelease
andb
xchg
movsb
loop
jle
in
mov
or
and
jecxz
out
xor
mov
lea
xchg
jg
mov
out
outsb
es
jbe
mov
push
ret
ror
mov
dec
fisttpl
xchg
leave
cld
jp
jg
sbbw
xor
add
inc
iret
in
ja
inc
sbb
out
insl
or
pop
les
loop
add
xchg
mov
dec
cli
add
sub
sahf
mov
dec
or
sbb
xor
xor
push
or
test
mov
cmp
mov
hlt
addr16
or
sbb
imul
push
jae
test
pop
pop
mov
dec
mov
mov
mov
mov
cmp
or
in
dec
add
xor
inc
loop
cmp
ljmp
add
sbb
stos
xor
repnz
jbe
and
cli
cmc
push
outsb
xchg
ljmp
mov
stos
aad
cmp
jle
les
pop
push
mov
int
push
sti
sahf
popf
lret
inc
push
addr16
add
jp
stos
gs
dec
fwait
das
gs
xor
rorl
mov
gs
xchg
insl
inc
mov
scas
mov
aaa
enter
jmp
enter
ficoml
add
out
lahf
sub
bound
popf
dec
push
adc
inc
ret
rcll
cmp
jmp
in
mov
stc
mov
js
inc
scas
or
jo
mov
mulb
in
mov
ljmp
sbb
into
stc
dec
xor
pop
push
cmp
jo
test
test
add
xor
sbb
fcmovu
hlt
sar
dec
cmp
push
and
aaa
scas
ret
xchg
sub
movsl
loop
fstpl
and
and
add
push
movsb
hlt
xor
adc
add
dec
xchg
inc
xor
in
int3
jne
pushf
sbb
dec
addr16
rcrl
daa
jg
mov
push
ret
inc
testb
bound
fmull
sub
je
test
push
jae
loope
or
adc
pop
add
and
and
nop
add
mov
call
jmp
mov
mov
add
or
das
les
mov
mov
push
mov
scas
mov
adc
sub
jo
cmp
test
mov
das
rcr
or
popf
push
rclb
outsb
setno
push
mov
enter
mov
mov
mov
xor
in
push
xchg
std
js,pn
mov
stos
sbb
and
daa
inc
inc
insb
fwait
push
xorl
jno
pop
scas
lods
xor
jbe
arpl
aaa
sub
imull
cmpsb
and
adc
adc
out
negb
push
push
sbb
movsb
fs
cmp
leave
pop
es
je
dec
repz
mov
out
jne
add
xlat
repz
call
enter
stc
sti
lret
repnz
in
lcall
stos
lcall
js
mov
sbb
push
cld
loop
push
cmpsl
xor
cmp
int
pushf
mov
loopne
out
into
dec
scas
pop
sub
or
jno
add
lock
adc
repnz
fcoml
ret
lds
pop
aam
movsb
data16
sbb
pop
shll
jno
add
xor
outsb
mov
inc
and
stos
nop
cmp
cld
std
push
xor
fs
stc
push
sub
xchg
pop
sarl
shlb
inc
aad
add
out
inc
orl
in
enter
scas
adc
jnp
outsl
push
cmpsb
push
daa
mov
enter
pop
mov
or
rorl
xor
mov
push
xor
insb
lret
xor
inc
sbb
mov
and
andb
cmp
ret
aas
push
jb
pop
inc
xor
ss
dec
sbb
adc
fidivrl
jno
dec
or
mov
adc
repz
js
add
paddd
fs
std
pop
pop
fstpt
jge
mov
mov
xor
fdivl
lods
sbb
ret
pop
xchg
sbb
push
or
push
and
cmp
out
mov
mov
cmp
cli
jg
cmp
fimull
sub
int
add
dec
jnp
mov
cwtl
add
add
xchg
adc
shll
xchg
push
sub
fcomi
outsl
in
sbb
test
outsl
arpl
gs
push
in
ljmp
jns
mov
repnz
dec
cmp
pop
push
cmp
pop
ss
push
or
in
or
xchg
pop
lahf
push
xchg
inc
mov
sub
and
out
std
inc
fisttps
mov
push
movsl
or
fcoml
data16
sub
jno
jecxz
sbb
adc
mov
rolb
loopne
repz
repz
and
cmpb
sbb
pusha
mov
testb
and
arpl
cwtl
jae
lods
call
add
sub
mov
popl
lret
das
jge
add
insl
push
scas
dec
xor
nop
dec
mov
adc
mov
cmp
adc
mov
std
movsb
pop
mov
xor
ss
aam
lcall
add
fisttpl
jecxz
xchg
fwait
jmp
mov
xchg
popl
xor
mov
lret
ret
daa
out
xchg
sbbl
sbb
mov
sbb
gs
dec
sahf
inc
sbb
ja
or
fnstsw
inc
sub
push
andb
shl
test
inc
pushf
psubw
mov
mov
xor
jle
xchg
imul
inc
clc
xor
fsubrl
adc
sbb
loopne
test
inc
lods
pusha
pusha
imul
movsb
sub
iret
rcrb
sbb
jne
xchg
inc
xlat
mov
subl
mov
stos
out
pop
int
push
inc
in
add
les
fs
xor
pop
jne
dec
ds
cli
pop
in
das
and
fbld
std
fstpl
inc
jle
or
lds
push
jle
xor
add
mov
pusha
pop
shr
cwtl
sti
icebp
mov
lret
cs
push
mov
jns
dec
xor
and
inc
imul
jb
mov
call
inc
mull
and
adc
or
fsubr
xor
mov
cs
mov
test
cmp
mov
insl
lret
mov
test
inc
into
pushf
jle
aaa
xor
inc
inc
addr16
xor
push
aad
ret
push
aad
divb
mov
mov
xlat
notb
push
push
icebp
cmp
push
mov
popa
xchg
fsub
push
cwtl
test
add
jae
add
mov
xchg
mov
cmp
pop
cmp
mov
inc
mov
xchg
jmp
dec
push
insb
sarb
lmsw
test
xchg
ret
shll
and
xor
jnp
mov
lea
cltd
pusha
in
cs
lret
xlat
cmpb
inc
push
js
cmp
mov
das
pop
out
out
add
es
out
add
dec
jecxz
call
sub
jg
xchg
scas
pop
je
imul
push
push
loopne
bound
icebp
stc
push
out
push
and
cld
fcom
test
insl
xchg
rorl
les
sbb
cmpsb
push
mov
call
mov
outsl
scas
inc
cmpsl
pop
push
or
mov
fldl
lahf
movsl
cmp
xchg
pop
add
xchg
shlb
adc
enter
xchg
mov
ret
test
fistpll
mov
stos
fs
xor
cmp
and
sar
idivl
mov
inc
add
cmpsb
lods
and
idivb
add
aad
mov
and
lcall
and
sub
add
xchg
mov
icebp
js
fdivrl
subb
inc
hlt
adc
inc
jge
ljmp
xchg
lret
jno
inc
jo
dec
js
aam
or
fs
lea
dec
xor
mov
xor
jo
fwait
or
adc
sti
mov
jno
mov
data16
mov
dec
daa
in
inc
cmc
movsb
in
mov
mov
js
and
ret
sub
push
jmp
addr16
dec
and
sub
xor
sbb
xlat
arpl
xchg
inc
dec
mov
ror
xchg
add
shl
cwtl
es
sahf
push
int
in
js
mul
jns
fldln2
fdivr
pop
popf
ljmp
lds
shr
fdivrl
sbb
insl
cmpsb
dec
fistps
sub
mov
in
and
mov
test
and
das
mov
xlat
inc
data16
inc
cmpl
jle
adc
mov
fucomip
mov
sub
outsl
sub
es
mov
cltd
enter
cmc
pop
mov
fidivrs
loop
or
adc
inc
gs
fldl
mov
data16
lds
stos
in
in
imul
hlt
cld
sbb
mov
inc
pop
mov
xor
test
sbb
mov
adc
mov
inc
jns
sub
and
add
dec
cli
push
outsl
enter
loope
js
or
jns
movsl
xchg
xorl
sarl
mov
mov
sbb
pop
jle
pop
dec
iret
xchg
testb
lods
leave
pop
sub
loopne
push
xchg
lret
dec
sahf
sub
adc
icebp
into
ljmp
pop
inc
popf
lods
mov
sub
jb
xchg
daa
sahf
adc
test
push
repz
fadd
mov
cmc
pop
or
jmp
mov
dec
outsb
mov
out
cli
insb
jno
scas
leave
lock
pusha
mov
mov
fmulp
mov
je
sbb
mov
inc
and
clc
pop
jle
popa
cli
outsl
jmp
idivb
dec
xchg
stos
push
cld
adc
int3
or
xchg
fiadds
mov
int
repnz
xchg
dec
jns
insl
mov
icebp
ss
mov
into
outsb
arpl
cs
xor
jne
xchg
mov
sbb
mov
inc
inc
scas
xor
pop
mov
xor
xor
add
and
jne
and
xor
imul
test
mov
cmp
aad
jo
cmpsl
dec
inc
in
xor
fisttps
insb
pushf
mov
push
jg
xchg
jl
loope
ds
xor
je
xor
push
push
add
push
jnp
ss
mov
inc
roll
push
aad
and
into
and
inc
push
xchg
xor
sbb
fwait
mov
mov
jne
ja
repnz
xchg
sbbl
push
mov
insl
push
lock
mov
inc
popf
pop
addb
mov
lret
mov
shrl
push
cli
and
aaa
fdivrl
in
push
xchg
sbb
dec
arpl
je
jno
adc
repnz
ret
dec
and
pusha
xor
clc
jmp
cmp
xor
jae
dec
je
pop
roll
xchg
mov
hlt
inc
popl
pop
lds
mov
cmp
cmp
sub
xor
daa
xchg
mov
leave
push
push
loop
lret
outsl
js
xor
into
int
ss
or
and
jnp
push
in
daa
sbb
imul
out
js
pusha
fwait
cmpsb
push
lods
jmp
cmp
mov
dec
inc
imul
or
push
jle
mov
push
fidivrl
jge
pop
fisttps
ljmp
lahf
xchg
xlat
fidivrs
mov
cld
lcall
mov
dec
push
jmp
xchg
jnp
inc
ljmp
leave
inc
insl
push
in
ret
inc
in
cli
dec
mov
xor
inc
add
stc
mov
xchg
xchg
xlat
shlb
outsl
arpl
int3
cli
push
hlt
cmp
xor
cwtl
jno
into
inc
sbb
add
adc
fmulp
xchg
mov
xchg
xchg
movsb
insb
das
jle
mov
sbb
pop
dec
fidivrs
sub
push
out
in
lea
pop
andb
fwait
movsl
xchg
push
xchg
or
xor
mov
sub
bound
and
out
andl
or
sarl
mov
xchg
push
jge
and
adc
fstpl
imulb
xor
dec
cmp
pop
std
and
jg
push
add
push
outsb
add
add
fs
mov
adc
cld
movsb
shrb
rcrl
mull
mov
leavew
push
popw
in
jnp
ret
adc
jmp
jecxz
jl
xchg
lock
fs
or
icebp
hlt
shr
mov
in
rcrb
inc
ret
ror
fstpl
or
xchg
pushf
out
insl
push
mov
mov
lahf
fisttps
inc
pop
call
push
sar
leave
pop
add
mov
jle
lret
mov
cmpsb
outsl
cltd
aas
pop
hlt
nop
mov
stos
ficomps
aaa
inc
fwait
dec
je
es
in
gs
sarl
outsl
mov
pop
mov
test
orl
pop
popa
js
rcrl
lcall
mov
sub
loope
enter
addr16
mov
xor
add
push
xorb
adc
cmp
into
xchg
stc
imul
dec
pop
sub
outsl
jo
cmc
add
mov
in
jbe
cmp
lcall
mov
out
mov
pop
std
dec
add
adc
fisttpll
stos
fldcw
fmuls
rcll
mov
idivl
lock
inc
xlat
dec
test
outsl
fnstenv
adc
push
jb
cmp
pop
clc
mov
into
mov
frstor
cmc
dec
jb
movsl
fs
hlt
cmp
pusha
sbb
xor
sbb
mov
es
inc
test
test
mov
data16
aam
pop
popa
add
jecxz
sub
cmpsb
jns
in
xchg
jg
push
push
pop
and
repz
mov
xchg
xor
xlat
dec
inc
cmp
loopne
pop
addb
adc
fldenv
pusha
inc
negl
or
jp
les
sub
xchg
insb
push
gs
jno
jle
out
sbb
cmp
in
sahf
rcrb
mov
mov
in
cs
jg
xor
xchg
sahf
in
int
sbb
loop
outsl
fsubl
push
jno
add
sub
jae
mov
jge
jge
cs
xchg
ret
or
mov
scas
mov
fldl
xchg
jmp
mov
push
jne
out
or
lahf
cltd
xchg
dec
in
adc
jl
push
xchg
jg
shl
dec
f2xm1
xchg
mov
sub
pop
gs
jg
aam
sbb
daa
mov
cld
stc
sub
in
fimuls
fwait
in
ja
push
stc
pop
loope
xchg
push
pop
jb
mov
add
scas
dec
jae
adc
mov
jmp
cmp
mov
scas
jge
ss
or
xchg
movsb
outsl
xor
pushf
lods
lret
mov
and
ret
xchg
lods
mov
mov
bound
daa
sub
lea
sub
fwait
and
fcmovnbe
jbe
mov
daa
fsts
addr16
arpl
addl
cmp
jecxz
and
add
and
sub
loope
out
out
pop
adc
lret
jbe
sub
ret
jae
sbb
enter
addr16
mov
or
or
clc
mov
scas
mov
mov
js
rclb
xchg
lds
xor
outsb
jmp
cmp
decl
loopne
in
imul
xchg
mov
cli
outsb
cmp
sarb
add
sub
xor
cmc
adc
pop
mov
xchg
add
adc
pop
test
adc
or
add
jbe
stc
cld
lds
test
mov
and
popa
dec
or
xchg
push
push
stos
cmp
push
inc
adc
out
add
xchg
aam
mov
mov
sbb
or
cmc
mov
rcll
fwait
or
cs
rcr
push
shlb
inc
scas
hlt
pop
push
shlb
dec
mov
xor
cld
lock
lret
push
xchg
nop
pop
lret
xor
jp
dec
pop
ljmp
iret
xchg
fwait
pop
sub
movsl
fwait
punpckhdq
push
xchg
fsubrs
int3
iret
xlat
mov
jne
xor
imul
cld
mov
insb
sbb
fiaddl
sbb
sbb
mov
or
idivb
into
pop
add
xchg
pop
cmpb
fwait
cmp
xor
ljmp
jae
outsb
jmp
dec
enter
data16
fwait
sti
mov
aad
xchg
xor
shlb
fs
jl
mov
aas
arpl
std
pop
ret
inc
mov
js
out
jne
push
mov
ret
subl
jb
insl
sti
lods
adc
shlb
jo
push
imul
es
cmpsl
xchg
mov
bound
in
add
pop
std
dec
pushf
mov
popf
cmpb
mov
ja
clc
popf
js
fistl
xlat
arpl
sub
jle
and
iret
repnz
test
cmp
sbb
mov
sbbl
cmpsb
mov
aam
dec
push
dec
add
mov
mov
popf
mov
fmuls
xchg
cmp
pop
lret
inc
test
xchg
or
pop
adc
lcall
or
sbb
fadds
cmp
inc
out
and
xor
aas
cmp
sbb
pop
jle
cmp
outsb
subl
fstl
aas
dec
testb
push
xor
mov
xchg
jmp
mov
das
mov
inc
xor
sbb
cmpsl
dec
add
pop
clc
je
adc
ljmp
mov
cmp
stos
cltd
enter
jno
ja
xor
rcll
xor
scas
mov
clc
sbb
dec
out
mov
sti
cmpsl
push
and
loopne,pt
mov
out
xchg
mov
or
mov
cmp
push
mov
bnd
call
cmpsl
or
adc
pop
aam
dec
lods
push
gs
push
hlt
and
mulb
sbb
xchg
out
movsl
jae
jae
rcl
lret
mov
jge
mov
gs
and
lret
cmp
repz
dec
mov
push
xchg
cmp
andl
adc
lea
mul
mov
jl
xor
xor
mov
add
out
cli
jmp
xlat
stos
pop
lods
adc
sub
lret
shlb
jbe
lret
inc
xor
jb
add
and
add
cmp
gs
shr
fstps
jmp
repnz
mov
iret
lds
xor
pusha
or
jne
fistpll
push
xlat
push
shrl
jbe
inc
jbe
xchg
jae
xchg
cld
xor
mov
fs
add
push
push
pusha
push
inc
adc
stc
jmp
mov
testb
jnp
adc
pop
jp
movsb
pop
cmp
lcall
adc
in
shrl
repnz
sbb
pop
sbb
repnz
jp
xchg
inc
cmp
inc
mov
bound
in
imul
insb
jmp
shrl
mov
roll
jnp
fsub
jns
jnp
xor
add
mov
clc
and
xchg
and
mov
jecxz
add
test
pusha
pop
xchg
pop
cmp
mov
sahf
mov
mov
xchg
gs
jecxz
sub
mov
iret
cwtl
dec
arpl
pop
aad
ljmp
push
mov
scas
lcall
inc
xchg
adc
push
mov
sahf
push
hlt
stos
imul
xchg
clc
pop
mov
jae
xchg
aad
sbb
xchg
adcl
and
and
pushf
js
sti
sbb
jne
xor
imul
push
and
xchg
sub
sub
xlat
inc
repz
dec
add
sub
mov
mov
mov
sub
dec
jno
pusha
sub
sub
mov
xor
nop
jl
imul
sbb
sti
idivb
out
aad
lret
loopne
repnz
lret
mov
lea
addl
dec
xchg
sbb
call
cmc
subb
jnp
sub
push
hlt
adcl
lock
mov
pop
push
iret
adc
push
loope
push
sbb
lds
fmull
push
shlb
cmpsb
add
xor
repz
mov
data16
jae
fisttpll
ja
mov
lea
cs
gs
inc
cltd
in
or
xor
mov
lock
and
sub
cmpsl
dec
mov
push
dec
add
lods
lret
xchg
xchg
cltd
ficomps
mov
xchg
mov
pusha
mov
cmp
mov
push
ss
mov
jns
sub
and
fdivr
leave
cmp
adc
sti
out
popf
inc
fidivrs
xchg
jns
bound
shlb
fldenv
sarb
mov
and
sub
mov
repnz
lods
pop
lea
inc
xor
pop
jp
mov
lret
scas
es
ret
jbe
pop
hlt
sbb
addr16
or
lahf
imul
jnp
jns
and
pop
cltd
int3
jbe
test
enter
adc
shrb
inc
cmp
adc
fmuls
fsubrl
addr16
arpl
xor
jb
in
icebp
cltd
stos
lcall
or
fwait
xchg
insb
push
arpl
daa
dec
ds
clc
push
loop
push
inc
add
cmp
sahf
loop
xorb
pop
and
pop
das
fsubrs
ret
xor
or
roll
xchg
push
adc
xchg
mov
push
fsubl
push
fidivrs
mov
icebp
pop
cmc
dec
push
mov
xor
inc
loopne
cmpsl
out
or
mov
iret
pushf
xor
and
repnz
rcll
pop
iret
lahf
jle
pop
ffreep
imul
hlt
xchg
in
cmpsl
cwtl
push
jae
sar
aas
pushl
call
add
mov
push
xchg
jle
mov
sub
push
dec
std
insb
enter
inc
into
movsl
rcr
es
xor
sbb
adc
mov
lds
test
push
jno
imul
loopne
outsl
mov
fldenv
xor
movsl
aaa
insl
push
sti
mov
int3
xchg
mov
test
ss
popf
and
repnz
inc
mov
dec
mov
std
adc
jecxz
pop
jb
mov
cs
jo
jp
jp
adc
inc
iret
jnp
xchg
rcll
pop
mov
mov
addr16
insl
outsl
mov
aas
out
cmpsb
sbb
push
outsb
and
inc
mov
xorl
ljmp
pop
ficomps
out
pop
xchg
lcall
or
sub
sub
ss
inc
sti
aad
sub
cmp
out
enter
fldenv
in
imul
addr16
ffree
push
addb
das
xchg
scas
dec
mov
pusha
dec
xchg
push
mov
xor
aaa
js
adc
out
cli
lods
mov
fistpll
cmpsl
push
fiaddl
or
test
je
jno
sub
paddusb
rcrl
mov
sbb
inc
or
xor
stc
inc
in
mov
aas
mov
inc
cmp
std
rcrl
loop
into
clc
in
lret
lock
or
sbb
dec
pop
push
cld
je
inc
jg
rcll
jge
fxch
test
add
bound
dec
lea
xchg
and
and
lea
xchg
pop
sarb
or
or
aam
pop
mov
xorl
es
inc
pop
out
aad
adc
adc
insl
imul
inc
push
bound
ret
and
pop
cmpsl
cld
sub
test
arpl
push
cmp
xor
mov
mov
je
hlt
mov
adc
jns
or
adc
in
cmc
sub
mov
mov
sub
std
sahf
mov
pop
repz
xlat
fldt
aad
cmp
inc
or
out
mov
daa
fmuls
or
mov
jmp
mov
sub
mov
push
cwtl
and
mulb
arpl
cmp
ficompl
sbb
je
repz
lea
lcall
jb
jno
clc
loopne
mov
mov
pop
jl
into
imul
ja
and
sub
stos
shrl
or
aaa
pop
dec
aam
mov
iret
arpl
das
and
addb
xchg
push
aaa
insl
fldl
cmp
nop
jg
test
hlt
sbb
aam
and
dec
jle
das
cmp
out
cmp
les
lock
inc
cmp
and
jb
das
out
xchg
xchg
bound
aaa
add
lea
inc
call
imul
popf
xor
ds
daa
inc
mov
insb
mov
sti
pop
jmp
jge
xchg
sbb
out
mov
sqrtps
aam
arpl
or
fistpl
incb
retw
jecxz
icebp
cmpsl
or
jmp
add
lret
test
add
test
aas
pop
mov
sbb
jp
aaa
mov
sbb
xor
movsl
test
mov
dec
fst
ss
add
cmpsl
test
add
cli
std
mov
add
imul
into
ret
jp
pop
mov
imul
xor
mov
mov
cmp
mov
xchg
pop
adc
imul
scas
xorl
adcl
jp
sub
cli
cmp
xor
dec
std
adc
or
push
inc
pop
ror
fsts
fcmovu
jp
pop
ds
sub
dec
sbb
push
adc
or
lea
enter
std
addr16
sub
fsubrl
and
mov
dec
enter
faddl
adc
bound
in
pusha
mov
mov
jbe
xchg
inc
lahf
pushl
sbb
std
js
jecxz
ljmp
test
cli
pop
sub
push
xor
jns
sbb
call
lret
add
dec
stos
ret
fnsave
xchg
pop
mov
xchg
lock
add
daa
pop
mov
xchg
rol
mov
shrl
imul
xor
mov
lea
or
repz
in
aas
cmp
fwait
or
outsl
in
in
ja
and
jnp
push
xchg
scas
sub
icebp
mov
push
pop
mov
mov
mov
lret
mov
lret
sub
dec
cmc
fdivrl
stos
mov
sub
cli
andb
loope
out
adcl
jne
sub
cli
mov
adcl
adc
jmp
addr16
in
and
clc
int3
dec
fsts
pushf
addr16
xchg
cs
xor
pop
movsb
out
sbb
scas
mov
jae
xlat
aad
xor
adc
mov
mov
or
aam
in
addr16
loopne
sub
cmpsb
out
clc
imul
or
insl
push
xor
and
fs
and
xor
cmp
mov
adc
mov
lea
aaa
lret
mov
repz
jp
aad
hlt
push
sub
inc
push
lret
out
push
out
add
addr16
sbb
pushf
mov
pop
aam
insl
pusha
sub
xchg
xor
outsl
and
push
jg
lret
cld
push
bound
fiadds
shr
pop
cmp
or
xchg
and
push
loopne
pop
jae
fisubs
pop
ja
pop
mov
mov
or
insl
repnz
xchg
mov
pop
ss
das
and
push
push
or
sbb
test
xor
hlt
fstpl
sbb
dec
mov
push
adc
sarb
repnz
cmp
sahf
mov
shll
dec
dec
xchg
pop
push
rorl
jns
mov
fidivs
adc
movsl
xchg
pop
xchg
pop
jp
mov
lods
aam
das
pop
adc
mov
lcall
and
xchg
out
cmpsl
xor
repnz
loope
popa
call
sub
arpl
shll
jno
mov
jne
mov
jmp
push
xchg
add
jb
clc
ds
negb
cmp
test
icebp
ljmp
dec
jb
pop
cmp
jecxz
jb
inc
add
pop
cwtl
or
movsl
cmp
icebp
dec
xlat
adc
push
cmpsl
inc
dec
testl
mov
into
sub
sbb
aas
in
fisubl
sub
fcoml
mull
push
xchg
jmp
pop
and
add
aad
lea
jge
mov
cmpl
add
aad
xor
test
add
xchg
adc
push
shlb
dec
cld
pop
xor
adc
sub
sub
mov
out
sarb
cmp
nop
mov
inc
mov
insb
dec
dec
jmp
mov
pushf
daa
and
test
add
mov
and
mov
out
ret
sahf
inc
mov
imul
popf
jno
mov
inc
orb
add
insl
xchg
aas
fwait
jecxz
cmp
lock
jmp
mov
rorb
xchg
xor
push
cmp
or
lea
das
adc
loopne
mov
cmp
inc
pop
shrb
in
cltd
xor
push
or
imul
mov
imul
lods
outsl
imul
and
mov
dec
push
mov
cmp
fcmovnbe
or
mov
mov
jnp
lods
lods
out
fnstcw
jo
push
mov
or
movsl
std
lock
fwait
inc
jmp
jmp
xchg
js
jmp
mov
call
add
mov
ja
aas
fistpll
rclb
jno
pushf
xlat
pop
jnp
insl
loope
mov
pop
xchg
jo
push
lods
add
dec
out
sbb
dec
sub
sub
xchg
gs
jg
mov
or
out
mov
sti
mov
dec
mov
cwtl
adc
pushf
mov
jle
bound
inc
push
xor
int3
les
in
jb
stos
fwait
lret
nop
repnz
imulb
mov
push
popf
dec
fildl
pop
repnz
lahf
inc
in
adc
sahf
lods
xor
push
cmp
cmpsb
out
adcb
sub
xor
mov
push
rcrb
dec
popf
jecxz
fisttpll
jg,pt
add
adc
daa
mov
and
push
inc
leave
push
dec
mov
outsb
push
mov
lods
mov
cmpsl
push
clc
mov
mov
out
jno
int
filds
inc
push
leave
mov
mov
enter
push
mov
movsb
or
test
adc
pop
jne
fidivrs
ret
je
mov
cmp
sub
aad
inc
xor
ror
cmpb
dec
out
add
je
mov
push
mov
mov
jmp
aam
mov
hlt
ret
imul
mov
xlat
sub
dec
push
push
mov
imul
hlt
test
sub
jp
cmp
rcr
in
ljmp
jns
jmp
daa
mov
imul
orb
cmc
pop
sahf
stos
ret
mov
jne
fnsave
xchg
lret
loope
icebp
cmpsb
cli
nop
dec
das
xchg
mov
xor
xchg
mov
cmovl
jns
xchg
popa
loope
dec
push
pop
clc
pop
pop
int
xor
js
movsl
test
adc
mov
cmp
ds
out
jb
jecxz
scas
iret
dec
pop
stc
adc
adc
iret
imul
test
sub
fisttps
dec
mov
rclb
in
pushf
ret
jae
lea
pop
mov
adc
push
das
mov
add
sbbb
sbb
dec
sub
cmp
inc
add
adc
xor
push
inc
sbb
clc
addl
cmp
pushf
std
es
fdivrp
ljmp
fwait
icebp
fcmovb
pop
pop
shl
add
fwait
js
xor
push
inc
inc
inc
adc
inc
cmpsb
adc
cmp
lret
test
mov
sub
out
mov
inc
nop
sbb
xor
inc
incl
enter
call
sub
out
xchg
ror
lret
loopne
daa
cmp
je
jge
jg
and
nop
dec
ljmp
inc
jae
gs
and
inc
in
leave
xchg
jg
ret
pop
mov
shl
adc
mov
sbb
mov
mov
outsb
push
leave
lahf
add
in
inc
mov
xor
ja
add
cmp
mov
lret
shr
cs
mov
mov
sub
jle
outsl
xchg
or
mov
loopne
pushf
loop
adcb
mov
mov
mov
xchg
push
cmpsl
lret
in
shrb
xor
rcrb
shrl
and
push
andl
cmp
jno
imul
test
jnp
mov
jns
fdivs
ficomps
in
mov
sti
fwait
into
mov
addr16
ljmp
ds
jp
aam
imul
es
js
push
mov
or
addr16
push
inc
loopne
fidivl
and
xchg
pushf
and
add
mov
cld
xchg
ret
or
bound
dec
xchg
shl
cmp
xor
lods
lock
popf
push
div
cmp
add
lods
dec
mov
add
mulb
jne
xor
inc
dec
or
cli
int
push
out
insb
fmuls
add
push
xchg
or
iret
out
faddl
insl
jnp
imull
adc
sahf
jge
add
cmp
push
sahf
cmp
cmp
in
fwait
inc
push
inc
jmp
xlat
addr16
cld
add
xchg
sti
movsl
fdivs
rorl
push
loopne
mov
mov
dec
ffreep
mov
mov
mov
iret
test
adc
mov
pusha
insb
dec
lcall
popa
leave
cmp
cmp
and
cmpsl
adc
xchg
inc
sbb
jno
fildl
andb
adc
int
ds
mov
js
mov
add
jne
scas
fwait
lods
jle
daa
inc
addr16
repz
mov
mov
aaa
sub
and
xor
add
lods
enter
psllw
jb
pop
out
dec
inc
mov
cmp
mov
sbb
std
shrb
xchg
jb
repz
callw
stc
rclb
pop
sbb
mov
and
or
cmp
or
mov
xchg
dec
mov
pop
je
mov
js
out
sub
or
pop
dec
enter
cmc
movsb
push
cltd
scas
mov
shlb
push
push
outsl
and
dec
lock
mov
cmp
leave
xor
jns
xchg
sub
jo
sbb
adc
mov
xchg
add
pop
hlt
push
insb
js
into
sub
or
mov
xchg
mov
mov
repz
fs
outsb
sahf
pop
inc
inc
inc
mov
sub
cwtl
dec
jnp
jbe
sub
adc
arpl
or
inc
push
dec
hlt
shll
rolb
insb
loopne
insl
addr16
or
add
xor
test
inc
lahf
sbb
cmp
sbb
orb
pushf
jmp
cltd
insl
rorb
pop
outsb
and
leave
out
add
mov
daa
pop
nop
ljmp
je
push
loope
pop
jecxz
das
lea
and
mov
ljmp
jns
mov
mov
sub
mov
fldl
jb
ss
fmul
sub
push
dec
lods
inc
aad
pxor
movsl
aad
fsts
fucomp
data16
movsb
pop
pushf
mov
dec
rolb
fmull
add
cmp
data16
jne
or
repnz
bound
and
repz
dec
es
push
cli
cmpsb
cmp
mov
adc
push
mov
lea
mov
hlt
and
dec
cmp
cmp
insb
pop
xchg
add
iret
cmp
or
leave
push
rorb
movsb
repnz
aam
arpl
jmp
iret
dec
mov
in
and
fdivl
fucomp
sbb
add
paddusw
sti
insl
xchg
stc
fs
push
lods
pop
mov
dec
add
dec
cmp
push
dec
push
cmp
cmp
shlb
movsl
xchg
xor
fimuls
dec
mov
ljmp
pop
arpl
ficoms
popf
fwait
and
jmp
and
sti
pop
stc
arpl
cmp
jbe
inc
jae
lcall
add
pop
xchg
clc
mov
sbb
mov
les
dec
dec
mov
fiadds
js
xor
jne
cmp
mov
and
jmp
mov
ret
fsubr
mov
dec
cmpsb
ficomps
cmp
stos
shrb
or
fimull
xchg
fists
mov
dec
inc
imul
imul
movsl
add
push
fldl
pop
mov
ret
xchg
adc
loopne
mov
inc
fildl
cmpsb
scas
cs
mov
jg
dec
adcl
testl
imul
inc
add
sti
xor
fnstsw
jge
dec
aam
jmp
std
xchg
out
leave
icebp
test
mov
lods
in
loop
xchg
fstpt
cmpsb
loop
shr
xchg
push
sub
aad
sub
dec
rcr
rcrb
cltd
xchg
lds
in
sbb
movsl
add
repz
cmc
gs
pop
mov
mov
dec
sub
sub
lret
dec
aam
ss
inc
repz
rorb
cmp
xchg
inc
or
rclb
jne
jp
movsb
cmp
call
pop
mov
xor
imul
mov
into
mov
mov
hlt
loope
insl
and
sarl
pop
jno
orb
dec
loopne
inc
loope
loope
out
rcrl
dec
xchg
inc
inc
mov
inc
loop
mov
or
sbb
dec
and
and
ljmp
xchg
adc
out
data16
push
repz
in
mov
sub
test
lock
mov
xor
and
addr16
mov
jmp
mov
mov
dec
add
and
les
pop
pop
xor
bound
pusha
add
adc
add
push
mov
movsb
test
call
fdivrs
or
test
jae
sbb
xchg
cmp
push
xchg
adc
push
or
imull
dec
mov
push
mov
adc
fucomp
mov
push
pop
mov
push
xchg
inc
addr16
jmp
clc
lcall
cmovle
ljmp
xor
rcrl
loopne
mov
ljmp
adc
and
or
mov
in
dec
mov
cmp
add
lds
icebp
adc
loopne
mov
mov
sahf
hlt
jmp
stc
push
inc
sbb
dec
and
imul
mov
subb
mov
jmp
iret
aam
shll
outsb
push
negl
cli
imul
int
fstpt
push
add
and
xchg
mov
dec
fwait
sub
xchg
fbld
jnp
negl
mov
test
lods
lret
dec
inc
cwtl
or
and
les
and
add
add
sti
in
stos
xor
xchg
mov
bswap
adc
xchg
push
ficompl
outsl
sbb
rolb
js
fsubl
mov
inc
je
loope
push
movsl
mov
adc
std
fstl
add
dec
outsb
gs
mov
sbb
dec
xchg
stos
adc
cs
mov
and
cld
xchg
or
adc
xlat
imul
adc
cmp
xchg
loope
jmp
mov
push
ret
repz
int3
xchg
inc
ljmp
les
fs
mov
and
jne
xchg
fwait
insb
bound
sarl
call
push
mov
add
xchg
es
test
js
sub
pop
mov
cmpb
pop
pusha
inc
jge
js
xchg
adc
ss
sbb
aaa
daa
xbegin
inc
mov
xchg
insl
mov
ljmp
inc
outsl
dec
aam
or
cwtl
mov
push
das
pop
pop
mov
mov
pushf
mov
add
imul
lcall
inc
cmp
mov
movsb
test
xor
dec
pop
and
add
divb
push
aas
mov
jmp
mov
daa
lea
xchg
jae
lock
push
jnp
popf
lds
xchg
lea
ret
repnz
pop
cmp
dec
testb
sub
insl
and
or
repz
add
cmp
rclb
ret
fwait
xor
push
add
lock
mov
adc
xor
stc
jno
imul
mov
mov
pop
out
jnp
mov
jo
dec
test
int
push
mov
or
mov
out
leave
mov
lods
out
add
mov
and
lds
lret
in
jno
les
repz
or
sti
cmpsb
addb
movsb
in
jecxz
mov
add
mov
in
sbb
in
fcoms
adc
pushf
mov
dec
cmpsw
mov
loopne
dec
push
scas
test
in
push
xchg
and
je
cmp
sbb
inc
lahf
and
fsubl
dec
sbb
xlat
or
push
in
jge
andb
or
mov
cmp
pop
dec
arpl
add
cmp
ret
jnp
ret
jnp
push
sub
add
stos
mov
pop
and
shl
cwtl
push
shrl
or
jns
test
iret
mov
wbinvd
cld
lock
push
ror
lods
clc
jmp
push
lret
fistl
pusha
stos
sarb
add
pop
inc
lea
push
in
test
lea
loop
xchg
sbb
or
xorb
and
mov
sub
mov
sub
mov
movsl
leave
and
pop
xchg
cmp
fists
add
xchg
push
and
mov
aam
sarl
pop
xchg
shll
adc
pusha
push
rolb
jne
cmp
mov
jne
insb
in
stos
xchg
scas
pop
add
leave
cmp
cld
shr
mov
jns
das
lock
jl
stos
jle
out
pop
xor
in
xor
cltd
or
dec
call
loopne
ljmp
fs
xchg
or
ret
inc
jecxz
add
leave
cmp
mov
das
lods
in
or
dec
jg
in
addr16
test
addb
dec
arpl
popf
xchg
and
repz
loopne
pusha
lock
scas
lds
xlat
inc
jecxz
shll
test
mov
dec
add
adc
repnz
xchg
into
std
das
inc
mov
out
jb
fcoms
pop
test
andl
out
adc
and
fcmovne
mov
add
pushf
xor
call
jle
stc
mov
xor
insl
dec
jmp
sub
sti
pop
sahf
sahf
lret
cmpsl
aam
ret
push
cltd
dec
mov
mov
test
push
or
cmpsb
test
mov
push
mov
dec
mov
jo
lea
rcrl
sub
sbb
les
out
pop
push
dec
aam
pop
rol
icebp
jbe
daa
xor
sbb
or
fadd
mov
loop
push
fdiv
xor
xchg
fsubs
pushf
xor
test
xor
jb
cmpsb
in
push
or
sbb
jp
neg
mov
lock
inc
xor
inc
mov
push
mov
fisttpll
pop
lds
mov
jae
fiaddl
scas
mov
cmp
mov
jle
cli
repz
push
add
mov
inc
stc
mov
mov
seto
adc
xchg
sbb
xchg
mov
xchg
jl
pusha
rorl
ret
lcall
fwait
inc
sti
popf
xchg
int3
imul
jne
adc
jno
cmp
ret
scas
dec
cmpb
pop
ret
push
lahf
push
fstpl
aas
rcrb
icebp
out
xor
fistpl
dec
movsb
dec
jns
cmpsl
fsubl
cld
fwait
push
or
pushf
inc
push
adc
pop
cmp
cmp
cmp
sbb
loopne
lods
dec
lock
inc
repnz
dec
adc
cmp
cmp
sbb
fsubrl
mov
xchg
ljmp
pop
xor
cmp
sub
xchg
sub
jecxz
scas
test
repz
lods
sub
pop
sub
cmp
xchg
cmc
inc
add
mov
scas
inc
mov
flds
mov
data16
psrlq
cmp
nop
dec
dec
xchg
pop
jno
dec
xor
mov
inc
xor
out
mov
out
add
dec
or
cltd
push
cmp
es
cmpsb
gs
cmp
jp
dec
mov
lods
into
clc
add
mov
and
negb
jp
movsb
xchg
xchg
aam
or
or
in
push
and
repnz
or
xor
rolb
dec
mov
pop
int3
stos
es
std
cmc
fs
xlat
dec
mov
test
or
xor
in
lock
out
rolb
clc
mov
cmp
pop
in
xchg
aam
push
jns
nop
fsubrp
bound
stos
pushf
dec
and
decl
or
inc
testb
std
push
or
sete
mov
dec
je
push
ret
lret
xor
sbb
leave
cmp
jle
or
add
mov
lods
cmp
sub
dec
sarl
out
in
and
sahf
dec
stc
rorb
mov
in
std
mov
xchg
adc
rcrb
jb
aaa
xchg
mov
frstor
addb
adc
fwait
jmp
pop
lods
call
imul
jmp
into
jp
xor
subl
jmp
lret
das
xchg
cmp
aas
out
scas
cli
jbe,pn
mov
in
popf
test
daa
and
leave
push
pop
cmp
dec
out
lods
jg
rcl
inc
jno
loop
mov
sub
sbb
mov
sub
xor
popa
pusha
cli
lret
in
ror
js
cmp
jl
aas
mov
outsl
bnd
lds
dec
loopne
data16
scas
das
test
popf
sbb
test
aas
icebp
rsqrtps
incl
insl
stc
shll
leave
and
rcrb
in
add
cs
int3
mov
je
xchg
ljmp
pop
fyl2xp1
mov
icebp
test
fists
sti
inc
clc
sti
add
shll
dec
stc
sbb
or
adc
enter
fldt
shlb
mov
stos
lock
aas
mov
xchg
cmp
inc
frstor
les
push
xchg
xorb
sub
pop
xor
jbe
mov
mov
imul
outsl
mov
adc
inc
test
xor
fwait
cs
arpl
and
inc
sahf
xor
lea
cltd
or
xlat
push
sbb
jg
lahf
xchg
in
enter
pop
je
mov
mov
add
add
mov
cmc
cmpps
or
xlat
loope
jno
gs
cld
xchg
lods
aad
rorl
lods
fwait
adc
pop
ret
sbb
out
dec
adc
rcrb
dec
adc
push
dec
cld
test
adc
push
cwtl
inc
add
xor
fists
mov
cmp
or
out
xor
divb
dec
dec
and
pop
in
jl
ret
lods
inc
cld
push
and
popf
cmp
inc
sbb
dec
repnz
cmp
negb
stos
inc
mov
pop
sub
jbe
and
push
movsb
or
loope
ret
shlb
punpckhwd
in
ds
add
cmc
push
out
fistl
jbe
xchg
loop
push
jmp
mov
jo
dec
ljmp
xor
inc
jp
or
add
jle
push
mov
bound
ret
emms
loopne
xchg
movl
in
jo
pop
rorb
hlt
das
sbb
and
and
fisttpll
mov
adc
lahf
fmull
pusha
sub
cld
ficompl
pushf
lret
mov
mov
into
dec
xor
incl
push
loop
adc
aad
mov
stc
inc
adc
pushf
sub
sub
push
sub
or
daa
or
jne
jbe
ret
repnz
add
dec
cmpsb
add
or
fdiv
pop
sbb
movsl
ljmp
cli
movsl
int3
dec
inc
mov
nop
sbb
clc
aad
loopne
mov
sbb
daa
sahf
xchg
mov
jge
mov
cmp
pop
inc
lret
int
mov
mov
in
adc
mov
lods
out
test
jecxz
cmpsb
mov
inc
into
push
test
xchg
mov
or
jnp
adc
in
fimuls
rorl
mov
pop
mov
or
xor
adc
or
add
jb
cmp
pop
gs
inc
sarl
inc
pop
aam
dec
bound
mov
jno
out
dec
dec
rol
xchg
or
rcrl
out
ds
fcmovne
push
xor
mov
lea
leave
jl
cmp
outsb
jno
aas
in
loopne
mov
addr16
adc
bound
roll
pop
and
inc
jne
jge
jge
lods
ja
jns
inc
je
sqrtps
lods
sahf
lret
mov
pop
sub
sub
cmp
mov
sub
out
pop
mov
or
dec
xorb
out
test
into
std
and
cmpb
nop
repnz
push
add
popf
adc
xor
jno
filds
int3
dec
inc
stos
dec
cmp
outsl
rorb
repz
insb
ljmp
adc
adc
mov
ret
mov
lods
pop
shrb
cmp
es
fstpt
xchg
and
int3
hlt
xchg
xchg
mov
sub
or
insl
mov
insl
mov
and
aad
inc
jecxz
cwtl
sub
ljmp
push
addr16
rcll
dec
and
mov
jnp
aas
xchg
rcr
aad
lds
cmc
xchg
imul
repnz
jbe
imul
dec
pop
inc
incl
jns
das
stos
mov
xchg
and
popf
in
sub
jno
and
sub
sarb
addb
push
inc
cwtl
add
in
movb
xor
arpl
imulb
inc
xor
pushf
fcomps
xor
jmp
clc
shlb
imul
xchg
xchg
jne
mov
cmp
test
xlat
cmc
lea
loop
xor
cwtl
or
lahf
and
mov
stos
data16
roll
movsb
adc
sahf
pop
xor
adc
lahf
shrl
aas
sarl
mov
push
xchg
ss
add
adc
jno
mov
mov
outsb
inc
mov
fs
adc
mov
mov
nop
dec
ss
adc
pop
push
popa
lret
mov
in
pop
iret
loop
xor
cmp
pop
lock
jo
sub
xlat
and
enter
adc
insl
scas
and
cmp
mov
push
ja
push
add
loope
push
sub
std
int
fistps
mov
gs
adc
sbb
call
das
dec
subl
dec
add
inc
jb
out
fadd
in
cs
rorl
inc
fldenv
mull
pop
sbb
loop
or
xchg
enter
pusha
sti
test
xchg
add
lahf
data16
add
pop
mov
inc
sbb
pop
stos
lret
xlat
xchg
aas
pop
mov
sbb
int
push
fimuls
ja
add
rcrb
jne
inc
shll
add
sub
dec
or
mov
enter
rep
std
enter
clc
dec
push
enter
rclb
jp
mov
cmp
add
fdivrl
mov
push
mov
aad
mov
not
adc
sbb
jbe
mov
decb
jbe
test
push
xchg
fbld
add
ret
lea
and
add
push
push
or
jnp
mov
mov
aad
test
out
xchg
stos
call
je
lods
pop
push
jno
mov
es
int3
xchg
ret
fistpl
ret
and
push
in
clc
bound
add
fcmovbe
pop
in
push
or
dec
cld
pop
xchg
xchg
stc
and
or
inc
xchg
out
decl
int3
xorb
loop
dec
mov
ljmp
cld
jl
pusha
loope
fmuls
cmp
cmp
shlb
mov
mulb
in
sbb
aam
inc
call
icebp
pop
xchg
out
jl
inc
insb
fisubs
jmp
lret
sbb
pop
stos
scas
push
or
xchg
gs
test
mov
cltd
popf
xchg
cs
fisubrs
sub
je
lcall
mov
sahf
add
and
jnp
pop
enter
aam
pushf
jbe
lds
mov
mov
out
ret
loopne
or
sub
imul
jg
mov
xchg
lock
lods
icebp
xchg
xchg
lods
jl
cli
in
insb
cmp
mov
leave
rolb
and
insl
ljmp
daa
orl
fistpll
pop
xor
sub
arpl
ret
in
mov
cld
adc
int3
and
fdivl
xchg
push
sub
outsl
cmpsb
dec
movsl
cmp
push
mov
pop
fadds
inc
add
push
push
mov
and
in
cld
mov
cltd
jg
adc
sarl
in
mov
lock
repnz
fcmovb
ret
divb
popa
imul
pop
es
lret
pop
cmp
fists
inc
xor
lods
mov
mov
dec
adc
jns
movsl
imulb
cmp
xchg
mov
outsl
andl
mov
inc
lds
rcrb
xchg
and
repnz
aas
adc
mov
aas
aas
dec
scas
xorb
leave
sbb
xchg
pop
fs
mov
mov
inc
sbb
and
lods
push
sbb
out
or
out
shlb
mov
add
jp
jmp
push
sti
lods
add
mov
cmpsb
add
out
pop
imul
aad
xchg
jno
cwtl
cmpl
shlb
sub
dec
nop
inc
adc
sub
test
xor
test
repz
xchg
mov
pop
pop
jbe
js
adc
call
scas
xchg
loopne
lahf
sbb
fdivl
cmp
xchg
mov
inc
add
scas
outsl
cmp
fcompl
dec
pop
pushf
and
adc
inc
xor
add
in
loope
inc
cmp
mov
xlat
cmp
xor
xchg
aam
add
into
add
jo
mov
jne
insb
push
bnd
mov
cmc
hlt
or
out
loop
adc
aaa
push
push
dec
mulb
mov
inc
dec
insl
ficoms
pop
fs
fwait
pop
jne
js
cmc
xchg
ss
fiadds
jp
out
call
inc
hlt
fcompl
and
adc
adc
ljmp
sahf
and
pop
mov
cli
in
scas
stos
mov
add
ljmp
scas
cmp
mov
pop
xchg
sti
xchg
and
mov
pusha
and
imul
push
rcrl
insb
addr16
aad
sbb
rorb
sub
push
movsl
or
pop
lds
cmp
fwait
push
hlt
stc
aas
cltd
fsub
push
pop
push
sub
cmp
pop
out
jno
inc
fndisi(8087
jae
sbb
rcrl
mov
sbb
push
jb
jle
stc
out
mov
test
inc
ljmp
rcl
xchg
pop
push
shr
mov
ret
lock
cwtl
movsl
inc
mov
push
or
repz
jnp
adc
fnstcw
mov
jns
push
mov
call
cmp
scas
test
pushf
push
mov
lahf
inc
mov
lock
pop
ss
stos
pop
adc
sbb
test
sti
and
rcll
je
mov
ret
ds
xlat
rcr
push
xchg
mov
sbb
pop
pusha
daa
cwtl
je
sub
divl
or
hlt
mov
and
mov
je
sub
in
mov
int3
scas
das
in
and
test
in
jle
push
sub
das
scas
shll
daa
test
dec
inc
fstpt
fcom
or
jbe
xlat
fistl
pop
mov
out
lret
sbbl
imul
or
pop
push
pop
jecxz
inc
xchg
sbb
in
cmp
add
ja
inc
mov
fsubs
pop
sbb
negl
leave
sbbl
sub
mov
push
outsl
xor
ret
outsl
sbb
sub
pop
scas
push
sub
xchg
pop
mov
lahf
out
lcall
in
sub
cwtl
jmp
and
push
inc
rcrl
ja
movsb
repnz
icebp
sub
cmp
fcmovne
daa
mov
or
lock
enter
lods
xor
hlt
xor
hlt
fwait
sbb
jae
lret
jno
das
nop
jb
orb
cld
cli
inc
xchg
mov
imul
dec
dec
popa
out
aas
mov
pop
jno
mov
and
insl
mov
ficoml
and
stc
mov
pop
es
xchg
xchg
jbe
sub
roll
mov
movsl
iret
arpl
mov
sub
cmpsl
push
iret
and
aaa
jns
dec
xorb
aas
xchg
fwait
sbb
cmp
imul
push
das
iret
sbb
adc
repz
inc
xchg
jp
mov
pop
jecxz
mul
orl
pop
sbb
idivl
xor
push
aam
lret
in
dec
xor
push
mov
in
mov
iret
pop
test
pop
fistps
nop
mov
call
jo
mov
and
aaa
xor
mov
or
mov
jo
pushf
or
jecxz
outsl
sahf
cmp
pop
xchg
int3
loop
fldcw
jge
dec
out
add
mov
sub
dec
or
push
movsl
ret
fsub
sub
jle
enter
cltd
inc
cmp
jae
mov
jno
test
loopne
mov
aam
or
inc
lock
push
inc
fimull
or
inc
pop
lock
mov
flds
cwtl
les
cs
push
mov
std
aad
adc
inc
push
stos
decl
add
repz
inc
lods
imul
rorl
push
repnz
loopne
jns
push
dec
scas
mov
test
xor
lods
adc
into
mov
popf
in
inc
push
push
dec
popa
addr16
xor
sti
mov
or
mov
pop
iret
and
cmp
sti
fidivs
orb
andb
int3
loopne
cmpsb
and
xchg
imull
test
push
inc
adc
cmc
cwtl
jb
sbb
ljmp
cmp
fsubrs
js
std
in
popa
int
int
jge
mov
lahf
xor
pushf
mov
cmp
cmc
mov
and
adc
lock
push
repz
leave
jne
outsl
adc
clc
int
add
jae
test
in
and
insb
outsl
push
adc
std
loop
repz
push
cmpsl
mov
data16
ret
mov
push
xchg
cmp
movsb
je
out
iret
fcmovnb
mov
push
popa
and
adc
int
test
xchg
add
out
out
int
and
xor
cmc
jb
xlat
push
xchg
mov
adc
jg
test
inc
sub
adc
mov
cmc
or
inc
div
test
loopne
xchg
sub
and
mov
lods
mov
mov
ret
push
call
bound
data16
or
and
ret
sub
add
xchg
mov
pop
xorl
push
xor
lds
cmp
mov
push
jno
cmp
mov
rclb
in
pop
pop
jg
loop
jno
movsl
subl
push
and
popl
jne
xor
andl
outsb
test
jnp
mov
aas
je
dec
outsw
mov
pop
mov
push
cmp
mov
test
sti
add
push
aas
cmp
add
das
leave
addl
sbb
lock
mov
aam
movl
or
push
cmp
add
cs
xchg
pop
sub
xor
ficompl
gs
js
mov
mov
push
popa
popf
cs
mov
stos
mov
ret
inc
xchg
dec
push
push
xchg
cmpb
jmp
push
sub
lcall
inc
data16
or
mov
pop
stos
push
and
jmp
hlt
int
cmp
mov
dec
jmp
inc
jecxz
lcall
push
mov
xchg
push
addr16
xchg
push
popa
dec
es
loop
dec
les
rorl
push
cs
repz
sbb
pop
mov
pop
mov
adcl
sbb
sub
dec
push
jne
mov
push
out
je
aad
sub
sbb
inc
popa
mov
insb
into
test
mov
and
push
cmp
cmp
popl
in
bound
cltd
lock
loopne
shrl
jl
fiadds
sub
in
inc
das
push
dec
mov
adc
mov
out
xlat
adc
test
andb
and
bnd
fisubs
jb
stc
in
cld
sbb
sbb
loop
lea
dec
loope
xor
je
fwait
push
movsl
lret
xor
xor
mov
sub
mov
lahf
xchg
ds
cmp
jmp
jb
add
mov
cmp
out
fwait
sub
adcl
ljmp
push
sbb
and
xor
out
and
push
sub
fmul
je
lahf
mov
push
pop
es
xor
aad
cmp
sbb
gs
ret
dec
cmpsb
mov
xor
and
dec
enter
xor
adc
dec
inc
jne
jg
aam
dec
fcompl
sbb
faddl
lods
pop
in
fdiv
fdivl
xchg
xchg
xchg
outsb
and
mov
fstl
jle
lret
jnp
dec
bound
or
outsl
or
subb
frstor
icebp
mov
lock
repz
xchg
and
mov
add
add
cmp
stos
add
mov
movsl
sub
loopne
je
cmp
sub
fsub
les
nop
arpl
sbb
pop
or
inc
mov
test
rcll
decb
js
mov
jge
mov
clc
outsl
rclb
std
xchg
jecxz
mov
repnz
clc
xor
std
mov
sarl
mov
mov
or
rcrl
loop
out
pop
mov
js
out
in
sub
imul
fcmovnu
xlat
add
mov
jp
in
jo
inc
pop
pop
test
push
lods
cmp
adc
or
in
popa
cwtl
lret
insb
shrl
dec
int
insl
and
push
daa
push
dec
lock
call
or
cmp
mov
lcall
popa
mov
sti
or
decb
pop
inc
fstpl
fists
dec
fdivrs
ret
mov
dec
test
repz
xor
dec
cmp
sbb
test
xchg
pop
pop
add
ret
push
dec
das
xor
lret
or
push
jle
mov
wbinvd
in
sub
dec
or
aam
idivb
movsl
xchg
adc
mov
sub
cltd
xchg
popf
mov
push
sub
sub
in
stc
scas
les
lods
aam
mov
repz
std
stos
pop
push
mov
into
int
jg
fiaddl
lods
aas
xor
jns
cmc
in
ficoml
xchg
mov
xor
mov
je
jno
pop
jge
adc
push
mov
stos
xlat
stc
adc
mov
outsb
cld
or
mov
or
xchg
scas
loop
daa
jp
or
or
adc
out
cmovns
pop
aaa
fwait
movsb
and
sbb
and
jp
fisubrs
cmp
lcall
mov
nop
pop
insb
and
push
and
pop
popf
ret
jbe
or
jle
shrl
scas
or
mov
in
dec
push
jg
jle
lret
in
addr16
ret
sbb
fdivs
scas
jge
adc
or
mov
dec
mov
mov
push
or
cmpl
inc
enter
test
out
pop
shrb
push
loopne
ret
jbe
push
sbb
pop
fidivs
dec
mov
mov
mov
xchg
incl
out
jo
mov
mov
aam
fimull
das
rorb
sahf
in
xchg
xor
or
or
inc
xor
pop
xor
fisubl
and
pop
cmp
adc
xchg
xchg
pop
cld
inc
scas
in
popl
xchg
ret
mov
ficoml
or
jmp
insl
sar
sub
pusha
mov
cmp
cwtl
pop
and
rcrl
mov
or
push
inc
inc
dec
stos
xor
ficompl
cmp
jmp
or
inc
sub
sbb
lods
cmp
push
lretw
fcmovu
sbb
mov
stos
jo
andl
fnop
dec
insb
dec
push
fs
in
and
mov
sbb
inc
sarl
popa
rorl
testb
cs
and
int3
cs
inc
divl
cmp
jbe
mov
pop
jp
or
pcmpeqb
push
cli
inc
incb
out
stos
pop
shlb
enter
loope
or
lods
std
xor
clc
icebp
iret
lcall
loopne
push
sub
mov
imul
pop
iret
push
pop
jg
pop
cmp
jmp
mov
sub
mov
cmpsb
arpl
or
mov
test
dec
enter
add
mov
lret
in
lds
repz
sahf
inc
inc
xlat
xchg
pop
test
xchg
xor
jb
and
loopne
mov
inc
lret
dec
incl
hlt
cmp
test
inc
popf
test
shrb
loopne
dec
fwait
mov
xor
adc
stos
pushl
dec
call
pop
cwtl
mov
mov
sub
cmpb
adc
adc
pop
dec
aam
imul
mov
nop
xor
adc
or
test
stos
stos
cmp
lods
or
into
imul
loopne
jmp
cmc
xchg
and
inc
xor
or
popf
mov
mov
jns
fdivrl
out
sub
sbb
repz
lods
loope
mov
or
jl
or
mov
mov
xchg
add
jns
push
xor
mov
sbb
push
cs
daa
add
sahf
jb
cmpsb
dec
bound
addl
cli
mov
outsb
es
push
ret
movsl
in
mov
out
inc
push
xor
scas
ret
cmp
sarb
cmp
arpl
push
pop
fs
mov
movb
jbe
push
loopne
cmp
mov
fcomp
rcr
les
mov
mov
dec
mov
cmc
or
add
adc
cmp
sub
into
sub
mov
cmp
cmpl
stos
cmp
movsb
mov
pop
cmp
adc
dec
in
lea
shr
pop
incb
stc
mov
push
rcrl
inc
and
std
adc
push
push
inc
xchg
cmp
or
sbb
dec
lods
aad
add
jle
lret
cmp
cmp
les
pop
ljmp
jo
pop
loopne
iret
fstpl
push
jmp
mov
pop
jbe
and
sbb
fimull
mov
jle
jl
adc
aas
movsl
mov
lcall
sub
addb
cli
jp
jmp
das
mov
sub
mov
imul
mov
lahf
mov
repz
shl
mov
fidivrs
repnz
add
loope
mov
pop
shrb
fimuls
mov
adc
mov
loope
jmp
nop
lcall
sbb
jmp
sub
inc
push
shll
stos
lahf
insb
mov
push
mov
inc
orl
scas
nop
and
vrcpps
pop
pop
jl
jge
xlat
xlat
mov
dec
rcrl
outsl
ret
test
dec
sbb
push
and
add
arpl
dec
push
mov
xchg
loope
mov
adc
test
hlt
mov
lret
scas
push
cmc
mov
je
mov
fwait
adc
push
sbb
shlb
or
and
mov
and
jl
pop
ret
and
or
pop
or
dec
add
inc
cmp
sbb
xchg
mov
out
cmp
cmp
stc
or
addr16
jecxz
mov
sbb
push
jae
adc
mov
adc
sahf
xchg
fstps
xor
jecxz
dec
pop
cmp
push
jno
outsb
add
adc
sahf
aaa
jl
push
aam
enter
sub
fwait
je
hlt
ret
inc
sub
add
xchg
stc
rcrl
imul
pop
cmp
push
mov
add
cmpsl
mov
inc
sbb
ja
repnz
adc
cmpsb
stos
xor
cmp
mov
ret
push
or
adcb
pop
push
lcallw
sbb
shlb
ja
xor
lds
ret
dec
xchg
dec
aam
js
ljmp
clc
gs
push
mov
scas
push
in
cltd
or
mov
test
rcll
push
ja
jo
xor
pusha
add
push
dec
fucomi
cld
sti
cmpsl
lods
sarl
xchg
adc
mov
xchg
insb
packssdw
dec
dec
xchg
int
cmpsb
xchg
rolb
dec
mov
mov
mov
dec
adc
mov
mov
cltd
repz
in
cltd
fnstcw
ds
mov
imul
enter
int
mov
inc
pop
inc
cmpsb
lret
xchg
pusha
jecxz
or
imul
pop
stc
int
imul
outsb
pop
mov
rcll
pop
jbe
imul
icebp
addr16
pop
fcmovnbe
xchg
mov
pusha
pop
push
push
out
insb
cmp
mov
sub
adc
scas
inc
and
and
out
push
push
stc
mov
movsl
or
sbb
hlt
xchg
into
decl
incb
cltd
fsincos
pop
std
shl
subl
cld
cmp
xor
fwait
add
sbb
mov
pop
inc
ss
add
cltd
jae
gs
aad
movsb
out
mov
sub
sub
stc
cs
push
call
jnp
xchg
push
popa
mov
xchg
rorb
jbe
out
inc
add
leave
inc
and
sub
mov
mov
stos
mov
jne
inc
lea
push
out
mov
jae
loopne
pop
cmpsb
cmp
add
push
imull
adc
mov
repnz
and
aad
shl
test
mov
mov
jecxz
mov
leave
ret
ja
and
js
scas
leave
add
adc
pop
movsl
gs
and
arpl
daa
dec
clc
pop
insl
and
sub
dec
in
pop
out
inc
xchg
mov
mov
lahf
fidivl
xor
push
mov
lret
aas
adc
dec
popf
ret
inc
cmp
pop
aas
inc
adc
pop
pop
dec
ret
inc
cmp
hlt
scas
ss
adc
pop
or
jmp
mov
cs
or
scas
xchg
lret
and
lods
xor
or
jnp
push
xchg
or
mov
add
xor
sarb
cwtl
addb
ret
push
sbb
mov
rcl
insb
dec
pop
fwait
inc
dec
mov
ret
or
xor
jle
ljmp
mov
mov
out
fs
fisubl
fadd
test
lods
cmc
mov
adc
mov
fucomi
mov
jl
daa
pop
sub
out
or
inc
hlt
push
enter
lods
mov
inc
rcrl
cld
in
adc
add
or
popa
rcrl
pushf
inc
and
mull
sub
mov
shlb
bound
hlt
xchg
shll
fstpt
es
xchg
mov
pop
push
add
mov
das
adc
in
data16
pop
xchg
fmul
insl
sti
aam
bound
and
mov
movsl
mov
xorps
loop
and
push
js
jmp
sbb
out
add
popa
outsl
sub
inc
xchg
fsubl
movb
enter
sub
popa
rcrl
aas
pusha
outsl
scas
xor
cmp
mov
es
stos
lret
or
lods
fimuls
scas
add
jae
add
imul
frstor
movsb
out
cmp
cwtl
adc
adc
mov
in
mov
cli
lret
mov
inc
cmp
mov
test
stos
adc
xor
stos
movsl
std
xor
ret
inc
mov
cmp
mov
mul
daa
hlt
syscall
xor
sbb
jae
movsb
xor
xor
cwtl
push
test
push
jb
pop
aas
scas
cmp
mov
xchg
or
ja
sbb
inc
push
pushf
xchg
mov
mov
jbe
int3
mov
adc
movsl
xor
lret
mov
or
jns
xchg
je
fwait
add
cmc
shl
push
mov
nop
test
dec
les
and
xchg
cs
push
fwait
add
not
adcb
add
push
pop
push
rcl
pop
in
insl
pusha
push
sub
xor
enter
outsb
mov
xor
lcall
les
movsb
movsl
outsb
frstor
mov
loope
jno
mov
lods
bnd
movsl
flds
mov
in
jg
loope
sub
push
dec
rcl
push
push
cmpsl
xor
jae
lcall
push
dec
mov
pusha
addl
bound
cmpsl
add
ss
mov
inc
or
push
rolb
insb
mov
aas
in
addr16
xor
pop
xchg
ret
sar
sbb
jl
jmp
arpl
jns
push
ds
inc
popa
or
mov
pop
fwait
hlt
pop
dec
out
bound
jecxz
loop
and
xor
cmp
mov
push
ss
hlt
mov
push
sub
push
push
jae
insb
xlat
incl
ja
loopne
arpl
js
decb
scas
mov
sub
jo
inc
jmp
mov
lds
jae
in
xlat
adc
loopne
cmp
and
mov
cltd
ljmp
mov
imul
inc
or
xor
sti
and
dec
mov
icebp
fistpll
add
lahf
add
addl
mov
cmp
aas
dec
jbe
popa
xchg
mov
aam
aad
notl
insb
sbbl
fwait
sub
cmc
mov
nop
xchg
out
or
imul
call
jns
les
and
insb
jp
xlat
fsub
out
mov
movsl
sbb
das
jl
call
shll
xor
jmp
mov
xchg
jl
repz
push
mov
jne
andl
aas
pop
adc
addr16
clc
push
cmpsb
dec
andb
jns
xchg
and
mov
xchg
out
sbb
test
add
lods
and
int3
push
std
faddl
cld
jge
popf
repz
cs
sub
scas
ret
jne
mov
add
imul
fidivrs
outsl
pop
test
cmpsb
cmc
jo
adc
popa
iret
pop
jge
movsb
push
mov
pop
sub
sarb
mov
mov
testl
mov
or
jbe
rorl
push
imul
jecxz
dec
adc
cwtl
xchg
enter
adc
inc
ret
rorb
jle
push
pop
fisubl
cmp
dec
repz
mov
fs
xlat
out
jno
comiss
pop
sti
jmp
pop
jl
test
clc
xchg
in
aad
sbb
mov
imul
mov
cs
ficoms
dec
inc
and
push
pop
xor
adc
cmp
hlt
cmpb
or
call
and
imul
mov
cltd
jp
pop
fnstenv
ljmp
sbb
mov
cs
dec
cli
dec
shrl
add
or
add
mov
push
lcall
adc
pop
and
jg
dec
test
cmp
clc
mov
pop
dec
vunpcklps
lahf
lods
jo
in
cwtl
shrb
movsb
iret
in
add
pushf
xchg
adc
dec
jbe
xchg
ret
nop
inc
ds
adc
mov
in
cmp
loope
mov
jo
out
pop
jae
ljmp
cmp
sahf
dec
repnz
ret
cltd
scas
inc
or
jg
into
mov
dec
or
sub
xchg
pop
out
push
push
add
jbe
cwtl
xor
xor
mov
mov
subl
arpl
adc
sub
gs
xchg
jno
sub
xlat
jmp
jle
cmc
jnp
sbb
outsl
nop
repz
out
ret
jge
mov
jo
mov
inc
and
mov
aad
test
scas
cli
pusha
push
cli
mov
mov
jb
lcall
hlt
mov
loopw
testb
cmpsb
jp
mov
jb,pn
adc
push
or
cmc
or
mov
lret
sbb
pop
or
xchg
ret
xchg
push
mov
bound
fs
jp
pop
lds
in
into
loopne
cmc
push
cs
jnp
insb
cmp
in
xchg
data16
mov
test
xor
inc
sbb
pop
pushf
imul
adc
jecxz
push
mov
xor
mov
call
and
mov
into
xor
mov
sbb
and
mov
insl
jl
arpl
mov
leave
xor
popa
mov
out
sahf
sar
cwtl
mov
imul
testl
fidivl
sub
imul
dec
inc
inc
sbb
cmp
popf
subl
add
inc
cs
stos
inc
xorl
mov
add
push
xchg
or
jo
push
mov
inc
repnz
leave
jnp
popf
and
sti
mov
jne
adc
int
jo
push
jno
adc
outsb
dec
xchg
loope
mov
jecxz
inc
out
jl
mov
inc
and
inc
mov
subb
sbb
lret
jp
stc
leave
mov
mov
sbb
push
out
inc
stc
adc
outsb
adc
or
enter
xchg
fcoms
test
mov
out
cmp
sahf
mov
push
nop
aaa
sahf
jnp
or
mov
xchg
ss
aaa
sub
cli
aaa
cld
sub
sarl
sbb
cmp
repnz
or
scas
lock
cmpsb
sbb
icebp
xor
lock
jp
scas
call
add
lret
push
jo
sahf
mov
mov
ret
pop
popa
imul
mov
test
test
mov
sub
xor
js
pop
mov
jne
cmp
mov
pop
pop
sub
je
in
lcall
pop
ljmp
xchg
mull
je
adc
test
call
in
push
push
test
xchg
sahf
mov
cmp
pop
clc
fs
sti
jbe
add
add
mov
mov
push
pop
ss
nop
aaa
mov
sub
rolb
fcompl
xchg
lahf
std
repz
mov
lret
push
sar
imul
outsl
jo
ret
lret
or
xchg
push
pop
shlb
add
sub
mov
sbb
dec
pop
lock
pop
andb
mov
mov
jno
pop
jl
xor
stc
mov
jle
das
out
jbe
xor
xchg
and
gs
enter
mov
cmp
cmp
test
or
jmp
sahf
mov
pusha
and
push
jbe
cmp
adc
push
mov
jg
mov
jo
fisttpl
fstl
cltd
jbe
pop
cmp
push
cltd
daa
push
pusha
push
add
in
adc
xor
and
mov
mov
jmp
mov
jo
xchg
movsl
pop
outsl
cmp
push
out
adc
jp
and
je
cs
pushf
mov
sub
sub
and
push
ljmp
xchg
test
add
mov
ja
jo
pop
cmp
stos
outsl
sub
push
outsb
xchg
int3
repz
divl
dec
std
iret
dec
pop
lods
push
cmp
cli
or
orl
xchg
sbb
sbb
dec
roll
shll
ret
pop
stos
and
mov
ret
hlt
jae
dec
js
sahf
sbb
ja
pop
adc
pop
xor
popf
in
mov
xlat
or
daa
lds
add
in
cmp
xchg
nop
out
ret
add
stos
xchg
or
pop
mov
not
sahf
and
lods
ffree
or
idivl
stc
jge
and
cli
adc
or
icebp
pusha
jbe
mov
popa
adc
and
stos
in
pop
pusha
sbb
repnz
lret
ljmp
adc
mov
xchg
imul
lahf
sbbb
mov
xor
mov
and
shll
pushf
mov
cmp
orb
loopne
jb
adc
mov
lds
fistl
int
fmull
mov
pushf
sub
push
pop
test
jb
push
xlat
inc
mov
cmp
std
fmull
shrl
movsb
test
dec
lea
and
insl
sub
inc
sub
in
cmp
scas
cltd
mull
sbb
xor
add
xor
icebp
and
xorb
mov
mov
sbb
arpl
out
ret
fmul
rclb
fisubrs
or
repz
mov
cmp
cs
pop
xchg
clc
sub
add
scas
sbb
js
outsb
and
cmp
in
pop
cmp
pop
insl
loop
data16
stos
lret
mov
pop
dec
dec
cli
xchg
jne
and
inc
ret
add
push
inc
les
push
jne
xchg
push
outsb
aaa
sbb
mov
enter
sub
add
call
sbb
cmpsl
pop
dec
cmp
cmp
int3
fnstsw
mov
inc
cltd
sub
out
loopne
bound
scas
movsb
xchg
xchg
mov
scas
fisubrl
cmc
insl
adc
les
jmp
dec
mov
andl
mov
movsl
ror
test
mov
jmp
nop
jae
insl
add
in
stc
pop
stc
arpl
repnz
pop
adc
sub
xor
add
xchg
add
jns
adc
mov
jge
loopne
lret
out
out
mov
cmp
adc
fcomi
jl
sbb
and
dec
cld
pop
out
cmp
out
fcoms
xor
mov
lds
mov
cltd
jmp
mov
jne
xchg
fadds
cs
xor
mov
jae
ficomps
into
pop
dec
jbe
pop
lods
cltd
inc
movb
add
call
sbb
leave
bound
adc
imul
push
jo
inc
sub
mov
mov
mov
cmc
sub
push
in
fldcw
scas
push
ljmp
imul
and
mov
pop
pop
test
dec
mov
ret
pavgb
jno
xor
fsts
int
pop
jne
aad
jb
je
stos
xchg
dec
jge
loope
lcall
cmpsl
or
mov
scas
dec
into
adc
sbbl
xor
pusha
rcrb
roll
sbb
add
mulb
pop
dec
test
call
jae
jl
mov
dec
fnstsw
call
dec
push
pop
sbb
or
adc
rolb
pop
mov
inc
add
pop
dec
lcall
push
lock
sbb
sub
lret
mov
pop
mov
rol
andl
mov
jo
lahf
movsb
xchg
xor
int
cmp
pusha
stos
aaa
out
adc
inc
aad
pop
cmp
cli
jecxz
rolb
das
aad
stos
jmp
xchg
inc
lahf
mov
mov
in
mov
test
pop
and
xor
popf
add
mov
ret
pop
mov
ss
ror
adc
mov
push
jno
lods
lods
loopne
test
push
mov
adc
sar
insl
into
je
xor
mov
dec
pop
icebp
cli
out
sub
cmpsl
test
xor
adc
scas
das
mov
int3
xchg
add
mov
adc
jmp
add
push
jp
popl
sbb
outsl
xor
test
fwait
jge
or
push
push
pushf
call
adc
dec
in
or
addr16
test
and
jns
jnp
imul
dec
xchg
popfw
mov
sbb
cmpl
int3
int
sub
push
sbb
jecxz
testb
fbstp
popf
push
xchg
mov
cmp
sbb
mov
ljmp
pop
jmp
mov
insl
loope
add
ds
mov
lds
mov
pop
or
add
out
aaa
sbb
sbb
jg
in
scas
sarl
push
rcrb
sub
stc
jne
lret
jns
fidivrs
mov
clc
inc
fcoml
adc
daa
sbb
loope
and
ret
std
xor
rcr
push
push
and
int
movsb
inc
sbb
loope
xchg
adc
and
mov
push
xor
add
mov
pop
or
icebp
scas
imull
push
push
idivl
sub
shl
xchg
movsl
sbbb
fstpt
adc
fdivs
dec
ljmp
or
sbb
inc
pop
comiss
in
xor
mov
pusha
and
xor
es
mov
adc
adcl
addb
xlat
outsb
cmpsl
aaa
mov
movsl
push
mov
std
sub
pop
sti
ret
in
insl
xchg
ret
sarl
push
inc
fwait
lret
inc
in
push
sub
imul
dec
pop
push
inc
mov
jge
sbb
je
subl
cmpsl
lret
fwait
sar
sub
fisubs
loop
repz
cmp
and
loop
cmp
mov
adc
xor
mov
jmp
popa
pop
xchg
inc
das
mov
push
jnp
mov
dec
sub
or
bound
jge
mov
rcl
push
mov
cmpsb
mov
mov
jge
xor
cs
mov
sub
add
push
pop
test
mov
mov
mov
pop
aam
xchg
xchg
es
shl
fldenv
jle
stos
sbb
cmp
movsb
fildll
cmp
mov
cld
addb
mov
mov
mov
cmp
shll
sbb
jae
sbb
arpl
pop
cmpsb
adc
push
push
inc
sarl
ret
sti
push
mov
loop
xchg
fstpl
mov
inc
int
gs
test
mov
mov
sti
add
leave
xchg
nop
lods
int
mov
out
push
and
pop
jb
int3
sub
inc
add
and
xchg
ja
sbb
in
sbbb
dec
test
stos
xor
cltd
popa
cmp
clc
push
ljmp
inc
or
or
jp
mov
fdivs
sub
call
and
fildll
fwait
test
dec
pop
sub
pop
or
movsl
js
pop
sbb
dec
xchg
mov
xchg
mov
and
mov
mov
scas
or
add
imull
jg
jle
mov
xor
movsl
pop
adc
std
and
jae
js
das
pushf
add
or
les
mov
mov
scas
sbbl
addr16
push
pop
ds
fwait
mov
jbe
rorb
jle
adc
push
adc
sub
jg
stos
lahf
mov
fsubrp
daa
xor
or
dec
add
clc
mov
mov
add
xchg
nop
and
or
dec
imul
cmpsl
or
dec
stos
mov
popf
or
ljmp
push
push
jmp
imul
pop
cmp
addb
sub
mov
test
insl
push
movlps
in
mov
arpl
xchg
mov
int3
aad
xchg
ss
mov
clc
pop
mov
idiv
jo
rcpps
or
fdivrp
orl
in
push
aam
ret
sub
adc
cs
dec
loope
aas
sub
lcall
sbb
push
pop
inc
sbb
fnsave
mull
sub
ljmp
pop
xor
sbb
scas
mov
fs
lock
test
sub
imul
adc
mov
sub
cwtl
push
movsl
arpl
insl
cwtl
sub
in
and
xor
in
adc
lret
jmp
mov
sub
fucom
cmp
stos
mov
lahf
xchg
mov
ffreep
pop
nop
jbe
filds
ret
sbb
mul
sub
ret
add
jg
mov
jp
outsb
and
pop
add
add
daa
loop
outsb
bound
sbb
cmp
or
and
cmp
inc
xchg
divb
push
movsl
fidivs
adc
cmp
adc
inc
mov
fsubrl
cltd
pusha
mov
sub
and
cmp
push
or
inc
push
add
sub
push
cmp
js
pushf
cmp
and
mov
shlb
adc
sti
mov
js
scas
not
push
xorb
movsl
sub
insl
add
int3
jmp
jmp
cmpsb
sub
mov
mov
xorb
arpl
stos
push
jge
aad
push
aad
mov
dec
xchg
loope
pop
inc
js
add
or
xor
jbe
std
jne
iret
mov
jno
sbb
mov
arpl
fs
lret
loope
mov
mov
mov
popa
jo
leave
sarl
into
sbb
inc
out
and
add
jo
loopne
dec
sub
cmpsl
fists
cli
mov
gs
push
pop
fists
sbb
fstps
ror
mov
stc
loop
dec
scas
pop
lock
push
add
imul
imul
dec
imul
dec
fxtract
sar
ret
push
outsb
iret
mov
jno
ljmp
fcoml
out
push
fsubl
hlt
inc
aas
dec
xor
std
incl
iret
call
pop
cmp
xchg
and
int3
in
mov
pop
fstl
mov
inc
test
insb
jno
push
dec
cmpsl
push
mov
insb
cmp
aas
push
aaa
fs
mov
push
mov
imul
rcrb
and
jmp
cld
int3
pop
mov
in
pop
push
es
push
cmc
mov
mov
and
dec
arpl
lds
aam
adc
cmp
mov
cld
das
add
mov
jae
mov
in
int
arpl
lock
jns
repnz
scas
pop
loope
outsb
add
push
sbb
push
adc
sub
and
dec
ss
push
fwait
in
jne
mov
cmpsl
adc
cs
jl
mov
mov
xchg
repz
mov
fwait
andb
jecxz
das
mov
imul
xor
pop
pushw
push
in
mov
movsl
xor
enter
or
sbb
data16
idivl
jo
dec
xchg
cmpl
daa
into
pop
sbb
shll
push
das
jg
add
push
rcl
lods
push
sbb
dec
cmc
xor
stos
or
dec
outsl
popf
stos
pop
inc
dec
adc
or
inc
mov
pop
sti
sub
stc
mov
inc
pop
ret
pop
mov
jecxz
or
lods
in
lcall
data16
xchg
cmc
fucomip
dec
cli
xchg
pop
sti
cld
xor
mov
or
sbb
jo
jns
dec
test
pusha
outsb
xchg
out
mov
sti
rclb
gs
loop
mov
push
inc
andb
nop
mov
pop
dec
xchg
and
dec
cltd
push
xor
adc
jg
inc
mov
scas
ja
cmpb
mov
in
out
add
lret
cld
sbb
call
repnz
lods
dec
pop
xor
cld
and
adc
stc
shll
test
ja
push
mov
cmp
mov
adc
push
jbe
aam
ret
add
mov
jne
movsl
xor
pop
adc
fsub
repz
movsl
push
insb
mov
loope
aam
outsb
push
out
adc
leave
push
sti
sbb
xchg
cli
lock
call
cmp
bound
es
mov
pushf
call
jle
fidivl
inc
add
xchg
dec
and
ret
nop
cld
xchg
loope
jecxz
adc
fldl
iret
jg
std
sbb
es
jbe
mov
inc
int3
aad
dec
and
mov
xchg
jne
mov
js
icebp
xchg
and
xor
dec
jno
lret
sub
and
shlb
cmp
pop
test
inc
mov
jmp
leave
add
pop
sub
adcb
js
lock
frstor
repnz
dec
mov
xchg
je
out
inc
das
inc
test
shll
out
hlt
jmp
fiaddl
out
add
ret
in
imul
sub
pop
scas
fwait
test
test
jno
sub
sti
das
jecxz
arpl
test
xchg
xchg
stos
ljmp
mov
js
addr16
icebp
repz
jb
test
lahf
cli
movsl
mov
mov
push
movsb
sbb
lret
int3
and
lret
movsb
in
jbe
fnsave
das
bound
fdivl
jmp
lock
rcr
lcall
pop
xchg
jecxz
pushf
xor
rcr
idivb
mov
push
shrl
xchg
add
stos
ret
add
mov
faddl
fucomp
push
ljmp
addr16
dec
jl
sub
or
mov
sahf
mov
jmp
pop
call
and
negl
add
xor
pop
subl
or
nop
aad
sbb
mov
cmp
dec
mov
add
push
sbb
cmp
stos
repnz
sub
sbb
out
outsl
and
sub
mov
lret
add
mov
cmp
cltd
cmp
scas
jp
add
pushw
rclb
cmpsl
push
les
xchg
xchg
push
xor
imul
mov
fidivs
sti
ret
testl
adc
decb
cli
dec
mov
aaa
in
fadds
test
mov
jnp
jmp
push
mov
dec
dec
and
sbb
fidivl
jb
test
push
loope
aas
jo
pop
jge
jb
or
testl
ljmp
lds
cmp
popf
xchg
sbb
sbb
add
push
cli
jle
fstpl
cmp
fs
out
aad
out
loopne
xor
pusha
fsts
lea
cmp
sub
or
clc
imul
fbstp
icebp
cmc
lods
jae
or
or
push
out
cwtl
adc
ss
and
cmp
sbbl
sub
stc
scas
sbb
dec
sbb
pop
add
lock
outsb
into
adc
cmp
lock
add
pop
push
mov
jb
mov
and
xor
cmpsb
or
jo
mov
inc
lds
or
adc
pusha
adc
fadds
adc
add
movsl
or
lea
cli
out
repz
mov
outsl
subb
iret
push
jo
arpl
aam
jbe
xchg
cmp
jg
sarl
cmp
jb
mov
mov
pop
in
pop
mov
xchg
mov
push
and
gs
inc
imul
out
push
outsl
into
imul
test
pop
mov
dec
fwait
mov
or
sbb
jbe
cld
xor
xor
enter
incl
scas
dec
add
sub
mov
push
jbe
hlt
push
inc
add
flds
cmp
mov
mov
call
pop
mov
out
dec
push
jns
push
jbe
mov
sbb
fstl
xchg
jbe
das
jbe
ja
cmp
loopne
cmp
or
or
pavgb
xlat
movsb
push
mov
cld
fwait
addr16
ror
ret
sbb
rcl
adc
pusha
bound
jae
pop
inc
jmp
pop
dec
fs
xchg
cmp
fidivrs
lret
pop
repnz
jbe
dec
jb
xchg
push
pop
add
outsb
in
sbb
repz
sbb
adc
rcrb
arpl
cmp
push
ss
jle
jnp
aam
xor
and
das
push
cmp
cwtl
add
stc
jnp
push
inc
pop
out
stc
push
stos
adc
push
add
daa
aam
lock
push
subb
dec
mov
or
rorl
adc
mov
jae
pushl
pusha
int3
stc
out
hlt
jno
or
or
imul
sub
dec
xchg
sub
cmp
popf
cmp
mov
sub
insl
out
push
sub
mov
xchg
mov
fimull
adc
inc
pop
stos
mov
mull
pushf
fldl
jno
jnp
inc
adc
fists
jmp
lea
popa
nop
imul
cmc
push
int
loop
mov
add
ljmp
jae
dec
insb
fwait
into
sbb
out
mov
mov
imul
repz
lods
mov
lcall
test
orl
jle
ret
adc
cmp
outsb
out
pop
push
es
scas
dec
ss
xchg
loope
jb
lods
push
cmp
int
in
aaa
sbb
and
aam
mov
rep
jnp
lods
dec
js
das
sbb
mov
hlt
adc
loopne
testb
cmpsb
shll
cmp
add
pop
fwait
jb
les
mov
pop
pop
aam
push
lds
pop
mov
les
je
jle
pushfw
shl
jg
or
cltd
add
dec
rol
add
adc
fcompl
sbb
divb
pushf
inc
xchg
insl
push
pop
push
imul
adc
or
and
and
jns
cmp
pop
push
ss
sub
inc
ret
pop
sarl
mov
movsl
ret
inc
cltd
lea
imul
stc
push
inc
push
xchg
mov
pushf
out
in
mov
je
sbb
out
jne
lods
add
xchg
nop
popa
or
cli
fs
stc
adc
and
mov
test
sbb
out
xor
lret
inc
hlt
inc
mov
inc
inc
and
mov
clc
xor
imul
lds
push
jne
fs
mov
mov
pop
in
inc
adc
sub
insl
push
push
add
mov
cmpsl
jb
pop
mov
pop
jmp
jecxz
xorl
jle
fucomp
xor
rorb
loope
jmp
mov
fists
mov
add
fisttpl
push
ja
pop
inc
daa
cmpsb
stc
jae
repnz
pop
mov
mov
lods
pop
enter
mov
fldz
movsb
pusha
mov
dec
pop
test
and
inc
push
ret
scas
and
fdiv
bound
xor
movsb
push
fildl
or
pushf
inc
mov
and
or
jmp
adc
push
addl
dec
jae
pop
add
into
test
or
or
jno
jmp
in
jle
or
mov
xchg
outsb
fs
push
xor
dec
sahf
and
jp
jle
lea
mov
mov
lea
or
negb
cs
xor
movsl
push
rorb
dec
lock
test
pop
mov
mov
shll
xchg
cwtl
mov
add
add
pop
ficompl
mov
dec
jns
rcrl
or
cs
push
out
out
out
jbe
loope
les
mov
repnz
xor
lret
inc
aas
daa
xor
add
xchg
push
enter
je
sub
mov
cmp
mov
mov
cmpl
push
and
and
lahf
or
or
aas
enter
push
aad
cld
negl
insl
or
loopne
jmp
icebp
orb
icebp
pop
xor
mov
in
xor
fdiv
mov
call
xchg
popf
and
fld
inc
aaa
or
jbe
dec
xlat
xor
xlat
loope
push
adc
xor
fmuls
or
popa
sub
aam
mov
cmpsb
add
negb
rolb
push
mov
push
rolb
xor
sub
out
xchg
fcomps
inc
jmp
std
or
push
out
shrl
dec
sbb
in
and
and
lods
sti
scas
and
out
fcomps
cmp
test
inc
jnp
xchg
add
mov
pop
mov
or
loop
or
js
rorb
ficomps
add
out
mov
pop
insb
sbb
add
inc
rcrl
arpl
dec
rol
test
push
xor
dec
aaa
add
dec
xchg
sbb
or
cmpb
addl
xor
roll
pop
lods
addr16
jae
in
sub
icebp
xchg
mov
dec
aas
or
cmc
rol
sbb
and
jp
pop
lea
jo
dec
movsb
push
sbb
divl
rclb
in
xor
lock
inc
cmp
xchg
enter
push
iret
lods
dec
dec
push
sub
mov
xor
pop
jae
or
inc
push
aaa
pop
sub
scas
cmp
mov
xchg
xor
shl
lcall
or
ds
and
mov
minps
pop
adc
adc
shll
imul
clc
jno
jne
inc
aad
stos
rorb
test
int
sub
sub
gs
pushf
outsb
jmp
fistpl
pushf
push
ljmp
idivl
jp
stos
cmp
movsl
push
cmpsl
lods
clc
and
nop
mov
cmp
cli
pop
pop
les
xchg
xchg
xchg
nop
jne
push
out
aam
mov
adc
xor
ror
popf
movlps
jns
lret
aaa
jae
push
stc
and
mov
push
pusha
dec
bound
shll
jmp
sbb
ss
lahf
int3
jl
fs
mov
pop
rol
ror
pop
repnz
lea
jle
adc
pop
subl
imul
and
fsubrl
cld
aas
fst
inc
xchg
or
jge
into
js
sar
and
push
in
mov
lods
xchg
jbe
imul
xchg
dec
push
pop
push
xchg
dec
xlat
or
dec
or
xchg
xchg
jl
xor
pop
pop
or
cmp
cmp
rorb
rorl
jno
add
loope
push
lahf
push
cmc
and
and
add
cmp
adc
jns
cld
repnz
mov
mov
outsb
orb
iret
call
ljmp
xchg
jmp
fnstcw
loop
ret
add
dec
push
add
jmp
cmpsb
addb
mov
add
add
mov
mov
sbb
mov
mov
repz
iret
imul
and
dec
ljmp
outsb
mov
in
dec
xor
mov
xor
jl
jl
js
sti
cmpsl
jg
cmp
sti
push
lock
lods
jae
xor
subl
push
mov
bound
or
xor
cltd
adc
mov
mov
xor
arpl
inc
pop
mov
addr16
out
inc
push
out
ud0
jmp
inc
jbe
push
movsl
inc
and
push
xchg
cli
mov
jle
lahf
xchg
xchg
cltd
xor
inc
pop
popf
push
add
inc
mov
ja
ja
xor
sub
cltd
imul
inc
and
out
mov
xor
xor
or
xor
push
bound
cmp
dec
jbe
inc
enter
stc
pop
fidivl
mov
xchg
repnz
push
mov
mov
arpl
popa
notl
inc
dec
inc
in
or
jmp
ja
pop
add
or
or
mov
xchg
andl
and
dec
jns
aaa
xchg
fisubs
inc
mov
scas
dec
ret
in
ss
dec
rclb
fbld
push
add
adc
in
push
xchg
push
je
jle
lret
rol
inc
lea
cmc
jge
xchg
test
scas
jnp
int3
jae
insl
insb
aad
push
inc
call
mov
ja
xchg
stos
inc
mov
xor
xchg
jmp
jb
dec
stc
fsts
mov
stc
pop
insl
add
mov
push
or
test
or
mov
lret
iret
mov
mov
sar
mov
jno
sbb
aam
mov
and
push
ljmp
xchg
adc
lods
fidivrs
pusha
mov
sbb
leave
icebp
dec
test
or
jae
and
mov
pop
sub
fs
jbe
jl
shl
lods
push
inc
mov
rorb
mov
mov
ds
imul
loopne
inc
repnz
mov
nop
inc
dec
mov
mov
in
pop
repnz
mov
jmp
lret
sub
pop
iret
inc
or
pusha
mov
adc
cmpsb
push
sub
add
shrl
jp
clc
cwtl
push
inc
add
insl
adc
sbb
mov
cmp
lea
ljmp
mov
adc
push
mov
xchg
cs
add
push
jns
sub
xor
mov
xchg
adc
mov
cmp
orl
fwait
and
pop
loopne
push
push
and
mov
mov
repz
push
add
loope
xor
xor
mov
iret
mov
pop
jg
mov
or
stc
imul
jb
pop
popf
sarl
movsb
andl
inc
sbb
pop
data16
lods
scas
test
mov
and
mov
imul
test
mov
loope
movsb
add
shll
das
lds
imul
push
xchg
add
stc
push
jne
sub
shll
push
jmp
stc
jnp
or
test
into
movsb
mov
mov
and
jmp
outsb
pop
cs
in
cmp
jp
data16
repz
int3
clc
aam
jp
sub
hlt
cmpsb
pop
out
or
sub
mov
test
loopne
ljmp
cmpl
and
mov
and
popf
scas
sub
lret
bound
and
mov
loop
jp
jl
iret
mov
sbb
aas
daa
jo
xor
adc
rorb
mov
inc
test
je
push
addr16
or
xchg
out
andb
or
sub
icebp
xchg
addb
outsb
adc
cmp
cli
mov
nop
add
dec
jae
adc
smsw
js
test
fwait
inc
es
popa
pop
cmpsb
xchg
pop
cmpsb
or
dec
inc
jl
inc
adc
cmp
sub
xchg
adc
mov
sub
jbe
stos
movsb
adc
pop
gs
and
xor
mov
mov
ds
aad
cmp
out
cmp
in
and
ret
push
mov
jp
and
ss
sbb
stos
jne
jo
dec
call
mov
js
ret
cmp
sub
lahf
inc
aas
shll
inc
add
iret
adc
das
push
jge
mov
mov
pop
dec
arpl
push
mov
cmp
lods
into
shrb
jp
lds
scas
icebp
lock
dec
mov
arpl
scas
sub
cmpsl
cmpsb
push
or
iret
nop
xchg
out
push
lods
push
icebp
xor
cmp
aaa
aam
fs
repnz
sub
xor
mov
in
cld
push
shrl
stc
pop
ss
mov
mov
mov
and
repz
xorl
dec
mov
push
loope
dec
mov
ret
push
jb
cmp
jl
mov
push
cmc
jl
jl
and
and
scas
and
call
inc
sahf
dec
imul
ja
cmp
mov
ret
dec
das
push
enter
pop
add
and
cmp
xchg
adc
add
idivl
mov
cmpps
out
pushw
std
and
icebp
test
lahf
stos
xor
mov
js
and
mov
dec
stc
jmp
fwait
test
or
imul
ss
aas
and
aaa
outsl
or
in
jbe
sub
mov
pop
mov
bnd
in
aaa
xchg
sub
das
or
push
cmp
dec
mov
cli
insl
mov
ss
shll
notb
xchg
das
cmp
outsb
jmp
sar
enter
pop
xor
xchg
in
adc
sub
ds
lret
insl
orb
mov
movsb
pop
popf
add
push
cltd
iret
imul
jl
add
scas
shrb
and
pop
or
dec
add
jmp
sub
mov
mov
inc
nop
lea
movl
xchg
mov
dec
loope
das
mov
das
icebp
vcvtpd2psy
jo
stc
pushl
jp
cli
bts
cs
sub
lea
scas
push
mov
jb
inc
call
jmp
push
lcall
jecxz
mov
adc
sbb
data16
movsb
jne
fidivl
inc
inc
add
pusha
int3
add
pop
in
jle
lahf
pushf
mov
shll
inc
jmp
mov
out
scas
cmp
fstpl
rcll
xchg
popf
xchg
adc
pop
fsubl
clc
pop
test
inc
or
cmpl
scas
mov
andb
repnz
cs
dec
cltd
and
ds
fidivrl
push
sbb
xchg
inc
and
nop
lahf
mov
xor
mov
repnz
adc
sbb
test
mov
lock
jne
mov
add
jmp
pop
test
pop
out
pop
dec
and
gs
cwtl
xchg
sub
cltd
mov
inc
insb
lcall
jge
push
cmp
xchg
inc
or
pusha
cmpsl
shl
repz
insb
and
push
popf
out
es
pop
das
cmp
or
insb
insl
push
out
ss
jb
cmp
stos
sub
inc
xchg
inc
add
jmp
test
xchg
pusha
cmpsl
dec
mov
jg
rolb
int
repz
loopne
cmp
cmp
ret
ficoml
rcrb
outsl
in
pop
lcall
clc
mov
lahf
push
sub
or
mov
push
bound
pop
jecxz
nop
fsub
pop
and
mov
jle
or
adc
sub
push
jg
ja
in
xchg
mov
mov
jns
push
sub
fxam
xchg
sub
adc
dec
and
add
jge
mov
js
sahf
dec
mov
fwait
inc
hlt
es
iret
fsubrl
mov
std
sub
jl
add
jle
repnz
or
adc
cwtl
in
cmpsl
lods
mov
outsl
lahf
sub
sub
rolb
cmp
arpl
test
mov
sub
aam
ret
repnz
filds
inc
lret
xchg
movsl
adc
std
imul
xchg
loope
cmovnp
jo
pop
inc
pop
fbld
cmp
pop
add
or
stc
xchg
xchg
or
push
popl
das
mov
push
frstor
pop
pushf
ds
fisubs
pop
xor
pop
ret
mov
jbe
pop
adc
gs
mov
xchg
cmpxchg
push
pop
adc
daa
inc
fdivs
test
jne
mov
fisubs
adc
push
in
enter
mov
jo
push
mov
daa
les
lret
pop
sub
push
and
push
lcall
shr
rclb
aad
inc
jnp
add
popf
jge
jle
cmpsl
nop
dec
cmp
sbb
lds
inc
inc
dec
add
adc
roll
inc
es
mov
fistpl
hlt
sbbl
jae
sub
or
popf
add
fwait
shr
push
stc
add
inc
les
jne
inc
repz
pop
insl
mov
fsubrs
pop
push
jmp
fisubrs
xor
cli
xlat
sub
lods
hlt
push
push
inc
and
lret
push
push
mov
test
add
pop
push
xor
fsub
jbe
fdivrs
mov
cmp
jbe
ja
or
insb
mov
mov
mov
imul
or
and
adc
in
lock
lret
das
sub
mov
mov
pushf
cmp
inc
push
in
dec
cmp
out
aad
loop
jmp
lcall
jno
mov
ljmp
dec
out
cmp
loope
or
dec
cltd
lret
lcall
push
mov
jg
add
notl
jg
test
and
xor
and
ss
push
inc
push
out
lds
mov
lds
xchg
pop
add
lds
clc
sbb
cmpsb
or
inc
add
inc
mov
sbb
xor
and
push
sub
in
inc
inc
cmp
notb
xchg
or
loop
out
inc
adc
mov
call
cmp
stos
dec
sbb
lcall
mov
lods
outsl
mov
out
sti
in
mov
icebp
sbb
add
xchg
test
dec
dec
lods
add
adc
xchg
jg
mov
insl
xchg
adc
dec
sar
or
push
clc
pop
idiv
cmpsb
push
je
or
mov
sub
mov
xchg
cmpsl
add
dec
mov
divb
pop
dec
jns
push
mov
cwtl
dec
adc
add
rol
outsb
in
outsb
mov
lret
pop
bnd
mov
xchg
or
adc
xchg
gs
insl
shrb
cmp
int3
pop
leave
enter
jg
jmp
or
cmp
call
std
push
inc
filds
fwait
in
mov
pop
movsl
pop
cmp
stos
pop
dec
pop
mov
aaa
pusha
mov
mov
cmp
div
divb
mov
pusha
jle
or
insb
imul
and
jp
shrl
jne
cmpsb
ror
test
or
or
pop
jne
xchg
in
fidivl
dec
repnz
ds
xor
insl
sub
and
lahf
pop
sub
or
fwait
gs
and
mov
outsb
dec
arpl
daa
push
cli
outsb
popf
adc
ficomps
push
cmp
cmp
push
mov
dec
push
mov
cmp
mov
xor
add
xor
pop
sub
ds
lcall
mov
and
inc
inc
pusha
in
and
mov
outsl
sbb
sbb
lret
fiaddl
lahf
adc
popa
psraw
cmp
out
and
sbb
jp
xor
push
lcall
daa
sub
in
mov
xor
pop
aad
mov
test
les
adc
lcall
lcall
pop
cli
xchg
aaa
push
stos
lret
jg
mov
or
ds
sarl
cld
insl
pop
inc
dec
xchg
cmpsb
mov
jne
inc
jne
roll
lcall
and
cmpsb
imul
loop
bswap
cmc
sub
in
lock
mov
push
cmp
cmp
mov
add
out
clc
lret
adc
imul
mov
mov
mov
push
stc
imul
cmpsb
pop
adc
test
inc
xor
and
aas
jmp
movsl
push
lock
fscale
jo
aas
sub
mov
push
enter
popf
sbb
jle
test
shr
mov
adc
nop
jmp
loope
mov
cmpsb
xchg
cli
das
cltd
mov
dec
insb
sub
fcom
test
jg
hlt
in
push
or
xchg
gs
push
call
cmp
mov
xchg
adc
cmp
shlb
test
or
sbb
std
sub
lret
frstor
popf
lahf
sub
lds
fisubs
in
daa
xchg
sbbb
jae
inc
imul
outsl
dec
xor
dec
adc
sbb
push
shll
scas
fisubl
inc
cmpb
aas
ja
repnz
sub
sbb
pusha
lock
ss
push
sub
addr16
dec
daa
cld
fs
icebp
push
fsubrs
out
test
les
rclb
addl
cmpsb
bound
aas
lahf
mov
sarb
xor
push
out
out
cmp
pop
mov
cmp
int3
cmp
xor
inc
ljmp
sbb
mov
xor
scas
push
daa
scas
push
pop
ljmp
popa
hlt
sbb
out
es
js
fwait
cli
in
push
sub
jge
popf
push
imulb
insb
xor
aad
int3
add
or
inc
mov
push
test
stc
aam
sub
inc
jns
cld
pmulhw
adc
jno
neg
imul
aaa
pop
xchg
adc
sub
inc
or
sub
xchg
push
stos
test
push
pop
add
adc
fstl
loope
inc
in
rcll
push
lock
fisttpl
dec
or
xlat
push
cmp
xchg
xor
arpl
test
je
or
pop
fxch
mov
orl
mov
or
push
mov
sub
mov
mov
adc
and
xchg
mov
movsl
popa
mov
push
mov
test
or
xor
or
dec
out
mov
and
inc
int
cli
in
insb
out
testb
jle
flds
les
pop
mov
mov
rcrb
xchg
mov
in
xlat
push
movsb
mov
out
xchg
mov
bnd
sti
cld
cmp
lock
pop
sbb
jle
pop
adc
add
cld
pop
call
mov
aaa
call
in
mov
or
mov
popa
jnp
ss
xor
bound
cmpsb
push
sbbl
scas
test
in
sub
jno
add
inc
pop
mov
push
pop
dec
and
aaa
push
pop
stc
mov
add
add
mov
mov
sub
int
js
inc
xor
sbb
mov
aad
jne
dec
xchg
and
ret
shrb
andb
sbb
sub
inc
mov
cltd
sub
xchg
xchg
das
sbb
or
rcll
push
lods
outsl
adc
scas
lahf
sub
xor
mov
mov
repnz
bswap
xchg
xchg
rcrl
inc
dec
xchg
xor
test
in
sahf
fidivrl
in
mov
ds
cmp
nop
sub
gs
loop
leave
ds
repz
add
cmc
jmp
aas
inc
push
push
mov
cmp
cmpsb
enter
inc
jecxz
nop
imul
inc
pop
jb
aad
and
fwait
push
jge
in
ja
mov
push
sbb
scas
jbe
shr
jb
xor
pushf
dec
xchg
cmp
out
add
mov
cmpsb
push
add
and
xchg
cld
gs
outsl
xchg
ljmp
out
insb
xor
jmp
jecxz
or
pop
jno
dec
sub
add
rcrb
je
scas
push
mov
test
loope,pt
repz
je
jns
jge
mov
insb
push
mov
dec
jmp
dec
and
mov
aad
mov
lds
movsl
cmc
insl
adc
add
or
adc
iret
sbb
pop
cltd
or
loop
arpl
lock
pop
inc
mov
mov
ror
cmp
fistl
cmp
mov
mov
jo
adc
cs
mov
xchg
loopne
jecxz
mov
lods
shll
mov
bound
mov
mov
jo
mov
lahf
push
std
xchg
inc
xor
adc
jne
clc
or
push
pop
arpl
mov
adc
sbb
mov
pop
stos
out
cmp
and
out
mov
dec
sbb
andl
jle
pushf
int
xchg
scas
inc
inc
or
in
test
adc
jbe
cltd
xchg
movsl
add
aaa
inc
mov
xchg
into
pop
xchg
shll
sbb
pop
fucomip
test
testl
xchg
pop
add
jno
mov
test
std
jmp
add
xor
sahf
jg
adc
xchg
lcall
ljmp
imul
out
cmp
and
lds
dec
hlt
and
dec
outsl
std
sti
inc
mov
ss
cmpsl
xchg
dec
or
adc
dec
fisubs
fsts
aaa
daa
xchg
sahf
cld
xchg
sbb
xlat
mov
sbb
data16
and
adc
jne
aas
push
std
push
jl
test
andl
addr16
mov
test
clc
xor
hlt
or
and
mov
jo
rcl
cmp
inc
fstpt
mov
popa
call
out
test
clc
lcall
test
xor
fnstsw
mov
sahf
inc
push
js
ret
fwait
or
scas
adc
mov
mov
aaa
shrb
nop
movsl
cmp
mov
jne
sub
xchg
hlt
cmc
push
fwait
arpl
jp
mov
mov
cmp
push
dec
das
fldl
sbb
jnp
fdiv
sbb
and
push
push
mov
push
xor
fstpt
stc
cmp
mov
out
cmpsb
out
lcall
aad
and
jge
push
adc
pop
mov
scas
lock
outsl
seta
imul
dec
rol
and
arpl
les
arpl
es
cwtl
stos
bound
jb
divb
stos
and
int
cli
cmp
xor
lcall
mov
notb
jbe
es
shl
xchg
in
or
mov
outsb
sub
mov
int3
adc
insb
sub
out
shlb
stos
xor
idivb
mov
mov
ljmp
sahf
jge
je
into
jp
adc
hlt
mov
stos
push
aas
push
pop
mov
push
sbb
idivb
cmp
idiv
xchg
sbb
lds
add
in
jp
pop
test
xchg
fsubl
xchg
push
inc
mov
or
lcall
adc
cmp
mov
mov
inc
xor
jp
inc
enter
popa
mov
leave
dec
das
and
push
test
dec
movsl
pushf
pop
decl
adc
es
pop
test
lcall
mov
push
out
into
dec
nop
cmc
in
adc
aas
std
jl
movsl
movsl
add
or
jo
pusha
outsl
mov
push
cmc
scas
aas
and
insb
cli
or
aad
and
ljmp
xchg
repz
xor
or
add
sub
inc
int
pop
ficomps
dec
insl
mov
stos
test
lcall
dec
paddw
scas
mov
dec
mov
xchg
jg
pop
pusha
daa
dec
push
lcall
push
dec
jmp
or
insl
rcrl
mov
add
xchg
andb
stc
and
fdivs
add
cmp
sbb
dec
mov
mov
fcoms
loopne
push
xchg
inc
inc
aam
movsb
cltd
stos
push
mov
pop
jg
sbb
mov
lds
sbb
sub
mov
push
mov
mov
ror
pop
ficompl
stos
out
test
arpl
pop
pusha
mov
jmp
xor
lds
out
call
out
repnz
cwtl
cmpsl
lods
clc
pop
testl
mov
out
xor
sbb
movsb
pop
jg
ret
xor
lods
ret
dec
sbb
mov
jnp
adc
xor
mov
push
or
jle
imul
fdivr
ds
xchg
rcrb
cmpsb
ret
scas
movsb
xchg
cmp
and
adc
lds
stos
pop
mov
ret
sti
push
mov
js
ret
jns
addl
leave
psllw
subb
cmp
mov
pushf
cmc
clc
cmp
test
aaa
jmp
or
je
or
lcall
mov
pop
je
pop
lds
fnsave
bswap
jmp
mov
xor
dec
or
ret
insl
jno
or
popf
cmpsb
outsb
mov
cmpsl
add
pop
test
dec
mov
pop
jo
sarb
pop
ds
push
jnp
xor
cmp
adc
inc
inc
nop
fidivs
loope
sub
mov
xchg
mov
or
and
or
cmp
dec
and
push
outsl
xor
fs
push
or
push
jp
mov
in
testl
mov
out
xor
cmpsb
faddp
les
inc
lahf
dec
push
aaa
cmpsl
nop
jns
xchg
and
or
bound
xor
sti
xchg
sbb
fwait
or
or
push
dec
out
andl
mov
mov
mov
mov
cwtl
pop
mov
mov
iret
enter
imul
loopne
cmc
adc
fcoms
add
sbb
lods
nop
test
lret
mov
repz
jne
lret
sbb
mov
aad
sbb
inc
mov
mov
push
dec
or
inc
and
in
mov
imul
in
ret
fnstenv
mov
aas
out
in
loopne
es
out
or
jnp
rcrb
inc
shlb
jns
inc
ljmp
test
pop
scas
push
push
sub
inc
repnz
sbb
pop
roll
xor
cltd
inc
or
mov
das
cmovns
xchg
push
xor
fcomp
arpl
inc
out
cwtl
push
movntq
cs
aaa
push
mov
aas
loopne
cmp
clc
shll
mov
mov
jge
add
lock
mov
insl
xchg
rcrl
sub
cmp
out
pop
sub
imul
or
inc
and
inc
xlat
mov
xchg
xlat
fwait
test
ret
cmp
pop
je
add
inc
add
jmp
ficompl
dec
jge
cmpsl
cmc
dec
mov
adc
icebp
sub
mov
rolb
rcrb
test
push
out
fcmovnbe
rdpmc
adc
repz
jmp
mov
dec
sub
jmp
mov
lret
jns
arpl
ljmp
jno
std
lods
add
dec
imul
cli
jg
mov
jecxz
loopne
das
adc
icebp
sub
aaa
pop
mov
jo
push
dec
jno
out
xlat
push
fcmovnbe
clc
loop
mov
pusha
out
or
lahf
aad
movsb
cmp
cmp
clc
cmp
dec
testb
loop
mov
jmp
push
les
push
lahf
int
add
lahf
pop
outsl
fsubrs
rorl
push
push
lcall
les
lock
mov
lock
and
cli
inc
ljmp
xchg
filds
adc
imul
bnd
fwait
imulb
push
jne
fwait
push
mov
leavew
push
adc
cmp
or
jp
gs
push
cmp
mov
xor
and
mov
mov
mov
push
pop
mov
xlat
inc
popf
add
test
cld
fbld
flds
in
sub
xlat
sub
fisubrs
fdivl
es
cs
stos
shl
xchg
clc
xchg
push
icebp
mov
sahf
sahf
dec
xchg
dec
aas
jecxz
setne
dec
push
std
or
ss
xchg
add
leave
fmull
test
xor
shll
sub
sbb
dec
push
daa
dec
dec
xchg
mov
mov
sti
neg
cmp
cmc
jno
pop
mov
int
pop
pop
pop
dec
cmp
in
xor
push
jle
sbbl
fnstcw
mulps
mov
or
je
sbb
out
int
inc
xorl
mov
mov
add
in
cmp
sub
sarl
pusha
aaa
add
add
ljmp
mov
dec
xor
dec
and
or
push
push
pop
and
push
dec
aam
icebp
lret
mov
hlt
mov
fiadds
movsb
xor
ret
add
jge
movsl
cmp
into
fs
mov
xabort
out
decb
mov
ret
or
stos
and
push
adc
cld
jecxz
daa
mov
adc
repz
add
scas
mov
arpl
xor
lock
adc
inc
xchg
sahf
dec
push
mov
iret
mov
sbb
inc
clc
mov
add
and
insl
xor
pop
pop
or
imul
mov
mov
pop
add
pop
push
movsl
rolb
and
pop
lahf
movsl
dec
mov
je
mov
mov
and
and
mov
xor
adc
sahf
push
popa
inc
push
pushf
cmp
dec
ret
mov
xor
mov
mov
out
daa
fdivrp
addb
sbb
subb
stc
xchg
dec
pop
cmpsb
cmp
push
mov
sbbb
adc
enter
add
aas
inc
mov
sbb
lock
clc
dec
mov
mov
dec
dec
push
mov
rcll
dec
cli
pop
sub
jo
xlat
jae
ljmp
idivl
addr16
fdivrs
cmp
in
cmpsb
scas
mov
xor
fisttpl
enter
outsl
jmp
popf
cmp
imul
cltd
jb
xchg
mov
loopne
test
gs
arpl
pop
insl
inc
iret
imul
cs
fcos
test
xchg
xchg
popf
insb
dec
jle
push
outsb
movsb
or
inc
sar
fistl
imul
repz
test
movsb
jecxz
leave
in
test
adc
inc
testb
push
and
adc
roll
ja
mov
sti
cltd
xchg
jbe
and
mov
mov
inc
xchg
add
mov
cmp
push
movsl
std
or
cmpsl
in
rolb
aad
inc
das
enter
xor
loopne
xlat
je
xor
mov
stc
sahf
dec
mov
mov
mov
aad
sarl
push
inc
test
fisttps
icebp
cmp
aaa
pushf
dec
and
das
cmp
test
xor
cmp
sbb
pushl
ret
sbb
lret
jge
lock
int3
lret
ret
adc
sbb
jg
adc
std
mov
add
sub
loope
test
fyl2xp1
and
dec
adc
outsl
repz
xor
and
jbe
ja
std
pop
pop
rcr
mov
aaa
out
jmp
mov
rcrl
loopne
movsb
pop
rcrb
pop
popf
fisubs
jecxz
sbb
mov
scas
jmp
cmp
fwait
push
movsl
xchg
xchg
adcb
push
or
adcb
pop
dec
addr16
sub
popl
mov
out
adc
adc
jns
shlb
or
dec
sbb
movsb
jl
je
bound
jmp
jl
cs
lahf
xchg
mov
jle
int3
xlat
fdivl
sbb
sub
mov
hlt
mov
nop
ret
lret
adc
xchg
test
inc
inc
push
xor
sbb
xchg
cli
jp
jmp
sbb
clc
cmp
xor
data16
loope
sub
ljmp
jge
or
lret
jmp
jo
iret
mov
jecxz
icebp
xor
jge
sub
add
imul
lret
sbb
and
not
mov
push
or
out
arpl
in
inc
jecxz
les
xor
popa
cltd
out
fisubrl
stc
mov
xor
pop
push
inc
push
cmp
push
lds
cwtl
push
scas
cld
pop
sub
mov
pop
xchg
inc
or
popa
js
ret
sub
shlb
add
or
push
sub
stc
test
or
pop
inc
adc
sbb
test
loop
leave
scas
imulb
fs
xchg
sbb
mov
jge
jecxz
nop
pusha
sbb
push
jge
mov
cmp
dec
add
inc
popa
arpl
repnz
xor
sub
jmp
jbe
pusha
ret
outsl
pop
and
ljmp
stos
outsb
or
adc
enter
adc
sbb
fldcw
inc
rolb
and
dec
adc
adc
dec
dec
xor
cmp
adc
push
bound
lock
imul
xchg
test
loop
imul
fst
sub
sub
pop
pop
cmp
inc
push
pop
ret
sbb
cld
loope
fsts
sbb
fcomp
js
pusha
test
push
jmp
movsb
inc
pop
add
jge
inc
xor
jo
repz
mov
loopne,pn
js
xchg
xchg
pop
adc
mov
scas
mov
cld
lea
mov
cs
bound
mov
ret
mov
xor
repz
mov
mov
add
outsl
outsb
daa
cmpsb
pcmpeqw
pop
les
test
push
mov
cmpl
fcmovu
sub
add
or
shll
out
outsb
sub
adc
dec
adc
ja
mov
dec
or
test
bound
jle
fistps
cltd
test
pushf
pop
inc
sub
jnp
rcrl
int3
dec
pusha
cmp
out
and
sbb
mov
push
push
add
repnz
pop
les
xchg
pop
xor
xor
cmp
aam
fcoms
xchg
mov
mov
mov
xor
mov
fdivl
ja
pop
mul
jbe
out
cmp
inc
adc
pop
int3
lret
or
mov
loope
adc
daa
fwait
loop
pop
lret
sbb
inc
aas
mov
cmp
aad
dec
ja
jbe
mov
dec
add
test
hlt
popa
mov
sbb
lcall
bound
in
movsb
inc
mov
ret
or
mov
xor
xchg
mov
or
mov
ret
pop
iret
add
arpl
test
je
push
icebp
das
jl
fwait
repz
mov
outsl
gs
pop
sbb
daa
fsts
popa
cmp
jg
roll
insb
adc
hlt
pushf
lcall
jbe
pushf
fistl
mov
sarb
data16
xrstor
xchg
shrl
push
dec
lds
enter
mov
inc
pop
push
dec
adc
imul
pop
inc
jge
mov
mov
je
lock
xor
out
aaa
pop
cmp
sahf
test
mov
inc
popa
pop
fwait
push
mov
push
inc
jo
xchg
leave
mov
das
cmc
pop
jo
outsb
aas
and
mov
cmp
push
sahf
cld
push
mov
adc
xlat
arpl
push
sub
xchg
pop
xchg
loop
push
mov
mov
dec
push
jnp
xlat
pop
in
add
sbb
inc
lret
daa
mov
push
shl
xchg
jo
leave
mov
push
mov
gs
mov
repz
mov
cli
insb
vmaxsd
insl
addr16
and
add
push
orl
push
push
es
mov
fcoms
sub
push
ljmp
sbb
fwait
insb
int
cmp
scas
insl
repnz
movl
in
imul
mov
out
lods
or
jp
and
test
and
cmp
fucomp
lcall
aaa
or
sub
sbb
pop
xor
mov
or
jle
push
cmp
xadd
lods
popa
jle
mov
xchg
aad
popa
jecxz
inc
jo
mov
test
xlat
add
fstps
or
dec
mov
mov
push
pop
sahf
insb
adc
sub
mov
adc
sbb
fldl
mov
cmc
icebp
mov
data16
movsb
mov
nop
pop
or
stos
jbe
xchg
mov
cmc
xchg
in
std
aad
and
ficoms
mov
es
jo
cltd
rorb
call
and
rcll
lods
dec
enter
js
add
cwtl
pop
ljmp
cwtl
cmc
cmp
xchg
add
in
adc
xchg
ss
add
mov
insb
lea
adc
and
fs
mov
xchg
pop
test
dec
clc
push
shll
or
or
ss
fldt
push
or
loope
ljmp
or
jecxz
ret
out
cld
popa
mov
dec
xchg
sbb
fistpl
pushf
pop
shll
push
mov
rclb
mov
jno
shll
and
inc
jno
adc
outsb
push
pop
sbbl
shlb
push
rcrl
ljmp
cmp
pop
ror
outsb
out
push
mov
adc
push
orb
pop
test
lcall
xor
mov
mov
call
sbb
sub
and
test
bound
mov
popf
out
and
jae
pop
dec
push
negl
pop
das
inc
jg
add
leave
outsb
xchg
ljmp
jle
sbb
jmp
push
mov
data16
std
xchg
and
push
cmp
xchg
add
mov
rcrb
sahf
ja
sbb
push
or
in
idivb
xor
jle
jb
outsl
mov
scas
ds
insl
push
and
cwtl
fisttps
repnz
repz
ret
ds
insb
inc
pop
cmp
mov
add
sbb
imul
loope
push
push
loope
aas
inc
cmp
sub
pop
fists
addl
jle
sbb
mov
test
dec
inc
mov
pop
mov
sbb
cli
loop
lock
cs
pop
adc
incb
gs
mov
aad
lret
fisttpll
inc
pushf
mov
outsl
xchg
enter
fwait
sub
js
ret
pop
adc
arpl
cs
mov
mov
out
aam
leave
push
je
mov
mov
movsl
jns
jge
leave
nop
xchg
mov
sub
xchg
iret
ret
lcall
inc
ss
in
ss
add
mov
xchg
adc
call
fmuls
repz
pop
jmp
dec
xchg
loopne
push
inc
into
lock
dec
cmp
clc
aas
loopne
inc
pushf
test
mov
popf
out
jmp
repnz
daa
sbb
add
cmc
mov
scas
xor
lods
lea
je
mov
push
sahf
fidivs
sbb
repz
sahf
decb
push
jg
test
es
sbb
mov
add
notl
idiv
adc
xor
test
dec
mov
movsl
xor
mov
lret
in
mov
push
shrl
push
xchg
mov
std
fisttps
test
push
ljmp
daa
hlt
jmp
rorb
cmpb
and
adc
movsb
jmp
adc
mov
mov
push
cmc
rclb
mov
add
aas
dec
cltd
pop
cmp
cs
aas
mov
jne
arpl
mov
adc
dec
mov
std
mov
loope
push
push
and
shll
stos
inc
test
and
mov
sti
mov
xor
jo
mov
stos
leave
ds
scas
cmp
js
rcll
lret
cwtl
cmp
out
shl
jecxz
mov
aam
idivl
jo
fnop
loopne
or
sub
mov
repnz
xor
rclb
call
jg
sbb
push
lds
mov
outsl
fs
mov
sbb
ds
sub
cmp
loope
daa
and
andl
lods
das
repz
divl
xor
jmp
test
sarb
cmp
mov
mov
xor
cmp
out
adc
dec
pop
add
es
or
test
cs
test
shr
xchg
mov
xor
jmp
jg
mov
dec
sub
shlb
push
sarl
mov
or
addr16
mov
scas
pop
mov
xor
stos
or
pop
jns
popf
adcl
sbb
push
aaa
movsb
push
pop
outsl
pop
jns
fs
cmpsl
out
je
scas
aam
xchg
leave
jne
enter
pusha
dec
mov
sub
pusha
and
loopne
inc
pop
ljmp
cmpb
lock
cs
daa
mov
xchg
fiaddl
mov
cmp
sti
lock
test
jle
inc
push
jo
push
in
rcr
adc
sti
push
js
dec
jnp
frstor
jmp
divl
fsub
clc
sbb
mov
mov
inc
xchg
pop
and
andnps
push
divl
xor
cmp
outsl
fldt
add
mov
roll
icebp
test
pop
insb
cmp
incl
je
loopne
loopne
mov
sahf
push
dec
adc
imul
xchg
and
mov
aam
cmp
and
jo
cmc
or
int
fnsave
jecxz
mov
add
je
ljmp
ja
inc
mov
inc
pop
push
les
sbbl
jbe
inc
sbb
or
jle
cs
test
mov
cmp
dec
push
dec
mov
dec
pop
xor
jecxz
bound
outsl
push
repnz
jno
je
test
sub
ja
push
xor
ss
xlat
lods
and
fildll
pop
mov
mov
jp
notl
jbe
or
rorb
insb
data16
dec
cmp
lcall
dec
cwtl
xchg
rcrb
bound
cli
xor
pop
ss
mov
frstor
leave
adc
cli
push
cwtl
shll
fcoml
js
jecxz
fstps
bound
jg
xchg
push
mov
pop
pop
cmp
pop
std
aam
test
push
inc
mov
mov
sub
push
jo
in
mov
push
shl
scas
dec
mov
inc
mov
add
and
popa
add
inc
sbb
loope
nop
mov
sarb
in
sub
sbb
jns
inc
cmp
insl
repnz
push
mov
lcall
ljmp
roll
mov
dec
inc
pop
test
inc
pop
pop
inc
cmp
dec
cmp
in
leave
dec
cwtl
lea
repz
lods
adc
xchg
inc
push
add
jp
sbb
adc
xor
andb
les
insl
in
sub
je
jle
or
inc
clc
loopne
stos
mov
push
scas
xchg
mov
insl
or
jge
jbe
les
jmp
fidivrl
mov
pop
out
cmp
xchg
xor
add
jg
rcrl
insb
shll
mov
fsts
loopne
adc
mov
xor
adc
push
in
dec
ss
in
and
stc
mov
sub
dec
mov
mov
je
mov
fbld
dec
pop
push
mov
cs
out
fldenv
mov
cld
jp
inc
je
sbb
mov
inc
sub
mov
int3
ret
xor
test
sbb
out
out
aam
dec
cmp
mov
xchg
sbb
cmp
into
sub
mov
inc
clc
lods
andb
jno
push
mov
and
mov
pusha
xchg
add
ret
and
pop
pop
ja
push
loopne
pop
sbbl
lea
test
pop
or
adc
ss
test
cmp
inc
add
cmp
add
dec
sbb
lahf
sahf
fiaddl
test
mov
mov
push
cmp
idivb
mulb
iret
push
movsl
xor
sub
rolb
jno
dec
jmp
lret
lret
in
cpuid
repnz
mov
or
mov
jecxz
scas
dec
vcvttsd2si
pushf
das
inc
nop
xor
es
cmpsb
inc
es
inc
out
jp
mov
add
jecxz
cltd
xchg
mov
inc
mov
ret
insl
pop
and
out
bound
leave
mov
orl
sub
lcall
je
cmc
int
inc
imul
adc
mov
xor
addr16
test
pop
xchg
aaa
insb
pop
pop
test
jb
and
xchg
aad
fwait
xchg
sub
inc
push
pop
adc
in
jo
dec
nop
faddp
shll
lock
xor
lods
or
inc
and
xor
mov
stc
mov
addr16
mov
sub
pushf
bound
jnp
ret
mov
sbb
fsub
cmp
pop
loop
pop
sbb
cwtl
hlt
or
xchg
out
jb
cmp
add
ret
jmp
pop
mov
mov
sub
imul
jge
and
out
fwait
test
fs
jp
mov
rcrb
lods
or
test
pushf
inc
fistpl
pushf
cmp
out
push
mov
outsb
mov
int
dec
inc
jp
fs
popa
incb
cmpsl
mov
or
stos
pop
neg
mov
gs
xor
xchg
nop
jno
xor
xlat
call
mov
xor
jl
pop
push
mov
ds
in
add
pop
clc
pop
jl
lahf
mov
mov
repnz
shlb
mov
sub
test
out
push
repnz
ss
stc
insl
rcl
sbb
rcl
adc
sti
icebp
xorb
lods
addr16
ficompl
mov
insb
mov
inc
xchg
dec
and
jb
and
mov
inc
pop
shll
mov
cmp
ljmp
or
push
aas
xor
cmpsb
repnz
add
add
insl
and
repz
out
cmpsb
cmpsl
and
stos
push
shll
jb
mov
les
mov
pushf
f2xm1
sbbb
push
stos
xchg
inc
fstl
add
jl
ret
mov
xchg
sbb
xchg
push
dec
ljmp
pop
dec
cwtl
or
subb
dec
ret
inc
cli
jmp
jb
cmp
out
nop
and
xorb
test
mov
popa
sub
dec
and
xchg
jbe
faddp
les
outsl
aaa
pop
iret
sub
sahf
push
nop
cmpsl
fldcw
test
mov
add
push
cmp
stos
push
mov
or
mov
push
lcall
imul
popf
gs
lea
cmp
in
xor
inc
sub
cmp
ja
pop
pushf
int3
lret
mov
aaa
cmp
stc
fsts
popf
mov
mov
repnz
push
lret
push
jnp
dec
leave
ljmp
daa
push
fldl
pshufw
in
xchg
mov
popf
shrb
aaa
push
aad
xorb
in
adc
sub
fistps
push
xchg
mov
pop
sbb
sbb
ret
nop
lock
outsl
xchg
jno
rorl
loopne
ficompl
dec
shl
cltd
out
popa
jg
mov
mov
icebp
inc
jmp
sbb
in
lahf
xor
icebp
adc
out
and
jo
inc
adc
push
out
cld
enter
icebp
sub
in
fs
cltd
lret
out
ss
xor
daa
sub
hlt
sarb
icebp
jl
arpl
push
cmpsb
pop
outsl
loop
sbb
jmp
js
mov
jmp
scas
xlat
push
ds
xchg
sti
cli
jne
out
push
mov
sbbl
pop
jo
out
mov
addb
cld
fsubrs
xor
leave
fstps
push
jmp
sub
data16
sbb
inc
popa
sbb
mov
and
xorb
mov
fcompl
inc
into
jg
sbb
cmpsl
cmpl
sarl
mov
push
fdivr
scas
out
gs
gs
in
push
dec
push
xor
movb
sbbb
sub
cmp
xchg
xchg
cmp
in
cmp
inc
mov
dec
sahf
cltd
mov
pop
int3
dec
pop
pushf
adc
and
popf
xchg
cltd
fcoml
pop
jp
add
out
sahf
rcrl
outsl
pop
inc
jp
ss
repnz
adc
call
testl
push
lret
stos
xor
ss
cmc
add
push
xchg
cs
or
daa
jp
lahf
jmp
mov
add
push
iret
push
adc
inc
xchg
adc
fdivs
insl
pusha
dec
mov
or
xchg
mov
outsb
mov
or
outsb
les
data16
mov
sbb
gs
xchg
gs
popa
ds
push
xor
jno
lock
mov
mov
out
fiadds
shrb
push
cmpb
sub
dec
fadd
nop
jno
xchg
push
movsl
push
gs
jns
mov
adc
outsl
push
push
shrb
dec
mov
es
es
shr
aad
or
leave
insl
mov
mov
mov
imul
aas
jge
sti
sub
add
push
fs
xchg
lock
scas
lds
cmc
aaa
push
shl
insb
dec
jb
ds
jnp
push
mov
stc
sbb
xchg
popa
or
cli
stos
xchg
pushf
add
pop
fsubl
gs
cmp
pminub
lods
xlat
push
pop
inc
pop
lret
jae
adcb
mov
aad
out
sbbl
and
jle
into
jg
xor
mov
sbb
add
ficompl
xor
cmc
cli
mov
repz
push
mov
ficompl
stos
je
test
out
lock
mov
dec
jo
addr16
push
loopne
push
push
inc
push
imul
insb
or
call
popa
adc
push
lock
in
xchg
shll
test
dec
sub
nop
push
cmpsb
loopne
repz
mov
lahf
adc
cmpsb
cmp
jp
mov
sbb
les
and
sti
lock
fnstsw
dec
shrl
in
lods
jp
in
sub
or
je
shl
add
mov
popf
dec
mov
sub
es
fs
inc
adc
negl
arpl
jl
sbb
jno
es
push
or
and
outsl
bound
sbb
dec
fcoml
add
rcrl
lcall
inc
test
into
adc
mov
add
leave
cmpsb
jne
cmp
jno
cltd
add
movsl
dec
es
add
ror
dec
pmaxsw
push
sbb
stc
xor
adc
jecxz
inc
insb
and
or
clc
push
addl
iret
jb
pop
sub
cmpsl
pop
les
ljmp
in
or
jno
jg
sbb
lcall
std
fidivl
mov
ret
add
mov
mov
in
mov
mov
sub
mov
pop
or
shll
sub
in
rorb
ja
sbb
and
dec
xor
int
and
iret
cmp
popf
fcmovnb
lds
jo
adcb
int
lcall
stos
iret
inc
repnz
push
pop
mov
jb
and
data16
mov
or
out
or
jmp
jnp
insb
lods
rcrb
and
adc
push
xchg
ret
push
fldenv
jmp
jmp
mov
sub
xor
or
sbb
mov
xorb
cmp
pop
js
sbb
push
rorb
inc
in
xchg
rcll
adc
stos
in
rorb
push
jge
out
and
repz
stos
xor
sub
popf
push
and
sub
insb
add
out
je
push
jmp
mov
mov
fldcw
inc
test
iret
jl
jg
ja
push
js
push
fidivs
sahf
or
test
sub
jne
mov
repz
iret
or
dec
addr16
jge
test
push
jl
ret
push
cs
push
in
inc
add
mov
hlt
cmp
or
mov
aaa
lods
ficoms
ds
shrb
call
and
and
ror
jecxz
pop
cmp
dec
daa
int3
push
mov
cmp
push
xchg
mov
mov
arpl
stos
inc
mov
and
mov
inc
dec
mov
stos
sub
xor
imul
and
inc
push
loop
mov
inc
dec
sub
scas
ss
int3
aas
stc
jbe
or
rorl
out
dec
inc
inc
bound
fsubrs
in
mov
testl
cmpsb
shll
lea
xor
ja
out
sti
adc
lods
fistps
adc
adc
notl
inc
cmp
ja
mov
xchg
pop
test
leave
mov
cmc
and
mov
add
adc
paddusw
fcoml
jb
imul
push
push
das
imul
xchg
cli
jle
sub
je
mov
jl
pop
mov
jecxz
fisubrs
adc
xor
pop
ljmp
lret
iret
push
lods
sub
lods
out
call
cmp
sahf
icebp
mov
in
pop
mov
mov
std
or
mov
push
sti
arpl
push
inc
jg
push
jecxz
sarb
les
xchg
int3
jo
ret
test
aam
pop
push
movsb
xor
push
out
repnz
cmp
xchg
mov
shll
sub
xchg
mov
push
xor
in
dec
fmuls
cld
cmp
sbb
dec
push
test
fdivs
iret
std
test
xchg
aad
xchg
pusha
das
and
mov
lea
pop
mov
stos
push
out
out
mov
dec
mov
push
outsb
out
cwtl
bound
inc
sarl
arpl
xchg
leave
test
xchg
test
daa
ljmp
pop
je
popa
ljmp
push
and
pop
adc
pop
iret
popa
dec
sub
lcall
pushf
lahf
sbb
pop
ret
adc
fcomps
xor
sub
aad
mov
out
xlat
xor
cmp
mov
pop
mov
mov
ficoms
int
aad
sub
or
into
push
inc
into
fisttpl
mov
outsl
les
daa
or
inc
cmpsb
rolb
fistpll
mov
mov
imul
fs
cmp
test
inc
stc
add
and
adc
lock
jae
cmp
mov
mov
shr
pusha
ret
xchg
mov
dec
jecxz
xchg
clts
push
lcall
mov
lods
fidivrs
addb
fidivrl
jae
decb
cmc
out
sub
xor
movsl
int3
pop
cmp
insb
and
es
jecxz
dec
sbb
push
stos
dec
loop
bts
sar
ljmp
xchg
xor
js
call
push
inc
or
mov
subb
or
cli
xchg
sarl
insl
mov
repz
sti
mov
sbb
ficoml
cmp
sti
fcmovne
mov
add
pop
out
fs
or
xchg
and
cmc
test
loope
and
stos
mov
in
test
outsl
mov
faddl
mov
cld
je
testl
dec
cmp
xor
inc
mov
test
addb
jb
pop
sub
incb
xchg
lret
push
iret
mov
daa
jmp
sbb
js
js
push
sub
les
fsubrl
sbb
scas
jnp
pop
cmp
jge
gs
mov
dec
pop
hlt
jb
dec
cltd
pop
lcall
jge
cli
popf
les
jnp
leave
cld
popl
cltd
push
jo
ljmp
jmp
xchg
pusha
add
mov
pushf
in
xor
adc
insb
or
orb
add
mov
shr
jo
mov
dec
cmpsb
sahf
ds
sub
mov
mov
hlt
or
push
inc
lret
jmp
xchg
inc
push
mov
out
inc
pop
pop
add
imulb
add
cmp
aam
pop
or
mov
lea
push
aam
stc
lret
cmpsb
test
pop
out
mov
push
movl
sti
pop
jmp
mov
mov
xchg
add
mov
jle
iret
jb
dec
mov
jae
mov
inc
ljmp
xchg
push
cmp
enter
fadds
ja
inc
and
sbb
andb
push
cwtl
leave
vandps
mov
push
mov
add
js
lods
movl
mov
jne
and
push
outsl
adc
mov
push
insl
add
ja
aam
lds
sub
cmp
lret
add
or
mov
jecxz
movsl
push
add
sbb
inc
fdivl
mov
pop
sub
sbb
movl
cmp
js
jnp
jl
mov
mov
int
sahf
inc
loope
fdivl
and
jl
es
daa
mov
jmp
lods
imul
lcall
sbb
xchg
lods
or
or
sti
xor
mov
movb
push
movsl
popf
outsl
jne
ds
dec
dec
fists
loope
sbb
hlt
mov
sub
sub
mov
pusha
ja
das
dec
sbb
lods
and
aam
adc
jge
dec
inc
pop
or
cmp
aas
pop
dec
dec
inc
jbe
in
lret
pop
mov
inc
fisttpl
mov
mov
cmp
add
mov
outsl
pop
imul
jp
popf
insl
mov
adc
lretw
sub
or
cmp
push
stos
ja
mov
iret
sub
xor
aam
mov
mov
or
mov
pop
mov
pop
xor
negb
movb
adc
stos
adc
lret
lret
xor
shll
popf
adc
imul
xchg
mov
into
mov
mov
lods
int
sub
lret
mov
dec
jo
push
div
cmp
or
push
mov
gs
mov
cmp
nop
lahf
aaa
andb
sahf
lret
std
loopne
add
aas
out
jnp
dec
jle
mov
out
jp
shlb
xchg
js
mov
add
mov
add
sub
repz
imul
pop
dec
jne
stos
test
cmpsl
ljmp
dec
or
xchg
xor
xchg
mov
adcb
mov
in
daa
rcll
popf
shl
ljmp
lea
cli
mov
ds
lahf
scas
add
andl
or
adc
mov
es
push
out
jmp
xor
mov
dec
idivl
xchg
xor
cli
lods
dec
movsb
xchg
lret
mov
xchg
xlat
gs
pop
add
ret
mov
ds
jae
sbb
jnp
cmp
or
xor
mov
cmp
push
out
es
cmp
xlat
xchg
int3
jne
fidivs
into
test
insb
lcall
jno
int
or
xchg
mov
outsb
aas
lahf
aas
cli
clc
in
in
loopne
mov
mov
add
fistpl
in
stos
inc
ret
xchg
pop
movsl
outsb
shlb
add
push
add
neg
icebp
pop
xorb
pop
movsb
pop
inc
cmp
adc
je
je
in
adc
sbb
cmp
movsl
mov
mov
ds
loopne
add
sahf
popf
hlt
mov
cld
scas
pop
loop
loope
pusha
in
jmp
fidivl
out
das
in
sub
stc
cmp
bnd
fcmovbe
icebp
std
xchg
scas
enter
repnz
pop
dec
shll
mov
stos
fwait
sbb
std
scas
sub
jle
js
cmp
gs
xchg
stos
xchg
mov
shlb
mov
dec
movsb
sbb
nop
adcb
fwait
xchg
sbb
ds
push
fimull
stc
mov
pop
cltd
mov
in
adc
int3
push
outsb
sbb
cmp
in
mov
add
pop
nop
jo
hlt
add
std
into
gs
cwtl
push
sbb
push
outsl
fwait
pop
and
popf
cmp
cltd
movsb
test
stos
out
cmp
stos
ret
push
and
int3
push
mov
jecxz
sbb
fnstsw
clc
dec
xlat
push
insl
fsubrp
into
dec
jp
frndint
pop
sub
mov
sub
xchg
adc
nop
xchg
shl
call
sub
or
pop
mov
jb
aaa
pop
sbb
add
cmp
nop
jle
and
mov
rolb
lock
in
lret
int3
in
mov
outsl
inc
iret
cmp
cmp
sbb
jnp
adc
or
inc
adc
test
sbb
shll
pop
sbb
sahf
outsl
imul
imul
lock
out
lods
inc
shrl
rcrl
test
cld
mov
or
inc
dec
dec
jp
imul
in
push
pusha
pop
or
mov
gs
dec
xchg
push
or
and
add
imul
fimull
imul
add
xlat
in
xchg
out
sbb
and
xorb
in
outsb
push
ret
push
jge
test
mov
mov
je
xchg
hlt
fmuls
rorb
into
addr16
push
dec
mov
pop
dec
sub
cmp
aas
dec
cltd
test
std
lcall
jns
sub
inc
jno
ljmp
in
add
xchg
pop
cmpsb
xchg
mov
pop
nop
gs
fcmove
dec
popa
mov
dec
test
scas
pop
ljmp
inc
xchg
aaa
lds
lds
lcall
enter
xchg
or
ror
lds
mov
jbe
xchg
mov
in
sbb
cmp
gs
mov
push
push
xchg
popl
push
mov
mov
fsubr
add
idivb
fildl
out
stos
lods
pop
mov
or
fdivs
lret
xor
popa
xor
mov
jp
pop
and
pop
push
sub
std
imul
xchg
cltd
add
cmp
push
shll
adc
jmp
mov
aaa
sbb
fs
jge
push
out
bound
push
das
xchg
xor
jle
aam
inc
in
xchg
inc
mov
push
dec
push
loope
push
pop
std
xor
es
push
hlt
mov
stc
push
cmp
and
popa
mov
inc
flds
aad
lods
or
fwait
mov
ds
mov
adc
jb
sbb
orl
lock
jb
gs
or
icebp
mov
pusha
pop
mov
cmc
sub
cmp
xor
iret
data16
add
test
jnp
jnp
fdivl
clc
jo
jmp
pop
jo
les
out
cmp
test
jmp
cmp
daa
pop
mov
subl
nop
stc
adc
xor
movsb
jmp
enter
and
movsb
fstl
xchg
das
push
scas
sbb
shl
js
xchg
test
filds
es
shll
cmp
push
test
cmp
lods
mov
je
sbb
jne
sahf
dec
ret
push
adc
xor
out
out
push
inc
push
cs
loop
jg
cmp
and
push
sbb
mov
add
shrb
inc
add
inc
xchg
gs
dec
add
xchg
cmp
and
jp
sbb
add
fdivrl
shrl
fstl
ficoms
in
addb
dec
notl
fs
ficompl
push
mov
je
dec
out
mov
loop
data16
mov
test
pop
cli
loopne
ficoms
ret
mov
les
adc
push
jno
push
sbb
outsb
or
fadds
push
dec
mov
mov
mov
outsl
fdivs
mov
mov
fisubrs
adc
inc
cli
cmp
sub
sbb
or
adc
or
movsb
imul
or
aaa
push
lock
aas
jmp
mov
lods
dec
aad
sahf
pop
xchg
cmp
cltd
ficompl
outsl
fistpll
jno
cmp
fdivr
into
sub
pop
mov
lock
push
xchg
std
int3
ljmp
in
mov
mov
cmp
stc
cli
pop
inc
stos
je
jne
jg
xor
add
or
imul
inc
out
push
ljmp
xchg
sub
enter
lret
jnp
cmp
ds
jle
pop
dec
mov
cmpb
mov
fdivrs
push
pop
jae
out
and
loopne
into
out
into
adc
lods
pop
in
mov
test
mov
out
sbb
xor
fcoms
outsb
push
adc
lret
mov
dec
inc
movsb
or
and
xchg
xor
adc
mov
jp
stos
shll
mov
adc
lcall
sub
push
pushf
add
out
outsb
jne
add
push
pusha
fadd
and
inc
or
inc
xchg
or
stc
cmp
push
lahf
data16
xor
movsl
or
push
in
in
outsb
jle
or
and
test
iret
xchg
lods
xchg
into
sbb
sbbb
pop
mov
pop
cmp
leave
pop
sub
and
push
addr16
pop
sbb
cmc
and
cmc
mov
sbb
sbb
les
dec
pop
xchg
ficoms
cmp
fcmovu
cwtl
cmp
stos
movsl
pop
fnsave
cmp
stos
pop
sub
inc
aad
rcll
pop
mov
mov
bnd
add
mov
lods
movsl
gs
stc
sub
fnstcw
lock
push
hlt
sahf
int
push
mov
addr16
pop
ljmp
dec
push
cmp
std
sbb
xor
or
lret
and
cli
sti
rcl
mov
mov
xchg
into
fmuls
stos
pop
mov
cs
xor
xor
lock
pop
jne
mov
loopne
pop
js
gs
cmp
cmp
mov
test
lods
dec
xor
inc
jmp
or
fisttps
cld
aas
adc
mov
add
push
cltd
jecxz
inc
dec
xor
call
pusha
adc
xchg
add
jbe
loopne
int
or
pushl
repz
pop
cld
add
and
push
inc
int
pop
push
push
fdivrl
xchg
out
mov
movl
mov
sub
and
repnz
je
test
aaa
mov
notb
ja
ss
ficoms
add
sbb
pop
popf
mov
mov
mov
pop
mov
insb
pop
mov
data16
into
add
sub
cltd
insl
js
and
stos
repnz
ret
mov
sub
jle
dec
cmp
pop
add
sarb
cli
cmp
dec
cmpsl
mov
jp
dec
adc
iret
dec
inc
shlb
jnp
mov
xchg
mov
icebp
pop
add
lea
mov
pop
dec
jno
adc
mov
pop
cmp
leave
mov
ljmp
popf
mov
inc
lret
popf
popf
add
stos
sbb
cmpsb
aas
mov
ret
test
movsb
mov
addl
imull
imul
dec
sub
fs
jle
out
dec
ror
sbb
and
and
push
fld
ret
stos
cmp
int
fnstsw
or
mov
or
jmp
xor
mov
add
add
pushf
jle
xchg
ds
jae
call
pop
ljmp
je
mov
es
and
cld
test
sbbl
xor
jle
adc
es
inc
pop
sub
lahf
and
clc
enter
fcompl
or
cltd
pop
xchg
inc
ljmp
stc
dec
es
cmp
gs
sub
movsl
or
pop
in
xorb
xor
jecxz
shrb
test
lods
outsb
jnp
cld
xor
sahf
push
icebp
mov
and
loopne
push
mov
mov
xor
in
sbbb
es
shlb
pop
sbb
bound
lods
push
fcom
mov
cmp
lcall
xchg
test
xchg
and
mov
pop
clc
and
and
mov
mov
test
imul
sub
jnp
fnsave
iret
push
jno
mov
and
mov
mov
outsl
add
xor
xlat
aas
jmp
clc
mov
sub
add
sbb
pop
dec
xchg
repnz
adc
jecxz
jbe
or
mov
mov
pusha
ljmp
inc
fldenv
test
push
es
cmp
std
adc
sbb
lea
popa
lock
jb
sub
inc
mov
pop
push
ret
mov
mov
aad
mov
iret
xchg
and
jno
inc
dec
fdivrl
xchg
add
lahf
addb
or
mov
sahf
scas
mov
mov
jne
bound
push
subb
addr16
xor
into
into
dec
mov
pop
xchg
leave
stos
mov
jge
push
cmp
inc
jne
in
pop
push
rclb
repnz
sub
shrl
adc
aaa
xchg
out
bound
cmp
in
mov
jne
loopne
xchg
cli
out
dec
push
imul
lahf
jmp
add
fidivrs
xchg
cli
and
outsb
jnp
iret
sbb
lods
lret
test
mov
aaa
fistpl
movsb
ljmp
pop
cmpsb
sub
jmp
data16
movsb
jecxz
add
xchg
xor
xor
mov
dec
xchg
add
add
cmp
cmpsl
aad
xor
stc
shrb
jns
jbe
xor
aad
add
inc
mov
fildl
sbb
xchg
jae
cmp
adc
push
sbb
sahf
xchg
out
stc
outsl
out
or
jo
enter
sub
jae
and
cmp
pop
nop
addr16
and
cmp
fwait
and
fisubrl
push
stc
adc
in
and
mov
inc
mov
sti
jge
pushf
js
insl
ficompl
loopne
insb
cmp
out
xor
xchg
dec
push
add
push
mov
std
arpl
sahf
xor
mov
mov
pop
cltd
lock
lcall
lea
movsl
lea
orb
mov
jne
pop
stos
loop
cmp
xchg
test
add
cmp
lret
ja
sub
sbb
int3
xchg
icebp
testl
outsl
or
pop
jle
fstpt
xor
dec
xor
fimull
and
in
jle
fidivrs
ret
ja
cmc
ficoms
pop
or
into
mov
cmp
cltd
arpl
cmp
xchg
icebp
inc
std
aad
stos
cs
xor
sub
out
jns
xlat
add
ret
push
ret
cmpsb
lock
mov
add
xor
cmc
sar
sub
repz
aam
push
in
jne
cs
mov
inc
sub
cmp
stc
jae
add
pop
pop
cli
mov
insb
and
imul
stos
pop
sbb
aaa
or
pop
cwtl
sbb
data16
stos
outsl
dec
xchg
jno
and
push
ret
adc
xor
cmp
outsb
mov
loopw
mov
insl
imul
lret
push
xlat
xor
mulb
dec
mov
adc
cwtl
pop
mov
outsl
adcl
aaa
fidivl
xchg
pop
xor
push
mov
pop
xchg
or
jmp
add
add
gs
push
popf
lahf
fstp
popf
pop
scas
pop
mov
pop
inc
pop
addl
push
in
inc
scas
cmpb
ds
iret
movsl
jle
push
test
bound
iret
cmp
in
xchg
divl
push
push
mov
fsubs
cmp
andb
jmp
icebp
out
aaa
insb
or
and
mov
mov
scas
jne
jl
loop
cmc
jp
pop
push
rcll
fwait
sub
enter
add
aad
xor
adc
lret
cmp
jae
jmp
ret
int
hlt
and
stc
xor
in
rorb
aas
sbb
movsb
sbb
or
shlb
push
clc
jnp
bound
icebp
iret
cmp
xlat
into
xor
push
insb
idivb
jb
jae
mov
or
push
xchg
in
dec
mov
sbb
outsl
loope
and
mov
mov
cmp
and
pop
mov
popf
shlb
jb
scas
das
daa
push
mov
push
pop
pushf
lret
xchg
and
push
in
xor
inc
sub
movsb
imul
lcall
stos
push
aaa
icebp
inc
testb
or
in
jge
in
cmp
lods
test
add
jecxz
ds
mov
fdivrp
jno
xchg
inc
into
aad
sub
cmp
or
roll
pop
or
cmp
repz
jmp
test
sti
add
fcomps
and
xchg
pop
shll
fmul
dec
or
js
and
dec
cs
loop
sti
and
mov
rcr
mov
popa
enter
rorl
cltd
sub
push
mov
xor
mov
arpl
scas
loopne
mov
pop
cmc
sub
test
inc
adc
ret
mov
adc
cs
xchg
sbb
mov
add
idivl
xchg
nopl
ds
sub
push
push
xor
push
mov
mov
mov
negl
xchg
movsl
push
decl
mov
mov
xlat
or
pusha
adc
jnp
insl
mov
gs
jb
aam
push
movsl
adc
rcrl
lea
jmp
jb
addr16
jmp
ret
mov
lock
mov
shlb
mov
dec
loope
adc
and
cmpsl
push
jae
into
repnz
icebp
and
es
dec
push
jmp
mov
pop
into
push
mov
inc
scas
mov
dec
jno
sbb
lods
clc
movsl
dec
data16
push
adc
in
pop
cmp
fwait
and
out
jmp
add
inc
js
scas
inc
adc
mov
clc
adc
ficoms
cmp
or
sbb
sti
movsl
leave
js
stos
mov
movsb
pop
mov
fwait
pop
arpl
and
insb
test
xor
jb
mov
fcmovne
mov
cmc
adc
push
clc
mov
mov
nop
pop
repz
shlb
lods
add
movsb
stos
adc
pop
ficomps
inc
adcl
mov
iret
pop
lcall
adc
les
dec
out
js
cs
pop
clc
fimull
mov
mov
mov
clc
shll
jge
inc
add
dec
icebp
mov
xchg
xorl
ss
out
inc
jns
inc
aam
and
loopew
data16
ljmp
xchg
int
test
jmp
and
mov
sub
jns
push
dec
fwait
lods
mov
cmp
or
lods
jg
stc
sahf
push
std
insl
adc
push
pop
sbb
pop
sub
adc
xor
jge
stos
jo
cmp
arpl
jmp
jae
cld
bound
add
mov
fiadds
inc
shlb
gs
sbb
repnz
nop
cmp
mov
fxch
adc
ja
nop
inc
leave
insb
ds
push
stc
mov
jnp
push
aas
cmp
mov
cmc
nop
xor
addl
ss
cs
sub
imul
lret
push
push
stc
push
iret
lock
adc
or
mov
test
xchg
push
loope
mov
dec
aaa
lods
sarb
jb
dec
dec
repz
inc
mov
cmp
pop
sbb
cld
and
mov
ret
jo
rclb
call
push
data16
popl
dec
xor
lahf
dec
outsl
cmp
sbb
adc
fldenv
fisubrl
nop
or
push
int3
int3
cmp
ret
fistpll
pop
add
xor
adc
dec
ret
cmc
clc
lret
ja
push
xchg
pop
inc
clc
mov
mov
iret
iret
pop
add
sahf
enter
out
insb
insl
jb
clc
icebp
ljmp
fwait
xchg
lcall
inc
faddp
xlat
mov
movsb
sti
sarl
test
and
iret
xor
incb
dec
leave
repz
imul
roll
out
xor
sub
sbb
xor
ljmp
fsts
mov
mov
popa
push
cmp
mov
add
shlb
lock
xor
aaa
dec
pop
mov
outsl
dec
xchg
pop
repnz
push
add
jne
clc
fcomps
aas
adc
inc
sbb
clc
cmp
cwtl
pop
xchg
lea
xor
scas
std
xor
inc
cmp
shrb
ficomps
jg
sbb
lods
sbb
aaa
cld
repz
or
sbb
aaa
int
mov
mov
movsl
cs
das
jb
das
mov
gs
or
fnstenv
js
pushfw
mov
jo
push
add
sub
dec
inc
push
pop
mov
xlat
dec
pop
mov
aam
cli
or
xorb
idivb
lock
adc
dec
xchg
shlb
cmp
jo
mov
hlt
cwtl
outsl
mov
sbb
je
stos
or
nop
nop
cmp
sub
adc
cmp
sub
jp
sahf
mov
cmp
xchg
cmp
inc
push
pusha
pop
int
in
inc
ret
xchg
popf
sti
xchg
lods
ljmp
jmp
fdivr
push
cmp
or
adc
aad
jg
lcall
xor
int3
adc
ss
pop
daa
aaa
jno
pop
aaa
aad
add
fdivrl
inc
xchg
pop
mov
mov
mov
dec
xchg
shl
or
pushf
orb
adc
inc
pusha
lds
pop
imul
jmp
test
in
rolb
out
in
and
adc
outsb
or
out
test
push
sub
inc
repz
mov
mov
je
push
aad
jecxz
jmp
aad
sti
jb
cmp
adc
jl
or
or
shrb
mov
or
repz
add
out
lds
js
rorb
out
lods
stc
sub
out
outsb
push
push
xchg
adc
cmp
push
jnp
mov
jnp
lret
jg
fnstsw
mov
xchg
inc
jmp
or
lods
rorb
xchg
jecxz
insb
mov
cmpsl
sub
in
xor
push
and
add
cmp
fcoml
sub
enter
xchg
rolb
repz
ficoml
push
mov
mov
cmp
inc
adcb
dec
adc
push
cli
push
stc
cs
jmp
iret
xchg
fbld
mov
sbb
jmp
insb
pop
out
js
pop
addl
rolb
or
ret
mov
lcall
int
iret
insb
scas
inc
cmp
cli
lds
outsl
fisubrs
iret
sbb
data16
push
cltd
sub
inc
cld
fnsave
lcall
ljmp
xor
inc
pop
ret
ret
mov
mov
xchg
cmpsl
jp
ja
dec
sbb
sbb
or
cmp
cmp
push
cmpsl
clc
adc
cmc
adc
and
hlt
inc
push
movsb
adc
adcb
fs
add
push
dec
adcb
mov
loopne
push
cmp
pop
pop
enter
loopew
iret
mov
ret
dec
enter
lock
inc
rcrl
jge
add
icebp
js
rcll
sahf
fcoms
mov
out
clc
cs
sub
mov
cmp
mov
ss
pushf
jbe
ja
inc
xchg
sbb
dec
stc
mov
aam
aam
pop
inc
push
jo
mov
icebp
out
fiaddl
addr16
adc
xor
push
or
mov
inc
inc
cld
aaa
add
rorl
xchg
sub
sbb
jo
push
fs
hlt
rclb
mov
cld
ret
test
shrl
cmp
inc
test
cmp
insb
and
enter
pop
push
jle
mov
pop
add
pop
jne
mov
xor
leave
shrl
and
mov
ss
sub
aad
divb
fildll
dec
std
mov
mov
ret
fisubl
iret
insb
into
popa
mov
pop
mov
roll
pushl
loope
test
jp
inc
add
jp
push
adc
mov
mov
or
xor
aaa
pop
aaa
mov
sahf
mov
rcll
repz
repz
xchg
jmp
jmp
mov
insl
push
xchg
mov
push
lret
jnp
push
aad
push
cmp
sbb
sbb
call
xlat
sbb
xor
leave
jb
test
loope
cmp
dec
inc
cmpsb
sbb
cmpsb
ljmp
lret
enter
push
lods
push
xchg
dec
in
mov
cmc
fists
push
dec
les
inc
dec
fcmovb
movsl
in
mov
pusha
mov
movsb
iret
push
ret
cmp
std
stos
lahf
dec
cmp
pop
mov
outsb
dec
ret
sbb
jns
mov
or
adc
daa
xchg
aaa
inc
push
iret
mov
imul
test
orl
int
xlat
out
and
pop
out
adc
xor
out
mov
pop
jecxz
dec
mov
jno
xchg
stos
jecxz
mov
xchg
shlb
sub
int
cmp
jae
aaa
xlat
mov
lods
pop
mov
sub
pusha
jp
daa
lret
orb
jne
cmp
inc
popfw
repz
icebp
pushf
xchg
lods
sub
es
das
xor
push
sbb
xchg
mov
inc
push
adc
mov
mov
loope
xor
and
movsb
sub
pop
mov
mov
mov
push
bound
pop
iret
cmp
push
sub
insb
insl
int
cmpsl
into
clc
xchg
dec
es
addr16
dec
ja
sti
into
jmp
inc
jmp
pop
int3
int3
and
test
jne
data16
or
and
pop
xor
add
push
jl
aaa
sub
mov
stos
icebp
bound
pop
imul
jecxz
shll
and
call
mov
fwait
rcr
out
dec
pop
jl
or
and
sbb
outsb
cmpsl
add
movsb
jl
sahf
sub
into
push
inc
xchg
sahf
jge
fwait
mov
inc
es
cld
sub
sti
int3
inc
jle
sub
aam
inc
ljmp
inc
je
inc
repnz
ljmp
sbb
dec
xor
mov
je
arpl
fldenv
mov
dec
or
shrb
xor
lds
fbstp
mov
inc
sbb
in
inc
push
sub
xlat
add
or
es
sub
hlt
push
cwtl
jp
test
push
adc
std
adc
orb
or
or
mov
mov
push
movsl
pushf
aas
call
mov
xchg
mov
mov
push
shlb
jg
icebp
mov
jg
shufps
push
jmp
fidivl
lea
push
loop
dec
sub
das
dec
hlt
pop
fstl
pop
sbb
mov
push
xchg
in
pop
fdivrl
dec
pop
sbb
cwtl
inc
mov
fucomi
xlat
mov
pushf
adc
mov
dec
inc
cmpsl
jnp
out
sbb
add
or
adc
mov
stos
jnp
sbb
mov
test
jl
scas
fcmovb
xchg
scas
mov
popa
incb
test
pop
fildll
lcall
jbe
aas
inc
js
xlat
and
xchg
loope
inc
pop
cmpsb
sub
shld
add
stc
scas
xchg
cli
hlt
loopne
xor
movsl
jne
test
or
lcall
in
xchg
fadds
lock
sti
xor
mov
test
pop
filds
xchg
jg
mov
push
jecxz
aas
push
jnp
mov
ror
inc
test
lret
or
aad
lahf
int3
sub
xchg
stos
pop
repnz
pushf
adc
and
sub
aas
adc
sbb
fs
mov
sub
ret
cmp
call
cmpsl
es
sbb
int
or
popw
pop
mov
scas
ss
xor
jne
outsl
fnsave
iret
nop
pop
cmp
sar
or
pop
cmp
sbb
mov
jmp
sub
clc
dec
xor
jg
add
in
das
xor
xor
mov
lret
mov
jl
ret
inc
mov
xor
cli
adc
sub
xor
adc
pop
jecxz
inc
sbb
movsl
cmp
arpl
push
in
inc
stos
pusha
fcoms
aaa
xchg
cmp
sbb
pusha
sahf
mov
int3
stos
xchg
cmp
mov
test
test
je
movsl
and
sub
mov
lret
mov
std
shll
inc
mov
sarl
pop
addb
lahf
xchg
cmp
fadds
mov
scas
loope,pt
mov
pop
fcoms
mov
cltd
test
dec
loop
decl
jp
xchg
stos
cmp
out
sub
gs
push
aad
pop
push
arpl
push
adc
push
push
sbb
jne
mov
gs
adc
sub
cmp
cwtl
push
or
ds
sahf
inc
sub
and
mov
adc
rcrb
mov
iret
lods
and
insb
xchg
aas
js
xor
jecxz
loopne
xchg
xor
or
fildll
mov
sub
stos
loopne
add
push
push
push
push
test
jge
jp
or
rorb
jg
sub
aam
das
outsb
lds
sahf
mov
mov
xchg
mov
dec
cmpsb
sub
lods
pop
mov
sbb
mov
in
pop
mov
test
xor
cld
jg
clc
imul
jo
iret
test
jne
inc
cld
mov
jbe
jno
test
xlat
mov
jb
adc
testb
adc
cltd
and
pop
aas
dec
arpl
jo
cld
sub
sbb
movntq
out
adc
xor
dec
out
xchg
or
leave
das
mov
ja
loope
mov
pop
cmp
fwait
ret
test
fcmove
sbbl
mov
out
insb
sbb
mov
mov
rorb
fstl
or
gs
aaa
sbb
mov
mov
jmp
scas
push
test
cmpsb
mov
bound
movsl
popf
inc
repz
dec
movsb
arpl
aad
sub
pusha
jl
subps
lahf
call
pop
nop
pop
lea
in
mov
mov
mov
xor
add
xor
add
add
mov
test
iret
jo
ljmp
add
cmp
sbb
maskmovq
imull
jae
mov
fwait
add
mov
iret
test
sbb
jae
dec
push
mov
rcll
jmp
sub
mov
cmc
dec
scas
pop
jp
dec
aad
es
dec
nop
dec
cmp
je
xor
dec
add
xchg
ss
rolb
cwtl
leave
dec
fdivs
es
dec
cmp
xchg
test
lcall
xor
xchg
xchg
shll
dec
lcall
pop
arpl
xchg
shll
sub
cmpsb
sub
subb
addb
mov
mov
rorl
pop
sbb
pop
xchg
mov
fsubl
ret
pop
cmp
iret
jae
in
adc
lahf
lds
xor
jne
insb
xchg
push
sbb
mov
dec
icebp
mov
and
pop
mov
imul
push
shl
xor
divb
add
jo
or
sub
scas
or
arpl
stc
lods
leave
mov
lods
cmp
das
scas
mov
sarb
add
scas
inc
jl
mov
les
and
mov
pop
add
and
sub
ss
outsl
push
lahf
sub
addr16
push
sbb
sub
push
pop
orb
pusha
cmp
mov
outsl
daa
int3
cld
inc
gs
inc
sbb
pop
adcb
jno
or
iret
or
adc
pushf
imul
aas
push
xchg
pop
test
mov
xor
fwait
xchg
lock
scas
mov
mov
sbb
push
jg
loop
fsts
jmp
xor
rcrb
outsl
mov
xchg
bound
or
scas
push
stos
inc
mov
iret
push
and
adc
dec
xor
jge
lods
aas
das
or
jns
js
adc
xor
cmp
lea
clc
sbb
xor
vmread
push
mov
push
dec
cmp
jmp
mov
xchg
mov
xchg
mov
fldenv
js
test
mov
data16
cmp
lea
sub
andb
inc
cltd
insl
aad
xor
xchg
mov
pop
scas
adc
and
in
aas
cmp
jle
fisubs
mov
mov
and
push
sub
sbb
jb
pop
or
mov
repz
dec
icebp
jae
ljmp
xchg
push
outsl
sahf
arpl
push
ja
mov
in
es
lret
xor
pusha
inc
push
mov
dec
bound
enter
stc
popf
pop
add
add
adc
add
in
cwtl
lods
bound
fwait
or
ret
ja
adc
jae
ret
jg
into
inc
jg
ret
xchg
je
add
repz
mov
xchg
dec
xchg
mov
pop
jecxz
ja
push
imul
or
sbb
jno
adc
in
xchg
lods
jae
push
movsb
mov
idiv
jae
movsl
mov
loope
xor
push
jl
lahf
xchg
jmp
cmpsl
int3
ret
or
shlb
sub
xchg
mov
imul
cmpb
or
push
in
push
sbb
jecxz
enter
inc
mov
push
mov
nop
mov
cmp
xchg
xor
dec
lret
out
jle
in
lcall
jecxz
mov
les
push
add
add
cmpsb
fidivl
mov
jl
daa
inc
mov
xchg
nop
jle
mov
inc
mov
inc
xchg
out
rorb
jle
fs
insb
xchg
lock
xor
dec
fldcw
inc
inc
or
adc
loopne
dec
test
and
insl
cli
int3
aaa
pushf
jo
jae
js
cli
imul
pushf
fnstenv
add
pop
pop
xchg
mov
jmp
adc
dec
or
xor
push
push
jge
add
lret
lea
pop
xor
sbb
in
push
cld
or
std
adc
sbb
xchg
jne
cmp
int3
lods
rclb
pop
sub
dec
jns
xlat
mov
sub
rcrb
mov
ja
or
loope
jno
adc
stc
push
neg
int
adc
adc
enter
adc
repnz
jg
pop
lea
adc
imul
stc
mov
push
sub
lret
negl
test
hlt
lods
cmp
xchg
jnp
stos
dec
add
mov
cmc
cmpsl
xchg
fdivrs
cmpsl
std
inc
stc
jmp
cltd
lock
popf
test
arpl
cmp
aam
fldt
jge
nop
dec
push
mov
bound
insb
mov
pop
mov
pop
xor
shl
je
inc
inc
mov
mov
pop
jbe
bnd
imul
xlat
je
push
xchg
pop
test
sarl
lea
fs
adc
mov
push
sub
es
cmp
mov
cmp
dec
rorl
cmpsl
pop
fistpl
in
mov
inc
fwait
mov
jnp
xchg
dec
xor
cld
pop
aaa
push
fnstenv
push
outsl
jns
hlt
loope
fmuls
mov
in
shrb
jb
imul
jae
imul
test
inc
add
sahf
xchg
mov
pop
or
insb
mov
sub
dec
lock
mov
add
push
popa
push
pop
lods
fnstenv
mov
sub
sbb
xor
push
lret
mov
mov
bound
inc
into
fdivrs
xor
in
jae
es
mov
mov
sti
dec
mov
push
cmovb
sarl
push
adc
test
push
mov
add
imul
out
icebp
xchg
mov
popf
sub
in
arpl
jo
cmp
jle
outsl
lret
fisttps
lods
loopne
or
mov
adc
movsl
fisubrs
cli
pop
js
xchg
pop
pop
in
and
lods
enter
call
add
xor
xlat
and
pop
int
jp
dec
dec
and
mov
lods
inc
icebp
sub
jmp
in
xor
repnz
faddl
pop
das
pop
stos
popf
xchg
push
push
xchg
push
into
jne
cmc
or
ja
aad
push
orb
ljmp
ljmp
jecxz
movsb
fwait
sti
inc
imul
dec
and
gs
inc
dec
push
pop
jmp
jle
arpl
and
mov
ss
sbb
rcrb
mov
or
sub
fnsave
enter
cmova
sub
mov
add
sahf
sbb
dec
sub
adc
and
dec
fldenv
pop
push
xchg
inc
cs
fwait
repnz
cmp
xor
or
mov
cmc
rorb
pushf
xor
xchg
or
pop
in
addr16
xchg
sub
jge
fs
dec
cli
outsl
and
or
xchg
cltd
test
dec
sbb
std
int
aaa
in
sbb
add
popf
cmc
push
jmp
je
mov
or
repnz
dec
fbld
fisttps
or
mov
adc
mov
and
insb
loop
mov
or
icebp
jmp
in
dec
cli
aas
sbb
cli
inc
out
add
push
mov
mov
ja
and
jmp
sbb
lcall
lcall
xchg
mov
popf
loop
movsb
add
pop
fs
pop
iret
inc
add
negb
sub
sub
sub
out
xchg
lods
cmpsb
push
dec
test
mull
inc
adc
ja
add
add
loop
xor
mov
out
push
jo
adc
pop
fcomps
xchg
cmpsl
dec
daa
cmp
lcall
addr16
mov
out
jns
adc
ret
fmull
fdivr
jb
insl
addr16
cli
cwtl
push
dec
stos
das
outsb
sub
rcrl
bound
mov
fnstenv
xor
adc
xorl
add
adc
xor
or
fwait
mov
fwait
fs
sbb
xchg
js
cwtl
or
xchg
pusha
jno
push
fidivl
inc
xor
push
repnz
in
and
xlat
xchg
dec
popf
mov
sbb
lahf
cmpl
outsl
jp
sarb
scas
decb
fwait
add
movl
jbe
adc
mov
sub
mov
add
inc
imull
add
mov
pop
test
cmpsl
jmp
xor
sub
rorb
or
jno
sub
test
ja
adc
lret
cmpsl
mov
jb
addb
int
mov
mov
mov
add
insl
mov
daa
sbb
push
xchg
aas
dec
jmp
cmp
mov
je
clc
jl
in
mov
and
dec
jecxz
repnz
add
adc
sub
xchg
pop
xchg
jle
scas
into
test
cmp
mov
or
scas
pop
pop
fcos
imul
inc
push
insb
inc
sbb
sahf
dec
adc
popf
mov
int3
mov
lret
dec
clc
push
adc
xor
sbb
cmpsl
mov
add
les
xor
xor
cmpb
add
mov
scas
inc
push
test
mov
jp
sbb
les
push
dec
sahf
jne
xchg
movsb
xor
lea
adc
mov
add
xchg
jnp
jbe
push
cmpsl
shr
add
mov
dec
xchg
xchg
iret
fcmovne
lea
jl
xchg
shrb
push
or
inc
push
dec
xchg
mov
adc
add
pop
xor
je
jo
mov
pop
push
cmp
adc
pusha
pop
out
cmp
sub
pop
jmp
cmp
xchg
repz
add
mov
and
xor
out
cmpsb
jae
mov
bound
sahf
and
sub
loope
sub
iret
sbb
add
jno
lret
loope
out
cs
mov
xchg
int
test
das
pusha
addr16
lods
ror
movb
imul
xchg
mov
dec
xchg
sbb
repnz
ja
lock
stos
data16
out
push
hlt
add
adc
scas
push
push
push
cld
orb
mov
test
pusha
je
mov
pushf
sbb
popa
dec
adc
pop
cmpsb
and
out
cmp
mov
arpl
call
fidivrs
push
dec
pop
pop
xor
mov
adc
roll
insl
inc
add
mov
iret
in
inc
and
push
pop
adc
cmp
lea
cmc
lock
sbb
add
in
mov
loop
outsb
push
cvtps2pi
sub
fstpt
or
and
or
subb
stos
pmaxsw
stc
lret
sub
xor
rolb
push
stc
pop
test
sbb
mov
or
inc
addr16
insl
popa
iret
ret
cmp
fcmovnb
inc
mov
pop
push
loopne
fsubr
xor
or
dec
add
imull
xchg
mov
leave
push
pop
gs
scas
mov
push
fwait
aam
in
mov
add
ljmp
sbb
jnp
loope
popf
dec
jb
mov
inc
bnd
and
xchg
push
imul
in
pop
mov
push
push
mulb
rorl
adc
std
lock
push
out
push
test
push
push
mov
xor
loope
addr16
sub
push
and
push
imul
lret
mov
cmp
jecxz
mov
dec
iret
stos
das
pop
in
push
inc
pushf
loopne
nop
jae
add
push
fsubrl
ret
int
shrl
cltd
mov
push
pop
out
adc
mov
pop
and
loopne
xchg
mov
movsb
sbb
test
adc
mov
inc
les
out
xlat
clc
adc
push
lea
dec
push
fcmovu
in
fnstsw
push
adc
pop
pop
fimuls
add
pop
push
and
mov
inc
xor
jae
test
out
and
cmp
es
ja
adc
imul
in
outsb
mulb
mov
jns
ss
cmpsl
push
das
ret
sub
pop
mov
inc
sub
test
push
cmpsl
cmp
fwait
pop
mov
mov
movsl
aaa
fnstenv
imul
or
pop
mov
xchg
mov
sbb
inc
fwait
push
int3
aam
incl
lods
ss
sbb
jbe
dec
and
fwait
dec
cmp
xlat
subb
pop
pop
jae
out
sbb
cltd
cmpsl
dec
fsubrl
pop
repz
lds
xor
cmp
fxch
stos
push
pop
push
pop
cld
les
cmc
das
les
ljmp
cmpsb
pushf
inc
das
bound
mov
or
xchg
sbb
lds
jp
into
mov
shlb
jnp
outsl
icebp
xor
xchg
pusha
stc
rep
mov
in
loope
inc
rorb
push
jecxz
sbb
push
sbb
icebp
cld
inc
popa
mov
mov
ja
adc
bound
test
xor
es
test
sti
fsubrl
cli
fbld
add
ljmp
xchg
pushl
outsb
js
sub
mov
popl
pop
imul
vdivps
push
shll
adc
ficoms
leave
fsubr
cltd
and
gs
andl
lods
fisttpll
cltd
jbe
nop
in
enter
jp
int
cmpb
inc
pop
scas
pop
add
lret
pop
daa
pop
push
sub
cmp
inc
jecxz
inc
push
lea
loop
shll
rcrb
das
mov
sbb
test
pop
add
push
pop
lcall
in
dec
fcoms
sbb
sub
add
dec
cmp
fwait
add
inc
stos
and
cli
loope
shr
gs
ds
inc
movsb
pop
mov
outsb
mov
sbb
cmp
pop
int
cmp
xor
lds
jg
popf
xchg
mov
adc
xchg
or
mov
pop
adc
inc
es
ss
shl
aad
stos
cmc
mov
pop
cmc
je
sub
test
pop
sbb
sbb
aas
and
and
jb
jns
and
and
decb
mov
push
xchg
test
mov
push
xchg
sarl
adc
in
pop
sbb
xor
pop
cmp
xor
mov
sbb
cmova
enter
pusha
cmp
dec
dec
test
or
dec
mov
add
mov
cmpsb
xchg
jle
sti
sub
pusha
mov
sbb
pop
or
pop
pop
push
jge
pop
lret
jecxz
mov
jo
inc
enter
out
xchg
mov
xchg
gs
cmp
sub
insl
mov
jo
inc
xor
scas
cli
jl
in
jp
cltd
lock
in
mov
xor
jg
mov
jp
and
mov
lret
mov
mov
xchg
push
dec
enterw
clc
inc
xchg
scas
adc
lock
push
cwtl
int3
sbb
sub
cld
aas
cmc
mov
jp
adc
sahf
ret
lcall
inc
sbb
cmp
inc
mov
mov
mov
bound
push
leave
lret
adc
fildl
ror
mov
in
dec
and
or
das
pusha
rolb
hlt
mov
and
xor
gs
fcmovne
fcmovu
fldl2t
daa
mov
movsl
imul
cmpsl
dec
or
sub
insb
mov
and
xchg
decl
xor
aas
clc
xor
fcompl
xchg
push
mov
xchg
or
shrb
mov
das
add
adc
inc
out
mov
xchg
xorb
pop
frstor
sar
stos
adc
xor
repnz
xlat
push
mov
push
mov
pop
loope
outsl
dec
rorl
repz
cmp
cmp
or
pop
cmpxchg
inc
mov
jo
sbb
rep
pop
pop
push
xchg
mov
adc
cmp
mov
mov
movsb
or
imul
or
cwtl
mov
jns
jo
and
dec
xchg
mov
adc
repnz
add
push
sti
mull
inc
cmp
mov
push
lret
and
cltd
dec
sub
sub
sbb
mov
scas
xchg
jp
testl
xor
push
pop
cmp
push
clc
xchg
mov
imul
scas
loop
cs
daa
fldt
xchg
nop
mov
outsb
add
mov
sub
sub
push
sbb
inc
mov
xlat
loop
xchg
stos
sbb
sbb
lea
adc
or
into
cs
or
xchg
sub
push
lahf
sub
shl
rorl
sbb
jns
ficoml
xchg
loope
les
mov
scas
jo
add
xor
imul
jmp
jb
jo
pusha
daa
inc
jno
push
or
sub
stos
fs
xchg
xchg
sbb
inc
dec
dec
cmp
pop
clc
push
add
popa
push
cmp
inc
fdivl
mov
adc
popa
scas
inc
lods
inc
cwtl
push
push
test
movsl
pop
cmpsb
jle
test
push
mov
pop
adc
push
in
lods
loop
pop
cltd
mov
int3
shrb
pop
mov
or
pop
inc
movsb
mov
pusha
hlt
dec
mov
cwtl
inc
dec
cmp
leave
imul
mov
and
mov
cmp
out
cmpsl
mov
enter
int
ss
inc
stos
push
sbb
inc
inc
xor
pop
pop
jo
ret
push
push
xor
dec
pop
sbb
xorl
adc
sub
cs
vandnpd
outsb
xchg
lret
mov
or
fbld
out
lcall
adc
sbbb
mov
stos
push
sbb
cli
xor
les
imul
xorl
sub
xchg
mov
lahf
andb
mov
pop
push
in
push
xor
pushf
sub
ds
movsl
out
mov
hlt
mov
inc
fstps
fldenv
mov
inc
in
inc
fsts
xchg
mov
xor
insl
sub
cli
pop
lds
outsl
out
mov
jns
bound
gs
mov
mov
pop
outsl
mov
mov
dec
not
jne
sub
jno
jp
pop
mov
mov
pop
mov
cmp
std
and
jge
shll
test
add
xlat
or
ret
jbe
shlb
insb
ljmp
rcll
test
add
test
cmpsl
mov
inc
lods
xchg
xor
loope
lcall
mov
addr16
out
pop
push
lods
je
and
ret
insb
sahf
mov
push
nop
lock
xchg
mov
adc
push
jnp
and
stos
fstpt
xchg
movd
and
fsts
push
push
mov
and
push
dec
add
dec
int
xlat
aas
shl
lods
in
rclb
int3
int3
cmp
inc
pop
xchg
mulb
cmp
mov
cmpsl
cmp
pop
xchg
imul
cmpsl
scas
fistpll
stos
push
pop
fwait
cmpb
fildll
sub
shl
cmp
mov
test
punpckhbw
pop
iret
xor
mov
scas
sub
xchg
stos
insl
push
mov
pop
push
sbb
test
jge
or
cmpsl
xor
inc
pop
xchg
push
inc
mov
and
sbb
jmp
mov
inc
clc
int
icebp
imul
push
or
adc
sbb
add
popf
mov
loop
pop
mov
pushf
dec
mov
or
lods
aam
lods
xor
mov
mov
push
fmul
repz
sarb
movsb
fwait
test
dec
scas
push
ficoml
xor
mov
xchg
add
stos
jne
jne
mov
push
sub
sub
arpl
add
push
pusha
push
mov
mov
sahf
cmp
test
std
fildl
out
push
xchg
rcrl
dec
leave
xchg
lret
js
sbb
mov
pusha
bound
adc
cltd
pop
ja
dec
nop
test
scas
push
je
xchg
scas
ss
jns
lods
pop
xchg
sbb
popa
jge
dec
jle
gs
push
sbb
fwait
push
xchg
negl
add
mov
and
push
push
pop
rcrl
or
xchg
inc
mov
leave
push
mov
jge
xchg
mov
jle
push
sarb
xlat
mov
pop
or
pop
or
or
jp
dec
cltd
push
mov
push
in
rorl
test
jmp
sub
pop
out
fsubl
or
cld
mov
ja
js
popf
sub
out
mov
out
mov
xor
stos
lret
mov
dec
dec
adc
dec
mov
rorb
mov
mov
inc
push
xor
cmc
shrl
mov
cmpsb
or
dec
int3
and
data16
repz
jbe
or
jne
mov
sbb
ret
es
pop
pop
mov
pop
or
negb
dec
loop
insb
fwait
mov
lahf
out
int3
pop
daa
inc
call
scas
sub
iret
sbb
inc
shl
lahf
mov
ret
leave
mov
mov
mov
mov
adc
scas
adc
mov
inc
mov
ret
mov
insb
fnstsw
mov
mov
repnz
out
sbb
mov
lock
movsl
sbb
sub
imul
sti
mov
fdivrs
jo
add
outsb
push
movsb
mov
setno
mov
and
jle
jns
das
xchg
pop
stos
and
inc
adc
mov
lahf
push
adc
mov
jp
pop
push
pusha
cmp
inc
fstp
dec
pop
jg
jb
lock
clc
xor
sbb
and
mov
in
in
push
cmp
cli
sub
out
cmp
loopne
pop
adc
push
shrb
nop
or
jo
scas
mov
pop
mov
movsl
repz
adc
adc
outsb
shll
enter
loopne
pop
cwtl
cs
cltd
shrl
sbb
jns
lret
or
cmp
push
inc
inc
xchg
scas
popf
mov
add
mov
mov
xlat
and
sub
rolb
jmp
ret
imul
loop
push
stos
adc
mov
jns
cmpsl
push
daa
adc
mov
jle
jbe
imul
subl
enter
movsb
stos
lods
cwtl
mov
clc
dec
sbb
cltd
mov
inc
bound
push
xchg
or
mov
dec
movsl
stos
jmp
push
shlb
adc
add
push
pop
inc
cli
push
cli
les
or
js
xchg
lahf
lea
jo
and
mov
lods
sbb
out
outsb
jb
jne
loope
fmul
xor
stos
loope
cmp
nop
push
repnz
dec
cmpsl
or
sbb
cltd
mov
inc
sbb
bsr
ja
xor
jge
add
aad
outsl
pushf
cmpsb
xor
push
or
xor
jne
jge
cmp
adc
push
sbb
in
pop
mov
adcb
mov
cmc
loop
fmull
adc
fiaddl
aad
jecxz
sahf
gs
jnp
xor
inc
lock
mov
dec
dec
mov
mov
dec
add
adc
or
mov
push
jge
mov
ffreep
mov
push
dec
aad
mov
aad
xchg
psrad
or
arpl
int
push
enter
add
fcoms
and
call
popf
enter
ja
mov
stc
roll
sub
fisubs
cmp
sub
xchg
xor
loop
adc
ret
stc
push
nop
cli
mov
stc
or
popa
pop
shll
hlt
push
cwtl
insb
pusha
dec
gs
or
mov
shr
xchg
lcall
cmp
adc
pop
pop
roll
movsb
inc
xor
xor
cmp
cmp
incl
sbb
mov
jg
pop
lahf
shrl
pop
or
inc
mov
adc
ja
pop
pop
fildl
and
push
repnz
sahf
or
mov
xchg
cmp
aaa
shll
movsl
stos
cli
dec
xlat
push
daa
gs
cmpb
xor
insl
in
std
bound
shr
decl
push
and
xor
jge
mov
pop
mov
lods
xchg
mov
sub
or
repz
pushf
out
mov
in
pop
rol
leave
sbbb
insb
lods
mov
jecxz
pop
xor
fdivs
aaa
add
shlb
pop
pop
adc
ror
lahf
cmp
jae
xorb
out
adc
adc
add
cmpsl
push
roll
lea
ljmp
cmp
pop
push
cmp
cmp
mov
pusha
cmp
cmpsl
dec
and
sub
xchg
jle
lds
push
cmc
jbe
push
sbbb
and
jb
arpl
cmp
jge
jns
jg
cmp
mov
adc
gs
mov
or
mov
sbb
inc
or
xchg
add
pop
mov
push
shlb
add
pop
fisttpl
cld
sbb
stos
in
movsl
mov
cli
sub
xor
adc
sbb
mov
push
std
xchg
mov
jae
lods
fsubr
and
jmp
loop
pop
sbb
repnz
dec
pushf
push
int
daa
and
xor
inc
inc
push
cmp
or
push
mov
mov
push
add
jo
sbb
push
cmc
ficompl
or
mov
test
or
popf
jle
movsb
arpl
call
sbb
scas
jmp
cwtl
sub
cmp
aaa
cwtl
and
pop
jo
jae
test
mov
xchg
jge
fs
hlt
sub
dec
les
es
sbb
hlt
in
mov
fstl
inc
ljmp
mov
subb
sub
cmp
in
and
lock
push
cmp
pop
loop
inc
out
mov
inc
dec
jno
aas
outsl
cmp
mov
inc
xlat
pop
cmpsb
jae
lods
lcall
or
stos
add
aaa
aam
std
ljmp
xchg
insl
sub
sub
imul
dec
es
lods
sub
jecxz
jb
inc
jp,pn
sub
and
fwait
je,pt
into
add
int3
or
out
dec
lock
hlt
push
popa
outsl
arpl
js
popf
inc
cmpsb
or
lods
mov
xor
adc
sbb
dec
jmp
pop
lds
stos
push
ds
mov
add
add
sub
xchg
add
push
fisttpl
pop
mov
ret
mov
pop
frstor
push
orb
jnp
insl
rcrb
int
subl
es
cltd
dec
mov
jbe
adc
pop
aam
xor
in
popa
cmp
test
dec
lods
rclb
movl
pop
fldl
xor
mov
jmp
test
jg
out
mov
inc
push
inc
sbb
out
in
sti
das
je,pt
mov
push
or
cmc
inc
daa
mov
loop
mov
das
add
jae
cli
sub
ljmp
inc
dec
add
mov
and
les
fstpl
movsl
xor
mov
push
cltd
add
and
fnsave
and
loope
lret
dec
stc
stos
sub
or
mov
test
mov
sbb
jb
mov
sbb
xchg
mov
dec
dec
popf
adc
stos
jne
xchg
daa
push
dec
sbb
dec
fs
mov
jno
cmc
sbb
mov
sub
out
nop
movsb
fistps
les
pop
pop
cmp
pop
ret
call
mov
ja
int3
out
sahf
idiv
ds
dec
inc
adc
sti
jo
mov
and
in
clc
cmp
mov
mov
fidivs
push
icebp
daa
jne
pop
imul
sub
mov
pusha
ljmp
aas
fdivrl
outsb
popa
or
movsb
xchg
fadds
loopne
fiaddl
xchg
push
pop
add
imul
add
or
inc
lock
jb
xchg
add
das
rcr
pushf
mov
int
out
mov
pop
pop
in
inc
or
and
cmp
push
mov
mov
jg
lcall
or
popf
movsl
je
push
shll
jecxz
ret
ret
out
repnz
sti
inc
mov
pop
jle
jnp
mov
in
imull
mov
mov
inc
les
and
sti
add
pop
ja
mov
xchg
pop
imul
cmpsb
cmp
adc
inc
aas
add
pop
sub
inc
mov
xor
xchg
or
inc
mov
jbe
push
mov
or
loopne
popl
jae
lods
int
push
jb
dec
not
mov
mov
icebp
mov
add
mov
pop
cmc
push
call
jne
imull
leave
dec
shrl
dec
mov
test
xchg
xchg
shlb
aaa
dec
mov
push
sub
popf
cwtl
xchg
sub
lods
xor
inc
add
add
jg
mov
imul
fisubrl
mov
cmp
stos
nop
pushf
std
push
arpl
cmp
loopne
shll
push
jo
neg
shlb
sbb
out
push
pop
push
enter
mov
sub
jne
mov
pop
lret
js
cmove
add
push
pop
mov
and
enter
mov
and
cmpsl
in
stos
leave
pop
mov
xchg
cs
fisttpl
lea
or
sbb
xchg
and
cld
jo
test
inc
inc
xchg
decl
ja
jmp
int3
aas
out
stc
pop
cmc
add
dec
je
test
insb
jp
mov
xor
addr16
add
mov
fidivrl
cmp
mov
xchg
outsb
jae
lahf
sbb
movsb
push
sub
hlt
sub
shlb
out
jbe
gs
mov
iret
in
movsb
mov
lods
xor
sbb
push
dec
mov
push
addr16
inc
mov
fisubs
push
pusha
stc
in
xorl
inc
sarl
mov
pop
or
xchg
pop
fstps
pop
push
repz
xchg
fwait
mov
insb
data16
jmp
cmpsl
xlat
mov
leave
cld
mov
mov
cmp
iret
add
mov
xor
xchg
repz
shrb
sahf
mov
clc
sub
jle
test
add
cld
gs
add
sbb
rclb
sub
push
mov
xlat
and
bound
stc
and
enter
test
int
jl
or
pop
or
clc
sub
jmp
mov
pmullw
orl
pop
xchg
addl
pop
fst
fidivrs
rorb
or
addr16
cli
pop
nop
mov
fcomi
pop
stc
fsubrs
cli
mov
or
and
sub
add
mov
cs
sbb
in
inc
dec
xchg
insb
mov
gs
negb
or
cmp
cwtl
add
out
jo
sti
mov
aas
rorl
loop
mov
cmpl
xor
shr
or
sbb
pop
adc
vpunpckhbw
out
test
js
xchg
pop
mov
ror
pop
fsub
xor
sahf
je
jno
test
popf
push
fbstp
sbb
pop
and
mov
shr
out
pop
and
lahf
cmpsb
or
das
pop
push
scas
andb
mov
or
add
ja
and
and
ja
mov
add
sbbb
jl
rcrl
test
out
scas
nop
into
cld
or
mov
mov
scas
aad
scas
jp
or
cmp
out
clc
into
bound
insb
jp
fdiv
popa
mov
out
or
les
push
mov
leave
push
mov
push
dec
xor
mov
or
pop
inc
mov
iret
stos
xchg
cmp
gs
test
jle
es
add
fnstenv
ds
mov
inc
mov
add
rorl
sti
pop
sbb
push
pop
sbb
shll
cmp
aad
jle
daa
lret
inc
mov
sbb
xchg
add
ljmp
dec
push
dec
push
inc
or
data16
lret
in
sbb
xor
cmp
loope
repnz
icebp
jmp
pop
jp
movsb
mov
rol
add
lds
jne
ret
add
das
je
add
cli
lcall
lahf
imul
fs
fiadds
gs
loop
xor
pop
mov
mov
or
and
push
sub
out
les
mov
push
frstor
js
mov
stos
adc
mov
sbb
lock
or
pusha
sub
push
mov
call
pop
jmp
sbb
push
insl
and
adc
pop
xor
and
pushf
adc
iret
xchg
enter
sbb
std
fimull
sbb
fmulp
sbb
int
adcb
enter
mov
daa
jnp
adc
inc
iret
ret
jecxz
xlat
xchg
xchg
nop
pusha
push
orl
or
stos
sbbb
aam
adc
pop
add
xor
push
adc
sti
arpl
ret
adc
push
shll
push
mov
add
ds
lods
mov
add
cli
jmp
add
sbb
loopne
aad
mov
xlat
mov
xchg
cmp
adc
add
sub
push
push
jns
mov
dec
pop
les
and
ljmp
inc
pop
mov
or
adc
in
dec
pop
pop
inc
les
xor
fisttps
mov
stos
xlat
pop
std
jmp
xchg
adc
test
bound
mov
inc
outsl
fnstcw
jne
in
stos
ljmp
popf
push
xchg
iret
out
fstps
dec
fwait
inc
std
shlb
adc
xchg
lock
outsb
fwait
xchg
in
push
getsec
test
outsl
sarl
dec
push
mov
loop
add
clc
dec
mov
mov
repz
cmp
imul
jno
fdivs
jg
popf
inc
adc
pop
jle
pop
pop
mov
push
pop
mov
daa
cmp
mov
mov
mov
negl
dec
push
es
adc
inc
sub
cmc
sub
add
cmpsb
mov
imul
ds
insl
mov
push
sahf
insl
inc
cmp
mov
outsl
fwait
sbb
mov
lret
cmp
lea
stos
push
push
pop
xor
data16
cli
sub
repz
xlat
pop
lcall
dec
mov
or
mov
imul
popa
adc
xchg
outsl
aas
cmp
sbb
sbb
mov
fildll
aaa
xor
adc
inc
aad
mov
or
sti
add
jo
fdivrl
jp
lock
aam
xchg
mov
sub
outsb
push
inc
es
orb
test
fisttps
and
pop
pusha
jb
cmc
pop
sub
daa
mov
cmc
lret
sbb
mov
jge
xor
jne
stos
repz
cmp
jp
stos
outsl
cli
cmp
clc
cmpl
nop
lcall
mov
sub
movsl
aas
or
pop
or
pop
dec
cmp
inc
mov
sbb
adc
sbb
fimuls
pop
pop
test
and
shrl
jae
in
adc
mov
jg
cmp
ljmp
mov
inc
pop
or
mov
sti
test
push
push
push
movsb
dec
pop
fwait
and
inc
inc
fistpl
dec
push
fwait
movsb
mov
ror
adc
cmpsb
adc
outsl
lret
rolb
int
push
es
push
xchg
test
sub
inc
cmp
and
adcl
movsl
cmp
jnp
sbb
sub
jp
ret
cmp
dec
into
push
pusha
xchg
repz
pop
jecxz
inc
subl
pop
mov
in
stc
outsb
insb
jne
fwait
out
mov
sbb
mov
or
scas
pushf
or
div
aaa
push
pop
rcrb
or
fadds
mov
out
sbb
pop
cmp
push
stos
xor
mov
mov
pop
adc
cmp
dec
xchg
cli
mov
sub
movsb
jno
imul
jl
mov
cmp
ljmp
mov
xor
insl
ret
imul
psllw
or
jp
xchg
enter
sub
fwait
stos
lods
inc
mov
stos
cmp
hlt
call
pushf
mov
fldl
pop
out
fwait
sub
jb
jo
call
sbb
daa
inc
in
inc
adc
xchg
hlt
fs
mov
mov
dec
cmpb
sbb
inc
push
clc
jge
pusha
add
mov
mov
inc
dec
jge
test
mov
andl
lods
mov
jb
and
xchg
dec
xchg
adc
hlt
fucom
mov
xchg
or
imul
ljmp
cmc
cmp
pop
cld
mov
daa
sbb
outsl
and
imul
pop
lret
push
sbb
inc
popa
pop
into
mov
dec
addr16
pop
adc
fdiv
add
sub
jecxz
adc
dec
std
push
pop
xchg
jp
shrl
pop
pop
mov
arpl
cld
test
gs
add
jo
mov
mov
popf
inc
dec
pop
mov
and
push
pop
xor
mov
in
push
xchg
inc
lods
mov
jnp
jo
ss
xlat
cmp
mov
cmpb
pushf
adc
cmp
loopne
add
jns
push
loope
int3
pop
mov
xchg
rcl
jb
xorl
cmp
cmp
pop
js
and
call
push
mov
sbb
and
xchg
cmp
xor
shrb
shrb
inc
jmp
mov
cmpsb
nop
popf
addb
imul
ret
das
dec
jno
icebp
dec
inc
mov
call
adc
pop
cmp
xchg
inc
call
cmovl
clc
outsl
rcrb
pop
cmp
or
xchg
dec
or
lret
repz
add
xor
ja
dec
rcrl
push
ror
sub
and
sbb
std
mov
pop
cmp
xchg
adc
jmp
mov
push
xrelease
nop
xlat
push
push
cwtl
mov
into
movsl
cmp
push
testb
or
lcall
xchg
lods
xchg
aas
push
sub
int3
pop
add
gs
mov
cmp
mov
add
icebp
sub
int3
repz
fadd
pop
shll
in
sub
fwait
mov
into
es
adc
jns
out
stos
fisttps
ficoml
inc
or
mov
mov
add
stos
loope
cmp
and
loope
push
fidivrs
test
xchg
xor
cltd
sarl
add
xor
inc
mulb
sbb
in
jbe
pop
lea
jge
gs
mov
mov
inc
add
lods
sbb
clc
addr16
movsl
mov
lret
sub
add
lret
and
inc
fcomp
test
movsb
aad
inc
jbe
dec
mov
jecxz
sahf
or
test
sbb
scas
sub
das
arpl
lea
xchg
adc
pop
int
incl
push
mov
dec
dec
std
cs
dec
adc
xor
dec
leave
push
cmp
addl
xor
enter
test
lahf
add
pushf
dec
xchg
xchg
adc
in
sub
pop
shlb
fsubr
testl
inc
aas
mov
or
ret
cmp
jb
push
ret
xchg
xlat
inc
mov
xor
sub
sub
jbe
cmpsb
das
mov
xchg
sub
orl
rorl
loopne
sub
mov
push
push
push
pop
add
sub
pop
popf
daa
insb
mov
lahf
pop
adc
sbb
mov
xlat
pusha
xor
lods
pop
addr16
cmpsl
add
lods
inc
mov
sub
push
aaa
imulb
aaa
or
adc
stc
fisubrs
lahf
lds
repz
xlat
cmp
fwait
popa
and
dec
push
xor
test
lahf
or
push
insl
loop
pop
iret
and
xchg
sub
cwtl
sub
xor
lods
inc
xlat
xchg
daa
cmp
adc
jns
inc
dec
sbb
test
rcrb
popa
jo
insb
pop
pop
dec
stc
xor
out
mov
pop
bound
lods
imul
and
add
inc
fisubrl
jmp
movb
push
xchg
shrl
xchg
divb
and
lock
or
cmp
fdivl
loope
pop
cmp
fsub
adc
dec
fnsave
sub
inc
add
rcrb
inc
lret
or
in
add
dec
fimuls
sbb
sar
adc
jb
lods
lret
jno
inc
rcrb
xchg
jns
rcrl
pop
xchg
test
rcll
aaa
pop
adc
decb
out
mov
and
xchg
jno
ja
sbb
and
lods
ljmp
sahf
sahf
ds
or
mov
je
repnz
inc
push
mov
lds
jb
add
mov
mov
push
add
push
icebp
xlat
jns
insb
or
clc
data16
inc
push
or
dec
inc
das
cmp
daa
inc
notb
call
in
idivl
fs
dec
fwait
in
pop
adc
into
jge
mov
jne
add
iret
pop
xchg
hlt
cmp
imul
test
push
inc
or
pop
jmp
push
inc
mov
adcb
lcall
in
movsl
add
js
mov
js
jnp
xorb
sahf
push
dec
cmp
stos
lods
dec
pop
add
in
mov
xor
scas
pop
jo
pop
pop
scas
cmp
repnz
pop
dec
addl
mov
ret
rcr
sub
imull
test
repz
fidivs
fmull
std
jae
and
std
add
setae
in
iret
lcall
sbb
xor
mov
lret
scas
int
mov
mov
mov
roll
sbb
out
testl
popl
mov
cmp
das
jb
loopne
scas
sarl
ds
mov
xchg
outsw
jl
test
stos
jecxz
mov
inc
sahf
icebp
adcb
mov
je
pop
cld
mov
jmp
pop
mov
mov
dec
mov
icebp
repnz
aad
daa
add
sub
mov
pop
push
mov
addr16
sbb
jbe
fadds
xchg
xor
mov
mov
call
add
sbb
pusha
dec
pop
or
addl
outsl
adc
adc
inc
cmpsl
loop
lods
jmp
xor
lods
mov
rorb
lret
sbbb
pop
mov
rcr
jg
imul
shlb
in
sbb
inc
cmpsl
cmp
aas
xchg
mov
addr16
aad
das
stos
mov
lods
adcl
fs
icebp
rolb
push
mov
jge
push
push
into
leave
loop
push
adc
adc
je
mov
mov
sub
icebp
addr16
nop
cmp
sbb
bound
dec
insl
mov
inc
imul
cmpsl
xchg
or
test
push
scas
mov
push
fucom
pop
js
lcall
clc
sbb
add
hlt
test
inc
pop
xor
fbstp
push
arpl
inc
js
rcr
inc
sbb
xchg
in
mov
mov
pop
lods
dec
add
add
pop
repz
and
aam
jo
shlb
cmc
sub
xor
push
mov
test
jmp
sbb
lret
pop
stos
dec
mov
push
inc
mov
push
call
mov
sahf
mov
xorl
mov
pop
pop
fcmovu
dec
insl
jns
mov
scas
adc
cmpsb
cmp
cltd
xchg
cmpl
ljmp
add
jmp
outsb
out
cmc
or
sahf
sbb
xchg
js
dec
daa
aaa
repz
ret
das
xchg
divb
jecxz
imul
pushf
sbb
push
xchg
das
jle
xor
iret
cwtl
add
fmuls
repnz
in
inc
push
test
pop
bound
push
nop
cwtl
jae
aad
dec
mov
xchg
mov
fisttps
andl
out
cmp
stc
into
in
or
js
xor
or
push
sub
test
push
jno
movsl
jge
fsubs
jae
xchg
or
jbe
out
mov
mov
inc
push
mov
ja
dec
shl
ret
addl
int3
inc
popa
repz
jp
pop
icebp
enter
xlat
sub
pop
push
pop
jp
sbb
fdiv
push
xor
enter
mov
dec
stos
insb
sub
mov
lea
je
imul
int
mov
mulb
test
loop
xor
jp
sub
jno
outsb
imul
out
and
cmp
aas
roll
sbb
imull
daa
jl
mov
sub
inc
out
test
icebp
clc
mov
stos
xchg
mov
xchg
and
repnz
outsl
sub
inc
fmuls
imul
lods
cmp
lds
xchg
pop
int
add
ficomps
inc
int3
outsl
pop
out
pop
fwait
iret
or
icebp
loope
cmp
fucomip
jle
loop
call
push
mov
xor
xor
inc
lahf
cmp
mov
aam
in
xchg
mov
insl
addl
mov
sbb
mov
push
lahf
fsubrl
bound
fcmovnu
and
pop
roll
push
repnz
xor
cmp
mov
inc
fisubrs
loop
insb
imul
imul
je
lods
pusha
iret
jmp
dec
push
or
sbb
push
dec
pop
inc
xchg
rcll
dec
pop
call
cmc
xor
leave
pop
imul
adc
sub
sbb
inc
mov
fisubrl
sbb
roll
lods
imulb
hlt
loope
in
cld
clc
aaa
es
leave
sahf
mov
inc
ss
fstpl
test
incb
cmp
in
mov
ret
sbb
jno
add
loope
dec
lods
mov
stos
cmc
pop
inc
sbb
mov
jmp
andl
mov
fidivs
adc
mov
std
mov
cltd
cmp
xchg
add
scas
subb
sbb
rcr
sub
mov
outsl
mov
sarb
or
ljmp
add
dec
inc
clc
test
out
rolb
dec
in
xor
ret
and
aad
sahf
je
add
imul
repnz
or
fdivrl
andb
mov
fwait
push
and
mov
mov
mov
mov
out
shl
xchg
dec
fadd
loop
popl
xchg
insb
mov
sub
add
push
aaa
loope
in
xor
adcb
xchg
push
and
xlat
add
jmp
adc
sar
push
xor
fcoml
and
cmp
ret
sbb
lock
ljmp
add
aaa
push
lret
test
fmull
sub
sbb
insb
dec
shrl
inc
inc
jne
rcll
pop
mov
in
in
cmp
mov
out
insb
adc
mov
sbbl
xchg
pop
cmpsl
sub
cmpsl
lret
inc
sbbl
sahf
loopne
adc
inc
push
and
xchg
pop
pusha
fsubp
daa
aam
jo
rol
dec
mov
das
shll
cmp
pusha
into
repz
std
arpl
xchg
bound
jno
ret
mov
xor
xor
pop
ja
dec
push
push
loope
sbb
and
pop
cltd
nop
xchg
je
adcl
push
mov
fsubs
pop
pop
mov
dec
int
dec
ljmp
andl
pop
xchg
mov
fidivl
mov
mov
movsl
cmpsb
jns
pop
xchg
sub
lock
js
pop
test
fcompl
addr16
push
jo
pushf
xor
xor
lock
push
and
movb
jno
outsl
std
sub
movsl
add
arpl
mov
xor
lock
mov
clc
mov
cli
mov
repz
push
in
add
or
jge
jbe
xor
das
icebp
and
movsl
addl
daa
or
test
xchg
ja
xor
dec
aad
xchg
in
cmc
jecxz
out
push
pusha
inc
mov
xchg
dec
vzeroupper
pop
or
insl
sahf
or
jbe
pop
stos
push
xor
mov
or
lea
mov
add
mov
in
sbb
dec
jmp
adc
fisttpll
test
jl
jge
scas
pop
push
jns
cmp
jo
or
adc
push
loope
rclb
push
push
adc
in
jecxz
sbb
fdivrl
inc
jnp
sub
test
dec
mov
into
cmc
ret
xchg
lcall
je
sub
aas
jo
mov
cwtl
fwait
dec
xor
fidivl
in
xchg
bound
ret
call
pop
jns
clc
sbb
aas
out
add
dec
push
xchg
adc
sbb
notl
xor
mov
mov
out
movsl
cmp
call
test
pushf
sbb
into
jle
movsl
xor
in
add
mov
inc
lret
stc
mov
mov
and
pop
orb
addr16
fnstcw
xor
lea
inc
dec
fnstenv
sub
xchg
push
popa
mov
dec
mov
call
in
push
mov
mov
test
mov
mov
fs
add
xor
cld
aas
loope
daa
std
cmp
loop
mov
jno
shll
dec
dec
fisubl
cmp
pop
add
fsubs
jmp
into
shl
mov
std
insb
outsb
sarb
mov
daa
andl
add
pop
xchg
push
xor
fcomp
popa
dec
jle
cmc
mov
sub
mov
pop
lods
xor
outsb
xchg
add
mov
stc
jo
add
pop
mov
das
je
in
stos
repz
lods
sti
lcall
push
js
or
cmc
divb
push
into
add
or
in
jmp
pop
cmp
leave
adc
inc
jae
subl
push
inc
and
fcmovu
push
xchg
repnz
and
or
mov
int
cli
push
xor
sbb
in
and
popa
mov
push
out
icebp
arpl
insl
jecxz
jno
repz
sbb
repz
js
jbe
jp
mov
movswl
sub
push
jns
arpl
sti
into
adc
xor
xchg
pop
or
ror
jl
lret
jno
add
jne
sub
les
push
xlat
jbe
pop
iret
in
mov
sub
xor
push
pop
sbb
jg
pop
pop
push
test
movsb
mov
shlb
push
pop
cmp
in
xor
dec
in
dec
shr
lahf
dec
insb
enter
sbb
jmp
sbb
add
pop
sti
stos
call
sub
jg
adc
incb
mov
adc
lds
mov
xor
fimull
pusha
mov
xor
out
rcl
call
xor
pushf
sbb
popa
cmp
lock
cld
adc
push
cli
int3
sti
fmull
stos
cli
movsb
lret
inc
sbb
push
je
stos
fcmovnb
call
in
mov
fstpt
fisubrs
jl
dec
xor
into
out
jae
test
push
inc
out
sahf
cmp
cmp
add
jg
sbb
xchg
dec
xor
fcmove
mov
test
fwait
mov
lods
mov
and
mov
and
popa
xchg
mov
dec
and
ret
xor
push
push
mov
cmp
mov
mov
inc
lea
inc
and
pop
add
xor
rcrb
xor
push
xchg
test
xchg
and
lds
sbb
push
sub
jge
cltd
mov
lods
push
repz
aad
out
faddl
sbb
jmp
aaa
add
ljmpw
add
inc
popa
mov
or
aaa
or
pop
or
out
inc
pushf
dec
int3
cld
hlt
ds
ljmp
dec
mov
leave
aas
test
inc
out
call
je
ret
stos
test
aaa
jg
and
int
lahf
jmp
jbe
shlb
adc
sub
call
into
clc
cmp
fcoml
jno
inc
push
jmp
xchg
mov
movsl
ljmp
push
in
mov
mov
out
test
iret
and
xchg
es
je
roll
ret
sbb
popf
ret
fs
xchg
test
mov
test
iret
je
std
int3
test
jnp
test
into
ja
cltd
daa
or
das
xchg
pop
rolb
loop
orl
pusha
lock
or
sbb
sub
lret
xchg
outsl
lret
pushf
jle
jae
mull
cmp
nop
or
test
jnp
pop
mov
xchg
lret
mov
dec
mov
or
insl
ja
jo
push
imul
and
xchg
rcr
popa
imul
sub
jne
mov
mov
sub
xchg
out
mov
push
test
ss
pop
push
or
cld
adc
xchg
and
cmp
adcb
xchg
inc
ret
movsl
add
cs
or
adc
sub
in
push
jnp
or
pop
out
cmp
stc
push
lret
andl
mov
stos
sub
adc
test
cmp
sub
xchg
xor
popa
adc
xchg
ss
hlt
or
mov
test
jmp
insb
xor
inc
fcmovnu
in
pop
mov
inc
mov
imul
lods
bound
jp
es
and
fs
jmp
cmpl
jge
sbb
sub
jp
leave
out
ret
icebp
js
inc
jns
je
jns
xlat
or
sbb
out
push
xor
test
jp
loop
test
mov
cs
adc
testb
in
mov
lret
dec
in
xchg
shlb
pop
cmp
int
dec
mov
mull
jp
pop
pop
enter
mov
in
pushf
cmp
fs
or
pop
sahf
inc
add
mov
inc
xor
add
mov
imul
pop
jmp
jne
loop
mov
mov
pushf
mov
ret
add
and
hlt
outsl
jno
mov
dec
push
and
addr16
es
test
dec
xchg
mov
stos
cli
adc
int3
push
jno
xchg
idiv
push
mov
test
and
shl
xchg
jecxz
movl
inc
mov
push
dec
es
pop
inc
fiadds
mov
lret
sbb
scas
dec
loope
add
call
call
notl
je
push
mov
dec
movsb
sub
cltd
popf
repz
popa
aam
or
arpl
mov
cli
jae
lds
daa
out
sbb
insl
push
xor
orl
nop
or
xchg
mov
es
adc
push
out
stos
jp
and
insb
xchg
push
arpl
jne
dec
cli
dec
xlat
or
mov
aas
inc
xchg
cmp
jne
decb
xor
mov
ret
xchg
jg
movsb
push
xchg
inc
dec
sub
ljmp
xor
pop
mov
add
fstl
lea
pop
adc
dec
dec
pop
in
jb
orb
mov
rcr
mov
pushl
push
mov
repnz
xor
in
out
add
lcall
sbb
sub
test
daa
roll
inc
fisubrs
pop
testl
and
cwtl
cmpsl
mov
inc
sarb
shrl
cwtl
imul
xlat
pop
stos
imul
and
inc
mov
nop
fistpl
jne
and
xchg
cmp
mov
push
pop
adc
sbb
mov
xor
cmp
sbb
mov
popf
call
mov
shll
mov
sti
sti
inc
insb
dec
and
icebp
xchg
mov
enter
insl
and
add
pop
outsb
adc
sbb
lods
mov
fcmove
sbb
mov
testb
outsb
pop
fucomp
and
add
out
loope
and
lods
test
stos
int3
mov
shll
call
ljmp
dec
add
xor
sysret
sbb
or
jmp
bsr
xor
jne
ss
loop
jo
and
aad
adc
adc
es
loope
xchg
adc
testb
push
dec
or
xor
lret
or
mov
jb
dec
iret
inc
sbb
mov
fnstsw
iret
scas
xchg
out
jne
xchg
rclb
mov
add
es
test
call
xchg
sub
push
fs
in
lcall
movd
dec
mov
push
jmp
mov
xchg
imul
cmpsb
lds
test
insb
jge
add
fs
icebp
add
mov
imul
movsl
jb
xchg
out
jnp
sbb
mov
lahf
sbb
xor
dec
rorl
ret
xor
inc
xlat
cld
in
xor
popa
das
popa
iret
outsl
lret
xchg
test
xlat
fwait
aad
push
stos
rclb
fwait
arpl
cmp
push
inc
jp
or
mov
dec
sub
test
xor
clc
jb
stos
and
out
call
add
mov
adc
imul
pop
sbb
mov
loope
stos
jl
and
je
enter
jge
xor
dec
jecxz
test
push
and
sub
adc
mov
rolb
push
mov
test
push
test
ret
and
sbb
cmp
nop
mov
movsb
or
xchg
or
and
mov
ja
into
sub
shl
pop
pushf
popf
clc
xchg
mov
sub
cli
dec
inc
loop
dec
fsubs
xor
dec
cmp
jmp
rorb
xchg
mov
enter
cmp
and
stos
iret
cltd
jne
fdiv
sub
inc
push
jp
sbb
sti
fldenv
das
xchg
push
mov
adc
repz
ja
cmpsl
cmp
out
pop
mov
push
lcall
cmp
jnp
xor
sub
ljmp
pusha
and
xor
dec
ljmp
xchg
push
fstp
jg
aad
sbbb
fnstcw
ret
mov
out
mov
pop
rclb
pop
xor
xchg
sub
in
mov
mov
lods
in
mov
gs
lea
or
push
inc
inc
stos
rorb
xchg
movsb
pop
push
cs
lods
cmpsl
jns
popa
jb
scas
and
sbb
mov
jno
fwait
jge
push
mov
adc
out
loop
xchg
push
jecxz
dec
dec
xor
addr16
test
push
cmp
xor
mov
mov
mov
adc
cwtl
push
jge
out
call
andb
adc
or
add
enter
adcb
cwtl
shr
addr16
xchg
test
and
loop
pop
xor
gs
adc
jle
xor
xor
sbb
fildl
and
add
test
pushf
jb
mov
repz
push
mov
inc
mov
push
loop
pop
xchg
xchg
jecxz
add
shrl
or
sbbl
pop
dec
je
cmp
dec
pop
cmp
inc
jecxz
pusha
sbb
dec
dec
or
arpl
adc
nop
mov
fisttps
and
adc
push
outsl
mov
adc
insb
test
arpl
imul
rolb
xchg
push
or
outsb
jae
popa
and
les
test
sub
rorl
pop
or
mov
cmp
pop
mov
cmc
lods
insb
lcall
movsb
das
popa
popf
cmp
xor
jno
dec
iret
sub
mov
push
rolb
leave
sbb
test
ret
pop
sbb
fstpl
xchg
xlat
fisubl
adc
outsb
scas
lcall
aaa
cmpl
xchg
adc
fmul
and
sub
lea
sti
and
loop
add
push
movsl
cld
out
je
push
add
icebp
loopne
push
adc
push
push
lret
adc
mov
dec
and
fldl
inc
mov
jbe
adc
pop
mov
clc
das
movsb
fbstp
into
loopne
fcompl
daa
in
fsubs
int3
xchg
inc
lret
fdiv
pop
incl
outsb
outsl
aad
scas
xchg
xchg
push
lahf
xor
mov
repz
shlb
mov
outsb
push
cmp
jb
and
fwait
mov
lods
pop
cmp
insb
popf
add
jo
inc
xor
sub
lods
push
arpl
mov
mov
xchg
cmp
mov
sbb
frstor
iret
xor
sub
sub
sub
push
and
popf
push
pusha
or
lahf
call
pusha
adc
cmp
cmc
fs
adc
ds
notb
cmc
adc
add
mov
inc
mov
dec
addb
std
jb
jle
pusha
add
ss
inc
hlt
sbb
xchg
xor
sbb
push
mulb
mov
adc
scas
jne
mov
flds
and
pusha
lret
or
mov
insb
shll
pop
add
mov
faddl
add
jb
out
test
loopne
xor
enter
jns
pop
cwtl
int3
mov
sti
mov
cwtl
mov
es
mov
mov
aam
mov
pop
cmp
std
xchg
mov
test
loop
imul
xchg
jmp
ljmp
jg
xor
dec
std
jl
xchg
add
mov
push
jg
lahf
fsts
cmpsl
inc
mov
daa
push
dec
stos
gs
repnz
pop
push
push
leave
pop
js
adc
push
test
jecxz
push
nop
jns
inc
cmp
loop
ret
dec
and
in
in
inc
hlt
mov
test
sbb
loope
insb
sub
dec
call
mov
outsl
sbb
and
jle
daa
xorl
adc
addr16
mov
sub
push
cmp
inc
inc
sub
addr16
icebp
dec
xchg
xchg
sub
push
cmpsl
cmp
or
push
mov
aas
sbb
mov
test
notl
in
sbb
xor
lret
push
cltd
inc
andb
cmpsb
repnz
xlat
mov
ss
int
sub
icebp
lods
daa
pushf
cwtl
dec
loopne
pop
xor
aam
cwtl
mov
add
jns
push
dec
inc
mov
inc
enter
lret
mov
push
or
repnz
fcompl
incl
xchg
cmpl
lahf
or
dec
push
js
lret
or
sar
pop
insl
sub
es
and
inc
mov
lcall
loopne
call
insb
fistpl
movsl
sarl
mov
mov
mov
xor
dec
mov
push
dec
test
jmp
imul
pop
push
stos
jae
xchg
mov
add
xchg
insl
or
repz
pop
xlat
shl
add
mov
mov
aaa
sbb
ja
push
sub
iret
jp
sti
pop
imul
xor
pop
call
mov
inc
stc
lcall
daa
sbb
fistpll
cmp
or
mov
bound
adc
mov
enter
fucomp
fistps
sub
cltd
mov
out
mov
xor
ret
xor
mov
test
dec
cmp
dec
and
and
mov
fcmovnb
mov
add
stos
sub
inc
cmc
jl
or
jbe
hlt
repnz
dec
push
jae
repnz
push
sarb
xor
das
jno
xchg
jle
mov
clc
pop
jmp
enter
sbb
cmp
popf
xor
jmp
fsub
cmp
add
pop
xchg
mov
sub
jecxz
jle
sbb
sub
hlt
mov
loope
or
jnp
pop
ds
cmp
test
fxch
mov
mov
dec
add
dec
xchg
add
arpl
fiadds
jg
data16
aam
jmp
loope
xchg
xlat
xlat
in
stos
stc
mov
push
xchg
mov
jb
adc
int3
mov
addr16
mulb
aaa
pop
xchg
mov
sbb
jns
cmp
stos
and
push
call
push
jae
adc
push
xchg
lcall
sbb
test
adc
dec
mov
stc
jp
push
mov
ret
stos
sarb
sbbl
dec
push
sub
adc
pop
mov
jae
mov
sbb
cmp
andb
push
repz
call
jmp
fstl
and
jae
int
mov
jmp
mov
test
in
repnz
xlat
mov
shr
popa
add
int3
xchg
sub
jmp
mov
sbb
pop
jb
insb
cmp
popa
repnz
fcoms
or
fnstcw
outsl
stos
pop
dec
mov
enter
sbb
cmpsl
sarb
add
adc
call
xor
and
je
test
jle
mov
sub
inc
enter
gs
mov
cmp
cmp
imul
jno
dec
bound
ffree
pop
iret
fidivrl
arpl
and
idiv
out
pop
lds
in
push
sahf
jae
cmpsb
jecxz
shrl
lahf
cmp
or
js
dec
pop
dec
leave
bound
xchg
push
lret
xchg
or
jo
loopne
inc
pop
xor
inc
sub
aaa
je
mov
ficomps
pop
lock
loope
pop
aam
fsubrl
and
cmpsb
adc
std
push
dec
into
das
mov
nop
lret
inc
je
daa
std
fwait
adc
test
add
subl
add
mov
inc
inc
stos
icebp
xchg
mov
inc
into
adc
stc
ss
pop
dec
shlb
lods
jno
test
movsl
xchg
lahf
dec
mov
pop
fs
lret
popa
lods
in
mov
call
fidivl
jae
lock
jge
mov
test
dec
add
cmp
aas
push
push
aad
lds
je
add
xor
fnstcw
mov
or
and
mov
xchg
flds
popf
orb
dec
adc
xor
and
std
int3
bound
adc
mov
sbb
and
mov
dec
cld
cmp
fs
rcr
fimull
jle
lods
push
data16
aaa
pop
mov
jb
stos
int
fnstsw
mov
insb
lock
loope
icebp
popa
stos
inc
dec
pop
imul
ds
jl
adc
fildl
xor
dec
add
cmp
hlt
icebp
js
xchg
shlb
xchg
cmp
mov
test
push
gs
sub
rolb
loopne
rcrl
xchg
popa
jno
mov
shll
pusha
add
push
sbb
push
add
addb
jge
push
add
call
lock
push
jnp
sbb
test
gs
bound
icebp
or
inc
leave
ds
insb
xor
mov
push
xor
mov
fdiv
ja
mov
jo
or
std
and
scas
popf
inc
scas
loopne
movsl
cmp
mov
stc
out
xchg
push
push
inc
aam
in
test
jmp
xor
pop
daa
stc
and
aas
addr16
fidivs
mov
ror
cmpsl
pop
lahf
dec
leave
fldcw
arpl
or
ret
mov
int
lods
push
pop
call
sbb
mov
shlb
fidivrl
adc
xchg
jp
xchg
cmpsl
frstor
enter
pop
inc
sub
lret
mov
cmp
sbb
faddl
mov
fwait
pop
adc
pop
sti
das
xor
lock
popf
adc
dec
cmpsl
lods
mov
ljmp
pop
dec
ja
sbb
pop
les
sarb
loope
jo
dec
inc
daa
std
and
mov
imul
cmp
aad
in
cld
and
int3
sbb
lret
leave
jge
jbe
and
mov
cli
jno
cmpsl
sahf
add
fsin
xchg
loope
xor
mov
and
cmp
cmc
adc
inc
popa
test
lods
in
jmp
je
leave
pushf
int
xor
out
sbb
dec
sti
int3
repnz
mov
sti
add
pushf
push
inc
xor
enter
fptan
mov
inc
jg
or
imulb
std
lret
nop
cmp
fistps
mov
loope
stos
inc
push
jbe
enter
test
fistl
test
mov
clc
lea
jns
bound
popa
sub
int
cmp
cmc
mov
int3
dec
addl
shlb
orb
int3
mov
mov
and
pop
clc
mov
ficoml
cs
dec
in
jmp
cwtl
mov
jmp
mov
mov
xchg
stos
pop
aam
mov
out
adc
push
add
nop
bsr
mov
fnsave
fistps
push
dec
adc
mov
cmp
xchg
cltd
out
and
in
pop
adc
add
out
ss
cmp
push
adc
gs
fidivs
inc
fimuls
subl
in
jns
lcall
test
push
scas
push
jge
cld
stc
rcrl
rorb
or
sahf
in
sbb
mov
push
mov
mov
inc
xor
xor
xchg
pop
nop
loopne
mov
pop
imulb
aad
sbb
cli
sbb
loope
shll
fwait
xchg
mov
in
add
out
cs
sti
test
mull
aas
mov
nop
sbb
jmp
sti
iret
cmpsl
adc
aad
push
repz
aam
jl
in
or
jno
js
fucomp
pop
sbb
sbb
clc
cli
sub
mov
daa
decb
arpl
or
jmp
xor
inc
outsl
push
jns
mov
push
mull
push
push
outsl
std
lahf
push
sub
into
push
pop
xchg
sbb
in
mov
pop
mov
aad
aaa
sbb
stc
add
ficoms
or
adc
inc
and
lds
jb
filds
mov
inc
in
rolb
lods
xor
pop
dec
int
dec
popf
rorb
add
sub
push
inc
addr16
or
sub
ret
sbbb
pop
leave
gs
pop
dec
stos
cmpsl
jnp
jnp
in
xor
adc
sub
shl
pop
sub
push
jle
loope
dec
sbb
fistpll
xor
adc
stos
sub
and
in
xlat
dec
lods
loopne
clc
mov
cli
int3
fsts
jmp
mov
icebp
movsb
mov
jmp
inc
aaa
adc
stos
and
jl
imul
cwtl
dec
outsl
inc
push
les
mov
ss
mov
push
adc
sbb
test
jno
ds
mov
add
movsl
aad
mov
out
xchg
addb
pop
movsl
in
adc
dec
testl
lock
push
scas
pop
mov
pop
jmp
sbb
xchg
shlb
or
xlat
loopne
pop
shlb
and
les
jge
mov
sbb
cwtl
mov
lea
mov
insb
inc
sub
inc
dec
fisttps
pop
rcll
mov
xchg
jmp
sahf
imul
imul
cwtl
adc
pop
mov
and
out
out
fcompl
int
leave
inc
es
orps
push
xchg
cmpsb
lahf
orb
lds
loope
popf
aaa
push
cwtl
add
cld
dec
andb
add
stos
push
mov
fyl2x
lret
repz
call
add
sub
dec
in
repz
push
jne
cmpsb
frstor
mov
iret
test
and
mov
adc
leave
mov
push
dec
or
lahf
jae
push
push
mov
and
mov
insb
xchg
movb
std
dec
scas
jmp
andb
xchg
mov
mov
fcoml
xchg
js
pop
sbb
jp
gs
out
inc
mov
mov
pop
pop
jl
mov
cs
and
xchg
sahf
movsl
pop
fidivs
dec
loop
out
or
imul
fs
roll
loope
mov
out
call
negb
mov
out
rolb
push
cli
adc
rorb
jge
fs
shlb
pop
lcall
stc
or
outsl
loopne
push
lret
mov
push
add
nop
fwait
jo
roll
subb
mov
int3
xlat
xchg
js
sub
arpl
push
mov
popa
pop
out
sub
or
or
mov
clc
push
sbb
scas
add
das
pop
cmp
loope
in
sub
lcall
movsb
dec
add
imul
cmp
jo
shl
aas
xor
loope
or
sbb
dec
add
mov
ror
stc
mov
aaa
fcomi
mov
add
jb
inc
sbb
and
in
popf
mov
lcall
inc
and
mov
mov
les
imul
adc
addl
xor
enter
or
and
ret
pop
cmc
leave
lods
xchg
or
push
xor
mov
in
out
pop
fldt
repz
mov
jp
cmpsl
sub
addl
into
fildl
scas
inc
inc
mulb
mov
pop
xchg
das
loopne
and
sti
jmp
sbb
sahf
inc
iret
mov
int
bound
mov
dec
cs
andb
in
ljmp
or
ljmp
or
mov
rcr
cmpsl
jo
lods
mov
sbb
lea
xchg
mov
das
xor
repnz
jb
xchg
inc
divl
jo
lods
and
ret
inc
cmp
add
lds
sbb
std
hlt
mov
sub
push
xchg
sub
pop
fst
push
push
xchg
lock
movsb
repnz
sub
xchg
cmp
mov
mulb
sbb
push
nop
sbb
push
jge
add
aaa
mov
in
scas
out
mov
jle
outsb
in
pop
push
mov
dec
and
adc
adc
js
daa
push
pushf
dec
adc
int
add
adc
xor
dec
dec
repz
mov
loop
mov
xchg
and
add
and
and
push
jnp
out
pop
outsb
push
std
inc
sub
fidivrs
mov
mov
loop
add
cmpsb
lret
mov
sar
loope
daa
dec
push
or
gs
sub
je
pop
clc
idiv
lret
mov
stos
xchg
push
aam
fistl
dec
pusha
xor
and
sub
outsw
sbb
fmull
pop
imull
pop
adc
js
shl
cmp
es
dec
lock
fldl
pop
xor
subl
bound
fiaddl
adc
ret
or
xor
dec
push
and
sbb
int3
std
pop
popf
movsb
stos
cmpsb
fwait
cli
mov
pop
mov
inc
dec
cs
push
pop
daa
hlt
call
adc
mov
enter
repnz
mov
in
data16
xchg
sti
xor
ljmp
mov
mov
je
push
pop
push
jb
mov
or
mov
add
push
mov
fdivrl
mov
xchg
in
mov
sub
push
cmp
sub
push
movsl
mov
and
movsl
fildl
cmpb
ret
test
les
jg
xor
cs
scas
mov
cltd
xor
insb
lds
push
pop
mov
es
popf
sub
inc
lods
mov
inc
or
loopne
in
cmpsl
cmp
mov
add
lds
int
xor
xor
xchg
push
push
mov
repnz
notb
lods
adc
je
pop
cli
ss
xchg
xor
pop
xor
or
pop
cmp
push
xor
dec
xchg
add
jge
xchg
aaa
dec
push
add
bound
xchg
das
fsub
pop
aas
sub
insl
divl
xchg
je
mov
pop
jne
imul
cwtl
test
jmp
pop
test
or
dec
ret
jns
loope
insl
fxch
jae
jle
and
pushf
mov
push
in
dec
sub
fmuls
cmp
les
test
push
pop
pop
push
push
setne
shlb
addr16
pop
and
jmp
pop
cs
loope
ljmp
stos
sub
mov
fsts
iret
pop
adcb
push
lret
or
pop
inc
add
xlat
mov
pop
enter
adc
pushf
mov
cmp
and
test
pop
fs
push
jge
jmp
std
mov
lds
incl
mov
cmpsl
aas
fwait
cmp
mov
das
cmp
fnstsw
pop
sub
mov
pop
and
lea
xchg
xchg
cmp
mov
or
out
pop
mov
xchg
dec
push
std
pop
push
or
je
fildll
sarl
iret
test
mov
in
mov
in
lahf
out
cli
jecxz
and
pop
arpl
mov
mov
add
fadds
mov
push
xchg
leave
add
rcr
cmpsl
adc
ds
adc
movsb
cltd
addr16
add
mulb
sti
xchg
dec
fstl
out
in
jecxz
lea
xchg
cli
inc
data16
push
shl
pushf
jle
scas
pusha
call
fdivs
sub
xchg
es
sub
mov
loop
dec
sbb
dec
outsl
js
xchg
adc
mov
dec
xor
test
fcomip
jno
scas
fs
out
roll
pop
jbe
jle
inc
fs
sub
ja
mov
pop
inc
xor
popf
xlat
sbb
mov
mov
xor
push
cltd
xchg
je
cli
lock
or
fdivs
lds
shl
push
ret
fsubrs
int
push
mov
jle
jae
nop
lcall
lds
lods
imul
pop
ret
ret
popa
dec
shr
inc
scas
xor
ss
jecxz
pop
xor
jo
cmpsl
jp
xor
arpl
es
add
call
sub
jmp
aas
fwait
rorl
mov
lds
iret
mov
mov
mov
jmp
ja
pop
push
xchg
rclb
or
add
incb
hlt
out
mov
inc
add
das
call
jmp
addl
shll
sbb
imul
out
pop
leave
enter
imul
pop
lds
rcr
dec
push
xchg
int
cmovb
in
cltd
shlb
hlt
icebp
divl
mov
aam
lods
xor
xchg
sub
sbb
mov
adc
xchg
mov
push
bound
fsubs
pop
add
mov
pop
rcrl
popf
flds
jbe
jge
mov
xor
mov
pop
xchg
imul
push
fs
or
loopne
gs
xor
xchg
daa
xchg
inc
xor
adc
ja
jbe
and
cld
add
mov
sbb
in
clc
mov
jle
enter
sub
sub
push
fmuls
jae
mov
xor
outsl
push
out
repnz
loopne
sbb
mov
inc
push
mov
fadds
loope
jg
push
xlat
mov
cmpsl
icebp
and
outsb
jle
mov
aaa
xor
fwait
sbb
inc
xor
lea
sub
mov
jns
inc
rcl
jnp
and
pushf
fcmovnu
rolb
mov
movsb
jb
sub
mov
hlt
dec
dec
into
out
mov
push
dec
outsl
sub
xor
cmp
push
adc
and
addb
pop
pop
fsubrs
jbe
cmc
dec
repz
sub
js
ret
xchg
mov
popf
jb
fcoml
pop
fs
or
and
lret
jge
outsb
dec
xlat
icebp
mov
out
or
mov
pop
dec
cwtl
xor
jg
and
adc
lods
inc
or
repnz
add
mov
aam
mov
enter
push
aaa
add
cltd
js
push
and
push
lock
lcall
js
in
ss
mov
dec
ret
xchg
fnstcw
pop
out
cwtl
imul
aaa
data16
jp
rorl
jno
aaa
popf
test
fnstcw
enter
fnstsw
in
adc
fsubrs
jg
xor
gs
sbb
fs
lds
loope,pn
push
push
sub
mov
jne
test
fmuls
shll
or
ja
mov
push
jmp
adc
jp
cmp
in
adc
add
aas
dec
ljmp
dec
fisttpll
pop
push
mov
outsb
ds
dec
ljmp
xchg
lods
repnz
mov
es
movsb
aas
mov
icebp
stos
dec
lcall
pusha
jns
loop
punpckldq
cmpl
pop
jecxz
movsl
jns
jmp
sarb
mov
or
add
xchg
std
dec
dec
push
lret
pop
push
mov
rolb
je
dec
fs
xchg
and
cwtl
dec
lods
inc
dec
fcomps
fmul
data16
xchg
push
dec
fistl
jmp
loop
sub
mov
test
loop
push
popa
lods
cmp
and
test
sbbl
jno
repnz
dec
xchg
sbb
es
outsl
ret
dec
out
cmpsb
fwait
dec
and
adc
mov
insb
cli
call
das
add
lods
daa
and
mov
add
jne
cmc
inc
pop
pop
push
and
pushf
push
mov
mov
fwait
add
cmpsl
mov
leave
pusha
movsb
pop
in
loopne
xlat
push
push
popaw
mov
daa
shl
stc
cmp
xlat
pushf
pop
arpl
mov
cwtl
inc
fisttpl
mov
mov
mov
dec
out
bound
jae
je
fildll
xchg
test
adc
pop
adc
ljmp
pop
repnz
jecxz
cmpsb
jl
add
cltd
mov
pop
inc
aad
xchg
add
andl
jecxz
push
lahf
stc
dec
fldcw
call
and
daa
stos
push
imul
loop
pop
and
cmpsl
ds
fnsave
and
popf
incl
movsl
inc
push
cli
cmpsb
and
test
sbb
loop
insb
mov
mov
shr
lds
mov
mov
xchg
mov
sub
jl
inc
mov
and
sbb
xor
lret
adcl
mov
push
add
pusha
jbe
loop
mov
outsl
pusha
add
insl
dec
in
push
pushf
mov
arpl
scas
and
in
push
adc
test
or
mov
shrl
sub
pop
mov
stc
sub
pushf
in
cmpsl
sbb
mov
or
mov
loope
jecxz
push
scas
inc
pop
int3
pop
push
divb
adc
scas
add
dec
push
xor
inc
xor
dec
pushf
adc
push
orb
mov
bound
pop
ljmp
fstpt
mov
xchg
add
lcall
add
jl
dec
xchg
in
jmp
into
sahf
loopne
out
insl
lds
jg
add
mov
lcall
insl
fcom
pop
inc
mov
cmpl
mov
jno
imul
cmp
adc
add
ds
jle
cmp
adc
lahf
pop
adc
test
sub
mov
mov
add
icebp
daa
loope
cmp
jge
fwait
inc
jb
sbbb
in
clc
lret
leave
nop
xchg
xchg
xor
push
push
jp
sbb
outsb
insb
mov
inc
jecxz
dec
cmc
outsb
test
outsl
jl
add
stos
sar
inc
test
into
mov
out
push
cld
icebp
dec
pop
dec
or
cmc
rcrb
in
mov
and
mov
daa
std
outsl
sbb
sub
xor
jnp
cwtl
ret
pop
addb
dec
xchg
cld
mov
fmuls
lcall
pushf
imul
pop
repnz
arpl
and
add
mov
test
int
cmpsl
fisubrl
sahf
adc
xor
frstor
xchg
lds
dec
jno
adc
mov
mov
and
xchg
add
cli
push
das
fwait
shl
insl
and
inc
aam
jge
out
cmc
add
hlt
jecxz
or
mov
lcall
xor
pop
int3
xchg
lret
dec
lock
sub
jmp
shlb
repnz
dec
int3
scas
jmp
push
ljmp
clc
rolb
adc
cmp
and
jmp
dec
lock
fwait
arpl
mov
pop
dec
jb
inc
loop
lock
cmp
imul
lods
add
nop
outsb
je
inc
loopne
jmp
popf
mov
xor
orb
jno
dec
lea
sbb
lret
out
fwait
add
std
sbb
sahf
xchg
xlat
dec
and
sbb
add
add
outsb
fnsave
in
inc
repz
fidivl
sub
stos
dec
xchg
data16
insb
shll
jnp
pop
jp
xlat
adc
xor
dec
add
sbb
add
sub
into
lods
push
and
les
and
xor
imul
lret
jmp
adc
test
popa
movsb
pop
pop
jge
cmp
ror
inc
std
iret
add
jo
mov
lock
sahf
lods
outsl
mov
in
pop
cmp
popa
idivl
push
mov
pop
push
lock
mov
insl
addb
dec
pop
mov
lret
rol
jl
ffree
nop
xor
out
arpl
cmp
jae
fcmove
rclb
push
imul
shll
loop
cmc
out
hlt
mov
in
cmpb
call
lret
ja
xor
out
mov
clc
pop
enter
rolb
xlat
fldln2
lods
fsubr
push
xchg
scas
test
and
out
cmpsb
sbb
mov
push
aaa
rol
fs
xchg
dec
inc
fldl2t
rcrl
sbb
cli
test
fs
movb
jg
pop
mov
sbb
data16
in
xchg
lock
jo
cli
push
inc
pop
ret
xchg
mov
mov
pop
pushaw
fldcw
mov
and
or
push
sti
fisttpl
ret
icebp
xchg
sub
movsl
jl
mov
jnp
out
ret
insl
mov
adc
repnz
push
call
add
dec
jae
mov
lahf
lret
stos
adc
loopne
sub
test
insb
sbb
in
les
push
popf
frstor
or
lods
add
sbb
mov
mov
cmpsl
jg
jne
repnz
out
fsubr
mov
pop
ljmp
pcmpeqb
mov
add
imul
in
pop
jle
in
inc
xchg
fucomip
out
cmp
jecxz
mov
xchg
adcb
mov
or
mov
hlt
in
jb
rcll
lds
or
push
push
or
cmc
sti
mov
lods
data16
mov
nop
inc
or
sti
adc
jecxz
lea
fs
loop
push
sub
ficoml
jnp
inc
cmp
mov
mov
push
out
mov
enter
clc
fnstcw
xchg
mov
jb
and
hlt
mov
pop
lds
dec
ljmp
rcrb
cmp
jne
cmpsl
lds
mov
loopne
cltd
add
sbb
lods
int3
dec
push
movsb
sbbb
ret
nop
mov
push
xor
inc
push
arpl
mov
stos
sbb
je
dec
mov
ds
inc
outsl
mov
sbb
fdivl
fstpt
movl
jnp
or
pop
pop
xchg
lcall
or
scas
out
pop
and
ja
fisttps
mov
orb
fildl
xor
xchg
arpl
fwait
jp
mov
cli
or
shl
pop
testl
aas
icebp
pop
int3
add
xor
dec
popl
dec
push
daa
cld
pop
mov
jmp
icebp
lock
mov
mov
in
sub
loopne
stc
pop
jne
stos
xchg
push
popf
xchg
jmp
sbb
cmp
sbb
js
cld
dec
in
cmpb
cmp
adc
mov
or
adc
mul
cmp
movsl
ss
inc
test
xorl
mov
es
push
mov
sub
and
xlat
je
and
fnsave
sbb
pop
js
into
aas
or
add
sbb
roll
nop
ret
adc
or
loop
push
mov
cmp
std
std
sbb
outsb
xor
jnp
jae
push
in
dec
lret
je
jecxz
push
movsl
or
cmp
sarl
xor
hlt
and
addb
pop
jge
ret
add
inc
repnz
pop
sbb
mov
xor
sahf
xchg
push
jb
arpl
or
lock
in
iret
jp
mov
lds
adc
mov
mov
enter
push
sbb
repz
push
cmpsb
jmp
jecxz
lea
adc
mov
and
cmp
xchg
in
in
xor
add
mov
xchg
movsl
scas
arpl
test
xchg
mov
dec
out
out
cs
xchg
push
add
dec
repnz
cli
scas
mov
insb
jp
or
add
mov
adc
hlt
cwtl
inc
push
es
push
jp
lret
mov
insl
adc
mov
popf
imul
in
jg
cltd
in
int3
js
outsb
mov
push
adc
rolb
movsl
aad
ljmp
pusha
test
loopne
and
into
mov
xchg
or
into
mov
xchg
xchg
daa
test
bound
jle
ficompl
sarl
inc
popa
incb
push
lret
or
gs
sub
out
pop
adc
lods
psubb
mov
inc
gs
dec
xor
cmpsl
mov
inc
pop
ljmp
sbb
add
shlb
mov
jo
sbb
ds
addr16
in
pop
push
out
loope
jae
test
sbb
push
cs
rorb
sbb
or
dec
push
adc
jne
icebp
rcll
movsb
pop
lds
xor
pop
push
daa
inc
movsb
ficompl
adc
jle
cmpl
or
pop
int3
sbb
mov
jbe
or
inc
rorb
in
inc
aas
orl
aaa
cmp
jge
popf
scas
add
nop
xchg
mov
test
ja
xor
subl
aas
ret
mov
inc
xchg
dec
addb
push
xchg
sbb
and
xor
js
xor
int3
repnz
dec
testb
xlat
sbb
mov
pusha
mov
pop
mov
jle
xchg
dec
inc
insl
and
xchg
cld
dec
in
xor
cmp
dec
ja
fidivl
cmp
mov
sub
pop
or
mov
sbb
icebp
mov
xchg
lock
sbb
sub
jmp
sbb
sbb
mov
lahf
pop
mov
aam
dec
mov
scas
and
repnz
xor
insl
sub
sub
cmp
fsubs
mov
ljmp
lds
pushf
fcoms
mov
mov
in
jb
lds
inc
int
ficoms
jmp
mov
pop
mov
mov
les
mov
insl
stc
inc
pusha
push
xor
in
in
xchg
loop
push
inc
je
adc
outsl
push
popf
cli
std
lahf
repz
pop
and
inc
out
jg
push
repnz
jo
or
lods
js
dec
jecxz
daa
clc
cmc
mov
rorb
je
xor
fsubrs
jbe
ljmp
cwtl
pop
xchg
jge
sti
dec
js
jo
jmp
mov
pusha
xchg
xchg
xor
and
pop
xchg
sub
cs
mov
jne
cmpsb
repz
and
fldz
imul
jae
jnp
mov
push
mov
sbb
adc
sahf
sub
scas
xchg
imul
or
divl
jmp
pop
or
pop
fwait
dec
sarb
mov
out
xchg
cmp
out
scas
xor
bound
sbb
pop
pop
push
lret
cmp
ljmp
out
xor
push
lods
jo
js
and
enter
xchg
mov
mov
cmp
ret
dec
outsl
mov
repz
xor
xchg
mov
rorl
orb
daa
push
sub
jnp
bound
inc
dec
dec
push
js
xchg
cmp
mov
outsb
into
adcb
add
dec
sub
mov
mov
les
into
xor
sbb
cmc
lret
mov
mov
enterw
lock
mov
xor
jp
push
dec
leave
lret
sub
mov
test
add
xorb
cmp
xchg
xchg
ds
mov
int3
add
jl
leave
xchg
add
int
dec
sbb
jmp
mov
in
dec
fdivs
fsubrs
jno
insb
stos
cmpsb
pop
sbb
stc
jecxz
rcll
or
or
jb
negb
popf
lcall
xor
hlt
in
mov
xchg
xor
cmc
lahf
mov
and
xchg
in
bswap
xchg
xchg
icebp
add
xchg
inc
mov
es
add
addr16
aad
pusha
mov
gs
lahf
fwait
mov
mov
ja
and
pop
xchg
in
lahf
ret
jp
call
and
ss
mov
in
imul
inc
cmc
inc
lret
jne
mov
pushf
pop
fnstsw
clc
xor
xlat
lds
mov
xor
daa
jge
lret
and
shrl
pop
xor
mov
cld
inc
xor
and
sub
push
fdivrs
test
inc
in
ss
dec
pop
lret
xchg
loope
and
mov
mov
mov
lea
jae
je
ffreep
mov
leave
iret
sub
push
sub
and
movsl
mov
dec
fiaddl
ljmp
enter
mov
inc
pop
jno
test
jmp
push
and
ret
pusha
ja
rorb
sbb
and
sub
cmpsl
mov
xor
pop
shrb
cmc
fisttpl
data16
pop
and
imul
hlt
lea
inc
push
adc
jno
shlb
into
inc
dec
call
jo
adc
or
das
scas
fldl
fisttpll
sub
jno
dec
inc
les
std
pop
rorb
testl
pop
lret
fiaddl
imul
add
mov
andb
jecxz
cwtl
jmp
test
daa
loop
dec
imul
ja
aas
cwtl
ret
or
test
stos
or
pop
mov
psrld
and
rclb
cmpl
rorb
mov
insb
lock
mov
jl
out
imul
cs
in
add
jb
pusha
iret
sbb
pop
cwtl
enter
mov
sub
popf
outsl
fcomi
in
int3
xchg
sbb
and
mov
mov
in
popa
gs
aaa
pusha
add
mov
pop
iret
pop
mov
bound
sbb
xchg
aad
cmp
inc
push
mulb
mov
jne
add
and
fs
aas
cmpsb
rcr
rep
push
into
cmpsl
pushf
or
mov
sbb
in
sbb
jge
hlt
cmpsl
dec
arpl
xchg
insb
adc
pusha
gs
sbb
pop
mov
mov
in
pop
adc
sub
int
lods
jnp
mov
lcall
cmp
or
fbstp
adc
add
mov
xor
rcr
or
mov
lret
sahf
pusha
cmpsb
push
adc
mull
lret
cmp
call
or
push
push
push
mov
cmp
dec
clc
fdivp
xor
lahf
rclb
mov
lods
inc
test
sub
sbb
jns
es
addr16
in
or
cmpsl
sbb
mov
nop
mov
popf
rcl
pusha
dec
push
lcall
xorb
mov
lahf
or
std
push
push
jbe
sub
mov
or
iret
lcall
ret
lea
shll
push
push
aas
rcrb
test
pop
sahf
add
cmp
and
aaa
adc
sub
dec
aas
ret
xchg
adc
bound
cmp
inc
dec
push
push
push
push
shll
and
xchg
push
and
enter
dec
loop
in
xor
add
push
dec
stc
icebp
sarl
mov
fldl
sub
iret
push
mov
xor
mov
mov
test
cmpsb
adc
and
mov
lret
sahf
loope
sub
ret
cmpsl
sarl
add
mov
cmpsl
pop
stos
inc
insb
xor
bound
in
test
jo
sub
mov
or
jno
cs
clc
lock
daa
dec
cmp
mov
or
out
test
push
mov
pusha
push
or
test
leave
mov
mov
ret
cmp
shr
fldl
fcompl
mov
xchg
inc
scas
inc
je
inc
scas
das
xchg
sti
loope
cs
sub
add
dec
cmp
call
ja
ss
in
fnsave
push
jae
xchg
push
insb
pop
cmp
jns
mov
cmp
ljmp
sti
adc
pop
in
sbb
push
fsubs
sbb
mov
cmp
dec
jne
mov
jge
push
lret
comiss
fnstsw
testb
adc
out
ja
cmp
jns
mov
lret
cmp
jno
mov
out
inc
pop
push
dec
or
loopne
ret
push
stos
scas
aaa
test
rolb
std
mov
aas
fadd
adc
mov
sub
shll
xchg
pop
stos
or
inc
mov
inc
add
test
in
push
nop
cmp
jbe
or
popw
adc
xchg
pusha
and
xchg
push
icebp
jo
sti
sbb
xchg
cld
inc
sub
dec
add
fidivl
jecxz
int
push
mov
gs
xor
das
bound
inc
mov
movsl
mov
jne
lahf
divb
sub
or
xchg
sbb
xor
inc
mov
xchg
sub
into
icebp
sbb
lods
mov
xor
movsb
and
sub
pop
inc
sub
jecxz
inc
pop
sub
out
inc
pop
dec
mov
jns
movsl
hlt
jne
xchg
mov
xchg
loope
jg
xchg
push
es
dec
inc
sub
sub
inc
fwait
pop
pop
scas
mov
fldcw
scas
idivb
dec
push
cltd
add
xorl
xchg
add
lcall
jp
lds
aas
out
icebp
or
sub
scas
sbbl
cld
adc
push
jmp
mov
lret
adc
imul
push
je
xchg
mov
cmp
leave
aam
out
mov
adc
lret
int3
je
fwait
mov
leave
xchg
xor
sbb
jl
in
in
fcoms
fidivrs
sbb
adc
mov
enter
pushf
cmp
rcll
sbb
mov
iret
les
xchg
pop
repz
inc
xchg
and
or
dec
dec
and
or
mov
loopne
shll
jbe
rcrb
pop
and
mov
inc
and
loop
inc
scas
and
lock
push
cmpsb
adc
inc
test
or
fidivrl
cmp
push
sarb
call
stc
mov
repz
xor
imul
mov
xchg
add
pop
int
xor
out
sbb
xchg
inc
mov
shrl
pop
xchg
std
stc
mov
mul
cmp
dec
arpl
jg
stc
shlb
jmp
dec
iret
mov
adc
mov
and
repnz
lret
popa
repnz
push
repnz
ss
dec
pop
jnp
xchg
pushf
daa
test
aad
lds
add
sub
hlt
inc
sbb
lret
movsl
mov
rcll
out
fistps
push
shll
push
movsl
jbe
jle
ret
dec
jecxz
add
sub
add
dec
push
and
lock
mov
adc
sbb
xchg
dec
movsb
ds
aam
shlb
xchg
push
xchg
or
into
mov
jecxz
push
jnp
sbb
filds
loop
or
cltd
stc
test
and
mov
mov
fdivrs
addr16
xlat
jnp
mov
inc
jno
and
aam
ds
fstps
insb
sub
push
inc
or
or
inc
mov
lahf
xchg
insl
mov
je
jecxz
mov
out
stos
adc
arpl
rcll
mov
lcall
lcall
enter
cmc
sub
call
scas
dec
loopne
inc
pop
cmp
lods
fcom
cmp
adc
cmp
fnstsw
cltd
add
add
inc
enter
pop
xor
insb
pop
imulb
cmp
push
imul
inc
xor
xor
and
pop
add
ljmp
ror
fmul
push
shl
lods
sub
jge
mov
into
mov
cmp
pop
mov
add
loop
sub
xor
xchg
pushf
das
cmc
out
cmp
ljmp
inc
lock
jno
adc
stos
pop
nop
ds
cmp
xchg
mov
mov
push
popa
cwtl
into
xor
mov
int
scas
xor
in
stos
hlt
sub
mov
xchg
ja
jg
fcmovu
es
popa
mov
mov
mov
jl
pusha
jae
add
sub
lock
aam
cld
stc
jg
popa
add
xor
sub
xchg
jno
ret
mov
rorb
push
inc
sub
sbb
in
xor
andb
lret
pop
xchg
mov
and
and
push
pop
jns
pcmpeqb
pop
pop
mov
fisubrl
in
sahf
mov
pop
push
imul
push
in
scas
or
cwtl
push
in
sbb
in
cmp
daa
popa
xor
push
test
cmpsl
mov
xchg
sbb
das
pop
divl
lea
sahf
hlt
enter
testl
fsubrl
mov
sbb
sbb
lcall
mov
or
dec
add
mov
mov
and
mov
cld
pop
jl
mov
movsb
and
mov
rorl
movsl
xchg
and
and
pop
testl
mov
loop
cmp
add
repnz
mov
cmc
cwtl
aaa
bound
stos
add
insl
adc
idivb
jg
lea
jne
int
inc
jae
aam
adc
movb
mov
mov
stos
lahf
inc
mov
repnz
or
adc
mov
pop
or
cmp
mov
test
xor
mov
stos
testb
shlb
fldenv
in
mov
dec
cld
movsl
and
add
sub
jmp
ja
mov
scas
push
mov
adcl
jle
cmp
and
dec
out
mov
pop
rclb
or
xchg
inc
leave
loope
mov
lock
dec
aad
mul
sahf
add
repz
mov
xchg
pop
mov
inc
and
mov
add
sub
xchg
dec
js
xchg
push
in
cli
mov
popf
dec
daa
das
pop
out
sub
mov
mov
dec
rol
stc
mov
ds
mov
rclb
xchg
cmpsb
jne
fwait
lret
test
mov
mov
loopne
mov
xchg
sbb
adc
iret
inc
movsl
and
inc
std
jbe
cmc
mov
ret
adc
xchg
pop
insb
out
add
cmp
js
loop
int
jno
xchg
outsb
arpl
lahf
aam
lds
mov
in
shrl
and
adc
jbe
or
insb
and
mov
sbb
cs
jbe
lods
inc
mov
adc
into
cld
rcll
push
scas
dec
xchg
xor
fisubl
mov
repz
je
les
dec
shrb
inc
inc
mov
cmp
mov
jg
cmpb
stc
cmp
es
dec
push
push
inc
int3
movsb
orl
fldl
mov
bound
clc
jnp
xor
mov
pop
or
pop
nop
addr16
inc
pushf
std
pusha
movsb
xor
js
jno
pop
test
dec
mov
mov
pop
loop
cmpsl
add
sub
arpl
cltd
xor
sti
hlt
push
or
or
leave
mov
addl
push
push
add
xor
pop
xlat
sti
or
int
pop
repnz
push
push
fstl
lock
daa
add
lahf
dec
jnp
mov
jno
and
lds
cs
sahf
imul
enter
dec
xor
push
and
sete
push
jle
negl
ss
mov
push
cmp
xor
jp
mov
inc
out
sbb
cmp
xorb
leave
mov
adc
cwtl
jg
sub
mov
cmp
adc
push
dec
sbb
out
lock
mov
cmpsl
jg
clc
aam
push
mov
push
xchg
jg
dec
mov
pop
repz
arpl
stos
rcrl
cmp
arpl
pop
mov
scas
inc
add
xchg
pop
shr
je
or
xchg
imul
pop
xchg
cmp
dec
add
jg
fcom
fwait
xchg
mov
xor
jl
dec
movsb
mov
xor
popa
mov
or
xor
int3
adc
ret
fstpl
stc
mov
fsts
test
add
in
mov
ficoml
imul
push
sbb
jle
cmp
jp
dec
sahf
mov
push
loope
lea
aam
and
incl
xor
mul
mov
fmulp
adc
or
jmp
addr16
jno
xlat
jl
jo
push
sub
adc
and
mov
std
fisttps
push
cmp
movsb
sub
nop
sub
mov
adc
ret
ss
mov
xlat
xor
lret
fildl
cmp
outsb
push
sbb
popf
rcrb
outsl
inc
push
addr16
in
push
popf
mov
movsl
out
pop
inc
seto
pop
mov
mov
fcompl
clc
push
pop
and
test
in
inc
adc
inc
lock
jno
or
loop
lret
test
cmp
in
int
mov
push
mov
or
add
push
stos
icebp
icebp
cmpsl
xor
ss
adc
and
ss
mov
pop
add
or
mov
sub
pop
mov
rcll
mov
dec
pop
js
or
das
mov
cmp
inc
out
imul
or
mov
mov
in
mov
xchg
ret
mov
cmpsb
and
stos
fadd
pop
xor
jmp
sar
xchg
pop
daa
jmp
das
or
rolb
inc
jle
and
dec
jecxz
mov
mov
sbb
fcmovbe
pop
xor
in
movsl
dec
adcl
cmp
shrb
ret
fnstcw
rcrl
xchg
mov
jbe
and
mov
push
jo
lret
and
scas
sub
pop
fcmovu
ds
jge
fstps
jge
sbb
push
in
adc
imul
ret
xchg
adc
sub
jbe
ret
mov
jmp
bound
into
loop
xchg
repnz
fstp
xchg
outsb
xor
sub
pushf
pop
in
or
nopl
movsb
mov
outsb
js
in
pop
lret
add
dec
dec
arpl
push
addl
push
mov
or
ss
rol
iret
js
xor
cltd
push
rorb
dec
jo
scas
lods
aas
xchg
repz
mov
mov
xchg
in
xlat
sarl
andl
cmp
rolb
jl
scas
jo
cs
scas
jns
inc
xchg
mov
mov
inc
iret
mov
mov
not
add
jmp
sub
jns
cmp
stos
out
adc
enter
cmpsb
rclb
mov
pop
adc
lods
test
popf
sub
int3
in
out
jg
mov
pop
movsl
mov
jge
inc
add
mov
inc
sar
pop
inc
push
fdivr
sub
leave
cmp
pop
fdiv
sub
loope
jnp
inc
mov
rcrl
sbb
dec
xor
std
and
sub
mov
outsl
pusha
out
xor
rcll
add
out
adc
insl
dec
popa
icebp
test
cmp
cld
orb
or
mov
inc
and
or
fisubrl
fcmovb
cld
or
xlat
orl
inc
sub
dec
adc
js
cmp
sub
iret
out
and
pop
mov
cltd
aam
push
mov
rcrl
and
outsb
jo
and
add
xor
dec
js
add
xor
push
loopne
cs
ljmp
sbb
sbb
icebp
sbb
imul
xlat
imul
and
mov
in
aas
sbb
xor
rcl
cmp
iret
sub
xor
ds
outsb
outsl
pop
pop
jmp
test
mov
lds
dec
push
in
push
add
push
je
daa
sub
les
push
cmp
cwtl
jnp
xchg
fs
sbb
jb
and
xor
sub
shrl
and
dec
jnp
jno
mov
push
les
push
outsb
mov
xor
xchg
push
out
sub
and
or
push
mov
or
call
push
jge
jmp
pop
jge
sbb
add
sub
fildl
sbb
in
pop
mov
shll
sub
or
std
nopl
push
adc
inc
scas
cmp
out
mov
sti
stos
sub
adc
pop
push
ret
push
nop
xchg
and
dec
dec
push
ljmp
or
rcll
arpl
jecxz
cli
xor
pusha
mov
sbb
lods
in
add
mov
jno
pop
push
push
outsb
aad
fmul
sti
add
cmp
jnp
fsubrl
arpl
sbb
mov
fidivl
in
cmp
cld
mov
pop
cmp
jg
ss
push
jbe
and
cmp
ljmp
pop
dec
or
add
pop
out
and
stos
dec
mov
insl
mov
or
incb
int
mov
test
lret
mov
xor
dec
je
xchg
sub
das
mov
pop
and
arpl
mov
add
jl
repz
iret
mov
cmp
insl
cmpsl
shlb
clc
adc
hlt
push
xor
rcl
or
mov
sbb
pop
fcmovnu
ja
sbb
aas
shll
repz
mov
loope
xchg
in
and
mov
add
mov
test
xor
imul
push
inc
outsl
mov
dec
in
insl
or
leave
xor
mov
int3
dec
pushf
mov
mov
bound
mov
xor
je
mov
data16
iret
inc
lahf
aas
in
je
into
dec
xchg
int3
and
call
dec
cld
shr
aas
gs
jb
sbb
sub
cld
mov
rclb
mov
out
ds
push
lcall
pusha
fistl
rcl
mov
jge
mov
xor
in
dec
mov
pusha
mov
pop
xchg
mov
push
add
jae
xor
imul
test
sti
pusha
in
lea
sbb
push
cs
ficompl
push
cli
mov
cs
cs
arpl
jmp
mov
adc
add
cmp
dec
cmp
add
xor
xorb
dec
mov
inc
lods
add
cmp
shll
cmc
pop
dec
clc
popf
dec
jmp
xchg
cmp
mov
sub
xor
sbb
sbb
pop
ret
ja
xchg
add
xchg
or
lods
mov
xor
mov
in
clc
addr16
jbe
adc
sub
leave
dec
jno
inc
loope
sbb
jge
or
andl
je
mov
enter
mov
orl
std
xchg
call
repz
icebp
jecxz
inc
xor
je
jb
rcrb
out
cmpsb
scas
and
xor
sbb
cmp
inc
or
push
loop
sti
cmp
add
std
sub
jmp
jno
jmp
movsl
sbb
or
mov
call
sub
push
lock
mov
fnstcw
adc
loopne
jns
cmp
dec
cmpsl
dec
jae
int
test
adc
dec
sub
mov
lcall
inc
int3
or
mulb
xchg
dec
scas
lret
movsb
dec
fwait
pop
in
lret
out
je
fldenv
xor
inc
fwait
pushf
sub
push
inc
scas
adc
in
repnz
fwait
test
dec
push
push
push
outsb
dec
stc
push
or
xchg
pop
adc
inc
ficomps
sbb
pop
dec
inc
sbb
popa
enter
inc
xlat
icebp
xlat
jo
ljmp
jne
add
scas
or
push
inc
push
pop
sti
mov
add
inc
shlb
and
mov
and
sahf
mov
movlps
sahf
xchg
pop
jne
divl
decb
addr16
pop
test
imul
xor
nop
insl
leave
scas
jg
cli
dec
je
insb
in
lcall
out
mov
lcall
push
pop
xchg
inc
pop
push
bound
cmc
aam
pop
addr16
jecxz
imulb
dec
inc
and
xchg
mov
inc
jae
lock
cmpsb
fsubrs
int3
adc
bound
xchg
mov
mov
xchg
sbb
icebp
aad
pop
mov
lods
divb
cmp
cltd
cld
ja
aaa
fisubl
repnz
jae
outsb
scas
pusha
stos
je
sub
and
mov
cld
and
imul
outsl
outsl
paddsw
sbb
les
enter
dec
dec
jno
lret
insl
xor
dec
mov
es
jmp
sbbb
rorl
mov
jl
add
fisubs
push
fdivrp
push
cmp
push
bound
xchg
data16
mov
mov
sar
xor
sub
mov
mov
push
dec
push
mov
cmovae
sbb
fistl
js
pop
push
scas
ret
fdivs
inc
pop
lahf
in
repnz
push
sbb
ja
dec
repz
inc
loope
xchg
loop
xchg
int3
pop
jg
jbe
jl
cmc
adc
divb
cmp
xorl
in
shl
js
ret
lahf
loope
xchg
push
sti
jae
and
jne
arpl
xor
mov
dec
cmp
mov
pop
add
scas
pusha
mov
push
inc
mov
jns
dec
sub
je
inc
insl
mov
stc
fmuls
inc
mov
jecxz
sub
inc
sub
and
jle
sbb
pusha
push
stc
jecxz
repnz
loope
fildll
and
fisttps
jge
mov
push
fwait
mov
js
gs
sbb
jbe
mov
insl
pop
push
xor
adc
negl
bound
jns
push
xor
inc
jecxz
and
mov
push
cmpsb
pushf
fldl
sahf
subb
icebp
iret
neg
jecxz
imul
scas
das
and
dec
jle
jae
insl
push
test
or
int3
pop
or
js
jb
movzwl
mov
mov
pop
aaa
scas
bound
and
andl
imul
pop
lods
daa
daa
xor
out
mov
pop
shrl
rcll
mov
into
lock
push
insl
mov
cmc
outsb
mov
jmp
adc
mov
gs
loop
mull
stc
cli
cli
popa
div
mov
ja
pusha
fisubrl
jg
insb
cltd
pushf
mov
sbb
jl
shrl
mov
dec
imul
dec
aas
filds
lds
cmpsb
scas
cmpsb
movsb
jecxz
push
cmc
idiv
sub
mov
pusha
in
inc
lahf
adc
jbe
push
xchg
aas
sar
push
inc
jbe
xchg
xchg
jge
idiv
outsb
sub
gs
fcmovu
jecxz
fldenv
and
mov
nop
scas
jo
outsb
aaa
xchg
leave
jno
mov
jp
scas
pop
inc
test
sub
insb
cli
jnp
call
add
test
jbe
adc
sub
dec
incb
addb
cmp
mov
popa
mov
ret
mov
xchg
xor
mov
inc
gs
pop
dec
imul
loopne
or
xchg
sbb
and
mov
pop
xor
fcmove
movsb
fcompl
sbb
popf
or
imul
and
movsl
aam
xchg
scas
adc
sti
dec
sti
mov
dec
loop
mov
pop
cmpsb
out
sub
loopne
dec
stc
cmp
inc
aad
pop
gs
pop
inc
dec
xor
fildl
mov
pop
sarb
xor
inc
adc
push
mov
add
xchg
bound
push
push
mov
into
cmpb
bound
or
or
imul
cmpsb
sbb
sub
hlt
add
mov
and
jge
std
lea
pop
clc
ss
dec
mov
repnz
sub
cmp
jae
fisubl
xchg
dec
fwait
sub
loope
in
loope
mov
xor
jns
dec
cmpsb
sub
cmp
jg
shlb
pop
loope
adc
imul
mov
ss
incl
mov
dec
fwait
inc
add
jecxz
aam
pop
subl
sbb
test
rcll
ficoms
or
push
cmp
iret
adc
fucomip
cmpsl
lea
pop
jmp
fcmovb
jl
lds
mov
jne
jl
fisubl
lcall
repnz
xor
mov
xor
mov
and
xlat
add
xor
mov
or
pop
or
mov
stos
inc
xor
mov
fistl
jnp
adc
cmpsl
cmpb
jnp
ret
pop
in
in
and
push
lods
pop
popa
sub
cmp
sar
sub
into
cltd
outsb
xor
sbb
push
enter
sub
repnz
insb
or
filds
insb
scas
or
jecxz
dec
xchg
test
dec
in
xchg
sub
insl
int3
inc
push
sarl
sarl
pop
stc
jge
mov
in
dec
dec
or
ret
inc
jecxz
cmpsb
cmp
xchg
jno
jae
sub
mov
dec
cmp
cmp
mov
insb
mov
es
test
adc
cmp
xor
lds
stos
notb
or
int3
mov
add
pushf
bound
cmp
sbb
cmpsl
xor
and
push
lock
ret
lahf
in
dec
push
sbb
jne
addr16
imulb
std
mov
lahf
in
nop
sahf
jnp
cmp
sub
cmp
dec
xchg
xlat
pmaxub
inc
out
or
add
mov
scas
push
mov
jae
mov
mov
subl
adc
ja
push
pop
lods
sahf
and
jbe
dec
ja
in
lahf
add
jno
cmp
push
loopne
fisttps
add
out
pusha
in
inc
push
push
addr16
mov
push
lret
lods
pop
cltd
jb
dec
mov
stc
mov
loope
imul
outsl
jl
pop
add
in
or
push
pushf
jno
inc
iret
lds
dec
lds
ja
push
mov
jo
push
int3
xchg
adc
cld
xlat
out
and
pop
inc
int
loop
inc
mov
mov
add
mov
fldt
pop
inc
or
fwait
sub
push
insl
rorb
push
test
inc
push
out
mov
sar
push
pop
lret
rolb
jnp
cmp
insl
out
outsb
cmp
and
movsl
pushf
stos
pop
jbe
pop
push
sub
sbb
inc
mulb
pop
adc
ficoml
fisttpll
gs
push
push
lret
xchg
mov
jecxz
arpl
dec
js
push
pushf
outsb
xchg
xchg
repz
mov
fstl
data16
out
jb
daa
mov
in
imul
ficoml
inc
stc
or
hlt
cmp
dec
std
fmuls
jg
push
or
inc
dec
mov
jecxz
fdivl
clc
gs
pop
adc
pop
mov
pop
mov
enter
call
shl
xchg
jp
test
add
popf
cmpsb
fiadds
xchg
adc
adcl
stos
in
cmpsb
mov
push
popa
ljmp
sarb
mulb
push
mov
in
dec
dec
add
sub
call
inc
or
stc
enter
repz
dec
mov
jp
or
test
jmp
gs
adc
lret
scas
les
inc
or
push
mov
inc
add
jp
cmp
aas
bound
jge
sbb
dec
xchg
xchg
add
stc
bound
sti
sbb
call
test
cmp
push
add
enter
sbb
icebp
out
stos
cmp
test
xor
insl
or
cmp
rolb
sarb
sti
or
sub
lcall
je
and
pop
fisttps
mov
or
xchg
loop
xor
inc
test
loope
test
sahf
int
or
adc
inc
pushf
cmp
xchg
testb
iret
mov
fstps
lods
cmpsl
clc
cmp
xor
insl
push
inc
andb
mov
call
imul
cli
shr
jne
outsl
pop
incl
jle
inc
fidivl
cmpsl
addr16
fdivrl
mov
xor
out
ljmp
test
cmpsl
mov
pop
xchg
dec
shrb
addb
jmp
sbb
cmp
adc
rsqrtps
dec
mov
add
ja
cmp
mov
and
xlat
dec
mov
outsb
push
bts
out
or
rclb
mov
lcall
mov
in
stos
pop
jmp
in
push
imul
iret
in
shrb
push
out
pop
push
lret
pop
movsb
outsb
into
in
push
jle
xor
sub
in
xchg
aad
push
sbb
mov
and
jno
inc
jbe
sub
outsl
enter
add
in
jb
enter
mov
mov
call
ret
fucomi
xchg
clc
pop
in
cmp
ds
call
icebp
nop
or
mov
inc
and
scas
push
sti
test
mov
stc
jmp
stc
std
loop
test
je
es
xor
cmp
pop
movsb
cmp
cmc
cld
in
jo
sbb
rorl
mov
jl
mov
shl
adc
xor
jns
mov
rorb
push
ljmp
fs
loope
mov
add
shl
ficoml
bound
pushl
loope
add
push
int3
rorl
fwait
xchg
fimull
mov
in
cld
mov
mov
mov
pusha
jle
movsb
insl
std
sbbb
mov
das
inc
add
sub
test
testb
mov
push
adc
das
pushw
sbb
or
inc
mov
jg
push
fcmovnu
xor
jge
xchg
roll
fmull
mov
mov
movsb
test
mov
fnstcw
cmp
dec
add
into
xchg
sub
daa
jb
pop
ret
xchg
sub
rcll
push
push
xchg
jecxz
pop
stc
out
hlt
pop
mov
cld
test
add
loope
and
cwtl
popa
lret
jne
neg
call
movsb
outsl
lahf
xchg
inc
loopne
sbb
and
inc
lods
pop
adc
test
dec
in
aas
or
xchg
ret
cmp
sub
xor
loop
dec
add
rcr
jecxz
dec
aam
shrl
push
cs
fmuls
dec
jne
loopne
add
pop
js
adc
mov
sbb
xor
add
mov
imull
lods
jl
mov
pop
xorb
xor
inc
leave
out
xchg
mov
iret
aad
dec
stc
add
cmp
call
push
lods
nop
dec
pusha
pop
xchg
jl
into
or
outsl
jg
add
add
cvtps2pi
and
lods
outsl
jle
add
adc
cmpsl
lock
ror
mov
push
mov
cmpsl
and
rcrl
sbb
inc
sub
inc
jnp
xchg
nop
icebp
or
cmp
xchg
out
ja
popf
cli
hlt
mov
lock
add
mov
outsl
mov
lock
sbb
push
cmp
movsb
push
fcompl
popf
iret
popf
in
mov
add
pop
ret
xchg
and
jmp
jbe
fwait
cld
jmp
lcall
add
or
rcrb
sbb
push
lret
pop
dec
notb
inc
dec
popa
dec
into
mov
adc
dec
sub
cmp
out
mov
sbb
xchg
std
ljmp
js
adc
xchg
js
in
dec
sub
pop
cmp
fucomp
adc
aaa
xor
cmp
dec
cltd
jmp
jmp
jg
lods
sub
jo
xor
mov
lcall
cmp
or
pusha
imul
dec
into
push
mov
xor
imul
jo
xchg
lret
fcmovnbe
jnp
pop
int
inc
jnp
mov
inc
movsb
mov
sahf
sbb
bound
add
mov
into
movsb
int
pop
sti
sti
or
rcrl
test
jnp
stos
jl
dec
aam
int3
sub
test
jl
mov
mov
sahf
lret
rclb
stc
mov
push
gs
ret
aam
fwait
mov
fidivrl
scas
popf
repnz
lret
jle
repnz
fdivs
sbb
scas
mov
jne
add
xchg
lret
pop
cmp
xchg
mov
test
cwtl
pop
push
push
movsb
add
sub
cli
mov
or
loopne
push
popa
mov
stc
iret
sti
stc
dec
dec
xchg
sahf
push
lock
pop
cmp
pushf
mov
mov
pop
xchg
mov
pop
ret
dec
pop
xchg
std
xchg
xor
dec
jo
jb
out
mov
sub
loop
inc
andb
mov
and
add
insl
cmp
stos
mov
test
jae
sub
std
nop
js
aam
and
push
xchg
hlt
dec
cmp
lret
pop
fwait
repnz
xchg
inc
shr
loope
mov
test
inc
jle
and
or
and
js
push
arpl
xchg
cld
mov
xorb
add
cmp
cli
cmp
xor
sbb
cmc
xor
sub
or
rcr
cli
sbb
adc
hlt
jbe
adc
jp
fwait
pop
jp
jge
xchg
pop
pop
test
orl
cmpsb
adc
mov
leave
mov
shlb
xor
push
sbb
xchg
xchg
xchg
adc
lret
int
and
mov
xor
lods
shlb
add
or
jecxz
scas
sub
ret
push
std
and
andl
incl
mov
cmpsb
or
scas
mov
in
repnz
jp,pn
fmulp
pushl
adc
pop
repnz
negb
inc
pop
ss
push
and
sti
lods
cmp
imul
jp
repnz
fstl
call
test
mov
outsb
pop
mov
rcr
jmp
mov
xor
dec
mov
push
cs
inc
push
mov
lods
movsl
adc
shrb
bswap
sbb
into
stc
sarl
lods
loopne
lock
pop
xchg
fcomps
mov
push
ret
into
xchg
sub
xchg
xor
out
dec
pop
loop
pop
add
stc
jl
sarb
movsl
adc
add
add
scas
test
push
adc
lock
lahf
push
test
jle
imul
add
aaa
jmp
inc
and
movl
pop
xchg
push
mov
mov
mov
scas
sub
sub
into
dec
pop
arpl
jge
ret
gs
pop
mov
dec
ja
icebp
and
mov
loopne
push
push
into
pop
ljmp
xor
push
int
xorl
jno
insb
fwait
mov
mov
dec
lret
dec
jns
stos
jno
cwtl
ss
add
cmp
inc
push
popa
test
cmp
and
cli
cld
pop
sbb
outsb
ds
and
mov
jnp
cmpsb
int3
fstpl
popf
aaa
dec
cmp
sbb
test
or
ret
lds
gs
mov
daa
sub
adc
push
cmc
adc
outsb
cmpsl
pop
fdivs
shlb
into
and
fwait
sarb
xchg
rolb
test
xchg
inc
in
add
jno
iret
arpl
movsb
aaa
jns
inc
cs
inc
inc
ror
push
mov
mov
cwtl
fistps
mov
and
add
scas
xor
ret
clc
push
leave
shlb
mov
test
and
fstps
mov
push
in
lret
and
ret
sub
adc
mov
lret
mov
lea
mov
xchg
mov
xchg
push
mov
dec
aaa
sbb
jno
ljmp
pop
fisubrs
lcall
fildll
cmp
arpl
into
es
pop
insb
loope
pop
jae
sahf
cs
jnp
adc
mov
dec
mov
rorl
and
and
mov
xor
andb
orb
fdivr
push
push
sub
sbb
jnp
xchg
mov
adc
jle
push
sahf
or
or
jge
adc
cmp
jecxz
or
ret
out
xor
sub
dec
sarl
cltd
jnp
sub
pop
cmpsb
and
shll
inc
jle
jge
mov
sbb
icebp
inc
cmc
push
out
ret
sbb
fisttpll
or
xlat
jge
lret
xor
insl
mov
lret
mov
jne
sub
jp
pop
aaa
ret
add
push
fs
icebp
sbb
in
inc
xor
jo
adc
xor
xchg
dec
gs
call
pop
das
lock
fmull
dec
or
sub
mov
sbb
ss
nop
adc
shll
or
mov
or
imul
fldcw
jmp
out
in
das
mov
pop
sbb
ret
dec
jmp
lods
jns
sbb
adc
cli
or
jg
mov
sub
dec
shl
or
inc
sbbb
xchg
mov
mov
and
ljmp
mov
cmpsb
jmp
sub
dec
inc
mov
rorl
pop
cli
cs
or
sbb
mov
dec
stos
mov
mov
leave
push
sub
shlb
jnp
xor
xorps
daa
cmp
loopne
sbb
pop
push
stos
xchg
loope
stos
pop
sbb
mov
pusha
sbb
shll
fcmovb
sbb
sub
lahf
sbb
push
mov
sbb
fstps
inc
sar
ret
mov
ljmp
fmulp
mov
push
or
jae
sbbb
sbb
dec
mov
es
lods
aad
xor
mov
add
cld
ja
mov
dec
mov
fisubl
aam
repz
inc
jmp
cmp
mov
pusha
xchg
cmc
sbb
cmp
mov
or
clc
inc
mov
inc
outsl
sub
jb
cmp
xor
out
mov
outsl
pop
scas
jo
adc
mov
add
stos
pop
cld
lods
dec
sbb
mov
imul
mov
and
or
insb
and
in
xchg
in
push
adc
adc
add
cltd
repz
sbb
daa
mov
sub
out
jecxz
xchg
mov
inc
or
std
dec
mov
jb
es
ljmp
xor
fildll
ljmp
stos
mov
into
popa
popa
repz
nop
ljmp
test
xor
jge
mov
fadds
sub
out
das
mov
or
into
loop
fst
loopne
fcomps
clc
popa
imul
not
cmp
in
fneni(8087
ss
or
xorb
lock
and
insl
gs
jp
dec
jnp
lods
popa
dec
mov
jl
add
out
fnstsw
test
into
jns
aaa
out
test
pop
or
inc
imul
fmul
arpl
test
test
xchg
sbb
jmp
adc
mov
dec
shrb
pop
mov
jmp
loope
xor
inc
sub
pop
pop
mov
fwait
inc
ror
mov
leave
inc
mov
xchg
jnp
adc
fisttpl
mov
and
repz
push
imul
pushf
shr
rcr
hlt
js
xor
nop
fcomps
in
out
rclb
cs
cmpsb
jb
out
je
les
shrl
fnstsw
jnp
inc
stc
add
mov
xor
addr16
inc
xchg
xor
sub
push
rclb
xor
xchg
dec
mulb
push
int
mov
pop
rol
push
xchg
mov
in
pop
mov
in
cmp
pop
cmc
push
jl
fisubl
aam
sub
cmovl
jl
pop
lock
mov
fbstp
popa
enter
xor
sub
shll
add
add
aas
in
adcl
push
ja
iret
xchg
pop
cmp
mov
cmc
stos
lock
dec
in
pop
mov
sub
cmpsb
add
push
sbb
inc
repnz
mov
and
stos
aam
push
fwait
div
inc
nop
lret
loopne
xlat
mov
aaa
inc
out
in
stc
int
sbb
test
inc
mov
in
dec
das
ja
out
jmp
nop
dec
imul
ret
mov
ds
cs
data16
leave
cmc
jae,pt
fidivs
daa
or
adc
xchg
dec
in
aas
dec
jmp
stc
dec
in
cltd
sub
sbb
or
and
fsubrs
sahf
cmp
fsubr
loope
test
bnd
repz
out
dec
lock
fidivs
add
rorl
mov
adc
mov
push
inc
test
cwtl
dec
in
or
es
jbe
xor
mov
push
imul
mov
push
scas
das
shr
fcomps
and
push
push
jecxz
mov
sub
imul
int
imulb
sbb
inc
jne
push
push
add
adc
and
sub
out
jae
mov
push
hlt
xchg
add
xchg
in
inc
mov
daa
add
loope
hlt
fwait
out
gs
in
fisubs
in
mov
pop
ljmp
pop
pop
inc
incl
fs
dec
into
mov
inc
cmp
js
mov
cs
adc
addr16
xchg
pop
add
in
fsubr
rol
sub
subl
add
mov
xchg
xor
mov
and
call
pop
repz
mov
notl
push
js
adc
push
out
sub
mov
ret
mov
jae
push
fisttpl
rol
and
or
sub
mov
mov
sub
pop
inc
adc
sqrtps
add
bound
cld
cld
sti
xchg
cmpl
xchg
rcrl
movl
faddl
xorb
dec
cmpsl
std
xor
loopne
push
shrb
push
push
dec
mov
in
sbb
hlt
inc
inc
xchg
std
mov
push
bound
dec
lahf
fists
aad
sti
jb
xor
movsl
clc
xchg
jo
insb
xchg
pop
popa
mov
xlat
out
fldenv
fimuls
xchg
jl
push
je
enter
inc
adc
jbe
imulb
xchg
pop
int3
aam
js
dec
xchg
loopne
push
xor
in
outsb
adc
pop
inc
and
rep
gs
int3
add
inc
int
es
or
gs
orl
sub
cmp
and
add
inc
movsb
fisttpl
cmp
ficoml
fdiv
fcompl
call
es
fidivl
sbb
dec
repz
sub
or
scas
aaa
pusha
sub
sub
xor
mov
movsl
push
inc
je
mov
aam
or
and
xchg
dec
mov
lods
push
jne
xor
pop
int3
or
fwait
xchg
and
scas
mov
push
dec
ss
pop
in
sbb
rorl
inc
dec
xchg
in
cwtl
mov
insl
push
dec
lea
cmc
jo
or
popf
dec
fprem1
call
gs
pop
adc
imul
cmp
adc
add
jo
fldenv
sbb
pop
movsb
dec
mov
dec
sbb
or
sbb
out
shll
repnz
dec
nop
cmpsl
and
je
jp
xor
fstpl
dec
push
inc
sub
mov
or
jle
and
inc
lods
nop
push
rorb
mov
gs
adc
pop
mov
jbe
icebp
mov
jbe
repz
lret
sbb
or
sub
cs
jne
ret
xchg
outsb
iret
aam
dec
repz
push
bound
mov
mov
fildl
and
and
test
enter
mov
push
mov
ror
xchg
mov
in
out
loopne
lret
lahf
push
inc
sub
xchg
test
testb
test
aaa
leave
ljmp
and
mov
mov
sub
inc
push
jb
adc
gs
repnz
push
fs
xchg
xlat
cmc
xchg
cmp
xchg
xchg
cmp
and
add
sahf
sub
repz
cmp
jb
cmp
cmp
jmp
mov
add
pushf
lock
imul
or
movsb
js
out
mov
mov
fidivrl
dec
sti
scas
mov
push
enter
das
pop
aaa
xor
adc
repnz
mov
mov
jp
lods
mov
mov
ja
push
inc
arpl
add
addr16
mov
jle
xchg
mov
xor
xchg
mov
mov
or
test
push
mov
scas
adc
push
push
ds
mov
int
cmp
cs
xor
cld
dec
and
cmp
xchg
sub
dec
or
ljmp
ja
mov
cmp
mov
sbb
pop
mov
fneni(8087
add
pop
fisubl
sahf
adcl
push
in
mov
push
ss
push
cmp
and
mov
dec
jmp
insb
push
pop
pop
dec
sub
jae
loopne
or
enter
shrl
lea
xchg
es
adc
out
test
mov
mov
outsb
and
mov
pop
movsb
add
std
test
outsb
pop
and
je
repz
sub
dec
lods
js
or
lret
jnp
decb
mov
mov
or
and
sbb
dec
popf
js
in
mov
fisttpl
sub
dec
in
mov
cmp
mov
ficompl
subb
and
add
pop
add
xor
icebp
lcall
call
loopne
icebp
ljmp
stc
or
aaa
fdivrs
sti
enter
push
push
rcll
dec
xbegin
push
cmp
jb
jl
repz
push
inc
insb
lret
gs
scas
movsb
push
sub
and
jno
mov
cli
in
pop
sbb
push
dec
adc
or
sub
aam
lret
scas
lock
xor
jg
mov
cltd
test
in
add
cmpsl
and
fs
scas
jne
loopne
push
jne
and
xchg
in
test
add
call
inc
popa
mov
ds
pop
sbb
adc
add
pop
rorb
daa
or
lock
dec
mov
xlat
push
gs
dec
cmp
test
jnp
rcll
scas
sbb
out
cmp
xor
adc
sarb
push
inc
adc
clc
adc
mov
inc
shll
sbb
sbb
xchg
add
in
push
mov
jmp
xchg
scas
pushf
pop
mov
jno
jp
shr
or
out
daa
mov
fcmovnbe
jnp
mov
mov
lods
jg
aam
mov
and
sbb
mov
inc
dec
shrl
cmpsb
mov
fstpl
cmp
out
xor
jecxz
push
inc
jge
cmp
ljmp
movsl
imul
test
push
xchg
int
lret
imul
movsl
xor
push
aad
rcll
out
xlat
pop
jecxz
stos
cmpsb
pop
jae
inc
scas
stos
or
sub
loopne
xchg
or
mov
aas
insb
cmp
mov
insb
push
bound
and
mov
mov
sbb
fbstp
lods
adc
pop
and
roll
stos
mov
fdivrs
in
and
mov
shlb
xor
cmp
add
mov
jge
jmp
repz
aaa
add
loope
sub
add
sti
in
into
xlat
pop
fcoms
add
and
repnz
lds
jl
or
popa
inc
adc
cmpsb
ffreep
pop
pushf
iret
loop
das
sbb
enter
ja
in
push
push
lcall
sub
mov
pop
push
ds
call
adc
std
xchg
dec
xor
and
es
fwait
imul
fmul
mov
jno
pop
mov
sbb
or
jmp
or
sub
and
in
mov
sub
out
mov
lcall
ljmp
xchg
sub
fnsave
inc
mov
xchg
je
xchg
push
push
mov
mov
mov
add
imul
mov
ss
and
mov
les
scas
cmpsb
xor
and
out
inc
jnp
jne
xchg
inc
fcmovu
popf
repnz
outsb
sarl
sti
int
mov
hlt
int
pop
or
iret
jno
daa
xchg
sbb
aas
fcmovne
cs
xchg
mov
add
xor
sbb
cmpsl
pop
jge
sub
int3
mov
or
mov
nop
pop
pop
stc
cmp
xlat
push
and
xor
dec
adc
stc
xchg
sub
sarl
mov
cmp
loopne
mov
jb
fisubrl
cwtl
fcomp
mov
aaa
xchg
jno
loop
sub
or
dec
sbb
push
enter
mov
or
into
cmp
shl
xorl
add
arpl
mov
sbb
icebp
cmp
mov
xchg
push
je
push
insb
mov
jl
mov
adc
out
lret
mov
push
or
push
sub
cmp
mov
sbb
xor
add
sbb
push
xchg
push
es
mov
mov
pop
rcrb
ss
or
pusha
jmp
inc
ss
cs
mov
jmp
ljmp
rorl
or
add
test
push
ds
icebp
aad
fwait
add
jle
jno
xchg
pushf
movsb
pop
sub
and
lods
enter
in
cmp
decb
xor
jo
lods
pop
xchg
mov
mov
sahf
sahf
pop
push
imulb
inc
insl
or
push
jecxz
aaa
dec
mov
and
gs
xchg
imull
lcall
add
push
fcompl
mov
cmc
nop
sbb
sbb
pop
and
aam
mov
loopne
clc
popa
inc
fimuls
jb
scas
out
push
lret
movl
mov
jl
sbb
sahf
xchg
stos
sub
iret
cltd
fiaddl
icebp
dec
pop
and
dec
push
adc
test
push
iret
test
test
mov
rorb
dec
sub
leave
fldt
fisttps
push
pop
or
mov
std
insl
fsubrp
lret
arpl
repz
out
insb
test
mov
pop
das
rorb
jne
pop
xchg
inc
xor
and
popa
adc
push
sahf
xor
dec
sti
adc
shrl
subb
fstl
push
stc
das
adc
lret
push
in
mov
inc
out
xchg
xchg
cmp
pop
bnd
in
test
dec
outsb
adc
pop
dec
in
outsl
fwait
hlt
int3
push
fnsave
popa
or
out
jae
inc
add
fwait
inc
iret
xchg
stc
jnp
adc
fxch
sub
cmp
mov
stos
stos
mov
fxch
mov
int
lods
dec
in
es
cwtl
sub
xor
lods
mov
sahf
dec
arpl
cmpsl
and
add
notb
dec
in
sti
test
and
mov
psraw
das
or
jecxz
lahf
int
mov
test
aam
ja
mov
sbb
xor
add
inc
fs
aam
mov
add
cmp
dec
dec
mov
stos
cmpsl
sub
xchg
out
imul
in
jp
imul
sbb
adc
add
lahf
pop
xor
cmc
xor
shlb
mov
out
adc
clc
sbb
inc
mov
mov
std
jnp
fisubs
jns
popa
repz
lods
dec
lahf
stos
jnp
cmpsl
push
jl
aad
cmp
push
sbb
or
sbb
sarb
outsb
or
inc
sahf
push
icebp
bound
sub
fnstenv
dec
addl
adc
mov
dec
push
loopne
jg
enter
in
adc
mov
add
mov
mov
test
dec
inc
in
hlt
outsb
mov
jl
std
push
fidivs
sbb
mov
rcl
inc
mov
mov
lea
push
mov
lret
mov
jle
or
inc
dec
inc
jmp
xor
push
loop
inc
mov
mov
je
stc
outsb
not
pushf
sbb
add
je
ds
inc
sbb
dec
cli
jae
pop
xor
into
sub
xchg
das
ret
push
fnstsw
sub
setbe
sub
cmpb
mov
out
mov
insl
cmpsl
repnz
inc
mov
push
out
sub
sub
rcll
cmp
push
cli
cltd
rcll
sbb
mov
jno
into
repz
add
xor
dec
cmpsl
and
arpl
mov
arpl
paddsw
sbb
popa
adc
rolb
fisttpl
loopne
dec
jnp
popa
fistl
pop
test
xor
mov
pop
jmp
adc
stos
addr16
shlb
loope
iret
sbb
nop
mov
movaps
jo
xchg
imul
push
gs
pop
push
mov
jl
xor
mov
bound
jns
cltd
dec
xor
adc
inc
mov
add
and
mov
cmp
push
add
not
pushf
sub
mov
out
mov
call
mov
iret
clc
addr16
push
xlat
add
mov
int3
sbb
push
idivb
test
mov
or
xchg
pop
mov
sti
daa
hlt
gs
fldcw
xchg
leave
loopne
sbb
inc
sub
jae
adc
mov
lret
inc
adc
mov
pop
cmpsb
insl
mov
jae
inc
loop
adc
push
and
sbb
cmp
test
je
inc
mov
cmp
and
jbe
sbb
rcrb
scas
test
jnp
cmp
mov
loope
js
repz
repnz
jmp
outsb
pusha
lret
mov
push
mov
pslld
fisubs
cmp
pop
fwait
xor
call
movsb
imull
cmpsb
mov
jmp
mov
lods
sbb
inc
sub
int3
test
jp
int
pushf
pop
inc
mov
cwtl
call
cld
fwait
or
icebp
mov
shrd
xchg
mov
pushf
lods
mov
mov
cmp
ja
jg
xlat
adc
sti
and
lds
dec
fmuls
add
shlb
ss
inc
std
faddp
jge
sahf
bound
shld
cwtl
dec
dec
dec
and
leave
jl
repz
inc
sahf
jmp
ss
sbb
movsb
out
cmp
insl
add
sbb
out
mov
sub
jp
push
dec
push
negb
clc
jo
mov
andl
adc
rcrl
aas
jge
adc
push
adc
out
fistps
jge
push
movsb
inc
insl
xchg
sbb
gs
cmc
inc
inc
jmp
xor
or
cmpsb
mov
xor
les
pop
int3
adcl
cwtl
mov
push
xchg
cmp
sub
mov
outsb
and
xor
cmovnp
es
push
mov
repz
sub
aad
mov
pop
es
mov
sub
stos
std
nop
jbe
movl
fwait
aad
or
or
push
xchg
jns
lods
int
int3
push
repz
inc
mov
bnd
rolb
ror
sub
lock
add
das
maxps
xor
out
dec
ljmp
pop
je
add
xor
mov
adc
insb
sub
mov
outsl
decb
in
and
xchg
and
nop
and
or
repz
js
add
and
jns
int
pop
nop
call
dec
rcll
push
pop
mov
imul
inc
mov
aaa
add
adc
lods
and
aam
dec
mov
cmpsl
outsl
xor
cmp
lock
cmpsb
and
cmp
mov
xchg
xor
mov
addr16
les
xor
stos
push
into
ljmp
into
test
mov
push
stos
cmp
dec
addl
sbb
jle
sbb
mov
mov
sahf
in
mov
loopne
pusha
cmp
push
push
popa
sbb
sub
adcb
in
movsl
out
adc
push
movsl
push
dec
sbb
lock
xor
pop
int
in
ret
mov
sbbb
sub
mov
adc
adc
pop
xor
xor
inc
adc
aaa
in
scas
fcompl
int3
insb
mov
mov
sub
dec
push
xchg
and
push
shr
sahf
push
dec
dec
aas
fsubp
mov
test
jns
mov
xchg
fistl
and
xchg
pop
or
cmp
loop
enter
popa
pop
push
fsubl
daa
xor
xor
cmpsb
inc
out
sub
sbb
stos
aad
sarb
mov
cmc
inc
rclb
orb
xlat
and
pop
sub
and
or
mov
and
push
in
adc
lcall
push
push
es
mov
scas
shl
jae
mov
or
mov
sar
fwait
loopne
push
scas
fwait
dec
aam
iret
gs
outsb
jle
shr
arpl
push
sbb
mov
popa
addr16
mov
ja
repnz
js
sti
out
or
dec
andb
sbb
nop
inc
movsb
pop
pop
pop
mov
out
rol
fwait
lret
adc
test
and
insb
mov
cmp
fistl
lods
outsb
mov
cmp
sbb
test
das
sbb
fldcw
lar
pop
cmpsl
pop
and
xor
ja
fcomps
mov
inc
sahf
add
out
fcmovnb
repz
mov
sub
sub
xor
add
mov
rcll
lret
jecxz
inc
call
and
int
sbb
and
imul
or
loop
mov
addr16
notl
sbb
push
int3
out
stc
cmpsl
inc
or
scas
lock
xor
add
add
ffreep
cmp
sbb
mov
or
jge
or
loopne
out
ja
inc
mov
mov
in
mov
sub
bound
pop
stos
jmp
outsb
mov
jb
inc
cli
cmpb
sbb
push
shlb
push
icebp
jbe
sahf
imul
xor
sti
pop
dec
lret
shrb
inc
mov
decl
std
cmc
pusha
mov
push
rorl
push
iret
cmp
jnp
jne
data16
data16
sbb
xor
add
and
jb
mov
xor
push
dec
sbb
rclb
lret
or
jo
lret
inc
jo
lods
aas
adc
stc
fstpl
cmpsb
pushl
pusha
push
adc
sahf
adc
add
ror
jne
sub
xor
mov
adc
mov
sarb
push
es
jge
mov
xor
push
mov
sbb
adc
inc
insb
popf
movsl
dec
into
add
jmp
fdivl
lahf
lahf
sahf
sbb
and
arpl
stos
xchg
xchg
cmp
sbb
xchg
pop
lret
pop
and
stos
push
mov
mov
pop
jbe
pop
ror
popf
push
jge
jb
mov
and
sub
push
cmp
cmpsb
mov
stc
ja
out
add
sbb
in
add
add
aam
add
ss
mov
mov
cmp
shr
inc
sub
into
imul
mov
sarl
adc
jge
jo
iret
cmc
dec
outsl
push
adc
mov
lock
js
fstps
mov
test
xor
repz
cmp
mov
insl
push
sub
roll
sbb
push
mov
jecxz
sbb
pop
cmp
xchg
pop
mov
ret
ja
pop
inc
popaw
jmp
ljmp
mov
pop
jmp
inc
or
mov
les
dec
mov
and
push
dec
out
outsb
imul
jg
imul
lret
dec
jmp
rcl
ja
cmp
or
mov
outsb
adc
pop
or
arpl
cltd
push
pushf
add
addr16
in
or
cmp
mov
in
mov
jne
inc
pusha
in
mov
fmuls
sbbb
outsb
and
sbb
shl
loop
mov
loope
cmpsb
cmc
fidivl
in
push
adc
adc
push
call
or
lds
ficomps
xchg
cmp
dec
ljmp
notl
je
jl
pop
xchg
nop
and
movb
popa
fldenv
mov
or
mov
loopne
mov
sub
and
mov
data16
mov
imul
imul
push
loop
and
es
insl
push
jnp
mov
and
push
push
inc
cmp
pop
adc
pushf
ret
loopne
stos
xor
nop
push
std
adc
and
adc
test
aam
nop
mulb
aad
mov
add
test
aam
pushf
repz
addl
lea
mov
inc
lods
pop
lahf
push
je
mov
pavgw
test
jno
adc
pop
and
push
les
mov
fsubrs
call
cmp
xor
push
xchg
mov
in
mov
mov
pop
mov
sar
jo
mov
xchg
mov
test
test
fidivl
ja
repz
repz
mov
add
rcpps
fcompp
in
leave
lahf
lods
mov
xor
sarl
sub
loopne
pop
xchg
and
mov
loope
xchg
jle
sub
icebp
mov
ja
dec
push
add
popa
jl
sbb
mov
arpl
adc
iret
andl
sbb
inc
hlt
or
jne
pop
out
jmp
mov
mov
push
ret
pop
jecxz
mov
cmp
jle
pop
mov
mulb
aas
mov
scas
cmp
dec
subl
mov
in
jns
push
cwtl
in
hlt
stc
andl
xchg
shrl
add
or
gs
or
movl
lahf
aam
or
les
nop
int3
inc
xchg
ret
shll
out
cmpsb
lcall
cmp
mov
cmp
sar
push
push
insl
in
aam
cld
scas
mov
leave
or
test
fdivrs
lods
jbe
out
je
sub
cmp
push
and
dec
fcos
add
movsb
add
neg
les
push
shll
and
clc
orl
js
les
sub
aad
lcall
lret
fistl
push
cmp
fldenv
jmp
dec
xor
inc
xlat
xor
imulb
pop
push
fmuls
xchg
bound
dec
mov
ja
mov
lret
ficomps
fmul
fadd
test
shrb
add
mov
push
int
mov
pusha
xchg
add
jmp
ret
in
adc
inc
fidivrl
stc
sub
push
in
lods
imul
into
mov
sub
sbb
adc
call
fldenv
pushf
mov
sbb
fbld
inc
repnz
xchg
aam
sbb
insb
in
pushf
lcall
in
push
fisttpll
pop
jecxz
ss
push
insb
mov
ret
mov
adc
loopne
cld
loopne
pop
xchg
mov
lods
pushl
addb
xchg
fs
ja
mov
pop
or
outsb
xchg
sbbl
ss
orl
xor
pop
add
and
and
sbb
jb
loope,pn
les
int3
js
dec
fs
xchg
pusha
mov
ds
sahf
jno
jbe
insb
loop
loope
sahf
movsl
pop
scas
mov
mov
repz
push
lods
cwtl
or
mov
sbb
in
xchg
sahf
dec
psubw
or
push
into
das
adc
loopne
test
or
aam
inc
test
addl
mov
push
cmp
sub
sbb
scas
loopne
test
mov
lock
inc
clc
rorb
popa
ljmp
mov
xchg
pop
pop
call
jmp
stos
pop
rcrb
sbb
lds
add
jno
or
bound
pop
jae
sbb
data16
call
sbb
dec
pop
ja
jnp
jle
mov
call
repz
js
incb
push
mov
pop
jecxz
push
fisttps
jo
cmp
aam
xchg
lcall
jno
in
and
sbb
sbb
pop
test
mov
adc
pop
insb
sub
loop
iret
sbb
jbe
lahf
shlb
cli
adcl
test
popa
and
sbb
lcall
adcb
jo
leave
sbb
andb
pop
daa
cwtl
or
mov
loop
pop
cmpsl
or
scas
fisubrl
add
lret
int
mov
fisubs
add
insb
arpl
sarl
xchg
imul
inc
dec
daa
or
jne
push
orb
shrl
or
push
out
adc
arpl
stos
dec
negl
cmpb
fimull
mov
repz
push
mov
insl
xchg
jp
movsl
jle
cmp
jecxz
scas
nop
pop
out
cmp
push
push
das
add
loope
mov
add
mov
leave
lods
jmp
sub
push
adc
lods
mov
int3
notw
mov
pop
xor
test
dec
negl
fimuls
push
iret
mov
pop
xchg
or
mov
test
bnd
pushf
dec
in
mov
outsb
imul
xchg
mov
call
test
rolb
xchg
aad
xor
jl
sti
jae
stos
lahf
rclb
or
incb
test
jecxz
iret
and
andl
fisubrs
call
in
insb
mov
out
pop
addr16
mov
popl
xorl
pop
sbb
push
jcxz
push
scas
dec
jo
clc
mov
rcll
inc
leave
pop
mov
leave
jg
mov
jae
push
adc
push
jno
jno
lcall
lcall
cmpb
jo
fnstsw
push
shrl
sub
into
sbb
iret
pusha
sbb
add
stos
outsb
mov
test
ss
dec
xchg
mov
lods
xchg
jp
cmp
int3
mov
sbb
jb
sub
imul
dec
lods
dec
sbb
lcall
pop
mov
sbb
in
mov
jle
and
fwait
mov
mov
xchg
add
adc
cs
mov
ljmp
xchg
fnstsw
cmp
and
hlt
test
aaa
inc
ljmp
push
aaa
pop
stos
lahf
xlat
cmp
addr16
test
jns
jecxz
xor
shl
mov
pop
fiadds
add
or
fs
push
dec
iret
stc
call
xor
push
js
shl
ds
ret
pop
fmull
add
pop
popf
push
sub
xor
sub
sub
call
push
test
push
cld
popa
ljmp
aad
test
js
pop
out
ss
mov
and
lret
call
sti
fsubl
mov
pop
mov
cmp
jp
lods
jmp
stos
add
dec
push
sub
sbb
pusha
cmp
mov
repnz
ljmp
push
cmp
add
jbe
mov
ja
mov
push
repz
xchg
mov
mov
sub
into
das
xchg
add
ret
mov
sbb
sub
cmp
mov
or
push
jb
dec
inc
out
mov
jmp
inc
lock
sti
imul
rol
or
es
cmp
or
pop
mov
mov
std
xchg
push
pop
lock
movsb
stos
rclb
outsl
pushf
cmc
push
repnz
jecxz
or
test
daa
jbe
add
ret
addr16
clc
fs
pop
aas
mov
pop
or
outsl
scas
imul
dec
jbe
push
out
mov
sar
pop
data16
addr16
dec
pop
js
clc
jae
mov
jne
ljmp
cmp
inc
add
loopne
add
call
sbb
pop
dec
xor
inc
sbb
movsb
dec
int
jle
lock
ret
add
ret
adc
add
fidivrs
nop
lret
push
pop
shrl
iret
flds
filds
call
sub
lahf
sub
fs
sbb
std
mov
enter
fdivrs
mov
mov
cwtl
sub
sub
adc
mov
sub
out
fsub
jl
cmp
sub
inc
repz
dec
ljmp
mov
pop
out
mov
mov
jb
repnz
sbb
and
sbbl
xchg
jbe
mov
mov
lret
lahf
pop
negl
or
sub
xor
cwtl
gs
in
adc
call
inc
lock
and
xchg
ja
aaa
mov
fildll
jmp
inc
and
sbb
and
stos
push
adc
add
mov
mov
sbb
test
clc
sbb
fwait
add
lea
mov
cmp
cmpsl
flds
xchg
stos
aad
adc
inc
mov
jg
sbb
pop
fwait
mov
xor
push
sbb
xchg
cld
or
sub
sbb
out
test
xor
lea
lds
lcall
push
scas
ret
int3
mov
imul
inc
inc
jl
adc
pusha
testb
add
pop
stos
int
ja
cld
out
daa
mov
pop
xor
or
cmp
stos
jle
adc
xor
pop
and
sbb
xchg
cmp
fildll
mov
jmp
cs
xchg
or
in
xor
cmp
or
in
shrl
xchg
popa
loope
mov
or
or
inc
push
lahf
callw
outsl
out
sbbb
and
push
adc
enter
mov
mov
fdivrl
sub
inc
insb
push
pop
stc
adc
cmp
inc
aaa
cmp
adc
jg
push
ffreep
dec
add
add
stc
popa
mov
xchg
cmpsb
mov
sub
mull
ret
test
flds
btc
ret
push
mov
xchg
or
jle
push
or
stos
stos
ds
cmc
push
repz
xchg
test
cli
jb
cmp
inc
cld
mov
cmp
xchg
rclb
jb
sub
sbb
gs
add
lods
mov
mov
fcoms
cmp
pop
adc
fistl
jb
data16
push
xchg
cmpl
stos
sbbl
aad
xchg
xchg
sub
cmp
fdivs
arpl
inc
outsl
lds
js
cmpsb
jmp
rcrb
enter
mov
mov
pop
insl
lahf
fs
sub
push
out
fnsave
lahf
imul
jns
and
pop
mov
or
lahf
push
dec
inc
sub
mov
sbb
adc
jecxz
add
jle
and
iret
xor
pop
mov
imul
jo
loopne
or
mov
push
fmul
dec
push
mov
out
pop
mov
mov
rclb
mov
test
add
pop
mov
movsb
pop
mov
mov
jns
jmp
sub
or
inc
cmp
lret
data16
ja
mov
out
ficomps
push
andb
sub
cmpsb
push
shl
mov
and
inc
pop
out
call
add
sub
movsl
das
cmp
pop
lret
mov
mov
cmpsb
decb
cs
dec
cwtl
xchg
sub
es
or
jge
inc
mov
or
xor
stos
push
ss
sbb
mov
sarl
cli
lods
jns
xor
push
inc
jns
daa
lock
xchg
mov
push
xlat
pusha
sbb
pushf
dec
les
test
sbb
push
das
scas
add
popf
hlt
fdivs
cwtl
sti
lds
pop
xchg
andl
sub
pop
mov
fistl
popf
daa
lret
mov
gs
repz
fwait
das
mov
in
xchg
cmp
int3
das
imul
pop
pushf
hlt
icebp
xchg
out
cltd
jae
or
push
mov
stc
and
scas
fwait
lea
out
lds
fildll
or
mov
sbb
loopne
in
iret
sub
xor
andb
fadds
cmp
lcall
jl
push
jae
movsb
cli
lcall
mov
push
test
xor
sub
or
sbb
and
out
popa
adc
lcall
lret
popa
lds
jbe
in
sub
pusha
adc
pop
pop
imul
ljmp
cs
jg
push
mov
xchg
xor
xchg
aas
mov
cmpsb
stc
decb
xor
cli
xchg
outsl
ds
pop
cmpsl
fisttps
outsl
adc
and
mov
sub
cmp
daa
sbb
xchg
adc
adc
mov
or
pop
jmp
sahf
sub
mov
icebp
lods
pop
imull
xor
or
shrb
add
mov
sbb
cwtl
adc
ljmp
mov
inc
adc
mov
lahf
xchg
outsb
shrb
test
je
push
push
sub
mov
test
mov
cmp
mov
leave
dec
shrw
cmp
bound
lahf
mov
lea
out
js
inc
inc
push
mov
fnstenv
dec
ja
push
xchg
mov
dec
pop
aaa
outsl
xchg
add
shrl
nop
cltd
inc
dec
test
push
mov
mov
cmp
mov
jmp
push
xchg
in
arpl
in
jl
cmpsb
mov
xchg
jne
xchg
cwtl
inc
jge
dec
rcrl
mov
dec
xchg
es
out
out
jg
jp
push
sub
mov
ret
pop
gs
fsubr
sub
cs
and
push
pop
stos
mov
sahf
inc
popa
loope
icebp
sbb
mov
outsb
sbb
cmp
hlt
rclb
pop
sub
mov
mov
aaa
pop
cli
mov
cmpsl
jl
leave
xlat
pusha
cmpb
mov
lret
scas
jae
bound
jge
xchg
aam
aaa
adc
mov
stos
push
stos
sbb
lahf
push
adc
and
mov
arpl
inc
mov
xor
mov
push
mov
lods
add
sbb
xchg
lock
int
xchg
add
or
sahf
jecxz
sbb
or
and
rcrl
mov
imul
daa
dec
loope
lret
cmp
sbb
stos
aam
and
xchg
pop
push
xor
mov
daa
pop
push
adc
fnstenv
test
lods
loope
inc
sbb
xchg
pusha
sbb
add
xchg
and
arpl
adc
mov
adc
sti
mov
mov
mov
out
repnz
jp
orb
mov
push
cmp
xor
inc
aam
or
add
lahf
shlb
xchg
movl
xor
mov
dec
adc
or
adc
adc
aaa
imul
cmp
sub
rorl
push
in
mov
adc
pop
mov
or
mov
sub
outsb
add
push
cmc
ds
call
nop
insb
xchg
push
mov
sub
mov
mov
mov
inc
outsb
sub
mov
shrl
inc
add
shll
data16
mov
mov
cld
lds
cmp
iret
ds
jg
js
mov
inc
jge
stos
fistl
mov
push
pop
adc
frstpm(287
out
fs
cmp
xchg
pop
aaa
add
inc
in
push
mov
push
aam
jno
and
rcll
mov
in
add
mov
mov
fdivrs
inc
xchg
arpl
shrb
cmp
loopne
call
fmul
and
dec
mov
and
scas
subb
scas
lds
iret
sub
push
std
jno
inc
mov
shl
adc
dec
daa
and
aaa
in
mov
jnp
dec
sahf
sub
idivb
adc
insl
pop
into
jns
mov
insb
cmp
xchg
daa
cs
mov
fs
pushf
cmp
sub
inc
and
and
fcomp
cmpb
sbb
jnp
int
jns
ret
clc
loop
sbb
fcmovnbe
out
xchg
jle
sub
std
pop
dec
mov
arpl
add
push
xor
and
lock
add
ret
pushf
cmp
arpl
test
jp
jnp
jae
mov
movsb
cvtpi2ps
ja
arpl
add
mov
push
jbe
ret
push
xchg
int
jle
mov
sbb
fs
inc
mov
adc
or
push
cmp
xorl
les
movsb
scas
test
add
daa
stos
and
pop
mov
test
aas
xor
ss
stc
hlt
or
imul
or
mov
pusha
xchg
dec
cmp
fwait
and
mov
cmp
mov
mov
cmp
testl
mov
ss
lds
shll
jb
fisubs
adc
popa
fwait
inc
imul
jmp
in
daa
clc
cld
pop
out
xchg
or
inc
in
sti
mov
pop
aas
ds
cmp
xchg
xchg
pop
shl
inc
iret
cmp
push
inc
mov
push
movsb
jb
insl
xlat
aaa
test
jmp
inc
xor
outsl
mov
frstor
stos
mov
aam
pop
push
mov
loope
stos
sub
das
inc
add
push
mov
cmp
mov
fsubrl
pop
addr16
insl
sbb
jo
dec
lods
hlt
xor
mov
mov
dec
add
int3
xor
mov
cmp
in
or
test
outsl
cmp
inc
gs
sbb
adc
mov
shr
push
jle
pop
out
pop
stc
mov
cmpl
ss
sahf
xchg
inc
pusha
rorb
xor
xor
inc
stc
xchg
adc
adc
movsb
mov
or
stos
mov
inc
push
cmp
xchg
ret
cli
aas
leave
push
test
mov
outsb
sub
jg
pop
cmp
jl
pop
inc
xchg
jle
adc
xor
push
es
out
sbb
pop
fsts
add
xchg
nop
xor
and
add
jg
pop
push
xor
and
inc
pop
dec
mov
push
insl
scas
sub
lahf
mov
mov
mov
aam
sub
adc
add
jp
adc
aaa
jmp
cli
inc
lret
inc
push
popa
xchg
mov
sub
pop
add
es
jmp
push
jmp
call
es
aam
dec
sti
movsl
ljmp
push
loop
push
push
lock
push
pop
xor
rclb
lret
testb
mov
sahf
mov
sar
jle
es
movb
mov
pusha
iret
pop
push
mov
bound
pusha
jmp
push
daa
or
fidivs
pop
mov
fwait
arpl
out
cs
dec
mov
enter
or
shl
pop
dec
mov
jmp
pop
std
add
cmpsb
mov
mov
or
cmp
lea
sub
fisttps
insw
popa
mov
ret
mov
scas
out
dec
xchg
push
out
faddp
mull
mov
cmpsl
enter
xchg
xor
insl
or
xchg
inc
adc
ficomps
jmp
jns
push
icebp
cmpsl
pop
cmpsl
in
push
popf
sub
in
push
xor
adc
aad
scas
insl
ja
xchg
insl
popf
xor
inc
movsb
scas
mov
mov
adc
mov
pop
jge
frstor
jnp
test
into
pop
ja
les
outsl
mov
aad
pop
aas
mov
jmp
shll
push
adc
adc
cld
cmp
mov
fs
jbe
adc
xchg
les
clc
sub
sahf
or
mov
sbb
sbb
test
add
sbb
out
xchg
cltd
test
popf
dec
fldcw
mov
loope
or
enter
cld
movsl
sarl
into
iret
test
and
jp
ja
aad
pop
cmpsb
jno
stc
in
sahf
xchg
add
push
or
out
jne
cs
mulb
mov
mov
loopne
in
out
add
sub
nop
cwtl
pusha
jl
xor
cmpsb
idivb
in
mov
in
mov
mov
jp
repnz
push
das
jnp
push
mov
scas
imul
stos
out
hlt
mov
lcall
aaa
test
lret
push
lea
jecxz
add
testl
lcall
mov
inc
mov
je
xchg
pop
push
shr
out
mov
jl
int3
push
xor
mov
inc
mov
leave
xchg
loop
sti
jno
jbe
int3
jmp
fstl
dec
push
mov
mov
stos
cmp
pop
dec
test
repz
xchg
add
aaa
push
sub
loop
ret
test
outsl
dec
push
rcll
lods
lret
aaa
and
loop
lret
push
sbb
and
dec
dec
and
movsl
push
scas
inc
sub
fnstcw
mov
cmpsb
je
cwtl
sub
lcall
or
jge
xor
jle
imul
rcll
mov
clc
aaa
xchg
and
into
adc
sub
xchg
cmp
push
in
dec
sbb
jne
mov
mov
xchg
push
mull
hlt
lea
add
pop
add
lods
lcall
idivl
fisttps
inc
pusha
adc
cwtl
sti
repz
idivb
sub
mov
aam
outsl
xchg
xchg
out
test
pop
popf
mov
pop
mov
jp
xor
or
andb
jg
shlb
mov
pop
pushf
pextrw
cli
jbe
lock
movsl
sub
call
lret
hlt
pop
or
cli
sub
mov
sbb
faddl
shrb
mov
mov
cmc
test
pop
push
mov
mov
sub
or
gs
sub
adc
fdivs
icebp
mov
test
sahf
in
scas
xor
lahf
dec
shll
stos
adc
push
mov
in
gs
cmp
lds
push
cmp
aam
xchg
ja
iret
dec
xor
xchg
push
mov
xchg
fisttpll
movsl
xchg
in
and
cmp
lock
mov
fcoml
popa
lret
adc
lods
lahf
xchg
cmp
push
dec
out
push
mov
dec
xlat
shlb
insl
fwait
sbb
pop
push
jg
mull
sbb
lahf
sbb
das
mov
insl
gs
adc
cli
adc
push
mov
push
push
into
jge
pop
jmp
add
idivl
incb
mov
push
leave
fdivrp
pop
jo
mov
ljmp
push
in
cmpsl
sbb
xchg
out
int
and
out
jecxz
sub
add
and
lret
out
mov
lret
sahf
nop
sub
jp
lds
sub
xor
cmp
push
ficoms
into
out
mov
popa
push
aam
and
ja
or
aad
rcll
jmp
inc
lock
in
fcoms
fprem
adc
xchg
cmp
punpckhwd
int
sbb
shll
popf
jae
xor
adc
mov
fidivrs
in
outsb
call
jp
mov
fwait
das
cwtl
sbb
jno
cltd
xchg
push
add
inc
fldl
or
testb
jno
add
mov
sbb
mov
push
mov
dec
mov
scas
sahf
or
push
fsts
mov
nop
xchg
jmp
adc
fisttpll
jg
clc
imul
jge
hlt
xor
aad
jg
aas
add
jae
mov
or
sbb
add
jae
push
lcall
push
cmp
sbb
ja
loopne
and
mov
xchg
xchg
mov
decb
imull
fucomip
fcmovbe
push
lods
sub
out
das
sub
xchg
jp
clc
insl
outsl
in
mov
jb
lods
out
push
lock
push
sub
imul
sbb
sbb
test
popa
loopne
jne
frstor
pop
scas
fistps
notl
icebp
pop
in
mov
enter
or
pop
ss
jns
jo
outsl
insb
aam
mov
pop
ljmp
ljmp
cmp
cmpsl
jb
ficomps
outsb
xor
aaa
in
sar
lods
mov
iret
test
icebp
add
xchg
ja
inc
sub
sbb
mov
add
sbb
sub
repnz
arpl
mov
insb
or
xor
pop
pop
mov
dec
imul
push
clc
test
push
mov
and
jns
pop
cmpsl
lcall
inc
mov
sub
ret
mov
sub
cmpb
scas
mov
ds
jge
scas
fistpll
adc
outsb
test
addl
xchg
mov
subb
dec
dec
mov
lods
add
push
pop
adc
jecxz
mov
jne
inc
mov
aad
or
imul
pop
imul
dec
orl
push
xchg
cmp
rcll
les
cmp
shlb
iret
dec
in
cmp
out
jbe
inc
mov
int3
fiadds
inc
jl
and
jg
cli
add
outsl
sbb
repz
ret
andl
ror
fldcw
jns
mulb
repz
mov
nop
push
push
sub
nop
inc
stos
cwtl
jmp
push
xor
dec
sub
int
and
test
add
out
xchg
testl
mov
in
add
push
sbb
xor
js
fisttpl
pop
cmovb
leave
mov
cmp
and
dec
int
repz
clc
inc
lea
adc
pop
popf
dec
dec
pop
mov
icebp
sti
jno
push
mov
rol
leave
or
imul
xorb
ficompl
pop
scas
out
and
mov
add
and
fistpl
mov
and
orb
mov
xchg
stc
mov
xchg
add
push
adcl
mov
pop
cs
and
dec
movsb
out
imul
or
fcomps
cmp
xchg
sub
bound
and
cmpsl
dec
lds
and
lods
stos
jmp
mov
pop
jno
or
daa
out
sahf
cmp
mov
in
dec
roll
cld
lea
int3
jnp
lret
lret
adc
jnp
add
or
jb
and
mov
scas
xchg
lea
jl
inc
cltd
sub
push
adc
sub
ljmp
push
ss
ljmp
add
inc
lods
inc
or
lret
sbb
inc
test
sub
dec
fdivrs
dec
aam
mov
pop
or
rclb
xchg
outsb
xchg
inc
outsb
mov
icebp
adc
icebp
addr16
mov
sbb
or
dec
rclb
sub
xchg
lahf
cmp
push
inc
dec
mov
xchg
or
stos
jecxz
daa
adc
fimuls
ficoms
xchg
mov
loope
subl
pop
inc
jno
dec
mov
pop
dec
mov
dec
cmp
cli
fldenv
stos
xor
insl
fnstenv
jmp
mov
sub
nop
outsb
and
sbb
jno
lods
mov
mov
int
fmull
cwtl
cmp
push
lods
mov
xor
mov
inc
in
loope
or
out
mull
cmpsl
jp
cs
repnz
push
fmull
adc
xchg
das
sbb
sub
jne
mov
inc
popf
sbb
arpl
push
add
and
dec
push
dec
lock
mov
inc
repnz
sub
xchg
decb
fsubrp
lret
adc
mov
imul
out
pop
cmp
jl
out
mov
cmpsl
data16
add
xor
jge
fs
mov
shrb
pop
jmp
cmp
inc
jnp
xor
sub
and
in
sbb
pop
mov
inc
lahf
andl
push
fcompl
push
mov
mov
or
push
ret
fs
or
push
sbb
es
mov
sub
jno
adc
pusha
dec
push
pop
mov
nop
inc
pop
mov
jae
fdivs
and
jnp
lods
add
mov
fadds
mov
jl
sub
and
stc
or
fbstp
cmc
sbb
scas
sub
inc
nop
sbb
jg
or
dec
and
pop
cld
and
and
lods
cmc
lahf
imull
sbb
rcll
pop
mov
ret
mov
cmp
or
dec
fsub
movsl
push
aam
pusha
stos
cmp
push
rclb
clc
cmp
xor
out
or
add
int3
push
sub
add
sbb
xor
mov
fbld
xor
and
fwait
and
pop
cwtl
push
push
test
push
xor
neg
jecxz
adc
pop
dec
stc
pop
arpl
orl
sahf
imul
cs
in
out
cmpsl
mov
lods
add
daa
adc
in
xchg
jp
jb
test
inc
cld
lcall
pop
mov
push
mov
test
popa
fstpl
nop
fs
xchg
xor
xchg
push
int3
hlt
je
scas
orb
sub
clc
push
add
lcall
cmp
ret
jmp
cmpsb
aaa
mov
cltd
mov
push
mov
shl
lret
add
mov
dec
dec
je
mov
sti
ret
repnz
fidivrs
add
in
lret
xor
loopne
push
lock
repnz
add
stos
punpcklwd
adc
int3
inc
xor
jns
inc
adc
mov
mov
nop
push
insl
and
push
jmp
adc
in
and
jmp
and
push
fsubrl
addr16
adc
cmp
std
scas
dec
dec
rorb
rcr
popf
push
shrb
dec
inc
inc
pop
inc
and
fwait
cmp
rcrb
add
out
pop
lods
inc
movsb
lock
dec
inc
push
sub
aam
ret
popa
push
sbb
and
mov
loop
push
idivl
in
or
pop
xchg
mov
inc
test
mov
lret
adc
mov
cld
loop
rclb
cltd
mov
xchg
dec
ficomps
lods
icebp
sbb
das
inc
pop
xchg
cmp
lret
fcomi
test
sahf
cld
mov
or
jmp
mov
mov
mov
int
mov
fiaddl
xchg
in
xor
sahf
arpl
pop
adc
sub
lea
mov
xchg
add
test
sub
dec
mov
repz
testl
adc
incb
shlb
xchg
sbb
xchg
inc
and
dec
jne
cmp
jmp
addr16
pop
mov
or
movsl
mov
lcall
pop
cmp
neg
stos
cmp
mov
clc
push
orb
sub
cs
lds
movsl
int3
lea
pop
out
rclb
and
decb
pop
inc
outsb
inc
out
fisttpl
push
mov
sub
dec
fdivl
push
xor
pushf
roll
stos
or
jecxz
xchg
popa
pop
dec
inc
mov
into
ja
add
add
adc
inc
push
idivb
mov
sbb
mov
jp
mov
std
mov
jge
insb
mov
push
dec
lods
cmp
mov
mov
fidivrl
sbb
cs
xchg
pop
inc
sarl
or
jl
add
xor
mov
shlb
xor
stc
rcrl
add
xor
adc
pop
mov
pop
mov
ror
mov
or
xor
sbb
pushf
cld
push
add
cmp
lock
movsb
leave
scas
dec
push
dec
push
inc
xlat
aad
jge
xchg
ja
inc
pop
and
fidivrl
fidivrs
sub
xor
shlb
xchg
rclb
xchg
sub
icebp
clc
mov
dec
daa
rclb
cmp
sub
daa
mov
adc
les
fldenv
cli
ds
dec
add
and
sbb
pop
sub
out
ffreep
pop
cmpsl
or
cmp
cld
xchg
adc
jmp
push
test
fs
adc
cmpsb
jne
and
sub
imul
cmc
mov
loope
shlb
je
out
arpl
jae
fistl
mov
pop
out
out
repnz
pop
pop
std
in
add
push
movsl
ret
cmp
sbb
std
rcr
std
mov
xor
jne
mov
inc
mov
and
movl
loopne
xor
inc
push
loop
cmpsb
inc
adc
jp
and
das
push
xchg
pushf
cs
pop
mov
mull
adcl
mov
jge
mov
cmc
inc
inc
dec
notb
insb
andb
loop
or
je
push
out
and
mov
push
sbb
stos
adc
mov
xor
and
imull
dec
adc
ret
shrb
pop
arpl
pop
pop
test
and
inc
je
sub
popf
outsb
cmp
cmp
int3
pop
loope
push
sub
xchg
jns
aad
ret
xor
subb
and
outsl
aas
pop
les
inc
fs
imul
test
outsb
xchg
pusha
push
pop
sub
popa
data16
add
xchg
pop
pop
add
add
mov
mov
fdivs
aad
fdivl
in
mov
jle
in
in
or
xor
xor
ret
loopne
push
xlat
cld
mov
inc
fsubl
shll
notl
mov
push
xchg
cmp
pop
mov
pushf
test
lock
dec
pushf
sub
cmp
fadd
and
push
mov
push
adc
stos
or
mov
punpckhbw
sub
dec
mov
push
aas
andl
xorl
sub
inc
mov
ret
xor
mov
test
jge
jmp
repnz
test
mov
ret
out
xchg
jmp
xor
cmpsb
insb
jg
js
fildll
cmp
clc
cmp
sar
jl
daa
push
mov
dec
rcll
rcrb
ret
ja
jecxz
mov
cmp
pop
test
jl
add
dec
aam
sub
pshufw
inc
pop
fs
out
lock
add
test
pop
rorb
add
mov
ret
push
scas
dec
xchg
std
xor
sub
nop
fistps
lcall
or
addr16
ljmp
sub
mov
xor
or
jmp
xchg
test
subl
adc
out
and
pop
test
in
and
and
jo
cmc
nop
pop
mov
cmpsb
dec
jae
xor
shrl
popf
rcll
mulb
push
lahf
out
sub
mov
mov
sahf
or
mov
sub
xchg
inc
stc
mov
dec
mov
mov
cmp
dec
leave
cmpsb
in
nop
cwtl
dec
lcall
cld
into
mov
xchg
cmp
repnz
ds
xor
in
loopne
jg
inc
outsb
dec
xchg
mov
sbb
xchg
pushf
lret
hlt
mov
xchg
sub
pop
mov
enter
rcrb
lock
push
int3
lods
mov
jle
mov
aad
inc
mov
xor
sub
dec
test
adc
or
lret
fs
push
sub
jmp
xor
xchg
pushf
jge
insb
jno
stos
movsl
bound
mov
push
daa
push
cmp
add
or
mov
adc
xchg
sub
lret
jbe
jno
repz
pop
xchg
or
cmp
lods
push
jae
cmp
push
addr16
addr16
xor
out
push
lret
jle
nop
ljmp
jbe
cmpsl
pop
inc
repnz
out
aas
and
dec
out
and
inc
xorl
scas
xor
arpl
inc
push
pop
dec
push
mov
subl
push
dec
xchg
mov
xorb
popa
loop
repz
add
jns
and
gs
or
push
push
lret
ret
testb
dec
add
test
mov
adc
bound
addl
loopne
jne,pn
pop
rcll
or
std
push
pop
sub
xchg
lahf
inc
or
fistpll
into
sub
mov
loop
fsubl
repnz
mov
gs
inc
sub
fwait
xor
mov
dec
mov
arpl
stos
mov
sbbl
xchg
dec
mov
push
pusha
test
imul
daa
iret
inc
cmp
lock
fsubl
movsb
cmpsb
cwtl
sub
je
pop
push
sar
lods
aad
arpl
xchg
xchg
enterw
hlt
jl
pop
in
cli
mov
dec
jno
dec
je
cmc
je
int
push
push
mov
xchg
add
ret
sub
xlat
jns
mov
jnp
push
lcall
dec
cmp
orb
out
add
outsl
fisttpll
repnz
dec
fwait
xchg
push
jmp
push
pushf
outsb
imul
arpl
inc
sub
fucomi
jbe
call
jbe
or
mov
dec
mov
cs
std
out
subb
inc
adc
xchg
push
xchg
sbb
les
arpl
shl
test
sbb
mov
add
in
dec
shr
jae
push
mov
cmp
sub
push
adc
rorb
icebp
dec
xor
push
movd
sub
ret
lar
fisttps
jle
pop
imul
pop
scas
call
jle
fdiv
cmp
mov
test
cltd
fiadds
jns
mov
mov
stos
ret
adc
aam
mov
xlat
dec
adc
icebp
add
mov
mov
jne
jae
rclb
in
mov
into
fidivrl
jge
ret
incb
cld
or
jb
sbb
push
push
lods
xor
adc
or
dec
mov
mov
sub
adc
cmp
loopne
pusha
mov
lret
mov
mov
pop
inc
call
out
xor
sbb
loop
mov
adc
xchg
pop
xlat
jle
fs
xor
or
xchg
fisttpl
push
inc
dec
cmpsb
out
or
insb
mov
pop
loop
push
outsl
adc
sub
cmp
pop
cmp
pop
lea
and
fstpl
xchg
ficoml
push
into
push
ss
andl
or
mov
xor
inc
pusha
xor
lret
aaa
stc
jb
or
sbb
rorb
call
mov
sbb
test
in
jb
inc
insb
sub
pmaddwd
mov
in
lds
leave
clc
rol
pop
fxch
adcb
out
dec
cmp
adc
insb
sbb
cmp
pop
xchg
test
mov
out
jmp
dec
rcrl
rcl
xchg
mov
insl
xor
push
mov
pop
cld
xor
out
gs
push
popa
mov
cmp
int
in
add
jp
dec
mov
adc
dec
lock
xchg
and
mov
mov
ja
push
fsubl
push
add
sub
jg
dec
in
cmp
jo
fnsave
dec
push
es
pop
in
and
xor
aam
push
sbb
subb
ret
xor
sub
mov
push
inc
xchg
add
dec
rcr
mov
jno
inc
mov
mov
mov
jae
and
shll
xchg
push
inc
xchg
scas
rcrb
mov
mov
sahf
loope
loop
push
sbb
push
pop
loop
ret
xchg
sub
cmpsl
pop
sahf
lcall
popa
dec
aam
js
sarl
scas
jns
in
xlat
aaa
jbe
jno
sbbl
popf
cmpb
cmp
cmp
xor
and
cmp
cmp
sub
mov
and
mov
or
sbb
rcr
je
dec
fisubrs
jae
out
push
lods
mov
mov
inc
mov
stos
repnz
pop
sbb
pop
fistl
push
gs
mov
jle
imul
adc
cmp
sarb
das
mov
pop
jge
jno
test
das
cmc
xchg
mov
cmp
xor
pop
adc
fcomps
iret
mov
aad
push
adc
push
js
std
mov
ja
push
xor
shlb
mov
add
dec
sub
rolb
xlat
hlt
sbb
mov
cwtl
xor
sub
or
push
xor
mov
fs
and
xchg
clc
xchg
push
arpl
repz
xchg
sbb
sub
ss
imul
mov
and
mov
cs
aad
bound
loop
mov
mov
ss
push
inc
jns,pt
call
lret
mov
leave
imul
rorb
pusha
ret
sub
adcl
xchg
cs
test
lret
rcrl
mov
xchg
cmpsb
sahf
push
fisubl
movsb
jecxz
pop
jbe
push
inc
pop
stc
mov
fsubl
ret
imul
push
fisubrs
mov
lea
mov
pop
jecxz
ret
movsl
stos
lcall
add
in
mov
dec
movsl
rcrl
ret
pop
popa
cwtl
into
outsl
mov
sub
ret
fadds
push
sub
adc
push
stos
mov
out
in
xchg
insl
cltd
gs
mov
std
test
or
mov
ffreep
push
imul
mov
out
sbb
les
stos
push
mov
sub
test
or
loopne
cmp
mov
imul
lcall
into
popa
mov
repnz
lods
cmp
bsr
stos
pop
out
dec
lods
scas
fnstsw
insb
mov
loopne
cwtl
addb
fldcw
cmp
rorl
adc
dec
mov
shrl
inc
inc
das
xor
jl
inc
dec
push
xor
pop
movb
repnz
mov
lock
pushf
mov
aaa
jl
gs
stos
pop
jle
dec
icebp
imul
test
xchg
adc
mov
add
and
or
push
out
out
pop
mov
shlb
bound
mov
stc
mov
cltd
mov
sarl
lods
outsb
enter
dec
in
out
push
jne
mov
push
mov
push
and
push
in
mov
push
ljmp
mov
pop
test
out
lret
inc
jge
xor
mov
mov
imul
jl
rclb
lret
sub
movsb
xchg
cmp
stc
mov
sbbl
dec
in
sub
in
xor
movsb
icebp
xchg
es
ret
cmpsb
jmp
xchg
imull
shll
cwtl
pop
jnp
daa
cmp
mov
xchg
and
insl
dec
mov
iret
stc
pop
mov
pop
ljmp
and
cmpsb
jmp
stos
push
sbbl
sbb
jbe
and
in
clc
sub
sub
lahf
icebp
pop
in
mov
in
insb
int3
imul
dec
sub
adc
sar
sbb
test
add
leave
sbb
adc
and
push
test
add
push
sar
push
stos
pop
push
daa
insb
mov
or
ret
mov
ret
rcr
invd
pushl
lods
fsubrl
test
inc
movsl
loope
ljmp
jl
fdivrs
push
pushf
or
dec
push
test
jbe
fcmovu
pop
repnz
arpl
push
add
mov
popa
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
je
jne
je
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
arpl
imul
and
and
cmp
gs
gs
gs
jb
jbe
insb
gs
or
and
and
and
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
and
and
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
jae
arpl
imul
cmp
je
jne
je
outsb
outsw
ds
jae
gs
bound
push
inc
add
add
inc
add
add
or
or
adc
xor
xor
in
in
cmp
cmp
cmp
or
adc
sbb
and
sub
xor
cmp
inc
cmp
cmp
cmp
cmp
cmp
or
add
dec
cmp
add
add
add
add
xor
ds
ds
add
add
add
push
xor
xor
xor
add
add
add
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
sub
add
add
add
jp
xorl
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
xor
insb
xor
lods
xor
xor
aaa
ss
ss
ss
imul
fdivl
hlt
ss
add
or
or
adc
cmp
pop
aaa
jge
test
mov
mov
nop
aaa
xchg
aaa
cwtl
aaa
pushf
aaa
mov
aaa
hlt
aaa
clc
aaa
cld
aaa
bound
insl
cmp
cmp
cmp
cmp
cmp
cmp
sub
sub
xor
xor
cmp
cmp
xchg
mov
nop
cmp
or
cmp
cmp
cmp
imul
sarb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jecxz
lock
push
sub
popf
movsl
ds
fidivrl
in
jmp
aas
and
aas
push
aas
pop
aas
insl
aas
jae
test
mov
aas
hlt
aas
add
add
push
xor
xor
xor
xor
xor
mov
xchg
xor
xor
xor
xor
xor
xchg
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
and
sub
xor
xor
aaa
lods
aaa
leave
aaa
icebp
aaa
cmp
cmp
cmp
cmp
cmp
xchg
cmp
cmp
cmp
cmp
cmpl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
cmp
cmp
cmp
dec
cmp
pop
cmp
jne
jnp
test
cmpsl
cmp
sub
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xchg
cmp
call
or
adc
sbb
push
ds
cmp
aas
ds
ds
ds
ds
ds
jo,pt
jbe
jnp
cmpl
stos
ds
mov
ds
sarl
fdivrs
fistpll
out
ds
add
and
sub
inc
aas
fs
jo
cmpl
add
add
add
int3
xor
xor
xor
xor
js
fwait
xor
xor
xor
xor
xor
xor
adc
xor
arpl
push
je
xchg
popf
xor
xor
xor
xor
xor
xor
xor
xor
mov
loop
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
mov
es
aaa
xor
ds
jl
xorl
aaa
xchg
aaa
iret
aaa
fdivl
loop
or
cmp
pop
cmp
imul
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ds
fstpt
and
sub
cmp
mov
add
xchg
sahf
xor
xor
xor
data16
jle
xchg
xchg
xor
xor
xor
xor
xor
xor
xor
imul
xor
xor
xor
xor
xor
stos
xor
loopne
call
ss
cmp
ss
ss
xchg
mov
shll
ss
divb
jg
mov
xchg
aaa
lret
aaa
aam
loopne
sbb
and
cmp
cltd
cmp
cmp
cmp
in
cmp
cmp
cmp
xchg
cmp
cmp
cmp
out
cmp
mov
add
add
xor
xor
xor
xor
xor
xor
xor
xor
ss
ss
aaa
cmp
dec
aaa
pop
aaa
jno
xorl
aaa
cmpsl
aaa
mov
aaa
push
cmp
aad
out
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
insb
cmp
nop
cmp
add
loopne
add
add
jo
je
js
jl
xorb
xor
enter
int3
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cwtl
cmp
test
lods
cmp
cmp
enter
sarb
aam
fdivrs
fdivrl
loopne
in
call
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
cmp
inc
cmp
dec
cmp
pusha
cmp
insb
cmp
js
jl
cmpb
adc
add
lcall
add
int
add
int
add
adc
add
add
nop
add
add
add
xchg
add
add
nop
add
add
nop
add
add
xchg
add
add
xchg
add
add
add
add
add
add
nop
add
add
nop
add
add
xchg
add
add
xchg
add
add
add
add
add
add
dec
xor
cs
insb
add
add
je
je
arpl
bound
arpl
add
inc
jb
popa
je
push
popa
je
gs
inc
jb
jae
add
add
dec
data16
je
imul
dec
jb
inc
js
add
inc
gs
popa
jns
jne
add
add
insl
bound
gs
outsb
add
push
js
push
fs
insb
add
add
je
push
popa
arpl
jb
jne
fs
outsl
outsb
je
outsb
je
arpl
add
je
push
outsl
outsl
insb
add
add
inc
gs
push
popa
jb
push
imul
inc
jb
ja
push
popa
jb
outsb
je
popa
arpl
jb
jne
add
add
outsb
push
push
popa
je
