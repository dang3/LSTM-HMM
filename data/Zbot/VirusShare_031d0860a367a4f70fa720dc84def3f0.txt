add
popf
mov
mov
lahf
outsl
mov
ret
rcr
sub
xor
shlb
pop
add
call
add
xor
int3
push
mov
pop
push
mov
sub
push
push
push
push
call
add
pop
mov
mov
push
pushl
pop
call
lea
pop
mov
ret
xor
push
test
pusha
sub
xor
mov
inc
mov
jg
daa
dec
jl
push
xor
xor
das
push
mov
sub
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
out
ja
fldt
inc
dec
fsts
ljmp
and
mov
loope
mov
std
and
xor
mov
sub
push
pushl
push
pushl
call
add
pop
lea
pop
mov
ret
out
shll
sbb
lcall
dec
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
in
sub
push
pushl
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
add
push
mov
sub
push
push
lea
push
lea
push
subl
lea
push
lea
push
pushl
subl
mov
add
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
lea
mov
push
mov
addl
pop
push
pop
xor
add
test
je
add
lea
xor
push
popl
add
and
addl
clc
adc
pushl
lea
pop
repz
jmp
mov
pop
ret
add
add
in
sub
push
push
push
push
pushl
call
add
pop
lea
pop
mov
ret
push
mov
sub
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
call
aam
pop
pop
xlat
iret
jbe
push
pop
inc
push
mov
sub
push
push
push
call
add
pop
lea
pop
mov
ret
add
add
scas
lcall
les
xor
das
in
cmp
test
inc
sub
dec
push
das
shrb
sub
xor
jp
sarb
mov
es
lock
xchg
rcrb
ror
xchg
mov
fadd
dec
fldcw
pop
test
outsl
mov
in
or
lds
adc
ret
mov
cmpl
jbe
add
lahf
aaa
mov
sub
test
icebp
inc
push
adc
inc
xchg
in
cmp
rol
mov
sbb
pop
add
dec
mov
mov
and
imul
xchg
pushf
aad
mov
std
inc
push
pop
push
pop
sub
lods
mov
mov
shl
lea
mov
mov
add
stos
mov
push
pop
cmp
je
sub
sub
je
sub
mov
add
mov
cmp
je
mov
sub
jne
lea
jge
popf
call
jmp
add
roll
add
add
mov
and
add
add
fisubl
add
adc
add
lods
and
add
add
into
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
and
add
add
sub
add
lret
add
and
add
and
add
and
add
and
add
and
add
add
add
and
add
and
add
add
clc
and
add
add
add
and
add
and
add
and
add
add
and
add
add
test
add
xor
add
add
add
add
mov
and
add
add
fisubl
add
adc
add
lods
and
add
add
into
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
and
add
add
sub
add
lret
add
and
add
and
add
and
add
and
add
and
add
add
add
and
add
and
add
add
clc
and
add
add
add
add
insb
gs
jae
dec
jne
gs
add
jae
inc
jbe
outsb
je
add
fs
outsl
outsb
jae
insb
gs
add
add
je
je
jb
jne
dec
outsb
outsw
inc
add
add
insb
jae
gs
popa
insb
jne
add
inc
gs
je
imul
push
add
das
add
outsb
fs
je
insl
push
add
fs
outsl
outsb
jae
insb
gs
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
imul
jb
je
arpl
add
inc
add
outsl
jae
dec
popa
outsb
fs
gs
add
je
jb
jbe
push
jns
gs
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
fs
outsl
outsb
jae
insb
gs
add
add
fs
imul
add
sbb
jb
push
inc
add
insb
jae
jb
outsb
inc
add
add
inc
gs
outsl
imul
jbe
jae
add
add
gs
inc
imul
gs
jo
imul
push
insb
gs
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
je
push
outsl
insb
outsl
jb
jl
inc
gs
push
gs
dec
gs
imul
insb
outsl
jae
push
push
popa
je
add
jle
inc
gs
imul
gs
add
addb
jae
push
arpl
add
gs
push
outsl
outsl
insb
add
add
ja
push
popa
arpl
jb
jne
add
add
ja
push
fs
add
outsl
jae
push
push
popa
je
add
xchg
dec
jo
outsb
push
push
popa
je
add
inc
gs
push
gs
inc
js
outsb
je
add
push
imul
gs
add
jns
inc
gs
push
jns
push
imul
dec
inc
dec
inc
cs
insb
add
inc
jb
ja
gs
outsl
jb
push
dec
add
outsb
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
jo
jb
push
push
outsl
push
inc
popa
je
add
insl
add
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
inc
push
inc
inc
dec
push
cs
insb
add
add
add
add
xor
add
pop
add
orb
add
jo
add
mov
add
add
add
add
add
mov
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
sbb
add
add
add
add
add
add
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
inc
add
test
add
cmp
add
add
add
add
add
ja
add
add
add
add
add
add
add
add
add
xor
add
cwtl
roll
add
add
add
add
add
add
add
add
and
add
add
andb
add
imul
sub
add
movsl
movsl
pop
scas
lods
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
lods
mov
mov
fwait
pop
xchg
xchg
xchg
or
jle
jl
jp
lods
lods
lods
add
cmpsb
cmpsl
push
mov
mov
mov
ret
ret
stos
leave
lret
lret
int
rcl
in
rcl
shl
rcl
iret
hlt
int3
into
int3
hlt
leave
leave
repz
leave
leave
out
mov
mov
stos
lods
lods
lea
cltd
cltd
and
jne
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
and
mov
leave
lret
leave
not
rcl
cld
fcomp
std
xlat
xlat
fcom
aam
rcl
iret
dec
int3
int
aam
ror
iret
inc
mov
mov
iret
movsb
mov
mov
xor
and
add
push
add
add
add
add
add
add
add
add
lods
lods
lods
add
scas
sbb
mov
jnp
mov
mov
dec
lret
leave
call
iret
iret
aad
aad
xlat
fcom
call
xlat
fdivr
aam
aam
int
int
into
into
int
aad
aam
int
into
inc
rol
mov
mov
scas
std
test
test
xchg
xchg
xchg
mov
pop
pop
or
inc
add
add
add
add
add
pop
add
add
add
add
add
add
pop
pop
pop
add
inc
add
pop
add
push
or
inc
or
sbb
push
add
add
add
or
or
or
add
add
add
mov
add
mov
inc
mov
mov
mov
mov
ret
enter
into
int
rcl
sar
xlat
fdivr
xlat
fdivr
aam
int
int
lret
lret
int3
into
into
inc
sarl
mov
mov
cmpsl
cmpsl
cmpsb
jmp
lcall
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
push
push
bound
fs
aas
inc
sbb
prefetch
sbb
sbb
aaa
cmp
aaa
cmp
adc
pop
push
pop
add
add
add
add
fs
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
dec
leave
leave
call
iret
iret
call
aad
call
aam
iret
iret
sar
enter
inc
ret
mov
mov
ljmp
movsb
movsb
sahf
sahf
sahf
xchg
xchg
xchg
lcall
addl
add
inc
add
add
add
add
add
add
add
add
add
adc
add
or
arpl
push
push
push
add
jno
jle
jl
jge
jg
jno
jb
popa
arpl
push
push
dec
xchg
cmp
inc
mov
outsb
outsb
outsl
nop
popa
bound
inc
inc
inc
xor
add
add
add
add
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
dec
enter
lret
leave
lret
lret
leave
inc
ret
mov
mov
ljmp
movsb
movsl
lcall
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cltd
fwait
fwait
in
addb
push
or
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
jo
outsb
add
pop
or
jnp
nop
fcoms
addb
jnp
jmp
jo
out
push
fdivs
je
jle
jle
jns
js
fs
inc
inc
cmp
pop
pop
sbb
movups
stos
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
test
test
sahf
pushf
popf
call
xchg
incl
xchg
xchg
mov
mov
cwtl
mov
jp
jp
das
das
das
das
add
add
add
add
add
add
add
add
add
add
mov
push
push
addb
in
mov
mov
addl
mov
mov
jge
jo
jno
jae
je
jle
jg
test
xchg
data16
cmp
and
jle
cmp
mov
test
stos
sti
lods
stos
lods
lods
lods
lods
stos
test
movsb
std
lcall
decl
jge
jp
jp
jp
jns
mov
xchg
movsl
mov
scas
sti
mov
mov
mov
mov
mov
scas
scas
stos
xchg
push
adc
add
or
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
xchg
xchg
incl
xchg
mov
xchg
std
xchg
cwtl
cwtl
stc
xchg
xchg
xchg
in
mov
or
addb
xchg
push
push
or
inc
inc
dec
imul
test
xchg
leave
fwait
cltd
cltd
fistps
lcall
mov
incl
mov
fwait
fwait
fwait
jmp
lods
scas
mov
mov
mov
mov
mov
std
mov
mov
movsb
movsb
movsb
addr16
jp
lods
cmpsb
lods
add
pop
adc
test
mov
incl
xchg
decb
xchg
xchg
pushf
popf
sahf
std
mov
mov
xchg
in
nop
in
test
push
jne
push
cmovp
or
dec
dec
dec
outsw
jno
test
xchg
xchg
rclb
xchg
std
mov
call
mov
test
lods
test
pushl
cmpsl
scas
mov
xchg
stos
std
roll
mov
mov
ljmp
mov
add
pop
pop
adc
mov
jmp
popf
xchg
pushf
decl
mov
call
nop
nop
xchg
xchg
xchg
popf
popf
popf
movsb
movsb
movsl
test
movsb
movsl
notl
jl
movsl
push
push
push
outsl
dec
dec
dec
popaw
bound
jo
je
jl
jge
test
mov
mov
xchg
testl
lea
jmp
mov
mov
pop
mov
mov
aaa
jge
mov
ja
mov
movsl
mov
mov
stos
lods
mov
mov
add
shlb
adc
mov
ljmp
pushf
decl
nop
nop
call
xchg
xchg
call
cwtl
cwtl
lcall
sahf
mov
mov
stc
xchg
lcall
xchg
xchg
les
xchg
lcall
mov
stc
xchg
xchg
std
xchg
je
fwait
push
cmp
dec
cmp
inc
jnp
mov
jns
mov
jb
mov
outsb
ljmp
adc
lods
or
lods
or
mov
jge
mov
mov
lods
pushf
mov
mov
add
mov
pop
pusha
adc
mov
ljmp
lahf
call
xchg
xchg
lcall
pushf
pushf
jmp
pushf
popf
lcall
xchg
xchg
call
xchg
xchg
call
cwtl
fwait
cld
xchg
xchg
sahf
stc
lahf
cltd
lahf
stc
sahf
xchg
popf
cld
sahf
mov
xchg
imul
cwtl
dec
js
cltd
jne,pt
fwait
sub
pushf
and
mov
adc
jmp
adc
lods
adc
lods
adc
lods
adc
mov
imul
adc
imul
inc
cmp
fwait
scas
mov
scas
lods
scas
movsl
movsb
movsl
sub
movsb
movsl
mov
add
add
add
pop
pop
adc
mov
ljmp
popf
call
popf
pushf
lcall
movsl
movsb
jmp
mov
xchg
decl
mov
decl
js
cltd
jno
lcall
call
sub
pusha
call
or
add
call
add
sahf
push
pop
ljmp
sbb
pushl
pop
jo
mov
outsl
mov
and
and
rcrl
mov
xchg
lods
mov
lods
scas
mov
lahf
lahf
sahf
add
add
add
add
add
pop
pop
adc
scas
mov
shlb
lcall
mov
test
cmpsl
cmpsb
test
stos
test
jmp
lcall
mov
mov
decl
decl
push
pop
incl
add
incl
add
mov
pop
call
add
lcall
jmp
pop
jo
mov
jbe
mov
sub
inc
sub
sub
sub
dec
das
jg
enter
enter
enter
sarb
lret
movsb
dec
mov
movsl
movsb
add
push
push
adc
cmpsl
scas
ljmp
popf
jmp
test
ljmp
lods
lods
pushl
scas
lods
jmp
mov
xchg
incl
or
xchg
push
incl
push
incl
add
mov
push
decl
add
xchg
add
lcall
jmp
adc
mov
aaa
cmp
cmp
leave
cmp
iret
cmp
call
cmp
call
inc
xchg
dec
mov
std
mov
mov
movsb
mov
mov
add
dec
dec
adc
mov
mov
mov
cmpsl
test
lods
scas
lods
pushl
mov
pushl
mov
ljmp
jbe
decl
or
mov
pop
decl
or
test
push
incl
add
mov
push
decl
add
popf
add
add
cmpsb
add
stos
add
pushl
cmp
dec
inc
mov
roll
call
inc
nop
call
dec
xchg
call
dec
xchg
fisttpl
fisttpl
fsts
call
test
std
mov
mov
movsl
movsb
mov
or
add
add
add
add
dec
dec
adc
jp
mov
test
popf
ljmp
mov
pushl
mov
mov
mov
mov
mov
jmp
aaa
outsb
decl
sbb
sbb
mov
pop
decl
push
call
add
sahf
add
add
cmpsb
add
test
pop
pushl
es
int
mov
push
xchg
fcoms
fsts
fistl
jmp
pop
popf
ficomps
jmp
pop
lahf
jmp
pop
mov
fadds
mov
cmpsb
jne
sahf
lahf
or
xchg
xchg
cwtl
add
adc
js
sahf
fwait
lahf
jmp
mov
lods
lods
pushl
mov
mov
mov
mov
ljmp
inc
jne
xchg
and
xchg
and
callw
sbb
nop
or
xchg
add
add
fwait
add
mov
add
stos
add
mov
gs
mov
xor
fisubl
fisubs
fisubs
jmp
cmpsw
jmp
fs
call
push
test
call
test
mov
test
mov
sahf
sahf
add
inc
inc
adc
je
cltd
xchg
cltd
call
mov
lods
scas
pushl
mov
mov
mov
mov
ljmp
push
jg
xchg
sub
lcall
call
push
call
add
cltd
add
mov
add
lods
add
mov
pushl
adc
rolb
fldt
jmp
outsb
lods
jmp
jo
jmp
jo
jmp
jne
in
jae
out
jne
out
jbe
out
jae
jmp
xchg
mov
cmpsb
cmpsl
lcall
sahf
add
jge
ds
adc
insl
js
mov
lcall
mov
mov
mov
mov
mov
mov
mov
cmpsb
lods
lcall
outsl
jmp
cmp
xor
lcall
call
add
movsb
add
add
mov
arpl
mov
fs
mov
sbb
ficoml
in
mov
call
jle
in
xorl
push
test
push
cmpl
jmp
mov
inc
mov
test
popf
popf
pushf
daa
sahf
sahf
lahf
add
add
add
pop
add
xor
pop
jne
jle
out
test
xchg
xchg
xchg
pushl
mov
mov
inc
rol
rol
pushl
insl
mov
cltd
cmp
inc
jge
movsl
inc
jle
movsb
aaa
ja
cltd
pop
arpl
xchg
add
sahf
add
add
test
add
add
mov
add
call
daa
cmp
movsl
ljmp
out
mov
push
pop
push
nop
sar
xchg
ret
push
nop
push
xchg
push
mov
out
mov
fidivl
clc
stos
lods
stos
mov
sahf
sahf
xor
pushf
add
add
add
inc
cmp
push
inc
dec
inc
jb
pop
dec
in
imul
pushl
mov
inc
mov
ret
inc
inc
mov
jl
lcall
dec
cmp
mov
punpcklbw
lcall
ljmp
add
mov
mov
add
leave
push
insl
call
xor
jmp
jns
out
xchg
vlddqu
lcall
cmc
pushf
lret
sahf
lret
cli
popf
into
sti
lahf
into
sti
cltd
lret
xchg
ret
mov
dec
mov
mov
mov
lahf
sahf
mov
add
add
add
xor
outsb
push
dec
dec
jecxz
pop
pusha
decl
mov
mov
mov
mov
inc
leave
enter
sar
mov
ljmp
dec
xchg
movsl
sub
fwait
push
pop
lcall
add
lods
add
mov
arpl
mov
add
movl
jne
filds
in
mov
push
cmpsb
into
push
movsl
into
push
test
cli
test
cli
movsl
sar
cli
test
iret
cld
test
sar
negb
lret
leave
int
mov
mov
mov
xchg
xchg
add
fwait
cltd
add
add
add
xor
daa
sub
or
inc
bound
push
xlat
jae
jb
mov
rol
rol
mov
ret
ret
inc
enter
ret
pushl
push
test
lods
push
mov
lods
dec
test
lahf
sbb
lcall
add
stos
add
mov
mov
add
into
add
fadds
je
fists
push
sahf
lret
cli
scas
sar
sti
mov
sti
mov
sti
mov
mov
cld
mov
std
mov
cld
mov
mov
cld
mov
push
movsl
jmp
mov
call
enter
mov
ficompl
xchg
xchg
or
add
add
xor
add
dec
dec
ss
outsb
mov
fcom
fsubr
aam
test
into
int
lret
lret
lret
dec
leave
lret
lret
mov
scas
ljmp
push
mov
lods
cmp
popa
jmp
add
mov
arpl
mov
add
roll
jo
xlat
add
filds
jne
jmp
jb
sti
lods
sar
cld
mov
mov
std
mov
xlat
cld
mov
fdivr
std
rcr
mov
lret
jmp
mov
call
leave
into
mov
lahf
mov
or
add
add
xor
xor
add
add
pop
pop
pop
or
enter
in
out
out
jecxz
in
loop
loop
fstp
fsub
fcmovu
xlat
fcmovu
cli
aad
std
int3
ror
mov
push
ljmp
sub
mov
add
mov
popa
mov
add
lret
add
add
faddl
ja
in
jbe
out
xor
cld
mov
loopne
inc
loope
inc
loop
inc
loopne
inc
fdivrp
std
leave
fdivrp
std
enter
leave
loopne
dec
dec
sti
mov
leave
call
leave
iret
mov
mov
xchg
adc
add
add
std
std
add
std
std
add
incb
hlt
div
or
out
jmp
in
out
out
sub
out
out
dec
call
ljmp
jecxz
out
fcmovnu
fucomi
ret
stc
stos
jno
test
ja
movsb
adc
jmp
add
mov
fs
mov
add
into
add
add
loopne
js
call
inc
popf
cld
mov
jecxz
dec
loop
dec
in
dec
in
dec
jecxz
std
int
dec
loop
dec
jecxz
dec
in
std
shl
call
in
cli
ret
in
mov
fdivr
ret
ret
out
test
test
xchg
xchg
xchg
sbb
cltd
cltd
add
std
incb
std
std
std
add
div
add
hlt
repnz
hlt
repz
in
icebp
out
pop
in
repnz
cmp
out
in
pop
fnstsw
loopne
mov
xchg
sti
mov
push
pop
jmp
pop
pushl
add
leave
add
add
flds
jne
in
jns
in
push
jge
negl
sti
mov
std
shl
std
iret
jecxz
std
shr
std
shl
call
jecxz
aam
std
fsub
call
call
fld1
fldl2e
cld
shl
push
jmp
rcr
dec
lret
test
stos
fwait
xchg
xchg
xchg
and
xchg
xchg
add
std
cld
add
testl
repz
or
aam
xor
mov
xchg
negb
add
cmpsb
add
lods
add
mov
add
lret
add
roll
jno
fldl
jbe
out
ja
out
sbb
stc
je
cld
ret
cld
xlat
call
std
std
fucomi
std
fldl2e
fucomp
fsubr
fsubr
fsubrp
std
fsubrp
fsubrp
shl
push
ret
jmp
rcr
call
rcl
clc
stos
lods
lods
lods
xchg
xchg
xchg
outsl
outsl
outsb
add
add
add
loopne
add
leave
lds
lods
jnp
repnz
and
lahf
add
test
pusha
pushl
add
ret
dec
add
aad
jae
loopne
jne
ljmp
cli
nop
cld
shl
fcomip
fucomp
fldl2e
fucomi
std
xlat
call
shl
cli
shl
cld
iret
loope
clc
into
stc
lret
fdivr
test
lret
jmp
rcr
fcom
sti
mov
mov
cltd
fwait
cltd
cmp
fwait
lcall
add
add
xlat
aad
mov
rol
lods
mov
jmp
add
mov
arpl
mov
add
roll
jo
fadds
jae
loopne
jns
ljmp
cli
cwtl
enter
cli
int3
loope
cli
stc
mov
aam
hlt
mov
sar
repnz
into
ljmp
ljmp
cli
call
fsub
cmc
fucomip
mov
mov
xchg
add
add
add
int
add
rol
mov
cmpsl
loopne
ss
mov
add
mov
data16
mov
add
into
pop
jno
rorl
jne
ja
loopne
cmp
inc
xchg
ljmp
jmp
scas
enter
ret
cld
fildll
neg
mov
lret
int3
in
enter
iret
xlat
shl
xlat
fadd
out
loop
jmp
call
popf
ljmp
push
lods
stos
stos
adc
cmpsl
cmpsb
cmpsb
add
ret
rolb
lahf
lods
aam
dec
cmp
sbb
cmpsb
sbb
jb
mov
ja
mov
inc
test
ret
stc
lret
test
mov
out
mov
mov
lret
int3
rcl
lret
mov
int
mov
xlat
rcl
jg
jb
fnstsw
gs
jecxz
call
out
in
xor
div
mulb
icebp
lock
fstp
or
mov
into
add
add
add
sarl
mov
xchg
lock
sbbl
sarb
mov
les
ret
ret
mov
enter
into
into
addr16
iret
iret
push
iret
rcl
dec
xlat
inc
rcl
xor
daa
fistpl
fchs
fstl
fsub
jecxz
loope
in
out
jmp
in
icebp
out
add
cli
testb
cld
add
std
add
std
add
mov
shrb
mov
mov
mov
scas
xchg
mov
mov
mov
mov
rcll
lds
enter
int
daa
lret
ror
and
aad
sbb
aad
adc
rorb
rcl
aad
rcr
fadds
add
add
jecxz
add
in
jmp
leave
aam
incl
mov
mov
add
rol
ret
sub
mov
mov
push
ret
or
enter
leave
add
int
add
aad
add
xlat
add
fcom
add
fcom
add
aam
add
xlat
loope
aad
flds
loopne
loop
filds
in
call
add
std
add
std
add
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
ret
ret
ret
mov
mov
mov
ja
test
test
pop
add
add
add
add
add
add
scas
scas
mov
mov
mov
mov
enter
ror
jmp
rcl
cmc
rcl
aam
ror
sar
int
int3
stc
int3
lret
mov
mov
lods
fwait
xchg
xchg
xchg
dec
aas
aas
aas
and
add
sbb
add
adc
add
push
add
add
addb
add
push
push
add
add
add
add
add
add
add
add
add
mov
mov
mov
leave
cld
ror
into
aad
call
xlat
xlat
call
iret
sar
iret
into
int
int3
lret
mov
mov
stos
icebp
cwtl
xchg
cwtl
mov
or
or
add
add
add
add
add
add
add
add
add
add
je
jae
jne
jne
gs
dec
dec
dec
cmp
sub
sub
ss
sub
adc
sub
add
add
mov
mov
mov
mov
mov
mov
ret
int3
lret
rcl
call
rcl
dec
lret
mov
sar
mov
ljmp
lahf
popf
xchg
xchg
cwtl
jmp
jno
xchg
pop
pop
adc
xor
add
add
add
add
addl
test
imul
movsb
push
push
push
stos
push
imul
cmp
aaa
pop
jno
jno
mov
scas
pop
mov
mov
mov
mov
mov
rol
vshufps
mov
mov
mov
jmp
fwait
pushf
call
xchg
xchg
lcall
xchg
dec
dec
dec
dec
adc
adc
add
add
add
add
add
pop
fwait
fwait
cltd
add
pushf
cwtl
lcall
addb
jnp
jge
jp
jns
jns
jnp
jp
jns
jb
jb
push
push
push
cmp
aaa
popf
popf
pushf
mov
scas
lods
rep
lods
scas
sti
lods
lods
scas
std
cmpsl
cmpsl
cmpsl
std
sahf
popf
sahf
call
xchg
call
mov
scas
jmp
scas
scas
leave
movsb
cmpsb
cmpsb
cltd
jae
jae
adc
adc
add
add
add
add
outsl
insl
outsb
pop
mov
mov
xchg
std
nop
mov
xchg
xchg
xchg
lock
fimuls
mov
jp
and
inc
inc
inc
inc
dec
outsl
jo
orl
cwtl
cwtl
repnz
xchg
xchg
std
lea
mov
xchg
xchg
xchg
lcall
movsb
cmpsl
mov
scas
std
mov
scas
mov
xlat
cmpsb
mov
addl
add
add
popa
pusha
pop
or
lods
mov
movsl
mov
mov
mov
call
popf
lahf
sti
sahf
mov
cltd
call
push
push
push
jo
pop
pop
outsl
insl
outsl
outsl
xchg
subl
mov
lcall
mov
pushl
pop
mov
mov
mov
mov
mov
out
scas
lods
insl
stos
stos
stos
or
add
add
add
add
pusha
or
mov
in
mov
xchg
call
xchg
xchg
call
cltd
cltd
cltd
popf
lcall
xchg
cltd
jmp
xchg
lea
jecxz
orb
xchg
imul
popf
dec
jp
movsl
inc
jp
scas
aaa
js
mov
je
mov
outsb
ljmp
sbb
pop
mov
mov
mov
jle
movsb
movsb
push
popa
pusha
pusha
or
mov
in
movsb
test
xchg
xchg
cwtl
lcall
mov
mov
decl
addl
xchg
jno
cld
cwtl
pop
cmp
dec
js
cmp
xchg
sub
xchg
sbb
lcall
punpcklwd
cmpsl
adc
imul
sbb
pushl
push
jno
mov
pop
nop
mov
scas
scas
xchg
sahf
lahf
popf
adc
add
add
popa
pop
pop
or
stos
mov
stos
movsb
cmpsl
jmp
cmpsl
cmpsb
ljmp
cmpsl
test
lcall
decl
sub
mov
pop
incl
add
push
call
add
cmpsl
or
and
mov
jl,pn
ret
jle,pn
das
cmp
xor
dec
pop
xchg
inc
test
divl
test
add
add
add
pop
popa
pusha
or
movsb
stos
in
mov
cmpsl
ljmp
mov
pushl
xchg
mov
decl
addps
test
push
incl
add
nop
add
xchg
add
lahf
add
movsl
add
mov
insl
inc
ss
inc
mov
into
inc
mov
aam
nop
call
inc
xchg
fmuls
call
popa
sahf
dec
test
stc
mov
mov
movsb
mov
incl
add
add
pop
pusha
pop
or
popf
mov
ljmp
mov
mov
mov
test
decl
sbb
mov
pop
decl
add
xchg
add
sahf
add
cmpsl
add
scas
add
mov
dec
nop
fstps
fistpl
fistps
loop
mov
fisubrs
dec
test
cld
mov
mov
cmpsl
lods
cmpsl
xor
add
add
dec
pop
jl
jp
pushf
xchg
cltd
jecxz
lahf
mov
pushl
mov
mov
lcall
cs
sub
xchg
and
call
pop
lcall
add
scas
add
mov
xor
jmp
insb
test
in
lods
call
jno
in
jb
jmp
js
call
test
mov
inc
addb
add
dec
pop
outsl
outsl
push
mov
xchg
pushl
mov
mov
mov
je
lcall
jne
pushf
sub
xchg
or
pop
jmp
popa
pushl
or
call
inc
xchg
jmp
jp
ljmp
push
xchg
cmc
mov
fldt
mov
push
cltd
cltd
lcall
sub
push
push
push
dec
pop
imul
mov
mov
mov
mov
inc
mov
popf
jmp
inc
jg
mov
or
add
test
add
mov
push
jbe
loope
mov
push
xchg
xchg
push
xchg
push
lcall
negb
mov
stos
popa
mov
add
add
xor
pop
pop
pop
push
fisttpl
mov
mov
ret
mov
cmpsl
jmp
dec
test
mov
add
pop
pushl
add
leave
add
fsubs
cmp
jp
push
mov
into
cli
test
cld
stos
sar
cld
lods
sar
cld
lods
sar
sti
cmpsb
int
out
inc
rol
stos
stos
stos
jne
pushf
popf
or
add
add
dec
push
dec
aaa
jae
jb
stos
stos
test
out
int
cmc
lret
sti
enter
mov
mov
pusha
mov
lods
inc
jle
mov
add
mov
gs
add
iret
add
fildl
xchg
clc
xchg
mov
std
mov
xlat
std
mov
xlat
mov
sar
jmp
ret
scas
scas
lods
mov
add
add
add
add
pop
or
aam
dec
loopne
loop
loopne
loope
fcmovnb
fcmovnu
fcmovu
fcom
out
mov
gs
cmpsl
sub
pop
pushl
add
enter
add
in
jl
repnz
mov
sti
inc
loop
dec
loope
std
enter
lret
dec
cld
fdivr
out
mov
lret
divb
pushf
pushf
sbb
add
add
incb
std
add
jmp
or
in
out
sbb
in
in
xor
loope
in
mov
mov
mov
add
mov
inc
add
into
add
fldl
je
ljmp
sti
cld
iret
out
call
out
std
shl
aam
xlat
out
call
push
fcos
fmul
sar
mov
mov
add
incb
std
incl
cld
pop
aam
push
mov
pop
xchg
sahf
or
ljmp
add
lds
push
rolb
jno
loopne
ja
in
and
std
shl
fsubr
fucompp
std
xlat
jmp
sti
cld
fsub
std
aam
push
enter
rcl
sti
mov
lahf
popf
das
add
add
int3
into
int3
or
fs
lahf
adc
stos
add
mov
add
aam
jb
loope
jns
out
xor
sti
lret
loop
stc
lret
cmc
bnd
repz
out
sar
out
aam
out
shl
ljmp
ljmp
test
add
add
add
aad
mov
jb
or
imul
sbb
lret
and
cs
fists
clc
in
mov
out
jecxz
lret
mov
lret
ffree
lret
leave
faddp
sarb
in
ficompl
in
call
rorb
mov
add
stos
stos
lods
add
xchg
movsl
les
xchg
mov
nop
fidivrl
andb
into
mov
les
aam
int
aam
into
pop
aam
rorb
cmp
fnstsw
das
in
fsubl
loop
icebp
adc
in
in
or
incb
std
std
add
mov
outsb
mov
stos
jns
mov
mov
mov
mov
shrl
enter
aam
pop
mov
rcl
or
loopne
or
int
add
std
add
incb
cltd
cltd
fwait
add
mov
or
into
into
into
add
std
add
add
add
add
add
lock
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
fwait
lcall
rol
mov
xchg
leave
enter
enter
ret
mov
scas
scas
insb
stos
stos
stos
xor
jne
add
add
add
add
add
add
add
add
add
add
add
add
stos
stos
stos
add
mov
jmp
aad
std
rcl
sar
into
iret
iret
std
mov
mov
test
test
jg
jg
sbb
push
add
add
add
add
add
add
add
add
jb
jb
push
inc
inc
das
das
cs
inc
inc
inc
and
add
add
mov
mov
cmpl
dec
int3
int3
call
aam
dec
int
inc
enter
mov
scas
lcall
mov
push
add
add
add
add
jae
jne
xchg
aad
jo
ret
popa
mov
pushw
outsl
outsb
jb
bound
pop
pop
pusha
sbb
mov
in
mov
mov
mov
lods
stos
lcall
xchg
lcall
cwtl
xchg
lds
jb
es
pop
add
add
je
jae
popf
xchg
lcall
test
clc
mov
test
addb
push
dec
push
inc
mov
pushf
into
mov
mov
xchg
decb
mov
popf
lcall
mov
mov
ret
xchg
aas
sub
sub
add
add
jg
adcl
test
mov
xchg
xchg
xchg
cld
sahf
sahf
sahf
cmc
cltd
lcall
push
push
push
imul
jge
xchg
aam
lea
lcall
pushl
xchg
mov
test
lods
push
stos
stos
stos
add
add
add
scas
test
xchg
xchg
xchg
lcall
fwait
fwait
call
cltd
cwtl
std
xchg
xchg
xchg
out
xchg
mov
loope
jbe
out
xchg
bound
std
lcall
ljmp
and
mov
outsb
pushl
popf
lods
lock
mov
imul
int
add
add
xchg
pop
scas
movsl
lods
test
popf
sahf
sahf
jmp
movsl
movsb
call
imul
popl
mov
imul
push
arpl
xchg
adc
xchg
or
mov
push
insl
pushl
es
shrl
inc
inc
xchg
rcrb
subl
jae
push
movsb
popf
mov
cld
test
scas
scas
pushl
mov
decl
or
xchg
push
decl
add
mov
adc
ret
dec
ds
roll
call
inc
call
push
xchg
dec
cltd
mov
mov
mov
movsb
movsl
movsl
push
add
add
push
push
xchg
xchg
xchg
test
mov
scas
pushl
mov
movsl
call
push
decl
push
push
call
add
lods
add
mov
push
xchg
fcompl
fistps
jmp
popa
movsb
jmp
movsl
call
lcall
cmpsb
cmpsb
test
add
add
arpl
adc
sahf
fwait
lcall
mov
mov
lcall
jo
cwtl
and
call
add
stos
add
mov
xor
jmp
jnp
push
jl
push
jle
fstps
mov
and
add
add
dec
adc
push
cmp
mov
mov
ret
sar
mov
jmp
inc
jl
lahf
and
pop
jmp
add
or
fmull
in
mov
hlt
xchg
push
xchg
enter
jmp
cmpsb
inc
mov
movsl
sub
inc
inc
inc
adc
push
xchg
mov
mov
inc
inc
mov
xchg
ljmp
sbb
movsl
add
mov
arpl
ret
add
aad
js
in
insl
scas
clc
test
cli
stos
sar
cli
lods
sar
std
scas
sar
cld
lods
sar
in
scas
enter
rcr
cmpsb
cmpsb
ds
std
add
jo
inc
scas
mov
mov
mov
aam
rcl
out
leave
lret
mov
mov
jmp
add
add
aam
jno
out
test
notl
fdivr
std
rcr
std
ret
std
rcr
std
ret
fcos
lock
shl
cmpsl
test
add
add
add
in
jmp
jmp
out
inc
loop
in
fldenv
movsl
daa
outsl
ljmp
add
int3
add
faddl
jbe
out
cmp
std
iret
out
std
shl
shl
call
in
call
in
cmc
leave
fcos
aam
int
scas
lods
scas
popa
cmpl
add
std
std
add
std
std
push
int
shrl
lahf
sbb
lods
add
mov
add
jecxz
jns
repz
cmpsl
cld
enter
call
cld
aam
sti
shl
cli
shl
push
leave
xlat
fmul
shl
mov
mov
xchg
xchg
xchg
pop
mov
cld
lods
push
gs
mov
or
ficomps
cmp
imul
mov
into
bnd
ret
shl
out
aam
ljmp
scas
push
cltd
cltd
lcall
add
add
rol
mov
stos
xchg
inc
and
ret
int3
int3
js
mov
fdivrs
int3
adc
into
outsl
fxch
rcrb
rcl
dec
in
fistpll
call
out
out
sbb
sarb
cmp
movsb
lods
arpl
stos
mov
ret
cs
mov
int
fstp
fimuls
int
int3
or
aam
std
incl
addb
add
add
add
roll
incb
std
add
add
add
addb
movl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
call
mov
rcll
sub
stos
inc
jl
into
gs
sub
out
and
or
je
sub
xchg
xchg
and
in
and
aaa
cmp
imul
mov
cmp
fidivrs
adc
rclb
cltd
xor
jne
test
xchg
xlat
fcom
insb
or
sbb
pop
dec
cmp
jl
adc
into
shrl
movb
je
and
sub
imul
xchg
mov
enter
sti
jmp
test
dec
cmp
subl
pop
mov
ret
in
cmc
loope
mov
dec
xor
imul
sti
mov
aas
in
xlat
sbbb
push
pop
cmc
aas
sub
adc
mov
xor
rcr
jae
pop
mov
xchg
push
pop
xlat
outsb
mov
scas
cmpsl
lods
cmc
mov
enter
add
xor
push
in
dec
push
xor
subl
movsb
push
out
mov
outsb
add
pop
dec
rcrb
add
push
movsl
stos
and
sub
js
hlt
movsb
pop
push
out
dec
jnp
adc
into
cltd
xor
pop
xor
dec
inc
mov
insl
lcall
mov
xchg
xchg
sub
or
test
sbb
mov
dec
in
or
outsl
push
inc
pusha
xchg
sub
mov
inc
in
stos
inc
flds
into
gs
fnstenv
pop
in
orl
adc
aam
pushf
xor
testb
pop
dec
test
outsl
scas
pushf
pop
lret
mov
push
jmp
xchg
pop
jo
mov
and
aaa
add
pop
mov
bound
test
inc
ficoml
pop
sub
dec
push
call
js
outsl
push
into
cltd
jbe
lret
out
lea
in
xchg
sub
inc
stos
push
mov
lods
arpl
pop
adc
loope
loopnew
adc
in
and
cmp
sub
mov
les
mov
pop
ret
repz
test
fs
inc
mov
mov
lock
and
enter
outsl
arpl
push
out
jl
lea
lret
adc
cld
scas
mov
loopne
xor
dec
add
xorb
mov
ret
lods
inc
cmc
cmpsb
daa
mov
dec
clc
inc
fsubrl
push
sbbl
sbbl
inc
out
lahf
and
fcoml
mov
cli
in
push
sbbb
call
mov
scas
insb
lods
mov
int3
mov
fists
adc
xchg
jno
arpl
es
aaa
into
sub
lods
inc
or
jge
lret
bound
jae
sarb
xorb
pop
sahf
add
inc
ja
and
fs
fisubl
leave
popa
clc
cli
or
dec
nop
daa
mov
mov
ret
hlt
xor
cli
gs
sbbl
lcall
scas
in
sub
push
pop
push
ss
jg
jb
pusha
push
jmp
sar
nop
add
jb
in
pop
scas
push
push
xchg
sub
ja
int3
test
scas
inc
mov
push
ljmp
jb
dec
jmp
xor
daa
mov
ret
hlt
movsb
daa
mov
inc
testb
imul
cli
jns
or
int3
push
sub
pop
popa
inc
fstl
mov
sti
in
add
stc
nop
sbb
cmp
lods
mov
int3
mov
ficoms
or
subb
cmpsb
pop
mov
or
sub
sub
outsb
jp
scas
inc
dec
cltd
inc
fcmove
outsl
sbbb
in
testl
jo
pop
repnz
xchg
add
rclb
mov
sbb
inc
gs
js
push
xor
movsl
cmp
push
xor
xor
shlb
movsb
cs
adc
es
and
cmpsl
jge
cmp
jae
xor
sub
out
cmp
sbb
jnp
shlb
das
mov
fcomi
xchg
es
jmp
adc
ds
nop
insb
les
test
mov
mov
push
fmul
pushw
jb
push
sub
pop
pusha
shl
mov
mov
jb
and
mov
and
test
shrb
push
mov
outsb
or
push
call
inc
and
stos
inc
adc
or
pop
repnz
fcmove
or
mov
inc
xor
shlb
ret
mov
dec
out
sub
pop
jecxz
inc
adc
cmpsl
ds
or
lds
inc
ficoms
data16
or
jne
cli
adc
aam
and
js
shll
into
add
xchg
sub
and
lret
dec
in
iret
ljmp
and
pop
cmc
clc
ret
or
pop
sub
ret
test
bnd
and
pop
sub
roll
repnz
fs
push
pop
shlb
repz
dec
in
xor
fs
repnz
inc
fstps
lds
lret
repnz
insl
in
fsubrs
cmp
ret
xor
icebp
mov
mov
aaa
fs
in
repnz
fdivl
aaa
nop
daa
mov
in
mov
test
arpl
mov
pop
mov
es
arpl
lock
mov
sub
fs
mov
xchg
bound
xchg
sub
out
and
imul
cmp
and
or
mov
pop
lock
popf
pop
aam
dec
or
ljmp
sub
jg
fistpl
jmp
dec
sub
cltd
pop
ficoml
or
sbbb
push
inc
fisttpl
dec
loope
fisubl
or
pop
cmc
repnz
and
add
or
push
repnz
inc
fistl
adc
repz
aas
pop
mov
jns
ret
call
push
dec
and
add
imul
or
sbbl
sbb
push
dec
out
push
in
sbb
or
mov
sbb
pop
icebp
sbb
or
cmp
addr16
and
pop
icebp
push
repnz
pop
cmp
sbb
or
or
lods
rcrl
inc
fcomps
std
fbstp
xor
addr16
mov
js
pop
mov
cltd
cmpsl
mov
adc
ds
push
xor
ljmp
jno
mov
lcall
call
add
jo
sbb
repz
push
or
testb
cmp
imul
scas
xchg
xchg
int3
and
mov
dec
xor
push
lea
lahf
mov
filds
or
imul
pop
pop
sbbl
lods
lods
sbb
add
sub
gs
push
inc
fmull
lods
icebp
mov
shrl
push
std
shrl
and
ja
jge
loop
test
lret
sti
push
dec
loopne
and
mov
int
pop
out
cld
push
insl
add
sbb
test
xor
inc
aas
jne
inc
xlat
dec
stos
shrl
aam
rorl
add
add
stos
xor
rcrl
pop
mov
push
pop
push
popf
cmp
or
fstpl
push
cmp
pop
push
xchg
jo
jnp
cmpxchg
xor
or
dec
jecxz
and
lcall
popf
xor
jge
inc
stos
xlat
outsb
cmc
ret
pushf
xor
sbb
mov
lea
mov
push
jmp
cmp
sbbl
lea
xchg
sub
cmp
ret
push
test
inc
fidivs
movsl
jno
rcll
movsb
cmp
icebp
test
jb
scas
inc
je
sbbl
call
pop
jbe
cmp
fldt
stc
adc
das
inc
rorb
push
push
fldl
cwtl
or
mov
mov
mov
fists
push
xor
fs
jne
pop
test
xorb
or
pop
daa
inc
fcoms
xchg
pop
cmpb
jno
enter
je
iret
or
pop
sbb
dec
jbe
dec
movsb
addr16
cwtl
clc
lea
mov
insb
insl
lcall
or
loope
lret
ret
xor
popa
jo
cmp
mov
sbb
ret
rolb
pop
out
out
and
jb
xor
shll
lods
test
inc
jns
lock
pusha
pop
sbbl
mov
cmp
xlat
xor
and
out
jg
jecxz
mov
es
mov
and
lock
xlat
jl
add
dec
or
insl
lahf
popf
push
nop
inc
call
enter
cmp
adc
out
arpl
divb
cmpsl
icebp
ja
jle
sahf
scas
lret
and
lret
js
dec
jbe
xor
fsts
sbb
fstps
mov
stos
mov
test
jbe
pushf
mov
aaa
jns
enter
dec
mov
insb
fmull
in
insb
ficomps
jecxz
dec
adc
xor
iret
es
inc
in
pop
cmp
icebp
mov
push
adc
and
and
clc
pop
add
out
xor
push
test
mov
mov
clc
sub
loope
inc
jne
jb
lea
pop
adc
stc
add
sub
lods
pop
jecxz
ljmp
pop
jb
fldt
repnz
andl
lock
adc
flds
test
pop
bound
dec
pop
push
iret
cmpsb
jge
xor
jo
and
xchg
xor
pop
mov
sub
sbb
rcrb
pop
push
dec
rcrb
dec
mov
mov
nop
aam
test
sbb
xchg
or
mov
push
int
add
rcll
inc
and
push
cmp
pop
inc
out
pop
mov
mov
int
les
or
xlat
in
imul
add
std
ret
imul
dec
add
dec
testb
push
xor
out
adc
dec
aaa
and
mov
sbb
les
aas
in
dec
mov
daa
shrb
test
push
jbe
push
xor
sbb
movsl
into
mov
cmp
pop
xor
pop
adc
and
cmp
inc
mov
sub
sbb
push
outsb
mov
mov
popf
or
mov
nop
ss
lcall
daa
and
mov
cltd
leave
ja
push
sbb
adc
cli
testb
in
test
pop
stos
sbb
dec
repz
push
inc
mov
mov
or
leave
mov
dec
fs
adc
dec
mov
jns
jns
lock
negl
xchg
inc
jmp
clc
jp
jp
jo
pop
xchg
mov
test
cmp
sub
push
ljmp
cmp
mov
and
mov
adc
jl
push
scas
movsl
xchg
sub
iret
fidivl
jbe
sub
test
mov
stos
inc
ret
fsubrs
mov
repz
scas
inc
out
ret
pop
leave
pusha
dec
pop
shlb
lock
sahf
adc
lea
daa
hlt
mov
pop
bnd
xchg
sub
adc
aas
dec
xchg
iret
imul
data16
lcall
sbb
and
inc
mov
cmp
test
mov
cmpsl
lods
test
das
rorl
repnz
pop
insl
sbb
ss
insl
sub
inc
hlt
mov
loopne
mov
add
inc
xlat
lods
sub
mov
pop
cmc
jbe
addr16
jl
mov
sub
and
rorl
cld
ljmp
pop
int3
mov
out
mov
jb
shrb
popf
cmpsb
cmp
xchg
xlat
les
mov
loop
adcl
push
lods
add
or
mov
das
addr16
lods
lahf
cmp
mov
aad
in
adcl
dec
lret
and
out
loope
mov
aad
xchg
scas
mov
pop
ror
mov
ljmp
scas
or
lcall
and
test
aas
sti
shlb
ficoms
cmc
pop
testl
push
sbb
fnstenv
cli
mov
mov
mov
lods
jp
hlt
mov
scas
adc
out
inc
fistl
jb
mov
lret
nop
daa
inc
xchg
adcb
addr16
xor
mull
cli
xchg
aam
fidivl
std
sbb
mov
push
lods
std
mov
adc
jbe
dec
mov
ljmp
jno
repnz
pop
lods
sbb
jbe
mov
xchg
js
int3
arpl
xchg
sbb
sbb
or
jo
data16
jge
push
jmp
xchg
test
sarl
jb
es
mov
ss
dec
rclb
mov
jne
ja
jb
push
std
xchg
jp
stc
nop
rclb
sahf
cmp
sub
and
out
pop
enter
jno
or
adc
std
test
jg
cmpsl
or
popf
xor
jge
movsl
mov
push
imul
test
fmull
or
es
push
sbbl
out
call
add
cld
and
stos
scas
je
dec
xchg
xor
xchg
scas
shrl
mov
repnz
insl
add
xchg
adc
pop
in
lds
dec
dec
jecxz
and
popa
mov
push
sub
mov
test
cmc
mov
scas
cmpsb
cmp
jne
les
lahf
xor
inc
and
jns
jo
out
mov
xchg
jecxz
jge
mov
pop
mov
fistpl
les
test
pop
fwait
in
add
mov
xchg
inc
es
mov
xlat
adc
mov
fsub
js
xchg
pop
cmc
add
xchg
arpl
jl
in
sbb
es
and
rclb
lods
inc
push
jp
lock
js
je
mov
push
int3
jo
xchg
cld
out
sub
push
sbb
lods
in
iret
push
vpunpckhbw
js
std
pop
adc
xchg
sbb
xchg
enter
mov
push
in
jle
xchg
jae
out
cli
xchg
loope
xchg
sub
sbb
pop
shll
into
data16
mov
int3
in
orl
sbbl
and
mov
mov
sub
rolb
repnz
loopne
arpl
gs
popa
mov
xchg
insb
mov
mov
frstor
rcr
loop
push
sbb
dec
xor
je
mull
sub
jne
pop
or
xchg
sub
xchg
mov
aam
lods
and
loope
dec
dec
xor
jp
call
add
sbb
pop
pop
or
mov
and
jo
lods
inc
push
cltd
jl
sbb
lret
xor
jg
inc
stos
inc
pop
int3
push
popf
adc
enter
and
bound
inc
fprem1
in
pushf
dec
sbb
sbbl
addr16
test
ret
mov
push
inc
mov
gs
cmpsl
ds
mov
andw
cmpsl
std
xchg
stc
mov
jp
adc
in
add
mov
fcomps
push
cmp
incb
push
pop
repz
xor
adc
mov
mov
cmp
mov
repnz
loope
addr16
insb
gs
call
mov
sbb
test
dec
cmp
lock
das
and
dec
loope
dec
dec
in
xchg
push
ret
jae
jmp
add
dec
insl
sbb
push
stos
xchg
imul
lock
cld
xchg
fs
push
movsl
xor
sub
test
dec
loope
dec
inc
fldl
punpckhwd
mov
push
out
cmpsl
xchg
int
outsb
add
and
sahf
xor
xchg
repnz
js
xchg
fidivl
add
xchg
jg
clc
into
xchg
push
mov
ljmp
sub
inc
dec
in
notl
mov
imul
fbstp
xlat
mov
push
insl
mov
ds
push
push
add
pop
xchg
sub
je
mov
sti
xchg
inc
pop
add
jo
pop
mov
cltd
daa
mov
jns
xor
push
xchg
pop
repz
out
icebp
jp
adc
jnp
ret
das
dec
jmp
xor
mov
aam
cs
aad
lods
dec
repnz
add
mov
fldcw
sbb
xor
jae
mov
xor
pop
stos
inc
test
enter
pushf
xor
aad
jge
add
fwait
cltd
jo
mov
mov
or
inc
fmuls
add
idivb
adc
popf
lret
lds
fwait
xor
popa
pop
cmc
inc
or
adc
jb
outsl
scas
das
lcall
cld
mov
stos
add
mov
cmp
aam
add
add
add
sub
sub
or
push
test
loope
scas
shrl
orl
xchg
les
ss
and
jmp
add
js
shlb
sbb
call
push
popa
push
movsl
cmp
inc
xchg
ret
adc
dec
loope
add
cmpb
xor
xchg
cs
daa
mov
mov
int3
lcall
ljmp
jno
add
mov
inc
jge
roll
lods
inc
mov
leave
lret
bound
fldl2t
addb
jne
fwait
sub
sahf
bound
mov
daa
cmp
cmp
jp
push
popa
clc
jbe
out
xchg
lahf
jg
in
push
movsl
jmp
sahf
xor
mov
rorl
pop
insl
fidivl
jg
adc
clc
or
xchg
cs
and
lds
aas
test
jecxz
ss
pop
hlt
push
repnz
jnp
push
lea
cmpsl
pop
sub
lds
ja
dec
inc
dec
jecxz
nop
aad
leave
icebp
jp
fsub
repz
negb
test
mov
pop
add
xchg
sub
ja
mov
in
andl
add
and
and
sub
repz
inc
fst
sbb
pop
push
repz
jmp
jns
jnp
jb
xor
ret
pop
mov
ja
mov
xchg
hlt
mov
sbb
test
cmpl
mov
or
rcr
lock
shll
ja
pop
push
pop
out
cmp
or
inc
push
mov
push
xchg
scas
out
xchg
mov
bound
adc
movsl
outsl
daa
jmp
ret
mov
rorb
into
mov
mov
sbb
outsl
push
xor
or
test
cmp
inc
mov
inc
in
xchg
mov
les
in
cmp
and
jae
xor
iret
cmpb
mov
sub
testb
or
fcoms
cmp
xor
mov
dec
xchg
loope
xlat
sbb
and
mov
and
fcoms
add
sbb
hlt
mov
jno
adc
mov
imul
fwait
xor
fcmovnb
pop
or
je
mov
fsts
sbb
xchg
xlat
in
mov
orl
icebp
inc
outsl
adc
outsl
std
jo
xor
push
dec
in
mov
mov
sbb
neg
sub
jg
cwtl
mov
pop
bound
or
insl
jo
jmp
das
jno
sub
leave
bound
xlat
cmc
std
xor
mov
shl
pusha
pop
sub
nop
pop
inc
mov
inc
shlb
jo
inc
push
dec
iret
sbb
mov
mov
xchg
xchg
notb
sbb
xor
lahf
dec
xchg
cmp
pop
pop
mov
fcomp
pushf
xchg
mul
loop
mov
xchg
mov
and
pop
xor
pop
adc
scas
scas
stos
mov
outsl
in
mov
push
dec
sbb
and
icebp
int
popf
dec
clc
xchg
testb
lret
movsb
into
cmp
pop
mov
mov
mov
loop
arpl
mov
leave
daa
in
test
cmp
add
inc
mov
scas
cmp
idiv
xchg
mov
jae
xor
mov
push
out
popf
xlat
or
in
add
fidivl
movsb
mov
sahf
mov
mov
test
sub
movsl
dec
addr16
mov
dec
popa
add
stos
loopne
int3
mov
adc
lcall
or
pmullw
insl
insb
jmp
mov
xchg
cmp
roll
push
int
cmp
faddp
fiadds
xorl
test
mov
rcll
jmp
fs
inc
mov
repz
add
dec
out
push
push
jg
test
push
mov
je
inc
jl
int3
adc
ret
test
daa
xchg
xorl
and
jecxz
stc
mov
pusha
xchg
movl
and
sub
inc
mov
out
je
addr16
jmp
and
andb
adc
stc
lods
std
adc
cmpl
aam
push
pop
sub
iret
aas
mov
hlt
pop
int
insl
les
dec
jns
inc
rcrl
ds
test
movzbl
adc
xchg
fneni(8087
andl
outsb
movsl
adc
xor
fcom
or
xor
mov
or
incl
cmc
popa
xchg
addr16
add
dec
sub
cmp
push
nop
iret
sbb
lret
xchg
fwait
mov
outsl
cmp
jnp
jmp
pop
test
dec
cltd
in
jne
adc
push
jbe
sbbb
and
loope
xchg
push
mov
in
fnstenv
add
add
iret
add
dec
xchg
cs
repz
les
jno
pop
adc
repz
cltd
cmp
lret
mov
mov
and
push
addb
ss
pop
push
or
fidivrl
push
mov
cmpsb
out
pop
lcall
add
mov
xor
pop
int
ljmp
out
cmc
mov
sub
pushf
and
cli
pop
imul
arpl
mov
mov
outsl
push
clc
mov
hlt
mov
mov
jne
mulb
pop
jne
or
test
push
cmpsb
les
mov
lea
mov
dec
jo
test
rcll
inc
push
xlat
dec
mov
and
ljmp
popa
fcompl
into
pusha
inc
dec
or
or
hlt
outsb
sbb
lcall
pop
int3
nop
push
dec
xchg
dec
sbb
and
call
jl
or
xchg
insb
pop
flds
xor
leave
inc
mov
sub
xchg
data16
push
repnz
dec
sbb
mov
jecxz
leave
push
push
push
mov
lret
and
jge
xor
add
jp,pt
fcoms
push
mov
in
dec
mov
inc
daa
mul
aaa
in
and
jmp
fwait
clc
data16
iret
push
jmp
sbbl
jg
dec
test
test
sub
pop
push
cmp
iret
mov
xor
xchg
pushf
xchg
enter
fldenv
push
outsl
push
ret
push
dec
xor
popa
pop
out
test
lds
testb
or
xor
sbb
push
cmp
aad
ret
mov
add
mov
insb
incl
jg
push
push
cmp
sub
fcompl
loop
xchg
add
cmp
enter
sahf
test
sub
sub
or
sbb
cmp
loopne
cs
xchg
cmp
int3
cltd
mov
insl
xlat
xor
jo
lea
iret
daa
repnz
mov
outsb
mov
sub
and
mov
pushl
fmull
jb
test
cmovae
or
icebp
mov
sbb
lret
cli
aam
mov
and
mov
mov
dec
daa
testb
sub
pusha
or
test
das
mov
push
sahf
imul
stos
add
iret
and
aaa
clc
and
in
dec
pusha
xchg
lea
sbb
and
fiadds
repnz
adc
test
loope
movsl
dec
sub
adc
and
loope
sbb
fnstenv
pop
jns
loope
aam
add
out
inc
movl
jno
mov
sbb
fmuls
fnstcw
adc
ret
rcrl
mov
mov
dec
pop
dec
lea
push
int3
cmp
aad
pop
rcrl
mov
sbb
ret
in
push
jb
cmp
imul
sbb
inc
mov
loope
movsl
fisubrl
out
add
xor
cmc
jne
cld
pop
jo
scas
lods
inc
xchg
rorb
inc
xchg
test
and
sti
mov
push
dec
jno
mov
dec
addr16
jl
mov
arpl
push
push
fcmovnbe
mov
std
push
je
lret
enter
mov
gs
shrl
mov
cs
testb
push
testb
stos
fmuls
xchg
xor
sbb
out
jne
jns
pop
push
pusha
inc
clc
loope
mov
repnz
push
and
xchg
mov
fcomps
adc
lds
mov
sar
inc
ljmp
xor
cmp
addr16
test
jnp
xor
and
sub
xor
lret
out
dec
pop
lret
aaa
inc
lock
in
jbe
mov
jp
xor
ds
sbb
stos
pop
or
cwtl
nop
push
in
add
arpl
pop
inc
enter
xchg
mov
daa
std
sub
xchg
mov
cmpsb
sbb
cmp
cli
dec
pop
pusha
xor
dec
and
inc
and
pop
bnd
or
lods
test
enter
sahf
xor
fwait
cmp
in
imul
insb
mov
test
sbb
push
pop
push
and
xchg
mov
adc
mov
dec
sub
mov
sbb
dec
mov
sub
xchg
xchg
add
fs
lret
mov
cmp
push
or
jne
lea
and
movsb
push
cmp
jp
lret
stos
jge
pop
icebp
loop
pop
cwtl
inc
mov
imul
decl
cmp
ss
lret
pop
aad
daa
mov
mov
xor
mov
mov
fisubrl
in
stos
dec
std
bound
es
mov
ret
push
xchg
and
jmp
inc
cmc
jbe
in
xchg
in
sub
mov
mov
mov
cli
xchg
enter
repnz
jnp
mov
scas
shlb
mov
mov
outsb
lods
inc
lcall
pop
clc
bound
jnp
clc
and
or
data16
fs
jmp
ds
test
mov
mov
adc
sub
push
pop
stos
and
mov
mov
in
cmpsb
xchg
inc
mulb
ret
jp
into
adc
sbb
divb
shrb
fwait
pusha
repz
sbb
cmpsb
push
in
inc
jo
mov
rorl
mov
fwait
sbb
clc
mov
sbb
inc
clc
rolb
je
out
loope
push
jl
faddl
or
mov
mov
mov
push
and
push
xor
movsl
cmpsl
cmp
adc
mulb
je
lods
das
sbb
arpl
daa
jecxz
cmp
fildl
repz
mov
cwtl
outsl
das
jecxz
scas
das
in
mov
cmp
outsl
jbe
roll
popf
xchg
add
sub
mov
jno
push
sbb
xor
and
bound
out
in
cli
pop
test
push
lods
ja
rol
mov
loope
inc
pushf
xor
dec
add
data16
ja
orl
incb
xor
ja
add
test
inc
test
xchg
loop
pusha
shlb
cmp
pop
xchg
lcall
das
gs
push
mov
rclb
or
out
movsl
jae
jbe
mov
cmp
cmp
in
ljmp
mov
loop
ja
or
or
pushf
and
cmp
aaa
je
adc
mov
ss
pop
jnp
lcall
lods
out
das
jno
cmp
jbe
sbb
inc
add
push
enter
cmpsb
insb
xor
scas
xchg
and
hlt
pop
cmc
ret
xchg
faddp
dec
sbb
or
or
js
push
icebp
rcll
lods
lret
lds
test
lods
pop
mov
daa
xchg
iret
sbb
mov
out
sub
sbb
xor
fstps
loope
adc
and
test
or
sbb
xlat
fs
insb
flds
std
aam
push
and
or
mov
sub
ret
mov
divb
dec
jb
in
mov
and
cld
cmp
or
pusha
mov
inc
sub
add
dec
cmp
push
mov
aaa
pop
pop
inc
xor
xorl
test
sub
lcall
push
stos
add
mov
outsb
in
repz
addr16
jmp
and
mov
mov
fcomip
adc
sub
or
inc
push
mov
aam
shrl
jle
or
push
pushf
aam
push
push
xchg
lods
xor
cmc
dec
fbld
loop
outsl
pop
xlat
inc
enter
leave
push
jbe
mov
mov
and
jno
pop
cs
inc
cmp
cwtl
add
sahf
sarl
xor
jno
sbb
lret
lret
psadbw
add
sbb
fadd
pop
movsb
mov
add
mov
mov
loopne
sbb
lret
ljmp
pusha
mov
xchg
pop
inc
xchg
sbb
add
push
repnz
dec
jns
pop
insl
je
mov
pop
jge
sbb
adc
push
rcll
cmp
and
nop
stc
out
pushl
add
push
lds
mov
mov
insl
xor
xchg
adc
and
std
xlat
xchg
push
sbb
icebp
or
les
call
xor
mov
xchg
and
inc
insb
pop
cmp
gs
inc
fsub
fistpl
jns
dec
xchg
ret
test
jge
jno
mov
mov
xchg
bound
lret
mov
dec
mov
orb
xchg
jbe
xor
es
jmp
cmpsl
xchg
ljmp
push
or
ret
lahf
inc
mov
mov
icebp
add
adc
jae
jbe
rcr
pop
push
or
pop
jbe
das
dec
es
in
sub
lcall
rcrb
mov
jg
xor
lcall
fs
xchg
xor
mov
rcl
pushf
inc
sub
punpcklbw
out
vpor
lock
adc
call
sub
sbb
and
sub
jo
cmc
not
and
cwtl
sbb
mov
fnsave
mov
jg
adc
cmp
sub
stos
mov
fnstsw
icebp
xchg
sahf
ret
aam
or
inc
outsl
outsl
jae
jp
int3
push
loop
adc
push
out
adc
repnz
aas
jmp
imul
sbb
es
xchg
push
push
dec
lea
cmpsl
mov
daa
add
outsb
das
lret
cltd
lcall
test
or
scas
xchg
or
or
xchg
lret
inc
inc
idivl
dec
cmpsb
js
push
adc
lret
inc
popf
lods
imul
xchg
sub
dec
cmpb
sahf
repz
aad
mov
ret
or
inc
enter
daa
shr
in
out
jecxz
xor
adc
insb
adc
lock
ss
cwtl
dec
pop
push
or
mov
sahf
inc
icebp
lods
adc
push
jns
push
and
shll
sarl
adc
adc
push
cs
lahf
sub
xchg
cltd
pop
hlt
hlt
repz
sbbl
test
aas
loope
mov
rcr
cmpsb
test
xchg
pop
xor
dec
jmp
sbbb
neg
pcmpgtw
cmp
sub
mov
and
mov
mov
sbb
pop
pusha
jno
cmpb
lock
push
sbb
mov
jp
jmp
jg
sbb
popf
insl
imul
call
jge
and
in
scas
push
addr16
cmp
lods
push
invd
mov
test
inc
cmpsl
jns
or
ret
pop
rcrl
cmpsl
lds
gs
in
dec
test
cwtl
jmp
fdivl
dec
jo
xchg
aaa
mulb
dec
repz
insb
and
lret
pop
xchg
mov
fwait
dec
mov
gs
pop
mov
or
outsb
add
and
pop
jge
or
into
mov
mov
cmp
mov
jae
jl
push
icebp
cli
mov
mov
jno
sti
popf
je
aam
dec
js
mov
mov
ret
push
sub
push
int3
lret
imul
and
adc
hlt
hlt
decl
cmp
pop
and
aaa
mov
and
hlt
xchg
icebp
and
int
mov
movsw
cmpsl
push
inc
imul
sub
and
mov
jecxz
test
mov
stc
cli
mov
rorb
mov
les
fisttps
dec
into
shl
imul
sub
jl
dec
and
es
mov
js
andl
imul
pushf
xor
stos
xchg
mov
stc
stc
mov
aas
aam
popf
mov
push
jl
xchg
test
outsb
mov
xchg
pop
cld
add
xchg
mov
pop
add
aam
jg
push
leave
dec
xchg
in
int
lret
lcall
pop
push
scas
xchg
daa
jmp
aas
inc
inc
je
ret
popf
adc
lahf
mov
mov
shrb
mov
in
stc
sarb
xlat
fldenv
jg
and
dec
clc
pop
mov
mov
jmp
inc
pusha
test
xor
sti
outsl
sahf
out
insb
movsb
inc
daa
mov
mov
push
lods
in
rorl
outsb
sbb
xchg
enter
enter
cmp
push
jno
push
xchg
bound
test
into
jmp
jp
lock
sar
loopne
pop
data16
fwait
shrb
stos
lods
data16
lds
mov
xor
imul
test
fdivp
fistl
shrl
adc
cwtl
inc
inc
aas
and
mov
fbstp
dec
hlt
cwtl
pop
push
add
in
out
sub
cli
mov
adc
pop
inc
loop
mov
mov
and
adc
int3
lds
lret
sbb
lahf
ljmp
fldl
mov
out
rol
addr16
repnz
cmp
test
and
inc
dec
fldenv
dec
cmpl
insl
repz
and
xor
cmp
das
out
sbb
mov
or
xlat
mov
insl
rcrb
push
jl,pn
stc
pop
cmp
test
xchg
pop
cltd
push
jge
add
xor
or
xor
lret
lret
mov
lea
add
frstor
and
dec
pusha
jns
cmp
dec
inc
jb
mov
imul
or
stos
add
cmp
nop
fsts
mov
xor
insl
out
aaa
xchg
mov
notl
lea
pop
add
sbb
mov
lret
or
loop
sub
adc
mov
and
add
cmc
mov
imul
shl
js
mov
test
cmp
inc
dec
sbb
jb
pusha
pop
imulb
fwait
pop
jns
mov
cltd
or
jne
shl
scas
xor
rolb
push
cmp
jnp
fsub
test
loop
xlat
xor
mov
repz
cli
sbb
insl
inc
push
into
popa
movsb
clc
add
cmp
das
jbe
iret
or
sti
loop
fistl
out
stc
cmpsb
mov
pop
in
in
push
or
lahf
and
and
sub
rcll
inc
adc
jns
fwait
clc
mov
or
ja
repz
cmp
cmp
and
or
icebp
fisttpl
sahf
ljmp
movsb
fsubrl
cmp
xchg
mov
inc
pop
mov
ficoml
sahf
adc
sub
fwait
xchg
mov
xchg
xchg
int3
das
pop
iret
movsb
xchg
jp
xchg
mov
mov
ss
sbb
sub
stos
ja
sbb
jb
jns
ljmp
fs
fs
cwtl
jle
push
jae
sub
aad
push
mov
xor
xor
inc
fcomp
cmp
or
pushf
dec
lods
iret
in
fsts
leave
or
mov
movsl
je
dec
inc
repnz
cmp
pop
sahf
inc
inc
shrl
cmpsb
jg
and
mov
and
and
test
xor
lret
sbb
jne
inc
fisubs
fsubl
mov
and
outsb
lods
rcl
push
push
jo
jbe
andb
shll
rcll
loopne
mov
sub
insb
rcrl
lock
sbb
aas
bound
pop
dec
insb
enter
icebp
loopne
movsb
mov
sbb
xor
pusha
loope
mov
cwtl
mov
mov
mov
xor
jne
idiv
xor
xor
dec
hlt
mov
jg
insl
in
pusha
mov
push
mov
pushw
inc
or
xor
ss
mov
add
ljmp
cmpsb
call
pop
inc
sarl
add
sbb
and
xchg
ret
cmp
cmc
and
mov
in
mov
lock
and
pop
jecxz
pusha
sti
loop
into
fisubs
scas
shlb
add
lds
repnz
fs
mov
cmpsl
jb
xchg
pminub
push
mov
xor
bound
std
shl
and
pop
cli
ret
mov
mov
mov
lret
dec
je
into
loop
mov
mov
adc
loop
or
xor
in
out
cmc
ret
jp
nop
in
adc
shl
adc
dec
loop
inc
arpl
mov
add
cmp
fcom
insl
sub
jnp
std
call
jne
mov
rolb
lret
inc
and
mov
leave
ret
hlt
je
fcoms
cmpb
out
add
xor
stc
out
pop
stos
lods
xor
aad
in
mov
jnp
xor
push
aad
xor
jb
push
movsb
mov
lret
outsl
scas
shlb
lea
cwtl
cld
lea
push
data16
or
outsb
out
std
dec
in
int3
pop
add
xchg
repnz
and
in
mov
xchg
jmp
cli
and
in
xor
leave
dec
push
mov
push
sbb
into
imul
push
hlt
neg
mov
lods
jp,pn
xchg
mov
jle
sbb
ds
jae
sbb
inc
pop
adc
bound
ja,pt
sub
dec
mov
in
out
je
in
sub
lahf
or
hlt
fiaddl
xor
inc
lret
mov
imul
xor
outsl
fsubrs
xchg
inc
jl
adc
and
movsl
les
clc
dec
sub
setle
aad
mov
adcl
fadds
xchg
xchg
test
mov
lods
mov
ret
sub
sbbb
jg
xchg
adc
test
inc
rorb
arpl
fucom
outsb
nop
leave
push
test
xchg
jno
jae
rol
sub
sub
add
out
cmp
pop
rclb
sbb
push
push
pop
sub
aad
jle
cmpsl
dec
sub
mov
jmp
lods
enter
add
jmp
dec
mov
sti
and
les
push
pop
pushf
mov
jmp
dec
icebp
dec
xchg
and
dec
je
test
pusha
or
lods
sub
insl
mov
jno
das
push
mov
fldl
mov
shll
cmp
mov
mov
cmp
add
out
daa
sbb
inc
mov
rcll
dec
push
inc
int
adc
push
adc
std
in
sbb
adc
jle
mov
sar
aad
iret
rolb
test
dec
subl
jo
test
scas
shlb
push
jnp
outsb
inc
in
sbb
or
out
lahf
fimull
push
push
add
arpl
stos
fdivp
out
data16
jecxz
push
test
xchg
loop
outsb
aas
in
push
inc
out
push
pop
mov
in
das
mov
cli
push
adc
fcom
xchg
not
mov
adc
adc
int
xor
arpl
pusha
and
scas
cs
js
call
aaa
sahf
jnp
scas
popf
addr16
rep
and
lret
sbb
mov
cwtl
cmp
sub
or
cs
cld
sub
dec
mov
cmp
test
xchg
mov
pop
adc
rcll
rorl
mov
mov
add
mov
and
int3
xchg
sahf
or
dec
subl
mov
enter
popa
es
fstpt
pop
mov
or
jg
or
add
orb
mov
insl
clc
test
in
mov
mov
decb
call
scas
es
push
mov
and
mov
std
xchg
jg
mov
pushf
shll
jnp
int3
mov
leave
sub
mov
mov
fstps
mov
stos
xchg
aas
add
in
out
sub
test
rol
outsl
sets
ja
sub
lret
dec
lret
je
xor
ret
pop
sbb
xor
xchg
cltd
int
pop
mov
inc
testb
add
shrb
in
hlt
jne
int
inc
jae
mov
xchg
fadds
std
sub
mov
adc
mov
cwtl
in
sbb
xor
sbb
cmp
cmc
push
mov
xor
imul
ja
mov
pop
inc
repnz
das
in
xchg
popa
mov
bound
push
cmp
sbb
inc
loope
fidivrs
jno
xchg
mov
xor
enter
insb
test
adc
daa
cli
mov
sbb
in
subl
pop
fmul
out
xchg
addr16
js
je
and
add
fcompl
out
xchg
jns
add
call
inc
aad
orb
outsb
stos
popa
gs
mov
test
andl
jae
inc
ss
cmp
jo
mov
sub
test
xlat
cmp
mov
cwtl
pop
test
mov
cltd
xchg
add
sub
jb
jbe
push
or
mov
into
das
push
xchg
push
loop
ret
cmp
arpl
insb
xchg
test
push
shll
mov
push
inc
or
or
cmovge
and
and
dec
jl
ret
test
mov
fadd
add
fidivl
hlt
call
lods
shr
jo
inc
cmp
mov
sbb
stc
adc
loope
mov
cmc
inc
and
fs
mov
scas
cmpsl
bound
int
jge
or
roll
out
in
cmp
mov
in
test
pop
inc
ficoms
clc
js
jmp
sar
out
adc
inc
cmp
les
icebp
push
shrl
cmpl
movsl
popa
jle
cmp
xor
and
inc
dec
fmuls
outsl
mov
ret
mov
insb
or
and
sbb
sbb
outsb
dec
sub
lcall
stos
xor
mov
or
setae
test
jbe
mov
pop
mov
sub
adc
pop
adc
sbb
xchg
pop
call
sbb
push
test
aas
dec
sbb
xchg
stos
inc
or
mov
test
xchg
mov
push
mov
pop
pop
orw
int
pop
pushf
jecxz
inc
sbb
hlt
adc
mov
into
popa
xor
aam
mov
pop
add
inc
lcall
or
or
or
ret
dec
out
adc
in
clc
sub
xchg
decb
cs
xchg
stos
in
mov
pushf
sub
cld
mov
mov
stos
jns
in
sub
mov
aad
fnstsw
test
insb
nop
lods
movsb
cltd
push
jae
xor
jb
lods
rcrb
aaa
aas
and
imul
shrl
les
cmp
mov
cli
mov
add
mov
sbb
subb
adcb
add
inc
sbb
pop
test
add
js
add
jecxz
mov
into
movsb
mov
push
inc
pop
in
fwait
mov
mov
xor
push
movsb
pop
or
add
inc
or
inc
aad
out
mov
inc
fdivrl
cmpsl
int
out
sarb
arpl
cltd
mov
mov
cwtl
outsl
in
scas
mov
test
dec
pop
enter
outsl
jl
inc
dec
dec
push
stc
jl
iret
cmpsl
mov
outsb
imul
mov
out
jle
sub
loope
mov
daa
and
std
fwait
clc
insb
dec
or
mov
out
adc
in
loope
adc
xor
push
pop
mov
ljmp
cmp
gs
push
push
fucomi
sub
insl
lcall
adc
cmp
pusha
jp
push
fbld
in
insl
inc
cmp
inc
sbb
mov
mulb
mov
cmp
cmp
add
add
pop
int3
and
push
cmpsb
sbb
mov
aaa
pushf
add
lea
pop
add
lcall
push
inc
xchg
jbe
cltd
pop
inc
and
lret
hlt
pusha
loopne
mov
out
es
xor
dec
and
shlb
and
out
jns
mov
cmp
test
or
cmp
cltd
cli
add
jecxz
das
sub
lods
popf
push
mov
mov
sahf
int3
out
hlt
dec
push
jg
add
fists
fistps
mov
inc
inc
movsl
add
sbb
hlt
pop
popf
mov
test
imul
enter
pop
lret
mov
xchg
xorb
fcmovu
andb
inc
push
call
imul
and
adc
jp
or
sbb
xor
jge
sbb
and
inc
mov
push
mov
pop
repnz
pop
push
and
lcall
addr16
jmp
dec
stos
in
xor
int
add
rclb
scas
cld
pop
sahf
jo
icebp
mov
and
in
jg
jae,pt
or
or
push
fwait
enter
dec
sub
ds
nop
jne
adc
adc
sub
add
stc
adc
ret
sub
inc
fisubrs
and
jbe
mov
add
das
push
in
and
arpl
je
out
lods
add
mov
mov
and
and
loopne
sbb
ja
pusha
into
mov
and
lret
insl
sti
iret
int3
test
dec
inc
int3
and
or
mov
cmc
fwait
add
scas
pop
and
mov
scas
jbe
xlat
cmpsl
rclb
leave
pop
cmc
cli
and
push
sbb
dec
jne
daa
cmpsl
outsb
pushf
xor
sarl
dec
adc
jno
outsb
in
test
rorl
jmp
das
movb
cmp
pop
pop
hlt
mov
add
loop
mov
cmp
xchg
sub
push
mov
mov
aam
in
adc
xchg
dec
or
xchg
imul
xchg
push
adc
call
or
cmp
dec
in
pop
jge
lea
add
cmpsb
xchg
fadds
mov
cmp
push
fidivl
dec
pop
jle
cld
xchg
ficompl
sbb
mov
inc
adc
rcrl
test
and
dec
loop
inc
cltd
xor
outsl
push
outsl
cltd
rcrl
xchg
sub
in
fidivl
in
inc
push
inc
add
jno
iret
imul
mov
fimuls
mov
push
mov
mov
fcoml
cld
push
xor
sbb
shrl
jp
cmp
mov
movsb
pop
and
jb
jl
lds
into
dec
jecxz
es
inc
and
pop
fs
pusha
sahf
jl
inc
cmpsb
mov
mov
add
mov
pop
push
inc
xlat
mov
inc
cmpsl
scas
xchg
sub
enter
cli
sbb
and
insl
add
inc
insl
jle
lea
lahf
jbe
leave
mov
push
in
adc
insl
outsb
pop
lds
test
pop
add
lds
dec
jle
js
cmpsb
cmp
ret
lret
repz
lods
sbb
outsb
add
stos
mov
fdivp
aam
inc
push
push
mov
jge
jno
out
jp
inc
movsb
lret
les
lds
popf
push
imul
dec
jno
sbb
int3
and
jbe
push
add
dec
jo
pop
stos
imul
hlt
mov
dec
lock
mov
test
lret
hlt
mov
js
adc
xchg
dec
outsl
mov
cltd
insl
stc
xchg
mov
pop
cmc
lock
sub
adc
mov
mov
ret
add
out
repz
sub
dec
popa
clc
ja
fs
xchg
cwtl
lea
mov
sbb
jecxz
ret
sbb
loope
dec
cmp
loopne
xchg
mov
lahf
mov
popf
xor
rolb
inc
dec
sub
sub
pushf
xor
mov
xor
or
jo
sub
push
push
pop
add
mov
gs
rcl
mov
repz
dec
and
mov
ret
or
cld
loop
add
push
add
addr16
test
in
ror
arpl
lods
inc
pop
pop
inc
fadds
mov
mov
pushf
and
daa
cmpl
adc
mov
add
sub
daa
and
jae
dec
mov
pushf
cmpsb
xchg
pusha
test
out
rcrl
dec
loopne
cmp
jl
stos
movsl
test
aam
fisttps
lahf
or
adc
push
jnp
mov
je
sti
lods
lds
dec
lea
pop
xchg
dec
sbb
stos
xchg
fs
jecxz
mov
push
in
shlb
cli
push
dec
in
sbb
cmp
pop
pop
cmc
andl
fs
and
xor
inc
dec
dec
in
movsb
cmp
ret
std
out
or
in
cmp
arpl
int
test
mov
fists
pop
adc
fs
insl
or
xchg
je
sub
in
rorb
or
xchg
sub
sub
push
xorb
lods
movsb
push
in
fmulp
xchg
cmp
dec
in
pop
xchg
sub
cmpsl
xchg
loopne,pn
into
gs
or
in
mov
in
stos
popf
xor
mov
add
cmc
mov
movsl
ss
pop
hlt
mov
add
mov
in
clc
popf
xor
or
xor
xor
fs
sahf
sbb
and
ljmp
xor
push
jns
xchg
xchg
stos
inc
lret
movsl
in
in
pop
hlt
push
push
jp
cmp
sub
bound
in
test
icebp
fstp
mov
or
int
sub
sbb
xor
dec
loope
xchg
dec
in
lret
popf
xor
in
jb
pop
pop
ret
pop
push
cmp
rep
xorl
into
inc
fisttpll
add
es
jmp
mov
rcrl
add
arpl
inc
and
pushf
xor
shll
hlt
sbb
hlt
inc
adc
xor
xchg
outsl
dec
jecxz
mov
xor
mov
xchg
sub
add
fs
sbb
test
cmp
cmpsl
dec
in
add
add
pop
sti
xchg
xchg
pop
stos
inc
mov
adc
mov
outsl
jmp
or
jle
bound
xchg
cltd
mov
inc
adc
push
cmovp
cmp
push
mov
ret
imull
mov
push
sti
mov
arpl
mov
outsl
into
adc
mov
outsl
dec
loope
cmp
arpl
dec
loop
add
add
fimuls
lahf
pop
pusha
push
mov
in
cmp
stos
add
pop
cmc
cli
push
cmpsl
mov
sbbl
fidivs
cmp
enter
dec
icebp
mov
fidivs
fwait
and
cltd
scas
lock
rcrb
mov
dec
pop
out
jle
inc
fstl
jge
int3
je
mulb
les
and
mov
push
fs
push
loop
push
pushf
push
lea
mov
push
adc
add
cs
fcompl
cmp
and
push
dec
fimuls
mov
jns
dec
repz
sub
sbb
mov
sub
xchg
mov
int
test
aas
loop
sub
push
mov
inc
jae
int3
push
mov
loop
sub
add
sub
mov
inc
xor
jns
inc
out
xchg
fs
out
push
sbb
xchg
xor
xor
bound
aam
mov
roll
lahf
adc
and
pop
inc
sbb
push
xchg
sub
mov
iret
imul
ss
xlat
imul
mov
xchg
xlat
xchg
xor
mov
ret
or
cmp
pop
mov
cld
stos
into
pop
xlat
adc
repz
stc
fisubrs
andl
dec
out
js
mov
push
in
xchg
decb
ds
cwtl
sbb
pushf
je
pop
mov
les
ret
adc
adc
and
cwtl
fs
push
movsl
mov
movb
rcrb
cmp
push
sbb
outsb
xor
mov
jle
pop
divb
outsb
dec
sbb
xchg
xor
mov
fucomi
mov
mov
sbb
daa
jnp
stos
xchg
pop
xchg
and
cmp
rcrl
sub
xor
cmpsl
push
and
sbbl
repnz
jne
push
std
cmp
push
sub
fs
shll
pop
fnstenv
int3
dec
out
cs
mov
xor
mov
mov
cmpsl
lret
or
repz
sahf
inc
imul
cmpsl
jg
scas
xchg
clc
scas
cmp
dec
pop
sub
xor
cs
dec
push
loope
movsb
mov
xor
cmp
scas
dec
sub
imul
outsb
adcl
and
sub
stc
mov
inc
push
repz
or
xchg
subl
rclb
add
shll
adc
pop
adc
sbb
neg
adc
dec
movlps
lcall
mov
test
sub
sahf
cmp
dec
cmpxchg
mov
jecxz
adc
and
lret
fs
insl
or
popf
pop
fnstenv
iret
dec
out
testb
pop
pop
mov
jae
mov
scas
mov
xchg
xlat
loope
add
adc
push
je
repnz
outsb
or
jecxz
inc
repz
sbb
add
shll
jbe
sbb
mov
lea
icebp
lock
mov
sbb
lcall
pop
jmp
or
cmp
inc
out
pop
inc
jns
addr16
cltd
lods
add
in
lcall
xor
mov
aad
popa
mov
cld
xchg
out
adcb
or
mov
jp
cmp
inc
int
inc
out
out
and
dec
loopne
inc
in
je
dec
out
xchg
shrb
mov
mov
sbb
xor
daa
cmp
inc
outsb
dec
inc
fdivrs
dec
jecxz
lcall
adc
std
xchg
and
sbb
mov
fildl
popf
or
pop
lock
and
push
inc
fnsave
rclb
fbstp
jmp
arpl
test
sbbl
sti
xlat
pop
testb
in
test
std
xchg
pop
insl
or
mov
sub
in
fdivrs
rorb
push
dec
fbstp
es
out
push
dec
data16
jns
jne
mov
mov
sub
or
mov
aam
rclb
aam
das
mov
jmp
test
lods
fsubs
mov
stc
cmp
mov
and
jle
insl
leave
in
test
into
gs
sarb
xor
dec
jecxz
push
sbb
jbe
sub
mov
xchg
mov
fsts
sbb
push
rcrl
xchg
sub
cmpsb
lahf
rclb
push
popf
add
leave
pusha
inc
and
stos
push
push
xor
mov
les
or
sbbb
fidivs
jge
jbe
pop
jnp
or
call
pop
sbb
mov
movsb
test
fisubl
and
sbb
xor
dec
cmp
push
xchg
jle
cwtl
sahf
mov
add
fcomi
xchg
cs
std
inc
ficompl
cmp
push
push
cmp
loopne
je
insb
mov
sar
xadd
cmpsb
mov
in
jbe
mov
cld
and
mov
mov
hlt
imul
mov
inc
jge
dec
test
inc
and
mov
lahf
roll
lods
shrl
hlt
adc
out
xor
sub
mov
cmp
xor
xchg
pop
add
insb
sub
sbb
out
jecxz
insl
mov
jbe
or
and
cs
les
mov
sbb
inc
xchg
shlb
adc
push
pop
test
data16
popf
xor
aam
push
movsl
repz
jb
cwtl
popa
push
xchg
sub
mov
xchg
icebp
inc
insl
add
mov
js
mov
cld
xchg
outsb
xor
pop
test
jno
lret
push
popf
insl
mov
adc
inc
fdivrl
rorl
mov
stc
stc
cmpsl
ds
jle
mov
ret
cmp
jl
mov
mov
lcall
and
fistpl
sarb
lods
inc
jl
stc
insl
jns
outsb
stos
popf
jp
lods
inc
push
dec
mov
jbe
jb
push
fs
out
pop
mov
cli
xchg
push
outsl
stc
nop
lahf
pop
and
mov
decl
aam
stc
out
incb
xor
jb
loope
push
call
bound
dec
xchg
xchg
in
mov
mov
leave
pusha
xor
mov
shlb
or
clc
xchg
nop
jbe
ret
add
mov
fs
aaa
mov
imul
in
sahf
fdivp
lea
mov
andb
dec
in
and
mov
cld
xlat
and
enter
lods
or
mov
pop
jg
mov
dec
jae
mov
cmp
mov
loope
aaa
es
xchg
fisubl
mov
mov
and
or
sbb
and
and
sbb
mov
xchg
fbstp
int3
and
mov
and
popa
mov
mov
jmp
and
adc
sbb
lret
aad
sbb
or
mov
hlt
jg
mov
jae
pop
movsl
jae
mov
push
sbb
cli
xchg
inc
fwait
or
cmp
mov
mov
or
stos
xchg
sbb
push
push
adc
push
xlat
sbb
dec
cli
adc
aaa
sbb
mov
shr
repnz
push
in
lods
pop
sbb
lds
adc
push
arpl
mov
sbb
dec
xchg
jl
or
fnstenv
mov
mov
je
scas
lcall
and
xchg
xchg
dec
icebp
mov
pop
hlt
leave
cli
and
jle
xor
mov
sahf
pop
not
insl
sbbl
xchg
imul
adc
ret
xchg
xor
inc
xlat
outsb
jae
add
sub
pop
cmc
fldt
inc
fimull
lret
mov
mov
jns
jo
xlat
outsb
mov
movsl
ret
pop
pop
mov
push
jecxz
nop
daa
dec
data16
pop
cltd
mov
xchg
std
pusha
shrl
add
push
add
gs
adc
mov
sub
sbbl
fimuls
pop
inc
cltd
jnp
lret
and
lea
xchg
ljmp
call
push
sbb
mov
lret
adc
std
mov
das
lods
xor
xchg
cmpsb
sub
lock
movsl
jns
pop
sbb
push
stc
nop
dec
or
ss
mov
std
mov
std
xchg
jb
jno
packsswb
test
dec
pop
scas
jle
decb
cli
inc
fsubrs
sbb
ljmp
test
xor
scas
movsl
cwtl
es
test
loop
mov
lods
dec
xchg
bound
inc
std
xchg
jae
cmp
xor
cmp
mov
fistpll
cmp
lret
cmp
stos
mov
sarb
push
mov
mov
jno
dec
in
stc
mov
scas
dec
lods
int
fimuls
testl
mov
cmp
push
add
push
popa
addr16
push
fistpll
mov
or
data16
pop
imull
pop
andb
mov
jae
imul
adc
scas
inc
clc
push
inc
fiaddl
fnstenv
xchg
fbstp
sub
subb
adc
sbb
mov
stos
daa
mov
dec
imul
lods
lahf
dec
out
sub
cli
insl
inc
call
or
das
jle
mov
mov
mov
mov
mov
cmpsb
cmp
jb
mov
jecxz
push
out
test
testb
mov
push
sub
sub
xor
pop
cmc
fnstcw
call
sub
jb
lret
fucom
jp
mov
orb
mov
loopne,pt
jno
lods
inc
sub
ljmp
lods
sbb
fstp
add
into
or
pop
out
mov
inc
sbbb
outsb
ret
pop
pusha
notb
push
mov
pop
jecxz
int3
arpl
shlb
dec
xchg
nop
cmp
sahf
stos
push
or
xchg
ds
pop
or
daa
xchg
pop
push
mov
sbbl
xchg
test
lds
aas
cmpsl
test
xchg
sbb
rcrb
mov
push
ja,pt
mov
add
mov
pop
cmc
inc
call
fsubrl
xor
popa
das
jecxz
mov
movsl
push
out
push
fimuls
arpl
mov
in
push
iret
into
add
pop
inc
xbegin
push
cmc
jg
mov
jmp
in
xchg
sub
dec
sbb
jb
inc
int
daa
mov
mov
scas
inc
lock
ja
jo
mov
jmp
arpl
aaa
dec
out
mov
lea
sahf
fbld
mov
sbb
adc
mov
sbb
divb
daa
mov
mov
repnz
es
push
popl
dec
inc
daa
mov
aas
cmp
add
test
xchg
cs
pop
ret
pop
dec
pop
rcrl
pop
mov
dec
shrl
cli
cld
xchg
in
stc
add
jbe
mov
scas
loop
cmp
push
gs
xlat
xchg
sbbb
xchg
jns
jmp
in
pop
neg
testb
xchg
scas
mov
mov
push
add
jb
jb
dec
es
pop
xor
das
pushf
lcall
dec
test
fwait
insb
add
dec
push
ljmp
ret
inc
stc
nop
jae
adc
sub
add
fistps
inc
fmulp
into
inc
fdivrl
mov
sbbl
xor
sub
test
mov
pop
dec
leavew
pusha
cltd
mov
mov
xchg
cli
add
mov
int3
arpl
dec
aaa
into
jg
inc
fstl
aam
and
stos
jae
faddl
movsl
cmp
jbe
sbb
scas
inc
mov
cmp
jo
mov
jmp
pop
push
sbbb
ficompl
sbb
lret
daa
mov
jmp
xor
mov
sbbl
addr16
xchg
xchg
loop
or
aad
adc
aam
ss
pop
test
ret
cmc
jl
adc
je
jb
insl
xchg
push
sahf
js
adc
imul
mov
cli
mov
in
loope
push
jmp
jg
lcall
jnp
shrb
roll
je
xchg
sub
repz
cmpsb
sub
fsubs
daa
pop
lahf
pop
repz
fwait
pop
lock
outsb
add
inc
cmp
icebp
cmc
jmp
pop
sbb
nop
daa
jmp
aam
or
gs
fmul
push
popf
sti
pop
mov
mov
gs
lds
cmp
or
loop
jecxz
jp
add
adc
mov
cmc
xchg
push
push
jg
jb
daa
mov
pop
sar
nop
add
cmpsb
cmp
jb
les
js
lods
test
scas
inc
fcmovnu
je
xchg
movsl
sbb
jmp
testl
mov
fwait
lock
adc
daa
lret
setns
inc
jp
jge
bound
sahf
std
mov
addr16
and
dec
or
xchg
insl
inc
fistpl
mov
cs
fisttpl
dec
out
popa
lahf
xor
jl
mov
and
pop
fsubrl
in
cmpsl
cmp
push
icebp
mov
scas
adc
rolb
leave
xor
push
push
out
mov
pop
mov
lods
jb
fildl
nop
sub
rcrl
or
xchg
jge
pop
cmpsl
shrl
jl
xor
sarb
cmpsb
jg
xlat
outsb
push
mov
cmc
mov
lret
sti
inc
imul
dec
xchg
xchg
leave
outsb
push
out
ljmp
rcr
scas
inc
unpckhps
std
test
mov
mov
sbb
jl
sbb
mov
sub
lret
sbb
in
jl
insl
insb
outsl
push
lahf
jo
in
popa
pop
cltd
xor
dec
stos
inc
jg
nop
daa
pop
sti
fnsave
mov
cmp
int
scas
pushf
icebp
mov
mov
and
push
ds
push
call
pop
hlt
add
xor
adc
add
cmp
add
stos
ret
pop
sbb
sahf
xor
push
and
xchg
notb
mov
inc
or
mov
mov
aad
mov
xchg
stc
push
jmp
sbb
fistl
xchg
xchg
sub
mov
ljmp
add
jb
loop
std
xchg
push
movsb
cmp
push
mov
test
aad
inc
loopne
je
jl
push
hlt
ljmp
mov
stc
nop
cmc
xchg
cs
cmp
jmp
in
jl
fidivs
sbbb
or
push
jle
xchg
sub
aam
dec
push
xor
aam
shl
repnz
sbb
jbe
xchg
xor
mov
mov
cltd
sti
in
ret
cmp
in
aam
hlt
add
les
cmc
clc
mov
or
and
shrl
adc
pop
inc
sub
aam
xor
mov
popf
out
add
test
cmpsl
xchg
das
mov
mov
dec
jecxz
cmp
ja
cld
xchg
int
cltd
xor
sub
out
cmpsb
stos
inc
fldz
sbbl
shl
test
aad
out
leave
sbb
mov
leave
cmpsb
cmp
mov
mov
sub
xor
inc
lods
jecxz
notb
add
clts
jecxz
rcl
mov
lahf
xlat
jbe
dec
test
gs
fsubrs
out
popa
ljmp
sbb
es
push
out
adcb
leave
sub
cli
adc
jno
jge
cmc
scas
mov
push
sub
push
xor
or
call
dec
andb
adc
je
in
aaa
xchg
divl
jg
jns
and
sti
push
sub
test
mov
repz
mov
add
andb
and
push
lds
aam
mov
sbb
popf
gs
decb
in
cmpsl
push
cmp
cmp
add
es
mul
jno
jno
adc
fisubl
mov
pop
in
mov
sub
xchg
sub
dec
adc
xchg
xchg
push
out
mov
inc
fmuls
adc
movsb
insl
pop
aas
mov
dec
loopne
aas
add
cs
jge
mov
lea
mov
mov
shrl
jle
fwait
cwtl
loope
lret
sbb
sub
and
and
mov
or
stc
pop
cwtl
call
pop
or
popf
xor
lret
lcall
jl
inc
scas
xchg
outsb
pop
or
js
sbb
cltd
dec
mov
cmp
in
jg
aas
in
lcall
inc
enter
fs
insb
xor
dec
in
cmpsl
lds
pusha
imul
pop
mov
dec
imul
rclb
pop
rep
test
in
sub
mov
out
in
in
inc
xlat
imul
push
rcrl
push
jmp
lret
test
mov
ror
mov
push
out
mov
ss
popa
clc
lods
daa
shrl
sub
fcompl
sub
stos
dec
fucomip
ret
lcall
cmpsl
cmp
sbb
or
jno
mov
or
stc
stos
inc
sub
lods
push
imul
lret
loopne
mov
mov
push
in
test
and
idivl
xor
out
pop
negb
out
insb
imul
int
xor
into
adc
inc
stos
mov
xlat
outsb
popa
xor
shll
out
sbb
adc
dec
xlat
inc
fmull
jg
sahf
jo
dec
out
adcl
stc
add
mov
mov
aam
cli
xor
xchg
jle
pop
adc
adc
push
xor
add
enter
cmpsb
cli
testl
nop
adc
xor
flds
insl
add
jmp
xchg
cs
outsl
rcrl
adc
pop
lock
popf
dec
adc
in
test
adc
cmp
shrl
mov
push
ljmp
iret
data16
push
nop
push
dec
in
push
leave
pusha
mov
sti
xchg
orb
sbb
or
icebp
aaa
into
and
add
clc
ret
mov
or
mov
movsl
cmp
and
rcll
add
sub
mov
and
xchg
lcall
mov
ret
enter
dec
jae
arpl
jae,pn
sbb
jne
fldt
enter
rcrb
inc
lret
dec
inc
addl
enter
scas
sbb
push
popf
aam
inc
pop
or
int3
shrl
popa
test
push
jns
pushf
stos
xchg
mov
pop
out
mov
loopne
cmp
dec
mulb
in
xrelease
in
ja
jmp
sub
mov
daa
mov
pop
cli
gs
jmp
in
push
stc
les
pop
testl
inc
sbb
xchg
mov
xor
jne
mov
aaa
into
das
insl
imul
scas
pop
jb
jl
mov
out
sti
stos
inc
sub
lods
fsubl
jge
movsl
outsb
cltd
incb
adc
pop
xchg
xchg
cltd
mov
aas
adc
jo
push
popf
jmp
sbb
jno
scas
adc
rcrb
lea
dec
jecxz
js
jge
jle,pt
jno
xor
pop
sub
xchg
sub
dec
push
inc
les
jno
cmc
bound
test
pop
ja
pop
mov
repnz
testb
stos
fidivs
xchg
montmul
cmpsb
les
int3
push
cmpl
mov
xchg
cs
aaa
dec
loop
inc
jp
aaa
loop
adc
aaa
push
in
test
xchg
pop
lods
mov
push
dec
les
fiaddl
lds
push
inc
ss
sarl
add
mov
test
jb
clc
stos
das
sbb
movsb
cmp
xor
lds
dec
test
xor
jno
mov
mov
dec
sub
aad
mov
dec
filds
imul
imul
fidivl
cmpsl
lods
inc
fnstcw
es
rcr
fnstenv
xchg
add
rolb
testb
call
lcall
fdivrl
xchg
loope
pop
sti
adc
addb
sti
xchg
push
cmp
imul
subl
add
add
out
out
loop
clc
and
xchg
jg
mov
cmp
mov
xchg
in
xor
push
cmpsl
fdivl
ficompl
or
adc
dec
lret
insb
add
outsl
jne
aas
cmpsl
cmp
mov
jnp
stos
adc
loop
fisttps
rorl
pop
push
in
rolb
push
sarb
shlb
add
mov
call
dec
and
test
xor
ret
dec
xchg
inc
jl
jnp
mov
ret
sarb
mov
dec
mov
push
movsb
jno
jnp
jbe
dec
push
aam
ja
pop
or
movsb
push
ror
outsb
xchg
dec
dec
xchg
sub
mov
inc
imul
movsl
mov
inc
pop
std
shll
jge
adc
into
out
lcall
cmpl
lock
loop
push
lret
adc
xchg
adc
jmp
mov
pop
and
imul
fimuls
mov
call
pop
call
push
xchg
xor
aad
add
xchg
jge
sbb
add
out
out
add
jbe
jb
mov
sbb
nop
pop
aas
cmpsb
es
mov
aaa
stc
pusha
or
pop
sbb
cmpl
gs
inc
insl
xor
add
push
mov
aaa
mov
cmp
pcmpgtb
rcr
pop
push
aaa
fmull
lcall
push
push
mov
sbb
paddb
icebp
mov
out
js
xor
lret
test
test
sbb
mov
js
shr
inc
inc
out
jnp
dec
dec
pop
cmp
aam
pop
add
jge
mov
sub
int
xchg
sub
pusha
bound
sub
sub
sbb
push
push
inc
cmc
jg
loop
call
fldl
cmp
das
dec
xchg
cmp
and
or
andb
mov
in
dec
jmpw
cmp
sbb
add
push
mov
cmp
sub
pop
inc
insl
test
mov
jnp
push
mov
cmp
or
or
sbbl
dec
xlat
pop
arpl
lcall
inc
pop
lods
xor
mov
out
test
mov
pop
mov
mov
mov
aas
mov
aaa
arpl
mov
pop
mov
adc
pop
bswap
stos
and
xchg
sarb
cmpsl
daa
aam
mov
sbb
jl
jge
outsl
push
pushf
sub
and
xchg
ja
mov
mov
iret
fisubs
push
pop
jnp
test
or
and
test
xor
fsubrl
jne
xchg
int3
lcall
sti
out
cmp
or
push
xchg
aas
test
add
fidivrs
loop
es
xor
inc
xor
pop
or
push
xchg
cmp
xchg
loopne
mov
imul
cmp
js
sub
ror
adc
cld
add
cmc
arpl
pop
mov
xchg
and
add
cmp
and
inc
insl
and
or
pop
je
stos
daa
add
pusha
add
inc
popf
fnstsw
mov
jns
bound
cmc
cltd
scas
mov
or
fldl
incb
repnz
pop
sbb
fldcw
mov
push
daa
mov
pop
mov
adc
jae
pop
repz
mov
inc
fdivrl
xchg
inc
xor
dec
or
xor
les
cmp
scas
sub
lods
sub
xlat
xorb
adc
mov
xchg
or
push
lods
push
das
stos
jmp
dec
mov
fdecstp
sub
mov
notl
adc
sarb
stc
lcall
mov
es
aas
mov
jecxz
sub
pop
pop
sbb
sbb
cmpsl
mov
jno
adc
mov
mov
decb
jl
jge
jb
inc
cmp
and
push
xor
jp
and
popf
dec
push
cwtl
dec
xor
mov
sbb
test
or
mov
pop
sub
and
push
sub
mov
or
xchg
jne
push
fsub
or
imul
inc
mov
iret
xor
cld
sbb
iret
test
outsb
mov
xchg
mov
out
popf
pop
add
movl
andl
std
inc
fidivl
adc
fucomi
ficoml
sbb
aad
or
push
clc
lods
inc
test
inc
jle
fs
movsb
xor
dec
addr16
movsb
mov
dec
int
rolb
adc
imul
rcll
jns
or
sbb
iret
into
cmpsl
mov
insb
cmp
mov
cmp
cwtl
pop
repnz
dec
lods
sub
sbb
pop
movsl
fwait
out
mov
pusha
sub
cwtl
push
insb
test
sbb
insl
jne
mov
sti
inc
cmpsl
mov
std
das
push
rorl
pop
negl
fmul
sbb
add
cltd
jl
cmc
add
dec
ja
sbb
or
outsl
je
or
fndisi(8087
aas
jno
out
cld
or
dec
or
mov
mov
je
push
inc
arpl
jb
repnz
loopne
ljmp
ret
mov
dec
mov
mov
mov
mov
movsl
int
dec
test
mov
add
jne
mov
pushl
mov
mov
push
out
jp
xchg
movsb
and
cmp
sbb
test
adc
pop
xor
jo
jns
aam
pop
ss
movsb
inc
mov
jl
test
add
cs
and
jle
inc
fmuls
stos
popa
clc
fcomi
dec
fbld
std
sbbl
inc
fs
jae
mov
sbb
mov
fwait
sub
stc
lret
outsl
sbb
sub
mov
sahf
sti
jnp
lcall
in
or
push
negb
mov
in
adc
or
fdivrl
push
xorl
sarl
fmull
cmp
jns
rorl
rolb
stc
adc
int
mov
sbb
das
mov
pop
frstor
mov
and
pop
popf
jns
mov
sbbb
nop
popf
test
and
shr
rclb
pop
jp
cld
cli
adc
or
fst
loope
mov
sub
ljmp
loope
iret
pop
or
cwtl
fdivr
push
leave
jnp
cmp
sbb
outsl
add
jmp
add
fxch
cmpsl
xor
cmp
xchg
or
ja
xchg
and
and
xchg
imul
xor
cwtl
icebp
and
and
sbb
aam
jmp
testb
and
mov
js
xor
int
sub
cmp
jl
sbb
fcoms
fadds
ljmp
popa
in
int3
mov
pop
stc
pop
adc
daa
mov
call
pop
leave
test
fstpt
mov
lock
mov
add
jno
and
fcoms
add
cmp
push
sahf
mov
roll
xchg
popf
jns
mov
fisubs
sbbb
pop
sahf
test
push
adc
cmc
je
mov
dec
stos
scas
enter
das
mov
out
fistpll
adc
clc
call
adcl
adc
fcoms
int
or
test
jne
add
ficomps
inc
out
pusha
data16
aas
xchg
aam
ja
outsb
outsb
dec
loop
xor
and
pop
hlt
mov
cwtl
ds
xchg
adc
outsb
adc
lret
mov
push
js
outsl
ret
cmp
fbstp
nop
sbb
xchg
inc
loop
rclb
imul
gs
ja
stos
or
cld
xchg
pop
adc
mov
mov
lret
cmp
mov
ret
push
jmp
push
jo
xchg
mov
adc
lods
inc
cs
lret
mov
arpl
data16
xchg
mov
movsb
loope
inc
fldl2t
add
xor
popa
clc
cmp
test
mov
popf
xor
mov
cmpsb
cmp
sub
les
dec
hlt
mov
inc
loop
in
cmp
xchg
xor
cmpsb
dec
xchg
les
dec
dec
jae
sub
cmp
addb
xor
push
cmp
xchg
adcb
test
sahf
clc
call
cmp
pop
push
mov
lds
mov
sub
dec
inc
gs
mov
mov
repnz
or
gs
aaa
std
xchg
imul
xor
mov
mov
arpl
fnsave
jne
mov
fs
fcoms
sbb
sub
dec
pop
cmp
data16
mov
test
pop
jb
movsl
mov
push
mov
jl
insb
jno
out
jle
loopne
or
cmp
pop
imul
xor
dec
scas
push
femms
xor
ds
dec
jmp
or
jl
fnstsw
add
jle
xor
pop
pop
mov
xchg
stos
stos
adc
mov
mov
std
adc
push
mov
out
xchg
les
add
mov
fildll
loope
add
jmp
pop
test
push
cmpsb
in
fcomps
cmp
stc
add
in
and
cmp
add
and
adc
cmp
das
xchg
cwtl
das
push
pop
icebp
sub
js
aad
aam
insl
notb
cwtl
sarb
push
push
and
mov
adc
jo
test
mov
fs
xchg
xlat
cmp
or
pop
cmc
pop
fs
mov
cld
mov
push
popl
add
xchg
sub
mov
sbb
jb
enter
cmp
add
pop
xor
dec
fidivs
insl
in
pop
repz
jae
repz
mov
inc
xchg
fs
or
testb
shll
mov
loopne
pop
rcl
inc
xlat
clc
repz
cmp
jbe
push
stos
or
or
clc
mov
into
rorl
icebp
inc
leave
lock
bound
mov
jne
inc
addr16
and
cli
stos
push
lods
loopne
fidivs
mov
jle
and
fidivl
inc
pusha
divl
mov
inc
out
rcll
add
shlb
jp
lea
adc
call
dec
in
ficoml
sub
movl
jns
pop
xchg
cs
lcall
pop
aam
inc
hlt
and
repnz
shr
adc
stc
lock
dec
loopne
scas
jo
fnstcw
into
gs
mov
cli
mov
fisubrs
xor
lcall
jbe
dec
in
cwtl
out
xchg
xchg
inc
fstpt
in
fstpl
mov
sub
inc
in
push
sub
lea
dec
fildll
repnz
xchg
das
mov
aas
stos
push
lods
inc
nop
testl
jmp
inc
in
aaa
or
dec
pop
dec
in
push
pop
dec
mov
xor
lea
fidivs
dec
out
xchg
push
out
xchg
xor
push
mov
es
pop
mov
inc
and
xor
mov
scas
imul
repz
adc
dec
jo
shlb
xchg
icebp
mov
lock
and
cwtl
das
shlb
data16
or
xchg
adcb
pop
in
dec
fists
sbb
mov
insl
neg
cli
xchg
sti
pop
xchg
mov
js
sbb
push
lods
fidivrs
mov
or
dec
in
cwtl
data16
mov
loop
imul
fsubrs
js
sarl
bnd
test
popa
pushf
leave
pusha
push
inc
mov
jnp
mov
jae
ret
mov
loop
aas
aad
lret
aam
cltd
out
adc
pop
mov
cmp
arpl
jo
or
sarb
js
cmp
adc
mov
les
mov
jbe
scas
aaa
into
repnz
xlat
cs
repnz
or
cmp
jae
subb
pushf
mov
repnz
xor
jb
insl
clc
fwait
push
out
cmp
lods
push
pop
cmc
lret
les
jmp
neg
aam
repnz
cld
xchg
lock
or
adc
enter
inc
mov
popa
stc
nop
xchg
ss
mov
ss
arpl
shrb
add
sbb
mov
int
in
pop
out
enter
scas
inc
push
add
shlb
ficoml
push
jmp
cltd
dec
add
cmpsb
mov
ret
dec
pushf
xor
and
inc
pusha
sbbl
loope
dec
push
je
pop
mov
out
xchg
jb
sbb
rorb
test
das
pop
pop
aas
cmpsl
ds
mov
inc
xchg
add
aam
fldenv
mov
in
addl
jle
cmp
cmp
pop
call
movsb
das
mov
pop
lds
leave
mov
adc
lret
cmp
mov
fstpl
je
lock
aaa
addl
inc
xor
push
fmulp
mov
add
into
dec
cld
xchg
out
add
or
outsl
push
jae
and
add
es
popf
xchg
pushf
and
jbe
imul
lcall
js
pop
aaa
into
dec
jmp
mov
iret
cmp
aas
mulb
ss
jns
dec
lahf
test
xchg
push
cmp
fldcw
iret
stc
nop
shll
fcmovbe
jle
mov
hlt
imul
dec
xchg
sub
jne
jns
jb
inc
lcall
and
shrb
enter
shll
pushf
push
out
rorl
cmp
dec
mov
mov
sub
and
adc
and
mov
les
mov
dec
in
pop
repz
aaa
int3
arpl
lds
push
jmp
in
les
dec
adcb
leave
adc
fwait
xchg
xor
popa
jo
adc
inc
fsub
jl
loope
outsb
pop
in
cmp
fnsave
shr
xchg
rol
adc
andl
adc
imul
xor
rcrl
xchg
sub
rclb
das
into
int
jo
lock
loop
push
out
fiadds
iret
data16
fnstenv
xchg
int3
arpl
or
iret
pop
sub
lcall
xchg
mov
in
addl
mov
push
xor
out
xchg
repnz
mov
stc
nop
lea
mov
scas
push
call
jbe
lock
adc
stos
dec
push
ds
lock
loopne
data16
pop
int
scas
and
ret
pop
lock
iret
data16
pop
xchg
sub
mov
mov
pushf
xor
add
in
inc
adc
mov
jnp
insb
adc
jge
jle
and
shlb
xchg
xor
add
jecxz
xchg
or
pusha
sub
testl
rcrb
dec
jnp
lcall
movsl
cmp
adcb
adc
mov
test
lcall
lods
js
in
sbb
loope
int3
mov
mov
ffreep
push
rcrl
aas
jecxz
test
add
xchg
negb
mov
fldt
sbbl
jae
sub
in
test
xor
inc
pop
fs
inc
bound
adc
imul
aam
sti
bound
test
mov
mov
popa
scas
add
cmp
aad
and
push
test
xchg
stos
adc
scas
inc
jae
mov
stc
jmp
rcrb
orb
or
xorl
in
imul
jg
push
lahf
ss
movl
xchg
mov
mov
xchg
in
mov
pop
rcll
mull
pop
or
dec
lret
arpl
mov
cmp
nop
mov
push
adc
aaa
into
lods
mov
push
lods
and
jp
sti
push
ljmp
xchg
stos
inc
or
jae
addr16
scas
push
insb
loopne
adcl
pop
or
js
lahf
iret
mov
cld
test
and
gs
lahf
ljmp
pop
sbb
xchg
lods
mov
sub
vandnps
adc
mov
jbe
mov
adc
das
xor
or
add
adc
dec
add
stos
daa
fcoms
les
rol
xchg
sbb
mov
jae
mov
cmp
pusha
mov
subl
loopne
test
mov
sti
xlat
cmp
fidivrl
xchg
in
outsl
xchg
inc
add
inc
push
cld
loop
testl
pop
movsb
ss
inc
imul
aad
inc
jg
mov
pop
bswap
ja
jnp
xlat
fnstsw
cltd
int
pop
ret
add
ds
cmp
pop
rcll
mov
mov
das
lods
inc
popa
add
shll
or
mov
pop
out
test
call
or
pop
cli
xchg
dec
sub
and
in
sub
jno
push
and
movsb
adcl
je
repnz
ss
arpl
jecxz
adc
dec
mov
adc
ljmp
xor
jmp
cmp
jo
and
in
cmp
in
movb
pusha
int3
sarb
lock
insb
push
xor
subl
nop
daa
aam
mov
mov
scas
inc
daa
shrl
dec
int3
arpl
icebp
mov
ljmp
out
or
add
mov
push
xchg
inc
fcmovnb
jae
add
movl
cmp
mov
fidivrs
repz
jno
adc
cwtl
inc
test
mov
pop
mov
xlat
push
lods
or
xor
pop
or
jnp
jmp
aam
popf
stc
mov
lea
int
pop
cmp
push
jge
fisubrs
dec
dec
pop
inc
insl
sub
sbb
pop
sbb
pop
cmp
or
sub
dec
dec
push
clc
sbb
sub
shrb
dec
cmp
sub
mov
cli
mov
pop
test
int
or
outsb
mov
imul
out
pop
or
jg
sbb
pop
nop
popf
or
pop
mov
jg
daa
mov
in
test
rorb
mov
pop
and
rclb
subl
gs
negl
daa
mov
dec
jno
fsubl
ret
arpl
hlt
mov
sbbb
adc
jbe
push
std
xchg
xchg
mov
sbb
inc
or
sarl
popa
sti
xchg
xchg
pop
pop
out
mov
or
aaa
add
in
mov
dec
test
shrl
std
xchg
test
and
adc
aaa
adc
xor
mov
push
call
aas
das
out
xchg
mov
xchg
add
mov
xor
out
aad
lcall
add
xchg
jl
inc
scas
mov
out
add
sarl
pop
jnp
nop
ja
sti
test
sbb
cli
add
movsb
cmp
cmp
mov
nop
or
cmc
gs
scas
cmp
notl
les
or
movsb
aas
add
mov
cmpsb
lret
sub
or
aam
mov
mov
movsl
mov
lea
and
xchg
inc
das
jnp
pop
and
pop
pushf
sbb
cwtl
out
inc
sub
add
push
add
cmp
aam
bound
outsb
mov
arpl
cmp
jbe
and
add
or
ja
push
and
arpl
cmp
sbb
mov
pop
pop
sahf
mov
stos
out
pop
pop
notb
pop
mov
mov
inc
mov
outsb
push
cmp
xlat
aad
cmp
fstpl
jp
jl
js
inc
les
mov
loopne
xor
addl
lea
add
inc
aad
loop
daa
sub
aad
cmp
inc
stos
sbb
imul
loope
adc
cmpsb
lcall
sub
lret
mov
ja
mov
cmp
sub
cld
pop
imul
push
dec
fists
xchg
movsb
jmp
adc
push
ret
pop
sahf
xor
fsubrl
jo
dec
movsb
push
xchg
push
or
dec
mov
shld
shrl
adc
sti
jge
sub
popa
lahf
jg
into
orl
out
xchg
sub
inc
scas
inc
jae
mov
pop
xchg
leave
pop
ret
inc
lods
loop
jl
iret
fidivs
testb
mov
mov
jne
xchg
leave
or
pop
sbb
mov
mov
jbe
push
dec
loop
pop
fidivl
adc
scas
inc
mov
xchg
in
lds
jmp
sbb
add
ja
jle
mov
or
outsl
push
mov
lods
pusha
gs
xchg
std
nop
add
jnp
inc
sarl
or
cmpsl
sbb
out
test
add
dec
jecxz
out
in
xlat
mov
hlt
daa
xchg
clc
mov
shlb
insb
dec
fistps
jo
das
or
js
mov
jg
call
sbbl
pop
and
out
cmc
mov
jb
mov
jecxz
daa
aad
lods
inc
icebp
sbb
into
mov
sbb
inc
add
jmp
pop
repnz
filds
mov
push
mov
xchg
jb
mov
mov
inc
out
cmp
pop
mov
and
inc
xor
in
andl
or
stos
xor
mov
std
bound
scas
ret
jns
mov
outsb
cmpsb
push
push
push
roll
pop
int
dec
sub
pop
xchg
sub
xor
xor
imul
das
push
ljmp
or
mov
das
ficompl
sbb
aam
loopne
sbb
es
popl
dec
test
push
and
push
ja
mov
jbe
lret
xchg
aas
loope
fwait
lret
scas
mov
outsl
out
and
adc
bound
lahf
xchg
add
push
xchg
mov
sbb
mov
loop
cld
dec
mov
clc
dec
pushf
jg
inc
and
xchg
out
shlb
jb
or
call
inc
inc
test
jge
call
jge
mov
pop
sbb
mov
insb
inc
aam
xor
pop
rclb
ja
pop
pop
lock
pop
cmp
mov
jne
daa
mov
push
in
dec
xlat
mov
jle
mov
xor
cmp
push
inc
outsl
push
xor
test
pop
leave
mov
mov
ss
addr16
movsl
cmp
dec
or
fwait
xchg
stc
add
imul
pop
aad
mov
pop
nop
daa
mov
std
xchg
jl
lea
popf
push
out
incb
sub
push
xchg
push
in
bnd
mov
stos
push
test
int3
dec
in
sbb
push
cmc
or
nop
repz
icebp
mov
stos
inc
add
and
jmp
mov
repz
pop
ss
inc
lea
jg
ret
lret
mov
leave
repz
and
adc
jns
aam
mov
ret
out
and
inc
shlb
mov
fwait
xor
push
pop
out
xchg
jnp
pusha
cmp
pop
xchg
sub
hlt
mov
arpl
imul
lahf
inc
fisttpll
mov
nop
daa
fwait
pusha
testl
sub
adc
mov
pop
icebp
orb
cmp
lods
push
lods
push
push
cwtl
das
inc
mov
mov
pushl
and
mov
cmp
dec
scas
inc
jne
mov
aas
adc
add
inc
daa
xchg
adc
adc
bound
std
and
pusha
dec
sbb
dec
adc
mov
out
pop
pop
mov
dec
lret
addr16
jge
call
mov
rclb
jle
iret
scas
fisttps
push
shll
mov
cmp
pop
pop
icebp
inc
repz
out
bound
pop
pop
stos
xchg
mov
mov
iret
lahf
and
xchg
jno
hlt
popa
jle
fnstenv
pop
sahf
shl
sbb
xchg
xor
daa
daa
in
notb
dec
mov
ljmp
shrl
sti
mov
adc
pop
adc
push
lret
fbstp
add
jne
jne
cli
rcll
push
leave
repnz
pop
int3
add
mov
lret
mov
test
rol
inc
in
test
cmp
js
fsts
cmpsl
rol
push
ficoml
adc
push
or
enter
fadds
ret
loopne
in
xor
in
cmp
ljmp
sub
inc
adc
in
inc
jmp
mov
fiaddl
popa
dec
aam
lods
sub
xchg
mov
pusha
adc
fistpll
fidivs
mov
idivl
je
mov
mov
jp
pushl
repnz
xchg
sub
cld
loopne
fcmovu
xor
lfs
lahf
cmc
ret
repz
icebp
faddp
mov
xchg
xchg
mov
pop
cmp
mov
mov
add
enter
scas
std
sub
pushf
mov
sub
mov
lea
in
jge
les
lcall
pop
lock
cli
addr16
xlat
stc
xor
xchg
lcall
sub
inc
or
cmpsl
mov
xor
aas
mov
pop
sub
xchg
cmpsl
ds
jno
cmp
shlb
bound
pop
out
pop
lret
adc
adc
test
cltd
repz
test
ret
sub
mov
sub
stos
mov
push
shll
lods
xor
lcall
xchg
repnz
mov
dec
lds
insl
fnstenv
aaa
xchg
adc
fsqrt
out
inc
cmp
and
out
cli
cmpsb
pop
push
dec
outsl
rorl
hlt
or
cmp
mov
pushl
decb
xor
pushf
test
adc
dec
mov
in
insb
lock
sbb
xor
jg
and
cmp
xor
and
aam
adc
adcb
pop
add
cmpsl
xchg
mov
mov
jno
mov
cwtl
xchg
mov
pop
out
imull
and
lds
fs
xchg
flds
pushf
ret
mov
fdivs
dec
mov
mov
je
fwait
inc
xor
adc
jne
testl
jle
inc
push
or
lcall
out
lock
xchg
inc
fmull
adc
dec
imull
dec
cmc
lcall
shlb
push
mov
cs
call
sub
pop
rolb
aas
out
ja
inc
fstpt
js
fst
cltd
sti
lods
xchg
push
lcall
jmp
push
sbb
fnstenv
cmp
xor
stc
xor
in
pop
mov
js
lods
stos
xchg
jmp
push
lret
pop
lock
test
lret
dec
jns
subb
or
int
jl
lock
cmp
push
into
daa
push
lret
scas
pop
call
test
push
cmp
adc
inc
mov
jmp
inc
mov
sub
ja
and
mov
and
icebp
leave
in
outsl
je
mov
iret
mov
cwtl
mov
addps
addr16
in
adc
pop
inc
fildl
clc
mov
pop
dec
lahf
scas
clc
sbb
mov
add
ret
aaa
ret
cmp
mov
dec
pop
or
cmp
cmp
add
xor
jecxz
and
sub
fs
inc
xchg
pop
mov
sahf
mov
xor
xchg
cs
shll
mov
int
gs
iret
and
sbb
cmp
notl
sub
cmpsl
cmc
lods
sub
or
add
inc
pop
cli
sbb
sti
pop
jmp
and
je
stos
and
cmp
adc
addb
fiadds
jp
js
fadds
mov
cld
cmp
sub
sti
das
or
std
pop
sub
lea
fwait
mov
test
xchg
mov
in
out
and
adc
push
out
js
and
mov
push
jge
leave
imul
out
xchg
or
mov
arpl
dec
insb
jp
ds
push
cmpsl
outsl
jno
ja
xor
xchg
movsb
loopne
fisttps
call
clc
cld
adcb
inc
fstpt
mov
std
mov
bound
or
je,pt
xlat
lock
sub
lea
and
dec
aaa
sub
sub
add
cmp
gs
rcrb
popf
out
lret
sahf
xchg
mov
mov
filds
hlt
mov
pop
sbb
add
xor
and
std
cmp
pop
sub
les
cmpl
xchg
aad
cmp
add
rol
or
and
cmp
subl
das
aaa
fsubrp
iret
jg
aaa
pop
fadd
xlat
jecxz
imul
jmp
jecxz
jp
rcll
and
add
inc
mov
xchg
std
xchg
sub
mov
fucomip
inc
xchg
rcrb
cld
xchg
cmpsb
cmp
or
fstps
bound
cmc
lods
and
mov
loope
adc
cmp
cmpsb
jno
mov
lcall
cmp
lidtl
imul
out
loope
push
push
mov
jecxz
and
mov
and
rcrl
les
sbb
dec
mov
sti
icebp
lcall
add
bound
cld
mov
mov
in
bound
out
loopne
paddusb
loopne
inc
jmp
or
clc
mov
cmovnp
push
insb
sbb
xor
dec
lcall
shlb
into
ljmp
sub
cli
dec
inc
js
push
stos
orb
push
int3
mov
loope
sbb
in
or
lods
inc
fisubrl
cmp
mov
aas
jge
inc
dec
fistpll
inc
inc
cmp
mov
cmp
jge
mov
orb
add
xchg
xchg
out
mov
ror
hlt
decl
push
arpl
mov
std
gs
xchg
dec
mov
xor
in
notl
xlat
pop
fbstp
inc
cmc
int3
jo
pop
cmpl
loopne
dec
xchg
aaa
xchg
or
adc
hlt
dec
mov
cld
xchg
je
push
ja
pop
out
std
mov
and
icebp
mov
mov
xchg
push
sbb
xchg
add
bound
sbb
cmp
or
das
add
push
call
pop
subl
lret
pop
cmc
mov
daa
sub
mov
addl
dec
mov
lds
sub
jecxz
dec
mov
push
das
or
outsb
xchg
sahf
je
dec
jae,pn
fistps
dec
jne
out
inc
mov
push
jns
inc
or
sbb
shll
inc
push
cld
xchg
test
cmp
jmp
dec
loop
cs
sub
dec
sbb
outsb
leave
sti
xchg
sti
scas
mov
push
sub
nop
cmp
test
stos
sub
repnz
lret
adc
pop
aas
sbbb
jge
or
jo
mov
and
dec
mov
test
loope
mov
out
or
sbb
xchg
pop
push
das
scas
jle
sub
mov
and
pop
pop
rorl
fnsave
sbb
push
xor
push
add
pop
icebp
fs
rcll
rol
repnz
push
inc
es
loope
arpl
add
adc
or
mov
inc
mulb
adc
mov
scas
push
lods
call
push
std
xchg
mov
or
xchg
fildl
cmpsl
push
jl
loope
arpl
sub
cmc
push
ds
push
rclb
sub
inc
call
arpl
je
repz
inc
add
add
lock
and
daa
mov
mov
das
sahf
rol
dec
aad
and
xchg
sti
out
mov
xchg
addl
xchg
outsl
test
push
fsts
sahf
push
mov
jae
ret
aaa
mov
pop
clc
outsb
gs
fisttpll
xchg
and
shrb
cmp
mov
xor
scas
scas
push
pop
arpl
setne
mov
int
cmpsl
clc
or
xchg
push
imul
cmp
sbb
iret
jo
fdivrl
jle
push
les
jl
sub
sub
sub
adc
je
ds
and
sbb
ja
outsl
xor
push
xor
sub
dec
pop
jecxz
in
es
test
and
shl
ja
mov
push
jbe
mov
jb
fldt
jl
loopne
add
test
xchg
lcall
sub
xor
popa
iret
dec
out
jge
call
sarl
pop
aad
or
push
mov
mov
adc
lahf
ja
mov
push
sbbl
fnstenv
insb
mov
filds
mov
int
add
iret
pop
stc
testb
mov
in
cmp
cmp
fisubs
xor
lods
cmp
cmc
mov
xor
lea
ja
sahf
mov
sbb
fcoms
pop
xchg
add
mov
loop
stc
or
cmp
adc
mov
xchg
arpl
emms
add
rolb
pop
inc
add
call
ss
adc
cmp
lds
lret
add
jmp
cmp
push
pop
test
cwtl
das
bound
dec
jno
ljmp
popf
xchg
mov
pop
in
jmp
out
dec
aaa
inc
jg
pop
lcall
sbb
loopne
lcall
mov
cld
outsl
sub
daa
rep
emms
scas
dec
loopne
cwtl
xchg
mov
mov
and
add
xor
jg
or
call
cmp
rcll
fcomip
mov
inc
out
sub
xor
adc
cltd
adc
jo
addl
fistpll
pop
mov
les
xchg
imul
jp
mov
cmp
pop
pop
loope
js
xchg
movsl
sbb
cs
les
mov
aam
xor
addr16
sbb
pushl
sti
xchg
int
dec
out
std
adc
rcll
sub
jne
dec
mov
dec
or
add
rol
mov
or
icebp
inc
lea
adc
gs
adc
cltd
mov
jg
mov
shlb
cld
cli
js
std
lahf
push
outsb
movl
dec
lahf
cmpsl
xor
pop
icebp
std
hlt
add
or
lahf
pushf
and
in
pop
mov
in
mov
into
inc
cmc
xlat
call
mov
mov
decb
add
dec
jmp
mov
in
and
or
and
std
mov
das
clc
jne
jne
pop
imul
add
pop
jno
pop
cltd
inc
xchg
imul
cld
imul
loopne
in
mov
jl
jecxz
adc
sti
in
into
fnstenv
cli
or
in
lret
mov
into
sti
pop
adc
call
cmp
notl
xlat
movsb
je
clc
cwtl
std
dec
push
ja
ljmp
cmp
adc
outsb
mov
dec
cltd
lahf
aaa
in
push
sti
jno
add
jae
jbe
dec
repnz
pop
jge
pop
cmpps
sti
imul
mov
adcb
dec
aad
sbb
ret
test
mov
in
cmp
xlat
fnstenv
xchg
xchg
jecxz
mov
and
mov
stc
pushf
aas
popf
mov
mov
insl
repz
adc
mov
addr16
cltd
data16
mov
xor
push
mov
or
cs
outsl
enter
push
dec
inc
push
ret
stos
test
cltd
and
xor
inc
adc
sbb
shrl
test
fisubrl
addr16
cmc
add
mov
pop
sbb
xorl
push
jae
cmc
mov
or
xchg
repz
and
lahf
mov
sti
bound
xchg
int3
mov
mov
and
iret
lock
rcr
sub
cmpsl
dec
popl
lret
xor
adc
je
sbb
or
mov
imulb
in
push
xchg
cmp
insl
rorb
shrb
dec
push
inc
das
and
shll
and
adc
fiadds
adc
out
scas
and
lods
push
mov
sbb
mov
mov
push
loope
leave
data16
shll
bound
sbbl
aad
jle
mov
lds
lret
jne
push
cmpsl
cmp
dec
pop
cli
add
loop
mov
fwait
or
ljmp
cmp
adc
stc
inc
mov
xchg
clc
mov
sbb
aad
movsb
xchg
push
test
dec
loope
jno
or
and
mov
lock
add
jle
xor
scas
cmp
push
data16
xchg
les
or
xlat
popl
jne
lcall
cmc
in
inc
lcall
push
cmpsl
adc
pop
mov
stc
fmull
sbb
fldenv
push
dec
push
add
xchg
pusha
jle
mov
outsb
lcall
imul
lcall
mov
cwtl
imul
js
mov
mov
xchg
sbb
xrelease
cmp
sub
sub
sub
sub
scas
js
dec
mov
and
sbb
mov
dec
push
icebp
scas
sub
xchg
lods
pop
das
mov
loope
ret
add
dec
mov
orb
or
cwtl
inc
cs
fs
pop
cmpsl
outsb
fcmovnbe
push
gs
out
in
sbb
imul
daa
enter
loope
iret
mov
call
sub
inc
mov
bound
stos
lea
cmpsl
insl
lcall
ja
adc
inc
mov
adc
testb
sbb
xor
mov
test
sbb
sbbb
rcll
mov
or
data16
cwtl
insl
dec
iret
xor
push
cmp
add
test
xor
mov
jns
inc
xchg
inc
lds
inc
jns
jne
dec
jecxz
xchg
rcrl
cmp
mov
pushf
xor
sub
jle
js
fimuls
stos
loope
mov
and
jnp
push
jmp
adc
inc
push
jae
inc
or
pop
mov
cmp
fsubrs
data16
out
and
sarb
jle
js
pop
shlb
push
xchg
mov
mov
xor
pop
cltd
test
jne
xchg
dec
jns
cmp
icebp
mov
mov
or
aad
mov
imul
xchg
sbb
cmpb
int3
push
xorl
lods
sbb
out
add
inc
inc
imul
ds
push
pusha
shrl
aaa
push
and
scas
push
rorl
incb
mov
ljmp
imul
fnstenv
xchg
push
in
add
push
xor
sbb
and
jle
imul
inc
jnp
sbb
bound
inc
fsts
lds
das
outsl
push
mov
movsl
or
ret
inc
dec
add
addr16
push
mov
lock
add
clc
xchg
mov
and
xchg
push
in
js
popf
xor
cltd
adc
ja
push
movsl
mov
loopne
ret
rcrl
sub
dec
sub
adc
xor
dec
loop
aaa
loopne
dec
test
push
cmp
arpl
pop
lds
es
and
inc
jno
push
test
mov
dec
aaa
push
out
test
cmpsb
push
in
cli
xchg
add
sub
and
lahf
lret
push
jmp
and
in
inc
adc
dec
test
push
nop
int3
jg
rolb
mov
add
push
popf
rcl
in
lds
mov
fstps
les
push
addr16
rcrl
cwtl
das
cmp
mov
xchg
fimull
bound
xor
mov
inc
fnstenv
push
cmp
xchg
push
out
xlat
jmp
iret
adc
mov
pop
daa
testb
jmp
pop
mov
fldz
test
push
pop
hlt
outsl
std
daa
mov
out
pop
scas
or
and
dec
int
mov
pushf
pop
inc
fidivrl
leave
pusha
aas
ljmp
and
pop
and
ret
mov
clc
mov
inc
fimuls
iret
cwtd
loop
popf
shll
or
mov
xor
subb
call
xor
adc
push
pusha
sub
daa
lods
sar
repnz
scas
push
sarb
mov
lock
sbb
xchg
imul
shr
mov
mov
jmp
or
sbb
xor
dec
or
add
xor
cmpsb
sahf
daa
mov
inc
mov
lods
inc
jecxz
clc
into
xchg
xor
add
mov
dec
in
adc
add
aas
pushf
xchg
sub
mov
pop
and
dec
in
mov
jle
xchg
imul
sbb
dec
in
jbe
aaa
push
loop
or
cmp
xchg
lcall
sti
lock
frstor
ss
test
fldl
daa
fs
xchg
bound
xchg
mov
cltd
es
cmp
sub
mov
test
mov
jo
jb
jl
aas
mov
or
jmp
jno
inc
fsubs
pop
inc
mov
mov
sbb
into
test
fsubrl
out
and
mov
insl
pop
out
scas
pop
xor
add
lods
aam
and
mov
dec
inc
mov
and
push
xchg
mov
adc
repz
mov
gs
sub
scas
inc
push
add
cmp
stos
cli
push
sub
xchg
lea
push
scas
push
outsl
push
xchg
jl
mov
mov
mov
mov
pop
repz
repz
sarl
incb
mov
popw
jg
fisttpl
pushf
xchg
push
push
jge
push
adcb
mov
fucomip
sub
arpl
push
mov
adc
scas
test
loopne
sub
push
jmp
dec
insl
inc
std
mov
pushf
pop
out
imul
inc
mov
inc
dec
iret
jo,pt
cli
jbe
pop
fists
adc
sti
lahf
jmp
stos
in
jge
rcll
and
leave
push
sub
lods
or
pop
stos
int
scas
rclb
in
jg
shl
inc
out
jb
decl
push
cmc
jnp
movb
or
jle
in
xchg
rclb
or
movsw
in
push
or
in
or
xor
or
iret
mov
ret
es
add
pop
repnz
fdivrl
aam
push
fsubrs
inc
adcb
xorl
out
xlat
outsb
stos
sub
jl
insb
jo
fidivl
mov
and
mov
repnz
int3
dec
test
jle
or
iret
inc
loopne
jb
and
lds
xlat
inc
out
pop
bound
inc
cmp
out
xchg
fwait
mov
adc
pop
into
jecxz
mov
hlt
aaa
xchg
add
and
test
hlt
flds
lret
lock
mov
cmpsl
int3
div
pop
repnz
lret
in
in
test
test
mov
or
dec
mov
push
pop
inc
rcrl
adc
cmovne
mov
mov
add
pushl
sub
pop
popa
or
cmp
pop
cmp
fcoms
cwtl
xor
cli
lahf
in
and
mov
into
ds
or
iret
inc
faddp
pop
scas
repnz
pop
icebp
lock
aaa
into
jp
cmp
push
in
nop
daa
loope
stos
inc
pop
sbb
add
or
orb
push
pop
jg
adc
jl
push
jmp
outsb
mov
mov
mov
inc
out
push
out
hlt
mov
es
push
lods
sub
outsl
gs
mov
jecxz
mov
gs
aas
inc
loop
int3
out
clc
lea
rcrl
mov
sbb
mov
imul
mov
fcomip
push
call
mov
dec
iret
pop
sbbl
outsb
arpl
xchg
aas
pop
push
mov
xor
xchg
push
ljmp
or
cmp
push
add
jbe
dec
iret
mov
out
adc
fsubr
testb
mov
mov
sbb
iret
data16
and
jp
test
icebp
inc
or
mov
inc
leave
pop
xorb
push
and
push
add
repz
cmp
xor
scas
insb
mov
jbe
das
xor
in
push
and
scas
push
jae
aas
movsl
jno
jmp
bound
jmp
ret
sarl
lods
lret
add
jecxz
lock
jmp
sbb
mov
imul
out
add
mov
mov
sbb
xchg
add
imull
jg
dec
jecxz
sub
fistpl
xlat
sub
jp
mov
fwait
pop
testb
aaa
into
cwtl
psubsw
and
inc
pop
icebp
pop
dec
xsha256
cmpsb
push
jp
mov
push
pusha
sbbl
ja
aad
popa
add
rclb
fisubrl
sbb
sub
fisubrs
pop
lock
mov
enter
mov
dec
inc
fsts
arpl
cmp
mov
imul
push
call
inc
and
cwtl
insl
push
call
adc
movsl
dec
xor
xchg
lods
jo
fiadds
xchg
xor
aam
enter
test
repnz
dec
out
xchg
or
imul
mov
push
jmp
add
mov
mov
aas
xchg
hlt
clc
add
push
shlb
push
loope
pop
mov
fildl
cltd
jecxz
sub
dec
add
or
insl
inc
fidivs
push
inc
fldt
xchg
sub
ds
popa
mov
xor
ds
push
lods
inc
or
cmp
sub
jae
pop
hlt
mov
lret
bound
aam
scas
fdivs
xchg
sub
pop
hlt
sub
and
inc
push
jns
mov
inc
imul
inc
mov
popf
xor
and
out
jb
loope
xchg
cmpsb
cmp
mov
aad
js
sbb
sub
gs
lahf
dec
fdivl
shlb
shlb
and
repz
test
call
shlb
loopne
fists
ss
test
mov
adc
ret
inc
scas
jecxz
sbb
fisubl
dec
ja
fbstp
cwtl
jmp
das
mov
or
cltd
je
in
inc
mov
pop
mov
xor
in
xchg
es
xchg
and
jae
pop
setne
xor
jnp
out
jmp
mov
fcmovne
popa
or
das
sahf
xor
dec
sahf
mov
loopne
pop
repnz
fsubrs
lods
jns
cli
push
nop
daa
sbb
pushf
mov
ret
jp
cli
testb
dec
jb
imul
xor
mov
cmpsb
das
xlat
adc
pop
inc
clc
arpl
sub
pusha
cltd
dec
push
cmp
or
faddl
jb
das
fldcw
daa
subl
pop
movsb
scas
inc
jg
jle
test
pushf
add
ljmp
sahf
or
test
es
sti
inc
inc
or
sarl
pop
pop
out
fdivl
leave
jecxz
sti
out
mov
mov
mov
iret
sub
cmp
pop
dec
mov
cmpsl
push
scas
pop
jbe
loop
sub
clc
and
test
xor
lea
ficoms
pop
mov
in
pop
adc
xchg
inc
in
lea
int
mov
jns
rcl
sub
sbb
xor
ret
mov
add
std
push
int3
inc
lea
in
sbb
jb
mov
test
dec
push
push
mov
dec
push
cmp
cmp
sub
pushf
or
shlb
rorb
push
adc
adc
xor
cltd
sbb
andl
aas
mov
jecxz
adc
or
xor
fwait
sub
lahf
or
xchg
adc
ficompl
ret
pop
scas
cmp
shrl
pop
fsubrs
stc
shrl
stc
int3
arpl
lahf
loope
adc
mov
in
scas
mov
stos
adc
mov
fwait
xor
call
ja
push
popf
lea
push
mov
arpl
xchg
pop
daa
lods
jns
jp
mov
inc
icebp
adc
insl
cltd
push
dec
std
xor
out
insl
sub
nop
xor
cli
add
inc
cli
inc
mov
xchg
repnz
dec
out
mov
or
mov
jp
out
xchg
sub
inc
mov
add
movsb
mov
jle
lret
or
inc
clc
clc
and
out
enter
cld
test
lret
jnp
std
and
push
push
sahf
ss
aad
inc
push
cwtl
mov
jae
adc
lret
es
lods
pop
jne
jecxz
cld
xor
mov
push
inc
adc
fbld
mov
cmc
xchg
popf
cmp
fiaddl
lcall
and
test
rcl
and
xchg
lods
mov
pusha
out
bound
or
nop
dec
in
adc
cli
mov
adc
mov
push
mov
sub
test
or
int
xchg
mov
add
push
xor
lods
mov
hlt
out
dec
add
fwait
xchg
add
dec
pop
dec
imul
lods
mov
push
fisttps
lds
lret
mov
loopne
pop
pop
fistpl
or
and
add
jg
sti
push
inc
adc
xchg
mov
push
push
popf
ret
lods
ja
sbb
mov
jo
inc
movsb
mov
or
or
mov
and
ret
fnstenv
sbb
jns
sub
ds
cmpl
cmp
fsubp
repnz
xlat
jno
test
xlat
js
std
ds
sahf
push
inc
pop
push
popf
dec
bound
lret
inc
test
iret
ficoml
mov
pop
cmc
int3
add
add
push
incl
cmpsb
mov
std
xchg
or
in
push
movsl
sbb
push
loop
pushf
inc
mov
lahf
addr16
inc
adc
mov
cmp
sbbl
fimuls
sub
xchg
add
adc
sub
aaa
iret
outsb
mov
cs
imul
mov
das
clc
add
inc
scas
out
test
int
rcll
or
jmp
xsha256
cmpsb
xchg
test
insb
and
outsb
lahf
test
sti
aaa
pop
xchg
pop
es
clc
adc
dec
bound
out
ret
cld
cmp
nop
adc
adc
sub
arpl
dec
loope
sbbb
pop
push
mov
xchg
gs
lret
adc
leave
clc
mov
xchg
sub
fistpll
test
add
jbe
mov
fs
jo
lea
out
mov
aad
popa
pop
jns
jmp
adc
jmp
ljmp
xor
sbb
xchg
mov
sub
mov
and
adc
insb
push
icebp
arpl
mov
in
ffree
in
inc
fldcw
icebp
add
mov
mov
enter
sub
sti
js
inc
push
leave
lcall
lods
iret
je
jbe
jecxz
pusha
mov
cwtl
cmp
mov
and
ror
mov
in
add
mov
outsb
jl
aad
xor
adc
nop
les
shl
popf
xor
sbb
and
inc
fs
mov
sub
xor
out
add
push
stos
mov
nop
xchg
and
sbb
sbb
mov
cmp
loop
adc
push
cwtl
test
mov
xchg
jb
icebp
lret
add
dec
push
jecxz
xor
jae
loop
popa
xchg
cmp
lds
jo
push
cltd
sbb
mov
popa
out
imul
cmp
mov
dec
inc
mov
xorl
adc
add
jle
aas
pop
push
mov
fcompl
stos
fldcw
lods
inc
repnz
lret
pushf
push
mov
sti
mov
jno
dec
mov
inc
shrl
ss
ds
cmpsb
ret
adc
out
push
les
cld
dec
add
frstor
jne
sahf
push
test
jo
adc
mov
mov
repnz
xchg
mov
cmp
shl
xor
test
sbb
daa
cmp
out
setbe
lret
or
rcrb
in
daa
mov
hlt
push
lods
rcl
rorl
inc
fidivs
ret
iret
fdivrl
icebp
int3
and
pop
out
stc
mov
call
inc
in
aad
ret
std
lret
mov
jmp
mov
in
ss
or
mov
push
add
fldcw
push
cs
das
sub
sbb
inc
mov
stc
mov
hlt
dec
adc
sub
pop
cmpl
pusha
pop
pop
pop
cmpsl
mov
mov
bound
mov
frstor
jns
lods
push
call
movsl
pop
sahf
addr16
aam
ja
mov
inc
push
push
add
inc
mov
adc
push
mov
adc
pop
inc
push
fnstcw
xchg
shrl
pushf
jle
dec
mov
in
dec
popf
adc
aam
jmp
fidivrs
outsb
add
pop
jl
add
in
and
shlb
aaa
idivl
xchg
add
hlt
mov
repz
cmpsb
vmovaps
pop
testb
addl
popf
jp
enter
int
pop
int3
fdiv
js
xchg
cmp
push
imul
stos
pop
dec
or
xor
loope
loopne
add
jb
jae
aaa
push
ljmp
jno
jmp
push
cwtl
mov
lret
xchg
loop
mov
mov
push
and
jne,pt
iret
aad
jb
out
sbb
rorl
decb
sbb
fistpll
push
mov
into
inc
mov
fcomps
lret
mov
pop
cs
clc
mov
imul
outsb
insl
mov
lahf
gs
rcrb
inc
adc
push
out
aad
popa
dec
cmovo
popf
sbb
leave
xor
outsl
lds
inc
push
popf
scas
data16
xchg
push
cld
scas
mov
insl
push
and
hlt
push
xor
xor
stc
pop
xor
pop
push
cmp
inc
jmp
loop
mov
push
sbb
data16
ljmp
inc
dec
sbb
cs
bound
popf
xor
jbe
int
mov
mov
mov
adc
jbe
xor
inc
mov
enter
test
sbb
ss
bound
daa
jno
cmc
aaa
dec
fbld
stos
push
xchg
outsl
imul
mov
xor
xchg
add
jecxz
ficoml
js
jnp
dec
lods
dec
call
inc
and
dec
sub
jns
in
lahf
imull
outsl
scas
orl
cmpsl
jecxz
orb
jg
jnp
push
xchg
sbbb
sti
insb
in
cmp
or
cli
add
cli
test
xchg
dec
mov
std
outsb
jae
push
dec
add
add
fildll
leave
sbbb
jmp
mov
ds
sbb
lods
sbb
out
dec
mov
movsl
fs
or
stc
sub
clc
pop
adcb
mov
enter
and
out
add
xchg
xor
ret
and
lret
ret
pushf
sti
push
push
stc
lds
sti
push
lock
ljmp
loopne
popf
xor
inc
leave
call
xchg
sbb
sbb
sahf
adc
pushf
jg
xor
xchg
test
pop
sbb
movsb
dec
adc
inc
mov
cmc
mov
jg
dec
mov
aaa
into
mov
pop
push
fs
jmp
lods
aam
aas
jbe
xor
dec
xchg
jns
pop
mov
mov
push
loope
shl
lret
dec
pop
pop
sub
in
jmp
stos
dec
xchg
mov
insl
js
or
cmp
call
sub
mov
inc
insl
jge
shrl
dec
sahf
or
mov
test
shl
je
call
nop
pop
mov
aas
jecxz
add
out
add
in
adc
inc
into
jmp
xor
dec
mov
loope
popa
dec
roll
sub
fstl
cmpsl
jbe
pusha
pop
fistl
mov
dec
push
pop
leave
int
add
push
xor
pushf
xchg
out
icebp
mov
js
cmp
lock
mov
jg
and
adc
mov
dec
adc
sub
add
out
push
mov
aaa
push
cmp
fidivs
push
rol
out
mov
out
dec
lahf
adc
orl
xchg
sub
inc
rolb
mov
es
xchg
pop
xor
xorb
sub
lret
pop
ds
mov
push
sar
movsb
pop
pop
popa
inc
into
ret
in
sub
jae
loope
push
imul
cmpsb
adc
test
lea
in
std
test
inc
out
mov
xor
ficompl
dec
loopne
push
sbb
or
mov
sbb
test
sbb
jecxz
xchg
pusha
or
out
adc
cmp
inc
xor
jle
sar
cmp
xchg
or
fstpt
mov
sbb
hlt
jge
rorb
mov
outsl
jle
pop
jnp
pop
mov
mov
lock
in
test
into
cmc
insb
or
cmp
jl
fstpt
loope
fs
or
adc
jg
inc
outsb
push
nop
push
lret
xlat
lcall
inc
sub
dec
int3
popa
mov
sbb
jmp
or
pop
pop
in
xor
aam
mov
mov
mov
xchg
test
or
cmpsl
inc
and
dec
or
and
sub
push
mov
loope
fwait
xor
data16
ret
in
arpl
sarl
clc
mov
sbb
fsts
in
ret
imull
inc
jle
je
into
pop
mov
or
jl
push
out
je
add
mov
xchg
mov
shlb
sub
movsb
aam
mov
xchg
mov
insl
xor
into
mov
in
mov
daa
pusha
test
sahf
subl
mov
xchg
dec
and
out
cltd
sahf
icebp
lods
fs
insl
inc
adc
inc
out
push
lds
sub
movsb
or
xchg
and
pop
mov
jbe
mov
shlb
inc
aas
repnz
lcall
cwtl
mov
cmp
inc
in
adc
cmp
adcl
and
ljmp
add
add
inc
repz
or
aad
loope
pop
add
hlt
pop
scas
mov
cmc
cli
sahf
outsl
mov
jge
add
inc
cltd
jo
pushf
cwtl
sub
incb
jb
int
ljmp
mov
mov
mov
ret
ss
dec
movb
and
cmp
scas
fs
in
mov
lods
aas
push
push
mov
dec
cmc
mov
int
add
sahf
scas
jne
mov
xchg
pop
mov
and
leave
inc
fdivrp
fisttpll
adc
lock
or
mov
lea
inc
xchg
test
jo
xor
adc
mov
imul
sbb
and
in
xchg
jg
pop
pusha
sub
mov
xor
xchg
cs
insl
cmpsb
cmp
movsb
cmp
stc
lock
inc
call
add
and
jp
ljmp
mov
gs
mov
and
inc
fnstsw
push
roll
scas
lcall
lcall
sbb
js
adc
xchg
sub
dec
popa
mov
sbb
fists
sub
lret
aas
bound
in
mov
lret
lcall
fimuls
jne
popa
push
pop
popl
leave
and
adc
push
jo
iret
dec
stos
ficoml
dec
mov
pop
fnsave
add
andb
stos
inc
inc
or
inc
je
aad
fsubrl
push
mov
inc
cwtl
repnz
data16
outsb
fsubs
push
rcl
arpl
inc
pop
and
insl
rcrb
add
push
xor
dec
addr16
es
out
push
or
pop
icebp
cmp
mov
and
xlat
xchg
xor
mov
cmc
ds
cmc
rcl
mov
cmpsl
xor
fbld
jnp
in
outsb
pop
sub
xor
sub
stos
xchg
inc
shr
jb
adc
cmpsl
data16
adc
leave
pusha
or
addr16
sub
sbb
ljmp
push
lock
push
lods
mov
mov
adc
hlt
cmp
loopne
pop
cmp
mov
mov
mov
cmp
lock
mov
cmpsl
arpl
in
pop
movsb
lea
aam
xchg
fidivs
xchg
jae
in
adcb
add
lahf
and
lahf
sub
mov
mov
outsl
and
pop
cmp
cli
inc
aaa
and
flds
pop
push
push
pop
iret
push
mov
fnstenv
jbe
cltd
stos
push
lea
loope
rcrl
jb
xchg
stos
mov
cmp
stc
sub
sub
inc
js
mov
xchg
je
mov
jl
adc
add
lods
orl
sub
fnsave
insb
mov
xor
loopne
sbbl
scas
leave
popa
mov
fstpt
imul
mov
pop
pusha
pop
pusha
jns
dec
add
jbe
pop
cmpsl
shr
loope
and
push
dec
into
push
in
cwtl
call
je
ljmp
push
lahf
fstps
xchg
xchg
inc
mov
imul
jo
sub
repz
and
arpl
xchg
in
fs
mov
push
jno
sbb
pop
movsb
sti
mov
mov
xchg
or
sbb
mov
ljmp
mov
add
mov
or
or
movsb
cmp
mov
fs
push
cltd
aas
scas
repnz
leave
ljmp
push
xor
sti
fbstp
mov
fwait
mov
dec
sbb
push
inc
sbb
icebp
fistps
add
mov
fsubl
icebp
or
or
cli
cmp
nop
lret
cmp
xor
lea
mov
pushf
test
int3
adc
in
into
gs
mov
in
adcl
jle
call
or
push
xor
and
jno
mov
or
dec
repnz
pop
nop
sbb
pop
cmp
adc
lods
pop
jns
aad
cs
ss
sub
cwtl
jne
sbb
sub
xor
fxch
movsb
cmp
aaa
inc
push
push
xor
lods
push
xor
jbe
cmpsl
ss
call
test
dec
push
cmpsb
sbb
xchg
mov
pop
xchg
cmpsl
lods
dec
jnp
std
shr
lds
scas
xchg
push
add
sub
aam
stc
jo
ja
cmpsb
sbb
sbb
leave
and
je
popf
xor
xchg
cmc
xchg
mov
sub
int
push
ror
xor
pop
xchg
out
mov
cltd
push
nop
inc
adc
arpl
pushw
or
jnp
and
fdivr
int3
test
enter
lcall
mov
shl
lods
loop
mov
stos
or
push
mov
mov
mov
push
push
mov
dec
sub
cmp
mov
data16
rep
ret
repz
notb
movsb
adc
out
inc
mov
xor
outsb
adc
dec
loop
test
push
orb
jge
xchg
mov
pop
mov
cmp
push
inc
mov
pushf
and
sbb
outsl
test
incl
scas
jno
mov
fstpt
outsl
jns
mov
sub
cmp
mov
mov
inc
into
fldenv
push
dec
dec
or
test
add
add
sub
rcll
or
dec
jecxz
imul
xchg
adc
je
inc
sar
add
pusha
dec
dec
int3
aam
test
out
mov
ret
cmpxchg
dec
popa
repz
repz
pop
loopne
mov
scas
xchg
xchg
scas
mov
shlb
add
fwait
jne
inc
adc
js
or
idivl
mov
lods
aad
push
nop
rcrb
inc
lds
imull
std
inc
stos
pop
dec
lods
inc
sbb
jns
jb
addr16
popf
cmc
fnsave
decb
xor
pushf
jmp
loopne
xor
inc
into
data16
lret
mov
mov
fcoml
inc
mov
sub
sub
pop
and
adc
imul
xor
shrb
int3
cmpsb
into
enter
into
packuswb
insl
sahf
jns
inc
shrl
jno
pop
orb
ds
xor
rorl
and
pop
mov
inc
aad
adcl
jecxz
mov
daa
out
push
dec
lock
jae
pop
imul
pushf
xrelease
push
in
cmp
imul
test
inc
add
add
fwait
xor
dec
add
dec
stos
shrl
imul
cmpsl
sbb
sub
mov
add
loop
clc
sub
out
mov
or
sbb
outsb
outsb
outsl
dec
hlt
rcrl
dec
hlt
adc
push
cmc
mov
shlb
es
int3
arpl
addl
js
mov
cwtl
adc
test
cs
test
stos
dec
lea
push
push
and
pop
negb
int
fdivrl
jae
sbb
ret
cmp
loop
push
mov
cmp
pop
xchg
add
add
fs
cmp
add
inc
sbb
fistpll
es
movsl
adc
push
sbb
mov
sub
cmp
jp
push
fcomp
dec
daa
mov
and
lds
shlb
pusha
mov
xchg
lahf
jae
cltd
mov
mov
jmp
sbb
jmp
inc
cmpl
jg
fbstp
sbb
scas
mov
add
sbb
lods
lods
mov
mov
push
add
mov
mov
out
fxch
sub
adc
or
scas
ret
or
mov
sbb
sti
in
jo
aaa
add
data16
mov
popf
add
push
xchg
outsl
adc
sbb
sarb
mov
xchg
ret
cmpb
loop
pop
adc
cmc
or
popf
cmp
das
and
xchg
sarb
lods
jg
pop
mov
insl
jb
out
popa
sub
mov
xchg
cmp
je
push
mov
xchg
je
and
push
lods
mov
cltd
cltd
or
dec
mov
sahf
hlt
adc
add
insl
bnd
add
jle
pop
mov
js
jno
pop
ljmp
push
jmp
icebp
ss
daa
outsl
sbb
mov
mov
add
aas
hlt
xorl
lcall
dec
mov
dec
xchg
clc
and
xlat
cmp
push
cmpsb
sahf
sub
xor
mov
mov
int3
pop
push
addb
repnz
ljmp
jmp
test
jb
jns
test
push
add
mov
xlat
sbb
fsub
test
addr16
dec
ret
jnp
pushw
subl
and
sub
sbbb
int3
or
jns
sti
jmp
rcll
adc
sbb
jne
enter
mov
lret
sub
fcoms
dec
in
fsubrl
icebp
gs
idivb
js
movsb
inc
jns
out
add
pop
insl
lods
jnp
mov
gs
fcoms
push
sbb
sub
cmp
push
add
mov
push
popf
adcl
out
mov
inc
testb
retw
inc
fwait
cmpsl
inc
add
imul
in
cmpl
jle
mov
xor
push
cmp
loop
jbe
adc
mov
insl
xchg
dec
inc
pop
sub
xlat
insl
icebp
mov
das
repnz
jg
cmp
js
fmuls
inc
mov
lock
cmp
and
cmp
xor
adc
lock
push
je
test
daa
into
leave
pop
stos
lret
inc
std
int3
jecxz
adc
cmp
push
add
hlt
data16
and
stos
jo
fstpl
daa
scas
mov
cltd
cmc
lea
xchg
lea
dec
cmc
das
add
jno
pop
or
xchg
packsswb
negb
push
sub
test
rorl
repz
ficoml
inc
inc
sbb
push
cmpsb
mov
push
fadd
xchg
jle
jecxz
stos
add
orb
pop
mov
repnz
repz
push
or
adc
cmp
fcom
insb
add
jmp
xchg
in
jecxz
and
or
inc
and
add
loope
push
ret
cltd
mov
jecxz
jp
cmpb
push
cs
sbb
mov
mov
fstps
dec
dec
inc
push
xor
ret
ret
int
mov
xchg
sub
scas
rcrl
push
mov
lret
ss
int
decw
and
leave
mov
mov
rcrl
cmc
stos
xor
jae
or
jnp
testb
push
aas
shlb
add
cmpsb
repnz
adc
pop
icebp
dec
cltd
xchg
xor
pop
add
sbb
mov
enter
imul
imul
mov
jl
cmp
fstl
fadds
xchg
in
jo
mov
adc
ljmp
aas
es
dec
mov
mov
in
test
inc
xor
fistpl
xor
dec
or
mov
test
stos
cpuid
xlat
mov
pop
pop
stc
sub
inc
aaa
mov
sub
mov
fmull
ds
testl
jbe
jge
cmp
mov
pop
outsl
jnp
jb
scas
push
repz
xchg
jbe
and
and
popf
xchg
or
mov
mov
jno
inc
adc
mov
rep
pop
cmp
aaa
insl
dec
hlt
imul
push
incl
cmpsl
jo
cmpsb
jp
cwtl
pop
out
movsb
cmp
mov
ljmp
aam
out
punpckhwd
inc
xchg
sub
inc
jbe
ljmp
popf
xor
cmp
cli
xchg
inc
idivb
je
mov
scas
subb
scas
add
jge
sbb
jo
je
pop
adc
mov
lret
add
jb
cmp
pop
cli
mov
cmp
ds
mov
insb
lds
xor
gs
call
inc
inc
outsb
sbb
mov
xor
mov
mov
cmp
jle
or
es
addr16
sub
dec
fisttpl
push
addr16
push
jp
jo
sbb
cmpsb
xor
jae
pushf
es
mov
aam
pop
sbb
ja
adc
jne
repnz
fs
enter
insl
jge
out
xchg
arpl
lea
shrb
mov
shlb
outsl
xchg
outsb
sahf
xor
mov
mov
jb
dec
gs
and
push
test
jl
rorl
mov
imulb
cmp
and
and
cld
lcall
pop
adc
cmp
dec
mov
sub
je
nop
xchg
rclb
adc
dec
push
push
clc
lcall
adc
cld
and
push
rcrl
add
inc
cmpsl
cld
dec
dec
jae
dec
outsb
jg
leave
cmp
dec
or
into
loop
imul
lods
pop
outsl
inc
mov
add
and
into
jecxz
stos
sbb
ss
stc
std
lods
stos
fnstsw
popa
fiaddl
xor
jb
dec
movsb
pop
in
nopl
xchg
test
nop
cmp
imul
lock
subl
mov
or
xchg
fs
cmp
lods
sbb
cmp
clc
xchg
stos
jge
cwtl
lret
sbb
lcall
push
jne
insb
cmp
pop
outsb
cmp
loope
loopne
push
add
pop
xchg
jp
pop
and
xchg
dec
mov
in
jmp
fcomps
mov
outsl
jnp
cmp
inc
stos
adc
and
jbe
jg
ret
lods
loope
roll
jne
mov
iret
test
xchg
and
xchg
dec
push
dec
bound
xchg
inc
mov
lret
hlt
or
mov
push
pop
jmp
rcrb
fistl
mov
fwait
stos
cmc
inc
daa
mov
pop
loopne
inc
ss
ds
and
fldt
mov
mov
data16
pop
pop
bt
cmp
pop
mov
loopne
imul
std
fnstenv
cmp
movsl
inc
and
loopne
lock
mov
ss
mov
pop
push
nop
outsl
fistps
bound
popa
icebp
mov
cmp
jge
mov
lahf
es
mov
loopne
mov
into
inc
fst
jb
or
fnstcw
fbld
movl
es
mov
fwait
xchg
cmp
inc
add
fildll
andb
mov
push
sub
fsts
dec
fnstsw
je
pop
xor
add
sub
mov
sub
cld
xchg
sub
dec
dec
pop
rcrl
mov
pop
lds
outsl
dec
jecxz
mov
xlat
mov
fistps
xchg
jge
or
aaa
push
add
push
dec
aam
repnz
and
push
fld
inc
add
ucomiss
mov
sub
dec
in
mov
xchg
inc
mov
enter
jno
jle
dec
in
xor
mov
lret
lret
add
stc
pop
sbb
mov
push
sahf
mov
sub
mov
outsl
ss
pop
pop
loope
pop
cmp
sub
push
and
cld
bound
push
xchg
and
jno
sbb
arpl
ja
andb
into
ret
repnz
xchg
mov
pushf
dec
sub
scas
jle
push
jl
mov
xchg
jl
addb
cmp
adc
outsl
sub
mov
xchg
dec
mov
xchg
rcrl
lock
outsl
cmpsb
mov
sbb
lret
jl
sti
or
mov
leave
jns
jb
scas
out
outsb
and
mov
mov
scas
lods
lods
cmp
mov
lret
fbld
test
pop
adc
pop
jb
cmp
inc
adc
push
not
mov
sti
sbb
mov
loopne
rol
mov
cld
inc
pop
mov
into
mov
in
sub
rcrl
dec
push
iret
and
xor
test
push
dec
std
push
or
out
inc
pop
ror
icebp
loop
mov
sahf
or
sub
ja
mov
cmpsl
mov
lahf
mov
pusha
divl
fmull
mov
pushf
or
cmp
lock
xchg
sbb
dec
jo
mov
or
cmp
xchg
ja
push
pop
ficomps
sti
mov
ja
sbb
lret
fbstp
jb
or
and
lds
dec
or
test
add
push
int3
push
cmp
and
inc
mov
dec
faddl
sub
jbe
aam
mov
jecxz
sbb
or
cmp
xchg
daa
sti
adc
sub
notl
shrl
mov
xor
jle
sub
mov
mov
icebp
xor
cmp
test
push
lods
lcall
xor
push
dec
in
gs
sbb
aaa
arpl
dec
add
jns
fdivrl
scas
mov
pop
cmp
lret
loop
fs
lret
fldenv
sbbl
cmpsb
outsl
enter
pop
xlat
rclb
push
fs
sbb
jl
mov
jecxz
dec
dec
inc
rcrb
mov
stc
insl
add
sub
jno
or
sbb
push
xor
jl
push
int3
inc
pushf
mov
sbb
out
dec
daa
push
movsl
pop
cmp
sub
xor
push
mov
nop
sbb
push
sub
adc
pop
in
ds
dec
jae
lcall
add
mov
rcrl
repz
loop
mov
scas
xlat
pop
sbb
lahf
xor
xor
pop
sub
int3
xchg
loopne
stc
cwtl
aam
jp
mov
clc
lds
mov
adc
pusha
xor
mov
push
insl
sub
and
in
ds
or
push
call
loopne
jb
pop
iret
sub
mov
int
xchg
pop
jbe
mov
xchg
push
cmpsl
pop
in
mov
mov
in
cmp
inc
add
mov
ret
xchg
and
push
push
jge
sti
or
mov
pop
push
aas
inc
stos
repnz
ljmp
mov
out
cmp
sbb
sub
push
xchg
or
inc
fildl
aaa
stos
push
ljmp
xlat
idiv
xchg
mov
and
adc
mov
mov
inc
sbb
adc
aaa
mov
pop
in
mov
push
cld
sub
mov
nop
das
mov
sahf
fwait
xor
push
ds
ljmp
push
sub
dec
ja
rep
mov
sbb
les
pop
dec
and
adc
insb
in
mov
push
inc
xor
loope
jl
pop
xlat
lods
jmp
lret
push
addb
cli
sahf
xor
mov
jmp
gs
push
mov
push
data16
jne
inc
xor
lock
loop
push
inc
lds
mov
or
enter
push
mov
xchg
xchg
adc
stc
pop
push
adc
dec
pop
sbb
add
fwait
push
subl
pusha
pop
ljmp
mov
ljmp
cmp
imul
outsl
lea
push
mov
jne
add
repz
cld
int3
mov
in
shrl
jb
sbb
mov
xor
lea
mov
cmp
xor
sub
sub
jmp
mov
sbb
pop
and
stos
dec
loope
sbb
inc
add
push
and
insl
and
or
int
mov
add
es
or
stc
inc
test
ret
jg
test
jo
xor
sbb
inc
rol
out
inc
in
cmp
xorb
andl
pop
dec
adcb
leave
rcl
rcrl
int
mov
hlt
imul
ret
cmp
out
add
mov
add
fisubl
fdivs
ja
pop
out
cwtl
dec
dec
lret
out
fisttpll
clc
jge
jbe
and
mov
in
push
call
bound
jo
mov
mov
daa
pop
push
mov
inc
sub
out
addl
dec
mov
push
in
pop
push
inc
mov
sub
pop
pop
les
test
pop
or
mov
push
jae
mov
mov
xchg
mov
loop
lock
xor
icebp
jle
stc
in
int
sbb
insl
add
int
jge
cmp
dec
cs
mov
xchg
fs
cwtl
sub
cs
sbb
aas
rorb
or
ljmp
jle
mov
cs
lret
jnp
jb
mov
xor
stc
pop
out
sub
pusha
add
mov
or
mull
xchg
cmp
add
loop
sub
jnp
xor
testl
sub
jle
xchg
cmp
movsl
ja
xlat
adc
pop
imul
pop
hlt
cmp
jnp
leave
test
in
fwait
je
sti
jae
xchg
cmp
pop
insl
mov
imul
pop
decb
ret
test
call
das
push
jle
mov
aas
push
mov
mov
rcrl
fbstp
test
pxor
lods
mov
mov
test
cwtl
xchg
dec
ffreep
add
push
jecxz
and
lods
fdivr
testb
xlat
aad
leave
in
cwtl
xorb
adc
mull
ret
rorb
sti
pop
out
inc
sbb
adc
icebp
inc
push
mov
outsl
imul
xchg
lds
cli
ret
hlt
adc
leave
es
jmp
call
add
mov
pop
xchg
sbb
in
dec
pop
fwait
loop,pn
sbb
out
fadds
sub
in
pop
xlat
mov
push
in
push
pop
push
ret
popa
fsubr
mov
fwait
push
adcl
test
pushf
fxch
lret
pushl
inc
insb
xchg
jmp
xchg
popa
inc
push
jne
sbb
icebp
fsts
jae
jnp
test
test
mov
mov
mov
addr16
or
mov
sub
int3
popa
add
sbb
push
jae
mov
adc
inc
mov
sub
leave
pop
lret
fisubrs
clc
lea
cmp
mov
sub
mov
mov
inc
call
test
xchg
adc
sub
int3
iret
mov
adc
or
sub
jno
jnp
push
lods
fidivrs
push
xchg
add
mov
pop
push
js
and
cli
cltd
push
lea
jmp
jb
sub
dec
rorl
iret
add
lahf
jne
lods
mov
popf
in
lods
fucomi
mov
mov
jb
jge
add
xchg
roll
and
loopne
lds
movl
jb
test
push
mov
sub
mov
in
inc
cmpsb
movsl
and
xchg
inc
lret
add
and
pop
loope
cmpsl
mov
dec
sub
loop
cs
test
sbb
adc
lods
mov
mov
sub
imul
jle
fldt
or
mov
mov
push
xchg
sub
dec
dec
push
inc
jns
lds
jp
mov
insb
movsb
cmp
ret
jl
hlt
xchg
adc
cltd
in
addr16
cmp
xorb
push
push
mov
test
loopne
sub
stc
dec
je
jmp
lds
ud2
lcall
mov
add
cld
movsb
arpl
mov
sbb
cmc
mov
xchg
addr16
push
jnp
xchg
lret
mov
pusha
not
cmpsl
fld
mov
cmp
inc
orl
push
sbb
fisubrl
adc
sub
pop
mov
and
inc
lock
cwtl
mov
mov
push
mov
and
mov
ja
pop
adc
gs
mov
rorl
add
push
xchg
push
pop
mov
jge
je
sbb
ljmp
imul
ds
mov
cld
enter
loopne
push
fiadds
add
cmc
outsl
mov
or
test
cli
and
inc
into
mov
fdivrs
mov
add
daa
xchg
adc
xchg
insb
das
xor
mov
dec
roll
loope
pop
das
js
test
jecxz
popf
data16
and
mov
add
rorl
into
in
adc
lcall
mov
cmpb
push
lods
adc
lods
mov
mov
push
xchg
xor
les
fwait
jb
cld
pop
out
loope
fisttpll
ret
fldl
pop
ds
movsb
sub
adc
xchg
leave
mov
pop
inc
in
mov
mov
mov
xchg
jb
enter
jno
insl
inc
repnz
stos
shrb
push
insl
shll
stos
lock
pushf
and
pop
push
sti
pop
jne
push
sbb
data16
test
dec
jmp
mov
inc
lds
jg
sbb
adc
add
mov
bound
mov
pop
gs
movsl
cmp
mov
mov
push
adc
int
stc
out
das
je
xlat
pop
cmp
jge
aam
cmp
lcall
inc
into
mov
and
cmp
cmpsl
loopne
lcall
std
nop
ret
push
sbb
push
push
cmp
dec
jg
jl
rcrl
or
or
js
xchg
ss
dec
nop
xor
jmp
or
sarl
repz
lds
add
add
mov
adc
jae
jp
pop
xor
sti
xchg
dec
push
sub
subl
rcll
lds
mov
sub
outsb
inc
decb
inc
jbe
les
jb
and
ss
scas
xor
add
pusha
sti
pop
jbe
orb
fildll
add
mov
jnp
mov
and
nop
mov
mov
sub
aad
sub
and
pop
cmp
lldt
dec
jns
aaa
mov
pop
or
pop
in
and
cmc
mov
rcrb
imul
xchg
fidivs
add
push
mov
popa
clc
xchg
jbe
push
and
jg
jno
adc
xchg
push
daa
dec
mov
ss
dec
push
or
inc
jmp
scas
int
inc
ljmp
xchg
push
dec
pop
dec
add
xchg
out
movb
jg
pop
mov
call
cmp
or
xor
test
and
dec
loope
jns
negl
popa
es
rcrb
sub
or
adc
pop
xor
aas
fcmovne
mov
mov
in
outsb
loope
cmp
repnz
xchg
je
iret
add
xor
outsl
add
in
je
imul
adc
imul
and
lea
sub
xor
fisttpl
xor
dec
cwtl
mov
out
imul
cs
sub
inc
push
mov
or
cmc
xchg
icebp
mov
pop
jl
cs
and
sub
call
mov
dec
xor
adc
in
sbb
sub
lret
cmp
pop
sub
adc
xchg
out
cli
lret
or
flds
mov
lea
testb
mov
outsl
and
mov
jge
lahf
scas
sub
lods
dec
sbb
addl
jb
adc
lea
dec
loopne
fs
movsl
xchg
and
dec
jb
test
outsl
inc
loopne
dec
pop
ljmp
push
call
aad
outsl
sbb
std
rcrb
pop
cmp
ljmp
sub
shll
xchg
imul
cld
iret
and
inc
xchg
frstor
mov
xchg
add
push
ja
test
sbb
pop
ret
outsb
jnp
stos
xchg
dec
pop
add
sub
dec
je
pop
xchg
jmp
les
pop
flds
mov
push
mov
push
mov
cltd
xor
xchg
push
adc
sub
gs
adc
mov
lret
ret
pop
and
lods
ror
fmul
xor
fwait
ljmp
addr16
xlat
sarl
xor
xorb
xchg
and
cmpsl
mov
int3
loopne
mov
cmpsl
ret
testl
imul
push
stos
imul
and
mov
or
mov
js
bsf
insb
add
mov
jns
pop
lret
out
ret
hlt
cmpsb
das
xlat
adc
mov
cltd
imull
sub
mov
mov
nop
sub
ret
imul
imul
cmp
cmp
in
fisttpll
xor
sti
xchg
jge
sub
push
lcall
in
inc
or
sub
jns
rcrb
ret
sbb
xchg
adc
in
and
pop
lock
ja
mov
iret
loop
mov
jl
loope
mov
mov
cmp
sbb
insb
std
mov
xchg
js
mov
push
cmp
fistpll
decb
subl
or
out
repz
sub
sbb
dec
cmp
int3
jg
adc
bnd
in
lods
inc
fbld
push
xlat
je
cmp
jne
push
sbb
gs
fbstp
mov
sub
in
aaa
xchg
adc
mov
imul
daa
cli
xchg
sbb
pop
push
inc
push
push
repnz
push
adc
mov
mov
cmc
dec
mov
or
inc
sbb
inc
sahf
jno
dec
dec
pop
dec
add
xchg
adc
ss
mov
sbb
sbbb
fwait
push
sub
push
xor
and
adc
dec
mov
leave
dec
mov
and
dec
in
jo
add
popf
push
loope
nop
lods
jg
pop
dec
sub
stos
enter
xchg
sub
jno
or
insb
pop
rcll
push
and
xor
lahf
sbb
jo
push
lods
mov
pop
xchg
imul
mov
inc
test
ja
jo
mov
in
mov
insl
cld
xor
sub
jbe
loop
adc
adc
shrb
or
clc
fwait
pop
sahf
int3
inc
and
arpl
rclb
mov
je
pop
sahf
aad
mov
test
movsl
push
and
aas
sub
pop
dec
jecxz
cmp
cmp
mov
adc
ret
pop
push
test
dec
call
loope
mov
add
in
mov
and
mov
push
orl
aaa
sub
fsubr
mov
pop
repnz
cld
dec
pop
add
jnp
add
cmc
or
push
cmc
cmp
dec
pop
mov
jle
or
and
fistps
rcr
movl
clc
imul
mov
jl
movb
clc
lahf
mov
dec
and
mov
cld
lahf
arpl
push
cmp
or
mov
psubb
sub
push
call
aad
in
xor
mov
xchg
repnz
movsb
cmp
pop
xor
decb
jg
lret
push
inc
shlb
in
cmpsb
push
lods
pop
orl
lods
sub
mov
dec
push
dec
cld
lods
insb
clc
push
adc
sbb
xchg
int
xchg
ljmp
and
xchg
push
xchg
in
sub
jnp
adc
sbb
les
das
sub
jb
shlb
pop
lret
xor
ja
push
jp
dec
insl
psubusw
insl
leave
mov
and
mov
fcmove
xor
push
out
cld
jb
jo
out
sub
or
mov
sbb
and
mov
stos
imulb
adc
cmpsl
add
mov
rcll
push
loop
xchg
push
lahf
pop
or
lret
outsb
adc
xchg
dec
cmc
outsl
jge
push
sahf
xlat
insl
xchg
ret
push
sbb
mov
call
add
pop
mov
or
xlat
repz
sti
or
ds
gs
pop
dec
ss
push
xor
mov
jmp
xor
scas
les
inc
cli
sbb
gs
or
mov
add
stos
or
mov
mov
mov
ja
mov
jge
into
push
ret
push
imul
lods
gs
mov
addr16
jl
xlat
xor
xchg
sub
push
scas
pop
jl
add
push
and
and
scas
push
inc
imul
das
adc
out
movsb
stc
ja
cltd
inc
jg
scas
mov
inc
or
pusha
pop
pop
shlb
adcl
insl
xor
mov
mov
decb
mov
insb
adc
add
inc
mov
lods
and
repnz
cmpsl
or
scas
and
and
mov
cltd
mov
dec
jmp
dec
les
bound
mov
push
dec
popa
xchg
mov
inc
int3
xor
les
mov
loopne
dec
xchg
idivb
push
inc
gs
mov
faddl
mov
or
test
sbb
adc
push
dec
dec
jecxz
xchg
sti
jl
stos
push
mov
lcall
testl
movsl
xor
std
push
mov
cmp
push
daa
jnp
clc
sbb
mov
inc
jmp
andl
mov
fdivs
pop
lock
push
mov
and
xor
cmpsl
es
test
jnp
and
nop
daa
or
dec
pushf
in
sub
xor
imul
in
test
or
or
pop
pusha
sbb
test
jg
cmp
scas
call
inc
sbb
lds
je
mov
aaa
daa
sub
cmpsb
cmp
push
sahf
jnp
lea
lcall
mov
jns
inc
push
aaa
sbb
addb
xchg
pop
fidivrl
mov
xor
shrb
ret
daa
ja
sbb
das
pusha
stos
cmp
or
inc
mov
shlb
or
pop
dec
add
lock
fmuls
jbe
icebp
stos
sbb
in
cmp
outsb
mov
jge
stc
aam
loope
xchg
pop
int3
pop
add
sub
dec
aad
fwait
push
ljmp
fbstp
sbb
cmp
orl
and
cmc
in
jge
cmpsl
scas
lea
pop
dec
loope
push
pop
call
sub
test
lret
sub
jnp
dec
dec
jle
xchg
cmp
fidivs
dec
push
push
test
inc
dec
cmc
dec
sbbl
scas
test
inc
sahf
ret
repnz
loope
into
ljmp
push
gs
gs
fiaddl
shll
in
adc
sub
or
mov
sarb
movsb
insl
icebp
mov
aas
sub
iret
into
int3
cmpsl
xchg
and
mov
mov
mov
enter
xlat
inc
js
movsb
clc
out
xor
mov
push
outsb
outsl
aas
add
enter
push
adc
ss
cmpsb
aaa
loope
and
sub
add
mov
push
ret
bound
or
mov
inc
sub
xor
stos
in
mov
jns
add
xchg
mov
int3
pop
aaa
mul
fisubl
int3
adc
leave
mov
ds
fldt
xchg
in
sahf
addr16
ds
sub
stc
inc
arpl
inc
sbb
or
push
jnp
xorl
and
adc
inc
mov
loopne
out
jecxz
jne
xor
test
call
stos
or
into
or
xorb
cld
xchg
xor
out
decb
pop
out
cmp
adcb
push
inc
adc
aad
pop
xor
scas
dec
pop
xchg
out
rolb
sbb
dec
rclb
jnp
adc
xchg
and
mov
stos
xor
or
pop
mov
jle
sbb
aad
lret
mov
xor
in
pop
mov
adc
push
mov
mov
push
cmp
pop
jp
and
mov
jnp
xchg
sbb
movsl
pop
scas
push
pop
and
cmp
inc
push
jno
jo
or
mov
cmpsb
jecxz
jno
or
fwait
shrb
and
lock
fisubl
sbb
mov
inc
fistpl
sbb
pop
jge
fidivl
insl
test
add
out
call
popf
jg
dec
cmp
inc
xchg
in
in
push
repz
push
add
xchg
or
mov
xor
ljmp
sbb
sbb
sub
adc
bound
scas
xchg
subl
nopl
sbb
imul
jno
jo
jbe
ja
dec
jae
xchg
xlat
jo
or
jb
outsl
es
xchg
jo
lret
cs
or
push
mov
push
pop
cmp
adc
jmp
fstpl
add
jns
cmpb
std
xor
jbe
ror
jbe
lock
adc
cmp
stc
sbb
test
inc
cs
cld
sub
aam
and
insl
movsl
dec
dec
movsl
mov
sub
mov
xchg
mov
jl
adc
xchg
mov
and
cli
popf
jl
or
popa
movsb
es
andl
cwtl
in
sti
mov
dec
es
push
test
popf
xchg
das
call
jge
jp
xchg
dec
add
shlb
mov
dec
loopne
out
js
ret
gs
dec
shr
mov
add
cwtl
mov
scas
sbb
out
mov
test
or
fstl
test
test
inc
add
or
adc
pop
dec
mov
aas
dec
mov
lret
loope
sbb
popa
ret
jae
sub
test
mov
jae
add
sub
cld
and
jnp
mov
negl
into
ficoms
fsubs
or
cmp
in
sub
shl
jp
icebp
xchg
add
lods
and
xchg
fcomp
aas
rorb
sbb
mov
xchg
jne
adc
sbb
sub
cmpsb
jns
xor
xchg
test
in
mov
sbb
jle
popw
push
loopne
mov
pop
loope
add
lret
push
inc
adcl
inc
cmp
jae
pop
adc
test
fnsave
cmp
add
mov
int3
and
stc
adc
les
fstpt
ljmp
add
aam
pop
pop
arpl
pusha
aad
loop
mov
jno
jecxz
mov
insb
dec
cmc
cmp
mov
gs
notl
mov
sbb
cmc
mov
xchg
cld
jne
lods
movsl
loopne
cmp
xorl
mov
out
mov
outsl
inc
roll
xchg
push
mov
out
pop
jno
cmpsl
into
cli
mov
aas
mov
sbb
inc
push
mov
inc
mov
lret
cltd
sarb
les
dec
jle
test
lds
rcll
pop
fdivl
mov
push
int
aas
mov
fdivs
fyl2xp1
inc
push
addr16
push
sbb
cwtl
pop
xor
ret
jo
adc
mov
testl
roll
popl
xor
jg
mov
cs
jp
push
aam
mov
int3
mov
adc
sub
mov
pop
jnp
das
ss
pop
jbe
push
test
repz
xor
jno
dec
loopne
xchg
mov
xor
jo
adc
stc
mov
sti
das
cli
push
fdivrs
inc
pop
test
pop
push
js
jo
loop
pop
or
mov
and
ds
cmp
in
mov
inc
inc
out
std
insb
fwait
sti
les
cmp
and
cmp
popf
cwtl
sbb
push
push
push
mov
fisubs
hlt
sbb
cld
jg
jmp
out
push
adc
js
int
adc
sti
rcll
jnp
iret
ljmp
into
in
leave
aas
inc
stos
cmp
pop
lret
fprem
adc
pop
jl
pop
dec
stos
xor
sbb
data16
loop
scas
xchg
aaa
dec
xchg
insb
jle
out
xor
push
mov
mov
sbb
sbb
stos
xchg
sub
add
fwait
push
inc
cmpsl
mov
cmpl
stos
popf
or
les
notb
lock
fs
insl
push
lds
adc
xchg
hlt
mov
shl
push
xchg
aam
enter
mov
add
push
pop
leave
xor
hlt
out
xchg
ficompl
fsubl
add
mov
and
sub
rcr
push
cmc
fmull
jae
push
stc
adc
mov
cltd
in
mov
xchg
in
imul
leave
scas
push
std
aad
mov
pop
outsl
roll
mov
js
lea
or
pop
push
rorb
or
movsl
sub
adc
test
cld
outsl
loop
mov
fwait
mov
movsb
popf
enter
xor
repz
push
sti
adc
in
xchg
cltd
addr16
cs
mov
adc
push
jmp
bound
add
cmp
cli
jecxz
push
push
dec
lds
int3
fs
pop
or
jb
pop
inc
cmp
in
ficoms
mov
jl
clc
or
ds
movsb
inc
and
sbb
daa
sub
dec
loopne
and
lcall
and
sarl
out
add
mov
or
jge
ret
fisubrs
and
adc
sbb
aas
lds
jle
sbb
inc
scas
and
inc
xor
push
dec
pmulhuw
xor
sub
cli
rcrb
sbb
notl
cmp
lcall
movb
cmpsl
pop
xchg
das
int
int
iret
shll
xor
scas
cmpsb
xor
jno
fsubrs
je
pop
and
mov
cmp
jmp
push
mov
aam
sahf
insl
insl
popa
mov
sti
cmp
ss
arpl
enter
pop
movb
lahf
mov
lea
dec
mov
push
or
dec
xchg
jno
xlat
push
addr16
jmp
call
xbegin
adc
jmp
imul
pop
sub
pop
fdivl
fstl
popa
fimuls
rcll
mov
iret
add
add
mov
enter
and
push
or
out
and
fidivl
pop
test
pop
aam
in
cmpsl
xor
push
jmp
sub
xchg
sub
out
xchg
xor
push
mov
lea
pushf
xor
sbb
xchg
and
fwait
mov
insb
or
jp
sahf
jbe
jg
pop
lea
in
adcl
int
mov
lret
dec
and
dec
xlat
and
sbb
jp
push
cmp
pop
out
aas
scas
rol
pop
jmp
mov
shr
sti
sbb
dec
in
jae
test
fimuls
test
push
and
cmpsb
ljmp
loope
add
xor
push
add
iret
xor
loopne
jl
adc
faddl
andb
arpl
push
push
sub
jg
lods
cli
push
cwtl
daa
push
pop
das
adc
lock
mov
jle
jp,pt
jecxz
ret
pop
int
notb
lock
fwait
push
pop
lcall
xor
incb
cmp
xchg
add
lock
cmc
and
imul
pop
mov
lcall
sahf
and
ret
cmp
jmp
loopew
in
into
push
in
xchg
xor
or
xchg
push
mov
or
cmp
push
dec
pop
test
repz
sbb
dec
or
dec
sub
je
xchg
cltd
shl
test
mov
ds
shlb
mov
pop
cmpsl
lret
mov
fxch
mov
lcall
rcll
jmp
pop
or
inc
sbb
sbb
mov
shll
sbb
enter
fwait
aaa
dec
xchg
and
les
fwait
test
loope
mov
mov
cmpsl
adc
xor
sbb
push
cmp
fwait
mov
lods
mov
push
ja
lods
mov
in
mov
out
call
in
push
xor
sti
jbe
ficompl
cld
pop
sub
sahf
aaa
stos
jmp
leave
dec
in
sbb
lods
or
pop
in
les
dec
fildll
lahf
lods
mov
out
pop
mov
xor
and
dec
xor
in
mov
scas
fnstsw
ss
mov
ja
add
movsb
les
mov
call
cmc
mov
loope
pop
mov
cmp
cmp
mov
ljmp
test
rcl
popf
outsb
not
sub
sbb
test
add
jb
pop
lret
jbe
nop
mov
xchg
pop
xlat
scas
lret
jge
std
rcrb
add
jnp
in
test
and
cltd
push
ss
push
movsl
enter
dec
push
and
adc
lretw
pop
inc
push
and
fwait
ja
add
mov
xchg
pop
adc
ss
mov
rol
pop
add
loop
xor
push
xor
and
push
iret
lret
scas
xor
aas
fwait
test
xor
je
jl
popf
xor
inc
cli
nop
inc
pop
mov
in
inc
icebp
inc
cltd
fldenv
je
loope
aaa
push
fwait
adc
xor
cmpsl
push
loopne
mov
or
shrb
into
adc
orl
leave
loopne
jg
sbb
and
outsl
testl
repz
xchg
dec
dec
loopne
mov
je
shrl
adc
xlat
loope
shrb
out
sbb
lock
sub
cltd
adc
push
testb
lds
mov
sub
or
dec
inc
adc
shl
testb
fistl
es
ljmp
into
mov
add
lahf
dec
outsb
leave
cltd
dec
iret
xor
adc
or
xlat
cmp
jne
xor
jp
popa
add
mov
or
pushf
push
xor
ljmp
pop
fdiv
mov
stos
inc
arpl
xor
mov
and
mov
fdivr
jmp
fucomip
pusha
pop
repnz
daa
adc
cs
fucom
mov
pinsrw
iret
mov
cmc
in
inc
repz
insb
push
mov
int3
addr16
push
xorb
out
mov
shlb
arpl
pop
sbb
xlat
jle
inc
mov
enter
sub
mov
jno
cmp
pop
dec
gs
pushf
mov
cld
loope
mov
pop
sar
adc
cmp
nop
mov
push
sbb
mov
shrb
ja,pt
mov
cmp
cmc
call
leave
pop
push
insl
aas
jae
call
xchg
cmp
adc
out
bound
inc
fsubr
adcl
mov
int
es
or
or
orl
mov
fnstcw
dec
xchg
sub
inc
in
xlat
push
push
jecxz
imul
outsl
jno
popa
nop
lods
sbb
adc
mov
les
popa
sbbb
jecxz
mov
in
test
jecxz
lock
bound
outsb
adc
and
sbb
or
dec
data16
jg
mov
push
sahf
fsubrl
dec
sub
sbb
cmp
insl
cmc
jmp
cmp
pop
test
push
sub
xrelease
push
pop
cmp
sbb
outsl
jl
test
repz
adc
ss
imul
shlb
movsl
cmp
sub
pop
outsb
inc
jle
mov
ds
inc
outsl
lods
xor
jne
insb
add
jb
ss
scas
mov
addb
ljmp
cmp
or
add
mov
and
pop
out
ja
push
imul
cmp
xor
outsb
mov
push
mov
inc
sbb
ja
inc
mov
pushf
test
enter
in
in
xchg
jg
xlat
popf
add
xchg
xor
call
dec
add
pop
popf
fiadds
outsb
jmp
das
ja
inc
in
inc
lret
movsl
call
jg
stc
pop
adc
push
popf
and
push
call
jle
sahf
arpl
lahf
pop
daa
inc
pop
outsl
daa
fldl
push
out
repz
notb
jge
and
inc
das
lea
lahf
inc
pop
push
in
test
fldl
les
imul
aaa
push
je
and
gs
inc
mov
insb
add
mov
movsb
es
cmp
test
cmp
mull
lret
adc
jno
imul
repnz
xor
jo
stc
push
aam
inc
push
mov
pop
fldt
out
mov
cmp
out
jno
adc
fwait
adc
ss
cld
push
mov
mov
xchg
xchg
popf
mov
mov
cmp
cld
xchg
lret
mov
arpl
fnstsw
sti
fwait
lcall
mov
xor
sbbl
jns
lahf
divb
ds
sub
inc
xchg
pop
imulb
mov
movsb
cmp
popf
enter
mov
and
jns
loope
mov
shll
cmp
or
push
mov
cmpsb
sbb
into
gs
jo
hlt
movsl
cmpsb
jne
mov
aas
aad
mov
inc
imul
popf
or
cmp
fsubrl
call
jne
es
popa
clc
mov
stos
cmpsl
sarl
std
mov
popf
xor
pop
pop
ljmp
cmc
sbb
fldcw
mov
aam
lock
out
pop
in
aad
mov
xchg
aas
or
js
pusha
cwtl
cmp
add
ret
mov
jmp
cmp
push
aas
dec
jae
xchg
sub
adc
jb
mov
andb
xor
mov
movsl
in
jge
lcall
xlat
push
shl
mov
mov
xchg
mov
push
or
rcl
inc
fiadds
push
gs
fstp
and
inc
arpl
lea
xchg
jmp
push
adc
push
stc
and
mov
mull
jno
mov
push
loopne
jg
lea
popl
xor
adc
mov
bswap
mov
pop
into
pop
xchg
mov
fisubrs
roll
or
in
pop
fildll
or
dec
xchg
pop
cmpb
mov
sbb
xor
fnstsw
pop
mov
stc
pop
sub
lds
jo
les
cmpsl
cmp
xor
call
mov
scas
mov
jmp
jnp
cmpsl
pop
sahf
lock
and
pop
push
add
cmp
add
mov
jnp
push
bound
mov
popa
lods
jns
jp
shrl
orl
mov
scas
fistps
xorl
mov
sbb
jle
xor
clc
pop
int3
cmp
push
mov
in
mov
pop
pushf
out
or
adc
add
out
inc
cltd
cmp
push
mov
enter
nop
daa
sbb
int3
int
adc
dec
pop
pop
mov
test
int3
repz
pop
stos
loope
cltd
fcom
stos
jae
push
push
mov
cmp
leave
pop
lret
gs
push
mov
test
lock
xchg
pop
pop
icebp
pop
or
enter
lahf
stos
cmpsb
inc
sarl
out
mov
imul
mov
shrl
or
sbb
pop
call
inc
push
sbb
pop
mov
or
push
xor
jg
mov
sbb
cmp
sbb
pop
insl
xchg
mov
lahf
test
inc
inc
andl
insl
repz
hlt
push
enter
push
inc
fs
das
or
and
xor
push
mov
test
mov
inc
out
inc
packuswb
pop
push
xor
pop
repz
iret
jns
jmp
jbe
std
push
mov
stos
rorl
cwtl
mov
dec
adc
xor
sub
ret
jne
inc
inc
pop
fwait
mov
je,pn
push
pop
ja
push
xor
jmp
push
fisubs
mov
les
fdivs
adc
mov
addb
add
cvtdq2ps
stos
sub
mov
arpl
mov
mov
and
mov
jno
fucomp
xchg
imul
dec
popa
int
je
popa
repnz
rcrb
jecxz
jo
push
mov
fstpl
icebp
sub
xchg
add
adc
push
or
rorl
pop
cli
jl
xchg
mov
pop
pop
testb
rclb
repz
cmp
dec
scas
pop
test
jnp
or
pop
xchg
push
test
and
dec
in
xchg
icebp
insb
sub
sub
or
pusha
test
and
inc
mov
jge
inc
jecxz
sbb
cwtl
push
out
mov
movsl
pop
fistps
sarl
out
icebp
adc
jecxz
inc
in
fsubrl
mov
pop
insl
scas
lods
fs
das
js
shrl
jbe
cmp
hlt
imul
mov
mov
adc
outsb
inc
stos
jnp
xor
jmp
das
scas
pop
popa
or
add
popa
ss
xchg
cmp
subl
repnz
aad
sbb
jns
cmpsl
dec
jle
jnp
push
ficompl
cmp
leave
scas
add
inc
icebp
jo
shll
xchg
rolb
ljmp
popf
sub
adcl
inc
cmc
gs
ljmp
mov
scas
sub
mov
inc
test
movsl
jbe
and
add
pop
xor
pop
fstpl
fstpl
jl
divb
xor
arpl
out
cs
das
movsl
xchg
inc
push
pop
cmpsl
icebp
push
test
sbb
jb
pop
cmc
mov
jle
xlat
out
xchg
cltd
jne
scas
push
jmp
jecxz
sbb
jno
jbe
imul
inc
push
cmc
add
stos
pop
jno,pn
jo
xor
popa
push
xchg
sub
dec
mov
add
nop
xor
cmp
aam
xchg
push
adc
xchg
jp
add
push
lds
fimuls
dec
push
repz
cltd
popa
clc
mov
std
cwtl
pop
cmpb
add
cs
arpl
insl
pop
jae
dec
enter
mov
loop
setno
mov
bound
or
mov
sahf
inc
std
out
pop
sub
rcr
push
pop
das
testl
pop
mov
xor
sbb
dec
lret
sbb
jmp
jne
dec
pop
cwtl
sub
pop
mov
iret
out
push
and
sti
xor
sub
cmp
jmp
negb
sub
mov
push
jg
test
adc
test
mov
js
stos
inc
rcrl
sub
mov
push
ror
jp
mov
dec
xchg
jle
fwait
cs
cmp
out
jecxz
push
push
icebp
push
inc
inc
push
sub
aaa
add
dec
mov
inc
adc
imul
inc
movsl
sarl
or
loope
call
xor
cmp
aam
dec
in
adc
jb
icebp
push
test
test
insb
sub
sbb
mov
inc
pop
dec
loopne
cmp
or
daa
sti
iret
cmc
iret
push
xor
xchg
rcll
out
mov
inc
outsb
subb
or
cli
loope
cmp
sbb
ficoms
push
or
lods
fcoml
test
or
jl
cmp
fisttpll
push
emms
add
cmc
pop
aaa
test
mov
scas
enter
jno
repnz
inc
test
movsl
pusha
mov
xlat
aam
sti
mov
mov
mov
pop
mov
sbb
out
jno
push
inc
adc
xchg
jle
jmp
and
push
leave
cmp
cwtl
push
or
xchg
cltd
insb
jge
inc
andl
in
pop
xor
inc
mov
sbb
aam
ss
cmp
mov
add
pop
fdiv
push
fsubrs
xchg
pop
lods
faddl
notl
mov
out
dec
sarb
push
cltd
jg
pop
xor
xchg
pop
imul
or
popf
imul
int3
push
vpunpcklqdq
sbb
xchg
outsb
jnp
mov
mov
mov
cwtl
mov
adc
lret
sbb
jecxz
out
adc
adc
notb
or
fs
cmp
popa
fucomip
jp
xchg
scas
fnstcw
ja
clc
add
cmp
and
stos
cltd
mov
shrl
shlb
sub
arpl
je
mov
ret
or
je
jno
cmpsb
jno
test
frstor
xchg
jne
test
lret
outsb
loope
mov
jbe
sbb
sbb
movsl
shrl
push
insb
dec
popf
sti
push
iret
push
mov
jbe
test
pop
pop
xchg
sub
leave
jbe
or
mov
xor
scas
lcall
fwait
cmc
out
sti
es
mov
rol
gs
dec
insb
outsb
scas
pop
xchg
add
adc
testl
lods
popf
jle
int
lock
es
mov
mov
xchg
loope
frstor
pop
mov
lahf
push
cmp
scas
fsubrl
and
sbb
fcoml
xor
jecxz
loope
cmc
jle
lods
popa
dec
mov
sti
lea
xor
test
scas
cmp
sub
in
pop
mov
mov
sbb
pop
jl
testl
xchg
in
daa
mov
cmpsb
dec
fld
int
std
cli
shl
imul
es
or
loopne
mov
ret
ficomps
dec
dec
mov
and
push
scas
std
push
or
fdivrs
pop
inc
jl
mov
cmc
adc
push
sbb
xor
in
pop
sub
mov
cld
and
loop
daa
cmp
arpl
sbb
jp
decb
frstor
mov
xchg
mov
push
and
movsl
mov
mov
pushf
and
or
dec
fstp
cmpl
stos
movsb
inc
xchg
jnp
hlt
hlt
jnp
sub
inc
sub
inc
cmp
sarb
out
loope
repnz
ljmp
repz
xchg
mov
jl
inc
sbb
outsb
orl
neg
mov
shrl
or
xor
sbb
and
mov
push
and
lds
push
jp
push
lcall
orb
sub
lds
es
rclb
ljmp
jno
stos
flds
jmp
je
push
cmpsl
insb
lea
and
jge
movsb
les
mov
xor
mov
in
adc
jae
adc
add
inc
cmp
insb
mov
imul
dec
xlat
shlb
jb
dec
fnstsw
ja
cmp
inc
shll
fadds
int
jge
pop
sbb
add
mov
mov
loop
lods
int
sbbl
call
pop
rcrl
pusha
arpl
pop
lock
add
jecxz
in
jo
sbb
dec
int
dec
adc
divb
adc
fwait
sbb
rolb
call
cmp
jmp
lock
aas
aad
test
mov
jns
jl
mov
pop
mov
in
inc
lea
ds
cmp
stos
mov
loopne
sub
fdivs
pop
popa
pop
adc
hlt
lret
bound
inc
fadds
fsubr
aas
les
xchg
xor
in
imul
clc
lock
push
adc
inc
and
and
data16
lret
aaa
data16
push
or
mov
ret
outsl
push
mov
dec
rorb
rcr
or
scas
fsubs
mov
repnz
mov
xlat
out
lea
mov
inc
push
xlat
sub
arpl
lret
pop
inc
orl
lret
mov
es
lret
cwtl
ss
leave
pop
shrl
ljmp
and
ret
clc
outsl
cmpsb
jnp
pop
push
mov
aas
pop
test
adc
mov
jb
sahf
sub
imul
int3
daa
add
fsubrp
push
jmp
movsb
rcrl
jb
pop
mov
fidivrs
jecxz
sub
or
popf
cmp
inc
mov
test
aaa
pop
jp
dec
xchg
jmp
cltd
xor
inc
inc
pusha
jb
dec
dec
ja
outsl
cltd
mov
mov
pushf
fs
fists
add
mov
sbb
std
repnz
lock
das
mov
mov
mov
lods
mov
test
sti
punpckldq
add
sub
and
cs
dec
data16
xchg
iretw
movsb
inc
xor
push
test
xchg
dec
or
fisubs
push
xlat
push
cld
lock
jo
fbld
mov
in
loope
pop
lret
sub
mov
jo
jbe
nop
test
lods
cltd
fbstp
dec
adc
dec
jns
pop
in
xlat
mov
sub
pop
addr16
inc
hlt
sub
lret
mov
push
or
or
das
mov
sahf
mov
cmova
ljmp
jb
fcmovnu
xor
aaa
rorb
jp
jno
xor
ss
dec
lahf
nop
addl
mov
jle
and
shrl
es
cmpl
add
adc
sub
mov
push
pop
sub
adc
xor
pop
xchg
dec
or
sub
sbb
jg
leave
test
pop
sub
cmc
das
ss
xlat
out
pop
sbb
fs
lahf
sub
xlat
test
inc
int
mov
mov
mov
in
pop
jmp
xchg
insb
fildll
or
loop
mov
test
sbb
loopne
xchg
imul
push
out
lea
aad
ficoml
bndstx
cmp
pop
out
nop
sub
shrl
loop
lret
ret
fisubrs
rcrl
ja
jb
mov
movsb
loop
mov
add
loop
lods
dec
sbb
jp
mov
mov
dec
ss
in
lret
or
es
ljmp
adc
cs
out
nop
dec
mov
pop
jl
sahf
pop
mov
or
int
ds
cmpsb
les
leave
iret
and
lds
fisubs
int3
xchg
imul
jno
mov
jns
cmp
mov
fwait
daa
testl
xor
shlb
mov
and
xor
icebp
pop
ss
adc
sahf
jno
adc
sbb
or
dec
cmp
mov
mov
arpl
data16
xchg
movsl
data16
loope
dec
sbb
divl
push
inc
add
daa
jno
mov
push
push
mov
int3
cwtl
incb
cmp
push
std
xlat
in
insl
stc
cli
pushf
lret
das
stos
dec
leave
push
imul
sbb
dec
loop
addr16
nop
sub
bound
std
push
adc
es
mov
test
xor
daa
cltd
xor
mov
adc
jmp
jmp
add
push
addr16
jnp
cmp
ljmp
inc
popa
in
cltd
std
sbb
pop
shl
cmp
in
shl
xchg
mov
dec
pop
sub
inc
add
dec
ret
pop
and
push
test
mov
scas
flds
xlat
dec
rorb
scas
push
push
and
pop
pop
cmpsb
cld
ficomps
in
push
movsl
inc
pop
lret
cmpsl
out
gs
push
cmp
lods
xchg
mov
in
dec
in
cmp
jno
popf
or
loopne
out
inc
imul
fistpll
mov
mov
int
mov
adc
fdiv
test
in
inc
pop
fs
lahf
jbe
popa
lods
iret
lahf
dec
test
xchg
xchg
xlat
dec
mov
aam
sub
mov
pop
repz
bound
push
inc
xchg
cmp
loopne
lcall
shll
adc
fdivrl
or
adc
fsubrl
xor
pop
adc
dec
ret
call
in
addl
xchg
call
cmp
adc
jo
inc
pop
rcll
and
mov
mov
andb
in
test
popf
xchg
test
inc
fdivp
ja
xor
scas
mov
mov
xor
or
jo
insb
stos
inc
mov
dec
leave
cmp
mov
mov
es
cmc
mov
insb
sub
sbb
sbbb
xchg
mov
or
push
fildl
pop
nop
xor
and
dec
pushl
pop
lea
mov
sbb
push
je
cmc
pop
jne
enter
pop
cmpsl
je
stc
fs
jle
mov
iret
je
sbb
push
popw
clc
push
ljmp
jno
sub
ror
int3
mov
push
add
sub
test
gs
daa
inc
adc
pop
scas
nop
sub
enter
inc
aas
and
mov
xor
sub
orl
pop
cmc
shll
outsl
ja
jge
clc
adc
inc
lret
sahf
mov
out
insb
sbb
test
push
add
jg
imul
pop
fistps
push
add
rcl
loope
xor
sub
jg
push
pop
sub
xor
mov
add
mov
stos
mov
xchg
addl
or
push
int3
hlt
push
test
adc
xchg
add
loopne
xchg
adc
push
sahf
push
sub
test
jbe
jae
dec
push
inc
std
dec
in
insb
lahf
sub
inc
lods
iret
mov
mov
and
xchg
cmp
push
and
mov
push
and
fsubs
dec
lds
xchg
sbb
or
pop
loop
and
pop
jle
jg
js
test
lds
sbb
push
or
pop
out
sub
not
aas
data16
pop
ljmp
pop
sbbl
push
dec
sub
dec
pop
icebp
xchg
mov
push
or
es
notl
mov
aam
jle
fimuls
insb
cltd
fnstenv
jl
jne
flds
dec
mov
movsl
rclb
bound
sbb
mov
mov
jns
push
ret
fmuls
mov
cs
outsb
mov
sti
int
jae
call
jmp
cld
push
out
mov
fdivrl
fwait
sub
inc
outsb
add
xor
sub
divl
movsb
out
aad
jl
add
mov
inc
mov
mov
iret
rclb
test
and
sbb
jl
mov
sub
and
leave
in
repz
cwtl
push
xlat
shlb
xchg
stc
mov
jp
ret
pop
add
xor
cmp
cs
lcall
sbb
add
pop
mov
gs
xchg
pushf
mov
and
clc
inc
dec
jmp
jo
loop
pop
adcb
sub
inc
push
xchg
jb
rcrb
nop
sbb
inc
les
add
push
jnp
jg
jmp
test
inc
mov
iret
dec
repz
rorl
movsl
jno
test
sbb
mov
sub
push
mov
lcall
or
push
outsl
xchg
sub
pop
mov
add
pop
pop
xor
add
inc
test
inc
inc
ficomps
sarb
aad
xchg
pop
aam
int
lcall
ja
pushf
dec
dec
pop
bound
jmp
jg
mov
pop
fldl
dec
mov
push
or
pusha
inc
mov
icebp
inc
lret
sbb
int3
cmp
inc
push
repnz
subb
mov
test
xchg
sahf
stos
mov
in
sbb
mov
popf
adc
lret
xor
adc
jae
clc
push
int
cmp
cmp
test
push
push
or
and
pop
mov
xor
xor
jecxz
popa
clc
xchg
ljmp
shr
dec
es
in
inc
rorl
inc
push
or
jge
ss
inc
fstpl
cltd
cmp
cwtl
insl
mov
lcall
lret
je
std
loop
xor
xchg
pop
and
sbb
xor
int3
pop
or
loope,pn
xlat
cmpsb
add
fdivrs
and
jmp
out
sub
lea
lods
jne
fdivr
or
adc
repz
int3
popf
out
std
int3
sub
cmp
fnstcw
js
bound
es
jl
decb
xchg
add
loopne
aas
mov
and
jecxz
in
lea
jmp
lea
enter
mov
mov
mov
and
imul
test
sub
cld
jae
cmpsl
outsb
enter
xlat
shl
sub
ljmp
push
sbb
add
xchg
cmp
in
addr16
xchg
xor
not
out
sub
in
lea
pop
repnz
jl
pop
lods
enter
push
inc
adc
incb
cltd
add
xchg
sbb
pop
mov
sbb
pop
pop
pop
push
jle
popf
push
adcb
fs
jb
or
sbb
jl
scas
cmp
pop
out
rcrl
outsb
test
lds
je
leave
mov
pop
mov
cmp
lods
cmp
rcl
outsb
inc
adc
roll
dec
out
dec
xor
sub
rorl
lea
fsubr
xchg
jl
inc
or
or
cwtl
and
imul
adc
cmp
pop
mov
ror
sti
push
shlb
mov
testl
sti
xchg
sub
xchg
xor
bound
sub
xchg
push
inc
movsb
jg
mov
xor
cmp
jl
imulb
sbb
adc
dec
and
ret
hlt
mov
ds
and
cmp
cwtl
mov
sbb
add
addb
and
xchg
xor
daa
jp
push
stos
mov
es
jmp
xchg
inc
mov
xlat
aad
out
out
test
mov
sbb
ret
sbb
jb
jnp
jg
mov
or
outsl
sub
cltd
cmpsl
pop
fwait
int
addr16
fistpll
test
shrb
xchg
imul
cmp
push
clc
ficoms
or
loope
cmpsl
dec
in
inc
lret
push
stos
in
mov
jg
xor
jp
cwtl
cmpsb
rorb
pinsrw
push
cmc
push
mov
dec
in
lret
ret
cli
or
xor
push
jb
aad
mov
and
std
mov
fdivs
push
inc
adc
outsb
jmp
scas
dec
xchg
dec
stos
cmp
insb
sbb
mov
xchg
cli
inc
test
push
es
clc
stos
inc
fsubrs
sbb
dec
divb
adc
and
cli
push
int3
fiadds
cmp
mov
xlat
xor
push
adc
fisttpl
outsb
dec
shlb
mov
test
jg
and
rorb
xor
pop
cmp
arpl
push
stc
dec
in
int
movsl
cmp
insb
sub
shll
cmc
jp
dec
int
cmp
push
daa
into
popa
faddl
cmp
or
cmp
mov
lods
repnz
scas
xor
pop
dec
popl
testl
adc
popl
andl
mov
push
cli
cmp
inc
mov
into
and
in
or
inc
jmp
mov
mov
out
jns
sti
in
mov
adc
cmc
mov
cmp
pop
andb
xor
out
sub
and
pop
add
inc
xor
or
mov
pushf
jo
loope
fisubs
enter
pop
fsubrs
adc
imul
inc
pop
sbb
inc
push
cwtl
lcall
adc
mov
in
adc
mov
int
pop
mov
push
loopne
rorl
gs
sbbb
dec
je
sbb
hlt
dec
lcall
loope
jnp
mov
std
loope
add
dec
lods
xor
dec
aad
mov
hlt
mov
pop
jne
fnstenv
dec
push
nop
mov
testl
mov
jae
sbb
or
enter
cmp
jnp
mov
sub
in
repz
xor
pop
insl
outsl
adc
andb
push
stos
ret
or
or
ljmp
scas
mov
mov
fbld
pop
jg
leave
sahf
pop
jb
pop
pop
stc
sahf
mov
xchg
mov
mov
jl
xchg
call
test
inc
mov
ljmp
dec
add
xchg
lock
jmp
sbb
lret
mov
fsubl
int3
jns
andb
pop
mov
aaa
push
sbb
pop
add
ja
and
mov
sub
cmp
ljmp
pushf
xor
lods
pop
pushf
loopne
mov
adc
or
mov
arpl
xor
add
pop
hlt
aaa
aam
xchg
cs
sahf
mov
les
push
lds
inc
ficompl
loope
jo
mov
ret
lock
xchg
ret
mov
jge
data16
mov
popl
pop
test
int
cld
shll
shrb
add
les
subb
leave
xchg
dec
push
add
push
push
loopne
push
jecxz
push
pop
bound
out
sub
add
jne
inc
or
mov
test
mov
push
outsl
ret
in
ret
leave
bound
dec
add
pop
mov
mov
mov
les
mov
in
jecxz
mov
popa
add
dec
xchg
js
sub
fwait
xchg
dec
stc
mov
sar
xchg
out
bound
out
push
mov
lcall
movsb
lds
shll
mov
loope
in
xor
jbe
jne
jno
adc
jge
inc
push
pop
icebp
aas
adc
pusha
cmc
js
push
data16
lea
popf
xchg
mov
js
sub
jecxz
movb
or
xlat
push
and
imul
dec
xchg
clc
addr16
sub
repnz
movsl
xchg
jle
push
fnstsw
mov
sbb
js
je
mov
pop
mov
adc
pop
cmp
xchg
or
jo
push
sub
pushf
or
xchg
lret
lret
lahf
xchg
lret
in
sub
dec
aad
pop
mov
and
pop
fwait
jb
in
hlt
dec
cwtl
ret
sub
mov
loope
mov
sbbl
lahf
es
pop
pop
or
cmp
xor
pop
popa
dec
outsb
add
jle
mov
pop
xchg
test
mov
or
cmp
imul
js
fdivl
inc
cltd
dec
adc
daa
inc
mov
fcmovne
bound
das
fildll
es
push
mov
mov
xchg
pusha
clc
sahf
xchg
mov
jecxz
xlat
mov
jo
push
divl
into
fcoml
mov
pop
mov
pop
inc
pop
jb
inc
mov
sub
push
cmc
imul
cmpsb
in
sbb
int
sbb
dec
or
mov
ret
jp
lods
aas
cmpl
push
xor
sbb
jns
xor
imul
je
push
or
push
testl
mov
sbb
adc
mov
adc
xchg
leave
pusha
les
neg
xor
cmpsb
pop
movsb
sahf
setno
loop
jl
in
test
lret
or
sub
sbbb
loope
test
movsb
cmp
int
clc
mov
push
push
or
sbb
jnp
mov
pop
sbb
sahf
adc
mov
ret
sbb
sbb
inc
pop
addr16
add
jecxz
aas
dec
push
mov
fucom
in
push
data16
xor
sub
std
cmp
xlat
mov
jno
xchg
mov
lds
and
cld
ss
call
mov
inc
test
mov
lods
dec
cmp
mov
mov
adc
mov
sub
add
cmp
pushf
or
fstpl
lods
iret
dec
insb
in
jnp
mov
mov
dec
add
dec
in
jne
pop
push
sub
and
je
jno
test
popa
loop
call
dec
lods
stos
mov
imul
inc
mov
aam
fldl
push
xchg
mov
shr
ja
repnz
dec
push
sti
fsubrs
testl
test
or
adc
subb
mov
mov
adc
fistps
pop
lcall
and
adc
dec
jno
lea
fnstenv
int3
mov
or
in
repz
aas
push
or
loope,pt
mov
insb
inc
int
mov
fstpl
jl
popa
ljmp
cmp
pop
je
push
and
test
mov
loope
and
sahf
cmp
jge
sub
in
insb
jle
lock
jbe
add
sub
adc
adc
jno
scas
sub
sahf
cmp
mov
add
fcoms
in
fisubs
xor
inc
mov
jno
pop
test
pop
lret
loopne
sbb
inc
jle
aas
movb
pop
gs
mov
lret
cmpsl
lods
add
aam
mov
push
js
pop
mov
rol
iret
push
fsts
inc
cwtl
sub
daa
lahf
ss
lods
ret
mov
mov
xorb
mov
lods
nop
cmp
fcmove
xchg
jge
or
lahf
xchg
sub
dec
push
cmc
push
scas
cwtl
das
loope
decb
push
decb
jns
jbe
imul
outsl
push
test
pushl
dec
lea
mov
fisubs
out
mov
push
ja
stos
and
lods
mov
popf
ret
leave
aad
fstl
push
popa
fnsave
mov
scas
dec
lods
jmp
sbb
imul
push
bound
and
sbb
or
add
mov
stc
loop
lea
mov
mov
stc
mov
mov
adc
in
jp
adc
inc
mov
dec
jno
add
push
test
adc
push
jg
ljmp
jno
xchg
inc
shr
loop
mov
aam
sbb
sarb
in
pop
adc
insb
scas
shlb
mov
fisubrs
mov
aad
ficompl
out
fidivs
fistpll
fs
fwait
cltd
fbstp
test
fldcw
mov
popf
inc
xchg
stos
mov
xchg
inc
jno
push
sub
es
lcall
or
inc
xchg
sub
pop
sbb
int3
out
ret
mov
push
or
dec
vpcmpgtd
add
popf
outsl
mov
sarl
jns
and
xchg
jo
xor
sub
ficompl
aaa
dec
in
test
loopne
insl
add
movsb
mov
bound
iret
push
sub
sbb
mov
adc
mov
sbb
mov
outsb
in
adc
jl
xor
jle
divl
sub
xchg
add
xchg
jne
jns
dec
dec
movsb
les
inc
pop
adc
shl
out
cmp
mov
xlat
ljmp
mov
mov
fs
bnd
pop
insb
dec
xchg
jp
clc
jb
push
cltd
std
sbb
std
or
fsubr
inc
cmpsl
push
lods
jmp
aaa
xchg
dec
add
xor
ret
mov
test
leave
std
cltd
rorb
scas
inc
adc
xor
and
jp
rep
clc
xor
arpl
sbb
mov
imul
jno
xchg
sti
gs
out
shr
outsb
or
pop
jnp
sub
lock
insb
xchg
add
testb
jno
mov
pop
stos
aas
lea
mov
push
std
subl
ja
andl
sti
insb
sub
scas
and
cmpl
and
xchg
mov
fsubs
testb
fldt
push
jbe
inc
mov
movsb
inc
mov
jg
fwait
xlat
cmc
xchg
adc
test
sub
scas
add
das
inc
jns
fnstenv
inc
in
test
lcall
aaa
jbe
jae
push
dec
lcall
jg
ret
mov
hlt
jae
dec
xchg
test
aas
jbe
aaa
stos
jle
pop
fsubl
xchg
add
lcall
scas
mov
push
or
jb
fwait
push
out
xchg
in
cwtl
mov
enter
and
pop
lock
out
dec
xor
push
cmpsb
pop
int
stos
xor
gs
mov
fs
dec
in
pop
inc
stc
push
sahf
insb
add
inc
sub
mov
nop
out
add
xchg
mov
lret
lock
mov
cmpsb
jge
jb
dec
xchg
sub
fisubs
gs
sbbl
pop
scas
shrl
mov
or
mov
mov
sti
xchg
mov
sar
popl
daa
push
scas
lods
lret
int
xor
outsb
cmc
mov
call
cmp
jne
jg
push
inc
stos
inc
jl
icebp
mov
fsubrl
stos
ja
fsubl
arpl
scas
sbb
sbb
rolb
into
dec
fidivs
call
std
xchg
jnp
out
mov
mov
les
push
pop
in
shll
scas
into
pop
jle
incl
cwtl
xorl
pop
mov
rorb
pop
fdivp
cli
xchg
fstpl
jne
inc
sbb
cmpsb
cmp
push
mov
cmp
mov
jle
add
lds
and
test
insb
inc
cmp
sub
fdivl
mov
std
loop
imul
sbb
dec
shll
mov
cmp
mov
ret
outsl
adc
inc
push
daa
dec
adc
jge
popa
orb
sub
lock
mov
xchg
jno
sbbb
xchg
in
fwait
mov
movl
mov
mov
cli
jne
pop
jl
xchg
inc
mov
jle
sub
push
sar
mov
adc
add
dec
jb
jl
test
xlat
xchg
nop
dec
push
dec
or
es
xor
and
pop
das
push
daa
mov
xchg
sti
in
in
dec
sbb
jle
dec
sbb
push
cmp
jns
test
clc
cmpps
sbb
jle
adcl
cld
fistps
out
pusha
push
and
xchg
aaa
lds
mov
notb
mov
mov
sbb
hlt
stos
jbe
push
cmpsb
cmpsl
cmp
movsb
fsubrl
insb
jl
test
repnz
mov
ljmp
dec
mov
mov
loope
xchg
pushf
test
stos
call
pop
hlt
inc
mov
in
out
jnp
add
das
les
loope
pop
out
inc
ret
adc
aas
aad
lea
loopne
jge
pop
out
gs
add
rorb
sbb
mov
mov
dec
lret
or
flds
nop
mov
push
ss
mov
inc
sub
sbb
xor
fcoml
orl
pop
adc
in
jae
xchg
mov
jns
and
ja
jmp
push
xchg
sbb
cmp
push
aam
xlat
lret
ja
in
mov
pop
mov
mov
rcrl
push
add
jle
mov
ficoms
fsubrs
lods
les
les
fcompl
mov
mov
rcrl
call
fisubrs
rcll
nop
je
fcomps
push
adc
dec
lret
sahf
xor
inc
and
inc
sti
jae
imul
scas
inc
lods
loopne
push
or
stos
loop
xchg
mov
mov
sbb
dec
and
push
mov
pop
sub
pop
andl
sbb
sahf
lret
add
call
mov
mov
shlb
inc
rorb
jg
dec
pop
or
pop
cs
mov
js
mov
push
in
lods
lds
lret
mov
lock
dec
loope
inc
lock
movsl
mov
addl
and
pusha
xchg
sar
xchg
les
cmc
pop
cmp
js
mov
push
lods
push
jmp
add
cld
and
jge
push
push
popf
inc
push
sub
lea
fmulp
pusha
shl
les
sub
sbb
push
imul
sbb
and
rcll
fnsave
arpl
sti
or
jnp
fdivl
mov
adc
loop
jmp
lret
es
inc
cwtl
dec
or
adc
or
mov
lds
cltd
xor
or
popf
jge
mov
jbe
cmp
mov
in
mov
sti
inc
fsubrp
push
sbbb
sub
jns
int3
push
cli
pop
xor
repz
loop
pop
aam
insl
jecxz
mov
cmp
gs
std
push
jp
inc
inc
outsb
add
lret
in
inc
push
sbbb
inc
inc
fdivl
aad
dec
loopne
pop
lret
bound
adc
enter
jb
fnsave
push
pushf
ret
xchg
repnz
lods
pop
sbb
call
insb
insl
sub
pop
lahf
dec
repz
les
adc
jl
sub
push
insl
out
test
add
mov
das
lret
pop
mov
lea
ret
mov
adc
push
sub
out
insb
lods
add
xor
dec
mov
add
push
or
dec
jae
icebp
mov
rorb
mov
adc
inc
jge
cld
outsb
iret
scas
inc
shll
aas
sbb
sbbl
testl
sbb
push
aad
sub
popa
lcall
add
pop
push
jmp
mov
sbbl
adc
gs
add
jae
pop
repz
mov
aas
xor
xchg
jmp
daa
jp
cltd
push
mov
inc
xchg
push
or
out
xchg
sbb
nop
mov
mov
out
xchg
int
cmpsl
mov
gs
push
lahf
xsha256
cmpsb
adc
addr16
mov
pop
out
push
movsl
lea
ror
pop
ret
pmaddwd
cltd
test
inc
leave
adc
mov
inc
dec
pusha
incl
lret
xchg
enter
loop
jae
mov
lret
arpl
sti
sbb
in
cmp
data16
out
or
pop
decb
jp
jle
imul
push
dec
and
lea
andb
cld
icebp
mov
jne
mov
pusha
jnp
xor
mov
pop
vminss
cmp
dec
pushf
pop
sti
int
sub
mov
inc
pusha
mov
lret
in
and
sti
xor
sbbl
jo
gs
sbb
mov
icebp
notb
pushf
cltd
addr16
mov
int3
sub
push
stos
dec
jmp
scas
in
sub
or
push
push
icebp
movsb
jge
out
mov
add
lods
xchg
mov
lods
inc
in
or
pop
lcall
ret
inc
inc
inc
add
nop
pop
repz
sub
mov
sub
ds
shrl
pop
in
fs
lock
clc
inc
cli
mov
push
ret
mov
negb
pop
pop
jne
mov
fnstcw
lahf
sbb
and
jp
xchg
sub
lcall
int3
jo
pop
xchg
ss
cmpsl
loope
sub
inc
pop
lcall
jb
sbb
sar
ds
outsb
imul
jne
hlt
sbbl
ja
sbb
jge
xchg
ret
ret
xchg
push
loopne
pusha
fsubr
inc
xchg
sub
out
mulb
out
jle
sahf
add
stc
push
pop
add
scas
jmp
hlt
stc
xlat
stos
shlb
add
roll
cmc
fidivs
imul
add
cwtl
push
sub
and
mov
sub
in
push
std
xchg
inc
inc
dec
and
rorl
daa
cmpsl
andl
loop
inc
fsubrs
push
xor
push
sti
sbb
mov
fldz
pushf
outsl
cltd
cli
inc
xchg
movsl
push
shrl
and
mov
fistpl
or
and
loop
pop
push
data16
jmp
test
outsl
pop
sahf
mov
ret
pop
jbe
or
or
and
idivb
movsl
fimuls
repz
mov
iret
push
ret
mov
mov
loopne
xor
mov
jmp
lods
adc
or
fistpll
jne
shl
pop
pop
stc
outsb
sarl
adcl
adc
ss
cmpsl
and
xor
addr16
pop
loop
in
sbb
mov
pop
pop
dec
cwtl
pop
jg
aas
movsl
inc
cmc
popf
pop
push
shrl
xchg
sti
shll
lods
dec
lods
outsb
jl
imul
push
mov
leave
jns
rcrb
xchg
mov
sbb
jecxz
xor
or
jmp
sbbb
out
inc
lahf
mov
aad
dec
push
decb
imul
lea
cld
inc
popa
pusha
ss
mov
sarb
sub
rcrl
fbstp
out
mov
lods
fsubrs
jp
jmp
sbb
xchg
aas
dec
lods
mov
pop
fistps
sub
mov
rcrb
mov
loop
inc
clc
stos
mov
jle
jle
mov
arpl
or
inc
pop
test
shlb
pop
fidivrl
jmp
int
mov
jnp
iret
and
les
pop
pop
xchg
jmp
mulb
adc
scas
lods
cli
pusha
mov
xchg
xor
ret
movsl
inc
jecxz
pop
pop
mov
cmp
in
cmp
ffreep
or
lahf
decb
jg
mov
pop
cltd
jle
fistpl
bound
push
hlt
int3
mov
jp
push
stos
rolb
jb
mov
mov
cmpsb
repz
sub
adc
xlat
inc
xchg
cmc
and
xchg
inc
add
stc
fdivrl
or
or
inc
sbb
sub
cmp
out
dec
xchg
sub
stc
add
mov
cmp
and
test
mul
imul
addl
or
stos
fiaddl
lret
xchg
xlat
and
movb
lea
sbb
sbb
into
mov
push
lahf
dec
pop
test
push
fwait
xlat
test
add
or
sub
xor
test
and
jno
dec
pop
shrl
mov
ret
and
jns
push
imul
bound
aaa
push
push
or
push
cltd
jo
movsb
and
lods
mov
jl
sbbb
sub
add
popf
push
jno
xchg
sub
iret
cmp
imul
mov
dec
aam
arpl
nop
imul
fwait
add
xchg
loope
or
in
jae
adc
pop
jns,pn
lock
mov
imul
mov
mov
ss
jg
cmpsl
mov
or
sub
push
insb
xchg
push
xchg
les
add
repz
lret
movsl
adc
imul
lock
cmp
imul
shrl
test
insl
sub
kunpckwd
adc
mov
inc
mov
push
sbb
out
cld
rorb
mov
and
push
leave
pop
mov
sarl
xor
xchg
sub
mov
loopne
mov
insl
rcll
lea
mov
loop
outsb
xor
xor
pusha
addr16
jl
pop
or
inc
pop
and
sub
mov
fs
push
lds
and
cmpsl
fsubr
call
in
aaa
movsl
leave
ljmp
lods
cmpb
xchg
and
mov
movsb
leave
iret
xchg
ret
sub
or
lahf
sbb
push
push
mov
sahf
cmpsb
iret
ljmp
xor
cs
test
decb
leave
adc
js
orb
inc
sub
clc
fimull
xchg
add
adc
in
push
nop
sarl
jl,pt
dec
xchg
jl
les
push
push
xchg
add
xor
mov
ss
fs
pop
mov
or
insl
dec
xchg
sub
test
insl
and
cmp
cmpsb
pop
mov
scas
adc
push
lods
jns
mov
addr16
mov
mov
cmp
ss
pop
out
cli
dec
movsb
mulb
lret
inc
cmc
movsb
or
imul
jae
scas
movsb
lahf
aas
mov
ljmp
call
leave
dec
outsl
push
and
inc
lea
xchg
lds
add
fstps
sbbl
cs
out
enter
sub
sub
adc
shll
xchg
xchg
scas
clc
pop
ret
pop
aad
ret
mul
sbb
es
aas
out
xchg
shl
dec
cld
call
out
ja
push
push
call
mov
add
inc
inc
xchg
into
xchg
ds
popf
or
and
xchg
and
inc
mov
repz
pop
mov
pop
jmp
cmpsb
jecxz
pop
cmp
mov
lcall
sbb
ljmp
jo
xchg
pop
pop
imul
mov
fs
cli
sbb
mov
sbb
daa
cmpsb
adc
mov
xchg
jle
xchg
fists
xor
jge
stos
jns
add
add
inc
pop
jno
btc
jecxz
gs
outsl
in
cmp
mov
push
in
xchg
cltd
xor
jnp
ljmp
xor
pop
repnz
push
sub
in
inc
test
add
lcall
outsl
cmp
scas
mov
sub
lcall
fxch
daa
test
sbb
mov
xchg
jo
out
cmp
sub
cmp
mov
push
ret
out
sti
and
xchg
and
stos
andl
dec
nop
xchg
sbb
lock
push
inc
rorl
pop
mov
fucomip
aad
adc
loop
sbb
xlat
mov
movsb
cmp
fimull
test
int3
stos
push
pop
adc
outsb
negb
daa
test
mov
leave
hlt
loopne
adc
fstpl
enter
mov
repnz
adc
lods
or
and
add
add
push
jo
or
sbb
daa
into
iret
or
fs
inc
cs
outsl
les
pop
mov
lret
loop
out
mov
jl
mov
inc
xlat
repz
mov
mov
pop
xchg
pushf
cmp
mov
xchg
aad
adc
xchg
out
shr
fisubrs
pop
std
mov
xor
sub
add
xchg
out
or
cwtl
das
xor
scas
adc
inc
jb
dec
mov
adc
dec
mov
cmp
inc
mov
push
stos
mov
lahf
lock
cmp
hlt
mov
out
jg
mov
jnp
xor
pop
sub
pop
andl
ljmp
imul
and
shrb
inc
fdiv
xor
in
jno
out
sbb
sub
in
jmp
lods
inc
jp
insl
sub
dec
cltd
sub
loopne
mov
mov
push
push
sbb
arpl
jge
sub
hlt
jo
out
jle
push
jl
inc
out
scas
out
sahf
jb
fldt
pushfw
repz
ret
xor
orb
mov
mov
insb
shrb
pop
cwtl
vpunpcklqdq
pop
pushl
inc
sbb
adc
push
repnz
add
out
das
mov
inc
mov
push
mov
jmp
sub
fs
andl
pop
icebp
pop
rorl
pushf
or
adc
sbb
aas
ss
mov
jns
sbb
inc
shrb
addr16
adcl
mov
fwait
enter
ja
and
pushf
push
xor
lret
inc
push
flds
xor
mov
cmp
jle
call
xchg
mov
sahf
fidivl
inc
sbb
ret
adc
sub
sub
mov
ja
push
mov
popf
shll
cmpsl
flds
push
mov
jns
push
movsl
data16
ds
lods
sub
imul
dec
loop
loope
les
dec
pop
repz
add
jmp
sbb
dec
mov
cs
push
jno
or
pop
lock
ss
cmc
aad
mov
sarl
addl
test
imul
pushf
hlt
mov
imul
cmp
testl
and
hlt
addr16
cld
push
push
mov
data16
lret
adc
mov
lods
lahf
shll
rclb
in
mov
or
scas
pop
adc
dec
mov
fildll
addr16
shrl
or
mov
mov
sbb
cmpsl
mov
cwtl
adc
shlb
xchg
imul
and
loope
js
sub
aas
lods
inc
lds
inc
mov
push
pop
sub
aaa
pop
daa
scas
mov
iret
into
dec
movsl
or
adc
cmp
sarl
mov
scas
pop
cli
out
out
mov
fsubrs
pop
push
pop
lahf
int3
xchg
cwtl
pop
das
fs
jge
inc
lcall
ja
sub
jno
fmull
push
mov
arpl
mov
inc
mov
jb
rorb
mov
cli
jbe
inc
add
ja
xor
fstpl
imul
leave
int3
sbb
test
sub
out
or
mov
jne
mov
mov
js
cmp
add
mov
fisubl
or
push
scas
push
popf
in
lods
stos
sub
mov
testb
sti
outsb
aad
mov
or
or
shrb
sub
lods
pop
xor
xchg
dec
fnstcw
scas
mov
mov
daa
pop
mov
sbb
movsb
xchg
sub
sbb
popa
pop
subb
sub
sbb
inc
stc
xor
out
adc
push
popa
jo
push
pop
xor
movsl
mov
adc
push
xchg
mov
or
insb
jl
gs
adc
lahf
inc
dec
push
mov
adc
fwait
mov
mov
imull
pop
cmp
dec
imul
fwait
mov
xchg
sti
mov
push
loop
in
xchg
xor
mov
popf
pop
mov
adc
arpl
sbb
mov
cmp
fld
lea
out
mov
and
pop
sahf
jl
es
cld
jne
mov
and
xchg
das
sbb
mov
push
movsl
cli
push
add
inc
xchg
subl
sub
pop
mov
jg
or
fwait
jne
sub
dec
sub
das
outsl
jns
sbb
roll
jns
mov
fs
inc
pop
push
mov
sbb
cmpsb
sbb
shll
addl
add
pop
mov
lods
fiadds
and
out
repnz
insl
push
jbe
cmpsb
dec
movsb
pop
in
adcl
add
pop
outsb
rcrb
mov
loop
mov
push
sub
maskmovq
testl
push
shrb
dec
jl
jge
outsb
push
push
xchg
pop
jbe
je
xchg
mov
scas
or
roll
shlb
mov
fnstsw
push
out
mov
lds
cmp
js
cwtl
jae
add
pop
xor
mov
sub
flds
mov
xchg
pop
xlat
xchg
mov
sub
insl
lcall
mov
inc
ret
inc
in
insb
or
pop
xchg
lds
lcall
out
jl
sub
insl
loopne
roll
cmp
cmpsb
out
cld
xchg
unpcklps
mov
insb
mov
fs
ja
or
stos
mov
jb
enter
into
inc
mov
sbb
and
out
es
xor
popl
fmull
pop
jo
insl
scas
inc
aaa
jl
sysexit
inc
adc
cli
push
add
repnz
insl
jnp
jle
pop
aad
stos
loope
mov
cmp
jo
fsubr
sbb
jno
mov
sarl
pop
xchg
pop
sbb
pop
shll
idivl
stos
add
div
xchg
and
xchg
sti
enter
daa
lods
jnp
fucomip
sub
xchg
dec
mov
jb
xchg
xlat
pushfw
divl
jle
repnz
test
jge
icebp
dec
outsb
fisubrs
imul
aaa
ja
dec
sbb
inc
adc
data16
lcall
dec
cmp
push
movl
or
lods
ss
or
iret
mov
fcom
hlt
or
sub
je
dec
pop
or
mov
pushf
and
bound
aas
addr16
push
loopne
and
mov
sub
push
pop
jg
cmp
imulb
inc
pop
lret
subb
sub
push
imul
imul
out
push
or
test
jbe
shll
xchg
pop
jmp
gs
push
out
push
in
in
pop
stos
in
fidivrs
rcr
mov
lock
push
dec
fsubp
jnp
push
or
mov
subb
mov
and
mov
sbbb
adc
lock
and
mov
pop
and
icebp
xor
xchg
add
ljmp
sbb
in
decb
push
sub
push
sbb
nop
mov
push
jmp
aad
pop
cltd
and
xor
aas
das
sahf
clc
ret
jns
sbb
bound
adc
xchg
into
xchg
add
jmp
mov
sub
outsl
xor
mov
inc
mov
cltd
je
xchg
xor
int
lods
mov
in
int3
sub
sbbl
sub
or
or
sbb
push
out
jl
cld
rorl
lahf
mov
mov
das
jno
xor
fs
sub
xchg
or
test
pop
cwtl
jo
push
jns
dec
stos
jb
ret
inc
pushf
mov
add
push
out
jg
lea
and
inc
xchg
js
jns
pop
das
popf
in
test
push
or
sub
cwtl
mov
mov
fbld
std
adc
into
out
fbld
mov
sub
iret
stos
insb
scas
je
cmp
and
cmp
sub
sub
cld
aaa
and
stc
loope
in
lcall
cld
mov
lods
daa
xlat
lret
hlt
les
repnz
repnz
mov
jb
mov
in
test
repz
adc
mov
scas
or
lcall
pop
cld
jae
sub
gs
mov
rclb
iret
dec
bound
shlb
push
sbbb
or
test
aas
imul
mov
mov
and
popa
clc
scas
test
mov
fistpll
inc
bound
adc
mov
ret
dec
jmp
pop
mov
ret
xchg
scas
push
dec
xor
dec
mov
or
aaa
stc
gs
and
aad
dec
shl
xor
and
ret
mov
notl
adc
dec
ja
mov
loope
push
cmp
stos
jl
leave
cmp
pop
ret
cmp
mov
shll
mov
ffreep
test
sbb
in
and
fs
mov
repnz
ja
sbb
jae
cmp
pop
js
outsb
aam
mov
pop
fidivl
push
and
inc
and
lret
mov
push
adc
mov
int
imul
imul
scas
lcall
mov
fstl
mov
dec
ljmp
pop
or
pop
lods
inc
pop
jns
rclb
repz
and
xchg
test
mov
cmp
jno
sbb
lahf
and
cmp
data16
inc
hlt
pop
jg
push
shll
mov
gs
leave
mov
cmp
push
push
or
mov
cmp
cmp
je
mov
push
or
push
call
or
fildll
mov
les
adc
push
and
mov
repz
pop
movsb
mov
sub
fsubp
inc
mov
fisubl
push
in
das
mov
jge
mov
shrb
push
xchg
jb
ja
jge
fistps
repz
dec
into
and
lods
xchg
into
and
call
fbld
rcll
mov
xorb
xor
jo
jnp
mov
sbb
adc
mov
hlt
push
pop
ja
ja
xlat
xchg
pop
into
sub
xchg
mov
mov
and
int3
lret
in
addr16
and
adc
and
insb
xor
imul
daa
xchg
ja
bound
xorl
insl
fsubrs
aam
pop
aas
jne
add
sub
mov
or
jg
aas
xchg
movsl
sahf
sub
inc
sbb
jl
mov
fdivs
add
fadds
push
lcall
xor
mov
adc
sbb
sbb
or
pop
sahf
rcrb
repnz
cmp
lahf
cmpsl
dec
cmc
jns
mov
or
pop
xor
pop
add
or
and
jmp
push
shl
mov
shl
mov
pop
mov
addr16
out
cmp
jg
jmp
rcl
fnstenv
or
ds
mov
and
or
stc
popa
adc
pop
sarb
inc
push
lahf
ja
sbb
fildl
mov
jg
or
inc
jae
cmp
popf
test
cmp
xorl
push
push
jae
gs
cmp
out
adc
and
test
xorl
xchg
xchg
pop
ret
ficoml
cwtl
dec
pop
lret
mov
xchg
movsl
fcmovb
push
mov
shll
or
inc
or
xor
mov
pop
xor
in
jb
enter
ret
inc
pop
sahf
lret
lcall
and
inc
inc
xchg
push
push
jmp
inc
sbb
pop
xchg
mov
adc
push
loop
jb
mov
mov
sahf
gs
xchg
and
mov
bound
jg
mov
movsl
lds
or
adc
adc
andl
jns
mov
pop
jmp
repnz
sti
or
xor
mov
xlat
out
cmp
inc
fldt
pusha
xchg
scas
xchg
test
and
insb
xchg
mov
mov
pop
out
aas
lock
mov
adc
jae
push
icebp
popa
cwtl
test
lret
sahf
pop
loopne
in
mov
loop
inc
inc
ljmp
xor
pop
mov
sti
xchg
jmp
mov
sbb
add
imul
add
je
sbb
lahf
sub
cmp
pop
repz
inc
lcall
xchg
aaa
and
xchg
xor
sub
adc
push
jae
push
arpl
dec
push
fsubrp
mov
sbbl
jno
lahf
aad
test
and
in
ja
mov
ss
divl
inc
outsb
dec
dec
mov
divb
int3
lea
jmp
cltd
push
fcoml
inc
mov
push
lret
xchg
inc
stc
mov
rcr
push
cli
pusha
mov
mov
fmul
dec
ds
int
add
jns
sub
adc
mov
ds
pop
sbb
cmp
out
xor
popa
int3
inc
bnd
mov
push
shlb
es
ds
add
scas
adc
int3
iret
or
divb
popf
xor
pop
sbb
fcmovu
aaa
push
mov
or
adc
and
fwait
mov
xor
inc
mov
mov
in
aad
inc
inc
mov
js
xchg
dec
sarb
ds
xor
clc
rcrb
or
orb
or
inc
fidivrl
or
jge
in
test
xchg
mov
icebp
jo
out
arpl
fmulp
ficoms
aaa
mov
mov
in
inc
sbb
sub
inc
mov
and
inc
lea
push
and
dec
out
mov
mov
push
call
out
xchg
rol
pop
add
lea
push
xchg
in
aas
push
arpl
leave
sbb
test
clc
push
out
inc
pop
pushl
mov
cmp
jno
and
xor
adc
popa
sbb
aad
stc
rol
jnp
pushf
cli
sub
mov
ljmp
shlb
push
inc
ret
ja
ror
loope
mov
xchg
jg
dec
mov
jne
xor
pop
cmpsl
sub
cmp
pop
lods
inc
xchg
fnstsw
cmp
fwait
mov
test
out
pop
rorl
sahf
test
inc
lock
jb
je
icebp
xor
dec
stos
mov
mov
or
and
popl
out
cmp
xor
mov
inc
and
and
push
cld
es
cmpb
push
lods
fsubr
fnstsw
push
cmc
decl
push
and
mov
les
mov
je
arpl
ljmp
and
bound
arpl
addr16
js
push
cmp
mov
xchg
dec
jecxz
jp
cmp
out
push
mov
and
dec
loope
push
call
int3
insl
adc
sti
lea
mov
shlb
push
dec
and
xlat
outsb
sbb
mov
adc
out
outsl
lahf
fnsave
inc
fwait
outsl
aaa
xor
jns
push
xlat
cmc
test
ja
js
or
stc
mov
js
lods
stos
inc
ljmp
xor
add
or
sub
clc
fwait
mov
in
and
int3
paddusw
push
push
xchg
jge
sbb
adcl
push
lods
sub
push
push
cmpsb
neg
popa
cmp
dec
in
dec
movsb
mov
mov
movsb
cmp
xchg
inc
ret
ret
shrb
xor
and
jae
dec
ja
lcall
shlb
mov
or
push
push
adc
mov
dec
loope
outsl
inc
fsubr
adc
ror
pcmpgtb
push
popa
rorb
andl
out
outsl
daa
out
adc
pop
jmp
mov
xchg
imul
xor
xchg
adc
bound
add
lret
pusha
pop
xor
test
or
xchg
fisttpll
mov
ds
dec
push
in
or
push
lret
pop
add
inc
jb
inc
mov
sub
xchg
xchg
inc
mov
jl
int3
pop
cwtl
std
xor
pop
ficoms
movb
aam
cltd
sub
xchg
lods
mov
or
and
xor
addb
pop
jl
mov
cmp
das
mov
pop
test
dec
movsl
pop
mov
ror
sub
ret
sub
adc
in
push
xchg
xchg
xor
mov
push
fsubl
sbb
and
or
fsts
xchg
test
cmp
sbb
sub
adc
dec
sub
stos
fs
add
pop
mov
dec
xor
mul
popl
repnz
mov
push
out
test
sbb
fnstcw
jb
cli
sbb
lods
loopne
insl
sbb
into
cmpsl
add
cs
jecxz
adcl
dec
in
das
movsl
or
sub
test
sbb
push
and
std
cs
inc
stc
mov
rcl
aaa
push
push
lahf
inc
loop
clc
fmul
dec
loop
lea
insb
pop
dec
pop
xchg
pop
enter
dec
or
xor
leave
sub
in
lods
shlb
bound
out
mov
fcmovu
push
xor
lods
adcl
pop
out
call
xchg
sub
jbe
adc
sub
iret
add
jne
aaa
inc
add
hlt
test
into
and
xor
mov
xchg
std
inc
sbb
test
mov
mov
ja
jg
decb
shlb
xchg
popf
aam
mov
adc
aas
imul
and
xor
aas
daa
or
push
out
ja
inc
xlat
shll
xor
and
sbb
fisttps
repnz
push
bound
cmp
hlt
pop
push
xlat
xor
adc
aaa
in
mov
adc
inc
stc
or
lcall
lock
iret
ja
in
orl
lcall
stc
cwtl
add
lods
inc
test
lret
int3
fdivrp
inc
dec
shr
lcall
stos
les
mov
bound
rcl
clc
jno
mov
push
pop
cmpsb
les
xchg
loope
dec
mov
out
insb
fidivl
push
xlat
mov
popa
imull
mov
movsb
mov
mov
test
cli
mov
testb
popf
mov
shl
inc
out
lret
lret
shrl
push
cltd
das
mov
pop
push
loopne
mov
js
insb
fbstp
add
test
icebp
mov
mov
ret
pop
mov
sbb
out
jae
sub
scas
ret
je
add
sub
push
inc
out
in
iret
inc
sti
dec
icebp
int
sbb
popa
stos
jp
stos
lret
call
cld
cld
jne
cmpsb
stos
stc
aaa
fsub
arpl
sub
add
xchg
jle
rclb
stos
push
loop
outsl
aaa
test
inc
sub
inc
fucompp
out
sbb
aas
mov
mov
fst
sub
stos
hlt
arpl
pushf
adc
inc
nop
and
pop
inc
mov
pop
notl
add
stc
arpl
xorb
imulb
mov
jle
and
leave
lahf
clc
dec
push
sbb
mov
jnp
std
int3
pusha
insb
push
in
dec
int
xlat
cmp
jae
pop
fsubs
or
dec
inc
jmp
push
xchg
xor
adc
ds
mov
test
rclb
lods
xlat
push
dec
incl
iret
call
dec
lret
xlat
jns
add
inc
mov
cmp
nop
cmc
push
pop
pop
repnz
xchg
jp
push
dec
test
cmp
mov
adc
addr16
jb
insl
or
pusha
inc
addr16
sub
fidivl
loope
lea
or
fidivl
ja
cltd
mov
mov
test
lods
std
cmp
nop
mov
call
add
repz
jmp
call
stc
mov
jl
pop
dec
ds
fcompl
aaa
mov
cmpsb
adc
jae
mov
xchg
leave
pop
sub
jbe
xchg
filds
add
add
sub
pushf
loop
div
jbe
dec
sahf
je
add
out
push
lea
push
repz
fdivrs
pop
push
mov
addb
jno
in
sbb
cs
mov
inc
fnstenv
call
dec
mov
push
mov
in
in
inc
mov
xor
and
loopne
xchg
outsb
xor
gs
lret
test
rcrl
shll
jbe
lds
mov
lahf
pop
dec
fisttps
mov
in
adc
sbb
stos
xchg
rol
cmp
mov
cmpsb
mov
cwtl
daa
leave
fstps
call
lret
and
gs
test
mov
xor
ficoml
out
pop
cwtl
pushf
popa
cli
mov
mov
mull
cwtl
xor
cmpsb
nop
out
adc
insl
insb
cmpsl
into
sahf
push
gs
inc
gs
push
out
sbb
sub
fwait
scas
add
repnz
jg
jae
jno
stc
dec
cld
sub
push
cwtl
mov
adc
stos
xchg
out
push
lahf
imulb
mov
jge
imul
test
jle
jb,pt
add
stos
jp
push
jge
xchg
cmp
adc
mov
push
push
adc
adc
stos
mov
cmp
jmp
aam
sbb
sarb
mov
outsb
xor
jo
inc
fmull
sub
addr16
in
xchg
cmpb
cld
jae
orl
cwtl
into
push
adc
les
sbb
cltd
subl
mov
int3
mov
test
cmp
mov
pop
xchg
dec
dec
jl
adc
ret
js
fwait
sti
xchg
rolb
xor
cli
jbe
cmp
adc
rcrb
add
sbb
or
clc
rorl
jno
dec
mov
xor
scas
cld
jmp
mov
fsubs
sbbl
mov
mov
pop
and
imul
test
dec
cmp
jecxz
or
bound
jp
out
mov
ss
jp
jecxz
das
push
jecxz
push
cmc
test
push
hlt
xchg
clc
dec
loope
xorb
push
ljmp
xor
pop
fisubs
iret
sub
fcompl
jns
xchg
push
xor
loop
es
mov
push
outsl
xchg
jns
inc
stos
in
or
fisubl
inc
and
inc
pop
xchg
mov
test
sahf
je
leave
enter
adc
xchg
aam
in
and
nop
pop
test
shufps
push
mov
sbb
sti
or
jl
push
jmp
fldt
nop
mov
out
jno
add
inc
data16
je
repz
pop
dec
pop
enter
rcrb
jae
cmp
sub
and
add
fisubrl
xchg
push
jbe
lds
lods
cmp
cmp
pop
sahf
mov
gs
mov
sub
add
fnstcw
int3
mov
and
mov
dec
jae
push
push
push
jl
sub
faddl
aaa
int3
imul
xchg
jnp
pop
mov
add
lret
pop
rorb
pop
shll
fwait
shl
xor
cmpsl
mov
dec
pop
sub
mov
ljmp
popa
xchg
fs
xchg
xor
xchg
std
cwtl
stos
push
and
imul
jl
pop
cmp
mov
hlt
into
ret
stos
pop
xchg
daa
mov
pushf
pop
mov
or
pusha
dec
add
add
mov
sub
insb
ja
cltd
dec
lea
mov
push
lods
je
push
xor
sub
mov
dec
shr
jge
fnstcw
fcoml
inc
or
dec
xor
pop
out
div
or
sbb
jge
hlt
test
sbb
pusha
cs
mov
inc
cwtl
mov
stc
in
dec
adc
mov
xchg
xor
pop
fs
cmp
lret
push
inc
adc
mov
aaa
or
dec
inc
push
hlt
mov
and
int3
xchg
clc
addr16
adc
push
ds
cwtl
insb
adc
daa
movsb
call
fcmovbe
push
adc
sub
push
cmp
call
lds
lahf
adc
enter
and
cmp
fwait
imull
insb
adc
jae
addr16
jae
dec
movb
mov
lods
jb
shl
sub
pop
push
out
mov
rorb
mov
dec
push
or
mov
imul
xchg
not
xchg
pusha
fnsave
in
dec
and
adc
xchg
push
mov
ret
sbb
rcl
imul
sbb
mov
scas
fidivs
xchg
decb
or
jnp
test
andb
stc
stos
mov
cmp
cmpb
sahf
xchg
bound
adc
dec
mov
icebp
movsl
ret
fadd
push
sahf
imul
sbb
add
or
cmp
xchg
push
clc
ja
cmpsl
stos
add
lret
in
lret
adc
xlat
testb
bound
sahf
or
lret
and
inc
jmp
cmp
gs
bound
mov
sub
pop
mov
nop
inc
cwtl
jne
mov
pop
in
repnz
roll
pop
jmp
mov
cmpsl
ds
ds
je
cmp
push
xchg
mov
cmc
push
call
mov
sbb
push
in
imul
jns
adc
lcall
mov
jg
outsl
pop
mov
dec
adc
or
or
rcl
inc
push
pop
cmp
rorb
adc
mov
jbe
jbe
sub
out
jo
jns
add
incl
mov
cmp
movsb
inc
push
lahf
bound
aaa
push
add
inc
and
mov
ss
repnz
add
xor
and
inc
xlat
cs
ds
jo
dec
mov
xchg
mov
jne
insl
xor
clc
sbb
or
cmp
arpl
xchg
sub
aas
mov
icebp
shr
ror
nop
pop
ds
mov
sub
pop
ds
mov
xchg
add
ret
shll
rcr
push
mov
cmp
sbb
pop
add
xchg
cmp
dec
outsb
call
dec
add
hlt
leave
outsb
xor
leave
push
xorl
adc
lea
fldl
ret
pop
or
cwtl
imull
loopne
ja
clc
adc
push
add
dec
nop
jb
jmp
pop
mov
nop
lret
addr16
lcall
stc
sub
mov
dec
sbb
out
sub
mov
lahf
pop
int
lret
ja
pop
fistpll
inc
and
cld
out
jb
data16
rol
or
and
or
cmp
addr16
insb
mov
dec
jo
cmp
sti
fucom
inc
and
mov
pop
sub
pop
and
mov
push
mov
pop
mov
leave
sub
add
pop
lcall
lea
lock
sti
adc
push
mov
pushw
insl
sbb
cmp
pop
jno
or
jge
jne
jno
pushf
nop
inc
mov
mov
pop
fcomi
sbb
out
je
mov
js
fnstcw
fisubl
scas
inc
xchg
adc
mov
scas
mov
adc
mov
cwtl
sub
idivl
sub
cmp
fisttps
test
aaa
gs
js
lds
gs
sub
push
xchg
cld
jge
pop
inc
mov
push
dec
xchg
repz
stos
movsb
lods
push
adc
jl
mov
push
in
dec
into
leave
cmp
mov
pop
fstps
mov
in
xchg
enter
mov
popf
inc
bound
inc
outsl
adc
add
js
cmpb
mov
dec
lahf
push
mov
ret
daa
cmpsl
push
xor
sub
cs
lahf
in
inc
in
inc
cli
mov
rcrb
loopne
jecxz
mov
outsl
loop
sub
dec
cli
out
inc
sub
insl
sbbb
loope
or
addb
mov
inc
mov
jl
mov
jnp
cmp
jl
sbb
add
pop
fnstsw
mov
inc
and
sub
add
sub
push
shl
or
js,pn
insb
xor
xchg
nop
inc
jbe
cmc
xchg
cmp
in
int3
loopne
lahf
sahf
or
jnp
cmp
data16
add
push
mov
orl
mov
loope
loop
rcl
push
xchg
xor
scas
adc
cmpsb
cmp
add
daa
fnsave
add
scas
test
or
outsb
adc
dec
xor
adc
rorb
hlt
or
fisubs
sub
jbe
test
pushf
pop
cs
aas
mov
repnz
pushl
inc
inc
dec
stos
xchg
adc
dec
cltd
pop
repnz
stc
stos
sub
data16
cwtl
xor
movq
xchg
inc
call
aad
dec
scas
add
xlat
aaa
dec
aad
xor
cmp
sbb
loop
xor
or
pop
enter
inc
inc
in
push
cmpsb
loop
int3
xor
in
jnp
and
mov
mov
fisubrl
insb
sahf
mov
aad
in
or
cli
rorl
arpl
pop
and
in
stos
sbb
dec
stos
insb
inc
mov
cmpl
negl
movsb
stos
jno
and
or
dec
jmp
pushf
out
sbb
lahf
dec
mov
imulb
dec
in
xchg
cmpsb
out
insb
test
roll
xchg
pop
adc
lahf
inc
jg
sub
push
jae
mov
jmp
out
stos
in
inc
mov
mov
and
pop
mov
and
xchg
mov
shl
inc
inc
call
fcomps
out
xchg
mov
and
lret
cld
inc
push
ljmp
jb
adc
scas
mov
jl
test
adc
mov
pop
sbb
push
mov
bound
clc
sarl
cmp
ret
inc
xchg
hlt
xchg
loopne
jmp
andl
sub
jge
mov
shl
xor
cmp
insb
cmp
lods
adc
out
addb
cmp
nop
or
in
cmp
jno
pop
inc
xchg
sub
xor
push
or
lds
addr16
xchg
push
je
test
enter
mov
leave
jae
add
jne
push
sbbl
sbb
dec
lret
or
push
push
stc
xlat
outsb
sub
pusha
and
sbb
add
inc
add
jo
jp
aad
shll
sbb
ja
sbb
insl
pop
es
inc
pop
fwait
clc
iret
fldenv
stos
pop
lods
cmp
mov
hlt
lahf
inc
inc
dec
in
int
cwtl
sahf
mov
lock
jbe
clc
and
daa
test
adc
push
aas
add
popf
push
mov
je
xor
or
xchg
int
push
jbe
push
fldl2t
sahf
push
mov
lahf
adc
sbb
negl
pop
cmpsb
mov
ret
fcomip
xor
sbb
fwait
bnd
or
rorb
jge
or
call
add
out
lret
cmc
pop
adc
les
enter
hlt
cmp
push
jle
cmp
sahf
ljmp
gs
lock
daa
xchg
xor
movsb
ja
mov
ficoml
bswap
popa
loopne
insl
push
lds
repnz
das
test
out
adc
and
out
xor
pop
test
faddl
push
or
out
arpl
in
push
mov
mov
xor
int
dec
and
dec
push
sti
in
dec
fdiv
add
push
scas
aaa
iret
out
jmp
loop
sahf
lds
cli
paddb
xor
outsl
nop
mov
int3
mov
inc
cmp
lea
xor
xchg
aas
pusha
lock
jl
add
fildll
cmp
xchg
jp
stc
lcall
xor
call
test
push
pop
shl
mov
movsl
xor
inc
xor
mov
inc
mov
cmp
in
jae
out
adc
sti
xorl
push
stos
aaa
pop
mov
xchg
mov
daa
mov
popa
test
ds
jnp
jo
rcrl
stos
pusha
arpl
mov
hlt
mov
lods
xor
ficomps
cmp
loop
mov
movsb
ss
aad
inc
loopne
ret
pop
lock
ja
dec
mov
sahf
sbb
repz
scas
inc
test
pop
xlat
out
mov
inc
clc
in
sub
int
or
aas
in
jns
cltd
push
loope
push
sti
mov
outsb
lds
mov
dec
stos
rcrl
mov
orl
mov
pop
dec
in
or
insb
in
or
jae
cmp
out
out
inc
xor
sub
or
xchg
cmp
mov
jg
fucomip
xor
sahf
in
in
adc
gs
sti
push
repz
and
add
sub
xchg
xchg
dec
push
popf
jp
xchg
dec
sub
jmp
ror
aaa
jno
out
or
inc
or
mov
arpl
mov
xor
inc
mov
push
std
int
jno
addr16
lods
cmp
dec
out
test
inc
cmpsl
insl
or
mov
mov
inc
outsb
push
jg
or
in
mov
dec
cmc
mov
jmp
mov
push
adc
mov
push
mov
addl
lsl
mov
ret
aas
call
cmp
jge
aam
sub
imul
lock
mov
aad
sbb
jbe
rolb
inc
fimuls
cmp
test
dec
out
clc
aam
sub
inc
fisubrs
jge
pop
or
or
xchg
adc
sub
cmpsb
mov
lahf
stos
cs
imul
inc
xchg
pop
fiaddl
mov
ja
inc
ret
into
test
decb
fs
test
into
movsb
push
jg
addr16
pop
push
nop
inc
loopne
mov
jg
dec
lea
inc
push
or
les
mov
cs
imul
inc
jmp
stos
inc
mov
lcall
loope
pop
adc
pop
cmpsb
mov
pcmpgtw
add
xchg
push
in
pop
mov
icebp
insb
jmp
addl
or
sbb
scas
push
mov
orl
mov
es
ret
pop
pusha
xchg
stc
nop
imul
mov
cltd
mov
cmpsl
arpl
fnstcw
repz
or
pop
xchg
sub
sub
push
shl
add
xor
pop
jmp
xchg
sub
push
add
inc
cmp
pop
leave
pop
jbe
ret
pop
rclb
ss
loope
add
mov
mov
aam
pushl
stos
dec
jge
loope
bound
aad
push
je
xor
mov
cmpsl
mov
cmpsb
sbb
mov
jl
jge
dec
add
push
sub
or
rclb
mul
and
mov
inc
pushf
mov
out
add
or
pop
or
movsb
inc
push
jp
mov
mov
aaa
dec
mov
test
test
or
mov
das
addr16
test
loope
mov
cmpl
rorl
pop
hlt
xor
outsl
js
jl
sub
imul
dec
push
frstor
mov
or
sub
and
int3
push
shlb
daa
sub
fsubrl
aad
mov
aad
les
std
lods
pop
mov
mov
insl
dec
test
pop
enter
adc
mov
add
arpl
jo
nop
and
cmp
and
sub
xchg
pop
repnz
cmp
ljmp
aam
xor
dec
mov
inc
clc
test
push
pop
jge
add
sbb
test
rcrl
xor
mov
mov
fwait
leave
pop
lds
sub
out
fdivrs
dec
fildl
dec
xor
adc
in
in
jns
push
mov
int
pop
cmc
mov
add
push
pop
inc
pusha
inc
jae
in
cltd
xchg
or
push
cmp
es
aam
push
ljmp
or
pop
je
inc
arpl
lods
xchg
sub
push
scas
inc
loop
data16
pushf
sahf
push
pusha
dec
mov
ret
push
adc
push
add
rcrl
lahf
xor
sbb
push
or
xchg
in
movsb
aad
pop
mov
jle
pop
adc
cmp
and
scas
pop
data16
lods
mov
mov
stos
mov
push
lea
pushf
idivl
pop
sub
push
dec
lods
or
aam
jno
negb
mov
jnp
in
pop
popf
pop
jge
inc
pop
inc
and
mov
push
push
aaa
xchg
int3
mov
call
jg
mov
dec
popf
das
outsl
daa
pop
popf
jecxz
dec
mov
and
divb
add
xor
test
inc
icebp
movsl
inc
mov
mov
test
mov
lods
rcrb
add
sbb
cmpsb
jl
testl
not
sbb
into
outsl
xorb
add
cmpsl
ret
jae
fnstenv
xor
clc
xchg
aam
dec
push
sub
mov
xor
jmp
enter
outsb
add
sti
and
addr16
add
add
cmp
inc
push
mov
inc
scas
std
pop
das
jb
stc
mov
fiaddl
mov
insl
inc
or
cltd
xor
lods
xor
push
scas
mov
loope
add
popa
dec
movsb
dec
jmp
sbb
push
jbe
iret
ret
sbb
in
sarb
shl
popa
jnp
xchg
mov
cltd
into
lods
int
aad
int
adcb
clc
test
jnp
adc
jae
ret
sbb
mov
test
mov
das
stos
dec
aam
out
xchg
test
or
cmp
in
xor
rcr
bswap
repz
repnz
xor
and
call
sbb
jmp
pop
lret
lods
xchg
xchg
cmpsl
dec
sbb
dec
imul
sbb
cwtl
adc
mov
test
test
fsubrs
sub
jp
loop
add
testb
mov
xchg
aas
push
ljmp
pushf
out
xchg
insb
mov
and
aad
or
push
cmp
pop
inc
inc
cmpsb
jecxz
xlat
push
add
xlat
dec
jp
jnp
lds
out
je
sbb
jnp
ja,pt
or
dec
fisttps
sahf
and
std
lods
xchg
push
or
sub
pop
jns
add
movsl
dec
pop
and
xchg
add
int
aam
jo
add
jg
icebp
mov
sbb
pop
sbb
mov
inc
inc
mov
loop
sub
out
pop
xchg
xchg
dec
and
jne
stos
lret
xlat
pop
std
lret
sbb
movsl
loope
push
ds
xlat
adc
in
pop
mov
dec
add
push
or
enter
ljmp
mov
add
fwait
sbb
jmp
xchg
ret
mov
push
xor
sub
adc
flds
sti
nop
pop
mov
dec
inc
sub
cmpsb
call
cmp
inc
mov
sub
inc
xor
or
lds
ret
pop
sbb
ret
mov
scas
sbb
xchg
jb
lcall
daa
iret
dec
mov
dec
mov
sti
pop
or
cmp
test
outsb
jl
adc
popa
push
mov
jmp
outsl
jmp
rcrl
inc
fisttpl
scas
insl
test
orl
aaa
je
icebp
popa
pop
enter
cs
lret
dec
ds
in
idivb
mov
sbb
push
out
xorl
jbe
sub
dec
aad
fs
pop
pop
pop
lock
lods
dec
push
add
mov
dec
js
push
lods
ret
int
and
inc
inc
jle
mov
or
ljmp
pop
call
sbb
movsl
imul
jae
mov
ds
pop
ja
idivb
cwtl
iret
data16
adc
push
jmp
sbb
xchg
out
push
pop
mov
pop
jge
add
inc
jnp
cmp
fdivl
or
lcall
shll
inc
xchg
mov
lcall
sbb
pop
push
xchg
mov
dec
in
fsubl
sub
hlt
jge
inc
or
js
stos
mov
mov
mov
in
mov
and
xchg
in
sti
es
out
push
shrl
test
add
rolb
push
scas
call
xchg
test
je
cltd
mov
inc
sub
lea
aaa
into
cmp
popa
out
lret
fdivs
stos
pushf
call
mov
cmp
cli
lock
fsubrl
sarb
dec
aaa
fistps
jmp
sbbl
arpl
bound
sub
fildl
jle
inc
and
cmpsb
push
inc
mov
outsl
push
sub
xchg
xchg
sbb
cmovne
frstor
lret
nop
pop
pop
pop
push
repz
xchg
xchg
mov
jns
jno
ret
incb
stc
nop
cmp
push
cmpsb
jno
movsb
jg
xchg
sub
ja
fisubs
mov
negl
mov
lcall
loope
lret
push
jmp
jg
sub
mov
dec
cmp
mov
lock
mov
add
mov
mov
jl
cwtl
mov
pop
scas
lods
lods
movsl
inc
test
int
mov
lods
lods
xlat
pushf
loopne
into
icebp
add
xchg
into
sub
sbb
lcall
shlb
outsl
out
cs
inc
idivb
out
jmp
loopne
mov
lds
jbe
clc
mov
mov
fists
cli
pop
xchg
adc
andb
in
push
cs
xchg
add
dec
fsubr
test
inc
cmpsb
sub
pop
or
add
jae
outsl
jge
sbb
pop
in
clc
dec
jnp
jb
add
sahf
ja
push
pop
jmp
mov
adc
loopne
mov
and
sub
jmp
popf
cmpsl
jg
nop
sub
xchg
mov
jnp
mov
or
loopne
xchg
mov
xchg
cli
call
and
or
ds
cmp
test
lods
mov
inc
fnstcw
dec
in
mov
insb
in
mov
ret
imul
or
push
ljmp
out
fnstsw
addr16
cwtl
pop
and
and
pop
xor
mov
dec
adc
pop
push
out
dec
dec
popf
mov
cmp
sub
mov
int
inc
mov
inc
mov
push
dec
add
cmp
pushl
leave
out
xchg
add
jb
insl
out
lds
cmc
jle
imull
adc
push
inc
push
push
sbb
arpl
ljmp
call
test
andl
pop
das
aaa
stos
movsb
clc
fists
xchg
insl
add
cmpsl
sbbl
mov
sbb
push
fcomps
clc
dec
imul
xchg
dec
gs
fdivrp
xchg
adc
test
gs
xor
mov
mov
aad
ss
xor
mov
lock
call
push
in
fsubs
or
lods
pop
test
idivl
lods
insl
into
cltd
repz
sbb
pop
iret
push
jle
stos
mov
fs
jno
test
jmp
jmp
or
rcl
jo
cmp
pop
dec
cmp
jo
push
xor
stc
nop
popf
dec
inc
es
mov
push
mov
mov
xchg
jne
push
xor
pop
negb
fs
add
xchg
jecxz
xor
or
xchg
fldl
cmpsl
mov
mov
stos
sub
mov
add
xor
or
adc
add
xor
or
dec
add
mov
xchg
sub
movsl
lds
inc
fmuls
pop
ret
leave
mov
inc
dec
inc
stos
icebp
ss
cli
sarl
dec
push
sub
inc
jbe
xchg
pop
xor
jmp
inc
mov
pop
popa
daa
sub
jno
lock
es
out
fldpi
sbb
ficompl
cld
aas
sti
lret
data16
mov
add
push
ss
push
jle
dec
outsb
mov
xchg
imul
insl
push
lea
test
mov
mov
mov
push
jmp
jge
jo
fistpll
jp
add
cmp
adc
inc
lret
dec
ret
jmp
pop
mov
mov
xchg
shl
lahf
dec
cmp
or
mov
fs
add
fisubl
pop
and
xchg
pop
rclb
sub
inc
test
push
stc
pop
popa
sti
mov
flds
xor
andb
sahf
add
fs
cwtl
stos
lods
xchg
jo
int
int3
bound
mov
outsl
mov
imul
xchg
jnp
adc
nop
out
ljmp
lods
iret
clc
or
std
test
cs
sbb
mov
mov
in
rclb
mov
lcall
data16
mov
or
scas
xchg
jecxz
stos
xor
xor
push
pop
cs
ret
punpcklwd
in
ja
and
inc
pop
push
dec
push
push
jp
sub
sti
cmpsb
xor
mov
clc
cmpsl
pop
push
cmp
mov
sub
leave
cltd
mov
mov
mov
nop
icebp
outsl
push
ret
aad
jp
out
dec
pop
in
stos
daa
shrb
das
jp
ds
fisubrs
call
mov
mov
cmpl
fucomi
mov
push
movsl
std
mov
sub
xchg
add
icebp
or
ss
imul
icebp
scas
js
arpl
scas
outsb
xchg
sub
dec
pop
push
stos
lds
pop
lret
decl
retw
pcmpgtb
int
dec
pop
xchg
iret
inc
dec
lret
inc
rcrb
out
mov
add
pop
aas
or
pop
mov
cs
aas
shlb
scas
push
imul
imul
iret
lret
and
cmpsl
push
fwait
sub
push
xor
xchg
mov
fimull
rol
negb
cmp
xchg
dec
add
lret
das
sub
addr16
imul
lahf
nop
lret
lea
stc
nop
fbstp
mov
or
inc
pop
xor
or
sbb
cli
mov
fsubs
lods
or
mov
pop
xchg
xor
xor
pavgw
cmp
lahf
loop
add
cmpb
and
out
xchg
pop
aaa
into
pop
add
or
fwait
pop
mov
mov
xor
xchg
jge
mov
lret
icebp
pushw
dec
hlt
mov
xor
leave
xor
push
sub
xlat
xchg
xchg
adc
pop
cmp
fs
test
sahf
pop
rol
dec
popa
lock
cs
loopne
call
test
stc
ret
push
das
addr16
xlat
xchg
pop
mov
fnstcw
ss
sbb
fidivs
dec
leave
test
pop
lcall
lcall
dec
or
hlt
ds
sub
mov
mov
or
dec
jecxz
rcrl
or
lods
xchg
sbb
jbe
mov
lea
rolb
ss
out
les
shr
xor
xor
int
pop
sahf
fs
and
mov
loopne
cmp
inc
push
test
insb
push
imul
jo
mov
xchg
out
into
decb
mov
fstps
jae
icebp
mov
lock
test
jge
and
pop
nop
sub
jmp
ret
pop
out
jecxz
jae
mov
sbb
and
cmpsl
into
pop
adc
fs
mov
push
sub
nop
enter
push
xor
mov
sbb
lret
loop
sbbl
xor
and
mov
in
lret
mov
cmp
push
out
gs
pushf
fistpl
test
sbb
cmpsl
sti
fidivl
fs
jb
or
stc
dec
arpl
out
jecxz
and
scas
push
xchg
mov
or
add
and
pop
fcoms
scas
sbbb
test
adc
mov
stos
mov
fwait
jmp
jns
mov
adc
ja
ja
mulb
cmp
cmpsl
inc
adc
test
scas
push
sti
sbb
mov
stc
sub
xor
push
or
in
rcrl
cmp
jmp
cmp
aas
dec
adc
xchg
sbb
jo
das
and
xchg
xchg
pop
hlt
jmp
push
in
push
imul
popf
jne
lret
ds
push
test
push
shll
nop
aas
repz
xchg
cmpsb
mov
je
mov
scas
sub
inc
and
int3
fstps
mov
sbb
cli
cmp
push
arpl
mov
fs
add
out
inc
sbb
pop
mov
sub
inc
out
xor
aaa
lahf
mov
cmp
mov
mov
ds
mov
xlat
mov
fcompl
sub
rorb
dec
cmp
mov
or
mov
and
loopne
cmc
mov
ljmp
mov
mov
and
cmp
sbb
pop
sahf
adc
jecxz
inc
and
jno
lock
mov
jmp
xor
xchg
mov
jl
jb
xchg
jns
push
push
inc
inc
repz
aam
dec
pop
aaa
scas
ret
das
nop
in
shl
ret
scas
dec
in
inc
hlt
cwtl
loopne
pop
mov
mov
mov
or
jecxz
mov
dec
call
mov
or
roll
inc
mov
mov
clc
mov
add
pushf
xor
jg
mov
push
lcall
mov
ret
mov
aaa
pop
add
popa
add
test
aam
dec
pop
insl
pop
popf
fs
cmp
dec
and
mov
js
mov
shrl
xchg
sbb
mov
xchg
mov
repz
pop
icebp
cmp
ljmp
and
iret
out
aaa
jbe
ljmp
push
jge,pn
jb
mov
fisttpll
mov
in
movsl
fs
int3
out
cmpsl
mov
inc
jp
mov
push
cltd
stos
dec
in
cltd
pusha
sub
mov
sub
imul
sbb
aas
mov
sbb
stc
pusha
mov
xchg
fisubrs
lds
dec
pushf
xor
std
ja
movsl
sub
clc
aam
inc
sub
pop
adc
cmpl
add
outsl
mov
xchg
xor
insl
pop
jecxz
mov
in
mov
repz
jbe
sub
test
ret
inc
loope
sub
addl
shlb
lea
cmp
sbb
enter
ret
jo
add
loope
inc
subb
push
pushf
xchg
stos
pushl
xor
fsubs
test
and
orl
faddl
add
ljmp
insl
add
push
stc
aas
push
out
data16
cmpsb
leave
pusha
push
les
add
out
rorb
inc
repz
dec
lods
xor
insl
jo
stos
sbb
mov
jmp
cmpl
add
inc
push
jno
or
mov
je
rclb
lea
mov
push
adc
mov
push
lods
pop
in
daa
fnsave
mov
adc
jmp
lods
inc
pop
jmp
jo
sub
aaa
cmp
stc
and
xchg
or
movb
dec
adc
jne
arpl
shrb
lret
loop
dec
repnz
add
in
jl
inc
dec
and
aas
pop
in
xor
and
mov
mov
cli
test
cs
sub
fistpll
add
leave
int3
add
cmc
jo
fbld
adc
xchg
sbb
mov
dec
mov
in
repnz
cltd
pop
sbb
add
inc
cltd
adc
addb
xor
push
add
sub
les
xor
cld
test
bnd
je
pop
aam
lea
ds
in
push
call
or
dec
pop
fadd
fidivs
jle
mov
arpl
xchg
xor
add
push
xor
test
outsl
testb
or
repz
cli
mov
adc
adc
xchg
mov
mov
push
jae
and
xor
xchg
insl
xchg
insl
lret
mov
mov
and
fistl
lods
mov
je
push
scas
xor
icebp
mov
push
jo
inc
xorb
xchg
ljmp
shrl
mov
data16
test
test
int3
insb
xchg
pop
in
jle
cmp
inc
mov
push
sub
lcall
jnp
xchg
cmp
lods
mov
mov
cld
cmp
test
mov
or
mov
xchg
inc
test
icebp
in
pushl
adc
adc
in
cmp
stos
xor
cli
test
dec
lahf
ds
sti
mov
fs
inc
fnstsw
outsb
loope
adc
mov
xorb
in
add
pop
sub
rcrb
aad
mov
pop
sbb
repz
cmp
sahf
mov
pop
xchg
daa
and
shrl
sbb
mov
and
clc
inc
jae
hlt
stc
mov
aam
aas
arpl
push
aad
cmp
xor
inc
out
xchg
xchg
stos
inc
lea
or
jmp
call
leave
sahf
inc
dec
test
jg
and
nop
mov
movsb
ror
pop
cmp
leave
jmp
push
pop
iret
bound
orb
popl
cwtl
add
std
mov
jg
and
jbe
or
lcall
repnz
ret
sbb
out
pop
mov
adc
mov
add
xor
push
test
xchg
inc
enter
divb
ret
cmp
out
push
out
inc
leave
xor
jne
int3
dec
mov
fisttps
cmp
mov
pop
ret
add
in
adc
pop
rcl
outsb
inc
push
cmc
ja
and
xchg
xchg
ds
call
jno
lock
xchg
outsl
iret
xchg
xchg
icebp
rcl
lret
popa
popa
lcall
add
mov
shr
out
cmp
movsb
gs
popf
lds
mov
data16
and
mov
lret
fnstsw
push
scas
int
lret
inc
dec
cmp
adc
mov
add
repnz
xor
fsubrl
push
icebp
sti
out
fucom
stc
fwait
push
push
mov
pop
jmp
iret
xor
jmp
sahf
std
fs
sahf
in
fnsave
mov
cmp
mov
dec
in
cmpl
stos
jge
lea
dec
test
sahf
add
shl
shll
jne
push
cmpsl
fidivrs
inc
outsl
popf
xor
popa
xchg
xchg
push
push
sbb
inc
cli
loope
mov
dec
lods
dec
mov
jne
test
xchg
add
jo
fwait
dec
loopne
fidivrl
push
xor
fnsave
pop
cli
lock
in
ja
push
into
inc
jmp
cmc
es
jno
cwtl
xchg
mov
lods
outsb
aas
lret
fwait
xsha1
cmpsb
dec
movsl
loope
daa
push
mov
shll
pop
out
mov
and
pop
mov
xchg
pop
jne
add
and
aam
aas
loop
push
sub
inc
sbb
inc
notb
inc
or
and
jmp
cmp
cltd
xor
xlat
icebp
outsl
icebp
mov
push
insl
inc
fistpl
xor
out
arpl
in
lods
mov
repnz
fisubs
inc
in
sub
pop
sub
mov
mov
push
das
fld
sbb
add
cmp
mov
mov
or
cltd
lods
out
shrl
jecxz
ret
out
xchg
pop
repz
add
lds
jp
cmp
lods
das
movsl
sbb
shlb
or
or
mov
mov
jl
daa
cmp
popf
lods
mov
or
pop
inc
adc
lods
mov
and
xchg
push
xchg
scas
dec
js
mov
addl
arpl
scas
ds
jo
dec
loopne
jne
clc
push
sbb
or
mov
xor
sub
ljmp
xchg
test
repz
jmp
les
ret
ret
movsl
cmp
sbb
test
mov
or
adc
pop
xor
cli
js
sarb
out
jecxz
les
xor
cmp
inc
scas
sbb
rorb
arpl
int
mov
pusha
jno
xlat
sarl
xlat
add
ds
mov
jge
js
mov
repnz
lock
cmp
popa
outsb
and
adc
inc
or
aam
call
push
movsl
add
sbbb
and
mov
dec
insb
mov
loope
imul
rolb
pop
sub
fsubrs
or
sub
adcl
cmp
out
shll
xor
out
mov
inc
fsubl
neg
mov
mov
rcll
sbb
push
hlt
adc
les
inc
sbb
sbbl
cmp
lcall
rcrb
mov
fisubs
and
and
jmp
adc
xorl
stos
ds
or
lret
or
mov
inc
mov
mov
cmp
shlb
pop
push
fisubs
lea
ds
jnp
add
xchg
popa
and
mov
fcmovnbe
and
or
push
test
movsb
shlb
jnp
imul
in
fcmovnbe
mov
mov
repnz
add
xor
xchg
jmp
jmp
jb
test
fwait
lret
scas
inc
std
pushf
aas
sti
iret
int3
scas
sub
mov
ja
lds
jp
add
xchg
add
mov
cld
lcall
stc
mov
movsb
fstpt
repnz
adc
shr
xchg
test
push
xor
mov
mov
ficoml
or
xchg
in
cli
push
dec
sub
test
pop
into
loope
and
adc
xchg
popa
aas
add
std
cwtl
je
xchg
js
outsl
pcmpgtd
mov
imul
sbb
mov
icebp
mov
dec
and
and
or
insl
inc
imul
fmul
leave
pusha
pusha
fsts
cli
dec
add
inc
push
movsb
add
fmull
scas
pop
pop
sub
leave
inc
stos
push
fdivrp
ja
test
cwtl
cmpsl
jmp
mov
or
mov
stos
xchg
int3
xchg
mov
sbb
push
repnz
test
fildll
sub
loopne
inc
fldl
outsl
fisubrs
jle
repz
cmpxchg
sahf
icebp
shll
xchg
loop
fnstenv
mov
loope
and
cwtl
div
dec
lahf
jbe
jl
xchg
lods
arpl
dec
push
addr16
push
aam
pop
push
inc
jnp
leave
out
push
cmp
cmp
icebp
pusha
out
dec
repz
cmp
das
inc
pop
cmpl
adc
arpl
mov
jns
sbb
ds
jnp
icebp
adc
pop
sahf
scas
xchg
lock
out
xchg
das
or
xlat
ja
movsb
push
inc
decl
push
mov
mov
and
sti
rcrl
cli
sbb
cld
cmpsb
shl
stos
cwtl
mov
xor
cmp
adc
icebp
mov
xor
movsb
push
out
xchg
int
or
and
stos
push
adc
lcall
xchg
outsb
push
cmp
push
int
fmuls
popa
adc
mov
xchg
in
sub
xchg
and
iret
mov
popa
and
pop
sub
fprem
dec
gs
fcoml
rcll
cmp
mov
sbb
andb
jo
xor
sbb
mov
sarl
mov
push
push
push
xchg
out
pop
fistps
xchg
pop
mov
out
jnp
xchg
xchg
mov
adc
popl
jmp
add
mov
pop
in
or
and
leave
clc
dec
xchg
mov
jecxz
sbbb
xchg
repz
in
mov
jb
test
push
add
or
out
movlps
jo
mulb
inc
jge
loope
cmp
mov
sub
ljmp
xchg
in
addr16
sub
movsl
js,pt
pop
pop
ss
repz
sub
sbb
enter
mov
ljmp
fld
sub
mulb
mov
stos
mov
ss
and
shrl
adc
jle
cli
mov
jmp
xlat
cmp
mov
pusha
mov
lods
ret
or
popf
sub
in
call
call
fsubrl
bound
sar
mov
jp
icebp
lods
pop
push
cltd
addl
mov
popf
lods
aam
xchg
pop
xor
ret
or
sub
xor
jle
scas
mov
mov
pusha
sbb
stc
insl
sub
sahf
push
adc
jnp
dec
out
pushf
dec
movsb
movsl
add
adc
cmp
mov
mov
dec
movl
lds
adc
arpl
sbb
push
popf
cmp
and
sahf
clc
sub
idivl
orl
pop
cmp
mov
or
enter
loop
mov
xchg
ss
iret
xor
nop
aas
add
out
adcb
sub
xor
loope
sbb
pop
adc
jle
mov
jb
out
sbb
daa
stos
in
xchg
andl
push
cltd
stos
inc
or
out
jge
inc
sub
add
xchg
ret
cmp
js
insb
mov
pop
cmpsl
cmc
inc
cli
fimull
icebp
movb
xor
adc
in
aad
std
sbbl
cmc
fdivs
andb
mov
test
inc
icebp
adc
in
cmp
cwtl
sub
mov
jmp
ds
add
orl
adc
add
lock
push
iret
mov
mov
push
rcll
jecxz
sub
add
xor
in
xchg
ficomps
lret
lret
add
push
cmp
mov
frstor
mov
aam
dec
rorl
pop
repnz
dec
jns
add
pushl
movsb
xor
add
inc
test
adc
stos
or
popf
xor
inc
push
jmp
push
out
jmp
xor
or
out
stc
xchg
ja
push
xchg
xlat
inc
imul
repnz
cld
or
sbb
nop
adcb
sbb
rcrl
ja
movsb
xchg
imul
ljmp
inc
fimuls
mov
out
jns
popa
mov
ds
jg
pop
aas
mov
sbb
xchg
andl
sub
shll
add
into
mov
mov
addl
aam
mov
push
imul
js
enter
sbb
dec
or
pop
lds
pop
jb
fdivp
out
or
cmpl
jp
pop
lods
stos
jae
pusha
inc
out
lock
shll
fnstenv
leave
push
fstl
dec
push
outsl
inc
cwtl
bound
xor
add
or
and
fstpl
dec
adc
sti
xchg
cmp
cmpb
sbb
ficoml
and
jo
lods
sub
cltd
mov
lcall
and
outsb
jle
mov
rcrl
xchg
push
outsb
sbb
ds
mov
pop
mov
xchg
leave
fldt
scas
push
xchg
addb
jae
xor
je
test
dec
call
stc
nop
ljmp
dec
dec
inc
mov
and
shll
jecxz
jl
jne
inc
xor
mov
push
fptan
mov
scas
in
pop
sbb
adc
cltd
xchg
xchg
out
adcb
or
dec
scas
js
or
in
add
sub
dec
and
xor
mov
pop
btc
aad
pop
or
push
in
mov
cli
hlt
shlb
pushf
scas
and
mov
jae
and
scas
push
sub
jnp
sahf
jno
hlt
shrb
in
in
fists
jae
mov
scas
mov
cld
lea
or
pop
sbb
push
cmpsl
lock
and
push
xchg
hlt
cld
or
in
sub
and
mov
sar
popa
and
mov
lods
rcll
sub
xor
mov
in
push
pop
adc
icebp
adc
push
pop
pusha
or
je
pop
jle
sti
out
add
mov
mov
dec
jecxz
adcb
adc
jle
out
enter
dec
aad
jge
int
dec
js
repz
jo
ds
sub
add
mov
arpl
mov
sbb
arpl
bound
movsb
ja
jp
int3
and
fisubrl
dec
xchg
mov
sbb
in
cli
icebp
das
cmp
sbb
cld
xchg
pop
xor
popf
xor
in
sub
aas
jle
rol
add
cmpsl
mov
adc
cmp
movsl
mov
push
pop
push
adc
add
out
pop
negb
jo
sub
jl
push
movsl
addr16
cwtl
adc
xchg
dec
sub
xorb
in
push
cmovs
lods
leave
je
aaa
inc
cmpsb
cmp
pop
adc
ret
fisubrs
adc
or
pop
repnz
inc
lret
lret
popa
aad
fbld
adc
and
es
in
enter
cmpsl
lret
mov
sub
stc
rclb
mov
loopne
cmp
jecxz
daa
jbe
in
insl
sahf
xor
adc
mov
adc
adc
mov
lahf
je
inc
inc
sti
nop
fstpt
xchg
mov
pop
inc
add
insl
jg
dec
cmp
add
sbb
xchg
pop
mov
inc
jne
xchg
repnz
or
jg
outsl
push
pop
adc
or
cltd
jbe
jle
mov
jo
lcall
loope
adc
iret
push
iret
sbb
test
add
pop
and
push
sbb
mov
sarb
data16
mov
cmpsb
and
aas
aaa
ret
adc
sbb
push
das
add
xlat
sub
push
xchg
fwait
push
test
daa
cmpsb
out
sti
and
aam
lret
xchg
cs
mov
pop
in
cli
jne
mov
pop
mov
mov
cltd
and
mov
dec
mov
pop
pxor
and
shll
push
inc
bound
in
cmpl
in
adc
jne
mov
fidivl
push
test
fwait
sbb
cmp
mov
sbb
inc
loop
cmp
cmp
mov
mov
cmp
insl
icebp
sub
xchg
bound
sbb
hlt
mov
inc
fadds
jg
jno
adcb
clc
dec
testb
dec
mov
dec
in
mov
xchg
fadds
or
mov
sahf
ret
shll
or
dec
decl
and
xor
jnp
arpl
xchg
mov
cmp
aad
insb
pop
add
orb
loop
xor
imul
loope
loope
js
pop
out
out
jo
lret
rcll
aad
call
sbb
ret
mov
js
into
cltd
add
jb
js
fisttps
sbb
out
xor
aam
jne
mov
cmp
adcl
dec
sub
xchg
xchg
fiadds
adc
mov
and
xor
imul
jle
and
inc
pop
sub
out
add
push
sbb
xchg
and
repnz
scas
or
inc
shll
repnz
in
mov
push
in
mov
lret
sbb
xor
std
cmc
ja
pop
popf
xor
inc
sbb
mov
pop
repz
aaa
mov
fmuls
stos
fldenv
test
out
sub
push
lahf
dec
push
in
inc
lods
mov
lods
outsb
sub
sbbb
nop
les
shufps
xchg
cmc
pop
fbld
add
movsl
mov
test
je
pop
insl
sti
xchg
dec
shll
xchg
stc
xor
jb
xor
mov
push
and
cmp
popf
xchg
fwait
lea
sbb
cmpsl
mov
in
mov
iret
test
in
nop
dec
jge
lods
fidivrs
jg
adc
inc
inc
inc
pop
fistl
mov
mov
pop
call
out
cmp
lds
sbb
jae
jecxz
mov
icebp
mov
dec
out
pushf
xor
aam
lahf
xchg
ss
and
mov
pop
jg
scas
mov
push
xlat
mov
sarb
lahf
mov
test
jae
pop
xor
cmp
fildl
and
jmp
xchg
aas
push
fisubrl
sbb
shll
dec
jg
fidivs
mov
mov
fdivp
lea
popa
fbld
jge
xor
es
aam
aas
mov
lds
or
cmc
inc
call
mov
repz
push
nop
xchg
jge
lret
bound
loopne
mov
mov
fstpt
mov
mov
icebp
js
xor
lcall
push
adc
pop
pop
jg
xchg
sub
and
pop
and
rcll
rcrl
loop
int3
pop
icebp
bnd
cmp
cmpsb
test
or
mov
cs
stc
mov
lods
lds
jmp
mov
pushf
dec
mov
pop
xor
inc
bound
rcrl
add
jle
cltd
test
sbb
stos
adc
or
cmpsb
fwait
lahf
cli
enter
in
mov
or
mov
pop
sub
sbb
lods
stos
cmp
insb
jae
jge
push
bound
pop
repnz
pop
hlt
and
and
and
inc
mov
push
sub
sub
test
loope
mov
or
add
js
push
push
mov
fnstsw
pop
addr16
data16
fistpll
in
aaa
jnp
nop
pop
xorb
mov
addr16
fcompl
cmpb
add
iret
call
pop
and
dec
mov
insb
xchg
add
dec
mov
hlt
mov
cltd
out
iret
test
mov
lea
imul
adc
sbb
test
cmp
push
add
in
or
insb
js
pop
pop
rcrb
add
lods
xchg
jne
sahf
xchg
ds
pop
mov
popa
jmp
mov
cmp
jbe
pop
mov
xchg
stos
clc
fisubl
or
dec
data16
adc
outsb
fwait
cwtl
xor
and
and
sbb
mov
jecxz
mov
into
icebp
cmpsl
inc
popf
test
movl
nop
sbb
push
pop
xchg
call
fbld
mov
mov
push
mov
mov
xor
push
subb
orl
cmc
mov
jp
mov
rolb
xor
into
push
mov
shlb
mov
xchg
mov
add
jp
scas
add
test
mov
dec
cmpsl
xchg
mov
push
push
dec
dec
mov
pop
ret
add
mov
shl
xchg
ljmp
popf
loope
cmp
mov
fidivrs
xchg
cmp
mov
and
scas
inc
sti
adc
out
push
push
jbe
dec
sti
pop
inc
addl
lock
push
sub
xor
mov
rcll
cmp
push
popa
fcomps
cwtl
stos
jmp
push
mov
push
jp
mov
ljmp
pop
cmp
clc
inc
cmp
or
push
push
adc
hlt
mov
adc
rorb
scas
and
mov
pop
subb
int
mov
and
in
adc
pusha
xlat
or
add
sub
mov
pop
inc
ficoml
shlb
xchg
imul
sub
dec
mov
notb
test
std
fsubrs
mov
adc
push
jle
jl
mov
sbb
mov
sub
out
xor
adc
mov
sbb
push
lcall
sub
test
das
mov
fwait
push
or
cmp
movsb
std
xchg
jnp
push
lods
pop
mov
dec
inc
fidivl
stos
sahf
adc
roll
mov
fsts
outsb
adc
pop
cmpsb
popf
icebp
into
cmp
inc
mov
fadd
inc
push
pop
shl
ja
fisubl
imul
xchg
cmp
call
mov
push
data16
pop
dec
in
inc
sub
add
outsl
push
sub
xchg
jmp
add
sbb
cli
cmp
lea
push
sub
pop
in
cmpb
mov
mov
push
faddl
inc
and
sub
or
inc
sti
nop
movsb
and
sbb
inc
jle
aaa
ret
fdecstp
jecxz
xchg
adc
ss
cmp
dec
lds
jl
mov
popa
jmp
fwait
cmpsl
cld
popf
test
cmpsl
loop
push
mov
cmp
cs
loopne
mov
xchg
out
and
jae
cmp
das
push
rclb
lock
mov
fwait
shr
inc
push
inc
popf
out
fistpll
xchg
adc
ds
adc
loope
ss
pop
rcl
xor
cltd
xor
adc
loope
clc
xor
sbb
push
xchg
stos
mov
sbb
test
pop
sahf
sbb
pop
test
xchg
test
leave
fildl
std
inc
daa
sub
pushf
cmp
test
and
mov
aaa
or
and
inc
and
pop
cmpsb
addb
jl
fs
fcomip
enter
into
jmp
mov
mov
pushf
and
jb
sub
leave
add
ds
jbe
aam
xor
sbb
ljmp
push
fwait
pop
sbb
in
lock
mov
and
xlat
aad
push
rorl
lcall
mov
or
xor
cmpsl
jns
pop
xchg
xor
sbb
shlb
add
dec
dec
mov
cmp
and
ret
sahf
push
in
pop
or
je
repz
and
cwtl
pop
jno
pusha
popa
xchg
arpl
vmovntdq
dec
ficoms
or
mov
imul
sub
outsb
test
bswap
ret
mov
pop
ret
cmp
xchg
xchg
dec
mov
push
and
repnz
test
clc
sahf
iret
shll
sahf
mov
mov
sbb
jno
stc
cmp
sub
jl
inc
loope
mov
popa
lods
push
mul
pushw
dec
add
and
ds
sub
push
lods
inc
repnz
int3
cmp
or
hlt
cmp
pop
in
sub
test
stc
cmc
pop
pop
dec
js
mov
repz
inc
jge
dec
mov
roll
pminsw
jp
jne
fdivs
and
insb
cli
sbb
xor
insl
lcall
adc
mov
cmpsb
push
sahf
repnz
push
loopne
xchg
lcall
je
xor
cmp
inc
jecxz
xor
repnz
rcrb
adc
adc
scas
out
pop
ja
lods
add
lea
ret
loop
ds
fbstp
mov
mov
movsl
sbbb
ljmp
inc
cmpb
sub
cmc
lods
jno
addr16
jl
orb
mov
ljmp
dec
mov
scas
cs
pop
add
fidivs
les
or
mov
ficomps
adc
mov
scas
mov
loopne
aas
mov
idivb
adc
dec
xor
jl
mov
pushf
sub
stos
xchg
mov
sbb
sub
mov
dec
or
push
into
push
push
mov
or
pop
add
or
flds
loop
fmul
push
cmpsl
jae
lret
dec
or
add
pop
mov
ljmp
xchg
out
jo
push
dec
pop
cmp
enter
sub
gs
fucomip
and
and
adc
dec
xchg
lock
iret
daa
cmp
xchg
dec
rcrl
je
inc
and
dec
dec
rcrl
add
aam
lret
mov
push
push
mov
push
addb
jno
inc
pop
insb
test
fsubl
sbb
mov
je
cli
fnsave
sub
ds
mov
mov
and
mov
or
push
cli
iret
jecxz
enter
dec
scas
fprem1
mov
dec
xchg
add
pop
or
dec
pushf
dec
dec
data16
fs
pushf
scas
mov
loopne
sub
xchg
sbb
dec
fistps
inc
dec
push
out
add
push
jmp
or
jl
xchg
sbb
jb
cmp
jg
mov
sti
cmp
outsl
sub
in
hlt
icebp
scas
sub
les
movsb
shll
dec
daa
inc
jne
jae
shr
scas
push
sbb
cmc
mov
cmpsl
fcoml
or
outsb
loope
or
cmp
in
imul
adc
incb
mov
pop
add
inc
xchg
xor
insl
loop
cmp
xchg
adc
aam
hlt
fistps
dec
out
cmp
xchg
adc
in
clc
adc
push
cmp
push
cmpsb
pop
dec
fdivs
and
xchg
je
adc
imul
fmull
sub
add
test
in
pop
cmpsb
push
nop
push
aaa
pop
adc
inc
mov
xchg
and
negl
mov
mov
mov
mov
adc
xchg
scas
mov
outsl
jge
mov
push
loopne
mov
pop
and
mov
rcll
inc
inc
lds
ja
out
fs
push
and
fmulp
cmovp
mov
mov
push
mov
cltd
test
xchg
les
pop
or
sub
lahf
xor
push
jns
movsl
mov
jmp
ret
ret
pop
jo
dec
outsl
shlb
xchg
mov
lcall
icebp
xor
mov
fimull
fiadds
dec
je
cmc
sub
dec
shrb
dec
and
sahf
sub
cmpl
cli
jg
and
add
and
and
inc
pop
push
div
pop
jmp
and
lods
fdivr
fxch
xlat
decl
add
cmovl
imul
xor
add
or
imul
push
or
dec
add
sub
dec
and
js
lret
cmp
inc
fsubrl
add
mov
jmp
out
dec
mov
xchg
add
mov
clc
xchg
sti
sarb
or
jp
je
mov
cmp
aad
push
add
xchg
add
testb
leave
jge
stc
nop
fcompl
cmpl
pop
stos
inc
inc
stos
cmp
mov
rolb
shrl
fcomps
mov
in
mov
aam
fistpll
rcll
adc
jae
in
xchg
mov
mov
mov
les
or
adc
inc
sub
and
push
dec
stos
inc
shl
lock
mov
and
outsl
outsb
mov
xchg
cmp
adcl
sub
and
inc
fildl
scas
jb
in
clc
adc
xchg
sbb
and
push
mov
and
popa
lods
in
jmp
out
je
pop
loope
cmpsl
pop
jmp
push
mov
jecxz
add
clc
jnp
inc
push
sbb
popf
lret
cs
ss
sub
cwtl
sarl
mov
lret
enter
jne
adc
xchg
push
jmp
out
sbb
fmul
xchg
sbb
loop
xchg
sahf
xor
repz
mov
insb
test
mov
pop
xor
cltd
sarl
imull
int
dec
jecxz
stos
bound
leave
iret
cmpsb
xor
test
lcall
jnp
jp
testb
loopne
jp
in
in
ljmp
mov
xchg
in
lea
mov
dec
sbb
popf
ljmp
aaa
aad
ja
sar
scas
cmp
ret
scas
sbb
iret
loope
cmp
mov
in
mov
pusha
test
test
sbbl
mov
scas
dec
xchg
jne
push
jge
xchg
ret
sarl
jecxz
mov
pop
rcll
mov
mov
push
pop
hlt
outsb
sub
mov
insb
aad
or
mov
pop
hlt
shl
pop
fldcw
pop
xchg
adc
scas
mov
loope
pop
subl
mov
adc
cs
xor
xor
sub
cmp
ret
push
jmp
mov
mov
mov
dec
shr
jns
push
mov
mov
inc
mov
fwait
in
sub
jle
jne
data16
mov
jl
add
and
fadd
pop
pop
mov
jl
or
or
sti
pop
or
cmpl
daa
jp
adc
sbb
pop
enter
jmp
pop
inc
in
or
mov
fmulp
push
loop
aaa
adc
xchg
xor
cld
and
aam
sbb
pop
repnz
xor
mov
insl
adc
sbb
or
movsb
aas
adc
aas
mov
scas
stc
cmpb
or
jp
jns
mov
ss
rcrl
sahf
dec
jnp
outsl
out
mov
inc
rcl
jne
rcl
dec
fistps
icebp
sbb
add
jle
xchg
inc
lahf
ljmp
or
test
add
in
clc
push
and
cmc
cli
sarb
popa
es
aaa
imul
cmp
xchg
bound
repz
loope
sbb
cwtl
aaa
rorb
inc
shr
test
insb
cltd
sub
pop
adc
cmp
adc
cltd
std
jle
cmpsl
cmp
data16
stos
cmp
repnz
ljmp
mov
femms
jns
mov
in
jae
scas
add
cmp
xor
push
loop
mov
push
arpl
sbb
or
xor
pop
aas
push
push
in
push
mov
enter
lcall
sahf
loopne
jg
mov
cwtl
aad
cli
push
xor
jno
mov
adc
int3
jno
scas
sub
jbe
loop
jne,pn
adc
push
jne
cs
mov
push
sahf
call
fstpt
std
xchg
ret
mov
mov
jmp
add
add
push
dec
jmp
repz
cmp
aas
push
add
or
lock
xlat
cmc
cmp
mov
lock
repz
out
jecxz
xchg
or
pop
mov
push
mov
mov
sbb
dec
inc
mov
hlt
outsl
jl
and
mov
push
adc
pop
inc
aad
mov
mov
push
adc
adcb
ss
jne
push
mov
jle
jns
bound
sbb
push
jne
sbb
cld
dec
lods
outsb
negl
add
or
jo
lahf
sub
sbb
ret
cmp
imul
xchg
mov
stc
xor
add
les
mov
or
pop
pop
adc
mov
movsb
lock
imul
push
sbb
insl
stc
pop
loop
mov
inc
pop
push
sbb
xor
es
cmp
ficompl
add
xchg
mov
sti
ss
out
sub
test
sbb
dec
sbb
jecxz
and
cmp
aaa
xchg
add
nop
inc
push
pop
imulb
xor
test
insl
jge
sahf
test
arpl
stc
ret
xchg
jecxz
mov
push
lds
jp
pop
imul
popf
cmp
loopne
cld
sbb
sub
imul
daa
add
outsb
add
mov
add
push
inc
enter
outsb
outsb
clc
jo
aad
inc
sahf
rolb
test
mull
add
or
loop
pop
push
dec
movsl
or
in
clc
cmpsb
loopne
in
push
push
push
lcall
lret
jp
cmp
add
popa
adc
sti
test
or
push
ds
mull
xrelease
fidivl
fs
mov
cmp
mov
stc
add
push
and
ja
pop
dec
aas
push
decb
pusha
push
pop
hlt
mov
or
lds
sub
lods
pop
mov
aam
insl
out
push
sub
idivb
das
and
aam
ret
movsl
mov
sbb
adc
dec
cs
cmp
fwait
add
xor
xchg
pop
inc
or
hlt
jp
add
or
adc
and
stos
push
pusha
out
mov
xorb
pop
jle
int3
sahf
jnp
or
lds
xlat
icebp
insb
sti
rcrl
or
push
adc
mov
lea
jb
rclb
insl
mov
shlb
daa
push
ss
sbb
out
jg
mov
out
insb
mov
xchg
ljmp
lds
push
scas
inc
jno
dec
pop
jno
pop
inc
jbe
mov
xchg
pop
daa
in
sbb
adc
aam
mov
xor
test
loope
cltd
ret
cmpl
pop
mov
add
lret
mov
fldenv
mov
movsl
jne
and
dec
lds
inc
incl
jecxz
mov
les
add
clc
xchg
cmp
mov
cmpsl
pop
xor
loop
xor
repz
gs
push
and
ds
push
shl
sarb
fbstp
shr
xorl
mov
add
jl
cwtl
stos
mov
cmpsb
jne
pop
push
jae
xchg
cmp
xchg
cmp
dec
sbb
jne
push
scas
data16
je
lods
mov
hlt
lods
dec
arpl
pmulhuw
lcall
dec
push
or
jp
mov
push
insb
pop
adc
jl
or
sbb
jbe
add
push
inc
cmp
push
cmp
dec
jne
jo
adc
add
sbb
sub
pop
fidivs
outsl
stos
test
cltd
cli
and
mov
adc
dec
shrl
pop
and
sbbb
in
nop
decb
stc
mov
int
cld
sbb
adcl
repz
and
adc
int3
mov
dec
popf
mov
push
insl
push
and
push
in
dec
das
sub
je
and
cld
xchg
jp
es
mov
stos
clc
xchg
inc
sbb
lret
adc
sarb
int
hlt
mov
inc
aam
mov
aad
aaa
scas
and
jl
sub
test
push
or
cmpsl
dec
outsb
sbb
flds
jbe
andb
out
mov
out
cld
inc
jl
inc
or
push
fst
mull
mov
addr16
pop
lret
xor
cld
jns
int
fucomi
je
pop
lret
add
and
inc
ret
and
test
mov
cmpsw
imul
mov
xchg
mov
lds
and
movsl
xchg
pop
je
jns
sbb
push
jle
add
push
andb
lcall
call
inc
repz
mov
sub
imul
jge
scas
sahf
sarb
cmp
inc
xchg
lods
jb
sti
and
ret
js
xlat
cmp
mov
vunpckhps
dec
adc
mov
movsb
mov
jb
add
jmp
jecxz
mov
lock
cs
xor
push
dec
add
sbb
adcb
sbb
mov
cld
mov
mov
call
sbb
cld
pop
lret
fidivl
and
sar
xchg
add
insb
push
sub
iret
xchg
popf
add
xlat
push
loop
lock
xchg
dec
xchg
arpl
jmp
fldt
jne
pushf
outsl
jecxz
call
call
and
or
pop
add
push
popa
call
movsl
pop
test
lret
push
jbe
sbb
inc
sarb
aaa
sub
mov
xor
std
cmpsb
pop
jge
int3
sub
jo
dec
bound
lahf
and
cmc
cmp
aas
in
cmp
lods
mov
insl
les
xor
movsl
add
push
lahf
cmp
mov
dec
ret
adc
in
rclb
testb
xor
inc
cmp
loopne
cmp
or
mov
adc
lock
call
mov
mov
push
insl
push
stos
mov
or
sbbb
or
sbb
jl
xor
push
loop
or
cmpsl
fiaddl
adc
cli
cmc
inc
sahf
addr16
pop
inc
xor
stos
pop
pusha
xchg
je
pop
fwait
xchg
xor
divl
mov
xchg
adc
insl
sub
mov
mov
fcmove
xor
nop
mov
push
fsubr
cmp
stc
mov
insb
mov
sub
pusha
cmpsl
jle
pop
call
int
adc
data16
lret
xor
pop
ret
pop
nop
adc
mov
loope
jo
loopne
or
dec
add
out
push
xchg
pushf
xlat
mov
aas
fmull
lods
sahf
jbe
inc
into
push
out
decl
in
in
addr16
rorl
push
cmpb
sahf
mov
clc
push
arpl
cld
int
xchg
mov
fcmovb
pop
nop
sub
mov
fistl
mov
inc
std
and
mov
das
sahf
scas
sub
mov
push
leave
sub
push
shrb
jl
orb
xchg
imul
das
lock
fisubrl
sub
insl
jge,pt
sbb
pop
hlt
mov
popf
xchg
insb
dec
lock
jns
lods
lds
mov
xlat
nop
mov
ret
cmc
aad
cli
dec
stos
dec
je
jge
loop
and
iret
xchg
dec
int
mov
dec
mov
pop
mov
jmp
sti
xchg
lock
leave
frstor
lds
xlat
add
mov
gs
ds
jne
and
aam
mov
or
pop
fisubrl
mov
in
xchg
test
out
daa
lcall
cmp
sahf
push
ljmp
inc
add
cmp
mov
in
mov
lret
push
inc
lret
fcoms
or
pop
cmp
nop
push
sti
inc
cwtl
aad
pop
ret
scas
inc
xchg
push
in
in
in
cmp
cmp
sahf
sbb
and
in
mov
or
cmp
push
nop
add
add
std
lea
je
out
cmpb
cmpsl
addb
add
sub
sub
add
jo
adc
test
insl
sub
cmp
jmp
and
shll
ds
push
sahf
pop
loope
mov
xor
sub
ret
push
jmp
and
or
das
sub
daa
xchg
xchg
stos
aam
xor
imul
stos
and
push
dec
sub
icebp
test
mov
xor
cwtl
cmp
sbb
roll
xchg
xchg
jno
test
or
pop
sti
xchg
dec
mov
sbb
das
movsl
inc
pop
cmpsl
sbb
mov
nop
push
stos
aam
rclb
mov
movsl
call
mov
fwait
bound
and
daa
xor
lods
pop
add
imul
daa
das
rorb
negb
leave
xor
mov
pusha
push
xorb
imul
test
mov
xor
mov
sahf
imul
and
or
ja
fmull
pop
jge
push
in
into
out
std
fimull
out
test
rcrl
inc
je
jge
jae
mov
scas
dec
xlat
add
jg
lods
pop
insb
sub
test
mov
mov
mov
add
cs
adc
inc
out
aad
jg
push
outsb
jecxz
or
push
aas
fwait
dec
arpl
movsb
jnp
push
cmp
mov
cmpsl
dec
mov
sub
sbbb
fdiv
sbb
xchg
jno,pt
add
mov
test
push
push
cmpsl
mov
push
jecxz
inc
mov
outsb
test
dec
cmc
mov
sbbb
add
scas
fidivl
or
mov
daa
das
sub
pop
push
aaa
jbe
cmc
jns
es
or
data16
xchg
sub
aam
adc
aam
sub
sbb
pop
xor
addr16
sahf
push
jmp
push
ss
icebp
adc
and
hlt
mov
bound
xchg
inc
das
in
xor
shll
pop
insb
mov
bound
mov
cmp
sar
scas
add
rcrl
xchg
jle
dec
pop
stos
sub
mov
mov
xor
loop
push
ljmp
jno
dec
mov
ret
sub
imul
lea
inc
mov
mov
mov
xchg
repnz
mov
fcompl
addr16
mov
decb
mov
jb
lea
inc
and
sarl
jge
test
in
cld
add
es
inc
sbb
sbb
add
jp,pn
mov
je
pop
ds
xor
jecxz
push
pop
sub
inc
mov
xor
imul
in
pop
lcall
inc
in
dec
push
movsb
sbb
les
andb
sub
popf
mov
dec
sbbb
test
push
repnz
mov
lahf
adc
out
cmp
outsb
les
adc
cmp
call
cmc
ja
xor
and
popf
je
movsl
xchg
mov
insb
sti
xchg
cmp
jnp
or
dec
popa
sbb
mov
xchg
lds
push
push
sbb
fdivl
xchg
inc
mov
fnsave
pop
fidivs
stos
cmp
addr16
and
das
mov
cmp
xor
inc
adc
lds
cmp
and
jecxz
nop
pop
dec
adc
mov
dec
adc
test
dec
pop
js
cli
test
push
jmp
leave
add
loopne
pop
add
in
mulb
push
mov
movsb
cmpsb
mov
push
loopne
insl
jb
loope
hlt
mov
rcrl
leave
and
enter
nop
frstor
ljmp
popa
mov
push
adc
push
pop
in
xchg
push
pop
sub
push
hlt
cltd
pop
mov
jne
jns
fnsave
ret
sbbb
mov
xchg
loope
jp
cmp
xchg
push
lea
lock
and
repnz
jl
loopne
xchg
sbb
add
in
pushf
scas
testl
insl
adc
mov
out
mov
jbe
add
xchg
and
ja
out
xchg
xor
in
data16
xchg
sub
adc
in
xchg
jle
dec
xchg
dec
mov
push
mov
mov
sbb
out
out
mov
fidivl
stos
data16
xor
pop
test
or
test
lods
mov
xchg
popf
int3
insl
mov
or
cmpl
mov
push
das
mov
pop
icebp
scas
outsl
jge
adc
dec
stc
inc
into
inc
sub
ret
pusha
negl
cli
test
dec
mov
cli
or
fldenv
in
cmp
lahf
fsub
jle
shlb
repnz
movsb
mull
jg
pusha
repnz
mov
imul
and
rorl
in
jb
xor
sahf
or
push
std
lahf
outsb
or
mov
xchg
clc
sahf
mov
lcall
imull
pop
mov
dec
jle
mulb
or
sbb
je
shl
dec
or
pop
xchg
mov
imul
sub
xor
addr16
push
push
pop
sub
mov
push
pop
push
and
xchg
adc
cmc
adc
inc
sbb
cmp
imul
sahf
pop
outsb
gs
mov
dec
cmpl
adc
inc
dec
xchg
mov
cmp
aas
enter
clc
push
js
cs
out
pop
cmc
adc
mov
out
push
and
cmpsb
add
aam
and
repz
pop
mov
loope
outsb
and
fistl
imul
dec
cld
mov
outsb
test
jmp
xlat
imul
cmp
mov
out
gs
insl
imul
loop
mov
mul
mov
cmpsb
out
decl
sbb
jecxz
sub
decb
cmp
insl
in
mov
mov
divb
pop
jle
or
mov
int3
arpl
mov
adc
stos
or
pop
fnstcw
cmc
mov
add
iret
and
add
shrl
and
gs
outsb
or
add
aam
cmpsl
inc
mov
aaa
sar
fs
movsb
mov
mov
sub
xor
and
test
adc
dec
aad
fwait
push
sub
mov
mov
push
jmp
pop
inc
lods
out
in
lahf
push
pop
jl
dec
and
mov
sbb
dec
and
es
sub
lcall
scas
xor
aas
sbb
mov
lds
stos
pop
add
aad
cmc
inc
bound
push
jecxz
adc
mov
mov
dec
mov
mov
call
lock
add
test
mov
jle
push
mov
cmpsb
je
rcl
xor
daa
sub
jns
fs
push
lcall
in
push
inc
lret
insb
jae
lcall
lock
gs
pushf
in
ficoml
sahf
push
xor
popf
xor
scas
pop
add
mov
sarb
jns
inc
xchg
jbe
shll
in
mov
mov
repnz
fs
sbb
mov
fnstenv
orl
fdivrl
cmp
mov
mov
sub
mov
mov
ret
mov
mov
decl
insl
lret
ljmp
push
push
xlat
xchg
push
adc
cmpb
fcoml
stos
inc
outsb
pushf
test
mov
lret
loopne
mov
pop
inc
cbtw
jle
aaa
lds
adc
jp
stos
xchg
scas
mov
loopne
popa
shr
mov
idivl
dec
pusha
mov
push
fbld
xchg
iret
insl
cs
add
push
test
inc
repnz
mov
mov
outsl
add
je
sub
xlat
push
mov
sub
add
and
dec
popa
lahf
stc
out
cli
stos
or
es
xor
cmp
js
pop
cs
incl
movsl
cmp
inc
pop
dec
adcb
xchg
jecxz
pop
test
jo
je
and
mov
mov
pop
and
and
dec
clc
shll
inc
sbb
je
or
inc
imul
stos
mulb
imul
out
out
push
inc
inc
scas
xchg
iret
sub
test
xchg
std
jecxz
popa
sub
mov
or
cmpsl
pop
mov
mov
popa
mov
lea
and
xchg
and
adc
pop
cltd
jno
clc
sub
sti
outsl
dec
cmp
packsswb
negl
and
subb
jbe
idiv
in
xor
add
popa
mov
leave
insl
mov
in
ret
xchg
inc
jb
insl
outsb
rcrl
neg
cmpsb
add
pop
xor
popa
clc
clc
push
mov
push
sub
sbb
les
mov
cmp
popa
fisttpl
xor
and
out
push
pop
mov
cltd
stos
into
hlt
dec
mov
ljmp
dec
dec
add
mov
pop
xchg
shll
fwait
loope
int3
sub
cmp
lret
es
test
loopne
jbe
mov
mov
dec
mov
outsl
dec
inc
scas
push
ret
and
adc
inc
inc
fsubrl
push
cmp
mov
std
mov
loope
ss
int
xchg
push
pushf
pop
outsl
ljmp
fdivp
mov
xchg
sub
lds
mov
push
jb
mov
dec
pop
adc
cli
dec
pop
test
add
mov
cli
stos
jbe
popf
nop
inc
or
or
in
mov
push
ljmp
jno
and
add
dec
mov
cmp
insl
imul
mov
adc
inc
jne
shlb
dec
fldenv
dec
daa
mov
rclb
inc
ror
sub
cltd
repnz
shrl
xchg
int
rorl
inc
add
mov
pusha
div
push
gs
adc
aaa
mov
xchg
xor
fdivrp
fisttps
adc
cmp
cmp
or
addr16
pop
dec
test
test
int3
rorl
lret
xchg
or
adc
loopne
in
push
sub
xchg
jnp,pn
and
lods
fidivs
popf
mov
das
mov
insl
movsl
icebp
les
xchg
daa
jbe
shrl
xchg
scas
mov
mov
imul
cmp
mov
fsts
loope
aad
and
xchg
out
subl
call
push
push
je
jb
inc
ficompl
xchg
fsubs
adc
add
cmp
adc
mov
shll
rclb
lods
add
or
les
push
adc
add
arpl
pop
popf
sbb
in
addl
sub
jns
jno
push
xchg
xorb
mov
mov
push
adc
push
lock
push
in
jb
cld
jge
pop
jmp
pushf
mov
imul
jg
bt
pushf
les
shlb
ret
pop
in
in
loop
loope
ret
arpl
test
xchg
nop
push
hlt
sbb
mov
pop
or
push
enter
icebp
lcall
adc
test
inc
jns
push
fmull
or
cmp
push
arpl
std
scas
les
xor
jmp
and
push
pop
aad
movsb
shlb
sub
mov
xor
mov
ljmp
repz
gs
jb
pusha
mov
es
jle
rorb
movsl
add
mov
and
stos
push
out
je
outsb
test
outsl
jp
dec
mov
pop
imul
cmpsl
mov
mov
add
mov
fiadds
adc
and
pop
lret
cli
push
push
inc
pop
mov
dec
lods
push
call
lcall
stos
xor
in
push
push
xor
cmp
mov
pop
test
jo
xor
jnp
lret
push
pop
sti
aaa
into
add
mov
sub
rcrb
dec
cmp
mov
push
out
xlat
outsb
mov
sbb
in
outsb
shrl
clc
mov
iret
push
add
push
xor
pop
aaa
sbb
sub
in
jge
mov
jp
xor
xchg
pop
stc
add
mov
loope
or
inc
xor
push
and
lahf
or
mov
push
mov
subb
mov
sbb
insb
ljmp
iret
int3
xor
sub
jno
pop
jmp
jnp
xchg
rcr
repz
jns
mov
xchg
outsb
pop
insl
imul
lret
arpl
ret
cmpsl
sbb
ret
pop
push
cmp
push
loop
nop
daa
xchg
idiv
push
scas
loop
out
lcall
mov
out
xchg
sub
xchg
adc
cmc
pusha
push
xchg
pop
mov
lds
stos
jb
mov
cmp
imul
dec
ljmp
mov
dec
call
sub
jo
fmulp
push
aas
repnz
sbb
push
fadds
pop
fisttps
shr
addr16
xor
daa
jmp
cwtl
sbb
sub
ja
lcall
inc
mov
xor
cmp
aad
dec
call
in
leave
sti
push
mov
cmc
mov
fdivr
jo
movsl
push
int3
arpl
mov
cltd
adc
sbb
pop
lahf
jp
fsubl
cmp
sti
out
repnz
push
fcoms
aas
or
scas
push
dec
pusha
daa
in
inc
xchg
dec
inc
cmp
sti
stos
mov
dec
mov
pop
sub
out
jb
mov
mov
ja
pushf
in
dec
ret
shl
add
and
sub
cmp
sbb
xorl
addb
vaddps
add
ja
xchg
fstpt
in
sub
adc
push
inc
pop
xor
lret
bound
leave
mov
sub
pop
xchg
mov
inc
jge
jg
jo
jmp
push
add
iret
add
adc
jl
stc
pop
cmp
cmp
jns
test
sbb
fistl
int
iret
fcmovnb
enter
dec
pushf
repz
imul
decb
sbb
cmpsl
add
fsubrs
push
push
cmp
dec
mov
cmp
mov
sbbb
inc
popa
pop
scas
xchg
fs
jb
stos
mov
and
js
mov
jnp
stos
out
bswap
xchg
pop
add
into
cmp
pop
sub
mov
stos
popf
adc
adc
cwtl
xor
push
call
mov
inc
inc
jmp
and
sahf
push
addr16
rcll
xchg
inc
mov
mov
imul
mov
inc
orb
pusha
cmp
jle
sbb
outsl
loope
ss
dec
lahf
idiv
jnp
or
mov
jnp
sahf
xor
sub
das
push
les
and
fsubrs
inc
gs
int3
sbb
minss
shl
rcrl
sbb
push
aaa
loopne
lods
cld
xchg
pushw
stc
push
jmp
fs
popf
pusha
mov
testl
dec
jae
aam
mov
pop
sub
stc
jo
stos
mov
fdivl
xor
xchg
xor
dec
inc
mov
int3
pop
test
dec
fistpl
out
in
mov
xchg
adc
or
je
in
test
or
push
pusha
adc
jae
loope
dec
shrb
fldenv
shl
add
data16
fisubs
dec
inc
scas
xchg
sbb
fmuls
mov
inc
lret
xchg
mov
sahf
clc
xor
mov
ss
cmc
or
xlat
rclb
cmpsl
dec
aam
mov
and
bound
int
cli
pop
mov
dec
pop
push
dec
xor
cli
ljmp
inc
sbb
cmp
inc
fimull
aas
mov
ffreep
pop
ret
and
xor
pop
mov
dec
jge
jb
push
mov
xchg
fsubrs
xchg
in
testb
stos
nop
daa
fldl
pop
jg
scas
inc
lock
push
insb
je
fidivs
mov
lret
mov
frstor
aaa
sbb
repnz
lods
jbe
mov
pop
dec
cmp
jl
ljmp
dec
inc
fdivrs
adc
dec
xor
sub
and
lods
mov
adc
subl
js
add
inc
mov
and
xor
push
mov
int3
cld
cmc
mov
jmp
dec
mov
jb
jb
ljmp
icebp
outsl
test
adc
cmp
and
out
add
mov
sbb
cmp
adc
cmc
psrld
stos
jnp
movsb
jae
pop
xor
mov
push
xchg
push
push
int
arpl
lret
jns
jo
dec
dec
and
jle
add
jecxz
and
pop
mov
fs
loope
js
out
dec
mov
cmp
mov
pushf
inc
and
mov
mov
mov
cmp
pop
ds
cmp
data16
or
imul
sbb
mov
ljmp
pop
inc
pushl
popa
cltd
inc
xor
nop
pop
push
out
push
add
adc
shlb
leave
mov
mov
icebp
fidivrs
push
jno
mov
lret
xlat
ja
pop
push
outsb
clc
mov
push
add
and
mov
cmpsl
ss
shr
cwtl
push
ljmp
jno
dec
cwtl
mov
pop
sbb
fcompl
daa
scas
push
cmc
push
inc
jo
incl
inc
fcmovnu
lock
fadd
add
push
out
imul
je
add
cmp
jns
mov
add
adc
ja
add
jno
push
jmp
adc
lret
sbb
push
jge
mov
jg
add
push
add
sar
xchg
xlat
stos
test
xor
cmp
xor
test
xor
inc
inc
ljmp
or
add
gs
fbstp
bnd
xor
imul
rcll
xchg
sub
fidivs
out
pushf
roll
std
adc
repnz
fisubl
pop
jnp
dec
mov
sub
arpl
dec
jmp
cmp
mov
xor
mov
in
push
jnp
nop
pop
adc
std
adc
jle
mov
test
stos
mov
mov
stos
adc
test
leave
xchg
scas
iret
mov
cmp
or
add
xchg
data16
adc
xchg
and
pop
jb
call
push
xlat
in
rorl
lods
sbb
push
jecxz
jg
bound
xchg
pop
dec
hlt
push
mov
clc
push
pop
movsl
lds
mov
sahf
mov
add
punpckhdq
mov
call
or
roll
dec
out
out
lods
fstpl
mov
test
int3
fdivrs
cmp
jge
fidivl
pop
pop
ret
and
mov
dec
fildll
int
jge
add
sbb
outsl
in
fidivs
add
mov
mov
cld
rorl
aad
insb
aad
xor
push
xchg
push
push
sti
insb
sbb
out
jle
cmpl
sbb
lods
dec
mov
cmc
ficoml
into
adc
mov
adc
and
pop
out
sub
ss
inc
out
aam
pop
int
push
add
jle,pn
xchg
jmp
fistpl
sub
fwait
dec
lock
jg
push
mov
sbb
into
xchg
cmp
mov
cmp
xchg
test
rolb
sub
inc
inc
mov
fiaddl
push
ss
push
mov
dec
pop
mov
mov
adc
mov
leave
inc
shl
leave
cmp
lea
push
and
out
sbb
test
xchg
xchg
push
xchg
ret
jle
lods
and
lock
xchg
xchg
inc
shll
popf
push
mov
add
and
shll
add
ss
jg
frstor
or
sbb
jp
fcmovnb
or
fwait
popf
test
iret
dec
pushf
push
jo
mov
cli
jg
mov
mov
add
mov
adc
mov
in
pushf
lret
adcb
dec
pop
cld
dec
dec
js
jecxz
mov
dec
out
inc
nop
dec
inc
jecxz
cmp
testb
ret
dec
jae
pop
scas
insl
shrb
sbb
cmp
xor
addr16
sub
push
pop
mov
mov
pop
repnz
pop
icebp
mov
jo
mov
inc
sub
test
jle
cmp
arpl
daa
pop
ss
push
mov
pusha
mov
test
xchg
xorb
adc
sub
jne
inc
arpl
icebp
adc
sbb
mov
sub
mov
dec
bound
push
jge
fwait
sub
mov
rclb
mov
lahf
mov
int3
jg
adc
xchg
adc
leave
pushf
icebp
jae
push
jmp
enter
test
jb
pop
mov
fnstenv
pop
or
out
mov
in
cmpsb
in
loope
fsubl
ret
pop
fcoml
push
jge
and
dec
call
fwait
mov
test
xor
popl
icebp
insb
inc
mov
aas
stos
fwait
sbb
cmovb
mov
cmp
push
mov
mov
mov
pop
in
ret
jae
sub
pushaw
iret
bound
xchg
out
mov
push
lods
mov
sbb
xchg
dec
xlat
mov
fldt
shlb
popa
sbb
in
jns
adc
dec
ja
mov
sub
cwtl
dec
mov
adc
insb
int3
stos
or
shlb
sub
sub
jne
xchg
lcall
adc
lahf
addr16
out
push
nop
mov
xchg
mov
scas
jbe
sub
aam
adc
sbb
data16
jge
push
addr16
pop
xor
fwait
cmp
jbe
shlb
sbb
rcrl
lds
and
idiv
arpl
sarb
jle
pop
into
lds
inc
mov
mov
lock
ds
or
lahf
push
ret
jmp
pushf
mov
adc
cmp
sarb
or
dec
insl
push
std
add
fnsave
mov
adc
fidivrl
ret
cmpsl
cmp
mov
and
testl
fcoml
mov
repz
int
dec
ljmp
in
xchg
sub
sti
pop
in
cwtl
das
test
sbbl
mov
jle
add
cmpsb
sub
mov
outsl
sbb
imul
inc
shl
ja
in
cld
ret
dec
bound
inc
pusha
xchg
addr16
mov
stos
mov
int
jmp
dec
out
repnz
jb
jl
movsb
mov
fwait
nop
and
xchg
loope
dec
bswap
fs
pop
stos
jnp
jmp
or
adc
push
stos
xor
sar
aas
jecxz,pn
dec
aad
sbb
dec
push
clc
ffreep
ret
test
cld
dec
je
mov
mov
lock
sbb
mov
dec
xchg
lahf
stos
xchg
and
add
xlat
outsb
pop
jns
cmc
outsb
repnz
pop
xor
nop
dec
subl
dec
out
dec
or
pushf
mov
or
xchg
ds
push
push
sbbb
cmp
jge
sbb
fwait
jp
jmp
adc
dec
or
or
mov
loopne
arpl
inc
mov
pop
scas
sbb
xor
push
inc
sti
testl
es
pop
idiv
jbe
div
adc
sub
adc
pop
arpl
jp
dec
popf
dec
jnp
cmp
dec
cltd
adc
push
movq
imul
into
adc
xchg
add
push
inc
cwtl
je
sahf
sub
mov
loopne
mov
ret
mov
cmp
pop
pop
scas
mov
lret
mov
scas
adcl
mov
xor
push
cmp
mov
insl
xor
add
out
mov
mov
inc
test
xor
pop
imul
out
mov
push
mov
jge
dec
cld
nop
xor
js
xor
popa
mov
fisttpl
pop
flds
jae
cli
movsl
mov
jg
imul
imul
jmp
out
mov
and
ret
mov
or
mov
cmp
and
adc
in
xor
mov
iret
adc
inc
out
lods
jl
stos
xor
xor
les
inc
jg
ljmp
out
leave
sub
rcrl
push
popf
lock
ret
inc
inc
inc
jae
add
cltd
rol
dec
lea
aas
xor
adc
aam
jge
cmp
in
scas
add
fdivl
dec
fildll
shlb
daa
mov
stos
mov
mov
xchg
mov
leave
pop
rclb
mov
xchg
pusha
xorb
inc
stos
mov
into
mov
pop
movsb
jecxz
loop
nop
mov
xlat
mov
out
adc
push
shrl
mov
scas
data16
repz
imul
push
push
or
push
xchg
fiaddl
mov
mov
insl
add
shl
lea
inc
movsb
push
push
je
lahf
test
scas
jb
jmp
sub
cmp
jg
jns
sbbb
sbb
stos
pop
call
ljmp
push
scas
lock
pushf
jge
arpl
insb
into
adc
leave
mov
cmc
sbb
mov
sub
pop
popa
test
in
push
int3
lcall
cmpsl
mov
lcall
dec
cmp
inc
sbb
test
add
xor
xchg
js
pop
fldz
pop
call
mov
and
scas
int3
jne
dec
dec
adc
ds
fistl
movsb
push
or
inc
repnz
lock
movsl
push
push
mov
lds
add
mov
subl
inc
lock
mov
mov
add
mov
aam
cmp
push
mov
xor
aad
jge
loope
lods
or
pop
cs
es
or
mov
add
mov
out
mov
repnz
arpl
rcl
jmp
dec
jmp
mov
adc
sbb
add
fstl
or
mov
lahf
fsubr
mov
test
mov
mov
in
cmc
pop
or
das
dec
dec
fcoml
inc
jns
int
sbbb
mov
jmp
mov
data16
and
pusha
push
ret
decb
mov
sti
or
xchg
fildl
inc
icebp
add
and
arpl
cltd
mov
fldcw
or
out
cld
push
pusha
sbbb
dec
add
jp
into
mov
mov
jge
int
push
ficompl
mov
mov
je
jl
xchg
lods
and
mov
push
out
cmp
dec
movsl
sbb
rcrb
push
push
pushf
scas
lea
js
xchg
sbb
dec
test
arpl
xchg
push
lods
call
shrl
inc
loop
lret
sbb
bound
adc
inc
rorl
mov
call
sub
ljmp
sub
push
xor
fsubr
test
std
ljmp
jg
lea
sarb
dec
repnz
clc
aas
shlb
stos
inc
push
pop
sub
outsb
stos
js
jge
imul
stc
and
add
sub
dec
ficoms
add
push
movsl
mov
lret
jle
mov
lahf
call
sti
scas
mov
mov
shrb
cmp
lock
cld
sti
xchg
fisttpll
ret
fmul
outsb
jb
mov
cmc
je
mov
push
push
movsl
leave
pop
aad
sbb
cli
dec
data16
ja
fdiv
cmp
pop
imulb
lret
jae
jp
jge
call
fnstenv
dec
pop
mov
or
ret
sub
cmpsb
xchg
pop
fisttpl
mov
nop
andb
jns
sbbb
pop
or
jg
xor
mov
fnstsw
femms
sbb
mov
sbbb
imul
cmp
orb
and
dec
mov
mov
stc
popf
lods
push
aas
push
mov
mov
stc
and
ror
mov
dec
jmp
push
and
outsl
out
xchg
lret
cltd
inc
and
in
xor
cli
roll
adc
sub
push
push
sub
cld
neg
out
cltd
mov
mov
ret
shr
or
pop
lds
mov
mov
leave
mov
cmp
outsb
jl
in
ljmp
and
orb
lcall
ljmp
aaa
xor
adc
push
sbb
bound
aaa
jo
je
cwtl
mov
and
sbb
jno
insl
rcrl
mov
cmpsb
jecxz
pop
adc
repz
mov
dec
ja
outsl
mov
jae
add
lea
addr16
xlat
cmc
lods
sbb
int3
gs
cmp
lahf
and
adc
inc
adc
repz
pop
cltd
mov
push
je
xchg
mov
fsub
stc
lea
add
cmp
ss
data16
ja
into
gs
xchg
insl
sbb
and
push
add
movsl
outsb
jns
jecxz
inc
mov
jb
cltd
dec
mov
jge
outsb
sub
test
aaa
imul
push
xor
data16
imul
or
mov
and
push
mov
jne
js
out
xchg
mov
sarb
sbb
inc
lods
les
mov
test
hlt
outsl
lods
push
nop
test
testl
sbb
stos
and
mov
fsubrs
faddl
mov
cli
jmp
loope
scas
test
in
sti
notl
sub
sub
push
scas
pop
imul
mov
ret
in
mov
fwait
pop
pop
shlb
adc
sbb
mov
movsl
je
fdiv
lds
sarl
add
ja
xchg
xor
xchg
ds
outsl
ds
jo
mov
jo
jns
lret
mov
sbb
mov
cmp
popa
ds
ja
repnz
rcrl
push
jo,pn
lea
or
aad
ljmp
jg
pop
in
test
inc
fucom
add
into
xchg
rcrb
enter
pop
push
stos
sahf
jle
dec
int3
xchg
in
jp
jl
fcompl
push
cli
test
dec
jl
push
cmp
add
or
test
inc
test
pusha
out
push
pop
loop
mov
add
xchg
pop
ret
in
test
pop
sub
into
jbe
sub
rcrb
jb
jne
xchg
les
jle
adc
aas
je
add
jbe
pop
insb
push
add
ljmp
insb
iret
test
mov
bound
icebp
ljmp
jb
js
shlb
add
scas
xchg
out
add
jb
or
lock
add
xchg
sbb
jbe
push
std
adc
sub
push
sub
dec
xchg
addr16
fnstenv
or
test
jae
mov
sarl
fists
mov
mov
add
stc
rcrl
stos
fcmovu
rcr
repz
mov
daa
cld
inc
xor
inc
inc
cwtl
cli
inc
cmp
dec
adc
mov
fbstp
push
lcall
push
jmp
movsb
shl
adc
out
pop
adc
lcall
sbb
cmpsl
sbb
fsubs
pop
mov
arpl
int
sahf
xor
enter
loope
shr
jle,pt
std
scas
pop
jne
jge
or
and
or
cmp
xchg
jo
mov
jb
imul
jns
les
mov
movsb
inc
push
lahf
scas
insl
xchg
add
inc
decb
pop
repz
add
ljmp
fiadds
adc
push
mov
mov
ss
and
cltd
stos
test
scas
outsb
add
lds
xchg
ficompl
xchg
lods
mov
insb
push
push
iret
adc
inc
mov
inc
rorl
cmpsb
sahf
enter
or
sub
push
lcall
inc
fadd
pop
into
aad
in
or
in
or
jmp
stos
pop
sub
jb
push
testl
insb
jno
rcrl
mov
cmp
dec
add
xchg
ss
push
jbe
orl
scas
or
lret
in
orl
mov
xchg
ret
pop
enter
jp
mov
cmp
push
push
cmpsl
popf
out
xchg
test
inc
sbb
popf
lods
sbb
inc
jmp
or
jecxz
or
rcr
fsts
or
lret
jl
mov
pop
xchg
lods
pop
jl
xor
mov
cmp
pop
cmpsl
adc
dec
mov
xor
bound
js
or
cmp
cmovg
ficoml
sub
mov
inc
out
xor
call
push
out
pop
or
std
pop
out
lds
nop
mov
out
lods
mov
lods
mov
mov
dec
jecxz
fbstp
test
lods
in
cli
jne
movnti
js
jle
icebp
imul
call
push
mov
fs
clc
adc
pop
imul
dec
push
dec
add
xchg
jge
push
inc
repnz
insl
imul
xchg
inc
icebp
out
push
divl
and
mov
out
loope
pop
xchg
mov
jns
inc
addr16
loop
aaa
or
cwtl
adc
cld
push
ret
fadds
xor
jg
cmp
xchg
addl
mov
jmp
add
mov
push
dec
jb
fidivl
jo
test
js
nop
xchg
xchg
notb
aam
pop
into
push
mov
inc
fbstp
into
subl
inc
mov
scas
iret
pushf
pop
lods
add
pop
mov
push
sbb
sbb
ja
insl
int3
fsubrl
cmp
cmp
pop
dec
inc
cwtl
mov
decb
sub
ja
adc
jmp
lea
lods
lret
jle
scas
loop
push
cmp
lcall
stc
and
loopne
push
loopne
cmpsl
add
fnstcw
adc
lret
or
push
and
pop
mov
in
popa
jg
int3
aaa
nop
jns
mov
scas
mov
test
out
pop
cli
aad
les
sbb
je
fsubrs
popf
jp
mov
jb
lahf
xor
or
pusha
cltd
lods
push
cmp
pop
imul
popf
pop
aad
pushf
xor
call
loop
enter
mov
test
or
sbb
mov
aam
stos
movsb
mov
sahf
jg
add
outsb
add
call
dec
int3
dec
push
sub
cltd
aaa
bound
adc
repnz
cltd
sub
or
daa
xor
pop
dec
pop
std
stos
add
loopne
fwait
xor
jmp
stos
adc
mov
aaa
sbbb
add
out
cwtl
mov
push
lret
out
xchg
mov
pusha
int3
decl
out
repnz
xchg
or
dec
dec
mov
push
mov
out
add
push
jmp
xor
clc
lock
test
fbstp
cmp
cli
xchg
cmpsl
das
push
out
and
jne
repnz
ficoml
cmp
negb
xor
inc
pusha
ja
xor
vunpcklps
mov
or
xchg
ss
xor
jge
mov
mov
outsb
rol
rorl
repz
and
pop
xchg
push
adc
jo
mov
arpl
mov
lcall
jmp
sbb
xchg
iret
fmul
pusha
sti
fnstenv
pop
xchg
sub
xor
sub
xor
jg
inc
pop
mov
push
push
in
pushl
mov
fnsave
xlat
nop
inc
rorb
xchg
pop
jno
stc
inc
lds
lock
sbb
pop
sbb
hlt
shll
shlb
dec
xlat
add
jp
dec
mov
mov
rcrl
outsl
fs
pop
adc
ljmp
jge
imull
addb
sub
lock
inc
cwtl
cmpsb
sub
xchg
adc
mov
push
enter
adc
jle
les
int3
push
push
fmul
mov
pop
mov
in
stos
scas
or
cmp
and
adc
movb
rcll
out
pop
push
jae
xor
pusha
jmp
lods
xchg
push
jb
clc
and
adc
stos
xor
dec
stc
aas
sahf
lock
jp
lahf
std
and
xor
xchg
dec
push
enter
lret
jne
jno
add
and
imul
ret
cmp
xchg
jo
dec
mov
insl
popf
into
cmpsb
sub
jmp
add
divl
pop
aaa
mov
fcmovu
pop
repnz
js
divl
push
jle
inc
push
cli
iret
lret
push
loop
dec
pop
repnz
or
dec
cmp
jo
test
and
push
xor
adc
out
icebp
add
mov
ret
test
add
ljmp
and
and
mov
xorb
negl
mov
cli
mov
ret
repnz
sub
cwtl
pop
add
cmp
xchg
xor
loopne
testb
and
or
popf
lods
icebp
iret
insl
in
xchg
push
stc
rolb
pop
dec
mov
mov
inc
shll
xchg
sub
xchg
and
jbe
mov
sub
jbe
dec
divb
test
sarb
mov
fsubr
dec
adc
ret
mov
xchg
je
push
insl
sbb
pop
cli
jecxz
mov
xchg
add
sbb
push
out
xchg
sbb
jg
mov
push
push
mov
push
repz
jbe
pop
mov
and
push
pushf
pusha
in
mov
fnstcw
xchg
mov
sub
sub
inc
pop
and
or
cmpsb
aad
mov
js
mov
test
inc
stos
cltd
jb
or
int3
mov
push
stos
fidivrl
xchg
leave
sbb
mov
jb
jmp
aas
xchg
xor
test
fsubrl
mov
rcll
lahf
xor
insb
sbb
push
ret
outsb
andb
subl
and
or
jno
es
adc
rcrl
shlb
test
mov
mov
mov
mov
jge
in
test
adc
sub
adc
in
ja
add
sub
in
xchg
rclb
pop
and
adcb
xchg
repnz
ret
scas
and
adc
insl
and
or
stc
or
sti
arpl
jo
xchg
push
lods
les
xor
stc
jbe
fsubr
subl
cld
mov
xor
call
push
xchg
add
xor
fldcw
push
mov
mov
cmpsl
cmp
sub
inc
mov
xchg
sub
dec
lods
movsb
xchg
jmp
int
and
in
sbbb
aam
out
std
pop
cmp
dec
or
adc
pushf
movsl
cmp
into
sub
push
sar
mov
test
push
dec
sbb
xor
out
popf
sub
arpl
sub
movsl
mov
movb
subb
mov
mov
mov
fmull
outsl
ret
movsb
sbb
das
dec
loopne
adc
mov
mov
mov
cmp
jns
fidivrl
adc
add
push
hlt
lds
popa
pop
sti
ss
cld
ret
add
push
pop
loop
sub
fstps
mov
adc
clc
add
sbb
repnz
sub
sub
mov
fdivrs
iret
push
inc
lds
orl
cmpsb
or
ljmp
inc
fs
scas
sbb
pop
and
adc
imul
je
lret
out
data16
or
mov
mov
xlat
sti
cld
add
sub
fnsave
enter
adcb
adcl
jnp
xchg
pop
cmp
pop
inc
aas
lea
jne
lcall
std
js
repz
mulb
cmp
nop
movsb
lahf
les
rolb
test
xor
add
mulb
pop
mov
mov
repz
push
pop
inc
sbb
dec
push
pushf
scas
xor
xchg
add
jge
shrl
stc
jb
ror
repnz
push
daa
add
xchg
push
lret
aaa
fisubl
loopne
pushf
push
xchg
sbb
ljmpw
iret
daa
and
lock
push
sbb
sbb
sub
fsts
lret
and
ror
mov
mov
xor
imul
call
lds
or
mov
bound
add
inc
mov
or
aaa
or
and
mov
mov
and
insb
aas
sub
scas
cmp
mov
cld
leave
fstl
dec
popf
pop
inc
or
aad
dec
jge
xor
jge
jle
notb
mov
add
lock
sbb
adc
push
mov
shrl
mov
jbe
pop
pop
push
mov
ret
add
lds
fwait
mulb
xor
xlat
repz
dec
push
cltd
push
and
push
inc
add
aas
push
cltd
jge
mov
cmp
push
frstor
fcoml
pusha
jmp
mov
pop
mov
sbb
nop
fidivrl
in
mov
or
adcb
cmpsl
jle
mov
outsb
sub
and
push
enter
cli
mov
cmp
cmpsl
cld
push
sahf
in
cld
aaa
ja
add
or
mov
adc
jae
sub
ret
arpl
dec
inc
fnstsw
cmp
push
gs
or
sub
ss
push
and
out
lds
and
xor
lock
into
lret
pop
and
jg
xchg
pop
ss
pop
mov
or
sub
cmpsl
mov
pop
jo
popf
sub
xchg
sarb
push
lret
xchg
cld
loop
sub
test
mov
stos
mov
mov
add
dec
imul
pop
adc
pop
lods
xor
icebp
stos
mov
loopne
cltd
mov
mov
dec
and
sub
add
lret
jne
push
pop
dec
lods
inc
insb
aam
pop
ret
xor
dec
dec
sbb
or
adc
insb
mov
pop
jp
xor
into
int
in
ret
outsb
cld
sub
in
mov
mov
mov
aas
mov
shl
and
push
aam
ffreep
arpl
jle
or
cmp
sub
dec
lret
xor
arpl
cmp
sub
mov
dec
cmc
dec
fnstcw
out
mov
mov
adc
mov
in
enter
pop
pop
push
pop
pop
push
inc
or
hlt
lds
in
out
pop
ret
dec
xlat
inc
pop
out
mov
push
testl
ja
or
push
mov
add
cwtl
pusha
dec
dec
rol
push
cmp
rcrb
sbb
out
mov
mov
loope
inc
jecxz
add
aad
mov
xchg
loop
loop
lds
fistpl
adcl
sahf
ficompl
aaa
in
imul
mov
call
or
mov
adc
cmp
push
sbb
pmulhw
mov
std
jle
dec
fmull
inc
loopne
adc
ret
xchg
jns
mov
test
or
ret
popa
xor
ja
clc
dec
loopne
jb
leave
pusha
dec
xchg
idivl
xor
test
out
inc
lea
mov
pop
rcrl
mov
stc
je
imulb
mov
loope
or
hlt
adc
cltd
inc
repnz
stc
and
and
push
cs
jg
rorb
xchg
pop
mov
shrb
add
adc
cmp
es
fiadds
aaa
out
outsl
inc
xor
mov
movsb
es
push
xchg
dec
stc
nop
sbbb
ljmp
push
movsl
dec
pop
repnz
nop
sub
push
movsb
out
mov
mov
add
push
pop
ret
mov
negb
mov
sub
pop
jmp
and
stc
test
gs
xchg
inc
inc
das
clc
jo
dec
std
loop
das
imul
adc
dec
out
mov
das
movsb
das
insl
sbb
push
stos
inc
orl
lahf
adc
testl
scas
pop
and
aam
cmp
inc
add
mov
mov
cmpsb
inc
out
lret
mov
pop
xor
in
aad
fs
in
xchg
dec
adc
cmp
fiaddl
lock
add
dec
loope
fdivp
aad
xchg
xchg
push
ret
aad
sbb
add
in
sbb
mov
lock
fcoms
xchg
insl
cmpsb
stos
push
stos
push
adc
sub
adc
xor
lret
cmp
les
iret
imul
or
sub
xor
adc
push
push
movsb
sbb
inc
dec
scas
fldcw
xor
xchg
stos
lods
pop
and
push
fdivrp
jmp
ror
shll
mov
jge
mov
pop
loop
in
enter
sbb
push
ljmp
sub
sbb
outsb
cmp
or
pop
insl
loopne
into
or
lret
inc
lret
mov
dec
pop
imul
mov
sbb
adc
jno
push
test
mov
adcl
and
add
in
push
out
sbb
pop
andl
lahf
test
push
xchg
insb
out
out
push
cltd
inc
dec
jmp
shll
mov
roll
jg
in
sub
mov
cmpsb
mov
bound
divb
push
pushf
push
repz
out
jbe
xor
jno
out
pop
ret
aas
add
fsubrl
sub
adcl
movsb
cmp
jo
lret
xlat
jmp
dec
gs
cwtl
pop
inc
or
cmpsb
xchg
int
add
out
iret
js
adc
pop
inc
filds
cmp
jmp
push
mov
in
pusha
mov
into
leave
sbb
or
or
sub
cmp
jno
gs
dec
mov
cmp
incb
lock
imul
insl
mov
sbb
sbb
push
push
mov
xchg
mov
out
dec
xor
or
mov
pushf
cmpsl
cmp
scas
mov
fsub
or
mov
mov
pop
lock
loope
xchg
xor
adc
cmpl
iret
jbe
es
cmp
outsb
js
das
and
pop
push
popf
jl
inc
pop
sbb
mov
movsl
mov
shlb
dec
mov
into
testb
mov
push
inc
int3
sbb
pop
xchg
call
pop
mov
xor
test
loope
sub
push
dec
dec
pop
leave
lods
in
rcr
mov
mov
fisttpll
and
ljmp
jmp
xor
push
inc
fiadds
arpl
imul
or
jbe
xchg
sub
rcr
adc
sub
fdiv
add
xor
xchg
scas
inc
or
push
jmp
push
aas
cwtl
sub
add
shlb
mov
mov
test
mov
arpl
mov
and
fidivl
or
lcall
jne
int3
lret
imul
loope
jnp
lea
mov
mov
mov
daa
rolb
xchg
add
insl
sub
lea
shrl
push
adc
xchg
jg
ret
mov
in
mulb
ljmp
inc
in
inc
rclb
dec
int
cli
stos
mov
inc
xchg
add
sbb
mov
or
fbstp
loopne
test
lds
sbbl
dec
in
jnp
icebp
mov
outsb
mov
sub
adc
imul
push
mov
xchg
jne
jo
fdivrp
adc
loop
xchg
aaa
fstps
or
cs
js
int3
fcomps
and
jmp
call
or
mov
scas
ret
sbbl
mov
add
xchg
add
test
pop
adc
insl
dec
lcall
test
lret
imul
sbb
sub
stos
dec
lds
mov
push
pop
lret
add
jae
mov
xor
push
popf
orb
and
aaa
dec
pop
dec
mov
mov
sbb
jnp
rcl
and
loope
or
repz
cmp
xchg
scas
out
sbb
loop
std
jo
subl
fildl
pop
xor
inc
dec
dec
jecxz
xsha1
cmpsb
or
hlt
mov
out
in
lock
and
ret
mov
mov
outsl
jnp
cmp
in
popf
or
repnz
ss
in
int3
jns
fs
aas
loope
xchg
in
adc
jne
mov
xchg
fwait
sub
xlat
sbbl
jno
mov
mov
subb
dec
pop
lahf
leave
pusha
shll
sub
lcall
out
xor
cmp
adc
sub
ret
loopne
dec
cmp
roll
xor
or
add
dec
push
stc
mov
decb
ret
dec
push
jmp
fbstp
cmp
shrl
mov
inc
movsb
pop
cwtl
mov
sbb
mov
jle
in
leave
or
mov
mov
xchg
pop
adc
jns
cmp
loopne
ljmp
push
push
daa
outsl
lret
fimull
adc
cli
xchg
push
mov
fnstsw
bound
mov
cltd
jl
mov
lahf
add
and
fs
loop
stos
mov
add
push
or
imull
add
pop
repz
mov
mov
jecxz
add
scas
xlat
mov
cmc
mov
push
loopne
inc
jbe
cwtl
pusha
repnz
ljmp
out
push
dec
ret
addr16
outsb
mov
mov
mov
or
jns
pop
and
xchg
dec
in
jno
insl
mov
inc
sbb
popa
inc
es
pusha
fsubl
xchg
jp
inc
and
cli
mov
jge
mov
cmp
js
push
ja
pop
into
das
xlat
out
dec
sti
adc
lods
lcall
sbb
push
in
popa
xor
test
push
loopne
inc
aad
jne
pusha
js
rcr
cs
xor
repnz
movsl
cld
and
xor
fdivrs
and
push
mov
sarl
sti
push
inc
adc
clc
mov
ret
jne
data16
mov
push
fisttpll
fstps
adc
stos
repz
mov
cwtl
mov
mov
mov
lret
add
add
aam
negl
pop
out
scas
mov
push
jno
subb
mov
jns
pop
adc
leave
jae
mov
sahf
sub
or
xor
xchg
shl
fwait
sub
cwtl
pop
test
push
pop
mov
pop
mov
push
int3
rclb
mov
xor
loopne
mov
pop
dec
cld
inc
jge
xor
repnz
enter
out
inc
in
mov
fwait
addb
je
mov
push
movsl
cmp
and
popa
push
jns
adc
popa
cmp
sub
and
jl
mov
out
or
or
test
xchg
rcrb
dec
xorl
incb
mov
dec
dec
dec
fwait
imul
sub
repnz
icebp
adc
scas
pop
mov
cmpsl
jecxz
lcall
inc
lcall
in
or
jle
xchg
push
movsb
pop
ss
push
shll
jbe
iret
sub
pop
lock
or
jecxz
mov
jnp
pop
stc
sbb
leave
cmp
jp
mov
mov
cmpb
and
jmp
wbinvd
inc
cs
sub
stc
dec
outsb
fsubs
jge
inc
xor
leave
jae
adc
sbb
int3
ret
and
testb
push
pop
jb
mov
and
repz
outsb
adc
jp,pt
sahf
jp
and
mov
adc
cmp
int
aam
lods
test
clc
sahf
aam
xor
lret
adc
cmp
mov
dec
enter
daa
addr16
stc
mov
fsubs
push
mov
movsl
lods
sub
icebp
pop
cmp
xchg
mov
pop
cmpsl
pop
add
in
jmp
movsb
cmp
outsl
outsb
add
cs
repz
cmp
scas
scas
inc
ja
pushf
pop
jae
idivl
dec
fisttpl
pop
mov
hlt
xchg
nop
aas
xor
mov
mov
scas
sti
xor
cmp
scas
add
iret
push
mov
add
dec
add
adcl
push
inc
xchg
mov
cltd
gs
lret
and
pop
in
ret
xchg
hlt
pop
xor
xchg
xchg
pop
into
out
adcb
xchg
mov
add
mov
sbb
jl
sub
stos
fwait
push
or
pop
sub
pop
pop
and
lret
jns
mov
xor
leave
jg
iret
mov
ret
sbb
sub
mov
mov
aaa
xchg
add
call
or
cmp
popf
sbb
orl
or
ljmp
int3
cmp
cmp
lret
imul
cmp
cmp
and
or
inc
xor
or
jl
sub
xor
xchg
xor
aaa
jnp
stc
fadds
push
cli
stc
inc
int3
aaa
and
out
jmp
sbbl
insb
cld
xchg
sahf
imulb
push
sub
in
jbe
xorl
test
bound
iret
adc
shrb
stos
mov
or
cwtl
div
xchg
dec
push
sbb
ficoms
push
jo
ret
mov
sbb
fisubrl
or
arpl
pusha
xchg
icebp
test
sbbl
mov
push
pop
outsl
add
std
movntq
inc
call
sbb
xchg
xor
dec
repnz
ja
jg
cmp
rcll
cs
cltd
xor
popf
xchg
mov
lcall
subl
jp
push
pop
and
cli
cmp
lcall
cmc
fwait
insb
inc
push
sub
data16
cmp
inc
jns
sbb
mov
xor
pop
cwtl
jge
pop
or
fisttpl
scas
and
fcomps
in
shl
mov
mov
add
mov
add
mov
test
mov
lock
xor
cli
adc
mov
jo
push
xchg
sub
fnstenv
nop
cmp
mov
xchg
xchg
movsb
push
aad
sti
mov
repz
lcall
mov
pop
out
push
or
call
in
std
hlt
ret
sbb
xor
cs
push
cmp
fdivrl
aad
push
dec
pop
mulb
fwait
mov
out
inc
push
testl
jae
dec
add
fwait
mov
lahf
mov
mov
adc
fldl
negb
mov
inc
sub
insl
cmp
jl
mov
mov
sarl
xchg
pop
loopne
mov
add
insb
enter
inc
sbb
xor
mov
mov
push
xchg
jg
mov
mov
test
xlat
cmpsb
insb
not
clc
xorb
mov
inc
cwtl
ret
data16
lret
and
pop
leave
add
xor
lods
mov
es
cmpsb
sub
stos
and
mul
inc
lcall
inc
pushf
or
and
out
xor
or
push
fisttps
fadds
push
leave
mov
stc
nop
xchg
roll
inc
roll
sbb
mov
mov
into
push
sahf
xchg
or
repz
sti
inc
add
jecxz
push
and
sahf
ds
fistl
hlt
xchg
cmc
or
insl
int
pop
cmp
mov
subl
adc
mov
imul
leave
xchg
xor
xchg
std
lea
fwait
mov
into
mov
fmuls
push
mov
popf
xchg
std
inc
inc
cmp
rcll
push
movsb
sbb
jb
fnsave
sbb
mov
fisubl
popf
and
pusha
pop
sbb
pop
jle
inc
clc
int
gs
out
inc
cmc
xchg
sarb
aad
xlat
fs
repz
or
aam
pusha
push
xchg
lret
mov
adc
imul
lods
fbstp
sbb
mov
aam
xchg
sub
ds
stc
das
pop
sbb
inc
xchg
cmpsb
orb
mov
mov
push
or
pop
enter
sbb
push
arpl
aam
inc
fwait
jmp
cli
jno
shl
cmpsb
scas
ds
arpl
movsb
jnp
cmp
inc
pushf
sub
and
cmpsl
mov
cli
sub
fs
in
out
aas
fwait
repnz
movsl
cli
mov
es
xlat
dec
adc
mov
in
sbbl
jecxz
sahf
push
aas
shlb
push
pop
pop
xchg
ss
xlat
stos
jo
mov
cmpsl
jns
test
daa
pop
xchg
and
mov
pusha
mov
dec
popf
push
insb
cmpsl
imul
in
pop
cmpsb
xchg
shrl
jecxz
fisttpll
int3
fs
sub
scas
daa
test
mov
pop
jno
push
hlt
pop
fimull
les
subb
mov
outsb
std
es
dec
pusha
test
call
and
subl
pop
hlt
dec
add
jb
fidivs
or
int
mov
xor
js
xchg
mov
pop
into
and
mov
inc
arpl
adc
xor
dec
jno
shr
mov
loopne
cmp
mov
das
or
jnp
fucomip
arpl
out
enter
inc
xchg
enter
popf
pop
mov
cli
outsb
pop
popa
in
or
fmulp
notb
arpl
sahf
mov
and
jbe
shll
fcomps
scas
sbb
add
inc
lcall
enter
add
pop
repnz
mov
shll
mov
gs
ja
in
dec
fdivl
fs
xchg
mov
or
rolb
bnd
add
dec
testb
shlb
mul
add
adc
sub
adc
inc
cmpsb
cld
jae
mov
pop
mov
adc
mov
popa
mov
lcall
dec
dec
pop
cwtl
insb
or
out
mov
jo
mov
pop
mov
inc
hlt
jae
mov
out
and
add
sbb
xor
add
mov
and
push
repnz
lock
lahf
ss
inc
adc
test
js
jb
push
cmpsl
or
scas
scas
ljmp
jg
pop
icebp
pop
push
cmpsl
arpl
add
sub
ljmp
pop
sub
xor
and
push
daa
cwtl
popa
cli
shr
cmpsb
jmp
sbbl
inc
loopne
jb
pop
call
shlb
stc
out
jne
shrb
adc
cmpsb
mull
inc
fbstp
cmp
in
xor
or
push
xchg
adc
jbe
jmp
jmp
fldt
cs
hlt
sub
inc
mov
xchg
imul
mov
add
xor
mov
lds
mov
sub
xchg
add
stos
fsubp
push
outsl
inc
pop
cmp
out
popf
sub
addl
push
cmp
add
mov
fwait
ss
lcall
pushf
movl
rol
and
stc
sbb
mov
loopne
lcall
enter
rolb
mov
ljmp
adc
xchg
fdivs
mov
xor
xlat
out
push
push
aad
fwait
shlb
pop
jb
jecxz
pop
inc
inc
mov
or
test
xor
adc
bound
pop
outsl
es
pop
loope
mov
pop
inc
bound
sub
shlb
dec
cmovns
shlb
sahf
xchg
pusha
push
add
xor
adc
cmp
mov
mov
test
jmp
nop
loope
fnstcw
jmp
push
xchg
sub
push
fstps
cmp
inc
mov
pop
sbbb
jecxz
cli
fnstenv
adc
test
test
int3
push
jae
andl
fwait
fs
push
scas
cmc
cmp
or
test
cmp
stos
add
es
sub
dec
ficomps
test
mov
mov
insl
inc
fnsave
in
lock
pushf
sti
xchg
lret
call
sbb
jp
push
xlat
subl
push
jo
mov
jmp
stc
jp
cmp
xchg
lds
add
iret
cmpl
sub
push
jmp
loop
repz
dec
out
sbb
int3
mov
dec
out
js
mov
or
xor
sub
and
fstps
mov
dec
in
adc
int3
xchg
iret
bound
fsubr
lock
and
scas
push
imul
lea
cli
jo
or
clc
mov
push
mov
add
inc
stc
and
es
cmc
adc
lea
xor
or
rolb
pushf
movsb
mov
mov
mov
imul
lret
cld
cmc
stos
test
dec
cwtl
aas
lea
or
cmp
push
popf
xchg
cmpsb
jecxz
mov
and
in
ret
and
inc
pop
in
jo
push
jecxz
fimull
push
in
lock
xor
mov
xlat
fsubs
mov
cmpsl
imul
je
push
pop
loopne
jae
iret
addr16
sbb
dec
mov
lods
lcall
loope
cmpsb
ds
int
lahf
mov
adc
sbb
aaa
stc
imul
pop
rcll
insl
nop
add
and
push
mov
xchg
jbe
mov
pop
test
in
mov
adc
aaa
data16
jb
push
daa
int
xchg
decl
mov
fwait
cmp
pop
mov
loopne
mov
push
xchg
add
popl
fldl
test
jp
add
imul
mov
pop
rcl
shrb
lock
pop
mov
sarb
mov
cmp
xchg
sub
scas
cmc
loop
ds
fadds
hlt
push
mov
adcl
scas
imul
pushf
pop
add
and
adc
cli
in
dec
or
in
pop
jns
cli
test
inc
adc
mov
or
jg
and
iret
push
inc
repz
xor
ljmp
and
clc
xchg
lahf
stos
inc
shl
cwtl
das
popa
mov
mov
xorb
movsl
dec
mov
jg
jle
lods
loop
adcl
fidivl
aam
mov
sahf
inc
jnp
je
nop
push
jae
xorb
repnz
and
fstl
and
pop
dec
popa
rcrb
es
jmp
inc
movsb
and
int3
imul
fldcw
sbbb
and
lods
pop
scas
sbb
mov
cs
mov
inc
notl
arpl
cmc
xchg
movsl
cmp
dec
in
adc
sbb
ss
sbb
mov
xchg
adc
sbb
sbb
stos
aas
adc
dec
lock
arpl
jo
cmp
push
arpl
and
icebp
mov
pop
adc
inc
fadd
daa
xor
mov
jne
addr16
ds
jle
dec
out
jae
sub
xorb
mov
mov
pop
pop
ja
lea
push
pop
adc
sbbl
and
sub
in
inc
dec
mov
and
add
xor
fdivrs
fwait
mov
cltd
lahf
stos
mov
mov
lcall
lock
inc
imul
fwait
fs
jo
fdivs
popf
xchg
pop
xchg
std
cli
add
imull
sub
pop
sbb
movsb
and
sbb
insl
dec
mov
pop
mov
int3
inc
mov
jb
mov
xchg
pop
mov
add
std
xor
cwtl
movsb
popf
leave
push
adc
inc
test
or
xlat
in
imul
repnz
decb
mov
loopne
cmp
mov
movsl
lock
and
xchg
add
inc
test
lret
adc
in
hlt
dec
xor
shrb
in
fs
lods
push
inc
mov
ds
jmp
mov
pop
sub
scas
xchg
inc
jne
inc
jne
pusha
mov
insl
jb
lahf
loope
ds
aaa
lds
cmp
gs
jns
punpckhwd
push
inc
sbb
hlt
pop
pop
lahf
lods
adc
mov
inc
xchg
cmp
and
jecxz
jo
out
jecxz
inc
add
dec
fs
arpl
into
or
pop
cmp
dec
lret
or
push
cwtl
bound
scas
repz
call
and
adc
push
aad
ljmp
mov
mov
xchg
adc
add
sub
mov
shrl
xor
jecxz
sbb
loope
push
sub
nop
shlb
lcall
push
outsl
insl
roll
jge
jno
mov
pop
pop
out
xor
lds
aad
cmpsb
ret
pop
sbb
jmp
push
push
loope
mov
or
out
dec
cmc
inc
dec
fidivl
jae
adc
subl
jmp
pop
popf
push
ja
cmc
not
ds
mov
xchg
sub
mov
movsl
sarl
add
jno
ds
jb
mov
ds
data16
jle
adc
out
test
jb
and
xor
outsb
mov
out
and
subl
sahf
push
lcall
std
pop
cmp
xor
sahf
loope
out
xchg
sbb
inc
daa
fsubrl
and
ret
icebp
rcr
xchg
in
xchg
inc
fisubrs
cmp
enter
movb
mov
add
inc
mov
mov
mov
adc
sbbl
and
invd
jo
mov
jp
xor
ds
pop
fldl
clc
or
jne
fs
sbb
fldenv
shrb
jl
cmp
data16
rcll
xchg
iret
xor
int3
outsb
sub
dec
pop
pop
dec
add
andl
sbb
inc
dec
mov
or
dec
cltd
jae
or
push
inc
stc
fidivs
cld
inc
dec
test
lret
push
popa
mov
add
sbb
gs
pop
sbb
cwtl
sub
in
xchg
push
pop
daa
push
sub
testb
test
pop
pop
fnstsw
jp
pop
xchg
xor
shlb
or
xor
sbbl
push
in
fiaddl
xchg
sbb
push
or
imul
mov
sbb
popf
pop
ret
jne
add
push
pop
fidivl
xlat
and
es
add
fsubrl
or
cmpsl
inc
adc
dec
add
mov
xor
int
cmp
jl
push
cmp
sub
add
sbb
sbb
mov
loop
xchg
mov
or
imul
mov
pop
cmp
and
outsl
add
mov
clc
js
mov
aad
sbb
jne
xchg
in
pop
push
mov
jne
iret
cmpb
xor
and
xor
nop
insl
jle
xor
sbb
pop
outsl
sbb
push
mov
mov
mov
gs
dec
jbe
aaa
outsl
or
jns
cwtl
mov
jl
inc
jecxz
sbb
js
decb
loop
jae
lock
addr16
fiadds
popa
test
int3
dec
mov
xchg
lret
jbe
jmp
mov
ret
sahf
insl
sbb
lods
cmp
cld
sbb
cmpsl
fimull
into
or
and
lods
outsb
incb
mov
ret
jp
lea
pusha
rsm
aad
mov
sti
in
aas
xchg
imul
push
push
add
rorl
jo
test
and
popf
inc
bound
sbb
jo
cltd
and
mov
xor
out
mov
sbb
sbb
dec
push
add
push
bound
mov
or
add
ss
xlat
enter
or
lcall
mov
push
ds
or
cltd
lds
stc
js
cli
xchg
jp
jg
sub
push
cltd
arpl
inc
pop
insl
inc
push
outsl
xor
insb
lahf
push
mov
lret
out
push
ret
scas
out
sti
sbb
rcrl
and
or
imul
test
dec
imul
mov
adcb
sahf
gs
fcmovb
rclb
adc
pop
pushl
lock
ficoms
xchg
sub
std
fs
jno
into
shlb
lea
sub
or
addr16
jl
sub
and
sub
adc
add
sbb
lcall
ret
enter
or
cld
sub
rcrb
and
cmp
pushf
lock
and
jae
jno
mov
outsl
push
daa
mov
mov
jge
push
pushl
sub
mov
add
adc
push
mov
sahf
pop
push
xor
imul
testb
cli
imul
cmp
push
in
insb
mov
in
mov
jp
stc
sbb
pop
outsb
scas
xchg
fstpt
mov
bswap
mov
hlt
add
jnp
push
pop
and
push
inc
cs
pop
mov
xor
mov
frstor
lret
testb
dec
mov
mov
dec
pusha
into
dec
fwait
mov
lret
xchg
in
cld
mov
sbb
scas
mov
popf
ret
scas
add
ss
jo
addl
sbb
ret
adc
int
adc
pop
jge
xchg
sub
iret
cmpsb
out
push
ja,pn
mov
mov
repnz
jno
dec
mov
mov
loop
mov
mov
add
mov
mov
sub
inc
mov
fidivs
repz
or
test
arpl
push
xchg
add
push
dec
fstpt
rolb
jns
inc
add
outsl
sbb
mov
cltd
push
jbe
xchg
sbb
push
aas
in
stos
icebp
sub
rorb
aam
bound
push
daa
outsl
fidivs
sti
xor
cli
call
push
xlat
mov
mov
xlat
flds
mov
leave
mov
outsb
loop
lahf
and
adc
sub
and
mov
sbb
in
clc
stos
xchg
cmp
mov
mov
push
xchg
inc
in
pop
dec
pop
push
push
lods
xchg
mov
xchg
repnz
ja
fistl
xor
jecxz
enter
and
sbb
xor
mov
and
mov
roll
mov
inc
jmp
mov
cwtl
sahf
popa
clc
iret
mov
xchg
das
mov
movsb
xor
xchg
jbe
jg
mov
shl
or
popa
mov
jb
out
inc
in
fisubs
data16
test
call
sbb
int
xchg
scas
icebp
adc
mov
outsb
jp
sahf
fmull
jne
ror
fxch
in
lock
sub
push
cli
dec
pop
orl
cwtl
push
outsb
movsl
add
push
mov
cltd
sarb
popf
cmpsl
mov
mov
jnp
xchg
aas
in
dec
xor
or
outsl
lds
insl
ja
jp
sub
cmpsb
adc
push
ret
int
jge
mov
push
and
test
mov
arpl
fxch
call
sahf
dec
push
dec
pusha
sub
adc
inc
pushf
add
dec
xor
dec
pop
stc
jmp
add
dec
lret
sti
imul
js
mov
decl
xchg
pop
sbbl
das
shr
pusha
lods
fdivrs
filds
mov
je
stos
sub
push
jne
cmp
out
jb
mov
rclb
nop
inc
icebp
cmp
out
dec
aaa
mov
lds
ret
andb
lods
imul
dec
fcompl
popa
mov
loop
xlat
iret
lods
or
jge
push
sub
xchg
cltd
rclb
lret
sub
or
mov
xchg
dec
or
es
push
roll
mov
sti
mov
flds
lcall
and
mov
je
in
addb
sub
lahf
pop
iret
nop
daa
add
les
les
xlat
xchg
fisttpl
fcmovnu
cmp
lock
popa
std
ss
popf
and
xor
push
mov
mov
test
movsb
leave
pop
loopne
repz
xchg
je
lcall
ret
pop
loopne
scas
fcmovnu
outsl
or
sub
mov
adc
test
jbe
push
fwait
cmp
int3
xor
insl
in
mov
jne
test
ret
xorb
xor
aam
aas
cmp
lods
aad
test
and
adc
pushf
xchg
test
es
ss
xor
repnz
ljmp
sahf
clc
pop
sbb
jge
mov
mov
sub
inc
movsb
lret
inc
xchg
sbb
popa
cmp
xchg
cwtl
pop
std
movsb
mov
ljmp
mov
push
cmp
mov
adc
xchg
add
dec
inc
cmpsb
hlt
xor
push
mov
jp
mov
sub
and
loop
dec
aad
mov
jmp
mov
mov
mov
iret
cmp
aam
iret
mov
les
xchg
and
sbb
cmp
outsl
es
rolb
gs
or
jge
lahf
sbb
mov
sarl
ljmp
out
loope
push
xlat
pop
jp
xchg
jge
xchg
mov
jbe
pop
and
fbstp
mov
das
adc
mov
in
iret
vmovupd
movsl
inc
xchg
and
jne
mov
sbb
jge
out
and
repz
out
push
inc
dec
addr16
mov
imul
loopne
pusha
sub
sub
dec
cli
lock
rcl
loopne
pop
dec
stos
test
jl
xchg
jmp
mov
sbb
mov
outsl
loop
lret
pop
add
dec
jl
cmp
adc
sbbl
add
xchg
pushf
in
stos
mov
mov
mov
sahf
rol
movsb
imul
fdivl
imul
adc
loop
movsl
fwait
dec
rclb
into
enter
addr16
jp
push
pushf
pop
lcall
mov
mov
sbb
in
pusha
fadds
out
popa
movsb
dec
imull
jl
popf
enter
xchg
pop
jmp
and
pusha
push
test
xchg
mov
xchg
or
or
das
mov
cmc
inc
scas
or
jns
add
add
outsl
jns
jbe
out
add
jbe
push
jmp
fdivl
or
imul
fs
call
adc
insb
xchg
ja
dec
and
and
dec
sarl
test
mov
jno
add
mov
jns
ljmp
pop
cli
fstpl
and
push
jp
in
ror
mov
inc
insb
sub
out
dec
cmc
pop
jecxz
aam
iret
add
xor
into
xor
add
sti
cmp
push
lods
cli
ret
gs
aas
ljmp
push
mov
mov
test
dec
movsl
inc
inc
out
shll
addl
jle
sbbl
ret
mov
fcompl
mov
dec
cwtl
mov
lret
adc
mov
and
inc
sbb
push
adc
daa
in
test
xchg
sub
inc
aaa
mov
stos
out
in
mov
scas
aad
cwtl
leave
push
inc
rol
dec
cmp
in
jge
sbb
lret
fnstcw
dec
add
cmc
out
mov
mov
sub
mov
sbb
and
mov
shr
repz
push
insb
lahf
pop
dec
orl
or
mov
mov
imul
pop
jo,pt
in
xor
je
add
pop
mov
imul
in
fsubrl
gs
cmc
adc
jg
jae
adc
or
cmp
push
xchg
pop
out
ret
stos
push
mov
add
sbb
mov
vpslld
sub
pop
pop
sub
mov
sarl
addr16
cld
orl
cmp
and
jmp
out
cmp
mov
imul
loop
mov
sub
jnp
adc
xchg
stos
mov
or
fisubs
lods
mov
sub
push
pop
lds
push
inc
lret
pop
dec
in
loope
ss
cmp
jnp
cmp
gs
push
dec
out
mov
insl
jge
cmp
std
imul
pushf
mov
sbb
mov
push
in
or
fldt
xor
ret
mov
push
outsb
mov
lret
ret
jne
sbb
sbb
cld
pop
outsb
jle
stos
push
cmp
push
dec
sbb
cmp
lret
push
or
push
mov
push
dec
jae
lds
lods
rcrb
adc
mov
cld
and
mov
add
outsb
cltd
test
sbb
repz
outsl
imul
dec
outsl
cmpsb
lock
les
in
jnp
pop
outsb
xchg
mov
pushf
out
icebp
mov
iret
cmpsb
cmp
xchg
sbb
add
mov
or
dec
xchg
sub
movsb
xor
aad
jmp
movsl
aam
pop
sahf
cltd
mov
fcompl
sbb
inc
in
js
ds
jno
dec
xlat
sbb
and
or
outsl
rol
jmp
mov
sub
daa
loop
pop
pop
loop
and
dec
adc
sbb
mov
pop
fstpl
lock
rorl
xor
fcmovu
insl
daa
pop
push
ja
outsb
xor
gs
jecxz
or
sbb
sbb
xchg
add
jb
mov
jb
adcb
mov
sbb
or
ret
sub
pushf
xor
push
sti
hlt
dec
mov
dec
outsl
jge
xchg
inc
lcall
mov
lcall
out
and
scas
mov
sbb
out
ret
xchg
sub
leave
dec
popa
clc
jle
pop
mov
pop
fdiv
ficoms
xchg
pop
and
sbb
movsl
jg
adc
push
ret
xchg
pop
sahf
ss
push
pop
and
jmp
test
or
iret
daa
sbb
inc
lahf
or
popa
push
mov
push
imul
loope
xor
in
push
aaa
mov
jae,pn
out
adc
sbb
cmp
mov
stc
jg
push
mov
loopne
mov
pop
mov
mov
clc
pop
push
lods
roll
iret
dec
xor
or
sbb
jo
and
xor
or
daa
in
add
or
sbb
jno
adc
push
mov
lret
push
dec
lea
mov
sti
sbb
lcall
push
lret
adc
cmp
pop
repz
cs
mov
insb
mov
test
cwtl
rcrb
add
stc
sub
add
xchg
add
mov
pushf
imul
sbb
or
dec
push
dec
movsl
aad
stos
outsb
jmp
push
shl
xor
subl
into
cmp
xor
decl
idivb
sbb
push
dec
daa
insl
imulb
data16
push
test
push
faddl
ja
push
cs
and
fsubrs
in
mov
inc
std
fwait
stc
test
xchg
lcall
in
pop
mov
insl
gs
pop
lret
adc
sub
pop
not
js
lcall
jns
and
fisttps
mov
sahf
sti
out
sti
sub
mov
push
addr16
enter
mov
mov
adc
or
xchg
icebp
in
js
imul
xchg
and
fdivrs
mov
and
jge
mov
pop
bound
ljmp
je
ja
movsb
rclb
sub
aam
adc
add
decl
push
sub
les
xlat
pop
push
or
fldcw
stc
fwait
cmp
push
in
cwtl
push
jl
sub
popa
clc
inc
dec
mov
mov
xchg
scas
inc
lcall
clc
ja
jmp
xchg
rcrb
jb
aam
daa
pusha
jns
or
insl
lcall
xor
dec
imul
add
pop
imul
push
mov
insl
int3
dec
shl
in
lods
imul
into
popa
and
cmp
push
shrl
loop
cmp
sub
pop
add
dec
js
sub
push
sbb
and
mov
hlt
jnp
adc
fwait
xor
add
call
sti
mov
mov
jo
fs
insl
add
inc
xchg
adc
dec
inc
push
stos
cmp
and
or
xor
mov
dec
xor
jnp
adc
dec
movsl
xor
sub
lea
mov
adc
push
xchg
pop
adc
mov
sbb
and
cli
test
pop
adc
mov
mov
cli
incl
test
cmp
mov
inc
in
and
xchg
mov
xchg
cmc
adc
mov
cmpsl
mov
fidivs
loopne
insb
enter
aaa
dec
ret
fidivs
xlat
adc
or
pop
cmc
fwait
mov
repz
jl
lods
sub
int
cmpsb
mov
pusha
mov
adc
cmp
xor
cld
clc
mov
push
ficomps
or
call
cs
repz
adc
pop
loopne,pn
lret
mov
call
adc
mov
mov
loopne
pop
aaa
mov
out
aad
inc
mov
cmp
xor
pushf
push
mov
cwtl
mov
ret
pop
mov
add
lods
mov
imul
adc
xor
mov
lods
ficoml
xchg
ss
mov
xor
and
adc
ja
es
hlt
adc
lock
jno
movsb
xchg
shlb
leave
not
addr16
mul
test
addr16
test
bound
jo
addr16
daa
cmp
dec
push
push
movsl
xor
mov
pop
xor
sarb
ds
fwait
sbbl
inc
fcompl
out
das
cmp
ret
xchg
fldt
lock
mov
inc
insl
cmp
int3
ja
out
rcrl
shr
loope
fs
mov
js
cmp
loope
rclb
adc
jmp
jo
mov
fcomps
sub
sub
or
and
insl
xchg
daa
xchg
sub
jno
aam
jb
dec
clc
inc
andb
addr16
push
cmp
shr
repz
int3
addl
lahf
stos
das
stos
push
sub
dec
je
jp
xor
cmc
sbb
jge
and
stos
or
xorb
mov
cmp
and
add
mov
outsl
das
sub
aad
je
gs
dec
pop
sbb
mov
popa
cwtl
subl
adc
lahf
enter
fisttpll
mov
mov
pusha
mull
lcall
adc
imulb
or
cld
ja
fs
pop
inc
pop
jecxz
or
leave
and
mov
cltd
js
jo
mov
clc
popf
ja
sbb
shll
sbb
hlt
sbb
jbe
pop
pop
lcall
mov
adc
add
rcrl
cmpsl
cmp
repz
mov
dec
call
jl
sti
inc
fstl
mov
scas
roll
xchg
shrb
dec
idivb
lock
mov
mov
gs
in
adc
xor
xor
push
rclb
pop
mov
rol
sub
shl
and
pop
lods
jecxz
ret
subl
mov
xchg
call
or
ss
push
movsl
add
lds
inc
jmp
push
dec
pop
and
daa
push
es
mov
push
xchg
daa
inc
outsb
in
push
pushf
cmp
sahf
or
outsb
sub
ret
lret
jb
push
clc
pop
imul
call
outsl
sub
rcll
inc
lods
outsb
sub
in
push
out
xor
add
mov
and
and
sub
fiaddl
push
andb
cmpsb
loopne
popa
mov
je
or
fs
aad
bound
icebp
sbb
cmpsl
dec
std
mov
jg
jmp
loop
or
repnz
test
mov
lods
call
push
dec
sbb
or
cmp
cli
xor
cltd
sbb
jp
movsb
sbbl
cmpl
out
adc
jmp
out
es
push
cmc
out
pop
int
and
dec
add
pop
mov
mov
and
cmp
xchg
cltd
xor
sub
std
push
arpl
cmp
add
jb
cmp
iret
push
lds
loope
nop
loop
mov
sub
inc
mov
sub
cwtl
add
es
jmp
or
das
arpl
scas
adc
ret
pop
adc
mov
jno
and
shrl
loopne
sbb
lods
es
lahf
lcall
mov
call
mov
mov
cmp
movsb
mov
inc
and
inc
mov
rcrl
mov
add
mov
cmp
iret
hlt
cld
movsl
cmp
adc
dec
xchg
fbstp
pusha
cmp
sub
fidivrl
pop
iret
push
xchg
lahf
daa
lret
fstpl
pop
mov
mov
sbb
inc
enter
es
sub
loopne
mov
sahf
jecxz
xchg
push
mov
jne
sbb
sbb
std
jecxz
jbe
push
gs
fwait
cmpsl
aas
cmpsb
adc
cmpsb
pandn
and
or
jl
shlb
aaa
out
sub
je,pn
and
mov
sbb
aaa
adc
ds
lcall
loop
mov
cmp
push
fcompl
xor
xor
cmpsb
in
xor
mov
xor
push
xor
insb
idivb
insl
sub
stos
inc
cwtl
push
push
pop
or
stc
and
outsl
imul
rcll
lcall
dec
and
outsb
jmp
outsl
repz
mov
clc
js
jg
mov
push
push
addr16
jmp
jnp
int
mov
fdiv
pop
push
jnp
jae
outsb
and
xchg
aas
add
scas
fs
xor
bound
mov
pop
cmp
call
imul
popa
jmp
or
sbb
xchg
xchg
xor
mov
adc
lock
jmp
jo
add
xor
addb
dec
mov
pop
dec
sub
fnsave
or
imul
out
inc
test
mov
mov
push
out
xchg
add
xor
and
movsb
add
inc
jl
and
ret
insb
add
adc
sbbl
add
addb
adc
hlt
cmp
lea
ds
roll
add
aas
daa
subl
pop
cmpxchg
das
daa
pop
pop
pusha
dec
scas
push
jge
mov
daa
adc
scas
cmp
xchg
lock
outsb
mov
xor
adc
jns
pop
es
fnstsw
mov
xor
push
pop
mov
out
test
jmp
xchg
jl
sbb
in
and
lret
loope
mov
jmp
adc
int
orl
setbe
ljmp
lods
test
push
or
mov
shrl
fwait
lock
push
or
popf
test
iret
and
sbb
push
scas
aad
iret
mov
push
movsb
inc
icebp
push
scas
fsubs
addr16
jg
int
sti
sbb
sub
outsb
pop
movsb
cmp
imul
int3
ret
in
cs
inc
insb
cli
xor
sub
pushf
xor
push
mov
adc
outsl
jae
push
pusha
push
xrelease
mov
fwait
mov
jae
or
imul
stos
popa
cmpsb
pop
stos
mov
cld
xchg
hlt
jg
sbb
sbb
mov
das
loop
jmp
xchg
pop
push
call
mov
in
push
pop
add
test
mov
hlt
sahf
mov
gs
or
das
pop
inc
fwait
pop
push
ret
inc
inc
stc
std
loopne
push
adc
pop
fsubrl
xor
cmp
sar
and
iret
in
lcall
sub
or
push
adc
inc
mov
cmp
call
insl
decb
cmpsl
pop
mov
into
xchg
pop
inc
add
movsl
jmp
pushf
sbb
jo
ret
adc
push
int
xchg
iret
xchg
jge
imul
mov
loopne
out
lret
add
scas
call
outsl
sub
jmp
inc
cltd
loope
pop
call
cmp
lods
add
xchg
xchg
out
into
pushf
mov
push
cmpsb
in
mov
shll
dec
fbstp
adc
pop
movsb
sbb
mov
fbstp
inc
repnz
xchg
and
push
out
imul
adc
dec
mov
jae
cmp
and
xchg
and
jg
sbb
sbb
aas
cmp
imul
mov
adc
ret
mov
fisubs
or
mov
adc
sub
ret
jg
xchg
leave
and
stc
cmpsl
dec
addl
pop
movsb
nop
out
dec
arpl
sbb
lahf
mov
adc
stos
subb
leave
pop
sub
in
int
cmp
imul
js
scas
test
sbb
mov
cmp
clc
std
lds
push
js
push
repz
jnp
cmc
pop
cli
pop
rcrl
shrl
jl
sbb
pop
dec
inc
aaa
sbbl
aas
andb
imul
jae
jecxz
subb
je
lcall
xor
inc
push
inc
inc
fidivl
mov
xor
jns
fiaddl
sbb
in
inc
lretw
nop
fstpt
add
insb
movsl
xchg
inc
dec
inc
enter
loope
cltd
fwait
jp
out
icebp
clc
adc
outsb
add
and
mov
movsl
mov
cmpsl
xor
rcrl
lahf
mov
int
popa
jns
out
shrb
push
push
icebp
push
out
jae
adc
scas
sbb
inc
sahf
and
mov
xor
mov
lret
jne
push
sub
ja
fsubs
jp
popa
inc
and
or
rcl
aam
jge
adc
repnz
mov
dec
push
negb
sbb
div
bound
int
mov
dec
out
push
rorb
add
cmc
popf
or
fwait
jo
jo
pop
mov
jbe
cmp
rcr
xchg
js
adc
sub
add
xlat
cmc
nop
jl
movsl
jmp
jp
stos
adc
sbb
cmpsl
cmpsl
xchg
lds
iret
test
sti
pop
xor
shll
negb
gs
mov
movb
sbb
test
pop
and
dec
pusha
ljmp
pop
mov
dec
mov
pop
xlat
inc
fcomps
mov
dec
lock
push
outsb
fsts
xchg
cmp
xor
sbb
xchg
insl
les
pop
dec
fcoms
sub
jg
bound
pop
in
outsb
mov
and
aaa
mov
aad
jecxz
dec
dec
aas
add
pusha
inc
imul
and
out
inc
add
and
sbb
pop
bound
movsl
lret
stc
test
std
jge
pop
andb
mov
jae
test
das
cmp
popa
repnz
push
xlat
mov
test
jg
pop
and
stos
push
xor
sbb
mov
fs
aad
push
jbe
testl
add
push
or
push
cmpl
out
cmovnp
add
lock
bound
xchg
sbb
mov
push
cld
mov
or
test
adc
or
fidivl
call
inc
and
cmpsl
adc
mov
loope
xchg
mov
push
sbb
mov
aaa
jmp
push
lods
mov
mov
enter
sbb
sti
mov
mov
sbbl
int
jnp
or
icebp
ljmp
push
adc
cmpsl
iret
vpsubw
cmp
in
xor
cmp
fsubr
in
fdiv
xchg
sub
mov
fldcw
adc
scas
repz
in
cli
movsl
lds
iret
loopne
pop
xchg
xchg
pop
fwait
enter
out
xchg
xchg
jmp
mov
ficoms
xor
popaw
jnp
inc
add
orb
sub
pop
mov
cmp
inc
test
loopne
or
jns
lahf
jmp
lods
and
in
out
ds
mov
enter
fs
ljmp
jo
sbb
mov
mov
loopne
jp
leave
mov
cmp
pop
dec
mov
sub
lcall
popa
dec
jg
out
pop
sub
into
push
mov
sbb
and
and
mov
in
xchg
inc
and
arpl
xchg
pop
mov
or
jno
xchg
stos
std
or
xchg
popa
pop
scas
cwtl
add
mov
xor
call
mov
ljmp
hlt
add
sbb
scas
dec
push
stc
notl
mov
xor
jp
je
imul
std
mov
add
fsub
ret
stos
sub
cmpb
sahf
xor
xchg
roll
mov
loope
jns
cmpsb
sahf
xchg
ss
in
jno
nop
mov
cmp
dec
lret
scas
push
or
test
xor
jg
mov
mov
xor
shlb
xor
cld
mov
pushf
inc
stc
fdivl
dec
pop
inc
pop
test
pop
add
add
or
sbb
testl
inc
push
mov
out
xor
push
mov
jnp
and
mov
adc
adc
dec
pusha
sbb
repnz
aaa
dec
sub
lahf
xchg
sarl
js
push
jge
cmp
adc
sbb
lret
mov
std
cmp
mov
mov
nop
push
or
dec
pop
lock
jmp
xlat
jns
pushf
sub
mov
jle
int
inc
mov
into
insl
push
out
jae
adc
mov
pop
dec
lea
xchg
pop
loope
rcrb
fcoms
xor
sub
roll
jle
loopne
pop
push
xlat
adc
mov
out
mov
push
jmp
fbld
les
push
aas
rcrl
mov
stos
gs
and
sbb
mov
cmp
pop
xchg
test
shll
std
mov
stos
add
cwtl
xor
xor
and
inc
cmpsb
js
repz
fcomp
arpl
xchg
cld
push
imull
mov
mov
xor
sub
mov
push
incl
and
inc
stos
lea
mov
in
and
push
xor
fimuls
jp
mov
out
popa
mul
outsl
inc
xchg
sub
jp
mov
xor
outsb
cmp
notb
dec
ss
int
cmp
cld
adc
movl
mov
add
sti
fwait
out
mov
push
cmpsl
cmp
mov
movsl
pop
inc
push
and
mov
jecxz
jl
cmp
cmp
orw
int3
dec
fbstp
push
pushf
inc
pop
inc
je
shlb
adc
out
inc
cmp
push
movsb
or
xchg
int3
cs
jp
call
sbbb
jmp
cwtl
xor
push
outsl
pop
arpl
lds
popf
push
cmpsb
cmp
jp
popf
das
sbb
and
add
pop
and
jns
pop
scas
mov
aaa
stos
dec
pop
mov
insb
mov
mov
mov
rol
test
push
imul
inc
push
adc
addb
loop
push
pop
ret
cmp
fisttpll
and
mov
mov
inc
and
mov
adc
es
lods
std
inc
gs
inc
lea
cmpsl
adc
add
popf
daa
xlat
sbb
jne
mov
add
fnstsw
xchg
sbb
add
imul
fistpll
stc
push
inc
fiaddl
jne
xor
js
sbbl
dec
jp
sbb
dec
xchg
test
inc
pop
hlt
fnstsw
sar
icebp
test
lods
adc
les
es
lret
dec
daa
orb
mov
jg
imul
pop
push
mov
data16
test
pop
lods
ljmp
pushf
jno
insl
fwait
pop
lahf
fisttpl
sarl
xor
icebp
pushf
pop
pop
mov
push
ds
jg
adc
sbb
push
xor
jno
cmp
xor
adcl
push
movsb
decb
lods
sub
fistpll
negl
sub
sarb
into
andb
sub
cmovle
in
testb
xlat
sub
mov
xor
push
lahf
dec
mov
jmp
sahf
cmp
ja
mov
lret
add
mov
gs
jmp
aad
int
xor
dec
adc
jle
xor
sbb
xor
fldt
ficompl
or
sub
sahf
cmp
add
sub
sub
sti
loop
sub
push
shll
repnz
add
pop
lds
cmp
popf
fsubs
int
aas
imul
nop
push
test
push
mov
xor
enter
into
enter
jne
bound
xchg
sub
sbb
outsb
inc
pop
mov
cmc
and
rorb
inc
fwait
cmpsb
jge
pop
aam
ffreep
or
push
das
inc
lods
aad
push
jb
and
repz
das
inc
sahf
or
push
cltd
adc
xor
mov
fildll
push
xchg
std
sti
or
addr16
hlt
jmp
push
xchg
dec
aaa
inc
fsubrl
aam
push
dec
fmull
std
sub
cmc
add
shrb
data16
xchg
jnp
popa
lods
je
dec
cmpsb
or
and
loop
mov
leave
ds
je
xchg
mov
pushf
mov
cmp
jnp
in
adc
or
sbb
shl
in
mul
mov
and
inc
mov
aas
push
daa
xchg
sti
dec
mov
les
cmp
in
and
push
stos
pop
cmp
sbb
int3
shll
fcomps
or
pop
xchg
mov
cmp
mov
aad
lods
fdivl
sbb
mov
push
cmpsb
cmp
es
push
sub
pop
mov
pop
pop
xor
loop
pushf
nop
test
js
and
les
ret
or
inc
push
and
add
or
pop
out
int
das
cmpsl
sarb
cltd
lret
stos
stc
cmp
rcll
xor
pop
mov
xchg
mov
adc
lods
and
out
push
mov
add
jecxz
xor
incb
es
adc
ffreep
sbb
pop
push
inc
in
outsb
cmp
sub
notb
xchg
out
out
ficomps
adc
push
outsb
pop
lock
ret
jbe
pop
lods
dec
filds
test
mov
mov
lods
nop
sub
dec
es
ja
sub
loopne
clc
dec
mov
mov
ret
xchg
leave
xor
mov
mov
mov
in
push
xor
cmp
adc
mov
adc
call
in
fs
popf
push
push
sub
out
inc
pop
and
push
scas
iret
push
xlat
repz
cwtl
repz
adc
jne
pop
scas
and
push
cmp
sbb
popf
sti
mov
movsb
ret
add
mov
pop
sub
sbbb
outsl
loop
mov
cli
push
das
insl
add
int3
mov
testb
loope
movb
ja
and
pop
fildll
fsub
in
imul
mov
pop
pusha
jle
gs
ss
adcl
add
movsl
data16
call
movsl
fcompl
adc
fmul
sbb
xlat
and
dec
outsl
push
inc
shll
inc
mov
ret
or
adc
push
sbb
sahf
test
and
pop
sub
stos
jo
fdivrl
lds
idivl
pop
lcall
and
frstor
sub
xor
dec
pop
das
jnp
mov
pop
dec
pushf
push
push
cmp
cmc
movsl
jnp
mov
jo
cmp
mov
sub
cmpsb
sub
jno
arpl
aad
adc
bndstx
in
js
fs
cltd
add
add
xchg
sub
cltd
dec
push
fimuls
cmpsl
jle
clc
xchg
and
daa
inc
sbb
incl
cmp
add
das
pop
xchg
ljmp
and
sub
xlat
xchg
mov
cmc
and
xor
push
scas
jmp
mov
push
adc
jae
pop
ljmp
call
test
insl
jnp
into
loopne
lahf
sahf
out
cmp
popf
add
int
rolb
or
fcompl
loope
mov
fnsave
addl
xor
jnp
sub
sahf
test
inc
das
test
dec
push
ror
mov
adc
xor
jne
mov
push
push
xchg
pop
add
cmp
fsubs
or
cmp
jg
shl
popa
mov
and
pop
testb
mov
repz
rolb
icebp
mov
adc
mov
add
sbbl
sub
mov
pop
icebp
rcl
push
lods
ret
dec
cmp
pop
mov
pop
ljmp
movsl
sbb
pop
in
jns
xor
inc
pop
dec
xor
mov
xchg
and
daa
cmp
in
sbb
dec
std
aam
xor
gs
cmp
movsl
enter
inc
sbb
jbe
inc
cmp
and
push
or
xor
jno,pn
inc
movsl
jg
and
inc
test
xchg
arpl
xor
pop
or
jg
mov
jl
lahf
shr
push
aas
orl
dec
mov
rcrl
pop
jmp
ja
out
jo
cwtl
sub
push
cmp
fdivrs
or
lods
xchg
inc
test
jl
pop
mov
lods
fidivrs
cmp
mov
xor
popf
pop
out
or
jmp
in
scas
arpl
iret
xor
mov
jmp
cmp
mov
add
ja
cli
lahf
fwait
out
sbb
test
mov
jne
sub
shll
jecxz
mov
mov
pop
xchg
outsb
gs
fldl
adc
lea
push
outsb
cmp
in
out
push
and
mov
hlt
dec
or
in
dec
inc
or
stos
xor
jo
cmp
hlt
sub
ret
xchg
mov
dec
pop
ds
ss
pop
or
pop
les
fsubrp
push
jge
insl
mov
stos
lahf
bound
scas
mov
ss
fdivs
push
stos
mov
push
outsb
xchg
pop
aaa
pop
mov
sti
jecxz
mov
je
mov
fwait
lock
inc
in
push
out
fidivs
pop
cmp
lahf
sub
mov
arpl
lock
and
mov
inc
data16
mov
sbb
test
aam
clc
mov
mov
rcrb
in
sti
cmpsb
lock
mov
leave
scas
xchg
clc
lds
adc
mov
or
jns
jo
mov
sub
or
sub
or
jb
push
adc
dec
and
fnstenv
inc
aam
mov
mov
xor
dec
enter
dec
out
cli
mov
and
orb
call
mov
sub
inc
js
push
int
cwtl
inc
fs
fimull
xor
test
shr
aad
xchg
scas
ss
push
rcl
sub
mov
sbb
sahf
lock
out
cmp
lahf
jmp
mov
pop
insb
push
push
xor
xchg
cmpsl
sub
xor
xchg
mov
push
addr16
adc
mov
jnp
jge
and
outsb
cmp
add
jmp
ljmp
out
mov
cmpsl
out
scas
sbb
jb
lahf
cmpsb
xlat
rorl
push
lret
sahf
clc
gs
lret
fcoms
pop
inc
movb
inc
and
das
push
daa
lret
push
rorl
popa
jne
imul
push
xor
push
inc
or
dec
cld
dec
fcmovne
shll
sbb
gs
mov
sub
in
sarb
int3
mov
xchg
std
enter
cmc
hlt
mov
add
add
sbb
std
nop
je
je
cmp
aaa
stos
cli
jecxz
call
int3
roll
in
ss
sti
xor
add
push
inc
jp
mov
das
push
les
movsb
xchg
push
and
inc
outsb
call
in
mov
lret
mov
add
push
or
mov
sub
add
sub
mov
loope
mov
jle
sbb
jle
jb
cmp
pop
pop
fsubrl
sbbl
ret
pop
xor
test
fildl
adc
xor
dec
push
repnz
aas
fsubrl
sub
pop
add
subb
dec
pop
sbb
sbb
rcrl
lret
popa
pop
iret
adc
push
insl
adcl
cs
pushf
jns
xchg
jle
pop
dec
nop
pop
cmp
aad
inc
and
inc
sbb
pop
es
xor
std
addr16
jbe
cld
outsl
push
adc
inc
jns
adc
push
push
outsb
cmp
pop
xlat
cmp
out
mov
dec
mov
lds
mull
or
jbe
and
repnz
std
add
xchg
jle
insb
cmc
ja
mov
xor
xor
inc
stc
and
movsb
cld
mov
mov
seto
imul
and
mov
add
inc
mov
in
enter
pop
repz
cli
scas
and
jle
sti
mov
ret
pop
fwait
test
jecxz
or
dec
pop
and
or
mov
fucom
xor
mulb
mov
dec
jbe
pop
pop
stos
shrb
mov
les
inc
mov
xlat
mov
int3
xor
clc
aaa
cmpsl
jge
mov
add
insl
fildl
fs
outsb
ss
popa
stc
sahf
pop
out
sarb
add
popf
pop
jmp
adc
lret
xchg
mov
and
popf
push
ljmp
jb
dec
adc
mov
jno
jbe
lods
ljmp
xchg
add
and
sub
arpl
rcrb
xor
in
test
adc
mov
nop
mov
lret
and
push
mov
mov
mov
test
popa
or
call
into
inc
dec
pop
jae
mov
adcb
dec
test
int3
cli
cmp
subb
mov
pop
cltd
repz
mov
push
lods
mov
jbe
decl
rcll
mov
idivb
adcl
jl
test
jnp
clc
sti
mov
or
inc
dec
xor
les
adc
adc
dec
jecxz
cmpb
hlt
pop
mov
cwtl
pop
addr16
lcall
loopne
lret
inc
subb
inc
lahf
mov
push
mov
in
xor
xchg
jp
imul
mov
movsb
repnz
scas
pop
sbb
xchg
dec
xchg
pop
cmp
mov
rclb
addl
std
push
out
cs
sub
or
lds
negl
inc
sub
leave
jae
adc
imul
mov
dec
faddl
jno
rclb
pop
sbb
or
add
or
mov
scas
sbb
clc
aas
out
mov
sbb
insb
lahf
movsb
dec
lds
addr16
loope
xor
mov
mov
xchg
in
xchg
sbb
mov
jg
loop
repz
mull
adc
pop
out
add
je
xchg
test
repz
pusha
jg
xchg
xchg
mov
dec
fisubs
jno
les
test
sbb
push
imul
lods
iret
jno
dec
imul
arpl
adc
in
inc
mov
sub
pop
xchg
clc
clc
sub
add
dec
rcll
cmp
test
cmpsb
js
push
jo
clc
and
dec
insl
icebp
mov
stos
adc
xchg
js
or
or
call
lret
call
fcoms
stos
add
pop
out
and
je
and
hlt
push
cmc
idivl
ljmp
mov
adc
mov
jno
aaa
repz
push
sbb
jle
sub
repnz
lock
adc
pop
add
dec
xchg
pop
out
pop
jecxz
adc
ret
adc
adc
adc
jns
jo
loopne
and
xchg
mov
shlb
push
clc
fwait
jge
push
push
test
jmp
fs
jp
adc
je
add
in
dec
jnp
sbb
ja
lock
pop
icebp
ret
cmp
xchg
add
push
js
sti
test
cmp
rcrl
outsl
add
jo
out
ret
mov
fstpl
push
pushf
mov
sub
push
movsb
clc
mov
xor
jo
cld
sub
ja
ret
or
push
push
jl
fdivrs
arpl
sbb
lea
int
mov
dec
cmpsb
and
scas
and
xchg
sub
add
in
enter
jle
sub
mov
jnp
cmp
and
mov
insb
push
fadd
test
int
repz
imul
outsl
daa
fdivp
in
push
scas
sti
fcomps
sub
fbstp
xor
jg
std
je
mov
mov
aas
test
movsl
push
mov
push
fimull
add
pop
add
cmp
mov
lret
das
mov
lods
ljmp
cmc
notb
daa
sub
xchg
outsb
je
mov
dec
mov
cmp
mov
pop
outsl
xlat
mov
or
mov
cmp
mov
repz
scas
adc
in
fimuls
and
mov
fs
push
jns
push
adc
int
mov
mov
mov
jb
or
pop
pop
shr
xchg
scas
inc
sbb
dec
out
pop
or
stc
mov
repz
mov
repnz
cld
clc
mov
outsb
or
xchg
mov
aaa
data16
push
test
mov
mov
jo
mov
sbb
push
in
or
inc
add
mov
add
aaa
into
lods
inc
testb
inc
pop
mov
pop
sub
add
out
scas
shll
ja
mov
pop
gs
xor
jne
addl
jb
cmp
cmp
addb
sbb
inc
sub
fwait
xor
mov
inc
mov
test
loope
lock
inc
push
mov
fisttpll
rcrb
inc
ret
int3
inc
pop
and
movsl
inc
popf
ja
leave
test
push
jmp
dec
push
inc
add
sbb
fdivl
int
popa
std
mov
mov
aad
adc
out
mov
add
lea
cmp
repnz
jge
mov
imul
jne
push
pop
test
jge
and
or
inc
cmp
lock
push
fldenv
inc
lods
pop
std
fs
mov
ss
push
inc
cmp
mov
ficomps
sub
xor
add
cmpsl
push
rorb
scas
scas
mov
iret
faddl
sti
push
xor
fsubl
je
add
gs
sbb
push
out
test
call
in
mov
hlt
mov
mov
iret
in
sbb
xor
ds
addl
inc
shr
orl
addr16
insb
fisttps
or
mov
sub
sbb
sti
or
xorl
mov
call
inc
pop
cmp
pop
daa
sahf
stos
mov
movsb
pop
fstl
jns
jne
inc
pop
cli
aam
cmpsb
jne
test
pushf
pop
cmp
hlt
inc
cld
sahf
sbb
sbb
mov
outsl
inc
cld
lock
test
dec
dec
lret
xor
jbe
pop
and
int
xor
int3
daa
mov
fwait
jae
rorl
ljmp
mov
insb
pop
jb
jns
cmpsb
inc
rcrl
push
lock
inc
cmp
add
aaa
xorl
lock
and
inc
xchg
push
sbb
xor
cmp
cli
lahf
push
aam
mov
test
xor
xchg
pop
insb
jl
mov
dec
jo
push
xchg
nop
mov
xchg
lcall
bound
fcomps
clc
faddl
insl
insb
add
mov
aam
cmp
in
push
pop
stos
inc
cmp
jo
pop
sbb
dec
orb
call
mov
out
cmp
aas
mov
jmp
lret
xchg
mov
cmp
shl
jg
mov
outsl
xor
mov
add
pop
sahf
cs
mov
out
mov
xor
imul
lret
repnz
gs
mov
push
xor
or
add
lahf
or
ficoml
jae
push
inc
xchg
ret
cli
push
jp
dec
jae
jg
xchg
jno
cmp
pop
adc
mov
into
mov
in
test
jp
ja
mov
add
test
out
inc
popf
lods
js
jb
fidivrs
cld
xor
lret
dec
sahf
push
inc
pop
test
lcall
fsubrs
ja
bound
cmpsb
loop
clc
div
hlt
cmp
loope
xchg
xchg
sarl
pop
mov
xor
jnp
add
adc
pop
mov
adc
bound
clc
nop
pop
add
hlt
std
pop
lret
imul
jmp
dec
shlb
cli
jne
scas
and
mov
test
scas
loopne
inc
adc
or
test
or
gs
jae
mov
mov
or
add
clc
aas
pusha
jbe
xor
xor
xchg
jno
jo
sub
mov
pop
insb
mov
test
push
out
in
addl
sahf
jno
data16
jg
test
addb
mov
jg
pop
sub
xchg
call
xor
scas
inc
insl
xchg
mov
andl
ds
push
sahf
fmull
ja
incl
add
push
sti
push
jo
iret
ret
xor
pop
data16
movb
cltd
mov
or
popf
jecxz
adc
xchg
lahf
push
xchg
fwait
pushf
mov
aad
movsl
rol
cli
ja
lds
push
cltd
xorl
les
mov
aad
mov
cmp
std
inc
push
mov
sbb
fistpl
jp
jg
cmpsb
outsb
add
dec
push
nop
dec
xrelease
push
or
movb
addl
stos
in
push
in
jl
mov
fildl
xchg
push
xchg
icebp
sbb
fdivl
ficompl
lahf
mulb
lods
xchg
or
lret
cmp
push
stc
in
push
jmp
sbb
sub
mov
popf
adc
xor
pop
lret
mov
cmp
inc
sub
mov
shrb
scas
ret
je
popf
sbb
xchg
outsb
ljmp
xor
add
push
sahf
idivb
and
imul
lods
cmp
dec
sub
sahf
hlt
push
push
mov
pushf
inc
aad
inc
mov
ret
lret
daa
jmp
inc
xor
mov
rol
faddl
inc
sub
clc
and
push
dec
sbb
sbb
cmc
sbb
ss
sub
mov
sti
flds
mov
clc
and
cmp
aas
in
mov
sbb
lret
sbb
push
push
popa
addl
mov
xchg
sub
mov
repz
jmp
add
loop
mov
ja
and
jne
aad
cmp
sbb
push
push
sub
adc
jne
lods
lcall
xchg
and
mov
imul
out
pop
insl
jb
popl
hlt
mov
adc
dec
in
cmpsb
or
cmp
cmp
jo
call
popa
mov
icebp
cmp
pushf
dec
into
cmp
sub
push
pop
insb
fisttps
pop
insb
repnz
hlt
imull
and
adc
sub
push
ja
imul
mov
fs
scas
inc
push
scas
movsb
addr16
daa
lret
fs
stos
repnz
inc
inc
xchg
and
mov
loopne
push
rorl
mov
cmp
cmp
add
pop
xor
pushf
loopne
and
ja
cwtl
push
jmpw
shlb
hlt
mov
fiaddl
popf
or
aam
test
insl
cmpsl
sub
push
sub
enter
sbb
dec
xchg
jle
sbb
mov
push
clc
xor
insl
or
aaa
fcoml
sbb
dec
lret
cli
inc
xchg
add
xor
jb
mov
mov
shll
cmpsb
bnd
jg
jns
adc
leave
pop
xor
push
sbb
jb
out
push
push
insb
jae
je
pop
cmpsb
sub
and
xor
std
sbb
xchg
sub
jb
xor
cltd
movsb
in
jmp
xchg
les
inc
in
int
and
xchg
xor
mov
cmpsl
add
cltd
out
dec
movsb
cmp
div
pop
inc
daa
inc
out
or
or
stos
cmp
cmpsb
in
popf
and
mov
sarl
fsts
sbb
push
or
mov
jb
pop
jo
cmp
pop
mov
xchg
add
data16
cmpsb
scas
cwtl
push
sub
mov
pop
out
jnp
inc
xchg
pop
pushf
ljmp
xchg
jns
sbb
push
dec
ds
dec
fwait
pop
mov
aaa
dec
pusha
cmp
sbb
inc
push
mov
sub
lcall
cmp
or
sub
add
cmc
mov
clc
sub
dec
adc
jp
mov
push
pushf
cltd
fdivrl
sbb
mov
inc
movsb
cmpsl
in
jl
lahf
test
inc
es
fbld
inc
decb
cwtl
dec
ds
mov
int
push
dec
lds
int
aaa
stc
mov
in
mov
and
mov
std
nop
arpl
pop
subl
cli
inc
call
inc
add
mov
sub
mov
cld
outsl
imul
ljmp
inc
pop
xor
or
cmp
xchg
cli
mov
cli
ds
orb
jns
sub
ret
nop
int3
scas
xorb
addb
repz
cltd
push
sahf
das
mov
push
ds
or
sarb
fsub
test
in
mov
mov
mov
in
sbb
stos
jmp
and
fcomi
and
fistps
xchg
inc
and
lahf
add
std
push
mov
inc
iret
pop
inc
dec
aad
cmp
add
cmp
cs
jl
es
mov
icebp
pop
fnstenv
sbb
insl
dec
es
or
subb
mov
add
outsl
test
xor
jmp
dec
loop
cmp
dec
or
xchg
mov
pop
or
jbe
lock
dec
mov
cmpsl
jmp
imul
cmp
testb
scas
xor
incl
out
and
xor
loopne
cltd
add
in
jl
xor
dec
andl
cmp
xor
clc
pop
aas
aad
sbb
mov
es
fldt
push
pop
popf
sub
repnz
xchg
dec
loope
xchg
inc
aas
movsl
cmp
push
pop
notb
mov
jge
bnd
mov
mov
jae
aaa
or
outsl
scas
loop
inc
sbb
outsb
mov
jge
inc
rorb
std
lods
or
sub
pop
sub
stos
imul
js
add
iret
cmpsl
xchg
aas
das
mov
shll
pop
xchg
movsb
aaa
xorb
xor
shll
mov
leave
pop
xchg
cmp
enter
cs
imul
dec
mul
in
pushf
and
and
lcall
test
and
xor
out
push
jne
mov
sahf
outsl
xor
inc
or
int3
ficomps
movsb
jg
jge
push
xchg
loop
pop
and
leave
xchg
je
mov
xlat
cltd
stos
aad
add
jne
xor
test
jg
sbb
cli
adc
dec
dec
aaa
xor
gs
ss
push
push
icebp
inc
imul
lcall
push
adc
mov
or
jecxz
pop
and
dec
pop
and
fwait
cmpsl
push
mov
push
sarb
rorl
ds
fdivs
aaa
lret
dec
mov
mov
sbb
xchg
jnp
mov
out
dec
and
pop
sub
inc
jp
inc
insl
test
add
rcll
ss
out
cli
push
mov
daa
lcall
cld
addr16
pop
outsb
nop
inc
sahf
mov
sbb
pop
cltd
dec
mov
inc
cmpsl
inc
jo
aam
mov
into
insb
mov
adc
jl
dec
movsb
jns
add
cmpsb
or
adc
sub
push
mov
repz
sub
addr16
clc
pop
lds
sub
fnstenv
in
adc
test
and
mov
mov
adcb
aas
mov
jno
xor
into
lea
xor
jmp
push
mov
in
gs
cmp
pop
testb
mov
sahf
cmpsl
inc
fcmovnu
mov
outsl
into
imul
pop
shll
aam
movsb
aad
imul
add
das
mov
pop
sbb
popf
and
dec
push
mov
nop
outsb
mov
add
lods
insb
stos
sub
ds
rorb
cli
out
lods
jmp
pop
inc
push
xor
sbb
add
mov
test
sub
repnz
insb
cld
out
xchg
jl
test
adc
sub
xchg
ljmp
cmp
jne
xchg
sahf
pop
xor
sbb
or
lret
stc
fsubrl
sbbl
dec
or
test
lea
sub
fildll
insb
call
adcb
in
shrb
or
sar
loope
pop
gs
adc
out
or
enter
mov
cmc
lret
sub
pusha
loopne
dec
add
inc
icebp
or
cwtl
sub
rolb
js
cmp
in
test
adc
mov
push
cmpl
clc
jnp
outsb
push
pop
jnp
xor
std
cmp
add
inc
and
cmpsl
xor
lahf
push
and
mov
mov
jb
mov
into
xor
loope
mov
add
cmp
in
pop
pop
icebp
jl,pt
jbe
sbb
cs
cli
dec
imul
jmp
pop
sahf
sub
mov
xchg
inc
loop
call
push
mov
data16
lret
movsb
cld
push
adc
lods
call
test
or
mov
inc
call
push
pop
jmp
push
push
fnstsw
arpl
gs
test
fwait
les
in
xchg
xchg
mov
outsb
add
bound
mov
pop
shll
sub
dec
in
dec
sub
enter
in
mov
js
repnz
sub
mov
xchg
cmp
inc
xchg
jo
inc
bound
fsubrp
fdivp
popa
dec
xor
ja
sahf
pop
jne
xchg
addr16
out
jne
cmp
sbbb
mov
jns
push
mov
out
mov
mov
cmc
in
aad
sub
sub
lods
mov
mov
dec
int3
es
outsl
push
test
lds
cltd
jb
xchg
pop
xor
xor
push
mov
ja
mov
jl
jnp
pcmpeqd
or
or
mov
out
out
aam
mov
push
jmp
iret
fistps
inc
scas
jb
daa
inc
int
cld
dec
popa
repnz
aad
inc
jl
lea
sbb
xchg
jo
mov
nop
aam
dec
xchg
jge
mov
xor
loope
and
rcl
inc
inc
popa
cmpl
int
mov
in
loope
add
pop
gs
dec
pop
xchg
outsl
pop
outsb
sub
jp
ljmp
push
sarl
mov
cmp
add
dec
sbb
ds
popa
fs
out
ss
into
loop
or
jne
movsb
push
ljmp
insl
out
sub
inc
jne
int3
jae
jg
mov
cmpsl
out
lea
das
xchg
dec
inc
sbb
sbb
push
jmp
fimuls
popf
arpl
mov
sti
test
jp
push
lods
cmpsl
ja
mov
outsb
arpl
arpl
and
loop
lods
cmp
pop
add
test
inc
push
repnz
pop
xchg
push
movsl
sub
ljmp
repnz
jecxz
sub
pop
outsl
pop
cmp
xchg
out
les
jae
lods
push
pop
cli
xchg
dec
add
movsb
and
test
test
test
mov
ljmp
xlat
jne
and
push
pop
aas
add
dec
rcrb
mov
push
mov
push
insl
outsl
aaa
cmp
inc
push
imul
iret
sub
xchg
mov
cltd
push
call
out
ljmp
pusha
cmpsb
les
lock
jo
cld
sub
pop
mov
mov
ds
popa
and
mov
dec
jb
repz
and
leave
sbb
orb
jge
sub
xchg
mov
rcrl
and
ret
jle
movsb
mov
lret
shrb
and
jmp
mov
aad
jecxz
nop
lcall
lahf
add
ret
cmp
xor
dec
dec
lret
into
xor
push
outsl
test
fbld
stos
mov
lret
ss
imul
and
add
jg
in
out
and
push
mov
stos
fstpl
stos
roll
jb
repz
xchg
xchg
inc
cmp
sahf
jge
mov
or
es
push
icebp
jmp
push
jmp
or
daa
sbb
xor
xchg
adc
sbb
mov
hlt
fs
xor
mov
rcll
mov
lock
push
mulb
push
sub
xchg
cmp
pop
pop
outsb
nop
xchg
iret
mov
jmp
cmpnltps
cmp
sub
mov
incl
scas
pop
lcall
cwtl
test
push
mov
mov
sbb
sahf
jg
pushf
lods
adc
pusha
ss
cwtl
cmp
mov
pop
xchg
out
js
push
daa
add
xchg
jb
mov
and
mov
xchg
inc
dec
loope
divl
xor
fisubrl
les
pop
or
nop
loopne
rcrb
mov
arpl
arpl
lret
call
loope
cmp
cmp
or
push
or
data16
popa
outsb
mov
jne
adc
xrelease
push
fsubr
ret
jl
ret
sub
sbb
mov
push
pop
push
jmp
dec
cld
xchg
adc
push
mov
mov
xchg
mov
mov
mov
clc
nopl
imul
loope
mov
leave
add
xchg
ds
in
xchg
gs
test
loop
lds
rolb
adc
mov
cmp
sarl
and
leave
fiaddl
jmp
call
or
je
mov
rclb
inc
fisubl
pop
lds
scas
push
sbb
es
icebp
inc
jnp
loope
repnz
rcll
add
mov
outsl
push
stos
xchg
sub
data16
dec
rcrb
add
jge
mov
sbb
test
adc
dec
in
mov
add
and
sbbl
sahf
rcll
adc
icebp
mov
std
ss
sub
push
mov
mov
out
pop
lcall
stc
bound
filds
or
mov
adc
or
sarb
inc
stos
push
ss
push
ss
insl
mov
cmpl
f2xm1
xchg
fidivrs
cmpsb
daa
xchg
shrb
mov
xchg
mov
in
inc
push
jae
push
mov
pop
test
mov
mov
fsts
dec
ss
aam
fidivrl
je
fwait
jnp
mov
mov
icebp
mov
mov
pop
pop
mov
xchg
rol
movsb
pop
fbstp
add
sbb
or
push
push
icebp
pusha
sub
push
add
mov
rcrb
mov
and
pop
inc
fbstp
cmp
and
lods
jle
or
fsubrs
xchg
ja
imulb
test
stc
js
mov
and
jl
cld
sbb
cmpsb
nopl
mov
mov
adc
mov
and
fsubl
lods
lea
sbb
adc
mov
ret
rol
jno
shrb
and
pop
add
mov
cmp
mov
ds
push
popa
add
cmp
push
hlt
addl
enter
addb
push
push
inc
lret
xor
pop
out
mov
sub
shl
sti
add
pxor
inc
cmp
xchg
pop
jecxz
fldenv
sbb
int
stos
mov
push
push
jae
and
or
cmp
aad
stos
sbb
pop
insl
lret
sbb
pop
dec
adc
inc
leave
sbb
jle
in
push
mov
arpl
mov
adc
sbb
cmp
or
popa
clc
ds
push
insl
or
and
lock
jbe
movsb
cs
xchg
ficompl
fsubrs
test
leave
mov
mov
insl
lcall
loopne
xor
insb
cmpsb
cltd
mov
nop
jge
jl
fmull
pop
mov
push
push
add
pop
repnz
inc
xlat
pop
mov
inc
xor
hlt
icebp
in
nopl
mov
xchg
enter
push
ret
ds
dec
and
fs
call
pop
fstps
jp
xchg
je
mov
mov
lcall
adc
das
dec
rorb
cwtl
mov
sbb
lock
xchg
jl
mov
fdivrs
mov
in
or
sub
out
jo
push
les
jno
insb
push
lds
cmc
mov
or
jnp
lahf
idiv
cwtl
cmp
int
pop
in
mov
popa
adc
arpl
mov
xchg
sub
daa
dec
xchg
dec
mov
inc
xlat
mov
push
cltd
jne
xchg
mov
and
adc
sbb
addr16
xchg
jae
les
out
dec
or
and
bound
movsl
mov
ja
insl
out
stc
pop
mov
lock
mov
rcr
xchg
imul
push
pop
fmuls
mov
popf
jo
or
jbe
xchg
jle
jge
outsb
mov
adc
xchg
loopne
ret
gs
sub
incb
out
lahf
ds
cltd
sbb
xor
and
sbb
repnz
fbstp
stc
testb
gs
cmpsl
adc
jbe
cmp
cmp
and
dec
xor
pop
cmp
add
mov
and
fsubl
xchg
push
or
test
jl
sub
sbb
leave
xlat
and
fs
ficoml
xor
mov
adc
mov
hlt
sub
inc
scas
call
dec
jnp
push
inc
add
test
inc
in
xor
pop
orb
cld
sub
in
push
mov
jnp
pushf
pop
lds
cmp
xor
pop
push
mov
cmpl
xchg
out
inc
xor
out
ljmp
repz
dec
stos
movb
pop
fcomi
adc
rol
jp
loopne
jmp
cmpl
xor
stos
in
call
ljmp
sub
pop
adc
push
or
jae
sub
adc
test
daa
daa
cmc
adc
ret
fsubrl
push
insb
cmpl
stos
xchg
add
mov
mov
adc
push
or
add
daa
into
andl
jb
daa
mov
icebp
imul
lods
outsl
pushf
mov
outsl
lods
cmp
xchg
push
mov
xor
add
call
mov
stos
enter
mov
xor
sbb
jge
xchg
shll
mov
push
loope
jno
js
arpl
test
mov
ret
xchg
imull
leave
push
popf
sub
into
lcall
cwtl
mov
pop
push
inc
test
cmp
fwait
pusha
lcall
int3
or
sbb
or
sti
add
ror
push
sub
pop
mov
adcb
sub
jb
jne
test
push
xchg
repnz
test
mov
dec
testb
sti
imul
stc
push
int3
mov
jmp
orb
lock
mov
lods
aaa
push
in
jnp
xor
xor
jbe
lds
enter
adc
ljmp
mov
xlat
fdivrp
and
or
dec
adc
dec
lret
pushf
dec
pushf
cvtdq2ps
cmp
lock
out
aam
inc
mov
and
push
cli
xchg
or
cs
push
fs
xchg
adc
lea
insl
int
add
mov
jecxz
rcrb
mov
jle
jns
call
xor
ja
push
and
int3
fmuls
lods
sub
imul
test
stc
fsts
mov
cmc
and
xor
cmp
sub
lds
push
pusha
jg
jae
loop
and
pop
lcall
pusha
mov
sub
lret
testl
outsb
add
ja
mov
mov
scas
fs
and
mov
test
loop
xor
push
mov
out
xor
xchg
cmp
aas
scas
lods
loopne
jno
lds
jb
in
xchg
adc
jge
popf
cmp
ja
dec
or
popf
rcrb
push
out
dec
adc
inc
cmpsb
enter
out
xor
aam
sub
dec
stos
mov
fwait
jecxz
jae
cmp
icebp
jo
les
jmp
insb
rolb
repz
pusha
jbe
icebp
cmp
outsl
test
or
shl
js
shrl
jmp
xor
scas
dec
jecxz
sub
jmp
jne
repnz
insl
call
in
mov
or
xor
movsb
fs
fsubr
adc
push
lods
push
insb
or
mov
popf
out
jns
loopne
bound
jo
fyl2x
add
add
dec
mov
lea
out
xchg
xor
inc
push
lea
pushf
cmp
mov
or
mov
adc
adcb
adc
inc
stos
das
jecxz
out
popa
pusha
mov
adc
add
adc
sbb
dec
ss
fisubs
jno
sbb
pusha
scas
fldenv
fisubrs
std
sub
and
fs
movsl
repnz
fsubl
sub
xor
inc
fisubrl
aam
mov
rcrb
mov
sbb
xor
sar
cmp
shlb
jmp
sbb
xchg
ret
test
inc
push
jg
mul
dec
test
mov
push
or
mov
shrl
mov
or
cli
pop
xor
jge
xchg
cmp
inc
push
in
fwait
jle
xor
aas
movsl
loope
mov
push
mov
ret
sub
sbbb
push
mov
push
addr16
mov
mov
stos
adc
jne
inc
outsl
push
jae
ja
stos
aam
fcoml
sbb
aaa
loop
inc
xchg
push
push
clc
dec
cltd
inc
pop
adc
mov
mov
repz
aam
rcr
xchg
and
or
pop
lret
loop
mov
sub
mov
popa
sarb
imul
inc
mov
xor
iret
cltd
pop
ret
addr16
and
add
sbb
test
adcl
pop
push
insb
sarl
sub
xor
es
mov
stos
js
jnp
pop
dec
repz
imul
fwait
es
rclb
in
stos
sarl
add
inc
or
rorb
test
repz
rorb
mov
push
mov
jo
in
mov
dec
adc
stc
nop
xor
pusha
test
fwait
bound
mov
jbe
cs
test
inc
adc
jl
add
xchg
jns
push
jnp
or
inc
fbld
jne
sub
pop
sahf
push
or
push
outsb
stos
hlt
repz
test
das
xchg
shr
ret
andl
mov
icebp
cmp
int
pushl
repz
mov
ret
inc
cli
jne
outsl
xor
mov
sbb
mov
adc
cld
lcall
jbe
push
test
mov
into
gs
jmp
jno
sarb
or
repnz
sub
test
xchg
sub
add
sub
dec
cltd
inc
cmpsl
std
cmp
addl
ja
inc
js
pop
and
mov
ret
lds
lock
ja
lret
arpl
xor
xor
pop
mov
mov
icebp
js
and
test
es
mov
mov
xor
add
sahf
ds
xlat
pop
es
adc
adc
dec
sub
jo
loope
mov
mov
jp
mov
fnstenv
imul
mov
fildl
or
pop
in
cmp
scas
ljmp
cmp
dec
dec
inc
and
popa
push
add
sbb
out
fists
cmp
push
fnsave
push
mov
xchg
mov
add
xor
sub
icebp
mov
mov
subb
lcall
mov
lock
jmp
xchg
or
dec
movsb
dec
int
pop
dec
iret
lods
aad
arpl
mov
jb
push
inc
pushf
adc
pop
xor
fs
cld
jnp
push
cmp
dec
std
leave
push
outsl
out
imul
cwtl
gs
repz
xchg
xor
ret
jns
cmpsl
lret
xor
mov
or
push
std
ss
xor
cmp
jno
xlat
inc
push
pop
mov
in
dec
mov
xchg
dec
mov
or
sub
pop
imul
inc
mov
pop
in
test
inc
ljmp
inc
pushf
lods
jle
ljmp
or
mov
push
aas
addb
push
push
into
jns
sti
jb
adc
mov
xchg
in
cltd
or
lods
popl
nop
add
dec
arpl
pop
into
jg
adc
loopne
adc
jg
loop
pop
inc
in
xchg
lods
adc
lret
lret
lret
mov
push
shlb
fcomps
in
pop
mov
inc
or
divl
fstpt
push
push
jge
pop
sbb
imul
in
arpl
jb
aaa
fwait
mov
cli
xor
in
push
or
movsb
stc
loop
daa
movl
mov
fcomp
and
jns,pn
inc
mov
cmp
lods
js
repz
lcall
push
push
in
inc
jb
lods
sbb
adc
in
mov
jae
mov
cmc
push
orb
mov
rolb
js
mov
add
nop
hlt
addr16
stc
mov
sahf
in
push
mov
push
daa
sbb
ret
jp
pop
or
repnz
fxch
adc
rol
sbb
pop
jmp
iret
sbb
int3
andl
lret
xchg
outsb
sub
xor
sbb
out
sbb
int
or
mov
lret
push
dec
cmc
pop
jle
ja
mov
or
jnp
dec
js
mov
jno
gs
aad
mov
jle
aam
add
adc
std
dec
aad
fsubrs
inc
loopne
sti
adc
dec
jge
mov
hlt
mov
dec
fwait
clc
int
shrl
fidivrs
pop
cmp
mov
mov
xor
and
hlt
mov
stos
adc
sbb
xor
add
jmp
xchg
in
ret
xchg
sbb
int3
int
inc
movsl
fs
or
jg
cwtl
repnz
mov
xchg
xchg
dec
enter
inc
sbb
xchg
jmp
or
jl
push
outsb
dec
dec
repz
pop
xlat
sbb
add
jge
fbld
mov
mov
mov
test
push
push
insb
mov
sub
mov
and
adc
or
mov
pop
lock
jmp
or
xor
incb
or
jns
xor
aas
xchg
mov
inc
sahf
inc
les
stc
fisubl
or
fidivs
fistpll
sbb
jmp
mov
sbb
xchg
aaa
inc
stc
in
clc
in
add
jo
daa
add
or
fisttps
mov
ja
nop
dec
nop
jl
lret
rcrb
shll
inc
sahf
icebp
cwtl
jb
repz
jnp
imul
dec
std
fwait
ret
and
add
inc
sub
rcrl
jp
mov
andl
sahf
push
sahf
sub
dec
das
xchg
push
insl
inc
xchg
sbb
adc
xor
jne
cwtl
and
inc
ds
jns
mov
or
or
sarb
in
push
mov
or
out
test
gs
or
lods
push
clc
inc
loop
aaa
or
cli
test
nop
clc
push
dec
clc
sub
repz
cwtl
xchg
test
jo
mov
rcrb
inc
out
or
and
ljmp
adc
imul
push
stos
addr16
pop
jo
push
shll
movsb
jno
adc
sbb
cltd
test
dec
mov
xlat
jnp
sub
fisubrs
fucomip
fstl
cmp
jge
lock
jbe
mov
jnp
imul
push
or
ss
push
jl
out
mov
sbb
pop
cli
cmpb
sbb
or
rep
iret
xlat
xor
jnp
clc
sub
or
in
shll
mov
adc
lcall
leave
retw
pop
xor
sub
inc
out
pop
push
popf
mov
push
mov
mov
es
or
jle
pop
mov
mov
out
shll
fcmovb
arpl
out
bound
cmp
int3
inc
fildll
or
bndstx
das
jns
push
xor
jb
sub
in
ret
out
xchg
or
fidivrl
mov
rol
lcall
imul
loop
imul
in
pop
es
mov
add
dec
outsb
enter
mov
xchg
push
outsb
cmp
lahf
lea
jl
ret
mov
push
js
cmpb
push
in
push
lods
outsl
nop
cmp
mov
and
mov
les
loope
inc
out
repz
negl
arpl
aas
addl
push
es
push
adc
jge
ror
repnz
test
into
mov
stos
repz
dec
dec
mov
in
cmp
fcompl
inc
adc
mov
jne
sahf
cmpsb
lock
shll
add
jg
or
or
xor
pop
sahf
inc
xor
xchg
jmp
es
sbb
xor
mov
loop
sub
out
mov
cltd
mov
and
mov
mov
iret
loop
mov
out
aad
loopne
aam
rolb
out
mov
xchg
dec
lret
lret
test
sbb
and
iret
sti
out
lea
aas
push
out
aas
fadds
test
shrb
and
mov
push
mov
cmp
mov
inc
lock
jne
inc
sahf
cmp
mov
push
data16
data16
scas
fisubrl
sbb
cmp
pop
sbb
iret
jnp
xor
adc
push
mov
cmpb
insl
cmp
iret
fiaddl
adc
jle
insl
add
push
int3
pop
out
xchg
fdivr
decl
pop
fcmovbe
rclb
jp
xorb
jl
lret
fimuls
sbb
movsb
in
mov
test
mov
pop
fisubl
in
jle
popa
jmp
pop
es
xor
fwait
iret
dec
push
mov
inc
js
sti
test
icebp
sbbb
xor
xor
adc
dec
cmp
nop
xor
pop
shrb
jae
sbb
dec
dec
adc
scas
fidivrs
jecxz
xor
or
pop
inc
ret
jmp
xor
cltd
sbb
xchg
sti
aam
sarb
cld
mulps
mov
xchg
in
je
jns
in
dec
cmpsb
dec
push
testl
xchg
sub
out
adc
mov
inc
jmp
jne
jge
jns
nop
sub
mov
movsl
adc
arpl
xchg
loopne
sbb
jmp
push
sub
jb
jecxz
ret
jbe
ss
loope
outsl
inc
mov
stc
add
mov
jb
and
out
mov
dec
mov
fwait
adc
mov
lcall
out
push
ljmp
jno
outsl
xchg
fwait
xor
nop
movsb
pop
push
imul
incb
mov
in
pop
das
add
jl
mov
xchg
sub
lret
jo
xchg
jp
inc
out
xchg
mov
jnp
dec
arpl
jecxz
lods
mov
out
mov
sti
lea
pop
lahf
adc
inc
dec
ja
jp
insb
int3
arpl
ss
cmp
int3
xor
mov
mov
adc
jne
xchg
imul
int3
lock
and
jp
rcrb
repnz
pop
inc
push
pop
pop
testb
jge
push
adc
dec
out
push
nopl
aam
add
mov
mov
test
insl
dec
and
test
push
sbb
icebp
jge
icebp
sbbb
scas
inc
dec
push
sbb
lret
bound
xor
std
mov
lods
mov
fnstenv
rclb
mov
pop
out
icebp
cwtl
sahf
lods
stc
adc
fidivl
out
add
sti
xchg
sub
enter
sub
and
add
xor
out
bound
and
pop
sub
int
popf
ds
jmp
jbe
loop
or
push
and
mov
push
movsb
add
in
std
mov
cmpsb
or
fildl
push
and
insl
add
das
jecxz
cmp
in
pop
roll
sub
sub
divl
xchg
in
xchg
and
mov
mov
cmp
xchg
test
xor
push
mov
fwait
jnp
insl
ja
pushf
and
mov
aas
test
les
dec
out
mov
repz
outsb
xchg
push
mov
adc
or
jae
and
js
dec
mov
mov
dec
movsl
xlat
sahf
mov
jb
leave
sub
stos
inc
mov
lods
rorl
scas
inc
adc
out
mov
repnz
pop
or
jle
jle
inc
and
or
sbb
fdivrl
push
out
fs
test
out
jbe
cmp
push
incb
int3
jl
jnp
inc
pop
or
add
mov
jne
jmp
xchg
xchg
loopne
xchg
adc
movsl
inc
movups
xchg
or
push
mov
dec
jp
jecxz
cmp
lahf
pop
stos
mov
scas
mov
cmc
mov
jae
pop
movsl
jns
pop
xor
mov
sbb
or
mov
mov
orb
adc
ja
mov
and
daa
sti
sti
int3
xor
push
sahf
testl
test
sbb
dec
xchg
fxch
dec
scas
inc
clc
push
dec
les
push
mov
cmp
lea
addr16
pop
xor
es
jno
inc
push
sub
cmp
clc
xor
cmp
repnz
pop
inc
loop
test
imul
xchg
sbb
xchg
xchg
adc
fldenv
dec
fidivs
fiadds
mov
or
mov
sub
jnp
or
mov
mov
dec
out
pop
inc
shll
mov
mov
lea
clc
push
sub
jle
aad
rcll
lea
pcmpgtd
add
sub
add
xor
mov
clc
xchg
mov
jmp
insb
insb
push
cmpsl
mov
lret
push
push
push
loopne
xchg
scas
mov
mov
adcb
cmp
push
xor
sahf
xor
outsb
mov
and
jl
rorl
loopne
and
lods
xor
ret
and
adc
popa
xchg
xchg
lret
lea
pop
add
outsb
das
sub
fimull
shlb
arpl
adc
mov
jo
pop
xchg
push
in
pop
dec
adc
add
adc
inc
fildl
movsl
mov
xor
xchg
adc
in
insb
scas
imul
sbb
nop
subl
dec
rclw
les
sub
mov
mov
das
mov
inc
xor
dec
aaa
or
insl
pop
mov
hlt
push
lds
imul
fidivrl
adc
mov
loop
add
rcrb
push
xchg
xorb
cmpsl
or
data16
sub
mov
loopne
add
fs
into
divl
je
inc
dec
xor
shrb
hlt
pop
in
mov
fdivrs
repnz
cld
lcall
imul
add
and
inc
mov
addr16
iret
fimull
dec
mov
dec
rcrb
stos
jns
popa
dec
icebp
adc
adc
flds
shll
cmc
out
xlat
xor
adc
aas
shl
das
cltd
mov
mov
or
mov
add
sbb
adc
mov
jle
xchg
jle
cld
aad
sub
fnstenv
cmp
aad
adc
xor
mov
and
testb
dec
fbstp
data16
jo
test
enter
inc
pop
xor
fdivrs
xchg
sub
xchg
scas
dec
lea
shlb
pop
jl
ss
fdivp
jp
mov
fs
mov
in
jmp
dec
mov
and
das
push
jle
inc
in
sbb
test
subb
xchg
fidivrs
add
imul
in
xchg
pop
test
scas
pop
stc
mov
aad
dec
add
out
andb
jbe
ss
int
xchg
add
jne
or
in
jae
out
jg
rcrl
and
xchg
pop
push
add
in
test
xchg
dec
jge
lret
pusha
repnz
pop
out
cltd
push
movsl
or
or
sub
jmp
faddl
sbb
sbb
pop
cmp
pop
sub
int3
jge
fcmovb
out
adcl
imul
and
adc
sbb
push
jp
jb
xor
testl
scas
jmp
pop
push
mov
jg
jae
in
das
push
inc
mov
sti
and
push
push
sub
pop
lock
sbb
out
pop
mov
in
out
and
or
inc
jno
mov
fdivl
in
mov
pop
daa
and
mov
xchg
jp
inc
cmpsb
mov
xlat
mov
push
pop
cmc
xchg
pop
mov
in
call
imul
mov
cli
xchg
mov
in
sbb
jne
and
sbbb
dec
arpl
cmpsb
scas
mov
lods
popf
mov
pusha
testl
jle
xchg
lret
hlt
in
xlat
lcall
mov
dec
adc
fildll
xor
inc
add
or
dec
add
mov
dec
sub
sub
jge
jmp
sbb
or
mov
lret
pop
inc
xchg
out
jp
loopew
add
sub
jnp
addb
push
sbb
and
push
xchg
scas
scas
out
decb
cmp
jne
testb
or
push
jg
movsl
cmp
adcb
mov
filds
lods
gs
lret
mov
fistpll
iret
fmull
xor
lret
cmp
sub
push
mov
xchg
sub
sbb
test
dec
subl
cld
jno
push
inc
cld
sbb
push
mov
les
push
mov
push
loop
adc
mov
sub
cmpb
loope
pop
xchg
lods
pop
mov
adc
idivl
adc
mov
jg
inc
leave
jae
sbb
xor
sbb
inc
fsubl
sub
insl
cld
pop
mov
subl
aam
mov
addr16
xchg
call
loopne
outsl
push
sbb
jbe
dec
shrb
and
sti
insl
jge
cmp
mov
dec
xor
mov
insb
lds
or
cmpsl
mov
sbb
aam
clc
out
pop
aad
jmp
aas
and
add
imul
hlt
cmp
xlat
aaa
push
xor
bound
filds
dec
stos
lods
pop
push
imul
test
and
pop
test
repz
add
movsb
dec
jne
dec
cmpsl
insb
imul
mov
in
jmp
out
xchg
push
stc
mov
data16
jle
xor
enter
fidivrl
or
mov
xchg
js
scas
pop
addr16
push
mov
arpl
cmp
testl
and
subb
pushf
mov
pusha
mov
jb
add
mov
clc
xchg
into
imul
xchg
cmp
addr16
fs
fimull
xchg
cwtl
std
sub
enter
mov
mov
xchg
out
xor
loopne
cli
in
lcall
push
stc
sbb
push
and
gs
inc
lcall
enter
lods
cmp
into
xor
int
cmpsb
xor
insl
add
jb
jnp
cmp
pusha
jmp
jns
or
int3
sbb
adc
ljmp
xchg
pusha
iret
inc
lahf
repz
dec
push
mov
enter
sbb
xchg
xchg
test
je
dec
pop
addb
fiadds
imul
lods
mov
jae
in
cmp
fcomps
out
add
inc
icebp
addr16
icebp
cmpsl
xchg
cmp
frstor
test
inc
inc
mov
jnp
jns
loopne
stc
jp
jb
mov
popa
fisttpl
cmp
push
rcr
stos
into
push
pop
stos
fdivrl
mov
les
incl
test
xor
lock
hlt
or
lret
inc
aad
mov
mov
iret
jb
lahf
inc
mov
add
adc
test
out
mov
mov
and
lret
xchg
fstp
or
sbb
mov
daa
data16
imul
mov
fsubl
push
fisttpl
push
pop
or
xor
and
imul
fwait
ret
loopne
xchg
cmp
adc
hlt
leave
pop
cwtl
push
mov
arpl
push
int
cltd
fidivrs
jne
pop
dec
lahf
jns
out
loopne
es
in
sbb
out
xchg
sahf
dec
divb
jp
lock
nop
dec
and
loop
xor
in
and
in
test
jnp
and
enter
es
outsb
inc
xchg
sub
pushf
jp
ret
adc
adc
pop
and
divb
cmp
dec
cmp
inc
sbb
popf
push
push
jno
mov
add
pop
add
push
sub
out
mov
add
or
pop
sub
sub
cmp
adc
out
repnz
imul
fsubrl
fldt
inc
fwait
int3
jl
into
mov
push
cmc
and
add
dec
sbb
adc
push
push
test
les
std
cmp
push
push
inc
pop
mov
popa
mov
inc
popa
cmp
add
xor
repz
sbb
sub
xchg
in
jl
inc
push
aad
jmp
data16
dec
and
push
xchg
sub
xor
lret
cmp
lcall
gs
pusha
mov
push
mov
mov
cltd
mov
xor
addr16
jp
stos
mov
arpl
imul
lods
mov
mov
sub
cs
test
pop
scas
inc
cmpsb
push
fidivs
pop
push
lods
nop
not
mov
js
sbb
jbe
idivl
xchg
insb
and
or
xchg
popa
iret
pop
cmp
pop
mov
int
mov
out
add
loope
mov
dec
xor
fisttpl
xor
inc
test
mov
adc
aas
mov
ret
test
fisubl
push
xchg
mov
mov
dec
insb
xchg
mov
dec
pop
rcrb
cmp
xor
mov
sarl
jmp
shrb
adc
sar
add
jnp
xor
pushf
and
rolb
sbb
cli
test
and
popf
cwtl
int
fbstp
inc
pusha
jmp
subb
stos
xchg
lods
sub
fnstsw
popa
xorl
add
inc
inc
or
mov
sub
xchg
rorl
xor
out
pop
dec
xchg
xor
cwtl
add
pop
lahf
arpl
and
mov
test
cmp
jae
jle
scas
scas
mov
insl
add
xor
jecxz
pop
mov
and
sbb
xchg
ljmp
push
pop
insl
xchg
adc
ja
out
outsl
add
in
fs
mov
mov
cmpsl
sar
addr16
mov
fsubrl
mov
push
jl
jae
sub
add
aaa
into
stc
cli
push
call
ret
int3
fsubrp
add
inc
add
push
adc
sbb
or
mov
push
mov
and
aam
scas
out
or
lahf
ss
mov
in
fisttpl
mov
rcll
cmp
jl
mov
out
mov
push
cmp
roll
lea
scas
outsb
and
xor
add
sbb
sbb
jbe
xor
shlb
xor
inc
or
fldt
adc
outsl
ret
add
in
out
sbb
cmpsb
pop
ret
xchg
data16
sbbb
mov
icebp
insb
jg
ret
mov
xchg
add
cli
jae
adc
add
mov
and
and
popf
pop
mov
sbb
sti
jnp
sub
and
cltd
lock
lods
fs
cld
pushf
adc
jmp
push
lahf
push
int
aas
sarl
imul
adc
add
cmpsb
fdiv
lods
test
loopne
mov
sub
cltd
add
nop
xor
fsts
scas
or
xchg
xlat
test
lret
fwait
gs
pop
jo
int3
stc
aam
sub
sahf
repnz
dec
dec
mov
sahf
loope,pt
inc
popf
ja
sbb
add
test
fsubr
pop
xchg
inc
sbb
push
add
ds
jge
xor
or
test
mov
xor
xchg
inc
or
sub
scas
jnp
loopne
mov
shrl
scas
stos
push
lea
mov
fwait
and
and
lds
xor
inc
js
cmpsb
and
nop
mov
inc
sub
inc
add
inc
fisttpl
add
leave
bound
and
sub
stc
ljmp
sbbl
lds
sti
into
gs
lahf
mov
mov
sbb
loope
jl
cltd
dec
nop
pop
lret
pop
jne
ljmp
cmp
stos
dec
mov
jno
adc
outsb
dec
popa
faddl
movsb
enter
jl
sahf
in
or
in
popa
jg
in
cmpsl
xchg
arpl
ret
lock
scas
in
pop
pop
fstp
jno
enter
scas
clc
or
jb
mov
enter
insb
out
add
mov
jl
dec
fstps
jo
ss
fistpll
adc
sub
xor
and
in
fldt
mov
or
repz
lods
xchg
sub
imul
xor
js
fs
dec
fwait
mov
sbb
addl
mov
dec
or
loopne
pop
push
lret
or
inc
loope
ljmp
push
jmp
movsl
cld
lds
loope
sub
arpl
adc
inc
sbb
out
pop
push
mov
stos
inc
into
mov
inc
sbb
or
in
jp
inc
xchg
out
ja
lods
push
dec
pushf
int
inc
dec
xchg
cltd
mov
aad
xlat
push
sti
pop
lret
pop
testb
xor
loop
mov
loop
pop
jmp
movsl
in
jbe
mov
in
lret
cld
loope
or
std
mov
pop
pop
aam
jp
jmp
jmp
mov
lahf
push
and
xor
movsl
subb
test
sahf
cmc
jo
in
dec
xchg
test
in
std
stos
mov
cmpsl
sbb
jne
lods
inc
adc
inc
xchg
xor
das
inc
clc
dec
loop
pop
xchg
lock
ret
out
push
jne
add
mov
stos
mov
cltd
arpl
std
mov
addr16
mov
je
sbb
xchg
add
imul
lock
pop
adc
mov
mov
iret
or
xor
pop
pop
imul
push
data16
rcrb
add
inc
negl
movsl
sbb
inc
pop
inc
and
mov
loop
push
and
mov
cli
dec
inc
push
push
int
in
ja
stos
ficompl
test
mov
xor
push
dec
lock
mov
add
xor
orb
bnd
mov
and
mov
xchg
aad
push
add
jl
dec
lods
xor
js
mov
mul
add
scas
jle
shll
arpl
push
nop
cltd
mov
jns
mov
shr
pop
les
ret
out
fisttpll
add
test
jae
insl
push
cwtl
jae
xchg
or
fiadds
cmp
xchg
aad
mov
push
movsl
insl
fldenv
movb
fcompl
arpl
fmuls
push
sub
shrb
cmp
mov
dec
sub
mov
outsl
das
iret
fldenv
jle
add
mov
adc
and
nop
push
cmp
add
fldl
stc
dec
mov
jne
sbb
mulb
lock
fcmove
test
stos
push
daa
add
int
mov
mov
shrb
xor
pop
imul
fwait
idivl
jns
lret
xor
and
push
movb
dec
cmp
cmp
int
cli
jl
or
test
mov
sbb
insb
xchg
or
adc
and
faddl
fcom
push
and
jg
xor
incl
jmp
mov
movsl
fcomp
and
movd
mov
pop
test
inc
sbb
je
ret
inc
js
mov
push
sahf
mov
popf
xor
popf
adc
cltd
add
add
jnp
mov
fldcw
add
jle
or
adc
adcb
inc
les
insl
inc
movsb
or
sub
jne
inc
xchg
add
push
scas
add
xchg
or
les
mov
dec
sub
repnz
cmp
sub
sub
and
cld
push
dec
xchg
adc
sti
pop
clc
and
xor
incl
pop
int3
jl
push
fwait
xchg
cmpsb
into
cmp
and
fisubs
push
bound
sbb
andb
mov
enter
sub
cmp
fwait
cwtl
jo
call
out
inc
jl
stc
shl
mov
sbb
mov
sbb
jmp
inc
sub
mov
inc
sub
mov
int3
pop
std
cld
jg
repz
int
push
fcoms
test
movsb
outsb
aas
inc
loopne
dec
mov
mov
jg
sbb
xor
imul
je
inc
xor
xorb
loop
mov
test
iret
jbe
test
or
jne
into
and
pop
push
mov
repnz
bound
xchg
mov
pop
cmp
or
out
jp
std
idivb
stc
mov
dec
dec
test
bound
rcrl
punpcklwd
mov
add
daa
jo
iret
scas
cmp
lods
inc
leave
fistps
andb
arpl
js
aaa
mov
jp
mov
aaa
loop
ljmp
call
shl
dec
ret
lock
ret
push
cmp
data16
jl
scas
shl
pop
add
xchg
sub
and
pop
pop
mov
insb
sub
inc
lret
mov
adc
in
int3
hlt
dec
or
loope
movsb
fwait
adc
cli
pop
push
and
push
sub
sbb
es
or
xorb
pop
or
shlb
sahf
or
cmpsb
adc
nop
pop
adc
cmp
adc
mov
ficoms
adc
mov
stos
inc
inc
aad
fdivrl
out
leave
mov
mov
fsubrs
mov
les
cmc
fwait
es
aam
push
scas
and
pop
aaa
push
push
adc
or
movl
hlt
pop
jae
scas
rcrl
pop
and
std
lods
jno
sahf
xor
push
mov
mov
lahf
into
and
out
jns
mov
xchg
sub
adc
in
arpl
and
and
cmpsl
pop
jo
cmpsl
rolb
inc
inc
test
iret
fldenv
and
testb
sub
scas
xchg
push
in
ret
dec
daa
fistpll
adc
lcall
data16
mov
fisttps
jbe
lods
jnp
mov
loope
hlt
xchg
mov
push
push
call
jp
lock
pushf
jle
mov
test
or
into
push
or
and
into
jg
loopne
jle
addr16
or
cs
and
xchg
scas
jne
xor
push
xchg
shlb
and
dec
jne
jle
cmp
scas
jl
sub
sub
dec
aam
mov
das
mov
notb
or
jno
orl
push
adc
xchg
aas
cld
or
cltd
movsb
push
inc
pop
test
xchg
cltd
mov
push
clc
into
or
scas
mov
add
push
push
pop
rep
add
inc
fucomp
mov
cmpsb
push
stos
and
outsl
push
pusha
stos
push
ja
nop
dec
cli
js
and
mov
popa
cmpsl
inc
or
fsqrt
sub
scas
lret
mov
test
ja
outsb
rorb
dec
pop
pop
jo
andb
setp
into
ljmp
cmpps
xor
popa
inc
lds
ret
pop
cwtl
pop
mov
cltd
add
xor
call
and
mov
dec
cmc
outsl
stos
mov
dec
popa
jg
test
sub
xchg
push
clc
jo
cmp
mov
adc
fs
arpl
call
pop
mov
subl
popf
ret
repz
es
out
lods
mov
fs
mov
mov
clc
cmp
mov
xchg
push
dec
insl
mov
sti
or
iret
xor
xor
sarl
sub
mov
in
mov
xor
shll
ja
xchg
cmp
test
lahf
lds
out
jecxz
mov
pop
jge
outsb
add
cmp
add
mov
xor
inc
stos
inc
fcoms
sub
inc
mov
imul
sahf
lods
pop
repz
sub
dec
pushf
repnz
cmpsb
mov
mov
sub
sub
dec
lock
loop
lods
xchg
ja
aad
mov
pusha
outsl
pop
push
and
push
mov
insl
imul
loopne
fnsave
cmp
mov
jl
sub
mov
fsubrs
push
fdivl
outsl
jae
shll
mov
ljmp
mov
fdivr
aas
mov
push
cmp
ljmp
push
daa
xchg
outsb
add
inc
mov
sbb
mov
mov
and
hlt
sbbb
inc
test
lods
fcomip
dec
testb
jge
cmc
pusha
ds
push
pop
cmpxchg
ret
js
xor
xchg
arpl
jg
fisttpll
adc
aam
fs
std
js
push
jge
cwtl
xor
xlat
inc
fst
fdivp
inc
push
mov
arpl
mov
push
mov
add
out
dec
dec
filds
jecxz
xchg
movsb
cmp
mov
mov
xchg
fidivrs
lods
pop
xor
cmp
stos
add
arpl
mov
hlt
int3
arpl
push
out
popa
inc
int3
ljmp
jo
xchg
fisubs
pop
rcl
cltd
fdivs
loopne
or
jmp
pusha
add
or
lods
mov
popf
add
xor
xor
mov
lock
testb
incl
add
xchg
inc
push
or
cs
or
dec
les
jp
pop
pop
mov
movsl
mov
imul
fbstp
inc
insl
test
in
push
into
aaa
cld
enter
sub
push
movsb
mov
leave
sbb
sti
fisubl
jge
dec
enter
insb
fwait
and
outsb
loope
fisubrs
push
sub
cwtl
pop
inc
cltd
sub
lret
divl
fisubs
movsl
and
or
mov
cwtl
arpl
xor
in
lcall
mov
ret
jmp
jle
rcr
xchg
mov
into
jbe
add
cmp
and
popa
push
fsubs
push
shlb
inc
xor
dec
xor
insl
fldcw
fdivrs
push
pusha
fisttpl
lods
inc
call
aaa
mov
cs
push
and
in
aas
dec
and
jmp
mov
xor
arpl
cmp
jns
enter
subb
mov
mov
xchg
xchg
xchg
inc
or
arpl
pop
xlat
ret
std
xchg
icebp
test
int
cmpsl
mov
fsts
sbb
or
pop
jnp
xchg
movsl
dec
iret
xlat
fidivs
insb
inc
adc
inc
cmp
cwtl
imul
add
jmp
std
sbb
mov
sbb
mov
xor
movsb
shlb
mov
bound
sub
addr16
cmc
cmp
mov
les
mov
hlt
pop
xor
fstl
mov
cwtl
cmp
jl
adc
jl
jl
cmp
movsl
nop
mov
inc
call
cld
int3
fcompl
pop
das
lahf
adc
fidivl
and
scas
ficoml
mov
sti
ss
adc
orl
mov
xchg
add
mov
fistl
mov
jl
cwtl
cmc
lret
mov
cmpb
clc
nop
loope
push
popf
loop
sbb
rcl
jecxz
dec
sahf
scas
pop
jne
stc
fs
pop
sahf
sub
and
pop
adcb
imul
inc
sub
mov
lret
pop
xor
and
mov
popf
cmp
push
mov
fcmovnu
mov
and
xor
jmp
es
fstl
out
inc
inc
js
int3
pop
sub
and
es
xchg
jg
jb
mull
or
adc
lds
stos
pop
xchg
dec
xchg
dec
stos
cmpsl
add
pop
xchg
clc
adc
hlt
push
push
or
and
mov
icebp
ret
loope
jge
xor
sbb
jg
fisttpl
lock
movsl
mov
scas
dec
test
loope
call
aam
xchg
mov
add
jmp
in
jno
push
jecxz
std
call
and
xlat
int3
addr16
fsubs
fnsave
xchg
jl
ja
pop
and
loopne
fisttps
jl
movsb
ja
add
fistl
xor
mov
shll
xchg
xchg
mov
push
mov
jg
pusha
mov
inc
and
jnp
stos
mov
jae
ljmp
mov
jp
gs
mov
or
aaa
call
or
cmp
inc
rcrb
cli
dec
mov
pop
int
dec
fbstp
dec
jmp
push
push
fs
pop
sti
push
push
cmpsl
add
sub
inc
cs
cmp
inc
jmp
add
xor
fsubl
push
jne
pop
inc
fisttpll
sbb
xor
lock
lcall
gs
inc
xchg
jmp
in
insb
xchg
xchg
jns
je
lds
or
mov
rol
lods
leave
xchg
dec
mov
pop
stc
xchg
cmpsb
mov
fs
sbb
mov
add
push
fwait
push
icebp
jae
pop
test
insb
fists
cmp
cmpsl
imulb
subb
shll
and
inc
jle
ljmp
mov
imul
push
jne
cmpsl
jb
icebp
xchg
movsb
test
mov
decl
rol
sub
fs
jne
sub
clc
xchg
sti
xchg
jmp
or
shlb
sub
test
push
xchg
sbb
or
daa
jecxz
call
sahf
lods
mov
cmpsl
addr16
nop
je
sub
jg
and
mov
dec
hlt
cmp
iret
repnz
repnz
aam
outsb
jmp
cs
je
dec
sub
dec
jg
stos
inc
call
xchg
aad
loop
fistl
fcoms
push
and
fwait
jmp
int
adc
push
mov
rcrl
fdivs
fstp
xor
jecxz
mov
add
mov
mov
shll
mov
xchg
push
and
mov
cltd
popa
adc
add
and
rol
test
xlat
mov
stos
stos
pop
mov
imul
mov
ret
xchg
inc
adc
movsl
mov
cltd
sbb
xor
dec
lahf
imul
icebp
push
push
mov
lods
das
pop
sub
mov
bound
cmp
decb
mov
ja
dec
stos
aad
leave
jns
mov
outsb
lods
mov
mov
test
das
cmpsl
adc
fcom
sbbl
xor
add
gs
push
mov
pusha
fsub
adc
ss
dec
jb
xchg
mov
icebp
sbb
in
cltd
cs
pop
mov
sub
cmpsl
je
aad
add
cltd
jno
or
cwtl
mov
repz
sub
adc
cmc
pop
and
std
xchg
insb
aam
lcall
and
push
enter
sbb
fwait
jae
outsl
push
push
aaa
mov
sbb
stc
addb
mov
push
mov
out
pushf
test
or
or
nop
xchg
jl
sub
jnp
xor
andl
call
das
rclw
push
jne
subl
filds
jnp
loopne
pop
cmp
or
call
cmc
jg
mov
inc
adc
insb
fnsave
pusha
bound
mov
sub
clc
stos
andb
aas
ljmp
inc
fcom
mov
pop
mov
mov
je
call
xlat
notl
roll
mov
in
push
test
xor
add
mov
shll
push
test
inc
dec
fdivs
mov
loopne
pop
mov
mov
jmp
mov
push
xchg
pop
icebp
or
pop
xchg
in
stc
push
mov
mov
mov
inc
imul
mov
cmpsb
call
pop
dec
jne
sahf
daa
mov
inc
push
test
in
or
inc
aam
push
xlat
scas
adcb
cs
xor
jmp
out
sbb
dec
fldl
push
or
cmpsl
sti
sub
xchg
mov
xlat
sti
fwait
xor
out
and
lahf
sarb
xor
mov
pop
fs
mov
or
in
les
sbb
in
add
adc
adc
pop
xor
and
mov
ds
sbbb
push
jmp
cmpsl
cltd
sub
repnz
cld
int3
dec
add
push
mov
jo
sbb
andb
xor
test
sbb
sbb
add
sbb
jmp
arpl
test
push
out
frstor
arpl
shlb
nop
stos
in
imull
out
sti
cmp
pop
mov
test
sbb
xor
or
call
sub
mov
push
mov
rcrl
int
ficoml
dec
clc
dec
or
sub
aas
imul
into
mov
mov
inc
jnp
fldenv
sbb
jno
cmp
sbbb
sbb
ret
cmp
popa
push
dec
mov
fxtract
jle
cmp
js
push
or
movsl
popf
xor
jecxz
push
cltd
jnp
subl
pop
repnz
xchg
and
pop
mov
call
popf
inc
and
fidivl
pusha
push
dec
pop
xchg
adc
mov
dec
rorb
sub
pop
icebp
into
jp
jbe
cmpsl
sbb
jo
pop
mov
insb
loop
nop
in
ret
cmp
inc
push
mov
stos
rcrl
lret
lret
test
cltd
inc
and
loope
lret
push
mov
adcl
add
mov
arpl
or
add
int
mov
push
inc
xchg
outsl
mov
mov
adc
movsl
clc
mov
or
inc
cmpsb
stos
mov
sbb
mov
adc
aam
ret
dec
repnz
cmpl
jne
push
push
push
sbb
jmp
pop
cmp
addl
sti
mov
pop
lods
outsl
daa
test
fnsave
push
stos
jg
adcb
leave
int
add
jno
dec
dec
repz
arpl
and
scas
fnsave
sub
and
jp
pop
cmp
cwtl
repz
loope
dec
out
xor
push
jne
lea
test
xor
xchg
cmp
push
cs
test
std
mov
xorb
leave
movaps
or
ja
shll
pop
mov
ret
mov
outsb
pop
sbb
add
int
push
xor
push
mov
adc
or
jmp
xor
fwait
push
jl
push
insl
cmc
sbb
sub
cld
or
sti
es
xchg
decl
mov
dec
imull
jmp
dec
or
test
mov
cli
mov
arpl
inc
fdivrs
jge
fldcw
stc
mov
add
mov
in
psrlq
aad
cmpsl
movsl
loopne
out
pop
mov
cmp
sbb
jnp
mov
aad
xor
lcall
inc
or
sahf
xor
call
lds
add
out
loopne
sbb
adc
xchg
lods
push
cmp
outsl
dec
mov
sahf
inc
xor
sbb
dec
iret
shlb
js
mov
lahf
pop
or
inc
xor
sub
pushf
push
inc
dec
sub
stos
jne
shlb
incl
pop
sub
insl
in
jo
cwtl
iret
inc
mov
aam
std
and
ret
cltd
into
adc
push
xor
mov
push
jnp
mov
ds
mov
ret
cmpsb
out
mov
into
pop
inc
inc
sbb
je
subb
pop
leave
mov
lcall
and
lods
loop
into
loop
inc
inc
add
and
rcrb
push
stos
js
shlb
mov
lcall
aad
pop
add
rorl
xchg
xor
dec
loope
out
inc
push
sbb
jns
mov
pop
ret
mov
sub
sbbl
cmpsl
orl
pusha
outsb
bound
xchg
into
cltd
jge
out
stos
mov
dec
rcll
add
mov
into
sbbl
cmp
sub
xor
mov
mov
xor
and
cmp
xor
add
sarb
add
pop
mov
je
jge
xor
dec
fimuls
imul
scas
bound
push
lods
and
pop
movsl
popf
dec
dec
push
cmpsb
push
push
roll
decb
push
lea
rcl
pop
sbb
push
enter
or
xchg
out
out
stos
mov
dec
dec
js
out
loopne
push
int3
sbb
push
int3
arpl
lret
call
pop
test
repnz
cmpsb
jecxz
inc
fimuls
lods
mov
add
sbb
lcall
cwtl
jp
imul
insb
or
cmpsl
out
jecxz
outsb
mov
ds
out
mov
push
xchg
xchg
scas
call
add
adc
cltd
cmp
aaa
inc
xchg
out
mov
cmp
fwait
mov
xchg
xlat
aas
push
hlt
xor
sub
push
add
add
rcrw
push
movsb
push
jmp
fistpll
xor
aas
dec
subb
xchg
mov
xchg
mov
inc
movsl
mov
test
test
pusha
mov
fstcw
push
or
lret
adc
or
mov
ja
cmp
scas
mov
xchg
mov
and
cmpsb
push
and
jne
loope
adc
jg
push
jno
mov
movsl
xor
mov
mov
loope
pop
loope
pop
add
gs
dec
int3
sub
gs
in
cmp
pop
ss
cs
or
loope
sbb
sbb
dec
cld
dec
mov
insl
sub
pushf
dec
sbb
divps
and
mov
movsb
mov
jns
push
test
mov
rcrb
ds
scas
dec
in
xorb
add
cwtl
sub
pop
cmp
cmp
mov
movsl
cmp
push
dec
jecxz
notl
lds
ja
test
into
movsb
cld
icebp
movsl
and
ds
sub
lds
add
adc
inc
or
push
cmp
cmp
insl
lret
in
push
push
inc
sti
adc
adc
mov
add
xchg
push
nop
sarb
or
loopne
jecxz
shll
dec
popf
add
pushf
lea
push
jb
dec
shrl
negl
mov
in
add
xchg
fs
pop
mov
xchg
aaa
mov
cmp
pop
sbbb
dec
mov
ljmp
pop
int3
mov
loope
mov
ss
cmp
mov
jns
and
jbe
addr16
loop
push
fstpt
lods
inc
xlat
xchg
call
pop
fnstenv
jp
jno
mov
mov
mov
iret
push
inc
aaa
ficoml
fildl
insb
test
mov
cmp
jecxz
scas
push
adc
subb
pop
test
shr
mov
ficomps
xlat
xchg
cmp
lret
jp
cmp
hlt
or
ljmp
or
mov
xchg
xchg
insl
hlt
dec
adc
cmp
xor
pop
std
shlb
sbbl
xchg
jge
xlat
subb
xchg
push
imul
adc
loopne
pop
cwtl
insb
les
ds
add
and
sbb
xchg
mov
insl
cmp
cmc
cmp
in
pop
dec
ss
jae
arpl
ja
add
dec
int
inc
jbe
xchg
jmp
stos
inc
sbb
mov
inc
mov
pop
cmp
dec
in
xchg
jno
flds
adc
sarb
int
or
pop
jl
adc
jmp
mov
jne
inc
fnstsw
aaa
ja
je
test
sub
sbb
adc
xchg
loope
cwtl
std
fmuls
and
inc
jmp
outsl
cld
lret
mov
add
mov
mov
adc
adcb
push
adc
insb
jno
mov
lret
or
ds
jno
mov
adc
cmp
adc
push
xorb
ja
fisubl
popa
sahf
js
stc
lods
lock
jbe
aas
sub
mov
out
sbb
call
xchg
mov
es
and
and
fwait
inc
sbb
xor
and
pop
scas
jb
xchg
or
dec
out
fldl
jb
in
sub
lcall
add
je
add
lahf
and
inc
sbb
add
xchg
mov
push
imul
xchg
inc
sahf
iret
mov
jnp
mov
add
jle
les
icebp
jnp
rol
inc
daa
inc
jns
push
test
jg
lods
test
int3
int
out
xor
movsb
inc
cltd
inc
rcrl
lcall
adc
data16
cmc
jne
adc
pop
sbb
sub
inc
stc
imul
xlat
mov
xor
add
scas
inc
in
stos
lea
mov
xor
hlt
cmp
ret
rcr
add
hlt
cmp
nop
push
and
mov
pop
add
adc
mov
sbb
rorb
ljmp
inc
aaa
out
xchg
popf
lahf
mov
adc
xor
mov
xchg
sub
movsl
clc
push
stos
cmp
dec
imul
mov
inc
sti
push
sti
push
pop
add
jle
and
mov
dec
int3
inc
adc
ja
imul
mov
mov
leave
push
int3
popf
and
xchg
mov
xor
xchg
gs
cmp
xchg
test
sub
fistpl
cli
adc
dec
nop
push
jecxz
jo
xor
shr
pop
iret
insb
jmp
es
out
sti
sub
ljmp
mov
shll
add
or
sub
cmp
lahf
mov
dec
sar
aaa
mov
movsb
xor
lea
inc
jae
mov
push
sbb
loop
inc
sbb
imul
mov
gs
ffree
lods
andb
cmp
cmp
adc
movsb
addr16
push
push
xchg
pop
ja
ja
clc
aas
sti
xlat
addl
test
ljmp
lock
mov
faddl
mov
pusha
and
mov
mov
add
mov
push
in
in
mov
movsb
out
xlat
repz
add
loopne
sub
add
pop
dec
or
cmp
xchg
jbe
sbb
or
mov
les
adc
push
ds
dec
repz
pop
jns
mov
mov
pop
out
pop
push
jbe
pop
push
dec
xchg
leave
jecxz
cltd
mov
pop
pop
sub
mov
inc
mov
int3
xor
cmp
jae
leave
gs
mov
arpl
sbb
push
push
cmp
ljmp
push
lds
fwait
mov
sub
pop
mov
int3
arpl
xchg
xor
pop
mov
xor
sbb
aas
shll
push
push
in
mov
inc
jno
inc
push
es
sub
pop
fldcw
fimuls
fildl
bndstx
push
adc
cwtl
out
xor
jne
jecxz
lods
fmuls
xchg
aad
push
cli
or
cltd
daa
xor
hlt
push
and
sub
xor
fbld
sbb
fwait
or
xchg
cwtl
pusha
enter
sbb
mov
scas
js
mov
sub
in
shl
inc
push
push
mov
cltd
ljmp
lock
xchg
jb
mov
loope
dec
sub
popf
jo
jb
stc
xor
add
and
leave
int
xor
cld
rcll
icebp
arpl
arpl
int
jg
mov
call
mov
subb
movsl
jge
add
outsb
mov
bound
cltd
ret
pop
or
movsl
es
xchg
rolb
rclb
push
and
push
xchg
cs
mov
mov
or
inc
enter
cmpsl
cmp
xchg
sbb
decb
int3
loopne
sub
cmp
cmpsl
data16
jbe
pop
idivb
sarl
lea
leave
sbb
dec
dec
pushf
adc
scas
sub
lock
sarl
mov
clc
je
cmp
dec
fsub
aam
xchg
mov
inc
aam
xchg
and
inc
xchg
cld
and
mov
cmc
cmpsb
jnp
xchg
leave
cmpsl
xchg
mov
xchg
sbb
xchg
es
add
mov
adc
jge
bound
repz
jl
mov
popa
mov
and
int3
lods
xchg
repnz
and
push
sahf
testl
fcompl
sbb
mov
mov
lock
or
sti
jbe
mov
test
or
mov
aam
aam
roll
cmpsl
xor
pop
decl
adc
outsb
dec
add
mov
or
cs
ljmp
test
clc
lret
push
mov
cld
and
dec
jl
pop
push
cmp
fwait
mov
test
pop
sub
xor
loope
mov
pushf
ss
adc
lods
dec
or
int
jns
and
or
push
mov
pop
sub
push
lcall
std
or
cmp
outsb
loope
fdivs
mov
js
jl
popf
hlt
pop
lea
jmp
xor
push
sub
adc
mov
bound
xor
cld
dec
jmp
mov
negb
add
mov
int
xchg
das
xor
add
aam
movsb
cmp
sar
int3
add
xchg
mov
jmp
in
xchg
es
nop
sub
lret
and
xchg
add
jbe
movsl
scas
xchg
mov
in
add
push
mov
insb
mov
xlat
mov
ss
jb
jle
xchg
or
lahf
stos
adc
sbb
xchg
mov
cmp
testb
idivb
pusha
or
in
lock
jae
icebp
movsb
inc
inc
pop
test
mov
and
fnsave
adc
pop
and
jecxz
into
es
test
movsl
pop
adc
push
jno
out
andb
jmp
stos
inc
cmp
sti
sub
adc
negl
adc
add
and
mov
adc
rcrb
rolb
mov
pop
subb
dec
movsb
sarb
mov
lahf
mov
imul
dec
xchg
mov
jo
je
out
jno
mov
sbb
sub
cwtl
add
dec
dec
es
cmp
popf
decb
pop
lods
jo
xor
jno
int3
mov
ficoms
call
aam
push
imul
clc
popf
scas
or
add
adc
addr16
adc
xlat
xlat
scas
daa
stc
lds
cltd
ja
inc
pop
fcomip
xchg
cmp
lahf
sbb
push
je
cmp
push
sahf
ret
shl
loopne
push
xchg
xor
mov
cmp
icebp
insl
rcll
jmp
and
fsubl
loop
scas
fisubrs
jno
jno
in
clc
dec
inc
pop
and
sbb
cmp
xchg
dec
push
cltd
jle
cmp
mov
add
repnz
jae
mov
mov
cmc
es
sbb
stc
test
daa
or
popa
fsubrl
add
and
fsts
sub
shrl
mov
std
in
scas
mov
stos
inc
dec
sbb
jae
inc
insl
daa
pavgb
arpl
push
ljmp
mov
std
hlt
jecxz
xor
sub
push
lret
gs
outsb
call
cmp
or
call
mov
sahf
add
insl
jp
jnp
rcll
scas
loopne
push
movsl
push
inc
xor
shr
pop
adc
lret
xlat
imul
bound
push
xchg
addr16
stc
push
repnz
rcr
cmpsl
loope
aad
xlat
jnp
leave
ds
enter
lods
in
xlat
cs
mov
jmp
push
push
sub
cltd
jae
popf
mov
cmp
sbb
push
jl
fldl
lock
xlat
sbb
mov
sub
in
aad
aam
jg
sub
pop
aaa
pop
ret
outsb
jno
aam
cmpsl
jae
pop
xchg
mov
jge
add
inc
loop
dec
pop
movzbl
xlat
push
mov
pop
repz
and
daa
mov
lea
mov
pop
mov
mov
mov
sbb
jle
push
je
push
mov
jae
cmp
add
sub
repz
pop
or
xchg
add
mov
xchg
fbstp
dec
mov
cs
xchg
insb
sahf
sbb
repz
movsl
fstl
sub
inc
pop
outsb
inc
xor
notb
aas
mov
insl
inc
in
xchg
inc
add
inc
cli
xchg
dec
mov
push
dec
dec
xor
push
rorl
and
pop
fs
iret
aad
out
jnp
push
das
push
xchg
mov
fs
sbb
or
aad
testl
in
push
mov
lcall
xor
add
jle
mov
jns
jbe
outsb
inc
ljmp
xor
aad
adc
and
movsb
ja
mov
sub
sub
cmp
xchg
xor
mov
mov
sub
mov
inc
jae
das
fdivrp
scas
aas
fbld
addr16
push
fmuls
fldl
mov
xor
in
jmp
rorb
out
cmp
or
stos
push
clc
cmpsl
rorb
inc
push
sub
add
movl
shll
fcoml
cmp
jp
shlb
dec
inc
lret
int3
arpl
push
ljmp
mov
jmp
fs
ficoml
sub
inc
loop
pop
mov
sub
iret
in
repnz
mov
adc
out
cmc
lods
cmp
shrb
popa
mov
sar
cmc
jmp
scas
dec
pushf
jo
mov
adc
out
lods
test
fimuls
mov
pop
sub
jg
cmp
dec
inc
push
idivb
out
leave
fldenv
test
adc
sub
cwtl
push
mov
bndstx
shl
nop
fdivp
dec
mov
stos
inc
cmp
sti
sbb
cmpsb
inc
jmp
icebp
jnp
sti
inc
fsubr
sbb
sub
test
and
adc
fisubrl
test
push
adc
mov
jns
data16
xchg
rorl
and
or
rolb
jg
xchg
data16
cltd
imul
jle
andl
icebp
mov
cltd
mov
push
push
lods
adc
inc
push
lahf
mov
push
add
stos
repz
cld
push
les
jno
cmp
sahf
divl
orb
add
faddl
xchg
mov
cmpl
into
pop
inc
scas
inc
icebp
mov
push
jnp
mov
jg
and
sub
jl
dec
mov
cs
clc
jns
cld
stos
and
sub
cmp
iret
pop
jg
addb
dec
in
jns
pop
stc
pop
xchg
cmp
mov
mov
fisubl
pusha
popl
iret
jecxz
jle
gs
popf
push
movups
mov
mov
inc
jo
jb
and
and
lods
push
add
adc
cmpsb
fidivl
push
popa
xlat
mov
fstps
jg
nop
sub
push
lahf
jnp
lock
and
pop
hlt
mov
fbstp
mov
sub
jnp
and
xchg
daa
push
push
popf
inc
pop
bound
jp
inc
fcoml
repnz
pop
pop
clc
jo
mov
lahf
stos
and
insb
psubb
ljmp
icebp
cmp
mov
mov
int
and
jnp
mov
iret
xchg
xchg
adc
push
imul
cltd
dec
add
cmpb
mov
jmp
out
test
sbb
popa
xchg
mov
sbb
je
mov
fldcw
ret
dec
and
lock
xor
inc
ror
and
push
and
dec
mov
inc
lea
ret
push
ret
scas
insb
adc
popa
inc
pop
cltd
ljmp
dec
rcl
scas
inc
cltd
jbe
pop
das
mov
ret
sub
cmpsb
outsb
mov
sub
in
in
aas
adc
and
popf
lcall
xor
gs
notl
and
imul
rorb
popa
mov
mov
push
push
xor
stc
out
paddusw
mov
mov
loopne
or
xlat
xchg
and
or
inc
out
mov
and
mov
shll
jmp
int3
dec
push
xchg
mov
xchg
mov
sub
mov
mov
fists
mov
xchg
cmpsb
xor
fcmovb
add
and
or
rol
lds
xor
push
hlt
mov
sahf
movsb
cmp
adc
push
mov
inc
imul
pushf
and
sahf
xor
roll
cmp
xor
mov
pushf
aad
push
mov
push
test
les
xor
push
dec
pop
test
add
jmp
or
xchg
mov
jns
shll
push
dec
cmc
nop
arpl
mov
aad
push
push
jecxz
ss
jae
push
movsb
pop
mov
add
or
xchg
push
std
jmp
adc
and
xchg
mov
jne
fcompl
insb
pop
xor
cmp
dec
repnz
xlat
cmpsb
adc
push
lods
iret
xor
mov
jns
xchg
call
rcrl
popf
jo
int3
mov
fistl
inc
fwait
pop
sti
jecxz
icebp
hlt
push
stos
jecxz
fnstenv
inc
push
inc
movsl
inc
cmpsl
rcl
fsubs
mov
push
cli
jge
adc
cmp
test
insl
xchg
hlt
mov
rol
xlat
insl
insl
gs
popf
ss
out
sbbl
cwtl
das
fincstp
xlat
mov
push
rol
cs
aaa
xlat
shl
sub
xchg
pop
enter
mov
andl
dec
sbbl
and
roll
sub
add
push
aas
rcr
mov
push
into
sub
sbb
jge
inc
aas
movl
leave
add
ret
adc
hlt
sbb
hlt
mov
rcll
jp
or
pop
js
jecxz
out
mov
add
mov
adc
xchg
or
test
jae
imul
fcomip
in
test
mov
xchg
scas
sbb
mov
aam
hlt
push
lret
testb
jae
ret
cmp
in
sbb
mov
mov
xor
push
jno
insb
fwait
xor
lcall
and
out
stos
push
inc
jmp
test
mov
je
mov
mov
xlat
mov
push
lcall
cltd
mov
mov
fyl2x
mov
inc
clc
sahf
jno
xchg
sub
xor
dec
pop
jmp
rcrb
cltd
and
mov
out
mov
pop
shl
cmpsb
daa
mov
pop
xor
loopne
mov
xchg
jbe
dec
and
jmp
inc
sub
dec
xchg
sub
push
jbe
sbb
cmp
lret
sti
shl
in
and
inc
sub
cld
fdiv
jnp
mov
sti
in
inc
ret
and
xor
sub
fcmove
inc
mov
mov
pushf
jmp
mov
cld
je
jmp
lret
fisubl
sbb
int
cld
lcall
and
fisttpl
aad
lock
fdivl
pop
ficomps
and
xchg
push
pop
jecxz
clc
sbb
pop
inc
cmp
mov
mov
fwait
pop
cmpsb
cld
dec
out
and
sub
inc
sbb
jbe
and
xor
ret
pop
shr
lds
in
jl
mov
pop
stos
mov
jmp
add
sub
sbb
mov
or
fwait
add
sti
push
or
sub
push
push
xor
repnz
daa
rcl
cwtl
subl
push
sti
repnz
out
cld
mov
mov
out
outsb
lds
fstl
sbb
cwtl
imul
repnz
in
loopne
enter
jp
lock
enter
mov
nop
mov
sbb
jmp
rol
flds
xlat
pop
fadds
and
and
push
stc
xchg
or
lcall
add
les
imulb
sbb
fs
pop
fdivl
pop
addr16
mov
or
out
or
scas
std
dec
je
cli
ret
cmp
sbb
dec
inc
push
add
fildl
push
movsb
mov
out
rolb
jp
adc
in
aaa
nop
xchg
adc
push
jbe
mov
scas
rol
xchg
mov
mov
mov
stc
cld
push
jmp
das
mov
stos
and
adc
jo
in
loope
rcr
sub
lock
jmp
pop
pushf
push
test
cmpsb
mov
fsts
imul
and
stos
xorl
xchg
nop
fldl
icebp
sub
add
fcoml
push
ljmp
jge
pop
cmpsl
jbe
mov
mov
dec
aas
push
mov
test
add
and
mov
mov
cltd
jb
in
mov
jl
js
mov
fimuls
mov
clc
inc
mov
cmpsb
repnz
mov
hlt
inc
fxch
cmp
adc
sar
mov
inc
fnstsw
out
pop
push
outsl
imul
iret
adc
je
jmp
fcmove
push
jl
jle
sub
xchg
cmp
cmc
cmp
nop
dec
dec
aad
fisubl
mov
sub
mov
fcmovnbe
mov
fbstp
out
xchg
mov
aas
insl
ss
ret
inc
mov
hlt
shll
pop
pop
and
lods
adc
fbstp
xchg
add
mov
subl
jae
pop
xchg
lock
mov
sahf
push
hlt
iret
pushl
ljmp
outsl
lret
ds
cmp
scas
cmc
or
push
test
in
add
scas
aas
outsb
sub
xchg
jecxz
rcrb
push
sub
fwait
sub
jl
push
mov
loop
mov
inc
aas
ror
ret
adc
leave
fwait
pop
in
les
ja
rcrb
xchg
ljmp
xor
dec
jns
stc
mov
xor
fcomps
into
jb
rol
push
cmpb
xchg
mov
push
dec
bnd
xlat
mov
dec
lods
xor
lods
mov
negl
mov
arpl
vpackssdw
sahf
clc
push
jo
rol
jno
cmpsl
cmc
lret
fbld
mov
push
adc
xor
cld
mov
push
mov
hlt
lret
inc
fisubrs
adc
jnp
fsts
push
pop
imul
jge
push
cmp
aas
hlt
aad
cmp
xchg
mov
scas
cwtl
mov
ja
jmp
add
sti
orl
mov
xchg
push
imul
cmpsl
push
push
sahf
inc
imul
and
xorl
jne
add
loopne
or
loope
and
aad
lock
jecxz
mov
sbb
dec
mov
fwait
popf
ret
mov
ret
xchg
xchg
lcall
insl
push
inc
pop
cmp
ret
icebp
inc
push
inc
inc
push
push
mov
imul
push
out
xchg
mov
outsl
inc
fwait
aad
lock
xchg
xor
in
lods
and
push
popf
pusha
add
pop
lods
movsl
push
mov
shr
stos
mov
pop
jne
mov
xor
mov
inc
lods
out
cmp
lea
add
mov
adc
test
scas
inc
cmp
pop
aaa
lret
insl
int
push
adc
xchg
cmp
ljmp
call
mov
aaa
lcall
push
xchg
incb
pop
cmp
sbb
fs
insb
jp
ljmp
xor
das
cmpsb
mov
movsb
repnz
xchg
inc
leave
lcall
add
repz
filds
test
push
mov
sub
jp
lods
ja
jae
mov
flds
lods
cmpl
stc
push
data16
inc
js
mov
mov
sub
enter
icebp
mov
jno
rcll
ljmp
adc
fistl
jge
mov
sub
push
fadd
notl
mov
fildll
push
loope
jp
sti
xor
stos
mov
push
xchg
mov
push
js
or
dec
daa
jecxz
lds
cli
aad
sub
scas
mov
lahf
mov
mov
xchg
out
into
pop
daa
sub
xchg
inc
jle
jmp
xchg
push
fcompl
scas
int
stc
cmpsb
mov
ficomps
add
inc
sbb
mov
mov
mov
cltd
and
nop
or
mov
mov
aam
bound
int
loope
ss
adcb
mov
mov
das
ret
inc
jmp
or
adc
enter
add
lock
push
das
icebp
into
aad
into
mov
sub
cmp
dec
shlb
mov
jns
ja
into
pop
scas
inc
sbb
out
pop
repz
adc
hlt
mov
mov
push
movsb
out
sub
cmpsl
pop
les
outsb
cmp
and
icebp
pop
pop
sbb
cmp
ljmp
pusha
leave
add
or
out
sub
or
popf
hlt
push
cwtl
and
mov
cmp
scas
stc
popa
and
jb
ja
jg
cmpsl
xchg
sbb
lods
idivb
cs
int3
out
sub
or
out
sbb
pop
movsb
mov
cmp
les
insl
push
dec
mov
pushf
fldl
push
test
ror
xchg
std
mov
test
lods
ficompl
int3
lods
inc
mov
or
popa
inc
push
or
jmp
mov
sbbl
pop
cmc
xchg
cmp
int
je
icebp
dec
dec
in
adc
xor
in
cmp
pop
loope
lods
std
fmull
lock
call
jle
sarb
popf
mov
xchg
push
je
subl
push
add
jns
pop
loop
es
xchg
add
add
push
push
in
cmpsl
lock
push
mov
mov
push
push
mov
js
imul
imul
mov
addr16
fcomp
ljmp
xor
jae
sub
lcall
xchg
int
mov
and
inc
shlb
scas
cmc
bound
test
rolb
push
sub
int
jb
pushf
mov
outsb
jge
pop
stos
dec
inc
fnstsw
movsl
cmp
jecxz
setge
adcb
cmp
sti
mov
jnp
sub
pop
inc
into
sbb
xor
add
sbb
je
clc
mov
loopne
sti
fwait
jmp
inc
xchg
and
clc
ret
sarl
push
gs
dec
pop
push
or
jle
xchg
ljmp
nop
enter
cmpsb
jmp
fcompl
aaa
add
mov
test
data16
push
aas
ret
fwait
dec
mov
rcrl
cmp
add
cwtl
jge,pn
outsl
mov
loope
arpl
pop
hlt
ds
gs
lods
mov
xchg
sub
out
jne
or
pushl
or
xchg
scas
pop
xchg
adc
std
sub
mov
pop
sarb
in
in
cwtl
xchg
adc
mov
push
scas
test
imul
add
jle
lock
cltd
push
dec
aam
add
inc
pop
or
xchg
and
inc
flds
andl
pop
repnz
mov
push
inc
bound
into
lods
xor
push
lret
adc
mov
jp
daa
add
mov
subb
test
push
arpl
cmpsl
int3
or
std
or
cmp
pop
ss
int
and
mov
mov
adc
rorl
lock
inc
pop
cmc
push
jno
popf
xchg
mov
cld
mov
push
xor
jle
iret
pop
sbb
stc
aad
loopne
sahf
jnp
fadd
addr16
add
clc
cmpsb
push
mov
cmc
imul
xchg
repz
xlat
mov
cltd
imul
subb
xchg
push
adc
xor
lea
and
xchg
mov
movq
loop
adc
sub
aas
les
pop
jbe
in
cmpsl
adc
mov
dec
je
mov
jbe
push
mov
xor
in
ret
jg
fdivrp
pushf
push
pop
std
adc
sub
incb
lcall
sbb
stos
das
les
ljmp
pop
or
in
sub
popa
lods
pusha
push
stos
and
dec
push
pop
test
loop
mov
int3
pop
mov
leave
daa
jle
adc
dec
jns
mov
setp
mov
xchg
push
inc
adc
mov
cwtl
inc
sti
jbe
mov
jae
mov
test
psubw
cmc
js
scas
mov
push
push
test
leave
sub
stc
add
add
and
sub
das
mov
add
lcall
ret
lret
mov
loope
push
jmp
mov
test
aas
xor
popf
inc
mov
cmpb
dec
xchg
push
or
out
cmp
mov
mov
pop
mov
test
mov
xchg
iret
mov
sbb
add
fwait
jecxz
gs
push
and
fisubrl
lcall
xor
fsts
bound
fldenv
out
sbb
stos
or
xlat
adc
adc
xchg
mov
xor
jmp
push
aad
fistps
jg
out
adc
sbb
jge
iret
or
sub
repz
and
jb
sbb
push
cmp
popf
sbb
repnz
outsl
mov
rcrb
inc
mov
mov
insl
jle
adc
imul
pop
out
mov
mov
test
adc
jne
sub
out
xchg
sbb
sbb
push
mov
fsub
jle
add
loopne
sub
push
outsb
mov
rorb
les
icebp
jnp
mov
jmp
nop
xor
or
addr16
inc
pop
movsb
dec
das
jns
adc
xchg
lods
in
repz
and
enter
jmp
bound
into
ss
mov
fdivs
jmp
lds
movl
pop
jmp
pop
jae
test
xchg
dec
dec
mov
adc
rolb
arpl
jne
test
cli
lock
outsb
dec
pushf
mov
int
icebp
movsl
lds
dec
inc
mov
js
popa
inc
call
lea
xor
cmp
aaa
push
dec
fldt
inc
pop
xchg
xchg
leave
enter
sbbw
aaa
data16
andb
mov
stos
xchg
arpl
dec
sub
fisubrl
je
pop
cmp
sbb
dec
push
movsl
lahf
sarb
push
das
mov
sbb
dec
cmp
push
out
jg
ja
into
xor
inc
in
or
mov
or
stos
scas
inc
xchg
mov
sbb
mov
fwait
sbb
mov
xchg
loopne
lret
mov
movsl
xor
out
pop
cmp
and
mov
outsb
inc
test
mov
inc
dec
jns
in
inc
into
loope
and
lret
push
loopne
xor
hlt
mov
cmp
ja
cld
push
cmp
insl
xor
lahf
std
mov
sub
mov
cmpsb
pop
push
mov
sub
sub
pmaxsw
inc
push
push
dec
pop
insb
dec
adc
sbb
cmp
mov
jb
push
jne
push
popa
jle
push
xor
call
mov
daa
arpl
fsub
inc
and
mov
sar
pop
cmp
jns
push
jo
aaa
orb
cmc
xor
fs
je
inc
ret
sbb
pop
call
or
sub
mov
pop
xor
sbb
int
sbb
orl
int
pop
notrack
sbb
add
aad
imul
xor
es
or
enter
aam
lahf
dec
pop
sti
rcll
mov
lahf
xlat
mov
out
xor
std
lea
cmp
in
subb
jg
push
mov
shl
inc
cmp
mov
dec
push
jne
mov
inc
sbb
daa
mov
push
xchg
je
sahf
int
mov
repz
cmp
inc
lcall
sbb
and
gs
jl
mov
imul
mov
jmp
je
popf
xor
push
jae
or
add
push
xchg
adc
subb
dec
mov
scas
sbbb
je
mov
fsubrs
std
mov
xor
mov
inc
xchg
jae
imul
pop
scas
addr16
loopne
scas
mov
js
cli
xchg
jae,pt
and
lcall
sub
or
add
xchg
push
hlt
pop
aas
inc
in
jl
push
mov
test
test
xlat
jb
xor
aas
mov
xor
mov
push
aam
cmp
es
das
xchg
lods
incl
push
daa
lock
out
adc
push
sbb
jp
mov
enter
xor
jno
stc
push
mov
pop
mov
mov
sbb
adc
loope
ja
xchg
and
sbb
outsl
add
mov
cmp
je
and
mov
ret
sti
pop
jecxz
loopne
sub
lret
popl
out
push
cmc
pusha
je
xchg
cmpsb
stos
clc
pop
insl
dec
sbb
jle
lea
lods
push
and
add
test
icebp
scas
mov
push
fisttpl
jb
mov
outsb
jl
sbb
dec
and
movsl
cmp
pop
mov
int3
ss
jmp
out
lea
repz
test
and
into
mov
mov
jns
popa
stc
loopne
lods
andb
add
xor
sbb
mov
jle
pop
insb
dec
push
fsubrs
mov
ret
xchg
inc
jecxz
fstps
xor
sub
stc
sahf
sarl
fcompl
push
ljmp
jno
mov
push
jae
xchg
dec
dec
mov
pop
ret
pop
adc
js
outsb
loope
adc
add
dec
pop
repz
bnd
daa
cli
test
mov
pop
imul
add
and
fwait
xchg
jl
cmpsl
imul
fbstp
mov
outsb
test
cmc
test
imul
into
enter
push
push
addl
int3
xor
jae
out
mov
add
dec
sbb
mov
test
cmp
or
jp
add
negl
jne
and
shl
and
popa
aaa
inc
mov
or
std
mov
mov
jnp
int
mov
loopne
subb
add
fnsave
fstps
mov
or
cmp
inc
push
mov
rolb
lret
mov
xchg
adc
xor
jmp
jmp
dec
cld
rorb
or
mov
mov
out
repnz
pop
cmpsb
lods
adcb
aad
mov
pop
loopne
mov
xor
arpl
mov
shlb
adc
push
gs
loop
push
mov
or
and
mov
mov
test
jne
in
icebp
popf
mov
xor
pop
lret
mov
fcoml
mov
mov
xchg
mov
movsl
mov
and
imul
pop
out
cmp
sub
adc
cmpsb
sbb
clc
mov
outsb
cmp
and
cmc
push
jns
jno
dec
loope
dec
add
push
xor
push
jge
imul
ficomps
and
clc
or
and
movl
cmp
lods
std
cmp
ficompl
dec
add
inc
in
ret
test
addb
es
ja
or
arpl
mov
fs
fidivs
sub
int3
arpl
push
jnp
sbb
aas
mov
pop
mov
aad
mov
movb
pop
jl
fnstenv
dec
stos
sbb
in
es
mov
inc
jnp
mov
push
pop
lock
xor
ret
hlt
adcb
ds
dec
clc
cmpsl
ret
cmp
push
adc
icebp
xchg
icebp
stos
pop
je
cmpsl
call
xchg
push
inc
push
inc
pop
jae
sub
jle
cmc
scas
in
mov
fisttpl
imulb
ret
inc
rolb
stc
mov
ret
sbb
cmc
fisubl
xchg
push
push
xchg
aas
push
xor
int
pushw
fs
xchg
cmp
cld
inc
fwait
sub
push
and
inc
push
xor
hlt
popa
adc
jns
cs
in
aad
scas
aam
fistps
pop
rolb
push
movsl
sub
or
and
mov
and
mov
push
das
cmp
daa
data16
sbb
imul
mov
push
push
fsubr
js
push
std
push
insl
les
cmpsb
pop
call
cltd
pusha
mov
fsts
shlb
mov
pop
mov
jno
scas
cli
iret
mov
cmpsb
shll
mov
lds
clc
dec
test
insb
sub
adc
sub
jo,pt
pop
push
push
pop
cmp
in
aam
mov
je
inc
rol
xchg
shl
fwait
pop
insl
add
sbb
mov
pop
jl
xorb
popf
lods
sti
lret
and
sub
dec
adc
mov
imul
ret
hlt
imul
dec
cmp
iret
inc
pusha
cmp
xchg
popa
cmp
mov
lea
leave
push
or
lea
inc
daa
cmp
test
mov
xor
push
and
sub
xor
push
sbb
fnstenv
cmp
mov
pop
cmp
dec
mov
jl
jle
int
arpl
out
inc
fisubl
stos
jg
and
clts
and
jg
sti
inc
mov
xor
int3
call
or
xchg
test
and
push
jge
jno
std
dec
mov
cwtl
cli
fadd
sub
push
call
in
fsubrp
rcrl
scas
push
sti
aam
push
push
sbb
and
inc
xor
push
push
lods
xchg
pop
sub
int
dec
or
inc
lret
cmp
call
mov
sbb
dec
out
mov
cmp
jecxz
inc
xchg
sbb
dec
mov
pop
stos
pop
imul
xchg
mov
test
inc
gs
adc
iret
aad
xor
lods
mov
lea
int
mov
adc
test
jp
movsl
jge
xor
iret
adc
lods
pop
sbb
outsl
sti
movsl
sbb
and
xor
bound
inc
iret
or
pop
dec
adc
lds
add
ds
out
aad
jae
arpl
and
daa
sbb
nop
sub
push
test
add
xor
icebp
frstor
sti
xchg
mov
fmul
data16
cli
push
out
int3
cmp
inc
pop
fisubrl
test
adc
fisubs
ret
jne
icebp
les
aad
icebp
cs
outsb
and
ret
outsb
jae
ljmp
cmp
pushl
stos
je
dec
dec
subb
pop
push
jmp
inc
or
jns
mov
addl
dec
lods
jno
jle
and
lea
inc
jl
cwtl
arpl
lret
mov
fwait
out
lea
xlat
push
sub
sbb
out
sbb
xchg
add
xlat
push
or
pop
mov
fsubs
hlt
ja
sub
mov
xor
sub
ficoms
aas
ja
cmpsb
pop
mov
jle
cmp
push
fldl
int3
addb
pusha
or
testb
mov
test
push
or
repnz
sti
or
sbb
mov
popf
jno
scas
push
inc
lret
aaa
jecxz
push
push
inc
xchg
mov
adc
push
jmp
into
lret
xor
bound
fdivr
cmpsl
sbb
js
sbb
jns
out
push
hlt
mov
xchg
jge
loopne
lea
jns
addb
pop
adc
scas
mov
out
cli
mov
mov
stos
mov
jge
outsb
inc
fnstenv
add
cmp
xchg
adc
jl
rorb
daa
add
fldl
adcb
lcall
lods
pop
les
addr16
mov
loopne
out
nop
xlat
inc
push
arpl
cmp
jecxz
stos
fcoms
imul
daa
enter
xchg
fidivs
mov
jp
pop
jg
xor
add
mov
xchg
fidivrl
negl
jno
jb
fidivs
cmp
sub
lea
or
inc
sub
xchg
cltd
dec
aad
mov
mov
sub
pop
lahf
data16
stc
push
call
mov
mov
in
xor
pusha
mov
dec
sub
dec
movsb
rol
in
ret
jl
jp
ret
ret
push
mov
dec
mov
mov
ror
leave
push
jns
sub
pop
dec
lret
gs
inc
in
imul
pop
push
leave
call
cmp
mov
pop
les
cltd
arpl
push
fdivrp
test
insl
adcb
sub
sahf
fadds
lret
jg
adc
leave
jae
sub
xor
jnp
push
in
in
stos
subb
sti
mov
or
mov
lret
pop
popf
cmp
inc
fs
jo
ret
stos
pop
data16
rolb
fiadds
jg
and
das
add
sub
mov
in
and
repz
and
lret
mov
mov
ljmp
out
and
movsb
test
imul
cmp
outsb
sub
cmp
cli
mov
sub
les
and
ds
sub
call
cmp
dec
in
xor
in
adc
xchg
mov
ret
dec
out
out
mov
pop
jecxz
add
leave
push
sub
negl
scas
mov
aam
arpl
sbb
mov
jae
int
mov
sub
pop
cli
xchg
jl
mov
lahf
ljmp
adc
popf
sub
mov
pop
pop
push
leave
push
repnz
sub
sti
xchg
mov
dec
cmp
add
je
adc
mov
test
push
imul
int
into
jmp
loopne
dec
adc
xchg
mov
xchg
dec
xchg
shlb
jg
and
mov
test
fcoms
shrb
popa
and
and
imul
loop
xchg
loopne
push
ret
leave
xchg
sbb
push
jno
outsl
dec
dec
repnz
inc
and
cmp
iret
xchg
nop
aaa
push
jl
xor
sarl
es
fildl
test
dec
sub
mov
dec
cmp
jge
lcall
jmp
mov
add
lods
inc
or
loop
sub
lret
stos
cmp
inc
gs
ss
sub
xchg
fmuls
repz
push
pop
ljmp
mov
ret
in
jp
shr
lds
mov
rorb
les
ljmp
push
cmp
test
or
or
mov
adc
lea
xor
frstor
ss
add
test
pop
test
mov
pop
pop
adcl
xor
sti
sahf
cmp
aaa
daa
outsl
imul
mov
mov
rolb
lret
mov
out
cld
jo
mov
fstpt
addr16
push
imul
xor
ja
iret
add
inc
sbb
cld
jae
popa
push
inc
push
jl
fisttpll
mov
add
repz
ds
mov
push
imul
in
push
scas
cmpsl
mov
lret
jb
or
pop
pop
mov
mov
jge
test
mov
popl
bound
pop
imul
sub
xor
in
xchg
dec
push
push
fstpt
mov
add
cmp
subl
xchg
and
mov
jno
xchg
jp
mov
sahf
iret
inc
fs
je
cmpsl
movsl
jp
fadd
mov
jno
pop
lretw
cmp
cmc
enter
adc
pop
dec
push
push
cmp
mov
out
mov
lcall
dec
add
or
mov
dec
jo
mov
rclb
aad
inc
or
mov
ds
popf
in
xlat
dec
je
dec
xor
cs
mov
mov
cmp
cld
outsl
pop
in
jno
mov
test
dec
leave
jne
arpl
inc
fs
inc
jb
xchg
sub
clc
sub
inc
dec
fsts
out
cmpsb
pop
cli
mov
pop
xor
add
adc
ss
cld
movsb
pop
hlt
in
pop
rolb
sub
pop
dec
pop
bnd
fwait
in
ja
jns
imul
fsubr
pop
pop
scas
push
daa
aam
add
mov
push
jmp
mov
aam
outsl
mov
ficoms
setns
mov
pop
outsb
sahf
and
or
and
insl
push
pusha
addr16
jbe
push
push
mov
mov
push
xlat
icebp
ss
pop
int3
cmp
std
imul
mov
jp
stc
inc
jge
movsb
ret
xor
add
push
jae
cmp
xchg
sti
inc
mov
or
test
sub
cmp
or
dec
xchg
pop
push
aaa
iret
and
pusha
fcmovne
or
xchg
mov
int3
cltd
aaa
jno
push
stos
movsb
clc
jae
inc
fiadds
or
js
cltd
jne
sbb
push
and
test
push
push
adc
xor
push
mov
xchg
mov
push
fbld
fidivl
adcb
push
sbb
xor
sub
gs
hlt
xor
loope
dec
pop
ret
loope
xchg
sbb
pushf
insl
sbb
sahf
dec
jo
mov
add
ss
daa
xchg
test
sbb
jno
mov
popa
sub
inc
fidivl
mov
lcall
pop
cmp
insb
push
dec
mov
idivl
lods
and
xchg
ss
loopne
mov
fisubs
pop
fisubrl
rcr
cmp
sub
mov
xchg
ss
sti
insb
fsubl
jnp
mov
lock
xchg
cmp
xchg
lods
pop
add
jecxz
cmp
loop
mov
movsl
mov
jmp
in
cs
loope
xchg
call
out
mov
push
out
and
lods
jmp
mulb
aam
out
test
adc
leave
adc
or
push
push
in
stc
scas
mov
pop
stos
add
mov
fldl
mov
fimull
mov
inc
adc
mov
ret
hlt
dec
adc
icebp
popf
sbb
jmp
mov
mov
hlt
dec
es
cmc
xor
add
jge
push
mov
out
ljmp
fnstenv
push
sti
jnp
andb
movsl
pop
insl
push
gs
xor
loope
push
rorl
loope
adc
hlt
icebp
das
ds
sahf
clc
or
mov
fildll
push
out
xchg
jnp
mov
pop
idivb
mov
mov
cmp
push
or
dec
pusha
xchg
pop
mov
mov
out
mov
push
in
out
add
decl
or
aad
mov
add
xlat
jno
pop
xor
push
dec
popf
adc
jle
int3
sbb
adc
rolb
cmpsl
pop
jo
inc
xor
fsts
xchg
push
pushf
repnz
adc
jbe
ljmp
sub
inc
leave
jno
jmp
mov
outsl
inc
sub
pusha
jge
jl
sbb
xchg
sbb
sbb
xor
mov
int
or
push
cmp
and
sbb
cmpsl
je
xchg
cmp
adc
mov
add
push
pushf
test
sahf
xor
inc
pop
or
mov
jae
xchg
sbb
mov
nop
movsl
and
imul
push
outsl
repz
std
insl
test
stos
loope
shl
aas
add
lcall
hlt
movsl
pop
loop
mov
cmp
mov
ljmp
add
sub
in
iret
add
add
bound
leave
iret
movl
inc
cmp
data16
mov
adc
jl
loope
push
jbe
push
xor
and
sub
mov
popl
push
insl
cli
test
mov
mov
push
call
mov
mov
cltd
sbb
out
loop
stos
inc
notl
repz
idivb
scas
lock
xor
pusha
and
push
inc
add
fwait
bound
mov
in
pop
mov
nop
inc
mov
das
call
ret
adc
jb
sub
jle
jb
xor
jae
repnz
sbbb
mov
add
dec
fldt
mov
sub
or
sub
mov
adc
mov
in
xor
pop
mov
call
je
mov
dec
mov
adcb
xor
lock
cmp
loopne
cmc
mov
fsub
lock
mov
dec
out
hlt
dec
sbbb
add
push
jnp
mov
leave
mov
setns
cmpsl
movsl
cmpsb
jns
loopne
mov
popf
es
repz
xchg
adc
and
lods
adc
xchg
inc
dec
lods
xchg
dec
xor
xchg
xchg
xorb
gs
loop
adc
mov
ds
jne
fldt
leave
jb
cmp
cmp
cmp
roll
and
loopne
and
add
xchg
adc
enter
filds
add
cmpsb
and
xchg
out
mov
repnz
clc
push
nop
xor
test
idivb
adc
cmc
inc
sbb
pop
leave
xor
ret
mov
dec
adc
rcrb
dec
pop
xchg
jge
mov
popf
inc
rol
rcrl
mov
hlt
xor
and
xchg
clc
jp
pop
mov
mov
lahf
fdivrl
adc
addl
mov
loopne
ficompl
pop
xlat
scas
push
push
mov
imull
xor
hlt
mov
cmp
loopne
das
add
inc
mov
sub
gs
push
mov
dec
roll
push
js
and
or
jl
outsb
or
adc
repnz
add
jnp
rcr
test
repnz
ja
cs
cld
cmp
pushf
into
enter
inc
imul
adc
lods
pop
cli
daa
aad
adc
jmp
dec
mov
xchg
repz
adc
dec
dec
dec
jmp
shrb
xchg
pop
pop
fadds
in
push
test
movsb
inc
push
mov
mov
fiaddl
xor
nop
push
pop
jl
xor
mov
pushf
dec
pop
cmp
test
cmc
mov
jne
in
mov
pop
int3
xor
mov
cmp
shll
xchg
insl
scas
out
vpminsw
or
movsb
mov
arpl
and
adcl
and
das
mov
xor
add
ja
lret
mov
mov
pop
enter
inc
das
ja
pop
leave
or
mov
xor
ja
mov
test
ljmp
mov
cltd
ja
lcall
sbb
cmp
sbb
pop
incl
sub
insb
leave
jle
sub
outsb
sbb
ret
pop
pop
js
dec
mov
xchg
ds
sbb
or
gs
adc
lock
js
jg
cmp
movsl
jno
adc
sbb
jb
lds
nop
aas
fiaddl
xchg
addr16
or
lcall
cmc
insb
mov
push
lea
or
cmp
data16
mov
mov
movsb
jnp
adc
jecxz
mov
push
push
lds
mov
not
shlb
dec
arpl
jbe
aas
xchg
pop
stos
inc
inc
pop
dec
push
aaa
not
sub
test
mov
add
fadds
push
cmpsl
aas
inc
jge
inc
clc
test
and
lahf
ds
push
jns
mov
push
jbe
scas
imul
sub
icebp
lahf
out
cltd
dec
cli
jge
in
sbb
leave
dec
lea
stc
nop
fcmovne
inc
push
scas
mov
dec
mov
rorl
cmp
int3
xor
jl
lds
ja
lea
aam
cmpsl
ja
test
adc
pop
push
add
std
sbbl
xchg
arpl
enter
pop
or
iret
popa
mov
call
outsl
cmp
jp
shl
xchg
xlat
add
and
pop
lds
mov
int
fnstsw
divb
mov
push
das
xor
icebp
fucomip
and
lret
xlat
xor
shlb
add
cmpsl
pop
mul
cmc
fcoml
mov
les
mov
mov
cwtl
cld
ret
cmc
mov
inc
jl
mov
mov
xor
out
cmp
dec
and
bound
add
inc
test
imul
iret
int3
inc
fscale
jl
scas
xchg
pusha
das
inc
loopne
lret
push
pop
adc
and
xor
call
mov
sahf
sub
loop
add
dec
and
cmp
out
pop
pop
push
push
fdiv
sbb
xor
xor
jge
fistpl
ret
mov
adc
adc
adc
adc
pop
sbb
jp
xchg
out
fcmovu
ljmp
lea
clc
mov
sbb
jo
imul
inc
lods
inc
pop
repnz
pushf
mov
xlat
and
shr
aad
inc
iret
aam
bound
push
fmuls
dec
dec
daa
dec
pop
adc
push
popf
xor
xchg
xchg
mov
adc
push
sbb
mov
and
or
sub
fwait
pop
inc
xor
mov
mov
pop
in
xor
jmp
or
out
movsl
inc
jge
in
int
popf
jl
inc
jle
bound
lock
xor
and
and
xchg
sub
dec
lahf
lds
add
add
jg
addr16
mov
inc
lret
mov
or
xchg
dec
ljmp
cld
shrl
repnz
fidivrs
ja
mov
fldenv
add
and
inc
mov
xor
xor
orb
inc
add
xor
push
ds
lods
cmp
enter
movl
mov
movsb
adc
xchg
mov
sbb
ja
mov
insb
dec
cmp
push
jge
pop
xchg
cmpsl
rcrl
mov
clc
dec
mov
inc
jmp
xorb
and
data16
movsb
jl
lahf
repz
imul
or
mov
mov
lea
jnp
mov
or
add
or
icebp
adc
mov
cmpsb
pop
fsubrs
rclb
pop
adc
inc
or
xchg
ficomps
mov
clc
cmp
call
sub
cltd
and
sbb
inc
dec
xchg
or
jae
or
lahf
nop
rol
cwtl
das
div
dec
lea
mov
aam
or
rcrb
insl
imul
mov
mov
sti
out
jae
mov
fwait
neg
fisubrl
inc
pop
fdivl
jp
aaa
enter
and
mov
mov
cmp
int3
mov
lods
gs
fucomp
sahf
pusha
in
test
psllq
daa
int3
mov
xchg
add
fsts
ljmp
jno
mov
adc
sub
scas
loope
xor
out
mov
mov
loopne
lahf
jge
in
scas
mov
mov
jg,pn
mov
call
std
subb
xchg
pop
addl
cmpsl
into
cmpsl
jns
shr
xchg
mov
jp
sti
cmp
jmp
mov
ss
data16
and
ss
mov
push
loope
mov
sub
dec
ret
iret
inc
fimull
xchg
insb
sar
popf
mov
daa
jmp
mov
push
shr
enter
andb
push
mov
mov
and
arpl
fidivl
or
jmp
adc
mov
jae
sub
loopne
cmp
add
insb
fwait
out
cmpsl
jmp
movsw
jl
fbld
lret
movsb
imul
andl
mov
mov
jg
fdivl
push
pop
mov
mov
ret
ret
inc
cmc
mov
or
daa
ror
fnsave
mov
daa
call
int
cltd
cmpsl
out
xchg
jg
and
add
fnstenv
orl
mov
and
popa
mov
dec
insl
loopne
test
dec
sub
jnp
testl
add
int3
lods
pop
push
push
mov
and
jle
sub
sahf
icebp
and
pop
or
xchg
pop
cmc
lds
out
movntq
lock
movsl
pushf
mov
into
lret
vaddsubpd
lahf
inc
stos
shlb
pop
adc
sti
jge
aad
sbb
js
fdivrp
push
inc
cmp
sub
or
pushf
mov
xor
mov
out
sub
addr16
sub
pop
or
lret
iret
ret
mov
mov
push
sbb
stc
adc
ss
ret
xchg
add
mov
push
into
pop
das
das
lock
mov
lahf
push
popf
push
jne
pop
in
cmpsb
push
inc
mov
dec
and
and
fsubrs
xchg
sbb
lret
pushf
clc
into
out
inc
dec
mov
pop
aaa
pop
in
dec
xchg
cmpsl
pop
dec
adc
scas
rcr
jmp
push
xor
loopne
mov
adc
and
imul
fbstp
inc
dec
add
scas
mov
push
aaa
jns
cltd
test
and
int
sbb
xor
xchg
and
cmp
jg
test
loope
inc
inc
sbb
iret
into
pusha
cmp
push
test
xchg
push
push
cmpsb
adc
out
adc
xor
mov
jb
inc
les
or
inc
jnp
rcrb
push
push
inc
int3
cltd
outsl
fsubrl
xchg
jns
stc
sub
and
pop
xor
mov
or
adc
push
or
xor
popf
sbb
ret
int
call
stos
cmp
movsb
orl
test
arpl
mov
adc
jnp
out
leave
push
sub
sub
fwait
add
lret
out
in
gs
ds
inc
inc
fdivl
cli
mov
mov
cmp
sub
sub
push
movsl
cmp
aad
scas
ret
adcl
mov
or
and
cmp
cmp
scas
sub
cmpsb
mov
jg
test
inc
fisubrl
imul
push
leave
mov
or
ljmp
subl
dec
pop
inc
push
xchg
jb
int
and
push
push
jl
or
xlat
js
cmp
insb
cltd
dec
fstl
adc
adc
fs
push
mov
rorb
jno
inc
pop
pusha
jmp
push
and
inc
cli
xchg
jmp
std
stos
cs
mov
push
xor
outsl
push
mov
mov
in
mov
in
addr16
jge
ja
push
mov
and
mov
dec
es
icebp
push
cmp
mov
test
xchg
rorl
iret
pop
arpl
aaa
mov
bound
cltd
sub
pop
mov
cmp
mov
gs
cmp
pop
dec
push
ss
inc
ret
jle
lock
imul
jo
xlat
shr
stos
inc
fs
cli
add
cmp
fnsave
cwtl
sbb
fucomip
mov
push
ficoms
mov
jge
mov
sbb
sbb
pop
test
sbb
mov
pop
jg
test
adc
mov
xchg
loop
test
lea
je
inc
or
cmpsb
sahf
in
jmp
adc
loopne
pop
les
nop
out
mov
mov
lea
repnz
lds
jbe
insb
pop
cmp
scas
and
in
movsl
pop
popf
add
and
fdivrs
les
into
dec
pop
jae
inc
or
pop
in
movsl
test
xchg
mov
repz
mov
add
mov
adc
jns
and
mov
faddp
aam
mov
sbb
imul
clc
mov
mov
fidivl
adc
inc
and
cwtl
pop
pop
mov
adc
popa
test
xor
push
cmp
rolb
mov
jne
xchg
hlt
daa
pop
outsb
sbb
sti
mov
mov
or
out
imul
sub
or
out
jbe
popf
shlb
fdivrl
ljmp
or
dec
cmp
stos
in
enter
xchg
xor
add
lcall
mov
cltd
pop
out
int3
mov
sbb
xor
or
aam
pop
mov
jg
dec
iret
xor
push
or
aad
pushf
repz
out
inc
jae
mov
push
or
outsb
adc
mov
ljmp
cmpsl
test
pushf
mov
mov
pop
xchg
xor
test
cmp
test
imul
cwtl
sbb
fisubl
lcall
and
mov
nop
pop
pushf
jo
jb
subb
jb
pop
test
leave
sbb
mov
xchg
mov
push
insl
ljmp
scas
int
add
movl
xchg
ja
push
popf
mov
pop
and
dec
ljmp
mov
sahf
xor
adc
sbb
lds
and
mov
pusha
xor
xchg
icebp
jl
call
in
mov
flds
mov
pop
lds
out
addr16
xchg
sbb
xor
dec
aaa
mov
xchg
push
inc
adc
out
inc
inc
fnsave
enter
cmpsb
pop
push
fs
pop
xchg
jne
xchg
push
loope
popf
mov
insl
ja
mov
inc
loope
ret
jmp
jnp
stos
xlat
outsb
fdivl
or
iret
sub
sbbb
mov
mov
xlat
icebp
mov
jle
sbb
inc
push
pusha
push
inc
push
mov
pop
cmc
repnz
jne
mov
pop
negl
mov
pop
out
mov
sbbb
call
subb
pop
dec
inc
xchg
add
inc
test
jb
sub
mov
pop
cs
push
lea
mov
cmc
das
arpl
mov
je
fsubrs
mov
sbbl
sub
jnp
cmpb
sbb
mov
jge
push
cmp
add
mov
and
sub
into
sbb
sub
pop
cmpsb
sub
mov
mov
outsl
jl
insb
sub
push
sub
mov
or
sar
loopne
adc
rolb
movl
mov
test
decb
movsl
je
fstps
movsb
lods
loope
mov
xchg
add
cmpsl
or
and
andl
cmpsb
sub
out
mov
jg
jns
popf
stc
outsl
stc
jns
push
mov
stos
add
cmc
push
insl
xor
ljmp
imul
pop
ret
sbb
dec
push
push
mov
or
stos
add
rcl
adc
scas
call
inc
mov
out
sub
push
or
cmc
jns
daa
and
cwtl
sub
loope
mov
and
and
shl
test
inc
std
out
and
cs
add
aad
push
jae
dec
jnp
mov
sub
lods
ret
sub
jge
jg
cmpsl
sbb
cwtl
and
popf
cmpsl
filds
dec
in
movlps
sarb
fcompl
jecxz
scas
inc
ds
out
jp
add
xor
mov
imul
jg
test
sti
cmp
sbbb
outsb
pop
int3
push
push
popl
ret
and
mov
daa
xor
ret
stc
or
mov
ds
stos
clc
mov
xchg
sub
test
mov
imul
xlat
insl
out
lods
faddl
push
shll
int3
inc
pop
dec
in
push
xor
inc
daa
inc
inc
mov
in
fisttpll
fimull
lcall
push
jmp
inc
mov
std
in
leave
call
jecxz
sub
lcall
mov
mov
and
lods
fbstp
pusha
xchg
pop
and
jl
pushf
and
dec
in
popf
mov
enter
pop
shrb
loopne
mov
jne
bound
jl
scas
and
adc
sbb
cmpl
fdivl
push
cmp
outsl
int
cld
int3
add
push
lods
icebp
lahf
xchg
repnz
inc
pop
lods
inc
orl
jbe
sbb
outsb
sub
stc
xchg
inc
dec
cmc
cmp
aam
mov
pusha
movsb
mov
push
dec
loop
push
cmp
adc
mov
xchg
mov
imul
xchg
xchg
xor
jns
mov
sti
xor
mov
iret
xor
or
lret
jle
fistpll
xor
adc
mov
dec
lds
stc
outsb
les
popf
xor
xor
sbb
mov
cmp
sbb
cmp
jl
xor
cmp
pop
das
xchg
stc
les
push
dec
std
jb
aas
or
cmpsl
xorb
xchg
gs
cmp
enter
or
fbstp
popf
and
leave
out
enter
mov
sbb
sbb
cli
or
pop
js
mov
gs
inc
sete
arpl
xor
outsl
jge
pop
mov
loope
push
cmp
cmpsb
jnp,pn
rcl
sbb
cmpsb
push
xchg
aam
popa
dec
xchg
imull
shl
iret
aad
push
xor
les
sub
and
imul
dec
mov
pop
repz
fildll
ret
sbb
stos
je
pushf
xor
mov
xchg
movsl
cmp
mov
inc
xchg
xchg
sar
jno
push
arpl
shl
mov
daa
les
call
mov
cmpsb
loope
sub
inc
ret
imul
dec
sub
inc
sbb
sub
lahf
push
inc
add
lret
fildll
cmp
pop
adc
outsb
mov
cmp
jae
mov
or
mov
push
or
es
std
in
fmul
incl
loope
mov
sub
in
push
fsubs
dec
xchg
fimuls
loope
scas
adc
orb
hlt
cmpsl
cmp
add
les
rep
outsb
sub
ret
jg
add
xchg
jae
sbb
mov
jns
js
lcall
add
popa
imul
fs
pop
mov
jmp
sbb
mov
add
inc
sbb
repz
sub
sti
sbb
fcoms
movsb
pminsw
adc
aam
mov
sub
cmc
add
pop
xchg
xor
outsl
mov
push
ret
rcr
mov
mov
jg
lahf
push
popf
add
ljmp
ds
xor
ljmp
mov
aas
pop
lods
sbbb
es
add
xchg
jno
aad
hlt
leave
mov
clc
jno
adc
jmp
pushf
pop
or
cmp
and
imul
rclb
dec
push
iret
jmp
dec
adc
outsb
mov
or
push
mov
cmpsb
stos
inc
fmuls
out
jl
jae
nop
pop
mov
lret
or
jmp
sarb
sbb
psubq
daa
pop
shll
test
lret
sub
test
mov
lea
aam
lock
enter
add
mov
lods
call
mov
sarl
test
add
paddsw
stos
xchg
stos
fsubrl
fsubrl
cmp
push
hlt
mov
bound
testb
sub
jbe
xchg
sub
and
pop
ficoml
mov
push
push
in
mov
loopne
mov
icebp
out
inc
and
adc
inc
or
das
and
and
jp
push
mov
push
test
lret
adc
or
daa
mov
add
ds
shll
cmpsl
dec
pop
adc
or
mov
mov
fwait
popf
jns
sahf
ret
aaa
bswap
push
or
insl
xchg
sbb
mov
mov
insl
add
dec
decl
dec
orl
out
adcb
pop
mov
and
popa
pusha
aaa
push
xor
inc
in
jp
mov
lret
sub
dec
popa
add
stos
and
sub
aam
arpl
pop
dec
shll
pop
push
pop
incl
fwait
pusha
jl
loop
enter
xlat
imul
fisttpll
lea
or
pop
jno
sub
mov
push
push
out
sub
cmp
sahf
aas
push
rorb
mov
shl
ret
jo
sbb
push
sbb
jmp
push
mov
mov
and
or
aam
mov
leave
or
dec
sub
mov
loop
mov
cmovle
mov
cmpsb
arpl
or
xchg
jle
mov
fistps
cwtl
inc
xor
stc
cmp
mov
jecxz
aam
ret
or
sub
jmp
cmpsb
or
xchg
sub
jbe
shrl
mov
outsl
or
or
add
popa
lods
sub
shll
sbb
pop
call
adc
jl
nop
bswap
sbb
cmpsl
dec
rolb
stos
sbb
push
fbld
outsb
int3
sti
mov
cmp
sbb
movsl
rclb
pop
je
sub
adcb
test
or
mov
push
jmp
lea
sbb
add
inc
ret
and
dec
mov
lea
enter
jo
dec
test
stc
arpl
stos
or
push
mov
pop
inc
push
popf
mov
ljmp
push
push
mov
jnp
adc
mov
xchg
out
imul
push
xor
in
sbb
ja
out
mov
test
addr16
or
in
test
cmpsb
lods
inc
out
inc
push
xlat
xchg
repnz
shrb
mov
out
popa
cltd
pop
outsb
mov
mov
aad
jno
test
pop
sbb
pop
notl
cmp
push
in
push
ja
jle
and
pusha
lds
call
popf
sbb
push
push
or
fsubrl
or
pop
aad
sbb
ret
or
mov
lds
dec
lock
or
scas
aaa
pop
int
xchg
add
mov
insb
sbbb
dec
pop
xchg
repz
push
sbb
pop
push
jae
pop
dec
push
mov
cli
adc
dec
adc
mov
insb
out
and
jmp
in
mov
jne
inc
sbb
mov
fistpll
adc
inc
fldcw
or
inc
icebp
dec
scas
frstor
ja
jmp
into
jg
ja
ss
out
imul
ds
mov
pop
or
jbe
sub
add
mov
adc
xor
jl
push
jle
adc
jl
repnz
adc
push
push
push
or
insb
pop
xchg
sahf
cld
loop
xor
or
push
mov
nopl
je
push
xchg
xchg
pop
call
pop
xor
adc
popl
clc
scas
jge
test
rcr
fsubrp
sub
adc
sub
rcrl
dec
sbb
sbb
xor
push
pop
sbb
cmp
sub
clc
in
sti
jno
in
inc
fsubp
out
fninit
int3
fidivl
push
push
mov
xor
jmp
jl
clc
mov
jno
aad
mov
lret
fadds
orb
mov
mov
mov
jle
inc
pop
ret
add
sub
repz
cmpsl
scas
lock
mov
mov
mov
xor
jne
in
or
push
push
std
nop
mulb
sub
pop
scas
repz
lahf
es
jae
outsb
leave
fstps
loop
out
lcall
inc
stos
adc
xchg
push
arpl
arpl
jbe
mov
jle
and
jbe
pop
call
movsl
cs
adc
mov
jbe
jp
cmp
enter
dec
fistpll
push
mov
lahf
add
movsb
inc
ret
adc
stos
sbbl
into
xchg
cmp
ja
daa
or
out
jl
inc
pop
cltd
xor
mov
lea
lcall
xor
out
sub
js
jno
test
xor
fdivrs
sub
ret
jb
testl
icebp
int3
inc
cmpsl
js
sbb
dec
adc
add
cli
test
dec
and
jle
sbb
in
bound
or
mov
sub
fldenv
xor
inc
mov
fs
out
sub
and
jae
and
xchg
pusha
ret
xor
test
jo
jl
ds
push
pusha
inc
or
test
fs
int3
insl
popf
jecxz
test
and
int3
lret
pop
outsl
or
aad
add
subl
and
sti
or
push
inc
cmc
add
inc
enter
and
scas
dec
dec
fnstcw
les
insb
jnp
and
sub
or
jge
in
push
mov
icebp
int
iret
js
push
into
adc
es
rcr
inc
inc
lahf
push
xchg
sub
xchg
dec
sub
arpl
gs
pop
je
scas
sub
xchg
lods
inc
pandn
ds
pop
test
and
push
ret
add
cmc
lds
pop
inc
dec
add
lods
mov
popf
cmp
adc
mov
jge
mulb
or
test
mov
es
jbe
repz
dec
insl
inc
pusha
aam
cwtl
roll
add
adc
sub
push
push
pop
aas
fsts
cld
mov
add
and
cmp
mov
sbb
and
pushf
add
shrl
and
es
ss
cmpsb
mov
test
cmpsl
jg
and
ret
adc
mov
inc
inc
and
push
and
sub
cmp
xor
mov
pop
std
and
mov
jo
ds
xor
ret
pop
dec
shll
mov
jg
xchg
in
push
jg
sub
scas
mov
dec
pop
push
add
cmp
divl
andb
mov
push
daa
jae
xor
or
je
sbb
add
test
aad
xacquire
xor
jle
inc
aaa
jmp
dec
fwait
push
push
sbb
or
push
cmp
add
outsl
xchg
pop
cmp
cmp
jl
pop
xchg
icebp
jp
mov
loope
js
lcall
leave
mov
insl
imull
xchg
dec
fcmovu
mov
push
mov
icebp
cmp
cwtl
add
lds
pusha
inc
xlat
cmp
xchg
push
mov
push
in
jae
loopne
lea
imul
daa
sub
mov
fcoml
out
jno
rcrl
cli
ret
push
sub
sbb
xchg
lret
add
dec
cmpsb
or
cs
dec
adc
loopne
inc
dec
gs
mov
mov
pop
mov
mov
jo
stos
in
ret
mov
lcall
cli
push
sbb
pop
fnsave
inc
cmc
push
mov
cmp
mov
adc
lcall
sbb
and
js
xchg
dec
out
in
pop
idiv
insl
repnz
sbb
dec
mov
paddb
popf
jmp
sbb
xchg
pop
sahf
sub
lcall
in
nop
into
xlat
adc
cmpsb
sub
rclb
jae
jbe
jae
rolb
mov
fidivrs
shlb
pop
sbb
sbb
mov
insb
and
jge
enter
jl
jnp
out
iret
pop
cwtl
cmp
sbbl
jno
clc
mov
fstpt
or
mov
stos
ss
repnz
enter
test
test
xor
out
jno
call
and
push
push
sahf
and
ret
les
shl
push
jns
jmp
ljmp
jnp
into
mov
sarl
xor
aad
jg
lret
dec
pop
mov
xchg
in
dec
lcall
fld1
xchg
push
mov
fisubrl
xchg
xchg
popa
add
add
and
leave
fcomp
mov
mov
popa
xchg
jne
out
xor
push
cmp
pop
mov
lock
shl
dec
imull
adc
scas
pop
jae
xchg
sbb
loop
and
inc
pop
inc
push
shl
les
or
fistpll
mov
fstpl
fbstp
insl
cwtl
mov
add
aam
mov
dec
mov
mov
pop
xchg
mov
insl
mov
cmp
dec
inc
scas
out
add
push
adc
xor
outsb
arpl
mov
lds
sbb
cltd
pop
cmp
dec
mov
or
jecxz
dec
orl
ds
pusha
dec
xchg
jnp
lea
adc
mov
inc
adcl
movsl
sti
scas
adc
loopne
aam
xor
mov
test
jl
xchg
rol
mov
mov
ljmp
pop
arpl
je
leave
je
aaa
test
ja
push
test
xor
xlat
pop
stos
hlt
jne
cmpl
mov
or
cmp
sbb
sahf
mov
ds
fsubr
aas
clc
or
gs
dec
jbe
cmp
imul
ljmp
mov
fisubrs
or
into
pop
ljmp
mov
pop
xor
ljmp
cwtl
adc
pop
or
mov
cmp
xor
stc
and
or
loope
xchg
cmp
xor
inc
xchg
mov
sub
sub
out
js
and
jp
int3
xchg
xor
lods
in
in
sti
push
iret
imul
sahf
int3
dec
sbb
sub
jp
test
into
pop
repnz
pop
push
push
dec
push
add
scas
fstps
xor
adc
adc
mov
pop
test
mov
add
mov
test
sbb
mov
pop
adc
int3
aas
std
movb
fistpl
add
cmp
icebp
mov
jecxz
and
mov
cmpsl
out
push
cltd
dec
mov
frstor
mov
add
xor
fldl
test
idivl
push
test
je
adc
and
dec
stos
divb
add
cltd
ja
lret
inc
stc
inc
dec
in
out
push
lahf
push
subl
sub
fstl
outsl
adc
add
adcl
in
fsts
subb
add
xor
jne
mov
push
sahf
lods
mov
imul
lret
js
hlt
sbb
xchg
jl
cmp
cmpb
leave
push
jbe
idivb
sub
mov
cmc
jbe
inc
dec
adc
cmpsb
pop
xchg
shrb
jge
das
mov
aad
lods
mov
mov
adc
sbb
push
inc
dec
fwait
in
shlb
cmp
addr16
xchg
sub
dec
sarl
push
inc
addr16
popa
jb
iret
jmp
pop
dec
add
push
test
cmp
push
push
mov
out
int3
fsubl
xor
mov
aaa
mov
in
pusha
and
fnstcw
sbb
mov
lret
sub
sub
sub
jnp
aaa
mov
add
add
xor
and
sahf
rorl
insb
jle
mov
adc
popf
imul
mov
leave
pusha
adc
pop
mov
loope
mov
fcoms
movzbl
dec
pop
push
std
xchg
outsb
test
lahf
stos
movsl
inc
jmp
shlb
insl
mov
sbb
ds
xlat
push
or
xor
mov
in
shlb
mov
shll
or
mov
lea
pop
adc
lea
pop
pop
and
pop
in
mov
call
lods
andb
adc
jecxz
test
cmpl
rcrb
add
mov
fadd
mov
pop
sahf
shrb
std
push
adc
push
or
imul
add
hlt
scas
xchg
sarb
mov
xchg
add
add
sbb
inc
lret
sub
sub
hlt
add
push
lods
sbb
jg
repz
and
xor
mov
pop
jbe
stos
in
jnp
fists
dec
test
sub
test
ja
fldenv
int
notb
mov
nop
sub
shll
imul
rolb
cwtl
ret
lcall
ror
shl
adc
je
iret
cmp
push
adc
loopne
gs
adc
data16
mov
bound
dec
ret
outsl
mov
inc
arpl
arpl
loop
movsb
pop
sahf
clc
cmp
push
je
push
paddd
mov
xor
neg
std
cmp
ljmp
inc
lcall
and
xchg
int3
aas
push
shll
test
sti
cmp
fnstcw
in
mov
mov
xor
mov
push
xor
jne
dec
ficoml
popa
pop
in
jbe
xlat
repz
jne
ret
dec
and
int
sti
lcall
add
ds
rep
outsl
sbb
idivb
sahf
int
lods
test
jnp
adc
pushf
mov
xor
ret
popf
xchg
mov
jmp
add
out
shl
lahf
adc
sarl
add
sbb
jecxz
ja
fbld
test
xchg
jmp
test
jo
sbb
popf
and
mov
int3
out
lcall
and
jge
add
aaa
addr16
and
sbb
jp
add
aam
sbb
push
call
cmp
out
mov
xchg
cmpsl
out
rclb
icebp
loop
iret
fldt
push
pop
push
lock
sbb
test
cmpsb
mov
out
dec
pop
clc
in
push
cmpsb
xchg
add
mov
dec
mov
sub
jmp
mov
pop
sahf
or
push
cmpsl
cwtl
and
xchg
shr
inc
ficompl
cmc
out
cmp
dec
call
loope
push
sub
mov
jno
subb
ds
std
sub
ret
dec
addr16
sahf
sub
push
xlat
cmc
dec
loopne
cmp
inc
fnstenv
jmp
jp
pusha
mov
cltd
or
jns
xchg
pop
mov
lretw
jecxz
cmp
lcall
ret
shrl
pop
fs
ret
mov
pop
in
cmp
out
sbbb
push
pop
mov
xchg
lahf
notl
cltd
imul
inc
aaa
jle
adc
inc
mov
loopne
pop
ja
sub
jne
imul
popa
ja
iret
or
add
insb
hlt
lods
or
push
enter
jl
fisttps
jae
sub
pop
into
add
inc
inc
mov
test
xlat
mov
xchg
cmp
sbb
in
add
imul
and
sbb
sarl
mov
movsb
dec
gs
sbb
xchg
inc
dec
pop
jge
bnd
xchg
lods
inc
add
or
push
inc
bound
mov
leave
loopne
out
xor
or
cltd
je
je
dec
mov
insb
add
jecxz
push
lock
dec
sbb
pop
mov
or
jp
imul
cmp
or
lea
out
in
cmp
hlt
repz
sbb
es
sub
ficompl
insb
xchg
loope
xor
or
out
cmp
pop
or
xlat
rcr
mov
test
hlt
jl
mov
out
push
push
es
jb
arpl
push
dec
adc
mov
sub
jl
scas
jbe
daa
pusha
inc
lods
xchg
dec
sbb
popa
cmp
fs
mov
sbb
jne
adc
vcvtss2sd
and
sub
repnz
and
in
or
or
sbb
fnsave
test
stos
fwait
jne
dec
mov
inc
mov
jae
js
cmp
jge
test
xchg
ds
pop
addr16
call
jnp
jmp
sub
xlat
scas
mov
xchg
mov
insl
ljmp
lock
in
mov
in
fwait
sti
cs
lret
mov
fcmove
lds
imul
push
mov
or
into
lods
xor
movsb
scas
inc
pop
fcoml
cmp
insl
xchg
enter
or
jl
jb
std
mov
arpl
or
ja
in
call
dec
cmp
mov
push
dec
mov
xchg
push
stc
inc
pusha
dec
rcll
xor
fidivl
jp
arpl
jnp
sbb
pop
cmp
bound
mov
add
ret
rcl
sbb
ficoms
xor
cmp
lods
movsl
aas
mov
lcall
mov
xchg
mov
mov
lret
test
iret
stos
sbb
sub
or
out
mov
sbb
jmp
sub
mov
sub
push
incl
inc
or
dec
or
xor
cld
push
xchg
sub
lcall
jbe
out
push
xchg
xlat
cmp
pop
and
add
jle
pop
shrb
sbb
mov
shrl
xchg
push
mov
push
in
xchg
or
lcall
hlt
jnp
add
rclb
inc
out
iret
pop
je
adc
xchg
cmp
lea
cmpsb
mov
loopne
push
dec
adc
mov
cld
jae
in
test
inc
sti
test
add
repz
sub
bnd
rcrb
jbe
and
and
mov
mov
int3
jnp
sbb
or
popa
mov
movsb
adc
jne
iret
insl
adc
aas
imul
push
inc
push
out
mov
sbb
push
inc
ret
push
jg
xchg
data16
sbbb
push
fildl
and
lret
cmp
jno
jmp
pop
pop
add
adc
pop
test
popf
mov
fbstp
adc
cld
orb
jg
out
cmpsb
in
jo
decl
mov
mov
fwait
clc
lret
scas
sbb
sahf
popf
pop
outsl
mov
xchg
movsb
out
xchg
cmp
pcmpgtw
rolb
dec
push
das
mov
sbbb
pop
cmpsb
shl
push
iret
dec
xor
cmp
repnz
daa
cmp
push
dec
decl
aas
out
sarb
insb
and
sbb
and
shl
add
cmp
inc
movsb
pop
mov
sub
mov
cmp
ret
mov
or
push
loop
adc
inc
loopne
nop
mov
add
xchg
negl
pop
lret
clc
fnop
inc
imul
popf
pop
adc
aaa
movsb
cmp
xchg
test
cmc
iret
mov
cltd
scas
in
dec
adc
js
mov
fdivrs
rcrb
rcl
flds
mov
push
xchg
lret
mov
xor
fadds
movsb
aaa
cmc
jl
pop
mov
out
test
test
xor
jge
adc
loopne
cmp
or
jo
imul
data16
imul
push
ds
dec
sbb
jno
out
push
pop
cld
outsl
jg
cmp
xor
xlat
cld
or
jl
adc
sub
xchg
imul
jp
or
mov
icebp
mov
add
adc
cmp
inc
lret
pop
sub
adc
fsubl
xor
call
sbb
push
movsl
mov
stos
dec
pushf
adc
dec
aad
lahf
pop
scas
inc
cmp
add
push
cltd
pusha
inc
or
push
push
in
jg
xor
aam
sub
jb
sbb
popf
dec
fimull
popa
jb
clc
cmpsl
test
jge
mov
pushf
jns
pop
stos
mov
push
lods
or
in
mov
repnz
inc
getsec
adc
pop
arpl
mov
in
add
dec
andb
in
push
mov
jae
inc
mov
ss
popf
fcomi
movsl
lock
push
pop
xchg
cmp
cltd
mov
dec
pop
cld
cmp
sbb
sbb
rorl
sbb
out
and
jg
js
in
dec
scas
shrb
pop
jns
arpl
leave
sub
dec
and
or
sub
into
jne
push
cmp
addl
push
je
cltd
jno
mov
adc
cld
mov
fdivrs
dec
pop
pop
push
ljmp
jno
pushl
lea
mov
sahf
cs
sbb
lock
sub
xchg
inc
cmpl
cmp
mov
fcoml
jne
popa
ficoml
das
dec
add
insl
sbb
les
adc
out
push
mov
sbb
sahf
data16
cld
push
cmpsb
dec
push
fsubrl
outsb
sub
pop
adc
inc
gs
xor
mov
ja
outsb
sbb
fwait
mov
push
inc
sbbb
stos
fsts
sarb
mov
dec
pop
out
sbbb
and
subl
sbb
pop
or
sbb
fs
push
arpl
jbe
pusha
add
xor
xlat
pop
mov
and
jno
inc
fcoml
movsb
jecxz
sti
adc
int
es
in
outsl
rcll
mov
pusha
fidivl
loope
out
cmpsb
inc
cli
xchg
je
cmp
xchg
rolb
adc
icebp
pop
scas
adc
mov
dec
ljmp
dec
and
mov
mov
popf
rclb
xchg
sub
inc
and
adc
xchg
sbb
int3
push
out
testl
test
add
stos
loop
pop
sti
in
xor
sbb
gs
xlat
push
dec
push
jo
nop
mov
fwait
cmpsl
lds
sub
aas
inc
sbb
adc
mov
pop
mov
and
sub
scas
jmp
test
lea
jge
pop
mov
cli
test
dec
bound
es
push
jmp
loop
jo
pop
cmpsl
sub
add
or
cld
out
lods
les
lahf
xor
push
sarl
fldcw
pop
jmp
bound
xchg
into
cmc
adc
mov
ret
outsb
imul
in
sbb
test
in
mov
cmp
mov
repz
and
cli
loope
outsl
adc
sub
out
cwtl
jmp
jp
xchg
cmc
leave
fnstenv
push
gs
mov
outsb
sarb
mov
xor
hlt
push
enter
add
out
nop
jne
pop
mov
mov
mov
xchg
push
pop
int3
mov
ja
pop
cmp
test
push
mov
sbb
push
pop
outsb
iret
jb
mov
and
arpl
xor
cmp
dec
sbb
mov
xchg
jl
sbb
cld
xor
in
lahf
ss
or
jle
add
mov
iret
aas
dec
add
mov
sub
mov
mov
jmp
push
pop
cli
push
inc
sub
enter
imul
int
xor
mov
and
add
inc
mov
stos
shrl
xor
or
sub
fucomip
mov
ss
xchg
xchg
shlb
aam
mov
or
movsb
inc
shlb
cmpsb
mov
repz
cmpsb
jne
xor
sti
mov
fchs
ja
mov
push
aaa
xchg
mov
adc
test
bound
repz
into
sub
repz
in
std
les
adc
icebp
cmpsb
cmpsb
pop
mov
imul
adc
lods
sbb
movsl
dec
mov
mov
inc
pushf
dec
pop
xchg
fcmovnu
jmp
add
repnz
mov
ret
jp
stos
lods
and
push
int3
into
mov
pop
hlt
cmp
aad
test
cltd
pop
loopne
inc
fiadds
xchg
push
mov
xchg
jb
das
fsubl
mov
sbb
xlat
xor
sub
mov
negl
push
shlb
and
cmp
xlat
and
cmp
mov
add
xor
push
pop
test
jbe
or
mov
adc
push
fwait
dec
dec
cmp
repnz
or
hlt
push
pop
loope
ja
js
outsb
stos
mov
les
rcl
cmp
xor
test
xchg
adc
sbb
stc
jp
push
jge
inc
and
fcomi
adc
daa
xor
ja
xchg
mov
nop
or
cmp
jmp
movsb
jo
in
mov
or
or
and
jb
xor
jns
call
movl
jnp
mov
sub
fwait
adc
sub
ror
jp
mov
mov
js
mov
sbb
popa
lods
sub
test
in
fadd
cld
popa
fstpl
push
xorl
fisubl
stos
fs
mov
mov
xlat
pop
xor
add
scas
enter
arpl
cmc
notb
mov
sbb
cmp
iret
insl
je
fisubrs
fimuls
daa
mov
add
inc
pop
adc
and
mov
or
call
fidivrl
sub
cmpsb
or
mov
mov
dec
aam
rclb
ss
xchg
imul
hlt
jbe
outsb
pop
mov
pop
cltd
dec
fimuls
adcl
in
stos
jbe
jmp
fnstcw
and
iret
jl
add
data16
push
xchg
popa
les
scas
add
xchg
cs
insb
into
sbb
call
jecxz
dec
pop
push
stos
stos
fldcw
lret
data16
inc
or
pushw
and
popa
pop
imul
sub
and
sub
repz
dec
xlat
imul
lcall
repnz
cmp
lahf
pop
xor
int3
test
incb
leave
shl
cwtl
xor
clc
inc
ficoml
mov
call
and
and
or
jle
mov
es
out
push
xchg
arpl
xor
aad
sbb
jns
pop
stos
ljmp
fldcw
pop
out
mov
sub
jns
sub
adc
les
push
jbe
stc
das
inc
mov
bswap
mov
mov
add
add
loope
push
cmp
or
repnz
scas
in
push
lods
iret
inc
xor
add
rolb
jae
movsl
bound
lods
xchg
sbb
fmull
and
or
addr16
push
cld
inc
mov
outsb
push
cmp
adc
lret
xlat
clc
adc
pop
lahf
scas
pop
cmpl
mov
push
aas
sub
pop
rcl
ret
add
jns
pop
or
mov
mov
out
dec
xchg
scas
jns
adc
mov
mov
stos
decl
andl
cmc
adc
push
rol
pop
jmp
and
outsl
nop
rep
repz
cmp
xor
lret
call
lock
sahf
xor
cli
mov
fidivs
inc
fucomp
dec
pop
inc
adc
mov
sbb
pusha
aad
loop
std
dec
lcall
popf
adc
shr
sbb
incl
jo
insl
loopne
mov
cmp
mov
out
and
pop
scas
or
sbb
test
ror
lods
sbb
loop
popf
mov
hlt
into
call
mov
jns
or
jae
xchg
stos
or
mov
iret
rolb
arpl
sti
aaa
jl
add
js
andl
add
xchg
xchg
jns
pop
mov
fsubl
out
push
mov
ss
call
outsb
xlat
xchg
mov
out
xor
pop
cmp
add
cwtl
xchg
and
sbb
fsubrl
inc
inc
sbb
mov
mov
ficompl
or
jge
and
hlt
mov
adc
mov
sbb
insb
aam
inc
jns
push
pop
push
mov
sbb
imul
jns
outsb
pop
mov
pop
mov
add
mov
xor
fwait
pop
je
aaa
data16
pushf
rcrb
out
jl
sti
lods
outsb
dec
jbe
add
xchg
out
inc
pushf
ror
daa
inc
cmp
xor
jb
lock
xchg
lods
dec
jnp
sbb
jae
mov
jge
fildl
sbb
das
movsl
xchg
mov
sahf
repnz
cs
mov
adc
xchg
ror
insw
jns
out
stos
mov
sar
pop
mov
sub
clc
push
sbb
cs
lcall
jl
dec
mov
jecxz
pop
iret
sti
repz
mov
mov
mov
mov
sti
jae
cmp
xchg
cmpb
adc
out
adcb
dec
in
inc
sub
icebp
in
jno
mov
or
lds
sti
mov
xlat
les
sub
clc
mov
out
cmpps
jns
push
pop
dec
cmp
loope
jne
jbe
sbb
leave
mov
ret
and
dec
loopne
sti
mov
gs
cmp
mov
sub
lahf
pop
xchg
lret
push
lcall
sbbl
push
nop
and
fwait
negb
xchg
addl
or
sbb
jbe
aad
pop
push
push
insl
inc
fwait
sahf
xor
lahf
push
cmp
xchg
repnz
dec
sar
adc
bound
in
enter
mov
in
sbb
les
jo
inc
stc
popf
jb
clc
loop
sbb
lret
mov
stos
dec
arpl
std
pop
mov
mov
jns
idivl
add
stos
stos
mov
les
jne
sbb
adcl
xchg
xor
stos
sbbl
jecxz
push
fsubs
int
icebp
mov
int
push
inc
cmpsb
and
lret
cld
negb
ss
dec
push
jmp
mov
mov
fs
mov
cli
popa
pop
pop
adc
xor
xchg
aas
adc
sub
sbb
mov
xor
imul
mov
inc
add
mov
inc
clc
lcall
aaa
push
push
js
lock
push
inc
aad
sub
ret
call
xor
lidtl
and
lcall
sbb
pop
or
mov
call
nop
inc
mov
or
mov
call
xchg
pop
sub
pop
pop
fcompl
pop
movsl
cmp
push
pop
jns
mov
push
fildl
sahf
jge
jge
aaa
sahf
xchg
add
sbb
xchg
in
xchg
push
xchg
pushf
test
in
adc
add
andb
sbb
xchg
sub
adc
shll
je
push
out
mov
stos
test
inc
mov
inc
inc
inc
std
leave
int
fldt
sub
aam
inc
cmpsb
add
mov
les
ret
inc
test
jns
fs
add
mov
iret
hlt
xlat
or
test
outsb
adc
push
sbb
ficompl
xor
out
imul
ljmp
cmp
push
cld
and
les
mov
xchg
sub
mov
aad
and
xlat
pushf
fs
jbe
xor
cmp
or
stos
pop
in
add
fldl
mov
ja
cltd
ret
dec
inc
mov
icebp
lea
push
inc
pop
inc
aam
repz
jns
adc
fisttpl
mov
xor
pop
jne
popa
pop
sbb
cltd
adc
rcr
and
into
jnp
push
inc
das
fisubl
mul
stos
es
rcll
or
cmp
dec
xchg
push
dec
shr
push
xor
or
mov
mov
and
sarl
lods
sub
dec
imul
mov
add
xor
jl
hlt
lret
xchg
shrl
xchg
js
or
and
scas
inc
xchg
in
push
rcrb
dec
movsl
pushfw
mov
sarb
lds
fists
add
mov
push
subb
pop
js
clc
jle
add
ret
cli
aam
xor
sbb
shrb
mov
mov
outsb
mov
test
mov
es
cltd
decl
test
lret
fs
popf
lods
mov
daa
out
aas
jne
sub
jge
adc
fsts
fldcw
pop
mov
mov
loop
sub
sub
mov
lret
jae
cwtl
stos
test
lods
mov
mov
push
cmpsl
incb
and
adc
jbe
dec
xchg
mov
ss
xor
push
enter
movsb
mov
sbbb
inc
daa
jae
and
and
sbb
dec
dec
rep
or
xor
arpl
mov
ljmp
pusha
cmp
sarb
outsb
inc
iret
and
clc
or
into
xchg
adc
aas
push
fldenv
loopne
in
ss
dec
aaa
push
mov
into
xchg
jp
test
jge
hlt
mov
pop
jae
mov
sbb
push
and
pop
xchg
lcall
aaa
jno
push
shr
mov
add
jg
cmp
jp
sub
ret
sub
add
pushf
cs
dec
ret
mov
stos
adcl
in
shlb
ljmp
outsl
cwtl
insl
sbb
push
in
ja
add
add
daa
dec
adc
insl
insb
jge
adc
test
in
stos
cmc
je
mov
mov
pop
fidivrs
xchg
fdivl
mov
dec
fstps
add
rorl
int3
ljmp
fmull
mov
es
mov
and
int3
lods
push
jns
mov
rol
adc
dec
inc
loope
call
rol
pusha
cli
pusha
stos
imul
and
sub
xor
mov
adc
xchg
push
mov
fadd
jb
adc
xchg
movsb
mov
pusha
jo
je
sub
sub
and
pop
dec
ret
inc
jecxz
and
or
shl
movsl
cmc
movsl
jp
sarl
mov
xrelease
or
dec
and
sub
sub
ja
out
aam
flds
test
icebp
jge
notb
adc
ret
lods
fs
or
inc
fbstp
pop
mov
rclb
repnz
or
scas
sar
jno
or
cmp
jp
adc
add
loop
fwait
push
mov
or
push
mov
test
pop
push
aam
clc
xchg
leave
sahf
dec
leave
scas
add
bound
fldenv
in
adc
sub
sbb
jae
xor
shrl
and
xor
and
ffree
fsubrs
not
mov
xchg
notb
cmpsl
fnsave
cmp
xchg
xchg
adc
insb
inc
lahf
es
stos
cmp
pop
sub
fists
adcl
mov
cld
and
mov
dec
mov
aam
orl
shrl
jbe
mov
mov
or
movsb
inc
das
mov
push
xchg
rcl
pushl
push
mov
add
stos
mov
mov
mov
sub
insl
nop
outsl
mov
stos
jmp
push
out
popa
rcrl
push
scas
je
fld
dec
push
add
fcomps
xor
push
inc
out
test
popa
sub
mov
dec
pop
xchg
lahf
pushf
push
sbb
enter
cld
insb
test
dec
aaa
add
fwait
std
xchg
int3
out
fcomip
and
jbe
jae
cmp
sbb
aaa
cltd
add
pop
jne
fcoms
andl
insl
in
icebp
xchg
xor
aad
mov
cld
mov
notb
cltd
lret
mov
adc
pushl
pusha
push
bound
adc
pop
and
inc
aas
clc
inc
mov
adc
enter
inc
mov
ds
xchg
push
dec
cmp
pop
icebp
test
xchg
push
xchg
in
lea
outsl
add
int
add
aas
pop
fdiv
xor
ljmp
xchg
sub
push
push
sbb
add
dec
je
jle
and
inc
fnsave
sbb
rol
in
les
xchg
or
cltd
pop
movsb
in
mov
lds
mov
mov
enter
xlat
and
cli
out
pop
insl
pop
cmp
add
sahf
das
jns
jge
pop
xor
pop
cmc
cmc
sbbb
je
jg
scas
xchg
mov
out
out
dec
dec
push
push
outsb
clc
pop
clc
and
stos
in
fstl
subb
push
xchg
test
mov
int3
fisubs
testl
sarl
xchg
sbb
mov
out
sbbl
xchg
jno
lret
and
xchg
adc
test
leave
fdivl
mov
add
or
xor
push
cmp
insb
sub
pop
notb
jns
popf
xor
test
ss
pop
adc
sbb
ret
dec
lods
mov
adc
cmpsl
mov
dec
test
mov
cli
sbb
adc
push
sahf
push
mov
mov
pop
xchg
shlb
jmp
leave
fnstenv
test
sub
cmp
daa
mov
icebp
movq
cmp
pushl
jmp
mov
inc
push
call
stc
ret
mov
and
repz
pop
and
iret
ret
or
call
or
popa
pushf
mov
xor
sub
dec
push
lock
out
data16
add
mov
rcr
xor
mov
push
xor
test
imul
repnz
push
or
imul
jno
xadd
in
mov
inc
out
cmp
adc
jge
test
jecxz
mov
clc
scas
fs
sar
jp
mov
jnp
out
ror
mov
clc
js
ret
cmp
mov
sets
sbb
sahf
adc
outsl
loop
call
cmp
push
fsubl
cmp
repnz
leave
aaa
fiaddl
and
lret
testb
inc
mov
cli
sbb
pop
aad
jle
pushf
fwait
mov
shrb
mov
stc
pop
push
jl
cmc
lods
ret
pop
popf
clc
in
pop
mov
in
stos
jge
iret
mov
lcall
int
adc
jnp
jb
mov
add
xchg
xor
rcrb
outsl
ffreep
sbb
jno
dec
andl
inc
or
dec
hlt
ljmp
lcall
lods
outsb
roll
xchg
pop
and
pop
or
icebp
mov
popa
insl
in
sbb
gs
incb
imul
lds
cmp
imul
popa
int
leave
push
pusha
out
call
out
mov
sbb
notb
lret
push
fstpl
js
mov
subb
vandpd
cmpsb
xor
fsub
ja
hlt
push
lock
enter
dec
pop
fistl
call
insl
test
lods
mov
js
sbb
xchg
push
mov
push
or
or
jae
outsl
mov
loopne
push
call
ljmp
loope
lea
lcall
xlat
mov
nop
sbb
les
cli
xchg
push
xchg
test
xchg
test
je
cmc
movsl
pop
sub
mov
stc
mov
xor
jmp
mov
jne
cmp
rcl
pop
pop
sbb
nop
jl
cmp
rolb
xor
movsl
mov
dec
jb
push
insb
scas
dec
ret
jl
dec
in
std
and
adc
push
inc
imull
inc
sub
xor
push
dec
xchg
sub
nop
ds
lcall
pop
or
imul
gs
sti
cwtl
fdivl
in
dec
xlat
mov
cvtps2pd
jnp
sub
imul
jle
sbb
ficompl
outsb
test
les
std
inc
call
mov
std
cmp
sarl
rcrb
sbb
or
fidivl
loop
sub
shll
xor
cmpsb
cmp
repz
xchg
inc
jnp
out
sub
push
or
stos
or
fcmovbe
cld
roll
rcrl
idiv
test
push
cltd
sbbb
repnz
es
sarb
push
out
jl
cmc
sub
jns
pop
xchg
stos
mov
test
cli
cwtl
in
rcrl
cs
repnz
push
push
push
lock
mov
lahf
mov
aad
addr16
aad
push
sub
ljmp
xor
loope
mov
shrl
jl
fisttpl
int3
cld
cmc
and
aad
inc
sub
jnp
lea
pusha
inc
popf
xlat
pushf
mov
xchg
xchg
testb
and
pop
or
insl
pop
dec
xchg
inc
pop
repz
or
lock
cli
mov
mov
daa
aad
push
aas
hlt
out
icebp
push
mov
xchg
and
lea
outsb
mov
cmp
and
mov
mov
sub
fdiv
jl
and
push
js
add
test
bnd
cs
nopl
push
mov
sub
inc
stos
inc
adcl
ret
jle
xor
cmpsl
out
hlt
push
or
sub
pusha
fwait
mov
testb
bound
adc
imul
fistpll
scas
cmp
jno
loope
inc
fstpt
cmovae
mov
mov
insl
pop
call
stc
xor
mov
ss
shrb
xchg
nop
inc
nop
hlt
mulb
ja
aaa
insl
lret
ja
lea
in
jl
shrl
jl
inc
mov
fs
lea
popf
mov
mov
out
bound
xor
clc
cmp
xchg
or
mov
xchg
and
je
mov
or
loopne
daa
hlt
leave
pop
data16
cmpb
mov
adc
sbb
and
pop
scas
fidivs
lods
sarb
sbb
hlt
nop
arpl
ret
adc
cmp
xchg
rol
jnp
jne
pop
jecxz
mov
mov
sbb
add
dec
mov
incl
mov
les
add
pop
cmc
lea
mov
jg
push
adc
outsl
daa
xchg
add
pop
hlt
jns
inc
fldenv
popa
mov
dec
insb
push
test
data16
xchg
push
popa
mov
xchg
and
dec
jg
xchg
cmpsl
mov
add
adc
mov
bound
mov
sbb
into
fs
jb
push
imul
adc
cmc
pop
insb
fistpll
or
xor
mov
push
repnz
aaa
pop
das
sahf
cmp
leave
cs
cmc
test
je
lcall
in
stc
loope
int
inc
add
das
flds
test
rclb
cmpsb
fdivs
ret
inc
dec
sbbb
adc
data16
inc
mov
cmp
push
and
dec
cmc
loopne
sub
fdivrs
and
xor
stos
dec
dec
and
jbe
sub
jl
or
fidivrs
xchg
jecxz
lcall
xchg
jge
ds
xor
out
fimuls
nop
and
cmpsb
cmp
mov
lret
xor
imul
leave
int3
add
push
pop
rol
fidivrs
mov
ror
movsl
jnp
sbb
mov
cmpsb
mov
shr
add
xchg
push
mov
ds
push
out
ret
add
mov
test
test
test
xor
pop
cmp
popf
mov
cwtl
pop
lods
inc
mov
adc
sub
sarb
gs
lods
jl
mov
incl
mov
clc
aad
lods
cltd
or
push
mov
in
das
cli
xchg
adc
adc
gs
mov
push
mov
orb
das
icebp
xchg
rorl
sub
shll
push
lea
sub
sbb
mov
sbb
xlat
shll
lock
and
push
aas
out
stos
arpl
mov
cs
sub
test
outsb
addb
jp
add
js
jbe
xlat
gs
sti
lods
mov
jb
jg
setns
mov
cmpsl
dec
pop
or
xchg
xor
loope
aaa
stos
repnz
dec
lods
inc
loop
out
je
add
movsb
test
ljmpw
xor
push
in
cmp
jecxz
jnp
daa
orb
ljmp
pushf
cli
add
cmp
mov
mov
test
push
pop
jmp
fldl
outsl
mull
movsb
cld
scas
or
jo
dec
in
pushf
jne
adcb
mov
sbb
jge
pop
aas
pop
or
and
popa
cmp
arpl
xchg
pop
jmp
mov
dec
push
dec
loope
mov
jbe
arpl
pop
mov
mov
cld
cmp
pop
adc
push
sar
stos
or
aaa
pop
lcall
sbb
push
adc
pop
lds
add
aaa
into
xor
fcoms
iret
or
loopne
adc
movsb
sti
push
mov
lcall
test
mov
movsl
pop
mov
xor
cwtl
negl
out
xchg
lods
cmc
adc
xor
add
std
adc
cs
loop
mov
mov
xchg
daa
sub
pop
or
jno
fnstsw
jecxz
xor
nop
test
popa
xor
or
add
push
mov
js
or
sbb
xchg
dec
pop
adc
cmp
jmp
add
pusha
das
add
pop
cmc
jle
xchg
aam
cmp
and
es
dec
in
test
xor
rcll
lahf
sbb
inc
pop
xor
mov
jae
insl
adc
sti
es
pusha
imul
test
sub
push
mov
cmp
add
test
xor
adc
subps
pushf
xorl
xor
sub
dec
mov
mov
jns
cmpsl
test
inc
cs
jg
int
outsb
lods
das
mov
mov
js
mov
fsubr
xor
pushf
xor
dec
fnstenv
andl
in
jns
outsl
mov
pop
xor
lret
cmp
jge
xchg
into
jecxz
add
sti
cli
xchg
mov
xchg
xor
jb
pop
xchg
sbbl
ror
mov
stos
mov
push
pop
mov
imul
adc
ficoml
sbb
or
leave
es
pop
cmp
inc
or
aas
test
add
dec
mov
js
sbb
jmp
sub
push
lods
xor
daa
jmp
scas
and
xchg
and
imull
xchg
pushl
sub
adc
dec
pop
pop
xchg
pop
aad
lahf
jo
hlt
mov
std
std
cs
rep
cli
cmp
push
std
jo
aam
mov
add
das
mov
sub
je
cmp
cltd
mov
adc
jns
mov
callw
aas
mov
xor
movsl
jl
push
ljmp
jno
sbb
inc
mov
sbb
addb
enter
mov
jg
pop
push
add
ljmp
insl
loopne
push
rol
jnp
sub
rclb
mov
popa
out
fiadds
add
push
adc
mov
mov
add
ss
pop
mov
dec
xchg
add
popf
bound
jle
and
push
xor
jmp
fwait
test
out
inc
jno
add
sbb
jl
sbb
mov
addl
mov
inc
xchg
or
jbe
clc
out
dec
jecxz
je
xor
mov
imul
aas
jecxz
out
loop
repnz
lahf
ss
icebp
js
in
inc
fsubr
subb
repz
mulb
mov
jae
mov
jl
cwtl
das
fucomp
cmp
fildl
mov
cwtl
pusha
arpl
mov
sarb
jge
in
sbb
xchg
nop
pop
push
sbb
jb
xor
js
lock
call
pop
out
icebp
test
outsl
sbb
pop
push
movsl
cmp
add
insb
js
gs
fucomp
sbb
cli
cmp
shrl
lods
inc
mov
push
jmp
xchg
mov
or
adc
out
test
mov
int
aaa
mov
movsb
cmp
add
push
add
jo
mov
call
loopne
pop
lock
loope
xor
push
lea
and
xchg
addr16
in
push
jno
xlat
fs
lret
or
jns
xchg
jl
pop
fdivl
jb
fwait
mov
sbb
fildll
xchg
mov
lret
iret
insb
aaa
test
lret
lock
mov
push
filds
lods
fisttpl
push
cmpb
subl
iret
lret
mov
jl
adcb
push
cmpl
aas
sub
imul
icebp
es
rol
push
insb
popa
daa
bound
mov
loope
xchg
stos
repz
imulb
dec
in
nop
or
jne
mov
jecxz
push
aas
push
mov
xchg
bound
insl
leave
je
stos
call
dec
icebp
dec
lahf
mov
sub
and
cmp
push
fcomip
pop
sub
xchg
jle
xchg
fcomps
fbstp
dec
das
insl
or
shll
dec
xchg
outsl
fsubr
xchg
add
ja
xlat
pushf
sub
ret
ss
cmp
mov
push
or
add
lods
mov
fwait
aas
ficoml
iret
dec
dec
in
xchg
xlat
xchg
pop
aaa
test
inc
push
outsb
movsl
pop
test
inc
lods
mov
mov
push
arpl
pop
or
inc
push
sbb
mov
push
jnp
nop
cmp
adcl
dec
sbb
fs
xor
mov
lret
fdiv
pop
ss
je
nop
ljmp
icebp
mov
sub
insb
mov
mov
leave
movsl
cmp
inc
mov
xor
daa
mov
sarl
push
cmp
mov
ret
fimull
imul
push
es
pop
and
in
icebp
xor
in
jne
push
sbb
bnd
push
cmpsl
pop
jge
dec
dec
dec
fcmovnu
xchg
outsl
push
enter
mov
frstor
aad
push
pop
js
loope
xor
add
loopne
pop
stos
pop
dec
push
test
xor
pop
push
enter
jl
mov
sbb
cmp
push
cmp
hlt
jo
sub
pop
xchg
sub
dec
in
scas
stc
testl
lcall
mov
inc
test
fwait
sub
daa
outsl
in
loope
in
cmpsl
mov
inc
add
hlt
push
es
pop
dec
stos
push
sbb
js
xchg
mov
faddl
mov
push
into
mov
pushf
testl
repnz
loope
mov
pop
fdivrs
shll
cmpsl
int3
in
ja
xor
xchg
outsl
jns
ja
sti
jne
std
test
stc
dec
or
cmp
xchg
data16
sbb
mov
push
jp
pop
pop
mov
sbb
lds
jnp
dec
pusha
push
in
xchg
imul
xor
mov
push
lcall
ret
pop
das
adc
aaa
das
jl
add
mov
gs
inc
and
out
std
jmp
fwait
aas
adc
sbb
test
in
sbb
fiaddl
sub
inc
outsb
push
loop
arpl
xchg
jp
lock
or
jmp
jl
test
repnz
std
mov
xchg
cmp
dec
cmp
xrelease
in
in
out
xor
sub
lock
mov
inc
inc
std
xchg
sub
xchg
repnz
ret
mov
andb
push
xchg
cs
sub
sbb
popf
shll
add
add
jbe
ss
dec
das
jne
idivb
mov
lock
clc
pop
and
add
in
lret
jecxz
mov
mov
ss
xchg
fs
mov
adc
cmp
or
dec
or
stos
pop
sub
sbb
mov
or
mov
jp
in
sbb
xor
pop
cld
inc
fucom
icebp
call
pop
imul
lds
ss
jbe
push
ljmp
call
pushf
imul
pop
jbe
mov
dec
fbstp
xor
aam
xchg
jbe
js
jp
rcrb
adc
inc
aas
xchg
mov
in
mov
jle
fstp
cs
push
ja
jo
dec
inc
data16
or
adc
pop
xor
es
imulb
sarb
lea
add
and
rorb
and
or
push
daa
stos
add
lret
mov
xchg
out
pop
call
sub
out
orl
or
shr
cld
push
xor
jmp
inc
xor
push
sbb
inc
adc
or
jg
add
xor
push
mov
or
adc
sbb
mov
mov
inc
ljmp
mov
test
pop
push
jb
addps
mov
je
aaa
fcmovb
adc
hlt
push
push
jo
xchg
daa
outsl
hlt
pop
stc
ror
sbb
sub
mov
out
jo
cltd
xor
fdivrs
inc
xchg
sbb
inc
ds
sbb
cmpsb
sub
cmpsl
sub
pop
icebp
enter
mov
rcrl
sub
int
outsb
or
mov
out
test
cld
mov
aam
cld
rorl
sub
xchg
inc
lret
gs
sub
imul
pop
adc
mov
test
fisttpll
bound
xor
xchg
or
mull
lahf
shrl
ret
dec
pop
mov
pop
les
push
xor
test
repnz
pushf
or
mov
adc
dec
scas
mov
or
cmp
enter
push
imul
mov
ret
lcall
jbe
cmp
pusha
popf
jl
mov
fildll
repnz
xchg
lods
adc
js
sub
jp
testl
loopne
mov
mov
cmp
cmp
xchg
cmp
mov
cmp
and
fdivl
adc
mov
stos
je
sbb
dec
sub
xor
aad
mov
or
mov
xchg
lea
js
sbb
js
in
sbb
add
dec
lahf
cmpsl
push
enter
ljmp
inc
lcall
and
add
adc
pop
inc
or
test
cwtl
aas
clc
lret
movsl
pushf
sub
adc
cmp
ds
leave
mov
xchg
pop
cmp
add
test
es
incb
lea
mov
adc
xchg
lods
rcrb
mov
push
subl
daa
mov
xor
repnz
aas
cmc
mov
pusha
cmp
xchg
mov
sub
dec
mov
pop
movsl
in
cld
mov
and
pop
into
loop
mov
adc
les
sub
fwait
out
mov
out
das
sahf
push
shrb
dec
aad
sbb
push
leave
jg
jno
xchg
sub
sbb
inc
xchg
mov
jo
xchg
jb
scas
arpl
and
repnz
or
lea
std
adc
jl
cmpsb
fsubr
cli
mov
adc
jne
out
ss
push
dec
in
jl
shll
clc
cmp
or
popf
jne
xchg
mov
cmp
xor
push
jge
and
imul
mov
andb
fldcw
adc
and
hlt
xchg
jmp
fwait
pop
xchg
or
cmp
andb
orl
and
iret
aad
inc
xchg
fwait
or
jnp
jbe
dec
push
jmp
add
cmpsl
test
sub
js
in
jecxz
mov
or
insl
outsb
enter
loope
int
sbb
enter
lods
repz
xorl
inc
scas
jge
mov
cmc
sbb
sarb
push
xor
add
aas
sahf
mov
fstpl
xchg
mov
outsb
adc
dec
and
cli
fcmovbe
mov
rcrb
ja
stc
add
aas
dec
sbb
mov
ja
addr16
and
out
or
jne
mov
in
jne
icebp
das
mov
add
cmp
sub
lcall
gs
add
adc
mov
pop
pop
push
movsb
jne
pushf
arpl
cmp
jb
cmp
xlat
pop
mov
test
cmp
movsb
stc
push
inc
fimull
mov
in
in
cltd
push
push
xchg
dec
cmp
repz
lea
jbe
outsl
push
jb
test
pop
jle
hlt
rcr
cmpsb
or
inc
mov
cltd
inc
pop
cmp
adc
lock
mov
lahf
mov
sbb
test
mov
and
outsl
cmpl
loop
inc
inc
cs
mov
loope
stc
mov
sub
ds
or
rorb
sbb
jle
push
xchg
fmull
mov
xor
insb
mov
mov
jbe
insb
out
xchg
pop
adc
into
cmp
push
movl
out
pop
aad
dec
lods
gs
hlt
xor
mov
and
shrb
add
int3
rcr
mov
jle
push
inc
sbb
aam
shlb
mov
cld
and
dec
dec
aaa
mov
fimull
or
inc
jle
adc
push
shrl
jb
mov
pop
sbb
dec
push
mov
dec
arpl
inc
rcrl
dec
dec
fwait
xchg
inc
in
lahf
fs
scas
in
pop
shl
mov
push
loop
leave
jle
sub
adcl
fs
insb
and
fsubrs
out
call
lock
movsl
adcl
sbb
out
push
movsl
lea
cmp
cmp
xchg
stc
inc
aas
pushf
cmpsl
decb
xchg
sbb
clc
sahf
xor
jb
adc
dec
in
or
ret
ja
insb
sub
pop
pop
cmp
pop
lods
add
sub
mov
or
cltd
ss
add
mov
inc
add
scas
jp
and
in
scas
and
adc
repz
pushf
cli
cmp
jecxz
xchg
stc
and
fcomps
loope
add
mov
mov
pop
inc
gs
fucom
lods
cmp
xchg
stos
xor
mov
pop
leave
jle
out
out
mov
into
cld
mov
daa
fsubrl
push
dec
scas
fsub
push
cpuid
xor
rorl
cs
fcomip
aam
add
push
mov
dec
insb
mov
or
scas
shl
loopne
movsb
mov
ds
std
pop
adc
xchg
cmp
mov
push
mov
mov
int3
leave
mov
aaa
stos
xchg
and
or
sbb
push
jmp
cld
jb
pop
pop
repnz
call
repnz
sub
into
and
cli
push
lods
pop
jnp
lods
inc
loope
dec
cmc
test
cltd
mov
or
xor
or
aas
push
sub
popa
movsl
aaa
push
sub
and
inc
xchg
or
idivl
xchg
clc
xlat
scas
lods
mov
xor
xchg
pusha
leave
sbbl
popw
dec
sbb
push
xchg
jle
pop
jne
mov
and
mov
mov
cwtl
decb
hlt
addr16
mov
dec
pop
dec
add
lds
xor
adc
bound
in
pusha
fwait
pushf
lea
aaa
lret
xchg
mov
mov
lcall
xchg
mov
adc
mov
je
sarl
pop
push
pop
scas
ds
or
shlb
cwtl
and
out
mov
popf
dec
adc
clc
mov
nop
jp
push
inc
pusha
fcos
adc
scas
lret
inc
xchg
lods
pop
in
sahf
das
fcom
mov
adc
cld
fildl
and
push
xor
insb
cmp
jno
dec
aad
rorl
insb
add
pop
lods
xchg
inc
sbbw
xchg
in
ret
or
dec
or
fcomps
pop
push
sbb
add
jne
and
mov
sbb
aam
sbb
dec
adc
push
xchg
mov
shrb
mov
imul
lds
cwtl
out
mov
pop
outsb
lea
rclb
sbb
cmp
test
cmc
add
addr16
out
xchg
mov
cwtl
jle
shrl
pusha
dec
jb
sbb
pop
imul
sbb
pop
movsl
xchg
dec
sbb
cmpsl
out
aad
hlt
inc
adc
inc
arpl
lahf
repnz
iret
jns
or
jns
movsl
mov
movsl
mov
xchg
jp
iret
and
adc
add
mov
and
xchg
push
aam
out
lock
pushf
xchg
scas
fstpt
or
mov
adc
loopne
sbb
ficompl
hlt
in
push
and
adc
negb
cld
in
into
enter
popa
and
inc
push
xchg
jmp
or
les
jbe
pop
mov
bound
sub
pop
rorl
sub
cmpsl
push
test
movl
das
stos
mov
into
and
inc
inc
lods
inc
xor
test
cmpsl
fidivl
dec
pop
dec
je
sti
je
mov
adc
dec
dec
insl
jno
outsb
shll
in
jae
pop
lret
fwait
out
mov
std
or
dec
or
hlt
ror
and
nop
je
movsb
sub
lea
xchg
movsl
mov
adc
outsb
sub
mov
sub
js
sbb
sbb
xor
sbb
mov
cli
xchg
cmp
fstpt
add
adc
lods
dec
xchg
scas
sbb
push
lahf
scas
adcb
cmp
xchg
sub
inc
cmp
and
mov
or
pop
dec
ret
pop
jg
inc
pop
aas
dec
loope
jg
add
dec
call
sbb
push
in
ds
repz
js
subl
inc
mov
cmp
xor
lcall
sub
mov
addr16
lock
push
push
fnstenv
out
pop
repz
pop
in
cs
pusha
clc
cs
and
sti
dec
jg
inc
test
jle
or
and
pop
dec
out
pop
stos
inc
mov
cmp
stc
enter
mov
aaa
pop
into
in
stos
hlt
pop
test
int
aas
push
jge
inc
mov
sbb
xor
call
movsl
loop
add
xlat
sbb
pusha
jmp
fstps
movsb
xor
enter
push
test
mov
inc
lahf
sbb
mov
repz
jl
fadd
push
popf
add
sbb
mov
in
push
rorl
mov
outsb
lcall
xchg
push
in
mov
xchg
js
stos
popa
subl
pushf
mov
push
sub
pushf
cmp
in
mov
dec
repz
nop
in
jne
ret
aam
pop
pop
pop
cmpsl
add
fwait
es
inc
jo
shlb
orb
xchg
es
out
fs
and
xorl
into
gs
fbstp
imul
or
or
leave
mov
lret
test
cmpb
pushl
je
jl
sbbb
ficompl
arpl
shl
loop
mov
jg
push
push
jns
inc
lea
dec
lret
xor
gs
or
stc
dec
push
clc
or
xor
cmovbe
push
add
jbe
shlb
xor
les
shr
pop
jl
adc
sub
sub
cltd
in
lret
mov
xchg
jg
enter
inc
ret
ror
xor
sbb
in
sbb
push
fdivrl
cltd
std
inc
idivl
inc
add
daa
int3
mov
in
mov
push
mov
inc
xor
push
jmp
aas
cltd
xchg
cwtl
xchg
mov
incl
inc
fmull
test
ljmp
pop
or
add
fnstcw
jb
jg
rol
xchg
mov
scas
aaa
ret
jmp
outsb
imul
sbb
hlt
xor
mov
mov
push
scas
add
pop
lcall
stos
push
mov
shll
xlat
callw
test
and
pop
adc
mov
xor
test
push
add
pop
ds
xor
cmp
pop
and
bound
cli
xchg
or
push
sbb
or
push
lods
or
dec
mov
fdivrs
js
out
test
xor
inc
nop
mov
in
js
push
inc
popf
ret
mov
xor
bswap
dec
cwtl
pop
fldl2e
xchg
mov
dec
cmp
iret
add
sarb
sti
inc
in
arpl
xchg
mov
sub
repnz
xlat
loop
call
adc
jle
mov
mov
push
mov
fdivrl
ljmp
jo
aam
out
pop
sbbb
fisttps
xor
add
mov
insb
subl
rorl
das
fwait
sbb
pop
cmp
xchg
or
or
repnz
test
dec
sbb
cmpl
insb
add
jne
mov
or
lret
lahf
cltd
sbb
lret
and
call
lret
jnp
aad
and
mov
mov
jb
mov
out
stc
popf
inc
dec
mov
lods
stos
cmc
out
xchg
arpl
xchg
les
les
in
test
push
sarl
add
out
mov
pushf
loopne
into
dec
pop
xor
adc
mov
ja
lcall
push
call
mov
jmp
mov
jnp
in
push
aad
adc
cmp
fwait
xchg
fiadds
rclb
fmull
decl
and
pop
sub
pop
pop
xlat
lods
jle
outsb
mov
movl
and
jmp
mov
fwait
xor
inc
or
adcb
mov
fidivl
inc
ss
xor
mov
movsb
shll
mov
jmp
xor
repz
jge
jge
mov
outsl
jns
inc
fdivrp
cltd
int
dec
mov
sub
xchg
adc
xabort
mov
mov
adc
dec
bound
aad
mov
adc
or
sbb
mov
xor
cmp
lock
aam
inc
mov
cltd
xor
xor
jb
subb
andl
dec
xchg
aam
in
nop
mov
insl
cmp
mov
mov
sbb
sub
mov
out
rclb
xchg
repnz
mov
mov
iret
lret
mov
jmp
jg
rolb
cmp
jmp
fs
bound
adc
dec
dec
add
insb
mov
sbb
mov
add
push
callw
dec
decb
or
adc
cmpsl
mov
jmp
in
lods
adc
xchg
mov
inc
xchg
mov
xchg
outsl
aas
fsubrl
test
mov
cmp
ret
dec
and
out
pop
jo
out
shlb
sub
push
mov
jae
and
pusha
pop
sbb
or
rcrb
xor
add
sbb
sub
push
les
jle
test
or
inc
cwtl
jg
mov
add
xor
sbb
mov
xor
sub
loop
push
shrb
nop
dec
clc
subl
jae
fmuls
or
nop
and
cmp
push
cmp
pop
icebp
push
xchg
adc
es
pop
dec
in
cmpb
adc
mov
pushf
outsl
pop
repnz
hlt
mov
fstpt
push
mov
cmp
fiadds
nop
mov
xchg
pushf
pop
dec
sbb
add
cmp
cmp
xor
xchg
fsubrs
inc
push
or
cmp
cmpsl
push
movsl
addr16
mov
xor
js
inc
pop
xlat
cltd
shrb
mov
xchg
mov
imul
cwtl
or
inc
out
fadds
ljmp
xor
push
sbb
test
and
push
sbb
lock
shll
sarl
sbb
pop
jp
mov
pop
in
dec
aas
inc
aad
lock
dec
sub
cmp
movsl
mov
jg
xor
xor
imul
sub
cmp
pop
xchg
addr16
xchg
jne
cmp
ror
pusha
add
xor
out
jae
and
adc
pop
and
lret
or
in
xlat
or
push
hlt
push
orb
push
sub
mov
inc
stc
inc
dec
hlt
pop
push
and
data16
mov
dec
stc
inc
mov
mov
mov
inc
inc
imul
scas
mov
mov
add
pop
hlt
jb
pop
mov
pop
lcall
mov
xchg
mov
or
scas
adc
lea
xor
inc
repnz
sbb
xor
jae
adc
sub
xor
fucomi
nop
outsb
ss
dec
pop
xor
xor
lea
gs
xor
push
sub
daa
sahf
lods
popa
sub
xchg
push
scas
in
mov
jge
cld
pop
js
sbb
fwait
pxor
xlat
xlat
mov
mov
arpl
sub
faddl
sahf
ret
mov
std
jo
fstl
out
pop
into
test
sub
pop
pop
insl
dec
arpl
sub
ds
ds
inc
aaa
sbb
outsl
or
ret
testb
outsl
adc
cs
jge
mov
gs
les
daa
inc
xor
dec
cmp
push
lret
sub
sub
stos
enter
sub
ds
pop
test
mov
jnp
aam
or
pop
sub
inc
sub
xchg
jnp
xchg
dec
stos
fwait
or
int
aad
imul
mov
mov
push
add
int
push
jge,pt
imul
sahf
aaa
pusha
fwait
iret
jno
mov
or
xchg
scas
mov
out
rorl
sub
int
aaa
ja
clc
xchg
imul
lahf
fsubr
push
push
jo
mov
push
xor
shrb
aaa
data16
push
and
pop
cmp
inc
lds
pop
push
es
pop
sub
xchg
scas
ret
adc
in
int3
pop
adc
inc
cmp
div
das
mov
xchg
lods
mov
push
jp
insl
mov
jge
aas
sbb
sbb
lahf
in
loop
icebp
out
or
mov
push
sarl
popa
or
jl
inc
pop
cmc
jne
fwait
mov
inc
jl
js
sbb
dec
lcall
or
inc
xlat
sti
cmp
cmp
dec
popf
mov
xor
lock
lock
aam
xchg
mov
jl
mov
lea
sub
jns
jae
push
mov
dec
movsl
cmp
popl
test
mov
aas
repz
sub
pop
push
pop
nop
or
cwtl
mov
dec
push
mov
out
sbb
in
scas
push
mov
rcr
sub
imul
mov
jmp
push
in
mov
call
adc
sbb
xor
cmc
stos
jp
cmp
pop
mov
and
cli
push
mov
fucomip
inc
sub
inc
leave
fnstenv
push
jb
jb
inc
cwtl
movsb
lods
inc
jmp
sbb
add
loopne
insl
push
sbb
dec
pop
pusha
mov
xchg
pop
addr16
fwait
mov
push
cs
or
bound
cmpsl
out
gs
push
pusha
or
mov
nop
test
sub
pop
mull
loope
mov
mov
pop
lock
xorps
fcompl
leave
and
mov
mov
jae
arpl
lods
lret
int
stos
dec
mov
cmp
pusha
outsb
shll
inc
in
daa
outsl
orl
push
pop
lock
mov
fcomps
mov
mov
cmp
pop
xchg
mov
xchg
xor
dec
add
xchg
stos
test
jmp
outsb
or
ficoml
xchg
dec
or
xor
incl
or
shlb
inc
test
daa
adc
popa
and
mov
jne
cmc
inc
nop
dec
xor
fisubl
sbb
test
aad
mov
and
add
sbb
cmp
xchg
mov
outsb
iret
push
pop
jg
jns
lret
es
dec
mov
dec
sbb
sbb
fsubrl
mov
lds
jns
mov
jns
mov
rcl
hlt
mov
cmp
xchg
insl
imul
xor
mov
loopne
jns
stc
adc
aaa
or
imul
call
xchg
repnz
pop
sti
xchg
mov
addr16
jle
adc
inc
cmp
jae
repnz
stos
xchg
mov
frstpm(287
repz
push
dec
push
xchg
xlat
mov
das
push
jl
xchg
addr16
ljmp
out
fldl
sbb
inc
or
cmpsl
mov
cmpl
mov
xchg
add
pop
rcrb
daa
dec
xchg
outsl
movsl
aas
dec
or
mov
sbb
out
xor
xchg
lods
loopne
push
sbb
xlat
cmpsl
out
mov
into
inc
fdivrl
mov
pop
insb
pop
arpl
cmp
xor
adcl
xor
ficompl
push
xchg
cmc
jns
daa
mov
mov
dec
out
fsubrl
push
and
fs
xchg
lret
add
inc
dec
es
mov
rclb
hlt
clc
and
cld
aaa
cmp
jge
imul
push
jbe
in
movsb
out
add
aam
dec
mov
aaa
xor
mov
jmp
sub
mov
repnz
xor
dec
aam
inc
and
and
das
enter
data16
pop
xchg
xor
ja
fdivrl
ds
add
dec
dec
sbb
sar
in
dec
pop
out
xor
lods
xchg
xor
and
clc
lods
xchg
cmp
and
mov
ljmp
pushf
divl
pop
cs
xchg
push
jno
push
xor
scas
jmp
call
jg
pusha
dec
imul
je
mov
mov
pusha
ss
jp
pop
mov
gs
jg
insb
mov
nop
push
sbb
xchg
fcoml
adcl
out
ret
xchg
ds
ljmp
and
testb
jge
ret
inc
pop
cmp
ret
fldl
cwtl
sbb
xor
pop
lea
add
mov
mov
add
les
mov
test
mov
push
mov
sbb
sbb
add
or
and
lret
mov
push
test
add
mov
sbb
push
aam
and
ds
fwait
xchg
cmp
xchg
cmp
iret
daa
adc
xor
lcall
push
xor
popa
test
dec
add
andl
jbe
sarl
add
push
lcall
cwtl
push
jb
ret
sbb
loope
push
das
sbb
das
mov
or
adc
pop
rcrl
sub
sub
daa
mov
jl
lds
dec
ds
mov
mov
mov
out
dec
mov
out
out
mull
dec
sbb
cmpsb
dec
jl
pop
test
negb
mov
test
jmp
or
ljmp
add
inc
push
shll
test
jo
call
jmp
outsb
sub
sar
cmp
mov
daa
fdivrl
dec
inc
push
or
lock
lods
scas
mov
lds
int3
add
jl
sbb
test
inc
das
mov
push
je
into
inc
scas
in
xor
scas
rcrl
jecxz
cli
ret
sub
dec
push
out
jbe
push
jno
fwait
or
xchg
xchg
scas
sbbb
fs
cmc
insb
xchg
xchg
or
xchg
push
jp
jg
shlb
sbbl
pop
out
lret
mov
repnz
cmc
mov
push
fwait
in
mov
cmp
adc
cltd
outsb
pop
xchg
add
dec
lds
sub
mov
fimull
xchg
stc
inc
mov
lock
popa
or
adc
or
mov
push
xchg
dec
test
pop
push
ret
notb
mov
inc
mov
add
lods
mov
xor
adc
push
cmp
int
cld
scas
jg
mov
sub
inc
ds
push
cli
call
add
arpl
fwait
xchg
jl
test
push
clc
jb
mov
loope
rcr
sti
out
test
mov
cld
clc
mov
fnclex
inc
mov
nop
bound
fcomp
or
mov
loopne
shrl
xchg
scas
xor
hlt
aas
push
lock
sub
cmp
outsl
mov
insb
dec
shrl
push
stc
inc
int
or
nop
fs
adc
or
cmp
mov
push
popf
notl
in
xchg
xchg
dec
sub
fisttpll
mov
into
test
out
jns
push
lret
dec
pop
inc
mov
mov
mov
outsl
or
cmp
jbe,pn
adc
stos
pop
pop
lock
fdivrs
cltd
lock
pusha
ret
xor
xchg
sbbb
test
imul
xchg
push
jo
inc
out
fsubs
pop
inc
popf
add
push
inc
mov
pop
pop
push
sbb
enter
adc
dec
add
stc
adc
cwtl
xor
mov
mov
lahf
and
fdiv
xchg
lret
cs
or
mov
pop
rcl
mov
xor
scas
mov
add
push
cltd
scas
subb
and
mov
xor
inc
pop
divb
push
mov
mov
ja
or
add
jnp
and
cmpb
jns
ficompl
inc
mov
es
sarb
insl
loopne
aaa
xchg
iret
and
je
lret
and
pop
not
mov
jb
xor
or
xchg
mov
mov
add
loop
jno
nop
mov
pop
fidivs
imul
cld
and
mov
dec
nop
stos
jbe
sub
cmp
sub
cmp
cmc
mov
xchg
xor
mov
sbb
pop
negb
aam
fidivl
loop
and
insl
add
daa
fiadds
add
daa
sub
pop
mov
dec
into
cmp
notl
repz
in
sub
pop
cmc
insb
xlat
ss
push
mov
scas
inc
xor
mov
scas
clc
xchg
enter
aaa
xor
dec
dec
push
lock
in
sbb
inc
mov
outsb
imulb
repnz
lret
add
sub
ja
sbb
movsl
xchg
std
or
psubusw
pop
pop
insb
leave
xor
xor
test
push
pop
popa
push
xchg
cmpsl
faddp
jmp
cld
inc
pop
js
in
leave
mov
jno
cltd
sub
shl
mov
and
inc
inc
xor
mov
out
jns
popa
and
jo
js
imul
dec
inc
stc
imul
mov
das
sbb
mov
dec
out
mov
fisttpl
jb
aad
lods
mov
lret
popa
and
cmp
imulb
mov
inc
sbb
ljmp
lahf
cmp
add
lods
mov
add
jg
cmp
adc
xor
aad
jns
dec
pop
cmc
fs
pop
clc
mov
testb
jno
std
cmpsb
sbb
in
clc
or
xchg
add
mov
jns
sub
lds
int3
nop
imul
inc
icebp
mov
hlt
mov
dec
sub
pop
push
lds
mov
gs
cmp
adc
mov
ret
pop
das
lds
cmp
mov
aaa
push
ss
or
xchg
push
fimull
push
xchg
movlps
lods
mov
out
mov
sbb
outsb
adc
or
sbb
stos
pop
jg
lea
bt
and
mov
pusha
test
mov
popa
push
movsl
bound
orb
sub
test
scas
ss
ss
fsubr
outsl
fisubrs
js
adc
in
cmp
sbb
movq
jge
rcrl
sub
sbb
cmc
inc
pop
mov
dec
lahf
fldt
xlat
shll
mov
arpl
pop
adc
or
movsl
call
mov
mov
daa
sbb
pop
mov
push
mov
int3
push
sub
pop
test
stos
mov
pop
shl
cmp
scas
sbb
adc
push
out
jo
xchg
mov
inc
clc
loope
xchg
adc
int3
pop
test
pop
adc
and
iret
push
push
cmpl
ljmp
out
imul
inc
outsl
jns
dec
bound
cwtl
pop
lea
out
pop
or
push
xor
xchg
add
gs
das
push
and
out
push
and
sbb
outsb
add
int3
add
push
test
mov
and
lock
sbb
mov
and
pop
aam
inc
inc
push
xchg
mov
pop
sub
inc
mov
xchg
add
outsb
loope
scas
das
mov
pusha
push
scas
or
call
addr16
ljmp
pop
push
mov
sti
loopne
add
rcrl
mov
sub
jnp
hlt
push
xchg
push
inc
clc
xchg
inc
sbb
inc
std
vpsrld
out
mov
arpl
ret
pusha
std
aam
das
sub
adc
ret
jp
xorb
bound
mov
cs
test
addr16
nop
mov
lea
roll
sbb
mov
mov
test
lcall
xor
inc
fdivl
jl
cmp
adcb
mov
aad
pop
xchg
mov
popa
push
jb
les
xlat
insl
sub
aam
xchg
jbe
pop
mov
dec
and
das
mov
mov
xor
mov
cltd
pop
adc
into
ret
movsb
jbe
sub
aas
rorl
rorl
icebp
dec
jge
add
js
mov
xchg
xchg
jmp
dec
loop
jae
pop
mov
call
mov
and
scas
rolb
sbb
add
inc
sbb
out
test
popa
subl
fistpll
fldenv
subl
negl
insb
xchg
push
out
cltd
jno
or
mov
cli
push
sahf
fwait
push
or
gs
andb
cld
gs
jae,pt
inc
test
mov
gs
fidivs
in
inc
or
fsubrp
rorl
adc
lahf
scas
pushf
cli
addb
sahf
ja
ja
push
mov
scas
testl
xchg
cmpsb
nop
xchg
push
sti
push
in
sub
or
das
aad
movsl
or
inc
loope
mov
repz
repnz
cmpsl
sub
insb
stos
jmp
pushf
jae
ret
jmp
mov
shll
pusha
jb
leave
mov
lahf
jne
loope
push
fmuls
pop
add
lds
outsb
inc
sub
test
push
jnp
nop
mov
sarl
in
mov
or
push
mov
js
and
push
xlat
jge,pt
int
std
imul
inc
pop
xchg
add
and
jmp
test
adc
int
out
push
out
lods
jo
xorl
jne
cld
sbb
inc
mov
lret
lret
jbe
scas
xchg
sub
stos
inc
or
pop
mov
sub
mov
jp
mov
mov
enter
dec
lcall
int
add
lret
push
rclb
mov
inc
jbe
lret
push
push
xchg
xorb
mov
addr16
pop
pop
hlt
push
outsb
aaa
into
ljmp
sub
add
inc
pop
mov
fs
aas
fwait
lcall
data16
popa
jns
xchg
pop
mov
sub
dec
addr16
cmpsb
xchg
scas
push
xchg
loopne
mov
cmp
xchg
hlt
mov
sbb
aas
dec
add
xor
xchg
adc
loope
mov
insb
sub
negb
ret
sti
aad
adc
jae
in
sar
xchg
adc
cmc
adc
popa
mov
mov
in
in
loope
jecxz
fidivrl
popa
clc
sbb
aas
jg
dec
js
mov
mov
shll
notb
scas
loopne
iret
js
add
das
jle
inc
mov
cmp
inc
jle
mov
int
psubw
dec
xlat
subb
or
jg
inc
mov
xchg
add
mov
or
push
xchg
pop
lock
xor
repz
iret
test
jb
test
arpl
es
mov
rolb
dec
add
lahf
out
movsl
aad
push
xchg
stos
mov
xchg
mov
adc
ds
xorb
cmp
insb
in
lods
inc
maskmovq
jae
xor
loop
xlat
cmp
or
test
sub
sbbl
sub
mov
or
leave
mov
fildll
push
mov
pushf
cmc
xor
push
adcb
idivb
daa
push
sahf
sub
xchg
sub
push
xchg
add
dec
xor
xchg
pop
sti
adc
stos
cld
add
test
sbb
dec
sbb
negl
xchg
jmp
push
rclb
jnp
subb
das
mov
fbstp
jp
mov
cmp
and
shrl
cld
test
jg
pop
imul
in
add
mov
stc
sbb
or
popf
fistps
jmp
jl
jl
jo
ss
jae
into
mov
push
aaa
outsb
out
and
mov
repz
dec
jne
in
pop
xchg
xchg
loope
xlat
lcall
pop
mov
test
sbb
test
mov
nop
add
fldl
inc
lock
ret
cmc
repnz
aaa
push
pop
dec
in
dec
jnp
loopne
xor
ljmp
inc
ss
and
addb
lock
ret
xor
gs
xchg
pusha
iret
testb
ret
inc
pop
push
jmp
stos
xchg
popa
add
test
or
fcomip
dec
out
push
dec
test
mov
xchg
jle
das
clc
jge
insl
xchg
stos
mov
cmp
iret
push
and
mov
inc
dec
jnp
ljmp
lret
lods
mov
imul
fbld
sub
or
and
inc
pop
repz
jb
insb
inc
xchg
adc
mov
adc
dec
mov
push
cwtl
jae
add
aaa
fidivs
xor
adcl
sub
lret
out
xchg
ss
xor
adc
add
mov
rorl
mov
or
push
push
or
cwtl
xchg
push
aam
gs
cmpsb
lds
or
aam
jmp
and
lds
ds
dec
xor
test
push
mov
cltd
cmp
lock
pop
or
cmp
mov
cmp
fsubrl
sub
jb
mov
into
into
mov
aam
xor
movsl
pusha
aas
jne
inc
xor
xchg
movsb
push
outsb
jmp
out
aas
xchg
pop
mov
xchg
pop
stc
pop
outsl
cmpsl
sub
cmp
cmpsb
push
push
xchg
and
insl
pop
xchg
dec
dec
add
fisttpl
jp
cmp
in
mov
filds
or
in
adc
mov
test
pop
aaa
mov
ret
inc
int3
outsl
loopne
adcl
add
xor
int
xor
xchg
xchg
push
ljmp
scas
cmp
call
adc
and
mov
in
ds
outsl
add
pop
std
mov
push
out
ret
mov
xlat
call
dec
pop
mov
mov
vcvtsi2ssl
lret
dec
push
mov
jbe
arpl
les
imul
add
mov
sbb
lea
mov
sub
insb
sbbb
enter
andb
sub
repnz
push
imulb
xchg
imul
int
sar
xlat
ss
and
in
test
outsl
adc
jle
push
lret
daa
fldl2t
push
daa
shl
pushf
xchg
inc
pop
mov
xor
or
ret
pop
faddl
jmp
nop
xchg
push
add
or
add
loopne
mov
int3
mov
js
in
faddp
cmpsb
call
or
mov
inc
mov
cmp
daa
pop
ret
or
push
loope
cmp
pop
inc
out
cld
outsb
or
mov
jge
jno
out
jp
scas
insb
xchg
jp
and
js
adc
mov
rcrl
out
pop
fists
jmp
negb
repnz
cmpsl
test
sub
das
mov
mov
in
add
inc
mov
scas
int
cmc
mov
fistpll
xchg
push
xchg
inc
mov
push
pop
cmpsb
movsb
pop
out
mov
stos
mov
mov
add
xchg
into
dec
sahf
mov
xlat
hlt
fbstp
pushf
leave
inc
daa
xor
ds
in
ficomps
mov
xchg
ret
fwait
mov
lock
popf
aam
lret
mov
aam
dec
cmc
or
push
mov
addb
or
fdiv
push
pop
mov
stc
inc
mov
fists
fsubl
mov
cld
std
or
inc
out
xor
out
int
cld
push
aad
inc
adc
xchg
add
add
mov
pop
test
jp
int3
js
ret
test
dec
loop
inc
cltd
mov
push
shrd
dec
dec
push
jae
push
cmp
pusha
psllw
xchg
adc
aam
rolb
mov
clc
out
push
leave
fstl
inc
outsl
or
popa
xorb
push
push
add
cmp
mov
cmp
cmp
adc
mov
mov
xchg
das
fsts
push
push
shll
pusha
movsb
lret
add
jp
out
lcall
adc
mov
jg
xchg
popf
in
xchg
int3
insl
mov
aaa
aam
xchg
xlat
jp
add
cs
outsl
stos
cmp
cltd
inc
inc
movaps
or
jl
ja
mov
sub
mov
mov
lock
adc
jge
xchg
scas
nop
ljmp
mov
jb
int
sub
and
repnz
add
jge
xchg
push
adc
or
sbb
rcrl
fwait
xchg
mov
mov
adc
cmp
mov
jg
pop
mov
jns
and
addr16
pop
mov
cmovl
mov
cmp
enter
pop
xor
or
incb
push
or
in
xor
pop
sbb
jno
sbbl
mov
sahf
xchg
inc
push
dec
lods
dec
push
sub
xlat
cmc
cmpsl
pop
xor
pop
jp
cmp
cmpsl
and
add
sub
sub
adc
mov
xchg
data16
mov
aas
mov
repz
dec
and
pop
movsl
fdivrs
push
insl
dec
mov
lret
jnp
pop
out
loop
repz
or
cwtl
outsl
add
inc
sbb
aaa
cmpsl
push
jmp
jb
cmp
hlt
clc
cmp
add
lcall
xchg
adc
mov
arpl
pop
xchg
xchg
cmp
and
add
mov
enter
inc
jge
inc
stos
mov
jle
xor
push
adcb
repnz
pop
inc
and
xchg
pop
pop
fdivrl
out
mov
and
jp
xchg
pop
sbbl
or
es
and
movsl
cmp
mov
sarb
fnsave
pop
and
push
scas
push
movsbl
movsb
insb
pop
incl
jle
pop
stc
or
push
pop
inc
dec
sti
cwtl
movsb
cs
mov
and
cmpl
fimull
push
or
cmp
push
pop
push
repz
stos
shlb
jle
lret
aas
sti
imul
pop
rol
outsb
jno
daa
jne
inc
mov
push
ret
xor
cli
lock
fsubl
pop
adc
xchg
lods
sub
ss
test
push
push
test
xlat
in
adc
lcall
es
nop
imulb
addr16
gs
pop
rcrb
das
hlt
movsb
inc
jae
sub
popf
push
rorb
decl
insl
inc
call
cmpsl
dec
ret
xor
xor
out
add
pop
outsl
inc
into
sti
into
popa
push
add
iret
sub
movsl
jmp
das
add
test
jb
and
or
sbb
cli
ret
in
mov
scas
xor
je
data16
mov
xor
jl
gs
int
mov
pushf
inc
stos
add
mov
cld
lret
stos
inc
mov
enter
std
xchg
das
scas
std
pop
mov
mov
clc
mov
mov
pop
int
ret
rclb
movsb
bound
sbb
enter
jp
mov
test
push
lcall
sbb
dec
aaa
je
imul
mov
mov
sub
nop
mov
call
or
int
xor
fs
push
pop
lret
mov
pop
add
sahf
ds
icebp
cltd
dec
mov
push
mov
add
repz
shrl
dec
iret
jecxz
push
add
test
adc
sub
aad
mov
dec
cmp
mov
das
addr16
cld
pop
mov
sbb
jle
std
sub
idivl
adc
sbb
je
fisttpll
pop
ret
call
push
jnp
popa
fsts
cmp
sub
fdivl
xor
ljmp
mov
cs
ljmp
idivl
add
divss
outsl
mov
cwtl
xchg
adc
mov
adc
ret
xor
xor
fstps
std
int3
xchg
clc
adc
daa
push
aad
pop
pop
lcall
cwtl
das
les
dec
lret
add
bnd
aam
ljmp
cmpsl
daa
aas
inc
mov
push
xchg
aas
and
inc
adc
pop
and
sbb
bnd
loop
in
pop
adc
mov
mov
jo
sbb
xchg
or
sub
push
ret
aaa
or
xchg
stc
stos
mov
jmp
fadd
inc
mov
ljmp
out
ds
and
add
scas
sti
mov
add
and
fdivl
sub
sti
jl
cmp
inc
xchg
and
dec
test
out
test
push
rcrl
add
enter
popa
cmpsb
flds
in
loope
inc
xchg
pop
pop
mov
sbb
aaa
push
xor
test
stos
mov
jge
fists
add
xchg
xor
in
jo
aam
nopl
mov
popf
fs
inc
fcoml
cmp
stos
inc
mov
mov
mov
subb
jbe
pop
fwait
test
adc
mov
mov
lds
mov
rol
mov
xchg
mov
cwtl
xor
js
jp
rol
fwait
jp
xchg
pop
shr
aaa
jmp
mov
jecxz
or
call
mov
mov
cltd
subb
xor
pop
test
sti
sub
mov
add
clc
mov
jnp
js
call
repz
imul
or
rorb
inc
mov
sahf
push
sbb
push
sub
jge
popa
pushl
outsl
and
lds
push
dec
cmp
std
jle,pt
pop
ljmp
mov
mov
mov
xchg
push
cmp
cmp
xor
sbb
mov
rcrb
sti
mov
mov
add
push
lds
hlt
dec
test
or
sbb
mov
dec
mov
cmc
ds
ja
cwtl
pop
lret
cwtl
xor
sbb
push
lods
or
ret
sbb
fmull
or
in
add
mov
cli
and
stc
inc
das
sub
repnz
movsl
mov
xchg
sahf
enter
scas
shl
mov
lods
fadds
lret
push
leave
push
jp
inc
arpl
test
dec
orb
push
mov
sub
inc
ja
cmp
dec
je
out
xor
ljmp
adc
pusha
in
test
adc
pop
aad
dec
jo
outsb
pop
sbb
sti
movsl
cwtl
and
int3
adc
out
mov
loop
hlt
ja
iret
adcl
dec
test
mov
or
push
dec
fstpl
call
xchg
sub
fwait
das
lcall
lcall
jae
push
test
adc
add
aas
jl
sub
test
scas
fstpt
add
xor
jl
add
nop
jle
mov
jae
or
or
scas
lds
loop
loope
cs
cmpsb
jne
mov
int
pop
filds
aam
lods
rol
pop
stos
jecxz
scas
xor
mov
add
mov
pop
out
xor
dec
hlt
xchg
fidivrl
fsubl
filds
ljmp
popa
lds
repz
and
pop
and
push
xor
jge
add
xor
loope
sub
mov
push
and
out
std
jg
lds
ss
fmuls
fwait
jp
inc
pop
inc
fs
testb
jmp
push
push
fdivr
xchg
fisttps
jbe
rorb
popf
mov
adc
fs
repz
pushf
bnd
ja
out
test
out
ror
dec
pop
gs
sarb
loope
mov
loope
pushf
out
and
flds
aam
cwtl
jae
movsl
and
fidivs
es
sub
cmp
and
jle
push
xlat
mov
mov
fwait
dec
fiaddl
ja
std
mov
and
mov
inc
enter
add
xorl
sub
not
je
sbb
push
pop
aas
sbb
icebp
mov
lock
pop
cmpl
ja
sub
cmp
out
dec
out
cmpsb
hlt
cwtl
adcb
cmc
into
stc
ds
out
pop
mov
mov
jg
and
cmp
and
xchg
scas
inc
add
orb
sub
mov
adc
xchg
add
decb
cmp
cmp
fnstsw
divl
sbb
sbb
pop
testl
push
mov
sbb
fmull
cli
ja
in
lods
movsb
xchg
rorl
cs
scas
push
out
sahf
lea
cmp
jne
inc
std
ds
push
pop
dec
mov
les
mov
pop
adc
lds
add
sub
cld
or
loopne
pop
divb
push
inc
movsb
sbb
lods
das
cmp
sbb
push
jo
imul
push
sti
adc
jmp
push
jmp
popf
mov
fucomi
popf
sbb
outsl
cmp
lahf
imul
mov
adc
dec
ss
in
popa
mov
cmp
push
or
mov
lock
jno
lahf
addr16
xor
cld
fdivrl
subb
scas
aad
aam
dec
jg
stos
stos
fldt
or
pop
xchg
dec
jp
shlb
add
push
mov
popa
sub
insb
mov
pusha
sbb
jmp
add
hlt
jge
inc
mov
pop
xor
fcompl
test
inc
sahf
or
mov
enter
cs
fimull
outsl
dec
mov
xchg
and
or
or
out
mov
icebp
mov
cmpsl
mov
outsl
push
inc
mov
pop
incb
out
sbb
jbe
pop
call
adc
in
and
add
fldcw
test
dec
std
testb
into
out
test
and
xchg
mov
mov
mov
xor
mov
subb
cltd
xor
dec
xor
dec
xlat
outsl
adc
imul
jmp
push
adc
into
mov
cmp
aad
aad
popa
xchg
sbb
mov
sbb
in
and
jb
cmc
rclb
daa
ret
cmc
inc
adc
mov
mov
fsubl
cmpb
test
jecxz
sahf
mov
loop
mov
es
std
and
mov
xor
xor
fs
lret
inc
or
pop
cs
cmp
mov
ja
into
rorl
out
cmp
outsl
jns
bound
pusha
sub
inc
and
loop
sub
pop
scas
push
fistpl
pop
and
and
inc
add
cmp
cs
sub
shlb
sbbl
lcall
and
push
push
insb
icebp
or
imul
sbb
adc
cmp
sti
cmc
add
cmp
sub
pop
pop
and
movsl
repnz
les
mov
xor
pop
loop
push
pop
xchg
xchg
and
cmp
mov
xchg
push
std
lds
jle
xor
ret
cmp
dec
xchg
sub
xchg
add
xor
ret
int3
fwait
jns
adcl
xor
xor
push
js
shr
popf
in
jp
out
sub
mov
adc
leave
mov
jb
stc
popf
cmp
das
adc
xchg
add
dec
or
xor
pop
adc
sub
mov
and
dec
add
ret
jmp
pop
mov
add
jle
push
ljmp
cld
and
dec
sbb
aas
rol
stos
xchg
jge
mov
inc
popa
and
insb
mov
xchg
jno
push
imul
mov
lcall
call
push
fisttpll
int3
sub
or
xchg
pop
jae
cmp
in
inc
pop
adc
mov
xchg
inc
mov
add
outsl
test
push
fcmovnb
jnp
pop
inc
cwtl
pop
mov
inc
inc
dec
and
mov
fisttps
fucomp
mov
shll
cs
cmp
push
test
fs
push
inc
jl
cmp
out
push
jbe
bnd
sbb
xor
mov
adc
mov
outsb
clc
sub
insb
mov
mov
and
add
add
and
or
cmp
xchg
jle
jno
fildl
or
xchg
js
cltd
mov
mov
cli
adc
stc
enter
sbb
loope
push
cli
xchg
out
push
dec
pop
fidivl
popf
lods
xchg
rorb
push
dec
sbb
mov
aaa
jp
pop
mov
sub
in
pop
sub
mov
inc
pop
mov
push
imul
inc
sti
mov
daa
out
aam
pop
push
jbe
jno
cmc
mov
stc
and
outsb
push
or
inc
or
mov
xlat
xchg
scas
and
lcall
es
fnop
aas
dec
repnz
out
add
sub
lret
sub
pop
add
and
jl,pt
mov
add
int3
mov
jae
test
stos
lods
sbb
xor
fildl
popf
jne
pop
cmpsl
mov
daa
add
es
aas
mov
addb
nop
daa
mov
inc
scas
push
pop
inc
cmpsl
es
sub
inc
lret
icebp
dec
push
inc
lods
out
mov
fldt
sbb
push
cli
pop
sub
pushf
daa
cmp
mov
inc
cmp
into
mov
sbb
bound
int
sti
push
pop
dec
push
jne
subb
fsubs
mov
je
mov
jmp
jl
movsl
cmp
shll
incl
loope
jl
cmp
jmp
hlt
sahf
aad
test
loop
fildl
gs
repnz
sti
rol
sbb
clc
adc
adc
imul
mov
test
outsl
jns
dec
push
xchg
test
dec
ss
inc
enter
jmp
adc
cmp
cwtl
dec
das
xchg
stos
icebp
pop
imul
dec
mov
mov
lret
dec
dec
gs
and
push
movsb
mov
shr
jl
ss
lock
js
push
in
pop
out
push
cmpsl
mov
fdivs
aam
outsb
sub
sub
pusha
ret
les
jb
cmp
xchg
cld
dec
dec
or
xor
xchg
andl
std
and
adc
je
sbb
cltd
arpl
push
xor
adc
jl
js
lods
rcrl
jo
int3
fwait
sub
add
inc
pop
loop
jae
stc
inc
mov
push
lret
and
jno
scas
jns
pop
sbb
and
jge
sub
scas
leave
and
into
sbb
es
cmpsb
pop
jge
adc
sbb
cmp
jle
sbb
fisubs
sahf
jg
mov
cs
inc
push
jge
mov
lcall
test
in
cmp
les
jmp
rorl
pop
dec
in
push
jmp
sbb
fidivs
mov
adc
push
dec
push
inc
fsubs
sub
jnp
inc
pop
mov
xor
xchg
ja
cmp
cmp
add
inc
pushl
xchg
add
sahf
sbb
movb
mov
lods
inc
pop
dec
into
inc
sub
ljmp
pushl
jbe
lcall
adc
out
add
mov
push
leave
cmp
xor
mov
lret
add
ror
cmp
jp
cld
jp
mov
xchg
scas
incb
iret
xor
jbe
in
lods
out
movsl
jp
cmp
inc
sub
aas
mov
mov
out
xor
insb
nop
mov
jo
icebp
cmp
mov
mov
mov
cmp
in
push
lret
out
xchg
les
rclb
dec
hlt
sbb
lods
cwtl
shrb
dec
ja
loope
movsb
dec
xchg
xchg
xchg
xchg
mov
ds
rcr
sarl
adcl
sahf
pop
sahf
dec
mov
leave
xor
xor
fcomps
leave
inc
push
repz
std
or
or
cmc
test
test
data16
adc
shrb
inc
out
dec
inc
cltd
icebp
ficomps
mov
into
adc
add
jb
repnz
lods
push
sbb
mov
push
xorb
push
cs
mov
mov
xchg
or
out
mov
ret
or
repnz
mov
sub
hlt
adc
mov
test
bound
push
insl
enter
cmpsb
and
and
push
jb
test
imul
fidivrs
call
cmp
out
rcrl
pop
incl
daa
fldlg2
outsl
ret
or
lret
jne
pop
and
cmp
test
xchg
sub
xchg
cli
pop
xor
mov
mov
dec
mov
hlt
push
in
push
adc
sbb
jge
jo
dec
jl
aad
inc
sbb
fidivs
sbb
add
pusha
cmpb
jp
adc
andb
pop
sahf
loope
sub
pushf
sti
dec
cmp
test
mov
stc
mov
into
loopne
push
loope,pt
sbb
ficomps
int3
lods
cli
movsl
xchg
insb
pop
dec
stc
arpl
loop
add
icebp
mov
add
cmpsb
pop
cmp
inc
pop
cmp
push
lods
jge
fcomps
xor
rorb
xchg
add
dec
mov
arpl
in
sbb
mov
test
js
xlat
test
std
sahf
bound
imul
xor
inc
jmp
lock
es
lds
icebp
jbe
and
in
jns
in
movhps
sti
dec
mov
mov
cwtl
test
mov
push
stc
jb
xchg
scas
cld
mov
ds
mov
sbb
jge
lahf
lea
int
mov
xor
lcall
lcall
mov
int
sbb
imul
je
cmpsl
pop
ljmp
inc
push
pop
out
popa
int
ret
xor
cmp
sub
jmp
jbe
icebp
movsl
pop
and
sub
lods
push
out
sbb
dec
fnsave
jg
adc
push
mov
leave
into
push
jmp
xor
ss
aaa
jne
imul
repnz
mov
or
bound
adc
or
loop
stos
adc
mov
xchg
addb
fisubrl
lock
pop
std
scas
ss
dec
adc
jb
hlt
dec
and
mov
sbb
xchg
xchg
in
pop
sti
and
and
insl
idiv
inc
mov
loop
xor
sbb
push
sub
ret
loope
clc
rolb
jno
rorb
and
push
push
mov
lret
pop
je
rclb
dec
lret
xor
in
in
vmovshdup
add
lds
loopne
mov
repnz
cmp
leave
out
pop
xlat
movsb
test
lods
dec
dec
mov
add
and
ja
adc
int
add
cld
jbe
imul
cwtl
shr
and
inc
mov
mov
in
aad
jmp
add
cld
ffreep
loope
dec
mov
dec
shlb
xor
pop
push
and
xchg
mov
mov
in
adc
stos
daa
fimull
cmp
test
addr16
inc
cmp
sub
mov
aas
xchg
push
sub
mov
out
mov
std
mov
bound
xchg
daa
mov
std
insb
inc
cmpsl
jo
pop
out
dec
js
popf
add
dec
dec
and
lds
aad
ja
dec
cmp
movsb
pop
cmp
bound
sahf
mov
inc
fimull
or
and
popa
rcrb
sbb
mov
jns
pushf
lcall
sub
dec
mov
lret
xlat
xchg
sbb
ret
ljmp
jl
inc
xchg
cmp
ret
mov
insl
imul
iretw
repz
jg
cltd
xor
out
cmpsl
sbb
push
or
out
and
sub
xor
xor
push
jl
icebp
pop
addr16
pop
dec
and
clc
dec
xor
pop
mov
and
pop
ss
xchg
lods
jno
stc
out
push
call
in
pop
movsb
out
rolb
int3
ljmp
or
pop
mov
pusha
flds
and
xor
out
cmp
jmp
or
adc
pop
movsb
cwtl
movsl
icebp
xchg
dec
fistps
roll
xchg
rclb
pop
adc
mov
cmc
jae
cmp
mov
push
dec
mov
and
in
push
xor
imul
aam
mov
hlt
aad
out
cmp
inc
pop
lock
mov
push
jno
dec
or
jmp
cmp
ljmp
dec
or
outsb
mov
imul
xchg
aas
fdivrs
or
mov
push
outsb
aam
test
mov
popa
ds
pop
test
xor
imul
ret
xchg
js
mov
cmp
cmp
add
cwtl
dec
fs
clc
mov
scas
xor
xor
pop
dec
xchg
testl
mov
fisubs
pop
mov
adc
pop
mov
scas
out
mov
cld
jge
pushf
pop
sbb
jecxz
push
insl
insl
jnp
pop
rcrl
jle
jae
sti
adc
cmpsl
xchg
add
sub
mov
mov
add
push
stos
xor
cmp
fldl
mov
cmp
lret
and
sub
push
lahf
repnz
and
popf
xor
ret
sbb
lds
lret
int
outsb
dec
fbstp
push
push
pushf
aaa
pop
gs
mov
cwtl
mov
sbbl
sub
aaa
pop
mov
mov
fsubp
sub
test
cli
sbb
mov
pusha
cmp
dec
mov
mov
add
jns
int3
push
or
push
xchg
push
call
cmp
xchg
popf
enter
insl
add
out
mov
jne
arpl
xorb
mov
int3
mov
inc
jo
out
xor
movb
mov
or
in
mov
insb
popf
ficoml
sbb
test
inc
push
ja
cmc
enter
dec
pop
jb
cmpsb
xor
or
ds
lock
call
push
mov
mov
es
shrb
lods
insl
scas
fstpt
ds
lds
sarb
repnz
and
push
movsb
jge
dec
aaa
xor
push
sub
push
mov
pop
xor
ror
and
mov
iret
dec
xor
push
cmc
and
dec
xor
testl
shlb
test
lds
mov
and
and
in
mov
int3
ss
cmpsl
pop
mov
mov
dec
fisubrl
ret
jne
sbb
loope
ret
out
lods
lahf
aaa
or
stc
sti
xor
ret
imul
mov
mov
jns
scas
sar
or
cmpsb
lods
lds
sbb
sahf
ret
imul
pop
mov
mov
mov
jp
daa
push
and
mov
ja
rclb
and
xchg
sub
rcrb
scas
fdivs
mov
arpl
inc
sub
dec
jns
popf
add
or
call
leave
loop
cmpl
insb
pop
fwait
movsl
jecxz
or
mov
addl
cmp
pop
and
cmpl
mov
jg
or
int3
std
push
add
out
ficoml
inc
mov
pop
test
lcall
push
jb
adc
pop
insl
mov
xchg
sbb
ljmp
push
out
sbb
pusha
std
insl
cld
push
adc
mov
xchg
and
fisubl
fs
mov
fwait
pushf
and
or
push
loope
or
inc
mov
mov
in
sbb
mov
mov
bound
pop
inc
lods
push
flds
adc
std
push
dec
das
mov
fildll
xchg
test
jns
repnz
sbb
daa
pop
pop
repz
iret
pushf
dec
sbb
int3
lret
mov
inc
sti
lfs
push
xchg
sbb
cli
xor
xor
cmp
test
dec
movsl
sbb
or
sub
in
pop
jmp
xchg
gs
adcl
fs
jae
daa
js
sahf
sub
dec
stos
movsb
mov
adc
aaa
xrelease
aam
movsb
std
mov
xor
dec
gs
pop
mov
xchg
int
arpl
rcrb
or
stos
les
inc
pop
loopne
dec
pushf
jg
shrb
dec
or
into
sbb
pop
cmpsb
cmp
in
pop
fisttps
cld
jg
dec
jecxz
cmp
push
sbb
shlb
imul
fiadds
jle
mov
cmp
test
lods
mov
decb
inc
cltd
imul
sbb
sbb
stc
jbe
push
cltd
sbb
out
imul
sbb
sub
das
out
cmp
xchg
pop
push
test
pushl
scas
fsubrl
mov
sub
push
jbe
subb
int3
jp
sbb
xor
lods
push
xor
cmpb
jno
test
test
stc
sub
mov
leave
adc
push
sub
mov
mov
push
std
adc
and
and
mov
cmp
pop
add
fmull
xchg
xor
mov
mov
imul
push
push
cmpsb
push
add
lret
bound
adc
lret
pop
jecxz
push
cmp
hlt
pop
mov
mov
or
nop
cltd
out
inc
push
sbb
in
inc
pop
daa
pop
ljmp
scas
inc
fs
out
pushf
xor
data16
xchg
push
or
fbstp
pop
cmpsb
inc
jp
ss
jbe
fidivs
mov
pusha
fsubr
pop
jno
mov
cmp
addr16
push
cwtl
mov
mov
jbe
jae
mov
jp
cmp
mov
test
test
jecxz
mov
outsl
mov
fbld
fcompl
pop
adc
daa
lcall
adc
test
fisubrs
xor
loope
mov
scas
lret
jb
push
xchg
pop
js
andb
gs
sbb
rep
sarb
scas
test
ja
ss
jo
ja
lock
mov
std
adc
mov
adcb
mov
xor
xchg
xchg
xchg
sbb
mov
add
loope
decb
jno
imul
pusha
jle
dec
fiaddl
pop
in
ja
push
adc
mov
es
mov
push
dec
das
add
mov
lds
lahf
nop
mov
repz
jne
fnsave
and
inc
jl
jbe
scas
imulb
call
adc
and
icebp
jmp
pop
stos
sub
mov
xor
sub
xchg
mov
jae
lcall
mov
lds
jle
xchg
gs
or
iret
into
fdivrp
sbbl
arpl
xchg
popf
movsb
out
cmp
sbb
ss
fiadds
sub
xor
in
lds
adc
push
popf
data16
xchg
lcall
sbb
sahf
jp
fstps
aad
icebp
movsl
hlt
cld
and
sbb
out
jns
fdivl
dec
push
ja
mov
mov
cmp
inc
lahf
stos
aas
cmpsb
data16
sbb
enter
popa
xchg
mov
fistpl
pcmpgtw
addb
mov
rorl
mov
mov
pop
adc
sub
repz
jmp
and
mov
inc
jae
sti
jo
lock
xor
add
push
or
mov
mov
lret
sub
ret
enter
lahf
rolb
out
and
fcomps
mov
xor
loopne
jbe
pop
pop
mov
lret
lock
xchg
pop
jb
popa
fcomps
neg
lock
out
mov
cs
loope
gs
pop
xor
popf
in
dec
jecxz
lods
and
mov
data16
lret
out
xor
dec
cmpb
out
jge
daa
clc
ljmp
cmp
mov
dec
aaa
inc
pushf
jecxz
js
cmp
dec
mov
sbb
or
jle
mov
mov
divb
dec
test
fwait
jecxz
push
in
fcoms
testl
lcall
cmc
loopne
sbb
in
mov
jmp
mov
ja
rcr
and
pop
das
sub
mov
in
popf
test
jl
mov
mov
int3
add
rorl
mov
repz
cmp
pop
std
clc
sahf
xor
mov
je
mov
inc
ss
ja
inc
in
adcb
adcl
jecxz
pushf
pop
sbb
add
and
mov
lods
jle
subb
negb
push
xlat
dec
adc
cmp
mov
mov
pop
adc
shlb
or
inc
jb
xchg
mov
aas
jmp
adc
test
pop
jbe
out
enter
es
jmp
out
fidivrs
shlb
mov
lock
xor
or
xlat
fdivl
data16
enter
xchg
stos
cmp
imul
add
mov
in
jae
sbb
cmpsl
lret
test
mov
jae
repz
cmp
xchg
mov
ficomps
outsb
insl
pop
pop
cmp
xor
xor
and
xor
jae
outsb
mov
mov
das
ret
clc
cmp
mov
fdivrs
adcb
lret
popa
mov
adc
inc
pushw
fsubr
adc
cmovge
xor
sub
mov
repnz
sarb
mov
icebp
es
sbb
mov
pop
daa
popa
inc
push
push
mov
xor
in
cmp
fbstp
or
cmp
and
pop
test
mov
iret
jno
cmp
cmpsb
mov
ljmp
xchg
jp
inc
or
pushf
and
jno
or
push
pop
call
int3
pop
sub
xorl
mov
lock
push
cs
sahf
and
cs
sbb
add
xor
mov
std
inc
mov
pop
jb
test
jge
std
dec
inc
sub
aas
push
insl
adc
jno
ja
xor
jbe
pop
sub
pop
add
adc
dec
subb
mov
dec
shl
dec
jb
lret
ficompl
lret
fdivl
jb
inc
and
lds
sbb
mov
inc
fs
sti
sub
mov
cmp
mov
push
lock
loope
aad
or
les
test
jne
call
out
or
sub
cli
pop
scas
iret
addb
xlat
ret
sbb
repnz
imul
jg
pop
xor
incb
scas
in
fs
fmuls
sahf
bound
sub
and
out
shr
jb
es
push
loope
aam
dec
fildl
dec
pusha
outsb
push
cs
add
push
lret
cmp
out
test
mov
adc
and
mov
popf
clc
add
mov
adc
addr16
ret
arpl
mov
insb
incl
mov
insl
fmuls
sub
push
rcll
jp
pop
hlt
mov
mov
mov
aaa
ret
jmp
jae
sbb
push
pop
faddl
jbe
pop
adc
sbb
add
rcrl
sbbb
cmp
mov
jbe
lods
aam
mov
push
shll
fiaddl
and
xchg
push
popa
fmull
add
pop
push
popf
mov
jle
hlt
mov
jae
mov
adc
cld
inc
loopne
xchg
dec
je
hlt
pop
cmp
cmp
idivb
in
daa
sub
xor
mov
inc
jl
pop
push
outsl
fcmovbe
dec
and
movsb
adc
fwait
mov
adc
nop
sbbl
imul
adc
push
nop
imul
or
cmp
pop
testl
inc
aaa
sub
lea
lods
or
jns
ss
out
sti
jnp
mov
xchg
xor
and
shrb
mov
in
mov
xchg
xlat
push
stos
cmc
ljmp
xchg
mov
pop
out
insb
sbb
adc
hlt
ret
push
imul
hlt
into
addl
call
roll
lds
movsl
xchg
inc
mov
ret
cltd
mov
push
push
xorb
push
fcmovb
out
add
notl
stc
xchg
jmp
ficomps
in
lahf
pop
flds
push
aam
cmp
mov
mov
pop
sahf
jmp
pop
and
pushf
popfw
out
jnp
jmp
adc
lock
js
xchg
jb
lcall
outsl
test
call
gs
shlb
xor
lret
add
mov
mov
cld
out
mov
stos
in
je
stos
sub
dec
ss
scas
test
js
mov
subl
adc
mov
push
adc
xor
cs
loopne
adc
mov
mov
stos
movsl
mov
xor
push
cmpsl
sti
mov
dec
fdivs
call
jmp
xor
pushf
dec
xor
adcl
outsb
adc
out
mov
xchg
nop
push
dec
cmp
adc
add
ljmp
mov
mov
jbe
cwtl
and
adc
add
ljmp
scas
push
insl
push
fs
int
inc
out
adc
test
mov
dec
xor
test
pop
lock
dec
in
add
cmp
cmc
jle
xchg
data16
and
loopne
or
lods
hlt
or
out
inc
mov
cmp
push
xor
xor
scas
cmp
lahf
enter
sub
mov
pop
mov
lahf
add
out
and
jg
jne
iret
stos
cwtl
test
shrl
lahf
mov
pushf
cmc
outsb
je
and
js
mov
and
mov
stc
aad
loopne
aaa
mov
or
popa
jns
jnp
lock
scas
jne
imul
sbb
stc
or
test
dec
add
insl
pop
out
xchg
inc
repz
outsb
rcll
enter
adcl
test
test
sbb
mov
ret
xchg
push
push
push
out
jbe
dec
test
testl
dec
sbb
mov
mov
es
lock
xor
xchg
pop
sub
jo
pop
outsl
clc
inc
fsubrs
sbb
out
pop
mull
sub
push
adc
ss
jp
mov
lahf
pop
mov
cmpb
jge
xlat
imul
cmp
loop
push
add
mov
fimull
or
add
lret
js
js
xor
dec
js
std
lcall
in
js
add
sbb
call
lods
push
xor
jle
hlt
lret
pop
fstl
shlb
repz
test
jp
jbe
dec
fucomi
adc
aas
in
clc
loope
rorb
jecxz
pop
adc
in
fldl
ss
je
fidivrl
cmp
in
cli
cwtl
jnp
das
jle
push
cmp
pop
mov
and
scas
push
mov
lret
stos
jb
and
xor
dec
jno
andl
push
outsl
push
fidivrs
mov
xor
push
mov
sti
pop
pusha
mov
push
pop
inc
rorl
aad
xor
je
bound
xor
cs
or
pop
in
stos
push
cmpsb
cld
fisubrs
sbb
jae
xlat
sub
lds
push
cmc
fidivl
adc
and
xor
mov
jae
cltd
imul
pushf
mov
inc
sahf
sub
imul
repz
adc
cmc
repz
pop
test
fnstenv
fs
inc
lods
mov
lret
xor
iret
gs
and
imul
jne
fidivl
ss
mov
lret
cmp
pop
mov
dec
push
mov
adc
xchg
mov
xchg
or
lds
push
mov
pop
add
mov
cmp
xchg
xchg
leave
sbb
leave
gs
push
jg
xchg
test
or
or
lret
adc
loope
add
add
in
mov
xchg
dec
push
pop
fisttpll
js
dec
es
insb
add
bound
leave
xchg
mov
test
xchg
or
pop
dec
mov
jmp
outsb
ljmp
pop
mov
movsl
data16
mov
movb
xlat
icebp
lret
outsl
cmp
imul
xchg
movsl
mov
push
sub
mov
jmp
or
pop
mov
add
fidivl
xchg
inc
push
je
movsl
daa
xor
insb
stc
fbstp
inc
xchg
push
or
xchg
ret
pop
aam
fcmovne
or
lret
push
out
test
lods
mov
shrl
addr16
push
cltd
jge
push
js
push
in
push
in
dec
gs
lcall
mov
inc
lods
movsb
aam
sbb
jl
sahf
lods
aam
pop
idiv
in
mov
insb
negl
mov
in
sahf
insl
fwait
lcall
jns
xchg
mov
fnstenv
adc
jg
out
mov
mulb
rcr
adc
add
jb
shll
shll
xor
xchg
jb
in
in
pushf
xor
sbb
int3
pop
test
mov
mov
js
mov
adc
cwtl
inc
lods
cld
cmp
cmp
xor
xor
int3
clc
lea
push
mov
cmp
sbb
pop
call
cmp
out
popf
das
pop
xchg
sub
stos
daa
jbe
scas
in
loopne
std
aam
mov
inc
shll
lea
jp
push
or
cmpsb
lcall
jmp
addr16
dec
outsb
add
adc
lea
fwait
dec
cmpsb
cmp
pop
aaa
pop
cmc
sub
es
arpl
pop
adc
sub
cmp
icebp
icebp
pop
adc
repz
jl
cltd
or
pop
pop
cmp
mov
jl
inc
scas
out
sahf
das
loopne
sbb
xrelease
mov
lret
das
xlat
outsl
outsb
adc
icebp
lret
ja
negl
or
cli
jg
lahf
xchg
lods
loop
pop
sub
test
insl
leave
lods
add
mov
xchg
push
clc
push
aas
xchg
ds
lahf
dec
incb
mov
dec
fildl
mov
cmp
sub
sub
lods
xchg
in
sti
lahf
mov
data16
ret
mov
call
enter
leave
mov
daa
cmpsl
cli
add
dec
repz
add
pop
dec
pop
mov
nop
inc
into
jecxz
aas
fcmovnbe
icebp
and
mov
rorb
insb
add
push
sub
stos
pop
xor
cmpsl
xchg
icebp
das
push
adc
cmp
les
jno
push
lea
test
mov
mov
aaa
es
fisubl
sbbl
aas
mov
or
mov
add
xchg
std
mov
mov
cmp
and
cld
fwait
mov
adc
lock
movsl
xchg
inc
jge
xchg
fsubr
xchg
mov
fwait
and
popf
jl
sbb
xlat
lds
jl
vmovupd
jl
and
inc
popa
mov
popa
jg
mov
mov
pop
pop
popf
push
cltd
or
cltd
jne
xor
xchg
cmpsl
shl
add
or
stos
mov
pop
or
mov
std
movl
int
sbbl
inc
and
into
in
sbb
andb
shrl
mov
adc
daa
es
inc
not
shl
sbb
cld
sbb
cltd
mov
test
lods
jecxz
fadds
call
adc
cmp
les
cmpsb
jo
fs
ret
xchg
inc
aaa
in
stos
mov
test
sub
nop
addr16
push
pop
dec
out
xor
ret
push
mov
repnz
aas
in
fdivrl
cmp
cmpsb
add
sub
negl
inc
push
mov
jmp
lcall
cld
cmpsb
xor
inc
ss
into
rorl
addl
lods
inc
sbb
pop
xchg
xor
or
fidivs
jmp
add
sbb
outsl
and
lahf
cli
xchg
adc
cmc
sbb
or
dec
imulb
pop
sahf
and
movsb
pusha
fisubrl
insb
cwtl
xor
pop
add
mov
xchg
jbe
inc
and
ljmp
add
inc
push
jmp
xor
fcomps
test
xor
movsl
incb
add
fdivrl
xor
jbe
push
xor
cmp
xchg
add
xchg
add
jl
xor
fwait
test
xchg
mov
xor
sbb
sbbl
stos
and
jmp
xor
es
mov
int3
out
push
std
outsl
pop
lea
hlt
int3
popf
jae
nop
stos
or
push
adc
dec
mov
and
movsb
sbb
out
xor
mov
inc
filds
xor
clc
int3
arpl
int3
ljmp
adc
roll
sbb
inc
stos
loope
aad
jb
xor
mov
jl
loop
imul
inc
lret
fsubr
adc
xchg
mov
sbb
stos
and
add
shlb
mov
sbb
icebp
out
orb
in
rcll
push
inc
pop
in
inc
push
jne
cmp
out
popa
rcrb
add
hlt
jo
test
cmpsl
jecxz
inc
outsb
loope
fdivl
push
pop
orl
aaa
adc
outsb
insl
xor
pop
movsb
mov
xchg
sbb
jp
push
lock
and
sub
aas
ret
push
ss
mov
sbb
test
sub
scas
pop
xchg
cmpsb
stos
cmp
mov
jl
ja
fs
add
push
scas
out
sbb
lods
out
rorl
sub
jle
loopne
xlat
jnp
sub
les
xchg
ret
lds
jbe
imul
hlt
inc
adc
xchg
push
dec
xor
inc
cmpsl
push
out
js
push
repnz
repnz
mov
mov
add
notb
ja
xchg
cli
push
lds
insb
inc
lcall
in
lea
push
js
addl
sbb
outsb
xchg
pop
xchg
shl
js
lea
adc
in
call
push
adcl
cmp
push
mov
js
andb
mov
bound
inc
sahf
scas
stos
mov
gs
or
lcall
xor
cmp
xchg
clc
mov
in
xor
insb
and
pshufhw
add
jne
mov
cld
test
movsl
cmp
mov
xchg
mov
pushf
xchg
pop
loop
sbb
pop
repnz
movsb
dec
cwtl
call
jle
and
xchg
loope
inc
and
aaa
stos
dec
incb
sub
lds
push
dec
loopne
daa
cmpsb
loop
mov
cmpsb
out
imul
mov
aaa
cld
imul
in
cld
std
push
cmpsl
pop
inc
push
jmp
aaa
shrb
testl
insb
and
xchg
or
enter
fsubr
dec
out
mov
lahf
jbe
adc
jge
sbb
xor
push
push
jb
lret
xor
xchg
dec
mov
sbb
ss
nop
into
addl
xor
movsb
add
xchg
je
decb
fwait
and
mov
push
rcl
cmp
mov
push
sbb
testl
rsqrtps
mov
and
pop
cmp
sbb
jb
int3
sbb
and
imul
test
in
add
jo
xchg
and
add
xor
jbe
and
sti
adc
repnz
jbe
jo
subl
test
mov
pop
lea
aaa
jge
addr16
push
cmp
mov
mov
test
movsl
js
mov
xchg
outsb
aaa
jecxz
lahf
cltd
pop
insl
add
pop
decl
push
cmc
mov
jge
lds
scas
sbb
mov
pop
mov
xchg
cmp
cs
loop
jecxz
rorb
outsb
add
jb
sbbl
adc
pop
cmp
push
enter
xchg
out
jbe
adc
push
addb
loopne
adc
je
adcb
lock
shrb
mov
mov
outsl
loop
lods
fstpl
cmpl
in
imul
lods
sbb
imul
cmp
adc
pushf
sub
and
cmp
addr16
fdivrs
addr16
test
cltd
mov
mov
or
jle
jecxz
push
inc
hlt
inc
xchg
cmc
cmp
aaa
jnp
jmp
cmp
pandn
int
ds
sub
sub
mov
cwtl
dec
enter
mov
mov
ljmp
lock
mov
sbb
fimull
mov
add
hlt
ja
imul
mov
aaa
insl
pop
sti
mov
mov
push
nop
mov
fimull
sbb
out
dec
lahf
cmc
mov
xchg
add
xchg
cmp
pop
mov
sbb
mov
push
clc
les
push
push
mov
roll
xchg
fnstsw
out
int3
outsl
addr16
lods
ljmp
pushf
cmpsb
push
sbb
negl
loopne
fdivrl
adc
sbb
inc
cltd
fistpl
mov
pop
paddq
sbb
int
loope
mulb
xor
push
add
sbb
je
call
dec
xchg
pop
or
xchg
jno
loopne
mov
iret
mov
mov
popf
test
jno
adc
jg
add
leave
jp
push
inc
sub
iret
fistl
es
loopne
inc
fistl
pop
inc
push
xor
cmp
dec
imul
clc
push
enter
fisubrs
mov
stos
sub
push
cmpsl
call
jns
das
cltd
scas
rorb
cmp
hlt
iret
fisubs
dec
vpcmpeqd
adc
inc
xor
adc
dec
cmp
push
arpl
dec
push
sti
and
jno
adc
and
dec
fmul
test
adc
loope
push
aam
out
sub
mov
or
stos
jne
testl
insb
adc
push
or
dec
mov
repz
enterw
test
and
ret
add
sbb
ss
cmp
ljmp
icebp
mov
rorl
jb
mov
ret
pop
loope,pt
pop
mov
push
aaa
dec
decl
data16
xor
dec
jo
fisubs
mov
cld
in
cwtl
add
imul
clc
addr16
fucomi
jnp
fstpl
mov
and
sbb
and
mov
dec
leave
into
and
pop
sub
mov
or
or
dec
mov
dec
mov
repnz
adc
shl
mov
push
adc
mov
xor
insl
inc
outsl
and
bsr
mov
sub
push
mov
sub
pop
cli
aam
xor
fisubl
in
popa
push
shr
cmpsl
aaa
mov
xchg
mov
not
lahf
jb
mov
pop
or
test
jbe
push
test
das
mov
sbb
push
xchg
mov
adc
clc
arpl
data16
mov
aaa
xor
shr
jb
jb
daa
push
jmp
push
adc
mov
add
jl
dec
repz
jae
jl
je
xchg
out
xchg
sbb
call
push
cwtl
outsl
fadds
inc
imul
stc
xchg
xchg
xchg
pop
mov
in
cs
inc
lds
cmc
sub
scas
imul
add
aad
cmc
or
popa
test
push
jb
jp
dec
mov
nop
and
push
jno
lds
aam
pop
xchg
jmp
pop
jo
loope
xchg
push
inc
cmp
fcmovu
js
jns
popf
adc
push
mov
xchg
lods
iret
cmpsb
mov
sub
gs
inc
das
push
or
cmpps
cmp
bnd
fisubs
sbb
or
sbb
icebp
jl
loope
lods
inc
add
stos
push
cmp
mov
fwait
xchg
sbb
and
mov
shl
jnp
mov
mov
mov
fbld
mov
push
sbb
test
es
fmull
inc
fcoml
cmp
pop
add
inc
sbb
test
jns
es
mov
pop
out
push
mov
pop
xor
xor
js
outsl
push
shll
insl
adc
adc
cmpsl
jp
mov
jl
push
out
inc
or
pop
cld
aad
jo
push
loop
std
push
sti
or
into
in
add
cmp
xchg
add
rorl
pop
adc
test
and
imul
jg
std
into
je
jbe
push
in
jnp
add
mov
adcb
shlb
adc
dec
inc
inc
and
out
hlt
xchg
sub
movsl
sti
mov
ficomps
push
inc
mov
cltd
inc
or
cltd
loopne
push
shlb
and
inc
test
ret
push
les
sbb
sahf
jge
movsl
sti
cmpsb
gs
outsb
lods
jo
lea
pusha
cmp
fistl
pusha
push
ds
inc
ss
cwtl
aaa
xchg
shrb
add
insl
or
outsb
and
mov
mov
adc
xor
sub
mov
in
xor
sub
repz
xchg
or
xchg
movsl
aas
test
dec
mov
or
add
pop
mov
mov
lock
jmp
mov
push
xchg
test
addr16
lret
push
pop
out
sbb
xchg
stc
sub
mov
push
outsb
and
aas
fnsave
push
cmp
sub
jge
lods
shr
mov
ja
ret
sbb
jns
push
add
mov
out
mov
xchg
fs
and
es
test
aad
adc
cli
push
and
inc
cmp
rcll
push
movsb
icebp
jo
inc
call
sbb
xor
rolb
test
sbb
lahf
push
out
jb
shll
bound
rolb
add
push
rcll
sbbl
inc
xchg
dec
lock
inc
fmulp
test
sbb
inc
dec
iret
xor
cli
out
dec
hlt
fucomip
or
mov
int3
test
stc
inc
cwtl
aas
repz
jg
testb
mov
push
mov
pop
mov
and
cmp
mov
and
jp
sbb
mov
adcl
dec
mov
pop
scas
mov
pop
jge
lods
mov
dec
jg
std
fidivl
sbb
inc
jle
test
pop
sti
arpl
ja
popa
push
lock
sar
jns
xor
test
dec
stos
arpl
jmp
je
and
xchg
repz
add
mov
or
jae
in
fistpl
or
push
xorl
jne
mov
movsb
cltd
and
and
cli
out
test
cld
xlat
sub
fcoms
dec
add
fldt
sbb
cmpsl
cmpsl
push
out
dec
dec
sub
pop
je
sahf
movsb
push
pop
sub
mov
jo
cmpsb
and
and
clc
xchg
push
arpl
data16
sub
add
mov
mov
rcll
mov
fisttpl
jmp
cmp
lcall
sub
xchg
cmc
test
arpl
shrl
pop
push
inc
cmp
shlb
adc
fdivrl
mov
popf
push
mov
popf
outsl
pop
jg
cltd
dec
push
data16
jmp
sti
in
repnz
stos
adc
jne
pop
mov
out
pop
lods
dec
pop
cmp
decl
sbb
aam
inc
rorl
adc
test
cmp
in
test
push
xchg
dec
xchg
lcall
xor
push
stos
push
push
jnp
out
bound
xor
inc
aam
int
icebp
cmc
int3
jae
xchg
idivl
leave
and
je
popa
repnz
add
push
xchg
xor
jle
sahf
fisttps
mov
xlat
jge
pushf
dec
push
adc
out
inc
xorl
call
sbb
or
call
push
xchg
in
int3
scas
push
jmp
loope
ljmp
cmp
call
stc
adc
insb
ret
pop
lahf
sbb
hlt
loop
hlt
push
les
pop
jo
leave
test
loop
ret
addl
lea
mov
sub
int
jbe
clc
adc
test
cmp
into
or
and
mov
add
cld
lock
xlat
xchg
sub
pop
mov
stc
repz
xchg
cmpsb
jmp
pop
adc
lcall
stc
je
iret
call
clc
jge
out
popf
push
jp
pop
mov
xor
lret
into
or
ss
cmpsl
sub
xor
cltd
popf
imul
cmp
sti
cmp
std
pop
push
inc
scas
xchg
imul
hlt
mov
pop
shrb
xchg
cmp
add
pop
pop
cmp
popf
scas
fnstsw
jl
adc
ss
sub
dec
add
add
mov
fbstp
cmpsb
in
mov
xchg
push
pop
or
nop
out
push
jp
adc
shrl
aad
adc
lds
insl
out
iret
f2xm1
jb
ret
sbb
cmp
jl
sub
xchg
pop
ljmp
mov
popa
xor
xchg
inc
push
lahf
ja
jae
out
and
jno
test
cmp
mov
jl
out
mov
mov
push
jns
mov
popa
clc
mov
outsl
push
fcmovnbe
sbb
out
sub
test
fsts
mov
decb
sbb
shrl
rclb
lock
fiaddl
xchg
pushl
xor
stos
stos
test
fdivl
push
add
jbe
icebp
adc
cwtl
xor
aam
mov
jae
outsl
cmp
ret
imul
mov
adc
sti
insb
ret
sbb
xchg
sub
inc
dec
fisubl
mov
add
adc
aad
enter
mov
ret
cmp
jmp
sbb
rclb
jge
mov
inc
call
dec
cltd
cltd
xor
or
daa
push
clc
sbbb
les
inc
fisubs
aam
addb
jge
dec
add
inc
pop
sahf
idivb
add
hlt
dec
xchg
clc
inc
xor
movsl
shl
mov
jl
mov
xchg
sahf
jg
xchg
lahf
imul
xchg
insl
and
ss
cld
outsl
adc
sarb
mov
data16
inc
xchg
mov
rorb
fwait
or
lea
dec
paddsb
lods
inc
and
pop
icebp
jp
fldcw
mov
clc
out
aad
jge
pusha
scas
fisttps
call
leave
mov
mov
ret
inc
pop
mov
loop
xchg
out
xchg
movsb
repnz
dec
pop
shll
aad
xor
mov
les
stos
mov
sbb
xchg
mov
jl
push
mov
add
adc
mov
pop
popa
fmull
xlat
sub
inc
dec
mov
inc
and
lret
out
jno
enter
fs
mov
divl
mov
jnp
int3
movsl
insb
adcb
out
test
mov
sbb
jae
xlat
subl
nop
lds
testl
inc
push
pop
aad
inc
and
sbb
addb
ret
es
outsl
repnz
jo
push
hlt
push
adc
test
jno
or
div
fdivrs
les
stc
adc
aaa
push
pop
xor
pushf
bound
outsb
es
xchg
shrl
repnz
fimuls
movsl
pusha
fistpl
flds
xchg
test
or
add
repnz
jbe
xchg
xchg
push
lock
jecxz
mov
jns
push
inc
stc
inc
addl
je
inc
fs
mov
into
cwtl
lahf
mov
or
ljmp
jbe
mov
nop
jae
int
nop
into
xchg
fisubs
out
or
xor
nopl
stc
data16
mov
and
xor
push
xor
fildll
cmc
daa
in
xchg
icebp
xor
insl
imul
mov
dec
mov
in
xchg
mov
inc
pop
adc
je
in
cmpsl
pushf
scas
fdivs
addr16
stos
test
mov
in
inc
inc
mov
dec
in
cli
aas
push
jo
rolb
pop
es
sub
and
mov
call
lret
pop
and
push
push
inc
loop
je
mov
and
mov
inc
test
and
in
stos
cwtl
das
inc
jbe
stc
shlb
sbb
icebp
jg
pop
aaa
jno
push
jl
pop
daa
sahf
pop
jb
pop
add
pop
jns
bndstx
pop
mov
pop
adc
scas
inc
dec
mov
int
mov
dec
xchg
add
and
mov
loop
rcll
hlt
mov
data16
adc
je
mov
call
cmpl
mov
push
loopne
mov
sbbl
pop
fists
stc
push
scas
call
lods
push
and
dec
push
mov
xlat
mov
sub
lds
les
std
push
stos
mov
dec
shll
sahf
push
sub
push
cs
pusha
fnstcw
jb
nop
cmp
shl
push
imul
loop
cmp
out
xchg
out
push
icebp
add
fidivrs
cmc
push
into
jg
div
sbb
pop
push
mov
dec
filds
or
ret
jo
lock
test
mov
pop
mov
adc
jnp
push
dec
xor
daa
imul
or
or
ja
or
lock
sub
push
popl
xor
push
jbe
pop
pop
fs
sbb
pop
sbb
outsl
cmp
pusha
sub
and
adc
jnp
jmp
or
stos
js
das
imul
sbb
jmp
sahf
in
mov
aaa
xchg
xchg
adc
ss
aam
add
mov
mov
out
inc
sbb
push
pushf
pushf
ret
dec
out
sti
loop
sub
outsb
lds
dec
pop
mov
xchg
fidivrs
sub
adc
subl
adc
js
fidivl
movsb
cmp
shrb
inc
mov
jae
insl
stos
inc
mov
sub
push
sub
or
xor
sti
cmpsl
mov
jnp
movzbl
jno
andl
pop
adc
dec
adc
xchg
xor
fwait
dec
mov
and
popa
mov
insb
aam
rcl
int
ljmp
out
cld
aas
adc
into
mov
lods
push
cmc
shrl
je
jbe
pop
ret
test
push
loope
push
ficoms
inc
lea
cmpsb
and
stos
push
stc
cmp
in
and
xchg
outsb
or
inc
icebp
adc
test
sub
push
xchg
push
daa
outsl
xchg
dec
inc
xchg
pop
jmp
shr
pushf
shll
dec
pop
jb
xchg
dec
dec
push
cmp
sbb
dec
sub
ljmp
xchg
stos
shrb
mov
and
lods
jmp
xor
xor
lods
push
jg
pushf
pand
cmp
or
jns
das
mov
mov
pop
in
sbb
mov
push
ljmp
out
int3
mov
xchg
jbe
sub
inc
out
aas
std
inc
xchg
icebp
into
mov
mov
and
xchg
and
ret
dec
dec
push
xchg
adc
push
jl
push
negl
mov
daa
inc
repz
sub
cmp
pop
cmp
shlb
aaa
mov
push
pop
sbbb
mov
imul
jae
pop
cld
mov
xor
dec
add
mov
jne
cmp
addr16
sti
inc
or
xor
into
xorb
adc
call
sbb
xor
jmp
mov
int3
int3
adc
or
ss
jmp
cs
rclb
imul
sarl
aad
mov
dec
in
cwtl
mov
loopne
ja
pusha
push
test
pop
jmp
addr16
icebp
adc
mov
je
std
mov
jno
dec
mov
int3
mov
divl
sub
xchg
pop
add
test
sbb
dec
fisubrl
ljmp
scas
cmp
loopne
ret
rcll
adc
or
stc
mov
cltd
jo
xchg
mov
shrl
xchg
mov
ja
xchg
test
stos
jl
mov
out
pop
add
jecxz
mov
int3
icebp
xchg
loope
jne
mov
aad
pop
mov
jge
sub
and
xchg
inc
ficoms
mov
mov
andb
xchg
rcrl
pop
out
jnp
cli
push
xchg
dec
loop
movsl
test
fs
cli
inc
nop
pop
mov
enter
mov
xchg
sub
or
jg
lret
cltd
cli
xchg
fcmovne
negb
jecxz
rcll
test
jge
fidivl
fxch
inc
inc
loopne
out
push
xlat
outsb
push
stos
mov
shrl
dec
mov
mov
cmc
repz
mov
cmp
cmpsb
pop
pushf
or
jne
insb
arpl
mov
out
xchg
lahf
sbb
jb
mov
movsl
adc
pop
and
test
cld
push
sbb
scas
dec
mov
shrl
cmp
mov
inc
mov
movsl
adc
sbb
and
daa
pop
stos
fcmovb
int
adc
jle
xchg
mov
dec
fldl
data16
mov
mov
sub
jp
adcb
lahf
lea
orl
mov
inc
jno
out
arpl
push
sub
jne
jle
idivl
xchg
ja
sub
pop
cmp
mov
dec
in
push
add
dec
jae
out
scas
ss
mov
test
addr16
add
and
cmp
inc
jmp
jmp
icebp
dec
push
out
loopne
sub
push
mov
sbb
notl
psrad
push
lods
inc
into
mov
or
and
setae
cmovg
or
out
pushf
div
mov
pusha
inc
push
jae
or
pop
ljmp
adc
pusha
xor
insb
movsl
push
outsb
outsb
cmpsb
outsl
lock
pop
xchg
imul
insl
cmpsl
xchg
gs
cmp
and
into
xor
insl
andb
movsb
fildll
hlt
or
popf
and
fwait
lods
jae
cmpsl
lds
fidivrs
pop
push
aam
and
cs
adc
lret
adc
test
mov
fwait
xor
out
jo
mov
mov
pushf
cltd
stos
xchg
andl
ljmp
xor
jae
movsb
lods
movsb
aaa
into
aad
mov
lret
ret
mov
cltd
push
sarb
jge
cli
jge
mov
or
jno
pusha
xchg
mov
jge
xchg
cltd
ja
cwtl
mov
jl
and
pop
mov
and
mov
subl
out
adc
jle
mov
cmpsl
out
xor
dec
sbb
sbb
adc
mov
adc
pop
mov
add
xchg
scas
testl
cmpsb
imul
into
leave
xchg
push
testl
jbe
jb
xor
push
cmp
stc
call
push
nop
add
add
push
dec
push
outsl
sub
add
lret
jae
loope
jae
rol
adc
arpl
pop
mov
jecxz
daa
or
xchg
or
jns
fcompl
push
pop
add
pop
add
lds
loopne
addr16
std
and
inc
lcall
jle
and
js
or
mov
sub
adc
jl
and
add
push
bound
cmp
cmp
push
pop
outsl
pop
or
or
xchg
adcl
mov
dec
popl
fildll
test
dec
sub
push
cmp
pop
jbe
xor
xchg
aas
out
xchg
sub
xchg
leave
test
jmp
das
mov
add
inc
ret
cwtl
pop
and
mov
xor
data16
cmp
xchg
jae
add
sub
mov
mov
mov
xchg
fwait
xor
pop
mov
mov
enter
shrl
lahf
fs
jmp
pop
pop
jo
aas
jbe
fs
lret
cmpl
insl
dec
xor
inc
add
sbb
sub
add
loop
out
sub
mov
add
fwait
inc
aaa
dec
incl
cmc
adc
outsl
inc
loopne
hlt
je
inc
lahf
shrb
bound
shll
inc
mov
dec
xchg
or
int3
arpl
adc
in
jne
outsb
dec
xchg
adc
data16
inc
std
cmp
push
inc
pusha
sub
xchg
sub
lahf
call
popf
lcall
data16
push
cmp
jl
int3
fmul
fld
mov
sub
icebp
and
test
mov
push
rcrl
xor
scas
stos
jg
lahf
or
popa
js
es
shrb
mov
fld
pop
pop
movsb
shll
xorb
outsb
filds
lds
push
imul
rol
lahf
add
stc
mov
xchg
stc
cmp
jbe
ljmp
sbb
rcl
mov
mov
rcrl
rolb
jmp
scas
out
rcll
cli
inc
jno
or
xchg
test
mov
loop
fs
fcoml
addb
out
adc
loopne
dec
lcall
push
or
je
clc
js
push
and
sti
in
and
leave
dec
cmp
jecxz
jb
js
mov
and
xchg
or
pop
nop
js
out
xor
nop
xchg
mov
add
jmp
mov
xor
fidivrs
sbb
jl
mov
push
jl
jae
movsl
mov
jl
jns
mov
or
adc
fwait
aad
inc
stos
cltd
xor
into
fsubs
xor
stc
cwtl
and
mov
xor
fsubr
ds
cmp
loop
je
mov
jl
or
popa
sbb
shll
fildll
or
enter
sub
mov
hlt
fisttpl
lret
shl
shlb
pop
popa
mov
sub
sbb
jo
fwait
mov
cmc
fildl
pop
push
adc
cmp
pop
cmp
xor
lcall
ljmp
jne
sbb
inc
mov
xchg
mov
hlt
mov
int3
outsl
dec
les
in
or
pop
fmulp
out
out
sub
hlt
aad
fs
jbe
loopne
divb
js
push
pop
in
sub
sbb
repnz
dec
out
scas
dec
pop
inc
fwait
jb
sahf
pop
mov
sub
nop
lods
mov
scas
mov
sti
inc
add
mov
bound
fldt
loop
and
stos
stos
rolb
lock
pop
leave
pop
dec
notb
xlat
repnz
int3
and
push
out
mov
mov
pusha
jo
jle
dec
sbb
jp
imul
flds
sbb
jg
imul
inc
loop
in
sarb
jge
and
aam
mov
sahf
mov
lcall
cmp
mov
pusha
push
lods
lahf
ss
or
mov
inc
faddl
fcmovb
push
hlt
out
mov
int3
outsl
outsl
out
leave
sahf
xchg
fldcw
add
std
psubusb
pop
cmpsb
loopne
fdivrp
stc
inc
loopne
xchg
cli
xchg
push
inc
out
popa
repnz
sbb
int
dec
pop
push
pop
sbb
popf
in
insb
ret
adc
jae
push
and
je
sar
inc
sub
repz
push
fld
adc
dec
or
enter
add
cltd
int3
lret
cmc
dec
in
add
rcrl
mov
cmc
aam
sub
lock
inc
adc
in
testl
adc
cmp
insl
iret
and
mov
out
test
jo
adc
fs
testl
icebp
jmp
add
adc
mov
sarl
xchg
lret
movsl
sbb
cmp
lock
movl
sbbb
aad
not
mov
pushf
fld
pop
or
cmc
mov
and
aam
xchg
repz
in
inc
jle
addr16
sub
int
mov
mov
push
push
or
push
cmp
imul
in
out
push
xor
scas
xchg
mov
outsb
jl
decb
in
or
movsb
add
mov
fsubl
jae
lahf
in
push
aas
xor
cmp
fwait
sub
mov
lret
jbe
pop
cmc
adc
pusha
mov
add
jp
push
mov
sbb
xor
adc
push
sbb
adc
insb
mov
into
mov
add
stc
ja
mov
xchg
repnz
jbe
xchg
xchg
push
jp
inc
roll
loop
mov
add
repnz
test
popf
inc
jae
jp
add
mov
pushf
dec
ja
and
fisubs
fbstp
mov
sub
mov
xchg
dec
cmpsb
mov
sub
inc
in
inc
fidivl
movsb
lods
ds
add
mov
push
mov
push
cmp
or
aaa
xor
incb
cmp
or
pop
sub
outsb
sbb
ret
pop
xor
fdivrs
mov
scas
fistpl
push
mov
stos
push
jno
out
jp
stc
aam
ret
outsl
xchg
pop
loope
pushf
mov
imul
stos
dec
stos
dec
in
lea
mov
pop
sub
jp
push
and
jg
shlb
jge
inc
mov
or
xlat
xchg
stc
popf
lahf
cmpsl
sbb
popf
cmpsl
mov
mov
cld
cmp
fnsave
add
jmp
out
mov
aaa
testb
test
loop
mov
mov
fsincos
aas
or
xorb
hlt
cmp
outsb
jle
lods
mov
cli
fs
inc
int3
jge
scas
test
xor
pop
insl
call
test
sbb
adc
cmp
add
mov
dec
loop
in
sarb
lods
ret
pinsrw
xchg
sbb
mov
mov
ret
and
in
xchg
es
or
lret
add
out
pop
xor
xchg
ljmp
adc
cltd
insb
sbb
pop
iret
push
pop
pop
in
jns
mov
lcall
and
icebp
inc
push
pushf
stos
cmp
loop
rcrb
push
std
pop
cmpb
dec
mov
and
jmp
lahf
push
std
testb
dec
sbb
les
jns
fwait
stos
dec
cmc
mov
mov
jbe
popa
fwait
mov
push
lods
test
lcall
and
loope
inc
cwtl
daa
arpl
in
iret
pop
mov
iret
stos
jmp
negl
ficoml
jns
jl
xor
jbe
lret
jne
inc
sbbl
lret
and
mov
std
pop
and
mov
divb
sbb
js
sbb
dec
add
add
clc
xor
adc
or
push
cmpsl
test
mov
push
ret
outsl
into
push
push
dec
push
pop
cmp
imul
xchg
data16
cwtl
add
mov
lds
cmp
sub
icebp
sbb
jmp
mov
adc
or
jp
dec
adc
divl
cs
jbe
lahf
lds
xlat
not
mov
call
nop
scas
inc
mov
std
loop
xor
inc
js
fs
cmp
out
loopne
frstor
jmp
stos
push
repz
sbb
stos
sbb
jge
mov
pop
nop
pop
sub
lret
ret
pop
inc
adc
lods
stos
mov
adc
jae
mov
movsl
adc
jg
leave
daa
loope
shr
lret
bound
xlat
cltd
mov
mov
xchg
ljmp
and
das
jne
movhlps
inc
push
nop
inc
repnz
ljmp
cmp
mov
xor
push
push
and
icebp
inc
mov
cmp
fs
jns
int
imul
enter
add
cwtl
in
mov
push
lcall
cwtl
pop
lret
es
or
push
mov
lahf
gs
cmpsl
xchg
rolb
mov
xchg
imul
push
lock
mov
orb
sbbb
addr16
xchg
push
loope
cmc
shlb
jnp
dec
jno
jne
xor
xlat
cmp
sti
in
xor
popf
ljmp
fwait
xor
in
mov
je
mov
pop
loopne
jae
pop
inc
enter
ljmp
push
stc
push
jl
sbb
ud1
lcall
loope
jns
push
add
out
into
sbb
push
mov
xchg
add
outsl
test
adc
fidivrl
inc
outsl
lret
lret
ret
cltd
jmp
aad
push
rorb
pusha
dec
mov
orl
pushf
je
jbe
mov
jge
out
mov
push
mov
movsl
sbb
cli
pushf
clc
cmp
add
sbb
add
into
lea
fidivrs
lcall
cmpsb
lock
fsub
xchg
lods
xchg
add
xlat
mov
test
shll
shr
fs
arpl
jecxz
sub
ret
clc
adc
xorb
pop
pop
pop
xchg
ret
jmp
test
shll
pop
xchg
xchg
pop
icebp
jmp
or
js
cmp
jmp
adc
xchg
out
or
mov
inc
mov
imul
mov
push
and
and
ja
scas
imul
es
test
mov
stos
loop
mov
iret
into
or
in
sti
cwtl
and
xor
aaa
mov
loop
arpl
or
test
jne
test
gs
xlat
mov
pop
imul
mov
ss
or
or
outsb
sub
mov
pop
aaa
push
jno
or
out
ljmp
push
sarb
dec
mov
fwait
mov
or
or
adc
xchg
jb
jge
add
lcall
dec
push
inc
call
in
mov
lahf
lret
xor
data16
mov
sbb
or
and
mov
lods
push
dec
aam
jo
pop
mov
ss
movsl
mov
jb
mov
lods
cmp
mov
mov
xor
repz
xchg
fisubl
sbb
push
inc
aad
jmp
xor
lds
clc
cmpsl
inc
mov
fnstcw
xchg
out
add
sbb
mov
cli
jge
push
fistpl
rcl
test
clc
dec
rcr
test
mov
add
push
and
enter
fsubl
xchg
mov
imul
fwait
xor
sarl
movsb
cli
dec
sub
xchg
out
jecxz
sub
cmp
push
test
push
xchg
inc
mov
jb
mov
stc
popf
mov
sahf
mov
sbb
inc
cmp
pop
aam
daa
add
imul
test
fcmovnbe
push
cmp
dec
bound
repz
xchg
loop
add
scas
xchg
insl
test
xor
scas
cld
xchg
insl
push
pop
sub
push
fcomip
in
shlb
lods
xchg
sti
out
inc
adc
popf
mov
adc
stos
or
in
imul
push
fdiv
jae
push
add
fidivrs
pop
jmp
inc
xlat
sahf
stos
aad
pop
jge
dec
out
add
jmp
push
xchg
jp
add
or
ljmp
pop
push
sbbl
jns
xor
jg
sub
fldcw
xchg
xor
xchg
jae
xchg
mov
xchg
mov
pop
dec
aad
pop
out
nop
outsb
jl
imul
loope
jno
inc
dec
xchg
ds
jp,pn
xor
mov
pop
sub
mov
out
dec
cs
int3
fnsave
xorb
fwait
dec
leave
xor
mov
inc
mov
mov
andb
jecxz
push
add
data16
adc
mov
aas
xor
inc
mov
mov
rol
sub
dec
and
sub
and
add
aad
xchg
or
mov
pop
outsl
ja
sbb
fisubl
and
cmc
mov
test
iret
sbb
xor
roll
jo
cwtl
xor
jne
pop
mov
scas
and
lock
iret
xchg
dec
inc
fisubrl
jle
shrb
enter
stos
les
retw
jo
rcrl
popa
and
fadd
inc
mov
add
stc
adcl
pusha
imull
mov
sbb
stos
mov
sub
push
push
or
daa
js
xchg
outsb
sub
outsb
pushf
hlt
ret
pushf
jge
ja
and
mov
push
adc
jmp
fadds
xor
and
xor
loop
rcrl
inc
mov
pop
into
loope
sbb
mov
jbe
aas
std
xchg
negl
test
pushf
sbb
xchg
adc
in
sbb
pop
sub
dec
jecxz
inc
jecxz
xchg
pop
test
repz
aam
jecxz
aaa
dec
add
inc
mov
mov
fisubl
jne
lods
movsb
repz
or
pop
and
into
pop
jmp
jnp
ljmp
pop
lret
lea
pop
sub
shrl
data16
jmp
xchg
add
lock
push
nop
cmpb
push
mov
add
lret
addr16
mov
mov
cmc
int3
pop
insb
test
fs
pop
sbb
sub
cmp
dec
push
sub
repz
idivl
dec
push
xchg
leave
jbe
sti
mov
jmp
pop
sti
orl
arpl
xor
fildll
xchg
bound
ss
lock
push
sbb
push
fnstcw
push
out
pop
mov
sbb
std
xor
xlat
mov
push
or
and
jge
jmp
mov
cs
push
xlat
icebp
xchg
mov
les
pop
push
loop
adc
mov
fistps
js
add
lods
pop
pop
xchg
jo
sub
das
divb
fcomi
sub
push
push
and
jnp
lock
or
dec
mov
leave
cmc
mov
lea
mov
sarl
cmp
dec
cmpsl
sbb
jns
aas
jnp
add
lock
xor
into
filds
test
mov
fxch
stos
test
jp
cmp
lods
call
mov
ret
mov
push
lcall
pop
mov
loopne
push
cmpsb
out
add
push
jp
mov
sbbb
stos
aas
sbb
movsl
out
sub
fisubl
test
out
sub
and
pop
mov
imul
pop
cmc
sti
xchg
xchg
xor
inc
push
mov
cmp
int
pop
dec
shl
lcall
push
cltd
sub
js
ret
dec
jae
jecxz
xchg
sub
jno
lahf
or
mov
gs
shrb
int3
push
lods
fldt
dec
cmp
sub
pop
mov
pop
mov
mov
shll
aaa
pop
cmc
inc
stc
test
sbb
rcll
adc
xor
and
cli
sub
push
push
inc
rcrl
mov
or
fisubl
rcl
mov
jle
adc
push
aas
std
scas
test
int
inc
pop
leave
stos
stos
mov
and
lret
xor
test
cwtl
mov
jno
xor
pop
inc
data16
sbb
cld
mov
push
sub
inc
dec
out
push
fs
pop
xchg
xor
jmp
xchg
or
fwait
sti
fdiv
or
ljmp
movsl
push
ljmp
out
stos
jne
js
jmp
popf
pop
repz
out
jg
mov
jns
mov
out
rorb
mov
xchg
push
sbb
jmp
movsb
mov
xor
arpl
mov
pop
cmp
fistl
cld
push
fmuls
adc
lret
xchg
loopne
jae
cwtl
mov
dec
cmc
in
xchg
in
lcall
jbe
xlat
add
fwait
lods
adc
mov
loopne
insl
in
sbb
and
push
xlat
jbe
hlt
testl
jge
pcmpgtd
mov
sub
insb
clc
jmp
push
sbb
aad
xor
popf
pop
rep
mov
les
lcall
ja
xchg
pusha
cld
xchg
push
mov
mov
loop
aaa
cmp
xchg
mov
in
in
icebp
test
add
pop
scas
ret
out
adc
clc
test
cmp
jns
push
mov
cltd
xchg
rcrl
add
and
es
inc
and
test
push
fs
lea
ss
push
mov
or
add
scas
outsb
pushf
jg
out
imul
inc
sarl
out
dec
pushl
cld
jg
outsb
dec
repz
jge
loopne
mov
cmc
movsl
or
mov
inc
repnz
pop
push
sub
jl
cmc
mov
sub
pop
and
stc
and
pusha
jnp
sbb
dec
outsb
arpl
pop
mov
shl
aas
push
in
sbb
pushf
jne
cmp
pop
xchg
inc
jne
mov
cmp
out
inc
dec
push
sti
adc
or
pop
repz
je
test
xchg
jo
imull
push
mov
mov
or
pop
ljmp
jecxz
or
add
mov
mov
gs
test
sub
jge
mov
push
nop
mov
cld
outsl
mov
fsubs
cwtl
xor
mov
data16
mov
aaa
ja
dec
mov
mov
sub
rorb
std
inc
gs
mov
add
in
push
imul
or
push
inc
idivb
mov
jns
xchg
or
daa
sub
ficoml
cmp
lcall
push
xchg
fs
das
insl
aam
cmpl
mov
std
fidivrs
mov
mov
sub
int
mul
dec
push
or
mov
sti
imul
jae
mov
xchg
jle
inc
mov
push
jle
jbe
arpl
ljmp
xor
sbb
pop
add
or
loop
inc
icebp
jp
cmpsb
or
or
cmp
inc
and
xrelease
dec
xor
cmpsb
mov
mov
cmpsb
pop
xchg
out
sbb
pop
ljmp
int3
in
popl
pop
stos
movl
push
or
mov
adcb
lds
mov
push
cmp
mov
cmp
adc
aam
mov
adc
ss
mov
in
cmp
mov
push
xchg
inc
testl
iret
ss
nop
in
repnz
mov
push
or
mov
xchg
cs
out
lds
or
pop
pop
insl
into
mov
mov
mov
in
inc
pop
pop
jl
push
add
movsl
mov
adc
jg
enter
cmp
jmp
sub
jmp
ret
jp
rorb
and
je
divb
mov
mov
leave
xor
mov
js
jmp
cmp
cmp
mov
fstpl
jmp
ret
add
push
or
lods
into
or
dec
jae
push
sub
push
lods
gs
cmp
xchg
bnd
aas
nop
xor
test
ja
mov
mov
imul
in
outsl
sbb
sbbl
dec
and
jg
fnstcw
in
das
push
mov
sahf
cmpb
sahf
jge
lahf
ss
nop
push
sbb
inc
and
xchg
cmc
and
ss
and
or
lret
adc
jnp
cmc
imul
xchg
mov
nop
adc
jecxz
sub
cwtl
sti
rolb
push
in
xchg
aaa
xchg
insb
shrb
rcrb
inc
jmp
sub
int
adc
sub
orb
hlt
repnz
and
or
pop
out
outsb
mov
sbb
repz
jns
mov
dec
in
fsts
sub
push
fwait
mov
iret
imul
mov
dec
cli
xchg
cmp
mov
mov
orb
shll
arpl
fbstp
aaa
xor
in
pop
scas
xchg
and
push
xlat
stos
mov
leave
push
rol
mov
test
push
leave
aaa
into
mov
in
ret
adc
sbb
loope
lret
mov
pop
scas
fisttpll
xchg
es
push
lods
pop
cmpsl
inc
push
sbb
ss
es
bnd
xchg
es
test
mov
test
ds
ds
or
mov
mov
cltd
mov
cli
insl
mov
jp
orl
xor
imul
mov
rclb
pop
push
inc
cmp
and
sbb
adc
mov
enter
push
dec
repnz
push
fs
xor
test
sbb
jne
iret
jno
fwait
sti
push
pop
ljmp
idiv
adc
sarb
xor
fisubl
cltd
lods
inc
sahf
lcall
rcll
pushf
mov
fsub
and
cmc
lods
inc
out
xchg
lods
repz
sub
int
add
pop
ss
adc
sub
xor
push
mov
inc
fdivl
lret
cmp
negl
into
dec
push
mov
mov
pop
mov
imul
pushf
inc
jne
jge
nop
fstl
xlat
push
and
xlat
dec
ljmp
xor
enter
insb
pop
fimuls
adc
std
pop
sub
data16
pusha
lret
jmp
jle
addl
sbb
jle
enter
iret
movsb
mov
hlt
repnz
sub
jp
pop
es
fwait
mov
and
sub
out
cld
shrl
push
push
mov
pop
mov
push
in
imul
jno
inc
cmp
insb
mov
xor
or
addr16
jp
xor
add
xor
fldcw
seto
lret
insb
mov
mov
mov
push
jbe
stos
sub
movsl
cmp
popf
dec
es
popf
inc
push
inc
ljmp
aaa
leave
imul
ja
adc
aad
aas
out
xchg
lods
sub
hlt
xchg
es
and
cwtl
xlat
fs
pop
xor
aaa
cmpsl
adc
jnp
sbb
mov
mov
adc
jne
out
fnsave
adc
enter
push
into
mov
adc
jp
adc
jmp
xchg
cmp
jnp
cmpsb
fiaddl
push
jnp
scas
and
mov
mov
sbb
mov
lret
cld
inc
sti
inc
cltd
cmp
jno
inc
and
sub
lahf
push
push
xorl
push
mov
sbb
jo
push
in
test
jno
insb
divb
movsbl
mov
jnp
push
xchg
xor
fucom
mov
scas
sub
arpl
idiv
xchg
push
insb
icebp
mov
jno
and
pop
sub
push
in
faddl
cmp
dec
gs
push
and
aas
mull
lock
mov
shrl
xchg
hlt
lods
mov
mov
adc
push
jg
jne
test
mov
mov
icebp
negl
xor
out
and
sbb
inc
movsl
int3
mov
rolb
out
sti
cmp
sbb
into
xor
xor
mov
sub
adc
mov
mov
sbb
rcrb
shl
ret
ja
fwait
stc
pop
das
cwtl
jp
push
lret
bound
jle
repz
lods
vpmullw
cli
add
test
jb
cmpps
outsb
xchg
jge
pop
ss
cmp
test
mov
adc
jg
lds
mov
lock
dec
lods
popf
fs
fsubrp
sbb
cmp
fidivs
add
jne
add
adc
xchg
lret
aam
icebp
gs
mov
out
popa
popf
sub
hlt
pop
movsl
mov
pop
xor
xchg
daa
lahf
jbe
add
fwait
push
clc
insl
jmp
cmp
cmc
js
cmpb
cmp
popf
addb
sti
ljmp
daa
and
out
repz
sbb
jmp
add
lds
push
arpl
xchg
rorb
sbb
add
adcb
inc
or
mov
or
dec
jg
push
cmpsb
outsb
jl
push
insl
or
movsl
jno
mov
xor
push
aam
out
xor
xchg
jp
cmp
mov
lahf
and
out
stos
inc
xor
sti
aad
and
mov
movlps
mov
cli
in
xchg
adc
push
mov
repnz
mov
lods
inc
loope
cmpsb
lea
add
into
push
outsl
in
pop
dec
mov
cmp
inc
clc
xor
out
xchg
push
or
dec
int
lahf
into
fmuls
enter
iret
pop
adc
fs
lret
std
subb
stos
leave
jb
out
pop
aas
sub
lods
xchg
sbb
jae
jns
ljmp
pushf
repz
sbb
loope
into
shl
iret
mov
or
xchg
out
mov
lea
ret
and
jae
jne
pusha
add
push
cmc
cmp
out
daa
data16
jl
mov
aam
repz
and
jbe
and
test
hlt
addb
aam
pop
pop
mov
cmp
lret
xlat
shrb
jnp
scas
mov
in
jmp
inc
push
stc
addl
xor
mov
shll
pop
cmp
push
in
jne
arpl
and
imul
out
dec
shll
mov
and
push
je
jbe
cmp
sub
out
mov
lds
pop
push
dec
pop
and
aam
data16
xor
cmp
push
lods
cmp
xlat
das
aam
bound
lods
push
mov
push
cmc
jmp
xorb
inc
ljmp
xor
sub
xchg
in
add
test
sti
xchg
out
pop
sahf
inc
mov
jno
and
ret
xor
dec
nop
and
paddb
xor
cli
xor
add
push
add
xor
mov
mov
adc
push
or
sub
sbb
out
stos
iret
mov
imul
push
movsb
cmc
int3
push
leave
dec
in
mov
in
dec
jbe
stc
mov
push
adc
aam
sub
pop
fistps
fcmovbe
inc
mov
jl
mov
jbe
enter
outsb
dec
mov
test
aad
adc
fistpl
dec
test
cld
out
js
fldl
dec
dec
shrl
jno
pop
outsl
sbb
clc
cmpsl
in
ss
cmpsb
fistpl
call
rcrl
mov
xor
test
imul
aad
adc
mov
push
jle
aad
or
negl
cmc
fwait
mov
sub
xchg
mov
shl
cli
adc
push
dec
pushl
push
mov
pushf
or
dec
push
sub
jge
sub
rorl
rcl
add
imul
cmp
cmp
sub
ret
arpl
hlt
dec
push
push
push
jo
ja
xchg
cltd
out
adc
mov
dec
outsb
mov
lahf
mov
stos
addr16
or
adc
fsubl
cmpb
xchg
aaa
and
mov
mov
rol
out
pop
sbb
je
sub
mov
insl
stc
cmp
nop
outsl
inc
pop
aad
bound
or
push
pop
push
mov
ret
pop
out
rol
xchg
and
vprotq
and
sub
in
xchg
cmc
pop
cmp
aam
nop
fstl
dec
adcb
push
lahf
cmp
cmpsl
cmc
addr16
jge
xor
push
mov
adc
adcl
or
aas
jp
mov
shl
mov
sub
test
adc
push
pop
sahf
or
out
fcoml
mov
adc
adc
mov
jl
lret
aas
loopne
icebp
push
mov
lret
pop
add
jecxz
lret
xlat
scas
into
repz
lret
or
gs
lock
aas
push
ja
cli
mov
xchg
xor
or
mov
jbe
fsubrl
clc
push
pop
mov
aam
sbb
xor
in
add
adc
add
shrb
in
jae
push
push
xor
add
jne
clc
xchg
jp
pop
clc
fwait
inc
or
mov
iret
push
sub
push
cmp
sbb
jecxz
insl
mov
xchg
pop
out
jnp
xchg
insl
push
std
das
or
mov
ljmp
jno
into
mov
xchg
and
ds
int
mov
xchg
arpl
jno
rcrb
mov
xlat
stos
jne
into
loop
pop
ss
inc
sub
fsubrs
jb
add
add
in
pop
pop
sub
ficomps
mov
ds
in
test
mov
jg
jae
and
pop
fwait
popf
fidivs
dec
mov
push
jle
insl
sub
push
int
push
shrl
or
outsl
adc
ret
je
push
mov
dec
incl
in
jmp
test
adc
inc
stos
rcrb
test
mov
add
in
cmp
mov
sub
mov
ret
cmp
repz
lock
shrl
push
ret
push
mov
cmp
das
mov
mov
xlat
outsl
sti
adc
xor
add
push
inc
stc
sbb
sbb
daa
inc
and
pop
ljmp
and
hlt
or
into
mov
push
ljmp
mov
pop
xchg
gs
daa
scas
adc
push
cmovl
scas
ret
lcall
and
mov
xor
xor
ficomps
xor
ja
stc
mov
jge
or
jecxz
lcall
pop
inc
jmp
cli
jns
adc
loopne
dec
and
sub
cld
xchg
jo
loopne,pt
pop
adc
ss
rolb
aaa
ret
aaa
or
scas
cmp
imul
sbb
mov
jg
mov
stc
pushf
or
stos
xchg
fsubrl
inc
mov
mov
mov
push
or
stos
fiadds
jge
and
and
mov
mov
rclb
push
dec
into
pop
mov
inc
iret
jl
stc
and
and
fdivl
sarb
xorb
lods
xlat
jnp
stos
push
out
add
adc
notl
repz
aam
test
push
xchg
inc
dec
push
dec
mov
jge
test
mov
loope
stos
cmp
cmc
out
les
test
adc
mov
inc
in
sbb
repnz
xchg
mov
incl
push
shl
jl
inc
sub
test
push
push
inc
xchg
out
hlt
ret
hlt
adc
inc
inc
cmp
pop
mov
insb
pop
pop
pop
fmull
pusha
dec
jbe
jo
and
fdivrl
into
lret
call
dec
jnp
insb
imul
scas
cmpsl
test
xchg
mov
xor
mov
imul
ds
mov
mov
mull
sub
push
and
fcmovb
sbb
jae
aas
push
icebp
xchg
mov
cmp
add
push
and
aad
dec
idivl
jmp
pushf
mov
inc
lahf
cmp
ljmp
test
cmp
dec
lret
aad
popa
movsl
dec
int
add
xchg
xlat
mov
sbb
push
stos
jle
push
ds
mov
xchg
push
inc
mov
sub
push
push
fisubrl
fcmove
rclb
jge
mov
dec
xor
pop
enter
xchg
mov
xlat
pop
add
mov
or
push
inc
mov
fldt
mov
aam
add
outsl
push
jno
mov
neg
lock
in
call
xchg
stos
ljmp
push
lods
out
rclb
pop
or
ror
mov
lret
cmp
dec
dec
dec
rcrb
cwtl
in
mov
mov
in
jo
pushf
movsl
push
mov
mov
inc
mov
adc
rorl
add
scas
mov
jnp
push
cmp
adc
pop
dec
ds
cmp
rcrb
pop
ljmp
and
arpl
daa
outsb
lahf
or
sub
das
icebp
jne
add
xor
adc
scas
testb
cmp
push
les
pop
ja
add
popa
mov
mov
mov
xchg
call
xchg
movsl
cmpsb
xchg
fmuls
dec
arpl
and
jle
sub
jmp
xchg
mov
xchg
cmp
mov
rolb
icebp
adc
pushf
xlat
xor
fstpt
and
gs
xchg
lahf
sbb
testl
adc
mov
xchg
xorb
fwait
cltd
outsl
cld
out
and
and
pusha
xchg
mov
or
push
lods
lods
and
mov
push
xchg
stos
js
adc
mov
xchg
adc
mov
cmpsl
subl
ja
inc
sub
aas
loope
hlt
aas
add
int
fdivl
cmpsl
or
in
ja
aad
outsb
jp
dec
jmp
dec
sti
mov
out
fisttps
mov
push
in
clc
sub
das
cmp
idivl
imul
les
pop
ljmp
fwait
mov
cmc
jbe
cmp
adc
xchg
xor
add
sbbb
mov
cmc
add
rcl
in
scas
push
pop
mov
xorl
fstl
aaa
pop
fwait
in
lret
mov
or
inc
sbb
popa
nop
push
into
push
rol
xor
fistps
into
push
push
or
sbbl
pop
and
push
xor
arpl
cmc
pop
mov
stc
and
fsts
lock
lret
mov
js
testl
scas
pop
pusha
jg
sbb
rcrb
lcall
out
lahf
lods
and
add
ret
adc
popl
jecxz
inc
sbb
mov
icebp
hlt
adc
push
ds
mov
dec
and
testb
mov
rorl
mov
and
mov
sbb
test
mov
jno
push
jae
push
call
cmp
arpl
push
cmpsl
add
ss
mov
push
dec
mov
insb
or
int
push
xor
mov
inc
push
psubsw
pop
fwait
jbe
mov
fcoml
call
sub
sub
jl
andl
add
xor
cli
xchg
mov
dec
repz
andl
dec
sub
or
pushf
mov
ret
dec
xor
shrb
push
mov
xchg
xor
mov
dec
push
sub
sti
pop
mov
loopw
ret
xor
popf
lahf
mov
xorb
cmpsl
stc
fdiv
rcrb
mov
jp
sti
push
dec
dec
mov
mov
jmp
dec
outsl
push
sbb
or
mov
scas
ds
adc
pop
cmp
outsl
rcrb
cmc
cmp
and
sub
or
outsb
sub
cmpsb
cmp
dec
xor
rcrl
jnp
or
es
icebp
not
or
out
and
xor
arpl
dec
out
imul
xor
mov
arpl
inc
and
int
lea
cmp
or
aas
fldcw
mov
pop
sbb
clc
rcrl
ds
cmp
xchg
jp
popf
xchg
cmp
dec
push
xor
out
mov
movl
inc
mov
xor
or
movsb
cld
mov
arpl
insb
jmp
sbbl
jo
scas
sahf
sub
fucomi
push
cmc
lock
mov
les
xchg
mov
jbe
mov
dec
jo
mov
push
gs
inc
jle
jge
icebp
push
push
in
pusha
iret
jecxz
xor
cld
cmpsl
or
je
dec
mov
dec
sbb
lcall
cli
mov
and
add
cmp
add
sbb
insl
shlb
sbb
cmc
mov
jge
mov
jecxz
or
mov
into
pop
mov
mov
inc
sub
aam
outsb
sub
andl
dec
aam
int
jmp
addr16
fistpll
and
adcb
and
aad
xchg
cwtl
insl
test
pop
arpl
pop
cmc
sarb
movsl
int3
arpl
lock
lcall
test
imul
push
sub
xlat
or
gs
sbb
scas
mov
insl
cmp
and
sub
mov
cmpsb
jp
filds
mov
mov
das
pop
pop
or
lea
sub
inc
sbbb
aas
enter
scas
sti
jp
push
inc
adc
orl
dec
sub
sbb
xchg
xor
cmpsb
cmp
mov
divb
pop
cmp
pop
pop
mov
frstpm(287
ja
ds
push
loopne
jns
push
push
int3
push
or
fcompl
out
jnp
xlat
aaa
mov
pop
pop
insb
mov
or
mov
mov
test
xchg
pop
je
pop
jae
stc
sub
push
dec
cmp
xor
inc
pop
es
cmp
jae
insb
inc
cltd
sbb
adcb
xchg
dec
mov
mov
push
push
ss
dec
aas
loope
lea
sbb
aam
sub
stc
test
or
pop
into
iret
icebp
pushf
add
das
mov
and
loopne
pop
lret
fistps
loopne
sub
scas
popa
mov
dec
cld
adc
inc
dec
mov
jmp
mov
or
mov
gs
sti
dec
adc
pop
inc
lea
idivl
imulb
in
decl
scas
inc
pop
pop
cmpsb
xor
sub
movsl
cmp
jle
adc
or
jg
imul
push
mov
lea
fstpl
scas
jns
or
test
fidivl
adc
jmp
or
test
mov
xchg
out
pop
imul
loope
dec
fabs
push
fsts
aam
inc
mov
std
jns
je
mov
mov
sti
or
fs
xlat
xor
leave
psubq
popa
loope
and
sbb
arpl
sbb
mov
insb
lcall
repnz
adcl
push
pusha
into
loop
mov
jg
or
iret
push
pop
sbb
sbb
pop
fldcw
ljmp
or
dec
sbb
cmp
push
fucom
fdivrs
mov
add
or
push
jno
in
out
aad
pop
inc
cmp
out
lret
hlt
mov
lock
xor
sbb
or
mov
fnstsw
add
mov
add
insb
inc
pop
das
pop
das
movsl
ss
out
push
icebp
dec
add
mov
fisubrl
cli
xchg
out
adc
or
pop
cli
in
or
xchg
mov
sbb
je
ljmp
fildll
or
mov
cmc
sbb
dec
adc
adc
rcl
lods
push
test
sub
xor
imul
dec
pop
cmpsl
xchg
jns
inc
adc
xor
out
outsb
lds
sbb
fdivrl
cmpb
fisubrs
jno
fsqrt
xlat
adc
enter
movsl
xchg
xchg
xlat
mov
cmp
imul
pop
mov
iret
add
cmp
lods
push
sub
lret
pop
lea
out
gs
mov
mov
int
movsl
ss
push
push
ret
pop
imul
addb
jp
in
inc
pop
push
fs
shll
icebp
push
and
lret
outsl
add
test
out
push
cmp
mov
nop
daa
adc
sbb
lahf
mov
sbb
sbb
dec
and
cmp
sub
fcomp
lret
popa
jbe
aad
or
sub
lock
movsb
mov
out
add
add
enter
add
mov
or
popa
adc
mov
jns
adc
or
xor
xor
bound
fistps
iret
mov
inc
or
mov
shrb
adc
cmp
insl
inc
loope
fsubrs
pop
dec
fsubr
mov
dec
andb
cmpsl
nop
rcrb
rcrb
and
sbb
jbe
test
add
and
or
out
and
jge
stc
inc
mov
hlt
sbb
mov
pop
daa
outsl
daa
or
stos
mov
das
mov
fs
dec
xchg
adc
in
adc
popf
xor
jbe
gs
setnp
hlt
mov
stos
cs
dec
or
mov
xor
pop
aaa
mov
out
push
test
fisttpl
out
lds
pop
cmc
or
xchg
jmp
or
pop
ja
pop
fcomps
daa
jb
imull
imul
mov
add
add
xchg
pop
adc
rorl
lods
push
xchg
mov
lea
mov
fdiv
mov
xlat
cwtl
repnz
and
adc
sub
and
jo
jle
out
pop
push
test
in
mov
add
in
test
les
outsl
mov
mov
inc
mov
adc
cmp
mov
fcomp
inc
push
mov
push
mov
xchg
sub
pop
insl
dec
pop
lahf
popa
mov
scas
clc
loopne
fs
aam
pop
sub
sahf
cmpsl
jns
jge
dec
and
dec
daa
mov
dec
lods
mov
cld
push
js
clc
in
mov
or
mov
in
xchg
es
dec
mov
xor
add
fimull
in
fnstsw
sbb
fcomps
adc
sbb
xchg
mov
popa
cmc
into
insl
push
mov
sub
inc
imul
mov
mov
pop
lret
push
dec
lods
or
cmpsb
mov
cmpl
push
inc
mov
ror
movsl
cmp
and
in
pop
adc
pop
inc
cld
jmp
add
and
rorl
mov
dec
outsl
and
mov
or
and
pop
cmc
rcrb
jl
repnz
push
xchg
mov
addl
hlt
pusha
xor
sbb
dec
bound
sarl
ret
cmp
icebp
and
iret
sbbl
pop
in
inc
mov
mov
pop
cld
and
cmp
xchg
ja
cmp
sub
dec
mov
cmp
mov
mov
rorl
and
cmpsb
xor
and
stos
inc
ror
ljmp
pushf
sub
lret
cmp
sti
push
ss
ja
pop
mov
cwtl
jecxz
into
xchg
rcrb
mov
add
scas
xchg
sub
fwait
dec
test
add
xchg
fwait
adc
mov
insl
lods
lds
stc
call
pop
cmpsl
enter
in
inc
ds
push
loop
add
ret
fwait
roll
shrb
mov
mov
es
ds
addr16
popa
and
mov
sbb
jne
jg
das
inc
cmp
cmp
sbb
jno
pop
adc
mov
outsb
xor
add
push
mov
out
xlat
rol
sbb
or
adc
test
ljmp
lcall
xchg
shlb
push
decl
jge
aam
mov
cs
dec
rorb
idivb
in
sub
lock
and
mov
lods
in
fwait
dec
pop
into
or
mov
sub
inc
dec
inc
aam
gs
ljmp
jb
sbbl
xchg
mov
xchg
push
nop
nop
pop
scas
dec
nop
xorb
fisubrl
cwtl
mov
int
ljmp
jmp
mov
xchg
icebp
cli
orb
push
les
mov
push
lock
pop
jns
adc
out
dec
xchg
test
adc
cmp
ljmp
mov
vmovaps
push
test
fldt
movb
cmp
gs
bnd
add
loope
fidivs
or
mov
push
sbb
jp
cli
xchg
test
in
in
add
xor
insb
add
addb
xchg
adc
pop
inc
mov
inc
sbb
addr16
lea
sbb
ror
loopne
fadd
pop
setle
xor
push
jno
pop
or
or
xchg
xchg
iret
test
mov
xchg
xchg
stos
dec
dec
or
shr
outsl
dec
xor
ret
daa
out
add
jbe
mov
push
in
fsubr
pop
push
or
aaa
sub
notl
mov
and
je
inc
xlat
xchg
iret
fwait
adc
mov
cltd
pop
jne
adc
add
fnstcw
pop
outsl
outsl
mov
loope
mov
imul
insl
sub
push
cs
jbe
repnz
sbb
jns
mov
out
bound
std
pop
imul
push
push
inc
or
xor
daa
outsl
push
in
popa
enter
sub
xchg
fcompl
push
lea
out
mov
xor
push
pop
mov
subb
xor
pop
dec
imul
sub
daa
jne
push
shll
lret
data16
xor
test
shrl
sti
xchg
repz
mov
pop
fiaddl
pushf
out
mov
mov
lock
cwtl
push
or
xor
sbb
push
and
and
and
out
xor
xchg
incl
or
mov
jg
sahf
mov
stos
movsb
mov
pop
pop
cld
lcall
sahf
testl
or
mov
xlat
or
xor
fs
mov
scas
mov
scas
inc
cmpsb
gs
cld
add
mov
movsb
cmpsl
fld
iret
out
push
mov
xor
mov
std
out
mov
out
jecxz
push
test
loop
and
movsb
repnz
inc
dec
pop
jns
adc
jne
jle
leave
gs
clc
inc
mov
jle
fnstenv
pop
pusha
enter
mov
popa
cmpsb
int
mov
leave
pop
ret
mov
les
insb
push
insb
and
mov
int3
sbb
fs
lock
cmp
test
sub
push
xor
xor
nop
push
jo
dec
bound
rorb
mov
arpl
lds
cld
xchg
scas
add
or
sub
aaa
dec
mov
neg
test
push
sub
or
cmp
out
and
pop
test
mov
xor
dec
je
rcrb
aaa
rorl
std
cld
clc
jp
lods
and
int3
inc
ds
ljmp
or
fxch
mov
call
fdivrl
addl
inc
mov
mov
hlt
in
enter
add
mov
adc
fs
sub
xchg
jg
adc
cwtl
out
xchg
dec
leave
push
add
pop
and
and
cmp
or
scas
ret
sub
shrl
inc
in
loopne
pop
jo
inc
loopne
imul
cmp
jne
incl
push
dec
dec
cmpsl
mov
jns
pop
mov
dec
pop
js
pusha
sti
fwait
shlb
xchg
cmp
xchg
sub
cwtl
stos
and
pop
xor
jnp
cli
or
cmp
mov
xchg
cmpsl
fcmovnb
pop
cmp
mov
aam
movsb
scas
add
mov
ret
std
lea
push
push
or
loop
rorl
in
in
shll
push
jns
pop
mov
imul
sub
movsl
mov
rorl
int
bound
cmp
arpl
fyl2x
jae
ret
xor
popf
mov
pushf
outsb
lret
mov
inc
lretw
push
and
sti
xor
lahf
into
imul
add
iret
pop
pusha
out
daa
divl
dec
cmp
cmp
mov
mov
mov
fsubrs
mov
sub
fcmovb
mov
fstpt
jge
lret
not
mov
xchg
movsb
decl
xor
stc
xor
in
sub
roll
js
jg
sti
push
repnz
dec
xchg
sub
pop
mov
fists
adc
mov
or
ds
cli
out
jmp
jb
and
jb
xchg
dec
loop
daa
repz
inc
add
jno
push
out
mov
xor
popa
ja
fwait
insl
fcompl
and
push
andb
aad
out
rcl
jg
mov
adc
xchg
push
or
jl
repnz
data16
add
mov
cmp
adc
es
aaa
sbb
fwait
out
pop
icebp
and
mov
cld
test
inc
xor
and
mov
mulb
xor
pop
or
mov
shlb
loop
les
cmpsl
fstpt
inc
mov
jbe
ds
mov
std
and
rolb
mov
mov
push
push
add
les
xchg
mov
int
push
repnz
push
mov
cmp
pop
out
jo
repnz
cmp
test
adc
cmp
add
outsb
je
dec
push
pop
pop
insb
sub
xchg
mov
ret
leave
sti
ret
mov
xor
loope
andb
enter
data16
and
enter
iret
insl
push
pusha
lds
xor
jl
data16
jecxz
jmp
push
fnstenv
xlat
mov
bnd
loopne
jbe
fnstcw
loop
fisubrl
pop
pusha
notl
addr16
fcomip
add
add
xor
testb
pop
test
jle
add
rorb
insl
cld
and
dec
jge
pop
scas
call
pop
mov
mov
pop
lock
pop
xchg
scas
add
es
scas
inc
sub
mov
add
sub
and
sti
xchg
fdivrs
sbb
jecxz
jns
mov
and
inc
adc
decb
xchg
push
call
jge
outsl
dec
mov
mov
inc
pop
js
fbstp
adc
int3
and
clc
loop
pop
insb
lcall
pop
cmp
pop
mov
pop
mov
dec
pop
mov
push
call
sub
call
mov
push
sbb
mov
fwait
out
test
out
rclb
jp
sub
cs
aad
stos
mov
lret
sbb
rep
js
xchg
sub
xor
fldenv
dec
cmpsl
jae
push
movsl
add
xchg
mov
inc
mov
mov
and
push
popf
xor
insl
sbb
aas
jl
jno
fwait
add
std
dec
and
lret
lret
out
movl
sbb
cmpsl
xor
push
pop
cmpl
scas
aam
pop
dec
test
repnz
loop
outsl
fwait
mov
aad
in
out
test
jb
xor
xor
sub
lret
das
sbb
test
movsb
leave
stos
pusha
add
mov
mov
scas
cmp
rol
xchg
mov
shrb
xor
lock
xchg
or
movsl
icebp
movsb
cs
ljmp
mov
and
pop
adc
stc
mov
test
aad
cmc
shl
ds
mov
add
and
fdiv
mov
cs
imull
inc
xchg
jl
add
inc
dec
pop
xchg
into
loop
mov
fwait
and
out
inc
mov
loop
xlat
push
insl
cmp
cmp
repz
jnp
test
pop
jp
pop
outsb
orb
dec
fwait
mov
dec
fbstp
data16
out
aas
pop
fsubr
aam
mov
cmc
popa
xor
add
add
aas
push
sub
inc
sub
or
out
notl
jle
js
dec
inc
jge
mov
xchg
or
jnp
in
daa
xchg
xor
pop
lea
out
sub
jae
lret
mov
adc
or
or
xchg
loop
cmp
add
stc
jg
dec
mov
fadd
out
sar
rcll
sub
scas
je
xchg
in
cmp
cli
pusha
add
outsb
sub
pop
mov
repnz
into
int3
fmulp
or
cld
popl
and
inc
xchg
xor
ret
sub
out
mov
xchg
insl
inc
ret
clc
mov
jbe
es
insl
test
not
push
add
sbb
cmc
mov
movsl
jns
mov
outsb
ja
dec
test
pop
mov
cmp
push
fisubrs
ljmp
jno
ljmp
push
mov
adc
aaa
push
or
mov
jbe
call
cmp
sbb
inc
imul
das
pop
add
cmpsb
stc
sub
xchg
pop
push
icebp
ds
mov
cmp
mov
ja
ret
lock
iret
popa
lods
mov
jnp
mov
ret
loopne
sti
fmull
sbb
popl
rorl
iret
push
cltd
pusha
cmp
add
test
adc
js
push
jmp
test
xchg
and
aam
dec
and
stos
cmp
es
jmp
or
sub
ret
lock
ljmp
adc
les
adc
stos
iret
jle
or
mov
jo
pop
popa
sar
aad
pusha
and
popw
aam
xchg
dec
mov
sbb
icebp
insl
cmp
jns,pn
les
cmp
cmp
xchg
sub
pop
shlb
xorl
lock
jb
nop
addr16
xchg
add
and
jns
or
jl
nop
xlat
sbbl
out
mov
sub
shrw
sbb
xchg
das
pop
sub
cli
outsb
aam
mov
xor
or
sbb
sub
mov
aad
rcl
mov
aam
push
push
lods
xchg
fs
aas
lods
pop
stos
mov
lcall
cwtl
jne
add
cmc
xchg
testl
push
mov
or
ja
adc
mov
or
mov
lcall
and
in
cld
push
sub
sbb
or
xor
in
shl
inc
mov
lcall
push
push
in
jg
mov
icebp
mov
jnp
sub
ja
jnp
sub
scas
inc
sahf
jmp
setge
in
sub
mov
fists
pop
shlb
aad
xor
out
sahf
mov
cmp
aaa
pop
dec
cwtl
xor
cmc
sbb
adc
sbb
or
repz
imul
out
dec
cmpsl
stos
pop
dec
or
jmp
jbe
mov
push
jae
dec
imul
fwait
inc
popa
cmp
test
test
mov
mov
adc
jno
sub
dec
jecxz
mov
adcb
je
cltd
popf
or
xorl
ljmp
jns
cli
or
mov
sbb
jmp
sbb
ret
test
xchg
mov
loopne
popf
or
js
lods
sbb
adc
stc
idivb
sbb
and
sbb
les
pop
or
clc
push
out
outsb
xchg
call
in
pushl
shrl
cmp
gs
in
push
cwtl
outsl
sub
sti
stos
mov
pop
and
aad
ja
test
clc
insl
inc
lahf
dec
jnp
cmp
pop
test
push
add
mov
mov
fs
xchg
mov
lock
pop
jge
imul
sub
test
jp
gs
lahf
xchg
mov
push
je
cmpsb
xor
fs
movq
mov
sbb
sub
jmp
dec
ss
or
loop
out
xchg
adc
pop
mov
mov
dec
es
push
outsb
inc
and
shrb
push
daa
movsb
cmp
andb
pop
xchg
scas
or
insl
lcall
jne
ljmp
daa
clc
or
fldt
int3
out
mov
rolb
sti
or
and
pop
inc
xlat
push
fnsave
in
sbb
mov
movd
fldcw
xchg
and
pushf
push
in
in
push
add
jne
int
bound
mov
outsb
bt
mov
lds
xchg
sbb
ja
fmuls
or
xchg
xlat
mov
dec
dec
push
dec
dec
jle
sub
mov
movsb
aad
adc
jnp
xor
insl
push
movsl
push
daa
aam
push
cmp
loope
ret
outsb
sub
dec
add
repnz
dec
out
dec
movsb
dec
dec
pop
sbb
push
cmovge
sbb
push
jno
pop
pusha
and
idivl
rcll
push
loope
cmp
cmp
shll
jl
lds
mov
sbb
dec
jecxz
outsl
shll
imul
addr16
movsl
jecxz
rcrl
xor
gs
and
test
ds
pop
fidivs
shr
jl
jg
pop
call
push
and
shl
or
call
aas
out
test
adc
xlat
cmp
xor
test
inc
pop
test
movsb
cld
jb
cmpsb
mov
inc
insb
loope
add
jo
lcall
pop
fisttps
xor
sub
xchg
sub
fbstp
ffree
dec
mov
cmp
gs
mov
or
push
cltd
dec
inc
adc
jno
pop
xor
mov
adc
sbb
loope
jae
sarb
xor
fnstsw
xor
dec
loopne
dec
popf
cmpsb
and
and
ds
inc
xlat
xchg
int
mov
mov
shll
das
sub
mov
test
pop
adc
xor
mov
cltd
fimull
addl
ljmp
dec
leave
fndisi(8087
js
test
addr16
sbbb
xor
jae
xchg
mov
out
xor
insb
jbe
aaa
dec
clc
push
outsb
inc
cmp
test
das
or
popa
jl,pn
popf
or
mov
arpl
fmul
mov
jnp
fisubl
push
xor
ffreep
out
pop
lds
or
into
mov
cmc
mov
push
sbb
xchg
adc
stos
jmp
pusha
xchg
fsubl
dec
mov
mov
popa
ljmp
cwtl
cmp
pop
std
or
add
inc
jmp
outsb
shrl
mov
cwtl
inc
and
cmp
pop
bound
sub
add
popf
cmp
movb
popa
aad
jb
cmc
imul
add
lahf
inc
lahf
inc
or
jnp
dec
repz
clc
sahf
addb
inc
jae
mov
test
mov
jle
cwtl
scas
test
pop
hlt
ljmp
and
int
out
jmp
lea
jle
pop
loope
push
out
fmul
fmull
lcall
enter
xorb
xor
mov
dec
aas
jp
push
test
fucompp
dec
mov
sahf
nop
sbb
pop
stos
or
sub
push
mov
test
push
movsl
mov
cmp
out
jo
andb
sbb
mov
inc
jns
push
push
enter
mov
mov
lret
pushf
movsb
xlat
jbe
cmp
imul
inc
push
xor
in
sbbl
xchg
add
pop
ja
shlb
addr16
stos
cmp
sub
stc
test
sub
sub
jne
testb
cmp
in
mov
into
nop
sub
cs
lret
pop
xor
fwait
je
jmp
andl
inc
push
scas
aaa
aam
sub
ficoms
or
rcrl
pop
jmp
in
mov
ss
or
xchg
or
enter
dec
mov
mov
xor
and
dec
xchg
bound
add
shlb
and
pop
lret
dec
movb
dec
sbb
or
ret
mov
pop
sub
and
fcmovnu
pop
mov
cld
push
mov
ljmp
in
jno
test
lds
cmp
loope
sub
jno
iret
inc
repnz
jne
in
lods
das
in
out
push
xchg
insb
mov
stos
jne
fstpl
test
push
adc
popf
xor
addr16
lea
lods
mov
icebp
mov
fsubr
test
loope
outsb
call
or
push
jg
or
xchg
mov
sub
movsl
insl
mov
sub
sub
jbe
repz
mov
les
jg
loop
cld
in
stos
aas
sbb
push
addr16
out
mov
hlt
mov
pop
sub
out
aas
add
mov
sbb
scas
xchg
sahf
pop
aam
cltd
loope
scas
pop
repz
xorb
icebp
jne
push
popa
push
out
sti
stos
dec
inc
lods
hlt
add
sarb
arpl
mov
sbb
inc
xlat
xor
jmp
mov
ret
imul
cmpsb
dec
fst
pop
jae
add
testl
xchg
xchg
and
movsb
pop
aam
iret
fdivrl
mov
insb
push
pop
testb
add
cmp
arpl
call
lahf
shl
inc
leave
mov
sti
je
mov
pop
fwait
repnz
mov
dec
aas
sbb
daa
and
dec
mov
jp
loope
jmp
rorb
push
hlt
xor
and
or
pop
and
xchg
add
imul
cltd
mov
push
and
xchg
xor
adc
cmpl
and
lcall
cmp
fistpl
pop
in
add
cmp
sub
sbb
cwtl
popf
lods
and
in
test
rorl
pop
clc
dec
loope
aad
sub
mov
cmp
fistps
aas
outsb
aam
sbb
jns
xchg
mov
loop
arpl
repz
push
xlat
mov
jne
stos
das
out
test
or
dec
cmp
sub
adc
pop
xor
xchg
or
out
push
mov
icebp
mov
gs
dec
lret
adc
dec
ja
inc
fdivrs
fldcw
xor
sub
in
or
jge
bound
je
sahf
push
mov
fs
or
jns
les
sbb
pop
jmp
jbe
in
xor
inc
fcmovnbe
mov
push
insl
icebp
bound
inc
gs
jbe
or
sub
adcl
loope
mov
mov
fists
stos
shrb
inc
mov
mov
pop
jb
int
dec
test
cmp
sub
jns
pop
xrelease
push
cmpsl
cmp
jp
mov
inc
movsl
xchg
loop
sub
or
lock
and
inc
mov
pop
push
int
xor
sub
in
jmp
and
lret
sbb
inc
or
dec
jmp
pop
pop
adc
inc
dec
dec
jecxz
in
fcmovnbe
adc
mov
ds
scas
dec
pop
dec
sarb
or
cmp
test
xchg
leave
fstl
stos
push
arpl
sbb
ret
imul
sbb
push
lods
jecxz
push
rcl
arpl
lods
mov
les
insl
lcall
jbe
dec
sbb
hlt
mov
inc
movsl
add
nop
out
popa
sarb
xchg
mov
adc
clc
cmpsb
les
lods
jecxz
in
rcr
call
pop
cmp
insl
lds
sub
add
mov
xchg
scas
pop
leave
movsb
inc
jbe
jbe
jmp
push
add
jno
mov
sbb
lock
xchg
jb
or
and
popa
insl
mov
popf
inc
push
push
filds
adc
mov
popa
filds
push
call
fmuls
pop
idiv
subl
scas
adc
lock
xchg
cmp
jg
and
icebp
dec
lods
imul
cmc
lods
sub
xchg
inc
pushf
and
inc
push
or
add
xor
lds
mov
ret
sub
lea
dec
fistpl
pop
inc
jno
popa
xor
lods
test
mov
push
or
sbb
fdivs
and
fidivl
xor
sbb
jmp
xor
sub
jmp
insl
addr16
lea
jne
cmp
push
loopne
movlps
mov
loope
stos
jmp
push
or
push
test
ja
jo
js
adc
dec
add
sub
jle
xor
cmp
dec
or
icebp
add
push
xchg
hlt
lods
push
lahf
andl
mov
jmp
mov
mov
or
mov
repnz
idiv
jbe
mov
mov
lahf
cmp
loope
inc
pusha
std
mov
or
mov
jnp
cli
test
cltd
cmp
insb
xor
aaa
or
shr
pop
mov
cmovs
aad
mov
add
pop
jg
orl
mov
sub
out
fnstenv
mov
fisttps
sub
sbb
out
imul
cltd
rclb
sbb
stos
jae
in
das
cmp
add
imul
add
add
inc
inc
and
sbb
stos
gs
mov
in
imul
popf
or
push
shl
movsb
pop
fmull
pop
jns
outsb
in
mov
jg
jl
fwait
cmp
repnz
scas
fnstenv
fidivl
lret
xor
adc
js
jns
xchg
xor
in
shrl
add
sahf
rcrb
xchg
cmp
add
out
sbb
ljmp
subl
aad
cmpsb
mov
sbb
lods
inc
int
dec
mov
xor
inc
and
insl
ret
int3
out
hlt
xor
icebp
lock
xchg
sub
lea
push
stc
stos
mov
or
cmpb
and
out
push
mov
hlt
inc
mov
rcrb
out
pop
lahf
jle
push
and
inc
arpl
xchg
mov
mov
add
popa
aam
sbb
xchg
cmp
mov
roll
fldcw
ret
lods
add
cmp
enter
clc
aas
mov
mov
repnz
dec
jno
fldt
xchg
cld
or
adc
int
mov
orl
cmp
mov
out
mov
mov
ret
int3
cmp
inc
loope
inc
and
mov
fsubrs
cmp
cmp
push
jnp
mov
pop
out
mov
jns
jo
inc
in
icebp
jl
mov
sahf
xor
les
out
cli
cmp
jnp
enter
xor
mov
jge
lea
and
ljmp
cmp
ficomps
add
jg
lods
daa
mov
pop
loopne
mov
test
pusha
jmp
sbb
inc
xlat
scas
sub
mov
pop
jecxz
add
adc
lret
es
mov
in
adc
les
adc
xchg
mov
sbb
aad
xchg
add
fists
arpl
pop
push
fldl2t
inc
cmp
mov
out
and
jno
xchg
sbb
and
inc
sbb
cmp
test
filds
scas
cld
popa
gs
int3
mov
jb
xchg
mov
movsl
cmpsb
cmp
jb
pop
xor
jmp
add
push
int3
xchg
pushf
mov
nop
mov
lods
and
push
mov
mov
mov
pop
sbb
mov
fdivs
sbb
out
ds
cmp
xchg
imul
xchg
xchg
cld
pop
in
iret
lock
and
cmp
mov
inc
decb
jmp
dec
pop
cltd
stos
addl
jle
lret
pushw
or
popa
xor
mov
adc
add
push
mov
loop
xor
add
fwait
xchg
push
push
push
je
mov
mov
imul
ds
xor
daa
outsb
jecxz
test
pop
cmp
cwtl
movsb
out
addr16
jmp
dec
mov
pop
rorb
leave
mov
add
cwtl
xor
mov
cmp
adc
add
mov
rcrb
xor
xchg
ja
pushf
scas
insb
test
sub
cs
add
xchg
xor
fisubrs
add
in
push
mov
pop
ds
or
cmpsb
sub
loopne
jg
inc
arpl
mov
sub
cmp
xor
mov
push
mov
or
xlat
stos
out
push
jge
aas
scas
ja
out
pop
xor
lea
insl
imul
icebp
jle
and
xchg
adc
in
inc
mov
out
sub
or
jnp
ljmp
mov
fsub
xchg
sbb
int3
xor
inc
outsb
push
cmc
fs
lret
shr
test
div
cmp
dec
xor
inc
or
inc
xchg
mov
or
jae
pop
out
lods
or
out
adc
stos
mov
out
mov
pop
xor
xor
scas
into
gs
xchg
cmp
and
daa
ficoms
xor
aaa
mov
cmpsb
aam
lret
movsl
jnp
xlat
xor
out
lea
push
push
movsl
add
shrb
popa
cmp
icebp
mov
pushf
sub
std
je
sbb
loopne
ret
in
sub
call
pop
gs
adc
jb
addr16
insl
cmp
or
fcmove
mov
or
sub
fwait
sti
in
jg
addb
lahf
mov
popf
bound
popf
push
push
jo
ficoml
cmpl
cmp
fs
cmp
jne
dec
jmp
jne
or
hlt
movsb
mov
mov
shlb
cmp
pop
jge
nop
and
cmpsl
pop
cmp
jle
jl
dec
cwtl
das
jb
xchg
int
lods
fnstenv
xlat
mov
pop
notb
sub
jge
popa
jae
scas
movsb
xchg
xchg
enter
insl
std
imul
xor
dec
lods
es
push
arpl
in
xchg
mov
adc
and
jne
loop
mov
pop
add
pop
les
sub
int3
mov
xchg
gs
inc
shrl
bound
push
inc
out
sti
test
mov
xor
leave
je
jne
subl
inc
data16
jl
bound
inc
jg
xchg
jbe
test
fistps
mov
cmp
mov
aas
cmp
xchg
cmp
lds
dec
mov
aad
cmp
stos
repnz
or
pop
pop
lods
int
aad
pop
sub
mov
push
in
repnz
std
adc
or
xchg
nop
mov
call
andl
dec
insl
add
into
and
std
adc
adc
cmp
jnp
loop
fists
fadds
popf
cmpl
das
out
xchg
sub
jmp
inc
movsl
loope
xlat
pop
mov
rcll
fcomip
pop
cmp
adc
outsl
fwait
adc
push
xchg
mov
inc
lcall
dec
inc
arpl
xchg
ja
xchg
loop
ljmp
jne
push
dec
and
xchg
ds
test
push
xlat
cmp
sub
mov
add
lods
rorb
stos
xchg
cmpsb
in
mov
mov
adc
ss
xorl
push
hlt
scas
mov
out
push
sub
mov
add
mov
ljmp
push
inc
fbstp
out
sub
push
std
pop
mov
ja
lahf
pop
out
cwtl
push
out
jno
cmc
movsb
bound
int3
dec
sbb
jmp
mov
mov
jnp
xor
push
shll
push
mov
les
sub
repnz
mov
cwtl
xchg
movsb
inc
push
xor
mov
mov
pop
shrl
lret
sbb
lods
and
push
lea
jae
in
mov
mov
and
in
data16
int3
or
jg
and
mov
push
jmp
outsb
shll
js
and
add
sahf
outsb
jae
loope
lds
xor
lea
pushf
or
push
bound
mov
in
xlat
outsl
lahf
ds
in
orl
xchg
adc
shlb
fbstp
setle
imul
xor
movsl
push
mov
jno
sub
repnz
mov
add
sub
pop
es
pop
pop
sub
jecxz
mov
movsl
cmp
stc
pop
or
es
push
sub
dec
and
lret
jnp
sub
xchg
into
inc
jbe
xor
stc
push
jmp
std
pop
add
or
mov
adc
dec
mov
fisttps
nop
aaa
sbb
movsl
ret
aas
insb
out
popf
pusha
push
bound
repnz
cltd
stos
daa
ret
je
mov
lock
jne
cs
mov
comiss
add
mov
fistpll
cmc
lret
dec
or
fstl
call
fidivs
arpl
cltd
xor
es
lds
cmp
adc
test
push
cmp
sahf
jnp
pop
call
loop
mov
mov
sbbb
xlat
aad
xchg
int
and
movsb
mov
rclb
mov
cmpsb
imul
sbb
mov
inc
les
push
add
dec
std
js
inc
imul
lret
cltd
sub
and
movsl
dec
aas
xchg
xlat
mov
cwtl
jp
push
insl
hlt
gs
rcr
xchg
iret
pusha
bndstx
rol
in
push
inc
movsb
mov
push
xor
xor
push
xchg
jp
dec
jb
scas
cmp
push
je
jno
mov
mov
mov
jp
or
cmp
mov
out
mov
fsubrp
inc
loope
xchg
pop
xorl
scas
mov
lea
cmpsb
jnp
fsubrs
adc
frstpm(287
dec
arpl
jae
pop
lcall
sbb
inc
ss
pop
test
mov
sub
arpl
ret
pop
enter
jge
inc
ljmp
add
negl
stos
arpl
pop
inc
shl
and
pop
mov
mov
mov
dec
lods
add
daa
cmpsb
mov
in
sub
cli
cmpb
mov
jno
inc
inc
mov
adc
or
cmpl
dec
test
push
pop
outsl
mov
hlt
js
mov
sahf
insb
imull
jmp
out
cltd
push
ficoml
jg
subl
pop
outsb
es
xor
dec
cmpsl
inc
dec
xchg
rcrl
xchg
push
jecxz
in
sub
sub
mov
cmp
push
add
lcall
ds
jl
dec
scas
jl
lds
dec
rcl
test
dec
leave
mov
mov
xlat
push
lods
inc
mov
dec
jg
or
mov
cmp
adc
dec
sbb
jno
jp
test
inc
arpl
dec
test
outsb
test
in
and
jl
sub
leave
sub
mov
xchg
popa
xor
inc
lcall
jl
xor
pop
daa
dec
in
lea
loop
inc
xlat
pop
hlt
enter
rclb
fsubrl
jge
iret
xor
or
push
mov
and
xor
movsl
cmp
pop
lds
and
xchg
jge
shlb
shl
lds
in
jg
rcl
mov
rcll
jnp
sbb
jmp
out
sbb
sbb
movsb
dec
and
sub
pop
loope
push
push
stc
fidivs
dec
and
fadds
sbb
inc
inc
sti
pop
js
test
xchg
leave
mov
loope
push
dec
sbb
jne
mov
mov
jmp
and
stos
rorb
out
jns
jb
pusha
jns
add
cmpsl
push
mov
enter
xor
je
pop
jno
sub
les
das
mov
fisubl
add
mov
fwait
inc
mov
xchg
sbb
jmp
cmpsl
mov
jmp
int
testb
dec
push
andl
fs
cmpsl
jno
test
fstpt
cmp
sbb
fneni(8087
cmp
mov
dec
push
sub
push
loopne
pop
mov
dec
call
es
xchg
pop
cmp
push
mov
lret
imul
call
in
and
xor
popa
outsb
ljmp
dec
inc
shll
jecxz
and
sub
sahf
and
movsb
ss
fwait
mov
scas
pop
adc
call
ja
adc
mov
mov
add
in
or
fs
xor
stos
negb
cmpsb
inc
and
mov
fbstp
aad
out
or
xchg
push
sti
enter
adc
or
or
mov
fnsave
push
arpl
add
das
or
jns
in
pop
mov
cmp
adc
cs
add
inc
push
mov
push
xchg
xchg
leave
xchg
jmp
dec
fbstp
or
adc
popa
aam
xchg
pop
fwait
mov
mov
iret
mov
push
or
xor
out
inc
add
stc
js
lods
out
or
xchg
data16
iret
leave
dec
loope
inc
push
mov
cmp
jb
mov
xchg
sub
out
sbb
cmp
jmp
repz
pop
jle,pt
mull
xchg
dec
mov
xor
clc
inc
pop
jecxz
ljmp
stos
adc
push
mov
jb
jle
jae
pop
clc
mov
add
pop
xor
nopl
fwait
xor
pop
cmp
jle
sbb
mov
clc
mov
incl
lret
fdivrs
mov
shll
jmp
xor
mov
jnp
inc
lahf
mov
cltd
xor
xor
loopne
push
daa
xor
es
adc
xchg
imul
push
xor
in
xchg
jno
lcall
cmc
mov
and
gs
sbb
mov
clc
enter
fistpll
test
mov
xor
outsb
aad
jl
xchg
loopne
or
fld
pop
or
test
gs
mov
clc
es
mov
jb
inc
sbb
cmp
push
xchg
inc
pusha
popa
push
mov
loopne
xor
icebp
or
and
sub
push
cli
sbb
fsubrl
or
push
or
outsl
inc
lret
loopne
iret
mov
mov
leave
sbb
jnp
out
shlb
xor
lds
and
jne
mov
xlat
cltd
xor
cmpsl
mov
fnstenv
lret
pop
dec
rorb
jcxz
std
jmp
sub
jnp
mov
cltd
jo
xchg
inc
popa
xchg
pushw
mov
push
icebp
decl
loopne
sbb
mov
cmp
loop
gs
sbb
repz
xchg
in
push
iret
xchg
mov
xor
cmp
xlat
inc
mov
and
popa
push
ret
lahf
xchg
and
lret
xchg
xor
leave
pop
in
add
xor
loope
es
mov
mov
popa
mov
stc
clc
or
test
jno
pop
sub
xchg
and
xchg
pop
lock
push
cmpsl
mov
push
cld
add
test
cs
fcomps
dec
repz
sbb
jl
xchg
ficomps
fs
loop
lea
icebp
cmp
mov
xor
lret
in
push
adc
ljmp
mov
fdivrl
mov
sahf
mov
add
mov
jb
lods
fstl
scas
inc
cli
fnsave
cwtl
fdiv
enter
enter
shl
repnz
dec
daa
ss
lahf
mov
xchg
fimull
dec
in
inc
or
jecxz
adc
cmp
mov
xchg
jo
mov
jle
sbb
dec
or
dec
aaa
dec
dec
cli
clc
dec
scas
fadd
popf
mov
aas
sub
and
push
loopne
repz
mov
imul
stos
nop
loope
cmp
xor
pop
pop
dec
ret
outsb
arpl
stos
xchg
mov
out
cmpsb
les
daa
adc
adc
add
cltd
mov
mov
and
mov
or
pop
int
or
pop
jmp
loopne
fcomps
ja
fsubrs
into
xor
imul
xchg
inc
inc
shrb
mov
dec
mov
aas
rcrb
mov
jae
push
movsl
mov
fldt
mov
mov
inc
insl
or
xchg
sti
push
movsl
add
pop
sbb
and
es
pusha
xlat
out
inc
sbbl
pop
aaa
cmp
push
lds
loopne
repnz
sub
rclb
jle
mov
or
or
ret
sub
cmp
fnstcw
xorb
loop
and
sbb
clc
ret
mov
lds
xor
aas
nop
sbb
pop
jge
aad
jp
pop
mov
gs
xchg
sbb
lahf
cmpsb
rcrb
pop
mov
add
ret
lods
iret
repz
stos
push
pusha
ret
sub
cmp
out
lods
push
jg
mov
jg
hlt
pop
inc
or
mov
jb
imull
addr16
dec
lock
push
je
dec
std
mov
mov
pop
aaa
jbe
sbb
mov
adc
dec
pop
mov
mov
cmp
xor
and
sbb
inc
mov
add
hlt
push
je
mov
push
push
fcoms
movsl
daa
inc
push
cs
sbb
pusha
cwtl
test
inc
subl
pop
js
and
ja
out
leave
cwtl
mov
loop
mov
inc
je
jbe
jbe
xchg
and
pop
push
mov
mov
push
subl
jb
sub
cmp
jmp
out
out
xchg
ret
xchg
cmp
cmp
dec
jecxz
sahf
xor
test
mov
into
jmp
jge
mov
push
pop
inc
sbb
sbbb
js
lock
inc
fnstsw
pop
fs
sub
push
push
in
mov
hlt
outsl
icebp
cmp
push
mov
orb
jns
call
xchg
sub
mov
lea
mov
ljmp
cmp
ja
loope
popa
adc
aam
das
enter
dec
sub
and
mov
addr16
push
fidivs
sbb
popf
shlb
push
fdivr
jo
cmp
jns
lock
mov
jbe
jp
adc
ss
cld
fistpll
test
aad
dec
das
scas
in
loopne
xchg
mov
mov
aad
shll
leave
mov
mov
outsl
sub
shr
jp
xchg
call
stos
adc
lock
lods
stos
xchg
sarb
inc
fsubp
sti
inc
cmp
fisubrs
lods
cltd
sub
dec
test
les
adc
mov
cltd
ja
dec
lcall
scas
sti
or
subb
xchg
sub
lahf
out
sbb
xor
fistpl
xor
add
aas
push
stc
xchg
xchg
les
mov
push
mov
out
movsl
adc
sub
cwtl
test
roll
xorl
mov
out
lret
pop
dec
ds
into
pop
and
adc
push
mov
test
ds
mov
sbb
cmp
lret
in
sub
dec
push
or
sbb
adc
cltd
xor
mov
mov
shll
dec
stos
add
jns
xor
mov
push
jne
popf
iret
je
xchg
sub
aam
ja
ret
pop
cmp
inc
sub
jg,pn
inc
push
inc
inc
and
lret
ds
jne
es
add
xchg
fildl
jecxz
stc
jno
mov
pop
mov
jnp
cld
pusha
test
lcall
ljmp
call
dec
fldcw
pop
jno
arpl
fcoml
aam
jo
enter
cmp
xlat
orl
rcrb
add
ss
jle
adc
adc
lret
and
inc
push
int
sahf
xchg
adc
cmp
fcomps
dec
mov
mov
add
pop
andl
out
mov
jae
adc
cmp
movsb
cmp
sbb
mov
xchg
in
ret
and
hlt
dec
sbb
scas
fwait
ss
cltd
add
add
hlt
or
nop
icebp
sbb
pop
dec
gs
shr
clc
add
sub
fbstp
daa
mov
dec
xor
and
jnp
stc
imul
notb
in
cmp
movsl
mov
pop
push
adc
mov
aaa
mov
fildl
pusha
bnd
lcall
call
push
push
or
dec
pop
add
mov
add
xchg
inc
or
jo
cwtl
repnz
inc
inc
negl
shl
sbb
stos
xchg
mov
mov
outsb
lds
outsb
jmp
cmpsl
xchg
aad
ret
fs
inc
sub
xor
cmp
inc
sbb
lret
xor
lret
or
sbb
push
aaa
push
mov
adc
mov
adc
xchg
jge
repz
loope
lods
mov
and
in
fildl
mov
xlat
sbb
nop
out
dec
outsb
fwait
xor
ret
hlt
cmp
out
aam
mov
mov
ret
andps
add
pushf
cli
dec
repz
dec
in
cmp
cmp
lahf
mov
dec
out
pop
lahf
mov
jbe
pop
je
dec
pop
test
pop
xor
lret
jmp
aaa
dec
bound
int3
orl
push
pop
filds
ss
gs
inc
dec
lret
mov
sbb
dec
jne
mov
push
cwtl
in
inc
inc
cmp
leave
scas
jmp
push
pusha
loop
stos
sub
hlt
mov
and
lahf
ss
pop
sub
fs
arpl
jae
ret
movsb
dec
ljmp
popf
sbb
add
mov
xchg
fdivl
ret
xor
xchg
stos
sbbl
cmp
push
popa
sbb
cmc
imul
mov
ss
push
jne
cs
je
repnz
addr16
xchg
in
mov
adc
jno
int3
mov
aas
pop
mov
rcrl
push
pop
shl
mov
cmp
xchg
sub
add
rorb
ja
jecxz
loope
inc
decl
dec
mov
lret
bound
mov
and
push
jmp
idivb
mov
test
insl
push
in
ret
push
push
imul
xchg
mov
ret
ret
bound
es
adc
test
xchg
adc
push
push
aas
pop
jl
movb
jl
mov
mov
and
sub
cld
dec
cmpb
pop
sub
xchg
push
or
out
xchg
test
mov
fsubrp
xor
ret
ss
push
push
call
mov
outsl
test
out
movsb
fdivl
add
xor
mov
jecxz
add
movl
sbb
aas
testl
sub
sti
xchg
sbb
sbb
lods
cmpsb
sbb
sbb
loop
in
mov
lods
push
inc
xchg
test
int3
xchg
sahf
xor
cmp
add
pop
stos
addl
fdivrs
lods
and
jnp
sahf
lods
add
in
das
daa
cmp
pop
out
mov
fs
jmp
mov
testl
nop
or
pop
sub
ret
sti
sbbb
mov
push
pusha
in
into
dec
dec
xlat
and
xchg
inc
pop
cmp
mov
xchg
adc
leave
or
jle
jle
pop
mov
sub
or
int
inc
cli
adc
movsb
push
das
ret
pop
dec
jns
out
cmp
add
stc
xchg
cld
in
sub
iret
cmp
push
cmc
inc
push
cs
push
fnstsw
sbb
cmpsl
cs
xchg
adc
sbb
xor
jo
mov
adc
xor
pop
lret
jecxz
stos
and
fisttpll
and
cmp
inc
inc
dec
mulb
ss
or
subl
mov
sub
testl
xchg
add
mov
in
cli
les
cld
popf
add
inc
lcall
hlt
int3
leave
xorl
adc
lcall
mov
pop
cmp
nop
xor
push
jb
xor
xchg
fidivs
dec
loopne
pop
push
ljmp
push
mov
add
insb
push
adc
add
insl
xchg
adc
cmc
xor
mov
mov
fsubl
addr16
push
imul
cltd
test
mov
or
arpl
popa
test
push
cmp
mov
stos
call
or
je
push
jle
aaa
bound
lahf
pop
xchg
add
subl
stc
or
les
stos
test
push
mov
add
repz
inc
push
pop
inc
fcomps
neg
insb
dec
or
push
in
mov
sbb
data16
cmp
roll
out
loope
inc
into
push
loopne
in
mov
negb
enter
aaa
mov
fbld
mov
mov
push
pop
rolb
imul
in
cmp
mov
stos
jno
dec
and
push
rol
xor
mov
rorl
dec
push
pop
lds
cld
nop
xchg
dec
dec
movl
xrelease
inc
lds
pop
call
ret
pop
push
jg
icebp
ja
loope
andl
and
in
sub
cmc
mov
sti
pop
xor
pop
lahf
leave
jbe
ljmp
or
jp
pushf
lods
inc
push
xor
xor
dec
cmc
inc
fnstenv
pushf
push
scas
test
mov
cs
xlat
adc
xchg
lret
or
imul
jae
adc
or
test
sub
push
pop
jbe
jb
mov
loope
movsb
adc
or
adc
shrl
jecxz
test
outsb
lahf
sbb
call
cltd
leave
mov
in
sbbl
je
lret
adc
shlb
mov
jg
jmp
fsubs
xchg
mov
pusha
aas
jne
int3
push
xlat
adc
inc
xchg
or
call
daa
add
pop
ret
data16
push
mov
out
push
xchg
add
xchg
dec
push
lret
gs
mov
push
mov
mov
push
in
in
mov
sahf
mov
xor
mov
push
sub
out
jne
ret
mov
pop
push
jl
arpl
xchg
pusha
sahf
add
jle
push
jle
int3
test
stos
mov
loop
call
pop
bound
sbb
adc
mov
gs
cmp
aam
adc
clc
cmp
stc
jne
out
fisubl
and
fs
popa
add
insb
fdivrs
dec
sarl
dec
push
xor
xchg
add
clc
or
imul
pop
pop
jg
mov
adc
dec
jnp
gs
loop
dec
dec
pop
jae
mov
inc
pop
into
pop
arpl
push
jmp
inc
loopne
rorb
sub
mov
addr16
dec
shrl
cwtl
and
shlb
es
push
dec
xor
pushf
test
add
jmp
cmp
popa
push
imul
or
repnz
popa
clc
push
sbb
daa
sar
outsl
xor
aas
pop
jp
push
inc
gs
icebp
rorb
imul
addl
mov
fdiv
rcl
inc
mov
pop
cmp
mov
negl
pusha
clc
sahf
inc
jne
fisubs
dec
pusha
and
mov
pop
pop
das
call
mov
imul
insl
xchg
sbb
xchg
fisttpl
lret
xchg
fs
push
cmp
ljmp
jb
les
pop
mov
dec
cld
push
cmc
cmp
inc
sub
flds
aam
insb
mov
jle
lret
into
mov
xor
cmc
cvtps2pd
lahf
je
jnp
or
flds
cltd
insl
das
stos
adc
loope
enter
ret
push
jne
add
sbb
dec
test
xlat
mov
ret
call
or
mov
pop
adc
jecxz,pt
jno
push
jecxz
mov
xchg
mov
jbe
pop
xor
mov
into
jnp
js
fists
lock
dec
or
mov
loop
addr16
testl
inc
adc
and
cli
lds
mov
int3
xchg
mov
cli
out
out
cmpsb
dec
int3
cli
xchg
sti
or
jle
loop
in
xchg
or
push
fwait
xor
mov
jmp
push
xchg
loope
mov
mov
dec
pop
in
rcrl
dec
pop
add
mov
imul
nop
dec
sti
jmp
and
sti
jge
pop
mov
inc
fdivl
jb
cmp
mov
insb
pop
nop
mov
inc
adc
cmp
fcoms
testb
push
sbb
jl
xorl
test
ss
stc
jae
pop
int3
pop
and
mov
cwtl
cld
lret
pop
je
lcall
dec
jo
insb
pop
ret
jle
add
ret
sbb
cwtl
mov
sti
xchg
and
dec
movsl
call
stos
clc
mov
sub
or
xchg
pop
and
mov
cld
popa
outsb
and
iret
repz
mov
jmp
lret
push
inc
xor
lds
xor
fs
fisttps
popa
into
jae
push
inc
cld
aam
xchg
scas
mov
pop
mov
into
mov
push
in
pop
pop
dec
and
add
fnstenv
adc
add
inc
jecxz
and
rol
pop
cld
mov
addr16
testl
sub
int3
mov
jle
xor
pop
loopne
add
xor
mov
insb
sub
mov
addr16
std
repnz
cmp
add
icebp
adc
ss
insb
sti
dec
push
inc
loopne
imul
psubusb
int3
and
xchg
jns
or
imul
inc
cmp
call
push
mov
xor
mov
ret
lret
cmp
mov
sub
adc
inc
xchg
test
mov
pop
jge
and
insl
jnp
and
add
int
sar
jns
and
and
imul
adc
clc
and
and
aas
movsb
ss
je
cmp
jg
cmpb
push
sub
xor
aas
adc
and
add
push
or
or
arpl
aam
andl
imul
dec
mov
testb
movsl
inc
push
jb
fsubs
inc
in
dec
jne
cmc
sbb
stos
ficomps
mov
xor
sbb
aas
pop
dec
inc
inc
aad
jne
mov
mov
mov
or
sti
out
fwait
cwtl
add
mov
and
rclb
lods
mov
jb
sub
shll
sub
enter
fisttpl
test
xchg
lods
inc
lea
adc
mov
xor
sbb
addr16
lods
adc
aam
cmp
lods
loop
jnp
dec
nop
das
xlat
jge
lods
out
andb
push
popa
push
ljmp
movsl
clc
xchg
lcall
subb
adc
push
jge
jg
movsb
inc
int
push
mov
fsubrl
adc
dec
adc
test
ja
push
shlb
outsl
jnp
icebp
mov
push
into
mov
and
loop
push
xlat
add
pop
mov
gs
or
dec
test
mov
iret
dec
fildl
imul
and
mov
push
jle
mov
mov
ds
lods
call
mov
aaa
mov
xchg
push
mov
mov
notl
shr
and
or
xchg
sbb
insl
cmp
dec
xchg
or
fisubrl
pop
ljmp
inc
test
js
pop
hlt
push
cs
add
cmp
pop
stc
add
sub
and
or
push
xchg
mov
jo
pop
sub
dec
shl
add
pop
mov
sbbl
fmuls
out
jb,pt
sub
jb
fsubrs
pop
xor
push
push
add
or
pop
add
aad
sbb
pop
outsb
cmp
and
cwtl
pop
jmp
mov
ljmp
mov
dec
fbld
push
mov
ret
inc
data16
jae
mov
add
xlat
mulb
mov
cmp
sbb
cwtl
jbe
mov
lds
mov
leave
xchg
and
sarb
lods
mov
mov
aaa
outsb
fisttpll
mov
inc
mov
pop
es
add
add
aaa
jne
mov
cmp
clc
xchg
shll
mov
xchg
adc
loopne
adc
push
in
addr16
dec
sub
daa
dec
jno
scas
mov
ret
outsl
push
out
mov
lods
xchg
fsubr
xor
lea
out
in
mov
adc
leave
enter
and
mov
fsts
popa
xchg
pop
xlat
ffree
outsb
jl
lret
ds
sbb
lcall
adc
mov
test
shrl
pushf
pop
push
lret
xchg
cmc
or
add
push
cmc
mov
adc
xchg
push
push
dec
push
sub
inc
and
es
lret
imul
push
rolb
daa
push
mov
jbe
sub
xor
stc
adc
mov
sub
es
arpl
xor
mov
sti
insb
rol
mov
push
rcrl
out
outsl
dec
movsl
pop
lahf
pop
jle
sub
cmc
and
add
sbb
sbb
pop
fimull
jl
xor
int
push
in
push
out
push
push
mov
sbb
fsubrl
call
push
jno
enter
and
mov
sahf
mov
js
pop
and
aas
outsb
add
leave
mov
cmpsl
jmp
adc
xchg
je
cmpsl
vpavgw
inc
aad
into
repnz
loop
mov
add
scas
rcll
add
mov
lcall
push
sbb
scas
push
out
cmp
cmc
add
out
repz
mov
or
mov
mov
dec
es
dec
xor
cwtl
inc
loop
fistpll
xchg
hlt
lret
xchg
cli
mov
adc
ret
adc
pop
inc
imul
mov
dec
popa
pop
rclb
lods
mov
cmp
dec
jno
out
mov
push
pop
lock
sbb
adc
cmp
mov
les
xor
jge
xchg
mov
gs
das
xchg
fidivrs
pop
stos
popa
adc
jo
cs
pop
add
mov
mov
les
push
mov
aas
jno
repnz
repz
push
ljmp
insl
add
xlat
pop
lock
jns
lea
mov
nop
insl
add
scas
lcall
bound
push
lret
xchg
cs
aas
sbb
lods
inc
or
cmp
cmpsl
ds
mov
dec
out
cmpsb
mov
pop
jle
fsubrs
repz
sahf
add
pop
out
test
aaa
gs
movsl
dec
arpl
ds
pop
lcall
outsl
push
lods
nop
daa
and
fisubrl
cmc
std
call
cmpsb
enter
pushf
fst
scas
mov
popa
lods
pop
incl
icebp
repnz
inc
pop
dec
fs
xlat
daa
cmpsb
mov
dec
scas
inc
adc
test
pop
xchg
sub
int3
sub
subl
loope
test
data16
mov
jge
stc
int3
scas
rorb
pop
push
test
xor
clc
xorl
inc
into
add
ljmp
insl
iret
xchg
sbb
mov
mov
sbb
adc
les
gs
lods
lods
lret
pop
inc
jg
std
jno
dec
jecxz
dec
jmp
mov
es
aad
dec
repz
std
aam
dec
mov
mov
imul
rsqrtps
lock
inc
and
pop
ss
push
outsb
test
mov
cmc
int
xor
lods
push
insb
jae
inc
icebp
rclb
jo
mov
inc
pop
divl
mov
movsl
mov
mov
cld
jnp
and
push
test
jmp
add
jge
inc
add
sbb
not
popa
gs
into
movsl
jmp
mov
sarl
sbb
xor
pop
movsl
fimuls
add
xor
test
pop
cli
mov
jl
mov
dec
add
and
fsubrl
jg
out
and
jb
pop
sub
sahf
lods
add
lds
loope
xchg
push
sti
lret
shrb
or
or
scas
sbb
jo
in
fidivrl
xchg
jg
pop
add
xor
pcmpgtw
aam
scas
and
adc
push
inc
ss
and
inc
jno
andb
or
ja
inc
inc
adc
jp
std
inc
in
xor
push
in
xor
sbbl
adc
lods
cmpsl
stos
add
fidivl
or
pop
sbb
adc
popf
nop
movsb
mov
mov
pop
cmpsb
jmp
cmpsb
cmp
negl
daa
gs
mov
out
fbstp
xor
xchg
movsl
fs
or
mov
mov
xchg
ja
push
push
fstpl
xchg
add
sub
or
sub
hlt
cmpsl
mov
mov
sbb
jbe
fsubrl
or
rol
cld
add
sub
shll
mov
or
daa
mov
sarl
pop
movsb
test
xor
pop
inc
push
ljmp
das
xor
sub
dec
xchg
int
ret
insl
mov
hlt
mov
nop
insl
xchg
jbe
int3
or
cmpsl
aam
dec
fnsave
xchg
jns
xchg
mov
xor
addr16
loopne
lds
imul
lea
jg
dec
push
scas
mov
mov
adc
scas
sbb
daa
ficoms
mov
les
movsl
aad
dec
sbb
sub
ret
dec
out
sti
jns
in
xchg
sahf
mov
dec
mov
fdivs
fidivl
jge
fwait
in
cmpsb
xorl
push
xor
cmp
aas
test
dec
xlat
sub
popl
sbb
in
sti
adc
pop
lret
out
in
repnz
imul
mov
push
aad
daa
dec
or
pop
pop
sub
pusha
fcom
cmpsl
xor
dec
jno
shrl
popf
loop
hlt
dec
fnstenv
rorb
cs
ret
sbb
adc
mov
add
cmp
or
mov
and
push
aaa
pop
cmp
adcb
fimuls
and
jb
adcl
das
dec
sti
pop
mov
leave
sub
mov
shlb
mov
orb
ja
fnstsw
rorl
into
fcmove
pop
and
lods
pusha
aas
pusha
test
std
adc
cltd
push
pop
mov
add
sub
mov
jp
pop
fucomp
push
shrb
or
xor
test
add
call
cmpb
xor
pop
ds
mov
jmp
push
push
fstpt
push
xor
cmp
loop
or
sbb
pushf
ds
push
fbld
pop
dec
pop
dec
jne
addr16
sbb
enter
push
bound
lahf
mov
mov
jl
push
in
cmp
cltd
test
fdivs
or
jnp
and
mov
xchg
lock
jo
add
imul
mov
sbb
fnstenv
mov
fyl2xp1
dec
mov
xchg
hlt
cmp
mov
out
add
pusha
dec
inc
test
mov
and
int3
or
xlat
loop
adc
push
xor
ja
flds
lret
repz
loop
lcall
mov
fadds
inc
pusha
sub
movsl
xlat
cmp
es
sbb
mov
jne
mov
sub
push
mov
pushf
movsl
jmp
shll
inc
xchg
enter
adcb
jle
inc
and
push
idivl
sbb
shl
jno
inc
sub
cmp
xor
push
jbe
push
cmpsb
mov
stos
push
jl
sbb
out
add
and
and
lahf
mov
nop
repnz
jbe
dec
fwait
mov
xor
dec
inc
popa
hlt
js
sub
inc
sub
cld
shlb
sbb
xchg
jle
jae
dec
lahf
sbb
and
cmp
mov
push
lret
aam
cs
ret
movsb
inc
sbb
out
cli
sarl
imul
add
mov
or
jbe
mov
fucomi
rcll
xor
bound
pop
iret
xor
xor
jmp
push
pop
sub
push
ljmp
int
pop
add
fnstenv
sbb
inc
adc
clc
jmp
mov
xor
push
jge
loope
dec
mov
jge
fst
jg
lods
repz
lea
pop
add
push
popf
inc
mov
xchg
sub
fs
push
dec
dec
pop
outsl
jecxz
pop
aaa
xchg
cmp
sbb
test
pop
cli
rorb
js
jmp
jbe
push
test
pushf
aaa
cld
pop
pusha
lods
mov
inc
fistl
decl
loopne
jbe
in
enter
sbb
aam
push
js
ss
iret
andl
cmpsl
jecxz
repz
insb
add
pop
cmp
icebp
push
jl
cmc
stc
movsb
mov
addr16
enter
clc
popa
stos
sbb
xor
push
shlb
adc
in
arpl
cltd
stos
aad
mov
sub
xlat
mov
std
iret
outsb
test
mov
xlat
add
sub
js
dec
aas
xchg
sbb
scas
arpl
pop
into
gs
fsubrs
daa
dec
or
ret
mull
xchg
lods
loope
xchg
adc
ficompl
sbb
xor
in
adc
hlt
sbb
sub
add
sub
adc
cs
or
je
outsb
sub
lahf
outsl
adcb
sbbl
xchg
jecxz
lds
and
add
call
xchg
or
fsubs
ljmp
int3
ss
repz
xchg
xor
push
adc
sbb
pop
pushf
pop
nop
daa
inc
add
xor
inc
jne
adc
mov
pop
pushf
xor
test
jle
aaa
fstpt
cmp
clc
add
cmp
push
sbb
popf
pop
arpl
jg
je
jns
sub
es
adc
ljmp
mov
lea
mov
push
xchg
hlt
push
lods
add
test
imul
xor
sub
addr16
lock
mov
mov
ret
add
nop
daa
insb
and
dec
addr16
sub
aam
or
jg
in
scas
sahf
xor
int
incb
leave
push
popa
mov
and
cmp
movsl
inc
loopne
sbbb
sahf
repz
cwtl
pop
sub
sbb
lahf
and
jne
xor
fisttps
mov
inc
inc
add
cmp
scas
arpl
push
ret
or
inc
mov
jmp
push
mov
jo
fwait
icebp
push
lods
and
lods
test
mov
scas
jecxz
fsubr
xor
lods
inc
ja
inc
xchg
sti
sbb
or
inc
outsl
sub
shlb
xor
lret
jo
nop
daa
daa
ljmp
fsub
sbb
adc
popf
js
iret
and
in
cmp
xchg
fcmovbe
cwtl
cs
push
aas
xor
std
inc
dec
stos
out
in
pop
dec
into
push
cmpsb
jg
jo
lret
inc
loope
dec
mull
xor
mov
and
aam
fwait
ljmp
andb
push
ret
sbb
icebp
xor
movsl
lods
fwait
pop
aad
or
sti
add
gs
fmuls
stos
fbld
test
jae
mov
ds
or
mov
and
xchg
je
fs
pop
cld
outsl
shll
xchg
mov
scas
mov
dec
mov
or
adc
in
pop
xchg
xchg
cld
in
and
inc
adc
sti
ljmp
jmp
or
ljmp
fstpl
jl
push
je
xchg
push
ds
call
xor
jle
in
mov
pop
pop
dec
lds
fsts
mov
and
add
jp
ds
mov
push
adc
test
in
mov
inc
pop
fisttpl
pop
xor
inc
imul
loop
xor
inc
sbb
jbe
into
fisubrl
ja
sub
sti
sbb
mov
fdivp
push
ljmp
ljmp
call
outsl
mov
int3
pop
outsb
out
xlat
outsb
sub
insl
push
xrelease
mov
sub
sub
xor
mov
imul
push
popl
nopl
popa
insl
inc
mov
sbb
nop
xchg
adc
or
insb
jle
cmp
pop
popa
stc
jne
mov
loope
push
ud1
fwait
jle
dec
cmp
fnsetpm(287
sub
adc
into
repz
int3
inc
lret
dec
dec
dec
sbb
pop
xor
sahf
xor
lods
ret
mov
jae
lahf
les
sahf
dec
dec
out
in
jns
inc
fimuls
out
sbb
mov
ja
fwait
test
rorl
lcall
jo
out
stos
ret
xor
ljmp
lret
inc
aas
lods
mov
adc
inc
inc
lcall
lods
mov
sub
arpl
outsl
insl
lock
sbb
test
jnp
jbe
jo
add
sbb
pushf
sarl
test
repnz
jo
mov
dec
testl
outsl
add
sbb
insb
outsb
repz
test
mov
inc
lods
adc
insl
es
xchg
in
cmp
aam
push
daa
mov
and
leave
xlat
sbbl
ljmp
pusha
fisubl
ljmp
call
cmp
cmp
mov
int3
adc
or
sti
cmpb
sbb
dec
loopne
lds
dec
push
aas
mov
movl
in
test
mov
pop
cwtl
ror
xchg
lock
repz
aas
bound
jb
xor
dec
add
das
mov
lret
mov
mov
mov
pop
into
push
push
lds
cld
mov
ss
push
mov
stc
cld
xor
cmp
sbb
pop
mov
std
fs
addr16
roll
and
mov
pop
jbe
fdiv
test
vsqrtpd
push
add
jp
sbbl
or
mov
sub
fadds
sbb
jecxz
inc
in
repz
rol
pushf
sub
ljmp
js
idivb
dec
xchg
mov
les
sbb
push
fucom
cmp
push
pop
mov
dec
fiaddl
mov
jo
sub
mov
icebp
verw
push
sub
xor
popa
xchg
jnp
cli
sahf
and
xchg
add
movsb
mov
jbe
push
jns
or
fadds
mov
push
push
inc
inc
sbb
ds
insl
add
lods
cmp
xchg
dec
cmp
test
mov
mov
lds
je
sbb
ds
sbb
inc
xor
insl
sub
pop
sub
push
std
enter
xor
mov
imul
das
filds
lahf
loop
lahf
pop
push
mov
movsb
adc
and
jp
sub
mov
ljmp
mov
mov
lds
push
subb
rcl
pop
popf
int3
sub
js
in
and
mov
ss
addr16
xchg
mov
ror
mov
xchg
or
cs
hlt
in
jnp
call
movsb
dec
cmp
pop
rolb
add
mov
test
mov
pushf
cmp
xchg
arpl
int
arpl
into
pop
mov
and
cmpsb
lods
inc
in
inc
inc
addr16
push
out
nop
aam
cld
sbb
cmc
pop
mov
fs
mov
lret
jb
lds
xchg
add
addr16
fimuls
pushf
cmc
mov
push
xchg
adc
mov
sti
std
aas
lock
dec
jmp
and
sbb
inc
sbb
cld
xor
xchg
mov
xchg
dec
loope
repnz
jmp
mov
and
mov
je
dec
adc
pop
addr16
jecxz
lock
int3
fs
pop
pop
pusha
or
pop
mov
pusha
sbbb
mov
jbe
repz
rcrl
es
cmp
in
testl
xor
ljmp
mov
xlat
outsb
push
jecxz
into
cmpsb
cmp
xlat
jecxz
sbb
fsubrs
insb
je
shrd
sbb
adc
sub
aam
loopne
fsubl
pushf
std
add
jle
sub
cmp
pusha
ljmp
rcrb
mov
mov
icebp
hlt
lds
add
idivb
mov
imul
sbb
xchg
dec
ljmp
enter
je
ss
das
dec
push
pop
std
adc
iret
shll
jle
or
insb
jp
loope
mov
leave
pop
clc
pop
mov
js
lcall
jo
das
jbe
cmpl
push
xor
in
iret
add
je
dec
loope
xchg
inc
mov
fbstp
add
jecxz
das
pop
sbb
xchg
insb
sub
imul
cmp
xchg
bnd
loop
ret
gs
jmp
add
mov
sarl
dec
fildll
mov
xchg
clc
sahf
and
sub
xchg
pop
stos
jne
lret
mov
pusha
jecxz
mov
stc
mov
in
xchg
aad
into
fiaddl
xchg
xchg
sbb
pop
cmp
lods
cmp
push
mov
sti
push
sub
ds
sbb
std
test
mov
enter
loop
fdivr
icebp
jne
cld
cmpsb
adc
lret
roll
cmp
or
dec
xlat
test
les
push
jae
jmp
not
pop
dec
sbb
lds
cmp
mov
or
add
outsl
ljmp
out
mov
mov
mov
push
pop
jns
je
push
cmpsb
clc
add
es
xor
mov
sahf
sar
pop
push
cmpb
dec
cwtl
jmp
mov
scas
loope
or
js
cmp
loopne
jl
testl
or
insl
or
insl
les
mov
push
addr16
push
outsl
idivb
sub
inc
sub
push
add
mov
pop
or
aas
mov
jo
jne
les
scas
cmp
iret
js
into
sbb
cmp
sti
mov
movsb
lret
fs
nop
push
xchg
cli
fnstcw
daa
inc
cmp
loope
dec
lcall
pop
mov
dec
aad
sbb
jge
movsl
xchg
cmp
jg
fsubrs
jae
sti
outsb
jl
outsb
pushf
pop
adc
push
fnsave
mov
pop
rcrb
mov
test
out
into
cmc
mov
xchg
call
aaa
push
arpl
outsl
push
xor
jno
pop
dec
adc
jnp
mov
xor
ljmp
and
shrl
jl
pop
push
iret
cwtl
clc
shlb
mov
movsl
fmuls
sub
sub
iret
es
sarl
jecxz
insl
bound
out
mov
push
jmp
cmp
cmpsb
cmp
xchg
mov
push
pop
xchg
dec
je
outsl
fsts
lds
repnz
sub
pop
jge
into
push
or
mov
incl
or
lods
aad
xchg
inc
in
test
mov
push
neg
fnstenv
lods
cmp
mov
jle
scas
adc
inc
add
and
sahf
cmp
scas
aaa
lods
inc
imull
and
sub
jo
arpl
in
xchg
mov
pop
xchg
cmp
push
jl
insb
xchg
stc
sahf
lods
push
hlt
sbb
sub
add
add
or
cmpsl
imul
sbb
mov
movsb
xchg
cltd
mov
stos
bound
xor
xor
or
iret
inc
push
add
repnz
push
repnz
mov
push
mov
shrl
cmp
push
cmp
icebp
mov
or
jnp
inc
in
dec
adc
mov
imul
mov
sbb
cmpsb
pushl
mov
insb
push
cmpsb
lcall
xor
cwtl
pop
push
mov
sbb
mov
sahf
cmp
iret
push
push
xor
push
mov
loopne
xor
ds
pusha
out
fisubl
add
inc
push
test
ficomps
xor
and
mov
mov
out
sub
sub
testl
add
jl
pop
cltd
inc
mov
dec
lods
pop
jnp
sub
or
mov
sbb
cmp
popa
jb
xchg
inc
dec
jecxz
aas
nop
jnp
sbb
add
mov
test
push
scas
xchg
fldt
data16
cwtl
mov
outsl
idivb
nop
daa
enter
insl
add
jno
fwait
push
in
clc
cld
cltd
es
sbb
mov
add
out
fdiv
mov
or
mov
xor
outsb
es
jns
dec
pop
sub
fwait
imul
xlat
insl
jns
or
call
and
mov
xchg
dec
sbb
sub
sbb
jle
stos
push
andb
or
xchg
ljmp
imul
sbb
shlb
cmp
lods
ljmp
xor
mov
fidivrs
pop
mov
fcoml
add
xor
int3
cltd
bound
push
jge
sbb
jae
lds
push
mov
jns
and
dec
push
sub
rcll
cli
movsb
jmp
sbb
inc
mov
ret
lret
cwtl
or
adc
lret
mov
adc
sbbl
icebp
fsubrp
sub
out
mov
ss
cmpxchg
fnstenv
mov
es
jge
imul
aad
ja
dec
sbb
sbbb
ljmp
xlat
lods
rcll
push
outsb
and
ds
xlat
pop
jecxz
mov
dec
aam
push
push
andl
push
sub
add
loope
xorb
xlat
lock
std
push
ret
clc
xchg
pushf
xchg
mov
es
mov
movsl
enter
fsubrp
mov
pop
imul
fs
int3
adc
nop
stos
push
movsl
es
insb
aaa
rolb
mov
adc
sbb
cmp
shrl
lcall
sahf
mov
mov
cmpb
mov
jl
sub
in
popf
inc
fmulp
or
inc
ja
mov
and
iret
adc
test
fwait
cwtl
mov
cmpsl
jns
mov
mov
xchg
mov
or
ljmp
cmp
nop
xorb
xchg
sub
roll
mov
mov
stc
popa
push
in
inc
aam
repnz
loope
mov
ds
fldl
int3
dec
iret
fcmovnu
mov
lcall
xchg
pusha
outsb
ret
jge
sbb
jnp
and
push
add
xchg
sub
mov
push
mov
pop
in
xorb
xchg
lea
bnd
test
ja
dec
loop
nop
daa
sbb
mov
jns,pn
inc
pop
mov
rol
push
loope
and
cld
lret
cld
sbb
adc
xor
das
dec
ja
in
lock
addr16
pop
jne
dec
iret
roll
jle
fbstp
mov
cmc
or
sti
xchg
fildll
xchg
nopl
cmp
dec
xchg
sub
daa
mov
pop
mov
fnsave
dec
imul
mov
pop
outsl
fidivrs
mov
mov
das
lret
or
mov
rolb
inc
pop
cmp
mov
aaa
dec
dec
decl
xor
stos
ljmp
adcb
sbb
sti
pop
ds
push
sbb
sbb
xchg
in
xchg
dec
jp
mov
push
fwait
iret
jb
icebp
dec
pop
lods
push
cli
xchg
inc
adc
shr
out
loop
movsb
jecxz
cmc
mov
in
push
push
xlat
loopne
insb
ret
jne
shr
cmp
stos
inc
sbb
mov
fs
int3
arpl
popa
jno
sub
clc
jns
das
mov
or
sub
pop
sbb
lock
pusha
sbb
ds
and
mov
push
or
fnstenv
jae
int
aad
mov
adc
pop
in
pushf
sahf
and
add
jge
pop
test
push
dec
repz
fs
inc
inc
xchg
stos
jle
cmpsl
push
push
mov
xor
sbb
in
test
je
lods
out
ss
jae
sti
movsb
sub
push
inc
idiv
add
sbb
push
xor
inc
sbb
adcl
daa
cwtl
push
inc
mov
sahf
insl
movsb
call
jae
repnz
mov
in
iret
loop
mul
ljmp
mov
mov
xor
mov
adc
aad
xor
es
mov
sub
and
sbb
in
rclb
lahf
push
inc
sbb
mov
xchg
sbb
pop
icebp
pop
sti
adc
es
or
dec
es
add
cmp
cmp
sbb
cltd
and
scas
ja
mov
mov
xor
xlat
xchg
cmpsl
dec
cmpsl
pop
je
lds
cltd
call
xchg
jae
ret
shlb
sbb
jge
xor
mov
inc
ljmp
jno
xchg
mov
push
xchg
les
mov
pop
jo
test
mov
je
sbb
adc
xchg
ret
xchg
mov
arpl
cli
iret
jo
xor
mov
pop
adc
add
ret
mov
or
pushf
xor
iret
jae
or
dec
shlb
xchg
stos
push
pop
xor
push
ljmp
jp
pusha
inc
xlat
cmp
stos
jmp
popa
pop
xlat
cld
fwait
cmpsl
lret
xor
jp
repz
dec
out
pop
push
fwait
xor
testl
orl
mov
xchg
lret
lret
cmp
ljmp
ss
dec
popa
cvtps2pd
movsl
xor
jne
mov
xchg
xchg
sub
pop
nop
daa
mov
sbb
out
dec
lds
xor
inc
jmp
mov
shrl
push
jecxz
dec
mov
pop
lret
mov
sbb
lods
push
mov
adc
mov
sbb
loopne
call
push
dec
xchg
or
negb
sbbl
jns
lahf
fcoms
lock
por
ret
mov
insb
test
popa
outsl
sbb
call
pop
lcall
andl
inc
cmp
andl
jbe
sub
pop
gs
in
repnz
xchg
and
jns
out
cmp
jnp
stos
cmpsl
lds
push
faddl
or
cmp
inc
xchg
cli
repnz
mov
push
push
jle
cmp
sbb
adcb
or
mov
pop
inc
incb
icebp
subl
jbe
sub
lods
das
pandn
jmp
or
data16
out
mov
jne
shrl
je
repnz
out
xchg
lcall
jno
cmp
popf
sub
or
mov
add
mov
cltd
out
es
push
sub
insl
jnp
loop
addr16
lds
sub
push
ljmp
pop
je
sbb
call
insb
je
es
or
repz
mov
idivb
sub
and
jg,pn
adc
xchg
pushf
xor
test
aas
fstps
and
shrl
sbb
mov
lret
in
test
adcb
push
lahf
and
xor
jecxz
xchg
adc
mov
out
and
cmp
mov
mov
rcll
jl
or
mov
jns
mov
sbb
mov
xchg
iret
mov
push
scas
push
pop
data16
jge
rcrb
test
aad
pop
mov
divb
icebp
adc
ret
das
out
inc
mov
loopne
mov
push
repnz
adc
xor
push
push
xchg
call
call
push
test
inc
movsl
lds
and
cmpl
mov
add
sub
xor
inc
aas
clc
mov
leave
cmc
sbb
pop
scas
inc
push
xchg
sbb
negb
and
pop
fisubl
sub
aas
and
es
mov
rclb
pop
loop
jge
and
jecxz
lret
xchg
mov
xlat
cli
fisttpll
lods
push
jmp
insb
or
or
sub
decb
out
popa
xor
mov
test
dec
or
or
mull
aam
call
xor
ret
hlt
push
clc
pop
test
adc
sbb
in
nop
test
mov
sarl
enter
pop
out
xchg
frstor
push
sub
fldcw
int3
cmp
stos
cwtl
mov
outsl
jno
jns
icebp
pushf
mov
cmc
or
pop
and
and
xchg
mov
or
xchg
in
ret
popa
ret
push
pop
push
pop
xor
in
arpl
jg
repz
je
push
movb
jbe
push
lods
neg
movsb
xchg
dec
push
jp
inc
stos
push
fimuls
pop
sub
insl
gs
sahf
inc
test
loope
fs
cli
adc
xchg
jbe
fs
out
mov
sub
enter
jb
jmp
aas
shll
es
xor
mov
je
int
or
idivl
and
dec
loop
dec
les
xor
scas
inc
imul
mov
into
out
imul
cmp
scas
test
inc
push
rcrl
hlt
xchg
mov
fists
push
add
repnz
test
mov
xchg
fimuls
mov
out
js
mov
rol
pop
int3
push
stos
jmp
fsubl
filds
push
push
shrl
lahf
out
pop
jp
mov
xchg
packssdw
das
and
sbb
adc
pop
xchg
outsb
dec
inc
pop
lock
loop
enter
jns
mov
add
cmpsl
test
popf
mov
xchg
xlat
and
imul
cmp
pop
dec
pop
loopne
pop
imul
pushf
inc
fistps
jne
mov
inc
fmull
fsubl
pop
imul
sbb
out
inc
andl
iret
mov
pop
dec
imul
iret
sub
push
pushf
dec
out
mov
mov
jne
test
inc
fldt
je
pop
ror
cwtl
cmc
jp
fcomip
ja
insb
sub
test
ss
push
fstps
js
ss
hlt
lcall
xchg
cmp
rcl
mov
push
aad
mov
shr
mov
int3
loop
clc
ret
xor
push
cwtl
and
cmc
pop
sti
ja
test
mov
aam
shrb
pop
cmc
lods
shl
lcall
dec
push
jns
fs
dec
xchg
mov
dec
popa
jecxz
push
adc
sbbl
xchg
mov
enter
popf
lods
jne
adc
mov
test
xchg
mov
mov
xchg
xor
lret
and
adc
dec
pop
arpl
pop
lcall
addr16
mov
fnsave
xchg
and
add
shl
xor
fisubrs
in
loop
ljmp
xchg
mov
xchg
adc
push
and
and
cs
leave
mov
ret
and
push
fists
mov
std
cmpsl
outsl
push
xor
jns
xchg
push
lea
shrl
decl
mov
loopne
in
cs
push
les
pop
sub
sti
push
pusha
add
roll
lea
cmp
daa
sub
shlb
push
dec
sub
xchg
ror
mov
inc
pop
xchg
in
xchg
in
int3
mov
xchg
jnp
jo
and
or
scas
push
loop
sub
mov
push
dec
mov
xchg
xchg
add
sub
and
xor
mov
jae
decl
jge
cmp
and
clc
addl
data16
adc
or
ljmp
mov
adc
pushf
stos
insl
loopne
cmp
insl
jmp
outsl
stc
push
shl
inc
movsb
imul
xor
xchg
pop
jmp
adc
sub
pop
popf
inc
test
nop
rorw
call
fimull
pop
fcomps
jp
jmp
push
pop
push
dec
and
daa
fiadds
enter
mov
pop
notb
mov
aaa
into
pop
or
xor
jns
fildll
lret
addr16
cld
mov
push
in
mov
dec
push
ss
insl
data16
sahf
push
mov
and
mov
data16
sub
xrelease
and
ss
cld
data16
sub
mov
and
add
lods
loope
push
push
jae
and
bound
into
sarb
fildll
pop
mov
xchg
xor
xor
call
das
mov
rcrl
andb
outsb
sub
push
jg
stos
pop
jge
add
rcll
xchg
test
pop
repz
ja
mov
lods
sbb
jmp
add
out
inc
outsb
icebp
mov
dec
nopl
faddl
ret
movsl
fcoml
cmp
dec
pop
add
leave
and
push
xchg
jno
pop
mov
pop
fmull
or
jp
stos
stc
insb
rclb
bound
movb
shll
dec
sbb
clc
xor
test
jg
bound
mov
mov
call
dec
pop
mov
pop
sbb
sub
inc
rcll
daa
fisubrl
dec
jge
cmp
stc
push
or
lret
sbb
nop
cmp
sti
jno
mov
repnz
push
into
inc
movsb
mov
in
repnz
into
cmpsb
push
dec
rcr
dec
push
loop
rclb
pop
pop
clc
popa
stos
das
leave
data16
cmp
inc
enter
fiaddl
jecxz
lods
and
data16
xchg
inc
xor
shlb
xchg
in
sbb
in
xor
popf
and
inc
mov
mov
fwait
adc
mov
mov
cmc
add
sub
lods
dec
out
or
sbb
add
inc
xchg
add
lcall
cli
rolb
les
push
repz
mov
xchg
xor
cld
into
jno
je
outsl
mov
into
jns
aam
out
dec
sub
add
psllq
movsl
cmp
test
mov
and
jae
xor
ret
popa
pop
or
scas
dec
iret
negl
dec
dec
popl
xchg
addr16
sub
mulb
push
test
mov
jg
fucomip
sbb
push
mov
dec
std
out
test
out
cmc
lret
pop
inc
add
xchg
mov
adc
inc
repz
jg
mov
loopne
fdiv
xor
add
call
jns
adcb
popf
pop
cmp
ljmp
ud0
mov
outsl
push
push
jne
test
pop
stos
enter
sbb
in
push
jno
loop
xorl
iret
in
jge
aas
aad
push
sub
inc
mov
divl
js
in
pop
pop
adcb
cmpb
stos
ss
mov
mov
cmpl
addr16
test
into
sbb
jno
popa
pop
inc
mov
and
rcrl
jg
push
or
test
in
sbb
push
xchg
enter
mov
movsl
inc
dec
xchg
push
inc
add
aas
outsl
jmp
adc
je
mov
fisubrl
scas
and
aad
push
sarl
imul
imul
sub
jno
jl
mov
pop
addl
insb
out
mov
es
mov
fwait
divb
shrl
and
popf
imul
cmc
popf
and
jle
leave
rcl
add
mov
dec
in
cmp
aaa
out
leave
hlt
xor
fisubrs
leave
insl
imul
mov
xor
aas
push
pusha
in
shll
rol
fimuls
data16
sbb
push
and
pop
pop
cmp
sbb
mov
pop
minps
outsb
inc
mov
mov
mov
lret
int
std
test
push
stos
in
jne
movsb
push
xchg
adc
mov
fidivrs
inc
aaa
adc
hlt
pop
fisubrs
mov
popf
adc
out
dec
out
mov
mov
imul
in
mov
mov
shr
pop
xchg
mov
fstpt
xchg
mov
loop
cmpsb
addl
or
dec
cmp
fnstenv
pop
outsb
mov
ljmp
xchg
es
jbe,pt
test
xchg
xchg
and
rolb
popa
les
mov
repz
sub
shl
subb
int
mov
push
insl
lods
arpl
or
and
fwait
rclb
cmp
dec
xor
mov
and
mov
lea
stos
adc
push
mov
fadds
mov
ljmp
leave
pusha
sahf
xor
outsb
lahf
push
rcl
std
or
add
xchg
cmp
add
xchg
jnp
les
cmp
push
inc
sbb
jnp
movsl
mov
jns
pop
insb
pop
fisubrs
dec
pop
repz
movsl
int
add
dec
cmpsb
push
in
pop
lahf
lods
mov
mov
rorl
repnz
lods
pop
cmc
popf
xchg
sarb
dec
je
pop
mov
cmp
data16
iret
fistpl
shll
test
pushf
and
mov
cmp
nop
xchg
outsb
jle
cld
xchg
stc
jg
cli
in
sbb
mov
cmc
mov
jge
push
push
mov
jmp
inc
add
add
cli
adc
xchg
xchg
and
dec
aaa
sbb
rcl
test
movsl
adc
mov
aam
aam
jo
adc
repnz
xor
mov
xchg
testb
arpl
enter
xchg
lds
cmp
mov
push
mov
mov
nop
sti
xor
mov
push
andl
jmp
sub
in
fbstp
or
sub
fs
adc
cmp
adcl
inc
fildll
lret
lods
rcll
and
mov
jl
add
lret
dec
or
loope
cmp
mov
movsb
testl
test
icebp
push
cmpsb
sbb
or
xor
shll
sahf
ja
pop
pop
lock
cmp
cli
adc
mov
imul
cli
or
push
daa
add
mov
in
mov
mov
jbe
add
sbb
sbb
lds
jle
into
rcrl
test
push
push
repnz
lock
mov
fucomp
cmp
out
inc
int
xor
mov
xor
out
push
lock
jmp
or
addr16
call
dec
pop
adc
cmc
adc
pop
call
out
cli
outsl
shll
in
test
dec
lahf
je
jle
cmp
popf
shlw
js
iret
popf
outsl
jbe
xchg
ljmp
ss
mov
cmp
cltd
mov
inc
or
pop
mov
add
arpl
sbb
sbb
sub
inc
shll
xor
mov
jmp
test
sbb
repz
cmp
mov
push
mov
pop
cmp
gs
jb
xchg
xor
movsb
ja
sahf
sbbl
arpl
xor
xchg
ds
push
pop
mov
mov
sbb
aam
dec
jno
movsb
cmp
dec
outsl
sub
nop
jae
mov
std
dec
sub
rcl
into
aam
pop
rclb
adc
call
andb
xchg
xor
push
add
int
or
jl
inc
test
fdivs
sub
mov
imul
insl
inc
push
les
xor
orb
stos
ljmp
int3
pop
inc
sub
mov
movsl
mov
sbb
ja
in
mov
add
stc
repz
shlb
sti
or
rcrl
ja
and
rcll
iret
sbb
xor
push
test
gs
lret
enter
jae
imull
mov
push
loop
shld
fbld
icebp
pop
pop
out
adc
add
lret
ja
adc
fldl
cmp
es
lock
mov
jns
mov
popa
inc
cwtl
aad
add
xor
mov
or
nop
mov
sub
inc
das
cmp
mov
rcl
pop
enter
test
push
jnp
jne
sbb
push
popf
icebp
insb
add
dec
test
lret
inc
mov
call
test
inc
mov
jle
inc
rol
jecxz
outsb
pop
and
ss
decl
push
jge
cwtl
std
fcompl
mov
cmpsl
js
sarb
xor
inc
testb
movsl
rcrb
jge
stos
or
lcall
xor
xchg
or
sub
xchg
mov
incl
xchg
inc
outsb
aam
xchg
and
mov
cmpb
dec
cld
jbe
in
add
dec
dec
div
test
sub
jge
ret
pop
insb
imul
sub
cwtl
loop
inc
or
jo
sbb
es
pop
idivl
cltd
sarb
or
fidivl
aas
jge
repnz
jecxz
or
jae
mov
push
repz
mov
dec
inc
pop
xor
jb
or
bound
mov
fdivrl
xchg
inc
pop
shrb
lahf
mov
test
stos
xchg
jae
push
int
push
cmc
sti
or
xor
xabort
pusha
mov
sub
inc
inc
fisubrl
xor
mov
lods
out
or
cmp
js
lods
and
outsl
push
leave
lret
or
pushf
daa
xor
scas
or
push
dec
or
xchg
movsl
mov
or
iret
jecxz
rolb
add
dec
push
lods
adc
test
inc
int3
sub
dec
jge
in
jb
xor
mov
mov
imul
cmp
rcll
mov
xor
cltd
or
insb
mov
adc
data16
xchg
mov
cli
repz
pop
fisttpl
enter
icebp
aam
enter
push
sub
adc
pop
jbe
pop
add
pop
mov
fisubs
mov
call
cwtl
sbb
fwait
into
xor
pushf
imul
xor
jecxz
aaa
mov
cmp
sub
sbb
mov
out
pop
xor
push
rcl
or
push
inc
push
push
adc
sub
inc
fidivrl
xchg
popf
call
xor
push
push
pop
in
test
popf
or
shrl
jae
cwtl
jecxz
adc
push
mov
xorb
xchg
mov
daa
and
or
ja
scas
in
pop
push
xor
inc
jmp
movsl
stos
bound
rol
adc
dec
pop
andb
stos
sub
jp
pop
vpunpckhdq
sbb
clc
jb
fldl
xchg
lods
inc
leave
sub
movsl
dec
mov
pop
pop
stos
lret
rorl
sarl
mov
pop
pusha
addb
cli
push
bound
lea
and
xorl
mov
fwait
cmpsl
mov
aam
fidivrs
fistpl
mov
xchg
dec
std
enter
sub
pushf
mov
orl
movsl
jmp
loop
stc
inc
add
or
popf
push
addr16
pop
cmp
mov
not
inc
mov
jbe
jge
or
mov
jns,pt
push
and
shrl
cltd
inc
pop
mov
out
xor
pop
jge
ss
push
sub
push
cmp
mov
fistpl
sarb
lret
lret
adc
fsts
pop
mov
cwtl
das
repz
je
std
iret
sub
pop
pop
xchg
aam
out
rclb
imul
sbb
pop
xchg
mov
push
and
int
pop
mov
bt
jo,pn
jo
jne
in
push
in
pop
dec
sbb
sub
sbb
addr16
or
sbb
sub
pop
arpl
xchg
sbb
xchg
xor
gs
sbb
sbb
jge
cmpsl
xor
lret
xlat
pusha
xorb
and
gs
sbb
lods
xchg
mov
adc
jns
dec
repz
dec
push
fidivl
pop
shlb
mov
fcoms
push
sahf
ja
sbb
xlat
inc
lods
fstp
lret
mov
gs
cwtl
ljmp
js
pop
loop
test
stos
aad
jmp
adc
push
int3
sahf
add
jl
in
cmp
adc
mov
nop
ss
mov
push
jno
mov
xor
adc
pop
cmp
xlat
mov
dec
enter
or
rcl
and
pop
cli
icebp
mov
cmc
ret
jae
cld
aaa
mov
sub
jp
std
xchg
lret
mov
test
add
sarl
mov
adc
inc
xchg
inc
inc
xchg
add
repnz
xchg
test
lods
cmp
mov
push
sub
xor
push
lcall
and
lcall
incl
and
les
addr16
shl
sbb
repnz
dec
push
outsl
daa
sbb
popf
add
mov
jp
and
loopne
sarl
mov
jns
sub
nop
fsubrs
mov
test
adc
xor
inc
mov
mov
mov
mov
add
and
test
push
scas
xchg
fistpll
sub
mov
dec
mov
pop
leave
sub
mov
sub
test
rcr
xor
int3
mov
mov
mov
cli
rorl
sub
nop
ret
lods
aas
notl
test
inc
cmp
lret
lret
jb
jno
aaa
bound
adc
dec
out
jge
mov
xchg
stos
xor
inc
add
jns
lea
xor
push
repnz
pop
mov
adc
xchg
jbe
shlb
es
pop
in
xchg
or
outsb
scas
sub
repz
fistpl
movl
daa
es
sti
cmpsb
cmp
stos
pushf
push
xor
mov
push
iret
add
mov
out
shrb
xchg
insb
dec
in
ja
or
or
pop
mull
pop
out
push
inc
lods
inc
lea
inc
clc
rol
hlt
xor
xor
mov
add
daa
push
lods
inc
loop
adc
push
push
and
mov
inc
movsl
clc
or
and
in
mov
or
xchg
jae
mov
negb
cmp
lock
mov
push
int3
fs
hlt
lcall
leave
int
push
mov
scas
insb
or
gs
shlb
mov
sub
cltd
out
mov
stos
sarl
enter
pop
lds
mov
pop
into
mov
in
cmpsl
sbb
xchg
xchg
js
mov
mov
repnz
cmpsb
stos
fwait
and
jmp
add
xchg
ss
mov
std
test
sbb
jne
mov
and
xlat
mov
or
xor
push
jno
push
xchg
out
jle
ds
mov
cmp
scas
fstpt
loope
iret
das
shr
lret
adcb
mov
jmp
pop
cltd
xchg
repnz
popf
lods
fcomi
sub
adc
andl
arpl
push
fsubr
pop
add
packssdw
fidivrl
lock
pop
ljmp
push
or
cmpsb
stos
in
push
and
mov
js
xchg
inc
add
in
xchg
movsl
lds
pusha
push
in
xchg
not
push
lods
icebp
lock
dec
lds
adc
lcall
mov
ja
xchg
inc
mov
sbb
pop
pop
scas
dec
in
xor
sbb
adc
lods
in
cmp
mov
fsubl
adc
push
mov
sub
pop
clc
adc
movsb
inc
imul
aad
sbb
and
mov
call
mov
cmc
or
icebp
rcll
adc
lret
mov
and
test
iret
mov
push
xchg
nop
leave
push
inc
sbb
das
nop
lock
lcall
pop
rcrl
cmp
pop
clc
push
in
jl
fcompp
sbb
out
lret
lea
xchg
enter
out
scas
mov
cmpsb
iret
lcall
fucomp
pop
xlat
dec
call
sub
push
xchg
xchg
orb
pusha
std
mov
sbb
out
and
add
mov
mov
enter
mov
xchg
xor
xchg
xchg
mov
fldl
or
mov
movsl
ja
movsl
stos
dec
adc
dec
sarl
mov
mov
divps
lret
cltd
mov
cmp
bound
pushf
mov
push
xor
out
shll
fwait
lds
mov
xchg
repnz
aaa
popw
push
mov
shrl
test
fldt
stos
pop
jmp
cmpsl
inc
aas
add
mov
pushl
inc
out
pop
xchg
xchg
cmp
push
ljmp
jno
sbb
adc
cwtl
mov
mov
mov
xchg
sbb
or
int
jmp
int
add
push
sbb
xchg
out
stos
pushf
aaa
cmpsb
in
decb
rolb
cwtl
lret
xor
sub
or
push
aas
push
loopne
push
add
and
pop
xadd
pushf
daa
outsb
fucom
cmpl
or
jl
insb
dec
mov
hlt
mov
sub
xchg
pop
cmp
in
mov
cmp
jns
lods
mov
lods
mov
imul
and
inc
ljmp
xor
xor
pusha
push
popf
sbb
les
loopne
lret
xchg
mov
aam
mov
dec
mov
or
cmpsl
das
out
sbb
xchg
test
jecxz
xchg
cs
cli
pop
ror
mov
push
pop
jg
xor
sbb
adc
dec
mov
pop
xchg
mov
and
in
push
insl
das
xchg
out
sub
fidivrs
add
pushf
jle
cmp
or
mov
pop
mov
push
fdivrl
push
sbb
aam
cmpsl
int3
jne
sbb
mov
dec
and
mov
mov
lcall
and
repz
mov
inc
or
push
jne
ret
sub
pop
mov
or
std
mov
jmp
imul
mov
inc
mov
xlat
push
outsl
jecxz
xchg
push
rol
out
xchg
pop
addr16
mov
sub
xor
push
push
icebp
je
xor
aam
shl
mov
push
pop
scas
dec
loope
push
loop
or
in
xor
lea
pop
jb
nop
in
rclb
aaa
sbb
jp
mov
xchg
shr
pushf
sbb
fldcw
jle
inc
mov
testb
adc
pop
leave
rol
data16
xchg
add
cs
das
popf
sub
xchg
outsb
jno
mov
ss
xor
mov
push
mov
adc
jl
pusha
std
lcall
add
test
xor
notb
cmp
rolb
cmp
es
out
inc
inc
jmp
adc
add
hlt
push
jnp
push
sbb
sbb
mov
or
jg
mov
sahf
pop
fsubr
jge
stos
and
and
push
js
sbb
mov
roll
sbb
je
inc
mov
xlat
call
inc
out
repz
cmp
insl
enter
or
pop
xchg
inc
loopne
mov
or
mul
fidivrl
and
cmp
add
jle
into
cmp
pushf
xchg
pop
jmp
test
mov
cmc
shll
inc
inc
inc
mov
xchg
adc
jp
popa
popa
xchg
imul
or
lods
xchg
pop
mov
xor
arpl
pop
jae
jbe
aam
adc
sahf
xor
push
xor
mov
pop
lcall
loopne
and
or
cmp
and
cmp
cmpsl
gs
fs
add
in
xor
mov
lea
lret
dec
xchg
push
out
xor
dec
cld
push
popf
push
cmp
cmp
sbb
dec
ret
repz
pusha
adc
pop
sbb
inc
lcall
and
add
adc
sbb
addl
insb
sahf
clc
les
sub
test
sbb
arpl
fistpl
mov
mov
jg
adc
add
add
cwtl
xchg
mov
push
xchg
cltd
inc
pop
mov
lods
sti
inc
jecxz
or
pop
jge
cmp
mov
movsl
cmp
xchg
push
dec
xchg
cmp
or
outsl
dec
mov
inc
and
or
adc
push
dec
mov
gs
mov
mov
mov
xchg
sbb
adc
fcomps
into
jne
sbb
jmp
sahf
mov
enter
add
mov
jmp
pop
and
fsubr
jecxz
sbb
orl
xor
pop
sbb
ficomps
inc
cmp
enter
gs
lahf
cmp
notl
pop
pop
xchg
and
pop
movsb
xorl
mov
or
test
jb
pop
mov
mov
push
out
add
imul
outsb
add
xlat
icebp
hlt
mov
movsb
adc
js
xchg
push
or
data16
xchg
or
pop
fiadds
fdivl
int
jle
ljmp
dec
mov
fcmovne
sub
popf
jg
stos
jmp
nop
mov
mov
sbb
jle
mov
lock
hlt
pop
test
bound
mov
in
xor
call
or
inc
xor
push
lods
or
repz
push
pushf
insb
dec
ljmp
call
mov
add
shll
pop
jo
jp
push
mov
xor
jg
mov
jae
pop
imul
jg
jae
js
mov
adc
fsubrp
and
adc
and
std
arpl
push
data16
fbld
mov
add
sbbb
lret
mov
shrl
les
ret
inc
lcall
sbb
rorb
inc
dec
test
ret
pop
mov
rcl
insl
add
xchg
in
sbb
test
lea
mov
ss
jbe
mov
arpl
arpl
xchg
add
mov
or
dec
in
popf
lods
jmp
cmpsb
inc
scas
inc
cmp
xchg
arpl
leave
mov
int
cmc
mov
in
stos
sbb
andl
rclb
rcl
mov
sub
mov
inc
dec
test
stos
inc
mov
aaa
nop
daa
imul
mulb
lcall
out
xchg
incl
cmp
lods
xlat
scas
inc
enter
push
int3
lret
fwait
xor
lods
pop
repnz
push
cwtl
das
cmp
jns
bnd
add
xchg
lret
and
in
decl
je
jg
insb
add
mov
sbbl
fs
inc
out
shlb
aas
negb
pop
cmp
push
enter
jl
mov
les
jno
xchg
movsl
cmc
push
xchg
sub
sbb
pop
lock
pop
mov
mov
negl
rorl
mov
sarb
lods
pusha
jo
xchg
int
dec
pushl
sub
call
hlt
bound
xchg
adc
ret
pop
out
sub
mov
les
cmc
jl
ret
and
loopne
faddl
pop
das
mov
aam
outsl
jecxz
sahf
jns
add
int3
mov
cli
push
sahf
xor
cmp
or
mov
loopne
fisubrs
sbbl
or
int3
or
and
cli
sahf
xor
and
mov
hlt
jb
ljmp
pop
push
jo
lods
xchg
pusha
out
and
jecxz
ds
add
jae
xchg
mov
insb
push
in
popf
xchg
xchg
sub
mov
cmpsb
cmp
dec
icebp
test
and
test
mov
loop
andb
aam
pop
push
mov
stc
pop
hlt
mov
push
add
fidivs
cwtl
test
sbb
mov
test
push
lock
sbb
mov
outsb
popf
lds
jnp
into
lock
and
cltd
xor
inc
add
jne
pop
mov
xchg
movsl
cmp
loope
repnz
call
push
out
fs
or
fnsave
or
popf
xor
sub
mov
mov
fsubl
es
sub
shrb
lret
mov
add
arpl
stc
and
push
sbb
xchg
dec
js
scas
lods
outsl
push
out
int
add
mov
scas
inc
push
or
inc
jb
aad
bound
xchg
enter
mov
das
dec
pcmpeqd
lcall
stos
in
lods
add
xor
sbb
mov
addl
cli
enter
loopne
sub
jge
dec
fsubrs
mov
test
popf
in
or
add
sbb
lret
bound
scas
xor
loopne
lret
or
ja
jmp
push
in
adc
push
mov
dec
push
jmp
aam
cmp
ss
out
insl
pop
ljmp
inc
add
push
adc
outsl
push
and
push
jmp
cli
cmp
sub
mov
adc
sub
lret
pop
mulb
fcoml
adc
dec
in
or
lds
cmp
and
sub
sub
push
inc
hlt
fnstsw
adc
push
call
inc
mov
das
fsubl
and
jnp
cs
mov
not
outsb
es
out
inc
decb
xchg
testb
or
out
das
fisttpll
cmpsb
psadbw
mov
push
loopne
inc
sti
xor
sub
out
adc
jns
es
mov
aas
sti
aad
sub
mov
add
push
push
jmp
repnz
and
mov
and
mov
xor
ljmp
daa
or
sahf
cmp
push
out
jecxz
rclb
xor
es
es
xor
mov
sbb
add
sbb
add
insb
xor
jge
and
sbb
xor
push
mov
jmp
xor
in
nopl
out
xchg
or
mov
in
xor
pop
inc
xlat
xor
in
mov
cltd
pop
sti
cmp
sub
ret
pop
cmp
inc
out
and
cld
sbb
inc
jmp
les
push
fnstenv
sbb
lret
pop
scas
sbb
mov
femms
mov
lahf
dec
jmp
insb
add
push
xor
ds
je
out
cs
fnstsw
aaa
xor
xchg
cmp
in
sbb
and
sub
mov
aam
xchg
or
stos
inc
and
xchg
sub
es
fidivs
icebp
or
divb
mov
sub
repnz
and
push
je
dec
fbld
icebp
les
inc
mov
ja
es
fdivr
sahf
xor
jle
cmp
sub
adc
data16
and
call
ds
ret
mov
es
cmp
adc
sbb
push
mov
repz
sub
push
outsb
jnp
cmpsb
mov
iret
xor
fs
sub
xchg
jnp
dec
lret
shlb
cmp
pop
in
out
sbb
cmp
outsl
aam
sub
mov
loopne
mov
test
lds
je
sti
adcl
pop
fwait
xor
dec
jecxz
push
sub
xor
lds
repz
sbb
add
outsl
pop
repz
and
rcll
xchg
cmc
jne
dec
mov
rcrl
mulb
jl
adc
jbe
mov
call
mov
mov
out
adc
lahf
inc
mov
or
cwtl
cmp
imul
jmp
xchg
cmp
outsl
mov
insl
jmp
aaa
repnz
and
jmp
mov
lds
out
mov
aam
xor
adc
rclb
cld
xchg
jmp
add
inc
xor
inc
xlat
daa
pop
and
jge
sub
xlat
cwtl
jp
into
mov
jmp
inc
pop
mov
cmp
jnp
fwait
fwait
xor
mov
mov
fprem
cmovs
iret
push
cwtl
add
in
mov
in
add
ds
insb
pop
call
push
fdivp
mov
fistpll
adc
push
imul
sub
addr16
cli
push
mov
mov
sbbl
add
les
jb
out
js
jp
repz
cld
adc
sbb
sbb
mov
mov
jmp
push
insl
hlt
or
cmp
fwait
xor
les
callw
cwtl
lods
fbstp
shlb
sub
dec
pop
andb
xchg
mov
cmp
in
add
bound
pop
pop
divb
repz
das
fnstsw
test
dec
xlat
outsb
jge
xchg
adcl
sbb
out
xlat
outsb
and
mov
cmp
loop
lret
and
push
lds
std
xchg
mov
fldl
or
pop
hlt
pop
repz
pop
sub
mov
xchg
mov
and
sbb
mov
mov
repz
xchg
std
lea
jecxz
or
lds
pop
ret
test
push
inc
mov
cmp
pop
ret
xchg
aad
sub
fdivl
jge
in
rcrl
mov
clc
sub
mov
or
push
push
mov
adc
lcall
cmp
dec
aaa
jo
and
lds
adc
aas
pop
cltd
lret
jg
dec
dec
fldcw
cmp
lods
inc
push
jg
mov
jo
xchg
push
mov
ljmp
or
inc
nop
add
es
and
pop
inc
jb
pop
push
jle
push
jnp
dec
xor
mov
int3
cmp
ss
outsl
ss
shlb
xor
es
jb
orl
mov
mov
in
int3
xchg
mov
iret
sub
rcr
data16
in
scas
pop
into
clc
fimull
mov
sahf
push
outsb
mov
mov
out
in
test
test
adc
dec
mov
inc
into
pop
lock
stc
push
push
xchg
sub
aas
orb
jno,pn
enter
cmc
fcmovne
push
jmp
dec
out
mov
lods
pop
xchg
jle
adc
mov
dec
mov
enter
jg
mov
xchg
pop
stos
or
ljmp
xor
cmp
imul
movaps
mov
sbb
mov
icebp
out
jmp
lods
rclb
aam
pop
jmp
sarb
and
or
push
xchg
out
js
add
arpl
pop
cwtl
subb
jle
xor
outsl
push
push
mov
jp
outsl
mov
popf
mov
xor
in
jp
imul
pop
sub
ja
dec
mov
cmpl
cmpsb
movsb
dec
mov
leave
mov
or
mov
lock
lods
enter
je
or
mov
stos
in
das
or
xchg
mov
xor
dec
setle
fnstsw
icebp
les
inc
iret
push
cmp
push
imul
mov
mov
jo
ret
xor
mov
notb
cmp
jecxz
mov
or
mov
xor
aam
addr16
aaa
je
les
out
jne
outsb
xor
or
andb
inc
adc
xchg
mov
inc
and
test
test
adc
in
mov
ret
loope
int
jbe
push
mov
repnz
movl
add
pop
repnz
js
fidivrs
xchg
popf
movsl
cmp
jmp
aam
jp
mov
push
fs
stos
pusha
jge
jae
pushf
xor
cmp
cli
ljmp
jmp
in
rcr
icebp
ss
or
lods
add
outsl
mov
xchg
dec
jecxz
sarl
jmp
sahf
loope,pt
fimuls
adc
test
mov
cmp
and
sahf
mov
icebp
jae
mov
scas
inc
xchg
xlat
push
or
add
and
sti
js
shlb
inc
mov
xor
jb
xchg
push
adc
loope
inc
push
test
orl
add
sub
push
fistpl
scas
pusha
roll
fwait
xchg
cmpb
dec
lods
repnz
arpl
in
mov
lret
xchg
sub
loopne
nop
in
fwait
andb
insb
mov
fcmovnbe
pop
int
jmp
sbb
in
inc
mov
inc
rorl
arpl
fadds
cmp
cld
inc
xor
pop
scas
push
lods
or
das
dec
mov
push
push
pop
leave
xchg
ss
jne
inc
shrb
sub
jp
aas
jecxz
cmp
or
jmp
add
in
bnd
inc
ss
mov
dec
cli
daa
pushf
xor
lea
pop
cltd
push
nop
pop
lock
pop
sarb
jo
stos
ret
add
fildl
js
test
pop
pop
jecxz
pop
repnz
add
sub
and
les
inc
jp
push
cmpsb
xchg
sub
or
add
add
jns
lret
push
lret
out
xchg
sub
mov
hlt
xor
mov
push
sbb
cli
xchg
cmp
pop
mov
inc
jns
stos
inc
push
fwait
xor
dec
movb
xor
cmp
jb
fisttpll
cmc
daa
jle
lds
aaa
pop
ficoml
ja
push
dec
sub
cmp
insb
mov
add
dec
pop
fcomip
push
in
rcrl
mov
sbb
je
mov
cmc
mov
cmpl
in
sub
imul
push
inc
ds
jae
pop
cmp
cmp
shlb
or
cmp
and
jno
cwtl
add
sbb
xchg
sbb
stc
sbb
sub
int
push
adc
sbb
ss
inc
mov
cmp
sub
mov
jmp
cmp
out
out
faddl
mov
mov
decl
shll
lds
fiaddl
xchg
daa
sbb
mov
es
pop
cmpsb
imul
scas
bound
int3
shll
jp
js
inc
leave
loope
sub
jl
sub
daa
xor
call
pop
mull
out
int3
pop
mov
adc
adc
into
popf
sti
xor
fildl
test
mov
xchg
mov
xor
adc
inc
inc
mov
push
ds
xor
nop
mov
jge
subb
fs
lea
mov
addr16
outsl
mov
sub
jb
popf
pop
repz
sahf
outsl
pop
cmpl
sbb
in
and
mov
push
add
divb
rolb
loope
rcl
jg
lock
fdivs
sarl
lret
bound
mov
mov
xlat
dec
inc
xchg
sub
cmp
sahf
xchg
add
sub
push
cli
les
fidivrl
add
int
cltd
pop
rorb
cmpsl
and
ljmp
loop
xlat
inc
mov
push
dec
ret
ficoml
cltd
xor
test
push
xor
adc
xchg
out
and
test
fadds
add
dec
jmp
xchg
adc
clc
negb
dec
sti
mov
lods
inc
imul
fwait
jnp
dec
pushf
push
fstpl
loopne
adc
repnz
call
loopne
stos
add
test
fwait
dec
jne
outsl
adc
je
mov
mov
in
mov
icebp
hlt
xchg
iret
adc
movl
clc
mov
mov
iret
mov
inc
fistl
adc
ja
add
shlb
or
mov
sub
jg
stos
outsb
mov
out
mov
in
pop
lcall
push
mov
loop
mov
bound
xor
pop
leave
jle
mov
aam
mov
push
dec
xlat
outsb
pop
orl
test
and
inc
xchg
push
xor
test
bound
and
pushf
xor
fs
or
insl
add
push
add
out
fsts
add
xchg
jns
sbb
push
movsl
mov
mov
lock
mov
dec
lds
jae
fistps
mov
movsl
lock
cld
jne
ret
movups
xchg
dec
in
xor
cmpsb
mov
popa
and
lds
xchg
pushf
pop
xor
mov
ss
ds
sub
sysret
sti
jg
fcoms
push
cld
mov
sahf
fs
pop
sbb
cmpsb
add
xchg
popf
or
sbb
dec
mov
sub
gs
add
jbe
repnz
push
mov
push
pop
sbbb
daa
filds
inc
xlat
dec
push
sub
aaa
dec
jmp
cli
xchg
les
scas
imul
lcall
out
sbb
loop
fnsave
adc
mov
ret
cli
and
pop
repnz
test
xor
pop
imul
inc
dec
lret
inc
mov
add
cmp
dec
arpl
xchg
xchg
jnp
mov
and
adc
test
add
xor
lea
push
cmp
addl
or
movl
lods
stos
fs
pop
dec
shrb
xchg
stc
and
sarb
sbb
lahf
inc
push
or
or
mov
ret
mov
outsb
cmpsb
jnp
repz
pop
nop
mov
icebp
adc
mov
mov
jecxz
pop
mov
cld
mov
shrb
int3
push
int
mov
xor
lods
jle
jo
into
popa
lods
in
mov
lcall
stos
sub
jp
ret
dec
lret
mov
clc
es
push
pop
test
pop
dec
jp
jle
push
pop
pop
xor
sbb
shrl
inc
ljmp
dec
sarl
leave
jo
sti
cmp
sub
adc
jnp
addr16
lret
sub
cmp
dec
movsb
testb
test
jp
shl
add
mov
pushl
int3
arpl
ficomps
add
arpl
pop
int
mov
pop
pop
mov
mov
imul
stos
pop
jle
cmpsl
pop
dec
xchg
pop
pop
dec
out
cmp
mov
sub
enter
add
pop
mov
outsl
cwtl
or
cmpl
icebp
jae
in
push
add
stc
insb
add
data16
xor
ret
inc
fldenv
xchg
jle
xchg
cmc
xor
ljmp
pop
shrl
imul
push
lods
mov
test
lds
fs
lea
mov
mov
and
pop
sbb
cmp
int3
shll
out
inc
mov
scas
push
xchg
lea
xchg
inc
sbb
out
and
mov
dec
sbb
movsb
fs
les
mov
aad
adcb
dec
or
gs
fwait
dec
out
pushf
mov
out
movups
stos
xchg
xchg
cmpsb
ljmp
stc
mov
fstps
shlb
lods
rcr
push
xlat
jecxz
cltd
adc
lods
pop
sub
add
and
es
push
cmp
mov
dec
xchg
mov
mov
lods
es
xchg
sub
xor
push
and
and
inc
adc
add
mov
test
sbb
test
mov
cmc
add
arpl
js
je
and
jae
dec
loope
xchg
inc
mov
movsl
mov
push
stc
inc
mov
es
or
subl
push
mov
cmpl
insl
stc
or
push
xchg
lods
les
adc
mov
and
test
inc
testb
jno
mov
in
sub
and
or
push
xchg
jmp
les
repz
sarb
push
clc
mov
inc
and
test
jbe
sub
jle
aaa
cwtl
mov
mov
or
lds
push
push
fnstcw
in
xchg
ret
into
pop
cmpsb
in
xchg
in
jo
fcoml
add
hlt
fwait
push
mov
adc
mov
inc
shlb
repnz
bound
les
lcall
jne
test
lahf
aas
add
shlb
enter
mov
call
sub
mov
mov
jge
xchg
jle
push
mov
push
or
lcall
push
dec
dec
cmp
xor
faddp
push
adc
pop
shll
in
adc
loopne
or
imul
in
fwait
out
cmpsb
callw
mov
mov
xchg
insb
dec
shlb
jle
jge
pop
mov
jle
dec
cmpsb
pop
sub
push
sub
in
in
ret
lods
ss
or
jb
cltd
lsl
xor
dec
jmp
int
pop
addr16
int3
das
out
js
jne
jmp
xlat
ds
cli
sub
addr16
icebp
cmp
jecxz
ds
sub
sub
jbe
popf
mov
jbe
cltd
je
adc
cmpsb
imul
sub
sub
mov
divl
insb
and
lds
rcll
sbb
scas
stos
stc
xor
in
pusha
clc
es
inc
mov
inc
mov
enter
dec
fistl
pop
nop
mov
jno
adc
jbe
adc
imul
cmpsl
pop
movsb
gs
cmpl
insl
add
jmp
sti
ret
mov
push
or
jecxz
adc
mov
aaa
lcall
sub
pushf
mov
cmp
sbb
lods
insb
in
out
aad
out
mov
push
jecxz
xchg
daa
daa
add
cld
sbb
adc
inc
rcrl
int3
mov
ljmp
xlat
adc
in
dec
xor
xchg
leave
pop
or
mov
js
jb
or
subb
adc
adc
icebp
cld
mov
mov
push
xchg
sub
enter
fiaddl
subl
jns
jnp
pop
dec
cli
sahf
jge
push
rcrb
mov
cmpsb
fs
mov
js
xor
rolb
and
jo
shll
sbb
enter
jnp
cmp
mov
add
push
dec
test
cs
sahf
xchg
bound
pop
push
sbbl
pop
pop
movsb
mov
pop
or
outsb
sahf
pop
cltd
rcll
pop
ja
xchg
int3
mov
jnp
cmpsb
dec
mov
insb
sbb
lds
sbb
mov
xchg
or
mov
mov
lahf
mov
movsb
pop
cmpsl
xorl
out
inc
loopne
pusha
lods
dec
mov
cmpsb
lahf
pop
lock
out
sub
movsl
testl
adc
in
inc
adc
pop
rcl
insl
add
cmp
scas
and
sbb
push
sbb
pop
dec
sbbl
nop
int3
dec
cmc
jb
pop
push
xlat
les
cmp
push
jmp
nop
daa
xor
xlat
cmp
push
dec
outsb
movsb
iret
gs
xchg
imul
orb
movsl
jle
sub
aad
loop
fs
push
jmp
or
dec
mov
mov
jne
test
xchg
clc
mov
jg
adc
xchg
int
adc
repz
sub
jmp
mov
jbe
test
mov
daa
inc
addr16
jbe
arpl
idivb
sti
xchg
xor
mov
mov
outsb
mov
mov
popa
push
daa
jmp
cmp
mov
mov
repnz
cmp
dec
mov
inc
int3
jae
in
xor
inc
je
push
call
adc
aas
repnz
ds
sarl
loope
incl
mov
mov
sub
decl
test
pop
jle
popa
lahf
test
xor
fists
xchg
xchg
jbe
lods
push
dec
push
enter
stc
stc
pop
inc
int
sbb
in
mov
mov
adc
iret
mov
xor
adcb
jno
or
dec
sahf
sbb
pop
and
mov
inc
in
push
add
lea
in
outsl
iret
lret
add
jbe
in
push
sarl
and
test
mov
cmpsb
addr16
push
cmpsb
popa
arpl
idivl
pop
and
aaa
adc
mov
aas
aaa
clc
scas
decb
dec
adc
dec
xchg
negb
inc
lret
sbbl
stc
xchg
sbb
lods
cld
es
popf
out
and
test
pusha
scas
mov
test
imul
test
fimull
in
jbe
push
pop
dec
xchg
xchg
jp
or
lcall
in
adc
mov
sub
repz
sti
iret
mov
addb
shlb
addr16
or
loope
nop
test
sub
adc
arpl
push
out
mov
dec
divl
mov
add
and
cs
fisttps
arpl
jge
push
jne
mov
jge
xor
sub
xchg
xchg
or
add
mov
subb
out
xchg
fisubrl
push
mov
popf
jmp
mov
cmpsl
jne
cld
in
dec
mov
clc
cmpsl
into
inc
mov
mov
xchg
push
shll
nop
insl
add
movl
leave
cmc
xor
leave
mov
adc
mov
in
dec
fsubr
jp
mov
fisubrs
jecxz
add
or
and
in
push
mov
mov
jns
xor
or
shll
inc
dec
or
fldcw
lods
inc
pop
cli
jmp
fs
into
fidivs
jae
inc
cmp
mov
pop
push
lcall
int
shr
mov
scas
sub
repnz
push
cmpsl
adc
pop
in
jnp
mov
fidivs
or
lahf
mov
fstl
filds
popa
imul
push
mov
push
add
pop
pop
and
sbb
mov
inc
mov
into
lea
shr
loop
shll
fistl
mov
imul
sbb
test
xchg
pop
or
insl
movsb
outsb
push
jnp
xor
pusha
sarl
popa
add
push
adc
loopne
add
fldl
xchg
lea
frstor
in
iret
pushl
addr16
call
jbe
adc
mov
cli
and
mov
adc
dec
xchg
mov
mov
sub
push
xchg
scas
dec
lock
pop
cmc
cmp
dec
xor
jno
cbtw
xchg
jl
and
mov
cmc
or
andl
add
push
pop
outsb
sub
dec
dec
gs
pop
ljmp
subb
push
bound
and
pop
rcll
jnp,pt
jnp
lds
pusha
pushf
xor
lea
pop
js
imul
mov
jb
popa
fwait
je
xchg
xchg
add
jo
js
test
cmp
inc
xor
and
repnz
jmp
jle
cmp
jb
out
mov
sbb
xchg
cmc
icebp
sub
mov
hlt
and
loopne
or
filds
add
sbb
inc
mov
xchg
jmp
pop
das
dec
leave
jnp
cld
xchg
mov
sbb
aad
cmpsb
lods
hlt
or
jmp
inc
int3
xlat
insl
adc
icebp
or
or
sbb
mov
mov
xlat
push
into
push
stc
mov
xor
lods
call
or
fdiv
movsl
call
cmpsl
xchg
xchg
mov
scas
cwtl
nop
mov
shl
xor
ret
jmp
fcomps
pxor
add
mov
and
fcoml
pusha
push
cmpsl
mov
and
fldenv
lea
cmp
scas
and
icebp
shll
mov
xlat
or
mov
pop
roll
push
cmpsb
dec
das
fld
fistl
fcoms
stc
out
lods
scas
jno
mov
fwait
xor
es
test
add
fists
loope
in
fwait
add
test
clc
addr16
ljmp
fdivrl
ljmp
iret
add
xor
pop
mov
jne
push
or
arpl
jecxz
in
xor
gs
aaa
movsb
outsb
mov
xchg
sub
aam
mov
mov
pop
adc
mov
inc
adc
mov
outsl
xor
ret
dec
arpl
pop
rcrb
xor
push
test
ja
outsb
sarb
sub
push
in
and
aas
and
cmpb
out
andb
or
mov
add
adc
call
push
cmc
mov
cmp
fcompl
push
sbb
imul
outsb
cwtl
imul
movsb
push
cmp
and
push
lods
sub
movsb
outsl
popf
or
pop
lret
nop
xchg
add
xor
jns
sbb
pop
test
lret
lock
popa
into
jo
flds
and
repz
scas
pop
push
adc
xchg
adc
fimuls
fs
sbb
cmp
push
jmp
movsl
jns
stc
decl
les
push
aam
insl
test
leave
test
sti
sbb
inc
mov
jmp
mov
mov
sub
rorl
dec
fistl
lods
inc
dec
js
cmpsb
inc
dec
mov
pop
push
push
mov
dec
push
push
ljmp
cmp
outsl
mov
imul
lcall
xchg
push
push
jo
sbb
jb
mov
hlt
pop
outsl
shrl
orl
push
add
cmp
rol
fiadds
insb
pop
lret
hlt
jnp
pusha
inc
mov
pop
or
jnp
cmpl
push
fbstp
xchg
and
push
or
mov
shl
out
shrl
in
shll
push
mov
mov
stc
js
mov
in
icebp
movb
adc
fs
jle
and
mov
insb
xor
cmp
lods
inc
arpl
hlt
cmp
outsb
sahf
and
mov
loope
sarl
incl
and
push
push
stc
xorb
mov
lods
inc
stc
negb
arpl
mov
andl
out
clc
and
mov
jae
inc
fcoml
mov
push
jmp
cmp
pop
mov
and
jecxz
lods
inc
adc
lret
pop
sti
xchg
mov
mov
xlat
push
popf
or
aaa
into
das
sub
pop
push
push
in
cmpl
aam
pusha
idiv
cmc
xchg
sub
and
push
dec
scas
inc
jp
popf
xor
fwait
int
int
mov
andb
fidivl
inc
or
mov
rcll
repnz
fcoml
adc
int3
inc
aaa
arpl
push
mov
or
fcompl
daa
ds
mov
inc
xchg
sbb
mov
int3
arpl
aad
nop
pop
push
jmp
cmp
pop
scas
pop
pop
or
stos
stos
daa
mov
std
std
inc
fsubrl
pop
jb
push
dec
arpl
xorb
movsb
mov
scas
inc
div
lahf
ss
fs
inc
mov
sbbb
or
pop
adc
mov
jno
inc
fstl
mov
sti
out
push
ljmp
jno
push
mov
push
loope
lods
inc
push
add
jne
das
lret
bound
cld
xchg
mov
sbb
push
cld
cmp
sub
dec
push
in
jg
inc
fisubrl
int3
popa
clc
std
repz
sub
inc
mov
js
sahf
xor
lret
lds
push
sbb
jb
aas
or
sahf
xchg
sub
lock
fstl
ss
xor
push
jmp
or
push
mov
or
pop
sti
xchg
mov
es
cltd
xor
pop
movsl
cmp
std
mov
das
mov
inc
loop
enter
enter
jbe
adc
movsl
cmp
ljmp
mov
jge
jbe
fmuls
mov
mov
or
or
and
pop
enter
jl
test
iret
dec
jecxz
push
sub
and
lods
jne
cmp
popa
xlat
dec
loope
cmpl
sub
or
scas
leave
mov
sti
shlb
mov
dec
ljmp
sahf
cmp
mov
test
addr16
cmp
mov
out
inc
push
dec
sbb
pop
lahf
aaa
push
ret
push
in
jecxz
sub
psubusw
dec
add
into
mov
pop
fbstp
xchg
or
lods
std
push
out
push
popf
lret
pop
fsubrl
mov
ss
cwtl
bound
xchg
sbb
and
fisttps
mov
sbb
mov
js
icebp
adc
pop
cmp
sbb
jmp
mov
mov
clc
jle
xchg
aas
push
js
lea
pop
lods
clc
push
aaa
ljmp
nop
stos
stc
push
or
jne
inc
icebp
rcrl
or
scas
push
aas
cmpsl
lods
jge
insl
lea
xchg
mov
testb
mov
sbb
cli
mov
push
pop
sub
jg
stos
andl
fsubl
adc
jno
xor
inc
or
test
cmp
or
push
out
mov
scas
in
repnz
jnp
add
add
mov
pop
push
mov
sbb
test
or
cs
das
fadds
lret
scas
sbb
fisubrs
lds
pop
sahf
insb
mov
fisubrl
rclb
aad
push
or
pop
aad
shll
ja
jno
inc
adc
lods
push
push
stos
mov
addb
dec
or
aam
dec
xchg
addr16
or
lds
shl
leave
push
inc
jmp
aam
std
lret
xor
mov
xor
aad
sbb
popf
pushf
bswap
add
dec
call
xchg
jle
pop
mov
aas
xchg
fsubrl
cmp
jo
inc
sbb
inc
jae
insb
pop
sbb
inc
pop
jne
inc
adc
scas
rcl
cmp
mov
in
into
sbb
out
sub
sub
stc
push
mov
or
cmp
arpl
scas
sub
scas
and
movsb
daa
je
sbb
pushl
inc
lock
std
lods
jb
mov
mov
adc
push
adc
fbld
lock
lds
inc
popf
orb
std
jecxz
dec
mov
stc
push
push
hlt
mov
or
and
sbb
mov
dec
movsb
jae
mov
adc
adc
pusha
xlat
pop
dec
jp
fwait
aad
inc
fstpt
insl
and
lea
inc
hlt
mov
stos
leave
js
mov
sti
jmp
pop
cmc
or
into
push
adc
jp
stos
inc
sub
rcrl
sub
bound
cmp
test
inc
xlat
outsb
aaa
sbb
sub
int3
and
mov
push
cmp
lods
cli
push
in
jmp
and
clc
fidivs
iret
xchg
movsl
cmp
arpl
push
test
sub
std
les
mov
mov
mov
xchg
sub
movsb
dec
fists
cmpsb
fidivl
and
outsl
xchg
test
jle
xchg
lods
es
cltd
scas
mov
cltd
pop
inc
mov
mov
test
jae
iret
xor
dec
fstl
pop
mov
mov
je
and
cmp
cmp
jge
ds
sti
cmp
mov
xchg
dec
mov
lret
aas
xor
pop
and
and
dec
xchg
inc
icebp
lock
add
out
inc
push
sub
xchg
inc
push
xor
std
sub
lods
in
and
lods
aad
pop
lock
push
xchg
xchg
scas
mov
xorb
and
xchg
inc
outsl
je
add
mov
nop
inc
cs
add
xchg
fnsave
out
cmc
andb
xchg
inc
dec
enter
xchg
jbe
xorb
and
inc
outsb
je
in
movsl
jb
fsubs
shll
cltd
push
mov
inc
or
test
pusha
out
mov
pop
lods
xor
in
xchg
outsb
fiadds
adcb
and
rcrb
adc
inc
cmc
push
dec
push
cmp
ds
cmp
ds
mov
mov
mov
fsubrp
push
clc
xchg
adc
pop
mov
mov
fsubrl
rorl
add
dec
adc
aam
and
xor
shrb
mov
fwait
inc
sbb
push
dec
adc
pop
lods
ss
cmp
sub
jmp
ss
lea
es
or
mov
pop
dec
emms
sub
sub
sbb
jecxz
out
mov
or
mov
pop
sub
gs
lods
ss
loop
testb
mov
scas
mov
jns
pusha
mov
sub
leave
daa
stos
push
add
test
and
adc
orl
popa
and
xor
in
lahf
inc
jb
sarl
addr16
fdiv
inc
or
or
test
jb
jns
jge
shrl
sti
jb
orl
push
cli
push
jns
cmp
xorl
div
inc
mov
jmp
jnp
leave
arpl
jmp
add
es
out
xor
push
inc
jno
xchg
orl
mov
scas
das
xlat
mov
sti
arpl
mov
sub
icebp
pop
xchg
cmpl
out
jb
sub
and
loop
icebp
js
es
movsl
xor
aas
and
cltd
cmp
mov
add
and
cmp
cmp
mov
pop
daa
mov
or
inc
into
pop
addr16
pop
and
adc
mov
xchg
and
or
sbb
fs
insl
jmp
jg
daa
sub
xor
test
inc
or
mov
push
adc
push
cli
fidivl
push
and
inc
insl
xor
out
shlb
mov
dec
xor
or
sub
mov
xor
outsl
ret
mov
dec
or
aad
mov
push
dec
or
sub
data16
push
and
cmp
xor
mov
dec
push
sahf
and
aam
je
push
adc
push
and
in
jmp
dec
push
outsb
aad
mov
jbe
or
sub
data16
insl
call
mov
das
stos
adc
dec
or
push
sbb
xchg
sub
sbb
push
lret
mov
in
cmpsl
xor
jecxz
jo
adc
adc
stos
mov
into
push
add
pop
notl
cmpsb
xor
xchg
aas
lds
adc
insl
lahf
jb
shlb
les
outsl
shl
daa
mov
or
xchg
inc
aas
out
or
and
mov
sub
pop
push
rolb
fsubrs
mov
pop
add
je
adc
int3
imul
inc
adc
mov
lahf
pusha
cmc
dec
push
push
test
and
test
xchg
sub
jmp
and
imul
mov
dec
cld
pop
daa
pop
xchg
aas
pop
mov
and
jo
cmp
pop
dec
jle
inc
test
cli
push
lds
sbb
dec
jle
popa
repnz
nop
sbb
pop
rolb
dec
and
push
loop
adcl
pop
les
or
or
ret
and
shlb
mov
adc
stos
xchg
mov
push
dec
push
push
lea
pushf
inc
jmp
pusha
jns
mov
mul
test
mov
stos
sub
xchg
inc
popa
lcall
xchg
sbb
in
popa
leave
xor
es
repz
cwtl
jns
test
ljmp
xchg
popf
xchg
add
push
mov
imul
pop
std
mov
mov
insb
call
cmpsl
mov
push
into
mov
jmp
push
sub
xchg
out
jmp
out
popa
jbe
cs
pop
dec
xor
xchg
test
mov
mov
jne
movsl
insl
out
addr16
fcmovb
mov
jbe
popf
stos
push
ljmp
lds
ret
fidivl
and
mov
cmpsb
xchg
inc
cmp
cmp
and
mov
ret
jl
outsl
out
fs
or
mov
and
mov
cmp
add
rcr
or
cli
pop
mov
mov
out
push
pop
cmpsb
adc
mov
dec
loop
aad
in
lahf
insl
hlt
in
pop
ja
mov
mov
lock
std
sarl
inc
xor
lret
hlt
adc
jmp
sti
flds
pop
arpl
jp
push
stos
xor
stos
sbb
cli
sbb
fiadds
dec
sbb
in
and
xor
jp,pn
xor
adc
lcall
frstor
stos
pop
and
xchg
xor
mov
sbbl
insb
repnz
test
inc
cltd
inc
fmull
pop
sub
sub
dec
cmpl
leave
add
popf
insb
jne
cmpsl
mov
aas
popf
jae
loop
ljmp
rcrl
inc
push
push
and
adc
adc
sti
mov
sub
bnd
mov
inc
lods
fidivrs
mov
pop
sahf
ss
or
mov
sar
cs
mov
xor
push
mov
popf
ds
mulb
std
pop
cli
adc
mov
arpl
hlt
xchg
pop
shl
fstp
jge
ljmp
arpl
std
pop
enter
lock
movsl
sbb
or
rolb
cmpsl
inc
nopl
neg
popa
hlt
jb
dec
pop
jge
out
push
bound
lods
add
dec
or
into
cmp
adc
gs
lahf
jnp
push
ret
push
push
and
cmp
push
xor
out
adc
loope
movsl
dec
lods
daa
pop
mov
lret
pusha
aad
or
cmc
jmp
xchg
xchg
lock
inc
into
leave
adcl
mov
dec
and
and
push
adc
in
push
mov
pop
cmp
xchg
in
repnz
ja
orl
js
cmp
mov
test
mov
dec
iret
lret
pushf
pop
add
xchg
fs
in
pop
dec
sbb
test
lret
popa
or
out
jbe
pop
jl
int3
pop
mov
lods
push
xchg
cmp
pushl
lcall
mov
inc
mov
sub
outsl
bound
xor
orl
scas
push
mov
mov
push
add
inc
xchg
inc
arpl
adc
dec
cmp
and
cmpsb
mov
push
sub
stc
or
pop
repnz
mov
jo
pop
fwait
inc
aas
sbb
ja
xor
lock
shl
pop
rclb
xlat
js
ljmp
insl
lods
aam
lods
jnp
and
mov
lds
push
mov
dec
fidivl
cmpsb
jp
mov
pop
lds
or
sbb
xchg
inc
add
fistpll
inc
pmaxub
xchg
inc
lfence
imul
cs
lret
lret
xor
sub
or
stos
mov
fdivrl
push
pop
or
and
mov
sarb
fsts
mov
mov
mov
pop
add
ja
lret
pop
jns
lods
xor
dec
mov
mov
jnp
sbb
aad
jns
orl
adcb
popf
cmp
or
inc
lds
pushf
cmp
loop
orb
out
repz
lds
mov
movsl
xchg
inc
xchg
mov
xchg
in
sbb
push
add
int3
pop
pop
and
mov
cli
pop
push
rcr
js
mov
xor
int
mov
inc
adc
aam
rcrb
cmp
jecxz
popf
adc
or
aam
push
cs
pop
or
adc
nop
inc
in
inc
pop
jne
enter
add
dec
lock
cmp
fsubp
jbe
sbb
push
ljmp
dec
adc
push
lahf
xlat
sbbl
inc
push
and
addr16
aaa
cmp
mov
test
jne
dec
fisttpl
or
sub
mov
gs
rorb
fstpt
mov
mov
mov
mov
dec
sarb
pop
add
insb
push
mov
rorb
jae
insl
cld
sub
data16
jnp
fidivrs
movsl
push
adc
dec
sbb
stos
xor
jmp
jl
lret
jb
mov
ja
fcomp
aad
mov
leave
aam
data16
inc
push
stos
xor
xchg
loope
test
adc
pop
aad
mov
mov
pop
test
in
jae
aad
shrb
push
dec
add
stos
popf
mov
outsl
inc
in
add
icebp
and
std
xor
jne
lock
pop
mov
pop
add
fnstcw
xchg
or
mov
cmp
out
jae
sub
mov
jnp
mov
xor
pop
or
filds
push
negl
sbb
insb
inc
shl
insb
repz
out
shl
arpl
adc
arpl
into
xchg
add
jl
push
daa
mov
adc
fisttps
lret
lea
and
stos
int
shlb
sub
shlb
dec
or
scas
daa
and
ljmp
hlt
push
push
inc
test
and
mov
pop
mov
lods
cwtl
aas
mov
add
add
mov
das
mov
hlt
daa
test
pop
xchg
faddl
dec
pop
fs
mov
lods
push
std
cmp
lock
sub
xchg
xor
outsl
iret
sub
pop
push
or
mov
pusha
pop
sti
mov
lock
mov
clc
pop
in
cmpsl
mov
mov
mov
sbb
sti
and
xchg
dec
fidivrs
clc
xchg
cmc
gs
in
jecxz
jecxz
xchg
fwait
mov
mov
es
cli
fs
mov
jp
ljmp
lret
fstp
pop
icebp
add
mov
lock
lea
std
call
adcb
lock
push
mov
push
push
mov
pop
or
movl
inc
mov
dec
fiadds
into
enter
xor
push
in
cmp
fstpl
fildl
mov
sarb
negl
outsb
mov
inc
test
mov
xchg
orl
xor
div
push
add
lahf
cmp
jne
xchg
or
sub
xor
popa
fs
xchg
addb
enter
loopne
sarb
jnp
enter
fistps
test
hlt
negl
sbb
cmpsb
jge
outsl
pop
mov
pop
jg
sub
xor
leave
roll
stos
fnsave
test
xor
std
mov
and
aas
adc
xor
iret
xchg
xor
mov
pushf
insb
cmc
dec
or
movsb
pusha
faddp
xchg
je
jno
cs
mov
addl
push
imul
or
mov
push
sti
ja
adc
sub
push
iret
mov
mull
mov
ja
aad
fidivrs
or
subl
mov
popf
or
mov
lods
add
jg
gs
lret
outsb
out
sbb
or
mov
aam
lret
std
pop
stos
aas
rorb
aad
cmc
mov
cmpsb
pop
movb
xor
fsts
dec
pop
sti
mov
mov
cmp
mov
mov
sub
or
and
rolb
ficomps
cwtl
adc
and
sub
fcmovnbe
lcall
xchg
cmp
leave
aam
push
mov
fwait
test
mov
or
mov
in
adc
jp
mov
sbb
jg
ss
divb
cmp
jb
out
xchg
data16
sub
lret
icebp
add
icebp
jge
es
push
mov
cmp
sarl
jle
nop
mov
adc
mov
mov
pop
sub
rolb
pop
rolb
sbb
negb
mov
cmp
leave
data16
xor
lret
jnp
scas
xor
imul
cmp
mov
lea
icebp
jmp
cwtl
mov
scas
das
out
outsb
lock
aas
sahf
jecxz
adcb
jne
xor
mulb
xor
outsb
inc
xchg
xor
push
mov
adc
test
dec
inc
adc
push
aas
xchg
jne
cmc
cmpsl
or
cmp
adc
or
mov
pop
arpl
fildl
cmpb
mov
push
mov
scas
sub
lods
mov
mov
cmp
shlb
adc
imull
scas
stos
and
dec
adc
cmpsb
ss
mov
shlb
cmp
mov
pop
call
repz
int3
cld
cmpsl
sbb
pusha
jl
sbb
mov
insb
push
bound
mov
mov
cmp
xchg
cmp
aas
gs
jmp
mov
in
std
ret
mov
cmp
adc
jne
and
mov
mov
int
fmul
xchg
mov
mov
adc
fildl
mov
mov
push
std
fbld
cs
inc
or
mov
fstpt
das
in
and
add
mov
ds
mov
xchg
pop
ror
mov
mov
push
repz
add
in
into
cli
pop
inc
repz
and
mov
pop
call
cli
jecxz
fmuls
or
or
mov
mov
sub
cld
ss
mov
gs
xor
and
and
and
dec
je
inc
or
arpl
out
pop
cli
push
repnz
insl
mov
mov
inc
adc
mov
sahf
cmp
iret
mov
dec
popa
repnz
mov
and
int
cmp
mov
ss
or
icebp
fadds
sbb
sbb
out
stc
pop
sbb
adcb
lock
xchg
mov
repnz
sbb
fs
cmp
sbb
add
mov
shrb
adc
xlat
sbbb
mov
loopne
mov
scas
test
pushf
aaa
lea
popa
repz
pushf
pop
jnp
jb
jl
sbb
adcl
jge
push
test
test
int3
cmp
sbb
cmovo
incl
jle
inc
adc
fdiv
xor
pop
je
gs
sub
loop
inc
push
cs
jbe
xor
imul
or
fnstcw
loopne
lea
pandn
popl
add
inc
ljmp
es
cmpsb
je
fsts
lahf
ss
cli
cmpsb
cs
xor
mov
ficoms
aas
popa
aam
dec
shlb
push
aam
adc
lods
addl
sahf
mov
imul
ss
ret
dec
dec
adc
adc
pushf
inc
or
rdmsr
pushf
adc
sarb
mov
fs
jno
addr16
imul
jg
bound
scas
jl
addl
xchg
fldenv
jo
adcb
mov
lods
mov
arpl
loopne
in
imul
xchg
inc
sbb
pusha
cmc
mov
cld
pop
clc
lods
rcll
push
or
neg
jmp
dec
sbb
ds
aad
hlt
adc
fs
jecxz
jne
sahf
cmp
aas
cmpsb
xchg
sub
imul
cmp
xchg
fidivl
sub
adc
pop
mov
dec
push
inc
jnp
je
das
mov
popa
cmp
sarb
sbb
and
mov
mov
cmp
add
push
cmpsb
xor
dec
adc
pop
pop
xor
cmp
adc
push
pop
stc
sub
in
fidivrl
sbb
jns
xchg
dec
push
int3
loope
xor
mov
push
add
mov
call
mov
adc
add
pop
mov
cmp
push
add
and
jns
fstl
lds
sub
cmp
clc
pop
inc
in
test
push
aad
fs
add
xchg
insb
call
cli
lds
sub
rorl
sti
orb
loop
sub
jge
mov
scas
dec
adc
add
inc
out
push
leave
jno
in
sub
inc
les
inc
or
xchg
mov
sub
cmc
add
mov
mov
test
popa
sarb
cmp
push
int
gs
push
pop
adc
mov
inc
test
out
outsb
enter
mov
lds
jns
mov
ljmp
xchg
inc
xor
and
sub
xchg
sub
sbb
ret
push
pop
and
stc
pop
fnstsw
orl
call
dec
pop
fildll
test
mov
repnz
pop
rcll
nop
inc
jae
test
jbe
mov
clc
pop
das
lods
push
mov
bound
repz
roll
popa
call
lahf
gs
data16
andb
xchg
cmp
inc
or
test
or
fimull
mov
setno
movsl
movb
fcmovu
lret
mov
add
insb
in
cmp
daa
jb
fisttps
rolb
xor
sub
je
stc
pop
xchg
stos
inc
jno
addr16
cwtl
cs
xchg
lret
fs
sub
aas
or
lret
fimull
sbb
outsl
mov
jmp
xchg
mov
popf
mov
add
jle
sahf
cmp
popa
mov
jle
mov
es
and
je
gs
pop
xchg
fadds
mov
enter
and
xchg
jnp
push
mov
in
stos
xor
imul
divb
cld
pusha
loope
aam
js
cmp
dec
out
mov
push
sar
xor
test
gs
insl
mov
stc
pop
inc
stos
or
loope
loope
lret
jmp
lods
add
ret
lock
pop
mov
dec
or
mov
repnz
jg
int3
mov
push
icebp
pop
pusha
icebp
cmp
aad
or
inc
adc
ret
sub
outsl
pop
add
js
cmp
jmp
lods
inc
mov
inc
xlat
sub
sarb
testl
cmp
cltd
mov
xor
subb
loope
out
hlt
out
jge
adc
out
xchg
dec
xor
scas
inc
es
xlat
mov
jecxz
popa
imul
sub
xchg
pop
ds
call
xchg
movsb
jmp
jp
mov
mov
inc
mov
inc
adc
or
sub
fcomps
nop
inc
adc
adc
dec
aaa
mov
enter
lcall
mov
cltd
stc
arpl
in
jo
cmp
sub
gs
in
lock
inc
std
or
and
scas
cld
pop
pop
sbb
pop
dec
adcl
in
mov
dec
icebp
rcll
push
arpl
je
pop
mov
push
jp
xchg
jo
fadds
cli
call
jne
lods
adc
jecxz
into
xchg
cmpsl
icebp
rorb
and
daa
stos
jmp
cltd
inc
inc
or
mov
test
mov
and
inc
push
rorb
aam
fldt
mov
sbb
aaa
add
pop
pop
add
stos
out
jne
cs
push
out
xchg
aaa
sub
inc
mov
cmpsb
and
pushf
dec
mov
sub
sahf
pop
add
and
jo
addr16
push
outsl
mov
lret
or
dec
int3
cmc
xchg
cmp
sbb
dec
sub
dec
fwait
mov
dec
cltd
add
mov
xcrypt-ecb
cmpsl
mov
pop
callw
sub
xchg
mov
push
mov
addr16
repz
mov
std
pop
jae
stos
daa
test
sahf
pop
loopne
inc
out
pop
clc
pop
mov
in
repz
mov
sbb
sub
dec
or
cmp
push
idivl
push
or
xchg
inc
sub
outsb
enter
filds
jno
pop
add
arpl
jp
jnp
imul
mov
shrb
mov
call
and
mov
ret
in
mov
outsb
pop
cli
mov
inc
mov
rcrl
pusha
in
ret
xorb
aam
loope
mov
adc
dec
adc
fs
mov
mov
and
dec
psubsw
xor
call
repnz
cld
nop
inc
sbb
add
aaa
into
push
and
xor
testb
lock
jae
mov
data16
lea
iret
sbb
jne
sbb
je
ja
rcl
dec
push
add
rcll
pop
sti
and
jo
inc
icebp
arpl
cmp
mov
mov
imul
sbb
lcall
addr16
popl
ror
mov
dec
pop
test
ss
lea
sub
call
mov
lods
sti
pop
cs
xchg
fstpt
ret
or
jge
mov
xor
hlt
inc
or
cwtl
mov
addr16
inc
rcr
mov
mov
xchg
inc
outsb
je
push
xchg
jae
addl
cs
sub
aam
les
fnstcw
fldt
cmpsl
cli
cmp
pop
in
adc
lret
sbb
inc
adc
mov
adc
push
push
pushf
in
xor
out
dec
adc
push
rorb
jecxz
js
mov
mov
rol
mov
cmp
mov
mov
stos
fildl
orl
pop
aad
popl
mov
and
popf
inc
repz
dec
in
mov
idivl
or
cmpsl
aad
lock
ror
inc
sahf
ds
cmp
and
inc
xor
and
sbb
fisubl
fistpll
mov
xchg
inc
scas
leave
mov
pop
cmpsb
gs
fs
fidivl
insl
mov
aas
mov
xchg
cmp
int
sub
bound
into
xchg
mov
stos
ret
mov
clc
xchg
xor
adc
mov
mov
push
ds
or
xchg
mov
push
mov
dec
add
daa
mov
or
jo
dec
mov
or
fstpt
pop
das
cmpsl
inc
and
das
movb
mov
fmuls
cmp
mov
cs
movsl
mov
outsl
pop
test
icebp
jge
push
in
lds
xlat
clc
push
inc
out
fcompl
mov
das
lock
repz
cwtl
jb
lods
jmp
sti
fiaddl
loop
fs
xchg
out
add
mov
mov
pop
dec
ret
sub
fstpl
xchg
lods
movsb
sub
jge
cltd
orb
rorl
jno
jb
xchg
lock
fwait
mov
in
repz
int
xchg
inc
push
jmp
ljmp
fstp
jmp
loope,pt
and
popa
aad
orb
rorl
iret
insb
repnz
xchg
lock
sbb
adc
repnz
add
hlt
mov
out
adcb
mov
cmp
fdivrl
push
mull
loopne
xor
push
xchg
push
ror
fldt
jg
dec
cld
pop
cmp
xor
mov
shl
hlt
cmpsl
int
fsts
in
jae
and
cwtl
inc
stos
notl
mov
scas
cli
pusha
xor
pop
jmp
mov
sbb
mov
mov
aam
ja
jl
push
insb
jge
xchg
mov
push
lods
mov
call
in
mov
lock
sub
test
adcl
std
imul
out
pop
mov
jecxz
and
add
pop
mov
pop
mov
push
roll
movsl
sbb
cmpb
pushf
inc
inc
push
rclb
inc
call
sti
loop
xor
add
or
mov
mov
mov
inc
hlt
pop
push
xor
cmpl
sti
frstor
stc
push
ja
dec
or
rolb
mov
call
sbb
es
sbbl
lcall
popf
inc
push
mov
jmp
push
dec
es
fimuls
out
push
mov
add
in
movsl
cs
pop
ret
mov
negl
mov
ljmp
stos
test
js
pop
xor
rolb
hlt
push
jbe
aam
std
add
xchg
xor
jno
lcall
insb
int
inc
push
int
repz
ja
aam
rclb
lcall
imul
sti
loopne
jne
pop
adc
xchg
mov
sarl
cmpsb
pop
lret
pop
cmc
mov
xchg
inc
cmp
xor
fidivrl
daa
in
fistpl
nop
mov
jno
mov
mov
sahf
cmp
iret
sub
jno
push
in
dec
jb
outsb
movsb
insl
pop
mov
pop
stos
pop
cltd
aas
pop
mov
or
out
jbe
cs
push
sub
inc
mov
addl
psrlq
jae
push
jne
sub
mov
icebp
jbe
std
leave
out
dec
rclb
sbb
leave
ja
and
sub
ds
outsl
mov
fadds
mov
scas
push
ror
sbb
mov
sbb
je
in
test
fmul
pop
sub
lea
xor
fxch
xchg
jae
add
and
push
sbb
mulb
ja
push
in
enter
pop
not
jno
mov
or
add
sbb
jl
js
mov
testl
jg
cmp
xchg
cmp
adc
mov
gs
cmpsb
jne
sub
mov
xchg
pop
les
cs
adc
add
mov
rcrb
jbe
or
mov
sbb
test
inc
out
ss
adc
and
stos
sub
or
mov
loopne
jo
mov
iret
adc
pop
hlt
out
push
lock
mov
idivb
mov
imul
test
stos
sub
cwtl
and
xor
inc
adc
pop
cld
lods
inc
test
mov
jae
movsl
das
inc
outsl
out
push
push
push
lcall
and
mov
mov
movsb
xor
mov
cmp
imul
dec
rcrl
leave
nop
inc
shr
jo
xchg
int
cltd
xchg
sbb
jmp
or
sar
fst
adc
mov
dec
loop
jae
fwait
repz
std
cmp
sub
mov
cmp
inc
sbb
nop
cmp
dec
push
int3
jmp
decb
add
cltd
inc
dec
push
fadds
mov
sarb
cmpsb
mov
adc
fs
dec
leave
xchg
sub
cmp
dec
rcrl
xlat
loope
mov
add
dec
jbe
or
fwait
pop
add
jne
xchg
in
pop
xchg
jae
and
out
mov
scas
xor
jge
and
xchg
mov
mov
jnp
adc
sub
gs
xchg
inc
leave
jle
xor
adc
adc
pop
testl
ja
jmp
mov
hlt
push
add
sub
pop
scas
sti
sarl
mov
lcall
fwait
lods
cs
pop
out
bound
xchg
fisubs
mov
xchg
fs
out
mov
mov
out
push
jb
data16
rolb
lds
mov
jle
cmpb
pop
pop
sub
pop
jp
jp
mov
lcall
in
addl
lret
bound
and
rolb
loope
pop
xchg
inc
lahf
stos
cmp
inc
int
xchg
outsb
in
or
push
repnz
call
cmc
aam
adcb
mov
and
lds
add
jno
push
mov
adc
mov
cwtl
xchg
inc
or
ss
xor
pop
jp
jg
cld
addr16
pop
cltd
in
jne
sub
jl
cmp
adcb
int
xchg
inc
mov
xchg
out
mov
pop
out
mov
and
loope
lcall
aad
cs
mov
cmpsb
pop
lock
leave
mov
sti
div
pop
mov
pop
add
fiaddl
mov
into
jg
aas
inc
xchg
cmp
lods
jnp
cmpsb
inc
imul
mov
mov
ret
out
insl
cmp
mov
cmpsl
jns
mov
mov
mov
sbb
dec
pop
mov
pop
add
jo
lea
aad
repz
stc
pop
sbb
mov
mov
push
inc
lds
mov
xchg
push
cld
mov
mov
push
leave
jnp
pop
push
popf
inc
cmpsb
nop
pop
add
mov
mov
test
xchg
call
shrl
sti
std
xchg
sub
ds
mov
mov
adc
xor
push
inc
sub
and
xchg
push
fwait
dec
xlat
outsb
jle
mov
bound
mov
pop
idivl
fdivrs
scas
sub
sbb
stc
mov
movsl
shrb
rcll
add
xchg
loopne
lcall
orb
outsl
out
mov
test
mov
or
add
dec
push
bound
fidivl
out
add
mov
mov
mov
adcl
inc
adc
mov
xchg
fs
bound
jg
adc
sbb
test
sub
loopne
adc
and
sub
stos
sub
std
incb
ret
loop
inc
shlb
inc
adc
or
or
loopne
das
stos
int
add
bound
repnz
or
rol
dec
or
adc
aas
pop
mov
and
mov
jmp
add
lahf
cmp
shlb
mov
mov
loope
ja
test
xchg
loop
pop
push
stc
data16
aas
or
inc
or
lods
xchg
cmp
or
xchg
push
pop
sarl
pop
mov
push
jbe
sbb
loope
add
sbb
dec
push
pop
dec
mov
stc
xchg
push
dec
wrmsr
pushf
xor
and
sbb
mov
aaa
test
lret
cld
mov
fnsave
push
lods
inc
jo
xchg
mov
ret
sbb
out
cmp
inc
or
cmp
in
cwtl
pop
lea
lods
inc
loopne
xchg
sub
add
arpl
pop
mov
xchg
push
ljmp
cmpsl
or
aaa
stc
es
mov
fstpt
rcr
stc
into
std
dec
fildll
lock
push
data16
addl
sbb
xchg
mov
cmp
ljmp
jnp
clc
outsl
pushf
fidivs
nop
push
lods
shr
xchg
and
xor
adc
sbb
xchg
cmp
movb
in
sbb
mov
insb
lods
inc
pusha
lea
popa
mov
mov
adc
call
data16
popf
pop
xchg
cmpl
or
sub
mov
push
jle
shlb
lds
sbb
push
dec
jne
aaa
cmpsl
imul
popf
enter
mov
fnsave
pop
scas
inc
outsb
sti
xchg
mov
rcrl
repnz
ljmp
jb
cmp
in
xchg
pop
nop
daa
mov
scas
inc
fisttps
xchg
sub
int
xor
dec
push
jmp
test
or
xor
push
or
mov
fdivrl
sub
ficompl
fildll
sbbl
jg
lahf
ss
test
rclb
mov
jb
inc
rclb
stc
nop
outsb
lcall
shr
xchg
pop
loop
int3
adc
mov
xor
ljmp
jno
mov
fimull
or
lods
inc
pop
mov
bound
aam
addb
into
gs
pop
sahf
pop
test
xorl
or
std
sub
mov
dec
jl
into
fs
inc
sahf
xor
push
push
mov
cmp
mov
nop
out
sbb
jne
nop/reserved
sahf
popa
ss
mov
push
jmp
adc
rolb
jae
aaa
arpl
xchg
pop
xchg
sub
stos
scas
inc
fisttpll
xchg
sub
dec
xor
mov
addb
or
xor
daa
mov
xchg
fdivrl
sub
fstps
dec
loopne
in
sbbl
jle
lahf
ss
test
xchg
mov
cmp
inc
rcrl
stc
nop
insb
cltd
fbstp
lea
scas
mov
loopne
int3
adc
mov
xor
arpl
jno
mov
push
out
adc
aaa
jne
imul
xchg
sub
mov
psrld
addb
data16
in
test
xlat
or
sti
sub
rcrb
stc
dec
jnp
fisubrs
gs
inc
sahf
xor
push
adc
push
inc
jb
cmp
rclb
stc
nop
in
sbb
jbe
or
std
xchg
popf
pop
ss
mov
push
jmp
adc
roll
jae
xor
push
xchg
sub
test
xchg
sub
cld
int
cs
mov
lea
addb
or
xor
daa
mov
xchg
fdivl
sub
fcomps
dec
loope
jmp
sbb
ds
ss
xchg
ret
icebp
movsb
cmp
in
jb
inc
ret
cmp
nop
push
loopne
lret
scas
mov
fidivs
mov
xor
popa
xchg
cmp
ret
or
or
jbe
push
mov
scas
fdivl
addb
shlb
and
sahf
push
sub
mov
and
mov
stc
sub
rcrl
stc
dec
jp
fildll
int3
data16
std
mov
test
adc
cmp
mov
loopne
dec
or
scas
cmp
xchg
pushf
pop
ss
mov
push
jmp
rolb
jae
xor
lock
push
xchg
sub
cmpsl
scas
inc
flds
xchg
sub
sub
mov
mov
cmpb
imul
add
mov
repnz
mov
test
jne
sub
cli
xbegin
sbbl
jge
lahf
outsb
sahf
xchg
rorb
movsl
cmp
jecxz
jb
inc
ret
pop
ja
stc
nop
push
mov
scas
mov
fdivl
mov
cs
ljmp
jno
mov
pop
lock
es
ss
push
mov
bound
jmp
push
push
sub
mov
and
movsb
pop
movb
sub
ret
stc
dec
jp
loopne
push
pop
pushf
int3
addr16
std
mov
xchg
inc
jno
cmp
mov
nop
call
or
scas
cmp
xchg
pushf
pop
ss
mov
push
jmp
roll
jb
xor
icebp
xchg
push
nop
daa
test
inc
xlat
pop
xchg
cs
int3
arpl
pop
mov
lea
cmpl
or
xor
es
xchg
cs
stc
jecxz
out
pop
sbb
jle
sahf
xor
rorl
cmpsb
cmp
adc
pop
js
clc
cwtd
loop
lret
xchg
lods
mov
fidivl
or
push
mov
sub
jmp
ret
pop
mov
pop
icebp
adc
mov
push
mov
popa
stos
fdivl
das
shrb
pop
pop
sahf
push
xor
mov
and
movsl
push
les
cmc
daa
sub
pop
push
stc
inc
jns
loope
push
push
xor
dec
push
mov
cmp
popa
ret
ret
pop
cmc
mov
nop
out
loop
dec
pop
sbb
lcall
mov
stos
push
jmp
or
jb
das
pusha
pop
repnz
push
nop
daa
xorb
inc
aad
cwtl
das
aaa
test
sub
dec
mov
cmpl
or
xor
es
test
cs
stc
testl
dec
push
jl
sahf
xor
iret
mov
and
fidivl
inc
les
xor
gs
loop
leave
xchg
lods
mov
add
or
push
jmp
sarb
scas
loope
icebp
adc
mov
data16
inc
push
xchg
popa
test
lret
call
imul
lock
rorl
movsl
add
inc
and
stc
inc
ja
loope
adcb
leave
push
xor
dec
or
movsl
cmp
pusha
rol
repz
nop
in
loop
inc
push
sbb
cwtl
pop
ss
mov
push
jmp
or
or
pop
pop
repnz
dec
nop
daa
xorl
cwtl
das
xor
push
mov
mov
cmpl
or
das
out
es
addb
jno
cs
stc
ret
cmc
dec
jecxz
in
pop
pop
dec
push
jp
sahf
xor
int
mov
cmp
adc
pop
je
clc
fs
loop
movl
xor
or
push
mov
sub
pop
lea
mov
fistps
adc
mov
and
mov
lret
fdivs
cld
sub
imul
lock
rorl
movsl
add
inc
and
push
adc
stc
inc
jne
loope
data16
push
xor
dec
or
push
ds
movsl
cmp
pop
mov
stc
nop
in
loop
inc
add
add
mov
push
jmp
or
or
dec
nop
daa
subb
inc
roll
cwtl
das
xor
int3
arpl
push
mov
xchg
cmpl
or
sub
dec
adc
jo
cs
stc
ret
jecxz
in
pop
push
inc
push
js
sahf
xor
lret
mov
push
jno
inc
les
xor
arpl
push
lods
mov
add
or
push
mov
sub
pop
mov
mov
fstpl
push
iret
mov
bound
lods
inc
push
adcl
cmpsl
mov
or
call
imul
lock
iret
push
movsl
add
inc
and
push
adc
inc
jae
loope
adcb
lds
idivb
xchg
dec
or
cmp
pop
mov
stc
nop
jecxz
loop
inc
add
scas
xor
push
ss
mov
mov
test
jmp
pop
cmp
or
pop
repnz
daa
jg
jns
fisubs
xchg
cs
int3
arpl
push
mov
test
cmpl
or
sub
es
jle
inc
sub
stc
ret
loop
in
pop
push
inc
imul
imul
movsl
cmp
jno
ds
pop
jo
clc
arpl
push
lods
mov
call
or
sbb
jmp
mov
fcompl
or
das
ja
popa
and
mov
lret
aad
dec
pop
leave
call
push
dec
jnp
xchg
into
or
and
push
adc
inc
jb
loope
adcb
les
cmc
mov
xor
dec
or
cmp
pop
mov
stc
nop
loop
loop
inc
add
scas
xor
add
xchg
jmp
push
cmp
or
pop
pop
repnz
jle
jns
fstpl
xchg
cs
int3
arpl
inc
ljmp
cltd
or
sub
es
jge
inc
fldt
sub
stc
shl
loop
jecxz
pop
adc
ss
xor
enter
mov
fstp
jno
cmp
clc
bound
push
lods
mov
call
pop
aaa
sbb
jmp
mov
fistpl
or
mov
pusha
and
mov
lret
aam
dec
push
enter
daa
shrl
sbb
sahf
dec
jp
xchg
or
pop
sub
push
adc
inc
jno
loope
arpl
push
mov
xor
inc
or
cmp
pop
mov
stc
nop
loope
loop
inc
add
scas
xor
xchg
xchg
push
ss
mov
mov
cmpsb
push
jmp
add
jb
sub
repnz
daa
jge
jns
fcompl
xchg
cs
repnz
arpl
mov
addl
ja
shrl
cwtl
or
sub
es
jl
inc
fldt
sub
stc
shr
loop
loop
pop
adc
imul
addr16
xchg
mov
sbb
fidivl
cmp
pop
outsb
das
clc
popa
loope
roll
xchg
adc
xor
push
ss
jmp
mov
ficompl
or
mov
pop
and
sub
jae
bound
jmp
push
dec
js
xchg
lret
or
fucomi
sbb
arpl
inc
outsl
dec
loope
bound
push
mov
ss
xchg
inc
or
cmp
pop
fdivl
mov
cli
xchg
loopne
loop
add
mov
pop
add
test
push
in
add
or
push
pop
xacquire
sub
adc
popf
scas
inc
iret
sti
xchg
cs
dec
mov
addl
aam
or
daa
ljmp
jp
inc
fsubrl
sub
cli
mov
loope
sbb
inc
imul
xchg
xchg
lds
movsl
cmp
fcmovnu
jb
cmp
pop
insb
cs
nop
pusha
loope
mov
loopne
xchg
adc
xor
mov
es
ljmp
jno
stos
fcomps
or
es
sub
pop
pop
scas
inc
push
jge
sub
jb
arpl
ljmp
sbb
mov
test
daa
mov
cli
mov
sub
dec
pcmpgtb
inc
insl
dec
loope
popa
sbbb
mov
mov
push
inc
pop
mov
cmp
pop
fnsave
ret
pop
jmp
or
jns
add
mov
pop
add
subl
in
aad
cmp
or
push
pop
repnz
sub
jns
fcomps
cs
into
and
dec
jg
in
xorl
push
xchg
or
and
inc
js
inc
lret
sti
mov
loopne
sbb
imul
gs
xchg
ret
xchg
cmp
fcmovu
jae
cmp
pop
push
cli
xchg
pop
mov
js
sbbb
mov
call
add
sbb
jmp
test
shlb
pop
lock
lret
nop
daa
std
sub
pop
push
scas
inc
push
jnp
sub
jno
mov
mull
shrl
sbb
mov
cmpsb
push
mov
clc
mov
sub
dec
push
gs
aas
imul
pusha
sbbl
mov
mov
push
inc
push
rclb
movsl
cmp
pop
fidivs
mov
pop
out
cld
xchg
fimuls
loop
cmp
sbb
lea
iret
subb
in
aam
cmp
or
push
pop
repnz
sub
jns
xlat
fwait
mov
int
xchg
cs
into
and
jle
in
xorl
rcll
icebp
mov
sub
ja
inc
sub
sti
mov
filds
add
mov
push
ret
push
mov
movsl
cmp
jae
aaa
ret
pop
imul
js
jg
scas
mov
call
add
sbb
jmp
cmpl
mov
jb
test
pop
lock
lret
cld
daa
ja
pop
sbb
xchg
sub
jo
mov
ret
jmp
cmc
and
imul
lock
push
movsl
idivl
sub
cld
cmp
pop
sbbl
mov
mov
pop
inc
add
push
bound
jne
mov
pop
out
cld
xchg
fmull
jecxz
cmp
sbb
lea
iret
subb
in
rolb
ds
repz
and
inc
xchg
sub
jp
xlat
cltd
mov
lret
clc
cwtl
das
sub
into
gs
dec
mov
jle
in
xorl
imul
or
and
sub
ja
inc
cs
fs
mov
fldl
add
mov
pop
ret
push
mov
cmpsb
cmp
or
les
sub
xchg
pop
mov
jns
jge
scas
scas
fldl
xchg
push
shlb
int
xor
mov
and
cmpb
je
or
enter
es
pop
sbb
sub
mov
shr
repz
shrl
adc
mov
movsb
data16
idivb
lds
gs
cmp
jecxz
pop
sbbl
mov
mov
and
rclb
cmpsl
ds
push
fidivs
mov
pop
out
cld
xchg
fiaddl
in
cmp
sbb
mov
iret
jle
and
sar
ds
bnd
and
pop
repz
ja
jp
cwtl
mov
lret
das
sub
into
gs
dec
mov
jge
in
xorl
imul
or
and
sub
jbe
inc
cs
fs
mov
faddl
add
mov
pop
roll
cmp
or
les
sub
xchg
pop
mov
jns
jl
scas
lods
faddl
xchg
or
das
push
mov
and
cmpl
movsl
rcrl
add
nop
daa
stc
and
scas
inc
dec
js
sub
lahf
lret
mov
std
shr
repnz
shrl
adc
mov
mov
les
cmpsb
cmc
mov
fucomp
push
lds
gs
cmp
jecxz
pop
sbbl
mov
mov
and
add
push
xor
ds
push
fidivs
mov
pop
in
cld
xchg
flds
in
cmp
sbb
mov
jge
and
iret
ds
icebp
je
and
repz
mov
mov
leave
negb
gs
ds
xorl
imul
or
and
sub
jne
inc
frstor
cs
fs
mov
fildl
add
mov
pop
rolb
cmp
pop
xor
cli
xchg
pop
mov
jns
jnp
scas
lods
fildl
xchg
or
ss
sub
push
in
push
jg
shll
rcrl
add
xchg
sub
and
push
sbb
sub
sahf
leave
mov
sti
mov
shrl
adc
mov
mov
ret
repz
fsubp
adc
lds
data16
cmp
jecxz
pop
test
mov
mov
and
pop
cmpsl
ds
push
fbstp
mov
pop
jecxz
std
xchg
fadds
jnp
stc
sbb
mov
sarb
mov
popf
push
out
into
cld
ds
lock
and
repz
jne
jp
rcll
cwtl
das
es
jp
in
test
aam
int
or
and
sub
adc
adc
xchg
cs
gs
mov
fiaddl
add
mov
pop
mov
fbld
je
xor
pop
gs
sti
xchg
pop
xchg
jns
jp
mov
flds
xchg
or
aaa
into
sub
mov
pop
push
in
push
jge
shrl
iret
pop
icebp
add
xchg
sub
and
push
sbb
sub
popf
mov
stc
mov
shrl
adc
inc
insl
icebp
mov
rorb
icebp
mov
adc
lds
addr16
cmp
xchg
pop
test
mov
add
lods
mov
and
inc
pop
xor
ds
push
fbstp
mov
pop
loop
std
xchg
xlat
add
jnp
clc
sbb
mov
sarb
and
int
ds
out
jne
and
repz
xchg
push
push
popf
out
or
xor
pop
roll
stc
xchg
loopne
pop
mov
fistpll
repz
sarl
lds
in
add
stos
leave
add
fadd
rcll
in
mov
gs
outsl
xlat
repz
and
in
xchg
gs
push
mov
sbb
call
and
cmp
and
iret
push
cmp
je
test
or
sarb
mov
shl
mov
repnz
dec
mov
pop
mov
sub
ret
hlt
mov
scas
fwait
mov
cli
pop
adc
sub
pop
fcoml
add
pop
pop
inc
push
or
mov
cmp
inc
hlt
push
mov
je
in
jns
mov
push
cmp
inc
adcl
jge
or
loopne
lods
int3
subb
dec
dec
mov
push
test
sbb
jmp
mov
dec
xlat
mov
aas
push
sbb
dec
loopne
out
mov
adc
dec
ljmp
inc
scas
jl
cs
call
sti
add
push
push
dec
rcr
sub
pminsw
std
fstp
push
or
shrl
or
adc
xchg
add
add
cmp
add
mov
push
test
pop
jecxz
fiaddl
andl
sub
addl
shrl
inc
out
add
dec
and
dec
test
shll
jecxz
shrb
lds
and
jecxz
shlb
or
add
jle
sub
rolb
mov
inc
xor
push
jno
dec
sub
xlat
daa
jge
test
clc
movsb
movsl
push
add
inc
and
push
loope
xchg
mov
sub
and
ret
inc
mov
aam
add
add
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
push
jb
addr16
insl
pop
dec
popa
insl
and
je
jo
cmp
xor
and
cmp
popa
jae
gs
bound
fs
je
je
ds
gs
jb
jo
imul
addr16
insl
and
arpl
jo
imul
jae
jb
jo
imul
jo
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
add
push
in
rorb
cmp
outsb
out
and
and
mov
gs
lea
out
jns
repnz
out
adc
lods
xor
fs
jmp
xor
mov
cltd
dec
cmp
cmpl
jo
mov
inc
movsl
mov
mov
xchg
jl
jne
dec
subl
jnp
ss
pop
cmpsb
inc
lret
xor
add
movsb
cli
enter
mov
jmp
repz
cli
pop
jg
lods
pop
push
test
outsb
ljmp
jg
or
add
jmp
in
sbb
sub
dec
sbb
xchg
inc
sub
lock
popa
xor
and
int
inc
xor
xchg
push
mov
cmp
jmp
shlb
inc
add
xchg
sahf
std
adc
xchg
cmp
mov
jno
sbb
jne
sbb
lock
scas
push
test
xor
outsb
test
mov
lds
adc
add
aas
pop
xchg
sub
or
xchg
dec
xor
loop
and
xor
daa
push
lret
or
mov
xor
push
mov
pushf
aad
je
fsubs
jae
daa
cs
addb
cmp
mov
leave
dec
imul
mov
adc
outsl
lds
fs
mov
js,pt
lea
aaa
fildll
cltd
fsubrl
out
addl
mov
inc
nop
leave
and
fldcw
call
pop
inc
mov
bound
shrb
sub
dec
adc
mov
out
lret
pop
test
rclb
outsl
jl
pop
sbb
hlt
scas
mov
in
mov
loop
xchg
daa
pop
test
in
mov
pop
imul
cltd
movsb
pop
mov
inc
mov
in
xchg
movsl
subb
out
or
sarb
adc
outsb
daa
add
std
mov
xchg
cmpsb
bound
lds
test
inc
pop
xlat
xchg
addr16
add
stc
fldcw
fwait
sbb
stos
in
add
shlb
aas
ret
fwait
imul
or
xchg
addr16
pop
xchg
sbb
fwait
mov
mov
inc
adc
sahf
sbb
mov
cmp
jae
adc
dec
inc
push
pop
in
fs
push
ret
push
icebp
sbb
mov
cmp
sbb
push
xchg
icebp
outsb
dec
bound
xchg
push
jae
dec
inc
add
dec
jle
mov
aam
insb
mov
push
inc
in
fdivl
jae
cltd
cwtl
adc
mov
outsl
pusha
rolb
sub
push
loop
sbb
push
jl
sbb
mov
lock
adc
inc
incb
je
es
popl
cld
sub
into
push
pop
stos
adc
cmpsl
pop
int
fsts
ret
mul
cmp
mov
cmp
fidivl
mov
pop
inc
cli
not
push
les
out
add
mov
lea
loopne,pn
in
outsb
andl
sub
adc
arpl
push
lods
data16
inc
ror
mov
inc
sub
inc
sub
lods
test
sub
cmp
lret
xor
push
mov
push
pop
xor
mov
pushf
rcrl
dec
arpl
cmp
orb
shlb
mov
jg
add
xlat
xchg
jge
push
repnz
clc
pop
push
shrb
outsl
out
cs
sbb
jmp
inc
jecxz
rorl
mov
frstor
and
cmpsl
pop
cmp
int
cltd
push
inc
adc
mov
inc
mov
fldcw
sarl
sub
dec
push
push
loopne
clc
or
lock
pop
sti
push
movsl
inc
mov
adc
in
out
loope
int3
cmp
xor
data16
test
jp
cmp
mov
inc
cmp
dec
push
mov
push
lock
int
push
pop
movsb
lods
cmp
mov
aaa
mov
sbb
push
mov
mov
maxps
out
push
mov
dec
pushf
add
or
push
xor
xor
lret
cltd
fnsave
shll
data16
lds
xchg
push
inc
adc
mov
decb
push
add
jb
mov
lea
lret
shl
jmp
push
push
lahf
bound
push
shlb
sbb
push
pushf
cmp
xchg
pushf
mov
repz
mov
add
inc
cld
mov
insl
aam
loop
mov
sbb
sub
xor
ret
lds
lds
lret
xchg
out
mov
ret
mov
mov
cmp
cld
insl
stos
xorl
sbb
lret
xor
int
lret
cli
dec
popa
add
adc
aas
push
fdivrs
sti
and
into
and
test
pop
xor
rcll
faddl
pop
push
orl
out
mov
repz
add
in
jecxz
fstpl
rol
adc
push
out
and
lcall
scas
xor
add
adcl
sbb
hlt
loop
imul
lcall
gs
in
repnz
add
mov
ljmp
cmc
jmp
cmc
and
fwait
ss
aam
mov
gs
jecxz
mov
fmull
movsl
and
pop
adc
loope
adc
pop
add
ss
cmp
sub
cltd
fcompl
loop
leave
or
adc
mov
lods
inc
cwtl
les
divb
dec
data16
mov
aaa
sub
iret
pop
shrb
sub
or
ret
push
sbb
scas
push
pusha
adc
mov
pop
shrl
lods
test
push
sbb
fnstcw
int
icebp
lcall
pop
xor
movsl
fmull
cmp
fcmovb
sub
mov
les
leave
cmp
dec
mov
add
sbb
push
out
pop
insl
loope
shll
call
clc
ljmp
sbbb
adc
sbbl
adc
clc
adc
or
sbb
pop
pusha
jl
vpmadcsswd
sbb
popa
fucomi
jl
xchg
adcl
fucomp
jl
cltd
adcl
fucomip
jl
fwait
adcl
loope
jl
popf
adcl
inc
jge
lahf
ret
dec
inc
cmp
fldt
sti
nop
mov
mov
push
pop
xchg
test
lea
pop
cli
mov
loopne
lods
add
sub
ror
or
loope
pop
out
addr16
cmp
test
nop
mov
xor
pushf
imul
mov
aam
popf
cmp
pop
loopne
jp
das
pusha
cmp
sbb
leave
daa
psubusw
sti
js
push
cmp
mov
jg
push
adc
push
pushf
js
les
push
out
push
mov
jnp
dec
inc
ret
or
lahf
lea
jb
mov
mov
in
shll
add
or
scas
daa
mov
push
inc
xchg
push
into
dec
xchg
lods
nop
int
sbb
mov
sbb
das
pop
hlt
