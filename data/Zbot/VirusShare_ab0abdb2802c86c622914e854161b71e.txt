push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
movl
push
push
mov
push
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jae
mov
jmp
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
push
push
call
movl
pop
ret
int3
push
mov
movl
pop
ret
int3
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jae
mov
mov
movzwl
sar
cmp
jne
movl
mov
mov
movzwl
and
add
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
cmpl
je
movl
mov
mov
sub
shr
mov
mov
add
mov
mov
push
mov
push
mov
push
mov
push
mov
push
call
add
mov
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
jmp
mov
add
mov
mov
cmp
jae
movl
movl
mov
add
mov
mov
add
mov
add
mov
add
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
cmpl
jne
push
push
push
push
push
push
push
call
mov
cmpl
je
cmpl
jne
mov
jmp
mov
add
mov
xor
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
push
mov
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
pusha
mov
movl
mov
mov
lea
push
push
push
push
push
call
test
je
xor
jmp
lea
push
push
push
push
mov
push
call
test
jne
xor
jmp
movl
movl
movl
movl
movl
movl
movl
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
movl
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
mov
mov
mov
push
call
add
mov
push
mov
push
mov
add
push
call
add
mov
sub
push
mov
push
mov
push
call
add
mov
pop
mov
add
mov
call
pop
call
pop
call
pop
call
pop
jmp
mov
pop
ret
int3
int3
int3
add
add
cs
inc
add
je
cmp
arpl
fs
cmp
outsb
popa
fs
jns
push
inc
add
cli
outsb
popa
fs
jns
notb
add
fs
shll
insb
roll
outsb
lret
inc
add
add
jno
popa
ret
imul
jae
jb
popa
je
add
add
je
add
add
jae
imul
inc
add
add
je
dec
fs
dec
dec
popa
outsb
push
insb
gs
add
add
add
sbb
inc
add
inc
add
inc
add
add
cli
add
push
add
push
add
icebp
fs
cld
outsb
arpl
arpl
fnsave
add
outsb
popa
fs
bound
jno
inc
add
add
inc
add
lds
lret
imul
pop
fs
insb
add
add
je
fs
jae
je
add
je
fs
insb
add
dec
arpl
pop
ja
add
jb
cmp
inc
dec
insb
outsl
arpl
add
add
addr16
sbb
inc
or
add
add
insl
insl
popa
push
imul
inc
pop
insb
add
addr16
fistpl
push
fsubrl
int
add
mulb
jo
imul
inc
bound
xchg
insb
xor
push
fs
insb
add
add
je
jl
arpl
jno
gs
jo
add
add
add
movsb
pop
add
out
add
out
add
out
add
out
add
out
add
out
add
add
cs
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
jmp
add
cs
add
cs
add
cs
add
add
add
add
cs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cs
add
add
add
add
add
add
jmp
sub
add
jmp
outsb
add
popf
xor
push
and
jmp
sub
incb
repnz
add
leave
call
sub
add
jmp
insl
call
sbb
add
in
sub
add
sub
add
jmp
or
cli
jmp
sub
adc
jmp
pop
decb
add
push
add
pop
call
std
incl
call
std
pushl
addl
inc
std
call
std
call
std
inc
std
inc
std
call
in
add
inc
push
add
add
add
std
call
std
incl
std
call
incl
incl
call
call
incl
incl
add
mov
out
add
out
add
out
add
out
add
out
add
out
add
shrl
xchg
add
cs
movsl
add
out
add
out
add
add
cs
inc
out
add
out
add
out
add
pop
add
push
add
and
add
dec
and
cs
add
out
add
out
add
out
add
out
add
out
add
daa
add
outsb
shlb
fimull
arpl
shrl
cs
add
add
sub
add
mov
add
add
add
add
add
add
add
cs
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
jmp
add
jmp
sub
add
jmp
push
add
add
add
inc
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
cs
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
cs
add
jnp
add
push
popf
add
dec
popf
add
pop
popf
add
jmp
add
iret
pushf
add
add
add
and
add
inc
stos
add
stos
add
dec
stos
add
jae
add
add
sub
add
fwait
sub
add
fwait
sub
add
pushf
sub
add
add
add
add
pushf
sub
add
pushf
sub
add
pushf
sub
add
add
add
mov
sub
add
mov
sub
add
sub
add
add
add
sub
jle
fcmovb
cld
mov
add
mov
lcall
ljmp
push
cltd
incl
mov
decl
into
mov
mov
lcall
call
mov
add
xor
test
inc
mov
lcall
incl
mov
incl
jmp
jmp
test
add
addb
arpl
add
ja
add
jnp
add
and
add
cmp
add
mov
add
mov
add
mov
nop
add
pop
nop
add
cmp
add
sti
addb
incl
add
mov
add
add
add
add
pop
addb
pop
test
add
addb
iret
addb
jecxz
add
cs
mov
cs
xchg
add
jmp
add
or
add
adc
add
arpl
add
lods
xchg
add
mov
add
out
add
pause
add
adc
nop
add
xchg
nop
add
add
cs
nop
add
xor
mov
cs
mov
cs
mov
imul
add
inc
lea
add
sub
add
sub
add
mov
add
mov
add
mov
add
lea
add
add
add
add
lea
add
lea
add
mov
add
mov
add
mov
add
sub
add
sub
add
jnp
add
xchg
mov
add
stos
add
adc
add
int
add
leave
mov
add
xchg
add
rolb
mov
add
sbb
mov
add
xor
add
lret
rolb
xlat
mov
add
pop
mov
add
fwait
add
jns
add
mov
add
imul
add
mov
fwait
add
add
add
out
add
mov
mov
add
add
rcll
add
xchg
add
shll
add
pop
mov
add
add
pop
add
orb
orb
addb
addb
add
mov
add
add
pop
add
add
mov
add
add
mov
add
jmp
add
add
add
xchg
add
ret
cltd
add
icebp
cltd
add
cmc
add
scas
fistpl
add
jmp
lcall
xchg
lcall
popa
lcall
inc
fwait
add
adc
fwait
add
xlat
add
cs
cwtl
add
xlat
add
cmp
add
push
mov
add
test
add
cltd
mov
add
mull
add
fldenv
add
adc
mov
sub
add
sub
add
mov
sub
add
cmpsl
sub
add
lahf
sub
add
lahf
sub
add
sub
add
sub
add
sub
add
sub
add
mov
sub
add
mov
sub
add
cmp
ds
jmp
cli
mov
ds
call
call
jmp
jp
decl
add
add
lcall
mov
movsb
push
ds
jmp
call
xchg
call
mov
call
sar
out
lret
js
incl
pushl
sar
call
sar
call
add
pop
movsb
add
popf
mov
add
out
mov
add
in
mov
add
mov
add
and
add
push
mov
add
add
sbb
mov
add
mov
add
add
pop
movsb
add
jmp
add
daa
movsb
add
xlat
mov
add
frstor
add
mov
movsb
add
sub
ljmp
fwait
mov
add
icebp
mov
cs
cltd
add
and
add
gs
add
xchg
cwtl
add
sbbl
add
mov
cwtl
add
fstpl
add
cmpsl
cltd
add
cltd
add
jnp
add
dec
lcall
inc
cltd
add
xlat
add
cs
add
repz
scas
int3
add
add
add
fadds
add
add
add
adc
sub
add
xchg
sub
sbbb
sub
adc
sub
sbbb
cs
cs
sub
sub
cs
cs
cs
cs
sub
add
cs
cs
add
mov
add
mov
add
mov
add
mov
add
xlat
loop
add
fiaddl
add
ret
add
pop
mov
add
lahf
mov
add
lcall
mov
add
stc
jg
add
sub
add
dec
xchg
add
dec
lds
add
add
imul
add
add
inc
movsl
add
sub
xchg
add
jmp
scas
scas
ds
dec
mov
jecxz
inc
faddl
movsl
imul
push
jae
outsl
xchg
push
add
sub
pop
dec
pop
daa
cs
dec
cwtl
mov
xlat
mov
aam
icebp
inc
je
fimuls
or
and
insb
pop
xor
fucomp
xor
add
clc
xchg
jno
push
sahf
xor
fstps
adc
mov
or
rclb
push
in
mov
and
cmpsl
rcll
push
fwait
add
pop
cld
loope
mov
dec
loopne
and
dec
test
mov
imull
test
fcomp
sub
sbb
aas
movsl
xor
lahf
cwtl
std
jge
add
add
push
fsubrs
sub
add
push
xchg
push
or
mov
cmp
fnstsw
inc
dec
call
js
sub
outsl
xchg
mov
sub
sub
roll
jae
pop
jl
add
int3
std
imul
iret
aas
pop
add
andl
add
sti
adc
cmova
mov
imul
cs
pop
mov
jmp
lcall
cmp
mov
ss
stos
arpl
jmp
lcall
daa
add
dec
cs
add
lcall
sarb
fucomp
add
add
mov
rcrb
mov
cmp
in
jle
add
movsb
ja
jne
jmp
adc
mov
in
scas
outsl
xor
inc
in
dec
push
mov
and
jl
sbb
into
adc
js
cmp
adc
adc
in
dec
mov
arpl
add
add
jbe
dec
sub
adc
add
sahf
cmpsl
js
jno
std
es
fcmove
adc
sub
add
adc
xchg
inc
dec
add
adc
std
ljmp
pop
dec
addr16
rclb
push
add
sub
dec
and
rclb
stos
inc
add
add
add
cmpsb
std
call
gs
add
mov
std
andb
loopne
rclb
imul
jmp
or
adc
mov
shrb
sahf
cld
lahf
rclb
cs
mov
subl
push
jno
cmp
aas
jl
add
mov
sbb
mov
push
rcll
ds
add
add
cmp
loope
mov
aas
cmp
add
or
mov
pop
js
cmp
js
dec
ljmp
out
sbbb
xlat
add
cs
inc
fildl
add
out
add
addr16
inc
roll
add
add
in
jmp
add
add
add
add
in
in
add
add
xor
flds
add
add
add
add
add
in
jmp
add
add
scas
decl
insb
add
add
imul
insb
add
add
ljmp
add
add
ljmp
add
add
add
add
add
or
jmp
or
add
or
add
push
add
jmp
xor
add
xor
call
xor
mov
add
and
inc
add
xor
add
xor
call
xor
jo
fidivl
sbb
jmp
xor
mov
clc
xor
call
xor
nop
add
and
mov
jmp
dec
add
xor
add
xor
jmp
xor
jecxz
add
add
or
xchg
or
add
or
add
and
push
or
add
add
inc
or
push
or
add
push
or
inc
or
or
pop
or
add
add
jl
pop
or
add
add
or
add
add
insb
add
or
xlat
or
add
or
xlat
or
add
or
cs
or
cs
or
cs
add
cs
or
cs
or
cs
or
jmp
add
flds
cs
or
cs
xchg
cs
or
out
cmp
out
aam
flds
cs
push
out
sub
out
mov
out
or
out
mov
out
dec
cs
hlt
cs
add
add
or
add
or
add
add
add
or
add
or
add
or
clc
add
add
and
jmp
or
add
or
add
or
call
add
add
or
add
or
add
or
add
or
cli
add
add
or
jmp
or
add
or
dec
add
and
add
add
add
out
push
and
std
call
xor
ret
sub
add
xor
pop
add
sub
call
xor
loop
stc
sub
add
xor
stc
call
sub
add
xor
sbb
jmp
sub
call
add
add
mov
add
pop
or
xlat
pop
mov
xlat
pop
dec
add
or
add
pop
push
add
pop
add
je
sub
xchg
pop
jne
xchg
pop
xor
add
or
push
pop
add
and
add
add
add
inc
add
ljmp
pop
pop
add
pop
sbb
pop
or
add
std
push
add
pop
jge
pop
pop
cmp
add
std
push
add
push
insl
add
jmp
or
cs
or
cs
add
cs
or
cs
ret
cs
and
jmp
or
cs
add
cs
or
cs
add
jmp
or
cs
add
cs
pop
cs
sbb
out
xchg
cs
or
out
cmp
out
cs
add
add
or
add
or
add
or
jmp
add
add
or
call
or
add
add
add
cmp
call
or
clc
add
add
or
call
or
add
or
call
add
add
or
add
or
add
or
sbb
jmp
cs
call
and
lcall
add
add
dec
add
and
add
xor
lock
and
stc
call
and
mov
add
xor
and
jmp
xor
addb
and
filds
stc
sub
call
and
jno
add
cmp
pop
or
add
add
pop
or
add
add
adc
xlat
or
or
add
add
add
or
add
or
add
add
add
or
or
lcall
add
or
xchg
add
or
push
or
or
inc
add
add
add
push
or
add
add
jmp
add
or
jmp
or
cs
push
cs
or
jmp
push
cs
or
jmp
or
jmp
or
or
cs
add
jmp
or
cs
or
cs
or
cs
add
fdivr
or
jmp
or
cs
or
cs
or
jmp
stc
cld
sub
jmp
or
jmp
cld
insb
add
or
or
jmp
cld
cmp
jmp
or
jmp
or
jmp
or
or
add
sub
jmp
or
add
cld
cmp
jmp
or
add
or
clc
cld
xor
jmp
or
add
or
add
or
ds
xor
add
and
add
and
idiv
call
add
jmp
and
mov
sti
loop
call
data16
and
xchg
add
xor
xchg
jmp
xor
add
and
out
push
xor
cmc
call
and
roll
xor
add
push
pop
add
push
pop
add
dec
mov
add
inc
fadds
add
aad
add
pop
push
add
fcomps
add
add
fcomps
add
aad
add
push
cmp
pop
fdivrs
pop
fdivrs
add
aam
add
push
adc
xlat
push
add
aam
add
xlat
or
xlat
mov
xlat
dec
add
push
add
xchg
push
add
xlat
add
fs
sub
xchg
je
xchg
xor
push
aam
add
or
add
jmp
add
jmp
sti
add
jmp
sti
inc
cs
or
cs
sti
sbb
jmp
or
jmp
sti
cmp
jmp
or
cs
sti
sub
jmp
sti
or
jmp
sti
dec
cs
or
cs
sti
adc
int3
sti
ret
add
mov
and
jmp
sti
xor
jmp
clc
or
call
cli
mov
call
sti
lods
call
cli
or
stc
or
add
sti
je
jmp
cli
cwtl
add
or
jmp
sti
and
jmp
or
add
sti
adc
jmp
sti
add
add
jmp
sti
hlt
call
or
add
sti
clc
call
sti
adc
jmp
call
fs
add
jmp
inc
sbb
jmp
xor
jp
jmp
and
add
es
add
adc
repnz
call
es
add
add
add
push
add
in
add
in
add
es
call
lds
add
les
add
mov
add
movsl
inc
add
movsb
roll
stc
xor
push
sub
add
xor
push
sub
lldt
add
mov
add
stc
inc
add
add
pop
add
das
pop
add
dec
pop
and
push
pop
add
push
pop
or
dec
pop
add
add
add
stc
addb
stc
call
stc
add
sbb
addb
stc
sbb
cld
clc
add
clc
push
add
stc
add
or
pusha
add
clc
add
clc
add
das
stc
add
lret
clc
xor
sar
add
aad
or
int
add
clc
rolb
clc
call
add
add
loope
pop
loopne,pn
push
roll
add
cs
add
add
lods
add
xlat
add
fiadds
add
flds
add
push
adc
shl
push
inc
xorl
scas
insl
sub
xlat
push
lods
test
pop
cmp
test
jnp
xor
fdivl
push
push
lods
rol
sarl
aaa
sbb
mov
fisubs
mov
sahf
mov
and
mov
xchg
mov
inc
inc
out
add
add
add
mov
mov
fwait
add
int
mov
das
hlt
maxps
arpl
and
aam
xor
and
or
hlt
cmp
inc
into
mov
push
xchg
mov
es
and
xchg
pushf
mov
inc
lahf
mov
stos
pushf
mov
adc
das
stc
inc
incl
add
sti
lods
rorb
cltd
test
adc
das
imul
jle
add
and
xchg
push
sbbb
iret
out
rorb
sub
cmc
add
lds
das
fcomps
pop
pop
xchg
inc
pusha
rcrl
mov
in
stos
jbe
fsubrl
cwtl
adc
mov
pusha
test
jno
rclb
fiaddl
add
roll
aad
decl
ja
notb
xor
push
jg
sub
jle
fs
call
cld
pop
imul
pop
sbb
psllw
add
ljmp
sbb
or
push
lcall
sbb
dec
mov
bound
aaa
rorl
add
jmp
dec
cltd
adc
mov
push
mov
fdivrs
int3
mov
shrl
popf
outsb
xor
dec
lods
jl
call
add
call
aaa
or
add
or
and
ja
nop
push
dec
shrb
popa
jo
int3
fiadds
add
fcoms
flds
imul
adc
or
add
sub
outsb
stc
xchg
xchg
aad
mov
pop
mov
lcall
shlb
push
icebp
fstpt
bound
ret
cmp
sub
push
sarb
lret
decl
imul
sarb
cmpsb
add
add
adc
das
ljmp
or
and
sbbb
adc
leave
or
pop
js
dec
test
sub
andl
xchg
enter
jns
mov
pop
shll
mov
sbb
add
mov
xor
mov
xor
mov
test
in
daa
cltd
jg
add
add
aas
add
xchg
push
inc
pop
xor
mov
inc
mov
bound
mov
pop
sti
lret
ljmp
and
dec
add
sub
mov
sbb
dec
addr16
mov
xlat
cmpsb
sub
cmpsl
stos
pop
cltd
jae
fwait
pop
pop
pop
in
rclb
repz
add
negl
insb
mov
jb
add
cmc
arpl
mov
out
xchg
bnd
in
cmpsl
fdivrl
fisttpl
sti
xchg
roll
out
jae
push
push
iret
mov
divb
xor
sbb
sbb
mov
cld
add
adc
add
pusha
push
gs
scas
data16
clc
test
imul
insb
push
or
dec
addl
jae
cmp
cmpsw
fcom
pop
rolb
imul
and
rclb
fisubrs
or
and
xchg
mov
call
xor
mov
int3
sarl
je
jb
std
jle
mov
aam
rolb
add
aam
jnp
cs
and
dec
mov
popa
jb
ljmp
xchg
or
add
add
flds
add
sbb
ss
lcall
mov
ja
add
fs
insl
outsl
aaa
loope
xlat
mov
mov
mov
fcmovnbe
leave
mov
loop
in
fwait
xchg
sbb
add
add
gs
jle
icebp
out
cmp
and
inc
pop
inc
mov
scas
rclb
nop
cmpsb
jecxz
jg
cld
scas
imul
and
adc
xchg
sub
push
fcmovb
movb
mov
and
je
fcompl
add
ret
int
add
scas
cmpsb
ret
add
mov
pop
adcb
rcrl
push
jbe
ja
cmp
sbb
adc
and
fistps
push
push
in
stc
clc
pop
hlt
jg,pt
mov
pushf
cld
jecxz
aad
std
adc
jnp
orb
cmp
in
jae
or
push
push
mov
add
pop
in
cli
inc
lock
nop
out
dec
ret
push
fildl
inc
adc
lea
cmp
dec
mov
and
xchg
or
add
pop
psllw
inc
cmp
cli
outsb
std
psraw
sbb
mov
mov
lret
xchg
xchg
mov
xlat
fisubs
int3
movl
cli
cmc
add
add
mov
push
inc
clc
inc
dec
pop
mov
pop
adc
and
cmp
cmp
xchg
mov
or
cmpl
mov
cmpsl
cmp
cmp
aas
lcall
or
jg
push
fdivp
dec
jle
mov
gs
and
pop
push
and
test
or
int3
in
adc
pop
adcb
xchg
dec
fsubrl
mull
mov
push
xor
std
pusha
jge
rolb
iret
stc
mov
add
jp
and
mov
jecxz
sbb
jo
shr
popa
sbb
fildll
cli
cmp
in
dec
sub
test
jmp
add
add
test
dec
shrl
test
fildl
imul
adc
js
popf
xchg
push
mov
add
popa
stos
and
and
add
xlat
push
pop
in
lea
hlt
test
adc
cmp
cs
add
mov
and
fwait
insl
add
jbe
fstl
mov
test
stc
lods
xorl
pushf
adc
push
test
inc
push
lret
push
rcll
sbb
clc
iret
add
mov
mov
jg
jbe
push
lret
or
dec
mov
xchg
sbb
pushf
jl
pop
dec
popa
sub
iret
mov
ret
iret
jne
xchg
subb
cltd
out
popa
mov
jne
stos
pop
push
in
sbb
stc
xor
xchg
aaa
sub
add
add
pop
xor
or
imul
inc
jp
dec
pop
arpl
cli
lret
add
int3
stc
cmpb
dec
ljmp
mov
ds
add
adc
sbb
out
or
addr16
push
jle
cmpl
mov
dec
mov
mov
cwtl
adc
mov
addr16
pop
cld
push
in
int
cld
scas
sbb
out
sub
cs
testl
push
int3
int3
movsl
lea
add
mov
xor
mov
cmpb
jno
xchg
dec
orb
push
add
adc
or
pop
and
shrb
aas
aas
lea
mov
mov
jmp
lret
add
add
out
or
mov
sub
orl
xor
iret
lock
pop
add
inc
mov
imul
lret
fistl
or
lods
ja
icebp
mov
outsb
aaa
js
sahf
sbb
sbb
icebp
mov
push
xchg
jmp
sub
add
stos
add
jle
add
roll
add
add
fs
cmp
push
lahf
mov
or
mov
pop
repz
or
or
fldenv
sbb
int3
xchg
sbb
ss
push
adc
push
push
add
push
lods
sbb
push
push
adc
sub
and
mov
dec
dec
outsl
adc
xor
fucom
sti
adc
cmp
add
mov
cmp
leave
push
cmp
cmp
roll
mov
ds
jge
add
add
sbb
call
inc
push
xor
loope
xor
shll
cmp
rdpmc
jns
sub
stos
addr16
daa
ds
sub
and
out
add
add
and
outsl
xor
mov
sub
push
sub
jno
add
mov
lods
leave
cmc
cs
lea
jno
pop
push
jae
mov
jb
movsl
xchg
ja
dec
push
jbe
jno
je
xchg
aad
aas
mov
dec
jg
or
jl
cmc
jg
push
sbb
std
and
or
jnp
add
cs
in
mov
add
mov
cli
adc
test
add
push
xor
sar
repnz
sahf
cmp
int3
int
insl
int
push
jmp
rorl
jle
lret
and
or
xlat
data16
adc
jne
xor
imul
pop
jp
fstps
add
add
mov
imul
loopne
push
cmc
int3
outsl
mov
movd
adc
mov
mov
add
add
sarl
dec
jb
xor
or
ljmp
std
dec
push
cs
push
push
outsl
test
mov
xchg
inc
pop
ljmp
pop
dec
jmp
pop
imul
add
add
mov
mov
ja
mov
cmpsb
movsb
in
movsb
rorl
stos
fsubp
int
pop
lcall
add
movsl
lods
jmp
pushf
stc
sub
pop
adc
sar
addr16
xchg
nop
das
push
incl
xor
sti
stos
test
pop
clc
mov
test
repnz
add
add
lock
inc
icebp
pop
repnz
dec
inc
vpavgw
dec
testb
fnstenv
pop
js
divl
fidivl
das
fisubs
insl
fistpll
jae
or
add
fsubr
aam
xor
shlb
sarl
in
loop
and
xchg
ja
lds
nop
pushf
les
fld
add
add
dec
push
ret
xchg
ret
cmc
adc
shr
dec
lret
sarb
sbb
enter
or
mov
loop
int
rol
iret
xor
scas
xchg
js
insl
nop
and
xchg
push
movsl
call
xchg
lods
dec
fs
lds
xchg
mov
cs
mov
test
adc
mov
add
fwait
lret
xchg
aad
jbe
insb
jl
repz
out
mov
pusha
mov
iret
test
or
dec
add
push
in
cmpsb
push
pop
lcall
jae
scas
pop
fstp
scas
lcall
mov
sbb
test
mov
loop
jp,pn
outsl
add
shlb
jmp
add
shl
sub
les
fistps
stos
std
pop
call
pop
sub
sbbb
mov
popa
xchg
mov
fsubs
xor
inc
sbb
out
insl
jo
lods
outsl
in
arpl
je
jae
push
divl
and
jnp
dec
and
lods
fnsave
xchg
lahf
jns
mov
push
add
add
ret
push
test
out
shll
add
ja
lret
aaa
push
retw
adc
push
mov
aad
lds
and
xchg
jb
arpl
jge
mov
cmp
xlat
xor
into
dec
mov
xlat
loopne
cmp
sbb
jge
call
mov
insl
cmp
jl
mov
add
int
sbb
hlt
and
pop
aas
pop
pop
pop
xchg
test
sbb
or
pop
mov
lahf
xor
xchg
add
cld
xchg
or
xchg
mov
pop
test
in
xchg
xor
fisttpll
test
in
mov
push
push
lcall
jg
push
clc
cmpsb
je
lock
mov
pop
enter
xor
dec
jg
add
mov
das
mov
lahf
xor
adc
lahf
out
sub
pop
hlt
cld
mov
movsl
jl
adc
imul
movsl
out
hlt
cmpsl
dec
xor
lods
mov
inc
imul
xchg
jle
sbb
ret
add
add
jns
mov
enter
ret
adc
jg
cmpl
in
adc
mov
std
bsr
arpl
push
repz
pop
push
dec
add
fprem
pop
fdivrl
js
mov
or
shll
scas
and
addr16
cld
out
adc
add
push
testl
dec
xchg
int3
dec
popf
jmp
clc
or
add
pop
imul
ret
fistps
rcrl
push
sbb
movsb
xor
xor
test
push
jne
dec
daa
push
lret
lods
iret
ficomps
inc
sarl
or
mov
inc
les
mov
mull
or
inc
lods
cld
pop
jmp
jae
int
test
cltd
xchg
hlt
lahf
mov
test
das
fistpl
xchg
and
loopne
jnp
mov
xorl
xchg
push
nop
es
pushf
add
dec
cmp
andl
int3
pop
divb
mov
add
pop
inc
pop
mov
lods
scas
cmp
fidivs
push
cmp
xchg
cld
bound
js
iret
inc
rolb
cld
cld
shr
call
xchg
negl
xchg
lahf
pop
cmc
insl
and
sbb
imul
cmc
or
ficomps
jle
ret
mov
out
inc
add
popf
mov
mov
arpl
es
and
add
lret
es
mov
aam
pop
adc
lock
movsl
push
xchg
mov
lds
xchg
scas
lods
sub
mull
data16
jp
clc
popa
iret
mov
les
sbb
nop
ljmp
mov
jnp
call
into
inc
clc
add
add
sub
out
adc
jge
fstps
jge
bound
add
sbb
push
fwait
bound
mov
pop
xor
dec
inc
shr
cwtl
aam
pop
mov
fchs
xor
aas
add
lods
je
xchg
dec
pushf
cli
mov
inc
inc
popa
icebp
xorb
lods
sbb
and
xchg
mov
inc
adc
sub
in
push
jp
js
xchg
sahf
hlt
les
inc
dec
jecxz
mov
push
sbb
inc
pop
and
lds
add
xlat
mov
mov
into
push
sub
push
or
adc
add
scas
insb
jge
add
stos
add
push
add
add
std
mov
mov
ljmp
inc
ret
es
xorb
jae
dec
imul
sub
lock
xlat
repz
sub
ljmp
cmp
nop
or
xor
out
ja
adc
movsb
mov
cwtl
push
push
jg
mov
sbb
out
and
add
or
fs
std
fcomip
add
jno
rcrl
fidivrs
aam
lcall
push
aam
test
inc
push
cwtl
push
mov
test
sub
clc
jp
fmul
in
add
insb
lods
or
sbb
and
sbb
adc
in
in
jecxz
jb
add
rorl
roll
lods
test
add
add
mov
loop
test
add
pop
leave
sti
das
stc
inc
in
insb
jecxz
mov
or
pop
cs
lret
push
aam
scas
cs
cmp
ja
mov
imulb
cmpsl
pop
outsl
movsl
xor
push
mov
fcomp
out
call
mov
sbb
and
add
add
rolb
xchg
enter
shll
stos
mov
jb
cmpsl
movsb
jne
xor
imul
push
add
stc
cli
dec
cli
cmpsl
mov
mov
or
inc
add
sbb
rcrl
mov
pop
mov
es
enter
lds
mov
imul
mov
mov
add
push
inc
dec
jb
out
std
imul
cmp
mov
and
pop
mov
xchg
outsl
push
sahf
and
xchg
inc
in
lret
mov
sbb
sub
xlat
lods
push
and
rolb
sub
sub
pop
cmp
daa
leave
mov
add
add
inc
stos
xchg
wrmsr
or
or
aam
das
or
shlb
cmp
mov
es
push
mov
mov
std
sbbb
sbb
les
outsl
mov
pop
sahf
or
pop
into
lcall
xor
sbb
adc
jne
out
add
add
mov
or
stos
test
or
stos
popf
jge
lods
daa
std
popf
mov
movsl
xchg
inc
or
repnz
sbb
push
pop
fbld
or
jno
or
out
mov
sub
pop
mov
dec
int3
push
push
fildll
pop
out
stc
or
mov
aad
into
mov
jle
mov
add
mov
push
mov
addr16
test
sbb
xor
dec
outsl
imull
aam
std
sbb
push
jns
xchg
and
insl
aas
and
jecxz
sbb
neg
and
inc
cld
sbb
mov
divl
cs
inc
sub
je
and
jo
or
outsl
pop
mov
add
xor
sar
leave
repz
aas
adc
sahf
mov
lret
cs
ret
and
adc
sbb
xchg
and
cli
add
or
sbb
dec
and
popa
or
mov
adc
jae
pop
in
jno
call
test
enter
xchg
jo
int3
pop
fisubrs
pop
rcrl
dec
cmp
fmulp
lods
sbb
add
add
mov
xchg
jae
sahf
add
xor
xlat
mov
popl
gs
pushw
mov
icebp
and
sbb
add
notl
jmp
sub
add
ret
xor
pusha
cltd
adc
divl
and
dec
fbld
das
fildl
sbb
js
fsubrl
imul
out
inc
push
push
push
popl
add
adc
mov
sbb
cmpsb
jmp
and
rorl
fisubs
jae
out
add
jns
xchg
mov
push
mov
and
inc
or
roll
xchg
cmp
push
jne
inc
das
sbb
xchg
jmp
xor
inc
add
xchg
popa
cmpb
ret
arpl
lds
xlat
repz
add
add
cmp
mov
or
sarb
movsb
push
fxch
jmp
dec
or
dec
jle
test
jnp
iret
int
adc
mov
adc
jo
lea
sub
push
inc
das
out
sub
push
addl
addr16
xchg
lret
pop
pop
sbb
insb
sbb
inc
aas
filds
add
lret
sahf
cs
and
inc
test
push
and
pushf
loope
mov
movb
in
inc
scas
aam
cmp
int3
inc
lods
xor
pop
jo
push
mov
pop
xchg
mov
or
pop
cmp
out
cmp
pop
pushf
dec
xor
fucomip
sbb
xor
repnz
jns
sarl
xchg
ret
es
lahf
add
add
movsl
test
mov
ficoms
sub
dec
sar
mov
inc
in
sub
mov
xor
jge
dec
xor
pop
cmc
test
dec
loopne
sbbb
rcl
jae
push
shll
mov
mull
int
cmp
test
fnstsw
add
dec
mov
or
sbb
pop
lea
lea
int3
cmpsb
dec
es
push
adc
test
add
sub
push
test
xor
addl
add
pop
fidivs
fistps
or
or
dec
pop
cmpsl
dec
xchg
inc
out
jmp
call
mov
fiaddl
rcll
pusha
inc
xchg
mov
add
jle
and
mov
cmp
sub
sub
dec
sub
pop
push
cmp
in
fnstenv
add
cmc
je
mov
setae
push
aam
decb
iret
mov
xchg
jl
mov
cmp
pop
sub
push
js
adc
cwtl
dec
xor
add
fiadds
leave
divl
lret
mov
outsl
pop
dec
or
aas
int
mov
adc
cmp
add
shrb
iret
add
inc
loope
in
stos
mov
xchg
mov
mov
outsl
in
pop
test
fcomp
push
dec
push
arpl
jge
push
sbb
cs
jnp
cmp
xchg
jge
jno
add
add
or
lds
cmpsl
lcall
mov
xchg
rcr
inc
sbb
out
adc
sub
dec
mov
sbb
dec
sub
shll
repnz
add
dec
xchg
push
repz
push
rolb
mov
adc
scas
cmpsb
xor
lahf
push
add
std
add
add
push
imul
push
pop
cmp
pop
andl
and
decl
aam
inc
scas
out
imul
rolb
insb
cwtl
sub
stos
arpl
jmp
mov
mov
fwait
mov
mov
sbb
ja
or
mov
ljmp
stc
mov
push
mov
push
push
add
add
cld
mov
and
push
jno
pop
inc
jp
mov
add
sbb
or
cltd
das
inc
xor
mov
mov
in
xchg
mov
cld
rol
mov
adc
push
test
out
mov
in
es
ret
bound
xor
pop
das
repz
add
sub
test
clc
mov
jg
sbb
pop
push
dec
movsl
dec
sbb
gs
ljmp
ret
sub
mov
and
add
cld
add
mov
jle
push
and
outsb
lret
test
cmp
pop
ja
pop
jmp
pop
hlt
cmp
or
add
jbe
or
sahf
lock
add
lret
xor
jb
add
add
shrb
xchg
outsb
aad
mov
leave
ret
outsl
jl
xchg
dec
push
test
push
cmp
fwait
xlat
out
loope
cwtl
clc
fs
pop
xchg
push
jge
sub
cmp
fisubrs
popa
ja
mov
out
or
add
add
add
add
icebp
out
xchg
cwtl
adc
adc
fistps
mov
xor
pop
mov
in
out
dec
inc
into
lock
add
xchg
mov
xchg
inc
out
cli
lods
test
mov
cmp
jge
pop
mov
test
pop
xor
mov
jbe
mov
test
add
mov
add
mov
popf
pop
out
in
or
jmp
or
leave
movsl
loope
out
repz
out
pop
lock
iret
lahf
mov
fnsave
pinsrw
xchg
mov
xchg
idivb
aad
push
jp
mov
cmp
data16
cmp
std
jbe
jno
cld
xor
sbb
sahf
adc
lds
mov
add
jp
push
dec
fmuls
ss
int3
or
out
lods
adc
xor
loop
leave
std
vpaddsw
gs
fmulp
cmpsl
outsl
jmp
ret
sbb
nop
mov
sbb
mov
mov
addr16
rcll
mov
test
jecxz
sar
mov
and
add
fbld
xor
sti
dec
xor
adc
cld
pop
mov
lret
xor
and
cwtl
es
scas
add
dec
testb
roll
inc
inc
pop
pop
jae
dec
out
xchg
mov
lcall
ds
cs
or
test
loop
cmp
frstor
fcompl
add
loopne
xchg
cmp
xor
stos
cli
add
inc
pop
and
das
insl
out
sbb
cmc
xor
out
hlt
icebp
movsb
fldl2t
mov
pop
call
xor
add
push
sbb
sahf
fmuls
ljmp
sub
sub
fwait
xor
mov
dec
mov
jno
jb
add
add
into
cld
lar
mov
les
scas
mov
cmc
les
dec
cwtl
inc
push
pop
fwait
or
xchg
int
lea
dec
jmp
sbb
dec
dec
pop
aaa
popa
pop
cwtl
mov
pop
divl
cmc
jb
push
lahf
mov
les
in
mov
imul
popf
test
add
add
add
fs
cmp
aaa
cmp
push
lock
mov
sbb
cld
stc
inc
sub
fmul
sub
xchg
sub
adc
inc
shll
repz
lret
test
xor
sub
sbbb
ret
std
cmc
scas
add
mov
adc
outsl
ljmp
add
add
fwait
push
dec
xor
jl
cmpsb
bnd
jg
jbe
sar
daa
imul
gs
xchg
pop
fwait
push
mov
push
add
cmpb
ret
movsb
shrb
pop
cli
cmp
ja
lahf
pop
outsb
data16
lods
jp
bound
dec
xorb
mov
xchg
sbb
imul
imul
mov
push
add
add
arpl
out
cmp
adc
adc
testb
pushf
and
test
movsl
adc
fisubrs
and
icebp
mov
das
repz
jbe
inc
aas
inc
out
sub
idivb
cld
stos
movsl
cs
popf
mov
jae
mov
cmp
mov
pushl
xchg
bound
gs
jl
and
xchg
inc
pop
outsl
shl
push
outsb
or
mov
fcomps
mov
test
push
addr16
jae
enter
scas
rcrb
lock
les
pop
jp
scas
cmp
arpl
cltd
add
mov
pop
loopne
outsb
add
das
jecxz
mov
orl
add
add
pop
cld
push
test
inc
repz
and
clc
mov
mov
adc
insl
in
outsl
dec
adc
jg
push
hlt
pop
sbb
sti
iret
nop
mov
call
insb
add
sbb
mov
cwtl
lock
cmp
fcoms
jnp
cs
xor
daa
push
test
add
cmp
add
mov
scas
lods
fisubl
mov
jmp
aad
mov
fldenv
popa
xor
pop
mov
loope
ljmp
cltd
mov
ss
inc
rcll
mov
fiadds
loope
call
jmp
sarl
insb
loopne
stc
test
test
jb
add
fldcw
clc
rolb
cmp
push
ja
packuswb
loopne
outsb
pop
test
adc
rolb
add
pop
sub
outsl
pushf
test
cmp
or
and
add
enter
and
pop
dec
lods
push
js
sub
cmp
jle
xlat
lret
sbb
fisttpl
add
add
daa
add
out
sar
xchg
sahf
hlt
jg
dec
js
push
ficomps
hlt
sbb
testb
and
mov
or
sub
push
addl
fucomip
insb
iret
mov
dec
sahf
mov
sbb
pop
addr16
add
dec
mov
in
test
push
insb
scas
lahf
pushf
add
stc
add
add
mov
pop
outsb
adc
ss
mov
push
scas
loope
incb
je
and
jge
and
shll
lret
pushf
pop
or
cmp
push
mov
mov
mov
test
pop
loop
jle
push
lahf
sbb
outsl
mov
push
aad
mov
orl
mov
add
sarl
orb
rcl
push
mov
movsl
fldt
loope
fwait
popl
add
in
sbb
add
jp
pause
xchg
testl
nop
das
rclb
xor
fstl
pop
inc
jno
imul
sbb
cmp
into
filds
add
movsl
stos
sti
mov
xor
leave
adc
mov
push
dec
push
popa
mov
cmpsb
fldenv
or
ja
arpl
enter
mov
add
xchg
pop
ror
sti
ss
test
pop
xchg
jle
test
in
enter
pop
sbb
test
add
inc
imul
decl
jnp
popa
xor
fwait
sahf
add
add
and
lds
in
xlat
test
mov
mov
arpl
mov
pop
push
sub
repnz
test
xchg
sbb
jmp
loopne
add
sub
pop
mov
cs
jg
jbe
cmovl
cltd
outsl
xchg
mov
add
arpl
ja
test
add
or
in
mov
jbe
fcomip
adc
aad
cwtl
stos
test
and
pusha
inc
orl
test
cmp
es
imul
mov
dec
out
ds
aad
and
mov
sbb
addl
mov
cmp
sub
xorb
in
add
xor
or
push
outsb
cs
es
xchg
ljmp
ficomps
mov
ja
pop
sbbl
cmp
dec
test
push
and
ds
lock
imul
addr16
mov
push
test
push
aas
dec
popa
mov
cwtl
add
cs
add
cs
add
cs
add
cs
add
cs
add
cs
add
add
add
cltd
add
cs
add
cs
add
cs
add
cs
add
cs
add
cs
add
cs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
hlt
aas
add
add
push
repz
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
sub
add
in
sub
add
out
sub
add
out
sub
add
loope
add
loope
add
lock
add
jecxz
add
sub
add
repnz
add
in
add
add
in
sub
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
add
add
push
add
add
add
inc
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
incl
add
pop
add
incl
add
incl
add
incl
add
incl
add
add
add
pop
add
or
addl
and
add
add
add
add
add
add
add
or
aad
or
cs
or
aaa
add
add
add
testl
or
cmpsl
add
cs
add
cs
add
movl
or
addr16
cs
add
movl
or
pop
add
cs
add
cs
add
cs
add
outsl
add
cs
add
cs
add
cs
add
cs
add
cs
add
outsl
add
cs
add
add
add
mov
add
and
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
es
add
add
add
add
add
add
add
add
call
xor
jmp
sub
jmp
sub
clc
incl
sub
incl
sub
clc
pushl
xor
call
sub
call
sub
clc
filds
add
sub
clc
ljmp
xor
mov
xor
decl
xor
dec
sub
clc
aas
sub
mov
sub
decl
out
add
add
pop
add
std
pop
add
or
sar
pop
add
pop
add
cld
pop
add
add
add
cld
pop
add
add
loop
pop
add
std
pop
add
add
add
add
add
add
add
or
or
add
or
mov
add
add
add
add
add
add
add
add
add
add
or
push
pop
add
pop
add
in
add
je,pn
or
cmp
or
inc
add
cs
add
cs
add
add
add
or
or
or
lret
cs
or
push
or
dec
add
cs
add
cs
or
push
or
stos
add
cs
add
cs
cs
mov
add
adc
adc
or
bound
rolb
or
rolb
cs
cs
add
daa
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
daa
add
add
add
add
add
add
add
add
add
daa
add
daa
add
add
add
add
add
daa
add
add
add
add
add
add
add
add
add
add
into
sub
idiv
lea
idiv
test
idiv
inc
sub
idiv
lds
idiv
aad
idiv
jge
idiv
jne
idiv
cmp
sub
idiv
xchg
sub
idiv
mov
idiv
popf
xor
call
add
add
idiv
cmp
sub
idiv
pushl
idiv
insl
sub
idiv
popf
sub
jmp
cld
or
add
or
lock
add
add
add
sti
or
pusha
add
add
add
add
or
jo
or
mov
or
lock
add
cld
or
add
add
add
add
add
add
add
add
add
add
add
add
decb
add
or
push
decb
add
add
add
incl
add
incl
add
mov
pop
cs
add
cs
add
or
pop
mov
add
cs
add
xor
cs
add
roll
pop
add
add
add
cs
add
cs
add
fldl
pop
cs
pop
cs
add
test
pop
cs
pop
cs
add
lea
pop
cs
add
cs
add
cs
add
cs
add
testb
jbe,pn
or
mov
or
ss
cs
add
cs
add
add
add
add
add
add
add
add
add
add
sub
fldl
xor
jmp
sub
fildl
xor
repz
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
std
in
add
add
sti
out
aaa
cli
add
icebp
and
clc
pop
loopne
testl
repz
or
cmp
or
xor
or
sub
or
and
or
cmp
or
xor
or
sub
or
and
or
cmp
or
xor
or
sub
or
and
or
cmp
or
xor
or
sub
or
and
or
cmp
or
add
add
repz
sub
or
and
or
cmp
or
xor
or
sub
or
sbb
or
push
or
or
push
stc
out
or
push
leave
out
or
push
fldz
or
push
leave
out
or
push
mov
out
or
push
jns
or
sets
push
js
add
pop
out
push
vmread
push
addps
push
cmovs
push
vmread
push
addps
push
addps
push
cmovs
push
addps
push
push
prefetcht1
ucomiss
movaps
mov
add
pop
pop
adc
adc
push
push
adc
inc
ja
push
cmp
pop
inc
jbe
pop
cmp
sbb
popa
sbb
es
sbb
push
push
sbb
add
add
add
sbb
sbb
aaa
jo
sbb
arpl
sbb
sbb
and
sbb
adc
sbb
adc
sbb
inc
add
sbb
sbb
sbb
xor
sbb
and
push
sbb
adc
add
sbb
add
inc
sbb
sbb
sbb
pop
sub
pop
sbb
and
add
dec
sbb
pop
inc
sbb
pop
cmp
pop
sub
pop
sbb
and
std
pop
inc
sbb
pop
cmp
and
sbb
aam
sbb
add
dec
sbb
hlt
and
sbb
in
sub
add
push
sbb
sbb
cld
add
add
sbb
in
dec
sbb
in
push
pop
loope
pop
or
daa
or
cmc
cmp
in
or
fisubs
or
adc
sbb
movups
sbb
adc
aas
adc
sti
aas
adc
cli
adc
cli
adc
frstor
adc
aad
adc
frstor
adc
aad
adc
cld
inc
adc
cld
add
add
adc
add
push
push
pop
adc
push
pop
adc
push
pop
adc
push
sub
pop
sbb
pop
sbb
pop
sbb
pop
nopl
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
sahf
sbb
sbb
push
sbb
pop
push
sbb
pop
push
sbb
sub
sbb
sbb
jno
sbb
sbb
and
sbb
and
push
sbb
adc
sbb
inc
sbb
xor
outsb
sbb
sub
add
push
add
add
cs
add
cs
imul
bound
add
add
jno,pn
add
outsl
add
cs
cs
add
jns,pn
add
jne
add
jno
add
insl
add
or
adc
jns,pn
add
jno
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cs
add
add
jmp
das
add
jmp
xor
add
cmp
add
jmp
add
add
call
or
add
in
add
out
sub
push
add
sub
ltr
sub
sbb
lret
add
sub
int
mov
popf
add
sub
add
jmp
sub
adc
stc
sub
adc
add
adc
push
std
adc
add
add
adc
test
adc
fs
adc
push
std
adc
push
std
adc
inc
std
adc
std
adc
std
adc
push
std
lret
add
add
std
add
add
add
add
push
add
std
or
out
sbb
es
add
cld
pusha
add
roll
std
addb
add
add
js
push
add
or
or
sbb
sbb
xor
cmp
pusha
add
add
cld
lldt
js
adc
jne
adc
push
add
cs
add
pop
add
jp,pn
pop
incl
sbb
jo
sbb
insl
add
cs
add
cs
add
push
add
cs
jne
inc
ljmp
mov
jae
mov
hlt
mov
lock
push
stos
and
add
pop
out
push
pop
jg
jae
imul
sub
sbb
cs
dec
inc
imul
subl
jmp
jle
sbb
xor
insb
add
add
xor
or
sub
cmp
iret
leave
jmp
add
das
mov
add
and
xorl
leave
jecxz
add
jns
shr
sub
out
sti
cltd
lock
xchg
or
add
or
or
jmp
add
add
add
add
xchg
outsb
add
add
add
add
pushl
sub
add
add
repz
xor
add
sub
call
sub
add
xor
add
sub
pushl
cmp
loop
add
sub
pushl
xor
add
sub
int
mov
sub
add
jmp
sub
xor
imul
ljmp
mov
jmp
mov
add
fdivl
add
add
and
add
mov
inc
add
movsl
inc
add
add
fcoml
add
movsl
inc
add
movsl
inc
add
xchg
inc
add
add
cld
imul
cld
xor
add
add
cld
imul
cld
call
inc
sub
outsl
sbb
outsl
add
jb
popa
jae
pop
add
add
add
mov
jb
sti
add
add
add
add
add
push
or
add
push
push
or
add
xor
add
inc
sti
pushl
inc
add
add
cs
inc
fnstcw
add
stos
cmp
inc
add
add
add
add
add
add
add
add
imul
es
imul
cs
xor
add
inc
add
add
imul
popa
dec
cmp
xchg
ljmp
cwtl
repnz
out
xchg
out
inc
jmp
cli
aaa
add
add
rorl
ficoms
fistl
pop
out
loope
jecxz
cmc
out
push
stc
add
inc
in
idiv
cmp
call
add
add
add
add
add
add
add
add
add
add
add
add
add
cs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
jmp
add
mov
jb
scas
fdivl
cmpsb
fdivl
sahf
mov
jb
mov
jle
jno
jbe
jno
outsb
pushf
jno
pushfw
jno
pop
jl
jmp
es
push
add
je
ljmp
out
lcall
jae
or
decl
decl
out
ljmp
out
lcall
out
ljmp
out
ljmp
out
ljmp
add
cwtl
je
or
decl
decl
out
lcall
ljmp
ljmp
ljmp
std
incl
incl
call
call
incl
incl
call
std
call
std
incl
std
incl
std
call
std
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cs
add
cs
add
cs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cs
add
add
add
add
add
add
add
add
add
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
jmp
add
add
add
jmp
sub
add
jmp
sub
add
call
xor
add
sub
add
push
add
add
add
add
push
add
add
adc
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
lret
add
add
xchg
add
add
add
push
test
add
xchg
add
add
add
add
add
push
add
add
add
inc
add
add
mov
pop
pop
paddq
in
mov
movsl
fbld
mov
mov
mov
adc
testb
add
mov
in
jge
add
add
mov
std
fildll
leave
cmp
push
xor
jle
test
inc
jge
xchg
imulb
test
les
mov
rcrb
adc
outsl
jb
pop
mov
inc
pushf
pop
mov
ss
inc
cmp
insb
pushl
mov
lock
and
add
add
mul
imull
pop
enter
jmp
je
mov
mov
cmp
inc
push
and
jp
and
fnstsw
je
pop
insb
dec
test
bound
inc
aad
push
dec
mov
xchg
mov
dec
leave
mov
test
xchg
test
fisubs
add
dec
insl
ficompl
add
or
dec
lcall
andl
in
loop
sub
into
fmuls
cmpl
das
test
rcrl
mov
js
jmp
xchg
pushf
jecxz
adc
pop
sbb
xor
cli
iret
dec
or
ror
jo
hlt
cmp
mov
xchg
pop
pop
add
add
test
divl
or
mov
out
in
loopne
pop
mov
jge
add
adc
jmp
adc
pop
pop
in
insb
movsl
shrl
decb
iret
mov
sti
int3
mov
cmp
lret
sub
pop
pop
std
lret
movsb
sahf
push
mov
and
test
rclb
clc
cmp
loope
outsl
fdivrs
mov
iret
dec
shr
adcb
xchg
lods
adc
lret
mov
jnp
lods
sbb
fwait
xor
fcompl
addr16
sub
inc
or
rolb
add
inc
les
adc
pop
pop
sti
das
insb
add
add
das
jl
fldt
mov
das
pushf
flds
aad
mov
rolb
imul
sub
leave
adc
dec
add
cs
arpl
fs
cs
arpl
inc
dec
add
jns
lret
subb
cmp
mov
lcall
mov
mov
mov
subl
add
add
xchg
retw
rcr
or
insb
aaa
in
scas
xor
insb
jmp
aam
mov
daa
cmp
mov
dec
and
or
dec
adc
int
push
leave
pusha
xor
in
inc
aad
sub
es
mov
jmp
add
add
cmpsb
cmp
shll
add
add
or
jno
addr16
and
sbb
xor
add
xor
sti
in
repnz
jno
lahf
out
nop
dec
cmp
jl
mov
xor
aad
sbb
xor
cmp
xor
sbb
xor
sbb
into
or
jno
cmp
fiaddl
add
sbb
push
jge
xchg
push
enter
add
adc
sbb
jne
sub
push
pop
insl
loope
scas
outsb
int
mov
decl
insl
fwait
jnp
jb
stos
aaa
iret
je
adc
and
and
cmp
sbb
cmp
jl
rcrb
push
cmpl
sbb
mov
add
add
sbb
adc
sub
rcrl
mov
iret
loopne
shll
leave
inc
movsl
jg
cs
test
ds
adc
repnz
dec
nop
bound
outsl
cmp
and
xor
and
sub
sbb
push
aas
push
popf
mov
sbb
sti
arpl
cmp
adc
inc
xor
inc
pop
pushl
scas
add
add
xor
pop
mov
xor
cmpsl
divl
fsubrl
filds
outsl
adc
hlt
sbb
cmp
das
ljmp
das
loopne
add
das
push
lahf
or
iret
or
xchg
add
rcl
in
aam
mov
out
cmp
inc
fldt
clc
sub
sub
xlat
daa
mov
and
add
and
mov
lds
push
loopne
and
into
addb
cmp
sub
das
inc
sub
das
pop
sub
xor
js
mov
in
orb
out
mov
cli
jnp
pusha
jno
mov
add
or
loop
mov
xor
jecxz
mov
add
and
fdivs
and
push
sti
ljmp
mov
mov
pop
cmp
cmp
cmp
xor
cmp
dec
fmull
sub
out
add
jbe
aam
iret
xchg
mov
dec
out
cmp
and
cmp
dec
idivb
popa
fbstp
add
cltd
add
add
jns
jbe
aas
test
add
or
xor
or
push
or
cmp
lea
sbb
loope
leave
cmc
adc
das
xchg
jbe
aaa
pop
xor
adc
in
pop
fdivrl
scas
push
loopne
imull
pushf
cmp
mov
xor
add
add
aas
rol
xchg
lods
mov
push
mov
push
loop
sbb
push
add
cs
add
out
push
add
sbb
inc
mov
add
add
jnp,pn
add
mov
inc
cs
add
cs
imul
add
cmp
lret
cs
insb
inc
xlat
add
mov
add
add
add
mov
add
cs
outsb
inc
cs
add
cs
insl
inc
roll
add
icebp
insl
inc
cs
add
outsl
insl
inc
add
add
outsl
add
add
insl
outsl
add
add
outsl
add
add
insl
outsl
add
add
insl
out
jmp
add
add
add
add
add
out
pushl
cs
outsb
out
jmp
add
outsl
out
lcall
add
outsl
out
call
push
sub
lock
in
push
xor
stc
repnz
repz
idivb
mul
cli
daa
sti
fdivr
and
dec
dec
and
lds
daa
adc
cs
sbb
push
aaa
add
push
aas
test
enter
add
add
outsb
cltd
jl
jb
js
jbe
fstps
sarb
test
jmp
outsb
pop
adc
push
ja
jbe
imul
cmp
mov
andl
xchg
mov
jns
jb
jne
jbe
add
sbbl
cmpsl
mov
add
mov
scas
scas
mov
mov
mov
jl
mov
pop
or
vmaxsd
leave
lret
push
mov
iret
push
adc
xlat
dec
sbb
fstp
daa
in
jecxz
jmp
jmp
out
ja
icebp
repz
cmc
imull
stc
sti
sbb
incl
add
dec
pop
push
pop
pop
or
or
cs
hlt
adc
pop
cld
sbb
inc
and
dec
inc
sub
adc
sub
adc
notl
sbb
lcall
add
cmpsb
in
dec
inc
call
imul
jae
jne
jg
jns
jp
pop
flds
enter
lret
dec
cmc
sub
dec
jmp
add
std
adc
pop
lds
fistpll
out
subb
jo
mov
insl
jae
jo
ja
je
jnp
js
jg
jl
mov
nop
movsb
xchg
stos
xchg
test
scas
mov
xchg
adcb
js
sub
inc
and
dec
je
sub
xor
aaa
add
add
and
cmp
arpl
shrl
push
fsts
push
aad
inc
push
rcrl
mov
jmp
sub
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
sub
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
jmp
add
add
jmp
sub
incl
incl
call
call
mov
call
call
incl
add
pop
incl
call
incb
dec
mov
xchg
incb
call
call
inc
inc
lcall
decl
cmp
call
incl
lcall
decl
js
jg
imul
add
imul
add
add
imul
add
imul
add
add
add
add
rcrb
jmp
add
add
scas
add
add
add
add
cs
add
add
cs
cs
add
add
add
add
cs
add
out
add
add
scas
sub
scas
add
mull
cld
in
cmp
add
sub
inc
not
std
inc
out
cli
cmc
aas
out
cli
cmc
aas
out
cli
cmc
pop
out
cli
cmc
pop
out
pop
subb
out
call
std
inc
out
cli
cmc
aas
out
cli
cmc
aas
out
cli
cmc
pop
out
cli
cmc
pop
out
pop
subb
add
add
add
add
add
cs
add
add
add
add
add
add
add
add
add
add
add
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
jmp
add
jmp
sub
add
jmp
sub
cld
add
sub
add
add
mov
add
fldl
pop
add
add
add
and
jge
sar
add
std
fiaddl
movsb
std
inc
add
cld
pop
add
std
pusha
add
add
mov
add
jns
jb
faddl
jno
jge
xor
jnp
xchg
cld
push
add
cmp
or
add
add
std
sbb
add
or
add
inc
add
inc
add
dec
add
adc
outsb
das
and
bound
or
add
inc
add
das
aas
add
add
add
inc
add
das
inc
add
das
sub
add
das
xchg
add
das
cwtl
add
das
jns
dec
das
insb
add
das
outsl
add
das
jo
outsl
das
addb
aad
arpl
into
add
sub
add
das
test
and
jo
xor
addb
das
roll
xor
fadds
daa
das
int
and
das
rolb
pop
das
add
pop
jmp
add
add
add
pushl
add
and
adc
sbb
push
add
incl
add
call
add
call
add
dec
add
inc
add
decb
add
addl
decl
push
call
sbb
inc
add
add
pushl
add
add
pushl
add
lcall
je
lea
add
add
sub
jmp
and
out
add
das
sub
cmp
mov
add
das
push
add
das
rolb
and
call
add
das
incl
push
das
and
add
sub
fsubrs
mov
add
cs
add
out
daa
adc
dec
or
xor
or
dec
stc
add
dec
add
add
add
inc
jmp
push
xor
mov
xor
rcrl
add
push
in
test
push
ret
push
sti
xor
push
mov
xor
push
movsl
xor
push
cmpsl
xor
push
test
xor
push
lods
xor
or
xor
mov
add
add
or
xor
pop
mov
xor
pop
les
les
xor
pop
enter
lret
pop
lret
xor
or
xor
pop
into
xor
pop
or
sbb
or
pop
and
fcomps
or
pop
repnz
ficomps
or
sbb
loopne
pop
or
ds
or
ds
pop
in
in
pop
out
add
push
repz
call
push
inc
pop
ljmp
pop
in
decb
pop
out
pop
je
repz
imul
pushf
pop
stos
pop
or
fiadds
sbb
stos
pop
pop
xor
or
xor
or
pushf
or
adc
and
or
cli
pop
or
cli
xor
push
cli
xor
push
cli
and
add
add
sbb
inc
cli
or
sub
or
cli
aaa
or
cli
sbb
sbb
sbb
sbb
cli
adc
sbb
mov
pop
stc
stc
mov
idiv
scas
pop
idiv
mov
pop
outsb
cli
movl
insb
cli
mov
insl
cli
test
push
mov
jae
xchg
push
cli
nop
pop
jbe
jg
movl
xor
add
inc
xor
add
push
xor
add
cmp
scas
add
dec
xor
add
lods
add
scas
add
lods
add
add
stos
add
test
add
aaa
mov
andb
add
mov
xchg
aaa
jno
aaa
scas
add
daa
mulb
pop
add
add
add
aaa
add
daa
add
sub
add
sbb
add
add
stc
pop
add
stc
or
stc
or
stc
or
stc
popl
stc
or
add
stc
dec
add
stc
das
add
stc
xor
stc
inc
add
stc
xor
stc
xor
or
inc
add
stc
xor
stc
inc
add
push
cmp
add
jge
cmp
push
cmp
push
cmp
add
cmp
add
add
dec
add
add
push
inc
sub
push
inc
sub
xor
xor
jno
dec
xor
add
aaa
xor
push
dec
sub
push
dec
sub
add
dec
sub
add
adc
add
xor
add
adc
cld
add
and
incb
and
sub
add
sbb
lea
sbb
cmp
add
pop
xor
cwtl
add
dec
add
add
or
jl
or
add
add
sbb
add
and
add
add
add
push
add
add
inc
add
push
mov
dec
push
mov
dec
push
cmpsl
add
movsb
add
add
mov
push
push
test
inc
push
test
inc
push
mov
add
add
fildl
jp
rolb
jne
leave
add
jl
cmp
ja
jo
pop
sub
popa
xor
add
cmp
push
add
add
nop
add
add
sub
stos
xor
sub
xor
das
sub
xor
xor
push
add
sub
and
imul
sub
imul
sub
push
xor
sbb
mov
add
sub
add
cmpsb
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
mov
add
rolb
add
add
ret
add
add
add
add
add
add
add
add
movl
add
add
add
add
inc
mov
cmc
inc
or
mov
pop
and
jl
and
cld
add
cld
mov
dec
cmp
dec
jg
movsl
dec
scas
sti
lcall
sti
popf
or
mov
cmpsl
or
adc
cld
pop
or
cld
fs
cld
sub
cld
xor
sbb
pop
cld
sbb
add
add
cmp
inc
dec
adc
rorl
cld
rorl
cld
pusha
or
cld
sbb
cld
orl
sti
sub
sti
sub
sti
adc
mov
sti
das
push
xlat
sti
mov
pop
mov
sti
lahf
pop
scas
sti
pushf
pop
cld
dec
and
cld
jmp
mov
mov
and
cld
and
and
cld
add
add
and
cld
or
and
cld
sbb
inc
cld
cmp
cmp
cld
cmp
and
sbb
sbb
jns
sbb
mov
sbb
stos
sbb
cld
sti
or
and
incb
and
mov
pop
mov
lcall
mov
std
pop
test
add
mov
add
xchg
add
mov
clc
pop
addl
pop
push
clc
in
pop
push
lock
pop
inc
call
and
push
fsubs
and
shrb
and
shlb
xchg
mov
and
cmpsl
and
cmpsb
and
mov
pop
insl
adcb
fs
add
push
and
push
movsb
and
or
and
dec
pop
and
dec
and
or
add
orl
orb
roll
and
mov
pop
and
inc
sbb
movsb
inc
sbb
mov
inc
xor
test
xor
sahf
inc
sbb
mov
and
mov
inc
into
and
addr16
in
testb
inc
lods
and
jmp
mov
es
inc
test
pop
inc
mov
cs
mov
adc
cld
sbb
adc
cld
or
adc
cli
pop
or
cli
pop
dec
sub
and
cli
adc
cli
push
dec
mov
outsb
push
xchg
insb
dec
mov
inc
push
mov
cli
or
or
jge
aaa
push
stc
sbb
iret
stc
sbb
ja,pn
cmp
add
add
es
sbb
scas
cs
movsb
dec
sbb
sub
or
sti
pop
add
sti
sbb
sub
sti
lea
push
sti
fs
sti
sub
pop
sti
pop
and
sti
lods
and
sti
scas
and
cli
and
cli
int3
and
imul
sti
idiv
sti
lret
sti
leave
neg
sti
neg
sti
mov
xchg
add
testl
xor
cld
div
sti
xchg
mul
sti
xor
aad
push
not
sti
dec
testl
sti
aaa
testl
bound
sbb
pop
add
push
pop
pop
add
add
add
dec
inc
add
dec
decl
test
add
mov
cld
or
and
or
xchg
add
or
addl
or
dec
loope
or
aas
loope
or
cmp
hlt
or
cmp
out
or
xchg
mov
jmp
xchg
mov
dec
push
push
scas
dec
pop
push
decb
std
dec
sbb
or
sbb
or
push
cli
dec
sbb
jmp
add
call
dec
pop
push
push
dec
and
add
dec
and
rorl
push
rorb
push
rorl
push
rorb
mov
dec
sub
int
sub
mov
dec
sub
mov
push
mov
dec
cs
cmpsl
dec
das
push
cmpsb
dec
xor
xchg
dec
xor
hlt
dec
xor
arpl
push
cs
xor
or
xor
add
add
and
aaa
xor
cmc
cmp
out
cmc
cmp
mov
idivb
xor
cmc
aas
sub
cmc
inc
and
cmc
inc
cmp
cmc
inc
xor
cmc
inc
sub
cmc
inc
and
adc
cmp
inc
xor
dec
sub
dec
and
adc
adc
cmp
adc
imul
push
xor
push
sub
push
and
adc
adc
add
xor
adc
lret
and
popa
adc
repnz
adc
xacquire
pop
adc
adc
adc
cmp
dec
adc
adc
adc
pop
adc
adc
push
adc
adc
adc
adc
adc
adc
cwtl
adc
fwait
adc
adc
jne
push
jl
add
add
ja
push
punpcklwd
jbe
push
adc
push
adc
adc
cmp
xor
mov
das
pop
mov
cmpsb
aas
mov
sub
mov
sub
scas
xor
aas
scas
xor
pop
lods
xor
pop
stos
xor
pop
stos
xor
aas
test
xor
aas
cmpsl
xor
aas
cmpsb
xor
pop
movsl
xor
pop
mov
add
mov
xor
cmp
xor
sbb
xor
sbb
adc
cmp
adc
cmp
adc
cmp
adc
mov
scas
adc
in
mov
mov
in
mov
imul
mov
out
mov
in
mov
hlt
in
mov
jmp
mov
ljmp
adc
add
cmp
mov
adc
out
mov
adc
mov
adc
out
rclb
out
rcll
adc
pop
adc
notb
js
cmc
adc
les
xorl
mov
adc
xor
nop
adc
aas
xchg
adc
pop
xchg
test
push
cmc
adc
in
adc
addr16
add
add
mov
lahf
dec
mov
mov
dec
mov
mov
dec
mov
movsb
dec
xchg
movsl
push
into
loop
push
shl
cmpsl
push
shl
push
ret
loop
push
shl
stos
push
int
stos
push
and
and
add
xor
add
xor
add
and
add
pop
add
cs
add
sub
add
pop
add
pop
add
add
aas
add
add
add
add
add
add
aas
cs
add
add
aas
cs
add
add
add
add
add
add
add
add
add
cs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
xor
add
xor
add
add
leave
sub
add
loopne
add
je
add
in
xor
add
clc
sub
add
fsubrs
add
fldt
add
mov
xor
add
and
add
sub
add
movl
add
add
sub
inc
sub
add
or
add
jae
add
or
add
add
add
pop
sti
decl
add
add
add
add
decl
sti
lcall
sti
ljmp
add
mov
add
add
add
add
add
cltd
cli
ljmp
add
test
ljmp
sti
jmp
cli
pushl
sti
jmp
cli
pushl
pushl
add
cs
cmp
les
add
mov
add
cs
add
mov
add
sarb
add
add
cs
cmp
add
add
cmp
add
repnz
cmp
add
jmp
add
cs
add
cs
add
jne
add
out
add
je
add
in
cmp
cs
add
cs
cmp
cs
add
cs
add
addl
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
add
add
add
add
cmp
add
add
or
add
add
dec
sub
add
push
add
mov
add
mov
add
shlb
add
and
add
add
inc
sub
add
sub
add
cmc
lcall
sub
add
sub
cmp
mov
add
call
sub
cmp
in
sub
cmp
inc
inc
test
add
arpl
pop
or
test
xchg
mov
add
into
sbb
mov
mov
fcomip
mov
in
loopne
pop
aaa
incl
enter
add
ret
insb
mov
xchg
add
pushf
aad
sub
xchg
dec
ret
pop
shl
in
js
jecxz
cmpsl
xor
fbld
mov
cs
jmp
orl
inc
mov
push
push
add
xor
sub
out
xor
mov
imul
fidivs
mov
inc
sbb
or
dec
insl
test
and
movsb
pop
mov
lods
mov
adc
test
pop
mov
xor
mov
loop
imul
imul
mov
leave
mov
les
inc
lahf
addb
lds
jl
outsb
dec
and
jne
stc
cld
imul
jle
mov
add
jne
mov
cmpsb
xchg
fstpt
fs
jmp
add
add
cs
add
add
cs
pop
add
add
add
add
pop
add
add
add
add
add
cs
add
add
add
add
cs
add
add
add
add
add
add
add
add
add
add
add
add
jge
out
sub
add
std
sarl
add
add
add
mov
add
sub
sar
sub
add
test
sub
add
adc
repz
cmp
sar
sub
pushl
sar
sub
sar
sub
sar
sub
sar
sub
sar
sub
sar
sub
add
scas
sar
cmpsb
add
add
mov
add
add
add
mov
add
mov
add
add
aas
add
add
add
aas
add
push
add
sti
or
xchg
jg
add
add
mov
sti
pop
add
inc
add
addb
sti
add
dec
addb
add
cmp
add
addb
cld
or
mov
add
add
mov
add
bound
pop
jo,pn
or
add
or
pop
addb
add
and
cs
add
incl
add
or
and
in
inc
jp,pn
xor
mov
inc
and
and
mov
add
add
cs
add
xor
ucomiss
inc
cs
and
add
cs
add
cs
addb
stos
add
add
out
mov
sub
add
sub
add
sub
add
out
jmp
add
add
out
decl
xor
dec
addl
inc
add
add
outsb
add
xchg
lahf
add
add
outsb
add
add
xchg
das
add
add
outsb
add
and
cmp
and
add
test
stc
sub
mov
add
test
jmp
stos
mov
add
mov
add
add
inc
stos
mov
decl
stos
mov
add
stos
mov
add
sub
sar
sub
sar
sub
sar
xor
fsubrs
out
les
add
jl
lcall
in
incl
call
outsb
aas
add
std
or
add
add
insl
aas
add
std
sub
ja
aas
add
or
mov
aas
add
aas
add
add
inc
outsb
aas
add
add
movq
add
cld
or
xor
add
outsl
aas
add
and
add
add
fwait
insl
aas
add
cld
push
add
aas
add
cld
add
mov
cld
push
add
aas
add
add
pop
cld
push
add
aas
add
jno
add
mov
mov
or
cs
aas
cs
add
fbstp
adc
sti
mov
cs
cs
mov
jbe,pn
add
dec
mov
cs
add
imul
movsl
add
imull
sbb
cmc
scas
aas
test
ucomiss
scas
aas
incb
adc
add
cs
lods
aas
cs
scas
aas
mov
scas
aas
mov
or
xor
add
add
scas
stc
ljmp
add
scas
imul
loope
pop
add
add
add
scas
dec
add
add
cmp
jns
and
inc
scas
sub
jp
cmp
sbb
xor
jns
or
mov
scas
add
add
pushl
scas
imul
mov
and
cltd
scas
dec
add
mov
add
sbb
sbb
sub
adc
sub
or
fsubrl
out
decl
push
add
fldz
incl
out
pushl
add
jno
out
lcall
cli
add
add
out
cmp
test
jmp
out
ljmp
cli
sub
in
in
call
aam
decl
mov
xchg
in
lcall
add
pop
aas
add
or
lret
pop
aas
add
add
add
add
add
add
pop
aas
add
add
scas
push
aas
add
or
or
add
add
cmp
add
add
add
push
aas
add
aas
add
push
aas
add
adc
mov
aas
add
add
add
add
add
add
add
add
add
test
test
sub
pop
cs
test
adc
pop
stos
aas
addb
ja
aas
lock
cs
add
shrl
sbb
das
stos
aas
loope,pn
add
push
stos
aas
cs
add
imul
cs
stos
aas
lea
sbb
arpl
pop
cs
stos
aas
cs
stos
aas
cs
add
add
stc
stos
aas
cs
and
icebp
stos
aas
cs
add
jno
xor
ljmp
add
add
add
and
adc
add
add
stos
icebp
pushl
add
add
stos
popa
add
add
jns
push
add
mov
add
xor
imul
add
mov
add
adc
insb
add
add
mov
add
add
add
mov
jmp
cmp
sbb
and
add
iret
sub
ljmp
mov
idiv
test
ljmp
pushf
ljmp
jl
lcall
idiv
adc
ljmp
fsubr
dec
sub
ljmp
idiv
and
add
sub
ljmp
lahf
ljmp
jg
ljmp
ljmp
fucomip
ljmp
outsl
aas
add
aas
add
pop
add
std
or
push
jo
add
add
add
outsl
aas
add
std
incl
add
xlat
std
inc
add
add
std
call
std
incl
std
call
std
jmp
arpl
test
jae
insl
jo
jae
je
outsb
ja
pushaw
push
jmp
bound
movsl
std
dec
add
test
imul
xchg
add
addb
cs
add
imul
cs
add
pop
add
add
inc
mov
inc
cs
and
ljmp
cs
inc
cs
and
js,pn
inc
cs
inc
cs
es
cs
and
sbb
inc
cs
inc
fcomps
inc
cs
inc
cs
das
inc
cs
push
inc
cs
inc
cs
sub
cmp
sub
add
sub
dec
in
dec
add
imul
incl
cs
and
call
pop
cmp
icebp
or
add
adc
repz
cld
in
or
or
mov
and
sbb
add
hlt
clc
jmp
add
rolb
aaa
pop
iret
ljmp
loopne
add
fldt
xchg
jge
add
add
adc
add
inc
add
lock
push
fcoms
xlat
push
call
in
sub
sub
sbb
mov
inc
and
jmp
fnstenv
jg
mov
mov
mov
ja
mov
push
fcmove
dec
and
rclb
ret
push
push
mov
jmp
mov
dec
jl
jae
fsubrl
jne
frstor
out
add
add
or
lock
fwait
jo
lret
xchg
add
scas
add
and
scas
std
push
in
cmp
dec
out
add
xor
push
add
add
mov
xlat
icebp
insb
in
faddl
sub
clc
ljmp
fst
push
mov
repnz
inc
out
lds
xlat
call
add
lcall
clc
xlat
add
add
mov
inc
out
ror
xchg
add
add
out
xlat
lret
fildl
xor
imul
mov
pushl
inc
pop
ucomiss
dec
jb,pn
pop
jmp
pop
lds
cs
xchg
outsl
mov
pop
add
cs
movl
add
add
and
or
inc
out
xor
lret
out
push
es
inc
adc
jmp
in
mov
repz
xor
aad
add
cs
cmp
loope
sbb
cmp
sarl
ds
inc
repnz
inc
or
sub
add
iret
cld
repz
cmc
out
scas
add
add
lret
lock
add
add
fstpt
int
add
inc
push
cmp
std
dec
es
add
sbb
sub
cmp
insb
cmp
inc
push
lds
inc
jecxz
mov
dec
jb
mov
jg
xorl
imul
pop
push
orl
mov
scas
jge
pop
add
add
sbb
lods
cmp
test
jg
aas
icebp
dec
les
jnp
sub
insb
jb
mov
lcall
lret
scas
insb
xchg
and
dec
movsl
les
int
pop
cwtl
in
into
inc
jmp
and
pop
ljmp
stc
adc
mov
out
and
fimull
xor
mov
add
sub
jp
ja
adc
mov
test
sti
je
add
xchg
stos
mov
sahf
mov
cmp
std
and
or
cmc
add
jmp
dec
js
pushf
mov
xchg
mov
jg
nop
jge
add
dec
push
jmp
pushf
jg
cltd
nop
cmpsb
xchg
addl
add
pushf
test
xorb
lcall
push
lods
popf
cltd
inc
jl
subb
cs
adc
cs
xor
lds
dec
icebp
aaa
loop
scas
sub
or
fisubs
popa
pop
add
cs
adc
out
and
lret
lea
push
add
add
shll
imul
xor
js
arpl
xchg
fistl
loopne
jno
repz
inc
push
dec
outsb
add
add
add
cs
pushf
leave
aas
lcall
lea
sahf
sub
xlat
push
lock
in
dec
push
jmp
movsb
notb
add
enter
call
mov
xchg
shll
jecxz
in
mov
inc
add
sysenter
push
icebp
repnz
loopne
sub
fimull
pop
cld
fdivrp
sub
xlat
sub
sbb
pop
out
lahf
adc
adc
add
pop
cmpsl
adc
adc
or
adc
leave
loop
fsub
mov
inc
sub
add
add
add
shll
sub
popf
fidivrs
mov
and
push
jecxz
push
dec
shrb
notl
jmp
xor
repz
pop
incl
repz
push
repz
sub
xor
jmp
leave
xchg
and
shl
arpl
fcomps
ljmp
popf
mov
xor
dec
push
add
add
fdivrp
push
jecxz
jecxz
hlt
div
out
repnz
fsub
clc
out
push
in
xchg
add
int
xlat
into
mov
rcr
leave
fmul
faddp
fwait
hlt
leave
leave
mov
or
daa
push
adc
push
add
pop
inc
sub
add
jae
popa
data16
outsb
jbe
les
pop
add
add
add
xchg
lea
addb
pop
aas
push
pop
inc
inc
push
insb
aas
jno
or
pop
flds
add
not
and
and
and
pop
add
ljmp
pop
dec
lret
inc
int3
jne
aas
enter
aam
pop
fcomps
inc
cmp
sub
sub
lock
daa
add
movsb
adcb
xchg
mov
daa
add
cs
aas
fldl
cli
cmp
cs
dec
fucom
pop
cmp
loopne
inc
fcomip
add
cs
idivl
and
add
sub
rcrl
xor
jmp
and
sbb
mov
add
add
std
cld
das
aam
add
xchg
sbb
xor
sbb
add
add
add
pop
int
xor
popa
xor
jo
pop
xchg
mov
add
add
dec
pop
push
xor
popa
xor
inc
and
inc
clc
xor
aaa
cs
rolb
iret
fidivl
out
fadds
mov
lcall
jo
sbb
pop
mov
jp
fwait
cwtl
je
sub
add
jb
add
add
add
or
sarb
ljmp
jp
insl
test
lods
jae
jno
push
mov
nop
jb
mov
ret
sub
lret
out
aaa
pop
dec
shrl
adc
shl
std
pop
pushf
fistps
ljmp
addb
mov
outsl
popl
dec
lea
add
add
out
out
call
jbe
push
mul
adc
lock
ljmp
sub
js
add
sub
adc
or
or
out
int
in
jmp
xchg
cltd
mov
add
test
inc
fcom
hlt
cli
rcl
jmp
int3
inc
jmp
or
add
add
and
xor
std
pushl
dec
push
ss
fsubrl
sbbb
and
adc
or
jmp
jge
or
ljmp
sbb
mov
add
mov
cli
xchg
jae
jge
xor
mov
cmpsl
inc
into
jno
jge
test
xchg
in
jg
fadds
add
adc
out
mov
xor
fcoms
cmp
sbb
imull
daa
add
cs
jae
mov
js
mov
test
add
scas
pop
decl
mov
add
xor
outsl
ret
add
lea
jmp
sbb
add
add
add
popa
push
push
lods
pop
pop
outsb
add
sbb
or
sbb
jl
cmpl
and
sbb
adc
arpl
pop
xor
add
add
fsubs
decl
icebp
fdivl
in
sarb
cli
jmp
stc
notb
fisubrl
jmp
jmp
add
jecxz
dec
inc
add
add
mov
add
mov
add
add
cmpsb
out
adc
lcall
fidivrl
jle
xchg
loope
fmuls
call
and
adc
in
cmp
and
popl
sub
push
or
hlt
push
adc
add
std
fucomi
in
in
in
fdiv
testl
call
fldl
add
sbb
icebp
hlt
loop
into
pop
fdiv
xchg
mov
roll
add
in
fdivrl
call
mov
out
cmc
in
fdiv
out
xchg
add
mov
lret
xlat
add
sbb
push
jg
ds
sub
cmp
xor
sbb
push
maxps
push
and
adc
add
add
mov
maskmovq
testl
loop
in
sub
add
fistpl
les
cmp
shl
sarl
and
and
or
out
xor
mov
aaa
add
into
and
cli
xchg
imul
add
and
add
test
mov
add
pop
cmp
insb
nop
daa
roll
mov
jp
pop
sub
add
sub
dec
push
lret
mov
add
add
cs
add
call
js
jnp
outsb
test
js
je
jo
outsb
mov
scas
mov
subl
xchg
xchg
dec
test
pop
jl
mov
push
dec
dec
jo
push
mov
imul
test
add
add
int
add
in
dec
cld
push
jmp
or
into
and
inc
fistl
shll
addr16
es
or
sub
fdivl
dec
sub
pop
inc
adc
sub
testl
add
add
mov
xchg
cltd
mov
cmc
sub
xchg
jle
mov
xor
scas
pop
inc
xlat
enter
mov
pop
pop
out
mov
cmp
stos
hlt
mov
adc
in
mov
add
lock
icebp
not
add
rcl
or
pushl
mov
jnp
mov
mov
mov
lcall
lods
sti
jle
lods
mov
nop
xchg
dec
pushl
dec
push
inc
cld
pop
or
pop
testl
inc
pop
inc
adc
pop
pop
dec
jmp
popa
and
push
and
push
push
and
jns
stc
test
je
cmp
jge
adc
add
sub
notl
aaa
and
mov
mov
add
jle,pn
test
lret
out
jp
mov
stos
push
repnz
mov
dec
mov
mov
test
sti
fisubrs
in
aad
jle
mov
jle
lcall
xchg
cmp
jmp
orl
add
add
adc
mov
adc
jnp
stos
cmp
cltd
dec
jo
test
xor
inc
es
insl
sub
xor
cmp
fisubs
loopne
faddl
mov
push
fcomps
out
out
int3
lock
in
sti
cmp
in
xor
roll
add
add
clc
jmp
and
in
adc
idiv
or
dec
movsb
and
inc
cmpsl
add
decl
fsubl
iret
lea
mov
push
push
lcall
adc
outsb
mov
sub
stos
dec
in
jge
inc
mov
add
mov
push
add
mov
dec
inc
inc
ret
jp
popa
mov
arpl
popa
daa
push
scas
pop
add
add
stos
push
mov
inc
andb
pop
imul
push
inc
je
insb
push
ja
jl
fnstcw
push
movsb
mov
addb
ret
xchg
add
add
aaa
and
sbb
call
mov
mov
call
add
push
jns
sysret
adcb
inc
add
add
add
push
mov
rolb
mul
icebp
push
cmc
sti
shlb
loop
inc
cli
in
add
or
fistl
and
add
add
sbb
cmp
ss
jno
jbe
or
push
dec
add
lcall
cs
jecxz
pop
sub
es
or
or
sub
insb
xchg
test
cmpsl
pusha
mov
add
cs
push
xor
ficompl
or
iret
and
sbb
or
push
out
std
call
hlt
ds
add
sub
cs
shrb
arpl
lahf
outsb
cs
adc
xor
add
in
and
or
add
cs
xchg
ret
nop
mov
add
add
cmp
cmp
aas
add
inc
xchg
jmp
add
rorl
xlat
pop
pop
dec
mov
add
push
ret
adc
movsl
push
inc
dec
add
mov
enter
aam
in
lcall
shll
add
shll
aam
int3
push
xchg
loop
inc
or
add
out
sti
shl
inc
loop
ficomps
mov
mov
jne
call
push
inc
add
enter
bound
add
mov
inc
int3
mov
sub
scas
push
es
hlt
jo
aad
pop
pop
mov
jbe
push
sub
jnp
insl
ret
jle
insb
fdivs
pop
add
xor
push
shll
sub
lods
pop
adc
add
add
xchg
jbe
shll
cmp
movsl
fwait
jnp
cwtl
xchg
jbe
or
xor
cmp
enter
jmp
shl
loopne
out
out
in
fsubp
mov
cld
stc
in
mov
jecxz
imul
lret
xlat
shl
mov
lcall
and
daa
jp
das
jo
jae
sub
addr16
sub
add
test
outsb
ss
push
sub
sbb
sub
pushl
div
pop
jmp
sub
sub
xor
sub
daa
and
sub
js
aaa
and
fidivs
ds
cmp
inc
pop
jbe
add
cs
notl
pop
inc
stc
lcall
ret
test
push
sub
jp
dec
add
xchg
cmp
arpl
int3
add
add
add
cs
cli
add
repnz
fidivrs
sar
cmp
dec
in
push
cli
jno
call
and
mov
movsb
xor
sub
fistpl
daa
call
dec
mov
pop
add
cs
fwait
xchg
add
xchg
test
add
adc
add
add
mov
sub
xor
add
js
jb
cs
jge
sub
xorl
add
shl
stos
call
mov
jg
add
add
mov
popa
or
xchg
shl
faddp
push
or
mov
scas
sar
aaa
call
add
add
fadds
filds
fldl
rclb
xchg
enter
push
js
jl
bound
jb
add
ja
xchg
jl
add
int
lds
rcl
cmp
mov
in
pop
cltd
int3
mov
ljmp
cmp
sub
push
call
xchg
pop
clc
les
add
scas
xor
negl
xchg
mov
add
js
ja
das
shll
jecxz
xchg
arpl
jne
imul
add
aam
pusha
jle
addb
add
cwtl
mov
add
inc
jp
mov
pop
pop
pop
lcall
push
mov
dec
push
jg
pop
push
mov
pop
ljmp
inc
hlt
arpl
lock
popa
and
bound
clc
push
pusha
cmc
pop
xor
outsb
jl
dec
push
jae
mov
add
cmp
inc
add
add
and
js
xor
dec
add
cld
jb
inc
add
cs
add
xor
adc
add
pusha
add
inc
add
xor
outsb
cs
add
cs
add
cmp
gs
cs
add
inc
add
jge
inc
mov
popa
je,pn
gs
add
pop
add
scas
add
mov
insb
cs
push
add
add
rolb
cs
outsl
cs
add
mov
add
sbb
add
cmp
xor
sub
aaa
cs
add
sbb
add
ljmp
add
cs
add
add
add
add
add
lea
add
add
test
jp
jmp
add
int
add
or
test
add
inc
popf
sbb
cmp
xchg
addl
jmp
sub
ljmp
add
stc
daa
loopne
stc
aaa
cli
repnz
aaa
cli
stc
mov
call
iret
xchg
outsl
and
add
stos
rclb
jmp
add
fwait
ret
mov
sub
jmp
mov
add
mov
add
cmpsb
mov
inc
test
add
sub
mov
jno
mov
add
das
sahf
shll
nop
fs
mov
das
mov
nop
fs
fwait
jno
daa
jb
arpl
add
sub
add
jo
jne
jb
dec
add
jb
pop
jae
lock
dec
jb
pusha
fs
jmp
bound
out
jno
popa
mov
jae
call
pop
arpl
call
jae
insb
xor
outsb
sti
add
cld
arpl
out
jae
xchg
jmp
dec
add
push
add
add
sbb
inc
add
sti
dec
add
cld
bound
cs
outsl
cs
outsl
repz
add
add
cs
add
and
jae
stc
add
inc
add
add
inc
add
cmp
outsb
cs
add
cmp
jb
add
jb
outsb
cs
add
add
jae
imul
pop
add
add
xchg
je
mov
add
cs
add
ret
cs
insb
cs
add
mov
cmp
call
call
ja
jmp
fld
imul
adc
cwtl
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
add
add
add
dec
jno
lahf
dec
gs
push
stc
scas
aaa
push
std
stos
xor
test
pop
setle
adc
push
jo
xchg
incl
mov
out
jne
loop
jns
and
xor
push
lret
or
cs
sub
fsubl
in
mov
add
cmpsl
mov
fwait
test
or
push
ret
push
inc
movsl
mov
bound
dec
mov
jbe
push
int
fsubl
lds
test
mov
dec
mov
xchg
push
dec
pop
nop
jo
sub
mov
sub
pop
scas
push
push
xchg
call
mov
push
push
add
add
sub
call
fwait
bound
mov
mov
es
fs
add
add
jo
outsb
bnd
call
outsl
outsl
jae
push
or
ret
insl
call
outsl
add
cwtl
gs
mov
jne
addr16
je
inc
jne
outsb
mov
add
lods
mov
aas
add
mov
aas
add
add
cs
mov
inc
cs
mov
inc
cs
add
sbb
cs
insb
fiaddl
xor
mov
add
cs
addr16
add
ja
push
je
jo
xchg
gs
jbe
add
cs
ja
push
je
xchg
add
add
popa
outsb
dec
xchg
add
cmp
inc
mov
push
jge
jae
add
or
es
std
push
push
gs
jae
je
add
push
fstl
jns
arpl
ja
jmp
jb
pusha
adc
jo
outsl
daa
jb
insb
and
push
sbb
jle
scas
xchg
insb
popf
jo
jb
inc
mov
mov
add
add
push
dec
arpl
pop
jno
insb
inc
arpl
add
add
push
adc
movsb
adc
dec
pop
jb
jmp
push
addr16
or
xor
pop
addr16
insb
push
cmp
sub
add
sbb
jne
pop
mov
aaa
in
sbb
add
xor
push
sub
add
bound
add
je
lods
sub
add
adc
pop
add
sub
inc
add
or
dec
iret
cmp
insb
leave
aas
add
sarl
add
sub
je
add
add
movl
jbe
incb
insb
add
add
cli
add
add
in
aas
add
add
pop
out
aas
add
add
add
add
add
add
add
add
insl
add
jo
push
jae
inc
add
add
or
dec
jno
outsl
clc
xor
arpl
jo
add
jmp
add
add
add
jmp
add
jmp
mov
ljmp
pushf
outsl
gs
insb
jbe
lea
cmpsb
jo
add
add
jge
inc
adc
jb
push
outsl
add
insb
sbb
add
and
insl
jns
dec
jbe
faddl
insl
lret
cmp
lret
imul
or
insb
push
and
imul
divb
dec
les
dec
lret
orl
add
aad
add
test
and
lret
or
or
mov
sub
and
push
jmp
add
leave
add
add
add
add
add
lcall
or
dec
add
add
in
ljmp
in
ljmp
in
call
insl
in
call
insl
in
ljmp
idiv
cmp
pushl
out
lcall
add
add
push
add
add
punpckhbw
mov
push
push
setb
incb
add
cmp
push
rclb
imul
scas
in
mov
test
lds
rclb
imul
scas
test
sbb
cmp
adc
mov
sbbb
adc
stc
mov
cmpl
adc
add
mov
push
repz
add
or
or
add
push
add
je
sti
test
addl
push
pop
add
push
push
cmp
add
hlt
cld
pusha
add
cld
push
add
cld
imul
cld
call
pusha
popa
je
cld
call
inc
dec
inc
mov
inc
imul
add
push
inc
dec
inc
jmp
jae
inc
pop
bound
pop
je
adc
inc
bnd
jb
jne
add
in
add
cmp
dec
xor
pop
add
stc
add
add
add
add
add
ja
add
add
ret
mov
cs
mov
cs
mov
cs
mov
jnp
inc
jbe,pn
inc
add
add
subl
cmp
cs
push
insl
dec
jmp
jo
and
das
stc
push
jno
adc
imul
inc
sub
cs
xchg
imul
pop
loope
aas
push
loopne
push
pop
out
push
push
mov
push
xchg
or
cs
stos
outsl
add
outsl
add
stos
add
add
icebp
stos
outsl
add
stos
outsl
add
add
add
add
lcall
add
add
mov
add
add
add
add
add
fisttpll
in
push
and
lcall
push
in
push
sub
inc
sub
add
inc
cli
dec
das
pop
add
fnstsw
push
in
inc
jmp
add
jl
and
add
sub
inc
and
push
jmp
je
inc
mov
push
add
fwait
outsb
push
dec
fwait
jno
add
add
mov
jne
add
push
inc
mov
add
cltd
incl
ljmp
xor
dec
inc
jmp
in
dec
sbb
add
add
inc
dec
jmp
icebp
dec
pop
jmp
fdivrl
inc
and
add
es
dec
push
call
cmp
push
add
dec
push
add
inc
inc
pop
add
add
aas
dec
inc
mov
pop
outsb
outsb
cli
popa
je
lock
add
xchg
outsb
outsl
js
daa
arpl
pop
arpl
add
add
je
add
add
imul
outsb
in
gs
push
outsb
arpl
pop
imul
insb
addr16
pop
gs
arpl
in
push
add
insb
imul
or
popf
add
add
cmc
loop
cs
inc
loopne,pn
inc
cs
pop
outsb
bound
addr16
jmp
push
pop
add
add
arpl
jmp
push
pop
pop
andb
mov
popa
fs
push
pop
stc
jbe
je
jmp
add
cs
add
cs
jmp
mov
test
jle
cs
jle
cs
sub
in
dec
adc
push
lcall
push
push
xchg
mov
call
imul
inc
add
add
xor
mov
bnd
xchg
sub
jb
ss
inc
jne
aas
in
inc
jg
add
imul
and
imulb
insb
out
add
aas
aad
out
cmpsl
lds
out
xchg
repz
cmc
pop
in
mov
sbb
scas
add
add
divps
adc
aas
cmc
push
and
push
push
add
in
scas
adc
jmp
sub
aas
cmc
add
ljmp
flds
inc
xor
shl
mov
add
sub
std
adc
data16
jp
popl
lods
xor
sbb
xor
jmp
xor
loope
xor
imulb
add
xor
adc
xor
sub
xor
add
mov
add
mov
add
mov
add
mov
add
ds
jo
call
mov
imul
add
jb
pop
push
stc
decl
fstpt
inc
add
jb
pop
cmc
dec
pushl
cld
jbe
in
adc
add
aam
cli
cld
push
mov
push
push
push
mov
push
call
or
jecxz
cmp
cs
xor
push
repnz
push
outsb
or
cs
jnp
cmc
nop
jbe
cld
cmpsb
fcompl
jge
jbe
and
cmp
outsb
fnstcw
movsl
fisubrs
fiadds
icebp
xor
push
scas
push
leave
add
add
loope
lea
push
push
js
pop
push
orb
inc
cmp
push
shrl
adc
sub
xchg
sarl
sbb
pop
add
pop
push
adc
out
je
add
push
into
push
sub
shlb
je
jl
push
push
fisttpl
ss
fmull
push
fcmove
fcoml
add
add
add
push
jge
call
inc
adc
lock
inc
jnp,pn
test
out
aam
aaa
dec
in
inc
sub
jb
cltd
lock
adc
jbe
push
cs
push
adc
add
inc
fdivr
inc
addb
and
std
jne
fdivr
ret
add
insb
cli
pushl
cmc
ficoml
add
pushl
add
add
pop
add
hlt
add
sub
idiv
aam
adc
mov
in
jae
scas
cmp
cmp
adc
cmp
add
pop
mov
in
je
test
jo
cmp
ja
mov
add
add
jmp
aaa
call
add
mov
shlb
cwtl
jae
push
inc
clc
adc
add
add
add
inc
sbb
cli
add
add
add
add
push
xorb
adc
jo
or
jp
adc
das
rcrb
add
stc
push
mov
adcb
push
aaa
fstl
adc
inc
add
sti
add
adc
cmp
push
dec
int
in
out
add
mov
push
lea
add
dec
icebp
stc
incl
push
push
mov
sub
add
imul
cltd
imul
fisubrl
dec
out
pop
mov
push
add
sub
add
mov
mov
add
dec
sub
test
mov
jbe
push
mov
add
les
push
add
add
pop
add
fld
jnp
jmp
xor
inc
add
fwait
cmp
cmp
xor
popa
jnp
leave
in
add
add
repz
inc
jmp
push
movsl
fsubl
and
add
push
sahf
jle
lock
in
js
push
divb
call
inc
cmp
pop
jmp
je
cs
push
sub
add
add
ficoms
cmp
jecxz
jmp
add
jmp
push
mov
sti
imul
lock
je
add
pop
in
jns
leave
sub
add
test
ja
push
jmp
xor
sub
inc
sbbl
outsb
lods
fldt
pop
mov
rolb
ljmp
jg
mov
or
sahf
xor
gs
outsb
or
push
sbb
loop
jle
in
sub
sub
cli
insl
mov
and
fists
ljmp
and
hlt
out
mov
je
push
sbb
cmpl
ljmp
add
adc
push
fdivr
jne
dec
add
prefetcht1
add
add
add
test
jo
pushw
push
add
lret
xchg
ss
pop
or
std
push
mov
loop
rclb
inc
std
push
push
incl
clc
push
lret
adc
int3
and
test
inc
pop
lea
dec
lea
dec
jmp
add
inc
pop
push
orl
and
add
aad
jmp
cs
fldenv
je
je
and
aad
add
ja
adc
push
call
mov
outsl
pop
cwtl
pop
pop
adc
add
sbb
ja
push
out
fiaddl
and
aas
and
daa
fcompl
fadds
lea
xlat
push
push
push
lret
adc
jge
mov
mov
inc
je,pn
incl
add
cmp
inc
cs
add
cltd
dec
mov
cmc
les
push
push
jge
inc
sub
cmp
mov
mov
fcmovnb
push
popa
jnp
pop
inc
jmp
call
sub
ficoml
jnp
sub
data16
jbe
add
add
insb
notl
add
dec
cmp
fimull
outsb
cmp
fildl
jmp
outsl
and
sbb
adc
inc
push
xor
call
and
xor
fnstenv
pusha
jge
scas
call
jmp
jmp
sbb
inc
cli
cmp
jmp
shll
inc
mov
pushl
dec
hlt
out
xchg
in
sub
add
jns
jmp
loop
add
in
incl
std
push
push
lock
in
cmp
jb
sbb
cmp
sbb
add
add
scas
pop
clc
movaps
jnp
adc
xorb
jp
inc
add
arpl
adc
test
or
jne
fnsave
subb
pusha
movups
add
add
call
adc
aad
add
inc
jo
mov
incl
cmp
jmp
leave
inc
dec
mov
es
sbb
cld
pop
dec
add
inc
add
cli
jecxz
lret
cmp
cld
cmp
outsl
das
mov
adc
test
or
cli
pop
add
add
add
int3
ja
repnz
out
ljmp
incb
push
ret
jae
bound
add
out
lea
fiaddl
push
mov
and
push
xlat
das
xlat
add
sub
add
or
in
xlat
adc
cmp
decb
xchg
push
inc
cs
std
jmp
push
add
or
filds
xlat
insl
cmp
add
loope
pop
in
dec
incl
adcl
push
fsubrl
add
insl
repz
jecxz
in
shl
icebp
std
mov
insb
add
mov
add
lcall
fsubrl
jp
jbe
pop
sub
mov
jnp
divl
cmp
js
mov
pop
fsubrl
jmp
sti
cs
out
dec
add
add
ja
inc
insb
cld
call
xlat
flds
jmp
xor
neg
ljmp
sub
push
xor
mov
push
sahf
sub
cmp
jmp
push
call
insl
in
outsb
adc
sub
mov
add
jp
adc
pop
inc
add
dec
xor
add
add
add
xchg
xchg
loope
call
sbb
add
add
cld
sub
push
test
ds
lea
fmulp
decl
push
ds
sub
jg
add
jns
in
fdivrp
push
sbb
sbbl
or
and
jbe
or
cli
cld
mov
scas
xor
add
jp
or
add
xlat
jne
or
aaa
or
push
mov
out
mov
aad
add
pop
add
ret
cli
scas
add
inc
push
je
mov
mov
adc
push
or
inc
std
cmc
mov
and
lret
add
fsubl
xor
sbb
clc
aas
cs
xorb
mov
ret
in
push
popa
or
add
or
cmp
xchg
loope
push
roll
sbb
jle
pop
add
jecxz
adc
xlat
xchg
push
xchg
ret
shll
aas
cs
imul
mov
push
adcl
xor
and
clc
aas
cs
pop
add
lret
cli
adc
xor
mov
add
hlt
cmp
add
add
in
sti
inc
jge,pn
or
mov
int3
pop
das
add
mov
sbb
sbb
adc
dec
add
imul
call
enter
add
add
dec
imulb
add
rcr
movsl
test
rcr
inc
add
add
in
das
adc
lret
out
add
adc
mov
add
shrb
inc
cmp
outsb
sub
sub
add
push
loop
mov
jl
cmp
sub
ret
push
aaa
ljmp
ljmp
ret
inc
cmp
ret
notb
or
cli
in
shrl
ret
imul
sbb
mov
push
dec
push
push
push
or
fdivr
aam
idivb
jmp
push
or
xlat
add
add
fists
rcrb
ss
mov
jmp
stos
out
mov
mov
xor
loopne
inc
pop
inc
add
push
adc
jne
mov
notb
cmp
ds
test
add
sti
daa
add
addr16
jo
mov
add
out
fnstcw
push
mov
sub
adc
jl
mov
scas
and
call
mov
pop
jg
jmp
mov
add
jne
adc
or
adc
inc
xor
xor
clc
loop
adc
mov
pop
sub
out
xchg
cli
add
push
dec
cld
add
cmp
push
cld
add
add
mov
adc
gs
push
xor
int
inc
push
pop
add
or
imul
adc
lock
cs
jae
xor
adcl
je
xor
notb
push
jge
leave
insb
fiadds
push
mov
adc
scas
jmp
js
mov
nop
clc
add
push
fdivr
xchg
add
test
xchg
jmp
pop
aam
xor
sub
mov
cmp
in
jbe
lea
push
or
div
cmc
dec
add
stc
push
or
hlt
jge
xor
cmp
xchg
out
fsubl
mov
push
in
stos
fldl
pop
fcmovnbe
testl
add
rcrb
xor
adc
sub
mov
sub
add
jmp
jg
cmc
inc
lret
push
mov
dec
jmp
xor
call
push
aam
outsl
push
fsubs
in
add
mov
incl
mov
roll
add
cli
fsin
insl
in
push
xor
test
xor
jne
es
clc
xor
pushl
ret
inc
clc
xchg
and
add
inc
hlt
mov
mov
inc
hlt
cmc
insl
xor
mov
rolb
ljmp
out
push
std
xor
call
decl
adc
mov
push
add
add
adc
inc
push
call
in
ret
inc
mov
call
dec
mov
push
xor
jmp
repz
ljmp
xchg
sti
mov
sub
outsb
insb
add
and
lret
and
cli
adc
jno
mov
out
out
xlat
mov
insb
add
loope
adc
add
and
add
outsb
adc
pop
xlat
movsl
insb
add
sbb
or
adc
or
sbb
incl
lock
movsl
or
arpl
adcb
xor
mov
dec
mov
push
jge
leave
jle
jg
push
add
push
out
popa
out
add
and
and
add
mov
or
adc
add
add
add
cmpb
enter
movsb
out
daa
aas
cmp
add
push
fs
stos
cwtl
add
cmp
lret
outsl
add
imul
fdiv
pop
add
ret
add
movsl
dec
sbb
xchg
fnstcw
sub
movsl
rcll
push
jmp
or
xchg
rcll
ret
dec
or
add
add
dec
or
std
sti
aam
out
aas
jmp
add
lcall
and
cwtl
jns
adc
jg
add
cmp
push
jb
sub
and
push
bound
lock
ljmp
sub
inc
sbb
int
pop
add
test
inc
fsubr
jns
push
mov
adc
jmp
dec
sub
lea
nop
dec
mov
or
scas
and
mov
aam
inc
add
adc
mov
pop
pop
mov
in
mov
fsubl
out
push
movl
out
sub
std
push
pusha
inc
and
lods
add
je
je
aam
jno
lods
adc
cmp
xor
add
and
ret
push
mov
sub
add
jne
mov
aam
aam
add
in
or
loope
cmpb
orb
ja
mov
sbb
cmpsb
cmp
lea
push
adc
xchg
aad
ss
sbb
add
dec
push
or
add
mov
in
cwtl
push
into
aad
outsb
dec
or
repz
mov
mov
fiaddl
mov
lret
cs
adc
add
call
add
jnp
lea
aad
jmp
lods
arpl
pop
add
rolb
lock
cmp
pop
lock
mov
cmp
hlt
add
mov
add
test
cli
ret
loope
pop
dec
ss
mov
inc
subb
pushl
jo
loop
cs
pop
call
sbb
in
sbb
jmp
inc
cs
stc
jmp
add
add
xadd
push
sub
pushw
sahf
imul
adc
fsts
add
idivb
jmp
sub
andb
inc
jmp
cwtl
pop
in
sub
icebp
aas
jmp
out
pushl
pop
rolb
in
sbb
inc
jmp
mov
aaa
add
inc
lahf
adc
ds
loopne
rorb
jmp
out
xorps
shrl
add
add
fsubs
je
cmp
adc
xor
dec
add
push
pop
cld
push
inc
and
cmp
pop
mov
mov
inc
fistl
push
adc
push
cmp
inc
xor
add
add
sub
jecxz
xchg
call
sarl
cmp
test
sbb
jg
inc
add
add
push
sbb
adc
cs
dec
or
push
call
jle
clc
or
daa
add
jae
xchg
add
pop
xor
outsb
dec
mov
imul
or
push
mov
rclb
fs
in
jg
ss
pop
xchg
jnp
es
xor
mov
xchg
test
sbb
aas
cs
es
ss
into
cmp
push
call
xchg
add
cmpsl
movsb
cli
cmp
and
cld
rcll
push
push
sti
push
je
add
mov
xor
fisttpl
jmp
mov
icebp
shlb
ljmp
pusha
xor
xor
add
sub
push
out
out
lret
fcom
imul
cmp
ss
leave
jb
call
cmp
arpl
out
inc
sub
jb
xchg
jnp
push
dec
subl
adc
mov
inc
test
xchg
xchg
add
push
sbb
jmp
in
jmp
pop
fs
or
pop
movsb
dec
jmp
or
lret
sti
insl
add
mov
xor
lds
inc
add
pusha
or
push
in
jmp
iret
adc
fmuls
add
or
sub
add
in
hlt
outsb
filds
add
movb
verr
sub
in
sub
mov
lea
jp
icebp
sar
lods
jns
add
sub
mov
push
push
ss
push
adc
je
sub
dec
pop
add
jne
mov
rolb
add
stos
add
pop
push
mov
xchg
scas
dec
push
lahf
test
inc
lock
ret
jae
cmp
enter
ret
add
push
adc
push
push
inc
ds
fidivrl
or
xor
or
or
jnp
inc
call
cs
ret
jae
pusha
inc
in
add
jno
fiaddl
flds
adc
add
jmp
add
pop
fadds
add
scas
add
stos
mov
add
push
pop
or
in
sti
mov
adc
mov
jg
negb
jle
push
or
cmc
pop
incl
clc
aas
cs
mov
add
cs
dec
mov
stos
pop
mov
mov
lcall
dec
add
add
fs
fisttpl
xor
add
sbb
fmul
clc
xchg
int
jp
fldt
shl
std
pop
and
roll
fnstcw
fcom
leave
xor
fs
cmp
add
cs
aam
mov
and
mov
and
clc
add
adc
add
push
stc
aad
nop
enter
add
jns
mov
add
pop
push
xor
sti
mov
fsts
lds
ljmp
xchg
mov
xor
out
mov
push
call
test
sub
int
out
jae
hlt
xor
pop
bswap
push
add
je
cmp
call
add
add
ljmp
push
lock
gs
jmp
or
pop
std
aam
je
sti
hlt
adc
insl
add
std
sub
lret
mov
test
add
dec
movsl
sqrtps
sahf
xor
add
je
xor
mov
add
add
ret
jb
fmull
add
push
push
lret
push
add
add
add
cmp
add
mov
ret
rcll
mov
orps
pop
int
clts
incl
push
add
add
inc
jl
pop
inc
adc
iret
inc
jl
scas
test
inc
ud0
dec
inc
cmp
dec
inc
sbb
inc
lcall
out
stos
mov
stc
daa
jg
loopne
sbb
fs
jno
xchg
popa
fdivs
loop
cmp
cmp
mov
add
cs
inc
push
xor
xor
cmp
icebp
aas
cs
inc
adc
fwait
testl
stc
arpl
push
stos
dec
add
cs
add
pusha
sti
pop
add
add
pop
fcmovnu
pop
dec
xlat
add
inc
idivl
inc
add
add
add
jne
jle
sti
inc
and
push
movsb
xchg
add
jle
lock
add
aad
jg
inc
rol
adc
notl
movsl
jle
fadds
int3
inc
leave
insb
les
cmp
fadd
adc
add
leave
int
movsb
inc
cmp
lods
jmp
xor
lock
call
jmp
push
mov
xchg
add
sub
stos
mov
ja
aad
xor
ljmp
jge
in
dec
test
push
lea
sub
add
sub
mov
adc
out
pop
add
sub
cmp
sub
xchg
mov
mov
xchg
push
push
dec
cmp
add
add
pop
add
push
mov
inc
add
fs
cmpsb
insb
push
add
sub
inc
and
ret
and
xchg
rolb
add
call
jb
xchg
dec
jge
loopne
and
lock
sbb
add
xchg
sbb
cmp
push
fdivl
dec
push
add
add
cmp
or
inc
xor
push
sbb
add
mov
insb
add
add
decl
adc
sub
std
ja
stos
in
pop
xlat
add
fsubrs
cmc
fsubrs
push
sub
fnstenv
push
popa
dec
dec
or
cwtl
mov
add
mov
aas
and
ljmp
cs
add
add
stc
cwtl
add
push
pusha
sub
push
add
flds
push
push
inc
pop
negb
je
xchg
inc
mov
push
imul
inc
pop
jae
lret
ja
pop
pop
jns
ds
xor
pop
add
mov
repnz
ss
sub
fld
call
add
push
faddl
add
inc
cmp
add
add
sub
jmp
ss
ljmp
inc
fsubs
dec
adc
sahf
cmp
es
inc
shll
loop
mov
or
push
jns
jl
ret
add
pusha
call
inc
push
jnp
dec
jne
and
xor
addl
call
movsl
sar
rolb
jae
jmp
lds
or
imull
push
xchg
dec
clc
std
cmp
jo
adc
push
pop
lret
add
adc
or
enter
lods
rclb
mov
sbb
pusha
mov
call
adc
mov
sub
aaa
add
sbb
xor
sub
cld
pusha
add
add
jns
insl
sub
add
mov
rcr
jg
add
cmpsb
or
mov
jg
test
incl
push
pop
inc
mov
adc
dec
inc
cld
daa
dec
test
mov
or
push
mov
jae
clc
shl
adc
arpl
or
xchg
adc
add
add
cmpsl
fs
cmp
je
lods
ret
mov
cmpsl
dec
inc
loopne
test
inc
cmpsl
outsb
dec
adc
inc
pop
clc
mov
loopne
push
adc
add
scas
sub
lods
inc
sub
icebp
mov
je
ds
mov
or
into
or
cmp
add
push
jle
mov
les
sbb
dec
add
add
cs
imul
inc
lods
dec
sub
int3
inc
and
dec
or
jno
adc
flds
jmp
sbb
comiss
ds
xor
add
mov
repnz
rcrl
mov
pushf
cmpsb
dec
call
mov
lret
add
add
or
and
popa
sarl
adcb
cs
add
mov
xor
aad
xchg
mov
add
push
pop
jne
or
sub
mull
jmp
mov
push
call
mov
stos
mov
jl,pn
adc
or
cs
jns
les
shlb
lcall
sub
loope
jmp
icebp
mov
leave
aad
and
gs
mov
add
shlb
sahf
lods
sti
jmp
inc
orl
pop
push
call
mov
add
sub
dec
adc
sub
insb
sti
ss
aad
lcall
mov
movsl
and
add
add
inc
sub
jmp
lret
dec
add
inc
jl
les
adc
testb
jae
leave
inc
mov
enter
pop
add
jmp
leave
inc
mov
mov
pop
movl
dec
dec
mov
adc
add
pop
adc
dec
clc
dec
dec
addb
jge
push
push
adc
add
rorb
pop
add
or
or
add
push
in
add
and
add
test
pop
data16
sub
mov
and
sbb
mov
jl
cli
sub
dec
push
es
add
sub
add
mov
mov
mov
xchg
push
push
add
add
cmp
add
stos
push
add
and
push
adc
dec
rorb
xchg
gs
mov
incb
adc
out
jmp
mov
add
lcall
mov
adc
jbe
mov
mov
and
xor
mov
add
add
dec
loope
mov
idivb
jmp
adc
xor
stos
mov
inc
mov
out
andb
cld
inc
xor
stc
pop
jo
xor
mov
ja
cmpsl
and
insl
push
dec
ret
inc
sub
es
or
stos
sub
xlat
cmp
testl
add
pop
mov
push
mov
add
fisubl
inc
jmp
mov
sub
je
rorb
push
add
test
xor
xchg
ds
add
mov
mov
subb
pop
jbe
sbbl
sub
mov
mov
jbe
pcmpgtw
add
xchg
test
add
hlt
or
xchg
jne
jmp
iret
cmp
push
mov
into
inc
lods
lea
stos
std
lcall
dec
push
incl
rclb
inc
pop
cmpl
pop
mov
aaa
mov
push
inc
jge
clc
add
test
jmp
cmp
lcall
subl
jge
or
fwait
inc
lcall
jge
popf
add
add
jl
lcall
xor
call
jno
add
inc
or
add
movsl
add
cs
movsl
inc
sbb
fs
add
daa
jmp
imull
adc
cs
aaa
or
xor
cli
add
jg
das
fiaddl
mov
jg
shlb
mov
imul
das
pop
shlb
ret
test
mov
add
xor
incb
add
lea
js
dec
stos
dec
push
call
sbb
daa
ss
fiaddl
es
mov
add
call
mov
ret
cltd
add
add
mov
add
test
add
mov
mov
mov
call
sub
mov
adc
add
mov
xor
cmc
cltd
or
jge
add
jle
clc
xor
add
mov
mov
cld
push
mov
test
mov
add
mov
test
add
adc
incb
in
mov
fnstcw
add
scas
js
insb
or
call
and
sbb
sub
or
lock
je
xchg
xor
je
in
sahf
test
insb
test
test
add
add
cmp
jne
mov
mov
xchg
sti
incl
add
loopne
inc
lock
inc
in
xlat
cld
call
jg
jmp
jbe
push
add
inc
push
xchg
cld
push
mov
add
test
std
fisttps
cmp
or
addl
jle
pop
adc
mov
sub
loopne
push
push
push
aaa
xor
mov
insb
sbb
xlat
add
adc
ljmp
mov
jecxz
add
cs
jle
xor
pop
mov
push
dec
pop
inc
pop
or
ficomps
dec
add
push
mov
add
out
add
in
cs
add
push
push
push
cmpsl
pop
mov
cltd
mov
push
aam
add
test
add
repz
movsl
jecxz
cmp
dec
adc
mov
cmp
xor
adc
outsb
inc
add
add
mov
call
mov
scas
jge
test
nop
mov
push
xchg
ljmp
inc
mov
mov
mov
mov
pop
mov
mov
ds
add
imul
sub
add
sub
xchg
cwtl
xchg
push
cmpsb
inc
adc
add
test
inc
sub
push
or
push
jb
cmp
jl
sbbl
sahf
decl
imul
adc
xchg
daa
add
loope
inc
fucomip
jmp
scas
jmp
mov
push
sub
push
or
add
add
dec
add
mov
mov
gs
call
add
subps
cmp
or
cmpl
adc
insl
test
outsl
aam
out
mov
subb
cwtl
insl
dec
mov
shrb
sub
dec
rorl
std
adc
adc
jmp
cwtl
xor
add
add
stos
xchg
call
adc
or
add
out
iret
lea
pushf
std
lcall
push
xor
movsb
cmp
call
sub
ja
add
ja
jae
cmp
xor
xlat
cmp
cwtl
sti
push
mov
fwait
std
lcall
mov
xor
jno
or
lods
test
loope
or
ret
push
add
add
add
es
fcompl
xor
inc
scas
sub
mov
subb
and
sub
sbb
decb
movsb
push
call
add
test
sub
pop
cwtl
stos
xchg
out
cmpsb
add
ret
cmp
mov
jne
mov
push
add
les
imul
mov
lock
push
add
add
mov
jle
add
mov
inc
mov
shlb
pop
xchg
dec
cmp
test
cmp
jge,pn
add
or
mov
mov
cmpb
std
jae
push
add
jo
push
dec
push
ficoml
call
scas
inc
mov
mov
stos
out
ds
call
andb
mov
jae
test
add
push
add
add
cwtl
decb
ror
add
pusha
mov
std
mov
sub
dec
push
ds
push
add
scas
cmp
sbb
mov
sub
test
mov
add
add
add
mov
mov
inc
dec
test
dec
pushl
mov
and
mov
xor
aas
pop
dec
add
xor
jl
add
jp
incl
jns
call
insl
cmp
or
ljmp
add
dec
insl
cmp
or
jmp
push
call
mov
std
cmp
mov
pop
call
adc
pushl
pop
or
cld
ljmp
movb
xchg
add
movsb
sti
jp
out
push
cli
decl
cmpsb
xchg
fwait
scas
add
stos
lods
decb
mov
loopne
xor
or
mov
les
add
add
mov
movsl
mov
das
or
cmc
in
cmc
jae
add
imul
lcall
int
inc
lcall
and
pop
inc
cs
jae
sbb
jle
inc
add
jl
inc
xor
enter
push
lahf
andl
mov
cmp
adc
jge
mov
add
imul
cmpsb
add
repz
mov
shrb
aad
mov
push
movsl
dec
icebp
pop
popa
push
shll
lods
hlt
out
ljmp
sbb
jle
mov
xor
test
lcall
bound
loop
bound
stos
cwtl
fwait
add
add
cmp
mov
clc
cmpsb
mov
dec
scas
push
sub
std
or
lcall
call
fadd
out
in
lahf
pop
repnz
inc
and
inc
cmp
fidivs
sbb
push
xor
mov
jns
rorl
jae
and
sti
popa
mov
lret
vfrczsd
add
add
scas
call
inc
lods
scas
inc
lock
scas
test
dec
mov
out
jmp
adc
js
je
ret
inc
imull
mov
jo
or
mov
lcall
sar
imul
cmp
push
call
cmp
lock
add
testl
add
xorb
inc
jl
jne
cmp
push
add
pop
inc
push
inc
add
les
sub
xor
lods
subb
lret
sti
vandnps
push
xchg
add
mov
add
movsl
out
je
sbb
je
orb
add
std
adc
jp
lods
stos
add
and
or
add
pop
dec
dec
lock
sarl
je
push
lods
mov
fwait
ljmp
ss
adc
lds
dec
jmp
add
js
mov
dec
or
fists
mov
xorb
ss
shll
ja,pn
mov
jg,pn
lods
xor
lods
add
add
xor
lds
call
dec
jne
sub
and
adc
jo
fdivl
movsb
stos
sub
jnp
aam
xor
sarl
lods
sub
pushf
dec
xchg
mov
sbb
pushf
inc
lods
movsl
lods
lods
cmpsl
out
ss
sbbl
jg
lods
add
cmpsl
inc
jns
add
sub
add
sub
sbb
pushl
sub
mov
xchg
mov
daa
stos
push
inc
inc
stos
cs
push
jl
xchg
xorl
push
shll
lock
sub
movsb
inc
jmp
pop
inc
add
aaa
lock
sub
adc
mov
sub
ja
std
test
lock
xor
push
scas
pop
adc
xor
icebp
add
add
cmp
xor
add
lock
std
mov
push
mov
mov
insl
mov
adc
push
or
jmp
push
mov
xchg
imul
cmp
out
lret
pop
cmp
push
add
mov
ret
jnp
addr16
and
add
mov
pop
add
lock
cmp
mov
jmp
and
lret
cmp
fadds
cs
cs
fisttpll
add
cs
push
lcall
ret
je
sbb
mulb
cwtl
add
inc
neg
add
cmp
or
rolb
cmc
in
and
jae
incb
push
inc
cs
add
aaa
push
xor
add
scas
pop
add
cs
push
push
pop
mov
add
pop
dec
pop
test
lds
cs
jmp
sbb
adc
in
mov
and
lods
fcoml
add
jge,pt
clc
xor
mov
cli
pause
sbb
jmp
test
add
in
push
imull
push
cmpsl
call
cli
sqrtps
or
jmp
lods
xor
fs
cmpsl
call
pop
sbb
loope
leave
imulb
cmpsl
call
in
jp
je
mov
cmpsl
push
clc
andl
test
repz
test
jnp,pn
cmpsb
xchg
cld
es
ret
xor
and
jae
into
dec
cmpl
add
xlat
dec
andps
divl
test
mov
add
and
dec
adc
clc
jae
fists
mov
pop
inc
add
cli
add
sub
jb
clc
subb
mov
subb
cmp
out
sbb
push
out
in
sub
add
cltd
sbb
jmpw
add
mov
pop
pop
sbb
rorb
hlt
je
sub
faddl
xor
jg
je
sub
mov
aad
inc
push
ret
push
add
roll
mov
test
cmp
xor
mov
add
xor
pushf
mov
cmp
aad
inc
adc
cmp
test
push
jl
incl
add
cld
call
pop
mov
subb
ljmp
xchg
fs
cmc
flds
call
mov
cs
movsl
sti
out
lret
movsl
add
jb
add
xchg
add
sub
xchg
cs
add
test
add
and
push
mov
ja
testb
sub
inc
pop
add
add
xchg
add
pop
or
mov
mov
testl
in
imul
cltd
es
test
lods
inc
fisubs
sbb
lock
sub
insl
les
ja
sbb
inc
call
sti
mov
icebp
jp
sti
cmpsb
std
das
ja
inc
or
add
nop
add
xor
iret
pushl
ret
cld
add
in
lods
mov
pop
icebp
flds
rolb
jp
pop
ljmp
ja
scas
in
mov
int3
xchg
mov
jne
inc
cmp
add
xchg
sub
shll
add
shrb
sarl
jmp
sub
xchg
xchg
out
jmp
sub
add
pop
lock
xchg
fwait
out
jmp
decb
stos
push
jmp
out
pushl
push
xchg
sub
pop
lcall
pop
cwtl
into
loope
add
push
lods
mov
aaa
jmp
in
fiaddl
out
or
jbe
sub
aam
out
rcrb
inc
inc
mov
cmp
add
adc
call
cmpsb
enter
jb
test
or
jp
leave
inc
xchg
imul
nop
mov
pop
pop
std
incl
je
jl
mov
decl
mov
clc
jnp
cmp
rsqrtps
jns
add
ss
cs
test
ljmp
cld
call
push
mov
add
add
cs
int
cs
inc
pop
push
cmp
ss
add
jo
mov
lcall
cs
popl
dec
add
arpl
adc
push
xor
mov
xor
out
mov
test
cwtl
add
aam
je
push
lods
mov
xchg
add
rorb
incb
add
fiadds
pop
aaa
cmp
sub
add
add
cltd
sbb
nopl
xchg
mov
jmp
sbb
cmp
push
jo
jmp
push
popa
test
dec
add
stos
adc
es
xor
adc
inc
cmpsb
xor
inc
mov
adc
xor
add
add
jmp
add
mov
add
add
cwtl
mov
repnz
mov
notl
cwtl
imul
test
pop
and
popf
dec
xchg
xor
add
mov
imul
dec
mov
mov
dec
call
dec
icebp
aas
jmp
mov
popf
adc
std
movb
add
cs
sub
mov
push
add
pop
adc
push
pushl
subl
popf
dec
insb
mov
sti
jbe
dec
lea
sbb
bound
cli
mov
incb
call
in
cld
lcall
push
or
incl
xchg
call
subl
sub
pop
add
add
lret
xlat
mov
inc
insl
push
movl
mov
fmull
call
sbb
dec
push
or
dec
call
adc
or
add
push
cmp
jmp
lea
xchg
add
lcall
ss
je
add
add
fisttpll
mov
dec
add
pop
mov
lcall
test
jle
test
cmpsb
pop
cld
leave
push
xchg
mov
out
xorb
add
pop
hlt
mov
cmpsb
sub
movsl
pop
popl
ss
sti
jp
je
lea
jmp
pop
add
cmpsl
test
sbb
popf
je
jmp
test
adc
and
and
mov
pushf
xor
icebp
cs
push
cmp
ret
add
add
mov
add
das
xchg
ss
in
mov
jmp
inc
cs
repz
pop
inc
jmp
mov
adc
lods
pop
push
xor
sbb
sub
add
add
add
xor
xchg
mov
jmp
sub
jle
pop
xchg
push
sub
cmp
mov
es
cmp
inc
jb
add
stos
adc
jb
dec
lea
add
push
push
test
xor
add
sub
jmp
add
add
xchg
lcall
jmp
aad
sti
mov
cmp
gs
jmp
aas
xor
mov
adc
out
decl
xor
leave
inc
inc
jnp
test
add
or
add
pop
inc
add
dec
inc
add
cmp
add
xchg
push
inc
pop
mov
popl
add
add
add
push
cmp
mov
pop
add
insl
mov
clc
lea
bnd
call
or
dec
lcall
jbe
push
and
lret
cs
repz
call
mov
xor
and
mov
add
xchg
add
stos
lret
add
ss
inc
add
stc
data16
in
add
sub
int
jae,pn
cmp
xchg
int
jae,pn
cmp
int3
inc
adc
xor
ffree
inc
test
inc
add
ds
in
xchg
add
mov
jmp
icebp
xor
cmc
stos
or
add
add
aaa
xchg
adc
call
inc
mov
les
test
inc
add
ds
pop
mov
std
mov
add
subl
stos
mov
icebp
xor
dec
inc
push
mov
jmp
shrl
jmp
sub
mov
jmp
sbbb
jmp
or
test
lods
popa
sub
xor
add
add
jo
push
ljmp
sub
xchg
or
jmp
mov
rcrb
das
call
pusha
adc
addr16
add
insl
hlt
add
jmp
push
add
vmulsd
sub
push
push
insl
insb
add
jmp
inc
ljmp
add
add
add
dec
out
inc
push
out
cmp
testb
add
inc
push
cwtl
clc
add
xchg
add
xchg
test
cli
add
decl
out
repz
add
add
mov
mov
jecxz
inc
add
inc
shll
cmp
decb
xchg
dec
incl
add
pop
test
inc
cld
add
pop
add
shlb
add
add
pop
divl
push
sub
pop
mov
mov
ss
cmpsl
pop
fisttps
dec
mov
mov
and
sub
jg
sbb
mov
pop
movsl
fcoml
mov
stos
mov
test
jmp
add
add
pop
add
mov
or
repz
mov
and
push
in
add
adc
movsl
popa
or
dec
mov
jb
out
xorb
cmpsl
add
and
scas
mov
push
or
mov
insl
add
mov
cmp
cmc
pop
cmp
inc
in
mov
add
add
add
sub
mov
cli
scas
inc
lods
add
add
mov
jge
and
fs
mov
jp
mov
bound
mov
mov
bound
dec
xor
cmp
inc
push
add
in
and
xchg
add
add
jge
scas
mov
add
insb
clc
call
test
cmpsl
or
and
inc
mov
mov
cmp
jmp
cmpsb
or
mov
mov
add
repz
dec
xchg
cmp
push
sub
mov
push
loop
les
call
fs
cwtl
dec
inc
lcall
je
vxorps
sub
push
sub
inc
jmp
add
mov
into
mov
into
jne
xchg
call
sbb
notl
imul
outsl
mov
inc
inc
cld
roll
mov
xchg
shrl
imul
rorb
cmp
push
mov
mov
add
mov
adc
xorl
mov
call
cmpsl
mov
aad
ss
decl
loop
push
loope
or
mov
add
adc
push
xor
in
pop
lcall
out
cmpsb
test
xor
in
mov
add
ss
xchg
je
rcrl
push
add
add
mov
push
inc
cmp
rolb
mov
stos
add
push
aaa
push
mov
test
add
xor
cld
jle
add
call
stos
out
or
adc
call
xchg
pop
lock
or
jb
pop
aam
mov
sub
push
xor
outsl
out
call
mov
imul
stc
nop
cmp
sub
mov
stos
mov
sub
mov
stc
nop
hlt
out
xchg
fcmovnu
je
jmp
xchg
mov
mov
add
add
dec
fadd
inc
add
insl
add
push
xchg
push
daa
adc
add
add
iret
jmp
add
mov
sti
push
out
rorl
inc
mov
je
test
add
mov
pushl
stos
cmp
xor
mov
add
mov
jmp
jl
mov
push
mov
movsl
xor
lahf
ss
shl
aas
jmp
pop
ret
push
bound
adc
shll
add
sub
and
int3
outsl
bswap
and
lret
ja
mov
jb
out
subb
add
js
or
in
lret
roll
or
jecxz
inc
add
xchg
mov
cmp
sti
jnp
popa
call
test
enter
mov
push
mov
jno
call
sub
lahf
add
add
add
mov
inc
push
outsl
adc
mov
ret
mov
cs
jae
pop
jnp
dec
fwait
jl
push
pop
lea
pushf
cmp
push
stc
daa
adc
out
fwait
add
mov
xchg
cs
add
and
or
adc
dec
scas
clc
mov
xlat
add
call
out
jp
add
add
fisttpl
repnz
iret
jmp
dec
and
jp
mov
dec
add
fcmovb
loop
mov
cmp
add
adc
dec
dec
loopne
dec
ss
pushl
clc
jl
in
lods
cs
out
xor
ret
call
iret
cs
sbb
add
push
jnp
out
daa
shll
add
jp
das
rcrb
call
jl
cwtl
add
mov
mov
sbb
inc
jmp
fidivrl
xchg
call
pop
mov
pop
jmp
ret
cld
mov
jmp
scas
aas
and
cmp
lret
jmp
add
mov
or
in
add
test
mov
jmp
std
jbe
cltd
mov
mov
sub
js
shl
mov
mov
push
adc
and
pop
cwtl
add
sub
sub
out
cmp
out
dec
adc
lea
or
jmp
xor
add
jl
add
pushf
pop
mov
dec
call
mov
jb
jl
and
pop
mov
mov
and
inc
cmp
or
add
cmpb
leave
call
aas
add
decb
add
dec
call
xchg
jne
pop
xchg
sub
xchg
add
mov
lods
mov
add
add
inc
sub
fldl
cs
push
push
add
add
sub
ret
in
js
mov
push
add
lahf
orb
das
push
movsl
mov
jg
xchg
add
and
stc
xchg
ja
es
es
cs
cld
jle
hlt
push
iret
xchg
call
push
stos
mov
test
cmp
add
jge,pn
mov
dec
sub
cmp
add
add
add
js
outsb
iret
fwait
push
inc
xchg
add
add
call
mov
mov
sub
js
call
jge
mov
test
sti
sti
fcoml
push
push
xchg
enter
sub
push
add
sbb
pop
cwtl
daa
into
stc
mov
popa
jnp
ret
jns
stos
lahf
jno
lret
adc
add
add
pop
jmp
addb
adc
repnz
push
call
sbb
cmp
add
add
jns
xchg
pop
inc
call
jmp
mov
popa
dec
out
mov
and
std
ret
pop
mov
sti
lds
es
xor
mov
movsb
xchg
roll
add
dec
sub
sub
testb
es
push
xchg
sub
inc
push
mov
mov
xor
mov
cmp
mov
andb
cmp
push
cmp
orb
xor
add
movsl
add
inc
or
push
outsb
std
dec
movb
pop
add
push
mov
in
dec
pop
cld
imul
add
les
setae
decl
incb
inc
mov
or
shl
sub
incl
xchg
mov
sbb
ja
or
or
rcrl
mov
add
fdivl
push
fldt
pop
lock
flds
add
imul
roll
add
cltd
jnp
sub
mov
mov
ret
adc
faddl
cs
sbb
stos
pop
insb
xchg
add
je
jmp
jmp
inc
sbb
dec
mov
cmp
cmp
cwtl
cmpl
or
jl
outsl
lcall
pop
hlt
dec
and
inc
adc
rorb
daa
lea
lcall
add
sbb
clc
jp
jns
jnp
xorl
mov
int
lods
sarb
lods
mov
jmp
es
int
inc
jns
jns
out
add
aas
jmp
out
adc
jmp
jnp
andl
test
mov
out
push
inc
cmp
test
rorl
sarl
shr
add
add
xchg
jp
call
adc
inc
in
sbb
jl
pusha
jae
jmp
clc
jmp
sahf
pushf
les
sub
pop
fs
or
icebp
add
add
inc
in
sbb
stos
pushf
cmc
scas
test
subl
and
dec
test
in
sub
sti
push
bound
pop
push
add
add
inc
pop
push
sub
add
push
daa
test
push
std
xorb
xchg
add
in
roll
loopne
push
aad
inc
sbb
sub
syscall
push
pop
jae
lret
incl
xchg
push
or
adc
xchg
jmp
ret
nop
jle
orl
xchg
push
push
push
add
inc
add
add
sti
incl
push
incl
lret
out
add
jnp
pop
mov
cli
xchg
jne
lcall
jl
xchg
adc
mov
push
adc
mov
mov
clc
cs
inc
fnstcw
mov
incl
fiadds
lods
adc
add
xchg
xorb
add
cltd
push
adc
movsb
lcall
xchg
add
mov
ja
mov
xchg
out
imul
inc
cmp
ds
cmpsl
aad
mov
or
cmc
gs
push
sbb
cwtl
add
xorl
cli
or
jg
xor
pop
add
xchg
ja
add
push
mov
js
stos
xchg
add
adc
mov
cmp
mov
pop
sbbl
cmp
adc
ljmp
add
jl
add
lds
test
call
add
sub
cs
testl
push
das
sbb
ljmp
inc
aam
insb
add
ret
or
add
or
addb
test
imul
dec
jmp
add
gs
loope
push
in
push
lods
jne
jo
test
imulb
add
push
nop
pushl
ror
sub
or
fcoml
leave
popa
sub
cwtl
movsb
iret
lods
orl
jmp
bnd
call
add
add
xor
xorl
into
aas
jmp
sub
js
adc
je
mov
xchg
xchg
add
fbstp
inc
in
pop
mov
lret
dec
mov
add
add
std
loope
add
add
mov
out
mov
adc
jb
or
jle
xchg
lea
add
push
mov
jg
and
in
int3
dec
or
rorb
out
call
mov
inc
fwait
add
xor
hlt
cmp
repz
fsubrp
and
jne
lea
ljmp
cs
push
stos
push
add
loop,pn
out
movsl
mov
cmp
mov
call
add
imul
add
mov
repz
out
popa
jg
mov
je
out
add
outsl
mov
je
out
add
dec
dec
ffreep
jae
sub
mov
scas
ret
loop
jmp
cmpsb
sete
out
sarl
mov
add
movsl
out
jnp
or
call
repz
push
add
leave
jge
pop
dec
into
add
push
adc
inc
sbb
add
push
jnp
jg
lret
add
out
int3
push
stc
and
cmpsl
clc
or
mov
push
inc
xchg
mov
jg
adc
andl
adc
sbb
push
lock
cmc
add
sbb
push
mov
jo
mov
add
mov
mov
pop
push
jne
test
mov
out
jo
and
mov
push
jle
xchg
scas
jge
jb
js
mov
sbb
jmp
insl
jl
sub
sar
movsb
adc
sub
pop
inc
mov
adc
mov
jl
and
sar
aam
add
mov
inc
jmp
inc
or
sbb
jge
int
sar
xchg
ret
or
push
mov
cmp
jo
push
mov
inc
adc
call
es
decl
movsb
adc
push
push
mov
sbb
lret
mov
push
ret
or
jp
adc
push
std
incl
std
jne
imul
pop
in
std
jl
std
adc
ds
jmp
add
add
pop
fdivl
mov
pop
std
ss
and
das
adc
add
insl
mov
ret
mov
mov
lods
inc
add
xchg
aam
fsubrp
std
imul
pop
jae
faddp
addr16
add
adc
incb
addr16
push
lret
in
push
ret
jle
mov
fcomps
movsb
sbb
add
clc
sarb
cmp
jno
popa
xor
sbb
test
sub
jg
jl
xor
fcmovb
and
push
jp
jnp
hlt
fldl2t
xor
js
add
pop
add
add
adc
dec
insb
add
inc
test
add
dec
insb
add
fcoml
and
add
popa
inc
push
loopne,pt
add
outsl
lods
add
add
sub
aad
aaa
add
jne
call
add
push
insb
inc
xor
lock
pcmpgtw
fisttpl
out
cmpsl
mov
call
test
pusha
push
jge
jp
test
sub
mov
cwtl
sti
in
js
cmp
mov
inc
jge
ds
push
jmp
jmp
repnz
mov
ret
std
push
and
loopne
add
scas
add
pop
shr
jp
add
add
pop
add
dec
std
jne
cmc
jae
outsl
repz
lcall
xor
inc
arpl
push
lods
cli
std
mov
jmp
xlat
push
add
push
xchg
adc
sti
jae
mov
jmp
or
adc
push
aaa
or
push
mov
mov
fstpt
mov
cmp
inc
and
push
out
dec
cld
decl
pop
and
ret
pop
dec
call
inc
stc
adc
shll
mov
push
pop
test
push
inc
scas
mov
cld
sbb
sub
jle
das
imul
call
mov
or
and
test
imul
push
push
add
cs
data16
imul
mov
push
call
mov
pop
subb
add
mov
mov
xchg
push
add
cs
gs
add
in
push
ja
mov
shr
fstpl
add
jmp
inc
jmp
xor
or
adc
dec
and
js
jl
add
add
add
dec
enter
call
mov
and
ds
rcll
out
mov
jne
out
xor
pop
aaa
lret
xchg
cmp
pop
scas
add
add
jne
jmp
sub
add
ljmp
inc
or
sub
mov
add
add
mov
jmp
scas
and
mov
pcmpeqb
and
and
ljmp
test
jmp
mov
and
cli
jne
fldenv
and
sub
test
adc
jmp
lds
sahf
and
add
cmp
add
xchg
add
add
cld
decl
or
and
sub
fidivs
and
push
mov
and
test
or
mov
adc
dec
and
push
nop
arpl
je
mov
push
call
push
arpl
insb
dec
mov
sbb
pop
add
jle
and
pushl
js
je
test
add
add
test
mov
mov
je
stos
push
dec
add
sbb
ljmp
add
ret
jecxz
mov
in
mov
add
mov
adc
inc
push
mov
cmc
push
cmpsl
and
call
mov
dec
add
out
mov
cvtps2pi
mov
std
add
add
ror
mov
call
add
jge
pop
js
out
jo
sub
fistpll
cmp
add
add
jl
lock
hlt
dec
in
incl
add
in
out
imul
mov
ja
out
adc
test
push
jb
add
xor
lock
in
mov
add
arpl
lea
cld
sbb
call
divb
inc
test
adc
push
out
xor
pop
jge
in
call
xchg
fcmovnbe
pop
sub
or
adc
aas
sar
in
xor
fnstenv
jb
data16
fucomip
inc
arpl
jl
jne
sub
jne
mov
push
ret
add
cmp
push
add
sbb
fldcw
in
jecxz
mov
je
add
sub
repz
push
add
xchg
subl
stos
mov
add
cmc
enter
sahf
aas
and
jo
xchg
repnz
inc
add
push
mov
cmp
mov
imul
stc
lock
clc
add
cmp
cld
add
add
jnp
repz
and
pop
push
fwait
push
aad
cld
cmp
test
decl
fldt
xor
insl
mov
mov
cmp
xor
ds
add
and
add
lea
inc
decb
mov
push
roll
add
add
inc
add
in
add
fsubrs
pop
add
add
fsubrs
pop
add
jecxz
xchg
outsb
and
jmp
dec
xor
loop
adcb
inc
inc
cs
stos
jae
jbe
rolb
fiaddl
scas
pusha
outsl
shr
pop
out
shll
pop
mov
xor
dec
xor
cmp
inc
fisubl
pop
gs
in
sbb
pop
repnz
shlb
xchg
cmp
jl
mov
cmp
movsb
inc
push
test
pop
and
and
and
int3
pop
outsl
daa
sub
and
and
push
mov
daa
cmp
xor
inc
add
pop
inc
sub
movsb
pop
xchg
rclb
add
pop
shr
ljmp
ret
popa
subl
aas
shr
sub
and
add
mov
cmp
call
push
mov
sub
ret
pop
jns
cmpsl
pop
sar
xlat
mov
sbb
mov
and
sub
outsb
ss
jae
data16
or
insl
insl
in
and
sbb
push
add
add
jmp
mov
fsts
cmpsb
jno
pop
stos
add
or
sub
lds
cld
aas
ljmp
xor
xchg
cwtl
jp
ljmp
add
sub
idivb
sti
and
jbe
push
or
push
fdivr
call
enter
fisttpll
add
inc
cmp
jb
mov
add
movl
push
inc
addr16
call
or
xchg
int3
xor
sbb
add
lds
outsl
je
add
inc
ljmp
add
inc
push
xor
xchg
in
pop
adc
or
add
faddp
pop
lods
jns
mov
aad
jnp
add
sbbl
loop
ljmp
pop
add
enter
ret
pushf
jb
cmp
enter
ret
pushf
jb
sbb
add
pop
out
inc
sub
insb
xor
jmp
call
mov
stos
add
pop
add
pushw
cmp
cmp
mov
gs
leave
mov
mov
fwait
cs
add
jae
icebp
and
add
lcall
sub
xchg
jecxz
fmul
jge
stos
dec
repz
lret
leave
cmp
mov
out
aas
clc
in
add
adc
hlt
jle
enter
imul
xchg
leave
aad
mov
mov
push
jne
mul
in
stos
in
add
add
js
testb
cmc
xchg
js
sti
decl
out
scas
dec
hlt
push
lahf
call
pop
call
add
mov
pop
sub
mov
fdivp
scas
pop
std
pop
dec
lret
aad
pop
aad
xor
sbb
in
cmp
cmp
mov
mov
mov
leave
pop
jo
push
popl
mov
scas
push
clc
arpl
subl
inc
pop
mov
ffreep
incl
fildl
push
incl
and
inc
pop
add
popa
int3
rolb
std
mov
aam
mov
xchg
enter
xchg
in
add
std
push
push
dec
std
adc
inc
rorb
subl
cmp
daa
adc
mov
jmp
jl
jle
add
pop
add
mov
aas
push
das
xchg
sti
ljmp
dec
es
lret
xchg
add
add
les
js
ljmp
pop
jge
push
iret
push
xlat
les
outsl
xor
imul
in
lock
pop
add
loop
out
add
pop
jl
sub
dec
imul
dec
pop
inc
jecxz
imul
jno
sub
pop
add
xor
mov
mov
mov
stc
xchg
add
insb
mov
ret
cmp
rorb
mov
loop
out
popa
add
mov
outsl
inc
pop
addr16
ret
dec
js
call
add
add
jmp
test
addr16
push
das
add
jbe
inc
call
test
addr16
test
pop
jbe
aad
jmp
add
stos
inc
out
shlb
leave
pop
out
addr16
sub
jmp
add
shlb
mov
push
lds
sbb
jp
pop
add
add
cmpsl
out
sub
cmp
out
cmpsb
ror
jns
lds
mov
xchg
divb
inc
xchg
and
sub
clc
call
sub
inc
push
bound
and
pop
pushl
std
xlat
cmp
outsb
pop
data16
add
std
pop
sar
add
add
fimull
je
in
call
inc
gs
jmp
lahf
sti
add
xchg
adcl
jl
add
push
lcall
incl
add
adcl
mov
add
add
xchg
and
call
pushf
jg
add
add
add
sti
incl
and
add
push
push
mov
add
add
call
add
push
add
add
add
mov
add
stos
sarl
mov
xchg
lods
xchg
mulb
pop
add
mov
push
rorb
rolb
xor
pop
shrb
add
popl
add
and
mov
adc
jnp
scas
jne
add
pop
andl
pop
rorb
sarl
cs
cmpl
testb
add
xchg
pop
pop
push
mov
inc
sub
mov
test
imul
popf
js
sbb
add
add
imul
jmp
add
add
shll
jecxz
add
ja
cld
xlat
push
out
jne,pn
and
pop
pop
push
add
jns
lds
and
iret
push
ja
out
cs
enter
push
enter
in
mov
fs
fucomi
adc
inc
aas
jge
sbb
das
loope
add
je
jae
scas
push
mov
sbb
cmp
dec
sub
or
insl
bound
outsb
fwait
call
sub
pop
stos
and
test
dec
cld
push
aas
cltd
stos
mov
sub
add
push
bound
aas
inc
push
sbb
push
sbb
and
dec
cld
imul
jge
add
add
cmc
das
adc
bound
rolb
sbb
std
je
adc
inc
fcoml
cmp
cmp
and
push
add
daa
pop
pop
add
shl
mov
sbb
add
jmp
xlat
testl
je
or
push
xor
adc
fnsave
imull
adc
add
pop
add
jle
mov
notb
xrelease
mov
pop
pop
adc
pop
outsl
mulb
outsl
add
add
cs
mull
xlat
add
sub
in
add
faddl
sbb
pusha
popa
xchg
ss
ret
xchg
xlat
add
xchg
insl
pop
inc
ret
jge
add
add
into
cmp
push
adc
imul
out
outsb
ja
imull
outsb
mov
mov
arpl
push
ss
inc
jae
mulb
and
push
fwait
mov
mov
pop
shl
mov
inc
clc
cmp
inc
mov
mull
xchg
out
shr
xchg
jg
add
subl
add
mov
jle
pusha
aad
mov
cs
pop
or
stos
cmc
add
imul
add
aad
pusha
inc
push
adc
add
arpl
call
sub
add
jns
rcr
aas
sar
movsb
ret
sti
fs
test
add
mov
lcall
or
add
jmp
jns
aas
mov
xchg
mov
inc
dec
add
jb
into
je
pop
aad
jno
mov
mov
js
add
out
push
into
pop
aad
xchg
jnp
add
xor
sbb
push
jae
sub
sub
push
aas
add
mov
push
mov
add
loopne
or
ss
push
mov
jecxz
pusha
loopne
inc
pop
xchg
mov
xchg
push
rorl
shll
sbb
jne
aaa
sub
or
mov
or
shll
mov
cmp
xor
fimull
push
push
pop
cmpsb
cld
jmp
add
aad
jne
mov
cli
cli
mov
inc
add
add
sahf
pop
pop
mov
dec
test
cs
dec
imul
push
in
mov
jno
pusha
ss
popf
or
xorl
imul
dec
dec
imul
clc
es
add
dec
out
cld
jbe
cmc
sbb
aad
mov
xor
xchg
mov
je
imul
insb
jge
add
add
cwtl
dec
in
movsl
xchg
leave
mov
pop
fwait
xor
aaa
rclb
mov
mov
shl
gs
xchg
sub
xchg
jae
ret
xchg
ret
cmpsb
mov
pop
outsb
pop
cld
mov
adc
inc
jbe
repz
adc
inc
fdivrl
inc
mov
inc
cld
jle
add
scas
lret
mov
jmp
push
xlat
push
xchg
test
aam
sbb
xchg
imul
mov
ret
mov
ret
mov
jle
dec
insl
in
sub
pop
jnp
jae
mov
xlat
or
out
adc
cmpsb
int3
push
adc
lods
pop
jnp
add
imul
ja
add
xchg
push
aas
ljmp
sub
push
add
sub
call
inc
adc
stos
sub
sbb
push
push
lea
xor
mov
ltr
mov
out
push
add
xchg
mov
les
add
add
ds
jne
out
mov
lea
std
lcall
push
cmp
out
sbb
test
cmp
mov
data16
decb
out
push
mov
xchg
rclb
jae
push
mov
cli
ljmp
mov
decb
mov
adc
rol
mov
add
add
mov
cs
inc
outsb
xchg
call
adc
scas
das
ret
in
bound
push
movsl
addb
stc
push
fildl
adc
fistpll
add
into
inc
dec
mov
adc
mov
inc
push
mov
add
cs
stos
call
and
addr16
fdivp
shl
imul
out
sbb
roll
mov
ljmp
add
pop
mov
mov
sbb
out
cs
pop
repz
inc
adc
mov
push
cmp
fcomp
ret
fld
outsl
rcr
imul
insl
mov
jge
pop
mov
test
ret
test
mov
stos
jl
jnp
push
xor
mov
push
shrb
rcrb
fisttpl
repz
jnp
adc
add
add
movsl
mov
jo
pop
mov
pop
loope
dec
je
bound
shll
inc
test
mov
xchg
in
sub
in
push
xchg
sbb
std
sub
add
push
jmp
cmp
call
loope
push
rclb
mov
repz
mov
push
xor
push
adc
adcb
fs
bound
or
rcrb
std
jo
ljmp
mov
test
jge
mov
add
add
in
xlat
sarb
mov
daa
in
mov
mov
mov
daa
fs
xlat
push
push
lea
sti
call
push
call
or
jb
mov
adcl
jmp
test
fwait
dec
mov
cs
mov
rorl
jo
push
add
pop
decb
int3
repz
add
adc
out
mov
ss
xorb
and
aas
cs
add
xor
push
stc
popf
mov
add
jg
addr16
cmp
repz
cs
je
mov
mov
push
dec
inc
out
add
xchg
xchg
jns
lcall
in
push
mov
jae
add
add
and
js
add
rcrl
rcll
mov
push
jle
jg
add
mov
lods
imul
adc
sbb
fmull
or
call
push
lock
add
cmp
in
and
sub
jge
push
rclb
jae
gs
add
add
jl
shlb
movaps
cmpsb
jge
push
nop
push
jno
ljmp
loope
mov
mov
mov
clc
push
dec
subl
out
and
add
sbb
sti
ret
cmc
mov
clc
jnp
out
dec
push
insb
push
xchg
test
push
inc
gs
jns
clc
cmpsb
pop
test
push
cmp
aam
xor
scas
add
jbe
rclb
sub
mov
cmp
jle
push
mov
insl
push
out
outsl
or
lcall
jnp
sti
cmp
std
cli
mov
decl
push
mov
lods
push
clc
sub
jae
int3
shl
jl
incl
adc
mov
add
pop
jmp
test
lcall
adc
xchg
mov
dec
out
mov
std
test
mov
mov
repnz
cmp
lods
std
push
das
std
incl
adc
decb
out
test
jecxz
incl
jmp
push
jecxz
mull
push
dec
add
add
xchg
mov
add
push
push
test
push
jle
mov
sub
stos
std
adc
mov
mov
dec
incb
idivl
pop
loop
add
addr16
scas
jbe
inc
fxam
inc
adc
cwtl
mov
mov
jb
insl
add
fdivs
out
push
cmp
ret
cltd
xchg
ds
add
dec
cmp
ret
out
das
mov
out
jbe
flds
pop
jmp
leave
and
add
mov
test
push
addr16
call
xchg
sbb
push
lcall
push
popa
pop
cmp
or
inc
jge
popa
shrl
mov
cmp
stos
inc
sbb
movsl
fcoml
push
add
dec
jge
jno
incl
pop
dec
fs
shrl
jb
pop
lea
xor
fcomp
inc
fldenv
mov
ds
jbe
adc
repnz
mov
stos
enter
xor
insl
pop
repz
pop
and
bound
pushl
clc
mov
jle
add
mov
mov
popl
jmp
pop
add
add
add
inc
add
xchg
imul
pop
sbb
ret
and
mov
into
add
incl
add
pop
ret
mov
push
push
out
xchg
stc
add
cmp
je
add
repnz
add
mov
xchg
je
xchg
std
adc
mov
test
add
add
inc
add
mov
add
test
xor
mov
mov
lcall
scas
add
dec
push
call
cmc
rcrl
add
cs
lods
jae
xor
ljmp
sbb
and
and
and
enter
and
das
mov
cs
mov
push
add
add
add
add
inc
jecxz
add
cmp
dec
movsl
cmp
adc
push
mov
sti
fisubrl
mov
adc
rolb
adc
mov
dec
sub
push
daa
jg
dec
cmp
adc
add
add
loope
mov
test
dec
jge
mov
add
add
add
mov
scas
sarl
sub
pop
shrl
add
dec
mov
fsubrs
add
shll
jmp
push
ror
faddl
ret
adc
jg
ret
out
popa
sub
sbb
add
ret
and
xor
lds
sub
ljmp
loop
loopne
stos
ret
push
jg
add
add
add
jmp
jbe
in
xchg
pop
cld
add
xor
add
mov
adc
sub
add
dec
arpl
out
cs
ljmp
ljmp
add
in
jne
int
mov
jb
jnp
in
aam
mov
mov
inc
icebp
scas
incl
fs
push
add
add
xchg
xor
mov
bound
roll
std
dec
call
sbb
mov
mov
mov
and
std
jae
add
sbb
ljmp
mov
mov
dec
mov
xchg
xchg
xchg
push
dec
icebp
into
mov
mov
add
jmp
xchg
inc
xchg
add
xor
inc
lock
mov
call
ret
or
add
pop
mov
lds
cs
add
cs
divl
push
add
xlat
popa
push
mov
dec
jg
clc
adc
scas
in
dec
jns
inc
addb
mov
loopne
or
dec
mov
mov
fnstcw
xchg
in
push
cltd
pop
xchg
lret
jnp
add
add
jecxz
jae
push
xchg
lret
adc
insl
adc
imull
push
je
push
xchg
ret
adc
movsl
pushf
cli
imul
dec
dec
ret
cmp
pusha
fdivl
je
and
jb
add
add
jne
cld
xchg
add
ss
push
mov
inc
fidivrs
into
jmp
clc
push
pop
arpl
movsl
add
dec
cmp
add
jmp
push
stos
sub
std
aad
add
mov
clc
sub
add
fxch
add
cmp
add
add
hlt
test
inc
sub
jl
mov
mov
rcll
insl
xchg
call
mov
push
jmp
jb
or
dec
into
fists
sub
add
xor
int3
fs
orb
and
xchg
in
sub
inc
push
sbb
inc
adc
mov
inc
je
fs
scas
fldt
cmp
sub
add
daa
jnp
pop
cmp
mov
push
fidivl
push
test
fwait
aad
std
ss
inc
inc
sub
fldcw
arpl
xor
addl
int3
pop
add
jb
add
add
xchg
andl
mov
push
add
jecxz
push
push
jl
push
push
cmp
std
xor
inc
incb
mov
add
cmp
add
jecxz
in
xchg
cmp
add
pop
dec
cltd
pop
leave
inc
xchg
mov
add
sub
add
fs
ret
into
ss
mov
sbb
fistl
inc
pop
jne
cmp
aas
les
mov
sub
push
cmp
add
cs
add
fdivrl
and
repnz
fidivrl
or
imul
jb
ret
xchg
testl
pop
sarb
dec
xchg
xchg
lock
add
lret
add
cs
jg
ror
scas
mov
je
fimull
sti
dec
jnp
adc
push
fdivr
lods
add
fsubr
imul
sub
pop
cmpsl
ja
add
pop
mov
divl
sti
outsl
rcrb
jns
sub
inc
jp
cmpsb
rolb
jnp
mov
ret
jmp
jp
rolb
add
push
jns
cld
add
imul
and
jbe
xor
jns
inc
cli
out
add
sti
jae
jge
mov
add
inc
movsl
js
inc
cwtl
inc
loop
inc
dec
mov
cs
jmp
sti
insl
inc
mov
inc
push
fisubrs
jae
cmp
add
jmp
std
mov
add
add
add
stc
lods
sbb
sbb
gs
jns
pop
call
jmp
sub
sub
stos
mov
mov
sub
inc
out
add
je
aaa
out
leave
inc
push
das
jmp
cmp
jns
jmp
sub
jge
add
fisttps
call
inc
ljmp
add
mov
add
call
and
jbe
mov
cmp
icebp
das
inc
lea
dec
lea
dec
push
pop
mov
je
nop
and
rcrb
push
inc
xlat
sarl
idivl
adc
test
mov
jecxz
xchg
jne
mov
mov
add
movsl
hlt
mov
mov
out
roll
iret
pop
enter
sub
inc
add
pop
xadd
iret
cld
add
adcb
les
sbb
push
add
imul
aas
dec
mov
push
mov
aas
scas
stc
xor
add
mov
xorl
xor
imul
mov
fdivl
pop
or
roll
dec
stc
cmpb
xchg
outsb
fildl
aas
add
pop
inc
mov
icebp
or
pop
inc
dec
inc
test
dec
in
mov
mov
sbb
add
or
mov
sbb
call
int3
sti
aad
jbe
repnz
mov
mov
add
jbe
imull
fldl
aas
test
adc
add
icebp
inc
lds
loopne
arpl
movsb
cmp
mov
adc
mov
test
cmp
lods
jne,pn
cmpsb
in
lock
je
hlt
pop
in
mov
xor
mov
in
jl
mov
ds
ss
jae
test
adc
xor
mov
sbb
push
test
ret
mov
jb
add
imull
gs
inc
inc
repnz
fbstp
mov
mov
dec
stos
add
jmp
mov
ds
add
cmpb
xchg
test
mov
pop
std
push
jae
inc
hlt
nop
mov
dec
jne
insl
or
lret
add
adc
inc
sti
or
add
add
push
pop
mov
ljmp
daa
adc
push
lods
cvtdq2ps
repz
pop
into
xchg
in
dec
out
push
add
enter
rcll
xchg
lret
add
mov
jle
in
add
or
cmp
dec
xor
pop
push
decb
lock
mov
andb
pop
sldt
add
shll
xor
fbld
andl
cmpb
jecxz
sub
add
sub
call
mov
mov
and
test
das
daa
add
mov
add
or
mov
pop
pop
movsl
sub
mov
incl
add
mov
add
add
add
and
inc
sub
mov
adc
stos
ret
inc
shll
adc
inc
and
test
push
mov
add
mov
dec
inc
sahf
outsl
add
loopne
fsubrs
inc
sub
xor
inc
idivb
add
add
aad
fcomps
adc
mov
add
gs
call
or
roll
sub
xor
jmp
add
jmp
mov
or
sub
and
js
cmc
sbb
pop
add
sub
ds
sbb
lcall
xor
lcall
jge
sub
call
add
add
lds
test
sub
test
cwtl
push
adc
fucomi
cmp
call
outsl
cmp
and
cmp
shl
mov
xchg
mov
rcpps
inc
or
or
jns
lea
subl
pop
or
data16
add
mov
add
add
add
jge
decl
test
decl
inc
adc
push
push
mov
dec
push
jmp
cmpl
pop
lds
push
out
incl
fistl
inc
pop
mov
cmp
mov
je
jl
jg
cs
jmp
pop
or
aas
pcmpeqb
sahf
jmp
fcmovnb
add
clc
sub
add
mov
cmp
xchg
add
mov
sub
cmp
in
cmp
or
cli
icebp
incb
sub
jle
or
es
call
inc
jg
ljmp
das
mov
out
inc
and
scas
test
add
movsl
adc
jl
es
mov
das
or
inc
push
call
add
adc
jmp
fldcw
call
sbb
add
pop
call
orb
sub
inc
hlt
push
movsl
lret
js
sti
or
cmp
jns
mov
clc
lods
fsub
add
or
pop
cmp
add
add
mov
cmp
addr16
shr
rcl
pop
inc
addb
adc
aaa
jno
and
out
jmp
sbb
push
gs
cmp
jmp
xor
push
inc
mov
sub
and
cld
xchg
push
inc
jmp
sub
pop
call
sub
add
xor
pop
scas
xor
mov
lods
inc
ret
sub
add
fisttpll
inc
jmp
mov
sub
sbb
ja
push
test
testb
repz
push
xchg
aas
sbb
adc
inc
cld
add
cmpl
je
cli
inc
clc
pop
inc
idivb
pop
pop
call
insl
xchg
jmp
xchg
cmp
mov
scas
insl
sahf
add
ret
jb
add
add
or
daa
sti
adc
pop
out
test
fadds
call
dec
clc
les
add
aas
idivb
fcomps
call
add
mov
add
adc
ljmp
xor
adc
sub
dec
cmp
inc
and
mov
hlt
je
stos
inc
add
xor
push
add
stos
push
jo
das
sub
call
pushf
add
stos
push
inc
out
sbb
dec
ret
hlt
rcll
fildl
sub
push
das
sub
push
movsl
cmpl
sub
mov
ret
fildl
sub
xor
jmp
sub
inc
mov
mov
in
fadds
or
add
cmp
call
mov
mov
xor
outsb
sbb
add
aam
xor
data16
add
aam
xor
test
adc
cmpsb
xchg
rolb
add
shrl
js
add
lcall
adc
xor
xchg
add
add
add
xchg
pusha
fadds
jmp
shl
pshufw
test
add
cmp
add
call
sub
pop
add
sub
add
fcom
mov
jo
clc
cmpl
lods
add
jmp
mov
movb
add
add
mov
popa
shlb
xorl
mov
add
inc
data16
aaa
add
cmp
data16
adcb
pop
mov
cwtl
xchg
xor
jae
xchg
call
adc
popf
pop
pushl
xchg
mov
aas
decb
dec
std
mov
out
add
add
dec
incl
dec
std
adc
or
dec
pushl
mov
dec
cs
mov
rcll
sub
aam
sub
inc
push
movsl
or
testb
sub
lds
add
cmpsb
push
ret
jmp
xor
push
mov
sub
add
add
dec
xor
out
int3
mov
add
call
xchg
insb
add
cs
inc
jae
pushf
rolb
orl
mov
sahf
add
mov
jmp
add
xor
cs
xor
cmp
push
cmp
xor
sarb
pop
pop
shr
ljmp
adcl
mov
cltd
adc
and
sbb
xchg
scas
mov
sub
or
outsb
add
sub
jl
out
cs
mov
in
mov
insb
dec
sbb
lods
enter
push
sbb
call
or
push
pop
xor
adc
fldl
add
shlb
or
add
aad
add
mov
add
push
js
shlb
add
mov
mov
sub
add
mov
out
lods
push
jb
sbb
aam
xor
push
push
xor
divl
pop
pop
sti
ds
test
push
fstl
test
inc
inc
xor
mov
add
add
in
jae
lds
addb
lds
cld
je
rolb
call
ret
mov
mov
or
pop
add
pop
jns
jle
xchg
pop
lods
pop
hlt
mov
add
mov
jp
jne
bnd
add
decl
add
mov
js
je
scas
jnp
cmp
out
add
add
ja
or
jmp
jecxz
add
sbb
out
subl
sub
xchg
or
je
xchg
out
scas
add
loope
aaa
das
sbb
inc
rcrb
fisttpl
add
mov
test
aad
mov
cli
mov
mov
jae
jle
ss
testl
movsl
inc
jae
push
mov
adc
add
outsb
sbb
push
sbb
lods
and
jne
lcall
insl
jmp
ret
pop
cmpsl
fldt
imul
call
push
mov
add
mov
sbbl
mov
repnz
jbe
roll
pusha
mov
xor
push
xor
jno
push
into
mov
outsl
imul
mov
imul
dec
jp
adc
add
cmp
inc
mov
aad
inc
inc
rolb
stos
fiadds
jmp
cmc
rcll
add
add
jns
sbb
jb
add
pop
and
jne
call
inc
add
mov
cmpsb
inc
fnstenv
dec
leave
out
gs
xor
adc
cmpsb
cmp
scas
les
xchg
mov
jl
clc
test
cmpsl
add
add
ljmp
push
mov
mov
push
mov
call
test
lods
gs
scas
jmp
sbb
xchg
inc
cmc
add
jo
mov
cmp
lods
jmp
sub
mov
fildll
inc
sti
in
sub
inc
or
lods
add
add
test
or
je
adc
add
jp
imul
mov
ret
lods
push
add
out
jbe
add
mov
sti
inc
fnsave
call
les
dec
push
add
or
pop
add
loop
adc
cmpb
je
mov
or
add
jg
add
add
decl
test
cmp
dec
int3
test
sbb
push
cmpsl
in
sbb
adc
int3
mov
cs
mov
sbb
out
add
incl
push
mov
xchg
add
cmpsb
fs
xor
arpl
mov
in
sbb
daa
les
jg
out
popf
cmp
dec
aad
add
add
out
mov
or
leave
add
cs
sti
xor
popf
cmp
ret
add
lcall
fcoms
mov
cmp
int3
add
xchg
out
sarl
inc
repnz
jp
das
xchg
pop
cmpsb
or
outsl
movl
add
add
jns
aaa
movsb
enterw
ljmp
sar
mov
lock
mov
test
std
mov
call
ljmp
mov
js
jge
pop
cmp
pop
imul
call
mov
xchg
pushl
std
sub
call
jl
dec
sub
push
call
call
icebp
cld
adc
inc
jmp
sub
add
add
mov
jg
out
imulb
insb
in
stos
adc
sub
cmp
pop
imull
insl
in
lods
add
push
sbb
aam
cmovo
inc
mov
mov
xor
test
rolb
add
nop
hlt
cmp
push
stos
xlat
cld
add
add
inc
lock
add
std
mov
add
lret
mov
inc
clc
adc
out
add
incl
subl
test
clc
add
repnz
add
push
mov
std
call
outsb
out
lcall
adc
jl
call
push
mov
add
mov
ficompl
dec
mov
pushl
cs
adc
and
add
add
fcmovbe
xor
cltd
imul
test
add
cs
jo
xchg
sbb
add
push
fisttps
adc
dec
pop
add
sbb
and
adc
lcall
and
andb
mov
shll
stc
cld
dec
adc
js
sub
cmpsb
pop
add
sbb
pop
fstps
add
add
cli
push
inc
cmp
cli
mov
ja
pop
cs
sahf
testb
psraw
pop
pop
cs
ror
or
adc
push
and
sti
call
gs
int3
popa
sbb
out
sarl
rorl
mov
add
jnp
sub
xchg
fcmovb
imul
icebp
pop
mov
es
mov
test
push
inc
es
pusha
or
add
ret
sub
je
int
and
and
add
add
je
call
loop
mov
cmp
addr16
add
insl
loope
call
push
jae
add
andl
sub
and
adc
jae
int
rorb
incl
mov
push
dec
andb
adc
add
pop
decl
incl
or
add
incl
stos
test
xchg
inc
push
mov
inc
mov
add
xchg
xlat
add
mov
fdivr
push
or
movb
ret
arpl
lds
das
test
add
push
add
mov
add
pop
xchg
test
jb
mov
mov
jg
jne
sbbl
add
rcrb
ljmp
pop
rorb
sbbb
incb
adc
xchg
sub
mov
sbb
je
add
xor
sbb
add
adc
out
jmp
mov
jmp
sbb
jmp
scas
jbe
push
sbb
add
sbb
addl
add
mov
movb
sbb
and
sbb
jns
xchg
cli
xor
cmpl
push
mov
popf
jge
das
sbb
cmp
cmp
push
scas
cmp
movsb
filds
add
xor
cld
fisubl
inc
pop
call
mov
mov
out
cs
imulb
jne
fistpll
or
call
add
jge
add
add
rorb
je
lods
call
ljmp
call
jge
add
add
ja
sbb
add
push
aas
sti
sbb
les
inc
and
pop
mov
jb
lcall
dec
xchg
jmp
push
add
jmp
dec
mov
loop
mov
xchg
call
jbe
sbb
sub
call
xor
out
and
rorl
call
inc
cmc
sub
and
mov
call
xchg
test
push
and
xchg
push
lods
and
testb
sub
jmp
ljmp
test
inc
std
mov
mov
std
decl
mov
cmp
push
cmp
dec
fwait
and
je
push
and
add
imul
je
fs
xlat
push
popa
and
das
add
xlat
popl
das
insb
std
push
js
test
cld
jmp
movsl
mov
call
cmp
push
outsl
faddl
xchg
pop
ret
cmp
pushf
cs
fdivr
add
loop
imul
cmp
mov
sub
add
mov
xchg
or
adc
sbb
jmp
add
add
jnp
das
adcb
xchg
cmp
push
or
mov
cwtl
pop
cmpsl
jge
and
cmp
adc
xlat
mov
adc
jle
pop
mov
out
pop
ss
and
ds
inc
cmp
or
push
movsl
clc
mov
inc
sbb
cmp
int3
sti
lods
sbb
add
add
mov
lods
pop
mov
mov
movsb
fisttpll
cs
mov
adc
shld
lock
add
pop
adc
xchg
or
xor
std
mov
adc
xchg
or
add
pusha
or
popa
inc
add
lret
mov
movsb
sub
pop
add
add
mov
mov
push
and
mov
lcall
repnz
add
mov
cmpl
add
ljmp
movsb
cmp
inc
shl
mov
dec
mov
imull
or
mov
add
mov
cli
sbb
inc
inc
add
add
add
push
cltd
add
test
xchg
or
mov
add
movb
mov
js
add
push
scas
dec
dec
add
jp
test
jne
fdivl
push
push
scas
rolw
push
mov
fistpll
add
pop
mov
pop
mov
lret
add
mov
add
call
mov
add
or
or
add
xor
cmp
push
add
or
mov
ret
call
mov
xchg
pop
add
mov
aas
add
xchg
add
inc
mov
imul
rcrl
push
mov
and
cmpsl
das
xchg
sub
add
mov
xor
movb
outsb
add
and
cwtl
sub
out
add
add
daa
add
imul
add
sub
inc
inc
push
xor
inc
inc
push
sbb
add
sub
mov
cmpsl
gs
movsl
insl
out
push
jmp
jmp
shlb
pop
call
cs
xchg
dec
hlt
iret
out
cs
nop
in
jecxz
mov
sbb
xchg
add
add
mov
or
jmp
add
add
jmp
add
test
add
test
cmp
dec
mov
cs
ss
inc
inc
sub
jmp
mov
xchg
faddl
xorl
mov
scas
adc
add
jmp
xchg
and
xor
add
add
add
add
je
filds
insl
xchg
lcall
xor
jae
sub
fdivrl
jle
insl
sub
add
fidivs
pop
mov
mov
test
dec
ljmp
pushf
add
jo
frstor
shrl
call
in
adc
fcos
popa
add
add
add
mov
daa
iret
cmpl
or
xor
adc
and
inc
and
std
cld
mov
dec
lea
cs
dec
sub
je
inc
inc
dec
sub
add
mov
add
xchg
mov
sub
test
push
mov
push
push
xorb
fst
cld
adc
add
incl
add
or
mov
lret
and
adc
mov
add
dec
xchg
jnp
mov
ret
adc
add
pusha
cmc
imul
xor
dec
mov
fildll
inc
js
sbb
negb
je
bound
imul
add
add
lcall
sbb
idivb
lods
inc
jae
mov
sbb
inc
add
sub
rclb
cli
out
fiadds
add
add
cmp
shr
loope
pushf
add
dec
call
sbb
addb
aas
mov
sub
call
mov
sti
mov
adc
out
add
add
xchg
cmpsb
fwait
sbb
add
js
outsl
shlb
mov
xor
push
scas
fwait
sbb
scas
push
repz
add
fucomip
add
scas
push
sub
repz
cmpsb
std
outsl
mov
dec
sub
loopne
and
pushf
out
jno
mov
ret
and
mov
sub
mov
jle
jmp
add
add
out
xchg
jl
inc
mov
loop
inc
inc
loope
mov
ror
inc
call
sbb
jmp
jb
ja
mov
pop
test
jg
sub
xchg
sbb
inc
xlat
je
mov
add
pop
mov
stos
out
aaa
push
incb
jl
xor
xchg
mov
incl
add
mov
out
sub
cmc
jo
sub
jae
in
dec
push
das
push
std
dec
in
xor
add
test
inc
loopne
adc
fidivl
clc
jae
xchg
jmp
jne
or
push
xor
sub
add
xor
inc
imul
push
cmp
xor
add
out
sti
icebp
incl
in
shrl
mov
xor
pop
incb
out
adc
dec
incl
xor
push
add
aaa
mov
repz
mov
dec
test
icebp
imul
mov
incb
in
aas
cs
aas
or
push
mov
fdivp
sub
add
icebp
dec
shll
scas
mov
add
pop
cmpsl
daa
pop
sub
add
into
push
je
mov
mov
int3
push
movsl
lcall
and
popf
lods
shr
push
stos
push
call
pop
add
xor
mov
mov
icebp
out
test
mov
xchg
add
mov
add
add
add
push
test
imul
add
xor
adc
cwtl
jae
jge
arpl
cli
loop
nop
sub
aaa
push
push
lahf
imul
ret
scas
mov
jl
adc
in
pop
clc
in
adc
lods
sub
dec
mov
pop
inc
call
and
test
cmp
add
data16
aaa
lcall
and
pop
out
push
call
cltd
sub
push
call
sti
in
mov
and
inc
or
xor
pop
cs
xor
popf
add
addl
icebp
mov
xor
inc
iret
dec
inc
add
dec
or
add
add
aas
cld
ret
mov
insb
inc
pop
xor
xor
jo
push
cwtl
mov
rol
push
vmread
fs
cmp
xor
std
and
cmp
jno
inc
push
or
leave
jmp
addr16
mov
mov
cs
aaa
xor
inc
add
add
adc
mov
loopne
in
xchg
sbb
add
dec
pop
and
sub
out
lahf
add
stos
out
or
sbb
jecxz
daa
cmp
dec
ret
mov
adc
adc
pushl
fbstp
add
mov
call
cmpsl
sbb
or
mov
sbb
jne
cwtl
pop
cmpsl
and
mov
xor
xchg
outsb
jne,pt
sub
inc
pop
add
cld
leave
or
mov
inc
pushl
sub
mov
add
mov
test
sbb
lods
loopne
sbb
ljmp
cwtl
lock
pop
add
xchg
call
aam
sub
add
aam
mov
stc
inc
popa
test
rorl
adc
int3
sbb
ljmp
cwtl
adc
xor
add
mov
sti
jmp
jge
or
sub
mov
sbb
jb
daa
sub
ja
outsb
cmp
dec
gs
inc
inc
xor
inc
add
stos
cmpsb
loopew
sar
mov
add
or
cmp
jl
movsb
mov
mov
mov
lods
push
mov
das
adc
incl
jmp
out
or
add
jns
sarl
and
add
jae
sub
or
add
test
add
add
push
inc
push
pop
add
les
pop
mov
pop
xchg
and
add
mov
mov
icebp
mov
mov
icebp
mov
inc
lcall
mov
inc
mov
inc
jg
inc
sbb
mov
mov
mov
mov
mov
and
mov
mov
fmull
mov
jmp
cmpsl
in
mov
pop
jns
sbb
add
rclb
push
sbb
fidivrs
inc
sbb
add
outsb
outsl
sbb
pop
inc
pop
add
push
adc
add
lcall
imul
das
push
add
mov
sarl
in
jecxz
cmc
paddd
pop
es
jno
add
sbb
push
jg
insl
in
call
or
aam
mov
loopne
push
sbb
sub
jo
lea
out
test
pop
lods
leave
dec
addr16
andb
dec
js
sub
adc
cs
in
sti
add
mov
ljmp
xchg
clc
push
cmp
leave
sub
clc
sbb
ljmp
mov
mov
fsts
stc
jl
add
push
add
cld
aas
test
mov
adc
and
cmpxchg
ljmp
pop
bound
out
mov
add
sub
lcall
jb
dec
pop
in
xor
insl
or
insb
popw
dec
add
je
xor
mov
test
jmp
fsubp
mov
and
add
adc
inc
loope
or
cwtl
add
xchg
add
pop
mov
je
cwtl
and
adc
add
push
xorl
or
jmp
cmp
or
or
mov
mov
cli
jb
pop
std
jb
fwait
out
jmp
mov
or
jb
sbb
adc
fcmovb
jae
xchg
rclb
lcall
in
xchg
push
pop
pop
add
add
rcrb
je
add
adc
inc
in
test
sar
std
je
clc
adc
mov
jb
hlt
mov
push
mov
jg
sub
push
xor
cwtl
mov
cs
je
rcll
pop
mov
or
test
popf
inc
dec
cltd
or
adc
push
jns
xchg
inc
je
mov
add
add
iret
idivb
mov
sti
adcl
adc
push
or
add
push
mov
add
cs
lds
cmpsl
pop
cli
cmp
xor
mov
jns
ss
adc
push
push
pop
jmp
push
cli
incb
test
adc
mov
sti
add
add
add
fs
sub
push
add
or
mov
ret
xorl
xor
add
fcmovne
cmp
call
inc
fldl
cmpsl
rorl
or
int3
repz
cmp
and
mov
loopne
lcall
or
in
test
mov
dec
stos
pop
stos
das
inc
sub
add
or
jp
es
test
and
jnp
scas
jae
add
xor
aaa
fldt
mov
scas
push
je
scas
or
imul
clc
cmp
jmp
jmp
testl
gs
mov
sbb
aaa
and
add
xor
or
add
add
push
subl
add
scas
enter
sti
add
daa
push
cmp
jo
mov
add
mov
inc
mov
out
mov
cld
incl
or
scas
add
pop
rcll
jg
xchg
cld
pushl
push
push
fiaddl
dec
incl
add
and
add
xor
push
lock
mov
push
add
mov
xlat
test
call
cs
inc
jae
lcall
pop
loopne
mov
in
sbb
imul
mov
aas
add
push
movsl
add
add
outsb
lcall
ds
add
add
cs
in
sbb
add
jns
add
outsb
xor
cmc
clc
fwait
mov
cwtl
cmpsb
xchg
sbb
push
add
and
aas
cs
ret
pop
gs
mov
xchg
sbb
cmpsb
out
adc
fidivrs
jnp
scas
ret
pop
push
jmp
repnz
cmpsl
rcr
jmp
push
popf
add
add
jae
jnp
cwtl
lret
call
jmp
mov
add
iret
aas
shr
in
jmp
ds
jns
add
adc
mov
add
shrl
jmp
scas
dec
ljmp
cmc
cmp
test
subl
jne
aam
sub
mov
pop
add
add
js
stc
fadds
jmp
aad
inc
sub
adc
faddp
lcall
or
das
sarl
sub
repz
jmp
mov
add
adcl
sub
pop
jbe
or
sub
sbb
in
fcmovnu
insl
add
cmpsl
mov
dec
pop
mov
lcall
mov
add
add
add
addl
sti
adc
adc
or
jl
repnz
inc
out
mov
lods
inc
xor
jae
push
adcl
dec
mov
jg
push
inc
lret
push
or
incl
cld
std
dec
std
out
dec
incl
add
in
or
mov
mov
dec
call
repnz
std
nop
cld
out
xchg
cld
std
mov
cltd
sbb
inc
jp
adc
vmovhps
inc
addr16
addr16
add
mov
push
idiv
stos
mov
insl
inc
mov
lds
jne
cmpsb
addr16
dec
add
mov
jp
std
jmp
sar
add
test
into
adc
push
jns
push
sbb
add
hlt
xorl
in
scas
and
add
mul
add
mov
xchg
scas
add
pop
mov
cs
out
cmp
mov
icebp
lcall
test
call
call
cs
add
dec
clc
ret
add
stos
cs
enter
cmp
add
add
rcrl
shr
push
lea
pop
jne
push
sub
call
mov
sbb
je
mull
insb
cli
cld
cmp
pusha
je
or
mov
sbb
sub
mov
jae
fldl
jb
out
test
pop
aam
sub
mov
insb
ljmp
sub
adc
cmc
mov
add
or
sub
adc
test
pop
call
inc
add
add
add
fldln2
decl
jmp
aad
mov
call
dec
push
cmp
inc
add
add
add
push
push
in
add
mov
sti
adc
xchg
leave
jl
pop
add
ja
add
pop
cmp
add
mov
int
add
pop
xchg
je
cmpb
dec
jae
adc
sbb
pusha
push
cmp
jne
cmp
jns
cmp
jns
cmp
jns
test
cmpsl
add
xchg
test
cmpsl
add
add
add
in
add
cs
mov
cmp
test
cmp
xor
push
mov
cmovne
xchg
mov
out
add
ljmp
out
imul
call
jne
lods
pop
push
test
jne
lods
das
adc
jg
jne
lods
pop
or
jne
lods
das
or
sub
push
mov
out
push
cltd
aam
adc
out
std
and
insb
ret
add
dec
jb
inc
push
pusha
std
sbb
push
mov
add
shlb
scas
jnp
push
mov
inc
ja
xchg
mov
cmp
rorb
adc
inc
push
mov
call
add
cld
fs
jge
mov
push
shrl
add
andl
sub
out
xlat
push
xchg
add
cld
push
pop
jno
bound
add
add
cmpsl
dec
add
pop
dec
and
sbb
dec
sub
add
jmp
movsl
jmp
int
xchg
fnstenv
and
add
add
jmp
pusha
ja
call
adc
std
cmp
std
jmp
insl
add
clc
addps
insl
add
pop
ja
push
push
jmp
rcll
jmp
cmpsl
sbb
add
jb
add
call
mov
xor
xor
sti
sti
test
or
sti
and
cld
shr
mov
add
and
and
fadd
sti
je
adc
je
adc
and
add
dec
call
mov
in
mov
add
dec
push
cmp
std
adc
or
test
sti
addps
std
call
stc
jno
jo
clc
adc
cli
or
dec
and
adc
adc
add
add
fiaddl
cs
add
xchg
push
std
and
les
cmp
popa
push
or
inc
movsl
sbb
jo
and
es
pop
or
jge
fcom
inc
cs
fsubp
add
cs
jae
jp
hlt
sbb
idiv
sub
add
out
push
adcl
xchg
add
jb
adc
jb
sbb
adc
push
cs
mov
sbb
adc
add
test
cs
inc
dec
adc
or
mov
add
repnz
adc
call
push
push
or
fs
cmp
inc
adc
aaa
push
adc
sub
out
outsb
add
test
add
add
add
add
jae
cld
jp
mov
insb
cs
out
cmp
pop
cmp
call
ds
add
je
in
mov
std
cld
rorl
inc
jmp
gs
loop
push
xchg
cmp
std
jmp
sbb
adc
sub
iret
mov
or
enter
and
add
mov
shrl
xor
push
lds
dec
int
call
jmp
xchg
jno
std
fmull
xor
imul
inc
jmp
jns
jecxz
mov
in
subl
add
ret
addr16
adc
inc
or
mov
add
push
inc
add
mov
lea
sti
jne
cli
jno
daa
sti
adc
inc
add
pop
cli
jno
mov
incl
add
adc
jle
or
sar
push
cld
add
mov
pop
add
push
mov
enter
push
mov
add
xor
and
mov
sub
add
add
jmp
shrl
jo
test
hlt
cli
jae
add
adc
fmuls
add
cli
adc
inc
add
xor
adc
xor
in
pusha
push
mov
or
dec
dec
cs
cmp
push
lods
inc
add
bound
adc
or
cltd
je
std
adc
insw
adc
add
pop
add
ss
hlt
ret
cmp
pop
jne
testl
sub
cld
pushf
mov
add
jo
cmp
sub
out
ds
jl
mov
sar
std
pop
ljmp
jne
out
in
push
cmc
pop
adc
notl
imul
cmp
push
and
push
add
pusha
inc
out
fisttpl
add
add
jg
imul
pop
sub
jge
add
or
hlt
and
bnd
push
dec
adc
inc
or
or
addr16
ret
push
mov
repnz
mov
jo
popf
dec
call
test
sbb
cmp
adc
je
xchg
popa
jo
roll
add
repz
inc
push
std
push
xor
jae
sti
bnd
cmp
mov
clc
adc
sub
stos
add
push
jmp
pop
call
mov
out
sbb
add
xor
aad
pushl
xorb
xchg
pop
sti
jne
out
cld
jo
out
add
jp
push
jp
cli
jne
ljmp
add
add
rcll
xchg
negb
repz
mov
cli
jae
das
loope
add
shlb
sub
ljmp
cli
add
or
ljmp
shrb
cs
mov
pop
in
fadds
push
mov
jmp
mov
or
call
mov
insl
sbb
add
adc
jmp
adc
es
sar
sbb
adc
stc
dec
std
sbb
notb
data16
add
xchg
mov
in
js
mov
in
call
adc
xadd
cs
cmp
push
mov
add
fdiv
jae
pop
inc
sbb
add
push
jb
cmc
sbb
cli
hlt
popf
sbb
and
outsl
xor
hlt
or
or
outsb
add
dec
mov
push
decl
dec
bound
insb
or
push
dec
out
mov
mov
into
out
lcall
mov
pop
push
outsl
and
aad
mov
adc
subl
std
or
outsb
ss
cld
jmp
inc
out
cmc
mov
rorb
out
cmp
add
add
jmp
cs
adc
xor
popa
dec
add
add
or
rcl
enter
jmp
shr
ljmp
out
dec
mov
jecxz
push
enter
sub
or
xchg
sub
jge
xchg
dec
xchg
test
sarb
sub
inc
fcomps
sub
cmp
cmp
push
aaa
loopne
sub
push
movl
mov
testb
roll
popa
outsl
jno
inc
and
cmp
add
push
out
js
sti
test
dec
mov
push
call
mov
push
out
mov
add
rolb
pop
dec
movb
outsb
in
subl
testb
dec
xchg
ja
call
add
je
shr
je
aam
xor
outsl
inc
or
shl
dec
mov
pop
xor
pop
inc
rcr
rclb
jl
push
je
sarb
add
adc
in
adc
dec
in
faddl
push
movsl
jl
in
outsl
or
sbb
js
js
bound
fcompl
aam
cmpl
js
movsl
sahf
stc
out
push
repnz
stos
sbb
add
push
mov
sub
sbb
leave
mov
or
das
repnz
add
jge
add
fists
aaa
adc
add
lret
in
out
push
xchg
add
push
add
add
sbb
mov
sahf
pop
adc
out
or
les
push
jge
or
inc
ja,pn
cld
push
add
ja
pop
jmp
xor
sbb
lock
insl
hlt
xchg
push
inc
add
ljmp
andl
daa
in
xchg
notl
call
test
testl
call
add
add
mov
dec
pop
mov
rcrl
lods
jmp
add
xchg
rcrb
cmpsb
push
cmp
push
ljmp
in
jo
jb
mov
sub
jns
inc
shr
std
mov
adc
ljmp
inc
pop
jmp
jns
inc
add
sti
cs
dec
std
cld
mov
add
test
je
or
push
add
push
add
push
rolb
push
lcall
gs
xchg
pop
jno
jo
jl
xchg
inc
inc
jg
rolb
cwtl
stc
aas
add
push
or
scas
jb
add
cmp
les
jg
jmp
ret
dec
xchg
inc
fdivr
andl
add
dec
push
push
in
psubq
data16
andl
push
out
xchg
fiadds
xchg
xor
and
gs
call
ljmp
xor
pop
add
test
cmp
repnz
vandnps
or
and
ret
enter
add
mov
aas
jg
dec
jmp
fnstcw
add
add
sbb
sub
hlt
and
jae
xor
outsb
fsts
js
cwtl
add
lcall
imul
add
mov
xchg
push
xchg
adc
adc
out
add
insb
movntq
fistpl
sti
cli
ljmp
in
jmp
sub
cli
jne
xchg
add
push
jae
sbb
jbe
mov
jne
jns
test
or
stc
pop
leave
push
mov
jecxz
jge
sub
inc
mov
sub
xor
xorl
pop
jne
out
mov
call
mov
cmp
ja
add
push
jae
andb
jmp
fbld
mov
jb
psubsw
push
std
hlt
rorl
jmp
sub
out
or
sub
das
rolb
ret
dec
mov
scas
fdivrl
jecxz
cmp
fldt
fldcw
push
sbb
or
xor
test
xchg
je
lods
pop
dec
push
jle
clc
xchg
jmp
inc
add
add
jmp
arpl
aam
or
incb
add
loop
xchg
lds
mov
mov
jge
das
mov
aam
lock
cmp
ja
push
hlt
lret
jmp
mov
add
ret
loop
shrb
mov
add
in
ss
faddl
pop
popf
jmp
lock
jmp
in
push
call
test
cld
mov
add
arpl
jno
jp
or
xchg
lret
test
add
add
bound
cmpsb
fldl
mov
sub
xchg
loopne
mov
hlt
popa
xchg
in
jle
pop
pop
faddl
cli
fidivrs
je
popa
dec
push
test
mov
add
xchg
idiv
mov
dec
pop
addr16
std
jmp
jno
adcl
cld
mov
mov
std
and
je
add
xchg
bound
movsl
sub
xor
add
outsb
pop
mov
inc
loop
add
scas
mov
je
add
les
addr16
xchg
out
test
add
jle
jl
outsl
inc
pop
out
add
ljmp
daa
jo
dec
fsubl
out
jbe
lcall
add
add
iret
xchg
addr16
call
push
add
call
pop
add
jl
inc
adc
push
cmpsl
lock
call
outsb
stc
cmp
jmp
jmp
push
adc
bnd
arpl
test
ds
or
adc
inc
cld
cmp
aas
clc
cmp
push
cld
cmp
adc
scas
call
in
add
add
add
jbe
push
adc
and
cs
pusha
cmp
mov
cmp
mov
clc
or
sbb
std
jmp
test
jg
daa
es
push
cmp
rcrb
out
jmp
das
and
testb
inc
popf
push
inc
hlt
fs
repnz
add
add
sub
jns
insl
inc
pop
push
sub
popa
add
xchg
add
add
sub
sbb
add
xchg
dec
rolb
aaa
call
test
cmpl
and
pop
cmp
adc
jg
add
cli
jmp
shlb
incb
xchg
add
add
inc
loopne
or
lahf
xchg
xchg
pop
repz
fidivl
xor
inc
cs
aas
lock
jl
std
fsts
jae
push
aas
std
scas
fsub
or
sub
pop
sub
rolb
xchg
in
jae
pop
addr16
lods
cmp
test
cmp
test
mov
lock
lods
add
jne
jg
push
mov
rcll
sbb
add
outsb
dec
testl
ss
fmuls
movsb
fidivrl
push
add
sbb
and
cmpsl
fs
ds
clc
cmc
xor
ja
in
pop
mov
xor
sub
mov
mov
loop
inc
push
adc
jge
jmp
add
jbe
pop
jbe,pt
testb
jo
mov
mov
add
add
call
add
adc
addl
adc
cld
pop
pushl
add
cwtl
daa
jno
out
add
lods
rorl
out
loop
imul
fldcw
stc
or
in
loop
imul
mov
into
jno
xor
jo
xor
push
call
scas
add
add
es
repz
sub
ja
int
pop
shr
dec
je
test
call
inc
insb
pmaxsw
sbb
rcrl
or
push
jecxz
mov
jmp
add
in
push
pushf
leave
jg
or
push
jmp
or
adc
mov
cld
jmp
jg
cld
xlat
addr16
or
add
pop
sub
xor
or
xorl
xchg
andb
sbb
outsl
dec
in
jns
call
push
add
sbb
je
pop
pop
or
push
dec
sbbl
jns
push
push
cmp
sbb
cld
push
pop
push
adc
inc
push
shlb
mov
push
add
mov
sbb
pushf
pop
adc
in
flds
cmpl
inc
clc
mov
imull
ficoms
jmp
movsl
pop
sbb
push
scas
pusha
and
and
fildl
xor
xor
movsb
jmp
add
xchg
js
in
scas
push
lock
dec
test
sub
lcall
push
adc
jne
and
push
aas
clc
in
add
mov
add
jmp
mov
add
out
das
mov
cmpsl
dec
sti
cs
mov
out
inc
repz
add
and
pop
jecxz
jnp
sub
add
pusha
or
fidivrs
cmpsl
jmp
xor
push
xchg
sbb
out
cmp
mov
mov
movb
fisubrs
cmp
add
xor
stc
cmp
push
and
xchg
or
fbld
sbb
dec
push
add
lods
sbb
inc
shll
push
das
imul
push
scas
pop
lock
cld
sub
jae
sbb
ss
push
cld
pop
iret
icebp
cmp
insl
add
adc
xchg
stos
les
add
add
jmp
adc
inc
or
out
xor
lcall
mov
in
cld
aas
dec
push
adc
add
mov
fiadds
lcall
mov
mov
movb
add
add
cmpb
call
sahf
inc
clc
test
out
orl
mov
movl
push
push
shlb
inc
movl
mov
mov
in
je
mov
or
adc
js
aaa
inc
out
or
aad
mov
jmp
out
xchg
or
cs
pop
imul
ret
ror
add
loopne
and
popl
pop
in
in
add
add
add
mov
out
roll
sbb
pop
clc
sub
out
jp
mov
fidivrs
std
loope
mov
and
in
mov
xor
pop
pop
mov
test
or
or
inc
pop
pop
stos
sub
mov
or
cs
mov
stos
inc
decb
add
pusha
dec
pop
lea
pop
add
ljmp
mov
das
cmpsl
inc
jmp
jle
mov
xchg
pop
sti
sbb
inc
icebp
add
fstpt
sti
mov
ret
push
jecxz
shll
jg
sub
out
out
out
ficomps
jb
mov
add
cmp
add
dec
test
das
mov
add
add
jb
test
fisubrl
sbb
lods
xor
add
mov
sub
pop
add
cmpsb
mov
push
jae
xor
flds
or
push
jge
insl
out
add
pushl
test
or
pop
test
scas
test
call
xor
mov
mov
add
and
jge
std
or
mov
adc
xor
lds
or
movsb
fsts
add
sti
call
or
adc
xchg
call
mov
mov
inc
adc
jne
mov
mov
pop
add
jne
adc
xor
add
xor
push
or
inc
add
add
cmpb
cmp
cmp
jns
aam
das
leave
xor
or
and
push
push
push
mov
jno
dec
shlb
fdivrs
cli
jne
jecxz
negb
jge,pn
mov
mov
stos
adc
icebp
cmp
sbb
mov
popa
pop
roll
push
pop
or
or
add
push
pop
fdivr
cmp
jmp
mov
ret
xor
jns
dec
or
mov
adc
mov
mov
jmp
addl
std
call
push
add
jmp
sbb
aam
call
daa
fwait
dec
fisttpl
mov
mov
jae
add
pop
inc
out
outsb
pop
das
mov
loop
in
ljmp
mov
pop
mov
adc
scas
enter
cmp
add
or
icebp
es
xlat
push
add
pushl
jmp
mov
add
dec
ret
repz
repz
xlat
mov
sbb
add
push
mov
jae
push
das
cltd
incl
or
icebp
sub
jmp
push
daa
sbb
xchg
sbb
mov
add
ljmp
pop
sbb
add
ljmp
dec
jmp
mov
or
or
sub
mov
pop
dec
and
pop
call
xor
xchg
sti
jne
mov
adc
xor
fldl2t
mov
add
add
add
jl
and
add
je
out
aam
sti
jne
mov
adc
inc
add
out
decl
in
add
add
add
add
inc
and
push
in
roll
add
sbb
jg
sub
add
mov
add
shl
push
mov
jne
mov
and
adc
push
xchg
pop
shll
shrb
out
shlb
das
std
sbb
pop
push
xchg
mov
xchg
movsb
ret
add
jp
mov
mov
mov
dec
inc
movsl
ret
pop
adc
out
std
popa
imul
add
add
ret
jge
fscale
add
mov
data16
add
scas
ljmp
les
add
lcall
call
mov
test
test
and
add
jnp,pn
scas
mov
dec
rorb
jg
xlat
cmp
lock
mov
pop
push
fwait
stos
faddl
add
movsl
inc
out
add
jne
add
pop
xchg
xor
add
cs
call
add
scas
xor
fcom
aam
sbb
out
outsb
push
mov
icebp
push
mov
cld
sub
pop
push
xor
into
mov
incl
sbb
sub
roll
add
adc
add
ja
std
leave
jno
andb
dec
add
sti
dec
ljmp
mov
add
mov
pop
xchg
xor
push
xchg
aas
mov
push
insb
sbb
cli
je
xor
push
fildl
add
add
add
sub
cli
in
hlt
add
add
add
cmp
pushf
out
shl
mov
test
jle
inc
mov
jno
pop
std
out
jne
pop
pop
test
xchg
adc
or
jb
add
mov
or
push
mov
stc
jle
xchg
and
dec
out
imul
mov
inc
adc
fildl
mov
inc
or
push
mov
je
add
pop
mov
cmp
xor
pop
notl
adc
cmp
cs
mov
scas
sub
outsb
pusha
or
iret
mov
push
cld
jmp
fwait
mov
fs
add
es
shll
mov
add
cs
inc
testb
cltd
dec
cs
movsl
sbb
subl
mov
out
testb
add
mov
je
pop
inc
cld
mov
mov
stos
fimull
pop
mov
sub
sbb
out
aas
cs
sarl
scas
xor
sarl
jno
arpl
fnsaves
adc
jnp
sub
enter
ret
sbb
pop
shrl
cld
loopne
fldenv
sbb
dec
fchs
cmpl
add
test
add
mov
add
pop
add
inc
dec
shr
lret
add
ljmp
jae
ss
lret
mov
pop
mov
movsb
iret
cmpsl
into
jmp
out
jbe
adc
fnstsw
xchg
ljmp
enter
jns
push
add
sub
xchg
xor
or
call
or
add
repnz
jl
lods
or
rorb
xchg
or
sbb
or
divb
jp
fs
into
jge
push
push
add
and
adc
inc
and
imul
pop
mov
incl
inc
bnd
ljmp
or
pop
hlt
int3
jmp
subb
stc
sub
std
jae
cmp
cli
add
add
aaa
cli
jp
sti
dec
jecxz
fldt
push
mov
dec
out
dec
or
or
add
out
xchg
into
add
test
je
xchg
jne
hlt
mov
add
stos
add
mov
sbb
jmp
dec
push
mov
mov
shlb
clc
or
hlt
inc
push
cmp
xor
xor
or
aas
sub
add
add
inc
test
ljmp
xchg
das
pop
ja
xor
or
test
add
jl
lods
les
mov
getsec
xchg
jp
add
ret
xchg
add
cs
cwtl
or
pop
lret
scas
test
sub
std
sub
jp
lret
jb
mov
or
ficomps
andl
push
mov
add
add
xor
cmp
jbe
xorl
cli
jno
pop
lret
in
lds
loop
fsub
jb
pop
test
and
push
notb
adc
jle
int
pop
imul
das
mov
push
out
repz
adc
jl
adc
jge
push
repnz
jno
pop
sub
pop
add
mov
fdiv
mov
add
cmpsl
cld
stc
mov
out
xchg
add
sub
and
pop
iret
mov
popa
cmp
sarb
add
incb
adc
ds
add
jns
adc
lret
std
push
int3
pop
xchg
push
ret
rcll
push
sbb
xor
andb
pusha
add
add
enter
std
test
outsb
enter
jne
jno
lock
incl
xorb
pop
pop
lods
movl
jno
push
or
std
or
xor
sub
loopne
in
ds
add
sarb
lea
mov
inc
daa
cmpsl
push
int
incb
jge
add
das
incl
push
adc
inc
orb
and
inc
add
push
inc
inc
in
call
dec
xor
out
scas
cmc
decl
cmp
add
lret
jmp
add
inc
das
shlb
add
sub
mov
aaa
inc
jnp
jg
or
pop
pop
cs
or
cmp
xchg
add
shr
insb
js
add
mull
fs
je
push
mov
add
fs
jae
xchg
inc
pop
daa
add
cs
out
add
pop
pop
out
mov
pop
add
lock
or
std
pop
cmc
jns
sub
or
inc
adc
int
xchg
push
dec
jno
add
jo
or
add
add
sbb
mov
out
js
jl
incl
lods
bound
es
pushl
push
or
jl
add
outsb
cmpb
sbb
mov
sbb
push
repnz
jae
ret
xlat
add
inc
sarb
push
jnp
shl
jmp
das
movsl
xor
lret
sub
jnp
xor
add
cmpl
gs
jno
lods
mov
sbb
scas
mov
out
lods
hlt
cli
pop
rolb
jnp
add
sub
add
jmp
addl
push
lds
mov
or
jmp
or
sub
shlb
sub
push
push
add
mov
push
flds
in
mov
lock
hlt
cld
push
add
pusha
outsb
hlt
mov
pop
repnz
xor
adc
shrb
out
pushf
push
or
adc
jg
add
test
sub
leave
pushf
sar
repz
lea
sbb
adc
hlt
leave
je
inc
mov
add
add
xorl
test
ret
dec
pusha
jg
xlat
xor
or
lcall
add
mov
mov
xchg
inc
xlat
jg
jl
decl
aam
push
lahf
jle
add
dec
inc
or
pop
jae
or
std
inc
daa
repz
mov
lock
int3
std
add
xor
add
add
fcomip
aas
cs
xor
jp
icebp
movnti
arpl
add
xchg
call
stos
xchg
sbb
push
sub
inc
pop
into
add
pusha
fsubrp
mov
pop
add
in
xchg
std
das
cs
push
mov
xor
stos
adc
dec
rorl
clc
xor
pushl
ret
rolb
add
mov
int
stos
dec
sbb
mov
popa
ds
js
cld
mov
jno
loopne
sub
cmpsl
sarl
jl
jae
div
les
inc
sbb
scas
push
dec
adc
xor
jnp
dec
xor
mov
add
add
xlat
icebp
add
jp
les
es
mov
add
xor
ljmp
pop
hlt
jmp
call
jb
jg
and
lret
jb
ret
mov
jp
popa
shlb
stos
jno
call
roll
ret
std
sub
jns
push
lds
jo
and
push
decl
rcl
call
sbb
addl
add
add
jnp
insb
ljmp
out
mov
sub
jnp
loope
ret
aas
rcrb
ret
sub
jg
and
mov
je
and
clc
sti
das
add
mov
pop
pushw
add
test
add
inc
add
xchg
leave
mov
jno
shlb
mov
mov
add
fwait
loop
jmp
dec
std
cmp
add
inc
dec
mov
mov
ret
ret
rorl
jae
jle
or
or
cmp
add
pop
fadds
mov
into
inc
cmp
and
mov
lea
in
shll
adc
mov
inc
add
add
mov
inc
push
mov
jns
mov
xchg
jno
add
mov
dec
fisubs
scas
fdivrs
mov
flds
imul
scas
das
decb
xor
movsl
les
push
sarb
and
add
xlat
adc
outsl
add
add
int3
cmpsl
xor
jns
clc
adc
pop
in
add
icebp
arpl
add
jp
call
inc
mov
and
cs
inc
ds
js
repz
and
call
shl
inc
cmpb
test
subb
movsl
xor
mov
loop
test
push
out
stc
adc
test
xchg
les
add
insl
add
fldcw
xor
fbstp
push
mov
stc
repz
in
ret
aas
xor
pop
sbb
std
jb
or
xor
push
mov
inc
add
or
std
imul
dec
hlt
adc
pop
or
mov
mov
add
inc
std
movsb
jns
std
lods
in
std
movsb
flds
inc
or
mov
add
das
sar
sbb
jle
sbb
jnp
rclb
sti
lcall
mov
add
aaa
ret
add
cmp
testl
mov
sar
addr16
mov
push
call
add
and
out
mov
fsubrl
ret
mov
lods
les
imull
adc
xchg
push
lret
mov
cmpsb
mov
cmpps
adc
adc
or
mov
xor
xor
jae
sbb
cmpsw
mov
or
sub
pushl
call
add
pop
les
adc
pop
cld
mov
das
cmpsl
ret
add
sbb
in
fists
icebp
scas
push
mov
push
pop
or
cltd
loopne
je
inc
shrd
jo
cmp
mov
in
push
mov
jmp
jbe
add
lret
mov
jo
xchg
repz
pushf
cs
adc
add
mov
sbb
xlat
push
add
mov
ljmp
mov
cs
mov
inc
mov
in
or
cmp
sub
fldenv
push
mov
ljmp
cli
mov
pminsw
inc
add
test
pop
fadds
mov
xor
adc
sub
add
mov
aas
stos
sbb
jb
lds
cmp
inc
or
add
xchg
jno
sti
inc
and
das
mulb
mov
dec
rcl
or
mov
pop
stos
push
add
jle
in
frndint
push
push
fidivrl
cld
es
jnp
sbb
adcl
dec
fsubs
mov
mov
add
jb
pop
xchg
add
movsl
inc
adc
ficomps
cmp
or
mov
xchg
lahf
push
sti
cmp
push
or
push
sti
rcrb
call
incl
jge
xchg
pop
inc
hlt
mov
js
jge
mov
cmp
inc
xchg
sub
adc
test
mov
inc
aaa
jge
cli
icebp
dec
jl
jno
push
inc
call
sub
pop
inc
decl
cmpsl
jge
dec
inc
call
add
es
cs
inc
adc
les
jl
sbb
test
iret
outsl
mov
pop
pop
lock
je
mov
ljmp
cmp
or
jo
mov
xor
aad
mov
and
scas
inc
and
add
add
and
add
cld
pop
cmp
mov
cmpsl
add
rep
test
cmpsl
mov
mov
mov
xor
jbe
daa
mov
xor
pusha
dec
dec
mov
je
dec
push
xor
data16
add
mov
pop
hlt
sub
outsl
test
stc
xchg
push
adc
cmpsl
dec
fildll
jecxz
sti
mov
bound
xchg
das
iret
outsl
pop
cld
ds
loop
lds
mov
dec
fwait
clc
in
or
xchg
inc
jg
cmc
xadd
or
gs
mov
pushl
in
testb
mov
xchg
mov
dec
and
add
ficompl
and
add
in
test
addl
bound
stc
test
mov
cs
lods
and
add
sub
add
test
jmp
mov
add
add
push
xchg
test
mov
jg
jge
or
call
int3
out
add
add
shrb
push
test
test
cmp
jns
into
inc
hlt
mov
incb
push
xor
and
push
in
pushf
stc
pop
push
inc
icebp
repz
mov
jnp
pshufw
sar
xchg
jge
in
jge
loopne
xchg
or
add
dec
lock
inc
jg
inc
inc
rolb
rolb
add
xchg
rolb
jg
jle
sti
test
test
add
add
repz
lahf
jmp
cs
add
repz
add
and
jmp
mov
in
inc
fsubr
sub
fsubrs
xor
mov
fs
movsl
pop
popf
cmp
das
or
scas
push
movsb
pop
adc
add
add
cmpsl
mov
push
std
cmp
xor
scas
scas
add
mov
fldl
or
and
scas
xor
sbb
dec
fisubrs
sub
push
repz
mov
mov
lock
pop
push
mov
out
mov
cmp
cmp
lods
mov
popf
mov
imul
jp
das
inc
mov
xlat
and
stos
jmp
fisttpl
fwait
dec
lret
mov
xchg
mov
out
mov
outsl
ds
mov
bound
push
cmpsb
push
mov
cmpsl
std
cmpsl
inc
stos
sub
add
mov
in
push
rclb
mov
rorb
stos
inc
call
push
add
or
adc
or
jne
mov
ficoml
das
xlat
mov
mov
jg
xor
sbb
push
adc
push
jmp
aad
andb
sub
leave
mov
adc
lret
jle
incl
lock
les
or
adc
add
adcl
mov
test
or
adc
call
xchg
or
adc
data16
into
dec
clc
mov
xchg
adc
mov
push
iret
or
adc
xchg
mov
mov
cmp
mov
jne
test
dec
stc
repz
jns
pop
clc
repz
mov
jp
add
sarb
inc
lds
dec
cmpsb
int3
push
pusha
cmp
and
lods
mov
xor
dec
or
aas
in
das
push
call
add
mov
mov
aas
xchg
lock
jle
cs
call
sub
pop
fdivs
sti
add
mov
mov
lods
pop
roll
rolb
add
xor
cmpsl
add
jmp
add
add
sub
cs
add
mov
out
repz
jo
mov
enter
pop
or
xor
cwtl
cmpsl
mov
xor
ljmp
mov
pusha
aas
xchg
daa
mov
inc
mov
mov
shlb
lahf
jo
push
movsl
fisttpl
mov
or
lcall
das
test
cmp
clc
fdivrs
cmpsl
inc
add
mov
pushf
mov
testb
ret
xchg
cld
divb
out
shr
lock
add
xchg
cmp
xchg
ret
fnsave
xchg
push
fcoms
stos
add
add
xor
xchg
jle
mov
hlt
adc
mov
hlt
jb
or
ljmp
inc
daa
sub
xchg
mov
mov
add
mov
push
add
sub
push
test
pop
decl
mov
push
lock
or
sbb
test
decl
add
add
sub
fdivrs
icebp
decb
iret
lahf
mov
fdivr
push
fmuls
sub
prefetcht0
mov
push
jp
sti
jne
mov
clc
lock
scas
xchg
pop
xchg
cs
hlt
xchg
add
out
test
jecxz
cs
or
cmpsl
sub
push
adc
inc
shrb
out
adc
sbb
jle
sbb
call
jns
jl
fidivl
inc
fsubl
pushf
mov
xchg
rorl
sbb
jae
xor
rep
add
repz
adc
repz
mov
jp
roll
mov
lds
inc
add
mov
push
out
inc
dec
jbe
or
pop
int
fsts
jp
add
insl
mov
xor
add
fidivl
aaa
inc
and
mov
fldl
mov
js
add
ret
sub
sarl
scas
jmp
add
sbb
sbb
mov
movsb
add
xchg
add
stc
add
or
fidivrl
jne
shlb
add
or
daa
pushf
add
add
js
add
movsb
mov
js
imul
fdiv
inc
std
jmp
std
js
out
mov
enter
dec
std
jl
xchg
gs
sahf
stos
add
test
jae
sahf
xor
notb
in
fiadds
test
sahf
pop
mov
push
jbe
jae
out
pushl
clc
xchg
ja
scas
mov
cmc
cmpsb
fidivs
in
xor
push
xchg
add
add
mov
cmpsl
fstl
add
inc
lock
inc
lock
mov
or
push
stos
inc
in
stc
mov
or
mov
mov
pop
mov
add
sub
xor
mov
push
hlt
dec
push
fmull
ret
stos
mov
add
add
lods
xchg
sub
adc
js
addb
incl
loopne
add
jl
dec
sbb
push
add
test
adcb
cmp
add
decl
and
jnp
add
or
push
mov
push
mov
test
push
jno
xor
add
add
ds
xor
xchg
jl
loop
xor
push
xchg
jl
ret
call
cmp
sub
adcl
leave
in
jecxz
fstl
sbb
xor
mov
mov
jmp
fcmove
out
jp
pop
sub
mov
sti
sub
out
and
xchg
int3
in
js
lret
xor
ljmp
jo
add
add
xchg
in
test
pusha
pop
push
subl
sub
adc
pop
mov
mov
jmp
shrb
out
insl
int3
xor
add
cmp
add
test
add
jbe
stos
cmpsb
sbb
add
cmp
subb
aas
mov
mov
xor
pop
add
sbb
jo
cmpsl
mov
add
add
add
gs
mov
jg
jmp
and
jo
cmpsl
xchg
jbe
push
cmpsl
xor
push
adc
cwtl
jmp
adc
jg
adc
xor
pop
cwtl
mov
pop
icebp
cs
cmp
adc
and
test
shll
clc
adc
sarl
cmp
jb
adc
and
add
fdivrp
mov
stos
std
ficompl
dec
test
call
call
cmp
jmp
daa
inc
or
jmp
ret
pop
jno
add
shr
push
mov
jg
push
pushf
out
mov
notl
mov
out
mov
dec
or
aas
add
xor
mov
inc
call
sub
pop
mov
roll
add
es
xlat
add
enter
jmp
es
or
inc
rorb
sub
ret
int3
jmp
es
int3
sbb
fsubrl
mov
pop
xor
enter
add
and
mov
push
test
push
inc
ss
lock
stc
out
in
test
movsl
push
test
addl
add
mov
add
mov
add
inc
pop
mov
mov
jae
mov
inc
sbb
pop
test
cwtl
xor
mov
jl
jbe
add
jmp
xor
mov
sub
lcall
add
cli
add
ret
hlt
adc
cmp
stos
in
push
xor
add
daa
das
sahf
xor
movsb
lahf
popa
cmp
ss
lret
cmpsl
xor
sahf
sub
mov
aas
addl
stos
mov
das
js
or
js
or
jp
aam
jo
ljmp
add
jo
lds
scas
mov
add
xchg
andb
test
add
jp
sbb
xor
ret
je
popa
add
bound
call
call
sbb
in
pushf
sbb
push
add
push
add
push
mov
call
movsb
incl
pop
cs
std
jl
mov
hlt
cltd
xchg
lock
movsb
std
out
mov
test
add
add
mov
mov
imul
or
mov
nop
add
jmp
cli
call
int3
in
shll
mov
push
call
add
jnp
in
aaa
and
les
mov
lcall
inc
call
xchg
or
adc
scas
jnp
cmp
cltd
retw
xor
cmp
incl
xchg
jo
cs
leave
aaa
or
cld
mov
cmpsb
push
mov
mov
mov
xlat
add
xchg
imul
leave
cmp
lods
das
loopne
rorb
mov
int
pop
out
xchg
inc
or
mov
scas
push
add
fidivs
mov
inc
cmp
add
hlt
stos
jmp
fwait
leave
ljmp
add
out
xor
add
mov
cmp
and
or
outsl
outsb
mov
rcrb
clc
mov
jmp
insb
adc
jge
mov
mov
jge
out
insb
movntq
xchg
bound
xor
pop
push
sub
dec
fcmove
add
sbb
add
add
jmp
add
imul
shl
jns
lods
or
add
repz
inc
xor
ss
into
pusha
push
negb
jb
das
sbb
int
imul
dec
loop
les
fidivs
mov
out
push
xchg
dec
pop
sbb
jns,pn
stc
cmpsl
cli
or
bnd
fsts
out
mov
sub
mov
out
add
add
sub
jmp
mov
hlt
lods
stos
cmc
cmp
out
loopne
pusha
icebp
lret
xchg
ja
movsl
xlat
sub
ret
mov
and
pop
iret
inc
mov
in
dec
hlt
inc
sub
mov
movsl
cmp
out
scas
fadds
jmp
sar
or
xor
call
jecxz
inc
loope
imul
loopne
jno
inc
cmp
rorb
mov
mov
pop
incl
xchg
cmp
mov
test
stos
lods
ficomps
or
lahf
and
roll
xchg
mov
jl
add
fwait
mov
insb
mov
dec
jecxz
mov
test
lds
dec
pop
cwtl
mov
adc
pop
dec
popf
paddw
notl
inc
add
add
fidivrs
or
push
jbe
add
loope
xor
out
rorb
and
movsl
fsubrl
cmp
mov
xchg
out
out
sub
adc
rclb
fadds
aad
les
xor
out
cmp
shl
sbb
or
cs
cmp
add
insl
xchg
mov
test
mov
stos
les
incb
jno
adc
adc
flds
mov
rorl
push
loop
pop
repz
lret
add
mov
xchg
out
cs
dec
stc
sub
xchg
dec
in
pop
xor
and
iret
sti
fwait
inc
cs
icebp
mov
fwait
fs
or
sub
add
add
add
nop
fnstsw
out
outsb
push
arpl
out
in
stos
ljmp
and
pusha
repz
sub
mov
add
xchg
shll
sub
xchg
mov
dec
add
je
mov
call
cmp
add
fisubl
push
fdivp
inc
aas
xor
fadds
xchg
inc
dec
cmp
xor
mov
fwait
jae
mov
shlb
stos
mov
pop
mov
std
xchg
pop
pushf
jae
mov
aam
and
push
push
inc
xchg
std
push
shr
cld
aam
xchg
xor
clc
jl
rclb
push
test
test
je
mov
add
add
inc
int3
lea
insb
xchg
add
dec
dec
or
stos
int3
in
lret
mov
call
push
std
push
add
xor
inc
pop
ljmp
inc
or
rcll
sub
hlt
adc
inc
insb
sti
jne
pop
jno
fistps
shlb
cmc
add
add
add
sbb
fcoml
loopne
incl
pop
jmp
push
mov
rol
aad
mov
fsubr
push
push
adc
inc
and
and
ret
cmp
std
fidivl
idivb
or
pop
xchg
test
cs
pushf
mov
mull
jmp
xchg
or
cs
or
and
add
add
nop
push
mov
lods
ret
inc
cmp
lock
mov
call
dec
xor
hlt
dec
add
stc
xchg
sub
out
repz
nop
jo
mov
insl
or
add
cmpsl
jmp
rep
mov
out
cmpsl
sbb
and
fisttpl
and
call
add
outsb
or
imul
in
mov
and
nop
clc
fistps
movsb
inc
cmc
mov
loopne
inc
or
add
lods
sbb
loope
outsl
shlb
cmp
inc
es
push
sbb
or
mov
xchg
mov
inc
sbb
xchg
testb
data16
jmp
add
add
ret
inc
cmc
xchg
add
jmp
mov
and
cmpsl
cmp
std
mov
inc
sbb
lcall
mov
sub
cmpsl
cmp
std
add
inc
sub
add
inc
xor
inc
or
mov
or
leave
mov
test
add
sub
std
incl
add
mov
test
adc
ss
xchg
mov
xchg
test
add
call
shl
aaa
cli
cld
jg
jl
jne
jnp
adc
add
call
test
and
push
leave
lds
add
cmp
sti
ss
xchg
mov
pop
add
jbe
xchg
pushf
adc
cwtl
std
out
rolb
add
cwtl
stc
out
add
cmp
mov
add
addb
das
test
xor
dec
or
aas
and
add
mov
mov
mov
call
shr
call
mov
xor
mov
lods
xor
sbb
add
aad
push
jno
pop
std
add
add
out
stos
fwait
mov
sbb
sahf
add
int
or
xor
add
add
les
js
jb
es
sub
jle
add
jo
add
sub
add
sub
jle
pop
add
cmp
add
dec
out
xor
add
add
lcall
out
mov
mov
in
mov
sbb
add
cmpsl
shl
add
mov
sub
add
xor
sbb
or
xchg
std
data16
jmp
and
mov
sub
and
jmp
lds
push
pop
push
movsb
xchg
add
test
in
in
shrb
fwait
lock
sub
lret
push
add
jmp
lret
mov
lret
loope
mov
jno
jl
test
fs
rolb
dec
stos
ja
inc
stos
jnp
add
push
pop
push
add
rcrb
aas
ja
add
or
mov
int3
out
add
add
incl
adc
add
or
xchg
ret
pop
test
pop
test
roll
add
xlat
jge
mov
lret
or
adc
add
xchg
cs
std
mov
mov
ret
xor
cwtl
adc
xor
pop
mov
sahf
pop
mov
sahf
pop
or
mov
cld
mov
sahf
dec
dec
xor
ret
or
nop
adc
sahf
movsl
loop
decl
inc
add
and
dec
icebp
mov
pop
mov
hlt
call
or
out
and
mov
cltd
xchg
jns
inc
mov
hlt
jl
add
pop
pop
or
add
vpackuswb
sub
test
add
add
xchg
cmp
xchg
cmpsl
pop
mov
in
jge,pn
adc
sahf
adc
sbb
push
bound
pop
mov
in
xchg
and
out
xchg
cs
mov
sti
xchg
roll
pop
mov
pusha
dec
stc
xchg
ds
mov
xchg
push
xchg
pusha
xor
scas
scas
mov
add
jle
je
decl
jecxz
call
sub
add
push
sbb
jne
sub
add
ja
add
scas
pop
mov
sub
xlat
dec
sub
call
sub
push
cwtl
push
adc
push
bound
sub
xchg
movsb
or
mov
lods
sbb
je
lods
sbb
add
bound
mov
jg
in
or
lods
adc
add
lock
mov
jg
nop
sti
sbbl
std
incl
std
incl
cld
rorb
inc
sub
divl
insb
dec
clc
aam
add
in
mov
push
out
cmc
cld
decb
mov
pop
addb
mov
jg
sbb
or
add
fimull
jmp
imul
sub
imul
call
cmpsl
jge
sub
roll
add
xrelease
sbb
cmpsl
add
mov
add
sbb
add
cmpsl
dec
or
filds
test
add
lea
jle
sub
idiv
xlat
movsl
xchg
imulb
test
cmpsb
jge
sub
clc
incl
dec
test
test
xchg
jge
sub
xchg
add
xchg
lcall
int3
lock
out
daa
mov
stos
rorl
aaa
ret
add
add
testb
adc
add
cmp
out
sub
push
rolb
arpl
data16
test
add
jnp
add
ss
dec
ss
fiadds
out
pop
mov
cmpsl
or
sbb
repnz
dec
mov
out
ljmp
add
pop
dec
inc
sbb
add
shlb
movsb
mov
mov
add
sub
inc
xlat
ficoms
inc
adc
inc
out
push
mov
sub
and
add
jmp
fsubs
scas
ljmp
mov
mov
out
mov
cmp
idivb
push
subl
sub
mov
mov
or
ljmp
add
and
and
es
dec
je
hlt
dec
cmp
add
inc
les
jmp
mov
cmp
xchg
or
push
int3
jle
mov
jb
dec
addr16
add
push
cmp
jecxz
xor
add
xchg
xchg
int3
jle
ja
rolb
testb
jno
sbb
add
push
mov
decl
push
lock
cmc
add
lahf
or
pop
sub
aam
inc
outsl
aam
mov
sub
icebp
pop
add
xor
movsl
hlt
mov
lock
cli
leave
in
jp
ss
jne
xchg
sbb
xchg
inc
push
add
sbb
or
cs
push
xchg
cs
jbe
xor
push
add
add
adc
loop
xchg
nop
add
ja
and
outsb
add
xor
pop
mov
or
push
stc
cld
jle
lcall
add
sbb
add
stc
arpl
xor
inc
mov
out
out
sti
bound
sub
out
cltd
inc
sbb
dec
shrl
clc
mov
insl
scas
filds
mov
mov
inc
push
fwait
mov
out
dec
lcall
mov
add
int
adc
inc
scas
shl
in
cmp
cmp
lahf
sbb
arpl
dec
cwtl
cmpsl
popa
xor
jge
add
add
adc
push
mov
arpl
dec
mov
add
inc
jmp
jae
mov
mov
divb
jns
loope
inc
jne
sub
mov
add
mov
or
jmp
lods
and
dec
and
sub
idivl
dec
fildl
inc
cmpsl
mov
call
nop
std
mov
out
int
mov
add
pop
add
mov
cld
incl
out
ja
add
lcall
add
mov
cvtdq2ps
cld
call
jle
adc
scas
mov
add
iret
xchg
shlb
dec
adc
add
sbb
xchg
inc
arpl
mov
mov
or
insb
or
pop
lahf
mov
mov
xchg
add
outsl
out
pop
pop
mov
jne
push
inc
dec
mov
push
cmp
dec
pushf
lret
in
mov
cs
aas
dec
movsl
pop
rcr
push
xchg
and
lea
or
sti
mov
push
ret
mov
push
lods
into
add
sbb
pop
sbb
lcall
sub
mov
xor
add
add
out
xchg
jp
sub
or
jns
pop
add
xchg
mov
scas
out
stos
das
xchg
andb
lcall
lcall
mov
jmp
xchg
imull
cs
js
clc
incb
jmp
sbb
jne
push
pop
cwtl
mov
add
jp
addr16
mov
add
pushw
lcall
scas
add
test
insl
dec
fbld
adc
lods
dec
cmpb
xlat
cld
mov
jne
push
fidivs
jmp
lahf
lods
pop
imul
add
mov
cli
scas
mov
jnp
sub
in
cld
cld
cmp
cld
imul
sub
std
outsb
mov
in
push
add
add
push
call
xchg
cmp
dec
mov
or
cwtl
std
mov
sahf
jno
movsl
test
sbb
mov
scas
lea
incb
sbb
jb
cmp
pop
add
les
je
ds
pop
inc
and
or
dec
bound
add
lods
inc
mov
cmc
xor
addr16
test
incb
sti
or
inc
add
test
add
lahf
add
or
ret
jmp
jl
add
shrb
pushl
xchg
push
push
clc
call
les
inc
mov
cld
inc
or
call
sbb
into
or
sti
or
inc
stos
mov
xchg
add
add
push
add
sbb
add
aas
adc
sbb
add
adc
or
cs
cld
jle
or
add
sbb
or
cs
es
jns
cmpb
add
push
test
jbe
loop
ret
test
xchg
jge
pop
pushf
mov
aad
dec
pop
push
add
imul
enter
lods
xchg
add
stos
sbb
xchg
lea
out
pop
push
cli
xchg
call
sbb
test
mov
int3
outsb
or
xor
jae,pn
mov
push
cs
lea
add
orb
popf
xchg
jbe
test
scas
add
dec
or
out
movsl
jge
mov
sbbl
add
and
mov
in
movsb
cmp
out
jns
call
add
inc
mov
sub
es
sub
add
cmp
cmp
fdivs
arpl
pop
sbb
pop
loope
int
jl
test
mov
mov
pop
xchg
xor
ss
mov
or
mov
das
push
cmp
push
outsl
add
add
add
mov
sub
test
jno
ret
inc
aam
js
in
je
call
in
or
std
xchg
shrl
mov
stos
xor
push
dec
add
add
fildl
pop
int3
inc
ret
add
je
or
adc
mov
addb
call
sub
dec
inc
mov
addr16
jle
inc
jl
pop
add
add
mov
js
incl
pop
sti
decl
xor
incl
call
mov
jle
ljmp
aam
jo
sarb
push
out
xchg
inc
xlat
into
out
mov
mov
jae
cmpsb
shll
dec
out
das
xchg
add
std
xchg
sbb
or
rorb
sub
clc
scas
stos
add
cs
js
xchg
and
sahf
ret
adc
dec
mov
pushf
xchg
and
test
mov
cs
add
push
icebp
call
lret
ja
icebp
or
aad
loope
les
pop
or
sbb
cmpsl
cs
add
add
mov
fisttpll
pop
add
movb
out
outsb
or
jbe
jp
fwait
adc
je
lods
mov
jb
into
ficoml
fdivrl
jge,pn
loopne
add
fbstp
or
js
repz
push
ja
js
or
cmp
mov
js
or
inc
sub
mov
add
ret
add
cmpsb
jnp
shl
jg
dec
fadds
out
mov
add
repz
inc
imul
add
or
mov
add
add
addl
stos
shl
iret
pop
add
aad
stc
pop
call
inc
xchg
push
test
sub
and
outsb
push
jle
adc
add
or
push
orl
or
jmp
dec
loope
call
pop
add
jmp
push
push
callw
or
pop
lret
cli
push
in
push
add
test
adc
shll
adc
adc
xchg
pop
incl
daa
adc
jno
call
xor
fs
xor
add
ret
addb
push
cmpb
jbe
lea
sub
push
lahf
outsb
arpl
pop
lock
jne
incl
adc
jb
call
and
cmpsl
push
add
je
mov
imul
push
repnz
push
push
mov
out
in
add
mov
add
push
imul
jge
sbb
fadds
mov
cs
imul
fisubrl
rcll
xor
cmpsb
cmp
insb
nop
mov
xor
cmp
ffree
xor
mov
ljmp
cmpb
add
orb
imul
add
dec
cmpl
jb
jl
pusha
sub
enter
mov
and
imul
xchg
out
mov
lret
addr16
jo
jb
daa
jne
es
or
ljmp
cs
outsb
or
out
mov
testb
test
testl
add
xchg
sbb
test
divb
out
rcll
inc
jmp
sarl
test
add
jmp
xor
arpl
sub
test
and
adc
je
out
cmp
rolb
mov
add
sub
add
inc
or
xor
out
sbb
test
jmp
das
xor
sbb
cmp
incl
jl
movb
call
std
add
jmp
shlb
and
add
add
test
add
test
call
dec
in
outsb
add
mov
and
mov
add
lds
xchg
inc
jne
push
sub
repz
jmp
call
push
pop
sbb
and
in
incl
or
imul
jecxz
movsl
adc
mov
out
push
jge
out
mov
lods
dec
adcb
std
jle
xchg
inc
stos
mov
jl
add
add
mov
cmp
mov
inc
cmpsb
shrd
push
cmc
es
nop
dec
xchg
sar
ficomps
shl
jl
data16
es
in
pop
push
push
frstor
aad
inc
add
add
adc
sbb
mov
pop
jns
pop
mov
jle
movsb
ret
add
add
mov
andl
sub
test
dec
insb
out
dec
je
push
mov
xor
outsl
addr16
lret
mov
test
insb
ljmp
adc
std
imul
and
packssdw
out
imul
testb
cmpsl
dec
js
inc
out
stos
cmpsb
imul
rorl
push
add
add
je
ret
jg
sub
jne
addl
sub
jne
fnstcw
ret
inc
cmc
std
jmp
std
push
push
repz
fisttpll
outsb
fld
sub
add
sbb
jmp
sub
add
test
stc
push
or
ljmp
add
mov
push
sar
sub
jmp
in
pop
insb
scas
insb
sti
aad
push
inc
jge,pn
add
sub
js
and
push
cld
add
cmp
cli
call
testl
cmp
call
in
in
xlat
add
filds
xor
pop
cmp
clc
test
lea
clc
lcall
in
pop
cld
lcall
add
sbb
add
push
or
jl
jae
jmp
sti
cli
push
sub
jle
inc
data16
aad
vmovmskps
ljmp
imul
imul
imull
add
test
inc
or
out
call
in
std
test
cmpsl
and
mov
mov
inc
add
add
add
arpl
mov
sarb
arpl
call
mov
cmp
arpl
rolb
iret
out
xchg
add
outsl
mov
addl
adc
jb
fsubrp
pop
subl
int3
popa
imull
push
push
fisubrl
jmp
mov
bound
imul
add
inc
bound
add
mov
js
add
inc
push
or
inc
jge
push
aad
push
jb
movb
xor
aas
push
add
mov
lahf
jo
out
cmpsb
mov
std
pop
jo
sub
xchg
add
out
xchg
es
test
pop
mov
jmp
add
cltd
sub
jo
or
cwtl
insb
data16
jge
fcomip
and
pusha
filds
or
cwtl
insb
data16
pop
mov
loope
inc
pushaw
call
or
cmp
or
xor
jo
prefetch
or
or
cli
mov
icebp
sub
jo
or
mov
in
or
add
add
loope
add
data16
push
adc
mov
int3
mov
data16
inc
pop
inc
sbb
in
and
mov
mov
sbb
pop
imul
movsl
jl
call
mov
push
test
pop
inc
add
adc
mov
mov
cli
mov
add
mov
xchg
dec
mov
mov
pop
ret
xchg
dec
push
mov
xchg
cmp
or
fnstenv
fwait
sbb
in
pushf
sub
fimuls
push
pop
in
and
inc
xorl
jbe
outsb
xor
inc
cmc
adc
or
pop
test
and
pop
scas
add
aam
jle
arpl
add
mov
add
add
mov
jl
mov
js,pt
jmp
pushl
shrl
divps
lock
test
and
outsb
add
into
pop
cld
arpl
xor
mov
adc
or
jnp
xchg
incl
adc
cmp
out
cmp
or
dec
sbb
and
outsl
add
int
je
mov
add
cmp
test
or
sub
cs
xor
sub
test
add
and
fidivrs
fsts
adc
cmp
lret
scas
arpl
imul
add
sbb
test
cmp
call
sub
mov
mov
in
or
add
add
dec
inc
jmp
pop
add
sub
xchg
rcr
std
cmpsb
xor
xchg
out
outsl
dec
inc
inc
test
test
cmpsb
lcall
cmp
test
cld
repnz
nop
cmpsl
add
jmp
xchg
lods
add
sub
insl
mov
inc
mov
std
cmp
test
mov
add
xchg
xchg
add
inc
pop
cmp
cmp
aad
push
hlt
aad
mov
aas
add
int3
adc
lahf
aam
inc
std
incb
add
xor
mov
aad
pop
repnz
xchg
add
add
fadd
inc
std
xchg
dec
mov
mov
add
inc
icebp
aad
add
add
add
adc
shl
cltd
add
add
aam
cltd
add
xor
sbbb
loopne
cltd
add
dec
je
leave
add
sub
inc
pop
or
mov
fs
fisubrl
cwtl
xchg
test
or
cs
xlat
push
jmp
cmc
pop
insl
push
pop
inc
imul
inc
add
add
xor
xor
push
lcall
add
xchg
jb
movb
push
add
push
cmp
aas
lea
dec
stos
add
jecxz
add
sub
mulb
jmp
add
add
inc
aas
adc
pop
or
mov
clc
or
aad
add
add
adc
adc
call
movsl
out
sub
mov
lds
outsb
divl
xchg
add
pop
xchg
dec
out
mov
inc
stos
xlat
mov
push
jmp
sub
and
sbb
insb
in
shrb
gs
add
in
push
cmp
xor
out
mov
insl
bnd
sub
jmp
add
add
push
xchg
sub
sar
fldenv
out
fidivrs
fs
sahf
or
jb
push
je
inc
ret
iret
mov
lods
pop
cwtl
in
sub
imul
cld
andl
add
and
sub
imul
pop
jmp
call
xor
xor
mov
inc
mov
sti
pusha
lock
mov
cli
lea
clc
incl
add
lock
xor
dec
cld
mov
popa
cmp
pop
test
std
test
sub
pop
inc
dec
in
mov
cli
test
jae
lcall
addb
pusha
or
pop
add
shrb
adc
cmp
outsb
fwait
jmp
inc
fmuls
jg
outsb
push
add
add
jle,pn
divb
sub
add
add
pop
cmc
or
pop
popa
or
jle
lret
pop
add
sub
in
inc
pop
add
std
xchg
mov
adc
inc
cltd
fucomi
pop
outsb
aad
mov
sarl
add
push
pushf
adcl
inc
andl
and
sbb
add
bnd
cld
stc
fdivl
pop
mov
call
mov
daa
lock
mov
test
add
mov
daa
mov
hlt
gs
iret
outsb
lret
add
pop
pop
int
clc
loope
pop
outsb
xchg
mov
outsb
mov
jne
rorl
or
ret
insb
cmp
or
mov
idivb
cmp
add
push
imul
add
imul
xchg
mov
and
adc
imul
sbb
ljmp
jo
cmp
add
aam
gs
test
rol
sub
push
call
push
sar
inc
jg
push
mov
push
pop
jno
push
inc
cltd
mov
std
ss
cld
aam
add
test
inc
jmp
idivb
push
inc
pop
adc
scas
addr16
jge
cwtl
pushl
sarb
jnp
mov
mov
sti
add
aam
dec
mov
add
fmul
inc
addr16
mov
std
mov
mov
inc
xlat
ljmp
ror
mov
aam
sub
ret
inc
sbb
call
cld
add
shrb
rcr
add
out
je
mov
sub
in
sub
push
add
push
mov
mov
xor
xorl
sbb
les
xchg
push
inc
cs
pop
push
outsb
outsb
std
adc
inc
jae
imul
pop
add
add
add
add
es
cld
inc
adcl
loop
pop
rcrl
adc
insb
pusha
inc
cs
push
push
in
add
xor
decl
pop
push
test
push
mov
xchg
ss
mull
pop
fldenv
cltd
add
js
push
loope
pop
push
mov
addb
cs
jl
cmp
movb
add
gs
incl
out
insl
clc
into
pop
pop
mov
in
imul
pop
fistl
dec
sub
or
push
outsb
add
mov
sub
mov
mov
cmp
ret
gs
sbb
cmc
push
stos
gs
push
clc
dec
xchg
gs
cmc
push
mov
push
or
ret
jns
ret
dec
out
call
outsb
add
add
into
popa
adc
stos
add
mov
sub
sub
out
xlat
bound
in
stc
dec
inc
jmp
xor
stc
push
inc
jns
or
jne
add
sub
xchg
call
leave
dec
inc
jmp
sub
daa
mov
mov
test
pop
push
subl
insl
addr16
dec
add
add
pop
jmp
sti
out
push
arpl
inc
xor
xchg
sub
pop
jb
enter
rorl
add
add
in
mov
call
ret
std
push
xlat
out
sbb
cld
incl
inc
decl
dec
cld
jne
jmp
cwtl
pop
add
inc
pop
enter
fdivs
add
add
cmpsl
jb
push
mov
addr16
mov
in
test
push
adc
jp
adc
sbb
or
aas
std
xor
cmp
ret
into
mov
push
mov
mov
push
pop
sub
add
mov
fdivrl
and
gs
sbb
add
add
jp
rcrl
insl
pop
pop
sbb
xchg
clc
incl
fs
cld
arpl
inc
mov
gs
xorl
dec
rorl
cs
cmp
add
xor
inc
mov
out
pop
add
add
sub
icebp
mov
ret
pop
sub
out
add
add
mov
add
jbe
aam
jbe
aas
pop
mov
xlat
xor
bound
dec
mov
mov
xor
push
lods
add
add
pop
int
shrb
xor
enter
cmp
ret
sarl
sub
mov
push
sbb
mov
aam
shl
loope
sbb
aas
pusha
mov
add
add
mov
push
sti
jl
pushf
sub
inc
push
jl
les
insb
popa
sub
or
jmp
lds
pop
mov
fidivrs
subb
arpl
jne
mov
inc
jmp
pop
mov
cmpsb
mov
das
bound
dec
sub
mov
imul
std
outsb
add
add
mov
je
test
jmp
rcl
push
jmp
cmovo
fildl
ret
imul
test
cli
adc
inc
mov
rolb
push
fiaddl
mov
enter
add
lea
dec
lea
dec
movl
sti
adc
xchg
ret
jo
add
add
in
addl
mov
inc
icebp
inc
std
push
and
dec
xor
xorb
cli
push
out
aad
cs
arpl
xchg
jns
fwait
push
fs
cmpl
sar
rorb
popa
add
addr16
jl
dec
pop
leave
dec
inc
jg
sub
add
add
cs
movsb
and
jae
jno
add
imul
call
clc
mov
mov
jo
push
das
imul
jno,pn
movsb
rcl
inc
ds
in
cld
lcall
les
cli
mov
out
mov
mov
lock
add
les
sbb
mov
pop
icebp
add
imul
pop
push
dec
shl
push
push
aam
nop
mov
push
push
xchg
cmp
add
fcoms
pop
jb
xchg
xchg
mov
es
ret
add
lods
dec
jmp
imul
ljmp
jmp
or
fs
dec
add
mov
in
shlb
add
add
shrl
mov
int
cmc
mov
dec
std
es
adc
mov
decl
sub
pop
std
xchg
mov
je
jmp
add
int3
xchg
add
sub
sbb
ss
icebp
cmp
in
pop
mov
mov
inc
jmp
jmp
subb
mov
cmp
add
stc
push
pop
add
lsl
add
sti
add
add
dec
inc
xchg
lea
call
cld
icebp
dec
mov
or
xchg
add
add
shlb
hlt
inc
push
cltd
nop
mov
pop
inc
mov
je
fbstp
cltd
cwtl
ljmp
add
add
add
in
xor
xchg
push
push
jl
call
xchg
mov
aas
mov
inc
imul
not
cmp
mov
push
xor
int3
add
mov
std
out
in
add
addr16
call
push
inc
inc
mov
pop
add
lods
test
stos
in
dec
push
or
bound
add
imul
ljmp
into
push
xchg
std
sbb
cwtl
stc
sub
popa
inc
xlat
pop
mov
insb
call
stos
test
sbb
mov
ss
push
push
out
out
shl
mov
pop
fnstcw
push
out
mov
pop
dec
pop
adc
xchg
pop
sbb
add
jns
sub
roll
sub
cs
jo
imul
add
add
push
sub
sub
out
pop
lcall
inc
iret
lods
mov
push
mov
call
xor
lea
add
cmp
jmp
add
add
cmpsl
inc
pop
std
ret
push
jbe
add
push
mov
sub
xchg
push
enter
movsb
push
jmp
jge
mov
add
jecxz
scas
pop
insb
pop
sbb
fs
std
push
vpaddw
lock
add
mov
add
mov
inc
sti
mov
outsl
jge
pop
push
rcrl
call
out
pop
cmp
or
xor
add
jl
jne
add
pop
add
ret
inc
lock
pop
pushf
add
lods
std
divb
inc
in
mov
scas
mov
je
test
mov
std
mov
std
mulb
in
mov
pop
adc
add
lcall
push
hlt
pop
or
sbb
aas
add
and
pop
mov
add
lock
shll
inc
scas
ja
imul
ret
mov
insb
or
imul
cld
pop
popa
inc
inc
leave
imul
test
pop
jae
adc
cmpsl
mov
add
mov
adc
cmpl
mov
loop
push
cmpsb
imul
add
add
imul
mov
pop
adc
sar
rorw
mov
lods
mov
in
notb
pop
mov
adc
lds
mov
icebp
std
icebp
es
mov
test
push
cs
arpl
add
sbb
mov
add
xchg
sbb
lods
inc
xchg
sub
jnp
daa
rorb
out
cmp
xchg
mov
pop
push
test
int
mov
adc
inc
stos
add
int
mov
add
shll
std
or
inc
rcl
push
std
fidivrs
inc
ret
mov
mov
mov
dec
push
mov
xchg
sbb
sar
aas
push
add
and
mov
outsl
in
std
gs
shll
add
mov
fstl
inc
dec
std
pop
cmpsb
rcll
sub
push
shrl
jb
cmpsl
mov
ljmp
push
jg
sub
add
js
push
add
lock
test
mov
ret
inc
jmp
std
out
push
sti
decl
inc
and
add
lock
and
xorb
adc
inc
and
dec
stc
call
and
sbb
adc
and
xchg
jle
imul
xchg
or
enter
lock
rolb
push
sarb
and
sub
xchg
mov
lea
mov
add
add
inc
hlt
ret
sub
lock
dec
or
dec
cmp
outsb
imul
cs
push
jmp
mov
test
add
pop
leave
shll
sub
add
adc
imul
lcall
jecxz
and
add
xchg
stc
pop
std
jns
test
std
ljmp
int
aam
xchg
push
insb
or
jmp
xchg
sbb
cmc
imul
ljmp
push
cmpsl
ljmp
mov
dec
sub
add
or
out
scas
in
push
cmp
call
add
push
add
loopne
ljmp
clc
ret
mov
loopne
jp
repnz
xchg
push
jg
jmp
aad
sti
add
sbb
push
pop
je
sub
lock
out
xor
jno
fisubs
inc
or
jns
call
xor
call
psubusw
test
add
push
inc
je
arpl
lahf
pop
adc
xor
xor
call
ja
std
jno
sbb
std
jmp
inc
push
xor
xchg
std
cli
ja
gs
xchg
out
test
mov
test
mov
aas
movsb
cwtl
add
out
call
mov
or
fadds
xchg
call
push
inc
add
lea
sti
lcall
addl
cld
push
inc
sar
call
mov
or
lea
and
add
add
lret
cs
or
imul
add
add
outsb
adc
in
cmp
jge
add
ljmp
push
sbb
mov
mov
mov
out
xor
mov
scas
cmp
add
sub
test
mov
sub
out
sbb
add
sti
sub
cs
mov
inc
push
sti
cld
sbb
int3
and
data16
add
loopne
mov
and
push
add
imul
out
scas
int
add
cli
xor
add
push
add
mov
dec
sahf
add
mov
and
mov
stos
jno
test
add
add
js
ret
push
ficoms
aas
out
out
pop
fsubr
subl
mov
add
les
stc
mov
es
add
pop
dec
cld
mov
shl
mov
test
pop
or
and
subl
sbb
sub
data16
and
push
xor
and
push
add
xor
je
jge
adc
shlb
sub
lock
das
cmp
sti
pop
cwtl
mov
cld
add
add
aas
jmp
add
call
roll
call
lock
add
aam
add
mov
mov
dec
in
sbbl
add
mov
std
push
test
xchg
jge
xchg
mov
mov
or
lock
fmul
sbb
scas
test
add
cld
cmp
pop
leave
add
add
mov
rol
adc
mov
incl
sbb
xchg
cmp
sub
stos
rcl
lahf
mov
cld
cmp
add
cs
pop
add
add
pushl
loop
pop
cmpsl
and
call
mov
and
jp
mov
and
pop
popa
xor
adc
push
jnp
push
pop
add
rol
pop
push
jp
ss
or
jnp
mov
aas
gs
cmc
sub
pop
or
jl
pop
push
inc
push
daa
movsl
sbb
call
sub
into
lock
sub
add
call
push
das
lds
pop
push
or
add
add
and
xchg
popa
mov
xor
idivl
jg
pop
scas
inc
jmp
mov
pop
add
dec
ljmp
stos
xchg
lods
push
jbe
adcb
add
scas
mov
jl
pop
mulb
js
push
movb
or
add
adc
loope
inc
jge
movsl
leave
out
ja,pn
pop
add
add
lods
fdivr
sti
cmpsl
jmp
mull
movsb
jno
add
testl
sbb
into
or
push
xchg
sbbb
cmpsl
jecxz
mov
cld
pop
jmp
dec
adc
data16
insb
ljmp
jmp
add
jmp
call
mov
subl
outsl
ret
inc
cmp
add
add
and
push
jno
std
and
add
imul
add
cld
lcall
out
mov
loopne
inc
mov
cmp
test
clc
xchg
cmpsb
cmp
or
lcall
mov
push
incl
rorb
aaa
adc
lcall
mov
xor
lcall
idivb
out
mov
ja
lcall
mov
sub
sahf
cmp
jmp
lds
fisttps
pop
adc
cmp
fdivrs
xchg
adc
push
js
and
mov
jns
cmc
mov
pop
into
push
std
and
push
or
mov
push
in
push
xchg
sub
inc
add
add
aas
jae
xchg
dec
adc
sar
bound
sbb
clc
das
inc
or
popa
test
push
add
mov
fildl
mov
filds
sub
imul
add
pop
jp
mov
mov
push
dec
sub
jle
test
add
lds
testl
add
movsb
mov
mov
mull
insb
inc
sbb
xor
ret
mov
pop
cmp
mov
dec
fisttpll
push
scas
inc
imulb
cmpsb
add
mov
pop
and
es
out
lods
add
add
int
jnp
fs
xor
movsl
pop
and
ljmp
std
pop
testb
add
add
push
add
imul
dec
inc
std
mov
jne
rcr
in
inc
jge
roll
cmp
stos
out
mov
stos
jecxz
xchg
cmp
fidivl
scas
cld
aam
lock
jmp
out
jae
mov
shl
lahf
in
ret
fldcw
mov
pop
xchg
and
push
repnz
pushf
add
add
inc
aad
call
add
mov
mov
xlat
add
pop
hlt
xor
loope
mov
inc
mov
sarb
lcall
dec
addr16
and
xchg
add
jne
mov
std
mov
add
mov
call
mov
xor
ds
push
push
inc
add
add
inc
testb
pop
in
mov
xor
push
adc
in
lcall
inc
cmp
mov
jle
push
pop
inc
std
or
push
add
pop
int
icebp
dec
dec
adc
push
mov
aas
mov
cs
stc
roll
inc
adc
sahf
in
xlat
push
pop
add
repz
pop
add
add
lds
jmp
int
inc
hlt
push
je
mov
jle
int3
jmp
scas
in
ret
ds
add
mov
stc
dec
or
cmc
cld
and
imul
jmp
popf
mov
aas
push
sub
add
mov
ja
pop
and
xor
push
push
fimuls
inc
pop
mov
fimull
add
mov
add
push
fs
inc
adc
test
imul
outsl
add
sti
add
mov
fidivl
mov
jb
ja,pn
sti
imul
pop
es
cltd
dec
cmp
mov
or
scas
aas
push
add
icebp
pop
call
insl
insl
int3
sbb
add
add
sbb
stos
sub
add
insb
push
or
add
jb
cmp
inc
ret
je
lods
cld
aam
out
aas
jmp
jle
in
lahf
das
nop
sub
cld
push
ds
pop
xor
inc
test
and
inc
jmp
insl
inc
mov
dec
je
xor
add
dec
dec
inc
add
jae
or
or
add
add
adc
lds
add
ljmp
or
dec
adc
std
pop
pop
stos
mov
mov
std
add
xor
or
mov
sbb
shl
rolb
mov
std
test
add
sar
cld
mov
call
mov
cmp
std
cmc
xchg
insl
inc
add
add
loope
je
movsb
fwait
lock
inc
test
call
inc
cs
pop
pop
xchg
add
mov
push
add
outsb
pop
pop
add
cmp
add
sub
sub
pop
stos
mov
divl
das
movsl
out
loope
add
dec
inc
xor
fs
push
outsb
push
jle
inc
pop
or
add
es
xor
push
or
imul
cmpsl
cmp
add
insb
dec
add
jp
add
add
iret
rclb
push
pop
inc
arpl
inc
movlps
stos
add
into
repnz
jmp
lods
dec
fwait
scas
data16
into
jb
xchg
negl
mov
fldenv
lea
divl
jns
stc
aas
push
and
pop
pop
add
add
adc
inc
add
mov
js
stos
shlb
stc
pushl
inc
and
daa
jnp
sbb
add
repnz
ret
mov
xchg
testb
or
jmp
sbb
insl
aas
pop
ret
or
mov
stos
sub
pop
push
mov
ljmp
aam
add
inc
push
inc
jmp
in
ds
mov
je
fiadds
jl
cmp
push
adc
movsb
push
std
push
ds
int3
stc
in
addb
or
cmp
insb
adc
fldln2
ds
bound
in
insl
testb
push
rclb
add
lcall
cmovo
add
or
push
add
add
adc
jne
shll
rcll
pop
inc
std
pop
pushf
pop
mov
in
pushf
mov
in
daa
or
add
push
add
adc
adc
add
test
add
add
add
fwait
mov
add
sub
imul
add
push
add
jg
add
lods
pop
inc
call
stos
addr16
addr16
xchg
mov
out
arpl
stos
out
xchg
outsb
stos
inc
jae
cmp
cmpsl
lods
adc
xor
jnp
das
daa
add
sbb
add
outsb
pusha
mov
sbb
ds
push
xchg
in
jmp
cmc
mov
rolb
shll
lds
daa
test
xor
or
insl
mov
ljmp
sarl
out
shl
in
das
aaa
in
addr16
scas
andl
inc
daa
xchg
fs
fldl
sbb
rclb
ret
fisubs
push
mov
cmp
sub
add
inc
mov
push
cmpsl
add
add
cmc
or
adc
add
outsb
add
push
jo
add
daa
and
inc
dec
out
aad
das
scas
and
test
loopne
fsts
push
push
push
daa
add
cmp
fmul
adc
out
out
sub
push
inc
jmp
test
inc
jmp
rcl
sub
push
dec
inc
jmp
push
paddb
pop
lcall
out
mov
fldl
add
xor
call
repnz
and
std
jb
lock
sub
add
clc
out
stos
sub
cmpsb
incl
inc
sar
mov
aaa
std
pop
inc
icebp
fs
or
arpl
pop
mov
and
push
dec
lock
add
popa
push
cld
jne
test
call
push
clc
cmpsl
add
add
xchg
mov
push
cld
jne
stc
adc
arpl
std
test
js
push
popl
cmpsl
stc
jo
lret
push
int3
inc
dec
lea
in
shlb
mov
in
inc
pop
incb
mov
jg
cli
decl
jno
imulb
in
aaa
adc
cmp
xor
or
jns
or
push
or
sub
roll
xchg
or
cmp
cmpb
out
es
loop
cmpsl
arpl
or
inc
lods
inc
or
cs
mov
cmp
test
mov
cmp
add
ja,pn
add
daa
add
sbbl
push
cmp
jmp
add
cli
cli
ret
flds
mov
mov
cmp
jae
shl
out
mov
mov
packuswb
out
cltd
mov
mov
cmp
jne
jmp
add
jge
dec
add
sub
test
add
inc
sub
jae
dec
iret
cmp
add
and
addb
add
push
xlat
pop
outsb
add
or
add
jmp
inc
sar
sub
pop
mov
or
cmp
and
lds
int
mov
repz
cmp
sub
jg
lds
adc
test
or
jmp
jne
hlt
test
add
test
add
add
sub
bound
lds
sub
sbb
fucomp
ss
push
or
je
loop
mov
cmp
sub
jl
adc
or
adc
jge
je
xchg
sbb
add
mov
push
cld
rorl
or
xlat
jg
je
stc
jne
sbb
sti
je
adc
scas
in
pushl
push
or
sbb
test
cld
adc
lret
or
push
in
mov
mov
pop
mov
pop
ret
mov
push
or
inc
cs
mov
ret
incl
cs
cmp
cmc
imul
daa
iret
cld
cmp
adc
fwait
repz
add
add
daa
add
out
or
jmp
es
cs
add
mov
adc
mov
es
frstor
loop
jbe
pop
push
add
lods
sub
test
cmpsl
or
and
fldt
mov
push
fsubrp
stos
cli
add
iret
arpl
jbe
mov
add
add
sub
das
or
outsl
add
shr
scas
or
sub
push
xchg
in
out
or
imul
dec
mov
xchg
jne
out
sub
ss
cli
dec
push
out
decl
add
rorb
mov
out
dec
imul
cmp
fldcw
add
add
fdivs
push
outsl
add
lahf
data16
in
xor
cmc
xor
andl
fldt
sub
mov
std
jne
sti
dec
push
xor
std
aas
dec
cwtl
fldt
xor
lcall
lock
lcall
mov
add
sub
add
pop
int3
mov
jg
fdivrp
hlt
call
add
add
xor
xor
sub
idiv
ljmp
call
test
cli
adc
icebp
jnp
mov
sbb
mov
sbb
jmp
xor
je
push
mov
xlat
jmp
mov
repnz
call
dec
inc
and
mov
and
xchg
add
add
add
ljmp
xchg
jmp
je
sti
jmp
xchg
flds
jg
je
test
incl
dec
cld
xor
fidivrl
and
sarl
mov
daa
add
shlb
fstpl
lods
jecxz
mov
ja
dec
loop
xor
push
es
mov
push
iret
push
inc
sub
movsb
add
add
add
pop
faddl
dec
daa
mov
lods
lret
inc
mov
sar
inc
jecxz
inc
movsb
inc
je
mov
mov
test
add
testl
popa
xor
std
inc
fisttpl
inc
add
loop
cmp
jecxz
mov
test
mov
push
or
lcall
lahf
pminub
stos
mov
sub
test
ljmp
aad
test
out
sti
out
mov
xor
into
mov
add
mov
out
sub
daa
mov
mov
xor
cmpsb
cmp
jle
add
cs
xorb
or
jge
ja
lods
jo
arpl
adc
add
add
jl
fstpl
adc
push
push
push
jae
cmpsb
sub
cltd
imul
std
bound
sbb
mov
mov
pop
sbb
jmp
pop
sar
mov
cld
into
cli
aam
mov
sub
movsb
fldt
cmp
xor
add
mov
xchg
sub
push
sub
leave
mov
sbb
pop
pop
inc
ret
cmp
adc
dec
push
mov
cld
mov
sub
pop
cmp
add
add
add
das
out
add
add
xchg
cmp
rolb
push
movsb
rclb
ss
dec
jle
call
dec
fs
add
add
test
or
pop
xchg
add
and
cmp
push
outsl
fcoms
xchg
or
movsb
neg
add
sbb
mov
xor
cs
das
sbb
mov
rcr
out
shlb
std
stos
xlat
add
lods
pop
stc
jge
xlat
out
and
mov
add
add
pxor
pop
and
sbb
cmp
inc
mov
pop
xor
push
sbb
cli
push
add
and
dec
add
out
in
imull
std
add
xor
sbb
add
sbb
cmp
jp
sbb
add
add
xlat
popa
enter
filds
add
mov
out
jl
lock
push
mov
mov
mov
push
test
jl
in
fnstcw
shl
loop
jl
pop
loop
fidivrl
in
pop
jbe
daa
add
lds
in
repnz
fmul
pusha
dec
add
aad
and
out
fwait
inc
fildll
jbe
adc
aas
mov
shl
mov
pop
test
add
pop
adc
fsubrs
test
inc
call
inc
sub
inc
sbb
lcall
repz
addr16
fucomi
inc
sub
andb
rcrb
call
jecxz
push
add
lods
call
sub
sbb
js
call
add
sbb
add
add
push
pop
pop
into
lds
add
jmp
ss
push
lea
sub
mov
fdivr
adc
xchg
mov
jno
adc
cmp
arpl
xor
xorl
iret
mul
dec
xchg
mov
or
dec
sub
or
adc
add
add
inc
add
jo
fmull
pop
cmp
mov
repnz
mov
adc
mov
add
sar
sbb
adc
sar
pop
add
add
adc
es
pop
sbb
stc
adcl
xor
leave
insb
and
push
mov
sub
data16
add
inc
cmpsl
adc
scas
sub
imul
adc
add
cmpsb
inc
sar
mov
lret
sub
jp
ss
inc
add
pop
xor
inc
push
jge
mov
add
cmp
add
cmp
sub
adcl
lahf
jl
ja
or
jne
mov
fidivrl
aad
test
add
scas
shrl
out
add
or
add
fnstenv
in
icebp
add
sti
test
fidivrs
inc
pop
scas
lahf
out
add
ret
adc
jp,pn
sub
sub
imul
jnp
mov
cmp
out
insl
sub
loope
int
std
scas
and
push
adc
call
jbe
or
in
jo
fcoml
push
sub
sub
int
add
and
or
cmp
sub
add
push
jg
call
sub
add
sbb
je
add
and
adc
xchg
rcrl
push
and
jecxz
and
or
adc
jns
out
jecxz
movsl
leave
sti
addb
outsl
or
sub
xchg
or
cmpsb
or
add
not
adc
outsl
mov
leave
incl
xchg
jg
gs
and
cmp
das
incl
or
leave
and
orb
dec
adc
in
add
add
int3
sar
call
xor
in
mov
add
call
ret
or
dec
push
add
add
mov
stc
push
flds
adc
jle
push
cs
out
xchg
add
mov
les
add
leave
lds
sbb
inc
and
dec
repnz
in
add
adc
leave
lds
sbb
cld
inc
mov
inc
cs
leave
pop
insl
add
scas
je
decb
push
fldenv
jle
mov
push
sub
imul
mov
mov
out
inc
add
sub
add
add
or
sub
loop
cmp
out
xchg
or
aas
pop
sub
cmpsb
shll
int
repnz
jmp
mov
xchg
mov
testb
pcmpgtb
adc
rolb
add
push
daa
add
cmp
push
sub
and
cmpsb
mov
fsubl
mov
daa
sti
movsb
stos
mov
pop
loop
xor
jbe
lahf
xchg
sbb
ss
gs
lods
sbb
clc
pushl
jae
inc
rorl
lcall
insb
adc
test
and
fistpl
add
add
sub
pop
push
and
sarl
sub
sbb
sub
cmpb
repz
in
ret
add
and
mov
sub
push
push
sbb
ret
push
ja
add
fsqrt
inc
jns
decl
or
xchg
das
cld
decl
mov
cmpsl
orb
cli
lea
add
xchg
mov
cld
call
jae
mov
fs
adc
adc
sub
pushw
bound
mov
dec
in
pop
fdivr
test
xor
ljmp
dec
mov
daa
add
xor
xlat
mov
out
jo
cs
mov
out
or
xor
add
add
ljmp
icebp
lods
lods
pop
push
sbb
add
push
daa
mov
aas
inc
div
mov
add
and
push
and
in
scas
cmp
add
sbb
push
xchg
inc
xchg
adc
sbb
mov
es
pop
add
mov
add
add
sbb
out
xor
std
mov
scas
add
pop
sbb
add
add
sbb
mov
add
xor
test
and
andb
jns
xor
xor
lods
adc
jge
vpsrlq
sar
shll
jmp
fimull
mov
pop
pusha
cs
js
aam
daa
ret
sbb
mov
xchg
out
lods
out
mov
aad
sbb
sbb
add
jne
ljmp
daa
or
add
test
adc
scas
mov
es
les
pushf
imul
jno
inc
and
mov
stos
add
cld
xchg
arpl
sub
jmp
push
jb
sbb
xor
xchg
sbb
sbb
stos
call
test
std
lcall
mov
call
mov
add
mov
mov
shll
lods
out
shrl
cld
sbb
ja
icebp
out
sub
add
jae
and
add
or
ljmp
cld
pop
sub
add
enter
sbb
pop
add
pop
cmc
ret
in
pop
add
js
add
lcall
je
cwtl
dec
and
cwtl
add
out
sbbb
add
lods
add
ds
in
mov
sub
jle
xchg
pop
add
push
xchg
or
jae
add
add
xor
adc
cs
cmp
mov
lods
jb
test
movsl
rcr
xorb
das
sub
mov
pxor
add
add
mov
stc
gs
test
stc
sub
fstl
out
mov
and
je
xor
jge
mov
std
sbb
cmp
add
call
mov
fldenv
adc
push
sar
adc
lods
imul
xchg
fadds
mov
cmp
stos
xchg
out
jle
xchg
adc
mov
test
test
pop
pop
mov
inc
aaa
push
roll
sar
mov
sbb
mov
and
add
test
aas
mov
or
ret
cli
xor
ljmp
mov
clc
shl
add
add
add
pop
jb
and
clc
mov
cmc
add
dec
xor
xchg
add
in
es
xor
mov
sbb
mov
xlat
xchg
stos
shl
call
adc
jo
adc
fistps
aas
add
xchg
sbb
mov
sub
xchg
add
daa
inc
jb
xchg
add
xchg
cld
out
mov
sbb
jb
sbb
jmp
cld
inc
or
pop
rcrb
lahf
add
daa
fbstp
faddl
inc
fildll
call
mov
leave
rorl
push
mov
xchg
shrb
pop
add
mov
push
mov
pop
pop
add
add
add
or
out
add
xlat
mov
push
dec
ret
test
cli
call
out
out
incl
or
les
adc
sub
rolb
cs
add
mov
push
or
cs
test
loop
lea
pusha
push
xor
sti
and
std
fists
pop
dec
add
add
lods
sub
out
xor
mov
fcmovnbe
cmpl
out
stos
lret
adc
jbe
pop
or
mov
add
mov
or
and
outsb
push
call
mov
test
sbb
add
mov
pop
pop
mov
iret
mov
in
push
ret
add
sbb
push
mov
cs
xor
sub
mov
or
sub
lahf
mov
inc
push
xchg
cmpsl
repnz
inc
xor
add
cmp
xchg
out
jbe
mov
out
enter
sub
xchg
sub
es
cmpsl
ret
fimuls
rcrl
mov
sub
or
sbb
jmp
lea
jb
daa
mov
xor
out
xor
add
daa
and
add
adc
das
pop
jmp
insb
or
mov
pop
lea
xchg
add
or
and
les
scas
sbb
fstp
enter
imul
mov
adc
mov
fiadds
xchg
cld
cs
call
stos
sbb
adc
jae,pt
mov
testl
jecxz
inc
clc
in
addr16
decl
push
dec
mov
test
cli
adc
std
xor
jle
or
inc
jmp
data16
mov
jo
rolb
push
into
jo
mov
call
incl
nop
or
std
add
addb
popf
and
ljmp
jne
mov
subb
lock
std
decl
leave
adc
call
shll
std
imul
jmp
pop
sub
movsl
cmp
inc
sub
out
das
sub
add
in
xchg
mov
cmpsl
fmull
xchg
add
lret
jo
jae
mov
sub
pop
add
mov
or
add
sbb
sbb
clc
push
pushl
xor
push
movsb
ret
add
loope
sub
addl
sbb
mov
fldt
sbb
and
or
shlb
psubb
loop
cmp
or
cmp
dec
inc
sbb
jae
push
push
mov
add
loop
scas
cs
mov
add
lods
or
xchg
sub
mov
add
jl
sub
popa
cmp
jp
sbb
mov
sub
mov
add
add
add
adc
nop
ds
mov
add
add
add
mov
mov
push
mov
sub
stos
add
inc
call
gs
add
data16
sub
stos
add
push
cmp
add
je
adc
mov
lcall
inc
das
andl
sub
adc
mov
add
add
add
jb
sbbl
decl
sti
jo
inc
mov
jp
inc
shl
mov
mov
pop
and
adc
cmpb
testb
dec
cmp
les
stc
mov
test
addl
sbb
test
orb
adc
push
lea
cld
test
xchg
les
add
add
stc
lods
mov
add
imul
cs
add
pop
and
add
mov
xlat
mov
add
sahf
cld
sahf
lea
add
movsb
lods
mov
call
cli
jg
cmp
stos
add
in
push
mov
add
push
mov
test
pusha
dec
sbb
push
jno
sub
sub
mov
pushf
in
xor
sub
add
adc
test
sub
add
les
jnp
add
add
mov
daa
mov
call
adc
sbb
movsl
out
leave
dec
rolb
add
xchg
mov
inc
scas
daa
orl
add
out
push
out
nop
inc
jg
mov
repz
sahf
add
mov
mov
mov
ja
pop
adc
sub
or
cltd
js
sbb
cmpsb
mov
jno
mov
out
push
dec
add
adc
mov
lods
inc
or
call
inc
or
sub
mov
daa
add
add
xchg
and
pushf
sbb
jg
loope
cmp
jmp
cli
cmp
in
push
sbb
popa
add
jmp
sub
add
add
jb
std
xchg
and
in
and
lds
mov
and
or
and
testl
je
xchg
imul
adc
and
cli
push
outsl
shrb
xchg
in
sub
cld
rolb
std
push
sbb
dec
push
mov
push
add
lods
std
cld
addb
ljmp
jp
adc
xchg
test
add
inc
addb
sbb
jle
add
add
jb
cs
adc
mov
ljmp
sbb
jbe
mov
nop
inc
mov
sub
adc
dec
jg
add
mov
and
stos
push
ret
aas
mov
xchg
xchg
add
add
add
shlb
stos
out
mov
add
sbb
adc
into
mov
add
add
push
movsl
dec
sub
ljmp
cmpsl
hlt
pop
cmp
in
xchg
lcall
adc
add
cmp
pop
sub
lcall
jg
sbb
and
mov
and
andb
sar
dec
outsl
lock
adc
leave
out
pop
paddusw
loope
sbb
fadds
add
out
rcr
add
jp
mov
jbe
fs
repnz
xchg
push
test
mov
test
xchg
jmp
lcall
out
sbb
ffreep
sbb
push
call
bound
or
and
or
js
push
or
add
movl
lahf
jne
add
sub
loope
daa
mul
or
stc
cmp
fisubrs
add
adc
or
insl
ljmp
push
sub
daa
cmp
rorb
xor
out
les
add
rcll
test
inc
add
aaa
scas
sbb
mov
add
test
jns
mov
mov
jmp
lea
jl
out
mov
add
stc
add
push
iret
call
jg
add
icebp
adc
xchg
jmp
rolb
bnd
cmp
movhps
je
out
cli
jmp
and
jle
xchg
mov
mov
out
mov
repz
add
add
xor
cmp
pop
cmpsl
addb
mov
lahf
and
sub
out
jb
xchg
sar
popf
inc
cmpsl
cmp
mov
and
sbb
sub
jns
jne
cmp
mov
jmp
jb
clc
out
jb
add
fsts
das
mov
mov
inc
in
out
add
fwait
xchg
push
std
adc
lds
dec
add
dec
cli
out
inc
mov
fldl
cmpsl
les
hlt
cmpsb
mov
and
mov
lret
clc
push
add
test
test
and
inc
test
or
dec
lock
cwtl
add
aad
push
dec
mov
sbb
xor
jno
adc
ja
rsm
aas
mov
aas
inc
mov
add
add
pop
inc
add
xchg
fcompl
xchg
add
ja
icebp
and
or
in
pop
dec
jmp
imul
jns
in
jecxz
jb
sub
add
cmpsb
sub
out
add
lods
dec
or
cmp
jae
test
add
sub
and
test
cmc
mov
or
sub
lods
pop
and
mov
sub
loope
mov
push
scas
or
add
adcb
and
call
jge
cld
xchg
addl
std
jb
jo
stc
call
int3
in
xor
sbb
xchg
xchg
clc
test
call
mov
sti
insl
push
std
xor
and
ret
xchg
mov
add
lods
add
add
mov
cld
mov
xor
push
in
sub
or
add
popf
sbb
mov
pop
add
jno
imul
push
or
repnz
incl
add
lods
bound
sub
add
xchg
mov
cs
loop
push
rcr
cld
ret
and
push
xor
sti
stos
push
mov
subl
sbb
xchg
and
mov
cs
push
inc
es
xchg
or
imul
add
adc
cmp
leave
sbb
call
jnp,pn
xchg
add
mov
repz
cmp
push
or
outsb
xchg
mov
sarl
sbb
or
sbb
arpl
inc
add
jge
or
pop
jns
repz
inc
jnp
sbb
out
cmpsl
or
and
jg
cld
sbb
js
in
add
adc
add
scas
dec
push
addb
orb
fwait
add
add
jl
or
push
roll
pop
pop
add
jmp
ret
or
hlt
dec
mov
add
in
jge
cmc
xor
jns
cmc
aad
sub
pop
jbe
test
stc
ret
push
push
into
pop
ret
sub
mov
data16
sub
inc
loope
sbb
push
addl
call
add
es
bound
subb
add
test
aad
std
add
shlb
cld
dec
ret
clc
jo
pop
lret
xchg
cli
jo
or
out
sbb
decl
cld
jnp
add
idiv
call
cmp
lcall
inc
push
mov
add
add
in
das
push
mov
dec
push
push
int3
jmp
or
outsb
pop
push
clc
imul
das
data16
adc
mov
std
out
dec
std
decl
lcall
int
cs
or
sub
out
mov
jg
cmp
push
insl
or
mov
sub
jno
lock
mov
xchg
addb
add
jmp
mov
sti
push
mov
insl
cs
popa
sub
or
xchg
inc
std
ret
push
mov
es
add
cmp
sti
subb
rcll
lcall
shrb
jmp
pop
orl
out
push
icebp
add
divl
xchg
out
jp
push
sbb
add
add
add
add
cs
add
add
stos
pop
test
in
or
add
dec
movsb
sti
jmp
xchg
imul
xchg
int
pop
clc
cmpsb
mov
out
push
push
add
jl
clc
pushf
inc
outsl
mov
scas
cmp
jl
and
cmp
ljmp
add
sub
add
push
psrlw
add
jmp
sub
sbb
aas
ss
and
jge
cld
cld
jno
aas
jmp
mov
pop
adc
pop
fdivr
call
sub
in
jg
bound
jae
xor
fldenv
sbb
fs
ficoms
roll
add
pop
std
cmpsb
movsl
mov
in
sub
out
mov
std
aaa
xor
mov
in
mov
pop
pop
pop
pop
fistps
sar
push
push
dec
hlt
mov
in
std
jo
mov
in
std
add
mov
dec
cld
adc
sbb
add
and
in
xlat
std
pop
pop
push
or
dec
cli
or
das
in
mov
pushl
shrb
pop
push
mov
xchg
push
mov
add
aas
add
adc
jecxz
mov
lret
sbb
movl
add
pop
xchg
mov
inc
nop
int
cmp
in
aas
cs
cmp
lds
add
push
add
mov
mov
push
add
add
pop
mov
mov
mov
jo
sahf
clc
orb
add
mov
das
pop
add
cmp
mov
adc
sar
inc
push
xchg
sub
jo
sbb
mov
push
inc
repnz
add
stc
add
xor
scas
cmc
jne
orb
fwait
adc
add
add
inc
add
sbb
mov
mov
cs
sar
xor
sbb
push
es
cmpsb
inc
adc
mull
xor
sbb
sarb
dec
fildll
pop
iret
jmp
jbe
push
or
pop
push
add
mov
mov
fstl
adc
xchg
clc
mov
add
add
push
xchg
xchg
adc
jbe
add
mov
jbe
sub
sub
push
push
pusha
mov
je
shrl
adc
call
jae
fistl
jae
popf
sti
adc
add
pop
pop
cmpsl
enter
jge
mov
add
sub
outsb
push
std
cld
mov
inc
jmp
shr
mov
jmp
push
inc
inc
test
add
cld
call
ljmp
cmp
mov
pop
cmp
push
add
cmp
and
adc
iret
mov
sub
push
pop
cmpb
stc
inc
push
orb
push
xchg
xchg
jg
jg
lds
jg
lahf
add
mov
push
or
add
mov
fimuls
mov
ret
in
or
dec
add
shrl
add
dec
fld
aad
andb
xor
aad
je
je
add
pop
inc
and
add
ljmp
inc
movsl
repnz
mov
call
mov
sbb
mov
push
call
lods
add
stos
es
fucom
jmp
mov
xor
xchg
imul
cld
adcl
mov
das
out
push
mov
rclb
push
fs
and
cmc
popa
inc
ss
sbb
mov
call
popa
hlt
lods
repnz
cmp
jo
adc
xorl
sub
sti
call
push
or
add
repz
imul
and
sar
xchg
icebp
mov
insl
arpl
add
mov
fiadds
inc
xchg
test
stos
daa
or
dec
dec
or
jmp
arpl
add
jl
or
mov
data16
mov
pusha
in
inc
in
inc
jmp
jge
roll
add
or
xor
adc
in
outsb
adc
sub
scas
insl
and
insb
add
sub
lea
out
mov
jae
mov
or
pop
push
call
push
daa
push
call
cs
add
sub
jg
add
andl
pop
push
mov
add
pop
in
call
xchg
lret
dec
in
cmp
leave
inc
add
push
call
test
ja
mov
test
pushf
inc
or
dec
or
or
add
sbb
clc
add
std
decl
scas
add
mov
cld
out
jns
pop
data16
std
imul
out
pop
sti
call
ret
pop
add
add
mov
in
cs
sub
cs
or
or
in
out
fnstenv
dec
adc
outsb
icebp
cmp
out
mov
cmpsb
adc
push
push
push
xchg
call
lds
adc
std
loope
rorl
add
cs
push
push
test
push
std
arpl
std
jb
push
sub
test
add
inc
repz
adc
inc
add
sahf
adc
pusha
pusha
sbb
adc
push
mov
or
fdiv
xchg
je,pn
orb
add
test
xchg
popa
jo
cmp
sahf
inc
xor
jle
xor
xchg
ret
cwtl
jl
add
cs
scas
aad
jne
pop
test
add
imul
clc
jge
pusha
xor
jl
jle
ds
sbb
pop
mov
cmp
jmp
insl
repz
push
int3
add
cmp
sbb
jmp
jmp
sub
add
pop
add
out
cmc
xchg
jmp
in
incl
stos
sti
mov
rcrl
add
jmp
inc
and
sub
push
pop
inc
sbb
sub
add
pop
cmpsl
in
das
es
add
add
cmc
jae
repnz
ss
pop
stos
cmpsb
ss
in
jb
push
cmc
jo
add
out
jb
add
mov
xorl
mov
testb
push
push
add
xchg
jno
sub
nop
push
xchg
add
inc
dec
jl
jne
sub
add
in
ret
push
jmp
cmp
pop
lcall
paddw
inc
in
fs
add
add
call
incl
dec
push
push
pop
hlt
jg
jmp
adcb
mov
add
or
add
add
aad
pop
or
sub
incl
movsl
xchg
add
mov
cli
cld
and
stc
jae
jb
mov
jg
pusha
out
stc
out
les
add
in
inc
sub
dec
aam
sahf
jb
scas
add
cs
sti
pusha
das
out
out
mov
insb
adc
mov
rol
or
xchg
add
add
add
pop
out
jae
push
stc
jb
std
mov
add
push
jmp
mov
insb
ret
cmp
bound
inc
pushl
stos
psubd
add
int3
outsl
pop
out
push
xor
inc
jnp,pn
outsl
dec
push
pop
pop
out
out
imul
adc
jmp
andl
clc
dec
dec
fisubrs
push
shrl
cmc
cmp
mov
aad
add
add
int3
imul
fimull
push
arpl
sti
adc
sub
adc
add
adc
outsl
or
jo
or
sbb
cmp
sub
xchg
cmp
sar
insl
imul
sbb
hlt
rolb
outsl
or
push
test
add
inc
jae
mov
faddl
inc
and
out
cmp
hlt
mov
add
jg
sbb
mov
jmp
or
dec
call
lcall
fiaddl
call
test
bound
mov
insb
std
rolb
xchg
jge
push
mov
adc
add
add
mov
or
jo
or
jno
in
filds
or
out
dec
inc
incb
ds
cld
pushl
shlb
ss
xchg
ss
jo
cli
or
and
stc
out
push
mov
sbb
xor
jo
scas
sbbb
outsb
out
filds
add
aad
mov
add
outsb
into
out
lock
pop
pushl
out
mov
mov
or
push
std
outsb
or
jecxz
rclb
cmc
cld
or
cmp
and
call
jmp
fildl
add
insl
pop
or
sbb
pusha
ret
sub
add
sub
adc
xor
adc
add
pop
add
add
adc
test
das
pop
test
stos
cs
dec
test
dec
push
mov
lahf
mov
lcall
inc
add
repz
sbb
add
add
daa
mov
pop
inc
xor
jmp
es
icebp
sbb
sbb
test
jno
add
adc
mov
and
add
in
xor
fdivp
add
add
imul
inc
mov
jmp
ljmp
add
test
pop
in
jae
adc
dec
call
insl
ljmp
bound
std
mov
jbe
data16
je
gs
push
ds
bound
and
push
sub
ret
sub
pop
add
sub
pop
add
add
test
lds
add
jecxz
stos
roll
call
out
cmp
aas
inc
jmp
imul
dec
and
out
insl
call
pop
std
incb
sbb
inc
pop
push
sti
adc
sub
jle
inc
push
push
call
cmp
nop
movl
outsl
incl
add
clc
outsb
mov
incl
push
cld
add
repz
test
test
xchg
add
out
adc
insl
mov
sete
xor
jae
or
frstor
je
std
pop
pop
push
jmp
and
and
inc
or
repz
lock
stos
xchg
ja
movsl
movsl
push
mov
xlat
push
push
add
add
mov
std
fldenv
dec
add
pusha
dec
dec
and
stos
push
std
and
enter
sub
repnz
cli
or
mov
push
mov
xlat
push
xchg
ret
fistpll
add
pop
adc
and
add
sbb
daa
add
je
adc
add
flds
add
sbb
adc
lods
inc
push
std
out
pop
push
sysret
push
add
repnz
cli
inc
orb
xor
sti
push
out
lods
and
add
or
ja
daa
pop
jnp
daa
pop
push
inc
ja
or
inc
dec
sub
std
dec
add
inc
dec
inc
xchg
mov
dec
inc
jmp
sub
es
or
iret
std
sbb
es
add
add
cmp
xchg
add
jmp
sub
push
xchg
sub
add
push
cltd
cld
js
mov
in
call
in
mov
jae
sbb
add
mov
add
sbb
jae
call
in
dec
mov
add
pop
jns
push
sub
test
xor
jmp
add
stc
mull
adc
das
icebp
in
in
test
ja
icebp
in
call
call
das
mov
add
cmc
mov
fstpt
push
jb
notb
or
insb
adc
pop
lock
scas
push
inc
pop
sbb
add
jmp
inc
call
arpl
pushl
out
sti
lea
cmpsl
stc
incl
add
push
dec
inc
push
lock
out
jb
adc
sti
call
pop
inc
incb
out
jno
cld
jno
and
pushl
sbb
cmp
or
xlat
fcoms
mov
shrb
xchg
xor
stos
in
das
xlat
add
sbb
ja
inc
and
or
xchg
add
add
add
or
inc
clc
jle
shl
or
adc
dec
add
cs
outsl
clc
push
cmpsl
ja
cs
mov
push
call
stos
pop
js
adc
lock
push
mov
fsub
jno
adc
jne
sti
push
fadd
lods
rclb
jmp
aaa
jl
push
cmp
add
add
sub
push
repz
es
out
sbb
flds
jne
mov
jae
jp
faddl
add
ja
jp
pusha
jb
adc
cs
out
inc
test
inc
xor
or
add
sbb
mov
add
dec
call
ss
jmp
jb
out
hlt
add
add
ljmp
ljmp
push
jge
lcall
pop
fs
cmpsl
out
in
jmp
mov
add
cmp
movsb
pop
call
dec
inc
add
jnp
rclb
roll
pusha
jns
push
je
aaa
sbbl
pop
mov
subl
jb
push
in
jle
out
jmp
insb
adc
sbb
jp
push
add
add
shl
cmpsl
out
add
push
sbb
lfs
xlat
add
ficoml
mov
lcall
push
lea
and
clc
lret
inc
out
mov
shll
addr16
and
pop
call
fistpl
setb
les
add
mov
add
loop
adc
imul
ret
or
push
fcoms
pop
cld
cmp
mov
push
call
adcl
icebp
add
dec
push
cs
cltd
add
sbb
inc
jb,pn
andb
mov
mov
inc
cs
adc
jmp
popa
add
outsl
add
cmp
aas
or
add
lods
xchg
or
cmp
mov
push
je
push
imul
lods
push
add
push
push
inc
xlat
add
cs
xlat
jg
inc
push
xchg
pop
mov
sti
xchg
leave
cmc
add
xor
dec
call
add
scas
aam
push
add
add
loop
push
lds
outsl
inc
add
add
add
les
out
out
in
push
adc
add
in
pop
cmp
out
std
rol
lods
mov
out
adc
xor
jae,pt
and
fsubrs
or
imul
shl
call
sub
sbb
shrl
in
bound
sbb
push
clc
cmpb
add
lods
adc
ficomps
cmp
xor
imul
call
imul
mov
popf
imul
fwait
andl
cs
das
rcr
gs
call
repnz
sub
outsb
and
cwtl
inc
and
incl
add
inc
jno
mov
push
and
les
inc
sub
call
cld
aas
and
out
outsb
push
add
dec
call
test
jmp
sti
lea
sub
inc
fs
sbb
inc
mov
push
xor
and
cld
imul
cld
dec
call
add
add
inc
and
push
push
ljmp
in
push
outsb
flds
and
or
pusha
mov
scas
aaa
jae
movsl
fsubr
add
add
les
add
fsub
adc
xlat
add
cs
imul
add
sbb
add
sbb
insl
ficomps
faddl
push
movsl
cld
sub
test
add
add
inc
clc
mov
pop
hlt
out
lret
lods
xor
pushl
aaa
xor
cs
int3
xchg
insb
js
movsb
ss
inc
jg
sbb
out
fnstenv
jmp
lret
int
cs
or
ret
jb
lcall
jo
jae
sub
movsl
cmp
add
jnp
jno
add
aas
pop
jb
shll
icebp
fdiv
test
std
mov
in
jmp
cmp
cmp
subb
jo
outsb
mov
inc
fimull
sub
dec
call
insb
icebp
out
jl
inc
xchg
inc
call
fs
jmp
xchg
pop
clc
out
std
pushl
repz
hlt
mov
hlt
adc
add
data16
push
push
add
add
call
nop
jecxz
lahf
add
xorb
jl
jmp
jmp
cs
ficoml
cli
push
mov
sar
jg
in
push
xorl
vpshuflw
lcall
pop
jne
jae
mov
add
lret
mov
push
mov
out
or
add
add
add
push
mov
push
lahf
inc
jmp
or
jno
lret
mov
inc
jmp
dec
test
ret
add
xchg
pop
pop
adc
lds
cmp
mov
mov
je
adc
subb
jo
lods
add
adc
inc
push
xor
out
cs
mov
push
divb
repz
mov
das
cmp
inc
mov
xor
cld
loope
out
incb
lock
jae
lock
data16
inc
rcrl
or
push
cld
push
insl
fwait
ja
scas
sbb
push
cs
scas
lahf
jae
in
pop
in
jecxz
popa
jnp
mov
push
in
es
jecxz
add
add
sub
out
xor
ds
sub
and
pop
adc
movsb
in
lret
push
jecxz
hlt
pop
mov
xor
sbbl
bound
clc
scas
inc
mov
fldl
loop
andl
sbb
sbb
adc
push
xchg
lods
js
jecxz
xor
add
add
icebp
cmpsb
add
aas
repnz
fsubl
dec
push
jmp
add
jmp
out
movsl
addl
pusha
sub
rcl
fdivr
jmp
or
loopne
push
divb
mov
in
gs
fildl
cmpsb
cmp
popf
jmp
std
mov
sbb
add
int3
fisttpl
clc
sti
cld
outsb
mov
or
lods
fdivr
jmp
lods
fdivr
jmp
add
mov
cltd
dec
icebp
add
in
decl
pushf
dec
fistl
xor
sbb
add
mov
inc
cld
xchg
pusha
cld
call
mov
mov
dec
lea
dec
push
lock
push
lock
inc
add
rolb
add
pop
movb
xor
xchg
cmp
xchg
or
push
inc
xlat
sbb
adc
out
sbb
jne
mov
push
fisubrs
add
bound
xchg
jbe
add
mov
add
xor
mov
mov
mov
lock
es
lea
add
add
cmp
std
sbb
clc
pop
jge
xchg
mov
dec
xchg
jmp
leave
cld
push
mov
sarl
dec
inc
add
mov
jno
dec
adc
cld
mov
test
mov
or
mov
insb
fdivr
mov
inc
add
sbb
mov
cltd
gs
add
add
fcomps
loopne
xchg
mov
arpl
sbb
add
fldt
or
and
out
repnz
aad
fistpll
imul
aam
fdivp
andl
mov
jecxz
movsl
xor
andl
fnstenv
fistps
stc
inc
jge,pn
fdivs
fdivs
stos
cli
out
jge,pn
fildl
add
xchg
mov
sbb
xor
sbbl
fsts
fildll
add
idiv
cmpsl
cltd
or
frndint
jmp
sub
push
mov
cld
negb
inc
icebp
add
test
call
cmp
mov
fcomps
add
insl
in
dec
pop
bound
mov
add
add
jg
subl
mov
inc
jmp
cwtl
jae
mov
mull
xor
ret
inc
fistl
add
iret
cmp
aam
sti
jmp
adc
xchg
mov
call
dec
ret
adcl
sti
lcall
jbe
ljmp
mov
mov
test
jb
jb
sti
adc
add
add
jo
jp
cmp
mov
call
inc
aaa
hlt
add
sub
xlat
add
call
mov
lock
call
sarb
decb
mov
adc
jmp
push
cs
inc
clc
xchg
add
push
push
lock
mov
adc
call
add
inc
daa
add
add
add
lahf
push
mull
inc
out
and
lea
call
sub
xor
or
add
pop
push
in
sbb
jg
xor
and
dec
call
das
push
adc
inc
mov
push
ds
mov
incl
cmpb
add
xchg
dec
decl
xchg
mov
add
xlat
mov
push
aaa
sub
ljmp
dec
sbb
pop
add
std
popa
dec
test
xor
aad
inc
cmp
xchg
add
les
inc
cli
mov
jmp
mov
fsubs
sbb
inc
mov
cmp
cmp
add
cmpsb
pop
cld
iret
xor
adc
sarb
repnz
sub
mov
call
subl
icebp
mov
mov
add
gs
add
insl
adc
pop
sub
jmp
pop
cs
outsl
aam
add
int3
xor
and
jae
test
aad
std
pop
or
ret
add
add
aad
repnz
push
add
in
mov
testb
ja
cld
add
aaa
or
fld1
lock
xchg
push
jmp
test
jmp
adc
out
sti
pushl
inc
sbb
push
mov
add
leave
fwait
in
add
sub
dec
test
push
jbe
cs
inc
add
add
mov
add
add
add
adc
add
xchg
push
aam
in
and
adc
dec
push
adc
std
std
lea
add
les
adcl
scas
cld
subb
std
add
xlat
adc
lret
lods
and
add
repz
addl
sbb
popf
mov
jmp
ss
addr16
add
fistpl
dec
jge
adc
pop
push
mov
nop
push
add
xchg
mov
xchg
add
aas
hlt
sub
xor
arpl
xlat
adc
inc
add
or
std
jae
mov
sbb
cld
adc
pop
leave
test
mov
test
in
add
add
shlb
scas
xlat
call
pop
jno
push
imul
outsb
out
adc
aas
mov
outsl
xchg
pop
sub
jecxz
jmp
mov
hlt
inc
out
out
add
xchg
sbb
push
xor
push
in
xlat
mov
fcmovb
mov
add
cmpsl
inc
add
push
or
filds
add
lods
xchg
pop
cmp
call
pop
dec
add
rclb
sub
pop
xchg
jb
sti
push
jb
pop
add
pop
jae
call
fldcw
call
cld
push
fnstenv
iret
xchg
dec
xchg
xchg
jbe
xchg
sub
icebp
add
add
or
ficoms
push
add
cld
jle
lret
jg
je
test
cld
adcl
mov
test
jno
sbb
add
sarb
shlb
and
leave
sar
adc
aam
or
xchg
rolb
les
clc
cmp
add
mov
ret
xor
add
add
std
incl
mov
inc
cld
add
stos
lods
add
lahf
add
add
mov
incl
mov
lahf
sub
cs
cmp
cmpsb
rolb
out
andb
in
imul
add
in
mov
xor
mov
add
xor
in
cmp
cltd
add
lock
add
je
jmp
cmc
inc
push
stos
je
out
fiaddl
add
push
mov
cld
jo
ret
ja
mov
add
adc
adc
jns
add
into
lds
push
shrl
pop
ljmp
hlt
loop
stc
ljmp
and
ret
xor
xor
es
cmpsl
sbb
add
xor
jp
mov
rcrb
xchg
jmp
inc
inc
ss
aam
inc
aad
subl
lods
mov
fwait
or
sbb
xor
es
push
mov
lock
fs
in
dec
pop
outsb
in
dec
out
or
sub
jg
in
inc
std
call
add
add
or
jg
add
push
test
out
std
call
sub
jp
int
inc
and
pop
lret
adc
test
subb
sbb
xlat
mul
idivb
cld
push
decl
jb
mov
in
out
imul
scas
inc
and
pop
repnz
insl
add
add
add
mov
add
enter
aam
jae
xchg
das
or
pop
clc
mov
inc
add
inc
lock
push
leave
test
cld
push
clc
push
mov
add
cmp
ret
aaa
roll
mov
adc
inc
add
jmp
repnz
jmp
clc
xchg
sub
dec
add
mov
dec
pop
test
sub
add
test
das
fisttpl
add
push
cmc
cli
mov
fstpt
ss
add
push
bound
add
jg
mov
xor
sbb
cli
aas
cs
enter
dec
adc
aaa
adc
push
mov
shll
jnp
lds
xor
sti
and
cltd
dec
or
pop
dec
add
add
add
iret
adc
lret
lods
and
icebp
inc
lods
and
clc
fmull
adc
pop
in
or
mov
fcomi
std
cmp
fiadds
xchg
sub
add
in
pop
mov
jns
xor
cmp
es
xlat
and
in
mov
mov
push
clc
push
mov
rolb
add
add
out
outsb
imull
inc
cs
mov
jbe
jl
sti
imul
xchg
mov
rolb
cmp
jle
fisttpl
push
push
pop
cmp
fucomip
jl
stos
loope
roll
inc
add
stos
mov
add
lret
xor
lret
cmc
out
stc
adc
test
or
call
jle
int3
dec
out
adc
xor
mov
mov
call
add
gs
cmp
lcall
sbb
leave
cld
insl
push
sub
loope
jae
add
sub
jmp
inc
std
decl
sar
xchg
stc
xlat
add
cmp
add
mov
mov
add
jg
test
mov
adc
cmp
add
mov
movsl
loope
xlat
cld
mov
cld
decl
ret
pop
or
mov
pop
pop
jle
jl
fdivrs
add
and
inc
xchg
sti
adc
pop
lock
in
add
jne
movsb
push
decl
mov
add
stos
cli
adcb
in
xlat
ret
inc
inc
add
imul
add
pop
mov
imul
divl
std
lcall
aas
cs
lds
add
jmp
add
in
cmp
sbb
out
or
xchg
xchg
push
adc
push
add
pop
cld
xor
or
mov
pop
std
jge
enter
add
push
or
push
cmc
dec
mov
lock
jns
or
das
pop
imul
in
cmpsb
add
jp
ljmp
pop
sub
mov
sbb
add
mov
js
sbb
xor
jne
daa
pop
xor
imulb
es
mov
dec
jnp
or
roll
add
jb
or
es
in
arpl
pop
inc
mov
lods
add
inc
cmp
inc
andl
cs
jecxz
xor
sub
jns
std
cmp
decb
mov
ljmp
cmpsl
push
pop
xorl
push
xor
cmp
ja
aad
rorl
add
add
add
in
cmpb
subl
or
repnz
insb
pop
pop
stos
and
push
jo
push
jb
les
and
insb
lock
sub
aas
jmp
daa
xor
lret
mov
add
inc
or
lea
xor
adc
icebp
aam
and
leave
mov
les
adc
leave
dec
lea
bound
dec
adc
mov
or
lds
jmp
and
enter
movsb
pop
xchg
leave
mov
les
loopne
jge
or
lds
pop
sbb
dec
lea
lods
push
push
adc
add
in
cmc
xor
xchg
ja
xchg
adcl
mov
fcoms
add
add
loopne
cmp
pop
add
mov
icebp
sub
jl
xor
or
sbb
lock
int3
cld
test
iret
jge
ja
rorl
out
cltd
fldl
cmp
sub
pop
std
incl
add
out
xchg
xor
adc
dec
or
lds
cmp
adc
push
xchg
nop
or
add
pop
and
call
xlat
push
xor
push
sub
rol
aam
sub
fmuls
mov
mov
mov
jmp
rcl
lock
cmp
ret
or
dec
xor
jl
push
das
test
cwtl
and
ja
fnsave
jbe
pop
ds
lock
inc
dec
in
inc
aaa
iret
js
add
add
loop
xor
sbb
call
lds
test
or
sbb
js
bound
push
jo
enter
inc
clc
bound
dec
mov
mov
cmp
stos
les
testb
pop
sub
sub
sub
inc
or
les
addl
loopne
pushf
cmc
andb
add
sub
cmp
inc
or
pop
jecxz
lods
add
cmc
adc
fdiv
out
les
sub
js
fnsave
sti
jne
adc
dec
idivb
xchg
sbb
in
inc
mov
inc
cld
ljmp
clc
in
sarl
int3
xorl
pop
inc
lret
cmp
add
mov
inc
cld
push
int3
orl
std
out
mov
aam
call
cmp
cld
call
mov
or
rol
inc
add
clc
jmp
ret
push
adc
add
xlat
add
das
fadds
add
add
mov
ficomps
int
dec
cmp
cmpsl
or
push
add
add
jmp
mov
roll
push
js
mov
pop
in
mov
cli
xchg
fdiv
mov
fprem1
mov
aad
mov
cs
inc
add
movsb
rolb
xor
int
or
out
aaa
or
insb
lds
and
mov
add
stc
test
add
mov
stos
add
push
cmp
jns
jmp
jp
add
sbb
adc
out
and
hlt
testb
sbb
cli
mov
sti
pop
ds
cmp
xchg
mov
cld
scas
lods
repnz
out
stos
aad
add
push
pop
das
push
adc
das
stos
les
fwait
lret
jecxz
ret
idivl
xor
ss
cmp
adc
lock
inc
pusha
xor
vmwrite
add
lock
movsb
cltd
outsb
jl
add
out
push
imull
decl
test
add
fadds
xchg
add
mov
sti
adc
ja
mov
loope
insb
movsl
add
popa
add
jb
imul
or
es
xchg
call
int3
cmp
add
inc
je
mov
or
js
or
fisttps
xor
outsl
jmp
test
imul
add
test
jge
lock
cmp
inc
les
xorl
addps
pop
sbb
or
test
add
jo
in
adcl
xchg
add
inc
lahf
mov
mov
aaa
iret
pusha
xchg
xor
add
stc
mov
cmp
cmc
dec
xor
test
inc
mov
je
xchg
lea
push
or
popl
add
clc
or
outsl
ljmp
out
loope
repz
jae
gs
clc
insb
sub
cmc
cmp
lea
xor
movsb
adc
sub
mov
xor
mov
test
add
add
insb
cs
mov
push
dec
sti
mov
adc
mov
mov
out
add
jnp
scas
loope
lods
xchg
sar
add
mov
dec
ss
mov
out
or
pop
cmpsl
mov
or
xor
add
add
mov
inc
out
cmp
mov
inc
imul
out
pop
stos
xor
or
mov
out
insl
or
dec
mov
sbb
jp
bnd
add
jo
mov
dec
dec
and
inc
add
add
mov
add
add
add
xchg
jb
or
loope
push
pop
arpl
leave
jmp
jns
mov
sub
inc
out
movsl
sbb
std
sub
mov
out
testl
out
mov
pop
pop
or
shl
sub
call
xchg
subl
mov
or
sub
add
decb
and
or
add
cmp
adc
in
jmp
and
dec
loop
test
xchg
push
jg
add
push
sub
sti
ret
mov
and
jae
jg
aam
xor
les
ljmp
insb
or
jo
xchg
mov
jns
or
add
lret
lret
jns
mov
add
xchg
mov
cs
add
sahf
add
cmp
clc
and
je
dec
jno
xchg
mov
push
mov
add
incl
jecxz
cld
sbb
mov
cld
jle
mov
mov
stos
mov
or
add
mov
mov
dec
and
cs
add
add
push
mov
mov
popl
adc
call
pop
sub
out
mov
mov
add
mov
xchg
fcmove
mov
fldt
mov
mov
or
jno
push
or
add
lea
or
push
mov
jno
scas
test
add
xchg
sbb
repnz
out
dec
popf
mov
test
mov
sub
aad
xor
int3
mov
scas
shr
cmpsl
mov
je
push
stos
push
fisttpl
xchg
xchg
jmp
test
cmp
xor
fstpl
aas
je
hlt
xor
mov
add
add
das
shrl
dec
mov
cmpsl
enter
mov
adc
mov
icebp
mov
cld
cltd
xor
cld
push
xchg
or
ljmp
in
xchg
mov
jb
push
pop
stos
sub
mov
cmpsb
dec
and
gs
jae
jl
push
sbb
scas
inc
call
shlb
sbb
jb
fisttpl
bound
lds
add
add
jge
je
mov
mov
gs
add
mov
push
int3
data16
aaa
dec
push
mov
pop
adc
pop
mov
push
popf
je
lcall
push
xor
xor
xchg
pop
pop
leave
add
pusha
push
je
xchg
idivl
push
mov
pop
dec
incl
add
jp
adc
xchg
cld
push
cmp
inc
mov
sti
xlat
or
cld
cli
mov
adc
ss
cmp
add
fidivrl
add
push
cmpsl
mov
add
psubsb
add
out
call
mov
sbb
arpl
pop
das
mov
push
mov
ret
add
in
mov
roll
data16
movsl
sahf
push
std
pop
lahf
test
cmpsl
int
lcall
call
test
add
das
sub
int3
outsb
orb
jno
sti
inc
inc
out
push
or
xchg
mov
inc
sub
sub
mov
push
dec
jge
xor
mov
sarb
or
dec
mov
jo
fs
jge
imul
ljmp
mov
dec
notb
xchg
xor
xchg
sbb
call
push
jb
ss
mov
test
cld
sbb
mov
xor
jae
in
push
cld
jmp
jae
push
adc
or
jmp
add
add
das
pop
mov
das
and
jbe
dec
cli
insl
add
hlt
stos
cld
push
lahf
inc
and
sub
jle
and
stos
cld
dec
mov
repnz
adc
dec
std
cltd
fnstsw
je
mov
cmp
mov
aaa
out
or
movsb
jo
incl
add
cmp
add
call
push
xor
mov
jo
inc
les
cld
add
add
jne
pop
mov
aaa
dec
push
pushl
add
imul
push
sarl
mov
sti
mov
mov
push
dec
sti
push
mov
hlt
mov
dec
sti
push
fildll
shrb
adc
out
or
add
add
imul
subb
repz
scas
push
call
mov
jle
sti
mov
mov
push
push
fmull
es
or
data16
and
out
pop
fsubr
rorl
je
jmp
push
lds
jno
add
dec
sbb
cmpsl
icebp
fcomps
push
std
jnp
mov
popa
adc
nop
add
add
add
cwtl
test
insb
test
aaa
cmp
mov
jmp
add
add
xor
out
mov
or
add
mov
xor
fimuls
fisttps
and
lea
xchg
or
add
cmp
cli
outsb
sub
mov
loopne
add
mov
mov
add
add
adcb
or
out
jnp,pn
jmp
add
pop
mov
loop
test
icebp
jp
subb
imul
cmpsb
inc
add
scas
outsl
jae
pop
lods
adc
inc
add
clc
ljmp
pop
call
push
lods
orb
bound
test
imulb
add
cs
jmp
inc
xchg
jmp
mov
cwtl
lods
pop
jnp
imul
outsl
add
inc
call
jb
jp
jne
mov
add
out
sahf
call
bound
push
mov
cli
cld
call
add
adc
fistps
jl
xchg
ja
cwtl
lcall
xchg
add
outsl
mov
xchg
cs
incl
xchg
push
mov
pop
add
add
push
cmovo
mov
add
xor
inc
addb
xchg
push
push
mov
movl
mov
btr
std
flds
sub
add
int3
hlt
adc
es
or
inc
inc
cs
add
lds
sarb
mov
sahf
push
subl
mov
jno
mov
ss
fadds
cmp
push
adc
fidivrs
cs
inc
xchg
test
das
int3
or
outsb
addr16
push
jle
cmp
and
imull
je
mov
add
out
inc
or
cltd
fdivl
push
push
dec
xor
sub
dec
mov
pop
lods
mov
add
add
roll
inc
out
in
sti
imul
ds
pop
xchg
mov
push
subl
mov
sti
xchg
sbb
add
add
xor
sub
add
in
notl
jl
stos
pop
sbb
adc
sarb
shll
add
ds
mov
popa
push
mov
test
sbb
cld
je
js
ljmp
cmp
insl
add
in
inc
add
scas
push
call
jns
cltd
adc
mov
add
sub
lods
xor
call
jmp
shl
dec
mov
out
fcomps
sbb
add
sub
cld
xchg
lret
adc
mov
dec
add
mov
add
dec
call
mov
repnz
xchg
pop
adc
dec
incl
add
push
adc
adc
cmp
std
incl
je
mov
push
incl
sti
jo
outsl
adc
repnz
inc
lret
scas
jge
clc
push
lahf
add
dec
lea
pusha
dec
push
enter
mov
adc
cs
add
imul
inc
sbb
xor
lds
call
add
call
roll
add
push
add
mov
or
rorl
cs
mov
mov
or
add
sbb
pop
xchg
fs
aaa
add
lcall
fcmovnb
jns
sub
clc
inc
lods
pushf
out
sbb
cmp
shll
shlb
dec
scas
adc
lcall
ds
xor
out
pop
mov
cmp
out
dec
lods
dec
jmp
jne
push
jno
cmpl
sbb
push
daa
add
inc
fisttps
outsb
dec
ss
ja
add
in
mov
inc
jne,pn
mov
sub
adc
add
notl
and
adc
adc
pushl
lods
test
cld
push
push
mov
cmp
fdiv
call
leave
movsb
shlb
push
jb
movsb
cmp
add
das
xor
incl
dec
call
mov
ss
test
je
rclb
call
in
call
mov
and
add
add
cld
lahf
mov
jb
xchg
inc
cld
cmp
sbb
add
sub
out
cld
sub
repnz
inc
cmpsb
cld
add
mov
dec
push
push
push
jno
nop
into
jg
push
out
jnp
sti
std
xchg
sub
push
outsl
dec
cmp
pop
mov
pop
icebp
imul
cld
dec
xchg
cmovo
cwtl
and
add
cmp
rolb
dec
jo
cmp
fcoms
push
cld
jle
in
out
sub
test
and
insb
xchg
std
fcompl
ljmp
add
push
push
dec
mov
stos
aad
xor
jae
and
call
bound
dec
in
lahf
add
dec
push
dec
add
add
test
jnp
stos
adc
mov
and
inc
cs
mov
push
std
cmp
add
sub
cld
adcb
add
push
fdivrs
add
mov
cmpsl
cmp
inc
shr
inc
call
mov
sub
lods
rclb
out
push
xchg
xor
push
mov
push
add
sub
js
add
in
mov
adc
shrb
jns
adc
xor
sub
stos
push
cli
xor
out
movsb
fld
addb
out
movntq
xchg
imul
cs
cmp
stc
jb
mov
sbb
stos
sbb
pop
dec
xchg
movsb
mov
inc
je
inc
cs
loopne
in
stos
ljmp
add
insl
xor
pop
movsb
dec
je
lods
dec
adc
push
xchg
jge
lea
inc
addl
pop
xor
pushl
fdivrl
or
sub
icebp
mov
xor
outsl
adc
outsb
test
outsb
movsl
dec
push
repz
jl
movsb
aad
in
cs
mulb
enter
add
sub
jmp
jae
mov
cmp
sub
mov
sub
sti
mov
dec
dec
jmp
test
jne
pop
rolb
int3
loop
test
push
test
mov
test
push
ljmp
shr
incl
incb
lods
lds
aas
sti
ret
cmp
and
out
mov
add
dec
sti
push
shrl
xchg
shrl
ret
cli
je
mov
push
cwtl
dec
or
fisubs
mov
inc
cs
cs
and
cmp
movsl
xchg
push
std
ficomps
xchg
outsl
sub
insb
pushf
add
dec
call
rorl
jne
xor
jae
fwait
jnp
inc
add
add
sbb
xor
adc
or
fdivs
add
cld
jmp
push
sbb
and
mov
les
sbb
adc
lcall
bt
das
xchg
jns
push
fidivrl
xor
add
add
add
cmp
jp
aas
out
repnz
jno
add
inc
cs
daa
add
add
imul
fwait
jl
out
push
stos
scas
in
fnclex
add
je
mov
cs
dec
push
adc
sub
in
sti
out
add
sub
xchg
addr16
mov
out
jg
ret
sti
orl
arpl
push
mov
inc
stos
ret
jp
xchg
push
cmpsb
mov
ljmp
sub
out
xor
add
cli
add
add
xor
frstor
add
testl
fimull
mov
std
xchg
mov
mov
cmpsb
jb
rcrb
sub
adcl
add
fs
lcall
sub
or
xchg
int3
mov
mov
stos
inc
add
or
mov
push
xor
push
mov
mov
or
int3
stc
pushl
pop
clc
call
data16
test
inc
out
loop
mov
mov
gs
mov
dec
test
jae
jg
add
cli
xchg
mov
push
lea
add
pop
cmp
pushl
xor
lcall
test
sti
cmp
pop
add
jge
mov
js
cs
outsb
sbb
mov
and
mov
je
cld
xchg
fimull
fisubrs
or
mov
or
xchg
adc
test
mov
push
jge
or
pop
jg
sub
lea
add
add
popa
push
inc
and
sbbb
sub
test
mov
add
push
int3
sbb
add
imul
cld
incl
sbb
sti
cmp
fld
xor
and
sub
fcomip
adc
ljmp
repz
push
or
stc
lods
icebp
es
sarb
ljmp
fbld
fisttpl
pushf
adc
xor
inc
out
jns
cmc
mov
or
fsubrp
adc
in
add
mov
insb
int
or
xchg
xor
fcos
and
call
mov
cmp
cmp
and
bound
inc
or
cmpsb
scas
jb
push
aad
jl
add
jg,pt
jmp
inc
or
push
orb
mov
push
mov
add
sbb
mov
fwait
xorb
ret
shlb
call
sub
xor
ja
add
jmp
lcall
cmc
mov
pop
test
xchg
push
imul
fdivl
fdivl
add
mov
add
jns
push
mov
ja
shrb
lar
mov
xlat
icebp
mov
push
mov
add
mov
xor
mov
inc
cli
jne
lea
dec
test
or
test
sub
and
or
mov
cld
mov
imul
outsb
xchg
xorb
inc
ldmxcsr
scas
das
loope,pt
mov
in
hlt
imul
imull
test
or
push
xchg
dec
mov
and
jne
mov
ljmp
test
rorl
lea
mov
add
cs
cld
stc
fcomps
ss
sub
jmp
shl
insl
sarb
stos
add
into
std
sbb
adc
leave
adc
lea
pop
inc
sbb
rorb
jno
inc
add
add
mov
sub
out
mov
xor
sub
mov
pop
clc
testb
lds
add
das
inc
add
sbb
cmpsb
sbb
add
in
sub
aaa
add
int
dec
out
es
cwtl
shl
aas
inc
out
sbb
fadds
push
outsb
repz
cltd
cmp
cs
mov
das
jmp
add
or
jmp
out
aas
add
xlat
aad
cmp
ss
pop
xchg
fwait
xor
outsl
mov
imul
add
mov
loopne
test
xor
hlt
leave
out
aas
jmp
cmp
push
add
cld
out
mov
or
out
sub
test
sbb
fwait
out
aad
cld
pop
testb
add
add
add
dec
push
add
jbe
mov
ja
test
cmc
sbb
cmp
lea
add
pusha
shl
xor
pop
push
xchg
rcr
jno
aam
bound
and
add
add
lcall
fwait
cmp
sbb
test
pusha
sti
pushl
inc
add
pusha
int3
cli
adc
fidivrs
jo
adc
jo
cmp
std
call
and
lcall
add
cs
int3
jmp
test
mov
mov
stc
xchg
sbb
add
inc
jo
push
adc
fnstcw
jmp
arpl
mov
jecxz
add
jecxz
std
and
stos
sahf
movsl
fwait
xor
aaa
subl
xor
push
add
fisubrs
jmp
cs
jno
dec
add
xor
sub
pop
daa
add
mov
popf
or
loopne
fcoms
popf
pushf
or
les
add
les
xor
mov
aad
push
mov
xchg
out
subb
pushf
lret
sub
or
pushf
roll
jno
mov
xchg
jnp
addr16
cs
inc
add
add
jmp
add
xchg
fnsave
xchg
repz
inc
out
mov
call
inc
aad
jae
xchg
dec
adc
sub
fs
ja
ss
or
mov
mov
mov
cld
push
arpl
call
scas
push
jae
mov
movsl
sti
add
add
xor
cli
mov
mov
sub
std
hlt
test
jmp
inc
add
lahf
mov
add
insl
insl
adc
cmpsl
adc
sub
mov
add
jge
and
add
out
imul
sti
je
mov
ss
cld
add
add
add
add
inc
cld
pop
pop
push
xchg
cld
push
jl
dec
push
mov
or
xchg
imul
xlat
incl
add
cld
push
push
clc
push
popf
add
inc
scas
or
movl
add
adc
cs
fiadds
xchg
mov
mov
push
mov
mov
push
push
cld
pop
mov
call
add
add
cmpsl
add
xor
inc
push
sbb
lret
xchg
in
mov
and
push
movsb
dec
or
cmpsb
cwtl
dec
cmp
mov
imul
movsl
xor
push
cld
cld
and
cmp
sarl
out
mov
add
sti
sbb
add
add
push
mov
add
es
mov
aas
inc
inc
out
insl
add
sub
loop
in
mov
xchg
xchg
xchg
xchg
mov
and
sbb
out
and
add
xchg
dec
imul
test
mov
out
pop
aas
ss
mov
ja
mov
mov
fists
mov
or
or
mov
call
sub
xchg
cld
aas
mov
cld
sub
or
cltd
sub
mov
out
xchg
cld
push
xchg
shrl
in
sub
push
sbb
push
test
push
xchg
imul
and
aas
add
push
jmp
sbb
or
push
add
iret
inc
in
sub
pushf
inc
jmp
imul
fisubrs
test
xor
in
decl
je
out
push
orb
rcr
cmp
pop
loop
adc
push
mov
push
mov
mov
ljmp
mov
mov
add
mov
test
in
add
push
sub
cs
mov
inc
add
xlat
add
jg
sti
call
bsr
and
add
or
dec
in
add
push
cs
mov
sub
xchg
icebp
fisubrs
cltd
mov
movsb
jo
jns
sub
das
cltd
add
pop
stos
mov
cwtl
add
add
xor
out
inc
add
mov
xchg
mov
in
insl
cs
es
in
repz
fwait
jge
adc
inc
add
adc
cs
xor
fiaddl
add
test
shlb
sub
scas
add
fsubrs
add
outsb
xchg
cmp
add
add
xor
pusha
cmp
jecxz
xor
add
xchg
adc
mov
jmp
orb
xchg
jecxz
xor
lahf
mov
cs
add
add
leave
repnz
cmpsl
rol
inc
mov
out
arpl
out
imul
out
orl
jnp,pn
add
add
push
insl
add
add
mov
roll
cmpsl
mov
jg
inc
jmp
cs
jmp
xchg
mov
push
sub
sub
mov
movb
inc
add
lret
pop
add
insb
movsl
or
mov
pop
xchg
xor
call
inc
std
dec
je
loope
ljmp
pop
fnstsw
add
xchg
gs
aaa
in
mov
sub
add
dec
scas
add
add
add
pop
xchg
out
popf
mov
jb
cld
xchg
sar
mov
andl
sbb
call
cmp
hlt
add
add
add
add
or
pop
jmp
movb
or
jge
sbb
jmp
push
ret
movsb
pop
add
add
inc
add
insl
xor
sti
lea
sbb
call
out
stos
outsb
sti
lea
or
sub
cmp
incl
andb
add
and
adc
sub
ja
pop
add
jb
add
pop
in
sbb
dec
dec
jg
push
popf
cwtl
jle
cltd
add
sub
pop
in
lods
xchg
mov
add
stos
adc
add
faddp
or
sbb
add
push
adc
cwtl
adc
and
and
and
sub
and
xchg
add
icebp
and
push
sub
cltd
add
jp
mov
or
pushf
jae
cwtl
add
pop
cmpsl
imul
xor
sub
xor
sub
inc
mov
int3
mov
add
cmc
jecxz
jl
jl
out
cwtl
xchg
lcall
sub
sub
mov
mov
out
movsl
orl
imul
and
and
add
add
mov
jnp
inc
xor
and
cmpsb
xor
mov
xchg
xor
and
xchg
mov
outsb
sahf
jle
fucom
cmpb
add
sub
call
jb
cwtl
pop
cltd
movsl
mov
call
je
push
jb
cmp
and
cld
mov
mov
jle
jne
js
cmc
aam
jae
repnz
into
rcll
cwtl
sub
sub
call
sti
xchg
xchg
pop
xor
xor
add
into
or
push
add
add
add
mov
and
mov
dec
jge
sti
call
pop
aas
or
pusha
aam
adc
and
add
jg
dec
dec
jns
push
int3
cli
adc
add
or
mov
jmp
or
out
call
shlb
cld
push
in
out
add
add
sti
mov
scas
mov
cld
les
adc
or
into
cli
jne
mov
inc
add
test
stc
leave
add
pop
add
adcl
dec
jg
xor
push
add
xchg
add
in
mov
push
call
cltd
jns
xchg
or
lcall
insb
add
add
xchg
aas
loopne
adcl
rcll
jle
ss
das
jae
xor
cwtd
add
sbb
mov
inc
or
inc
add
das
push
adc
push
add
and
fadd
push
jmp
scas
add
add
lea
lods
rcll
adc
jp,pn
sub
ljmp
cmp
mov
sub
cld
daa
sub
mov
imul
sti
js
popl
cmc
xchg
jmp
add
pusha
lock
cmpsb
cld
lods
pop
out
jnp,pn
cld
dec
dec
int
dec
je
cld
lock
jo
ss
inc
mov
clc
mov
cmp
call
inc
cwtl
cld
aad
add
ja
add
fiadds
pusha
cmp
push
out
jae
in
jb
insl
enter
incl
sahf
enter
xorl
or
adc
inc
jae
mov
xchg
cld
jl
popf
dec
add
adc
add
in
call
sub
mov
or
daa
jns
inc
push
inc
add
lock
adc
add
out
in
jbe
jb
scas
xor
add
or
lahf
push
cmc
js
mov
ret
push
mov
dec
push
xchg
rorl
xchg
xlat
add
call
dec
insb
ret
cld
xor
mov
pop
xor
mov
rolb
lods
mov
add
push
push
add
cmpl
fiaddl
push
js
cmp
xlat
add
mov
add
lds
add
mov
sbb
inc
std
jno
sub
in
popf
add
insl
test
cltd
xor
jp
cltd
push
sub
arpl
add
sub
inc
or
shrl
cltd
cwtl
pop
add
add
cltd
movl
imulb
jno
jns
aad
xchg
cld
imul
add
jbe
xor
sub
xor
imul
fwait
mov
mov
popa
aas
and
aam
and
cli
inc
or
sbb
mov
jno
push
clc
pop
pushf
pop
xlat
out
pop
rol
add
add
sti
out
scas
add
cld
leave
sub
imul
into
rol
sbb
xor
inc
roll
ja,pn
jg
or
aad
xchg
lds
push
imul
pushf
push
sub
adc
shrb
call
push
sbb
inc
aad
cld
jmp
movsb
cmp
add
push
stos
sub
push
mov
add
xor
call
mov
mov
mov
jb
cld
xor
scas
mov
mov
movsb
mov
pop
clc
testl
add
and
sub
faddl
jmp
je
mov
rorb
int3
je
std
fsubrl
testb
add
pushl
shrb
int
mov
js
push
lea
std
sti
decl
pop
in
add
std
rcrb
pop
pop
ds
jmp
inc
jae
addr16
xlat
cld
jmp
pop
jbe
cmp
or
arpl
aaa
xor
repnz
jno
mov
sti
jb
mov
add
and
mov
sti
dec
xchg
pop
ja
incl
push
xchg
dec
dec
jbe
dec
sbb
mov
cmp
out
jae
push
cmp
and
and
scas
jb
pusha
paddb
push
ss
mov
xchg
clc
dec
push
test
jmp
stos
cld
incl
loope
orl
or
add
add
sub
mov
rol
das
add
jp
test
xor
daa
lcall
push
xor
mov
decb
add
jns
imul
cs
inc
jg
xlat
mov
daa
insb
add
sbb
call
mov
sar
cmp
cld
das
sarl
jl
ret
add
add
or
fistps
adc
push
cmp
repz
orb
jae
scas
int3
inc
test
xcrypt-ctr
cmpsl
cwtl
xchg
add
ljmp
and
dec
cmpsb
call
mov
repnz
pop
cmp
ds
and
jae
gs
push
inc
cmp
je
in
push
add
movl
add
xchg
lds
insb
aam
pop
jb
or
bound
and
cmp
dec
pop
cli
enter
push
lds
gs
cmc
adc
lds
add
cld
mov
jne
orb
in
xchg
add
push
sbb
mov
movl
jnp
add
add
divb
xor
aas
add
in
subb
add
and
xorl
or
inc
add
out
mov
lea
sbb
out
sub
call
jno
movsl
shl
dec
adc
dec
ret
add
jo
ja,pn
cld
and
sbb
ljmp
jmp
add
jo
or
xchg
lods
add
icebp
bound
add
add
das
movsl
ffree
xor
mov
inc
add
bound
rolb
cld
ret
outsb
int3
push
inc
jle
cmp
jo
mov
gs
adc
push
mov
outsb
imul
sub
fdivr
pop
sub
je
std
cmp
loope
add
add
inc
ljmp
jnp
insb
shll
call
xor
inc
or
mov
loope
cmp
add
adc
cmpsl
add
out
cs
test
shll
fiadds
sub
mov
sbb
adc
je
xchg
out
lock
insb
fwait
mov
loop
mov
ljmp
jl
loop
mov
adc
sar
loope
jmp
inc
jae
push
shrl
mov
mov
jge
orl
movhps
jge
in
inc
sar
loop
jb
and
mov
ljmp
add
sub
pop
push
push
or
stos
and
scas
xchg
xor
dec
sbb
jp
ret
sub
add
xlat
mov
mov
cmp
xchg
scas
dec
xchg
subb
stc
push
inc
movl
inc
clc
dec
pop
xchg
xchg
daa
inc
ret
push
mov
sub
add
lock
xor
push
mov
add
add
mov
mov
jno
faddl
sti
xor
push
adc
pop
xor
pop
ja
mov
cld
test
lods
std
pop
fidivrs
and
or
je
or
xor
xchg
push
push
pop
daa
add
push
pop
inc
hlt
push
movsl
sldt
fadd
divps
testb
mov
jge
add
add
xchg
cltd
mov
ffreep
cmp
xor
pop
sub
mov
addr16
movsl
add
push
cwtl
adc
data16
push
add
inc
decl
jmp
mov
pop
inc
sar
pop
sub
insl
imul
adc
out
mov
cmp
mov
add
sub
xchg
mov
inc
cli
sbb
pop
ret
leave
sbb
push
xor
mov
sub
sub
mov
jle
sbb
rorb
pop
add
mov
sub
mov
sub
out
and
xor
dec
ret
out
dec
or
push
pop
push
pop
sub
push
sub
add
test
add
pusha
xor
sub
ds
mov
jmp
jecxz
adc
sar
lea
shl
call
std
aam
adc
push
inc
jae
lds
test
in
inc
jmp
sub
xor
inc
and
daa
push
jbe
adc
jecxz
sbb
fisttpl
sub
add
sub
push
fidivrs
mov
sbb
call
dec
test
aaa
dec
in
fxtract
sti
test
outsb
add
xlat
call
add
xlat
addr16
jecxz
push
lea
fmuls
or
push
mov
add
mov
push
sti
jne
hlt
rolb
jecxz
push
lea
add
ret
push
pop
lret
jg
jnp
mov
push
sti
jne
hlt
shr
stos
jle
mov
add
ret
mov
jno
pop
imul
hlt
adc
cld
test
dec
out
push
mov
out
or
xor
outsb
addr16
cmp
add
mov
or
sub
jmp
cmp
xchg
or
daa
add
cmc
out
dec
lods
sbb
add
add
jae
imul
dec
or
lcall
push
inc
add
sti
push
fldcw
push
jns
mov
lock
jb
cld
sahf
insl
or
jmp
jp
xor
add
mov
clc
cmp
push
ljmp
jae
loope
cmp
xchg
jp
inc
adc
scas
cmc
out
add
add
or
lock
xor
in
add
clc
xor
or
and
jb
xchg
push
xor
fwait
or
push
lock
xor
insl
add
or
rorb
les
sub
add
out
mov
jne
stc
cmpsb
out
or
or
cld
cli
xchg
push
pop
fsubr
jb
xchg
and
rcl
sar
call
std
adc
jns
inc
jmp
inc
push
pusha
fsubr
jb
inc
sbb
inc
push
data16
rclb
lods
jb
jmp
xchg
jb
jmp
add
add
js
push
scas
mov
add
jns
lock
sub
call
mov
cmp
out
jae
mov
jb
jg
add
sahf
cld
jbe
aaa
pop
hlt
dec
add
repz
push
call
jle
aaa
ret
dec
pop
dec
lea
dec
push
aaa
divl
push
add
adc
cld
add
stc
xchg
xor
jne
xchg
add
add
or
aaa
out
fstpl
add
dec
idiv
inc
sub
pop
pushf
mov
mov
or
add
das
push
push
movsl
add
add
fnsave
andl
sysexit
test
dec
fimuls
xchg
mov
test
pop
xor
aam
or
xchg
xchg
add
add
fstpt
fnstcw
add
addr16
cld
sub
add
les
mov
dec
shll
iret
mov
in
or
xchg
lret
inc
mov
call
test
aad
stc
xor
pop
enter
outsl
dec
test
jl,pn
lock
test
mov
or
jae
shr
addb
std
jbe
cld
popa
inc
add
add
out
imul
jbe
int
mov
shlb
scas
mov
jns,pn
or
add
adc
addb
aas
vorpd
fsubrs
out
mov
imul
jge
outsl
ds
lcall
push
imul
xor
gs
icebp
or
pop
jae
sub
outsl
cld
jae
add
in
mov
jl
imul
icebp
or
inc
pop
call
arpl
repnz
xorl
push
jmp
je
add
jb
jns
ret
push
cmc
scas
lods
cmpps
pop
mov
pop
ljmp
xor
outsl
xor
push
cmp
adc
or
xor
add
add
xchg
add
lret
push
or
pop
ja
and
fisubl
rol
mov
in
mov
inc
or
cmp
rolb
add
mov
jnp
cld
xchg
hlt
jo
add
je
cmc
jb
out
ficomps
pop
jns
test
pop
xor
or
idiv
ljmp
clc
cli
jbe
add
iret
jp
or
test
pop
or
fsubrs
mov
jg
das
lods
push
jmp
inc
popf
add
push
push
out
sti
xchg
inc
pop
add
sub
fldt
sti
dec
outsb
jo
lock
pop
repnz
and
and
push
cmpl
jno
addb
std
jp
pop
call
sahf
jo
movsl
xchg
jae
arpl
fnstcw
mov
aaa
in
jae
loop
or
add
inc
xor
jle
add
sti
out
jecxz
jno
sub
push
jns
out
outsb
js
pop
xchg
insl
sbb
jp
in
push
add
add
or
jae
mov
ljmp
add
mov
jno
jl
add
inc
mov
fidivrl
push
loop
xor
in
clc
sbb
or
icebp
shlb
out
xor
sbb
scas
and
jle
pop
push
jb
imul
dec
incl
xor
add
push
icebp
sub
add
fildll
imul
inc
add
roll
add
fildll
jb
jge
pushf
movsb
fnstenv
adcl
cmc
mov
adc
pop
testl
pop
ss
add
jb
jns
loope
ret
pop
bound
jns
int
ret
sbb
insl
js
xchg
leave
jg
jmp
shlb
add
add
jno
dec
inc
clc
call
sbb
or
test
xchg
decl
cld
cmc
inc
imul
or
add
lahf
xchg
in
or
stos
add
push
push
or
aam
or
inc
adc
xchg
jle
and
inc
cld
push
clc
xchg
in
ret
call
jl
cmp
fistpl
add
cmpsl
std
jb
push
mov
sub
add
add
in
pop
sbb
push
add
std
pop
push
addr16
test
out
jmp
and
cld
xor
add
or
in
std
imul
jo
jecxz
andl
hlt
test
inc
push
out
or
stos
pop
cmc
or
test
ja
sbb
flds
add
stc
cmp
dec
jnp
mov
pop
pop
pop
aas
xchg
sbb
mov
inc
lret
call
ljmp
aas
cli
push
scas
pop
out
leave
push
call
clc
arpl
sbb
sub
add
in
ret
mov
mov
repz
and
inc
xor
add
add
test
push
in
dec
mov
add
rorb
xor
jmp
xor
sub
shll
test
incb
add
imul
add
call
cmc
test
idiv
orb
notb
aad
call
inc
hlt
orl
add
fdivl
jb
lods
mov
lcall
pop
std
inc
add
add
pop
rclb
xorb
hlt
mov
in
mov
cld
push
cmc
imul
sarb
add
arpl
in
sub
repnz
fdivs
pop
mov
std
out
pop
fnstenv
ss
push
lock
add
push
mov
xor
call
push
mov
mov
push
xchg
pop
aad
inc
loope
cld
addb
add
clc
imul
jge
je
jg
add
add
rclb
jo
sub
push
add
or
mov
push
call
test
pop
pop
push
ret
je
data16
jmp
or
push
das
lds
add
pop
add
adc
inc
cs
loop
js
imul
inc
sar
fwait
cld
mov
add
call
aas
verw
push
jb
adc
je
and
add
cs
push
cld
mov
push
test
inc
iret
push
inc
cs
repnz
add
lods
clc
jmp
dec
call
push
inc
push
imul
push
clc
subb
sar
rol
es
add
lods
outsb
sbb
inc
out
hlt
xchg
mov
push
aas
test
pop
sbb
adc
les
out
jnp
push
jbe
push
ret
push
outsb
add
hlt
mov
aas
shl
in
outsl
rorb
xchg
and
mov
pop
rorl
bound
sar
mov
add
out
stos
aas
lcall
iret
jae
dec
push
lret
xor
jb
or
out
in
cld
gs
out
sbb
xor
in
arpl
jbe
out
sbb
push
cmp
in
arpl
lea
push
jmp
jo
push
jb
pop
out
jne
fs
in
mov
add
jb
insb
notb
jp
inc
repz
inc
je
mov
lods
dec
hlt
mov
or
inc
jmp
xchg
pop
adc
add
add
pop
and
out
add
push
and
push
or
out
out
sti
cli
push
inc
adc
subl
ret
orl
cld
mov
add
or
dec
xchg
inc
xlat
sub
mov
in
add
ds
fnstcw
decl
jbe
sbb
add
sub
add
adc
jb
fdivs
out
xor
add
ret
xlat
adc
stos
inc
dec
hlt
dec
cmpsl
pushf
sbb
sub
adc
xor
push
mov
xor
add
add
out
cmp
mov
cmp
push
xor
mov
pop
add
out
out
mov
xor
pop
add
push
push
pop
add
inc
test
sub
inc
push
icebp
cmc
ret
push
mov
bound
lods
adc
out
pop
add
or
in
and
adc
movsb
cmp
cmpsl
add
les
rolb
add
lock
pop
shlb
std
or
pop
inc
scas
enter
jbe
popa
out
gs
in
lods
jmp
add
jae
js
add
add
push
call
fstps
ljmp
popa
sti
sti
pop
popa
shl
cmp
out
xchg
and
lock
daa
les
sbb
roll
push
icebp
sbb
add
pop
popa
inc
adc
xstore-rng
cmpsl
add
arpl
adc
mov
and
mov
insl
pusha
mov
mov
sti
sub
pop
cld
add
mov
pop
mov
mov
jg
add
inc
jmp
pop
pop
adc
push
inc
pop
mov
cmp
mov
jno
sar
jmp
add
loopne
sarb
pop
push
jbe
movsb
adc
xor
jmp
shll
or
sbb
push
aas
add
fimull
insl
out
add
push
movsl
push
xchg
out
enter
test
push
add
cs
out
push
lahf
and
pop
dec
sti
rorl
xchg
add
or
movsb
adc
mov
pop
pop
cmp
mov
push
add
add
xor
outsl
sub
incl
add
aaa
dec
int3
sti
inc
aas
hlt
add
sbb
mov
xor
add
outsb
add
sbb
add
and
cmp
jecxz
pop
push
imul
inc
push
and
pop
ja
cld
jmp
loope
addb
push
mov
test
add
add
lret
mov
adc
outsb
arpl
icebp
and
sbb
loopne
jnp
outsb
arpl
mov
arpl
push
xchg
cs
sub
std
je
inc
xor
mov
add
cs
in
out
cmp
push
jmp
jecxz
call
push
mov
in
pop
mov
cld
push
pop
out
jne
mov
inc
xor
add
add
pop
sbb
add
pop
pushf
sub
add
jns
jmp
js
sbb
add
mov
fscale
pop
push
pusha
add
nopl
cmp
mov
mulb
pop
cmp
fcomi
notb
add
or
fdivs
jmp
jmp
sub
out
add
add
pop
lcall
in
out
jne
cld
adc
or
mov
shl
inc
pop
inc
xchg
xchg
pop
adc
sbb
fs
cwtl
mov
push
push
pop
out
dec
rcrl
hlt
call
jb
les
sub
call
add
add
add
mov
orb
pop
inc
push
sahf
mov
inc
fadds
jno
and
add
cmp
add
jl
add
loopne
add
pop
mov
push
fdiv
push
push
fs
dec
xor
push
xchg
ljmp
push
lds
jp
call
push
mov
addr16
ds
out
jno
incl
add
jl
xor
sbb
jo
mov
clc
add
incb
nop
daa
cmp
push
add
mov
cs
mov
test
push
pusha
dec
push
popa
idivl
cs
pop
bts
aad
stos
stos
insb
dec
jno
sbb
out
push
mov
in
nopl
ljmp
int
mov
add
cmp
aam
mov
movsb
addr16
pushl
pop
mov
add
movsl
movsb
pop
mov
pop
pop
dec
ss
mov
push
dec
rcrb
sbb
mov
jns
vucomiss
iret
cld
shrl
ret
mov
insb
imul
in
xor
outsl
xchg
pop
fcmovne
ds
in
dec
imul
jb
movsl
lret
dec
mov
add
scas
insb
testb
xorl
out
mov
icebp
jmp
mov
lcall
adc
cmpsb
add
or
pop
pop
ss
xor
xor
add
mov
sub
pushl
out
orb
mov
sbbl
movsb
mov
add
mov
sbb
add
insb
ljmp
mov
sbb
push
insb
jecxz
adc
insb
add
add
mov
leave
mov
sub
mov
xchg
adc
mov
cmp
cld
fmull
out
aas
jmp
hlt
push
add
mulb
je
add
bound
add
add
add
cmp
test
aaa
fldenv
or
leave
adc
test
pop
xchg
mov
mov
cld
inc
sbb
ret
mov
shll
mov
xor
cli
jne
pop
xor
sti
xchg
mov
push
jg
jns
jbe
push
and
jno
jo
and
inc
mov
add
add
arpl
inc
pop
add
ds
push
xchg
jg
js
test
add
mov
push
rclb
jne
dec
rorl
inc
gs
xlat
inc
push
xchg
pop
test
and
add
inc
pop
fmull
pop
adc
mov
mov
pop
jg
imul
hlt
mov
aad
mov
fistl
add
add
in
ja
add
sub
incb
roll
add
subb
aam
lods
inc
add
mov
fdivs
movb
pop
cli
aad
mov
adc
in
pop
push
push
scas
aas
call
xor
mov
data16
fsub
sub
xchg
push
mov
and
add
subb
add
add
arpl
add
cs
sbb
fimull
aad
add
scas
inc
out
add
jle
add
inc
xchg
add
push
mov
sbb
out
daa
jg
je
or
out
gs
in
xchg
stos
jmp
lods
ds
jmp
cmp
fstps
add
pop
jbe
cld
add
add
lock
popa
mov
pop
addb
in
lods
cmp
call
scas
cmp
pop
mov
ds
sahf
xchg
cwtl
mov
sti
jmp
and
xorb
pop
push
jb
or
and
lea
fimuls
jg
add
jp
add
cmp
das
xchg
xor
add
add
ss
push
push
ljmp
filds
adc
or
add
cli
sub
sbb
jno
test
jno
mov
cltd
add
adc
mov
ret
stos
sub
lret
add
mov
jno
out
cli
call
cltd
add
add
add
les
in
mov
dec
push
pop
push
cld
or
inc
ja
fdivl
jb
lahf
imul
and
jae
mov
dec
xor
faddl
call
es
pop
mov
cld
mov
jns
pop
insb
pop
add
jl
push
mov
pop
mov
push
scas
mov
mov
add
shll
sarl
test
jecxz
pop
push
inc
push
cld
inc
fildl
add
insb
pop
mov
int
mov
sbb
rcll
cmc
hlt
test
push
sbbb
addl
in
sub
sub
sub
rcll
out
jle
int3
jmp
jmp
inc
test
mov
xor
cmp
add
mov
iret
dec
add
mov
test
inc
mov
ret
mov
rcrb
cmp
lods
push
pop
push
sub
scas
sar
loopne
int
jno
push
add
lods
sbb
push
cld
bound
clc
push
loopne
mov
sub
jg
icebp
sub
inc
out
stos
jle
xor
jmp
add
add
sbb
cmp
xchg
cmpsl
out
push
arpl
testl
mov
int3
xor
mov
mov
jne
fsts
jns
push
jns
jo
jb
lods
aad
jmp
cmc
pop
pop
add
decl
adc
cld
add
ret
inc
aas
jnp
or
add
cmp
push
mov
xchg
dec
cmpl
je
insb
push
add
test
jno
cmp
out
ljmp
in
mov
pop
scas
sahf
cld
push
push
ficoml
jb
cld
lds
mov
push
push
ret
xchg
add
cmp
xor
mov
or
mov
fisubrl
xchg
test
xor
jne
dec
mov
mov
pop
mov
add
jne
scas
clc
inc
push
mov
scas
pop
xlat
ljmp
fxch
sbb
mov
jb
add
pop
mov
push
pop
xchg
jns
data16
fmull
rcl
mov
xchg
ljmp
push
jmp
push
jae
sub
or
dec
test
gs
call
lods
add
add
add
popa
push
adc
clc
ret
imul
inc
sbb
fisttps
stos
pop
dec
dec
cmp
push
cmpsb
les
in
out
in
clc
out
xor
add
add
dec
out
jl
cmc
into
xor
iret
and
out
insb
fs
pop
inc
es
cmpsb
jecxz
xor
outsl
mov
add
add
mov
cld
xchg
jp
add
sub
cli
negl
and
jp
add
pusha
jmp
dec
mov
jle
pop
add
lcall
cmpsb
pop
dec
cld
fmull
out
aas
jmp
test
jmp
addb
rcrl
call
sub
test
pushf
cmpsb
pop
mov
jmp
movsb
mov
jge
dec
cld
bound
call
sub
add
sbb
xadd
test
mov
and
jb
sti
xor
lret
inc
in
mov
add
loop
xor
inc
notl
push
call
mov
daa
decl
add
add
push
mov
add
call
jle
lock
decl
sarl
shrb
outsl
or
lods
cmpsl
shufps
sarb
sbb
loopne
cmp
or
push
incl
test
dec
sti
inc
cs
incb
dec
or
pop
push
jb
adcl
bound
add
pop
adc
stc
xchg
cmp
sub
or
jo
inc
cs
mov
pop
jge
lods
inc
dec
ljmp
add
das
repnz
movsl
jae
cmp
clc
pusha
add
add
ljmp
addr16
shl
inc
jb
int
or
or
cld
cmp
insb
xor
out
add
add
aam
jl
repz
xor
jmp
out
out
lods
aas
scas
mov
inc
notb
inc
pop
popf
push
daa
les
ret
pop
scas
mov
ds
out
sub
mov
add
jecxz
add
mov
push
jl
imul
mov
out
adc
xchg
dec
out
insb
dec
ss
add
add
ljmp
fiaddl
out
cmpsb
ret
jmp
xor
sti
cmp
and
sahf
jge
out
addr16
call
add
std
jbe
jg
outsb
mov
or
stos
dec
cld
jmp
sub
rorb
inc
ds
cld
insb
in
int
add
out
das
dec
cld
jb
jle
popf
out
ja
cmp
add
mov
jmp
gs
icebp
mov
mov
sub
mov
cld
insb
push
and
out
sub
push
xor
test
shrb
in
mov
rolb
dec
xchg
dec
call
pushl
or
cmp
add
lods
mov
enter
dec
cld
jo
lret
push
out
inc
sbb
add
add
jbe
psrlq
clc
jl
cld
pop
xor
call
lea
or
push
cmpl
xor
call
movsl
ret
pop
pop
insb
add
xchg
ficompl
lgs
shl
imul
xchg
xlat
or
ror
sti
xchg
inc
add
out
pop
jnp
jp
dec
cld
add
add
mov
out
loope
add
sub
cld
cmp
out
aas
cs
sti
mov
push
clc
sub
add
stos
adc
push
and
inc
icebp
out
aas
cs
repz
jp
std
aam
stc
lret
push
cld
sbb
out
aas
mov
addb
cmp
mul
js
and
sbb
es
mov
xor
add
add
inc
xor
sti
scas
adc
fwait
int3
sahf
dec
cmp
stc
ret
mov
push
inc
aas
cli
fwait
jp
js
notl
pop
mov
int3
bound
inc
xor
sbb
clc
ret
dec
pop
int3
dec
mov
inc
adc
mov
mov
dec
popf
sti
and
jp
pop
jnp
bound
dec
sbb
xlat
ret
stc
jp
pop
aas
adc
sub
add
repnz
fs
dec
fildl
gs
push
push
inc
inc
std
cld
fsub
idivb
jmp
dec
jg
in
jmp
add
imul
sti
sti
mov
jg
xchg
sarb
add
mov
jle
in
mov
sbb
cmp
loope
add
jmp
mov
adc
jge
fldl
add
cmpsb
mov
into
xchg
sbb
ss
sti
inc
xchg
jle
add
push
ret
inc
sti
add
add
jo
ljmp
hlt
addl
inc
jg
addl
mov
or
dec
lds
jb
add
xchg
sti
pushl
mov
sti
adc
inc
mov
add
mov
inc
sub
mov
mov
in
out
mov
jno
add
or
hlt
pop
cs
lock
stc
lds
push
testb
repz
lock
fldenv
pop
clc
lret
sub
out
lods
notl
adc
pop
clc
adc
add
je
roll
add
pop
jge
ss
jge
dec
pop
scas
push
ja
roll
cwtl
call
or
adc
lahf
call
cmp
inc
jae
or
push
or
mov
sub
pop
in
sub
sti
rorl
int3
jl
cld
outsl
stos
sub
clc
add
add
cmp
jle
dec
scas
push
cli
mov
stos
stc
dec
scas
fiaddl
test
jle
add
add
call
lea
aas
cmc
jg
add
add
inc
es
sbb
or
jmp
adcl
add
sub
push
lea
add
leave
and
gs
inc
cld
jmp
or
jmp
stc
out
adc
addb
pop
mov
cld
fiadds
cmc
cmp
jnp
ret
mov
cmpsb
jge
jmp
dec
sbb
jns
and
cli
mov
shl
mov
mov
js
scas
mov
mov
and
idivb
add
add
std
push
shl
push
add
push
lea
loopne
mov
fdivrp
decl
push
incl
and
mov
arpl
xor
xchg
add
pop
sti
je
dec
mov
out
jne
sti
test
das
add
movb
add
inc
jae
sti
je
dec
mov
add
out
mov
sti
mov
hlt
bnd
jl
and
cld
jae
call
fidivrs
and
scas
push
xlat
sub
jbe
dec
cmp
sbb
inc
mov
testb
sbb
push
insb
idiv
icebp
mov
and
imul
inc
pop
jle
shlb
inc
mov
in
out
jle
cld
jle
pop
or
add
xchg
shrl
cmp
clc
adc
repz
cmp
rolb
imul
or
sar
stc
add
lods
and
fucomp
sub
scas
das
add
mov
sub
pop
cmp
out
fcmovnbe
stc
sub
cmp
jle
mov
aas
xchg
sti
test
lret
sub
popf
icebp
ds
fldl2e
je,pt
add
add
sub
popf
sarl
jno
mov
add
fisttpl
and
test
add
test
call
out
push
xor
jg
add
add
out
iret
sbb
aas
adc
dec
sub
sub
cmc
jmp
sub
in
jo
loop
push
xor
push
mov
xchg
adc
inc
and
std
mov
call
cld
popf
sub
out
mov
loope
push
loop
jmp
sub
pop
call
inc
inc
mov
xor
hlt
push
add
xor
shll
mov
call
jns
data16
repz
lods
cmp
addl
mov
call
add
add
add
or
insl
ret
pop
xchg
inc
sub
sub
jl
cmp
cs
xlat
add
inc
sub
mov
sbb
cli
mov
inc
pop
mov
and
mov
inc
and
cmp
inc
fadds
shrb
jl
loopne
or
push
and
mov
call
loopne
and
and
adc
add
daa
sti
pop
pop
and
insl
and
sub
adc
lea
inc
add
add
add
pop
xor
cmpl
add
mov
inc
shrl
xlat
add
sahf
in
push
jo
stc
movsb
mov
inc
add
jae
dec
sub
sub
std
pop
inc
call
add
add
rcl
das
or
mov
loope
insl
fimuls
add
lea
cld
or
add
jb
call
loopne
aad
das
scas
and
mov
or
add
pop
inc
cmp
call
loopne
int
lods
and
xor
lods
or
sbb
out
aam
das
scas
and
test
adc
add
iret
xchg
fidivl
lret
ret
xor
out
cs
add
add
hlt
fwait
mulb
inc
mov
xlat
xchg
sub
fsub
test
add
ret
ss
stos
mov
mov
xor
data16
jnp
and
add
mov
outsb
leave
add
jns
xor
add
daa
sbb
jmp
movsb
test
lds
sub
adcl
ret
out
enter
adc
sub
push
mov
xlat
jno
lea
adc
outsl
cmpsb
repz
fcoms
push
pop
pop
adc
push
push
pushl
or
push
cmp
jne
mov
push
mov
pushl
add
mov
incl
or
fcoms
call
add
or
std
pushl
inc
and
mov
pop
ret
mov
mov
add
hlt
add
jmp
pop
cmp
add
xchg
std
jo
fdivs
in
sub
add
add
shrl
add
sub
add
pop
addb
mov
xchg
roll
daa
in
jno
mov
sbb
cmp
push
mov
pop
jno
pop
lock
add
lds
add
fnstsw
fisttpll
pop
jmp
pop
inc
cs
jo
in
stos
push
rcr
add
sub
mov
sub
sub
add
add
jge
pop
push
cmpsl
xchg
sub
mov
loope
sub
add
sub
jl
add
xchg
or
imul
jns
out
cli
sti
arpl
dec
lcall
stos
ss
test
inc
aaa
rcll
mov
mov
shll
or
aas
sbb
add
lods
mov
inc
add
mov
adc
xor
rorl
xor
fwait
xor
fincstp
add
jbe
add
icebp
mov
cmp
movb
adc
dec
xor
and
mov
dec
arpl
sahf
xor
out
xor
cld
pop
cltd
push
out
push
xor
xchg
dec
sahf
add
add
add
cmp
bound
je
repnz
sti
in
xor
cld
jmp
push
ss
dec
mov
jmp
sub
mov
loope
sbb
sti
mov
cmp
jne
mov
sub
add
dec
mov
addr16
dec
lcall
xor
adcb
add
add
dec
push
cmp
sti
push
scas
sub
add
mov
push
mov
push
xchg
push
push
leave
add
out
clc
inc
add
add
add
call
mov
pushf
mov
add
push
push
cs
push
cld
cmp
cmp
mov
mov
outsb
daa
shrb
add
cs
adc
mov
mov
out
es
sbb
sar
inc
fwait
adc
or
xor
loope
add
sbb
pop
mov
fadd
cld
pop
scas
inc
es
inc
lods
cmp
fcoml
scas
inc
es
ss
rolb
ljmp
xchg
rorl
or
sub
add
add
out
cmpsb
cli
rcll
pop
mov
jg
cmp
ss
cmp
jge
mov
push
sbb
mov
arpl
xor
rorl
jge
or
or
inc
or
movsl
jl
add
add
xor
pop
test
orb
xorb
cmp
xor
or
shl
add
add
movsl
call
pop
xchg
cmp
xor
sub
xor
jge
sbb
xor
add
std
push
or
mov
cld
fcompl
sub
add
pop
jb
and
jge
push
aas
test
lret
push
mov
rorl
xchg
cld
mov
jb
roll
cmp
sub
fiadds
addl
cld
mov
and
push
call
jmp
add
jmp
icebp
mov
push
pop
decb
dec
pop
mov
adc
xchg
mov
cld
call
in
cmpl
pusha
sub
sti
call
mov
dec
mov
std
sti
dec
mov
add
add
in
ljmp
rclb
mov
cld
incl
clc
sti
call
scas
neg
test
in
mov
stc
test
sarb
mov
pop
xor
jp
push
lea
xor
outsb
test
test
movsl
data16
add
loope
sub
add
addl
add
mov
imul
filds
add
and
out
inc
xor
mov
scas
inc
adc
xchg
imulb
std
inc
dec
repz
xor
cld
xchg
push
mov
out
push
stos
fwait
imul
jns
addr16
add
inc
jo
or
xor
outsb
fimull
mov
idivb
pop
push
out
lods
ss
or
dec
add
int
aam
add
repnz
mov
das
inc
xor
add
shlb
rcll
mov
mov
mov
push
ss
jnp
stos
pop
add
pop
rorb
out
or
out
in
sbb
sub
movsl
lods
inc
adc
mov
subb
lea
cltd
xchg
out
sbb
add
add
add
outsb
push
dec
subl
mov
inc
in
cmp
dec
xchg
xchg
call
sub
das
mov
sub
gs
mov
fs
push
out
push
sub
mov
mov
or
stc
push
cld
movsl
sarl
mov
popf
into
mov
add
inc
js
pusha
shll
lahf
xor
xor
cltd
pop
ja
add
fucomp
test
add
add
divb
repz
mov
jnp
clc
xchg
jne
add
insl
rclb
imul
adc
aas
push
xchg
add
shrl
inc
mov
mov
sub
inc
add
add
pop
or
push
ljmp
ds
hlt
jae
js
sub
data16
mov
stc
in
ret
adc
nop
pop
hlt
push
sar
push
xlat
add
out
mov
testl
scas
sbb
pushf
mov
jp
pop
lods
inc
mov
pop
xlat
mov
mov
jge
add
add
xor
push
dec
ljmp
pop
sub
sar
xor
les
inc
nop
sbb
mov
je
xchg
add
jmp
lret
sti
out
cmp
cld
mov
sbb
mov
stc
inc
cld
imul
jo
pop
sub
mov
dec
sub
dec
mov
pop
lcall
sub
push
add
add
jge
pop
adc
xor
lock
das
inc
sub
addb
add
adc
xor
sub
aad
rep
pop
shl
and
jns
aaa
imulb
fldl
mov
fidivrl
rcll
jae
xchg
sub
mov
jg
test
jmp
not
sahf
daa
into
sahf
add
add
jae
scas
ret
add
or
or
xor
scas
add
cmpb
sbb
jmp
inc
addb
or
jmp
out
jge
mov
sub
out
stc
sub
out
mov
push
mov
out
cs
mov
aaa
jmp
cmp
add
inc
rcll
test
mov
lock
nop
inc
in
xchg
push
call
int3
inc
hlt
lea
call
add
mov
sti
cmp
or
push
inc
clc
add
decl
arpl
add
xchg
xchg
cld
incl
lods
add
icebp
push
xor
push
jnp
inc
dec
sti
adc
add
add
mov
stos
inc
hlt
cmp
add
out
call
test
decl
pop
add
imul
sub
mov
aas
pop
or
jnp
movsl
adc
dec
push
dec
das
adc
push
mov
icebp
xchg
das
pop
mov
test
and
sub
test
dec
decl
add
add
fcmovb
out
mov
pop
cmp
je
mov
jnp
es
out
mov
pop
jnp
lods
inc
out
sub
add
lods
out
cs
xor
add
leave
xchg
je
xor
in
sub
jle
jp,pn
roll
imul
xchg
imul
jno
pop
pop
inc
cs
sub
in
das
sub
or
add
shll
scas
and
adc
lcall
or
cs
dec
jge
ljmp
aas
push
call
jne
out
jns
inc
repz
out
in
out
mov
out
subb
jl
fdivr
mov
mov
jmp
js
jmp
pop
jp
jmp
dec
push
mov
sub
adc
jmp
jmp
orb
add
mov
mov
mov
roll
inc
in
mov
mov
sbb
call
sbb
add
xor
jmp
scas
mov
pop
add
sti
psubb
sti
je
add
jnp
call
mov
or
push
push
and
jo
sub
aaa
and
xchg
inc
and
dec
mov
in
scas
sti
incl
iret
adc
add
cld
std
inc
sti
and
jl
and
jno
dec
in
jb
decl
mov
in
dec
sar
xor
cmpsl
aam
inc
and
adc
sti
cmp
push
inc
std
cs
add
pop
sub
pop
mov
jge
dec
inc
rolb
mov
sub
mov
mov
xchg
adc
cmp
cmpsl
adc
rolb
xor
sub
ret
call
lods
sub
aad
push
adc
pop
add
add
add
sub
out
sar
inc
in
push
push
ss
stc
shll
out
shrb
mov
dec
inc
add
pop
fisttpll
sbb
adc
add
pushf
out
adcb
scas
pop
out
pop
cmp
ret
cmp
out
xor
scas
and
out
adcb
or
mov
or
xchg
and
jns
fldt
aam
mov
es
or
outsb
add
jg
sub
cs
out
es
out
dec
sbb
inc
inc
sub
ljmp
add
jle
xchg
clc
js
push
jp
push
add
call
fabs
imul
sub
sbbl
sub
xor
cli
rorb
sarl
and
call
cltd
xor
jmp
pop
add
insb
in
lods
adc
or
sub
sub
call
popf
and
jo
inc
in
scas
bound
frstor
adc
sbb
inc
add
add
shlb
cmovo
jns
add
add
adc
or
mov
out
push
std
jmp
aad
jge
movsb
jns
std
stc
push
push
sbb
push
pop
push
or
and
sti
mov
or
test
push
out
push
imul
mov
jne
xlat
xor
cwtl
xlat
rolb
xor
frstor
sbb
cs
fs
add
and
sbb
cs
add
mov
sub
mov
addr16
es
add
cmp
add
pushf
ret
gs
xchg
sbb
mov
inc
xchg
je
mov
daa
cld
push
mov
sbb
dec
push
daa
mov
sbb
add
xlat
mov
iret
add
add
jp
add
pop
add
mov
es
adc
dec
in
and
insb
icebp
out
mov
jl
clc
inc
mov
xchg
out
pop
cld
xor
add
and
outsb
add
and
adc
hlt
loope
sub
and
and
push
test
jno
pop
int3
mov
jns
lock
mov
add
loop
out
sub
sbb
inc
jle
jo
add
int
jb
mov
pop
popf
lea
cmpsb
push
sub
and
jo
add
jmp
std
sbb
lods
cmp
ljmp
or
sbb
pop
cmpb
or
sub
inc
rol
push
cld
jmp
sub
add
xor
mov
dec
push
aas
mov
test
mov
fsubrl
aas
jmp
in
or
xor
cmc
rcr
pop
ja
mov
out
jmp
out
mov
sub
aas
jmp
mov
add
out
mov
add
mov
jno
mov
test
dec
add
dec
dec
sarb
decl
inc
out
aam
inc
cld
andb
add
cld
inc
cmpl
xlat
add
mov
jns
pushf
stc
xchg
add
test
add
push
fldl
push
push
push
pusha
outsb
fdivr
jp
push
inc
push
cltd
inc
fmul
ret
jo
les
add
xor
decl
adc
jg
or
mov
and
stos
imul
add
add
scas
jle
or
ret
shlb
and
add
or
cmp
add
pop
outsb
cld
jae
push
ja
es
add
daa
jbe
xchg
aaa
rclb
clc
cld
inc
push
or
stos
aas
or
and
add
mov
cld
inc
das
push
inc
cs
add
sub
inc
out
aad
add
add
insb
add
add
aad
pop
cmp
mov
sub
mov
pusha
test
or
push
fisttps
ret
in
lret
fstpt
inc
mov
lods
bound
popf
cmp
addb
std
ja
pshufw
inc
jge
lds
cmp
mov
add
add
push
in
sarl
sbb
cli
pop
jmp
popf
int
push
sarl
jl
test
pop
sub
dec
inc
push
inc
inc
mov
jns
call
pop
jbe
or
insb
icebp
repnz
or
inc
pop
mov
mov
mov
dec
mov
int
int
fadds
adc
add
add
mov
imul
test
cmpb
xlat
fdivl
jnp
jns
pop
or
push
out
mov
roll
jl
lock
add
sbb
loope
into
iret
pop
add
dec
or
into
iret
pop
leave
xchg
jmp
sbb
xor
ja
cmp
in
cmc
mov
mov
and
test
add
push
xchg
push
jmp
add
decb
mov
or
add
xor
rdseed
dec
mov
testb
cmpl
dec
push
movsb
data16
xchg
push
mov
push
ljmpw
push
fildll
sub
add
loopne
out
sub
cmp
cli
push
fst
lods
add
sbb
add
outsl
fcmovb
fwait
and
clc
adc
test
add
mov
mov
sbb
xor
test
mov
push
mov
cs
lea
pop
jge
push
xchg
ss
mov
out
roll
inc
mov
add
cs
mov
and
push
imul
xchg
mov
and
in
outsl
push
mov
movsl
loop
inc
scas
cmp
xor
and
out
sbb
repnz
add
or
daa
call
inc
or
shll
mov
cmp
rolb
mov
ret
repnz
ljmp
mov
call
daa
mov
push
cmc
add
add
cmp
xor
cs
add
push
call
ljmp
mov
and
add
sub
xchg
push
sti
jno
mov
jae
add
jbe
movsb
daa
mov
sub
popf
sub
test
xchg
add
sub
jg
cmp
jae
lods
aad
mov
add
add
cld
cs
addb
mov
cld
push
loop
jg
insl
pop
ret
push
add
rcrb
aaa
cwtl
push
mov
aaa
in
xchg
xor
jg
push
push
xchg
rolb
push
rolb
dec
call
mov
sti
stc
pushl
cmc
sti
push
mov
add
pop
mov
xor
leave
inc
or
push
jl
jge
mov
lcall
jne
adc
add
push
mov
xor
outsb
std
inc
mov
or
add
sub
aas
cs
cltd
add
sbb
inc
xor
pop
mov
inc
call
inc
and
xchg
call
add
clc
test
dec
movsl
pop
sub
or
sbb
cs
fdivrl
cmp
add
cs
mov
push
lea
jle
xor
das
daa
add
ja,pn
adc
out
cs
xor
sub
sbb
add
add
mov
mov
inc
in
xchg
adc
sbb
pop
push
sub
lds
outsb
sahf
sbb
dec
inc
push
sbb
push
push
mov
add
jmp
out
jo
jg
dec
adc
sub
cmpl
cs
test
rcrl
sbb
jp
pushf
inc
push
push
add
add
push
pushl
in
mov
add
std
push
dec
mov
mov
pop
out
add
mov
jg
out
sub
fcoms
in
or
call
aaa
adc
scas
sub
inc
xor
mov
cmp
add
mov
pop
std
jle
mov
pusha
mov
pop
jmp
add
add
sarl
add
scas
push
data16
jo
mov
sub
mov
cmc
je
xchg
jp
pop
ret
add
cli
iret
push
cwtl
scas
push
lea
add
or
out
lret
data16
icebp
add
cli
cmc
lea
in
mov
icebp
jp
add
lcall
xchg
mov
bound
mov
mov
push
ret
mov
call
in
cs
push
ljmp
sub
push
pop
sbb
pop
pop
roll
sub
and
in
push
cld
xchg
sub
cld
xchg
stos
fs
jns
mov
jl
push
jnp
cld
add
add
jecxz
cmp
inc
add
cs
xchg
pop
loopne
add
out
aaa
add
mov
or
insl
sbb
add
stc
fadds
xor
jo
mov
lock
sub
add
clc
inc
push
das
inc
xor
jg
or
adc
mov
push
adc
add
cmpsb
cmp
mov
aad
and
xchg
sbb
pop
pop
mov
scas
into
stos
pop
add
lods
popa
out
mov
ds
sub
sbb
pop
out
subl
movsl
call
cltd
sub
mov
mov
or
mov
sbb
push
or
outsb
push
adc
pop
adc
push
ljmp
add
add
ja
shl
lods
mov
sub
or
ljmp
pop
jmp
sbb
push
je
lods
xchg
pop
jmp
xor
addb
add
adc
xchg
mov
add
out
mov
cld
add
add
xor
jge
inc
cmp
decl
cld
mov
push
push
lea
clc
jmp
inc
lock
add
add
cli
incl
cmpb
jle
xor
push
leave
inc
add
mov
repnz
cld
xlat
jg
xchg
jp
or
jp
cmp
push
sbb
jnp
or
inc
pop
pop
dec
mov
test
push
js
clc
add
add
pop
cmp
cli
idiv
jne
notb
test
inc
cld
test
pop
mov
or
or
add
inc
mov
out
pop
loopne
adc
jb
out
cld
cs
dec
xor
cld
cmp
adc
pop
mov
sbb
push
mov
stos
mov
add
add
rcr
or
lcall
pop
and
jg
xor
testl
and
add
xchg
add
sub
shll
repnz
add
add
cmp
ljmp
sbbl
lods
add
add
sbb
loopne
add
in
sbb
loopne
add
add
sub
sub
add
jae
les
inc
fiadds
out
push
sub
xchg
repnz
mov
inc
imul
das
jmp
add
sbb
adc
push
or
inc
cli
jge
lods
adc
je
lods
adc
jle
lods
adc
jge
sub
add
add
add
dec
lods
icebp
clc
or
insl
int
or
call
fimuls
xchg
and
mov
jg
inc
cli
jb
push
add
iret
mov
sub
or
cmpsb
add
sbb
jg
in
fdivrl
pop
inc
add
fbstp
mov
jb
xor
ljmp
pushf
loopne
in
add
add
add
repnz
aaa
movb
jg
js
adc
xchg
mov
repnz
aad
add
incl
dec
cmp
add
pop
rorb
and
push
push
push
or
decb
dec
push
push
jns
cmp
std
call
out
sti
js
call
clc
push
push
or
add
incl
add
cs
adc
sbb
fildl
sbb
pop
test
inc
ss
adc
cmp
and
sarb
adc
mov
shld
clc
cld
jnp
lcall
push
adc
rcrl
or
dec
and
and
sarb
mov
je
setno
add
add
sbb
inc
push
sbb
cld
cmp
or
in
popf
pop
mov
es
punpckhwd
inc
xchg
or
shrl
sti
pop
inc
jno
sbb
mov
notl
hlt
es
inc
adc
pop
or
jmp
shl
jecxz
popa
dec
mov
mov
andb
sub
or
add
add
mov
mov
xor
pop
mov
shl
fsts
test
xchg
out
sbb
jne
pop
scas
or
ljmp
jne
cmp
jmp
sub
adc
mov
aaa
inc
and
and
js
add
mov
xchg
add
adc
sub
test
add
mov
cld
ret
or
mov
aaa
data16
pop
push
xchg
insb
push
lea
push
or
xacquire
cld
ss
cs
or
push
mov
or
imull
mov
mov
mov
lods
imulb
pop
stc
adc
cmp
mov
cli
fstpt
shr
cmp
add
add
mov
adc
dec
push
pop
notl
or
inc
cld
test
imul
adc
mov
adc
dec
notl
sbb
inc
cld
push
pusha
or
push
xchg
add
jo
xchg
xchg
ret
jae
mov
xchg
mov
adc
sbb
cmc
xchg
jl
jb
aas
push
arpl
or
add
outsl
mov
xchg
push
or
mov
lods
jp
rolb
xchg
lods
mov
cs
movsb
clc
and
dec
sbb
adc
jnp
xchg
lcall
stos
xchg
movsb
clc
icebp
test
adc
sar
push
cwtl
jb
cmpsb
outsl
mov
nop
cmp
dec
bound
mov
pushf
cld
add
add
decl
mov
jl
push
addb
add
add
or
std
or
pusha
cmc
pop
lahf
pop
push
in
repz
fnstsw
addl
add
mov
scas
xor
fidivrl
ljmp
push
xchg
pop
xchg
mov
rcr
dec
jle
add
cmpsb
mov
jmp
or
add
mov
bound
roll
or
mov
adc
add
js
sub
dec
es
add
push
mov
add
sub
or
sbb
dec
inc
dec
subl
std
fidivrs
mov
jmp
insl
add
addr16
sbb
adc
cmpsb
add
add
cmpsl
stos
or
icebp
fisubl
add
cmp
repz
add
mov
add
gs
xchg
pop
scas
scas
add
fisubl
dec
call
add
or
push
addr16
loop
cmp
sub
stc
sti
je
test
data16
dec
push
or
andb
push
push
mov
push
or
add
add
stc
adc
inc
inc
cld
push
push
cld
mov
push
data16
adc
push
inc
cld
xchg
xchg
idiv
je
sub
push
mov
jg
sti
dec
push
push
dec
adc
xchg
add
add
call
int3
mov
inc
pop
insl
imul
jno
mov
out
sbb
add
add
ljmp
jno
adc
adc
sbb
dec
sbb
mov
test
mov
mov
loope
sbb
pop
or
mov
cld
fwait
and
or
in
push
pop
jno
incl
sbb
xor
inc
test
btr
mov
inc
cmp
cmpsl
add
test
jl
add
jae
fstl
loope
jle
ffreep
inc
xor
fcomps
lods
out
mov
fimull
jmp
cltd
mov
in
mov
aas
and
js
mov
dec
and
rcl
inc
cld
lret
mulb
ret
lods
loopne
mov
inc
lods
or
inc
add
and
add
push
jne
stos
xchg
add
adc
sbb
xor
mov
xchg
clc
addb
add
movsb
xor
jb
ret
add
in
mov
push
test
sbb
jmp
pop
add
ss
sub
add
sti
pushf
add
sub
loope
dec
nop
out
add
add
cld
jb
sar
repnz
shrl
cmpsb
loop
xchg
lcall
push
jne
inc
add
test
pop
testl
push
ffreep
cld
call
in
ljmp
jo
decl
mov
inc
xchg
inc
mov
xchg
or
jo
or
in
and
sti
test
add
pop
jno
mov
insb
in
xor
sti
test
data16
mov
pop
pop
pop
fiadds
add
add
sbb
outsl
aaa
or
outsl
xor
jmp
mov
fdivrp
clc
mov
cmp
call
jmp
rclb
mov
ret
add
je
add
mov
filds
add
add
and
and
ljmp
cmpsl
scas
jmp
mov
adc
mov
out
subb
adc
decl
cs
repnz
rorb
jle
xor
or
cmp
nop
or
pushl
nop
sbb
je
xlat
pop
push
fbld
add
call
imul
and
ficompl
sub
pop
cmp
push
js
adc
sbb
jb
in
lods
push
repnz
in
and
nop
cmp
cltd
lods
push
sub
push
inc
push
xchg
lods
sbb
dec
add
add
jle
je
js
adc
fs
cmc
cli
scas
add
add
in
dec
sub
xchg
sub
jge
push
lea
dec
data16
xor
mov
ret
insb
push
cmp
sbb
sti
sti
bound
repnz
sub
stc
push
ret
mov
jne
cmpsl
or
xchg
jne
adc
fs
lahf
inc
cmp
jmp
mov
cmovo
add
add
ret
out
add
cmp
call
push
add
push
push
add
cwtl
test
mov
jg
decl
outsl
xor
xor
ds
add
add
add
adc
mov
outsb
add
stos
cld
adc
adc
call
jne
sti
mov
pop
leave
push
std
sti
push
cld
adc
in
add
add
scas
xchg
mov
adc
mov
adc
rolb
push
mov
and
cs
sbb
add
out
cmp
cs
into
push
lea
push
sti
and
inc
push
jmp
movl
mov
pop
sub
jge
xchg
inc
sbb
cmp
adc
add
add
hlt
xlat
push
out
call
mov
xchg
mov
adc
outsl
ret
push
addr16
or
fistpl
push
pushl
insl
or
stc
xor
push
faddl
out
call
insl
xchg
cs
pop
test
add
push
push
push
nop
sbb
mov
je
add
fdiv
inc
jg,pn
jge
arpl
add
add
cmpsb
ja
push
xchg
int
call
ja
lea
pop
sti
fdivr
pop
data16
cmp
push
fidivl
xor
decb
test
xor
daa
repnz
cmp
inc
jmp
mov
cmp
add
stos
add
xor
push
ret
sbb
add
notb
push
mov
push
xchg
sub
pusha
jb
sti
hlt
mov
shlb
xchg
xor
aam
or
mov
je
mov
cmc
sti
cmp
ror
stos
jnp
jmp
imul
mov
pop
mov
das
pop
aam
dec
or
add
add
inc
lea
adc
std
jp
inc
enter
add
add
add
jne
jno
mov
lea
push
push
cmp
dec
push
cmp
push
sub
adc
xchg
cmp
or
adc
dec
divl
in
out
cld
loop
add
mov
in
or
dec
incl
add
not
or
hlt
jmp
xor
pop
ds
or
mov
stc
jmp
ss
jl
sti
fucomi
addr16
decl
pop
sbb
cmp
or
repnz
jne
into
jns
xchg
pop
xchg
sbb
js
mov
jg
fnstenv
ret
cli
jne
jb
adc
or
sti
arpl
out
loope
sti
sti
arpl
xchg
movb
add
add
cs
pop
arpl
lock
rcll
test
call
sbb
test
aaa
ret
xor
add
add
push
fmull
jmp
add
negb
insb
mov
std
mov
adc
and
add
xor
add
lcall
push
pusha
addb
add
notl
mov
cmovs
and
test
popa
push
jle
aam
sbb
jmp
sub
mov
jne
out
repz
dec
jp
je
mov
outsb
dec
xchg
cltd
js
pop
sub
add
sub
cld
dec
mov
pop
insb
or
ss
adc
sbb
jne
add
add
cli
mov
insb
clc
jge
lds
clc
je
or
pop
in
xor
stc
adc
aas
xchg
cltd
add
loope
jge
in
jp
cmp
insb
ljmp
out
test
je
std
clc
rol
cmp
add
add
rclb
test
cmpsl
addr16
ret
jne
add
jnp
jne
mov
adc
sarb
adc
mov
rcrl
add
sti
sub
push
pusha
test
push
enter
loop
adc
pop
xchg
push
daa
fs
insb
lds
add
dec
jmp
jnp
fistl
test
jae
lea
add
adc
dec
call
stos
es
mov
daa
mov
andb
xor
decl
pop
xorb
mov
bswap
addb
shrb
in
add
out
test
aad
sti
jle
xorl
jmp
idiv
pop
mov
or
outsb
inc
add
add
jle
fistpl
flds
cld
sti
cmp
add
jmp
mov
movsl
push
push
push
stos
repnz
sti
and
pop
faddl
jl
or
test
repz
insl
inc
cs
add
add
testb
push
nop
loope
inc
pop
nop
xchg
repz
out
test
repz
add
xchg
pop
inc
repz
inc
out
imul
push
mov
push
in
sub
mov
mov
lea
cmp
xor
mov
test
mov
sub
out
jmp
jbe
sti
ss
or
push
test
or
std
push
push
dec
call
insl
idiv
mov
imul
fwait
test
cmp
andb
aaa
bound
pop
sub
jne
add
fimull
sbb
insb
adc
gs
cli
scas
mov
push
xchg
dec
lea
sti
mov
add
imul
incb
lea
out
mov
push
out
scas
sbb
add
add
jp
adc
sbb
jne
test
movsb
clc
jo
inc
add
inc
cli
mov
divl
pop
xor
call
pop
popf
mov
add
fnstcw
xor
inc
or
dec
sbbl
jo
addl
jbe
out
incb
cmp
add
pop
jb
jbe
addr16
enter
add
add
outsb
sar
fisttps
fstl
push
push
outsb
enter
pushl
out
jge
sahf
out
jg
clc
repz
clc
cli
jmp
xor
clc
test
fs
fdivrp
jno
jl
dec
mov
pop
sub
cli
cmp
repz
lret
mov
pop
adc
xor
cmp
je
scas
cli
add
mov
add
ret
call
jmp
lcall
pop
loope
mov
xchg
mov
out
je
mov
add
push
push
cmpsl
xchg
out
push
push
stc
mov
outsb
call
mov
pop
out
cmpsb
pop
scas
imul
test
jp
jno
adcl
mov
fmuls
add
add
add
add
fdivrs
out
xor
jne
push
and
fadds
pop
mov
add
and
shrb
mov
jmp
imul
xchg
mov
and
pop
jns
lds
jns
lds
inc
mov
inc
and
sub
cli
fnstsw
push
fmuls
sub
add
fstps
popf
inc
adc
movsl
cmp
dec
out
sti
rorb
sbb
subl
stc
and
addl
into
nop
sbb
aaa
mov
dec
adc
scas
orb
dec
adc
add
repz
nop
mov
hlt
inc
and
cmpb
xor
adc
push
loope
add
inc
and
lahf
xchg
xchg
cmp
sarb
or
add
outsl
and
out
dec
loope
xchg
xchg
fnstenv
repz
push
push
mov
push
mov
in
lret
in
sti
call
pop
loopne
push
in
lcall
les
shlb
ret
addl
cs
ljmp
pop
idiv
or
clc
sub
xlat
cli
arpl
addb
xchg
mov
add
or
ja
mov
lods
jle
or
dec
cmp
outsl
inc
lods
cmpsl
stos
scas
mov
mov
xchg
pop
inc
hlt
out
pop
mov
ja
hlt
call
mov
cmp
pop
or
ljmp
dec
stos
insb
inc
add
hlt
sti
xlat
mov
mov
add
adc
add
adc
pop
xchg
or
add
jmp
mov
jb
sub
cmc
pop
das
jge
hlt
jle
sub
mov
in
into
fiadds
js
jne
pop
xchg
outsl
mov
jmp
xrelease
add
push
inc
imul
add
push
jns
fists
push
repz
scas
fldcw
insb
inc
adc
add
lret
add
dec
cmp
out
sub
jo
pop
jns
jl
sub
sub
inc
jmp
add
std
mov
pusha
xchg
or
jbe
xchg
fdivrs
test
sub
ljmp
movsb
cmp
mov
bound
int3
data16
scas
or
daa
inc
add
add
imul
cli
movsb
test
adc
neg
outsb
inc
and
xchg
test
add
incl
ret
decb
dec
add
add
add
dec
in
dec
mov
sti
ret
adc
orl
mov
lea
in
dec
lea
in
pop
add
add
out
xor
test
nop
data16
idiv
or
pop
test
decl
or
dec
mov
xor
pminub
add
push
test
adc
adc
xchg
dec
mov
add
outsb
les
mov
ljmp
pop
inc
or
push
ljmp
sarb
rclb
push
sti
add
add
jmp
inc
cs
ret
or
fcomps
stos
sbb
cli
leave
cld
and
pop
or
add
mov
cmp
call
outsl
sub
call
cmpsl
mov
push
mov
xlat
mov
lock
je
jae
ds
xchg
in
xor
aam
jle
add
sahf
adc
in
out
out
fadd
insb
negb
shlb
idiv
jge
jns
idivl
inc
mov
or
jns
in
stos
lods
fucomp
aad
xchg
lret
xchg
pop
das
jnp
subl
jp
insl
adc
mov
pushf
outsb
xrelease
push
out
test
sub
mov
jp
imull
xor
pusha
add
add
push
xchg
jb
insl
push
pop
jg
sub
ret
lret
push
je
fucomip
outsl
scas
ljmp
cli
in
mov
add
push
jg
in
cmp
call
add
shrl
sti
mov
mov
loopne
push
jle
sahf
lods
pop
or
sarb
bound
das
jg
cmp
jb
xlat
jg
outsb
daa
aaa
and
add
xchg
cli
mov
sahf
ljmp
pop
jmp
mov
orl
push
mov
inc
mov
outsl
or
push
xchg
lock
aaa
hlt
mov
mov
out
push
add
add
jg
ljmp
mov
fbstp
add
aam
lock
fldl
aam
loopne
add
mov
sbb
enter
or
leave
ret
push
mov
loopne
push
inc
dec
dec
mov
rcll
mov
xchg
and
fdivr
ljmp
dec
push
inc
cs
adc
push
push
jns
std
repz
mov
push
fsubr
xor
imul
imul
sti
adc
jne
add
daa
jb
add
push
jnp
xlat
push
rorb
dec
jmp
xlat
add
int3
in
adc
mov
sub
xchg
ja
mov
loop
aaa
mov
xlat
incl
xchg
jmp
repnz
or
ja
daa
dec
fsubrs
mov
in
ficoml
cltd
fildl
arpl
daa
xor
jbe
add
add
cmp
and
add
add
in
mov
jmp
daa
ss
add
dec
leave
ljmp
jmp
push
mov
js
clc
sbb
out
stos
jmp
rcrb
cmp
adc
push
jle
cld
insl
test
js
fisubrl
mov
test
dec
jnp
in
add
add
ja
call
dec
and
clc
xlat
sub
inc
out
sub
or
jmp
push
pop
out
sbb
imul
xchg
out
add
jns
in
cmp
xor
je
js
xchg
aam
jg
push
or
scas
sbb
call
sbb
mov
bound
add
fs
add
fdiv
test
push
add
add
cmp
je
or
call
mov
push
xor
add
nop
adc
cli
cmp
or
add
push
dec
push
ss
test
rcpps
shl
decl
dec
bound
aas
les
add
add
xlat
notl
dec
inc
and
subb
in
cld
call
roll
xlat
jl
sub
popl
xlat
dec
sti
cmp
adc
pop
inc
add
push
js
xlat
push
inc
stc
std
add
in
push
out
jp
cmp
popa
and
or
xchg
sti
insb
xchg
adc
loope
inc
push
movsl
hlt
inc
mov
das
cmpl
sub
ljmp
xlat
xlat
jl
pusha
xchg
sti
jmp
imul
add
test
push
sub
xor
sti
vminps
jns
xchg
test
lcall
fcoms
movsl
loopne
ret
sbb
insl
add
jge
call
cli
stc
mov
push
mov
test
mov
adc
add
cwtl
sti
call
push
mov
insb
icebp
mov
and
or
jl
bound
pusha
add
call
adc
cmp
es
add
inc
sti
sub
cmpb
push
add
push
add
inc
lret
inc
inc
sti
jnp,pt
push
pop
in
cmp
xor
je
adc
decl
jb
adc
jo
mov
sub
add
out
add
in
inc
lods
xchg
add
jmp
ret
cmp
jo
scas
aaa
sub
addl
add
les
push
mov
rcr
adc
jmp
pop
inc
mov
sub
adc
add
jge
sub
cmovae
add
add
add
dec
notl
ds
clc
cmp
add
test
add
bound
das
add
add
push
inc
add
aas
hlt
cmp
lret
push
call
add
inc
sub
notl
rol
jne
into
inc
hlt
mov
mov
or
int
or
int
incl
add
aam
inc
repz
notl
cs
cmp
and
aam
adc
dec
sti
inc
in
mov
enter
inc
push
std
sbb
sbb
push
sti
sbb
adc
stos
daa
jo
aaa
pushf
jmp
dec
bound
int3
adc
mul
jne
out
aaa
movl
jl
sti
add
add
or
imulb
mov
repz
xchg
pop
ja
push
out
push
add
pop
in
cmc
mov
outsb
add
cld
mov
inc
jmp
push
imul
sub
inc
jmp
and
sub
inc
fstpl
movsl
repnz
adc
mov
outsb
jbe
cltd
in
mov
push
mov
test
mov
push
inc
add
add
cmp
shll
mov
push
jle
lahf
pop
fsubr
dec
stos
mov
out
add
ficompl
in
arpl
in
addb
das
insb
sbb
add
pop
cli
out
add
cld
or
cld
jb
xlat
jne
pop
add
incb
add
mov
fidivl
sub
add
aas
jecxz
push
bound
add
sahf
sub
pop
mov
xor
inc
xlat
test
sbb
add
shrl
mov
fwait
adc
add
js
aas
adc
ret
mov
hlt
stc
mov
hlt
add
out
ret
push
cmp
push
das
inc
push
add
jo
cmp
fdivp
call
push
lret
add
add
cld
in
ret
lds
add
call
jmp
mov
add
or
inc
incl
mov
outsl
jne
mov
out
adc
lret
cmp
cld
je
outsl
inc
cld
mov
add
push
mov
out
cmpsb
adc
push
lea
xor
daa
inc
leave
in
jecxz
jg
add
pop
mov
aaa
pusha
jp
sti
pop
jb
push
pop
adc
adc
mov
sbb
mov
mov
add
iret
cmp
aam
adc
out
sti
cmp
aas
and
mov
lcall
rcl
cs
jo
loope
ss
fdivrp
clc
push
je
add
ss
inc
rcr
adc
inc
xchg
pop
call
xor
or
aad
out
in
add
or
lock
call
jp
adc
ret
int3
loope
test
sub
mov
xchg
lret
fldcw
xor
mov
push
addr16
sub
add
xor
add
add
arpl
or
push
clc
insl
leave
fimuls
lods
daa
inc
add
add
shrl
roll
or
call
sbb
sti
mov
pop
jg
push
sub
cltd
adc
jl
pop
and
roll
push
jb
push
in
xor
xor
push
stos
inc
hlt
je
or
pop
add
mov
pop
add
out
iret
sti
sbb
shl
mov
jmp
push
jb
add
mov
or
call
pop
test
xchg
mov
call
sbb
mov
int3
pop
add
test
outsl
and
mov
inc
das
cs
xor
add
sbb
inc
in
jl
sti
sbb
je
lds
out
cmp
call
or
imul
idiv
cmp
test
inc
sbb
dec
mov
ljmp
adc
dec
arpl
mov
add
ljmp
cs
mov
cld
movsl
mov
push
inc
push
lcall
add
add
push
pop
lea
cltd
daa
xchg
test
jle
xor
or
xchg
jne
push
and
push
or
in
add
sub
push
loope
cmp
sarl
mov
pop
mov
movsl
and
xchg
push
data16
jbe
or
cmpsl
push
pop
push
push
or
notl
sti
into
cs
adc
inc
test
faddl
add
das
mov
xor
loope
outsb
dec
mov
sub
frstor
aad
mov
pop
or
aad
or
or
les
loop
ss
xor
das
and
add
fidivrl
outsl
das
add
xor
xchg
mov
subl
add
add
mov
or
test
add
xor
sbb
xor
mov
int3
jl
fs
aad
inc
std
jmp
sub
das
push
rcr
inc
jmp
add
testb
aam
je
js
in
lea
jnp
jb
mov
add
add
add
jge
iret
cmc
xlat
sbb
sub
xlat
sti
bound
jnp
mov
pop
or
loope
push
lldt
clc
add
scas
fadds
pop
in
sti
add
mov
in
jae
jmp
call
notl
xor
aaa
cmp
add
add
or
test
incb
fildl
notl
cld
jp
add
sbb
add
push
inc
mov
cli
rcll
pop
shrb
lcall
mov
sbb
cs
mov
fdivp
or
jo
cli
js
mov
pop
add
dec
jnp
popa
xor
jecxz
xor
dec
add
add
ret
mov
test
jno
enter
cli
sub
mov
mov
mov
cltd
jne
mov
push
push
fs
cld
cs
add
arpl
xor
jle
jp
out
mov
pop
lret
mov
mov
xchg
movsl
test
loope
imul
lea
sub
add
add
jge
fldt
test
jmp
push
in
add
add
clc
cs
dec
inc
xor
dec
subl
pop
testl
out
or
sarl
adc
jl
or
shll
icebp
call
lds
add
rcl
xor
add
pop
sub
inc
dec
test
adc
call
xchg
lcall
jmp
sub
fdivr
mov
fsubrs
add
push
shll
cs
cltd
dec
jnp
out
mov
lahf
call
add
dec
mov
in
sti
test
add
aam
addl
cld
jb
mov
call
aas
cmp
call
add
adc
les
or
jmp
js
cmpb
enter
std
clc
jl
lock
cld
mov
lea
xchg
pop
lock
filds
mov
add
add
adc
dec
fdivrl
std
cmp
lea
or
fdivl
mov
mov
mov
xlat
pop
cmp
mov
out
enter
push
dec
add
jae
cmpl
test
push
rcll
movsl
nop
mov
sub
addl
out
jg
call
add
push
ss
cs
aad
fcmovnu
jle
inc
fmul
inc
cmp
dec
das
les
out
push
push
rorb
and
jns
xchg
std
cwtl
sbb
sar
mov
sub
addr16
fidivl
mov
das
xchg
in
jae
fcmovbe
faddl
add
aas
push
mov
cltd
cmp
or
mov
sub
push
mov
insb
icebp
adc
add
add
add
lret
jns
jb
insl
mov
push
cld
imul
lods
iret
es
push
push
jp
mov
xlat
dec
mov
int
aas
ss
int
pop
add
lock
out
inc
pop
adc
inc
hlt
adc
and
outsb
aas
cli
xlat
push
fdiv
int3
add
fsubrs
adc
xor
cmp
add
and
mov
cmp
test
or
and
test
cmp
cs
cmp
test
pop
sub
mov
sti
jle
sub
outsb
xor
jmp
add
sub
pop
enter
rcll
xor
sti
cs
sub
in
inc
and
add
dec
clc
xchg
test
or
xchg
js
push
xchg
mov
xchg
xlat
incl
add
push
lea
mov
ret
push
mov
test
les
pop
cmpl
xor
sub
scas
xor
push
dec
inc
in
dec
lods
cmp
scas
dec
push
sub
sbb
jae
scas
notl
sub
add
scas
idiv
cwtl
or
mov
fcompl
sbb
sarb
shrb
xchg
imul
pop
stc
roll
mov
xor
into
jp
pop
dec
in
addr16
rcrl
mull
aam
add
arpl
fidivrs
sti
cltd
jmp
xchg
pop
or
arpl
xchg
adc
sti
add
add
sub
rcll
idiv
popa
test
cmp
dec
or
xlat
push
outsb
movsl
adc
cmpsl
in
jg
add
inc
fwait
pop
sbbb
scas
adc
xchg
pop
dec
rorb
push
jns
add
ja
mov
mov
outsb
inc
fdivs
les
subps
xor
xor
leave
xor
mov
enter
inc
jmp
stc
test
jge
mov
sub
adc
mov
fdivl
jecxz
push
pop
gs
pop
sarb
adc
dec
sub
int3
and
xor
mov
xchg
add
adcb
cmp
loop
xchg
outsl
push
or
imul
popa
hlt
xorb
das
push
out
loopne
fs
sti
ficoms
into
pusha
clc
dec
pop
aad
ret
add
scas
mov
sbb
clc
shr
rep
call
icebp
clc
aas
jmp
jge
shlb
xlat
sti
xchg
jle
fsubl
les
pop
lods
xchg
mov
inc
adc
add
add
pop
add
inc
sti
or
sti
adc
jne
inc
test
mov
push
mov
hlt
call
push
ret
pop
test
add
add
dec
std
enter
push
outsl
idiv
dec
lods
mov
jns
cmovae
mov
push
push
enter
xchg
test
cwtl
js
add
dec
or
call
movl
sub
bound
call
cmp
or
cmp
std
push
push
push
add
or
fnstenv
stc
adc
stc
or
xor
fnstcw
fstps
stos
dec
mov
xchg
stos
cli
leave
push
dec
or
loopne
push
or
pop
jmp
ljmp
or
es
sbb
out
pop
push
sti
sub
call
mov
add
cld
ljmp
clc
das
pop
je
call
add
lea
into
mov
xor
xor
nop
add
sbb
add
or
enter
jns
xlat
stos
into
xor
lods
inc
jmp
mov
add
xor
cld
pop
inc
fidivrl
xchg
dec
out
sub
jmp
sub
adc
pushl
xor
lds
xor
subl
sahf
imul
fwait
jnp
out
push
xlat
gs
stc
subl
ret
fbstp
dec
pop
push
xlat
push
clc
lods
cli
ss
inc
hlt
pop
imul
push
jb
add
call
fcompl
sub
dec
lea
call
je
clc
dec
ss
ret
jo
out
loope
sti
insl
insl
dec
mov
add
pop
shll
or
cmp
cmp
cmp
or
sti
add
mov
test
orb
enter
icebp
incb
add
loopne
jne
out
loope
add
dec
jne
rcrb
inc
adc
push
inc
push
or
push
mov
add
push
cli
call
lock
mov
je
loopne
mov
inc
jp
pop
jg
sar
loopne
popa
lea
pop
call
cld
mov
idiv
cs
mov
add
das
fcos
jg
cmp
std
popa
inc
jnp
inc
xor
aaa
jno
jnp
cs
jle
sub
xorl
call
jl
or
adc
jns
push
mov
pop
push
xorl
sub
mov
lret
sti
cmp
les
and
hlt
pop
add
pop
push
dec
clc
mov
add
out
out
add
sub
sbb
jg
mov
add
js
jle
cmp
add
and
jns
imul
movsl
jnp
mov
pusha
inc
push
je
fdivl
push
pop
lret
lods
scas
mov
movsb
je
xchg
ret
cmp
jle
movsb
mov
cmp
add
add
ret
call
inc
or
call
je
add
in
outsb
sub
or
fnstenv
jge
pusha
mov
xor
add
adcl
add
pop
pop
push
pop
stc
jg
xchg
and
push
xor
std
xchg
call
adc
add
lds
insl
inc
ret
sti
jmp
sub
sti
jmp
adc
test
ja
sbb
mov
call
mov
out
das
sti
jl
les
mov
hlt
andl
add
aas
cld
jb
jb
leave
cld
shlb
test
and
lcall
loopne
and
or
jne
mov
add
faddl
loopne
pop
dec
push
aam
add
xor
and
push
enter
bound
test
or
dec
add
add
jge
mov
add
mov
rorl
mov
add
out
push
jmp
ds
add
add
lea
push
and
les
test
test
inc
call
jp
sub
sbb
sti
add
add
sbb
shlb
fildl
cs
push
lock
fptan
xorl
fildl
das
movsl
jl
cmp
dec
add
daa
insb
add
test
cmp
sub
xor
addb
pop
jne
dec
jnp
jbe
xor
sti
mov
dec
pop
jl
mov
call
mov
xlat
xor
add
mov
pop
cld
mov
outsb
mov
movsl
test
add
enter
mov
mov
fs
or
insb
cmp
int
fs
cmpl
std
out
sbb
add
mov
jmp
fldt
push
adc
push
into
and
mov
inc
add
out
xor
and
add
jae
sbb
mov
xor
dec
icebp
imul
rcll
add
scas
hlt
cli
out
test
aaa
cmp
sbb
test
icebp
pop
mov
aam
mov
sbb
xor
jb
dec
sti
cmp
inc
mov
pop
push
xchg
test
sbb
or
mov
test
add
imul
popa
sbb
jmp
inc
test
push
sub
sub
test
insl
add
xchg
int3
mov
cmp
add
xlat
push
pop
lea
pop
call
in
call
out
mov
jg
hlt
xchg
aaa
push
loop
iret
push
cmp
push
or
roll
add
add
add
add
mov
dec
pushl
in
rclb
add
bound
lea
call
mov
testl
pop
add
pushl
cmp
add
test
jae
stos
pushf
iret
dec
inc
sub
adc
test
mov
sti
add
add
pop
mov
add
pop
lret
jmp
cmpsb
cld
js
pop
pop
stos
imul
pushl
fstl
lea
pop
sub
movsl
cli
push
mov
push
mov
jle
push
or
call
orl
mov
ljmp
es
adc
les
add
fmuls
cmp
test
cmp
and
add
idivb
test
or
enter
mov
lcall
test
test
xchg
jecxz
xchg
ljmp
xchg
cmp
das
xor
mov
inc
or
xor
scas
outsb
or
mov
mov
outsb
or
add
jle
cwtl
or
or
bound
test
mov
add
sti
mov
and
sti
cltd
xor
dec
pop
add
cmpsb
sti
out
push
push
mov
push
xchg
stos
movsb
clc
rcrl
insl
out
pop
add
cltd
shlb
cmpsb
ret
add
add
lea
out
xchg
add
mov
jbe
mov
clc
insb
pop
xor
out
cmpsb
mov
and
out
je
repnz
test
js
add
lahf
icebp
out
shl
ljmp
cld
lcall
sbbl
mov
push
sub
jl
je
fdivs
add
into
je
inc
les
sub
add
test
add
and
imul
add
add
cmp
jmp
or
leave
lea
rolb
dec
cmp
push
popa
pop
test
cli
orb
out
add
out
mov
pop
cs
adc
das
in
daa
jbe
test
mov
add
mov
sti
mov
imul
cmp
add
add
repnz
pop
cli
dec
add
stc
dec
push
cltd
lods
fwait
adc
test
inc
add
and
test
push
inc
cs
cmp
popa
mov
push
out
test
inc
push
test
or
test
add
sbb
cmp
mov
push
and
add
pop
out
icebp
add
dec
test
dec
out
cs
pop
and
add
push
adc
mov
cmpsl
xor
lea
lcall
inc
jmp
inc
ret
mov
add
mov
mov
insl
jl
rolb
stos
sbb
adc
add
mov
add
mov
mov
cli
fs
imul
call
push
call
jbe
fsub
xor
bound
cmp
scas
or
add
clc
mov
pop
mov
aaa
xor
sub
mov
push
pusha
sub
in
add
fdivl
mov
fidivrs
jl
jmp
push
push
shll
clc
mov
inc
jge
lds
mov
add
icebp
cli
cld
push
add
mov
test
xchg
push
out
into
inc
inc
mov
call
mov
repz
pop
add
les
add
ja
testl
xor
divl
das
inc
idiv
nop
jl
je
mov
add
add
xor
jne
ror
test
jne
call
jae
lock
or
test
cs
cmp
test
pop
mov
or
and
ret
add
das
inc
sti
jns
pop
leave
in
push
ss
test
or
inc
repnz
lods
xor
inc
pop
add
aas
add
add
push
cmp
outsb
add
es
cmp
daa
inc
cs
add
cs
or
xor
insl
cmp
dec
idiv
sbb
loope
call
scas
out
jle
mov
add
jmp
sub
aas
jmp
push
outsb
add
sub
stos
add
add
mov
fcompl
xor
or
mov
cs
pop
ret
outsb
mov
cmp
dec
data16
mov
les
sti
cmp
xchg
sbbl
sub
mov
push
sbb
jp
jb
pop
dec
xor
sub
loopne
sti
mov
mov
add
jb
jmp
clc
sbb
sbb
jae
in
sub
outsb
mov
imul
add
sahf
pop
inc
sti
mov
mov
es
test
rorl
sti
jl
mov
icebp
je
cli
fdivr
cmovo
cmc
lods
fadds
push
out
stos
cs
enter
sbb
cld
inc
or
add
add
adc
xor
std
inc
mov
ret
inc
inc
xor
jmp
mov
add
push
leave
ret
push
mov
jp
fimuls
inc
test
je
inc
jne
push
icebp
sti
adc
std
ljmp
lcall
mov
push
bound
push
cld
push
mov
add
add
add
loope
cmp
js
adc
jecxz
cs
push
pop
das
add
fistpl
push
push
mov
mov
loop
mov
xchg
sub
push
cmpb
and
shr
push
mov
add
cwtl
lods
pop
repnz
inc
pop
xchg
mov
add
add
sbb
fisubrs
push
ret
sub
movsb
aas
cs
ljmp
push
or
pop
pop
incl
cltd
jmp
add
sub
imul
mov
std
add
push
mov
mov
andb
jecxz
enter
jmp
xor
in
pusha
inc
jmp
mov
out
xor
mov
add
xor
into
adcb
fcompl
cs
xor
in
rolb
call
push
mov
mov
xor
cmp
add
roll
inc
addl
cs
fisubrs
xor
fisubrs
xor
add
popa
fmul
in
pushl
stos
push
stc
shl
int
jmp
cmpsl
or
xchg
add
mov
mov
incl
dec
popa
int
jmp
sub
mov
or
push
bound
fisubrs
cltd
int
jmp
mov
or
mov
mov
add
mov
lea
push
notl
test
push
loop
add
inc
add
add
shlb
push
data16
mov
mov
push
loop
add
adc
sub
loop
add
adc
xchg
rorb
push
leave
ret
xchg
add
ds
imul
push
jo
xchg
adc
add
add
fisttpll
call
dec
les
add
cs
pop
lret
push
fwait
push
in
xchg
push
test
xchg
push
mov
insl
push
repnz
xchg
flds
add
adc
push
mov
or
and
mov
adc
mov
dec
sbb
pop
push
flds
add
push
in
cltd
push
and
pop
push
outsb
cltd
push
mov
in
insb
mov
add
add
lock
movsb
push
in
cltd
sub
xorb
in
cltd
dec
sti
inc
add
push
data16
cmpsb
add
adc
stos
mov
xor
mov
or
pop
xchg
aas
jmp
cmp
push
push
je
inc
jns,pn
mov
adc
in
inc
aam
inc
jmp
push
out
dec
mov
add
cmp
jp
mov
loop
xor
stc
stc
popf
cmpsb
add
add
mov
mov
jg
lods
add
sar
out
in
ljmp
jge
and
movsl
inc
shr
imul
push
xchg
stos
push
lret
call
push
nop
inc
je
add
fs
testb
add
cmpsb
sub
cltd
cmc
jmp
sahf
call
imulb
out
fs
cld
jmp
jbe
mov
and
add
call
add
sub
jae
cmpsl
shlb
sti
add
std
jae
stc
inc
icebp
ss
mov
add
jl
adc
incl
add
and
pushl
lcall
mov
xchg
test
adc
shlb
mov
insb
out
add
lahf
add
shlb
lcall
or
scas
add
xchg
add
inc
cmpsl
add
pop
jbe
add
xchg
decl
add
push
xchg
mov
fcmovu
xor
sti
cwtl
sti
leave
and
je
push
out
push
sub
stos
add
or
xchg
jbe
movsl
pop
cmp
mov
ret
xchg
js
sti
sub
call
mov
mov
add
dec
leave
insb
lret
outsb
or
jle
mov
lods
adc
add
adc
jle
mov
sub
xchg
push
mov
add
add
lret
aas
add
fdiv
mov
fsub
push
push
sbb
cmc
jge
sub
xor
cmp
jmp
xchg
jmp
mov
clc
call
pop
test
mov
cmp
cmpsb
loop
in
call
adc
sub
jp
sbb
push
stc
xchg
jmp
imul
je
cld
add
add
dec
mov
scas
sbb
testb
test
cld
popf
adc
xor
jns
psubq
in
aas
jmp
test
out
je
or
in
sub
xor
jmp
push
cmpsb
push
jb
push
push
mov
mov
pop
idivb
jg
subl
jae
gs
mov
in
add
add
add
out
jl
push
out
cwtl
cmp
jle
shrl
je
mov
mov
xchg
das
jle
stos
test
mov
adc
mov
fcoms
push
cld
mov
lods
cmpsl
test
sbb
mov
add
add
mov
and
je
dec
cmpl
push
je
dec
mov
notl
add
pop
fs
ret
bound
add
push
ss
movb
enter
sub
pusha
or
xchg
dec
mov
repz
inc
daa
inc
or
std
incl
test
sub
divl
es
mov
push
push
ret
and
xchg
add
popf
les
popa
xchg
ljmp
add
in
and
sub
je
js
or
xchg
inc
rcl
lods
pop
in
xor
sub
je
mov
lods
je
xchg
ja
movsl
lods
pop
insl
and
lea
push
scas
xchg
inc
add
inc
and
and
and
push
lods
je
xchg
js
adc
xchg
rcll
pop
insl
cmp
jle
sti
cmp
test
test
lods
and
cwtl
push
add
add
mov
sub
jle
test
lods
cmc
push
inc
dec
xchg
mov
in
lock
mov
cmp
add
dec
mov
push
jmp
mov
jg
adc
mov
stos
or
jmp
insb
cltd
ss
out
test
mov
fstpt
movlhps
icebp
daa
in
add
add
cld
insl
xor
xchg
out
pop
jne
insb
lcall
test
push
push
sub
repnz
jmp
xchg
jge
insb
aad
push
popw
xor
test
scas
scas
std
dec
xchg
js
fnop
mov
or
pop
clc
jle
xchg
and
jmp
in
push
test
clc
push
in
mov
add
add
dec
lcall
sub
loop
testb
cmpsb
push
or
addr16
cwtl
out
pop
jmp
adc
test
cmp
inc
test
leave
ret
in
inc
ret
aam
mov
in
fisttpl
mov
cli
dec
jmp
cmc
popa
add
std
divb
test
push
add
inc
popa
adc
adc
sbbw
je
cmp
mov
dec
divl
sbb
fs
std
test
and
lret
push
jnp
cwtl
addl
push
push
lea
push
ljmp
movsb
outsl
adc
xchg
jp
fcmovb
test
ds
clc
push
in
dec
dec
int3
push
adc
xchg
jl
jb
xor
xchg
test
cwtl
sub
add
add
test
mov
je
lods
jg
cs
and
mov
les
dec
jg
es
jge
jl
outsb
enter
ds
stos
push
decl
loopne
shlb
jl
ss
or
cltd
xchg
dec
sti
sbb
aas
add
pop
shll
pushl
cs
cld
fdivrs
out
add
add
sub
mov
jmp
sbb
add
add
lea
adc
xorl
push
add
xor
ss
cltd
test
or
push
sahf
xor
adc
mov
push
add
fs
cs
sbb
cmc
pushl
add
add
das
xlat
mov
jmp
sub
aad
int3
in
cli
aam
push
inc
jmp
insb
adc
ds
mov
in
jmp
cmpsb
inc
add
pusha
or
xchg
inc
add
add
mov
mov
mov
es
push
mov
icebp
xchg
xor
mov
nop
sar
push
inc
dec
or
add
jae
xchg
test
pop
je
jne
push
or
cwtl
cmp
out
pop
xor
mov
dec
mov
add
push
or
notb
fiadds
rcrb
inc
dec
dec
add
push
rcrb
notl
mov
jne
aad
jmp
mov
pushf
adcb
addl
cli
call
jns
cmpsb
jo
test
lcall
incl
out
add
roll
mov
add
cmpsl
jbe
ss
out
cmpsl
pop
out
cmpsl
jbe
and
xchg
mov
out
movsb
pushl
jecxz
lcall
ljmp
adc
or
cmpsl
js
es
push
add
add
cmpsl
js
ss
mov
cmpsl
incl
mov
cmpsb
lcall
or
sbb
incl
dec
inc
js
lods
push
or
cmpsl
dec
sti
and
cmp
pusha
add
add
pop
icebp
arpl
subl
shlb
inc
sub
cmp
push
and
inc
jmp
add
add
sbb
inc
sub
hlt
adc
insb
xor
add
sbb
es
js
or
pop
iret
lahf
ljmp
cmpsl
decl
xchg
add
out
xor
cmp
bound
repz
stc
js
or
sarl
es
mov
add
or
xchg
xchg
adc
push
test
jbe
inc
push
add
add
cmp
out
mov
jmp
mov
add
jmp
cltd
fs
cmpsl
shlb
xchg
jne
sahf
inc
hlt
sbb
test
adc
sub
add
inc
cmc
dec
push
int
or
fisubl
clc
bound
sar
push
jb
or
cmc
xor
testb
add
xchg
cmpsb
addb
add
mov
xor
out
xor
decb
scas
data16
pop
xor
mov
jnp
ja
rorb
ret
xor
push
pop
mov
push
pop
jne
outsl
cmpsl
mov
inc
mov
hlt
pop
fwait
mov
push
mov
pop
sbb
mov
in
pushf
dec
or
stos
add
jp
sti
int
jne
add
pushl
clc
jp
notl
jl
inc
or
test
icebp
sbb
movsl
mov
lea
fisubrl
lea
ja
out
mov
popf
pop
mov
adc
mov
push
mov
out
in
add
sbb
xor
mov
mov
shlb
pop
mov
add
add
lods
imul
ret
jbe
pop
inc
outsl
cld
sub
shlb
jle
cmpsl
mov
std
or
mov
xor
mov
cmpsl
mov
add
xor
inc
rcl
arpl
movsb
xchg
cmpsl
cmp
inc
xchg
dec
jge
dec
movsb
cmp
fwait
xchg
adc
mov
stos
outsb
shll
cltd
repnz
add
ficoml
shrl
shll
add
sbb
rcll
test
mov
ret
ret
cld
pusha
sub
lcall
or
dec
fwait
or
pop
add
mov
mov
loopne
or
push
test
mov
mov
popf
test
inc
mov
je
gs
add
mov
add
pusha
mov
loopne
or
push
test
inc
leave
mov
jne
call
les
in
mov
lods
bound
fisubl
iret
cmc
aas
ss
ret
inc
add
cld
jnp
pop
and
inc
flds
or
or
sbb
inc
inc
cmp
add
mov
jmp
add
inc
mov
mov
mov
inc
inc
inc
sub
ja
icebp
insb
pop
sub
insb
imul
xchg
add
push
repnz
sub
xchg
add
or
xor
push
add
inc
aaa
add
call
push
addl
inc
enter
mov
mov
cmpl
add
push
add
cs
jle
orb
or
aaa
insl
gs
cmpsl
lcall
cmpsb
push
inc
das
sahf
push
dec
sub
sahf
or
jp
inc
and
jle
xchg
test
cmpsl
or
sub
sub
sub
dec
mov
jbe
dec
test
in
daa
add
add
inc
movsb
cmpsl
hlt
outsl
xchg
lret
or
add
dec
lahf
xchg
mov
dec
xor
out
ret
sub
cmp
ret
out
ret
movsl
mov
dec
jmp
jae
outsb
xchg
cmp
add
xorl
add
mov
sub
cmp
ljmp
add
and
xchg
lds
xchg
add
data16
int3
add
stos
das
add
adcb
xchg
call
sbb
add
ret
push
daa
jne
cmp
call
in
mov
repz
and
inc
sbb
add
xchg
jne
mov
push
data16
cli
aam
xchg
jne
test
dec
add
add
jl
sti
cmp
leave
xchg
sti
imulb
xchg
jl
les
mov
sub
mov
xor
loopne
es
ljmp
xchg
fs
jnp
in
mov
jge
and
fwait
jmp
add
repnz
add
inc
cld
decl
sti
ror
jp
and
test
mov
jle
add
cmc
add
push
add
pop
or
xchg
mov
lock
adc
inc
adc
stos
pop
xor
clc
aad
xchg
mov
lea
rcrb
inc
aaa
mov
sub
mov
lock
mov
pop
jnp
push
into
notb
out
aam
shrb
call
mov
mov
add
add
push
add
gs
jl
push
xor
sbb
decb
test
gs
cmpsl
fimull
mov
imul
inc
and
mov
jmp
jo
sbb
mov
inc
rorb
inc
lock
xlat
add
xchg
imul
pop
mull
mov
lock
add
rclb
add
add
out
inc
add
inc
in
test
jg
or
jge
nop
cs
and
test
fstp
outsl
loopne
push
xor
dec
sub
out
lahf
loope
out
cld
nop
test
cmpb
add
loope
in
jns
fs
xor
jmp
xor
inc
bndldx
lcall
pop
int
or
cwtl
and
adc
xchg
call
add
add
jl
enter
fdivrp
cmp
idiv
inc
add
test
cmp
or
xchg
add
es
call
cs
sbb
add
push
xchg
add
nop
arpl
mov
sti
mov
and
and
mov
in
out
add
add
cli
mov
es
push
call
sti
xlat
dec
push
xor
scas
adc
push
or
jb
hlt
cmpsl
cli
mov
cmpsb
mov
bound
mov
lret
inc
pop
icebp
mov
jp
lock
faddl
adcl
or
test
je
mov
push
scas
inc
add
add
fimull
sbb
adcl
inc
add
iret
mov
jne
test
addl
inc
adc
inc
lock
pop
lret
jno
testl
or
lock
scas
mov
add
cs
xchg
jne
std
lock
lcall
and
or
and
sub
add
add
and
rorl
shll
out
sub
pop
out
xlat
mov
aad
cli
jae
xchg
mov
lods
jo
jg
ret
jae
add
cs
sub
addl
add
mov
mov
adc
cs
pushl
add
xlat
add
add
add
add
jns,pn
pop
outsl
mov
insl
sub
inc
outsl
pop
inc
cmp
or
fldcw
sub
cmp
ljmp
out
icebp
test
shl
imul
comiss
jmp
add
rcrl
popf
sbb
jmp
jle
jmp
add
call
ret
mov
cmp
fsubrl
sbb
jmp
popa
cmp
mov
ret
or
dec
call
sti
fsubrp
inc
add
call
push
repnz
int3
dec
push
sub
add
cmp
mov
das
xor
push
inc
test
and
cli
xor
cwtl
mov
mov
adc
in
mov
sahf
cmp
test
add
add
push
and
sub
divl
icebp
es
lods
push
fstpl
sti
jns
aas
ret
cmc
jnp
push
rcrb
sbb
xchg
add
inc
xchg
add
dec
test
sti
not
mov
je
js
addb
addb
mov
pop
outsl
addl
push
push
add
inc
in
bound
jne
or
pushl
add
jne
data16
cwtl
outsb
jnp
push
incb
cmp
jp
dec
orb
dec
outsl
divl
adc
xor
sti
mov
sbb
arpl
mov
cltd
decl
shlb
mov
mov
test
add
add
adc
pop
inc
das
stos
pop
dec
sub
lahf
or
icebp
aaa
je
mov
and
xchg
mov
dec
xchg
jle
xchg
pushf
sti
pop
pop
mov
fcomp
add
rcr
rorl
cli
rolb
pop
xchg
pushl
orb
out
add
cmp
insb
insl
cs
add
jle
sbb
add
add
mov
xchg
mov
fnstsw
and
dec
mov
or
jno
fs
gs
jnp
or
xchg
push
jne
fnsave
xchg
dec
inc
ror
cmpsb
cmp
jl
out
out
clc
jb
sub
je
push
and
out
lahf
icebp
cld
out
jbe
js
inc
stc
push
mov
insl
jge
sub
ja,pn
sub
add
pop
addl
pop
lahf
mov
sti
call
icebp
jnp
aam
mov
or
add
jmp
sub
xchg
sub
lahf
test
stc
loop
and
sbb
in
mov
xor
push
and
cli
push
test
lds
clc
call
add
add
cmp
sahf
mov
out
test
push
jmp
sub
inc
loopne
test
add
aaa
push
fldt
jecxz
cmp
jo
mov
jae
and
push
test
sub
add
arpl
or
testl
or
push
je
cmp
idiv
inc
mov
add
nop
pusha
ja
inc
inc
cmpl
into
cmp
jne
or
adc
clc
or
add
sbb
inc
xchg
mov
mov
bound
stos
xchg
repnz
jmp
cltd
mov
push
sbb
js
sbb
leave
mov
xchg
adc
sub
mov
cltd
incl
inc
cltd
decl
fcomps
or
dec
add
add
add
icebp
cmpl
insb
fwait
jmp
mov
jecxz
out
push
jmp
popa
popf
sbb
mov
xor
jne
mov
or
push
xchg
sti
and
in
adc
repnz
jne
test
es
cmpsl
add
or
bound
inc
mov
loop
data16
fsts
add
movsb
ss
add
add
out
adcb
cmp
sbb
test
sbb
pop
mov
test
in
mov
clc
add
cmc
imul
jmp
in
hlt
xor
cmc
lcall
mov
xor
sbb
ljmp
inc
cmpsl
int
push
mov
shll
mov
pusha
pusha
add
add
insl
stc
xor
sbb
sub
pusha
adc
out
scas
sbb
jmp
or
andl
test
imul
xchg
test
cmp
addb
adc
addl
sti
imul
insb
add
sub
stc
mov
es
cmc
add
add
dec
add
push
xchg
mov
sarb
add
jmp
dec
adcl
push
hlt
pop
mov
push
lret
or
inc
cmp
add
push
cmp
jg
add
push
cmp
mov
or
add
mov
add
stos
cmp
orl
int3
cmp
roll
add
add
loopne
divb
je
cmp
aas
add
aas
add
adc
push
inc
call
imul
xchg
jg
arpl
cmp
mov
jmp
mov
xchg
icebp
lods
sub
cmp
test
dec
sahf
mov
shrb
push
mov
fisttps
mov
lock
dec
sbb
mov
add
add
out
xchg
adc
arpl
out
jmp
sti
stos
fdiv
test
jmp
push
fisttps
mov
ljmp
mov
incl
gs
call
and
lods
aas
icebp
add
mov
sbb
dec
jg
sbb
lods
andb
sub
add
jle
call
int
xor
orl
jg
xor
jne
fwait
xchg
mov
call
pop
inc
inc
std
xor
jbe
xchg
cmp
aad
jge
mov
bnd
mov
or
jge
mov
mov
add
jmp
mov
aaa
inc
sbb
add
sub
test
lret
xchg
and
ror
lea
add
add
or
bound
shlb
xchg
add
out
add
pop
cs
repz
leave
inc
cmpsl
test
pusha
dec
ds
test
fdiv
scas
jns
jmp
fs
fs
in
call
or
call
in
jmp
jnp
add
gs
sub
add
cmpsb
add
insb
push
je
int3
cmp
add
lock
cmp
jp
cmp
ljmp
xor
push
adc
mov
decl
jno
in
pop
addb
ret
cmp
js
and
int3
dec
dec
sub
adc
movl
or
adc
xor
jns
or
pop
and
lcall
arpl
cmc
imul
idiv
add
add
cmp
ja
push
cs
mov
mov
out
outsb
std
fnstenv
ja
in
gs
jb
and
ret
call
stos
test
ja
xor
jno
cs
pushl
jno
jae
repz
lods
nop
add
add
fnstenv
cmp
call
jmp
add
add
mov
mov
js
outsl
js
xchg
out
cmp
ds
mov
lret
or
push
sti
outsb
push
into
and
in
sti
imul
adc
shlb
pop
fidivrl
cmpsl
mulb
test
add
add
les
add
sarb
scas
jp
adc
xor
out
or
mov
aas
bnd
mov
mov
jae
bound
hlt
jmp
ret
sbb
push
lods
or
add
mov
inc
mov
or
sti
push
les
xchg
mov
sbb
xor
push
adc
sub
jns
jae
xor
rolb
add
test
sti
out
cmp
das
or
mov
sti
bound
test
stos
js
cmp
or
ficoml
shr
dec
cli
jbe
in
adc
xor
int
dec
or
out
jno
add
xor
cltd
adc
mov
mov
js
push
shr
cmc
incl
add
sub
xor
pop
incl
add
add
mov
test
cmp
imul
cmp
adc
jmp
dec
pop
insb
fadds
pop
mov
clc
inc
xor
mov
xlat
xchg
cmp
test
pop
cmp
pop
cmp
dec
adc
in
add
outsl
loop
fidivs
push
xor
jle
add
jmp
cmp
repz
lods
xor
or
jb
and
test
gs
jae
inc
jp
imul
cmp
add
push
or
xor
jns
sbb
rclb
or
inc
pusha
cld
stc
test
push
cld
jmp
bound
aas
stos
cmp
add
leave
cmp
pop
cli
mov
add
pop
inc
fidivl
and
jp
jl
or
cmpl
jbe
fiaddl
sub
insl
sahf
pop
jp
inc
scas
adc
add
sti
addb
and
add
test
push
or
or
sbb
inc
inc
and
add
add
add
add
adc
cmp
xor
add
je,pt
icebp
xchg
jp
xor
push
sbb
sub
sub
gs
jl
push
mov
or
test
stc
testl
lods
jne
mov
or
push
lods
cmp
popf
scas
jne
les
cli
or
add
add
add
divb
cmp
or
add
xorb
dec
aad
jmp
jnp
sti
in
sub
push
std
sahf
scas
xor
aas
stc
call
add
add
subl
idiv
inc
cld
or
sbb
sti
incl
cmp
test
daa
and
xchg
movd
add
add
and
add
mov
mov
idivl
subl
call
sti
inc
sti
add
lds
clc
or
add
add
fwait
pop
repnz
ss
and
add
xchg
idiv
shrb
and
xlat
adc
lea
sti
leave
outsb
mov
dec
sub
pop
or
add
lods
es
jmp
cmp
dec
adc
loopne
mov
repnz
test
or
test
daa
mov
je
repnz
cmp
test
loopne
repz
cli
mov
adc
xor
inc
dec
and
inc
mov
or
bound
mov
add
out
pop
icebp
or
mov
cmpb
outsl
leave
rorl
push
pop
fwait
inc
mov
sahf
orl
mov
mov
bnd
call
repz
inc
fildl
popa
jg
jbe
mov
ja
push
xor
jbe
push
clc
mov
and
insb
add
add
mov
outsl
add
jl
sbb
add
ljmp
inc
std
and
sti
pop
jp
dec
xchg
movsb
mov
test
cs
test
jge
gs
adc
and
and
mov
add
add
pop
jb
jno
mov
hlt
adc
test
sub
add
add
data16
push
sarb
xor
ret
mov
inc
pop
adc
inc
push
pop
xor
pop
or
mov
ss
push
mov
add
xchg
mov
or
pop
or
rcr
int3
mov
inc
clc
ret
cmp
jbe
push
hlt
jp
xchg
out
xadd
loope
add
add
inc
out
test
add
mov
push
cmp
clc
sarb
idiv
mov
inc
add
inc
testl
dec
jnp
dec
push
addr16
xchg
or
mov
out
inc
das
fsub
pop
add
xchg
ds
insl
fisttpll
stos
jbe,pn
leave
add
add
add
dec
std
int3
movsl
and
aaa
jbe
adc
fidivrl
sbb
decb
jo
pushl
pushf
and
aam
add
faddp
imul
or
ds
mov
jns
xor
cmc
out
sub
inc
xchg
add
dec
push
aas
sub
out
add
and
jmp
ret
add
jae
cs
add
leave
dec
repnz
add
mov
cmpsl
fs
test
imul
testl
add
mov
add
mov
std
gs
jmp
fs
daa
aaa
jo
inc
and
arpl
push
jmp
mov
jmp
inc
out
mov
dec
jle
ja
add
cs
add
repnz
in
pop
and
jg
sub
mov
xor
divb
jno
pusha
divb
and
jnp
sbb
mov
mov
add
inc
loope
xchg
and
in
sub
add
into
jo
insl
xchg
sub
lds
stc
aaa
xchg
add
add
jg
xor
add
lahf
add
in
xor
pushf
roll
pushl
mov
mov
call
aam
filds
test
call
sldt
xchg
sub
jl
dec
cmp
cmp
push
or
roll
cmp
pusha
and
mov
or
jl
lods
adc
xchg
icebp
mov
or
sub
test
sbb
push
incl
jmp
push
icebp
ss
adc
xor
pop
jp
maskmovq
mov
movsb
sbb
fwait
sbb
ret
inc
mov
les
jne
loop
sti
fwait
push
sar
mov
dec
ljmp
and
sub
dec
adc
pop
cmp
ljmp
sti
add
add
jne
ljmp
pop
test
das
std
push
aaa
pop
adc
js
cmp
or
addr16
or
into
mov
cmp
je
fidivl
mov
arpl
mov
or
mov
cmp
add
inc
sub
notb
sub
mov
sub
imul
cmp
add
cmp
clc
mov
pop
adc
int
in
daa
xor
cmp
popa
sbb
outsb
stos
sbbl
push
stos
cmc
mov
sub
xor
outsb
outsb
rorl
cld
pop
test
hlt
add
imul
adc
clc
push
or
mov
add
scas
notl
jmp
pop
push
jmp
fldcw
rcrb
or
addr16
push
sub
pop
call
pop
stc
mov
sub
adc
outsb
or
sti
movb
mov
sub
ret
aas
out
sub
dec
jmp
pusha
or
jb
inc
test
add
sub
push
jmp
jecxz
jmp
add
add
sbb
imul
mov
roll
xchg
icebp
add
inc
add
jmp
xor
inc
into
aas
jmp
xchg
cmc
loop
les
add
sarb
shl
ds
add
scas
dec
adc
ret
shrb
or
sarb
jns
in
fdivs
sti
push
pop
test
add
mov
out
inc
scas
in
mov
decl
jae
inc
lsl
sbb
pop
xchg
dec
jnp
cs
incl
xor
into
cmpsl
mov
jecxz
mov
mov
push
rclb
pushl
sub
xchg
add
and
cmp
add
orb
stc
and
xchg
add
arpl
dec
inc
sub
mulb
sti
les
decl
dec
addr16
jmp
add
aaa
or
lock
call
add
cmp
jae
push
inc
imul
push
fisttps
fimull
out
xor
fidivl
shrl
sub
jg
jae
sti
imul
cli
aaa
subl
jb
jae
les
mov
add
jnp
pop
pop
nop
add
stc
adc
or
jae
adc
cld
leave
es
jae
test
add
mov
shlb
je
jae
mov
adc
sub
add
imul
inc
repnz
std
divb
xor
test
cmp
adc
mov
out
mov
ja
aad
sub
sub
xor
fs
xor
stc
cli
or
stc
and
testb
ret
inc
sub
sbb
pop
pop
sub
leave
sub
mov
shrb
mov
sbb
idiv
adc
jmp
add
add
out
xor
jns
testb
and
jne
jmp
je
int3
sub
jne
inc
divb
out
je
and
call
lret
test
sbb
xchg
shr
or
out
testb
add
cltd
ss
shl
add
mov
call
in
cld
inc
mov
call
add
add
cmpsb
inc
add
cmpsb
dec
add
cwtl
pop
or
movsl
ss
outsb
xor
sbb
mov
lock
out
sbb
out
das
push
lcall
mov
les
std
das
mov
out
cmpsl
fwait
imul
add
jns
loope,pt
stos
aas
ret
imul
add
add
pop
cld
lds
loop
jg
pop
jbe
fisubrl
sbbl
sbb
mov
sub
mov
mov
stos
mov
mov
mov
addb
mov
add
and
add
js
pop
add
add
ret
push
lret
lds
pop
lds
inc
loop
out
jmp
pop
add
add
aaa
lds
mull
xor
jmp
divl
or
jnp
pop
clc
xchg
fisubrl
aas
loop
divl
outsl
mov
les
jnp
adc
cmp
repnz
sbb
sub
aad
or
xor
xorl
pushl
scas
sbb
outsb
aas
outsb
ja
cmp
add
call
shrl
add
imulb
rolw
data16
jmp
sub
add
test
jmp
lods
xchg
decb
out
jecxz
and
ja
push
sti
fisubrs
cmc
fsub
push
addl
data16
testb
pop
ljmp
add
fidivrs
movd
les
add
pop
sub
sbb
je
push
leave
ffree
rorb
jnp
xchg
pop
push
add
cmp
in
idiv
dec
stos
or
or
rcrl
jmp
sbb
sbb
cmp
cmp
add
add
jge
repz
testb
inc
adc
and
add
cs
add
add
cs
jle
push
cld
mov
pop
call
scas
jno
shrl
insl
fisubl
cmp
testb
andl
insb
sti
repz
es
sbb
jmp
imul
cld
mov
call
out
jo
inc
insl
mov
in
fldenv
mov
xor
inc
jge
add
add
insb
adcl
insb
sti
imul
sub
pop
push
pop
test
add
cmp
das
add
add
call
add
daa
or
xor
sbb
mov
mov
pop
aad
arpl
ljmp
add
xchg
insl
bound
hlt
sub
or
push
push
enter
das
pop
roll
add
repz
inc
cs
roll
mov
mov
jecxz
cs
clc
test
mov
orl
jmp
mov
in
out
xchg
addr16
std
dec
mov
sbb
sub
ja
fisttpll
mov
call
call
loope
in
sub
jns
aad
hlt
adc
mov
add
add
add
xor
inc
aad
mov
fucomp
sub
ja
cmc
adc
add
lock
sbb
pop
mov
sub
jns
pop
add
and
testb
inc
adc
mov
mov
mov
mov
adc
add
ret
mov
xor
add
jae
jp
jecxz
decl
pop
bound
adc
add
testb
inc
adc
mov
push
mov
pop
loop
inc
lret
xchg
dec
push
cmpl
incl
add
data16
aaa
data16
push
idiv
cs
or
imul
add
lock
adc
jecxz
add
add
push
imul
das
or
push
clc
mov
fmulp
xor
adc
mov
je
rcll
jp
in
mov
gs
stc
adcl
imul
and
xchg
or
jp
inc
mulb
push
clc
and
jmp
mov
xchg
decl
lret
scas
jl
shrb
outsl
add
add
jmp
sbb
xchg
or
cmp
insl
inc
push
mov
add
mov
adc
fdivr
jge
sbb
sbb
insw
das
aam
jge
add
rcll
hlt
les
sbb
xchg
sub
jl
sub
jge
mov
call
inc
mov
add
adc
ret
mov
outsl
cvtps2pd
pop
pop
inc
test
dec
jmp
dec
pop
aaa
mov
or
mov
and
loopne
sti
xchg
cmp
jne
mov
jl
mov
je
pop
jne
mov
pop
sar
sti
movsl
add
scas
mov
jmp
mov
pop
sti
ljmp
ss
add
xchg
movsb
xchg
xchg
mov
lods
push
or
xchg
jge
xorb
fcomip
repz
cli
jle
dec
pop
je
lods
push
pop
add
outsb
pop
cmp
push
test
out
inc
dec
aas
lret
mov
sub
push
insb
sbb
push
mov
xor
clc
fldl
or
jp
add
add
push
jg
call
mov
jg
js
testb
sarl
dec
out
pop
sub
or
bnd
jle
adc
push
out
add
out
ljmp
stos
mov
jmp
add
repnz
cmp
lods
shrd
stc
or
ljmp
jecxz
cli
adc
jle
cmp
roll
push
gs
cmp
and
gs
scas
pusha
jnp
cs
sub
gs
insl
daa
sub
dec
fstl
rclb
jle
movsb
gs
cmp
jmp
lods
jo
jae
ljmp
xor
xorb
cs
jle
pop
pop
gs
or
test
add
push
pop
inc
jnp
repz
inc
xor
pop
out
data16
pop
sbb
pop
into
pop
push
in
sub
insb
enter
rolb
sub
insb
inc
pop
lret
loop
in
and
sbb
jbe
pop
lret
mov
mov
add
lock
hlt
lods
es
movsl
mov
sbb
adc
nop
pop
add
add
pushl
or
and
or
pop
sti
push
bound
repnz
sbb
pop
sti
outsb
push
inc
aad
int
movsl
jae
out
mov
lods
sub
rcr
aaa
std
push
xchg
adc
cli
fnstcw
aaa
adcl
add
call
dec
push
aas
into
out
cmp
fnop
add
add
les
repnz
lea
sti
loop
out
push
pop
sti
mov
xchg
das
testb
cld
incl
inc
testb
dec
adc
shr
add
testb
outsl
jae
add
xor
in
jp
add
testb
add
adc
out
andl
testb
rclb
fiadds
add
cs
cld
incl
out
lods
inc
fucomi
lods
dec
lret
or
les
shlb
shlb
add
add
adcb
jecxz
jb,pn
mov
gs
mov
push
loope
dec
dec
mov
fiaddl
leave
xor
and
add
out
popa
ficompl
inc
push
gs
ljmp
scas
int
lret
push
add
out
and
add
out
jbe
jne
push
cltd
add
je
or
ds
outsb
addr16
jne
ss
add
out
xchg
push
rorl
icebp
roll
call
stos
cmpsb
fadds
sbb
sti
sarl
adcb
or
decl
andb
ror
or
sub
shl
fmul
out
mov
fiadds
sbb
mov
mov
loop
nop
cld
call
xor
jg
mov
add
pop
dec
mov
mov
out
pusha
mov
mov
xlat
and
into
lock
sbb
inc
loop
push
or
add
mov
pop
mov
inc
mov
popa
arpl
rcl
and
dec
leave
pusha
lds
adc
add
xor
fs
add
add
add
out
ds
ret
pop
adcw
sub
call
mov
test
pop
jne
mov
sti
mov
aas
push
ss
pop
push
faddp
add
pop
lods
aas
dec
test
sub
cmp
jg
push
push
int
out
push
out
pop
ds
adc
loopne
add
xchg
jnp
push
xor
jno
fidivs
add
pushf
xchg
add
add
addl
jle
xchg
add
xchg
add
pushl
pop
mov
mov
sbb
insb
nop
rclb
cli
xorl
je
out
cld
pop
xchg
setb
add
pop
jp
cld
add
add
mov
lcall
inc
push
clc
cmp
rdtsc
std
divb
push
scas
nop
xchg
cmp
clc
cmp
add
xchg
mov
inc
push
xchg
rcll
inc
dec
addr16
rorl
mov
aaa
pushl
pop
sti
xchg
sti
mov
and
adc
pop
jne
pop
xchg
add
sti
or
pop
jne
push
push
add
add
out
jno
xlat
or
mov
mov
xor
orl
addr16
pop
adc
pop
jg
push
incl
test
loop,pn
and
pop
jne
add
xchg
sub
mov
js
call
xor
push
xor
test
mov
xor
sbb
pop
xchg
jp
or
xchg
aam
add
mov
cbtw
push
push
pop
or
sarb
sub
mov
lock
in
fcoml
sub
xor
or
push
hlt
push
adc
ss
sub
outsl
fiadds
push
sti
add
add
cmpsb
mov
jne
cmp
or
add
cmp
push
jne
cs
push
scas
js
xchg
js
out
dec
push
sti
fs
push
test
and
push
sti
jbe
mov
inc
or
insl
ret
cli
fmull
int3
sbb
mov
push
cli
mov
or
ljmp
sti
pushf
xor
push
test
inc
add
outsl
add
add
pushl
cs
call
cmpb
xchg
stc
mov
sti
mov
orl
inc
or
push
mov
push
out
add
sbb
mov
addb
and
or
dec
arpl
dec
das
or
or
incl
loop
les
add
inc
pop
inc
into
inc
pop
jp
push
mov
mov
and
add
adc
rol
sti
mov
das
adc
jnp
push
jne
cli
rolb
push
cli
cmp
jmp
movsb
stc
sti
fstps
test
pop
pushl
ljmp
dec
xchg
dec
das
bound
or
pop
stos
jae
into
mov
mov
lock
ja
cmp
into
mov
movsl
push
arpl
add
add
sub
into
mov
movsl
xor
mov
fstl
sbb
push
je
into
mov
add
addr16
pop
fscale
ljmp
add
dec
sarb
sub
mov
pusha
shr
arpl
in
jl
je
mov
loop
and
lods
mov
lds
or
addr16
mov
lret
rcrb
add
add
stos
sbb
aaa
test
cs
add
out
mov
repz
pop
subb
lock
iret
insl
mov
cs
mov
push
cmp
inc
add
and
stos
jae
test
jmp
xchg
dec
add
sub
sti
mov
sub
or
imul
cltd
out
ss
add
loopne
jg
jmp
stc
ss
dec
ljmp
or
cmc
js
popf
mov
xchg
jmp
pop
jge
mov
sub
into
ret
int
jo
das
jg
addr16
mov
cli
data16
cmp
in
pusha
decb
pop
add
mov
jmp
pushf
mov
roll
add
add
divl
test
cmp
inc
sti
mov
jns
in
mov
mov
add
call
adcl
divl
pop
scas
rorb
sti
add
dec
jmp
dec
or
xor
push
test
or
jb
divl
fisubl
mov
inc
addl
add
cmp
cs
sti
sub
mov
cs
add
data16
and
push
jne
lods
ror
cs
xchg
sbb
rcr
icebp
int
sti
inc
mov
aas
loop,pn
pop
sub
scas
std
out
cmp
pop
hlt
pop
inc
mov
test
lods
fwait
add
pop
jnp
mov
data16
sarb
push
decl
add
jns
inc
or
into
out
ret
imul
push
sti
movsl
add
inc
dec
push
dec
ret
lock
inc
cmpsb
add
add
add
sub
jge
call
push
cmc
dec
into
dec
jp
add
in
inc
cmpsb
add
inc
test
push
test
hlt
sub
in
leave
iret
add
add
push
sub
mov
cs
mov
imull
std
jbe
aam
cmp
and
and
xchg
pop
gs
jp
cmp
sbb
dec
jne
cmpsl
inc
xchg
ficoml
shl
mov
jmp
add
ds
pop
jmpw
sbb
inc
jne
mov
push
push
icebp
sti
cli
pushf
xor
loope
pop
push
add
add
pop
out
sub
jns
std
cmp
pop
aad
bound
add
notb
mov
imul
inc
std
mov
adc
rclb
push
out
pop
push
test
add
xor
or
inc
cld
insl
push
xchg
mov
xor
push
test
loopne
xor
add
jns
testb
aas
mov
ljmp
pop
mov
sbb
mov
divb
mov
or
cmp
call
dec
mov
sti
lcall
out
cmp
mov
shr
mov
inc
jl
or
idiv
pushf
nop
addr16
in
sar
pop
or
jb
das
outsb
sbb
or
aaa
jmp
add
add
xor
mov
dec
sti
add
and
sti
xor
cltd
pushl
push
ds
mov
dec
sbb
pop
pushl
pop
incl
icebp
movsb
repz
arpl
loopne
ljmp
push
mov
inc
inc
dec
jne
sub
pop
movb
je
xor
mov
dec
aaa
jge
add
decb
imul
rolb
mov
cs
gs
jl
push
std
outsb
pop
test
enter
idiv
ret
bound
jle
lret
arpl
in
std
mov
shr
push
out
pop
shll
add
add
out
push
or
dec
je
mov
jg
aad
int3
jle
add
icebp
dec
pop
in
pop
dec
push
hlt
mov
in
cmp
sarb
clc
arpl
rclb
pop
lods
arpl
mov
inc
sti
jb
les
incl
cmc
subl
lret
mov
sbbl
add
les
inc
movsl
mov
add
xchg
add
stc
js
lds
dec
cmp
dec
sti
ret
or
pop
sti
out
cs
pushl
pop
or
jmp
arpl
add
inc
adc
cs
push
mov
sbb
or
jne
vorps
add
jne
stos
stos
fsubrs
insl
jmp
mov
sbb
xchg
pop
push
jmp
add
pop
lds
aas
jp
hlt
push
insb
or
pop
mov
mov
cmp
inc
and
test
xor
divb
and
bound
xlat
fsubrs
mov
divb
scas
je
enter
add
ljmp
aam
je
aas
mov
inc
push
sbb
dec
jmp
dec
cmp
inc
cli
mov
add
xor
subb
dec
xchg
jmp
idivl
pop
sbb
or
movsl
enter
and
mov
sbb
shlb
push
adc
dec
jne
out
dec
sar
out
sarb
clc
das
push
incl
jae
scas
out
loop
testl
add
mov
push
scas
inc
cmc
gs
add
xchg
inc
lret
add
or
add
dec
test
jne
cld
jp
inc
sbb
mov
xor
out
sbb
dec
mov
test
add
add
push
inc
push
add
jns
dec
mov
fdivrl
sbb
jl
sbb
pop
mov
call
or
in
jmp
dec
mov
jl
add
add
cmc
gs
inc
cli
adcl
xchg
ret
cmp
mov
out
push
icebp
jb
dec
test
jecxz
out
pop
ret
inc
or
pop
jecxz
sbb
scas
inc
add
test
jge
call
mov
fisubrs
jl
pop
cmp
aas
push
testl
inc
add
add
lea
jp
or
add
jmp
arpl
adc
into
punpckhdq
jae
int3
repnz
incl
test
incl
test
mov
cmp
addr16
mov
xor
nop
jp
add
incl
or
fistpl
clc
and
push
loop
add
shlb
ljmp
jp
daa
sub
mov
incl
jp
loop
mov
test
clc
or
push
mov
test
ljmp
adcl
or
ljmp
cmp
push
pop
pop
lds
popa
sti
out
into
mov
cwtl
pop
testl
lds
cmp
hlt
xchg
sub
add
dec
pop
mov
xor
or
leave
rclb
dec
sbb
fcmovbe
sbb
fidivrs
push
and
inc
jne
scas
add
or
add
stc
add
pop
icebp
xlat
sbb
cmp
and
jae
add
add
mov
add
mov
es
mov
es
mov
es
mov
es
mov
es
mov
es
mov
es
mov
add
mov
es
add
add
add
mov
add
cmpsb
add
mov
stos
sub
add
sub
rorb
sub
jns
stos
sub
adc
dec
stos
sub
push
dec
sub
inc
dec
sub
clc
dec
sub
jmp
sub
arpl
sub
push
sub
in
push
sub
loopne
sub
aad
sub
int
sub
jnp
sub
stc
inc
sub
cmp
sub
pop
sub
sub
sub
cmp
stos
add
add
push
inc
stos
sub
addl
add
pop
aad
rcrl
fdivrl
lds
addl
int
xchg
add
pop
xchg
add
test
les
add
pop
xchg
add
xchg
add
pop
add
add
inc
push
add
ds
add
inc
inc
add
fs
add
add
add
pop
jle
add
add
pop
jp
or
push
or
xor
sbb
adc
sbb
push
sub
and
ss
and
or
pop
push
add
and
sbb
push
adc
sub
sub
addr16
dec
ja
sbb
pop
adc
xor
push
inc
or
dec
addr16
mov
repnz
cmp
out
add
add
jmp
push
loopne
jecxz
ljmp
add
add
add
add
ljmp
cld
ljmp
int3
ljmp
fdivr
cmpsb
add
cmpsb
add
shll
add
aad
add
aad
add
fsubs
add
cmpsb
add
add
out
shll
add
mov
cmpsb
add
aad
add
es
es
aad
add
aad
add
movsb
es
movsb
es
movsb
es
movsb
es
movsb
es
movsb
es
mov
es
mov
es
mov
pop
sub
jl
stos
sub
sub
stos
sub
add
sub
sub
sub
cmp
pop
cmp
and
dec
jb
add
ficompl
roll
jo
pop
mov
pusha
jle
mov
test
and
or
inc
or
rorl
fdivrp
or
jmp
push
add
jmp
add
add
sub
mov
ret
or
mov
adc
dec
jmp
mov
aad
sti
mov
mov
xor
testb
mov
clc
cld
shll
repz
aas
sti
addb
and
nop
outsl
add
mov
dec
mov
xlat
stos
in
les
or
je
in
call
xor
test
cs
ds
lods
mov
mov
xchg
hlt
mov
dec
jbe
push
pop
mov
call
std
mov
pop
mov
xor
cmpsl
xchg
outsl
call
add
sub
scas
test
xchg
ds
or
add
xor
sti
movsl
test
mov
daa
mov
popf
lds
outsl
push
and
outsl
scas
mov
aas
xchg
and
add
inc
mov
sbb
cmp
pop
mov
cmp
add
cmp
xchg
cmp
mov
fldl
cmp
xchg
xchg
pop
inc
jo
mov
insb
loopne
add
hlt
cmp
insb
or
xor
lcall
out
xchg
mov
stos
or
add
mov
cmpsl
out
sbb
adc
mov
cli
call
lret
inc
add
repz
fldt
add
sub
mov
in
add
mov
test
hlt
sub
ss
jbe
xor
add
aas
stc
icebp
stos
jp
push
insb
xor
sti
inc
mov
push
ds
xor
pop
inc
xchg
mov
add
xchg
adc
xchg
popa
cmpsb
sar
out
out
addb
mov
mov
sti
into
mov
add
outsb
push
scas
inc
push
sub
data16
jae
add
add
lret
add
add
enter
jns
imul
mov
mov
sti
mov
popf
xor
shl
pop
outsl
imul
mov
add
in
mov
shl
pop
aam
add
lcall
jb
idiv
mov
rorl
push
jle
incl
add
js
push
mov
out
repnz
inc
and
add
repz
xlat
loop
lea
sub
sbb
fwait
or
lahf
stos
and
shrd
inc
jg
sbb
mov
lods
dec
push
add
sub
adc
sub
out
adc
jg
daa
xchg
add
ficompl
mov
sub
add
cmpsl
arpl
repnz
add
bnd
or
loope
ss
add
jmp
loop
mov
jmp
rorl
and
test
xor
cmp
and
data16
push
mov
ljmp
gs
adc
add
roll
lret
cli
xchg
xchg
adc
sub
lods
arpl
sarl
xor
add
mov
and
mov
imulb
push
in
mov
jne
inc
fldl
sub
inc
mov
jae
out
test
inc
mov
and
mov
out
test
cmp
adc
shll
xchg
cmpsb
mov
test
div
inc
xor
out
out
and
popa
sahf
xlat
cli
dec
inc
or
xor
sub
cmp
mov
push
add
jmp
divb
or
dec
scas
inc
mov
ss
or
ljmp
or
idiv
pusha
add
add
add
mov
xchg
cld
ljmp
mov
inc
insb
and
sbb
mov
shl
xlat
test
ljmp
idiv
nop
in
xchg
nop
cmc
adcb
shlb
sub
mov
idiv
jo
inc
nop
add
xor
movsl
adc
idiv
pop
mov
jne
cmpsb
cmp
cmp
cmp
add
add
jo
jae
xchg
outsb
rorb
sbb
jg
xchg
and
pop
lods
mov
jae
cmpsb
jns
jno
cmp
loop
clc
push
xor
push
adcb
add
scas
sar
mov
cmp
ja
mov
jne
aas
lret
or
out
sub
jl
push
inc
cmp
or
jae
mov
aaa
fs
je
add
dec
cs
or
add
jne
rcr
fldcw
xchg
push
add
ja
leave
pop
mov
add
add
jne
rcrb
insb
lods
aad
das
enter
jg
add
jns
xor
test
iret
cmp
push
insb
leave
cmp
mov
xor
rcr
xchg
mov
xchg
xor
ss
pop
cmp
pop
pop
inc
ret
fs
divl
ror
add
xor
add
sub
xor
xchg
adc
sbb
cmc
xor
and
ret
or
add
jmp
push
xor
or
call
jns
cmp
stos
push
dec
add
add
sti
cmpsb
and
pop
xchg
jle
xchg
xor
sti
insb
mov
sub
push
xor
fwait
jmp
add
add
andb
xchg
cmc
idiv
fdivrl
push
ljmp
divb
or
cmc
idiv
pusha
push
adc
lcall
cmp
je
add
loop
jge
dec
dec
shll
xor
push
jnp
push
imul
or
push
icebp
inc
pop
sbb
pop
aam
aas
lcall
jnp
inc
test
testb
sti
jp
push
jmp
incl
ja
and
out
sbbb
rorb
hlt
aad
hlt
sbb
jne
adc
cmp
add
add
xchg
iret
jle
stc
add
xorb
cmp
inc
in
aas
subl
mov
mov
push
inc
stos
add
sbb
xchg
inc
jp
cli
clc
test
sbb
mov
sbb
incl
sub
daa
repz
add
sbb
fwait
dec
testb
jle
add
mov
jge
outsb
add
add
das
push
cmp
fs
hlt
cs
test
negl
inc
shrb
push
adc
test
cli
cmp
add
outsb
xchg
cli
aaa
movsl
adc
inc
pop
add
push
das
loop
cs
repnz
mov
push
jo
mov
roll
inc
mov
jmp
outsb
leave
cmp
mov
mov
test
add
ss
sbb
testb
sub
cmpsb
call
das
cmpsb
lcall
loope
push
pop
loopne
test
ja,pn
in
cmp
sub
add
push
lods
jecxz
lods
sbb
mov
clc
sub
jne
jl
int
shlb
cmpsb
les
add
pushl
insb
sub
add
adc
xor
push
sub
and
adc
add
push
je
dec
and
testb
push
sti
push
scas
stos
fdivrp
nop
add
sub
add
cmp
add
push
inc
add
add
je
jns
sbb
xorl
ret
jnp
mov
add
push
and
call
xlat
add
jne
cmc
je
mov
or
ljmp
or
iret
inc
add
pop
fmull
mov
in
int3
inc
add
push
nop
pop
sub
cs
xor
push
jle
and
sub
xor
ss
adc
xor
sar
sbb
dec
aas
mov
add
sbb
incl
add
fsubs
sub
jp
cmp
cmpb
add
loop
call
movsl
inc
or
sbb
cli
and
inc
movsb
or
jmp
xor
jmp
jp
sub
int
mov
fisubrs
dec
sub
loopne
xor
mov
cmc
movsb
dec
add
add
pop
mov
jge
out
or
cmp
in
test
add
add
push
mov
aas
mov
mov
adc
aad
cmpsb
add
out
adc
fsts
add
mov
lock
hlt
xor
sub
aam
repnz
jns
sub
xor
adc
add
add
sub
add
sub
ljmp
add
cld
mov
xchg
cmp
incl
xor
movl
jb
sbb
dec
cmp
test
cmpsl
pop
inc
xlat
dec
shrb
xchg
or
setae
adc
aas
jmp
stc
xchg
pop
mov
add
fmull
aas
jmp
dec
test
ror
test
lds
jle
xor
add
inc
mov
push
cwtl
or
add
inc
push
cmp
test
mov
rclb
cmp
adc
xor
shlb
les
inc
sti
add
in
adc
cmc
cmp
pop
mov
ret
add
add
inc
mov
push
add
stos
inc
cld
mov
adc
ja
sti
test
sbb
add
add
inc
or
out
jne
int3
mov
push
pop
add
cs
dec
out
xchg
cmp
lods
insl
xor
inc
add
or
mov
lods
hlt
sti
std
lcall
mov
pop
mov
jle
add
cmp
je
bound
outsb
hlt
pop
add
sbb
and
fsubrs
lcall
movb
cli
test
movsl
or
stc
xchg
adc
stos
add
xor
pop
or
dec
add
push
sbb
mov
sbb
rcrb
add
add
add
add
sub
xor
fadd
adc
es
incb
mov
shrl
lods
in
arpl
inc
or
add
rcl
add
aad
xor
inc
std
out
sub
jl
and
inc
add
cmp
addl
sub
mov
sub
ficoms
lods
movaps
add
xor
xor
inc
inc
sub
popa
icebp
lret
sbb
push
jb
rorl
in
mov
iret
dec
add
pop
inc
sub
add
js
insl
push
or
stc
in
and
cli
fdivl
stos
setp
stos
or
xchg
sub
fcompl
inc
jne
cmp
cli
xchg
add
adc
bound
add
in
int3
enter
add
loopne
in
xchg
orb
push
push
mov
push
inc
cld
daa
xor
push
jo
pop
mov
lock
lcall
and
aaa
or
sar
addb
mov
clc
lods
adc
mov
jge
add
je
jg
cld
mov
divb
push
divb
aad
lcall
js
jne
add
imull
out
mov
test
repz
aad
hlt
pop
in
add
pop
sub
mov
push
jbe
xchg
test
enter
dec
cmp
out
je
ljmp
imul
sub
movsl
pop
xor
mov
out
push
jns
aad
or
shrb
add
scas
inc
mov
add
jno
jbe
push
mov
sar
stc
xchg
inc
or
bound
ror
fnstcw
add
sbb
mov
add
lock
mov
sub
out
std
lods
jge
add
jg
push
sti
popf
pop
movl
and
ss
jns
sub
lods
mov
add
add
out
and
les
add
call
ficoms
cmp
xchg
stos
and
jp
xor
fnstsw
out
sub
das
das
lods
pop
adcb
mov
and
scas
in
test
data16
pushf
stc
jp
push
loopne
call
gs
stos
clts
lcall
imul
add
stos
add
sub
sbb
lds
icebp
rclb
rcl
imul
sbb
ficoms
push
and
jg
ss
jg
add
xchg
sub
icebp
fs
add
out
fisttpll
jb
ja
push
js
sti
push
scas
inc
jne
xor
aad
in
mov
pop
add
add
mov
hlt
dec
push
sbb
pop
push
cmp
xor
jne
add
mov
adc
incl
mov
idiv
sarl
jmp
cmpsl
je
outsl
adc
decl
mov
add
pop
movsb
inc
hlt
popf
adc
inc
repz
dec
push
test
hlt
add
add
add
or
cmp
mov
pop
shll
add
push
test
and
repz
inc
mov
ss
pop
dec
and
mov
inc
adc
ljmp
jmp
push
out
jne
popf
inc
sti
fisttpl
loop
sub
stc
imul
sti
mov
add
movsl
sub
sub
in
and
push
movsl
jne
in
push
cli
jl
sbb
jl
push
sub
sub
je
loope
mov
shll
scas
sbb
loopne
jae
idivl
cmpsb
popf
sbb
and
jmp
mov
push
sub
add
inc
sti
hlt
jle
jmp
jne
sub
test
pushf
shrb
jl
pshufw
mov
mov
in
mov
pop
leave
sbb
mov
shrb
and
mov
push
popa
mov
sub
out
add
add
lahf
shr
fmul
xchg
inc
into
push
pop
push
test
fucomp
test
repnz
pop
push
add
call
sbb
data16
cmc
lret
sti
add
add
jle
inc
daa
or
jno
sti
mov
xchg
sbb
sub
je
cmp
jo
adc
xchg
scas
aas
je
mov
es
xor
add
test
and
push
bound
test
lods
sub
add
pop
or
ret
jg
push
test
cwtl
je
jg
dec
incl
add
jecxz
pop
hlt
mov
or
add
mov
push
inc
pop
jmp
adc
out
add
cltd
mov
movsl
movsb
out
test
dec
push
cwtl
inc
clc
xchg
dec
jecxz
and
testb
dec
repz
or
cld
mov
lcall
iret
icebp
inc
hlt
xchg
les
cs
cmp
mov
add
add
sub
mov
in
cmp
cli
insl
mov
mov
mov
ss
sub
in
mov
stos
jmp
icebp
sbb
nop
leave
or
add
mov
jne
ss
mov
movsl
neg
shrb
and
into
dec
movsl
insb
sbb
std
dec
and
add
add
lods
mov
sbb
insl
and
scas
jl
sub
int
repz
push
mov
mov
stc
cmpsb
call
add
xchg
loopne
stos
mov
push
xchg
sti
cltd
leave
mov
jae
cltd
and
sbb
adc
shr
outsb
xchg
repz
in
scas
and
shll
out
bswap
out
test
add
add
inc
and
xchg
sar
xchg
jbe
sbb
into
lret
std
mov
add
sbb
inc
sub
call
cmpsb
insl
xchg
ficoml
in
add
iret
cli
dec
or
out
in
scas
sbb
movsb
jnp
ret
xchg
push
sbb
lds
je
or
cmc
and
adc
pop
and
add
outsb
mov
cmp
cmp
mov
add
lcall
push
cmc
xchg
fldcw
mov
cmp
add
jmp
push
ja
push
js
pop
adc
cmp
ja
cmp
ja
movb
add
insb
je
add
sbb
inc
pop
sbb
add
dec
inc
pop
adc
or
js
call
movb
cmpsl
jo
and
push
divb
not
adc
push
test
add
add
pop
adc
ret
fs
js
xchg
psrlq
call
inc
pop
and
xlat
nop
inc
adc
mov
mov
movsb
or
mov
add
or
lods
xchg
and
mov
sbb
out
lea
out
jmp
daa
lods
jno
xor
cmp
test
or
add
cs
addr16
mov
or
dec
xor
push
mov
dec
mov
decl
mov
decl
loopne
and
popl
add
lcall
push
xchg
sbb
test
imul
cwtl
or
lea
jle
sub
outsb
add
push
push
add
cwtl
sub
sub
cmp
mov
sti
rcll
popa
cwtl
or
lock
mov
add
gs
mov
mov
mov
and
sub
pop
jmp
or
add
std
push
pushf
repz
pop
hlt
cmp
jo
dec
lock
or
jo
add
sub
add
jmp
sbb
add
stos
in
es
sub
or
fs
or
add
jmp
popf
sbb
shlb
add
jmp
push
andb
mov
jne
je
dec
sbb
jmp
dec
sbb
pop
jno
pop
mov
imul
pop
movl
add
xchg
push
add
push
in
xor
push
call
xchg
enter
jbe
mov
divl
mov
decl
add
add
push
out
cmc
decl
ja
cmp
dec
pushw
outsl
dec
inc
dec
pop
inc
xchg
adc
lds
imul
dec
dec
call
je
pop
mov
or
jae,pn
pop
lods
fistps
call
stos
out
adc
mov
jecxz
pop
mov
pop
dec
movsl
std
push
mov
inc
aas
imul
xchg
mov
pop
in
xor
push
movsl
push
in
xor
lcall
int
pop
xchg
or
xchg
xchg
jnp
ss
or
popf
sbb
sub
pop
pop
scas
sbb
sub
jmp
lret
sbb
xchg
xor
mov
adc
outsl
xor
call
inc
add
add
add
sub
jl
sbb
push
adc
stos
push
mov
pop
inc
adc
sbb
xor
cwtl
inc
cmpsb
out
stos
sbb
sbb
cmp
ret
or
mov
adc
pmulhw
rcrb
xor
std
push
stos
sub
call
icebp
add
add
add
out
sub
pop
mov
inc
adc
sub
stos
enter
push
bound
sub
lcall
aas
jmp
mov
stc
fidivs
call
jmp
cli
jmp
sbb
fnstsw
repz
mov
pop
sti
popa
call
sub
fists
pop
out
mov
repz
add
add
out
sbbl
sub
jmp
pop
test
scas
add
cli
jg
dec
inc
xchg
addl
inc
xchg
mov
repz
mov
repz
sbb
add
inc
out
subl
divb
dec
cmpb
jecxz
jmp
cmc
dec
call
jo
lcall
push
enter
dec
push
mov
test
repnz
and
lods
cs
jecxz
mov
add
cmp
xor
cs
incl
or
iret
je
daa
scas
xchg
add
push
xchg
inc
jne
dec
daa
dec
cli
ljmp
cmp
outsl
iret
je
daa
scas
cli
loop
jmp
add
add
adc
enter
cli
add
shlb
orb
jge
daa
mov
inc
sbb
or
iret
popf
mov
scas
out
in
lock
push
aaa
push
jne
add
in
jle
push
in
cmp
subl
add
sub
and
fsts
scas
and
adc
jne
sub
push
std
mov
ja
in
mov
les
test
test
sub
sbb
outsl
add
outsl
push
test
mov
shll
outsl
mov
pop
cwtl
notb
das
add
sbb
ljmp
mov
add
push
add
outsb
hlt
enter
data16
movsb
add
cwtl
inc
cmc
inc
fildll
jle
es
add
or
popa
in
dec
push
bound
inc
cmc
mov
sbb
sahf
int3
lahf
call
adc
add
mov
pop
push
add
jge
inc
mov
inc
mov
fsubr
lock
jmp
insl
sti
sbbl
add
movsb
testl
pop
push
mov
fcmovnu
inc
inc
call
shll
imul
fstpt
in
inc
call
add
adc
push
out
hlt
out
inc
jns
sti
orb
rcrb
add
push
sub
jb
faddl
imul
jne
fidivl
lret
xor
add
int3
inc
testl
jecxz
push
mov
or
clc
sbb
sbbb
out
scas
jb
lea
and
add
pop
rcrb
fistl
add
pop
mov
mov
dec
ljmp
dec
adc
std
dec
mov
cs
cmp
mov
aad
cmp
cs
sar
push
incb
icebp
add
cs
adc
push
add
and
aaa
pop
out
stc
shl
in
add
sub
popf
mov
out
sub
cmp
sbb
bnd
jmp
or
mov
aam
pop
nop
lds
push
cmp
dec
cmp
add
test
or
cli
iret
xchg
or
mov
repnz
inc
add
sub
jg
add
sti
stc
push
js
sub
jmp
popl
xchg
cmp
popl
jmp
inc
pop
scas
mov
popa
inc
mov
fnstcw
pop
push
xchg
pushf
sar
cmpsl
or
cld
loope
mov
test
movhps
pop
jg
cs
sahf
or
es
xor
mov
dec
push
test
add
and
push
sti
jb
test
jne
addb
enter
lods
push
sbb
cli
sub
loope
inc
pop
xchg
push
testb
les
add
out
sbb
pop
jns
adc
push
leave
lds
add
jecxz
push
and
dec
mov
aad
testb
and
jbe
and
dec
imul
sub
idiv
jno
clc
xor
or
call
or
fucomi
decl
mov
decl
lret
out
push
cmc
testb
repnz
push
add
add
pop
cld
decl
jge
inc
addr16
test
mov
stc
imul
mov
out
mov
scas
or
loope
push
mov
sti
cli
outsl
sbb
jb
add
sbb
push
movsl
jnp
in
adcb
lcall
mov
imul
sti
cmpsl
pop
sbb
outsb
mov
add
pop
jp
sahf
pushf
adc
call
addr16
jmp
insb
std
cli
jecxz
pop
inc
ficoms
jmp
je
test
cs
nop
ucomiss
call
cld
mov
repz
popa
add
and
sbb
jge
pop
addl
adc
sar
jmp
aas
std
not
ret
imul
dec
loope
call
xchg
add
add
adc
jle
or
test
add
lods
sarb
add
mov
ret
push
sbb
inc
inc
out
es
clc
dec
jmp
in
add
aas
jno
push
jbe
jl
jbe
or
stos
scas
mov
xlat
and
hlt
sbbl
sub
test
cmp
mov
and
test
cmpsl
pop
add
add
cli
bound
icebp
mov
add
ljmp
mov
xlat
js
xchg
xchg
into
lret
bound
jmp
je
test
add
jb
and
insb
iret
add
psubsb
mov
repz
push
jecxz
test
or
addr16
adc
aam
push
mov
gs
jecxz
incl
add
sub
inc
pop
jl
or
ret
jae
dec
cmpl
push
or
loope
daa
push
add
repz
inc
sbb
fcmovnb
add
add
add
and
jecxz
xor
shlb
adc
or
add
incl
jecxz
roll
lea
out
imul
cs
std
incl
add
sub
iret
adc
ja
lret
cmp
sbb
inc
loop
push
inc
push
mov
inc
loope
mov
enter
fisubs
movl
or
icebp
repnz
dec
nop
enter
shll
fsubs
dec
adc
push
push
call
add
decb
clc
cmp
push
decl
mov
add
cltd
cs
mulb
loop
outsb
mov
mov
add
cmovbe
lods
sti
inc
rcrb
and
in
mov
add
jbe
sbb
and
xchg
push
lcall
aas
adc
dec
push
mov
add
aam
add
add
cmpsl
je
lds
ss
cmp
pop
cwtl
cmp
mov
ret
cmpsl
inc
push
xchg
mov
rep
aas
add
mov
add
sub
mov
imul
add
xor
jl
out
mov
add
sub
or
sub
mov
nop
sub
pop
xchg
in
divl
add
add
jp
inc
push
pop
jne
jns
or
and
aas
imul
add
jge,pn
adc
pop
add
jmp
adc
inc
outsl
lock
jg
mov
jne
lds
xlat
call
or
mov
rolb
xchg
cli
ret
rolb
xchg
dec
call
sub
sub
sarl
repz
add
mov
idiv
xchg
out
insl
inc
decl
clc
repz
jne
xor
adc
in
sti
imul
mov
cmp
pop
cld
jp
lret
jns
jne
push
adc
loope
sti
adcb
or
xorl
cltd
popf
test
filds
daa
or
add
imul
sbb
ds
dec
sti
out
push
or
cmpsl
push
rep
mov
cmp
scas
out
mov
scas
dec
and
add
xchg
inc
je
test
in
pushl
outsl
icebp
jg
ud0
push
adc
ud0
lcall
out
add
incl
add
mov
aaa
and
movsl
jne
sti
stos
mov
mov
jmp
testb
rcrl
xchg
cwtl
xchg
mov
ret
popa
jle
clc
incl
hlt
pop
and
call
or
lods
or
sbb
xor
loop
adc
add
nop
or
add
add
sbb
arpl
test
mov
add
lods
xor
aad
subl
pop
ja
adc
ja
jge
mov
mov
add
je
push
mov
repz
adc
jl
popf
push
add
repz
mov
jo
adc
inc
mov
or
mov
test
faddl
add
aaa
sti
dec
fs
dec
sarl
scas
shlb
jne
mov
repz
js
cli
cmpsb
mov
call
mov
mov
jnp
cld
inc
out
call
sub
stos
loop
mov
testl
xchg
clc
ds
push
nop
mov
mov
adc
testl
mov
call
aam
sbb
mov
iret
popa
add
jne
call
popa
add
adc
sbb
bswap
and
mov
push
add
mov
jne
rol
testl
sahf
inc
push
mov
test
xchg
cs
jnp
xor
mov
fdiv
jmp
dec
ss
mov
add
cmpsb
out
add
lret
sti
mov
mov
fnstenv
push
frstor
sti
imul
push
mov
jno
jnp
lcall
sti
xor
test
pop
lock
mov
mov
jb
in
push
xor
stc
or
sbb
xchg
out
mov
in
dec
icebp
xor
cli
arpl
cmc
push
pop
or
jmp
std
pop
nop
add
add
add
add
push
pop
pop
and
ret
or
imul
sbb
add
pop
xchg
test
loope
out
pop
mov
out
add
cltd
push
pop
or
jno
jp
pop
out
cmpsl
jae
pop
mov
test
xor
fstpt
gs
add
add
or
inc
outsb
sar
into
in
sbb
stc
cs
sub
test
xor
rorb
test
bound
add
repz
call
sub
push
mov
xchg
jge
fsubrp
mov
call
sub
mov
fcoms
sub
xchg
add
add
xor
sti
push
repnz
pop
stc
jmp
jnp,pn
add
xchg
cmp
out
mov
add
xor
add
push
je,pn
push
push
testl
les
xor
xchg
adc
push
lea
mov
daa
cmp
stc
std
inc
cmpl
add
in
cmp
pop
push
sbb
inc
sbb
mov
add
loopne
inc
inc
or
lods
ljmp
jmp
add
cs
push
das
in
mov
xchg
scas
xchg
cwtl
aas
push
jmp
mov
arpl
add
mov
and
in
cld
cmpsl
push
pusha
xchg
fwait
push
add
add
fmul
dec
std
mov
push
mov
cli
mov
sar
scas
push
jns
and
sti
dec
add
ss
dec
cmp
bnd
inc
repz
mov
call
negb
jg
out
cli
fwait
add
add
adc
add
pop
leave
xchg
rorl
shrb
mov
roll
mov
jmp
cs
imul
add
cmp
adc
call
lret
push
js
jge
pop
sbb
push
jge
mov
lock
ja
test
add
or
dec
subl
fiadds
adc
ret
dec
xchg
xchg
or
and
add
and
add
in
xor
sti
cmp
notb
mov
in
sub
in
mov
in
ror
scas
and
mov
cmp
loope
mov
push
call
sub
jmp
sbb
push
push
int3
fdivr
call
push
xchg
aas
cmp
roll
jmp
add
cmp
dec
jg
xor
cld
adc
or
aaa
mov
or
inc
fmull
jo
mov
add
adc
or
or
incl
fnsetpm(287
fadds
je
cmp
cmp
call
addb
mov
call
inc
add
add
cld
inc
and
add
cmpsl
cld
outsb
sbb
addl
or
jns
call
inc
cmpsb
cmpl
in
loopne
gs
push
clts
adcb
std
mov
js
in
pop
xchg
jmp
or
icebp
out
mov
jb
adcb
shrl
add
add
pop
jmp
rolb
std
push
xor
jnp
sbb
sti
mov
xor
test
mov
call
ljmp
add
or
mov
call
add
subl
adcl
inc
aaa
insl
sbb
add
add
and
inc
add
add
adc
push
push
pop
sbb
jmp
ds
cmp
sbb
xchg
hlt
mov
add
dec
push
jno
add
addb
cmpsb
add
add
cmpl
add
mov
inc
call
insb
outsb
and
jmp
xor
add
add
add
mov
ret
sub
add
test
gs
jno
sub
jns
adc
movsl
rorl
sbb
sbb
call
jle
xor
mov
xchg
add
insl
inc
jne
mov
or
imul
xchg
push
sbb
fdivl
jge
add
fists
add
jge
je
cmc
jae
int3
cmp
adc
js
mov
jmp
jle
mov
mov
jmp
push
and
fbld
jbe
fdivr
push
test
popf
cli
call
in
jle
cmp
inc
imul
imul
add
decl
push
pop
add
in
jle
add
incl
add
ja
push
orl
add
inc
add
cs
out
cmp
ds
inc
out
push
dec
and
mov
out
add
ss
std
ljmp
outsl
dec
and
lds
movsl
pop
or
adc
ljmp
data16
push
jmp
pushl
add
stos
cld
pop
call
call
dec
add
and
adc
rcr
adc
call
decb
mov
ljmp
add
cmp
call
adc
and
cmp
cmp
push
repnz
outsb
aas
cmc
add
call
xorl
call
add
add
jl
sbb
sbb
add
add
dec
test
add
xchg
pop
and
in
mov
das
test
jo
test
sti
popa
cld
xorl
xchg
imul
sbbl
jne
out
sub
sti
jg
and
cmp
dec
jmp
movsb
cmp
inc
fisubrl
fidivrl
dec
lea
in
decl
in
call
and
or
push
repz
cmc
cmc
cli
add
fs
stos
lock
jmp
sub
dec
xchg
insb
and
test
add
xchg
cmc
outsb
and
mov
divl
call
test
add
push
popa
or
inc
xor
add
mov
call
jns
and
mov
cmc
cmc
orl
jae
push
mov
rcll
ljmp
adc
jne
jmp
faddl
push
cmp
jbe
push
clc
das
cmp
jmp
adc
shr
jnp
pop
jb
push
add
jl
mov
add
cs
push
pop
add
and
xor
mov
jbe
cli
movsl
jno
cli
or
xor
xchg
and
xchg
hlt
test
out
jmp
push
push
pop
lods
add
adc
inc
push
cmp
call
pop
sbb
push
mov
or
bound
mov
or
sldt
add
fstl
in
in
fldcw
cwtl
inc
loopne
cs
stc
adc
push
inc
cs
inc
rolb
outsb
adc
jecxz
jno
jmp
fistps
cmp
repnz
add
fistpll
add
push
jne
test
pop
js
out
cmpsb
dec
xor
repnz
insl
push
sub
movsl
add
out
faddl
add
add
pop
int
and
sub
out
stos
clc
xchg
imul
cwtl
int3
int
sar
imul
xchg
and
in
sub
jp
int3
add
add
sbb
inc
in
sub
pop
dec
in
jmp
cmp
add
inc
inc
in
xor
scas
das
sti
sub
jmp
ds
mov
inc
in
add
add
jecxz
jmp
mov
aas
jmp
dec
js
sbb
call
sti
jb
add
stos
sub
jnp
std
pop
fadds
test
outsb
call
mov
and
bound
movl
cmc
adc
push
jmp
inc
incl
testl
test
or
add
add
cmpl
call
mov
mov
cwtl
in
add
xlat
data16
xor
mov
fwait
pushf
xor
mov
push
push
sub
jecxz
mov
filds
in
cmp
cmp
orl
push
int3
add
sbb
push
add
cmp
add
add
mov
mov
jmp
jge
jg
mov
jg
int
push
stc
insl
jae
jo
cmc
lcall
rolb
clc
cs
les
outsb
inc
or
or
je
inc
cmp
pop
movsb
imulb
pop
imul
xchg
ljmp
fdivr
jmp
lret
cs
ss
add
add
add
add
add
mov
cmpsl
add
add
add
cmpb
shrl
in
out
call
mov
ljmp
add
mov
inc
in
dec
sbb
and
cmp
jo
jg
std
and
sub
push
pminub
call
inc
cs
stos
or
gs
add
dec
outsl
outsb
cmp
ja
cmovns
pop
cmp
jne
sti
or
outsb
inc
push
jne
sub
sbb
bound
xchg
jno
test
xor
add
data16
cmp
push
sub
test
and
jmp
ret
cmc
cmp
jg
je,pn
push
or
repz
jne
cli
dec
lea
cs
das
outsb
bound
add
jl
cmpsb
test
add
sub
mov
add
div
cmp
imul
xchg
sbb
jae
pop
sarb
lret
add
mov
mov
jmp
inc
sub
leave
push
add
sbb
or
test
lret
ja
xlat
cld
addr16
cld
punpckhbw
add
xchg
inc
add
addr16
in
scas
cmp
pushl
mov
in
or
cmp
syscall
inc
add
xchg
stc
mov
fildl
pextrw
xor
inc
sbb
push
jne
add
cld
jp
aas
dec
xor
fiadds
push
mov
jp
cmpsl
fisttps
or
lock
andb
jl
add
add
add
jmp
les
stos
push
add
in
pop
incb
cmc
mov
lock
js
fsin
cli
and
roll
ljmp
mov
push
or
xchg
testb
icebp
dec
sti
cmp
inc
cs
int3
test
aaa
repz
cmp
adc
push
out
jge
add
jb
gs
mov
mov
and
test
loop
lods
mov
call
fildl
insb
leave
jl
fsubrl
inc
leave
ljmp
mov
or
add
sbb
hlt
add
or
add
sub
xor
xlat
add
sub
daa
add
add
add
add
addl
jle
add
add
aas
insb
decl
gs
call
in
insb
or
in
in
jmp
sub
test
sub
add
out
in
jmp
sub
add
aad
in
out
call
scas
lods
test
mov
ret
test
ljmp
lock
mov
add
add
push
jmpw
addr16
ljmp
sub
sub
xchg
jmp
sub
push
add
cmpsb
cmp
or
mov
push
add
call
mov
aad
mov
jecxz
aam
jae
mov
adc
call
popa
cld
or
jle
adcb
inc
xchg
enter
aad
lock
jmp
fadds
add
fsubrp
clc
js
jae
out
sub
mov
incl
xchg
add
xchg
adc
clc
ljmp
add
xchg
sub
cmc
lea
dec
idiv
or
cld
mov
jmp
je
insb
mov
push
cli
sbb
or
lock
fwait
sbb
jmp
mov
add
add
ret
stc
cltd
cmp
xchg
inc
out
das
outsb
add
fisttpll
insl
lds
push
dec
xor
and
or
jmp
mov
hlt
test
lret
mov
int
ljmp
imul
cmpsb
mov
jle
ret
mov
das
dec
fs
in
in
cltd
add
add
in
add
add
add
push
jg
in
and
mov
les
dec
je
dec
xchg
push
mov
cld
in
hlt
loop
in
jp
loope
bound
sub
repnz
mul
fisttpl
push
inc
jmp
adc
data16
lods
add
add
fcomp
movsl
loop
cmp
lcall
lods
pop
mov
call
loope
imul
add
add
ljmp
cs
testb
data16
inc
cmp
out
jp
add
sub
out
test
dec
and
push
xchg
mov
enter
call
rorb
inc
popa
mul
pop
push
aaa
mov
pushl
lret
test
fimull
pop
imul
sub
add
sahf
je
mov
fisubrl
dec
xchg
xchg
mov
add
mov
lcall
aad
in
aas
movsb
call
fsubl
loopne
xchg
lods
orl
test
mov
cmp
lret
ret
mov
les
adc
std
loop
out
aaa
hlt
jne
popa
inc
cmp
inc
leave
sbb
cmp
xorl
add
add
dec
mov
cmp
xchg
sbb
incb
adc
bound
push
sub
pop
xchg
cld
loop
sbb
or
sarb
das
adc
jle
jae
or
jge
sti
loope
jnp
and
or
xlat
pop
sbb
cltd
and
testl
cli
jno
fstps
mov
sahf
out
add
mov
shll
into
icebp
jge
cs
ds
xor
dec
cmp
jne
mov
out
add
and
testl
add
push
std
mov
cld
test
sub
inc
sbb
test
daa
jmp
add
push
shr
add
jmp
mov
sbb
shlb
rcrb
push
xor
out
inc
xor
inc
sub
pushf
pop
fisttps
or
insl
out
cs
xor
test
outsl
and
pop
sub
inc
mov
add
enter
test
cltd
sub
add
pop
lea
in
xor
add
add
lahf
or
call
inc
xchg
or
icebp
cli
fcmovbe
mov
jne
clc
dec
push
cmpb
push
popf
xor
inc
test
fs
push
mov
call
cwtl
inc
lock
outsb
sub
test
xlat
cli
pusha
xor
jle
rorl
test
add
push
add
mov
cli
add
add
mov
and
js
inc
in
in
cmc
movlps
add
xchg
sub
ret
and
mov
mov
add
push
aas
hlt
xor
aas
hlt
psrlq
add
inc
pop
inc
in
push
aas
loopne
rcll
je
int3
lock
cli
push
xchg
ja
incl
pop
ljmp
call
add
incl
add
sbb
jle
jae
cmp
stc
or
xor
lock
in
sbb
out
sti
subb
jg
out
xor
cmp
dec
bound
pushf
cmp
lods
cmpl
inc
mov
or
inc
jb
ljmp
aas
sub
push
push
je
push
inc
faddl
add
out
pop
inc
fsubl
fisubrl
insb
jae
dec
inc
hlt
call
pop
inc
lock
adc
pop
cmp
jle
sub
fadd
aaa
fmul
cmp
add
mov
inc
xchg
mov
int
push
in
mov
xor
sub
daa
adc
xchg
push
popf
fsubrl
cld
imul
pop
jp
jp
cli
dec
add
add
add
inc
pop
xchg
jnp
daa
sub
inc
add
dec
xchg
lret
push
push
mov
jecxz
pop
cmp
xchg
cmp
add
dec
adc
mov
push
fldcw
lea
adc
in
or
push
and
cmp
or
or
jmp
pop
cs
push
mov
ds
xchg
repz
fildl
add
in
jmp
jb
js
sub
mov
rorb
xchg
dec
addl
test
outsb
mov
cmp
inc
in
sub
sbb
pop
sti
fiaddl
inc
fisttpll
or
push
dec
call
insb
in
pop
pop
bound
sub
sarb
sbb
push
bound
push
add
or
xchg
pop
mov
dec
fwait
inc
add
xlat
int
repz
add
push
inc
aas
int3
call
or
int3
sub
cli
mov
dec
mov
movb
mov
scas
call
mov
add
jge
push
std
popa
add
mov
clc
fdiv
call
int3
mov
in
cmc
cmp
xor
imul
rorb
add
add
jo
xor
repnz
lods
push
clc
fs
stos
es
pusha
lods
roll
fsub
fnsave
movsl
push
xor
mov
fdivrp
sbb
pop
ljmp
jg
popa
orb
cli
fimuls
out
arpl
dec
pop
mov
add
add
out
and
test
ja
stos
es
or
imul
cs
nop
mov
sbb
add
call
fsubrl
cmp
popa
rcr
jle
arpl
rclb
orl
mov
mov
in
or
in
flds
cmpsl
or
clc
push
xchg
adc
mov
adcl
mov
sti
pop
xchg
aad
loope
test
inc
xlat
push
xor
mov
loope
call
dec
jp
xlat
pushl
jbe
cmp
jns
cmp
pop
cld
sub
in
add
scas
jmp
add
call
into
push
or
or
mov
add
xor
das
test
sbb
sub
iret
xchg
jle
sub
jl
out
add
mov
call
cmc
dec
or
xlat
add
jb
jae
mov
and
dec
stos
into
test
call
jne
adc
loopne
mov
add
test
add
add
mov
add
jle
jns
adc
adc
dec
mov
neg
and
xlat
add
xor
sub
dec
rclb
loopne
push
das
fcoms
rolb
mov
in
sub
mov
rcrb
add
in
dec
fdivs
push
adc
idiv
cs
inc
stc
inc
sbb
add
loop
test
pand
cmpsl
pop
jo
adc
xchg
test
pop
cmp
mov
jmp
push
fldl2t
add
cs
scas
and
add
out
test
vpsubd
xchg
decb
test
cltd
xor
dec
xchg
xor
cli
jns
les
jmp
imul
popa
roll
push
pop
stos
xchg
or
sbb
insl
into
dec
and
xor
sub
subl
and
xor
popa
shll
fidivrs
dec
adc
js
adc
push
leave
and
and
fst
rcll
fnsave
xchg
ss
add
dec
adc
push
add
add
jl
push
sub
fdivrl
xchg
pop
mov
mov
sbb
adc
push
pop
add
xor
test
inc
add
outsb
stc
mov
cli
mov
or
jmp
add
int
adc
repnz
pop
imul
testl
add
add
aad
pop
es
cmp
rorb
cmc
inc
mov
dec
mov
in
sub
pop
incb
iret
nop
sahf
bound
lea
je
popa
mov
in
mov
jg
in
inc
out
addl
cmp
xor
lcall
jp
ud0
cmp
add
add
inc
pop
sbb
add
jg
sbb
je
test
or
cmp
or
jns
add
std
addb
inc
or
jp
jne
arpl
lea
push
call
dec
mov
push
testb
je
mov
and
sub
mov
lods
adc
fidivrl
das
out
outsb
rolb
and
or
frstor
fcmovnu
rolb
int
or
add
scas
pusha
sub
and
adc
cmpsl
sbb
push
xchg
loope
dec
pop
and
fidivrl
das
out
gs
pop
test
out
xchg
pop
clc
jmp
or
fadds
lock
dec
iret
jmp
pop
inc
add
out
fs
out
cmpsl
jbe
out
out
mov
adc
out
pop
or
adc
add
add
cltd
push
dec
or
xor
lea
pop
inc
push
jp
dec
sbb
pop
out
add
pop
scas
popa
mov
mov
test
call
testb
sbb
jnp
pop
mov
add
flds
call
cmp
in
iret
fldcw
xor
out
add
add
sub
hlt
xchg
xor
inc
sub
outsb
fnsave
cli
sbb
lret
adc
orl
jne
shl
mov
int3
cli
jbe
fmuls
or
add
lret
sub
cli
dec
mov
in
jmp
imul
inc
lods
push
add
stc
inc
pushf
or
and
mov
mov
enter
jge
aad
leave
cli
out
js
push
cmp
das
push
insb
cmp
std
ds
test
imul
jnp
mov
call
adc
mov
psubsb
and
add
sti
xor
mov
repz
sti
pushl
arpl
shlb
dec
add
add
pop
mov
clc
push
aas
xor
insl
in
lcall
mov
clc
add
cmp
add
jl
cmp
add
dec
call
push
les
inc
aaa
clc
add
mov
clc
mov
jmp
adc
rolb
cmc
lahf
mov
jmp
sbb
jle
shrl
inc
dec
bound
mov
cli
cli
add
add
add
cs
adc
xlat
mov
push
das
and
add
xlat
jle
addr16
jns
das
xlat
incb
cmp
repnz
jg
les
insl
lahf
adc
mov
xlat
jg
xchg
std
push
out
mov
sub
imul
aad
repnz
fdivr
call
push
add
add
or
xor
pop
add
add
and
les
sbb
xor
ja,pn
fsubrl
mov
call
jmp
push
inc
mov
fisttpll
jb
pop
add
inc
add
hlt
jge
hlt
out
stc
mov
outsl
push
fidivs
jnp
add
lds
aad
dec
jmp
dec
add
inc
lret
jae
scas
sar
cmp
sbb
mov
jmp
sub
cmp
xor
jmp
sbb
adc
push
or
push
idiv
aam
jecxz
mov
sbb
jb
call
sbb
mov
cmp
add
add
repz
lcall
loop
xor
pop
fpatan
lcall
loop
cmpsb
ljmp
push
mov
cld
addb
sbb
push
test
add
es
adc
add
ja
test
decl
sar
cmp
add
out
push
call
fcmovbe
dec
call
mov
inc
in
cmpsl
js
push
in
in
push
lea
mov
mov
insb
add
flds
inc
clc
adc
push
or
pop
pop
jge
mov
pop
add
jb
xor
dec
mov
dec
es
std
mov
add
jmp
loope
inc
pop
push
enter
cmpl
adc
out
lds
jb
incb
stos
ror
sbb
sti
jno
sub
in
fdivrp
push
mov
sub
add
pop
sub
cs
adc
push
xor
dec
rorb
cmp
jno
dec
jne
hlt
dec
andl
add
and
lcall
cld
mov
in
ror
cs
xchg
pop
rcll
stos
dec
jne
outsl
inc
pop
jbe
fcomp
clc
xor
lret
das
jmp
fisubrs
andl
jl
lret
sub
push
mov
fcmovne
cmp
mov
add
mov
clc
jmp
sub
add
in
inc
adc
sbb
dec
or
fmull
enter
cmpsb
xchg
gs
ret
je
pop
inc
jge
test
test
ret
jmp
adc
call
xor
shrb
nop
xor
add
push
cli
jmp
inc
ret
sub
cmp
add
add
or
add
call
inc
mov
add
add
add
adc
inc
add
push
mov
cmc
jne
adc
adc
or
add
dec
enter
mov
adc
iret
inc
add
test
adc
inc
add
add
add
testb
mov
dec
jb
xchg
cmp
jnp
popl
jne
bound
xchg
repnz
push
sub
sahf
jmp
arpl
push
mov
xlat
jb
in
iret
mov
jnp
movsl
pushf
out
sub
fwait
push
add
cmp
cs
les
push
add
sub
lret
je
pop
lret
adc
movsl
add
add
sub
xchg
inc
xor
clc
inc
cmpsl
loop
je
outsl
jl
xlat
js
pop
push
sub
cltd
idiv
loop
loopne
push
mov
push
std
xchg
xor
jb
outsl
dec
push
pop
stos
out
and
xor
dec
sbb
jmp
dec
inc
adc
les
pop
ss
adc
cs
into
aas
clc
insl
add
add
pop
fnstenv
sahf
cld
into
mov
test
lods
jbe
add
jns
clc
dec
and
and
lret
insl
sub
add
ljmp
jns
andb
xorl
jl
add
cmc
xor
sub
jmp
dec
add
lahf
ljmp
inc
lods
rcrb
mov
inc
clc
out
pop
xor
add
add
or
jecxz
cmp
sahf
loope
ds
dec
adc
dec
add
fdivrp
push
lods
lret
add
jnp
loope
xor
cwtl
scas
xor
cmp
loopne
out
sti
pop
push
inc
int
cmp
jnp
mov
int
dec
clc
jno
cmp
test
jmp
shll
jle
rolb
aam
cld
push
push
andb
mov
jge
add
mov
in
addb
jmp
pop
pushl
je
mov
hlt
inc
sub
push
adc
xlat
jmp
or
ds
divb
cmpsb
ss
xlat
in
push
mov
xchg
jmp
fstpt
add
cld
out
insb
mov
mov
sbbl
inc
cld
add
push
jb
dec
cli
addb
add
cmp
ja
or
mov
je
push
or
mov
shrb
or
cs
mov
mov
inc
add
clc
aas
add
push
mov
xchg
das
jecxz
cs
stc
fwait
rclb
icebp
cmp
incb
das
aam
jecxz
xlat
ja
es
add
imul
xlat
lods
pop
enter
add
push
add
cmp
aas
cs
fdivrl
mov
cmc
jge
add
psllq
xor
xchg
and
add
sub
xor
loope
mov
dec
stc
fistl
dec
cmc
fisttpl
dec
adc
add
dec
stc
fistpl
jmp
jmp
mov
test
lret
ret
add
add
push
xor
adc
cs
push
fmuls
cmp
add
push
push
fsub
aaa
add
imul
jmp
shrl
inc
ljmp
xor
jmp
sbb
xchg
stos
pop
mov
add
add
lea
cmp
subl
sbbl
dec
ret
inc
int
mov
push
add
scas
or
in
out
cmpsl
inc
add
clc
dec
dec
cltd
pop
mov
pushl
adc
arpl
sub
lods
add
add
divb
divb
divb
notl
scas
cmp
mov
les
add
jb
push
mov
mov
add
jns
cmpb
xchg
rorl
cli
sbbb
out
or
repz
jmp
inc
add
inc
pop
dec
push
mov
lods
xchg
adc
dec
aad
test
lahf
ljmp
inc
in
mov
add
add
es
jno
add
mov
insl
cs
pop
mov
adc
test
push
mov
nop
pop
pop
cmp
add
xchg
push
xor
fsub
mov
cmp
mov
aas
adc
sub
jns
mov
pop
sti
loope
sbb
push
ljmp
ret
loop
xorl
movsl
cmpsb
outsl
push
mov
and
cltd
xor
cmp
jge
pop
add
xor
xor
mov
inc
push
push
repz
or
insl
inc
add
add
adc
or
data16
cs
test
mov
push
mov
test
and
add
dec
sbb
movsl
adc
hlt
inc
or
repz
addr16
sbb
pop
in
fldt
jmp
or
clc
scas
add
pop
add
pop
mov
add
xor
sti
push
dec
clc
out
aaa
add
push
xchg
and
adc
mov
out
in
gs
inc
lds
add
jne
cli
push
mov
cmpsl
dec
jmp
dec
cmp
dec
jno
cs
and
jno
jne
and
pushw
es
sti
mov
call
outsb
ljmp
cli
xor
and
lods
loop
pop
add
lea
sbb
aas
and
pop
xor
and
out
dec
call
add
add
lret
xor
cmp
cmc
push
int3
xlat
dec
push
add
mov
je
xchg
les
mov
dec
idiv
mov
mov
cmp
mov
sti
lret
push
pop
loopne
jmp
cmp
mov
ret
movb
push
subl
adc
jne
cmp
jae
stc
out
add
daa
mov
add
cmp
and
ja
sub
jle
test
sub
jmp
or
test
add
cmpsl
and
decb
jns
mov
fucomi
adc
test
rorb
sub
mov
pop
dec
and
aas
or
add
shl
cmpsb
mov
jne
inc
and
das
cmpsl
decb
add
add
add
adc
call
shll
fwait
js
test
add
add
ds
or
dec
sub
shll
call
or
mov
call
inc
cs
dec
add
inc
jmp
rcll
cs
sub
das
add
pop
test
mov
hlt
jmp
inc
or
adc
add
mov
in
push
mov
cmc
stos
jno
inc
ret
or
push
dec
loopne
pushl
js
inc
std
test
add
in
xchg
scas
repz
lcall
cmp
in
add
mov
out
mov
fsubrp
adc
outsl
xchg
mov
push
insb
insb
sub
jb
jecxz
notl
xchg
insb
add
jmp
dec
sti
adc
insb
sub
aad
xor
in
jle
insb
lock
call
push
test
call
push
dec
leave
loop
mov
or
fwait
lahf
push
mov
shr
cld
idiv
nop
xchg
call
mov
mov
out
inc
pop
xorl
cmp
add
popa
mov
add
rolb
sarb
mov
sti
mov
shl
xchg
add
jg
loope
lcall
xchg
add
add
mov
jle
or
cs
cli
stc
and
mov
mov
jmp
and
jge
pop
or
push
add
shll
cld
pusha
push
jns
add
add
incb
mov
jb
jae
sahf
xor
mov
psubsb
test
or
lock
mov
mov
or
cs
mov
out
test
out
xor
pop
imull
add
stos
jle
aam
xchg
mov
mov
jmp
mov
sbb
add
outsb
enter
rcl
sub
dec
js
or
add
mov
test
add
mov
call
mov
fidivs
in
nop
lods
fsub
add
mov
ljmp
add
mov
pop
mov
adc
sub
and
lock
es
mov
mov
stos
add
add
add
hlt
and
mov
or
push
jge
bound
jg
ds
push
xchg
pop
or
add
in
ret
idivl
dec
xchg
mov
cld
notb
or
xorl
cld
int
mov
xchg
mov
pusha
push
jb
xchg
add
add
imul
mov
xchg
testb
hlt
add
inc
add
push
pop
test
jmp
jle
xchg
jno
lods
decb
cld
loopne
fs
mov
roll
loopne
add
pop
inc
add
addr16
sti
shrb
and
aad
call
cmp
std
and
sbb
or
jmp
add
subb
test
aaa
jmp
fimull
mov
jne
scas
mov
incl
inc
jne
lahf
repz
mov
adc
bound
jb
push
dec
xor
mov
push
call
mov
cmp
cs
lea
push
push
cmp
out
push
mov
mov
cmpsl
pop
leave
add
add
jae
jmp
add
mov
cmp
inc
cs
jmp
dec
ret
repz
add
test
add
out
jbe
inc
clc
mov
mov
ret
std
mov
mov
inc
test
aam
cmpsl
cmp
xor
test
and
or
adc
pop
xchg
add
mov
and
jb
mov
push
mov
icebp
sub
clc
stos
inc
fidivs
mov
cs
outsb
scas
inc
movsb
clc
push
push
fistpll
pop
mov
inc
cmp
jmp
sbb
das
andl
xchg
and
mov
jle
pusha
inc
xor
outsb
inc
push
sbb
sub
inc
call
test
add
inc
cld
shl
add
mov
sub
lea
inc
call
fs
bound
ss
xor
xchg
test
jmp
bound
test
decb
cmp
mov
jo
add
ret
pop
add
fs
mov
andl
push
test
movq
insl
add
jp
inc
sti
dec
call
mov
out
inc
cld
call
dec
mov
push
add
push
lcall
push
imul
out
add
pop
jge
clc
add
adc
push
lea
imul
push
js
aam
add
lock
cmp
mov
xlat
add
js
inc
add
dec
ret
push
loop
add
cmp
mov
pop
data16
mov
shrb
pusha
push
lea
jmp
mov
inc
cs
jnp
or
mov
mov
push
mov
data16
add
xor
loopne
cltd
dec
sti
stc
sbb
or
pop
mov
dec
mov
mov
add
scas
stos
and
jmp
subl
test
loopne
es
push
sbb
scas
pop
inc
push
add
mov
mov
mov
add
add
xchg
add
jns
stos
out
inc
jmp
mov
das
pop
or
sub
pusha
inc
das
pusha
or
sbb
insb
pop
and
inc
adc
adc
mov
es
mov
idivl
inc
jmp
and
ja
fisttps
inc
rcrl
ja
stc
sub
in
test
mov
test
test
or
add
add
mov
xor
je
adc
clc
dec
ficoms
mov
shll
test
movsl
ss
cmp
mov
cltd
jb
cltd
jnp
dec
mov
inc
loope
adc
es
dec
push
xor
add
mov
xor
xchg
orb
mov
add
flds
mov
sub
cmp
dec
in
xchg
daa
push
or
sbb
sbb
out
adc
test
push
in
inc
push
pop
stos
inc
add
push
inc
add
mov
mov
pop
rolb
test
pop
imul
jne
cmp
aad
or
test
je
jg
jbe
add
mov
loop
sbb
add
lret
inc
cs
add
mov
or
pusha
idivl
add
jns
cmp
jno
adc
cwtl
push
pop
enter
cmc
push
dec
xchg
mov
std
inc
cltd
dec
push
loope
or
add
add
into
mov
call
xchg
ljmp
decl
sti
add
add
cltd
ds
and
xchg
ljmp
cmp
fs
incb
out
andb
cwtl
lcall
mov
inc
in
add
dec
sub
jns,pn
filds
fistpl
inc
jmp
xchg
add
mov
and
inc
jns,pn
loopne
sbb
mov
add
ficomps
mov
inc
jge,pn
loopne
addl
add
add
mov
ret
dec
ljmp
add
add
dec
fcompl
push
lock
dec
stc
outsl
push
adc
pop
inc
or
push
les
int
jle
in
add
pop
add
sub
or
inc
lds
cli
mov
mov
js
testb
popa
push
inc
bound
in
pop
cmp
sbb
fs
add
inc
add
sbb
subl
test
fidivs
cmp
gs
test
jmp
xor
add
jge
ret
idiv
fs
orl
add
ss
call
xor
add
mov
dec
push
movsb
push
lea
dec
jmp
pop
cmovo
ja
movlps
sti
incl
add
xchg
mov
pushw
js
cwtl
test
decl
cld
dec
jmp
adc
and
mov
lea
cwtl
push
call
ret
pop
daa
jg
and
cld
call
insl
adc
ss
test
call
xor
xor
jmp
push
cwtl
or
lods
mov
inc
and
add
loope
ds
pushf
add
add
add
filds
and
lods
shrl
add
fcomps
shl
add
xchg
xchg
enter
fdivrp
insl
adc
and
mov
push
push
dec
dec
mov
lds
fdivrl
flds
test
adc
lock
xor
dec
and
das
inc
push
mov
out
mov
std
test
add
add
add
stc
xchg
push
mov
in
push
shll
add
outsl
add
or
push
dec
adc
imul
dec
xor
mov
jg
out
add
es
out
jns
ss
cmpsl
pushf
out
cwtl
cmpsb
lock
cmpsb
insl
leave
in
sahf
jl
inc
daa
or
dec
pop
mov
push
jecxz
pop
std
sbb
hlt
addb
mov
add
mov
add
in
inc
add
fldt
jmp
mov
jp
call
xor
and
and
add
add
hlt
jl
out
sub
das
sub
mov
xchg
pop
pop
movsl
das
jno
adc
xchg
arpl
and
jle
jo
fmull
shl
cli
sub
add
jb
in
test
jge
test
test
jecxz
jmp
mov
inc
call
sub
test
in
sub
or
sub
es
push
jle
xor
decl
mov
push
fisttpl
lea
popf
sub
lods
dec
cmpb
dec
mov
aas
orl
add
xor
orl
and
inc
cmp
or
xor
imul
push
push
jne
fidivrs
pop
out
mov
cwtl
sub
or
jae
pop
jg
and
push
not
xchg
mov
cmp
add
popa
movsl
fucomi
popa
mov
out
mov
inc
mov
add
add
call
ljmp
xor
call
cmp
inc
jb
mov
inc
or
loop
incb
xor
sbb
and
add
mov
xchg
push
shlb
es
or
ret
shll
cltd
out
aam
xchg
cmpsb
push
lods
xchg
scas
scas
jae
pop
push
and
add
ds
or
xor
or
sub
test
sbb
in
mov
fadd
jle
fcoml
pushf
push
mov
add
adc
cmp
call
orb
arpl
jmp
lahf
xchg
mov
jl
mov
lds
aaa
add
mov
sti
add
add
add
ja
xchg
jg
sti
stc
mov
cmp
adc
cli
fs
sub
push
sahf
jno
punpckldq
punpckhdq
stc
ss
push
mov
repnz
add
push
xor
mov
loopne
sub
cli
jb
fcompl
jb
testl
sub
add
add
js
mov
std
pushl
cmp
sbb
sahf
ret
xlat
in
jle
data16
xchg
add
test
xor
add
push
cld
test
repz
addl
dec
rclb
push
test
out
add
sahf
push
jo
les
dec
addl
dec
daa
inc
enter
test
cmp
mov
push
cli
lcall
fmull
add
sbb
fimuls
add
push
cmc
lea
cld
jmp
dec
loop
cld
mov
dec
mov
jg
mov
int3
cmpsb
ds
out
inc
sub
ds
xor
movsl
shll
jg
call
sub
mov
sahf
mulb
mull
out
cmc
pop
test
push
mov
and
sub
dec
pusha
push
icebp
mov
adc
jnp
gs
cmpsb
pop
jmp
ja
push
rcrl
push
ficompl
jmp
pop
mov
ror
out
cmpsb
push
adc
popa
add
test
add
pop
mov
add
or
inc
cmp
ljmp
or
dec
push
inc
rcr
sahf
mov
add
add
or
subl
in
push
push
cmpsl
in
sub
inc
lea
call
filds
pushf
cmp
das
add
jl
dec
testb
movsb
fucomip
mov
fisttpll
add
movsb
mov
lods
mov
mov
dec
bnd
cli
jmp
in
inc
and
sub
cli
popa
bound
popf
cli
jmp
fcomps
dec
adc
add
dec
inc
jmp
push
inc
aaa
stos
out
add
call
jmp
lods
cmp
stc
xchg
fldl
fsincos
dec
data16
cwtl
jae
loope
sti
mov
orl
or
sbb
and
sbb
and
test
cli
call
add
ret
cmp
mov
dec
adc
call
push
mov
cs
xor
sbb
add
lea
add
call
mov
and
push
fiaddl
inc
sub
xor
jnp
pop
cmp
push
push
or
and
sbb
jns
xor
cs
mov
push
jns
pmaxsw
jne
lods
push
or
mov
fistps
add
or
add
ljmp
add
add
imul
mov
mov
out
push
movsb
cli
cmpsl
in
daa
movsl
jnp
inc
adc
fimull
jecxz
mov
xchg
faddl
push
ja
sti
pop
or
jg
add
jge
mov
ret
lods
rcrb
add
add
sbb
movsb
xchg
xor
cmc
xchg
stc
mov
mov
and
mov
pushf
mov
call
movsl
popf
cmp
push
rcrb
inc
repnz
inc
call
inc
adc
popa
cmp
jne
test
sbb
inc
ljmp
adc
push
movsl
mov
in
ds
scas
add
add
push
dec
push
jo
mov
jp
or
xor
cli
jne
push
ljmp
cli
xchg
shll
jecxz
push
fimuls
sbb
push
rcl
sub
mov
ret
scas
rolb
xchg
mov
orl
movsb
or
jecxz
sub
add
mov
adc
push
xchg
je
aad
add
pushf
mov
push
pop
inc
cltd
cli
push
xchg
add
les
inc
add
nop
cmc
xor
sbb
je
sbb
arpl
mov
cmp
jecxz
aas
adcl
push
or
pop
add
inc
push
lret
add
add
add
std
mov
mov
add
imul
and
in
add
filds
add
in
data16
cli
jle
ds
or
sub
pop
clc
in
add
ljmp
stos
out
inc
movsl
xchg
data16
cmpsb
mov
xlat
iret
or
cmpsl
mov
xchg
cli
push
and
sub
lahf
incl
add
jmp
xchg
xor
pop
ss
mov
xor
test
inc
add
ret
insl
xor
jge
clc
xchg
cmp
add
add
mov
add
sub
fiaddl
sub
and
sbb
test
mov
cli
out
adc
es
mov
xchg
imul
jl
add
add
inc
inc
add
pop
das
cld
call
or
add
mov
sti
in
xorl
sbb
icebp
sbb
call
ss
adc
adc
std
jmp
stos
jne
call
ret
ffree
aam
or
cli
xor
arpl
add
xchg
dec
ss
or
and
sub
popf
jg
sbb
ljmp
xchg
jmpw
or
cltd
test
sub
pop
stc
sbb
rcl
lcall
iret
in
mov
movnti
dec
cmpsb
add
sub
sub
push
pop
dec
cld
out
iret
out
xchg
add
lret
std
call
cmp
push
aam
dec
push
pop
sahf
sub
xchg
std
jge
dec
call
or
jae
mov
pop
cmp
mov
inc
add
jmp
cmc
je
or
mov
jne
test
in
or
imul
pusha
jne
pop
clc
je
movsb
xor
pop
add
push
jg
incl
add
mov
lods
mov
xchg
xchg
adc
out
sti
jp
or
gs
cli
mov
mov
bound
jle
push
iret
mov
xor
add
cmpsl
cmpsb
or
mov
or
mov
notb
out
cmpsb
aaa
xchg
push
sbb
imul
cltd
adc
mov
add
add
movsl
xchg
xchg
enter
mov
xor
data16
int
je
mov
pushf
cli
sbb
lds
addr16
jmp
outsb
scas
pop
xchg
clc
pop
xchg
sbb
test
fstpl
inc
sub
sub
es
shll
push
arpl
inc
inc
insb
xchg
cmp
xchg
inc
xchg
or
mov
idivb
add
add
stc
adc
in
cmpsb
cmp
out
loop
mov
mov
sahf
fiaddl
add
xchg
loope
or
pop
inc
adc
sub
call
mov
pushl
push
xchg
je
mov
add
les
jle
cmc
fnstcw
cld
daa
xchg
je
xchg
jbe
data16
add
cs
fsubl
xchg
je
aad
std
inc
ret
jns
lahf
pop
push
psubsw
jmp
inc
jnp
std
cmp
or
sbb
cli
xchg
gs
jl
sub
adc
pop
sar
pop
icebp
repz
and
call
gs
or
sub
xchg
imul
rorl
jae
xchg
fidivrs
and
add
add
out
cli
mov
pushf
add
push
loop
call
inc
in
ljmp
dec
je
push
pop
mov
adc
xor
pushl
xchg
ret
add
repnz
sbb
jnp
push
pop
lcall
jmp
mov
adc
int3
cmp
mov
addb
add
cs
mov
mov
repz
movsl
loop
or
cmpsl
mov
add
push
lock
cli
inc
xchg
hlt
aas
cs
adc
stos
add
push
mov
add
dec
inc
or
adc
test
cmpsb
test
adc
cmpsb
mov
jmp
or
xor
sbb
add
push
adc
fimuls
or
push
push
mov
das
add
add
add
lcall
sub
add
xor
and
inc
jmp
leave
jmp
or
insl
adc
add
add
out
cmpsl
add
add
add
stos
cs
out
add
add
inc
inc
xchg
hlt
mov
dec
add
gs
das
adc
dec
loop
mov
mov
xchg
or
out
ljmp
in
pop
jo
xchg
mov
push
pusha
pop
xchg
mov
push
jo
xchg
out
mov
lock
cmp
hlt
shl
aas
jmp
adc
add
mov
xor
add
push
call
call
push
cltd
es
sub
repz
aad
incl
cmp
sub
in
add
mov
adc
add
adc
add
lret
enter
out
mov
add
add
dec
jge
pop
sub
add
std
cmp
std
das
sub
sbb
rcl
mov
inc
mov
stc
inc
mov
jmp
rolb
add
add
inc
push
add
call
jne
add
into
sti
cmpsb
xchg
add
jmp
rolb
add
add
add
adc
and
add
add
ret
pop
mov
cmc
roll
jne
adc
es
sbb
jb
and
dec
add
pop
jp
iret
mov
cs
mov
cmpsl
and
add
xchg
test
testb
adc
mov
ret
adc
das
xchg
incb
add
add
or
jecxz
insl
test
xor
mov
or
jg,pt
decb
call
cmp
xchg
mov
hlt
sub
test
jne
add
add
lock
inc
cli
xor
and
rorb
push
loope
adc
mov
arpl
adc
addb
add
mov
push
stos
jmp
rcll
das
add
mov
sti
jge
lock
cmpb
sti
push
sub
sub
xchg
dec
xchg
scas
popa
push
lock
add
push
leave
sarl
cli
mov
dec
dec
and
cli
xor
cwtl
fs
test
push
mov
jmp
adc
sahf
cmp
out
mov
call
mov
sub
add
inc
pushf
call
sub
push
das
adc
push
add
addl
shll
jae
mov
sti
call
sub
add
mov
pushl
mov
add
je
cs
add
pop
or
add
jge
popa
add
dec
jmp
jb
inc
pop
into
out
lret
je
mov
sbbl
push
jae
enter
xlat
std
pushl
ljmp
je
or
pushl
ljmp
pop
call
ljmp
lods
icebp
mov
daa
call
xlat
cs
jns
push
sti
pop
ret
ja
repnz
add
and
ljmp
stos
jp
cs
cmp
xchg
call
rcrb
xchg
in
ljmp
xchg
std
cmp
lcall
add
cs
mov
add
int3
repz
adc
mov
add
mul
jno
mov
xor
xchg
leave
or
aas
adc
fdivl
fistps
cs
push
add
add
jp
xchg
test
ja
xor
icebp
lock
add
lret
cs
mov
add
cs
xchg
xchg
xor
stos
xor
ficoml
adc
xchg
adc
jmp
add
pop
dec
sub
call
mull
xchg
add
add
call
mov
push
inc
out
jle
call
mov
and
ds
mov
jb
test
lahf
mov
es
loopne
xchg
gs
cli
push
push
jg
push
sub
rclb
out
mov
hlt
dec
cmc
dec
psubsb
cmp
call
add
add
jle
in
xorb
push
clc
stc
lahf
jno
add
pop
xlat
cmpl
sbb
push
test
inc
or
mov
add
cmpsl
sub
or
loop
enter
or
adc
or
push
add
add
cmp
mov
add
add
test
add
sar
dec
out
subl
add
or
add
xchg
push
add
idiv
jle
jmp
push
sbb
add
fldenv
inc
cmp
jnp
movsb
inc
cli
leave
adc
call
inc
xchg
sbb
lds
cld
push
ficomps
dec
cli
xchg
and
mov
add
cs
jns
add
add
dec
ljmp
xchg
sarb
popl
lods
xlat
cwtl
mov
cli
xor
push
shll
data16
adc
stos
ds
xchg
ljmp
call
jmp
pop
adc
xchg
incb
scas
ret
repz
icebp
stos
push
adc
add
mov
test
stos
test
pop
cwtl
mov
les
adc
add
mov
sub
test
adc
mov
pushf
cmpsl
xchg
insb
cmp
cs
lcall
pushf
shl
test
jg
inc
jmp
mov
lret
jecxz
repnz
jmp
in
cmp
jmp
test
test
mov
dec
add
add
cli
les
add
jg
call
jb
push
cmpsb
jbe
cmp
sub
out
aas
jmp
xchg
add
mov
dec
inc
in
mov
jge
sub
cmp
mov
jnp
adc
inc
stc
je
shl
mov
inc
push
pmaxsw
inc
push
icebp
xchg
addb
add
add
or
cmp
mov
call
fmull
jae
adc
addr16
jmp
add
add
and
jmp
jo
lahf
movsl
icebp
cmp
add
add
ljmp
sbb
mov
or
mov
lret
divb
add
cmp
shr
jbe
call
repnz
ret
test
lahf
sbb
incl
add
pop
loop
add
or
adcl
decl
cwtl
push
add
cmpl
je
push
pop
mov
loopne
sti
add
das
push
push
aaa
ljmp
out
add
mov
sbb
test
adc
cld
mov
xchg
cwtl
xchg
and
sahf
incb
cs
adc
adc
sarb
ljmp
or
xchg
jle
std
dec
xchg
mov
icebp
sub
push
pop
shrb
mov
fdivrp
mov
out
and
test
sbb
shl
cmp
cli
mov
add
push
mov
out
cs
movsl
mov
add
adc
repz
cs
push
fistpll
cmp
subl
in
fnsetpm(287
adc
push
jg
shlb
inc
jne,pn
add
add
jl
jne
roll
sti
out
ja,pn
incl
shrb
dec
xchg
loope
jmp
add
cmp
ds
xor
call
gs
repz
fstl
add
add
xchg
out
add
fdivr
push
ds
sub
mov
je
insl
add
in
push
ds
ds
and
gs
repz
and
sbb
push
xchg
pop
push
mov
inc
fs
es
push
sub
stc
cld
in
or
xchg
add
add
mov
cld
pop
ret
cmp
syscall
push
mov
inc
loope
push
sub
cmp
adc
pop
xchg
add
cmp
out
test
cmp
fcmovb
or
sti
or
mov
cmp
inc
or
mov
fistl
roll
lcall
rol
ret
insl
jge
adc
add
add
cmp
push
inc
push
nop
add
cltd
push
inc
call
inc
in
jae
add
incb
cs
or
addr16
je
repnz
pop
das
incb
jecxz
stc
pop
jb
outsb
addr16
arpl
jle
aad
cwtl
inc
test
repnz
xchg
sub
out
sub
lds
inc
push
adc
add
out
cmpw
jae
ljmp
mov
or
js
dec
shr
data16
jae
iret
jno
push
dec
pop
das
addl
add
add
sbb
insl
subl
rol
sub
and
cs
hlt
or
add
add
pop
jge
lret
sbb
aam
push
jl
jnp
faddl
and
xor
and
cs
jmp
repz
jmp
repz
jmp
jl
daa
cmp
call
adc
fdivl
jp
aad
adc
aad
adc
mov
mov
or
in
incl
push
mov
xchg
or
pop
sub
jl
roll
adc
ja
cmc
mov
push
or
into
notl
sub
xor
lret
mov
add
adc
mov
mov
add
sub
inc
cmp
std
mov
clc
ret
sub
xorb
sti
clc
enter
call
daa
pop
addl
add
add
loope
insl
gs
ret
int
jp
add
add
hlt
popa
movsl
jl
cli
popf
jb
inc
inc
jg
dec
add
add
mov
call
sbb
pop
aam
imull
fdivr
sbb
pop
jmp
cmovno
cmp
add
jmp
mov
cmp
push
add
sbb
push
jbe
inc
xchg
jle
jle
mov
jae
in
xchg
ljmp
add
sub
mov
pop
cmp
add
aas
or
scas
mov
xchg
fadd
cmp
popf
popf
jg
dec
or
scas
pmullw
mov
cmp
call
jle
popa
bound
cs
xor
sarb
or
insl
es
xor
test
pusha
pop
js
sub
enter
ret
jo
clc
add
add
jns
cs
gs
pop
sarl
repz
cli
scas
lock
jae
add
pop
sbbb
loopne
out
cmp
dec
pop
cmpb
mov
push
sbb
fsubs
dec
xchg
iret
test
cs
in
push
fsubs
pushf
mov
gs
repz
mov
cs
in
in
add
add
fsubs
and
jbe
clc
cmp
adc
sub
repz
sbb
or
jbe
divl
mov
add
inc
ljmp
xor
sub
stos
sub
es
stos
sub
xchg
ret
cmc
ret
aad
stos
sub
inc
ret
fs
ja
stos
sub
add
sub
xor
stos
sub
arpl
push
sub
cmp
rolb
and
push
adc
sub
xor
andb
sti
push
bound
add
out
aas
call
add
les
or
outsl
and
jmp
jmp
notl
pop
loop
stc
add
add
jns
mov
or
stos
movb
mov
sub
push
mov
or
inc
cs
pop
test
push
xor
jle
and
and
adc
sbb
sbb
mov
lea
mov
mov
and
xor
ucomiss
lock
imul
add
add
pop
jg
xor
std
add
sub
cmp
pushf
or
imul
imull
outsb
xchg
ds
aad
push
sbbb
imul
test
push
ljmp
outsl
jg
push
out
inc
cmp
push
add
addr16
cmpsb
gs
inc
das
js
mov
stos
movsl
pop
add
add
cs
add
cs
dec
outsl
call
insb
mov
cmpsl
or
sub
jmp
add
xor
and
mov
sub
shlb
inc
mov
mov
stc
daa
stos
add
mov
or
leave
sbb
mov
stos
sub
orl
jne
test
pop
ljmp
js
push
mov
in
add
and
push
jp
imul
cli
jmp
sub
pop
fidivs
inc
inc
call
daa
cmpb
in
add
ljmp
dec
sub
inc
add
mov
pcmpgtb
lock
loopne
iret
push
add
fidivl
jne
test
add
imul
sbb
jno
pop
or
mov
stc
notb
sbb
xchg
popf
or
sub
mov
or
aam
or
and
inc
iret
ss
ja
jno
cmp
sub
jae
xchg
mov
xor
lahf
xchg
jg
jbe
sarl
and
pushl
add
cld
jb
adc
jb
sbb
adc
mov
xchg
and
nop
adc
test
and
xchg
cmp
xchg
add
vpsubq
setae
lcall
mov
mov
push
test
ja
mov
sbb
adc
stos
jl
mov
testl
push
add
and
or
mov
jge
mov
imul
test
test
imul
scas
fldl
add
ffreep
adc
out
clts
inc
cld
or
cs
add
imul
test
mov
xchg
and
cmp
rcll
loop
inc
dec
add
or
jb
add
add
test
ds
fs
jge
fimuls
das
mov
push
and
sub
add
mov
cmp
add
addr16
add
jns
stos
or
mov
or
subl
in
popa
sbbl
xchg
add
add
push
inc
jmp
jl
orb
jnp
add
add
lds
cli
jg
lods
imul
sub
addr16
sub
add
add
fiaddl
jmp
scas
into
add
sub
addr16
xor
or
icebp
fidivrs
cmp
mov
and
in
add
adc
or
insb
incl
push
push
add
jmp
adc
bound
add
insl
add
popa
add
pop
mov
adc
dec
lds
decl
or
jmp
inc
inc
lret
jb
data16
mov
ds
or
pop
add
incl
add
pop
out
sbb
roll
fdivrl
sti
pop
push
ja
jns
inc
adc
mov
lret
imul
sub
inc
or
scas
js
rclb
outsb
adc
in
xchg
inc
cmp
roll
add
testb
jp
pop
incb
xor
sub
mov
add
insl
mov
or
fldl
out
jb
or
outsb
incb
cltd
pop
loopne
call
insl
inc
call
scas
loope
je
fnstcw
imul
lock
pop
jmp
scas
xor
jne
daa
mov
and
add
andl
loope
cmp
call
es
in
add
add
cs
jp
pop
ret
jg
sbb
or
add
xor
outsl
xor
jmp
jg
cli
call
test
mov
call
std
data16
jmp
cmp
add
or
inc
mov
shll
jnp
in
mov
fnsave
mov
add
push
add
adc
or
adcl
sub
push
out
outsl
mov
shll
mov
shrl
add
sub
shll
adc
add
mov
add
les
in
adc
mov
ss
divl
sbb
cmp
fbstp
gs
cmpsl
add
add
inc
inc
imull
add
cwtl
decl
decl
adc
rorl
dec
push
cmp
push
aam
jg
out
adc
sub
jno
roll
jmp
pop
cmp
xor
rolb
test
jg
add
push
jmp
icebp
dec
add
add
std
mov
add
jg
add
test
stc
call
out
movhlps
add
xchg
out
push
jg
cs
out
push
scas
iret
add
fnstenv
ret
outsl
cmp
sbb
shrb
pop
jg
pop
out
and
sbb
call
pop
jle
das
hlt
add
add
mov
add
add
add
fnstenv
xor
in
add
outsl
jb
push
push
pop
ljmp
fnstenv
xor
int
cs
jle
jmp
jns
xor
inc
call
fdivs
sti
decl
test
rcrl
scas
data16
das
inc
mov
addl
std
outsl
rcr
push
into
push
sbb
add
cmp
adc
push
fwait
and
sub
into
jnp
in
ret
or
imul
int
pop
in
ret
leave
or
sub
add
xorl
call
add
cs
and
and
mov
cld
popl
add
jmp
icebp
test
jnp
or
jne
add
add
mov
adc
push
std
shrl
add
push
lcall
mov
mov
or
add
call
dec
jmp
jg
adc
in
outsl
jmp
jg
das
hlt
push
imul
add
or
das
test
jnp
push
imul
popa
add
xor
sub
decl
and
cld
decl
jnp
addl
ret
enter
mov
pop
sti
jge
add
or
cmp
jns
sti
add
jns
jmp
add
or
push
sbb
dec
xlat
std
inc
xor
lock
or
add
xlat
add
ljmp
add
dec
cmp
and
addb
pop
jle
loop
xchg
and
shl
sub
push
loop
or
pop
leave
add
shlb
adc
popf
cmp
outsb
shr
push
jmp
mov
cmp
xchg
adc
mov
add
xchg
push
ret
sbb
lods
push
ljmp
sbb
rcrl
repz
pop
jns
fisubrs
test
decl
add
inc
add
out
adc
aam
add
addl
out
push
shr
sbbb
jl
jo
data16
filds
inc
test
stc
jmp
sbb
mov
cld
pop
aas
clc
call
cmp
psrad
cs
cmp
cmpb
cmp
insl
inc
and
or
out
or
jns
sub
ja
sub
cmc
addb
inc
dec
outsl
add
jmp
mov
icebp
sbb
add
cli
test
sub
arpl
nop
cmp
call
mov
add
sub
push
mov
sub
call
out
ja
test
mov
or
call
aam
clc
loop
orl
stos
sub
jl
movl
sub
and
add
pop
sti
call
add
add
cmp
or
gs
sarb
cli
call
ret
inc
push
xchg
testb
dec
add
rolb
shlb
mov
sbb
add
test
sti
inc
rolb
setb
call
mov
adc
pop
add
inc
adc
dec
add
mov
incl
arpl
mov
add
pop
cld
push
test
ljmp
fldcw
aad
insb
inc
sub
inc
cld
jb
pop
mov
xlat
add
scas
mov
pop
add
fwait
std
aaa
nop
dec
add
pop
insb
inc
sub
out
adc
imul
scas
rorb
or
sbb
std
and
xchg
add
pop
insb
inc
sub
add
cltd
and
jae
pop
mov
inc
xlat
push
mov
notl
scas
incl
stos
filds
add
sbb
std
xor
add
sbb
loop
cmp
call
add
shl
add
subb
adc
dec
add
push
and
das
pop
add
sub
clc
push
ja
sub
pop
cmpsl
aam
xor
stos
aas
fdivr
mov
icebp
daa
add
add
repz
out
or
sbb
ret
sbb
cld
stos
adc
insl
and
les
inc
add
and
add
sbbl
fwait
add
or
arpl
add
jae
add
cmc
sbb
add
imul
call
push
or
loope
mov
fldenv
add
adc
add
push
hlt
je
mov
inc
call
inc
or
insl
and
in
and
in
sub
sbb
adc
in
mov
aaa
lret
sub
sti
test
sub
xchg
mov
inc
int
testb
pop
push
adc
movb
int
add
or
sub
mov
loop
or
add
aaa
jns
or
cmp
mov
inc
add
cld
jg
cmp
pop
fwait
cld
cmp
pop
or
pop
or
enter
inc
gs
cltd
into
cmp
out
dec
cld
cmp
flds
add
adc
xchg
inc
ljmp
sub
adc
add
imul
or
shl
or
ss
add
mov
cmc
mov
imul
lcall
outsb
jp
sub
pusha
cmc
sbbl
out
repnz
cmp
ss
popa
imul
push
or
addl
or
add
xor
imul
imul
and
pop
lcall
mov
jle
sub
in
xor
lods
leave
and
add
lock
xor
into
add
adc
insb
movsb
push
insl
push
mov
or
and
add
add
lods
ss
add
add
push
sbb
bnd
pop
pop
imul
adc
stos
add
add
push
pop
je
mov
or
mov
std
in
jb
push
xchg
ret
adc
adc
pop
cli
jmp
xchg
pop
jp
rorb
andl
cli
out
xor
jmp
push
pop
jg
add
add
add
scas
outsl
pop
adc
pop
mov
jp
jae
adcl
pop
cli
out
xor
jmp
pop
jg
inc
or
add
aas
cld
adc
cld
call
xor
testl
jnp
pop
mov
adc
jae
inc
rsqrtps
cld
call
orb
add
add
inc
orb
fisubs
call
orb
out
dec
cld
inc
sbb
cmp
add
aam
add
add
push
mov
mov
in
adcl
cmp
das
jg
psrlq
cli
ljmp
addr16
cmp
push
cmc
sub
jbe
cmp
pmaddwd
add
adc
test
xor
jg
stc
repnz
gs
icebp
push
scas
std
ljmp
filds
xchg
sub
or
adc
push
cld
xchg
jne
xor
stos
push
or
outsb
std
mov
data16
mov
jle
push
outsl
out
cli
cli
dec
cmp
das
popf
pop
das
imul
or
add
add
arpl
or
mov
cs
jp
addr16
and
inc
and
nop
data16
aad
lods
ss
arpl
jg
incl
enter
jle
pop
inc
add
ret
les
cmpsl
ret
or
mov
add
jbe
sub
push
imul
call
mov
gs
aas
jg
add
add
pop
pusha
into
and
imul
imul
roll
hlt
sbb
jmp
les
jp
lret
rcll
imul
pop
call
pop
addr16
sub
addl
inc
or
std
rorb
adc
ljmp
jle
sub
add
add
mov
pop
loope
sub
aas
jle
adc
test
add
jo
add
jmp
js
test
std
mov
push
cmpl
push
jns
dec
std
add
push
adcb
fwait
push
cmc
leave
std
cmp
scas
cld
decl
jnp
psubb
lret
cmp
daa
fdivs
xlat
mov
and
add
add
pusha
push
sbb
mov
xchg
adc
sbb
add
push
add
flds
cmp
or
cli
lods
add
sbb
mov
leave
xchg
xor
push
or
mov
push
sub
add
add
in
jae
rol
adc
lar
push
and
popf
and
sub
stc
out
icebp
push
andl
out
jmp
pop
repz
popa
xor
inc
das
cli
pop
inc
adc
inc
or
mull
sub
fdivl
cltd
mov
and
add
adc
mov
xchg
add
test
inc
mov
ja
cmp
out
out
or
and
dec
stos
cli
movsb
pop
gs
dec
push
add
outsb
leave
sbb
jo
daa
imul
cmp
popa
cmovbe
add
add
cmp
pop
imul
out
add
and
mov
fldt
and
add
add
jmp
sub
lock
movd
xchg
cmpsl
push
cli
jmp
mov
xchg
mov
push
gs
cmp
push
mov
test
or
data16
inc
mov
cli
push
mov
or
data16
cs
or
jno
bnd
arpl
repnz
icebp
out
stos
mov
add
popa
hlt
repnz
popf
jp
mov
out
dec
and
adc
push
adc
sub
test
inc
daa
adcl
iret
pop
inc
push
adc
or
cmpsl
jle
je
addl
jge
add
inc
or
psrld
fdivrs
and
cld
jae
mov
test
sbb
mov
dec
and
add
aaa
xchg
or
mov
sbb
or
mov
loope
or
fdivs
jae
mov
adc
mov
mov
inc
loop
es
xchg
cltd
jbe
mov
and
orl
sbbb
and
scas
stc
imul
sarb
sub
test
stos
gs
xlat
gs
cli
cmc
cmpsl
adc
cmpsl
push
ljmp
inc
cli
cmpsl
pop
repnz
stos
ljmp
clc
cli
cmpsl
and
jmp
decb
sti
cmpsl
insb
lock
add
inc
es
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
das
cmpsb
add
das
cmpsb
add
xor
add
xor
add
cmpsb
add
dec
cmpsb
add
xor
add
stc
lds
xor
shrl
add
add
shrb
xor
shrb
xor
sub
sub
dec
shrb
sub
fsubrs
xor
sub
sti
shrb
sub
shrb
xor
into
sub
repz
xor
sub
ret
sub
popf
int
sub
dec
int
sub
repz
stos
sub
repz
stos
sub
xchg
pushf
add
add
push
mov
fldcw
pop
cltd
mov
cmc
pop
push
mov
jae
jne
add
std
pop
cmp
and
iret
sub
mov
mov
jne
scas
je
or
add
dec
lock
nop
sub
xor
mov
ljmp
dec
pusha
adcl
jne
stos
add
pop
push
sub
loope
lock
add
add
sub
call
pop
adc
mov
push
data16
push
adc
push
cmpsl
incb
inc
out
or
pushw
add
loopne
pop
pop
mov
popw
mov
cmpb
add
ret
inc
cs
and
mov
movsl
jmp
popa
jp
arpl
inc
in
out
jle
add
fiaddl
jmp
stos
inc
stc
je
popa
push
cld
jbe
fnstsw
dec
inc
add
fmull
inc
loop
or
fwait
cs
in
jae
loop
add
fwait
cmp
popf
push
outsb
andl
and
dec
pusha
cmp
inc
push
cld
gs
les
push
mov
dec
lods
outsb
and
insb
add
add
ss
pop
jno
pop
popl
add
cmp
mov
sbb
aam
ret
clc
inc
rcrb
outsl
rclb
pop
sbb
push
mov
sti
cs
fisubrl
movb
idivb
dec
insb
inc
mov
movsl
add
add
mov
pop
inc
add
dec
call
mov
mov
fisttpl
add
ljmp
add
add
jns
fnstenv
testb
mov
mov
in
mov
mov
cmp
aaa
sub
and
repz
insl
dec
stc
pop
ss
jle
sub
test
aad
ret
dec
jno
jmp
test
gs
add
scas
cmp
jl
add
add
ret
mov
add
leave
incl
aaa
add
jp
cmp
in
test
jae
xchg
fldcw
adc
add
cmp
insb
clc
or
mov
cmp
pop
nop
or
xchg
jp
or
cli
pop
jmp
xchg
dec
push
js
inc
inc
test
mov
lods
loop
cs
cmc
mov
add
add
pop
int
add
addl
repnz
sub
jg
movsl
lret
mov
push
imul
fsincos
cs
pop
fdivrl
sti
jle
leave
pop
js
bound
cs
jns
cmp
out
daa
inc
push
scas
push
jmp
push
push
adc
dec
mov
cli
mov
jle
xchg
iret
push
movsl
sub
in
add
in
push
in
push
pop
mov
sub
pop
sti
loop
push
sti
cmp
in
aas
cs
push
inc
sub
adcl
iret
das
jg
repz
aam
push
mov
dec
mov
lods
add
xor
pop
scas
mov
sbb
jmp
add
add
push
sbb
ret
mov
add
sub
add
mov
sbb
cmp
xchg
dec
fldt
shr
popa
fs
jg
add
add
add
inc
and
mov
add
test
dec
cli
jmp
xchg
mov
in
mov
call
in
dec
loop
add
gs
testb
test
jmp
add
add
dec
test
stc
cld
aas
jmp
sarl
push
pop
ds
push
or
out
xor
stc
into
pop
inc
daa
mov
adc
pop
ds
daa
push
xchg
lock
jmp
lcall
call
adc
add
in
adc
ret
scas
dec
add
ror
je
or
and
jmp
and
add
dec
inc
push
or
fstps
push
divb
inc
sbb
pop
mov
loopne
aas
cli
sbb
cli
pop
adcl
adc
dec
inc
push
or
ja
xorl
push
or
xchg
fwait
js
pop
adc
out
push
in
cld
dec
mov
test
lret
adc
faddp
repz
add
lods
push
cli
inc
jecxz
jae
in
sti
fisubrs
jmp
cli
add
jae,pt
shl
mov
mov
rcll
test
inc
push
mov
sbb
cs
scas
push
mov
cmpsb
or
mov
push
xchg
mov
or
in
push
jnp
es
call
add
loope
cmp
in
push
mov
and
idivb
cs
inc
or
add
sbb
call
add
sbbl
cs
jp
mov
pop
in
repnz
dec
into
les
add
push
add
inc
stc
jns
test
stos
mov
mov
mov
ds
push
dec
ret
pop
fldln2
test
add
add
inc
stc
jnp
pop
pop
sbb
cmpsl
inc
dec
leave
mov
sbb
jne
mov
outsl
jns
loopne
int
inc
in
jae
sub
mov
and
mov
call
hlt
pop
loope
fmull
test
pop
inc
push
mov
out
dec
inc
fldt
dec
mov
add
shlb
add
fcmovnb
mov
dec
cli
xchg
hlt
jae
lods
test
idivl
mov
das
dec
insb
out
dec
sahf
xor
jae
mov
jge
push
cltd
jge
cmp
int3
jae
in
cli
add
cld
xor
ja
je
lds
inc
movl
ss
cmc
inc
mov
mov
xchg
fs
ds
push
add
add
ds
push
mov
cmc
std
mov
add
mov
push
jae
iret
test
fs
mov
sbb
cmp
inc
cmp
mov
leave
inc
dec
ds
outsb
xchg
xor
add
add
jne
movb
es
pop
or
cs
out
sbb
out
cmpl
or
pop
add
add
push
dec
cli
pop
pop
mov
cs
jle
push
cmpsb
dec
cli
stos
xchg
rcrb
lods
cld
push
jns
lcall
add
cmpsb
dec
dec
push
mov
or
inc
add
xor
dec
jle
sahf
pop
mov
les
inc
push
movsl
bnd
dec
pop
lcall
dec
je
mov
mov
jne
mov
pop
mov
push
cmpl
add
mov
jmp
jge
leave
and
dec
je
mov
fstps
and
pop
inc
gs
push
hlt
insb
in
cs
mov
divb
push
jp,pt
pushl
lods
sbbb
push
dec
xchg
mov
rcr
test
dec
adc
jns
sti
and
test
add
add
add
mov
lock
dec
pop
sbb
dec
icebp
xchg
add
jmp
sub
decl
out
arpl
call
js
xchg
jmp
ljmp
jmp
sub
add
push
inc
dec
sbb
dec
cli
insb
insl
iret
xor
dec
mov
add
add
inc
cli
inc
stos
add
inc
lret
inc
pusha
iret
pop
bound
mov
pushf
jno
aas
loop
inc
subl
mov
pushf
pop
jp
or
mov
mov
dec
mov
adc
notl
mov
or
jp
pusha
daa
and
jae
or
mov
jle
sub
inc
dec
inc
addl
mov
addb
add
cmc
ljmp
jbe
inc
jp
mov
jnp
jg
or
pop
xchg
addl
clc
call
addl
std
call
mov
add
cs
mov
jp
inc
xor
dec
mov
dec
cld
cltd
pop
scas
out
and
mov
add
stos
cmovg
out
adc
and
add
sub
push
incb
jmp
jns
or
shl
inc
pop
add
ljmp
or
lods
cli
decl
mov
jae
int3
xor
pushf
push
stc
loope
ds
out
es
shrl
adc
add
add
stos
mov
pop
xchg
call
stos
mov
mov
ss
pop
mov
mov
sub
mov
add
cmpsl
mov
inc
testl
sar
mov
lret
int3
push
shr
daa
inc
arpl
dec
or
dec
sbb
enter
sbb
rorb
rorb
rolb
add
cwtl
js
in
aam
ret
and
insb
ret
and
xor
add
insb
ret
and
xor
add
push
pop
sar
hlt
test
cltd
es
and
pop
cmp
fs
mov
fs
cmp
lret
bnd
or
mov
xor
sub
dec
mov
bound
or
sbb
add
jo
add
sub
ror
mov
iret
gs
adc
cmp
nop
adc
fs
enter
jp
sahf
pop
aas
pop
adc
sub
lea
sub
decl
mov
mov
push
std
add
fldl
call
adc
dec
call
or
mov
int3
xlat
jns
pop
jae
push
aas
add
add
repnz
xor
and
sbb
xor
cwtl
sub
sbb
gs
test
xor
out
movsl
cs
cli
jnp
inc
adc
pop
mov
push
stos
xor
ja
inc
lds
inc
adc
cmp
xor
xor
mov
add
cs
jle
add
add
leave
push
mov
pop
leave
repz
jmp
cli
jecxz
jno
jb
sti
dec
pop
hlt
sti
mov
mov
mov
addr16
pop
cmp
or
sub
movsb
mov
rcll
bound
mov
hlt
hlt
mov
jl
adc
xor
jmp
inc
jb
call
pop
xor
xor
jmp
into
xor
adc
ljmp
out
xchg
shrl
or
adcl
lret
sbb
sub
adc
pop
mov
pop
sub
cltd
inc
shlb
imull
mov
call
shr
loope
jmp
or
mov
add
add
mov
or
mov
scas
add
out
jp
add
sub
inc
jae
inc
add
shll
or
add
and
pop
daa
loopne
add
negb
ds
xchg
ss
jg
call
pop
adc
cmp
lret
cli
xor
push
cli
div
mov
cmpsb
lock
push
psubq
fidivs
jns
mov
jg
sbb
add
mov
imulb
pushl
push
cli
mov
jge
jmp
or
adc
sbbl
push
jnp,pt
and
cmp
int3
int
ret
imul
inc
ja
ds
mov
adc
jmp
cmp
add
in
test
aas
push
and
pop
mov
jo
xchg
add
popa
and
gs
cli
movsl
nop
or
mov
xor
cli
mov
inc
or
aas
cwtl
cld
add
addr16
daa
cli
jp
and
jb
sbb
xchg
or
fldenv
aas
jae
lahf
add
cs
jne
adc
push
adc
add
daa
daa
incb
lods
mov
cli
sbb
ret
xor
add
cs
jmp
test
in
icebp
cs
mov
ss
icebp
cli
fiaddl
adc
ret
pmaxub
xchg
lcall
jmp
jmp
xor
cld
pop
dec
sub
or
popa
iret
dec
call
jmp
jnp
add
outsl
sbb
or
test
iret
jns
stos
and
mov
addl
mov
or
inc
xchg
xchg
adc
in
xchg
pop
jmp
sbb
ret
icebp
cmp
or
dec
jmp
sub
addl
lock
or
jmp
add
add
jge
pop
or
lds
fistpl
mov
pop
sub
add
aad
cmp
ficompl
push
icebp
sub
mov
mov
sbb
daa
daa
out
add
test
and
sub
add
aam
add
jmp
ds
stc
pop
popf
inc
aaa
test
add
bound
ret
cld
incl
add
inc
test
ret
xor
jle
add
pop
cmpl
inc
psrlw
cmp
data16
mov
adc
gs
cmc
jmp
xchg
cmp
rolb
js
add
cltd
push
push
push
jg
ret
test
push
ret
jae
in
out
movl
push
test
adc
push
add
add
xabort
inc
mov
or
notb
pushf
ret
ret
inc
inc
pop
das
ljmp
outsb
adc
daa
mov
neg
aas
jno
test
mov
jne
scas
lds
mov
sub
ljmp
push
dec
stc
icebp
mov
push
lea
jle
fdecstp
adc
pop
sbb
dec
add
add
pushf
inc
jae
mov
and
push
mov
xchg
or
stc
mov
stos
fsubs
jb
jae
sbbb
sti
push
sub
inc
stos
inc
pop
add
adcb
outsl
loope
xchg
hlt
dec
cli
mov
xor
adc
inc
xor
and
sub
stos
xor
adc
cmp
in
xor
add
jmp
inc
popa
sub
add
add
daa
and
xchg
dec
addl
mov
gs
mov
mov
add
mov
fadds
mov
stos
cmp
je
stos
cmp
jae
pop
xchg
push
sbb
iret
and
subl
add
mov
cmp
inc
or
inc
imul
test
loope
push
jbe
inc
or
or
sub
add
sub
add
fisttps
jmp
neg
or
ret
movsl
jbe
xchg
xor
je
mov
nop
jbe
imul
mov
sti
sub
inc
sub
call
mov
push
sub
add
inc
repnz
and
repnz
gs
cli
mov
sub
mov
sub
test
sub
jmp
jl
and
pushl
cmp
push
pop
out
push
jbe
pop
push
loop
sti
hlt
cmc
mov
adc
data16
inc
sahf
dec
mov
dec
cmc
jne
icebp
shrb
xchg
jbe
out
loop
mov
add
cs
ljmp
loope
cli
sbb
cmp
adc
jnp
inc
out
xor
cmp
jno
cmp
ss
push
jle
cmp
in
push
dec
push
xchg
or
adc
decb
stos
cmpsl
add
cs
mov
push
xor
je
or
ljmp
cmpsl
xchg
mov
in
daa
cmpsl
icebp
push
lret
add
add
sahf
das
inc
iret
ret
mov
shll
cli
cmp
push
call
cs
in
push
sbb
bound
pushf
loop
mov
es
add
das
adc
pop
mov
push
mov
stc
clc
bound
les
mov
ljmp
xchg
and
enter
adc
fldt
add
addb
bound
icebp
xor
in
test
outsb
add
xchg
and
sub
lods
leave
or
mov
stc
mov
xchg
inc
int
call
insl
xor
stc
xor
cli
push
rorl
jno
or
add
push
bnd
fdivr
cmp
add
jb
fsubl
aaa
add
sub
jns
fbstp
sar
fdivl
aas
jmp
push
xor
outsb
xor
lret
pop
ret
pop
sub
add
push
daa
push
add
jmp
cmp
icebp
aaa
jne
pop
adc
sbb
ljmp
adc
notb
adc
push
jno
mov
pop
lea
push
mov
push
push
incl
cld
sub
outsl
push
sti
ljmp
jns
mov
pop
js
adc
pop
ret
push
mov
jmp
push
xor
or
jne
pop
adc
pop
add
mov
add
divl
and
jmp
sbb
add
mov
cli
cmp
icebp
enter
cli
mov
xchg
std
pop
xchg
cmp
mov
mov
out
push
out
test
jae
or
gs
mov
and
add
dec
cmp
adc
sbb
and
aas
ljmp
xor
fwait
xor
out
sbb
incl
ficoml
add
add
add
scas
inc
cwtl
call
mov
or
or
sub
call
mov
jecxz
shll
aad
scas
sub
das
sub
sub
cmp
sub
scas
adc
sbb
mov
sti
fldcw
push
mov
rcll
cmp
lods
rol
inc
lret
pop
push
fiaddl
add
add
fstpt
test
cmpb
mov
mov
hlt
lcall
jmp
hlt
mov
hlt
and
dec
data16
adc
outsb
shll
lds
jmp
sub
out
xor
add
and
jae
cmp
add
dec
push
mov
loope
mov
loope
mov
imulb
mov
sub
add
inc
ja
add
push
mov
push
pop
add
mov
sub
stc
mov
je
filds
xchg
sub
mov
mov
psubq
or
push
cli
div
adc
and
pop
adc
jbe
and
cmp
inc
add
loop
fdivp
cmc
test
jo
push
inc
fcomp
inc
xchg
cmp
adc
push
inc
add
jmp
and
decl
add
xchg
xor
cmc
push
adcb
adc
call
fdivrl
push
mov
shrb
bnd
or
push
je
sub
cmp
pop
adc
repz
movsb
mov
sti
xorl
jle
mov
add
fildll
in
sub
push
add
add
inc
xor
mov
add
insb
filds
and
mov
scas
push
test
psubq
xor
rorb
xor
jbe
stos
punpckhwd
psubq
sub
cli
jecxz
xor
xor
ucomiss
jmp
fisubrs
jae
add
or
xchg
scas
add
add
and
cmp
mov
hlt
jecxz
push
outsb
add
inc
xor
mov
lds
out
stos
xlat
sub
mov
inc
sarl
test
sub
sub
mov
xchg
sub
mov
mov
test
add
scas
das
jne
loopne
ret
loopne
push
adc
out
jmp
loop
add
sar
add
jge
sbb
and
es
les
pop
bound
jge
std
and
dec
lds
es
add
adc
loopne
jmp
xor
mov
mov
popf
stc
sub
icebp
mov
movups
push
cli
push
js
and
cmp
ljmp
add
hlt
mov
decb
add
sub
test
mov
into
inc
hlt
in
adc
notl
insb
cld
dec
push
repz
aas
cli
and
adc
jns
jne
cs
add
jg
and
add
or
sub
outsl
xlat
add
xorl
loop
dec
cli
divb
test
addb
incl
add
ret
inc
repnz
cli
ljmp
push
in
add
adc
adc
add
cli
scas
add
decl
pop
repnz
xor
decl
mov
jle
cld
pop
add
dec
sub
lcall
dec
cli
in
sbb
out
adc
jle
cmp
add
sub
jmp
add
in
sbb
out
sbb
push
mov
xchg
inc
dec
xchg
cmp
cli
bound
sub
push
xchg
sub
push
flds
jns
dec
dec
jns
adc
mov
fwait
repz
fnstenv
sti
out
fmull
das
jle
pusha
adc
add
mov
add
xor
and
arpl
jge
cmpb
hlt
sbb
inc
in
ret
loope
sub
mov
mov
add
add
mov
fs
cmp
out
xchg
xor
or
sbb
jmp
xor
sbb
hlt
mov
into
lcall
add
add
jno
fisubrl
es
clc
add
out
lds
aas
add
or
mov
jmp
xchg
inc
es
xor
cli
sbb
ds
cmc
ds
xlat
in
and
lods
jmp
sarb
vpsubb
cmc
enter
sub
or
in
push
inc
jmp
in
mov
scas
add
add
jnp
xchg
scas
in
in
leave
pop
sub
add
cmp
sbb
jb
adc
ja
insb
movntps
pop
push
decl
adc
cmpl
add
dec
sub
dec
sar
test
push
mov
movsl
inc
hlt
jl
mov
jns
je
cmpsl
insl
clc
add
rolb
add
out
gs
cmc
sbbl
inc
inc
cmp
push
fnstsw
fs
leave
mov
jp
or
xchg
je
mov
subb
es
orl
pushl
pop
sub
stos
aam
dec
push
int3
sub
jecxz
cli
inc
sub
or
xor
mov
lock
ljmp
mov
jno
movb
cmp
movsl
cmpsl
jne
ljmp
push
mov
fbstp
push
je
mov
jle
adc
clc
push
sbb
xlat
xchg
lcall
cmp
das
lcall
repz
jl
and
or
jle
adc
xor
test
dec
inc
sub
les
add
leave
lcall
add
rclb
xlat
cmp
call
mov
pop
sub
loopne
out
clc
pop
into
add
adc
shlb
imul
jb
pusha
sub
cmp
call
mov
jmp
xchg
mov
add
nop
sarl
loope
pop
stc
push
add
add
mov
sub
lahf
sbb
repnz
or
xor
push
sub
or
ljmp
inc
in
and
inc
dec
dec
ds
sub
hlt
in
and
inc
rorl
jmp
xor
cld
in
and
xchg
dec
mov
test
mov
mov
cmpsb
rclb
xchg
mov
mov
out
adc
lahf
adc
xchg
cld
mov
mov
mov
adc
cltd
xor
add
mov
mov
mov
adc
cmpsl
push
les
sbb
inc
cli
mov
data16
inc
pop
cmpsl
jb
add
add
mov
mov
cmpsb
test
inc
xlat
cmpsb
xchg
les
push
mov
mov
ds
push
out
sub
jb
mov
int3
sarl
ds
sub
push
mov
mov
inc
ds
sub
jb
add
mov
aas
ds
adc
popa
pop
add
add
jmp
mov
ds
sub
repz
mov
ds
sub
jmp
movsl
add
popa
rolb
xchg
sbb
inc
movsl
add
fcmovnb
cltd
popa
pusha
inc
push
add
cmp
call
add
xor
ret
jno
push
inc
sub
dec
jecxz
shr
add
add
mov
mov
add
mov
and
call
add
push
aam
and
aas
pop
add
add
iret
push
loopne
xor
dec
or
call
sub
pop
cmp
in
sbb
incl
push
aad
stos
sub
sbb
incl
add
add
mov
stos
sub
sbb
incl
icebp
aas
jmp
sub
sbb
incl
lret
sub
pop
pop
cmc
insl
sbb
incl
xchg
push
shrl
pop
jnp
in
sbb
mov
fdivrp
inc
aas
jmp
adc
mov
mov
data16
inc
add
add
jp
push
movsb
call
std
cld
lock
push
mov
inc
cli
addr16
out
push
mov
add
mov
das
cltd
sbb
inc
cli
cmp
pop
add
mov
pusha
int
mov
inc
cli
push
mov
mov
push
js
movl
out
add
callw
cs
dec
adc
loopne
and
cmp
mov
cli
and
cmp
cs
lock
icebp
data16
cli
sti
or
ds
psubsw
out
jmp
cli
add
jne
lcall
cli
gs
lods
sar
pop
sar
pop
cmpsb
aas
shrd
add
inc
pop
sahf
mov
mov
mov
pop
xchg
add
lock
dec
xor
ret
ss
inc
push
out
lea
pop
in
sti
jbe
jg
leave
push
mov
mov
xor
inc
sub
icebp
sbb
add
andl
pop
inc
in
adcb
mov
mov
pop
cmp
jno
hlt
jp
sbb
mov
xor
push
lds
mov
mov
add
add
add
aaa
jne
sub
gs
fwait
jp
mov
int
xchg
ja
sbb
jmp
sbb
add
xchg
sub
cmp
push
mov
fsts
cli
bound
adc
mov
pop
sti
sbb
out
cli
or
add
or
add
sub
or
xor
lcall
push
mov
jb
add
dec
icebp
cmp
adc
xlat
mov
xchg
imul
call
and
inc
lret
cmp
and
mov
inc
xchg
repnz
xor
pop
std
lcall
xchg
ret
call
sbb
dec
repnz
call
cmc
call
mov
xchg
inc
cld
ds
ret
push
clc
push
fldl
or
jne
xchg
push
cld
movsl
hlt
jo
dec
in
les
loopne
psllq
mov
test
push
lea
fdivp
inc
decb
sub
or
add
push
imul
enter
dec
add
sub
ljmp
cwtl
aaa
in
test
or
lea
mov
daa
cmpsl
push
cli
lods
in
xchg
xchg
enter
and
aaa
pop
push
test
adc
xchg
int3
push
cli
lods
fldl
xchg
enter
and
daa
fs
test
rorl
adc
cli
add
add
pushf
dec
je
add
xor
mov
inc
add
in
mov
ja
sbb
mov
or
mov
cmp
in
call
ret
sub
mov
inc
cmc
inc
pushf
dec
cmc
inc
xor
in
sub
in
mov
out
mov
mov
add
add
ds
pop
je
call
mov
sbb
dec
daa
cmp
pop
push
gs
cmp
std
pop
pop
push
cs
jmp
push
rorl
call
sub
jo
cmp
ss
mov
cli
jmp
test
jle
adc
cld
call
push
in
mov
jmp
jge
push
xchg
push
jae
orl
sub
or
bound
insl
int3
bound
push
adc
nop
bound
jle
add
dec
lock
lcall
inc
sar
cmp
xor
jbe
mov
sahf
outsb
ljmp
inc
ljmp
add
fsubrl
mov
adc
dec
shrl
cmp
leave
pop
mov
lret
add
jmp
and
mov
cli
push
fsts
call
add
push
test
outsl
mov
dec
dec
push
cld
cmp
cli
xchg
sbb
unpckhps
xchg
push
mov
movsb
rolb
add
add
push
scas
je
test
cwtl
or
int3
add
jp
xchg
xchg
es
push
add
mov
clc
xchg
faddl
andb
mov
repz
or
mov
cli
cmp
inc
ds
enter
es
add
mov
add
add
aas
mov
out
xchg
mov
inc
lods
xchg
mov
cmp
sbb
call
mov
sub
loopne
adc
sbb
mov
sarl
sbb
inc
jl
cmpb
pop
outsb
cmp
and
cmp
testb
push
popa
push
mov
aad
mov
pop
mov
add
cli
pop
pop
adc
cld
in
add
cmpsb
out
mov
fucomi
xor
jmp
pushw
test
rorl
pop
call
test
call
sahf
divb
sbb
xchg
jmp
sub
enter
xor
push
aad
out
jb
or
call
arpl
iret
pop
xor
add
xchg
out
bound
jp
adc
xchg
out
add
jmp
adc
rolb
inc
cld
mov
xchg
std
ljmp
orl
cli
push
mov
xor
call
push
test
imul
cmp
push
pushf
cmp
mov
adcl
cmc
rolb
add
test
push
lea
rorb
dec
lret
inc
jp
fisttps
push
jno
add
or
ret
jl
jae
jns
jg
call
or
mov
test
clc
xchg
mov
andb
mov
repz
sub
lods
or
cli
pop
popf
cltd
or
add
aam
sbb
jmp
jmp
mov
lods
or
jmp
jp
sbb
push
xchg
jmp
stc
lcall
bound
cli
mov
pop
dec
movsl
data16
pop
sbb
leave
lcall
pop
lahf
push
cli
mov
jp
ja
test
xchg
pcmpgtw
test
or
add
test
stos
pop
and
in
sbb
mov
mov
inc
test
add
pusha
wbinvd
xchg
insb
inc
xor
lds
inc
packsswb
xor
rclb
in
add
test
sbb
gs
add
push
mov
mov
enter
cmp
out
call
adcb
jns
pop
or
sbb
add
test
shl
inc
mov
in
dec
or
cli
dec
stos
mov
cltd
js
add
scas
aas
cld
ss
inc
or
test
in
call
sbb
jb
cli
push
jb
test
out
inc
punpckldq
aas
out
mov
pop
push
ljmp
mov
add
dec
cli
dec
jo
std
xchg
stc
stos
cmpsb
add
add
inc
mov
andl
imull
pop
dec
inc
add
lcall
add
out
jns
nop
add
pop
incb
mov
mov
int3
adc
out
push
jge
push
test
ljmp
jle
lea
add
insb
jnp
pop
aam
inc
pop
add
inc
mov
dec
or
jnp
xor
push
dec
push
sbb
add
pop
add
jmp
mov
ljmp
and
imul
jo
mov
push
cli
mov
push
mov
cwtl
xchg
repz
popa
std
std
sbb
lds
xchg
push
orl
push
cli
imul
lods
loope
xchg
adcl
push
cli
cmp
mov
lods
dec
adc
jmp
sbb
or
lods
pop
adc
movb
mov
sbb
sbb
or
sub
jle
pop
test
mov
mov
sbb
sbb
or
sub
add
cwtl
jle
pop
test
insb
scas
stc
jl
inc
mov
pop
je
stos
shll
cmp
jae
or
subl
inc
gs
inc
ja
shll
cmp
fwait
cmp
jmp
inc
popf
jmp
adc
sub
mov
fs
mov
cmpsb
mov
addb
scas
inc
mov
in
scas
dec
jae
lods
inc
cli
bound
add
sahf
push
mov
mov
leave
jo
push
mov
pop
and
jbe
push
jle
mov
mov
push
movsb
shrb
jbe
push
jb
and
and
jle
jno
mov
es
das
insb
sahf
inc
dec
jmp
test
and
jle
inc
cmpl
test
mov
nop
inc
push
jle
cmpl
mov
add
ja
xor
ret
mov
add
lret
mov
pop
ret
ret
inc
repz
addl
jnp
or
inc
xor
loop
loopne
cmc
adcl
rol
jnp
cmp
cld
into
jo
mov
jne
cld
ret
test
add
add
add
mov
jo
mov
cmc
xchg
jbe
cld
cld
decl
cli
cmp
enter
push
cli
les
pop
sahf
lods
sbb
mov
iret
lods
out
imul
lods
pop
adc
inc
addl
cmp
mov
jl
fidivrs
sub
push
jle
mov
mov
movsl
pop
into
gs
mov
dec
pushl
rcrl
jle
adc
fistpl
test
jle
add
and
mov
add
dec
jnp
lock
pop
mov
repz
cmc
inc
and
xor
popa
cmp
cmp
aaa
out
lds
loopne
pop
dec
out
mov
cmpsb
mov
add
fdiv
imul
imull
add
fsubr
add
jge
add
add
cs
jle
iret
cwtl
mov
subl
sbb
repnz
or
ss
xchg
sbb
sub
je
jge
rorl
cli
into
test
add
std
jno
jle
stc
add
add
cmp
popf
ss
push
add
scas
test
out
call
push
mov
mov
jae
xchg
fnstsw
sbb
cmp
xchg
daa
or
push
add
push
bound
jl
sub
mov
insl
icebp
push
sbb
ret
add
mov
cmp
add
xchg
jo
add
addl
or
pop
ljmp
push
jnp
sbb
mov
dec
addl
in
cmc
call
ljmp
sub
arpl
push
inc
dec
loop
cmp
incl
imul
fisttps
mov
mov
xor
cmpb
add
add
out
sbb
jle
add
pop
jle
ss
jae
xchg
mov
es
xchg
dec
add
jne
sbb
add
add
xchg
sbb
sbb
js
pop
xor
pop
add
pushf
jae,pt
lcall
lods
sti
out
cmp
jnp
mov
in
roll
add
add
lods
sub
ret
scas
jle
lds
in
fiaddl
test
imul
xchg
cmp
sti
xchg
call
jg
pop
insl
xor
ja
daa
mov
sarb
jns
or
pop
inc
pop
ja
mov
xor
inc
in
lods
inc
cmc
xor
jnp
ja
call
jp
cmp
add
jb
aaa
jnp
in
ss
lock
hlt
pop
mov
add
jnp
testl
inc
sub
mov
cltd
xor
cltd
sub
imul
add
movsl
mov
push
jmp
test
call
stos
add
jmp
shll
cli
jmp
aas
inc
xor
adc
jp
cli
insl
add
cmpsl
aaa
or
push
push
or
insb
pushl
aaa
lret
sbb
pop
push
bound
cli
mov
sub
xchg
arpl
mov
mov
test
nop
test
clc
cmc
call
je
add
add
icebp
outsb
pop
mov
dec
jns
push
jg
add
mov
jae
dec
mov
fdiv
pop
pop
mov
cli
call
add
mov
addr16
imul
cmp
add
add
dec
add
dec
dec
add
adc
xchg
std
push
lea
addl
push
ret
sbb
pushf
or
pop
sahf
mov
jb
rcr
inc
add
lret
aas
lret
cli
sarb
lret
repnz
movsl
pop
testb
lret
mov
js
sub
jne
mov
mov
ljmp
sahf
les
xchg
sub
leave
push
ja
inc
mov
pop
leave
sbb
std
push
jle
add
jb
cmpl
repz
mov
lods
pop
cmp
je
sub
mov
mov
loope
xor
daa
jg
psraw
push
add
jle
add
cmp
and
sub
mov
jae
xchg
iret
loop
outsl
xor
push
pop
cmp
mov
or
subl
add
add
mov
outsl
xor
push
outsb
cmp
jno
or
subl
xor
sbbb
test
inc
mov
outsl
push
stc
jmp
xchg
in
add
add
out
cld
cltd
fadds
bound
xchg
sbb
test
popf
xor
push
mov
xor
dec
cwtl
mov
add
inc
cli
stc
arpl
idivb
or
sbb
or
adc
push
sub
lock
xorb
insb
out
cli
push
out
test
mov
jp
mov
je
test
ljmp
clc
lcall
test
pop
out
rcrb
add
jae
sub
xchg
add
je
add
add
inc
add
dec
cwtl
jmp
or
cld
jbe
call
xchg
cmp
add
xor
loop
jl
cmc
orl
insl
and
inc
xor
sbb
xor
sbb
out
ret
mov
pop
idiv
bound
dec
mov
sbb
lahf
jle
xchg
outsb
add
fs
jae
add
xor
cli
xchg
clc
jp
add
int3
cltd
out
jmp
jmp
cwtl
popa
ds
xchg
fdivrp
pop
mov
lods
int
jo
xlat
lock
add
fs
jae
push
cli
mov
icebp
xchg
dec
sub
or
hlt
mov
out
ljmp
out
pop
mov
add
es
add
das
adc
imul
add
stos
aaa
in
cmp
lds
out
aam
xchg
pusha
ret
mov
pop
and
push
pop
jmp
add
repnz
mov
pop
outsb
push
cli
shl
pop
push
mov
sbbl
jecxz
loope
lods
repz
jl
js
daa
test
and
mov
hlt
mov
repz
add
outsb
out
mov
aaa
popa
test
sti
out
cmp
pop
adc
stc
jmp
stos
sti
stc
jmp
xor
or
daa
cmpsb
xor
sti
subl
pop
jno
and
ret
add
sub
jae
xor
test
add
fldt
jp
sub
add
jb
ja
cmpsl
add
add
test
mulb
mov
test
mov
lds
je
js
sub
test
add
add
add
clc
inc
pop
ja
xlat
call
stc
mov
ljmp
jns
mov
adc
add
aas
push
test
add
cld
hlt
adcb
add
int3
jl
add
dec
push
fdivl
inc
decb
sbb
les
mov
add
rdpmc
push
add
inc
sahf
stos
std
mov
fdivl
fidivrs
stc
incl
jnp
ucomiss
jmp
out
ljmp
xor
jle
jecxz
or
std
pushl
notl
dec
mov
adc
adc
mov
fidivrs
push
faddl
add
cmc
cld
jno
add
mov
xlat
jl
outsb
cmp
outsl
call
lea
lret
psubusw
std
call
test
sbb
js
push
pusha
mov
incl
add
fcomps
outsb
mov
push
andl
in
jns
or
or
cmp
outsb
test
test
aas
in
jbe
lcall
sub
dec
idivl
or
js
divps
jp,pn
mov
push
xchg
xchg
push
testb
daa
popa
cmpl
out
out
outsl
lock
add
add
out
ficoml
add
and
add
add
sub
cld
push
or
out
movsb
push
cli
sub
dec
pop
jb
pop
mov
cli
in
pop
test
dec
mov
jmp
sub
mov
jmp
jle
int3
lods
jle
int3
sbb
in
push
mov
or
pop
cmp
and
stos
lret
dec
pop
sub
add
xchg
loopne
jmp
add
add
mov
int3
pop
push
les
pushl
addb
sub
add
add
cld
decl
ss
je
incl
insl
cld
notb
inc
mov
or
flds
add
xlat
ja
lea
or
daa
xor
add
add
dec
inc
add
xchg
notl
adc
or
add
enter
xchg
add
xchg
push
mov
push
ret
int3
int3
and
int3
int3
add
int3
int3
stos
test
addl
dec
dec
push
mov
out
pushl
push
mov
xor
stc
pop
sbb
xchg
mov
xor
lods
mov
stc
leave
repnz
add
add
add
aaa
mov
jle
out
mov
scas
add
repnz
xchg
orb
cwtl
call
sub
jno
push
push
mov
stc
and
std
call
das
add
push
adc
add
js
subb
mov
lret
add
je
sbb
cli
add
jae
add
and
lods
mov
add
fimull
xorb
xorl
mov
add
jecxz
out
imul
jmp
insb
inc
sahf
dec
pop
xchg
mov
stos
cmpb
hlt
loopne
hlt
jb
push
arpl
add
data16
ja
fs
addr16
push
mov
out
mov
add
out
inc
hlt
add
sti
subb
bnd
jle,pn
lds
add
cs
fs
dec
pop
test
cli
push
cs
jge
sub
jne
jne
out
aas
hlt
cmp
stc
mov
stc
mov
in
mov
mov
je
lods
mov
stc
sahf
test
stc
stc
cmp
stc
call
push
cld
subb
jge
add
add
add
clc
dec
pop
mov
bnd
adcl
jge
cmp
lret
or
sub
cmp
insl
adc
lcall
cmp
insl
add
add
addl
cwtl
fs
call
jmp
js
loop
mov
jnp
ret
xchg
je
jge
decl
mov
add
test
push
mov
sbb
decl
nop
test
stc
icebp
imul
iret
loop
incl
add
pop
imul
cs
cli
xchg
dec
mov
dec
call
cli
stc
fists
hlt
xor
cli
dec
push
or
stc
and
test
rorw
sub
cmc
ljmp
pop
xor
pop
clc
cli
loope
push
xchg
in
xchg
add
add
out
jl
lret
add
out
lds
lcall
mov
cli
stc
cltd
jg
in
jp
les
pop
les
stc
movsl
pop
sub
jno
bound
mov
push
std
push
call
enterw
js
jle
std
movsl
cmp
push
stos
jnp
cld
daa
icebp
insb
sbb
adc
push
daa
cld
pop
jge
or
add
lods
mov
repnz
xorb
subl
shr
xor
lret
mov
out
jmp
pop
push
mov
test
lock
xchg
lock
out
xchg
xchg
stc
push
sti
subb
bnd
bound
push
push
mov
stc
inc
rolb
insb
add
add
idiv
ss
lods
cmp
test
je
out
stc
push
sbb
stc
je
in
dec
insb
mov
cli
div
fdiv
add
jmp
rclb
push
cld
pop
outsl
in
push
jb
and
mov
mov
stc
pusha
lahf
fs
cmpsb
movsl
xchg
subl
add
sbb
je
adc
testl
ljmp
add
orl
icebp
ljmp
add
xor
add
jnp
sbb
ret
decl
cmpl
xorl
add
or
or
push
dec
inc
in
lret
sub
sarl
pop
and
add
add
jmp
lea
cs
idiv
lods
movsb
add
push
mov
pop
mov
movsl
xchg
sbb
adc
push
idiv
dec
std
ljmp
roll
mov
xor
cmp
idiv
mov
push
stc
and
mov
cmpsl
mov
xchg
notb
out
or
add
fidivl
add
cmp
xlat
xorb
rclb
xchg
iret
xor
shrl
test
cld
ret
add
enter
lea
js
pop
push
sarb
es
add
ja
sti
mov
push
in
divl
add
call
jecxz
test
push
add
add
mul
mov
mov
adc
out
pop
rorb
gs
in
cli
test
add
or
mov
stos
ljmp
outsb
cmpl
push
dec
add
call
mov
xchg
xchg
addb
cmp
fists
push
sbb
push
add
out
movsl
subb
push
cvtps2pi
add
add
dec
mov
sbb
imul
jge
xor
es
inc
jae
test
lods
repz
lahf
mov
or
je
bound
add
inc
mov
dec
test
ja
adc
or
pushl
cmp
testl
push
call
add
idiv
adc
or
xlat
jo
pop
out
mov
clc
push
and
mov
rolb
inc
jmp
nop
repnz
mov
jg
or
shll
aas
add
pop
stc
push
dec
adc
ffree
incb
clc
mov
push
mov
jne
adc
rorb
jnp
pop
pop
pushaw
mov
xchg
mov
add
push
mov
stc
and
mov
cwtl
mov
sbbl
flds
dec
inc
lcall
jno
sub
das
jecxz
ljmp
pop
jnp
cs
jl
fidivrl
sub
pop
jge
imul
cmp
add
sbb
std
in
sbb
or
std
in
add
sub
add
xlat
std
test
pusha
jbe
mov
pop
insb
mov
dec
mov
je
xchg
jne
add
add
jbe
mov
add
mov
mov
add
mov
fwait
mov
outsb
les
add
mov
cmp
add
add
ss
mov
add
addb
gs
sarb
jge
add
add
add
add
jmp
add
mov
add
ja
ja
ja
add
add
scas
call
sub
add
in
xchg
add
jmp
in
call
sub
sti
shlb
clc
xchg
repnz
xchg
jmp
jmp
add
add
and
insb
adc
push
divl
push
iret
jae
cmpsb
or
xor
jmp
mov
and
jns
cmp
test
test
push
xchg
xchg
out
sbb
repz
jp
addb
cmp
add
add
dec
idiv
lock
dec
dec
mov
les
or
mov
pop
add
add
or
int3
ret
ror
jecxz
int3
int3
ret
ror
dec
addr16
mov
orl
bound
sbb
les
ret
int3
int3
add
int3
int3
mov
push
js
jne
or
incl
sbb
sti
call
add
push
pop
add
add
pop
jmp
ljmp
sbb
add
fnstcw
add
add
ljmp
xchg
pop
call
fdivr
pop
in
mov
cmp
mov
fadds
add
fsts
cwtl
lcall
fnstcw
ljmp
adc
int3
push
mov
int3
jp
mov
jge
pop
jno
std
scas
pop
or
xor
mov
fdivr
test
pop
roll
js
subl
std
test
add
lock
dec
shll
pop
mov
mov
ret
mov
mov
loop
sub
sarb
adc
negl
jae
in
pop
jae
hlt
mov
sarl
in
lock
das
mov
add
mov
add
jecxz
les
or
xchg
jge
jmp
jge
out
adc
dec
jb
sub
daa
add
call
add
pop
push
in
dec
dec
xorl
bound
pushf
mov
jno
jl
sbb
cmp
and
test
dec
test
adc
cli
insl
add
cld
cmc
cmc
aas
jmp
sub
shlb
test
dec
test
call
mov
lods
add
add
mov
cmp
aam
aaa
sti
jo
mov
mov
je
loop
andb
push
mov
ss
mov
push
inc
add
add
clc
es
sub
jle
add
rcl
push
mov
xor
int3
sbb
in
sbb
dec
mov
dec
xor
jg
incl
add
push
cmpsb
idivl
loopne
cmp
je
dec
stc
mov
push
push
ss
push
jno
incl
fs
jne
xor
aas
add
sarb
jbe
iret
mov
sarb
cs
dec
test
mov
push
sub
mov
int3
loop
ror
adc
int3
repnz
add
ja
cmp
pop
bnd
pop
adc
cs
sbb
out
cmp
cld
ljmp
pop
ja
std
ljmp
into
ljmp
push
iret
je
or
ds
dec
adc
daa
dec
stc
sbb
cmovo
push
in
sti
jmp
cmp
jge
push
dec
pop
insl
call
mov
dec
dec
mov
add
add
jl
ja
jne
mov
insb
loopne
pop
or
adc
cmc
pop
fcoms
sub
lds
pushf
jp
jne
call
loop
icebp
insb
out
add
xor
ljmp
sarb
shlb
jns
jne
cld
outsb
add
adc
mov
inc
cs
es
add
outsl
inc
jmp
xor
adc
and
cs
sti
out
inc
test
sub
add
jmp
fnstenv
int3
xor
out
mov
mov
pop
fdivs
sub
jnp
fldcw
insl
jno
jl
push
and
stc
ss
or
pop
xor
popf
in
jmp
add
add
hlt
cmp
jb
xor
adc
repz
insl
add
testl
int3
xchg
mov
in
push
int3
imul
ret
decl
push
js
add
add
mov
pop
jnp
sub
inc
je
xchg
in
inc
je
xor
fwait
push
jnp
test
sbb
push
in
xchg
add
add
movl
idiv
shr
push
pop
xchg
add
mov
fdivrl
pop
flds
aas
xor
roll
or
pop
add
and
sbb
inc
sbb
iret
lods
lods
cld
test
mov
les
ss
push
ds
cmp
jp
adc
cmp
scas
sbb
scas
adc
adc
add
push
dec
sbb
cmpsb
adc
push
icebp
pop
add
loope
notb
xor
std
ljmp
inc
cmp
into
mov
movsl
cli
mov
out
or
mov
push
aas
add
popa
in
xchg
sbb
stos
fsubs
add
ret
xlat
ret
mov
jmp
sub
pop
push
inc
lods
daa
add
mov
or
add
mov
incl
cmp
jle
lss
call
call
jl
adc
shll
push
jmp
push
pop
call
jo
push
mov
ret
sbb
repnz
stos
mov
ret
jge
sub
jnp
fmul
pushl
fildl
sbb
aas
insb
jb
sub
jge
sar
mov
lock
pop
jb
pop
dec
fs
cmc
dec
sbb
inc
jmp
mov
dec
daa
scas
sbbl
insb
push
dec
nop
out
sbb
push
fnsave
sub
and
sub
bound
mov
or
xor
cli
push
fnsave
stos
cmp
fcmovu
cs
sbb
std
jmp
pop
incl
add
push
je
inc
insb
mov
add
or
call
add
push
addl
scas
mov
add
lea
jp
push
push
insl
mov
pop
inc
pop
sub
pop
mov
cmc
addb
loopne
xchg
adc
add
sbb
push
aas
dec
xchg
shll
add
mov
mov
inc
addl
scas
inc
testl
sub
xor
push
mov
addl
sub
insl
movsl
sub
and
loope
mov
bound
dec
loop
mov
lods
cmp
xor
sahf
push
std
mov
jmp
insb
mov
add
add
dec
jne
out
mov
and
adcl
mov
xlat
addr16
cs
fld1
jbe
push
out
dec
pop
add
cmp
add
xor
out
push
mov
cmp
out
stos
in
ret
movsl
jno
add
add
rcrl
repz
in
cs
mov
mov
pop
add
add
ljmp
and
add
ret
sbb
out
jecxz
inc
dec
jae
mov
jp
or
sub
ljmp
out
inc
fldenv
add
dec
out
insl
fcompl
bound
add
out
insl
in
out
clc
in
test
scas
pop
jge
fiadds
add
sub
inc
pop
bound
test
push
mov
add
add
jmp
cs
cmp
shlb
push
xchg
jl
adc
push
shrl
leave
in
push
lret
ss
push
sbb
out
mov
add
push
lock
or
test
scas
push
adc
addl
mov
fsubl
call
jecxz
ja
lret
addl
insb
decl
and
shrb
shrb
push
cld
orb
ss
orb
lret
jecxz
push
adc
adc
pusha
pop
notrack
jecxz
xor
inc
and
mov
shlb
mov
cld
call
incl
mov
decl
insb
add
rcrb
push
add
add
add
mov
das
cmpl
xchg
adc
repnz
movsl
iret
xor
pop
test
pop
cmp
test
cmp
test
mov
repnz
mov
xor
cmp
mov
xor
loopne
mov
cs
push
jge
push
push
mov
lods
shr
incl
add
xor
stc
cmp
mov
mov
pop
in
hlt
iret
int3
ljmp
int3
cli
jae
in
pop
outsl
mov
add
add
adc
jbe
stos
aad
xchg
lret
mov
or
sbbl
imul
out
outsb
push
imul
out
xchg
xor
popl
add
in
outsb
cmp
mov
sbb
pop
push
es
push
dec
sub
mov
xor
adc
stos
sub
leave
mov
inc
rorl
cltd
pop
mov
cmpsl
adc
cld
lods
mov
bound
bound
bound
subl
testl
daa
aad
jmp
std
xor
inc
sbb
add
add
out
xchg
adc
dec
sub
jle
sub
dec
insb
inc
pop
dec
jo
add
adc
sub
lcall
jne
xchg
push
jnp
popa
push
aad
jb
mov
std
pusha
es
incl
ds
shl
outsl
call
add
push
mov
xchg
pop
cwtl
add
add
dec
filds
add
add
dec
cld
clc
call
xor
mov
pop
mov
out
lods
sbbl
add
loop
mov
cmp
xchg
push
jle
mov
add
xchg
jmp
sub
stc
jge
popa
add
mov
pop
xchg
xchg
sub
je
mov
jge
inc
add
ja
jnp
add
dec
mov
pop
stc
pop
pop
orl
inc
dec
mov
add
cs
xor
mov
out
int
dec
dec
inc
cmp
pop
aas
xor
mov
ds
push
pusha
add
adc
mov
inc
test
xchg
lahf
loopne
dec
sahf
add
cs
add
cs
sbb
jecxz
test
mov
std
jmp
xor
xchg
adc
incl
add
sbb
sbb
dec
push
hlt
test
pop
inc
cmp
xchg
sub
outsb
jbe
jmp
rorl
out
stos
orl
and
andl
jns
add
add
stos
jmp
imul
es
sbb
lahf
icebp
add
add
xchg
inc
push
mov
add
cwtl
add
jo
shr
xchg
fidivs
push
ljmp
std
aad
mov
sti
imul
sub
call
adc
stc
mov
fdivr
push
movsb
push
jge
sbb
aad
ds
ss
bound
test
lods
fdivr
lcall
jge
and
xchg
add
mov
adc
into
jno
jnp
and
mov
dec
add
aaa
sbb
jmp
mov
jge
cmpb
cmpb
cmpsb
mov
fidivl
stc
sbb
xchg
test
sub
ret
aam
mov
jae
mov
lcall
add
cli
xor
add
push
or
push
add
add
sub
insb
mov
jp
out
dec
pop
aas
mov
incl
incb
pop
pop
idiv
rclb
mov
push
ret
adc
int3
int3
rol
int3
int3
pop
xchg
push
pop
xchg
sub
call
inc
je
mov
das
and
shl
stc
cs
test
ljmp
mov
add
sub
or
add
std
pushl
lcall
xor
stos
inc
test
mov
push
xor
adc
push
arpl
cmp
dec
cvttps2pi
mov
mov
xchg
xchg
add
bound
dec
pop
adc
xor
mov
popa
cs
adc
insb
or
inc
movsl
daa
test
add
fmuls
xchg
imul
pop
cld
arpl
into
test
test
add
push
clc
jp
push
incb
out
jmp
fsubrs
shlb
mov
push
adc
dec
mov
add
dec
xor
pop
xor
mov
dec
lret
ror
push
mov
xchg
add
add
into
out
in
pop
loop
or
out
or
sbb
sbb
pusha
mov
add
cmp
mov
call
mov
lds
call
mov
add
call
adc
mov
test
stc
jmp
dec
stc
out
jo
mov
add
add
cwtl
in
add
jmp
in
add
int
jmp
xor
mov
aaa
xchg
jg
ljmp
mov
js
jp
ds
add
push
jle
dec
add
mov
inc
push
add
mov
mov
adc
xchg
xchg
sub
testb
add
pop
xchg
push
pop
insb
mov
fs
shl
inc
mov
or
ja
inc
cmp
outsb
dec
adc
repz
dec
xchg
jns
dec
mov
mov
add
imull
dec
sbb
inc
cs
stc
inc
ljmp
movb
dec
pop
add
or
bound
insb
imul
rolb
add
testb
xlat
or
hlt
aaa
sbbl
js
add
adc
fldcw
jle
das
call
mov
popa
test
push
mov
call
mov
test
addl
adc
movsb
les
jno
or
pop
aas
insb
mov
xor
inc
out
stos
jb
out
add
add
repnz
dec
lret
inc
lea
xor
repnz
stos
jp
out
pop
lret
outsl
add
add
sbb
out
jl
or
add
jae
add
ja
js
add
sub
or
sbb
out
push
ja
aaa
lods
mov
out
add
jbe
addr16
add
mov
xor
add
add
stos
inc
xchg
mov
jle
hlt
test
add
js
or
arpl
decb
sub
enter
leave
dec
xor
test
stc
scas
lods
inc
push
aaa
movb
mov
mov
push
xchg
in
call
cmp
jg
out
call
sub
lret
add
add
lret
mov
jle
jmp
pop
je
jmp
mov
insb
cmc
dec
clc
add
das
std
mov
adc
or
push
xorl
sbb
sub
mov
in
cli
leave
pop
sub
adc
mov
fldenv
decl
les
call
mov
mov
add
les
xchg
cli
pop
inc
jg
mov
jmp
adcb
lret
js
cmp
jecxz
in
bound
sub
push
push
cltd
aam
xor
cld
addb
mov
lods
and
xchg
in
mov
push
push
adc
stos
jns
cwtl
loope
pop
lock
rclb
ror
push
int3
push
ror
lcall
jmp
in
mov
or
imul
aas
sub
dec
sbb
jmp
outsl
inc
bound
add
jmp
std
pushl
push
dec
or
mov
jo
push
cmp
add
jns
addr16
mov
jbe
and
mov
out
outsl
subb
add
add
push
hlt
and
or
mov
roll
cld
out
bound
jg
jnp
cld
or
insl
inc
sub
movsl
pop
xor
pusha
xor
jns
and
jb
test
jecxz
lds
pop
and
mov
sti
pop
jge
pop
jp
shr
movb
dec
xor
add
sbbb
add
out
stos
mov
pop
sbb
imul
add
clc
jns
aas
sub
stc
cs
xchg
jmp
insl
dec
sbb
add
je
sbb
ds
pop
mov
and
inc
xor
sub
daa
or
sbb
adc
stc
movl
pop
sub
stc
scas
xchg
add
xchg
int3
sbb
in
mov
idivb
add
stc
pop
jne
jle
adc
sub
sbb
or
movsb
cs
mov
and
je
cli
push
and
ret
imul
inc
sub
int3
sbb
bound
push
scas
rorb
jnp
or
mov
or
adc
pop
dec
mov
or
mov
sbb
sahf
sysenter
call
bound
push
outsb
sub
or
pushf
jmp
pop
push
sbb
incl
mov
mov
dec
xchg
scas
cmp
pop
xlat
std
rolb
add
push
int3
pop
out
enter
std
ljmp
lcall
in
jp
xor
xor
push
jnp
mov
bound
jbe
std
ljmp
data16
imul
sub
mov
adc
mov
out
and
test
call
ja
daa
cwtl
add
add
scas
add
dec
add
add
jns
sbb
inc
xlat
jl
pop
mov
cmp
ja
pop
push
scas
xor
add
inc
jg
add
cmp
add
add
adc
pop
jmp
js
sar
mov
mov
ja
add
adc
sbb
sbb
dec
pop
lods
mov
and
add
add
test
sbb
call
bound
sbb
jnp,pn
fsts
jnp
lds
pop
es
scas
cmp
add
cmpsl
cmp
jge
or
sub
xchg
dec
sub
sbb
mov
sbb
roll
flds
jg
out
test
jge
in
cmpsb
enter
add
fwait
outsb
or
pop
jg
or
ret
jge
hlt
std
incl
xchg
xor
xchg
adc
jp
fsubrl
inc
enter
movl
dec
pop
inc
dec
adc
cmp
inc
inc
call
sub
shrb
inc
loopne
cmp
add
rorb
xchg
stc
pushl
jge
add
add
add
sbb
rolb
std
lcall
xlat
cmp
out
jge
jnp
or
ficoml
test
add
cld
xchg
call
lods
xor
insl
or
inc
or
or
test
adc
insl
std
gs
push
xlat
jbe
push
jge
mov
ljmp
add
add
push
std
pushl
dec
inc
sbb
xlat
std
call
in
jmp
inc
and
hlt
call
std
subb
add
aaa
rclb
lods
xchg
out
cs
rcr
fistpll
roll
mov
mov
xchg
xor
inc
cld
popa
mov
lods
sti
add
add
sbb
test
adc
push
add
js
in
fdivs
mov
addb
sub
lods
shlb
or
adc
mov
or
cmp
fildl
dec
add
rclb
test
or
mov
jns
xchg
inc
xchg
fldcw
mov
dec
and
ret
bound
add
aas
mov
stc
jb
or
stos
add
test
add
cli
fnstcw
jge
icebp
decl
insl
xchg
verw
mov
adc
loope
ds
pop
xchg
movd
or
imul
add
pop
jl
leave
sub
cmp
sbb
roll
pop
mov
incl
add
mov
dec
add
xchg
movsb
stc
mov
sarl
adc
add
add
test
pop
mov
jecxz
fldl
test
cmp
mov
push
cmpsl
fldcw
push
xlat
add
sbb
outsb
sub
adc
cli
call
add
add
in
jne
xchg
mov
add
popa
add
dec
fwait
cmp
shll
inc
jnp
jg
dec
clc
add
add
push
fidivl
sti
add
cmpsl
add
cs
lds
push
in
sub
in
cmpsb
jmp
mov
jl
sbb
aaa
sbb
aad
and
jne
inc
sbb
cld
fldenv
adc
cmpsb
clc
sbb
std
incl
add
and
stc
sti
or
jge
inc
jge
scas
jbe
xchg
test
push
fidivl
mov
push
add
fildll
xchg
cmpsl
fistpll
or
inc
push
add
add
xor
jnp
stos
test
ss
jge
outsl
es
push
jg
sbb
mov
cmp
incl
add
jmp
adc
fnstcw
xlat
push
sub
or
daa
add
clc
jg
adc
stos
xchg
mov
shlw
xchg
lret
xchg
roll
push
adc
add
jo
inc
subl
mov
stc
sub
adc
in
out
mov
mov
mov
sbb
cld
cmpsl
sub
add
repnz
aad
ja
add
shl
rolb
add
jmp
sub
mov
test
add
bound
inc
test
jnp
in
jnp
movsb
jns
rcr
sub
orb
shll
adc
stc
roll
cmp
orb
inc
inc
int3
lock
mov
add
and
outsb
add
xchg
xor
cmp
push
fdivl
incb
clc
test
negl
stc
add
jae
jl
repz
lds
push
outsl
or
ss
clc
pop
cli
pop
mov
dec
sub
jle
inc
cmpsl
repnz
std
pushl
cmp
cmpsl
std
shlb
std
ljmp
mov
adc
scas
std
jmp
and
cmpsl
cmpb
hlt
sbbl
std
lcall
mov
je
inc
cmp
cmpsl
in
filds
jbe
jbe
add
inc
inc
fbld
insl
xor
sub
movsb
imul
sub
sub
lods
lret
flds
bound
cmp
add
add
lret
inc
push
cmpsl
ljmp
add
jns
mov
cmp
xchg
xchg
lret
mov
iret
js
mov
jp,pt
mov
cmc
mov
loop
popf
or
add
outsb
cmp
andl
inc
mov
daa
add
add
mov
cs
and
sbb
out
daa
jl
add
add
add
add
add
jg
add
insb
pop
adc
loop
xor
cmpsl
jp
lods
outsb
cmp
mov
or
dec
add
je
adc
inc
xor
bound
xchg
inc
inc
bound
jge
pop
add
inc
hlt
and
mov
xchg
movsl
inc
adc
xor
add
mov
pop
dec
sbb
add
loop
jecxz
sub
jle
icebp
mov
hlt
shlb
cwtl
test
push
clc
out
add
jmp
gs
sub
add
test
sub
add
add
dec
adc
aad
add
notb
xchg
stos
xchg
adc
cld
add
leave
or
add
mov
roll
ror
loopne
jge
or
add
push
clc
add
notb
add
adc
fstps
repz
mov
sub
inc
js
inc
daa
mov
je
test
je
xorl
dec
and
cmp
add
add
push
in
imul
add
clc
and
cmpsl
push
std
ljmp
push
or
cmpsl
cmp
jp
jl
or
add
mov
or
cs
ja
cwtl
xchg
mov
lods
fldl
fldt
fisubrs
xor
test
movsb
adc
cmpsl
add
movsl
push
call
or
mov
in
stos
les
pop
fcmovu
sub
cmpsl
std
jl
fwait
std
or
add
add
int
add
add
bound
add
mov
or
insl
push
mov
out
xor
shr
add
adcl
pop
cld
out
sbb
adc
or
out
dec
pop
fiadds
cs
or
add
cmp
flds
aaa
push
shlb
roll
add
jmp
and
push
push
add
sti
movd
cwtl
ret
push
mov
dec
sub
in
mov
std
aad
mov
cmp
in
popf
sub
sub
mov
roll
mov
push
stos
aaa
or
jbe
or
lds
imul
mov
out
cmp
add
lods
cmpsb
std
iret
cli
call
repnz
loope
ljmp
jmp
enter
and
add
jl
jnp
or
mulb
hlt
mov
push
test
add
sub
mov
or
pop
cmp
xlat
addl
imul
movl
shrb
xor
add
add
jno
addb
decl
lret
sub
add
decl
push
decl
jnp
rorb
push
call
xchg
or
outsb
add
arpl
les
les
and
jg
cmpsl
xchg
cs
clc
movsl
movsl
dec
jl
movsl
xchg
adc
std
test
add
imul
inc
mov
inc
cld
pop
pop
lods
push
push
xchg
rorl
cmp
ljmp
and
and
es
cld
rolb
or
push
lret
in
ret
push
clc
sub
cmc
flds
out
decl
add
add
test
sti
insl
leave
andl
flds
daa
xorl
xor
sbb
outsl
sbb
dec
push
push
mov
adc
test
mov
mov
cs
les
movntq
test
xor
movsb
out
icebp
jmp
jae
lds
stos
jae
add
add
mov
inc
ret
mov
add
add
add
cli
ljmp
mov
jo
push
sub
test
push
add
jno
jo
jb
test
inc
outsl
in
scas
lcall
push
std
call
decb
jmp
pop
sbb
jbe
push
js
in
ljmp
push
xchg
test
push
mov
loop
xchg
add
add
call
decb
cmpsb
xor
add
push
add
lret
push
in
add
pop
and
insb
jnp
das
jge
fadds
cld
jle
push
add
jle
fs
pusha
cmp
add
push
mov
and
orl
sbb
dec
clc
js
push
add
add
pop
xor
mov
jl
cmp
test
cld
decl
jbe
into
inc
orl
jnp
pop
add
std
ljmp
push
test
hlt
mov
lock
movsl
movsb
test
xor
xchg
cli
rcrl
or
jge
xor
out
addb
adc
add
inc
lds
push
inc
dec
inc
xchg
xor
fadd
call
lods
xlat
add
mov
std
ljmp
sbb
cld
cs
jns
ss
std
or
cltd
mov
jb
int
and
in
jmp
add
les
xor
sti
scas
xor
or
lods
push
scas
les
test
cs
jo
add
bound
lret
addb
adc
jo
or
mov
sahf
in
jmp
add
mov
std
cwtl
mov
sub
outsl
jnp
add
mov
ljmp
fnstcw
add
add
jbe
mov
jnp
pop
inc
bound
ret
pop
xchg
add
pusha
stc
cmpsl
xor
shrb
sub
ljmp
test
stos
mov
jbe
stc
shr
js
out
sub
jmp
sub
test
int
stos
aaa
fsubrl
stos
mov
aas
out
dec
clc
and
test
sub
addl
movsl
add
lcall
cs
movsb
add
sub
lods
shll
add
and
dec
fbstp
enter
add
jp
pop
jae
faddl
jmp
js
add
inc
push
mov
inc
jo
or
jp
jmp
insl
in
mov
arpl
dec
in
inc
aas
add
mov
pop
pop
test
stos
stc
ljmp
jg
jo
incl
sub
xchg
add
add
insb
mov
jnp
dec
add
add
lock
decb
enter
mov
sti
incl
mov
das
add
das
cs
jle
push
xor
fdivs
mov
stc
movsl
jmp
mov
and
dec
stos
fstps
fildll
sti
jmp
cwtl
xchg
out
push
popa
pop
dec
data16
sub
xchg
jle
push
xor
add
add
sub
stc
lods
pushf
add
movsl
insb
mov
sub
jns
sub
std
ljmp
push
cmp
xor
jg
out
cltd
add
xor
cmp
mov
scas
pusha
dec
sub
mov
dec
ja
adc
push
jmp
test
jmp
lds
add
mov
imull
and
adc
add
mov
out
mov
jne
mov
data16
rorb
test
test
aas
repnz
arpl
add
mov
cs
jl
leave
test
inc
pop
push
push
movsb
out
andb
add
jmp
mov
xor
js
and
or
or
xchg
cmp
add
add
lods
add
fldcw
jmp
xorb
imul
push
idiv
mov
sub
xor
cmp
cmp
cmc
addr16
xor
jo
lods
xor
test
sub
cmpl
in
lahf
or
int3
or
xor
lods
enter
mov
add
ror
mov
shll
js
in
mov
inc
hlt
inc
pop
adc
push
js
mov
sti
lods
dec
xchg
and
or
mov
mov
test
xchg
icebp
sti
add
jle
add
adc
es
fsubrl
mov
cmp
add
add
movl
in
xlat
sti
xchg
cmp
in
or
outsb
and
xchg
add
call
sub
lea
mov
lods
shl
adc
sar
jmp
xchg
ja
das
push
rcll
push
mov
pop
enter
sbb
pop
add
add
xchg
std
out
xchg
std
inc
mov
adc
push
rcll
movb
xchg
std
inc
add
or
add
dec
es
cmpsl
add
cmc
js
sbb
sub
sbb
cmp
mov
adcb
data16
fiaddl
aaa
outsb
in
add
add
mov
and
push
add
shlb
movsl
out
sti
lahf
into
mov
loope
add
mov
icebp
jne
or
outsb
ja
lcallw
adc
sub
push
int
repnz
cltd
and
xchg
fs
jb,pn
jo
stos
xor
push
add
dec
movsb
add
test
divl
bound
out
inc
ds
idiv
rcl
stc
jmp
out
dec
xchg
cmp
aad
out
outsb
jo
lods
xor
cltd
jg,pn
jmp
lahf
mov
rorl
sbb
dec
stos
add
mov
call
add
add
inc
in
pushf
mov
hlt
inc
xchg
add
enter
addl
lods
dec
cmp
cmp
movaps
outsb
push
sar
add
cmp
push
incl
mov
es
shll
inc
fsubl
cld
inc
adc
pop
mov
and
in
sub
stc
call
dec
loopne
inc
in
cs
cld
xchg
cmp
add
add
test
out
sbb
test
ss
jae
sub
leave
push
or
imul
jmp
int3
in
call
std
pushl
xchg
jae
das
sbb
adc
adc
push
inc
je
push
inc
or
add
out
xchg
std
jmp
push
pushf
adc
add
jno
jp
push
add
cs
std
test
das
mov
sub
jmp
lds
lods
nop
in
cs
xor
xlat
xor
in
xchg
mov
out
add
lahf
xor
jne
cmp
jmp
add
int
fimull
cmp
sbb
out
das
or
add
jge
mov
icebp
push
pusha
mov
add
lahf
mov
inc
add
jo
inc
in
loopne
repnz
out
add
add
icebp
arpl
mov
xor
in
sub
dec
aad
aaa
sub
lods
and
ss
ljmp
dec
xchg
inc
aaa
inc
jo
les
sub
fcmovb
jb
aas
xchg
add
adc
mov
sub
std
test
cmc
cmp
ret
dec
sbb
xor
shlb
ss
bound
int3
and
mov
mov
lret
xchg
sub
inc
add
sbb
inc
fcomp
xrelease
insl
in
xchg
in
aas
add
xchg
add
add
pop
repz
add
xorb
pushf
jge
movb
mov
add
adc
xchg
sbb
inc
pop
fsubrp
mov
add
add
repnz
incl
pushf
jge
xchg
add
orl
es
and
add
sti
add
add
mov
insb
inc
cld
int3
pop
lret
loopne
cmpb
outsl
xchg
and
cmp
test
flds
adc
or
call
jl
push
and
je
add
push
adc
call
inc
popa
cmpl
scas
xchg
into
xor
imul
adc
cmpsl
gs
jns
test
aas
loopne
jmp
cmpsb
add
and
mov
sub
mov
movsl
rol
out
stos
les
mov
sub
add
add
jmp
adc
negb
ljmp
or
cli
lods
mov
add
andl
jg
add
xchg
loopne
out
sbb
add
add
jno
sahf
sbb
stos
into
mov
test
dec
push
xchg
decb
adc
jle
pop
sub
popa
inc
cs
cs
jle
add
das
orl
cltd
addr16
aas
test
sti
cmp
bound
addl
dec
call
and
test
bound
xchg
inc
test
xchg
pop
test
cmp
xchg
sahf
stc
jmp
imul
xchg
out
sbb
sub
pushf
stc
jmp
add
test
add
and
nop
xchg
sbb
cld
jo
lock
sub
cmp
and
adc
les
jge
cmp
ret
jp
arpl
mov
fwait
loope
repz
adc
or
add
pop
dec
push
mov
xor
stc
mov
pushf
test
mov
add
sub
hlt
clc
inc
push
adc
dec
sbb
rclb
je
dec
int3
je
adc
verr
jmp
mov
mov
and
cld
fmuls
mov
pop
push
call
cmpsl
push
xchg
pop
jl
lods
xchg
or
or
test
bnd
push
or
test
incl
add
movsl
sar
lock
mov
or
iret
sbb
test
ljmp
es
shrb
adc
inc
lods
adc
mov
xor
movsl
arpl
subl
mov
cmc
andb
xchg
jae
or
push
aas
fcomp
mov
shll
dec
cmpsb
addr16
add
add
add
loop
add
call
repnz
loopne
add
bound
repz
cmpsb
ficoms
dec
fmull
mov
fnstsw
add
sub
pop
fisubl
add
add
adc
loop
or
data16
add
fdivr
decl
repnz
push
push
repz
scas
hlt
pop
add
push
add
repnz
add
add
jl
cmp
push
sbb
mov
pop
fdivr
adc
gs
aam
fdivr
mov
jbe
int3
lods
out
int3
cmp
lods
push
bound
cmpl
jge
cmp
jns
je
jbe
xor
repnz
cmp
sub
xchg
enter
orl
sub
add
add
dec
sbb
mov
add
sahf
pop
pop
lods
outsl
add
add
inc
push
ret
lret
int3
sbb
int3
cmp
int3
sbb
int3
mov
xchg
test
ret
adc
dec
mov
lods
jnp
sbb
mov
push
sti
xor
push
aaa
xor
rclb
add
dec
int3
int3
mov
dec
int3
int3
and
in
mov
xchg
test
push
shlb
sbb
push
dec
inc
adc
cmp
adc
inc
or
cs
movsb
shrb
adc
adc
mov
cli
jl
fiadds
mov
add
push
movsl
pop
icebp
dec
movsl
push
jg
push
insb
ror
cmc
mov
add
add
ror
cli
fs
repnz
jge
mov
mov
clc
xor
inc
or
pop
add
outsb
lds
jge
jge
add
jmp
sub
loop
xor
jp
sub
jb
mov
mov
out
add
lds
rclb
mov
add
jmp
add
lods
es
js
loope
add
inc
je
repz
xor
lret
xchg
push
add
mov
cmpsb
pop
add
add
stos
add
add
mov
sar
orb
test
es
orb
clc
jmp
mov
sub
jecxz
in
test
mov
jmp
mov
and
rorb
or
fwait
dec
dec
aad
popa
xchg
push
in
pusha
add
addr16
xchg
add
sub
ljmp
loop
out
mov
adc
add
xchg
add
sub
loop
jmp
add
add
aam
popa
xchg
push
in
iret
stos
or
add
pop
add
stos
or
add
mov
call
add
test
mov
call
add
dec
adc
sbb
arpl
xor
mov
loop
add
add
mov
push
mov
add
add
mov
testl
pop
pop
push
inc
pop
jg
call
pushl
fistl
mov
test
push
jp
or
add
mov
lods
andb
mov
xchg
test
andb
call
mov
add
dec
jmp
cs
mov
add
add
stos
dec
jecxz
sub
sub
sub
sub
jle
dec
testb
mov
mov
in
sub
test
sub
and
out
add
cli
orb
test
es
rolb
or
iret
cli
mov
loope
add
push
mov
sarb
dec
xchg
out
add
add
xchg
mov
fldenv
stos
addl
shrb
add
mov
inc
loop
jmp
aaa
jmp
add
jnp
push
inc
out
daa
jnp
mov
xor
pop
mov
mov
add
sub
mov
xchg
fstl
loope
sub
push
mov
mov
add
add
cmp
aas
jmp
xchg
in
je
repnz
jmp
sub
out
jmp
mov
jae
and
adcl
ljmp
mov
stc
jmp
and
icebp
aas
jmp
mov
ret
int3
cmp
mov
movl
sbb
add
call
pop
test
dec
dec
jle
add
cld
mov
cld
call
call
pop
mov
jg
add
jmp
add
xchg
sub
jno
xor
xor
mov
lret
add
mov
rolb
in
mov
mov
add
adc
xor
jp
lods
and
mov
sbb
cs
xchg
scas
std
jmp
cltd
cmp
repnz
leave
int3
ljmp
in
pop
and
sbb
adc
movsl
xor
std
mov
out
test
loop
or
mov
sbb
pushf
cmpsb
jne
add
scas
push
adc
add
cltd
xchg
push
sbb
xchg
int3
fmull
add
cltd
std
test
cltd
xlat
xchg
xor
jmp
add
pop
jnp
mov
out
mov
lret
or
jmp
and
mov
inc
pop
repz
xor
jns
push
jbe
out
sbb
and
out
adc
sbb
mov
push
cmp
add
mov
jnp
pop
add
add
aam
pop
mov
dec
lea
add
mov
sub
ret
push
add
lea
add
xchg
lock
int3
mov
mov
int3
cmp
pushf
jge
adc
adcl
clc
xchg
orl
push
lods
test
xor
mov
ja
fadd
xchg
divl
mov
int3
add
sub
add
pusha
mov
add
mov
add
jo
cmp
jmp
xor
add
xor
jmp
cmp
add
xor
add
adcl
ret
inc
mov
pushf
jl
adc
add
testb
add
push
fmuls
insb
jns
repnz
add
test
xlat
add
add
jns
hlt
pop
mov
call
fwait
lret
js
in
ds
lock
or
hlt
mov
push
pop
mov
jnp
inc
sbb
jbe
leave
jnp
mov
adc
cmp
pop
ja
int3
hlt
jecxz
adc
add
cs
fcmovbe
add
add
mov
mov
adc
mov
lret
sub
cwtl
test
jnp
jp
jp
or
fistpl
popa
adc
cltd
mov
push
or
lods
in
add
in
jae
and
or
sbb
js
sahf
std
pushl
push
push
dec
push
mov
ljmp
and
dec
inc
sahf
std
incl
add
add
std
ljmp
push
stos
test
ss
dec
add
out
inc
dec
or
lcall
int
add
test
imul
test
test
push
add
bound
dec
fidivrs
jp
out
movsl
out
add
ret
xchg
cmp
add
or
push
fisttps
pop
add
xchg
cld
mov
mov
xchg
push
cli
jns
stos
cli
mov
push
mov
stos
in
clc
mov
test
mov
loopne
cltd
push
mov
push
sub
xchg
xchg
xchg
pop
xor
mov
mov
int3
cmp
pushf
jge
std
cmp
push
movsl
xchg
test
dec
inc
jmp
mov
stc
cmpsb
mov
inc
add
subl
add
insb
cmp
add
pop
stos
inc
cltd
out
scas
mov
jno
call
stos
add
pop
mov
jns
pop
daa
jbe
mov
ds
stos
mov
mov
negl
rorl
jl
pop
std
loop
add
add
aas
clc
je
jmp
test
jmp
xchg
cwtl
jl
add
or
or
cld
loop
and
les
je
clc
push
inc
insl
or
add
xchg
subl
mov
cld
decl
jo
jns
subb
cmp
xor
inc
hlt
fistl
xor
add
cmc
sbb
int3
jp
int3
jb
mov
lods
mov
dec
fmuls
ljmp
data16
icebp
pop
mov
xchg
addb
cmp
xor
or
adc
ljmp
push
cmp
sub
pop
add
add
inc
cmpsl
in
xchg
xchg
jno
ljmp
and
lock
roll
pop
add
aam
test
orl
cmc
idiv
mov
jl
jmp
out
cs
negl
cs
xchg
add
dec
jp
mov
add
ljmp
add
fistl
fsubr
add
xchg
adc
add
sub
jp
cld
dec
stc
push
dec
cmp
out
pushf
outsl
cli
roll
add
js
hlt
aas
sti
add
cli
mov
outsb
cmp
jnp
cld
test
jo
xlat
sub
xchg
jmp
pop
mov
dec
add
and
call
push
and
jmp
add
push
xor
stc
ljmp
mov
fs
xchg
out
cmc
add
add
add
mov
jb
sub
cmpsb
jmp
pop
push
jp
sub
add
shlb
js
imull
out
addps
mov
lea
add
cmc
add
in
mov
mov
push
mov
cmpb
mov
mov
mov
fiadds
or
pop
push
jne
push
fsts
mov
mov
orl
push
or
or
mov
pop
mov
arpl
dec
xor
data16
mov
sub
pushl
movsb
std
ljmp
lret
xchg
shll
fs
jns
hlt
incl
add
jno
fdiv
mov
test
pop
xchg
sarb
pop
nop
mov
cltd
bound
jp
and
nop
nop
insl
mov
jle
jnp
stos
std
pushl
mov
add
test
adc
or
cltd
jl
fiaddl
call
sbb
jle
add
add
jbe
mov
ja
nop
or
das
dec
sbb
out
sbb
outsb
dec
mov
scas
inc
sub
dec
jg
popa
and
push
jns
dec
cmp
out
mov
stc
add
jg
mov
js
lahf
mov
outsl
inc
adc
loopne
jmp
sti
jns
inc
icebp
add
js
hlt
stos
cmp
add
add
add
jbe
dec
cmp
add
push
cmp
popa
testl
add
mov
mov
fildll
inc
adc
sub
add
int3
sbb
call
push
stc
jmp
sub
ja
call
mov
push
jmp
outsl
mov
jle
call
or
test
ss
bound
push
in
jno
mov
aaa
mov
aas
stc
or
mov
js
or
pop
mov
xor
add
or
cmpb
push
adc
lea
lret
out
lret
push
pop
insl
adcl
sti
data16
xor
push
push
std
loop
mov
mov
gs
orl
xorl
stos
je
mov
mov
jl
mov
jl
mov
divl
cmp
xchg
sbb
cmpsl
bound
pop
dec
adc
xchg
js
sbb
std
xchg
test
inc
xchg
xchg
and
test
add
sahf
iret
icebp
incl
mov
test
sbb
icebp
scas
ds
mov
jge
jg
cmp
xchg
std
popa
cmpsl
push
dec
adc
xchg
xchg
daa
das
imul
pop
mov
jmp
std
push
pop
ljmp
add
push
cmpsb
inc
in
add
sub
jp
js
jnp
push
out
and
and
xor
out
add
add
or
test
mov
mov
mov
cmp
out
xor
pop
inc
mov
mov
js
pop
pop
jae
push
out
mov
bnd
mov
mov
dec
xlat
rclb
sub
ds
dec
cmp
out
jge
cmpl
add
leave
dec
test
clc
jle
inc
mov
adc
jmp
fdivrl
ljmp
add
inc
mov
lahf
cld
mul
aaa
xlat
xchg
loope
mov
enter
arpl
std
mov
jmp
sti
jg
imull
addl
fcoms
jb
adc
pop
jecxz
add
enter
ds
test
adc
jmp
cli
jmp
push
adc
stc
add
xor
jnp
sbb
mov
mov
mov
pop
add
adc
fisubl
icebp
mov
xlat
add
enter
stc
add
mov
nop
sub
dec
adc
test
push
mov
fadd
testl
xchg
dec
ljmp
add
add
add
add
add
sbb
testl
xchg
add
mov
pop
test
mov
pushl
sub
int3
cs
aas
or
xor
or
stc
pop
xor
cs
and
mov
int
loope
adc
sub
adc
addr16
ss
mov
sub
pop
inc
loope
mov
add
cmp
test
pop
jl
es
mov
clc
test
addr16
adc
jbe
pushf
jge
shll
pop
std
dec
out
jge
and
in
inc
mov
sar
out
xorl
in
jp
mov
lods
imull
jl
test
pop
imul
jecxz
outsb
cmp
sub
dec
or
add
add
out
jl
insl
addl
adc
jno
adc
add
pop
pop
ds
icebp
mov
sub
mov
fnsave
xor
jp
mov
pop
adcl
loop
fildll
std
mov
imull
test
push
add
in
jnp
add
stc
push
popl
test
jb
sti
inc
jmp
mov
aaa
fiaddl
jno
or
push
mov
jp
jb
adc
das
stos
addl
adc
bound
mov
pop
aad
mov
insb
jae
jg
or
adcb
loopne
add
sbb
xchg
add
scas
imul
mov
or
cmp
insl
or
mov
mov
stc
sbb
cmovno
adc
std
push
mov
jmp
or
std
pop
mov
xor
fsubrp
mov
xlat
std
push
mov
lds
or
popa
or
push
jo
mov
int3
or
adc
sub
mov
test
imul
ss
and
popa
scas
call
ljmp
push
mov
jmp
jl
sbbb
inc
add
ds
xorl
sbb
imul
gs
mov
pop
jp
push
pop
loope
addl
fiaddl
add
out
mov
stc
add
add
clc
jnp
addr16
xchg
push
test
cltd
sub
test
stos
mov
in
lods
cli
repz
movsl
inc
sti
sbb
sub
mov
jg
jmp
add
insb
and
add
inc
test
sbb
out
fimuls
add
pop
push
rolb
outsl
aaa
add
jp
je
mov
add
daa
jge
add
add
dec
bound
out
or
mov
cli
mov
jns
ficoms
sbb
mov
mov
pop
lock
fadds
xchg
mov
sub
jl
icebp
in
punpckldq
mov
jmp
fiaddl
js
sbb
mov
add
add
adc
sub
or
xchg
push
lock
adc
sub
mov
jmp
sub
or
ja
into
cmp
add
jb
mov
jmp
sub
or
jne
jmp
sub
add
cmp
orb
add
pusha
mov
add
add
push
addl
pop
add
mov
mov
pushf
mov
sbb
int3
out
adcb
mov
add
data16
pop
pop
call
mov
or
lea
mov
sub
adcb
dec
or
add
pop
mov
aam
add
lock
out
or
out
sahf
das
pop
add
outsb
mov
cmpsb
insl
std
jmp
js
inc
and
cwtl
xchg
jmp
pop
test
repnz
pop
jle
cmp
or
hlt
test
mov
jne
bound
xchg
lds
lds
test
add
mov
addr16
int3
mov
std
ljmp
jmp
add
aad
and
xorb
cld
sub
mov
int
add
stos
or
out
sub
addr16
mov
mov
leave
push
dec
mov
mov
fcompl
outsb
cld
cmp
shl
add
add
outsb
int3
xor
fimull
jae
sbb
dec
mov
iret
sub
mov
add
sub
inc
loop
xor
add
mov
sub
ja
subl
or
mov
pop
or
jmp
out
ds
scas
inc
je
add
add
jo
or
mov
adc
sub
add
shlb
pop
loopne
or
inc
mov
int3
or
nop
mov
xchg
mov
jge
cmc
mov
verw
cmp
mov
mov
add
and
mov
inc
push
add
or
lret
out
add
add
test
adcb
pop
cmc
data16
loop
int3
pusha
add
data16
pop
or
mov
add
inc
mov
xchg
mov
test
add
sarl
orb
or
es
add
cmp
stc
push
out
outsb
bound
add
fldl
dec
ss
std
ljmp
leave
xchg
mov
push
sbb
jp
adc
sub
test
dec
xchg
out
sbb
movsl
jg
adc
addr16
and
dec
out
out
mov
subb
subl
fisubrl
incl
jne
stc
or
lea
arpl
call
xlat
mov
add
add
addr16
addl
icebp
add
aad
addr16
mov
ljmp
std
jmp
xorb
add
mov
lcall
in
aaa
out
out
mov
jge
data16
imul
add
add
sub
addb
sub
jl
dec
cs
add
add
cs
mov
mov
outsb
subl
xor
in
incl
sub
cmp
lods
popa
cmp
sbb
test
scas
push
jae
into
shrb
inc
sbbl
lods
int3
mov
cmp
lods
loope
int3
bound
mov
xor
mov
add
icebp
add
add
adc
lahf
movsl
mov
jmp
cmpsb
rolb
jno
clc
test
mov
mov
jno
adc
jmp
xor
push
add
pop
adc
add
mov
add
inc
lret
test
clc
imul
pop
aam
lret
int3
ret
mov
int3
jecxz
lret
int3
add
add
mov
int3
or
mov
subl
cwtl
mov
inc
adc
adc
inc
or
push
dec
stc
lods
cwtl
scas
adc
add
adc
loope
orl
push
adc
mov
sbb
push
dec
bound
push
mov
test
dec
int3
ljmp
int3
add
add
sub
in
pop
xor
mov
pop
std
jae
loope
adc
push
int3
pop
fabs
hlt
adc
out
add
imul
mov
icebp
dec
bnd
add
dec
xchg
or
es
icebp
pop
sbb
bound
stc
outsb
push
xor
lcall
add
add
add
ja
or
jns
or
mov
pop
bound
inc
cli
cmp
pop
jnp
add
jg
cs
sub
jp
lds
jns
das
mov
in
or
cltd
or
ret
repnz
out
or
push
rcll
aaa
mov
into
popa
js
les
add
iret
jbe
into
push
push
idivl
insb
add
mov
mov
pop
pop
jp
hlt
test
mov
mov
jge
and
rolb
cli
testl
mov
sti
scas
scas
rclb
jmp
sub
add
hlt
sub
add
xor
stos
sub
jmp
pop
verw
stos
mov
add
add
int3
add
sub
xorl
and
add
mov
cmp
imul
jp
cli
incl
add
mov
call
jl
push
add
decl
mov
jmp
adc
push
push
adc
cmp
xchg
jg
je
add
xchg
stc
call
push
adc
stc
jnp
jl
cld
cld
push
add
inc
adc
add
push
mov
or
jl
cmpsb
xchg
inc
mov
stc
xor
je
mov
loope
testl
fidivrs
and
test
push
xchg
pop
std
jmp
jns
cmp
gs
out
cmp
cs
or
mov
xchg
lods
popf
jb
ret
adc
add
out
adcb
xchg
push
add
fimull
pushl
push
mov
add
mov
add
enter
jbe
adc
test
jmp
cmp
add
push
aaa
mov
repnz
pop
push
mov
push
jne
ja
add
aaa
mov
fnsave
ja
xchg
enter
sub
out
push
lcall
test
pop
mov
adc
rolb
cs
icebp
xchg
lcall
add
ficoml
out
mov
pop
or
add
bound
xchg
add
ror
add
sub
push
stc
push
cmpsl
sti
pop
mov
pop
scas
cmp
imul
data16
xor
jbe
int3
mov
push
std
call
sub
pop
stc
out
cmpsb
subb
sub
call
cmp
outsl
pop
std
call
and
movsl
sub
add
mov
adc
push
arpl
aam
xchg
add
add
or
push
inc
jl
mov
add
push
xchg
mov
aam
stc
gs
scas
xchg
add
add
das
pop
mov
adc
inc
pop
inc
jl
jns
add
pop
add
push
fildl
subl
jne
push
aas
cmp
jl
push
xlat
add
add
add
orb
test
aam
call
adc
add
adc
cli
mov
or
fistps
mov
jb
inc
int3
push
jns
movsl
sbb
test
fisubrl
mov
dec
adc
add
mov
mov
sarb
cs
jp
add
add
fisttps
mov
mov
outsb
dec
jp
inc
loop
pop
cmpsb
xor
cs
mov
dec
stos
pop
test
inc
cmpb
push
std
test
inc
out
mov
add
iret
adc
jle
jnp
mov
int3
js
sbb
push
test
mov
out
stos
mov
jmp
add
add
add
xor
push
jmp
shlb
sbb
cli
xor
aas
repnz
aas
ljmp
sti
test
insl
out
sub
ljmp
jle
adc
jge
clc
gs
jmp
add
int
movsl
jmp
add
out
jge
addl
loope
jno
cmpsb
jl
int
sbbl
addl
stc
xchg
jns
repnz
fs
outsb
mov
or
push
pop
pop
mov
adc
jmp
sub
in
jecxz
pop
std
daa
gs
pop
std
arpl
and
adc
icebp
testl
cmp
pop
scas
fistpll
imul
sub
add
test
sti
push
test
jl
pop
test
cld
cmpb
loop
add
aad
jle
push
test
and
fisttps
rcll
scas
sahf
lahf
or
add
testb
scas
sahf
sahf
or
add
sbbl
xchg
or
roll
add
cmp
jns
push
xlat
pop
mov
push
add
lds
data16
pop
bound
jmp
adc
pop
jle
sub
pop
std
test
xchg
jne
push
outsb
std
jmp
pop
mov
dec
push
and
stc
pop
roll
dec
mov
pop
aam
jo
pop
hlt
xor
jl
inc
shlb
push
jbe
fimull
incl
add
movsl
lods
adc
xor
loop
or
mov
mov
mov
push
jbe
fisttps
xadd
sub
daa
stos
jns
sbb
out
hlt
or
sub
adc
mov
add
sbb
mov
sti
cmp
stc
add
ficompl
cmpsb
or
add
add
fcmovu
test
add
xchg
out
ret
ds
movsb
movsb
icebp
add
fcom
mov
arpl
out
in
push
ja
popa
inc
ss
pop
insb
pop
and
pusha
xchg
push
stos
cmp
sub
pusha
or
xchg
insl
push
loop
add
mov
inc
and
test
insl
push
adc
addr16
jmp
mov
divl
mov
add
std
data16
jg
jle
std
data16
imul
pop
jle
frstor
jmp
sbb
add
lds
into
test
sub
inc
call
outsl
or
push
lock
stos
test
je
js
and
sub
add
and
pop
clc
add
testb
push
incl
add
add
stos
imul
aad
filds
ret
xor
fists
and
pop
xor
or
push
call
pop
andb
mov
sarl
jecxz
pop
add
mov
ret
add
xchg
push
add
scas
push
push
add
add
scas
push
adc
pop
scas
push
add
icebp
add
add
cmp
insl
add
sub
insb
add
sub
outsl
add
sub
outsb
add
sub
popa
add
sub
push
add
sub
bound
imull
push
add
sub
gs
sub
push
add
sub
data16
sub
push
add
sub
add
lods
sub
in
clc
sbb
stos
outsl
scas
data16
movaps
xchg
stc
hlt
clc
add
pop
call
sbbb
mov
or
std
push
or
cmp
ljmp
add
add
pop
idiv
and
add
mov
fisttps
loop
sbb
popf
cli
mov
add
push
add
add
popf
cli
lahf
mov
push
pop
add
push
cmp
popf
cli
jg
jmp
cmp
sub
push
sbb
sbb
push
sbb
sub
loopne
push
std
and
mov
sub
xor
mov
sub
and
mov
sub
xor
mov
sub
and
std
mov
mov
sub
mov
mov
sub
mov
bound
ljmp
sbbl
roll
lahf
add
mov
inc
push
mov
jle
pushf
out
push
dec
or
push
std
xor
jmp
out
lods
push
loope
js
add
pop
stc
decb
repnz
mov
shr
mov
int3
mov
imul
add
add
imul
lcall
mov
xlat
adc
pop
xchg
outsb
imull
mov
mov
pop
jle
push
push
test
rolb
sar
aas
dec
imul
les
int3
int3
fwait
adc
int3
and
dec
push
les
cmp
adc
decl
push
jl
xor
mov
xlat
add
add
mov
lret
shl
mov
jne
or
outsb
push
loopne
and
into
fisubrl
fsubrl
add
and
lods
dec
std
xchg
add
test
add
add
imul
sub
int
ja
sub
sbb
cltd
jnp
dec
push
repnz
rol
and
bound
pop
or
jbe
int
and
add
push
xor
cs
aaa
or
repnz
dec
ljmp
out
adc
jnp
add
add
xchg
stos
xor
adc
stos
pop
xor
push
add
push
stos
pop
rcrl
jge
and
lock
and
je
pop
loope
cmpsl
mov
add
pop
out
xor
idiv
cmp
fidivrl
add
repnz
jmp
jge,pn
sti
fsubl
hlt
fidivrl
out
mov
inc
add
mov
push
cmpl
rcll
stc
jmp
sub
test
adc
mov
flds
clc
push
dec
sbbl
inc
lds
addl
add
add
and
cs
xchg
or
sahf
data16
bound
test
and
mov
push
test
push
cld
std
out
add
lds
add
jg
xlat
mov
pop
lock
int3
pop
iret
inc
add
iret
inc
add
iret
inc
add
iret
inc
add
add
add
add
add
add
aam
add
enter
rolb
add
rolb
add
add
add
add
rolb
add
add
add
push
stc
incl
cld
pushl
add
rcrb
fdivr
inc
fdivr
call
fdivr
ljmp
outsb
or
xchg
jle
cmp
arpl
into
arpl
cs
stc
das
fisubs
add
add
scas
arpl
and
arpl
sub
fs
jns
fs
icebp
insl
lret
push
jge
sub
cmc
ja
adc
lret
data16
lods
repnz
sbb
mov
add
jae
push
xchg
addr16
cs
xchg
add
xchg
std
sub
stos
mov
add
scas
pop
enter
rorb
add
mov
stos
xchg
fs
jecxz
out
out
mov
mov
jecxz
outsl
sub
push
mov
sbb
lods
lret
in
mov
pop
fmuls
in
mov
inc
xor
and
aas
je
dec
hlt
aad
mov
push
inc
add
add
hlt
outsl
xlat
dec
in
int
jle
add
sub
and
jae
ret
mov
or
aad
jl
and
cmp
repnz
jmp
jl
jmp
add
ffree
dec
mov
stos
or
sub
scas
sub
loope
sub
sbb
jg
hlt
loope
pushf
push
or
bound
add
add
out
mov
sbb
call
mov
push
add
notb
jb
sbb
add
cli
incl
inc
mov
incl
push
pop
pop
jecxz
nop
xlat
mov
ja
jmp
ljmpw
dec
int3
loopne
call
dec
and
sbb
or
add
add
in
stos
xor
add
pushl
je
dec
jo
cs
std
call
test
rcrl
or
filds
je
repnz
test
xor
test
jge
push
jbe
add
das
imul
and
dec
sub
inc
cmc
jg
xor
or
test
stos
add
add
pop
add
sub
enter
xor
out
mov
aas
int
iret
inc
test
pop
subl
adc
rorl
movsb
call
rclb
lds
dec
gs
adc
ljmp
imul
cmp
mov
xor
sub
inc
add
add
jle
add
add
or
dec
insw
push
mov
mov
xchg
add
insb
outsb
xor
add
test
daa
dec
negl
push
pop
or
mov
mov
clc
pop
pop
imul
outsl
ljmp
fstpt
add
jmp
nop
lcall
push
dec
les
jnp
add
add
xor
add
xor
add
pop
pusha
dec
or
push
mov
bound
shl
xchg
jecxz
stc
xchg
insl
or
jno
add
jmp
out
mov
bound
shl
lock
stc
jb
jp
lds
dec
xlat
bound
sbb
jle
das
add
ljmp
jae
push
xchg
std
cmp
jb
adc
in
test
add
mov
and
sub
ret
pop
pushf
test
adc
in
jg
inc
and
cmc
jbe
std
jae
out
sub
enter
sbb
sub
sub
scas
mov
mov
xor
xchg
sub
sub
es
xchg
idivl
repz
out
sub
jns
and
add
inc
fisttpl
jo
cmp
xor
jecxz
loope
and
mov
push
outsb
repz
add
nop
flds
out
push
jns
and
fdivr
data16
sbb
jmp
and
jge
pop
or
mov
xor
cmp
mov
xchg
or
repnz
cmc
mov
fidivrl
test
ljmp
xor
and
notb
jmp
shr
stos
js
ljmp
ficompl
push
or
out
gs
xor
ds
jle
sar
call
pop
and
cmc
or
push
ljmp
push
or
out
jp
daa
cmp
or
or
xor
nop
dec
add
add
sbb
or
hlt
test
fs
aam
or
bnd
adc
pop
lods
iret
xor
cmp
mov
mov
sbb
and
cmpsb
or
jns
lcall
push
xchg
add
cmpsb
add
xchg
add
mov
pusha
popf
dec
jle
sub
jb
and
add
add
inc
stc
push
cmpsl
or
xor
and
imul
subl
movsl
mov
in
xchg
mov
clc
scas
hlt
cmp
insl
clc
cmpb
testb
repnz
or
cmp
or
ljmp
cli
data16
stc
xchg
in
testl
testl
jle
es
cmpsl
xchg
cmp
dec
lea
add
fcoml
lcall
stos
cmp
mov
out
fstps
push
and
add
test
pushl
mov
jbe
sbb
repz
out
sub
inc
sub
sbb
jmp
jnp
and
jmp
jbe
add
pop
add
add
sub
and
push
mov
mov
jmp
mov
movsl
sbb
xor
call
sub
aad
add
add
push
sub
mov
out
mov
xor
data16
push
pop
mov
jb
call
incl
add
and
cs
std
pushl
add
cs
mov
jmp
std
ljmp
outsb
in
test
inc
and
ja
std
ljmp
outsb
std
test
mov
testl
xor
jo
adc
pushw
outsb
inc
cmpsb
add
shl
mov
jbe
pop
xchg
mov
daa
push
adc
int
mov
ljmp
stos
ret
stos
lret
hlt
int
add
add
hlt
in
stos
cmpsl
ljmp
hlt
pop
adc
add
add
das
lret
ljmp
shlb
sti
xchg
inc
daa
lret
mov
pop
pop
mov
mov
cmp
add
pop
lret
shl
rolb
jb
sbb
or
cmp
mov
jo
stc
in
add
add
icebp
push
stos
aas
jmp
sub
int3
ret
test
js
int3
xor
idivb
int3
pushf
movsb
pop
jge
jns
push
stc
sbb
or
adc
add
ret
addb
mov
xchg
addl
outsb
test
movsl
lds
fs
adc
fwait
pop
std
call
jp
inc
add
add
mov
dec
mov
cmp
ret
xorb
push
mov
cld
decl
stos
cld
insb
push
jg
clc
add
jbe
jnp
cld
sbb
jl
sbb
inc
jnp
adc
lret
add
jne
addl
jp
pop
xchg
rolb
cld
call
mov
mov
int3
cld
call
mov
jl
sbb
xor
dec
push
xor
jae
xchg
decl
pop
std
test
aam
and
pop
mov
dec
adc
ficoml
mov
sub
je
ficompl
cmp
and
mov
mov
pop
sbb
xchg
fwait
xchg
pop
std
in
int3
cwtl
and
add
cs
std
lcall
fstp
cld
cmc
push
cltd
jge
pop
fildl
push
aaa
iret
out
add
adc
xor
adc
xor
idivl
pop
outsl
divl
fs
into
xor
negl
mov
sub
lods
mov
outsb
cmp
xlat
inc
sub
scas
iret
xor
movsb
aaa
add
add
cmpsb
add
mov
out
cmc
pop
push
adc
daa
mov
add
add
gs
sarb
add
jo
out
in
pop
out
cs
add
ret
ja
or
and
jl
std
mov
sub
stos
shl
notl
sub
jnp
jne
inc
stc
jmp
pop
test
mov
add
xor
xor
and
push
ljmp
fwait
rorb
jmp
add
push
inc
stc
jmp
out
in
scas
mov
test
shl
jae
sbb
or
sub
je
xchg
cmp
add
ret
insb
jecxz
push
mov
add
mov
add
or
dec
pop
movb
add
and
cmp
lods
inc
sub
push
cmp
pusha
icebp
ret
inc
adc
cmpb
stc
inc
add
loop
inc
in
rorl
movb
rorl
add
testl
push
xchg
insb
mov
insb
clc
cli
cmp
xchg
add
mov
cmpl
push
std
ljmp
push
dec
subl
mov
gs
sub
jg
shrl
add
pop
test
pop
test
or
popa
das
xchg
stos
mov
add
lds
pop
std
test
pushl
and
out
dec
add
inc
push
stc
mov
fs
xchg
sbb
cmp
inc
push
test
inc
or
popa
jl
addb
mov
in
push
pop
mov
stos
aaa
push
ds
into
mov
out
dec
xor
aam
jne
mov
jo
cwtl
fs
mov
lds
mov
mov
into
jge
jge
outsb
mov
jbe
sti
mov
out
cs
inc
add
js
aaa
mov
push
test
add
add
add
cld
cmp
sub
out
or
jl
in
insl
or
testb
xor
jb
pop
and
pop
cmpsl
xor
outsb
jb
iret
dec
dec
stc
mov
mov
push
sarl
sub
sti
movsb
lods
out
div
aas
jno
repnz
jnp
imul
add
inc
mov
cmpsb
add
jmp
xor
test
adc
lahf
push
pop
pop
sub
add
xor
pop
sub
shr
sub
add
out
mov
mov
mov
test
scas
idiv
jg
std
push
mov
xchg
lahf
mov
dec
iret
sar
jo
xorb
outsl
int3
std
add
add
mov
call
scas
idiv
sub
mulb
js
std
xorb
call
scas
idiv
arpl
jl
jb
testb
mov
call
std
dec
in
hlt
call
cld
incl
mov
dec
stc
mov
dec
push
cmpsb
mov
adc
and
add
sti
ljmp
ss
dec
sbb
push
orl
outsb
adc
add
inc
insb
add
mov
pop
mov
lcall
test
mov
mov
out
test
int3
repnz
aas
int3
loop
aas
int3
cli
mov
lods
test
out
mov
add
stos
cmp
dec
sbb
pop
mov
ljmp
jle
lcall
test
or
in
add
add
cmp
aad
subb
inc
les
pop
sub
aas
mov
js
or
xor
test
xlat
cmp
pop
jmp
adc
jnp
add
push
add
add
pop
mov
adc
decb
fs
test
mov
dec
nop
jnp
sbb
icebp
dec
int3
sub
repnz
sub
push
push
bound
adcl
out
out
loop
hlt
xor
ds
jae
ret
ds
jmp
in
ret
std
test
test
add
decl
jl
push
je,pt
je
cmp
in
cmp
addr16
insb
add
jmp
fs
stc
add
pop
test
test
lcall
dec
mov
sarl
add
add
addr16
mov
add
add
and
mov
out
testb
or
sub
add
add
jae
push
fadd
out
mov
testb
add
mov
sub
call
aam
out
push
push
jbe
push
repz
or
shll
jo
mov
idiv
pop
inc
adc
jp
clc
xorl
les
lods
cmp
cmp
jns
pop
inc
stc
mov
mov
add
clc
sti
cmp
jp
add
and
jns
xchg
inc
inc
stc
jns
push
jb
sub
adc
clc
inc
push
cmp
out
jp
sbb
pop
iret
adc
stc
inc
push
inc
cmpsb
aas
or
imul
inc
cs
stos
int
movsl
add
jge
inc
sub
and
add
add
xchg
mov
cmp
mov
add
adc
nop
or
scas
xor
cmpsl
jle
mov
or
cmp
jl
sub
push
cmp
and
mov
jbe
std
sub
test
sbb
ss
jge
data16
sub
jns
es
out
add
add
add
lock
orl
iret
dec
push
mov
jge
fnstcw
mov
inc
iret
mull
test
add
in
loop
mov
adc
xchg
mov
mov
imulb
dec
cmc
and
mov
jb
or
iret
jmp
or
pushf
add
add
stc
scas
mov
mov
jo
stc
sub
stos
or
xor
cmpb
xor
jne
mov
hlt
push
fdivr
mov
ret
idiv
dec
mov
js
shl
dec
jg
incl
roll
sbb
cmp
xor
incl
lret
int3
aam
push
mov
sbb
rcrl
sbb
add
xchg
insl
dec
push
ljmp
pusha
inc
push
pop
clc
xor
cmpsb
jns
inc
push
push
les
into
incl
addb
pop
pop
mov
and
inc
push
pop
movsl
push
clc
jl
or
xor
lods
inc
je
outsb
dec
jb
mov
jb
jp
adc
cmpsb
lds
jl,pn
push
movsl
gs
out
and
incl
add
out
std
ljmp
scas
mov
call
sub
ljmp
daa
jle
push
xchg
mov
and
pop
mov
call
rorl
test
or
test
cs
inc
jb
stc
xor
ja
inc
add
hlt
push
mov
pop
push
aaa
mov
cmp
cmpsb
stos
mov
lret
add
add
add
inc
add
add
stos
pop
mov
inc
inc
adc
shll
aaa
mov
inc
mov
sub
push
inc
jecxz
std
int
mov
sub
inc
dec
pop
xor
inc
xchg
movsb
out
and
js
stos
out
aas
cld
out
adc
sub
dec
push
xor
aaa
lret
mov
mov
into
dec
add
incl
mov
shr
add
add
add
fnstcw
mov
or
xor
xor
stos
in
lds
and
push
test
cmp
jb
adc
fdivrp
sub
fidivrl
das
loopne
add
fdivs
call
jge
testl
jns
lret
out
clc
xchg
popa
jnp
cmc
mov
pop
ljmp
add
rorb
bound
repnz
or
rorb
inc
call
insb
adc
sbb
ret
pushf
or
add
lcall
xchg
icebp
addb
inc
icebp
test
js
mov
in
clc
sarb
icebp
mov
jl
mov
jg
add
add
cld
jae
cld
or
jns
add
leave
std
cli
into
movsb
add
orl
dec
or
sub
cmp
cmp
repz
test
inc
shll
ljmp
daa
sub
movsl
fistl
jg
or
jl
add
cmp
xchg
daa
cmp
loope
add
pushf
cmp
and
aam
add
add
inc
sub
movsl
pop
adc
ftst
cmp
aaa
mulb
mov
movsl
jae
dec
loope
push
test
jb
jns
mov
mov
or
push
stos
in
mov
sti
in
sbb
inc
fldl
outsb
shlb
inc
testb
xor
stos
mov
outsb
pop
push
nop
inc
pop
ja
inc
pop
xor
aam
add
and
xor
jne
sbb
stos
inc
dec
movsl
xlat
xor
or
push
inc
frstor
out
or
sbb
ljmp
out
or
push
bound
cli
out
or
outsb
mov
enter
int3
cmp
mov
jmp
movsb
int3
and
mov
inc
jnp
data16
add
xor
mov
mov
and
and
icebp
mov
mov
icebp
js
push
test
mov
in
stos
push
test
rorl
test
pop
dec
iret
push
pop
pop
add
cmp
push
test
mov
push
std
aaa
mov
sbb
cmp
add
fwait
sbb
jbe
push
sub
fdivrl
shl
jg
rolb
cld
push
pop
ret
cmp
xchg
xor
lahf
iret
enter
or
mov
enter
sbbb
aaa
mov
cmp
jmp
cmp
fmul
xchg
std
pop
mov
mov
inc
pop
test
add
add
sbb
add
movsl
enter
fwait
mov
sbb
inc
cs
push
enter
inc
sub
pop
enter
inc
xchg
enter
orl
stc
jno
ffree
in
es
das
daa
fs
in
popf
cli
popa
mov
shrl
add
addr16
add
popa
mov
decl
mov
add
cltd
cmp
mov
pop
cld
rol
mov
daa
movsl
or
data16
clc
cmp
adc
add
ds
rorb
dec
xstore-rng
cmpsl
add
sub
inc
cltd
mov
fcmovnbe
or
push
mov
fcomi
mov
fnclex
lock
fmuls
sub
mov
xor
out
test
mov
testb
sbb
mov
jnp
call
and
push
adcb
jge
idiv
das
mov
aaa
push
mov
jnp
mov
xor
add
mov
jmp
pushf
mov
jo
xor
mov
jb
jnp
inc
int
adc
aam
imul
or
pop
xor
push
incl
add
add
insl
adc
jmp
je
test
mov
pushl
loop
jo
push
xchg
xchg
loopne
dec
and
leave
push
and
jbe
insl
int3
popf
imul
sub
add
test
scas
cmp
xor
jecxz
sub
stos
mov
mov
add
add
xchg
jne
xor
add
lahf
or
xchg
adc
mov
lret
int3
fwait
mov
int3
int3
ljmp
mov
stc
scas
inc
add
push
jae
xor
push
xchg
jge
and
dec
or
in
imul
mov
inc
jl
aas
sub
mov
pop
add
add
inc
add
call
lcall
out
push
iret
out
push
xor
je
mov
rcll
xor
popa
nop
faddl
out
cli
inc
call
dec
sbb
inc
cmp
fldl
push
repnz
pop
and
out
xor
inc
test
jl
stc
add
add
imul
and
mov
out
dec
mov
add
cmp
add
and
movntq
out
sahf
push
outsb
pop
stos
ret
or
mov
outsb
mov
adcl
push
add
add
out
data16
add
or
adc
adc
and
aad
arpl
aas
es
ret
ret
add
in
shrb
or
cmp
lds
cmp
sub
mov
xchg
pop
out
add
mov
add
test
dec
sub
sub
imulb
clc
mov
cwtl
das
lret
popa
movsl
in
in
call
shll
sbb
sar
lock
nop
xchg
add
add
mov
jmp
mov
pshufw
lar
mov
divl
and
fsubs
shll
stc
cmpsb
inc
addl
mov
add
sub
hlt
arpl
movl
ret
push
dec
jno
xchg
dec
int3
je
test
add
ljmp
inc
add
add
adc
rcrb
sbb
push
or
out
adc
ds
or
sbb
adc
push
or
enter
enter
insb
hlt
pop
out
xor
pop
sbb
inc
cmp
out
out
aad
push
sbb
sbb
pop
or
sbb
xor
gs
push
out
cmp
stc
loope
std
ljmp
xor
add
add
pop
std
ljmp
mov
test
cs
test
cs
std
ljmp
ret
mov
arpl
loop,pn
stc
sbb
mov
cs
std
ljmp
add
stc
popa
stos
jns
cs
js
cs
std
ljmp
and
stc
inc
jnp
ds
cs
std
ljmp
inc
xor
and
and
cs
std
incl
add
add
push
cmp
dec
push
xor
out
add
push
sbb
or
add
add
add
sub
ds
call
ds
jmp
add
add
cmpsl
sub
pop
add
push
add
add
add
xchg
fadds
cmp
faddl
xor
out
add
ss
add
add
add
add
add
add
xor
sub
add
in
add
jmp
add
add
xor
pop
add
movsl
sub
call
cmp
stc
insl
xor
js
out
call
sbb
stc
adc
sub
call
sti
sub
rsm
out
sbb
add
inc
pop
sub
sub
out
call
cmp
stc
ret
add
pushl
sub
sub
in
or
call
add
call
sub
add
cmp
adc
pusha
dec
mov
add
jg
pop
add
pop
add
add
pop
add
add
add
xlat
add
movl
cmp
xlat
add
movl
add
add
add
xchg
add
sbb
add
xchg
add
adc
add
xchg
pop
adc
dec
adc
inc
adc
add
inc
add
adc
clc
adc
hlt
adc
add
cs
cmp
pop
std
daa
aas
pop
std
and
pop
std
fistpll
pop
std
fistpl
pop
std
xlat
push
pop
std
rcrl
pop
std
jecxz
pop
std
sbb
add
aas
pop
std
mov
aas
pop
std
mov
push
pop
std
mov
pop
std
mov
pop
std
ret
push
pop
std
sti
ds
std
cmpl
pop
std
lahf
ds
std
fwait
push
pop
std
xchg
push
pop
std
xchg
push
pop
std
mov
ds
std
popa
aas
pop
std
ret
ds
std
jg
pop
std
jnp
pop
std
ja
add
add
movntq
stos
adc
add
movntq
add
add
add
movntq
movntq
cmp
out
movntq
xor
out
movntq
ljmp
add
movntq
ljmp
add
movntq
jp
out
fimuls
out
rorb
out
movntq
pop
adc
add
out
push
adc
add
out
dec
adc
add
out
inc
adc
add
add
inc
adc
add
adc
jmp
sub
cld
psubsw
and
jmp
sub
xor
jmp
sub
dec
or
sub
pop
adc
sub
adc
jmp
sub
xor
jmp
sub
fs
sub
insb
or
add
add
jo
jmp
sub
pop
or
sub
test
add
xchg
cmova
xchg
xorps
xorps
mov
inc
incl
jg
pop
jnp
pop
pushl
pop
call
fstl
pop
dec
adc
inc
sysret
decl
xlat
decb
xlat
incb
incb
aas
sldt
add
cmp
xlat
aaa
rdseed
xor
das
seta
sub
xchg
daa
ja
das
seta
sub
xchg
daa
ja
pop
ucomiss
std
sbb
sbb
pop
sub
std
adc
sbb
sbb
or
sbb
mov
and
std
cmp
std
sti
xor
std
imull
pop
std
repz
std
inc
push
pop
std
dec
add
add
pop
std
cmp
pop
std
inc
push
pop
std
fistpll
pop
std
pop
std
xlat
sub
std
shll
pop
std
sarl
pop
std
or
pop
std
sub
std
ret
and
std
mov
xor
std
mov
pop
std
mov
pop
std
mov
pop
std
scas
xor
std
stos
sub
out
repnz
xchg
repnz
mov
out
mov
repnz
dec
repnz
add
push
repnz
pop
repnz
icebp
out
repnz
out
out
out
ljmp
add
icebp
out
mov
repnz
lods
lock
pusha
icebp
out
fwait
icebp
out
insl
icebp
out
pop
icebp
out
jb
out
lahf
lock
push
out
out
icebp
out
out
icebp
out
push
repnz
pop
repnz
dec
repnz
call
sub
add
sub
fisttpl
jmp
sub
or
jmp
sub
mov
jmp
sub
cwtl
push
jmp
sub
adc
jmp
sub
sub
jmp
sub
cmp
jmp
sub
or
jmp
sub
add
sub
pop
or
sub
add
xchg
add
xchg
cs
push
add
or
inc
add
push
add
or
inc
add
pop
add
add
adc
add
adc
add
adc
add
pop
add
add
xlat
add
add
movl
push
or
movl
inc
or
cs
sub
sub
aaa
and
std
lea
sub
pop
xor
std
sbb
sub
pop
and
std
adc
sub
rdpmc
sub
or
sub
pop
and
std
add
sub
sbbb
std
sti
sub
std
mull
sub
repz
std
out
xor
std
jmp
add
sub
std
out
daa
std
jecxz
daa
std
daa
xor
std
and
daa
std
pop
and
std
sbb
daa
std
cmp
daa
std
xor
and
std
sub
xor
std
mov
and
out
loop
out
fimuls
add
or
add
or
add
or
add
or
add
or
add
or
add
add
pop
push
out
pop
push
out
xor
add
out
pop
repz
or
out
add
out
add
out
cld
or
out
mov
add
out
push
or
add
or
add
out
data16
add
out
outsb
or
jmp
sub
aam
jmp
sub
call
add
loopne
jmp
sub
hlt
or
sub
or
jmp
sub
add
sub
sbb
jmp
sub
sub
jmp
sub
cmp
jmp
sub
dec
add
or
add
xlat
mov
or
pushl
or
mov
or
lcall
adc
lcall
or
mov
inc
incl
or
jg
inc
jnp
inc
fisttpll
pop
ljmp
pop
ljmp
pop
jmp
pop
jmp
pop
ljmp
pop
ljmp
or
jl
xlat
js
cs
jp
sub
xchg
xor
sub
and
sub
xchg
sub
jg
sub
jnp
sub
ja
sub
jae
sub
pop
and
sub
pop
xor
sub
sub
or
sub
add
sub
sti
add
add
std
divl
std
repz
std
out
and
std
jmp
daa
std
out
daa
std
jecxz
daa
std
out
and
std
jmp
daa
std
out
add
add
push
out
jae
out
loop
out
cld
or
add
or
add
push
out
loop
out
jbe
out
fiaddl
out
push
add
out
push
out
out
lret
add
push
out
xchg
push
out
add
add
push
out
mov
push
out
mov
push
out
stos
push
out
scas
push
out
mov
or
add
push
out
addb
add
push
out
mov
add
sub
mov
add
jmp
sub
xor
jmp
sub
enter
add
sub
rolb
sub
aam
jmp
sub
clc
add
jmp
sub
popa
add
jmp
sub
sbb
jmp
sub
and
jmp
pop
add
or
add
or
add
or
add
or
add
or
add
movl
int3
or
add
xlat
add
or
add
or
add
xchg
add
xchg
lods
or
add
xchg
pushf
or
cwtl
or
xchg
or
nop
or
mov
push
add
or
orb
add
add
pop
add
add
add
add
sub
imul
std
addr16
sub
int
sub
pop
daa
sub
pop
aaa
sub
push
aaa
sub
push
daa
sub
dec
daa
sub
dec
aaa
sub
inc
aaa
sub
inc
daa
sub
aas
daa
sub
cmp
sub
aaa
aaa
sub
xor
sub
cltd
and
sub
xchg
xor
sub
ss
sub
test
sub
jge
sub
es
sub
and
add
aaa
sub
jno
sub
sbb
sub
imul
add
add
out
push
or
add
or
add
or
add
out
stc
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
out
jno
out
gs
add
out
and
out
add
add
out
sub
out
mov
or
add
or
add
or
add
out
xchg
or
add
jno
jmp
sub
jge
jmp
sub
cltd
pop
jmp
sub
inc
push
jmp
sub
dec
push
jmp
add
add
push
jmp
sub
jbe
jmp
sub
jb
jmp
sub
jle
jmp
sub
lcall
sub
add
inc
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
add
add
add
xlat
incl
xlat
cmp
or
pushl
or
ljmp
or
jmp
or
lcall
or
call
or
decl
or
incl
or
std
or
stc
or
cmc
or
sub
cmc
aaa
sub
icebp
daa
sub
in
daa
sub
jmp
sub
in
sub
loope
sub
frstor
sub
fnstenv
sub
aad
sub
shll
sub
int
sub
leave
aaa
sub
lds
sub
shll
std
mov
aaa
sub
mov
sub
mov
sub
lods
daa
sub
test
aaa
sub
mov
daa
sub
cltd
aaa
sub
xchg
aaa
sub
xchg
daa
sub
lea
sub
mov
sub
test
add
aaa
sub
andl
or
add
or
add
or
add
or
add
out
mov
out
jo
out
fs
out
pop
pop
out
pop
pop
out
pusha
pop
out
je
out
push
pop
out
adc
out
add
out
clc
push
out
cld
push
out
add
out
push
pop
out
dec
pop
out
add
add
add
pop
out
and
out
sbb
out
sbb
out
and
out
xor
add
sub
incb
jmp
sub
or
jmp
sub
es
sub
push
or
sub
ss
sub
cs
sub
inc
or
sub
ds
add
add
push
or
sub
dec
or
sub
data16
sub
pop
or
sub
jbe
jmp
sub
cld
mov
push
cld
test
push
cld
orl
inc
cld
jns
push
cld
jne
push
cld
jno
inc
cld
insl
or
imul
pop
add
or
add
or
add
or
add
pop
add
or
add
or
add
or
add
or
add
xlat
add
movl
cmp
xlat
add
or
add
or
add
or
add
or
add
or
add
or
sbb
adc
es
or
sub
std
and
sbb
add
sbb
std
xor
std
stc
add
add
sbb
cmc
xor
std
icebp
sub
std
in
xor
std
jmp
xor
std
loope
sbb
fnsave
sbb
fldcw
sbb
aad
sbb
shrl
sbb
int
sbb
leave
sub
std
lds
sbb
shrl
std
mov
sub
std
mov
sbb
mov
sbb
lods
xor
std
sub
std
pusha
xor
std
pop
sub
out
out
out
fildl
add
add
filds
add
add
add
add
out
mov
out
lods
push
out
enter
sti
add
add
add
add
add
out
xchg
add
out
mov
out
fs
out
pop
add
out
sub
out
das
add
add
add
add
add
out
add
add
add
add
out
push
add
add
sub
out
add
sub
testb
sub
incb
jmp
sub
add
jmp
sub
push
add
sub
push
add
sub
es
sub
cs
sub
ss
sub
add
sub
addl
jg
jmp
sub
dec
add
sub
push
add
xchg
add
push
xchg
mov
push
xchg
add
push
xchg
xchg
push
xchg
mov
push
add
push
inc
add
push
push
add
push
add
inc
add
inc
add
pop
add
add
add
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
xlat
decl
xlat
incl
add
incb
cli
add
push
add
pushl
xor
xor
std
sub
xor
std
and
xor
std
sbb
xor
std
adc
xor
std
or
add
add
sbb
add
xor
std
std
sub
std
stc
xor
std
cmc
sub
std
icebp
xor
std
in
sub
std
jmp
sub
std
loope
sbb
sbb
fnstenv
sbb
aad
sbb
shll
sbb
int
sbb
leave
xor
std
lds
sbb
shll
out
addb
je
out
js
out
faddl
add
add
add
add
add
add
enter
int3
add
add
add
add
add
add
add
add
add
add
add
add
out
pushf
add
add
add
add
add
add
out
push
add
add
out
jl
out
jo
out
add
jmp
add
add
lret
sub
rolb
jmp
sub
add
sub
fiadds
jmp
sub
repnz
sub
cli
add
sub
add
jmp
sub
push
add
sub
push
add
sub
push
add
sub
push
add
add
add
es
sub
cs
xlat
cld
leave
add
cld
lds
cld
roll
mov
add
cld
mov
cld
mov
xchg
cld
lods
add
cld
test
add
cld
mov
add
cld
cltd
add
cld
xchg
add
cld
xchg
add
cld
lea
cld
mov
cld
test
cld
addl
cld
jns
add
add
jne
inc
cld
jno
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
push
xor
std
push
sub
std
dec
xor
std
dec
sub
std
inc
xor
std
inc
sub
std
cmp
sub
std
xor
sub
std
sub
sub
std
and
sub
std
sbb
add
add
sbb
adc
sub
std
or
sub
std
add
sub
std
std
sub
sbb
cmc
sub
sbb
in
sub
sbb
in
sbb
loope
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
out
sub
jmp
add
jmp
add
out
cmp
add
out
dec
jmp
add
out
jno
out
gs
add
out
pop
jmp
add
out
cmc
add
add
add
add
add
add
add
jmp
sub
push
add
sub
pop
add
add
add
popa
add
sub
js
or
jmp
sub
lcall
jmp
add
add
xor
add
in
lahf
jp
add
sub
jge
ss
shrb
pop
je
fadd
sbb
fcomps
lcall
jmp
sub
jecxz
push
ljmp
dec
cld
ljmp
stc
call
sub
testl
stc
clc
je
jle
sbb
jge
add
jp
int
adcb
filds
out
add
inc
roll
out
addb
scas
inc
xchg
cmp
call
mov
pop
xchg
sbb
sti
addb
scas
inc
push
jge
pop
fidivs
or
or
je
jge
or
std
orb
lcall
cs
add
invlpg
fwait
sbb
inc
call
movsl
aam
push
addb
inc
stc
imul
jge
testb
lods
les
adc
adc
mov
cs
cmpl
xchg
push
xchg
pop
psubw
jno
std
add
add
inc
mov
std
jno
inc
stc
repz
inc
jge
push
fnstsw
xchg
rcrb
addb
inc
jge
push
mov
adc
and
xchg
sub
movsb
in
aas
data16
xor
and
adc
mov
adc
jmp
out
add
pushf
imull
mov
out
add
add
sti
test
jecxz
add
inc
cmpsl
mov
aad
sbb
add
or
jle
jns
out
stos
mov
arpl
mov
out
outsb
sti
inc
xor
cmp
stc
movsb
push
cmpb
popl
adc
jnp
lret
or
std
call
cmp
jge
add
add
loopne
repz
addl
inc
call
push
in
test
cmpsl
jmp
and
add
stos
lods
mov
inc
lret
jge
mov
hlt
xor
sub
sub
add
push
pop
cmp
jge
addr16
out
pop
cli
add
lock
call
jp
add
add
outsb
add
push
jge
and
mov
outsb
add
push
jge
push
out
incb
push
cmp
xchg
jl
add
addr16
popa
repnz
xchg
in
add
cld
mov
je
in
dec
icebp
mov
je
in
test
mov
jne
in
decb
repnz
incl
add
adc
jne
cs
cwtl
add
cld
ljmp
jge
sub
xchg
add
xchg
sbb
cmp
jae
add
inc
xor
sbb
movsb
fldl
in
add
inc
adc
rcrl
mov
push
add
jnp
cld
in
push
std
and
jge
or
mov
insl
xchg
jl
add
add
jmp
or
mov
cld
mov
sti
jmp
in
and
inc
jecxz
in
faddl
xor
out
scas
jge
add
jmp
inc
push
add
add
ret
dec
or
xchg
jge
ret
jl
nopl
push
inc
push
jnp
or
subb
call
push
push
cli
add
add
push
or
subb
sub
mov
insl
and
inc
mov
in
cmpsl
mov
add
stos
inc
fldl
in
and
and
add
cwtl
add
lea
stc
clc
sub
inc
push
call
dec
cld
mov
mov
sub
out
and
clc
push
lldt
inc
sbb
call
jns
call
sub
clc
sub
push
call
leave
sti
mov
into
xor
jnp
sub
adc
and
jl
lret
jl
pushf
jae
xor
mov
stc
inc
je
cmp
test
and
or
call
aam
push
add
or
ret
add
add
jnp
and
mov
call
out
inc
or
ret
das
adc
pushl
jge
sbb
rcrb
lret
ret
repz
sbb
add
jnp
fcos
jne
out
xor
push
inc
addl
cmp
add
call
subl
out
lcall
icebp
cmpl
add
shl
cld
ljmp
pop
arpl
cs
sahf
pusha
pop
push
mov
cmpl
out
ljmp
pop
addl
jmp
push
mov
lcall
adcb
push
stc
icebp
cmpb
mov
lods
pop
cli
cld
bound
sbb
ror
push
mov
cmp
cmpl
add
mov
and
stc
test
adc
mov
call
movsl
test
jg
std
jp
mov
or
jne
test
add
lret
aam
jne
test
or
and
sti
and
or
xchg
test
in
push
ljmp
idiv
xchg
add
pop
add
add
in
or
mov
sub
push
inc
push
add
cli
into
bnd
mov
jbe
jmp
sub
clc
stos
mov
adc
mov
stc
clc
stos
stos
jbe
ljmp
clc
stos
mov
adc
mov
call
sub
add
pop
sub
clc
sub
add
popa
add
add
idiv
sub
sbb
lods
or
mov
push
stos
jne
jmp
sub
clc
sub
jmp
dec
daa
idiv
stos
lods
jne
jmp
or
add
add
add
rep
loopne
fiaddl
test
inc
cli
loopne
mov
xchg
add
hlt
loopne
lods
add
cmpl
jae
adc
add
add
je
adc
mov
je
adc
jnp
or
std
hlt
cmp
test
rcr
jnp
in
mov
call
add
add
ret
data16
das
push
cli
out
ret
in
mov
sub
repz
scas
add
lods
and
cld
add
add
xchg
add
cli
call
add
jecxz
adc
addr16
add
in
std
jae
aas
data16
dec
dec
jge,pt
fdivr
jb
dec
jb
xor
jge,pt
iret
cli
jb
adc
jnp
ljmp
add
adc
mov
jb
jge
or
mov
add
adcl
insb
loope
pop
hlt
roll
insb
jmp
add
fwait
insb
hlt
sbb
xchg
add
aaa
jl
add
add
inc
jmp
roll
fstl
xchg
aam
dec
push
push
add
inc
jae
sbb
hlt
cmp
daa
mull
mov
call
and
test
in
das
call
and
out
mov
stc
clc
push
cld
cld
push
cmc
shlb
stc
mov
cmp
jae
jmp
jno
shrl
scas
scas
jp
ljmp
clc
stos
and
mov
sub
cmc
inc
lret
sbb
jno
stc
jl
dec
divb
xor
jne
jecxz
add
or
push
mov
jae
xlat
sub
adc
mov
clc
push
scas
jns
ljmp
call
incl
push
aad
or
incl
add
mov
xlat
add
pop
faddl
test
cli
or
inc
filds
testl
mov
mov
jne
jmp
add
pop
std
je
jmp
jnp
pop
insb
xor
and
jmp
mov
insl
adc
psubb
lock
or
adc
psadbw
incl
push
or
cmc
clc
add
push
call
in
jno
push
das
movsb
and
lret
movb
shrl
adc
push
adc
fmul
std
clc
lods
cmp
std
add
add
sbb
leave
movsb
lods
std
mov
and
in
cltd
xchg
std
jl
loope
jae
jg
cmc
jns
sarl
jae
jg
lock
cmpb
ja
inc
xchg
clc
dec
sub
cmovbe
clc
xor
push
sub
das
clc
in
add
xchg
hlt
sbb
mov
in
add
pop
dec
sbb
and
dec
add
add
add
add
repnz
adc
into
popa
shl
lds
or
jmp
test
cld
mov
outsb
cmp
out
xchg
cmp
addr16
add
xchg
insl
dec
sub
jg
add
pop
inc
cmp
cltd
or
cld
push
or
pop
pop
sub
inc
mov
stc
and
aaa
add
add
subb
negb
das
mov
lods
dec
or
mov
jae
and
je
ret
and
repz
or
ljmp
shrl
mov
sub
cmpb
outsl
add
jb
inc
lret
mov
mov
lods
add
add
outsb
cs
nop
outsb
es
sub
insb
push
sbb
insb
push
or
adc
bound
outsl
je
jmp
je
jmp
je
cmp
mov
inc
in
scas
or
xchg
xlat
jle
add
int3
mov
incl
sbb
jne
mov
out
repz
add
add
test
lea
cmp
xchg
cli
incl
cld
inc
mov
cmp
sti
out
into
lock
sub
add
cs
ljmp
and
inc
push
scas
xchg
push
or
in
testb
mov
mov
out
add
out
jl
loop
iret
add
add
cltd
inc
push
cs
jmp
add
jmp
fsub
or
icebp
add
mov
out
mov
clc
movsl
and
push
lds
or
int3
cld
ljmp
add
mov
sbb
mov
call
mov
pop
call
cmpb
insb
fwait
insl
roll
xchg
arpl
addb
sbb
add
add
add
insb
mov
mov
or
mov
gs
sub
pop
sti
gs
shll
in
imul
std
addb
sti
mov
jmp
std
loop
scas
add
out
mov
jbe
fcom
sti
jbe
movsl
cmpl
jg
retw
ljmp
clc
jb
inc
and
dec
lods
out
cmp
clc
bound
add
icebp
adc
inc
or
add
sub
mov
call
sub
repz
push
scas
imul
stc
clc
sub
sar
sub
lods
in
mov
jl
sub
fistpll
add
psrlw
clc
mov
imul
sbb
call
stos
xchg
scas
repz
jp
inc
repz
add
sbb
add
add
int3
inc
sbb
test
add
add
call
xor
add
adc
or
adc
hlt
idiv
inc
rolb
add
mov
mov
cli
icebp
jbe
or
je
push
jmp
jae
xchg
add
call
call
out
pop
jne
xchg
or
call
ret
lahf
sub
ljmp
xchg
mov
fdivrs
sbb
insb
cmpsb
ds
xlat
cld
jmp
xchg
add
adc
in
cmp
cmc
jl
int
jns
dec
add
cmp
cld
decl
adc
xchg
pop
jecxz
lods
adc
jae
psllw
add
add
in
shl
jmp
sbb
jb
addb
rol
icebp
cld
ljmp
xlat
mov
imulb
lcall
loopne
clc
mov
gs
add
or
push
add
add
push
mov
cli
data16
or
add
ret
xchg
fisttpl
mov
fidivs
fcomps
es
and
and
mov
cli
push
rorb
adc
sbb
adc
es
add
add
ja
es
mov
add
stos
out
cs
cltd
out
sar
xor
add
iret
push
pushf
jmp
lds
call
mov
mov
push
clc
jl
sub
push
add
sbb
out
add
add
clc
bound
adc
stos
or
or
lods
shrb
inc
or
scas
aas
call
sub
es
gs
ja
call
sub
sar
sub
test
jl
aaa
insl
div
push
out
enter
stos
hlt
or
rolb
loop
test
ja
icebp
add
add
inc
or
push
call
les
jp
pop
jb
out
incl
addl
cmp
les
sbb
add
int3
pop
mov
call
incl
incl
or
sti
incl
incl
decl
adc
add
js
inc
std
call
std
incl
add
setnp
inc
or
mov
test
xlat
cld
ljmp
scas
movsl
cld
xchg
aaa
or
cld
adc
cld
ljmp
loope
cld
imul
cld
pop
xlat
cld
ljmp
xlat
cld
ljmp
stos
movsl
cld
inc
pop
or
cld
xor
cld
ljmp
xlat
cld
ljmp
dec
movsl
cld
sbb
add
pop
cmp
xlat
cld
incl
add
cs
test
icebp
inc
adc
testl
ljmp
push
cmpsl
cld
leave
sbb
add
add
add
add
add
add
cmpsb
mov
add
xchg
call
out
add
jp
push
adc
add
xchg
push
out
cs
add
add
adc
add
xchg
inc
call
out
add
add
add
adc
add
xchg
sbb
out
cs
add
add
adc
add
add
add
add
add
mov
jmp
sub
add
jmp
sub
in
jne
in
xchg
mov
clc
leave
test
clc
lods
mov
in
lds
add
lret
and
mov
in
imul
in
lahf
xchg
in
cmp
jecxz
inc
ret
jecxz
jmp
add
jecxz
in
aad
clc
mov
outsl
lcall
add
xchg
sti
pushl
xchg
sti
inc
lcall
mov
fwait
sti
incl
add
pop
xchg
incl
sahf
sti
lcall
popf
sti
pushl
sti
dec
popf
sti
sti
popf
sti
incl
sahf
sti
decl
sahf
sti
incl
add
xchg
sahf
sti
call
sahf
sti
call
sahf
sti
pushl
popf
sti
incl
popf
sti
in
popf
sti
push
popf
sti
pushl
fldenv
cld
add
add
jmp
cld
ljmp
xor
ljmp
loope
cld
mov
mov
test
in
cld
cltd
std
mov
xchg
or
cld
andl
mov
imul
mov
pop
xchg
mov
push
mov
cld
inc
imul
cld
sub
cld
and
nop
cld
sbb
cld
add
add
mov
cld
add
jo
repnz
nop
ljmp
nop
xor
lret
pop
in
nop
mov
in
xchg
stos
in
xchg
mov
in
xchg
xchg
in
xchg
mov
mov
mov
dec
nop
jb
pop
nop
push
mov
nop
pop
in
nop
push
in
xchg
add
add
lret
in
xchg
cmp
mov
xchg
sub
rclb
sbb
bound
or
jmp
lahf
in
or
lahf
in
jmp
mov
in
mov
in
xchg
pushf
in
lea
clc
fstpt
clc
mov
in
stos
fucom
clc
xchg
fucom
clc
mov
in
outsl
mov
add
mov
clc
xchg
test
clc
xchg
in
popa
mov
clc
sbb
in
xor
in
shrl
clc
jmp
mov
clc
cmp
jbe
lcall
ja
mov
jne
jmp
jne
lcall
jne
jmp
jne
dec
jne
incl
add
leave
jbe
jmp
jbe
call
jbe
inc
jbe
lcall
jbe
call
je
out
jae
call
je
ljmp
sti
jmp
sti
ljmp
xchg
call
xchg
jmp
mov
ljmp
lret
xchg
cld
sbb
xchg
cld
adc
cld
add
xchg
cld
stc
cmc
xchg
cld
add
add
loope
cld
jmp
pop
xchg
cld
fldcw
xchg
cld
sarl
xchg
cld
leave
daa
xchg
cld
shll
cld
mov
push
xchg
cld
test
aaa
xchg
cld
cltd
daa
xchg
cld
xchg
adc
xchg
cld
xor
xchg
cld
jno
xchg
cld
imul
xchg
cld
push
pop
cld
dec
xlat
cld
ljmp
dec
mov
cmp
cld
xor
fbstp
loope
add
add
add
sbb
cs
cs
cs
add
lcall
xor
add
shl
inc
lcall
push
mov
loopne
lcall
es
fcompl
cs
jp
test
jb
xchg
pushf
push
test
mov
pushf
push
loopne
pushf
dec
loopne
pushf
inc
loopne
insb
lcall
mov
ret
jmp
mov
clc
jmp
int3
fdivr
addr16
fdivr
imul
fdivr
mov
mov
clc
mov
mov
clc
fisttpl
clc
decl
fdivr
mov
add
add
fdivr
or
clc
pop
int3
fdivr
aas
int3
fdivr
inc
int3
fdivr
lahf
iret
fdivr
ret
fdivr
test
fdivr
in
fdivr
add
cmpsl
sti
pushl
sti
incl
cmpsb
sti
out
cmpsb
sti
jmp
cmpsb
sti
call
test
jmp
test
lcall
test
incl
movsl
sti
incl
add
xchg
movsb
sti
call
movsb
sti
jmp
movsb
sti
inc
movsb
sti
mov
movsl
sti
fldenv
sti
call
lahf
sti
stc
movsl
sti
ljmp
movsl
sti
fldenv
sti
ljmp
dec
mov
push
sbb
cld
dec
stos
mov
inc
je
cld
cmp
mov
sub
cld
and
pushf
cld
sbb
sahf
cld
add
add
add
cld
stc
mov
sahf
cld
jmp
sbb
cld
shrl
sahf
cld
leave
das
sahf
cld
shll
cld
mov
sahf
cld
test
aas
mov
cld
xchg
add
cld
and
movsb
cld
jno
lahf
cld
imul
xor
push
mov
add
add
fisubl
xor
js
sub
cmpsb
mov
sbb
mov
or
push
movsb
add
mov
fmull
movsb
ljmp
mov
add
mov
fsubr
mov
fsubr
lcall
test
mov
fdivl
fmull
mov
dec
fwait
sbb
fwait
add
add
push
xchg
add
std
mov
mov
clc
mov
cmpsl
inc
xchg
add
clc
jnp
fdivr
jmp
sub
add
aam
add
out
add
std
mov
clc
xchg
fdivr
xchg
cmpsb
fdivr
mov
add
sub
fdivr
sub
add
in
add
addb
jg
js
incl
add
push
jg
jg
jg
js
incl
jg
jg
jmp
sti
ljmp
sti
jmp
sti
ljmp
sti
decl
sti
incl
add
stc
sti
decl
sti
push
sti
call
sti
lcall
sti
jmp
mov
decl
xchg
sti
ljmp
jmp
fwait
cld
addl
pushf
cld
imul
cld
pop
sbb
cld
push
and
cld
dec
mov
cld
inc
call
add
fmull
fwait
xlat
add
add
les
cs
inc
xchg
cltd
pop
inc
xchg
xchg
jae
jo
push
arpl
cld
jle
cmpsb
jb
dec
jnp
inc
inc
jne
pop
pop
xorb
out
jmp
jns
outsb
inc
push
pop
insb
push
stc
push
sbb
push
jo
inc
push
pop
or
bound
or
add
rclb
popa
out
outsb
std
xor
add
add
arpl
pop
ret
add
pop
sti
pusha
in
or
ljmp
outsl
arpl
dec
lea
push
jns
iret
dec
add
outsl
arpl
cmp
xchg
push
les
add
jl
mov
pop
pop
xchg
inc
dec
insb
mov
add
add
addr16
add
dec
add
jmp
add
push
dec
push
outsb
pusha
add
add
ljmp
xor
addr16
push
inc
arpl
cmp
add
xor
insb
fstpl
add
sub
add
iret
push
inc
add
pop
aas
std
leave
imul
js
add
sub
fsts
push
imul
dec
dec
mov
jl
add
xor
dec
adc
imul
je
sub
pusha
je
cmpsb
push
je
and
add
arpl
push
cli
sti
testb
aaa
je
out
fs
ljmp
popa
sbb
outsb
inc
add
adc
je
ss
je
and
add
add
arpl
pop
sub
je
imull
pop
dec
in
pop
arpl
dec
add
add
add
aad
jae
push
pop
jo
inc
add
cwtl
aad
jae
push
pop
jo
inc
add
das
add
gs
imul
push
fs
jl
add
movsb
incb
dec
dec
outsb
or
or
pop
insl
std
call
outsl
je
sub
push
call
pop
ficompl
std
out
push
popa
ret
pop
aam
pop
je
sub
inc
add
add
aam
outsb
into
pop
je
imull
mov
pop
arpl
outsb
cmpb
dec
incl
shrb
stos
push
jbe
stos
outsb
addr16
rcrb
jp
pop
bound
nop
push
inc
add
add
mov
inc
xchg
pop
inc
xchg
xor
add
push
push
ds
jo
inc
pop
push
pop
push
push
add
push
add
add
pop
xor
cmp
pop
pop
push
pop
adc
inc
or
incl
imul
pushw
gs
jno
add
push
xorl
aad
pop
data16
push
bound
mov
inc
dec
push
nop
dec
pop
cmp
jmp
inc
arpl
adc
add
add
pop
pop
mov
inc
arpl
sub
and
pop
je
fsubs
inc
loope
add
inc
outsb
inc
xlat
inc
addr16
clc
xor
xor
sub
inc
pop
xlat
imul
xor
xor
orb
sub
dec
outsb
aad
push
jmp
cmp
les
pop
add
dec
data16
add
call
sub
mov
cmp
stos
sub
push
jo
nop
ljmp
gs
ljmp
shrb
push
push
sub
popa
insl
repnz
ret
pop
pop
jo
push
insb
outsl
hlt
sti
jmp
je
pop
insb
push
xor
jns
xor
add
push
jb
pop
pop
jae
inc
pop
insl
sub
jno
add
add
sub
sti
push
push
cs
pop
sbbb
push
xchg
push
jae
mov
arpl
jmp
push
cmp
dec
xchg
cmp
push
push
add
sbb
push
sbb
inc
push
inc
push
cmp
or
inc
pop
add
add
cs
arpl
adc
inc
loopne
outsb
je
add
stc
call
outsl
insl
ljmp
arpl
jmp
aaa
addr16
add
ret
das
sbb
insl
add
push
cwtl
pop
leave
push
pop
push
mov
add
push
fs
pop
ret
dec
inc
pop
xchg
push
pop
mov
add
add
bound
adc
inc
or
pop
jns
add
dec
dec
inc
gs
pop
and
add
aaa
add
add
pop
aaa
ss
pop
cmp
cmp
int
mov
gs
inc
add
arpl
repnz
and
cmp
arpl
jns
push
jmp
xchg
pop
pop
pop
int
bound
jg
je
sub
pop
pop
popf
push
lea
add
push
inc
pop
cltd
pop
pop
push
clc
ljmp
ss
jp
arpl
add
daa
es
pop
lock
arpl
std
sub
decb
clc
xor
call
arpl
movl
shll
xor
sbb
arpl
inc
jno
sub
addr16
cs
pop
inc
das
gs
lea
dec
gs
pop
jae
add
ljmp
add
aas
gs
inc
insl
repnz
data16
pop
add
pop
je
xchg
xor
xchg
pop
fs
add
inc
mov
jo
sbb
dec
negb
push
xchg
add
add
pop
push
fisubl
inc
and
add
ljmp
js
add
cs
popa
je
add
jecxz
pusha
jae
cld
inc
addr16
add
pop
mov
xor
cs
add
dec
pop
mov
add
lods
decl
les
pusha
mov
cld
out
popf
push
jo
rcrb
jl
pop
push
test
cs
inc
dec
jne
jae
dec
bound
imul
out
cld
shlb
jo
jmp
inc
push
arpl
mov
add
or
arpl
negb
cmp
sub
pusha
outsb
movd
push
add
enter
ret
push
out
aaa
add
addr16
arpl
inc
pushf
arpl
pop
add
add
shlb
pop
stos
insb
pop
pop
out
in
add
outsl
jge
lret
insb
jnp
out
into
jmp
push
inc
mov
xor
push
dec
pop
addl
add
or
arpl
add
push
jecxz
pusha
push
add
pop
loop
dec
pusha
cli
push
inc
push
add
inc
add
sub
pop
insl
xor
jmp
lcall
cmp
fisubs
xor
xchg
inc
addr16
popl
add
aas
arpl
push
gs
push
push
bound
mov
push
push
push
add
add
push
dec
mov
push
pop
arpl
sub
push
inc
jg
aaa
bound
sub
push
inc
adcb
push
push
adc
inc
loopne
js
sub
push
inc
add
push
pop
push
push
pop
add
inc
popa
insb
xor
popa
insl
xor
add
pop
insb
gs
popa
imul
add
add
add
inc
popa
insb
xor
gs
jecxz
outsb
lds
popa
test
mov
insl
out
pop
pop
je
sbb
mov
add
gs
push
mov
add
cmp
fs
mov
pop
add
push
lret
fs
sub
gs
cs
inc
rcll
outsb
or
add
add
or
rolb
inc
shl
inc
imul
and
push
add
xor
xchg
jmp
push
insl
popa
frndint
call
bound
je
mov
add
cmc
cld
inc
push
xchg
cmp
jo
imul
pop
outsb
pop
js
insb
or
jg
lcall
or
add
add
pop
shll
push
in
pop
push
push
stos
std
push
xor
adc
add
sti
dec
add
mov
pop
lcall
push
mov
imul
sbbl
add
inc
dec
int3
bound
pop
fistpl
pop
aad
andl
inc
pop
int3
push
pop
or
xchg
dec
add
add
jg
pop
dec
andb
adc
cmp
dec
ljmp
icebp
pusha
jb
cmp
push
inc
inc
or
or
ds
iret
xor
iret
xor
rcrl
dec
ficomps
pop
add
sub
addr16
mov
xor
push
popa
insb
or
popa
imul
std
lods
mov
add
add
pop
int
push
push
dec
dec
je
sub
push
push
rcrl
lds
popf
dec
dec
je
sub
push
push
fwait
or
arpl
adc
inc
fs
pop
add
popa
outsb
gs
pop
insb
gs
sub
add
inc
jae
arpl
bound
add
loope
ds
gs
sub
pop
jne
xor
add
add
data16
gs
add
add
je
add
xor
pusha
imul
add
xor
pop
pop
add
pop
add
insb
loopne
pop
insb
xchg
pusha
outsl
test
je
aaa
insl
jae
sub
add
dec
incl
insl
das
insl
adc
arpl
js
insb
add
cmova
pop
add
xchg
cld
inc
shll
add
add
inc
cmp
xor
jo
cmp
in
mov
loopne
addr16
sti
inc
push
decb
in
imul
pop
dec
arpl
xchg
pop
pop
jle
dec
arpl
pop
add
or
inc
push
mov
pusha
insb
pop
mov
pop
je
add
push
negb
add
call
adc
pop
sbb
inc
add
gs
dec
sub
out
pop
push
sub
cmp
pusha
cmc
pop
ss
fstps
xor
push
add
popf
dec
cmp
add
pop
mov
push
repnz
xchg
push
or
push
push
les
sub
jns
outsl
pop
shrl
push
lret
add
add
lret
sub
movsl
pop
dec
inc
stos
sub
pop
fs
inc
outsb
jle
xor
or
sub
imul
sub
dec
push
inc
cli
cs
push
jno
sub
pusha
push
jecxz
fs
je
pop
imul
sub
arpl
insb
es
add
xchg
dec
inc
pop
xchg
push
outsb
cld
xchg
dec
addr16
das
add
sbb
les
inc
add
sub
add
lea
cmp
pop
inc
mov
xor
add
inc
jo
pop
inc
gs
je
pop
or
add
adc
in
imul
fs
je
daa
popa
outsl
stc
sti
outsl
add
pop
popa
add
add
push
dec
imul
daa
pop
je
pop
push
pop
add
inc
pusha
addr16
pop
popa
outsb
xor
push
add
imul
cld
ds
jb
mov
fs
push
gs
stos
dec
add
outsl
add
test
dec
mov
insl
cmp
jb
dec
sbb
or
pop
cs
push
arpl
dec
push
je
add
or
add
pusha
std
inc
shrl
push
movl
cld
inc
sub
pusha
popa
xlat
add
pusha
pop
mov
cmp
ss
pop
jno
icebp
push
arpl
mulb
jge
push
add
pop
rorl
les
dec
mov
add
pop
sarl
push
lret
pusha
aas
xor
push
sub
add
bound
push
mov
pop
decb
fs
sbb
ds
add
arpl
push
xor
pop
inc
pop
decb
adc
inc
push
sti
pop
dec
push
fstps
cmp
add
push
js
add
dec
or
pop
push
or
sub
add
ljmp
pop
xchg
push
add
nop
xor
je
add
add
cmp
iret
sbb
stos
jne
insb
int
push
imul
xor
imul
or
mov
pop
push
jmp
adc
lea
xor
adc
add
out
pop
push
and
in
push
jae
idiv
call
sub
jno
out
push
xor
xor
pop
add
add
inc
sub
insb
add
xor
add
mov
inc
sub
popa
outsb
sub
outsl
push
add
cld
dec
add
and
mov
xlat
cld
or
mov
inc
jae
imul
gs
jmp
aam
imul
popa
add
push
push
into
and
cwtl
cld
out
add
cs
arpl
or
add
add
sub
adc
cmp
add
push
je
ljmp
push
cmp
je
push
add
cs
pop
insl
lcall
insl
imul
add
loop
inc
mov
cld
add
arpl
arpl
dec
imul
cld
and
inc
pusha
pop
jo
popf
inc
arpl
test
add
gs
lock
cltd
dec
imul
push
arpl
dec
pop
push
cs
std
inc
lret
push
das
jae
repz
push
test
xchg
sub
popa
je
inc
inc
pop
cltd
add
push
mov
arpl
add
orb
jge
repz
add
add
push
dec
xor
push
gs
add
int3
xor
add
pop
inc
xor
push
imul
adc
inc
add
push
cli
jp,pn
adc
add
add
push
loop
push
aas
int
push
pop
sti
xor
add
and
sbb
and
lret
inc
add
sub
pop
jg
arpl
xchg
sbb
add
das
push
outsb
add
push
adc
add
pusha
and
imulb
xor
pop
and
sub
xor
stos
push
inc
push
dec
cs
les
dec
int3
dec
xor
data16
arpl
add
dec
mov
xor
fildll
sub
aam
je
sub
pop
jno
into
push
arpl
sub
xor
in
imul
add
add
add
add
pop
imul
jae
and
pop
add
add
insb
insb
inc
pop
pop
je
add
push
cs
outsl
loopne
cmp
ljmp
jae
and
addb
add
pop
pop
je
repnz
outsb
xchg
add
add
push
fs
cmpsb
pop
data16
add
add
pop
dec
outsb
sahf
and
push
add
add
rcrb
inc
jmp
jo
clc
and
adc
je
cmpsl
cld
cmp
cmc
dec
dec
pop
leave
inc
push
fs
bound
cld
sti
sub
push
pop
mov
pop
pop
lcall
popa
mov
pop
insl
jle
push
pop
push
sbb
insl
pop
enter
test
pop
arpl
pop
insl
cmp
test
push
popa
add
add
enter
xchg
push
dec
and
pop
dec
or
pop
pop
cli
xor
arpl
jg
je
xchg
lret
lcall
add
add
and
inc
mov
dec
push
push
cs
add
and
cmp
and
add
jmp
push
jno
and
sub
add
pop
pop
sub
and
and
add
add
jns
sarl
inc
xor
dec
jno
rcrl
add
daa
enter
mov
sbb
add
add
push
add
mov
sub
push
nop
pop
or
add
sub
icebp
sub
dec
xor
dec
icebp
pop
insl
dec
repz
jo
icebp
sub
sub
push
addr16
mov
jno
sub
add
jns
push
adc
push
inc
daa
insl
jmp
pop
sbb
insl
or
aas
jmp
js
aas
iret
dec
sbb
add
dec
arpl
push
sub
add
add
sub
arpl
loopne
arpl
sub
xor
jae
pop
addr16
mov
push
out
pop
outsb
add
add
add
inc
notb
jne
push
add
roll
aas
gs
outsb
imul
sub
aas
gs
pop
jae
and
inc
add
push
dec
out
sub
icebp
pop
insb
insb
xlat
cld
push
add
push
pop
outsb
mov
outsl
in
pop
je
push
data16
inc
outsb
outsb
dec
popa
popa
jecxz
jb
aam
pop
jne
pop
je
add
add
imul
xchg
pop
jo
xchg
dec
add
icebp
std
dec
sarl
cs
xor
loop
inc
arpl
inc
dec
addr16
inc
pop
insb
cs
add
pushf
cmc
sub
pushf
inc
push
popa
jge
pop
jae
adc
jb
dec
pop
jl
push
je
mov
pop
jae
add
push
dec
pop
pop
rorb
fldt
add
pop
add
add
dec
int
arpl
dec
addr16
cmp
lret
push
insl
push
outsb
std
incl
add
sbb
xor
sub
aas
or
das
jnp
rclb
lret
add
xor
push
inc
pusha
add
add
sbb
inc
rcrb
lea
dec
insl
cmp
add
add
push
fwait
sbb
bound
add
add
sbb
and
push
push
das
add
dec
sbb
add
stos
pop
pop
inc
les
sub
xor
out
dec
add
push
and
rolb
imul
pop
add
aas
sub
insl
nop
push
mov
push
bound
int3
sub
clc
push
add
sub
fidivrs
push
add
dec
add
add
pushl
jp
inc
cmp
daa
outsb
sbb
sub
sub
insl
std
pop
daa
ja
mov
insl
lock
inc
int3
jle
outsb
into
je
pop
fisubl
add
sub
push
fiadds
popa
jecxz
dec
jns
inc
pop
insl
mov
insl
je
dec
outsl
outsb
rorb
add
add
mov
push
jb
and
add
add
in
imul
aas
gs
popa
fs
pop
inc
loop
outsl
aad
jae
inc
add
add
pop
outsb
inc
in
gs
cmp
add
ds
fs
pop
inc
repnz
outsl
in
jae
adc
insb
outsb
jecxz
jl
test
pop
popa
jecxz
dec
jb
mov
inc
insl
pop
jp
outsb
add
add
pop
sub
push
sbb
sbb
arpl
xchg
jae
outsb
cld
sbb
push
xor
daa
push
cmp
dec
daa
popa
rcrl
les
ljmp
mov
sbb
outsb
cmp
scas
cs
ja
adc
sub
out
push
cld
cmp
cld
les
out
ja
mov
arpl
add
dec
cld
and
add
cmp
add
xor
aas
mov
or
dec
add
mov
xor
jmp
sub
sub
push
jl
fdivrs
xchg
and
sub
dec
dec
out
icebp
std
xor
iret
inc
push
daa
aam
dec
cmp
aaa
xor
std
adc
dec
inc
cmp
aaa
lea
add
add
dec
pop
inc
aaa
dec
push
out
shlb
and
add
sub
sub
pop
sub
cltd
mov
jmp
jae
add
dec
add
pop
mov
pop
arpl
push
push
insl
adc
push
pop
jge
inc
arpl
and
lcall
add
adc
cmp
and
sub
sbb
push
cmp
je
pop
sub
sub
sub
sub
inc
adc
sbb
data16
cmp
das
add
fnsave
push
call
bound
fisubrs
js
popa
add
imul
push
jbe
pop
inc
xchg
adc
inc
mov
add
std
outsl
add
jmp
outsb
jmp
dec
add
in
outsl
jb
out
jae
push
cld
jb
pop
adc
jae
out
dec
jo
je
add
pusha
cld
dec
popa
pop
in
jne
clc
pop
push
daa
fistpl
and
add
loop,pn
push
or
push
or
inc
stos
daa
push
add
push
cmpsl
cld
insb
ja,pn
je
jo
push
add
add
add
add
cmp
add
pusha
cld
dec
packssdw
pop
mov
inc
pop
andl
daa
push
cs
add
xor
imul
inc
add
repnz
pop
daa
insb
rcll
push
iret
inc
aaa
arpl
cmpsb
cld
lods
testb
push
daa
je
bnd
cltd
cld
push
or
je
add
sub
adc
cmp
add
test
add
jg
push
dec
jb
sub
or
inc
add
sub
inc
lret
and
mov
add
int3
xor
sbb
les
inc
xchg
es
push
out
sbb
mov
or
and
cmp
and
add
aaa
lods
dec
loop
mov
int
push
add
add
daa
ret
daa
sarb
lea
push
add
daa
jnp
add
pop
inc
ds
or
in
push
sbb
ja
push
dec
push
or
adc
in
push
sbb
sbb
or
add
sub
inc
inc
fistpl
dec
mov
sub
push
addr16
push
inc
push
mov
clc
sub
and
add
add
inc
push
and
mov
add
jge
in
push
push
mulb
pop
inc
add
inc
add
push
fildl
jle
pusha
popa
imul
gs
pop
jne
fnstenv
pop
add
add
outsb
cs
jno
adc
incl
cmp
loope
gs
imul
inc
insb
outsl
jne
imul
fstpl
add
xchg
fwait
pop
insb
imul
add
out
inc
mov
pusha
arpl
add
add
cmp
icebp
pop
je
fildll
xchg
fidivl
div
call
add
jb
cmp
je
fisubl
sahf
cmp
mov
pop
inc
insl
xchg
cld
jo
or
insb
mov
das
dec
mov
pop
pop
jp
cld
loope
jecxz
insb
dec
stos
pop
dec
dec
adc
pop
add
add
cld
fsubrl
jecxz
insb
dec
lret
pop
inc
insl
xchg
cld
data16
pop
insl
and
arpl
pop
cld
outsl
sub
and
pop
inc
add
ja
dec
or
push
popa
add
sbb
xchg
das
insl
xchg
cld
cmpsb
sub
pop
je
jg
jno
call
ret
and
daa
out
lock
and
xor
add
add
add
add
cmp
sub
sbb
es
and
and
adc
add
das
add
ljmp
mov
popa
inc
lret
pop
or
xchg
das
sbb
mov
add
dec
test
add
xchg
and
xor
add
add
jg
push
je
add
add
sbb
dec
incl
imul
je
inc
sbb
pop
pop
push
inc
add
imull
sbb
inc
add
repnz
sbb
cli
cmp
jb
add
add
push
outsb
add
dec
fs
and
push
add
pusha
xor
arpl
dec
and
mov
sub
ljmp
add
add
push
pop
lahf
sub
insb
inc
rolb
xchg
hlt
jo
mov
fdivs
in
inc
popa
mov
pushl
add
gs
lock
arpl
je
push
or
outsb
fisubs
es
inc
adc
xlat
imul
or
add
pop
outsb
and
push
sub
dec
je
repz
push
add
add
std
or
aam
push
aam
data16
push
je
aad
add
push
ss
repz
stos
repz
mov
outsb
lret
xchg
cld
sub
push
sbb
arpl
jae
push
sbb
jg
addr16
xor
out
and
inc
arpl
add
cmp
fwait
out
lea
xor
inc
je,pn
stc
sub
adc
cmp
add
arpl
add
das
pop
cmp
pushl
imul
dec
je
lds
inc
ss
cld
cmp
outsl
dec
push
pop
add
cld
cwtl
jo,pn
je
and
test
pop
adc
test
add
lcall
and
icebp
sbb
push
fcomps
test
fcos
sahf
das
ret
xor
sub
inc
inc
add
add
add
jno
cmp
adcb
xor
inc
lea
xor
add
and
or
jno
add
popa
aaa
imull
dec
pop
or
add
imul
int3
das
arpl
shlb
inc
out
ljmp
xor
pop
jae
cmp
aas
jmp
sbb
test
sbb
test
add
and
arpl
cmp
sub
outsb
jp
call
cli
xor
dec
dec
arpl
and
insl
add
pop
sub
push
sub
push
cmp
push
out
adc
aas
push
dec
push
push
push
in
push
and
or
add
mov
pop
or
sti
adc
je
add
outsb
loopne
das
je
dec
sbb
jmp
add
add
fdivl
vsubps
je
mov
inc
add
stos
add
ret
repnz
flds
dec
gs
aad
jae
in
inc
push
add
jae
hlt
push
fs
jb
jae
jg
add
xchg
add
inc
add
dec
gs
dec
je
adc
push
fsubrs
fbld
movl
jae
add
add
fistpl
aad
jb
in
je
inc
outsb
popa
jle
pop
bound
mov
cld
inc
add
outsb
sbb
inc
pop
arpl
inc
notb
pop
outsl
sub
sbb
push
das
je
xchg
cld
inc
cs
sbb
and
jae
cmp
loopne
bound
lock
arpl
add
jp
daa
je
jmp
je
or
pop
repz
add
cs
push
sti
push
arpl
movsb
daa
insl
inc
fbld
pop
dec
add
xor
pushl
mov
loope
adc
add
xor
inc
sbb
pop
add
add
sbb
dec
int
mov
add
ljmp
sbb
add
clc
sub
lea
and
mov
cmp
sub
inc
pop
cmp
adcb
and
and
pop
inc
or
inc
inc
or
pop
sbb
add
sub
push
aas
mov
popa
add
mov
pop
push
imul
push
pop
pop
mov
add
add
pop
arpl
xchg
add
add
xor
stc
sbb
sub
outsb
dec
push
inc
insb
dec
sub
pop
inc
pop
add
push
ss
jno
dec
sbb
ds
pop
cmp
xchg
inc
and
push
daa
add
cmpsl
xor
sbb
jo
lds
movl
mov
pusha
outsb
add
add
mull
add
push
adc
jb
jmp
clc
fs
mov
arpl
popf
add
in
pop
gs
fs
fldt
popa
fisubrl
push
pop
add
fnstenv
scas
add
addb
decl
in
insb
je
fstps
push
ficomps
pop
pop
add
call
add
out
outsb
cs
das
fisubl
je
movsb
xor
icebp
aaa
push
cmp
and
cmpsb
cld
int3
xor
cmpxchg
insb
adc
sub
pop
lret
pop
mov
arpl
xchg
cld
mov
add
sbb
push
and
lret
xchg
shrb
and
std
pop
lret
cs
sahf
inc
dec
push
add
add
xchg
cld
ljmp
xchg
cld
ljmp
xchg
cld
ljmp
xchg
cld
ljmp
xchg
cld
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
jmp
add
add
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xlat
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
inc
add
add
add
push
add
add
add
inc
add
add
add
add
add
add
add
add
cmpsl
cld
ljmp
cmpsl
cld
ljmp
cmpsl
cld
incl
add
cmpsl
cld
ljmp
cmpsl
cld
ljmp
cmpsl
cld
ljmp
cmpsl
cld
ljmp
cmpsl
cld
ljmp
cmpsl
cld
ljmp
cmpsl
cld
ljmp
cmpsl
cld
ljmp
cmpsl
cld
ljmp
cmpsl
cld
ljmp
cmpsl
cld
ljmp
cmpsl
cld
ljmp
cmpsl
cld
ljmp
cmpsl
cld
ljmp
cmpsl
cld
ljmp
cmpsl
cld
ljmp
cmpsl
cld
ljmp
cmpsl
cld
ljmp
cmpsl
cld
ljmp
cmpsl
cld
ljmp
cmpsl
cld
ljmp
idivl
inc
cs
aas
inc
cs
ljmp
mov
add
cmpsb
cld
ljmp
pop
xor
inc
outsb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
ja
out
cs
add
add
add
add
add
add
decl
pushf
sti
add
add
add
add
add
pop
add
add
push
pushf
out
add
add
add
add
add
add
add
jmp
sub
popf
cmp
sub
add
jmp
sub
add
jmp
sub
add
sub
add
jmp
icebp
or
sub
add
lds
add
rorl
add
sub
icebp
aas
jmp
sub
repnz
jmp
popa
pop
movb
into
aas
jmp
or
inc
add
xchg
mov
mov
popa
inc
inc
dec
cmc
and
jge,pn
inc
data16
iret
xchg
push
xchg
std
mov
cmp
inc
bnd
push
xorb
test
cmpsb
subb
pop
ret
rol
mov
jne
inc
arpl
fs
push
pop
je
mov
xchg
fiadds
dec
inc
cmpsb
pop
outsb
jecxz
push
and
fstpt
inc
das
hlt
push
stos
or
or
repnz
cs
pop
sarl
jle
enter
sarb
mov
adc
add
and
inc
jae
inc
in
ss
cmp
ljmp
mov
lea
mov
pop
inc
jno
dec
js
test
and
and
negl
pop
sarl
mov
cltd
pop
jp
ffreep
mov
ljmp
in
lret
mov
push
xor
add
add
mov
xor
fstps
mov
fldenv
mov
sbb
mov
and
pop
pop
fldenv
pop
lahf
es
push
sub
icebp
jge
fcom
call
fdivl
into
into
fsubs
and
stos
pop
fadd
aaa
sti
sahf
sbb
xlat
jae
sahf
push
aam
aas
add
add
mov
mov
stc
pushl
insb
cmp
shrl
mov
adc
mov
xor
fcmovnb
aaa
cmp
shr
out
mov
cmp
loopne
push
fnstsw
dec
push
jbe
test
adc
cltd
divb
cmp
add
or
jge
mov
int
adc
add
in
imul
xor
aaa
imul
jmp
adc
lahf
fsubl
xchg
xor
out
outsb
jb
jo
cmp
shlb
sub
mov
cmp
adc
popf
xor
scas
xor
xor
sub
shl
sub
mov
dec
add
xlat
mov
mov
mov
pop
inc
jae
mov
cmp
pop
bound
xchg
mov
lahf
cltd
mov
add
xor
add
xchg
add
add
adc
cmp
jge,pn
aas
cmpl
mov
cs
jp
cs
jp
cs
jp
cs
add
cmpsl
cld
ljmp
cmpsl
cld
ljmp
cmpsl
cld
ljmp
cmpsl
cld
ljmp
inc
xor
cmpsl
cld
ljmp
cmpsl
cld
ljmp
cmpsl
cld
ljmp
dec
cwtl
cmp
cmpsl
cld
ljmp
cmpsl
cld
ljmp
and
ljmp
cmpsl
cld
ljmp
cmpsl
cld
ljmp
mov
cld
ljmp
cmpsl
cld
ljmp
add
add
add
add
add
add
add
add
add
and
out
cs
add
add
add
add
add
out
cs
add
add
add
add
xchg
arpl
out
cs
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
out
cs
add
add
add
add
jmp
add
jmp
sub
sar
call
sub
add
adc
sar
call
sub
add
pushf
jecxz
call
sub
add
ss
call
sub
add
adc
call
sub
add
cmp
add
jmp
add
jmp
push
sar
call
sub
jmp
cmp
xchg
incl
in
add
add
call
pushl
icebp
cmp
inc
incl
call
ljmp
incl
call
pushl
cmp
pop
incl
incl
add
pop
jmp
add
add
incl
call
ljmp
cmp
inc
call
decl
cmp
cs
cld
ljmp
test
or
ljmp
test
cld
ljmp
cltd
cs
cld
ljmp
test
cs
cld
ljmp
test
add
rorl
aas
cs
cld
ljmp
cmpsl
cld
ljmp
scas
in
ds
cld
ljmp
cmpsl
cld
ljmp
cmpsl
cld
ljmp
pop
hlt
ds
cld
ljmp
cmpsl
cld
ljmp
cmpsl
cld
ljmp
dec
in
ds
cld
ljmp
cmpsl
cld
ljmp
add
add
add
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
out
cs
add
add
add
add
sub
jmp
add
add
add
add
add
add
sub
out
cs
add
add
add
add
daa
cmp
out
cs
add
add
add
add
daa
sbb
add
sub
add
jmp
icebp
sar
call
add
jmp
sub
sar
call
sub
add
outsl
data16
call
sub
add
xor
call
sub
add
les
call
sub
add
je
int
call
sub
add
cmc
repz
call
add
add
add
add
lds
add
add
add
add
add
add
add
cmp
movl
add
xchg
add
add
lds
add
add
add
sarb
add
add
add
add
dec
fidivrs
add
add
push
add
add
add
stos
in
cmp
inc
add
add
add
add
add
pop
add
add
cmp
pop
add
add
add
add
add
add
ret
cs
cld
ljmp
cltd
cld
ljmp
cltd
cld
ljmp
in
lret
cltd
cld
ljmp
cltd
cld
ljmp
cltd
cld
ljmp
mov
cld
ljmp
cltd
cld
ljmp
cltd
cld
ljmp
cmpsl
enter
cld
ljmp
cltd
cld
ljmp
inc
mov
cs
test
cs
aas
lea
aas
add
add
rorl
aas
adc
aas
xor
aas
jp,pn
aas
cs
mov
jnp,pn
aas
add
cmp
cmp
sub
pop
mov
add
mov
add
lea
add
lea
add
lea
add
stc
ljmp
add
mov
iret
mov
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
repz
fisubl
fcmove
cmp
dec
ss
mov
leave
fistpl
add
xor
add
pop
std
cmp
cwtl
cmp
add
add
mov
fucom
cld
cmp
aam
cmp
aam
cmp
test
cmp
jne
cmp
cmp
mov
jmp
xor
add
mov
in
mov
ss
sub
or
jb
lods
push
aaa
xchg
bound
aaa
lea
aaa
xchg
push
or
insl
or
jne
push
movsb
cmp
loopne
pushl
add
mov
fs
cmpsb
jl
ja
xchg
ds
lods
ds
mov
ds
fdivrl
repz
cld
ds
cmpsb
or
mov
sbb
jae
sub
jae
cmp
arpl
pop
aas
xor
jl
add
pushf
aas
mov
lods
aas
mov
mov
aas
xor
in
aas
adc
add
ljmp
popf
int3
or
int3
sbb
int3
sub
int3
cmp
pop
int3
dec
jne,pt
pop
ds
aam
push
sbb
aam
push
jge
stos
push
adc
ror
je
jl
jmp
je
sti
pop
popf
int
pop
xchg
int
pop
mov
int
aas
dec
aas
cmc
int3
pop
aas
mov
add
mov
jnp
sbb
int
pop
jge
stos
pop
adc
int3
lret
push
int3
decl
roll
adc
and
into
repnz
into
lret
into
mov
inc
into
stos
aad
into
xchg
aad
into
dec
test
push
gs
push
mov
jb
mov
mov
test
jb
test
stos
aad
into
xchg
aad
into
mov
aad
add
movsl
into
ljmp
int
aam
int
aam
int
aad
int3
adc
aad
lret
int
aam
int3
push
mov
jb
mov
mov
test
jb
test
ljmp
mov
adc
pop
xchg
sub
add
xor
jmp
aam
mov
les
lods
icebp
xor
xchg
jmp
adc
push
incb
insl
add
add
je
jne
xor
xor
xor
fmulp
xor
faddp
xor
jg
xor
jg
xor
jg
xor
jg
xor
pop
sbb
add
xor
pop
or
loope
mov
jmp
sub
adc
add
sbb
out
mov
fildll
pushf
cmp
stos
movsb
cmp
stos
loopne
sub
add
lock
stos
and
cmpsl
stos
and
scas
sub
scas
xor
test
cmp
scas
les
test
push
cmp
jae
pusha
cmp
add
test
add
fdivrs
pop
scas
dec
aas
and
stc
pushl
mov
mov
xor
sbb
int
add
add
sbb
int3
cmpsl
jl
scas
decb
fistps
int3
adc
shrl
pop
pusha
sarl
and
int3
aas
int3
cld
aas
inc
into
inc
cmp
iret
cmpl
int
sbb
cmp
cwtl
std
or
mov
dec
into
aas
add
jno
das
ror
bound
enter
enter
lret
add
inc
dec
lret
test
mov
add
int3
inc
iret
add
or
pop
int
iret
or
loope
lcall
into
or
into
push
int
into
push
int
into
loopne
cmp
jnp
leave
enter
enter
jecxz
push
xchg
fcmovu
into
fidivl
lret
push
lret
test
jnp
int3
lret
js
sbb
add
add
fadds
les
mov
jl
ffree
test
dec
ret
sti
lods
ret
inc
xchg
inc
push
arpl
cmp
andb
sarb
cmp
cmpb
jp
cmp
pop
cltd
cmp
bound
clc
imul
call
das
xchg
fstl
add
jecxz
mov
leave
movsl
fdivrl
das
inc
add
das
js
imul
sti
mov
sub
es
xor
lcall
xchg
or
add
test
cmp
jge
lock
mov
cmp
jbe
std
mov
cmp
scas
xchg
pop
mov
ds
mov
aas
add
add
stc
incl
lods
push
xor
stos
xor
lods
or
or
stos
es
stos
dec
xor
test
xor
test
xor
test
xor
stos
xor
stos
fwait
xor
stos
scas
xor
stos
lock
test
xor
sub
scas
inc
pop
stc
aad
inc
aaa
xlat
scas
cmp
ret
aad
ss
les
add
movsb
les
cwtl
lret
popa
pop
add
pop
adc
lret
scas
add
lret
fwait
leave
adc
stos
leave
xor
aad
les
leave
shlb
leave
loopne
cli
leave
lock
cwtl
enter
enter
enter
enter
enter
sarb
adc
sbb
rolb
leave
jo
add
movsb
int3
and
jb
out
pop
add
sub
ror
rclb
xor
popf
rcrb
rclb
or
in
inc
int
adc
popa
fimull
lret
mov
popf
lret
rol
dec
int3
pusha
std
int
insl
into
mov
pop
into
in
sub
adc
clc
int
dec
lds
int
lds
int3
add
add
fcmovnb
out
iret
pop
les
iret
fld
call
loopne
cmp
jg
cmp
pop
cmp
pop
cmp
mov
add
push
sbbb
push
jl
jnp
pop
das
lahf
jge
das
sbb
lods
das
and
pop
out
or
fldt
out
cld
cmp
das
ret
cld
jnp
js
add
cld
imul
fmull
inc
fdivrl
cs
decl
sub
cmp
lcall
inc
lods
es
test
xor
cmpsl
pop
xor
and
cmp
add
cmpsb
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
add
ret
mov
cmp
mov
cmp
mov
cmp
scas
scas
cmp
push
xlat
cmp
push
sbb
adc
ds
dec
ret
dec
adc
rorb
aas
xchg
dec
dec
aas
mov
sarl
testb
mov
add
cs
pop
push
int3
in
je
dec
in
shl
pop
fs
or
popa
pop
adc
ror
inc
push
xlat
lea
add
cmp
xlat
mov
push
shlb
nop
shl
and
lret
unpcklps
lds
ss
testb
enter
iret
xchg
iret
fbld
lret
sub
leave
inc
dec
mov
outsb
inc
int
fnstcw
imul
pop
add
shll
xor
rcl
xor
add
add
xor
fcoms
xor
imul
and
ss
mov
dec
int3
jo
xchg
aas
cmp
leave
fistpll
addr16
lds
xor
insl
cmp
push
cmp
std
cmp
iret
and
cmp
repnz
les
jnp
in
cmp
aas
int
ds
push
ds
or
add
add
aam
add
or
add
std
adc
cmp
lods
sub
dec
fists
sub
fimuls
xor
fstps
xor
cmpl
jbe
dec
xor
js
xor
popa
stc
xor
inc
xor
pop
cmp
sbb
mov
xor
xchg
ja
movsb
xor
pop
push
xor
xor
and
stos
add
add
in
data16
lahf
aaa
sub
mov
jne
cmpsb
ss
insl
ss
lret
xor
cmp
dec
adc
out
inc
xor
roll
jne
jp
test
dec
icebp
cmp
inc
sub
inc
dec
cmp
dec
push
cmp
dec
fwait
cmp
dec
mov
flds
cmp
inc
jp
xor
push
inc
fwait
cmp
scas
inc
out
cmp
inc
sub
xchg
ds
inc
cmpl
and
ds
dec
or
aas
roll
jle
pushf
aas
jl
stos
aas
mov
aas
cs
leave
inc
xor
loope
imul
ljmp
inc
int3
sub
cli
int3
jg
test
int
jbe
and
sbb
rcr
call
pushl
rcrb
sti
pop
push
roll
rcl
pop
lcall
cmp
inc
or
mov
fcmovne
mov
es
les
pop
scas
lret
je
and
push
add
lret
or
cmc
ja
outsb
repnz
enter
push
arpl
mov
push
insb
leave
or
jecxz
jnp
add
add
shll
xor
xorl
iret
add
add
xor
lret
ss
sarl
add
int
ss
into
pop
aaa
or
cltd
ss
call
cmp
leave
imul
add
add
stos
js,pn
or
into
cmpsb
xor
pop
cmp
or
cmc
push
cmp
cmp
in
cmp
add
add
xchg
cmp
stos
cmp
pusha
cmp
out
cmp
sbb
add
jmp
add
hlt
std
or
xor
fisubl
xor
fidivrl
xor
aad
dec
and
sbb
das
inc
pop
movsl
das
pop
pop
mov
lahf
pop
pop
das
sbbl
jl
das
ret
jl
das
mov
shrb
aam
test
jle
mov
add
push
pop
push
add
push
inc
xor
push
push
xor
push
xchg
xor
mov
adc
pop
xor
push
jle
sbb
mov
xor
dec
ljmp
push
inc
xor
dec
push
xor
push
pop
xor
dec
jne
adc
dec
cltd
xor
push
mov
xor
dec
hlt
xor
add
xchg
dec
adc
adc
dec
iret
xor
lock
and
es
push
ss
lret
out
xchg
clc
sub
shll
leave
loopne
mov
leave
daa
pop
dec
leave
cmp
mov
push
jmp
xchg
enter
leave
gs
lret
and
cmp
sub
nop
lret
mov
add
int
inc
call
add
add
push
lds
mov
lds
inc
cltd
lds
inc
insl
shrb
jae
subb
lcall
ret
add
loop
iret
lds
ss
lds
aaa
push
mov
ss
add
out
or
add
add
roll
test
lods
das
insl
roll
add
enter
mov
das
fcmovbe
inc
xor
cmp
or
adc
adc
push
xor
shll
mov
iret
cld
sub
sarb
sub
into
adc
mov
and
add
sahf
xor
popa
pop
xor
or
cmc
jae
xor
push
in
outsl
clc
xorl
add
add
test
cs
addr16
cli
add
xor
loop
xor
movsl
xor
repz
xor
jmp
xor
in
cmp
cli
xor
xor
fdivl
in
aaa
add
cmp
xor
je
ss
mov
insb
fs
ss
je
ss
int3
xor
add
dec
inc
cmp
add
xor
cmp
inc
mov
cmp
cmp
mov
cmp
cmp
cmp
int3
cmp
cmp
sbb
mov
cmp
je
push
ds
cmp
cmp
push
ret
push
ret
xor
sarl
jg
or
sub
push
aas
test
aas
add
add
shlb
xchg
jo
ljmp
sub
cs
xor
pop
push
xor
pop
xor
pusha
pop
ja
enter
sub
cld
cmp
insl
cld
ljmp
pop
fidivl
pop
pop
test
cmp
pop
push
ss
inc
test
lcall
inc
mov
and
cmp
add
add
imul
cmp
std
push
xor
pop
ss
jecxz
fcompl
xor
inc
add
cmp
cmp
cmp
aaa
std
cmp
cmp
lea
inc
cmp
cmp
cmp
cmp
cmp
push
cmp
test
ss
sub
inc
out
xor
aas
add
add
xor
push
inc
sub
push
inc
out
xor
xchg
loopne
jle
cs
xor
dec
xor
das
fbstp
xor
xor
xor
xor
xchg
xor
xor
pop
out
jbe
mov
mov
push
sub
inc
js
in
cmp
xor
mov
test
pop
xor
or
adc
add
hlt
mov
dec
cmc
xor
inc
push
loope
aam
sarl
adcb
xchg
outsb
mov
add
int
clc
pop
xor
add
sbb
adc
sahf
sbb
cs
add
cs
subb
sti
inc
sub
add
sub
xor
sub
xor
sub
aaa
add
add
aaa
les
pushf
cmp
mov
ss
inc
xor
cmp
xor
jns
push
cmp
xor
cmp
xor
hlt
xor
lods
mov
pop
aas
mov
mov
xchg
aas
je
enter
add
lods
stc
jmp
std
dec
sub
xor
sub
xor
sub
xor
hlt
xor
mov
xor
mov
add
sub
test
cmp
sub
mov
xor
sbb
cmp
cli
je
add
push
sbb
add
sub
or
ss
cwtl
xor
lods
xor
mov
xor
ss
cmp
cmp
dec
daa
nop
cmp
add
daa
cmp
adc
ss
add
addl
cmp
sub
cmp
aaa
cmp
sub
shrl
movsl
cmp
repz
call
sub
aas
test
inc
cwtl
sub
jecxz
and
es
sub
stc
cmp
mov
mov
pop
cs
cmp
and
stos
add
add
cs
or
add
add
xor
xor
stos
xor
ss
mov
dec
sub
cmp
push
aaa
jecxz
and
inc
cmc
ja
mov
fs
dec
xorb
push
xor
je
mov
lods
xor
xor
mov
pop
xor
out
and
push
push
xor
daa
pop
mov
xor
mul
xor
addr16
cld
popa
ret
outsb
pop
cmp
dec
add
jmp
xor
add
cmp
jnp,pn
leave
sub
add
lahf
xor
das
fdivl
sub
xor
scas
xor
xor
jae
es
xor
xorl
add
xor
jnp
ljmp
ss
xor
aaa
jno
test
cli
xor
cmp
sub
cmp
pop
cmp
sub
cmp
cmpl
dec
sub
cmp
xchg
aas
cs
and
sub
loopne
add
cld
insb
das
cld
cld
xor
std
or
xor
arpl
sub
ja
in
mov
cwtl
cmp
aaa
data16
pop
cmp
cmp
adc
cmpl
sbb
aas
xor
in
aaa
int3
repnz
cmp
xor
add
pop
insb
decb
loop
add
in
addb
add
add
mov
cmp
shrl
ss
xor
sti
das
repz
ljmp
xor
xor
iret
das
mov
xor
inc
xor
rdmsr
cld
xor
test
xor
xor
xor
xchg
test
and
mov
cmp
sub
cmp
sub
cmp
sub
cmp
sub
cmp
sub
cmp
push
sub
xor
add
jmp
sub
mov
in
sbb
das
iret
and
jl,pn
stos
loop,pn
xor
sub
fs
mov
mov
pop
divl
out
dec
push
xor
inc
into
xor
out
xor
dec
inc
xor
add
add
xorb
pop
cltd
xor
pop
add
flds
aad
add
repz
js
lahf
aaa
xchg
push
aaa
call
push
mov
dec
cmp
mov
cmp
sub
popf
sub
push
sub
cmp
sub
cmp
sub
cmp
xor
cmp
sub
cmp
add
stc
xor
jmp
add
test
lods
xor
xor
pop
xor
xor
sbb
push
sbb
ss
push
xor
arpl
test
fdivs
cs
das
and
das
dec
inc
stos
das
lahf
cmp
scas
inc
out
das
les
sub
or
jb
sbb
dec
xor
pop
mov
cmp
add
icebp
xor
push
push
sbb
cltd
scas
add
cs
xor
aas
or
jns
pushf
xor
dec
sub
mov
lret
das
sbb
shll
add
jbe
add
or
xor
pop
inc
ss
hlt
jmp
cmp
sbb
add
add
sub
cmp
mov
cmp
and
cmp
mov
aaa
pop
and
aaa
push
and
cmp
and
lock
fnsave
pop
es
ss
and
cmp
sbb
outsb
xor
lret
es
mov
es
xor
fs
ss
add
out
and
repnz
add
cmp
stc
out
cmp
jg
js
xchg
cmp
mov
cmp
inc
cmp
adc
dec
cmp
push
cmp
cmp
jmp
sub
adc
in
sbb
xor
mov
std
int
mov
jp
mov
pop
shrl
xor
xor
add
add
xor
dec
aad
xor
xor
adc
xor
or
xor
push
dec
ss
bound
out
adc
push
aaa
sti
adc
aaa
xchg
adc
lea
xchg
fwait
adc
aaa
lahf
adc
cmp
and
cmp
sub
cmp
sub
cmp
sub
add
add
repnz
sub
sub
add
cld
fnsave
xor
cmp
sub
ss
movsb
cmp
sub
add
push
push
cli
ljmp
dec
cld
ljmp
ret
pushl
sti
push
xor
sbb
adc
cwtl
shlb
gs
cmpsb
push
ret
push
pusha
xor
dec
push
xor
cmp
add
push
fdivr
jmp
jae
andb
sub
add
sub
add
sub
bound
aaa
ret
aaa
lret
aaa
rolb
aaa
fidivrl
cmp
loop
inc
aaa
ljmp
popf
cmp
cmp
fnstsw
and
cmc
cmp
fnstsw
and
lds
or
mov
cmp
add
pop
sub
movsl
cmp
cmp
cmp
cmp
cmp
mov
pop
sub
cmp
jne
pushf
sub
inc
cmp
mov
cmp
cmp
cmp
sub
cmp
sub
dec
xor
xor
xor
add
add
xor
adc
xor
jle
arpl
jbe
pop
pop
mov
arpl
test
dec
negl
xor
push
cmpsb
xor
push
xor
inc
xor
inc
dec
xor
aaa
inc
xor
xorl
pop
push
adc
mov
mov
ss
pop
cmp
std
cmp
cld
ret
cmp
xor
pop
cld
push
cmp
pop
add
jmp
add
add
add
out
pop
push
xor
ja
sub
xor
sub
xor
mov
mov
push
xor
sub
xor
sub
xor
sub
or
mov
xor
lea
movsl
aaa
adc
pop
cmp
adc
cmp
adc
cmp
adc
mov
adc
cmp
adc
cmp
in
xchg
adc
cmp
test
ds
clc
xchg
ljmp
lret
add
jnp,pn
mov
aas
mov
xor
sbb
cmp
push
sbb
xor
ljmp
add
aaa
sbb
adc
data16
loop
xor
pop
nop
sub
add
add
sub
inc
pop
sub
cmp
sub
xor
cs
and
cs
adc
or
add
das
lret
clc
or
repnz
das
add
das
add
add
xchg
fwait
pusha
sub
add
mov
dec
xor
sub
aaa
fwait
sub
movsb
sub
sub
inc
sub
mov
add
andl
xchg
and
and
xor
sbb
xor
sbb
xlat
xor
pop
out
add
add
add
xor
adc
movlps
mov
das
xor
adc
xor
fnstenv
or
shll
xor
push
jb
pushf
push
pop
xor
inc
shlb
cmp
xor
add
inc
pop
xor
fbstp
pusha
and
rcrb
cmp
xchg
xor
adc
cmp
adc
cmp
decb
cmp
incl
cmp
add
jo
lea
addb
pushf
pop
xchg
cmp
push
inc
cmp
dec
bound
ss
pop
cmp
sbb
cmp
or
cmp
jne
dec
sbb
clc
add
add
add
add
adc
or
scas
xor
add
xchg
push
and
pop
xchg
xor
pop
outsl
xor
adcb
adc
enter
pushl
pop
sub
cmp
sub
cmp
sub
xchg
sub
cmp
sub
cmp
sub
fisubs
xchg
cmp
xor
push
daa
fidivrl
xlat
sub
add
test
adc
cmp
add
sub
push
addr16
cltd
sar
ljmp
divb
or
cmp
sub
adc
lock
cmp
sbb
cmp
sbb
lock
xor
add
and
aas
xor
arpl
xor
add
pop
pop
xor
shll
nop
pop
jo
mov
cmp
xor
inc
xor
sbb
fldcw
sbb
sub
sub
sub
sub
insl
sub
sub
pop
sub
add
push
sbbl
add
orl
pop
ss
adc
adc
xor
adc
xor
loopne
and
rcrb
add
nop
push
add
nop
push
icebp
sub
nop
push
popa
cs
popa
cs
jno
mov
push
subl
adc
xor
daa
sbb
daa
adc
aaa
or
xor
pop
pop
bound
testl
add
xor
out
or
out
cli
xor
sbb
xor
testl
sbb
daa
adc
xor
or
xor
pop
loop
pop
push
ljmp
dec
ljmp
dec
cmp
imul
cmp
mov
daa
stos
cmp
add
add
sub
ds
sub
ds
sub
mov
daa
add
aas
sub
cmp
outsl
aas
call
sub
jmp
push
or
cs
xor
xor
imul
xor
mov
xor
sub
sub
or
movsb
xor
add
add
ljmp
cmp
sub
dec
mov
sub
pop
xchg
sub
add
fsubrs
jl
call
sub
push
sub
dec
adc
mov
and
cmp
xor
mov
movsl
sub
and
jl
aad
rorb
inc
daa
push
add
outsb
add
add
fisubs
movsb
icebp
mov
ret
imul
sbb
cld
ljmp
add
xor
xor
adc
test
xor
xor
je
xor
adc
xor
mov
xor
push
pushf
xor
jmp
sbb
xor
or
xor
or
xor
or
xor
or
xor
or
xor
add
gs
xor
fwait
xor
or
xor
popf
xor
jecxz
sub
das
sub
das
adc
or
das
push
or
mov
pop
ret
xor
push
scas
xor
inc
jmp
mov
adc
xor
jge
pop
push
jae
cmp
xor
sahf
xor
movsb
xor
lcall
inc
xor
pop
sub
xor
pop
imul
xlat
dec
push
xor
or
fistpl
icebp
xor
push
divl
nopl
xor
sbb
and
inc
xor
mov
pop
xor
sbb
jae
xchg
jge
jge
xchg
adcl
movsl
xor
add
add
mov
xor
jae
fnstenv
and
cli
xor
mov
ss
and
aad
das
ss
and
ss
es
ss
and
jmp
add
sti
incl
and
cmp
cmp
repz
and
icebp
push
cld
ljmp
dec
sub
add
add
sub
pop
enter
mov
sarb
clc
cmp
cmp
imul
sbb
mov
xchg
pop
cli
daa
sbb
xor
add
addr16
mov
cld
ljmp
mov
das
clc
pop
mov
test
inc
popf
daa
icebp
inc
addr16
jns
cld
ljmp
cmp
sub
sbb
sub
add
add
ret
sub
xchg
push
dec
sub
jbe
dec
sub
testb
sub
push
push
dec
sub
decb
dec
sub
ss
fldt
pop
outsb
sub
pop
or
cs
jecxz
sbb
shrb
out
push
mov
push
pop
mov
adc
pop
sub
add
les
lods
sbb
jp
fistps
sub
xor
clc
sbb
scas
sbb
xor
stos
sub
xor
clc
sbb
add
insl
push
clc
lds
pop
xor
sbb
sbb
cs
xorb
dec
popa
cmp
add
jmp
sub
add
pop
sub
hlt
sub
stos
add
add
inc
cmp
push
test
inc
setns
das
dec
and
pop
dec
add
jmp
sub
add
sbb
jnp
out
add
xor
inc
imul
mov
test
lahf
test
cmp
hlt
outsl
cmp
cmc
sub
cmp
repnz
cmp
push
cmp
cmc
outsb
cmp
cmc
jl
push
mov
stos
hlt
mov
xchg
hlt
scas
cmp
cmc
sarb
jle
in
and
idivb
shl
cmp
pop
cmp
repnz
cmp
pop
addr16
or
sarb
stos
and
sbb
cmpb
and
ds
sbb
sbb
shlb
popf
sbb
lock
pop
adc
std
push
and
inc
pop
xor
add
icebp
sub
inc
imul
pop
pusha
pop
add
jo
dec
pop
orb
nop
inc
addr16
stc
adc
cs
push
dec
or
push
jmp
pop
sbb
inc
adc
xchg
adc
jb
js
jb
cmp
adc
or
fcompl
adc
pop
pop
adc
xchg
adc
add
sbb
or
repnz
add
add
or
pop
mov
or
pop
push
or
push
sub
sti
push
add
xor
fimull
or
mov
arpl
lret
push
loop
mov
cli
or
sbb
or
sbb
lret
sbb
arpl
lret
sbb
or
rorb
jecxz
sub
sti
sbb
or
sbb
mov
push
or
add
add
or
push
or
scas
or
insl
mov
pop
es
jge
js
jge
mov
xor
nop
xor
cwtl
xor
inc
xor
sub
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
sub
add
jmp
sub
add
jmp
sub
add
add
add
add
add
add
add
add
add
push
add
add
add
inc
add
add
add
push
add
add
add
inc
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
incl
add
cs
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
push
cld
ljmp
push
cld
ljmp
push
cld
ljmp
push
cld
ljmp
push
cld
ljmp
push
cld
ljmp
push
cld
ljmp
push
cld
ljmp
push
cld
ljmp
push
cld
ljmp
push
cld
ljmp
push
cld
ljmp
push
cld
ljmp
push
cld
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
add
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
sub
add
jmp
sub
call
call
inc
inc
call
incl
call
incl
call
call
incl
incl
call
call
incl
incl
incl
add
pop
call
incl
incl
call
call
incl
incl
call
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
incl
add
cs
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
push
cld
ljmp
push
cld
ljmp
push
cld
ljmp
push
cld
ljmp
push
cld
ljmp
push
cld
ljmp
push
cld
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
sub
add
jmp
sub
add
sub
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
inc
add
add
add
add
add
add
inc
add
add
add
pop
add
add
add
add
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
incl
add
cs
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
jmp
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
add
add
inc
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
call
inc
inc
call
call
inc
inc
call
incl
call
incl
call
call
incl
add
inc
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
incl
add
cs
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
pop
cld
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
jmp
add
add
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
add
cld
call
call
incl
incl
call
call
incl
add
inc
cld
incl
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
ljmp
sub
ljmp
sub
incl
add
cs
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
incl
add
cs
ljmp
sub
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
sub
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
push
add
add
add
inc
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
call
inc
inc
call
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
incl
add
cs
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
add
add
add
add
add
cs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cs
add
add
add
add
add
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
jmp
sub
add
jmp
add
jmp
sub
add
jmp
sub
add
jmp
sub
cld
call
cld
inc
cld
inc
cld
call
cld
call
cld
inc
cld
inc
cld
call
cld
incl
cld
call
cld
cld
add
push
repnz
ljmp
call
imull
in
in
mull
inc
iret
ljmp
adc
loop,pt
mov
ljmp
cs
dec
dec
aam
xlat
je
xchg
lcall
loope
sbb
xor
xchg
cmp
xchg
sub
mov
mov
add
ds
or
pop
sub
cmp
movsl
add
xchg
cmp
sbb
stos
cmp
fistpll
cmp
fimull
xchg
ret
xor
jp
iret
xor
outsl
das
jne
inc
cmp
ss
or
xorl
stos
inc
das
pop
mov
lret
cmp
push
cmp
jne
mov
and
xchg
pusha
xchg
push
mov
or
and
sub
fdivrs
notl
lcall
cmc
mov
pushl
sub
mov
xchg
push
sbb
sub
call
xchg
bound
movl
xor
sarl
adc
mov
push
and
mov
mov
loope
leave
mov
push
stos
add
movsb
mov
pushf
test
lock
pop
mov
jg
mov
je
divb
mov
jns
fsubrl
outsb
in
jae
mov
cmp
icebp
adc
popf
add
add
xlat
xchg
xor
fcomip
push
and
popa
movsl
ror
add
ficompl
inc
sbb
mov
mov
push
stc
pop
mov
clc
jge
cmc
cmpsl
aaa
jne
out
jb
fs
movsl
es
into
push
stos
xor
xchg
cmp
outsl
imul
dec
xor
aad
sub
or
add
popf
scas
mov
insl
sub
cmpsl
and
push
push
xor
add
repz
push
sti
outsb
ja
fisttpl
pop
mov
mov
movsl
sbb
sti
mov
push
loopne
sub
lret
xor
adc
cld
mov
pop
mov
cmp
sti
jg
jne
std
ljmp
mov
sbb
test
mov
movsl
jnp
cld
push
or
jecxz
add
add
cld
dec
mov
mov
testl
movsl
cld
push
mov
movsl
mov
std
dec
mov
imul
push
hlt
lods
decb
xchg
cmc
pop
jae
xchg
mov
cld
inc
mov
test
push
mov
dec
call
add
add
lods
adc
jnp
test
add
in
mov
jmp
imul
sahf
incb
lds
add
out
jmp
out
mov
int3
jp
lret
int3
jb
lret
int3
push
lret
int3
fildl
call
mov
daa
test
iret
out
dec
xor
subl
xor
mov
aas
add
add
mov
out
and
hlt
insl
add
imul
std
aas
add
or
hlt
insl
add
cld
add
add
pop
test
jge
add
xor
jae
test
movsl
add
mov
lret
out
cltd
or
in
incl
cmp
add
cmp
int3
jp
lret
int3
add
add
lret
int3
push
lret
int3
sti
test
mov
add
pop
cmpsl
enter
inc
lret
int3
repnz
lret
int3
ljmp
mov
push
mov
dec
jmp
in
repz
sarl
repnz
lret
int3
ljmp
sbb
data16
fsubrl
clc
repz
xchg
push
sub
aas
add
add
test
daa
mov
mov
jl
xchg
movsl
ret
movsl
lret
mov
pop
push
popa
lret
push
sarb
jno
sti
add
add
jmp
test
lods
aas
decb
and
dec
adc
add
cmp
mov
cld
dec
cli
pushl
pop
cmpsb
add
add
sbb
jmp
repz
lret
int
int3
cli
cmp
int3
repnz
int3
ljmp
mov
or
mov
nop
repz
cs
int3
jp
lret
int3
jb
lret
int3
push
lret
int3
fstpt
sbbl
inc
xorl
incl
mov
testl
cmp
or
xor
inc
sbb
add
sbb
mov
add
jnp
jl
das
jns
cld
movsl
aam
cmp
insb
inc
mov
sti
mov
or
and
test
jp
lock
inc
scas
and
ucomiss
xchg
jp
or
jnp
clc
mov
lsl
jne
or
adc
or
test
jnp
or
mul
imul
add
clc
mov
mov
sbbl
test
ja
in
mov
cld
push
dec
ja
call
cmpsb
cmp
ja,pn
lock
stos
out
add
test
add
add
lock
fisttps
push
add
test
add
add
data16
clc
cld
push
and
clc
adc
mov
sti
mov
add
repz
jl
cs
mov
pop
test
add
mov
xor
inc
dec
jns
or
sbb
pop
movsl
rcr
mov
idiv
inc
ja,pt
hlt
mov
fisttps
cmpsl
shr
jae
ljmp
add
adc
mov
mov
jl
cs
jae
ljmp
add
add
lahf
test
js
addl
ljmp
xor
adc
test
into
out
subl
jb
xchg
sbb
mov
xor
add
clc
std
push
movsl
ret
push
xchg
cli
incl
ret
or
sbb
imul
xor
hlt
movsl
mov
xchg
sbb
ret
push
loopne
add
xlat
cli
clc
jmp
ja
pop
in
cmp
int3
jnp
jmp
addr16
shl
jns,pn
clc
push
sub
aas
ja,pn
clc
pop
cmp
xchg
sub
jns
cld
mov
sqrtps
lds
push
imul
mov
int3
sti
jbe
mov
push
xchg
repz
jns,pn
add
xchg
add
sub
mov
int3
jnp
jmp
sbb
sahf
nop
cli
mov
movsl
mov
int
mov
or
movsl
repz
xchg
jbe
clc
cmpsl
aam
mov
mov
jae
lods
lods
testl
test
test
jbe
sbb
pop
jne
ja
clc
movsl
mov
test
jbe
adc
add
cmpsl
mov
add
push
pop
test
jbe
mov
daa
test
out
cld
mov
add
test
jae
lret
int3
cli
cmp
int3
repnz
int3
ljmp
sbb
roll
xor
cs
add
add
dec
int
mov
ret
repz
je
clc
pushl
mov
add
in
iret
dec
push
sub
int
repz
jge,pn
push
jp
jmp
add
jmp
je
add
das
add
std
jmp
std
aas
add
add
cs
jl
cltd
adc
jl
cmp
add
sub
sub
aam
inc
cs
mov
test
inc
jne,pn
test
mov
add
rolb
mov
clc
xorl
adc
sub
pop
test
sub
mov
cmp
int3
repz
repz
add
cmp
mov
int3
push
lret
int3
sbb
rolb
and
jnp
or
dec
test
add
add
cmpsl
int
mov
or
into
jne
or
jns
call
jnp,pn
jl
ret
call
mov
pushl
mov
ljmp
add
dec
cld
ljmp
daa
push
lock
jecxz
jecxz
test
iret
test
roll
pop
daa
clc
subl
inc
inc
add
add
sbb
mov
add
repz
jns
hlt
mov
fisttps
fnop
add
subl
movsl
mov
add
dec
call
jp
test
jp
adc
in
inc
ds
test
repnz
aas
in
push
into
imulb
inc
xchg
jp
or
int3
out
jmp
cld
inc
cmp
out
andl
xorl
dec
add
add
mov
jmp
jp
in
pop
or
push
es
xor
sahf
jl
ret
inc
jp
ljmp
add
mov
fildl
add
mov
outsl
hlt
insl
add
arpl
jbe
cmp
cs
sbb
cwtl
ljmp
add
inc
into
jns
xor
and
repz
sbb
push
add
out
xchg
ljmp
add
add
sub
lods
jecxz
hlt
in
pushl
aas
push
mov
sti
push
clc
push
pop
popa
push
hlt
in
incl
movsl
lret
xlat
mov
inc
cld
inc
push
inc
loopne
mov
mov
dec
mov
dec
mov
int3
repz
cs
out
cli
and
sub
test
xorb
add
add
test
js
fsubrs
add
loopne
lret
repz
fnstcw
inc
jns,pn
test
or
decl
repz
repnz
ljmp
pop
test
sub
mov
inc
cmpl
mov
sar
mov
xchg
hlt
add
add
dec
mov
mov
inc
cs
out
add
xor
sahf
push
cli
mov
idiv
loope
ret
add
mov
decl
cs
push
mov
clc
sub
xchg
ja
push
lcall
mov
int3
repz
incl
fbstp
jo
mov
sti
ljmp
ret
or
mov
inc
cs
iret
icebp
add
add
mov
dec
push
xchg
add
cs
clc
push
cli
pop
sbb
mov
add
mov
lds
int3
ljmp
mov
test
les
jnp
jmp
pusha
lret
test
movsl
add
hlt
insl
add
add
ret
insl
xor
int3
sti
jbe
push
add
add
mov
jnp
in
decl
ret
ljmp
and
movsl
or
hlt
in
decl
test
fstpt
lret
int3
sbbl
rolb
add
cmp
xchg
add
add
mov
add
jae
ljmp
add
inc
rolb
add
jne,pn
or
add
test
add
add
sub
add
and
add
lods
or
xor
add
cs
repz
cs
ljmp
jge
jo
mov
rolb
add
add
pushl
sbb
repz
cs
outsl
hlt
in
incl
mov
out
inc
mov
inc
jne,pn
call
imul
dec
add
add
ja
pop
cli
mov
aas
add
or
insl
add
xor
cs
add
cwtl
pop
add
add
add
pop
mov
les
pop
xchg
in
clc
adc
int
repz
cs
mov
in
decl
lcall
mov
das
test
into
out
inc
and
xorl
je
add
cmp
push
popa
jae
insl
add
mov
clc
ljmp
adc
cld
xor
mov
jle
dec
fdivrl
test
les
arpl
insl
add
add
hlt
in
cld
inc
mov
cmp
sub
aaa
idiv
addl
cld
push
add
add
push
in
repz
loopne
or
xchg
sub
ljmp
add
or
add
clc
inc
inc
mov
je
ret
incl
arpl
test
sub
adc
add
mov
scas
inc
out
add
add
popa
jae
add
add
cld
inc
xchg
mov
jmp
mov
fs
mov
repz
cs
mov
mov
mov
repz
sub
push
push
mov
mov
idivl
scas
sub
add
add
mov
repz
cs
addr16
insl
add
sub
clc
ljmp
xchg
repz
cs
out
in
clc
test
add
out
xchg
add
out
sub
inc
cs
hlt
insl
add
je
pop
push
hlt
in
incl
pop
xchg
sbb
repz
cs
xor
loop
insl
dec
lret
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
xor
xor
add
add
add
cmp
cmp
call
cmp
cmp
cmp
cmp
mov
xchg
cmp
cmp
cmp
ljmp
cmp
push
ds
ds
ds
jl,pt
data16
jns,pt
add
add
cmp
aas
in
fnstsw
sarb
lock
lock
xchg
jmp
xor
adc
inc
xor
xchg
xor
das
mov
xor
fidivl
das
out
xor
xor
xor
cmp
in
xor
cmpsb
xor
xor
or
cmp
and
adc
add
add
dec
xor
xor
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
js
stos
xor
xor
mov
xor
xor
xor
xor
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
shlb
jne
xor
call
nop
lcall
pusha
sahf
and
gs
aas
filds
gs
fidivrl
dec
fildll
test
fcmovu
xor
in
mov
lea
dec
inc
stos
popf
or
imul
shr
pop
cmp
push
cwtl
daa
mov
pop
cmp
sbb
cwtl
inc
setns
xor
xor
pop
push
call
lods
or
or
movb
pop
mov
pop
mov
cwtl
jmp
outsb
lret
push
fwait
jo
hlt
enter
int
cld
sahf
xchg
out
jnp
adcb
pop
testl
push
mov
imul
roll
jae
out
ljmp
fistpl
mov
push
sub
mov
push
fnsave
push
faddl
outsl
arpl
insb
enter
pusha
dec
ret
dec
cmp
sub
push
scas
test
stos
mov
into
daa
jg
roll
rcll
mov
pop
or
push
add
cmp
int
cmpsb
cmp
or
ds
mov
sbb
mov
dec
lea
jae
xorl
xchg
lret
out
iret
push
stc
je
xor
dec
icebp
mov
xchg
xchg
je
mov
arpl
jmp
dec
cmc
pop
mov
leave
push
sub
add
push
iret
push
loop
dec
cltd
sub
inc
pop
mov
cld
adc
xlat
test
push
pop
mov
cmc
rorb
jge
cmp
fs
cs
repnz
stos
gs
mov
push
xor
and
mov
pusha
xor
popf
mov
fldt
xor
push
in
pushf
push
jg
jmp
jmp
jmp
jmp
int3
jmp
jmp
fs
imul
js
jae
push
push
add
inc
add
pop
add
add
inc
add
jae
jo
inc
add
imul
add
popa
add
xor
add
dec
add
aaa
add
insl
add
jp
jno
xor
add
dec
add
inc
add
dec
add
add
add
sbb
inc
add
jae
gs
xor
pop
arpl
imul
insb
add
add
xor
add
dec
add
push
add
inc
add
inc
add
add
add
jae
add
pop
add
dec
add
dec
add
add
xor
xor
xor
xor
xor
xor
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
inc
add
jge
pop
add
add
jae
imul
dec
add
add
jo
add
add
outsb
add
add
outsl
add
dec
add
add
add
jbe
jbe
add
nop
xor
sbb
add
mov
add
movsb
xor
xor
add
enter
lods
xor
dec
xor
shlb
add
fdivs
add
call
xor
or
add
add
add
sub
add
add
add
xor
add
add
fdivs
add
call
xor
or
add
add
add
sub
add
add
add
xor
add
add
push
add
imul
insb
insb
outsl
arpl
add
push
imul
imul
jns
add
cmpsb
add
jae
jb
popa
je
add
js
inc
jb
popa
je
inc
imul
dec
inc
dec
xor
cs
insb
add
jp
insl
gs
arpl
add
insl
jae
arpl
cs
insb
add
pop
add
addr16
jo
outsb
dec
gs
js
add
push
inc
push
dec
xor
cs
insb
add
add
cmp
add
sub
mov
xor
movsl
xor
xor
xor
xor
inc
xor
in
xor
fnstenv
imul
mov
and
adc
add
arpl
cmp
cmp
cmp
cmp
cmp
xor
or
add
adc
.byte
.byte
