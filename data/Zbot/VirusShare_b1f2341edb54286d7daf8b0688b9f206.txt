push
mov
sub
push
push
push
mov
mov
mov
mov
movzbl
mov
shl
mov
cmp
je
mov
mov
jmp
mov
xor
movzwl
movzwl
xor
div
mov
cmp
jge
mov
mov
jmp
mov
shr
mov
test
je
mov
jmp
mov
test
jne
movzwl
push
push
call
mov
mov
xor
movzwl
imul
mov
mov
imul
add
mov
cmp
jne
mov
jmp
movzwl
imul
mov
cmpw
jge
mov
jmp
mov
mov
cmpw
jge
mov
jmp
mov
or
mov
sub
movzbl
cmp
jne
movzwl
mov
jmp
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzwl
mov
and
movzwl
cmp
jle
mov
mov
jmp
mov
shl
movzbl
mov
test
je
mov
mov
jmp
mov
add
movzwl
mov
test
je
mov
mov
jmp
mov
add
add
mov
xor
mov
mov
mov
cmpl
jne
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
xor
div
mov
cmpl
jle
mov
mov
jmp
mov
or
sub
mov
xor
mov
mov
movzbl
mov
test
je
mov
jmp
mov
imul
mov
mov
mov
mov
movzbl
mov
add
cmp
je
mov
mov
movzbl
shl
mov
cmpl
jle
movzbl
mov
jmp
mov
shr
mov
mov
test
je
movzbl
jmp
mov
mov
cmpl
jne
movzwl
mov
jmp
movzbl
shr
mov
movzbl
add
push
movzbl
movzbl
sub
push
movzbl
movzbl
or
push
call
mov
mov
test
je
movzwl
push
movzbl
and
push
mov
movzbl
or
movzbl
or
push
call
movzbl
xor
mov
mov
movzbl
movzbl
or
add
xor
mov
mov
shr
mov
mov
mov
mov
movzbl
shr
mov
mov
movzwl
or
add
mov
mov
movzbl
movzwl
sub
add
xor
mov
mov
mov
mov
mov
mov
mov
sub
mov
cmpl
jle
mov
mov
jmp
mov
xor
add
mov
add
mov
movzbl
sub
mov
cmpb
jne
mov
jmp
movzbl
movzwl
and
add
mov
sub
mov
mov
sub
mov
cmpw
jge
mov
mov
jmp
mov
movzbl
add
add
push
movzbl
xor
add
push
mov
xor
sub
push
call
mov
mov
test
je
movzbl
push
movzwl
push
movzwl
movzbl
and
xor
push
mov
movzwl
xor
sub
push
call
jmp
mov
movzwl
cmp
jge
mov
mov
jmp
mov
or
sub
mov
xor
mov
mov
movzwl
mov
imul
mov
mov
mov
mov
shr
movzbl
call
mov
movzbl
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
movzwl
cmp
je
mov
mov
jmp
mov
sub
movzwl
cmp
jle
mov
mov
jmp
mov
or
movzwl
cmp
jne
mov
mov
jmp
mov
add
sub
movzwl
cmp
jne
mov
mov
jmp
cmp
jne
push
push
push
push
call
movzwl
mov
shl
movzwl
cmp
jge
mov
mov
jmp
mov
shr
movzwl
cmp
jne
mov
mov
jmp
mov
or
mov
cmp
jle
mov
jmp
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
mov
cmp
jge
mov
jmp
mov
imul
mov
add
mov
cmp
jle
mov
jmp
mov
sub
mov
cmp
jne
mov
jmp
mov
add
mov
cmp
jge
mov
xor
mov
imul
push
mov
xor
and
push
mov
or
and
push
call
mov
xor
sub
mov
xor
mov
mov
and
mov
cmp
jne
mov
jmp
movzwl
xor
sub
mov
mov
mov
movzwl
xor
div
mov
cmp
jge
push
push
mov
and
add
push
mov
or
mov
sub
push
call
movzwl
or
sub
mov
sub
mov
mov
or
mov
sub
mov
mov
and
add
mov
mov
movzwl
sub
sub
cmp
je
mov
mov
movzbl
mov
mov
mov
cmpl
jge
movzbl
mov
jmp
mov
add
mov
movzbl
shr
mov
cmpl
jle
mov
mov
jmp
movzbl
imul
sub
cmp
jge
mov
mov
movzbl
or
sub
mov
cmpw
jge
movzbl
jmp
movzwl
shl
mov
movzwl
movzbl
xor
sub
mov
movzbl
mov
mov
movzbl
shr
mov
cmpb
jle
movzbl
jmp
movzwl
movzbl
and
sub
mov
add
mov
movzbl
shr
mov
movzwl
movzbl
xor
add
mov
add
mov
movzwl
xor
mov
movzbl
movzwl
imul
add
mov
sub
mov
movzbl
imul
mov
movzbl
movzwl
xor
push
movzwl
movzbl
and
push
movzbl
movzwl
xor
sub
push
call
mov
mov
test
je
movzwl
movzwl
xor
sub
push
movzwl
sub
push
movzwl
push
call
jmp
movl
mov
mov
cmpl
jne
mov
jmp
mov
and
xor
mov
mov
movzbl
or
add
mov
movzbl
shl
mov
movzbl
sub
mov
mov
movzbl
shl
mov
mov
xor
mov
mov
add
mov
movzwl
and
sub
mov
movzwl
xor
mov
movzbl
movzbl
imul
sub
mov
movzbl
shl
mov
movzbl
xor
divl
mov
cmpb
jge
movzbl
mov
jmp
mov
add
mov
mov
imul
mov
sub
mov
movzbl
movzbl
add
add
mov
movzbl
mov
add
mov
movzbl
or
mov
add
mov
cmpl
jne
mov
mov
jmp
movzbl
movzwl
add
sub
mov
add
mov
movzwl
shl
mov
mov
movzbl
sub
sub
mov
mov
add
mov
cmpw
jge
mov
mov
jmp
movzbl
sub
add
mov
mov
cmp
jne
movl
mov
shl
mov
cmpl
jle
mov
mov
jmp
mov
shr
mov
movzbl
xor
sub
mov
mov
mov
cmpb
jge
movzbl
mov
jmp
movzbl
movzbl
imul
add
mov
mov
cmp
jne
movw
mov
mov
movzwl
and
movzwl
sub
mov
cmpw
jge
movzbl
movzwl
xor
push
movzwl
push
call
movzbl
movzwl
xor
add
mov
movzwl
shl
mov
cmpb
jne
movzwl
jmp
movzbl
or
xor
mov
movzwl
sub
mov
movzwl
movzbl
add
sub
push
movzwl
sub
sub
push
movzbl
movzwl
add
sub
push
call
mov
mov
test
je
mov
movzwl
or
xor
push
call
movzbl
movzbl
and
cmp
je
movw
movzwl
shl
mov
cmpw
je
movzwl
mov
jmp
movzwl
add
mov
movzwl
mov
cmpw
jle
movzwl
jmp
movzwl
shr
mov
movzwl
movzwl
add
sub
mov
sub
mov
mov
sub
mov
cmpw
jne
mov
mov
jmp
movzwl
movzwl
imul
add
mov
add
mov
mov
shl
mov
cmpw
jle
movzwl
mov
jmp
jmp
mov
mov
mov
and
xor
mov
mov
or
mov
mov
movzbl
mov
mov
mov
movzbl
imul
mov
movzbl
or
add
mov
add
mov
mov
mov
cmpw
jge
mov
jmp
mov
movzbl
or
sub
mov
add
mov
mov
add
mov
mov
movzwl
imul
add
mov
sub
mov
mov
and
mov
imul
mov
movzbl
imul
mov
sub
mov
jmp
movzwl
imul
mov
cmpw
jle
mov
jmp
mov
and
sub
mov
xor
mov
mov
and
mov
movzwl
sub
mov
mov
mov
mov
mov
xor
div
mov
mov
sub
shr
mov
movzwl
sub
add
mov
xor
mov
mov
add
mov
mov
mov
mov
mov
movzwl
xor
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
movzwl
mov
shr
movzbl
mov
xor
mov
sub
mov
cmpw
jne
mov
jmp
mov
movzwl
xor
mov
sub
mov
cmp
jne
push
call
movzbl
mov
add
mov
mov
sub
sub
movzbl
cmp
jne
mov
jmp
mov
imul
mov
add
movzwl
movzwl
xor
mov
cmp
je
mov
mov
jmp
mov
cmp
jne
push
push
push
call
movzwl
movzwl
xor
sub
mov
cmp
jge
movzwl
mov
jmp
mov
or
imul
movzwl
cmp
jne
mov
jmp
mov
sub
mov
cmp
jle
mov
mov
jmp
mov
or
and
mov
mov
cmp
jge
mov
jmp
mov
movzwl
xor
add
push
movzwl
add
add
push
push
call
movzwl
mov
test
je
movzwl
push
movzwl
movzwl
and
movzwl
add
push
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
movzbl
cmp
jne
mov
mov
jmp
mov
movzwl
movl
mov
movzbl
cmp
jle
mov
mov
jmp
mov
xor
push
mov
and
push
mov
xor
push
call
movzbl
mov
test
je
mov
and
imul
push
mov
imul
push
call
mov
xor
mov
mov
mov
cmp
jne
mov
jmp
mov
add
mov
mov
mov
sub
sub
mov
mov
imul
mov
mov
movzwl
or
mov
sub
mov
mov
movzwl
mov
xor
mov
sub
movzwl
sub
mov
mov
or
mov
movzwl
imul
mov
sub
mov
movzwl
shl
mov
mov
test
je
movzwl
mov
jmp
movzwl
add
mov
sub
mov
mov
xor
mov
sub
mov
cmpl
jge
mov
jmp
mov
movzwl
imul
mov
movzwl
mov
sub
add
cmp
je
movw
mov
xor
and
mov
cmpl
jge
mov
mov
jmp
mov
shl
mov
mov
test
je
mov
mov
jmp
mov
movzwl
sub
sub
mov
sub
mov
jmp
movzwl
sub
mov
sub
mov
mov
sub
movzwl
cmp
jge
call
mov
test
je
mov
mov
jmp
movzwl
xor
add
mov
mov
mov
add
add
mov
mov
mov
mov
and
add
mov
mov
mov
add
add
mov
mov
mov
mov
movzwl
and
add
mov
mov
mov
and
sub
mov
mov
imul
mov
cmpl
jle
movzwl
jmp
movzbl
or
add
mov
mov
mov
add
mov
xor
add
add
mov
mov
movzbl
cmp
je
movzwl
mov
jmp
movzwl
or
add
cmp
je
movl
mov
imul
mov
cmpb
jle
mov
jmp
mov
or
xor
mov
cmpb
jge
movzbl
mov
jmp
mov
mov
cmpw
jne
movzwl
sub
push
movzbl
push
movzwl
xor
xor
push
call
cmpb
jle
movzbl
jmp
movzbl
movzwl
add
add
mov
mov
add
sub
mov
mov
mov
movzbl
imul
mov
movzbl
shr
mov
mov
test
je
movzbl
jmp
movzbl
xor
sub
mov
movzbl
movzbl
movzwl
sub
cmp
je
mov
mov
movzbl
mov
cmpw
jle
movzwl
mov
jmp
movzbl
imul
movzbl
add
mov
mov
shl
mov
shr
or
mov
movzbl
or
movzwl
and
mov
movzwl
movzbl
imul
mov
movzbl
xor
mov
add
mov
movzbl
mov
cmpw
jne
movzwl
or
movzbl
xor
push
movzbl
movzwl
and
push
movzwl
or
movzwl
sub
push
movzbl
xor
push
call
movzbl
movzwl
or
add
mov
add
mov
movzbl
shl
mov
jmp
mov
add
mov
mov
cmp
jne
mov
mov
movzwl
and
movzwl
add
mov
cmpl
jne
movzwl
mov
jmp
mov
shr
mov
mov
mov
sub
movzwl
or
sub
mov
mov
xor
and
mov
cmpb
jle
movzbl
mov
jmp
movzbl
add
sub
mov
mov
add
mov
movzwl
shl
mov
mov
add
mov
movzwl
imul
add
mov
mov
mov
mov
movzwl
or
mov
add
mov
movzwl
mov
mov
mov
mov
movzwl
and
sub
mov
mov
mov
add
mov
movzwl
and
sub
mov
movzbl
add
mov
cmpw
jle
movzwl
mov
jmp
mov
movzbl
and
mov
sub
mov
mov
mov
add
mov
mov
mov
movzwl
and
add
mov
xor
mov
mov
mov
movzwl
movzbl
and
sub
push
movzwl
movzbl
xor
add
push
movzwl
movzbl
imul
add
push
mov
add
push
call
mov
movzbl
and
mov
movzbl
sub
mov
add
mov
mov
movzwl
mov
movzbl
movzwl
and
sub
mov
add
mov
movzbl
xor
divl
mov
cmpb
jge
movzwl
mov
jmp
mov
movzwl
sub
sub
mov
sub
mov
movzbl
sub
mov
cmpb
jle
movzbl
mov
jmp
jmp
mov
xor
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
or
movzwl
mov
xor
mov
sub
movzwl
cmp
je
mov
jmp
mov
shr
movzbl
mov
shl
mov
mov
test
je
mov
jmp
mov
add
sub
push
mov
xor
add
push
mov
add
push
call
mov
mov
test
je
movzbl
push
mov
movzbl
xor
push
mov
add
push
call
mov
test
jne
push
push
call
mov
mov
shr
mov
mov
add
mov
mov
mov
mov
and
xor
movzwl
cmp
jle
mov
mov
jmp
mov
mov
mov
xor
add
push
mov
movzbl
and
push
mov
imul
add
push
call
movzbl
mov
test
je
call
mov
test
jne
call
movzwl
movzbl
shl
movzbl
cmp
je
mov
mov
jmp
mov
or
mov
cmp
jne
movzbl
mov
jmp
mov
mov
cmp
jne
mov
jmp
mov
movzbl
and
and
movzbl
mov
or
mov
mov
test
je
movzbl
mov
jmp
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
xor
imul
movzbl
mov
shl
movzwl
mov
add
add
mov
xor
mov
mov
and
movzbl
mov
or
add
mov
xor
mov
mov
mov
cmp
jle
mov
mov
jmp
mov
sub
mov
mov
mov
mov
shl
mov
movl
movzbl
sub
mov
mov
imul
add
cmp
je
movb
mov
mov
mov
mov
cmpw
je
movzbl
jmp
mov
or
and
mov
movzwl
movzbl
sub
sub
mov
movzbl
mov
mov
movzbl
mov
cmpw
jge
movzbl
mov
jmp
movzbl
movzwl
and
sub
mov
add
mov
movzbl
shl
mov
mov
test
je
movzbl
mov
jmp
movzwl
movzbl
and
sub
mov
add
mov
movzbl
mov
movzbl
movzbl
xor
add
mov
sub
mov
movzwl
mov
jmp
mov
shr
movzbl
cmpb
jne
movzbl
mov
jmp
mov
movzbl
and
add
mov
xor
mov
mov
mov
xor
div
movzbl
mov
mov
mov
mov
xor
movzbl
cmp
jge
mov
mov
jmp
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
movzbl
cmp
jle
mov
jmp
mov
or
add
movzwl
cmp
jle
mov
jmp
mov
shr
movzbl
mov
and
or
mov
cmp
jge
mov
mov
jmp
mov
and
mov
imul
mov
mov
movzwl
imul
push
push
mov
imul
push
call
movzbl
mov
test
je
movzwl
xor
mov
add
push
mov
and
push
mov
imul
push
mov
sub
push
call
mov
shl
mov
cmp
jle
movzwl
mov
jmp
mov
movzwl
xor
mov
imul
mov
cmp
jge
mov
jmp
mov
add
movzwl
mov
shr
mov
cmpw
jle
mov
mov
jmp
mov
test
jne
push
push
movzwl
push
push
call
mov
mov
mov
xor
div
movzbl
mov
sub
sub
movzbl
movzwl
mov
cmpw
je
movzwl
jmp
mov
mov
cmpw
jne
mov
jmp
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
and
mov
cmp
jge
mov
jmp
mov
and
sub
mov
cmp
jge
mov
jmp
mov
shr
movzbl
mov
and
mov
mov
xor
and
movzwl
cmp
jle
mov
jmp
mov
mov
cmp
jne
movzwl
mov
jmp
mov
movzwl
xor
movzwl
xor
mov
mov
add
mov
cmp
jle
mov
mov
jmp
mov
shl
mov
movzwl
movzwl
imul
push
push
movzwl
sub
add
push
call
movzbl
mov
test
je
movzwl
xor
movzwl
and
push
movzwl
and
sub
push
call
mov
shl
mov
cmpw
jne
push
push
push
call
mov
movzwl
mov
xor
div
mov
cmpw
jle
mov
mov
jmp
mov
movzwl
xor
movzbl
mov
xor
sub
mov
cmpw
jge
movzwl
jmp
mov
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
push
push
call
pop
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
mov
mov
or
mov
cmp
jne
mov
jmp
mov
sub
mov
cmp
je
mov
jmp
mov
or
imul
mov
mov
xor
sub
mov
mov
and
add
push
mov
or
sub
push
mov
xor
sub
push
call
mov
test
je
mov
xor
mov
imul
push
mov
movzbl
add
push
push
call
movzbl
imul
sub
mov
cmp
jne
mov
jmp
mov
sub
sub
push
mov
sub
add
push
movzbl
xor
add
push
call
mov
test
je
mov
movzbl
xor
push
push
push
call
mov
movzbl
xor
or
mov
cmpb
jne
movzbl
mov
jmp
test
jne
push
movzbl
push
push
movzbl
push
call
mov
mov
or
mov
cmp
jge
mov
jmp
mov
imul
mov
cmp
jne
mov
jmp
mov
xor
mov
cmpb
jge
mov
jmp
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
or
movzbl
mov
movzbl
mov
mov
mov
test
je
mov
jmp
mov
shr
mov
cmp
jge
mov
jmp
mov
or
add
mov
test
je
mov
jmp
mov
mov
movzwl
xor
or
mov
mov
test
jne
call
mov
mov
mov
xor
sub
mov
mov
mov
cmp
je
mov
jmp
movzwl
shr
movzbl
cmp
jne
mov
jmp
movzwl
mov
cmp
jne
mov
jmp
movzwl
and
push
mov
xor
sub
push
mov
movzwl
imul
push
call
mov
test
je
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
movzwl
mov
shl
movzbl
mov
mov
mov
movzwl
add
movzwl
cmpw
jle
mov
jmp
mov
add
add
movzbl
mov
test
je
movzwl
jmp
cmp
jne
push
push
push
movzwl
push
call
mov
mov
mov
cmp
jge
mov
mov
jmp
movzwl
mov
mov
xor
div
mov
mov
test
jne
push
pushl
push
call
mov
mov
add
mov
mov
mov
mov
cmp
jge
mov
mov
jmp
mov
xor
and
mov
movzwl
shl
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
cmp
jle
mov
imul
imul
push
mov
and
imul
push
mov
or
sub
push
mov
xor
sub
push
call
cmp
je
mov
jmp
mov
movzwl
mov
shr
movzwl
mov
mov
cmp
jge
mov
jmp
cmp
jne
push
push
movzwl
push
push
call
mov
mov
movzwl
cmpw
jge
mov
jmp
mov
and
mov
imul
mov
mov
sub
add
push
mov
movzwl
imul
add
push
push
call
movzwl
mov
test
je
movzwl
and
xor
push
mov
add
push
call
mov
xor
mov
sub
mov
cmpw
je
mov
mov
jmp
mov
and
movzwl
mov
pop
pop
pop
mov
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
cmp
jne
push
call
pop
call
push
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
push
push
call
add
mov
mov
mov
cmpb
jne
inc
mov
mov
cmp
je
cmp
jne
cmpb
jne
inc
mov
mov
cmp
je
cmp
jbe
mov
lea
push
call
testb
je
movzwl
jmp
cmpb
jbe
inc
mov
jmp
push
pop
push
push
push
push
call
push
call
mov
push
call
push
mov
sub
push
push
push
mov
mov
mov
movzbl
cmp
jne
mov
mov
jmp
mov
xor
div
mov
cmp
jne
mov
mov
jmp
mov
add
movzbl
cmp
jge
mov
mov
jmp
mov
add
add
mov
xor
mov
mov
and
sub
movzbl
mov
add
sub
mov
xor
mov
mov
mov
cmpb
jle
mov
mov
jmp
mov
movzbl
sub
add
mov
mov
mov
movzbl
mov
xor
div
mov
mov
xor
add
mov
mov
xor
add
mov
cmp
jle
call
cmp
jge
movzwl
jmp
mov
movzwl
xor
sub
cmp
je
movb
movzbl
mov
xor
div
mov
movzbl
mov
movzbl
mov
mov
movzbl
mov
cmpb
jne
movzbl
mov
jmp
movzbl
movzwl
add
sub
mov
add
mov
movzbl
xor
mov
movzbl
movzwl
add
add
add
movzwl
mov
movzwl
movzbl
add
sub
mov
sub
mov
movzwl
mov
xor
div
mov
cmpw
jne
movzwl
jmp
jmp
movzwl
xor
mov
mov
test
je
mov
mov
jmp
mov
and
sub
mov
xor
mov
mov
and
movzbl
cmpw
jle
mov
mov
jmp
mov
mov
mov
mov
add
add
mov
cmpb
je
mov
jmp
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
add
sub
mov
mov
movzbl
mov
sub
movzbl
cmp
jne
mov
jmp
push
mov
imul
add
push
mov
imul
sub
push
call
movzbl
mov
test
je
push
mov
xor
push
push
call
mov
sub
mov
mov
and
sub
mov
xor
mov
mov
xor
divl
mov
mov
imul
add
mov
xor
mov
mov
xor
mov
cmp
jle
mov
mov
jmp
mov
and
mov
mov
mov
mov
imul
imul
movzbl
mov
or
add
mov
mov
xor
sub
mov
mov
imul
cmp
je
movw
movzwl
shr
mov
cmpw
jne
movzwl
jmp
movzwl
mov
cmpw
jle
movzwl
mov
jmp
movzwl
movzwl
and
push
movzwl
movzwl
add
push
push
call
mov
mov
test
je
movzwl
push
call
mov
mov
mov
test
je
movzwl
mov
jmp
movzwl
movzwl
and
mov
movzbl
mov
mov
movzwl
and
movzbl
sub
mov
mov
test
je
movzwl
mov
jmp
movzwl
movzwl
sub
add
mov
add
mov
movzwl
shr
mov
cmpb
jne
movzwl
mov
jmp
movzwl
movzwl
sub
add
mov
add
mov
movzwl
or
mov
movzwl
movzbl
xor
add
mov
sub
mov
movzbl
xor
add
mov
cmpw
je
movzbl
mov
jmp
jmp
mov
xor
divl
movzbl
mov
xor
sub
mov
xor
mov
mov
movzbl
cmp
jne
mov
mov
jmp
mov
mov
mov
mov
and
mov
mov
test
je
mov
mov
jmp
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzwl
mov
imul
sub
mov
test
je
mov
jmp
mov
sub
push
mov
sub
push
mov
imul
push
call
mov
test
je
mov
xor
or
push
mov
sub
add
push
push
push
call
mov
mov
mov
mov
mov
and
sub
mov
cmp
jne
mov
mov
jmp
mov
mov
cmpl
jne
pushl
push
push
call
mov
mov
xor
imul
mov
mov
sub
movzwl
mov
movzwl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
movzwl
cmp
jle
mov
mov
jmp
mov
mov
mov
and
movzwl
test
je
mov
mov
jmp
mov
and
add
mov
cmp
jne
push
push
push
push
call
mov
mov
and
mov
cmp
jle
mov
jmp
mov
or
mov
sub
movzwl
mov
or
mov
test
je
mov
jmp
mov
test
jne
call
mov
mov
sub
mov
cmp
je
mov
jmp
mov
shr
mov
movzbl
sub
mov
mov
xor
div
mov
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
movzbl
cmp
jle
mov
jmp
mov
shl
mov
cmp
je
mov
jmp
mov
imul
mov
movzbl
movzbl
mov
or
mov
cmp
jge
mov
mov
jmp
mov
movzbl
cmp
jle
mov
jmp
mov
add
movzbl
cmp
je
mov
mov
jmp
mov
xor
sub
mov
mov
test
je
movzwl
mov
jmp
movzbl
xor
div
mov
mov
movzwl
imul
add
push
mov
movzwl
xor
add
push
mov
movzbl
xor
sub
push
call
movzbl
mov
test
je
call
mov
test
jne
push
push
call
movzbl
mov
mov
mov
test
je
movzbl
mov
jmp
movzbl
xor
push
mov
xor
add
push
mov
add
add
push
call
mov
test
je
push
mov
movzwl
or
push
call
movzwl
sub
mov
cmp
jle
movzwl
jmp
movzbl
shr
mov
mov
shl
movzbl
cmp
jne
mov
jmp
mov
test
jne
movzbl
push
push
movzbl
push
movzbl
push
call
movzbl
movzwl
shr
mov
mov
mov
sub
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
push
call
pop
pop
ret
push
mov
sub
push
push
push
mov
mov
movzbl
mov
shl
mov
mov
test
je
mov
jmp
mov
mov
cmp
jne
mov
jmp
mov
add
movzbl
mov
add
movzbl
mov
imul
movzbl
mov
mov
and
mov
mov
mov
mov
cmpl
jle
mov
mov
jmp
mov
test
jne
push
push
push
call
movzbl
mov
mov
xor
div
mov
mov
sub
mov
mov
mov
cmp
jge
mov
mov
jmp
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
and
mov
sub
movzbl
cmp
jge
mov
jmp
mov
shl
mov
mov
shl
mov
mov
imul
sub
mov
xor
mov
mov
and
sub
mov
mov
imul
add
mov
xor
mov
movzbl
mov
cmp
jle
mov
jmp
movzbl
and
mov
mov
mov
mov
or
sub
mov
mov
test
je
mov
mov
jmp
mov
movzbl
imul
add
mov
mov
movzbl
sub
mov
mov
movzbl
add
add
cmp
je
movl
mov
shr
mov
cmpl
jle
mov
jmp
mov
or
mov
imul
mov
mov
sub
sub
push
mov
and
sub
push
mov
and
add
push
call
mov
mov
test
je
mov
sub
push
pushl
mov
sub
push
mov
xor
mov
sub
push
call
mov
shr
mov
cmpl
jle
mov
mov
jmp
mov
xor
add
mov
movzbl
mov
mov
mov
add
mov
mov
add
sub
mov
add
mov
mov
and
xor
mov
cmpl
je
mov
jmp
mov
imul
sub
mov
add
mov
mov
sub
mov
cmpl
je
mov
mov
jmp
mov
xor
add
mov
sub
mov
mov
xor
mov
jmp
mov
add
mov
mov
movzbl
sub
sub
mov
xor
mov
mov
movzbl
cmpl
jle
mov
jmp
mov
mov
mov
mov
cmp
jle
mov
mov
jmp
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
movzwl
mov
sub
add
mov
cmp
jle
mov
jmp
mov
shl
mov
mov
shl
mov
mov
imul
push
mov
or
add
push
mov
imul
push
call
mov
mov
test
je
mov
imul
mov
sub
push
mov
and
xor
push
mov
xor
push
mov
or
push
call
mov
shr
movzwl
cmp
jle
mov
jmp
cmp
jne
call
mov
mov
mov
imul
mov
mov
or
and
mov
cmp
jle
mov
jmp
mov
and
push
push
mov
sub
push
call
mov
test
je
pushl
mov
sub
push
call
mov
and
mov
imul
mov
mov
mov
mov
test
je
mov
mov
jmp
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
imul
mov
add
movzwl
cmp
je
mov
jmp
mov
shr
movzwl
cmp
jne
mov
mov
jmp
mov
shl
movzwl
cmp
je
mov
jmp
mov
add
mov
mov
xor
div
movzwl
mov
test
je
mov
mov
jmp
mov
mov
mov
imul
movzwl
cmp
jge
movzbl
push
push
call
mov
xor
movzbl
imul
mov
mov
shl
movzwl
cmp
jne
movzbl
push
push
push
call
mov
mov
movzwl
mov
imul
add
mov
mov
or
movzwl
cmp
je
mov
mov
jmp
movzbl
shl
movzwl
cmp
je
mov
mov
jmp
movzbl
xor
mov
cmp
jne
push
push
call
mov
mov
xor
mov
cmp
jge
mov
jmp
movzbl
and
mov
cmp
jne
mov
jmp
mov
or
add
mov
mov
add
movzwl
mov
xor
div
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
push
push
mov
mov
and
mov
add
movzwl
cmp
jge
mov
mov
jmp
mov
shr
movzwl
cmp
je
mov
mov
jmp
mov
movzwl
cmp
jne
call
movzwl
mov
movzbl
cmp
je
mov
mov
jmp
mov
or
movzwl
cmp
jge
mov
mov
jmp
mov
imul
sub
movzwl
mov
add
movzbl
mov
pop
pop
pop
ret
mov
pushl
call
push
mov
sub
push
push
push
mov
mov
mov
cmp
jne
mov
jmp
mov
shr
movzwl
mov
movzwl
cmp
jge
mov
mov
jmp
mov
shr
mov
mov
xor
div
mov
mov
test
je
mov
jmp
mov
add
movzbl
add
mov
cmp
jne
movzbl
jmp
movzbl
mov
cmp
jne
mov
mov
jmp
mov
add
movzwl
movzbl
add
mov
cmp
jne
mov
mov
jmp
mov
movzbl
cmpb
jne
movzbl
mov
jmp
mov
and
and
mov
cmp
jne
push
push
movzbl
push
call
mov
movzbl
add
mov
mov
sub
movzwl
cmpb
jne
movzbl
mov
jmp
mov
movzwl
mov
mov
pop
pop
pop
mov
pop
ret
jmp
jmp
ret
jmp
xor
ret
jmp
jp
roll
xchg
add
cmp
aas
decl
dec
and
int3
mov
inc
push
inc
in
shl
xorb
dec
je
push
cs
dec
fsubl
sub
inc
out
inc
in
lds
pop
pop
pop
outsl
repz
lret
jo
push
inc
les
inc
sub
jmp
and
cs
sahf
mov
or
dec
and
leave
push
jb
and
std
fmul
dec
and
push
mov
xlat
rcrb
inc
dec
loopne
add
cmpsb
mov
outsl
mov
cltd
dec
repz
daa
rcll
cmp
test
pop
enter
mov
sti
dec
adcb
sub
sbb
sub
iretw
mov
lds
aam
fs
mov
sub
inc
das
aad
loop
mov
adc
je
push
inc
and
lcall
pop
pop
xchg
or
mov
pop
jnp
adc
and
xchg
inc
outsb
mov
sub
orb
in
mov
mov
test
loopne
aad
inc
push
pushf
iret
pop
sub
loope
dec
imul
jge
call
push
dec
outsb
insl
mov
arpl
adc
outsb
jo
dec
xor
push
or
pop
mov
pop
sar
jecxz
cmpsl
test
pop
insb
les
ljmp
mov
in
adc
mov
lcall
mov
inc
in
fimuls
movsl
les
icebp
or
push
push
out
and
std
mov
sub
xchg
pop
in
icebp
fsub
xchg
dec
jp
rcl
fmull
pop
jp
pop
xor
mov
subl
mov
push
insb
repnz
loope
xor
adc
leave
movsb
fwait
or
mov
inc
jecxz
pop
xchg
dec
imul
stc
movl
test
add
xchg
es
in
jnp
jp
int
enter
pop
icebp
mov
fs
leave
xchg
jae
and
outsl
mov
popf
jp
cmp
push
xchg
lds
push
test
or
xchg
dec
stc
pusha
jle
mov
hlt
testb
and
adc
leave
movsb
mov
sub
scas
mov
sub
jno
push
push
loope
sub
in
sub
sbb
pop
sub
sahf
mov
add
into
mov
sub
push
pop
je
nop
cmpsb
and
rcll
and
insl
das
rclb
push
inc
lret
aas
pop
notb
out
mov
aad
add
mov
dec
mov
adc
leave
movsb
mov
jbe
movsb
mov
mov
daa
ret
outsb
lods
hlt
in
xchg
mov
mov
fsubl
cmpsl
jne
mov
sub
xor
das
mov
test
lea
push
inc
and
ljmp
imul
and
cmpsb
and
test
fnstenv
mov
hlt
loope
push
inc
dec
jl
test
in
les
das
rcrb
inc
sub
sub
sbb
mov
mov
rclb
daa
inc
aad
xchg
mov
push
adc
cmp
outsb
pop
jno
shll
je
xlat
movsl
jg
popf
insl
xor
outsl
or
xchg
fisttpll
xchg
xchg
js
std
mov
jb
adc
int
rclb
das
rcl
push
cmpsb
test
js
ljmp
add
repnz
or
adc
inc
add
cmc
out
mov
les
cwtl
adc
movsb
test
or
aad
sahf
inc
mov
stos
adc
xchg
mov
xchg
rclb
mov
pop
add
ljmp
cld
and
fiadds
push
jl
fdivl
adc
out
xchg
pop
pop
adc
out
fldenv
notl
mov
mov
mov
ljmp
or
xor
push
ljmp
inc
hlt
xchg
cmpsb
test
das
add
cli
aad
lds
leave
aad
jne
push
int3
out
iret
nop
xor
test
ds
mov
pop
xlat
pop
testl
and
les
sarb
lret
sub
add
jg
or
ret
adc
sub
fadds
pop
ljmp
fstpt
test
mov
mov
gs
in
sub
dec
sub
adc
subl
xchg
das
dec
nop
aaa
jl
test
jge
test
pop
mov
sub
adc
subl
xchg
das
nop
inc
leave
cmpsw
xchg
inc
rcrb
jg
pop
mov
push
ret
and
inc
mov
dec
nop
lcall
movsb
jg
aad
das
stos
adc
lds
nop
inc
pop
ljmp
pop
ljmp
popa
or
adc
mov
mov
cli
pushf
add
nop
ljmp
add
and
cmpsl
test
or
aam
dec
pop
xchg
jnp
or
jge
out
lds
cmpsl
aad
sub
xor
das
rorb
rcr
dec
stos
sti
adc
sub
and
lret
jg
test
adc
mov
not
cmp
decl
inc
mov
and
shrl
aam
dec
pop
test
das
rcl
nop
sub
aaa
sub
addr16
ret
push
add
xchg
movsl
outsb
int
shr
xor
dec
cli
mov
xchg
inc
imulb
dec
test
das
rcl
xchg
add
cwtl
sbb
cmpsl
test
cmpsb
ds
cmp
mov
xchg
lds
shrb
push
adc
rclb
das
test
jecxz
cmpsl
out
vandnps
jg
std
adc
pop
jp
das
rclb
lock
rcl
aas
ljmp
rolb
ds
das
xchg
std
sub
jbe
pop
subb
push
cmpsb
jge
jo
dec
lret
jg
push
scas
das
aas
subb
test
call
inc
mov
dec
inc
loop
repz
push
imul
fwait
jp
cmp
enter
dec
test
sub
xchg
inc
sub
aam
lock
cwtl
mov
mov
in
or
pop
insb
lahf
stc
cld
push
push
cmpsb
repnz
shll
fildl
mov
add
sub
ljmp
push
jl
lds
pusha
ss
out
addr16
das
rclb
mov
pop
fiaddl
arpl
imul
ljmp
icebp
xchg
popa
adcb
xor
das
rclb
jl
int
jg
test
adc
stos
mov
bswap
fisubrl
adc
test
sbb
stos
mov
push
aad
mov
mov
leave
push
ret
jmp
repnz
jmp
pop
scas
addr16
sbb
jmp
leave
sbb
cmc
jmp
lods
jns
jg
int3
xchg
jnp
push
in
jg
enter
push
mov
das
xchg
push
in
sub
rorb
stos
mov
sbb
in
inc
repz
sbb
jmp
repnz
int3
test
xchg
jo
xor
loopne
movsl
insb
in
out
xchg
dec
cmpsl
inc
aam
aad
xchg
dec
lods
pusha
les
ffreep
lds
jb
adc
mulb
sub
xchg
push
dec
loop
leave
icebp
mov
lods
inc
les
xchg
mov
jae
jo
or
out
pop
pushf
push
enter
addb
mov
pop
mov
in
cmpsb
pop
scas
data16
sbb
fsts
or
flds
adc
shll
adc
jp
or
icebp
mov
adc
lds
rclb
das
rclb
das
rclb
das
rclb
das
rclb
das
rclb
das
rclb
das
rclb
das
rclb
das
rclb
das
rclb
das
rclb
das
rclb
das
rclb
das
rclb
das
rclb
das
rclb
das
rclb
das
rclb
das
rclb
das
rclb
das
rclb
das
rclb
das
rclb
das
rclb
das
rclb
das
rclb
das
rclb
das
rclb
das
rclb
das
rclb
das
rclb
das
rclb
das
rclb
das
rclb
das
rclb
das
rclb
mov
mov
imul
aad
lods
rcrl
int
int3
cmp
outsl
pusha
sti
pop
jl
mov
divl
jmp
loop
xchg
push
cwtl
lret
lods
and
ljmp
das
data16
or
xchg
fidivrl
cmp
jae
cmp
mov
les
scas
flds
dec
icebp
addr16
xchg
call
das
dec
shrb
icebp
xchg
fisubrl
pop
call
inc
sarb
mov
lret
lds
les
sbb
div
adc
and
inc
xchg
inc
filds
mov
addr16
out
pop
iret
add
cmpsb
sub
sub
enter
or
or
mov
lret
fcmovnu
pop
jecxz
nop
cmpsl
ds
hlt
out
pop
cld
inc
in
aaa
add
mov
pusha
mov
cmp
icebp
and
iret
loop
shll
mov
ror
pusha
fadds
cmc
cltd
mov
enter
mov
xor
inc
clc
sti
adc
hlt
jno
or
pop
cmp
pop
mov
jmp
lods
xor
dec
addr16
jecxz
cltd
iret
mov
inc
aam
adc
lcall
addb
dec
xchg
xchg
pop
cmp
inc
testb
mov
or
lcall
roll
not
or
mov
or
icebp
push
dec
mov
inc
jp
aam
xchg
xor
inc
push
mov
mov
js
neg
jns
aad
pop
fldcw
mov
lds
cmp
xchg
dec
insb
jbe
les
dec
dec
lahf
inc
sti
loop
push
add
movsl
sub
outsl
mov
cmp
enter
adc
cmpsl
gs
sbb
nop
push
test
xchg
aad
inc
xor
adc
xor
add
imul
in
test
test
dec
pop
cmpsl
jp
test
dec
aaa
and
pop
enter
sub
mov
ficoms
mov
int3
mov
fists
or
std
std
movsl
lcall
aaa
shll
pop
or
popa
push
push
jns
mov
imul
add
les
enter
loopne
adc
faddl
xchg
push
push
int3
mov
add
push
or
orl
xchg
cmpsb
movsb
pop
fstpl
int
mov
mov
and
idiv
xchg
mov
dec
pop
add
pop
cmpsl
punpckhdq
aam
jge
mov
lcall
rorl
lods
mov
cmpsb
out
aas
movsb
pop
test
out
dec
fildl
inc
pop
insl
shrb
jae
sub
mov
insl
addr16
sbb
dec
loop
fisttpll
mov
test
jns
dec
fdivl
int
mov
fsts
dec
sarb
push
rcl
rcrb
shr
dec
pop
mov
sub
lods
push
mov
outsl
mov
insb
outsb
dec
mov
ret
mov
xchg
test
xor
or
cmp
unpcklps
or
xchg
jns,pn
and
int
mov
aad
mov
notb
pop
test
mov
ret
cmpsl
xchg
imul
sub
and
xchg
jno
jbe
int
mov
mov
push
cmpsb
imull
lods
scas
roll
dec
mov
stc
xor
dec
push
inc
cmpl
stos
shll
adc
cmpsl
jmp
dec
loopne
int
in
xchg
sti
test
sub
lahf
test
xchg
push
aas
insl
aaa
mov
leave
pop
sti
roll
test
arpl
and
mov
inc
daa
lea
aaa
mov
sbb
cmpsb
pushf
jnp
xchg
cmp
adc
mov
popf
ja
mov
sbb
pop
ffreep
mov
aas
xorl
xchg
jae
arpl
movsb
lahf
fmul
into
mov
out
mov
loope
dec
or
cmp
or
or
mov
orl
jae
mov
mov
mov
mov
leave
imul
loopne
fnstsw
ror
pop
sarb
test
dec
sarl
sarl
test
jge
sub
jecxz
ret
test
cs
xlat
xchg
in
in
jecxz
xchg
xchg
test
test
jecxz
xchg
sahf
int3
xlat
mov
inc
pop
jne
add
cmp
test
out
rcll
and
push
mov
fistl
push
enter
adc
fucomp
leave
ss
add
xchg
or
jns
sbb
incb
xchg
scas
push
test
xorl
mov
jno
scas
cmp
in
addr16
push
imul
imul
lret
fs
and
xchg
test
add
in
sbb
rolb
test
out
sbbl
mov
imul
sub
mov
jecxz
adcl
cmp
sbb
sbb
outsl
leave
das
test
clc
mov
rclb
int
test
pusha
pop
sub
dec
cmpsl
or
ficoml
in
pop
cmp
inc
pop
cmpsl
sbb
jg
loopne
dec
cmp
orl
out
rol
sti
insl
adcl
add
les
cmpsl
or
pop
sub
cli
jno
lcall
pop
int3
les
das
cmp
pop
mov
imul
or
das
mov
test
fwait
mov
stos
inc
loope
jecxz
jae
dec
xor
xchg
mov
add
in
adc
rolb
imul
push
imul
rol
std
jno
pop
stc
out
mov
mov
sub
aas
xor
add
mov
adc
mov
in
fdivrl
hlt
es
mov
std
rcr
cs
jl
cmp
fists
pushf
mov
std
xchg
aaa
cmpsl
pxor
rcl
pop
lcall
arpl
inc
mov
jp
repnz
inc
loopne
pop
out
mov
pushl
push
add
pusha
add
xchg
jb
xchg
sub
aad
pop
sbb
push
sbb
mov
sti
rclb
mov
and
add
popa
ret
shll
mov
arpl
pop
push
stos
icebp
arpl
xchg
xchg
push
fidivrs
das
sub
inc
push
mov
xor
cmc
cmp
clc
xchg
shl
cmpsl
push
aas
mov
cmc
lret
sub
xchg
fwait
push
sahf
andl
mov
in
mul
out
outsl
xor
and
dec
rolb
and
jb
pushf
fildll
mov
pop
pushf
outsb
mov
pop
and
push
cmp
push
sub
mov
sub
mov
sbbb
inc
gs
xor
pop
popf
sbb
xor
mov
mov
mov
or
xlat
add
test
ja
jge
fstpt
cmpsl
add
push
scas
add
adc
stos
cs
insb
lock
movsl
xor
cwtl
fsubl
lret
and
cmp
mov
cmp
and
mov
nop
sarb
stc
push
adc
jge
loope
lds
mov
inc
mov
xor
mov
jecxz
mov
mov
stc
adc
xchg
roll
dec
mov
push
pop
out
lcall
aaa
jns
nop
test
add
mov
add
into
ficoms
pop
movsb
pop
adc
mov
push
cld
ljmp
shrl
inc
into
push
lahf
dec
or
jg
bound
push
xchg
roll
test
mov
stc
jmp
bound
insb
pop
mov
mov
add
mov
jmp
ficoms
pop
mov
mov
loopne
mov
andl
pop
out
loopne
mov
adc
idivl
icebp
xchg
jae
outsl
adc
cmpsb
movsb
ds
or
push
mov
jge
sub
jge
inc
iret
ja
add
push
mov
mov
lock
ss
jecxz
int
mov
xor
pop
push
add
aaa
daa
xchg
add
sub
movsb
dec
lcall
or
scas
adc
call
dec
pop
jo
xlat
inc
int
movb
rcll
pop
testb
bnd
jmp
int
outsl
fmuls
sti
sbb
jne
jns
pop
jecxz
andl
sbb
insb
mov
or
push
cmp
cmp
in
int3
cmpsl
push
and
cs
js
addr16
jmp
and
mov
and
or
inc
cwtl
and
and
jo
imul
cmpsl
xor
dec
mov
xorps
stos
lea
mov
add
pop
mov
in
add
pop
jns
sub
sbb
sti
mov
loopne
cli
lcall
dec
popa
adc
jg
push
sbb
sub
mov
adc
data16
test
or
fistl
or
imul
mov
sbb
cs
push
mov
xor
flds
test
divl
sbb
fmull
mov
sub
pop
test
xorb
aaa
mov
and
aas
pop
jecxz
inc
mov
andl
in
and
ret
or
sub
mov
add
mov
aam
sar
inc
scas
xchg
add
sbb
jle
xchg
movl
mov
int3
sub
adc
and
ficompl
adc
cmp
sub
push
nop
pop
dec
aaa
faddl
dec
inc
out
sbb
jbe
and
adc
nop
loopne
sub
pop
mov
adc
sahf
inc
jbe
loopne
roll
je
aad
clc
dec
mov
in
or
pop
mov
mov
mov
cld
cmp
xor
in
mov
pop
push
inc
mov
repz
sub
jno
pop
mov
dec
fbld
push
mov
aas
lds
dec
pusha
and
and
mov
aaa
mov
movsl
jge
scas
xlat
cmp
xor
dec
cltd
es
sub
jb
hlt
lcall
xchg
adc
cltd
js
dec
test
rcr
pop
or
stc
mov
xchg
in
cs
gs
and
scas
lea
cmp
xor
loope
pop
mov
loopne
inc
mov
and
lret
pushf
dec
shll
test
scas
push
sbb
in
das
outsl
jb
arpl
push
sahf
inc
scas
xchg
rcrl
lds
xchg
adc
in
popf
jp
xchg
std
scas
mov
xchg
lret
or
ds
rol
out
sahf
arpl
inc
insl
cmp
dec
lock
ss
shlb
js
sub
loope
mov
xchg
pop
mov
movsb
add
xor
and
incl
mov
outsb
int
mov
xor
sbb
nop
arpl
push
mov
cmp
jecxz
sbb
xchg
and
or
mov
imul
mov
jae
inc
arpl
stos
adc
in
movb
jl
xchg
dec
jle
sub
js
aaa
mov
mov
jp
push
pusha
fsubrs
mov
xchg
iret
jge
push
xchg
jmp
add
sbb
rclb
nop
dec
call
cmp
xor
sbb
pop
addb
pop
fistl
lahf
dec
add
adc
stos
stc
mov
sub
push
and
xchg
push
rclb
mov
pop
cmpsb
inc
xchg
mov
test
int3
test
inc
inc
xchg
loop
pop
jecxz
xchg
pop
add
mov
test
add
lds
rcrl
or
jae
in
inc
mov
and
push
popf
mov
shll
xchg
xor
movsl
lock
test
jnp
jecxz
dec
mov
and
push
xchg
or
push
lahf
outsl
mov
cld
push
cmpsl
adc
or
jmp
clc
and
in
jne
test
adc
cmpsb
aaa
jo
jbe
prefetchwt1
sub
hlt
sub
mov
bound
cmpsb
pop
mov
cmc
cmp
mov
call
ljmp
pop
cmp
cmp
pop
ret
inc
mov
push
cmpb
jg
xchg
mov
test
jp
inc
repnz
aam
addr16
adc
mov
hlt
xchg
or
dec
mov
mov
les
fwait
push
leave
ljmp
cmpsb
dec
mov
jmp
jmp
sbb
pop
pop
dec
pop
sub
sub
push
cltd
pop
jbe
fwait
inc
sbb
inc
insl
ss
xor
cmp
es
pop
xchg
push
vmovupd
cmp
inc
inc
mov
cmpsl
imul
mov
lods
test
sub
pop
mov
cmp
lcall
cmpsl
adc
pop
jbe
js
lds
ljmp
pop
in
mov
mov
jge
cmpsl
cld
sbb
and
jae
lds
cmp
dec
mov
ds
push
lahf
shll
xorb
jbe
pop
mov
xchg
add
pop
scas
mov
test
or
ja,pn
add
pop
sub
int3
sub
jp
jl
cmp
pop
je
aam
lock
sbbl
xchg
insb
mov
loope
jae
enter
push
add
icebp
sbb
jns
push
sub
dec
cmc
pusha
push
cmc
loopne
adcb
movsl
fcom
mov
pusha
mov
jbe
mov
fsts
and
add
or
cs
pop
and
test
arpl
add
outsl
out
movsb
xchg
je,pt
dec
out
out
sti
pop
pushf
sbb
adc
lcall
bound
inc
jl
js
ficoml
es
dec
add
adc
lcall
les
pop
loop
jmp
pop
movsl
lock
cs
nop
push
sahf
mov
sbb
push
fisubrs
mov
cmpsb
jl
xor
cmp
dec
mov
mov
sub
int
inc
sahf
pushf
inc
jecxz
pop
loop
push
add
add
jp
push
mov
add
aaa
xchg
fistps
test
test
inc
movsl
cmp
in
push
jno
enter
xor
and
sbb
ljmp
subl
cld
add
add
cmc
test
in
sub
insb
mov
or
frndint
add
push
sbb
fadds
mov
cltd
inc
leave
repz
sti
xor
sbb
push
scas
mov
dec
mov
int
in
xchg
pushf
xlat
mov
lret
loope
negb
or
cmp
inc
adc
movsb
mov
fsubl
imul
jg
adc
jg
jnp
aad
rclb
int
lahf
ja
dec
jg
arpl
mov
xchg
jmp
or
pusha
lret
jecxz
lock
lods
push
adc
decl
lods
and
xchg
mov
lds
ja
inc
fucom
ret
je
add
test
mov
adc
pop
shll
ret
sbb
pop
das
dec
int3
push
test
sbb
popf
push
sar
lods
xor
movsl
ds
push
xor
xor
test
or
mov
into
add
pop
scas
aam
add
mov
or
aas
xorps
call
ja
push
test
in
ret
sbb
adc
insl
fstpt
lret
orl
inc
mov
push
adc
gs
pop
in
test
rol
test
movsb
dec
adc
iret
gs
push
das
dec
andl
pop
push
sti
ror
sbb
fwait
in
clc
or
xchg
packuswb
mov
or
xchg
sbb
inc
out
mov
lret
divb
in
push
outsb
movsl
adc
popa
pusha
cmp
mov
mov
rcr
fsubs
pop
fsubrs
stos
pop
in
loopne
mov
cld
aad
push
add
inc
outsb
imull
or
lea
stc
add
sbb
adc
xorb
gs
dec
dec
adc
loope
mov
add
fs
sbb
mov
jb
mov
mov
lods
jmp
test
add
inc
mov
add
pushf
mov
adc
outsl
mov
jb
out
lea
xor
jp
jp
push
push
in
movsb
jge
inc
pop
ret
pop
andl
negb
add
mov
mov
jae
int
mov
pushf
fimuls
out
pop
mov
xlat
sub
push
sub
test
roll
shl
jg
arpl
in
jo
inc
mov
iret
sbb
cltd
enter
mov
xchg
les
cmpsb
jns
jg
outsb
gs
jmp
inc
test
mov
fsubrs
popa
pop
nop
movsl
out
inc
jns
aas
mov
or
test
or
es
sbb
pop
adc
out
popa
mov
in
xchg
pop
xchg
adc
jo
adc
pop
add
fs
fisubrl
loope
bound
fidivrl
cmc
inc
jg
pop
cmp
sub
dec
nop
xchg
cmp
xchg
jp
inc
add
ret
jns
jo
aam
mov
mov
fdivl
out
enterw
das
xor
pop
xlat
jle
das
std
pop
jl
sti
scas
push
xchg
mov
loope
movsl
addr16
pop
lods
hlt
leave
cmpsb
jge
push
and
or
enter
adc
sub
or
mov
cltd
xor
add
cmp
sub
fwait
push
movsl
mov
loope
and
cmp
js
sbb
mov
sub
sub
add
movsl
bound
mov
xchg
pop
jecxz
push
repnz
scas
lahf
mov
ja
mov
sub
push
call
inc
test
in
fiadds
cld
sub
jno
jmp
ljmp
add
pop
mov
pushl
inc
push
aaa
mov
dec
sbb
aad
std
jge
xchg
stos
popa
jmp
das
repnz
dec
int3
cmp
xor
ljmp
dec
lcall
inc
test
lcall
pop
xor
or
xor
sbb
mov
aaa
jae
pop
dec
cs
and
pop
test
sbb
das
pop
inc
lret
into
negl
inc
cmpsl
sub
data16
sahf
arpl
adc
mov
das
shrb
fiadds
ja
xchg
jo
push
out
rol
and
pop
inc
cmp
pop
mov
bound
lret
out
arpl
mov
rorb
push
loopne
xchg
xchg
out
fists
mov
decl
sub
pop
mov
fbstp
mov
cmp
push
mov
mov
repz
pop
shlb
xor
lret
mov
push
movsl
inc
jmp
sub
mov
push
push
mov
xor
test
mov
pmuludq
mov
mov
add
and
das
stc
add
mov
sub
aad
shl
ljmp
and
lret
push
stos
jl
rcrb
add
mov
jle
fwait
call
movsb
test
adc
daa
mov
push
pop
jnp
sbb
pop
fnstenv
add
je
push
aad
outsb
into
xor
and
and
or
and
adc
in
lret
movsl
out
mov
sbb
mull
inc
sar
dec
pop
lods
push
mov
cltd
and
pop
mov
pop
js
das
rcll
add
push
push
inc
xchg
and
xor
mov
test
inc
mov
and
pop
mov
das
or
cmp
mov
jne
dec
icebp
daa
pop
adc
sub
roll
repnz
pop
xor
and
mov
addb
jl
in
adc
pop
stos
cmp
pop
add
out
push
loopne
fwait
imul
mov
lcall
pusha
mov
fwait
add
xchg
inc
mov
inc
mov
sub
xor
ret
scas
push
lret
jae
adc
inc
inc
push
jne
fsubs
ret
fidivrs
roll
pop
cmp
xor
mov
enter
scas
daa
jns
inc
add
sub
add
jo
dec
pop
xchg
push
icebp
mov
pop
xor
sbb
scas
inc
and
fdivrs
xor
xchg
insl
or
and
ret
mov
lds
jo
loopne,pn
cmp
ds
lds
mov
sbb
add
inc
lahf
push
jecxz
mov
mov
or
insb
cmpsl
enter
addr16
mov
dec
clc
push
leave
cld
dec
stos
mov
loopne
pop
mov
xlat
inc
xchg
pushl
popf
cwtl
mov
sbb
insb
rcll
ret
test
mov
sbb
jle
dec
or
or
sbb
xlat
pop
jmp
fcmovnu
enter
lahf
push
fs
stc
pop
ficompl
leave
mov
pop
add
mov
sbb
sbb
aas
movsl
xor
inc
enter
aam
fildll
jne
jmp
or
mov
lret
pop
repz
scas
xchg
popa
lret
inc
bnd
gs
ret
sub
mov
cmc
xor
dec
movsb
ficomps
stos
xchg
mov
mov
xchg
sbb
call
dec
das
pop
mov
lret
fs
sub
dec
in
punpckhdq
pusha
or
loopne
pop
loopne
test
shll
mov
ds
inc
pop
dec
xchg
and
jae
add
addl
jp
and
pop
sahf
movsb
sbb
stc
pop
out
xor
push
sub
and
push
mov
fstps
jmp
ds
and
outsl
pop
ud1
sub
shlb
cmp
lret
or
popa
scas
jno
sub
push
loop
int
outsb
adc
sub
and
lret
mov
aam
sar
lds
cwtl
mov
scas
movsl
or
sbb
cmp
pop
cli
das
je
iret
loopne
push
je
js
mov
ds
and
shl
xchg
inc
dec
or
push
jecxz
iret
inc
lret
cmpsl
dec
push
mov
hlt
xor
inc
test
push
shrl
flds
xchg
pop
std
sub
adc
outsl
cmp
jle
outsb
ret
imul
vpunpckhwd
push
lcall
push
fcmovu
add
mov
fstl
daa
cld
jl
mov
loope
pushw
das
push
add
jg
pop
add
in
cmpl
popa
in
add
test
jle
add
adc
stos
sub
je
xlat
arpl
into
xchg
jmp
dec
repz
mov
inc
fcmovbe
sub
inc
lcall
loop
sub
or
xchg
fs
rorl
cmp
push
das
je
je
and
or
bound
adc
mov
outsl
std
sub
aam
loopne
subb
cmp
lahf
stos
hlt
pop
call
mov
fwait
mov
mov
add
int3
push
lea
cmp
mov
add
stos
rclb
repz
mov
mov
xor
sub
xlat
sub
jno
mov
pop
pushf
test
rolb
loope
test
sbb
adc
adc
je
xor
sbb
outsb
jne,pt
or
je
icebp
sbb
push
mov
inc
pushf
lock
icebp
lds
popa
mov
incl
outsl
and
jne
push
stos
dec
in
shlb
imul
fildl
mov
lea
sarl
lahf
inc
stos
sub
in
ja
rol
mov
outsl
movsb
xchg
insl
andb
lds
xchg
add
das
xchg
push
movsb
stos
outsl
faddl
movsb
mov
xor
add
jl
repz
sbb
cmp
inc
btr
add
dec
sbb
ret
mov
je
pop
xchg
pop
aad
aaa
mov
ja
inc
add
scas
cmp
imul
and
push
push
shlb
mov
mov
out
sahf
mov
lds
xchg
nop
shrl
bound
sbbb
pop
mov
pop
leave
xchg
ror
mov
inc
lcall
xchg
repnz
daa
shl
shll
cli
adc
mov
mov
push
aam
pop
xchg
jg
sarb
sub
xor
lahf
test
xchg
jbe
subb
sbb
das
xlat
roll
add
sar
pop
out
push
adc
shl
sahf
push
mov
and
sti
inc
push
andl
and
idivl
stos
jmp
loope
sbb
sub
daa
jp
test
and
push
std
jl
mov
lahf
roll
jecxz
sub
adc
jl
add
mov
ds
push
fldt
cmpsl
pop
dec
mov
push
cltd
in
lods
outsb
pop
cmp
cmp
mov
das
clc
stos
loope
cmp
clc
shr
pushf
sahf
pop
pop
add
adc
sub
repz
push
sbb
lcall
mov
popa
jae
cmpsb
addl
adc
lds
mov
push
sbb
in
pop
das
roll
rolb
ret
jnp
mov
xchg
mov
mov
aaa
pop
test
and
lods
adc
mov
lcall
outsl
test
jle
ldmxcsr
call
adc
jno
mov
mov
xor
inc
jg
mov
xor
je
pop
fnstsw
test
jb
into
mov
lds
pop
lods
fisubs
pop
pop
push
xor
ror
dec
das
addb
jno
mov
mov
lock
sbb
or
int3
bound
push
ljmp
adc
out
sub
mov
hlt
jno
mov
xchg
xchg
inc
shll
fldenv
jno
aam
push
jp
into
ss
add
xchg
jne
cmp
xchg
ds
fcmovnb
mov
fsubrl
adc
pop
or
push
mov
mov
lds
push
dec
xchg
dec
test
nop
ja
and
cltd
icebp
loopne
or
xor
stos
or
pushf
mov
movb
dec
rolb
sbb
xchg
mov
pop
test
daa
mov
cld
lock
add
pop
idivl
sub
test
pushl
les
fsubs
pop
cltd
cld
imul
inc
hlt
ss
add
dec
xchg
int
and
or
out
mov
nop
daa
adc
sbb
add
push
xor
sbb
int
sub
repnz
das
mov
mov
mov
int3
or
ss
fs
or
pushf
inc
push
dec
or
aaa
dec
pushf
sub
loopne
mov
xor
or
jmp
mov
mov
xor
leave
iret
cmp
dec
add
shl
xlat
inc
mov
je
sahf
pop
dec
cmp
lods
outsb
jl
inc
cltd
sti
jno
push
shrb
push
mov
push
lcall
mov
lcall
das
push
cltd
repnz
sbb
or
mov
adc
jo
das
xchg
and
mov
bound
add
lahf
push
loop
imul
xchg
div
xchg
inc
int
sub
sub
jmp
loope
mov
xchg
add
loopne
mov
loopne
aas
mov
or
test
jb
add
jmp
inc
add
cmc
cwtl
pop
addb
mov
push
inc
mov
bound
sbb
cltd
pop
push
inc
movsl
aad
lock
mov
fcompl
push
lods
loopne
inc
loop
pop
mov
pop
rorl
xchg
mov
lahf
add
xor
push
xchg
fsts
push
shl
sub
and
fnstsw
gs
clc
xor
aas
cwtl
ds
daa
mov
jmp
aad
pop
fsubl
aas
xor
push
repz
pop
arpl
xchg
pop
ljmp
and
add
repz
psubsb
cmp
mov
add
push
jl
jmp
xchg
into
push
roll
and
popa
jno
mov
fcompl
jne
fwait
push
ror
lods
jns
push
lea
add
sbb
sti
cltd
and
je
stos
insb
insb
rorl
out
mov
test
xlat
xchg
adc
mov
icebp
gs
push
hlt
mov
hlt
shl
or
arpl
pop
test
ja
sub
sub
jmp
mov
xor
cmc
jns
mov
imul
cltd
ret
push
test
mov
xchg
sub
enter
aas
cli
xchg
fs
mov
cmp
or
xchg
mov
mov
hlt
jno
pop
andb
dec
sub
mov
pop
sub
pusha
mov
or
ret
enter
scas
cmc
arpl
and
add
add
mov
inc
outsl
fimull
xchg
sub
jecxz
jle
mov
cmp
int
lock
in
jl
adc
daa
mov
fmull
add
mov
lods
js
mov
xlat
add
mov
aas
cltd
jbe
rcll
lods
into
xchg
jle
sbb
sarl
or
fmuls
or
mov
xchg
or
mov
in
ds
xchg
loopne
int3
cmpsb
rcll
mov
test
ret
addb
iret
inc
jge
mov
mov
lahf
lcall
ds
hlt
xchg
xor
sbb
jno
sarl
and
lods
out
sbb
sub
loope
mov
sbb
test
addr16
dec
add
mov
ret
in
jmp
nop
test
aaa
idiv
xchg
pop
or
pop
pmaxsw
cmpsl
lahf
imul
loope
popf
mov
ja
or
cmp
stos
adc
or
cs
and
mov
out
test
xchg
into
xchg
mov
cmp
icebp
dec
add
cmp
aam
jecxz
xor
or
cmp
adc
or
subl
mov
xchg
jnp
xchg
out
in
cmpsl
sbb
std
sub
loop
in
dec
mov
xor
sub
mov
add
xchg
push
testb
dec
pop
or
sbb
lea
lock
xrelease
addl
mov
add
sar
dec
out
std
add
adcl
push
jecxz
cmpsb
pop
pop
jo
fmul
mov
cmp
dec
push
rol
test
cld
push
int
or
or
mov
inc
in
jmp
rolb
or
xchg
out
in
pushf
imul
sbb
mov
orl
dec
mov
sub
cs
or
in
mov
test
testb
daa
cmp
adc
test
out
pop
push
sub
adc
insl
add
lcall
adc
or
adcl
cmpsb
addr16
pop
pop
test
push
mov
pop
std
dec
push
rcrb
push
cmp
iret
in
popa
or
cmp
rclb
or
cs
jmp
fldl
cmc
or
pop
out
mov
sub
mov
loope
mov
xor
aad
pushf
cmp
or
or
cs
pop
in
jmp
mov
cwtl
xchg
xor
or
xchg
out
add
sub
mov
xor
fcomps
movl
dec
xor
es
xchg
adcl
cmp
scas
pop
sti
out
pop
cmpsl
xchg
imul
sub
mov
loope
mov
xor
test
cmp
xor
adc
or
cs
rclb
sub
xor
sysret
jno
dec
int
mov
ljmp
xchg
xchg
inc
in
cmp
aaa
out
dec
or
jo,pn
xchg
push
mov
aad
aas
pop
push
pop
jne
or
dec
fimull
push
test
inc
push
mov
imul
ret
or
cmp
adc
or
cs
xlat
mov
ss
test
jg
stc
xchg
into
or
pop
inc
out
xchg
cmpsl
ljmp
pop
sub
mov
xor
pushf
xor
inc
mov
imul
in
jmp
inc
test
testb
or
cmpsl
jg
mov
cltd
loope
mov
xor
in
mov
sub
sar
dec
jae
aaa
addl
push
jecxz
xchg
cmpsb
jns
daa
pop
data16
mov
pop
sbb
test
loop
in
and
cmp
adc
or
cs
nop
in
jmp
outsb
test
mov
mov
dec
push
shlb
add
ja
inc
loop
in
xchg
or
cmp
pop
adc
or
cs
xlat
out
push
andb
int
mov
add
dec
out
shlb
push
or
and
inc
push
or
cmp
inc
adc
or
cs
xlat
sub
shr
pop
ss
out
test
ret
pop
and
inc
cmpsl
cs
sub
mov
loope
mov
xor
or
cmp
cmc
adc
or
data16
add
xchg
jmp
das
push
pop
mov
sahf
test
imulb
mov
jmp
dec
loopne
lds
aam
push
in
xchg
or
cmp
movsl
adc
or
cs
jmp
mov
push
xchg
insl
mov
xchg
test
loop
in
clc
or
cmp
arpl
or
cs
ss
jmp
pusha
test
xor
xchg
push
or
out
dec
cmpsl
jge
aam
sub
mov
loope
mov
xor
mov
cmpsl
insl
andl
pop
or
cmpsl
mov
cmp
enter
test
dec
or
cmpsl
test
xchg
mov
loope
mov
adcl
mov
addr16
dec
rcrl
dec
or
movsb
push
lahf
orl
mov
jmp
mov
xchg
rorb
xchg
test
loop
in
aas
or
cmp
sub
or
cs
xlat
loope
inc
jmp
mov
stos
xchg
jp
es
jecxz
iret
cmpsl
test
cmp
jo
sub
in
testb
sbb
lahf
fidivrl
fs
and
adc
test
shlb
dec
push
xor
data16
mov
or
test
ss
insl
aas
ss
arpl
pop
mov
add
test
mov
shrb
mov
adc
ljmp
xchg
dec
imul
add
dec
inc
push
pop
pop
mov
jae
pushf
das
sbb
pop
cld
mov
mov
rol
lahf
into
lods
dec
out
push
in
gs
fisttpl
insb
cmpsl
inc
out
shlb
jbe
sub
mov
lds
insb
jae
mov
xor
lcall
xchg
pop
push
adc
scas
addl
daa
jmp
sarl
in
popf
mov
jns
lds
or
push
das
jecxz
ljmp
inc
sub
scas
ja
call
inc
test
test
int
lock
lea
mov
lods
pushf
lahf
mov
push
je
push
jg
ja
popa
test
pop
xor
adc
stos
jbe
icebp
dec
pop
subl
and
add
and
stc
cwtl
aas
cmpsl
in
test
subb
cmp
sbb
std
fisubrl
or
vhsubpd
sub
xor
mov
add
or
test
jg
or
insb
or
js
test
jne
sbb
fildll
cltd
push
outsl
imul
mov
lret
xchg
mov
es
xchg
and
push
rcl
lret
fbstp
sbbb
xchg
sub
add
xor
inc
pushf
mov
in
rol
in
popl
mov
cwtl
test
sub
sbb
add
movsl
addr16
pop
mov
cmp
xchg
jg
inc
gs
fadd
xor
or
pop
lods
test
movsb
pop
mov
lds
fidivrs
das
outsl
pusha
cmpsb
xor
sbb
jb
or
std
or
sti
shlb
movsb
cmpl
insb
cmpsb
add
jbe
pop
dec
jmp
ret
insl
movsl
stos
rolb
ss
lds
shll
std
jnp
pop
rcrl
xor
jmp
sbb
fs
mov
jge
bound
inc
push
out
pushf
jns
cmp
ds
pop
pop
cmp
mov
mov
fiaddl
push
jg
idivb
jmp
aam
rep
daa
cmp
add
loopne
outsl
jg
cmpsl
pop
jb
out
or
add
icebp
pop
xor
fnstcw
sub
ret
cmpsl
das
ss
mov
aaa
pop
jge
sarb
mov
pop
push
xorb
lods
call
mov
loopne
pop
adc
sub
or
pop
dec
scas
into
add
fmull
adc
jno
mov
adc
cld
call
aad
xor
outsb
ja
nop
sub
cmpsb
cmpsl
iret
stos
sbb
jbe,pt
test
lahf
mov
sub
add
add
cmc
sbb
mov
cmp
mov
pushl
push
jg
nop
xor
pop
pop
loopne
cmpsl
pop
xor
inc
scas
push
mov
ja
in
mov
cld
push
popa
push
sub
mov
adc
inc
dec
push
pusha
push
cmpsl
lcall
stc
test
sub
cltd
xchg
and
lds
out
stos
mov
mov
movsb
jne
sub
rolb
jno
mov
adc
leave
push
cltd
in
mov
adc
or
test
or
inc
arpl
lds
movsb
popf
jecxz
pop
pushf
das
xchg
out
inc
mov
shlb
loop
dec
pop
jg
ficomps
adc
pop
inc
in
out
iret
test
adc
xor
outsl
lahf
add
in
mov
push
cmp
roll
daa
cmp
and
cmpsb
decb
stos
mov
mov
sub
cmp
aaa
repnz
in
in
scas
test
cmpl
mov
and
cs
xlat
dec
in
jmp
cmp
inc
xchg
push
or
pop
jnp
mov
sub
mov
xor
test
mov
test
and
fnstcw
addl
cwtl
push
sbbl
pop
mov
mov
sbb
xchg
loop
shl
sub
xor
or
jl,pn
adc
mov
mov
pop
or
mov
mov
loope
mov
xor
test
add
and
out
adc
or
sub
lea
push
jno
pop
jecxz
jmp
jne
pop
mov
into
xchg
dec
and
out
cwtl
push
and
mov
inc
cmp
pop
adc
or
repz
repz
jmp
aas
test
neg
xchg
cmp
cmp
jbe
ret
rol
test
out
sbb
aad
aaa
in
mov
xor
data16
or
mov
jmp
dec
test
dec
idiv
xchg
xor
jle
fucomp
push
cmpsl
jbe
sti
mov
adc
loope
jle
sub
test
or
cs
pop
push
and
arpl
in
int
mov
sub
jnp
lret
test
movsl
insl
cli
mov
sti
pop
cmc
shl
dec
cltd
mov
orl
cmpsb
push
sti
orl
xor
cltd
pop
sahf
out
fisubs
sub
loop
in
clc
or
cmp
out
mov
push
push
cmp
pop
in
jmp
dec
test
orb
pop
mov
mov
test
imul
insl
mov
test
pop
push
rcll
dec
mov
cmp
jbe
xchg
sbbl
or
pop
cltd
int
mov
or
test
push
pop
loop
in
mov
aaa
pop
adc
or
subl
ja
add
or
cmpsl
jno
xor
sub
mov
xor
pushf
dec
insl
dec
mov
sub
adc
push
cwtl
andl
push
shlb
in
pop
mov
cld
imul
test
cmpsl
subl
clc
test
rcrl
inc
mov
and
enter
out
jecxz
in
mov
mov
mov
stos
inc
dec
xchg
mov
push
repnz
in
push
or
cmp
popa
adc
or
andl
inc
jecxz
cmpsb
out
pop
xchg
pop
cmc
int
mov
out
loope
mov
out
adc
in
lods
or
cmp
sbb
or
cs
xlat
xchg
in
jmp
mov
ds
mov
out
dec
cwtl
xlat
or
or
test
pop
xchg
ror
dec
cmpsl
mov
adcl
dec
push
test
sbb
pop
test
adc
popf
xor
aam
aad
out
fsubs
test
pop
loopne
movsb
and
mov
andl
into
jecxz
mov
push
pop
xchg
pop
push
outsl
mov
push
inc
dec
sbb
push
test
and
adc
and
adc
or
cs
xlat
or
mov
out
test
or
cmpsl
cmpsl
imul
xchg
mov
loope
mov
cmp
pushf
int3
insl
cmc
mov
inc
pop
outsb
rolb
in
jmp
cmpsl
test
fisttps
xchg
pop
repnz
ret
cmpsl
scas
imul
aaa
mov
loope
mov
or
into
xorl
adc
shrb
xlat
cmp
fucompp
push
ss
test
movsb
notb
pop
push
ret
dec
lods
shlb
push
out
jmp
push
loop
dec
insl
inc
mov
cmpsl
pop
test
mov
subl
test
neg
xchg
xchg
inc
dec
cmpl
scas
dec
rorb
jno
add
cmp
sti
mov
mov
subl
push
aad
mov
push
pop
add
int
mov
adc
test
out
cli
push
loop,pn
in
pop
or
cmp
inc
adc
pop
dec
xorb
push
in
adcl
ja
inc
pop
pusha
pop
adc
mov
push
aaa
dec
cmp
dec
push
shlb
test
out
mov
in
fisttpll
cmp
fists
or
cs
jmp
or
insl
mov
cmp
ljmp
loop
in
pop
or
cmp
add
push
xor
cs
out
ss
mov
scas
or
pop
out
stc
cmpsl
dec
imul
sbb
ret
xor
cmp
or
adc
or
cs
xlat
call
ss
leave
testb
inc
out
fwait
cmpsl
enter
test
out
rcll
daa
in
pop
or
add
push
jmp
xor
int
icebp
and
test
xchg
mulb
jge
gs
dec
imul
mov
xchg
mov
sub
jge
ja
xchg
out
loopne
sub
mov
adc
sub
icebp
loop
cwtl
add
sahf
out
lods
addb
jmp
fdivp
xchg
ljmp
aam
stos
dec
lods
dec
aam
ficompl
and
cmp
fidivrl
and
out
push
rorl
cld
jle,pn
js
out
dec
push
cmpsl
out
shrl
test
sub
pop
adc
imul
sub
pop
xor
aaa
out
adc
or
test
mov
jecxz
and
nop
inc
jne
or
mov
out
push
ja
mov
xor
iret
sbb
mov
test
mov
add
push
aaa
sbb
xorl
add
cmpsl
sub
mov
or
push
or
imul
loop
push
xlat
imul
mov
adc
lods
mov
loope
mov
cmp
cs
xlat
clc
in
jmp
sbb
out
cmp
dec
hlt
shlb
mov
loop
in
fimuls
cmp
loop
mov
adc
fldl
pop
mov
out
fiaddl
mov
dec
push
inc
in
test
dec
push
aam
loope
xorl
push
rcll
xorb
push
into
push
xorb
xor
mov
lcall
cmp
push
mov
incb
mov
fildl
mov
sub
sbb
loopne
mov
sbb
adc
mov
lods
inc
insl
mov
mov
adc
sub
adc
sub
inc
jb
xchg
movsl
cmp
pop
cmpsb
pop
jmp
jecxz
gs
filds
pushf
cmp
ds
cmp
ds
cmp
nop
cmp
mov
rcrl
pop
mov
aam
xlat
pop
dec
xchg
ljmp
cmp
pop
rcrb
fwait
andl
jmp
jae
in
cmp
add
dec
xor
sub
or
add
daa
and
cltd
movsl
in
fdivrl
jae
in
stos
cld
inc
mov
bound
xor
jle
test
lahf
mov
pop
dec
mov
sub
test
or
adc
xchg
and
popf
mov
mov
pop
pop
and
mov
addr16
into
sti
pop
push
das
pop
push
aaa
lea
cmp
andb
pop
lods
sub
addr16
mov
rclb
xchg
add
in
js
scas
fcmovb
rclb
add
stc
ss
std
push
or
or
inc
filds
lret
cmp
sahf
add
shrb
rcrb
add
call
cmovb
imul
sbb
imul
add
stc
es
insl
imul
imul
jno
add
adc
imul
push
jne
or
adc
outsb
push
ja
or
pop
stc
push
jns
adc
sbb
imul
jge
sbb
sbb
nop
xor
mov
stc
imul
in
mov
je
fimuls
out
mov
or
jle
push
or
push
or
push
or
jb
or
sbb
outsl
pusha
jl
or
push
or
js
adc
and
jae
inc
lcall
inc
lcall
dec
lcall
dec
lcall
dec
lcall
dec
lcall
cmp
sbb
pop
lds
push
mov
shlb
test
call
addl
in
addr16
out
imul
lea
call
mov
call
mov
call
xchg
inc
adc
icebp
shlb
xchg
inc
push
call
xchg
inc
adc
cmc
shlb
xchg
inc
adc
not
jns
lahf
inc
sbb
stc
sarb
popf
inc
and
mov
adc
mov
test
inc
mov
xchg
inc
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
nop
rclb
testb
xchg
rolb
xchg
xor
or
in
negb
or
lcall
lock
lcall
fldt
lea
imul
jno
imul
cmp
movsb
mov
sub
mov
out
imul
cmp
pop
or
and
test
sbb
lcall
jb
xor
sbb
and
scas
lock
and
xchg
lock
mov
gs
mov
popa
or
jo
or
jo
or
pop
inc
and
stc
and
lahf
inc
cltd
mov
jo
call
sub
out
adc
or
inc
in
adc
imulb
jbe
xchg
arpl
adc
pop
or
sti
lahf
inc
out
mov
jl
out
jae
ja
stos
lret
sub
or
sub
cmp
sub
cmp
sub
int
sbb
gs
movsl
fsubr
dec
xchg
in
push
xchg
lea
xchg
push
xchg
in
push
out
mov
in
pop
xchg
in
pop
xchg
lea
mov
xlat
jmp
jge
xlat
ljmp
lea
fsubrl
lahf
fidivl
mov
mov
xlat
sub
dec
xchg
jae
cltd
or
cmp
nop
in
push
sbb
sub
dec
pushf
dec
mov
dec
lcall
dec
cwtl
push
sbb
sub
xchg
dec
fisubrs
lds
xor
cs
dec
xchg
mov
dec
subl
jmp
sub
dec
out
lea
mov
sbb
in
cs
push
dec
jecxz
mov
mov
sbb
dec
mov
mov
sbb
dec
mov
scas
sub
std
push
sbb
stos
sub
dec
cli
push
sbb
test
sub
btc
imul
daa
adc
inc
and
mov
inc
and
mov
push
xchg
jge
sub
sbb
sub
mov
mov
cltd
push
lods
in
mov
cmp
mov
cmp
mov
cmp
mov
pop
xlat
cmp
pop
xchg
cmp
pop
add
shrb
mov
add
mov
data16
or
lcall
insl
lcall
outsl
lcall
jl
lds
movsw
mov
les
notb
int3
add
mov
int3
or
popf
pushf
outsb
data16
or
jge
paddsw
xchg
ffreep
sbb
and
sbb
mov
push
in
xchg
das
lret
push
adcb
aam
pop
pop
je
cmp
mov
sbbl
add
and
xor
and
lods
faddl
enter
stos
pushf
dec
stc
fistl
imul
fs
mov
inc
xchg
inc
mov
orb
push
inc
lea
fsubl
test
mov
fidivl
mov
xchg
jne
and
fwait
icebp
popf
mov
cmpb
aaa
xchg
mov
xlat
pop
je
in
mov
call
pop
push
mov
mov
lret
fcmovnbe
mov
leave
fcmovnu
mov
aaa
or
shlb
js
out
cmc
pop
xchg
sub
ljmp
sti
out
aaa
nop
mov
mov
fnsave
mov
sub
scas
mov
or
sti
or
clc
pop
cmpsb
xchg
test
dec
mov
dec
lock
mov
lret
mov
adc
inc
inc
sbb
inc
mov
bound
jbe
xor
and
sub
subl
sahf
dec
je
fisubrs
in
mov
or
scas
test
xchg
test
pop
xchg
sub
pop
push
mov
jecxz
pop
mov
scas
inc
pop
mov
or
sub
in
xor
jo
unpckhps
pop
lret
sub
xchg
dec
sti
out
clc
mov
sti
in
mov
lahf
mov
clc
dec
lahf
mov
popf
sti
jecxz
sbbb
nop
icebp
jb
scas
jge
loopne
jns
xchg
sbbl
xchg
lea
iret
inc
lds
and
bound
roll
push
es
and
inc
cwtl
inc
push
es
and
inc
xchg
inc
pop
lds
iret
inc
xchg
inc
pop
es
and
inc
xchg
inc
pop
shll
inc
nop
inc
pop
fbld
cmc
inc
mov
frstor
testl
and
inc
mov
fldenv
repz
mov
xlat
and
inc
xchg
aad
incl
stos
test
and
mov
adc
inc
add
cmpsl
inc
add
test
adc
pop
aam
in
xorl
push
rclb
add
jge
xlat
shr
adc
shr
adc
aam
adc
mov
jae
in
push
xchg
in
sbb
sbb
fsubr
sbb
mov
in
push
xchg
in
pusha
xchg
in
bound
paddsw
jge
xlat
out
xchg
in
push
xlat
ljmp
xlat
in
in
insb
xchg
in
outsb
xchg
in
jo
xchg
jge
xlat
repnz
jb
xchg
jge
xlat
hlt
in
je
xchg
jge
xlat
imul
jbe
nop
jge
xlat
clc
in
js
sahf
jge
xlat
cli
in
jg
cltd
jge
xlat
in
inc
xchg
jge
xlat
sub
xlat
sub
xchg
jge
xlat
test
inc
xchg
jge
xlat
xchg
dec
xchg
jge
xlat
mov
dec
xchg
jge
xlat
mov
dec
xchg
jge
xlat
in
push
xchg
jge
xlat
xchg
in
push
xchg
jge
xlat
xchg
in
push
xchg
jge
xlat
xchg
in
push
xchg
jge
xlat
xchg
in
pop
xchg
jge
xlat
cltd
in
add
repnz
adcl
xchg
in
push
xchg
in
or
cli
in
or
cld
in
or
lcall
xchg
in
adc
sub
xchg
jge
xlat
test
adc
loop
jae
xchg
push
xchg
jge
xlat
mov
sbb
mov
sbb
mov
sbb
ljmp
xchg
jge
xlat
nop
in
pusha
xchg
jge
xlat
xchg
in
bound
xchg
in
fs
jge
xlat
xchg
in
xchg
jge
xlat
cwtl
in
push
xlat
lcall
xlat
pushf
in
insb
xchg
jge
xlat
sahf
in
outsb
xchg
jge
xlat
mov
jge
xlat
mov
jge
mov
xor
inc
in
pop
sbb
cmpsl
cltd
movsl
sbb
sbb
sbb
loopne
pop
mov
dec
cmc
lahf
pop
inc
jge
lods
and
scas
testl
and
xor
daa
iret
popf
dec
inc
xchg
roll
lahf
lret
xlat
mov
push
xchg
jne
xlat
mov
jge
xlat
inc
in
push
xchg
jge
xlat
dec
in
push
xchg
jge
mov
sub
in
fnstsw
inc
insl
cmp
lods
std
xchg
cmc
mov
lahf
rcrl
add
add
push
add
cs
xchg
mov
out
clc
sbb
repnz
je
mov
and
in
push
cmpsb
cmpsl
xchg
imul
sub
xlat
loope
mov
pop
test
addl
icebp
mov
sbbb
in
mov
or
cmp
jecxz
ljmp
add
or
sub
rcrl
shll
cmpsl
mov
push
xor
jmp
mov
xor
test
cmp
loopew
cmp
int3
pop
aas
or
addl
or
scas
test
test
outsb
pop
iret
out
or
shl
xchg
movsb
or
ret
out
adc
cmpsb
imul
mov
loope
mov
enter
xchg
test
sbb
mov
cwtl
mov
add
mov
mov
mov
mov
mov
push
push
dec
fidivs
push
push
fadds
cmpsb
sysret
and
int
mov
jne
or
pop
jae
inc
cli
dec
xchg
mov
andl
pushf
jecxz
and
mov
out
sub
xchg
cs
ret
out
mov
rcr
outsl
fcoms
pop
cmp
cmp
movsb
sti
lcall
idivb
stc
or
cmpsl
adc
call
mov
sub
add
and
pop
sub
adc
imul
std
jle
popa
adc
call
shrb
add
mov
jmp
xchg
sbb
mov
stos
mov
mov
ja
pop
pop
adc
popa
cltd
inc
cmpsb
stos
pop
mov
in
xchg
shl
cmpsl
gs
lea
mov
xor
cmpsl
lds
xchg
aam
hlt
jg
dec
sub
and
cmpsl
js
int
mov
inc
into
test
mov
jg
inc
xor
repz
lcall
cmp
sub
push
add
jg
ss
push
xchg
add
pop
stos
test
add
push
das
sub
jecxz
fstl
shrb
arpl
sub
adc
mov
cmpsb
xlat
insb
pop
out
inc
in
inc
arpl
es
sti
push
std
adc
je
out
fs
subl
mov
rcrb
sub
push
pushf
icebp
hlt
lcall
cmpsb
ja
gs
rol
mov
mov
adc
xchg
stc
lahf
adc
test
sub
div
push
jg
push
cmp
mov
push
enter
repz
stc
test
imul
mov
or
add
jo
push
mov
test
cs
fadd
jne
leave
andb
mov
cltd
xchg
out
insl
sub
inc
lret
sbb
shlb
clc
push
sahf
push
xor
sub
aaa
gs
daa
jne
jp
push
lret
aad
in
mov
cs
aaa
call
and
cmp
rol
jb
sar
dec
adc
jns
loopne
pop
js
aas
mov
sub
add
call
mov
jl
sub
mov
test
inc
push
loopne
test
adc
pop
movsb
loop
inc
insl
mov
xor
sub
sub
lods
jge
in
and
mov
test
imul
das
test
jb
mov
pop
adc
das
jle
lods
testb
fimuls
mov
pusha
push
xchg
fneni(8087
pop
pop
movsl
test
jmp
jno
dec
leave
cmp
xorb
jo
push
mov
jae
push
mov
fists
add
les
shll
add
push
mov
jbe
clc
pop
push
mov
lds
repz
sub
in
lods
cmp
jecxz
ret
loop
xchg
mov
sub
clc
and
add
jbe
cmc
and
in
dec
mov
cmc
mov
add
add
fcomip
fsts
mulb
in
pop
mov
lret
js
sbb
das
push
cmc
mov
stos
pushf
lds
push
inc
lcall
insl
mov
mov
shr
inc
add
push
add
xchg
iret
out
sahf
inc
push
cmc
cmpsl
repz
je
test
and
std
into
inc
push
out
in
shll
int3
sbb
stos
xchg
test
mov
inc
jmp
xlat
xor
ret
int
push
bound
inc
loopne
sbb
jecxz,pn
lds
push
testl
dec
in
call
cltd
icebp
aas
inc
int3
pop
ds
pop
je
xchg
mov
jl
cmpsb
cld
out
clc
mov
lret
add
jbe
adc
shrl
pop
jns
jg
clc
jmp
jno
xchg
mov
insl
pop
jnp
ffree
out
stc
scas
jge
inc
add
xchg
scas
out
fisubl
cmpl
sbbb
pushf
jg
paddb
sti
xor
arpl
das
nop
divb
nop
cmp
mov
push
pop
add
lcall
shlb
dec
sahf
mov
jmp
mov
jecxz
pop
and
cmp
ss
mov
add
and
sub
add
fistpll
cs
jmp
jg
xor
pusha
or
mov
jp
dec
das
adc
add
shrb
and
add
sbb
lds
jne
fcomps
sbb
inc
enter
es
jno
xchg
pextrw
mov
pop
sub
in
arpl
lods
push
test
push
sbb
insb
push
xor
movsb
sahf
fidivrl
shll
adc
pop
jno
stos
mov
mov
adc
out
js
mov
outsb
pop
jo
jg
or
or
sbb
mov
test
mov
ret
inc
lds
or
andl
scas
mov
in
test
shlb
outsl
enter
and
xor
movsb
push
inc
out
lret
jp
add
stos
lahf
xchg
std
dec
les
mov
bound
imul
in
jmp
jge
mov
sbb
jge,pn
jle
add
inc
xorl
aam
xchg
popf
xchg
mov
jl
imul
cs
xchg
mov
outsl
lahf
test
sub
shrl
aam
inc
sti
jmp
xor
cmp
dec
mov
aaa
lods
pop
aas
std
movsb
and
ss
jmp
mov
push
mov
push
jns
lods
aam
je
xchg
iret
inc
mov
or
lahf
cmp
arpl
imul
xchg
push
call
shrl
pop
imulb
mov
push
mov
outsl
nop
jmp
xor
cmp
in
out
jmp
fbstp
add
insl
sub
mov
data16
jnp
imul
in
outsb
add
or
pop
xchg
xchg
loope
pop
and
mulb
rcrl
dec
cmp
mov
test
idivb
daa
je
dec
mov
add
ljmp
in
jno
xor
int
negb
cmpsb
in
xchg
or
hlt
or
xlat
xor
mov
lahf
mov
mov
mov
mov
lods
adcl
hlt
sub
mov
mov
sbb
sbb
jae
xchg
mov
jno
cmp
popa
aam
pop
fwait
addr16
jg
or
outsb
stos
shlb
roll
aam
loop
cmc
dec
add
add
scas
xor
dec
mov
outsl
mov
popf
adc
lods
outsb
add
gs
fs
insb
xchg
lea
fdivr
mov
rcll
out
cmp
xor
or
divl
mov
dec
cmpsl
shl
test
in
jp
mov
add
in
loope
repnz
cmc
outsb
bound
lea
xchg
bound
mov
mov
and
aas
and
in
mov
imul
mov
xor
mov
pop
mov
add
insl
adc
xchg
outsb
mov
add
out
loope
std
sbb
mov
add
iret
dec
test
out
jecxz
jg
sarl
xor
test
lods
outsb
jnp
cmp
shrl
jno
push
movsl
inc
jmp
ss
dec
sahf
loopne
xor
cmpsl
or
mov
mov
xor
push
mov
adc
imull
cs
xchg
mov
push
cmp
xor
sub
add
aaa
sti
adc
or
out
into
adc
sbb
sbb
addl
hlt
adc
sbb
fs
mov
in
out
and
arpl
outsb
ss
add
ret
adc
pop
mov
mov
cs
xchg
xchg
shl
dec
icebp
push
jmp
popf
shrl
jmp
arpl
fbstp
loopne
sub
sbb
stos
cs
xlat
adc
mov
andl
aam
and
cmpsl
pop
imul
outsb
test
rclb
ret
rcl
insb
or
outsb
mov
xchg
aas
rcr
or
scas
sbb
mov
ret
in
sub
repz
and
mov
cli
inc
dec
mov
out
push
aas
adc
adc
add
int
mov
addr16
cwtl
add
dec
repnz
std
mov
xchg
sub
shll
out
xchg
ficoms
out
mov
mov
or
xor
addr16
aam
xor
dec
outsl
les
and
push
divl
add
mov
loope
movsb
or
arpl
adc
aaa
idiv
push
jae
add
in
mov
call
mov
jmp
pusha
mov
mov
or
shrl
mov
jae
fsubr
aaa
out
sbb
xchg
loope
mov
add
mov
dec
shrl
xchg
loope
sub
mov
call
inc
aam
push
pop
add
xchg
adcl
xchg
imul
pop
sbb
jnp
decl
xor
mov
xorl
mov
mov
inc
repnz
insl
outsb
je
or
aad
dec
aam
sbb
ret
cmp
cs
data16
lahf
mov
mov
ss
pop
dec
xchg
outsb
mov
sub
adc
insl
jns
xchg
in
xchg
push
add
notl
add
and
mov
aas
mov
xchg
scas
mov
popf
cmp
inc
lret
and
in
mov
mov
fwait
push
pop
repnz
lret
loopne
dec
js,pn
popa
push
lods
jg
xchg
imul
fcompl
xchg
arpl
add
das
cmc
fiaddl
push
lret
inc
mov
lds
mov
shlb
add
dec
mov
lret
xor
push
xchg
dec
enter
enter
and
call
iret
sbb
mov
lret
in
add
addr16
sub
mov
dec
fdivr
ret
cmc
push
pop
mov
xchg
add
fisubrs
cmp
and
mov
les
push
fucom
jns
test
push
mov
jae
fcmovnbe
repnz
notl
xor
shrb
ss
xchg
jns
jge
aad
mov
in
jle
dec
mov
xor
in
sahf
gs
mov
jge
sub
lea
aad
adc
cmp
enter
sarl
jge
push
orl
pop
mov
scas
xchg
mov
les
adc
add
jmp
and
pop
loopne
add
repnz
dec
mov
or
cmp
add
pushf
movsb
dec
inc
dec
xor
pop
aam
cld
xchg
pop
stos
inc
hlt
shll
xchg
incl
movsb
in
push
push
rorl
push
das
mov
inc
jecxz
shl
movsb
cmc
out
xchg
add
mov
insb
jno
jl
xchg
lret
addr16
pop
cltd
sbb
fcomps
jle
loopne
mov
cmp
mov
jo
stos
pop
fbstp
fisubl
sbb
push
adc
xchg
mov
sahf
lock
pop
out
and
mov
or
leave
loopne
orl
pop
add
leave
movsl
xor
test
cmp
addr16
test
scas
dec
imul
push
xchg
cmc
sbb
mov
adc
push
enter
cs
sub
std
pop
jmp
push
scas
hlt
mov
mov
jmp
pop
cmp
daa
pop
push
fbld
fdiv
xlat
push
cmp
or
test
aam
test
push
add
sbb
cmp
fcomps
imul
xchg
ja
pop
mov
pop
add
sbb
dec
icebp
pop
shl
enter
xchg
cmp
cmp
jns
nop
and
rorb
les
ds
inc
xor
cmc
rclb
adc
in
jle
sbb
mov
fnstcw
in
push
mov
out
sti
rcrl
testl
test
xchg
sub
cmp
pop
dec
mov
daa
stos
inc
cmp
lcall
push
mov
das
lods
dec
loopne
and
call
xlat
mov
movsb
xchg
icebp
or
out
sub
xor
mov
mov
push
test
xchg
rep
mov
adc
pop
mov
ret
jp
outsb
mov
or
bnd
dec
push
lods
cmp
or
lock
pop
mov
sub
cmp
in
daa
pusha
pusha
push
pushf
pop
pop
mov
pushf
aaa
and
inc
add
jecxz
mull
sub
outsl
out
rolb
xorl
mov
out
loop
stos
mov
lods
xchg
lcall
movsl
pushf
inc
daa
fistpl
adc
ret
lret
pop
rol
js
sbb
inc
lret
and
xchg
std
or
jne
lods
jbe
arpl
sub
scas
and
jge
jle
shrb
and
push
mov
sbb
jg
insl
loopne
ffree
jmp
mov
xor
jmp
out
sarb
lock
push
popa
pop
in
jecxz
repz
jns
enter
pop
and
jg
inc
push
cmp
jl
loop
and
adc
jno
in
cld
leave
sub
add
xor
xor
ljmp
pop
dec
int3
dec
and
int
orb
out
repnz
std
cltd
push
mulb
daa
lods
sub
dec
jne
and
mov
aam
js
out
std
xor
xchg
and
stc
sarb
stos
cmp
pop
xchg
loopnew
mov
incl
int
mov
leave
enter
outsb
test
push
and
mov
iret
arpl
sbb
aaa
or
imul
outsl
arpl
lods
jecxz
pop
mov
out
shlb
sti
mov
fcompl
xchg
push
or
rorl
es
inc
ror
jp
mov
dec
in
pop
int
into
and
test
fcomip
cmp
mov
inc
popf
cmpl
arpl
push
loopne
or
mov
cmp
inc
add
les
xchg
pop
and
movsl
or
rep
add
sub
clc
or
add
dec
cwtl
xchg
adc
xlat
sbb
outsb
std
push
out
and
cs
pop
adc
ljmp
mov
enter
inc
mov
jge
xor
repz
add
out
mulb
aaa
test
in
cmp
mov
mov
lods
insl
dec
adc
sbb
lea
pop
pop
mov
push
sub
jno
pop
dec
adc
sbb
mov
ds
xor
lock
aam
fmulp
stos
nop
mov
adc
mov
mov
cli
gs
push
imul
addr16
xchg
pop
cmp
ja
or
ja
xadd
repz
mov
push
sti
pop
push
stos
xor
mov
stos
push
subl
and
fwait
xchg
fistpll
push
xor
fisubs
loope
cmp
pop
add
mov
inc
xor
adc
jbe
aad
sub
jmp
in
mov
pop
ficompl
int
dec
out
mov
icebp
mov
cs
mov
jne
shl
push
sbb
dec
rorl
js
jnp
jmp
dec
in
pop
add
rcrl
xor
dec
mov
test
out
inc
in
jge
jg
sar
xchg
icebp
jmp
mov
adc
adc
xchg
stos
leave
fld
sbb
into
jl
mov
or
popa
pop
mov
stc
dec
mov
add
pop
inc
sub
ss
sub
pop
mov
addl
scas
lret
mov
imul
sbb
mov
pop
push
shl
pop
iret
mov
sbb
sub
lods
pop
mov
orb
adc
mov
insb
cmpl
cmpsb
lods
imul
ja
or
or
xchg
inc
ds
movsb
push
nop
cmp
xchg
mov
dec
mov
mov
push
aam
lea
lds
push
ret
xchg
cwtl
popa
outsl
imul
cmp
sub
xchg
arpl
cmp
stos
imul
or
les
test
push
loop
les
dec
scas
shl
dec
daa
mov
movsl
loope
outsb
jp
mov
pop
dec
testl
adc
mov
testl
mov
adc
inc
cwtl
lds
loopne
mov
pop
mov
jle
inc
cmc
imul
xchg
cmovo
and
sahf
dec
rcrl
out
cmpsl
cmpsb
jb
jp
out
scas
inc
lods
sbb
psllw
or
push
cmp
shlb
lahf
fldl2t
jns
jno
mov
jl
shrl
repz
pop
pop
or
fdivrl
pop
adc
jl
dec
data16
cltd
daa
pushf
mov
movsl
fbstp
pop
mov
cmc
xchg
clc
cmpsb
cmp
or
adc
jne
sub
out
sbb
pop
xor
lret
iret
and
daa
pop
mov
jge
iret
or
jmp
cmpsb
push
mov
inc
in
jge
sbb
out
jo
out
or
adc
pop
imul
add
sbb
mov
cmpsb
shr
mov
add
jecxz
inc
push
leave
pop
xor
dec
jge
sub
adc
add
fisubl
mov
enter
ljmp
out
pushf
sti
out
in
hlt
int3
xorb
imul
stos
into
arpl
xor
jae
push
out
and
sub
push
in
in
xchg
cmp
push
div
adc
mov
dec
adc
mov
xchg
test
pushl
cmpsb
mov
adc
dec
addl
nop
push
loop
xchg
lret
cwtl
rcrl
jnp
leave
xor
dec
xchg
pop
adc
aam
sbb
leave
adc
in
call
and
jnp
lahf
push
imul
rol
dec
add
mov
not
pop
arpl
adc
pop
mov
pushf
dec
xor
into
inc
mov
arpl
inc
push
xlat
in
lods
out
jae
sbb
or
add
out
int3
dec
push
jne
and
fstl
pop
out
int
nop
test
outsl
jl
xor
and
dec
pop
pop
adc
cmp
sbbl
filds
jmp
in
mov
cmpsb
xor
xor
out
or
xlat
mov
dec
jmp
cmp
or
mov
or
xchg
push
loope
push
sub
cmpsl
out
xchg
xor
stc
das
xor
or
add
dec
pop
out
ds
ja
dec
test
lds
add
inc
mov
adc
push
inc
rcrb
fisttpll
or
shlb
cmc
jle
shll
xor
in
xor
stos
sbb
sub
ljmp
cmpsl
adc
das
mov
cmp
push
inc
jmp
jae
rcrl
movsl
iret
std
mov
pop
push
dec
push
jmp
bound
sub
pop
jne
in
aas
inc
lods
into
cmpsb
jmp
mov
sub
pop
fstps
mov
iret
addr16
pop
test
sbb
in
cmpsl
dec
mov
mov
cwtl
sbb
and
mov
xchg
inc
fimuls
gs
mov
jmp
cmp
cmp
bound
mov
std
popf
cs
dec
bound
int
pop
nop
dec
mov
popa
dec
cwtl
xorl
pop
icebp
jg
inc
inc
jo
or
hlt
pop
daa
adc
icebp
inc
xchg
repz
pop
cmpsb
test
fisttps
jge
mov
xor
xchg
test
xlat
ret
xor
add
data16
into
push
sub
mov
xor
add
adc
inc
addr16
xor
aaa
shll
sbb
ret
out
cmp
mov
vpsrlw
dec
outsl
push
sbb
into
xchg
inc
xchg
sub
push
popa
dec
cmc
pop
imul
setge
sub
push
jne
lahf
fimuls
fdivrp
and
mov
test
decl
push
shl
aam
cmp
jg
mov
pop
xor
cmp
adc
dec
xchg
mov
xor
cmp
xchg
arpl
mov
add
mov
cltd
dec
fnstcw
lahf
popf
cltd
xor
push
xor
push
push
std
into
mov
mov
pop
ficoms
mov
xchg
cmpsl
or
insl
cltd
orb
and
and
jnp
fxch
and
stc
rol
inc
sub
jge
imul
inc
aad
and
mov
pushf
in
and
int3
dec
and
pop
or
mov
jg
push
adc
cmp
in
cmp
and
andl
mov
movzbl
dec
sub
jne
mov
add
mov
mov
movl
insl
loopne
fwait
sub
subl
and
fimuls
popf
mov
xchg
sub
sbb
movsl
add
mov
push
rcll
push
dec
and
js
sub
mov
jae
and
ss
pop
fdivr
xchg
pop
dec
scas
mov
jg
dec
out
sbb
xchg
insl
nop
push
dec
xchg
lods
ja
push
inc
outsl
sbb
xchg
out
pop
mov
pop
test
adc
aad
loop
test
push
subl
gs
jmp
cmp
rolb
aas
std
fwait
sub
dec
in
aaa
push
adc
stos
jne
les
push
and
xchg
mov
cmp
and
jmp
dec
push
mov
xchg
inc
mov
adc
cli
shr
arpl
nop
or
mov
bound
pusha
adc
fs
add
adc
data16
push
mov
scas
dec
pop
lret
inc
jecxz
popf
loop
std
mov
fcompl
in
outsb
loope
rcl
pop
popf
cmp
cmpsb
or
mov
and
in
in
rcll
cmp
cmc
les
mov
cmp
mov
push
fcompl
inc
pop
add
jl
pusha
fdivs
out
addr16
mov
orb
sbb
lea
adc
movsl
cmp
call
mov
ja
push
das
mov
mov
jecxz
dec
mov
sub
or
shl
add
mov
pop
cwtl
fists
dec
jb
jmp
mov
cmpsb
into
push
loop
movsl
xlat
aas
or
insb
mov
es
leave
mov
dec
out
mov
fucomp
cltd
push
lcall
xor
lds
or
sub
xchg
in
lods
push
imul
push
in
iret
mov
add
mov
cwtl
dec
jne
or
sti
inc
mov
ret
aam
mov
fnstenv
fisttps
mov
outsl
rcrl
sbb
imul
jae
add
mov
sbb
cmpsl
pop
pop
ds
or
popa
inc
dec
shll
vmovaps
inc
dec
xlat
or
pop
cmp
jno
cmp
repnz
cmc
test
jp
sbb
pop
pop
fs
xchg
out
in
lahf
stos
jge
push
cmpsb
sarb
jb
ljmp
int3
xor
scas
imul
out
outsl
lret
shl
dec
or
xchg
push
in
push
ret
dec
push
xchg
scas
and
fdivl
icebp
lods
mov
sbb
or
jne
int3
movsb
mov
mov
ss
rcrl
rol
dec
imul
bound
dec
add
iret
jle
shl
jbe
lret
lods
enter
push
push
push
aas
xor
ja
inc
and
dec
in
in
mov
mov
sarb
out
int3
sarb
sbb
lea
add
cmp
xchg
mov
aas
out
xorl
and
scas
and
adc
popa
xorb
dec
lds
loope
lock
mov
xchg
pop
push
and
scas
insb
aam
setle
adc
or
nop
add
icebp
outsb
js
sub
ret
inc
cmp
sbb
fcomps
push
mov
mov
dec
sub
pusha
mov
shrb
mov
adc
push
jns
iret
aam
rcr
xchg
ds
dec
fwait
leave
push
loopne
inc
cmc
mov
xor
mov
fs
int
adcl
cmpsb
clc
mov
push
out
sub
sbb
mov
scas
stc
push
push
add
xchg
xor
mov
out
lahf
dec
rcrb
std
fwait
subl
out
dec
jae
xor
fstpl
dec
mov
hlt
and
jne
dec
inc
jmp
mov
add
pop
cs
xlat
push
sbb
xchg
pmaxsw
pop
xor
cld
sub
rorl
dec
jno
cwtl
insl
fcmovnu
cmpsl
push
jmp
or
cltd
fmul
test
insb
jns
xchg
pop
ret
inc
mov
into
lcall
inc
dec
sbb
pop
jecxz
test
dec
inc
leave
push
mov
or
repz
mov
and
aas
adcl
pop
mov
add
shrb
sbb
shll
sbb
or
sbb
inc
dec
popa
jae
daa
mov
add
das
xor
push
cmp
mov
in
sub
out
stos
fwait
cwtl
movsb
dec
cmp
mov
lea
movsb
dec
cs
mov
jmp
or
cmp
aad
cmpsl
cli
xor
ficoms
in
and
jecxz
jb
xchg
mov
jecxz
fisttpll
jnp
roll
xor
add
aam
cmp
repnz
and
jns
in
lahf
loopne
js
mov
pusha
or
out
dec
arpl
cmpsb
sbb
push
and
sbb
jns
lods
popa
testb
xchg
adcb
bound
adcb
bound
int3
movsl
jae
pop
flds
ret
in
stos
mov
mov
jecxz
loopne
sub
mov
ljmp
orl
aas
test
cmp
loope
mov
lret
pop
out
dec
sahf
movsl
inc
popf
scas
cmp
mov
mov
dec
sub
add
bound
mov
arpl
popa
cltd
pushf
nop
add
xor
popa
mov
cmp
and
jns
aas
movsl
inc
arpl
mov
gs
pop
repnz
scas
xchg
shl
adc
sub
adc
mov
leave
out
lods
inc
or
xor
cwtl
sub
mov
rcrb
mov
mov
leave
movsb
dec
jne
inc
stos
sbb
ret
in
xchg
movsl
popa
add
jmp
roll
push
xchg
imul
test
ret
mov
and
xor
jp
das
test
jae
pop
sahf
add
mov
loop
es
mov
mov
xchg
push
xbegin
dec
ds
cli
mov
push
pop
call
popa
out
icebp
pop
test
scas
add
or
in
lcall
xor
clc
je
jno
xor
nop
mov
mov
rcll
int
cmp
sbb
rcl
test
fdivrp
push
mov
xchg
cmp
movsb
add
scas
addl
sbb
push
pcmpeqb
and
add
imul
std
adc
mov
mov
xchg
fbstp
pop
in
inc
and
or
push
sbb
ret
sbb
stos
mov
push
sub
mov
pop
popa
or
inc
sub
arpl
cmp
xchg
leave
pusha
imul
mov
jecxz
push
sbb
pop
mov
aaa
pop
aam
ret
mov
enter
sbbl
std
xchg
enter
xor
mov
ret
and
inc
xchg
mov
and
stos
outsl
sbb
stos
xchg
jg
jb
push
push
xor
xchg
aas
icebp
in
jge
lahf
add
subb
xchg
aas
stc
mov
dec
ret
xor
adcl
scas
and
mov
aam
adc
push
or
xchg
imul
mov
pop
faddl
or
movsb
fwait
xchg
hlt
lret
and
cs
or
insb
adc
hlt
shll
jg
mov
int3
xor
and
insb
or
adc
std
mov
nop
inc
fldl
repz
xchg
cs
push
fstp
rorb
outsl
fimull
jmp
ja
hlt
sub
jo
dec
xchg
jne
adcl
mov
adc
test
inc
jmp
mov
adc
imul
adc
lret
ljmp
lds
inc
ret
popa
clc
mov
xchg
xchg
cmc
out
mov
push
dec
pop
mov
xchg
xchg
jmp
pop
in
jno
mov
adc
pop
in
and
mov
xlat
xchg
dec
fcom
int
sbb
decl
cmpsb
sub
dec
pop
cmp
sub
mov
add
testl
scas
iret
ss
movsl
xorb
icebp
pop
scas
pop
xchg
dec
in
mov
inc
stc
orb
test
jno
out
pop
std
push
cmp
and
add
mov
enter
mov
cmp
mov
sbb
push
lock
lock
and
pop
pop
jns
ficoms
inc
xchg
cmovg
fisttpll
jno
pop
divl
movsl
outsl
scas
mov
popf
or
lret
nop
mov
jmp
in
or
leave
jle
arpl
inc
hlt
imul
dec
pop
ds
jb
mov
insb
movsl
inc
dec
add
push
roll
scas
mov
lds
sbb
mov
lret
cmp
fbld
adc
stos
movsl
out
xchg
mov
pop
add
add
or
aam
sub
mov
pop
enter
pushf
pushf
repz
iret
inc
ja
repnz
mov
xchg
mov
mov
std
pop
ror
loope,pn
adc
pop
mov
rolb
insb
lahf
test
cld
add
inc
pop
fnsave
enter
dec
rclb
inc
mov
es
pusha
xchg
cld
xlat
ret
fstpt
add
mov
adc
push
sar
xrelease
enter
and
mov
jp
in
push
sbb
movb
int
mov
sahf
insl
fld
xchg
loop
daa
in
imul
cmc
sbb
xlat
fsubrl
and
mov
cmpb
pop
jno
inc
dec
hlt
mov
pop
mov
insl
add
cmp
push
pushf
lods
out
movaps
mul
and
and
out
jnp
pop
adc
pop
xchg
aad
xorl
test
enter
inc
xchg
into
jp
xchg
das
test
cmc
ja
dec
xchg
leave
push
lret
sbb
add
jnp
cmpsb
add
std
dec
andl
push
je
mov
xor
repz
in
mov
mov
and
mov
gs
scas
out
jmp
push
pushf
mov
addl
scas
mov
fisubl
test
cmp
out
ret
push
mov
push
inc
lret
imul
shrl
pop
cmpsl
shlb
gs
cmp
mov
cmpsb
push
nop
cmp
add
sarb
lods
int
fadds
insl
mov
sub
ljmp
imul
aad
dec
cwtl
adc
loopne
pop
mov
adc
xchg
not
lods
add
adc
pop
xchg
push
int
push
lods
xor
push
in
bound
sub
cli
mov
int
lods
jb
xchg
test
iret
cmp
into
push
test
stos
pop
out
es
jecxz
adc
loop
pop
lods
jle
shrl
in
scas
out
jle
mov
in
mov
xchg
incb
cmpsb
pushf
call
pushf
sub
subl
push
xchg
push
adc
jg
ret
mov
icebp
dec
mov
dec
pushf
cmpb
sarb
mov
jp
out
jne
add
adc
dec
imul
mov
int3
arpl
ja
test
fucomp
push
jmp
out
lds
xor
ret
stos
push
outsl
out
ret
leave
idiv
jle
xor
inc
mov
cwtl
out
add
or
mov
int
mov
xchg
std
out
add
add
in
insl
leave
loope
daa
mov
into
iret
pushl
ljmp
mov
out
push
jle
cmp
sbbl
std
rcrb
sbb
pop
out
int
loopne
fisubrs
stos
mov
lods
and
test
cs
sbb
js
insl
jb
lods
pushf
jns
xchg
out
sub
and
jle
mov
lea
cli
test
scas
jge
aam
sbb
lock
cwtl
call
sub
out
push
rclb
sub
and
xchg
mov
rcl
adc
xlat
mov
sahf
out
pop
jno
orb
mov
push
pushf
add
ficoms
inc
jl
xchg
sub
cmp
icebp
mov
mov
jbe
fs
adc
es
add
ds
pop
hlt
testl
neg
mov
xchg
loope
add
lahf
decb
stos
and
sti
inc
movsb
dec
mov
js
cmp
cmp
add
pop
in
repz
out
outsb
cmp
scas
loop
cmpsb
test
fcomps
mov
mov
mov
sbb
and
lods
iret
fwait
popa
movsb
push
pop
sub
rcrb
sbb
fistpl
test
daa
iret
mov
jl
in
mov
mov
aad
sub
jmp
mov
adc
mov
mov
jp
sbb
ja
adc
cmpl
mov
loopne
popa
pop
mov
and
and
inc
fwait
movsl
lods
xor
or
adc
test
in
xchg
xchg
ss
ficoms
push
inc
sti
mov
iret
mov
ret
insb
mov
inc
or
idivb
push
aad
aad
fimuls
loopne
test
aas
lds
outsl
stos
or
and
and
arpl
ja
cli
aad
mov
mov
pop
xchg
pop
mov
and
or
pop
roll
cmp
inc
outsb
mov
in
adc
xchg
outsl
idivl
add
inc
leave
push
add
repz
cmc
mov
stos
subl
inc
xchg
xor
or
sub
nop
add
mov
lds
stos
or
repnz
bnd
aas
dec
dec
jecxz
cmc
push
roll
loopne
push
xorb
inc
insb
addr16
xorb
lds
xchg
fs
test
stos
dec
hlt
jmp
cltd
adcb
adc
ficompl
bound
repz
inc
notl
and
out
mov
scas
mov
je
das
shrb
sbb
mov
pushf
dec
aas
sub
out
and
sbb
xchg
dec
mov
loop
adcb
pusha
mov
xchg
cld
fistps
mov
jg
dec
xor
ljmp
je
lret
jmp
subl
cmpsl
repnz
fcoms
pusha
pushf
xlat
mov
fldenv
jns
js
mov
dec
push
cmp
popf
ja
or
add
push
imul
imulb
mov
out
mov
mov
jecxz
sub
loopne
out
lahf
xchg
pop
and
packsswb
mov
pop
jne
pop
push
ljmp
jl
inc
cmp
ja
lods
mov
mov
mov
add
test
xor
push
sbb
mov
fnstenv
and
xchg
loope
adcl
inc
cli
pop
cmpsb
int
xchg
mov
fadds
dec
popa
xchg
ret
mov
test
jecxz
loope
enter
lret
xchg
test
sub
cmp
jg
cmp
xchg
fildll
dec
xor
xor
cmp
and
mov
dec
and
sbb
iret
adc
cmpsb
cmp
movsb
mov
cmp
add
cld
fs
fldl
sbb
or
stos
xor
lock
push
mov
rcll
out
nop
jge
mov
sub
xchg
add
adc
cmp
pop
leave
lcall
in
fincstp
adc
mov
shll
xlat
xchg
xor
test
out
bound
fistps
jno
mov
loop
add
in
addb
mov
aam
loope
test
scas
outsl
sub
jge
mov
xor
xlat
stos
jbe
sub
sub
bnd
in
ret
mov
cwtl
enter
rorl
orl
jne
test
adc
xchg
mov
inc
push
sub
xor
stos
mov
mov
ret
es
cmpsl
pop
sbb
adc
push
pop
jmp
fldl
daa
mov
fs
mov
aaa
jp
test
pop
mov
add
insb
mov
out
push
pop
cmp
xor
lds
push
xor
notl
gs
fldt
sbb
cmp
mov
decb
sub
testl
cld
mov
and
mov
cmp
lock
mov
das
cmc
add
push
fwait
sbb
and
pop
pusha
mov
pop
cmc
lods
jecxz
pushf
dec
bnd
dec
inc
mov
mov
inc
mov
sub
pop
lahf
mov
lods
mov
adc
mov
xchg
loop
jo
pop
push
xchg
fbstp
add
xchg
sub
sarb
sub
in
xchg
jne
sarl
or
push
mov
jo
sbb
add
loopne
and
lret
or
inc
ret
inc
add
sbb
icebp
pop
jl
mov
cmc
inc
sub
pop
out
mov
hlt
dec
jne
cmp
in
jns
imul
enter
mov
push
sbb
fsubrl
mov
iret
ja
xor
sub
testl
fs
int3
fistpll
jne
repz
jg
mov
mov
push
lods
xchg
repz
int3
jge
lfs
xlat
fcoml
cs
test
out
in
fdivrs
mov
rorl
mov
ljmp
adc
jp
loop
xor
adc
cld
shrb
mov
sub
sub
dec
addl
cwtl
inc
ljmpw
test
ret
sub
adc
int
iret
outsb
sub
movntps
repz
jb
aaa
and
or
rorl
in
scas
loopne
sbb
xor
jge
imul
ror
xor
sbbl
stos
clc
lea
sub
or
fsub
stc
mov
fisttps
mov
test
mov
xchg
shll
ds
pop
mov
movsl
sbb
mov
mov
adc
movsb
dec
jb
cld
std
mov
mov
cmpsl
pop
cwtl
adc
in
les
add
aaa
jbe
das
je
or
mov
dec
xor
movl
repnz
pop
sbb
lahf
cwtl
jmp
out
cmp
mov
pop
or
sbb
dec
out
ret
subl
xorb
nop
dec
cld
xchg
lahf
rol
mov
lods
sub
xchg
imul
and
mov
ss
out
fidivl
movsl
sub
lcall
rcr
pop
loopne
out
imul
sbb
scas
fnstenv
sbb
pop
mov
imul
fwait
loope
rcll
sbb
cld
roll
out
into
pop
and
in
pop
push
js
pop
out
sub
fcom
in
fcmovbe
dec
popa
push
dec
add
mov
imul
mov
sbb
data16
dec
pop
lss
inc
ljmp
imul
mov
movd
sbb
sub
or
dec
sub
or
and
loopne
jecxz
cltd
pop
xor
inc
inc
inc
lods
mov
movsb
or
and
pop
fcoml
repnz
stos
aas
mov
pop
pop
xor
jmp
mov
push
pop
sub
lahf
push
sub
push
rorl
xchg
scas
int3
push
sbb
push
xor
dec
outsb
rcrl
dec
sub
adc
adc
sub
xchg
int3
cmpsl
inc
or
xor
lea
add
mov
addr16
jmp
data16
lcall
out
xor
mov
std
pop
movsb
call
jl
ret
fists
mov
inc
js
daa
int3
repz
and
cmp
mov
push
mov
cltd
bnd
sub
mov
push
inc
pop
icebp
loop
loopne
scas
mov
aad
push
nop
sub
cmc
cwtl
mov
adc
mov
mov
jae
lcall
jns
xchg
xorl
sbb
inc
arpl
adc
xchg
mov
mov
sbb
add
xor
xchg
mov
je
nop
xchg
cli
fsubs
fwait
iret
aaa
icebp
cwtl
cmc
add
dec
in
lahf
js
adc
lods
jmp
std
pop
or
ret
aaa
xchg
popa
xor
stos
sub
rcl
aad
pop
lret
jecxz
ds
inc
sbb
mov
push
sbb
jmp
xchg
mov
fidivs
je
cmc
pushf
mov
mov
outsl
cmp
xchg
fistps
cmp
jecxz
std
imul
adc
add
cmp
xor
xchg
mov
outsl
inc
cs
mov
dec
or
xchg
lret
push
sti
xor
sbbb
xchg
inc
push
inc
jmp
mov
movsb
fs
les
adc
js
and
fbld
popa
push
lahf
or
sbb
add
cld
lahf
stos
add
lea
fcmove
jmp
shrb
xchg
xor
and
push
dec
mov
add
adcl
test
pop
lods
mov
jg
add
in
xchg
mov
int3
test
cs
jg
fisttpll
sahf
pop
xchg
xchg
xchg
sbb
insl
mov
pop
in
scas
xchg
fildl
mov
les
scas
dec
test
test
addl
lock
xor
pop
xorb
inc
pusha
push
repz
mov
mov
clc
or
ljmp
out
dec
into
mov
nop
sub
xchg
ja
jbe
xorl
mov
rolb
pop
test
add
lahf
and
lcall
mov
sbb
pop
or
mov
sub
and
pop
mov
test
bound
std
xlat
bound
sbb
shll
or
inc
repz
popf
enter
gs
or
lea
fdivs
xchg
call
stos
cmp
push
push
popa
mov
sub
xchg
sub
xor
shr
xor
test
insl
iret
mov
mov
mov
xor
int
sbb
insl
stos
dec
jno
rclb
and
and
sub
das
rclb
jne
adc
test
push
aaa
mov
push
add
xchg
sbb
mov
mov
icebp
pop
jge
out
outsl
in
mov
das
xchg
repz
lahf
xlat
push
mov
lods
xchg
sbb
fs
sub
gs
icebp
pushf
rorb
jl
ja
lods
dec
xlat
add
push
sbbb
jae
out
xor
sub
sbb
rclb
sub
push
inc
in
in
test
jb
and
jo
cld
decb
xchg
in
daa
cmp
sub
pop
out
or
ds
cmp
in
out
iret
push
lea
rcrl
outsb
adc
sub
and
rcr
rorb
sub
orb
jb
lcall
inc
hlt
je
xor
lret
pop
nop
lods
or
int
add
push
cmpsl
les
cmpsl
jo
imul
sbb
jg
lahf
scas
es
jb
push
add
sbb
adc
fildl
inc
ret
dec
push
dec
jbe
xor
popa
scas
mov
push
mov
push
push
scas
movsl
mov
ret
pop
cs
pop
xor
xor
popa
stc
lret
repz
sub
cmpsl
mov
into
fsts
xchg
inc
outsl
dec
cmp
add
ret
jae
xor
push
inc
mov
enter
lods
sub
imul
outsl
pop
adc
out
sub
push
sti
in
xorb
jmp
sbb
sub
xchg
or
notl
loope
daa
fdivl
push
mov
add
mov
sub
ss
adc
xchg
inc
in
cld
push
xor
stc
pop
pushf
mov
imul
mov
fs
xchg
ja
test
mov
push
mov
mov
adc
loope
xchg
cmpl
ret
cwtl
out
imull
mov
push
mov
mov
pop
xchg
or
pop
mov
lods
cmp
scas
fldcw
int3
adc
popa
rorb
push
add
ss
sub
mov
ss
mov
jg
jno
call
jl
stos
jg
std
push
cmp
cmp
dec
lcall
addr16
out
lods
lods
xchg
inc
or
xchg
xchg
jo
stos
mov
les
mov
adc
push
mov
fnstenv
pop
rorl
inc
mov
push
dec
dec
stos
or
cmp
imul
xchg
jecxz
or
cwtl
fildl
mov
cmp
xchg
loopne
lahf
push
sti
sub
inc
sub
inc
mov
sub
or
sahf
xchg
imul
ja
jp
movsb
push
and
imul
cmp
addr16
mov
sub
dec
dec
dec
jmpw
add
nop
fdivs
repnz
cld
dec
test
sbb
adc
xor
out
and
add
iret
inc
push
or
iret
sub
fadd
ret
add
in
rorl
inc
sti
aad
out
dec
icebp
pop
outsl
sahf
mov
sbb
mov
or
inc
outsb
in
std
bound
subb
fistl
xor
mov
jno
cli
lods
stos
sahf
lret
fsts
imul
bound
loop
jecxz
dec
inc
and
stc
push
push
pushf
push
add
dec
movsb
sbbb
push
xchg
ficompl
xchg
fildl
jbe
rcrb
and
jl
leave
lds
popa
cmp
rcrl
or
ss
lcall
dec
aad
shrd
in
or
mov
sub
inc
mov
fnstcw
inc
mov
imul
xchg
inc
inc
mov
xchg
or
lods
andl
scas
cmpsb
loopne
shlb
adc
jbe
add
dec
adc
push
aad
and
and
xor
and
adc
inc
scas
jmp
pop
jae
test
insl
or
icebp
or
jns
fldl
fstpt
cli
pop
mov
rcrb
xchg
pop
sbb
addr16
lea
xchg
shlb
aaa
test
roll
test
push
fucomi
sub
pushf
in
jns
inc
push
push
adc
push
rorb
mov
or
pushf
leave
loope
lret
js
inc
mov
add
add
in
mov
mov
pop
in
lds
fs
out
jecxz
cld
movsl
or
xchg
sub
loope
outsl
lds
pop
xchg
out
fmuls
dec
jecxz
mov
clc
push
out
popa
sbb
and
leave
adc
pusha
stos
movsl
xor
mov
jle
icebp
int3
inc
pop
add
stc
lret
push
ror
pop
mov
sbb
xchg
loope
lock
fadds
cmp
xchg
leave
sbb
aam
out
mov
cwtl
ficoml
mov
in
jae
xchg
pop
jl
adc
inc
mov
sub
and
mov
cltd
mov
lods
mov
insl
ja
std
outsb
std
inc
enter
sub
out
lods
xchg
mov
pop
aam
or
in
dec
xchg
or
mov
mov
lcall
jmp
jle
scas
inc
int
cmp
in
into
jg
inc
cmp
and
clc
or
push
mov
pop
les
xchg
out
xchg
mov
mov
jb
cli
andb
inc
inc
jl
mov
outsb
adc
push
mov
pop
psrlq
add
push
push
pop
cmp
xchg
mov
jmp
xchg
lods
mov
add
sub
mov
outsl
outsb
mov
data16
mov
int3
insl
inc
ljmp
call
out
std
mov
pop
rolb
pop
dec
mov
enter
mov
inc
mov
push
xchg
out
sbb
imul
add
loopne
push
sbb
pushf
xor
insb
fwait
dec
push
inc
stos
mov
jns
in
dec
lock
nop
pop
jg
dec
stc
xor
mov
lcall
dec
dec
mov
xchg
xchg
repz
stos
or
in
xchg
int
jge
xor
les
inc
pusha
mov
out
das
lds
sbb
mov
lret
stos
mov
incl
repnz
movsl
cltd
outsb
mov
pop
clc
mov
and
das
mov
ds
jbe
rclb
lret
movsl
pop
jmp
xor
mov
push
jns
add
std
shrb
daa
popf
xchg
subb
mov
test
xchg
sub
test
dec
or
fisubl
pop
dec
gs
arpl
popf
xor
lods
out
aad
jmp
lock
dec
mov
aas
pusha
push
adc
das
mov
scas
loop
adc
in
fstpl
fs
loope
xchg
popw
sahf
in
xchg
test
test
icebp
dec
or
or
jecxz
pop
outsl
cmp
add
sbb
gs
subb
dec
ljmp
bound
pop
in
jge
lahf
dec
or
clc
mov
mov
insl
xchg
and
fnstenv
jbe
jge
and
nop
add
fucomp
or
ds
lods
aas
out
mov
pop
mov
jo
mov
cmpsb
adc
cli
dec
hlt
shlb
clc
paddw
idiv
mov
repz
in
push
mov
insb
dec
xor
fisubrs
cwtl
mov
pop
js
outsb
aad
data16
test
dec
xor
inc
mov
test
jb
fsts
lods
pop
or
jp
pop
in
fdivs
jno
and
in
out
jmp
mov
push
cltd
jle
sub
aaa
mov
ljmp
sbb
rol
cltd
cmp
or
hlt
sub
xchg
lds
sbb
fisubrs
push
pop
mov
dec
adc
in
fcmovu
sub
dec
iret
shrl
lea
sarb
dec
sub
leave
adc
out
les
iret
inc
loope
mov
dec
lret
xor
in
or
popf
sahf
cmp
pop
mov
adc
in
pop
pop
jnp
ret
pop
pushf
xchg
mov
test
lcall
shrl
fs
pop
sub
loop
adc
and
int
add
jo
jmp
cwtl
cmp
or
lcall
or
das
mov
dec
sub
out
pushf
loop
xlat
mov
out
push
ja
jl
ffreep
fsubrl
push
pop
rcrl
stos
add
xchg
iret
dec
push
lds
xchg
xor
gs
or
ds
mov
cmc
mov
negb
jg
mov
int3
mov
stos
and
mov
scas
jle
lea
pop
or
movb
mov
mov
jg
sub
loope
mov
push
nop
inc
adc
pop
inc
popf
stos
jbe
pop
cmpsl
out
xchg
sbb
fbstp
sbb
or
push
mov
sti
movsl
mov
xor
dec
shrl
or
insl
ds
cmpsl
movsl
cmp
mov
or
pop
sub
sub
lea
dec
sbb
int
inc
iret
jl
mov
xchg
push
or
test
cmp
sub
aad
pop
mov
pushf
add
jecxz
sti
mov
inc
lea
xor
movsl
repz
inc
push
push
add
cwtl
and
adc
rcrl
pop
loope
cmc
add
push
inc
in
pushf
adc
mov
xchg
or
jmp
pushf
roll
cli
pop
popf
xchg
push
mov
test
stos
add
roll
dec
push
arpl
hlt
ljmp
int3
xor
test
mov
nop
add
adc
std
repz
or
xor
out
xchg
xor
add
dec
lods
and
mov
adc
test
pop
mov
bswap
xor
sbb
mov
andps
sti
shl
dec
push
jb
jnp
dec
sbb
pop
in
lds
xchg
sub
daa
addr16
adc
ret
jns
decl
mov
push
dec
aaa
into
and
mov
shll
rolb
lock
mov
pop
fisubrs
jo
fisttps
imul
lcall
roll
insb
clc
gs
cmpsl
mov
adcl
aam
jmp
iret
add
push
out
stc
and
or
ret
in
push
daa
fiaddl
gs
fidivl
dec
adc
dec
jo
and
int
adcb
jecxz
in
lods
xor
arpl
mov
hlt
ret
out
mov
xchg
sub
or
add
clc
aas
cmc
push
jmp
clc
inc
in
dec
dec
cmp
or
jae
jo
dec
push
pop
movsl
dec
clc
ffreep
add
lds
mov
and
cs
pop
inc
pusha
fcomps
xchg
test
mov
fwait
cld
subb
cmpsb
cmc
divl
xlat
cmp
add
adc
fisubrl
fwait
xor
xchg
iret
cwtl
jp
add
lock
mov
mov
je
mov
sub
fstp
fwait
sahf
jge
cmp
fwait
sub
enter
leave
fsts
inc
std
stos
icebp
ret
xchg
jae
fcompl
sub
or
mov
cmp
push
lods
scas
inc
xchg
call
add
jl
ret
pop
loope
and
sub
clc
int
js
pop
lcall
mov
push
push
lret
mov
jmp
mov
lea
push
enter
fildl
xchg
les
faddl
push
daa
adc
mov
arpl
adc
repnz
jmp
mov
int3
sub
jg,pn
addb
loope
cmp
lret
add
fsubr
movsl
std
sub
pop
push
sbb
fisubrl
sbbl
push
push
mov
movsl
inc
sub
ret
cmp
inc
jnp
dec
jne
cmc
pop
mov
sahf
dec
das
inc
pop
imul
arpl
adc
add
dec
jno
jp
xchg
pusha
cmc
mov
jbe
or
leave
sub
dec
lahf
in
push
mov
xlat
xor
dec
xor
daa
loopne
ljmp
xchg
push
test
scas
fninit
jmp
or
adc
loope
sbbb
fldcw
ja
jg
cmpsb
dec
jo
ljmp
xlat
dec
and
adc
jg
lock
dec
dec
test
pop
or
daa
jo
lea
push
mov
outsl
dec
pop
or
mov
repz
jno
sub
jne
mov
jbe
add
push
insb
filds
test
sub
movsb
and
je
sub
mov
fldl
mov
add
adc
test
pusha
sbb
push
or
fdivs
or
jae
adc
xchg
mov
rcl
jp
xchg
fsubs
popf
fstp
adc
sti
push
sbb
stos
cmp
aad
inc
leave
lods
mov
xor
sub
mov
fistpll
mov
jmp
arpl
cmp
jnp
mov
sub
mov
adc
fildll
sar
pop
mov
pop
outsb
out
sbb
lahf
cmpsb
or
and
rcrb
les
mov
cld
cltd
mov
dec
fnstenv
dec
mov
jnp
xor
inc
add
pop
mov
xchg
push
ljmp
jbe
cmp
sub
js
shrl
mov
push
xchg
sbb
rcrl
xchg
xchg
jge
xor
and
dec
cmp
pop
sti
js
scas
insl
inc
push
fldl
icebp
inc
jecxz
lods
movsl
xor
fidivrs
in
mov
push
outsl
jnp
sub
loopne
jne
rcl
imul
int
jge
mov
sub
imul
sahf
cmp
out
sub
arpl
xchg
outsb
adc
dec
and
push
xor
sub
push
arpl
test
inc
push
dec
add
aad
rol
dec
push
stc
mov
cmp
test
sbb
and
loopne
inc
fwait
subb
dec
jae
das
inc
mov
lds
add
pop
cmc
add
pop
and
imul
pop
cmpsl
sbb
xchg
mov
icebp
in
test
xchg
clc
dec
out
mov
cmpsb
hlt
dec
repnz
scas
pop
mov
insb
adc
int3
sbb
stos
stc
cmc
jmp
aas
mov
aad
fcmovnbe
add
pop
pop
lds
inc
stc
test
push
push
pop
push
adc
pop
pop
jg
test
dec
push
jns
subl
add
push
pop
jge
sahf
out
sub
pushf
inc
xor
sti
enter
cmpsb
and
imul
push
stos
add
nop
dec
addr16
jo
es
rcr
stos
sbb
loope
je
sarl
dec
mov
mov
dec
sbb
int
xlat
jne
jb
mov
jge
adc
jbe
xchg
or
std
rorb
sub
jle
inc
notl
add
sub
cmc
and
fcmovnbe
popl
scas
mov
shlb
mov
mov
insb
cmc
mov
cmp
jp
xchg
jae
sahf
cmp
push
push
out
loopne
in
in
mov
adc
int3
sbb
arpl
add
pop
jmp
orb
fmuls
jp
out
int
pop
mov
xor
jl
out
ja
cltd
pushf
out
movsl
movsb
pop
js
dec
fists
xchg
and
and
and
cli
gs
and
stos
shll
mov
rol
cmp
andb
and
dec
ljmp
scas
cwtl
mov
fdivp
rolb
lret
test
add
mov
shl
mov
jnp
pop
je
xchg
movsl
insl
jmp
adc
inc
addr16
fcoms
movsl
jge
stos
sahf
out
push
sub
mov
xor
cmpsb
dec
mov
insb
cmp
fwait
xchg
stos
xor
stos
frstor
jae
push
add
lods
push
fmul
lret
out
ja
inc
push
and
fcompl
mov
into
push
lahf
rcrl
push
mov
and
inc
mov
out
cld
and
sbb
iret
out
lock
je
dec
jecxz
jns
fdivrs
xchg
push
xchg
sub
imul
mov
push
in
mov
cmp
adc
test
mov
inc
or
lods
orl
push
mov
aaa
ja
pop
mov
and
inc
xlat
movsl
pop
fmuls
rolb
lcall
cmpsl
fcomi
adc
movsb
push
lret
inc
jae
xor
inc
das
dec
mov
mov
pop
std
and
repz
sarl
fs
lcall
xchg
mov
mov
lock
mov
pop
insb
fstpl
pop
mov
outsl
in
dec
dec
xchg
das
xorl
xchg
in
lret
mov
sbb
push
movsl
adc
xchg
jge
jecxz
add
xor
test
jae
std
test
iret
xchg
xor
or
stc
pop
aam
push
pop
lock
subl
popf
inc
lea
xor
popa
mov
lahf
ds
xchg
push
add
or
movsl
out
xchg
cmc
scas
pushf
dec
aaa
adcb
mov
pop
test
mov
in
lods
add
cmc
xchg
test
inc
pop
mov
jge
add
pop
lret
jle
je
cmp
jae
lods
data16
jecxz
cmp
sub
and
lock
popa
rorl
aad
mov
repz
pushf
lds
fs
xor
pop
lods
sub
loope
enter
push
call
mov
mov
mov
repz
push
lcall
loop
scas
add
dec
xlat
scas
or
push
push
mov
addl
pushf
mov
pushf
enter
shlb
jae
gs
adc
pop
or
dec
test
inc
xorl
mov
jo
mov
rcrb
mov
lcall
mov
push
pushf
jecxz
in
push
mov
aam
fldenv
sbb
imul
dec
arpl
movsl
ja
aad
nop
movsb
repnz
jo
arpl
dec
add
hlt
outsl
rcl
or
mov
mov
xchg
ja
clc
xor
fdivrl
inc
addr16
mov
xchg
iret
sahf
xchg
scas
sbb
or
orb
repz
xchg
scas
iret
jmp
int
adc
sub
pop
dec
mov
mov
stos
push
addr16
outsl
idivl
movsl
inc
cmp
xor
sbb
push
xchg
or
lods
in
outsb
inc
sbb
std
jl
stc
mov
dec
jnp
push
outsl
push
aam
ja
or
aas
xlat
icebp
shrb
adc
fisttps
adc
mov
js
sbb
or
sub
jl
hlt
outsl
js
xchg
mov
jmp
hlt
in
cmpsl
sub
and
jne
das
repz
xchg
xor
pop
add
insl
mov
push
ds
and
xchg
or
push
mov
rcrl
pop
sti
andb
jge
insb
push
push
insb
inc
jl
sub
jbe
add
cmpsl
jbe
sub
insl
test
pop
push
mov
les
cli
mov
ss
xchg
xchg
fstpl
xchg
dec
sub
dec
add
mov
imul
ja
mov
xchg
jg
and
std
pop
mov
xchg
xor
xor
enter
xchg
js
dec
cmc
push
frstor
add
in
movsl
mov
mov
push
xchg
mov
or
stos
inc
cwtl
push
or
push
lock
repnz
jl
mov
lock
out
pop
mov
ljmp
sub
scas
femms
imul
mov
jp
ret
test
sub
sub
jecxz
ja
add
xor
xchg
add
sub
xchg
pop
popa
mov
mov
das
adc
mov
sub
inc
in
mov
mov
push
mov
lea
outsl
mov
pusha
jecxz
out
ret
lds
es
pop
pop
insb
pop
cwtl
inc
lret
testb
sub
imul
test
fistpl
aas
pop
mov
pop
inc
add
shl
push
gs
push
fs
sub
std
and
sub
cmp
add
lcall
rolb
lock
jae
out
les
iret
stc
out
cld
jg
das
in
outsl
push
scas
ror
jb
repz
imulb
and
test
or
cs
pop
add
jbe
stc
idivl
xor
loope
jmp
or
stc
sar
xor
dec
lds
lahf
xchg
addr16
iret
cmp
cwtl
aam
addb
mov
ret
pop
mov
std
cmc
xchg
rcll
out
pop
pop
adc
lds
cmp
xchg
sub
fiaddl
sahf
arpl
mov
mov
cmp
repnz
push
outsb
jns
jmp
popf
ret
sub
orb
cmc
and
int
mov
lahf
es
test
sahf
movsb
orb
mov
mov
pop
sbb
sub
stos
mov
adc
push
jmp
jg
jg
inc
jnp
movsb
pop
je
lcall
aad
int
aaa
mov
dec
mov
andl
sbb
sub
pop
add
outsb
pop
imul
sbb
adc
jne
inc
add
movsl
xlat
push
ja
xchg
jge
push
add
push
das
adc
lock
push
ret
mov
jbe
add
lss
test
pop
dec
xor
mov
jo
jmp
push
cltd
adc
sbb
push
mov
mov
and
ffree
inc
fwait
xchg
int3
shll
pop
jl
adc
cld
fs
das
add
mov
mov
mov
arpl
push
fidivl
xor
jp
sbb
sbb
sub
xchg
aaa
and
pop
stos
arpl
or
xor
cmpsb
mov
int3
into
fmuls
jne
lret
scas
stc
jne
mov
sub
out
fwait
and
iret
dec
sub
movsl
add
dec
les
mov
aad
and
xchg
int3
stc
pusha
mov
xchg
mov
add
cmpl
shrb
pop
mov
pop
in
pop
sbb
push
mov
or
xor
push
arpl
xor
jnp
mov
xchg
mov
push
and
pop
lea
push
sarl
inc
mov
sti
cwtl
scas
jo
test
fsubs
hlt
cld
jbe
shlb
lods
das
insl
lret
aaa
popf
dec
dec
movsb
ficomps
mov
addr16
rorb
cmp
aas
mov
or
pop
ret
mov
sub
int
shll
out
lahf
sub
test
out
inc
sti
popf
out
xchg
inc
cmp
xchg
add
lock
int3
fwait
mov
lret
pop
add
pusha
into
lods
push
icebp
ror
arpl
neg
das
lods
xor
lea
and
jp
rcll
inc
int
sub
lret
sbb
xor
xchg
mov
mov
pop
mov
jbe
ss
ret
mov
and
pop
scas
cmp
add
movsb
aas
loop
push
cmp
rorb
push
or
lahf
stc
std
pushf
enter
hlt
outsl
arpl
in
xor
sbb
adc
mov
outsb
xchg
and
popf
lods
jp
mov
repz
shll
loope
outsl
stos
or
mov
call
jbe
mov
mov
inc
loope
xorl
rorb
call
add
xor
mov
sbb
mov
cmpsb
inc
ds
mov
dec
aaa
sub
adcl
inc
dec
sub
or
mov
outsl
dec
jbe
and
xchg
in
or
je
xchg
xchg
inc
mov
push
add
xor
or
or
out
dec
mov
scas
sub
and
or
enter
add
rcrl
cmpsb
add
lds
and
enter
dec
mov
jns
push
jecxz
shlb
mov
pop
mov
notl
ds
or
inc
ja
sbb
imul
and
out
jbe
dec
int
pop
add
clc
gs
mov
sbbl
cmpsb
add
fisubs
cmp
push
pop
jp
add
imul
data16
xor
sub
mov
xchg
es
incb
pop
into
icebp
jbe
dec
sbb
hlt
loopne
out
sub
and
xchg
sbb
int
mov
mov
xchg
dec
xor
hlt
mov
ret
lods
mov
int
push
pop
inc
sbb
lds
pop
in
fisubs
mov
mov
iret
stc
sub
insl
loopne
push
ljmp
push
push
movsl
fldt
dec
dec
mov
icebp
add
sbb
mov
ja
adc
outsb
mov
lock
and
mov
out
push
jge
sbb
sbb
pop
stc
adc
adc
xchg
popa
jae
jae
mov
movsb
sub
push
sub
out
dec
aad
xchg
mov
xor
or
or
fimull
dec
imul
xchg
insl
push
xor
scas
jo
fsts
ja
mov
lret
int
out
enter
pop
mov
cmp
out
cmpsl
or
pop
shll
xchg
iret
cmpsl
enter
out
aas
sar
and
daa
jae
rolb
lods
mov
add
xor
repz
sub
gs
cmc
jns
and
xor
dec
cmp
pop
or
imul
or
outsb
aas
inc
movsb
jmp
lret
sub
mov
cmp
fbstp
jecxz
hlt
fmuls
mov
xor
jns
bound
mov
andl
in
push
push
xor
rolb
add
in
sbb
xchg
sub
sar
cmc
daa
dec
adc
inc
daa
jle
pop
hlt
in
inc
xor
cmp
inc
out
mov
push
fidivrs
cmp
jp
nop
sahf
loop
add
imul
inc
mov
aas
popa
aam
ret
jg
and
sub
fidivrs
aaa
sti
pusha
pop
or
dec
in
xchg
adc
cmpsb
push
mov
pop
idiv
mov
xor
sub
xchg
cmp
and
xor
pop
jge
jle
stos
jecxz
scas
fmul
xlat
test
testl
subl
movsb
pop
xor
cmc
sbb
add
out
dec
shlb
lret
mov
xchg
outsl
daa
sub
pusha
pop
xchg
dec
sbb
dec
push
jp
movsl
js
sub
jno
and
in
movsl
lret
xor
xchg
pushf
or
cltd
and
mov
push
addl
sarl
fnstcw
sub
inc
jecxz
loop
add
push
mov
addb
sub
mov
xchg
stos
jne
daa
sub
inc
out
mov
fisubl
sbb
xchg
jb
dec
cli
mov
loope
pop
sbb
mov
xor
cld
mov
push
xlat
xor
mov
out
call
jns
xor
imul
lds
sub
nop
adc
data16
pop
ljmp
outsb
mov
jno
jmp
inc
mov
inc
pop
push
push
inc
jbe
aas
test
out
xchg
inc
mov
sub
int3
aas
sub
pusha
pop
and
cld
arpl
inc
fiadds
mov
cmp
push
arpl
xchg
into
sub
repnz
imul
cli
stc
in
call
and
jne
xor
xchg
popa
aam
aam
adc
adc
dec
adc
jle
out
sub
nopl
std
rol
fcomps
in
mov
mov
or
cwtl
mov
xchg
cmc
rcl
mov
push
fisubs
mov
mov
xor
gs
or
leave
in
shlb
daa
pop
xor
jle
rorb
repz
sbb
lcall
xlat
push
div
xor
mov
mov
cmp
icebp
int3
inc
rorl
in
xchg
std
xor
mov
cs
rorb
mov
cmp
dec
popf
pop
adcl
sbb
ds
sub
xchg
mov
dec
add
mov
mov
push
pop
shrl
ds
pop
addr16
dec
sbb
or
cmp
fimuls
imul
scas
mov
fnstenv
stos
inc
cmp
cmp
xchg
push
sbb
mov
lcall
sub
addl
mov
cmp
push
xchg
imulb
dec
mov
in
xlat
jbe
aam
pop
por
mov
in
data16
bound
jbe
shrl
xor
mov
in
addl
mov
js
subl
add
iret
idiv
jl
mov
inc
aas
dec
xchg
ss
stc
adc
imul
orl
test
mov
out
mov
test
movsl
mov
popf
dec
test
loope
fwait
out
mov
push
push
fisttps
sahf
dec
inc
mov
add
xchg
out
jge
iret
int3
inc
mov
aas
xchg
enter
push
dec
dec
mov
clc
xor
or
daa
cli
mov
or
fbstp
out
mov
sbb
scas
sub
dec
jne
cmc
push
mov
push
mov
inc
cli
push
dec
mov
mov
pop
les
jle
and
mov
push
mov
push
sub
xchg
sbb
cmp
cmpsl
hlt
repnz
pop
aad
mov
xchg
iret
into
icebp
fcoml
cmp
call
ffree
scas
pop
push
mov
mov
cmpsb
lahf
push
stc
stc
jnp
sbb
arpl
cld
xchg
mov
scas
sub
add
lret
mov
mov
xchg
cmp
je
mov
aad
repz
xchg
negl
mov
push
fsubrl
fs
lret
out
sbb
sub
mov
mov
and
ss
mov
mov
negb
push
mov
insb
mov
and
out
xlat
adc
outsb
sbb
xor
jae
add
mov
stc
repz
xor
cld
incl
xlat
in
jecxz
mov
xchg
rorl
or
mov
inc
push
daa
sbb
aad
xchg
int
imul
loope
lea
adc
or
pop
adc
or
out
mov
js
js
rclb
divb
lret
inc
sbb
push
and
cmp
xchg
in
fisubrl
add
xchg
int
jnp
in
repz
add
sarb
and
clc
mov
push
inc
imull
shlb
cli
repnz
loopne
sti
and
fucomip
jns
lock
imul
leave
mov
sbb
mov
push
arpl
sti
cmp
call
pusha
scas
test
pop
ja
imul
sub
adc
push
movsl
mov
inc
and
add
dec
push
scas
xchg
roll
leave
pop
lods
imul
test
jo
jg
mov
cs
insl
push
pusha
gs
and
jg
cmpsl
pop
movsb
inc
mov
pop
dec
push
and
lret
loope
mov
xchg
inc
sub
add
push
popa
popa
push
into
out
cs
loopne
inc
xor
add
sub
mov
push
fistpl
lock
scas
fdivr
popa
push
aam
and
ja
iret
dec
cmp
or
imul
xchg
mov
add
jecxz
push
cmp
and
jl
mov
rclb
mov
push
iret
test
loop
mov
mov
ss
fisubrs
push
in
mov
add
bswap
xlat
mov
cmp
mov
pop
cwtl
adc
fisubrs
xchg
rorl
jge
pop
fs
ja
sub
mov
lods
mov
sub
xor
imul
sub
dec
mov
sub
xchg
push
add
mov
test
sub
inc
enter
add
push
dec
dec
nop
inc
or
add
jl
movsb
cwtl
stos
sub
lret
jnp
push
jge
andb
popf
lret
movsl
mov
cmpsb
iret
lock
xchg
pop
add
push
sbb
and
in
xorl
add
gs
stc
test
jae
imull
enter
dec
mov
leave
insl
ja
jle
cmp
jnp
xor
test
std
pop
in
loope
std
cltd
jl
fdivs
pushf
mulb
or
sub
xor
adc
cwtl
mov
hlt
and
mov
cmp
subl
fdivrs
ret
dec
in
cmpb
and
push
hlt
mov
divb
add
sbbb
js
jne
cmp
lcall
test
bound
lcall
sub
cmc
ljmp
add
mov
cmp
scas
loop
xor
lock
inc
xchg
or
ss
cmp
push
mov
in
sahf
loope
cmp
int3
fimuls
mov
or
xchg
dec
mov
sbb
fdivrl
iret
cmp
pop
mov
push
js
outsb
inc
cmp
in
sub
jbe
xor
inc
jb
cld
hlt
xchg
add
push
iret
icebp
xor
je
mov
lea
arpl
xchg
dec
push
stos
and
xchg
shlb
into
test
data16
mov
sar
cmc
xor
mov
mov
movsl
stos
cmp
fwait
ja
xor
push
xor
pusha
ljmp
inc
add
xor
int3
mov
test
popf
pop
popa
push
adc
xchg
mov
out
jecxz
das
or
cmp
int3
arpl
lcall
dec
push
mov
lahf
es
lcall
int
add
pop
mov
mov
aaa
test
imul
xlat
mov
add
add
push
dec
push
xchg
push
fucomi
mov
ret
cmp
js
sub
jl
ret
sbb
aas
adc
sti
and
or
xor
jae
cmp
push
inc
mov
jmp
push
in
daa
mov
dec
dec
pop
inc
xchg
aam
out
aad
cmpsl
hlt
aaa
test
xchg
data16
adc
push
test
jnp
or
push
and
mov
cs
pop
dec
lock
leave
sub
lds
jno
cmpsl
sub
sub
xchg
out
inc
sti
xor
mov
cmp
mov
jae
mov
dec
dec
fcomps
test
push
add
xchg
pop
addr16
and
movsb
imul
call
daa
shlb
shr
add
into
aam
and
xor
test
js
iret
shrb
into
xor
pop
loop
mov
test
mov
sbbl
push
mov
lret
pop
ficoml
shll
push
out
push
cmc
and
popa
lahf
jnp
imul
or
sbb
or
popa
and
push
int3
movsl
imul
psubusw
loopne
jmp
repz
push
aad
out
shll
and
pop
ret
mov
cltd
hlt
inc
in
test
push
sub
rorl
int3
sbb
adc
jmp
jno
xchg
jp
into
sub
xchg
bound
pop
fdivr
fwait
js
jmp
inc
das
int
mov
pop
outsb
and
mov
aaa
sub
out
jnp
sbb
shr
add
and
and
adc
insl
jecxz
inc
cmp
inc
outsb
loopne
inc
ret
adc
aam
dec
test
out
std
outsb
jbe
adc
jle
or
jae
sub
test
or
mov
insb
adc
push
rcrl
stos
sbb
or
popl
outsl
dec
into
in
or
outsl
sbb
data16
lret
lahf
or
fs
xchg
push
push
inc
fisubl
push
lcall
sbb
mov
mov
popf
fisubrs
xchg
shrl
mov
popa
out
notl
xor
pop
and
pop
and
sbb
xchg
mov
add
sub
pop
stos
adc
stos
and
or
psubw
xor
popf
ljmp
xor
clc
xchg
jecxz
rcll
stc
icebp
xchg
cmpsb
xchg
adc
leave
notl
and
pop
ja
mov
xor
sbb
xor
call
or
add
dec
push
je
push
in
popa
stc
xor
pusha
imul
vmaxpd
xchg
aaa
pop
sbb
cmp
mov
aam
pusha
stos
push
xchg
into
lret
test
dec
or
cmp
in
add
jle
popa
pop
cld
inc
adc
xchg
push
ja
aas
lock
ss
into
shll
cwtl
mov
mov
aaa
or
mov
lea
leave
mov
shll
es
sub
ljmp
mov
push
mov
pop
sbb
rcrl
add
fsubr
cmp
xchg
mov
orl
movsl
mov
in
jecxz
cmp
push
pop
ljmp
adc
orl
popa
sbb
push
jno,pt
or
xchg
push
icebp
pop
rclb
mov
dec
divl
pop
jle
cmpsb
flds
fmuls
xchg
inc
je
mov
loope
pop
sahf
aam
mov
daa
jo
lods
lahf
mov
lret
enter
push
or
or
sbb
lret
arpl
jae
lret
xlat
push
fprem
outsb
mov
mov
push
cltd
mov
test
insb
pop
stos
pop
aaa
jge
rclb
push
push
es
pop
cwtl
push
into
mov
add
mov
mov
mov
dec
jne
jae
mov
xor
push
pusha
popf
mov
jl
les
jne
aam
xchg
and
stc
push
mov
xlat
mov
leave
idiv
lods
dec
dec
pop
in
rclb
lds
iret
lea
test
int
push
loop
xchg
adc
ja
fxch
fimull
pop
mov
push
and
ret
xchg
ja
hlt
movsl
daa
jl
addr16
mov
dec
imul
cltd
dec
mov
jbe
or
push
rolb
pusha
push
inc
es
fidivl
xchg
jl
fidivs
test
dec
call
fistps
push
push
mov
nop
icebp
and
xchg
mov
lcall
test
pop
in
sbb
add
insb
daa
inc
mov
pop
pop
jns
push
dec
xor
pop
subl
lods
xchg
mov
clc
or
cmp
mov
xchg
cmp
jae
jmp
ret
fwait
or
je
imul
adc
std
sbb
je
lock
fisubl
dec
movsl
lds
sub
shll
inc
lds
repz
add
in
dec
or
lea
outsl
and
stc
inc
mov
adc
adc
std
mov
imul
jg
ficomps
jp
stos
imull
push
pusha
dec
adc
push
pop
clc
int3
or
test
aaa
ljmp
lods
imul
imul
mov
cld
ja
jns
outsb
cmp
jnp
out
cmpsb
sbb
xchg
div
mov
icebp
mov
lret
movsb
pop
and
mov
fxtract
loope
sub
or
cs
push
movsl
xchg
test
add
push
or
cmp
loope
pop
dec
xchg
jae
add
out
out
inc
les
mov
ss
int
aaa
sbb
mov
gs
mov
std
mov
inc
testb
inc
xchg
les
std
hlt
ret
sbb
aaa
mov
sar
cmp
xlat
sti
shll
jae
dec
mov
imul
data16
fnstenv
sbb
xor
inc
hlt
or
cmp
gs
and
dec
jb
cmp
cs
hlt
xchg
inc
dec
inc
stos
shlb
out
fnstsw
and
pop
int3
imul
cmp
dec
js
jb
push
jb
pop
out
lock
sub
pop
add
dec
xor
js
and
mov
xchg
fldl
add
divb
push
and
in
leave
or
testl
aam
mov
std
pop
rcrl
ss
sbb
imul
cwtl
notl
pop
mov
mov
push
ja
xor
enter
cmp
pop
jmp
std
test
scas
inc
std
push
cmp
cmpb
scas
incb
push
xchg
cs
dec
incb
cli
cli
dec
inc
dec
es
pop
mov
ret
std
inc
mov
mov
bound
mov
outsl
xchg
and
mov
mov
xchg
mov
imul
and
fsubl
push
ficoml
adc
out
in
inc
mov
std
out
mov
and
pop
nop
dec
inc
jb
ret
aad
xchg
hlt
popa
scas
jecxz,pn
sub
es
inc
adc
adc
or
push
cmc
std
jae
and
mov
mov
and
ss
push
cltd
mov
sbb
and
mov
pop
cmc
pop
jmp
aaa
jbe
add
xchg
mov
push
aaa
mov
sbb
in
push
mov
sub
push
add
loop
daa
insl
mov
fwait
leave
lcall
lcall
cmp
cmp
leave
in
and
add
cmp
fs
lret
pop
js
fs
mov
les
rolb
std
pop
mov
sti
fwait
cmpsl
mov
sbb
jno
mov
add
mov
and
pop
mov
adc
jns
xor
outsl
push
call
lret
call
addr16
fdivs
jg
into
loopne
dec
xchg
out
test
icebp
mov
aad
add
sbbl
push
aad
xchg
jp
or
imul
jbe
adc
shlb
mov
mov
mov
or
insl
mov
push
std
enter
add
out
mov
ds
je
fdiv
xbegin
cwtl
cltd
pop
or
mov
pop
push
dec
stos
inc
loope
add
sub
xlat
shll
push
cmp
rcrb
and
cmpsl
into
rcll
xor
insb
lds
nop
iret
ds
mov
jbe
in
lds
add
bound
mov
stos
or
mov
and
popa
ss
mov
andb
xor
pop
loope
test
in
xchg
xchg
hlt
or
cltd
int3
testb
cmp
xchg
jb
xor
or
push
push
hlt
movb
out
cli
or
das
icebp
pop
stc
cmp
jb
aam
pop
push
mov
mov
or
xchg
popf
cwtl
add
rorl
mov
mov
repz
adc
jecxz
insb
sbb
push
push
jbe
sub
or
sub
adc
pop
addr16
mov
loopne
cmp
mov
xchg
cmpsb
cmp
das
incl
or
or
add
push
mov
imul
push
int
shlb
xchg
or
addr16
sub
inc
xchg
or
and
in
sbb
mov
movsl
hlt
xchg
cmp
lcall
imul
add
xchg
imul
mov
pop
jecxz
mov
call
jno
sbb
sub
ss
or
mov
shrb
int
jnp
jb
outsb
lcall
dec
jae
adc
jb
jb
rorl
mov
dec
cs
int
clc
mov
add
inc
fucomi
scas
push
adc
cli
jae
aam
mov
scas
dec
xchg
sub
fistpll
xchg
push
div
ja
out
cld
cli
push
imul
lahf
sbb
fidivrs
in
xor
sub
inc
iret
dec
xor
enter
xor
stos
xor
inc
movb
inc
xor
mov
push
lds
pop
rolb
iret
in
cld
and
xchg
sbb
jne
popf
cmpsb
mov
xlat
mov
jns
dec
add
pop
jb
xchg
call
insb
lahf
xchg
mov
aam
add
cmp
push
cmpsl
xlat
inc
pop
out
inc
scas
or
sti
xlat
insl
jno
add
push
xor
dec
xchg
lock
mov
sbb
daa
paddw
mov
out
int
sbbl
push
dec
and
xor
mov
push
inc
adc
stos
cltd
cltd
jle
mov
jnp
fisubs
lahf
icebp
jns
insl
daa
ja
push
cs
mov
insb
sub
je
cmpsl
pop
scas
mov
in
add
aam
xchg
movsl
dec
xchg
push
es
arpl
mov
shrl
mov
daa
fs
push
call
push
xor
popa
mov
mov
mov
cmp
stos
jae
int
fists
and
ret
push
sbb
scas
in
cmp
mov
fisubs
push
cmp
scas
out
push
iret
enter
and
hlt
adc
mov
mov
xchg
std
sub
in
nop
push
xor
or
lods
mov
cli
mov
sbb
pop
fstpl
scas
test
inc
mov
sub
mov
or
outsb
inc
ret
mov
movzbl
jecxz
sbb
lods
xor
inc
push
daa
or
jecxz
cwtl
ficomps
movsl
dec
outsl
adc
mov
pop
mov
add
cmp
inc
bound
or
mov
sub
mov
ret
jmp
jle
adc
inc
repnz
mov
rcr
and
stos
subl
mov
cltd
cmp
das
insb
fsts
lock
fsubrs
cwtl
inc
popa
cmp
outsl
mov
xchg
and
sub
out
in
dec
sbb
xchg
lods
pop
mov
stc
mov
das
mov
and
hlt
int
jae
test
mov
int3
dec
jp
push
test
mov
mov
jg
mov
fisttpl
daa
xor
mov
mov
pop
xlat
mov
sahf
cld
mov
or
xchg
mov
add
or
push
stos
lcall
pop
dec
xor
jnp
mov
or
lahf
inc
ds
fdivl
rcll
jl
stos
mov
inc
jnp
xchg
dec
dec
fcmovne
int3
shll
shrb
adc
add
cmpsl
ljmp
push
adc
int
mov
lret
mov
xor
or
insb
sbb
testl
inc
ss
rorb
adc
mov
mov
xor
aaa
cmp
sub
loope
add
sar
inc
push
sbb
mov
cs
divl
loop
pop
mov
pop
sti
push
sbb
cmpl
xchg
jo
mov
ds
fisttps
xchg
into
and
iret
popf
int
dec
cmp
stos
arpl
push
push
mov
cmp
mov
and
mov
insl
dec
insl
push
outsb
out
jbe
and
xchg
repnz
adc
mov
es
xchg
mov
push
lock
orb
add
xor
pop
stc
inc
mov
xchg
cmp
mov
and
dec
pop
stos
out
insb
out
imul
jno
jmp
pop
or
xlat
dec
mov
lock
adcb
idivb
cmp
cld
add
adc
leave
ja
add
addr16
ss
and
cmp
sub
aas
fnstenv
addr16
mov
stos
inc
push
mov
out
jecxz
das
cs
pop
jp
xor
mov
addr16
jle
arpl
lods
jns
hlt
ficoml
push
fstpt
adc
cmc
cmpsb
mov
aad
xlat
test
aas
mov
imul
sbb
push
andb
jl
adc
inc
xchg
int
xor
cmp
mov
out
cmpsl
test
inc
cmp
pop
std
jmp
mov
fisubrs
push
inc
mov
add
cmp
pop
add
adc
nop
xchg
xchg
arpl
xchg
lret
pusha
scas
sbb
loopne
add
sub
outsb
add
aaa
testl
pop
imull
adcl
out
lods
repnz
and
pop
xlat
adc
int3
test
bound
mov
cmp
push
add
lret
xlat
xchg
call
push
dec
stos
push
out
mov
xor
mov
and
repnz
addl
mov
xchg
gs
lret
push
je
push
jg
or
jmp
negl
out
push
mov
xor
sub
or
stos
add
lock
push
lock
inc
add
push
ds
dec
pusha
jb
out
movsb
cmp
orl
sbb
push
leave
mov
push
ror
lods
mov
cmp
out
mov
das
adc
xor
mov
xchg
lret
push
dec
lret
sub
mov
out
es
es
clc
xchg
jmp
das
mov
push
loope
sbbl
lea
cmpsb
das
sub
popf
scas
xchg
in
jmp
mov
ret
fnstcw
sbb
mov
rcll
pop
add
imull
xchg
aad
push
mov
lahf
and
popa
mov
adc
mov
add
ficomps
int3
mov
add
cmp
inc
mov
in
jecxz
or
sub
mov
sub
jp
jecxz
cli
mov
pop
xor
pop
adc
orl
push
iret
or
xlat
mov
fildl
rclb
pushf
loop
insb
fstpl
mov
repnz
loope
shlb
cld
and
jo
adc
adc
movsl
and
cmp
cmp
cld
scas
dec
and
pop
shrb
and
xor
leave
icebp
data16
jae
mov
sbb
ret
xchg
and
jge
imulb
push
dec
leave
dec
movsb
test
out
fdivs
jae
aaa
clc
les
add
jmp
shr
out
int3
ja,pt
pushf
jle
jae
adc
lock
push
add
xorb
inc
mov
or
cmp
mov
cmpsb
push
adc
ret
and
sbb
into
pop
mov
inc
js
addr16
mulb
or
enter
jbe
push
shrb
pop
ja
lock
xchg
pop
inc
xchg
xor
jl
mov
lret
in
loop
xchg
sbb
imulb
fsubrl
mov
in
shlb
test
sub
mov
sub
push
mov
sbb
sbb
xlat
cmp
pop
test
sbb
sbb
inc
loop
aam
daa
jmp
out
cmp
push
jecxz
mov
fwait
jbe
pop
std
pop
cmp
sub
sub
xor
xchg
jns
test
call
outsl
pusha
gs
fs
cmpsl
xlat
pop
push
outsl
mov
ljmp
popf
hlt
clc
pop
movsb
cmovge
lahf
aam
cmp
pop
xchg
adcl
fstps
cmp
mov
push
in
sbb
ret
in
in
subl
fwait
iret
mov
lret
popa
pop
jmp
bound
jl
or
lret
dec
loope
and
movsl
dec
or
sti
lret
and
add
cmpsl
mov
aam
loope
in
out
rcll
repnz
push
movsl
cmp
cld
arpl
mov
movsl
je
xchg
ret
iret
movsl
pop
in
lcall
mov
repnz
imul
cmpsb
test
in
movsl
insl
mov
imul
pop
inc
mov
jne
add
lods
add
adc
shrl
repnz
sarb
repz
dec
inc
push
fmuls
inc
jge
mov
mov
shlb
xor
ss
pushf
insb
int
push
stos
xor
xchg
pop
pop
rorb
icebp
lcall
pop
test
popa
cmc
xor
movsb
push
and
or
test
push
addr16
mov
fildll
push
mov
push
fists
xor
inc
ja
stos
push
fwait
in
mov
cmp
mov
mov
add
xchg
jae
mov
lock
les
mul
xchg
or
mov
imul
sbb
sbb
add
or
sub
mov
sbb
jae
in
add
popf
cmpsl
inc
xchg
pop
cmc
jmp
or
lcall
out
or
ret
jecxz
jl
pop
scas
movsb
adc
lea
popa
insb
pushf
cmp
rcl
inc
gs
lea
adc
mov
push
sbb
int
mov
or
and
std
xor
add
inc
xor
addb
add
scas
int
sub
stos
or
arpl
popf
lret
outsl
pop
xlat
ret
jg
adc
andl
fcmovb
inc
loop
or
mov
aas
sbbb
jge
inc
test
orl
jae
and
out
aas
lahf
dec
jns
adc
dec
outsb
xchg
push
pop
lret
mov
outsb
int
inc
cmpsl
mov
imul
sbb
pop
aam
mov
fisubl
fdivl
lea
test
loop
fnstsw
xchg
cs
std
mov
enter
sbb
ret
xchg
adcb
mov
jecxz
stos
mov
cmpsl
push
mov
sub
inc
mov
aad
clc
and
push
or
out
sarl
xor
insl
pop
fwait
and
clc
pop
shlb
cmpb
scas
xchg
lcall
mov
xor
aad
sbb
xor
push
cs
mov
dec
push
mov
xor
fsubrp
dec
xchg
sbb
loope
jae
scas
lret
lea
in
stc
out
xchg
mov
jb
push
sti
dec
test
sub
out
dec
stos
faddl
lret
arpl
aam
shlb
mov
aad
icebp
xchg
and
pop
add
outsb
into
mov
sub
sbb
cmp
cmp
cmp
scas
mov
fildl
fisttpll
out
xchg
hlt
or
rolb
fdivs
push
jnp
or
test
sub
sti
add
cmp
mov
push
scas
push
or
rclb
cld
xor
mov
push
xor
add
push
pop
cltd
jecxz
and
inc
xchg
push
sub
cmpsb
cmpsl
jnp
jb
xchg
xor
out
sbb
andb
sarl
xchg
insb
jp
dec
xchg
lock
mov
das
fdivs
xchg
daa
xchg
pop
cmp
jo
xlat
mov
mov
sarb
and
xlat
pop
js
mov
movsl
aad
inc
rolb
pop
loopne
mull
enter
punpcklwd
cmpsb
xlat
fst
xchg
or
cmp
ret
or
mov
into
imull
mov
cmp
xor
loopne
daa
sub
pop
dec
jnp
pop
jecxz
cmp
loop
call
adc
xchg
rcl
dec
pusha
test
jp
fisubs
sub
sahf
inc
mov
or
mul
xchg
insl
scas
test
cld
xor
movsb
mov
cmpxchg8b
shll
out
roll
adc
test
xor
push
or
outsl
mov
roll
or
enter
lds
jnp
push
add
outsl
jle
inc
pop
test
xchg
push
in
lock
aad
lar
or
pop
adc
jne
fiaddl
rorb
and
loope
jp
aad
scas
aaa
push
jmp
xor
mov
and
and
push
push
mov
stos
inc
scas
movsb
jns
mov
xchg
push
pushf
jge
inc
cmpb
sub
push
ljmp
aam
movsb
add
insb
sub
subl
daa
pop
mov
cmp
rcrl
xchg
imull
xor
sub
repz
inc
mov
fnstcw
aaa
in
mov
mov
lock
mov
mov
inc
jge
and
mov
dec
push
std
arpl
movsl
cmp
aaa
sbb
arpl
jo
aad
and
mov
cmpsl
fwait
sub
cli
mov
inc
arpl
or
dec
jmp
aas
inc
dec
out
sub
cltd
inc
pop
shll
and
adc
dec
push
iret
sahf
and
mov
jnp
pop
pusha
stos
lock
jmp
in
into
fsts
or
mov
fwait
loop
mov
mov
rorb
mov
lret
inc
push
jo
xorl
xlat
out
test
std
adc
adc
int
cmp
sub
sbb
push
pop
jecxz
xchg
xchg
fsubrl
int
cmp
push
mov
out
test
loop
mov
popf
mov
fwait
pop
out
mov
cmp
xchg
dec
arpl
jg
xchg
inc
mov
movsl
cld
aaa
mov
fldt
mov
push
add
and
cmp
shlb
mov
cwtl
xlat
sarl
push
hlt
repz
xlat
enter
xchg
sbb
test
ja
inc
popa
dec
inc
xchg
xorb
dec
fnstcw
movsb
rcrl
cs
xchg
mov
lret
add
ret
mov
nop
or
or
lret
outsb
xchg
cwtl
outsl
scas
filds
lods
mov
gs
and
leave
in
cmc
adc
pop
out
cmp
or
jae
pop
pop
ds
std
in
and
out
or
cmpsb
cmp
jle
out
nop
in
xchg
out
xchg
lods
lods
mov
fists
out
xchg
jae
popa
sub
and
shlb
fs
lock
jl
push
xor
dec
jnp
mov
pop
outsb
out
push
dec
xchg
xchg
les
mov
mov
ret
cmp
rcr
mov
aas
ljmp
imul
xchg
insl
push
lds
sub
test
iret
xchg
ja
gs
dec
sub
or
ret
loopne
sahf
out
nop
clc
out
mov
in
popa
movsb
xor
mov
jmp
pop
mov
daa
repz
fs
push
or
and
jno
or
cli
xor
test
out
mov
sbb
frstor
xor
cmc
jg
dec
ret
jg
std
or
shr
in
sbb
jbe
enter
dec
pop
xchg
insl
movsl
cmpsb
ljmp
lods
sbb
push
mov
inc
xchg
cld
cmp
call
enter
pop
lods
cmpsb
cltd
adc
inc
cmc
daa
adc
mov
inc
icebp
push
movlps
inc
adc
lcall
adc
cmp
add
imul
arpl
push
inc
lea
sub
out
pop
test
push
addl
cmp
arpl
push
xchg
repz
pop
out
pop
xchg
pusha
add
push
and
xchg
xor
sbb
xchg
xchg
shrl
gs
sub
shrb
add
sub
es
ret
icebp
push
xchg
mov
mov
and
push
pushf
and
out
ss
nop
xor
sub
sub
mov
pop
dec
add
pop
leave
in
popa
lcall
shll
and
dec
sahf
sbb
cmp
jmp
arpl
and
jo
pop
fisubl
push
mov
dec
enter
cmc
into
sbb
out
lahf
test
push
in
sub
push
xor
add
mov
je
and
test
pop
in
fisttpll
cmp
popa
mov
add
mov
xchg
popf
and
stc
popf
pop
lods
repnz
sub
dec
lds
loope
cli
xchg
sti
inc
pop
jno
test
xchg
lods
ja
enter
popa
call
cmp
flds
outsb
test
subl
insb
mov
incb
fdivp
sub
pop
mov
cli
xchg
xchg
mov
mov
mov
arpl
cmp
rclb
adc
cmpsl
loopne,pt
pop
lods
sub
lcall
addr16
xor
sub
je
lret
push
cwtl
xchg
fisubrs
add
test
scas
push
sub
jecxz
icebp
es
mov
shl
ret
or
xor
sbb
pop
and
call
xchg
test
or
stc
mov
jns
push
js
rcrb
push
mov
mov
int
mov
xchg
repnz
ja
int3
sti
sub
les
lods
pop
push
in
lods
xor
inc
cmp
mov
iret
add
and
fsubrl
add
rcrl
popa
ljmp
arpl
stos
jle
adc
negb
jnp
or
xchg
mov
lds
push
push
iret
xor
iret
add
rcrb
bound
push
call
xor
rcrb
rol
mov
mov
and
sub
xor
jecxz
cld
scas
jp
push
mov
repz
jmp
cmp
jmp
loope
ljmp
sbb
and
imul
jecxz
mov
loop
lds
jge
pop
stc
gs
lea
gs
js
xchg
or
test
adc
mov
lahf
aad
add
mov
and
outsl
inc
jnp,pt
iret
xchg
mov
push
adc
cs
emms
lods
dec
inc
cltd
out
cmp
das
fwait
lock
sbb
or
mov
cltd
mov
or
call
test
cmp
push
shlb
andb
scas
jno
sub
sub
aas
mov
push
lock
or
or
iret
fwait
shlb
and
sub
sti
test
adc
cld
xchg
jno
xchg
lods
add
pusha
stc
sub
or
ljmp
mov
test
in
pop
into
out
data16
jp
stos
xchg
push
lds
fscale
push
sub
pop
aad
push
shrb
xor
adc
xchg
mov
lock
dec
mov
and
inc
push
xchg
push
dec
loop
jne
movsl
ja
in
aaa
test
js
and
popl
mov
sbb
jne
shrl
xchg
in
mov
or
push
ret
call
xor
out
aaa
xchg
push
mul
loope
adc
in
cmp
into
aas
shr
in
rorl
and
mov
roll
xchg
mov
pop
jno
clc
test
fwait
jp
inc
jp
mov
popa
xor
pop
in
lds
jl
insl
loope
or
in
cwtl
mov
mov
push
sbb
je
xchg
inc
jbe
mov
inc
pop
lock
mov
jmp
mov
inc
rol
and
adc
ret
stos
loopne
fwait
loop
mov
arpl
jb
push
sub
sti
xlat
dec
call
jae
cmpsb
xor
inc
cmpsl
ds
mov
or
xchg
shll
mov
sbb
sub
xchg
cmp
jle
insl
xorl
ja
ret
adc
rol
ret
jnp
sub
and
testb
dec
fadd
cmp
and
jle
or
das
fnstenv
xor
cmc
mov
sbb
imulb
xchg
or
psrlq
cmp
pusha
les
inc
pop
push
sti
cmp
xchg
cmp
pop
mov
sub
mov
imul
or
arpl
inc
loopne
orb
sbb
pop
and
out
insl
rcrb
dec
test
mov
notl
insl
xor
or
subb
sbb
out
or
sub
sbb
test
fistps
shll
roll
js
rcrb
into
stos
lahf
lahf
test
outsb
jp
cmp
xchg
sub
fmul
push
cmp
cmp
add
pop
cwtl
sub
out
div
lock
das
push
cmpsb
inc
mov
sti
push
push
sar
or
jne
push
push
cld
pop
cld
dec
idivl
nop
mov
push
push
into
cmp
add
imul
arpl
scas
jnp
adcl
in
dec
ffreep
fwait
mov
shll
cwtl
pop
pop
iret
popa
xchg
cmp
mov
adc
arpl
and
hlt
lcall
add
testl
cmpsl
and
add
inc
push
mov
cmpsl
cwtl
mov
jno
sub
adc
push
jno
aaa
test
xchg
lds
lea
mov
movsb
mov
aas
mov
pop
or
cltd
mov
jo
jnp
ja
fs
and
and
mov
mov
repz
inc
stos
loope
fcmovnbe
je
push
push
and
sbb
arpl
mov
jle
push
stc
xchg
sub
xchg
pop
xor
jo
repnz
xchg
fdivl
mov
in
mov
and
dec
dec
jnp
insb
jecxz
xchg
xlat
das
bound
mov
xchg
js
push
sub
sahf
cmpb
cld
decb
mov
cwtl
xchg
aad
cmp
dec
fbld
mov
movsb
fs
sub
test
add
cmp
out
adc
fidivrl
lcall
out
gs
dec
aaa
jno
xor
xchg
lods
or
jmp
push
inc
mov
mov
in
sbb
fdivrl
mov
cltd
sbb
sub
jb
lds
inc
cmpsb
sbb
decb
pop
mov
imul
lret
adc
cwtl
das
mov
add
mov
cmpsl
iret
les
rol
ss
lahf
pop
jmp
icebp
jae
fnstcw
sub
pop
cmp
fwait
scas
fistps
imul
mov
daa
mov
mov
movsb
push
scas
clc
xor
test
dec
sbb
ja
inc
ljmp
jecxz
dec
pop
inc
and
das
scas
push
push
jnp
xchg
out
out
sub
addr16
jno
les
insb
mov
pop
movsl
jns
ret
stos
pusha
add
sub
fisttpll
mov
mov
push
push
das
aaa
sbbb
in
jecxz
sub
or
popa
xlat
pop
rcrl
inc
sbb
das
data16
push
mov
popf
loope
aas
dec
loope
std
xlat
mov
icebp
mov
xchg
add
xchg
sti
sub
xor
es
call
test
mov
loop
push
cld
jp
and
arpl
aaa
int
mov
mov
stc
or
push
loop
and
inc
into
xor
inc
push
cld
sub
fldl
test
lock
mov
stc
xor
pusha
pop
inc
mov
pop
mov
or
rol
mov
out
in
sti
push
stos
mov
std
xchg
dec
test
test
adc
loopne
and
or
push
pop
or
test
jae
out
cwtl
shr
cli
adc
mov
jne
outsb
inc
sbb
testl
inc
push
loop
cmp
fsts
mov
sub
pop
jns
and
addb
imul
jne
andb
out
pop
cmp
fbstp
outsl
stos
mov
jp
mov
pop
movsl
into
es
jne
out
mov
jb
add
lret
lahf
cltd
add
add
outsl
arpl
ljmp
sbb
test
xor
mov
pop
test
sbb
popf
bndldx
jne
inc
xor
das
xor
jnp
lods
movsb
scas
pop
lods
pop
cmp
inc
fidivl
in
mov
std
loop
subb
mov
push
div
scas
jle
repnz
icebp
ret
sub
xchg
clc
jge
adc
cmp
es
xchg
xor
andl
or
push
repz
lds
inc
push
shll
adc
cmp
mov
cmpsl
add
mov
mov
mov
mov
xor
pop
pop
adc
xchg
mov
mov
mov
pushf
jne
add
js
mov
divb
push
cmpsl
pusha
push
iret
lock
inc
or
mov
aas
sbb
out
push
je
roll
out
jne
pop
loopne
sbb
jbe
insl
add
roll
xchg
adc
pusha
dec
test
clc
jg
mov
push
rorl
movsb
xor
cmc
and
movsl
xchg
ds
loope
shrl
adcl
repnz
lea
xchg
and
les
iret
imul
aad
mov
cmp
sbb
xchg
mov
mov
in
jnp
stos
and
sub
stc
lea
push
lds
fwait
add
gs
mov
xchg
mov
push
mov
mov
jge
mov
jmp
shlb
insl
jae
mov
sbb
int
ja
push
test
push
pop
jge
daa
icebp
xlat
inc
fiaddl
xorb
stos
mov
shlb
aas
or
inc
xchg
fadds
jle
cld
jnp
repz
fxch
mov
ret
addr16
jl
aas
jmp
mov
out
inc
lahf
mov
dec
pop
or
fdivrl
cld
insl
scas
mov
or
rorb
dec
dec
out
andb
push
fcmovnu
int3
out
xchg
push
push
cld
fidivs
dec
or
rolb
popa
adc
adc
and
fsts
pop
pop
add
or
inc
mov
pop
repz
hlt
iret
rcrb
jns
leave
mov
outsb
pop
adc
repnz
xlat
add
jl
pop
popa
cmp
pop
dec
into
inc
and
push
leave
xor
and
mov
xchg
cwtl
sub
pop
jmp
and
arpl
cmpsb
jecxz
and
cmp
dec
nop
cli
in
jb
jg
mov
sbb
pop
enter
jno
jns
pop
and
repz
dec
into
jge
inc
lock
in
push
fs
movb
sub
cmpsl
xchg
popa
flds
lea
into
cltd
add
dec
inc
dec
shrl
ret
adc
sbb
js
das
movl
inc
mov
out
fwait
movsb
push
jae
inc
sub
shl
cld
sbb
lcall
out
xor
jno
mov
jmp
and
mov
call
jmp
push
int3
pop
das
mov
icebp
lcall
push
inc
xchg
notb
fisubrs
pop
inc
or
cmc
dec
mov
add
cmp
cmp
jl
and
mov
jge
sbb
gs
jb
jae
lea
lret
ret
pop
and
jl
adc
add
pop
mov
inc
ljmp
jmp
xchg
popf
imul
jbe
aas
add
adcb
mov
inc
bound
xchg
add
jo
cmp
jns,pn
jmp
jno
sub
cwtl
shlb
xchg
sahf
testl
and
fildl
jmp
lods
insb
out
xor
fldcw
jns
repnz
dec
sbb
cwtl
push
movsl
xchg
in
pop
sub
pushl
dec
jmp
pop
sbb
out
mov
in
outsl
jmp
cmp
cmp
cmc
cmc
pop
ja
mov
and
in
adc
mov
cltd
je
inc
out
mov
rolb
rorl
cmp
dec
push
pop
aad
jge
dec
nop
push
js
mov
inc
negl
mov
mov
adc
xchg
into
xchg
push
jne
jns
mov
movsl
or
call
scas
sub
pop
add
xchg
pop
stc
outsb
xorb
sti
andl
xchg
ljmp
loope
xchg
mov
mov
in
arpl
push
cwtl
jmp
adc
fidivrs
mov
pop
mov
daa
xchg
fldt
outsl
mov
fstpl
aad
push
inc
scas
push
mov
cmpsb
jmp
imul
add
ds
pusha
xchg
sub
ljmp
mov
repnz
mov
ret
push
sbb
xchg
andl
sbb
iret
push
imul
test
mov
jge
xchg
mov
adc
jns
xor
lock
pop
out
movsb
insb
xor
shr
dec
fadds
push
jae
xchg
loopne
jne
ss
movsl
dec
cmpb
xchg
pop
insb
xor
inc
rcrb
lret
push
inc
mov
or
loop
fisubl
and
jmp
xchg
mov
mov
dec
inc
lock
test
outsb
xchg
cmpsl
add
cmp
xchg
mov
orl
divl
xchg
cmp
sbb
scas
fsubr
mov
call
mov
push
leave
adc
mov
add
stc
das
hlt
inc
xor
push
call
mov
iret
nop
ror
push
shrl
imul
nop
lret
push
jmp
sarb
sahf
pop
mov
inc
test
daa
das
mov
mov
sbb
xchg
dec
xchg
jp
ss
sbbb
xor
enter
push
jge
cmp
icebp
add
int
pop
divb
push
cmc
inc
xor
pushf
jb
test
lods
out
mov
xor
push
pop
inc
ss
scas
loopne,pt
pop
lods
gs
ljmp
cld
arpl
ss
or
fistps
sub
xorl
lea
lahf
jecxz
aas
xchg
or
dec
sub
and
out
ret
aas
adc
jp
mov
leave
ds
test
cltd
mov
shrb
int3
data16
lahf
sub
jae
add
call
pop
mov
in
lret
mov
daa
addl
and
fdiv
in
add
movsl
sub
frstor
in
add
mov
sbb
lea
xchg
xor
aad
ja
mov
stos
and
cmp
int
inc
adcb
inc
xchg
xchg
jne
cli
int
pushf
add
dec
fs
shl
mov
mov
sub
xchg
aam
rcl
testb
loop
mov
xchg
dec
xchg
dec
int3
jnp
rcrb
stc
fisubrl
inc
jg
pop
mov
movsl
repnz
aam
orl
mov
loope
and
cs
leave
push
dec
je
inc
sub
loope
push
popa
out
ja
rcrl
or
inc
push
mov
repz
aas
jae
scas
inc
add
lahf
and
or
inc
mov
aam
jp
sub
in
jmp
mov
aad
rcrb
or
scas
je
subb
iret
mov
jl
inc
xchg
sar
dec
test
cmp
in
ret
mov
leave
iret
cmp
imul
stc
out
sbbl
test
in
andb
mov
jecxz
inc
mov
cwtl
sub
fildl
pop
mov
mov
in
push
cs
sub
fadds
adc
mov
push
insl
pop
clc
shlb
std
push
mov
sbb
lods
xor
mov
ja
test
inc
jg
sub
cmpsb
fildll
popf
imul
jecxz
testl
sub
outsl
or
comiss
mov
jge
push
repz
fistpll
mov
inc
data16
shrb
sub
or
xlat
loope,pt
and
fcmovnb
inc
pop
mov
repnz
shl
clc
inc
lret
lods
aas
inc
rcll
mov
add
sub
lock
sub
push
rolb
pop
sbb
decb
ja
sub
mov
loop
sub
out
sahf
inc
sub
insl
lds
rcl
incb
test
int3
jno
shl
movsb
xor
loope
adc
lret
and
insl
mov
es
aas
stc
gs
shll
pop
mov
sbb
mov
in
cmp
or
int
ds
xchg
out
inc
psllq
push
sub
add
sub
sub
fsubrl
jbe
xor
lock
xlat
jns
pop
dec
inc
sub
stc
cmp
testl
ret
pop
aam
dec
rol
rorl
add
js
cli
aaa
out
cld
sbb
cmp
xchg
mov
ficompl
addb
in
ja
loope
rcl
jb
and
in
test
lcall
insl
cmc
mov
push
xchg
mov
mov
hlt
or
sub
push
sbb
movsb
dec
sarb
shlb
addr16
xor
je
repnz
jns
mov
es
xchg
aas
addb
xchg
xchg
mull
ja
mov
xchg
out
adc
fcmovbe
push
iret
jbe,pt
faddl
sbb
call
mov
loop
xchg
xchg
jl
push
mov
sub
mov
push
cmpsb
pushf
mov
outsb
hlt
add
cmp
adc
and
int
mov
in
test
pop
or
icebp
stos
shl
sbb
cmp
adc
nop
movsl
sub
pop
scas
pop
aam
inc
cmp
xchg
pop
jmp
stc
xor
dec
push
imulb
fsubrs
mov
hlt
movsb
and
outsl
addl
lret
in
sbb
inc
imull
sbb
test
repz
lea
es
mov
test
fildl
lock
and
mov
jae
inc
out
movsl
mov
jnp
xchg
inc
repz
fcmovnbe
xor
push
dec
cli
ljmp
add
test
movl
in
js
ss
add
jle
jmp
pop
xor
sbb
sub
jle
rorb
mov
and
inc
aas
ljmp
pop
stos
jnp
sub
and
sub
outsb
xchg
adc
lret
jno
loopne
push
in
out
mov
mov
out
xchg
xor
es
inc
cwtl
sbb
mov
push
sub
popf
sub
xor
fdivr
jb
pusha
xchg
jns
stos
push
scas
cmp
mov
lcall
add
sahf
mov
movsb
cwtl
fldcw
movsl
inc
adc
xchg
mov
ret
test
into
insb
into
xor
das
into
mov
mov
test
mov
mov
imul
xchg
test
aad
mov
and
jo
stos
xor
mov
mov
je
sbb
subl
mov
inc
dec
cmpb
leave
mov
dec
lret
pop
or
lods
int3
jmp
or
aam
js
notb
outsb
into
sarb
inc
out
add
lods
sub
pop
jbe
sbb
push
cmp
ds
dec
enter
ret
sbb
pop
in
iret
cmp
iret
cltd
jo
sub
or
sub
adc
sub
test
lds
inc
jle
enter
sti
mov
dec
pop
mov
vpshufd
or
in
push
pop
lcall
insb
push
adcb
mov
nop
sar
cli
mov
data16
repnz
mov
jmp
icebp
jo
xchg
and
stos
fcmove
pushf
rcr
fwait
lods
int3
sbb
jns
inc
pop
or
mov
out
inc
fstpl
inc
mov
ss
call
ja
sti
out
cmpsl
outsl
mov
sub
add
lods
inc
cmp
jno
push
cmpsl
mov
into
sahf
cmpsb
pop
fsubs
out
inc
pop
jmp
lock
int
addb
leave
ljmp
stc
mov
lahf
sbb
pusha
stc
and
mov
inc
mov
dec
cmovnp
ds
jae
mov
imulb
dec
xor
and
xchg
xchg
inc
push
int3
mov
push
dec
dec
cmp
in
imul
cmp
cmpl
fisttps
in
jg
aam
add
lock
jnp
imul
sub
clc
xchg
dec
jb
or
lahf
jecxz
push
out
mov
or
std
jnp
adc
sub
pop
orb
mov
lods
cmp
mov
or
enter
jne
xor
mov
imul
sub
push
jg
sahf
cmp
cwtl
sbb
inc
pop
stc
push
data16
mov
fsubrs
sahf
sbb
test
dec
xchg
jp
and
dec
or
jns
add
aas
in
outsl
test
incb
mov
mov
repnz
cmp
sbbl
xor
das
push
test
lahf
jmp
loopne
cmp
outsl
sub
pop
popa
adc
std
jns
mov
fbstp
mov
xchg
aas
dec
push
mov
stos
ds
lahf
lds
dec
popa
loopne
bound
ds
sarb
fstpl
jb
or
lahf
cmp
out
daa
lds
inc
pusha
aas
mov
and
cwtl
jge
xlat
xchg
in
icebp
sbb
out
jo
xchg
and
dec
add
ljmp
mov
mov
cmp
pop
mov
or
das
jge
sbb
je
pop
outsl
jo
fsubrl
je
xchg
js
cmpsl
or
fcmovnu
or
dec
sbb
shll
cmc
and
pop
repz
popf
adc
mov
shlb
sbb
pop
cli
lret
cmp
mov
jmp
sahf
xchg
std
push
ljmp
hlt
repz
xchg
adc
xlat
jmp
in
cmp
xchg
dec
mov
pop
mov
cmp
xor
daa
sarl
ds
and
test
shl
sbb
add
test
xchg
push
cmp
test
mov
enter
test
iret
cmp
inc
pop
xchg
popa
sbb
out
sti
es
and
hlt
mov
ret
sub
aad
clc
in
loope
jne
and
inc
mov
mov
imul
jno
jecxz,pn
and
call
cltd
in
in
xchg
fnstsw
aad
lcall
test
lahf
push
inc
daa
xor
cs
sub
sbb
sbb
sub
ds
cmpsl
fstpl
hlt
jg
jae
sarl
dec
inc
xorb
push
movsb
or
bound
pop
jp
pop
lcall
fwait
mov
jmp
push
ds
leave
out
sub
sub
and
mov
xchg
add
mov
or
lods
or
aad
icebp
mov
clc
cli
out
mov
mov
fstpl
push
xchg
mov
cmpb
pop
test
fs
jp
movsl
aad
js
imul
xchg
pop
sub
arpl
push
outsl
icebp
in
jmp
inc
and
adc
xchg
stc
out
push
ror
into
adc
add
push
mov
xchg
sub
xlat
dec
daa
push
ljmp
xor
mov
push
cs
jge
mov
jge
or
pop
cmp
sbb
mov
js
inc
add
sub
test
lods
ljmp
xchg
sub
mov
ror
inc
sub
les
jmp
jnp
ds
int
ror
mov
jae
iret
mov
mov
data16
dec
add
mov
hlt
jle
lahf
outsl
lock
mov
call
sub
aaa
dec
xor
adc
aaa
adc
dec
ja
clc
mov
xchg
in
jmp
mov
or
push
aam
adc
sub
test
cmp
adc
pushf
rol
and
or
gs
mov
xor
fs
adc
push
sbb
mov
out
xchg
ljmp
insb
mov
or
mov
xchg
adc
xor
and
xorb
sbb
popf
pop
and
loop
cmp
xchg
jne
lock
push
add
cmpsb
in
sub
scas
rol
arpl
iret
repnz
aaa
dec
mul
mov
stos
add
xor
fs
idiv
out
sbb
pop
mov
adc
push
aaa
test
orl
mov
mov
mov
mov
lret
dec
daa
xchg
aam
lea
pop
jl
xchg
in
jmp
jns
mov
pop
or
jecxz
das
xchg
xchg
push
pushf
mov
cmpsb
cli
test
add
lret
push
jo
pop
stos
fs
pushf
xor
cmp
sti
jl
mov
jg
mov
push
in
mov
inc
or
push
sti
fsubl
xor
jg
pop
loope
arpl
fs
push
clc
cmp
dec
clc
push
in
pop
loope
std
push
adc
idivl
lahf
outsb
mov
sahf
and
mov
sbb
push
mov
scas
mov
fucomp
clc
xor
leave
into
sub
sbb
imul
and
xlat
add
push
outsl
sbb
cmpsl
out
fs
jns
adc
add
sub
shlb
test
in
pop
in
push
and
call
in
jns
imul
adc
adc
daa
sub
ljmp
subl
js
jmp
loopne
lock
jnp
add
sbb
cmpsb
fwait
or
shll
push
shll
mov
repz
mov
movsb
push
aad
daa
xchg
cltd
stos
push
mov
scas
jg
pop
iret
sarl
push
xorb
xchg
cs
mov
mov
addr16
jmp
int3
pop
pop
xchg
pop
pusha
cwtl
and
nop
ret
sbb
lods
inc
pushf
mov
sbb
sub
pop
pushf
movl
xchg
cmp
and
movsl
xchg
adc
mov
insl
and
and
je
fisttpll
ss
pop
mov
xor
xchg
cmp
loope
mov
xchg
popf
mov
inc
fiadds
add
xchg
cld
shll
addr16
sbb
ss
xor
and
jmp
xchg
pop
mov
inc
clc
insl
sub
stos
jae
xchg
xorb
mov
cli
mov
adc
call
das
pop
cmp
mov
push
pop
xchg
idiv
sbb
xor
pop
push
out
jge
add
jmp
sub
jp
inc
test
ljmp
dec
and
add
shl
pop
push
cwtl
mov
mov
pop
in
cmp
aaa
dec
jne
mov
rcrb
ds
sets
cld
mov
shl
xchg
aad
shl
movswl
scas
dec
jmp
pop
enter
shrl
int3
mov
mov
mov
mov
movsl
mov
xchg
mov
add
add
int3
cs
inc
mov
bound
stos
sub
jge
imul
jl
hlt
es
je
xchg
inc
stos
cmp
lock
jle
movsl
data16
pop
cs
mov
test
mov
les
xchg
jae
aaa
enter
int
cmp
jmp
les
lret
fldl2e
push
mov
dec
push
mov
lret
fwait
daa
sti
fisubs
movsb
mov
loope
and
dec
mov
sub
pop
xor
out
gs
inc
jle
push
loope
xchg
imul
sub
loopne
aas
mov
imul
xor
sub
xor
fstpt
cs
scas
xor
lret
loopne
imull
fstps
mov
fstl
sbbl
negl
fdivrs
lods
mov
arpl
xchg
add
test
mov
aad
in
idiv
dec
pop
cs
adc
xchg
jge
stos
xor
xchg
scas
jnp
jp
add
mov
xlat
gs
in
mov
sub
mov
add
sarl
in
std
cld
inc
shrb
cmp
shrl
jl
test
xor
fidivrs
cwtl
loopne
mov
push
rcr
rcrl
adc
out
jns
std
nop
push
xchg
mov
push
call
pop
adc
lods
xor
cmpsb
xor
sub
rclb
mov
mov
int3
adc
cwtl
imul
or
mov
cld
push
xlat
mov
adc
cltd
sub
jp
and
sti
lret
insl
lods
fistpl
div
in
dec
ja
push
push
cmp
fwait
xor
gs
inc
in
push
aad
ficompl
xor
pop
mov
mov
pop
xchg
add
sub
iret
std
fs
pushf
jle
xor
xchg
test
mov
dec
add
and
jl
and
out
out
or
inc
test
adc
dec
push
test
out
jb
popa
int
pop
mov
addb
and
cmpb
or
sub
or
jmp
ljmp
adc
mov
add
pop
xchg
insl
sbb
ret
stos
push
das
nopl
sub
insl
xchg
imul
and
adc
and
aaa
repnz
in
sbb
lret
push
pop
jns
insb
in
push
mov
sbb
mov
pop
test
andb
sahf
scas
inc
xchg
push
add
test
lock
mov
or
movsl
or
addr16
adc
out
or
aaa
sub
cli
xor
adc
sbb
pop
pop
inc
xchg
cmpsb
mov
test
in
cwtl
ljmp
movsl
dec
cwtl
fs
lods
mov
lret
add
aad
jg
push
loop
xlat
jbe
cmp
adc
scas
sub
jecxz
dec
inc
lcall
xchg
jmp
push
rclb
push
pop
shr
outsb
cmp
push
inc
adc
test
xor
sub
inc
xor
jno
xchg
dec
leave
fsubs
insl
das
icebp
jg
inc
rclb
mov
push
lods
inc
lahf
stc
xor
or
dec
loope
and
pop
fcmovnu
sbb
cmc
dec
imul
mull
fldcw
movsl
push
mov
pushf
dec
jns
cmc
dec
mov
andl
xor
push
dec
sub
stos
arpl
xorl
and
test
mov
add
mov
leave
mov
cmpl
lea
xchg
push
movsb
jb
insl
pop
fists
out
lds
mov
and
and
enter
sub
jnp
mov
add
mov
pop
fisttps
mov
dec
data16
dec
ljmp
pop
inc
cmp
shlb
je
and
fsubrl
arpl
sbb
sbb
loop
lea
inc
mov
sub
xchg
dec
inc
jecxz
fmuls
mov
int
hlt
lret
aad
loopne
lods
in
cmpsb
or
sub
test
pop
mov
cmp
loop
lods
outsb
in
aaa
mov
out
xchg
adc
ja
test
xchg
insb
xor
sbb
scas
push
shl
outsb
mov
sbb
aaa
and
bound
lock
xchg
jge
lea
dec
sahf
xchg
leave
xor
xchg
mov
addr16
subl
fwait
adc
mov
dec
xor
jle
xchg
pop
movsb
aam
mov
sahf
scas
loop
mov
adc
leave
frstor
nop
inc
loope
orl
vcvtss2sd
push
add
ret
mov
out
adc
out
xor
repnz
add
pop
lds
mov
mov
adc
dec
adc
imul
push
cmp
push
mov
xor
rcrb
xor
sub
leave
add
adc
xchg
addl
add
outsb
sbb
rcrl
inc
loope
dec
test
out
mov
mov
stos
in
xchg
inc
shll
mov
stos
jl
rcll
xchg
xchg
fldenv
mov
xchg
inc
je
outsb
mov
les
sbb
push
sub
rolb
movsl
or
sbb
add
loope
div
mov
loope
jne
js
mov
loope
ds
rcrl
je
push
adc
or
fwait
xchg
xchg
push
stos
aaa
pop
fisubrs
and
or
loope
pop
loope
pop
les
xchg
mov
push
jo
arpl
mov
lock
xlat
push
lock
pusha
adc
arpl
shl
dec
sahf
adc
setae
pop
test
mov
sbb
pop
jecxz
push
test
test
or
and
je
jne
repz
addr16
push
jp
loope
fcom
cmpsl
imul
xor
repnz
mov
sar
repnz
fadd
mov
mov
shl
out
ljmp
mov
icebp
aam
add
xor
test
loope
or
jp
mov
lret
cmp
or
xchg
mov
movsl
test
push
popf
pop
inc
out
mov
out
shr
idivl
iret
mov
js
fadds
mov
outsb
js
mov
icebp
clc
mov
test
aam
ret
adc
sub
adc
push
xor
in
xchg
cmp
jne
pop
and
or
inc
jle
push
cmp
je
lods
adc
aad
push
pop
push
mov
cmp
pop
ret
cmp
ja
add
roll
insb
cmp
lret
std
push
xchg
sub
xor
repz
cmpsl
stc
fs
xchg
push
mov
xchg
fisttps
sub
xor
je
mov
xchg
jge
pop
push
xabort
inc
je
add
jb
rcll
in
std
out
es
dec
jmp
repz
xchg
cmp
xor
mov
or
test
je,pt
data16
out
sub
fimull
in
in
into
imul
inc
pop
ja
fistpl
clc
mov
idiv
and
lods
mov
mov
fwait
pop
mov
cmp
das
add
pop
adc
out
iret
std
cld
shlb
jns
out
cmpsb
daa
jp
mov
mov
lcall
out
mov
jl
push
xor
mov
push
xchg
lcall
or
cmpsl
inc
jns
mov
lods
nop
cld
jecxz
dec
orb
mov
pop
xchg
out
testl
shlb
mov
sbb
aas
mov
pop
mov
cld
and
xor
lret
fstpt
cmpsb
mov
outsb
inc
negl
inc
popf
and
push
cmpsb
lea
int
clc
test
push
out
aaa
movsb
shrl
xorl
push
lock
xor
divb
stc
das
or
mov
adc
mov
dec
fucomip
testl
mov
fldenv
fs
sub
scas
sub
jge
fisubrl
sub
jbe
sbb
xorb
xchg
xor
rorb
dec
dec
addr16
jl
scas
cmp
outsb
xchg
adc
call
scas
sub
insb
outsb
roll
insb
jbe
jo
mull
out
xchg
aam
xchg
incb
daa
adc
in
je
mov
cmp
rorl
jle
fwait
xlat
sbb
lock
push
outsl
cmpsl
pop
pop
in
ret
test
test
clc
cmpl
xchg
cld
test
repz
xor
xchg
jl
js
pop
sbb
jmp
xor
iret
scas
mov
lret
cmc
movsl
sbb
push
xlat
outsb
movsl
mov
sub
or
call
out
test
aad
loope
popf
cmp
sti
ja
add
sub
fcomps
outsb
movsb
fsub
sub
rcrb
fnstsw
mov
jns
cmpsb
mov
xchg
adc
lods
add
sub
jb
inc
sbb
adc
or
mov
cmp
sub
xchg
iret
xchg
add
sub
xor
stos
jb
outsb
loop
call
xchg
lods
xor
insl
pop
cmpsb
add
pusha
xchg
pop
es
sahf
movsl
sbb
add
dec
push
sub
xchg
sarl
lahf
sub
push
fisubrl
pushf
repnz
push
gs
lds
jae
ja
xor
xorb
jg
icebp
jecxz
mov
or
mov
lret
pusha
jl
jecxz
test
inc
int
aaa
dec
or
lock
pop
push
out
aas
add
dec
push
popa
js
mov
and
insb
jg
cmp
inc
movsl
mov
xor
xchg
rcll
adc
ret
daa
mov
and
idivl
mov
adc
xor
adc
outsl
testl
xchg
lds
aad
loop
push
jge
xchg
mov
loop
lahf
jbe
aad
cld
xchg
lods
ret
add
mov
into
xchg
in
testl
ljmp
pop
push
outsl
cli
loop
insl
xlat
outsb
inc
notl
ss
xor
pushf
insb
subl
xchg
push
sub
jp
adc
jmp
sbb
loopne
inc
ljmp
out
cmc
inc
sub
imul
test
hlt
mov
jne
loopne
sahf
jp
je
push
add
loopne
jp
or
cmp
push
cmp
adc
pop
dec
dec
inc
adc
insb
rcll
cmpsl
cmp
pusha
jecxz
scas
pop
mov
adc
mov
adcl
dec
fdivrs
sub
mov
xchg
enter
fbstp
imul
std
insb
in
pusha
xchg
inc
out
mov
je
xor
cwtl
les
dec
xchg
mov
loope
das
dec
daa
push
or
lods
icebp
add
loope
jno
lods
or
sub
jns
jmp
fcoml
inc
xchg
and
mov
dec
enter
es
xchg
insb
sub
mov
lock
and
addb
sbb
jl
movsl
enter
mov
lret
sbb
std
or
sub
cmp
out
je
sbb
cmp
mov
add
xor
popa
xchg
cmpsb
lods
push
repnz
xor
jae
pushf
mov
xchg
and
mov
mov
faddl
rorb
mov
mov
cs
insl
into
repnz
subb
iret
add
cltd
adc
cmp
mov
scas
add
mov
fnsave
xor
mov
ja
int3
imul
movsb
mov
mov
insb
jl
sbb
lret
std
and
xrelease
aas
add
or
add
out
insb
fcmove
repz
popl
ret
dec
jp
jns
jno
pop
stc
popf
arpl
popa
iret
jns
pop
jo
mov
cmpb
sbb
cmp
iret
rcrb
push
mov
test
repz
mov
inc
sub
daa
out
out
jo
aam
je
cmp
cmp
fwait
add
sub
clc
pop
mov
daa
les
xchg
shl
movsb
sbb
add
cmp
loopne
push
sub
push
or
test
jo
mov
addb
cld
mov
push
aam
aas
xor
ja
aaa
scas
jne
xor
or
les
mov
lods
out
movsb
fcomp
insb
idivl
or
sbb
sbb
dec
cmp
pop
jmp
test
jbe
push
jge
inc
or
sbb
cmp
push
xchg
out
adc
jg
loopne
or
xchg
pusha
mov
pop
sub
cmp
out
cmp
xchg
or
sahf
stos
lock
push
lahf
fldt
stos
xorl
mov
cmp
or
sub
mov
push
fnstsw
adc
jge
arpl
out
lock
pop
sbb
arpl
stc
add
cs
mov
jae
lds
sub
mov
xlat
lcall
sbb
enter
cltd
jg
imull
movsb
cmp
pop
repnz
hlt
aas
jae
jno
pop
xor
dec
movsb
add
lods
gs
out
pop
push
pop
xchg
jns,pn
cmp
cmp
push
pushf
xor
and
movsl
cwtd
mov
sbb
hlt
mov
es
jmp
dec
pop
test
xchg
dec
fcomps
hlt
ljmp
std
push
ja
rcrl
xchg
pop
mov
dec
jne
dec
aas
mov
stc
enter
inc
in
inc
cmc
jno
jmp
incb
arpl
xor
dec
scas
inc
sti
imul
pop
out
cwtl
hlt
fwait
or
push
xchg
xorl
sub
rorl
jg
xor
out
cmp
mov
popa
mov
sbb
addl
xchg
mov
fidivrs
mov
or
sub
daa
push
ljmp
inc
sarl
fidivs
ficoml
mov
sbb
out
sub
xchg
cld
cmp
adc
inc
adc
mov
mov
jle
lds
dec
mov
les
sbb
mov
mov
mov
dec
pop
cmc
or
and
cmp
add
xor
out
sub
mov
cmp
int3
xchg
add
jmp
je
xlat
stos
shll
push
pop
incb
adc
mov
and
outsb
jb
loop
and
lods
cli
sti
dec
lret
aas
jg
sub
loope
addr16
adc
out
scas
add
repnz
roll
or
xor
mov
push
push
pop
repnz
outsl
mov
nop
lods
in
or
or
outsl
lea
inc
ja
cltd
lahf
adc
add
fs
mov
xor
mov
out
iret
cmc
popf
clc
loopne
mov
dec
push
les
inc
scas
push
cs
xor
dec
mov
adcb
and
jmp
adc
pushf
xor
shrb
jecxz
jns
pop
or
pusha
jl
scas
xchg
mov
iret
sub
sbb
jle
pop
out
pop
test
icebp
and
inc
sbb
movsl
lock
inc
jle
fistl
addr16
imul
mov
out
push
cmp
mov
mov
sbb
inc
cli
xchg
inc
pop
hlt
mov
fidivl
pop
cmp
enter
cmp
mov
les
std
mov
setg
adc
xchg
push
sbb
dec
or
dec
dec
xchg
pop
jge
movsl
jmp
popa
fdivs
jne
repz
outsl
in
loop
jb
xchg
pop
mov
xlat
ret
pushf
jecxz
cwtl
stc
clc
xlat
daa
lcall
pusha
scas
inc
mov
cmp
pop
lcall
cmc
or
addl
adc
ror
popa
mov
fsubrl
sbb
imul
aas
out
fmul
sbb
inc
push
outsb
add
mov
lret
jbe
xchg
pop
xor
movsb
imul
lret
out
jp
adc
mov
xchg
cwtl
push
sbb
aam
mulb
push
inc
jns
idivl
pop
jbe
mov
and
aas
das
ss
outsl
inc
rolb
mov
fwait
adc
and
sbb
push
adc
mov
inc
insl
ss
mov
pop
sbb
test
jb
lock
mov
mov
jl
push
jge
loop
xchg
mov
jne
dec
daa
inc
pcmpeqw
sub
aam
out
movsb
pop
sub
and
sub
scas
push
out
pop
sub
test
mov
jne
mov
pushf
push
sbb
insb
fcompp
push
adc
sbb
jg
mov
and
mov
test
in
outsl
cmpsl
outsb
in
scas
hlt
cs
sbb
pop
xor
popf
push
jg
add
dec
out
in
stos
add
inc
inc
test
mov
xor
popa
loopne
cmpsb
cmp
cmc
cld
repnz
xor
push
cmp
cmp
out
je
stos
stc
push
movsl
aam
pop
xlat
xchg
jae
icebp
inc
movsb
not
pop
dec
sbb
cmp
xorl
and
push
aad
mov
and
mov
pop
pusha
test
fcoms
cmp
mov
or
cmpsb
fidivl
stos
ss
cmp
in
sbb
fldenv
adc
int
jo
push
andl
jl
add
cmp
out
add
pop
fisttpl
loop
jbe
pushf
int
pop
pushf
mov
xchg
vcvtsi2sdl
mov
pop
clc
shlb
push
into
faddl
lret
test
ffree
inc
loop
xchg
iret
mov
inc
xor
ja
test
adc
sti
fimuls
jae
pop
leave
gs
out
jle
rclb
les
jp
cmp
mov
xchg
std
pop
adc
jmp
in
xchg
jge
jmp
inc
clc
lret
mov
and
shl
xchg
in
dec
lcall
dec
cmpsb
leave
cmpsb
and
in
add
pop
cmpsb
pop
pop
aad
fdiv
push
int3
add
mov
inc
or
add
call
or
jmp
fsts
sbb
xor
fwait
jnp
cmc
stos
in
jno
stos
rcl
push
xor
lcall
inc
stos
inc
push
pop
mov
arpl
movsl
sti
push
sub
or
xchg
xor
insl
sbb
and
mov
jnp
push
out
sbb
bound
xchg
dec
sarb
inc
sub
leave
jo
or
bound
cmp
arpl
lods
mov
sahf
xor
and
lea
test
sahf
or
mov
add
mov
pop
shlb
mov
pop
inc
sub
out
push
and
add
aaa
jge
sub
or
in
xchg
inc
xchg
mov
addr16
sbb
lods
daa
sahf
cld
adc
popa
pop
pushf
inc
out
pop
ss
inc
add
loopne
and
mov
push
into
mov
dec
xchg
ja
or
fs
and
inc
rcll
pop
and
in
xorb
call
shll
decl
lahf
cltd
test
inc
xor
mov
je
shlw
notb
mov
inc
adc
xchg
fs
call
roll
jl
jno
addl
jecxz
mov
and
or
out
ljmp
mov
pop
sub
shl
rcr
loope
jmp
dec
jns
loope
imul
jmp
inc
adcl
mov
sarb
rcl
jne
loopne
mov
not
loope
xchg
xchg
cmp
loopne
stos
jae
jnp
sbb
out
cmp
or
jmp
inc
dec
add
pusha
fists
mov
cmc
in
into
pop
out
aad
pop
mov
movb
lret
add
shr
xor
aas
pop
aad
pop
add
xor
sub
jmp
sbb
icebp
push
add
sub
stos
out
dec
jb
pusha
les
mov
mov
mov
push
jnp
test
xor
adc
push
add
dec
loope
and
adc
xor
iret
repz
out
call
pop
push
stos
or
push
test
xor
imul
jmp
pop
lds
pop
sbb
popa
mov
pop
sti
jmp
sub
inc
xor
push
hlt
sarl
in
in
movsl
sar
and
mov
sbb
insb
in
movsb
xchg
xor
aam
jno
sbb
shlb
push
add
mov
int
cs
adc
inc
sub
dec
int3
jmp
orl
pop
movsl
outsl
and
in
mov
sahf
cmp
jmp
push
js
rclb
sbbl
test
xchg
push
jp
cltd
in
jo
ja
add
push
rcll
outsl
and
mov
xlat
test
push
jecxz
in
mov
hlt
popf
sub
jmp
loope
cmp
sub
clc
and
addr16
xchg
pop
aas
pushf
popf
out
ja
mov
shrl
cmp
xlat
sub
test
jae
sub
push
inc
scas
aaa
xor
push
dec
cmp
and
mov
sahf
xor
mov
cmp
mov
jge
scas
cld
mov
loop
int3
movsb
enter
jnp
into
lods
cmc
cld
jae
sar
enter
jne
mov
pusha
clc
popf
cmp
cs
fs
xchg
inc
or
inc
xor
ret
inc
rcrl
testb
mov
out
sbb
sub
lahf
xchg
add
notb
mov
xchg
xchg
mov
dec
fistpll
xchg
fldcw
sub
cltd
xor
ror
jne
push
pop
lods
mov
call
loope
in
cmp
scas
lods
jle
inc
pusha
stc
adc
enter
movsl
je
sub
aam
ds
sbb
bound
and
pop
push
insb
or
sahf
repz
and
fidivl
out
xor
mov
loop
sub
jns
nop
and
mov
stos
test
fwait
or
push
scas
xchg
cmp
movsl
fisubrs
insb
sahf
lcall
push
inc
push
popl
cmp
insb
std
mov
mov
sub
pop
stos
addr16
les
les
mov
aaa
mov
xor
xchg
stos
inc
mov
sar
mov
loope
xchg
adc
out
cwtl
adc
imul
sub
jns
jns
gs
cmpsl
xchg
mov
mov
mov
into
push
push
inc
ljmp
sbb
dec
jle
lcall
dec
loope
push
dec
shr
inc
iret
jle
xchg
test
out
mov
pop
mov
dec
mov
cmpb
or
scas
adc
mov
popa
adc
nop
add
pop
or
aaa
gs
inc
mov
in
dec
ret
scas
adcl
mov
pop
roll
cmp
dec
add
int3
sub
rorb
adc
add
movsb
fnsave
test
loopne
and
out
lock
lcall
pop
xchg
stos
sub
xchg
insl
mov
xorb
mov
jo
cmp
aad
dec
gs
add
aam
les
sub
arpl
push
lock
sub
popa
adc
addr16
ret
adc
adc
xor
jbe
lret
outsb
jae
test
filds
and
addl
push
mov
sub
sbb
adc
in
lods
cmp
cmp
enter
mov
dec
xchg
and
popf
and
push
fnstsw
andl
int3
jecxz
push
mov
xor
mov
rorl
sub
xchg
cld
xchg
xlat
xlat
sub
push
jns
xchg
loopne
cmp
jne
mov
dec
cs
sahf
stos
push
jo
roll
cwtl
call
fidivl
push
or
leave
xor
shrb
sub
addr16
cmp
into
leave
mov
adc
sub
sbb
mov
movsb
xchg
dec
roll
rol
rcl
mov
pop
fiadds
push
xor
pop
adc
xchg
loope
clc
inc
mov
mov
and
lods
jns
mov
shr
clc
jmp
sbb
xor
mov
mov
dec
push
in
stos
jno
iret
popa
jmp
xchg
xor
out
inc
mov
jmp
cmpsb
imul
xor
pushf
dec
push
add
loope
mov
lea
fisttps
movsb
sub
xchg
mov
pop
dec
sti
roll
jg
sahf
mov
ffree
aad
aam
dec
ret
xor
and
aam
xchg
call
faddl
jle
scas
sbb
cld
aad
cltd
out
mov
and
sub
fistpll
into
sahf
fcomp
sbb
fisubrl
movsl
unpckhps
lahf
shrl
add
out
in
xchg
mov
cmp
sub
inc
mov
scas
cmp
mov
xchg
aas
and
mov
insb
lock
mov
jo
es
inc
push
daa
jne
and
push
adc
scas
movsb
sysexit
lods
xor
sub
sub
pushf
ljmp
cmp
sbb
sarl
out
frstor
loop
std
test
xor
rorl
incb
lret
lods
cmpsb
xor
jbe
in
dec
dec
mov
int
xor
xchg
xchg
sbb
cs
add
pop
jl
push
xor
mov
sub
clc
sub
mov
jbe
jno
cmpsb
pop
mov
sub
pop
sbb
pusha
xchg
xchg
mov
rorl
cmp
inc
lock
pop
mov
mov
inc
jno
inc
mov
pop
ret
shrb
sub
mov
clc
jns
or
mov
inc
ret
inc
and
hlt
sahf
mov
mov
shl
loope
test
in
adc
push
adcb
add
inc
pop
inc
aas
ret
aad
or
mov
xchg
push
sub
mov
aas
xchg
sub
in
loopne
jge
cltd
int3
mov
lcall
add
add
xchg
adc
sub
outsb
std
aad
cltd
cmpsb
leave
mov
aaa
mov
call
je
jb
mov
cmp
filds
test
xchg
popa
outsl
movsl
mov
movsb
fwait
sbbl
mov
test
loope
mov
fnsave
in
loop
hlt
js
mov
cmp
jb
jge
aad
int3
add
sbb
in
les
and
lock
movsl
outsb
movsb
push
sub
xor
mov
inc
cld
dec
and
gs
out
aad
mov
jno
hlt
pop
dec
lahf
stc
cs
xchg
inc
sbbl
aaa
xbegin
int3
scas
jge
daa
in
mov
in
push
jecxz
ja
push
adc
push
mov
arpl
or
mov
xchg
rcl
mov
addl
pop
test
pop
andb
push
aaa
in
xchg
sub
sub
mov
or
lea
rorb
mov
dec
mov
jl
subb
pop
mov
sub
jno
test
into
popa
subl
add
mov
fistpll
xchg
add
mov
icebp
inc
inc
fbstp
mov
inc
insb
sub
mov
sub
test
out
enter
lcall
insb
andl
mov
mov
aas
cmp
cmpsl
mov
lods
sub
fstpt
negb
and
lds
dec
lea
adc
mov
xorl
test
jb
push
pop
popf
adc
cltd
mov
pop
cmpl
out
shl
nop
arpl
std
jae
or
mov
fucomip
imulb
repz
ret
leave
push
pusha
xchg
pop
movsb
jmp
int
repz
popa
jns
inc
push
inc
jns
jns
xchg
aaa
xor
cmp
negl
xor
dec
mov
add
and
inc
and
imul
and
or
sub
adc
xchg
pop
outsb
sbb
daa
jecxz
mov
push
inc
insb
cmpsb
nop
sub
jecxz
sbb
aaa
cld
aam
dec
pusha
imul
daa
push
dec
loope
hlt
push
fmuls
je
sub
divb
nop
pop
jno
in
adc
inc
loope
aaa
sbb
pop
mov
add
in
mov
pop
adc
push
loop
rcrb
sbb
lret
adc
enter
testl
push
in
push
or
shrl
movsb
sub
push
movsl
loopne
xor
cwtl
loop
jp
cmc
outsb
mov
mov
inc
ficoms
adc
inc
cli
add
push
mov
scas
leave
das
ljmp
inc
test
sahf
jmp
mov
cmp
pusha
mov
cmc
push
sbb
and
mov
jl
push
fcoml
mov
in
and
add
not
and
pop
push
jno
mov
shll
mov
icebp
sub
addr16
dec
popa
sbb
jns
xchg
mov
xchg
shrl
daa
xchg
insl
iret
jp
mov
xorl
mov
cmpsl
inc
sti
ljmp
popf
sti
mov
adc
sub
insb
insb
sahf
jge
sub
ss
dec
rcl
mov
push
cmc
out
or
daa
xlat
and
pop
dec
loope
xchg
mov
fldl2e
cmp
mov
add
test
bound
add
nop
pushf
push
mov
push
testb
cmp
aas
mov
xchg
push
sarl
cli
daa
and
fwait
push
loopne
int
adcb
repnz
xchg
inc
mov
adc
arpl
xchg
mov
jecxz
xchg
pop
push
icebp
std
xlat
sbb
jo
test
inc
imul
imul
and
test
cmp
fldenv
movsl
add
nop
inc
mov
out
jg
loop
xor
pop
iret
pop
jl
rclb
mov
into
stos
push
push
outsl
sti
stos
roll
daa
outsl
fistpll
aam
sbb
dec
aaa
push
inc
test
jg
jb
xchg
sub
xor
dec
inc
loope
orl
faddl
pop
mov
xchg
outsb
mov
lods
cmpb
xchg
frstor
lods
mov
or
and
je
sub
in
push
out
push
stos
or
fsubrl
pop
insb
mov
mov
in
test
notb
outsl
in
ret
je
sub
scas
ja
and
mov
dec
pop
into
leave
pushf
xchg
sub
aas
jmp
jbe
add
xchg
loope
jnp
mov
mov
push
jecxz
rorb
or
fsubl
mov
adc
sub
xchg
fistpl
test
dec
xchg
aam
insb
lods
outsb
fistps
lods
les
test
adc
in
pop
and
adc
das
push
cmp
pop
pop
pop
mov
mov
jmp
aam
fisttpll
pop
outsl
fildl
ds
sbb
dec
xchg
push
in
adc
pushf
xchg
jmp
in
in
arpl
push
mov
pop
pop
adc
add
es
sbb
or
fldt
push
jno
mov
insb
jmp
sbb
mov
xchg
roll
and
loop
mov
add
jnp
fcomps
dec
shlb
scas
adc
fstl
enter
rorb
outsl
pop
sbb
sbb
nop
mov
pop
add
xchg
pop
in
or
jg
or
call
jns
and
in
push
rorb
stos
xor
pop
std
in
mov
mov
mov
call
add
xchg
js
xorl
ljmp
stc
idiv
lods
sbb
mov
push
fsub
push
mov
test
fisubl
movsl
add
nop
repz
je
or
push
jo
jnp
out
lret
mov
test
mov
sbb
jno
pop
fisttpll
add
push
aaa
stos
xchg
imul
aas
pop
xlat
ret
inc
xor
xchg
insl
dec
shll
daa
xchg
xchg
daa
and
push
dec
mov
sbb
mov
cmp
xchg
mov
dec
xchg
xchg
push
bound
and
gs
cmp
imul
cs
jecxz
lods
lret
popa
mov
sbb
icebp
inc
mov
mov
lods
pop
loop
xor
mov
aad
test
push
pop
mov
cwtl
imul
and
adc
pushf
testb
popa
jge
test
outsl
movsb
jecxz
in
xchg
addr16
pop
push
aaa
cmp
sahf
out
xchg
or
pop
insl
jnp
mov
dec
insb
insl
push
out
or
sahf
sbb
into
push
sbb
out
out
sub
push
mov
in
dec
mov
mov
shl
sub
push
decl
jno
jb
push
out
insl
data16
add
push
sub
int
aaa
adc
out
stos
lods
xor
lahf
ljmp
sub
adc
adc
repnz
js
fadd
pop
push
loope
xor
pinsrw
orl
mov
mov
pop
fisttpll
pushf
jg
in
adc
cmp
or
dec
pop
fistl
lods
and
gs
dec
push
cli
gs
mov
cld
in
cs
pop
cmc
test
dec
inc
xchg
jge,pn
fcoms
ja
jno
ret
mov
lret
and
or
imul
mov
xchg
inc
gs
repz
push
je
sbb
movsl
rorb
scas
loop
pop
hlt
cmp
adc
mov
shll
out
push
or
andl
popf
sbb
popa
nop
push
in
mov
adc
mov
pop
cmpsl
add
xchg
pop
ror
mov
push
cmp
sti
dec
pop
dec
or
mov
push
enter
add
ret
jo
clc
std
pop
std
jo
cmp
xchg
mov
imul
ret
inc
je
and
addb
out
rcrl
sbb
mov
lahf
fistps
jle
add
jo
cmp
push
stc
test
pop
pop
pusha
sbb
dec
adc
mov
and
lds
cmp
in
ficoml
sub
fistl
push
ret
cli
pop
xchg
sub
in
xor
cmp
popa
int
lods
xchg
inc
cli
jl
or
mov
sbb
insl
pop
aad
cmp
jg
push
xor
cmp
add
adc
mov
leave
popf
adc
dec
jge
mov
or
push
lods
sub
fwait
ljmp
popf
sti
stos
dec
insl
adc
repnz
push
mov
loope
and
out
jg
lock
xchg
xchg
dec
jp
xchg
popa
aas
or
pop
mov
cwtl
xor
xchg
test
sbb
ret
dec
lcall
push
loope
jp
test
xor
xchg
inc
fnstcw
add
into
pop
mov
in
xchg
ja
add
pop
loop
outsb
lahf
adc
sbb
jge
mov
jecxz
cmpsb
popa
xchg
outsl
and
cmpl
shl
dec
test
sahf
daa
clc
dec
pushl
xor
dec
cmpsb
xchg
sub
push
and
push
sbb
adc
mov
or
clc
xchg
test
stos
scas
jge
xor
sbb
out
leave
jno
js
cmp
jl
insl
cmp
outsl
icebp
mov
adc
mov
jle
out
xchg
xchg
mov
mov
dec
xchg
jecxz
pop
lcall
aaa
sub
dec
adc
mov
add
outsb
jmp
std
jg
popf
dec
pop
mov
loop
cmp
xchg
mov
lret
test
out
or
lahf
sub
rcr
cld
movsb
sub
inc
xchg
push
cltd
jl
mov
cmp
ret
cmc
mov
les
mov
push
xchg
movsl
mov
out
mov
dec
xchg
cmp
in
rclb
out
mov
cmp
pop
mov
dec
enter
adc
xchg
insl
movsb
cmp
arpl
push
mov
dec
jg
ffree
pop
ret
jecxz
xchg
cmc
pop
rcrb
xor
cmp
sbb
mov
push
xchg
and
push
insb
fcmove
inc
in
xor
repz
mov
pop
jmp
and
out
and
popf
xor
push
mov
adc
jnp
ljmp
mov
mov
pop
jp
dec
scas
sub
scas
pop
xchg
icebp
loope
mov
lret
add
insl
test
sbb
push
jbe
gs
sub
xor
xchg
xchg
daa
cmp
inc
subl
stc
mov
xchg
movsb
lock
les
cmp
arpl
sarb
lds
xchg
and
xorb
adc
xchg
sub
out
in
mov
and
lcall
loope
outsb
testl
int3
loop
push
rcrl
mov
mov
xor
aam
xchg
dec
gs
and
mov
pop
shlb
push
ss
or
and
sub
sahf
inc
js
sbb
mov
push
pop
shll
xor
iret
mov
js
mov
hlt
lock
inc
xor
call
and
jg
sub
add
jecxz
xchg
mov
leave
xchg
xchg
mov
push
ds
add
inc
xor
sbb
push
xor
mov
sbb
pusha
int3
cwtl
jmp
test
xchg
ss
pop
nop
out
dec
ret
sub
jb
jnp
push
sbb
push
cmc
insb
push
adc
mov
sub
dec
mov
xchg
and
in
jb
test
lds
icebp
ror
outsb
sbb
outsb
loope
inc
stos
pushf
inc
stos
pop
ds
es
notl
faddl
gs
idivl
push
push
sbb
stc
inc
and
lret
xlat
jo
mov
pop
scas
cmpb
pushf
das
roll
std
gs
sbb
out
scas
jp
pop
test
cmp
loope
mov
in
aaa
xor
cmp
mov
out
lods
les
in
pusha
mov
dec
int
femms
les
ja
paddd
and
fimuls
and
pop
scas
cmp
ss
pop
add
jl
imul
cmp
cld
push
test
push
popf
inc
mov
cmp
mov
dec
adc
loope,pt
or
mov
mov
xchg
or
stos
jl
cmp
rolb
push
fldl
push
push
mov
push
mov
inc
cmpsb
and
imul
xor
pop
nop
sub
hlt
add
mov
arpl
jp
push
add
add
aam
frstor
mov
sub
es
aas
mov
fcompl
xor
push
ljmp
aas
jbe
loopne
push
sub
mov
mov
mov
cltd
jno
ret
xchg
insb
shlb
test
cwtl
jmp
fsts
mov
fwait
and
or
pop
mov
and
dec
and
mov
adc
mov
adc
jp
push
scas
movsb
pop
stos
pop
cmp
ja
fidivrs
dec
stos
push
mov
push
adc
scas
cmp
jnp
in
xchg
lods
pushf
lcall
pop
outsl
int3
aam
jecxz
dec
adc
stos
nop
mov
cltd
mov
sbb
xchg
xor
add
push
mulb
testb
outsb
movsb
dec
pop
xchg
jbe
push
push
je
aam
aas
xorl
pop
call
sbbb
jns
sahf
test
aaa
xchg
push
pop
fwait
scas
rcrb
sti
inc
mov
xlat
xor
fidivrl
pop
je
in
stc
adc
cmpsl
pop
mov
loopne
xchg
lock
xchg
dec
lahf
lcall
scas
and
inc
inc
mov
push
jmp
imul
pop
inc
sub
movsb
or
out
mov
out
add
mov
mov
ret
xor
cmpsb
mov
jo
addr16
gs
shr
jge
xchg
xor
dec
xchg
fisubs
scas
ret
cmp
shll
mov
push
mov
dec
outsb
cld
or
orl
addb
cs
pop
rorb
shrl
out
loop
mov
xor
dec
shrl
movsb
sub
jae
js
push
cmp
pop
scas
dec
inc
sti
sbb
cs
or
cmp
push
push
sti
jns
int
mov
lret
jl
repz
fcmove
popa
and
imul
dec
rcrl
stc
and
add
dec
dec
daa
in
push
int3
outsl
xchg
lods
in
mov
test
dec
or
dec
aaa
and
mov
test
mov
movsb
pushf
lods
push
push
mov
xchg
adc
inc
mov
dec
inc
and
add
mov
sub
xchg
sub
jle
andl
leave
insl
stos
xlat
les
jecxz
je
push
fs
push
sub
and
mov
ret
lods
dec
push
add
add
aad
mov
clc
sarl
sub
jle
xchg
jmp
and
in
scas
pop
nop
or
sti
and
cs
jp
repnz
inc
add
bound
lret
mov
cmp
lea
adc
xor
addl
xchg
sbb
arpl
mov
cmp
add
cltd
lahf
jmp
je
stos
arpl
loop
int
mov
inc
pop
lods
xchg
mov
push
xor
jle
fs
sbb
xor
push
inc
sbb
loope
in
divb
pushf
push
dec
inc
hlt
cltd
cs
std
cld
dec
xchg
and
jge
sub
mov
js
fwait
int
add
mov
jo
inc
mov
sbb
cli
jne
mov
ret
or
add
sar
mov
stos
xchg
and
faddl
xor
pop
incb
loope
lret
flds
in
out
lock
inc
leave
sub
push
mov
mov
pusha
add
sbb
pop
pop
aad
fldcw
cmc
jbe
cwtl
test
mov
xchg
leave
sub
mov
sub
scas
scas
mov
ret
sbb
sbb
xor
stos
lahf
sbb
test
dec
loope
jmp
and
and
out
sub
imul
loop
mov
mov
mov
adc
movsl
push
xchg
and
pop
jmp
mov
fwait
xlat
cmp
pop
and
and
xchg
outsl
stos
mov
test
std
aad
aad
push
xchg
clc
sarl
in
mov
push
sub
ret
fadds
outsl
mov
cmp
rolb
mov
mov
dec
lock
lcall
xor
xchg
popf
dec
lds
sbb
inc
jae
imul
sub
sub
mov
arpl
mov
out
lods
and
test
mov
pop
outsb
add
jl
or
mov
push
push
out
in
adc
mov
push
or
in
fists
push
lods
out
repz
dec
out
jmp
push
sbb
mov
cmpsb
mov
clc
fstps
push
adc
xchg
jne
clc
sub
xchg
aam
and
push
pop
cld
scas
push
dec
push
hlt
push
and
insl
inc
arpl
or
stc
or
mov
mov
inc
xorb
xor
cmpsl
jmp
addl
fsubl
adc
int
lcall
mov
xchg
cmp
push
loope
aam
cmc
in
xchg
sub
push
xchg
ret
xchg
and
xor
repnz
imulb
cmpsl
pop
dec
add
loopne
iret
dec
add
xor
sbb
out
pop
sbb
sbbl
aas
xchg
mov
add
and
xor
jecxz
cld
in
sbb
sub
cmp
daa
jp
xchg
mov
push
iret
xor
lcall
ret
pop
mov
cmpsl
scas
pop
daa
lea
adc
outsl
sub
cmp
movsb
je
decb
outsb
aad
pop
ret
ret
push
movsb
dec
cmp
adc
mov
in
loop
jne
int3
mov
inc
dec
jmp
and
adc
adc
std
loope
loopne
clc
cmp
in
and
outsl
iret
cmp
ljmp
jle
repz
mov
mov
in
leave
fs
enter
xchg
sti
jae
ret
mov
scas
adc
push
mov
in
std
pop
lods
pop
mov
jmp
cli
adc
fldt
shl
fstps
pop
mov
lods
outsb
andl
out
xchg
xor
xchg
sub
xchg
fwait
iret
cmp
mov
mov
mov
nop
icebp
mov
ja
repz
mov
push
inc
dec
loope
aad
mov
jns
stos
or
push
dec
fnstenv
sub
inc
mov
xor
inc
ret
insl
scas
enter
cmc
mov
mov
fnstcw
xchg
jnp
gs
xor
fcomp
fistps
inc
stc
jge
sbb
call
lods
lcall
and
and
lcall
sub
adc
sti
or
jmp
push
shrl
lods
cmpsb
dec
aaa
mov
ljmp
sbb
jge
mov
loop
lcall
xor
xor
pusha
sub
loopne
fnstsw
ret
adc
inc
data16
lret
js
add
xor
pop
pcmpeqd
fldenv
adc
mov
push
sub
pop
ffreep
cmpsl
test
fwait
scas
rcrl
dec
jbe
jae
adc
fidivrs
lds
or
fwait
rcrb
dec
sbb
pop
outsl
inc
in
in
xchg
out
and
sub
inc
adc
push
push
aaa
outsb
and
in
mov
nop
hlt
jnp
push
je
enter
sub
mov
and
mov
imul
xchg
cld
movsl
push
pop
mov
in
mov
ja
mov
stos
adc
mov
mov
mov
ds
in
pop
das
repz
add
pop
mov
pop
cmp
aam
out
addl
aas
test
fsts
and
mov
xchg
add
movsb
add
mov
and
pusha
loope
mov
or
int3
bound
pop
pop
ja
mov
push
insb
lock
sarb
sub
or
mov
pop
cmpl
repz
and
dec
lods
cmpsl
sbb
movsl
test
not
out
int
push
int
icebp
cs
enter
adc
add
aas
and
pusha
cmp
jg
stos
in
pop
inc
ljmp
mov
cmp
push
pop
pusha
in
sbb
add
lods
fcomip
xlat
pop
out
jno
stos
sti
push
fdiv
test
and
inc
cmp
pop
daa
cmp
push
xchg
add
mov
iret
push
subb
push
mov
jbe
sbb
push
jmp
test
daa
xor
fisubs
sbb
cmp
add
dec
movb
push
mov
jno
sarl
aam
xchg
push
mov
push
in
fldt
mov
mov
dec
fnstenv
push
push
or
inc
cmc
xchg
push
lcall
test
and
sub
jmp
or
das
adc
or
push
push
flds
sti
fnstenv
xor
xchg
jmp
pop
pop
ret
stos
cmpsb
addl
int
imul
sbb
and
loopne
inc
out
cmp
out
popa
mov
mov
jle
outsb
pushf
jge
outsb
dec
ja
jmp
pop
sub
xlat
clc
stc
and
sub
or
mov
outsl
sbb
push
repz
jge
push
pop
icebp
inc
adcl
dec
mov
mov
fsub
pop
test
inc
mov
or
or
jp
xor
mov
xchg
inc
clc
cs
add
bound
inc
and
leave
bound
mov
in
xor
movsl
push
inc
ret
xor
mov
pop
cmpsl
pop
mov
jne
and
and
ds
sub
push
movsl
aaa
fistpll
adc
inc
mov
jo
xchg
mov
cmp
adc
push
pop
push
and
xchg
daa
subb
xor
cmp
fwait
shl
in
mov
inc
xor
inc
dec
sti
adcb
fisttpll
int
and
inc
jmp
sub
out
test
ret
mov
les
ja
dec
add
faddl
lock
add
or
jo
loope
mov
push
mov
popa
mov
inc
imul
test
mov
push
clc
and
jne
xchg
vmovntpd
cwtl
fidivl
or
fsubr
mov
pushf
mov
adc
cmp
jno
add
lcall
xchg
push
mulb
insb
cmp
or
and
scas
ror
xchg
mov
sub
es
dec
cmp
add
aas
test
xchg
inc
fxam
div
lea
leave
jns
jns
insl
ja
lock
xchg
xchg
cmp
xor
push
and
pushf
xchg
cmc
xchg
dec
mov
sbb
mov
sub
rcrl
ret
inc
xor
aaa
mov
std
sub
movsl
adc
inc
jp
ret
push
sbb
adc
pop
lods
aad
mov
sahf
int
xor
dec
loopne
int
js
jecxz
jnp
pop
jmp
arpl
jnp
add
arpl
outsb
push
ja
adc
xchg
mov
popf
jmp
add
std
mov
sub
fsubr
xchg
jno
push
inc
gs
sete
int
or
jecxz
idiv
xor
das
test
xchg
test
shl
inc
mov
in
fs
cmp
sti
inc
cwtl
push
dec
in
mov
sub
lahf
vpsubusb
call
add
ret
jecxz
nop
pop
unpcklps
sbb
mov
mov
or
sbb
pop
adc
pop
shll
lea
addr16
shlb
xchg
je
mov
add
and
jge
lcall
inc
pop
dec
inc
and
xchg
loope
jo
mov
fldcw
xchg
call
xchg
jne
mov
dec
jecxz
arpl
jns
stos
inc
inc
cmp
scas
add
jbe
sub
dec
test
push
es
mov
aam
mov
fwait
pop
insb
mov
inc
cs
mov
aas
pop
int
mov
inc
cmp
test
popa
mov
movsb
insl
notl
icebp
mov
and
insl
push
sub
aas
aad
in
es
sbb
adc
iret
xor
icebp
orl
mov
push
dec
sbb
dec
mov
jno
jnp
les
ss
jg
ds
cs
mov
les
rclb
scas
sbb
addr16
mov
scas
dec
ss
push
and
mov
test
scas
ror
push
es
jle
leave
cmc
or
icebp
push
and
sbb
in
mov
cmp
stc
fisubs
pop
testb
leave
push
cmpsl
adc
popa
sarb
insl
cmp
lret
jbe
imul
mov
pop
enter
cmp
jecxz
jecxz
mov
inc
pop
js
pop
cld
jmp
cmp
pop
inc
inc
push
ret
lock
cmpsl
in
xor
fsubl
and
lret
in
adc
mov
pop
mov
aad
sysret
test
add
lods
imul
popf
cmp
mov
imul
jo
fidivs
mov
pop
add
sahf
aaa
jmp
sahf
mov
mov
mov
inc
fnstcw
mov
loope
int
popf
cmpsl
cmp
dec
movsl
pushf
cmc
movaps
daa
ja
cmp
mov
pop
xchg
loopne
xor
into
mov
loope
xchg
cmp
les
movsb
xchg
stos
shrl
pop
fidivl
cld
pop
pop
sub
push
mov
jmp
aad
cvtdq2ps
or
xchg
sub
xchg
and
jbe
mov
or
mov
cli
lods
xchg
inc
sbb
out
sbb
mov
mov
pop
mov
sbb
push
imul
popa
lcall
inc
insb
lret
pop
out
pop
inc
mov
xchg
pop
dec
mov
call
push
out
dec
sub
jmp
push
dec
sub
add
ds
daa
sub
nop
loope
dec
mov
jmp
out
dec
loop
xchg
outsb
je
jecxz
jle
lcall
xor
push
xchg
sarl
imul
sbb
fwait
xchg
in
dec
mov
adc
pop
lods
jbe
dec
jg
imulb
xor
push
js
in
lods
inc
mov
popf
inc
fwait
cmc
jo
roll
dec
dec
sub
popf
ret
clc
or
xorb
lcall
jl
nop
sub
mov
jae
lods
fstl
mov
mov
mov
fistl
sbb
shr
insl
nop
push
inc
sbb
stos
jmp
or
ja
cmp
leave
push
out
sub
pop
and
sti
jb
lcall
adc
xor
sbb
popa
add
shl
cmpsb
idivl
cmp
test
fs
insl
cmp
hlt
xchg
jmp
push
mov
or
aad
fistpl
dec
sub
jl
roll
xorb
fsts
xor
cmp
lods
mov
sahf
mov
out
jae
lock
std
push
pop
pop
and
jns
mov
iret
rcrl
lds
dec
push
sub
mov
sbb
inc
or
inc
sbbb
dec
sub
mov
mov
cmp
subl
das
sub
dec
testb
jge
lret
sbb
push
mov
fs
loopne
pop
in
adc
sti
xor
aam
adc
popf
sbb
push
mov
add
sbbb
adc
sub
dec
test
xor
ror
and
mov
mov
or
test
testb
dec
psubsb
or
aam
sbb
cmp
les
push
sbb
dec
mov
sub
jno
fdivr
cmc
mov
lret
sbb
aam
sub
dec
nop
mov
xor
mov
mov
pop
iret
imul
sub
aam
jo
int
pop
push
mov
and
in
adc
insl
mov
pop
rdpmc
lds
cli
cmp
aam
mov
lds
bound
stos
pop
fwait
adc
push
push
mov
sbb
out
lea
inc
xor
sub
jns,pn
scas
cmp
aas
stc
iret
loopne
lea
jns
jl
xlat
sub
cs
aas
int
mov
inc
cld
mov
pop
ljmp
inc
into
push
add
mov
cltd
dec
popa
loopne
negl
stc
aam
imul
mov
mov
mov
jnp
pop
insl
and
lock
xor
ret
and
dec
out
pop
mov
es
es
mov
fisttpll
enter
add
xchg
leave
cmp
cmp
out
enter
pop
mov
inc
mov
sti
popf
cs
xchg
mov
je
in
add
pop
ss
jl
or
push
push
or
sub
xchg
pop
int
pushf
popa
inc
pushf
lods
dec
sub
ret
aam
imul
pop
xchg
xorl
xor
sbb
dec
inc
push
frstor
sbb
sub
mov
es
inc
lahf
mov
out
xlat
xorb
stc
pop
fimull
cmc
lds
aas
sbb
cmc
enter
or
pop
mov
rcrl
fcmovbe
in
out
sti
xchg
test
movl
dec
das
jecxz
xor
insb
cmpsl
enter
insl
pop
or
mov
mov
mov
arpl
lcall
and
inc
or
in
jns
xor
add
mov
xorl
jecxz
mov
popf
dec
push
mov
push
cmp
icebp
add
hlt
dec
imul
rep
xor
cmpsb
ss
cmp
pop
dec
test
xorb
test
jae
jmp
inc
xchg
jne
roll
xchg
icebp
js
loope
xor
cmp
cs
mov
sub
inc
ljmp
xchg
out
adc
sub
mov
add
sbb
mov
inc
into
fsubrs
xchg
cmpsb
inc
xchg
cmp
mov
cwtl
out
data16
sub
xor
xchg
cs
test
movsl
pop
sbb
jo
test
hlt
jno
add
mov
xor
loope
mov
test
aam
shl
xchg
jmp
gs
adc
stc
adc
mov
pop
jnp
clc
and
mov
mov
scas
add
cmpsl
dec
ret
outsl
in
mov
cmovo
inc
mov
jmp
mov
mov
sbb
sbbl
adc
cmp
test
arpl
pop
rorb
out
xbegin
cmp
aad
scas
pushl
xchg
iret
repnz
ret
mov
or
and
xchg
gs
push
xor
rclb
into
lods
mov
lea
mov
fnstsw
sbb
jns
jne
push
fsubr
and
jo
inc
ljmp
add
sarl
and
xchg
xchg
sarb
mov
jns
mov
les
fmuls
icebp
mov
inc
inc
pop
ljmp
xchg
mov
insb
rcll
sahf
xchg
inc
call
lea
icebp
cmp
inc
inc
hlt
mov
fs
xchg
outsb
or
aas
stc
pop
xchg
sbb
or
pop
fbstp
xor
mov
loope
lret
mov
jmp
ja
adc
lcall
sub
enter
popa
mov
jge
mov
push
cmc
add
lock
adc
or
pop
xorl
jo
jg
adc
xor
sahf
sbb
idivl
les
push
cmp
jp
pushl
adc
rcrb
jno
mov
iret
mov
sbb
cmp
insb
add
movl
cmpsl
xchg
and
orb
mov
sbb
mov
data16
icebp
shrl
lock
cmpsb
and
or
out
xchg
mov
xchg
fwait
jb
in
jecxz
fs
fucomip
lret
sbb
into
mov
and
fildll
pop
enter
pusha
adc
jae
mov
xchg
mov
cmp
mov
push
ror
int
add
dec
testl
repz
sar
nop
sub
jb
push
adc
out
xchg
into
imulb
add
ret
push
push
pop
jg
xchg
popa
aas
lods
cmpsl
or
mov
dec
jle
pushf
mov
mov
xor
lods
aam
std
into
mov
pop
pop
dec
sbb
cld
pop
mov
mov
nop
xchg
imul
ljmp
addr16
lods
pop
sbb
lods
pop
shll
adc
mov
pop
xchg
shl
add
icebp
iret
scas
push
popa
aas
lahf
add
dec
push
ja
mov
mov
ret
bnd
cmp
jmp
lea
add
out
sub
test
hlt
cmpl
iret
lock
mov
lea
shlb
subb
mov
mov
jl
jbe
sub
cmp
pcmpeqb
mov
aas
cs
or
adc
sub
dec
push
dec
jb
mov
mov
pop
sbb
test
push
xchg
ljmp
cli
add
xchg
xchg
sub
xchg
or
jno
adc
std
dec
faddl
testb
cli
repnz
mov
je
cmp
push
mov
cmp
adc
fstpt
enter
mov
ds
cs
sub
add
add
sub
out
test
daa
lods
addr16
mov
and
mov
fcomps
push
mov
imul
adc
das
mov
dec
imul
xchg
jl
icebp
xlat
pop
sub
jnp
pop
out
xchg
xor
test
mov
scas
cs
out
mov
dec
mov
sti
bound
notb
push
cmp
in
cwtl
shlb
pop
hlt
out
mov
mov
lods
fsubl
pop
stos
popf
mov
or
js
and
int3
push
pop
jno
pop
jne
push
rcr
inc
mov
push
int3
dec
scas
rcr
js
dec
cs
in
mov
dec
mov
push
xor
xor
jbe
dec
push
mov
dec
and
inc
jnp
cmp
into
mov
pop
hlt
incb
mov
jl
add
daa
pop
sbb
in
enter
adc
dec
pop
xor
dec
shl
pop
jno
fnstsw
dec
das
xorb
into
mov
arpl
std
pop
dec
push
std
notl
push
sbb
mov
xor
into
negl
add
std
les
fisttpll
test
add
inc
jmp
ss
test
dec
xchg
out
dec
iret
adc
les
mov
movsl
xor
data16
loopne
mov
mov
inc
inc
ret
inc
jecxz
or
adc
mov
xlat
sarl
test
cwtl
inc
shrb
and
push
jp
inc
inc
inc
sub
outsl
fisttps
add
jecxz
testl
inc
leave
outsb
push
cmpsl
in
mov
pop
dec
cmp
push
add
mov
mov
arpl
fs
scas
cwtl
lcall
push
xorl
inc
push
pop
xor
xlat
fsts
mov
sub
dec
out
sub
mov
xchg
jg
fldl
popf
fcmovnb
mov
jns
in
cs
jge
push
or
popf
mov
adc
es
and
mov
adc
out
ja
inc
mov
sti
stos
jmp
lods
repnz
sub
sub
push
adc
inc
sub
push
xchg
iret
int
into
fsubl
mov
inc
lock
bnd
sbb
nop
inc
dec
in
sbb
xchg
pushf
clc
rorl
jbe
ret
push
cmovo
ss
cli
jl
fwait
adc
je
add
jae
cltd
dec
push
sub
mov
sub
push
mov
cmc
loopne
mov
int
ljmp
test
xchg
xchg
bound
mov
pop
adc
mov
je
push
ljmp
fcmovb
jb
mov
add
xor
stos
out
push
inc
and
popf
jge
pop
sub
or
add
cmp
bound
xchg
lods
pop
cs
std
repz
cmpsb
js
rol
push
jge
jbe
mov
pop
into
getsec
push
loopne
mov
fistpll
push
bound
sar
and
xor
gs
mov
ret
adc
nop
pop
rcrl
inc
jno
scas
repz
lods
cltd
xor
stos
daa
jg
pop
mov
mov
sub
mov
mov
push
pop
cwtl
sbb
jecxz
das
and
jae
dec
or
push
push
mov
aam
ljmp
std
and
push
inc
lock
mov
mov
and
ja
dec
fsubrl
outsl
fcompl
cmp
jo
xor
or
dec
pop
mov
mov
pop
inc
add
pop
and
loopne
mov
sahf
cwtl
jle
cmp
push
or
shrb
xchg
cmp
sub
xchg
sub
cmp
loop
xor
inc
xchg
cmp
push
add
mov
roll
decl
xchg
test
jnp
mov
test
cltd
idivb
push
fstl
sub
xor
ret
xlat
jnp
incl
aam
jmp
jge
enter
push
rclb
add
stos
dec
xchg
xchg
andb
dec
dec
or
das
in
fsubrl
ret
mov
ja
jl
sarb
push
push
mov
pop
imul
movsl
arpl
mov
inc
popf
and
mov
adc
fwait
xchg
gs
jge
adcb
pop
in
lcall
lock
xchg
xchg
dec
xchg
outsl
sub
out
dec
lods
mov
cmpsl
cmp
push
mov
popa
ffree
sub
rorl
xorl
mov
addl
les
int
push
jo
nop
mov
popa
out
jl
iret
and
mov
xchg
inc
cmp
jo
insl
aaa
iret
pop
sahf
lods
out
cwtl
mov
and
rclb
out
mov
sahf
scas
cmp
sarl
xor
sub
push
lcall
test
movsb
call
mov
jo
call
cwtl
or
popf
mov
inc
pop
fdivrl
aad
shlb
sbb
or
pop
aaa
hlt
xchg
sub
out
jb
pusha
sub
clc
sbb
xchg
adc
ss
mov
pushf
out
shl
aam
mov
dec
cmpsb
push
mov
fidivrs
test
int
aas
lock
insl
sbb
repnz
gs
dec
sub
out
sbb
in
lock
lds
cmp
pop
mov
roll
push
push
jne
int
insb
xorb
sbb
popa
jl
test
fdivs
ds
dec
mov
sub
lret
int3
mov
movsl
mov
iret
negb
out
ret
test
adc
cmp
xlat
or
movsl
es
mov
fcomps
adc
jmp
subl
mov
xchg
jle
sub
xor
stos
cltd
and
mov
cli
jmp
popf
das
nop
and
iret
jno
prefetcht0
es
push
xor
outsb
pop
shlb
push
pop
out
inc
cmp
cltd
xchg
movsb
std
mov
pusha
or
shll
scas
dec
pop
mov
mov
dec
inc
xchg
and
cmpsb
aam
pop
hlt
and
mov
jo
cld
lahf
sbb
fsubrl
xchg
jno
xchg
test
mov
push
pop
cmp
cmp
pop
jo
out
popa
pop
push
mov
insl
push
cmp
das
sbb
fidivrs
inc
push
sub
fsubs
stc
mov
addb
and
mov
mov
in
out
sub
jno
ret
push
in
cmp
mov
cmpsl
pop
outsl
xchg
or
lods
and
stc
aas
or
mov
nop
and
jecxz
in
movsb
push
in
xchg
sbb
mov
jmp
push
dec
xor
push
xlat
shrl
movsl
and
lcall
cli
mov
enter
rol
sub
bound
xor
cmc
xor
jae
pop
xchg
cmp
movsb
aaa
xchg
inc
outsl
add
loopne
xchg
mov
cmp
jge
repz
jo
push
stos
add
aas
dec
inc
imul
pop
mov
std
movl
push
mov
mov
loop
add
mov
push
out
pop
add
mov
hlt
rorl
shl
shrl
addl
lea
xchg
mov
xchg
lret
mov
test
push
aam
xor
cli
rorl
rcrl
pop
arpl
cmp
mov
insl
lds
xchg
pop
subb
lock
adc
stos
xchg
xchg
nop
pop
in
jge
pop
mov
mov
test
ret
jmp
aam
dec
or
cmp
addl
and
aam
sub
add
jg
rorb
popf
popa
in
sub
stc
sahf
movsl
loope
dec
xchg
cli
outsb
fwait
mov
cmp
stc
inc
inc
out
xchg
sub
mov
jns
sub
jl
mov
scas
insl
aas
jle
xchg
repz
xchg
cld
fsubrs
daa
add
es
dec
int3
fmulp
nop
dec
popf
xchg
ds
inc
push
mov
sbb
pop
lret
outsb
aaa
mov
lret
imul
add
mov
gs
xor
popa
rol
pushf
push
pop
stos
movsl
mov
and
mov
pop
cmp
sahf
push
mov
adc
lahf
push
into
dec
xchg
movl
nop
pop
stc
lods
std
jb
inc
mov
xchg
dec
jecxz
pop
rcrb
js
inc
xchg
mov
imulb
insl
aaa
fucomi
and
sub
repnz
xchg
pushf
sub
pop
mov
mov
in
rcll
pop
test
aam
loopne
and
inc
outsb
aad
nop
xchg
je
icebp
imul
mov
cltd
mov
mov
cld
or
push
jmp
cld
xchg
sbb
lcall
lods
xor
dec
sbb
sbb
std
ja
enter
nop
loop
mov
or
dec
push
push
loope
xchg
cli
test
es
ret
dec
fwait
push
cmp
mov
fidivrs
push
daa
rcrb
xorb
inc
xchg
int
dec
fnstsw
cmp
popf
in
cmpsb
add
sub
pushf
imul
mov
push
aad
sub
nop
pop
pushf
xchg
inc
mov
pop
mov
arpl
ss
jo
push
mov
jno
inc
lcall
and
xor
jo
pushl
divb
cltd
sub
add
push
dec
dec
jno
jle
push
push
sub
lret
add
jbe
push
push
popa
cs
push
icebp
mov
sub
pop
inc
mov
das
xor
mov
test
sarl
or
es
push
rol
or
cli
movsb
int3
add
inc
imul
push
test
mov
mov
add
or
fists
stos
into
mov
sbb
in
outsb
dec
pop
adcb
sub
add
stos
or
mov
xchg
push
xor
dec
dec
adc
dec
test
std
mov
mov
dec
int
insb
mov
lea
pushf
mov
jg
and
cmp
aam
jb
and
xchg
lea
push
mov
fiaddl
or
es
sub
sbb
cmp
jg
mov
andl
or
jae
xchg
adc
sbb
inc
fstpt
inc
mov
pop
xchg
pop
hlt
add
call
pusha
std
ljmp
arpl
or
cmpsl
rcrb
dec
bound
push
iret
mov
pop
push
por
pop
movl
dec
arpl
pop
outsl
movsb
sub
cmpsb
jno
popa
addr16
int3
movsb
mov
lock
int3
fs
lods
jmp
xchg
mov
xchg
xchg
mov
clc
cs
jno
lret
xor
fildll
push
test
ds
cmpsl
test
sub
push
xor
and
jmp
test
push
adc
insb
repnz
add
stc
leave
jae
pop
adc
jnp
test
cmpl
clc
push
sub
addr16
js
pop
lret
jno
fsubr
out
sub
test
subb
push
mov
inc
push
push
xchg
out
int3
decb
loope
mov
addr16
mov
test
and
push
enter
lret
sub
clc
mov
mov
ja
adc
fistl
add
lods
adc
dec
dec
iret
sbbl
stos
loope
and
sahf
fs
xor
lret
fmuls
int3
loop
imulb
mov
sub
cmpsb
cmp
inc
mov
or
imul
data16
fdivs
or
xlat
sbb
testb
add
jns
iret
rorl
sbb
inc
sub
sub
cwtl
aas
mov
in
inc
xor
clc
add
mov
xchg
jb
lock
or
aad
mov
stc
fmuls
aam
dec
sbb
pop
fld
jp
mov
movsl
lahf
xchg
xlat
cld
pop
pop
lret
pop
jmp
nop
or
loop
movsb
icebp
mov
lret
sub
into
aas
lods
cmp
cmp
xor
frstor
imul
gs
sbb
push
movsb
mov
and
pop
pusha
jl
popa
lods
imull
inc
fwait
int3
ja
xchg
xchg
mov
xchg
cld
dec
sarb
out
cmp
lea
or
jnp
rcrl
addl
cld
out
rcrb
adc
outsl
imul
pop
jmp
inc
sahf
push
mov
data16
iret
pop
push
test
sbb
pop
out
mov
sub
xor
aas
movl
mov
bound
sti
ja
lret
dec
lods
nop
out
notb
hlt
scas
xor
dec
sub
nop
fisttpl
cmp
add
add
adc
cmp
decb
jle
out
aad
xor
scas
lds
and
pop
and
xor
add
and
into
jbe
scas
decb
repnz
adc
jbe
in
call
or
mov
push
add
jge
in
cmpsb
sub
fldcw
data16
push
mov
mov
enter
aaa
cmp
rcrb
jg
sub
adc
fwait
dec
int
imul
push
xor
and
int
pushf
mov
inc
mov
imul
cli
jne
xchg
cmp
aad
adc
flds
imul
lret
xchg
arpl
imul
inc
jecxz
inc
rol
test
sub
pop
push
mov
insl
loop
sti
jbe
std
xchg
and
add
add
pop
pop
sbb
mov
rolb
mov
dec
mov
adc
pop
into
mov
shrl
mov
sub
sub
or
push
lcall
xor
sub
adc
push
pop
cmp
pop
adc
stos
inc
and
and
das
dec
mov
ds
lret
add
add
sbb
mov
xor
xchg
xchg
sub
sti
push
mov
inc
add
test
jg
in
push
add
jp
xchg
arpl
push
out
push
lcall
xchg
add
fisubs
rorl
jge
test
pop
or
pop
push
sbb
pop
push
add
pop
insl
mov
and
mov
mull
xchg
pop
jne
jbe
or
xchg
xchg
loope
mov
dec
imul
sarb
pop
xor
jg
les
aam
arpl
test
or
lods
mov
pop
out
mov
dec
ret
dec
popa
fisubrl
inc
sub
dec
sub
adc
xchg
aad
notl
push
sub
lock
jecxz
fwait
test
mov
daa
into
shll
adc
outsb
lods
adc
hlt
xchg
jecxz
loopne
popa
and
testb
les
xor
std
dec
aaa
out
sahf
movsb
shll
popa
fnstsw
rolb
pop
movsb
inc
sbb
in
or
inc
gs
jb
pusha
rcll
imull
cs
gs
les
mov
mov
sarl
aad
dec
scas
push
inc
loope
int
inc
sbb
push
sar
cmpsb
cwtl
or
mov
adc
xchg
or
jns
pop
dec
and
aam
stos
daa
xor
aam
xchg
cmp
push
cmc
addb
in
jbe
idiv
pop
or
test
cmp
test
icebp
cld
sub
lock
stos
jnp
inc
mov
fnstenv
sub
adc
fiaddl
not
sub
pushf
sbb
insb
pop
outsb
sub
jecxz
inc
or
cmp
fs
pop
adc
repnz
fwait
out
call
imull
mov
loop
das
push
xor
aas
xchg
mov
push
pop
rolb
cmp
rcll
in
mov
mov
jp
out
stc
aam
inc
xor
cmp
mov
or
xor
stos
cmp
pop
or
loopne
sub
push
aam
xor
fstl
mov
jae
mov
jg
iret
cs
lret
and
sub
xor
mov
iret
aaa
add
jns
push
decl
inc
dec
lods
sti
xor
xchg
cs
push
pop
or
push
lcall
mov
bound
stc
pop
dec
or
jp
daa
out
xlat
idivb
lret
pop
or
popa
lods
and
sbb
stos
pop
push
test
adc
insl
jg
test
movsl
mov
jl
out
fs
xlat
mov
mov
or
push
repnz
mov
fnstenv
movsb
mov
mov
dec
cld
stos
mov
insl
push
mov
test
or
out
mov
int3
push
in
movsb
mov
lea
nop
cmp
aas
push
test
or
fimull
push
mov
sub
push
repz
divl
test
nop
data16
push
push
xchg
xchg
pop
out
inc
fcmovbe
int
jl
enter
jmp
sub
sbb
inc
das
cmp
push
cltd
push
pushf
push
jecxz
and
mov
ret
ret
mov
repnz
arpl
fistl
fimuls
xor
lcall
push
bound
mov
in
jecxz
movsb
inc
jp
sbb
push
push
mov
fwait
pop
mov
int
lds
scas
das
dec
pop
testl
push
xlat
test
sub
xchg
rolb
xor
push
ret
and
jae
int
ds
test
shll
lds
insb
clc
outsb
and
ret
imul
in
rorl
mov
sahf
adc
lock
sub
loop
lahf
sub
test
repnz
sahf
xchg
cmp
xor
pop
dec
and
dec
mov
xchg
jbe
stos
mov
dec
in
addr16
mov
shrl
push
jg
jae
mov
scas
cwtl
rcl
push
adc
test
mov
xor
stos
lcall
cmp
dec
pop
cmp
fsubrp
xor
pop
cli
mov
xchg
stc
sbb
and
push
jle
lea
jno
pushf
leave
sti
xor
mov
jg
dec
mov
or
rorb
clc
mov
pop
rcrb
aad
adc
lret
insb
mov
pop
mov
outsb
scas
aas
push
inc
dec
pop
test
mov
outsb
xor
fcomps
xor
xlat
aas
sub
out
pop
dec
pop
in
in
jmp
shl
lret
inc
and
sbb
imul
shl
add
xchg
out
fwait
punpckhwd
pop
xor
ficoml
pop
jecxz
inc
pop
ror
pop
mov
dec
call
jnp
pop
lds
ret
xlat
dec
cs
xchg
and
aas
pop
or
add
push
cmp
imul
and
xlat
jno
sbb
iret
cltd
aaa
jnp
adc
and
cmp
inc
jmp
repz
add
pop
lods
mov
sahf
stos
icebp
repnz
xchg
jo
aaa
adc
jnp
xchg
loop
mov
adc
mov
test
sub
xchg
adc
xchg
fwait
lea
icebp
sahf
outsb
lret
imul
notb
or
clc
push
mov
imul
or
fwait
sub
ljmp
adc
test
cld
lcall
push
xor
pushf
push
push
pop
lock
mov
insl
pop
mov
push
test
imul
push
aas
sbb
pop
aas
add
add
push
sub
pushf
xor
pop
movsl
ret
push
int3
loope
push
imul
shrb
mov
test
test
shrl
mov
rol
retw
xchg
jp
push
dec
lcall
jo
out
or
outsb
inc
mov
mov
inc
int
sahf
mov
jbe
loopne
aas
out
inc
sbb
push
imul
movsb
dec
rclb
mov
ret
testb
dec
rcr
sub
xchg
fldcw
fiaddl
mov
cmp
xchg
movsl
leave
sbb
cmp
cmpsb
cmp
movb
js
xchg
ret
imul
mov
sub
stos
sbbl
fs
negl
cmp
das
push
test
cltd
test
in
inc
sub
mov
pusha
das
push
dec
jge
or
stc
cmp
fwait
pop
mov
ljmp
sbb
scas
lds
ret
fcmovnu
and
jae
push
fisttpll
adcl
mov
jae
imul
mov
push
icebp
ret
fdivs
and
sbb
decb
add
ret
insl
mov
and
inc
ljmp
dec
sub
dec
movsl
sub
xchg
aas
ss
jb
insb
xlat
cmp
test
dec
fs
jb
and
pop
test
xchg
rclb
aam
pop
mov
ret
sub
enter
jl
and
shll
add
inc
mov
xor
or
movsb
pop
int3
out
push
mov
sbb
push
fs
pop
ljmp
mov
mov
push
lock
rcrl
stos
lcall
cmp
mov
shll
mov
out
add
sti
lret
jge
dec
mov
in
sub
jne
sub
cld
lret
jbe
inc
in
test
cmp
pop
pop
imul
inc
gs
jp
sub
je
aad
mov
ja
cmc
inc
add
imul
jns
out
push
adc
xchg
mov
mov
push
stos
inc
push
mov
sbb
add
cwtl
dec
mov
dec
loopne
into
loop
inc
adc
xor
sbb
xor
inc
js
fs
lret
lock
and
dec
clc
andl
xchg
pushf
jg
cmp
sahf
and
mov
pop
into
das
out
std
inc
lahf
sbb
add
loop
mov
sbb
cmp
ja
pop
in
jns
stos
xlat
nop
push
cmp
cmp
push
jb
dec
shrl
pop
rol
and
mov
subl
lods
jmp
dec
jae
inc
loope
negb
rclb
mov
xor
lea
pop
xor
icebp
movl
shr
mov
push
mov
test
aam
pop
adc
sub
outsb
aam
mov
mov
xchg
sahf
into
sbb
ret
std
cmp
add
dec
add
cmp
fcom
pop
xchg
and
icebp
mov
mov
iret
push
xchg
repnz
lds
flds
dec
mov
iret
or
das
xor
sbb
mov
sti
sti
mov
xor
jae
loope
lods
dec
bound
out
loopne
pusha
bound
mov
shlb
pop
in
xchg
testl
jo
int
jnp
or
into
rcl
adc
stos
xchg
lea
lea
hlt
pop
or
xor
in
xor
mov
push
jge
loope
jnp
mov
mov
leave
push
movsb
jg
das
xor
std
or
ljmp
ja
xor
mov
cs
mov
xchg
cmp
xchg
test
xchg
and
in
rcr
outsl
dec
cmpsl
pop
lcall
shl
test
sti
fst
push
jne
dec
pop
pushf
test
inc
push
sbb
xchg
loope
adc
dec
shll
xchg
pop
icebp
fstl
xlat
dec
add
pop
jnp
jl
lret
jb
add
dec
mov
outsl
pusha
xor
add
fs
jecxz
jge
push
in
cli
jmp
mov
inc
ret
test
bnd
pop
shrl
out
repnz
sti
mov
cmc
notl
ja
sub
sti
ljmp
mov
inc
adc
rcrl
repnz
xchg
out
popa
outsb
mov
pop
imul
inc
jecxz
sbb
sub
mov
mov
add
std
mov
xchg
ds
stos
and
gs
pusha
or
cmp
js
add
cli
in
jnp
cmp
call
je
sahf
je
mov
dec
add
shlb
ja
cmp
xchg
test
test
outsb
scas
fisubrs
and
sbb
mov
jae
mulps
sub
out
aaa
fdivl
jp
and
repz
mov
lock
cwtl
add
testb
sbb
jge
jmp
xor
or
xchg
icebp
test
stc
mov
push
xchg
rolb
test
lock
shr
add
xor
mov
insl
cmp
jns
dec
mov
mov
mov
fisttpl
sahf
psrlw
scas
sahf
mov
imul
nop
jge
lret
xchg
cmpsl
or
cmpl
andl
push
push
push
inc
je
pop
inc
shrb
adc
in
dec
xor
xchg
push
mov
insb
call
int3
dec
sbb
and
sahf
sbb
mov
cmp
cmp
xchg
sar
adc
sub
nop
insl
js
into
pop
movsb
and
sti
jb
lahf
hlt
cmp
adc
fcoms
arpl
adc
mov
add
das
cmpsl
push
pop
out
cmp
cmp
in
push
lret
repnz
lods
decl
dec
push
mov
add
mov
inc
int
pop
mov
ja
cmp
jg
jb
popa
stos
sbb
mov
or
test
jmp
adc
xor
sbb
std
sbb
inc
pop
scas
and
inc
add
sbb
pop
pop
insl
mov
jo
inc
adc
xchg
or
fsubrl
fistpll
pop
iret
aaa
mov
sub
int3
and
test
fnstenv
std
push
mov
je
lahf
jmp
int
add
pusha
pop
sti
adc
and
fwait
repz
stc
jns
push
loopne
mov
mov
sub
jge
aaa
dec
jno
dec
push
cltd
out
scas
cmp
lahf
mov
sbb
lods
sub
mov
and
addl
loope
jbe
aad
and
nop
dec
push
rorb
mov
pop
cmp
pop
push
test
repnz
cmp
aad
test
xchg
and
xor
or
lahf
aas
out
out
cmp
shl
xlat
mov
xchg
insl
mov
pop
cmpsb
mov
and
inc
xchg
dec
push
loope
aaa
sbb
and
xor
mov
in
data16
dec
cmp
pop
dec
and
or
fsubrl
ja
insl
test
jae
mov
sbb
iret
stos
pop
aaa
stc
dec
shl
cwtl
insl
mov
das
pop
bound
xchg
arpl
lret
mov
in
cmpsb
loope
push
cmpb
mov
enter
cmp
xor
push
xor
xchg
jge
pop
sub
sub
add
jne
sbb
xorl
andb
imul
mov
add
popa
in
in
push
mov
ja
cmc
and
or
mov
add
xchg
enter
jle
imul
xchg
mov
std
outsb
stc
repz
adc
outsl
les
test
ss
out
cmp
ds
xchg
std
xor
jb
imul
es
fwait
insl
and
xchg
cmp
pop
push
addr16
rolb
add
aam
mov
addr16
dec
scas
ret
es
shrl
xchg
mov
imull
pop
idiv
adc
pop
add
mov
xor
sub
inc
out
clc
out
mov
scas
stos
cmp
sub
testb
nop
movsb
ret
or
rcrl
xchg
inc
dec
aaa
jbe
popa
rcr
in
add
sub
add
in
add
adc
pushf
daa
or
mov
jno
dec
push
jb
fimull
dec
dec
and
pop
icebp
sub
and
sti
jnp
fwait
cmp
aaa
or
sub
popa
jmp
jg
lea
and
pop
or
adc
addb
push
and
push
mov
mov
lret
dec
push
push
idivl
mov
loop
icebp
out
or
push
rolb
insl
xor
or
push
lods
test
push
add
mov
mov
mov
sub
imul
xchg
mov
xor
addr16
sub
xchg
cmc
jecxz
jns
xor
sub
pop
repnz
icebp
mov
jmp
dec
test
add
jge
inc
pop
mov
xchg
sub
xchg
lea
imul
es
shll
mov
adc
in
xchg
in
lret
sahf
mov
repz
and
push
aam
jns
mov
mov
ljmp
cmpl
jge
inc
je
testb
dec
cli
sub
adc
sub
pop
movsl
hlt
outsb
stc
leave
xor
stc
cmp
sbb
aas
push
icebp
mov
std
sti
or
leave
stc
test
int3
insb
ret
push
jg
adc
or
dec
dec
add
out
add
lds
cmpsl
lret
sub
sub
aad
cmp
sbb
push
stos
xor
pop
mov
or
add
push
lods
dec
aaa
sarl
xchg
and
adc
movsb
enter
call
push
jb
fisubrs
iret
cwtl
sbb
nop
in
dec
movsl
in
push
cmp
or
dec
xchg
mov
cmpsb
adc
and
or
inc
fildl
test
xchg
ljmp
in
dec
inc
scas
and
xchg
icebp
stc
xchg
nop
jae
ja
movsb
mov
mov
mulb
clc
sub
mov
mov
push
hlt
push
mov
outsb
hlt
pop
lcall
xchg
scas
dec
inc
and
orb
dec
sub
arpl
add
push
sub
mov
fs
xor
cmp
cmp
jp
hlt
jg
daa
push
adc
sub
sub
jg
jecxz
int3
jg
push
stos
jle
xchg
sub
jbe
or
imull
jmp
lods
jns
mov
insl
mov
cli
mov
xchg
ljmp
popf
icebp
movsl
ds
or
or
push
outsb
jmp
add
fs
adc
mov
adc
or
jno
and
iret
movsb
xchg
xchg
movsl
or
lret
mov
mov
cmpsb
call
add
pop
popf
movsl
push
sub
xchg
leave
fstp
jp
out
pop
rolb
sub
xchg
sbb
dec
mov
gs
test
lahf
into
test
and
jns
ret
test
mov
leave
movsl
mov
or
jecxz
outsl
jno
aad
sub
mov
lods
icebp
out
addl
cli
pop
mov
xchg
sub
call
lds
ds
jnp
aas
mov
push
loope
push
mov
lods
mov
rcrb
push
mov
mov
or
xor
in
call
mov
mov
xchg
sti
push
pop
pusha
mov
ret
addl
aad
mov
adc
pop
jo
add
leave
jg
das
lea
dec
push
test
mov
add
outsl
dec
adc
mov
or
cmp
mov
insl
pop
cmp
call
data16
pushf
mov
sub
in
test
das
leave
fimuls
cltd
pop
fsts
sub
div
mov
push
sbb
xorl
xchg
push
int
xchg
fidivrs
xlat
lahf
lahf
inc
dec
andb
dec
cli
gs
jo
sbb
jb
xlat
and
inc
pushf
fsubl
inc
xchg
daa
push
or
sti
in
adc
xor
cmp
clc
cld
pop
xor
pop
lock
inc
push
les
add
mov
test
arpl
jge
mov
and
icebp
inc
pop
in
popa
popf
test
out
stos
xorl
adc
mov
xchg
mov
jecxz
xchg
pop
notl
xor
dec
into
testl
sub
mov
sub
ret
out
decl
sbb
cmp
or
adc
andl
pushf
xor
ljmp
out
in
xchg
out
aam
in
xor
push
gs
pop
mov
pop
add
adc
inc
mov
cmpsl
std
xchg
rcrl
inc
inc
pop
mov
cmp
ret
xchg
mov
or
adc
addr16
cmp
cmpsl
loope
mov
jge
outsl
xchg
mov
addr16
dec
jns
mov
out
data16
jle
shll
mov
cmp
and
cltd
mov
push
pop
clc
pop
out
sub
popa
es
xor
ret
jge
push
add
pop
mov
ljmp
push
cs
test
adc
out
pop
jg
sahf
sub
dec
jl
xchg
sbb
loop
fstpt
push
das
adcb
clc
adc
movsl
inc
push
rclb
push
cmp
pusha
je
mov
sub
ret
in
ret
fisubs
testl
sub
mov
imul
xchg
ljmp
mov
xchg
cs
inc
or
jns
or
gs
xor
adc
pop
and
push
jns
cmp
xchg
lods
js
das
insb
pusha
mov
pusha
roll
shll
and
jbe
test
adc
cltd
jbe
enter
inc
adc
out
fs
adc
leave
cmpsl
sbb
sbb
mov
cmc
imul
xor
fstpl
lret
roll
dec
mov
insb
fildl
xchg
jae
xchg
adc
cld
ret
cltd
push
in
or
xlat
mov
add
cmc
mov
jbe
dec
movsl
push
sub
mov
sbb
addl
inc
mov
outsl
test
lods
pop
orb
setbe
xchg
sub
or
cli
and
imul
push
sbb
mov
outsl
jg
subl
jle
sub
xor
xchg
das
and
insl
hlt
aas
gs
pop
mov
jae
imul
arpl
test
pop
iret
cltd
sbb
outsl
dec
add
xor
mov
js
jge
jne
in
inc
stos
repz
jne
ficompl
add
test
test
lret
adc
cmp
cmp
test
sbb
lahf
and
sbb
mov
sub
pop
notb
pop
sub
pop
lea
scas
jge
dec
mov
imulb
movsb
dec
orl
mov
pop
mov
cwtl
xchg
aad
lea
dec
jmp
sub
sbb
xor
xlat
add
pop
loopne
jmp
jp
test
fisttpll
lcall
ret
push
dec
mov
mov
xlat
mov
mov
mov
dec
dec
scas
mov
jecxz,pn
test
loopne
fwait
ds
cmpsl
enter
ljmp
stc
inc
sbb
dec
pop
xchg
cld
test
sub
or
loope
xchg
mov
gs
aas
ds
pop
leave
clc
das
mov
ljmp
mov
lret
mov
je
hlt
icebp
scas
in
aaa
stos
mov
loopne
fdivrl
icebp
dec
mov
and
pop
xchg
sbb
scas
jnp
mov
and
jbe
and
xchg
stc
fimuls
sarl
xor
mov
pop
dec
subb
scas
xchg
idiv
int
mov
sbb
adc
ja
inc
xchg
or
push
dec
mov
mov
scas
data16
add
stc
mov
in
dec
out
or
add
mov
scas
mov
shrb
test
pop
mov
arpl
mov
or
rcr
jecxz
out
dec
out
xchg
or
hlt
push
xor
xor
add
popf
outsb
dec
mov
rolb
cmp
sub
jmp
out
out
pop
sbb
cmpb
nop
imul
shlb
adc
push
dec
dec
aad
push
xchg
cli
inc
aaa
and
pop
out
fstps
les
in
imul
or
cmp
inc
push
xor
call
or
sti
ret
xor
fiadds
sbb
dec
and
ss
fdivrl
out
out
call
imul
movsl
test
jo
call
test
inc
or
inc
icebp
mov
pop
xor
mov
sti
or
out
insb
icebp
std
pop
jo
idivl
stc
push
arpl
mov
sti
sbb
xchg
push
dec
call
add
mov
pop
or
xchg
mov
orb
jno
and
xchg
and
push
cmpsb
pop
orb
insl
push
in
popa
mov
shll
out
or
js
or
je
inc
scas
icebp
sbbl
xchg
test
pushf
ret
xlat
loope
xor
add
inc
outsl
call
or
adc
sub
mov
cmp
or
movsb
and
repz
push
test
adc
adcb
sub
data16
out
dec
push
sbb
jnp
sub
push
insl
and
idiv
in
ficompl
adc
sub
pop
and
dec
mov
stc
pop
sub
icebp
push
jns
loop
jns
sbbb
nop
mov
pop
jmp
dec
movsb
mov
inc
mov
test
jp
mov
add
cmpsb
mov
xchg
sbb
mov
push
dec
push
scas
imul
jmp
push
push
dec
outsb
dec
xorb
mov
rcr
lahf
inc
dec
dec
mov
mov
or
sarl
add
jg
adc
fs
dec
sti
push
dec
subb
jge
std
cmp
out
loope
cmp
pop
jecxz
cltd
inc
lret
imul
imul
pop
lea
arpl
call
xchg
enter
dec
fucomp
dec
jno
lock
adcb
jae
jg
and
push
movsl
mov
adc
xchg
insl
pop
push
repz
aaa
push
pop
and
aad
dec
ret
iret
jmp
adc
xchg
lods
das
sti
insl
cmpb
insl
inc
movsl
cltd
push
mov
movsl
rolb
gs
testb
cmp
inc
std
fdivrs
mov
mov
xchg
insb
lods
mov
bswap
shl
sub
dec
pop
mov
pop
je,pn
popa
push
mov
lods
inc
push
sub
mov
test
jbe
mov
pop
fildl
mov
pop
mov
dec
fadds
ljmp
shlb
xor
dec
add
pop
cld
xchg
stc
dec
scas
xchg
or
jge
adc
or
inc
outsb
or
lods
mov
stc
jmp
out
imul
xchg
xlat
jg
inc
in
insl
sub
mov
adc
adc
je
dec
adc
push
jns
mov
mov
dec
out
loope
ret
fidivrl
mov
mov
inc
jne
sub
dec
cmp
xor
scas
scas
sub
or
roll
lods
xchg
mov
pop
cmpb
add
stos
jb
push
and
out
xchg
jecxz
nop
lret
pop
ds
dec
cmpsb
xor
ss
mov
inc
push
sub
inc
sti
jp
test
cmp
push
inc
xchg
cmp
cmp
ss
imul
pop
je
mov
sub
aaa
xor
and
adc
pop
and
std
fs
out
and
dec
jmp
mov
cmp
cmp
push
adc
sbb
jge
mov
sahf
push
jo
icebp
and
int
icebp
data16
jo
fistpl
lret
jnp
pop
or
or
add
mov
jb
xor
sub
push
sarb
mov
mov
sbb
xchg
loopne
cmp
mov
mov
lahf
adc
or
imul
out
shrl
inc
rcr
cmp
int
nop
jmp
clc
pop
fimull
fdivrl
xchg
das
sub
aaa
test
sub
scas
cli
cmp
shlb
adc
andb
pop
loope
xchg
inc
insb
push
push
pop
scas
adc
push
sbb
enter
daa
lods
ret
add
mov
nop
mov
sub
loope
mov
dec
inc
stos
in
bound
subl
lods
xchg
sub
push
jmp
mov
xchg
mov
sbb
stc
imul
push
testb
repnz
sbb
xchg
shlb
ret
leave
jl
aas
mov
mov
fdivs
jge
std
pop
and
adc
sub
xor
insl
jmp
gs
fldt
sbb
or
add
add
push
xor
dec
push
insl
mov
cmp
push
test
sahf
pushf
add
enter
addl
jne
out
dec
in
add
xor
mov
lock
xchg
pop
out
mov
pop
movsl
push
cmp
sbb
xchg
jno
cwtl
mov
xor
in
stc
outsl
pushl
cmp
leave
ds
popf
out
mov
pop
pop
divl
lock
lcall
lea
divps
mov
cmp
push
scas
jne
sbb
xchg
imul
std
push
push
cmp
add
movsl
loopne
cltd
cli
inc
out
lods
or
push
dec
sub
jl
mov
jge
int3
lea
add
mov
out
cmp
ret
or
aaa
divb
fistl
dec
rorb
hlt
jo
xchg
out
mov
scas
mov
lea
ret
xchg
cs
lret
xchg
xor
mov
shl
cltd
psubsb
popa
mov
and
das
aad
push
popf
ret
arpl
xchg
add
bsf
adc
fisubrs
mov
ret
push
int
add
jp
insb
es
in
pop
adc
jb
es
mov
je
repz
dec
dec
pop
mov
xlat
add
lock
dec
test
mov
xchg
sub
iret
sub
iret
fstl
pusha
addr16
pop
arpl
jl
repnz
rorb
jno
movsl
push
pop
xor
mov
xchg
mov
sub
mov
fmull
test
int3
mov
xlat
stos
xchg
adc
pop
out
xchg
sub
outsl
xchg
shrl
inc
inc
addr16
inc
fs
jnp
stos
loop
add
and
loope
icebp
int
sbb
call
out
cmp
pminsw
test
mov
aaa
cmp
mov
adc
push
out
std
sub
nop
lret
add
or
cs
in
gs
pop
js
movsl
cltd
sub
dec
push
mov
loop
pop
sub
pop
add
std
test
outsl
cmp
fs
cmpsb
sub
pop
pop
mov
jle
ds
inc
xchg
in
lock
mov
andl
inc
fnsave
out
xor
or
scas
nop
xor
jmp
and
inc
fnstsw
movsl
int
repnz
pusha
pop
push
xchg
sbbl
cmp
or
mov
xor
std
cltd
std
es
ss
add
mov
pusha
add
stos
xchg
xor
dec
mov
sbb
mov
icebp
push
inc
lret
rcr
cmp
dec
dec
jns
fwait
push
enter
es
pop
mov
dec
add
dec
pop
roll
push
lods
mov
cmp
ljmp
cmpsb
push
inc
fldenv
cld
fistpll
cld
aad
fldt
xchg
add
push
dec
xorl
mov
sbb
in
les
out
clc
push
mov
in
cmp
in
push
mov
adc
jno
sarl
es
mov
lock
stos
lods
lods
adc
xchg
pop
dec
andb
inc
into
adc
pop
mov
xor
pop
push
adc
pop
and
loop
leave
jb
mov
xor
jl
mov
cmp
testl
std
scas
add
mov
repz
out
leave
out
pop
popa
or
inc
test
loope
sub
pop
and
lock
push
popf
stc
test
decb
cli
or
sbb
cmpsb
ds
in
in
movsl
je
dec
and
jg
xlat
sub
sbb
cmp
dec
and
and
je
decb
in
clc
jns
addr16
dec
push
popa
or
or
gs
push
inc
dec
dec
add
inc
pop
leave
js
inc
popf
cld
ljmp
andl
daa
lea
push
cmp
adc
loope
inc
shl
pop
xlat
pop
mov
popf
sbb
aad
mov
addr16
imul
ss
shll
data16
repz
cli
aaa
lods
cmp
lret
nop
lds
fwait
add
jo
mov
pop
sub
adc
mov
out
or
bound
and
sub
pop
push
adcb
aaa
ljmp
pusha
adc
xor
leave
push
adc
cltd
xchg
lods
in
cmpsl
lsl
or
mov
std
loopne
pop
clc
fcomps
xchg
mov
adc
cmpsb
rclb
adc
inc
push
test
xchg
fnsave
sub
fstpl
out
and
loope
and
cmc
pop
adc
or
out
test
mov
sbb
imul
imul
out
jnp
dec
lea
enter
mov
mov
stos
and
pop
int3
xor
push
cltd
xor
scas
pop
imul
loope
int3
in
lahf
jg
sub
xor
das
shrb
stos
icebp
int
dec
add
hlt
mov
cs
jmp
aam
out
pop
sub
xlat
incl
cltd
cmp
das
xor
adc
ror
mov
outsb
fiaddl
xlat
nop
and
sub
adc
add
jge
jne
sti
and
inc
pop
jnp
inc
cmp
bound
mov
mov
fwait
cli
ffree
sub
adc
in
rorb
out
test
fistps
cmpsb
sub
or
add
mul
xchg
jb
mov
ds
popa
add
mov
sub
cltd
popa
stos
inc
roll
inc
popf
in
iret
test
popf
xor
xor
fidivrs
jl
jmp
stos
mov
subl
mov
mov
cmpsb
in
cmp
and
xchg
mov
mov
out
sti
fnstsw
pop
gs
aaa
push
dec
jnp
jns
in
cltd
bound
mov
and
sbb
push
push
adcl
mov
xchg
xchg
dec
mov
adc
pop
fwait
mov
sbb
mov
mov
sti
and
lret
mov
sub
jp
inc
dec
inc
lret
popf
inc
cmp
xor
sti
in
out
xor
fs
cwtl
ret
adc
in
xor
aad
aam
addr16
adc
ja
ret
cmpsl
ret
mov
decl
pop
xchg
rol
adc
adc
aad
add
or
mul
lock
shll
cs
test
adc
sbb
sti
mov
xchg
add
xchg
outsl
cltd
mov
int3
icebp
pusha
lahf
mov
sbb
dec
out
mov
scas
movsl
pop
inc
nop
inc
popf
mov
cltd
mov
xchg
in
lahf
mov
xchg
fbstp
mov
int3
push
lods
dec
xor
popa
xor
mov
cmp
xor
mov
mov
fldcw
xor
push
roll
lds
jle
pop
pop
cmp
push
and
xor
and
cmc
fisubrs
rcrb
push
mov
adc
and
popa
add
mov
push
sub
shlb
out
mov
cld
mov
loope
addr16
xor
out
call
pop
mov
loop
scas
xchg
lret
bound
cmp
pop
daa
cmc
cli
inc
icebp
or
sbb
lret
or
mov
mov
ljmp
mov
bound
shlb
add
xor
pusha
cmc
dec
orb
push
adc
lea
std
das
outsl
aas
scas
aaa
add
inc
mov
mov
pop
push
gs
push
mov
scas
cmp
les
out
adc
cld
xchg
and
adc
cli
rcrl
popf
sub
imul
jae
pop
popf
mov
in
mov
in
jno
xorb
and
jle
sub
clc
adc
mov
jmp
stc
pop
scas
cmpsl
sbb
jge
cmp
pop
push
fcompl
inc
sbb
mov
orl
lret
xor
aam
add
data16
pop
icebp
pushf
and
outsl
xchg
adc
in
and
hlt
aas
dec
ss
add
sti
fdivl
aad
pusha
outsb
fucom
shlb
xor
outsb
das
sbb
jg
and
mov
lcall
push
mov
cmp
icebp
mov
pop
mov
shlb
mov
and
in
lods
cs
call
mov
xchg
cs
in
pop
sbb
xlat
cld
clc
popf
jno
xor
fwait
cli
iret
xchg
mov
add
xor
inc
test
jne
mov
test
in
pop
ret
mov
dec
je
and
out
sub
jbe
imul
rcl
adc
cmp
and
lret
addr16
and
jmp
xor
jp
leave
es
insb
je
in
lods
dec
pusha
out
or
movsb
fbld
adc
jmp
adc
dec
negb
xchg
icebp
pop
mov
xor
and
pop
dec
jo
inc
adc
ljmp
int
out
push
lods
inc
movsl
out
push
cmpsl
test
push
cwtl
imul
dec
sub
sub
lods
dec
ja
scas
mov
mov
and
insb
hlt
fst
outsl
dec
xor
adc
inc
xchg
mov
add
loop
mov
shrb
icebp
adc
xchg
and
mov
aam
dec
pushf
mov
xor
xchg
icebp
clc
enter
jg
xchg
adc
rorl
and
test
dec
fisttps
cmp
xchg
mov
pop
in
pusha
clc
lea
stos
xor
jle
mov
jp
sub
scas
xchg
mov
add
aad
and
dec
orl
mov
mov
inc
ret
int
mov
xchg
mov
nop
es
push
xlat
xor
lcall
cmp
xor
lret
sbb
cwtl
sahf
xlat
mov
cmp
pop
xchg
fisubs
push
xchg
inc
sti
imul
mov
scas
dec
aam
pop
mov
xchg
xchg
mov
mov
dec
xchg
pushf
sbbl
mov
outsb
nop
pop
sub
or
dec
ss
mov
xchg
rcll
or
jno
es
lahf
cmpsb
neg
cmp
imul
push
idiv
inc
in
mov
or
xchg
pop
jg
and
loop
jno
fdivrs
jbe
stc
cmp
or
push
test
or
jne
aam
stc
outsb
flds
or
mov
push
mov
int
push
mov
call
xchg
pop
gs
fidivs
addb
repnz
cmp
xchg
pop
ret
popf
jmp
pusha
xchg
mov
push
pushf
xchg
xor
aam
mov
dec
and
add
fwait
shll
inc
test
xor
lret
aad
test
mov
rcrb
xor
call
fdivs
pop
sub
mov
xlat
ret
dec
dec
movsl
stos
in
or
and
imul
xchg
fdivs
jp
sarl
push
and
xchg
pusha
xor
daa
mov
pop
not
jmp
int3
es
sub
in
js
cld
pop
xor
enter
cmp
popa
jne
popa
mov
or
clc
dec
jle
mov
sub
dec
mov
out
pop
mov
mov
push
pop
insb
fnstcw
mull
mov
sub
mov
cmpsl
lahf
jle
adc
sbb
mov
int3
imul
scas
pusha
mov
mov
lret
mov
cld
inc
cs
shlb
rclb
lock
and
je
add
sub
iret
repz
pop
lods
fs
leave
shl
mov
pop
or
cmp
mov
jmp
cmp
cmpsl
gs
in
rcrb
out
rcrl
and
mov
sti
in
in
shlb
out
sar
cmp
aad
ret
inc
push
rcrl
mov
xor
pop
inc
xchg
xlat
mov
pop
cmpsl
int
pusha
cmp
mov
pop
pop
xchg
xchg
loope
mov
and
shll
daa
cmpb
inc
push
rcrl
cmp
cmpsl
cmc
ds
sbb
outsb
daa
lea
pop
popl
pop
enter
daa
lea
stos
addb
filds
int3
stc
rol
test
push
sbb
int
push
std
sub
and
psrlw
dec
and
imul
aad
shrl
adc
orb
sti
fldl
mov
pop
lea
add
daa
lahf
outsl
sarb
inc
iret
loope
mov
ss
mov
pop
stos
mov
push
jns
push
pop
or
movsl
das
icebp
lret
push
out
push
stos
xchg
fst
inc
push
xorl
fsubs
cmp
repz
push
push
cmpb
xchg
mov
inc
sarl
xor
pcmpeqb
xor
add
cmp
cwtl
loopne
mov
out
out
jb
xor
pop
in
push
inc
ret
dec
ja
aad
inc
mov
sub
rclb
shll
mov
sarl
xorb
lahf
pusha
js
fnsave
push
cwtl
cltd
aad
ficoml
arpl
mov
fidivrs
push
cmpsl
ret
mov
adc
out
or
sbb
lret
xchg
dec
jmp
outsb
js
lret
out
scas
mov
dec
jns
dec
out
imul
in
inc
adc
icebp
push
imul
sub
or
int3
cltd
sbbb
mov
sbb
jns
lods
ret
fsub
addr16
add
int
icebp
push
inc
push
push
push
mov
loopne
ret
gs
push
stos
imul
inc
inc
push
push
dec
or
cmp
dec
fstp
and
rcrb
mov
xor
in
dec
jl
out
pop
clc
dec
dec
pop
cmp
and
cmp
inc
mov
sub
ret
popa
adc
xor
js
rorl
jmp
test
call
or
mov
loope
jo
ret
pusha
pushf
mov
and
mov
and
mov
ror
movsb
imul
lods
mov
rcll
shrl
inc
sbbl
pusha
movsl
push
mov
jb
out
aas
jne
outsb
xchg
pop
push
mov
bound
pop
loope
inc
cmp
cmc
insl
xor
jp
loop
shll
jg
push
and
aam
mov
subb
cltd
xor
mov
mov
cmpl
pop
out
cwtl
push
lret
or
fstl
arpl
mov
pop
push
in
outsb
lock
or
cli
cltd
stos
ljmp
enter
cwtl
lret
sbb
bnd
push
sub
pop
jno
lods
pop
pop
aaa
fcom
outsb
int3
push
push
icebp
pop
addr16
sahf
dec
aad
into
sub
dec
popa
mov
hlt
repz
dec
out
lcall
je
push
dec
repnz
or
mov
adc
paddq
and
fdivrs
push
push
lds
sbbb
pop
add
fistl
pop
jg
fildl
mov
loop
int3
cmp
mov
push
test
mov
jl
aad
out
lods
mov
pop
sbb
inc
mov
dec
sub
sbb
inc
sbb
mov
mov
repnz
inc
cld
push
sub
push
xchg
pop
xchg
jbe
sub
cli
ret
or
and
sub
sub
out
in
test
push
jmp
add
idiv
adc
add
sti
jo
testb
jg
sub
addl
sbbl
ljmp
adc
cmp
insl
enter
sarb
out
addr16
or
outsb
out
pop
bound
nop
fstps
pop
mov
sub
sarb
dec
ljmp
add
mov
dec
mov
pop
out
test
add
pop
fwait
loopne
cmp
xor
into
pop
mov
xchg
adc
mulb
outsl
xchg
gs
pop
pushf
add
mulb
sbb
jns
arpl
stos
cs
lods
xchg
lret
je
cmpl
popa
pop
cltd
add
sub
shll
shrl
aaa
dec
sbb
pop
rclb
sarl
xchg
and
inc
pop
out
sbb
in
cmc
cmp
fcomp
hlt
inc
cmpsb
mov
xchg
out
cmc
xchg
dec
pop
iret
jnp
or
and
bound
mov
lret
xchg
bound
xor
movsl
cmc
add
js
xor
mulb
dec
add
scas
outsb
xchg
insb
test
jp
xchg
shll
test
mov
pop
test
cmp
mov
add
cwtl
mov
insl
fmuls
aas
loope
and
test
add
xchg
cs
jge
xchg
sub
xchg
repnz
ljmp
adc
sahf
adc
jbe
inc
ds
jne
mov
pop
stos
jae
ret
add
test
aas
iret
lods
jg
in
daa
pusha
filds
lods
lcall
xchg
inc
xlat
xor
insb
push
cmpsl
and
lahf
jmp
mov
les
cld
push
out
aas
mov
loop
aam
ss
pop
jo
xchg
xchg
or
lods
sub
pop
jo
rol
push
mov
jmp
subb
das
cmp
dec
pop
das
xor
jg
loopne
xchg
sbb
or
fldenv
adc
push
mov
mov
sbb
cmp
inc
ffreep
int
frstor
pop
ret
mov
lret
pop
cmp
xchg
xchg
inc
cmp
sbb
mov
dec
test
lea
mov
gs
mov
jnp
scas
js
mov
sbb
sub
loope
jo
insl
xor
push
outsl
testb
mov
or
mov
cmp
jno
push
or
cs
fucomi
inc
test
dec
or
and
jae
cmp
xchg
js
fcoml
cmpsb
loopne
int
jo
test
sbb
stc
inc
dec
xor
outsl
stc
cmp
mov
out
orl
lock
mov
cmp
in
in
cmc
loope
es
pop
cmp
add
aad
mov
push
loope
mov
xor
lods
sub
sub
sub
arpl
sbb
daa
repz
cmp
and
dec
cs
in
in
mov
or
cmpsl
mov
cmp
arpl
cmp
sbb
inc
xadd
inc
lea
jns
leave
lods
in
arpl
jg
add
push
pop
adc
mov
in
add
xchg
push
cmpsb
add
outsb
daa
mov
es
aad
imul
loopne
es
pop
in
dec
stos
pushf
push
adc
cs
lea
mov
test
xchg
jp
int3
pushf
test
xor
sbb
decb
mov
push
aam
xorl
push
leave
adc
jns
mov
popa
out
cmp
xchg
shlb
loope
mov
xorl
inc
test
pop
fcmovnb
mov
pop
scas
jecxz
ss
sbb
xor
or
cmp
lahf
adc
or
das
lret
aam
rorb
or
pop
mov
mov
leave
push
add
ror
adc
push
sbb
push
nop
test
iret
jmp
push
dec
scas
sbb
outsb
arpl
aaa
adc
insb
test
pop
add
gs
lea
jecxz
or
movsb
jo
jb
or
stc
mov
push
lahf
loop
in
lret
leave
dec
mov
out
push
inc
loop
in
mov
xor
aas
enter
sbb
push
mov
push
nop
mov
test
dec
shll
dec
leave
mov
adcl
in
leave
push
sbb
push
push
jmp
aad
add
and
out
or
cmpsl
rclb
popa
xchg
test
jmp
ja
inc
xchg
jbe
push
cltd
pop
rcl
icebp
jbe
leave
arpl
icebp
push
cmp
mov
pop
repnz
xchg
mov
mov
leave
or
pop
movsl
mull
xchg
int
int3
add
pop
push
shll
mov
mov
imul
negb
xchg
leave
lods
test
out
xor
repz
pop
push
out
inc
int3
xchg
aad
dec
outsb
jl
daa
cmp
aaa
test
jecxz
pop
cmpsb
mov
fst
jnp
inc
jmp
imul
or
pop
out
cmpsl
loope
loopne
sub
xchg
loope
lahf
mul
ja
push
inc
imul
xchg
jno
filds
and
out
jae
adc
mov
mov
sub
pop
cmpsl
dec
aas
les
pop
xchg
adc
sub
xor
lods
jge
mov
test
out
loope
lahf
loop
cmc
testb
or
push
aas
lds
xchg
popf
pop
outsl
mov
cmp
sbb
imul
stc
jmp
popf
adc
ljmp
daa
jbe,pt
lods
aad
or
lret
jae
xchg
push
cmp
cs
jmp
jmp
sbb
inc
movsb
jge
sbb
in
jae
dec
in
testl
jno
xchg
mov
inc
ss
mov
or
pop
lods
testl
xchg
test
pop
mov
insl
dec
mov
inc
pop
jnp
sbb
mov
in
inc
dec
add
popa
jbe
cmp
je
adc
int
mov
cmp
out
test
andl
mov
rcrl
shrl
sti
cmpsl
popf
imul
imul
sbbl
scas
adc
sub
push
sub
cmp
pop
orb
mov
out
cmpsb
push
ret
out
sub
xchg
xor
lret
cwtl
dec
scas
jecxz
ss
or
mov
push
imul
int
mov
push
mov
cmp
adc
mov
out
add
push
loop
in
popa
dec
movsb
in
leave
stos
sub
mov
loope
mov
orl
dec
test
pop
and
inc
push
dec
outsl
mov
xor
inc
push
jg
sbb
out
cmpsb
lcall
mov
in
dec
adc
out
stos
push
add
mov
xor
sub
mov
scas
xchg
or
pop
push
out
dec
cmpsl
das
imul
sub
mov
xor
add
addr16
minps
mov
mov
jecxz
inc
cmpsb
mov
int
mov
shl
jno
dec
test
out
xlat
push
popa
loop
in
in
sti
cmp
xchg
adc
or
cs
xlat
xor
ss
and
js
sahf
aad
push
push
lea
imul
in
jmp
cmc
test
jae
imul
jg
jbe
sub
mov
loope
mov
cmpl
inc
test
pop
ffree
mov
dec
jnp
adc
push
dec
andl
pop
jmp
loope
xchg
xchg
mov
add
aas
test
cmpsl
push
xor
pmulhw
or
mov
xchg
pushf
es
mov
fisttpll
arpl
insl
jno
pop
addr16
test
popa
roll
dec
scas
mov
xorl
inc
lds
lcall
mov
sub
int
mov
cmp
out
scas
mov
add
shll
adc
jge
push
call
insl
or
lahf
jbe
or
cmp
lea
or
cs
xlat
cmp
ss
mov
jae
fisttpll
arpl
insl
jno
pop
imul
clc
ss
imul
loope
xorl
jae
dec
mov
lea
jecxz
push
cmpsb
dec
pop
sub
int
mov
shl
dec
inc
sarb
sbb
out
jno
dec
in
cmc
or
mov
adc
and
cmp
mov
mov
sbb
orl
aaa
mov
xlat
or
addl
out
push
cmpsl
aaa
imul
sub
mov
xor
or
addr16
pop
pop
adc
mov
fldl
addl
inc
pop
and
int
mov
leave
out
dec
dec
shlb
and
fists
inc
in
in
or
cmp
popf
adc
or
mov
jmp
cmp
mov
adc
fucom
sti
in
inc
or
cmp
jno
pop
or
cs
xlat
xchg
in
jmp
addl
aaa
out
xor
xchg
sub
mov
loope
mov
or
cmpsb
pushf
ret
insl
stc
mov
repz
jmp
push
mov
cmpl
push
jecxz
jecxz
loop
mov
mov
lods
orl
mov
xor
dec
shll
dec
lret
mov
adcl
dec
xor
outsb
mov
pop
sub
mov
roll
in
jmp
lret
jl
jle
adc
adc
out
outsb
cmpsl
add
test
mov
loope
mov
lds
pusha
mov
loop
add
loop
mov
fadds
clc
imulb
jnp
fs
dec
imul
jnp
or
inc
jo
sub
jle
mov
stc
mov
xchg
adc
mov
lret
aas
cmpsb
mov
mov
cmpsb
test
lret
into
subl
jge
push
dec
jp
aam
lahf
inc
jne
add
inc
arpl
cmc
cli
inc
push
insb
dec
pop
xchg
repnz
mov
arpl
pop
ds
jle
mov
call
and
mov
aas
cld
lods
sahf
fiaddl
push
movsl
add
mov
or
int
sub
js
inc
in
scas
jg
push
pop
jbe,pn
dec
or
cmp
popa
mov
iret
or
mov
add
movsb
mov
rolb
fs
fwait
in
movl
cmpsb
pop
dec
inc
subb
cmp
push
jnp
adc
ret
jo
and
pop
hlt
out
sbb
fucomip
push
mov
sub
hlt
mov
mov
imul
test
xor
xchg
mov
sbb
lahf
dec
mov
xchg
aad
clc
mov
cmp
mov
xchg
jno
sarb
leave
loope
add
aaa
inc
push
jmp
add
call
cmp
or
stos
mov
mov
jmp
push
mov
mov
mov
sbb
sbb
cmp
push
addr16
jmp
cli
xlat
pop
sahf
sub
nop
mov
pushl
aaa
cmpsb
cli
cmp
cmp
scas
adc
mulb
out
cmp
mov
jns
cmp
ficoms
xor
sub
add
imul
jmp
icebp
sbb
cltd
lea
lods
ret
testl
fcoms
push
mov
mov
mov
cmp
in
or
loope
test
adcb
xor
shlb
ds
imul
cmp
mov
inc
test
in
push
cltd
sub
pop
pop
dec
insb
dec
mov
xchg
mov
adc
leave
xchg
pop
dec
dec
push
mov
rcrl
imul
stos
mov
lea
enter
ss
fdivp
clc
sub
insl
mov
cmpsl
scas
push
imul
repnz
lods
jnp
packssdw
cmp
dec
aam
fnstenv
rcrl
movsb
jnp
fsubrs
cld
sub
mov
jp
adc
sub
sti
adcb
test
push
ljmp
ss
xchg
sbb
jne
stos
insb
or
ret
call
outsl
cmp
inc
cmp
inc
loop
gs
xchg
sub
int
fs
lret
add
and
mov
jns
pop
aad
add
mov
mov
mov
or
es
jg
inc
ret
shlb
lods
lret
sub
push
test
fs
mov
mov
sub
cmp
sbb
fldt
xlat
xorb
aam
pop
mov
sbb
mov
outsl
xchg
jb
mov
mov
cli
into
sub
ds
or
pop
jne
ret
out
lock
fdivs
leave
icebp
push
or
ja
cli
push
in
xor
pop
mov
pop
xchg
std
aaa
fisubrl
mov
out
mov
sbb
mov
pop
xor
add
pop
sbb
in
sbb
pushf
pop
inc
jno
pop
jmp
movsl
imull
fsub
dec
lahf
pop
test
or
fwait
jbe
cli
cmpsb
popf
inc
xchg
repz
adc
and
jb
sub
ficomps
mov
sbb
mov
addl
pushl
lods
mov
cmp
insl
fwait
pop
add
repz
data16
fmuls
rorb
mov
loop
or
mov
in
int
inc
call
gs
cmpsb
lret
mov
or
rcrl
es
lcall
imul
test
xchg
mov
sbb
lods
jp
pop
in
ljmp
add
push
mov
push
test
jle
adc
or
xor
jmp
and
lods
or
dec
sbb
into
pusha
xchg
and
scas
xchg
aas
aaa
addr16
mov
jmp
cltd
in
xchg
or
data16
and
sbb
xor
pop
das
mov
mov
push
adc
outsl
adc
sub
std
jp
xchg
addl
ret
dec
decl
add
movsl
mov
pop
fisttpl
repz
stc
cmp
push
cltd
cmpsb
xor
mov
popa
sub
push
jae
leave
mov
xchg
movsl
std
pushf
xor
xor
sbb
out
and
sub
int
iret
leave
lods
add
ja
gs
mov
mov
addr16
pusha
xchg
push
fsts
fildl
fnstenv
pop
rcrb
sub
ds
xor
aaa
dec
or
lcall
pusha
xor
mov
stc
inc
call
std
test
push
stc
outsl
cli
fsubr
xchg
int
inc
repz
fucomp
imul
icebp
out
lods
mov
adc
scas
outsl
sti
pop
fistpll
int3
mov
imul
add
aas
sbb
mov
xchg
shll
mov
xchg
int3
inc
jno
les
add
cmp
pop
push
test
cmc
repz
fcomp
fsubrs
addr16
inc
adc
test
test
stc
es
push
outsb
mov
pmulhuw
out
test
testb
jg
xor
add
dec
int3
sbb
andl
repz
cmpsb
bound
sbb
int
xchg
loopne
in
xchg
or
cmp
sub
or
sbbl
jne
jno
or
sub
imul
jo
popa
insl
imul
dec
mov
out
leave
addr16
mov
sbb
cmp
mov
mov
pop
jmp
cltd
mov
xor
test
mov
mov
gs
inc
mov
addl
mov
mov
mov
sbb
jbe
pusha
dec
repz
subl
int3
adc
dec
or
or
adc
sub
test
xchg
negb
pop
shll
push
push
orl
shll
movsb
adc
lds
int
mov
mov
sbb
imulb
jns
insb
pop
mov
aaa
dec
aam
dec
imul
push
daa
or
out
jge
push
jmp
sub
stc
iret
fisubrs
xorl
lods
sbb
outsb
cltd
dec
int3
pop
push
xor
xor
cmc
test
loop
in
and
xor
aaa
jecxz
testl
xor
sub
pop
pop
cmp
scas
jae
inc
inc
mov
mov
dec
leave
jne
jle
cmp
imul
mov
push
dec
inc
adc
std
rol
fimuls
push
or
ret
or
cmp
xchg
adc
or
insl
and
push
scas
jecxz
gs
sub
leave
cmpsl
cmp
xchg
mov
loope
mov
cmpl
test
test
test
bound
scas
jb
mov
scas
or
push
in
jmp
out
push
sbb
pop
inc
shll
subb
in
xchg
std
or
pop
mov
push
loop
in
sbb
aaa
rcll
cld
push
mov
jg
push
sbb
insl
outsl
mov
cmp
mov
xchg
scas
out
aaa
test
roll
pop
leave
push
leave
sub
xlat
add
add
pop
repz
xchg
test
inc
or
cmpsl
subl
sub
xchg
out
push
jae
outsb
mov
cmpsb
daa
leave
out
sbb
mov
pop
pop
inc
push
pusha
xlat
xchg
mov
adc
mov
nop
mov
mov
or
leave
and
rorl
popa
imul
mov
or
cmp
or
adc
int3
imul
add
sbb
cmp
xchg
int3
cmp
mov
sarb
mov
cmp
imul
push
into
jl
cmc
push
outsb
lret
std
fsubl
lock
jecxz
pop
dec
ret
shr
test
test
xor
cmp
negb
movsb
in
mov
scas
addr16
leave
loop
and
out
sub
adc
ret
in
or
orl
mulb
mov
cmc
push
cwtl
inc
leave
or
fdivrl
icebp
jg
jp
inc
daa
movsl
mov
mov
jmp
loope
pop
or
adc
adcb
xchg
mov
jge
add
leave
mov
loope
lret
mov
shll
adcl
xor
push
stos
mov
scas
test
pop
mov
sub
jl
jp
arpl
jg
lcall
xchg
cmp
add
add
xchg
aaa
pop
aaa
cld
and
nop
sub
sub
outsl
into
flds
pop
and
roll
stos
push
into
or
fwait
ja
sbb
lds
mov
fisttpll
aam
in
mov
call
cmp
into
dec
fbstp
pop
sarl
out
imul
ficompl
or
fstl
mov
insl
push
in
rorl
push
arpl
rol
mov
movl
mov
mov
push
xchg
fsub
movsb
inc
rolb
xchg
mov
mov
sub
xchg
mov
daa
pop
cmpsb
or
cmp
jge
jb
add
sub
aaa
cmp
xor
dec
sub
je
leave
add
sub
mov
add
push
pop
movsl
mov
movzbl
sub
icebp
ret
xlat
lods
push
popf
aad
inc
jnp
mov
xchg
cs
or
test
inc
cmp
lret
or
je
jae
shll
ret
cmc
idivl
lret
rclb
ficoms
fdivp
sub
mov
and
enter
jb
iret
loope
push
ljmp
jmp
sbb
in
mov
inc
pop
addl
cmc
test
mov
push
push
mov
adc
mov
lds
sti
sbb
icebp
rcr
xchg
outsl
jmp
lods
dec
xchg
lret
inc
add
outsl
mov
jno
out
popf
pop
inc
dec
pop
xchg
rol
into
fwait
loopne
cld
pop
sti
xchg
pop
rcrl
mov
lock
arpl
rorl
test
add
adc
xchg
cwtl
xor
jmp
adcl
and
scas
jp
out
mov
out
scas
pusha
imul
xlat
mov
add
jge
inc
stos
pop
lea
add
add
push
cmpsb
xor
out
dec
scas
out
mov
jno
dec
mov
scas
jge
insb
popf
pop
inc
rcll
js
pop
mov
aam
shr
cmpl
or
sarb
push
and
scas
mov
sub
pop
pop
into
mov
mov
ja
inc
fadd
xchg
cmp
jp
xor
xchg
inc
out
xor
jge
inc
cmpsl
arpl
inc
mov
cmpsb
cmp
xchg
push
pop
imul
int
jmp
ds
in
lcall
add
andl
cltd
cmpsb
pop
push
rcl
add
push
loopne
js
sub
pop
lods
je
xor
sbb
repz
loopne
icebp
in
sbb
test
inc
jecxz
mov
sbb
pop
and
test
sahf
jne
lea
gs
xchg
or
xchg
inc
or
xchg
mov
jp
and
rcrl
int
cmp
das
icebp
adc
push
jae
add
inc
popf
push
cmp
jne,pt
loopne
inc
pop
mov
lds
pop
ja
leave
xorl
imul
bound
jl
pop
cs
lock
xchg
shl
jge
jb
pop
hlt
and
insb
out
jmp
pop
data16
nop
cmc
mov
rcll
push
insl
jecxz
pop
sbb
cmc
mov
sbb
pop
sbbl
mov
xchg
lahf
jmp
add
in
pop
idivb
jge
pop
push
fistl
mov
adc
inc
in
add
loop
push
addb
out
adc
push
jno
push
mov
adc
push
leave
shlb
int3
icebp
mov
shrb
fildl
call
cmp
dec
loope
nop
cmpsb
fstpl
insb
sbb
xchg
or
xchg
pop
mov
shrb
test
jmp
rclb
nop
stos
lret
shll
shlb
arpl
cmpsb
inc
or
bnd
or
fnstsw
mov
bound
xchg
rcrb
adc
or
fcompl
add
mov
pusha
and
mov
cmc
pusha
imul
xchg
lret
outsl
in
js
test
push
push
fiaddl
mov
jno
and
ret
sbb
mov
addr16
loop
or
dec
and
jne
imulb
pop
lahf
jae
xchg
out
sbb
push
das
and
mov
mov
and
inc
push
add
cmpsb
hlt
cmc
bound
roll
loop
inc
jno
stos
in
clc
mov
push
psllq
testl
ret
into
or
dec
cmc
cmpsl
aam
mov
inc
sbb
test
add
adc
insb
xor
or
inc
inc
mov
out
gs
sub
xor
or
fiaddl
je
adc
leave
pop
or
sub
es
aas
shll
ret
cmp
fs
xchg
int
push
xchg
fidivs
int3
pop
mov
xor
movsl
movzwl
cmp
xor
aad
xchg
rorl
sbb
int3
enter
es
addr16
push
hlt
adc
mov
out
push
pop
adc
mull
add
add
lods
add
jno
cs
lock
daa
cmp
push
ret
jne
push
mov
pop
insl
push
xor
cmp
call
insb
mov
pusha
ret
xchg
pop
test
jl
or
adc
xchg
push
notb
nop
xor
cltd
adc
addr16
movsb
arpl
lock
fsubl
imull
mov
scas
mov
lods
pop
xor
or
movsb
pop
jge
int3
scas
test
xor
add
sub
jbe
lds
hlt
mov
sub
sub
test
xchg
dec
and
nop
leave
pop
mov
das
sbb
inc
xchg
pop
stos
xchg
iret
sbb
imul
dec
je
mov
cwtl
iret
mov
mov
dec
call
dec
jg
xor
mov
out
xchg
loope
pusha
cmc
inc
cli
jecxz
jp
pop
sub
adc
fst
ds
or
repz
cmp
add
dec
dec
mov
sbb
sub
push
add
push
or
pop
sar
dec
mov
or
incl
repz
je
subl
push
scas
or
arpl
roll
ljmp
xlat
fisttps
xor
out
mov
xchg
in
gs
insl
fwait
rcll
in
mov
test
stos
repz
or
popf
xchg
orl
add
xchg
nop
pop
push
inc
stc
insl
mov
subl
add
sarb
adc
aad
int3
test
test
add
cmc
fisubrs
xor
cwtl
mov
lods
jne
adcl
in
aad
in
sub
aam
in
addr16
ret
mov
or
out
test
movsl
and
mov
dec
stc
mov
xor
sub
je
sub
std
ret
jmp
mov
inc
add
cmp
xchg
leave
out
lea
pcmpgtw
outsb
mov
sbb
test
in
push
fsubs
push
mov
dec
int3
aaa
in
mov
out
popa
mov
cwtl
xlat
pop
or
nop
popl
pusha
inc
mov
mov
fisttpl
scas
rorl
scas
sub
dec
pop
mov
mov
sarl
pop
mov
fcoml
mov
jo
jmp
imul
shl
shll
xchg
sarb
push
in
push
mov
xchg
adc
cltd
les
ret
and
inc
mov
aaa
les
addb
mov
mov
push
sahf
mov
sti
cmpsl
lahf
push
out
lret
sbb
stc
iret
lahf
cmp
cmp
cmp
mov
pop
xor
insb
aam
out
cmp
push
pusha
rcll
into
pop
xchg
cmpsl
jo
push
pop
push
mov
stos
out
lahf
or
cmp
sbb
push
lds
cli
dec
sarb
int3
sub
out
mov
lcall
cmp
xorb
push
movsl
adc
add
add
insl
jmp
fwait
dec
or
push
addr16
cmp
xchg
add
imul
mov
call
mov
dec
mov
in
int3
cli
jecxz
mov
xor
stos
sbb
push
enter
xlat
lret
ficoms
daa
lock
mov
pop
setbe
cmpsb
repnz
std
into
in
lret
sarl
add
rcl
loop
push
pusha
int
or
movups
and
add
imul
pushf
outsb
aaa
adc
mov
in
add
ret
and
filds
xchg
sub
int
stos
repnz
pop
jo
aad
sub
sub
out
or
jmp
sbb
xchg
add
test
xchg
sub
pop
jns
mull
cmp
bound
pop
ficomps
and
jb
das
dec
inc
lods
popa
mov
inc
dec
mov
add
fwait
adc
xchg
push
add
ret
push
mov
out
fnsave
mov
mov
inc
pop
repnz
out
roll
xchg
int3
sub
push
hlt
das
xchg
mov
sbb
mov
sahf
lret
inc
lahf
jmp
hlt
mov
push
sub
andl
mov
sbb
dec
ds
jl
push
ja
lret
into
rorl
adc
pop
fnstsw
pop
and
or
jns
repz
mov
shll
popf
dec
loopne
int3
hlt
or
inc
lods
gs
add
or
pop
push
xor
push
daa
aaa
xchg
insl
sub
data16
in
dec
pushf
lret
enter
int3
daa
out
iret
cmp
loop
loop
xchg
sub
push
neg
fmul
xor
push
dec
lods
cmpsl
push
cmp
int3
cmc
cltd
movsl
lods
mov
sbb
pop
cs
add
xchg
mov
dec
mov
cmp
stos
push
rcrl
dec
jae
add
test
dec
repnz
xchg
pop
mov
out
xlat
adc
cmp
mov
mov
pop
mov
pop
adc
fbstp
or
cmp
scas
lret
jmp
sar
push
rcl
jl
outsl
insb
mov
dec
rep
lret
das
repz
and
movl
adc
rcll
jmp
lods
xchg
push
sub
ss
adc
cwtl
inc
scas
mov
pop
dec
sub
xchg
js
rclb
rcrb
push
insl
cmp
sub
mov
in
aad
pop
mov
xchg
repnz
add
jmp
xorl
roll
push
insl
xchg
inc
sti
in
lods
dec
push
xlat
enter
mov
leave
icebp
fbld
mov
fwait
jno
lods
in
mov
adc
adc
jecxz
negl
outsl
aam
test
sub
test
xchg
xchg
in
mov
mov
hlt
inc
sub
jmp
xchg
loop
xchg
push
icebp
out
hlt
sub
inc
mov
mov
adc
sub
mov
loopne
mov
add
add
push
jne
or
push
insl
out
sahf
inc
or
js
or
lcall
mov
jns
sbb
pop
adc
sbb
scas
mov
gs
push
imul
pop
nop
sbb
jnp
int
cmp
xchg
mov
lret
mov
sbb
sub
out
sbb
inc
shrb
out
or
daa
add
lret
pop
sbbl
mov
int
in
and
sub
push
and
int
test
mov
jmp
icebp
push
loop
in
aaa
add
sub
rol
mov
inc
std
ss
push
mov
mov
les
inc
xor
popa
nop
sahf
jno
dec
mov
sub
or
jg
jbe
jbe
pop
inc
das
and
fucomp
ret
mov
adc
gs
mov
pop
adc
loope
pop
aad
sub
and
leave
and
iret
sub
dec
add
dec
adc
out
jmp
dec
mov
arpl
int
or
add
popa
out
popf
movsl
mov
mov
int
stos
dec
dec
mov
push
out
push
imul
mov
popa
jae
std
xor
add
ss
in
cmp
add
daa
jp
test
test
inc
push
sub
popf
idivb
xor
cltd
jp,pn
addr16
enter
lods
xchg
cmc
pop
ret
sub
pop
das
pop
insb
loope
sub
mov
dec
movsb
jg
inc
out
inc
sub
adc
mov
or
in
push
adc
inc
loop
sbb
inc
inc
pop
or
mulb
int
add
inc
pop
dec
leave
push
lcall
cmpsl
fsubl
ffree
inc
out
push
lods
nop
and
nop
sbb
mov
test
pop
outsb
stc
jmp
mov
add
cmp
repz
add
loop
inc
xchg
mov
or
out
pop
scas
and
sub
repz
stos
movsl
mov
push
mov
loop
lea
daa
sbb
cmpb
test
fdivr
lods
push
jg
or
sub
imul
scas
das
ss
rolb
sbb
out
cltd
ja
mov
ret
inc
inc
mov
aas
mov
into
push
jecxz
jl
mov
cmp
pushf
inc
mov
inc
fs
mov
mov
in
movsl
jge
jne
cmovo
clc
jp
xchg
mov
mov
dec
ret
cmp
insl
test
loope
adc
mov
fnstsw
push
or
inc
sbb
adc
sub
and
mov
jae
lea
aas
mov
in
aad
and
adc
adc
movsl
fldt
pop
movsb
inc
push
xor
ds
jl
or
stos
daa
xchg
fnstcw
and
sarb
ret
je
inc
cli
mov
xor
sar
not
dec
dec
sub
les
lods
or
aad
adc
aam
pushl
stos
xchg
xor
cmc
adc
cmp
push
add
mov
inc
sub
ljmp
out
pop
outsb
lods
fstp
sbb
inc
incb
cmpl
dec
adc
xor
xchg
push
test
in
sub
sub
movsl
hlt
mov
inc
sbb
inc
pop
mov
aad
sbb
jo
adc
movsl
mov
fistl
loope
int
pop
sub
insl
mov
sub
mov
cmp
out
push
xor
lods
jne
sbb
add
xor
mov
addl
dec
daa
cmpsl
aam
addr16
icebp
gs
jmp
iret
cmp
std
mov
inc
and
stos
repnz
push
push
mov
out
cmc
mov
pop
push
mov
sbb
mov
xchg
mov
imul
mov
pop
filds
ja
jl
add
lds
rolb
mov
xor
or
imul
mov
dec
push
daa
test
or
test
xchg
out
rol
dec
cmp
outsb
push
cmp
popl
dec
sub
sahf
mov
fsubrl
loop
cld
jbe
xchg
testb
ret
dec
jbe
add
mov
cs
scas
cmp
add
lds
rolb
adc
pop
xchg
xchg
xorl
xor
mov
in
lods
jl
lds
sarl
mov
insl
int3
mov
and
test
cld
aaa
mov
dec
adc
in
stos
xor
inc
add
in
testl
jae
jl
inc
jg
adc
add
or
in
dec
jae
lods
loopne
xor
std
xlat
mov
test
jae
mov
ja
cmpsb
hlt
aad
add
ss
incb
cmpsl
enter
loope
cs
push
push
pop
mov
or
mov
outsb
les
jae
inc
rclb
mov
xchg
xchg
jg
or
fildl
fwait
mov
pop
in
pop
pop
inc
mov
xor
int
clc
jb
cmpsb
aad
sub
nop
ret
mov
add
test
xor
mov
push
sub
insl
out
fcmovu
push
inc
add
sub
shrl
les
fwait
mov
shrl
gs
and
addl
xor
aam
mov
xor
pop
sbb
dec
outsl
jecxz
leave
stos
ret
xchg
pusha
iret
jmp
shlb
jmp
push
outsb
fstpt
mov
sbb
imul
sti
gs
cmc
rcrl
clc
sbb
popf
inc
repnz
mov
outsb
xor
ss
frndint
dec
mov
mov
movsl
jne
lcall
sbb
dec
sahf
mov
sub
dec
test
cs
shl
fucomp
andb
inc
xchg
jmp
sbb
and
cmp
cs
sbb
icebp
dec
pop
dec
inc
aad
test
idivb
or
insl
jmp
ss
lds
or
xchg
cli
mov
or
es
imul
sbbb
or
cmp
lret
jmp
rcr
sahf
jno
lods
push
dec
outsl
adc
aaa
dec
add
sub
push
adc
fldcw
arpl
jb
rcrb
push
mov
or
push
dec
fwait
adcl
sub
xchg
pusha
mov
shrl
call
in
rcll
mov
sub
sub
lds
mov
mov
enter
mov
xchg
add
pop
movsl
scas
pop
insl
mov
call
jge
lahf
jge
insb
mov
subl
test
cmp
addr16
pop
add
insb
cld
aam
shrl
andb
add
cli
test
xlat
inc
aas
xlat
lock
and
adc
mov
adc
xor
pop
add
jns
mov
lret
cmpsb
mov
incl
pop
fadds
push
jl
inc
outsl
push
pop
mov
aad
aas
mov
pop
xchg
int
loopne
stc
sbb
jns
pop
sub
fists
push
fldz
dec
and
fmul
mov
xor
pop
and
dec
mov
dec
out
push
fisubrl
jmp
sub
adc
sub
lock
rolb
aas
outsl
inc
mov
cmp
aam
sbb
iret
lret
rol
dec
insb
dec
add
mov
data16
push
or
push
mov
and
mov
mov
inc
sub
rcrl
mov
mov
int3
shrl
rcrb
int
lcall
jbe
fs
add
fsubrl
or
jp
pushf
cwtl
mov
ss
and
push
mov
dec
sahf
loope
dec
dec
and
shrb
fnsave
jg
iret
pop
test
test
dec
add
mov
out
fldt
out
popf
mov
cmp
out
dec
push
mov
rcrl
jg
stos
xchg
dec
je
push
jmp
mov
popa
loopne
loope
mov
sub
dec
jb
xchg
jne
cs
movsl
sbb
in
arpl
push
stos
add
xor
sub
daa
pop
pop
int
ss
sub
and
or
or
aaa
xchg
fists
imulb
stc
das
daa
adc
mov
push
mov
es
fcomp
xchg
faddp
sbb
inc
xlat
cltd
inc
push
lcall
pushf
cmc
mov
icebp
stos
adc
push
dec
out
and
or
jecxz
mov
sub
mov
insl
fs
iret
xor
pop
ficoml
push
xor
and
test
das
push
in
pop
xor
mov
lcall
xchg
xor
mov
test
fdivl
test
lods
add
add
pusha
and
aad
rcrl
stc
fisubrs
insb
fiadds
neg
pop
mov
adc
leave
data16
pop
add
pop
pop
and
cltd
jnp
std
or
test
add
push
xchg
cmpsb
sub
mov
ljmp
sbb
jecxz
test
inc
pop
adc
pop
sub
and
xchg
addl
out
sbb
mov
stos
and
roll
sbb
mov
push
lea
adc
mov
comiss
mov
and
xchg
xchg
cli
je
add
inc
in
movsl
jae
xor
mov
roll
jp
lock
push
jecxz
xorb
cwtl
xor
jnp
rol
cmp
dec
add
ds
pop
movl
icebp
ret
push
add
jg
lcall
outsb
xchg
lods
mov
out
pop
xchg
mov
cmovp
mov
or
mov
aas
nop
fidivrl
add
movsl
not
scas
mov
mov
ds
jbe
sbb
sbb
mov
ja
lods
in
popa
xchg
faddl
pop
xchg
lods
dec
dec
sbb
cmp
pop
add
mov
movsl
add
mull
push
jge
mov
lods
and
cmp
int
xchg
and
les
mov
or
or
xor
adc
push
shrb
sahf
les
lret
jb
andb
cli
flds
lods
inc
dec
jle
or
jae
imul
aam
fwait
jne
xchg
notb
and
push
ret
fnstcw
pushf
inc
mov
movsl
aas
mov
xor
mov
out
arpl
call
pop
scas
xor
adc
arpl
insl
jnp
sub
mov
pop
push
pushf
lcall
mov
fisttpll
repnz
fists
mov
adc
repnz
sbb
jmp
xor
cmpsl
mov
in
out
das
mov
and
push
lret
popf
pop
pop
pop
jno
cmp
test
inc
sub
or
xchg
xor
pop
lods
cmc
outsl
mov
mov
lods
lea
pop
mov
mov
pop
lods
test
out
jno
mov
fwait
cmpsb
sub
ss
out
sbb
mov
ret
sub
das
pusha
or
fdivs
sub
pop
jge
scas
cmp
stos
pop
sub
rcll
aad
rcll
push
dec
test
outsb
test
cmc
sub
aad
dec
xor
pop
aaa
les
mov
push
daa
icebp
sub
testb
hlt
mov
or
sbbl
enter
cmpsl
pop
shrl
or
mov
mov
sub
push
pop
xor
adc
stos
mov
xor
jbe
arpl
cmp
mov
push
es
push
movsb
pop
and
cld
or
imul
mov
jg
add
repz
sahf
mov
mov
repz
jle
jge
rcl
xchg
sbb
push
movsl
xor
jle
xchg
ret
mov
mov
sbb
insb
orl
rorl
xorl
ss
mov
scas
loop
jae
fisttpll
mov
ss
adc
jbe
xchg
ja
mov
stos
aas
jo
dec
push
cs
aam
add
dec
mov
mov
mov
jns,pn
loop
fildll
out
and
jns
mov
stc
pop
sbbb
dec
jmp
cmp
jge
push
fldt
adc
push
xlat
dec
loop
xchg
mov
stos
mov
cmpsl
cmp
dec
push
cmp
and
add
enter
pusha
les
and
and
jae
pop
cwtl
int
push
out
jl
jns
in
push
daa
cld
hlt
xchg
pushf
cmp
dec
pop
cmc
lods
out
mov
pop
pop
test
addr16
scas
loopne
mov
imul
ficompl
std
fcmovnu
in
in
lds
lods
or
xor
sbb
fldcw
jnp
rolb
dec
inc
adc
testl
cmp
push
aam
or
jecxz
das
xchg
pop
test
sbb
hlt
pop
push
sub
arpl
adc
hlt
jle
or
xor
pop
pushf
sub
pop
mov
jp
add
mov
bound
mov
lret
cmp
xchg
cld
mov
and
adc
icebp
jb
and
sbb
aam
push
mov
xor
clc
inc
rcl
dec
add
addl
or
xchg
lods
mov
lods
into
xor
popf
push
test
inc
lods
repz
loope
out
lret
jmp
arpl
out
jne
mov
push
in
or
rclb
add
into
cmp
push
out
jge
adc
xchg
cmp
jl
or
pop
insl
jp
cmp
mov
mov
loope
cs
loope
cmpsb
fcomps
jbe
mov
imul
and
jns
cmc
add
push
push
lods
mov
mov
mov
les
adc
rcr
xchg
jg
jae
cmpsb
jns
mov
mov
inc
arpl
inc
test
cmp
insb
jmp
enter
xor
std
pop
mov
scas
shlb
push
jae
out
test
ja
cmp
xor
mov
lcall
pusha
xchg
popf
int
inc
sbb
scas
movsl
test
ret
xor
rcrb
xchg
mov
loope
adcl
mov
in
sub
movsb
mov
iret
adc
imul
push
fndisi(8087
loope
add
pushf
mov
aaa
lds
int3
insb
subl
cmpb
push
addr16
cltd
movsl
mov
in
stos
idivl
aam
jo
mov
aad
jnp
jg
int3
sub
fucomip
sub
lahf
lods
data16
xchg
in
mov
fucomi
in
punpcklwd
daa
mov
rclb
jmp
push
out
imul
lret
je
pop
pushf
mov
push
inc
int
movsl
inc
and
addr16
fsts
lcall
push
xchg
push
xchg
ret
call
cmpsb
xorl
push
xcrypt-ofb
es
jne
inc
adc
imul
or
cli
int3
stos
rcrb
mov
mov
addr16
cmova
inc
inc
lea
cmp
xlat
cmp
cmc
jns
xlat
outsl
movaps
out
mov
jle
sbbl
pusha
dec
inc
faddl
clc
adc
cmp
aaa
ljmp
enter
add
lock
loopne
mov
xchg
xchg
mov
pavgb
iret
daa
out
pop
arpl
sbb
pop
loopne
inc
pushf
cmp
aas
test
xchg
cmp
es
shlb
inc
cs
or
ret
and
ret
sub
and
pop
inc
sbbl
repnz
lahf
test
rorb
pushf
es
ficomps
dec
sub
sub
xchg
jl
pop
add
xor
or
mov
subb
in
les
inc
incl
loop
jno
jb
mov
and
cltd
int
stc
mov
mov
cmp
mov
call
rclb
fildll
xchg
cltd
and
in
or
mulb
inc
jge
lods
inc
ret
aas
sbb
mov
and
push
mov
mov
aas
rcrb
imul
pop
mov
cmp
jns
es
je
addr16
inc
or
jle
dec
dec
std
mov
hlt
lods
mov
xchg
mov
aas
mov
add
cmpsb
hlt
test
xlat
dec
fs
pop
push
lds
dec
decl
mov
fisttps
xchg
inc
fmul
movsb
mov
or
clc
mov
mov
nop
stos
scas
cs
or
and
outsl
mov
add
scas
cmp
sbb
add
dec
pushf
mov
inc
lret
sub
sub
sub
jno
sub
sub
sarb
lds
lret
inc
les
data16
pushf
pop
jmp
test
pop
lock
fnstcw
xchg
sahf
jo
mov
pop
add
test
enter
ds
adc
es
loop
ret
fsubrl
push
mov
gs
mov
ret
out
pushf
and
cmc
dec
bound
mov
and
leave
mov
xlat
loope
iret
push
pop
std
xchg
ret
ds
sub
inc
inc
dec
lods
lcall
mov
gs
xchg
adc
push
dec
stos
dec
stos
xchg
jne
sahf
fidivl
addr16
xchg
inc
movsb
jbe
orl
es
arpl
and
in
rcrl
inc
add
int
stos
clc
mov
sub
out
daa
ficomps
daa
pop
cltd
and
sti
mov
sbb
mov
mov
sub
aam
out
jge
cmpsl
orb
mov
and
push
cmp
and
add
cmpsb
stos
mov
add
sub
jg
pop
inc
dec
push
push
popf
and
adc
or
es
sub
pop
push
roll
lcall
mov
sbb
xor
sub
push
jns
lcall
xchg
mov
shlb
ja
and
outsl
in
mov
adc
add
test
add
dec
fsubl
jno
int3
cmp
es
idivl
cmp
inc
push
scas
inc
mov
xchg
addb
push
mov
and
mov
pushf
scas
xchg
hlt
pop
adc
es
aaa
or
jns
rep
repz
push
rorb
into
xor
jno
notb
xchg
and
pop
xchg
push
int3
ror
lods
aas
pop
aaa
mov
in
xor
out
sub
inc
jns
push
push
or
inc
nop
xlat
je
add
cld
cld
pop
jbe
out
mov
add
pusha
and
mov
in
mov
mov
push
xor
dec
sbb
mov
adcb
movsl
aaa
push
dec
sti
pushf
repnz
inc
sbb
dec
int
adc
nop
movsb
or
bsr
lds
mov
dec
cmp
decl
pop
sbb
or
insb
addb
insb
sbb
imul
mov
dec
icebp
or
aad
xchg
popf
or
ds
stc
jp
xor
out
jle
adc
rclb
sbb
sub
leave
inc
lahf
bound
lea
inc
popf
sbb
xor
inc
pop
inc
mov
jno
or
out
cwtl
pop
xchg
in
test
xchg
push
cmp
or
aaa
and
fwait
adc
cltd
out
mov
sub
mov
out
mov
push
roll
xchg
inc
mov
es
loop
adc
adc
shrb
pop
xchg
sub
mov
rcll
push
pop
popf
fisubrl
sbb
rcll
lea
addr16
mov
push
push
xor
cltd
mov
insw
cli
mov
mov
jle
sbb
adc
rorb
pop
pop
xor
sub
cli
jb
hlt
outsl
xchg
mov
icebp
fsubr
movsl
into
pop
adc
lods
and
push
mov
scas
aam
enter
pop
add
nop
mov
sub
sub
fmuls
and
lcall
sub
cmpsb
clc
mov
sub
push
int
jecxz
stc
xchg
sahf
cmp
or
movsb
arpl
ret
jmp
out
xchg
sbb
mov
and
add
int3
mov
dec
stos
push
test
stos
cltd
add
je
pop
mov
mov
mov
xor
jp
pushf
sbb
sub
fdiv
mov
sub
ja
sarl
jg
subb
inc
sbb
fs
popf
mov
mov
das
cmc
pop
ss
or
sbb
adc
mov
pop
out
sbb
aam
jl
pop
cbtw
sub
in
iret
xchg
dec
sub
aaa
inc
loop
adc
cmc
dec
add
jmp
jo
lods
mov
jl
repz
mov
imul
jnp
add
and
jns
stc
iret
mov
fldenv
xchg
out
lods
shrb
std
push
mov
mov
loope
mov
inc
inc
xchg
test
sahf
xchg
ret
in
and
outsb
push
pop
lret
mov
jle
cmp
xor
xchg
movsl
xchg
inc
pop
cmp
shrb
repnz
adc
mov
pusha
adc
iret
aaa
push
mov
stc
das
jo
popl
mov
sbb
leave
add
push
into
rorl
lcall
lock
ljmp
xor
psubw
push
fcmove
sbbb
mov
xchg
pop
leave
adc
das
stos
inc
mov
sbb
pop
xchg
sub
aaa
mov
jns
pop
adc
les
xchg
stos
sbb
xor
ret
jae
popl
sub
gs
mov
xor
and
rorb
test
int3
ds
mov
divl
xor
and
pusha
lods
hlt
or
mov
in
inc
mov
push
push
dec
push
aaa
cmpsl
jne
lock
hlt
jbe
dec
jl
insl
cmc
mov
and
adc
stos
rcll
mov
xchg
adc
jmp
sbb
mov
pop
lcall
mov
jl
add
push
stos
sub
loope
dec
aam
dec
sub
mov
ss
xchg
and
test
lods
xlat
faddl
xchg
fistpll
outsl
lret
sti
sub
mov
inc
sti
test
pusha
mov
clc
aad
xchg
xor
push
incb
sub
cli
jmp
add
mov
js
sub
adc
mov
add
stos
fadds
bound
push
enter
cmp
bswap
push
out
jp
sub
jmp
pusha
es
pop
dec
test
fcmovnu
stc
pop
or
fs
xor
repz
leave
xchg
push
cmc
and
pop
lahf
loope
clc
lret
lock
and
xchg
out
pushf
lods
mov
test
lret
data16
ljmp
pop
dec
vpunpcklbw
push
roll
mov
in
not
inc
pop
mov
mov
aam
arpl
jg
inc
sub
adc
push
or
bswap
lret
mov
push
adc
mov
fistpll
in
dec
sub
pop
loope
test
mov
outsl
pop
jge
test
in
mov
mov
adc
aam
jae
sbb
mov
movsl
mov
or
imul
cmc
xor
sbb
ja
push
ljmp
pusha
mov
jecxz
pushf
jge
adc
das
dec
mov
cmp
sbb
jge
add
sub
in
rcll
jno
jne,pn
or
mov
scas
std
lods
cmp
repnz
add
mov
push
and
jae
pop
fmul
pop
ljmp
test
dec
add
shrl
repz
jnp
inc
mov
fnstcw
push
fadds
sub
inc
fs
push
mov
mov
cs
rclb
cmp
lea
in
in
inc
arpl
rcll
push
add
cmp
mov
add
push
movaps
lret
ret
add
aas
mov
sti
cli
out
testl
das
call
hlt
dec
repz
add
push
xchg
mov
cmp
cmp
mov
fistpl
add
jo
loop
mov
cmp
cmc
out
mov
int3
push
popf
icebp
aam
xlat
inc
lret
sub
xor
aas
pop
rcll
sub
jno
inc
pop
test
dec
cmpsl
inc
inc
mov
aas
xor
xchg
xor
adc
mov
mov
test
movsb
jbe
push
into
sub
das
dec
sahf
int
mov
in
in
cmp
aas
pop
insl
loope
and
mov
xor
push
andl
cmpl
enter
xchg
cli
ss
or
cmp
negl
shr
in
test
xlat
loopne
xchg
push
pop
shrb
dec
add
xchg
or
adc
adc
jg
jl
adc
out
xchg
movsb
xlat
out
mov
lret
pop
jb
xor
and
outsl
lods
push
les
mov
rorl
add
in
fs
sbb
clc
or
pushf
aad
inc
mov
ret
outsb
or
adc
movsb
adc
scas
fiaddl
mov
daa
imul
mov
movsb
pop
pop
and
aaa
lds
jle
cmp
cmp
add
jg
repnz
repnz
pop
movsb
xchg
leave
out
mov
add
idivl
mov
mov
jno
rclb
push
and
into
cmp
mov
inc
not
in
push
inc
cld
aad
inc
inc
add
mov
outsb
push
loope
jp
mov
std
pop
lods
push
lods
aaa
mov
sub
xor
bound
icebp
into
in
fidivrs
mov
adc
mov
inc
pop
dec
gs
push
adc
xchg
insl
fists
pop
and
shll
push
popa
insl
pop
lcall
push
es
push
cs
sbb
adc
aaa
push
jne
outsb
and
scas
hlt
cmpsl
mov
sub
cmpsb
cmp
add
adc
xor
pop
jne
fidivrl
andb
xlat
sti
jmp
or
mov
movsl
cmp
xchg
cmpsb
xchg
sub
es
cmp
add
pusha
cmpsb
ss
das
not
outsl
add
mov
xchg
dec
pop
mov
cmovne
dec
push
das
mov
test
scas
shlb
addr16
or
dec
ds
sti
lahf
stos
lods
sub
sub
jne
mov
mov
mov
test
push
xchg
cmp
dec
cmpsl
xchg
xchg
test
rcll
into
int
ss
test
or
mov
cmpsl
dec
sbb
xchg
mov
nop
dec
pop
mov
fsubl
ret
into
fisttps
and
sbb
xchg
xor
ret
push
in
xlat
sub
subb
cmp
jmp
in
jecxz
xchg
xchg
push
aaa
mov
decl
xor
mov
addr16
out
add
pop
adc
in
jne
hlt
adc
inc
lcall
popa
leave
test
xor
repz
lret
test
pop
jmp
std
inc
pop
push
xchg
xchg
jp
cltd
and
mov
push
dec
add
dec
hlt
xorb
loopne
pop
jnp
repnz
pusha
outsl
jp
xchg
hlt
pop
inc
sbb
add
dec
push
rolb
mov
daa
mov
mov
daa
xchg
push
xor
inc
jg
jmp
in
iret
rolb
popf
mov
add
pushf
or
inc
movsb
repnz
mov
inc
mov
jg
fsub
shrb
dec
popl
mov
sbb
mov
sub
adc
incb
mov
in
or
cmc
cmp
or
ljmp
mov
fdivs
inc
enter
daa
js
lcall
sub
or
and
shrb
jnp
das
add
test
stos
pop
call
cli
push
push
sub
jg
sbb
aam
cmp
add
cmp
lds
or
in
int
mov
fstl
xchg
sbb
data16
js
enter
push
fdivs
mov
jmp
sbb
sub
cwtl
and
mov
pop
jmp
es
addr16
shll
hlt
add
sub
xchg
add
adc
mov
lcall
sbb
jge
iret
clc
shr
repnz
dec
lea
xor
push
cmp
lea
cld
cmp
or
xchg
jmp
mov
push
shrb
mov
sbb
and
sub
pop
ljmp
imul
mov
orl
push
inc
pushf
xchg
jl
aas
into
lea
outsb
lret
adc
sub
aam
movsl
dec
or
pushf
nop
mov
adcl
movswl
dec
sbb
das
mov
ffree
enter
inc
jg
xor
addr16
dec
mov
aad
xchg
sti
fcomps
out
sti
aaa
scas
xor
shrl
movsb
jno
aad
dec
mov
xor
mov
test
jecxz
gs
imul
pusha
jo
or
addr16
in
mov
adc
mov
aam
std
and
push
cmp
inc
in
int3
xchg
pop
inc
or
add
and
push
jle
cld
sbb
pop
inc
ret
cs
mov
mov
sub
repz
orl
mov
insl
idiv
push
orb
xchg
sub
out
movsl
ret
arpl
test
lret
jns
test
fnsave
lret
mov
and
mov
das
lahf
int3
inc
dec
xchg
dec
sahf
dec
jmp
jle
jecxz
cld
jle
aas
inc
fimuls
ret
icebp
cwtl
insl
popa
fdivrl
fistpll
incl
imul
jge
mov
out
jns
iret
mov
jae
ret
call
sub
filds
sub
mov
sub
mov
nop
repnz
jno
roll
test
pop
mov
in
dec
xor
xchg
mov
cmpl
adc
sbb
inc
test
mov
push
sbb
cmp
pop
ret
nop
and
xchg
pop
iret
aaa
icebp
push
push
repz
das
adc
pop
jmp
fsts
dec
fdivrs
fwait
dec
adc
movsb
dec
scas
xchg
sahf
in
xchg
test
sub
repz
shl
dec
jnp
mov
cmp
xor
pop
fisttps
jbe
in
mov
and
adc
das
rorb
inc
xchg
jmp
in
xchg
adc
cmpsb
stos
leave
pop
xchg
and
ret
cli
pause
divb
rcl
ljmp
in
bnd
ljmp
xchg
js
lahf
adcb
push
dec
aad
jmp
lret
aaa
aaa
aaa
fsub
pushf
flds
xchg
pop
inc
pop
test
jnp
sub
or
xchg
enter
push
inc
add
test
mov
xor
lds
fisubrs
cmc
xchg
rorl
lods
repz
cmp
outsl
stc
push
movsl
mov
cmpsb
in
cltd
out
xchg
incb
in
lods
jo
icebp
mov
jae
or
xchg
andb
lods
jge
adc
and
fadds
mov
dec
dec
icebp
popa
int3
test
out
pop
ja
mov
fldl
cmp
das
mov
sub
cmpsb
inc
loopne
lcall
das
sub
loopne
add
push
insb
mov
movsb
push
fs
andl
xor
jle
inc
shrl
jge
xchg
cs
cmp
jae
push
cmp
cmpsl
or
xor
adc
and
icebp
mov
inc
out
mov
push
inc
popf
loopne
and
leave
adc
in
xlat
gs
lret
add
mov
scas
popa
out
mov
mov
inc
outsl
xchg
mov
dec
aad
and
sub
jecxz
sbb
add
sub
mov
or
shll
jnp
movsb
insb
sbb
lahf
dec
push
mov
punpckhwd
fisubl
pushf
mov
mov
push
sub
sahf
add
sbb
mov
sub
pop
adc
mov
pop
popl
and
out
and
out
lcall
fs
mov
xor
sub
or
stos
mov
mov
jne
xchg
negb
jae
xchg
cmp
hlt
adc
xchg
les
mov
jo
push
sti
inc
jno
out
push
jl
ds
ds
inc
dec
into
mov
cmp
sub
data16
loopne
aaa
data16
add
and
sub
loopne
imul
stc
push
jb
test
sbb
sbbl
jge
push
mov
test
divb
jmp
lods
and
jg
incb
into
test
pop
xlat
je
jp
sub
roll
jecxz
fdivrs
inc
push
shll
sbb
pop
xchg
movsl
cmpsb
xchg
mov
ds
movsl
push
fucomi
mov
je
mov
add
sub
lahf
popw
hlt
ss
add
mov
ds
ljmp
jno
outsl
adc
sbb
aad
pop
pusha
jne
in
rclb
mov
inc
xchg
push
andl
popl
addl
mov
push
or
pop
adc
cltd
lahf
gs
mov
adc
inc
test
shlb
inc
mov
mov
sbbb
lods
ja
ja
or
push
loopne
pop
shlb
cmpsl
das
push
push
out
dec
fwait
enter
aam
je
ja
stos
arpl
in
xor
nop
adc
jmp
jns
and
les
sub
cmp
add
or
sbb
ret
pushf
stc
push
ds
ret
jo
xchg
adc
dec
dec
into
mov
stc
sbb
aaa
push
pop
pushf
adc
out
inc
and
dec
movsl
aam
mov
or
mov
cmpsb
xchg
aam
dec
adc
dec
add
stos
cltd
mov
cmp
xchg
or
or
pop
lahf
mov
inc
inc
inc
imul
or
xor
dec
push
adcb
mov
andl
mov
test
mov
pop
sub
xchg
movsb
push
lds
pop
shlb
mov
sub
push
iret
cmp
push
and
adc
cmc
test
add
popf
sbb
mov
inc
mov
sub
lock
add
xor
hlt
sti
mov
ss
mov
sub
push
test
pop
int3
jle
jae
add
xchg
pop
roll
es
inc
int
les
pop
or
outsb
in
mov
mov
cwtl
cmp
lret
mov
mov
fstpt
pop
loope
sarl
fwait
mov
xchg
std
outsl
add
ret
aad
mov
mov
sbb
out
lahf
and
adc
fmull
cli
sbb
cmp
mov
mov
dec
mov
jnp
dec
call
daa
push
scas
mov
inc
mov
nop
fdivl
ret
jns
push
sarl
movsl
scas
sub
test
loopne
mov
push
loopne
test
and
pop
xor
pop
in
stos
or
std
fidivl
lea
ret
dec
push
imul
dec
lret
arpl
dec
push
inc
add
stc
sbb
arpl
mov
lds
outsl
dec
cltd
lods
or
sbb
sahf
lahf
mov
es
pushf
xchg
jne
scas
jg
dec
inc
arpl
fs
cmc
sbb
test
or
out
cli
pop
imul
or
xchg
mov
mov
and
sub
add
pop
pop
test
inc
sub
div
sbb
sbb
add
in
sub
mov
ds
flds
std
test
xlat
mov
pop
inc
push
fistl
les
aad
cmp
clc
sbb
mov
or
jge
push
stc
fsubrl
or
icebp
pop
adc
push
addb
dec
push
lea
pop
cmp
jb
popa
ds
dec
push
movsl
jb
jae
sub
xchg
lahf
push
aad
and
mov
out
inc
sbb
mov
sbb
pop
jns
orb
xchg
and
and
mov
push
mov
outsl
or
sub
lahf
mov
push
lds
icebp
push
cs
outsb
mov
out
lds
lods
sbb
xchg
cmp
cs
fbld
test
in
and
mov
loopne
cmc
jne
push
iret
fsub
mov
sbb
cmp
setl
push
xor
cmp
push
mov
push
js
testl
jg
mov
sbb
stos
mov
out
into
mov
loop
sub
sbb
arpl
loop
pop
test
xor
push
ret
and
xchg
add
mov
cmp
fmulp
dec
adc
pusha
in
mov
xchg
notb
push
push
mov
repnz
mov
in
xlat
or
lods
jo
lods
push
lock
hlt
cmp
leave
or
into
insl
int
test
hlt
xor
pop
sub
test
outsl
inc
lret
dec
and
xchg
or
into
fmul
pop
xlat
jle
mov
adc
add
dec
out
aad
rcr
insb
xor
iret
and
and
data16
insl
stc
push
sub
sti
push
lods
ljmp
inc
out
jno
sbb
lods
repnz
and
and
stc
mov
daa
inc
pop
or
int
pop
cmp
jmp
lds
adc
popf
add
outsl
sti
adc
inc
leave
rolb
inc
test
sub
mov
or
add
mov
iret
out
cwtl
inc
jno
mov
inc
dec
ss
adc
pop
pop
mov
mov
or
inc
pop
or
add
and
dec
jb
outsl
push
push
mov
in
ja
lea
sub
dec
cs
out
mov
jmp
push
mov
mov
xchg
mov
das
add
fsts
pusha
out
mov
add
icebp
xchg
cmp
jbe
xchg
xchg
xor
test
push
fcmove
add
aad
cwtl
sti
mov
xor
pop
pushf
xchg
xchg
shl
popa
xor
xchg
and
adc
cs
inc
push
imulb
daa
bound
dec
dec
leave
sti
ss
or
inc
jns
jg
sbb
scas
in
jecxz
add
push
adc
gs
nop
adc
mov
daa
cmp
pop
inc
xchg
scas
and
push
gs
pusha
es
mov
je
int
fcoml
xor
jns
jno
xlat
in
xlat
and
dec
pop
inc
popf
in
and
loopne
add
and
stos
add
pop
inc
loope
in
fisubrl
mov
cmp
push
imul
mov
mov
xchg
repnz
test
cmp
pusha
testb
cltd
pushf
aad
ss
xor
mov
in
mov
jge
insl
sbb
outsb
jge
ficompl
ja
xchg
test
sbb
jns
stc
jno
inc
jp
aad
ljmp
loope
out
add
jne
hlt
pop
jb
mov
dec
andl
stos
jge
por
sub
adc
lret
fcomps
mov
cmp
mov
ds
adc
xchg
ret
pop
pop
lret
cmp
pop
daa
and
in
mov
push
fucomi
rolb
xchg
pop
sub
cs
dec
lahf
lds
pop
adc
pop
xchg
xchg
jp
dec
ret
jle
icebp
lods
jb
adc
outsb
cmpsl
das
and
mov
imul
or
jno
add
inc
andl
iret
daa
pop
or
sbb
mov
mov
xchg
stos
int
decl
lea
push
rolb
or
lods
enter
int3
jbe
sbb
push
aaa
jns
xchg
sarl
das
jge
mov
jmp
fbstp
faddp
imul
lcall
aam
adc
shlb
arpl
andl
mov
push
jg
not
ja
adc
and
dec
out
inc
aad
mov
loope
inc
cs
dec
test
xchg
rcrl
int
mov
lea
inc
jae
dec
in
jg
loop
test
lret
in
and
cwtl
adc
adc
xor
pop
xchg
inc
mov
das
shrl
lea
lods
and
jb
sub
lods
pop
rcll
adc
mov
adc
fucomi
jb
jge,pn
cmpsl
aas
jno
pusha
dec
adc
jno
gs
imul
xor
mov
or
push
repnz
mov
lods
lds
ja
pop
mov
in
jo
and
popw
and
xor
xor
pop
out
test
out
dec
rcrl
xchg
mov
mov
pusha
adc
int
and
jo
jno
push
add
xor
scas
insl
pop
cltd
mov
pop
jbe
xorl
clc
cld
in
pop
outsl
into
add
jp
je
pusha
cs
mov
inc
pop
sub
test
lret
xor
mov
sub
out
sbb
jl
and
or
test
cwtl
movsb
mov
cmp
cmc
int3
loopne
sub
push
cmp
scas
mov
ljmp
outsl
xchg
daa
pusha
mov
xchg
ret
pop
sbb
sub
push
or
sub
add
xchg
jg
and
pop
lcall
add
jle
in
in
lret
mov
mov
ss
cmp
dec
ss
loopne
psubw
xchg
pop
xchg
push
and
ja
jp
cmp
mov
les
aas
push
mov
and
xorb
mov
xlat
inc
rcrl
fwait
mov
outsb
fmull
mov
sbb
in
sub
xor
or
cld
sub
sti
mov
dec
pop
xchg
adc
sub
popa
lods
mov
mov
shll
pop
rclb
mov
mov
hlt
lahf
pop
stos
mov
icebp
add
xchg
sub
sub
sbb
lahf
rolb
mov
mov
push
xor
jnp
test
testb
sub
fwait
adc
fwait
insl
insb
popa
jae
xchg
mov
cmp
or
jmp
sub
rolb
inc
xor
pop
xchg
mov
mov
sub
jne
cmp
pop
push
bound
jge
lods
xchg
xchg
inc
xor
and
ljmp
ja
fsubrs
xchg
clc
test
xchg
pop
pop
xchg
inc
and
and
xchg
bound
stos
push
xchg
adc
or
jo
adc
mov
add
jge
mov
xor
xchg
mov
ffree
xor
sbb
cmp
jl
and
pop
icebp
hlt
cmpsl
jecxz
pushf
jae
fnstsw
mov
loop
aad
push
leave
push
mov
jne
xor
sbb
lods
clc
mov
outsb
pop
fldl
xchg
les
mov
push
das
negl
push
in
mov
fnstcw
adc
loop
adc
aad
jle
insl
test
pop
rcrl
jbe
pop
aas
jmp
rorb
lods
dec
push
and
mov
and
repz
lods
pop
leave
lea
aam
stos
popa
inc
xchg
push
sbb
push
ja
push
scas
jo
mov
pop
outsl
ret
mov
je
add
jb
jns
mov
mov
fists
fwait
dec
add
xchg
es
sbb
dec
movsl
sbbl
jmp
imul
jbe
movsl
leave
sub
imul
test
lcall
inc
mov
mov
sbb
sub
adcl
mov
in
sub
and
ror
xor
cmp
xor
fsubrs
xchg
leave
pusha
pop
mov
and
pop
cmp
fsubrl
out
add
cmp
mov
jg
pop
dec
sub
outsl
lret
loope
ret
mov
push
shrb
fsubr
xlat
les
inc
mov
cmp
je
add
sub
xor
xor
cltd
ret
push
fsubrs
ret
lods
dec
sub
jnp
xchg
test
nop
sub
outsb
test
arpl
mov
shll
aaa
xlat
scas
pop
push
negl
add
xchg
mov
bound
into
or
fs
pop
popf
sub
outsb
inc
sub
shrl
sti
sahf
insb
lea
ja
xorps
mov
mov
inc
mov
dec
mov
jns
nop
or
ds
sarb
cltd
daa
in
out
sub
pop
xchg
jno
mov
cmp
shrl
imul
mov
cld
pusha
xor
out
shll
and
cmp
xchg
pusha
push
in
mov
jecxz
aam
pusha
push
aas
sub
jns
mov
imul
jmp
js
add
jne
or
into
sbb
sar
xchg
daa
insl
inc
fwait
sub
dec
pop
lods
outsb
push
in
dec
pop
cli
fisttpll
or
fdivl
xor
xchg
mov
fistpll
mov
add
movsb
loop
and
adc
sbb
sarb
cld
inc
mov
loop
dec
repz
jns
outsl
bound
in
loope
insl
in
pop
and
inc
ljmp
add
aad
lret
mov
stc
cli
fcoms
arpl
push
pop
aaa
xchg
jns
jle
mov
mov
dec
lahf
repnz
daa
pop
push
inc
imul
loopne
add
inc
xor
mov
adc
addr16
lds
daa
xchg
jnp
ret
xor
ja
out
inc
jecxz
push
xchg
push
or
pop
add
int3
cwtl
popf
cwtl
pusha
dec
in
and
add
iret
dec
push
push
xchg
add
sbb
lds
sub
loop
inc
inc
sbb
inc
or
adc
or
fs
aas
jl
cmp
xor
or
adc
iret
inc
leave
std
fmuls
js
int3
sub
adc
enter
faddl
iret
sub
mov
xor
movsl
test
inc
cmp
sub
cmp
mov
outsb
sub
pushf
leave
fwait
add
call
mov
test
popa
add
jle
adc
mov
cmp
test
xlat
adc
cs
movsl
pop
xchg
test
ret
test
lods
sub
fwait
xchg
push
lret
mov
fiadds
sbbl
test
movsb
xchg
or
aaa
out
outsb
mov
outsb
sub
xorl
xor
sbb
xor
pop
outsb
popf
and
and
negb
mov
or
fldt
jae
mov
jns
push
cwtl
add
movl
fwait
mov
in
inc
or
sbb
xchg
sub
xchg
dec
arpl
aaa
or
cmpsl
inc
insb
jge
cmp
adc
test
imul
xor
scas
pop
pop
je
in
stos
jl,pt
push
fisubrs
and
loopnew
xor
mov
jp
outsl
mov
outsb
pop
into
imul
cmp
pusha
sahf
add
or
sbb
and
scas
and
dec
mov
stos
sub
subb
cmpsl
insl
adc
jb
popf
aaa
es
jecxz
jmp
out
imul
movsb
push
adc
xchg
mov
test
lds
repz
test
sbb
movsb
dec
jp
jg
mov
or
mov
repz
or
aad
lret
pop
dec
pop
pop
jns
inc
push
mov
pop
push
test
call
sbb
xchg
in
ss
push
movsl
cs
mov
xchg
hlt
adc
xchg
sub
and
faddp
lret
or
testb
subl
iret
cmpsb
mov
sti
mov
push
aaa
nop
fs
subb
sub
subl
test
les
or
add
aaa
sbb
dec
mov
xchg
sub
std
or
adc
imul
mov
xlat
std
xor
in
daa
inc
inc
mov
data16
mov
in
xchg
cmpsb
call
divl
test
cmpsl
mov
jmp
inc
or
into
in
shll
add
in
pop
sbb
sub
sbb
dec
leave
adc
dec
push
or
pop
pop
jno
mov
sbb
int3
mov
into
cld
es
outsb
mov
daa
cmp
dec
mov
mov
pushf
xor
xchg
pcmpgtw
push
es
ds
push
enter
in
mov
mov
mov
xchg
prefetch
insl
or
mov
outsl
or
outsb
mov
aas
push
in
mov
adcl
inc
xchg
aad
xor
and
push
sbb
jo
addb
leave
aam
mov
aad
xchg
adc
cmc
pop
into
ljmp
cs
test
jne
std
mov
cmpl
aad
cmp
mov
lds
push
dec
push
out
lods
fs
add
cmpsb
fdivrs
fisttps
fdivrp
and
test
xlat
and
std
pop
jp
es
push
adc
loope
hlt
mov
je
xor
adc
popf
stc
jae
stc
adc
sbb
jae
fwait
push
add
sub
outsl
loope
jnp
adc
mov
mov
pop
mov
cmpsl
fdivl
push
outsb
rclb
sub
in
ret
cmp
sub
push
mov
mov
jo
cmpl
dec
shr
xchg
push
mov
mov
cmp
adc
jl
jl
mov
loopne
pushf
mov
pop
inc
icebp
cmp
jge
jns
or
test
sub
add
shll
jg
jns
or
sbb
pusha
or
jge
dec
aas
inc
stc
jmp
stos
cli
shl
cs
roll
int3
sahf
dec
add
shlb
adc
loope
rolb
call
cmp
pop
bound
sarb
test
xor
sbb
das
imul
add
data16
push
rorl
arpl
sub
movsl
sti
test
xchg
rcrl
jge
popf
je
lret
and
lods
push
inc
push
mov
fs
mov
push
testl
push
lods
iret
and
call
dec
std
add
jmp
in
push
fnstcw
sahf
in
int
xchg
fldcw
imul
jb
sub
mov
ret
dec
fldl
xor
pop
xor
movsb
xor
movsb
mov
jns
aaa
xchg
and
lret
push
dec
repnz
mov
lods
push
jbe
clc
cmp
pop
cmp
adc
inc
and
test
fbstp
aad
xchg
shlb
arpl
pop
in
fwait
mov
mov
inc
scas
dec
pop
mov
xor
mov
xor
fnsave
fldl2t
aam
int
insb
sub
incb
adc
xchg
dec
and
in
data16
push
or
lods
xlat
cmp
adc
sub
rcll
inc
sub
scas
or
or
cmpsb
cmc
repz
mov
aaa
adcb
addl
sub
push
mov
out
leave
pusha
jo
cmc
mov
pop
mov
imul
push
or
sbb
into
stos
adc
xor
cmp
sbb
sub
sarb
out
ja
arpl
dec
xor
enter
scas
leave
ret
sbb
in
sbb
gs
frstor
pop
imul
lret
lret
je
js
bound
sbb
jno
leave
sub
mov
iret
mov
mov
dec
out
out
or
sub
shrb
or
cli
popa
movsl
out
rorl
cmp
cmp
lods
jae
inc
xor
bound
cmp
jl
dec
xchg
pop
aam
hlt
popf
sub
andl
xchg
push
fs
incb
adc
push
adc
aaa
mov
mov
pop
add
mov
ljmp
pop
mov
rcrb
ss
pop
sbb
add
aaa
dec
outsl
addl
aas
stos
sub
xchg
loopne
mov
push
push
pop
push
xchg
sub
outsl
out
or
loop
sub
sahf
mov
xchg
inc
in
mov
fwait
xchg
mov
mov
cmp
leave
ret
lds
pop
ret
mov
icebp
xchg
and
repz
cmc
fcoms
dec
or
sahf
or
ja
jb
push
xchg
pop
pop
testb
dec
push
mov
filds
xor
adc
and
push
sbb
jo
mov
insb
jb
push
push
stc
xor
in
xchg
call
mov
xchg
add
outsb
movsl
pop
xor
rclb
aad
add
push
or
fmuls
dec
add
ret
insl
lea
lret
pop
and
add
push
mov
enter
and
inc
sarb
imul
push
add
push
inc
popa
xor
dec
and
sub
les
test
insb
mov
lret
and
out
addr16
fiaddl
inc
cmp
dec
pop
lret
push
negb
sbb
add
aas
insb
jae
in
mov
es
xor
push
stos
ss
pop
inc
xchg
add
xchg
fdivl
icebp
xchg
xorb
clc
lret
xchg
inc
in
dec
sbb
mov
mov
imul
mov
shll
mov
scas
test
add
clc
enter
fwait
sub
shl
mov
jl
jle
and
xor
pushf
xchg
std
iret
cmp
int
mov
ss
adc
cmp
cli
mov
bound
aaa
pusha
pop
rorl
arpl
push
out
in
jne
pop
sbb
pop
insl
out
mov
popf
hlt
call
mov
lods
inc
inc
rol
call
inc
addr16
or
ja,pn
movsb
mov
mov
or
inc
inc
sbb
pusha
andl
push
loope
icebp
movb
push
sbb
lcall
nop
jne
or
outsb
pop
adc
sbb
mov
cli
fdivrl
iret
mov
xlat
mov
insl
out
sub
xchg
pop
jns
dec
rcll
mov
jle
out
leave
or
add
test
add
lods
lods
inc
cld
and
mov
in
test
movsl
loop
shlb
shrl
pop
stos
xchg
loope
jne
adc
nop
int
or
mov
mov
xchg
adc
jns
push
mov
stos
and
mov
ja
sahf
mov
push
test
fwait
int
xchg
lret
adcl
mov
les
pop
xchg
in
jle
cmp
push
outsl
add
repnz
or
jg
int3
jnp
xor
ss
inc
lret
lock
push
mov
mov
jb
test
leave
pop
push
dec
mov
push
fisttpl
jb
shlb
mov
sti
mov
test
mov
ret
loop
and
push
sub
stc
cmp
filds
push
imul
jl
adc
push
inc
lods
movsl
pushf
cmovg
xchg
mov
pop
jb
add
sub
mov
ja
mov
out
mov
fdivl
xchg
fmulp
xlat
jmp
call
sub
popf
adc
roll
xchg
cmp
mov
xor
aaa
jno
jnp
rclb
mov
cmpsb
mov
cwtl
pop
leave
negl
mov
call
cmp
xchg
cs
jmp
jmp
cmpl
add
xor
out
mov
dec
sub
icebp
jle
sbb
push
test
outsb
fstps
dec
popa
jae
outsb
andb
icebp
mov
cmp
mov
nop
xchg
lods
or
rcrl
jno
jp
sbb
jl
sub
and
sbb
adc
dec
jge
xchg
gs
shll
fucomi
out
inc
fsub
cs
sub
int
pusha
jnp
mov
rcl
push
data16
fstl
es
lea
cmpb
fnstsw
imul
push
nopl
sub
xor
pop
pop
sbb
loopne
xor
fwait
and
shl
insl
int
mov
cs
shl
sub
sbb
shll
stos
xor
inc
sahf
xchg
xchg
into
xchg
xor
ja
inc
enter
mov
add
or
adc
xchg
movsb
push
mov
or
dec
fstpt
lods
and
sti
sub
mov
aaa
mov
sbb
out
out
dec
mov
xchg
inc
pushf
dec
dec
pop
jbe
sub
rolb
iret
xchg
loopne
xchg
inc
dec
sub
mov
mov
je
jp
pop
pop
add
shl
inc
sub
stc
int
scas
data16
mov
adc
and
mov
pop
frstor
xor
in
cmc
les
ja
jno
adc
sub
lea
out
add
arpl
dec
test
ljmp
aad
and
sub
and
iret
jmp
mov
dec
cli
push
add
push
mov
inc
imul
push
cli
push
sbb
inc
stos
aam
add
or
das
sbb
repnz
pop
sbb
xchg
mov
push
mov
test
ret
lea
mov
xchg
inc
pop
stos
iret
lcall
add
push
imul
cmp
lcall
aas
lret
jb
stc
or
lods
lock
popa
jmp
mov
adc
cs
sub
fdivl
jno
add
jl
dec
out
push
dec
and
jo
fnstsw
sarb
jno
leave
out
fsubrs
sti
xchg
sub
cmpsb
jmp
incl
sub
xchg
popf
sub
cmpsl
jnp
mov
mov
jecxz
xchg
or
clc
sub
jo
dec
sbb
out
out
hlt
nop
adc
mov
ja
fdivs
test
lea
mov
imul
dec
nop
pusha
sub
pop
add
jb
loope
rol
jg
test
mov
lock
sub
mov
mov
xor
mov
test
push
inc
mov
add
movsb
mov
push
adc
test
dec
pop
inc
and
push
pop
sti
scas
test
dec
cmpsb
cmp
lcall
xor
pop
or
mov
adc
mov
vmovsldup
and
call
pusha
out
aad
aaa
pop
mov
add
pushf
fmuls
mov
jg
and
inc
inc
dec
mov
xor
jmp
mov
es
mov
mov
pop
mov
xlat
test
out
mov
mov
pop
cmpsl
xchg
dec
sub
cmp
xchg
insb
outsl
int
inc
ret
jne
mov
pop
fcmovb
aad
outsb
pop
pop
mov
mov
and
mov
popa
imul
jno
out
daa
jnp
adc
shlb
cmc
mov
pop
jmp
adc
xchg
add
or
jge
sar
jmp
jp,pt
inc
add
pop
adc
insl
fdivs
or
pop
ret
cmp
mov
hlt
loop
jmp
mov
dec
bound
repz
sbb
test
add
inc
das
sub
xchg
pop
or
mov
cmp
lock
icebp
aaa
mov
jbe
adc
sub
inc
out
popa
sbb
call
mov
leave
sbb
loopne
mov
fnsave
adc
push
dec
pop
mov
pop
stos
xchg
sti
pushf
ljmp
mov
lahf
ja
mov
inc
inc
jo
mov
add
or
xchg
adc
push
lcall
cwtl
or
cmpsb
mov
mov
xor
pop
cmc
mov
jo
roll
sub
push
pushf
imul
sub
mov
mov
dec
mov
fsubrl
lods
lret
sbb
push
inc
orb
popa
loop
test
jae
dec
shl
test
adc
push
cmp
fnstenv
and
mov
dec
sbb
stos
popl
in
cmp
fists
sub
push
sub
jge
push
mov
push
pop
lods
in
test
cld
rcll
loope
push
aas
movsb
popa
mov
outsl
fwait
jo
loopne
fwait
mov
dec
pop
shrd
pop
fs
shlb
outsl
out
sbb
mov
and
cld
aad
add
std
jmp
pushf
mov
xor
push
push
test
cmp
or
icebp
mov
test
pop
mov
les
shll
bound
add
call
outsb
ret
incl
aad
pop
xchg
or
cmp
add
jg
dec
inc
dec
adc
inc
sub
pop
inc
shll
and
mov
ja
inc
mov
xor
mov
stc
ja
aad
sub
int
mov
push
pop
inc
xchg
xchg
loopne
lahf
repnz
jmp
lret
or
ret
insb
aam
lods
mov
lea
add
push
loope
adc
popa
movb
xchg
push
adcl
rclb
fldcw
inc
or
inc
mov
mov
jnp
loop
xchg
stos
add
mov
add
ret
sub
add
repnz
outsl
lea
add
shrl
cmp
shlb
inc
aaa
xor
xor
pop
stos
xchg
mov
jle
nop
dec
fs
leave
jbe
sub
ds
xchg
fcoml
and
fiaddl
jp
lret
addl
inc
jns
nop
and
int
mov
inc
movsl
pop
imul
cmp
iret
pop
in
fisubl
cmpsb
lahf
cmp
loopne
ret
or
movsw
std
scas
mov
sub
movsb
pushf
es
push
std
jmp
mov
or
push
jne
pop
xor
pop
ffreep
dec
xchg
repnz
mov
add
sub
jmp
push
pop
cmp
aaa
dec
mov
arpl
enter
jbe
insb
mov
xor
add
and
das
out
mov
mov
sarl
push
in
jl
icebp
jnp
jl
xchg
aad
leave
test
mov
dec
outsb
sbb
mov
shlb
into
jnp
into
insl
adc
push
movl
xorb
ret
jno
push
ss
dec
aam
adc
std
xchg
movsb
jns
jmp
test
pop
pop
jb
out
push
gs
inc
imul
xchg
aam
mov
les
decb
inc
fs
xor
lcall
cmp
popa
mov
cmp
push
shll
push
inc
cmc
cmp
mov
fidivl
or
imul
xchg
idivl
mov
jo
dec
pop
mov
xor
jmp
out
push
push
in
mov
sub
lods
insl
shrb
cld
adc
test
add
aaa
cwtl
push
jl
inc
outsb
popf
movsl
adc
adc
lcall
in
push
jnp
adc
mov
cltd
inc
xchg
dec
pop
jp
ljmp
repz
iret
dec
iret
imul
pop
and
sub
lods
jns
cld
mov
loopne
mov
sahf
sbbb
mov
xchg
adc
lds
push
lahf
arpl
mov
insl
maxps
and
sbb
push
mov
ds
and
xor
add
shlb
lods
pop
je
rorl
lods
push
pop
testl
mov
or
cli
aam
xor
fidivs
std
aam
push
int
pusha
cmc
xchg
movsb
sbbb
dec
pop
jmp
adc
addr16
hlt
xchg
mov
scas
cmp
push
mov
inc
ds
pop
lock
push
fadd
fnsave
rclb
mov
and
xchg
inc
aad
das
xchg
pusha
lret
rolb
xlat
mov
repz
jo
aaa
cltd
cmp
cmpsb
xchg
fcomps
daa
gs
mov
ja
daa
fwait
pop
mov
push
or
xchg
shlb
xchg
sar
in
pop
pop
ret
adc
cli
test
xor
xor
cltd
xchg
dec
dec
mov
pop
std
xchg
fisubl
je
aam
sbb
cmp
subb
xchg
dec
lds
inc
xchg
sbb
mov
test
loope
int
sbb
dec
jnp
addr16
mov
stos
iret
repz
xor
je
sbb
jecxz
test
outsb
mov
lret
arpl
dec
push
hlt
mov
aad
inc
iret
aaa
inc
cmc
jg
mov
sbb
decb
or
scas
clc
mov
stc
add
pop
sbb
and
xchg
push
mov
sub
addr16
xchg
sbb
push
repnz
push
jp
pop
mov
and
xchg
or
push
xor
dec
ret
ljmp
jae
cltd
cli
push
outsl
in
inc
adc
das
iret
out
fnsave
mov
jnp
push
dec
arpl
jae
and
dec
jg
mov
dec
shlb
cmp
insl
pop
mov
jae
fsubrl
sarl
and
sbb
js
xchg
cmp
arpl
mov
adc
xor
dec
lods
lods
pop
mov
ja
mov
ret
add
out
mov
add
dec
mov
fiadds
pop
fcomps
dec
sub
movsl
xchg
fmuls
mov
fstpt
pop
mov
mov
jp
mov
cmp
xor
pop
insl
add
mov
mov
mov
fimuls
push
gs
jg
test
aas
std
shrl
lock
scas
out
icebp
andl
aam
rol
cmp
dec
mov
mov
in
pop
subb
ja
inc
insb
cmp
enter
push
int
xor
pop
jnp
int3
push
pop
popa
sub
pop
stc
push
lods
jmp
test
adcl
mov
aas
outsl
push
inc
addr16
or
in
mov
inc
add
loopne
push
ljmp
and
push
js
into
repnz
icebp
push
das
mov
jo
je
add
jno
fs
test
cltd
ja
push
pop
dec
ljmp
mov
js
out
and
in
mov
sub
and
lods
mov
outsb
jmp
add
dec
mov
xchg
mov
pusha
andb
inc
sbb
je
sarl
imulb
icebp
ljmp
data16
stc
ja
ja
fistpll
pushf
dec
pop
dec
popl
cltd
sbb
push
dec
test
insl
fsubl
cld
mov
xor
or
lahf
mov
push
ja
pop
repz
lcall
cmpl
int
xor
roll
mov
cmpsb
dec
pusha
scas
and
jno
popa
stos
inc
call
dec
fidivrl
jb
xchg
lea
ss
xchg
sbb
or
inc
aad
loope
inc
mov
push
ret
shrl
sub
push
das
cmpsb
jnp
cmp
cmp
mov
xchg
jnp
inc
jbe
stos
or
mov
mov
xchg
add
sub
mov
push
sbb
in
push
dec
ret
jl
cltd
loopne
cmp
movsl
jns,pt
lcall
pop
push
xchg
or
stos
add
dec
dec
jo
xchg
into
sub
movsl
aam
add
jno
out
pop
mov
dec
adc
xchg
rorl
in
or
out
cmp
test
cmp
sub
fidivs
popa
out
clc
xlat
push
sti
sub
mov
adc
lahf
mov
call
fs
jne
stos
mov
cmp
push
addb
sbb
cmp
loop
push
sub
lret
push
mov
int
xchg
cltd
jmp
xor
or
sahf
mov
pop
int
mov
dec
or
pop
xor
mov
xor
xor
sbb
cmp
rorl
enter
sahf
xchg
idivb
push
cmp
and
in
xchg
imul
jne
sbbl
push
xor
jno
or
aas
mov
fsts
mov
scas
movsl
sbb
insl
jecxz
mov
or
mov
cs
sbb
lods
arpl
inc
xor
ja
add
insl
lret
dec
sub
mov
xchg
dec
leave
test
inc
xchg
lret
pop
pop
inc
dec
add
add
hlt
in
cmpsl
scas
orb
ljmp
xor
inc
inc
addl
push
sub
xchg
scas
aas
pop
push
sbb
jb
mov
hlt
add
adc
test
jne
orl
pusha
or
mov
mov
sbb
adcb
pop
int3
jnp
in
xchg
inc
push
push
int
xchg
add
pop
add
je
push
out
mov
push
lds
dec
sahf
mov
xor
aaa
outsl
xchg
jg
test
adc
imul
xchg
fwait
add
mov
xor
mov
cmp
aas
popf
pop
push
pusha
xchg
insl
push
fnstsw
imul
jbe
sub
xlat
fistl
mov
shrl
jns
inc
xor
call
subl
rcr
push
test
shrb
add
ss
xlat
xchg
inc
jns
pop
mov
dec
xchg
xchg
mov
push
inc
daa
addr16
sub
inc
popa
faddl
je
pushf
inc
in
int3
push
xlat
insb
mov
frstor
inc
cmp
mov
bound
and
or
cs
sbb
cmpsl
shrb
nop
sub
mov
icebp
jnp
mov
icebp
inc
and
ljmp
mov
push
jmp
pop
fisttpl
ljmp
xchg
negl
xchg
lds
push
jbe
inc
lods
mov
xchg
xchg
std
ret
pop
outsl
cmp
xor
sbb
and
aas
sub
icebp
lock
xchg
shll
fcmovnbe
inc
sub
xlat
and
and
cmp
inc
dec
je
rclb
pop
mov
mov
sbbb
test
mov
mov
jns
in
fs
lds
cld
or
push
cmpsl
xchg
lds
pop
lods
iret
pop
orl
sti
lea
pop
xchg
roll
sub
ficoml
dec
lret
cld
cmp
push
xor
inc
push
dec
loope
int3
push
rcll
and
cmp
adc
test
loop
fwait
sarb
inc
or
mov
outsb
add
fisttps
andb
imul
insl
add
mov
mov
insl
pop
xor
and
popf
xchg
xor
ja
mov
mov
ds
ret
dec
ss
push
mov
mov
decl
or
icebp
cld
adc
add
dec
xor
add
cs
cmpsb
pop
or
das
push
cltd
xor
lcall
adc
imul
cmp
mov
lret
hlt
repnz
sahf
lea
sbb
in
xchg
xchg
push
mov
push
sahf
pop
fld
in
js
xor
mov
fnstenv
roll
nop
adc
test
hlt
xchg
aam
xor
test
loope
sbb
lahf
ss
xchg
cs
fnstenv
outsl
loope
pause
xchg
cmpl
mov
or
jno
sub
nop
cli
shrl
xchg
cli
dec
inc
lods
testl
lea
roll
dec
mov
dec
inc
mov
jnp
xchg
ret
xchg
cli
sub
imul
lcall
movsb
adc
xor
nop
xchg
lds
xorl
cli
addr16
xor
jb
adc
mov
jg
scas
xchg
or
push
daa
sub
mov
loope
xchg
mov
add
popa
mov
imul
jg
dec
push
fldz
adc
add
jae
push
imul
and
idivb
mov
dec
sbb
mov
jl
mov
or
adc
sub
rorl
insl
pop
pop
imul
mov
imul
stos
mov
inc
rorl
jo
popaw
mov
loope
jnp
lahf
mov
xchg
sub
shl
pop
cltd
cmp
mov
xchg
scas
jl
bound
leave
enter
mov
das
add
data16
mov
jo
sarb
mov
sub
or
ror
lds
mov
sbb
pop
imul
push
data16
push
sub
fnstsw
imul
popf
fucom
cmpsl
add
imul
hlt
inc
cmp
cmc
push
sub
mov
loopne
xor
cmpsl
sbb
pop
pop
orl
mov
lret
xchg
pushf
stc
nop
loope
fstl
mov
dec
daa
rcll
sbb
bswap
ds
xchg
xchg
sub
aas
lea
xor
cmpsl
aaa
es
adc
adc
inc
cmp
mov
and
and
adc
nop
fidivs
and
and
call
cmc
pop
cltd
xchg
clts
adc
jge
jge
mov
les
cmp
icebp
loopne
leave
fstl
int
pop
ret
outsb
inc
xor
dec
out
mov
iret
out
push
out
lock
jmp
jno
enter
mov
insl
lcall
mov
push
mov
sbb
cmp
or
cmp
pop
and
sbb
fdivrs
icebp
dec
outsb
xor
jo
push
dec
jnp
sbb
out
inc
in
fdivl
mov
lret
call
inc
test
xor
mov
dec
sub
cwtl
cwtl
dec
and
cmp
lods
pop
jg
pop
stos
jne
push
inc
cmpsb
sahf
das
push
ja
ret
ljmp
mov
dec
jbe
jae
mov
mov
mov
imul
push
sbbl
call
push
and
outsb
test
in
sub
test
mov
fidivs
mov
jge
popa
xchg
imul
jg
mov
add
icebp
insl
aad
push
xchg
neg
lea
push
push
push
xchg
add
cwtl
popf
dec
cli
or
push
and
mov
std
hlt
std
mov
push
mov
add
les
clc
outsb
popf
aad
bound
jae
jge
cmp
xchg
dec
xchg
push
adc
aas
lods
dec
pop
sub
pop
jl
add
push
mov
and
xchg
inc
push
or
adc
fiaddl
notrack
pop
xchg
sub
pop
mov
in
or
add
xchg
sti
sub
movsb
mov
lahf
adc
jnp
shr
pop
pop
out
leave
pop
or
repnz
add
mov
adc
pand
mov
cmp
or
mov
jne
xlat
xchg
outsb
test
aam
sbb
inc
dec
into
or
cmp
cmp
xor
outsl
adc
ja
enter
ja
dec
sub
sbb
cmp
aad
into
nop
sub
xchg
arpl
xchg
xchg
test
es
loope
lahf
bnd
sarl
out
int3
xor
add
inc
out
mulb
bound
or
lcall
stos
nop
push
lahf
or
xor
daa
es
popl
pop
data16
inc
sub
push
inc
inc
gs
movsb
outsb
sub
adc
rcl
lea
add
and
inc
movsb
into
mov
pushf
cli
adc
es
sbb
sub
ss
cmp
outsl
xchg
lock
cmc
xchg
out
sub
jno
int
popf
fistpll
and
push
push
mov
stos
pop
dec
test
sbb
insb
fwait
mov
sbbb
aaa
push
and
pop
add
es
or
adc
fsubl
fcom
fnsave
lret
pop
or
or
jge
lds
fs
pushf
jp
push
mov
jb
lea
dec
pop
xchg
fisubrs
push
inc
pop
iret
nop
or
xchg
loope
sbb
cli
mov
sub
mov
loop
stos
add
addr16
mov
ds
cmpsb
lock
enter
fdivrs
int3
jp
lea
iret
mov
in
insb
and
das
shlb
fcomip
xchg
aas
fsts
subl
test
lret
jle
popf
enter
in
sub
mov
pop
shll
pop
push
xchg
xlat
inc
enter
rorl
loopne
adc
in
adcl
cmp
aam
add
dec
outsl
int3
jl
sub
push
paddd
pop
pop
push
ja
outsb
jo
je
aas
das
stc
into
xchg
test
out
testl
sbb
testl
mov
imul
sub
fisubrl
int3
push
rcl
rcll
pushf
xchg
lret
imul
add
call
push
jg
fldl
or
xor
dec
xor
imul
ds
mov
pop
jle
pop
fisubl
leave
pop
test
rclb
xchg
js
into
or
imul
jae
test
inc
mull
cld
or
adc
pop
sub
add
call
push
mov
rcrb
repnz
mov
cs
addr16
jp
orb
xchg
ja
mov
mov
xchg
adc
mov
mov
xchg
push
jmp
mov
movb
iret
mov
jnp
sbb
push
lds
mov
mov
daa
fisubl
sub
in
xchg
lret
and
addr16
scas
or
dec
sti
pusha
jnp
rcl
stos
sbb
mov
inc
loopne
add
shrb
lock
and
out
push
adc
adc
mov
dec
pop
xor
inc
lcall
loopne
add
push
insl
xor
ss
xor
or
adc
repz
mov
out
inc
loopne
add
insl
ss
xor
in
or
or
cmp
divps
daa
xor
and
gs
xlat
fistpll
pop
inc
test
insb
call
test
xor
test
ret
nop
in
dec
pusha
mov
ss
sub
adc
xor
push
mov
sti
lret
mov
xchg
sbb
das
insl
hlt
les
add
sub
mov
fldt
gs
mov
pop
icebp
push
mov
dec
icebp
pop
scas
shl
dec
push
stos
mov
xchg
lea
push
add
nop
jle
xor
mov
scas
cmp
mov
scas
push
sarl
mov
roll
or
adc
out
mov
sbb
xor
fprem1
xor
xor
mov
pushf
in
iret
push
aad
lret
mov
or
pop
push
subl
fistl
test
mov
push
rcll
or
dec
daa
add
pop
xchg
bnd
ja
add
mov
and
add
and
add
and
add
add
sbb
add
and
add
and
add
add
push
add
jbe
add
test
add
lcall
add
and
add
and
add
add
add
add
and
add
add
or
add
push
and
add
and
add
and
add
and
add
add
push
and
add
add
add
jp
add
test
add
xchg
and
add
and
add
add
fsubs
add
loop
add
mulb
add
or
add
and
add
add
cs
add
add
inc
and
add
add
add
incl
inc
inc
add
add
add
add
call
and
add
add
add
dec
and
add
add
out
add
clc
and
add
add
sbb
add
and
add
and
add
add
push
add
jbe
add
test
add
lcall
add
and
add
and
add
add
add
add
and
add
add
or
add
push
and
add
and
add
and
add
and
add
add
push
and
add
add
add
jp
add
test
add
xchg
and
add
and
add
add
fsubs
add
loop
add
mulb
add
or
add
and
add
add
cs
add
add
inc
and
add
add
add
outsb
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
insl
popa
je
gs
popa
addr16
add
test
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
xor
insb
jae
jb
jo
inc
add
dec
or
outsb
inc
jbe
outsb
je
add
add
inc
gs
outsl
insl
jo
je
jb
popa
insl
gs
add
adcl
outsl
fs
gs
popa
outsb
fs
gs
add
jno
inc
js
popa
outsb
fs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
jae
jb
insl
jo
add
out
push
jne
jae
inc
jbe
outsb
je
add
add
je
jns
je
insl
inc
imul
jns
add
adc
jne
inc
popa
je
inc
outsl
jb
popa
je
inc
js
add
pop
or
je
jne
bound
inc
outsl
jb
popa
je
add
ss
insb
outsl
bound
inc
fs
je
insl
inc
add
push
push
je
imul
inc
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
jmp
pop
imul
popa
add
inc
or
js
je
jecxz
pop
insl
bound
arpl
mov
je
add
pop
jo
pop
arpl
insl
outsl
fs
sbb
pop
ja
jo
ja
insb
jo
inc
add
imul
add
add
arpl
add
pop
popa
arpl
insb
outsb
add
pop
pop
jo
pop
insw
outsl
fs
ja
pop
insl
bound
imul
add
pop
or
je
outsb
jbe
add
pop
pop
addr16
popa
imul
push
maxps
jae
popa
je
rorl
insl
gs
jae
je
add
or
outsb
imul
or
je
jae
jb
popa
je
gs
add
sub
push
jae
pop
imul
or
insl
arpl
add
add
gs
gs
pop
push
gs
add
je
pop
pop
jae
je
popa
jo
pop
je
jo
add
push
or
outsl
outsb
je
outsl
insb
data16
add
pop
pop
arpl
inc
imul
pop
gs
popa
outsb
fs
or
addr16
gs
je
add
insl
outsl
add
jb
popa
insb
insb
outsl
arpl
dec
push
push
inc
push
push
cs
insb
add
in
dec
jne
je
inc
jns
gs
outsl
push
imul
inc
add
push
add
dec
add
push
add
dec
add
arpl
push
add
pop
add
add
pop
add
add
pop
add
dec
add
cmp
add
push
add
inc
add
add
add
popa
add
add
inc
add
pop
add
inc
add
pop
add
push
add
push
add
add
dec
add
add
add
pop
add
inc
add
pop
add
popa
add
add
dec
add
inc
add
inc
add
inc
add
add
inc
add
dec
add
inc
add
dec
add
popa
add
add
dec
add
pop
add
pop
add
pop
add
push
add
arpl
dec
add
dec
add
dec
add
cmp
aas
add
add
pop
add
aas
add
add
dec
add
inc
add
bound
pop
add
cmp
add
pop
add
pop
add
add
inc
add
push
add
pop
add
inc
add
inc
add
bound
cmp
inc
add
arpl
push
add
inc
add
cmp
add
popa
add
add
arpl
add
push
add
dec
add
inc
add
dec
add
pop
add
dec
add
cmp
add
pusha
add
dec
add
push
add
cmp
aas
add
pop
add
dec
add
inc
add
dec
add
dec
add
add
push
add
push
add
inc
add
pop
add
add
arpl
pop
add
pop
add
pop
add
dec
add
inc
add
pop
add
push
add
add
push
add
add
push
add
inc
add
pop
add
aas
add
inc
add
dec
add
dec
add
inc
add
pop
add
aas
add
pop
add
add
dec
add
pusha
add
push
add
dec
add
dec
add
pop
add
pop
add
add
push
add
add
cmp
add
add
add
dec
add
dec
add
add
inc
add
cmp
add
aas
add
push
add
add
pop
add
dec
add
pusha
add
dec
add
push
add
inc
add
inc
add
dec
add
pop
add
push
add
add
add
cmp
add
dec
add
add
cmp
inc
add
push
add
dec
add
push
add
add
cmp
add
pop
add
push
add
add
add
dec
add
add
pop
add
push
add
pop
add
add
push
add
inc
add
arpl
pop
add
push
add
inc
add
dec
add
inc
add
add
dec
add
arpl
aas
add
arpl
cmp
add
add
pop
add
dec
add
add
dec
add
pop
add
dec
add
inc
add
push
add
cmp
aas
add
dec
add
push
add
add
dec
add
aas
add
inc
add
pop
add
popa
add
add
add
inc
add
add
pop
add
pop
add
add
dec
add
push
add
add
pusha
add
pop
add
pop
add
add
cmp
add
pusha
add
add
dec
add
bound
bound
cmp
add
inc
add
add
dec
add
pop
add
inc
add
pop
add
add
push
add
add
push
add
pop
add
dec
add
arpl
pop
add
add
dec
add
inc
add
bound
push
add
cmp
inc
add
add
aas
add
dec
add
inc
add
inc
add
pop
add
add
add
dec
add
add
pop
add
push
add
inc
add
push
add
add
inc
add
bound
cmp
add
add
inc
add
inc
add
add
push
add
cmp
add
pop
add
push
add
push
add
push
add
pusha
add
push
add
push
add
cmp
add
inc
add
inc
add
push
add
push
add
add
dec
add
push
add
inc
add
add
bound
cmp
add
add
add
push
add
push
add
pop
add
dec
add
push
add
cmp
dec
add
pop
add
add
add
pop
add
inc
add
cmp
cmp
push
add
dec
add
cmp
cmp
pop
add
push
add
inc
add
push
add
inc
add
push
add
add
dec
add
pop
add
push
add
add
popa
add
inc
add
pop
add
inc
add
add
dec
add
pop
add
push
add
dec
add
dec
add
dec
add
pop
add
cmp
add
cmp
inc
add
pop
add
inc
add
inc
add
add
add
dec
add
push
add
push
add
pop
add
popa
add
pop
add
pop
add
cmp
add
cmp
pop
add
add
add
push
add
arpl
pop
add
popa
add
add
arpl
dec
add
add
dec
add
pop
add
cmp
add
inc
add
dec
add
dec
add
add
dec
add
inc
add
push
add
add
cmp
pop
add
add
add
pop
add
inc
add
add
cmp
pop
add
add
dec
add
dec
add
pop
add
cmp
add
inc
add
inc
add
arpl
push
add
pop
add
inc
add
pop
add
pop
add
pop
add
popa
add
cmp
dec
add
add
add
dec
add
dec
add
add
add
add
bound
pop
add
pusha
add
dec
add
inc
add
inc
add
inc
add
arpl
pop
add
dec
add
dec
add
inc
add
pop
add
pop
add
add
push
add
inc
add
push
add
cmp
pop
add
push
add
pusha
add
inc
add
inc
add
push
add
add
pusha
add
add
popa
add
dec
add
pop
add
add
dec
add
pop
add
push
add
add
push
add
add
add
bound
push
add
inc
add
add
pop
add
pop
add
add
cmp
push
add
push
add
pop
add
add
push
add
inc
add
inc
add
push
add
bound
inc
add
aas
add
dec
add
popa
add
add
dec
add
inc
add
pop
add
inc
add
pusha
add
add
add
pop
add
inc
add
pop
add
dec
add
aas
add
inc
add
dec
add
inc
add
push
add
dec
add
pop
add
inc
add
cmp
dec
add
inc
add
dec
add
push
add
cmp
add
push
add
cmp
add
add
push
add
dec
add
add
push
add
add
pop
add
pop
add
inc
add
cmp
add
add
push
add
cmp
pop
add
pop
add
pusha
add
pop
add
add
add
push
add
add
push
add
pop
add
add
add
cmp
add
add
dec
add
pop
add
push
add
dec
add
inc
add
add
inc
add
dec
add
cmp
add
cmp
push
add
pusha
add
push
add
cmp
add
pusha
add
push
add
add
push
add
push
add
push
add
dec
add
inc
add
add
pop
add
dec
add
inc
add
push
add
inc
add
dec
add
inc
add
popa
add
push
add
inc
add
arpl
push
add
cmp
add
push
add
popa
add
add
pop
add
arpl
pop
add
popa
add
dec
add
cmp
push
add
dec
add
dec
add
arpl
bound
inc
add
pop
add
add
inc
add
inc
add
push
add
push
add
dec
add
pusha
add
dec
add
add
pop
add
push
add
inc
add
cmp
push
add
dec
add
add
inc
add
add
pusha
add
pop
add
aas
add
pusha
add
inc
add
pop
add
pop
add
cmp
inc
add
pop
add
inc
add
bound
pop
add
add
pop
add
cmp
pop
add
pop
add
arpl
aas
add
arpl
pop
add
push
add
add
dec
add
cmp
add
popa
add
push
add
inc
add
dec
add
aas
add
dec
add
push
add
arpl
cmp
add
dec
add
cmp
add
add
dec
add
inc
add
inc
add
inc
add
add
dec
add
pop
add
inc
add
popa
add
add
push
add
push
add
pop
add
push
add
push
add
dec
add
add
add
cmp
push
add
dec
add
inc
add
dec
add
dec
add
dec
add
pop
add
pop
add
push
add
add
pop
add
add
dec
add
push
add
add
inc
add
bound
dec
add
push
add
inc
add
add
pop
add
push
add
inc
add
add
add
inc
add
add
inc
add
dec
add
push
add
dec
add
dec
add
dec
add
push
add
pop
add
bound
dec
add
add
dec
add
add
inc
add
pop
add
inc
add
inc
add
push
add
dec
add
add
pop
add
add
add
push
add
cmp
push
add
dec
add
dec
add
inc
add
push
add
add
push
add
push
add
add
dec
add
inc
add
push
add
dec
add
popa
add
add
add
push
add
dec
add
inc
add
add
add
cmp
add
inc
add
dec
add
bound
inc
add
add
push
add
inc
add
bound
pop
add
inc
add
add
pop
add
add
pop
add
pop
add
cmp
add
add
pop
add
add
cmp
dec
add
push
add
inc
add
pop
add
dec
add
pop
add
add
push
add
inc
add
add
inc
add
add
bound
aas
add
bound
dec
add
pop
add
inc
add
add
dec
add
pop
add
pop
add
pop
add
bound
inc
add
pop
add
dec
add
pop
add
dec
add
pop
add
add
pop
add
aas
add
cmp
add
inc
add
push
add
add
add
cmp
pop
add
pop
add
arpl
push
add
add
pop
add
dec
add
pusha
add
arpl
dec
add
push
add
add
push
add
pop
add
inc
add
pop
add
add
inc
add
dec
add
inc
add
add
push
add
dec
add
push
add
pusha
add
dec
add
pop
add
pop
add
pop
add
pop
add
aas
add
inc
add
pop
add
inc
add
push
add
dec
add
add
pop
add
inc
add
push
add
pop
add
aas
add
push
add
inc
add
dec
add
add
push
add
inc
add
dec
add
push
add
push
add
add
push
add
dec
add
push
add
add
popa
add
dec
add
add
pusha
add
pop
add
popa
add
inc
add
pop
add
dec
add
inc
add
pop
add
dec
add
aas
add
inc
add
dec
add
dec
add
push
add
add
add
pop
add
push
add
pop
add
push
add
inc
add
add
add
arpl
pop
add
add
cmp
add
popa
add
pop
add
cmp
add
push
add
popa
add
add
inc
add
popa
add
aas
add
bound
aas
add
add
dec
add
push
add
dec
add
push
add
pusha
add
inc
add
inc
add
inc
add
push
add
dec
add
add
add
add
dec
add
add
dec
add
add
add
add
push
add
push
add
dec
add
add
inc
add
aas
add
inc
add
add
inc
add
pop
add
add
dec
add
push
add
pop
add
dec
add
push
add
inc
add
pop
add
inc
add
add
add
dec
add
dec
add
pop
add
dec
add
cmp
inc
add
push
add
pop
add
pusha
add
pop
add
add
pop
add
dec
add
inc
add
dec
add
bound
cmp
dec
add
popa
add
dec
add
inc
add
dec
add
inc
add
dec
add
inc
add
popa
add
push
add
bound
pop
add
inc
add
push
add
add
add
inc
add
dec
add
push
add
inc
add
pop
add
push
add
pop
add
pop
add
pusha
add
pop
add
inc
add
push
add
pop
add
pop
add
push
add
add
dec
add
add
dec
add
pop
add
push
add
pop
add
popa
add
inc
add
cmp
popa
add
arpl
inc
add
cmp
arpl
pop
add
dec
add
push
add
pop
add
add
arpl
dec
add
pop
add
inc
add
pop
add
inc
add
inc
add
pop
add
dec
add
pop
add
popa
add
push
add
arpl
inc
add
inc
add
add
push
add
pop
add
dec
add
inc
add
dec
add
pop
add
pop
add
inc
add
pop
add
dec
add
push
add
push
add
add
inc
add
push
add
push
add
bound
inc
add
dec
add
pusha
add
push
add
push
add
pop
add
pop
add
aas
add
push
add
push
add
add
inc
add
add
inc
add
push
add
dec
add
inc
add
pusha
add
bound
pop
add
cmp
add
inc
add
push
add
pop
add
bound
inc
add
dec
add
push
add
add
inc
add
pusha
add
add
add
add
pusha
add
inc
add
push
add
pop
add
dec
add
pusha
add
pop
add
inc
add
inc
add
inc
add
popa
add
dec
add
pop
add
dec
add
inc
add
pop
add
inc
add
push
add
push
add
arpl
push
add
inc
add
dec
add
add
pop
add
push
add
bound
aas
add
pop
add
inc
add
inc
add
inc
add
add
pop
add
dec
add
push
add
cmp
dec
add
add
inc
add
pop
add
inc
add
push
add
push
add
cmp
add
add
add
inc
add
inc
add
pop
add
push
add
pop
add
arpl
push
add
add
inc
add
pop
add
arpl
dec
add
push
add
add
dec
add
push
add
cmp
add
dec
add
inc
add
inc
add
inc
add
popa
add
add
dec
add
push
add
push
add
dec
add
add
inc
add
dec
add
inc
add
aas
add
add
pop
add
pop
add
inc
add
inc
add
arpl
push
add
add
dec
add
dec
add
inc
add
push
add
aas
add
push
add
pusha
add
push
add
dec
add
push
add
add
cmp
add
inc
add
popa
add
dec
add
pop
add
inc
add
pop
add
pop
add
dec
add
dec
add
pop
add
inc
add
pop
add
dec
add
add
pop
add
inc
add
dec
add
pop
add
push
add
pop
add
add
pop
add
pusha
add
pusha
add
inc
add
push
add
dec
add
add
pop
add
pop
add
add
add
inc
add
arpl
pop
add
dec
add
add
inc
add
dec
add
push
add
pop
add
dec
add
aas
add
pusha
add
add
bound
dec
add
dec
add
add
add
dec
add
cmp
inc
add
inc
add
pop
add
inc
add
pop
add
pusha
add
inc
add
cmp
add
push
add
pop
add
push
add
push
add
popa
add
dec
add
add
popa
add
cmp
add
pop
add
inc
add
aas
add
inc
add
pop
add
push
add
add
popa
add
add
pop
add
inc
add
add
aas
add
push
add
pop
add
pop
add
dec
add
dec
add
push
add
pusha
add
inc
add
pop
add
inc
add
dec
add
pop
add
pop
add
add
inc
add
cmp
dec
add
add
bound
push
add
pop
add
add
inc
add
dec
add
pop
add
cmp
add
push
add
pop
add
add
pop
add
cmp
add
add
dec
add
inc
add
pop
add
pop
add
push
add
pusha
add
dec
add
push
add
pop
add
dec
add
push
add
arpl
push
add
add
dec
add
pop
add
arpl
push
add
add
dec
add
dec
add
bound
inc
add
bound
push
add
pop
add
add
push
add
dec
add
push
add
pop
add
push
add
aas
add
inc
add
pop
add
add
add
add
cmp
add
pop
add
push
add
push
add
dec
add
pop
add
push
add
pop
add
inc
add
inc
add
dec
add
push
add
pop
add
add
add
add
pop
add
cmp
add
push
add
pusha
add
bound
inc
add
pop
add
pop
add
push
add
add
add
add
pusha
add
inc
add
push
add
inc
add
add
push
add
dec
add
aas
add
add
cmp
add
dec
add
add
add
inc
add
add
add
cmp
cmp
push
add
dec
add
inc
add
inc
add
inc
add
inc
add
dec
add
add
pop
add
push
add
inc
add
push
add
pop
add
popa
add
dec
add
inc
add
pop
add
dec
add
inc
add
add
arpl
pusha
add
dec
add
pusha
add
dec
add
dec
add
add
pop
add
inc
add
pop
add
inc
add
add
push
add
push
add
dec
add
push
add
dec
add
pop
add
add
cmp
add
add
aas
add
inc
add
push
add
dec
add
add
add
inc
add
pop
add
add
add
inc
add
push
add
push
add
popa
add
add
dec
add
add
add
dec
add
add
inc
add
add
inc
add
pop
add
dec
add
pop
add
bound
inc
add
dec
add
inc
add
add
pop
add
inc
add
dec
add
aas
add
pop
add
inc
add
popa
add
bound
pop
add
inc
add
dec
add
dec
add
add
push
add
pop
add
push
add
cmp
pop
add
push
add
push
add
add
dec
add
add
dec
add
inc
add
push
add
add
pop
add
add
push
add
bound
inc
add
pop
add
pop
add
push
add
inc
add
pop
add
pop
add
inc
add
inc
add
add
pop
add
add
pop
add
popa
add
pop
add
dec
add
add
inc
add
add
add
dec
add
inc
add
dec
add
dec
add
inc
add
aas
add
pop
add
add
add
inc
add
pop
add
pop
add
pusha
add
dec
add
bound
inc
add
dec
add
dec
add
pop
add
dec
add
dec
add
inc
add
inc
add
inc
add
inc
add
cmp
push
add
inc
add
add
inc
add
push
add
pop
add
add
pop
add
inc
add
pop
add
add
arpl
inc
add
pop
add
add
aas
add
pop
add
inc
add
add
inc
add
pop
add
add
add
pop
add
inc
add
add
add
dec
add
bound
aas
add
popa
add
arpl
push
add
inc
add
push
add
add
push
add
cmp
add
add
push
add
pop
add
add
pop
add
pop
add
add
pop
add
popa
add
dec
add
add
push
add
push
add
dec
add
dec
add
push
add
push
add
aas
add
pop
add
add
push
add
inc
add
dec
add
aas
add
inc
add
aas
add
add
inc
add
aas
add
pop
add
inc
add
push
add
push
add
push
add
pop
add
pop
add
pop
add
inc
add
inc
add
push
add
add
add
pop
add
add
push
add
dec
add
pop
add
dec
add
inc
add
inc
add
dec
add
add
dec
add
inc
add
dec
add
push
add
pop
add
bound
inc
add
inc
add
add
add
push
add
inc
add
add
inc
add
push
add
dec
add
add
dec
add
push
add
push
add
add
push
add
dec
add
inc
add
push
add
dec
add
add
push
add
inc
add
add
cmp
dec
add
push
add
pop
add
push
add
dec
add
pop
add
pop
add
add
push
add
push
add
push
add
add
add
add
push
add
add
dec
add
dec
add
add
pop
add
push
add
pop
add
bound
pop
add
pop
add
add
dec
add
dec
add
push
add
dec
add
add
add
inc
add
inc
add
dec
add
bound
aas
add
push
add
add
bound
push
add
push
add
add
cmp
add
pop
add
pop
add
popa
add
bound
dec
add
add
cmp
add
pop
add
push
add
dec
add
inc
add
dec
add
inc
add
inc
add
add
bound
inc
add
push
add
add
add
add
inc
add
cmp
cmp
popa
add
dec
add
add
inc
add
dec
add
pop
add
add
aas
add
inc
add
aas
add
pop
add
arpl
push
add
pop
add
inc
add
popa
add
add
inc
add
inc
add
dec
add
popa
add
cmp
dec
add
dec
add
push
add
pop
add
aas
add
inc
add
dec
add
dec
add
push
add
cmp
add
add
inc
add
arpl
aas
add
inc
add
pop
add
add
push
add
add
dec
add
add
dec
add
add
inc
add
inc
add
dec
add
inc
add
popa
add
dec
add
dec
add
add
dec
add
pusha
add
pop
add
pop
add
inc
add
pop
add
pop
add
inc
add
add
dec
add
push
add
push
add
dec
add
push
add
popa
add
inc
add
pop
add
pop
add
inc
add
arpl
inc
add
dec
add
push
add
inc
add
add
arpl
dec
add
push
add
push
add
inc
add
dec
add
inc
add
push
add
arpl
push
add
arpl
inc
add
dec
add
add
add
pop
add
inc
add
add
push
add
cmp
add
add
pop
add
pop
add
inc
add
push
add
dec
add
push
add
add
inc
add
cmp
add
cmp
push
add
pop
add
inc
add
add
pop
add
dec
add
pop
add
add
add
pop
add
pop
add
dec
add
inc
add
dec
add
arpl
pop
add
pop
add
inc
add
add
dec
add
add
push
add
inc
add
add
push
add
add
aas
add
pop
add
push
add
arpl
push
add
dec
add
pop
add
add
add
popa
add
dec
add
push
add
arpl
inc
add
arpl
pop
add
pop
add
popa
add
inc
add
pop
add
add
dec
add
dec
add
inc
add
inc
add
inc
add
add
push
add
arpl
pop
add
pop
add
add
pusha
add
dec
add
cmp
add
inc
add
pop
add
popa
add
push
add
add
pop
add
cmp
pop
add
pusha
add
push
add
dec
add
inc
add
aas
add
dec
add
inc
add
pusha
add
push
add
push
add
popa
add
pop
add
pop
add
pop
add
inc
add
push
add
pop
add
push
add
pop
add
cmp
add
pop
add
dec
add
push
add
inc
add
dec
add
cmp
push
add
pop
add
popa
add
inc
add
add
inc
add
add
push
add
push
add
bound
dec
add
push
add
popa
add
add
inc
add
dec
add
aas
add
inc
add
dec
add
inc
add
add
cmp
add
bound
pop
add
pop
add
popa
add
push
add
push
add
pop
add
dec
add
push
add
pop
add
pop
add
inc
add
push
add
bound
inc
add
add
dec
add
add
bound
push
add
dec
add
pop
add
bound
push
add
inc
add
push
add
add
add
pop
add
inc
add
add
pop
add
dec
add
cmp
add
popa
add
pop
add
cmp
add
dec
add
pop
add
push
add
inc
add
add
push
add
push
add
pop
add
pusha
add
dec
add
dec
add
pop
add
pop
add
push
add
push
add
add
dec
add
inc
add
aas
add
pop
add
dec
add
inc
add
add
add
inc
add
aas
add
inc
add
aas
add
cmp
add
add
inc
add
add
push
add
dec
add
dec
add
bound
pop
add
arpl
pop
add
pop
add
pop
add
pop
add
dec
add
add
dec
add
pop
add
bound
pop
add
inc
add
popa
add
popa
add
inc
add
inc
add
inc
add
dec
add
cmp
cmp
inc
add
add
push
add
cmp
push
add
dec
add
add
push
add
pop
add
inc
add
pop
add
dec
add
pop
add
dec
add
add
dec
add
inc
add
push
add
add
