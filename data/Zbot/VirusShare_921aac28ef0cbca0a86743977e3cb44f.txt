push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jge
mov
mov
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
jmp
mov
add
mov
mov
cmp
jae
movl
mov
add
mov
add
mov
add
mov
movl
mov
add
mov
movl
mov
add
mov
xor
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
pusha
mov
push
lea
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
push
push
push
call
test
je
mov
xor
jmp
lea
push
push
push
push
mov
push
call
test
je
mov
xor
jmp
lea
push
push
push
push
mov
push
call
test
je
mov
xor
jmp
push
lea
push
call
call
mov
push
lea
push
call
lea
push
call
push
push
push
push
push
mov
push
lea
push
call
mov
cmpl
je
cmpl
jne
int
xor
jmp
movzbl
cmp
je
int
xor
jmp
movl
movl
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
movl
movl
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
mov
mov
mov
push
call
add
mov
push
mov
push
mov
add
push
call
add
mov
sub
push
mov
push
mov
push
call
add
mov
pop
mov
add
mov
pushl
ret
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jae
mov
jmp
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
jmp
mov
add
mov
mov
cmp
jge
movl
mov
add
movzbl
mov
movl
mov
add
mov
mov
movl
jmp
mov
pop
ret
push
mov
sub
mov
cmpl
je
movl
mov
mov
sub
shr
mov
mov
add
mov
movl
jmp
mov
add
mov
mov
cmp
jae
mov
mov
movzwl
sar
cmp
jne
mov
mov
movzwl
and
add
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
jmp
mov
add
mov
mov
cmp
jae
movl
mov
add
movzbl
mov
movl
mov
add
movzbl
cmp
je
mov
jmp
jmp
xor
mov
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
add
neg
inc
add
pop
arpl
push
jb
fs
add
xor
sub
jb
inc
jns
dec
jo
add
pop
popa
sub
jb
inc
jns
das
data16
cmp
or
insb
sbb
outsb
adc
inc
divl
add
xor
gs
jmp
inc
imul
inc
je
aam
je
divl
add
mov
je
add
pop
outsl
rolb
movsl
push
arpl
jns
divl
add
mov
je
mov
js
outsb
fwait
pop
gs
divl
add
sti
xor
add
inc
add
xor
and
inc
add
xor
and
inc
add
inc
add
xor
cmp
and
push
jb
and
add
inc
pop
popa
cmp
jb
inc
jns
add
outsl
add
fcoml
outsb
rcrb
adc
insb
divl
add
loop
jbe
lds
rcrl
lret
jae
inc
add
lcall
mov
mov
inc
add
test
dec
insb
inc
arpl
arpl
xor
add
jb
bound
inc
arpl
arpl
xor
add
pop
insl
popa
inc
arpl
add
jl
inc
push
pop
add
jb
and
push
add
inc
add
das
push
popa
jo
pop
insb
outsl
aam
add
fcoml
outsb
ficompl
or
insb
divl
add
mov
je
lds
les
dec
gs
inc
add
divl
rolb
notl
add
flds
add
flds
add
flds
add
flds
add
flds
add
neg
add
neg
add
neg
add
neg
add
neg
add
neg
add
neg
add
neg
add
neg
add
neg
add
neg
add
neg
add
neg
add
neg
add
neg
add
neg
add
neg
add
neg
add
neg
add
neg
add
neg
add
neg
add
neg
add
divl
jmp
add
divl
jmp
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
divl
jmp
add
xor
add
xor
jmp
hlt
xor
jmp
hlt
xor
mov
sti
sub
dec
jmp
hlt
xor
or
cs
cmc
ss
jl
add
inc
xor
jmp
call
xor
jmp
hlt
jo
jmp
cli
xor
in
hlt
das
add
add
xor
in
hlt
das
add
hlt
xor
jmp
jo
jmp
hlt
xor
jmp
pop
sub
add
dec
sub
add
push
sub
add
sub
add
add
push
sub
add
push
sub
add
fidivs
add
xor
add
aam
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
pop
and
add
xor
add
flds
add
flds
add
flds
add
flds
add
flds
add
flds
add
fildll
lahf
popf
add
mull
adc
neg
fwait
add
neg
clc
flds
add
flds
add
flds
add
cmp
push
xor
dec
jns
add
and
mov
neg
or
neg
xchg
add
flds
add
flds
add
flds
add
sbb
mov
jno
adc
arpl
testl
jmp
popf
hlt
xor
add
xor
add
xor
add
xor
add
add
add
divl
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
jmp
add
add
add
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
add
add
add
xor
jmp
hlt
xor
jmp
hlt
xor
add
xor
add
add
pop
xor
add
add
dec
xor
add
add
pop
xor
add
add
dec
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
into
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
flds
add
flds
add
flds
add
flds
add
flds
add
flds
add
flds
add
flds
add
flds
add
flds
add
flds
add
flds
add
flds
add
flds
add
flds
add
neg
add
negl
cwtl
add
std
xchg
add
sbb
xchg
add
in
add
icebp
xchg
add
adc
add
ja
add
pop
nop
add
cmp
add
cmp
nop
add
xor
nop
hlt
xor
nop
hlt
xor
nop
hlt
xor
nop
hlt
xor
xchg
hlt
xor
xchg
hlt
xor
nop
hlt
xor
hlt
xor
add
add
add
hlt
xor
xchg
hlt
xor
hlt
xor
hlt
xor
xchg
hlt
xor
xchg
hlt
xor
xchg
hlt
xor
hlt
xor
hlt
xor
add
xor
cmpsb
hlt
xor
cmpsl
hlt
xor
cmpsb
hlt
xor
movsl
hlt
xor
movsl
hlt
xor
cmpsl
hlt
xor
jmp
pop
add
pop
add
add
add
pop
add
fwait
add
add
add
fwait
add
fwait
add
xchg
add
pop
cs
hlt
xor
pop
test
add
add
add
fs
fs
arpl
add
mov
add
test
add
sub
add
add
add
add
add
sahf
add
js
add
es
add
sbbb
add
add
cwtl
fwait
add
lods
fwait
add
cmp
add
or
add
cmp
add
fcompl
add
jp
add
je
add
loopne
add
mov
popf
add
or
add
negb
add
inc
pushf
add
add
pushf
add
mov
movsl
add
movsw
add
dec
movsl
add
push
movsl
add
divl
xchg
add
lahf
xchg
add
loope
add
leave
xchg
add
loope
add
in
xchg
add
fistl
add
add
cwtl
add
dec
xchg
add
outsl
xchg
add
add
add
imul
add
add
add
add
test
test
idivl
add
cmc
xchg
add
lea
add
jg
add
jmp
xchg
add
sarl
xor
jg
xor
jg
xor
hlt
xor
hlt
xor
hlt
xor
jg
xor
hlt
xor
jg
xor
jle
xor
jle
xor
jle
xor
hlt
xor
add
add
add
hlt
xor
jle
xor
jle
xor
hlt
xor
jge
xor
jge
xor
jge
xor
jge
xor
jge
xor
jge
xor
jge
xor
jge
xor
xor
xor
das
jbe
add
jbe
add
ja
add
xor
dec
jbe
add
xor
and
add
add
add
ja
add
ja
add
ja
add
ja
add
ja
add
call
xor
aaa
fdivs
add
enter
shlb
lret
mov
xor
test
ja
add
xor
call
xor
sbb
add
hlt
xor
add
mov
add
mov
add
mov
add
into
xor
add
xor
add
add
int3
xor
sbbb
add
fcoms
add
xchg
add
xchg
xchg
add
push
stos
add
mov
add
xchg
stos
add
xchg
stos
add
stos
add
mov
lods
add
inc
lods
add
mov
add
lods
add
add
add
push
lods
add
mull
mov
divl
mov
idiv
lea
testl
add
notl
add
leave
add
mull
add
imul
adc
imul
mov
divl
xchg
add
cltd
xchg
add
xchg
xchg
add
cltd
xchg
add
xchg
mull
add
add
add
add
mov
add
dec
xchg
add
jecxz
add
loope
add
stos
mov
testl
mov
divl
sbb
hlt
xor
mov
xor
mov
xor
mov
xor
mov
xor
hlt
xor
hlt
xor
hlt
xor
hlt
xor
hlt
xor
hlt
xor
hlt
xor
add
add
add
hlt
xor
hlt
xor
hlt
xor
mov
xor
mov
xor
mov
xor
hlt
xor
mov
xor
hlt
xor
hlt
xor
mov
xor
sub
add
addr16
add
addr16
add
addr16
add
addr16
add
xchg
add
test
add
fs
fs
add
add
test
add
test
add
xchg
add
data16
add
add
add
test
add
xchg
add
test
add
gs
gs
add
add
jle
add
nop
stos
add
pop
lods
add
subb
xor
add
stos
add
pusha
mov
add
push
mov
add
mov
add
cwtl
test
add
xchg
lahf
add
xor
add
int3
cltd
add
xor
add
mov
lcall
ljmp
add
nop
add
enter
into
nop
add
imul
lahf
add
jne
add
testl
lahf
add
lahf
add
sbb
movsl
add
aas
movsl
add
jae
add
outsl
movsl
add
leave
add
divl
add
fadds
add
add
ja
add
ja
add
ja
add
ja
add
ja
cmpsb
add
test
movsl
add
lds
add
cmpsb
add
sbb
ja
cmpsb
add
adc
add
add
add
add
filds
add
add
ja
add
ja
jmp
divl
out
add
mov
add
mov
cmpsb
hlt
xor
movsl
hlt
xor
movsl
hlt
xor
add
mov
add
mov
add
mov
add
mov
add
mov
add
xor
sahf
hlt
xor
popf
hlt
xor
popf
hlt
xor
popf
hlt
xor
popf
hlt
xor
popf
hlt
xor
sahf
hlt
xor
popf
add
xor
sahf
hlt
xor
sahf
hlt
xor
sahf
hlt
xor
sahf
hlt
xor
lahf
hlt
xor
sahf
hlt
xor
sahf
hlt
xor
hlt
xor
pop
jno
add
xor
lea
add
xchg
xor
and
xor
pop
jns
add
xor
jmp
pop
xor
or
add
fwait
xor
push
xchg
xor
dec
fwait
xor
in
xor
jmp
add
add
add
xor
jmp
cltd
add
pop
dec
jecxz
fwait
stos
mov
push
jnp
pop
pop
pop
add
testl
negl
or
cmc
cmp
xor
xchg
icebp
shlb
add
negb
inc
outsb
jge
mull
js
inc
jl
fiaddl
mov
sbb
shlb
or
pop
insb
dec
mov
add
add
add
add
mov
cmc
dec
aad
xor
pop
fadds
or
aam
or
pop
in
dec
inc
pop
daa
cld
or
inc
mov
mov
push
and
test
es
mov
adc
adc
jbe
ljmp
jb
mov
je
mov
jo
outsl
outsl
pop
or
add
lret
data16
in
pusha
je
jbe
cs
movl
inc
divl
add
notl
sub
leave
add
div
push
jne
sahf
sbb
test
addl
leave
adc
jno
jge
ja
incb
or
lcall
dec
addl
leave
sbb
mov
ja
out
sub
fsts
test
add
adc
subl
add
xor
xlat
dec
add
out
imul
jae
sub
add
sub
sti
and
icebp
add
xor
add
xor
add
xor
add
xor
or
loope
repz
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
icebp
add
xor
or
adc
sub
outsl
add
hlt
and
imul
outsl
add
hlt
adc
imul
outsl
add
hlt
mov
jmp
xor
imulb
or
cs
repz
test
out
sub
leave
std
xor
jmp
in
and
cmc
cld
cmp
add
add
add
add
adc
jmp
in
add
jmp
std
es
in
push
add
in
adc
jmp
cld
xor
jmp
mov
inc
add
daa
push
add
sbb
pop
and
cmp
dec
es
dec
cmp
pop
and
adc
dec
es
add
and
or
add
mov
push
es
add
and
add
push
es
add
es
jmp
jecxz
in
sub
into
and
xor
fisubs
add
and
and
sahf
es
test
or
or
not
or
test
or
or
test
add
add
add
add
or
or
not
or
test
or
or
test
or
or
not
or
test
or
mull
and
cltd
or
cltd
or
negl
or
negl
jmp
or
jmp
or
jmp
add
add
add
xor
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
jmp
or
jmp
or
xor
or
xor
or
xor
or
jmp
or
xor
or
mov
aas
add
in
push
add
cld
push
add
sti
faddl
jmp
in
mov
jmp
sti
pushf
add
stc
cmp
jmp
cld
dec
add
sti
int3
add
stc
adc
jmp
cld
outsb
add
sti
mov
dec
add
in
push
add
cld
pop
add
sti
in
add
in
ds
in
mov
call
add
xor
jmp
cld
aas
add
cld
mov
sti
stc
dec
add
in
pop
add
fidivrs
xor
fidivrs
or
into
cmp
sahf
cmp
add
cmp
add
cmp
sahf
cmp
push
add
cmp
add
xchg
add
cmp
dec
cmp
pop
cmp
add
rolb
pop
aaa
adc
add
imul
push
cmp
or
push
cmp
add
cmp
add
push
cmp
fidivrs
adc
add
stos
push
sub
xchg
or
xchg
or
testl
or
notl
or
notl
add
notl
add
add
add
add
xchg
or
imull
or
xchg
or
testl
or
notl
or
notl
add
notl
jmp
or
jmp
or
jmp
add
xor
or
jmp
add
add
add
aam
jmp
or
xor
or
or
jmp
add
xor
or
xor
or
jmp
add
xor
or
xor
or
jmp
add
xor
or
jmp
or
xor
or
or
add
repz
add
cld
inc
add
add
add
add
xor
cli
repz
add
cld
and
jmp
in
jp
fdiv
cmp
jmp
cld
push
add
repz
jmp
cld
mov
jmp
repz
cld
or
jmp
repz
cmc
verw
cld
sub
jmp
repz
fcomi
inc
add
cld
sbb
jmp
repz
add
add
add
cmp
jmp
push
aaa
dec
add
cmp
add
add
fidivs
push
add
adc
ljmp
add
ss
fidivs
xor
into
cmp
or
sahf
ss
add
cmp
add
sahf
addb
ss
add
das
push
add
pop
add
sbb
dec
cmp
cmp
add
js
pop
cmp
dec
cmp
adc
push
ss
add
cmp
or
notl
or
xchg
or
testl
or
movsb
or
mull
or
or
xchg
or
testl
or
xchg
or
notl
add
add
add
add
xchg
or
or
testl
or
xchg
or
notl
or
xchg
or
testl
jmp
or
jmp
or
jmp
or
das
flds
hlt
xor
or
jmp
or
jmp
or
add
xor
add
xor
or
xor
or
jmp
or
jmp
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
fcomi
inc
add
cld
sbb
jmp
in
fldl
jmp
cld
mov
call
add
add
add
popf
add
imull
call
in
xor
cli
mull
jmp
in
pop
add
in
jne
fdiv
aaa
add
cld
push
add
in
dec
add
jmp
add
cld
cs
cld
scas
add
in
out
call
jno
add
cld
push
add
in
inc
add
jmp
add
push
adc
jmp
dec
cmp
add
fldl
add
add
cmp
push
cmp
add
xor
add
cmp
add
cmp
add
xor
add
cmp
into
cmp
add
cmp
add
cmp
into
cmp
add
xor
or
sahf
cmp
mov
and
mov
add
sahf
cmp
add
cmpsl
add
add
add
add
pop
cmp
dec
cmp
add
xchg
add
stos
cmp
xchg
or
xchg
or
notl
adc
xchg
or
xchg
or
notl
or
notl
or
xchg
or
testl
or
imulb
or
xchg
or
testl
add
add
add
add
xchg
or
notl
or
notl
cld
pop
notl
jmp
or
cld
movsl
xor
or
xor
or
xor
or
cld
add
jmp
or
xor
or
or
xor
or
jmp
or
xor
cld
cmc
xor
or
or
add
hlt
or
jmp
or
jmp
cld
std
xor
or
jmp
or
jmp
or
or
jmp
fldcw
add
in
pop
add
in
inc
add
std
mov
call
in
addr16
std
jnp
fldt
aas
add
in
pop
add
in
push
add
add
fildl
jmp
in
mov
jmp
std
fwait
add
jmp
add
in
sti
call
cld
xor
cli
lret
pop
add
in
sbb
jmp
std
jae
fsubrs
or
jmp
xchg
rolb
jmp
jl
add
mov
out
add
or
dec
cmpsl
pop
add
push
add
sahf
add
dec
arpl
dec
cmpsl
jle
dec
cmpsl
add
movsb
fiadds
dec
sbb
push
cmpsl
outsb
add
cmpsl
add
movsb
mov
add
cmpsl
mov
push
cmpsl
dec
add
movsl
incb
into
cmp
add
cmp
add
cmp
add
aaa
add
iret
cmp
add
cmp
sarl
add
cmp
add
cmp
add
cmp
and
movsl
or
add
popf
or
out
orl
add
xchg
add
jp
xor
or
out
test
pop
mull
or
test
add
jg
add
mov
or
movsl
or
jmp
or
not
or
testl
add
mull
add
add
fwait
add
notl
add
addb
divl
jmp
adc
sbb
xor
loopne
loop
outsb
fcomp
and
cmpsb
aam
mov
ret
sub
inc
mov
daa
neg
sub
sarb
imul
out
push
pop
mov
pop
ror
dec
inc
pop
and
push
mov
inc
cmp
add
add
add
int
push
call
lret
movsl
es
mov
imul
pushf
pop
adc
std
mov
testb
adc
mov
das
cli
hlt
cltd
cmp
aas
orl
int
adc
pop
and
mov
es
xor
rolb
sub
or
jge
fldt
sub
lods
mov
js
hlt
add
jg
cmpsb
and
stos
xchg
in
es
jle
imul
cmpb
mov
fcmovne
ficoms
xor
icebp
dec
ss
pop
lea
lds
lock
das
iret
pop
push
rorl
mov
neg
jbe
add
add
rcrb
out
mov
dec
mov
add
add
add
add
mov
call
and
fdivrs
loope
xor
cmp
or
adc
dec
arpl
mov
imul
insb
sbb
inc
test
dec
sbb
insb
mov
add
vmwrite
addb
mov
mov
adc
xor
mov
icebp
fcoml
fwait
dec
roll
imul
mov
into
xor
mov
push
mov
mov
cmc
rcll
inc
mov
jl
mov
mov
fwait
and
mov
add
inc
inc
or
dec
or
cmpsl
roll
repz
push
and
sub
push
pop
xchg
mov
sahf
out
out
add
xor
int3
test
inc
lret
imul
ficoms
mull
imul
pop
in
pop
dec
jo
orl
in
inc
xor
cmpsb
and
inc
inc
mov
and
sub
sti
clc
aad
gs
xlat
pop
lret
sub
xchg
pop
int
ror
imull
cmp
sbb
add
add
add
clc
mov
rcl
ds
ret
movsb
xor
movsb
xor
mov
mov
stc
pop
outsb
lahf
filds
mov
in
jge
xchg
pop
add
fisttpl
adc
loope
rcll
pop
push
andb
inc
jl
mov
sub
cmpsb
xchg
repnz
and
fimuls
out
sub
add
add
add
add
scas
lahf
das
or
adc
adc
adc
xchg
or
addr16
add
mov
pop
aad
push
add
or
int
or
rcll
push
push
sub
mov
dec
mov
lcall
ret
shlb
ret
mov
fs
clc
andb
add
push
push
and
xchg
or
sysret
jb
pop
add
dec
in
mov
mov
mov
inc
mov
xchg
adc
fdivrl
fisttpl
lret
xchg
icebp
testl
xchg
or
mov
loope
push
mov
jecxz
mov
sub
or
pop
dec
clts
add
int3
incb
push
xor
jo
cltd
bound
aad
insb
loope
out
push
push
or
rol
add
jmp
icebp
pop
inc
push
inc
imul
fsubrl
fidivs
ss
mov
lret
xor
lds
std
xchg
add
add
add
pop
add
imul
mov
outsb
bound
fisubs
push
jne
out
sbb
je
sbb
mov
in
jns
insl
shrb
cmc
dec
jmp
adc
aaa
imul
stos
xor
rcll
shl
sbb
lods
add
jge
push
arpl
and
cmc
cmp
push
sub
dec
jecxz
addr16
roll
shll
cmp
js
xor
popa
pushf
cmpsl
cs
fidivs
push
cmpb
rorb
pop
xor
jae
pop
test
fldl
call
icebp
rorl
cli
int3
mov
lods
xchg
lret
mov
mov
cmpsl
dec
leave
mov
movb
add
add
add
add
ret
inc
popa
outsb
ficoml
negb
out
inc
shrl
add
and
enter
imul
or
sub
adc
xor
iret
inc
jo
push
clc
push
and
mov
xchg
and
ret
nop
adc
pop
test
xchg
test
cmp
ljmp
add
test
inc
pop
xor
jns
shr
popa
jmp
nop
mov
dec
sbb
fnsave
pushf
lds
mov
or
lahf
xchg
std
mov
lea
add
mov
adc
cltd
shll
loope
aad
mov
xchg
push
pop
lea
notb
mov
cmp
loope
mov
bound
fnstsw
pop
xchg
push
aaa
pop
orb
icebp
or
add
cmp
add
ret
std
adc
out
and
lret
or
mov
xchg
xchg
imulb
mov
sub
mov
adc
mov
fadd
addb
push
pop
scas
addr16
lock
add
mov
add
add
add
add
inc
xchg
cmp
pop
fucomp
pushl
adc
add
ljmp
push
sbb
inc
adc
rcl
lea
mov
xchg
je
jnp
mov
insl
mov
addr16
mov
pop
enter
pop
repz
popa
mov
dec
cmc
out
push
dec
out
jmp
dec
outsl
je
add
bnd
out
jmp
imul
mov
cmp
jg
addr16
sbb
xor
adc
push
loopne
daa
or
xchg
cmp
mov
adc
fstl
xchg
rolb
adc
shlb
scas
xchg
add
xor
inc
xchg
bound
inc
out
lret
jo
mov
pop
clc
inc
cmp
outsl
fisubs
xchg
les
pusha
call
dec
imul
sbb
pop
test
cmp
lahf
sub
vxorps
repz
lds
iret
jb
test
adc
cltd
rclb
stos
push
xor
sub
addl
add
push
sub
jge
xor
fimull
imul
inc
jp
ret
shlb
popa
leave
loope
test
xchg
push
pop
push
xchg
mov
shll
bound
inc
mov
hlt
mov
cmp
or
push
iret
inc
pushf
dec
cwtl
xchg
leave
mov
bound
shlb
push
add
add
hlt
dec
lret
add
bound
xchg
push
loope
fiaddl
inc
adc
and
adc
mov
xchg
ret
clc
stos
mov
icebp
xor
mov
repnz
shr
inc
xchg
scas
add
arpl
sbb
stc
out
nop
or
dec
inc
pop
sbb
add
clc
aas
lea
mov
nopl
outsb
aam
jg
lahf
dec
nop
daa
xchg
loop
jno
mov
js
movsb
mov
pop
rcll
dec
iret
jne
push
and
and
mov
out
mov
mov
jne
pop
sub
inc
adcl
fdivr
mov
mov
mov
dec
xchg
jmp
sbb
inc
aas
lods
add
jne
add
add
add
add
daa
pop
shlb
gs
jnp
mov
add
les
movswl
or
or
bound
jecxz
mov
lods
scas
hlt
or
pop
push
sbb
mov
rcrl
add
adc
xchg
add
bound
sbb
fcompl
xor
sbb
xor
adc
mov
adc
add
add
mov
mov
jp
ds
dec
cmp
movsl
leave
cmp
ret
inc
mov
mov
cmp
stc
dec
pushf
aaa
inc
jne
xor
mov
xchg
xor
xor
adc
outsb
xlat
imul
test
daa
pop
in
sub
mov
popa
and
in
stos
out
mov
pop
js
test
fbld
cld
into
test
fisttps
cmp
leave
dec
gs
and
xchg
lcall
pop
push
in
repz
xchg
call
push
leave
dec
mov
ret
push
fwait
aad
push
loopne
test
or
xchg
std
aaa
orb
fs
jge
lret
test
mov
push
inc
mov
cli
popa
test
dec
lcall
push
xor
ds
adc
sbb
adc
les
adc
sbbl
push
pop
sub
inc
stc
cmc
fs
es
stc
dec
cmp
les
sub
mov
jecxz
pop
jbe
cld
and
cld
sbbb
cmc
sahf
dec
mov
cmpsl
out
cmc
sub
cmp
stc
pop
lock
repnz
jl
mov
add
push
andb
aad
out
ret
iret
loope
imul
or
adc
into
push
adc
push
pop
outsl
addr16
pop
pop
jns
pop
mov
cmp
push
pop
jl
fcompl
add
inc
loope
and
loopne
sub
jecxz
dec
out
sbb
out
adc
in
add
in
mov
xchg
out
aas
jns
in
or
in
lea
call
arpl
sub
sbb
pop
imul
lds
ja
movsb
incb
loop
sbb
aad
fdivr
mov
imul
clc
data16
add
add
mov
icebp
sub
or
sub
mov
dec
idivb
xchg
sarl
jno
lds
fnstsw
stc
fdivl
cmp
xlat
jno
test
aam
add
sarb
inc
out
add
and
out
int
pushf
les
mull
fnstcw
inc
push
push
mov
xchg
mov
adc
mov
imul
lods
pop
cmp
mov
or
xchg
int3
jp
cmp
scas
xchg
mov
xchg
inc
sub
jmp
fs
push
fs
scas
and
rol
mov
jns
pop
cmp
jae
cmp
push
sub
pop
dec
jg
mov
sbb
outsl
mov
mov
add
push
cltd
ja
and
sti
mov
out
mov
pop
or
scas
pcmpeqb
mov
fisubrs
mov
popa
es
sbb
mov
xor
push
fdivs
pop
fldenv
sub
xchg
inc
cmp
push
push
fcmovu
addr16
ret
add
in
pop
push
mov
sub
inc
aam
in
or
jp
mov
or
dec
test
mov
inc
sti
xor
mov
jnp
add
mov
std
divl
xchg
lcall
out
inc
fnsave
cmp
add
add
add
mov
adc
out
cld
pop
mov
add
mov
mov
pushw
sti
test
xchg
into
adc
popf
xchg
adc
jge
pop
lret
outsl
call
mov
dec
pop
insb
push
lods
inc
fnstsw
add
sbb
jge
call
scas
int3
lods
inc
push
insl
jnp
add
addr16
cmp
jne
pop
into
int
dec
lods
xchg
mov
add
mov
iret
sbb
mov
pop
bnd
sbb
xor
jae
cmp
mov
mov
test
dec
jmp
pop
test
mov
gs
inc
dec
cmp
xor
mov
add
add
add
add
fucomi
aaa
xor
fistpll
cwtl
xchg
aas
xor
and
inc
sub
jmp
cmc
mov
popa
ret
cld
adc
rcrl
adcb
stc
aaa
sub
nop
inc
std
cmp
jmp
hlt
pop
jg
dec
dec
pop
adc
icebp
mulb
push
lret
scas
mov
jecxz
imul
js
jle
imul
push
psllq
int
ljmp
test
out
mov
jb
pop
ljmp
mov
jg
cmp
dec
in
pop
mov
test
out
mov
aaa
roll
mov
dec
mov
and
jae
mov
into
fadds
cmp
pop
cmc
push
add
mov
inc
xchg
insl
mov
negb
mov
sbb
sub
sbb
xchg
inc
mov
inc
push
clc
test
in
inc
lods
xorb
stc
enter
fistl
jmp
test
pusha
xchg
mov
sbb
rcr
mov
jecxz
inc
nop
pop
test
sbbl
add
add
add
insb
mov
push
adc
add
mov
xchg
and
cmp
xor
leave
out
aas
and
push
cltd
add
inc
mov
xchg
incl
mov
inc
xchg
cmp
xor
mov
in
sub
mul
andb
cmp
dec
xor
outsl
xchg
push
inc
mov
add
add
add
add
add
xchg
out
hlt
scas
std
push
and
dec
and
cwtl
mov
xchg
and
hlt
js
push
dec
rcr
std
sarb
and
xchg
ficoms
dec
leave
mov
pop
pop
mov
imul
xlat
cmc
testl
insl
ficomps
jnp
mov
mov
loop
inc
mov
dec
arpl
cmp
push
in
pop
mov
test
and
or
mov
jb
loop
int
mov
mov
call
mov
adc
fbstp
movsl
ja
sbb
jp
sbb
iret
add
ja
movsb
enter
pop
lock
lods
bound
out
mov
inc
jb
ljmp
add
add
sbb
test
xchg
jne
fildll
jge
nop
lret
insl
gs
or
pop
sub
sbb
roll
mov
cli
adc
sbb
sub
rcr
mov
sbb
cmp
xchg
cmp
loopne
or
xchg
mov
mov
mov
jo
add
or
jne
movsl
and
pop
add
mov
push
mov
add
cmp
outsl
outsb
lcall
les
and
repz
sbb
dec
mov
idiv
stos
xor
add
imul
mov
mov
add
add
dec
pop
xchg
cmp
jnp
or
mov
jecxz
mov
mov
pop
inc
int3
cmp
sti
sub
gs
add
scas
int3
je
or
ret
pop
cmp
add
cs
sub
test
and
les
out
and
aaa
dec
movsl
xor
or
xlat
pusha
mov
push
sbbl
sub
call
or
sbb
movsb
add
repnz
add
xchg
outsb
aam
mov
pop
mov
or
and
shl
es
std
adc
leave
arpl
pop
mov
test
cmp
dec
push
and
aas
dec
sbb
mov
lods
sub
xor
or
add
mov
mov
pop
jbe
or
ret
and
outsl
stc
aaa
mov
rcrl
cs
xor
push
fcoms
scas
shll
sub
bound
insl
xchg
jle
outsb
movsl
add
roll
outsl
sub
lcall
push
and
mov
sbb
cli
lret
aaa
sub
ds
shlb
ss
pop
mov
cmp
test
push
outsl
adc
shrl
pop
ds
add
inc
jg
push
scas
mov
mov
push
sbb
mov
pop
sub
xchg
xor
rcrb
es
pop
push
adc
pop
pop
and
out
aam
orb
fwait
add
add
pop
sti
or
ljmp
sbb
aam
dec
dec
gs
std
repnz
fs
addps
mov
xor
inc
loop
cmp
inc
cld
sub
xlat
lea
insl
lcall
push
loop
cld
inc
shrl
shrb
cmc
sbb
inc
fsubrp
pop
mov
cld
enter
add
add
add
add
cmp
cmc
out
test
and
sbb
mov
push
aam
lock
in
mov
stc
push
cmpsl
insb
leave
cwtl
push
bound
mov
add
sbbl
or
or
and
mov
add
or
add
lcall
ja
or
adc
jge
or
add
push
push
add
pop
test
jnp
or
xor
mov
jle
inc
pop
jge
shl
addl
pop
jno
ret
and
or
lods
popa
pop
ss
mov
fcomps
or
shrl
xchg
jp
jp
mov
dec
cmp
imul
or
pop
pop
je
mov
jae
and
xchg
add
sbb
repnz
outsl
push
nop
xorb
push
jb
mov
jmp
sbb
dec
or
shll
out
mov
and
inc
mov
sbb
test
sbb
xchg
inc
xor
clc
xor
or
jmp
dec
sub
mov
dec
ret
int
lods
jo
xor
aam
shll
sub
lret
xchg
int
sbb
int
inc
push
pop
push
push
pushf
jmp
test
gs
cli
leave
sar
loop
cmp
cwtl
mov
add
scas
mov
adc
lret
fnsave
cmp
jno
test
cltd
sub
cmc
mov
pop
and
pop
aam
cmpsl
popl
mov
mov
and
aaa
or
movb
roll
fsub
push
jl
jo
divb
pop
jbe
fwait
incl
adc
imul
inc
nop
js
aas
pusha
out
daa
imull
ret
push
popa
cltd
aam
mull
repnz
dec
out
out
add
push
sub
dec
shlb
fldt
mov
xor
add
add
add
add
scas
push
js
sahf
lds
add
jg
add
jmp
add
ret
add
cmpsb
je
ss
jb
push
sub
imul
push
jp
rclb
stos
adc
sub
orb
mov
out
lea
add
imull
xor
jg
xor
push
ret
mov
lds
fstpt
hlt
inc
lock
inc
mov
aas
jb
dec
mull
mov
lods
fisubrs
jmp
pop
jle
loopne
sub
mov
lds
es
scas
jo
imul
out
pop
mov
imul
stc
dec
icebp
icebp
lret
xor
jbe
insb
add
adc
dec
push
popa
cmc
jle
xchg
push
mov
xlat
cmpsl
pop
ja
mov
mov
sbb
leave
adc
mov
inc
dec
lret
and
sbb
loop
shl
leave
mov
add
inc
fildl
incl
daa
inc
clc
ret
inc
add
sbb
frstor
mov
add
add
add
add
pop
add
decb
cmpb
jne
cmp
fidivs
fwait
mov
cmc
nop
leave
or
sub
stos
aaa
fisubrl
pop
adc
insb
testb
mov
subl
ret
insl
or
jecxz
into
cli
pop
lahf
into
and
rolb
popf
adc
add
add
add
fwait
loop
mov
sbb
js
daa
xchg
daa
test
push
es
enter
jnp
xor
push
fwait
pop
pop
xchg
and
fidivs
bound
pop
out
out
sbb
pop
push
fisubrl
or
ds
sub
add
popf
scas
mov
or
or
pusha
add
iret
out
popa
and
insb
cmpsl
cmp
outsb
loop
ljmp
ja
loope
js
or
sbb
sub
insb
cmp
jo
dec
out
xor
xchg
repz
adc
ret
bound
cmp
aam
pop
mov
mov
cmp
cld
movsb
test
cli
ja,pn
lret
outsl
dec
xchg
pop
rorb
stc
in
lret
cmp
push
imul
and
enter
ret
ja
in
cmp
in
in
mov
inc
or
bound
dec
sub
jg
pop
fnstcw
test
jge
and
sub
lcall
xor
les
push
bound
dec
mov
jmp
sub
cmpsl
imul
xor
pop
jp
jne
inc
or
inc
mov
mov
mov
faddl
enter
shufps
push
mov
dec
adc
push
dec
jmp
les
mov
test
mov
aas
mov
mov
push
fwait
lcall
jno
jbe
test
xor
pop
sbb
aam
add
out
loope
mov
push
mov
add
mov
mov
pop
dec
mov
inc
mov
lea
dec
or
enter
mov
inc
add
push
pop
fcomp
xor
roll
add
add
add
add
and
incl
enter
jbe
sbb
shrl
adcl
pushf
fmull
sbb
cltd
pop
fcmovu
xlat
mov
loop
mov
popf
inc
xchg
mov
adc
mov
cmp
push
sub
out
push
push
fnop
mov
inc
ret
in
outsb
ret
cmp
add
add
add
hlt
jp
call
push
mov
pop
sub
jns
pop
rolb
xor
sbb
movsb
sub
dec
arpl
mov
fisubs
out
and
push
sar
lock
mov
dec
mov
adc
cmp
ja
mov
push
pop
hlt
imull
or
sbb
leave
out
or
add
add
add
or
out
movsl
xchg
add
mov
push
xchg
mov
sub
mov
push
push
jp
hlt
push
scas
pop
mov
jo
js
rorl
clc
push
bound
sub
repnz
cmpsl
leave
cmp
ja
pop
and
pop
push
scas
popa
add
fbstp
xor
data16
cwtl
jg
clc
push
adc
scas
inc
aad
pop
adc
pop
imul
and
push
and
test
push
dec
sbb
cmc
ret
mov
fiadds
or
jg
loopne
mov
lahf
xor
jbe
mov
add
add
add
add
repnz
push
mov
outsb
pop
out
sub
std
or
decl
dec
leave
and
pop
bound
rol
mov
sarb
rcll
aam
dec
hlt
int
out
popa
js
mov
lods
mov
negl
or
test
sub
add
lea
sub
dec
adc
cmp
or
jae
mov
lock
lret
jnp
aad
pop
mov
add
xchg
mov
shr
movsl
or
pop
mov
push
add
ret
cmp
insl
and
data16
rcll
aam
push
mov
mov
add
movsl
lret
and
addr16
and
dec
aam
je
shrl
lret
shrb
mov
adc
fsubl
sbb
lock
or
dec
negb
mov
rcrl
xor
pop
jae
cld
in
fnstsw
push
imull
shll
fwait
shlb
test
push
enter
jno
cmp
dec
jb
push
cmp
xchg
xchg
or
in
cli
hlt
lds
inc
int
jo
lcall
jno
jns
iret
and
movsl
jge,pn
mov
jbe
sbb
pop
mov
bound
push
ret
fcmovnb
scas
mov
sub
fs
push
lds
and
dec
aaa
icebp
cltd
inc
cli
lock
mov
cmp
xor
out
add
stc
sbb
je
sbb
mov
hlt
enter
mov
jle
sbb
rol
pop
loopne
mov
jle
mov
adc
lods
sahf
push
pop
mov
aam
push
mov
push
pop
mov
add
add
add
scas
mov
cltd
and
pop
add
nop
dec
pop
sub
push
and
dec
push
jle
mov
dec
sub
add
sub
sub
mov
xor
jne
and
inc
icebp
xor
jb
inc
es
sbb
imulb
inc
jns
insb
ja
and
sub
add
add
add
pop
sbb
pop
xchg
sub
fstps
push
xchg
mov
xchg
jb
jg
fwait
iret
jne
aas
xchg
insb
imul
outsl
and
ds
dec
inc
ret
sub
pop
sbb
loope
sub
imul
dec
adc
and
int3
sub
mov
fildll
add
add
add
add
loope
push
shll
cmpsb
arpl
lahf
jb
xchg
xchg
je
add
jne
outsb
stc
push
pop
adc
push
lods
adc
lds
xor
andnps
push
aas
ss
lcall
notb
std
pop
cmc
pop
xchg
or
jae
ret
add
cwtl
leave
inc
cmpsl
dec
ret
outsb
in
fildl
jmp
or
aad
lea
into
mov
iret
int
inc
mov
xor
pushf
push
hlt
mov
fbstp
pop
dec
sbb
adc
add
pop
addr16
scas
adc
and
lock
cmc
mov
sahf
xor
inc
mov
mov
js
xor
add
xchg
and
inc
enter
push
hlt
imul
mov
xchg
mov
lret
jl
fsub
lret
bnd
insb
data16
xor
jecxz
dec
adc
xor
ret
loope
mov
daa
add
xchg
popf
fwait
xor
push
xor
fsts
push
xor
add
add
add
add
mov
sarl
negl
stos
xchg
pop
inc
xchg
repz
sub
or
pop
mov
mov
enter
pop
sub
decl
sub
cmp
mov
filds
sub
dec
vrsqrtss
lahf
inc
popa
out
sbb
mov
jl
js
xchg
inc
add
cmp
mov
mov
pusha
lcall
push
jnp
punpcklbw
pop
loope
jae
test
int
sarb
push
mov
aam
pop
loop
fidivrs
jae
test
aas
and
jnp
push
dec
ss
imul
cpuid
lods
std
addr16
mov
add
dec
dec
sets
xor
push
jle
test
sbb
pusha
add
inc
sub
mov
aaa
inc
xlat
jg
mov
pop
hlt
aad
testb
out
imul
in
outsl
xor
or
ds
dec
push
fwait
pop
es
test
lods
xchg
iret
popf
lea
jecxz
out
jle
jnp
pop
in
outsl
cmc
push
inc
das
leave
ret
out
inc
out
adc
add
add
sbb
addr16
hlt
aaa
aaa
cmp
movsb
push
cltd
lea
pushl
decb
out
loope
addl
js
pop
fcmovnbe
das
js
shlb
mov
xor
cmp
xor
es
cs
mov
dec
fsts
aad
jge
cmp
xchg
shll
add
mov
sarl
push
daa
dec
test
scas
sbb
jge
cmp
push
mov
xchg
jno
decb
adc
sub
cli
loope
pop
jae
push
mov
or
inc
mov
dec
cltd
adc
xchg
divb
inc
rorl
scas
jmp
stos
mov
repnz
dec
add
into
add
orl
inc
cmp
inc
sti
ljmp
mov
ljmp
imul
dec
mov
inc
xor
xor
add
repnz
test
stos
adc
cmp
pop
fs
adc
mov
inc
imul
xor
fwait
cmp
add
add
add
add
jns
add
addr16
inc
sub
cmp
mov
in
push
pop
mov
and
call
pop
ficompl
fidivl
mov
jmp
mov
push
mov
inc
fistpl
push
add
mov
cld
sbb
jno
loop
push
ja
xchg
dec
stos
dec
jg
inc
in
andl
xor
nop
pushf
pop
cmp
ds
mov
shlb
adc
dec
rcr
test
mov
mov
mov
aad
jns
mov
cmpsb
negl
jbe
mov
push
test
lds
out
lret
pop
incb
ja
clc
cwtl
lcall
push
and
sub
push
inc
scas
jno
sub
fmulp
andl
add
jle
cs
xor
and
insl
mov
push
pop
inc
jne
xor
mov
invd
stc
pop
jmp
add
xor
add
xor
add
xor
add
xor
add
divl
jmp
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
in
hlt
xor
in
xor
in
hlt
xor
in
xor
in
hlt
xor
in
xor
jmp
and
out
sub
jecxz
sub
cmc
das
add
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
call
hlt
xor
jmp
xor
ljmp
add
hlt
xor
in
xor
in
hlt
xor
in
xor
out
hlt
xor
out
xor
out
hlt
xor
out
xor
add
add
xor
add
add
add
add
inc
xor
add
add
add
adc
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
pushf
xor
add
dec
add
testl
or
lret
add
notl
add
testl
add
negl
or
push
add
idiv
add
test
add
notl
add
idivl
add
imull
or
dec
add
test
add
testl
add
add
add
add
jmp
add
imull
add
idiv
add
idivl
add
idivl
sbb
xor
add
xor
pushl
repz
xor
out
xor
add
xor
add
xor
out
xor
add
xor
add
xor
out
xor
add
xor
add
xor
add
add
add
out
xor
pushl
roll
xor
add
xor
out
xor
add
xor
add
xor
out
xor
add
xor
add
xor
out
xor
pop
sti
sub
xchg
repz
pop
sti
sub
xchg
repz
fcomip
sub
push
repz
div
sub
outsl
repz
cmpsl
hlt
sub
pop
repz
xlat
hlt
sub
dec
repz
xchg
hlt
sub
push
sub
out
sub
pop
repz
xchg
hlt
sub
psllq
add
sti
sub
lahf
hlt
sub
push
sti
sub
iret
hlt
sub
call
hlt
sub
sub
sub
test
sub
enter
dec
hlt
sub
or
sub
mov
sub
add
xor
add
xor
add
or
fbstp
add
or
dec
das
or
add
das
or
addr16
or
out
or
xchg
das
or
pop
xor
add
das
or
cmpsl
das
or
ja
or
imull
or
pop
das
or
xchg
das
or
addr16
or
out
or
xlat
xor
add
or
inc
xor
or
shrl
or
push
xor
or
xchg
xor
or
xor
add
divl
add
add
add
idivl
testl
or
les
idivl
or
les
idivl
testl
or
int3
add
notl
or
test
or
in
add
divl
or
push
add
idiv
add
test
add
notl
or
mov
add
imull
divl
or
divl
or
testb
div
add
divl
cmp
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
xor
out
xor
add
xor
add
xor
xor
out
xor
add
xor
add
xor
add
xor
add
xor
add
xor
xor
out
xor
out
xor
xor
add
xor
add
xor
add
xor
add
xor
push
repz
push
hlt
sub
inc
repz
inc
hlt
sub
mov
sub
mov
sub
ret
add
cmc
sub
xor
sub
xor
sub
loop
sub
loop
sub
push
repz
push
hlt
sub
out
hlt
sub
out
sub
outsb
add
sub
data16
sub
scas
hlt
sub
cmpsb
cmc
sub
repz
es
sub
into
hlt
sub
cmc
sub
dec
repz
inc
hlt
sub
dec
repz
inc
hlt
sub
into
hlt
sub
cmc
sub
add
xor
add
xor
add
xor
add
sub
add
xor
add
or
imul
or
dec
xor
add
xor
add
leave
xor
add
xor
add
xor
add
xor
add
or
popa
xor
add
xor
add
xor
add
or
shll
or
add
or
inc
xor
add
or
mov
or
shll
add
sub
add
outsb
add
notl
add
divl
or
incb
or
out
or
imul
add
notl
add
or
xchg
or
xchg
add
negl
add
testl
add
divl
or
incb
or
out
or
inc
add
testl
add
notl
pop
notl
add
divl
add
negl
add
imull
add
clc
xor
lock
add
xor
lock
add
xor
add
xor
lock
add
xor
add
xor
add
xor
pushl
sub
xor
add
xor
add
xor
out
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
repnz
add
xor
add
xor
add
xor
add
xor
jecxz
sub
shl
sub
out
hlt
sub
add
hlt
sub
add
hlt
sub
add
hlt
sub
add
hlt
sub
add
hlt
sub
add
hlt
sub
add
hlt
sub
add
hlt
sub
add
add
cs
pop
sub
push
out
sub
loope
sub
loope
sub
lock
sub
jecxz
sub
jecxz
sub
add
or
add
or
adc
pop
or
in
or
in
or
ficompl
or
pop
or
pop
or
pop
or
pop
or
pop
or
pop
or
pop
or
pop
or
add
pop
or
fwait
pop
or
fwait
pop
or
fwait
pop
or
imul
pop
pop
or
pop
pop
or
push
dec
pop
or
push
pop
pop
or
push
sub
push
sbb
push
testl
or
stc
inc
cmc
or
jmp
pop
adc
stc
inc
adc
icebp
dec
adc
call
add
psubb
dec
adc
call
pop
adc
clc
inc
adc
lock
adc
call
pop
adc
clc
inc
adc
lock
adc
call
pop
adc
clc
inc
adc
lock
add
push
push
adc
adc
jl
adc
loope
sbb
or
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
sbb
out
cmp
sbb
cmp
sbb
aaa
rcrb
cmp
sbb
aaa
repz
in
ss
in
ss
fnsave
rcrl
or
aaa
add
std
ss
cld
xor
loop
in
xor
rcrb
fdivl
add
or
add
cld
xor
in
pop
repz
pop
jmp
fstpl
add
xor
aad
xor
int
xor
sbb
add
sbb
lock
in
xor
fucom
xor
aad
xor
int
sub
sbb
add
sbb
in
sub
sbb
int3
adc
sbb
cld
add
sbb
in
icebp
sub
sbb
aam
fldcw
sbb
cld
add
sbb
in
ss
add
or
inc
or
push
inc
or
push
aas
or
push
adc
nopl
adc
and
adc
and
adc
and
adc
adc
int3
and
adc
frstor
adc
daa
adc
lret
adc
daa
adc
stos
daa
adc
fwait
es
add
add
add
lret
es
adc
cwtl
sub
push
mov
push
push
test
push
push
test
push
push
cltd
sub
pop
dec
sub
pop
imul
pop
pop
testl
sbb
push
sbb
fists
sbb
popa
sbb
punpckldq
sbb
xor
pushl
sbb
incl
sbb
inc
sbb
out
push
sbb
ficoms
sbb
pusha
sbb
push
popa
sbb
add
xor
sbb
inc
sbb
in
inc
sbb
in
push
sbb
fstl
sbb
popa
sbb
or
xor
sbb
xor
sbb
inc
sbb
in
inc
sbb
in
push
sbb
fcoml
sbb
bound
sbb
sbb
or
add
cld
sub
sbb
sub
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
divl
out
divl
loope
divl
jecxz
divl
cmc
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
divl
dec
add
xor
add
xor
jmp
hlt
xor
jmp
add
xor
jmp
xor
ljmp
add
hlt
xor
loope
xor
xor
stc
hlt
xor
add
xor
leave
hlt
xor
fxtract
xor
test
hlt
xor
imul
xor
jmp
hlt
xor
jmp
divl
add
clc
xor
jmp
cld
xor
jmp
add
add
cld
xor
jmp
add
add
add
xor
jmp
mov
decl
dec
aas
add
dec
aas
add
dec
aas
add
dec
aas
add
dec
aas
add
dec
aas
add
dec
aas
add
dec
aas
add
dec
aas
add
xor
add
xor
add
xor
add
xor
add
das
pop
add
das
pop
add
xor
add
xor
add
cmp
xor
add
add
sahf
das
adc
sahf
das
adc
testl
adc
push
add
mull
adc
add
testl
adc
dec
add
inc
add
insb
add
imull
dec
notl
add
negl
add
push
add
pop
add
notl
or
add
add
add
push
add
negl
add
negl
xor
pop
incl
icebp
pop
or
repz
adc
fistps
add
pop
ret
add
pop
add
divl
stc
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
fdivl
fldl
adc
aam
or
test
add
xor
xchg
mov
adc
xor
add
xor
xchg
aaa
xor
add
xor
xchg
aaa
xor
add
xor
xchg
aaa
xor
xchg
aaa
xor
add
xor
popa
hlt
aaa
add
lock
hlt
xor
pop
data16
in
hlt
xor
inc
lock
sub
add
add
add
add
sbb
jmp
lock
xor
int
lock
xor
mov
lock
cmp
lds
sub
call
hlt
xor
mov
lock
xchg
lcall
xchg
decl
data16
jmp
data16
incl
inc
add
mov
mov
and
pop
mov
add
es
and
lret
add
mov
add
xor
add
mov
add
mov
add
sub
add
inc
add
add
mov
add
mov
add
add
add
push
mov
adc
add
mov
adc
jb
inc
add
mov
adc
mov
inc
imul
add
idivl
add
imul
mov
adc
or
add
and
pop
testl
or
negl
or
jge
inc
testl
pop
negl
add
add
push
add
testl
or
dec
popl
aad
adc
inc
xchg
inc
negl
xchg
inc
divl
mov
xor
add
xor
add
xor
add
xor
aaa
xor
add
push
xchg
aaa
xor
xchg
aaa
xor
xchg
mov
fadds
sti
xor
mov
outsb
add
mov
xor
add
xor
mov
add
xor
mov
and
xor
xchg
mov
xchg
add
xor
add
xor
shl
adc
mov
lock
xor
adc
ljmp
lock
sti
sub
xchg
test
pushl
sub
popf
test
call
hlt
cmp
test
add
add
add
and
add
lock
sti
push
add
lock
sub
popa
test
jmp
hlt
sub
push
hlt
xor
int
lock
hlt
sbb
jmp
hlt
xor
pushl
sub
lods
lock
hlt
sbb
aad
lock
incl
mov
pop
add
sub
inc
add
shlb
push
add
xor
add
xor
add
scas
inc
add
pop
add
scas
inc
add
sub
add
scas
inc
add
imulb
adc
out
lods
inc
add
sub
add
xor
inc
lods
inc
add
xor
add
lods
inc
add
sub
add
lods
inc
add
sub
add
stos
inc
add
adc
add
inc
test
pop
add
notl
xchg
popa
add
notl
xchg
std
add
xchg
test
mov
adc
lods
test
roll
push
test
add
imull
xchg
test
or
or
add
negl
inc
idivl
add
imull
inc
mull
test
lcall
negl
add
div
test
imull
idiv
test
jnp
add
add
and
icebp
xor
add
xor
xchg
xor
clc
xor
xchg
xor
xor
add
xor
aaa
xor
xorl
xor
add
xor
aaa
xor
add
xor
add
xor
add
repz
add
xor
add
xor
xorl
xor
std
xor
xorl
icebp
jns
xor
ljmp
repz
call
sub
cmc
pusha
icebp
jmp
sub
std
push
icebp
decl
cmp
leave
inc
icebp
fdiv
cmp
mov
icebp
jmp
add
icebp
jl
add
hlt
add
hlt
add
lock
pop
add
ja
pushl
aaa
add
shl
inc
hlt
xor
mov
hlt
add
pusha
sub
aas
add
sub
aas
add
add
sub
aas
add
aas
add
sarb
add
sarb
sahf
xor
aas
add
xor
aas
add
mov
add
add
xor
add
aas
add
mov
add
jle
aas
add
xor
aas
add
add
push
mov
add
mull
add
mull
add
add
sarl
mov
pop
mull
add
testl
jl
div
add
xchg
jl
testl
inc
mull
add
negl
jge
divl
jl
neg
add
testl
jge
imull
jge
testl
jge
testl
inc
add
xor
in
xor
jge
xor
jge
xor
stc
xor
add
xor
add
xor
add
xor
aaa
xor
add
xor
add
xor
add
xor
jp
xor
sti
xor
jp
xor
sti
xor
jp
xor
add
xor
jns
xor
add
clc
xor
jns
xor
jns
xor
repz
jns
xor
div
xor
aad
lock
mov
xor
in
lock
sti
sub
inc
lcall
sub
and
dec
jp
cli
hlt
or
lea
jmp
hlt
add
icebp
jmp
sti
sub
orl
add
cmp
cmp
xor
cmp
icebp
incl
push
add
sbb
pushl
or
mov
cli
lock
sub
fucomp
lock
ljmp
or
dec
mov
or
add
xor
add
xor
aas
add
xor
add
xor
add
xor
add
aas
add
call
mov
adc
bound
or
jb
aas
add
xor
aas
add
or
mov
adc
mov
xor
aas
add
xor
add
aas
add
jns
adc
lods
test
xchg
add
imull
add
mull
add
notl
add
add
cltd
test
loopne
adc
idiv
add
leave
test
faddl
pop
mull
add
testl
test
and
and
test
pop
add
imull
inc
testl
add
testl
test
xor
add
xor
mov
jge
or
insl
test
mov
push
add
xor
mov
js
std
xor
mov
mov
xchg
xor
test
xor
test
xor
xchg
xor
add
xor
xchg
xor
add
xor
add
xor
xchg
xor
add
xor
add
xor
aaa
xor
add
in
xor
mov
and
dec
jbe
ljmp
and
cmp
and
pushl
xor
sub
pushl
push
add
repz
in
icebp
decl
sub
push
ja
pushl
ja
incl
repz
add
ja
cmp
sub
xor
decl
and
pop
ja
ljmp
add
jmp
ja
call
and
push
hlt
sbb
dec
ja
jmp
add
mov
add
add
fidivs
add
pop
sub
add
dec
sub
add
pop
sub
add
dec
sub
add
push
sub
add
cli
daa
push
sub
add
push
add
xor
add
aaa
push
or
add
xor
add
dec
popa
arpl
xchg
imul
jno
dec
inc
jne
push
dec
jns
sahf
xor
pop
imul
loop
adc
fisubs
loop
imul
bnd
out
jne
adc
jns
adc
add
testl
add
dec
add
testl
add
add
add
testl
add
dec
add
testl
add
dec
add
testl
add
dec
add
testl
add
dec
add
testl
add
dec
add
testl
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
divl
jmp
add
xor
push
push
aaa
jle
dec
aaa
jbe
inc
aaa
outsb
push
xor
pop
push
and
dec
push
adc
ds
cmc
xor
repnz
icebp
cli
icebp
ss
push
in
and
stc
jmp
ss
addr16
pop
ss
out
push
ss
add
ss
ficoms
ss
popf
sub
mov
ss
mov
sbb
ljmp
fdivs
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
add
xor
jmp
hlt
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
pop
xor
add
add
dec
xor
add
add
pop
xor
add
add
dec
xor
add
xor
add
xor
add
push
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
testl
add
dec
add
testb
testb
testb
testb
testb
testb
testb
testb
testb
testb
testb
testb
testb
testl
add
add
add
testl
add
dec
add
testl
add
dec
add
testl
add
dec
add
testl
add
dec
add
testl
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
divl
jmp
add
xor
add
xor
add
xor
add
xor
add
xor
jno
mov
daa
or
dec
pop
adc
data16
aad
push
sub
xchg
gs
dec
loop
xchg
scas
test
cmp
mov
out
inc
inc
aad
movsl
rolb
or
insb
mov
add
add
add
mov
sbb
push
arpl
xor
in
or
aad
jnp
das
aas
mov
adc
leave
stc
push
mov
out
xchg
cmp
xchg
ja
mov
int3
rcrb
xor
rorl
push
push
in
enter
movsl
punpcklbw
in
jae
jne
xor
push
sbb
add
add
add
icebp
call
xor
fdivl
rolb
je
jae
stos
lahf
dec
notb
test
xchg
xor
jge
mov
mov
movsl
mov
mov
jo
jl
out
sbb
xor
xchg
in
mov
or
out
and
jae
or
ret
pusha
ret
enter
push
out
pusha
push
test
add
add
add
add
add
pop
je
xchg
xor
jno
jns
filds
xchg
jns
insl
dec
test
xchg
push
sub
es
jns
stos
mov
jmp
arpl
inc
xchg
pop
mov
sti
add
lods
jae
mov
adc
sahf
into
fwait
mov
nop
fs
add
inc
aam
add
dec
xchg
or
mov
in
inc
lcall
fs
in
cmp
add
mov
lods
lea
mov
out
mov
insb
rcrb
nop
js
pop
sti
lret
ds
jmp
aas
in
test
cltd
push
inc
cmc
enter
add
arpl
adc
dec
arpl
fisttpll
mov
pushf
push
movsb
das
ss
aad
xchg
add
sub
ffreep
int
stos
sbb
repnz
pxor
decb
daa
fs
jno
testl
mov
push
jl
sub
push
dec
and
or
push
lods
jno
js
test
dec
jmp
or
mov
or
push
aad
dec
xor
minps
add
jge
mov
test
gs
mov
mov
loop
pop
jne
arpl
jmp
push
fwait
cs
cmp
xor
in
in
xor
mov
xor
inc
xchg
sub
mov
inc
adc
dec
xchg
xor
push
mov
or
pop
xor
dec
mov
dec
pushf
xor
dec
lods
xor
dec
mov
xor
add
add
add
add
lret
mov
cmp
inc
sub
xchg
adc
les
dec
int3
xor
dec
add
dec
mov
jle
clc
cli
in
in
jle
or
xchg
fsubrl
mov
jbe
dec
dec
cmp
dec
xchg
cmp
dec
cmp
ret
cld
pop
enter
in
sub
aam
addl
add
add
mull
pusha
das
xchg
adc
push
mov
call
push
shr
mov
mov
add
push
and
mov
pop
mov
popa
je
mov
ret
sbb
xchg
sbb
or
xor
inc
sbb
daa
repnz
fcompl
cmp
add
add
add
ret
out
mov
sbb
sub
sub
imul
cwtl
lret
dec
call
aas
push
lea
dec
jl
and
insl
cmpsb
push
fwait
insl
xchg
pop
and
push
and
jae
sti
aas
loopne
or
fcomp
mov
iret
mov
fs
push
popa
test
add
push
adc
pusha
in
add
adc
mov
pusha
fcoms
sbb
fnsave
jl
js
mov
push
aas
mov
popa
add
push
aas
xor
push
mov
pop
push
out
xor
aaa
xor
lahf
add
icebp
fwait
jmp
push
test
roll
dec
cltd
and
dec
add
jne
or
add
xchg
cmp
fsubrl
add
in
cmp
subb
mov
mov
inc
sbb
jge
cmc
fidivl
mov
sarl
xor
add
xor
rcrl
lret
push
sahf
inc
inc
jmp
add
test
jne
mov
loope
jne
inc
sub
cmp
test
inc
and
icebp
mov
out
test
mov
push
nop
aaa
mov
loopne
xor
aad
add
mov
dec
outsb
cmp
jmp
leave
dec
and
xchg
test
test
sbb
and
or
rcrb
mov
inc
inc
stos
aas
mov
add
xor
dec
xor
outsl
adc
inc
rcr
mov
push
push
lock
add
add
add
add
pop
inc
dec
int3
lods
sbbb
mov
mov
pop
test
add
adc
sub
bound
sbb
mov
jmp
push
jo
test
daa
fisubs
sbb
in
sbb
negl
arpl
idivl
xlat
out
pop
idivb
adc
adc
movsl
cmpsb
and
mov
inc
add
xchg
fdivr
out
adc
inc
arpl
push
sub
push
push
arpl
arpl
add
addb
scas
inc
dec
push
inc
ficomps
in
sarl
push
sub
fs
ja
jo
js
test
mov
shl
loopne
popa
xlat
enter
inc
cmp
and
scas
mov
orl
sbb
push
fsubrs
mov
aas
push
push
lds
mov
icebp
jne
xchg
lcall
or
add
movsl
repz
jae
inc
stos
mov
hlt
xor
jmp
hlt
xor
call
cmc
xor
in
sub
or
icebp
psubw
adc
dec
cmp
sbb
and
leave
aad
and
stc
dec
daa
adc
fcompl
or
in
xor
or
cmp
add
test
mov
cwtl
imul
mov
ja
jbe
jns
mov
pop
pop
outsb
adc
jb
gs
imul
insl
outsl
push
cld
jo
and
jne
mov
jns
sub
jge
into
stos
addl
add
mov
mov
lahf
xchg
xchg
xchg
mov
sahf
lahf
scas
lret
mov
cmpsl
data16
stos
jp
lods
scas
pop
mov
mov
jbe
mov
mov
adc
movl
js
iret
mull
shlb
cmp
faddp
aaa
gs
sub
cwtl
ljmp
pushf
repz
add
sti
dec
imulb
pop
cli
insb
jecxz
pusha
pop
add
hlt
or
push
clc
pop
or
cld
adc
push
lock
hlt
adc
sbb
adc
or
clc
sbb
aam
pop
fdivrs
sub
rolb
xor
cmp
sub
sbb
ds
jecxz
push
out
fbld
xor
call
add
xchg
shrb
pushf
sbb
inc
test
sarb
xor
js,pt
xor
xorb
into
cmpsl
cmp
xorl
jg
lods
jo
jge
insb
xchg
js
shlb
pusha
jnp
enter
les
push
rolb
int3
nop
stos
pop
fmuls
inc
loopne
popl
test
out
xchg
mov
out
ret
jmp
xor
lret
repz
cmp
shlb
in
push
fistpl
adc
jecxz
xor
out
sbb
adc
fldenv
sbb
ror
sti
mov
add
add
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
add
add
add
xor
jmp
hlt
xor
jmp
hlt
xor
fcomip
xor
jmp
hlt
xor
add
add
into
add
into
add
fisubrs
incl
fisubrs
add
into
add
into
add
sahf
add
sahf
add
mov
add
mov
add
sahf
add
nop
jle
pop
mov
add
mov
add
pop
add
pop
add
add
add
dec
add
pop
add
pop
add
pusha
jle
pop
dec
add
push
add
push
add
push
add
push
add
push
incl
nop
jge
xchg
pop
add
notl
add
notl
add
notl
add
notl
add
notl
dec
dec
push
inc
inc
push
cmp
add
notl
add
notl
add
notl
add
add
pop
add
notl
push
decl
add
clc
pop
add
notl
add
notl
add
notl
add
notl
add
not
push
add
add
aas
sbb
add
pop
add
notl
add
notl
add
negl
add
divl
jmp
add
mov
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
divl
imul
cmp
in
pusha
and
add
mov
in
out
cmp
in
out
inc
sti
cmc
out
sti
cmc
out
sti
cmc
push
inc
sti
cmc
push
inc
fcomi
push
mov
add
inc
add
and
sbb
add
cmp
sti
or
sti
add
sti
ljmp
fucomi
inc
subb
add
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
add
xor
jmp
hlt
xor
jmp
push
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
inc
inc
add
inc
inc
xor
jae
mov
inc
inc
flds
ds
loope
add
sub
dec
adc
mov
lret
add
pmulhw
lahf
xchg
cwtl
push
sbb
push
pushf
or
sbb
test
mov
mov
into
in
mull
sbbb
mov
sub
ja
push
faddl
jnp
jae
cmp
jno
prefetch
movsl
jge
cltd
sbb
cmp
cli
imul
mov
add
add
add
pop
popa
and
js
pop
inc
cmpsb
out
jno
test
sti
and
ljmp
lcall
and
pop
sbb
scas
push
insb
shrb
rcrb
ret
incb
xchg
cmp
cmp
xchg
mov
mov
ljmp
dec
cld
cs
in
mov
add
pop
push
xchg
xchg
mov
std
and
inc
cmp
enter
push
push
or
out
xor
add
xor
divl
int3
add
xor
add
xor
std
js
add
divl
flds
xor
std
pusha
sbb
add
xor
imul
xor
fwait
repz
imul
xor
lcall
add
add
xor
imul
xor
jge
xor
mov
sbb
or
hlt
xor
jmp
dec
jb
mov
jb
jmp
pop
jb
pop
dec
jb
or
add
hlt
xor
cmp
add
mov
xor
add
xor
gs
xor
icebp
hlt
xor
add
push
call
add
es
add
ljmp
add
das
add
pop
add
ucomiss
add
add
pop
add
sbb
add
rdtsc
add
fdivl
add
fdivl
add
int3
xor
int3
xor
add
xor
add
xor
fidivl
add
lret
add
add
mov
add
das
add
add
xor
push
lea
add
lea
add
pop
xor
add
hlt
push
push
add
or
hlt
or
add
or
add
or
add
loopne
add
sbb
add
mull
dec
inc
neg
add
idiv
inc
inc
not
add
testl
dec
inc
notl
add
inc
dec
inc
mull
add
lds
add
aaa
add
idivl
add
test
add
idivl
add
idivl
add
idivl
mov
dec
mov
mov
add
xor
add
xor
add
xor
divl
mov
add
xor
add
xor
add
add
add
divl
and
mov
inc
add
xor
add
xor
xor
add
xor
add
divl
repz
sti
xor
iret
xor
xor
xor
sub
xor
inc
sti
jbe
inc
repz
xchg
hlt
cltd
add
hlt
fwait
add
hlt
sti
add
jb
jl
push
add
hlt
jnp
pop
hlt
out
add
xchg
add
ja
push
hlt
lea
inc
hlt
lcall
hlt
xchg
add
hlt
xchg
add
hlt
jl
sub
xor
sub
pop
add
hlt
add
hlt
and
xor
cmp
and
hlt
add
hlt
inc
add
hlt
jae
cmp
outsl
add
addb
xor
xlat
xor
in
jo
call
xor
cmp
xor
add
xor
add
xor
add
xor
add
sidtl
xor
xor
xorl
add
pop
add
outsl
add
xor
pop
xor
add
add
and
ja
xor
gs
add
xor
aas
sub
add
and
add
adc
jnp
xor
testb
idivb
sbb
and
insb
imul
add
add
mul
add
idiv
add
imul
add
neg
add
test
add
insb
add
mulb
cmp
jno
adc
addb
mulb
data16
push
negb
divb
add
add
ret
mulb
add
xchg
add
inc
add
testb
divb
xor
add
das
cmp
xor
cmp
inc
xor
add
das
and
add
xor
add
das
leave
add
das
movb
xor
add
xor
add
das
mov
add
lahf
add
add
add
add
add
push
dec
push
pusha
dec
cld
pusha
dec
push
pusha
dec
push
pusha
inc
in
popa
jmp
popa
xchg
xchg
popa
cmp
fwait
popa
xchg
call
popa
add
mov
xor
or
dec
mov
sbb
pop
nop
shrb
cmp
into
das
cmp
jo
das
lahf
test
das
xchg
test
add
add
add
add
loope
xor
das
xor
das
jne
fldt
insb
neg
das
addr16
das
pop
not
das
test
div
das
stos
imul
das
stos
imul
das
lods
imul
das
movsb
mul
das
das
mul
das
es
das
and
in
and
loop
add
iret
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
in
xor
xor
xor
xor
xor
xor
xor
xor
adc
xor
adc
xor
in
xor
out
xor
adc
xor
adc
push
mov
push
push
dec
adc
push
dec
adc
push
popf
adc
push
sbb
and
sbb
and
testl
es
pop
daa
add
pusha
sub
dec
sub
dec
sub
pop
sub
inc
sub
dec
sub
icebp
aaa
das
stc
cmp
xor
xor
xor
rorl
xor
fmull
xor
stc
fimull
aaa
icebp
iret
or
stc
rorb
cmp
mov
or
test
inc
stc
movsl
or
cmpsb
or
stos
or
or
test
add
add
add
add
mov
or
xor
sub
sub
sub
or
sub
sub
inc
or
cmp
inc
sub
or
sbb
inc
sub
and
sub
inc
or
sub
inc
or
sub
or
sub
or
sub
or
sub
or
xchg
or
sub
or
sub
or
push
pop
or
sub
or
sub
or
sub
or
sub
cmp
xor
add
out
aaa
add
out
cmp
cmp
cmp
out
cmp
mov
add
out
aas
add
out
jle
sub
inc
add
incb
sub
jbe
and
incb
daa
add
je
scas
in
inc
add
in
jne
mov
std
dec
add
in
dec
add
in
dec
add
std
dec
add
std
dec
add
in
dec
add
in
dec
add
std
jg
mov
pop
cmp
bound
inc
add
cmp
cmpb
add
cmp
add
cmp
cmp
add
aaa
add
cmp
fidivrl
dec
add
cmp
clc
cmp
add
cmp
out
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
adc
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
push
cmp
add
cmp
add
test
das
rep
or
sti
mov
and
test
and
mov
and
test
push
sti
outsb
or
add
pusha
or
repz
or
sti
jb
sub
dec
or
repz
or
sti
push
or
repz
xchg
jns
mov
jp
mov
jnp
mov
je
stos
hlt
jle
mov
outsl
or
hlt
mov
push
test
mov
adc
hlt
mov
lods
hlt
mov
scas
hlt
addl
hlt
xor
xor
add
pop
pop
cmp
push
pop
xor
inc
pop
sub
inc
pop
cmpsl
xor
pop
mov
xor
pop
test
sub
xor
pop
push
das
pop
popa
xor
pop
mov
and
xor
pop
jle
xor
jge
xor
insb
xor
pop
bound
aaa
pop
pop
xor
pop
nop
xor
pop
xchg
xor
pop
xchg
xor
push
fwait
xor
add
add
add
xor
push
pop
xor
nop
icebp
xlat
add
stc
mov
add
icebp
les
test
ret
add
stc
ret
add
stc
leave
add
movb
stc
movl
cmp
int
push
icebp
lret
stc
lret
add
icebp
lock
stc
icebp
add
icebp
out
add
stc
out
add
add
cmc
add
repnz
cli
repz
repnz
add
cli
stc
add
add
and
add
and
js
add
jbe
mov
and
fwait
and
cmp
and
cmp
test
push
cmp
and
pusha
and
and
sub
add
cmp
sbb
and
cmp
and
cmp
and
cmp
and
cmp
and
cmp
and
cmp
and
cmp
andb
cmp
sub
xchg
aaa
sub
test
or
adc
ret
or
fisttpll
xchg
aam
xchg
stos
or
fstpt
or
add
add
add
mov
or
mov
or
mov
or
sbb
and
jno
or
outsb
or
adc
adc
jnp
or
je
adc
dec
or
and
mov
aam
or
fisubl
or
adc
or
xor
or
cmc
push
mov
hlt
push
mov
cmc
push
mov
sti
push
test
add
push
mov
clc
push
xchg
out
push
dec
push
push
push
push
std
push
inc
push
jmp
inc
push
in
push
push
adc
dec
push
adc
push
sbb
push
inc
push
cwtl
push
sub
push
and
push
sub
push
and
push
dec
push
ja
dec
push
jle
cmp
dec
bound
in
pop
push
fimuls
push
shll
dec
push
int
sub
int3
dec
and
sub
icebp
imul
jmp
dec
and
repnz
and
ljmp
scas
cli
fldenv
repnz
cwtl
ljmp
mov
repnz
mov
and
cli
and
and
ljmp
aas
cli
mull
repnz
and
ljmp
dec
cli
aad
dec
bnd
and
add
lds
add
es
cli
push
and
repnz
ljmp
and
cmc
xor
arpl
sub
data16
gs
aaa
and
pop
aaa
and
insb
aaa
and
insl
aaa
adc
bound
pop
daa
arpl
outsl
es
insl
es
aaa
inc
es
inc
es
push
es
adc
and
cmp
dec
aaa
sbb
add
push
and
cmp
jo
add
sub
xchg
scas
add
xor
sub
loop
or
shlb
or
xchg
adc
or
lret
sbb
or
sub
hlt
or
adc
into
push
pop
xlat
stc
push
sar
clc
push
shl
sti
push
sar
mov
add
add
add
add
lods
push
aam
mov
aad
scas
push
cli
mov
xlat
repnz
push
fdivr
mov
fptan
mov
bound
fcomi
jae
fdivr
insb
pop
inc
pop
fdivrp
pop
pop
fcomip
inc
pop
loopne
dec
pop
loope
dec
pop
loop
xor
pop
xchg
sub
pop
fwait
sub
pop
xchg
sub
pop
pop
sub
push
push
sub
pop
dec
sub
push
dec
sub
push
pop
sub
or
mov
add
mov
hlt
test
sti
mov
xacquire
stc
mov
lock
ss
or
ss
or
ss
or
ss
or
ss
or
cmp
out
cwtl
or
ss
or
ss
aaa
jl
add
ja
or
add
sbb
push
pusha
daa
push
arpl
sub
push
add
sub
dec
and
inc
and
aas
out
es
ss
and
push
test
dec
push
stos
out
push
push
stos
out
push
push
movsl
decl
decl
cmpsl
out
dec
push
scas
out
dec
push
mov
call
mov
pop
push
mov
call
call
scas
out
push
push
cmpsb
out
push
push
cltd
incl
cmp
inc
push
cmp
ds
cmp
aas
push
xor
add
add
add
cmp
add
cmp
push
stc
cmp
push
out
cmp
aaa
cmp
push
xor
cmp
sarb
push
and
aas
push
cmp
out
cmp
in
cmp
std
cmp
cmp
push
cmp
push
cmp
push
inc
sub
push
inc
sub
push
xor
dec
push
xor
sub
push
jae
dec
push
pop
sub
push
sub
add
push
pop
sub
push
pop
sub
push
dec
sub
push
sub
push
sub
push
mull
pop
add
pop
stc
mov
add
xor
lods
add
xor
jb
aaa
es
cmp
popa
push
cmp
pusha
push
cmp
outsl
push
cmp
inc
push
cmp
popf
add
push
mov
ds
stos
add
out
add
out
add
add
add
add
out
add
inc
jge
inc
fs
inc
bound
dec
es
dec
outsb
add
dec
push
push
add
add
sub
add
inc
inc
sub
inc
inc
sub
and
add
and
add
iret
aas
xor
add
aas
sbb
add
aas
cmpsb
add
aas
mov
add
aas
lcall
and
dec
and
add
pop
mov
xchg
cmc
rcll
cmc
rclb
cmc
mov
adc
cmc
mov
adc
mov
adc
cmc
mov
adc
adc
cmc
lds
add
les
adc
ret
adc
cmc
ret
cmc
rcll
div
adc
imul
adc
imul
adc
notb
xor
testb
mov
lods
xor
mov
sahf
imulb
adc
ja
lock
adc
test
add
add
add
xor
lods
and
daa
push
add
adc
and
mov
and
mov
and
adc
and
adc
and
adc
and
adc
and
adc
and
add
inc
xor
add
inc
add
pop
xor
add
xor
add
inc
add
sub
add
std
inc
add
std
xor
add
add
add
add
add
mov
add
out
add
negl
xor
div
add
idivl
add
idivl
add
negl
add
negl
add
idivl
add
mov
add
negl
add
imull
add
imull
add
imull
xor
divl
add
imull
add
sub
add
jae
add
incb
add
xor
xor
xor
add
xor
divl
leave
add
xor
divl
lock
xor
xor
add
xor
divl
flds
divl
jnp
divl
fadds
divl
pop
xor
xor
xor
xor
xor
xor
add
divl
jg
divl
les
divl
pop
xor
xor
add
xor
divl
movb
xor
add
xor
divl
or
xor
divl
or
xor
push
fdivs
add
sti
xor
test
xor
in
hlt
xor
ja
xor
mov
or
add
hlt
xor
inc
sbb
add
sti
xor
xchg
or
add
hlt
xor
test
fdivs
add
enter
hlt
xor
xchg
xor
mov
enter
sti
xor
pop
sbb
add
or
add
sbb
add
or
add
xor
popf
fnstenv
add
xor
add
xor
add
xor
add
xor
add
add
add
xor
add
dec
add
out
add
add
add
dec
add
iret
xor
add
dec
add
mov
dec
add
dec
xor
add
dec
add
dec
xor
add
dec
add
mov
add
sbb
add
dec
add
leave
das
add
sbb
add
das
add
mov
add
shrl
negl
add
test
add
test
add
idivl
add
not
sub
imull
add
test
add
not
sub
testl
add
idivl
sub
add
sbb
add
pop
sub
add
ss
add
cmp
add
negl
add
add
add
notl
sub
add
xor
sub
xor
sub
xor
sub
xor
sub
xor
sub
xor
xor
add
xor
add
xor
sub
divl
jmp
divl
sub
divl
call
add
xor
mov
mov
jmp
divl
stc
mov
cli
out
divl
jmp
add
xor
add
xor
add
xor
add
xor
jmp
xor
out
xor
mov
xchg
jo
pop
xchg
jo
add
add
dec
pop
push
jmp
ss
add
daa
pop
push
jmp
xor
hlt
xor
sub
dec
dec
or
jne
xchg
xchg
cmp
add
xor
fdivrl
mov
push
jge
jle
and
daa
add
dec
fs
lcall
mov
jge
add
ret
outsb
jno
add
dec
xor
dec
sub
dec
add
xor
add
xor
add
xor
add
push
jo
mov
les
call
outsl
add
decl
push
inc
add
xor
call
shlb
fldt
bound
fwait
imul
xor
add
fldt
mov
jae
popa
outsl
imull
aas
notl
add
scas
add
mov
bound
mull
je
dec
add
testl
add
dec
movb
ret
push
mov
dec
inc
cmp
push
inc
cmp
into
pusha
push
sub
push
push
das
mov
inc
sti
scas
je
xlat
stos
js
sbb
xor
adc
jmp
loopne
add
testl
fisubs
rol
mov
jmp
pushf
mov
loope
mov
fists
test
mov
scas
imul
arpl
loopne
dec
add
int
push
pop
leave
mov
lea
pop
mov
popf
pop
test
cltd
push
sub
divl
mov
add
xor
add
xor
add
xor
add
xor
add
xor
add
adc
fiadds
or
mov
add
xor
add
xor
int3
hlt
lea
hlt
xor
out
idiv
ficomps
idiv
mov
popl
mov
xor
mov
subb
mov
inc
pop
push
xchg
je
repz
daa
xor
inc
dec
push
insb
imul
imul
xchg
vpshld
add
add
add
add
jb
lcall
mov
hlt
xor
mov
stos
inc
sbb
xor
add
and
xor
add
add
pop
xor
add
add
xor
add
xor
add
xor
mov
xor
cmp
xor
sub
add
sub
add
sti
sub
add
sub
add
sub
add
xor
add
sub
add
fwait
aas
add
shlb
repnz
cwtl
push
sbb
addr16
shll
int
je
sar
pop
xchg
addr16
shll
icebp
scas
jae
mov
insl
test
mov
push
mov
inc
fidivrs
mov
rol
rorb
ret
dec
test
add
add
add
add
lds
fs
lods
mov
add
inc
mov
jae
insb
mov
bound
push
fwait
jns
or
add
dec
mov
jae
and
xchg
bound
lahf
jno
or
add
dec
mov
jne
push
xchg
pusha
adc
int3
iret
adc
mov
xchg
les
divl
xchg
and
mov
add
insl
pop
inc
sbb
xchg
pop
pop
add
lret
mov
pop
lods
shll
push
int
divl
nop
xchg
into
lea
add
adc
add
xor
stc
repz
idiv
and
add
xor
stos
loopne
loop
fdiv
es
xor
add
xor
add
add
add
add
hlt
mov
aad
test
jmp
inc
pop
outsl
lcall
mov
sti
dec
add
hlt
xor
lret
hlt
dec
add
hlt
dec
add
xor
je
lea
mov
addb
push
dec
insl
outsb
pop
bound
outsb
cmp
dec
repnz
sub
add
add
add
js
pop
jge
jb
movsl
test
outsl
outsl
insb
xchg
xchg
add
push
mov
and
out
jbe
mov
lcall
out
enter
sub
add
sahf
enter
or
or
jae
push
das
nop
or
or
push
sub
add
add
add
add
arpl
out
sub
add
sub
add
sub
add
sub
add
sub
add
cmpsl
pop
dec
cltd
insb
push
or
cmp
add
dec
mov
xor
mov
sbb
add
testl
imul
mov
and
test
stos
jae
fiaddl
add
xor
insl
neg
add
add
stc
add
div
add
hlt
add
cld
add
flds
add
testl
add
inc
stos
insl
xchg
je
sub
or
neg
add
negl
pop
neg
add
imul
add
and
xor
add
xor
enter
divl
mov
adc
xor
add
xor
add
sub
rolb
add
fldl
and
rolb
xor
add
xor
mov
xchg
add
xor
divl
stos
add
xor
add
xor
add
xor
xchg
xor
xor
add
xor
add
xor
xor
inc
repz
add
add
repz
add
add
add
add
pop
add
repz
std
hlt
dec
add
hlt
popa
add
hlt
xor
lret
add
repz
jmp
hlt
addr16
hlt
addl
vminps
mov
sub
xor
dec
out
add
xchg
lea
out
movsl
addr16
fs
dec
push
jb
test
jmp
add
jb
pop
bound
ficompl
call
leave
inc
jb
xchg
jb
sbb
arpl
ret
insl
arpl
shll
enter
ret
add
jb
mov
xchg
arpl
xor
add
push
popf
cwtl
jo
cmpsb
mov
jb
lods
adcb
inc
sbbb
inc
add
inc
insb
stc
pop
outsb
jp
arpl
jge
bound
push
xor
add
xor
add
xor
add
cs
imull
add
notl
add
testl
add
idivl
add
imull
add
divl
add
stc
add
dec
add
notl
add
testl
add
or
add
mull
add
lds
push
mull
add
mov
add
movb
notl
add
test
add
xor
mov
xor
xor
xchg
xor
add
xor
add
xor
xchg
and
xchg
or
inc
cmpsl
push
sti
loopne
mov
add
jmp
xlat
mov
jmp
rclb
jmp
rolb
xor
xchg
push
jmp
xchg
pop
jmp
add
cs
jecxz,pn
in
adc
or
ss
add
popa
imul
pop
jo
repz
sub
dec
adc
dec
clc
jne
clc
add
cli
adc
xor
push
sbb
std
gs
cli
adc
xor
ds
decl
movsb
shlb
adc
ljmp
ja
lds
cli
adc
ljmp
push
mov
addr16
adc
ljmp
cmp
sbb
add
arpl
xor
sahf
popf
jg
add
pop
or
sub
iret
adc
xchg
bound
sarb
repz
add
int
cmp
divb
add
xor
add
dec
add
xor
cmp
sbb
add
std
xor
add
xor
add
jns
dec
sub
jbe
mov
insb
add
sub
cmp
divb
add
add
add
jp
cmp
popf
sub
dec
add
incb
dec
mull
add
popl
cmp
sahf
add
test
add
imull
inc
divl
jbe
xlat
add
idivl
pop
bound
insl
push
daa
stos
pop
push
sub
outsb
inc
cli
test
jno
ss
notl
mov
push
inc
lret
pop
mov
imul
mov
pop
add
or
outsl
push
std
xchg
fs
add
notl
ret
push
les
jno
cli
mov
loop
xchg
lahf
rcll
mov
iret
push
jg
lcall
add
xor
scas
cmpsb
jns
mov
call
pop
stos
test
lahf
push
adc
push
imul
mov
pop
arpl
mov
add
add
add
nop
push
pop
or
divl
and
jb
lret
xor
and
inc
outsb
sbb
aaa
jne
mov
jb
mov
add
stos
aam
lret
arpl
or
dec
add
jge,pn
movsl
sub
jne
popf
xor
xor
orb
jge
push
and
push
jb
add
gs
adc
or
inc
jae
orl
inc
imul
pop
xor
jb
sub
jge
xor
dec
and
incb
dec
pop
popa
std
pop
push
and
pop
push
jb
pop
bound
xchg
pop
outsb
or
insb
je
cwtl
arpl
mov
and
pop
fs
incl
xchg
clc
push
inc
xchg
sti
inc
pop
pop
stc
dec
push
pop
clc
push
pop
push
cmpsl
dec
inc
push
jmp
xchg
bound
lods
xchg
pop
jb
xchg
jb
sub
outsb
out
xchg
arpl
nop
jo
push
popf
inc
pop
pop
out
push
inc
adc
inc
pop
push
lock
inc
inc
dec
mov
add
shlb
jo
mov
jbe
div
mov
add
add
add
add
negl
mov
inc
mov
mov
jne
mov
arpl
mov
pusha
cwtl
mov
add
lahf
mov
mov
ret
lret
inc
test
mov
mov
xlat
add
divl
jne
jle
arpl
sub
jb
sub
add
and
ss
int
add
mov
inc
adc
dec
cmp
add
divl
shlb
adc
fldenv
xor
movsl
int3
mov
cltd
les
nop
movsl
ret
lods
xchg
adc
add
xor
lds
cmpl
cmpsb
jl
add
xor
push
cmp
movsl
add
jmp
mov
test
and
lret
xor
xor
and
xor
cmpsb
and
stos
adc
adc
sub
add
dec
insb
pop
and
outsl
pop
mov
ja
rcrb
and
nop
dec
je
fwait
dec
add
cmp
lods
sub
jg
sahf
push
pop
popa
lea
dec
dec
and
addr16
popa
pop
jo
and
dec
gs
mov
jl
sub
xchg
adc
loop
adc
dec
and
addr16
leave
jp
jb
popf
xchg
insl
outsb
mov
add
pushf
inc
pop
xlat
ljmp
inc
mov
dec
add
jb
out
mov
je
add
pop
data16
and
imul
jb
or
outsl
test
arpl
xchg
insl
outsb
xor
popa
insb
jns
arpl
mov
jno
scas
xchg
arpl
pushf
inc
pop
sbb
stc
pop
inc
sub
dec
inc
or
sub
insl
and
mov
lds
divl
test
jae
out
jb
sub
lcall
add
add
add
cmp
jae
repz
testl
mov
rol
push
mov
rcll
xchg
jno
mov
cmpsb
fs
mull
pop
mov
mov
jae
stos
loop
mov
clc
push
mov
push
adc
push
ss
inc
cmp
mov
add
and
add
add
add
add
xor
mov
and
push
mov
adc
or
adc
dec
aad
adc
mov
mov
dec
les
mov
dec
int3
xchg
shll
mov
fistl
xchg
mov
scas
adc
movsb
xchg
dec
leave
test
xchg
xor
lds
jg
push
pushf
pop
adc
dec
dec
inc
mov
cmp
pusha
dec
add
and
dec
insb
or
imul
mov
push
sti
arpl
popa
dec
insb
int3
pusha
push
add
mov
xchg
jle
les
gs
int
push
and
xchg
dec
insb
lret
xchg
push
imul
push
imul
add
add
cmp
mov
gs
gs
test
add
push
and
jle
inc
xchg
push
gs
cmpsb
push
imul
push
cmp
popa
imul
pop
imul
movsl
inc
pop
pop
push
cld
lahf
fs
mov
pop
data16
gs
stos
nop
jb
cmp
cmp
popa
imul
pop
imul
inc
pop
popf
hlt
pop
data16
gs
imul
and
pop
jne
mov
push
jg
imul
jnp
inc
movsb
inc
pop
sbb
jns
jmp
sbbl
and
xchg
jae
jno
popw
sub
bound
movsb
pusha
add
fsubl
inc
xor
ret
frstor
jae
add
fs
negl
pop
jmp
imul
mov
pusha
into
fwait
cmpsl
arpl
lahf
mov
rorb
xchg
addr16
pushf
pop
mov
scas
cmpsl
pop
xchg
mov
push
push
dec
dec
mov
pop
push
inc
mov
add
add
add
jmp
mov
jl
ret
inc
xchg
inc
push
push
test
pop
dec
jmp
cltd
adc
xor
mov
jl
mov
and
mov
divl
mov
lds
mov
mov
mov
xor
lods
xor
stos
loopne
jne
mov
push
mov
add
xor
stos
cmp
inc
mov
hlt
xor
sub
jo
cmp
mov
sbb
sbb
addr16
sub
cmp
push
cmp
add
gs
das
dec
insl
inc
jmp
inc
test
hlt
xor
mov
outsb
dec
lods
hlt
xor
movsl
mov
xor
stos
xchg
imul
hlt
xor
popf
xchg
movsb
hlt
xor
mov
jg
scas
push
add
aaa
jg
add
push
add
aas
inc
push
das
add
push
repnz
inc
xor
cmp
nop
jb
sbb
insl
js
cli
popa
outsl
cmp
insl
outsb
sahf
add
std
mov
jb
lcall
incl
jge
arpl
xchg
insb
arpl
outsb
xor
add
inc
mov
arpl
cmp
xchg
bound
xor
xchg
jge
insl
jae
lods
add
notl
add
movsl
add
push
add
popa
add
addl
movl
imull
gs
add
add
sbb
imull
add
negl
add
notl
add
mull
add
testl
add
lea
lods
lcall
add
cltd
shl
jne
pushf
xchg
dec
fsubrp
cwtl
dec
shl
mov
insl
stos
xor
nop
enter
lock
push
jb
std
pushl
loope
loop
mov
mov
adc
fcomps
push
sbb
xor
out
and
or
add
xor
ss
out
ds
sub
xor
push
mov
jnp
inc
popf
call
add
sti
push
filds
divl
hlt
movsb
repz
loopne
xor
mov
push
add
jg
add
jb
dec
mov
push
inc
or
cld
sub
in
roll
shr
das
fisubrs
icebp
sarb
adc
lret
lret
std
sar
mov
or
lret
jmp
shrl
int3
xor
xchg
clc
shl
mov
sar
mov
andb
ret
cmpsb
sldt
clc
mov
mov
add
add
add
add
xchg
out
xchg
pop
loop
cmpsl
add
dec
xchg
sbbl
pop
lea
stos
mov
add
ds
dec
repz
inc
outsb
rep
je
ja
jl
dec
inc
addr16
cmp
adc
inc
dec
or
inc
push
adc
aas
inc
into
xor
add
mov
jb
iret
movsl
arpl
xor
add
mov
xor
mov
andb
sub
lret
cs
sub
idivl
in
divl
loopne
sbb
iret
sub
test
mov
test
ret
movl
dec
cld
mov
mov
cmp
mov
test
stos
pusha
lods
xchg
mov
add
add
add
add
push
mov
ja
mov
jl
popa
jg
cmpsb
ja
add
idivl
push
inc
jmp
test
inc
mov
and
dec
leave
out
mov
sbb
xor
xchg
inc
mov
stc
mov
scas
cld
lods
js
cld
out
stos
std
int3
dec
out
sti
ret
daa
fiaddl
or
dec
fcom
mov
pop
jmp
add
add
add
divl
popa
imul
push
divl
push
inc
mov
cmpsl
sub
push
fcomp
sbb
lock
xchg
je
mov
fmuls
add
xor
shl
sbb
aam
addr16
dec
xchg
inc
push
cwtl
xor
xor
lret
fwait
mov
rcrb
lcall
mov
dec
add
or
add
add
cmp
test
sarb
sbb
sub
out
insl
adc
hlt
xor
push
aas
fwait
mov
das
fsubrs
cltd
daa
loopne
mov
andl
and
stos
pop
and
icebp
fisubl
repnz
push
adc
xlat
add
ret
mov
add
addr16
push
std
mov
gs
js
add
push
push
rol
test
fsubs
iret
rolb
jo
enter
lret
enter
cwtl
push
pushf
mov
inc
sbbl
add
jp
mov
push
pop
orb
jne
lahf
inc
add
add
fdivr
add
ret
lahf
fmuls
test
mov
push
and
cmp
add
mov
push
test
andl
add
mov
push
test
pop
jbe
add
insb
popa
mov
dec
dec
mov
adc
test
push
mov
insl
add
imul
fdivl
add
repz
push
inc
xor
pop
xor
xchg
test
mov
xchg
jl
xchg
mul
sbb
xor
adc
xor
or
inc
rolb
divl
pushf
mov
add
dec
loop
add
xor
jp
mov
xor
pop
mov
push
add
xor
and
lock
fidivrl
rcrl
fildl
fstl
xor
sbb
add
xor
jge
dec
ja
bound
add
xor
mov
subl
xor
aad
mov
cmc
stos
int3
pushl
aad
hlt
xor
inc
arpl
scas
inc
push
xchg
test
mov
stos
aas
lahf
test
bswap
jp
ret
add
imul
adcb
xorl
dec
lret
jnp
movsl
dec
jne
hlt
xor
mov
jle
mov
jp
xor
and
leave
call
decl
cwtl
mov
xchg
nop
xchg
call
lcall
das
or
rcll
or
add
add
ja
add
add
dec
adc
add
add
lret
mov
adc
xchg
sbbb
xchg
stos
mov
push
xor
add
jno
push
pop
add
pop
outsl
push
inc
pop
imul
bound
insb
push
arpl
push
push
mov
cmp
push
push
add
sbb
push
sub
push
dec
fadds
add
rcll
add
out
adc
cmp
pop
out
into
or
add
sbb
not
push
push
repnz
push
ffreep
and
push
adcb
sbb
sub
push
cli
jno
xor
and
adc
loope
and
sbb
pop
shrb
adc
in
sbb
loope
pop
negl
lahf
push
jp
movsb
inc
fadds
add
idivl
shrb
outsb
mov
add
test
pmaxsw
jmp
and
pop
loop
lock
jmp
aam
lahf
pop
add
xor
and
icebp
xor
push
divl
leave
lds
add
xor
pop
or
xor
mov
divl
sbb
and
sbb
sub
or
fdivrl
adc
or
xor
adc
cmp
or
xor
jae
jo
push
xchg
dec
lods
push
push
add
xor
in
mov
std
jmp
lret
movsb
int3
in
xchg
mov
sbbb
pop
shl
mov
popf
cmpb
gs
in
mov
testl
dec
xchg
out
dec
add
sub
adc
add
push
or
hlt
xor
jg
mov
pusha
jno
sub
xor
cmp
mov
in
sbb
and
into
jecxz
add
lock
add
out
add
jmp
rorl
xchg
push
out
sarb
lret
jecxz
xchg
xchg
std
call
add
inc
imul
shlb
add
dec
jae
fistps
mov
add
xchg
rol
fistps
add
add
push
adc
dec
inc
pop
das
add
stos
jecxz
test
std
testb
add
loope
lret
fdivp
in
loopne
ftst
loopne
call
fsubr
push
daa
clc
out
imul
or
push
in
adc
sti
in
sub
adc
cmp
fidivl
xor
lret
neg
daa
sub
iret
sub
orl
push
mov
sahf
fadds
add
mov
add
test
add
not
pop
inc
mov
add
imull
xor
add
cld
jae
idivl
sub
repz
add
repnz
insl
mov
mov
xor
and
xor
mov
xor
loope
or
fnstcw
mov
scas
jmp
rol
in
add
xor
add
xor
sarb
xor
dec
cltd
call
daa
adc
aad
sbb
jmp
call
add
leave
out
ss
sbb
filds
adc
xor
pop
test
jns
loop
sub
iret
xor
loope
imul
mov
mov
enter
mov
cwtl
jb
enter
out
frstor
mov
lods
xchg
pop
ja
cmpb
add
add
add
jge
mov
fs
mov
aas
cmpsl
jle
cmp
add
mov
push
mov
jmp
loop
adc
xor
add
push
xor
add
xor
add
cli
int
mov
xlat
add
mov
add
mov
jecxz
out
add
je
push
popa
dec
inc
add
xor
add
in
rcl
imulb
pushl
push
stc
imul
jb
mov
add
xchg
test
xor
cs
dec
xor
add
pop
inc
push
pop
xor
add
jo
pop
neg
add
imul
jbe
notl
sahf
jle
fwait
nop
xor
idivl
and
xor
testl
add
add
add
divl
mov
movsl
pusha
add
mul
adc
in
punpcklwd
pop
xor
sbb
adc
inc
push
or
sub
add
mul
cli
arpl
mov
mov
js
stc
std
stos
outsl
mov
hlt
cmp
xchg
stc
xor
rol
push
imul
int3
cmp
add
xor
aad
lcall
ficoml
jmp
xor
jae
add
xor
divl
arpl
out
ss
sub
sar
and
mov
and
cmpsb
loop
add
xor
movsl
push
nop
mov
ljmp
sbb
addr16
adc
cld
sti
add
or
or
xor
add
xor
add
add
add
pushf
pop
jle
mov
add
rcr
xchg
jae
mov
arpl
loop
shlb
xchg
pop
stos
xchg
call
mov
xorl
in
add
fucom
testl
mov
cwtl
mov
int
into
mov
shl
int
xchg
movsl
fidivrs
fcoms
xchg
stc
ret
stos
pop
mov
test
hlt
ficoml
adc
adc
and
hlt
xor
add
dec
imul
inc
jge
inc
dec
add
mov
mov
lds
cwtl
rcr
call
mov
out
stos
xor
add
das
add
pop
lret
into
das
add
add
or
insb
jge
add
or
js
sub
jle
fs
cmp
popa
jl
dec
push
pop
das
data16
fs
es
aaa
push
addr16
push
add
negl
ds
enter
lods
sub
dec
push
mov
sbb
pop
cmpsl
xchg
inc
adc
mov
cmpsl
push
mov
mov
dec
mov
add
add
add
add
cmpsl
mov
flds
add
pushf
dec
push
stos
orb
stos
dec
pop
dec
push
pop
mul
sub
and
call
pop
and
sub
adc
fldt
sub
jl
test
insb
test
xchg
addr16
xchg
xchg
outsl
xchg
pop
xor
in
sbb
inc
or
push
push
jp
inc
or
rorl
popa
add
ja
arpl
push
lods
aad
mov
dec
xchg
and
dec
leave
outsl
cwtl
cmp
xor
inc
divl
int
fcomps
add
pop
rorl
add
jmp
lods
mov
mov
adc
sbb
daa
sti
xor
or
or
stc
xor
loop
add
add
ret
push
jne
cltd
arpl
mov
add
loop
repz
cmp
test
out
mov
lcall
dec
leave
mov
dec
enter
clc
mov
jae
orl
fs
add
out
sub
inc
jg
mov
add
sbb
aaa
mov
adc
add
or
or
std
clc
xor
add
and
notb
sub
adc
and
xor
jnp
or
add
or
add
aas
dec
dec
pop
sbb
or
add
add
pop
xor
add
dec
arpl
add
push
xor
add
xchg
mov
mov
cwtl
mov
addb
jle
add
test
push
cmpsl
mov
pop
movsb
xchg
xor
shlb
lods
lea
neg
int3
mov
idivl
cmp
out
ficoml
pop
out
leave
add
testl
jo
in
adc
outsb
fbld
outsl
push
mov
imul
push
jbe
jle
pop
mov
rorl
add
and
or
enter
test
or
or
ret
sbb
jmp
or
adc
and
repnz
push
push
and
sbb
cli
sbb
sub
fsts
sbb
int3
or
add
fbstp
push
scas
dec
jns
fistps
dec
cmpsb
jo
adc
insb
and
mov
jo
popa
sub
mov
dec
sub
pop
sbb
mov
push
stos
push
mov
xor
jo
pop
mov
xchg
jg
adc
pop
cmpsl
in
xchg
inc
mov
xchg
inc
mov
pushf
mov
push
imull
push
xor
pop
aam
lcall
cmpsb
xlat
mov
scas
xchg
pop
add
lcall
add
ljmp
mov
fwait
pop
lods
gs
cltd
mov
pop
mov
imulb
mov
arpl
repnz
and
cld
dec
xor
les
jmp
je
lods
fwait
imul
sub
in
lds
mov
fmuls
cmpsb
ds
pushf
mov
add
pushf
movsb
or
stc
mov
cmpb
xchg
mov
fistps
xchg
xchg
add
mov
pop
cmp
xchg
adc
mov
clc
dec
jb
pop
dec
pop
insl
add
push
inc
dec
data16
sbb
js
push
pop
imul
add
push
pusha
push
add
push
pop
inc
ss
push
push
addr16
push
jle
push
inc
test
pop
dec
div
sbb
cld
jge
and
movsl
pusha
insl
sbb
inc
pusha
pop
sbb
and
sbb
jnp
movl
push
cmc
lds
sbb
fisttps
add
fisttps
add
ss
push
push
jno
pop
add
mov
out
out
movsl
jmp
add
add
add
push
cmp
jecxz
pop
gs
jmp
iret
xor
mov
fnstsw
add
fidivl
pusha
fcompl
inc
leave
mov
pop
mov
sarb
jmp
mov
jl
scas
jp
test
jle
push
xchg
add
xor
ret
mov
add
add
add
add
mov
inc
jmp
shrl
xor
sub
cld
int
pop
sub
mov
push
jp
fstps
call
cmc
sub
pusha
subb
pop
int3
jg
lea
inc
lods
cmp
stos
cld
ja
nop
mov
xor
loope
jmp
fcmovnb
cli
fnstsw
js
cmp
add
add
add
add
inc
xor
add
cmpsl
xchg
dec
mov
mov
repnz
mov
jecxz
lds
sar
xchg
sti
xor
cmp
add
adc
es
mov
xor
loope
cmp
mov
xor
fwait
je
xchg
jno
xchg
lea
xchg
ss
xchg
lahf
xor
add
fwait
add
dec
popf
lea
enter
mov
add
sub
xor
add
sbb
lret
sub
pop
push
and
add
mov
mov
mov
js
mov
cmp
mov
mov
testl
dec
rep
inc
or
dec
inc
pop
sub
sub
push
push
and
ss
addr16
push
sbb
leave
add
not
sti
incl
in
add
mov
add
jae
jecxz
sbb
lock
add
imull
ret
ret
aad
xlat
add
lret
ss
aas
movsb
dec
add
add
inc
cld
mov
cmp
ljmp
arpl
imul
negb
pop
lret
not
and
add
stc
adc
stc
mov
or
icebp
mov
decl
lret
cli
or
xor
dec
divl
jns
subb
mov
jnp
inc
xchg
xchg
stos
mov
xchg
xchg
aam
popa
int
ficompl
movsl
insl
mov
das
shll
mov
rol
out
sarl
mov
add
add
add
scas
fldenv
lret
pop
repz
cltd
fcoml
add
xor
adcb
add
sub
out
cld
hlt
es
out
pop
add
push
sub
in
pop
adc
in
inc
je
hlt
xor
int
popa
dec
cmpsl
mov
adc
loopne
sbb
add
aad
test
scas
xchg
mov
test
sti
xor
in
rcll
mov
xor
popa
xchg
lock
lahf
mov
and
adc
cli
sub
aaa
or
ljmp
hlt
and
jae
into
clc
aas
cmp
cmp
clc
popa
push
cmc
dec
adc
push
sub
dec
xor
add
push
ds
movsl
lahf
xchg
push
xor
add
mov
add
add
add
add
cmc
mov
sub
cmpsl
fdivs
incl
cld
incl
js
int
mov
ljmp
in
xchg
sub
fwait
daa
mov
lahf
adc
add
push
gs
mov
cs
add
dec
test
mov
mov
push
push
mov
add
adc
sub
mov
leave
add
idivl
mov
xchg
xor
mov
clc
mov
lea
add
cmp
cmpsb
add
testl
test
scas
sti
icebp
leave
stos
pop
test
ret
pop
jl
jae
xchg
jmp
mov
movsb
negl
cmpsl
add
push
jne
outsb
xor
fisubs
lods
insb
xchg
outsb
mov
xchg
insl
stos
test
jmp
mov
jle
cmp
mov
xchg
stos
pop
sbbb
dec
mov
divl
faddl
divl
scas
ds
adc
add
xor
add
xor
in
xor
add
add
add
rcll
sbb
adc
xor
popa
pop
ds
popa
push
sbbl
add
insb
add
hlt
out
jb
cmpsl
aas
in
xor
ret
pushf
mov
popa
hlt
sbb
das
xchg
mov
sbb
lret
jmp
in
push
mov
jae
or
fldl
out
add
ja
mov
add
add
add
hlt
std
mov
cmc
cmp
in
hlt
pop
mov
jbe
imul
hlt
xor
inc
movsb
inc
xor
repnz
enter
xor
in
xor
add
inc
int3
jbe
inc
add
adc
add
pop
or
imul
pop
out
in
dec
out
hlt
ja
inc
add
les
mov
dec
cmp
fwait
jb
andl
arpl
ret
push
mov
adc
into
sbb
dec
xor
ss
jecxz
fidivs
dec
fcoms
inc
into
mov
inc
les
test
test
mov
cltd
add
or
ljmp
in
mov
out
call
jae
push
sbb
fstps
and
clc
sbb
adc
mov
cltd
add
lea
add
mov
mov
mov
add
mov
int3
fwait
adc
test
add
jl
mov
cmp
mov
sbb
faddl
loope
out
ret
je
xor
adc
add
add
add
add
insb
les
inc
bound
or
fs
push
jno
les
mov
mov
cmc
cwtl
call
xor
sbb
or
jmp
pop
jmp
outsb
loope
sbb
xor
test
scas
or
jmp
jmp
sub
mov
sub
loopne
scas
imul
adc
add
add
add
insl
ja
loope
xor
xchg
cmpsl
cmp
xor
insb
scas
aaa
fwait
lock
jmp
hlt
xor
mov
hlt
xor
jns
lcall
in
cmp
xor
jl
sub
xor
dec
jge
mov
mov
add
add
add
add
add
aas
test
add
mov
lcall
enter
mov
add
xor
mov
inc
mov
add
push
push
mul
adc
pop
or
add
pop
lea
fucom
push
pushl
add
pop
popa
mov
sbb
fwait
seto
add
out
call
imul
jb
inc
lock
decb
jne
lea
dec
call
gs
subb
add
push
mov
pop
or
stc
jmp
neg
loop
je
pop
je
ljmp
pop
mov
inc
stos
sbb
or
imul
je
add
add
push
rorb
and
add
push
sbb
je
faddl
push
push
enter
mov
adc
jae
mov
inc
add
ficoms
xorl
pusha
sti
imul
or
add
rolb
idivl
cmp
testl
in
add
sbb
and
jl
inc
add
ss
inc
mov
inc
pop
push
test
cmp
add
or
insb
mov
sti
mov
lock
mov
adc
add
dec
jae
call
outsb
cmc
jl
jmp
cli
inc
idivl
mov
add
mov
xor
mov
ljmp
add
stos
jmp
cmp
cmp
test
pop
inc
push
in
adc
movsl
push
fs
xor
daa
cmp
in
push
test
das
mov
nop
mov
mov
out
js
call
add
jae
mov
sub
mov
xchg
or
jmp
xor
mov
add
add
add
sar
hlt
cmp
stc
and
push
add
out
jne
add
cmp
ljmp
mov
mov
jge
sub
enter
daa
sahf
sub
adc
sbb
decl
dec
mov
xor
dec
call
in
pushf
sti
add
test
call
jo
inc
daa
push
sub
daa
add
pop
push
cmp
sub
cmp
jne
pop
test
dec
or
aad
add
into
ljmp
fnstcw
dec
push
pcmpeqw
pop
std
cmc
mov
jg
sub
jmp
and
divl
orb
add
add
add
add
add
sbb
testl
mov
lcall
aaa
inc
or
jmp
fistl
lods
inc
add
push
fmull
ret
mov
or
push
sbb
adcl
dec
pop
mov
out
xchg
shlb
sub
ret
icebp
lods
add
divl
pop
inc
push
xor
jg
xor
add
filds
mov
out
and
in
int3
mov
inc
divl
outsl
jnp
cmpsl
call
inc
dec
mov
popf
jg
sbb
lea
in
add
cmpsl
push
icebp
call
mov
in
outsl
pusha
enter
cmpsl
push
mov
add
inc
pop
add
adc
or
sbb
xor
dec
push
fadds
test
cmp
je
sub
shll
xor
in
divl
test
scas
loopne
cltd
add
mov
mov
hlt
mov
jae
jnp
or
and
adc
dec
data16
pushf
out
dec
xor
jb
add
popa
add
mov
inc
push
and
add
add
add
cmc
adc
mov
testb
push
cmpsb
dec
mov
lcall
bound
out
mov
add
insl
out
popf
xor
pop
js
shll
inc
sarb
leave
pusha
jbe
xor
add
add
sbb
jae
mov
xchg
dec
push
push
fcompl
or
ds
xlat
lds
xor
fdivr
adc
lea
pop
imul
push
inc
adc
pop
outsb
int3
inc
orb
cmp
push
jb
notb
inc
scas
mov
xor
shlb
aam
push
add
push
ljmp
adc
push
outsb
in
das
mov
repnz
aam
push
and
jle
mov
pusha
lcall
cmpsl
adc
incl
jmp
add
xor
xor
add
add
ss
scas
cmp
stos
push
repnz
mov
loope
arpl
mov
fdivrp
call
roll
add
add
add
add
xor
mov
divl
flds
popa
fucomip
add
adc
divl
push
hlt
cmc
jae
lds
add
scas
adc
sub
dec
in
loope
imul
push
add
jno
outsb
pop
int3
sti
mov
lea
adc
mov
sahf
add
jmp
cmp
pop
sbb
and
pushl
js
mov
hlt
xor
xchg
mov
push
jmp
lret
test
outsl
xchg
push
mov
push
jmp
mov
test
mov
out
push
jb
mov
dec
mov
mov
daa
lock
cmpsl
repnz
xchg
outsb
push
pop
cs
add
dec
lea
pop
call
xchg
fs
mov
sbb
fldenv
adc
pop
arpl
add
jge
clc
push
xchg
ficoml
sahf
sub
rcll
sub
push
mov
push
sbb
mov
pop
movb
add
mov
hlt
xchg
xchg
adc
xor
pop
repz
add
jmp
xchg
mov
or
jae
xor
lret
aaa
jg
out
lds
adc
pop
adc
xlat
pop
push
sarb
xorl
xchg
cmpsl
push
sbb
negl
inc
clc
jl
xor
cmp
add
out
jnp
iret
xor
inc
mov
jl
mov
insb
push
fcompl
add
add
add
rcll
pushf
inc
add
rcrl
popa
movb
mov
es
and
fsubrl
out
jl
pop
push
addr16
pop
lock
add
add
leave
mov
call
mov
add
add
outsl
neg
rorb
mov
divl
fs
jp
imul
jecxz
in
push
cmp
in
dec
cmp
pop
jecxz
mov
fcmovne
pop
jmp
jl
arpl
and
bound
stos
fisttpl
lahf
add
pop
mov
push
hlt
mov
xor
loope
lahf
dec
fdivr
push
cmp
dec
jmp
add
add
lahf
pop
push
add
add
or
cwtl
pushf
cmp
stos
jl
xchg
xchg
jmp
mov
mov
lahf
subl
add
cmp
leave
pop
add
hlt
stos
inc
cmp
jle
imul
dec
bound
hlt
and
outsl
push
inc
sub
xchg
decl
adc
add
sub
or
std
fnstcw
cmp
adcl
mov
pop
pop
addr16
add
sbb
sbbl
mov
jns
sbb
dec
push
sub
mov
inc
or
jb
cld
je
mov
xor
lea
xor
cmpl
mov
mov
test
add
add
add
add
int3
loop
scas
mov
dec
xchg
push
mov
je
xlat
jmp
mov
push
inc
hlt
loopne
jp
jmp
mov
xchg
push
cmp
xor
xor
mov
jns
mull
aam
add
add
mov
dec
dec
aas
insb
bound
pop
xchg
jg
lock
add
add
add
pop
pop
dec
mov
pop
add
fsubrs
fidivrs
xor
jmp
sti
push
xor
add
fistpll
sub
sbb
jecxz
push
sti
pop
inc
and
xor
test
fldt
jno
repnz
inc
sti
mov
ret
test
dec
or
jle
add
inc
es
add
subl
push
repnz
insl
jg
fwait
call
icebp
or
imul
loopne
inc
je
jmp
mov
lcall
mov
add
mov
dec
xor
push
adc
add
scas
xor
mov
out
add
xor
popa
mov
lcall
cmp
xchg
call
hlt
lods
inc
test
xorl
subl
aas
sbb
hlt
sbb
sbb
dec
cwtl
add
insl
jae
add
mov
dec
pop
pop
out
add
pop
sbb
adcl
push
push
fdiv
incb
pop
repnz
incl
dec
adc
inc
rorb
fwait
mov
pop
add
loop
jge
aad
or
cli
or
add
sub
or
or
add
adc
scas
add
sub
je
les
xor
movsb
repnz
mov
into
cs
add
push
subb
adc
xchg
inc
add
push
or
mov
dec
jo
add
dec
adc
mov
lahf
push
mov
add
dec
add
push
lret
add
pop
aam
or
cmc
aas
idivl
ret
mov
scas
xchg
jle
and
dec
cld
mov
shlb
hlt
fcomps
xor
add
sbb
out
dec
sub
out
cmp
bound
cmpsb
mov
notl
adc
jg
cltd
imul
daa
pop
cmc
imul
sub
push
into
add
sub
out
mov
jo
xor
xor
push
mov
notl
add
add
add
add
cwtl
call
inc
negl
mov
jbe
aad
jmp
out
daa
mov
xchg
xchg
jmp
hlt
xor
ljmp
adc
inc
dec
or
bound
insl
or
call
mov
jae
insb
mov
and
lods
mov
mov
and
jae
sar
call
add
xchg
shll
call
xor
xor
call
sub
es
pushf
sahf
incb
xchg
movsb
add
xor
shl
adc
loop
or
push
inc
cmpsb
add
xor
shll
ret
xor
shlb
mov
ret
adcl
in
lcall
push
add
add
add
daa
add
add
sahf
ds
add
negb
add
xor
pop
repnz
xor
pusha
lods
mov
add
hlt
ljmp
cmp
mov
mov
or
add
inc
push
xor
xchg
add
xchg
and
testl
and
outsb
ret
push
adc
lret
push
sbb
xchg
push
xchg
add
push
adc
pop
jl
out
xchg
inc
add
ret
push
xor
mov
imull
cmc
ds
pop
xor
inc
or
or
js
adc
jge
adc
mov
hlt
and
xor
add
mov
divl
fs
call
dec
add
repz
push
mov
fcoms
pop
sub
sub
jmp
mov
imull
adc
in
imul
add
aaa
xor
jg
push
bnd
mov
lds
insb
arpl
jmp
xor
fldt
mov
lock
testl
add
add
repz
hlt
xor
fimuls
in
jno
clc
loope
ds
xor
call
xchg
mov
dec
outsb
rclb
popa
hlt
xor
negb
add
hlt
cmpsl
inc
mov
push
jae
cmp
xchg
incb
stos
pop
add
clc
and
movsl
adc
cmp
cmp
cmp
mov
dec
or
add
xor
imulb
and
iret
pop
xchg
lcall
incb
dec
sbb
ljmp
decl
adc
adc
lcall
gs
and
xchg
jb
aaa
or
test
add
dec
insl
cmp
rcll
add
cs
es
scas
add
sub
je
sbb
pop
jbe
and
ss
scas
add
mov
mov
negb
je
push
cmp
push
xchg
into
es
jne
sbb
add
andl
add
push
sbb
call
inc
aas
sarl
ja
or
and
mov
add
mov
ja
int3
mov
adc
jnp
lahf
adc
xchg
fucomi
dec
and
add
add
add
add
lcall
sub
punpckhdq
ret
call
push
les
mov
and
cwtl
jbe
push
lahf
test
decb
and
shll
add
div
jle
divl
call
fidivrl
mov
pusha
adc
cmp
xor
pop
fucomi
xor
sbb
add
add
add
adc
dec
roll
lret
jmp
push
lock
add
cwtl
ret
nop
jae
sbb
push
mov
and
popa
test
pushf
in
mov
xor
repz
imulb
push
stc
mov
es
stos
stc
call
lock
rcl
iret
xlat
pop
add
xor
jmp
mov
xor
sub
mov
icebp
xor
jecxz
add
jecxz
mov
xor
sub
mov
je
xorl
inc
dec
loopne
scas
sbb
shl
out
jb
xchg
and
hlt
xor
out
lock
add
mov
add
add
add
xor
je
jecxz
xlat
int
pop
push
mov
je
jecxz
adc
int
or
pop
out
in
lahf
rclb
push
xor
xchg
idiv
addl
add
ret
mov
je
mov
sub
or
and
sbb
jne
or
call
add
add
add
sub
push
jmp
ljmp
pop
xor
dec
xor
jne
in
jbe
jno
je
mov
outsb
or
notb
dec
or
mov
push
cmp
add
xchg
add
ljmp
mov
xchg
mov
fs
add
add
push
jne
mov
xchg
clc
xchg
lea
add
add
add
add
daa
popl
filds
negl
xchg
adc
cwtl
test
notl
cmovb
or
cli
inc
sar
xchg
lea
loopne
push
mov
repz
mov
test
push
mov
cmc
sub
sti
adc
lock
enter
cmp
xrelease
sbb
sub
repz
je
stc
push
jb
cmpb
cmp
add
sbb
add
mov
cmp
rclb
pop
jmp
mov
push
xor
dec
add
push
into
xor
xchg
cld
mov
add
int3
ljmp
inc
sarb
out
stos
loopne
push
bound
push
sbb
jecxz
mov
pop
push
pop
cmpsb
mov
mov
xchg
enter
mov
and
jne
or
mov
push
mov
mov
fs
cmp
aaa
and
add
push
loope
adc
add
xor
add
stc
sti
push
adc
lret
out
sti
decl
adc
je
mov
cld
dec
repnz
push
cmp
enter
add
mov
je
int3
jae
test
add
loopne
jmp
push
inc
fidivrs
or
or
jmp
add
fmull
add
pop
inc
add
adc
jae
repnz
out
rolb
add
push
pop
pop
sub
ret
int3
xchg
je
sbb
xlat
push
fists
add
negl
sub
notl
mov
adc
mov
pop
mov
ljmp
cwtl
push
mov
shrl
notl
add
add
add
add
mov
clc
mov
inc
mov
in
add
cwtl
add
dec
and
inc
xor
mov
decl
call
mov
xor
inc
scas
mov
add
pop
mov
push
push
and
mov
insb
ret
les
bound
inc
sub
add
int
push
mov
jae
icebp
call
mov
mov
jmp
push
mov
inc
cld
mov
add
stos
pushf
mov
test
jp
or
popa
lahf
mov
shll
fists
push
xor
pop
sar
xor
jnp
cli
jmp
sub
add
dec
xchg
std
pop
push
add
mov
pushf
cwtl
nop
loopne
lods
xchg
lcall
bound
xchg
call
sub
call
and
call
test
shl
fisttpll
add
pop
int
add
sub
mov
push
loope
js
mov
push
xor
lret
adc
add
add
add
fnstenv
add
mov
push
leave
cmpb
push
sbb
cmp
xchg
push
lea
lret
dec
push
add
shll
push
lds
cmp
xor
add
lock
clc
leave
jae
dec
aaa
mov
mov
mov
push
negl
pop
cld
add
cmp
inc
add
aas
cld
daa
xor
adc
inc
jg
inc
sar
mov
inc
incl
add
inc
negl
mov
inc
xchg
fsubrs
xor
add
mov
jns
je
rolb
jl
push
test
cld
std
mov
iret
stos
pop
enter
notl
add
add
add
add
dec
lret
shr
dec
mov
sub
mov
xor
mov
xchg
test
testl
test
adc
mov
xchg
and
loopne,pn
stos
mov
jo
das
fcomps
jb
jnp
mov
push
sub
lock
loop
rorb
stos
add
call
pop
jb,pt
add
mov
mov
sub
fdivl
testl
jmp
mov
movsl
mov
cmp
hlt
adc
adc
mov
pop
jle
aam
sub
scas
div
pop
loop
lods
addb
icebp
outsl
aas
fucomp
cwtl
dec
stos
hlt
xor
mov
mov
push
ss
xor
cs
adc
jg
sti
mov
test
scas
imul
pop
and
jne
mov
in
sub
and
xchg
or
out
out
mov
add
sbb
jne
adc
loope
in
lret
or
mov
pusha
jmp
call
xor
sbb
dec
lea
rorl
mov
add
add
add
add
sti
ljmp
cmp
ljmp
jb
inc
stc
sti
push
and
repz
movsb
and
pop
aaa
mov
mov
mov
mov
je
fistpl
daa
jb
add
ljmp
das
add
xor
rolb
mull
push
leave
push
out
jg
pop
add
notl
clc
cmpsl
or
incl
cmpsl
shrb
or
and
leave
or
push
lods
add
cs
cmp
aas
inc
lds
mov
pop
add
mov
xorb
out
aas
adc
xor
inc
ljmp
add
aaa
lret
xor
js
add
add
xor
sbb
sub
xor
sub
lret
xor
add
cld
mov
cld
cmc
xor
xchg
aas
jo
mov
nop
add
sbb
mov
mov
xor
dec
mov
das
ss
cmp
pushl
int3
inc
mul
sub
xchg
xchg
push
sub
lods
pop
add
pushf
sub
xor
add
mov
mov
jno
insl
cmp
loopne
ljmp
xor
fildl
pushw
insl
mov
or
mov
roll
add
cmc
mov
cld
sbb
inc
jmp
cmc
mov
sub
stos
inc
dec
imulb
loop
je
sub
jmp
add
mov
in
jecxz
push
push
xor
ffree
lock
mov
js
pop
inc
mov
shll
rorb
mov
mov
xor
add
or
aaa
lea
pop
xor
inc
rclb
cmp
pushl
dec
adc
push
mov
jmp
mov
or
inc
sub
cwtl
sar
add
cli
mov
sbb
psadbw
daa
xorb
cld
into
xor
and
cmp
push
xor
mov
leave
fdivrl
push
add
xor
add
ficompl
add
add
mov
pop
test
push
mov
test
sti
mov
inc
add
shl
add
mov
int
mov
add
leave
jbe
adc
add
int3
dec
mov
mov
sbb
cmpsl
mov
mov
or
fildll
ljmp
dec
add
dec
pop
repz
dec
out
fadds
aaa
lret
xchg
js
les
xor
fs
add
jbe
mov
bnd
add
add
add
test
lock
add
xor
mov
xor
inc
imull
repnz
sbb
sub
jno
adc
add
pop
call
xor
ret
cmp
call
testl
in
add
dec
test
test
add
add
add
add
add
mov
add
mov
and
jae
jmp
mov
push
js
jae
jae
hlt
daa
mov
add
hlt
das
push
out
pop
adc
sti
or
xor
lock
add
hlt
pop
in
jge
jmp
hlt
loopne
scas
mov
insb
jmp
cs
xor
add
or
jmp
add
je
push
and
andl
shrl
mov
pop
leave
int3
xor
push
aad
and
dec
xor
push
cwtl
jecxz
mov
push
add
pop
cwtl
pop
mov
xor
ljmp
pushf
cmp
inc
lret
andl
adc
xor
add
add
xor
es
jmp
cmovo
test
jne
mov
and
fisttps
or
and
inc
sub
add
cmp
sbb
jp
aaa
jo
test
mov
movsl
out
push
out
cmp
out
cmc
mov
add
lock
cmp
add
add
add
add
btr
ds
add
outsb
in
punpckhdq
add
cmp
call
and
adc
aaa
and
call
out
add
jl
add
decl
and
add
inc
mov
mov
xor
js
push
stc
cwtl
jmp
xor
add
mov
jbe
jp
ret
sbb
xchg
js
fsubrl
cld
add
jno
loop
inc
pop
loope
add
push
lods
dec
mov
cmp
lods
jnp
hlt
add
js
loopne
cmp
xor
js
xchg
push
push
add
cmp
sbb
mov
repz
xor
xorl
xchg
inc
imull
cmp
add
icebp
cwtl
xchg
divl
pop
jbe
jnp
lods
fcoms
cmp
imull
imul
add
pop
sbb
dec
pop
add
inc
push
xchg
fiadds
repz
mov
sub
mov
hlt
push
add
inc
jns
test
jne
xor
pop
mov
dec
je
push
sti
fimuls
stos
mov
pop
pusha
xchg
dec
xchg
mov
repz
outsl
lods
jecxz
mov
xchg
add
call
pushf
movsl
je
cmc
pop
clc
cmp
jecxz
push
push
push
adc
call
mov
stc
inc
or
mov
je
mov
decl
xor
ret
cltd
ljmp
aad
dec
push
lret
icebp
sti
push
fs
mov
mov
je
clc
inc
cld
xchg
add
add
add
add
xor
sub
jae
jecxz
dec
stos
fsubrl
add
int3
call
test
xor
mull
jge
and
jb
int3
adcl
in
dec
leave
mov
jge
je
stos
andb
push
mov
ss
ljmp
mov
popa
popf
or
add
mov
mov
pop
dec
mov
mov
sbb
and
repz
jl
push
mov
add
push
dec
mov
sbb
sub
xor
add
loope
push
jp
in
std
das
jmp
add
lods
out
divl
add
dec
movsb
sbb
mull
sti
mov
lock
add
add
add
mov
inc
test
das
mov
fdiv
xor
jbe
mov
mov
jbe
aas
loopew
add
rorb
test
divl
insb
jle
jbe
test
mov
lds
jl
jmp
gs
int
push
hlt
aas
add
mov
movsb
pop
mov
cld
imull
push
pop
inc
or
sub
call
jne
lods
inc
cmp
aad
loope
inc
mov
insb
icebp
mov
out
ljmp
dec
hlt
xor
fimull
pushf
shlb
add
xor
xor
aaa
movsb
movsl
jae
repz
call
pop
in
mov
add
repz
mov
mov
std
push
push
mov
pop
adcb
fcomps
jae
push
mov
std
jno
dec
call
xchg
cmp
lock
mov
int3
mov
ss
mov
mov
inc
nop
mov
add
and
mov
inc
add
add
into
lret
adc
decl
add
sub
push
adc
dec
insb
xor
mov
movb
rol
push
insb
pop
push
push
dec
loopne
bound
add
pop
mov
jns
jp
das
add
lret
jl
test
scas
lea
or
or
or
mov
stc
mov
xchg
mov
mov
push
cwtl
push
push
sar
cld
cmpsl
mov
lcall
add
jae
aas
cld
popf
mov
add
lea
js
movsl
subl
pushf
inc
ss
inc
mov
mov
fdiv
xor
sbbb
push
sub
adc
ja
sbb
xor
movsb
cmp
add
add
sub
add
imul
push
lahf
cli
push
movsl
andl
add
xor
or
flds
movsl
inc
lods
sub
loope
rcrl
add
xchg
add
xor
loope
xor
add
leave
sub
lret
sbb
jb
lods
pop
add
rcrb
jmp
aaa
xor
loop,pt
fcmovnb
lds
jmp
add
add
add
jecxz
xchg
jb
int
jb
pop
stc
mov
adc
jmp
mov
lods
jae
pop
jb
insb
sbb
push
pop
mov
pop
repz
jb
mov
hlt
xor
call
mov
push
fidivrl
in
pushf
rolb
das
pop
mov
pop
add
iret
xchg
ds
sub
jb
add
stos
cld
add
cmp
std
jmp
test
and
xor
test
cltd
sti
jns
call
jmp
adc
cmp
jne
roll
sub
mov
inc
add
mov
add
inc
or
divl
call
rcrl
add
add
add
add
inc
xor
or
jge
or
push
ficomps
mov
inc
pop
ds
push
add
dec
or
neg
fildll
sbb
inc
dec
cmp
mov
xchg
call
pop
mov
int3
mov
mov
inc
int
test
lds
pop
stc
cwtl
fiadds
inc
dec
test
add
negb
xorb
adc
inc
std
ficompl
lods
mov
jp
xchg
mov
addl
sub
sbb
mov
jmp
lret
or
pop
lea
lods
mov
xor
ljmp
jo
lcall
test
push
mul
fimull
add
add
add
imul
mov
insl
or
mov
mov
subb
jae
sar
xorl
ljmp
cs
outsl
mov
in
fs
push
mov
fdivr
inc
mov
call
arpl
jne
call
sub
jmp
push
outsl
dec
rcl
call
add
add
add
pop
pop
and
in
hlt
add
in
hlt
xor
jmp
addb
jnp
xor
fs
push
cld
outsb
push
push
or
hlt
xor
and
xor
bound
std
out
ror
fldt
push
xor
dec
mov
adc
xchg
test
cld
ret
add
aad
decl
mov
std
push
addl
sti
and
out
fidivl
mov
mov
push
xor
into
mov
add
sbb
pop
gs
leave
dec
enter
jbe
add
mov
push
push
mov
call
lock
adc
notl
aam
sahf
dec
jl
mov
pop
fildl
pop
and
add
cmc
lret
test
lahf
inc
xor
scas
negl
cmp
imul
cvtdq2ps
clc
jp
pusha
push
test
sub
cmp
add
in
mov
add
fnstenv
push
push
iret
imul
jecxz
xchg
popf
dec
iret
subl
pop
int
repz
and
and
mov
add
add
add
rcl
sub
mov
jmp
xor
ficompl
sahf
push
jnp
out
idivl
mov
ret
add
jb
out
pop
aas
sahf
sbb
push
incl
cltd
mov
imul
jnp
bound
xor
add
xor
inc
pop
js
shrb
xchg
add
xor
ret
mov
addb
jl
and
xchg
and
imul
xor
jge
hlt
in
scas
dec
popa
test
ficompl
push
adc
ja
xor
insl
cmp
test
xor
shrl
es
cmp
xor
mov
and
fimuls
mov
xor
out
add
ljmp
or
or
lahf
mov
hlt
mov
mov
ror
add
jno
lret
pushf
pop
push
int
push
pop
xor
in
push
sbb
std
mov
mov
mov
sbb
jmp
sub
dec
adc
test
jmp
incb
fxch
dec
shll
stc
xchg
ret
sub
shr
inc
cmp
lahf
enter
sub
pop
mov
xchg
lret
jae
imul
push
add
jmp
xor
add
inc
movsl
cmp
inc
push
push
divl
xchg
ret
negl
jl
pop
or
js
xchg
out
jbe
add
pop
pushf
cltd
pusha
imul
pop
dec
or
jl
add
lods
xlat
adc
punpckhwd
je
mov
test
mul
outsl
mov
push
cwtl
decb
lret
insb
in
xchg
mov
xchg
lock
xor
pop
out
jp
or
adc
cld
enter
adc
push
add
pop
pop
cltd
mov
push
add
add
add
lahf
xor
mov
push
jmp
stos
push
pop
insl
lcall
sub
jo
popa
cmpsl
ja
mov
xor
pop
pop
cwtl
push
addr16
mov
mov
and
call
scas
loop
cmp
sub
dec
xor
ffree
lea
add
pop
in
aad
xor
add
add
add
add
movsb
sub
xor
add
inc
inc
jmp
push
sbb
jmp
ret
fwait
call
fidivl
in
mov
mov
mov
mov
repnz
mov
aam
mov
dec
fwait
mov
dec
jle
rclb
inc
inc
or
adc
pop
mov
dec
jb
scas
pop
add
pusha
lock
mov
add
add
push
xor
mov
add
and
pushf
fimull
faddl
add
ret
sub
aam
and
out
or
add
sbb
add
out
pop
push
jmp
jno
cmp
add
ds
dec
jno
add
add
add
add
in
push
lea
out
dec
xor
mov
out
jne
mov
inc
in
add
xor
add
inc
pop
xor
lcall
lcall
cmpsl
negl
inc
xchg
dec
xchg
je
fistpll
inc
iret
cmp
jb
adc
orb
inc
divl
add
adc
xchg
add
fcmovu
mov
xchg
int3
push
mov
aam
add
jl
xchg
mov
mov
cli
mull
add
test
into
adc
outsb
xchg
or
mov
mov
push
inc
divl
or
mov
daa
push
xchg
sub
lods
and
jmp
cwtl
shll
lods
add
add
add
add
add
rolb
lods
lds
cmpsl
pop
enter
jg
lcall
stc
mov
bound
pop
fildl
add
xor
add
adc
mov
push
cmp
sub
cmp
mov
adc
add
lea
scas
jbe
or
arpl
cld
out
add
out
pop
rolb
in
jmp
push
xor
pop
pusha
mov
arpl
scas
jmp
out
mov
push
jp
fs
jmp
call
jmp
add
bound
pop
decb
std
pop
push
push
lds
mov
add
add
add
add
add
hlt
lods
mov
mov
jno
aam
test
adc
push
cs
push
push
mov
xchg
and
into
sub
jae
mulb
in
jne
mov
xor
into
jg
pop
cmp
leave
ret
cmpb
jne
imul
dec
cs
jecxz
ljmp
and
push
add
decl
mov
test
and
add
mov
cmp
ljmp
fistps
notl
int3
divb
insb
xor
repnz
adc
fmull
lea
jnp
aas
test
pop
or
cmp
cld
cmpsb
ljmp
pushf
mov
dec
add
dec
mov
jg
add
out
testl
push
clc
aad
add
dec
xchg
call
dec
cmp
loop
lcall
aad
je
pop
ret
dec
add
ja
adc
mov
add
xor
dec
cld
xor
mov
arpl
xchg
adc
imul
add
jle
add
shl
pop
fldl
add
add
pop
lds
imull
push
loope
pop
addr16
test
call
dec
lahf
xor
add
dec
push
xlat
mov
lds
leave
fidivs
adc
push
out
add
das
lahf
subl
add
inc
xchg
mov
jae
jmp
add
test
test
pop
push
jl
sub
add
add
add
hlt
stos
out
insb
outsb
in
insb
outsl
push
cld
mulb
out
pop
pop
rcrb
pop
fisubs
mov
je
push
cmc
mov
sbb
xor
cli
xor
adc
ret
pop
pop
js
cld
xchg
out
push
pop
arpl
sub
jno
pop
jae
sub
cmpsb
je
jo
mov
inc
test
incb
rorb
mov
movsl
add
filds
pop
cmp
dec
mov
mov
and
add
repz
xor
adc
dec
adc
xor
mov
les
cmpsl
into
xor
ret
push
mov
idiv
push
test
lcall
rorb
add
add
add
mov
sti
mov
or
mov
add
ret
or
mov
loop
ljmp
add
aaa
jbe
leave
xor
xor
push
test
shll
fwait
push
mov
insb
jbe
inc
jmp
lret
sbb
cmc
jb
sbb
push
add
cmp
outsb
dec
jns
add
push
xor
bound
add
mov
push
xor
dec
lcall
outsl
mov
or
dec
xlat
mov
xor
mov
mul
adc
sbb
sti
ret
inc
add
out
xor
mov
mov
and
inc
or
fld
shrb
sub
mov
popl
pop
sub
mov
jmp
call
aaa
sub
ret
sbb
incl
call
aas
shlb
out
mov
bound
in
jl
hlt
mov
sub
pusha
sub
mov
imull
mov
addr16
repnz
inc
inc
jo
sub
sbb
arpl
fadds
inc
jo
sub
sub
xor
sub
call
adc
fdivrl
addb
in
fs
je
das
push
roll
add
sub
adc
adc
push
adc
xor
andl
mov
lea
call
test
push
inc
add
push
mov
dec
add
sbb
and
pop
lods
adc
push
out
incl
adc
inc
add
pop
les
incl
flds
test
add
incl
std
lcall
outsl
add
and
ljmp
je
popa
add
out
lods
std
mov
jae
adc
jae
mov
frstor
call
test
add
sbbb
stc
cmp
ljmp
add
mov
jg
repz
mulb
sub
inc
jg
notl
cmp
or
lcall
mov
mov
enter
dec
add
dec
pop
sti
subl
add
add
add
add
sub
mov
lcall
test
adc
xor
jmp
ret
lahf
pop
call
test
pop
test
out
cmp
popa
ret
out
pop
pop
imul
movsl
xchg
mov
cwtl
or
add
adc
dec
push
fisubs
pop
fld
mov
test
add
clc
sahf
push
je
lock
rolb
lods
adc
loope
cmp
stos
mov
mov
xor
add
dec
add
mov
pop
cmp
cmp
movsb
jmp
jge
mov
test
icebp
insl
faddl
insb
mov
push
push
and
ljmp
xor
das
divl
add
movsb
inc
pop
cmp
mov
add
add
add
dec
clc
adc
je
jo
mov
add
jbe
es
movsb
mov
jg
incb
push
nop
call
fcmove
mov
and
movb
out
jmp
hlt
xor
imul
mov
xchg
rcr
push
stos
rorl
sbb
add
push
outsl
add
lret
shr
addl
add
add
bound
add
jnp
pop
sbb
or
add
cmpsl
or
add
and
call
and
add
xor
add
inc
pop
xor
mov
lea
notb
mov
mov
testl
das
lret
outsb
xchg
add
add
mov
fisttpl
ret
inc
add
dec
add
ja
in
dec
in
add
lahf
mov
stos
dec
jno
lcall
inc
add
push
push
push
divb
lea
out
popf
daa
testl
mov
sub
testl
add
xor
xor
lret
call
mov
add
fcmovnb
iret
test
fdivs
testb
push
inc
imull
pop
inc
out
add
push
mov
mov
add
cwtl
mov
add
cmpsl
mov
popf
fdivp
js
dec
addl
xor
pushf
daa
push
insl
xchg
pusha
jge
sub
jmp
mov
add
and
add
test
cli
add
cmc
xor
icebp
call
pop
fdivl
jmp
xchg
add
daa
push
xor
jns
sub
adc
dec
lcall
push
mov
pop
xchg
jmp
shrl
xchg
pop
push
inc
mov
mov
jne
enter
xor
xchg
jno
mov
in
jmp
cli
xor
imul
mov
add
add
add
mov
pop
jbe
pop
xor
xor
xor
das
add
cs
jne
pop
jmp
jl
test
sti
xor
fs
test
mov
add
xchg
push
jmp
out
in
add
and
mov
add
sahf
scas
cmp
lock
loope
xor
mov
incl
sahf
call
sbb
mov
lcall
les
shr
dec
sar
jne
flds
mov
add
cs
sbb
inc
push
testl
aaa
mov
add
inc
add
lock
mov
push
cmp
popf
fmul
es
jl
ja
add
mov
cmp
inc
add
std
add
cmp
enter
push
orb
imul
pop
add
call
pop
add
imul
dec
push
cmpsb
sti
push
lret
sub
cmp
pushf
mov
or
mov
cmpsl
je
int
jecxz
add
or
rolb
add
js
pop
pop
push
decl
sti
jnp
cmp
dec
loope
add
xor
add
icebp
and
or
mov
xchg
dec
mov
movsb
cwtl
push
jl
xchg
iret
add
pop
and
xor
mov
xorl
sbbl
jmp
jmp
xor
add
insb
ja
imul
jl
cwtl
xor
jne
push
callw
andb
cld
adc
cwtl
mov
sub
lahf
jmp
ljmp
pop
mov
adc
xor
push
cmp
cmp
out
roll
test
hlt
xor
int3
out
adc
pop
mov
hlt
xor
add
add
add
repz
cld
std
add
nop
dec
xor
jmp
cmp
add
push
jbe
jmp
jne
out
mov
call
test
les
shl
jmp
mov
inc
mov
popf
xor
into
xor
inc
fidivrs
les
mov
cld
ret
mov
popf
add
sahf
xor
mov
std
call
add
mov
add
fildll
jbe
hlt
xor
jmp
cmp
xchg
maxps
pop
not
inc
imul
push
add
lock
adcl
cmc
xor
or
aad
sti
clc
mov
xchg
jp
add
push
adc
mov
les
dec
iret
sbb
ljmp
sar
cwtl
or
lea
push
daa
and
xor
push
negl
mov
dec
or
arpl
add
aam
jecxz
fidivrs
pop
xor
mov
in
dec
fstpt
dec
add
and
adc
add
xor
mov
sub
jle
dec
adc
xor
mov
lea
add
imul
sub
push
xor
add
mov
sbb
sub
imul
insb
inc
stos
call
ficomps
in
jo
push
nop
test
add
scas
sti
or
push
add
mov
fidivs
add
hlt
mov
out
jo
add
hlt
xlat
adc
je
mov
jmp
out
mov
mov
mov
jmp
mov
call
out
xor
jmp
pop
loop
jmp
pop
loope
inc
insb
jne
shr
dec
jg
je
xchg
and
sar
je
dec
callw
add
add
add
add
xor
sub
mov
sahf
int
sti
std
add
das
jmp
rclb
call
lea
xor
push
das
call
mov
adc
add
add
lahf
lret
push
das
jbe
fs
jmp
dec
cmp
setne
pop
add
out
push
aas
cmpsl
add
add
mov
cmp
inc
xor
sub
add
sahf
mov
push
mov
mov
mov
pop
je
mov
pop
add
sbb
jl
insb
je
adc
insb
sbb
insb
sbb
es
test
sar
xor
test
fisubs
add
mov
and
imul
and
test
pop
jp
add
inc
je
call
int3
std
cmpl
mov
lret
mov
xor
out
fiadds
add
sub
xor
call
or
jl
hlt
les
fsubr
mov
divl
imul
inc
je
mov
sbb
dec
loopne
inc
adc
insb
add
mov
fdivrl
outsb
in
add
pop
jmp
mul
mov
add
call
push
lcall
test
adcl
testb
maskmovq
idivl
jnp
xor
aaa
add
jae
ds
sub
cmp
pop
sbb
sti
xor
fs
inc
fiaddl
mov
mov
aas
xor
clc
je
jle
or
push
jns
call
ss
sarl
out
pushf
mov
iret
bound
cmp
inc
sbb
in
sti
fs
pop
mov
hlt
pop
mov
sahf
pop
cli
decb
pop
cmpsb
repz
outsl
lods
push
jecxz
inc
dec
jb
cmp
sub
mov
add
add
add
add
mov
mov
enter
cli
jle
xchg
xor
mov
ud0
sbb
dec
xor
push
adc
add
push
cli
add
int3
add
dec
mov
std
push
arpl
adc
xchg
jo
or
push
push
and
mov
mov
jno
out
push
add
mov
cld
mov
xor
jbe
loop
aam
fidivs
push
je
push
ljmp
lods
ret
jbe
in
neg
pop
divl
iret
add
push
rorl
iret
and
mov
insb
add
mov
imul
jp
and
jae
call
jae
out
and
push
adc
pop
jns
fstpt
ja
shll
insb
and
mov
mov
add
push
movl
inc
mov
push
test
push
mov
inc
jle
lock
movsl
fcoms
add
mov
push
and
fldl
mov
jo
divl
fs
loopne
sbb
cwtl
inc
jno
cwtl
sbb
imull
mov
clc
adc
xor
int3
adc
pop
jecxz
mov
fldpi
fidivs
jle
add
add
push
stos
add
fimull
jnp
or
jb
add
xor
or
hlt
xor
add
jmp
in
dec
mov
ss
mov
mov
sub
int
scas
mov
jl
inc
jae
fdivl
mov
sbb
add
hlt
mov
add
sti
xor
inc
verw
add
mov
inc
mov
add
pop
push
cmp
sub
push
xchg
lea
dec
stos
call
inc
adc
fsubrl
cmp
fdivr
pop
and
hlt
xor
mov
add
add
insl
mov
dec
jmp
sub
push
outsb
xor
pop
add
out
push
add
ljmp
popa
mov
mov
pop
decb
mov
add
xor
enter
add
ficoml
push
adc
sub
es
inc
pop
adcl
loop
jo
jae
movsl
jo
call
xchg
out
jb
negl
setne
mov
hlt
mov
add
mov
cmp
mov
inc
imul
imull
fmul
inc
jae
sub
or
call
jae
out
pop
lahf
pop
jbe
test
adc
cwtl
cmp
das
inc
sub
fsub
pop
add
negl
jg
repz
jg
negb
adc
add
ret
inc
inc
jp
lods
stos
add
sbb
test
add
add
add
add
loopne
cld
and
mov
sub
add
push
test
cmp
lock
mov
outsb
in
inc
fisubl
cmpl
je
mov
in
je
jmp
lods
adc
xor
hlt
stos
int
stc
fld
push
mov
jecxz
add
cmp
lock
negl
or
add
cmc
mov
or
ja
add
int
mov
fisubrs
das
jb
in
xor
and
cmp
mov
add
repz
lock
mull
fcoms
jo
inc
adc
ljmp
ljmp
shl
in
std
loope
lahf
push
adc
out
stc
add
jae
lret
mov
xor
insb
mov
jmp
ja
pop
bound
mov
xchg
mov
push
shrl
adc
loope
pushl
sub
test
sub
out
shlb
add
dec
mov
sub
adc
shlb
inc
add
jno
push
push
pop
cli
jne
mov
cld
into
pop
jne,pn
xor
add
xor
shl
mov
push
je
pop
xor
xor
ret
clc
add
fdivl
mov
test
sub
mov
pop
push
or
addl
mov
out
das
xor
mov
cmc
add
outsl
fs
mov
pop
sbb
jle
testl
add
add
jle
adc
fs
adc
inc
leave
pop
popa
push
dec
inc
sbb
lea
jge
and
mulb
jecxz
inc
jae
mov
pop
adc
dec
das
add
inc
add
sbb
and
ljmp
pop
and
iret
pop
push
mov
add
cmp
adc
and
mov
push
push
inc
dec
adc
dec
sahf
jo
cmp
adc
xor
inc
and
call
add
jp
test
out
test
clc
adc
xchg
jo
stos
lods
daa
daa
leave
push
repnz
mov
pop
xor
push
fbld
test
sub
xchg
mov
fnstsw
sub
inc
inc
add
sub
out
xchg
int3
daa
jl
andb
in
push
jmp
add
lcall
shll
jmp
loope
push
test
fwait
xor
repnz
cmp
cmc
call
call
insl
aas
jmp
hlt
dec
xchg
cld
add
xor
inc
cmp
fimuls
out
test
aam
jmp
adc
inc
xorb
sub
cld
insb
and
inc
fidivrl
and
je
and
incb
inc
cmp
incl
std
adc
addr16
push
jle
pop
inc
adc
jno
mov
add
fdivl
add
rclb
bound
and
sbb
or
jecxz
adc
mov
push
lret
lods
vpcmpeqw
mov
call
adc
adc
stc
mov
call
adc
pop
push
inc
xor
call
aad
jmp
pop
mov
rorb
dec
xlat
mov
push
lret
je
mov
add
mov
and
neg
testl
mov
cmpl
adc
inc
xor
jne
or
test
and
dec
push
and
imul
jmp
push
les
scas
add
sub
cwtl
in
mov
js
jp
in
and
int
aas
jp
negl
add
add
xor
add
adc
test
sbb
jl
idiv
dec
sti
insb
cmp
jno
sbb
ficoml
iret
ss
insl
dec
mov
stos
loope
div
movsl
push
jns
cmp
mov
lock
sub
call
xorl
call
inc
enter
jbe
call
sub
pop
jl
jmp
and
cli
cmp
jnp
push
shll
cmp
xchg
in
call
mov
mov
shr
cmpsb
add
in
cmpsb
movb
fistpl
mov
add
inc
cmp
and
adc
mov
add
hlt
scas
jmp
and
dec
call
hlt
lods
mov
jae
add
xlat
push
sbb
subl
popa
mov
fisubrs
add
clc
mov
mov
fimuls
add
adc
push
push
pop
repnz
in
cs
mov
pop
pop
call
mov
pop
popf
out
cs
mov
push
xchg
push
andl
add
add
add
add
and
rorb
out
repz
xor
push
xchg
in
add
dec
vpcmpeqw
lret
lcall
dec
xchg
inc
and
fcom
sbbb
inc
add
sti
dec
test
inc
add
cmp
sbb
push
ljmp
adc
cmp
jmp
clts
test
aaa
xor
add
jb
out
or
out
and
jns
inc
repnz
add
inc
add
mov
cmp
sbb
push
jae
inc
imul
sbb
test
jae
and
mov
sub
xor
push
divl
aas
inc
hlt
xor
shrb
xor
lock
add
add
add
add
stos
fisttpl
popa
ss
pop
mov
jno
dec
call
clc
std
mov
lcall
sbb
jno
adc
mov
sbb
add
and
testb
leave
dec
fisubrl
add
mov
pop
repz
jge
mov
cli
ret
mov
sub
out
add
and
testb
out
out
jb
movsl
dec
cmc
dec
jle
hlt
xor
dec
ss
pop
xor
sbb
sbb
hlt
addb
cli
add
ds
fdivrp
hlt
insb
pop
inc
jmp
loop
xor
in
and
decb
pop
sub
dec
clc
mov
iret
mov
add
loop
mov
out
mov
mov
andl
into
addb
xor
data16
ljmp
mov
add
pop
push
call
mov
rcll
fimull
mov
movb
push
cmp
push
test
inc
add
pushl
mov
test
inc
sbb
xchg
out
pop
push
sub
add
add
add
mov
or
jae
neg
add
cmc
push
inc
pop
dec
pop
rorl
je
incw
jns
mov
clc
adc
int
sub
icebp
add
ljmpw
jns
pop
bound
outsb
or
ljmp
add
add
mov
cmpl
jns
in
mov
sub
ss
aas
fmull
sbb
mov
mov
mov
jns
fists
push
xor
jns
jmp
testb
lret
xor
jmp
xor
pop
lcall
xor
mov
add
add
add
add
cmpsl
in
jnp
in
imul
add
fadds
jecxz
jno
pop
cmpsb
scas
jns
movsl
in
jne
call
int
sbb
adc
fidivrs
inc
mov
mov
and
sub
pushl
stos
mov
sbb
movsb
cwtl
fs
pushl
je
pop
popf
int3
mov
lock
add
add
add
add
sahf
mov
idiv
jg
lods
mov
lahf
cmp
sbb
hlt
push
sbb
movsl
inc
loope
in
sti
adc
sub
imul
out
in
sti
push
cmp
enter
mov
cmpsb
std
xchg
aaa
pop
add
ja
incb
ja
or
cmp
sbb
cmpsb
icebp
push
xor
lods
nop
test
push
iret
outsb
push
push
mov
jmp
aaa
push
je
dec
fwait
or
clc
or
fwait
cwtl
cmp
pop
lea
ret
popf
add
sbb
xor
je
push
cltd
pop
jne
stos
jl
movsl
dec
mov
push
mov
or
cmp
inc
cmc
mov
aad
sub
xor
daa
xor
sar
jmp
cmc
inc
addb
add
add
add
add
jno
test
add
cmp
sbb
cmp
or
std
dec
xchg
mov
mov
orl
pop
negl
xchg
dec
adc
rcrb
aas
neg
outsb
add
int3
pop
mov
lea
xrelease
inc
mov
loopne
insb
fisubrs
bound
add
add
add
push
pop
mov
repnz
sbb
sbb
pop
fidivrl
or
inc
dec
icebp
je
add
mov
xor
inc
icebp
mov
add
xor
lcall
push
out
mov
mov
mov
sub
jecxz
jmp
xor
lcall
add
add
add
add
xlat
repz
and
dec
bound
lods
jecxz
ret
cmp
or
pop
mov
or
xor
repz
out
xor
repnz
adc
xchg
xor
addr16
loop
mov
or
mov
mov
mov
je
jae
add
mov
movsb
add
loopne
add
pop
pop
inc
jb
clc
insb
add
mov
iret
xor
adc
xchg
fdivs
rolb
sbb
shrl
sub
aas
stc
out
pop
mov
mov
add
cs
sarl
hlt
push
das
xchg
mov
scas
jnp
clc
xchg
icebp
mov
call
push
cs
add
jmp
ret
add
add
add
add
jp
push
push
dec
insb
push
xor
out
cmc
cmp
xor
add
cmc
mov
mov
std
mov
and
push
je
jo
cmc
or
xor
jbe
sbb
test
jecxz
xchg
jbe
lcall
adc
jmp
cmp
adc
add
add
add
add
xor
test
pop
stc
mov
inc
ja
pop
incl
mov
jl
mov
adc
xor
push
clc
fsubrs
jge
cltd
mul
or
repnz
repz
xor
cmp
imull
cmp
push
jb
jl
mov
add
add
add
sbb
aas
pop
testl
cmc
ljmp
inc
ljmp
dec
push
insl
sub
fstpl
push
dec
xor
mov
jge
arpl
clc
mov
mov
movsl
jmp
adc
jg
sub
mov
movsb
out
adc
sub
adc
xor
ret
enter
dec
popa
push
add
sub
popf
out
dec
xor
push
jge
int
arpl
subb
mov
push
push
outsb
pop
jo
pop
inc
mov
or
and
in
sub
lcall
mov
gs
mov
sbb
sbb
shrb
out
jb
or
hlt
out
outsl
inc
test
add
sub
clc
adcl
mov
loop
xchg
sub
xor
daa
test
dec
mov
loope
sbb
test
andl
hlt
xor
test
hlt
xor
test
dec
sub
cmovo
sti
decl
pop
cmpl
les
sldt
add
add
add
add
ds
or
sub
call
scas
movb
les
bswap
inc
aaa
sub
jecxz
rcll
add
or
decl
push
adc
dec
mov
or
fdivr
and
or
and
into
scas
iret
jle
xor
push
sub
xor
ret
ljmp
lea
js
lds
std
mov
inc
cmp
cltd
insb
inc
pop
test
pop
inc
insl
adc
mov
sbb
shlb
mov
adc
push
and
test
sub
add
inc
push
jl
mov
xor
lea
cmp
mov
and
incl
cwtl
pushf
mov
sti
and
pop
adc
or
inc
xor
pop
lret
pop
jmp
ss
add
fld
push
clc
stos
push
mov
mov
test
or
pop
add
mov
jmp
insb
ret
pop
cmpsl
sbbl
add
sub
xchg
fisttpll
es
aas
push
jno
mov
add
add
add
mov
mov
lret
pop
mov
ret
pop
lahf
test
add
icebp
mov
mov
jb
jp
add
inc
daa
je
imul
neg
into
mov
push
pop
lods
fnstcw
stos
std
xor
and
add
adc
xor
mov
es
bound
pop
das
lods
repnz
jb
addb
add
add
add
ss
outsb
sub
mov
daa
mov
sbb
jecxz
popf
cld
push
cmpsb
inc
add
pop
mov
xor
mov
sbb
shrb
mov
popf
adc
dec
jno
jne
scas
dec
cld
divb
decl
or
inc
mov
inc
bound
add
push
mov
cld
mov
ret
pop
add
aas
call
push
push
and
add
loope
cmc
cmpl
or
cmc
and
mov
xchg
adc
sub
clc
arpl
and
push
jno
jmp
mov
incl
add
pop
dec
mov
sbb
add
add
pop
mov
sub
xchg
pop
and
or
addb
add
add
add
add
int
fsts
faddl
popa
fimuls
rcrl
add
xchg
inc
add
addl
jb
iret
lret
in
fimuls
fistl
push
or
or
cmp
pop
push
mov
ds
jae
test
or
pop
jne
cltd
sbb
inc
sbb
add
add
add
xor
mov
out
insl
adc
push
xchg
scas
idiv
jnp
mov
push
popf
mov
add
add
and
push
pop
xor
push
mov
jo
sbb
sub
enter
fs
sahf
push
and
aad
lahf
movsl
mov
pop
sub
jg
sti
mov
xor
add
pop
sbb
popa
mov
packssdw
push
jnp
add
hlt
xor
and
jne
jb
cs
in
pushw
xchg
test
fyl2x
stos
lret
jmp
jl
rorb
cmp
loopne
add
hlt
gs
inc
or
out
outsl
je
popa
mov
imull
mov
je
add
mov
ljmp
addb
inc
jmp
push
loopne
mov
aad
popa
add
xor
ljmp
mov
call
jl
fimull
das
je
push
mov
jne
lods
testl
push
mov
call
mov
inc
pop
cmp
dec
sub
push
xor
cmc
jmp
lods
testl
popa
jl
sti
and
push
cmpl
push
sub
inc
jno
decb
ucomiss
lcall
test
leave
push
inc
lret
xchg
mov
push
push
mov
out
add
fdivrl
push
add
and
add
jecxz
jb
loope
add
decl
inc
pop
icebp
cwtl
std
push
out
ficomps
mov
add
testl
xlat
jle
in
ljmp
jnp
xor
jg
daa
mov
dec
lock
mov
jge
cmp
jmp
pop
cmpsl
push
add
mov
push
mov
pop
das
mov
imul
pop
push
inc
out
mov
bound
test
push
pushf
arpl
jle
sub
push
jmp
iret
sbb
out
pusha
mov
int3
add
pop
add
fsubrs
or
xor
mov
int3
jle
sbb
filds
xor
add
adc
mov
and
fxtract
xor
mov
fdivl
sbb
xor
sub
xchg
cmp
addb
push
xchg
add
push
jo
push
cld
pop
inc
inc
jmp
cmp
test
xor
subl
adc
imul
call
or
rolb
add
xor
sbb
insb
fdivrs
in
subl
xor
fucom
gs
add
std
shll
inc
ficomps
sti
leave
mov
add
xor
ret
jge
inc
into
lcall
inc
xor
jge
mov
push
push
stc
std
jle
xor
add
inc
mov
jno
add
test
std
test
jno
incl
adc
mov
jne
lcall
fidivs
or
jg
push
fmuls
aad
scas
out
outsb
dec
push
getsec
or
fcmovnu
inc
jae
lahf
push
loopne
lret
sar
dec
mov
inc
aad
dec
sub
aaa
mov
push
add
cmp
ljmp
jae
lock
repz
jl
inc
out
mov
ljmp
mov
push
inc
dec
cmpsb
ljmp
mov
dec
je
xchg
iret
shrl
gs
out
xor
mull
jg
cmp
sbb
dec
orl
mov
daa
add
movsl
outsl
dec
add
std
test
lods
inc
cmpsl
add
jle
fsub
mov
clc
xor
fld
sbb
fwait
push
jno
or
push
xor
movsl
cmp
fdivr
ret
andb
cmp
xor
adc
iret
pop
nop
mov
sub
cmpsl
idivl
icebp
mov
push
shrl
add
das
subl
add
add
add
test
mov
outsb
add
mov
faddl
sbb
out
lret
hlt
adcb
fdivr
pop
inc
fwait
mov
dec
mov
outsl
add
lock
loopne
mov
and
add
outsl
add
add
push
xor
in
sarb
pop
add
sub
jmp
aam
inc
jmp
hlt
xor
je
outsb
jmp
xor
shlb
add
push
xor
cltd
cmc
subl
cmp
mov
mov
jb
shll
clc
mov
cwtd
or
sbb
loopne
out
std
xor
push
xor
cwtl
mov
add
lock
pop
mov
sub
add
add
add
add
jae
add
xchg
mov
fsubl
lock
mov
outsb
in
std
pop
mov
sti
mov
inc
ss
ss
fidivs
fiaddl
clc
push
cmp
in
inc
push
jl
mov
lahf
addr16
inc
imull
add
cmp
out
aas
testl
jmp
xchg
testl
add
add
iret
mov
mov
add
adc
cld
sar
mov
fdivrs
xchg
out
frstpm(287
leave
add
mov
add
pusha
icebp
mov
mov
inc
xor
das
out
sub
popf
icebp
pop
fs
dec
je
cmp
cmp
fwait
inc
mov
ret
loopnew
movsl
add
out
sub
jle
aaa
dec
shrl
xor
adc
dec
jmp
ja
inc
sbb
aaa
adc
adc
mov
incl
test
sbb
stos
sub
xor
test
lds
ror
aam
xchg
and
sub
mov
add
hlt
or
xor
dec
insl
cmp
inc
jb
lea
cmc
add
jge
int
or
rorl
mov
sysenter
xchg
lods
push
test
repz
std
in
inc
lea
lock
into
out
inc
dec
jo
inc
jmp
test
add
xor
push
mov
add
adc
push
xchg
xor
dec
jp
incb
imul
je
jae
in
add
add
in
std
ljmp
add
in
test
in
std
xorb
std
jae
xchg
ret
push
and
dec
imul
gs
mov
iret
xor
and
xchg
dec
or
push
pop
push
xor
mov
pushf
sahf
xor
notb
push
je
popf
xchg
fidivl
jg
or
add
call
divl
push
lock
int
vpsubd
dec
dec
pop
xchg
mov
add
adc
add
push
jge
jl
clc
mov
aas
adc
jbe
cltd
jae
pop
stc
xchg
aaa
inc
add
je
testl
xor
add
pop
std
das
add
add
je
pop
cmc
std
clc
test
filds
and
push
inc
out
adc
adc
xor
add
pop
arpl
sub
push
push
sbb
inc
pop
je
mov
out
lods
aad
jmp
sub
imul
lcall
pop
mulb
push
or
cld
pop
mov
mov
in
outsl
and
push
cld
jne
or
std
scas
or
sub
mov
ljmp
insl
and
mov
cmpsl
add
sbb
lcall
jb
jne
in
jge
add
hlt
xor
cltd
cmpsb
clc
push
inc
or
jmp
add
xor
jmp
fstpl
add
lods
cmp
shrb
jmp
sub
mov
cmpsl
aad
ja
jle
or
hlt
xor
jmp
mov
mov
mov
enter
add
or
call
pop
out
cmpsb
sub
add
add
add
add
push
add
pop
out
std
xlat
roll
pop
aas
testb
loop
data16
jmp
call
rorb
mov
clc
add
dec
int3
pop
pop
push
outsl
add
push
fisubrs
fucomi
xor
push
add
or
in
std
mov
adc
sbb
fisubrs
push
incl
notl
ret
add
adc
inc
or
clc
mov
shrb
insb
inc
pop
pop
std
pop
add
pop
cli
sar
shl
jl
in
gs
lock
add
aaa
outsl
test
xor
fmull
scas
test
aam
xlat
sub
pop
add
add
xlat
pushl
jmp
loopne
jmp
ret
sbb
cmpsb
pop
sub
sub
push
jecxz
and
ret
test
in
lods
cwtl
push
icebp
add
mov
out
jge
lret
sti
insl
aaa
mov
stos
adc
jne
pop
pop
repnz
idivl
imull
cmp
icebp
pop
or
push
add
popa
out
xchg
adc
jb
cmp
test
mov
divl
jb
lea
jb
stc
and
divl
gs
inc
push
add
clc
inc
rolb
lcall
hlt
lcall
insb
je
push
add
cmp
dec
add
hlt
sbb
sub
movsl
inc
push
jnp
std
jmp
add
aas
mov
mov
push
sbb
cmc
inc
jmp
lods
jb
pop
mov
fcomp
xor
ss
fdiv
inc
jmp
lcall
push
jae,pt
add
leave
cmp
sbb
js
add
call
inc
add
adc
mov
mov
mov
add
add
add
add
and
jmp
loope
dec
sbb
leave
or
xchg
jae
jge
xor
mov
stos
clc
in
call
clc
mov
push
mov
jmp
push
imulb
jae
cwtl
and
inc
push
call
inc
add
fistps
call
add
add
incl
mov
sbb
jne
sbb
mov
sbb
push
mov
sbb
sub
pop
mov
sbb
js
jo
or
push
pusha
lret
orb
aas
jae
mov
mull
insb
cmp
pop
add
dec
cmp
add
cmp
add
xor
stc
xor
orb
mov
or
sbb
jno
test
fs
fcompl
fiaddl
mov
xor
xor
aam
jmp
jns
test
test
or
mov
jnp
dec
add
ss
push
scas
sub
aas
daa
ret
outsl
das
adc
cmp
call
inc
add
sbb
divb
in
sbb
sti
push
add
push
and
hlt
mov
mov
mov
cmc
das
add
hlt
pop
int
xor
inc
lds
cmp
test
xor
ret
js
fstpl
xor
cmc
jne
or
sarb
int3
xor
call
add
or
sub
test
hlt
xor
or
leave
hlt
xor
jnp
sub
repz
mov
xor
jmp
sbb
bts
jmp
jae
add
das
add
hlt
mov
and
les
addb
or
lret
fdivr
push
gs
xor
push
mov
mov
in
add
jecxz
cwtl
test
std
addr16
inc
add
outsl
mov
xor
push
fdivl
add
dec
cld
pop
add
mov
mov
push
loopne
nop
es
push
push
push
movsl
or
mov
insb
int
pop
insb
adc
out
inc
je
insb
rclb
push
cld
aas
cmpsb
mov
mov
pop
movl
xor
je
mov
mov
test
add
idivl
sti
jl
sar
es
pop
insb
push
xlat
enter
jmp
cmp
push
ror
inc
pop
pop
sub
xor
mov
xchg
push
jae
xchg
sbb
sbb
xor
add
cmp
cmp
add
sbb
lret
xchg
out
mov
mov
xchg
adc
mov
into
dec
inc
into
mov
jp
hlt
or
hlt
aaa
sarl
xor
mov
or
cli
ret
mov
jge
mov
arpl
shl
inc
adc
and
add
mov
fs
pop
bound
add
add
add
test
insb
inc
les
cmpsb
dec
xor
cli
pop
std
cltd
in
mov
push
jb
pusha
dec
jo,pt
mov
xor
jmp
jnp
call
jbe
je
xorb
arpl
loope
add
jae
jns
push
jmp
scas
add
sbb
jl
jmp
es
fisubs
loop
xor
sbbb
push
add
hlt
mov
cmp
outsl
std
lods
cld
jge
mov
mov
add
pop
xor
mov
sub
add
mov
stc
or
or
sub
test
push
mov
adc
xor
and
mov
push
dec
and
sar
cmpsl
repnz
jne
call
add
dec
mov
scas
jmp
add
xor
arpl
sub
loop
stc
mov
movb
mov
call
jbe
adc
or
inc
or
inc
add
fadd
je
ljmp
dec
adcl
mov
add
add
movb
push
orb
add
sbb
dec
ljmp
adc
inc
loope
fsubrs
add
pop
std
sar
sbb
adc
add
decl
mov
xchg
and
xchg
mov
and
add
cmc
mov
jg
call
jo
adc
pushf
cs
mov
lea
shrb
clc
sbb
mov
loopne
mov
js
call
lret
cmc
mov
pushl
fildl
add
pop
ficompl
repnz
dec
mov
cmp
jae
call
pop
jg
jnp
mov
add
roll
jecxz
leave
out
arpl
dec
addr16
xor
or
push
notb
jmp
sbb
jae
loop
mov
jae
hlt
pop
add
lods
scas
xchg
stc
mov
int
jno
out
jo
and
cmp
push
test
mov
dec
cld
fdivl
shl
test
jae
cld
mov
mov
add
insl
je
popa
mov
mov
mov
lock
sbb
mov
data16
add
add
add
add
rcl
pop
mov
or
xor
hlt
push
add
cmp
ljmp
cmp
pop
aad
icebp
sub
outsl
add
mov
add
mov
mov
push
xor
cmp
hlt
loopne
cmp
je
push
cmp
out
in
add
cs
leave
mov
or
push
shl
fisubrl
andl
sahf
cs
je
xor
inc
lcall
inc
notl
aas
add
pushf
mov
cmpsl
repnz
dec
push
orb
inc
pop
add
notl
mov
sub
aaa
push
popa
cmp
xchg
add
lea
add
add
mov
mov
mov
adc
add
and
enter
mov
xchg
sub
and
lret
xor
cmc
jl
icebp
pop
in
bound
ljmp
loop
mov
mov
mov
mov
add
or
int
jge
call
imul
fs
sub
filds
scas
jl
lret
movsb
sbb
mov
js
sub
jb
insl
in
iret
pop
cli
add
sub
mov
int
lods
mov
repz
xchg
xor
add
or
out
xchg
movsl
or
lods
call
mov
in
stos
jb
sbb
push
lret
decb
add
add
add
aaa
stos
dec
or
lods
imul
cltd
sbb
ljmp
cmc
sbb
mov
mov
sbb
xor
lahf
xor
jmp
pop
sbb
inc
std
insb
mov
push
adc
add
stos
lds
repnz
fidivl
pop
stos
lret
decl
add
add
add
mov
add
fisttpll
shlb
xor
int
mov
dec
sub
cwtl
inc
insl
or
jle
mov
sbb
ljmp
jb
cwtl
in
mov
jbe
test
xor
or
xor
cmp
and
sbb
or
mov
add
cmp
das
add
push
mov
dec
decl
xchg
aas
incb
jg
iret
lds
mov
enter
xchg
inc
out
xchg
xor
insb
push
inc
push
jl
jle
aas
rcr
mov
cltd
sbb
testl
xor
adc
jmp
inc
out
daa
xor
jb
mov
insb
in
jb
mov
add
jg
sbb
or
add
iret
pop
xor
gs
leave
fbstp
clc
pop
test
icebp
mov
inc
xor
and
cld
roll
dec
xor
and
add
sub
mov
xor
jge
ret
cwtl
mov
mov
inc
daa
inc
jg
xchg
add
mov
jno
aas
mov
add
add
add
out
sbb
adc
insl
ss
mov
ret
sub
sub
stos
push
jno
sbb
pusha
addl
mov
ficoms
xchg
and
add
lock
or
lock
outsb
ss
mov
add
jae
add
xorl
sti
mov
ret
push
add
xorl
std
std
nop
xor
add
inc
mov
hlt
pop
and
xor
add
push
add
inc
and
mov
xor
daa
inc
mov
cld
mov
das
add
mov
cmp
pop
dec
sub
call
fiadds
fsubp
pop
sarl
popa
mov
and
mov
or
repz
pop
pop
mov
add
add
add
add
mov
or
pop
mov
mov
stos
inc
pop
ret
push
ljmp
dec
incl
and
je
xor
je
xor
dec
pop
push
inc
pop
scas
rorl
mov
mov
add
dec
add
sbb
adc
push
adc
adc
into
xor
les
and
add
leave
lret
shl
aam
and
in
jnp
adc
adc
mov
add
out
cmp
les
inc
hlt
std
jno
mov
pop
push
movb
imul
jae,pn
call
or
or
ljmp
int3
in
in
ljmp
dec
rcll
dec
pushf
in
inc
add
add
cmp
cmc
mov
sar
cld
scas
lret
add
xor
aad
mov
add
lea
sub
into
cli
scas
sub
dec
and
cmp
stc
mov
cmc
xchg
nop
add
sub
aaa
arpl
divl
fs
clc
add
out
lret
pop
sub
add
movsl
lods
sti
sbb
mov
test
repnz
mov
subb
lds
add
cli
std
cmp
add
pop
mov
and
cmpb
pop
data16
mov
call
xchg
cmp
pop
incl
xchg
mov
divl
add
arpl
sbb
jle
mov
ret
add
jecxz
push
fs
push
std
aas
push
icebp
jp
mov
dec
insl
call
push
sub
xchg
divl
sarl
fmull
pushl
bnd
outsb
cs
pop
inc
outsl
add
cmpl
push
push
pop
inc
std
add
xor
cmp
add
jne
hlt
movsl
insb
jbe
dec
lret
and
rcrb
mov
dec
jmp
mov
add
ret
leave
inc
cmc
inc
lahf
loope
jne
dec
je
mov
js
in
ljmp
push
or
call
add
scas
push
mov
ss
mov
xor
repnz
xchg
add
mov
insb
adc
xor
xchg
test
sbb
push
daa
aas
aad
lods
xchg
shl
xchg
add
jl
testl
sub
adc
add
scas
nop
mov
jne
ljmp
push
insl
xchg
adc
daa
fdivr
std
mov
cmc
jecxz
hlt
out
lods
sub
jno
mov
mov
xchg
sub
cmc
je
adc
push
mov
fisubrs
stc
jl
out
jge
iret
jmp
das
out
inc
call
bound
ja
hlt
add
xor
mov
xchg
and
inc
jge
out
jl
cmpsl
sub
add
lret
inc
xchg
sub
inc
jg
jmp
cmp
dec
sub
cmc
es
testb
push
xor
jmp
pop
idiv
in
xor
add
cli
std
push
cmp
pop
mov
jae
or
sub
pop
push
cli
rcl
xor
jb
or
cmpsl
inc
aad
push
call
add
add
add
and
std
insl
xor
inc
jb
cmpsl
jo
repz
std
pop
hlt
jae
and
mov
pop
mov
in
pop
data16
mov
insb
or
scas
sub
add
inc
add
xor
add
jmp
rclb
mov
pushl
push
jmp
pop
ret
push
mov
lods
jmp
jne
jnp
hlt
add
adc
add
mov
je
mov
cmc
in
mov
adc
out
dec
pop
mov
das
add
clc
mov
or
rolb
mov
mov
mov
testl
adc
sub
mov
das
pop
roll
mov
add
add
add
inc
ljmp
stc
je
jle
add
add
idivl
dec
fcmovnbe
lods
or
cmp
es
clc
addl
cmc
incl
adc
push
inc
test
pop
xchg
daa
mov
jp
outsb
sbb
int3
cmc
xor
ds
repnz
out
jle
jl
pop
addb
add
add
add
add
movsl
lods
sti
jno
fistps
mov
jl
jp
and
lods
clc
cmpsl
movsb
sti
mov
in
movl
sbb
adc
sub
adc
insl
imul
mov
jl
sbb
neg
and
mov
cmp
scas
clc
or
and
cld
movsl
and
mov
out
add
cmp
add
lret
pmulhuw
jle
aam
add
dec
adc
xchg
repnz
data16
test
sbb
fstl
call
jb
lods
std
mov
lods
fnstcw
int
mov
cmp
in
hlt
pop
mov
hlt
xor
lods
sub
push
xchg
sub
mov
hlt
xor
test
shl
std
bound
add
add
add
add
pusha
cmp
xchg
xor
jmp
mov
std
sahf
add
xchg
notl
shll
mov
push
dec
sbb
mov
inc
add
sub
dec
mov
std
lcall
jae
fst
std
mov
dec
push
sbb
ljmp
lock
xor
add
dec
or
add
add
add
adc
lock
add
xor
mov
and
lock
xchg
push
or
out
add
mov
mov
push
fsts
xor
flds
mov
lret
pop
jle
cld
mov
push
lret
sbb
std
xor
pop
loope
in
mov
bound
addl
add
add
add
add
or
enter
mov
push
and
add
ljmp
mov
fiaddl
call
add
add
inc
out
or
adc
imul
mov
or
loop
clc
aas
divl
push
in
mov
shl
mov
xchg
insl
jmp
add
add
add
add
shll
sub
add
xor
lods
jne
aaa
mov
jb
mov
push
xlat
mov
out
arpl
test
add
inc
lcall
insb
testl
loopne
fs
and
push
pop
divl
out
adc
mov
mov
in
stc
fmuls
xchg
clc
mov
sub
jecxz
and
add
add
add
add
mov
adc
scas
mov
or
rol
clc
xchg
and
push
mov
stos
sub
add
fsubs
out
subl
orl
stc
and
insb
std
popa
shrl
push
or
and
adc
std
mov
popf
and
inc
fldl
jmp
or
add
add
add
add
sub
fucomi
std
aaa
and
pop
pop
shrb
xor
add
mov
add
fisubs
mov
dec
sub
add
adc
int
pop
adc
add
xor
add
repz
test
call
daa
test
inc
mov
add
cmpl
ret
add
incl
adc
int
adc
test
mov
mov
xchg
inc
in
sbb
fwait
pop
sti
incl
xor
add
mov
je
mov
mov
roll
ficoml
fcomps
adc
xchg
inc
je
xor
jb
aam
push
adc
mov
fisubl
flds
punpckhdq
in
jl
mov
loop
hlt
aas
notl
or
xchg
sbb
fst
sub
sbbb
pop
fisubrl
add
xchg
dec
or
add
sub
mov
xor
cmp
xor
insb
int3
or
int3
add
xor
add
xor
xchg
mov
jne
clc
jae
cmp
add
popa
mov
lahf
fists
add
add
add
test
mov
nop
sbb
mov
add
xor
aam
pusha
ret
in
mov
dec
jo
add
pusha
ret
in
mov
subb
adcl
mov
inc
push
in
mov
daa
sub
push
xlat
mov
jmp
inc
jmp
aas
andl
add
add
add
ljmp
out
add
ljmp
scas
pusha
xor
sahf
or
jle
outsl
test
outsl
xrelease
fdiv
sub
mov
jecxz
aaa
dec
sub
std
fs
add
dec
add
mov
sarb
jge
mov
mov
pop
ret
pop
sub
xor
out
push
mov
arpl
add
sub
xor
shr
std
xor
mov
cld
jne
push
sub
push
test
pop
rclb
push
sub
add
mov
std
lcall
sbb
pushf
add
lcall
cmpl
shll
add
leave
mov
or
add
add
add
pop
inc
jae
lds
and
mov
pop
sub
pop
movsl
jnp
mov
ss
fincstp
xchg
mov
mov
xchg
or
je
mov
ljmp
mov
jb
mov
rorb
mov
or
scas
cmp
or
clc
fiaddl
mov
bound
adc
hlt
cmp
pop
add
or
decl
sub
aas
mull
sti
sbb
nop
add
adc
fistpl
or
ret
adc
xor
ret
sub
mov
ss
out
jge
push
add
jmp
mov
sub
mov
xor
into
sbb
leave
subps
xchg
add
mov
ja
mov
cltd
mov
mov
pop
flds
in
or
mov
lock
sbb
fsub
adc
movsl
fmulp
cmp
inc
jnp
add
dec
je
jge
out
call
dec
cmp
test
mov
pop
xlat
test
fxtract
and
test
add
out
push
lock
sub
xor
test
and
rcrl
add
repz
sbb
mov
jecxz
andl
cld
mov
lds
int
xchg
push
out
fcomip
mov
add
dec
add
out
add
mov
pop
and
aaa
test
pop
xor
cmp
add
add
push
add
setp
add
push
or
mov
je
fsin
je
add
push
mov
xor
into
xor
mov
shrl
call
mov
cmp
mov
xor
je
fmuls
mov
xor
mov
and
add
movsb
and
dec
arpl
maskmovq
notl
call
lods
cmc
or
das
add
je
std
imul
popa
mov
mov
mov
adc
lahf
test
or
mov
push
jb
add
imull
add
imull
mov
cmp
insb
jp
loopne
daa
insb
cmp
sub
loopne
test
cmp
add
add
add
aaa
fimull
fucomi
mov
xor
mov
aas
testl
mov
rclb
add
xor
cld
xor
dec
orb
fistl
add
bound
adc
and
stos
sbb
pop
mov
sbb
filds
xor
mov
adc
call
add
add
add
adc
call
sbb
insl
or
icebp
scas
sub
mov
xor
sti
loope
loopne
fcomps
dec
cltd
loop
cmp
pop
lret
negl
mov
std
push
push
call
data16
and
push
jmp
call
je
and
out
cmp
jecxz
jle
pop
jb
test
in
jnp
add
add
add
add
clc
bound
cmp
int3
cmp
testb
add
ss
int
int
bound
cli
in
cmp
or
sti
mov
xor
jecxz
orb
push
call
orb
push
jmp
std
stc
outsl
das
rcrb
std
movd
ret
inc
pop
loope
add
sbb
sbb
xor
mov
mov
cmp
cli
cvttps2pi
mov
arpl
push
sub
sub
sub
adc
int
std
adc
or
add
adc
adc
jns
add
sahf
xor
test
or
popa
test
fwait
incb
or
add
les
bound
dec
insb
sbb
pop
xchg
fwait
incl
inc
jae
fiaddl
xor
mov
mov
dec
pop
xchg
decb
push
inc
jae
ss
mov
mov
sub
adc
icebp
inc
cmpsl
enter
sub
pop
lock
add
add
add
add
icebp
xchg
fsubrl
xor
add
xor
fstl
or
xor
shl
xor
add
push
movsl
leave
popa
xor
mov
fs
sbb
jmp
adc
enter
fbld
fucom
pushf
or
push
pop
int
call
sub
filds
mov
cmp
add
cmpsl
add
add
ficoms
cmpb
jnp
scas
adc
ficoms
sbb
xchg
out
jp
add
das
jne
pop
add
out
cmpsb
add
jle
mov
hlt
xor
adc
dec
incl
les
rcll
add
mov
add
hlt
and
inc
aas
mov
clc
insb
add
or
stc
xor
push
xchg
hlt
leave
adc
xor
test
pusha
aaa
push
call
xchg
sub
in
mov
adc
sti
jle
add
pop
ret
cmpsb
push
push
mov
decl
push
push
mov
decl
mov
movups
add
push
push
or
push
add
aas
decb
cmpsb
cmpsl
add
lds
push
pop
mov
inc
mov
add
pop
ret
push
mov
data16
mov
mov
dec
inc
adc
cld
lock
xorb
jbe
pop
inc
add
mov
add
dec
fisttpl
inc
fidivs
xchg
add
out
adc
jle
mov
repnz
test
inc
push
jl
test
jg
mov
and
and
shrl
dec
sbb
pop
dec
inc
jae
xorl
dec
cmc
arpl
xor
pop
xor
sub
or
jl
je
or
xchg
mov
mov
stc
out
add
jl
sbb
leave
add
xor
add
add
add
negl
fistps
xor
cmpsl
stos
stos
jge
sbb
out
ret
das
out
add
mov
fiadds
mov
cmpsl
inc
xor
xor
lods
xor
enter
xor
pop
cmc
add
push
mov
xchg
daa
inc
mov
mov
xor
add
xorb
xor
mov
jge
dec
add
hlt
mov
std
add
cmc
mov
pop
stos
jg
in
push
hlt
jge
sbb
test
test
push
sbb
rcl
push
hlt
xor
hlt
xor
pop
cmp
or
insl
pop
mov
jae
mov
hlt
lds
push
cs
mov
cli
inc
push
sar
call
pop
push
in
jg
call
jge
push
add
movsl
add
fidivs
call
inc
ret
aaa
mov
lcall
xor
pushl
sub
add
repnz
push
out
daa
add
ds
incl
adc
sub
mov
jmp
jno
inc
dec
popf
mov
mov
std
ss
out
mov
add
push
imul
sub
mov
add
xchg
js
pop
clc
sar
mov
stc
mov
push
mov
movsb
dec
inc
or
jle
mov
sbb
enter
add
incb
lea
out
out
lods
or
jae
xchg
adc
gs
aas
stos
add
divl
jle
stos
cmp
aaa
fsubrp
mov
jge
popa
lcall
add
push
dec
cmpsb
out
inc
out
jno
lods
sbb
test
or
int3
push
fcoms
sbb
xor
add
je
add
imulb
jne
fistpl
dec
out
jg
mov
cmp
aaa
pushf
popa
xor
add
stos
mov
sub
insb
adc
lods
insl
add
xor
test
cmpsb
stos
scas
lods
and
push
add
xor
or
pop
mov
sbb
jge
loopne
mov
xor
in
cmp
shrl
hlt
cmpb
add
add
ja
jae
mov
cmc
out
inc
loop
lret
ds
cmc
sbb
test
enter
cmp
hlt
pop
sub
jle
jno
inc
out
sub
inc
sbb
and
notl
ds
mov
loope
fnsave
pop
shlb
daa
sub
mov
cltd
pop
mov
loope
fbstp
je
or
add
pushw
cwtl
movsl
jnp
mov
std
dec
ja
jae
add
je
ds
jmp
sub
out
jmp
push
xchg
lock
lea
cmp
jmp
cmc
test
fildl
adcb
roll
xor
faddl
call
lea
push
cld
jmp
mov
mov
mov
push
popf
gs
sahf
xor
mov
in
xor
decb
imul
inc
into
pushf
add
in
std
addr16
xor
adc
dec
adc
jbe
sbb
call
jb
sar
sbb
mov
dec
jnp
decb
aas
mov
add
jnp
call
out
xor
jbe
add
test
test
dec
loop
inc
add
ljmp
add
push
inc
imul
lret
lods
daa
cwtl
lret
dec
mov
push
pushl
add
pop
cmpsb
imull
cld
dec
orb
push
pop
jp
jnp
or
pop
hlt
sbb
dec
xor
jnp
aam
imul
sbb
dec
out
push
and
or
test
sti
sarb
mov
mov
add
cwtl
stos
add
mov
add
cmpsb
das
int3
arpl
jnp
dec
leave
adc
shll
aad
pop
cmp
mov
rcl
xchg
ror
sbb
enter
shll
and
xchg
pushf
enter
rcrl
adc
sbb
movsl
sbb
pop
flds
imul
mov
hlt
xor
sbb
jg
stos
xor
jmp
add
push
std
mov
xchg
std
fmull
inc
pusha
jle
xchg
pushf
add
hlt
cmpsl
inc
adc
jecxz
mov
jne
or
scas
mul
subb
sub
adc
clc
adc
iret
mov
push
add
pop
push
inc
je
or
dec
xor
cmp
clc
add
add
add
add
add
add
hlt
xor
inc
fidivl
add
and
jne
push
call
xchg
cwtl
icebp
mov
mov
je
push
inc
clc
xchg
cwtl
icebp
lea
lods
cmpb
mov
mov
inc
mul
pop
cld
leave
scas
imul
sub
xchg
in
loope
sub
add
add
inc
in
les
jmp
cmp
and
xchg
xchg
stc
add
movl
mov
lock
add
dec
js
out
loope
aaa
call
mov
add
aas
negl
jmp
pop
ja
or
push
jp
sbb
mov
add
insb
outsl
jg
lock
jge
neg
add
add
push
movsb
gs
push
aaa
pop
lcall
shl
loop
fnstcw
jl
sbb
test
add
in
sar
lcall
add
xor
push
sub
daa
add
icebp
adc
insl
jbe
js
cmp
add
mov
fdiv
insl
jbe
js
cmp
mov
idivl
add
add
add
add
ds
add
push
push
adc
pushf
in
iret
push
fdivl
mov
cmp
or
mov
add
iret
add
mov
mull
ror
mov
jb
stos
fdivs
xor
bound
cli
test
bound
fcompl
hlt
xor
int3
pop
add
mov
adc
hlt
mov
lds
in
mov
cld
jo
mov
xor
jb
cmp
jmp
xor
fsts
mov
dec
and
jg
or
jmp
sbb
adcl
inc
mov
std
idivb
xor
mov
jmp
ror
std
jno
and
cmc
ds
push
pop
sbb
add
mov
adc
add
cmp
xorl
je
mov
add
pop
fisttps
lea
sbb
aad
call
jns
inc
lea
rdmsr
add
frstor
std
pushl
xor
decl
mov
add
scas
mov
call
mov
adc
and
add
out
inc
into
mov
inc
and
pop
mov
lea
mov
mov
push
data16
cmp
and
sub
cmp
sub
flds
cmp
sub
dec
lds
pop
mov
in
mov
decl
fcmovnb
mov
jl
in
loopne
jle
xchg
fiadds
sbbl
std
add
pop
addr16
push
xor
std
iret
pusha
cld
std
fdivs
js
out
and
and
sti
xor
insl
cmp
out
xor
jge
jmp
pop
push
ret
push
mov
pop
inc
gs
jp
mov
pop
xor
divl
imul
add
fs
inc
pusha
sbb
jo
aas
enter
add
xor
pushl
sysret
sti
inc
loopw
mov
mov
dec
inc
xlat
xorl
aas
out
mov
fidivs
adc
mov
or
insl
pop
std
testb
stos
jnp
das
insl
mov
stc
mov
sub
rcrl
add
add
mov
aas
lods
fisubs
sbb
mov
cmp
or
fs
aas
or
cli
jae,pt
hlt
mov
jmp
pop
mov
insl
cmc
outsb
fidivs
mov
xor
shrb
or
cmp
outsb
jo
add
xlat
sub
call
pop
rol
adc
add
aas
arpl
mov
testb
jno
push
xor
out
push
xor
add
cmp
add
out
push
pop
xchg
add
jecxz
in
cmpl
push
fwait
js
push
js
dec
mov
je
xchg
pop
push
cmp
outsl
or
sub
adc
call
xorl
mov
pushf
std
mov
add
add
add
mov
add
inc
or
ljmp
std
sub
cld
adc
aad
add
fs
hlt
das
rorb
push
mov
mov
lock
add
sti
std
mov
fimull
call
je
add
fisttps
dec
je
push
inc
clc
jbe
stc
call
push
and
add
add
add
add
inc
add
or
js
repz
or
sub
sub
xor
pop
pop
and
daa
sti
xor
lret
pop
dec
xor
ss
stos
add
xor
inc
jmp
movl
add
cmp
stc
scas
ljmp
out
aaa
fsub
mov
pop
cs
add
divl
mov
add
xor
and
xor
ret
mov
icebp
rcrl
int3
xor
add
cmp
divl
add
hlt
cmp
in
hlt
xor
jmp
iret
cs
iret
xor
sub
adc
hlt
xor
jmp
repnz
jne
or
pop
mov
shrb
pop
add
xor
jmp
lock
std
xor
repz
jge
jo
bound
std
cmpsb
out
push
dec
push
std
xchg
pop
mov
jae
movsl
lds
mov
jo
push
lds
into
repnz
lcall
push
inc
xchg
xchg
mov
or
fcoml
fnstcw
shrb
add
sub
clc
dec
jb
mov
iret
fimull
out
lret
add
add
add
mov
push
mov
sahf
mov
call
or
jno
fcomip
add
xchg
arpl
sbb
out
in
mov
mov
lret
dec
sbb
sbb
mov
mov
insl
cli
std
je
cli
call
add
jl
mov
inc
mov
add
shll
inc
std
testl
ret
push
mov
repz
not
xchg
daa
inc
cmp
std
js
les
insl
or
push
cld
sti
pusha
cmpsb
push
call
ds
insb
mov
inc
out
pop
cld
std
stos
out
jle
add
xor
outsl
stc
pop
out
mov
and
repz
adc
arpl
jb
out
sub
and
sti
push
jle
out
test
les
je
jnp
test
xor
or
cmp
jmp
pop
out
sbb
pusha
mov
or
jecxz
add
stc
inc
add
lods
cmpsl
outsl
hlt
mov
or
xor
dec
arpl
out
scas
add
cmp
adc
hlt
sub
inc
jmp
adc
std
lahf
or
sti
lcall
sub
push
bound
or
lds
mov
and
jae
add
js
icebp
sub
sub
jecxz
inc
shl
add
cmp
insb
insb
and
jae
push
into
sbb
add
cmp
mov
sub
dec
lds
add
mov
sahf
shl
bound
dec
loope
aam
add
rol
stc
ljmp
xlat
sbb
cltd
mov
mov
dec
xlat
mov
das
test
inc
ret
xor
pop
out
jg
sbb
mov
in
out
add
add
mov
adc
shlb
outsb
add
fidivrs
add
adc
stc
mov
sub
test
cmp
sbb
mov
dec
or
test
pop
add
pop
movsb
lret
add
loope
add
pop
ss
pop
xor
add
mov
pop
mov
add
xor
push
push
mov
push
in
je
cmc
std
sub
sbb
jp
jae
popf
add
ret
lahf
fdiv
std
test
stc
cmpl
arpl
xor
adc
out
add
jo
jp
cld
push
jb
sub
mov
out
les
pop
aas
add
sar
cmpsl
rcl
add
in
bound
scas
inc
sbb
push
cld
jmp
or
mov
add
dec
jo
js
xor
cld
outsw
jmp
inc
fld
push
cmpl
push
mov
jle
xor
add
sub
hlt
lahf
in
out
iret
imull
add
div
jg
jo
out
leave
stos
add
pushf
and
int3
sbb
repz
std
mov
adc
sub
mov
add
testb
out
mov
sar
les
mov
std
aas
pushf
jo
test
cmp
mov
inc
jmp
mov
cld
sub
aaa
xor
cld
das
es
xor
sti
daa
add
add
add
add
add
xor
cmc
je
xor
jmp
out
dec
adc
repz
les
dec
cmp
ljmp
ret
inc
pop
ret
cmp
add
mov
lcall
ret
inc
pop
cmp
ret
or
ja
jne
ret
pop
ja
decl
adc
ret
fdivs
decl
pop
adc
notb
mov
adc
rolb
add
add
add
add
mov
add
xor
lcall
xor
icebp
pop
js
mov
xchg
sbb
add
inc
stos
ds
pop
fimull
test
movl
add
pop
pop
add
movl
inc
notl
bound
mov
test
jb
mov
pop
push
stc
xor
mov
jle
and
or
xchg
mov
add
negl
repnz
out
jmp
mov
xor
ffreep
cs
push
dec
aas
negl
pop
icebp
repnz
push
testl
ds
outsl
out
in
sub
mov
inc
testl
dec
add
dec
cltd
add
xor
icebp
in
scas
inc
divl
insb
les
sub
icebp
bswap
gs
adc
leave
stos
icebp
mov
or
test
out
ljmp
lock
xor
iret
clc
sub
add
mov
jo
mov
xor
ficomps
lods
add
add
mov
clc
fs
call
insl
xor
jp
fadd
sbb
repz
insl
xor
setle
sub
sub
inc
add
mov
jmp
insb
daa
inc
cmp
sub
pop
repnz
inc
xchg
out
std
dec
lcall
shl
sub
jmp
hlt
inc
add
add
mov
lds
mov
jae
and
decl
fadd
fildll
fmull
inc
cmp
leave
pushf
mov
jge
push
xor
add
cltd
clc
std
imul
loope
push
das
test
and
push
mov
mov
inc
push
ss
lea
lret
push
lea
xchg
int3
stc
ljmp
lret
push
cmp
nop
xor
iret
addr16
cs
mov
lods
in
adc
jns
inc
mov
xor
xor
or
inc
push
ja
nop
mov
jl
jg
jbe
jno
jl
icebp
dec
je
pop
jnp
pop
dec
pop
or
and
mov
mov
add
int3
push
incl
insl
fsts
aaa
mov
or
inc
add
sub
lds
shll
std
testb
fdivs
cld
aaa
mov
out
sub
pop
int
mov
push
jns
mov
out
in
pop
es
mull
les
mov
js
movsl
adc
mov
out
add
stc
sub
adc
jbe
lods
mov
in
daa
xorl
cmpsl
jb
std
cmpsb
dec
cltd
out
jecxz
cwtl
lock
sti
sub
mov
popa
sbb
lock
mov
stos
add
push
ljmp
loope
mov
lock
dec
shl
mov
clc
xchg
adc
data16
stos
xor
jmp
hlt
enter
mov
test
daa
out
inc
jmp
hlt
xor
in
mov
sti
aas
scas
mov
je
iret
insb
and
int
mov
hlt
xchg
pop
cmpsb
mov
push
jb
mov
cmc
mov
adc
xor
bound
icebp
or
std
insb
andb
pop
or
pop
add
or
add
xor
sbb
clc
je
cmp
imul
pop
mov
call
daa
pop
pop
dec
xor
int
xchg
insl
mov
sub
decl
scas
jns
inc
mov
add
lret
add
jns
pop
mov
add
test
adc
sub
add
add
add
add
mov
add
pop
daa
std
push
divl
push
andb
mov
mov
js
sti
push
mov
xrelease
mov
int3
jl
lcall
add
ficomps
push
out
mov
clc
xchg
lret
add
cs
shll
add
xor
push
call
add
add
add
movsb
ljmp
sbb
fistpl
cmpsl
ljmp
loopne
or
into
push
add
sbb
mov
inc
ljmp
mov
add
in
push
out
sbb
and
mull
adc
push
add
inc
mov
movl
movsb
jne
lahf
sbb
add
add
add
jno
jmp
mull
out
shlb
push
ret
enter
mov
sub
add
dec
call
add
stos
cmpsl
outsl
and
stos
push
jb
cmpsb
inc
negl
and
add
xor
int
mov
int3
pop
cmp
icebp
sbb
sti
pop
push
mov
fldl
mov
std
inc
into
pop
std
aam
pop
inc
jmp
hlt
enter
cmc
xor
pop
insl
lds
lods
pop
inc
jmp
lods
cmp
out
lahf
stos
lock
xchg
std
jnp
std
sbb
dec
xchg
xor
jmp
dec
mov
rorl
cmpsb
cmpsl
mov
mov
mov
jo
add
ss
push
cltd
inc
adc
adc
sti
jne
leave
jno
cltd
and
adc
add
add
add
xchg
arpl
jle
add
into
xor
je
push
std
push
or
incl
leave
sti
mov
push
ret
push
mov
pusha
sti
jne
xor
or
inc
sbb
add
push
jmp
sbb
cld
adc
xlat
jno
test
inc
cmp
inc
das
std
call
in
je
lds
dec
xor
div
sub
pop
and
xlat
out
mov
and
dec
jo
repz
outsl
or
lods
out
call
jne
pop
insb
lea
sbb
pushf
jp
sub
outsl
adc
popf
adc
sub
out
jmp
pmuludq
mov
mov
das
addb
jge
or
testb
out
out
test
add
fimull
int
dec
std
loop
out
out
inc
sti
dec
cmpl
xor
xor
and
jnp
sbb
out
adc
jmp
hlt
pop
adc
dec
or
dec
add
out
hlt
inc
mull
aam
je
mov
add
lods
daa
outsl
and
sbb
adc
push
movsb
and
fsubrp
jns
jo
pop
divl
push
incl
mov
in
add
ret
mov
aam
jmp
ds
xchg
das
cs
call
adc
std
xchg
push
pop
stos
pushl
mov
mov
or
int3
adc
push
shlb
aad
cmp
roll
add
add
add
add
insl
push
shll
ss
cld
dec
inc
inc
jmp
imul
mov
xor
xor
cmp
jmp
stc
jo
add
incb
and
cmp
imul
add
and
xchg
std
call
xchg
sti
cmpl
jg
sbb
push
xchg
xchg
and
add
add
add
add
mov
clc
push
push
mov
xchg
xchg
pop
sahf
je
mov
push
imul
xor
test
pop
sub
push
inc
outsl
or
pop
scas
mov
sub
adc
sub
fldcw
add
inc
call
mov
test
fsubr
out
addr16
mov
push
dec
jae
inc
jno
std
inc
fimuls
ret
cmp
sti
cltd
add
jmp
push
adc
clc
add
or
rolb
dec
notl
mov
xchg
test
dec
jne
lds
or
in
mov
cli
add
jp
lock
mov
sbb
aas
negl
hlt
dec
lahf
add
add
das
rcl
divb
out
je
loop
push
inc
add
ja
xchg
je
mov
add
jno
add
das
je
sbb
xchg
clc
faddl
add
mov
ficoms
scas
pop
in
xlat
clc
out
add
loop
cmp
add
fdivr
sub
negb
mov
or
adc
out
in
flds
imull
push
loop
das
add
mov
repz
or
mov
stos
xor
out
ljmp
movsb
call
xor
add
cmp
push
and
bound
stos
jae
and
fsubs
call
xchg
mov
stos
jae
adc
je
cmp
add
sub
sahf
lods
std
jmp
push
cltd
paddsw
xor
movsb
add
call
arpl
call
incl
pop
pop
gs
or
arpl
cmpl
push
push
and
sbb
dec
call
aaa
movl
mov
call
testl
xor
orb
repz
and
add
xor
add
jno
mov
test
pop
mov
je
pop
call
mov
push
lret
push
and
pop
xchg
je
movsl
jne
test
ljmp
cli
and
and
leave
loopne
outsb
and
and
adc
ljmp
xor
push
ds
jl
aas
ret
adc
pop
sub
push
jle
negl
or
push
inc
and
out
or
pop
roll
and
adc
aas
pusha
and
orl
cs
and
jecxz
jg
cmp
mov
xor
daa
ljmp
add
add
add
add
jnp
sbb
inc
xchg
imul
add
adc
js
or
inc
sbb
adc
insb
ret
les
mov
cmp
scas
push
fistl
push
rcll
adc
divl
fimuls
stos
mov
in
flds
mov
push
jnp
gs
add
jne
xor
xchg
mov
imul
test
add
jne
or
jge
out
leave
stos
std
jb
scas
clc
push
inc
cmp
push
fsts
test
mov
test
stos
stos
std
jb
outsl
push
jb
scas
in
or
jmp
add
mov
cwtl
fs
xor
jo
xchg
adcl
add
pop
fstps
stos
ss
jno
insl
xchg
xor
jmp
mov
xor
ret
in
addl
je
mov
mov
bound
stos
lods
adc
mov
or
mov
inc
lock
notl
das
mov
fs
ss
fldl
jge
das
jno
add
mov
clc
fiadds
pop
decl
roll
lret
inc
xor
fildl
sti
jne
test
popa
ds
decl
xchg
xor
stos
inc
add
aas
fistl
xchg
push
in
in
std
jmp
cltd
xchg
inc
pushl
mov
cmp
mov
add
cmp
in
sbb
and
fdivl
pop
sbb
mull
pop
dec
add
jb
aaa
mov
or
pop
and
mov
orl
adc
push
hlt
xchg
cltd
and
add
outsl
add
cltd
iret
inc
fstpt
jae
loop
jae
xor
push
inc
xor
iret
inc
mov
push
dec
cmpsb
adc
add
mov
stos
pop
add
add
add
divl
cmpsb
aad
inc
dec
xlat
fisubrl
lcall
daa
cltd
mov
jb
bound
xor
inc
aaa
fcmovne
dec
out
ss
pop
mov
jno
outsb
in
or
out
in
add
movsl
push
adc
cs
mov
addl
fisttpl
dec
out
mov
xchg
add
xchg
or
mov
mov
add
scas
in
aad
out
pop
or
mov
clc
push
std
lods
mov
mov
hlt
lods
inc
int
push
ret
dec
sbb
inc
mov
add
or
in
dec
sub
xor
mov
adc
add
inc
push
xchg
in
adc
xchg
insb
je
lea
and
jecxz
inc
orb
adc
popf
mov
cmp
pop
push
xchg
adc
xor
xchg
inc
adc
mov
dec
inc
mov
mov
fiadds
adc
jp
or
add
sti
ss
lods
adc
xor
and
add
hlt
and
sub
aam
sub
pop
pop
lds
push
xchg
outsb
pop
test
hlt
add
xchg
and
cmc
call
mov
cmp
div
cwtl
add
gs
nop
pushl
lahf
imul
jg
push
mov
inc
add
dec
add
xchg
adc
mov
add
add
or
mov
test
cltd
in
aas
je
fadds
negl
hlt
les
repnz
negl
pop
shlb
push
add
stos
sub
sub
aad
aaa
xor
push
jbe
mov
mov
out
hlt
andb
in
flds
add
mov
popa
aam
jmp
dec
das
sbb
insb
les
inc
sub
inc
divl
loopne
idiv
sub
add
outsb
mov
mov
mov
scas
add
dec
jb
idivb
sbb
adc
xchg
gs
sub
mov
jle
fisubrs
ss
cmpsb
inc
xor
jmp
ljmp
cld
sbb
movsb
mov
pop
adc
rep
shl
stos
sbb
hlt
clc
mov
std
hlt
loopne
inc
jmp
mov
call
and
sbb
pop
mov
xor
jnp
std
jmp
in
pop
add
adc
inc
jmp
movb
inc
push
push
icebp
hlt
std
mov
add
push
loope
idiv
add
pop
push
je
popf
xchg
add
jo
pop
popa
cld
adc
sub
inc
cld
push
sub
add
ljmp
push
or
add
nop
std
setle
clc
fucomip
add
stos
mov
je
or
je
or
sahf
lods
add
mov
xchg
popa
push
lea
call
incl
jmp
xchg
popa
out
pop
call
lret
pextrw
jnp
xchg
std
jnp
dec
add
mov
add
rolb
and
xor
decl
in
testb
cmp
dec
or
pushf
icebp
out
fs
int3
mov
jmp
mov
inc
iret
je
and
or
or
add
add
add
add
push
add
or
jno
push
mov
adc
js
xor
add
roll
jbe
ficomps
lahf
pop
clc
outsl
cmc
fidivs
cmp
out
rolb
scas
add
sbb
sahf
shll
lahf
sub
movb
adc
add
add
add
add
hlt
fdivp
inc
stos
add
in
out
inc
push
push
repz
aad
shll
push
sbb
jmp
fcmovnb
imul
lcall
sti
cmp
scas
jle
mov
divl
arpl
jecxz
add
or
mov
sti
xor
pop
jns
subl
sahf
jae
rcrl
add
add
add
scas
sub
into
mov
lahf
and
mov
adc
dec
inc
push
leave
gs
popf
je
mov
test
call
dec
push
sub
or
pushf
add
push
jmp
test
std
xchg
jl
call
jg
pop
pop
je
add
dec
repz
add
add
add
add
pop
jg
push
clc
dec
xor
inc
xlat
lea
and
movsl
call
std
sub
sub
xlat
je
xor
cmp
decl
push
je
push
pusha
repz
cld
adcl
mov
stc
pop
add
xor
or
push
jae
fcoms
inc
rcrb
ret
decb
pop
xchg
outsl
outsl
add
lods
jo
push
notl
add
xchg
or
xor
mov
and
sub
cmpsb
jnp
mov
mov
or
or
aaa
rclb
and
sub
call
jg
cmp
inc
cmp
pop
iret
std
clc
adc
jnp
fcoml
push
inc
sbb
push
testb
sub
dec
sbb
add
jb
aam
into
pushf
sahf
jnp
jmp
push
pop
jecxz
pop
add
lahf
aam
xchg
jb
fidivs
lret
sti
push
in
jl
inc
es
pop
daa
xor
outsl
xchg
jl
scas
add
movb
sarl
out
ss
jmp
push
int3
outsb
jb
inc
xor
mov
int3
test
xchg
fcmovb
stos
cli
inc
mov
add
mov
add
cmpsl
cld
iret
scas
imul
or
pop
mov
cltd
push
sti
xor
push
lods
iret
inc
cs
dec
mov
iret
mull
fidivrs
sub
sub
jbe
das
adc
jno
loop
out
or
sub
lods
cmp
mov
sub
call
cmp
rcl
fdivrp
sahf
xor
add
add
add
inc
cmpsb
jae
fmull
xor
sti
cmpsl
enter
inc
scas
repz
sti
cmp
out
inc
lea
sbb
xor
xorl
je
mov
mov
jae
pushf
lcall
mov
outsb
incl
inc
jmp
push
mov
scas
in
pop
sbb
test
sub
or
add
add
sbb
add
iret
and
je
mov
stos
push
movsb
xor
dec
ss
call
test
add
jne
add
sub
test
cmp
and
xor
inc
push
push
jnp
adcb
gs
add
divl
or
sarl
mov
sar
cmc
mov
push
push
clc
push
inc
adc
mov
js
mov
incb
je
int3
jmp
repz
or
sub
mov
mov
sbb
add
sbb
cmp
inc
outsb
nop
fsubs
cmp
fcomps
lock
inc
or
mov
inc
or
ret
clc
xchg
je
add
mov
int
add
xor
pop
mov
xor
add
push
test
dec
push
test
sub
test
sbb
jl
test
push
test
push
push
test
xchg
push
test
sahf
push
test
cmpsb
push
test
fwait
push
test
lret
add
in
testl
leave
sub
out
movsb
and
sub
inc
xchg
xor
mov
jo
add
pusha
inc
out
lods
cmpsl
push
and
add
hlt
pop
shlb
pop
lods
icebp
mov
sarl
lds
xor
push
mov
xchg
lods
inc
outsb
inc
repnz
imul
xor
jmp
fidivs
push
add
in
call
add
add
add
outsb
ret
cmpsl
pop
fucomp
xchg
jae
scas
icebp
fistps
sarl
scas
fsubr
jg
xchg
std
push
and
test
xor
fs
testl
jne
sti
call
push
jb
test
add
ffree
dec
push
mov
dec
push
xor
add
sbb
push
fldenv
add
add
add
add
xchg
or
push
lods
insb
icebp
incl
pop
push
cld
or
xor
and
pop
mov
pop
push
inc
fs
incl
adc
push
shlb
or
sub
loop
mov
pop
sti
adc
negl
adc
xor
jge
into
add
push
iret
adc
add
div
dec
clc
lahf
or
or
mov
jae
testl
call
and
jne
cmp
std
mov
mov
add
std
ljmp
cmpsb
popf
xchg
jbe
inc
fsub
cmp
push
adc
jnp
cmpsl
out
out
pop
jb
and
bswap
push
enter
add
add
add
repnz
das
test
xchg
fidivrs
xor
add
int3
rclb
dec
mov
sub
out
jnp
out
out
out
insb
lods
mov
jbe
fs
mov
cs
sarb
cmpsl
add
adc
js
add
xor
add
int3
push
xchg
xchg
jbe
shl
movl
cld
lock
add
fidivrs
xor
add
xchg
push
das
popf
das
add
fmuls
add
hlt
mov
insb
aas
cltd
std
sahf
sub
pusha
mov
test
xor
sbb
cmpsl
lock
push
inc
jno
clc
jmp
xor
jno
jae
add
push
xor
por
repnz
sbb
std
push
in
js
ss
pop
push
pop
add
xchg
jae
cmp
dec
xor
lret
push
dec
mov
pop
push
cmp
imul
dec
lock
call
adc
hlt
dec
icebp
testb
add
jmp
adc
lods
jns
into
loope
lea
idiv
inc
pop
call
cmp
popa
jno
and
push
dec
jns
adc
add
add
add
lahf
cmp
test
add
jnp
adc
sbb
push
test
add
inc
hlt
in
push
call
cmc
mov
test
sti
out
je
inc
testl
add
jge
inc
orb
dec
adc
loopne
jae
jbe
data16
fmuls
ja
add
sbb
add
adc
add
pop
or
inc
pushf
ja
lock
les
outsb
sbb
lret
roll
js
inc
test
xor
dec
inc
inc
jne
add
rep
aas
xchg
xchg
lock
mov
mov
cwtl
or
and
icebp
hlt
xor
xchg
ds
cmpsl
or
inc
outsb
imul
out
add
pusha
ds
push
lock
repz
imul
outsb
cmc
fidivrl
cmp
shlb
cmpsb
nop
jbe
repnz
es
mov
notl
add
movsb
repz
mov
cs
addb
xor
ljmp
and
int
pop
ret
add
and
out
add
add
ss
mov
addr16
pop
and
add
rcl
mov
inc
repnz
mulb
mov
ss
mov
mov
and
call
push
jb
mov
mov
mov
into
xchg
loop
pusha
ss
aaa
pushf
call
xor
bound
cmp
add
add
add
cwtl
mov
adc
into
mov
and
fs
mov
xchg
mov
cli
cmp
or
loope
rcl
std
decl
xor
jge
mov
repz
enter
mov
cmp
sti
xchg
lds
adc
mov
aaa
jne
cli
ss
dec
repnz
test
jno
add
icebp
out
lret
shll
ds
decb
xor
cmc
out
out
repz
or
lock
lods
adc
in
les
iret
mov
mov
adc
fmull
lret
out
lock
inc
outsb
in
or
mov
pop
sbb
dec
loopne
xchg
mov
add
add
and
jb
push
jae
in
dec
add
or
lods
xchg
nop
mov
cltd
add
cmp
cmpl
mov
insb
or
enter
pop
mov
or
cmovge
jno
xor
dec
xor
and
push
scas
cs
jo
add
daa
dec
sub
mov
cmp
jle
fiadds
xor
stos
mov
mov
mov
inc
xchg
jb
pushl
pop
pop
and
or
mov
jle
lret
xor
outsb
std
jb
cmp
cmc
pop
mov
adc
cmp
xchg
mov
cmpsb
xor
xor
inc
aad
mov
mov
insb
cmp
xor
sub
mov
imul
jge
sbb
enter
insb
notl
bound
push
fprem1
js
ret
add
sub
xor
and
xor
test
mov
mov
xor
sarb
add
and
push
lods
jp
insb
xchg
xchg
add
add
movsb
cwtl
add
add
in
test
mov
jns
out
repz
das
test
mov
faddl
dec
call
aad
pop
push
and
dec
call
adc
mov
and
in
scas
popa
loopne
mov
add
addr16
mov
inc
xchg
jae
fidivs
pop
add
jae
aam
jae
cld
iret
mov
jns
sahf
dec
add
testl
movsl
jmp
test
add
or
mov
cmp
mov
inc
fdiv
add
mov
aam
add
cmp
pop
mov
push
jge
adc
add
add
add
xchg
mov
ds
push
ja
incl
rcrb
test
lcall
ja
or
insl
xor
sbb
push
push
add
fdivp
aaa
hlt
dec
pushf
mov
outsl
xor
add
mov
mov
outsl
lods
mov
les
icebp
xchg
cmp
adc
movsb
or
and
cmpsl
ss
xchg
mov
mov
inc
faddp
mov
stos
outsb
out
add
out
mov
pop
inc
rcrl
jb
repz
ss
xor
scas
inc
cltd
inc
cmpsl
imul
stc
outsl
repz
loope
adc
xor
jne
xchg
ja,pt
out
add
out
sbb
loop
enter
xchg
push
scas
in
daa
stos
outsl
ret
jecxz
or
lret
sbb
test
cmp
repz
cmpsb
xchg
push
fucomp
mov
call
add
out
jb
and
out
pop
call
jp
push
lock
test
cmp
add
add
add
xchg
push
aaa
dec
idivb
test
add
sub
cli
push
cmpsb
std
decl
icebp
adc
mov
lock
testl
sub
mov
xchg
xor
mov
clc
jo
sbb
xor
mov
test
jne
mov
in
xchg
cmp
dec
hlt
sbbl
add
out
jp
cli
sub
xchg
xchg
mov
lcall
sub
jl
test
dec
fwait
and
aas
xor
mov
lea
and
loop
or
out
add
jle
popf
jmp
outsb
movsb
popf
cmpb
xor
jp
std
mov
xchg
lods
add
jnp
ror
roll
lea
xchg
add
add
jp
add
jl
rorb
dec
cmp
test
jno
add
js
or
mov
mov
repz
mov
outsl
cmc
adc
mov
pusha
aas
jg
movsb
iret
mov
fimuls
mov
fidivrs
les
add
add
add
add
repz
mov
sbb
bound
mov
mulb
mov
fbld
std
mov
div
mov
adc
lcall
mov
sti
out
js
xchg
popl
call
cmc
imul
sub
push
outsb
pop
mov
mov
add
add
add
add
ljmp
dec
jg
jb
mov
cltd
jnp
pop
bound
div
jb
sbb
adc
pminsw
cli
mov
cmc
push
div
stos
dec
cmp
mov
test
mov
call
movsb
stos
dec
add
decl
bound
lea
add
movsl
jo
inc
xchg
decl
add
add
add
jns
adc
mov
clc
daa
clc
xlat
cmp
decl
out
mov
fcoms
clc
jmp
stc
fucomip
mov
sti
jne
aad
clc
adc
xchg
mov
hlt
int
faddl
int
loopne
popf
dec
call
add
mov
inc
dec
cmp
stos
add
inc
cmp
inc
rolb
not
inc
adc
dec
pop
cmp
idivl
or
xchg
push
pop
inc
fmull
mov
iret
sahf
sbb
decb
rol
cmp
xchg
sbb
cmp
das
adc
cmp
mov
int
jle
mov
lds
pop
cli
inc
push
mov
aad
andb
add
add
add
xchg
outsb
inc
pop
mov
inc
pop
cmp
divl
jo
xor
in
into
jmp
xor
mov
add
cmc
add
popa
test
ljmp
and
fsubrs
jmp
add
fwait
out
divl
xchg
add
cmp
repnz
insl
add
sub
mov
fucomi
repz
mov
jmp
outsl
std
jg
sbb
add
add
repz
jbe
mov
test
jmp
mov
cli
jg
sarl
out
add
out
leave
pop
std
pop
push
loope
push
inc
mov
dec
jle
fnstcw
jae
stos
add
out
pop
in
jmp
adc
jbe
cmp
push
mov
mov
test
xchg
jle
test
add
add
add
add
pop
push
outsb
leave
test
das
and
aas
sub
add
repz
stc
outsl
repz
push
insl
adc
sub
std
ja,pn
jmp
jg
jmp
adc
rolb
rorl
stc
fcomps
shl
push
mov
jmp
int
push
xor
inc
fnsave
push
std
push
hlt
addr16
mov
shll
stos
add
xor
mov
jge
push
jb
dec
loopne
lock
test
xor
loopne
aam
mov
xchg
mov
add
scas
push
call
call
add
fwait
in
xchg
std
js
mull
or
sarb
xor
sarl
push
xor
insb
aad
aaa
jmp
aaa
push
add
pop
inc
cmp
fisttpll
xchg
jl
jmp
das
hlt
push
jl
jmp
xor
testl
add
mov
mov
js
in
dec
add
jl
adc
in
insb
sbb
sub
fmulp
ss
xchg
adc
int3
les
out
clc
scas
int3
inc
outsb
mov
out
fst
xor
jle
lods
mov
dec
mov
jle
pop
pusha
pop
pop
mov
maskmovq
imull
fs
icebp
test
cmp
dec
xchg
jmp
mov
xor
addr16
or
jb
repz
pop
add
cmpsl
xor
jg
add
fldl
inc
inc
ljmp
jno
or
push
mov
mov
mov
add
add
add
lods
mov
lret
jg
std
add
jmp
pusha
mov
xchg
test
sti
ljmp
jecxz
rorb
add
mov
icebp
inc
add
mov
pop
loope
imul
mov
and
sub
jnp
rcll
loop
gs
xchg
sti
bound
stc
and
sbb
sub
std
mov
mov
add
rcll
or
push
sti
out
or
pop
mov
data16
ret
in
das
shlb
in
push
lds
or
xchg
cmp
mov
xchg
movsl
loop
add
xor
xor
push
inc
decl
cld
dec
mov
inc
rorb
add
add
sbb
jecxz
into
cs
enter
jmp
notl
inc
call
aaa
rcl
mov
add
call
inc
int3
hlt
and
mov
mov
mov
hlt
testl
das
add
test
mov
out
lods
jae
pop
jbe
pop
push
aaa
lock
popf
stc
out
sbb
std
jl
test
add
add
add
pop
int
sbbl
daa
add
xchg
imul
stos
push
cmpb
movb
dec
js
cmp
inc
in
mov
dec
inc
cmpl
test
push
cmp
sarb
add
pop
xor
testl
ljmp
inc
scas
mov
sti
lods
mov
lcall
lods
cmpsl
or
push
xor
jle
sub
outsb
jmp
sbbl
movl
pusha
test
ljmp
xchg
ret
int
jo
mov
mov
add
add
mov
outsl
jmp
sub
out
jne
out
divl
add
add
add
add
idiv
cwtl
sti
stos
add
data16
cld
add
mov
sub
out
and
jb
mov
sbb
inc
jecxz
dec
gs
sbb
push
add
push
add
mov
ljmp
sub
lods
arpl
mov
pop
add
je
push
std
push
das
jbe
shll
add
rcrl
jne
mov
add
cmp
xor
and
jae
mov
add
mov
xchg
sti
inc
push
out
cli
call
add
xor
push
ret
mov
loop
xor
push
mov
in
cs
inc
in
fstl
int3
adc
mov
decl
mov
call
lea
enter
scas
setp
add
add
add
add
jmp
mov
loopne
in
push
lock
adc
add
std
loop
ja
das
jno
int
xor
mov
jne
add
pop
push
mov
scas
stc
mov
dec
add
mov
mov
cmp
je
loopne
iret
or
mov
inc
or
adc
add
xorb
add
movl
pop
lods
add
mov
outsl
nop
inc
aas
int3
push
negb
cmp
add
adc
inc
and
or
dec
clc
xchg
mov
inc
out
jg
shlb
stos
sbb
inc
and
and
push
outsb
test
jmp
ss
hlt
mov
aas
fistpll
and
mov
xor
add
mov
cmp
je
ljmp
xor
cli
mov
push
das
push
jb
testb
sar
mov
jo
cmp
and
test
divb
or
js
and
sbbl
icebp
and
js
mov
mov
xor
add
addb
sub
add
hlt
and
mov
mov
out
pop
xor
jo
pop
xchg
jmp
add
adc
arpl
int
repz
cmc
and
xrelease
inc
out
dec
add
hlt
or
gs
cs
bsr
mov
into
out
addr16
add
add
add
add
add
and
fidivrs
pop
or
jne
js
ja
sub
clc
int
testl
outsb
js
ficoms
das
test
testb
repz
sahf
das
mov
scas
cmc
add
outsb
or
aad
pop
mov
mov
dec
push
test
adc
mov
int
and
cmp
js
mov
add
add
add
das
add
xor
jb
sub
jbe
div
cld
decl
scas
cmc
add
xchg
negl
rorl
cmp
jl
pushf
add
aaa
pop
mov
hlt
cwtl
jnp
mov
das
rcrb
lock
sub
les
int3
lds
jmp
adc
cmp
add
ja
decl
sbb
add
idiv
mov
sub
xchg
mov
xchg
add
mov
adc
pop
add
outsb
cmc
rorb
mov
les
xor
clc
das
pop
aam
jns
add
and
adc
cmpsl
add
xor
addb
das
in
das
sub
push
adc
jp
jne
aas
cwtl
inc
jo
add
jecxz
js
xor
js
push
dec
inc
lods
jno
jg
and
divl
out
mov
ljmp
or
shr
pusha
adc
movsl
mov
sti
xchg
cmpsl
mov
cltd
movsl
mov
xchg
outsl
sub
lcall
pushf
push
or
cmp
mov
or
std
add
je
fwait
in
sbb
xchg
in
sbb
cld
scas
xchg
pop
push
mulb
idivb
xor
sub
fwait
clc
inc
adc
sti
pop
push
jle
mov
jno
repz
mov
popf
outsb
std
inc
inc
insl
jae
fiadds
aam
and
movsb
and
push
inc
adc
cs
inc
std
pushf
cmp
push
xor
loopne
dec
mov
mov
add
xchg
test
out
mov
add
add
add
sbb
dec
in
or
int3
lea
xor
mov
leave
xchg
xor
push
daa
or
sbb
sti
mov
xchg
call
push
std
pop
xchg
sbb
call
dec
test
dec
add
shrl
incl
imul
gs
or
and
incl
sti
jne
xchg
jno
cmpsb
cmpsl
das
add
mov
add
add
add
push
pusha
repz
add
pop
fsubr
idivl
push
sbb
mov
pop
test
pop
out
or
shr
icebp
cltd
insb
jmp
push
sbb
cmc
rolb
fisttps
ret
cmp
and
cmp
inc
or
loop
lret
rcrb
ja
pop
add
xchg
cltd
or
neg
push
or
mul
add
push
daa
xchg
push
movl
popa
adc
out
or
xor
hlt
loopne
insb
les
das
out
or
out
nop
mov
cmp
mov
mov
jo
xchg
xor
add
out
sub
in
cmp
sub
ljmp
add
add
xor
out
pop
mov
inc
les
fisubrl
in
xchg
mov
adc
fcoml
jge
in
mov
xor
xchg
ds
adc
dec
push
sub
or
mov
loop
es
cmp
xchg
hlt
xor
movsb
insb
push
add
hlt
jae
cmc
divb
add
dec
dec
xor
xor
add
add
xor
jmp
xchg
xor
jmp
push
lock
xchg
outsl
imul
jo
sub
push
lock
jo
sub
push
lock
iret
push
pop
adc
lods
sbb
scas
test
add
idivb
mov
testb
pop
test
test
dec
add
add
or
call
dec
push
decl
arpl
adc
mov
je
jns
dec
sub
cmp
xor
jbe
andl
call
mov
out
push
leave
pop
xor
decl
arpl
adc
xor
jbe
nop
adc
outsb
out
decb
in
test
add
add
add
add
stc
out
ljmp
inc
ljmp
sub
les
cmp
or
aas
neg
nop
and
pop
mov
out
dec
ret
fldenv
mov
cltd
mov
call
in
cwtl
mov
out
pop
mov
pushf
xor
and
jge
push
add
inc
hlt
push
add
pusha
test
test
fs
add
cmp
cmp
push
add
add
call
fisubrl
iret
loop
add
pop
sbb
les
mov
pop
divl
popl
inc
out
jmp
lods
lret
inc
pop
xchg
call
mov
push
divl
inc
or
add
jg
add
out
out
nop
mov
je
fimuls
outsl
rep
mov
and
insl
out
add
mov
lcall
hlt
cmp
lods
jns
mov
sub
mov
std
ds
xor
jmp
stc
mov
out
hlt
xor
jmp
pop
repz
je
pop
xchg
add
add
add
add
push
in
jge
jmp
mov
inc
jg
repz
jmp
sub
std
jmp
xchg
inc
or
push
test
icebp
mov
or
jp
pop
loop
mov
mov
das
add
xor
jp
xchg
mov
add
push
pop
dec
xor
pavgw
add
inc
ja
xor
mov
mov
jmp
xor
test
xor
add
adc
and
test
xor
add
into
mov
mov
mov
or
xchg
scas
lds
push
stos
push
add
les
sbb
xchg
jecxz
sti
jmp
scas
roll
pop
add
add
inc
add
pop
dec
pop
jl
and
add
add
add
and
outsl
mov
ja
inc
std
xchg
in
ja
loopne
outsl
or
jl
out
and
add
cld
sbb
mov
jp
or
cmp
or
push
xchg
sub
mov
pusha
or
aas
cmpsb
push
ret
push
sub
add
sub
inc
data16
lahf
jmp
add
lods
cmpsl
or
in
add
stos
jle
or
jne
push
data16
or
adc
or
in
add
mov
out
cmp
add
out
idivl
lods
mov
adc
add
into
outsl
dec
and
xor
pop
cmpl
out
add
decl
mov
pushf
divl
out
neg
incl
xor
pop
aaa
cmp
mov
sub
hlt
xor
dec
hlt
xor
xchg
sub
xor
jmp
add
push
insl
loope
dec
inc
pop
adc
cmpl
jnp
jns
psubsw
je
add
out
fldenv
bound
mov
jle
hlt
fimull
jns
add
push
in
push
fiadds
cmp
into
pop
mov
add
xor
test
test
fwait
xor
adcl
and
and
jne
leave
dec
clc
or
lods
jno
jbe
scas
call
xchg
or
and
jp
lret
add
lods
inc
call
insb
loop
jge
xor
test
leave
sti
call
xor
or
push
leave
xchg
sbb
aad
push
push
and
push
testb
add
jecxz
cvtps2pd
add
pop
or
negl
sbb
pop
add
dec
jge
cmc
pop
add
aad
add
pop
dec
or
add
adc
test
add
pop
add
pop
cld
dec
push
xchg
test
add
pop
add
lcall
cmp
test
test
push
jge
repz
add
rcrb
std
neg
mov
fisttpll
ret
xor
mull
add
jg
lods
out
outsl
leave
or
out
outsb
jo
mov
sub
add
mov
orl
add
stos
cs
mov
cmpsl
pop
jnp
jecxz
divl
and
jecxz
sbb
bound
xchg
jle
fisubrs
mov
roll
lea
je
pop
add
push
out
aaa
xor
divb
out
add
jo
lods
test
push
lds
je
add
adc
rolb
mulb
out
adc
out
out
cmp
lret
pop
lret
faddl
pop
repz
jmp
das
popa
mov
xchg
popa
aaa
mov
call
notb
out
fsubs
subl
inc
sub
add
mov
or
xor
sbb
out
jae
mov
in
je
add
fsubl
adc
aaa
xchg
rcll
or
flds
or
in
jle
jb
mov
dec
pop
mov
add
xor
enter
rclb
or
mov
inc
gs
testb
je
add
cmp
into
dec
sub
add
scas
inc
lock
xor
add
add
pop
mov
and
inc
push
and
sti
cmpxchg
out
push
dec
xor
xor
mov
mov
jl
xchg
push
cmovno
cli
loopne
mov
mov
jne
dec
daa
add
iret
and
mov
push
leave
adc
rolb
add
add
add
add
out
push
jl
imul
pop
and
dec
xchg
add
mov
icebp
and
out
add
xchg
mov
or
or
rorb
std
cmpsl
gs
mov
notb
inc
test
add
cld
cmp
add
xor
jg
das
imul
xor
sbb
push
jo
out
daa
ds
test
add
out
orl
fs
mov
ret
sbb
and
jb
xchg
mov
or
sbb
xchg
add
or
dec
jbe
loopne
std
pop
sbb
add
mov
outsb
pop
xor
pop
sbb
sub
repnz
add
clc
xor
lahf
popf
daa
insb
dec
xor
add
fs
sub
add
add
add
test
repz
jae
mov
sub
hlt
mov
out
js
call
in
lock
repz
das
push
push
rorl
add
js
or
jmp
jno
dec
jmp
hlt
xor
test
sub
pop
repnz
inc
movd
gs
add
cmc
mov
mov
mov
int
add
jo
add
add
cmp
adc
fidivrs
mov
sub
push
mov
setp
adc
cmpl
js
inc
dec
pop
xchg
mov
dec
adc
mov
xchg
pop
xchg
mov
xor
or
or
imul
mov
int
xchg
cmp
pop
aaa
pop
add
xlat
inc
dec
loope
pcmpgtd
sbb
adc
jb
mov
nop
add
into
inc
dec
jl
rcr
fists
mov
or
mov
mov
fucomip
dec
mov
push
je
add
sbb
push
xchg
int3
dec
nop
push
dec
bound
add
mov
or
aaa
dec
jp
add
rorb
jo
add
dec
nop
jno
shl
js
test
dec
lcall
in
dec
inc
nop
jae
mov
daa
divl
out
aaa
sub
divl
out
lods
sub
sbb
dec
loop
adc
ret
add
push
dec
adc
repz
add
fdivl
ret
fildll
mov
mov
push
out
mov
push
test
outsl
dec
imul
push
mov
pop
sbbb
inc
jno
add
daa
popf
rclb
jbe
rolb
jecxz
add
inc
std
aam
inc
inc
jmp
pop
scas
lods
push
subb
inc
add
jmp
add
std
ss
inc
mov
imul
es
or
fimuls
pushf
in
push
jno
js
pop
cmpsl
or
add
cwtl
dec
xor
test
jae
push
das
pop
ret
sub
repnz
cltd
xorb
popa
aaa
mov
mov
fbstp
add
mov
test
cmpsl
inc
incl
sahf
ret
ret
xor
cltd
sub
xchg
pop
outsb
push
push
jae
add
xchg
xchg
movsb
mov
fldcw
jge
fisubs
adc
ljmp
setb
or
push
mov
and
iret
cltd
cmpsb
sti
cmp
inc
cs
rol
std
decl
lret
push
addr16
fldz
repz
inc
add
clc
cli
push
mov
inc
add
and
out
xlat
mov
jle
cld
or
adc
mov
or
mov
dec
add
aam
test
call
cmp
ljmp
clc
into
xchg
loopne
adc
divl
adc
ljmp
clc
into
pop
shll
add
add
add
clc
push
aaa
adc
cwtl
ret
sub
adc
xor
aaa
push
insb
mov
mov
xchg
push
clc
into
sbb
jo
loope
push
cmp
lods
mov
mov
push
out
clc
sub
outsl
xor
in
stos
cwtl
ret
or
into
pop
xor
add
cltd
call
pop
ret
loop
add
jnp
fdivrl
negb
mull
out
jb
shlb
mov
stos
jl
jno
bound
sti
dec
mov
inc
sti
test
int
mov
fsubr
sub
add
fdivr
rcr
add
jmp
outsl
push
or
jmp
iret
icebp
sti
sbb
mov
outsb
insb
push
push
data16
add
add
add
add
and
movsb
js
add
hlt
fcoml
dec
es
shlb
addl
hlt
push
adc
push
push
add
into
adcb
push
stc
loope
xchg
fsubrs
std
cltd
dec
repnz
pop
mov
fidivrs
add
cld
into
insl
add
call
mov
adcw
sti
call
jb
add
sti
lcall
fadds
jb
cvtps2pd
push
mov
stos
push
lea
push
call
mov
addr16
lock
mov
inc
adc
and
add
fwait
lods
adc
fidivs
out
sbb
or
or
sti
push
fidivs
add
mov
pop
dec
fisttpl
add
add
add
add
add
add
xchg
pop
std
nop
fistpll
je
add
or
cld
out
imul
and
add
fadd
mov
mov
jnp
jbe
xchg
add
dec
xor
insb
jne
push
leave
add
testl
xchg
ss
lods
push
popf
dec
jbe
or
jl
outsb
mov
call
jnp
testl
add
add
add
test
testl
mov
xchg
mov
push
out
jae
out
add
out
ljmp
int3
insb
sub
xor
mov
jno
stos
push
jno
add
mov
push
out
imulb
push
aaa
test
pop
ds
add
add
out
inc
xor
add
xchg
sbb
lahf
test
add
jl
add
movsl
arpl
fs
es
jno
sbb
inc
cmpsb
or
xchg
sbb
out
mov
add
push
std
jmp
test
xor
sub
push
jno
pop
out
mov
hlt
xor
cmpsb
ss
add
hlt
xor
fistpll
out
mov
hlt
xor
cmpsb
mov
adc
push
mov
dec
jb
ficoml
sub
test
adc
hlt
xor
add
inc
out
ja
call
in
pcmpeqb
std
jo,pt
call
xor
mov
xor
xchg
aam
pop
push
xchg
stos
hlt
push
add
xlat
cmp
sub
mov
dec
cld
dec
scas
rorb
cmpsl
add
sahf
js
add
ss
mov
mov
std
jmp
insl
or
or
psrld
mov
rcrb
roll
dec
sbb
add
sub
cmc
mov
stos
mov
sbb
adc
sbb
sti
adc
not
shlb
cmc
repz
negl
shrl
cmp
ja
jb
leave
inc
repz
mov
push
enter
xchg
ja
add
cwtl
cmp
enter
adc
sub
cld
push
cltd
add
iret
addb
push
mov
fistl
push
jns
call
sub
pop
ja
ljmp
dec
push
add
xlat
fdivrp
lock
arpl
nop
out
dec
cmp
iret
pushf
jbe
add
data16
scas
or
psubw
mov
jmp
loop
sub
push
repz
pushf
or
out
xor
loopne
cmp
aaa
in
jg
mov
rcll
jb
add
cmc
jno
in
jne
add
in
add
jno
aaa
mov
movsl
add
xchg
hlt
xor
jmp
icebp
dec
std
mov
xor
out
push
je
add
dec
repnz
jo
popf
mov
dec
std
out
in
hlt
adc
inc
jmp
xor
stos
sbb
adc
je
push
push
je
cwtl
cld
add
test
hlt
xor
ss
data16
pop
std
jbe
ret
push
cmc
cld
data16
fwait
sbb
fs
sbb
mov
clc
xor
mov
jle
shll
mov
xor
push
test
sti
xor
add
js
sahf
xor
or
js
add
push
add
sahf
mov
loopne
and
dec
in
mov
idiv
mov
clc
add
xor
in
xchg
mov
and
push
int
and
test
cli
adcb
sti
add
add
xchg
mov
sti
jmp
idiv
testl
add
imul
mov
sbb
adc
jae
out
and
hlt
ljmp
lret
hlt
pop
add
inc
xor
std
mov
je
negl
call
jnp
je
jb
je
push
das
std
jo
aam
fists
jg
dec
mov
add
inc
shl
cld
push
mov
add
je
or
divl
lds
adc
ja
repnz
add
out
cs
jle
jg
dec
loop
daa
dec
push
sbb
and
and
dec
testb
dec
iret
addps
xchg
xor
orl
out
je
jmp
and
mov
add
push
in
xchg
dec
mov
add
add
add
dec
jle
push
std
incl
dec
pushw
movsb
sti
data16
jae
insl
cmpsl
lods
push
ja
xchg
std
inc
jae
out
jo
dec
push
pop
jno
std
es
dec
push
add
push
test
repz
cmc
lods
cmp
add
pop
scas
scas
call
add
cmp
call
add
add
add
add
std
mov
cmp
push
pop
jle
std
cmpsb
loopne
les
sub
jmp
enter
and
jecxz
dec
mov
mov
setb
mov
mov
scas
cmp
push
mov
push
mov
dec
call
adc
cli
add
add
push
mov
dec
mov
xchg
stc
mov
mov
adc
dec
cmp
xor
mov
loopne
mov
or
out
dec
add
push
xchg
push
jne
stos
jnp
ja
pushl
mov
mov
sub
pop
jb
sub
sbb
shl
sarb
mov
adc
add
jge
jle
xor
loopne
jle
stos
daa
sbb
ljmp
or
mov
out
dec
mov
jnp
or
or
std
daa
pop
out
out
add
jo
or
rolb
sbb
jbe
mov
mov
mov
movsl
fsubs
divl
insb
xchg
inc
jbe
add
sub
ret
sbb
jno
jecxz
push
jge
mov
inc
or
add
mov
out
xor
push
lret
rol
inc
out
mov
jl
or
pop
inc
aas
mov
adc
icebp
mov
and
movsb
movb
inc
lods
sti
jl
inc
add
pushf
mov
add
std
scas
add
loopne
sub
shll
loopne
adc
inc
adc
xor
out
xchg
jmp
imul
add
xor
add
jbe
lods
fs
adc
les
fnstcw
hlt
pop
mov
cmp
jmp
or
shrl
mov
add
inc
std
stc
fistpl
movl
cs
sti
jmp
lret
les
fldl
pop
jns
jne
push
or
pushl
fiadds
jne
push
add
mov
mov
pop
in
jnp
cli
push
mov
cli
push
push
jns
jg
movsl
movsl
adc
cli
jne
cli
mov
xchg
jecxz
cli
push
jge
push
pop
lret
mov
in
pop
xor
add
xchg
inc
adcl
mov
je
add
push
in
pop
mov
sbb
sahf
jp
movsb
or
std
sub
dec
fs
xchg
or
jl
gs
add
add
add
gs
clc
cmp
cmp
add
hlt
rcl
clc
dec
repnz
movsb
fmuls
mov
and
negl
inc
enter
negl
xor
mov
inc
cmc
mov
je
clc
loopne
mov
idivb
iret
lods
adc
out
addr16
scas
or
out
testl
insb
add
mov
dec
push
xor
pop
xchg
out
jle
lea
mov
pop
add
scas
inc
jns
sahf
xchg
imul
out
outsb
in
inc
test
inc
xchg
or
jg
jns
mov
test
mov
add
push
and
rcl
mov
add
jae
std
out
ljmp
add
add
add
mov
call
ljmp
or
xor
jb
mov
sahf
pop
sub
jmp
repz
xor
hlt
xchg
loope
jbe
sub
shld
push
inc
je
jnp
pop
mov
hlt
pop
push
push
inc
jae
ss
hlt
call
pop
pop
loop
hlt
xor
xchg
sub
fisttps
inc
mov
test
mov
or
inc
and
imul
cwtl
aam
jmp
in
or
test
scas
in
and
inc
or
loop
testb
mov
pop
mov
pop
cld
jne
add
ds
and
sti
adc
xchg
in
jae
hlt
cli
jmp
mov
std
ljmp
add
add
mov
call
push
jo
jmp
scas
popa
clc
fdivrp
mov
cmc
insl
mov
mov
inc
out
jp
insl
push
mov
cmp
call
les
inc
mov
and
in
jbe
cmp
pusha
push
rorb
movsb
lahf
aaa
add
push
xor
add
xchg
imul
mov
daa
mov
add
push
add
lock
pop
insb
cmpsb
notb
cmpb
je
ret
jns
pop
dec
mov
lcall
mov
pushf
imul
jb
fldt
add
sub
sub
mov
xor
inc
mov
repnz
dec
dec
out
inc
xchg
sub
inc
das
ja
insl
int
les
xor
jl
xor
add
int
inc
add
aam
cmp
mov
xor
jg
lds
cmp
in
jge
and
addr16
xor
add
inc
push
xchg
popf
xchg
jne
loopne
pop
loopne
std
aam
and
dec
jno
out
hlt
hlt
mov
add
push
xor
jne
test
jae
add
and
push
xor
push
shll
jecxz
out
mov
repz
hlt
xor
jne,pn
mov
cmc
xor
add
lods
inc
cltd
push
aas
dec
jle
sbb
sub
mov
fstpl
xor
jge
iret
out
push
repz
repz
jmp
stos
sub
inc
sub
cld
into
xor
lea
repnz
mov
stos
jno
dec
cli
je
les
test
push
push
adc
jmp
xor
add
push
adc
push
mov
sbb
lock
test
frstor
jmp
cmp
inc
imul
push
jbe
add
in
movsl
pop
add
push
pop
push
call
add
dec
clc
pop
lock
call
insb
test
dec
add
je
jno
jae
jb
ror
incl
inc
lods
inc
jnp
lods
xchg
iret
pop
scas
or
add
rol
loop
rol
sarl
mov
js
inc
mov
inc
jle
je
jb
jnp
jno
pop
sbb
add
ret
pop
test
cmp
clc
pop
rcrl
or
stc
xchg
enter
push
pop
cmp
popa
add
cmp
add
mov
outsb
call
inc
mov
pop
rol
xor
cmp
jl
sahf
mov
jle
mov
imul
push
add
xor
loopne
add
in
hlt
ret
js
scas
or
add
add
add
icebp
popa
addr16
outsl
daa
dec
es
add
inc
dec
mov
out
add
gs
lock
cmp
scas
push
mov
addr16
pop
jae
add
vcvtdq2ps
add
mov
cmc
in
add
icebp
call
and
ljmp
clc
push
stos
hlt
cmp
or
test
sbb
in
hlt
test
icebp
cmp
and
sub
push
bound
cmp
test
push
hlt
mov
or
mov
inc
jmp
add
ljmp
push
sub
xor
lods
ljmp
in
add
inc
cli
jmp
int
std
push
cltd
and
adc
xor
inc
lcall
ds
add
fisubrs
push
incl
mov
add
jb
inc
add
jae
cmpl
cld
adc
or
sar
lcall
scas
mov
adc
sar
or
mov
cmp
add
jae
add
cmpsl
aam
cltd
lret
dec
add
testl
jl
insb
mov
ret
add
add
add
add
inc
cmpb
cmp
mov
xchg
mov
inc
mov
add
adc
int3
dec
xor
ss
add
mov
add
and
push
adc
push
cmp
scas
sub
lock
je
add
or
jle
pop
xchg
shlb
xchg
sub
dec
pusha
cmp
das
fs
jnp
clc
add
divb
stos
outsb
shll
and
add
shl
add
jo
jp
lods
jg
mov
add
lock
sarl
imul
cmp
daa
imul
loopne
sbb
iret
loop
mov
jno
cmp
add
xor
loope
mov
push
outsb
inc
leave
loop
divl
jg
add
sub
add
aaa
cld
cmpsl
add
out
aaa
mov
mov
aad
xor
ret
shlb
jno
sbb
out
rcll
fld
adc
fadd
and
or
and
jo
cltd
cmc
jno
call
fsubr
jae
pushf
ret
add
xor
push
mov
lods
jo
pop
repz
call
sub
lret
sbb
aaa
in
add
mov
leave
xchg
xor
dec
out
or
or
loopne
push
sub
aas
leave
pop
das
add
or
add
push
das
sti
xor
sub
fsubs
or
push
mov
in
xor
mov
cli
lcall
jae
mov
pop
call
dec
bnd
mov
xor
je
pop
jmp
add
xor
or
or
leave
xor
inc
testl
cmp
push
sar
lahf
lods
xor
dec
add
ret
cmp
add
add
add
add
xchg
imul
dec
cmp
sub
or
pop
or
push
inc
mov
or
pop
and
inc
add
clc
lret
idivl
std
inc
and
adc
sar
pop
leave
pop
cmp
inc
or
xchg
jle
les
test
dec
rorb
pop
ja
js
push
hlt
mov
add
add
add
add
aam
bound
push
ret
out
in
divb
adc
dec
in
xor
test
fdivs
sbb
xor
out
aaa
mov
call
push
xor
mov
mov
loop
enter
in
aad
mov
ss
push
xor
fwait
add
out
mov
movsb
inc
and
or
xor
mov
std
push
repz
sbb
cwtl
sub
sub
in
lods
es
mov
lret
inc
xor
and
sbb
xor
fistps
inc
add
cmp
bound
data16
sub
jo
cld
pop
pop
stos
inc
loope
cwtl
je
add
call
gs
xor
lock
test
hlt
xor
pop
lock
cmp
xchg
hlt
xor
mov
adc
add
jns
inc
pop
inc
hlt
int3
jg
shlb
std
ljmp
out
mov
cli
xor
push
decl
inc
and
enter
outsl
std
mov
adc
dec
push
loope
adc
and
push
hlt
sbb
jmp
sbb
mov
cli
mov
aad
xor
aad
xor
add
and
mov
mov
mov
pop
sub
add
pop
xor
cld
loop
or
pop
adc
add
inc
test
gs
test
dec
jae
cld
ljmp
pop
shr
lret
mov
rclb
into
imul
sbb
sub
inc
test
dec
sub
out
xor
push
add
xchg
cmp
add
dec
fldcw
inc
dec
add
jg
out
fldenv
xor
push
std
shlb
add
add
add
enter
fsubrl
call
inc
sti
xor
icebp
adc
out
in
fadd
dec
jmp
dec
dec
aas
adc
and
jno
pop
lea
push
das
adc
lret
xor
sti
mov
call
fs
jnp
aaa
xor
inc
pushl
pushf
jp
mov
pop
xchg
sahf
add
sub
mov
xor
jmp
sub
dec
sub
cld
aam
xor
push
or
push
addr16
hlt
hlt
inc
inc
jmp
hlt
mov
mov
orb
inc
xor
jmp
xchg
jae
jmp
xor
and
mov
stos
cmp
lea
mov
es
call
pop
lock
test
xor
cmc
add
and
or
sti
je
cmp
xor
inc
in
dec
xor
leave
sbb
jne
or
incb
cmpl
push
sub
enter
sti
jbe
test
decl
roll
xchg
xchg
in
push
xor
mov
loopne
mov
cmpsl
out
test
add
add
mov
jne
cmpsb
inc
hlt
hlt
xor
dec
sub
adc
notl
add
iret
dec
push
je
xchg
mov
rorb
push
orl
add
call
pop
add
faddp
sti
add
mov
std
leave
adc
dec
iret
xchg
lret
sbb
sti
mull
std
mov
and
inc
pop
fimull
add
sbb
shlb
mov
pop
xor
nop
xor
mov
hlt
xor
jnp
mov
call
leave
rolb
div
mov
add
fdivs
push
cmp
lock
dec
mov
out
outsl
sbb
in
hlt
popa
daa
xchg
mov
lcall
pop
sub
out
das
dec
cmpsl
ret
cmp
loop
cmpsb
cmp
leave
jno
and
imulb
add
test
pop
inc
scas
adc
daa
add
imul
iret
inc
call
insl
xor
adc
out
adc
stos
add
pop
dec
test
mov
add
mov
xchg
inc
cs
jb
xor
test
sub
push
push
mov
test
icebp
jb
std
pop
clc
mov
fiadds
xor
xor
push
std
test
xchg
mov
mov
jg
xchg
jp
adc
add
push
rcll
or
sub
repz
xor
mov
ljmp
cmpsb
sub
lea
jno
inc
repnz
mov
add
adc
cld
daa
pop
out
cld
lds
cs
jmp
mov
jmp
and
adc
out
cld
mov
add
xor
leave
adc
call
clc
push
add
mov
dec
mov
add
test
mov
cld
jns
jg
test
add
mov
push
push
rcrb
add
pop
sti
sub
aam
iret
insl
js
fsubs
aad
and
lea
enter
imul
inc
mov
and
jp
aad
cwtl
lds
call
jle
or
or
pusha
adc
jg
sar
fisttpll
pop
leave
mov
mov
cmp
sar
test
orl
pop
adc
sar
sbb
mov
out
movsb
inc
popl
sub
inc
hlt
adc
ret
clc
push
sbb
lock
mov
out
dec
sub
aas
add
jae
mov
mov
roll
mov
cmp
divl
out
test
cs
inc
sub
shlb
insb
inc
add
jg
or
pop
add
clc
or
cmpsl
add
das
mov
out
xor
arpl
testl
cmp
jo
and
push
sarl
test
hlt
jg
sub
pop
rcrb
mov
cmpb
clc
jmp
add
add
add
jno
jo
add
xor
scas
adc
jmp
enter
adc
inc
inc
cmc
xor
jmp
jno
jae
hlt
jge
jmp
sbb
mulb
adc
hlt
xor
jmp
out
mov
clc
pop
xor
add
add
add
add
xor
repz
out
call
or
mov
inc
lods
push
xchg
popa
aas
sti
adc
dec
insl
or
sub
test
stos
add
je
mov
add
mov
je
add
loop
jne
test
pop
test
test
test
fwait
fwait
add
add
add
add
sbb
push
lock
sbb
cmp
test
add
out
cwtl
sbb
lcall
into
aad
adc
pop
adc
and
ljmp
insb
xorl
cmpsl
ja
cmpsl
idiv
add
cmp
add
bound
push
inc
mov
aad
xorl
icebp
mov
je
test
std
sar
pop
dec
add
inc
add
xchg
fdivp
mulb
mov
enter
pop
repz
add
xor
add
xor
into
inc
mov
xor
divl
sar
out
imul
xchg
divb
out
dec
das
pusha
leave
add
jecxz
mov
call
ja
and
out
cmp
push
pop
add
fdivr
ret
shlb
add
jb
inc
mov
add
fbld
lods
pop
jl
push
cmpl
xor
push
jle
add
mov
pop
rcl
scas
pop
loope
pushf
and
imul
add
and
inc
jmp
xor
stos
add
xor
adc
push
hlt
mov
adc
xor
pop
sub
call
rolb
jmp
fldenv
std
jmp
ja
std
cs
xor
fidivrl
mov
lahf
sti
lahf
arpl
xchg
std
add
xchg
jne
inc
mov
sti
jne
jb
fs
cld
add
mov
mov
add
add
add
sub
xor
lcall
mov
mov
ljmp
sti
push
jecxz
xor
jmp
movb
xchg
pop
sbbl
jno
adc
lret
lea
push
jmp
inc
inc
jbe
xor
inc
or
mov
jne
inc
andl
aas
add
fistpl
push
ds
popf
dec
add
push
cmp
call
sub
push
ljmp
into
ret
stc
xchg
pop
std
negl
sbb
mov
add
testl
jge
loopne
pop
xchg
sub
div
mov
ljmp
lods
xlat
add
jae
icebp
lahf
push
push
jb
pop
std
nop
xor
ret
orb
fxch
nop
dec
mov
aaa
add
mov
dec
mov
sbb
and
add
mov
mov
mov
jmp
outsb
out
aaa
scas
mov
test
xor
sbb
loop
ds
ret
add
mov
out
inc
inc
dec
fmulp
and
mov
clc
ds
sub
ret
mov
movsl
les
insl
add
repz
aam
ds
jmp
mov
ret
xor
stos
hlt
xor
cltd
in
es
push
mulb
adc
or
jmp
mov
pushf
imull
sub
repz
pop
and
mov
push
mov
sub
test
dec
fsubr
inc
jmp
xchg
xchg
leave
sub
xchg
xchg
sub
ja
sub
add
repnz
ljmp
push
mov
push
hlt
cld
jg
xor
inc
mov
sbb
mov
shlb
add
repz
aaa
add
xor
inc
dec
xor
cmp
inc
push
out
push
or
xlat
push
mov
lcall
or
push
in
push
decl
sub
cmp
popa
add
cmp
sub
call
mov
sbb
jae
mov
sar
dec
rolb
inc
or
add
add
add
loop
repnz
testl
jmp
mov
mov
jmp
scas
mov
mov
mov
lods
and
push
mov
add
lods
push
sub
out
or
stos
adcb
or
cmp
call
or
adc
sar
dec
or
out
scas
add
dec
pop
dec
inc
cmpsl
out
jmp
inc
add
mov
fucomi
add
pushf
pop
into
push
stos
stos
pop
js
jecxz
mov
jmp
loope
cli
jmp
divl
xchg
lods
mov
shlb
std
mov
stos
fwait
or
sbb
mov
inc
ret
jb,pt
clc
pop
and
leave
cld
xor
sub
fadd
sbb
ret
xor
testl
add
add
inc
fcomip
xor
mov
lock
out
mov
add
dec
and
out
pushf
sbb
add
mov
mov
std
xchg
aam
inc
inc
jmp
rolb
jmp
lds
aad
inc
adc
xor
test
hlt
sarl
cwtl
scas
jmp
add
mov
xorb
imul
les
adc
repz
sbb
jns
clc
cmp
leave
mov
movb
xor
push
gs
push
pop
jmp
add
ret
xor
inc
into
test
inc
clc
adc
mov
jmp
xor
sahf
xor
jmp
or
addl
add
adc
cld
test
das
xchg
rcrb
push
aad
jge
ds
add
push
lea
in
testb
add
inc
fmuls
inc
push
fdivrs
cmc
push
xor
ja
inc
idiv
jecxz
in
testl
sti
or
add
dec
sti
rclb
cmpl
sub
jl
push
push
stc
nop
bound
or
test
roll
fimuls
fmuls
add
aaa
sbb
or
xchg
adc
jl
inc
jbe
cmp
testl
scas
pop
mov
cmp
aas
test
out
stos
xor
js
testl
inc
lods
arpl
sbb
add
add
add
push
and
add
sbb
mov
std
and
add
mov
sti
test
mov
mov
nop
xlat
ljmp
sbb
push
popl
sub
ja
push
xlat
sbb
jl
outsl
repnz
testb
jecxz
divl
dec
movsb
sub
stc
cld
ds
add
icebp
cmp
mov
mov
add
add
add
xchg
cli
mov
pop
adc
out
add
fs
xchg
jle
jae
shlb
or
adc
jae
fidivl
add
xor
or
and
loop
dec
add
hlt
cs
ret
cmc
jg
call
hlt
sbb
sbb
push
gs
add
scas
std
sub
add
add
add
adc
std
jne
cmp
pop
push
fisubrs
sub
mov
add
sbb
adc
xor
mov
mov
in
jns
add
xor
push
int
push
inc
push
test
call
mov
shll
aaa
mov
xor
roll
add
in
push
ss
add
add
add
add
xor
cmp
add
daa
cli
cld
add
popf
adc
dec
mov
add
in
cvtps2pi
dec
sbb
jmp
decb
lret
xor
fnsave
in
add
dec
push
cmpsl
into
hlt
jnp
dec
add
loopne
jmp
sbb
scas
dec
test
xchg
inc
dec
jp
xlat
push
add
pusha
sti
mov
mov
add
inc
jae
mov
inc
pop
sub
cmp
sti
or
testl
mov
clc
mov
add
mov
sbb
dec
adc
sbb
jmp
sbb
aam
cmp
ret
sbb
dec
in
fadd
add
inc
sahf
repnz
add
inc
jl
fists
mov
add
fcmovb
shrb
jmp
add
mov
sbb
sub
xchg
bound
mov
test
dec
in
fld
xorb
add
adc
out
aaa
or
fwait
pop
popf
mul
jne
jae
shlb
add
imul
mov
add
add
add
add
addr16
jg
arpl
add
inc
jl
sub
lret
pop
mov
xor
insl
cmp
adc
hlt
xor
mov
or
sub
xor
mov
mov
push
std
aad
stos
orl
add
inc
cmp
mov
or
xlat
jo
jmp
hlt
xor
add
add
add
mulb
inc
add
pop
xor
je
cwtl
dec
and
jns
decl
out
stos
aad
or
je
cld
dec
push
test
sbb
lcall
loope
jmp
cmp
inc
push
mov
jne
adc
push
lods
dec
adc
in
addr16
scas
lock
test
ret
xchg
mov
stos
jecxz
fs
mov
dec
push
jno
test
add
pop
xchg
aad
add
cmp
sbb
cmp
push
or
call
or
adc
mov
jnp
aam
testl
idivb
mull
dec
std
call
or
clc
sar
rorl
jae
pop
in
push
lock
cld
add
add
fmuls
clc
addb
add
add
add
add
dec
and
inc
std
mov
rolb
negl
adc
or
inc
add
into
or
dec
int
mov
hlt
add
add
jae
xor
out
arpl
mov
lahf
mov
cmp
fs
les
lods
or
sub
push
aaa
out
add
xor
add
arpl
pushf
push
add
xor
incl
popf
pop
dec
and
and
cmovno
mov
imul
mov
add
xorb
out
mov
mov
sub
out
cmc
adc
out
cli
push
into
clc
movsl
mov
out
adc
divb
add
das
sahf
sbb
inc
ds
pushf
fs
or
or
std
push
leave
insb
and
test
add
add
add
add
adc
inc
push
add
cmp
adc
fiadds
adc
es
adc
sti
jae
and
push
bound
outsb
clc
insb
xor
inc
xchg
cmc
cmpsl
inc
xchg
mov
aaa
and
cmp
cwtl
jae
sub
std
ss
or
sbb
addl
incl
test
add
add
bound
push
push
jns
fldt
inc
push
je
lea
int
inc
push
add
faddl
inc
dec
cwtl
adc
mov
leave
or
not
sti
bts
or
sub
je
ret
jbe
xchg
xorl
add
pop
pop
call
pop
xor
jne
imul
imull
inc
pop
xor
add
loope
incl
fildl
push
jo
lock
repz
pop
shl
sbb
mov
pop
mov
pop
fwait
push
sub
add
and
adc
add
testl
negl
jbe
ja
add
add
inc
xor
mov
setne
jnp
mov
daa
jb
sub
jo
add
imull
pop
xchg
jo
inc
or
mov
out
ja
inc
pop
inc
lcall
cld
mov
out
ja
sbb
inc
frstor
iret
clc
mov
out
ja
cmc
pop
mov
out
add
lcall
adc
fimuls
icebp
leave
repz
xor
jbe,pt
icebp
outsl
jl
xor
add
bound
lret
sub
jb
js
add
dec
mov
outsb
xor
jo
jecxz
call
int
psubsw
jmp
dec
int3
aad
hlt
xor
hlt
arpl
cld
dec
and
jmp
add
add
add
or
mov
add
push
mov
pop
inc
fs
test
insb
leave
addl
pop
or
imull
nop
and
std
out
cmp
adc
call
jnp
add
movsb
or
add
ss
dec
mov
add
mov
push
jmp
mov
sbb
mov
mov
pop
mov
add
mov
pushl
fists
int
lcall
mov
xor
cmp
imul
mov
add
orl
call
mov
xor
xchg
mov
jbe
cltd
pop
mov
push
adc
add
mov
insb
das
inc
std
call
xchg
xchg
add
idivl
sti
lock
xchg
add
testl
stos
pushl
in
push
sbb
add
jbe
add
cmpsb
fsubs
pop
mov
std
and
jno
pusha
push
pop
jp
mov
je
add
add
add
add
add
jae
cmp
fwait
jle
call
xor
fmuls
out
mov
out
divb
pop
scas
mov
sti
push
jbe
insl
sub
lcall
add
out
negl
in
js
jb
pop
sub
testb
inc
pop
enter
xor
push
jne
out
and
in
jl
iret
fisubrs
push
pop
test
inc
and
mov
test
hlt
push
xchg
pusha
or
out
xor
clc
or
fprem1
mov
push
pop
imul
or
adc
xor
pop
or
xorl
std
pop
cmp
pop
jmp
rorb
jg
fdivl
add
scas
mov
hlt
sbb
js
hlt
xor
call
push
ss
bound
xor
adc
mov
push
insb
mov
lock
inc
mov
cs
inc
pop
insb
and
andl
xor
cmp
in
insl
push
lea
sbb
push
xor
pop
call
inc
out
js
push
or
xchg
xor
mov
add
add
add
xor
add
sub
push
lea
fisttpll
add
sub
add
pop
fisttpll
add
enter
push
cvtps2pi
lea
fisttpll
add
insl
add
das
repnz
pop
cmp
add
jb
ja
fcomps
rorl
divl
add
scas
mov
cmc
push
scas
cmp
add
nop
xchg
clc
sbb
pop
ds
mov
les
cmpb
mov
mov
pop
mov
into
in
out
mov
xchg
sub
mov
out
add
cmpsl
icebp
cmc
jl
adc
xor
mov
add
xor
add
add
sysenter
out
jo
mov
xbegin
lock
iret
loopne
test
sub
xchg
push
xchg
cmp
ret
push
xchg
jo
outsb
mov
sbb
call
mov
pop
aam
and
fdivl
add
out
xor
call
sldt
add
add
add
add
mov
inc
add
or
lock
dec
xor
sbb
jg
add
popa
aaa
mov
dec
in
pop
push
mov
pusha
call
insl
xor
or
cmp
cmp
sar
sub
or
mov
xchg
sahf
push
sbb
iret
ss
std
cwtl
ss
aam
and
lahf
jb
fucomp
pushf
mov
xchg
add
pop
push
dec
pop
dec
dec
loope
push
test
sub
push
data16
gs
xor
or
mov
cmc
and
push
push
loope
adc
pop
xor
incl
adc
mov
incl
mov
push
mov
insl
or
jno
das
lcall
add
add
sti
jne
mov
cld
inc
enter
mov
add
add
add
add
mov
je
scas
incl
filds
mov
xor
pushf
rorb
and
jbe
pop
in
test
dec
test
push
jae
sub
or
mov
dec
sti
mov
sti
std
hlt
ret
jae
psubsb
fadds
mov
ret
add
push
call
add
jnp
xchg
cmp
aaa
std
push
lahf
xchg
sbb
pop
ror
cmp
iret
cli
jg
mov
adc
pop
inc
pop
dec
ret
iret
push
jl
or
test
adc
sti
sar
dec
xchg
push
hlt
test
mov
mov
pop
cmpsl
pop
mov
ret
add
lods
es
xchg
call
adc
sub
maskmovq
negl
daa
add
mov
cmp
or
ret
lock
setg
mov
outsl
ljmp
jl
mov
xor
shll
mov
out
mov
xorl
mov
push
cmp
jne
mov
mov
gs
inc
mov
in
xor
push
and
std
cld
or
inc
jmp
jmp
jns
inc
jae
insb
push
or
out
and
jae
into
pop
cld
hlt
xor
cmp
jle
into
mov
mov
dec
addl
std
cmp
inc
sub
nop
add
orb
in
orb
hlt
xor
pusha
sbbl
push
insb
pop
add
andl
cs
mov
add
fiaddl
lds
dec
add
inc
inc
jae
add
push
std
into
mov
sbb
xchg
xlat
into
call
fildl
and
add
mov
mov
push
mov
incl
mov
cmp
dec
add
mov
pushl
in
or
add
hlt
sbb
or
push
testl
adc
sar
push
scas
adc
mov
push
ljmp
pop
ds
or
je
xor
std
jecxz
xchg
add
add
add
adc
std
pop
dec
cmp
add
cmp
roll
mov
scas
or
cmpsb
dec
sbb
xor
std
sub
mov
sbb
or
add
nop
in
adc
xor
fdivs
add
adc
xor
ret
pusha
data16
cmpsl
add
xor
add
pusha
push
adc
cmpsl
add
imul
pusha
xchg
push
imulb
pop
inc
mov
icebp
add
stos
fimuls
pop
es
add
lock
or
fdivrl
add
out
stos
jmp
xor
adc
fmuls
cli
add
xor
scas
cli
data16
jne
test
imull
add
insb
add
test
jb
pusha
std
mov
hlt
test
add
sub
js
hlt
test
hlt
test
mov
hlt
mov
fbstp
in
or
cld
lret
mov
jne
test
push
sti
ljmp
sti
dec
aas
sub
fs
and
cli
subb
clc
sbb
icebp
jae
add
clc
jmp
cld
pusha
std
add
sub
push
add
adc
jb
add
jne
mov
in
scas
test
clc
add
sub
ljmp
add
fidivl
xchg
imul
push
lret
dec
xor
mov
push
jl
je
fsincos
je
xor
adc
add
add
add
es
add
cmp
add
sti
push
cmpsl
mov
dec
mov
xchg
push
neg
xchg
and
xor
jge
inc
jg
das
jp
mov
jl
fwait
ljmp
xchg
aam
jb
mov
cld
psadbw
enter
testl
inc
or
movsb
jge
cmpsb
add
mov
xor
add
add
add
xchg
cmp
cmpsl
sti
testl
add
clc
faddl
push
out
add
out
jle
sti
jl
xchg
inc
loope
or
cmpsb
sarl
test
fldcw
mov
add
xchg
xor
outsb
mov
jp
jno
je
fildl
and
outsl
jbe
push
cmp
push
test
mov
jecxz
pop
or
jle
arpl
dec
jle
mov
sub
movsb
sub
arpl
shl
cmpsb
sub
mov
xor
inc
test
pop
add
andb
rolb
mov
mov
mov
frndint
mov
clc
jmp
pop
push
cmpl
add
add
add
add
mov
pusha
push
jg
outsb
sub
jb
repz
cld
fcompl
or
jmp
or
lods
sbb
pop
and
or
or
and
adc
jnp
jne
hlt
std
xor
xor
push
jmp
pop
aas
jne
sti
sti
xor
cmp
aad
mov
inc
add
inc
xor
add
add
add
inc
sti
int
test
or
lcall
mov
add
mov
add
fimuls
jne
ja
cld
out
lock
xor
decl
inc
hlt
cmc
or
ret
clc
bswap
dec
add
push
push
stos
jg
inc
xchg
inc
pusha
or
inc
jno
add
clc
ljmp
add
rol
xor
sub
mov
fcomp
mov
rolb
cmpb
sbb
or
ss
sbb
pop
xlat
inc
mov
andl
mov
jge
xchg
jmp
jae
mov
mov
lret
push
in
push
mov
mov
add
shr
aas
fwait
mov
stos
jmp
sbb
movsb
je
pop
addb
sbb
mov
xor
add
xor
test
cmpsl
pshufw
jle
jg
mov
sbb
mov
outsb
pop
sarl
scas
shll
sub
jp
stc
cli
cli
outsl
sub
das
add
sub
push
pop
mov
push
lds
in
mov
inc
mov
sub
cs
xor
sub
pop
lods
and
flds
lods
xor
adc
outsb
cmp
ljmp
jbe
and
test
mov
scas
dec
lds
or
nop
jns
lds
pop
js
gs
add
je
adcl
test
push
sbb
or
xor
mov
xor
fcomi
test
clc
jmp
iret
or
jg
inc
cmp
jae
loopne
pushl
sahf
adcl
inc
add
sbbb
add
xchg
jg,pn
sbb
jle
fidivs
add
add
cmp
xchg
mov
test
xor
test
jae
add
jb
test
add
push
sti
add
xor
rorl
lods
add
push
add
mov
in
mov
mov
jo
fstpl
add
repnz
out
sbbb
test
xor
mov
add
loop
pop
mov
js
inc
out
mov
inc
out
xchg
mov
inc
adc
jge
pop
xchg
mov
inc
out
mov
mov
add
pop
add
or
jae
lahf
inc
add
pop
add
lds
jl
clc
mov
mov
or
jmp
fildl
pop
fucom
dec
mov
or
sbb
call
jl
clc
xorb
div
mov
add
divl
addr16
out
mov
fdivl
jae
idiv
mov
sub
cmc
test
je
es
pop
rcr
ljmp
out
fiaddl
add
test
test
test
adc
jle
jno
inc
and
flds
sub
add
add
add
testl
out
insl
push
jg
sub
fmull
fistpll
testb
xor
bound
add
loope
cld
pop
divb
add
hlt
cmp
sbb
xor
clc
jp
or
inc
stos
fdivl
roll
xlat
push
testb
add
xor
xor
test
add
or
cld
cmpsb
ja
or
jne
add
iret
jg
bound
or
jl
cmc
subl
xor
faddl
stos
aad
pusha
mov
inc
pop
clc
cld
dec
ja
or
decl
inc
or
idiv
ja
xchg
std
out
mov
lcall
sub
call
inc
add
ja
hlt
lea
subps
std
fidivs
adc
or
in
lock
inc
add
outsl
add
sahf
push
or
mov
inc
or
or
mov
add
jb
jne
inc
mov
jne
or
push
testl
add
mov
add
testl
scas
sub
jg
and
sbb
daa
sbb
push
mov
mov
sub
add
sbb
add
xchg
sbb
in
and
inc
fisttpll
jp
je
testl
xor
xor
ret
clc
cmpl
pop
js
cmp
jns
lret
fsubs
jae
inc
je
incl
add
add
add
scas
in
je
mov
bound
int3
jl
movsb
fwait
pop
mov
movsb
imul
icebp
out
mov
cmpsl
mov
adc
pop
je
and
insb
shrl
addl
dec
lock
inc
lock
and
inc
push
adc
xor
aaa
jb
movsb
mov
lret
es
xlat
ret
add
dec
push
lock
jg
xor
add
mov
add
or
imul
aaa
jmp
inc
push
cmc
or
push
out
cld
lods
jae
ficomps
xor
test
mov
add
clc
xchg
mov
pop
roll
add
add
add
add
scas
xchg
ficoml
in
stc
out
dec
cmp
imul
jae
iret
or
mov
add
push
insb
mov
xchg
mov
hlt
add
in
rcl
mov
aam
sti
jmp
scas
mov
mov
cmpsl
fmull
push
loop
mov
test
imul
divb
add
add
add
ficompl
jae
aaa
ret
arpl
mov
dec
sbb
push
xor
aaa
cmpsl
div
jne
imul
dec
popf
xor
sub
je
inc
movsl
cmp
popf
in
cmp
sbb
cmpsl
mov
fimuls
test
cmpsb
pop
insb
sbb
mov
sub
in
and
cld
add
aas
ja
or
push
not
xchg
pop
push
insb
push
jle
in
int3
mov
call
cld
mov
lds
out
add
jne
stos
das
nop
push
not
and
arpl
cmp
mov
shll
push
loopne
dec
movsb
sub
mov
leave
cmp
sbb
inc
xor
mov
loop
and
addb
add
add
fwait
mov
mov
outsb
jne
mov
cmp
out
loop
out
jae
jmp
add
inc
mov
mov
mov
sub
outsb
and
adc
loopne
leave
inc
xorb
jae
add
jae
lea
std
xchg
xor
mov
mov
orl
pop
or
mov
add
add
add
add
fs
in
call
js
std
sub
call
call
jo
xchg
jle
jo
insb
mov
test
xor
data16
mov
ds
jmp
adc
mov
cld
ss
jb
xchg
adc
or
mov
xor
xchg
add
pop
add
dec
testb
insl
inc
push
out
xchg
mov
out
pop
call
cmc
lcall
jmp
sti
push
ret
loopne
jecxz
sti
incl
hlt
loopne
adc
test
and
xchg
or
pop
hlt
jne
call
mov
stos
in
fwait
inc
or
cmpsl
repz
xchg
xor
call
cmp
xor
test
xor
add
mov
cvtps2pd
add
add
les
xchg
aas
test
add
fucomi
adc
jbe
dec
into
xlat
jb
addl
testl
sbb
dec
stos
les
jle
jo
or
cmpsl
jle
push
xchg
adc
ret
hlt
xlat
add
pop
pop
movsl
cld
sub
out
sbb
inc
jle
cmp
mov
xchg
stos
jp
xchg
pop
insb
popf
adc
sti
out
jl
adc
sub
and
mov
stc
ret
shlb
sbb
jnp
add
ljmp
add
fistps
xor
jno
pushf
and
ficompl
sub
mov
in
mov
jmp
xchg
cltd
out
jmp
aad
dec
lfs
outsb
jae
lea
repnz
daa
outsb
imul
jno
es
jle
pop
mov
or
cwtl
clc
out
xor
addb
add
mov
add
add
std
flds
aas
and
fsubrp
and
orl
in
jmp
dec
loopne
sbb
push
cmpsl
mov
add
sub
movl
jmp
cld
xor
sbb
das
andl
fdivs
outsb
add
mov
pushf
cld
in
in
outsl
or
test
xor
add
test
in
sub
mov
or
add
inc
jg
out
test
ret
imul
insb
test
cld
inc
daa
adc
mov
or
sub
out
push
mov
push
lea
and
add
ret
and
jb
push
mov
mov
fsubr
jo
sti
jmp
insb
or
add
add
pop
xor
add
mov
or
inc
sti
call
xor
xchg
mov
inc
pop
call
notl
push
ud1
jmp
loopne
out
pop
inc
or
enter
dec
inc
call
jnp
xchg
inc
push
int
mov
iret
cmc
jge
aad
cwtl
push
jg
sti
pop
sbb
add
sbb
call
jle
xor
push
jmp
xor
mov
sbb
push
test
xor
sbb
cmpsl
outsl
pop
dec
not
sub
shlb
sbb
insl
xlat
fcompl
mov
xor
pop
jmp
mov
fcmovu
push
sti
f2xm1
push
cmc
ftst
push
neg
call
xchg
clc
in
or
pop
out
mov
cmp
add
add
add
clc
xor
xlat
jo
mov
lahf
fidivrs
in
jmp
test
cld
xor
arpl
and
mov
divl
das
nop
idivl
or
outsl
add
ja
call
cmp
lods
sbb
mov
insl
test
mov
in
jecxz
cld
fiadds
cli
popa
adc
jmp
add
add
add
fsubs
sub
jecxz
inc
jb
xchg
dec
mov
call
jb
dec
push
jo
mov
in
scas
mov
enter
in
clc
lock
jns
clc
fnstcw
sub
mov
dec
cmpl
xor
jmp
rol
call
push
mov
add
add
add
add
xchg
xor
add
xor
addl
call
add
outsl
sub
mov
xlat
pop
loope
jg
into
push
nop
add
das
push
add
cld
dec
mov
adc
into
sub
les
dec
sti
mov
push
mov
popf
data16
or
data16
test
dec
add
loope
push
adc
pop
cmp
xor
push
sub
addl
std
jno
jae
fldcw
fmull
or
mov
cmp
std
jl
int3
cmp
pop
mov
sti
dec
dec
dec
rcl
pop
pop
movsl
inc
add
cmp
mov
xor
pop
std
je
add
add
dec
pop
jae
pop
xchg
pop
or
jns
std
jl
or
xacquire
faddl
std
loop
sub
lret
push
sbb
dec
cmp
inc
adc
subl
sti
sbb
test
fisubrl
sub
mov
adc
pop
jecxz
cmp
out
adc
out
or
out
add
mov
jmp
imul
je
push
repnz
cmp
mov
mov
test
fmuls
jp
pop
jo
xchg
xorl
loope
shlb
imul
rorl
imul
or
mov
add
and
stos
or
loopne
adc
js
add
xor
xchg
pop
mov
xor
repz
mov
jmp
pop
lock
hlt
xor
and
or
mov
bound
push
mov
loope
jno
insb
ret
fs
add
mov
je
aaa
mov
push
and
add
add
add
add
insl
test
mov
je
mov
outsl
pop
inc
aam
cmpsw
iret
inc
setno
cmp
pop
xor
cmp
shl
fchs
fcoms
sahf
xor
jae
stos
ds
xor
in
jge
sti
mov
pop
sti
rsqrtps
add
mov
pop
add
sti
push
mov
cmp
or
mov
data16
or
add
add
add
mov
adc
scas
in
push
or
add
pop
enter
cli
test
lahf
and
adc
pop
sub
out
les
mov
test
out
jb
add
dec
jae
xorb
mov
orb
push
sbb
std
add
lods
mov
imul
dec
inc
or
lock
divl
out
mov
outsl
mov
out
lea
int3
mov
out
jge
loopne
add
mov
mov
sbb
sub
adc
out
sbb
gs
mov
cmpsb
cmp
mov
hlt
mov
sbb
out
sbb
gs
addb
add
add
add
add
call
jecxz
inc
das
lcall
lock
or
fisttps
mov
iret
jg
enter
fnsave
mov
repnz
in
hlt
orl
aaa
lock
xor
cli
push
call
cmc
mov
call
repz
sbb
mov
call
add
sub
out
repz
jb
inc
mov
and
mov
sub
jae
mov
fcomip
sub
sub
add
and
mov
jo
cmp
pop
or
fadd
sub
xor
std
sbb
std
push
and
add
mov
add
mov
rcl
xchg
sti
cmc
add
and
push
push
data16
inc
pop
inc
clc
fstpt
je
lret
outsl
or
pop
fsubr
mov
add
pop
fmuls
mov
call
enter
dec
adc
cli
in
mov
pop
jno
push
out
std
out
mov
je
and
xchg
out
je
add
repz
add
add
add
add
int
dec
icebp
xchg
cld
js
lock
pop
mov
push
jb
shl
dec
std
movsb
pop
xchg
mull
or
xor
das
addl
mov
movsl
out
cld
jp
enter
pop
or
lock
pop
dec
lahf
cmp
inc
sarb
iret
inc
mov
add
jecxz
repnz
or
sub
mov
outsl
sbb
div
lods
xchg
xor
cwtl
cmpsb
adc
stc
imul
inc
push
xor
neg
fs
les
xchg
in
daa
add
cmc
loop
aaa
sub
divl
out
mov
movsl
lret
fdivl
out
arpl
mov
add
xor
or
mov
add
add
add
mov
pop
mov
pop
xor
jle
aad
sbb
lock
add
ljmp
cmp
shll
ja
fisubrs
or
push
mov
shrl
jl
jne
clc
jmp
data16
stos
je
adc
jbe
adc
hlt
xlat
push
xchg
pop
adc
sub
scas
ret
cmc
add
insb
lea
lock
add
add
add
add
mov
xor
push
sub
idivl
gs
sub
sti
out
add
cld
jae
aad
mov
out
shl
orl
insl
sahf
push
mov
mov
cmp
ret
jmp
jb
jmp
hlt
rcr
bound
sub
idivl
add
add
add
add
push
xor
ja
std
decl
mov
cli
nop
jmp
in
mov
je
jno
mov
outsl
leave
test
cmp
inc
sub
test
mov
add
inc
hlt
scas
mov
clc
scas
cmp
mov
mov
dec
cltd
cmpl
enter
pop
stc
mov
divb
add
add
add
xor
mov
and
or
pop
or
add
shl
in
js
ja
imul
mov
loope
and
clc
or
outsl
add
testl
jae
mov
addr16
clc
cs
xor
dec
inc
or
testl
add
leave
ja
jmp
fadd
int3
xchg
xor
ljmp
divl
out
mov
mov
xbegin
fwait
out
not
mov
es
aaa
or
mov
inc
push
add
cmp
mov
cmpl
mov
test
imul
xor
repz
jmp
or
xor
negl
cmc
inc
push
or
jo
idivl
cmp
or
push
lods
ja
add
hlt
popa
and
in
outsl
push
add
movsl
int
jg
aam
lods
cld
mov
jne
jl
adc
stos
mov
bound
in
outsl
aam
cmp
cmc
das
add
cld
popa
clc
cmp
inc
adc
xor
add
fldcw
andl
add
add
dec
insb
xchg
in
popa
clc
cmpl
sub
aad
ljmp
xor
fisubs
inc
in
out
in
cltd
int3
or
addr16
je
sti
xlat
decl
xchg
mov
push
testb
bndldx
decl
mov
in
add
xlat
orb
loope
pop
mov
pop
hlt
in
or
or
jg
pop
xlat
jle
pop
xor
mov
testl
push
xor
inc
xchg
addl
mov
add
or
jae
dec
and
lock
cmp
push
cmp
pop
fistl
outsb
test
sbb
or
aaa
xor
add
add
add
add
pop
in
mov
or
jne
testl
cmp
jge
mov
shlb
cmpl
dec
xchg
pop
jae
dec
cmp
sbb
mov
mov
test
xor
push
jae
jno
xor
sbb
mov
jnp
fidivs
lods
pop
idiv
imul
jbe
cmp
sbb
roll
outsl
imul
out
fbstp
jg,pt
pop
lock
fadds
mov
call
pop
int
rcrb
or
inc
or
shl
testl
out
dec
aas
daa
add
adc
outsl
jae
jp
aam
or
pop
imulb
add
add
add
add
je
stos
addr16
mov
add
adc
inc
push
and
push
in
mov
mov
xchg
andl
shl
iret
adc
gs
pop
push
stos
test
or
ljmp
dec
mulb
cmpsl
add
and
inc
jmp
hlt
or
hlt
clc
cmpb
jno
xchg
inc
leave
sub
repz
lds
add
repz
inc
jge
sbb
pop
fidivrl
mov
in
in
lds
int3
xor
push
xchg
cmp
jbe
xor
sti
jbe
xor
sti
jbe
sub
imul
sti
jbe
sub
imul
sti
jbe
sub
imul
sti
jbe
sub
imul
cmc
je
stos
aaa
ss
shrb
imul
add
subb
call
cltd
mov
sti
push
lcall
jmp
inc
jmp
sbbb
sbb
and
dec
mov
ficompl
in
je
or
xor
add
inc
test
cld
fidivs
add
out
shlb
test
flds
xor
add
jo
fcoml
mov
cld
cwtl
inc
adc
push
sbb
mov
push
daa
sub
adc
in
sar
push
shlb
xor
lret
lods
adc
hlt
je
out
mull
lcall
pop
add
stos
adc
add
add
mov
sub
je
call
sti
jg
mov
xor
fs
cmc
mov
adc
fidivrl
ja
ret
imulb
js
and
xor
sub
out
repz
mov
inc
out
fwait
les
mov
mov
ror
popl
je
aad
icebp
or
pusha
iret
cld
jmp
add
pop
cmpl
into
fs
cli
mov
mov
cli
out
incb
lretw
mov
sub
sbb
cwtl
adc
dec
jne
roll
sub
sahf
push
add
hlt
nop
imul
hlt
inc
and
hlt
out
pop
fists
call
add
add
add
adc
cld
add
dec
and
inc
mov
jmp
fstpl
inc
cmp
lea
sbb
hlt
ss
mov
jo
divb
add
sti
push
mov
and
mov
xor
ss
sti
jmp
and
mov
outsb
loopne
xor
mov
sbb
outsb
adc
push
mov
adc
add
add
add
add
xor
inc
and
pusha
mov
push
push
testl
or
neg
mov
and
adc
inc
add
jae
pop
jge
jmp
add
imull
adc
in
add
xchg
in
inc
add
and
sbb
adc
movb
jne
add
add
or
daa
jb
loopnew
add
call
pop
sub
rcrb
pusha
ret
add
call
cld
sub
xor
scas
xor
xchg
push
add
fistpl
in
into
dec
call
and
push
xor
das
pop
dec
adc
aaa
lea
and
inc
arpl
adc
cltd
cwtl
lret
jge
add
repnz
lret
and
mov
jb
shrl
or
or
ja
lret
testb
cmc
fadds
pusha
bound
sub
sbbb
sub
lea
incb
jl
add
aam
mov
cmp
jo
test
sarl
jp
mov
add
jns
pop
insb
xor
or
repz
clc
pusha
xchg
negl
xchg
mov
movsb
call
out
mov
dec
insb
es
call
fs
lcall
add
cmp
mov
lret
xor
add
shlb
leave
rorb
add
add
add
add
enter
and
lret
fnsave
rclb
jo
adc
xor
inc
orl
lcall
insl
add
arpl
jns
mov
decl
mov
sub
lds
mov
lods
add
cmp
add
add
or
into
xor
add
mov
add
add
add
add
sub
aam
xor
call
xorl
leave
inc
not
pop
aam
sbb
test
xchg
flds
add
mov
inc
testl
mov
fidivs
std
jle
inc
push
push
inc
sbb
or
adc
add
enter
pop
in
jmp
pop
pop
pop
insb
fwait
pop
ret
mov
out
push
xor
sub
subb
pop
mov
aad
jb
cltd
add
les
adc
icebp
add
jb
int3
loopne
jns
lahf
and
ja
mov
push
std
fdivs
sbb
inc
out
loopne
mov
jo
repz
in
outsb
out
adc
jae
add
sbb
outsb
dec
jmp
mov
jmp
mov
daa
xorl
sbb
stos
data16
add
ret
pusha
push
lahf
xor
outsb
outsl
add
jno
jae
and
xor
rol
cmp
bound
and
shrb
cmp
xchg
sbb
cld
mulb
sbb
cld
out
adc
and
add
sbb
or
and
adc
ret
cld
scas
repnz
sbb
dec
std
jno
xor
ljmp
ljmp
and
sbb
je
sbb
data16
mov
hlt
xor
inc
sti
push
std
dec
daa
call
jbe
gs
push
and
aas
sbbl
aaa
pop
mov
xor
add
add
add
add
sti
mov
and
arpl
add
sub
or
xor
jno
iret
roll
mov
sti
jne
pop
call
and
movl
push
lds
outsb
cmc
aas
add
mov
aam
adc
push
xchg
push
pop
add
test
neg
dec
push
gs
jae
or
push
iret
rcrb
dec
jg
lods
xor
dec
in
push
push
or
mov
or
sti
add
testl
stc
cld
dec
mov
cld
pusha
loop
xlat
pop
jnp
mov
dec
fisubrl
jb
nop
push
dec
xchg
push
pushl
sbbb
stc
dec
add
pop
ds
xorl
jl
divb
out
insb
scas
mov
cli
add
scas
ds
rep
inc
add
xor
cmp
cmp
les
push
loope
inc
subl
jo
push
out
xor
jp
stc
xor
loope
jl
stos
in
sub
leave
imul
add
add
add
arpl
jne
mov
stc
insl
insl
push
push
jle
ss
add
mov
test
ret
jmp
nop
mov
add
ret
cld
mov
hlt
mov
mov
sub
dec
fs
dec
cs
les
test
push
mov
test
jge
add
lds
push
mov
movb
add
add
add
add
sub
sub
addb
mov
vrcpss
mov
sbb
jo
imul
cld
cmpsb
dec
push
fcomps
adc
cld
add
mov
or
es
xchg
in
jo
cwtl
add
or
testb
or
cmp
pop
daa
in
add
jae
call
add
add
add
or
dec
pop
push
push
stos
jno
data16
hlt
adc
add
mov
negb
fdivr
cltd
mov
movlps
cmc
push
mov
cld
decl
add
sub
pop
sub
clc
lcall
push
inc
add
push
aas
cld
je
hlt
or
inc
add
negl
push
cmp
std
or
xor
sbb
in
pop
not
dec
mov
mov
aas
clc
inc
mov
fmul
dec
mov
idiv
enter
ret
pop
into
xorb
outsl
sub
and
cmc
jb
mov
add
push
cld
mov
rclb
js
lock
ljmp
pop
push
jne
jb
cmp
cmc
mov
cmc
adc
idivl
lahf
adc
inc
xrelease
jp
adc
sbb
xor
int3
aaa
data16
ja
mov
inc
divl
lcall
pushf
out
testl
adc
lock
jno
out
je
jp
adc
mul
cwtl
fadds
lods
ljmp
enter
mov
cmp
out
pop
out
es
mov
xorb
mov
lcall
je
mov
sbb
jb
outsb
hlt
dec
insb
xor
std
dec
jbe
or
popf
sub
jo
ss
mov
mov
sti
push
stos
mov
add
add
add
add
leave
add
hlt
enter
mov
rclb
push
ss
aas
jno
bound
add
aas
add
es
sbb
and
mov
xchg
decb
mov
movsl
decb
mov
xchg
adc
test
pop
push
nop
cwtl
lret
popf
xor
add
add
add
ss
test
es
push
add
test
push
push
jno
call
jmp
lock
push
std
push
add
or
and
lahf
mov
jne
mull
dec
mov
leave
dec
push
les
aad
mov
add
mov
dec
call
insb
xchg
push
std
add
pop
mov
mov
mov
je
cs
je
push
int
enter
or
lret
mov
push
mov
gs
pop
mov
dec
loopne
mov
push
call
or
xor
fsubrl
or
pop
mov
jle
lds
jb
sti
lods
sub
mov
jmp
lea
mov
mov
divl
add
test
sub
jge
xor
pop
push
bnd
fisttpll
jl
dec
push
pop
xor
add
test
in
xchg
cmp
dec
add
lahf
pusha
addl
xorl
arpl
add
mov
fs
xor
push
leave
push
js
add
hlt
cmpsl
inc
fxch
cmpsl
inc
test
cltd
mov
fsubrs
test
xor
push
sar
jo
add
hlt
cmpsl
inc
test
inc
add
scas
enter
xor
fidivs
add
hlt
scas
bound
inc
and
inc
mov
outsl
clc
cltd
dec
cmc
dec
lahf
add
aas
or
sbb
jp
stos
jae
clc
jmp
hlt
xor
movups
add
mov
inc
xchg
jb
inc
leave
decl
jp
aad
in
pop
add
pop
add
xorb
in
add
sarl
in
cmp
xchg
jmp
add
add
add
add
sbb
and
fisubrs
jp
sahf
rclb
add
jae
test
inc
and
cmp
mov
push
pop
lahf
sub
pop
pop
insb
adc
pushf
pop
xor
xorb
inc
loopne
movl
lock
loopne
test
add
push
cld
jnp
ja
pop
dec
dec
std
inc
push
inc
or
jbe
add
out
enter
lahf
js
pop
scas
clc
push
test
inc
pop
cmp
cmpsl
inc
ja
hlt
cltd
push
xchg
rorl
xor
dec
sub
std
inc
push
or
mov
mov
xor
push
cmp
push
lcall
jg
jmp
das
sub
add
dec
add
ds
test
movsl
push
push
xlat
out
lds
or
js
aam
movsl
mov
aaa
jnp
leave
hlt
inc
sbb
stc
pop
jle
stos
jns
cld
push
jns
mov
fcomi
cmp
call
jne
dec
out
shll
fs
ret
xor
dec
or
mov
sub
cld
fs
mov
std
jl
mov
in
pushf
jp
jmp
rsm
jb
jo
jae
les
cld
into
int3
jo
jo
adc
mov
mov
jne
scas
push
jo
or
sub
dec
sub
push
xchg
repnz
call
jle
dec
outsb
push
into
outsl
jbe
xor
add
add
add
jo
jae
jbe
clc
add
cmp
lea
push
push
ljmp
xchg
push
mov
add
cmp
dec
ficoml
ret
test
ficompl
add
inc
or
jo
jmp
int
sti
pop
and
or
pop
xchg
int
and
jmp
mov
repnz
sti
mov
bnd
sbb
shr
xor
add
pop
and
loop
std
jmp
cld
push
gs
dec
push
negl
or
outsb
xchg
dec
inc
inc
clc
jp
jne
dec
sarb
mov
movhps
mov
xorl
flds
insb
pushf
call
std
ljmp
cld
movl
cmpsb
out
lock
add
jbe
cmc
inc
aas
cld
or
sbb
hlt
or
push
cmp
ds
lahf
enter
jbe
adc
pop
add
mov
push
movzbl
jb
sbb
mov
data16
icebp
push
or
inc
and
inc
jmp
outsb
sarl
sub
inc
pop
push
lds
out
testb
test
xchg
je
add
jo
mov
lret
aas
jo
dec
shrb
inc
imul
decl
outsl
sbb
mov
add
mov
aam
fldl
and
pop
fs
lods
cmpsb
outsl
ficomps
scas
das
jo
jmp
add
mov
int
std
cld
mov
stos
les
add
or
popf
push
mov
inc
xor
cmc
popf
xbegin
add
enter
xor
cwtl
call
adc
add
shrl
cld
into
jb
cld
cmp
dec
mov
mov
aad
sub
push
pop
jb
pop
shll
cmp
cmp
xor
add
xor
jo
cli
jnp
add
sub
sti
je
sbb
rcrl
xchg
add
cmpb
je
mov
movl
outsb
add
xchg
scas
je
sahf
pusha
je
adc
leave
sti
xor
jo
mulb
idiv
pop
aad
lea
insl
pop
ljmp
push
adc
pop
cmp
lret
or
sbb
add
clc
xor
pop
dec
mov
mov
xor
mov
xlat
cmp
mov
insl
pop
call
inc
shll
add
aad
rcrl
jmp
movl
jb
dec
aas
or
jns
fldt
out
mov
inc
add
sbb
jl
and
xor
pop
sub
sbb
jp
sbb
add
add
add
mov
ja
sbb
mov
push
inc
sbb
frstpm(287
xor
jle
pop
and
xor
sbb
out
mov
jp
sub
jmp
es
std
lret
cmc
ret
mov
add
xor
dec
mov
rcrl
jg
xor
add
insb
fstpt
outsb
js
out
scas
pop
out
andb
jno
bndldx
cmc
pop
std
mov
out
adc
adc
inc
daa
add
jne
pop
sbb
iret
mov
scas
repz
adc
xlat
sub
xchg
jmp
int
inc
int
add
aam
inc
inc
jmp
mov
mov
out
add
call
pop
add
loop,pt
pushf
pop
hlt
xor
negl
ljmp
mov
call
insb
xor
cltd
out
repz
mov
push
sub
xor
pop
add
or
loop
adc
lret
push
pop
push
incl
popa
das
mov
and
sub
mov
sub
mov
dec
cmp
mov
pop
push
xchg
add
xchg
inc
into
add
mov
xchg
sti
mov
test
sub
out
push
jmp
xor
mov
sti
ja
mov
jno
xchg
popa
push
and
xlat
imul
dec
sub
icebp
pop
push
xchg
add
ja
sbb
inc
inc
mov
cmp
ja
je
pop
push
mov
ds
jmp
xchg
add
jecxz
jne
push
push
sub
sbb
outsb
fsubr
sbbb
test
push
and
outsl
dec
call
pop
dec
call
add
int3
dec
jo
in
pop
inc
nop
jmp
mov
xor
in
daa
shl
cmpsb
mov
lret
stos
imul
mov
lods
lods
out
addr16
nop
lea
add
or
mov
add
add
xor
stos
loop
mov
adc
enter
add
add
add
jg
jno
cmp
cs
cwtl
or
jecxz
jno
push
pop
fstps
ds
idiv
jmp
or
loop
jno
jl
mov
divl
lods
xor
jl
punpcklbw
push
inc
popf
mov
cmp
mov
mov
addl
cld
xchg
mov
adc
hlt
cwtl
mulb
aam
mov
add
add
add
or
fildll
mov
hlt
mov
out
add
jne
aad
jl
xor
addl
lods
cld
push
cmp
add
les
mov
xor
push
add
std
add
mov
repnz
inc
or
add
adc
fs
push
lock
fstl
hlt
incl
sbb
and
incb
imul
dec
fisubl
sti
dec
repz
idivb
sti
inc
fidivrl
sbb
cmp
or
lcall
jo
std
jae
shl
jnp
notl
cmp
xor
xchg
aaa
std
jmp
or
add
add
add
jg
mov
dec
mov
xlat
xlat
xlat
cwtl
aad
add
push
in
sbbb
xor
jmp
dec
add
and
clc
jle
loopne
cs
test
xchg
add
aaa
sbb
pop
dec
add
add
inc
adc
fwait
xchg
inc
out
mov
daa
outsb
clc
pop
sub
out
aad
cld
je
or
mov
shll
mov
mov
loopne
mov
push
push
scas
loopne,pn
insb
xchg
add
in
imul
cli
jmp
or
fbstp
sarl
loopne
mov
pop
mov
or
lock
mov
jo
lds
jno
ds
jp
or
add
outsb
and
mov
sub
add
add
add
add
rcrb
ja
repz
xor
pop
nopl
aaa
xor
push
inc
call
jg
jb
jne
cld
add
inc
in
add
mov
adc
movsl
cld
cmp
sbb
push
pop
inc
xor
dec
adcl
push
and
loope
ja
lds
push
sahf
add
add
add
movsb
call
in
xor
rorl
out
jmp
mov
arpl
mov
add
pop
adc
or
sub
xor
ror
xchg
or
xlat
movl
test
pop
push
add
fisubrl
stos
xor
add
int
or
push
scas
add
jge
xor
mov
incl
push
data16
jmp
mov
fidivrs
mov
std
adc
and
sti
adcl
test
xor
push
jo
xchg
xchg
add
cli
inc
movl
faddl
orb
add
push
adc
or
add
xchg
push
and
pop
add
cld
dec
and
add
bound
and
inc
push
jl
aam
aaa
pop
div
negl
push
in
pop
int3
xlat
cld
add
or
repz
push
adc
fsubrl
inc
shll
jns
notl
cmp
sub
testl
xor
add
cwtl
cli
xor
mov
xchg
xchg
jno
je
out
je
fwait
hlt
jae
add
xor
mov
movsl
std
xchg
xor
add
cltd
testl
aaa
in
and
jmp
out
movsb
out
iret
mov
adc
inc
mull
jecxz
cmp
add
outsb
mov
in
lods
call
hlt
xor
test
ljmp
movsl
addb
test
repnz
push
mov
enter
sbb
or
popa
sti
xor
ljmp
xchg
jp
call
cmp
pusha
mov
push
into
xor
cmp
sbb
mov
call
cli
es
gs
pushf
jne
xor
aaa
jo
aaa
add
push
inc
in
push
mov
dec
dec
sarb
call
test
test
arpl
add
adc
adc
mov
add
mov
pop
xchg
push
push
push
lcall
inc
in
add
clc
or
jbe
lcall
cld
decl
cli
push
dec
mov
test
das
add
pusha
mov
mov
jl
mov
aaa
cmpsb
sti
jne
stos
je
notl
les
filds
les
addl
testl
fdivs
leave
jb
jae
xchg
jle
notl
jl
notl
add
sbb
add
add
add
add
xchg
xor
sbb
cld
insb
int
mov
adc
insb
aad
mov
adc
jl
in
jnp
jl
push
inc
in
in
roll
xchg
aaa
and
insb
dec
aam
xchg
mov
pop
rcrl
xor
lock
lea
cltd
fisubrs
fisubl
imul
shlb
adc
add
mov
rorl
push
add
aas
iret
inc
mov
inc
fsubrs
dec
rcl
icebp
dec
ljmp
dec
adc
cmp
jne
mov
xor
mov
dec
push
imul
and
dec
cld
mov
sub
out
push
mov
mov
call
mov
lcall
sub
and
add
add
add
mov
lea
or
mov
ds
repz
jo
dec
mov
movsb
cwtl
push
test
popf
cld
jb
popf
out
lahf
popf
cld
sarl
jmp
xor
mov
pushf
push
ljmp
hlt
or
xchg
in
cld
push
inc
inc
mov
mov
push
mov
push
add
faddl
and
out
sub
push
add
sahf
adc
pusha
sub
add
pop
jmp
push
jmp
xchg
dec
xchg
mov
push
add
out
inc
into
dec
push
mov
aas
sbb
inc
mov
xchg
dec
loopne
adcl
adc
pushf
repz
push
mov
lcall
or
push
test
sti
adc
add
jae
add
incl
push
add
pop
lea
jno
push
xchg
leave
jno
push
sbb
push
notb
std
mov
inc
rcll
sbb
xor
add
pop
cs
or
mull
mov
push
or
mov
add
sub
or
add
outsl
mov
xor
rcll
mov
inc
add
aas
add
push
in
fildl
scas
pop
fdivp
leave
iret
push
pop
sbb
sbb
sbb
lret
add
cld
mov
aam
pop
ds
jns
inc
testl
fisubrl
or
sti
popf
icebp
mov
aaa
xor
cmp
sub
add
add
add
add
out
divb
xchg
enter
cmp
outsb
out
pushf
inc
cmpsl
add
jno
dec
jae
add
adcb
add
bound
sub
scas
icebp
out
jnp
out
testl
dec
add
xor
ss
sub
cld
jmp
jbe
call
fimuls
subl
add
add
hlt
mov
jmp
inc
lock
xor
call
lret
mov
std
xchg
data16
pushf
cld
jmp
xor
aaa
loopne
or
dec
sub
dec
les
jbe
or
push
sub
or
cmp
cld
push
dec
lock
pushf
cmpsl
pop
lds
sahf
jb
dec
jg
or
out
jmp
dec
sbb
hlt
call
inc
xchg
in
xor
js
in
jg
jmp
int3
push
inc
push
jg
adc
or
adc
aas
add
or
dec
xchg
sbb
movb
ljmp
add
pop
call
mov
and
push
push
dec
call
add
add
add
jle
fsubrl
push
xchg
in
testl
add
ds
xchg
jne
cmpsl
cmc
mov
add
sbb
xlat
jp
incb
je
sub
or
jnp
sbb
add
testl
test
cmp
add
je
call
test
daa
xor
add
jnp
jl
mov
iret
jg
xor
incl
xor
imul
repz
lock
les
cmpsb
add
sarb
and
scas
cmc
call
dec
insb
shr
mov
add
xor
call
mov
lods
inc
bound
sbb
jo
out
jb
add
outsl
pop
dec
pop
jae
pusha
enter
ret
cltd
jne
out
repz
cmpsl
mov
push
lcall
out
jle
add
call
inc
xchg
mov
hlt
xor
ljmp
inc
lds
aam
daa
pushf
xchg
je
cld
jmp
add
test
hlt
xor
fwait
lock
push
inc
call
cmpsl
push
sub
sarl
inc
call
jbe
and
and
jb
shll
lods
hlt
mov
hlt
or
bound
add
popa
jmp
cld
jb
call
and
scas
lcall
mov
and
dec
call
mov
pop
dec
incl
mov
call
xlat
call
and
pop
add
ret
test
stc
pop
mov
jnp
mov
dec
adc
fimull
push
xor
and
test
je
clc
push
call
xchg
jmp
insb
lock
jbe
dec
incl
xor
mov
or
adc
jns
adc
and
jp
cmp
xchg
jo
add
fdivr
inc
out
mov
es
addb
cmp
fucomip
int
jl
and
je
pusha
add
pop
mov
int
inc
out
inc
insb
notl
dec
pop
jle
fs
mov
cld
jb
sub
inc
adc
dec
and
and
inc
pop
inc
insb
divl
sti
call
or
add
and
sub
outsl
add
pop
fldl
or
xchg
imul
es
cmp
fwait
mov
mov
adc
dec
xor
das
mov
jle
and
mov
adc
jl
xchg
out
hlt
xorb
divl
stos
andl
scas
fldt
aad
jne
push
pop
add
xor
push
fldln2
add
adc
pop
stos
imul
icebp
and
sahf
push
pop
xchg
sbb
es
repz
mov
and
cs
hlt
ljmp
repz
adc
push
add
mov
pushaw
cmp
jecxz
inc
and
jle
mov
cmp
xor
icebp
mov
ret
ds
sahf
call
add
add
add
je
ss
or
jecxz
rol
pop
shlb
sub
sbb
insl
push
and
push
xchg
movsb
jmp
xor
lahf
jp
pop
stos
js
add
cld
rclb
push
add
sti
xchg
adc
inc
out
add
das
jne
add
xchg
std
jae
call
mov
inc
ret
bound
add
add
add
add
jo
inc
pop
mov
je
stos
hlt
add
sahf
cmp
fstl
lcall
mov
je
stos
hlt
add
sub
rol
insb
cmp
popf
jmp
add
in
push
test
inc
fisubrs
add
adc
push
dec
adc
add
sti
push
idivl
cmp
idivl
add
inc
mov
add
add
add
add
inc
add
dec
add
mov
add
mov
ret
pop
neg
jge
es
inc
out
mov
clc
xor
lock
pop
lret
aaa
mov
fcomps
inc
add
jae
pop
dec
or
adc
xor
mov
test
jb
jp
daa
out
add
aaa
push
cld
push
nopl
std
lock
into
cld
add
adc
movsl
movsb
sub
cmpsb
jp
int3
xor
adc
and
lock
nop
scas
cs
fbld
dec
xor
push
xor
add
shl
xor
inc
lock
ss
mov
mov
out
in
aas
cmpsl
add
icebp
out
xor
mov
add
add
add
sub
imul
lidtl
lods
cmpsl
push
pop
leave
in
fadds
add
mov
xor
sub
lods
mov
mov
mov
push
add
add
mov
dec
fs
sub
lods
mov
inc
lods
mov
xchg
adc
test
fs
pop
lcall
push
add
add
add
add
add
inc
inc
jmp
das
lods
mov
aas
push
clc
out
adc
sub
cmpsb
rolb
add
cmpsl
jmp
lret
add
fs
push
ljmp
mov
mov
push
push
cmp
adc
xor
dec
push
add
sti
jne
js
test
jno
fwait
test
inc
add
out
xchg
cmp
je
pop
call
mov
cmp
je
or
sahf
ja
cld
mov
adc
imul
je
cmp
ds
adc
gs
cs
xor
ret
mov
dec
push
push
das
lds
jecxz
inc
add
pop
add
lcall
in
xchg
add
negl
add
add
add
add
add
popf
cmp
mov
push
lock
int3
jns
sbb
divl
je
lcall
jp
dec
and
stc
dec
inc
imull
inc
add
dec
adc
les
ds
iret
jb
push
add
pop
mov
push
in
xor
cmp
sbb
lret
inc
mov
add
add
add
or
pusha
aaa
sti
dec
lods
dec
or
fstps
loop
iret
in
sbb
push
cld
jne
pushf
xor
out
insb
hlt
ja,pt
lea
js
cmp
jecxz
lds
xor
jmp
out
xor
mov
sti
jmp
add
mov
aas
dec
loope
dec
out
inc
cmp
add
inc
add
jns
add
lea
push
mov
xor
hlt
loope
negb
aaa
cmp
add
mov
xor
lcall
mov
mov
in
scas
and
sbb
mov
sbb
je
sti
loopne
enter
push
cmp
std
fcompl
adc
cmp
cld
inc
add
cmp
cmp
cmp
adc
and
push
fidivrl
adc
xchg
jnp
sti
adc
xchg
dec
hlt
cmp
test
push
sarb
addr16
dec
inc
add
jo
push
test
jo
mov
shll
fnstenv
cltd
mov
add
mov
in
jge
jo
test
dec
decl
dec
cmpl
stc
xchg
push
mov
sbb
decl
dec
mov
lahf
cmp
push
aaa
add
mov
mov
sbbl
ficompl
add
negl
push
push
lock
or
add
adc
add
sbb
jae
loopne
insb
enter
rcl
sub
cld
mov
pop
mov
sub
mov
jb
adc
mov
sbb
dec
lock
pop
idiv
inc
add
inc
add
lds
mov
mov
aaa
mul
adc
stos
inc
stc
add
mov
add
add
add
add
push
out
test
out
sti
mov
lea
pop
ja
daa
add
jno
adc
ror
push
icebp
out
xor
jno
cld
xor
divb
out
dec
mov
jge
mov
xchg
rolb
mov
pop
push
daa
sbb
xor
xor
mov
cltd
jmp
add
ss
jno
jge
jno
adc
add
lret
movsb
mov
jmp
lret
pushl
push
jb
or
dec
clc
xor
cmp
mov
sbb
sbb
pop
jle
mov
jmp
inc
xchg
xchg
and
adcb
cld
sbb
xor
outsb
and
jb
add
pop
ror
or
and
pop
sbb
mov
clc
and
test
and
fildl
cli
jmp
fucom
sub
xor
inc
jmp
mov
jp
mov
sti
push
cmpsb
test
inc
push
push
or
fidivs
mov
movb
addl
std
incl
into
mov
sti
push
negb
jne
sahf
adc
hlt
incl
xor
lcall
cmp
pop
or
ficoms
sbb
fiaddl
xorl
add
rorb
cmpsl
sahf
popl
cmpsl
adc
mov
pop
mov
inc
negl
add
negl
mov
hlt
pop
arpl
mov
jb
mov
inc
mov
es
mov
add
lds
testb
cmp
push
andb
xchg
push
mov
dec
mov
mov
push
mov
add
mov
xor
mov
popl
mov
mov
xchg
sub
xchg
add
icebp
into
xor
add
jecxz
cmp
ficoms
adc
xor
sub
dec
or
je
aaa
lcall
cmc
push
pop
xchg
pop
lret
and
add
add
add
sub
push
clc
test
mov
push
mov
xor
jle
jno
outsl
xor
shll
xor
push
sub
xor
jl
daa
cmp
xor
jge
daa
cmp
mov
subl
es
pop
xchg
aaa
jecxz
cmp
or
cmp
jmp
scas
mov
jne
lods
push
cmc
jl
aas
push
cmp
iret
jo
ds
test
sbb
std
mov
sti
mov
repnz
dec
jo
test
lcall
vmovdqa
testl
add
add
add
stc
cmpsb
inc
mov
cli
jbe
dec
lahf
xor
ds
leave
sti
inc
lret
add
out
sti
adcl
aaa
inc
dec
aas
mov
aas
or
push
flds
mov
call
xor
in
pop
out
add
mov
scas
mov
aam
in
call
fsubrp
ljmp
ret
add
add
add
add
xor
jge
mov
into
or
lahf
loopne
in
add
cmovo
divb
imul
add
idivl
inc
divl
arpl
fiaddl
mov
xchg
outsb
cmovo
mov
mov
cltd
arpl
flds
mov
push
cmovo
notb
mov
arpl
fiaddl
mov
add
add
add
sbb
inc
divl
arpl
or
mov
xchg
cmp
nop
mov
lcall
xchg
xor
rcrl
jae
out
out
pushf
sbb
xor
shll
aaa
xor
inc
out
out
test
fwait
inc
not
cmp
mov
mov
insb
sbb
add
xchg
xor
not
movzwl
dec
adc
out
add
cmpsl
add
cmp
movzwl
dec
repz
out
out
fs
add
lock
inc
test
mov
out
in
sbb
add
adc
jg
xor
dec
add
adc
repz
jg
cmp
lahf
shr
lock
mov
adc
add
iret
lahf
lahf
xor
lahf
std
add
decl
aad
adc
mov
lock
aad
adc
mov
lahf
add
arpl
test
mov
lock
push
outsb
adc
sti
iret
pop
add
jmp
jge
mov
into
push
in
add
sub
jmp
sub
push
mov
pusha
leave
in
jmp
insl
cmp
or
orb
inc
add
mov
pop
push
mov
mov
jmp
mov
push
and
leave
in
jmp
lods
pop
mov
push
or
adc
push
xor
inc
add
stos
mov
xor
arpl
testl
cmovo
ljmp
or
mov
push
adc
ljmp
out
add
shlb
lahf
lret
add
lock
mov
xor
dec
mov
mov
inc
divl
ja
mov
dec
mov
add
add
add
add
loope
add
and
push
stos
js
testl
mov
scas
repz
lret
cmp
xor
arpl
sub
inc
add
outsb
inc
not
jbe
aaa
xor
mov
mov
das
aam
mov
mov
repz
inc
idivl
sub
repz
add
mov
mov
fldt
mov
sub
inc
divl
in
pop
add
push
adc
add
jg
xor
mov
es
hlt
xor
into
insb
sti
fbstp
xchg
imul
fwait
out
cld
xor
jnp
vpsllw
adc
xor
add
test
pop
call
xor
jb
stos
inc
loopne
mov
push
stos
subb
mov
jmp
int3
jl
call
cmpl
imul
sbb
jge
loope
xor
add
sbb
add
mov
std
add
sti
call
gs
loopne
push
pop
repnz
inc
jmp
testb
sti
pushl
mov
lock
mov
dec
mov
out
int3
push
mov
sti
call
and
add
rorl
test
sti
call
int
cld
add
dec
or
nop
sub
or
idivl
mov
jg
add
add
add
add
add
test
add
arpl
push
aaa
mov
cld
loopne
add
ljmp
call
add
mov
ret
push
mov
mov
push
inc
lea
add
insb
cmp
sbb
cli
mov
mov
pusha
add
jge
push
mov
test
add
cmc
xor
aaa
or
ret
pop
xor
sbb
xor
add
mov
ja
jl
mov
mov
xchg
mov
push
fadds
loopne
sbb
and
add
pop
adc
jmp
lahf
add
xor
cmp
mov
inc
push
pop
sbbl
sbb
and
add
jo
sbb
orb
out
add
add
imul
sub
mov
xor
inc
sbb
cmpsl
add
call
add
push
pop
cld
popf
in
mov
push
fisubrl
loopne
cmp
push
push
iret
pop
cld
aam
sub
jnp
xlat
mov
push
jno
nop
xchg
in
bound
sub
call
scas
ret
in
cmp
jge
xchg
add
orl
xchg
inc
rcl
jns
pop
mov
inc
mov
xor
xchg
mov
cmpsb
jge
inc
cmpsb
pop
sub
mov
std
aam
jge
add
and
icebp
fsubrp
dec
test
fsubrl
add
pusha
sbb
add
outsl
mov
je
inc
xor
xacquire
movsb
aam
cmp
push
shlb
and
pop
jae
dec
rcll
xchg
js
sbb
xlat
sub
push
dec
mov
jle
ficoml
xlat
rorb
out
mov
push
add
scas
push
divl
movsb
sub
mov
pop
sbb
add
xchg
pop
mov
add
add
add
add
adc
pusha
ss
iret
pusha
jns
movsl
leave
rcrb
frstor
int
or
or
aas
mov
cltd
adc
sarb
sub
fsubs
sub
xor
xchg
pop
ret
inc
test
sbb
cmp
pop
movsb
sub
aad
or
scas
shl
cwtl
xor
xchg
nop
aad
rolb
fucomi
pop
sub
aas
mov
ss
pop
jle
addr16
out
fidivs
lret
cwtl
lock
inc
and
sub
add
std
ljmp
mov
incl
cmp
xor
sti
jge
sahf
push
dec
js
dec
xlat
xor
add
ja
repz
lock
test
sbb
add
in
sbb
filds
add
in
pushl
jo
shlb
hlt
push
or
pop
ja
hlt
inc
push
jnp
dec
inc
mov
cmpsl
lods
outsl
shl
mov
cmp
add
frstor
jecxz
incl
test
cld
pop
fbld
mulb
mov
lods
std
lock
pop
repz
cmp
mov
cmp
hlt
xor
test
or
test
cmp
repz
cmp
imul
or
sti
push
stc
cmp
inc
add
sti
adc
shrl
fstpt
sti
inc
outsl
in
stc
ret
sti
pushl
mov
fsub
cltd
aad
sti
test
cmp
pushl
sti
adc
add
add
jae
xchg
fstps
jne
shr
imul
or
into
loopne
push
lods
jno
divb
scas
mov
add
xchg
add
sbb
mov
or
cmc
jmp
out
loope
ja
insb
mov
stos
cld
jp
fidivl
xor
jb
ja
cld
ljmp
mov
ja
jmp
arpl
push
js
jb
xor
cli
clc
jne
push
mov
sti
fcoms
cld
fmuls
les
xor
jb
cmpsb
cld
rcrb
std
lea
filds
mov
divb
loope
orl
je
inc
ljmp
add
add
add
insl
je
push
pop
cwtl
cmp
sbb
and
cld
inc
fnsave
test
xor
in
or
in
pusha
mov
add
xor
adc
sbb
jl
xor
jmp
pusha
inc
clc
fdivs
jmp
scas
das
out
lods
mov
das
aaa
xor
ret
cmpsb
adc
add
mov
out
xor
inc
push
fnstsw
fs
incb
push
mov
fs
je
add
out
divl
jb
sub
jmp
hlt
xor
scas
lods
mov
hlt
xor
jbe
call
in
cs
call
hlt
xor
cltd
jg
shr
hlt
xor
ret
adc
sti
xor
push
sbb
bound
xor
add
jo
sbb
pop
and
jo
mov
push
and
pop
push
add
das
add
mov
mov
lcall
lds
into
jne
add
je
cs
rorb
call
mov
cs
ret
lahf
aam
add
cs
imul
xchg
push
pushl
into
fimull
shl
lock
into
hlt
and
sub
add
testl
sarb
cmp
or
scas
cmp
push
in
xor
sbb
or
jle
xor
je
dec
jae
sbb
push
or
inc
popa
cmp
pop
clc
add
sub
mov
mov
or
xor
es
pushf
or
jo
gs
je
xchg
xorb
jge
arpl
not
out
pop
mov
push
cld
jns
aas
ret
dec
pop
mov
divl
inc
cmp
mov
divl
sbb
popf
or
inc
mov
mov
add
mov
bound
jno
daa
jno
pushf
cltd
mov
mov
jle
pop
cmpsl
mov
fs
push
xor
adc
sbb
mov
push
sti
cmpsb
or
push
adc
cmpsl
add
icebp
out
xor
call
xchg
insb
xor
je
and
add
xor
jmp
jmp
inc
jmp
xorl
scas
push
add
mov
push
inc
cmp
xor
adcl
hlt
or
ret
repz
sub
jb
decb
mov
std
aam
and
push
repz
cld
lods
pop
cmp
sub
xor
je
or
add
mov
push
xor
or
ret
bound
sti
mov
in
push
clc
adc
xchg
test
pop
sbb
dec
add
loopne
push
sub
std
mov
test
ljmp
testl
jle
mov
shll
jg
ds
inc
cld
lds
aaa
push
sub
or
add
mov
cld
jle
jno
out
cmp
jmp
ror
out
andl
pop
insl
sbb
mov
add
addl
je
add
and
add
cmp
ret
fsubl
sbb
mov
mov
cmp
or
mulb
mov
scas
rep
push
jne
prefetch
notl
xor
push
loop
sub
enter
cwtl
icebp
addr16
movsb
subl
cmp
sub
xchg
mov
ret
lock
jbe
jno
sbb
and
mov
insb
in
mov
bound
or
in
sub
cmp
fldl2e
add
imulb
stos
cmp
sahf
mov
out
xor
xchg
mov
xchg
es
xor
imul
imul
xor
or
mov
jbe
ljmp
lcall
sub
mov
xor
xchg
clc
mov
icebp
add
inc
and
rcll
addl
hlt
xor
mov
insl
aad
jg
std
cmpsb
push
fdivrs
sub
mov
xchg
and
sbb
hlt
xor
mov
mov
xlat
gs
cmp
or
xor
pop
aas
scas
adc
mov
dec
push
loope
in
add
mov
mov
lret
push
leave
inc
or
inc
aas
lea
in
cmp
ret
push
add
xchg
xor
and
sti
call
fcmovnbe
mov
add
pop
cmp
xchg
or
clc
add
notl
imul
call
in
sbb
mov
add
testb
or
add
add
fdivl
add
xor
lea
jge
std
or
not
inc
clc
jp
sbb
jae
add
clc
inc
lea
inc
sar
notl
xor
jmp
mov
inc
push
test
inc
pop
lea
daa
lea
inc
incb
aas
not
shlb
inc
clc
add
adc
les
or
push
in
lahf
cld
das
jmp
push
lahf
xor
xor
mov
sub
fsubp
movsb
and
add
and
sbb
xor
stos
sub
cmovl
add
pushf
stc
jg
fs
fs
jle
mov
or
adcl
jno
and
ret
add
add
add
add
xor
pushf
mov
lods
test
push
out
xor
jns
stos
test
xor
insb
out
xchg
xor
aam
sahf
jae
adc
ficoms
dec
pop
push
mov
xchg
clc
addr16
pop
push
and
nop
subl
dec
push
xchg
negl
hlt
gs
add
std
outsl
test
in
test
xchg
add
xor
push
mov
jl
mov
cld
add
call
pop
fs
cmp
inc
adc
xor
mov
out
mov
in
pop
jae
pop
icebp
pop
cmpsb
popa
fs
lods
or
hlt
xor
cmp
inc
add
jae
test
out
dec
daa
call
lds
add
sarb
add
add
add
add
and
sti
decl
outsb
push
add
xor
fdivr
lcall
sub
ret
call
mov
xor
and
out
jle
sti
mov
mov
call
push
decl
in
stc
ret
sti
jmp
aam
lcall
call
mov
xor
div
inc
jp
in
addr16
add
pop
fwait
xor
cld
aad
push
inc
lods
lea
xlat
lcall
pop
fwait
push
lret
icebp
jl
lock
insb
outsb
hlt
xor
jecxz
xor
mov
or
test
mov
lds
lock
imul
neg
sbb
out
push
pop
cmpsl
or
testl
fwait
cld
jp
adc
je
repz
das
add
add
loop
add
movsl
adc
lahf
addr16
xorb
ret
add
fcmovb
pop
inc
bound
stos
xchg
pop
hlt
pop
mov
pop
imul
das
out
stos
pop
cld
cmp
lock
mov
or
dec
fwait
cltd
push
add
divl
lcall
sub
xor
mov
mov
sbb
xor
divl
jo
add
inc
insb
ret
inc
cmp
into
ret
add
add
aas
jle
sub
hlt
xor
mov
and
stc
xor
je
adc
hlt
xor
sub
mov
sbb
mov
and
mov
cli
arpl
jmp
clc
xor
cltd
outsl
mov
cltd
cli
xor
cltd
add
adc
mov
or
in
jns
lcall
out
and
fisubs
jmp
cltd
xor
movsl
mov
xor
and
hlt
xor
add
ljmp
mov
and
adc
pusha
fs
add
xor
add
and
ret
jecxz
push
dec
das
add
pop
sti
adc
add
jg
inc
adc
arpl
add
das
add
sbb
add
and
inc
and
mov
int3
lea
push
push
push
pop
cmc
call
mov
cmp
std
dec
mov
and
stos
inc
and
pop
xor
enter
fcoml
loopne
daa
outsl
out
addr16
popl
add
fcmovb
add
jecxz
push
pop
add
jecxz
in
mov
or
cmpsl
inc
add
push
add
add
das
xchg
or
in
add
test
xchg
push
outsb
xchg
fsubl
jl
xchg
adc
xchg
fcompl
bound
cld
add
mov
cld
lock
mov
std
daa
cmp
or
push
mov
or
daa
xor
in
out
cmp
loopne
cmc
fcoms
out
mov
stos
test
jnp
out
not
loope
mov
and
popa
sti
xlat
push
icebp
out
push
mul
add
mov
add
adc
fcompl
jbe
lret
lret
add
stos
jo
or
xor
loop
jl
dec
int3
lock
repz
insl
mov
ret
rcl
loopne
jmp
mov
out
iret
pop
cld
out
mov
jbe
jae
adcl
cld
mov
clc
jmp
sbb
jmp
stc
pop
les
loope
mov
add
cld
dec
xchg
popa
inc
in
add
jo
std
push
sbbb
push
test
add
lea
fildl
xchg
out
in
and
add
xchg
jne
lcall
cmpb
in
sub
push
xor
add
add
nop
repnz
jo
in
test
das
cmp
add
mov
push
mov
push
rcrb
mov
lcall
mov
add
push
fs
mull
adc
jae
adc
or
jmp
sbb
cmpsl
sbbb
sub
xor
add
add
add
testl
incl
cmp
push
pop
jle
cld
pusha
sarl
mov
inc
add
mov
cmp
gs
mov
lahf
xchg
adc
pop
inc
add
push
shrb
mov
add
daa
sub
lock
xchg
gs
push
and
in
xchg
dec
sub
iret
lret
inc
sub
add
jo
sub
lahf
lret
and
lds
fldt
xor
jb
fsubl
pop
popf
sub
psubusw
xchg
out
adc
js
jp
lock
repz
sbb
sbb
ret
stc
pop
shl
mov
sbb
dec
fwait
ja
add
add
adc
cltd
jg
xchg
jb
cld
insl
mov
or
inc
lock
jge
and
xor
lods
cwtl
cmp
call
stos
test
push
call
sbb
jae
mov
mov
or
dec
mov
int
mov
lds
and
hlt
mov
jmp
dec
inc
mov
add
sbb
cmc
and
push
cs
adc
jo
call
cli
push
aaa
ret
dec
xor
sbb
mov
adc
adc
mov
xor
rolb
fs
xor
sti
cmp
cmp
idivb
mov
jmp
sbb
cmp
faddl
test
push
add
and
in
and
sub
adc
lea
adc
ljmp
push
lds
sti
mov
pop
test
aaa
repz
xor
ss
xchg
das
adc
ss
je
in
cmc
popf
testl
sbb
fadds
lds
je
jge
in
outsb
xchg
lock
insb
in
les
cld
add
call
mov
and
jmp
test
sbbb
add
jl
inc
inc
out
add
pop
call
ret
jmp
inc
in
stos
hlt
jecxz
pop
add
lret
xchg
movl
in
xor
sub
cmpsl
add
mov
ss
imul
es
rdtsc
out
add
add
jp
adc
call
jle
adc
in
nop
je
cmc
xchg
fmull
hlt
push
xor
dec
out
xor
cmp
mov
add
out
negl
in
pop
jecxz
sbb
adc
add
pop
jmp
ljmp
hlt
xor
mov
sub
incl
pop
adc
jmp
pop
subl
mov
jmp
in
adc
add
pop
cld
mov
xor
addr16
fidivs
call
xchg
jmp
lahf
sbb
push
clc
stos
jae
mov
push
push
push
cli
dec
in
mov
pop
dec
call
mov
call
bound
imul
adc
xor
rorb
add
xor
push
add
aaa
ret
inc
pop
dec
pushl
push
adc
insl
add
and
xchg
and
cmp
lcall
mov
pop
sbb
in
loopne
add
out
cmpsb
mov
cmpsb
xor
mov
jmp
mov
das
mov
pop
pop
pop
add
fndisi(8087
pop
dec
pop
cld
push
add
mov
push
add
std
mov
rorl
cmp
jns
mov
mov
pop
dec
adc
cmp
jb
rolb
fmull
adc
cld
adc
mov
or
fisttpl
cmpsb
push
sbb
dec
mov
dec
sti
int3
shlb
sbb
inc
aaa
sbb
and
out
es
add
ss
push
rol
pop
mov
jecxz
orb
das
push
jp
in
dec
adcb
call
je
mov
xor
xchg
pop
mov
mov
adc
or
mov
rorl
push
fcomi
sbb
ljmp
push
dec
jp
dec
scas
jmp
add
add
add
push
jo
fbstp
stc
ret
dec
cli
pop
roll
or
jecxz
testl
pop
xchg
leave
hlt
add
xor
idivb
inc
daa
add
adc
add
xor
test
out
insb
stos
into
mov
push
sbb
enter
lock
jne
cmpsb
imul
hlt
add
inc
jmp
shll
xchg
add
xchg
jae
jb
pop
je
dec
cli
pop
orl
jnp
subl
jmp
out
adcl
add
adc
imul
add
cld
fs
add
push
jb
jl
out
testb
push
xor
dec
in
push
mov
push
out
out
shrl
add
or
call
add
add
add
enter
icebp
cli
pop
mov
xor
jb
push
mov
inc
cld
ficomps
push
pop
repnz
add
xor
decl
cmovo
aam
je
roll
fwait
insb
jo
fstl
xchg
mov
push
mov
dec
cmpsb
sub
cmc
pop
imul
jl
adc
gs
gs
je
mov
mov
add
mov
shr
xor
mov
std
add
divl
xor
sbb
or
outsl
and
pusha
movzwl
inc
adc
shl
inc
cmp
xor
cmp
cld
and
xor
mov
into
rorb
mov
out
dec
add
jb
fcompl
add
loopne
and
shlb
jmp
test
inc
fistpll
aas
divl
pop
xor
fldl
in
jnp
rep
stos
add
xor
sbb
cli
ret
dec
sub
or
push
movsl
jnp
or
int3
aaa
and
inc
push
out
repz
jae
fisttpl
ja
or
xor
ffree
jecxz
jnp
les
add
mov
test
push
jae
sbb
dec
lcall
cs
test
cmpsl
add
fstpt
push
sti
mov
lock
inc
or
out
lahf
pop
dec
cmc
xor
call
jg
or
rorb
jle
inc
or
sub
and
xor
cmp
lods
and
cmc
xor
cmp
imul
clc
mov
and
call
outsl
push
andb
push
jae
pop
test
push
lock
mov
hlt
fiaddl
push
clc
dec
cld
ss
nop
jae
mov
and
cmc
add
push
clc
adc
add
dec
jae
ret
adc
adc
and
imul
mov
xchg
add
test
push
pushl
cmp
js
mov
decl
pop
rolb
add
repz
ljmp
negl
xor
test
xor
sbb
or
lea
add
sbb
fadds
fidivs
call
test
dec
or
xor
push
xchg
enter
mov
clc
testl
add
add
add
push
xorb
xor
mov
push
add
mull
and
pop
ja
jmp
pop
xchg
jo
dec
inc
mov
pop
xor
mov
lahf
xor
inc
or
ja
sbb
int3
les
rcrb
out
cld
and
mov
imul
out
adc
push
xor
clc
test
add
fbstp
cld
call
rorl
js
pop
or
lds
inc
mov
adc
add
icebp
out
xor
xor
add
sub
mov
mov
subb
arpl
aaa
dec
xor
cmpsl
in
add
mov
out
cmp
sub
push
add
add
add
add
add
or
outsb
pop
imul
repz
inc
scas
cmp
and
loop
out
rcr
fisubs
fistpl
repz
push
jns,pt
xchg
cld
xor
xchg
pop
jnp
mov
jb
xchg
repnz
add
repz
jb
cmp
hlt
pushf
pop
inc
jmp
add
push
mov
push
mov
leave
hlt
das
cmp
fdivr
mov
or
adc
clc
xor
test
cli
mov
shrl
mov
ljmp
dec
jg
orps
mov
clc
mov
mov
jle
fiaddl
push
inc
xchg
lcall
bnd
bound
add
test
xlat
mov
push
inc
cld
or
jo
dec
xor
inc
or
je
testl
fs
jne
mov
sti
mov
xor
add
mov
vmovshdup
push
mov
xor
push
testl
add
pop
xlat
jnp
call
rcrb
pusha
repnz
add
mov
aam
stc
test
add
scas
outsb
add
insb
xchg
adc
add
mov
hlt
mov
mov
sti
cmp
lock
cmpb
decl
ds
stc
jae
or
mov
sub
cld
inc
pop
sbbb
and
in
addb
mull
aad
jg
jp
es
nop
das
and
inc
ja
sahf
adc
ja
inc
hlt
fisubs
addb
inc
scas
es
inc
push
xor
cmc
pop
pop
xor
pop
sbb
out
mov
pop
cmp
dec
popa
jne
hlt
icebp
imul
loope
idiv
cmpsb
loope
in
inc
add
xor
xor
aam
in
repnz
and
js
shll
lahf
cmp
adcl
mov
jmp
xor
call
adc
mov
pop
lds
xor
imul
hlt
xor
or
hlt
mov
adc
aad
call
hlt
dec
jb
jae
out
add
cld
ror
cld
jmp
sub
inc
sbb
mov
xor
fisubl
jb,pt
scas
popa
sbb
dec
mov
dec
or
aad
and
xor
lds
out
add
call
xor
out
xor
call
mov
fsub
dec
in
add
add
das
test
aam
or
test
add
push
or
push
push
xlat
imul
adc
pop
hlt
jg
pop
mov
in
inc
outsb
add
mov
call
divl
mov
rol
bswap
lock
inc
jb
fidivrl
aas
out
insl
adc
insb
add
pop
imul
xor
mov
icebp
shrb
pop
mov
jp
cld
mov
shll
jb
negl
pop
repz
cwtl
mov
mov
fcmovb
out
ret
das
dec
cld
lcall
jge
dec
xor
jge
rol
out
jle
orb
inc
outsl
enter
jl
mov
add
add
add
add
pop
dec
repnz
add
into
imul
lea
roll
dec
pop
outsl
sbb
inc
push
add
nop
cmp
xchg
imul
jle
inc
jle
iret
outsl
or
and
mov
cli
mov
and
pop
fbstp
pushf
mov
int3
add
je
sub
popl
test
mov
imul
adc
call
and
std
adc
dec
xchg
iret
fwait
inc
out
xchg
inc
cld
bound
mov
lahf
inc
cld
jae
dec
push
inc
repz
aam
dec
jbe
pop
inc
mov
pop
das
push
shrb
lcall
bound
mov
adc
mov
hlt
xor
lahf
mov
xor
je
adc
clc
call
cld
gs
test
sbb
add
lds
adc
push
sub
mov
push
dec
sbb
mov
ficompl
or
sahf
pushf
cmp
faddp
roll
lret
dec
xchg
mov
and
pusha
in
dec
push
cmp
data16
add
add
add
add
and
cmp
adcb
mov
jl
jo
jne
pop
or
pop
or
push
jbe
jb
mov
roll
hlt
in
cli
shl
add
jae
and
mov
jp
xor
add
mov
mov
xchg
rorb
negl
call
add
xchg
add
idivl
add
test
fmull
ret
sarb
sbb
test
push
xchg
push
rorb
mov
pop
test
add
cmp
sbbb
add
or
jl
add
out
orl
or
idivl
add
aad
mov
lods
or
mov
mov
sahf
cs
fists
test
out
pop
test
flds
sbb
jmp
mov
xor
add
jns
add
inc
cmp
mov
pop
fistps
push
mov
adc
jbe
mov
out
adc
lcall
or
jae
in
jo
add
mov
std
ds
les
add
sub
push
jb
push
adc
int3
out
std
cmpsb
scas
mov
or
inc
dec
xchg
int
inc
push
xchg
bound
std
jbe
in
test
sarl
mov
repz
cmp
cmpsb
inc
adc
loope
pushl
lods
mov
add
add
add
add
add
xchg
repz
inc
add
stos
ret
add
push
out
push
mov
fcoml
dec
sub
std
lcall
xor
aad
and
enter
mov
add
dec
pop
sub
cld
mov
mov
add
inc
add
sub
cmc
add
sarl
enter
xor
call
push
add
mov
pop
leave
sbb
cld
push
inc
fdivrs
fisubl
xchg
daa
addr16
cmp
dec
adc
cmpsb
inc
ja
sbb
movsb
or
repz
push
cli
shl
cmp
add
stc
lret
out
imul
jle
xor
dec
insl
out
jl
add
push
add
lds
add
add
add
add
jne
jle
js
xor
cmp
mov
daa
hlt
mov
dec
fiaddl
insb
mov
cmp
jne
sti
aam
inc
call
xor
dec
inc
adc
aad
xor
inc
idivb
add
imul
mov
cmp
add
stos
lret
sbb
rclb
add
test
adc
mov
out
mov
jbe
ja
test
jl
fstpl
mov
dec
xchg
jne
mov
out
jl
out
cmc
stos
stos
pop
cmp
roll
xor
out
fdivs
call
add
dec
cmp
sub
decb
add
xor
ja
test
call
sti
mov
jmp
mul
cld
fcoml
out
call
pusha
sub
push
cmp
cmc
stos
repnz
imul
mov
mov
test
js
call
outsb
into
dec
ret
adc
mov
push
mov
add
int
movaps
xlat
je
cli
sbb
add
cmp
jae
add
jecxz
ret
add
pop
dec
adc
fcmovnb
jo
sbb
jns
mov
hlt
call
lds
test
ret
std
mov
cmpsl
jno
xchg
sti
inc
jnp
jns
push
dec
and
xor
mov
cli
jmp
inc
clc
gs
mov
test
push
mov
sub
call
mov
js
sahf
imul
inc
iret
fs
jl
xchg
fwait
lret
mov
ret
negl
int
pop
xor
jae
out
sti
mul
and
jne
add
dec
stc
and
add
lcall
sbb
mov
out
int
cld
jnp
testb
lret
dec
xor
cmp
xor
jle
cmp
sbb
cmp
mov
adc
out
or
mov
jae
jo
cwtl
dec
outsb
ljmp
in
cld
jge
out
lret
add
add
pop
vcvttps2dq
inc
out
je
cmp
jg
mov
fdivrp
lods
sub
jle
and
jno
test
sbb
sbb
add
mov
clc
sti
js
jb
cmp
cmp
jo
jmp
or
mov
mov
mov
outsb
or
adc
add
mov
or
hlt
lods
cmc
jge
mov
sarl
xorb
jae
and
jo
add
and
lock
arpl
mov
cmp
inc
and
daa
hlt
mov
xor
das
andb
push
cltd
loope
xor
sti
das
test
in
pop
add
xor
leave
lock
mov
ret
cmp
inc
push
andb
shr
pop
in
jmp
je
pop
int3
cmp
push
and
lods
call
push
add
xor
into
pop
mov
decl
push
mov
or
mov
adc
cli
jo
add
aaa
lret
push
pop
inc
test
or
into
jo
roll
add
add
add
add
cmpsl
clc
gs
jge
fisttpl
xchg
data16
testl
cld
outsb
mov
or
add
loop
test
xchg
or
mov
cld
cwtl
rol
out
inc
or
jbe
add
cltd
pop
js
aaa
insb
cld
jmp
adc
daa
shrb
insb
dec
jb
neg
push
xorl
add
jle
sti
sbb
cld
ret
sub
pop
pop
pop
xchg
xor
divl
imul
add
cli
jg
ror
test
mov
jbe
adc
rclb
pop
pop
ret
xor
add
add
in
add
inc
lods
xor
jno
sub
emms
mov
cmc
mov
cwtl
outsb
add
or
pop
in
popf
pop
push
mov
outsb
pop
repnz
sub
out
mov
flds
jmp
sbb
incl
stos
or
aaa
cld
jmp
rorb
mov
aaa
cld
je
adc
xorl
or
shll
jmp
adc
jmp
add
add
add
hlt
xor
hlt
xor
aam
and
outsl
jbe
je
adc
lds
xor
insb
push
xor
pop
call
shrl
add
and
push
inc
sbb
cld
add
add
inc
push
scas
mov
and
xor
add
mov
lea
xor
call
dec
cmp
add
addr16
xor
inc
and
pop
dec
fldt
push
inc
fidivs
and
mov
sbb
imul
mov
pop
test
in
lret
test
cmp
push
jno
and
push
in
adc
and
add
pop
push
cld
lret
sub
add
rolb
add
add
add
add
pop
aam
hlt
push
add
sbb
adc
inc
cmpb
add
cmpsb
mov
lahf
dec
add
or
cld
testl
fmuls
inc
sbb
jge
adc
aam
dec
cs
xor
xor
incb
les
xchg
lds
les
xchg
lds
mov
xchg
lds
mov
xchg
lds
out
xchg
lds
sub
add
repz
imul
js
or
iret
adc
xor
jle
sub
aam
movsb
outsb
xor
jg
or
pop
imul
or
xor
jg
aad
add
fnsave
push
inc
push
push
divl
mov
pop
cmp
out
jle
out
loope
mov
add
ljmp
loopne
stos
pop
sub
pop
adc
push
imul
lock
imull
xor
or
enter
hlt
enter
xor
cld
mov
push
in
cmp
repz
nop
fdivs
cld
jmp
lea
orl
jg
jl
xor
cld
pop
ja
cli
data16
add
add
add
add
mov
xor
pop
dec
dec
stos
inc
inc
xor
adc
xor
mov
clc
xor
add
cmpsl
dec
in
fnstenv
mov
xor
add
sbb
add
inc
fmuls
push
sti
jecxz
stc
ljmp
pop
in
mov
cld
push
mov
push
cld
imul
sti
mov
incl
adc
xchg
cld
decl
mov
clc
push
std
jo
ficoms
lea
mov
sti
jmp
jo
mov
jns
roll
punpcklwd
push
sub
call
adc
sti
mov
mov
lock
testl
addr16
pop
sbb
jb
aam
mov
mov
imull
out
pop
sub
std
or
adc
subb
sbb
stos
rolb
negl
jmp
mov
fdivr
clc
inc
add
repz
sbb
sbb
out
xor
push
out
and
push
cld
test
jl
lahf
jb
xchg
cwtl
pop
jg
nop
xor
out
icebp
es
repnz
imul
add
add
jnp
stos
jbe
call
jmp
pop
xor
aam
cli
dec
mov
ljmp
repz
add
mov
push
into
ret
lcall
mov
cmpsb
loope
xchg
sub
insl
cli
xor
add
lock
in
addr16
push
push
xor
pop
jns
dec
mov
ret
add
and
add
push
jns
je
daa
mov
and
dec
push
adc
int3
push
and
cmc
inc
cltd
and
shll
sbb
ja
add
hlt
mov
fs
jo
mov
xor
sub
mov
icebp
ja
or
das
cld
jmp
mov
cmp
add
add
add
hlt
xor
hlt
fildll
enter
jg
int3
jg,pn
mov
xchg
sbb
add
repnz
dec
sbb
inc
mov
push
mov
inc
adc
or
cltd
cs
decl
lods
add
or
xchg
cld
dec
decl
jo
data16
dec
add
mov
sbb
push
push
sbb
add
cmp
push
out
add
push
mov
roll
sub
push
call
popa
push
add
or
pop
pop
mul
ss
lret
mov
jnp
push
inc
iret
flds
pop
cmp
cmp
inc
ret
notl
ja
shll
jnp
ljmp
add
sub
add
or
inc
push
or
add
mov
xlat
hlt
cmpl
push
mov
lret
and
out
idiv
or
jbe
fistpl
xor
negl
add
dec
dec
jae
adc
fcos
inc
mov
sub
xor
js
push
or
aam
in
cs
fs
scas
xor
add
pop
sub
jge
pop
lds
jo
insl
cmpl
jle
push
or
pop
ss
hlt
stc
clc
jge
addb
insl
aas
movsb
xor
add
pop
sahf
outsl
sti
lock
or
jbe
mov
cmpsb
roll
mov
leave
add
xor
bound
outsb
fucomi
sub
pop
insb
mov
int
sbb
add
lods
sbb
push
sub
cld
push
subb
sbb
sbb
mov
add
cmpsl
sub
xor
cld
insb
scas
dec
sbb
aam
fsubrs
inc
jb
dec
sbb
cmp
mov
or
outsw
and
and
dec
shll
jmp
stc
mov
or
adc
add
mov
in
outsl
and
movsb
adc
push
sub
dec
jne
jecxz
adc
or
lcall
lea
std
adc
sti
xor
decl
mov
call
sbb
xchg
lcall
mov
add
cltd
sub
jecxz
push
pop
add
lea
cld
jne
mov
cld
incl
int
hlt
add
rorl
shrl
xchg
in
ror
cli
lock
nop
mov
notl
std
loopne
mov
sar
lea
xchg
jecxz
negl
xor
jp
push
dec
adc
cwtl
xchg
inc
jb
stc
mov
pop
ret
icebp
or
ljmp
mov
aam
cmpl
movsl
cs
mov
in
cmp
or
mov
sti
addr16
push
pusha
xorb
repnz
out
jb
xor
mov
sbb
sti
jecxz
jo
jmp
cli
pusha
shrl
pop
insb
cli
dec
push
push
or
in
sub
jg
insl
pop
add
lods
addr16
xor
je
mov
sub
mov
outsl
mov
in
imul
mov
add
jge
sbb
fidivl
mov
in
cli
dec
adcl
mov
test
cs
lcall
in
xor
pcmpeqb
xor
jmp
sub
push
add
lea
inc
and
xor
pcmpeqb
push
fisubrs
inc
push
mov
repnz
cmpsl
xor
mov
lds
leave
xchg
inc
pusha
shrb
jne
dec
xor
out
mov
shrb
es
lahf
in
call
data16
mov
inc
je
xor
add
mov
cmp
adc
test
add
mov
adc
add
aaa
pop
ret
lea
or
mov
pop
lea
push
xor
repnz
xor
mov
push
sub
repnz
cmp
and
iret
out
add
rclb
addr16
mov
cmp
dec
jmp
add
add
add
fisubrl
push
xor
repnz
xor
push
mov
notl
push
inc
je
sub
ss
call
add
add
jl
shrl
xor
mov
mov
mov
pop
enter
adc
shlb
mov
sbb
sub
ljmp
push
and
mov
add
mov
adc
sbb
inc
call
out
xchg
mov
and
pushf
xor
push
lahf
push
add
in
mov
aad
mov
add
cmp
aad
sbb
cmc
repz
aad
mov
clc
fsubs
inc
pop
sti
fdivrs
rcrl
sti
daa
add
add
mov
mov
jo
mov
mov
jmp
sub
cmp
jmp
sub
popf
ret
sahf
repz
aam
dec
push
add
xor
mov
jmp
lahf
filds
inc
jmp
mov
jo
push
dec
icebp
push
bound
pop
insb
fs
and
jmp
sub
hlt
xor
mov
mov
cs
nop
je
js
imul
mov
cld
jmp
outsl
outsb
or
int
sbb
hlt
scas
rclb
cld
jmp
hlt
push
push
or
int3
inc
dec
fdivrp
adc
add
add
add
sbb
cli
decl
flds
test
sub
shl
pop
or
repz
call
xor
adc
mov
push
imul
pop
test
or
ret
jne
test
dec
add
ret
sub
arpl
cld
push
insl
loope
fnstcw
cmp
inc
das
rolb
sti
incl
pop
push
in
iret
not
cld
add
aas
notl
and
pop
sbb
inc
std
mov
lahf
sbb
add
add
addr16
out
dec
aam
test
add
insb
or
adc
adc
shlb
pop
sbb
add
pop
add
jmp
lea
mov
pop
add
jno
xor
jg
adc
mov
mov
pop
lahf
xcrypt-cbc
cmpsl
decl
testl
mov
scas
adc
call
and
pop
sub
mov
jnp
push
incl
daa
add
cli
pop
push
fistps
pop
mov
sub
gs
add
jp
add
ja
jmp
ja
sub
jb
inc
add
sub
add
or
or
inc
xor
out
add
pop
sbb
pop
movsl
mov
add
xor
ss
sbb
fldenv
add
scas
cwtl
lock
sti
cld
and
jmp
cmpl
push
sub
andl
xor
push
push
imull
cld
cmp
jle
hlt
sbb
sbb
lahf
jbe
je
jge
hlt
insb
cmp
xchg
ja
je
jg
cld
sbb
clc
sbb
inc
dec
pusha
sahf
sbb
xchg
jbe
je
jne
clc
jmp
cmp
mov
decl
ss
pop
push
insb
rclb
and
pop
xor
in
in
mov
push
xor
or
add
add
add
add
cmp
lea
cmpl
dec
imul
xor
decl
sbb
inc
push
mov
or
xchg
addb
rolb
xor
add
pop
pop
outsl
aaa
call
inc
data16
inc
add
mov
lea
ss
lcall
push
cwtl
negl
sar
aam
add
mov
add
add
add
add
scas
dec
insb
dec
scas
out
jae
ffree
mov
lock
or
push
jl
push
scas
aas
fmuls
testb
inc
push
addps
lcall
outsb
push
in
mov
xchg
mov
les
pop
mov
inc
push
xchg
fmuls
outsl
testl
imul
add
add
repz
inc
pushf
xor
add
in
sub
jb
iret
movsb
js
imul
das
jmp
enter
push
orb
mov
mov
push
in
fld
cmp
mov
mov
ljmp
lock
icebp
jge
xor
mov
cmc
rcr
fidivs
jmp
ljmp
in
xchg
add
xchg
xor
xor
jmp
mov
rcrl
jne
push
adc
loop
xor
jns
pop
mov
hlt
cmpsl
inc
icebp
jge
inc
jb
mov
mov
ja
cs
mov
jl
cmpsl
inc
inc
test
add
add
sbb
aaa
sbb
rclb
pop
es
jb
orl
jmp
inc
sbb
xor
add
jmp
imul
fucomp
add
clc
ret
add
dec
scas
clc
fwait
pop
pop
lret
mov
rclb
jp
ds
cld
incl
popf
fnstenv
fistpl
stc
fisttps
jns
cld
test
xor
je
xchg
jne
lcall
cmp
xorb
mov
cltd
das
test
iret
add
sbb
shl
mov
sarb
mov
and
mov
sbb
out
push
add
pop
out
cs
or
push
push
mov
pop
jl
push
mov
mov
pop
or
cmp
testl
jnp
jg
jge
pop
xchg
dec
or
test
add
xchg
add
mov
or
jge
outsl
and
push
pop
cmpb
cli
addl
call
add
add
add
add
cmpsb
sahf
pop
inc
sbb
insb
jae
mov
fidivl
xchg
andb
push
nop
sbbb
ja
test
ljmp
imul
mov
and
cmp
mov
add
pop
cmp
adc
cs
test
dec
and
mov
add
sbb
test
lock
outsb
xabort
add
jp
sti
cmpsb
inc
or
leave
les
add
and
flds
pop
bound
icebp
add
dec
test
call
fsubrs
cld
fwait
jmp
call
insl
mov
fs
lcall
add
mov
add
adc
adc
cld
imulb
mov
push
movsl
add
xor
add
data16
test
xor
sbb
jne
punpcklwd
pop
data16
or
or
xor
cmc
pop
lahf
outsl
or
stos
repz
adc
call
outsb
sub
add
add
lods
out
pop
xor
push
mov
imul
add
pop
xor
adc
jmp
adc
and
push
push
les
mov
jge
xor
sbb
adc
push
dec
jp
sub
lock
testb
push
sub
mov
dec
add
dec
add
incb
cmpl
jp
sub
cmp
popf
ret
and
xlat
addb
sbbl
outsl
dec
xorl
out
shlb
push
int
sbb
sub
push
push
shll
dec
cmc
mov
add
ret
and
xchg
rorb
or
shll
add
add
je
add
jnp
pusha
ja
inc
mov
inc
jle
faddl
lar
dec
lcall
adc
and
jge
dec
lods
nop
pop
loope
testl
call
sub
pop
inc
sub
fldcw
call
dec
ja
std
mov
mov
dec
dec
jne
test
icebp
mov
dec
mov
or
jle
fcomi
inc
add
add
cmpsl
clc
bound
and
and
cs
aas
jmp
mov
xchg
setg
sti
xor
cmpsl
jmp
notl
add
je
call
inc
jb
adc
add
call
pop
dec
jb
or
hlt
mov
lahf
xor
push
lahf
mov
hlt
add
add
add
add
add
sti
cld
inc
aas
inc
jmp
dec
cmpsl
inc
sbb
stc
cli
add
push
sbb
xchg
outsl
outsb
sbb
and
in
xor
jne
cltd
ds
jne
in
das
jmp
test
orb
imul
inc
jne
std
jne
jne
or
and
add
je
or
and
imul
adcl
in
bound
push
mov
adc
or
inc
negl
psubsb
and
jnp
push
add
sahf
clc
sub
inc
add
aaa
xor
call
cmp
test
or
add
decb
jnp
add
adc
inc
adc
add
jl
hlt
cmp
xchg
sbb
pop
add
repz
push
jle
sbb
cmc
and
mov
inc
jb
xor
pop
sbb
in
adc
adc
pop
mov
pop
pushf
sti
dec
and
mov
jg
rorl
adc
pop
add
xor
adc
jmp
add
test
xor
xor
dec
cmp
sub
jp
stos
adc
aam
sbb
dec
lds
call
dec
andl
repz
or
adc
cmpsl
add
lock
or
adc
jmp
add
test
lods
xchg
jmp
scas
pop
call
jb
pop
notl
mov
imulb
and
push
pop
inc
sti
cmp
mov
sti
mov
sbb
fnstsw
or
xchg
out
sti
mov
icebp
je
jae
or
hlt
mov
lds
or
jne
add
add
and
pop
sti
decl
push
cmp
hlt
sti
test
add
mov
add
push
ljmp
das
xor
testb
jmp
loopne
leave
add
push
sbb
dec
or
inc
loopne
and
mov
outsl
and
insb
lods
or
and
and
mov
adc
jbe
outsl
push
mov
loope
andl
sti
jle
cmp
pop
dec
dec
std
push
int
or
repz
add
mov
push
cmpsl
roll
pop
xor
pop
insb
aam
xorb
add
jecxz
add
mull
iret
mov
inc
adc
or
jge
and
inc
cmpsl
mov
and
ret
and
pop
int3
sbb
and
xor
clc
idiv
mov
inc
cld
and
add
mov
adc
adcl
xchg
inc
adc
mov
lds
lcall
decl
and
cmp
ljmp
test
out
ja
out
int
scas
stos
fisttpl
sub
out
into
lods
insl
jb
mov
into
inc
jecxz
loop
aaa
push
sbb
cmp
mov
clc
sub
dec
mov
mov
cmp
ss
xchg
add
jmp
xchg
data16
push
dec
cmp
cld
xchg
fnsave
add
add
add
add
add
sbb
jbe
sti
jb
loopne
xor
push
sbb
clc
call
mov
sbb
jge
clc
subl
hlt
xor
adc
push
cld
pusha
mov
xchg
mov
sahf
jne
cld
xchg
stos
or
fsubrl
ja
add
inc
outsl
push
daa
pop
mov
sub
sbb
sbb
add
mov
pop
jle
push
fisubs
add
adc
jne
push
jle
xorb
push
xor
aad
mov
jmp
call
cmpsl
int
pusha
sbb
ljmp
jg
sbb
orl
rcpps
sbb
pop
push
mov
call
add
pop
movsl
or
jecxz
not
ds
jle
les
jmp
je
rorb
imul
mov
aam
std
ljmp
mov
cmp
in
rclb
cld
jae
je
jl
pop
call
outsl
aad
or
pop
aam
out
aas
cld
outsb
pop
call
add
add
add
dec
sbb
call
pop
add
push
xor
add
cmc
add
imull
addr16
xor
aam
jmp
aam
call
mov
add
test
nop
in
push
or
inc
je
mov
hlt
rcrb
bound
sub
lock
inc
add
test
int3
mov
out
mov
mov
mov
out
adc
ljmp
cmp
sub
xchg
jecxz
pop
push
adc
fmuls
jmp
xor
jmp
adc
xchg
aaa
in
enter
leave
lods
adc
jmp
xor
mov
dec
or
loope
mov
data16
and
cmp
out
cmc
xor
mov
ret
cltd
mov
or
popf
mov
push
jbe
shrb
mov
test
hlt
cmp
dec
xor
and
or
and
addl
sbb
into
aaa
dec
mov
lock
int3
inc
cmc
sub
lock
xor
incl
int
std
je
sub
adc
mov
inc
add
xchg
daa
rcrb
adc
mov
out
add
inc
pop
mov
and
mov
daa
rcrb
mov
orb
sub
in
sti
mov
or
push
cmp
jno,pn
and
mov
add
div
mov
jnp
adc
pushl
mov
ret
rcl
cld
loop
push
inc
mull
mov
pop
repz
mov
insl
dec
call
push
jle
cmp
dec
or
ljmp
pop
call
or
mov
out
inc
push
test
push
cmc
dec
inc
divl
add
std
add
or
xchg
xchg
adc
xchg
push
cmc
pop
push
jno
nop
xor
sub
insl
add
mov
cmpsl
adc
pop
outsb
das
cwtl
imul
imull
xor
repz
hlt
lsl
add
xor
add
add
sbb
mov
jl
loope
add
fst
stos
add
adc
sub
or
mov
fcomps
test
add
sub
hlt
lods
rcrb
das
xlat
in
adcb
add
jne
mov
xor
cmp
add
sti
and
mov
mov
scas
jne
jno
sbb
push
add
icebp
xchg
call
add
add
add
aaa
add
sti
fdivr
imul
jmp
inc
mov
jg
inc
pop
call
gs
jne
ljmp
shrb
jne
inc
jne
add
sub
inc
push
mov
or
clc
pop
or
xor
add
add
jne
loopne
jge
inc
cld
cmp
adc
jo
scas
mov
add
add
add
add
mov
add
mov
mov
and
mov
and
mov
and
loopne
inc
mov
dec
push
fnstcw
push
clc
test
or
jmp
mov
adc
sbbl
es
push
push
testl
pop
xor
ss
xchg
sub
mov
negl
jl
arpl
cmc
dec
xor
jb
inc
adc
ret
adc
jmp
in
inc
fildl
call
xor
roll
nop
lock
and
std
or
pcmpeqb
xor
idivl
aaa
jae
add
jb
jb
jo
fcos
xchg
sub
adc
xorb
filds
or
cmp
ljmp
test
rcl
incb
outsb
insl
fnstsw
gs
mov
add
inc
add
ficompl
aad
cmpsl
maskmovq
negl
popl
shll
xor
cwtl
pop
les
imull
xcrypt-ofb
cmpsl
outsb
jmp
adc
pop
add
pusha
add
add
dec
leave
inc
cmp
dec
adc
pop
test
inc
lahf
out
add
hlt
pop
xchg
hlt
lods
rclb
ss
adc
jg
cmp
push
sbb
mov
sub
pop
add
in
or
repz
push
mov
into
mov
test
fxtract
pop
xchg
hlt
xor
sbb
add
add
add
push
fisttpll
loopne
fistpll
sbb
lods
leave
cmc
add
std
lcall
loope
sub
dec
push
mov
add
xor
jne
jne
dec
push
inc
sub
sti
pop
arpl
add
out
sbb
lcall
rorb
lea
data16
iret
pop
push
into
sti
out
inc
cld
decl
cld
jne
cld
and
jecxz
or
fldt
cld
lcall
je
inc
call
cmc
sti
push
subl
mov
dec
add
add
cmp
iret
sbb
add
testl
test
or
mov
jbe
inc
idivl
jg
mov
sub
fisttpl
add
in
pop
call
call
or
hlt
or
add
cs
sub
cld
mov
or
mov
and
sbbl
mov
sub
or
add
in
jo
frndint
adc
loope
mov
mov
pop
xchg
jmp
mov
xor
mov
pop
mov
mov
jo
rcrl
sar
add
mov
mov
arpl
adc
and
mov
lds
ret
lock
ss
and
mov
add
das
shl
scas
xor
sarb
xor
es
pop
rcll
inc
test
shrb
imul
add
add
add
add
hlt
mov
outsb
pop
sub
sti
hlt
cwtl
das
inc
jmp
cwtl
inc
sbb
push
add
imul
mov
add
hlt
push
xchg
hlt
test
sti
mov
leave
adc
lea
clc
sti
out
sbb
test
std
or
sarl
sti
outsb
repz
rorl
sti
mov
jle
push
scas
clc
mov
sub
cmpsl
ret
cmp
and
and
adc
add
int
mov
adc
cs
dec
icebp
sti
mov
pop
inc
cs
out
sti
adc
outsb
xor
xor
mov
cld
jne
mov
xor
inc
cld
push
xor
incl
mov
fcmove
xor
repz
aad
fiadds
cmp
lret
repz
stc
add
jecxz
out
divl
lret
in
sti
shll
icebp
fsubs
lods
pop
popa
dec
add
jl
daa
int3
dec
or
push
mov
roll
sub
add
lcall
add
dec
sub
add
dec
mov
shrb
push
xchg
int
lea
addl
mov
pop
adc
or
mov
insb
ljmp
add
add
or
cld
mov
cltd
cmp
xchg
and
fs
add
sti
jmp
ret
push
xchg
popf
add
movsb
mov
arpl
dec
sti
hlt
xlat
lock
mov
fadds
sub
mov
sbb
push
push
inc
test
or
imul
mov
ds
push
push
and
xor
cmp
cmp
fs
stc
xor
cwtl
test
fsubrs
jmp
divb
add
fmuls
sub
sti
xor
add
add
add
and
add
jns
cmp
mov
bound
ljmp
xor
call
mov
hlt
sti
adc
out
lods
push
inc
sbb
cli
decb
hlt
aaa
fstl
hlt
xor
repz
sti
sti
insl
mov
push
insl
daa
inc
sbb
hlt
daa
mov
push
add
add
imul
lcall
xor
add
je
and
std
clc
jne
inc
ds
ljmp
cld
loope
mov
cmp
hlt
sti
mov
dec
punpckhwd
inc
rorb
sub
add
fucom
lods
push
inc
cld
xchg
sub
dec
sub
sti
decb
imul
add
add
add
push
in
pop
pop
push
jae
decl
xor
dec
insb
adc
xchg
addps
dec
add
xchg
es
inc
mul
clc
pushl
inc
call
jae
add
cmpb
xor
fimuls
imull
add
xor
jbe
jecxz
mov
jae
or
push
mov
mov
or
jae
push
popa
xlat
daa
testl
cmc
sbb
jge
sti
aam
add
or
addl
pop
dec
inc
div
adc
gs
jmp
xor
jmp
add
xor
movsl
mov
xor
dec
jno
mov
cli
jmp
sbb
push
xchg
das
jns
lock
mov
add
add
add
or
add
or
mov
dec
imul
sbb
jmp
ret
xor
das
add
addr16
test
cmpsb
add
stos
pusha
dec
or
imul
subb
add
psubq
pop
andb
callw
cmc
sti
mov
jge
add
adc
xchg
dec
cmp
call
je
or
inc
xchg
lea
psubsw
sub
mov
cmc
aas
mov
rcll
inc
add
pop
mov
jmp
cmp
cltd
sarl
jmp
pop
hlt
mov
lahf
pop
mov
call
cld
sub
cmp
xor
push
add
orl
and
xor
xor
inc
mov
loope
imul
mov
into
sub
pop
add
sub
push
add
hlt
push
push
imul
add
xchg
push
cld
call
insb
outsb
pop
lds
lea
add
dec
xor
cmpl
push
je
mov
pop
add
push
push
fstps
mov
testl
out
jge
or
mov
insb
lcall
adc
pusha
incl
mov
out
notl
or
in
jl
cld
andb
sar
lret
adc
in
add
cmp
call
adc
imul
pusha
aad
adc
lret
add
out
push
sub
cld
loop
push
inc
test
int
xor
std
inc
adc
xor
mov
sbb
adc
jecxz
push
lds
jmp
cltd
negl
push
jg
insb
sub
cmp
mov
jmp
and
pop
adc
and
jge
jl
dec
int
add
test
cmpsb
mov
dec
and
push
gs
mov
rcl
push
jl
adc
mov
sub
daa
sub
sahf
xor
jg
repz
sub
jno
fs
or
aaa
dec
sbb
hlt
jne
jno
mov
stc
leave
stos
pop
int
repz
mov
sub
and
add
add
add
add
sub
add
mov
jle
jb
dec
and
xchg
sbb
inc
fdiv
sti
adc
hlt
je
in
cmpsl
fcoms
sbb
cmc
je
clc
repz
cli
test
mov
sub
push
bound
mov
add
jae
decl
jnp
push
sub
push
mov
rolb
add
xchg
jne
je
pop
jmp
test
xchg
push
call
or
and
pop
lea
adc
push
push
std
call
in
shl
xor
into
adc
xor
xchg
dec
xor
aas
and
fldl
je
flds
clc
or
test
jp
and
clc
jg
testl
add
add
add
add
push
pushf
leave
sti
pop
add
lret
fistpl
cvtpi2ps
adc
mov
jmp
shlb
das
shlb
neg
inc
adc
in
lds
jl
adc
sahf
sub
hlt
adc
ss
stos
and
inc
jne,pt
push
mov
cld
and
pop
mov
mov
add
xor
jno
stos
and
mov
cld
add
jb
sbb
sbb
movsb
push
stos
and
xor
popl
adc
sbb
in
dec
sub
or
sub
mov
pop
push
lods
repz
outsl
repnz
aam
or
shlb
or
aad
enter
jns
and
leave
movsb
sub
xchg
mov
jmp
push
add
out
jne
jmp
clc
jge
cltd
sbb
jb
add
mov
jno
divl
data16
aas
add
mov
xor
mov
jp
pusha
inc
lahf
mov
in
out
lahf
stos
push
xor
in
call
je
mov
push
shl
inc
add
xor
jmp
sbb
call
add
add
add
cltd
out
sti
cmp
ret
fsubrp
dec
mov
sti
push
sbb
and
arpl
inc
shll
add
pop
mov
rcl
dec
sbb
inc
sbb
mov
jle
mov
insb
mov
push
bound
xchg
neg
mov
lret
xor
fsubrl
push
cmp
sub
std
fldenv
std
pushl
std
cli
mov
jge
add
insl
outsb
faddl
xchg
mov
sti
incl
dec
cli
lds
push
hlt
add
insb
rclb
jecxz
inc
push
or
sbb
add
inc
mul
imul
pop
imul
lret
invd
or
add
cmc
jmp
fildl
or
imul
add
notl
lret
hlt
xor
xchg
scas
ja
fwait
mov
add
add
add
add
idivb
and
or
mov
int
xor
or
mov
add
pop
inc
jae
cs
xorb
jmp
xor
bound
or
jnp
push
hlt
fcomp
hlt
cmpb
or
mov
mov
push
lea
hlt
xchg
iret
cld
ljmp
or
xorb
sbb
cmc
jp
or
lock
scas
inc
mov
and
hlt
jno
call
sub
cmp
sub
jmp
sbb
jmp
jle
xor
add
sub
outsb
add
scas
lods
mov
sbb
sub
cmp
leave
jmp
js
cmp
add
mov
mov
add
and
inc
add
add
hlt
add
pop
ljmp
lret
sub
lahf
adc
add
divl
add
repz
jno
rcll
xchg
outsb
or
pop
ret
ss
ljmp
push
ljmp
mov
jecxz
mov
cmpl
sub
das
decl
xor
fdivp
xor
cmp
sub
fdivrs
jbe
add
rolb
jge
cmp
and
inc
mov
das
call
jecxz
sbb
lds
sysexit
add
enter
push
mov
cmpsb
mov
add
add
add
add
leave
pop
mov
mov
mov
mov
mov
iret
call
mov
jle
xchg
push
lea
sub
push
loopne
xchg
cmp
into
mov
je
mov
cld
add
pop
push
jae
cli
xchg
cmpsl
stos
ret
push
inc
jbe
mov
sub
sbb
adc
push
ret
cmc
pop
sbb
mov
lahf
faddl
or
stos
xchg
das
andl
inc
das
pop
lret
ret
jle
push
mov
loopne
decl
xchg
jbe
mov
xchg
push
fdivrs
or
enter
ja
and
jmp
call
ret
out
mov
add
add
add
call
mov
sub
and
sbb
cmp
test
inc
lock
ja
shll
call
jmp
mov
call
cmp
and
add
in
add
mov
adc
cmp
aam
fcomps
sbb
out
inc
add
xchg
aam
jg
test
fdivs
inc
in
addr16
hlt
xor
nop
add
lock
in
sti
aam
inc
inc
jmp
sbb
cmp
sar
arpl
pop
repnz
bound
xor
daa
aas
adc
jmp
lret
jnp
inc
lock
mov
push
ja
mov
push
adc
xor
cs
adc
call
mov
decl
pop
push
sti
dec
mov
and
mov
test
movlps
decl
fcoms
fnsave
call
adc
fs
pop
push
faddp
pop
push
dec
mov
mov
out
adc
add
cld
adc
mov
out
decl
repnz
imul
leave
inc
jle
inc
fsub
sahf
mov
mov
adc
adc
add
fwait
leave
out
inc
sti
adc
jg
frstpm(287
add
arpl
mov
cmpsl
aas
not
lret
xor
aaa
mov
call
and
ret
rorl
rol
cld
insb
push
or
sbb
sbb
mov
ret
fcompl
out
or
cmp
into
lret
mov
pop
sbb
mov
xor
loop
out
aas
divl
into
adc
faddl
or
test
into
in
xchg
and
sub
push
out
sbb
icebp
push
or
aas
add
fnstcw
sbb
aas
sub
insl
or
call
push
push
xchg
sbb
hlt
mov
add
addb
outsb
insb
in
mov
pop
test
sbb
aad
ret
sbb
inc
sbb
fsubr
mov
jae
aam
inc
inc
jmp
add
add
add
into
pop
sub
jo
adc
frstor
jl
mov
or
cli
dec
or
cmp
push
icebp
test
jecxz
pop
bound
mov
cmpb
data16
sub
scas
rclb
iret
jg
xchg
cmp
xchg
fdivl
add
add
add
add
and
inc
adc
jmp
es
pop
inc
push
pop
fldenv
das
mov
mov
mov
sub
mov
cmp
test
and
mov
pop
scas
mov
bndldx
push
or
and
pop
add
sbb
in
imul
jge
mov
adc
dec
and
cmp
dec
xchg
mov
stos
stc
or
xchg
sbb
mov
fiadds
push
divl
aam
cmp
mov
movb
jp
mov
jbe
push
or
xlat
add
hlt
sub
push
out
mov
sti
cmp
fsubr
cmp
outsb
popf
mov
sarl
pop
sti
pusha
subb
sbb
add
add
add
out
add
mov
inc
mov
add
mov
push
call
jl
aad
outsb
inc
sbb
out
mov
xor
ret
cwtl
xor
add
jns
sbb
aas
test
fnsave
pop
mov
ljmp
xchg
add
loopne
inc
inc
cmp
sbb
fcomip
lahf
jmp
cmp
adc
popfw
sub
in
sbb
jle
mov
loopne
sbb
rclb
mov
jo
mov
loopne
bound
call
sub
call
sbb
xor
add
add
add
hlt
dec
sbb
cmp
aas
jmp
hlt
test
add
sbb
sub
movsb
mov
jge
mov
in
gs
ljmp
add
test
in
cmc
cmc
push
inc
aaa
mov
mov
cmp
shrl
and
mov
lds
test
push
fdivr
jmp
dec
push
add
dec
mov
dec
or
je
and
mov
add
icebp
filds
or
fisttps
push
xor
cmc
rorb
inc
xor
divb
bound
fidivs
add
dec
jae
sti
out
cli
ljmp
sbbl
push
cld
and
sub
rol
movsb
cmpb
add
add
add
add
jne
lret
in
or
push
jae
cmp
push
roll
jl
hlt
add
popa
rcr
fstpl
ss
testl
jmp
out
lds
aam
mov
xor
and
mov
lds
das
incl
cmp
daa
jle
leave
inc
out
movl
adc
xor
mov
xor
adc
mov
out
adc
push
push
or
lock
adc
ret
pop
mov
loopne
xor
test
divl
jp
aam
jb
sub
hlt
loopne
insb
inc
movsl
ss
lock
stos
mov
xor
scas
outsl
int3
cwtl
mov
jno
cmp
fucom
add
divl
insb
inc
fs
adc
mov
sub
ret
mov
sub
hlt
gs
das
push
inc
popa
mov
cld
imul
test
imul
cmpsb
scas
jg
add
jle
mov
add
fcoms
lcall
outsl
out
sti
jb
scas
repnz
sub
rolb
add
adc
add
sub
fsubrs
pop
test
sub
cmp
in
ret
hlt
inc
add
imul
mov
fs
fldenv
adc
jmp
push
and
mov
out
outsl
lock
inc
data16
add
dec
test
push
jecxz
mov
cmpsb
adc
add
jbe
fidivl
ret
call
adc
add
add
add
leave
adc
xor
decl
roll
test
js
mov
and
das
je
rcrb
push
ret
push
ljmp
rcrl
call
fwait
je
dec
mov
pop
and
adc
ficomps
test
mov
add
fcmovne
roll
sub
add
mov
loopne
subl
add
add
add
add
dec
rcrb
dec
dec
js
mov
or
cwtl
and
in
loop
out
and
jb
ret
inc
inc
cld
cld
loop
xor
mov
inc
inc
pop
testl
test
jnp
out
push
sub
pushf
xlat
cld
push
pop
and
cld
fmull
jb
cmp
sub
movsl
xchg
xchg
add
mov
test
sbb
enter
xor
add
mov
add
ljmp
sub
jo
jmp
add
fiaddl
push
sbb
sub
lock
enter
fldenv
shlb
jmp
jl
inc
jmp
add
mull
sbb
cld
add
jle
sbb
adc
inc
out
inc
in
xor
xchg
aad
adc
xor
call
movsl
sbb
insb
xor
inc
jb
int3
std
out
add
cmp
fiadds
cmpsb
shll
push
xchg
pop
scas
mov
jmp
jns
std
jle
xor
call
and
bound
shl
mov
jmp
adc
das
inc
jmp
aad
stc
pop
inc
enter
pop
push
jae
ret
sub
mov
add
sahf
scas
mov
and
jge
mov
sahf
push
jmp
test
out
inc
pop
popf
cld
jne
dec
pop
repz
xor
jne
es
cmp
cld
jns
stos
fdivrs
test
cmp
jge
xor
mov
cld
adc
mov
xor
je
mov
ja
xor
adc
push
insl
outsl
or
jecxz
and
leave
sarl
je
xchg
iret
xor
add
add
enter
mov
push
sub
cmpb
orb
hlt
add
cmpb
mov
pop
lock
mov
mov
adc
jb
mov
stos
jmp
push
psllq
jb
xchg
pop
add
aaa
jae
xchg
mov
jmp
test
clc
out
sub
jns,pt
and
movl
outsb
pop
ja
loope
sbb
pop
jp
lds
sub
cmpsb
jns
shll
enter
add
mov
sbb
aad
cld
push
pop
add
or
inc
loop
xor
fdivr
adc
or
lods
sub
fildll
testb
in
add
inc
je
add
hlt
xor
orl
xor
push
imul
icebp
sti
ds
mov
xchg
jo
jp
cmpsl
aad
popf
jl
mov
push
inc
jmp
sti
aam
jb
lret
enter
test
add
jg
jl
mov
pop
xor
icebp
add
aad
pop
sahf
lods
orb
aam
jl
test
or
hlt
jp
sarl
jmp
inc
es
dec
mov
inc
add
sub
jne
add
popf
cmp
dec
push
push
push
str
and
sub
out
sti
mov
int
cmp
sbb
imul
ficoml
adc
das
xchg
pushf
push
push
cmp
or
add
inc
push
push
inc
or
jno
lods
add
xchg
pushf
arpl
cmpsl
adc
pop
ret
sti
call
xchg
scas
cld
or
repnz
mull
adc
nop
mov
js
jnp
xchg
and
fdivr
incl
push
jnp
pop
lock
hlt
mov
add
push
adc
clc
mov
mov
push
and
push
jo
xlat
push
mov
lret
dec
mov
pop
fwait
jl
out
xlat
decb
mov
mov
ds
cmp
push
adc
mov
cmp
ret
jnp
test
mov
pop
out
aas
divl
iret
sti
mov
fbstp
add
add
inc
fisttps
fnsave
or
adc
add
xor
lock
add
ljmp
aaa
adc
or
shr
sbb
add
jp
out
cmp
sub
pop
in
je
call
adc
movsl
sub
shr
xchg
add
xor
pop
mov
pusha
lds
in
out
cli
lods
mov
ja
add
inc
stos
aas
mov
cmpsl
in
addr16
push
jge
cmc
ljmp
repz
je
cld
repz
cmc
inc
xor
fdivrs
hlt
xor
pop
dec
aam
hlt
mov
cltd
std
dec
lea
gs
idiv
mov
add
jl
cmpsl
inc
fadds
dec
push
je
loope
clc
mov
mov
sti
adc
mov
push
pop
pushf
daa
call
add
cmp
push
inc
add
xor
subl
add
add
cmp
incl
repz
mov
std
hlt
je
cmp
add
dec
add
jecxz
add
add
add
add
add
sub
inc
sahf
dec
sbbb
cmp
sbb
arpl
pop
xor
adc
out
push
add
cmp
adc
ret
xor
adc
xor
mov
add
inc
jmp
push
jl
ja
jmp
cmpl
jl
cmp
aaa
fadds
cld
rolb
add
jae
cmpsl
add
ja
mov
xorb
ja
pop
pop
inc
jae
cmpsl
add
jecxz
mov
mov
mov
fmuls
pusha
fadds
cld
mov
xor
add
mov
add
movsb
xor
pop
inc
mov
jmp
mov
or
jge
das
jmp
add
xor
mov
add
mov
push
pop
jmp
icebp
add
in
mov
pop
jmp
push
push
call
movntq
test
fdivs
cmpsb
iret
repnz
add
stc
dec
loopne
jmp
rorb
divl
dec
fiadds
shl
push
cmpsl
cmp
cltd
adc
imul
aas
push
lds
inc
sbb
test
or
popl
jmp
cmp
jno
mov
fucomi
incl
jmp
push
int3
sti
jmp
push
xor
adc
add
xchg
dec
sti
xor
pop
add
add
shl
mov
das
test
sbb
inc
test
je,pn
fldl
add
pop
or
pop
incl
lea
add
sbb
dec
mov
and
add
xor
jmp
or
jg
adc
dec
jo
arpl
lea
jae
xor
add
dec
mov
and
test
fs
xchg
dec
push
cmpsb
mov
add
dec
negl
sub
ljmp
sub
call
jnp
js
je
pop
into
mov
add
out
pop
add
xor
idiv
or
xchg
cmp
mov
push
mov
incb
in
aas
add
daa
inc
cmp
adc
daa
xor
push
not
mov
fwait
push
lock
insb
sbb
mov
nop
push
shll
mov
xor
xchg
fisubrl
pusha
shlb
pop
and
sbb
and
push
mov
fs
ret
cmp
out
xchg
add
sub
shrb
leave
cmp
divb
jmp
add
pop
iret
addr16
push
dec
fsts
fmul
fs
arpl
cltd
mov
mov
xor
add
adc
popf
daa
repz
xchg
daa
jmp
adc
xor
add
clc
xor
mov
loope
jae
push
sub
aas
mov
push
mov
call
mov
add
jnp
sti
fisubrs
add
hlt
lds
mull
adc
mov
xchg
mov
add
jae
and
mull
cld
cmp
sub
mov
clc
xor
fs
and
sub
sub
jns
push
js
sub
sti
hlt
movsb
cmp
insl
gs
xor
pop
add
ret
fdivrl
mov
inc
mov
mov
xor
decl
imul
adc
je
mov
mov
add
dec
push
loope
adc
add
ljmp
cld
sub
das
add
jne
xor
lock
jae
or
testb
out
add
into
leave
inc
and
sub
test
je
add
add
adc
xor
sbb
jae
mov
sub
add
dec
sub
or
add
fldcw
pop
pop
or
lret
xor
sub
sbb
mov
sbb
cltd
sahf
dec
and
fiaddl
add
sbb
adc
inc
sbb
jmp
add
call
dec
pop
fmuls
mov
mov
not
cli
sar
adc
fadd
or
outsb
mov
sbb
xor
adc
sbb
mov
daa
iret
out
add
dec
sbb
mov
daa
popf
daa
daa
fldlg2
mov
xor
subps
pusha
rcrl
xor
sbb
sbb
roll
xor
add
add
add
dec
and
add
data16
ret
sarb
pop
jo
out
fwait
mov
jmp
inc
in
xor
xchg
mov
lahf
inc
pop
fs
and
inc
mov
xor
incb
insb
dec
arpl
add
lret
add
icebp
leave
jne
cltd
cmp
sti
fsubrl
inc
jmp
subb
sbb
mov
add
cli
fdiv
out
hlt
xor
mov
or
aad
xor
inc
ret
inc
add
jne
test
call
cmp
ret
shrb
sti
cmp
jbe
and
icebp
fdivrl
pop
loop
adc
sbb
sti
add
sbb
pusha
arpl
in
add
sub
rorb
add
adc
fadds
rorb
xor
jmp
divl
mov
or
mov
idiv
xor
lds
call
sbb
adc
sub
pop
pop
and
push
movsl
shr
add
sbb
jne
cmp
call
mov
je
movsl
cli
jg
popf
das
jne
add
adc
dec
shl
sub
push
out
add
mov
jl
sti
add
inc
testl
add
movsl
xchg
incl
sub
jb
add
out
add
incl
sub
aas
mull
lret
dec
jecxz
jno
dec
idiv
sti
cmp
adc
stos
jne
add
jne
mov
add
add
add
add
sbb
mov
adc
mov
rcl
not
push
xchg
imul
xor
arpl
push
xor
cmpsb
add
inc
jno
mov
sbb
sub
nop
push
and
rcll
cmp
cli
loop
faddl
bound
arpl
jmp
adc
xadd
add
jmp
or
fsqrt
stos
sbb
dec
cmpps
pop
popf
cli
sbb
idiv
mov
mov
pop
xorb
hlt
or
sbb
push
add
cmovle
in
push
idivl
into
stos
hlt
sub
bound
je
rorl
or
mov
les
add
jae
push
pop
cmp
loop
add
adc
lds
jge
adc
clc
fcoml
sti
pop
stos
add
push
bound
add
in
cmpsb
test
call
xor
loop
mov
sub
cmp
xchg
mov
lds
push
aad
sti
jns
jecxz
imul
inc
sub
adc
mov
adc
outsl
sub
add
add
lea
push
adc
int3
xchg
or
xor
rolb
cmp
arpl
jne
lods
dec
sbb
or
jmp
and
jne
and
or
inc
sbb
inc
dec
pop
pop
ret
push
mov
ret
mov
add
lods
jne
add
push
not
pushl
imul
jl
rolb
mov
push
lock
clc
jne
popa
xor
fcomps
fcoml
sti
inc
push
sti
dec
xabort
out
decb
sbb
mov
pop
dec
or
add
int3
or
dec
testb
or
add
mov
cld
mov
mov
mov
jo
lahf
lock
testl
pop
rolb
sbb
add
mov
adc
shr
repnz
mov
out
out
add
mov
jo
mov
jo
stos
and
iret
popf
neg
mov
jo
dec
add
insb
xor
test
mov
je
push
nop
xor
inc
negl
ret
mov
sub
xor
dec
js
loope
add
xor
jecxz
fs
lret
divps
cmp
insb
ret
ret
and
lds
call
jo
fmull
call
out
add
sub
jmp
rolb
repnz
out
aas
jmp
cld
inc
das
inc
sbb
add
inc
icebp
je
jbe
je
je
das
mov
add
rclb
imul
mov
filds
andl
push
out
lock
repz
leave
stos
divl
push
bound
in
sbb
or
pop
outsl
add
test
or
jmp
loop
xor
test
and
and
jne
xchg
incb
call
pop
cmc
je
hlt
add
lea
in
call
add
add
add
iret
idiv
inc
cld
xlat
lea
outsb
notl
nop
out
add
add
push
pusha
mov
cmpsl
ds
sti
jge
jge,pt
add
xor
add
mov
pop
mov
sub
fnstsw
mov
mov
push
insb
maskmovq
push
mov
lret
dec
call
insb
mov
add
leave
mov
mov
sti
jle
add
aaa
mov
push
aaa
lret
pop
mov
fcompp
push
mov
add
or
gs
cli
add
adc
push
cmp
add
lods
inc
jmp
imull
xor
xor
lods
dec
cmova
push
insb
xor
xchg
xor
jo
push
les
in
repnz
mov
sub
lods
and
mov
jmp
and
les
add
je
pop
add
mov
divl
sbb
std
mov
sbb
stos
movsb
repz
lods
lods
out
sub
repnz
mov
js
inc
in
xor
adc
cli
mov
add
add
add
add
aad
xchg
std
mov
add
ret
jmp
in
jo
push
dec
lods
inc
fldenv
adc
push
sbb
fsubl
jp
ss
call
fidivrs
icebp
cltd
inc
in
add
imul
mov
mov
and
sti
arpl
adc
add
add
add
add
and
test
sub
fstps
lcall
xor
and
hlt
test
call
test
push
pop
not
or
push
aad
decl
bound
cmp
pop
pop
jnp
inc
push
not
int
or
fdiv
or
movsl
addr16
add
cmp
xor
xor
or
and
push
orl
add
divl
sti
into
dec
jne
call
arpl
je
popf
add
sub
mov
add
xor
sbb
xchg
insb
pop
mov
or
add
ss
popf
jmp
jl
int3
int3
or
mov
push
push
jl
xor
mov
pop
data16
jp
push
test
lea
shl
jne
jae
sti
dec
inc
mov
add
add
add
dec
or
jae
lea
adc
cmovo
inc
mov
out
and
push
inc
pop
pop
sti
push
lock
inc
fldcw
mov
push
push
sub
ljmp
ja
fs
mov
jl
sti
inc
push
adc
jnp
mov
les
and
test
bound
xor
and
sar
subl
add
add
add
fldcw
je
lods
push
cmpsb
pop
jo
data16
enter
mov
and
jae
mov
cmp
fiadds
xor
jnp
mov
sbb
xchg
xor
inc
imull
jmp
in
fnstsw
arpl
int3
stos
sbb
mov
jmp
inc
test
outsb
add
jecxz
stos
add
pusha
call
insl
mov
add
mov
mov
hlt
xor
out
les
adc
add
push
out
and
out
jmp
pop
xor
jmp
mov
push
sbb
jecxz
stc
sahf
jo
cmpsb
iret
or
sub
xchg
sub
dec
insl
jbe
repz
decl
out
jmp
add
add
add
loop
leave
pop
jno
pop
decl
stos
hlt
xchg
xor
xor
pop
je
dec
xor
xor
jge
leave
inc
sahf
into
push
loope
and
popf
xor
decl
xchg
cmp
lea
cmp
stos
mov
cmp
lcall
add
sbb
cmp
fidivl
add
xor
rol
push
leave
dec
sub
push
push
in
jecxz
cmp
call
dec
in
je
pop
mov
rcrb
test
xchg
mov
lahf
mov
add
xchg
mov
pop
jp
jae
lds
dec
mov
cpuid
sarl
divl
jb
test
in
cmp
aaa
loop
jge
in
sti
xchg
pop
fdivrs
add
dec
mov
inc
xor
sub
jnp
push
cli
xlat
aas
testl
dec
pop
push
xor
or
mov
pop
sti
ffreep
mov
call
lret
arpl
push
sti
pop
inc
adc
test
sar
xor
in
out
fst
loopne
iret
add
leave
push
lea
xlat
ret
inc
pop
outsb
filds
jbe
loope
divl
adc
xor
lods
add
pop
mov
pop
testl
ljmp
test
fbstp
mov
jmp
jb
shlb
adc
loop
testb
lcall
dec
in
divl
je
fbstp
jmp
xor
lea
sti
pop
and
sub
popf
mov
sub
into
stos
hlt
and
add
daa
stos
in
push
hlt
mov
push
mov
hlt
xor
jmp
sti
xor
mov
test
add
test
hlt
xor
mov
add
sbb
jo
cmp
xor
xor
test
add
add
add
lea
push
std
lcall
add
test
call
test
inc
or
adc
inc
sahf
xor
adc
test
push
mov
mov
jb
rcrb
mov
xor
or
int
pop
rorb
notb
int
dec
je,pn
iret
mov
loopne
push
sub
add
add
add
add
xor
push
xchg
fadds
add
insb
add
outsb
pop
inc
pop
add
jmp
popw
jmp
push
xchg
ss
cmp
popf
aas
shlb
popa
mov
cmp
xor
xor
call
add
push
subb
fisttpll
sti
pop
mov
inc
jl
es
add
add
add
mull
mov
sti
dec
or
call
sti
jl
xor
jp
out
std
and
call
jl
dec
call
xor
rolb
inc
stc
lock
xor
push
adc
add
jmp
push
mov
pop
jmp
add
testl
scas
mov
add
mov
out
mov
out
scas
mov
adc
jmp
outsb
ds
mov
fdivrl
mov
and
fwait
mulb
xor
add
js
mov
add
sti
scas
and
cmpsb
adc
sti
cmpl
ret
mov
sub
push
or
iret
push
inc
mov
jae
hlt
test
incl
pop
and
stc
pop
nop
stos
out
jo
sub
xor
loopne
aas
jmp
pop
stos
pop
cmpsl
movsb
xor
xor
xchg
pop
and
push
lods
sub
sbb
jecxz
mov
repz
sbb
incb
lret
lods
jecxz
push
xchg
testl
xor
into
xor
add
xchg
adc
mov
adc
inc
jo
pop
xor
xchg
mov
lds
xor
or
ljmp
fnsave
dec
mov
inc
add
mov
push
add
lea
push
push
notl
add
add
ljmp
or
xchg
jecxz
clc
sbb
je
addr16
data16
inc
into
xor
in
stos
mov
add
shlb
in
fwait
insb
inc
add
push
cmc
orl
sti
out
sti
cwtl
push
les
jnp
in
mov
or
push
les
add
in
push
sahf
jecxz
inc
add
imul
add
mov
xlat
arpl
loop
call
lods
shl
fdivs
xchg
and
add
push
mov
divl
xchg
in
lock
jmp
fcomip
xor
push
fsubl
rcll
xor
movsl
out
call
add
jbe,pt
jnp
cmp
add
xor
out
cwtl
pusha
out
stos
insl
ret
cld
mov
in
stos
test
cmc
loopne
outsb
dec
in
xor
andl
xor
sbb
push
fucomi
sub
pop
pop
xchg
mov
xor
daa
sub
sarl
and
hlt
xor
data16
and
icebp
xor
rcll
and
jecxz
dec
sahf
aam
andb
add
add
cli
xor
add
mov
sti
jmp
addr16
and
dec
sub
stos
hlt
cwtl
push
cmp
xor
mov
fdivrs
push
shl
sbb
cmp
sti
aam
cmp
andl
inc
jmp
pop
jne,pn
pusha
adc
xor
add
mov
add
cltd
jnp
add
in
in
add
or
ss
cli
decl
jne
add
mov
rorb
adc
call
pop
push
cltd
pop
ret
push
mov
mov
push
cmp
xchg
push
cmp
or
jns
idiv
sbb
xchg
push
mov
push
arpl
mov
jb
push
pop
add
xor
sti
loop
cmc
aas
negl
je
fdivrl
notl
xrelease
xchg
mov
sbb
xor
ljmp
call
and
xchg
add
clc
ljmp
dec
pushf
xor
push
or
dec
rcpps
jg
loopne
mov
test
xor
mov
je
testl
jo
test
and
mov
out
andb
or
popl
inc
in
lock
cmpsl
mov
loope
cmpsl
ss
sti
andb
fsubrs
dec
or
in
mov
stos
test
xor
test
inc
jb
adc
fucomp
xchg
loopne
test
mov
add
cmpsl
push
mov
out
xor
cmpsb
add
xor
mov
fdivrs
insl
mov
ljmp
mov
sbb
xchg
hlt
mov
jmp
shrd
fildll
notl
sahf
xor
adc
cmpb
cmp
repz
xor
mov
iret
mov
mov
and
andl
xor
jmp
xor
test
pushf
jmp
call
decb
test
jne
add
mov
call
mov
dec
push
adc
jnp
push
roll
xlat
scas
jo
icebp
test
adc
lret
insb
jne
add
xchg
jmp
sbb
add
xor
jmp
insl
or
mov
xor
call
push
or
js
add
jbe
rolb
fidivrs
mov
xor
add
mov
add
daa
stc
pop
testl
add
adc
jo
jb
das
imul
add
add
xor
out
pop
push
mov
mov
lret
inc
iret
xor
lea
xchg
jmp
hlt
sbb
sti
je
fnsave
ret
inc
fnsave
or
insb
pop
cwtl
aaa
call
loopne
insb
call
jl
jo
xor
mov
repnz
negl
decl
xor
popf
movsb
pop
xor
das
fs
pop
or
hlt
mov
movsb
aas
daa
pop
out
repnz
jmp
sub
fstpl
mov
add
jo
test
fldenv
cmp
movsb
enterw
inc
fwait
pop
data16
and
jmp
add
add
cmpl
idiv
push
repnz
xor
add
sti
xchg
testb
sub
xor
out
fstpt
sub
and
fnstsw
daa
outsb
cmp
sbb
push
mov
push
in
mov
push
roll
add
sub
jmp
xor
sti
push
movsb
and
es
shlb
add
adc
cmpsb
sti
jb
and
stc
add
hlt
cli
call
das
das
test
hlt
addr16
icebp
in
mov
jmp
scas
mov
pop
add
addl
leave
sbbl
inc
sub
inc
data16
xor
cmp
jne
sbb
insl
idiv
adc
test
sub
add
add
incl
add
add
xchg
cmpl
je
xchg
sub
mov
xchg
decb
xor
aaa
add
loopne
call
cld
rolb
inc
dec
or
add
sahf
divb
mov
push
hlt
daa
stos
lock
jg
mov
jge
adc
mov
mov
lock
iret
aaa
add
mov
sti
or
loop
out
dec
dec
test
mov
xor
sub
sti
dec
jbe
sti
cmp
push
cld
lahf
ret
dec
inc
testl
lahf
add
pop
ss
ds
sub
hlt
xchg
decl
push
call
xor
xchg
fxch
mov
int
pop
or
lods
sub
add
adcb
test
and
pop
push
fdivrs
lods
mov
and
es
mov
adc
cld
pop
repz
divb
jmp
add
or
xor
lahf
fcmovu
pop
ljmp
cmpsl
stos
sub
mov
flds
in
stos
add
jns
clc
cmpsl
mov
inc
xchg
xchg
fnstenv
ss
test
mov
leave
stos
movsb
lahf
push
jb
mov
and
xor
mov
cmc
xor
lcall
jmp
insb
cli
cs
add
lods
cmp
xchg
movsb
mov
fwait
das
pop
jmp
xchg
add
testb
add
add
add
add
jle
and
sbb
repnz
lods
jne
adc
jnp
stos
xor
idiv
test
idiv
pop
jne
inc
push
fucomip
and
testl
test
mov
dec
mov
lea
add
xchg
xchg
out
addr16
idiv
add
je
or
insl
call
mov
jecxz
mov
xchg
idiv
insl
insb
dec
lea
or
push
adc
jnp
notl
aaa
leave
xor
imul
inc
data16
lahf
scas
cli
rclb
je
adc
call
int3
mov
rclb
testl
incl
imull
lods
loopne
xchg
or
push
sar
testl
vmulss
ror
shlb
insb
aaa
out
mov
inc
add
and
cli
int
xchg
sub
add
xor
push
clc
stos
mov
add
mov
mov
xor
add
xor
add
add
add
jns
in
or
incl
pop
xor
pop
movsb
bnd
lods
divl
jnp
clc
jle
add
and
pop
aad
ss
shlb
push
repnz
push
pushl
mov
mov
xor
ljmp
cmpsb
add
fs
push
push
xor
sub
dec
cwtl
pop
sub
mov
cmp
jmp
rcrl
fdivrl
sarb
xchg
jg
adc
call
xchg
xor
add
sub
sub
inc
push
add
inc
mov
xor
scas
call
lret
sar
sub
push
bound
in
xor
je
sub
mov
sub
sti
hlt
add
inc
add
sbb
je
pusha
dec
jmp
das
add
ljmp
sub
inc
push
negl
test
jle
arpl
and
gs
call
push
jne
sub
divl
mov
adc
xor
jmp
jg
pop
mov
incl
pop
idivl
add
mov
ljmp
clc
pop
incl
or
pop
push
mov
cs
mov
xor
call
jae
pop
adc
mov
call
inc
mov
inc
jp
lcall
test
loop
testl
out
add
push
xchg
divl
aaa
cmp
imul
cmp
cmp
iret
xchg
mov
mov
les
mov
fldt
mov
shlb
adc
cwtl
cld
adc
negl
adc
push
jo
pop
bound
divl
xorb
data16
insb
inc
pop
add
lock
xor
xchg
test
mov
sub
fcomps
test
jbe
mov
mov
cmpb
pop
add
pop
rorl
dec
fstpt
pop
sarl
frstor
jo
add
insb
sbb
add
or
nop
stos
xor
pushf
xchg
hlt
and
bnd
in
mov
in
and
dec
jae
incb
inc
nop
add
out
sbb
dec
adc
jns
add
hlt
out
adc
sub
hlt
movsl
inc
add
lds
sti
xchg
cmp
and
in
add
xor
jmp
xor
mov
imull
cld
pop
es
jmp
pop
xor
and
and
add
lahf
ret
adc
mov
push
test
sub
add
adc
je
lods
or
btr
add
lods
and
decl
shll
xor
call
push
test
add
push
addr16
negb
mov
add
push
sti
adc
add
clc
add
imull
dec
mov
fdivl
mov
jno
sti
ljmp
aaa
dec
mov
xlat
push
mov
xor
aas
test
lret
sbb
adc
inc
sub
divb
in
add
bound
daa
adc
xchg
gs
out
inc
xor
jle
xlat
sbb
mov
mov
fs
mov
xchg
mov
scas
cwtl
xchg
ret
icebp
call
xchg
outsb
sbb
test
hlt
sub
insl
ret
jmp
and
daa
call
add
and
cmp
mov
clc
xor
negb
mov
popf
jb
add
les
push
call
xorb
add
add
add
add
mov
in
xchg
pop
dec
adc
fdiv
lret
jae
cmp
add
int3
hlt
xor
push
int
in
int3
and
xchg
mov
mov
ljmp
rolb
add
loopne,pt
xor
out
jbe
and
hlt
mov
add
xor
ds
sub
aam
data16
jmp
hlt
mov
cmp
sub
test
push
or
stos
hlt
add
adc
xor
rcll
sti
ficomps
or
inc
hlt
movsl
inc
or
stos
outsb
inc
or
jno
je
jnp
and
popf
sbb
adc
dec
adc
pop
call
jo
clc
add
pushf
sti
jae
imul
leave
add
pop
or
dec
imull
mov
call
incl
fwait
mov
movsl
push
mov
js
rorb
push
xor
pusha
divl
addl
adc
mov
call
test
cs
or
mov
rorb
movsl
inc
add
lahf
pop
mov
mov
mov
fcmovne
add
testl
add
out
jnp
sbb
add
jp
add
testl
push
movsb
hlt
jg
pop
mov
jmp
cmp
and
outsl
and
sbb
testb
ret
mov
cmp
sti
addb
inc
push
pop
add
dec
dec
mov
not
lock
inc
add
dec
sub
mov
xor
rep
adc
out
sbb
xor
or
jmp
sub
jmp
pop
out
ljmp
mov
lret
dec
stc
dec
cmc
xchg
mov
lret
or
mov
hlt
int3
jmp
sbb
out
inc
dec
add
mov
div
sbb
lret
add
add
add
add
or
inc
testl
jecxz
jno
add
dec
out
sub
cld
loopne
insl
fadds
adc
fwait
cltd
push
mov
mov
xor
divb
mov
xor
lea
loope
xchg
mov
xor
mov
hlt
mov
adc
lea
add
add
add
add
add
add
sub
mov
psubsw
sub
icebp
fldl
out
jae
add
jnp
add
add
hlt
add
inc
jmp
cmp
out
out
ret
adc
icebp
xor
imull
adc
xor
negb
je
jbe
jno
aaa
sahf
sahf
xor
add
add
add
add
or
pushl
mov
loopne
mov
push
mov
les
push
mov
push
sub
pop
mov
inc
call
mov
psrlq
add
add
popf
fistl
into
xor
pop
cmpsl
jb
shl
cmpsl
or
sbb
aas
neg
xor
add
push
mov
cwtl
jl
stos
sbb
add
xor
xchg
jnp
or
jl
adc
addr16
jae
dec
and
scas
add
clc
movsl
cmpsl
daa
xor
std
cmp
pop
sbb
add
xchg
inc
xchg
aad
xlat
ret
leave
jp
push
aaa
jl
ret
jmp
jg
fimull
add
ret
bnd
add
xor
xchg
adc
ret
rol
jp
push
std
inc
mov
mov
leave
pop
stos
jp
cmp
mov
loopne
cmp
mov
mov
push
das
sbb
das
fsubrs
inc
mov
sub
inc
testl
jl
push
lods
movl
mov
mov
add
xor
xor
jmp
sub
or
add
inc
adc
lods
out
mov
loopne
jmp
dec
sub
xchg
mov
out
lock
sti
jb
test
cs
inc
mov
xchg
nop
xchg
pop
mov
mov
hlt
jge
xor
jb
pop
add
sti
fdivl
icebp
cli
aam
loope
jge
xchg
ds
mov
xor
mov
add
cmp
add
lea
inc
push
out
addb
mov
or
dec
push
je
inc
push
push
jmp
int
push
int3
push
add
pop
mov
push
add
pop
dec
call
and
call
adc
jns
dec
hlt
mov
das
addl
or
jne
xchg
inc
hlt
orb
adcb
je
dec
outsl
test
imull
pushl
test
scas
lods
add
dec
es
cwtl
decl
neg
add
dec
mov
add
add
add
cmp
cmp
and
lods
std
notl
ret
cmpsb
mov
mov
inc
mov
mov
leave
xchg
mov
jne
mov
mov
sbb
int
sti
xchg
pop
xchg
cmp
cwtl
dec
sbbb
cmp
mov
pushf
pop
sti
ljmp
jne
xor
in
mov
cmp
dec
leave
aaa
pop
dec
loopne
add
dec
hlt
cmp
dec
mov
cmp
shr
icebp
aas
test
pop
js
scas
pop
mov
push
ret
mov
mov
push
cmp
divl
jmp
int3
fdivrp
xchg
aaa
std
mov
and
add
ret
adcb
xor
nop
sub
outsl
or
dec
ljmp
repz
ret
insb
ret
add
mov
add
xor
cmp
ss
cli
jmp
call
xor
add
push
or
add
int3
mov
add
push
cltd
fidivs
lods
mov
hlt
xor
sub
xor
jnp
xor
inc
in
jmp
mov
and
ljmp
xchg
outsl
jno
loopne
out
stc
call
add
jb
jbe
cmp
mov
arpl
test
lea
jb
lcall
out
testb
aad
push
out
testb
aad
cmp
jne
pop
dec
testb
cmc
cmp
cmp
cmp
sub
cmp
or
mov
add
add
add
xchg
outsb
and
push
mov
push
add
push
pop
adc
sub
rorb
inc
lock
sbb
aam
mov
dec
clc
out
sbb
not
mov
shr
inc
mov
dec
cld
jl
xchg
test
cmp
rcrb
mov
xor
lds
mov
test
mov
and
xchg
mov
add
jl
sbb
cmp
mov
out
es
cmp
dec
push
cmpb
ljmp
xchg
jg
ficomps
push
lea
xor
push
or
ja
ss
adc
rcrb
loope
xor
out
xor
imul
out
xor
imul
add
add
add
sub
jno
out
popa
pop
xor
or
mov
pop
cld
mov
mov
mov
jecxz
cmp
in
add
push
jno
inc
and
outsb
mov
js
fs
and
aaa
shll
cli
lea
out
inc
out
or
popa
mov
add
in
add
cmp
aam
mov
pop
mov
or
jmp
xor
xchg
xchg
jb
sbb
enter
mov
xor
clc
adc
cli
idivb
das
sbb
jle
sub
in
push
add
push
stc
or
jle
jecxz
je
jbe
adc
add
ss
call
cmpsb
call
cmp
inc
jmp
jg
sti
add
xor
cmp
mov
jb
cmpb
pop
xor
dec
xor
aad
testl
fwait
cmp
mov
mov
jae
mov
adc
outsl
or
mov
or
or
add
jb
hlt
inc
nop
mov
jb
mov
add
jp
add
das
je
pop
inc
adc
add
jnp
sahf
xor
adc
xor
clc
int
sti
mov
push
mov
mov
push
sbb
rcll
fbstp
dec
pop
jl
and
test
jl
adc
sub
pop
xchg
and
xor
push
xchg
test
push
enter
sbb
mov
mov
call
inc
clc
insb
aam
lea
add
mov
lds
jle
sti
add
inc
notl
rorb
mov
mov
les
xchg
jmp
je
sahf
add
xchg
std
jmp
int
adc
mov
xor
clc
testb
mov
popa
xor
xor
add
call
out
add
test
mov
notl
pop
js
icebp
xchg
xor
out
addb
mov
lcall
mov
xchg
and
push
fdivr
hlt
mov
insl
testl
and
mov
xor
xchg
mov
icebp
imul
out
mov
dec
je
mov
xchg
pusha
mov
test
hlt
xor
fisttps
fimuls
pop
and
fcompl
jne
je
aaa
repz
xchg
xorb
sti
bound
mov
sti
inc
inc
icebp
daa
cs
pop
lock
fisttps
loop
ljmp
idiv
add
and
jne
jae
pop
scas
mov
add
into
int3
rol
jo
sti
jl
scas
inc
or
sti
divb
stos
jne
dec
les
jge
lods
pop
hlt
in
pop
adcb
inc
or
ret
push
mov
jecxz
push
movsl
mov
ljmp
not
icebp
dec
or
icebp
cmp
add
cmp
fwait
sub
mov
mov
push
outsb
push
or
mov
push
cld
std
jae
sub
pop
cli
cwtl
add
test
push
push
and
push
les
jne
add
out
idivl
repz
xor
and
mov
mov
adc
cld
mov
testb
sti
adc
call
add
add
add
mov
leave
xor
xor
jmp
scas
pop
mov
mov
or
imul
cmp
cli
sub
outsl
rcll
add
mov
push
xor
dec
sub
add
mov
mov
sub
mov
jbe
mov
pop
jle
add
xor
stos
lret
jb
mov
pop
fs
cmp
sbb
sub
xor
pop
mov
testl
mov
test
outsl
add
filds
add
jns
pushf
add
add
fwait
ds
shlb
fistl
mov
add
push
or
cmp
pop
insb
add
icebp
add
jg
icebp
loopne
test
mov
fdiv
xor
hlt
testb
sbb
cmpsl
inc
popa
jg
idivl
hlt
or
call
clc
jb
cmp
dec
push
lret
jmp
inc
mov
mov
outsl
repnz
rcrl
push
inc
fisubrs
sbb
sub
adc
xor
add
add
add
add
cmp
cmpl
sbbl
push
stos
adc
add
xor
mov
sub
rclb
hlt
call
push
adc
adcb
mov
pop
xor
xor
testl
cmpsl
dec
lock
xchg
cmp
cmp
dec
add
fxch
je
imul
incl
testl
in
dec
mov
adc
cld
stos
dec
fsubs
aaa
mov
je
dec
jg
pushf
mov
in
mov
es
inc
mov
test
cmpsb
add
or
add
add
cld
loopne
mov
jp
sub
push
sbb
push
clc
sbb
jge
ja
pop
add
aad
add
in
and
aad
and
xlat
cmp
incl
xor
xchg
jp
jg
add
mov
jge
shlb
addl
testb
in
jo
int3
sub
xor
add
xor
mov
sbb
inc
imull
pop
dec
out
movsl
add
nop
lret
add
add
add
add
xor
dec
repz
cmp
adc
lods
sub
cmpsb
jns
adc
lock
mov
add
or
add
add
inc
jbe
push
xor
jecxz
xlat
call
movsl
add
je
cmp
push
idiv
and
test
jg
or
push
ss
add
jne
add
outsb
call
arpl
shll
idivb
inc
mov
or
sti
xchg
mov
push
and
mov
mov
jns
jne
popa
ret
sti
rep
test
add
cmp
cld
mov
dec
push
mov
std
jmp
mov
add
xor
inc
addr16
adc
test
je
mov
or
testl
add
pop
mov
jne
dec
mov
divb
pop
add
pushf
jae
into
xor
lock
pop
mov
cmc
aad
lret
lcall
insl
je
pop
lock
data16
add
cmp
jne
xchg
mov
testl
pop
filds
push
divl
mov
lea
ja
add
jl
add
pop
mov
je
hlt
outsb
sti
pop
mov
jne
mov
push
sub
push
pushf
bound
xchg
push
xchg
data16
shll
call
ja
mov
add
testb
push
add
mov
add
xchg
hlt
sbb
add
push
out
out
xor
mov
shr
popf
fistpl
mov
sbb
jmp
inc
sbb
inc
outsb
jl
and
push
test
pushf
or
jno
sub
jmp
jp
xchg
mov
arpl
leave
jbe
sbbb
into
add
jg
in
loope
psllq
inc
mov
push
or
dec
adc
adc
imul
xchg
sbb
pop
sub
insb
cmc
cmpb
scas
pop
loope
arpl
push
sti
inc
ret
aaa
push
scas
adc
fiaddl
sub
cli
xlat
sub
lods
cmp
popa
jo
shlb
ss
mov
cltd
sbb
fbstp
jg
mull
sti
cltd
ja
scas
cmp
arpl
and
mov
mov
add
insl
add
hlt
push
xor
sti
mov
loopne
pop
iret
mov
mov
mov
dec
jns
test
hlt
xor
add
adc
mov
adc
idivl
jbe
cmp
add
arpl
cmc
jmp
sub
add
loope
jge
cltd
rorb
cmp
cmp
loope
jg
fidivs
add
jnp
pop
xchg
das
add
test
inc
test
push
inc
add
or
pop
cmp
inc
pop
imul
mov
xor
aas
fucomp
add
add
pop
jmp
sbb
cli
jne
pop
neg
testl
sub
imul
xchg
jb
enter
push
call
add
add
add
mov
mov
sbb
fwait
xchg
cmp
btrl
and
mov
sbb
jecxz
lds
xor
popa
test
adc
shlb
mov
je
dec
jg
mov
cmp
outsb
xchg
outsb
jmp
sbbl
adc
loope
pop
inc
add
test
add
xor
add
jae
add
jno
ret
stos
and
pop
cmpsl
movsb
fwait
sbb
cmp
sbb
std
cmp
sbb
std
sbb
in
in
or
xchg
push
add
in
add
push
es
int3
xchg
cmp
push
stos
daa
test
mov
sahf
fs
lods
cmpsb
fnstcw
sub
ljmp
cli
push
jno
call
mulb
loope
hlt
add
inc
jmp
cmp
or
jb
xlat
call
dec
add
and
jp
hlt
cld
or
mov
loope
mov
mov
mov
pop
jbe
mov
mov
movsl
dec
jbe
movsb
mov
mov
lea
lods
add
mov
jmp
pop
loopne
aas
and
jge
xor
xchg
xor
jmp
and
jecxz
cmpsb
xor
call
pushf
insl
jmp
mov
sarl
jle
jnp
dec
aas
inc
lea
and
notl
int
hlt
add
out
mov
xchg
jnp
and
adc
add
adc
sbb
test
pop
sbb
mov
cmp
xor
lock
ljmp
mov
hlt
sahf
out
negl
ret
or
push
loop
hlt
hlt
sbb
das
movsl
cmpsl
scas
das
mov
popa
jle
jo
jp
outsb
out
mov
pop
xchg
pop
incb
stos
mov
push
push
cmp
and
jle
imul
fwait
xlat
popa
insb
mov
sti
popa
cld
sbb
mov
ret
sti
dec
adcb
push
pop
clc
sbbl
inc
bound
imul
lcall
push
jb
sti
push
cmp
and
xchg
jbe
sbb
daa
mov
fcoml
add
lock
test
cmp
add
hlt
test
aas
push
ret
mov
fisubrs
jb
xor
pop
sub
add
push
stos
or
jg
in
test
pop
outsb
dec
add
clc
divl
mov
fwait
or
jno
inc
jo
or
cmp
jmp
in
jbe
dec
xchg
test
mov
data16
jae
or
xor
adc
xor
jg
lahf
mov
cmp
aam
sbb
push
shl
lock
cmp
push
sub
mov
sbb
cwtl
hlt
rep
mull
cmp
cmp
xchg
push
push
lock
lcall
pop
lea
pop
xor
pop
sub
jge
jg
pop
mov
add
add
add
xor
jne
or
jno
adc
adcb
push
jmp
call
pop
dec
xchg
jne
mov
mov
mov
notb
dec
gs
push
adc
mov
hlt
pop
incb
mov
gs
pop
add
in
inc
lock
xor
add
adc
inc
clc
mov
add
jne
ljmp
adc
add
pop
popf
testl
stc
imul
negl
aas
cld
or
sub
stc
into
aaa
clc
push
add
sbb
push
testl
pop
add
ffree
jne
fidivrs
cld
insb
xchg
pushf
pop
repz
cli
ret
imulb
test
add
adc
jl
mov
hlt
jl
sti
cli
mov
pop
inc
clc
out
push
stos
or
movsb
sti
and
js
jl
pushf
in
repz
incl
mov
dec
call
divl
sub
pop
ret
add
xor
inc
ss
aaa
or
icebp
js
es
js
cmp
add
mov
divl
jmp
movsb
jo
imulb
jo
lods
sbb
and
int
cmp
ss
fsubp
js
push
out
dec
pop
inc
aas
movsl
cmp
adc
or
stos
sub
imul
adc
out
pop
dec
push
imul
mov
jo
jg
in
pop
mov
aas
enter
insl
pop
add
pop
addr16
push
ja
add
adc
sti
xlat
add
pop
xchg
jmp
in
outsl
out
sub
xor
das
test
mov
stc
push
sbb
jo
insb
cmp
out
out
in
imul
jmp
jns
sbb
xchg
in
mov
adc
repz
jne
xchg
hlt
sti
sub
cmp
mov
jl
jo
sti
mov
ja
in
add
add
add
add
mov
mov
fistl
xor
gs
sti
js
js
into
inc
sbb
mov
and
mov
shrl
mov
shlb
inc
cld
int
mov
jl
mov
leave
ret
dec
push
adc
mov
idiv
xorl
call
addl
add
add
add
add
jge
jge
jecxz
insl
insl
inc
pop
xor
inc
cli
cmp
dec
idivl
adc
repz
mov
pop
and
lcall
xor
lret
pop
xor
vmulsd
inc
adc
dec
fistl
xchg
ss
jmp
fstpt
add
fstps
incb
add
test
pop
sub
push
insb
cmp
sub
cmpps
call
pop
mov
xor
xchg
outsb
push
pop
fldt
push
inc
lods
add
push
lea
sub
jmp
cs
dec
fsubrs
jg
inc
mov
or
push
call
les
sub
sub
and
xor
mov
lahf
xor
mov
loopne
and
js
les
xor
sub
outsb
imul
mov
divl
je
mov
pop
jg
mov
aaa
scas
clc
in
jb
sub
and
aaa
xchg
push
imul
xor
bound
test
add
jmpw
test
hlt
xor
and
in
add
pop
scas
icebp
jne
pop
jge
push
push
cmpsb
lock
ret
fs
fisubrs
jne
cmpsb
cmpsb
out
jge
add
int3
ja
shll
cli
mov
jno
mov
cmp
mov
sarl
sub
add
bound
inc
dec
mov
or
sub
pop
cmp
push
add
sbb
jne
xchg
mov
push
xor
mov
xchg
xchg
sub
push
leave
sbb
add
mov
push
pop
call
mov
idiv
push
insl
je
jne
cmp
insl
pop
cmp
lds
andb
add
es
mov
xor
shlb
data16
add
nop
clc
testb
inc
cmp
add
sbb
sbb
push
cmpsl
out
adc
sbb
xor
xor
adc
cltd
jg
pop
or
ret
das
dec
or
xchg
add
mov
dec
jb
sti
dec
fcomps
adc
pop
jle
sti
or
negb
inc
pop
lods
fdivrl
xlat
in
subb
pushl
xchg
xlat
mov
add
repz
adc
mov
and
dec
popf
adc
je
lods
adc
adc
or
inc
mov
in
lds
inc
je
roll
insb
inc
fildl
push
idiv
cmp
lds
jmp
and
in
mov
maskmovq
in
jle
fadd
add
fs
cmp
jno
xor
jb
call
iret
das
test
cmpsl
mov
sub
lods
ss
mov
sti
xor
shlb
testb
cmp
call
das
ss
xchg
pusha
sbb
js
xlat
add
jp
mov
push
add
mov
lea
mov
xor
jno
jmp
imul
adc
xor
jg
lock
rolb
sbb
or
and
sub
repnz
sub
add
jns
mov
adc
sbb
or
inc
and
xchg
pusha
movhps
sub
shlb
movl
add
add
sbbl
test
push
ret
add
mov
add
stc
push
cmp
aas
negl
je
jnp
push
pop
les
shlb
icebp
adc
fdivs
adc
dec
insl
push
ret
jl
mov
push
push
ret
sub
jnp
mov
add
pop
and
aas
or
je
out
ret
aad
xchg
xchg
xchg
aam
in
pop
xchg
xchg
sti
inc
sub
das
lea
test
aas
not
mov
add
repz
negl
cltd
sti
lock
mov
iret
dec
movsb
cli
ror
jg
leave
inc
xchg
push
shlb
aaa
dec
add
inc
int
and
test
sbb
cltd
dec
dec
mov
divl
xchg
ret
cltd
insb
add
pop
ljmp
stc
stos
stos
lods
push
push
fwait
cltd
jae
sbb
push
push
pop
addb
add
push
testb
jmp
call
icebp
shlb
repz
xor
inc
fyl2x
add
xor
ljmp
or
mov
std
int
lods
and
cmp
add
jnp
clc
daa
xor
add
mov
aas
pop
inc
fdivr
xor
addb
aas
jmp
push
pop
sti
scas
fdivs
idivl
cld
cmpsl
mov
add
repz
and
sub
cli
mov
popw
add
add
add
add
inc
call
mov
pop
inc
adc
mov
jg
clc
popa
fsub
mov
mov
int3
in
inc
jmp
jge
sbb
or
inc
add
test
push
pop
dec
mov
mov
bound
jl
sbb
sub
inc
pop
and
roll
lea
and
inc
pop
adc
pop
cmp
inc
divl
and
std
jae
cmp
outsl
inc
cs
sbb
cmpsl
ds
lret
test
jecxz
xor
mov
and
ret
pop
adc
mov
or
jno
inc
pop
xor
sbb
je
adc
dec
sub
mov
push
jp
add
mov
sar
pop
jmp
mov
sbb
repz
lea
test
sti
dec
jb
lea
xchg
scas
bound
jle
push
sbb
jg
fwait
jmp
fs
mov
subb
sub
inc
ret
lret
ja
add
ljmp
sti
mov
bound
out
mov
mov
push
sbb
add
add
add
and
sbb
mull
fldln2
loopne
cli
mov
in
test
mov
dec
lock
mov
mov
icebp
dec
daa
mov
cld
gs
clc
pusha
fimull
xor
push
mov
out
lret
repnz
repz
xor
addb
mov
loop
lods
das
add
pop
sub
sti
shr
ret
stos
iret
add
movswl
xor
xor
fdivl
fdivrl
iret
outsl
out
std
fldl
decb
mov
vexpandpd
fdivs
call
add
bound
pop
outsl
push
js
pusha
aam
push
call
push
jo
repz
push
call
gs
sbb
adc
sti
xchg
arpl
repz
sti
add
cld
cld
dec
xchg
push
mov
xor
sub
pop
push
bound
jecxz
jne
hlt
add
add
or
sub
outsb
cmpsl
je
lret
jno
les
sahf
cs
mov
cmpsb
pop
and
lods
mov
or
mov
add
int
idiv
fstpl
add
add
add
add
mov
add
imul
dec
sbb
jmp
cltd
add
sti
mov
add
pop
jecxz
push
add
cwtl
jno
je
mov
add
jnp,pn
xchg
mov
inc
jne
std
pop
and
add
and
dec
jle
xchg
je
int
and
das
push
pop
mov
pushf
cmpsb
in
jle
lods
pop
orb
iret
adc
mov
sub
jae
push
pushf
add
mov
adcb
sti
sarb
mov
xor
cmp
aaa
mov
and
push
enter
ja
aas
add
repnz
sbb
cmp
cld
lahf
add
call
cmp
aam
add
icebp
call
cmc
or
ret
insl
lahf
cmp
ss
lret
lcall
dec
jg
divl
xchg
xchg
xchg
sbb
rolb
add
jno
test
and
pop
sub
test
inc
pop
xor
ret
lods
sti
scas
lds
adc
xor
js
nopl
imull
add
add
add
add
jmp
and
cmpsb
jne
rorl
xchg
repz
dec
mov
sti
inc
xchg
cltd
push
out
sti
cltd
dec
scas
enter
call
mov
xchg
push
bound
in
icebp
cli
xor
insb
jo
std
mulb
fs
addr16
test
insb
push
sti
mov
sbb
sbb
inc
jg
dec
out
jmp
rsm
dec
popf
shl
cmp
or
into
cli
add
into
add
add
pop
lock
and
pop
xor
mov
dec
clc
aas
aam
or
mov
jno
add
sub
pop
test
xor
add
testl
stos
and
xchg
or
add
adc
ja
out
sti
cmp
outsb
bound
addl
add
add
add
add
test
inc
mov
cmpsb
test
and
push
mov
pushl
jb
cltd
test
and
je
mov
dec
cli
mov
jae
sbb
jl
clc
cs
xor
jnp
inc
aas
call
dec
lock
jecxz
dec
cld
je
inc
aaa
cmp
or
xchg
xor
or
push
xchg
dec
inc
aas
xor
xchg
mov
push
out
push
sbb
inc
xor
jne
loop
data16
or
jle
push
jb
cli
adcl
mov
pop
sbb
xchg
xor
movups
shll
xor
mov
pop
jnp
movsb
sub
cmpsl
std
jno
repz
mov
sub
mov
out
add
mov
pop
xor
jae
mov
int
fdivrl
pop
xchg
mov
outsb
mov
fdivrp
fwait
push
push
adc
out
add
xor
cmpsl
out
mov
loopne
mov
movsl
mov
sub
rclb
int3
repnz
ss
push
jmp
inc
fdivrs
jmp
sti
dec
jno
add
xchg
mov
add
ja
sti
jmp
fidivs
push
retw
and
sub
repz
imul
data16
pop
push
aad
jo
cltd
in
js
test
xor
call
bound
sti
xchg
movsb
inc
add
adcl
cltd
jae
divl
stos
lret
cmpsb
mov
xor
add
add
add
add
add
push
sti
add
inc
add
pop
mov
std
andl
mov
pop
notl
fdivr
push
jno
or
add
incl
aaa
int3
add
das
adc
cltd
xchg
mov
scas
shlb
repnz
add
sub
mov
add
cs
push
imul
dec
lea
stos
std
incl
pop
divl
mov
mov
push
stos
stos
shlb
or
mov
std
call
bound
test
jbe
pop
loope
or
dec
xor
inc
cmp
push
or
test
xor
mov
lds
adc
xor
nop
xchg
pop
repnz
outsb
test
xchg
xchg
js
jae
xchg
inc
jecxz
sbb
jmp
adc
jp
adc
jp
jg
rolb
push
je
xchg
xor
test
jl
jnp
jb
adcl
out
push
nop
mov
test
inc
incl
outsl
fsts
add
shll
pop
lods
test
mov
movb
lods
adc
loopne
adc
clc
nop
mov
lret
outsl
mov
movsl
jns
add
in
cwtl
xchg
jmp
js
pop
data16
xor
jle
adc
xor
mov
imul
call
fwait
mov
jne
mov
cmp
cli
out
outsb
pop
shll
popf
cli
fisubs
pop
roll
jp
in
in
int
pop
test
add
xor
push
fnstenv
push
cli
lock
lcall
ret
test
cli
xor
cmc
add
jle
aas
insb
mov
xor
jb
mov
or
mov
test
hlt
xor
adc
xor
jmp
fwait
mov
push
ljmp
test
cltd
into
test
add
dec
jg
pop
xor
mov
mov
add
pop
add
fsubrl
add
dec
out
inc
test
add
pop
jle
or
jns
dec
addl
sub
movsb
addl
pop
push
pop
fistpll
dec
mov
sub
mov
je
mov
iret
jg
add
mov
imul
negl
jae
cwtl
roll
test
and
movsl
notl
xchg
add
xchg
stos
xchg
and
out
ret
inc
sbb
mov
lds
xor
mov
xor
dec
addr16
mov
jbe
sbbb
sti
je
hlt
cli
add
lock
add
add
add
add
xchg
jg
adc
jl
add
xchg
mov
inc
dec
sbb
test
pusha
divl
insb
inc
lahf
loopne
lea
xor
adc
icebp
fdivr
add
adcl
arpl
mov
inc
dec
xor
rcl
fisubrs
daa
call
jmp
sbb
xor
add
add
add
cwtl
inc
out
call
and
popf
or
sbb
xor
jnp
dec
push
imul
dec
pop
lea
inc
loope
or
mov
fwait
imul
xor
icebp
ljmp
adc
xchg
cld
pop
mov
lods
and
cmc
pop
jl
out
jp
jne
inc
arpl
cmp
jb
pop
bound
pop
xchg
shl
sbb
dec
push
fnstsw
inc
sti
cmpsb
scas
cmc
jmp
and
cli
cmp
mov
aaa
jp
pop
jb
dec
push
add
call
sti
adc
enter
in
push
hlt
sti
push
add
je
es
lahf
add
mov
or
mov
sbb
push
stos
xchg
incb
add
pop
test
xor
mov
orb
sbb
push
aad
dec
push
push
mov
test
mov
cmpsl
push
movsb
xor
pop
in
mov
in
lahf
mov
dec
push
fxch
jl
leave
leave
out
push
in
pop
call
fstps
bound
or
pop
inc
scas
idiv
inc
sbb
jbe
movl
add
add
repz
push
mov
lock
inc
mov
data16
xchg
mov
sti
nop
addr16
sub
inc
jg
push
js
and
add
rolb
notl
pop
push
shl
push
add
fsub
jp
push
add
js
rolb
xchg
jne
lock
cli
mov
adc
jb
lahf
call
dec
and
pop
iret
mov
orl
inc
outsl
push
test
loope
les
cmc
jno
push
sbbl
mov
clc
pop
test
inc
cmpsb
dec
jo
test
in
ss
push
in
add
jecxz
outsb
repz
cwtl
les
aas
mov
jl
mov
cmpl
add
add
add
add
mov
adc
nop
mov
and
mov
data16
ret
flds
xor
cwtl
orl
lods
push
icebp
call
fs
ror
mov
std
jne
sti
xchg
sbb
sahf
jmp
lahf
sbbb
cmpsl
add
sbb
aaa
sbb
inc
sbb
xor
movsl
mov
inc
xchg
and
cli
push
shll
sti
mov
add
cli
divl
xchg
jb
call
push
and
adc
pop
cltd
add
fsub
push
add
ret
out
mov
idiv
ret
inc
test
out
xchg
mov
incl
mov
mov
push
mov
pop
mov
mov
in
pop
shll
dec
pop
dec
lea
jne
ljmp
sbb
stos
sbb
pop
scas
rorb
roll
add
test
mov
push
es
mov
mov
rolb
xor
push
testl
jp
adc
jl
addb
inc
mov
or
std
push
jge
pop
jb
mov
iret
rcrb
repz
mov
mov
nop
pop
bnd
js
fstl
addr16
sbb
dec
adcl
jmp
sub
loop
fmull
xchg
pop
incl
push
pusha
dec
jl
into
dec
sub
xchg
add
xor
mov
aaa
mov
cmpl
outsb
les
pop
mov
xchg
dec
pop
mov
divl
outsb
leave
fdivrl
mov
movsl
loop
jle
pushf
jmp
stc
add
mov
mov
ja
xor
mov
mov
jl
adc
ljmp
mov
in
in
xlat
cmp
and
push
or
sub
test
cmp
mov
jl
sti
loop
cmp
dec
push
fs
cmp
cli
xchg
adc
out
push
xchg
ja
outsb
popa
dec
jne
dec
outsl
pop
pop
push
scas
repnz
notb
xlat
gs
xor
shll
push
xlat
inc
mov
idivl
add
push
bound
inc
sti
gs
std
divb
fs
rorl
add
sub
ret
out
sti
add
mov
pushl
shlb
push
mov
loopne
aam
mov
pop
dec
mov
addb
pop
cld
jno
add
xor
ret
pop
ljmp
mov
aad
mov
xor
divb
aad
cmpsb
lock
inc
sarb
add
xchg
fs
add
mov
in
ffreep
cmpsl
add
sub
cmpsb
push
push
popa
lcall
negl
sti
je
sbb
lcall
and
pop
jmp
pop
jl
iret
mov
jge
add
mov
add
add
add
negl
lea
iret
aas
call
and
aaa
ret
add
cmpsl
add
push
cmp
arpl
gs
aad
fisttps
stc
jmp
out
add
mov
push
jp
loop
xorb
dec
outsb
lea
repnz
ret
addr16
adc
sub
cmpsl
fldcw
cmpsl
mov
jl
jb
add
std
shrl
add
add
add
add
scas
mov
jle
mov
adc
cmp
fidivrl
jnp
sub
ret
add
jae
movsb
call
jmp
shrl
pusha
mov
push
mov
add
mov
mov
pop
lret
sbb
sub
cmp
or
inc
push
pop
add
insb
inc
lcall
add
add
shll
divl
push
iret
scas
in
jne
xor
cmp
mov
lcall
xor
xchg
dec
stos
ret
cmpl
inc
mov
sbbl
sti
divb
call
pusha
xor
call
dec
es
mov
mov
push
add
hlt
dec
insb
scas
je
inc
add
je
xchg
hlt
pop
das
inc
jmp
sub
add
pop
addr16
lea
aam
mov
pavgw
inc
loopne
sub
push
xchg
push
push
dec
mov
mov
mov
add
lods
inc
loopne
sub
push
inc
mov
adc
mov
push
imul
add
add
add
xor
subl
add
into
lods
inc
aam
sub
arpl
mov
add
arpl
test
sub
mov
mov
out
fmul
mov
jne
shl
js
testl
lea
fmull
cmp
movl
movsl
xchg
inc
pop
or
jns
push
rcl
insb
adc
lea
mov
adcl
decl
jmp
repz
jbe
sbb
hlt
pop
lock
jge
xchg
inc
in
aas
cmp
fidivrs
jp
sub
das
out
dec
jl
movsb
jnp
sbb
insb
stos
and
orl
dec
adc
jns
mov
lock
add
add
add
add
out
add
push
lret
ja
cmp
adc
and
jle
outsl
pop
movsb
dec
inc
mov
andl
inc
pop
sbb
leave
call
cmp
lods
outsl
dec
hlt
dec
adc
imul
push
cmp
dec
ja
add
mov
cmp
add
les
push
rorl
hlt
out
jb
pop
xchg
add
add
add
inc
or
jbe
sti
push
loopne
dec
std
insl
pop
push
cwtl
loope
pop
bound
push
xchg
and
push
icebp
insl
repz
loopne
cmp
mov
lds
loopne
sbb
mov
leave
jge
push
cmpsb
and
or
sbb
out
inc
push
adc
in
cmp
cmp
outsb
insb
sti
cld
subb
jmp
add
dec
les
lahf
xor
push
mov
or
sub
out
push
jmp
cmpsb
clc
mov
test
push
mov
bound
inc
lret
pop
testb
pop
dec
push
lea
cwtl
add
aad
jp
dec
xor
dec
sar
insl
notb
mov
add
push
test
push
push
popa
sbb
add
add
add
das
add
mov
test
negb
lcall
clc
inc
sub
add
mov
jp
arpl
sti
into
adc
add
jl
arpl
and
dec
iret
cli
push
int
or
add
testl
lods
inc
dec
stc
addb
out
das
push
subb
add
add
add
jb
mov
mov
jecxz
push
mov
lds
sti
call
mov
insb
xchg
pop
jne
sti
xor
ffree
cmpb
je
xor
cmp
sub
ljmp
shll
aaa
mov
ljmp
dec
addl
adc
inc
jecxz
arpl
cmp
jae
lods
mov
jb
aam
cmp
jno
adc
jo
or
lock
pop
sbb
data16
mov
jecxz
ljmp
sbb
in
xrelease
cmp
mov
repz
js
sub
mov
mov
dec
cmp
push
push
lret
movsb
sbb
or
add
mov
xor
sub
gs
ss
icebp
stc
sub
xchg
xor
sub
repnz
les
mov
faddp
cld
add
sar
rclb
mov
sti
scas
lods
push
mull
test
testb
mov
add
add
scas
gs
ficomps
push
data16
push
cmp
mov
cwtl
lods
je
test
aas
add
fimull
hlt
xor
push
outsl
mov
xor
jmp
clc
pop
xor
add
inc
xchg
add
not
cmpsl
push
mov
sbbl
dec
lea
mov
call
xchg
in
jae
fscale
enter
add
add
add
add
idivl
add
sub
not
ret
dec
out
sub
fdivs
outsb
sti
enter
cmc
iret
cmp
mov
mov
inc
ss
sub
and
xor
inc
jle
imul
or
xchg
mov
mov
sub
out
rolb
add
mov
push
hlt
outsb
dec
jmp
enter
lahf
popa
push
cltd
testl
fildll
js
mov
jbe
psrld
mov
xor
cmpsl
xor
aam
mov
add
repz
pop
jmp
jp
sub
fstpl
inc
dec
popa
or
out
mul
mov
xchg
fldt
mov
pop
into
sbb
jo
jno
xchg
xchg
xor
add
stc
testl
lods
int
divl
jmp
outsl
dec
dec
push
add
xor
mov
xor
add
lret
ljmp
jnp
add
xchg
fdivrl
add
ja
and
sti
xor
cmp
cmp
jmp
les
adc
sbb
mov
add
add
lods
xor
insl
xor
test
sti
xor
rcl
add
sahf
sub
aas
jmp
adc
dec
call
sti
xor
pusha
aas
adc
in
das
add
mov
cmp
jmp
cmp
and
mov
aam
cwtl
push
xor
mov
aam
cwtl
fidivs
bound
push
cmp
dec
es
cwtl
into
xor
arpl
pop
out
mov
into
xor
xor
lea
or
add
xor
add
jae
mov
inc
and
pop
dec
push
rcrl
cld
adc
test
popa
lods
scas
add
lea
pusha
gs
outsb
pop
notb
push
idiv
testl
add
add
add
js
add
idivl
jmp
sub
shl
rorb
xchg
adc
pop
or
jae
ja
testl
sbb
sub
jp
cli
or
adc
les
dec
iret
iret
and
mov
insb
sti
jb
ljmp
movsl
out
mov
add
and
insb
movsl
and
add
and
jl
sar
ret
and
cmpsl
xor
jg,pt
fiaddl
popf
push
pop
div
fldt
pop
shll
lods
test
or
push
je
adc
xchg
inc
pop
xor
js
testb
int3
xor
daa
jecxz
adc
fdivr
lods
mov
jae
pushf
shrb
data16
add
add
add
add
outsl
in
and
in
neg
mov
dec
jp
adc
mov
hlt
or
and
lcall
dec
outsl
push
hlt
xor
scas
mov
xchg
jmp
hlt
xor
bound
mov
std
scas
mov
call
out
sti
push
ss
or
enter
imul
add
add
pop
ss
sbb
push
outsb
out
or
popa
ret
movsb
test
ss
mov
sbb
pop
cmp
mov
xchg
jmp
ss
pop
jmp
rcrb
add
mov
add
inc
hlt
jge
mov
out
pop
dec
inc
jg
push
sub
xor
fisubrs
push
add
mov
clc
ficoms
sbb
bound
add
lea
test
imul
enter
adc
cmp
and
lret
sahf
xor
push
cld
loop
xor
imul
xchg
pushf
dec
cli
pop
pop
xlat
jbe
mov
mov
add
add
out
gs
outsl
add
inc
dec
imul
add
add
add
pushf
rorl
mov
data16
jae
out
inc
je
add
aaa
xchg
outsb
jp
pop
sub
sarb
add
adc
fmull
aas
test
aas
sti
aas
or
out
add
jp
inc
or
mov
adc
cli
mov
fimuls
mov
divl
or
aas
pop
scas
pop
lret
xchg
leave
xor
call
add
xchg
jmp
jnp
sub
shrl
das
pop
clc
jnp
loope
nop
xchg
add
stc
in
jns
icebp
sbb
stc
std
adc
cmp
into
jns
push
add
xchg
pop
inc
sub
cltd
out
leave
paddb
xor
js
push
dec
add
sub
jg
xor
add
shrl
xor
shlb
addb
cmove
fnstenv
dec
jb
mov
call
dec
xor
insl
mov
test
inc
cmp
jmp
pop
repz
gs
jmp
hlt
xor
call
pop
xor
call
add
add
add
xor
mov
sbb
push
sti
xor
jmp
xchg
add
mov
inc
fcmovb
lcall
mov
decl
xor
add
call
jmp
lds
adc
add
decl
mov
setnp
decl
test
les
fdivrp
cmc
fwait
jno
test
and
mov
or
push
push
cld
cmc
adc
pop
jo
jp
and
lea
in
mov
xchg
adc
test
sbb
testl
cli
add
dec
sub
cld
out
incb
push
push
clc
bound
test
les
add
add
add
lds
pop
dec
mov
add
and
sti
jl
lret
or
test
out
xchg
sti
je
adc
adcb
jge
sarb
imul
inc
repz
dec
lea
mov
incl
jb
arpl
mov
jmp
lahf
xor
popf
sub
mov
sbb
add
inc
lds
mov
inc
out
xor
jbe
icebp
add
xor
rclb
pop
mov
dec
shr
fs
sub
or
je
cld
movsb
cmp
loope
sbb
lret
fs
lock
sbb
mov
dec
loope
enter
inc
sti
xor
lret
mov
idiv
xor
shlb
orb
add
sbb
add
sub
test
pop
pop
adc
mov
inc
push
mov
cwtl
cmp
les
call
sbb
sti
push
and
mov
inc
cmc
xor
imul
test
test
jle
test
addb
add
push
fs
sub
cmpsb
push
sub
fs
testb
lods
or
inc
idivl
stos
mov
test
or
add
pop
mov
sahf
shlb
xor
mov
pop
shlb
decl
or
adc
cmp
add
add
add
add
mov
and
push
sub
sti
lcall
jbe
in
xor
add
loop
push
sub
xorl
test
xchg
idiv
push
inc
rclb
mov
enter
aaa
sbb
cli
push
jb
cld
cwtl
xchg
sti
les
mov
pusha
sti
js
aas
push
leave
popl
outsl
lret
enter
cmc
ret
add
divl
sti
dec
pusha
or
cmp
cmp
stos
adc
xchg
push
sbb
popa
mov
pop
jl
add
pushf
rol
aas
mov
mov
negl
mov
mov
sbbb
mull
jmp
shll
pushf
ret
mov
push
mov
lods
pusha
pop
mov
mov
imull
inc
test
push
sub
popa
sbb
dec
xor
in
cmp
jmp
add
sbb
data16
decb
sbb
loope
mov
fisubl
xchg
dec
dec
jge
outsl
adcb
xorb
jmp
hlt
xor
add
add
add
jmp
shll
das
test
test
cltd
frstor
mov
xor
jmp
sub
sub
scas
jmp
adc
cmpl
scas
mov
or
jno
sub
imul
into
add
sti
insl
mov
test
cli
xor
out
inc
je
xchg
fwait
or
pushf
jmp
jno
sti
fiadds
mov
lods
xor
add
xor
add
pop
add
jmp
mov
mov
xor
add
into
xor
xor
dec
push
push
icebp
push
cmp
sub
adc
push
mov
mov
and
mov
and
mov
and
cltd
dec
sbb
test
inc
lods
lea
dec
xor
bound
add
push
xchg
fdivs
mov
add
cmp
add
xor
negl
ljmp
sub
repnz
add
mull
shll
inc
mov
addr16
addr16
mov
scas
mov
sbb
dec
insb
outsl
add
xchg
shll
xor
add
sbb
xchg
decl
sbb
incl
mov
shll
sub
addr16
xchg
call
or
pop
cmpsl
loop
adc
jae
or
jp
and
pop
xor
add
xor
pop
orl
dec
sub
imul
inc
sub
lock
lahf
xor
add
int3
jnp
xor
mov
ds
mov
mov
xor
aam
and
popf
and
add
stos
jbe
divl
insb
mov
enter
xorb
mov
jnp
negl
add
pushf
xlat
subl
cmpsb
and
daa
mov
cltd
mov
cmp
add
push
out
dec
adc
add
mov
je
enter
pop
or
add
adc
je
int3
stos
rcll
and
jmp
or
movsl
mov
stos
je
inc
stos
leave
inc
fbld
jae
shrl
cli
das
mov
or
hlt
xor
fs
es
push
mov
cli
xchg
add
test
pop
add
dec
jne
sub
push
sub
js
sbb
pop
mov
jecxz
in
push
add
mov
or
ficoml
xor
sub
cmp
repnz
push
xchg
adcb
mov
sahf
sub
add
mov
ljmp
add
mov
mov
fmull
mov
add
sub
add
xchg
in
insb
pop
sub
and
notl
and
sub
jl
mov
or
hlt
aas
testl
push
psubd
clc
aas
mov
jne
mov
add
or
imul
mov
mov
or
ret
and
testl
push
lea
jb
pop
sti
nop
fidivl
call
in
incb
mov
out
mov
xor
mov
adc
or
add
stos
xchg
jge
rolb
imul
call
add
xor
loopne
and
insl
lcall
cmp
push
pop
fdivrl
mov
add
mov
pop
jbe
inc
push
divl
ss
and
xchg
xor
sbbb
clc
loopne
mov
add
es
add
pop
rclb
xorl
scas
call
aaa
push
adc
mov
push
mov
xchg
addl
xor
call
repz
add
sti
out
popf
pusha
call
dec
xor
jmp
dec
sbb
std
pop
sbb
gs
sti
jmp
arpl
mov
out
jno
and
gs
sbb
nop
pop
hlt
xor
insb
xor
test
xor
bound
push
adc
stos
push
add
sub
and
push
test
sub
lea
pop
mov
add
add
add
add
negb
inc
and
lods
pop
lea
pop
dec
push
and
test
stos
xor
call
mov
push
adc
lea
mov
fidivs
add
add
call
push
or
sub
dec
mov
mov
mov
and
mov
add
add
add
testl
loopne
add
mov
xchg
xchg
testl
add
insb
rcrl
or
js
xchg
scas
cli
xchg
inc
jne
xchg
shlb
sar
mov
add
test
or
push
xlat
addb
push
add
testl
test
jp
and
and
ret
jae
add
or
test
mulb
call
jl
data16
xor
cmp
adc
notl
insl
add
xor
xor
divl
mov
movsl
fwait
sbb
arpl
divl
vmovsd
fildl
imull
push
or
add
add
mov
add
add
add
adc
faddl
divl
dec
shrl
or
xor
jmp
add
sbb
push
and
lods
xor
add
and
jl
and
hlt
outsl
movsl
or
dec
and
or
sub
cli
scas
push
push
je
adc
imul
inc
call
push
inc
dec
sbb
add
je
adc
lods
stos
pop
push
add
jne
out
je
in
outsl
sub
movsl
xor
icebp
jns
and
cmpsb
push
sbb
mov
fimuls
cli
cmpsb
sub
inc
int
mov
cmp
or
and
sub
pop
into
cs
mov
mov
in
setb
add
dec
push
lret
ljmp
add
xchg
addl
test
inc
hlt
sbb
int3
dec
arpl
mov
decl
pop
inc
lock
or
push
into
xor
les
inc
testl
mov
jle
xor
negl
push
add
mov
in
xor
fs
push
fldl
jb
pop
lea
push
sti
add
mov
jle
push
aad
mov
shl
fisttps
add
scas
insl
add
pop
push
adc
bound
decl
testl
mov
xor
jns
jbe
incl
testl
call
mov
or
scas
out
cwtl
push
sti
insl
mov
lock
insl
jne
sti
fcom
adc
ja
scas
xchg
xor
or
dec
xor
mov
lods
sbb
xor
fidivs
les
stos
rolb
fldl2t
add
outsl
xor
lods
dec
test
out
testl
icebp
push
or
sub
dec
pop
aam
bnd
jle
fs
or
dec
cld
lods
iret
add
rcll
cli
push
dec
mov
ja
add
xor
pop
ficoml
shr
add
or
divl
je
adc
mov
movsl
dec
repz
outsb
shlb
dec
cmp
sbb
mov
jle
mull
call
repz
jmp
icebp
xor
fs
xlat
mov
sti
xor
push
dec
lods
call
lahf
xor
jmp
add
movsl
sbbb
xor
pusha
xor
add
jo
pop
add
pusha
xor
mov
scas
inc
aad
cs
shrb
add
adc
test
xor
push
std
fisttpl
sbb
pushl
xchg
fucom
sbb
mov
inc
add
testb
xor
add
dec
cld
pushl
jns
addr16
xor
jmp
scas
aad
dec
xor
ret
and
cmpl
mov
loope
test
gs
outsb
xchg
inc
cld
not
pop
add
xchg
inc
clc
pop
divl
push
mov
xor
mov
jp
dec
sti
enter
ret
out
and
pop
jl
scas
mov
clc
subl
pop
push
mov
testl
rcl
xor
cld
jo
mov
jle
es
or
out
aas
testl
andl
arpl
pop
push
pushl
dec
mov
xchg
mov
xchg
push
dec
test
xor
pop
lahf
insb
cwtl
push
adc
dec
add
or
jnp
xor
fcom
test
mov
sahf
sarl
sbb
lahf
enter
mov
repz
or
inc
cmpsb
xor
lahf
xor
mov
and
enter
sarl
pusha
andl
adc
mov
in
add
xor
clc
mov
icebp
jmp
dec
sbb
or
add
add
add
add
ret
adc
movsb
push
mov
jle
stos
pop
sti
out
psubsb
nop
repz
pop
xchg
fcoml
xor
jmp
hlt
or
sub
out
inc
sahf
fcoml
push
jns
mov
je
add
hlt
xor
dec
push
adc
orb
xchg
pop
adcl
movsb
mov
add
xor
ss
sbb
insl
mov
lods
icebp
xchg
and
sti
add
loopne
cmp
add
mov
scas
bnd
test
pop
stos
cli
test
stos
add
mov
mov
xchg
dec
or
adc
add
mov
add
xor
loop
addb
add
add
add
add
sub
jne
roll
sub
push
push
mov
inc
lret
in
jo
cmp
cmc
pop
jl
cmp
in
loope
dec
outsb
push
pop
out
add
not
ja
jbe
ljmp
mov
ret
mov
adc
jne
mull
or
decl
inc
xor
leave
cld
or
add
add
add
or
push
inc
or
add
testl
inc
xchg
or
add
pop
jl
scas
or
add
pop
jl
fwait
je
lock
inc
mov
cmp
ss
pop
jg
mov
xchg
pop
decl
xor
add
and
pop
rcrb
xor
add
adc
jnp
add
call
xor
leave
jle
divl
shll
jl
add
aas
cld
sub
mov
dec
sub
stc
ret
nop
mov
cli
jae
call
mov
mov
imul
pop
mov
outsb
inc
mov
cmp
ret
push
dec
jbe
mov
add
hlt
bound
add
add
add
test
lea
sti
push
fs
adc
hlt
mov
sti
out
cmp
call
jbe
call
movsl
mov
test
aas
or
sbb
cld
shl
xchg
add
cmp
or
insl
push
xor
jmp
rdtsc
add
adc
mov
or
push
bound
dec
psubq
pop
jg
scas
test
mov
iret
lret
pop
push
call
fwait
je
imul
insb
cld
incl
lds
fs
xor
jb
mov
call
xor
jbe
in
adc
loop
mov
ja
call
insl
faddl
sti
cmpl
jne
and
outsb
mov
push
call
sbb
clc
or
fsubrp
push
call
je
ror
xor
inc
mov
movsb
lret
dec
test
test
dec
sti
cmpsl
inc
lret
lds
mov
sti
add
pop
dec
adc
jnp
clc
subl
dec
sti
add
out
aas
negl
mov
icebp
cltd
ja
add
out
jne
out
xchg
iret
inc
lock
cld
fcmovnb
notl
pushl
popl
sti
cwtl
mov
cli
or
pop
and
mov
ljmp
cmc
pop
xor
push
call
divl
es
sbb
pusha
aas
scas
inc
jo
or
push
scas
jae
les
xor
js
mov
mov
sbb
std
or
inc
in
mov
add
xor
std
clc
test
jns
push
sub
adc
divl
or
mov
sbb
push
setae
add
incl
mov
jmp
inc
mov
jmp
xor
out
mov
test
xor
mov
lods
shl
dec
add
jno
call
dec
xor
xor
jb
push
push
add
je
leave
jne
sti
out
js
call
hlt
xor
cmp
cmpsl
mov
cli
cld
mov
jne
or
imul
call
repz
dec
repz
orl
ds
add
xor
lea
fs
popa
jnp
pop
ss
repnz
add
jb
and
nop
popf
add
push
push
jl
mov
ss
or
xorl
leave
push
pop
pop
je
mov
add
mov
push
mov
push
and
add
mov
pop
lret
dec
lret
fiadds
xor
mull
out
cmp
fimull
push
and
jo
xchg
inc
movl
add
jnp
notb
cmp
xor
or
std
push
cs
push
xchg
mov
inc
roll
addb
jle
push
push
inc
add
inc
xchg
xor
aas
sti
jl
push
xor
arpl
mov
adc
shlb
mov
ljmp
fmuls
sbb
sbb
jb
incl
test
ljmp
test
nop
xor
mov
sbb
divl
jle
jb
or
mov
or
repz
out
lods
out
das
mov
jbe
or
add
add
add
sub
jmp
enter
add
xor
aam
imul
mov
loope
das
xor
jb
gs
imul
cmc
dec
das
imul
inc
arpl
or
add
jae
sbb
pop
std
test
data16
sbb
hlt
xor
std
nop
cmp
std
push
and
add
add
add
dec
or
mov
push
inc
jg
cli
dec
jns
adc
push
jb
xor
sbb
mov
pusha
pop
cli
cmpsl
clc
or
scas
inc
lds
inc
int
cmp
ss
mulb
mov
and
addb
ss
add
in
loop
imul
pop
adc
mov
push
mov
xor
push
leave
mov
enter
add
cmp
hlt
xor
inc
mov
dec
dec
push
sbb
loop
dec
xor
mov
add
xor
decl
jo
sbb
repz
sbb
sub
xchg
scas
mov
push
pop
jo
mov
scas
sbb
jne
sbb
push
lea
sbb
push
divl
data16
adcb
and
aas
inc
je
add
adc
jge
xor
notl
ja
notl
jmp
mov
adc
pop
pusha
or
ds
rolb
cmc
pop
decl
sahf
lods
pop
in
mov
stos
into
cli
add
push
inc
negl
add
add
add
add
mov
sti
ret
aas
testl
decb
call
xor
or
das
jmp
or
imul
outsb
imul
bound
aas
mov
push
add
xor
nop
add
inc
js
xor
sub
mov
add
mov
add
push
jg
jg
call
test
xor
enter
xor
jbe
jmp
test
scas
add
call
sbb
add
outsl
cmp
jmp
movsb
mov
shll
sti
sbb
xor
jmp
fldcw
shll
add
mov
mov
sub
ss
sbb
xchg
addr16
jae
clc
push
or
insl
mov
ret
or
xor
jmp
xchg
cltd
xchg
push
bound
or
xchg
xor
jo
cld
jle
shll
jo
xor
add
xor
add
push
cmp
into
push
dec
lods
aas
std
test
jno
aas
or
add
add
add
add
inc
jnp
imul
push
adc
sub
shr
mov
fmull
decl
mov
push
add
testl
pop
das
outsb
add
push
push
mov
mov
sbb
push
das
dec
jmp
cmpl
jne
test
jne
mov
add
sbb
dec
getsec
mov
lock
dec
adc
jb
mov
out
nop
cmpsl
stc
rclb
jmp
mov
mov
sub
sti
inc
mov
inc
ret
cmp
add
notl
cmp
pop
or
test
cmp
push
sbb
inc
notl
test
dec
push
fucomi
leave
add
add
pop
ja
notl
jmp
add
adc
jb
sbb
sahf
and
mov
out
scas
adc
divb
jmp
add
mov
je
adc
divl
inc
lea
stos
nop
mov
jg
jno
inc
in
add
in
add
mov
jl
sub
xor
lea
mov
xchg
xor
mov
mov
jmp
add
add
add
aad
and
testl
ret
mov
xor
mov
fwait
cmp
jmp
push
mov
movsl
mov
jae
add
inc
data16
xchg
test
mov
and
mov
bound
aam
cmp
jbe
jno
jle
jmp
add
add
add
inc
push
or
sub
hlt
xchg
mov
mov
bound
int3
mov
pop
xor
punpckhdq
xor
test
pushf
jmp
stos
mov
add
lock
mov
cmp
in
add
rolb
out
fidivs
pop
mov
xor
push
icebp
mov
push
bound
add
cmp
add
roll
xchg
jbe
fisubrs
add
sarb
clc
stos
inc
es
add
xchg
jl
push
or
adc
xor
data16
mov
push
out
test
mov
mov
jnp
or
popa
jle
push
mov
add
cwtl
dec
add
mov
inc
shll
testl
jl
add
jmp
dec
pop
mov
push
xchg
mov
add
insl
xchg
mov
adc
pop
mov
rcrl
or
popa
outsb
push
and
fsts
jmp
xchg
inc
jne
testl
push
jnp
movsl
call
add
add
add
aad
stos
sub
notl
fdivl
mov
xor
mov
insb
aaa
jmp
xor
notl
icebp
mov
std
orb
xor
popf
outsl
jae
jl
push
jmp
cmp
aaa
add
xchg
pusha
rorl
lea
jmp
mov
jg
jmp
add
cmpsl
and
lahf
test
bound
xor
imul
xchg
inc
icebp
pushf
es
mov
bound
sub
popl
outsb
add
subb
jmp
out
pushf
mov
xor
mov
mov
inc
add
adc
jp
inc
rorl
mov
xor
aaa
sbb
add
lods
inc
push
mov
icebp
add
data16
call
add
xor
aaa
add
sahf
xchg
jge
add
xor
pop
fidivs
xchg
and
subb
add
popf
xchg
jl
mov
das
pop
mov
mov
inc
hlt
sub
xor
xchg
add
ja
lock
das
pop
mov
add
mov
push
sub
outsb
testl
xchg
rol
ja
or
jb
repz
mov
scas
add
or
inc
push
or
popa
outsb
int3
enter
lcall
mov
add
test
cmp
testl
jbe
rorb
popa
outsb
push
into
mov
fdivr
call
xchg
mov
lcall
sbb
testl
inc
jl
add
cmpsl
sub
mov
xchg
jo
mov
divl
or
mov
je
jnp
add
add
sub
add
xchg
jo
xchg
mov
ret
xchg
popa
mov
xor
popf
jg
cmpl
test
test
notl
cmp
divl
dec
jge
mov
test
add
call
mov
test
add
add
add
add
xor
scas
jge
jo
aas
ret
and
ret
aad
and
push
pminub
jle
cwtl
or
mov
stos
xor
mov
std
imul
stos
mov
cmc
xchg
sti
mov
mov
fs
jae
pop
and
popa
sti
or
xchg
rorl
xchg
pop
sbb
xchg
shrl
ret
xchg
mov
lods
cmp
cmpsl
pusha
fldcw
test
and
out
mov
mov
leave
pop
flds
andl
push
sub
mov
cli
in
call
mov
mov
push
xor
bound
ret
fistps
sub
ss
pop
pusha
out
in
outsl
push
mov
loop
jmp
fdivl
add
jbe
lea
sti
push
mov
sub
jbe
call
pop
je
test
add
enter
idiv
jnp
out
push
jnp
lcall
sti
sahf
pop
add
test
int
sti
mov
jl
and
jbe
inc
repnz
or
push
xchg
add
dec
cmp
add
testl
ds
or
cmp
stos
popa
rorb
cwtl
or
testb
mov
insb
mov
pop
jmp
hlt
mov
das
jne
mov
jl
sbb
dec
push
xor
jnp
jmp
imul
add
test
fs
mov
popa
mov
add
jb
sbb
jns
mov
daa
jnp
xor
jns
dec
test
mov
add
lret
imull
pop
inc
arpl
shll
arpl
jmp
jno
inc
sbb
ja
xor
add
pop
push
cmp
xor
add
jge
jo
xor
je
adc
inc
addr16
add
stos
mov
js
shrb
xlat
je
cltd
mov
repz
subl
imul
push
movsb
push
popf
and
cli
nop
push
repz
insb
mov
jg
idiv
pusha
cs
out
xchg
jae
jb
add
test
hlt
xor
fsubl
test
xor
shlb
jge
xchg
lret
cmp
add
cmpl
inc
test
sbb
adcl
enter
ja
hlt
sbb
lods
idiv
dec
xor
jbe
lcall
add
mov
es
dec
incl
add
mov
inc
hlt
outsb
sbb
push
inc
jnp
es
jne
add
pop
es
enter
inc
das
testl
dec
jbe
negl
sub
xor
jne
and
out
mov
sub
jb
sub
sti
and
sbb
ljmp
daa
mov
sar
movl
enter
call
jg
adc
add
add
add
add
ret
repz
iret
cli
or
adc
xchg
jb
dec
cli
sbb
mov
in
icebp
pushl
mov
shl
jmp
add
mov
call
mov
repnz
xor
xor
jmp
sub
test
sub
and
nop
movsb
and
outsb
insb
lds
test
xor
sti
test
add
mov
add
xor
sub
mov
jl
cmp
cld
notb
add
mov
jp
xor
sbbb
fsub
jae
aam
shlb
sarl
lcall
mov
mov
idiv
add
cmc
cli
push
ja
add
mov
je
ja
clc
jmp
add
add
add
mov
jmp
sti
xor
rcll
into
lock
cmp
or
pop
test
mov
or
icebp
loop
and
add
cmc
incl
jmp
fistpll
or
mov
out
adc
cli
push
pop
add
ljmp
cmc
out
dec
inc
idiv
cmpsb
pop
idiv
rcll
xor
push
cmc
mov
dec
add
add
xor
ret
push
lods
push
test
mov
xchg
outsl
inc
or
outsl
push
or
cs
call
inc
push
in
imul
jo
orl
dec
xchg
xchg
adc
daa
pop
cmp
rolb
push
out
ret
hlt
call
cli
out
dec
add
jge
xor
sub
jns
add
ss
cmpsl
add
xor
sbb
inc
roll
aas
sahf
cmp
cwtl
scas
adc
movsb
cmc
jle
fucomi
inc
out
fimuls
sti
fsubr
mov
inc
mov
mov
sti
in
pop
insl
cwtl
fsin
mov
lahf
pop
push
je
push
jo
adc
je
pop
sub
add
cmp
dec
sti
jle
pop
jno
add
cli
push
push
inc
call
mov
xor
push
rcrb
push
push
stos
jbe
jo
push
push
cmp
jmp
out
adc
sub
fs
pop
push
sub
data16
pushf
out
loop
mov
mov
push
in
movsl
out
test
mov
mov
mov
add
push
add
movsb
movsbl
cmp
jnp
mov
jle
mov
scas
fiaddl
mov
adc
dec
imul
test
add
dec
mov
pop
cmp
arpl
out
mov
pop
mov
jmp
lea
inc
aaa
or
out
hlt
pop
cwtl
loopne
adc
in
sahf
add
cmp
jge
cwtl
cmp
and
jge
cmc
mov
jb
mov
je
add
test
aad
jge
call
or
fs
jns
lods
jge
adc
cmp
jmp
out
mov
add
add
cmp
push
adc
test
mov
push
lea
push
sbb
push
and
inc
adc
adc
test
mov
divl
adc
adcl
cli
test
mov
notl
or
pop
je
popa
out
push
add
insl
push
or
fistpll
mov
int
jl
sbb
sub
dec
sub
inc
mov
mov
xor
adc
jae
stos
cmp
xchg
and
popf
cs
clc
movsb
mov
and
jnp
stos
sbb
les
dec
and
cwtl
minps
and
xor
push
mov
add
mov
fidivrl
sub
cmp
in
es
jns
add
or
sti
outsl
add
divl
lsl
and
mov
scas
add
repz
icebp
jo
cmpb
hlt
aam
jne
jg
rcrl
data16
mov
mov
cld
or
cld
fs
and
mov
mov
mov
sbb
adcl
icebp
nop
mov
into
jns
xchg
sarb
push
add
inc
push
repnz
sbb
call
jmp
int
sbb
ret
jmp
add
out
jae
fs
daa
push
ljmp
adc
pop
je
xor
popa
loop
add
in
loope
incb
mull
push
pop
out
clc
jmp
and
add
add
pop
sbb
cli
jb
mov
xchg
scas
jg
popf
test
call
jb
mov
jne
jg
idiv
push
push
test
icebp
out
aaa
jecxz
js
aam
call
add
in
test
adc
enter
out
adc
xor
idiv
fidivl
jno
push
add
out
adc
xor
shrb
sub
add
jb
add
jmp
ret
push
in
sub
sub
mov
mov
xor
mov
cltd
lahf
add
lret
mov
jmp
push
lea
repnz
xor
inc
xchg
pop
mov
add
fstps
jns
sbb
mov
lahf
sbb
test
neg
incb
incl
inc
jne
test
shrl
or
daa
jb
add
fldenv
mov
fsin
push
les
clc
pop
jecxz
incb
jecxz
mov
inc
lret
sbb
jmp
lcall
or
ja
cltd
decb
fsub
adc
fidivrl
sti
test
aas
jne
mov
cld
ret
add
lock
or
call
jmp
nopl
sbb
pop
loope
and
sbb
cmp
outsl
sub
repnz
add
pop
push
movsl
cmp
negl
test
mov
cmp
add
mov
jo
divb
jmp
mov
or
call
add
add
add
idivl
pusha
hlt
divl
jmp
not
inc
add
test
jmp
inc
pop
sarb
cmp
cmp
pop
cmp
fnsave
in
pop
cmp
std
xor
test
mov
dec
pop
outsb
scas
in
adc
jmp
xchg
cmp
sti
xor
test
add
xor
ficomps
xor
mov
mov
clc
loope,pn
push
test
test
je
pop
cmp
cmc
mov
addl
inc
test
sahf
xor
or
add
out
jbe
fidivrl
sub
cmp
add
lock
sub
inc
psraw
repnz
inc
dec
loop
inc
dec
add
int3
jns
and
inc
jne
sbb
mov
sbb
es
adc
je
stc
outsb
push
push
mov
xchg
mov
lock
loopne
pop
and
mov
pop
decb
imull
sbb
jae
cltd
dec
or
shl
mov
sbb
neg
aas
or
test
imul
add
add
add
jo
and
add
clc
aas
testl
adc
flds
jmp
int
cmp
xchg
inc
out
bound
notw
sti
adc
stos
adc
adc
push
insb
es
cmp
out
mov
dec
cmpsb
iret
gs
shl
dec
xor
ljmp
jmp
inc
sub
inc
add
lods
push
add
xor
enter
add
push
mov
and
cs
insb
das
out
not
into
inc
mov
xor
divw
jmp
and
jmp
divl
add
call
arpl
mov
push
divl
jmp
fidivrs
or
add
jbe
incl
xor
mov
scas
pushf
stc
dec
loop
jecxz
fs
mov
mov
sub
call
dec
xor
jmp
hlt
xor
bound
mov
add
dec
add
hlt
mov
cmp
xor
pop
inc
lods
mov
jmp
data16
xchg
out
jmp
hlt
xor
out
jmp
xor
out
jmp
xor
sahf
jecxz
add
fnstcw
add
xor
push
push
mov
fisttpll
sarl
pushf
outsb
loopne
movsl
outsb
push
push
je
cmc
jne
inc
adc
test
push
andl
cli
push
lcall
jl
pop
test
dec
sub
add
add
add
add
mov
scas
pop
ds
aad
outsl
adc
sub
loopne
xor
mov
dec
bound
mov
mov
sub
imul
sub
mov
movsl
repnz
push
push
jne
inc
mov
call
mov
idiv
and
es
mov
add
adc
test
or
push
dec
sbb
add
add
leave
xor
pop
int
push
adcb
jg
leave
lea
imul
cmp
lret
mov
leave
jae
movsb
pop
add
leave
mov
lret
add
xor
lahf
jo
stos
or
iret
add
xchg
sbb
xchg
aad
shrb
mov
add
cmp
mov
lret
lods
ffreep
divl
jmp
lods
fbstp
nop
adc
jmp
lods
outsb
lret
mov
add
cmp
jmp
push
aaa
adcb
divl
jmp
xor
jle
dec
imul
add
mov
xchg
xor
lods
xchg
xor
jmp
add
xor
movsl
jmp
adc
add
rcll
bound
arpl
xchg
hlt
insl
sti
cld
push
cs
jmp
xor
mov
test
inc
sub
sub
fs
mov
ret
cmp
jle
sti
scas
out
pop
idiv
pop
mov
dec
bound
push
adc
inc
add
popf
add
xor
test
mov
add
or
cltd
cmp
rcpps
idiv
cmp
lcall
cmp
cmp
arpl
addl
xor
add
cmp
and
xchg
sbb
shlb
xor
mov
pop
mov
or
add
add
add
jae
add
imul
mov
lcall
mov
test
adc
inc
xchg
call
stos
push
sub
sub
inc
out
int
jle
or
ret
test
push
add
test
dec
leave
or
aas
mov
rclb
xor
cli
jae
sarb
xor
sti
pushf
call
ljmp
adc
cmp
mov
cmc
and
xchg
add
aaa
push
shl
xor
hlt
jno
in
mov
sub
divl
jmp
mov
xor
add
sti
fnstcw
cs
sbbb
hlt
inc
call
incl
fs
xchg
push
mulb
sub
outsb
jge
adcb
hlt
inc
call
ret
and
lcall
test
adc
sbb
lock
hlt
inc
call
hlt
in
xor
mov
arpl
add
jecxz
add
hlt
xor
jmp
push
js
mov
cli
jb
mov
addl
add
add
jbe
icebp
pusha
pusha
xlat
jle
add
shl
jg
hlt
dec
sub
pop
xor
jmp
repz
jmp
scas
add
xor
in
je
adc
mov
subl
xor
mull
sub
out
jmp
aas
pop
xchg
and
addb
fwait
xlat
adc
sbb
add
sub
call
add
add
add
fwait
repnz
add
fisubl
je
fldl
jo
out
cli
test
push
test
stos
add
dec
cmp
jae
cmpsb
pop
cld
sbb
add
xchg
and
je
mov
bound
fs
idiv
add
nop
decl
mov
incl
mov
jp
cli
test
enter
ret
call
out
push
das
inc
xchg
div
and
push
dec
cmc
cmp
repz
or
add
bswap
or
or
jp
sti
out
mov
inc
pop
sti
neg
lret
jns
decl
out
idiv
add
add
leave
xchg
add
leave
out
pop
leave
pop
add
mov
dec
dec
ret
test
cli
and
addl
push
inc
call
je
fs
pop
jmp
lds
add
xor
pop
fsubr
push
add
and
or
mov
dec
addl
xor
call
enter
cwtl
sbb
stos
sbb
fstpt
mov
add
mov
add
testl
cmc
out
loope
fs
mov
testl
cwtl
shlb
pshufw
dec
test
sub
xchg
repz
hlt
dec
add
hlt
xor
pop
add
je
loop
out
jmp
das
add
hlt
xor
xlat
xor
js
cli
out
add
gs
mov
inc
pop
mov
dec
push
jmp
xor
cld
lock
cmpsb
jg
sub
hlt
in
fsub
ds
push
mov
jae
inc
and
sbb
sub
mov
sti
das
add
xor
jae
pushl
cmp
add
in
jp
inc
testl
mov
incb
pop
rolb
push
mov
dec
xor
mov
push
or
mov
pop
dec
add
jb
ret
sub
jne
mull
push
das
or
popf
xor
clc
xor
cwtl
sub
rclb
cli
mov
xor
add
push
or
incl
outsl
dec
add
test
idiv
and
sbb
hlt
sbb
out
and
test
adc
xchg
loop
jne
cmp
dec
js
or
lock
sti
mov
or
stos
cmp
clc
sti
bound
aaa
lret
int
push
dec
outsl
xor
mov
xor
xor
mov
int
lret
xor
jo
aam
mov
pop
clc
ret
nop
cmpsl
repz
jo
int3
ja
call
mov
pop
test
sub
int3
jle
dec
aam
inc
lods
jo
inc
fldcw
sub
lock
push
rorb
ret
and
jmp
sub
pop
movsl
pop
cs
mov
jns
jnp
cld
sar
icebp
hlt
xor
outsb
add
cmpsb
add
mov
add
xor
in
mov
fs
jmp
roll
mov
sub
stos
hlt
enter
xlat
push
mov
xor
popl
push
lods
std
xor
jge
dec
das
add
push
jl
call
jae
jno
jae
add
sub
xor
lret
fnstcw
xlat
subl
adc
bound
add
hlt
test
iret
sub
stos
jg
cmc
xor
jo
cmp
fst
sub
outsl
push
sbb
xor
push
sbb
adc
mov
fwait
loop
add
mov
sbbl
cs
mov
lret
cmpl
add
add
mov
adc
mov
loop
inc
and
pop
ret
push
mov
pushf
xorl
and
cmpl
adc
push
pop
clc
push
cbtw
cmc
incl
cmpb
pop
jne
notl
xchg
adc
xchg
out
cli
dec
les
add
dec
pop
push
lahf
sub
pop
cmp
ja
rcr
mov
jge
scas
or
xchg
scas
in
jl
cwtl
es
push
or
ss
out
cli
mov
jae
dec
pop
jp
dec
les
fcompl
push
adc
pop
call
sbb
cmp
test
sub
das
aaa
pop
stos
pop
cltd
test
jle
jl
add
xor
add
rcll
xlat
adc
jle
mov
lock
jmp
out
inc
mov
int3
ljmp
mov
ljmp
pop
rorl
mov
sar
and
jbe
jl
cld
pop
shr
icebp
xchg
shr
rcr
call
shrb
xchg
add
mov
fcompl
shl
push
addr16
cmp
or
int3
jo
sahf
es
xchg
sub
icebp
icebp
fcomip
loope
jg
icebp
jg
lods
loopne
test
add
lret
shrl
ja
add
lods
addl
mov
xchg
or
sarb
or
sub
inc
inc
jmp
lods
jb
sbb
out
add
jae
test
cmp
ss
aaa
shr
jnp
pusha
jo
or
xor
mov
shll
xchg
test
stos
enter
pusha
addl
mov
add
inc
dec
cwtl
adc
add
cmp
cmp
push
jne
dec
iret
cli
dec
dec
out
sub
inc
dec
add
cltd
pusha
add
jo
jle
xor
andl
test
xor
add
cmp
mov
gs
jns
mov
push
xadd
decl
rorb
rcrl
add
divl
jmp
mov
mov
and
jne
inc
mov
fbld
sti
loopne
pop
add
push
popa
sbb
xlat
jns
add
rcrl
jbe
or
xlat
pushl
xchg
std
push
push
inc
repz
cli
sbb
or
sbb
mov
inc
mov
je
test
clc
insb
push
gs
jge
fcmovbe
jg
not
incb
jecxz
xor
je
in
jg
adc
mov
xchg
xchg
cmp
aaa
add
add
sub
sbbl
mov
int3
sub
jno
aad
xor
sbb
jnp
and
pop
inc
divl
jmp
shll
pop
rcll
sbb
xor
gs
cmpl
into
imul
cmp
add
xorb
ss
cli
mov
test
stc
add
in
xor
call
hlt
xor
pop
xor
das
xor
mov
aaa
fdivr
and
mov
adc
mov
jge
insb
jbe
push
lret
xchg
outsb
and
mov
jle
mulb
mov
mov
mov
mov
mov
sbb
jp
sub
cmp
sub
lock
test
add
xor
pop
fnstenv
add
ja
hlt
jmp
mov
aaa
daa
pop
inc
scas
add
aas
add
jge
add
or
dec
xor
adc
add
scas
ss
adc
add
das
jnp
or
ret
adcl
add
les
divl
dec
iret
ljmp
mov
push
ljmp
loop
add
xor
jmp
and
cs
xchg
dec
and
icebp
xor
mov
lret
mov
leave
mov
call
add
fcmovu
push
xlat
cmp
not
jle
cmp
stos
xchg
sti
sbb
mov
pushl
in
outsl
adc
dec
or
add
push
add
leave
incl
imul
cmp
dec
pop
hlt
and
cmp
movl
sbb
xor
inc
xchg
mov
inc
xchg
mov
jg
aad
xchg
cmpsl
add
mull
mov
rcr
out
jnp
imul
or
out
pop
lcall
add
add
add
add
outsb
in
cli
sub
popf
jns
add
insl
dec
jecxz
and
jle
jns
cmp
je
into
enter
aad
out
jno
cmp
xor
mov
push
inc
enter
push
loope
aaa
xor
pop
jb
loope
or
jo
stc
adc
cmp
sub
pop
sub
xchg
jmp
add
add
add
xor
sub
ret
xlat
repnz
mov
cmp
xchg
add
ja
call
scas
mov
xor
pushf
fldcw
cmc
lret
or
cmp
mov
pop
add
mov
xor
adc
jno
call
xor
jmp
xchg
lds
stc
add
loopne
std
imul
add
imul
xlat
ja
add
js
cmp
sbb
add
int
cld
mov
sbb
add
push
cld
enter
test
sti
sub
cmp
cmp
test
add
xchg
and
add
adc
outsb
das
push
jmp
divl
xor
mov
xchg
push
cmpl
inc
adc
and
sti
leave
das
pop
mov
xor
add
xor
idivl
lea
dec
mulw
mov
popf
pushl
int3
cli
ret
je
out
ret
cmc
cmp
xor
add
cmp
stos
xor
mov
adc
and
test
add
add
add
add
out
dec
cmc
cwtl
fiadds
cld
cwtl
add
ja
push
je
mov
xchg
call
inc
push
lock
repnz
xlat
clc
inc
xlat
fmuls
test
in
push
inc
dec
add
cmp
or
lock
in
add
mov
xorl
test
fcoms
pop
lds
sbb
push
pop
jmp
push
cmp
jns
pop
mov
mov
stc
sbb
xor
jmp
in
lods
jbe
divl
les
jmp
jns
adc
into
ffree
hlt
das
adc
gs
cmp
fiadds
les
std
lods
in
daa
divl
ljmp
ja
daa
fwait
sub
sub
enter
cmp
mov
sti
aaa
mov
add
icebp
fcomip
in
icebp
lock
push
jne
ret
repnz
test
xor
out
xor
cli
mulb
add
push
cmpsl
adc
pop
test
call
jle
xlat
xor
rcrb
imul
lret
jmp
hlt
xor
lahf
xor
xchg
mov
xor
idiv
add
mov
push
inc
ret
add
mov
je
ret
roll
push
mov
sub
xor
or
pusha
orb
jne
or
mov
nop
push
jge
add
int3
add
dec
mov
xchg
xchg
imul
cmc
out
iret
clc
xchg
mov
mov
mov
xchg
add
lea
add
fisubrs
mov
les
cld
testl
or
push
aas
std
sbb
stc
jo
stc
mov
xchg
pop
lock
xchg
and
lods
cli
loop
mov
ret
insb
rsqrtps
lret
je
lret
dec
xor
cmp
add
mov
sti
or
and
add
loop
inc
idivb
fiadds
in
cwtl
push
ja
push
je
sahf
add
cmp
test
add
xor
xchg
and
test
add
sub
mov
mov
call
ja
imul
jnp
or
insl
add
pop
std
pop
shll
inc
mov
add
or
mov
sbb
jp
add
mov
sbb
imul
cmp
sub
jmp
insl
test
icebp
push
in
inc
fsqrt
imul
fmul
mov
test
sbb
add
and
add
data16
mulb
daa
xchg
cmp
sub
mov
in
adc
sarl
and
mov
jmpw
sbb
inc
mov
push
test
sti
je
mov
repnz
mulb
jmp
cli
sub
loope
repnz
mov
sti
push
sbb
std
mov
mov
repnz
loope
cs
mov
push
ret
dec
bnd
push
into
mov
sti
inc
sbb
adc
inc
or
push
sub
jno
mov
test
xor
jmp
xchg
sub
dec
dec
hlt
fimull
push
hlt
stc
neg
cli
push
je
lret
jl
sbb
pop
mov
ss
sub
mov
roll
inc
adc
adc
add
add
add
idiv
xrelease
int3
jmp
je
hlt
ljmp
jle
das
xlat
jp
in
jg
icebp
pop
test
add
ja
pop
or
sbb
testl
push
test
jp
fadd
jg
jg
or
bound
jb
add
test
mov
sti
or
pop
cld
jae
hlt
outsb
dec
jnp
xor
cmp
add
mov
jmp
jl
or
int3
xor
jno
jns
add
pop
push
sti
test
jo
jno
outsb
inc
lret
stos
in
or
je
js
mov
add
xchg
outsl
fdivp
scas
jmp
add
pusha
mov
add
stc
ret
mov
jno
mov
add
add
add
add
and
js
cmpsl
stos
adc
add
popa
out
sub
mov
push
js
rorl
sahf
mov
pop
mov
add
shrb
jle
cmc
mov
push
push
and
ja
adc
lds
jmpw
sbb
inc
mov
adc
mov
cmc
add
jbe
or
add
mov
mov
jmp
push
push
adc
mov
mov
sbb
jmp
mov
add
push
mov
xor
fcomps
flds
ds
sbb
das
bound
das
lea
cmpsb
mov
incl
pop
lock
add
addl
enter
jp
test
push
enter
dec
sub
mov
pop
sahf
das
jnp
dec
or
dec
xor
inc
inc
xor
inc
mull
push
push
das
add
dec
std
cmp
mov
sub
jecxz
fstpt
sbb
cmp
test
mov
out
dec
les
outsl
add
push
pop
xchg
call
daa
scas
out
aad
js
or
xor
cmp
pushl
dec
inc
add
out
je
ds
dec
pop
adc
jg
daa
enter
mov
dec
pushf
jge
mov
shlb
flds
inc
inc
adc
push
add
add
add
cmpsl
pop
dec
sbb
xor
hlt
jae
loope
in
jmp
cmp
sub
in
jmp
sub
mov
or
xor
testl
and
fs
xor
mov
dec
mov
cmc
lods
mov
addr16
push
xor
ljmp
int
scas
sub
jl
sub
add
add
add
sbb
adc
fcmovu
pop
jg
stos
mov
jo
adc
scas
mov
add
pop
icebp
xchg
xor
shlb
sbb
pop
add
ds
push
add
roll
sti
mov
call
shrb
shrb
cli
jle
pop
push
and
pop
loope
sub
test
ds
sbb
testb
sub
lcall
add
xchg
add
pop
loope
sub
cmp
pop
mov
decl
mov
add
xor
shlb
jnp
push
inc
sahf
lds
jne
dec
cmp
xchg
ret
sub
aad
add
add
add
add
pushf
ss
loopne
ret
and
cmc
incl
sbb
ret
fxch
pop
bound
outsb
mov
sbb
out
loop
shl
fidivs
test
leave
ret
repz
inc
sbb
je
fsts
jno
jne
mov
div
addb
cs
test
xor
lock
sub
loopne
and
lock
inc
call
pop
out
into
mov
stc
test
cs
sarl
cli
fdivs
clc
push
fiadds
push
insb
inc
cltd
add
xor
or
repz
jecxz
mov
fldt
dec
ret
mov
add
ret
incl
pop
xor
insl
mov
push
roll
add
movsl
xor
or
pop
ljmp
adc
popf
inc
jbe
std
jle
jl
cld
and
fsubrl
cli
sub
mov
icebp
or
stos
and
mov
enter
mov
push
push
es
fdivl
outsb
inc
add
pop
out
and
jno
std
sub
and
pop
add
cmpsb
test
out
mov
lock
scas
pop
bnd
ljmp
sub
jp
or
or
test
hlt
xor
adc
jmp
inc
mov
add
divl
cs
outsl
sar
or
fcmovne
and
aam
adc
test
lret
sahf
sar
pop
add
loopne
or
add
jns
loope
xor
mov
aas
sub
cbtw
xor
lock
mov
push
test
jnp
cmc
incl
mov
lcall
add
pop
mov
add
pop
xor
or
cmc
incl
mov
jp
ret
cmc
cmp
adc
pop
sub
setp
incl
inc
add
xor
xor
mov
xor
sub
cmc
call
jge
mov
sbb
mov
xor
cmc
andl
add
decl
inc
or
mov
jnp
ljmp
leave
fisttpl
or
cmp
jmp
sti
cld
push
and
push
pop
lret
jns
call
add
add
add
cmp
test
in
cli
loop
and
test
in
cmp
mov
jmp
insb
add
cld
call
push
xor
int3
mov
sti
xorl
rolb
in
jecxz
or
and
mov
jmp
lock
aas
jle
imul
sbb
in
jp
inc
sarb
add
cmp
stos
sub
sub
fsubrp
sbb
xor
test
pop
or
and
repz
fidivrl
mov
in
in
jp
add
jp
add
sub
jo
cmc
ljmp
or
bound
ljmp
fs
cmp
bound
das
sbb
pop
dec
mov
test
cmp
sbb
cs
jmp
sbb
xorb
in
out
cmp
popf
shlb
or
or
enter
jmp
jb
sti
pusha
ss
add
add
add
add
inc
xchg
push
add
out
stos
stos
mov
dec
insl
mov
jg
mov
lods
mov
add
hlt
incl
push
mov
add
lods
mov
sub
shrb
sub
stc
fwait
sub
pushf
sub
jbe
stc
and
mov
cmc
jne
das
rorl
fwait
add
or
je
push
xor
pop
and
adc
rcrl
cld
mov
popf
xor
jmp
lcall
jae
or
mull
inc
cld
outsb
push
adc
xor
jmp
cwtl
test
xchg
push
out
xchg
roll
outsb
cmpb
cltd
add
inc
popf
ljmp
add
add
add
add
sbb
test
jne
outsb
lret
jb
in
jae
mov
cmp
xchg
mov
jle
fmuls
dec
inc
push
mov
inc
pushl
xor
fstpt
push
jmp
cmp
mov
data16
cmp
mov
add
push
stc
pop
mov
loop
add
adc
jnp
mov
adc
fstpl
insl
ret
jg
adc
mov
aad
add
jl
call
mov
fwait
add
jns
xchg
xchg
pop
or
add
xor
jmp
push
stos
inc
std
pop
std
sti
loopne
inc
jp
dec
cmc
not
add
mov
sbb
or
inc
add
sbb
and
lods
les
jmp
ret
ja
sub
gs
test
sarl
notb
pop
cwtl
jno
dec
stos
xchg
cmp
sub
mov
or
or
dec
call
roll
add
ss
mov
das
shl
cmpsl
mov
fldl
dec
xor
mov
ss
mov
das
jnp
and
mov
mov
test
or
icebp
out
add
add
push
sub
mov
sti
jmp
scas
arpl
pop
pop
rolb
out
inc
in
lea
ljmp
in
sub
pop
into
xor
mov
negl
jnp
lcall
je
mov
cli
call
mov
mulb
push
hlt
clc
sbb
jne
pop
mov
rorb
mov
dec
mov
loop
std
movsl
xlat
and
pop
jecxz
decb
test
daa
xchg
lods
or
sub
mov
loop
mov
jne
inc
xorb
mov
push
in
sub
icebp
test
mov
push
sub
hlt
sub
loop
js
popa
loop
in
ss
int3
inc
int3
hlt
hlt
sub
inc
adc
cmp
cld
cmp
add
add
add
aaa
mov
icebp
je
test
in
sub
add
mov
xlat
jge
std
inc
jae
movsb
pusha
stos
xor
push
test
outsl
sbb
fwait
pop
js
or
add
outsl
pop
stos
jae
sub
jl
out
adc
test
hlt
xor
xor
sbb
rcrb
cmpsb
sub
jmp
add
sub
loop
sbb
cli
xchg
lret
filds
sub
repz
imul
xchg
cmpsb
inc
fstpl
std
sti
mov
inc
jp
fistpll
gs
xchg
cli
push
ja
in
jmp
icebp
jle
jmp
vmwrite
pop
insb
lcall
repz
loope
sti
movsb
call
adc
jmp
sub
xchg
insl
outsb
adc
pop
jbe
or
inc
xchg
pop
cmp
xchg
cmp
push
push
or
ljmp
scas
int
cltd
xchg
addl
xchg
jae
push
in
add
sbb
gs
jae
add
pushl
xchg
cmc
dec
adc
test
icebp
sti
jae
xchg
xchg
imull
xchg
xor
inc
jnp
push
xchg
cmc
sldt
add
add
add
add
aam
add
mov
cwtl
push
mulb
adc
je
add
jmp
or
cli
push
or
cli
add
std
sub
pop
inc
add
daa
dec
mov
push
pop
mov
dec
cld
je
add
jp
call
push
loopne
mov
push
pop
mov
mov
mov
xchg
mov
cmp
add
lds
push
into
jmp
mov
xor
aad
or
test
mov
mov
dec
divb
xor
mov
fistps
jo
or
jmp
mov
gs
mov
lock
out
pop
inc
icebp
call
aas
aaa
xor
mov
movsl
outsl
inc
mov
out
call
jo
scas
ss
xor
mov
fdivr
lods
dec
add
xor
xor
aaa
mov
pushf
insl
dec
imul
aaa
or
and
push
out
jmp
cmp
push
inc
add
out
push
lds
aas
pop
das
aas
shlb
cli
out
pop
in
adc
movsb
cmp
daa
aad
sub
test
add
stos
cli
push
xchg
ljmp
cmp
add
jge
cld
loop
and
loop
adc
push
bound
or
clc
cmp
and
mov
cmp
xchg
sbbl
into
cmp
add
xrelease
inc
rorl
add
jmp
lods
jnp
pop
inc
test
addl
incl
movsl
out
and
out
and
fwait
dec
adc
xor
jne
mov
push
lcall
xorl
dec
loop
mov
dec
adc
fdivp
xor
add
jmp
push
add
fldt
jnp
popl
cmp
and
adcl
cmpl
mov
jo
fiaddl
push
cld
add
aad
jns
lahf
or
call
in
mull
push
adc
adc
adc
cltd
mov
jl
outsb
cmp
movsb
xchg
mov
loopne
hlt
xorl
mov
std
in
or
fsts
sbb
or
jmp
inc
inc
aaa
mov
mov
cmp
decb
jp
jmp
test
aas
cld
lock
aas
cmc
add
pop
lea
bound
mov
imul
ja
pop
psubq
pop
movsb
mov
pop
sbb
sub
jae
icebp
mov
aas
jmp
fbld
mov
out
gs
les
cmp
lret
jno
test
add
mov
in
jle
jmp
add
ficompl
add
mov
loopne
mov
xor
adc
ret
cmp
mov
movsl
fnstenv
scas
test
mov
test
inc
jns
xor
jmp
cwtl
out
out
pop
jno
pusha
mov
out
push
js
cli
xor
dec
cmp
cmpsb
pop
icebp
or
das
or
mov
shlb
mov
pop
xor
mov
mov
add
xor
push
add
mov
insb
in
sti
jo
test
mov
jo
test
mov
lods
mov
decl
mov
setns
and
cmpsb
stos
inc
mov
inc
add
xor
add
pop
adc
dec
inc
lret
repz
xor
dec
add
add
sub
add
andb
call
mov
jno
incl
mov
sbb
outsb
xor
inc
cltd
test
hlt
ljmp
fldenv
shl
cltd
jl
dec
iret
ds
sub
test
inc
sti
cmp
inc
add
jl
push
or
jo
sar
jo
mov
cmp
int
add
mov
jle
mov
cld
ja
or
cli
xor
fiaddl
jne
aad
je
add
or
or
sub
incl
or
cmpl
fcmovnbe
cli
rorb
xor
sbb
divl
fidivrs
add
and
and
adc
loope
mov
xor
add
xor
imull
pop
cmp
or
push
out
inc
loopne
out
or
fimull
cs
mov
cmp
xor
add
mov
sub
pop
lods
out
sahf
insl
mov
lahf
call
add
xor
imull
insl
hlt
repnz
call
add
add
add
dec
or
rcr
out
inc
push
fwait
fistpll
inc
jg
sbb
call
rcrl
sub
sbb
nop
fwait
xor
jmp
hlt
xor
push
xor
insl
stos
xor
jmp
jnp
out
inc
sub
jecxz
inc
jg
clc
sub
push
hlt
sub
add
add
add
cli
push
fadds
and
roll
xor
jmp
hlt
xor
push
xor
gs
add
add
imul
mov
repz
js
mov
hlt
jp
aam
mov
js
adcl
pop
jl
add
xchg
call
pop
adc
add
mov
out
adc
sbb
mov
xor
jmp
dec
inc
lret
pop
insb
paddusw
add
scas
or
pop
xor
and
add
push
pop
adc
pop
lea
negl
lret
pop
adc
pushf
xor
push
testl
xor
ljmp
push
sub
test
aam
mov
dec
lock
scas
sarl
xor
inc
add
xchg
insb
call
mov
mov
push
sub
sub
cli
sub
adc
aam
jns
inc
movsl
call
mov
adc
inc
add
xchg
adc
sub
jne
xor
push
test
outsb
sub
add
add
add
cmpsl
in
add
cmp
lods
fwait
cltd
inc
add
lock
jp
imul
lea
inc
mov
add
jle
sbb
sub
add
loop
mov
fs
pop
push
lock
and
xor
mov
sbb
loope
aaa
inc
jle
std
sbb
mov
inc
enter
mov
add
xor
aaa
in
mov
sbb
jae
pusha
xchg
out
into
ret
fucomp
repz
mov
or
xchg
cli
cmpsb
jbe
in
jmp
hlt
xor
cmpl
lods
daa
or
sub
jmp
test
sub
sub
sbb
mov
hlt
and
ret
hlt
xchg
jno
add
mov
loop
stc
push
mov
in
testl
sub
cmp
jmp
mov
xor
fucomip
cmp
fucomi
xor
pop
adc
sbb
and
push
pop
insb
mov
lret
cmp
mov
inc
jl
outsb
outsb
adc
inc
leave
inc
pop
hlt
pop
cmp
xchg
iret
test
orl
push
shrl
ljmp
scas
sbb
or
mov
xorl
int3
add
jmp
mov
dec
aam
jmp
shll
dec
or
and
call
lods
adc
or
push
push
xor
fs
fsub
enter
scas
adcl
mov
inc
dec
mov
cwtl
push
add
jne
dec
or
and
test
std
xchg
and
or
add
pop
mov
je
sti
jae
or
or
lea
incl
add
inc
sti
mov
lds
shrl
mov
rcrb
mov
cld
std
lods
lods
sar
xchg
gs
fsubs
gs
in
xchg
loope
loop
call
add
add
add
mull
insl
sbb
xchg
leave
inc
aaa
pop
test
cmpsl
mov
xor
data16
lods
xchg
mov
int
sbb
xchg
lcall
out
xchg
jno
mov
js
shrl
pop
push
mov
xchg
dec
sar
xchg
ljmp
push
mul
cmc
lods
fbld
inc
lcall
add
cli
push
and
insl
ss
cli
je
test
hlt
xor
gs
icebp
ss
fucomi
sahf
lds
or
cwtl
cli
mov
test
pushf
push
sbb
dec
inc
jg
cwtl
and
shrl
jb
fwait
cli
sub
pop
shr
mov
inc
fwait
mov
sbb
dec
add
pop
pop
add
xor
add
adcl
decb
sbb
test
cmc
inc
add
adc
jae
jbe
out
cmc
incl
sbb
jae
lea
arpl
push
idiv
shll
add
xor
fisubl
idiv
sub
dec
adc
loop
sbb
xor
lret
cwtl
xor
mov
adc
add
xor
das
jnp
add
adcl
decb
dec
xor
cli
mov
inc
adc
jnp
add
cld
cmp
inc
or
leave
cli
and
mov
adc
add
or
leave
cld
lock
xor
test
cli
jle
clc
ss
jg
add
ror
ss
cli
jle
clc
repz
pop
lcall
xor
dec
adc
inc
clc
jnp
mov
cld
jo
jge
add
push
fst
pop
xchg
or
sub
xchg
inc
incl
fwait
in
repz
inc
sbb
hlt
or
cmp
lods
pop
std
or
or
and
aas
add
jno
cld
stc
jno
push
hlt
das
into
in
fisubl
add
mov
loopne
mov
roll
mov
jae
test
pop
ss
jno
sti
icebp
pop
inc
mov
mov
jg
das
jmp
pop
sub
and
xchg
cli
jmp
iret
push
add
lods
inc
add
adc
mov
sub
out
mov
sti
pushf
or
shll
dec
xchg
je
cmp
adc
xchg
cli
jo
jae
pop
aaa
cld
out
mov
xchg
cli
out
sub
out
out
cmpsl
shrl
pop
test
cwtl
or
xor
jg
xchg
mov
imul
adc
hlt
and
add
mov
arpl
sub
add
add
add
add
adcl
stc
incb
cmc
jne
pop
divl
gs
mov
mov
jmp
xchg
cli
jmp
sbb
pop
adc
dec
pop
divl
sbb
incl
sahf
cmc
jne
fs
fcomp
mov
flds
fidivs
and
inc
sub
inc
mov
insl
add
imul
sub
fld1
pop
ljmp
or
incl
sbb
jp
cli
ljmp
sbb
sti
ret
or
inc
pusha
inc
negl
or
dec
add
btc
cli
sbb
movl
mov
int3
je
xchg
hlt
aaa
or
pop
dec
adc
es
push
call
je
addr16
lcall
jle
push
ret
cwtl
nop
insl
inc
fcomi
cmp
add
xchg
cmc
sti
out
pop
shl
call
mov
fcomi
jno
pop
push
add
dec
lret
cmp
xor
add
enter
nop
aas
outsb
sbb
test
add
add
add
or
leave
cli
inc
cmp
push
jecxz
cmp
test
push
out
push
pop
mov
ficoml
cwtl
lods
stos
int
arpl
in
mov
cld
mov
pushl
lods
mov
int
rcll
loope
sbb
cmp
mulb
rorb
xor
cld
pop
mov
pop
sub
adc
movsb
mov
jbe
faddl
dec
xchg
subb
mov
hlt
xor
push
lea
jmp
hlt
mov
lds
mov
mov
mov
sti
pop
lret
shll
mov
mov
add
xlat
pushl
mov
add
cltd
idiv
jno
iret
ljmp
add
add
add
add
repnz
ljmp
pop
mov
jns
sbb
mov
sub
jae
dec
ret
inc
or
loop
add
test
xchg
sbb
mov
mov
out
push
xor
mov
pop
movaps
divl
xchg
add
dec
sbb
xor
add
jnp
mov
clc
cli
and
movl
mov
js
cmp
inc
xor
mov
leave
je
outsl
nop
add
loop
mov
mov
je
lcall
inc
dec
dec
or
push
enter
push
ficompl
push
jp
add
xchg
add
enter
enter
add
add
add
add
rcl
jnp
notb
xor
xor
fdivs
clc
sbb
test
mov
jo
scas
mov
call
mov
or
loopne
xor
add
xor
add
les
testb
push
ljmp
ret
cltd
lock
scas
add
jecxz
push
pop
mov
fistl
outsb
adc
jnp
xchg
cli
mov
cmp
xor
jmp
popa
mov
call
repnz
mov
cmc
jno
loope
jne
mov
mov
adc
orl
pusha
cmp
add
ret
xor
mov
in
in
or
pusha
add
mov
iret
xor
inc
in
lret
mov
jmp
sbb
inc
add
aam
mov
xor
testb
sti
pushf
or
shll
gs
cmc
jne
jae
or
ds
leave
or
fisubs
call
sti
pop
cmp
inc
jne
testl
mov
mov
add
loopne
cmp
cli
xchg
mov
test
add
dec
or
pop
pop
sbbl
je
sbb
cli
aas
jmp
sub
mov
cmp
add
aaa
cld
push
xor
js
shll
fs
xchg
xlat
psubsb
incl
add
testb
adc
aam
adc
mov
jne
sbb
shrb
imul
xchg
ja
out
mov
mov
mov
stc
mov
add
fmull
ss
xchg
testl
dec
add
fst
test
xchg
incb
cmc
cmpsl
ret
jno
pop
dec
fcoml
xor
repz
add
add
add
add
lock
shll
enter
and
sbb
into
les
ljmp
dec
fidivrl
sbb
fwait
in
mov
call
ret
sub
rcrb
clc
ret
lcall
mov
or
add
xor
jnp
call
cmp
hlt
inc
repz
sub
lea
call
stos
push
jno
jmp
mov
add
fisubs
adc
add
ret
dec
jmp
nop
pop
loop
xchg
jmp
pop
cmp
push
mov
cli
bound
popa
xchg
mov
add
stc
scas
mov
enter
loop
mov
adc
add
inc
add
jns
fldt
stc
jbe
ds
adc
int3
inc
add
sbb
gs
xor
bound
xchg
add
xchg
mov
xor
push
notl
sbb
fcomi
jmp
and
loope
and
dec
divl
fidivrl
fisubs
mov
add
add
add
add
xor
pop
ljmp
inc
inc
mov
xorl
push
hlt
cmpl
shr
addr16
dec
insb
add
add
repz
xor
add
pop
sbb
insb
inc
push
sti
mov
push
xor
pop
sbb
cli
add
lods
add
xchg
test
add
add
add
add
add
sbb
cmp
add
xchg
jl
je
add
xchg
cmpl
insb
dec
sbb
xor
cmp
pushf
jbe
dec
or
pusha
insb
add
sbb
xchg
jb
or
cmpsl
cli
push
ret
clc
xor
push
test
mov
test
sarl
add
add
add
add
test
ss
fisubrs
ss
fwait
paddb
lock
xchg
push
sarb
xchg
jmp
sti
cmp
add
int
xor
jp
xchg
mov
mov
sub
sbb
in
stos
xchg
test
enter
enter
xchg
test
dec
add
enter
sti
add
js
outsb
mov
mov
insl
insb
cmp
stos
inc
data16
xor
stos
jo
or
cli
cs
in
adc
mov
std
sbb
xchg
push
push
push
and
je
xchg
jne
out
mov
ljmp
enter
pop
push
in
or
stos
cli
add
je
jb
jge
xchg
cmc
stos
add
js
jae
mov
inc
add
inc
adc
clc
idivl
adc
adc
test
and
xor
cmp
mov
xchg
flds
adc
fld
addl
ret
push
pop
fs
dec
sbb
and
ret
jae
leave
cmp
add
call
test
add
loop
jae
ftst
pop
les
movlps
lcall
pop
or
lcall
insb
push
inc
test
xchg
cmpb
or
outsb
mov
in
xrelease
test
inc
and
out
in
xchg
jmp
mov
push
lods
or
sub
cli
lock
add
sti
aas
cmp
jl
test
mov
sti
sub
add
push
sbb
sti
or
je
shlb
or
andl
push
call
mov
mov
mov
jb
dec
mov
add
add
add
lods
adc
and
incl
xor
xorl
fistl
jmp
aam
push
icebp
mov
cmpb
push
icebp
stos
es
icebp
mov
iret
out
add
stos
and
lock
stc
mov
jns
inc
add
insb
movsb
mov
pushl
jns
jecxz
cmp
mov
add
xor
sub
repz
mov
inc
fisttpll
jnp
add
or
mov
out
sti
mov
dec
jnp
sub
into
call
jb
push
inc
jo
push
push
add
mov
adc
hlt
adc
outsl
fdivrp
lea
test
incl
lahf
icebp
aas
cmp
sub
add
add
add
cli
into
aaa
and
add
sbb
imul
divl
mov
into
pushl
mov
add
decl
inc
cld
lock
pop
pop
dec
jmp
movsl
lock
pop
das
pop
lea
cmc
call
sub
cli
mov
push
jne
lea
outsb
pop
xor
push
jb
sar
mov
push
data16
and
push
sbb
scas
xor
jb
add
adc
jae
mov
add
shll
hlt
add
jg
add
ds
pop
add
mov
xchg
addr16
pop
xchg
pop
test
inc
mov
incl
push
fisttpll
inc
test
repz
jg
test
pop
xor
jns
aad
mov
pusha
add
movsl
stos
testl
call
push
in
mov
add
xor
stos
fs
add
jns
or
mov
std
mov
cmpsb
insl
jge
arpl
call
or
lret
push
mov
clc
mulb
jmp
cmpsb
sub
js
xor
in
mov
cmpsb
or
jge
lods
scas
mov
or
in
jl
mov
jnp
jmp
dec
or
ljmp
jae
xor
mov
mov
adc
dec
lret
xchg
cmpsl
addb
sti
xchg
add
inc
repnz
in
and
mov
lahf
imull
adc
call
ja
cmc
mov
ja
fnstsw
cli
cld
fdivl
adc
sub
aam
mov
push
mov
inc
dec
ja
ljmp
enter
mov
cmpl
out
cmp
add
mov
cmp
add
cmp
dec
movsl
cmp
das
movsl
cmp
jge
cmp
mov
add
movsb
cmp
mov
cmp
dec
sahf
cmp
add
cmp
mov
cmp
les
cmp
jo
cmp
and
cmp
xchg
lods
cmp
push
lods
cmp
in
cmp
xor
cmp
add
cmp
fldcw
add
inc
xchg
cmp
imull
xchg
cmp
idivl
cmp
testl
cltd
cmp
divl
cwtl
cmp
idivl
cltd
cmp
testl
test
notl
xchg
imul
test
add
add
add
nop
xchg
notl
cmpb
cli
xchg
test
pop
pusha
sub
out
and
cmpsl
pop
sbb
pop
pop
adc
xor
xor
xchg
cli
xor
mov
xor
xchg
xor
xor
add
xor
or
es
pop
repz
pop
in
sub
adc
add
repnz
push
out
sbb
pop
out
sbb
sbb
adc
pop
push
enter
push
or
rorb
in
fadds
ljmp
scas
dec
mov
dec
add
loopne
xor
fidivrl
ss
ds
mov
shlb
stos
clc
in
inc
jmp
xchg
add
add
add
add
gs
add
xchg
add
xlat
xor
add
add
data16
add
xchg
xor
add
lcall
add
cmp
add
add
add
adc
add
add
add
adc
cmp
add
or
cmp
add
cmp
add
cmp
add
adc
add
cmp
add
adc
add
adc
add
out
mov
push
mov
add
add
add
or
orl
push
xchg
lahf
jns
jp
lods
mov
jl
scas
adc
jle
stos
mov
and
add
and
xchg
ss
sbbb
xchg
cmp
xor
into
cmp
or
pop
add
xor
cli
xchg
pop
mov
add
jle
inc
decl
mov
push
push
ja
add
add
or
adc
cli
sub
mov
jp
inc
push
mov
test
hlt
or
push
jo
aaa
test
stos
sub
or
call
inc
daa
std
ret
add
push
lock
jne
jl
mov
sahf
jne
mov
jle
or
jne
xchg
divb
jmp
add
add
add
mov
and
jno
cmpsl
fwait
add
pop
call
das
jo
inc
and
sbb
std
mov
in
push
das
add
push
sti
outsb
sub
sub
icebp
aam
ljmp
mov
aad
bound
sub
adc
inc
leave
test
jno
insb
sbb
cli
push
dec
repnz
sub
sub
cmp
or
out
pop
stos
inc
icebp
mov
test
cli
bound
sub
shl
adc
jo
add
mov
stos
inc
mov
lods
push
cmpsb
nop
ja
sub
xor
pusha
outsb
adc
mov
ret
cmc
inc
cltd
jbe
test
cmc
push
movsb
cmpsl
flds
push
push
sbbl
mov
xchg
aad
incl
pop
je,pn
pop
xchg
or
mov
clc
inc
or
sbb
pop
inc
dec
cmp
je
cmp
out
sub
inc
sti
sub
xor
das
inc
add
ss
jae
sbb
jmp
jns
add
xchg
inc
negl
push
sub
xchg
enter
cmp
sti
add
add
lret
or
sti
adc
xchg
and
popl
sub
out
ljmp
lock
aas
loopne
stos
out
add
xchg
test
or
jg
cmpl
subb
lock
add
and
scas
inc
gs
loopne
rep
jg
jnp
adc
je
testb
mov
mov
call
clc
sub
cld
loope
sub
and
xor
add
test
js
and
les
lods
jns
arpl
sub
mov
adcl
jno
outsl
or
lods
outsl
stos
mov
je
and
jo,pn
add
cs
cs
stos
lods
aaa
fldenv
cmpsl
lock
pop
pushl
aas
popa
mov
test
call
stc
ja
sti
push
sub
xchg
cli
jbe
hlt
xlat
jmp
sbb
push
adc
orb
cli
jmp
xchg
xor
and
xchg
cli
push
add
mov
repz
cmp
mov
or
orl
jno
add
lea
xorl
mov
dec
scas
out
inc
int3
aad
or
xchg
mov
je
out
inc
in
shrl
cmp
cs
cmc
jp
mov
mov
aam
and
xchg
pop
push
xchg
add
fwait
cmc
decl
and
ljmp
pushf
mov
adc
push
out
mov
call
cld
test
and
jmp
out
inc
xchg
mov
notrack
cmp
push
xchg
inc
js
movsl
add
mov
arpl
pusha
sahf
movsl
jae
push
jmp
imul
lret
mov
add
add
add
adc
jnp
jo
enter
adc
jb
cmpsl
cli
sbb
add
adc
clc
fnsave
mov
stos
mov
push
in
aaa
xor
test
pushl
movsb
repnz
int3
inc
pop
pushl
data16
lock
in
sub
jmp
add
mov
loop
in
ret
sarb
pop
in
jge
insb
mov
inc
dec
outsb
xchg
test
cmp
outsb
insl
dec
sub
jl
cmc
popa
test
or
aam
dec
pop
ja
insl
inc
test
and
mov
das
add
sbb
xor
popf
cli
add
cmc
xor
add
add
add
jecxz
enter
out
dec
push
pop
mov
mov
jmp
cmp
xor
fimuls
imul
push
mov
in
idiv
popf
mov
mov
cltd
sbb
xchg
sti
xor
cld
ret
sbb
or
shlb
xorb
cld
fcmovnu
clc
and
add
hlt
aaa
mov
add
dec
cmp
dec
aaa
pushf
mov
fsubrp
adc
and
out
add
mov
cmpsb
lock
sbb
cmp
and
xor
mov
mov
call
mov
sahf
add
sbb
test
xchg
cmc
decl
inc
cli
dec
add
lds
scas
in
subl
xchg
cmc
call
add
sbb
add
outsb
addl
xchg
adc
cmp
add
adc
or
jmp
cmpsl
icebp
mov
cs
test
and
faddl
test
aam
inc
les
pop
stos
or
jmp
mov
mov
inc
mov
dec
sti
add
jne
dec
imul
mov
mov
das
xor
cmp
ficomps
push
fisubs
cwtl
sbb
jne
imul
inc
clc
stc
mov
test
mov
je
xlat
addr16
shlb
and
jnp
adc
call
mov
adc
cmp
insb
stos
add
cmp
aad
jmp
xor
mov
cli
jmp
mov
add
pop
push
das
add
cltd
add
aaa
data16
mov
jle
jl
ret
je
xchg
imul
or
sbb
or
test
add
push
push
pushl
xchg
data16
push
lock
mov
hlt
shl
mov
xorl
xorl
repz
enter
fcoms
jg
out
or
imul
jb
inc
mov
testl
notl
jmp
fwait
push
jl
or
sbb
fnstsw
push
sub
mov
push
data16
sbb
data16
add
clc
xchg
insb
adc
into
ss
add
push
cmp
iret
pop
call
lea
jmp
movsb
mov
jle
cmc
decl
enter
or
sub
andl
loope
aad
cwtl
sub
fldl
mov
mov
push
scas
mov
add
xor
mov
push
pop
add
mov
push
or
jg
push
testb
push
mov
or
dec
xor
clc
testl
sti
bound
mov
out
xchg
jae
xor
sbb
lcall
pop
pushf
decb
stos
xor
aas
mul
dec
or
sbb
pop
pop
mov
decl
imul
js
or
add
xchg
hlt
aas
notl
adc
fsin
jmp
hlt
aas
negl
lahf
adc
imul
rcl
inc
sti
enter
out
pop
aaa
xchg
fisubl
decb
xor
ss
xor
mov
data16
ss
mov
cmp
sub
call
in
sti
outsl
in
pushl
imul
add
add
add
jae
call
out
add
push
fildl
shll
adc
notl
add
sub
add
mov
stos
adc
call
pop
and
call
add
and
sbb
mov
in
test
lods
lcall
sub
and
ljmp
push
jl
and
lret
insl
add
cli
jmp
psubusw
in
xor
cld
les
jmp
push
lods
lea
dec
repz
push
incl
out
fiadds
in
insb
jae
jmp
xchg
cmp
fnstenv
ds
add
or
pop
xchg
push
lods
mov
dec
add
popa
mov
sub
outsb
and
cltd
ds
cwtl
nop
jle
rclb
push
repnz
addl
cmc
je
dec
cmc
inc
repnz
xchg
xchg
outsb
and
cwtl
cmp
stc
nop
jle
and
mov
push
testb
jmp
pop
sbb
cmp
sbb
je
xor
adc
shrl
add
dec
and
cltd
mov
add
cli
sub
jb
sbb
test
dec
cmp
into
test
xor
dec
and
pop
xor
out
add
ret
cmpsb
jno
and
xchg
mov
cltd
adc
push
mov
and
test
or
mov
add
add
add
sub
das
push
sub
into
xchg
sbb
lock
lret
ljmp
add
mov
lock
inc
mov
xor
dec
lods
cltd
sbb
stc
sbb
xorl
jmp
mov
fsub
mov
add
cmp
jmp
sbbb
xor
push
ror
lods
cmp
clc
stc
insl
and
push
xor
add
xchg
or
das
mov
jb,pt
jae
adc
dec
mov
in
sbb
sub
cmp
outsl
add
loopne
test
out
or
mov
clc
xor
sbb
stos
out
cli
xor
enter
int
add
jp
clc
test
jmp
repz
test
mov
hlt
sbb
aam
iret
cmp
add
xor
js
dec
mov
xchg
hlt
sub
mov
pop
data16
sahf
pop
cli
push
mov
pop
sub
xor
rcl
and
adc
mov
call
arpl
or
loope
sti
hlt
enter
jge
jecxz
mov
cli
add
sub
push
jo
gs
call
ljmp
add
push
xchg
xchg
jns
inc
mov
pop
push
jmp
in
aaa
mov
jns
roll
aam
jno
inc
cld
mov
sub
lock
xor
push
push
dec
or
xchg
mov
mov
test
hlt
rdtsc
sbb
notl
in
aaa
cmp
testl
out
loop
clc
sbbb
icebp
rorl
mov
pop
inc
aaa
xor
stos
mov
shrl
das
cmp
pop
out
mov
adc
pop
bound
mov
lret
mov
aaa
mov
mov
arpl
add
xor
insl
test
jmp
sti
movsb
fiaddl
jl
xchg
mov
or
add
add
add
shr
jle
dec
cmpl
hlt
xchg
xchg
ss
push
movsl
int
cmp
xor
cmpsl
js
jmp
fwait
ret
sub
fwait
pop
cmpsl
and
jg
xchg
imul
jmp
push
divl
mov
xchg
sbb
nop
add
add
pop
fistl
aad
lahf
xor
push
sbb
add
mov
or
xor
jae
xor
jmp
ret
cmpsl
jg
sbb
jbe
and
call
fdivl
test
out
cs
hlt
mov
sub
jo
arpl
outsb
pop
dec
insb
or
mov
mov
fmulp
fwait
xchg
and
adc
jae
mov
ss
call
cmc
out
out
mov
add
mov
add
mov
inc
inc
jb
repz
pop
xchg
mov
call
insb
cld
push
adc
lea
cli
push
jmp
inc
xor
and
xchg
push
xor
sub
addl
cmc
jno
inc
xor
incl
mov
push
dec
mov
add
mov
or
xchg
mov
notl
xchg
mov
cmp
pop
mov
or
and
ds
cmp
mov
divl
push
notl
not
cmp
faddl
or
xor
mov
call
add
add
add
bound
add
adc
mov
testl
mov
mov
mov
inc
mov
adc
mov
push
rolb
push
js
adc
mov
cmp
dec
jle
in
dec
test
pop
add
xchg
xchg
xchg
adc
jle
add
jb
adc
xor
icebp
mov
test
fnstsw
dec
xchg
add
std
clc
paddw
stc
adc
pop
rcrl
mov
mov
pop
leave
xor
xor
dec
pop
call
cmp
xchg
fcmovnbe
mov
xor
xor
add
faddl
cmpsl
and
xor
dec
adcl
add
pop
popa
adc
add
lods
inc
test
add
mov
add
xor
cmp
in
loopne
std
push
lock
push
jae
push
push
call
movsb
sbb
pusha
aaa
gs
movsb
test
or
call
dec
movaps
mov
icebp
daa
lods
dec
mov
push
push
push
inc
push
je
imul
addr16
xlat
shlb
push
jo
call
sub
cmp
push
adc
push
push
adc
add
add
rorl
data16
sub
mov
and
push
add
les
add
adc
cmpsb
pop
add
add
cmc
push
add
rcrb
notl
cmc
sbb
inc
push
outsb
pop
pop
and
jne
pop
jbe
lock
cmc
jne
or
adc
fnsave
loop
push
cmc
push
or
or
sub
adc
in
lea
test
call
push
daa
rclb
ficoml
testl
mov
xor
scas
or
add
out
aad
xchg
mov
add
add
add
add
cmp
or
or
mov
mov
getsec
dec
das
ret
ret
mov
pusha
sbb
sti
loop
lea
pop
add
sbb
cwtl
or
inc
or
out
pop
aaa
xchg
mov
pop
or
mov
orl
xor
mov
cld
dec
pop
icebp
call
sbb
sbb
stos
pop
inc
or
inc
and
iret
aad
push
pop
dec
ljmp
jo
sti
lret
ss
mov
and
xchg
jns
lock
divb
sti
lds
ljmp
idivb
or
andb
sbb
xor
xchg
sub
pop
fisttpl
inc
repz
inc
imull
add
add
add
add
sbb
pop
mov
jmp
test
and
cs
adc
jmp
add
fs
out
je
mov
pop
test
xor
fs
add
sahf
adc
pop
loop
ret
jne
mov
movaps
sub
pop
negl
movsl
arpl
add
sub
out
dec
or
add
inc
sti
xor
add
fdivrl
inc
inc
jmp
divl
repnz
fs
pop
je,pn
xor
jle
repnz
cmc
xor
pop
pop
mov
mov
test
mov
xor
ds
into
xor
push
jmp
xor
xchg
xor
add
mov
pop
outsb
es
push
incl
jns
mov
jl
in
arpl
cmovo
mov
add
push
rolb
aam
or
mov
mov
or
add
adc
adc
nopl
clc
lret
or
pop
add
or
mov
or
sarl
mov
mov
mov
mov
mov
or
iret
sub
sub
pop
call
jnp
adc
popf
or
mov
mov
pop
add
icebp
ret
sbb
cmp
inc
jae
lock
xor
xor
push
leave
lea
loopne
ss
mov
push
call
add
add
add
sub
pop
cmp
hlt
inc
negl
jmp
sti
dec
push
out
lock
inc
fistl
mov
fdivs
jnp
inc
repz
inc
sbb
add
adc
push
cmp
add
xor
cmp
call
cld
fcompl
mov
daa
cmp
inc
mov
xor
sub
stos
out
add
add
add
add
add
sub
cmp
cmp
pop
or
cmc
imul
movaps
sarl
fsubrl
imul
pop
hlt
lret
ljmp
ds
repnz
mov
cli
lahf
pushf
adc
and
ficoms
out
repz
out
sbb
dec
out
push
repz
xor
inc
xchg
xor
add
out
sbb
add
stos
mov
push
push
pop
out
fisubrs
setp
cli
decl
shrl
call
inc
cli
fs
push
movsb
loop
jge
cmc
mov
sarb
xor
mov
movsl
lock
insb
movsl
shlb
addl
add
add
add
add
mov
inc
aaa
mov
adc
mov
lea
sbb
dec
inc
adc
mov
or
inc
or
test
jne
loopne
mov
jl
adc
aaa
jnp
dec
pop
xor
add
push
testl
cmpsb
mov
jp
adc
push
inc
out
jns
push
pop
incl
and
sub
call
call
and
mov
insb
add
adc
inc
pop
aad
ljmp
jecxz
aas
cwtl
movl
xor
je
fstl
xor
dec
es
hlt
or
cmp
testl
jle
pop
inc
testl
inc
negl
orl
add
add
add
add
cwtl
inc
test
fldl
test
call
fucomip
xor
rorl
repz
mov
popa
mov
xor
aam
jmp
mov
xor
mov
xor
adc
inc
sbb
cltd
mov
push
insl
les
inc
dec
mov
pop
stos
pop
mov
add
add
add
add
call
pop
cmp
scas
insl
cmp
push
repz
pop
mov
dec
xchg
cmp
aam
aas
inc
jmp
cli
dec
mov
jl
ds
aas
mov
out
xchg
dec
cli
fs
cli
cs
out
nop
dec
cli
jno
dec
out
mov
cli
jmp
add
xor
pushl
mov
cmp
lods
dec
cmc
pop
loope
or
loope
or
dec
lods
femms
dec
lods
inc
adc
adc
dec
cmc
jne
mov
incl
mov
out
push
xor
stos
add
xor
shrl
cmc
test
and
lea
adc
sahf
xor
jp
clc
dec
and
shlb
cmc
jae
dec
xchg
jo
mov
mov
jns
jmp
push
call
les
adc
dec
add
or
insb
sbb
jg
cmp
push
pop
or
insl
sbb
out
icebp
add
imull
in
aas
imull
jnp
sti
ret
add
pop
aas
bound
lea
imulb
sti
ljmp
lea
cs
cmpsb
std
push
add
cmp
lcall
jnp
add
jl
mov
out
xor
fwait
sub
outsl
loopne
ret
adcl
in
fbstp
jnp
mov
call
xchg
and
xchg
add
aam
divl
call
lock
les
aaa
ds
retw
adc
daa
add
xor
invlpg
call
xor
add
xor
jbe
or
mov
cmc
jne
adc
mov
test
pop
sti
xchg
mul
mov
add
add
add
daa
push
out
mov
out
mov
jmp
mov
aas
daa
mov
mov
insl
push
in
jns
xchg
jno
and
sub
std
jge
adc
adc
push
sub
mov
std
mov
sbb
scas
call
mov
inc
add
inc
cmp
popf
outsb
xchg
pop
or
mov
pop
inc
add
ficomps
cmp
adc
mov
adc
cmp
incl
je
out
push
cmp
lcall
push
inc
pop
adc
xor
pop
dec
decb
xchg
movsb
mov
decb
adc
sbb
cmp
mov
dec
mov
xor
add
and
push
dec
xchg
or
jl
cli
je
or
mov
insb
mov
aaa
pop
ja
repz
fbstp
jmp
jbe
xchg
cmp
sbb
mov
ss
jle
push
xchg
xchg
push
sbbl
pop
cmp
mov
and
into
xchg
sub
push
clc
push
cmpsl
sarb
clc
or
mov
iret
add
call
and
int
fcomps
or
xor
dec
call
filds
jg
mov
cmp
pop
dec
mov
xor
outsb
xchg
roll
das
out
mov
out
mov
jae
rolb
sbb
iret
out
call
and
test
xor
xor
and
mov
add
cmp
or
xchg
andps
cmp
mov
jo
jbe
loope
fstpl
cmp
dec
je
je
fdivr
mov
pop
arpl
sub
xor
jno
fcomp
mov
push
sahf
addr16
or
in
jecxz
hlt
sbb
inc
jmp
add
cmp
shlb
das
jb
pextrw
push
pop
outsb
ljmp
data16
in
loopne
into
punpcklwd
xor
mov
xchg
cltd
sub
sub
je
cli
daa
add
cli
hlt
dec
xor
add
mov
and
push
pop
pop
out
push
mov
out
subb
push
push
inc
add
xor
push
cmp
jne
push
mov
adc
mov
cld
or
mov
cld
test
xor
repnz
js
push
dec
push
mov
sahf
xor
adc
mov
dec
push
loopne
inc
loopne
scas
int
dec
ds
scas
outsb
and
mov
and
jno
xor
or
notl
jae
dec
in
lcall
decb
add
adc
out
add
mov
or
inc
inc
or
pushf
pop
xor
mov
push
insb
fcmovne
dec
inc
aad
sti
es
notl
repz
outsb
xchg
jp
js
rorb
mov
cmpl
rcl
pop
cmpsl
ds
or
jp
sub
ljmp
jne
jg
sub
repnz
std
je
pop
add
add
jg
dec
add
pushf
xor
sub
jmp
mov
inc
or
shl
jge
aaa
or
inc
or
dec
push
mov
gs
mov
out
aam
push
mov
inc
xor
inc
fwait
adc
sbb
iret
push
test
add
ja
fsts
roll
dec
scas
and
in
xor
sbb
aaa
adcl
pop
ljmp
add
cmp
scas
movaps
lods
mov
in
xchg
sti
cmp
mov
out
hlt
xor
cmovl
xor
ret
mul
scas
sub
lods
cld
mov
pushl
inc
enter
push
bound
fisttps
add
add
add
loopne
pushf
in
lret
mov
je
loope
sti
fcompl
inc
jmp
clc
in
jl
rcrl
xor
test
hlt
fldl
add
mov
pop
dec
push
pop
dec
push
push
dec
add
cs
cld
subl
test
fistpl
divl
ret
jae
inc
dec
or
dec
push
incl
fwait
ret
push
push
inc
add
out
jae
jge
divl
ret
adc
cli
mov
mov
push
mov
scas
out
frstor
ljmp
push
inc
add
js
push
out
dec
xor
jne
lds
jne
push
mov
inc
je
rcr
sbb
jg
repz
jae
outsl
sti
and
mov
add
add
add
jmp
aas
jae
int
sti
inc
or
jmp
jge
inc
xor
mov
into
ret
jl
mov
mov
jbe
out
repnz
outsl
and
nop
add
inc
test
inc
mov
aaa
xchg
dec
xor
and
sub
sti
ljmp
xchg
cmp
sbb
jecxz
sub
mov
pop
inc
leave
outsb
in
push
roll
icebp
das
jmp
add
out
adc
mull
stos
cmpsl
std
pop
repnz
cld
cmc
in
hlt
daa
sti
xor
xchg
dec
sbb
xor
add
or
test
inc
or
addb
inc
js
call
mov
add
push
and
xchg
pushl
incl
add
add
cli
jmp
jnp
sub
ja
call
mov
mov
jmp
popa
addb
popa
shrl
je
jne
mov
xorb
imul
je
je
sub
xchg
mov
jg
add
les
imul
and
out
outsb
loopne
imul
cmp
out
into
cli
push
fcoml
add
iret
xorb
sub
mov
push
jmp
sbb
push
inc
push
xor
pop
jmp
addb
loope
mov
rolb
cli
push
inc
in
mov
add
add
add
inc
out
jmp
sub
push
pop
xor
je
dec
sbb
mov
mov
idivl
inc
jmp
in
cltd
or
add
push
inc
pop
xor
fidivrs
mov
xchg
mov
cmp
sub
mov
ss
or
xor
add
sub
add
inc
or
add
or
xor
add
insb
jl
jecxz
lret
jl
adc
xor
outsb
adc
adc
or
or
adc
sbb
and
insl
adc
sbb
ja
sbb
and
jl
arpl
cs
sub
testl
dec
not
inc
jae
xor
push
je
fdivs
imul
sub
sbb
add
mov
lock
test
xor
in
outsl
div
insb
dec
adc
pop
lock
adc
jo
imul
jmp
aaa
push
in
sub
cmc
aaa
adc
in
cmp
fnsave
out
les
jmp
enter
int3
aaa
add
or
clc
aaa
add
fdivl
in
lock
jmp
in
loop
in
add
and
js
adc
adc
jo
adc
lods
test
add
xor
jb
adc
arpl
mov
andl
daa
subl
add
movsl
es
bnd
and
xor
scas
pop
mov
mov
jp
out
daa
test
icebp
xor
imul
jmp
mov
sti
push
mov
mov
mov
hlt
xor
pop
xor
jmp
mov
or
pop
das
cmp
xor
mov
jmp
mov
or
dec
das
cmp
xor
fdivs
adc
mov
outsb
test
adc
push
push
adc
cmpsb
enter
add
add
add
add
test
pop
stos
mov
or
jg
jp
psrlw
jnp
cli
and
jmp
test
repz
testl
addr16
inc
inc
mov
adc
ja
or
jb
std
push
int
mov
lock
push
testl
cpuid
cmp
add
add
add
add
push
ljmp
xchg
mov
fisttpl
inc
loopne
mov
adc
xorl
syscall
test
pushl
jle
movsl
mov
xchg
pop
add
movsl
movsb
pop
pop
push
lods
pop
sahf
add
add
movsl
stos
pop
fdiv
add
jo
in
mov
cmpsl
lods
pop
mov
add
add
add
and
adc
xor
mov
js
outsl
enter
or
les
jle
or
mov
ret
loopne
mov
mov
push
inc
loope
or
jle
loopne
xor
stc
xchg
lcall
sub
inc
jg
hlt
add
dec
in
add
outsb
ljmp
hlt
stc
cmp
arpl
cli
pop
outsl
repz
add
add
add
add
sub
adc
adc
adc
test
scas
leave
les
idiv
test
adc
and
insb
hlt
and
rep
inc
mulb
add
in
cmp
fisubrs
xor
stos
hlt
lods
xchg
hlt
xor
test
or
xor
pop
repnz
lds
add
add
add
add
sub
inc
imul
inc
ja
or
mov
test
add
push
add
sub
dec
push
enter
js
add
and
adc
add
imul
adc
adc
adc
pop
mov
add
jb
dec
jb
lcall
lods
icebp
or
out
test
sbb
add
shrb
add
add
add
add
ret
cmc
decl
mov
fsubrp
inc
add
aad
or
xor
test
mov
stos
stc
pushl
int3
add
inc
dec
inc
idivb
pop
sar
inc
jg
aaa
std
test
dec
pushl
mov
ror
inc
cmc
dec
roll
mov
rcl
enter
add
add
stc
pushl
enter
push
dec
inc
testb
in
inc
jg
sbb
and
jl
out
fdivrl
mov
xor
or
outsl
lret
mov
mov
imul
xor
jge
push
int
cld
xorb
jmp
sti
add
jno
test
and
lret
add
add
add
add
and
xor
xor
subl
cli
ss
out
pop
add
add
mov
xor
imul
mov
ljmp
fsubrp
in
jbe
jmp
sbb
dec
jnp
and
das
out
mov
ljmp
into
test
add
sub
mov
leave
imull
daa
push
or
add
add
add
add
dec
outsb
xor
fmulp
xchg
adc
xchg
mov
stc
popf
dec
call
add
sub
call
imul
cmp
and
cmc
daa
jmp
imul
add
sti
in
addl
sbb
sub
stc
ss
lcall
add
insb
mov
pop
mov
roll
sahf
scas
icebp
or
mov
cmp
xor
test
add
xchg
ret
add
ret
bound
cmp
push
mov
or
cmp
popa
stos
inc
or
pop
mov
dec
in
inc
add
repnz
mov
outsb
inc
popf
aam
je
ja
sub
xlat
stc
jae
je
sbb
push
add
dec
cmc
push
mov
adc
outsb
leave
sarl
sti
out
add
cmc
sahf
int
xor
add
xor
rol
pop
pop
out
add
or
repnz
aas
push
or
cmp
test
pushl
adcb
fs
inc
add
adc
cmp
inc
inc
jmp
adcb
dec
inc
inc
add
inc
notb
add
xor
insl
je
jmp
add
repnz
inc
outsl
insl
or
jne
call
sbb
mov
push
cmc
loope
inc
sub
insb
mov
cs
lods
jg
divl
imul
das
fdivr
add
mov
adc
divl
imul
xor
orl
xchg
es
sti
dec
jp
add
mov
stc
mov
xor
je
dec
pop
or
inc
testl
xor
imul
adc
cmp
mov
call
jmp
mov
mov
jmp
mov
repz
xor
hlt
sahf
xor
das
mov
mov
call
mull
jae
mov
adc
mov
movsl
add
cmp
adc
mov
test
mov
jecxz
xor
add
or
add
daa
add
push
movshdup
adc
test
mov
pop
test
cli
decl
dec
packsswb
aas
push
fldt
orl
xor
pop
xchg
xor
cmp
and
scas
cmp
and
rolb
mov
sub
negl
pushf
addl
pushf
push
or
sbb
or
xchg
or
inc
stos
or
sbb
in
movsl
push
jg
and
in
adc
je
repnz
jg
adc
emms
repz
jae
xchg
push
push
aas
inc
idiv
pop
pop
add
fisttps
pop
cwtl
push
push
xchg
mov
add
lahf
mov
and
xchg
dec
add
pop
jnp
repz
inc
jae
xchg
leave
and
xchg
mov
pop
inc
cmp
jl
iretw
jp
jmp
and
xor
pushl
bnd
inc
lret
ljmp
cmpsl
outsb
sub
push
out
jnp
out
ja
or
je
loop
divl
jae
lock
rolb
loope
fidivrl
sub
and
mov
mov
std
mov
push
add
dec
or
xor
orl
pop
imul
mov
sbb
mov
push
xor
xor
jmp
cmp
andl
das
out
jae
xor
xor
xor
jmp
subl
or
hlt
xor
out
ja
cmc
scas
pop
xchg
or
xchg
jge
add
xchg
loope
inc
call
hlt
xor
scas
mov
and
je
pop
out
add
popf
push
fbld
addl
lea
and
and
jmp
sbb
add
test
mov
movsb
scas
mov
rclb
mov
add
xor
push
cli
cmp
test
sbb
sbb
aad
add
rolb
mov
sub
lea
lock
loope
ljmp
add
mov
das
mov
pop
cwtl
das
add
pop
xor
jmp
negl
std
divl
add
sbb
mov
lahf
test
aaa
or
add
sbb
or
inc
cmc
or
sti
ljmp
xor
lea
cmp
loope
decb
push
push
add
mov
xor
std
fcomps
fs
hlt
sbb
jae
adc
or
arpl
adc
pop
cmp
pop
inc
xor
cli
call
cltd
pop
std
test
jle
std
xor
jle
mov
loop
sub
int3
retw
push
sub
sbbl
adcb
in
dec
in
add
sub
subl
bnd
xor
add
loop
sub
cmp
sub
cmp
mov
jns
cs
xor
cmpsb
in
orl
repnz
add
add
add
add
xor
cmp
pop
xor
add
add
inc
jno
sbb
and
jge
hlt
mov
or
add
and
icebp
mov
es
ljmp
jno
inc
shll
jle
hlt
mov
or
add
shrb
fsubrl
mov
or
lods
adc
add
xor
daa
cmc
xor
out
loope
cli
imul
incl
sbb
and
lret
in
xor
adc
mov
orl
ljmp
mov
pop
repnz
add
mov
out
cmovns
jp
repnz
jmp
into
cwtl
or
and
add
imul
test
es
jmp
in
sub
lods
jns
out
inc
test
xor
add
imul
sbb
inc
add
rolb
mov
sti
testl
add
sbb
test
push
jl
adc
mov
sub
ret
xor
mov
add
xchg
call
xchg
adc
mulb
mov
jns
jle
cmc
icebp
decl
cli
add
negl
dec
inc
testb
call
fisttpl
and
je
popa
fsubs
cs
icebp
dec
mov
mov
shlb
sub
nop
push
mov
call
inc
sahf
stc
lret
adc
nop
bound
gs
je
in
divl
sbb
outsl
fisttps
es
dec
mov
loope
mov
out
add
xor
cld
mov
out
imul
test
bound
xor
in
push
pop
jmp
push
lock
popf
adc
out
divl
add
add
add
add
lods
add
repnz
and
pushf
std
call
dec
inc
or
es
jmp
std
cmp
add
mov
popfw
cmp
xlat
cld
sbb
in
cmp
push
mov
cli
jmp
and
cmp
out
add
imul
adc
xchg
sub
add
add
add
cmp
scas
and
shr
and
jmp
mov
push
sbbl
jle
xchg
xchg
mulb
cli
add
sahf
xchg
lock
mov
add
xchg
sbb
incl
inc
scas
roll
orl
test
xchg
push
decl
aas
add
rolb
xor
inc
add
inc
add
xchg
setns
cld
incl
inc
scas
roll
orl
test
xchg
setnp
aas
add
xchg
nop
add
sbb
jg
ud2
test
repnz
cli
add
sarl
sub
fmuls
aas
adc
jg
sub
cmc
sbb
jg
and
cmc
sbb
jg
or
add
add
add
add
sbb
sarl
ljmp
pop
repnz
test
fucomp
test
xor
push
xlat
fcompl
fbld
inc
adc
xadd
shl
test
adc
cli
daa
mov
xor
lds
pop
jbe
frstor
push
jae
and
mov
sub
add
add
add
add
sub
pop
inc
pusha
sbb
stos
clc
fldt
divl
out
cmp
in
mov
or
testb
xor
bound
jno
push
lods
insb
inc
mov
clc
fwait
or
imul
push
loope
add
mov
add
mov
add
stos
add
sub
ret
push
add
cmp
movsl
in
hlt
xor
xor
cs
cmp
leave
call
jo
sahf
dec
imul
dec
adc
dec
sbb
dec
and
insb
insl
and
or
xor
sarb
leave
jmp
xor
jg
enter
mov
fnsave
pop
call
add
ret
pop
out
inc
add
sbb
push
inc
push
inc
cmc
jne
mov
cmp
cmp
sub
add
and
jmp
push
out
add
cmp
or
inc
xchg
add
sub
push
lcall
sti
fwait
sub
add
jo
repnz
push
testb
add
add
add
add
sub
or
in
je
mov
and
jne
add
mov
testl
sub
mov
or
enter
push
faddl
fs
mov
adc
je
mov
fsubs
fists
stc
lds
or
cmp
push
mov
imul
xchg
mov
rorb
aas
or
adc
mov
jg
and
test
push
cli
cmp
add
push
out
sbb
jecxz
inc
jecxz
inc
jae
xchg
mov
fists
into
dec
stos
sub
mov
shl
stos
mov
or
jbe
lea
je
or
mov
push
in
push
fists
cmp
outsb
call
mov
push
add
push
jno
hlt
imulb
add
pop
stos
sub
pop
pop
and
fldt
mov
add
ret
cmpsl
iret
aad
adc
adc
sub
xor
rorl
jne
loope
mov
add
ss
jns
ja
out
es
jl
adc
outsb
imul
jb
push
adc
add
push
adc
stos
addb
xor
in
test
mulb
jo
inc
mov
mov
pop
push
add
sub
je
jae
and
imul
jecxz
dec
jb
sbb
cmp
and
pushl
scas
addr16
inc
idivb
sub
push
push
sbb
pop
in
daa
mov
jp
adcl
and
pop
lods
ficomps
aas
pop
cmp
push
testb
cvtdq2ps
call
lods
inc
adc
fiadds
add
and
xor
jmp
push
repnz
and
xor
jmp
and
push
and
xor
jmp
add
push
and
xor
jmp
scas
aas
pop
add
cwtl
add
inc
imul
bound
lock
push
mov
arpl
inc
jb
add
or
stos
push
mov
roll
or
aaa
xchg
je
out
out
cmp
xchg
xor
lock
and
iret
jp
add
push
jmp
mov
add
add
and
xchg
jmp
add
jmp
xchg
add
or
push
cli
push
cmp
mov
movsl
add
jmp
add
add
add
cmpsb
add
cmpsb
add
cmpsb
add
add
add
add
add
add
add
and
and
add
std
and
add
add
es
add
es
add
es
add
es
add
add
sti
shrl
repz
shrl
hlt
adc
hlt
shrl
hlt
mov
stos
hlt
rcl
stos
hlt
icebp
shrl
hlt
mov
stos
add
xchg
stos
hlt
fsubrs
hlt
adc
stos
hlt
cmp
stos
hlt
adc
hlt
xchg
aad
sti
ljmp
sti
and
sub
enter
sbb
sub
jle
sub
mov
leave
sub
push
aad
repz
sub
movsl
shrb
repz
add
xor
int3
xor
sbb
cmc
sbb
sbb
mov
push
add
xchg
xlat
mov
xchg
xlat
pop
sub
mov
shlb
or
fs
jecxz
decl
scas
ds
push
mov
xor
lock
stos
mov
and
push
mov
jns
xor
or
cmpsb
xor
add
testl
add
add
add
add
dec
mov
sbb
add
jmp
adc
testb
push
push
out
addr16
cli
dec
push
clc
mov
in
sbb
imul
and
or
adc
mov
and
or
or
and
test
hlt
mov
call
add
mull
test
xor
subb
and
repz
ja
push
sahf
test
adc
push
cmpsl
test
sti
mov
out
jno
imul
jle
push
and
push
push
ret
cmp
jmp
shlb
fldenv
rolb
sbb
movsl
insb
pusha
or
or
hlt
or
lock
insb
inc
mov
in
fldl
daa
add
icebp
push
in
je
xlat
in
mov
add
inc
sbb
pop
sbb
lods
in
xchg
and
pop
or
hlt
lods
shl
sub
imul
mov
add
push
dec
mov
mov
je
add
cmp
jg
lds
enter
stos
call
add
xor
cltd
pop
push
jb
movsl
inc
in
sbb
jge
insb
xor
or
es
test
mov
cmp
jmp
divl
popa
sbb
add
push
dec
jmp
xorl
inc
or
jl
inc
mov
loope
jne
testb
add
add
lcall
jne
xlat
loope
sbb
loop
jg,pt
pop
pop
jns
adc
jg
jne
adcb
icebp
stc
pop
xor
add
in
repnz
imul
call
push
addr16
dec
or
inc
into
xchg
inc
cld
pop
jo
test
fdivrp
push
push
mov
cmp
out
adc
incl
insb
sbb
jge
daa
mov
sti
mov
jl
jb
xor
pop
mov
ljmp
dec
dec
pusha
sbb
ret
cmc
xor
decl
idiv
cmp
dec
cli
inc
pop
pop
xchg
pop
xor
adc
out
mov
aad
jnp
std
out
inc
dec
cli
lock
xor
inc
roll
add
add
add
add
hlt
dec
dec
and
cmp
lret
dec
imul
subl
adc
sbb
and
sub
popf
lahf
frstor
loope
aaa
sub
sub
fstpt
push
and
in
frndint
adc
sti
mov
adc
mov
sbb
dec
lret
and
fstps
std
popl
add
scas
mov
xor
and
fiaddl
ljmp
jns
lock
call
sub
xchg
or
ja
push
sbb
bnd
mov
andb
push
cmp
mov
pop
add
mov
xchg
mov
mov
ret
imul
add
add
add
fyl2xp1
lcall
pop
xchg
and
cltd
push
shrb
std
and
push
rclb
int3
xchg
popa
mov
jle
xor
mov
lret
jnp
pop
bound
pop
xchg
or
pop
rol
jp
or
movsb
add
adc
loop
mov
pop
into
lret
inc
into
mov
add
add
add
mov
scas
divl
xchg
or
push
jg
leave
pop
pop
xor
data16
cltd
movsl
mov
cmp
jg
jnp
das
bound
push
add
out
push
pop
mov
rorb
push
sbb
inc
sub
dec
pop
push
push
bound
push
test
add
add
add
add
add
sub
into
sub
push
stc
les
xchg
jg
dec
and
int
scas
or
mov
lods
mov
jmp
pop
lods
hlt
sbb
outsl
pop
inc
int3
daa
lods
dec
mov
and
add
stos
mov
das
push
pop
rolb
lahf
xor
leave
xor
div
cmpsl
add
fstpt
stos
push
add
and
imul
int3
movsb
jae
pop
jne
rorl
lock
cmc
jns
pop
pop
bound
stos
inc
cli
movsl
add
mov
fwait
pop
mov
and
mov
orl
xor
test
aad
add
orb
insb
and
lea
add
ret
add
mov
out
movl
jmp
imul
imul
test
pop
dec
mov
in
sub
push
mov
and
jg
cltd
and
sub
push
mov
mov
cmpsl
and
in
push
inc
out
fcmovnu
sbb
inc
add
faddp
add
rcl
icebp
popa
push
je
jle,pt
shll
xchg
pop
cs
push
and
pushf
scas
leave
push
mov
jbe
scas
dec
in
daa
pop
and
and
jg
js
jmp
inc
arpl
add
pop
mov
movsb
scas
in
ret
cmp
test
inc
push
sti
adc
add
ljmp
and
je
jo
and
cld
xchg
cmp
push
push
xor
jp
test
mov
push
idivl
push
push
jns
ds
loope
call
inc
inc
pop
test
rolb
notl
mov
lods
push
push
stos
jb
mov
inc
shll
out
les
lods
cli
ljmp
mov
out
ret
push
jl
xchg
les
lahf
jle
decl
and
repz
neg
aas
jae
test
lahf
pop
orl
cmp
dec
testl
mov
add
or
adc
jo
jle
xchg
add
add
add
jae
and
std
pusha
sbb
pusha
pop
cmpsl
add
movsb
dec
jnp
pop
dec
fisttpll
cwtl
jbe
shl
inc
int
ljmp
lock
out
jne
jns
jne
dec
lods
or
cmpl
mov
cwtl
pop
mov
inc
idivl
xchg
inc
add
daa
add
lea
inc
dec
lcall
mov
mov
add
lea
jnp
lods
les
ds
je
cltd
cs
clc
es
xor
add
call
add
hlt
xor
add
cli
jmp
shll
and
jp
sub
xchg
adc
cmp
test
add
xor
fsubrp
scas
add
dec
mov
out
jno
adc
cmp
test
lret
mov
sti
mov
jns
pushl
mov
push
out
jne
or
call
mov
stc
fnstenv
mov
push
mov
mov
and
arpl
push
xor
pop
mov
je
addb
lret
fiadds
inc
mull
inc
cli
pusha
or
cli
add
aas
negl
jne
ljmp
ret
adc
pop
mov
jl
pop
add
negl
jp
adc
mov
inc
cli
add
xlat
add
sbb
push
add
std
or
mov
sub
inc
dec
jb
idivb
jl
push
lea
test
sub
xlat
inc
xorl
lcall
imul
dec
icebp
in
add
pop
sbb
loope
inc
cmp
or
jo
push
inc
f2xm1
pop
xor
add
add
add
sbb
hlt
addl
out
xor
lock
inc
lcall
inc
xor
or
mov
inc
jno
xchg
inc
cmpsb
pop
mov
xor
mov
mov
and
add
adc
inc
and
dec
inc
inc
or
xor
add
xor
cli
adc
mov
jg
mov
jmp
add
mov
mov
addr16
pop
mov
jmp
bound
cmpb
js
test
fbstp
je
out
cmc
push
xor
mov
stc
push
lret
or
je
into
cli
xor
add
out
movsb
or
je
mov
shll
test
mov
notb
and
dec
lea
lcall
cmpsb
inc
idiv
cs
push
mov
std
decl
mov
int3
jb
call
int
or
mov
loope
mov
outsl
testb
jae
or
cmc
adc
mov
jb
call
mov
outsl
push
mov
lods
in
fdivl
add
push
ljmp
xchg
inc
idiv
testl
out
repz
nop
cmp
xchg
or
test
aas
cli
jo
inc
jae
fwait
mov
sti
loop
inc
je
xchg
cmp
push
add
aaa
sti
psubq
pop
inc
adc
or
jae
into
test
xchg
leave
outsl
sub
ds
sbb
add
sub
jle
or
push
jl
mov
aaa
sbb
inc
jge
mull
cmpsl
stos
add
aam
dec
adc
add
xor
scas
cmpsl
mov
pop
pop
cmp
daa
add
out
lods
hlt
add
or
sbb
pop
popa
fs
fs
ss
pop
pop
push
aad
jle
inc
ret
or
jnp
hlt
or
cmp
pop
inc
inc
mov
xor
jl
inc
mov
mov
or
add
loopne
outsb
and
dec
cli
and
scas
adc
push
add
xchg
hlt
mov
cli
out
cmpsb
jae
push
lahf
jae
ret
xor
mov
test
mov
inc
jmp
rolb
scas
and
add
add
add
add
jno
xchg
push
mov
dec
mov
cli
cmp
sbb
lea
cli
jbe
push
adc
in
add
cmp
sti
push
loopne
stc
aaa
dec
mov
add
sub
shlb
ret
test
mov
mov
insl
or
dec
clc
mov
push
mov
add
sub
adc
leave
leave
jne
add
add
lods
les
std
jmp
mov
cmpl
fisttps
add
cmc
jne
mov
sti
cmp
call
stc
jmp
shll
xor
sub
or
xor
push
cmp
xorl
inc
add
push
lock
xchg
and
jne
mov
add
add
add
add
sbb
cli
iret
dec
stc
rcrb
sub
cli
call
filds
sarl
mov
mov
push
adc
add
mov
imull
pop
daa
popl
fs
fsubrp
push
mov
fsubrl
xor
push
in
adc
sarb
maskmovq
je
adcb
ja
xlat
std
cs
es
popa
add
ljmp
mov
jne
insl
jecxz
sub
jg
sti
std
push
cmp
add
mov
movsb
jno
inc
hlt
cmp
inc
std
daa
hlt
cmc
outsl
iret
clc
xor
stc
xor
push
jmp
hlt
das
xchg
sbb
lods
movsl
std
mov
scas
movsl
leave
cli
outsb
cmp
add
movsl
or
and
cmpsb
and
mov
das
pusha
push
or
das
xchg
pusha
repz
sbb
lods
or
addr16
fcomps
sub
cmp
xor
jl
scas
iret
mov
icebp
sahf
xor
sbb
stc
stc
sarb
test
aaa
data16
or
in
inc
rcrl
repz
add
mov
mov
add
aaa
mov
icebp
pusha
stc
xor
sti
adc
push
jno
inc
inc
mov
sbb
nop
xor
ljmp
jns
mov
pop
push
dec
data16
sub
xor
xchg
cmc
sub
loope
icebp
in
movsl
loope
in
test
add
fsubp
dec
testl
sbb
push
add
fidivl
add
xchg
jecxz
push
int
imulb
test
mov
cmp
test
stc
sbbb
add
mov
stc
sbb
xor
out
pop
jae
cmp
dec
cmp
negb
inc
sub
cmp
test
fcos
mull
idiv
jecxz
mov
aas
out
mov
aaa
cli
inc
xchg
rolb
int3
sbb
pop
adc
add
std
jle
fisttpl
inc
fistl
xchg
adc
or
mov
pop
decl
int3
inc
add
cs
test
mov
scas
aad
add
lahf
adc
pop
cmpsb
addl
lahf
dec
imul
cmpb
add
add
stos
jmp
bound
sbb
stos
cmpsb
stos
lcall
add
int3
out
divl
inc
push
cmp
fidivrl
test
test
sub
gs
mov
iret
jo
cld
fimull
pop
pop
mov
daa
or
cli
jge
out
rol
add
je
mov
out
divl
inc
fsubs
inc
push
movsb
add
in
testb
sub
mov
jmp
jle
mov
imul
clc
xor
cld
cmc
xor
push
pop
add
push
xor
call
insl
outsl
and
imul
or
jmp
add
adc
push
fs
xor
jecxz
idiv
call
sbb
je
pusha
sbb
insb
lret
sti
stc
jmp
stc
jmp
push
in
insl
jae
in
push
test
mov
stc
decl
cmpsb
je
dec
inc
insl
and
in
notb
test
or
or
cmp
pop
add
inc
testb
add
insl
xchg
mov
mov
inc
int
cwtl
inc
test
inc
mov
ds
test
in
dec
mov
push
xor
jp
add
add
dec
inc
adc
xchg
aad
jb
jle
or
sti
xor
cli
jnp
test
dec
add
outsl
mov
lock
cli
clc
cmp
add
jg
cli
aam
xchg
add
pop
adc
neg
mov
mov
pushf
add
xchg
jle
pop
mov
pop
cs
lret
lock
mov
jae
xor
pop
test
test
add
xor
or
cmpsb
ds
fs
stos
xor
sub
movsl
xor
divl
aas
inc
sbb
dec
icebp
inc
pop
mov
mov
lods
test
cmp
jge
lock
or
lret
and
push
mov
stos
and
cmpsl
add
test
xor
icebp
pop
lcall
jmp
push
movsb
xchg
es
add
add
add
outsb
push
dec
mov
nop
iret
lods
pusha
clc
add
jns
push
cmp
int3
insb
lahf
or
fptan
mov
loopne
div
pop
daa
push
mov
jmp
jg
pusha
push
outsb
jge
sbb
sbb
jge
ret
testb
cmpsl
les
jb
and
subl
sub
xor
bndstx
xchg
push
std
call
mov
movsb
call
decb
shrb
jge
icebp
pop
pop
stos
pushl
push
xlat
jbe
cmc
test
inc
xor
inc
insl
inc
mov
push
push
jecxz
cmc
call
xlat
jmp
test
dec
xor
mov
inc
jp
dec
xor
rdpmc
add
dec
pop
test
test
add
xor
sub
mov
sub
ss
std
adc
inc
lea
sub
sar
jne
test
mov
arpl
insl
pop
push
negl
add
xchg
fstpt
mov
aad
mov
enter
test
add
jl
repz
pop
mov
dec
or
lods
movsl
xchg
test
jnp
add
add
xchg
enter
in
or
add
idivl
test
xlat
jg
testb
test
mov
adc
xorl
mov
stc
sarb
xchg
pop
das
je
xchg
enter
addps
popa
mov
jge
cmc
dec
inc
cld
stos
cmpsl
mov
add
pusha
dec
stos
cmpsl
mov
mov
mov
pop
mov
pop
and
add
out
outsb
sub
out
mov
test
or
add
rorb
js
sti
hlt
notb
jle
jge
std
lcall
stos
mov
push
aaa
xor
xor
jb
mov
pop
lcall
jo
jmp
add
jge
repz
ffreep
pop
call
inc
lds
inc
cmpb
or
sub
movsl
pop
icebp
fcomi
ss
mov
mov
popa
push
xchg
jmp
lods
sar
mov
jns
xor
jmp
out
enter
mov
sbb
jae
cmpb
push
mov
cmp
hlt
sub
inc
push
mov
repnz
add
add
add
add
loope
pop
cmc
stc
xor
xchg
fiaddl
pop
call
incl
inc
sub
dec
adc
pushl
inc
loope
test
xor
test
jecxz
leave
popf
flds
sbbl
ss
decl
cmp
sub
add
mov
idiv
jbe
insl
decb
xchg
cwtl
add
push
das
add
stos
inc
cmpb
call
mov
add
scas
dec
incl
jbe
push
imull
popf
jno
and
idivl
mov
das
cli
cwtl
xor
inc
mov
pushf
xchg
testl
sbb
mov
sub
jnp
inc
ret
cmp
sbb
rcll
add
add
add
mov
pop
flds
rolb
sbb
inc
or
into
mov
jae
mov
sub
sub
xor
xor
lds
mov
jle
mov
add
push
fbstp
cli
jo
fidivl
sub
mov
repnz
jno
fucomi
ss
push
cmp
jge
iret
sbb
test
jp
sub
int
movsl
sub
shl
rolb
mov
or
cld
cmp
xor
cld
icebp
cld
sub
xor
add
daa
adc
or
daa
int
out
or
pop
pop
and
xlat
rolb
movsb
sub
out
add
jo
inc
jmp
int3
addb
in
add
add
mov
sub
push
mov
loope
mov
pusha
mov
mov
adc
mov
test
inc
inc
jmp
mov
inc
bound
and
sub
jnp
hlt
gs
std
mov
xchg
sub
and
std
sbb
divb
xor
fcomi
jmp
in
pop
xor
dec
add
fisubl
mov
dec
std
cmpb
add
fwait
sbb
or
mov
pop
mov
and
lock
xor
leave
dec
in
stc
push
adc
mov
adc
aaa
addl
xor
cmp
outsb
cmp
clc
into
stc
mov
rclb
push
add
cmc
adc
add
add
add
inc
add
lcall
lahf
or
mov
add
pop
mov
mov
mov
pop
inc
daa
psubusb
xchg
std
xchg
cmpb
pop
cmp
test
daa
cli
insb
xor
rcll
and
push
and
dec
in
sbb
insb
test
pop
je
mov
adc
negl
orl
hlt
xlat
std
xorl
std
mov
sbb
es
jecxz
gs
inc
add
in
repnz
jae
cli
clc
xor
xor
out
adc
push
add
daa
fucomi
inc
mov
cs
outsb
adc
decl
in
or
push
adcb
add
sub
add
outsb
movaps
fsubs
mov
fnstcw
arpl
dec
adc
imul
add
sub
flds
cmp
std
sti
enter
mov
cld
sub
jo
jmp
cmp
add
hlt
mov
mov
hlt
xor
mov
in
mov
jmp
sti
es
mov
out
cmp
add
hlt
mov
add
into
mov
push
in
je
jb
in
jae
adc
sbb
cs
mov
dec
icebp
dec
adc
repz
xchg
mov
je
jp
adc
mov
push
adc
push
add
cmp
push
fidivs
les
dec
decl
add
add
add
mov
xchg
addb
add
ret
dec
pop
rorl
mov
xchg
mov
dec
xor
sbb
mov
stos
lods
mov
inc
int
clc
sbb
and
jns
cmpsb
das
je
adc
fbstp
leave
add
add
adc
test
push
out
call
stos
mov
idiv
add
testb
push
and
cmp
jp
and
insb
mov
cli
mov
out
subl
loopne
and
sub
shlb
jne
daa
sbb
cli
inc
fmul
out
mov
aam
mov
push
add
nop
jecxz
xchg
aaa
fcoms
negl
add
dec
sub
stos
cld
and
jb
push
out
dec
and
jge
push
xchg
mov
xor
iret
sub
xor
clc
mov
sbb
jp
js
out
jp
jnp
shlb
add
push
push
es
aam
adc
push
dec
fsubr
out
imul
mov
xorb
and
loope
and
add
or
sub
outsb
shlb
dec
jae
xor
add
jmp
insl
jmp
lret
loopne
add
sub
dec
jmp
hlt
add
out
mov
mov
sub
xor
xor
push
loope
xorb
add
adc
mov
add
add
add
loope
pop
cmc
mov
dec
shll
call
repnz
fs
out
das
repz
or
clc
push
fidivrl
push
adc
stc
test
clc
call
mov
inc
jecxz
jmp
rcll
into
sbb
add
repz
xchg
imul
dec
push
imul
xchg
loope
addl
add
stos
jae
pop
add
std
jmp
inc
call
push
mov
ss
sahf
xor
shlb
je
loope
jmp
loope
ds
imulb
in
push
add
or
inc
sbb
or
xchg
pop
jmp
cmp
daa
lea
cmp
pop
jecxz
sbb
aaa
jge
jle
aad
add
cmpsl
push
lds
cmpsl
sahf
notl
jmp
fisttpll
jle
rcr
sub
mov
cli
add
lds
les
xchg
in
faddl
add
dec
pop
fldcw
out
or
cwtl
aaa
push
cs
sub
add
aam
je
arpl
test
shrb
sbb
out
adc
loope
std
jle
add
mov
icebp
icebp
out
ficomps
gs
and
cmpsl
shll
mov
push
neg
xchg
mov
movsl
pusha
stos
or
daa
add
or
mov
sub
insl
or
negb
shrb
push
and
mov
jmp
sub
lcall
add
add
dec
inc
idivb
mov
in
imull
xor
xchg
sub
loopne
mov
popa
jns
fwait
mov
pop
dec
dec
adc
dec
cmp
cmp
jle
out
and
mov
dec
leave
pop
lock
pop
cs
bound
dec
xchg
inc
dec
aaa
push
das
popa
cmp
adc
add
add
add
stc
cld
in
inc
inc
jmp
fistpll
lods
orb
mov
and
adc
jge
push
push
adc
pusha
mov
stc
add
lods
mov
pop
adc
mov
sub
mov
lret
xorl
jae
repnz
mov
adc
or
inc
push
jne
and
cmc
push
mov
dec
call
xor
jne
adc
mov
add
daa
outsb
or
mov
xor
dec
pushf
mov
jecxz
add
push
pop
and
jne
std
fnstenv
je
fbld
cs
lahf
outsl
mov
mov
xor
test
add
cltd
push
ja
call
neg
std
out
lcall
ret
push
xor
mov
cs
mov
les
or
out
cmpsb
adc
mov
xchg
sqrtps
cli
lock
inc
jae
pop
xchg
outsl
iret
cld
clc
cli
fmuls
out
add
pop
dec
cli
out
cmp
mov
cmp
pop
xor
divl
out
mov
rcr
mov
stc
out
divl
cmp
sar
or
and
mov
movsl
and
push
add
or
test
cmp
pop
rclb
mov
mov
push
mov
add
ss
inc
fmull
in
cmp
fdivrs
repz
xabort
daa
xchg
outsl
lods
aam
add
mov
repz
out
push
xlat
push
dec
cmp
fs
push
cs
cmc
jne
or
mov
data16
stc
pop
or
mov
in
loope
adc
scas
xor
je
adc
mov
imul
jnp
sbb
bound
or
cmp
xchg
mov
sahf
outsb
pop
adc
daa
mov
testl
add
add
inc
jg
lcall
stc
cld
clc
jle
lcall
and
dec
callw
call
add
test
sbb
std
lcall
xorl
ds
fadds
incl
cmp
jp
inc
cmpsb
dec
mov
adc
push
mov
sub
inc
out
adc
push
xor
cmpb
adc
push
push
neg
cmp
add
xor
push
xor
inc
xor
or
and
test
add
sahf
enter
in
inc
rorb
dec
test
adc
cli
je
sti
or
std
push
push
ret
hlt
mov
cli
mov
lret
add
decl
jb
xor
mov
mov
push
int
mov
mov
push
out
out
xlat
out
add
aaa
into
jns
test
xor
mov
sbb
push
addl
jge
push
in
cmp
or
pusha
pushl
outsb
inc
sbb
xor
mov
xchg
out
ret
shlb
add
add
add
add
out
test
mov
xchg
jp
inc
fnstenv
mov
xor
sub
cmpsl
mov
shll
rolb
rcl
aas
daa
add
fstp
xor
pop
aad
je
out
mov
xlat
add
je
lock
lcall
stos
and
mov
push
gs
test
add
in
pop
mov
push
xchg
jmpw
stc
pop
hlt
mov
inc
jle
mov
pushf
or
stc
jmp
hlt
or
xchg
stc
push
jae
fdivr
xchg
stc
out
jl
aam
fiaddl
jl
int3
int3
out
fisubl
shl
sti
mov
stc
scas
add
fwait
mov
pop
outsl
mov
xchg
out
fisubl
test
sti
add
pop
mov
pop
xchg
gs
std
mov
cld
ljmp
mov
add
pop
sub
cmp
add
iret
xor
call
loope
add
pop
jmp
fistpll
add
or
add
mov
add
call
int3
in
add
mov
add
ret
add
std
shlb
je
movsl
cmp
dec
testb
stc
mov
lock
inc
inc
lret
mov
and
inc
lret
ret
dec
sbb
scas
xchg
loop
xchg
dec
ret
aad
dec
outsb
mov
push
add
mov
jl
fdiv
or
andb
dec
ret
ret
scas
cli
lret
ret
jmp
inc
jns
dec
xor
ret
std
repnz
ljmp
jl
test
in
stos
nop
sbb
mov
add
pop
cld
jb
call
mov
jo
push
imul
leave
cld
movsl
adc
sbb
push
sbb
mov
add
add
add
sub
in
sbb
in
xor
in
sub
in
pop
pop
inc
cmpsb
cmp
idivl
mov
cld
mov
xchg
fdivs
aam
add
dec
out
pusha
dec
out
pop
repz
push
sub
lret
hlt
jno
add
sub
and
fidivl
inc
or
add
addr16
dec
fisubl
xor
adc
hlt
xor
sub
sbb
pop
mov
xor
fisttpll
push
fdivr
inc
icebp
je
jmp
pop
aad
movsb
cld
lods
xchg
jmp
leave
adc
test
jae
inc
sarl
adc
stos
jg
jb
sarb
lods
inc
enter
hlt
xor
call
pop
cmpsl
jmp
push
sbb
ja
xchg
mov
mov
mov
jmp
adc
popf
notb
mov
or
insl
ja
inc
mov
mov
stos
mov
incl
adc
mov
mov
or
mov
mov
test
idiv
movsl
inc
outsl
sbb
lea
or
push
jl
push
adc
pop
add
cmp
cli
mov
add
ss
push
les
adc
cmp
jb
xchg
out
lret
orb
xchg
bsf
cld
push
dec
cmp
push
add
or
xchg
call
jl
in
xchg
xor
outsb
mov
or
imul
add
pop
push
jmp
push
jg
mov
jp
or
fdiv
call
sub
pusha
lret
sbb
ficoml
mov
sbb
lcall
pop
adc
cmp
dec
in
lods
cmpsl
cwtl
bndstx
cmpb
and
rcr
idivb
fistpll
add
add
add
jb
add
mov
sub
pop
jg
fstps
jns
ds
adc
or
dec
sbb
shll
adc
insb
add
adc
outsl
fs
mov
fsubrs
clc
cmpsl
add
sub
test
fs
into
mov
sub
lods
inc
or
fiaddl
mov
in
jae
jns
hlt
push
xor
out
push
bound
js
in
test
aad
push
in
push
dec
cmp
jb
scas
clc
push
cmc
ss
push
clc
push
jb
sub
je
mov
or
xchg
ficoml
add
cmp
adc
push
add
dec
push
add
dec
call
adcl
cmp
mov
divb
inc
je
add
jns
push
in
jge
push
pop
andl
xlat
jns
add
add
cmp
push
in
xchg
fmull
mov
inc
je
inc
test
mov
int3
jge
dec
mov
push
int3
or
testl
add
mov
mov
push
push
aam
jle
call
cmp
std
xchg
loope
dec
fldt
add
mov
xor
jae
adc
pop
shll
xor
jbe
jmp
mov
div
cmp
test
ljmp
out
fdivr
ljmp
std
push
pop
les
cwtl
outsb
dec
arpl
xor
test
pop
mov
hlt
sub
add
cwtl
call
aam
insb
or
jno
out
sarb
enter
shll
cwtl
cmp
xchg
cld
shll
hlt
sbb
shrl
mov
insb
ret
sti
add
lret
rep
cs
add
xor
inc
inc
cmpsb
sub
clc
movsl
rorb
xor
fcomp
sarb
bsr
jecxz
dec
jnp
mov
testb
add
out
repnz
add
iret
ret
pop
sub
lret
test
cld
lock
psubsw
add
mov
es
out
sbb
aad
adcb
dec
add
pushf
sarl
jmp
repz
dec
jne
sbb
inc
and
inc
cmp
push
repnz
stc
push
and
lds
and
int3
jmp
lds
jb
sub
xchg
sub
add
call
in
add
fnstsw
sarb
stc
into
popf
shll
incl
stos
roll
or
sub
and
call
pop
pand
add
dec
push
dec
call
aad
xchg
push
inc
sbb
and
sub
add
inc
or
mov
and
icebp
test
sub
mov
test
xor
shl
adc
cltd
lea
jg
pop
add
xlat
inc
add
xor
incl
stc
aaa
push
fnstsw
out
fidivrl
add
repz
add
std
push
fstps
int3
insb
adc
insb
pop
add
xor
neg
xchg
pop
divl
add
sti
push
cmp
minps
scas
cli
loop
mov
add
inc
lock
dec
or
mov
jmp
pop
mov
pop
xor
jle
sbb
and
lahf
pushl
or
out
js
xor
cmp
cmp
outsb
mov
cmp
push
clc
ljmp
jg
cmp
add
jp
or
iret
loopne
in
aas
arpl
inc
cmp
mov
cli
cmpsl
fmulp
jp
push
into
add
lret
push
add
adc
movsl
push
add
test
fisubrl
ljmp
add
ljmp
sub
add
loop
stos
hlt
mov
sbb
cli
mov
add
push
mov
cld
mov
int
push
add
sub
nop
xor
arpl
hlt
mov
repz
mov
mov
gs
add
xor
push
mov
lods
in
aaa
idiv
mov
xor
mov
int
hlt
xchg
idiv
mov
cmc
decl
add
xchg
stc
add
jge
add
mov
add
idiv
or
sub
add
dec
push
stc
scas
lea
xchg
mov
dec
test
sbb
imulb
cmp
das
icebp
stc
addr16
add
fstl
fidivs
or
xor
incl
sub
inc
push
xor
aas
notl
cmp
stos
sahf
cmp
ret
sub
inc
adc
cld
mov
add
add
add
jnp
adc
jl
fcmovnbe
aam
mov
sahf
flds
mov
pop
packsswb
jmp
packsswb
leave
add
pop
fwait
jl
jl
insb
scas
insb
xchg
flds
xor
xlat
in
orb
sub
adc
inc
fucomi
adc
hlt
test
or
sub
xchg
or
add
add
add
add
inc
lock
add
out
adc
into
mov
adc
jp
sub
test
mov
test
aaa
cmp
sar
aas
or
aas
xor
outsl
add
mov
jecxz
scas
lock
add
imul
or
out
outsb
pop
mov
jns
mov
jns
cmp
mov
or
je
jne
or
jno
pop
cmp
mov
cmp
repnz
dec
pop
pop
fiaddl
test
je
cmp
shrl
hlt
lds
sub
stc
stos
jne
stc
mov
adc
lcall
idiv
divb
push
add
dec
jnp
hlt
inc
aam
lea
jb
test
sti
cmpb
pushl
fcomps
mov
mov
insl
add
test
and
adc
and
cwtl
lock
es
mov
push
dec
cmp
jne
xor
mov
adc
xchg
dec
imul
add
add
add
cmp
fldenv
push
addb
mov
jecxz
sbb
stc
push
lahf
inc
dec
fcoms
xor
adc
ljmp
orl
adc
repnz
pop
imull
aaa
jns
das
aaa
fdivrp
gs
dec
mov
les
cli
mov
push
sbb
out
incl
mov
add
mov
sub
out
push
ja
jmp
daa
lods
fucomp
cmp
mov
fsubrl
orl
jle
push
sahf
neg
std
test
jg
push
jge
pop
daa
add
call
out
aas
mull
mov
movsb
push
or
hlt
cmp
loop
xor
outsb
cmp
add
and
test
fsubrl
add
add
add
jo
enter
xchg
or
hlt
ss
sbb
les
add
xor
ret
enter
outsl
cmp
roll
push
adc
jo
out
insl
testl
push
cmp
and
sub
in
repz
xor
lds
jne
push
out
pusha
je
inc
pusha
xchg
sbb
or
add
hlt
inc
frstor
xchg
sbb
call
mov
adc
int
stc
jmp
repz
test
jae
xor
arpl
flds
lret
xlat
lret
push
mov
xchg
mov
or
hlt
lret
mov
adc
add
lret
scas
lret
addb
pop
xor
stc
push
sbb
jae
aas
xor
and
push
pusha
push
push
add
xor
cmc
inc
xor
adcl
enter
or
xor
faddp
in
or
xor
jmp
sar
xor
incl
out
dec
xor
or
into
xor
cmp
mov
mov
cmp
add
sahf
mov
sub
jo
ja
and
jo
jno
cmp
jecxz
imul
mov
cli
push
mov
adcb
out
add
das
add
sub
or
push
push
add
sbb
sub
add
sti
call
xchg
stc
stc
fcoms
mov
stos
incl
rclb
mov
push
stc
test
mov
mov
sar
incl
lods
mov
inc
je
add
in
or
xor
dec
mov
xor
xchg
cmp
add
mov
decb
out
ljmp
idiv
cs
jmp
add
mov
push
call
add
ret
addr16
xor
fdivr
xor
test
add
cs
xor
or
cld
sub
sub
sti
pop
test
add
ret
pop
adc
add
scas
pop
repz
inc
pop
xchg
add
cmp
jmp
test
add
add
add
add
cmp
cmp
int3
add
out
in
xor
pusha
sbb
ja
hlt
xor
lock
shl
out
xchg
scas
call
pop
dec
cmp
jmp
loopne
stc
subb
add
jge
call
test
insw
or
test
out
repz
imul
add
add
lcall
add
cmp
cmp
add
pop
test
add
fistps
add
dec
loope,pn
push
add
lea
testl
push
sub
add
ret
adc
push
sub
add
ret
and
sub
add
or
cmpb
insb
adc
outsb
xor
fisubrs
dec
add
jne
lods
jae
or
or
lods
popf
lock
nop
repnz
stc
sahf
lahf
add
test
add
not
insb
or
add
mul
push
jae
add
div
js
jae
add
testl
push
or
add
testl
or
push
xchg
inc
jg
stc
add
add
jp
js
jl
mov
or
sti
stc
andb
enter
mov
or
jae
daa
or
imull
dec
mov
std
jle
je
jl
xor
fidivrs
ljmp
mov
in
imull
imul
add
add
add
add
out
aas
fs
and
out
mov
add
xor
fadds
mov
inc
out
dec
scas
das
fs
hlt
xor
xorl
mov
add
cmp
mov
cmp
cli
xor
mov
mov
insb
stos
mov
stc
pop
pop
xor
call
mov
call
add
add
add
icebp
addl
stc
out
xor
adc
mov
adc
mov
or
add
jne
lock
sub
add
hlt
xor
jo
xor
jbe
sti
or
or
hlt
inc
push
push
cld
das
or
hlt
mov
shr
stc
push
mov
stc
xchg
dec
cmp
in
mov
add
notl
xor
mov
jmp
cmc
lcall
scas
ja
daa
js
std
cmp
stc
jmp
mov
mov
mov
testl
sti
mov
add
sub
stc
dec
int3
pop
psrld
dec
je
push
mov
cmp
bt
push
mov
add
mov
std
cmp
cmpl
add
idiv
add
push
push
negl
ret
push
push
mov
dec
call
je
or
sarl
stc
mov
std
push
bound
xchg
cld
test
xor
pusha
push
add
test
idiv
jle
fsincos
inc
ss
call
clc
dec
mov
sti
add
cmp
mov
sbb
xor
dec
mov
or
int
jmp
push
hlt
sti
loopne
mov
or
ljmp
test
arpl
xor
mov
les
data16
xor
mov
stc
mov
aas
mov
stc
jle
addr16
aas
mov
or
add
adc
mov
cmpsb
add
or
ds
filds
ljmp
sbb
mov
out
out
mov
add
xor
push
sub
gs
mov
cli
sahf
iret
cmp
jge
dec
sub
lods
dec
or
stc
jmp
lahf
mov
add
add
add
add
sar
push
hlt
inc
sbb
sar
outsl
xor
call
jns
sti
es
jo
fs
mov
push
cli
xor
jmp
aas
mov
add
test
call
test
jge
add
xchg
call
je
popa
add
mov
add
mov
xor
lock
add
add
add
add
idiv
and
std
xchg
call
cmpsl
lods
call
enter
sahf
insb
notl
inc
test
out
xor
testl
inc
lods
jge
adc
testl
ror
cmc
push
mov
int3
jge
adc
testl
testl
add
add
add
testl
stc
lock
ljmp
stc
fadds
or
xchg
sti
enter
ret
push
sbbb
dec
stc
bound
stc
mov
push
repnz
daa
inc
mov
call
je
adc
adc
in
sti
pusha
or
pop
repnz
stc
jl
fsincos
inc
sub
add
add
add
idivb
jo
push
inc
repz
and
sub
xor
cmc
pushl
out
jo
idiv
mov
ss
out
imul
cmc
fidivs
add
xor
cmc
push
xor
add
mov
insb
cmc
sahf
and
add
daa
arpl
je
dec
cmc
jle
cwtl
mov
add
add
add
cmc
outsb
add
inc
mov
cmc
ss
aaa
testl
add
and
add
lods
popa
imulb
mov
test
mov
xchg
jno
out
sti
jns
int
sub
xchg
rolb
mov
and
fldenv
mov
sti
mov
jo
loop
loop
add
sub
icebp
xchg
ja
add
aaa
mov
mov
add
sar
imul
jmp
pop
inc
stc
aas
xor
stc
jmp
dec
mov
add
push
enter
ret
cmc
ljmp
lret
mov
cmp
inc
decb
sub
mov
and
cmc
incl
test
test
std
cltd
ret
data16
push
in
ja
push
ljmp
jle
idiv
inc
pop
push
push
add
out
hlt
sbb
jnp
out
lods
icebp
cmp
mov
cmp
out
push
pop
mov
std
sub
mov
js
mov
mov
mov
in
stc
test
in
sub
out
stc
add
jp
ja
xor
test
out
test
lea
aaa
repz
inc
push
shrl
mov
mov
in
fcomip
out
jae
push
jl
xchg
inc
out
stc
jl
loope
mov
add
dec
and
xor
jb
lock
pusha
push
mov
pop
push
out
jge
xchg
xor
dec
mov
add
add
test
add
imull
out
mov
mov
icebp
fmul
lcall
je
int3
icebp
out
or
std
nop
das
xor
mov
fwait
out
fidivs
icebp
into
xor
add
cmpsl
je
mov
roll
pushf
mov
cli
je
insb
icebp
mov
add
add
add
add
mov
xchg
inc
pop
fcoml
in
add
addr16
inc
mov
stc
push
shrb
pop
dec
mov
hlt
daa
mov
stc
loope
cmp
fbstp
sti
fiadds
sub
sbb
fadd
out
call
push
and
insb
mov
outsl
push
xchg
sar
xchg
xor
xor
test
mov
jbe
mov
insb
xchg
mov
sbb
mov
mov
jmp
push
inc
mov
in
jmp
lods
les
fucomi
insl
sub
movsb
std
loope
je
add
std
icebp
rolb
xchg
bnd
popf
subl
add
add
add
mov
std
mov
imul
ret
lods
loopne
ret
xor
cmc
call
ret
fs
mov
jae
testl
push
shl
lcall
lea
in
push
pop
fsubrl
xor
stc
divl
stc
mov
dec
or
cmp
xchg
jl
pop
out
stc
add
enter
push
scas
fcompl
mov
std
xchg
lock
add
enter
and
ljmp
enter
enter
mov
daa
clc
push
out
pushf
ljmp
enter
adc
mov
hlt
mov
or
ret
jl
pop
push
out
stos
mov
outsb
mov
mov
dec
mov
out
jp
cmp
std
and
xchg
xchg
loope
cmpsb
add
sub
add
cmpsb
add
daa
cmpsb
add
daa
cmpsb
add
and
xor
or
dec
add
ret
ja
call
ficompl
into
mov
insl
inc
push
lcall
xor
add
xor
add
add
add
inc
add
push
inc
cltd
add
lods
stos
stc
push
inc
jge
xchg
xchg
data16
xchg
dec
mov
loopne
stc
mov
ret
mov
inc
int3
and
es
ds
aas
stos
stc
bound
shrb
xor
decb
sub
and
adc
pop
jno
xchg
sbb
xor
fbstp
xchg
add
xchg
dec
sbb
pop
push
push
test
in
dec
stos
pop
das
ds
add
int3
int3
std
add
ljmp
cmp
add
push
subl
cli
push
pop
gs
add
test
int3
or
int3
int3
xchg
pushf
dec
mov
daa
inc
or
adc
add
add
add
add
jo
inc
fidivl
mov
add
and
xor
pop
cmp
cmp
mov
int3
mov
int3
int3
mov
int3
int3
notl
in
jl
jns
out
and
hlt
fcomip
mov
mov
clc
data16
les
mov
mov
or
repz
outsb
out
and
inc
sub
add
xchg
inc
jge
subb
lds
xor
shl
dec
pop
xor
cmc
addr16
mov
add
negl
pop
cld
negl
add
mov
stc
dec
sbb
inc
or
dec
push
iret
pop
out
rolb
xorl
lret
iret
dec
xchg
shll
xchg
call
ljmp
mov
mov
in
add
jo
cmp
aas
ret
dec
ljmp
out
divl
and
inc
cmpsl
add
jl
mov
jl
mov
jl
aas
sarl
pop
aaa
fildl
mov
test
pop
aas
shll
jecxz
inc
out
push
outsb
int3
jp
or
out
add
loop
outsb
inc
adc
mov
sarb
adc
inc
cmp
add
add
add
sbb
add
push
adc
push
adc
adc
xchg
push
push
push
xor
gs
jo
cwtl
stc
fcompl
dec
ss
inc
dec
stos
stc
jo
test
popf
jmp
mov
aaa
add
hlt
xor
scas
push
push
jb
or
xchg
test
jae
mov
out
cmp
push
add
adc
jmp
push
in
xchg
mov
sbb
jne
jmp
in
push
clc
sub
or
mov
test
inc
mov
aaa
notl
pop
das
add
mov
jnp
bound
enter
add
test
lcall
add
xor
add
jecxz
jge
shrl
add
mov
dec
es
incb
sub
or
out
inc
addl
adc
mov
lahf
aas
cmpb
fs
jl
pop
and
jae
ret
or
push
jb
outsl
daa
nop
test
adc
cwtl
dec
dec
and
dec
shl
std
push
ljmp
push
or
mov
add
push
mov
in
arpl
or
cwtl
std
dec
ret
insb
test
rolb
jmp
das
cmp
addl
dec
push
aaa
xor
repz
call
add
data16
and
jp
adc
inc
divl
inc
fldt
add
lcall
push
aaa
xor
sti
push
repz
adc
mov
outsb
and
out
sbb
inc
testl
jmp
and
jnp
cmp
out
mov
and
mov
pushf
negl
inc
jnp
mov
mov
movsb
out
sub
cmc
xchg
xor
add
mov
mov
jb
cmp
sti
xor
cs
stos
add
lock
mov
dec
stc
inc
scas
js
fistps
orl
lods
dec
in
cmp
dec
sbbl
xor
loopne
test
std
std
sub
bound
inc
daa
roll
jb
ja
or
fnstcw
mov
lods
push
icebp
lods
add
mov
lahf
xchg
push
bound
popf
jge
add
xor
mov
jge
sbb
scas
add
xor
push
xor
hlt
and
test
lea
cld
mov
pop
add
jnp
xor
sbb
pop
lea
or
aam
jns
push
pop
pop
cmpsl
stc
mov
movsb
jle
sbbb
inc
push
std
not
int
or
mov
sub
add
sub
leave
and
test
sub
inc
notl
and
and
sub
xchg
js
fistl
aas
cmp
pop
or
push
insb
push
sub
fsubr
add
jl
sub
xor
push
mov
mov
xchg
mov
lds
xchg
std
push
dec
dec
jge
and
xchg
cli
add
fstpl
pop
or
cmp
xor
mov
insb
into
add
lock
rcrl
add
cmp
lret
loop
mov
pop
inc
pushl
outsb
adc
mov
mov
fdivs
out
add
outsb
or
push
cmp
mov
mov
jmp
cmp
add
add
add
add
lcall
push
and
mov
je
iret
mov
je
push
push
adc
jecxz
mov
xchg
cmpl
loope
movsl
push
aam
jae
jp,pt
push
add
call
jb
hlt
test
jecxz
insb
push
xor
sahf
sarb
out
jp
and
mov
add
mov
jmp
pusha
hlt
pop
out
es
test
pop
fs
push
mov
and
test
sub
add
xor
insl
lods
xor
jmp
das
adc
cmp
repz
push
stos
stc
add
jae
imul
repnz
ja
sub
add
add
add
add
addl
clc
xor
dec
aas
push
xchg
stc
inc
and
cld
or
into
inc
jge
rcll
add
mov
cmp
outsb
imul
insb
add
mov
repz
cli
add
pop
sti
int
sub
call
int
or
add
pop
aas
xchg
idiv
dec
into
les
negl
aam
xor
lds
push
push
push
cmp
enter
lcall
mov
std
incl
mov
in
sub
jnp
push
inc
or
jecxz
add
push
cmc
in
leave
dec
pop
jl
movsb
fistl
inc
je
je
add
mov
test
adc
add
divl
call
aas
jb
ret
sbb
add
xor
sbb
lock
xchg
push
jo
xchg
mov
sub
mov
push
mov
xor
les
fs
jp
jp
ss
imul
insl
movsb
rcr
jp
pop
add
xor
inc
jp
sbb
jecxz
cwtl
xor
das
out
ljmp
pop
jp
into
add
in
mov
out
daa
cli
incl
jge
imul
stc
imul
inc
mov
aas
jge
inc
mov
stc
ss
push
rorb
lods
repnz
inc
stos
dec
mov
imul
add
mov
mov
shlb
test
addr16
iret
cmp
add
gs
xor
bound
or
add
inc
call
cli
dec
shl
inc
jae
ja
add
or
das
cmp
loopne
mov
cmp
pop
xchg
sahf
pop
push
lea
xor
int3
int3
or
in
push
andb
inc
mov
add
add
add
add
cmp
cmc
jae
adc
add
jge
call
mov
xorl
incb
push
xor
or
xor
add
pop
test
xor
add
sti
jno
stos
aas
dec
push
in
push
mov
and
mov
cmp
mov
movsb
sti
xor
aas
push
and
mov
inc
dec
sbb
add
adc
add
jl
jo
mov
cmpsb
xchg
add
and
fiadds
jl
imul
in
test
jne
push
int3
jg
push
xchg
jno
fidivl
into
push
pushl
xchg
mov
adc
inc
insb
push
inc
inc
jo
pop
movsb
adc
xchg
movsb
loope
std
or
pop
xchg
sti
inc
mov
imull
out
mov
inc
bnd
ljmp
out
add
das
xorl
out
jl
jp
repz
test
fsub
add
xor
push
aas
and
or
repnz
cwtl
adc
or
sub
imulb
cmpsb
add
push
cmpl
add
jp
xor
popf
push
int
jb
adcl
inc
or
adc
stos
add
jne
add
hlt
pop
push
push
fwait
outsl
cmp
mov
or
imull
lds
adc
aaa
fiadds
jnp
scas
adc
mov
test
in
filds
flds
xchg
loop
mov
add
incl
jnp
inc
push
lods
adc
je
xchg
jge
hlt
xor
movsl
pop
mov
and
add
stc
shrb
xor
jmp
int3
cmpsl
aas
dec
lea
sub
in
icebp
push
mov
in
loop
add
cmp
add
lods
xchg
leave
rorb
add
out
data16
inc
inc
mov
aam
add
pop
lods
xchg
pop
lahf
cli
sahf
outsb
lahf
stc
jmp
ret
pop
and
xchg
push
xor
mov
mov
xchg
out
lret
aaa
test
pop
xchg
sbb
inc
je
cmp
inc
sbb
cvtps2pd
push
orb
push
inc
cmp
enter
leave
mov
lock
lahf
mov
add
add
add
add
push
inc
insb
outsb
push
cmp
pop
sub
stc
push
jns
or
sar
push
fidivl
sub
insb
mov
add
sbb
adc
in
test
repz
xor
xor
xor
inc
arpl
inc
pop
jl
test
pop
xor
neg
xor
mov
pop
cmpsl
sbb
add
jecxz
fs
ss
jmp
movsl
sbbl
inc
cmp
add
outsb
cmp
xchg
xor
jb
out
lcall
pop
inc
jmp
jo
pop
lcall
dec
lcall
cmp
mov
and
imul
scas
adc
xchg
out
aas
add
add
sbb
mov
mov
fimuls
dec
mov
es
cmp
bound
icebp
xchg
inc
jne
in
inc
mov
cmp
loope
or
repz
xor
adc
jl
pop
bound
and
jo
sbb
leave
ja
je
frstor
add
add
add
add
xor
jge
imul
and
call
mov
bound
jmp
out
aas
pusha
pop
jl
jbe
xor
add
clc
add
movsb
test
dec
dec
jo
jnp
adc
out
mov
hlt
jp
lea
add
rorl
xchg
xor
add
test
dec
add
add
add
add
add
push
insb
mov
add
jge
xchg
movsb
push
xor
lea
sub
mov
stos
mov
cmpsl
sub
leave
int3
push
add
test
add
mov
push
mov
mov
or
mov
insb
push
jne
testl
mov
mov
mov
incl
sbb
mov
add
jge
xor
in
mov
test
mov
jl
test
testl
adc
incb
popf
adc
mov
mov
divb
xchg
xor
decl
call
sub
adc
cs
pop
xor
and
repnz
cmp
push
adcb
jb
and
jmp
add
push
sub
adc
jmp
pusha
or
add
xor
add
out
xor
jecxz
stos
pop
divl
out
ss
movb
mov
stos
xchg
das
je
add
add
outsb
in
loope
jmpw
push
mov
hlt
xor
push
inc
xchg
movsl
xchg
test
jno
adc
cmc
mov
aam
xchg
pop
das
or
and
adc
sti
daa
test
xor
bound
scas
inc
icebp
movsl
stos
xchg
dec
jle
stc
bound
adc
hlt
inc
repnz
loop
dec
fnstsw
mov
add
add
add
stc
jno
pushl
inc
add
cmc
loop
add
sub
xchg
lret
add
xor
mov
ss
add
stc
mov
daa
addl
mov
mov
adc
in
dec
push
stc
je
xor
inc
sbb
pop
and
js
cmc
popa
addb
add
clc
xor
ja
incl
addb
popa
push
fldl
push
push
xor
dec
xor
jg
add
idiv
sbb
cmp
add
jg
loope
std
xchg
cwtl
cwtl
xchg
jae
push
pop
les
std
xchg
add
testl
add
add
inc
pop
jp
inc
add
std
mov
add
les
jno
and
fdivs
push
enter
testl
test
out
cmp
dec
xor
out
pop
daa
or
inc
faddl
mov
jecxz
test
xor
call
and
ja
repz
out
pushf
outsl
mov
add
add
add
jecxz
mov
sbb
mov
or
sub
test
out
jno
cli
jl
sub
fildll
adc
xchg
out
jo
jo
sti
cmpsl
das
add
push
jge
dec
pusha
cmp
cmpsl
das
adc
jmp
fs
sub
add
icebp
fiaddl
ja
out
scas
add
pusha
adc
xchg
mov
subb
xchg
stc
call
jnp
adc
add
add
add
hlt
xchg
stc
inc
xor
ss
stc
cs
rolb
inc
gs
sub
insl
test
xor
sbb
stc
jge
in
bound
and
sub
out
ja
shl
push
jge
add
std
imul
adc
jp
lret
xchg
inc
xchg
stc
cs
add
dec
push
aas
xor
insl
je
xchg
and
addl
inc
and
leave
mov
jl
push
push
xor
sub
push
or
idiv
cmp
pop
int3
xchg
stc
mov
jg
lcall
ror
int3
or
int3
int3
jae
in
mov
cmp
add
mov
add
ret
test
xor
insl
or
testl
pop
pushl
and
add
pop
dec
sub
notl
sub
ja
jae
push
inc
and
ret
jl
adc
push
popf
cwtl
sub
jge
xchg
cmc
sbbb
stc
call
lcall
add
scas
jbe
add
jecxz
rclb
adc
pop
sbb
cmp
xor
test
out
inc
sbb
cltd
std
ljmp
inc
ja
sbb
inc
ret
pop
leave
outsb
xchg
sub
jb
add
jl
mov
inc
jl
inc
mov
ja
aaa
lock
add
lock
xlat
lock
mov
jmp
divl
es
add
loope
js
sub
dec
ret
xor
js
push
pop
xor
leave
call
jecxz
cli
mov
int3
mov
stos
clc
jno
adc
outsl
xor
add
out
insl
loope
jb
ret
enter
es
pop
xlat
call
repnz
pusha
mov
xchg
add
fptan
daa
ret
sub
cmp
add
add
add
add
loopne
xor
jmp
pop
pop
mov
bound
mov
adc
hlt
xor
jmp
push
ljmp
mov
mov
or
loopne
push
mov
loop
cltd
jmp
enter
mov
fnstsw
or
mov
cmp
dec
sub
dec
call
adc
dec
test
push
xor
rcrb
push
ret
in
daa
add
and
inc
sbb
adcl
shlb
ss
mov
push
xor
push
and
jbe
int3
imul
mov
jl
push
inc
jge
loope
hlt
adc
xor
cmovp
add
mov
or
xchg
popf
xor
adcl
insl
or
sbb
xchg
jp
add
std
jl
jle
add
lcall
sub
inc
add
push
daa
cmp
enter
jnp
test
push
aam
stos
add
push
pop
cmp
negl
in
js
repnz
repz
cmp
inc
add
xorb
cld
shl
std
push
and
sldt
add
add
add
add
cltd
test
pop
cmpsl
and
ss
jnp
repz
xchg
inc
lods
roll
scas
mov
add
scas
leave
repz
inc
ljmp
xor
or
xor
adc
or
sub
xor
jp
sub
add
js
mov
sbb
dec
stc
iret
add
mov
lret
loop
jo
cmovo
add
xor
add
cltd
pop
repnz
stos
repz
fwait
add
mov
shll
cmp
clc
je
out
idivl
xor
mov
mov
sbb
sbb
hlt
xor
fdivs
jae
sbb
or
or
icebp
cmp
test
mov
mov
icebp
pop
jp
lock
fucomp
and
add
add
add
or
xor
shl
mov
or
hlt
adc
cmp
mov
or
loope
sub
icebp
cmp
imul
sub
jmp
test
outsb
lds
clc
jmp
and
pushf
mov
adcl
add
add
add
add
sub
sbb
loop
or
pop
subb
js
loopne
or
int
adc
or
adc
add
add
jp
add
push
cmp
xchg
inc
in
call
gs
and
notl
out
sbb
jg
lret
out
push
add
mov
mov
jl
xchg
adc
sbb
fdiv
call
jb
inc
fisttps
sti
std
jo
std
in
sbb
and
jnp
jnp
lcall
clc
aas
clc
mov
jbe
and
jge,pt
xorb
fwait
movsl
jge
cmp
insb
iret
sbb
xchg
out
push
mov
adc
mov
sub
pop
jb
jmp
sub
lods
outsl
fldl
jl
cwtl
pop
xor
sub
out
jp
into
jp
sub
test
mov
data16
add
hlt
je
testl
pop
cmc
mov
arpl
jp
mov
stos
add
mov
shr
jnp
push
add
out
js
push
outsb
rolb
loope
inc
or
xor
add
hlt
xor
ljmp
dec
loop
jno
lcall
mov
loop
jo
sub
out
lock
jmp
lock
xor
shll
sub
aaa
xor
insl
xchg
cmp
jmp
movb
cmp
test
push
and
xor
jo
lock
orl
hlt
xchg
add
ds
mov
mov
mov
mov
sbb
xor
mov
jle
xor
push
mov
cmp
add
add
add
scas
xor
add
xor
neg
sbb
add
xor
test
xor
add
jno
inc
mov
mov
shlb
imul
xor
je
mov
adc
cmp
test
sub
mov
push
sbb
mov
jb
xor
jl
mov
lret
add
xchg
dec
in
lret
lods
xor
push
mov
rorl
jae
call
insb
dec
mov
push
es
adc
cltd
mov
add
insb
push
mov
rcrb
push
inc
xchg
roll
subl
pushl
push
inc
add
cltd
std
shl
std
push
cli
inc
adc
xor
add
xor
add
xor
test
icebp
add
aas
daa
mov
loop
add
cmpsl
mov
lods
cmpsl
je
fwait
loop
clc
ljmp
sbb
push
aaa
dec
lahf
jecxz
xor
push
ret
mov
test
sub
shlb
pop
push
scas
dec
test
cld
out
mov
jno
mov
out
divl
sbb
jp
xchg
mov
mov
add
loope
push
pop
fstp
add
mov
mov
sub
shlb
in
insl
fcomip
out
jg
jmp
scas
push
subl
xor
test
hlt
outsl
inc
test
scas
xor
jmp
in
adc
hlt
aaa
test
xor
push
test
fidivs
or
hlt
push
shrb
out
xor
add
add
add
add
repz
push
xchg
scas
sarb
not
insb
xor
adc
lock
arpl
xchg
adc
mov
ret
aas
inc
xchg
out
sbbl
add
cmp
jb
mov
add
inc
sbb
clc
push
ljmp
loop
add
mov
hlt
mov
sti
add
fisubrs
dec
clc
cltd
mov
jecxz
and
cmp
ficomps
mov
add
ltr
je
scas
notb
std
xchg
xchg
notl
inc
cld
mull
pslld
mov
int
push
jge
out
add
hlt
out
jge
out
fisttpl
inc
mov
mov
add
inc
mov
test
sub
dec
pop
dec
mov
xchg
mov
aas
xor
mov
lcall
mov
test
orb
jle
hlt
sar
std
push
pusha
push
or
mov
jl
xor
adc
xor
jne
jg
sarb
movsb
stc
mov
or
js
outsb
add
imul
jb
sub
xor
add
lods
es
movaps
mov
divl
out
jp
out
ret
out
js
out
mov
inc
fcoms
xchg
add
xor
jecxz
mov
or
xor
adc
dec
add
in
loopne
imull
fimuls
outsl
ja
out
add
xor
jmp
jmp
sbb
hlt
xor
out
or
sub
jmp
call
pop
add
repz
hlt
xchg
xchg
loop
xor
testl
add
jge
fidivrs
add
jmp
ljmp
ja
or
jns
and
std
jp
mov
sbb
dec
mov
push
jle
leave
clc
mov
in
jno
std
push
and
and
or
jecxz
cltd
xor
out
dec
int
or
add
scas
out
pushl
jne
dec
jae
adc
xor
jne
jne
add
das
add
cli
sbb
add
push
mov
add
scas
cmp
xchg
stos
icebp
inc
add
sbb
add
je
add
sti
call
inc
imul
mov
shl
mov
and
xor
test
sub
outsl
incb
lcall
ret
fdivs
insl
cmp
lret
cmpsb
aam
dec
cmpsb
std
pushl
mov
xor
sub
mov
incl
add
mov
clc
or
add
xchg
jl
cmp
shl
push
add
mov
jb
push
les
outsl
les
inc
xchg
jle
shl
ret
push
divl
out
cmp
outsb
dec
xor
lods
iret
arpl
mov
mov
add
arpl
mov
cmc
mov
add
dec
sub
fldl
imull
insb
and
xor
and
fidivrl
es
inc
in
mov
xchg
movsl
test
das
pop
test
sub
mov
push
jb
add
xor
js
xchg
shlb
fiaddl
mov
jge
sti
js
in
jnp
jmp
add
add
add
arpl
fisttpll
outsb
push
js
out
dec
imull
sti
xor
jmp
hlt
xor
and
jno
ljmp
jge
lret
jae
sti
jmp
hlt
xor
lahf
cli
jns
dec
imul
cmp
shl
fdivp
ljmp
test
or
lds
xchg
xor
daa
bnd
cmp
pop
inc
mov
add
icebp
pop
jb
std
or
mov
xor
ds
popa
test
add
aad
psraw
dec
lock
pushl
mov
adcl
inc
push
outsb
xor
add
lods
aas
dec
mov
dec
lea
dec
push
shll
incl
fisubrs
jo
mov
call
mov
stos
cmp
or
or
testl
testl
sub
je
push
push
inc
push
aas
mov
push
xchg
popf
test
push
stc
jle
iret
out
subb
push
mov
xor
icebp
jl
stos
std
or
or
add
mov
and
sub
aas
jge
jg
xlat
aas
mov
push
ss
test
mov
ret
insb
xchg
add
pop
int3
jo
adc
scas
add
mov
jp
xor
das
les
cmp
xor
mov
xchg
out
divl
data16
jnp
fidivrl
sub
add
mov
add
add
add
add
and
dec
dec
xor
mov
cwtl
xor
cmp
jb
push
rcrl
dec
js
jb
jo
js
test
stos
mov
out
xchg
stos
pushf
lods
push
mov
adc
or
insl
mov
add
into
xchg
jno
and
hlt
xor
push
jne
fidivs
call
mov
imul
bound
mov
loopne
cmp
push
sub
sarb
pop
sub
fldenv
pusha
test
sbb
adc
add
hlt
sub
stos
ja
std
imul
repz
jbe
inc
hlt
xor
pop
jbe
psadbw
add
mov
ss
daa
inc
in
fldcw
add
dec
aas
cld
add
mov
fadds
fidivs
pop
mov
mov
lret
loopne
out
fildl
mov
add
scas
cmp
pop
out
cmp
idivb
rorb
sti
mov
ret
inc
out
test
xchg
jae
lods
jne
pop
xor
cwtl
testl
testb
mov
inc
sbb
dec
clc
add
mov
add
or
xor
in
scas
stos
stc
fdivrs
fnstcw
ret
inc
inc
in
xchg
ljmp
std
mov
sbb
lret
std
jl
jl
jae
add
mov
ds
jle
cmp
jge
mov
jb
adc
hlt
inc
and
add
pushf
scas
stc
je
adc
jae
pop
add
sub
std
push
push
orl
divl
fs
arpl
jae
out
out
sub
xchg
push
cmp
shlb
in
xchg
push
sbb
lcall
fidivs
out
mov
scas
daa
add
mov
test
and
jnp
es
cltd
addr16
out
mov
loope
inc
xlat
imul
divl
out
mov
aaa
jg
jecxz
push
shrl
jg
fnsave
out
xor
jo
aas
scas
cmpsl
add
jge
jp
in
or
test
xor
out
incl
jmp
hlt
xor
push
jne
mov
icebp
jae
jmp
mov
xor
out
pusha
jmp
test
nop
xchg
and
lods
pop
and
add
xor
jmp
les
icebp
roll
cmp
mov
lock
sub
xor
testl
xchg
sar
lcall
push
add
cltd
shl
jnp
add
push
icebp
push
mov
add
add
add
add
std
int
xchg
and
add
xchg
lea
inc
sub
or
clc
rorb
out
cmp
inc
cld
add
cs
mov
ret
inc
cld
aad
lret
loopne
xor
push
add
cs
loopne
xor
lds
testb
testl
cli
mov
add
fadd
xor
aaa
mov
decl
clc
cmpb
std
jl
ret
out
adc
aam
icebp
mov
mov
xchg
jle
leave
mov
movsb
daa
jne
fwait
iret
fidivrs
dec
fwait
adc
dec
jne
jl
cmp
xor
or
xchg
mov
jb
pop
add
add
add
add
push
push
xor
notl
pop
cli
xor
add
mov
xchg
push
mov
out
in
out
mov
loop
xor
out
sub
sub
jno
dec
cmp
je
fwait
out
cmpsl
lods
int
jno
cmp
iret
cmp
jne
xor
cmpsl
loop
xchg
pop
out
cmpsb
mov
jb
repnz
lcall
add
mov
ljmp
xor
rcrb
mov
mov
int
aas
gs
add
repnz
add
hlt
push
ss
hlt
xor
outsb
das
inc
add
arpl
jbe
xor
or
xor
xchg
cmp
or
cmp
test
hlt
push
or
hlt
xor
jg
mov
cmp
inc
add
hlt
mov
mov
pop
insl
rcrb
xchg
and
hlt
xor
push
insb
add
js
add
hlt
cmp
bound
jb
add
push
clc
add
jg
dec
push
decl
lret
loopne
mov
aas
inc
pop
enter
cmp
add
stos
adc
add
je
adc
mov
xor
shrl
sub
ret
gs
addl
add
insl
scas
leave
inc
div
cmp
and
sbb
mov
add
popf
inc
cld
adc
sub
or
ss
push
push
std
int3
push
shll
outsb
dec
lods
dec
adc
jns
jbe
mov
mov
loope,pn
hlt
in
popf
sub
andb
ljmp
out
loopne
aam
sub
cmc
mov
pop
cmp
jle
sarl
idivl
rcrl
js
ret
sbb
enter
test
fcomip
mov
sub
inc
stos
sbb
mov
mov
cld
testl
add
add
add
add
cmpsb
in
cmp
mov
cmp
in
cmpsb
movsb
jl
push
loop
cmp
lahf
imul
out
inc
push
outsb
cmp
mov
sti
jns
cmp
jno
fwait
movsl
sub
or
cmp
repz
fistpll
ljmp
jae
pop
out
mov
xor
rcrb
cmp
jne
add
mov
les
mov
bound
xchg
sbb
jnp
push
dec
inc
add
bound
cmp
test
sti
push
pop
jmp
xor
test
inc
jge
dec
mov
and
testb
hlt
mov
xor
pop
insl
lret
jnp
sti
jmp
hlt
xor
aaa
icebp
imul
mov
shl
add
ljmp
add
add
add
add
xchg
call
stos
pop
dec
or
push
pushl
inc
add
mov
sbb
hlt
xor
xor
add
daa
cli
lcall
and
mov
xor
shlb
and
out
hlt
cmp
mov
int
mov
psrlq
clc
decl
inc
xor
outsb
cmovne
dec
inc
xor
sub
push
int3
add
sbb
mov
inc
inc
addr16
cmp
and
mov
and
inc
icebp
aas
mov
out
hlt
push
and
cmp
pop
std
mov
out
hlt
imull
xchg
dec
jl
mov
mov
xor
dec
aaa
iret
xor
int3
int3
xchg
xchg
stos
xchg
or
inc
test
add
add
stos
aaa
hlt
outsb
sbb
and
bound
sar
std
push
mov
adc
jnp
pop
repnz
ljmp
xchg
jne
aaa
or
lock
pushf
xchg
shl
std
push
add
enter
out
push
repnz
and
sbb
insb
and
xor
fwait
xor
jg
xor
add
mov
pop
mov
push
movsl
xorb
mov
jb
fidivl
das
sub
inc
repnz
fs
stos
pop
outsb
cmp
mov
or
adc
out
shl
fwait
mov
xor
cli
push
outsb
push
out
mov
push
sbbl
jp
popa
jo
xlat
mov
add
add
add
add
or
add
test
stc
cmc
cmpsl
test
mov
xor
jmp
cmc
cmpsl
test
mov
push
inc
shll
xor
inc
add
std
sub
inc
add
ja
pop
jmp
hlt
xor
add
or
xor
jmp
adc
cmp
add
lods
lret
es
jecxz
push
push
testb
add
in
sbb
inc
or
hlt
pop
xchg
push
inc
cltd
add
mov
incb
mov
idiv
sub
push
ret
addl
inc
call
adc
sti
mov
cmp
outsb
cmp
jmp
cmp
add
xor
jnp
mov
xor
lcall
push
xor
push
xor
pop
cltd
daa
fdivr
push
testl
add
xor
jle
js
ret
loope
adc
stc
jl
xor
dec
push
jbe
jecxz
or
sub
test
pusha
call
test
cmp
ljmp
int3
in
push
pop
movb
push
std
pushl
outsl
popf
pop
insb
insl
aas
mov
call
inc
rcr
adc
jmp
or
adc
cmpb
mov
fs
int3
pop
lock
xor
add
mov
pop
dec
out
sbb
ss
pop
jnp
divl
dec
adc
loop
inc
dec
dec
cmp
movhps
mov
dec
pusha
dec
mov
jnp
mov
out
add
xor
xchg
je
ss
add
out
scas
sub
mov
lret
xchg
cmp
js
xor
mov
xor
push
xor
xor
fwait
jecxz
add
mov
pop
cmc
mov
psllq
dec
xor
sbbl
sbb
pop
bound
lods
inc
and
pop
bound
mov
es
push
jb
or
jle
and
add
pop
and
add
dec
and
add
and
add
and
add
daa
and
add
add
add
add
and
add
dec
push
cmp
lahf
pop
cmp
add
cmp
fdivrs
xor
jnp
add
cmp
xchg
cmp
sti
mov
aad
cmp
loop
cmp
lods
xchg
mov
push
cmp
pop
push
cmp
imul
xchg
mov
push
aad
or
adc
jge
mov
test
repnz
shll
xor
outsl
je
push
mov
sub
xchg
leave
adcl
dec
sbb
and
daa
lahf
shlb
shll
aam
dec
xor
lahf
stc
fadds
aas
pop
mov
std
lret
mov
sbb
int3
stos
adc
int3
ret
lds
insb
insl
in
push
insb
adc
stc
mov
jl
jl
adc
test
popa
stc
notl
add
xchg
stc
notl
divb
xchg
stc
notl
add
xchg
stc
notl
shll
hlt
pop
in
xor
add
pop
adc
insb
jmp
cmp
add
data16
pop
fisubs
nop
xchg
or
add
xor
push
cmc
sub
scas
sbb
les
out
cmc
scas
inc
xchg
sahf
xor
pop
or
sub
xchg
sub
sarl
les
xchg
or
xor
cmpsl
cmp
add
scas
mov
divl
outsb
cwtl
shlb
xchg
sbb
or
jmp
jae
mov
hlt
xor
insb
fmuls
out
ds
mov
cmc
pop
std
mov
add
std
mov
cmc
addr16
xor
mov
std
and
mov
std
xor
mov
std
and
mov
std
xor
mov
std
and
mov
std
xor
mov
std
and
mov
std
mov
mov
std
mov
inc
xor
add
push
add
xor
add
push
and
icebp
add
sbbl
setnp
pushl
push
loope
mov
imul
mov
sub
lret
mov
inc
or
mov
call
mov
leave
add
sub
xchg
mov
add
jecxz
and
push
add
add
add
add
add
scas
push
dec
xor
add
add
hlt
xchg
or
mov
mov
add
hlt
xchg
or
rorl
mov
add
hlt
xchg
or
mov
mov
add
hlt
xchg
or
inc
popa
add
hlt
and
and
div
adc
and
div
and
inc
push
add
hlt
adc
add
add
hlt
and
and
div
adc
and
div
and
jge
js
or
pop
fwait
dec
pop
fs
cmc
xor
adc
cmp
dec
fisubrl
cs
push
xor
addl
test
out
xchg
or
pop
jp
loope
stos
cmp
outsl
mov
add
add
add
xchg
sub
mov
gs
add
adc
add
xor
lds
aas
mov
push
sbb
xor
lods
out
and
jo
xstore-rng
cmpsl
add
out
jae
mov
adc
imul
stc
jmp
divl
shrb
cmp
push
hlt
fstp
scas
hlt
xor
jb
ret
add
daa
sub
mov
test
cmp
sub
psubw
hlt
xor
test
jno
mov
jmp
ja
and
dec
sub
insl
xor
jmp
xchg
sbb
bound
pushf
in
push
cmp
push
push
cmp
iret
xchg
testl
rcrl
pop
test
or
aad
mov
roll
jecxz
xor
testl
xchg
pop
push
inc
push
test
add
test
add
test
add
pop
or
or
call
add
jp
add
scas
sahf
das
add
xchg
loop
sub
mov
test
popf
or
sbb
mov
jle
std
push
xchg
stc
xchg
out
inc
inc
add
hlt
test
mov
in
enter
dec
std
test
std
hlt
and
dec
std
inc
gs
into
or
and
jb
push
or
loopne
std
jmp
jp
and
mov
mov
jl
jp
rolb
lods
or
xchg
add
xor
aam
mov
pop
mov
hlt
mov
push
add
xor
out
mov
push
inc
aas
scas
shl
sbbl
adc
push
add
push
cld
aad
out
sub
add
sbb
daa
add
js
stos
add
push
sarl
add
pop
out
negl
cmpsl
add
add
jns
aas
hlt
aad
out
mull
add
pop
sub
pusha
xor
jmp
mov
add
cltd
in
inc
sub
add
push
add
hlt
or
dec
push
inc
jmp
pop
push
stc
push
xor
sbb
roll
divb
mov
xchg
add
loopne
hlt
xor
bound
xchg
sbb
xor
test
xchg
pop
add
hlt
add
inc
jmp
mov
aaa
inc
jmp
sahf
xor
cmp
pop
es
mov
mov
test
daa
adc
lods
pop
xor
roll
sub
mov
in
inc
jne
cmpsb
rcrb
imul
mov
sub
jmp
sub
add
add
and
and
dec
sub
int3
mov
mov
or
mov
push
xor
lcall
addl
push
jl
jge
mov
xchg
jns
fsubrs
flds
not
xor
insl
icebp
test
mov
rorl
and
loop
insb
jb
leave
ljmp
fcomps
jl
mov
je
add
mov
loope
testb
pop
out
std
sub
loop
js
add
xchg
add
loopne
xor
dec
dec
pop
das
cmpsl
xchg
mov
jecxz
and
jge
inc
imull
or
xorb
inc
or
xlat
xor
add
dec
out
test
repnz
xor
add
popf
stos
rorb
stos
stos
fcomip
and
stos
filds
fcompl
mov
or
outsb
pop
adc
out
jp
ret
pop
loope
movsb
fwait
int3
lock
out
jl
pop
cld
sub
jle
and
pop
loope
fidivrl
and
mov
jmp
add
mov
cld
test
adc
out
push
out
fs
data16
fnstenv
or
xor
add
stc
push
stc
jmp
cwtl
sbb
xor
mov
sub
pop
lds
adc
xchg
ljmp
dec
scas
inc
lds
inc
jns
xchg
jnp
leave
fsubl
in
stc
pusha
xchg
dec
sub
stc
cli
lock
adc
mov
push
test
out
xor
lds
test
arpl
jg
sarl
pop
mov
or
das
and
xor
pop
jae
je
outsl
dec
cmp
insl
mov
pop
fs
or
pop
insb
add
or
data16
and
dec
popa
ja
pop
jb
dec
jo
cmpsl
cmp
dec
sub
pop
gs
or
int3
int3
dec
jno
int3
fwait
stos
xchg
add
xor
push
mov
and
divl
bound
test
sti
and
repz
jnp
testl
sub
arpl
je
or
cmc
js
add
push
std
lcall
std
push
les
and
push
xchg
bound
test
sti
mov
std
push
mov
std
jmp
jne
mov
jle
pop
adc
dec
jbe
xchg
ljmp
pop
adc
dec
das
mov
xor
mov
in
cmpsb
into
insb
push
jmp
out
stos
cli
insl
push
jmp
out
add
jp
push
mov
add
xor
jnp
outsl
and
xor
jl
test
ficompl
lcall
ret
push
out
cmpsb
push
or
cmp
outsl
das
cli
xor
int
sub
add
cmpsb
xor
and
ljmp
xor
push
inc
movsb
cmp
arpl
add
mov
out
fdivrl
jmp
sti
stos
mov
daa
sub
jmp
hlt
xor
hlt
int3
sbb
divl
dec
insl
inc
movsl
mov
mov
stos
jecxz
mov
push
dec
sbb
pop
cmpsl
sbb
stc
xchg
or
mov
lds
stc
mov
xor
fs
xor
add
fs
pushf
int
jge
sbb
dec
in
add
sub
pusha
fbstp
ljmp
dec
mov
mov
jns
jle
mov
lret
rol
inc
add
push
int3
cmp
into
xor
mov
dec
stc
call
inc
or
xor
mov
int3
dec
or
dec
stc
jmp
int3
push
or
dec
stc
call
xor
xchg
out
add
pop
arpl
data16
jnp
adc
xor
negb
and
mov
xor
add
push
jp
negb
mov
pop
jbe
add
enter
fmul
hlt
xorl
sarb
xchg
cmp
insb
dec
cld
mov
jmp
or
cmpl
add
add
stc
pop
ja
outsb
insb
test
popf
jo
in
mov
in
testl
rolb
push
js
int3
ja,pn
push
ret
clc
out
iret
mov
das
sti
test
pop
jne
jmp
and
cld
mov
xor
xor
pop
inc
xor
add
dec
outsb
push
btr
repz
and
test
add
add
add
out
mov
add
xor
or
sbb
xor
gs
aas
or
fs
or
idivl
adc
cwtd
mov
xor
cmp
cmp
add
xor
clc
push
das
fiaddl
into
test
dec
mov
sbb
flds
add
add
add
add
add
lds
fiadds
xchg
fwait
in
add
hlt
mov
add
dec
stc
sbb
int3
jmp
loop
pop
jns
fldl
je
stc
add
cmc
bound
imul
mov
mov
movsl
dec
stc
sbb
stc
mov
mov
xor
insb
sarl
stc
testb
add
add
add
in
add
mov
add
mov
int3
sbb
jmp
cmp
push
icebp
int
mov
dec
mov
or
lret
sarl
inc
dec
enter
and
xor
add
sti
mov
mov
add
int
lahf
loopne
rorl
inc
sar
into
mov
push
or
cmp
mov
sbbl
add
add
add
add
lret
mov
mov
divb
rorl
xor
inc
adc
dec
dec
pop
add
scas
jl
pop
xor
das
neg
mov
clc
lret
inc
pop
stc
jae
add
negl
stc
jo
sti
pushl
pop
jmp
pop
cltd
bound
in
pop
std
in
sti
xchg
les
stos
jae
sarb
negl
outsb
hlt
scas
out
xor
mov
cli
mov
pop
std
jp
and
add
push
pop
jb
mov
cmp
repz
cmp
cwtl
pop
mov
mov
int3
mov
jl
je
call
xchg
incb
mov
xchg
dec
dec
add
mov
xor
add
mov
push
sti
mov
divl
stos
ds
das
out
add
mov
clc
jo
in
imull
xor
js
mov
out
jp
pop
push
out
push
enter
add
mov
jp
and
scas
mov
cmp
xchg
mov
jmp
cmp
xor
jbe
adc
add
daa
lea
jb
mov
jmp
hlt
xor
movsb
add
mov
clc
xor
jmp
imul
sub
push
jns
push
add
and
stc
jb
and
fisttpll
dec
inc
fldl
sbbb
sub
sbb
pop
mov
scas
fnstcw
dec
push
fstpl
mov
and
pop
add
sbb
iret
test
sub
jnp
add
sub
nop
out
stc
lcall
and
int3
xchg
sub
push
stos
or
sub
ret
sub
jge
push
sub
scas
jle
sub
add
in
orl
xor
cmp
fsubrs
mov
test
inc
or
jecxz
add
les
push
stos
lret
test
add
cmp
add
ret
insb
xor
addr16
jo
call
adc
pop
jbe
dec
pop
and
xchg
test
dec
jne
jae
std
jl
mov
xchg
dec
adc
pop
cwtl
pop
cltd
rolb
mov
lcall
mov
add
add
add
add
out
hlt
mov
inc
std
push
adc
xchg
jmp
xchg
scas
repz
pop
idiv
mov
pop
fdiv
jle
mov
jp
fwait
out
cwtl
inc
push
mov
rcr
dec
addr16
add
mov
inc
jns
cmp
push
into
out
jae
push
out
jb
cli
jns
mov
add
mov
add
lahf
sbb
or
mov
add
add
add
add
mov
out
out
mov
out
mov
jmp
xlat
fnstenv
into
xchg
xchg
jp
scas
jbe
cmp
add
mov
dec
dec
in
out
jmp
cmp
jmp
or
mov
ljmp
add
ud1
jno
mul
cli
in
xchg
adc
or
pop
jo
dec
loopne
mov
jmp
mov
xor
add
and
xchg
and
jmp
out
aaa
test
and
jmp
int3
and
mov
push
mov
pusha
mov
loope
int3
xor
data16
into
pop
or
push
add
inc
add
adc
sahf
xor
test
xchg
xor
psllw
stc
out
icebp
mov
jo
add
jle
and
add
addr16
or
mov
in
xor
mov
sub
add
fdivr
push
shlb
add
into
mov
add
add
add
add
into
mov
sahf
add
jecxz
or
jmp
dec
inc
insl
xchg
into
xlat
sti
adc
mov
jmp
imul
shll
test
push
add
stos
or
popl
hlt
movsb
jne
outsl
out
push
add
mov
std
jl
push
xor
lret
filds
adc
jle
push
adc
pop
mov
rolb
xchg
xor
mov
nop/reserved
push
sbb
xor
lock
xor
divl
pop
decl
or
test
pusha
xchg
inc
sbb
add
xor
push
xor
add
pop
add
sbb
xor
dec
pop
clc
add
divl
repnz
notl
lock
out
loop
pop
jmp
icebp
xor
mov
das
or
in
dec
fisubrs
nop
jno
xor
jb
push
xchg
pop
add
jl
punpckldq
stos
js
cmp
arpl
adc
imul
aam
inc
push
cmc
inc
and
xor
mov
jb
cmp
pop
mov
fdivrp
xchg
mov
leave
dec
lods
mov
xchg
dec
test
pop
add
push
sub
ljmp
add
insl
mov
add
xlat
inc
push
mov
rcrl
mov
or
frstor
popf
mov
push
lcall
add
add
add
enter
lcall
adc
inc
or
add
sub
mov
jno
add
jne
pop
gs
sbb
ret
nop
mov
xlat
test
adc
fldenv
popf
mov
rorl
mov
or
sub
jb
clc
or
testl
xor
add
dec
std
sarb
push
dec
data16
push
std
push
mov
idiv
dec
std
pushl
add
jl
or
ja
orb
mov
cmp
movl
testl
stc
test
add
testl
popa
jl
jecxz
add
xor
xchg
sub
in
out
movsl
sub
aas
daa
out
jg
fadds
dec
and
out
jb
cli
mov
test
or
cmpsb
dec
push
divl
call
sub
jae
mov
outsl
xchg
out
lcall
test
jno
mov
roll
add
stos
lods
scas
pop
push
divl
lahf
orb
aad
stos
pop
out
push
outsb
into
add
add
and
jmp
jb
adc
hlt
test
clc
cmc
ficoml
jae
xchg
jmp
outsl
jmp
bound
mov
pop
loop
add
mov
ja
lcall
mov
pusha
jb
adc
add
push
or
loopne
jns
jmp
jge
mov
lods
add
mov
xor
push
cmp
and
mov
bound
mov
add
cmp
mov
subb
xchg
add
xchg
or
enter
and
add
or
inc
stos
lods
adc
push
mov
stc
pop
add
test
sub
xrelease
push
add
and
add
pop
sarl
push
add
or
jns
add
idivl
stos
and
mov
xor
add
stos
mov
stc
pop
aaa
pop
maskmovq
mov
lret
lea
inc
std
popa
insb
pop
fmulp
adc
inc
mov
add
mov
testl
psubsb
or
dec
mov
mov
adc
imul
or
mov
dec
std
push
dec
xlat
adc
bound
mov
testl
decl
ret
aas
divl
xchg
jns
or
divl
fcompp
xor
xchg
and
add
jno
mov
insl
jge
add
das
cmp
sarl
jns
out
fmulp
jge
jnp
divl
outsb
inc
pmaxsw
jns
cmpsl
sbb
cmp
out
mov
repz
cmp
fnstsw
inc
inc
mov
insb
cmp
lret
scas
jnp
inc
test
or
pop
adc
jmp
xor
jg
das
out
xchg
xor
xor
test
add
add
add
add
sub
mov
xor
ja
or
jo
aaa
xorl
test
push
xor
jo
xor
out
addr16
jmp
and
jmp
cmp
scas
sahf
enter
inc
iret
int3
lret
jnp
pop
jo
ss
loopne
jns
jmp
jp
mov
cmc
in
inc
cmc
sub
jae
test
js
imul
popa
add
test
pop
add
push
adc
lret
inc
test
mov
mov
add
cmp
add
fidivl
add
push
in
data16
jle
push
push
cs
leave
testl
mov
adc
stc
incl
push
rorb
add
add
add
mov
ret
xor
add
lods
dec
lock
sub
or
push
add
sub
add
and
inc
mov
scas
cwtl
mull
lret
adc
mov
pop
xchg
jl
insl
stc
mov
mov
or
into
testl
inc
fildl
add
add
add
or
imull
adc
add
inc
std
popa
and
fildl
xchg
enter
mov
testl
aas
test
jae
pushf
push
mulb
in
inc
aaa
dec
xchg
pop
pop
std
push
jb
xor
push
lods
pop
into
fistpll
out
jle
mov
add
sbb
pop
add
cmpsl
pmaxsw
mov
mov
test
cmp
in
xlat
sub
iret
mov
jp
xchg
orb
push
fs
subb
xor
dec
jo
arpl
divl
sub
jp
xor
add
sub
lods
push
shlb
les
outsb
mov
add
add
add
mov
mov
fwait
out
aas
jmp
mov
test
fcomip
xor
add
outsb
jp
outsl
jecxz
out
mov
lods
jg
bound
xchg
lods
dec
icebp
inc
cs
inc
jmp
cwtl
mov
cmp
test
clc
xor
bound
adc
hlt
stos
push
icebp
insb
adc
adc
hlt
aaa
inc
std
add
gs
xor
jle,pt
add
stos
mov
jmp
cmpsl
push
or
test
fisubl
lcall
out
mov
cmp
xchg
cmp
test
push
test
lods
fsubs
mov
jl
add
xor
not
bnd
add
lret
inc
add
leave
ja
mov
push
sbb
adc
ja
mov
jl
sbb
jmp
inc
std
clc
aaa
pop
mov
int
out
lea
nop
scas
xor
sub
insb
mov
xchg
repnz
jmp
adc
xchg
jg
adc
repz
jge
cmp
clc
nop
hlt
inc
std
test
pop
add
fwait
or
out
outsb
adc
lock
dec
out
test
test
cld
jns
xchg
jmp
divl
outsb
roll
pop
stos
in
out
jmp
push
in
fists
jb
out
jge
jp
add
mull
bnd
jne
add
xor
cmp
lods
sub
inc
pusha
xchg
imul
add
xor
add
in
divl
mov
jns
fwait
sbb
xor
jge
aad
ljmp
dec
push
aad
inc
sti
mov
xor
mov
hlt
xor
push
mov
std
call
add
add
stos
lods
jecxz
cmp
xor
jo
ja
xor
jmp
mov
insl
out
mov
jmp
mov
iret
inc
jb
sbb
mov
add
hlt
mov
mov
jl
into
jl
shll
add
hlt
mov
add
jns
adc
hlt
xor
push
cmc
lock
add
add
mov
add
in
lret
int3
lret
int3
int
dec
mov
fiadds
movsl
call
rolb
pusha
mov
int3
and
lret
int3
aad
mov
xorl
cwtl
mov
pop
sbb
adc
outsb
or
push
push
xor
add
in
jge
sbbb
dec
push
mov
adc
movsb
mov
sbb
cmp
or
cmp
mov
jl
mov
lcall
inc
int3
stos
jnp
int3
ret
addl
hlt
je
inc
cli
je
insb
mov
mov
push
std
shlb
add
aas
std
push
pop
mov
push
out
iret
addps
rolb
add
add
iret
push
jbe
ss
xchg
xor
or
cmc
test
push
mov
push
push
jmp
jmp
jl
cmc
test
push
mov
add
ret
add
insb
dec
imul
add
push
cld
cmp
pop
mov
sti
lds
adc
dec
mov
mov
lcall
std
stos
aas
mov
xchg
mov
and
cli
sahf
add
xor
sbb
adc
mov
out
aad
cmp
xchg
sarb
ret
mov
ljmp
test
cmp
je
jae
out
lods
pop
adc
sub
pop
sub
dec
pop
xor
jp
shll
ds
add
add
add
add
addb
lret
cmp
mov
or
cld
scas
jns
adc
hlt
xor
jmp
add
add
stos
xor
ja
sub
sub
jmp
hlt
xor
jmp
mov
das
add
add
push
test
jmp
pusha
lret
or
add
add
add
push
pop
cmp
mov
int3
pop
dec
xorl
mov
call
or
push
mov
les
mov
mov
sahf
xor
popw
inc
jg
adc
adc
xor
call
mov
je
sub
and
fstp
dec
adc
xor
jnp
stos
inc
cld
movsl
push
add
add
add
add
xchg
out
add
mov
dec
cmc
je
jnp
lret
jo
add
arpl
js
fists
js
adc
std
push
xchg
jle
jecxz
std
test
pop
jp
pop
adc
ljmp
xchg
jle
jmp
std
mulb
stc
js
int3
ljmp
std
incl
je
incl
mov
std
xchg
enter
add
lret
xor
add
mov
out
jae
stos
adc
addb
int
mov
jle
jp
dec
inc
out
jns
call
xchg
loop
test
jns
jb
scas
imul
out
out
jecxz
loope
jno
bound
mov
out
adc
pop
inc
js
pop
pop
cmp
ljmp
bnd
sub
push
mov
add
test
hlt
mov
mov
sub
bound
xchg
lea
adc
xchg
pop
xchg
hlt
sbb
xor
pop
stos
add
std
lret
mov
std
lret
lods
cld
lret
pop
cmp
test
xor
xchg
jmp
pop
sbb
mov
scas
daa
repnz
xor
jmp
fisubrs
mov
ss
inc
adc
push
into
sub
dec
jecxz
add
add
dec
mov
xchg
fadds
add
or
add
adc
push
add
push
das
insl
cmp
loopne
mov
cmc
clc
gs
rolb
add
fs
mov
cmpsl
cmp
adc
sbb
add
xchg
push
xor
cmp
lahf
test
push
sahf
cs
ret
mov
xchg
sbb
loope
adc
sbb
jmp
xchg
push
std
add
mov
adc
pop
mov
xor
sub
jnp
jl
hlt
test
notl
rcll
movsb
or
jmp
mov
mov
orl
or
add
std
clc
aaa
and
dec
add
adc
addr16
add
stos
les
add
pop
fld
push
test
sbb
out
jp
fcmovnu
jno
jle
divl
cltd
lret
aas
cmp
sub
xorl
les
mov
setne
add
push
sub
out
jp
xlat
shrb
divl
pop
sar
lcall
pop
in
ljmp
cmc
mov
mov
stos
aaa
stos
cmc
sbb
mov
inc
cmp
cmp
jae
out
idivl
rorb
jnp
mov
cmc
or
je
int3
mov
inc
or
hlt
xor
mov
inc
mov
xor
frstor
jne,pn
pop
jb
sbb
pop
xchg
sub
jmp
hlt
xor
movsb
mov
daa
add
mov
pop
push
fimull
mov
xor
cmp
sub
orb
movswl
jmp
dec
call
cmp
or
imul
add
sahf
mov
jge
sahf
dec
add
fwait
add
ret
loopne
mov
pop
or
nop
aam
add
sbb
sahf
cmpsb
add
xchg
out
mov
xor
inc
and
sahf
daa
aaa
add
push
out
mov
and
jle
shlb
add
adc
adc
fs
shll
mov
mov
fimull
imul
pop
popf
movsl
adc
pop
cmpb
sbb
test
and
incl
insb
sahf
add
mov
mov
stc
cmp
std
dec
jp
mov
notl
into
test
inc
and
adc
add
xor
notl
js
cmp
cld
jl
or
repnz
int3
aad
into
adc
ja
jmp
test
decl
sub
out
fidivrs
add
xor
mov
mov
cmp
jo
jb
add
sub
push
lea
clc
add
mov
jg
out
push
inc
shll
mov
mov
out
mov
in
add
cwtl
dec
enter
ret
mov
and
dec
pushl
loop
je
push
or
mov
add
add
add
shlb
push
mov
sbb
stos
dec
ret
cmc
lcall
js
test
cmp
adc
stc
push
sub
lret
mov
cmc
lret
lods
shl
sbb
adc
call
push
sub
sub
hlt
lret
xor
shl
inc
lods
xor
jmp
xchg
insb
add
insb
add
add
add
hlt
xor
call
hlt
xor
out
xor
div
xor
hlt
xor
push
repz
dec
sti
xor
add
das
add
popa
sub
add
push
inc
add
jno
add
popa
push
add
jno
stc
pushl
add
icebp
xchg
stc
jmp
xchg
sti
call
xchg
call
xchg
pop
add
xchg
aaa
add
mov
testl
loope
testl
rcll
negl
loope
idivl
icebp
xchg
idivl
xchg
idiv
mov
dec
push
inc
lods
jmp
shlb
jne
inc
call
add
je
or
dec
sub
test
xor
test
or
mov
insb
jg
sbb
push
push
dec
xchg
hlt
sbb
add
add
add
jmp
xchg
inc
mov
mov
leave
and
mov
mov
inc
pop
dec
jle
and
insb
ret
mov
pop
loopne
inc
fisttpl
mov
mov
das
insb
fistl
xchg
in
or
inc
hlt
adc
push
loopne
pop
sbb
outsb
fcoms
push
dec
inc
dec
inc
repnz
mov
add
out
add
out
arpl
aam
mov
jb
aad
mov
inc
pusha
fcom
cmp
cld
xchg
in
divl
repz
pop
push
mov
popf
sbbl
dec
insb
jb
or
ret
xchg
cli
xor
push
jnp
in
negl
xchg
jg
sub
test
dec
out
xlat
xor
pop
aaa
fdivs
std
push
popl
jl
mov
movsb
arpl
push
jg
fisttpl
mov
notb
out
jne
or
xor
inc
call
sbb
int
jmp
fnsave
shl
int
jmp
sahf
xchg
fnsave
jno
in
popa
jl
idivb
and
fcomip
pushf
mov
or
add
add
ror
in
ljmp
inc
cmpsb
add
mov
add
xor
je
daa
jo
cmpsl
in
fisubrs
or
and
test
add
push
xchg
pop
je
cmp
jae
test
cmpsb
mov
mov
call
pop
xor
sarl
and
sub
arpl
add
add
add
add
push
xor
pop
cmpsb
mov
xchg
add
movsl
fcomps
xchg
add
add
test
or
repz
or
subl
sbb
add
rclb
lds
in
int3
xlat
adc
ret
push
pop
xor
das
xor
std
rol
xchg
add
sub
iret
add
or
std
push
mov
push
and
jle
test
jge
std
test
pop
js
jl
or
insb
fsubl
sub
clc
pop
stc
adc
pop
or
mov
iret
adc
insl
add
or
mov
xor
fidivl
ljmp
mov
mov
push
divl
jg
divl
out
xchg
push
pop
mov
sub
or
pop
pop
jle
aas
out
mov
push
divl
aas
add
push
push
pop
mov
sub
add
sbb
add
imull
aam
incb
mov
push
icebp
xor
ljmp
jae
rcr
cld
sbb
push
fdivl
sbb
in
inc
jo
and
sub
aad
adc
in
push
jmp
and
stc
and
and
cmpsb
dec
and
sbb
pop
popa
xor
test
aam
jle
or
aad
and
add
or
in
test
andl
repz
jae
repnz
loope
cmp
incl
outsb
fldt
and
adcl
pop
out
pop
stos
pop
and
mov
pop
fs
adc
or
ss
lcall
lgs
fstpt
clc
aam
lcall
leave
xor
imul
call
sub
or
pop
add
adc
pop
std
jl
cmp
or
add
testl
out
lock
add
cmc
cmp
int
xchg
pusha
testb
lret
cmp
or
cli
add
adc
dec
and
into
or
and
or
stc
jl
mov
imul
rolb
scas
jo
or
std
push
xchg
jmp
pop
int
adc
movl
xor
or
les
das
xor
ss
stos
pop
iret
push
or
movsl
sbb
push
inc
push
test
cs
add
pop
shl
mov
push
in
xor
add
scas
sub
aam
iret
adc
outsb
mov
mov
xor
test
jg
and
rorb
pop
dec
jns
insw
mov
in
ss
sti
sbb
out
insb
negl
jp
jb
add
sub
push
daa
or
mov
jp
aam
and
pop
add
scas
mov
jb
in
stc
add
add
add
add
add
sub
push
daa
or
cmp
jp
adc
xor
push
add
push
or
cmp
inc
stc
out
scas
clc
jb
scas
inc
or
mov
sub
hlt
xor
ljmp
jae
int
cld
cwtl
fucom
jno
sbb
in
inc
jge
and
cmp
inc
sub
movsb
mov
rorl
mov
enter
je
add
sub
dec
enter
and
out
andb
cmp
cmp
andl
xor
sub
cmp
jbe
dec
leave
repz
shl
test
pop
and
mov
mov
icebp
clc
mov
mov
test
add
sub
mov
divl
mov
push
mov
test
in
and
jle
add
divl
test
aad
xchg
nop
hlt
in
mov
pusha
inc
lret
orl
fstpt
pop
jl
xchg
dec
gs
or
repnz
push
add
add
add
add
add
sub
ss
and
jb
xor
jmp
push
test
add
in
or
adc
out
testl
pop
xchg
and
in
lock
lods
add
push
jle
fstps
mov
cmp
xor
mov
and
xor
xchg
mov
inc
fidivs
jo
out
divl
pusha
mov
loop
sbb
mull
es
je
mov
in
jg
mov
sarb
xlat
push
mov
jb
jp
jmp
dec
lods
pop
cmc
sti
jno
jo
int
sub
lods
inc
pop
loop
mov
fldl
test
or
xchg
jmp
add
insb
dec
lea
dec
test
pop
mov
roll
fmuls
jmp
jno
inc
inc
sti
lahf
add
sub
in
jo
jb
scas
mov
std
sub
and
push
decl
xchg
add
pop
push
jl
mov
add
add
jo
mov
jnp
mov
add
mov
jl
int3
pushl
xor
dec
jnp
iret
dec
sub
decl
xor
add
mov
push
jp
out
sub
out
inc
pop
popw
jbe
xchg
dec
or
jbe
dec
pop
je
pop
push
push
adcl
push
mov
push
addb
mov
mov
out
pushf
test
testl
jnp
cli
out
sub
mov
xchg
add
out
pop
hlt
test
cmc
adc
jb
xlat
flds
jmp
or
mov
cltd
nop
or
xchg
clc
cmp
push
enter
mov
pop
mov
outsb
enter
fisttps
xchg
loopne
dec
je
loopne
or
mov
enter
sub
aaa
xor
jp
or
push
les
xor
lods
fnstcw
enter
adcl
stos
push
xor
add
add
pusha
cmp
sub
xor
add
fstpt
and
aas
jl
adc
add
xor
xor
pop
jp,pn
sbb
sbb
jle,pt
mov
test
aaa
jo
xor
jge
add
add
jl
or
and
push
adc
jmp
mov
xchg
jmp
loope
xor
lods
jb
in
jecxz
adc
lods
push
roll
lret
out
inc
stc
hlt
or
jmp
gs
mov
adc
int
fsubl
jle
bound
sub
outsb
and
repz
adc
add
and
jb
stos
jp
insl
adc
jmp
sub
call
lods
sbb
xor
add
fidivs
clc
fidivrl
sub
xor
mov
sbb
idivl
pop
xchg
orl
mov
add
jge
add
jp
rclb
xchg
push
icebp
add
mov
call
pop
xor
add
lret
dec
jo
sbb
leave
in
setb
add
mov
cmp
or
mov
cmp
pop
xchg
jle
jmp
les
imull
jl
mov
xlat
xlat
add
adc
mov
jl
cmp
sti
fwait
jne
cmpsl
xchg
mov
call
add
loopne
sub
insl
fldt
fwait
push
xchg
cmp
add
adc
std
cld
nop
repnz
lds
mov
insb
push
cld
mov
inc
jbe
shrb
sub
ret
clc
test
jle
movsl
push
jb
jl
sbb
or
sbb
add
add
add
ljmp
add
mov
outsb
divb
gs
mov
push
mov
test
pusha
mov
pusha
mov
mov
mov
adc
mov
sub
jne
sbb
sub
lds
xlat
ljmp
js
inc
jp,pt
mov
pop
jmp
mov
stos
repz
add
jbe
jno
xor
jmp
enter
cmp
rclb
inc
loopne
std
lock
mov
std
das
cmp
add
pushf
mov
int
bound
es
mov
stc
xor
test
dec
int3
pop
jae
arpl
xchg
add
sbb
lret
jb
lret
adc
xchg
cmp
call
aaa
push
adc
push
adc
adc
fwait
jnp
add
cmp
push
xchg
out
hlt
fwait
je
call
js
inc
push
mov
fidivs
mov
mov
xor
add
fstl
test
ret
xchg
push
inc
push
into
xor
int3
fnstsw
add
add
add
add
sbb
ror
test
test
sub
test
lret
sbb
mov
shll
or
rcrl
adc
lret
sbb
pop
insl
leave
fisttpl
dec
insl
hlt
leave
bound
and
mov
lock
xor
jmp
ret
hlt
insl
lock
mov
dec
and
jp
xor
add
add
add
add
xor
rcrb
push
and
mov
std
push
adc
mov
ret
out
cmp
sbb
push
repnz
stc
sbbb
negl
std
push
rolb
pusha
add
cmp
negl
std
push
mov
stc
inc
mov
inc
aas
negl
std
push
xor
push
or
dec
fdivs
fimull
xor
add
xor
add
or
inc
mov
xor
add
xor
dec
fimuls
mov
sbb
mov
add
xor
dec
mov
xor
aaa
xor
add
xor
dec
sahf
or
shlb
out
divl
ret
or
xchg
mov
xor
add
xor
xchg
sbb
mov
add
xor
iret
add
xor
incb
add
hlt
xor
jmp
hlt
xor
mov
test
mov
jmp
hlt
insb
psubsw
push
psubsw
xchg
psubsw
lods
push
jmp
hlt
mov
jmp
hlt
dec
psubsw
dec
psubsw
inc
psubsw
je
jmp
hlt
cwtl
psubsw
inc
push
jmp
add
sub
jmp
hlt
and
jmp
hlt
insb
psubsw
js
add
inc
adc
add
push
sub
clc
adc
sub
add
push
sub
sub
push
sub
loopne
fidivs
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
sahf
xor
adc
xor
adc
xor
adc
xor
adc
pushf
adc
cwtl
adc
xchg
adc
movsb
adc
sbb
sbb
popa
out
std
ret
out
std
jg
sbb
jnp
sbb
ja
sbb
jae
sbb
and
std
mov
out
std
mov
push
sbb
or
sbb
pop
add
sbb
add
sbb
jmp
sbb
sti
out
std
mul
sbb
repz
std
ret
pop
sbb
mov
pop
sbb
mov
sbb
mov
sbb
scas
out
std
stos
out
std
cmpsl
out
std
das
pop
sbb
sub
sbb
daa
pop
xor
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
repz
add
and
add
aaa
out
pushl
out
add
out
out
out
out
in
pop
out
ret
ss
popf
and
add
push
out
lret
push
out
mov
out
push
and
add
and
add
ss
aas
ss
inc
ss
stos
ss
hlt
rorb
hlt
aam
jmp
add
int3
or
hlt
rorb
jmp
hlt
test
jmp
hlt
mov
or
hlt
mov
or
hlt
mov
jmp
hlt
mov
jmp
hlt
adc
jmp
hlt
testl
jmp
hlt
js
jmp
hlt
jo
jmp
hlt
dec
or
hlt
cmp
jmp
add
push
or
hlt
pop
or
mov
inc
adc
xor
pop
xor
dec
xor
cmovle
and
pop
xor
divps
sbb
dec
xor
cmovle
adc
push
xor
nopl
or
push
xor
nopl
add
push
xor
push
push
xor
push
push
xor
push
fidivs
inc
adc
xor
into
xor
into
xor
fidivs
loopne
fidivs
fmull
add
xor
push
into
xor
push
sahf
xor
push
sahf
xor
mov
enter
les
sahf
xor
push
negl
std
mov
jmp
sbb
mov
sbb
scas
icebp
sbb
stos
jmp
sbb
mov
icebp
sbb
fwait
jmp
sbb
sbb
fcomi
sbb
xlat
jmp
sbb
iret
stc
sbb
lret
icebp
sbb
movl
add
add
jmp
sbb
aam
sbb
shl
sbb
mov
sbb
arpl
sbb
cmp
sbb
mov
add
std
imul
std
dec
icebp
sbb
nop
call
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
or
out
jno
out
arpl
out
test
out
pop
sub
add
sub
add
out
sbb
daa
out
jecxz
out
out
out
lret
xor
add
xor
add
xor
add
xor
add
xor
add
xor
jmp
hlt
out
or
hlt
clc
or
hlt
lock
hlt
les
jmp
hlt
mov
add
add
add
add
xchg
jmp
hlt
adc
jmp
hlt
rorb
jmp
hlt
push
adc
hlt
pop
adc
hlt
mov
or
hlt
mov
or
hlt
mov
jmp
hlt
fmuls
jmp
hlt
loop
jmp
hlt
push
or
hlt
or
hlt
fs
hlt
push
push
or
add
sub
inc
or
mov
cmp
pop
sub
sbb
dec
sub
adc
pop
sub
or
dec
sub
add
push
sub
cld
or
sub
hlt
or
sub
in
or
sub
in
fidivs
push
into
xor
push
add
xor
push
fidivs
push
fidivs
maskmovq
testl
std
xor
or
sub
repz
mov
add
std
mov
or
scas
repz
stos
jmp
std
cmpsl
add
std
mov
repz
stos
jmp
std
cmpsl
add
std
mov
repz
fwait
jmp
std
icebp
add
std
in
stc
or
mov
jmp
ljmp
fyl2x
or
aad
or
roll
or
int
or
pop
repz
pop
jmp
std
push
add
out
and
out
sub
out
xor
out
fldt
add
sub
add
sub
add
sub
add
sub
add
sub
out
pop
sub
out
out
sub
add
jecxz
out
out
out
jmp
out
ljmp
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
jmp
hlt
fadds
hlt
in
jmp
hlt
in
add
hlt
call
add
hlt
lock
hlt
mov
add
hlt
les
add
cmc
add
hlt
icebp
add
hlt
enter
aam
jmp
hlt
stos
psubsw
and
jmp
hlt
mov
add
hlt
test
jmp
hlt
mov
jmp
hlt
adc
jmp
hlt
addb
hlt
mov
or
xor
or
xor
or
xor
add
xor
sahf
xor
or
xor
sahf
xor
mov
jl
pop
xor
pop
xor
xor
or
sbb
pop
xor
or
adc
dec
xor
or
or
push
xor
or
xor
push
xor
or
xor
or
xor
or
xor
or
xor
or
pop
std
jmp
std
or
out
or
jecxz
or
out
in
or
jmp
or
out
or
shr
or
inc
in
or
lret
std
or
xor
or
sub
in
or
lret
std
or
std
or
mov
or
and
or
stos
std
or
addr16
or
mov
in
or
fwait
std
or
xchg
std
or
xchg
in
or
in
or
mov
or
xchg
std
or
sub
std
jg
or
mov
or
jmp
xor
add
es
arpl
out
pop
daa
out
pop
daa
out
push
daa
out
xor
out
das
daa
out
sub
out
daa
daa
out
inc
daa
out
aas
daa
out
enter
inc
daa
out
inc
daa
out
aas
daa
out
cmp
out
aaa
daa
out
xor
out
das
daa
out
add
daa
out
pop
daa
out
repz
out
es
jmp
out
out
out
add
out
push
daa
out
sti
es
mull
add
hlt
cld
push
jmp
hlt
add
jmp
hlt
or
jmp
hlt
adc
jmp
hlt
faddl
jmp
hlt
in
jmp
hlt
in
push
jmp
hlt
hlt
push
jmp
add
add
add
lock
jmp
hlt
mov
push
jmp
hlt
int3
push
jmp
hlt
aam
jmp
hlt
pushf
push
jmp
hlt
movsb
push
jmp
hlt
lods
push
jmp
push
test
push
orb
jl,pn
push
js,pn
push
je,pn
push
jo,pn
fisubrs
push
or
sub
add
add
add
add
sub
pop
or
sub
push
or
sub
inc
or
sub
cmp
mov
xchg
or
xchg
or
mov
dec
sub
xor
pop
sub
jle
dec
sub
and
testl
std
jno
pop
std
sbb
pop
std
imul
cld
pop
std
popa
in
pop
std
pop
in
pop
std
out
decl
std
jmp
or
out
or
dec
in
or
idiv
or
repnz
std
out
out
or
ljmp
std
loop
or
xor
or
sub
decl
std
sar
or
into
out
or
lret
std
sbb
or
adc
in
or
or
decl
std
mov
or
scas
add
xor
add
out
push
sub
add
sub
add
out
fs
add
out
insb
sub
add
out
je
out
pusha
sub
add
add
out
inc
sub
add
sub
add
out
popa
sub
add
out
dec
sub
add
out
push
sub
add
out
add
out
lea
out
subl
out
imul
add
hlt
scas
add
jmp
hlt
jp
jmp
hlt
addb
hlt
xchg
jmp
hlt
mov
jmp
hlt
push
push
jmp
hlt
pop
push
jmp
hlt
pushw
jmp
hlt
outsb
push
jmp
hlt
ss
jmp
add
add
add
cmp
jmp
hlt
inc
push
jmp
hlt
dec
push
jmp
hlt
push
push
jmp
hlt
sbb
jmp
hlt
and
add
or
pop
xor
or
add
dec
xor
or
cli
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
fidivs
rorb
into
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
xor
or
pop
std
xchg
out
pop
std
xchg
out
pop
std
incb
std
mov
pop
std
test
pop
std
sub
pop
std
jns
pop
std
jne
out
pop
std
jno
pop
std
insl
incb
std
imul
pop
std
popa
out
pop
std
pop
decb
std
pop
decb
std
push
out
or
push
out
or
dec
decb
std
dec
decb
std
inc
out
or
inc
out
or
cmp
decb
std
xor
out
or
sub
decb
std
and
out
xor
add
sub
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
out
imul
out
add
out
pop
sub
jmp
hlt
into
pop
jmp
hlt
xchg
pop
jmp
hlt
sahf
pop
jmp
hlt
cmpsb
pop
jmp
hlt
scas
pop
jmp
hlt
jbe
jmp
hlt
jle
jmp
hlt
xchg
jmp
hlt
mov
jmp
hlt
push
or
hlt
pop
or
hlt
pop
or
hlt
bound
jmp
add
add
add
data16
hlt
push
jmp
hlt
xor
jmp
hlt
cmp
jmp
sahf
sub
sahf
cs
cs
or
sbb
pop
cs
or
adc
dec
cs
or
or
pop
cs
pop
dec
and
dec
incb
push
cs
pop
push
testb
cs
push
cs
pop
push
cs
push
loop,pn
push
fiadds
fisubrs
pop
into
sub
into
pop
fisubrs
movb
sub
mov
pop
sahf
sub
std
mov
pop
std
mov
pop
std
lods
lock
std
fs
pop
std
pusha
repnz
std
pop
cli
pop
std
pop
repnz
std
push
cli
pop
std
push
repnz
std
dec
cli
pop
std
and
pop
std
mov
pop
std
test
lock
std
cmp
pop
std
xor
pop
std
xor
pop
std
sub
pop
std
sub
pop
std
imul
pop
std
popa
clc
frndint
pop
lock
pop
clc
frndint
push
lock
push
clc
frndint
dec
lock
add
frndint
add
frndint
cld
sti
xor
add
aaa
out
fnsave
out
loope
out
lds
out
fnstenv
out
int
out
shll
out
add
cmp
add
aaa
out
add
out
in
out
stc
aaa
out
in
aaa
out
icebp
aaa
out
cmc
aaa
out
sub
out
sbb
aaa
out
add
aaa
out
or
aaa
out
aad
out
leave
ss
mov
ss
movsl
ss
mov
xor
jmp
hlt
insl
add
add
scas
add
hlt
stos
add
hlt
cmpsb
add
hlt
mov
add
hlt
lcall
hlt
xchg
add
hlt
into
add
hlt
lret
hlt
movb
hlt
ret
hlt
mov
add
hlt
mov
jmp
hlt
outsb
add
hlt
push
jmp
hlt
bound
jmp
hlt
pop
add
hlt
push
add
hlt
push
add
hlt
mov
jmp
add
add
add
mov
jmp
hlt
addb
fidivs
dec
push
into
xor
add
xor
add
xor
add
xor
push
sahf
xor
push
sahf
xor
push
mov
es
mov
and
pop
xor
push
pop
xor
push
dec
xor
push
dec
xor
push
pop
xor
push
pop
xor
push
dec
xor
push
dec
xor
push
push
xor
add
push
xor
add
add
add
add
xor
add
push
xor
add
push
xor
add
fidivs
fiaddl
not
cld
aad
xlat
cld
shl
xlat
cld
int
xlat
cld
leave
repnz
cld
cld
shl
cld
mov
repnz
cld
mov
xlat
cld
mov
xlat
cld
lods
cli
xlat
cld
test
cli
xlat
cld
mov
cli
xlat
cld
cltd
repnz
cld
xchg
add
xlat
cld
xchg
repnz
cld
cli
xlat
cld
mov
xlat
cld
test
xlat
cld
xor
xlat
cld
jns
xlat
cld
jne
xlat
cld
jno
xlat
cld
insl
cli
xlat
cld
imul
frndint
popa
repnz
add
out
cmp
ss
and
ss
sub
ss
xor
xor
out
leave
xor
add
add
add
add
xor
out
int
out
sbb
out
adc
ss
std
xor
out
in
out
icebp
xor
out
stc
xor
out
and
out
or
out
adc
add
hlt
rolb
jmp
hlt
or
hlt
push
add
hlt
add
hlt
incb
jmp
add
add
add
cli
add
hlt
testb
hlt
repnz
hlt
out
add
hlt
stos
add
hlt
cmpsb
add
hlt
mov
add
hlt
lcall
hlt
xchg
add
hlt
mov
jmp
hlt
movb
hlt
ret
hlt
mov
add
hlt
mov
jmp
hlt
scas
add
hlt
push
jmp
hlt
bound
hlt
pop
add
push
das
push
add
das
data16
bound
cs
add
cs
add
cs
add
cs
add
cs
add
cs
add
cs
add
cs
add
cs
cmp
cs
xor
cs
sub
cs
and
cs
add
sbb
cs
add
adc
cs
add
or
cs
add
push
add
incb
push
cs
add
testb
xlat
cld
cmc
hlt
xlat
cld
icebp
hlt
xlat
cld
in
hlt
xlat
cld
jmp
hlt
xlat
cld
loope
xlat
cld
xlat
cld
fxtract
xlat
cld
aad
xlat
cld
shl
xlat
cld
int
xlat
cld
push
not
cld
sbb
xlat
cld
push
not
cld
adc
xlat
cld
or
not
cld
cmp
xlat
cld
add
xlat
cld
not
cld
cli
add
xlat
cld
div
xlat
cld
repnz
cld
in
not
cld
ljmp
cld
loop
xlat
cld
fdivp
xlat
cld
xlat
cld
divl
out
inc
xor
add
out
cmp
out
cmp
out
xor
out
mov
out
lods
xor
add
xor
add
xor
add
xor
add
mov
add
add
add
add
add
out
xor
movl
notb
out
divl
loop
mov
cmpsl
add
xor
add
cltd
sti
insl
sub
cmpsb
decl
sub
pop
jmp
rcr
add
cmp
push
cmpsb
pop
jmp
hlt
xor
bound
inc
or
out
scas
hlt
xor
inc
mov
clc
jmp
arpl
add
jae
jne
push
call
shlb
scas
push
out
cmp
add
in
add
hlt
xor
push
sub
inc
lret
aas
call
or
xchg
xor
gs
fs
add
lods
inc
or
aas
jmp
rolb
add
cmpsl
or
adc
je
push
xchg
cld
or
add
add
xor
add
mov
jne
mov
sbb
jno
bound
testl
fdivl
inc
in
outsl
jnp
in
xor
jne
dec
fdivr
rorl
mov
add
scas
je
mov
idiv
icebp
movsl
sbb
push
cld
cli
lcall
jnp
popf
repnz
push
inc
sar
lcall
testl
add
add
idivl
aas
jge
jnp
pop
mov
inc
aam
aas
jge
fnstcw
lcall
je
filds
xor
mov
sub
and
cmp
aas
jge
dec
les
btc
fdivr
inc
mov
test
cmp
mov
push
stc
mov
xlat
jg
sti
push
dec
shll
fdivr
nop
xlat
aas
stc
xor
aas
jge
add
mov
sbb
mov
jg
stc
repz
das
pop
lcall
out
jp
push
adc
xor
xchg
sub
xor
mov
out
repnz
add
and
cwtl
arpl
adc
out
jp
adc
je
jge
out
mov
jb
mov
gs
sub
jecxz
and
push
or
mov
das
xchg
cmpsl
cwtl
neg
sahf
add
xor
xchg
in
or
pop
inc
mov
out
out
mov
pop
push
add
hlt
xor
out
fcoms
push
icebp
in
out
cltd
stc
aad
out
repz
stos
jns
sbb
out
xor
add
inc
pop
stos
jns
sbb
out
add
pop
add
inc
std
test
jg
jge
fldcw
mov
sub
call
jmp
call
hlt
jecxz
out
fdivrl
aad
jg
sti
jecxz
out
js
add
push
mov
jne
pop
cmp
dec
adc
add
mov
add
pop
lods
je
add
mov
inc
jmp
add
sbb
insb
adc
cmc
ljmp
cmp
fucomip
sbb
jbe
cmc
decl
cmp
fucomip
sbb
dec
ret
mov
cs
sbb
sub
in
aaa
mov
ret
hlt
push
cmp
add
sbb
push
not
cld
mov
lret
inc
adc
inc
jge
aad
jb
push
ret
xchg
addl
inc
andb
jne
adc
cld
pushl
and
clc
mov
jge
cmpsl
mov
stc
loopne
inc
call
je
jecxz
mov
lcall
jne
stc
je
jecxz
mov
sahf
cli
mov
aam
inc
call
mov
in
jle
gs
out
xchg
or
imul
mov
data16
es
cmp
xchg
neg
mov
dec
loope
mov
and
xor
mov
sbb
pushf
and
loope
mov
jp
in
add
or
cmpsb
subl
test
pop
fsubp
movsl
mov
xor
call
loop
repz
fldl
sub
add
add
inc
jmp
lock
jl
mov
jae
int3
es
push
adc
inc
lret
sbb
in
icebp
dec
pop
push
inc
call
enter
fidivrl
adc
inc
or
popf
out
xlat
fprem
push
push
inc
add
stc
enter
fnstcw
jge
push
call
aam
mov
data16
cld
pop
loope
jnp
out
pop
add
add
jae
inc
xchg
xor
and
or
add
testl
pop
jge,pn
dec
xor
and
add
mov
add
pop
or
add
add
add
and
stc
je
mov
or
xor
and
stc
push
mov
lcall
or
popa
cmp
cli
je
mov
or
sub
add
repnz
popf
mov
push
ffree
add
mov
mov
sbb
sub
jg
in
lret
lahf
nop
sbb
mov
jg
jmp
popl
stc
jo
jg
add
xchg
or
std
jecxz
and
push
iret
sbb
lret
jnp
lret
je
iret
aas
mov
nop
or
aam
stc
adc
sbb
mov
jg
adc
aas
call
iret
cltd
pop
stc
fmuls
adc
int3
add
shlb
fs
icebp
insl
loop
lods
loopne
xor
push
xor
sahf
fisttpll
mov
inc
out
test
push
jle
and
xchg
test
push
outsb
frstor
xchg
test
push
dec
frstor
nop
test
sbb
frstor
nop
test
sbb
frstor
cltd
test
sbb
frstor
rcr
sub
repnz
jle
add
faddl
nop
test
add
fprem
stos
jo
adc
addr16
leave
clc
sub
adc
xchg
call
push
ss
mov
in
fnstcw
test
adc
fidivrl
imul
add
fnstcw
fisubrs
psubq
fstpl
jae
faddl
into
or
and
xor
mov
pop
jnp
icebp
fs
stc
xlat
clc
sahf
mov
cli
xchg
or
inc
call
aam
inc
lods
xor
lcall
push
add
aaa
test
ret
xor
aad
aaa
test
push
in
ret
testl
or
mov
je
pop
stos
cld
add
mov
je
pop
xchg
stc
pop
cmp
inc
xor
das
ss
cld
cmp
jge
fisubrl
inc
test
jnp
and
insl
adc
icebp
lcall
je
test
sbb
loopne
sub
pop
pop
mov
xor
addl
inc
call
je
out
jmp
shlb
mov
popf
out
incb
or
and
mov
pop
mov
add
and
outsb
inc
pop
jge
int
or
cld
push
aas
out
push
jecxz
jge
add
loop
xchg
std
call
add
stc
je
or
movsb
adc
sbb
adc
or
jmp
test
pop
out
fldenv
mov
enter
fldenv
mov
stc
enter
fldenv
repnz
dec
sbb
xor
add
fldcw
test
es
in
enter
fldenv
sbb
je
test
out
pop
lods
arpl
cmp
xchg
rcll
stos
pop
fldl
out
mov
add
xor
xchg
fcos
mov
pop
jnp
add
pop
adc
je
push
ljmp
call
stos
je
adc
addr16
call
push
cs
in
ja
add
hlt
enter
fidivrl
mov
inc
xor
fnstcw
aad
mov
or
jae
or
cmc
push
add
jae
sbb
clc
out
jmp
cmc
arpl
shrl
mov
jnp
and
add
clc
call
je
sbb
cmp
decl
je
fnstcw
idiv
jne
loopne
je
test
sbb
jnp
lods
xor
lcall
fsub
rorb
testl
sarl
adcl
je
or
add
add
add
adc
jnp
push
xor
mulb
push
jb
jge
xor
divb
call
je
dec
cmpsb
sbb
jle
idiv
testl
or
adc
add
outsb
mov
jle
lock
test
loop
inc
adc
mov
inc
adc
mov
inc
or
add
jg
cmc
add
sub
mov
pop
add
repz
xor
cmp
fdivr
js
aas
stc
mov
dec
xchg
sbb
and
adc
xor
roll
xor
sbb
xor
add
mov
lcall
add
idiv
mov
mov
loop
sub
out
pop
jmp
adc
test
add
add
add
add
sahf
out
xchg
pop
aad
xchg
pop
jmp
xlat
pop
loope
out
pop
in
sti
out
mov
loopne
sahf
fiadds
adc
loop
cmpsl
out
stos
add
icebp
sub
lock
lds
call
aad
inc
jb
movb
add
cltd
pop
xor
pushf
pop
sub
add
pop
push
std
xchg
pop
sbb
xchg
pop
push
in
xchg
pop
adc
nop
pusha
push
fstl
pusha
push
int
pusha
add
cmc
pop
xchg
out
inc
call
cmc
sahf
pop
je
cmpsb
cld
call
jmp
inc
call
cltd
fiaddl
jae
push
out
xor
mov
lock
sbb
insl
jne
add
hlt
aad
add
out
imul
sub
rcrl
shll
call
ret
xchg
call
test
sub
orl
rorb
cmp
orb
pop
jne
aaa
repnz
imul
pop
mov
mov
mov
sar
dec
das
jnp
mov
call
add
pop
sub
mov
add
add
add
aaa
or
leave
jnp,pt
jo
jbe
push
jg
push
cmp
movsl
cmp
stc
jl
ljmp
enter
cld
push
leave
jnp
aam
push
inc
idivb
add
leave
adc
mov
stc
or
adc
adc
jl
sti
pop
jp
rolb
mov
cld
lcall
jne
mov
pop
xchg
je
stc
jb
inc
add
pop
scas
jae
mov
loopne
add
dec
adc
mov
icebp
outsl
divl
and
xlat
loopne
test
or
and
or
call
ds
gs
pop
loope
aad
loope
push
call
push
rcrb
add
and
xchg
imul
dec
ljmp
add
push
add
xor
add
jg
in
mov
leave
jbe
mov
xor
add
or
inc
push
lods
inc
add
xlat
fcoms
add
dec
inc
xchg
pushl
mov
call
sub
lahf
repz
pop
lods
inc
repz
insl
sbb
sub
xor
bound
cmp
lahf
xor
cmp
or
aam
add
jl
add
adc
pusha
sub
jmp
adc
imul
nop
call
xor
nop
jl
mov
and
stos
dec
and
int
bnd
std
aam
fcoms
leave
aas
test
xchg
mov
or
or
ret
push
std
in
incl
dec
cmp
sbbl
adc
dec
xor
mov
pop
mov
xor
add
sub
hlt
inc
aas
jnp
sub
jbe
es
out
incl
xor
jl
dec
mov
rorl
andl
data16
incl
call
mov
inc
std
mov
and
mov
inc
test
jne
aam
push
inc
test
add
stc
push
movsl
hlt
jl
iret
add
xor
out
iret
or
xor
cmp
neg
mov
jle
inc
out
inc
cmp
imul
insb
idivl
mov
pop
insl
adc
add
add
jle
or
mov
in
loopne
jbe
add
fadd
sbb
adc
rclb
sbb
std
cmp
out
testl
or
or
into
cmp
lock
testl
js
gs
mov
inc
cmp
lock
jmp
or
fxch
adc
into
pop
movl
jae
add
sub
add
into
out
jb
push
std
inc
jno
into
aas
xor
add
mov
sbbb
sub
xchg
push
into
int
into
mov
out
inc
je
inc
js
in
sub
dec
div
mov
call
sub
or
repnz
cmp
mov
fnstenv
pushl
pop
call
sub
or
add
add
dec
dec
div
jo
call
sub
in
out
cld
mov
add
jno
push
sub
test
jne
clc
jmp
hlt
xor
mov
jecxz
clc
popf
arpl
clc
jmp
hlt
xor
jno
into
clc
add
clc
fidivs
add
sahf
xor
add
sar
sbb
lcall
mov
add
jl
sti
ljmp
clc
lcall
xor
add
add
push
sti
decl
dec
sti
decl
add
push
xor
add
push
sti
jp
clc
jmp
sti
lcall
xor
add
xor
add
push
sti
pushl
mov
fisubrs
add
into
das
add
rclb
push
insl
in
dec
mov
cld
incl
neg
cld
push
or
test
lock
frndint
push
frndint
push
insl
std
subb
js
jnp
jo
cld
push
frndint
push
inc
pusha
std
pop
in
call
je
dec
frndint
push
frndint
push
push
pusha
std
xor
icebp
ljmp
mov
cld
push
frndint
push
jg
std
or
repz
adc
cld
incl
not
cld
push
cmp
loopne
repz
fmul
out
divl
out
divl
out
divl
out
divl
out
divl
cmpsl
insl
stos
lret
mov
lret
xchg
lret
mov
addr16
addr16
stos
addr16
les
lret
lret
pop
lret
push
lret
dec
lret
inc
lret
cmp
loop
xor
into
data16
add
add
add
add
lret
and
and
lret
adc
xor
lret
add
outsb
data16
leave
pop
repnz
decl
pop
int3
clc
mov
clc
mov
pop
int3
clc
pop
dec
int3
clc
adc
clc
std
push
int3
clc
pop
push
int3
clc
dec
push
int3
clc
lea
int3
clc
jmp
adc
clc
or
adc
clc
in
fcmovne
clc
cmp
add
lret
clc
gs
clc
xchg
fcmovne
clc
jmp
aad
clc
test
lret
clc
and
lret
clc
mov
lret
clc
stos
lcall
mov
push
sti
jmp
sti
decl
dec
sti
lcall
sti
call
dec
sti
fidivs
add
cmp
sti
call
cmp
sti
incl
mov
sti
push
cmp
sti
incl
sti
call
cmp
sti
fdivrs
sti
jmp
cmp
sti
ljmp
cmp
sti
ljmp
sti
clc
inc
sti
fadds
push
add
outsb
std
clc
or
lock
outsl
std
call
lods
outsb
std
fcoms
std
add
xchg
outsb
std
enter
shlb
std
mov
shrl
test
insl
std
mov
or
insl
std
mov
insl
std
and
std
js
outsb
std
jo
outsb
std
push
or
outsb
std
push
and
dec
fldcw
inc
shrl
cmc
push
std
sub
push
jo
fs
or
mov
mov
mov
repnz
ljmp
pop
fcmovb
cli
pop
rol
out
pop
lret
pop
ret
je
and
sub
mov
mov
movb
xchg
ljmp
jne,pt
adc
jb
and
movb
pop
jo
push
fs
xchg
je
inc
movb
xor
mov
stos
ret
clc
in
ret
clc
fisttpll
ret
clc
mov
add
mov
clc
push
clc
popa
push
clc
aaa
popa
clc
adc
clc
inc
inc
clc
and
clc
int
clc
mov
and
clc
fldt
clc
jmp
clc
push
or
clc
cmp
or
clc
cltd
add
clc
jmp
ret
clc
gs
ret
clc
xchg
leave
ret
clc
ret
rol
scas
leave
ret
clc
rol
ret
clc
add
sti
decl
sti
cmp
sti
call
ds
call
mov
sti
call
sti
jmp
sti
lcall
sti
call
sti
ljmp
mov
sti
call
mov
sti
pushl
mov
incl
shlb
lcall
sti
decl
cltd
sti
call
sti
pushl
sti
decl
xor
andb
adcb
orb
pop
xor
add
push
mov
xor
cld
push
jecxz
cld
and
pushf
cld
sbb
popf
cld
adc
popf
cld
or
popf
cld
clc
lea
cld
add
mov
sahf
cld
fcoms
popf
cld
enter
rorb
cld
mov
cmc
popf
cld
test
popf
cld
mov
stos
sahf
cld
nop
jno
cld
mov
sahf
cld
sbbb
pushl
cld
push
dec
popf
cld
pusha
frndint
push
adcl
inc
ret
sahf
fwait
cmp
rcrb
sub
aam
add
ret
repnz
sbb
negb
or
mov
add
movsb
cltd
sti
ret
repz
jmp
pop
cltd
jecxz
pop
cltd
fcmovnb
xor
lret
ret
ret
ret
mov
ret
stos
ret
mov
ret
xchg
ret
mov
mov
add
lcall
fs
imul
fwait
arpl
decl
add
add
add
jne
insb
pop
pop
xchg
kmovw
jnp
clc
test
push
clc
pop
pop
xchg
clc
ret
mov
clc
out
clc
push
jl
clc
ret
jb
clc
lds
clc
lods
clc
test
mov
clc
fildl
clc
mov
add
clc
mov
imul
clc
popf
pop
clc
add
cmpsl
sti
incl
test
incl
call
lcall
ljmp
call
test
pushl
cmpsl
sti
inc
cmpsl
sti
pushl
lcall
scas
lcall
repnz
sti
push
cmpsb
sti
decl
sti
call
sti
incl
ds
sti
call
sti
ficompl
sti
fcomps
sti
inc
lcall
add
sti
push
cltd
xchg
cld
jo
xchg
cld
push
jbe
cld
pop
add
cld
dec
xor
cld
inc
scas
xchg
cld
cmp
cld
push
fwait
cmpsl
cld
sub
cld
sbb
cmpsl
cld
adc
cmpsl
cld
or
mov
add
add
add
add
mov
cld
call
dec
mov
cld
rcrb
test
enter
shr
cld
mov
leave
mov
cld
mov
popa
sahf
cld
nop
jae
cld
mov
mov
add
xor
mov
divl
out
divl
loope
divl
movsb
mov
add
add
add
mov
jb
sub
js
sbb
andb
mov
sti
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
mov
mov
mov
in
divl
incl
hlt
xor
push
push
mov
add
add
add
add
mov
clc
fsts
mov
clc
aad
mov
clc
test
push
mov
clc
xchg
push
mov
clc
jns
mov
clc
addr16
mov
clc
jae
mov
clc
xchg
mov
clc
mov
lcall
sbbl
add
add
add
add
xor
add
sti
ljmp
sti
lcall
sti
inc
xchg
sti
ljmp
call
xor
add
dec
jns
inc
pop
insl
orb
jb
imul
das
aas
gs
gs
insl
jae
outsb
jae
data16
xchg
dec
outsb
push
xor
rorl
push
xchg
inc
je
cmp
insl
xor
add
add
add
add
inc
jno
sub
jb
inc
popa
je
push
pop
insb
std
push
pop
je
inc
data16
mov
jo
adc
push
arpl
cld
push
sti
jbe
je
in
push
leave
cld
nop
data16
arpl
pop
cmp
aam
pusha
dec
fisubl
cld
lods
sti
jbe
arpl
test
add
cmp
push
arpl
cld
jmp
push
pop
inc
outsb
dec
push
push
outsb
push
arpl
imul
es
push
adc
inc
or
and
cmpsb
xor
adc
imul
cld
add
addr16
lds
push
shll
xor
add
push
cmpsb
jne
inc
shlb
mov
xchg
pusha
stos
inc
shrb
mov
cli
dec
mov
push
test
lods
xor
mov
jno
add
ds
je
dec
sub
xor
jbe
push
sbb
aas
dec
jbe
xor
daa
aas
add
dec
inc
inc
dec
dec
add
sti
insl
add
inc
arpl
sbb
arpl
sti
pop
ljmp
insl
adc
xor
bound
and
jmp
roll
jecxz
inc
fucomi
inc
outsb
jmp
mov
push
mov
mov
xor
insb
imul
mov
add
sbbb
mov
add
clc
inc
insl
push
imul
loopne
insl
add
inc
insb
gs
pusha
add
scas
mov
add
add
add
add
pop
cmp
inc
push
outsl
jecxz
insb
je
jb
je
xor
add
dec
insb
je
jb
je
pusha
addr16
notl
inc
cmpsb
dec
push
cmpsb
xor
outsl
cmp
pop
pop
add
dec
jne
inc
jno
cmp
outsl
jl
pop
outsb
insl
pop
cmp
inc
je
mov
je
xchg
orl
add
pop
popa
add
push
pop
fs
pop
pop
addr16
aas
arpl
pop
notl
je
dec
push
popa
pop
testl
pop
add
add
inc
sbb
pop
insl
add
pop
pop
pop
lret
cmc
sbbl
jmp
popa
ja
cld
std
inc
insb
cmp
fcmove
cld
call
add
fwait
popa
je
stos
push
imul
push
testl
push
dec
divl
hlt
add
cmp
dec
dec
sub
inc
dec
xor
dec
xor
inc
or
xor
add
dec
add
dec
cld
pusha
inc
dec
sub
insl
or
pop
add
xor
ss
fisttpl
inc
xlat
cmp
add
add
add
inc
int3
inc
rolb
divl
daa
add
dec
enter
ret
pusha
divl
add
inc
xchg
push
enter
divl
ret
add
dec
xchg
pusha
stos
dec
mov
inc
add
mov
dec
imul
sub
dec
push
inc
push
xor
dec
push
cmp
jbe
push
dec
fs
imulb
pop
add
addr16
cmp
push
sti
into
and
rsqrtps
cmc
or
lret
loope
arpl
mov
gs
sbb
mov
jb
int
xor
lock
jb
mov
cmpsl
cmp
nop
nop
push
push
jmp
lea
add
addr16
xor
fs
push
js
and
and
insb
add
add
add
add
add
inc
pop
dec
adc
js
xor
add
push
je
das
dec
fs
add
data16
inc
gs
add
outsb
mov
dec
add
std
cmp
push
mov
sbb
dec
aas
inc
popa
jbe
pusha
jno
inc
push
gs
cwtl
push
add
andb
jge
outsb
xchg
cmp
xorl
dec
imul
add
add
test
cmp
movsb
pop
je
mov
pop
addr16
gs
push
add
in
pop
push
dec
pop
js
push
pop
inc
outsb
push
insl
add
sti
push
addr16
jno
arpl
pop
arpl
cwtl
add
push
inc
or
push
addr16
mov
jo
push
mov
insb
jecxz
popa
add
movb
pop
jb
lea
jo
add
lock
add
testl
addr16
push
nop
inc
test
inc
xor
push
cmpsb
xor
dec
nop
inc
test
push
pop
dec
ds
imul
and
push
push
and
pusha
push
pop
out
icebp
sub
popa
adc
imul
or
add
adc
push
pop
out
mov
pusha
aad
in
shrl
ds
inc
les
xor
mov
inc
arpl
ret
push
pop
test
cmc
insl
mov
dec
pop
mov
in
sub
imul
pop
pop
push
fs
dec
dec
push
add
pop
inc
sub
lcall
sbb
outsb
sbb
cmp
imul
add
lock
xor
sub
fsts
sbb
addr16
enter
jo
cmp
dec
je
pop
push
insb
ss
insb
jo
cld
dec
outsb
outsl
imul
add
cltd
sub
insl
jae
fs
push
data16
add
add
add
add
dec
jo
inc
dec
outsl
dec
sub
insb
cmp
gs
push
popa
gs
outsl
pop
inc
aaa
push
pop
add
cmp
dec
je
enter
repz
jo
out
pop
push
mov
jo
testl
outsb
cmp
add
mov
dec
fcmovbe
jno
rclb
pusha
add
roll
inc
lcall
add
add
add
xchg
xchg
pop
arpl
test
arpl
andb
bound
movsb
pop
push
jno
data16
add
cld
xchg
sti
push
je
add
push
notb
dec
imull
sub
insl
repz
je
cmp
xor
add
dec
insl
sbb
js
negl
inc
shlb
rcrb
mov
xor
pop
movsb
push
lret
pop
lcall
jb
adc
push
mov
xor
jl
xchg
divb
cmc
outsb
add
xor
pop
pop
and
dec
pusha
dec
adc
insb
divl
stc
or
and
push
add
jae
push
cmp
sbb
out
jne
and
and
add
pop
sti
push
push
and
add
adc
mov
push
iret
sub
cld
std
movsl
fbld
mov
jmp
cmpsb
adc
sti
jb
hlt
jae
movsl
lahf
and
jl
push
arpl
pop
push
mov
out
add
pop
xor
insb
inc
add
add
cmp
arpl
ljmp
and
je
and
sbb
inc
out
sti
bound
push
cli
push
add
xor
gs
insw
outsb
daa
je
cmp
pop
insl
xor
aas
gs
pusha
insb
xor
jae
jl
pop
jne
pop
imul
add
xorl
jo
or
jbe
or
push
add
xor
inc
sbbl
gs
push
jb
adc
cmp
xor
popa
outsb
aas
sub
and
xor
pop
popa
loop
dec
or
gs
push
idivl
push
push
add
stos
das
cs
inc
add
hlt
out
imul
dec
cmp
adcl
testl
popa
outsb
mov
jae
push
leave
popa
imul
incl
ret
popa
outsb
xchg
pop
gs
mov
arpl
imul
add
pop
ljmp
push
jb
bound
pop
aas
not
call
addr16
insb
sub
add
repz
pop
insl
inc
xor
inc
adc
jno
xor
pop
sbb
or
adc
cmc
pop
rclb
in
push
scas
and
pop
lods
and
out
inc
xor
lret
outsl
clc
btr
cmpsb
pop
popf
pop
mov
jbe
sbb
add
mov
push
test
mov
pop
xchg
pop
push
es
popa
sub
push
pop
dec
add
pop
and
sub
idivb
pop
add
lock
adc
adc
repz
adc
ja
or
add
xlat
add
insl
ficompl
adc
lret
pop
dec
add
rcrb
pop
aad
sbb
xchg
or
add
loopne
cs
mov
insb
jmp
popf
sbb
insl
mov
push
jmp
add
add
add
cmp
fwait
pop
and
popa
and
bound
xor
add
imul
and
or
sahf
and
je
sti
and
in
add
jae
sub
je
in
pop
dec
add
add
jb
pop
inc
arpl
add
stos
xor
js
sbb
orb
ja
imul
das
aas
gs
jno
add
gs
imul
imul
cmp
and
outsl
inc
or
fisubrs
pop
imul
pop
jae
out
push
sub
inc
pop
repnz
push
and
ds
inc
sbb
and
pop
popa
sbb
insl
mull
std
inc
sbb
dec
or
push
jno
movsl
push
pop
rclb
insb
add
ljmp
lds
push
negl
push
sahf
jns
imul
in
popa
sahf
push
pop
test
dec
add
mov
pop
pop
fs
pop
addr16
push
push
xor
add
and
imulb
cmp
push
add
add
in
cmp
and
arpl
shlb
popl
cmp
add
sbb
popa
or
push
out
pusha
add
or
and
push
loope
dec
divl
outsb
add
or
lret
push
cmpsb
add
add
mov
in
movsl
add
xor
pusha
mov
mov
repnz
or
add
aaa
sub
sbb
add
add
bound
or
sub
add
sti
icebp
bound
adc
in
pop
sbb
div
bound
and
push
push
in
add
adc
insb
enter
loope
xor
push
idiv
insl
enter
enter
les
xor
loope
icebp
bound
xchg
arpl
add
inc
jmp
popf
xor
xchg
adc
push
pop
je
add
xor
pop
imul
and
add
inc
jo
incl
ficoms
arpl
add
add
push
jnp
push
jb
adc
add
sub
lock
arpl
add
and
sbb
add
int3
xor
gs
cmc
pusha
outsb
xor
outsb
inc
dec
xor
pop
pop
imul
push
pop
test
cmp
cwtl
cld
pop
test
je
mov
insl
push
scas
pop
push
negl
incb
cld
dec
jo
stc
outsl
arpl
push
std
inc
adc
and
pop
popa
adc
fdiv
push
push
fs
cmp
or
pop
pop
add
pop
push
jno
test
call
cmp
addr16
pop
arpl
fscale
inc
fiaddl
push
pop
movsl
jae
je
fistpl
testl
mov
sahf
add
or
dec
push
push
test
lcall
cld
dec
jb
adc
push
dec
adc
divl
jno
ss
cmp
add
adc
es
inc
jb
cld
out
jecxz
cmp
or
add
adc
jb
xor
push
aam
out
je
stos
push
cmpsb
sbb
addr16
sbb
add
dec
push
mov
fs
repnz
bound
test
push
orl
imul
add
insl
mov
sti
out
imul
and
cmp
fs
push
insl
dec
sbb
push
jmp
push
sbb
dec
or
adc
xor
bound
and
pop
adc
repz
rclb
std
iret
mull
scas
jmp
int3
xor
and
add
mov
add
sbb
das
push
pop
push
add
das
dec
add
je
jnp
insl
dec
push
gs
jno
data16
cs
add
and
pop
or
or
sbb
je
xor
imul
gs
push
imul
popa
fmull
push
push
pop
outsl
leave
sub
add
pop
addr16
incb
stc
cmp
dec
cs
add
sbb
je
cmp
insl
dec
sub
gs
divl
test
dec
arpl
int3
popa
push
rclb
lcall
addr16
cld
daa
cmc
ret
pop
aam
insl
dec
sbb
jo
cwtl
cld
jne
lret
and
bound
repnz
add
and
dec
sbb
dec
arpl
imulb
and
fs
add
inc
std
inc
add
inc
dec
arpl
cmp
inc
inc
notl
xor
sub
fs
push
gs
mov
movb
sbb
push
pop
mov
xchg
sbb
out
fsubrl
lcall
or
pop
stos
sbb
push
pop
adc
divl
cmp
aaa
dec
and
push
and
add
add
add
add
xor
push
adc
inc
push
adc
dec
add
and
inc
imul
adc
or
psubw
out
es
aam
repz
fisttps
jno
scas
pushl
rorl
push
jmp
mov
pop
push
xchg
and
xchg
and
mov
in
bound
add
or
out
jae
dec
sbb
hlt
cli
ljmp
pop
cmc
bound
and
add
push
jae
and
aaa
and
and
sbb
nopl
sti
imull
or
or
add
popaw
outsb
push
sub
add
push
xor
add
add
add
add
add
arpl
add
xor
add
je
cmp
jae
push
addr16
xor
ja
outsl
sub
add
add
inc
xor
daa
pcmpgtb
arpl
inc
xor
popa
outsb
loop
popa
outsb
inc
or
add
cmp
push
repz
add
add
inc
add
inc
popa
outsb
in
pop
je
xor
je
lret
lds
push
inc
fldt
add
add
push
add
movb
mov
dec
pop
mov
dec
xchg
fimull
cwtl
lods
xor
negl
xor
les
gs
insb
arpl
dec
insb
pop
xlat
pop
push
stos
push
insl
negl
and
hlt
outsl
add
in
cld
inc
add
add
push
fs
dec
push
pop
pop
arpl
cmp
xor
insl
push
pop
xor
push
jmp
or
psadbw
pmaddwd
xor
add
and
push
ret
out
lds
pop
aad
ljmp
xor
xor
add
and
outsl
xchg
setbe
or
fwait
add
and
add
mov
jmp
xor
add
pusha
push
inc
cmc
inc
push
sub
inc
pop
aas
adc
divl
scas
add
push
inc
push
or
incl
or
cld
lcall
fldl
outsb
push
rorb
insl
sbb
or
int
add
cli
icebp
std
add
sbb
or
mov
pushf
popf
les
push
mov
arpl
add
push
add
rcll
mov
cmp
imul
hlt
add
lods
push
and
push
dec
punpckhwd
cld
jae
sbb
add
pop
outsb
add
push
je
out
add
cmp
inc
mov
pop
add
jmp
or
push
add
pop
or
sti
pop
pop
insb
add
dec
add
das
cmp
imul
xor
imul
imul
das
cmp
pushl
cmp
popa
adcb
jne
adc
sbb
cmp
jae
jnp
inc
gs
pop
pop
jb
or
add
je
div
push
imul
inc
push
ja
pop
inc
arpl
add
push
imul
adc
inc
in
pop
insb
rorl
imul
xchg
xor
dec
pop
je
xor
popa
ret
jg
addr16
xchg
imul
addr16
je
je
sbbb
mov
outsb
sahf
jno
dec
mov
add
test
dec
pop
mov
jo
mov
arpl
push
push
mul
add
mov
push
mov
arpl
aad
push
add
xor
push
inc
adc
inc
sbb
push
pop
cmp
add
xor
push
and
sub
dec
or
sbb
adc
flds
pop
push
into
push
out
movsl
cs
pop
lret
std
add
push
add
hlt
add
push
rclb
or
aas
enter
push
cs
mov
adc
pop
stos
and
imul
add
add
popa
xor
push
imul
push
pop
mov
adc
push
push
sbb
insl
mov
adc
sbb
push
dec
in
pop
pop
inc
adc
adc
dec
and
pop
push
jmp
push
sbb
outsb
adc
pop
inc
or
cmc
insl
add
sbb
sti
add
fdivrp
sbb
sbb
add
and
rcrb
les
vpunpckhqdq
les
frstpm(287
negl
pop
lcall
jae
lods
adc
dec
add
mul
bound
cmp
pop
add
pop
inc
jbe
add
dec
xor
jno
pop
je
or
ja
mov
incl
sar
insb
popa
sub
sahf
xor
inc
loopne
dec
dec
jge
es
add
push
outsl
jbe
clc
add
testl
add
gs
add
inc
cmc
cmp
dec
xor
inc
or
arpl
push
push
xor
outsb
or
push
push
add
gs
or
gs
addl
or
pop
imul
inc
pop
mov
pop
push
test
gs
and
outsb
adc
dec
imul
add
add
negl
add
push
push
insb
dec
sbb
push
dec
adc
dec
push
mul
add
xor
cmp
jmp
das
jo
sub
test
cld
je
aaa
pop
je
dec
pop
je
das
das
jo
push
add
sub
dec
stos
jns
imul
cld
dec
xchg
outsb
dec
arpl
xchg
sub
xor
add
fwait
imul
jns
add
xchg
or
xor
adc
inc
or
gs
or
cmp
aas
sub
and
dec
das
or
and
xor
add
and
dec
sbb
and
ret
xor
and
inc
divl
sub
stos
sbb
xor
xor
pop
mov
rcrl
psrlq
xchg
std
out
push
xor
lcall
arpl
hlt
xor
mov
and
inc
sahf
hlt
pusha
add
sbb
insl
push
adc
push
cmp
sbb
inc
inc
das
adc
and
push
repz
sbb
adc
xor
cmp
sbb
scas
sbb
push
add
aad
sbb
icebp
cmc
mov
add
enter
hlt
add
aas
adc
adc
xor
imul
push
cmp
cs
imul
das
aas
gs
pop
imul
pop
insl
imul
push
sahf
das
dec
gs
dec
fs
xor
pop
popa
lret
je
or
add
push
dec
inc
xor
pop
popa
add
cmp
or
imul
gs
das
insb
add
push
popa
je
or
imul
add
mov
andb
outsl
addr16
jg
cld
pop
test
inc
outsb
push
movsl
xor
pop
popa
test
pop
push
lret
dec
ret
aaa
inc
add
cld
push
shr
pop
insb
imull
add
add
inc
pop
imul
push
addr16
pop
pop
pop
out
cld
das
testl
cmp
ret
inc
bound
inc
add
xchg
add
xchg
popa
pop
mov
or
push
divl
dec
add
or
gs
or
push
divl
cmc
add
pop
les
arpl
inc
inc
xor
add
or
inc
push
sbb
push
push
xor
add
or
sub
inc
divl
testb
pop
push
inc
or
and
in
das
inc
sbb
es
aam
xor
out
xor
into
add
add
cs
push
aam
and
sbb
add
add
add
add
jecxz
aad
or
push
hlt
sbb
inc
int
add
hlt
xlat
std
cltd
push
add
jo
inc
add
ja
hlt
icebp
inc
mov
pop
sub
hlt
loope
test
adc
sti
hlt
pushl
adc
add
adc
push
lock
sbb
shlb
add
adc
ficoml
sbb
mov
push
add
add
cmp
je
stc
insl
gs
call
dec
push
dec
stc
insl
gs
dec
cmp
pop
je
xor
add
cmp
jmp
outsb
outsl
lods
ljmp
into
xor
add
pop
push
cmp
out
imul
dec
push
iret
dec
arpl
add
add
repz
cmp
add
inc
sub
and
or
add
popa
xor
inc
testl
je
cmp
je
test
lcall
outsb
stos
frstor
xchg
gs
xchg
jo
pop
mov
mov
pusha
lret
mull
push
dec
addr16
dec
dec
stos
push
arpl
pop
lret
push
imul
cld
cmp
or
sbb
dec
arpl
outsb
adc
popa
outsb
add
jae
pop
popa
outsb
add
popa
addr16
push
arpl
push
pop
dec
jmp
adc
xor
add
adc
pop
mov
pop
pusha
fcoms
or
icebp
add
pop
or
psllq
sbb
roll
in
mov
scas
repz
push
add
add
data16
out
lret
push
pusha
add
pop
inc
adc
push
cmp
jnp
divl
cmpsb
xor
lcall
xor
das
add
dec
push
add
cmp
lock
or
xor
adc
cmp
adc
sbb
add
jmp
test
adc
mov
add
sbb
hlt
cmpsl
ljmp
mov
je
xchg
in
arpl
hlt
fdivr
scas
push
add
je
pop
add
imul
and
outsl
mov
sti
bound
adc
xor
clc
jae
inc
dec
fs
leave
movq
je
push
in
arpl
sub
push
add
push
add
loope
jo
adc
sbb
imul
xor
gs
pop
je
in
outsb
fbstp
add
out
gs
pop
je
in
jae
dec
pop
outsb
cmp
pop
add
adc
mov
in
dec
jle
pusha
outsl
xor
cmp
push
imul
gs
outsw
add
pop
inc
mov
imul
out
gs
pop
je
push
push
pop
adc
outsb
or
pop
testl
push
daa
pop
outsl
loop
push
je
push
inc
add
inc
add
lret
and
pusha
dec
lcall
js
cltd
cld
lods
test
push
arpl
arpl
inc
pop
arpl
push
outsl
inc
add
neg
cld
inc
dec
lods
pop
outsb
popa
mov
dec
inc
mov
dec
pop
or
mov
cld
lahf
not
push
je
xor
adc
xor
pop
adc
dec
mov
add
push
mov
adc
dec
aam
sbb
divl
push
add
sbb
pop
rcrl
add
stos
adc
xor
psllq
in
pop
pop
xchg
push
or
xchg
loope
add
jecxz
push
ret
pop
xchg
repz
or
add
xor
pop
pop
filds
dec
das
adc
pop
push
pushl
divl
xchg
cmp
in
test
add
iret
in
ds
pop
cs
pop
sbb
pushl
rolb
cmp
sbb
icebp
imul
sti
mulb
mov
sub
add
out
insl
or
xor
jl
mulb
rcrl
arpl
fsts
jae
hlt
testb
loopne
sbb
push
fs
cmc
jmp
imul
cmp
adc
sbb
pop
sbb
jmp
mov
fs
clc
decl
push
jne
clc
data16
xor
add
leave
fsubrl
adc
insb
mov
adc
cmp
gs
sub
add
or
push
ja
fbld
xchg
gs
adc
push
xor
add
sub
cmp
insl
arpl
and
incl
adc
add
popa
jae
adc
jl
jae
fidivs
roll
add
mov
cld
sub
into
dec
push
or
push
mov
pop
je
stc
add
ficomps
in
pop
add
xlat
clc
push
fstl
aam
cld
xor
and
in
pop
imul
cld
pop
mov
xchg
negl
add
and
xchg
cs
cmc
ss
insl
lcall
dec
sti
mov
add
add
add
add
dec
add
pop
lret
arpl
cld
xchg
cmpsb
dec
je
xor
push
loop
push
push
pop
addb
cmp
mov
or
xor
add
or
inc
add
push
pop
or
adc
xor
arpl
or
pop
shr
cs
aam
sbb
push
and
cld
or
xor
ret
cs
sbb
push
fwait
adc
pusha
mov
push
pop
xchg
iret
push
popf
out
iret
push
mov
aad
lahf
das
stos
pop
outsl
adc
push
arpl
into
bound
add
cmp
sub
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
add
add
add
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
fidivs
add
into
xor
add
xor
add
xor
add
xor
add
xor
add
xchg
mov
sahf
xor
add
mov
add
or
cmp
cmp
add
xor
add
add
dec
idiv
pop
xor
add
add
push
sub
add
into
sub
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
cltd
pop
std
xor
cld
push
cltd
les
add
lcall
negl
cld
push
cltd
cld
push
fstps
push
cltd
cld
push
test
cld
push
cltd
cld
push
sub
cld
push
cltd
cld
pushl
xchg
adc
cltd
cld
call
push
jg
mov
cld
push
cltd
add
mov
cld
call
enter
rorl
jns
cltd
add
jmp
mov
cld
dec
dec
sbb
imul
cltd
pushf
movsl
adc
mov
jb
icebp
das
subb
test
mov
test
lret
sbb
xor
jg
mov
mov
mov
ljmp
sbb
add
insl
jp
movsb
in
out
mov
jle
mov
outsb
test
lea
add
add
add
adc
adcl
into
adc
mov
mov
imul
repnz
testl
and
jne
jb
lods
jmp
mov
jno
xchg
dec
mov
pop
fdivl
mov
push
dec
iret
out
dec
fwait
rcll
inc
pop
sbb
push
bound
cmp
jns
push
jbe
sub
add
sub
nop
or
dec
dec
aas
dec
jae
hlt
xor
mov
jbe
lods
sub
movsl
inc
jl
sbb
sub
add
or
aas
in
xor
jmp
stos
in
aas
int
and
out
push
pop
andl
test
or
aas
sahf
or
mov
add
add
add
jg
inc
test
int
cmp
aas
int3
mov
or
or
aas
jmp
push
sarl
push
les
lcall
inc
jmp
mov
xor
jne
out
test
sub
xorb
pop
jne
enter
jb
jp
jb
mov
add
cs
mov
int
fs
fildl
fists
stos
xor
jno
es
jle
clc
mov
mov
and
mov
into
iret
or
aas
mov
push
incl
arpl
sbb
xchg
jb
lret
sub
xor
fimull
das
xchg
lret
xchg
outsb
jo
ficoml
dec
popa
gs
test
popa
and
outsb
hlt
emms
lock
or
adc
clc
aas
loop
int
push
pop
pop
sti
aam
fstpl
pop
push
cmpsb
jo
xchg
xchg
cld
mov
test
cmpb
xchg
sbb
sahf
sub
mov
sub
add
xor
add
xor
add
xor
inc
mov
out
inc
add
xor
add
xor
out
xor
sarl
call
hlt
xor
fdivp
xor
jmp
mov
call
hlt
xor
out
hlt
xor
jmp
hlt
xor
add
hlt
xor
jmp
jbe
add
or
pushl
add
call
cmp
add
add
add
add
add
cmp
add
jbe
add
jbe
add
jbe
add
pop
mov
add
scas
cmp
and
cmp
inc
mov
add
scas
cmp
jbe
cmp
push
scas
cmp
push
cmp
push
scas
cmp
pop
scas
cmp
bound
cmp
mov
add
mov
add
cli
scas
cmp
cmpsb
mov
add
scas
cmp
loop
cmp
loop
cmp
inc
scas
cmp
sub
cmp
jb
cmp
pop
scas
cmp
mov
cmp
jle
cmp
dec
mov
add
lds
aas
notl
cmpl
in
cmpl
test
xor
xor
idivl
xor
imul
xor
testl
add
add
add
add
jge
inc
imull
xor
inc
not
xor
inc
imull
xor
inc
idivl
xor
inc
notl
xor
inc
mull
ss
negl
ss
mull
inc
divl
jecxz
mov
mov
mov
cmp
xor
cmp
xor
cmp
mov
lret
cmp
xor
aaa
mov
mov
mov
stos
aaa
mov
dec
aaa
mov
out
divl
out
divl
out
divl
out
divl
out
divl
call
add
xor
add
xor
add
xor
stc
xor
add
xor
add
xor
add
xor
scas
fnstenv
out
divl
out
divl
add
hlt
xor
test
dec
cmp
jmp
hlt
xor
jmp
nop
cmp
jmp
hlt
xor
jmp
cmp
jmp
hlt
xor
jmp
dec
cmp
jmp
hlt
xor
jmp
push
cmp
jmp
hlt
xor
jmp
nop
cmp
jmp
hlt
xor
jmp
nop
cmp
jmp
add
add
add
xor
jmp
hlt
xor
in
cmp
add
sub
add
stos
cmp
pop
sub
add
dec
sub
cmp
pop
sub
add
dec
sub
cmp
push
sub
add
push
sub
cmp
push
sub
add
push
sub
cmp
fidivs
add
fidivs
add
xor
add
and
add
xor
add
xor
add
xor
add
cmp
sahf
xor
add
mov
push
dec
or
testl
cld
push
pop
or
testl
cld
push
jbe
testl
cld
push
cmp
testl
add
add
add
add
mov
push
loop
testl
cld
push
mov
testl
cld
push
into
add
testl
cld
push
flds
divl
out
divl
out
divl
out
divl
xor
shll
out
divl
out
divl
out
divl
lret
xor
add
xor
add
xor
add
divl
inc
or
xor
add
xor
add
xor
add
xor
icebp
xor
add
xor
add
xor
add
xor
add
divl
out
divl
out
divl
addr16
divl
out
divl
out
divl
sbb
adc
out
divl
out
divl
add
hlt
xor
into
stc
ss
hlt
xor
jmp
hlt
xor
flds
mov
add
hlt
xor
jmp
hlt
xor
dec
xor
add
hlt
xor
jmp
hlt
xor
leave
cmp
jmp
hlt
xor
jmp
xor
xor
jmp
hlt
xor
adc
add
hlt
xor
jmp
hlt
xor
xor
add
hlt
xor
jmp
mov
add
add
xor
add
xor
add
xor
add
cmp
sahf
xor
add
xor
add
cmp
sahf
xor
add
xor
add
mov
add
add
dec
xor
add
add
xchg
add
dec
xor
add
add
dec
scas
cmp
push
xor
add
xor
add
xor
add
scas
cmp
push
xor
add
push
xor
add
xor
add
mov
add
xor
add
xor
add
mov
push
ret
jg
testl
cld
push
or
push
mov
push
mov
push
xor
push
mov
push
mov
push
and
push
mov
push
mov
push
mov
testl
add
add
add
add
mov
push
jle
testl
cld
push
jle
testl
cld
push
ljmp
divl
out
divl
out
divl
cmp
add
xor
add
xor
add
xor
jmpw
add
xor
add
xor
add
xor
leave
xor
add
xor
add
xor
add
divl
add
add
xor
add
xor
xor
or
out
divl
lcall
xor
das
mov
adc
mov
comiss
xor
das
mov
and
mov
pop
das
mov
add
sbb
pushl
icebp
call
hlt
xor
jmp
hlt
xor
jmp
add
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
add
add
push
add
fisubrs
add
add
sub
add
fisubrs
add
into
sub
add
sahf
sub
add
mov
add
sahf
sub
add
mov
add
pop
sub
add
dec
sub
add
pop
sub
add
dec
sub
add
push
sub
add
push
sub
add
add
add
add
sub
cld
push
xchg
push
xchg
push
xchg
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
cld
push
pop
or
idivl
push
shlb
add
mov
sbb
jb
xor
sbb
dec
pop
bnd
add
pop
cmp
negl
add
dec
in
cld
adc
pop
in
stc
in
in
icebp
in
fdivl
pop
jmp
sub
lock
arpl
fs
push
lock
sub
mov
lock
push
lock
pop
lock
sub
jmp
adc
adc
add
sti
lock
mov
lock
xchg
lock
fwait
lock
arpl
add
icebp
push
sub
cmp
xor
and
inc
sub
shl
fs
jecxz
in
jmp
adc
adc
add
sti
in
mov
add
adc
cmp
and
cmp
xchg
cmp
mov
cmp
rclb
push
lret
pop
loop
cmp
flds
in
add
adc
adc
mov
add
lea
loop
popf
mov
ret
xchg
xchg
cmp
mov
cmp
push
push
cmp
dec
bound
frstor
clc
jmp
hlt
xor
add
add
dec
bound
cli
fs
sub
xor
fs
xor
fs
xor
fs
fs
add
gs
xor
movsb
xor
gs
or
xor
gs
cmp
xor
gs
xor
bound
lret
xor
popa
and
stos
bound
dec
bound
bound
bound
bound
bound
mov
bound
mov
xor
jnp
jmp
test
sti
push
pop
out
or
in
out
sbb
cmp
sub
arpl
cmp
sbb
dec
lds
out
pop
lds
out
imul
out
jnp
fucomi
mov
out
stos
and
push
out
lret
add
out
jmp
push
out
sti
add
test
sbb
cmp
out
cmp
popf
out
dec
les
out
imul
out
jnp
fucomp
mov
lock
add
out
stos
and
lock
cmp
mov
sub
lret
testl
out
cld
and
out
or
or
int3
and
out
fsubl
lock
and
lock
lock
imul
and
lock
lock
lock
and
xor
notb
testb
imulb
and
js
push
testl
add
add
pop
pop
jae
fsubl
out
cmp
mov
sub
mov
or
xchg
out
cld
and
lock
push
lock
dec
addr16
xor
pusha
ja
mov
xchg
int
push
xor
dec
imul
in
add
repz
rcll
inc
xor
daa
outsl
xor
sbb
xor
pop
mov
ss
fcmovnb
cmp
test
and
repz
jno
mov
jge
xchg
xor
int3
shlb
mov
imul
nop
dec
cmp
lahf
cmpb
mov
cmp
popa
cmp
mov
dec
aas
in
push
cmpb
push
enter
clc
lcall
clc
jle
add
pop
pop
cmp
int
pusha
xor
loopne
sbb
xor
arpl
xor
js
mov
xor
imul
aaa
into
push
sbb
push
pop
xchg
cmp
sbb
adcl
mov
push
test
push
sarl
call
pop
sbb
pushf
pop
arpl
push
pop
mov
cmp
pushf
jmp
mov
fs
sub
rcrl
cmp
in
adc
sub
add
add
add
adc
arpl
shl
cli
xor
das
icebp
and
jno
scas
out
loope
out
fcoms
insb
decl
jmp
push
push
in
ss
xor
imul
in
stc
daa
dec
in
or
dec
in
push
es
addr16
push
in
jle
loope
mov
in
xchg
push
mov
mov
out
out
mul
push
repnz
lds
push
cmc
dec
and
add
sbb
out
aad
mov
fistpl
xchg
icebp
fcompl
push
cmp
pop
push
out
xchg
and
in
aam
mov
push
sub
in
in
sub
insl
sub
jle
xor
jmp
sub
out
and
call
lcall
out
es
sbb
addr16
xor
repz
and
add
and
hlt
jg
pop
cmc
jmp
and
movsl
cmpsl
sub
test
xor
cwtl
mov
cmp
inc
xor
xchg
xor
cmp
xchg
xor
popa
or
push
pop
jno
clc
dec
and
inc
dec
fnsave
mov
sbb
adcb
fimuls
inc
ss
cmp
xor
or
fadds
cmp
fsts
push
rorl
leave
hlt
xor
jmp
les
clc
stos
adc
add
dec
xor
pop
xchg
sub
xor
pusha
xor
pop
push
xor
mov
xor
repz
popa
jnp
sbb
aaa
push
jge
cli
pop
out
jae
mov
pop
int3
cmp
cmp
cmp
mov
clc
lcall
xchg
clc
jmp
add
push
pop
stc
xor
bound
xor
popa
jge
dec
bound
xor
xor
bound
mov
xor
outsl
out
outsb
in
in
xchg
in
in
mov
pop
out
shl
in
in
sbb
std
lds
push
les
cmp
test
out
insb
and
out
jg
and
out
mov
out
roll
aad
jge
in
add
out
std
add
call
sub
addr16
lret
call
pop
ret
daa
lret
mov
cmp
clc
sub
and
jmp
sub
in
pslld
test
xor
mov
and
les
sub
lcall
ljmp
add
add
sub
ljmp
gs
call
mov
sub
call
mov
inc
loope
es
loop
fs
xor
divl
daa
aad
and
aad
and
jge
dec
aad
and
aas
and
aad
and
aad
push
mov
cmc
pop
xchg
fadds
push
add
add
ss
repz
data16
xor
sar
mov
cmp
fists
idivl
mov
xchg
arpl
jmp
repz
repz
jmp
outsl
inc
subl
sub
ljmp
cs
mov
cs
inc
shrl
sbb
sub
das
cmp
push
add
std
xor
pop
xor
sbb
xchg
xor
pop
cmp
ret
test
cmp
test
cmp
xorl
adcl
and
push
cmp
aam
iret
ds
dec
xor
aas
add
aas
mov
dec
mov
adc
aas
decb
aas
in
fidivrl
testb
add
push
repz
dec
pop
stc
incl
add
sbb
jle
xor
jl
xor
jle
xor
jl
xor
jl
xor
call
frstor
mov
int
es
sbb
jns
and
outsl
int
push
adc
cmp
or
in
out
int3
std
out
shll
clc
shl
lds
rcrl
rcl
lcall
ror
and
roll
or
cmc
add
cmp
push
shrl
roll
loop
rcrl
jmp
xor
insb
enter
ror
fmul
xor
jo
dec
sbb
sbb
fdivl
mov
xlat
sbb
fbstp
add
and
lahf
push
repz
push
or
rcrb
sti
loope
push
sahf
loope
pop
mov
mov
inc
loope
pop
mov
jecxz
pusha
lcall
and
aam
and
aam
and
rcll
int
push
and
shll
and
rcrl
and
xlat
mulb
aad
mov
pop
xor
pop
and
es
xor
add
add
add
pop
xor
sahf
xor
movsb
pop
clc
add
movsb
xor
int3
lods
ss
lret
ss
mov
lods
sarb
and
mov
clc
movsl
hlt
xor
jbe
xchg
cs
shll
addl
xor
and
imul
aaa
xlat
dec
shlb
add
add
add
add
cmp
jg
cmp
jle
ds
jg
aas
inc
jle
fisubs
stc
inc
xor
and
sahf
test
xor
test
xor
adcl
bound
cmp
mov
xor
test
xor
test
xor
xchg
xor
mov
jmp
aad
loopne
sbb
mov
adcl
add
leave
xor
test
xor
jns
xor
inc
test
xor
popa
jmp
sbb
cmp
rcr
enter
mov
fcmovnb
das
xchg
fcmovnu
pop
stos
pop
packssdw
cmp
incb
pusha
incb
aad
out
in
ret
sbb
aas
sub
int
inc
int
dec
mov
int3
aad
sub
pushf
xlat
mov
sbb
fcomps
sbb
fimuls
jg
xor
mov
push
xchg
sbb
fimuls
sbb
fdivp
push
fcmovnu
icebp
push
add
fstpl
out
fnsave
push
ficoms
or
sbb
fisubs
pop
pop
fstpl
test
xor
sbbb
sbb
cmpsl
sbb
sbb
faddl
sbb
fst
sbb
fmull
adc
and
push
add
xor
rcrl
and
rol
and
lcall
out
pop
das
sub
imulb
js
mov
mov
inc
ds
sub
sub
add
add
add
sub
sub
enter
shlb
cmp
xchg
push
outsl
xor
cmpsl
adc
mov
mov
fldenv
dec
xor
xor
cmp
mov
adc
stos
stos
add
inc
cwtl
xor
dec
push
cmp
dec
jl
ljmp
cmp
and
cmp
cmp
add
jbe
ds
jns
sub
aas
loop
jp
xchg
jbe
lcall
aas
stc
pushl
jg
xor
test
xor
xor
xor
test
xor
addl
xor
dec
sbbb
loop
jl
cmp
jnp
cmp
js
cmp
das
jns
add
add
add
add
add
ja
ds
divl
aad
adc
aad
or
incb
cld
push
mov
mov
in
rolb
scas
in
shlb
ret
enter
enter
into
add
sub
aaa
and
push
sub
into
stos
or
fldt
inc
aad
add
iret
aam
fidivrl
frstor
fsts
mov
xchg
rclb
xor
xlat
js
push
fdivs
sbb
fimull
sbb
fldpi
sbb
pop
sbb
fdivs
mov
fcomps
sbb
jae
pop
push
add
xor
roll
and
rcrl
cmp
and
inc
and
push
and
inc
and
iret
imul
dec
iret
xchg
sbb
jmp
loop
mov
into
push
push
add
test
shll
cmpsb
dec
push
aaa
push
cmp
aaa
repz
xor
mov
int3
xor
sub
cmp
and
cmp
xor
dec
inc
sarl
pop
dec
loop
push
inc
cmpsl
cmp
and
lret
cmp
and
cmp
cmp
rcr
jnp
mov
push
shrb
test
cmp
push
push
clc
mov
xor
mov
lret
mov
movsl
ret
pusha
das
ljmp
sub
add
cmpl
pusha
addr16
addr16
mov
xor
sbbb
add
orb
cmpb
andl
xor
std
data16
out
test
jge
ss
fbstp
ds
ss
gs
aaa
pop
addr16
cwtl
addr16
aaa
sarb
cmp
jp
cmp
jp
cmp
sbb
mov
dec
cmp
jae
cmp
je
cmp
xchg
pop
int
or
int3
and
aad
mov
jns
adc
das
fsubs
and
sbb
xor
or
rclb
mov
shrb
clc
xlat
jno
rcl
jg
xlat
test
not
xchg
lret
rcl
cltd
ret
stos
xlat
cmpsl
mov
mov
and
xlat
aad
xchg
jecxz
rcl
add
fcmovnbe
idiv
std
repz
rorl
ljmp
clc
adc
ficoml
cli
les
add
mov
adc
ret
int3
adc
enter
lret
je
jo
outsb
adc
pusha
adc
adc
pop
adc
pop
adc
and
mov
add
adc
loop
mov
in
push
call
aad
adc
aad
adc
aad
adc
aad
adc
mov
push
cmp
shr
mov
ret
fldcw
aad
jae
movsb
cmp
mov
lea
cmp
pushf
cmp
dec
arpl
ss
ja
or
pop
cmp
and
cmp
sub
mov
add
push
clc
push
hlt
xor
call
inc
fldcw
jp
mov
das
shrl
daa
das
pop
and
cs
lret
xchg
ret
cs
aam
jbe
sahf
sub
nop
mov
jl
xor
jl
xor
jns
xor
js
xor
jns
xor
out
xor
ss
ja
ss
jbe
cmp
gs
add
bound
xchg
arpl
push
addl
cmp
out
adc
jnp,pt
pushf
jl,pt
mov
aas
mov
clc
decl
outsl
stc
dec
sub
add
push
xor
jl
xor
jnp
xor
adc
test
or
pop
add
jle
mov
js
jmp
lods
aad
enter
int3
mov
enter
iret
lea
xlat
iret
sub
pusha
int3
cld
push
es
pop
icebp
shrb
add
rorl
in
shr
in
sar
in
rorb
lret
stos
xlat
popf
ret
mov
rcl
mov
and
add
jno
fistpl
pop
int3
mov
push
mov
jmp
int3
xor
push
int
push
add
and
adc
clc
iret
in
adc
iret
adc
shlb
shrb
adc
into
out
adc
iret
sti
adc
into
or
adc
iret
jno
pop
iret
push
adc
dec
adc
into
and
fmulp
sbb
repnz
mov
imul
pop
adc
jnp
add
xchg
dec
clc
jge
xor
add
stos
scas
sub
mov
inc
sub
mov
mov
push
rclb
enter
shrl
dec
scas
mov
xchg
ss
xorb
sub
inc
ss
or
add
jmp
xor
out
add
sub
dec
xor
inc
sarb
test
mov
mov
daa
push
cmp
mov
bound
cmp
mov
jg
ds
jg
ds
jg
ds
jle
aas
jno
push
aas
cmc
jg
aas
pop
jg
aas
xor
stc
pushl
add
add
inc
xor
fs
xor
fs
xor
fs
add
xor
adc
xor
pop
xor
xchg
lret
gs
xor
mov
xor
push
into
adc
xor
pusha
lds
into
jne
mov
into
icebp
and
push
int
add
int
add
int
add
int
add
shrb
rclb
call
push
into
std
lret
and
sub
sarl
add
fsubrs
enter
iret
popa
sbb
rolb
test
test
push
cld
std
xor
negl
inc
out
int3
test
xor
pop
add
rcll
add
add
add
add
pushf
call
shl
add
daa
add
sub
add
sarb
js
jae
pop
rcll
add
xlat
ljmp
fcoms
fsubs
int
test
sbb
pop
add
xlat
std
push
or
sub
popf
aad
push
lcall
push
sbb
in
add
add
loop
test
add
or
inc
xor
ss
cmp
ss
cmp
jo
mov
inc
fdivrl
shll
xchg
jae
mov
scas
adc
xor
mov
sahf
xor
scas
bound
scas
xor
mov
lahf
cmp
inc
inc
cmp
cmp
cmp
add
call
cmp
cmp
cmp
adc
dec
cmp
sub
cmp
push
jle
ds
jle
ds
jge
ds
ja
aas
icebp
ja
aas
cwtl
ja
aas
dec
js
aas
xchg
ja
aas
fidivrs
cli
ljmp
add
out
xor
mov
xor
mov
mov
xor
loope
dec
xor
arpl
clc
bound
add
add
add
xor
xor
mov
imul
xor
xor
arpl
xor
arpl
xor
push
xor
adc
xor
xor
mov
pop
add
shrl
fnop
xchg
in
sarb
in
rcr
les
adc
sub
xor
and
dec
ret
repz
xchg
aam
mov
lret
enter
enter
iret
adc
or
iret
xor
push
iret
dec
or
iret
pop
add
ljmpw
out
iret
mov
loop
into
inc
leave
or
rorl
mov
sub
fldenv
test
mulb
push
int
or
sti
rclb
add
shlb
add
sarb
inc
rcrb
pop
shrb
add
roll
cmpsb
or
test
push
int3
mov
or
lret
sti
lret
cmp
dec
or
jo
inc
lret
cwtl
pop
cmpsb
lret
mov
test
int
pop
int
pop
add
int3
dec
add
sub
out
or
enter
or
movb
and
cmp
sbb
fldl
das
out
cmp
aas
cmp
ds
adc
clc
inc
repz
in
and
push
and
das
inc
sub
das
fwait
and
das
sbb
lds
mov
shl
xor
mov
push
sub
ss
inc
scas
sub
lret
push
sub
ret
inc
sub
sar
cmpsl
out
xor
add
sub
dec
xor
insl
ja
xor
inc
bound
ss
ss
iret
ss
bound
cmp
jnp
cmp
cmpl
jnp,pt
cmp
jl
cmp
js
cmp
jns
cmp
jp
subb
mov
jo
fisubs
ljmp
xor
sub
cmp
sbb
xor
fs
xor
pusha
test
fidivs
mull
test
mov
les
push
sbb
inc
or
or
arpl
iret
repz
adc
mov
cmpsb
rolb
mov
ret
repnz
fld
xchg
add
pop
rorl
pop
cmp
fsubrs
add
idivl
int3
fiadds
mov
repz
inc
rcr
out
int
in
int
in
int
jecxz
enter
iret
or
sar
lret
cmp
xor
cli
pop
jno
lcall
movl
adc
pop
pop
sbb
roll
add
xor
rorl
sub
add
add
shrl
add
ror
add
cmc
cld
xor
push
std
cwtl
shl
cld
push
iret
sar
jb
cmpsb
into
cmpsl
mov
lret
cmp
movsb
int3
or
lret
mov
or
enter
and
cmpsl
xor
scas
mov
dec
scas
push
cmp
clc
jmp
hlt
xor
xlat
add
mulb
das
xor
or
push
and
sub
mov
cmp
xor
inc
dec
xor
sub
rolb
xor
shlb
sub
sub
xor
cltd
scas
inc
clc
jmp
hlt
xor
pop
mov
push
sub
test
xor
ret
cmp
jbe
ss
jbe
add
add
add
add
add
iret
ss
jne
aaa
push
jne
aaa
insb
js
cmp
fwait
cmp
ja
cmp
js
cmp
ja
cmp
jbe
cmp
jbe
cmp
jns
cmp
jns
cmp
cmp
add
cmp
lock
pop
repnz
aas
cmp
mov
dec
scas
cli
cmp
add
add
add
add
std
push
dec
decb
mov
jge
out
xor
out
xor
lds
inc
lds
lds
jge
shlb
and
sbb
aam
adc
in
and
sub
inc
add
xor
scas
xor
add
xor
jecxz
aaa
xchg
sbb
xor
into
or
add
negl
std
clc
cmp
idiv
aaa
pop
and
pop
sub
ss
and
cmp
xor
mov
divl
xchg
xor
in
cld
xor
jno
lods
aaa
add
sbb
imul
cmp
pop
cmp
or
cmp
or
cmp
mov
inc
ja
imul
pop
inc
add
add
jnp
push
add
pop
add
inc
add
inc
pop
add
inc
aaa
add
inc
aas
add
inc
daa
add
inc
xlat
add
inc
filds
mov
inc
filds
mov
in
aaa
cmp
fnsave
and
std
aaa
sub
std
aaa
adc
int
sbb
mov
aaa
or
mov
ss
cmp
aaa
jmp
add
add
add
add
fdivrs
mov
mov
cmp
mov
cmp
mov
cmp
xor
jmp
sti
xor
loope
and
leave
les
rol
xor
ret
add
sub
cmc
das
and
in
das
cmp
in
add
add
xor
add
je
push
add
test
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
aaa
pop
cld
push
cmp
sti
xchg
cmp
sti
fstpt
or
adc
cmp
cli
mov
ss
pop
cmp
cld
xchg
cmp
inc
cmp
add
sub
int3
sbb
ds
or
cmp
das
cmp
adc
xchg
icebp
xchg
cmp
jmp
insb
cmp
cmp
adc
cmp
mov
add
dec
cmp
jo
add
notl
daa
sbb
dec
daa
xchg
sub
pop
lods
xor
pop
cmc
xor
pop
dec
xor
pop
xor
out
xor
fwait
xor
add
add
add
add
fidivl
xchg
xabort
mov
sbb
fadd
cmp
cli
xor
xor
add
xor
inc
xor
js
popl
xchg
xor
add
xor
add
xor
xor
mov
stos
add
aaa
add
mov
cmp
pushf
aaa
repnz
cmp
add
cmp
push
cmp
push
divb
add
add
add
pop
inc
xor
sti
add
dec
ss
push
add
jmp
cmp
clc
pushl
xchg
aaa
and
pop
aaa
fdivs
das
aaa
std
sub
jmp
xor
ss
or
ss
mov
xor
sbb
lods
xor
out
xorl
aaa
arpl
jl
xor
repz
add
add
add
add
sub
fcmovnb
and
sarl
adc
adc
or
push
and
add
les
clc
jns
xor
adc
aaa
xor
or
fucomi
out
imul
ss
fdivl
ss
fildll
pop
jo,pt
popa
js,pt
imul
pop
sti
jns
push
incb
ds
xchg
ds
cltd
jo,pt
mov
add
add
add
js
test
ds
mov
ds
dec
ds
sarl
pop
fnstcw
jo
loope
js
jmp
ds
stc
ds
std
add
pop
std
or
pusha
std
adc
pop
std
sbb
lock
and
clc
std
sub
inc
std
xor
sbb
cmp
push
std
inc
aas
notl
cmp
xchg
cmp
mov
data16
add
add
add
testl
add
mov
xor
daa
sbb
inc
push
divl
xchg
push
lds
incb
push
xor
xchg
xor
in
xor
in
xor
in
sub
xor
lret
rol
cs
sub
and
jbe
xchg
sub
orl
sub
packsswb
jmp
cmp
jnp
je
out
xor
daa
clc
test
lret
cmp
fdiv
mov
cmp
lret
negl
ds
std
pop
cmp
std
cmpsl
aaa
mov
sti
dec
cmp
cmp
sarl
xor
jae
cmp
add
xor
xor
pop
add
xor
xor
sahf
cmp
add
add
add
std
cmpsb
ss
mov
ss
aam
mov
add
xor
out
xor
or
fdivrl
lret
ss
and
xor
fisubrl
jg
pop
cmp
pop
mov
cmp
cmp
hlt
cmp
cmp
add
popf
cs
loope
sub
add
pop
sub
out
xor
mov
xor
test
addr16
popf
xor
pushf
xor
daa
js
cs
push
xor
mov
add
xor
or
xor
dec
or
fwait
dec
or
ds
lcall
aaa
cmp
cmpb
cld
push
cmp
stc
jns
add
sti
fisubs
call
sub
jb
ja
mov
xor
add
xor
std
xor
jle
sub
ljmp
push
movsb
xor
mov
and
testl
dec
das
sub
pushf
xor
shll
loopne
sbb
sbb
incl
idivl
pop
les
xor
les
cs
sub
xor
dec
sub
fsubs
sub
add
insl
or
or
dec
cmp
out
pop
cmp
out
sub
cmp
fisubrs
xor
pop
cmp
into
insl
cmp
or
cmp
push
cmp
xor
cmp
stc
ret
stc
ret
stc
sarb
iret
stc
ret
stc
bound
jne
insl
cmp
xor
dec
hlt
or
div
loop
call
cmc
mov
lahf
cmc
mov
jge
pop
cmp
hlt
lods
cmp
hlt
int3
cmp
hlt
fidivs
or
xor
sub
dec
ss
bound
testl
ret
xchg
ss
add
xor
add
idiv
stos
sub
cmp
and
jmp
repz
out
add
xor
xor
cld
int3
xor
push
pop
cmp
loope
cmp
shll
jmp
hlt
xor
sub
and
xor
and
xor
adc
xor
add
aad
dec
loopne
xor
fdivs
jns
xchg
xor
test
pop
fdivs
dec
add
add
pop
cmp
add
adc
out
jmp
xor
pushl
xor
xor
je
add
incl
xor
lcall
xor
pushl
xor
push
add
xor
add
xor
add
xor
add
xor
hlt
xor
add
xor
add
xor
add
xor
add
imull
and
jno
sub
jns
xor
jno
cmp
or
inc
and
xor
sub
sub
sub
sub
sub
sub
sub
add
add
jecxz
sub
mov
pushf
lret
jmp
sub
icebp
sub
adc
int3
sub
hlt
and
adc
es
xor
push
aaa
push
or
ss
into
ss
ljmp
aam
xor
cmp
cli
lret
cli
and
sub
or
add
bound
mov
dec
cmp
dec
cli
dec
cmp
loop
jmp
or
add
mov
cmp
sti
bound
mov
mov
arpl
and
dec
sti
or
and
loop
jmp
lret
clc
mov
sub
stc
inc
sub
stc
ss
stc
sahf
sub
stc
sahf
sub
stc
sahf
sub
xor
jmp
hlt
xor
jmp
add
add
add
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
add
add
add
xor
jmp
hlt
xor
add
sub
add
sahf
sub
add
mov
add
sahf
sub
add
mov
add
pop
sub
add
dec
sub
add
pop
sub
add
dec
sub
add
push
sub
add
push
sub
add
add
sub
add
push
sub
add
fidivs
add
xor
add
xor
add
xor
add
sbb
negl
add
negl
add
negl
add
negl
add
negl
add
negl
add
negl
add
negl
add
negl
add
negl
add
negl
add
negl
add
negl
add
negl
add
negl
add
negl
add
add
sbb
negl
add
negl
add
negl
add
negl
add
negl
add
negl
add
negl
add
negl
add
negl
add
negl
add
negl
add
negl
add
divl
jmp
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
divl
jmp
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
add
add
add
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
fidivs
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
pop
xor
add
add
dec
xor
add
add
pop
xor
add
add
dec
xor
add
xor
add
xor
add
push
xor
add
xor
add
xor
add
xor
add
pop
add
notl
add
negl
add
negl
add
negl
add
negl
add
negl
add
negl
add
negl
add
negl
add
negl
add
negl
add
negl
add
negl
add
negl
add
negl
add
negl
add
negl
add
negl
add
negl
add
negl
add
add
sbb
negl
add
negl
add
negl
add
negl
add
negl
add
negl
add
negl
add
negl
add
divl
jmp
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
divl
jmp
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
add
add
add
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
push
add
push
add
push
add
push
add
push
add
add
add
push
add
fisubrs
add
into
sub
add
fisubrs
add
into
sub
add
sahf
sub
add
mov
add
sahf
sub
add
mov
add
pop
sub
add
dec
sub
add
pop
sub
add
dec
sub
add
add
add
add
pop
add
notl
add
notl
add
notl
add
notl
add
notl
add
notl
add
notl
add
notl
add
negl
add
negl
add
negl
add
negl
add
negl
add
negl
add
negl
add
negl
add
negl
add
negl
add
negl
add
negl
add
negl
add
negl
add
negl
add
negl
add
add
sbb
negl
add
negl
add
negl
add
negl
add
divl
jmp
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
divl
jmp
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
add
add
add
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
dec
xor
add
add
pop
xor
add
add
dec
xor
add
add
push
xor
add
xor
add
xor
add
push
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
pop
add
notl
add
notl
add
notl
add
add
pop
add
notl
add
notl
add
notl
add
notl
add
notl
add
notl
add
notl
add
notl
add
notl
add
notl
add
notl
add
negl
add
negl
add
negl
add
negl
add
negl
add
negl
add
negl
add
negl
add
negl
add
negl
add
negl
add
negl
add
negl
add
add
sbb
divl
jmp
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
divl
jmp
add
xor
add
xor
add
xor
add
xor
add
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
add
add
add
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
hlt
xor
jmp
mov
add
sahf
add
sahf
add
mov
add
mov
add
pop
add
pop
add
dec
add
dec
add
pop
add
pop
add
dec
add
dec
add
add
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
fisubrs
add
into
sub
add
fisubrs
add
into
sub
add
sahf
sub
add
notl
add
notl
add
notl
add
notl
add
notl
add
notl
add
notl
add
add
pop
add
notl
add
notl
add
notl
add
notl
add
notl
add
notl
add
notl
add
notl
add
notl
add
notl
add
notl
add
notl
add
notl
add
notl
add
testl
add
testl
add
testl
add
testl
jmp
add
xor
add
divl
jmp
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
roll
add
add
add
add
js
subb
ficomps
in
mov
mov
sarl
cli
mov
dec
out
jnp
adc
jecxz
cli
xchg
or
xchg
cmp
xchg
xchg
pop
popl
cmpsl
mov
xor
sub
adc
test
mov
imul
xor
dec
rcll
add
pop
xchg
mov
push
mov
div
rep
mov
adc
or
cli
xor
inc
shll
cmpsb
push
aad
sbb
pop
inc
jbe
or
mov
mov
imul
inc
dec
and
cmp
ret
cli
push
pop
xchg
or
xorb
adc
imul
lret
cwtl
sub
and
pop
xchg
stos
or
fiaddl
sub
push
popa
xchg
pusha
push
cmp
ret
add
std
emms
test
inc
aam
jno
push
ja
ja
add
enter
cltd
dec
lret
cmp
mov
and
jb
testl
addb
add
add
add
add
ss
xchg
sbb
sub
xorb
fwait
xchg
and
std
mov
outsl
dec
mov
mov
lahf
int3
popa
into
xor
ret
idivl
and
test
xor
insl
sahf
sarb
loopne,pt
call
add
adc
mov
fisttpl
lds
lods
add
pop
pop
pop
mov
fisttpl
add
add
add
mov
inc
adc
stos
sub
xchg
inc
pop
sub
jle
sbb
out
push
jle
sub
das
ljmp
test
mov
push
movsl
pop
mov
mov
jecxz
sarb
mov
push
cmp
and
out
je
dec
out
cmp
insb
add
cpuid
jo
sbb
stos
pop
loop
push
mov
in
int3
ret
in
int3
and
or
jl
push
ret
inc
test
push
dec
test
leave
adc
add
add
cmp
mov
mov
imul
cmpb
movsb
add
dec
jnp
mov
ret
int3
mov
push
mov
test
loopne
add
adc
jecxz
dec
in
jne
mov
test
clc
mov
cmpsl
cmp
mov
add
cmpsl
dec
lock
clc
mov
cmp
inc
cld
mov
in
add
xor
jmp
movsl
dec
hlt
je
add
cmpsb
inc
hlt
int3
push
dec
lock
das
add
cmpsl
cmp
lods
add
jo
mov
das
add
je
add
aaa
movsb
sbb
pop
sub
in
insb
test
mov
cs
dec
pop
scas
roll
lock
pop
rorb
in
int3
stos
in
int3
ret
in
int3
and
call
mov
or
mov
mov
mov
push
insb
imul
js
sbb
mov
mov
push
xchg
push
push
inc
sub
mov
mov
icebp
cmp
add
mov
lods
ret
xor
lcall
cld
jl
jge
hlt
jo
push
insb
sub
lock
xor
mov
stos
cld
mov
or
faddl
mov
sub
int3
mov
int3
stos
in
int3
ret
in
int3
inc
lods
in
ja
inc
add
stos
inc
xor
jle,pt
or
in
int3
stos
in
int3
inc
in
int3
ret
mov
sub
ljmp
int3
xor
int3
sub
int3
inc
in
int3
ret
adcl
push
lea
push
incl
loop
call
clc
imull
mov
out
test
adc
jge
push
insb
insl
or
jge
mov
lods
in
mov
xor
jmp
stos
cmp
mov
adc
inc
adc
aaa
mov
xor
lock
mov
daa
scas
adc
insb
pop
add
add
testl
rorb
in
int3
sub
int3
inc
in
int3
mov
xor
add
mov
inc
divl
int3
mov
int3
stos
in
int3
ret
in
int3
and
mov
mov
add
and
add
repz
or
stos
cmp
mov
xor
rolb
add
testl
test
mulb
hlt
cmp
insb
hlt
mov
jo
cli
sti
mov
add
stos
inc
lock
or
jbe
clc
maskmovq
divl
mov
test
add
ljmp
adc
xor
dec
ljmp
mov
cmpsl
cld
or
mov
ljmp
cld
mov
sub
imul
ret
int3
and
mov
cmpsl
cmp
mov
or
push
and
call
add
cmpsl
inc
lock
lock
lods
sti
add
xor
lock
jnp
mov
xor
test
xor
add
arpl
mov
add
sti
jle
adc
outsb
outsb
hlt
mov
adc
xor
mov
das
adc
xchg
test
or
push
in
pop
jl
loopne
xor
add
test
loopne
lret
adc
in
mov
xor
adc
pushf
pop
mov
pushf
inc
mov
xor
add
add
add
sub
mov
test
adcl
popf
adc
mov
adc
ljmp
mov
sub
cmpl
adc
add
lea
add
insl
hlt
push
mov
mov
mov
add
adc
sti
test
in
ss
dec
add
nop
mov
test
idiv
cmp
int3
ret
adcl
push
ljmp
clc
adc
inc
mull
aaa
std
call
cmpsl
cmp
push
jl
add
jl
or
jl
mov
je
int3
ret
in
int3
inc
cmpsb
in
jae
inc
add
ljmp
add
mov
jae
int3
inc
in
int3
ret
adcl
orb
mov
jno
mov
imul
jl
in
mov
cmpsb
dec
clc
jle
hlt
mov
jp
insb
inc
je
clc
add
xor
fcoml
fbld
or
movsl
cmp
add
add
add
jl
add
das
xor
cmp
mov
mov
mov
movsl
adc
push
cmp
rorb
in
in
int3
xor
int3
sub
int3
inc
in
int3
mov
cmp
add
mov
add
insl
add
jge
call
lods
mov
push
mov
inc
clc
cmpsb
movsl
or
mov
cmovle
xchg
jne
inc
divl
add
dec
cmp
jmp
mov
add
xchg
xor
push
jl
cmp
xor
add
lds
xchg
push
enter
xor
mov
je
inc
negl
mov
ljmp
je
je
push
push
jne
inc
mull
dec
pop
call
cmpl
mov
hlt
or
iret
pavgw
ret
cld
int3
and
inc
jmp
decl
pushf
xor
int3
stos
cld
int3
ret
cld
int3
and
inc
jnp
adc
idivl
fmuls
out
xor
jle
loopne
mov
or
push
mov
cmp
aas
idivl
add
jg
decl
mov
or
lock
cwtl
add
divl
push
push
or
fmull
and
dec
out
pop
mov
arpl
shll
add
add
add
add
xor
add
sbb
mov
add
cmp
cmovo
cmp
add
pop
jl
call
je
mov
adc
ret
dec
mov
mov
loopne
dec
test
mov
inc
shl
cmpsb
dec
mov
cmpsl
inc
lret
pusha
mov
mov
or
jl
call
inc
add
pusha
call
cmpl
shrl
jnp
jmp
mov
pop
cld
test
test
sti
cwtl
sbb
aaa
xor
push
lahf
mov
mov
xorl
call
or
call
stos
in
cmpl
adcl
cwtl
add
divl
mov
bound
xor
or
call
push
cwtl
add
divl
mov
pop
push
call
sbb
dec
cmp
xor
add
xchg
inc
push
insb
jbe
push
sbb
sarb
xor
mov
mov
fmuls
ret
mov
loopne
pusha
push
mov
je
inc
mull
xchg
add
clc
xorl
mov
mov
movsb
divl
add
stos
dec
mov
mov
mov
dec
and
call
xor
test
inc
divl
add
and
push
mov
sbb
clc
pushl
mov
adc
hlt
popa
sub
imull
add
add
pop
mov
push
insb
cmp
push
mov
xchg
call
jne
or
cmpl
mov
push
dec
jae
cmp
push
mov
pushf
call
push
push
or
xorl
mov
mov
inc
movq
push
jl
loopne
cli
je
inc
imull
or
push
fists
incl
shrb
inc
divl
shl
xor
lea
or
aaa
xchg
decb
negl
push
mov
or
mov
ret
cld
int3
inc
std
int3
mov
cmp
int3
inc
std
int3
ret
push
leave
popa
mov
jl
push
call
scas
sbb
cwtl
push
pop
mov
int3
inc
mov
push
dec
jne
aas
test
push
call
je
or
lcall
add
call
inc
or
int3
and
mov
add
icebp
cmp
add
jae
add
xor
mov
xor
add
mov
or
jle
pusha
call
sub
clc
mov
fimull
clc
add
test
cli
cwtl
call
add
sbb
repnz
call
add
mov
pusha
fbstp
inc
cmp
add
xor
add
call
repnz
not
pusha
call
pop
sbb
jbe
mov
xchg
call
add
add
add
idivl
xor
mov
mov
mov
add
sub
add
push
xor
mov
mov
cli
test
inc
idivl
aas
negl
mov
movsl
sbb
div
pop
test
call
js
xor
notl
xchg
mov
je
xor
push
call
je
cld
mov
add
add
add
add
pop
clc
cmpl
add
not
pop
call
mov
idiv
je
add
stos
add
cld
or
lock
mov
inc
fadd
sbb
out
shll
mov
mov
movsl
shll
xor
inc
adc
or
hlt
jae
push
iret
fdivrp
incl
fdivs
in
add
in
push
fstpt
hlt
add
in
inc
stos
mov
jo
xor
mov
sbb
add
xor
or
xorl
cmp
jae
mov
add
mov
pop
clc
mov
hlt
imul
pop
mov
jmp
adc
add
add
add
pop
clc
xor
iret
pop
call
out
mov
jmp
mov
push
iret
jno
mov
popa
call
mov
jns
inc
testl
inc
negl
inc
imull
or
clc
mov
jbe
add
divl
mov
pop
rorl
test
push
call
je
cld
mov
cli
mov
inc
negl
aad
add
cld
xor
sbb
mov
pop
call
add
inc
push
je
iret
cmp
mov
mov
call
mov
lods
call
xor
cmc
int3
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
add
add
xor
add
xor
add
nop
xor
add
xor
loopne
add
xor
add
mov
cmp
rorl
ds
push
sbb
jmp
pop
ds
cmpl
not
add
mov
add
xor
add
xor
in
xor
xor
add
xor
add
add
add
mov
add
xor
add
xor
add
xor
add
fldl
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
in
inc
xor
jnp
xchg
xor
mov
push
adc
faddl
and
add
push
cmp
xor
inc
ss
push
push
enter
into
push
jle
jae
xchg
ss
push
popf
ss
push
mov
sub
add
repz
push
aaa
fs
test
aaa
ret
aaa
add
aaa
loope
push
cmp
or
add
xor
add
xor
add
xor
add
xor
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
divl
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
pop
xor
pop
xor
pusha
xor
xor
push
xor
jo
inc
add
inc
add
add
inc
add
add
xor
mov
inc
add
add
add
inc
add
inc
add
xor
js
inc
add
inc
add
inc
add
inc
add
inc
add
xor
shlb
add
xor
enter
int3
xor
push
xor
mov
xor
aam
inc
add
inc
add
xor
fdivl
inc
add
xor
loopne
inc
add
inc
add
xor
in
xor
lock
hlt
xor
shlb
add
xor
les
inc
add
xor
js
inc
add
xor
enter
add
inc
add
xor
jl
inc
add
xor
or
inc
add
xor
adc
inc
add
xor
sbb
inc
add
inc
add
xor
and
inc
add
xor
movsb
xor
mov
inc
add
inc
add
xor
shlb
add
xor
lock
xorb
add
xor
xor
inc
add
inc
add
xor
cmp
inc
add
xor
loopne
inc
add
inc
add
xor
enter
cmp
inc
add
inc
add
xor
inc
xor
mov
inc
add
and
cmp
int3
adc
pop
push
mov
popa
inc
xchg
packssdw
inc
xchg
mov
push
rcrl
es
adc
sub
cmp
and
push
daa
in
fdivrs
fucomp
inc
fstpt
cmp
je
push
xchg
pop
cld
dec
insl
jo
push
fldcw
xchg
sbb
pop
mov
or
or
in
mov
adc
mov
jl
scas
test
popl
fcmovne
mov
pushf
mov
outsb
test
cli
test
in
rcll
int3
sub
mov
or
sahf
cwtl
or
out
push
sbb
fnstenv
and
xchg
or
rolb
nop
scas
xchg
sti
xchg
mov
push
jmp
icebp
movzbl
jae
out
iret
stc
or
fstl
jmp
mov
scas
arpl
imul
js
nop
mov
mov
mov
daa
mov
mov
imul
and
fdivl
stos
adc
mov
inc
cs
and
xor
and
jb
pop
jmp
dec
jle
push
add
add
pop
scas
pop
pop
mov
fisubrs
popf
sub
jmp
setp
sbb
test
pop
inc
adc
imul
xor
icebp
cmp
cld
jnp
lret
rol
rorb
push
inc
lahf
insl
push
fwait
or
pop
in
int3
jmp
int3
out
outsb
test
add
loop
push
jl
inc
out
stos
out
adc
push
lret
sarl
mov
test
popf
sti
xor
jmp
or
mov
iret
mov
or
out
mov
int3
pop
jne
mov
add
pop
repnz
mov
mov
xlat
test
out
movsl
mov
xor
shl
jl
data16
inc
add
dec
add
insb
add
add
add
add
add
add
jns
dec
add
add
xor
add
add
insb
add
push
add
add
add
dec
add
outsl
add
push
add
je
xor
add
cmp
xor
insl
add
inc
add
add
inc
add
arpl
pop
add
push
add
add
add
sub
inc
add
dec
add
push
add
inc
add
inc
add
add
add
jae
add
pop
add
add
insb
add
add
add
jae
imul
add
je
dec
add
outsb
add
add
jb
add
sbb
add
add
add
add
xor
add
xor
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
orb
add
adc
add
stos
xor
add
add
add
xor
add
xor
add
add
add
add
xor
add
add
add
and
add
add
ss
add
ss
orb
fs
add
ss
addb
cmpb
add
add
add
addb
add
add
aaa
add
orb
add
add
add
add
add
aaa
add
cmp
add
add
cmp
add
add
add
add
add
add
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
orb
add
adc
add
stos
xor
add
add
add
xor
add
xor
add
add
add
add
xor
add
add
add
and
add
add
ss
add
ss
orb
fs
add
ss
addb
cmpb
add
add
add
addb
add
add
aaa
add
orb
add
add
add
add
add
aaa
add
cmp
add
add
cmp
add
add
add
push
imul
imul
jns
add
addb
gs
imul
imul
jns
add
mov
insb
jae
jb
outsb
inc
add
scas
add
jae
jb
jo
inc
add
js
inc
jb
popa
je
inc
imul
imul
insb
insb
outsl
arpl
add
push
dec
inc
dec
xor
cs
insb
add
pop
add
addr16
jo
outsb
dec
gs
js
add
push
inc
push
dec
xor
cs
insb
add
inc
add
popa
je
inc
pop
push
gs
arpl
insb
insb
push
jb
jo
add
add
popa
je
inc
pop
inc
gs
arpl
insb
insb
dec
outsb
outsw
add
arpl
dec
insl
popa
addr16
imul
dec
insl
popa
addr16
outsl
jne
je
data16
popa
addr16
imul
fs
insl
popa
add
inc
insb
popa
je
inc
pop
inc
gs
arpl
insb
insb
push
popa
outsb
add
dec
insl
popa
addr16
imul
je
outsl
jns
add
add
or
add
inc
add
popa
je
inc
pop
push
push
jb
insb
insb
inc
popa
jb
add
add
add
add
je
outsl
jns
jb
jo
jb
jns
push
popa
add
dec
add
je
push
dec
dec
popa
outsb
addr16
add
xchg
add
jb
arpl
outsl
jne
gs
jbe
outsb
je
add
add
ja
je
je
jae
gs
push
add
dec
insl
popa
addr16
imul
ja
outsb
imul
push
add
popa
addr16
imul
imul
cmp
inc
jb
ja
je
je
jae
gs
add
insb
add
popa
addr16
imul
outsl
jbe
add
pop
add
popa
addr16
imul
inc
imul
outsl
jb
add
add
gs
je
push
jb
jo
jb
jns
push
popa
add
dec
insl
popa
addr16
imul
dec
jbe
jb
popa
jns
insl
popa
add
add
gs
je
push
je
je
jae
imul
push
add
popa
addr16
imul
addr16
outsl
jbe
add
jne
dec
insl
popa
addr16
imul
dec
insl
popa
addr16
outsl
jne
je
dec
add
popa
addr16
imul
add
add
add
dec
insl
popa
addr16
imul
ja
add
dec
insl
popa
addr16
imul
dec
arpl
add
inc
insb
popa
je
inc
pop
push
gs
arpl
insb
insb
push
outsl
jae
pop
add
popa
addr16
imul
inc
jb
addr16
insl
popa
add
push
add
popa
addr16
imul
jns
add
add
add
dec
insl
popa
addr16
imul
fs
insl
popa
addr16
add
or
inc
jb
popa
je
push
je
je
jae
imul
insl
add
popa
addr16
imul
insb
popa
arpl
addl
jb
jo
jb
jns
push
add
aas
add
popa
je
inc
pop
inc
gs
arpl
insb
insb
push
outsl
jae
sldt
add
add
je
dec
insl
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
ja
js
add
dec
insl
popa
addr16
imul
dec
arpl
push
imul
add
dec
outsb
imul
addr16
add
outsb
imul
imul
push
inc
add
pop
add
popa
addr16
imul
insb
imul
add
add
dec
insl
popa
addr16
imul
inc
jb
addr16
jne
jae
jb
insl
popa
add
inc
add
popa
je
inc
pop
push
gs
arpl
insb
insb
dec
outsb
outsw
add
or
inc
jb
popa
je
push
jb
jo
jb
jns
push
popa
addr16
add
add
popa
addr16
imul
dec
insl
popa
addr16
arpl
add
popa
addr16
imul
fs
insl
popa
addr16
add
jp
dec
outsb
imul
inc
outsl
outsb
je
outsl
insb
jae
js
add
dec
insl
popa
addr16
imul
inc
jb
add
add
add
dec
insl
popa
addr16
imul
dec
popa
jae
gs
dec
insl
popa
addr16
imul
addr16
push
insb
outsl
arpl
add
dec
insl
popa
addr16
imul
inc
imul
outsl
jb
add
inc
insb
popa
je
inc
pop
inc
gs
arpl
insb
insb
push
jb
jo
add
dec
insl
popa
addr16
imul
je
add
dec
inc
push
dec
xor
cs
insb
add
add
or
dec
dec
add
add
add
add
add
add
addb
add
add
fadds
add
test
add
call
add
add
icebp
dec
dec
add
add
add
add
add
add
push
add
addb
add
or
dec
dec
add
add
add
add
or
add
add
sub
add
add
add
icebp
dec
dec
add
add
add
pop
add
add
rolb
subb
add
add
xorb
add
add
xorb
add
add
cmpb
add
add
mov
add
mov
add
or
dec
dec
add
add
add
add
or
add
add
add
add
add
icebp
dec
dec
add
add
add
add
or
add
add
add
add
add
or
dec
dec
add
add
add
add
or
add
add
add
add
add
icebp
dec
dec
add
add
add
add
or
add
add
fmull
add
add
or
dec
dec
add
add
add
add
or
add
add
jo
add
add
icebp
dec
dec
add
add
add
add
or
add
dec
add
add
icebp
dec
dec
add
add
add
add
or
add
add
add
add
add
icebp
dec
dec
add
add
add
add
imul
add
xor
add
pop
add
xorb
add
add
add
icebp
dec
dec
add
add
add
add
or
add
add
add
dec
add
add
icebp
dec
dec
add
add
add
add
or
add
add
dec
push
add
add
icebp
dec
dec
add
add
add
add
or
add
add
fs
add
add
icebp
dec
dec
add
add
add
add
or
add
popa
add
add
icebp
dec
dec
add
add
add
add
mov
add
rolb
addb
add
or
dec
dec
add
add
add
add
or
add
add
add
add
add
icebp
dec
dec
add
add
add
add
add
add
add
add
or
dec
dec
add
add
add
add
or
add
add
add
add
sub
add
adc
add
and
add
add
add
add
add
rolb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
incl
add
scas
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
incl
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
imul
add
add
inc
pushf
add
add
and
push
add
jae
imul
add
add
jne
outsb
add
add
add
add
add
add
add
imul
push
add
jae
imul
add
popa
add
popa
add
add
add
adc
add
jo
je
imul
jae
add
add
inc
pushf
add
insb
add
popa
add
jae
and
dec
add
and
push
add
jo
add
or
inc
pushf
add
imul
insl
add
jp
add
add
outsb
add
add
jae
add
add
add
imul
and
push
add
add
and
dec
add
outsb
add
insl
add
jp
add
add
add
add
imul
add
add
jne
add
add
jb
add
push
add
ja
add
adc
add
jo
add
je
add
add
jo
add
add
add
add
add
imul
add
add
push
pushf
add
outsl
add
insl
add
insb
add
add
add
add
add
add
addb
pushf
add
popa
add
jae
add
add
dec
add
jb
add
add
add
arpl
outsl
add
jae
add
add
push
pushf
push
add
add
popa
add
add
add
arpl
outsl
add
jae
add
addb
pushf
add
add
add
insb
add
add
adc
add
imul
outsl
add
jae
add
add
push
push
add
insb
add
and
add
outsl
add
imul
outsb
add
add
add
add
add
pop
jne
add
insb
add
and
add
add
je
imul
insb
add
add
add
add
add
imul
insl
add
jp
add
add
add
dec
add
add
imul
jp
add
add
add
add
popa
add
arpl
popa
add
add
add
add
jb
imul
and
push
add
and
inc
add
outsl
add
je
add
nop
add
add
add
add
add
add
push
add
jae
imul
add
popa
add
popa
add
add
and
add
add
add
add
add
imul
addb
pushf
add
bound
outsl
add
je
and
push
add
jae
imul
add
popa
add
popa
add
add
add
add
add
nop
add
popa
add
popa
add
popa
add
add
add
add
outsb
add
add
jb
outsl
add
add
jae
add
add
test
add
add
jb
outsl
add
add
jae
and
add
add
add
add
add
add
add
jne
add
add
add
add
add
add
add
add
add
jb
imul
imul
add
add
pop
pushf
add
add
insb
add
add
add
add
add
add
imul
add
add
pop
pushf
add
bound
outsl
add
add
outsl
add
insl
add
insb
add
add
add
add
outsl
add
insl
add
insb
add
add
add
add
add
add
dec
add
jb
insl
add
insb
add
add
add
add
add
addb
pushf
push
add
je
and
add
data16
imul
je
jns
add
add
add
add
add
add
add
insb
add
add
add
insb
pushf
add
ja
imul
push
add
add
add
insl
pushf
add
jb
imul
and
push
add
and
inc
add
outsl
add
je
add
addr16
add
imul
insl
add
jp
add
add
add
dec
add
add
imul
jp
add
add
add
add
popa
add
arpl
popa
add
add
add
add
push
add
insb
add
and
add
outsl
add
imul
outsb
add
add
add
add
add
pop
jne
add
insb
add
and
add
add
je
imul
insb
add
add
add
add
outsb
add
add
add
imul
add
add
outsl
add
add
add
add
jb
outsl
add
add
jae
add
add
add
nop
add
add
arpl
push
add
dec
add
ja
and
push
add
jae
imul
add
add
add
jne
outsb
add
add
add
add
add
add
dec
add
jb
add
add
add
arpl
outsl
add
jae
add
add
push
pushf
push
add
add
popa
add
add
add
arpl
outsl
add
jae
add
addb
pushf
add
add
add
insb
add
add
add
add
adc
add
imul
add
add
inc
pushf
add
add
and
push
add
jae
imul
add
add
jne
outsb
add
add
add
add
add
add
imul
push
add
jae
imul
add
popa
add
popa
add
add
add
adc
add
jo
je
imul
jae
add
add
inc
pushf
add
insb
add
popa
add
jae
and
dec
add
and
push
add
jo
add
or
inc
pushf
add
imul
insl
add
jp
add
add
outsb
add
add
jae
add
add
add
imul
and
push
add
add
and
dec
add
outsb
add
insl
add
jp
add
add
add
add
imul
add
add
jne
add
add
jb
add
push
add
ja
add
adc
add
jo
add
je
add
add
jo
add
add
add
add
add
imul
add
add
push
pushf
add
outsl
add
insl
add
insb
add
add
add
add
add
add
addb
pushf
add
popa
add
jae
add
add
add
add
add
add
add
push
add
and
dec
add
jae
je
outsl
add
jns
add
add
push
pushf
add
outsb
add
and
inc
add
popa
add
push
add
insb
add
add
push
add
jae
add
addb
pushf
dec
add
add
add
jb
popa
add
push
add
add
and
inc
add
push
add
add
add
push
add
add
add
outsb
add
insb
add
add
add
add
add
nop
add
add
add
add
add
add
push
add
jae
imul
add
popa
add
popa
add
add
and
add
add
add
add
add
imul
addb
pushf
add
bound
outsl
add
je
and
push
add
jae
imul
add
popa
add
popa
add
add
add
add
add
adc
add
imul
add
add
inc
pushf
add
add
and
push
add
jae
imul
add
add
jne
outsb
add
add
add
add
add
add
add
imul
push
add
jae
imul
add
popa
add
popa
add
add
add
adc
add
jo
je
imul
jae
add
add
inc
pushf
add
insb
add
popa
add
jae
and
dec
add
and
push
add
jo
add
or
inc
pushf
add
imul
insl
add
jp
add
add
outsb
add
add
jae
add
add
add
add
add
and
push
add
add
and
dec
add
outsb
add
insl
add
jp
add
add
add
push
add
add
add
add
add
add
add
imul
add
add
add
add
imul
add
add
jne
add
add
jb
add
push
add
ja
add
adc
add
jo
add
je
add
add
jo
add
add
add
add
add
imul
add
add
push
pushf
add
outsl
add
insl
add
insb
add
add
add
add
add
add
addb
pushf
add
popa
add
jae
add
add
add
add
add
add
add
add
je
and
inc
add
insb
add
insl
add
jae
add
add
add
add
add
insb
add
add
add
jno
push
add
jae
imul
add
popa
add
popa
add
add
and
add
add
add
add
add
imul
addb
pushf
add
bound
outsl
add
je
and
push
add
jae
imul
add
popa
add
popa
add
add
add
add
add
nop
add
add
jb
add
add
sbbb
jae
je
outsl
add
add
add
add
add
insb
add
jae
add
add
add
add
add
add
insb
add
popa
add
jae
and
outsl
add
and
push
add
jo
add
add
incl
add
add
add
add
addb
add
add
or
testl
add
or
add
add
dec
add
and
push
add
add
add
add
add
add
add
add
je
call
add
jae
push
add
bound
inc
add
outsb
add
add
insb
add
add
add
add
add
xor
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
add
add
add
add
add
add
or
add
add
add
add
in
add
add
incl
add
and
push
add
popa
add
add
add
add
jo
insb
add
jns
add
add
add
or
add
add
xor
sub
in
add
add
incl
add
outsl
add
jns
and
push
add
popa
add
add
add
add
jo
insb
add
jns
add
add
or
add
add
xor
sub
out
add
add
incl
add
outsl
add
jns
and
push
add
popa
add
add
add
imul
outsl
add
jns
add
add
add
add
add
add
incl
add
add
add
add
orb
push
cmp
mov
cmp
or
or
add
incl
add
add
push
push
add
or
add
incl
add
add
add
add
orb
push
cmp
xchg
add
add
or
add
incl
add
add
push
push
add
add
incl
add
arpl
add
jae
add
add
orb
push
cmp
popf
add
add
push
add
add
incl
add
add
push
push
add
add
add
add
incl
add
add
add
add
add
add
add
incl
add
add
push
push
add
add
add
add
add
add
incl
add
imul
orb
push
cmp
rolb
add
stc
add
add
incl
add
add
push
push
add
add
add
add
add
incl
add
imul
add
add
add
add
add
cli
add
add
incl
add
add
push
mov
mov
and
or
std
add
add
incl
add
add
add
add
add
add
add
incl
add
add
push
mov
xchg
add
add
add
add
add
incl
add
imul
bound
insb
add
add
orb
push
mov
xchg
add
add
cmc
add
add
incl
add
add
push
mov
popf
add
add
add
add
incl
add
je
add
and
inc
add
arpl
push
add
add
add
add
add
add
incl
add
add
push
mov
mov
and
or
push
add
add
incl
add
add
add
add
add
add
add
incl
add
add
push
mov
rolb
add
add
add
add
incl
add
add
add
add
add
add
add
add
incl
add
add
push
mov
leave
add
add
add
add
add
incl
add
jo
popa
add
add
add
add
add
add
add
adc
add
incl
add
add
push
or
add
add
incl
add
add
inc
add
popa
add
add
insb
add
jae
jae
add
inc
add
push
add
add
jae
popa
add
add
add
add
push
or
inc
add
cmp
sub
add
add
add
inc
add
popa
add
add
insb
add
jae
jae
add
dec
add
dec
add
add
jae
popa
add
add
add
add
push
dec
add
cmp
cmp
ljmp
add
add
inc
add
popa
add
add
insb
add
jae
jae
add
dec
add
insl
add
jb
jns
and
push
add
popa
add
add
add
imul
outsl
add
jns
pop
add
push
or
addl
or
add
add
add
inc
add
popa
add
add
insb
add
jae
jae
add
push
add
je
popa
add
add
add
add
add
pop
push
add
add
add
xor
add
incl
add
and
push
add
popa
add
add
add
imul
outsl
add
jns
add
add
add
or
add
add
add
add
xor
add
incl
add
and
push
add
popa
add
add
add
imul
outsl
add
jns
add
add
add
or
add
add
add
add
xor
incl
add
and
push
add
popa
add
add
add
imul
outsl
add
jns
add
add
add
or
add
add
add
add
ss
add
incl
add
and
push
add
popa
add
add
add
imul
outsl
add
jns
add
add
add
or
add
add
add
add
aaa
add
add
incl
add
and
push
add
popa
add
add
add
imul
outsl
add
jns
add
add
add
or
add
add
add
add
cmp
add
incl
add
and
push
add
popa
add
add
add
imul
outsl
add
jns
add
add
add
or
add
add
add
add
cmp
add
incl
add
and
push
add
popa
add
add
add
imul
outsl
add
jns
add
add
add
or
add
add
add
add
cmp
add
incl
add
and
push
add
popa
add
add
add
imul
outsl
add
jns
add
add
add
or
add
add
add
add
cmp
add
incl
add
and
push
add
popa
add
add
add
imul
outsl
add
jns
add
add
add
or
add
add
add
add
cmp
add
incl
add
and
push
add
popa
add
add
add
imul
outsl
add
jns
add
add
add
or
add
add
add
add
cmp
incl
add
and
push
add
popa
add
add
add
imul
outsl
add
jns
add
add
add
or
add
add
add
add
ds
add
incl
add
and
push
add
popa
add
add
add
imul
outsl
add
jns
add
add
add
or
add
add
add
add
aas
add
add
incl
add
and
push
add
popa
add
add
add
imul
outsl
add
jns
add
add
add
or
add
add
add
add
inc
add
add
incl
add
and
push
add
popa
add
add
add
imul
outsl
add
jns
add
add
add
or
add
add
add
add
inc
add
add
incl
add
and
push
add
popa
add
add
add
imul
outsl
add
jns
add
add
add
or
add
add
add
add
inc
add
add
incl
add
and
push
add
popa
add
add
add
imul
outsl
add
jns
add
add
add
or
add
add
add
add
inc
add
add
incl
add
and
push
add
popa
add
add
add
imul
outsl
add
jns
add
add
add
or
add
add
add
add
inc
add
add
incl
add
and
push
add
popa
add
add
add
imul
outsl
add
jns
add
add
add
or
add
add
add
add
inc
add
add
incl
add
and
push
add
popa
add
add
add
imul
outsl
add
jns
add
add
add
or
add
add
add
add
inc
add
add
incl
add
and
push
add
popa
add
add
add
imul
outsl
add
jns
add
add
add
or
add
add
add
add
inc
add
add
incl
add
and
push
add
popa
add
add
add
imul
outsl
add
jns
add
add
add
or
add
add
add
add
dec
add
add
incl
add
and
push
add
popa
add
add
add
imul
outsl
add
jns
add
add
add
or
add
add
add
add
dec
add
add
incl
add
and
push
add
popa
add
add
add
imul
outsl
add
jns
add
add
add
or
add
add
add
add
dec
add
add
incl
add
and
push
add
popa
add
add
add
imul
outsl
add
jns
add
add
add
or
add
add
add
add
dec
add
add
incl
add
and
push
add
popa
add
add
add
imul
outsl
add
jns
add
add
add
or
add
add
add
add
dec
add
add
incl
add
and
push
add
popa
add
add
add
imul
outsl
add
jns
add
add
add
or
add
add
add
add
dec
add
add
incl
add
and
push
add
popa
add
add
add
imul
outsl
add
jns
add
add
add
or
add
add
add
add
dec
add
add
incl
add
and
push
add
popa
add
add
add
imul
outsl
add
jns
add
add
add
or
add
add
add
add
dec
add
add
incl
add
and
push
add
popa
add
add
add
imul
outsl
add
jns
add
add
add
or
add
add
add
add
push
add
add
incl
add
and
push
add
popa
add
add
add
imul
outsl
add
jns
add
add
add
or
add
add
add
add
push
add
add
incl
add
and
push
add
popa
add
add
add
imul
outsl
add
jns
add
add
add
or
add
add
add
add
push
add
add
incl
add
and
push
add
popa
add
add
add
imul
outsl
add
jns
add
pop
add
push
dec
add
add
add
add
add
add
inc
add
popa
add
add
insb
add
jae
jae
add
inc
add
push
add
add
jae
popa
add
add
add
imul
outsl
add
jns
add
pop
add
push
addb
add
daa
add
add
add
add
add
inc
add
popa
add
add
insb
add
jae
jae
add
push
add
jns
jae
imul
insb
add
add
add
outsl
add
jns
and
sub
dec
add
add
add
add
push
or
lods
add
daa
add
add
add
add
add
inc
add
popa
add
add
insb
add
jae
jae
add
inc
add
insl
add
imul
inc
add
popa
add
add
and
sub
dec
add
add
add
add
push
addb
add
daa
add
add
jbe
add
inc
add
popa
add
add
insb
add
jae
jae
add
dec
add
jb
outsb
add
insb
add
add
add
outsl
add
jns
and
sub
dec
add
add
add
add
add
add
incl
add
add
add
add
inc
add
add
add
mov
lds
add
add
add
or
add
add
dec
add
and
push
add
add
add
add
add
add
add
add
add
addl
add
add
jns
jae
dec
add
jae
je
push
add
add
xor
xor
add
push
add
outsl
add
add
jae
add
add
add
add
add
add
add
add
incl
add
outsl
add
and
jo
jb
outsl
add
add
jae
add
and
data16
outsl
add
and
popa
add
add
add
jae
add
jae
add
add
add
add
add
add
incl
add
add
add
jb
outsl
add
add
jae
add
add
add
incl
add
add
add
add
inc
add
add
add
mov
mov
add
add
add
or
add
add
dec
add
and
push
add
add
add
add
add
add
add
adcl
add
add
jns
jae
dec
add
jae
je
push
add
add
xor
xor
add
push
add
jae
imul
add
push
loopne
cwtl
add
add
add
incl
add
add
add
add
imul
add
add
push
sbb
cwtl
add
add
add
incl
add
imul
push
add
add
add
add
add
add
incl
add
ja
and
push
add
jae
imul
add
add
add
add
add
add
add
add
adc
add
add
sub
add
add
inc
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
mov
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
jl
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
adc
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
xor
jno
xor
ja
add
add
outsl
add
jo
outsl
add
popa
add
add
outsb
add
add
add
adc
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
jae
and
push
add
jae
imul
add
outsb
add
add
jb
add
cmp
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
imul
add
jb
add
outsb
add
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
sub
inc
add
add
add
add
xor
ja
add
add
outsl
add
jo
add
add
add
add
add
add
add
add
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
je
popa
add
imul
add
jb
add
js
add
add
sub
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
xor
jno
xor
ja
add
add
sub
and
push
add
outsb
add
add
jae
and
sub
push
add
add
add
add
add
add
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
cmp
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
.byte
add
add
sub
add
pop
xor
xor
dec
xor
xor
test
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
pusha
xor
jle
mov
fwait
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
jno
jl
lahf
xor
xor
xor
xor
xor
xor
xor
xor
movsb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
push
jb
js
lea
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
and
cmp
xor
cmp
cmp
cmp
push
cmp
cmp
outsb
cmp
cmp
cmp
cmp
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
adc
push
cmp
and
sub
cmp
cmp
inc
cmp
dec
cmp
add
jo
add
add
add
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
add
add
js
