rcr
incl
or
lret
add
nop
mov
push
push
xor
neg
fildll
add
cmp
sub
and
sti
mov
cmp
mov
out
repnz
pop
sub
xchg
out
jbe
idivl
std
inc
mul
movsl
fstpt
sub
or
outsb
adc
sbb
xchg
out
in
arpl
mov
sub
xor
loop
sbb
mov
adc
repnz
std
outsl
cmp
std
sbb
dec
adcl
sbb
idivl
add
dec
shll
pushf
clc
adc
hlt
or
insl
sub
mov
sub
xchg
jno
and
add
mov
cmc
mov
enter
cmpsl
add
cmp
lret
cmp
mulb
xchg
movntps
pop
mov
jle
or
and
xchg
cmp
xchg
cmp
jno
test
ficoms
sub
in
and
cld
mov
or
lods
loop
jns
and
sbb
test
repz
xor
sub
fistpll
testb
add
dec
mov
call
pusha
push
aaa
shrl
aam
add
pop
add
inc
push
add
call
incl
add
jmp
pushl
ret
dec
mov
cs
push
and
push
mov
add
fisttpl
shrb
sbb
ret
mov
sub
in
repz
and
lahf
test
add
ja
and
aas
add
jns
notb
dec
sbb
cmp
cld
icebp
mov
cli
cmp
pop
dec
mov
outsl
mov
xchg
adc
adc
and
mov
jmp
and
testb
xor
and
repnz
sbb
push
cs
mov
mov
cltd
push
mov
outsl
and
fwait
leave
pop
loope
sarb
or
adc
sbb
and
mov
cmc
loope
in
shrl
divl
push
or
cmp
aas
mov
cmp
and
cmp
sub
cmp
inc
hlt
lcall
add
sbb
jo
jne
mov
lret
jnp
and
adc
scas
xor
call
sbb
daa
sub
dec
je
lea
jnp
xor
lea
inc
js
sbb
loopne
div
popa
xor
call
jns
sub
lcall
out
or
pop
mov
dec
dec
loopne
adc
stc
add
icebp
inc
mov
out
repnz
jl
sub
mov
jge
jmp
push
sub
jle
adc
mov
not
cmp
and
cs
cmp
mov
and
mov
push
lcall
pop
gs
adc
mov
sbbl
cld
mov
filds
fcomps
mov
test
cld
jno
hlt
pop
cwtl
test
std
and
cs
push
rorl
sbb
fisttpl
mov
mov
repnz
data16
jo
and
push
or
loop
adc
or
test
xchg
sbb
sbb
inc
inc
jle
dec
sti
inc
mov
cmp
jo
adc
aad
movsb
test
xor
fs
loopne
push
ljmp
adc
mov
fnstcw
jnp
jno
mov
in
jmp
sbb
and
dec
in
fwait
sub
ljmp
dec
xchg
jmp
cmp
add
pop
and
jae
sti
mov
out
fs
and
cld
mov
lahf
mov
xor
cmp
adc
jae
ds
iret
adc
cld
call
cmp
ljmp
daa
xchg
sub
jmp
fsubr
mov
fnstenv
das
mov
insl
sbb
inc
sarb
add
add
repz
mov
enter
bound
daa
adc
pop
cwtl
sbb
adc
out
sbb
add
dec
xchg
sub
loopne
add
jmp
iret
aad
adc
in
fwait
push
loope
int
cmp
jp
mov
xchg
or
pop
hlt
mov
xchg
mov
nop
push
sbb
rcrb
dec
inc
sbb
pop
bound
cmp
push
sub
jge
dec
pop
cs
imul
inc
dec
loopne
inc
sbb
cli
inc
and
mov
mov
scas
and
xor
or
or
mov
jb
imul
neg
repnz
les
inc
fbstp
loope
daa
push
and
push
mov
push
and
xchg
repnz
mov
or
in
pop
loope
dec
sub
lods
int3
outsw
and
icebp
mov
outsl
xchg
cmp
inc
and
cmp
stc
or
pop
add
mov
arpl
testb
and
call
daa
ljmp
add
lretw
push
and
and
push
sub
es
lods
add
dec
mov
sub
das
adc
mov
aas
mov
jo
enter
inc
pusha
movsl
jb
add
repnz
out
add
xlat
imul
cmp
imul
js
xchg
sub
outsl
in
shlb
repz
xchg
dec
icebp
cmp
rcll
inc
mov
in
push
and
push
jmp
ja
repnz
and
scas
sbb
add
xor
sbb
inc
dec
dec
mov
xorl
in
jo
jno
cs
mov
testl
clc
dec
repnz
dec
cmpl
mov
stos
rolb
and
cbtw
and
jg
and
test
and
enter
adc
stos
pop
aad
fadd
lock
enter
cmp
fwait
pop
in
aas
loope
data16
or
loope
mov
lock
ror
shll
cltd
loope
movsb
out
loop
seta
xor
gs
daa
and
push
idivb
stc
mov
jno
mov
cmp
nop
sbb
divl
scas
jne
jae
sti
pusha
imulb
daa
dec
adcl
jno
inc
mov
enter
mov
cmp
popf
es
xchg
loopne
pop
adc
mov
sub
sub
or
inc
test
imul
and
pop
mov
stc
pusha
xchg
sub
sub
pop
loope
xchg
adc
repnz
and
jmp
pop
push
mov
unpckhps
add
filds
int3
inc
cmp
add
push
jbe
dec
adc
lret
mov
jecxz
adc
pop
xor
mov
in
sti
mov
adc
out
jecxz
sub
xor
pop
and
jmp
js
cli
jg
or
sub
xor
push
pop
dec
outsb
ror
sbb
and
addb
dec
test
adc
push
jns
clc
imul
cmp
mov
sti
push
xchg
loope
mov
scas
jnp
lcall
mov
push
fldcw
or
loope
inc
subb
push
mov
das
dec
cmp
cmp
test
xor
jno
psrlw
aaa
cmpsl
adc
xchg
stc
xor
sbb
jg
mov
jb
mov
pop
mov
scas
cmp
divb
addr16
das
or
pop
pop
cmp
dec
rcrb
add
movsl
sbb
dec
sub
sub
movsl
ror
mov
sub
xchg
lret
in
aaa
or
xchg
dec
in
adc
cmc
pop
mov
loop
dec
pop
and
mov
xor
ja
and
xchg
imul
popa
shll
leave
cs
push
cmpsb
lret
xchg
or
push
rol
adc
jg,pt
xor
es
or
outsl
pushf
int3
xor
or
xor
or
sub
adc
clc
sub
inc
push
jo
int3
xlat
cmc
shll
mov
and
iret
inc
pop
aad
cmp
add
scas
push
sub
fwait
fs
mov
xchg
dec
sub
rclb
mov
ret
or
clc
subl
movb
popf
insb
arpl
test
and
add
xlat
pop
dec
outsl
bnd
xchg
addl
dec
insl
dec
fwait
push
mov
add
ljmp
mov
movsl
jae
cmp
jns
jle
cmc
xchg
pop
cmp
sbb
arpl
xor
rcr
and
dec
cs
call
mov
xor
jb
push
pop
mov
cli
and
sbb
xchg
cmp
mov
and
xor
dec
test
in
cwtl
fs
xchg
mov
pop
outsb
pop
test
or
push
sub
call
add
cmp
xchg
pop
icebp
mov
daa
imul
inc
lcall
push
inc
sub
cmp
lock
aas
and
jb
orb
or
stc
cmp
rolb
notb
mov
addb
int3
wbinvd
adcl
mov
xchg
and
fbld
sub
cmpsl
testb
sub
push
stos
imulb
pop
jno
stc
adc
testb
pop
push
stos
pop
mov
out
scas
testb
outsb
dec
xor
mov
mov
out
ja
add
inc
outsb
pusha
xlat
loope
ficomps
mov
xchg
loopne
mov
inc
mov
or
mov
dec
sub
loope
sub
jno
ja
out
adc
cmp
cmp
and
aad
mov
fnsave
jno
mov
cmpsb
or
stc
jbe
pop
stc
sbb
repnz
and
adc
in
and
and
adc
jmp
jnp
jno
aaa
rorb
aad
ljmp
jmp
out
sbb
jmp
xchg
adc
imull
jo
xchg
sbb
push
stc
sbb
dec
push
cmp
outsl
movsb
xchg
dec
mov
lret
xor
stos
in
sbb
add
adc
outsb
add
and
stos
mov
hlt
scas
add
roll
sbb
lods
pop
outsl
xor
insb
jno
adc
mov
cld
lret
popa
and
pop
xchg
xchg
imul
mov
lock
and
std
inc
push
sahf
aaa
mov
mov
jp
or
xor
test
clc
faddl
push
scas
cmpb
cmp
add
push
test
outsb
lahf
cs
jae
push
movsl
js
push
ja
xor
ret
lock
xlat
movsl
xor
daa
jo
cmp
mov
push
adc
test
dec
leave
and
lods
ret
cmpsl
test
xchg
push
inc
and
movsb
sbb
adc
mov
loopne
mov
jp
push
mov
test
movsb
push
jne
or
cmp
rclb
addr16
xor
out
dec
and
andl
scas
test
jp
out
sub
imul
subl
popa
test
arpl
push
mulb
test
jb
add
add
adc
or
or
xchg
clc
adc
pop
test
jmp
flds
and
xor
popa
leave
lret
jg
and
xor
cmp
sbb
push
lea
push
xlat
addl
sbb
btc
xchg
in
lock
lret
and
pushf
inc
sbb
xchg
inc
jno
xlat
adc
fnsave
mov
mov
ret
dec
mov
ret
jne
in
rclb
imul
int
stos
cli
adc
add
pop
arpl
or
sub
in
cli
cmp
lock
cmp
xor
divb
insl
arpl
dec
and
fs
daa
js
and
mov
pushf
mov
adc
and
bound
repnz
fwait
and
xor
sti
add
mov
loop
pusha
in
scas
loop
call
ljmp
cmpsl
xor
adc
mov
mov
or
xlat
test
jecxz
stc
mov
mov
movsb
sbb
mov
pop
mov
loopne
or
sbb
popf
mov
rorb
sub
mov
ret
cmp
xor
cmp
xor
out
dec
xchg
inc
mov
inc
sbbl
arpl
add
dec
imull
mov
loop
add
lods
push
lahf
shll
lds
cmp
pop
push
sub
sbb
movsb
mov
push
sbb
cmpsb
shl
adc
dec
xor
inc
mov
dec
pop
push
and
leave
or
dec
ja
aas
fsts
or
bound
cmp
inc
mov
and
test
aaa
cmp
addr16
aaa
gs
and
shll
cltd
inc
inc
ljmp
add
cmp
seto
jmp
xchg
lods
je
mov
ja
adc
xchg
adc
mov
and
jns
dec
in
aam
jb
cmp
mov
xor
or
and
shl
jl
cmp
inc
jno
mov
dec
ja
loop
push
or
leave
inc
int
dec
add
testl
push
test
cld
shr
dec
pop
stos
fists
sbb
cwtl
lods
adc
and
sbb
mov
pop
and
pop
mov
xor
sbb
pusha
push
stc
flds
xor
out
jecxz
sbb
in
imul
rcrb
stos
rolb
add
cmp
xchg
aas
mov
pusha
or
xor
mov
xor
dec
jl
fdivrs
or
sub
adc
and
cmp
or
or
adc
dec
int
out
lods
jne
mov
mov
add
sbb
xchg
clc
sub
shlb
mov
or
setae
jmp
and
xchg
lret
mov
xor
stos
in
jb
cmp
sahf
mov
inc
and
test
push
and
dec
add
push
pop
repnz
and
adc
lcall
or
lea
pop
aad
adc
or
mov
iret
xor
add
scas
lahf
sub
sub
pop
sub
xchg
cltd
adc
sbb
xchg
adc
lret
dec
test
mov
pop
jns
xor
xor
jne
xchg
add
std
idiv
negb
sub
and
pusha
jmp
imul
pop
test
adc
jmp
fistpl
mov
arpl
test
pop
pop
sahf
imul
xchg
out
push
loope
mov
jp
push
xchg
cmp
pop
arpl
test
dec
dec
xchg
lahf
sub
pop
xor
sub
dec
and
negl
mov
pop
cmp
push
mov
inc
cmp
adc
add
mov
sub
es
jbe
mov
ds
cmp
or
xor
outsl
push
xlat
xor
es
cmp
sbb
xor
or
xor
inc
adc
xor
jno
iret
xchg
push
sub
adc
stos
xorl
popa
sub
aas
jno
add
das
jl
fisttps
or
fidivrl
xorl
add
adc
jo
lds
popa
call
aad
bound
in
repz
xchg
pop
cs
stos
and
push
fs
add
pop
ss
cmpsl
jno
xchg
dec
push
xor
nop
loopne
or
dec
sub
fmul
sub
and
loop
sbb
js
and
loop
adc
push
lds
cs
adc
repz
and
add
popa
daa
fldl
imul
and
push
rcll
out
xchg
js
dec
shlb
or
not
cmp
popa
shrb
xchg
xchg
hlt
nop
pop
or
xor
rolb
xor
repnz
imul
jne
xor
mov
lds
nop
lods
icebp
and
xor
outsb
dec
test
inc
stc
xor
inc
adc
or
sub
in
jo
fimull
or
mov
mov
or
lock
add
movsl
or
and
cmp
xchg
sbb
mov
hlt
sarb
fldenv
inc
pop
ja
adc
xchg
xchg
sub
sbb
out
insl
divb
aas
add
cltd
scas
jg
sbb
sub
jmp
addr16
pop
xor
das
sub
fstps
clc
adc
add
ret
inc
sbb
xchg
jo
mov
pop
xor
dec
and
lcall
fstl
add
or
adc
ljmp
dec
mov
sahf
jmp
sub
jno
mov
dec
or
xchg
cmc
mov
mov
pusha
add
aas
pop
adc
mov
or
enter
cmp
cwtl
inc
loope
pop
sbb
jmp
mov
or
das
popa
lods
dec
push
sbbl
pop
scas
push
js
loope
outsl
adc
push
mov
dec
jno
test
movsb
xor
cmp
push
dec
add
and
cmpsl
add
fwait
or
adc
jecxz
movsb
add
sub
test
iret
arpl
push
lret
pop
mov
fimull
and
inc
mov
jnp
dec
mov
add
lahf
jp
loope
nop
movsb
sarb
adc
xchg
sbb
sbb
flds
mov
fwait
mov
rclb
mov
loope
repz
cmp
rclb
adc
xor
mov
sub
push
popf
fidivl
sbb
adc
and
mov
adc
push
pop
cs
rcrb
mov
scas
loop
push
clc
ret
jmp
cmp
pusha
insl
jle
add
and
daa
test
lahf
mov
shr
push
sub
mov
push
or
jmp
xor
std
aas
testl
or
pop
ds
sub
pop
xchg
icebp
loopne
jno
lea
push
test
mov
jmp
mov
xor
sub
jne
rorb
in
inc
adc
add
stc
or
adc
xchg
mov
stos
cmp
setnp
arpl
movsl
or
sub
xchg
push
pusha
push
lea
call
jp
lea
pop
aaa
pop
mov
dec
jns
mov
lret
xor
or
imulb
xor
adc
push
or
jbe
jge
adc
xlat
gs
adc
cmp
pop
lods
mov
push
sahf
push
cmp
es
or
push
pop
mov
jns
xlat
pop
cmp
daa
bound
lock
frstor
inc
loopne
cmpsb
roll
imul
loope
mov
cmp
jle
arpl
mov
pop
and
and
testb
sbb
pop
clc
test
and
push
fsubp
sub
dec
push
clc
adc
sbb
xor
or
bound
sub
dec
call
idivl
sub
test
xorl
jbe
xor
imul
mov
sub
pop
lock
push
das
popf
mov
jmp
adc
pop
int
and
adc
les
sub
mov
xor
call
in
sub
imulb
inc
sahf
xchg
notl
and
add
xor
push
leave
shrl
jl
test
and
clc
mov
and
outsl
mov
or
mov
adc
and
cltd
fucomip
je
xor
pop
or
rcrl
xchg
loope
inc
mov
xchg
sub
icebp
mov
xchg
push
sub
dec
and
mov
and
jecxz
xchg
jae
orl
xor
add
jmp
dec
movsb
das
inc
xchg
sub
cwtl
dec
lea
mov
lods
xchg
mov
inc
lcall
pop
shlb
xor
hlt
mov
pop
cmc
hlt
dec
sub
jns
dec
mov
es
dec
hlt
dec
sub
xlat
and
stos
sub
or
fistps
xchg
popa
add
popa
mov
imul
dec
popf
or
orb
repnz
cmpl
adc
nop
dec
adc
cmp
mov
mov
or
cmc
orl
mov
pop
divb
pop
test
loop
adc
mov
stos
rclb
ja
add
xor
dec
jbe
lea
testb
cli
shlb
mov
xchg
mov
push
xchg
shll
inc
pop
or
ss
add
inc
inc
mov
and
adc
repnz
test
sub
xchg
fbld
loop
sbb
fstpl
cltd
bound
cld
pop
dec
lcall
mov
mov
jae
add
add
stos
sub
jno
xchg
jge
cmp
add
jbe
push
or
sbb
xchg
and
mov
xor
sbb
movsl
mov
shrl
rol
dec
and
test
arpl
jmp
adc
and
cltd
xchg
std
jle
dec
lcall
cmp
ss
xor
das
mov
outsl
gs
adc
xchg
jmp
mov
mov
mov
inc
mov
dec
mov
xchg
mov
mov
mov
adcl
mov
pop
push
lds
add
inc
adc
xor
fwait
push
sbb
out
aas
mov
xchg
lea
sbb
sub
stos
pushf
popa
xchg
inc
es
xchg
sub
mov
mov
pop
adc
xor
mov
jo
lock
sbb
xor
incl
mov
inc
add
and
add
nop
push
adc
add
incl
adc
jmp
aaa
push
cwtl
push
es
pop
les
jle
ljmp
orl
xlat
cli
mov
imul
add
inc
xchg
push
jno
xchg
jb
mov
push
dec
pushl
stos
movsl
or
sbb
dec
push
insl
clc
mov
push
into
les
cmp
lcall
dec
out
push
lds
rclb
mov
aad
mov
mov
subl
sbb
call
adc
rorb
lea
fs
pop
ljmp
mov
adc
lock
cmp
ljmp
dec
ret
je
out
sub
mov
inc
iret
adc
ds
call
adc
sub
jno
loopne
arpl
lds
pop
jge
and
cli
add
sbb
push
pop
cmp
push
cs
popf
or
leave
or
test
cmp
pushl
fs
push
mov
pop
lahf
xchg
adc
shlb
inc
inc
jmp
call
xchg
aaa
pushl
outsl
clc
loope
andl
insl
jp
rol
cs
mov
jmp
inc
inc
in
insl
mov
negb
sub
mov
imul
xlat
jo
call
dec
in
push
fwait
out
and
pop
into
mov
call
or
nop
test
ljmp
sti
jnp
fsubrs
xchg
xchg
out
adc
fisttps
xor
cmp
xor
sub
jmp
mov
dec
iret
add
sbb
nop
dec
test
leave
scas
mov
mov
jnp
cmp
popa
mov
and
sub
mov
das
push
sbb
lcall
decl
pop
jmp
shlb
repz
push
mov
jl
and
ljmp
sbb
loop
xor
dec
mov
adc
repnz
js
dec
mov
ljmp
jecxz
int3
mov
stc
test
aas
xchg
pop
mov
pop
sub
push
sti
mov
in
push
jmp
mov
add
and
js
mulb
ljmp
loop
lea
pop
push
push
call
fdivr
and
cmp
cmp
decl
cmp
push
pop
add
mov
xor
cmp
shrl
fisubl
ret
decl
popf
daa
aaa
cmpsb
stos
inc
mov
aad
pop
push
in
mov
fldl
call
lock
movsb
mov
xchg
or
jo
dec
adc
cwtl
mov
pop
lret
dec
sti
push
out
sub
pop
push
pop
int3
movsl
stos
mov
ret
fldl
mov
ja
outsl
mov
jne
aad
cvtdq2ps
mov
fs
pop
inc
sbb
dec
std
mov
push
jl
jae
mov
shlb
sbb
and
fsubrs
std
inc
loope
xchg
ljmp
notl
xchg
inc
bound
pop
sub
stc
je
fs
xchg
adc
xor
ljmp
xor
mov
dec
push
rorb
add
push
and
jmp
adc
rolb
test
clc
xor
out
stos
sti
pop
jb
loop
mov
xchg
jge
std
decl
das
adc
mov
mov
xorl
inc
fadds
sbb
mov
les
mov
mov
xlat
psubusb
pop
xor
out
loopne
lea
incl
rcr
in
pop
je
fadds
cmp
inc
and
insb
gs
movsb
ss
test
jno
shll
ss
xchg
cs
rcll
mov
mov
ret
movsl
data16
enter
jl
ss
punpckhdq
mov
and
test
aas
in
or
xlat
stc
call
mov
or
cmp
dec
and
test
pop
popf
cmp
mov
mov
dec
dec
lods
mov
data16
movsl
out
int3
shl
adc
pop
rcll
std
lcall
xchg
jne
clc
dec
loop
mov
clc
jbe
insl
addb
sbb
ljmp
aas
adc
push
insl
stos
std
sub
jae
mov
sbb
inc
mov
incl
inc
xchg
pop
or
mov
jle
repnz
and
add
outsb
je
decl
cmp
inc
loop
push
inc
add
test
fucomip
pop
pusha
mov
cmp
test
jmp
push
xchg
ds
cli
mov
imul
bound
mov
jmp
xchg
adc
inc
add
cld
xchg
dec
pop
out
xlat
xchg
cli
pusha
adc
ficoms
cmp
add
jecxz
ljmp
rcll
lea
outsl
or
icebp
cld
movsb
arpl
jecxz
jl
lock
mov
icebp
mov
mov
add
ss
jb
lret
mov
and
pop
jmp
xchg
inc
or
xor
xlat
sub
cmpsb
lahf
ljmp
xor
push
mov
sub
scas
aam
cmp
call
mov
dec
jmp
bswap
jb
roll
outsb
pop
push
sarl
sub
arpl
incl
and
mov
mov
cltd
xchg
push
shr
mov
or
xchg
dec
add
out
loopne
mov
call
dec
sahf
inc
les
mov
mov
mov
push
lahf
dec
mov
and
testb
jg
cmp
out
push
pop
add
cld
int
xchg
insb
std
nop
pop
cmc
jnp
cmp
and
mov
inc
das
rclb
mov
sub
dec
ffree
aaa
ret
mov
int
mov
and
push
mov
js
push
adc
push
lock
jg
cmp
push
adc
jb
rorb
lods
sub
dec
xor
scas
insb
jp
cli
pop
pop
mov
stc
inc
mov
push
loopne
inc
and
in
scas
mov
xor
inc
test
decl
mov
or
orb
xor
cltd
mov
lock
decl
mov
xchg
xchg
insl
rcrb
mov
lret
xchg
call
leave
mulb
mov
adc
test
gs
out
jb
sbb
mov
inc
test
into
sbb
dec
in
rorl
push
mov
mov
data16
inc
xchg
ljmp
mov
inc
test
xchg
into
aam
add
rcrl
imul
lock
adc
jmp
ss
mov
dec
fcos
decl
js
inc
outsb
cs
inc
and
push
mov
int
gs
add
cmp
pop
aad
and
push
cs
call
shll
fsubl
dec
aas
sub
cmpsl
pop
pushf
cld
push
xor
jp
dec
test
sub
outsl
call
jp
fldl
cs
cmp
pushf
stc
xchg
adc
and
inc
push
idivb
pop
xchg
cmpsb
outsl
pusha
arpl
arpl
test
rcrb
cld
imul
clc
jns
dec
adc
les
test
pop
add
push
xchg
ss
xor
nop
fwait
in
in
jecxz
orl
jmp
inc
into
xchg
lret
sub
xor
out
mov
xchg
mov
rcr
and
jo
cmp
aad
daa
hlt
test
lcall
scas
pushl
mov
jb
xchg
sub
dec
outsl
jb
mov
mov
into
in
cli
lcall
adcl
cli
andl
lds
out
mov
rorb
sbb
and
sahf
sub
mov
and
leave
dec
pop
or
jnp
inc
push
jo
rclb
push
scas
mov
fmull
jl
inc
aam
out
xchg
aas
mov
insl
mov
loop
adc
lock
into
les
testl
sbb
jo
jae
push
xor
js
scas
cld
dec
bound
lahf
push
movsl
insb
mov
add
mov
push
fucomp
adc
pop
lret
ret
cmp
clc
and
xchg
or
icebp
xlat
push
jmp
add
icebp
pop
int3
loope
pop
and
mov
mov
loop
lods
cmp
cld
fsubr
sbb
cmp
dec
cmp
mov
mov
scas
cld
bswap
dec
inc
int
xor
les
mov
in
sbb
add
adc
test
enter
cmp
popf
add
mov
mov
push
add
pushl
pushl
push
add
sbb
add
es
sbb
push
add
pop
jbe
fnstenv
lret
add
jp
inc
push
sub
cld
mov
incl
inc
adcb
sbb
add
push
push
inc
addl
fcomip
push
addl
xlat
add
sbb
push
addb
sbb
push
fisttps
test
mov
mov
and
xchg
push
pop
or
xor
js
and
and
int
push
jno
pop
test
jbe
and
aaa
and
add
jge
add
sarl
rolb
rolb
sbb
xchg
js
xor
cmp
inc
add
cmc
cmp
into
or
mov
fbstp
add
es
or
push
mov
imul
add
ss
sbb
sahf
insl
lcall
xchg
push
dec
mov
push
cmc
test
inc
dec
jbe
push
pop
pop
sarl
hlt
xchg
push
mov
mov
sbb
cld
loopne
ret
jge
cmpsb
sahf
ljmp
add
push
push
movb
aaa
fbstp
adc
add
icebp
push
pop
fidivrl
jb
decb
in
xor
sbb
mov
scas
loopne
push
loopne
loope
repz
pusha
push
push
shrl
fs
adc
ss
subl
icebp
mov
add
shll
add
sbb
push
cwtl
ret
pusha
or
in
pop
xchg
cmpsb
push
iret
dec
outsb
test
nop
dec
push
lock
ljmp
in
pusha
mov
inc
push
dec
int3
push
pusha
cs
stc
fstpl
in
dec
and
sbb
fldl
sbb
pusha
popa
jbe
push
fdivp
in
jle
ret
push
jmp
mov
cmpsb
sbb
push
push
sar
sbb
mov
sbb
fldcw
out
or
add
mov
mov
mov
out
rorb
jnp,pn
repz
sbb
test
scas
les
fsubr
cld
int3
xchg
aam
ss
sarb
std
push
xchg
es
loope
add
ljmp
add
xor
sbb
ds
popa
add
loopne
out
in
mov
push
inc
cmpl
repz
in
fldl
mov
cmovle
sbb
jp
dec
shrb
pop
mov
stos
adc
pop
push
and
lds
or
in
push
enter
jl
insb
lcall
inc
test
push
repnz
filds
mov
xchg
jge
push
pop
or
pop
xchg
sbb
lock
subl
sti
cmpsb
loopne
xlat
xor
leave
jl
nop
add
lret
lcall
add
mov
push
inc
jo
cmp
imul
mov
lock
sbb
idivb
mov
sub
or
fisubrl
push
push
sbb
pop
push
jge
mov
mov
addb
push
jne
cmpsl
jns
scas
add
cli
sbb
loopne
push
lock
mov
add
add
adc
mov
xor
push
add
inc
sbb
aad
mov
lock
aad
jno
mov
adc
imul
xchg
cmp
std
mov
push
sub
xchg
repz
and
mov
push
dec
xchg
fdivr
jo
inc
xor
push
adc
mov
add
add
mov
in
in
jp
adc
and
inc
addr16
icebp
sub
dec
cmp
outsl
outsl
mov
push
scas
lock
inc
or
inc
push
and
fstps
mov
es
shl
fisubrl
fbstp
icebp
pop
xlat
jmp
faddl
pop
loop
into
or
push
loopne
xlat
ret
cld
adc
push
mov
inc
fucomip
push
scas
dec
mov
aaa
std
pushl
imul
add
mov
fadds
pop
loopne
loope
mov
es
or
adc
cmpsb
jne
in
jle
std
sahf
xor
clc
stc
jmp
shrb
incl
loop
or
push
or
push
add
add
mov
add
push
inc
add
ja
xchg
loopne
inc
ja
push
push
pop
add
aam
mov
adc
adc
push
jo
popf
rorb
cmp
push
sbb
stos
pop
push
cwtl
add
sahf
cmpsb
imul
xchg
std
popf
cmpsb
imul
leave
scas
add
sbb
pushf
or
add
pop
pop
fdivrl
jo
insb
sbb
push
adc
lea
dec
mov
add
lcall
xor
repz
add
sbb
loop
mov
jg
imul
push
push
xor
cmpsb
sub
add
fnstenv
adc
push
sbb
loopne
sbb
dec
insb
cmp
pop
inc
adc
out
pop
int3
and
jo
ret
or
add
int3
mov
outsb
shrb
push
test
movsb
aaa
int
push
push
mov
cmp
inc
out
in
in
add
push
push
shll
ret
lock
add
xor
inc
scas
cs
push
sbb
data16
pop
repz
dec
add
js
jb
in
adc
xchg
add
jp
add
or
or
push
xchg
lret
adc
or
add
out
or
mov
xchg
xchg
jbe
rolb
xchg
pop
lock
test
clts
dec
xchg
adc
in
cmpsb
or
inc
loopne
cmp
cmpsb
add
mov
shl
or
xorb
lock
ltr
jo
into
pop
xor
setp
lcall
xchg
mov
movl
push
push
mov
or
push
add
cmpsb
inc
or
xrelease
or
push
inc
dec
lock
cmpsb
mov
jo
mov
push
add
neg
insb
out
pop
lock
popa
xor
ljmp
lcall
push
or
clc
adc
in
xor
xchg
mov
jno
inc
inc
xchg
ret
or
gs
int3
addb
cwtl
mov
dec
xor
dec
adc
mov
add
pusha
mov
out
lock
mov
and
loopne
lock
repnz
and
jno
push
lret
rclb
dec
nop/reserved
and
mov
int
in
lock
add
arpl
pop
stos
bound
and
jo
stos
dec
out
insl
or
mov
loopne
sub
mov
rcrb
xchg
xchg
push
add
into
sub
adc
dec
add
push
shl
pop
jns
testb
dec
lock
js
xchg
hlt
jbe
push
xchg
cmp
sbb
lock
fwait
pop
sub
outsb
lock
repnz
add
xor
lcall
pop
mov
pop
rcrb
mov
push
std
ja
push
push
sub
mov
and
push
jbe
cmpsb
push
add
sub
nop
data16
dec
cmpsb
or
es
xor
ss
and
sbb
add
xchg
jnp
sbb
leave
and
sbb
bndldx
sarb
jle
or
or
push
lock
xlat
sbb
mov
mov
xchg
pop
xchg
je
mull
out
sbb
add
test
fwait
mov
fs
movsb
imull
adc
add
out
aas
pop
shlb
jns
mov
sub
jns
hlt
cmp
ljmp
xor
mov
frstor
push
in
mov
dec
push
adc
push
or
push
hlt
or
setb
mov
pop
jns
out
push
cmp
out
jmp
out
jecxz
orb
pop
sahf
push
xor
mov
push
lock
jns
jnp
sub
loope
outsb
dec
ds
scas
ja
cmp
or
push
xchg
mov
cs
cmp
xchg
dec
int3
cs
push
xchg
jnp
idivl
adc
push
and
iret
repz
outsl
lcall
xchg
mov
test
sarl
decb
and
pop
add
clc
ds
cmp
lahf
out
fisubs
push
or
aas
ss
add
push
sahf
sbb
cli
add
stos
idivl
jmp
bound
push
out
jns
jg
addr16
outsb
cltd
or
popa
sbb
insl
add
out
ljmp
cs
dec
es
and
sbb
mov
cs
push
add
push
push
sahf
dec
repz
scas
outsb
push
and
sahf
mov
js
cmp
pop
jb
jne
mov
movsl
mov
ja
out
push
fisubs
out
push
mov
cli
xor
popf
out
icebp
lret
sbb
fidivrs
cmpsl
ds
cmp
adc
ds
cld
jnp
push
lods
add
clc
jle
pop
idivb
repz
add
add
mov
negl
pop
xchg
push
fcmovb
cli
push
sbb
scas
add
sub
fmull
faddp
cmp
ds
idiv
sbb
pushl
add
push
loop
dec
into
mov
hlt
ds
sbb
fs
xchg
push
in
pop
ljmp
push
loop
lahf
cli
das
dec
lock
sahf
out
xchg
rol
cs
and
mov
push
and
jle
mov
out
cltd
sub
addl
testb
jns
mov
into
push
lret
push
jne
cmp
jns
lds
dec
les
js
ja
jb
outsb
push
inc
jle
cmp
dec
push
cmp
mov
jns
push
mov
ljmp
idivl
decb
ss
push
les
and
push
ss
cmp
mov
rcl
push
stos
inc
push
inc
xchg
outsb
into
push
sarl
cmpsl
xor
push
fisubrl
sahf
out
pop
loop
pushf
xlat
ds
aas
in
push
add
push
push
push
hlt
push
mov
pop
push
repz
imul
or
call
push
cld
push
or
push
xor
push
das
push
clc
push
sub
push
sub
push
in
lea
call
push
jecxz
push
push
loope
xchg
push
out
push
aaa
push
in
push
or
push
xor
push
sub
jmp
call
push
call
push
sub
push
add
push
push
push
xchg
push
outsl
push
nop
push
push
push
sahf
push
pop
push
pushf
sar
call
push
lcall
push
xchg
push
xchg
push
test
push
adcl
fistpll
push
push
push
cmp
push
es
mov
push
mov
add
push
push
push
mov
insb
push
mov
call
mov
push
dec
push
mov
push
pop
push
cmpsb
push
inc
push
cmpsl
push
adc
push
push
push
mov
incl
push
scas
push
xorps
push
daa
push
test
xor
notl
mov
mov
push
jb
data16
push
dec
push
int
pop
mov
push
jno
push
jae
out
push
outsb
push
dec
push
ret
or
arpl
pop
push
pop
push
push
jbe
fwait
insl
rol
mov
push
push
or
push
pop
push
pop
sbb
ja
dec
push
stos
push
cmp
outsb
mov
insl
repz
cmc
push
push
push
jle
push
insl
push
cld
push
inc
push
je
sbb
xor
push
add
jg
push
push
inc
insb
fsubrs
jne
xor
cs
sbb
insb
jb
js
push
inc
or
popa
push
jl
push
adc
push
test
push
and
add
push
ds
cmp
push
mov
jns
mov
mov
push
inc
push
jge
push
adc
push
movsl
push
popa
or
push
and
cmp
pop
lock
hlt
push
pop
data16
push
pop
data16
repz
lods
data16
push
push
movsb
data16
push
mull
push
cmc
callw
data16
push
icebp
data16
push
jmp
push
mov
sti
push
mov
clc
push
mov
stc
push
xchg
data16
stos
out
hlt
data16
repnz
lock
data16
cld
data16
jmp
push
std
data16
sti
data16
push
stc
out
push
out
in
push
in
in
push
jecxz
ljmp
data16
call
push
jmp
xchg
push
jmp
xchg
push
xchg
xchg
push
nop
xchg
push
sahf
xchg
push
pushf
data16
call
push
lcall
push
cwtl
pushfw
push
cltd
popfw
push
test
push
andl
mov
lcall
push
mov
push
mov
push
mov
test
test
data16
adcl
incl
push
mov
data16
push
mov
lea
data16
mov
data16
decl
decb
push
lret
pop
push
in
push
dec
push
jmp
push
ja
xchg
push
je
call
push
jne
xchg
push
jb
xchg
push
jae
nop
push
jo
xchg
push
jno
sahf
push
jle
lahf
push
jg
pushf
push
jl
call
push
jge
lcall
push
cwtl
push
js
cltd
push
jns
xchg
push
xchg
push
test
call
push
gs
adcb
adcl
adcb
adcl
push
push
outsl
push
mov
call
push
push
push
mov
pop
push
mov
adc
mov
adc
push
mov
adc
push
adc
push
adc
call
push
push
push
mov
push
sbb
mov
push
sbb
push
sbb
push
sbb
push
sbb
cmpsb
push
push
push
cmpsl
push
pop
push
movsb
push
add
notl
cli
push
add
lds
add
push
push
add
push
push
adc
push
add
push
push
bound
sbb
pop
icebp
fwait
or
or
and
push
clc
push
or
outsl
push
cld
call
push
out
inc
ja
push
push
push
in
push
cmp
push
loop
push
sub
notb
loopne
adc
push
push
push
out
push
pop
push
push
pop
cld
mov
push
in
push
pop
pop
push
pop
push
ljmp
call
loop
push
pop
push
xchg
push
sbb
push
xchg
push
adc
push
cld
mov
adcb
xchg
push
arpl
push
gs
adc
push
lahf
push
outsb
lcall
icebp
mov
push
imul
xchg
push
xchg
cld
scas
clc
pop
stos
push
push
push
test
push
adcb
push
adc
push
adcl
lret
push
push
sbb
ficoml
push
mov
push
mov
insb
ss
adc
sbb
js
inc
mov
ficoml
sub
repnz
inc
xor
data16
mov
cmp
add
outsl
ss
int
dec
push
dec
push
dec
push
dec
push
dec
push
mov
push
dec
or
push
cmpsb
push
dec
push
cmpsl
push
jns
push
jbe
sbb
fbld
push
ja
mov
push
jne
mov
inc
push
scas
push
jp
scas
decl
push
lods
push
inc
and
rclb
push
stos
push
jg
test
jno
fcomip
push
test
rclb
push
ficoms
push
fists
push
fcoml
push
ljmp
push
ficoml
push
fcoms
push
mov
clc
push
rcll
push
inc
jbe
jg
out
mov
in
clc
push
loop
stc
push
jecxz
pushf
push
loopne
push
loope
ljmp
push
out
push
popf
push
in
push
out
in
push
cwtl
push
xchg
push
push
xchg
push
les
push
inc
push
xchg
push
ret
push
ret
push
nop
push
rclb
rcll
into
push
lahf
push
iret
push
pushf
push
int3
push
popf
push
cmc
dec
push
lcall
push
cwtl
push
enter
leave
push
xchg
push
xchg
push
test
int
ffreep
adcb
adcl
push
adcl
push
xlat
out
cli
call
push
mov
out
mov
in
mov
fidivl
push
loop
std
jmp
push
mov
loope
mov
push
out
push
mov
add
mov
push
mov
mov
cmpsb
push
cmpsl
push
xchg
push
movsb
push
xchg
push
movsl
push
xchg
push
mov
push
xchg
push
mov
pop
loopne
mov
sahf
push
scas
push
lahf
push
negl
jne
pop
pop
jae
pop
add
pushl
pop
jbe
repz
ja
lock
push
jae
pop
divl
pop
cmc
jne
pop
bnd
pop
lock
pop
int
pushl
pop
lret
jne
pop
enter
divb
pop
jne
pop
cli
jne
pop
xor
ss
pop
xor
pushl
jge
xchg
pop
bound
dec
je
pop
dec
je
pop
push
je
pop
push
lahf
pop
adc
pushl
pop
test
pop
aaa
je
pop
dec
je
pop
aam
lea
je
pop
jg
mov
je
pop
jno
mov
jle
mov
les
pop
ja
pop
ja
push
ja
pop
pushl
pop
je
mov
nop
jae
pop
les
pop
pop
jb
pop
pop
jb
pop
pop
jb
pop
pop
jb
ljmp
mov
pop
jb
pop
dec
jae
pop
inc
jae
ss
pop
inc
jae
pop
push
mov
or
jne
pop
in
jne
pop
mov
movsl
pop
jmp
mov
data16
jg
jmp
pop
jp
scas
pop
fdivp
pop
push
jbe
pop
push
jbe
test
fcomip
jg
repnz
push
jbe
pop
push
jbe
pop
and
pop
pop
jbe
pop
pop
jbe
pop
inc
jbe
jg
lcall
cli
pop
jne
clc
pop
jo
stc
pop
jae
out
add
in
add
sti
jmp
pop
push
ja
pop
add
pop
push
ja
pop
emms
loope
or
out
mov
pop
inc
jbe
pop
jg
jmp
js
call
pop
or
ja
pop
or
pop
or
pop
je
pushf
fildll
jae
pop
loope
cwtl
pop
popf
jae
pop
stc
jae
pop
dec
jbe
pop
dec
jbe
pop
dec
jbe
mov
incl
pop
dec
ja
pop
fs
pop
gs
push
jno
pop
cli
jae
pop
xchg
jae
pop
fildll
loopne
mov
mov
mov
mov
pop
std
pop
sti
jae
pop
ljmp
jmp
jae
pop
jmp
mov
loopne
jbe
pop
cld
jae
pop
in
mov
outsl
cmpsb
jo
sahf
jo
pop
xor
jo
pop
xor
ljmp
clc
insl
jno
push
jbe
pop
ja
movsl
push
jno
pop
inc
jno
pop
cmp
pop
cmp
pushl
pop
adc
scas
pop
push
jo
pop
pop
jo
pop
inc
jne
ss
outsb
jbe
incl
sti
stos
pop
dec
jbe
mov
push
lock
push
mov
jg
lcall
xchg
pop
stc
add
mov
pop
das
clc
fbld
pop
or
pushf
pop
dec
je
pop
ret
jne
pop
bnd
pop
movb
jno
sbbb
pop
aad
pop
mov
je
pop
cmc
lcall
mov
xchg
pop
xchg
pop
test
pop
test
pop
adcb
incl
push
mov
adcl
pop
push
mov
pop
lea
pop
mov
pop
decl
push
mov
pop
mov
cmpsl
pop
mov
movsb
pop
mov
movsl
pop
mov
mov
pop
pushl
push
mov
pop
mov
push
lods
pop
mov
pop
hlt
pop
push
pop
cmc
pop
lock
call
repnz
push
pop
repz
push
pop
lock
push
pop
icebp
pop
push
pop
pop
pop
pop
lcall
pop
cld
pop
ljmp
pop
lock
pop
pop
pop
cli
pop
pop
pop
sti
pop
pop
pop
clc
add
stc
pop
pop
pop
out
inc
pop
out
inc
lcall
pop
inc
pop
in
inc
pop
loop
inc
pop
jecxz
inc
pop
loopne
inc
pop
loope
inc
pop
out
pop
dec
pop
out
pop
dec
ljmp
adc
pop
in
pop
dec
pop
in
pop
dec
and
jmp
dec
pop
call
decl
jmp
pop
jbe
xchg
pop
ja
xchg
pop
je
xchg
pop
jne
xchg
pushf
pop
xchg
lcall
pop
nop
pop
jo
xchg
pop
jno
sahf
pop
jle
lahf
pop
jg
pushf
pop
jl
popf
pop
jge
lcall
lcall
pop
cwtl
pop
js
cltd
pop
jns
xchg
pop
xchg
pop
test
pop
test
pop
sbbb
cmp
lcall
pop
sbbb
sbbl
pop
pop
outsl
pop
mov
pop
mov
pop
mov
pop
mov
lcall
pop
mov
pop
pop
mov
adc
mov
adc
pop
mov
adc
pop
adc
pop
adc
lcall
pop
mov
pop
sbb
mov
pop
sbb
pop
sbb
pop
push
pop
cmpsl
pop
pop
pop
movsb
lcall
pop
movsl
pop
add
pop
mov
pop
push
pop
mov
pop
push
pop
scas
pop
addps
lcall
addr16
pop
fs
pop
gs
bound
pop
arpl
pop
pusha
addr16
pop
popa
addr16
pop
outsb
addr16
lcall
addr16
pop
insb
addr16
pop
insl
addr16
pop
push
sti
pop
imul
push
addr16
push
addr16
lcall
addr16
adc
in
adc
jcxz
adc
pop
adc
pop
adc
pop
push
addr16
lcall
addr16
pop
sbb
in
pop
sbb
addr16
sbb
pop
sbb
pop
sbb
pop
push
addr16
lcall
addr16
pop
add
xchg
pop
add
addr16
pop
add
pop
push
addr16
pop
add
pop
push
addr16
lcall
addr16
pop
or
popf
pop
or
addr16
pop
or
pop
or
pop
or
pop
xchg
lcall
test
test
addb
addl
fwait
int
inc
addl
inc
lea
fldcw
inc
mov
inc
mov
int
mov
mov
mov
mov
mov
data16
inc
mov
mov
mov
mov
fwait
mov
inc
mov
jg
inc
mov
cmpsb
pop
daa
cmpsl
pop
movsb
pop
sub
pop
xlat
addr16
sub
call
addr16
addr16
addr16
scas
and
adc
add
xchg
inc
cli
loopne
out
mov
add
jmp
add
push
divb
mov
idivl
add
cmc
jbe
cmc
push
repz
xor
or
jbe
fisubrs
add
add
ret
movsb
outsl
push
pop
test
outsb
sbb
jle
incb
pop
add
pop
pop
stos
inc
add
dec
mov
push
js
push
jb,pn
add
jnp
lcall
pop
jno
add
jle
add
ja
je
xor
lahf
cmpsb
jne
jg
dec
aaa
jp
mov
outsl
jge
pop
xor
jns
insb
push
add
out
pop
jbe
pandn
pop
sarl
les
daa
pop
lds
sahf
cmpsb
imul
jb
jae
imul
rcrl
add
int
fidivl
lods
addb
addl
add
cmpsb
insl
lcall
cli
cmp
cmpsb
jns
cmp
cmp
cmpsb
cmp
out
ss
aaa
xor
jnp
in
in
xor
dec
repz
loopne
loope
mov
out
ds
addb
call
jnp
fisttpl
xchg
or
stos
xchg
or
rorb
sahf
out
imul
stos
xchg
sbb
rolb
and
cs
das
sahf
sub
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
ss
lods
mov
cmc
rorb
rolb
rolb
rep
mov
or
mov
xor
add
push
push
cmp
and
scas
pop
mov
push
inc
or
add
loop
cmp
inc
add
add
jbe
je
jne
jae
cmpb
jg
js
fs
arpl
outsb
outsl
inc
or
add
ds
call
adc
cmp
es
lods
and
cs
inc
dec
enter
decl
fadds
sub
inc
dec
push
sbb
adc
push
push
adcb
ja
call
pop
pop
les
rcrb
pop
pop
push
mov
jg
add
adc
add
ss
sti
lods
sti
incl
pop
add
mov
adc
cmp
push
xchg
sbb
jno
add
push
xlat
sub
push
aaa
sbb
sar
jg
je
cs
cmp
add
outsl
add
dec
inc
jmp
into
mov
mov
cld
mov
lds
sarl
ljmp
add
call
lods
fsubr
iret
movsb
add
inc
sbb
mov
cltd
push
adc
add
clc
fcos
mov
mov
and
jge
es
ja
xor
rclb
mov
js
cmp
and
and
ss
fisubrs
jg
jo
add
insl
mov
clc
or
fldt
push
stc
sbb
pop
iret
je
dec
enter
out
rcrl
add
cmp
add
push
and
cli
push
into
fbstp
and
cli
sarl
repz
repz
jae
pop
rclb
addb
imul
xor
cmp
add
rcr
adc
dec
loope
jge
jle
jg
lock
add
je
pop
pop
add
push
dec
es
and
dec
add
inc
xor
inc
and
into
scas
add
cli
into
push
cmp
inc
mov
mov
pop
fisubs
mov
push
arpl
mov
aad
add
adc
push
lods
popa
pop
add
mov
and
push
mov
mov
jl
roll
loopne
loope
stos
adc
inc
add
stc
fstpt
into
add
rcll
add
xor
dec
lock
add
add
ja
fisubl
or
sbb
into
inc
sbb
mov
mov
lret
cmp
sbb
sub
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
inc
jne
mov
mov
shrb
push
and
or
decl
push
sub
xlat
aam
rcl
rcl
add
fstp
fcmovnu
flds
mov
in
inc
roll
iret
int3
int
lret
enter
hlt
cmc
repnz
add
cld
std
cli
sti
clc
stc
add
out
in
loop
loopne
out
out
in
in
ljmp
xchg
xchg
xchg
xchg
nop
xchg
add
lcall
add
addl
lea
mov
mov
mov
mov
std
incl
mov
mov
cmpsl
movsb
movsl
mov
scas
scas
lods
lods
stos
stos
test
jg
psubsb
js
add
or
paddsb
push
mov
mov
sbb
sbb
pop
add
push
paddd
add
cmc
punpckhbw
outsl
andl
test
pop
push
add
enter
adc
stos
test
test
sbb
aas
add
jle
mov
mov
add
movsl
data16
xchg
jbe
js
and
push
and
jo
scas
xor
mov
jbe
pop
push
sbb
sub
push
shlb
add
out
in
cmp
xor
roll
dec
push
add
mov
mov
add
lock
inc
mov
add
jg
or
add
add
mov
mov
cmp
aaa
es
js
inc
cmp
xor
mov
scas
and
stos
lret
add
and
add
or
aas
xor
lods
fldl
fsubs
cmp
insb
and
insb
jns
add
outsl
das
cmp
and
cmp
add
xorb
mov
clc
lods
std
ljmp
xchg
pusha
push
add
mov
jg
xchg
xchg
pop
addr16
rcrb
push
out
add
sub
or
fistps
test
je
cmp
xor
stos
mov
or
and
add
xchg
in
or
inc
add
cmp
cld
scas
and
mov
loop
aam
push
sarl
jg
mov
scas
push
add
ds
scas
ds
fninit
popa
cmp
and
rcrb
nop
add
stos
xor
pop
addr16
pop
fstpl
and
incl
add
mov
mov
add
dec
nop
mov
frstor
xor
data16
shld
jbe
and
outsl
js
inc
add
mov
add
shll
dec
jne
imul
jg
ds
dec
jns
jb
frstor
add
lcall
ret
pop
icebp
hlt
add
add
outsl
cli
adc
xchg
inc
in
xchg
cmp
fs
stos
dec
mov
scas
push
sub
ret
addl
mov
fucomi
push
ss
ljmp
mov
cmp
orb
pop
fcmovnbe
rorl
mov
test
adcb
push
jecxz
add
lock
adc
push
dec
in
adc
inc
leave
push
add
mov
pusha
or
cli
or
clc
out
jnp
lea
push
adc
lock
add
push
stos
xor
fldl
fcmovu
add
mov
push
and
and
cmp
dec
addr16
aaa
sub
decb
add
xchg
cltd
pop
push
bound
sbb
and
inc
push
cld
sub
or
or
or
mov
mov
or
movsl
cld
or
andl
add
add
out
add
pop
shrb
push
inc
pop
ds
in
jo
test
sub
or
clc
ljmp
pop
test
fcomps
les
addb
mov
add
lods
shrl
add
add
and
xchg
push
cs
sub
jbe
mov
je
sti
push
xor
mov
loopne
outsb
movsb
and
add
cmpsl
insl
adc
pop
and
outsl
pop
mov
add
xor
pop
sbb
fstl
push
sub
loope
pop
inc
das
pop
loopne
fs
mov
push
add
push
and
dec
inc
ds
repz
dec
xchg
sbb
inc
aad
test
filds
xchg
xchg
push
fdivp
mov
add
mov
jle
mov
daa
adc
pop
icebp
jo
cmp
out
inc
nop
or
add
je
add
push
mov
repnz
les
rclb
das
add
test
cwtl
pusha
mov
mov
dec
xchg
loopne
fists
scas
push
mov
xchg
out
pop
rolb
bound
xchg
cmp
xor
les
test
push
jno
loopne
add
add
pop
xchg
cltd
xchg
add
sar
cld
fistpll
pop
fcompl
xchg
data16
jbe
push
push
fcoml
push
mov
push
sbb
mov
mov
loop
inc
fistps
mov
inc
mov
sar
xlat
data16
push
pop
and
pop
add
push
mov
jb
aad
fistpll
cmpsb
fstl
imul
and
into
cmp
sbb
jg
cmp
test
notw
add
sbb
and
inc
or
stos
sub
or
dec
insl
cld
sub
pushl
xchg
add
push
jp
adc
adc
cs
adcb
ljmp
loop
xchg
cmpsb
pop
add
and
ljmp
push
nop
sub
xorb
stos
add
mov
pushl
ljmp
xchg
mov
jg
data16
movb
fcompl
jb
sarb
lcall
add
pop
jo
popf
jle
pop
fidivl
adc
and
nop
jo
add
cmp
mov
pop
fs
test
xchg
adcb
cmpsl
xchg
push
roll
test
push
xor
mov
pop
mov
and
aas
cmp
cmp
ja
js
mov
adcl
fidivrs
dec
fmull
push
mov
mov
ja
loop
scas
test
ss
pop
push
icebp
jbe
sbbl
push
aad
scas
push
cld
dec
or
and
inc
lods
add
data16
pop
stos
pop
lock
call
outsl
xchg
bound
jmp
fcom
mov
inc
dec
mov
add
dec
or
scas
into
xor
xchg
inc
fs
pop
cld
pop
inc
adcb
mov
and
ljmp
ret
rcr
inc
or
insl
push
ret
adc
insl
sub
add
and
shll
inc
push
les
sub
jle
inc
push
inc
pop
pop
jl
or
push
adc
jo
sarb
imul
push
rolb
or
adc
dec
and
pop
mov
cmc
ljmp
inc
push
andb
shlb
jge
add
adc
inc
jo
cmp
fidivs
orb
stos
scas
loopne
inc
push
add
dec
rolb
xor
mov
add
push
rolb
jp
jg
push
icebp
lcall
add
cs
in
jb,pt
add
or
enter
jns
xor
pop
aas
pop
or
or
or
add
rorl
adc
std
lock
push
fldenv
aas
popf
movb
cmc
pop
inc
hlt
push
mov
mov
inc
leave
mov
inc
das
ret
test
mov
popa
repz
inc
add
pop
jl
aaa
std
cmp
pop
es
and
and
ja
lea
outsb
add
cli
add
outsb
inc
add
out
outsl
repnz
mov
lock
push
cmpsl
push
rorb
mov
xchg
jbe
das
mov
ljmp
jecxz
mov
add
shll
cmp
sub
push
sbb
add
pushf
fnstenv
jns
sbb
scas
add
push
pop
push
adc
cltd
sbb
push
aad
ret
outsl
es
xor
insb
and
jb
jle
call
test
sub
add
jae
add
popf
pop
push
add
jg
mov
into
ret
or
stos
repnz
lods
insb
cmp
push
test
mov
or
xor
add
daa
arpl
icebp
mov
in
push
fdivrp
mov
pushf
add
xchg
lcall
lock
add
sbb
cli
aaa
outsl
adc
rcrl
and
xchg
daa
adc
addb
call
lret
add
mov
dec
add
cmp
jns
movsb
mov
clc
pop
loopne
sbb
cwtl
sbb
dec
divb
ljmp
and
dec
or
adc
add
push
adc
aas
add
call
add
addb
mov
outsl
xor
nop
pop
cmpsl
ss
add
std
rcrl
adc
iret
scas
clc
fwait
incl
jne
stc
push
testl
sub
testl
lcall
mov
pop
stos
cmc
mov
sub
fisubrl
data16
sub
cmpsl
call
ljmp
or
enter
pop
shrl
mov
out
fimuls
decb
inc
pop
mov
adc
adc
xchg
cmpsl
fisttps
sti
iret
icebp
xchg
push
mov
in
fistpl
jmp
pop
test
cli
call
loopne
bound
repnz
mov
add
in
xchg
in
jl
sti
ljmp
ficoml
add
inc
mov
xchg
fucomi
mov
cli
out
cli
jg
jg
int
jecxz
cmp
ja
mov
push
imul
push
out
call
sbb
mov
cmp
mov
push
mov
cmp
pushf
cs
xchg
or
add
ss
pop
imul
or
cld
mov
filds
add
and
loopne
js
ss
subb
insb
add
add
pop
loope
inc
cmp
mov
add
mov
add
xor
and
add
or
incl
pop
and
bound
and
xor
push
loop
inc
add
add
or
mov
and
jo
fwait
mov
mov
adc
aas
pop
cmp
xor
adc
inc
jo
dec
jb
adc
mov
and
cmp
push
add
pop
pop
xor
jbe
jae
je
jg
mov
jbe
cs
and
xor
and
jbe
xor
sbb
mov
mov
xor
pop
enter
push
jns
mov
jmp
add
or
and
pop
fisubrs
cmp
in
jmp
and
es
ja
and
add
add
and
mov
and
jb
jb
and
pusha
jecxz
loope
aam
sub
imul
cmp
add
push
pop
add
add
cmovae
push
lea
add
aaa
xor
iret
jnp
push
insl
cmp
or
add
inc
jg
pop
add
pusha
or
sub
xor
cmp
das
pop
dec
cld
test
adc
jbe
data16
add
loopne
lds
sub
adc
add
add
scas
data16
mov
loopew
sbb
ss
adc
in
or
xor
js
xor
sbb
lcall
mov
sbb
aaa
aas
cmp
push
sbb
xor
sbb
aaa
sbb
xor
add
lock
mov
cwtl
push
jg
sub
test
insb
adcb
xor
in
cmp
arpl
cs
gs
xor
nop
aas
mov
lock
and
mov
adc
lea
push
cmp
xor
shll
or
or
int
inc
and
jo
pop
jg
mov
cs
test
xor
cmp
and
es
mov
adc
and
or
add
mov
shll
sbb
push
pop
push
jo
nop
and
pop
fildll
pop
rcrb
cmp
cmp
and
cs
add
add
jo
test
jl
cld
call
rclb
aaa
xor
xor
xor
clc
jo
adc
test
inc
lahf
pop
sub
mov
aaa
nop
push
adc
xor
pusha
fisttps
incb
nop
addl
add
add
mov
adc
pushl
js
pop
xor
add
xor
cmp
xor
aas
inc
xor
aaa
and
ljmp
pop
mov
sbb
and
xor
xorb
adc
add
sbb
lds
sbb
pop
xchg
pop
cld
outsl
ss
push
andl
adc
and
mov
sar
in
push
jo
sbb
and
push
adc
or
das
clc
dec
pop
insb
or
aaa
cmp
cmp
add
loopne
shr
js
adc
shrl
data16
cmp
pop
fbstp
sub
fcoms
adc
ljmp
cli
adc
pusha
xchg
and
sbb
add
adc
xor
jnp
add
in
call
or
add
icebp
push
adc
adc
mov
sbb
mov
mov
add
or
push
add
xor
jg
cmpsl
add
push
pop
or
ret
mov
sbb
or
mov
loope
push
popa
add
push
add
push
inc
mov
js
add
sbb
xchg
sbb
xorl
dec
adcb
xor
cmp
sbb
cmc
xor
xor
push
scas
mov
add
lock
jle
adc
int3
pusha
adc
mov
and
and
xor
out
mov
inc
and
cmp
es
cmp
push
and
mov
fsubs
add
push
ljmp
xor
in
outsl
cmpsb
add
xor
jo
pop
push
add
sbb
xor
adc
fwait
pop
popf
inc
adc
push
cmp
mov
and
mov
cmp
adc
cmp
pop
stos
aaa
das
ljmp
mov
xor
shrl
adc
ret
push
sub
inc
xor
das
adc
outsl
add
inc
xchg
inc
xlat
out
pop
mov
loop
mov
adc
jmp
stc
mov
mov
sub
repz
aad
xchg
stc
add
les
stos
sbb
popa
sar
ret
lock
pop
movsl
cld
add
add
imul
xor
xor
xor
or
stos
inc
dec
adc
inc
lock
jo
punpckhdq
sub
and
ss
adc
arpl
xor
push
shl
test
bnd
add
outsl
ljmp
lcall
or
and
es
cmp
push
mov
mov
adc
mov
push
pop
xor
mov
add
call
repnz
loope
pop
xchg
add
lock
xlat
mov
cli
and
add
add
cmp
jo
jg
fists
jge
mov
dec
add
jnp
lret
in
push
mov
mov
loop
jmp
mov
inc
add
clc
add
in
stc
fsincos
in
cmp
dec
loop
int3
lret
fmulp
mov
faddl
mov
call
add
cmpsl
movsl
lods
add
mov
mov
xchg
add
aas
clc
mov
mov
out
sti
repnz
xchg
movsl
scas
mov
aad
mov
mov
mov
mov
add
incl
cli
in
rcr
ror
ret
aad
hlt
ret
adc
rcl
xlat
lret
call
pop
add
loope
or
mov
push
pop
add
pop
and
dec
pop
push
je
inc
pop
add
fbld
jnp
dec
pop
push
inc
sbb
inc
outsb
jb
add
jle
pop
aaa
xchg
call
jp
adc
xor
jp
mov
mov
out
out
in
push
push
mov
cmpsl
lods
in
mov
push
add
inc
inc
rcrb
dec
dec
adc
mov
inc
or
dec
add
inc
dec
inc
pop
add
xorb
push
inc
jge
cmp
fsts
inc
adc
inc
pop
push
dec
call
push
in
enter
lret
add
fmulp
lret
icebp
loop
fisubrs
incb
dec
inc
inc
push
jl
std
add
jl
loopne
pop
inc
pop
dec
pop
ljmp
cli
fwait
and
inc
dec
inc
push
push
add
jns
push
push
jg
subb
insl
clc
mov
jge
mov
mov
mov
ja
pusha
jecxz
cmp
sub
cmp
das
sub
or
jp
push
inc
dec
das
jns
cmp
dec
inc
daa
jno
xor
mov
pop
cmp
jle
stos
scas
mov
mov
test
mov
jno
mov
mov
mov
add
mov
stos
scas
scas
in
cmpsl
mov
test
clc
stos
call
push
or
pop
sbb
cmp
sub
and
cmp
mov
inc
inc
inc
pop
pop
or
inc
pop
inc
icebp
mov
or
pop
sbb
out
in
add
in
jecxz
xor
ret
jmp
jmp
loope
in
cmp
cli
repz
out
jmp
call
lret
aam
movl
hlt
stc
filds
xor
cmp
lods
stos
aad
js
clc
mov
mov
xchg
mov
cli
sbb
lcall
mov
call
std
in
aas
clc
test
lods
hlt
std
in
mov
cwtl
sahf
repnz
mov
call
loop
call
lahf
test
xchg
jno
dec
dec
dec
inc
outsl
inc
dec
dec
idiv
mov
pop
inc
daa
ja
pusha
jae
pusha
jo
jo
inc
dec
pop
inc
pop
inc
push
inc
and
lcall
add
push
jno
gs
jbe
arpl
push
addr16
fs
popa
push
pop
js
jb
jp
push
hlt
push
cld
pop
js
addr16
cmp
stos
scas
mov
mov
jmp
stc
sti
std
in
add
xchg
mov
int3
leave
xchg
xor
lahf
xchg
add
out
mulb
clc
jmp
test
add
or
inc
lar
mov
push
dec
adc
push
pop
or
cld
lcall
or
sub
sub
and
and
cmp
xor
aaa
jb
and
cmp
push
dec
dec
sbb
mov
test
fwait
mov
cld
lcall
nop
xchg
popf
xchg
fwait
fwait
pushf
xchg
lahf
mov
je
mov
sahf
xchg
rcrl
mov
xchg
xchg
xor
outsl
aaa
enter
mov
rcll
sbb
xlat
lcall
cld
xchg
ja
mov
mov
mov
decl
push
mov
mov
mov
mov
mov
ljmp
mov
push
jo
popa
jnp
jge
outsb
jno
push
insb
insl
mov
mov
mov
mov
mov
push
mov
mov
xchg
mov
test
pop
cmc
mov
enter
loopne
rcl
ret
jmp
out
decl
push
imul
jl
js
jne
cmpsl
stc
in
cli
sar
jmp
out
mov
out
in
inc
fcomp
lret
lret
into
fcom
xlat
clc
aam
int
aam
incl
lahf
mov
subb
into
int
aad
rol
fdivr
pop
hlt
iret
ror
fcmovbe
mov
mov
mov
stos
mov
mov
ja
or
mov
mov
das
sub
cmp
stos
imul
jg
push
gs
aaa
and
daa
aaa
out
mov
cmp
daa
xchg
subl
cmpsl
lcall
stos
lock
rol
fsubr
enter
xorb
dec
mov
mov
int3
mov
xor
sub
xor
daa
and
idiv
sub
aas
pop
sub
faddl
lret
sar
ret
ret
cld
ror
rol
int3
dec
clc
add
add
adc
sub
sbb
push
aas
xor
sub
cmp
xor
push
dec
popa
dec
add
inc
inc
cs
dec
loop
outsl
add
call
cld
in
ljmp
push
dec
push
push
inc
inc
pop
inc
add
xor
jmp
div
cmc
in
test
fs
pop
mov
arpl
cwtl
mov
test
test
enter
loopne
lcall
nop
enter
dec
pop
dec
dec
mov
adc
adc
or
adc
adc
pop
pop
sub
xor
pop
jl
out
pop
push
sbb
xchg
mov
xchg
mov
test
mov
mov
mov
jmp
jmp
scas
mov
inc
mov
call
mov
push
push
or
inc
add
adc
adc
push
sbb
mov
scas
lcall
lods
mov
xchg
mov
rcl
sarb
mov
incl
je
inc
cmpb
mov
mov
adc
in
mov
cmpsb
jbe
scas
mov
adc
adc
or
mov
test
fwait
mov
addl
mov
push
dec
dec
pop
dec
aaa
cmp
pop
mov
fists
call
leave
mov
mov
lods
sub
xchg
test
in
lcall
mov
xchg
pop
addr16
add
dec
dec
dec
inc
dec
dec
pop
lods
outsl
add
cmpsl
mov
call
scas
scas
mov
ficomps
int3
fmulp
lret
rorl
movsl
mov
push
add
mov
push
pop
push
sub
es
lcall
iret
inc
push
push
dec
dec
push
push
or
pop
add
jp
jg
jmp
mov
pusha
arpl
jae
cmc
loopne
jecxz
in
in
pop
cmp
mov
cs
cli
in
lock
jmp
ret
xlat
shl
in
in
icebp
cmc
mov
repz
outsl
cmc
fucomi
fiadds
ljmp
shr
in
cld
mov
enter
rcl
fmulp
fcmove
xchg
aas
sub
out
add
xchg
mov
bound
pushw
sub
ljmp
mov
mov
mov
mov
scas
xchg
xchg
stos
mov
xchg
cwtl
mov
movsb
cltd
popf
add
jne
bound
jae
jle
lock
mov
dec
popa
insb
dec
inc
dec
adc
push
add
inc
pop
pop
cmp
inc
inc
dec
je
inc
inc
xchg
leave
test
sbbb
xchg
into
aad
ud0
pop
jns
push
dec
dec
daa
add
das
jg
jge
jnp
xor
jp
lret
clc
idivl
cmp
adc
xor
imul
imul
hlt
divb
sub
push
dec
dec
dec
push
dec
pop
dec
jl
push
jp
jo
in
mov
add
aaa
sub
out
mov
scas
lahf
call
aaa
cmp
cmp
pusha
gs
jb
bound
jns
ja
cmpl
xchg
xchg
rcrb
push
adc
cs
mov
ljmp
mov
scas
mov
mov
push
dec
xlat
mov
mov
call
sbb
inc
inc
pop
pop
pop
pop
push
push
cs
into
lret
fcmovne
xlat
sti
jle
stos
sti
out
repnz
fdivrl
in
loopne
int
out
jecxz
loopne
hlt
mov
out
in
sti
in
pop
cmp
rcr
rcr
adc
cmpsb
ffreep
incb
sub
fs
jmp
add
and
rol
cltd
rcl
roll
push
dec
pop
inc
outsl
mov
add
jb
push
mov
ret
int3
rcr
adcb
fmulp
ljmp
aam
fst
lds
lahf
mov
scas
sbbl
icebp
out
fxch
fmul
push
or
daa
cmp
in
lcall
sub
dec
push
dec
inc
adc
xchg
nop
popl
ss
sbb
adc
movlhps
clc
mov
aam
fcmovbe
mov
cmp
out
sti
int
fwait
lds
aas
adc
add
and
incl
sub
adc
jne
cmp
sub
je
jecxz
int
sub
dec
sub
add
sbb
inc
dec
sbb
adc
inc
adc
or
lahf
xchg
out
out
notl
lock
jg
and
fmulp
int
out
icebp
fcmovnbe
cld
mov
vcomisd
cmpsb
mov
jge
add
sub
and
popa
jecxz
in
scas
and
push
jo
jae
outsl
pusha
imul
out
xor
fmull
lcall
jl
call
roll
out
mov
sbb
aaa
repz
rorb
out
hlt
repnz
ret
inc
test
mov
clc
fwait
incb
popl
mov
mov
mov
test
je
jg
call
sub
jecxz
jmp
loope
loop
ljmp
mov
stc
mov
test
cmpsl
mov
fbstp
push
pop
push
dec
dec
sbb
pop
inc
push
pop
jnp
pop
inc
inc
xchg
stos
repnz
scas
movsl
test
stos
mov
roll
pushl
call
ds
daa
sub
movsl
cwtl
xchg
addl
mov
inc
mov
test
int3
mov
fwait
mov
mov
jg
ds
pop
jnp
jp
js
jge
pop
arpl
ja
and
call
gs
push
mov
xchg
leave
lahf
iret
popl
xchg
mov
scas
mov
xlat
rcrb
aam
add
push
cli
in
add
cmp
fs
xor
jp
insl
addr16
cmpsb
mov
and
cmp
sub
and
fdiv
xchg
aaa
sub
movsl
mov
sbb
cwtl
scas
orb
decl
xchg
xchg
xchg
cwtl
xchg
xchg
mov
mov
cwtl
loope
fwait
call
aaa
enter
dec
fadd
filds
ss
inc
inc
inc
xor
add
jg
sub
sub
xor
aas
sub
gs
cli
ljmp
push
inc
dec
add
sub
aaa
and
daa
push
or
cmp
fbld
ss
xor
sub
or
push
or
or
or
sar
or
prefetcht2
dec
xor
push
cmpsl
xchg
xchg
iret
push
pop
adc
std
imul
jle
ja
xchg
arpl
ja
jg
jge
dec
adc
popa
jnp
pop
bound
insb
js
cmp
out
cmc
call
add
cmpsl
mov
leave
cmpsl
mov
mov
lea
sahf
pushf
push
mov
fcompl
adc
mov
iret
out
jp
stc
mov
cld
sub
mov
sahf
dec
push
pop
add
into
shl
or
fwait
mov
jae
inc
push
mov
je
pop
icebp
jmp
pop
inc
pop
inc
add
fs
sbb
data16
dec
dec
add
pop
outsb
jne
data16
outsl
push
push
test
pushl
inc
jno
bound
jle
inc
inc
jb
jp
cmp
rcl
jg
fdivp
fstp
xlat
aam
int3
mov
popa
jb
popa
jno
push
inc
insw
jnp
js
jae
dec
pop
pop
jg
jbe
jae
imul
pusha
imul
inc
push
jge
push
dec
pop
dec
dec
push
mov
scas
popf
cmp
xor
cmp
popa
inc
push
insl
gs
int
aam
stos
scas
call
xlat
shl
ror
stc
fld
rol
aad
dec
cwtl
cli
int
in
lock
fcmovnbe
in
in
clc
loop
out
enter
mul
add
cmp
pop
hlt
ljmp
test
scas
cltd
mov
mov
test
xchg
mov
test
mov
notb
mov
cld
push
mov
pop
dec
pop
jb
and
inc
incl
add
dec
adc
repnz
sbb
inc
push
std
outsb
sub
sub
sub
or
jb
jl
inc
add
ss
das
cli
xor
jge
or
pop
or
sbb
push
dec
adc
outsl
imull
inc
dec
inc
dec
push
inc
ja
scas
es
or
inc
lsl
lcall
adc
or
pop
adc
pop
adc
pop
adc
sbb
sub
and
pusha
out
or
pop
push
jno
jl
inc
das
cmp
jb
and
push
push
dec
inc
dec
dec
pop
insl
dec
jae
push
push
inc
adc
mov
push
ljmp
pop
jns
and
pushl
add
pop
jno
bound
cmp
jp
insl
jne
imul
ljmp
in
orl
orb
les
xlat
icebp
testl
ficoms
xor
mov
mov
fcomip
pushl
mov
lea
cmpsb
ret
test
iret
enter
decl
xlat
rclb
fxch
in
ret
ret
xchg
out
call
loop
out
cmc
mov
fxtract
icebp
add
in
div
out
clc
icebp
out
hlt
mov
pushl
repz
sbb
push
popa
addr16
adc
push
sbb
pop
or
sbb
bndstx
std
incl
push
push
sbb
cmp
sub
and
add
pushl
mov
xor
ss
jbe
xor
adc
and
outsb
adc
lock
repnz
call
lahf
into
adc
or
add
cmpsb
sub
xor
sub
pop
out
cmp
outsl
jne
scas
dec
xor
mov
mov
mov
mov
jmp
rcll
add
cli
mov
popa
push
arpl
sub
ja
or
jg
mov
sub
jne
jo
pop
pop
push
dec
insb
jl
outsw
bound
add
ja
jb
es
fadd
in
push
jmp
std
add
ljmp
movsl
mov
adc
xor
sbb
cmp
xor
ss
scas
lcall
mov
scas
stos
out
lock
out
ja
movsl
xor
and
out
shrb
decb
int
ror
fcmovne
fcmovnb
aam
or
ds
sub
subl
popa
arpl
jge
push
jg
std
out
mov
pop
pop
inc
push
pop
inc
sbb
push
pop
dec
push
mov
mov
add
jns
dec
aaa
dec
fld
xlat
push
xchg
clc
rolb
fst
aad
jg
jg
mov
and
daa
sub
and
outsb
pop
sub
and
es
jne
pop
test
jae
jae
jle
xor
jbe
outsb
cmp
sti
dec
je
pop
arpl
push
test
lods
mov
cmp
xchg
in
loopne
imull
jmp
sbb
shl
push
or
sbb
pop
adc
out
or
mov
sbb
add
popa
adc
push
mov
pop
dec
dec
dec
dec
add
inc
dec
fimull
dec
test
pop
mov
xchg
mov
lods
mov
lcall
loopne
shlb
mov
loop
fst
fisttpll
mov
iret
rcl
or
stos
mov
std
ljmp
scas
out
mov
idivl
test
mov
iret
clc
push
bound
lods
fnstenv
sar
add
repz
pop
or
push
push
inc
dec
or
add
insb
adc
imul
fcmovnb
faddl
lds
mov
int
sbbl
add
push
pop
loopne
inc
push
cmp
cmp
cmp
lods
cs
dec
sub
pop
push
pop
sub
cmp
dec
jnp
jne
ja
cs
xor
outsb
add
addr16
jo
jbe
add
jne
sbb
outsl
imul
pop
push
inc
push
or
ds
adc
clc
cmp
ljmp
in
add
adc
or
es
mov
jae
jg
add
and
sar
lcall
movsl
mov
and
pop
dec
dec
add
pop
outsl
jg
push
inc
cmp
add
and
repnz
mov
incl
std
jmp
icebp
mov
mov
flds
bound
std
mov
ficoml
int
rolb
xlat
mov
add
and
add
fucomp
adc
lret
jbe
imul
fildl
xor
mov
lods
mov
jbe
jnp
incb
push
and
je
sbb
or
adc
or
jnp
jle
jno
insl
add
bound
addr16
adcb
xchg
std
mov
js
cmpb
and
imul
out
dec
pop
and
jle
aas
jl
sub
adc
mov
jb
dec
dec
cmpsb
mov
mov
mov
call
mov
scas
test
scas
xchg
mov
add
sti
mov
mov
call
mov
nop
orb
jl
mov
vmaxss
add
pop
pop
or
shl
pushl
xchg
push
add
push
add
pop
add
add
pop
push
add
jb
push
int3
inc
inc
dec
daa
adc
enter
cmp
ljmp
xor
xor
jnp
xor
call
daa
subb
sub
and
mov
push
test
call
mov
cmp
and
mov
add
orb
or
inc
clc
jnp
xor
cmp
fadds
loope
int
in
cmpps
add
jle
sbb
add
push
sbb
inc
add
inc
add
subl
rcrl
pop
inc
sbb
fisttpl
test
adc
sub
or
stos
andb
rcll
push
lea
xor
sbb
test
sub
push
add
std
pop
add
cmpsb
movsl
and
jge
mov
rcrb
sub
push
add
inc
or
add
adc
xchg
and
sbb
sub
push
add
add
adc
push
mov
fcoms
pop
fsubrl
test
rolb
push
or
xor
lahf
or
adc
and
mov
or
dec
inc
push
inc
gs
mov
scas
inc
add
retw
jbe
test
enter
mov
pop
js
pusha
fcmovnbe
add
or
inc
dec
cmpsb
mov
adc
js
mov
test
out
addb
adc
insl
pop
sbb
adc
subl
ljmp
and
andb
fldt
insl
adc
repnz
scas
fists
pop
jl
idivb
std
cmp
rcll
add
inc
inc
inc
loope
or
fadd
push
fistl
mov
mov
inc
or
test
icebp
fcmovnu
and
insl
push
mov
test
lods
sarl
and
pop
push
add
mov
add
fildll
sbb
pop
fstpl
adc
sub
scas
fistpl
and
or
mov
xorb
andb
sub
mov
stos
mov
adc
adc
aaa
cmp
jb
loope
dec
add
push
out
adc
inc
roll
pusha
and
or
pusha
shlb
mov
loop
add
in
inc
dec
inc
das
loopne
das
or
fisubrs
pushf
daa
aad
dec
js
mulb
dec
cld
hlt
jle
mov
ja
adc
fcmovnb
mov
fisttpll
adc
add
ja
or
mov
out
inc
cmp
cmp
mov
sbb
push
fildl
clc
outsl
xchg
js
fstpl
pop
test
inc
aad
cmpsb
jne
mov
xlat
dec
pop
push
ret
idivb
mov
xor
pusha
lock
add
dec
inc
push
test
bound
ficomps
cli
push
incl
cmpl
add
ljmp
dec
mov
shl
xor
out
clc
fnstsw
ret
mov
or
or
mov
mov
fdivr
aad
sbb
test
push
and
pop
sar
pusha
or
inc
jb
xchg
and
test
or
and
fisttps
jb
ljmp
fistpl
or
xor
dec
inc
aad
pop
fstl
push
and
mov
loopne
mov
push
add
rorb
in
push
and
sbb
push
cmp
dec
sbb
sub
lds
pop
xchg
jmp
cmp
mov
sar
in
adc
nop
jbe
adc
and
iret
ret
adc
clc
push
mov
mov
jne
pop
clc
xchg
andl
mov
jge
jle
dec
xchg
loopne
or
rorb
cmp
or
clc
mov
jo
inc
fdivrl
testl
pop
popa
js
jg
out
xor
jno
add
fiaddl
ds
mov
incl
imul
and
sbb
or
xor
dec
mov
or
jge
sub
push
add
inc
outsb
push
movsb
xchg
jg
inc
inc
leave
loopne
jo
shrl
and
push
and
fs
sbb
insb
mov
je
and
inc
push
push
cmp
fbstp
add
add
faddp
add
inc
shll
sub
lea
sub
jg
or
and
mov
inc
add
lcall
push
fstpl
test
rcll
and
mov
sar
aaa
push
dec
rcll
rclb
fidivl
js
pop
or
push
and
xchg
inc
vandps
dec
lods
out
or
in
shrb
aaa
cld
xchg
stos
pop
sub
inc
and
mov
loopne
inc
int
and
mov
or
in
mov
mov
inc
mov
pop
inc
mov
sub
dec
or
xchg
pusha
fs
add
pop
jbe
inc
adc
loope
loopne
sbbb
call
fisubs
or
add
fimuls
add
inc
and
push
out
cmp
push
fdivrl
stos
lcall
cmp
sub
aam
push
jle
rolb
sbb
adc
jbe
lock
je
bound
mov
jl
pusha
ljmp
pop
test
mov
and
fcmovnbe
sub
push
and
mov
push
jo
ljmp
aad
add
aam
subb
test
add
pop
in
pop
add
inc
ds
aaa
mov
mov
push
adc
int
pusha
push
ds
jle
dec
mov
mov
aaa
std
push
mov
ss
sub
sbb
inc
xlat
mov
call
pop
adc
adc
push
mov
xor
call
adc
and
push
aad
push
inc
and
sub
cld
aas
sahf
jecxz
adc
or
les
pop
pop
je
fnsave
subb
add
lahf
inc
pop
sub
mov
ret
cmpsb
push
push
add
push
and
add
sbb
xchg
pusha
add
pop
testb
xchg
lods
pop
and
sti
jo
sbb
and
sub
cld
mov
push
mov
and
jge
mov
dec
pop
xchg
add
fbld
inc
xchg
add
pop
clc
add
pusha
pop
daa
rorl
pmaxsw
push
jp
outsl
push
incl
in
clc
inc
mov
and
lock
clc
adc
andb
cmp
mov
xchg
mov
rcl
idivb
aas
xlat
push
call
pop
push
adc
and
or
push
adc
ljmp
mov
push
and
loope
inc
mov
push
fistl
pop
lock
push
or
loope
int
movl
mov
mov
add
loope
fistl
add
das
push
mov
jge
scas
add
sub
gs
inc
loopne
mov
adc
push
rclb
inc
mov
fwait
shlb
or
xor
and
or
dec
and
loopne
push
push
and
pop
loopne
or
push
xlat
scas
mov
pusha
mov
and
out
jno,pt
mov
sbb
aad
and
push
add
xor
jae
test
add
xchg
or
xchg
cmpsb
mov
inc
faddl
and
fistpl
stos
add
jecxz
stos
and
mov
push
xlat
cmp
add
xchg
and
insl
inc
jle
repnz
and
mov
pop
push
frstor
fisubrs
add
test
sub
add
fs
outsl
adc
and
insl
jg
je
faddl
xor
outsb
test
scas
fisubs
push
pop
icebp
mov
and
mov
add
or
adc
push
cmp
or
stos
add
jb
cmp
mov
jmp
push
add
aad
and
pop
cmpsb
loope
inc
push
or
push
or
mov
popf
ret
sahf
out
push
nop
inc
test
and
mov
decb
mov
add
sbb
inc
outsl
pop
sub
add
filds
pop
ljmp
outsb
push
jo
hlt
or
jp
push
bound
xchg
pop
jo
outsl
mov
roll
add
outsb
filds
mov
xor
and
and
push
mov
dec
fs
xchg
shll
push
jo
ljmp
push
adc
pop
add
sbb
enter
push
hlt
push
pop
pusha
movsb
jne
push
cmpsb
and
test
sbb
daa
or
cmpsb
pop
mov
inc
insl
cmpsl
add
xchg
add
dec
fdivrp
call
sbb
test
pop
push
sub
lods
roll
test
adcb
xchg
add
ja
ret
or
mov
jmp
push
icebp
add
add
fst
xor
mov
in
mov
sub
adc
sub
inc
scas
push
sbb
sbb
ljmp
sbb
cs
or
jno
outsl
jp
pop
fstpl
jle
push
push
push
outsb
xor
repz
mov
sbb
xlat
nop
inc
inc
add
rcrb
adc
orb
pop
dec
loopne
mov
add
jo
add
lea
adc
lods
fstpl
push
cwtl
xorl
mov
enter
xlat
push
loopne
incl
ret
fstl
cmpsb
inc
or
insb
add
add
addb
dec
testb
adc
subb
inc
inc
xlat
push
or
lock
push
or
incl
jo
pop
fldt
xchg
adc
mov
sub
xchg
sahf
and
push
pop
pusha
enter
outsl
sbb
mov
rorb
inc
cmp
dec
push
outsl
xor
pushf
mov
cwtl
jge
jge
sbb
add
inc
stos
pusha
adc
add
pop
nop
push
test
fucomi
mov
push
jb
xor
dec
fldl
push
test
add
xchg
outsl
mov
outsl
es
add
mov
hlt
add
out
ret
xchg
sub
add
mov
push
add
or
andb
fistpl
xchg
adc
cmp
cli
es
jne
push
testb
out
mov
cs
pop
and
push
pop
and
push
shlb
cld
mov
decb
lcall
ds
pusha
sub
nop
pop
cmc
adc
or
call
jb
jo
mov
jo
pop
rclb
ljmp
fisttpll
jp
fs
push
and
dec
inc
fldt
ljmp
mov
lock
rolb
adc
call
cld
rol
xchg
xchg
pusha
xchg
xchg
adc
add
inc
pop
inc
pop
push
mov
jle
decl
popa
das
jge
pushf
add
orb
jg
or
mov
or
and
frstor
add
adc
andb
jbe
pop
jle
xchg
xor
les
push
add
cli
inc
add
mov
push
jne
mov
jo
dec
inc
fmull
rcrl
jp
rclb
inc
jb
rorb
adc
pusha
sbb
mov
testb
add
sub
lcall
das
fcom
xor
insb
fcoml
add
aam
sbb
aad
es
pop
mov
jg
dec
jmp
loopne,pn
and
sub
mov
lcall
push
add
adc
fiadds
fiadds
inc
pushf
cwtl
inc
push
lea
add
mov
mov
mov
ds
pop
rcl
in
rclb
push
mulb
sysexit
add
imul
push
inc
and
push
ret
mov
pusha
add
jmp
dec
scas
push
mov
add
mov
or
popf
or
pop
and
mov
mov
insl
movsl
adc
ljmp
aad
pop
push
pop
ret
xchg
push
aad
add
stc
push
mov
pop
popa
clc
add
mov
stos
outsl
dec
and
hlt
cld
bound
incb
daa
fldl
aad
push
pop
add
ja
ja
cmp
push
mov
pop
add
orb
orb
xchg
mov
pop
lock
mov
and
add
xorb
fs
sbb
push
jbe
sbb
push
mov
mov
es
and
add
fcoml
adc
sbbb
sbb
dec
mov
pop
aad
dec
in
nop
or
ret
dec
mov
sbb
call
mov
adc
pop
add
jmp
fcmovnbe
mov
mov
std
andl
inc
xorb
or
adc
add
ret
mov
lcall
subb
mov
inc
test
inc
add
sbb
adcb
test
jbe
pop
icebp
fistl
and
psrad
nop
inc
aad
mov
hlt
pop
les
test
aaa
xchg
push
and
es
mov
jl
mov
scas
orl
inc
mov
sbbl
stos
sbb
or
or
add
push
cld
in
stos
or
jb
dec
xor
stos
shlb
and
xchg
jge
pop
xchg
cmpsb
mov
nop
inc
push
fisubrl
idivb
push
or
or
adc
mov
adc
orl
sarl
adc
cmc
xchg
sub
shlb
addb
cmp
dec
add
incl
jbe
cmp
ficoml
addl
je
das
js
popa
ret
pop
push
inc
push
sbbb
fistl
push
inc
adc
das
mov
rclb
adc
push
adc
inc
inc
pop
fs
dec
inc
cmp
and
mov
add
cmp
sarb
add
test
push
shrl
ret
mov
jecxz
mov
fisttpll
pop
jbe
std
scas
data16
inc
imul
push
das
clc
or
dec
cmp
dec
sbb
add
loop
mov
adc
call
inc
add
and
jb
or
data16
call
sub
add
lock
out
pop
add
and
mov
dec
push
mov
and
inc
icebp
sbb
decb
insb
push
frstor
int
sub
fstl
adc
adc
ds
mov
sub
jbe
lret
adc
je
sbb
dec
shll
pusha
pop
xorl
bound
sbb
sbb
add
shll
inc
cmpb
fsubrs
lcall
int
test
pop
rolb
aaa
fcomip
push
push
fistpll
mov
popa
adc
xor
xlat
xchg
sar
clc
orb
jg
mov
adc
aad
add
adc
or
cs
push
and
xchg
push
sub
or
or
xor
pop
rcrl
xor
sbbb
addb
decl
add
dec
inc
mov
jle
or
nop
jmp
jnp
xor
mov
mov
sub
cmp
ljmp
cmp
xchg
push
inc
xchg
and
pop
fists
add
jb
mov
inc
xor
and
and
add
mov
push
sub
or
inc
add
and
cmp
mov
sahf
es
adc
lcall
and
in
loopne
inc
addb
add
pop
dec
push
aad
mov
mov
fs
fisubrl
add
lock
roll
mov
push
xchg
loope
adc
pop
popa
mov
or
roll
adc
aas
xchg
ss
adcb
inc
mov
loopne
jb
test
inc
das
call
mov
hlt
or
push
jae
das
cli
mov
sub
mov
aas
and
pop
roll
pop
add
jb
mov
inc
aas
push
test
mov
frstor
mov
pusha
jo
add
fcmovne
and
inc
adc
test
stos
std
mov
test
rolb
adc
pop
test
dec
push
add
popf
dec
xlat
xchg
popa
add
cmp
test
sbb
cmp
and
fisttpl
and
pop
add
pop
pusha
or
dec
hlt
push
mov
inc
pop
cld
ret
sbb
mov
sbb
addr16
rolb
and
xchg
stos
jg
and
dec
dec
add
add
hlt
mov
and
jp
rol
ds
adc
inc
or
pusha
mov
imul
andb
lods
add
xchg
orb
outsl
outsl
or
or
jecxz
cmp
and
incl
ret
sbb
jnp
jb
push
and
aad
es
and
pusha
mov
aad
pop
test
loop
sub
ret
xchg
test
shll
xchg
loopne
inc
loopne
mov
push
mov
or
loope
jecxz
ret
mov
fs
sbb
mov
out
data16
outsl
mov
insb
inc
out
loopne
imul
pusha
mov
cmpsb
jb
jmp
call
mov
add
push
and
sub
call
ret
or
movsl
daa
mov
outsb
imul
nop
add
push
call
jo
lcall
fwait
push
fsubrl
mov
pop
pushf
outsl
aad
fwait
icebp
mov
pop
out
xor
rolb
inc
decl
push
or
add
or
add
mov
add
jbe
sub
cli
mov
es
fisttpl
dec
fists
push
in
inc
push
ret
inc
pop
loopne
push
mov
and
mov
outsl
insl
xchg
ret
mov
and
and
data16
push
add
rcl
hlt
push
add
das
pop
push
stos
or
arpl
xor
mov
push
shlb
inc
add
xchg
and
fisubs
loopne
push
aaa
jnp
imul
sti
lcall
lock
pusha
add
or
out
clc
add
fs
test
subb
inc
orb
shrl
into
mov
mov
adc
fbstp
cmpb
inc
mov
mov
lea
lock
jbe
pop
cld
lea
mov
inc
test
adc
mov
inc
fimuls
add
mov
mov
jo
lock
in
cs
inc
xchg
pop
decb
sbb
inc
add
pop
outsl
jg
rcrb
loopne
or
inc
xor
push
aad
lods
add
ljmp
dec
xchg
aad
stos
aad
mov
and
adc
jo
sub
xor
incl
lds
or
xchg
popa
fimull
in
pop
gs
pop
insl
xchg
inc
and
rcrl
dec
loope
adc
and
sub
push
and
aad
cs
mov
mov
outsb
mov
xor
aam
pusha
es
add
insb
mov
inc
adc
daa
cmp
pushl
pop
mov
pop
pop
inc
xchg
jno
mov
scas
inc
push
adc
insb
and
subb
or
mov
sarl
push
mov
xchg
mov
xor
push
cmp
xor
loopne
jg
stos
mov
pusha
ficoms
test
cltd
outsb
js
xchg
es
ret
aad
mov
xlat
and
dec
mov
xchg
add
fisttps
dec
ret
inc
or
sbb
dec
jo
std
pop
cld
pop
sbb
jge
jae
adc
add
xor
push
jae
cltd
mov
pushl
or
lock
add
add
add
ficomps
fiaddl
mov
es
xor
inc
pusha
and
dec
dec
testb
sbb
mov
inc
xor
adc
pop
data16
add
stos
add
inc
nop
scas
xor
inc
push
or
and
pop
test
pushl
add
xor
mov
push
add
incl
ss
and
push
dec
sarb
mov
add
cld
jg
fildll
repnz
cmp
popf
mov
test
add
sub
push
sbb
add
cli
pop
push
loopne
mov
add
loop
imul
out
mov
and
xchg
adc
mov
jg
add
jp
xor
add
or
icebp
insl
mov
or
add
in
rol
andb
mov
jg
loopne
or
push
mov
mov
mov
in
dec
aas
jmp
mov
push
push
mov
shlb
sub
inc
fcmovbe
add
jno
inc
and
add
xchg
cmpb
cld
addb
fcoml
and
or
lcall
mov
sub
shll
jo
mov
test
mov
push
imul
push
nop
mov
cli
and
ds
jp
and
mov
xor
jbe
adc
fcmovne
adc
mov
inc
xchg
sbb
add
call
and
or
dec
addb
addl
mov
push
fstl
dec
orb
pop
nop
adc
push
mov
xor
cmpsb
mov
pop
arpl
push
fidivs
test
sub
or
add
pop
mov
fstpl
out
adc
rolb
inc
ljmp
pop
or
xchg
jle
subb
shlb
adcb
nop
lcall
dec
int3
insl
mov
xor
popf
and
ja
fucomip
frstor
push
aad
mov
cmpsb
add
push
and
clc
outsl
fsubs
inc
in
mov
pop
sbb
push
push
push
jbe
sbbl
hlt
stos
jle
add
add
dec
orb
orl
add
cwtl
ljmp
fcomps
scas
jbe
xorb
or
or
jae
loop
insl
sti
int
add
xchg
and
pop
mov
xchg
dec
pop
add
orl
add
inc
pusha
cltd
test
negl
std
pushl
or
test
loopne
fistpl
inc
aad
stos
cmp
jp
ret
mov
adc
jg
sbb
bound
lock
cwtl
cltd
xchg
ja
decl
imul
or
and
mov
lock
push
es
and
shll
lock
rcrb
clc
or
and
mov
cmp
fldl
dec
cmp
sub
sti
push
outsb
test
aaa
and
adc
inc
push
insl
push
loop
repnz
call
bound
and
bound
test
loope
dec
sbb
cmp
or
and
mov
push
sbbb
test
rolb
adc
rorb
or
xor
scas
and
adc
loopne,pn
ljmp
xchg
add
inc
add
add
gs
jecxz
and
rcll
or
mov
orb
jnp
into
xchg
mov
ds
push
add
push
push
jo
cmc
xor
insl
add
add
fcoms
imul
add
test
stos
lret
outsl
dec
aam
jb
jg
outsb
pop
adc
add
add
mov
xchg
in
in
or
loopne
add
add
lret
clc
add
jne
dec
xlat
test
arpl
mov
mov
adc
insl
stos
and
cmp
pop
and
jnp
stos
aam
and
cmp
nop
push
in
filds
sub
adc
mov
ret
ds
xchg
sub
xchg
mov
xor
stos
pop
lcall
mov
or
push
cmp
add
addl
or
add
or
int3
add
adc
adc
mov
setne
push
mov
jle
or
inc
add
faddl
loope
jl
add
sub
and
add
inc
sub
pop
incl
cwtl
test
dec
adcl
push
cmp
mov
adc
mov
pop
sarb
fs
mov
cmpsb
ja
mov
mov
sti
dec
inc
movsl
jbe
inc
add
repnz
dec
aad
js
imul
nop
or
imul
add
pushf
hlt
add
jle
aam
sbb
not
sti
sbbb
mov
xchg
mov
and
pop
sbb
mov
movsb
fistl
push
push
orb
xor
pusha
jo
xchg
ljmp
insl
fbld
jp
push
fnsave
mov
adc
adc
push
adc
add
mov
shlb
pop
or
subb
fistpll
and
in
cmpb
cmp
dec
inc
jg
xchg
mov
add
es
inc
sub
into
ret
xor
push
mov
sbb
and
push
or
adc
insb
mov
add
inc
push
add
rorb
jne
addb
inc
inc
pusha
adc
adc
sub
mov
xchg
push
inc
mov
push
rcrb
sbb
add
cld
es
es
push
test
sbbl
bound
mov
les
adc
mov
inc
adc
andb
inc
ss
aaa
ss
int
divb
or
jmp
cmpsb
out
mov
add
cmovl
popa
adcb
pushl
aas
inc
rcll
inc
pop
shll
clc
add
dec
mov
mov
pop
mov
cmp
pushf
test
jl
adc
es
cmpb
addl
or
ss
sarl
pop
sub
fisubs
mov
sarb
pop
inc
imul
and
adc
fwait
and
xor
mov
or
je
dec
rorb
pop
test
sbb
jo
pop
shrl
sub
xorb
pop
sbb
fwait
or
movsl
adc
lret
mov
frstor
mov
pop
aam
fists
and
adc
les
fdivrp
pop
and
mov
add
test
add
rcll
pop
inc
xchg
cmpsb
ficompl
aad
lock
icebp
call
movsb
fstl
inc
outsl
addr16
adc
push
jmp
fninit
mulb
sbb
add
sub
aam
cwtl
pop
fistpl
or
lods
xorb
and
frstor
cmpsb
inc
mov
cwtl
mov
data16
incl
jne
and
aad
pop
inc
push
jge
push
cmc
add
dec
aad
pop
pop
xor
fldl
arpl
xor
adc
out
jl
sti
push
ss
add
pusha
xor
mov
push
stos
ret
xor
ret
sarb
shlb
add
les
scas
clc
push
xor
push
push
and
fnsave
pop
stos
sahf
filds
cmpb
push
sti
or
sbb
mov
dec
incl
incb
push
push
adc
aaa
mov
rorb
inc
add
stos
or
fwait
mov
add
pop
lds
sahf
lret
push
ss
jg
and
mov
adc
sbb
data16
mov
push
or
xor
sbb
movb
out
outsb
aam
ja
jbe
and
andb
mov
and
mov
aam
add
sbb
fldl
inc
add
jb
add
add
aaa
enter
cmp
rorb
jb
inc
jmp
fisttps
pop
dec
pop
mov
add
add
add
push
lcall
rcrb
ljmp
ss
inc
xchg
and
pop
cmp
inc
decl
jbe
mov
xorb
outsl
or
adc
mov
dec
cmpb
icebp
outsb
xchg
add
push
or
test
insb
push
sbb
xchg
inc
add
push
fcoms
arpl
pusha
lds
rorb
aad
inc
jno
adc
int
mov
xor
mov
mov
and
sub
and
and
or
in
pop
test
nop
adc
xor
add
nop
jle
mov
sub
xchg
push
push
ljmp
push
mov
or
cmp
imul
inc
sub
mov
inc
rolb
aam
int
pop
jl
add
push
sbb
add
pop
pusha
cmp
pop
loopne
js
ljmp
or
or
push
andb
pop
out
add
adc
loopne
les
test
mov
adc
andb
aad
mov
jmp
pop
jb
sbb
add
mov
scas
sarb
rolb
mov
adcb
adc
jl
sub
sbb
repnz
pop
sbb
fstl
mov
push
pushl
inc
inc
insl
cmpsb
and
aad
sub
or
add
push
fisttpll
loopne
mov
dec
test
push
adc
mov
mov
fmull
in
clc
xchg
mov
add
icebp
scas
jo
add
loopne
cmp
sbb
test
mov
add
sbb
inc
cli
sbb
push
adc
mov
test
sub
sbb
dec
cli
fcmovnu
or
bound
mov
cli
loopne
mov
and
add
das
xor
adc
dec
lret
mov
cld
pop
add
xor
and
add
xor
aaa
fwait
mov
inc
jmp
aaa
lock
cltd
sti
popa
jo
jbe
push
add
sub
clc
add
popa
and
sahf
mov
add
mov
push
inc
xorl
addb
jle
out
nop
push
inc
push
cwtl
adc
inc
add
outsb
aaa
push
mov
incl
enter
push
xor
push
inc
push
adc
incl
dec
inc
xor
pop
fists
arpl
dec
or
adc
mov
and
sub
inc
loope,pt
out
inc
pop
testb
adc
sub
adc
cmpsb
das
js
add
add
inc
pusha
dec
push
adc
pop
mov
addb
sbb
xchg
adc
xor
insl
adc
and
jo
loope
add
mov
add
jle
call
test
ret
outsl
add
or
rcrb
fdivrs
mov
js
adc
push
pop
mov
incl
inc
push
cmp
scas
test
xchg
inc
inc
and
push
push
out
pushf
or
fcomip
mov
aad
push
and
xlat
imul
add
add
adc
fbld
loopne
inc
orb
mov
push
and
std
cmpsb
jmp
out
pop
pusha
xor
cmp
popa
or
jne
cmp
add
adc
push
call
or
push
mov
xchg
cmpsb
push
cmp
jnp
sub
mov
sbb
dec
sbb
lcall
stos
and
cmp
roll
push
and
mov
or
mov
jecxz
jbe
add
cmp
dec
sbbb
mov
add
pop
loopne
mov
push
fistps
dec
adc
pop
and
mov
scas
xor
wrmsr
mov
imul
ret
add
mov
and
lcall
xor
jmp
imul
add
sbb
add
xor
push
cld
fildll
mov
push
pop
dec
roll
add
mov
mov
mov
or
and
jmp
mov
adc
adc
lahf
in
xchg
aas
add
push
mov
pop
dec
sarl
add
inc
mov
jo
mov
pop
sbb
xor
adc
int
mov
sub
lock
mov
dec
incl
rclb
jns,pn
sbb
test
sub
mov
mov
outsl
xorb
or
push
sub
sbb
rolb
call
xor
adc
add
ret
das
ljmp
shlb
es
add
push
pop
movsl
pop
std
and
xor
pop
fucomip
inc
mov
add
shlb
inc
add
lock
mov
imul
sbb
sbbb
ficoml
xchg
fcompl
stos
jle
push
jbe
sti
out
fimull
mov
mov
push
dec
add
push
incb
pop
rolb
outsb
cmpsl
jo
scas
inc
ret
inc
or
add
orb
data16
data16
dec
mov
mov
mov
outsl
dec
enter
fdivl
adc
add
jbe
fwait
ret
add
push
lods
mov
sbb
aam
or
or
inc
scas
add
jle
jbe
adc
nop
loopne
loopne
test
push
xor
sub
test
jg
and
adc
adc
push
xor
shll
outsl
scas
js
xor
fstpl
rcr
push
test
adc
xlat
lcall
pop
push
ja
sbb
nop
sub
test
ret
pusha
fists
pop
outsl
scas
clc
xchg
inc
loope
pusha
sbb
int
rolb
in
inc
inc
adc
inc
fsubrs
push
mov
stos
jbe
dec
and
pop
out
sbb
and
pop
shrb
sarb
xor
pop
movsb
and
js
push
add
jg
fists
or
xchg
jae
push
add
subl
outsl
add
imul
add
push
add
add
push
sbb
xorb
jle
sub
pop
inc
or
pop
or
push
push
adcl
adc
or
push
sub
add
outsl
rol
push
in
call
add
dec
orl
dec
mov
movsb
or
or
ror
mov
pop
and
jo
mov
jo
push
ret
pusha
pushl
mov
sbb
xor
out
or
or
or
test
cmp
sbb
jmp
jecxz
subb
mov
or
add
or
and
jo
std
or
mov
add
xor
push
ret
mov
in
or
lret
and
scas
fstl
pop
aad
sbb
add
adc
adc
dec
xchg
das
clc
xchg
and
dec
push
adc
inc
inc
shrb
mov
and
xchg
or
xchg
pop
cwtl
add
jl
sub
add
jo
push
ljmp
fistl
dec
cs
mov
push
xor
nop
lock
mov
cs
scas
push
insl
push
mov
adc
test
or
shlb
mov
pushf
mov
dec
ret
mov
bound
les
outsb
sub
je
jae
sub
adc
jbe
add
jbe
add
pop
shlb
cmp
inc
insb
jl
mov
add
orb
push
ljmp
sbb
push
pop
fists
mov
push
into
cmp
mov
xchg
mov
outsl
mov
pop
push
add
sbb
push
add
jl
mov
cmp
add
bound
pop
sbb
add
push
orb
adc
ja
cmpsb
into
mov
inc
inc
or
pop
add
enter
orb
pop
inc
or
fisttpll
pusha
pop
loopne
outsb
fucomp
js
andb
jge
pop
stc
xchg
xchg
jge
enter
add
mov
push
cmpsb
push
and
fsubrl
cwtl
add
jbe
mov
int
adc
and
cvtps2pd
mov
or
negb
mov
fsubl
sbb
hlt
scas
add
push
push
fcompl
inc
jge
add
subb
mov
pop
mov
adc
mov
push
and
adc
xor
decl
adc
mov
xor
inc
aad
push
aad
xchg
push
jg
mov
mov
jle
cwtl
jb
adc
pop
fldl
adc
aad
fists
decl
push
adcb
adc
mov
mov
movsl
add
insl
scas
mov
imul
xorb
sub
mov
ret
sub
add
push
adc
pop
pushf
outsb
or
pop
test
jae
jg
adc
pop
sahf
pop
rorb
adc
rcrb
adc
or
mov
add
adc
xchg
inc
add
into
mov
mov
std
cwtl
add
frstor
js
fcmovnbe
xor
or
mov
int3
fiadds
test
mov
dec
frstor
sbb
sarl
rolb
or
jge
sub
add
fimuls
test
push
push
and
and
mov
fbstp
sbb
fimuls
inc
enter
and
addb
inc
outsb
cs
ljmp
and
adc
mov
adc
mov
mov
or
pop
shrb
xor
shrb
lods
pop
data16
mov
inc
mov
frstor
rolb
mov
loop
mov
nop
ljmp
fsubrp
cmp
and
adc
pop
mov
pusha
xor
ljmp
aam
js
clc
mov
cmp
mov
xor
stos
out
outsb
push
je
sbb
mov
pop
push
add
insb
push
add
xchg
adc
add
cmp
incb
cli
mov
jg
ljmp
lods
push
rcrb
dec
cmpb
mov
push
cmp
pop
cwtl
pop
mov
mov
push
or
pop
and
inc
inc
add
stos
pusha
sbb
jmp
loope
ret
test
add
mov
and
push
ds
aas
mov
std
lods
loopne
and
inc
push
mov
mov
or
out
movsb
push
fiaddl
rol
mov
mov
das
push
mov
mov
and
fs
add
mov
mov
mov
cmp
mov
cmpb
or
adc
add
push
push
fbstp
les
push
xchg
sub
pop
mov
push
adc
or
adc
jmp
and
fstl
push
cmp
lods
or
mov
loope
xchg
loopne
and
push
sbb
cmp
add
dec
fsubrl
pop
fsub
aaa
jecxz
mov
cmc
pusha
or
mov
testl
add
mov
pop
dec
ret
pop
dec
inc
and
stos
mov
adc
dec
xchg
insl
sub
mov
jp
push
cmp
xor
add
dec
adc
fildll
divb
jbe
fists
push
cmp
fistl
pop
push
xchg
pop
roll
add
add
jl
inc
cli
pusha
push
or
add
call
inc
or
inc
loope
pop
cmp
out
adc
pop
icebp
sub
mov
inc
push
fcmovbe
pop
push
inc
std
loope
loopne
inc
or
pop
mov
adc
js
sub
insl
sub
addb
jo
cmpl
adc
jo
mov
jg
pusha
push
adc
push
xchg
loopne
inc
and
jo
cmp
dec
adc
mov
inc
add
sub
je
mov
fwait
sub
jp,pt
pop
ret
into
add
push
or
loope
cld
bound
mov
mov
and
and
call
inc
or
cmp
xor
addl
or
and
rcl
jb
shlb
push
mov
inc
xchg
dec
test
outsl
clc
pop
mov
js
cmpsb
rclb
add
sub
dec
jecxz
or
ljmp
clc
mov
xchg
rolb
sbb
and
test
mov
pop
std
xor
or
and
xchg
dec
add
test
sti
adcb
adc
xchg
adc
aad
or
pop
push
pop
sub
cmp
push
xor
adc
or
cmp
fucomp
nop
dec
sahf
add
or
inc
nop
adcl
add
lock
jle
rolb
subb
and
dec
cmpsb
push
pushl
sarb
inc
jmp
pusha
dec
mov
pop
sbbb
sar
cmp
fistpl
popa
adc
mov
add
sub
add
data16
pop
fisubrs
add
add
loopne
cmpsb
xchg
pop
add
data16
mov
icebp
mov
add
sub
stos
dec
inc
imul
add
outsl
sub
sbb
shlb
adcl
or
aam
ss
test
cmp
out
xchg
insb
push
adc
lahf
xchg
xchg
cmc
push
pop
in
jbe
push
test
stos
inc
add
push
xor
ljmp
add
sub
add
cmp
rolb
add
outsl
les
arpl
inc
stos
xor
js
push
inc
add
pop
dec
dec
push
inc
push
sub
fnstcw
cld
pop
mov
jb
push
aas
or
xchg
cmp
push
outsb
jno
cmp
or
stos
or
movsb
or
xor
jl
adc
out
shl
inc
mov
idivl
incb
lret
ficoms
or
es
inc
loope
and
mov
adc
push
or
add
icebp
jb
mov
adc
sub
icebp
ret
scas
cld
mov
push
inc
and
loopne
inc
and
fisubs
mov
adc
sbb
pop
xchg
mov
pop
xchg
adc
sub
test
push
ret
sbb
shrb
bound
cmp
daa
adc
sub
push
jl
int3
out
or
movsl
xor
mov
add
call
mov
cmp
popa
add
faddp
adc
mov
and
and
out
adc
push
and
or
out
not
and
sbb
dec
loopne
pop
mov
push
and
jl
fidivs
loopne
mov
add
ljmp
ret
out
xor
add
mov
pop
cmp
xor
xor
lods
fistl
add
and
frstor
add
xor
bound
inc
nop
scas
enter
add
push
jb
cli
stos
mov
push
fistl
push
fisttpll
xchg
les
inc
and
negb
je
mov
push
inc
dec
mov
addb
add
or
mov
pop
rcrb
push
jmp
mov
inc
inc
adc
cmp
add
inc
adc
lock
mov
cmpsb
pop
jle
cmp
add
jo
mov
xor
loop
loopne
rcrl
dec
or
push
push
orb
cmc
jg
add
adcl
and
and
push
loopne
fisubl
pusha
outsl
or
jp
outsl
sbb
dec
and
jbe
test
pushl
ret
mov
inc
and
adc
adc
in
add
ret
adc
add
mov
add
dec
pop
pop
sbb
aaa
mov
add
repnz
dec
xchg
add
xorb
rcrl
es
mov
cs
or
ss
aam
push
mov
or
xchg
xor
xor
aaa
mov
insl
xchg
and
pop
mov
repnz
or
cmp
aaa
or
lods
repnz
add
pop
and
dec
rclb
adc
das
or
add
mov
inc
das
xor
outsl
lock
and
push
add
or
sub
dec
insb
add
adc
aas
dec
lock
add
lahf
loopne
sub
fnstsw
push
scas
cli
call
jb
popa
add
and
pop
mov
or
cwtl
icebp
xchg
inc
xor
loop
adc
jo
sbb
dec
add
mov
pop
gs
xchg
mov
lds
jno
mov
xor
loopne
mov
mov
js
add
or
adc
mov
sbb
loopne
or
and
mov
push
mov
pop
clc
mov
adc
imul
and
mov
sbb
adc
stos
rclb
push
and
ljmp
push
nop
sbb
jmp
scas
mov
mov
xchg
inc
or
sbb
imul
xchg
fcmovne
sbb
mov
mov
cmp
and
jg
fwait
cwtl
dec
push
push
sbb
xorl
xlat
test
nop
push
jl
push
jmp
push
adc
xchg
adc
sbb
aas
or
cmp
add
add
pop
or
or
mov
or
or
or
or
call
sbb
out
dec
and
and
nop
test
and
les
aad
aam
push
or
mov
and
add
mov
jle
push
xor
repz
out
scas
sbb
sub
cld
jg
dec
mov
xchg
fs
sub
xor
jae
adc
or
push
xchg
mov
push
lret
jb
mov
dec
dec
xor
xchg
lods
mov
mov
fnstsw
xchg
and
jb
outsb
adc
dec
mov
push
loopne
jo
gs
rolb
int3
jb
aam
sbb
mov
xchg
add
jge
xchg
mov
aaa
sbbl
movsl
fsubl
push
or
into
push
inc
add
sar
mov
push
out
mov
cmpsb
fisttps
add
lcall
add
into
xchg
xchg
lcall
and
das
push
adc
jb
dec
xchg
test
mov
test
cli
push
fisubrs
push
add
push
inc
dec
mov
add
pop
jmp
lock
incb
call
gs
and
sub
or
test
or
xchg
or
adc
dec
clc
pusha
arpl
and
jbe
icebp
or
lea
mov
je
mov
push
ja
sbb
scas
or
add
mov
add
add
scas
mov
fistps
pop
ret
jcxz
sbbb
and
add
dec
add
adc
push
incb
add
push
lods
push
jbe
dec
xor
out
cli
mov
and
add
push
dec
test
or
and
push
loopne
out
jle
loop
adc
int
sub
jle
mov
cmp
fstps
jb
sub
push
inc
rcr
push
test
add
ficoms
mov
out
pop
dec
mov
fcomi
and
fldl
mov
adc
stos
mov
subb
test
fisubrl
add
mov
pop
cmp
add
or
or
js
mov
test
xor
pop
mov
outsb
inc
sbb
mov
bound
rorb
add
mov
orb
loope
les
add
aam
dec
jle
mov
xor
imul
add
inc
lcall
add
mov
add
push
rorb
roll
or
cmp
mov
adc
call
cmpsb
mov
push
xchg
adcb
xchg
mov
and
jg
mov
out
or
adc
lea
add
mov
dec
loopne
decl
sbb
sub
fstpl
rcrb
sub
push
inc
cmp
jbe
andl
and
fldt
cli
adc
or
sbb
mov
inc
inc
or
dec
xorb
mov
fs
fidivl
shlb
inc
cs
jp
sbbb
aas
add
subl
push
inc
pushf
scas
and
pop
stos
sbbl
rcrl
popa
inc
add
inc
pop
and
mov
xchg
dec
inc
addl
xor
filds
xchg
inc
pop
or
pop
rorb
mov
js
loopne
inc
pop
fstl
mov
sub
mov
decl
bound
or
out
push
rorb
sub
subb
repnz
cmpsl
inc
inc
insl
test
addb
push
sub
adc
lret
xor
fsub
aad
dec
test
out
jmp
ret
xchg
adc
xchg
insl
xchg
push
jg
rorb
add
push
adc
shlb
cmp
movd
bound
ret
clc
fstpl
or
shl
push
lret
call
pop
and
add
pop
loope
shrb
aaa
mov
sub
lock
pop
sbb
xor
push
xchg
mov
negb
sub
lods
jb
fstl
loopne
and
add
add
fdivp
adc
pusha
inc
pop
lock
fcoml
fists
jo
and
add
and
and
nop
and
or
or
adc
or
mov
fistps
adc
dec
mov
adc
int
test
pop
hlt
pushf
test
decl
pop
adc
mov
adc
fistl
mov
lea
and
pop
adc
and
in
or
ret
subb
adc
push
fidivrs
xlat
xchg
push
add
lods
das
es
outsb
and
mov
jp
dec
fstl
pusha
or
pop
cs
fistpl
idivb
push
scas
xor
pusha
cs
push
and
sbb
mov
imulb
cli
add
scas
fcmovnu
out
and
dec
push
mov
test
jo
jnp
call
mov
andl
add
fldl
cld
pop
cmc
pop
nop
sbb
inc
or
or
xchg
xchg
mov
ja
test
add
jb
insl
movsb
dec
mov
data16
movsb
loopne
ss
sub
mov
pusha
cli
xchg
addr16
push
adc
xchg
mov
fcmovnb
pop
mov
mov
mov
inc
cmovb
inc
inc
fisttps
add
mov
lcall
loopne
inc
xor
fdivrl
pop
sbbl
jle
xlat
mov
adc
enter
push
xor
sbb
in
mov
jg
loopne
xchg
loop
pusha
push
mov
or
mov
cld
or
or
jmp
clc
dec
push
sbb
mov
push
inc
push
or
mov
mov
push
scas
mov
inc
sbb
adc
adc
xor
xchg
dec
sbb
pushl
and
and
or
cs
orb
rorl
and
loope
outsl
fisttps
push
mov
lds
or
dec
rcr
jecxz
inc
add
mov
addr16
mov
insb
or
or
subb
gs
stos
pop
popa
push
rolb
in
push
aad
lods
or
xchg
mov
enter
adc
xchg
jge
jbe
mov
test
rcrb
cmp
pop
das
mov
add
loopne
into
pop
dec
add
jg
incl
add
loop
adc
in
mov
push
and
scas
add
aad
mov
pop
push
mov
pop
add
xchg
loop
add
out
scas
jnp
test
es
add
push
or
xchg
dec
adc
sub
adcb
xchg
outsl
or
test
and
add
push
sbb
xchg
mov
lret
push
leave
rolb
push
and
xlat
xchg
jmp
mov
aaa
inc
jmp
lahf
lcall
mov
push
xchg
mov
and
cmp
lock
shr
pop
add
or
movsb
cli
jg
and
fstl
mov
dec
ficoml
fs
sub
sbb
rorb
push
xor
nop
or
push
push
lods
orb
adc
adc
lock
mov
faddl
pushf
mov
lods
push
add
mov
roll
sbb
adc
cli
add
mov
inc
or
ljmp
pop
adc
jo
push
fcoml
or
mov
mov
adc
fcomi
ljmp
lcall
or
fistl
aad
push
inc
push
data16
ja
push
pop
xor
xchg
jge
nop
xor
inc
clc
decl
fmull
inc
add
dec
pop
fiadds
insl
cmpsl
test
movsb
and
lea
mov
push
and
add
xchg
mov
adc
push
pop
cmp
mov
lock
adc
outsl
jg
test
mov
mov
fs
pop
nop
test
pop
popa
cmp
sub
or
pop
xchg
adc
insb
cld
push
jnp
addr16
xchg
and
mov
bound
mov
dec
or
mov
fstpl
dec
fldl
cmpsl
and
add
inc
test
mov
sahf
xor
mov
mov
sub
sub
scas
dec
mov
cli
test
imul
inc
sub
mov
add
jle
rcrb
sub
lods
push
xor
push
inc
cwtl
fadds
cmp
pop
mov
clc
aam
xor
shlb
ja
jmp
or
inc
fstpl
and
inc
adc
pop
inc
or
sub
mov
adc
xor
adc
scas
sub
es
mov
pop
push
mov
push
std
and
add
mov
stc
pusha
or
inc
mov
in
adc
pop
pop
aam
test
pop
push
pop
adc
int3
shlb
fnsave
pop
mov
adc
mov
mov
xor
push
add
jo
mov
loopne
es
xor
aad
rorb
add
and
mov
or
inc
pop
or
pop
fwait
call
and
add
dec
add
push
pop
inc
shll
jo
je
inc
mov
jmp
pop
jno
pop
inc
add
adc
inc
in
mov
outsb
pop
and
add
sbb
jns
or
adc
pop
pusha
in
xchg
xchg
jp
movsl
push
or
push
mov
or
test
loopne
addl
sub
incl
adc
xchg
mov
pop
loope
paddusw
aam
add
gs
jno
arpl
inc
mov
or
mov
jmp
orb
clc
add
pop
pop
and
je
and
out
mov
or
and
test
add
xor
xorb
mov
rorl
mov
sbbb
mov
pop
and
pop
and
xchg
push
insl
or
add
cmp
or
sub
push
dec
ja
call
sub
punpckhdq
imul
cmovle
push
leave
push
mov
fistps
sbb
nop
add
cmovbe
mov
rcrb
cmc
rorb
shlb
mov
mov
jo
mov
cmp
adc
insb
rcll
push
adc
cld
pop
adc
pop
pushl
mov
push
pusha
add
std
xchg
xor
in
mov
adc
lock
or
pop
sahf
fnstsw
push
xor
adc
mov
rol
mov
fildl
mov
mov
rolb
pop
aad
or
add
add
push
sbb
or
nop
addb
das
mov
xor
clc
jne
roll
lods
mov
mov
rclb
pop
repnz
loopne
mov
lds
fdivrl
sub
aad
and
pop
inc
add
jp
add
cld
lcall
add
sbb
or
add
xor
and
rcr
or
popa
push
xchg
out
add
stos
test
mov
and
inc
stos
dec
repnz
shlb
sub
add
aam
inc
cli
addb
mov
test
pop
pop
and
in
xchg
fsubl
nop
or
je
iret
or
rorl
fsubs
test
pusha
ret
data16
and
or
pop
inc
add
and
sar
or
loopne
and
dec
push
push
addr16
xchg
mov
jbe
cmp
in
pop
jnp
add
add
add
adc
add
pop
stos
out
ss
xchg
push
push
add
or
inc
and
insb
inc
clc
jg
pushf
and
rcrb
lahf
and
xchg
mov
je
es
inc
xor
lcall
mov
xchg
add
push
and
push
push
sbb
push
xor
pop
stos
clc
cmpb
push
repnz
mov
fbld
lahf
adc
push
jle
or
and
adc
mov
push
adc
test
xchg
add
mov
jle
dec
jge
pusha
sbb
popf
nop
adc
or
push
loope
rcrb
data16
xchg
loopne
mov
add
popa
xchg
sub
das
adc
ds
push
enter
mov
mov
xor
mov
add
rorl
lea
pop
andb
outsl
adc
inc
adc
mov
fistpl
dec
add
outsl
sbb
mov
popa
sub
xor
push
adc
push
test
mov
inc
repnz
sub
pop
sub
or
fdivr
add
fstl
jl
inc
adcb
or
addb
and
push
pop
add
clc
ljmp
mov
lods
xor
movsb
pushf
lcall
add
scas
xchg
jb
ds
enter
xchg
mov
mov
or
hlt
fildll
push
mov
push
inc
push
xchg
mov
inc
test
add
adc
enter
and
into
test
push
xchg
adc
add
dec
add
push
sub
call
xchg
adc
les
cld
add
scas
outsb
add
insl
je
shrl
push
mov
in
fistps
jle
mov
cmpxchg
adc
je
adc
or
lret
or
or
lret
mov
xchg
jb
inc
xchg
add
xchg
push
pop
push
loop
lcall
pop
inc
jbe
pop
fcoml
pop
into
add
push
mov
mov
cmpsl
adc
insl
add
push
push
inc
ret
out
push
add
add
or
out
sbbb
adc
mov
cmpsl
mov
orb
add
xchg
mov
addl
and
mov
outsl
or
je
cli
out
outsl
dec
adc
xchg
fists
mov
inc
jge
fistpl
xchg
sarb
adc
adc
popf
push
mov
inc
add
and
push
xchg
inc
or
inc
dec
adc
bound
sub
cmp
shlb
adc
fsubs
cmp
mov
stos
sbb
dec
pop
insb
dec
jo
inc
adc
mov
or
dec
andb
insb
ficomps
xor
shrb
pop
fmull
pusha
add
add
mov
adc
pop
and
fistpl
and
xchg
jbe
sbb
add
add
jbe
lret
dec
pop
call
add
inc
push
xor
adc
add
out
faddl
and
cmp
fst
lods
cmp
das
push
xorl
inc
insl
sbb
inc
sub
xchg
jmp
incl
or
outsl
or
add
or
mov
movntps
fwait
dec
lods
pop
sub
add
sbbb
roll
outsb
cmp
mov
popa
pop
push
notb
add
insl
stos
aaa
sub
add
cmpb
jo
push
test
cmp
xor
mov
sbb
push
hlt
ret
outsb
loopne
addb
mov
fdivs
andl
inc
retw
adc
add
mov
dec
decl
add
mov
dec
shlb
cld
sbb
rolb
sbb
cmc
xchg
mov
jge
or
xchg
push
imul
fstps
into
add
mov
stos
add
mov
sub
adcl
cmc
inc
xchg
pop
std
or
ret
inc
int3
imul
jl
push
xchg
in
cmpsb
sarl
inc
cltd
scas
add
pusha
and
jle
push
mov
xchg
and
push
xchg
fs
mov
xor
pop
mov
xchg
pop
or
popa
jg
inc
adc
mov
cmpsb
mov
xchg
and
cmpsb
aad
test
jae
std
sub
push
xchg
or
dec
adcb
xchg
inc
adc
sti
jg
inc
pusha
cmp
pop
mov
push
adc
imul
and
mov
scas
push
shlb
decl
or
cs
adc
push
mov
pusha
cmc
cmp
movsl
sbb
test
dec
cmpb
xchg
pop
mov
push
pusha
push
mov
cvtps2pd
xchg
mov
add
adc
mov
addl
aam
xchg
push
or
rcrl
lahf
jecxz
pop
add
ret
cmpsb
or
adc
push
or
pop
cmc
jg
inc
loope
popa
cmpb
pop
addb
outsb
sub
xor
cmp
movsl
add
push
lods
and
or
cs
xchg
popa
sbbb
cmp
dec
mov
mov
sub
add
inc
push
imul
insl
idivb
fistps
sub
or
push
roll
bound
mov
ds
filds
test
sub
add
inc
and
pop
shlb
add
ret
adc
out
insb
and
repnz
test
test
shr
xchg
inc
or
inc
inc
dec
dec
pop
arpl
mov
clc
pusha
jge
adc
loopne
mov
and
decl
push
add
sbb
pop
push
ds
and
lods
push
push
add
pop
mov
jl
in
clc
shlb
xor
push
add
mov
sub
or
shrl
mov
or
loopne
and
test
adc
loop
inc
pop
mov
sub
cld
add
and
mov
xchg
pop
mov
push
movsl
cs
mov
push
inc
sub
dec
pusha
sub
std
aaa
andb
mov
stos
test
subb
pop
inc
adcl
add
cld
sub
mov
loope
xor
xchg
imul
add
fisubs
ds
add
fdivrl
add
rolb
shll
mov
mov
add
scas
and
rcrl
adc
push
into
inc
imulb
fwait
or
add
pop
insl
adc
cs
push
mov
fisttps
shlb
in
or
jecxz
loope
pop
pop
sarb
add
aad
adc
ret
sahf
push
mov
and
fcompl
mov
lcall
add
lock
or
or
imul
and
fbld
inc
out
pop
jo
out
shll
sarl
sarb
adc
out
dec
inc
sbb
lock
add
adc
inc
loope
or
pushl
add
fcmovnbe
stos
xchg
dec
cmp
xchg
lock
adc
mov
ds
xor
jmp
and
fcomp
lods
mov
add
inc
pop
insb
inc
shll
mov
xchg
inc
jg
mov
shlb
xlat
push
mov
add
nop
dec
push
inc
outsl
mov
mov
pop
inc
sarb
lock
jl
repnz
and
and
push
pop
xor
adc
fldt
mov
sbb
bound
sub
out
nop
push
clc
decl
or
outsb
mov
and
pushf
or
int
imul
pop
rclb
add
mov
push
pop
push
adc
nop
pop
and
inc
fucomi
ret
pop
mov
or
wbinvd
rolb
dec
ds
jno
ds
imul
push
imul
pop
jl
or
xor
ljmp
jo
fsubrp
and
add
roll
adc
dec
mov
call
pop
and
adc
enter
les
or
jo
push
and
adc
shll
ficoml
pusha
ljmp
sarl
sbb
push
pop
xor
adc
outsl
ss
xchg
iret
int
jl
jge
dec
mov
push
push
add
push
adc
dec
loopne
clc
jg
add
rcrb
dec
sub
sub
sub
nop
add
or
or
jge
pop
or
sbb
mov
inc
sar
push
xchg
enter
loopne
mov
sbb
jae
mov
lea
fisubrl
mov
pop
mov
cmpsl
cmp
test
rclb
and
filds
add
nop
cs
shlb
cld
adc
adc
fstl
stos
push
out
add
cwtl
test
cmp
call
inc
xor
sbb
xchg
sbb
sar
orb
push
xor
pop
xchg
repnz
mov
adc
dec
sub
push
jae
loopne
mov
jbe
push
dec
and
scas
jo
xchg
arpl
mov
push
fldl
iret
mov
jmp
dec
mov
push
mov
pusha
sbb
add
call
add
test
out
push
push
int3
xchg
push
inc
jno
fistpl
add
in
jg
mov
adc
rcll
and
lock
add
jle
and
inc
and
inc
fisttpll
and
jo
dec
bound
and
or
iret
pusha
adcb
data16
arpl
sarb
sub
incb
sub
rcrb
jbe
jae
out
and
mov
xchg
daa
mov
mov
das
pop
fdivrp
or
std
lock
pusha
adc
push
dec
push
jg
loop
loope
mov
js
rolb
inc
popa
jl
loop
pop
push
ret
jbe
data16
shl
mov
and
sbb
cmpsl
stos
in
sbb
adc
pushf
cs
sar
mov
mov
andl
jb
add
dec
mov
or
popa
and
and
andb
or
add
add
and
push
push
fstl
mov
dec
ret
and
testb
and
js
inc
push
xchg
add
dec
adc
test
sub
decl
push
pusha
push
inc
xor
push
enter
rolb
inc
push
cmp
loope
mov
push
jo
pop
orb
push
sar
mov
lock
jbe
adc
dec
sbbb
mov
sbb
dec
inc
data16
gs
outsb
xchg
add
data16
push
push
push
test
adc
add
ljmp
bound
add
pusha
rcrl
adc
loopne
push
add
and
mov
pop
and
les
inc
inc
or
sub
adc
jb
lock
stos
push
loopne
insb
adc
sub
rorb
ret
push
pop
sbb
lcall
pop
cwtl
push
mov
sub
xorl
mov
roll
bound
mov
add
xchg
mov
xor
sub
push
divb
push
je
pop
push
add
push
pop
popa
mov
inc
and
mov
jmp
add
xchg
add
mov
scas
or
shll
jb
push
nop
mov
cmp
cmp
shll
rcrl
loop
mov
or
stos
cmp
xorl
push
dec
scas
adc
pop
or
pushf
fcomip
out
add
sub
pop
lcall
std
sbb
push
add
subl
xchg
addb
out
mov
fidivrs
add
ljmp
inc
cmpb
push
push
addb
inc
or
loopne
clc
sbb
and
sarl
push
sub
xor
pop
push
and
adc
xchg
mov
ss
subb
cld
sbb
arpl
inc
and
pusha
add
shlb
pop
push
push
and
adc
jmp
addl
mov
aam
xor
pop
push
add
pusha
in
mov
push
cmp
adc
push
adc
dec
fstl
decl
loop
and
mov
sbb
in
ljmp
rclb
push
mov
std
cmpsb
sub
aaa
movsb
mov
data16
and
sar
sub
pop
mov
lock
jg
add
inc
mov
jo
subl
add
aam
sbb
mov
and
push
jge
mov
sbb
cs
cld
loopne
call
xchg
xchg
je
sub
push
fcoml
outsb
or
push
mov
jo
push
ss
das
add
inc
mov
loope
pop
push
mov
or
and
into
mov
adc
dec
xchg
add
xor
inc
lahf
lock
movl
or
cs
add
add
subb
fdivr
xchg
clc
mov
xor
je
enter
lea
mov
cli
lea
jl
les
mov
fildl
mov
sbb
push
add
fists
xchg
lret
mov
nop
sub
std
out
jbe
sbb
dec
fists
dec
adc
sbb
mov
mov
je
pusha
and
or
and
add
aam
xchg
xchg
push
int3
pop
jle
mov
inc
adc
push
xor
fiaddl
jns
adc
shl
pop
xchg
mov
pop
pop
mov
std
xchg
mov
sub
and
aad
mov
or
sbb
in
in
test
cmpsb
fs
and
mov
cli
jp
push
push
mov
pop
or
mov
add
mov
push
in
shrb
orb
sub
in
push
jle
mov
sub
sbb
add
stc
bnd
loopne
popf
push
fldl
scas
sub
and
scas
jbe
cmp
add
jle
frstor
pop
scas
lods
push
cmp
lcall
push
add
outsl
and
push
push
lahf
mov
add
sbb
loopne
add
adc
add
test
mov
jl
pop
les
adc
outsb
ss
add
shrl
or
rol
xchg
jb
push
subl
in
sbb
sbb
stos
adc
nop
add
xor
push
cmp
push
subb
mov
adc
push
sub
pop
dec
jg
sbb
mov
arpl
jne
add
cmp
inc
scas
andl
or
pop
aaa
cld
jb
cmp
cmp
push
xchg
mov
sti
dec
sbbb
push
sub
and
and
fidivrl
shlb
push
or
rorl
push
cwtl
jno
xchg
imul
adc
ds
pop
inc
add
shl
ljmp
out
sbbb
xor
pop
xchg
es
sub
test
and
dec
call
adc
cwtl
inc
sbb
jne
pop
mov
cmp
loopne
cld
fcmovnu
xchg
add
adc
lea
xlat
cmp
xor
das
roll
add
jno
add
loopne
or
adc
push
movsb
fimull
nop
je
or
jb
ret
ret
add
addb
inc
popa
rol
add
add
and
fs
sub
inc
or
nop
out
push
loop
mov
inc
int
pop
sub
push
movsb
adc
cmc
cmp
rcrb
addb
rcll
fs
push
das
push
cli
popf
fists
adc
push
loopne
out
mov
inc
fstl
inc
jge
scas
adc
and
adc
ss
rorb
adcb
push
inc
andl
or
mov
xor
pop
ret
and
xor
mov
ljmp
pop
push
push
and
adc
push
jge
fistpl
push
test
push
sbb
call
jbe
adc
rcrb
and
cmpb
push
jbe
or
pop
fisttps
mov
inc
lods
mov
add
incl
mov
pop
fldt
sbb
test
mov
inc
rcrl
cwtl
push
stos
fcom
mov
sbb
mov
push
mov
pop
and
mov
popa
jl
or
pop
xorl
aaa
mov
or
ss
dec
mov
mov
pusha
xor
push
push
and
mov
int
sub
add
pop
mov
test
or
add
cs
dec
add
push
aad
mov
sub
add
rcrb
les
adc
jbe
xchg
mov
fildll
add
adc
mov
push
adc
outsl
mov
fldl
adc
push
inc
pop
jno
and
lock
mov
jecxz
inc
loopne
sub
fstl
push
inc
push
inc
push
inc
mov
std
inc
call
lods
mov
xor
add
fcomip
scas
sahf
push
mov
add
inc
mov
jle
push
shll
xchg
and
cmp
sbb
mov
sub
xor
clc
and
mov
rorb
adcb
loope
add
mov
into
jb
and
clc
mov
test
xor
and
xor
andb
lds
sub
adc
data16
in
sub
scas
rolb
sub
mov
cltd
push
loop
pop
cmp
pop
and
or
test
rolb
pop
pushl
xor
inc
xor
dec
frstor
ret
filds
push
push
fisttpll
add
shlb
call
xchg
or
adc
push
mov
sbb
xchg
mov
mov
sbb
loopne
inc
push
cs
mov
or
and
cli
xor
add
cmp
xchg
std
or
add
ss
dec
decl
xor
push
add
and
loope
mov
mov
outsb
dec
pusha
or
orb
or
push
ret
mov
jbe
es
push
push
add
and
push
lds
std
xlat
inc
mov
inc
mov
adc
cmc
adc
roll
mov
ljmp
icebp
or
loopne
add
push
andb
mov
add
and
add
add
or
cmp
push
adc
ljmp
lds
or
add
mov
add
fs
inc
and
mov
cli
mov
push
imul
int3
push
popa
sub
inc
mov
stos
sbb
or
scas
adc
mov
and
inc
mov
push
add
mov
add
mov
pop
rclb
loope
nop
inc
sub
push
inc
cltd
pop
aad
pop
addb
sar
fildll
add
daa
mov
lahf
pusha
xlat
ret
xchg
inc
xlat
cs
xchg
fadd
and
cli
cmpsb
push
mov
and
data16
aad
dec
xchg
sbb
inc
pop
ret
stos
fdivrl
push
inc
sbbb
adc
add
push
subb
outsb
in
test
inc
mov
adc
adc
add
mov
lret
pop
cli
push
roll
and
and
sbb
add
call
or
and
inc
jge
addl
pushf
add
cmp
jge
xor
dec
push
mov
push
add
jg
xor
xchg
xor
lcall
mov
jl
ret
add
or
mov
lds
mov
inc
or
fbld
out
sub
popa
jbe
xorl
cs
xor
cltd
push
fisttps
adc
clc
dec
insl
push
cmpsb
and
push
outsb
push
mov
add
fcomip
aaa
insb
loopne
add
push
push
mov
test
shlb
nop
pop
mov
test
adc
cs
shlb
adc
add
or
lcall
add
pop
mov
lods
mov
adc
xor
or
clc
mov
pop
sub
sahf
mov
repz
mov
add
dec
mov
jb,pt
inc
lock
sbb
add
outsl
push
push
and
push
adc
outsl
mov
xchg
lods
push
movsb
and
mov
in
ffreep
dec
shr
mov
es
add
test
or
addb
mov
add
mov
or
dec
mov
sub
loopne
loopne
adc
inc
jmp
adc
js
out
and
sub
pop
jp
xchg
adc
cmp
xchg
ret
addb
movsl
dec
sbb
sarb
or
mov
lods
stos
dec
outsl
inc
dec
mov
xor
mov
pop
aad
adc
add
mov
cld
adc
rorl
push
adc
movsl
mov
jno
mov
aaa
mov
cli
fisttpl
jp
inc
sbb
cmp
jo
sahf
inc
sub
mov
mov
inc
nop
sub
cmp
push
cmp
lods
sbb
popa
test
inc
add
cmp
js
push
and
dec
dec
insl
push
or
jecxz
mov
mov
and
push
lock
dec
fisubrl
xor
out
xchg
sub
mov
add
in
and
or
xor
test
orb
push
inc
clc
mov
mov
ror
pop
cmp
sbb
jbe
pop
or
mov
push
mov
daa
inc
jecxz
fistps
imul
aam
push
andl
inc
or
fsubp
cmp
xchg
lock
ds
jb
pop
fcoms
xchg
jmp
add
icebp
mov
add
pop
ror
orb
dec
adc
adc
mov
andb
insl
movsl
pop
cmp
loopne
lock
add
xor
xor
outsl
rorl
push
sbbb
add
dec
lock
sub
adc
roll
inc
and
dec
bound
sar
int
mov
xor
sub
loope
and
push
mov
pop
mov
ljmp
push
lds
ret
ljmp
add
adc
pop
cli
push
add
rcll
in
jmp
mov
or
or
in
push
outsl
xor
pop
push
loopne
nop
das
inc
cmp
dec
lods
mov
ds
push
cmc
test
push
push
hlt
jg
jmp
sbb
add
or
pusha
dec
sub
lock
add
jg
cmpl
sarb
and
fistpl
push
and
outsb
rolb
sub
aaa
je
mov
arpl
push
push
add
mov
clc
cmp
subl
inc
pop
movb
mov
mov
jg
sar
nop
pop
cmp
cmp
lods
adc
push
inc
pop
sbb
mov
mov
sub
sub
and
rolb
sbb
pop
pop
and
in
ret
pop
push
je
lods
fisttpl
orl
loop
aam
push
pop
or
inc
xchg
push
aad
fwait
aam
mov
adc
xchg
sbb
fwait
xchg
mov
pop
fbstp
xchg
push
cwtl
jae
and
or
jmp
push
or
add
enter
test
xor
loopne
add
sub
sbb
dec
ja
jg
and
xchg
push
push
mov
jge
int3
mov
push
mov
mov
ss
js
and
xor
jge
inc
push
push
scas
pop
cmc
push
add
sub
sub
loope
xchg
push
outsl
sbb
lods
call
push
pop
ficomps
push
adc
lahf
mov
test
xchg
icebp
or
mov
andb
and
shll
mov
mov
mov
fildl
into
sbb
scas
or
mov
fistpl
sbb
test
mov
addl
fdivr
mov
nop
adc
add
push
xor
or
fldcw
sub
gs
xchg
adc
aad
aaa
add
jno
and
xor
lcall
or
xchg
cmp
ds
loopne
cli
pusha
adc
adc
inc
nop
xor
sar
jbe
add
xor
add
pop
push
fiadds
or
inc
fwait
mov
dec
ljmp
jo
mov
aad
add
cmp
add
lock
mov
or
and
test
cmp
mov
lock
sub
lea
fdivl
dec
add
push
add
repnz
or
mov
mov
cmp
push
xor
pop
shrl
data16
push
lea
dec
mov
pop
sub
mov
sahf
or
mov
sbb
add
addl
in
addr16
mov
data16
adc
mov
jo
outsl
clc
sub
pop
shrb
sub
mov
mov
xlat
pop
outsl
in
mov
add
lret
stos
daa
add
mov
cmp
outsb
sub
pop
add
add
in
or
add
das
mov
out
add
aad
je
mov
inc
xchg
fidivs
sub
jecxz
lods
fimuls
mov
ja
dec
rcll
add
adc
insb
dec
aaa
mov
mov
insl
mov
scas
or
mov
pop
loopne
inc
movsb
cmpl
and
mov
push
mov
push
in
out
adc
aad
inc
xchg
sbb
fdecstp
add
cmp
add
mov
inc
cmp
cmp
sub
inc
mov
adc
xchg
nop
lock
xchg
fiaddl
inc
cmp
push
mov
rcrb
and
or
mov
and
scas
ret
and
adc
movhps
js
imul
sbb
mov
loop
xchg
mov
push
xlat
mov
push
and
mov
pop
mov
testb
pop
sub
xorb
pop
rcl
or
stos
or
aas
add
and
andb
sahf
movsl
lcall
xor
adc
cmpb
jb
movsb
and
fmuls
add
jo
add
cmpb
add
dec
shrb
push
jl
frstor
dec
imulb
movsl
mov
push
mov
push
fmull
dec
sbb
ljmp
push
push
rolb
mov
inc
mov
push
rclb
jo
xchg
movsl
and
and
push
add
inc
xor
sub
dec
cmpsb
pop
and
xchg
and
push
js
add
ret
mov
movsl
jb
push
cmpsb
sbb
call
sub
movsl
rcrb
inc
inc
adc
inc
pop
jo
addb
lock
mov
subl
jg
je
sarb
cld
xor
mov
shll
fidivrl
fiaddl
xchg
fldt
xchg
push
sbbb
adcb
sub
outsb
rorb
xor
mov
sub
cmp
cmpl
pop
lds
mov
jg
cwtl
loope
mov
shlb
bound
fildl
cmp
xorl
mov
jge
mov
dec
inc
push
mov
scas
and
pop
addl
cmp
filds
movsb
inc
aaa
or
stos
lret
adc
mov
xor
adc
add
jle
flds
shll
push
adcl
jbe
mov
inc
add
ret
in
out
fs
jg
lahf
xchg
cmp
push
adc
andl
data16
inc
or
adc
push
pop
sub
inc
mov
adc
mov
cmp
adc
adc
and
inc
add
and
pop
hlt
and
mov
lea
xor
mov
shlb
es
es
adc
inc
orb
mov
ds
mov
test
mov
ret
pop
mov
fs
sub
loopne
inc
pusha
insl
lds
jle
sbb
adc
push
stos
inc
sbb
add
fists
jp
dec
adc
sub
cmc
dec
fists
inc
mov
push
dec
and
jae
sbb
ja
mov
lea
and
sbb
pop
inc
push
clc
stos
add
and
jb
aaa
mov
mov
cli
int
mov
fstpl
addb
jge
out
loop
add
outsl
and
enter
pusha
adc
rorb
es
test
mov
popa
or
test
loopne
test
aad
push
or
data16
sti
mov
popf
sub
cmp
inc
bound
stos
scas
add
push
push
and
fstpl
enter
rcrb
mov
add
inc
sbb
pop
sarb
xlat
sub
inc
test
add
popa
inc
inc
loopne
icebp
sbb
addb
rorb
lods
add
adc
jl
ret
add
add
aas
inc
fstpl
inc
add
adc
cli
adc
pop
and
and
loopne
and
fidivrs
jge
adc
and
es
or
xor
pop
add
fstpl
push
cld
fucomip
sbb
pop
push
frstor
pop
push
add
mov
lods
cs
out
fstpl
lahf
nop
sarl
add
mov
or
outsl
das
clc
push
rcrl
fldl
jb
xor
pusha
or
push
mov
and
cmp
rorb
loope,pn
adc
cli
xchg
push
in
inc
xchg
cmp
mov
loopne
mov
inc
xchg
or
mov
cmc
xorb
xchg
inc
popa
pop
mov
ljmp
pop
push
cmpb
setne
pop
notb
popa
sbb
xchg
add
or
push
and
mov
pop
rolb
clc
push
stos
lods
jbe
push
fstl
pop
cmp
adc
pop
and
nop
add
cmp
add
and
es
repnz
add
es
rcrl
adc
es
adc
js
test
mov
jg
mov
push
jne
pop
fstl
and
int
jg
pop
jne
cltd
insl
sbb
push
cmp
or
inc
xchg
addb
adc
mov
lret
xchg
or
inc
or
jne
fists
mov
mov
fidivrl
xchg
pusha
sahf
pop
sub
jg
mov
adcb
or
jmp
clc
xchg
inc
mov
mov
and
mov
std
xor
iret
sar
mov
sub
mov
shr
testb
pop
test
cmp
ljmp
xchg
inc
sub
shl
addr16
pop
test
fbstp
mov
scas
loop
xor
rcrl
subl
sub
andb
inc
rcll
adc
adc
repnz
movsb
sbb
sub
js
push
clc
movsb
sbb
data16
addr16
mov
xor
shrl
mov
je
pusha
push
push
add
inc
addb
movsb
add
jle
and
dec
fbld
ljmp
loopne
stos
ljmp
adc
cmp
out
push
loopne
and
adc
leave
adc
or
inc
test
fs
ss
cmpsb
decl
xorb
and
fisttpl
adc
and
sub
and
dec
lods
add
sub
inc
mov
rolb
xchg
loop
lds
xor
xor
data16
xchg
outsl
dec
add
pop
xchg
push
mov
dec
inc
sub
sub
ss
add
mov
jb
push
sbb
cli
lcall
xor
sbb
jo
jo
mov
jmp
mov
push
sahf
and
adc
or
add
inc
jb
add
ds
jo
cmp
push
lret
or
inc
into
stos
test
push
inc
cld
mov
adc
push
xchg
xor
sahf
jne
ds
mov
scas
cmpsb
jae
xchg
mov
xchg
inc
or
xchg
cmp
bound
fstpt
sub
add
es
aad
jle
add
test
adc
test
mov
clc
mov
push
es
fnstsw
push
or
scas
inc
js
xchg
push
inc
scas
clc
mov
sub
insl
or
mov
subb
inc
mov
incl
cld
mov
adc
sub
add
jbe
pop
jo
ret
mov
jb
das
cli
ljmp
xor
adc
add
sarb
inc
adcl
sbb
sbb
or
add
rolb
adc
mov
jne
cmp
ffree
adc
inc
jo
scas
and
push
dec
pop
or
fcom
sub
sbb
sar
adc
push
push
push
pop
nop
cmpsl
xchg
or
aaa
jbe
adc
inc
adc
scas
lods
jo
push
sbb
add
add
xor
mov
or
pop
and
sbb
add
mov
frstor
adc
cmp
add
fistl
rorl
push
and
mov
push
scas
adc
addl
fcomip
outsl
adc
scas
test
add
and
adc
insl
add
incl
fbstp
adcl
rolb
mov
xchg
push
dec
adc
ret
dec
add
jbe
inc
shll
push
add
and
mov
stos
jnp
jg
mov
lea
sbb
into
nop
or
mov
mov
andb
sbb
sbb
call
movsb
test
mov
add
and
or
scas
adc
mov
adc
cmp
adc
mov
frstor
xchg
incl
pop
jg
ds
dec
mov
dec
shll
in
mov
mov
jns
ljmp
loopne
xchg
pop
mov
pusha
pop
mov
mov
scas
loopne
pushl
xor
fisubrs
das
testb
mov
dec
nop
sbb
add
incl
lock
pusha
or
sub
nop
inc
popa
sbb
fistpll
push
dec
jno
inc
xor
sbb
add
push
mov
push
addr16
arpl
jnp
add
add
push
and
lds
inc
pop
test
sbb
jb
je
pop
and
xchg
inc
add
xchg
add
and
mov
xor
mov
sub
add
pusha
jno
decl
inc
or
mov
sub
adc
xor
mov
clc
pushl
insl
jo
dec
add
and
insb
inc
fcomps
adc
jg
lea
sahf
ror
test
je
or
and
xor
int3
mov
mov
pop
call
inc
cmpsl
out
inc
pusha
cmp
aad
incb
cmp
mov
loope
adc
mov
fistl
mov
sub
pop
or
dec
xor
scas
outsl
and
nop
mov
jae
push
mov
sti
rorl
jno
jp
pop
add
fsubl
mov
push
add
add
movsb
inc
xorl
add
xchg
aam
lock
das
jp
nop
test
mov
addb
jo
dec
movaps
test
inc
xor
xor
test
mov
mov
pop
push
js
mov
push
push
mov
pop
stos
stos
test
nop
and
xor
loopne
cmp
push
in
mov
inc
ss
outsl
mov
in
lock
ficomps
lock
pop
add
rclb
push
add
ret
adc
cmp
sub
into
fcoml
mov
sub
loopne
mov
fiadds
push
addr16
frstor
loopne
outsl
call
ljmp
insb
mov
lods
cwtl
xor
hlt
out
sub
inc
xor
sub
add
add
mov
cmpb
xchg
add
xor
cmp
adc
repz
adc
rol
push
cmp
loope
jmp
push
dec
add
xchg
add
add
push
inc
movsl
lock
mov
scas
add
mov
je
stos
sub
call
sbb
inc
out
bound
rclb
fcomps
out
cmc
xchg
rorl
shlb
sbb
lock
ds
mov
rolb
add
call
shll
push
sub
icebp
add
add
jnp
lcall
xchg
shll
jge
fisttpl
inc
add
popa
add
pop
push
nop
cmp
xor
inc
add
imul
mov
and
xor
xor
jnp
add
mov
pop
insl
push
push
sahf
xor
sbb
push
movsb
push
xchg
push
out
push
mov
push
pop
pop
mov
add
sbbb
push
add
or
xchg
cli
int
push
inc
call
es
inc
push
pop
loopne
or
adc
mov
push
pop
hlt
gs
outsl
and
add
xchg
pop
rolb
xor
push
cmc
inc
jl
add
push
js
movsb
sti
and
insl
and
sub
loopne
xor
lds
lahf
push
cmp
push
sbb
fisubs
xchg
stos
jp
mov
add
mov
cli
add
and
add
out
add
push
push
sahf
adc
loopne
inc
jb
mov
mov
adc
mov
fstl
dec
jo
out
pop
rcrl
add
notb
fldln2
push
mov
sub
out
mov
adc
and
fcomi
or
or
jl
mov
xchg
push
inc
fsubrl
fucomi
sbb
shlb
add
pusha
xchg
mov
jecxz
inc
fnstsw
andb
push
fistpl
clc
pop
or
cmpsb
adc
sub
test
xor
addb
cmp
popa
sbbl
or
and
outsl
clc
shlb
addb
jmp
data16
cmc
fwait
mov
sub
out
push
cs
pop
andb
pop
jb,pt
lea
add
pop
mov
push
adcl
add
fstpt
stos
jo
add
push
or
in
fiaddl
fdecstp
jo
pop
sub
pop
sbb
xchg
je
sub
dec
scas
fmull
sbbl
push
and
and
shrl
call
or
hlt
fdivrs
nop
push
pushf
and
xor
add
mov
outsb
aad
push
add
add
lods
mov
sarl
addb
in
scas
mov
inc
pop
nop
faddp
jnp
mov
in
mov
popf
push
cmp
xchg
cwtl
cmp
cli
andb
xchg
insl
adc
sbb
outsb
and
ja
loopne
add
cltd
mov
push
les
scas
mov
mov
ljmp
or
in
std
das
and
inc
test
adc
mov
and
push
pop
push
pop
push
or
adc
test
and
pop
and
inc
inc
adc
decl
pushf
inc
enter
mov
cmpl
xchg
mov
addb
pushw
orb
jo
adc
mov
pop
mov
and
mov
or
lcall
fisubrl
mov
sub
adc
out
mov
xchg
pop
sbb
dec
lret
pop
jg
std
fildl
adcb
inc
sbb
js
lods
sarl
add
test
imul
fcomps
push
sahf
dec
rclb
jne
in
push
push
and
sub
jecxz
fidivrl
and
mov
add
incl
scas
scas
orb
or
pop
scas
push
aaa
inc
jg
fisubl
push
fidivs
addb
push
jg
movb
outsb
sbb
ret
push
in
dec
xchg
or
adc
stos
les
push
and
test
mov
loop
scas
and
pop
ret
and
pop
icebp
sbb
xchg
add
mulb
test
mov
xor
fmuls
mov
in
pop
orb
insl
mov
sbb
sbbb
fcom
ljmp
push
andl
call
add
mov
dec
mov
sbb
or
and
pushf
inc
cld
ja
das
xchg
lret
adc
or
subl
or
inc
push
mov
cwtl
add
loop
xchg
filds
mov
or
and
and
add
mov
ss
vrcpps
pusha
sub
push
push
subb
subl
cmpb
popa
or
decl
insl
sbb
and
add
loope
lcall
mov
add
push
xorb
fildll
andb
mov
or
loopne
add
add
nop
mov
mov
mov
lcall
sub
and
add
fiaddl
or
mov
inc
mov
loopne
mov
cmp
outsl
rolb
fstl
mov
xor
pop
nop
mov
sbb
in
jle
dec
call
mov
pop
dec
es
or
and
and
mov
dec
sub
outsb
pusha
add
inc
sub
inc
inc
inc
or
aad
cbtw
jle
sub
in
mov
repnz
mov
pusha
dec
cli
sbb
lock
mov
aam
cmp
push
mov
lods
or
xchg
inc
add
pop
int3
popa
push
sbb
push
push
pop
loop
inc
loopne
loopne
fs
add
xor
push
xor
test
adcb
aad
jns
scas
or
push
cmp
pop
pusha
test
popa
idivl
dec
mov
out
pushf
sub
sbb
add
sbb
sbb
daa
enter
add
add
pushf
inc
lcall
push
das
or
and
adc
add
clc
xor
cwtl
and
push
push
inc
adc
fs
lcall
jno
and
push
dec
mov
mov
fisttps
mov
xor
xor
pop
lock
push
add
fiaddl
jbe
pop
jbe
mov
inc
test
pop
dec
call
hlt
decl
call
push
xchg
add
cmpsb
add
mov
xor
pop
fstl
pop
sbb
jle
add
cmp
mov
and
loopne
adc
xor
out
mov
jno
xchg
or
pusha
cmpsb
loop
roll
sub
rorb
jo
or
aam
popa
push
sbb
cmp
push
notb
adc
inc
cmp
cld
mov
nop
add
mov
nop
js
cli
aaa
add
lret
fadd
adc
jl
xor
add
lea
pushl
adc
jnp
adc
inc
roll
sbb
test
repnz
les
stos
sbb
adc
or
or
pushl
cld
inc
sbb
adc
bound
pop
adc
add
sbb
push
inc
push
or
les
inc
mov
jg
adc
push
and
adcb
add
insl
adc
and
mov
mov
inc
add
push
mov
add
adc
sbb
loop
loop
xchg
adc
adc
jg
out
lahf
call
scas
xchg
xor
add
jb
jp
adc
dec
aad
jbe
adc
add
mov
mov
pusha
jmp
adc
xchg
lds
xor
pop
and
push
adc
jb
adc
fldl
pop
add
and
jp
sbb
push
mov
ds
loopne
fistl
mov
xor
jb
lock
push
pop
add
and
or
cmp
nop
push
rolb
dec
pusha
sbb
jg
adc
bound
rorb
sbb
dec
and
xor
add
add
icebp
or
inc
inc
int3
arpl
cld
fbld
rorb
pop
push
pop
add
pop
push
es
push
fs
lea
test
mov
ljmp
jle
pop
xchg
push
sub
xor
and
add
xchg
and
push
sbb
scas
movsb
lods
mov
inc
pop
popa
cld
ljmp
inc
sbb
xchg
push
or
or
cmc
mov
xchg
inc
cwtl
rorb
decb
repnz
or
or
inc
mov
add
push
pop
jge
push
pop
sbb
push
fiadds
mov
jg
inc
add
mov
pop
mov
and
xchg
in
pop
pop
xor
mov
or
insb
inc
add
sbb
jle
adcl
inc
inc
cli
mov
sub
movsb
rclb
add
mov
xchg
js
add
outsl
xchg
inc
jge
fcompl
cmpsb
pushf
and
call
and
adcl
adc
jge
xchg
mov
jo
mov
scas
add
sub
cld
cmpsb
pushf
ficoml
push
scas
pusha
push
sbb
and
aad
and
test
sbb
xor
xchg
bound
and
and
push
idivb
fistps
stos
xchg
push
adc
add
fistps
sahf
mov
mull
imul
xor
out
sbb
and
fstl
fldt
scas
mov
jne
xchg
jne
test
mov
int
and
xor
cli
ljmp
adc
adc
xlat
lods
mov
add
xchg
xlat
add
cmp
add
ret
inc
sar
std
es
pop
push
adc
and
mov
out
and
std
filds
lock
xlat
scas
loop
jl
adcb
mov
xor
test
fstpl
incl
push
add
mov
pop
rcll
jno
fstl
clc
jmp
rorb
insb
test
mov
fimull
out
push
pop
inc
mov
ss
nop
jb
mov
mov
cmp
push
jo
jbe
push
push
sbb
pushl
jo
rolb
adc
add
xchg
jno
test
pusha
imul
inc
mov
das
add
ja
add
loop
xchg
stos
pop
out
add
inc
je
pop
push
mov
movsl
push
clc
clc
shlb
nop
mov
pop
push
ja,pt
les
mov
mov
push
and
xchg
lahf
cmc
xor
outsl
test
icebp
mov
push
movsb
xchg
mov
incl
movsb
aas
mov
and
fbld
push
shlb
pop
imul
adc
mov
pop
add
or
mov
mov
push
sub
inc
ret
lock
daa
jge
xchg
ret
sbbb
mov
jmp
and
sub
imul
lahf
stos
or
or
pop
xchg
insb
cli
mov
arpl
out
mov
sbb
mov
or
fstp
aaa
les
dec
and
nop
push
adc
add
addb
pop
sbb
pop
and
inc
inc
gs
mov
add
add
insl
add
and
mov
cltd
test
add
out
and
fisubs
sbb
cmpsb
add
popa
add
pop
pop
sbbl
mov
dec
lods
pop
or
inc
rcrb
fmull
pushf
add
push
and
test
loope
mov
inc
push
icebp
add
ss
ja
jg
in
adc
int3
and
pop
faddl
inc
push
sub
dec
jg
cmp
roll
sub
add
mov
into
and
test
inc
add
and
jg
loopne
bound
aaa
xor
xlat
mov
or
add
add
outsl
ljmp
insl
sub
sahf
or
add
jb
or
cli
jmp
pop
rclb
add
scas
mov
mov
xchg
jae
adc
popa
jbe
scas
mov
scas
pop
mov
and
nop
and
and
sbb
fisttpl
adc
add
sub
shll
adc
adc
pop
test
and
sub
jb
xchg
xchg
push
test
je
mov
pusha
add
sbb
inc
adc
clc
add
enter
jo
cli
sbb
sbb
add
repnz
mov
lcall
sub
mov
and
mov
add
add
stos
nop
pop
sbb
aaa
cld
sub
or
push
add
insl
pushf
inc
sub
sar
out
push
es
push
add
push
jge
or
out
and
mov
outsl
and
jnp
rorb
push
add
pusha
jp
nop
push
enter
loop
xor
mov
push
and
adc
adc
test
push
rcrb
xchg
adc
add
and
sbb
pop
push
push
stos
push
adc
out
ds
insl
scas
and
xchg
dec
dec
jne
jge
cmp
in
add
push
cmp
insb
movsb
lods
and
dec
fsubr
rcrl
lock
add
add
xor
pop
pop
data16
mov
shl
add
js
ds
push
push
je
pushf
add
jbe
and
leave
add
or
pusha
add
xor
lock
mov
mov
movb
add
sub
pop
cld
insl
movsl
and
outsl
clc
neg
adc
push
cwtl
insl
cmpsb
and
add
inc
fiadds
stos
dec
les
pop
fiadds
insl
sub
in
or
add
add
push
mov
sub
or
mov
push
mov
add
push
jo
out
push
push
stos
fs
add
add
pop
in
adc
ret
fisubrs
mov
mov
fisubl
and
mov
sti
pop
sub
pop
addb
add
or
cwtl
push
jp
lea
rorb
addb
push
addb
cli
aaa
sbb
push
and
add
and
ret
enter
adc
add
add
rorb
sahf
out
adc
aam
cltd
mov
cmp
cmp
add
ret
sbbb
and
js
dec
mov
and
and
pop
pop
lret
pop
cmpsl
jo
inc
add
pop
fildll
push
inc
or
adc
or
dec
frstor
rcrl
jl
mov
sahf
xlat
test
xor
daa
popa
adc
sbb
dec
push
mov
adc
xor
push
fs
scas
adc
push
and
add
lret
out
push
pop
mov
jbe
push
test
icebp
mov
pop
and
out
jo
push
subb
cwtl
out
mov
mov
clc
dec
or
mov
or
jg
add
or
and
add
xor
add
xchg
mov
pop
aad
push
nop
das
push
xchg
ljmp
inc
jmp
ss
mov
inc
push
and
add
mov
push
add
pop
scas
fmull
or
ss
push
and
add
data16
pop
insb
sahf
adc
je
or
cld
sub
ljmp
jp
pop
sbb
aam
mov
xor
push
adc
or
cmp
cmpsb
out
test
loopne
xor
insl
inc
in
lea
add
popf
add
add
rclb
mov
add
shrb
mov
cmp
jo
loop
lret
push
xchg
push
jb
mov
mov
adc
or
addb
or
hlt
mov
and
fstpl
push
fdivl
insl
mov
mov
sahf
push
and
rcll
call
adcb
insl
mov
mov
xchg
add
dec
decl
push
dec
sbb
es
sarb
sbbb
or
shlb
lcall
cmpsb
push
and
pop
and
outsl
add
fcomp
and
sub
mov
mov
stos
xchg
insl
adc
add
fcompl
sub
jo
test
ret
inc
push
or
pop
mov
pop
and
sub
mov
xchg
adc
and
fisttpll
mov
and
roll
xchg
fisubrs
movsb
sbb
mov
jns
sbb
lods
cmpsb
mov
nop
mov
sub
sub
pusha
inc
sub
fstpl
lock
push
sub
push
das
adc
and
scas
jge
pop
adc
mov
jl
sub
mov
imul
lea
and
nop
pop
xor
addb
push
mov
mov
add
sbb
in
push
shrl
pop
popa
outsb
test
loop
sbb
lock
enter
add
mov
popa
adc
or
mov
pop
sahf
pusha
add
and
test
rcrb
mov
push
mov
sbb
cli
or
lret
push
je
filds
adc
jns
fwait
loope
mov
les
frstor
fcoml
mov
hlt
loopne
mov
ja
dec
leave
mov
fmull
dec
push
xchg
push
fs
insl
sub
loopne
and
loope
loopne
loopne
mov
xchg
add
outsl
add
dec
push
pusha
in
popa
inc
jp
mov
popa
inc
aaa
test
sub
inc
inc
push
inc
clc
pop
clc
add
test
pop
test
xchg
mov
mov
addb
mov
xchg
push
jge
lods
rcrb
out
lods
push
stos
and
test
xor
cli
sub
mov
xor
sahf
add
cld
mov
aas
mov
fcmovnu
add
xchg
fistps
jb
aaa
adc
inc
push
mov
mov
xor
lcall
or
mov
mov
in
movsl
mov
subb
push
add
pop
cmpsb
insb
mov
and
sub
aaa
inc
pop
adc
test
xchg
mov
push
sahf
pop
int
sub
adc
jp
stos
fimuls
scas
push
sub
hlt
ds
and
mov
pusha
dec
inc
adc
push
push
mov
daa
mov
push
xor
lea
add
inc
mov
pusha
sti
push
xor
data16
orb
xchg
shrb
inc
mov
and
jle
add
gs
xchg
mov
and
hlt
ficoml
std
sub
pop
push
fiadds
or
push
test
adc
stos
cwtl
rolb
fisubl
cwtl
sbb
pop
loopne
mov
push
add
push
fiadds
push
test
add
adc
lock
pop
inc
popa
sub
add
fistl
test
mov
add
mov
mov
sub
outsb
fsubs
add
and
xchg
loop
push
adc
loopne
cmpsb
cmp
mov
add
push
movsl
aad
jo
push
loop
push
cmp
pop
shlb
sub
adc
aad
cmp
and
pop
sbb
push
or
and
jp
leave
adc
mov
mov
ret
push
std
mov
pop
ret
sub
stos
andb
vandnpd
pop
xor
insl
inc
js
decl
orb
je
aaa
aaa
jge
add
adc
inc
or
sub
sbb
call
cltd
pusha
xor
and
das
sbb
cmp
les
aas
sbb
rcrl
das
mov
pop
inc
jo
mov
lock
fwait
stos
test
loop
cmp
adc
fidivl
fwait
mov
cmp
out
rolb
mov
in
pushl
call
cmp
test
cmp
test
mov
idiv
mov
inc
cmp
fidivrs
push
cmp
cmp
pusha
cmp
adc
sbbb
fst
rolb
adc
mov
mov
test
lcall
rorl
pop
lcall
sub
xchg
scas
subb
push
xchg
xchg
stos
jo
call
add
mov
shlb
nop
fimull
push
adc
cli
cmp
push
mov
mov
mov
ljmp
sbb
fwait
push
add
and
mulb
scas
rcrb
lea
or
mov
divb
adc
push
repnz
sub
push
adc
shlb
pop
mov
sub
mov
jle
imul
pop
es
adc
cmp
adc
aad
push
ss
loopne
lock
inc
xor
push
rol
mov
pop
repnz
dec
inc
aas
pop
fldl
sub
rorb
push
aad
dec
sbb
mov
add
ljmp
pop
test
pop
lods
loope
adc
jg
adcb
orb
nop
push
add
mov
push
xor
call
and
xchg
adc
or
imul
mov
ljmp
and
aas
xchg
aas
addr16
fisttpl
adc
dec
pusha
pop
add
add
and
add
pop
mov
ss
xchg
out
add
push
inc
ja
adc
push
inc
xchg
adc
hlt
inc
push
mov
outsb
inc
add
cwtl
add
inc
rclb
mov
rol
jo
outsl
lcall
jno
push
mov
ret
aas
ljmp
loopne
mov
ret
inc
out
fidivl
xlat
data16
jl
mov
outsl
cmpsb
cld
orb
mov
jo
sub
mov
ss
mov
mov
fidivl
fistpll
mov
pavgw
outsl
push
and
rclb
in
aad
les
xchg
jl
and
jl
add
xchg
mov
loopne
call
hlt
mov
jl
and
push
test
fnstenv
add
mov
enter
mov
insl
sarl
je
cmc
lcall
dec
adc
and
mov
shr
push
push
mov
dec
mov
mov
and
dec
mov
dec
xchg
and
pop
push
push
and
cmp
inc
and
jo
xchg
fisubrl
add
out
and
push
pop
inc
cmp
scas
jo
imul
clc
and
push
jle
inc
push
jle
push
adc
xor
hlt
in
fildll
inc
jle
cmp
fwait
inc
in
inc
mov
aas
inc
jo
mov
mov
pop
shlb
icebp
push
mov
mov
ljmp
mov
cmpsb
fldt
mov
out
fbld
adc
std
data16
cli
addl
adc
popf
and
jno
call
adc
mov
decl
adc
inc
sarb
inc
inc
and
aas
xchg
ret
fcmovnu
or
sahf
mov
sbb
mov
cli
mov
add
sub
jp
push
insl
sarb
xor
and
mov
fiadds
dec
push
sub
dec
cmp
in
mov
mov
jnp
scas
push
in
mov
push
and
inc
popa
xor
adc
ljmp
mov
jb
xchg
xchg
aas
dec
subb
xchg
mov
mov
outsb
sbb
pushf
inc
dec
repnz
nop
ljmp
or
and
or
testb
mov
add
mov
mov
jbe
sarl
jg
sbbl
mov
jbe
and
je
inc
ss
rol
add
push
frstor
inc
push
ljmp
push
aam
in
inc
and
popa
mov
int
std
movsb
loopne
addr16
push
cli
sub
fstl
inc
jecxz
cltd
push
push
or
inc
fmull
pop
push
and
insl
mov
ficompl
aam
insl
movsb
and
ds
pop
and
mov
outsl
cs
add
or
mov
add
adc
dec
loope
adc
insl
add
shlb
or
movsl
pop
bound
or
loope
shrb
dec
cmp
jp
push
aad
adc
xchg
add
add
js
pop
shlb
xor
push
daa
incb
repnz
add
add
push
push
xchg
ljmp
lods
mov
sbb
xchg
fists
lcall
jge
lock
cmp
or
push
cld
dec
xchg
xchg
cmpsb
and
mov
fwait
clc
es
pop
aad
rcrb
mov
or
inc
nop
data16
inc
xor
xchg
cli
sbb
jns
and
mov
bound
pop
jmp
andb
add
and
pop
aad
subl
jg
and
or
adc
clc
xor
lcall
dec
sub
lcall
lcallw
inc
shll
nop
mov
cmpb
data16
enter
cltd
jno
or
fcompl
data16
rolb
cmpsb
pushf
roll
in
inc
popf
mov
adcl
insl
xchg
and
jge
push
cwtl
faddl
insb
sub
fcomip
les
sbb
ss
push
and
movsl
adc
xchg
shll
push
push
mov
test
inc
mov
int3
adcb
dec
bnd
add
cmpsb
xchg
xchg
fldl
inc
sub
lcall
mov
push
sbb
mov
push
lcall
cmovb
jp
add
insb
inc
adc
pushl
rclb
aad
xchg
push
or
ret
adc
mov
push
pop
aas
xchg
add
lcall
push
xchg
push
or
stos
cmc
inc
jg
pop
pop
and
adc
mov
inc
sbbl
sbb
mov
and
adc
sahf
push
push
adc
xor
xor
inc
mov
xor
rolb
les
push
or
adcb
push
filds
pop
andl
hlt
ljmp
mov
and
and
push
jbe
push
lcall
repnz
sbbb
addb
or
mov
push
jle
add
mov
sti
inc
or
shlb
les
adc
lcall
mov
xchg
sbb
lcall
lcall
outsb
loop
addb
cmp
inc
or
pop
jmp
pop
or
xchg
xchg
cmpb
pop
jae
daa
icebp
mov
and
cmpsb
sbb
add
incl
inc
add
mov
pop
jl
mov
mov
adc
data16
ljmp
xchg
add
scas
push
or
add
mov
pop
fsubrp
rolb
or
rcr
or
scas
push
inc
cmp
inc
cmovne
fst
fcoml
sub
je
adc
jne
insl
mov
adc
in
mov
cmp
inc
rcrb
push
pop
pop
and
or
ljmp
jle
sbb
jle
mov
addl
add
xchg
adcl
aaa
add
cmp
sbb
pop
js
inc
sbb
push
loope
adc
jl
popa
push
inc
das
mov
loopne
pop
dec
adc
or
mov
ficoms
ja
adc
dec
push
ljmp
or
inc
add
mov
and
in
loopne
xchg
adc
sub
scas
mov
inc
orb
pusha
inc
mov
inc
popa
adc
daa
or
add
adc
outsl
data16
or
jge
add
mov
mov
add
mov
jp
jle
mov
ret
inc
cmp
cld
mov
pop
sub
fiadds
pop
mov
fs
push
inc
and
sub
mov
dec
inc
and
test
or
ljmp
dec
or
lret
inc
ficompl
dec
mov
add
mov
and
mov
jle
pop
push
pop
xchg
dec
mov
loopne
aas
dec
mov
mov
fisttps
lret
cmp
hlt
push
hlt
sarb
ficoms
jmp
fstpl
push
xlat
mov
push
pop
sti
mov
push
adcb
mov
sub
mov
add
lods
dec
clc
xchg
ljmp
dec
add
xchg
adc
pop
sbb
sbb
mov
push
lret
jl
scas
xor
pop
ds
test
les
dec
push
xchg
push
mov
jnp
loop
and
sahf
push
ds
mov
mov
nop
bound
arpl
push
cmp
icebp
clc
inc
rorl
ficoms
ficoms
test
xor
mov
pop
hlt
xchg
dec
ret
pop
xchg
loopne
push
fstl
loopne
out
je
or
dec
stos
add
sbb
pop
aad
add
cmp
cmp
call
jp
push
dec
cmpsb
cld
inc
orl
dec
lock
pop
int3
push
in
loope
xorb
xor
incb
mov
pop
pusha
inc
es
sbb
aaa
inc
adc
ja
sbb
pusha
mov
push
inc
pop
adc
mov
sbb
or
sbb
cs
sub
ret
xchg
push
out
roll
jo
mov
sahf
roll
das
push
add
shll
mov
xchg
push
adc
fists
orl
test
cmpsb
cmpsb
pop
dec
pop
cmpsb
adc
bound
lret
sbb
lock
add
inc
add
aam
lret
cmp
mov
insb
orl
jg
aam
inc
jo
divb
xchg
adc
mov
ljmp
cmp
into
lret
add
push
jle
ljmp
insl
test
and
inc
mov
sbb
push
test
lock
push
out
sbb
add
add
push
or
mov
add
sbb
out
adc
push
inc
add
dec
rolb
flds
enter
inc
aaa
push
shll
sub
inc
shrb
mov
lret
mov
inc
imul
out
pop
add
mov
inc
inc
and
cwtl
push
cmp
or
ret
sbb
test
cwtl
and
lods
sarb
mov
or
aad
push
or
and
pusha
add
adc
sub
roll
or
sbb
pop
jge
loop
lods
jae
xor
xor
and
cli
jg
or
pop
cmp
cmp
repnz
adc
mov
pop
pushf
adc
mov
lock
sarb
xor
mov
fwait
dec
call
push
ds
loopne
push
sub
fs
fstpl
pop
test
adc
mov
push
cld
lods
shl
loopne
scas
lea
fdivs
inc
add
lcall
mov
mov
push
push
je
adc
out
xchg
dec
ds
add
add
fstl
clc
and
xchg
cs
nop
ds
aas
inc
pop
xchg
cmp
sub
loopne
xchg
or
mov
sub
mov
push
push
sub
jg
loopne
addr16
or
jbe
fs
push
nop
dec
sub
mov
jg
icebp
mov
mov
xchg
aam
xchg
out
add
and
outsl
push
cmp
cmp
call
inc
andl
adc
xor
pop
outsb
lea
movsb
mov
xor
scas
sbb
jb
mov
insb
popf
test
lahf
ret
decl
aad
push
aad
xchg
push
mov
aaa
test
cmpsl
insb
push
push
and
add
pop
sub
xchg
inc
and
adcb
pushl
add
sahf
loopne
xchg
jle
pop
clc
or
test
pop
cmpsb
mov
cltd
mov
mov
sbb
add
rcrb
je
add
xor
je
mov
loopne
loope
mov
mov
push
mov
dec
incb
or
or
dec
mov
sahf
sub
leave
xor
sub
sub
push
loopne
rcrl
inc
shlb
inc
pop
cwtl
and
pushl
lods
sahf
cmpb
xchg
dec
pop
sahf
lock
mov
jo
inc
mov
inc
add
pop
sbb
pop
push
fildl
fwait
mov
add
adc
aam
or
sbb
outsl
nop
and
xchg
push
mov
cmpb
or
pop
adc
pushf
jbe
clc
and
inc
icebp
aas
sub
fcomps
das
mov
xor
sub
pop
xor
jl
lock
loopne
fdivs
or
pop
or
mov
sub
mov
cli
jns
xadd
hlt
loopne
aad
fisttps
inc
push
dec
mov
adc
xor
adc
add
cmp
push
jle
stos
dec
jmp
push
test
add
jmp
add
insl
pusha
or
add
js
fstl
jo
mov
fildll
std
inc
xlat
mov
adc
andnps
push
adc
mov
adc
push
movq
and
adc
sbb
pop
fildll
shlb
or
and
ss
xchg
add
in
mov
outsl
add
pop
enter
adc
dec
lock
pop
cmpb
rclb
call
mov
jp
decl
out
adc
mov
mov
adc
inc
insb
inc
inc
add
and
or
jo
mov
push
or
adc
js
adc
sub
outsl
clc
add
and
cmp
adc
jbe
pop
lea
daa
out
or
push
and
push
lds
out
sbbl
sbb
adc
je
jmp
pop
fsubl
adcb
mov
mov
pop
ret
mov
mov
push
dec
mov
push
push
fsubs
xor
rorb
fwait
insl
imul
fildl
pop
mov
add
dec
ljmp
shlb
aas
push
test
imul
push
es
das
loopne
pop
aad
mov
jl
pop
lock
add
mov
push
or
inc
mov
jb
decl
lea
icebp
faddl
pop
xor
scas
xor
cmpb
retw
adc
nop
fdivp
jbe
add
or
arpl
add
xor
into
aam
inc
les
mov
adc
mov
xchg
loop
adc
stos
fldl
arpl
push
mov
pop
cwtl
push
stos
dec
orb
cmp
jbe
jle
sub
add
xchg
cwtl
ja
sbbb
pop
fldt
cmp
incb
inc
mov
loopne
adc
aad
test
pop
and
nop
mov
mov
sub
aad
mov
add
mov
push
adc
push
and
push
pop
add
pop
fsts
push
out
mov
mov
out
mov
push
inc
lds
orb
dec
out
add
or
ljmp
and
out
sti
mov
decl
jbe
pop
jmp
xchg
xchg
inc
subb
dec
and
outsb
test
dec
or
call
push
jle
add
testb
mov
push
jb
orb
mov
in
push
jbe
mov
add
aam
dec
xor
push
test
jb
jg
lods
cwtl
fstpt
lret
ret
mov
jb
popf
and
sahf
mov
sbb
push
mov
adc
cld
jg
inc
or
jbe
sbb
test
add
add
jns
add
pop
xorb
add
and
cli
rcrb
add
pop
cmp
dec
ficomps
add
ds
push
ljmp
mov
adc
sbb
adc
testb
dec
mov
mov
push
jp
sbb
adc
sbb
inc
push
les
pop
or
shrb
xchg
dec
push
jne
push
sahf
mov
inc
cmp
jbe
addb
add
adc
sbb
mov
add
add
lcall
pop
pusha
and
cli
xchg
add
sub
sbb
push
xchg
add
ret
push
lods
loop
push
loop
push
mov
inc
and
push
xchg
xor
mov
insb
cmp
ret
push
mov
enter
inc
pop
add
clc
jg
and
sarb
mov
test
into
mov
jg
fs
mov
or
inc
add
cmpl
push
push
insl
ss
jge
test
and
push
push
shrb
mov
jbe
pop
mov
pop
movsl
push
cmp
mov
or
push
adcb
mov
jg
xor
movb
outsb
or
sub
in
push
mov
rcr
dec
cmp
subb
fwait
pop
movsl
les
div
pop
mov
jne
stos
dec
jp
push
es
stos
mov
and
mov
aad
lock
add
cmp
fisttps
stos
insb
adc
aad
push
adc
and
adc
mov
push
orb
mov
adc
add
inc
cmpsb
push
sub
push
scas
pop
jge
add
push
add
and
inc
dec
dec
pop
aad
push
arpl
add
rolb
nop
cmp
out
test
inc
add
push
xchg
dec
subb
cs
or
add
incl
loope
mov
inc
rolb
test
orb
dec
rorb
fildll
and
and
lock
push
and
mov
push
lds
mov
cmpsb
dec
das
clc
test
adc
mov
das
push
fnsave
fstpl
test
pop
test
xlat
outsb
movsb
mov
subb
pop
insb
test
jp
xor
mov
add
push
or
mov
rolb
mov
test
xor
fisubrs
mov
test
jmp
add
sbb
adc
rorb
pushf
pop
andl
push
int
adc
push
mov
std
call
arpl
pusha
adcb
inc
cmp
push
ficoml
push
shl
xchg
rorb
pop
call
add
pop
popa
fmulp
roll
xchg
outsl
sbb
xorl
jmp
xchg
inc
or
push
adc
frstor
add
pop
inc
dec
sub
incb
pop
adc
pop
in
out
push
xorb
mov
andb
cmp
inc
push
or
inc
cs
adc
or
push
cmp
fldl
sub
sub
push
daa
and
out
add
push
and
push
fistpll
and
push
xchg
push
notb
movsl
dec
repnz
movsl
and
sbb
and
arpl
mov
clc
mov
sub
and
or
js
stos
push
add
and
cmpb
rclb
ret
mov
xchg
mov
loopne
mov
aam
push
je
test
push
arpl
or
and
repz
call
mov
rorb
add
fldl
lret
mov
pop
cmpb
mov
inc
or
or
mov
dec
out
popa
outsl
dec
push
and
or
or
in
call
fsubrl
bound
sub
or
pusha
mov
shrb
sub
push
cmp
push
pop
popa
je
ljmp
fwait
andb
or
push
xchg
mov
dec
pusha
add
inc
add
insl
bound
pushf
es
clc
pop
lods
adc
jne
ss
push
lock
inc
add
or
es
inc
jl
jbe
decl
ss
inc
or
mov
nop
push
fcomip
shll
push
xchg
jle
inc
loopne
mov
add
outsl
sub
rcpps
rclb
inc
shll
cld
push
mov
movsb
push
fstpl
je
call
inc
jle
loopne
inc
adc
xlat
xchg
fiadds
add
cmpsl
ds
addl
in
dec
add
out
or
stos
adc
inc
and
or
mov
aas
mov
dec
mov
mov
addr16
aas
lahf
inc
addl
push
cld
jg
test
mov
mov
push
and
mov
pop
sub
or
lcall
dec
fildll
loope
inc
sub
pop
xlat
cli
fistl
outsb
mov
test
xchg
add
aas
frstor
es
pusha
inc
mov
frstor
push
push
inc
and
xchg
data16
add
push
nop
or
je
pop
inc
std
int
inc
mov
fstl
es
mov
push
push
inc
aam
shl
fisubrl
pop
cmp
lds
ficoms
loopne
loopne
dec
push
mov
pop
xchg
push
and
push
loopne
and
or
xchg
inc
or
dec
loope
xchg
mov
sub
and
loopne
test
mov
add
adc
into
aam
mov
bound
and
scas
test
and
mov
insb
int
mov
cmp
dec
lea
sbb
sub
push
push
xchg
add
add
imul
aad
push
gs
mov
sar
shlb
mov
or
mov
cmp
notb
mov
inc
frstor
pop
push
mov
adc
pop
cmc
pop
jl
inc
and
push
rcl
and
mull
and
outsl
mov
xor
fiaddl
aad
and
and
mov
lock
add
mov
push
pop
adcb
ja
or
imul
fildll
add
dec
cmp
or
dec
inc
out
outsb
mov
mov
mov
add
lock
or
rcr
cwtl
or
mov
lods
mov
mov
lret
adc
mov
es
pusha
add
add
cmp
cmp
xor
test
sub
mov
mov
xor
ret
jge
mov
sbb
int
cmpsb
push
decb
add
sub
sbb
imul
inc
insb
and
outsb
adc
adc
or
ljmp
mov
and
pop
inc
add
add
inc
fdivrl
icebp
push
dec
mov
lds
add
or
or
lock
push
mov
subb
loopne
inc
dec
dec
jg
testb
add
add
jmp
scas
and
inc
cmp
sbb
mov
cltd
outsl
outsb
mov
xchg
jl
jb
lcall
and
jecxz
les
cwtl
ffreep
adc
and
jb
push
fildl
scas
adc
and
push
pop
test
xlat
jg
imul
cmp
cmp
je
mov
data16
jb
decb
mov
stos
arpl
addb
ja
scas
add
sahf
push
je
adc
lar
mov
jmp
shlb
sbb
mov
gs
dec
mov
popl
xchg
jmp
sbb
or
filds
rorb
jns
xchg
add
and
add
in
or
pop
xor
lahf
adc
shlb
jp
mov
mov
xchg
addb
lea
pop
add
daa
rcrb
jo
mov
or
add
push
or
decl
pushf
cmpsb
pop
shl
adc
jb,pt
js
add
es
and
shl
pusha
aam
test
push
inc
pusha
aad
sub
sbb
and
data16
ret
jne
cltd
rcrb
loope
aam
sbb
push
and
and
dec
mov
ret
and
ss
ljmp
sub
mov
xor
cmpsb
jg
lock
movsb
ret
xchg
xor
pushf
ja
xor
and
add
lock
gs
loopne
jle
fs
push
ficomps
mov
and
in
test
rol
xchg
fisttps
loopne
inc
pop
lock
or
adc
sahf
adc
cmc
lcall
je
push
xor
outsl
and
cmp
add
xchg
js
mov
and
jl
or
sbb
ljmp
repnz
xchg
adc
xor
cmp
add
outsl
jmp
andb
cmpsb
add
inc
ljmp
add
cmp
add
inc
add
cld
mov
sbb
and
pop
nop
push
test
adc
insl
xchg
mov
lock
fimuls
jb
inc
push
sub
inc
sti
scas
cwtl
push
inc
dec
add
cwtl
andb
cli
sahf
hlt
sub
adc
adc
or
sub
fwait
mov
mov
jg
xchg
jecxz
pop
cwtl
ret
adc
dec
je
jg
push
fildl
movl
mov
push
push
mov
stos
jbe
pusha
cwtl
lcall
dec
mov
or
xor
push
in
xor
ret
sbb
in
iret
mov
xchg
adc
push
adc
aad
or
jo
out
push
loope
add
mov
push
or
push
cmpsb
inc
inc
ret
inc
xchg
add
pop
adc
pop
jg
push
and
add
shlb
test
andb
cmp
add
scas
pop
pop
rcrl
mov
mov
incl
cwtl
lods
fstl
mov
lods
inc
mov
jo
insl
inc
mov
mov
mov
popa
roll
mov
scas
subl
and
clc
pop
and
nop
mov
shlw
mov
pusha
inc
inc
sbb
xchg
mov
jae
arpl
cli
ds
pop
ja
dec
inc
or
cmp
test
add
jno
and
add
jns
add
push
sbbb
push
mov
xchg
mov
push
mov
pop
icebp
imul
mov
mov
incl
xor
mov
shlb
sbb
adcb
mov
popf
pop
dec
ret
xchg
mov
adc
lcall
aaa
or
dec
fst
push
inc
jns
loopne
jmpw
sbb
pop
pop
push
sbb
jp
test
pop
add
cmp
cmp
popf
cwtl
call
fninit
adc
jecxz
iret
insb
dec
loope
sub
mov
mov
adc
pop
add
dec
into
push
fildll
inc
es
inc
sbb
rol
sub
or
push
lods
adc
dec
pop
add
gs
push
stos
mov
mov
push
adc
addl
cmp
pop
add
dec
push
push
roll
or
data16
inc
aaa
fcomps
xchg
fistps
jb
jle
mov
ret
js
sbb
add
jno
jle
push
rolb
fdivl
out
jp
stos
lods
call
push
mov
mov
popf
js
inc
push
enter
or
xorl
fldcw
loopne
call
push
loopne
xor
pop
xchg
or
dec
sub
mov
insl
mov
push
shlb
push
xor
xchg
ret
push
sbb
mov
jg
jg
stos
pop
stos
movsb
daa
adc
cmpsb
dec
orl
push
sar
inc
nop
fldl
add
movsl
push
mov
mov
mov
fs
imulb
loop
add
push
jge
jge
add
and
cld
sub
fsubrl
xchg
rorl
lods
add
ret
jge
or
push
push
pushf
inc
xchg
cmp
xchg
cli
push
xchg
addb
inc
outsb
repz
pop
xchg
mov
push
push
je
jge
mov
mov
andb
lahf
cs
mov
sub
cwtl
cmp
cmpsb
add
or
push
je
je
pop
pop
push
mov
push
or
xchg
mov
push
lods
xor
jp
add
cmp
or
add
push
dec
or
add
sahf
add
add
call
arpl
push
add
jnp
cmp
inc
jb
rcll
pop
push
adc
push
rol
mov
clc
or
mov
cs
mov
jge
or
sub
adc
es
push
sbb
cs
push
inc
and
lahf
pop
push
ds
rorb
faddp
cs
push
and
ds
push
roll
insb
and
push
inc
push
cld
sub
pop
mov
xor
xorb
rorb
mov
add
or
sbb
ljmp
inc
add
shrl
push
push
inc
add
xor
push
or
je
mov
mov
push
push
push
xlat
inc
ret
fs
jl
jge
add
pop
mov
adc
inc
les
js
mov
or
push
add
fistpl
push
jo
mov
push
push
cmpl
inc
push
or
sbb
inc
adc
les
ds
aas
or
add
inc
cmp
mov
jbe
mov
jg
inc
add
or
push
adc
pop
call
mov
aam
add
jno
pop
push
push
push
or
jge
inc
test
call
dec
add
add
fists
cwtl
cld
mov
rcrb
cmp
jg
adc
or
rorb
and
or
push
or
fisttpl
ficompl
mov
xor
and
rorb
or
pop
sbb
inc
movsb
mov
pop
cmp
inc
adc
push
orb
pop
movsl
sbbb
pushl
add
mov
jnp
pop
rclb
or
jbe
inc
repnz
lock
sbb
xchg
inc
fstl
fiadds
push
inc
pop
and
cmp
push
mov
and
les
outsb
outsb
push
mov
inc
or
push
pop
subl
ret
xchg
pusha
and
dec
addl
or
jle
adc
fists
addb
sarl
lcall
inc
lret
ja
push
add
lret
lock
mov
frstor
pop
push
add
mov
stos
inc
imul
rcr
inc
roll
cmc
lret
inc
fldl
push
mov
hlt
cmp
dec
xor
orb
push
shlb
xchg
lcall
push
addb
andb
mov
je
mov
inc
loope
add
or
jle
cmpsb
sbb
mov
bound
push
sub
jne
lret
frstor
daa
pop
pusha
adc
clc
ja
sub
jmp
outsb
push
push
sub
popa
add
arpl
popa
dec
sub
int
pop
adc
add
add
gs
frstor
nop
push
pop
fsubl
fmull
cltd
sbbb
xchg
push
lcall
mov
adc
pop
jl
fisubl
in
lret
or
hlt
adc
loopne
adc
push
or
xchg
in
dec
pop
xchg
dec
std
cmp
add
add
fbstp
xchg
xor
test
movsl
ds
loopne
test
mov
int3
push
or
roll
xor
lds
and
js
adc
cld
mov
mov
add
lcall
rorb
mov
push
in
test
push
jo
mov
mov
test
mov
pushf
fildl
into
add
in
decl
push
add
xchg
or
ds
sarb
pop
insb
rorb
fisubs
addb
or
clc
sbb
xor
jle
mov
push
inc
push
aam
pop
dec
shlb
dec
mov
and
fdivp
aad
pop
lahf
je
fisttpll
outsb
fdivr
sub
rolb
or
pusha
push
dec
push
and
jg
xchg
ds
push
addl
mov
inc
xadd
mov
pop
rorb
mov
mov
pusha
sub
inc
push
popa
mov
imul
dec
sahf
or
mov
inc
fistpll
nop
mov
ds
popa
sbb
test
or
or
xor
shrb
addb
push
stos
dec
jbe
push
pop
pop
sbb
adc
push
xor
pop
mov
pop
sub
fbld
and
or
mov
ret
or
sahf
shlb
insl
orb
and
lock
push
adc
xor
pop
inc
and
jg
add
mov
movl
push
into
mov
aam
add
inc
inc
js
inc
fs
inc
pop
xchg
fdivrs
ja
ja
mov
sbb
or
jbe
int
jg
incl
mov
mov
scas
adcb
popa
rolb
xchg
fiadds
adc
push
mov
ror
sbb
xchg
inc
inc
mov
jle
loopne
stos
adc
popf
out
mov
add
mov
and
mov
dec
fists
jle
pusha
sub
inc
inc
shlb
lods
ret
pmaxsw
jae
in
mov
shl
or
add
add
jbe
pop
adc
or
out
xchg
stos
outsl
clc
jg
movsl
xchg
and
jg
add
push
bound
sbb
adc
sbb
mulb
mov
push
imul
ret
sbb
and
cli
mov
adc
mov
adc
and
pushf
add
push
int3
add
pop
pushf
andb
cmp
pop
arpl
cltd
les
lahf
xchg
adc
mov
notb
xor
push
cmp
push
adc
adc
cmpsl
jbe
inc
outsb
sub
push
sub
lock
nop
inc
inc
xor
mov
push
jecxz
adc
cmp
mov
push
lock
rorb
outsb
and
or
jg
mov
add
movsbl
ret
clc
add
add
mov
cltd
and
ds
dec
adc
adc
add
xchg
cli
incl
in
push
add
adc
das
js
out
push
sub
mov
cmpsb
xchg
cwtl
jno
jo
add
or
ret
fwait
add
dec
dec
or
ret
mov
sub
mov
scas
rcrl
cmpsb
sbb
jle
fists
es
xor
push
or
movsb
or
xor
ja
push
inc
sbb
sub
or
pushl
add
adc
jle
xchg
mov
nop
bound
xor
dec
lahf
pop
rcll
jge
fwait
pushf
adc
test
xchg
ret
adc
call
jle
mov
sub
aam
pusha
or
cwtl
lock
pusha
add
andb
pop
cmp
or
xor
aaa
add
sbbb
inc
mov
xorb
dec
popf
test
adc
xchg
lods
pop
fs
imul
jle
jmp
decl
fdivs
or
push
adc
rolb
js
fstl
jmp
sbb
ds
mov
add
inc
inc
es
xchg
fstpl
ss
inc
pop
std
push
cld
adc
mov
or
aaa
add
push
jge
xor
cwtl
sahf
dec
adc
mov
negb
sub
call
pop
incl
or
movsb
inc
xchg
fs
pop
mov
ljmp
and
push
xor
movsb
es
rolb
push
adc
or
push
ss
lea
jp
mov
cld
inc
adc
sub
and
mov
insl
ret
jge
ds
push
mov
aad
push
sbb
cmp
cmpsb
and
and
inc
insl
mov
push
mov
dec
xchg
mov
insb
mov
daa
mov
sbb
jmp
mov
push
mov
add
cltd
dec
cld
js
ret
mov
dec
lret
loopne
lcall
xchg
dec
fists
mov
pop
adc
lret
mov
or
fmuls
call
cmpb
sub
mov
push
pusha
pop
out
adc
enter
adc
push
arpl
push
js
out
clc
loopne
adc
test
xchg
filds
jecxz
push
clc
cwtl
jg
adc
jmp
cmc
push
inc
and
or
adc
add
add
inc
jo
dec
std
adc
add
stos
jb
add
inc
or
outsb
test
sarb
or
lock
repnz
lcall
loopne
sarb
rorl
dec
loope
adc
jb
cld
adc
sbb
outsl
daa
jo
and
das
dec
je
roll
add
sub
sbb
fiadds
dec
loopne
cs
push
add
call
or
mov
rorl
ja
inc
loopne
or
jmp
aaa
pop
sub
fldt
bound
adc
adc
jno
pop
sti
fwait
dec
outsb
or
es
adc
adc
sub
adc
jg
inc
push
dec
or
pop
in
mov
jecxz
inc
sarb
rorl
mov
rorb
mov
add
mov
sbbl
xor
xchg
xor
mov
dec
idivb
and
scas
xchg
sbb
mov
xchg
jle
sahf
je
mov
adc
test
sarb
lock
inc
push
sbb
cwtl
jb
sarb
sub
inc
cmpsl
out
popa
lcall
add
add
add
loopne
inc
in
sub
add
das
decl
rcll
pop
inc
mov
fimull
adc
fstl
xor
add
scas
or
les
insl
pop
or
and
push
movhlps
lock
cmp
mov
incl
mov
xor
xorb
or
lods
mov
pusha
pop
lea
and
push
push
pusha
mov
xor
pop
cmp
add
add
inc
add
xor
xor
nop
push
aaa
ljmp
jo
cmp
jl
aaa
std
mov
sbb
aam
add
add
push
clc
arpl
bound
inc
cmp
jle
cmp
addb
and
and
sahf
mov
push
adc
and
adc
call
xor
and
xchg
clc
add
cmpsb
adc
adc
xlat
mov
cmc
jge
push
xor
test
aad
add
inc
pop
xor
jg
loop
aad
lods
inc
adc
ret
bound
or
push
adc
nop
pop
fbld
mov
adc
pushf
and
orb
dec
push
adc
xchg
sarb
inc
push
subb
outsb
aaa
mov
or
ss
pop
mov
ret
xchg
add
or
mov
popa
mov
pop
test
adc
push
lods
mov
cmp
je
and
mov
clc
and
and
and
add
orl
andb
jo
int
ret
sbb
mov
and
xor
roll
adc
popa
out
cwtl
xor
test
add
add
inc
push
rcl
xor
xchg
push
add
movsl
lahf
sub
xchg
inc
lret
add
or
loopne
test
mov
add
cmp
mov
cmp
mov
sbb
pop
inc
push
cmp
and
addb
ss
sub
clc
dec
xor
sbb
mov
sarb
divb
lea
inc
int3
notb
pop
mov
imul
add
iret
add
outsb
or
add
outsb
call
pop
add
add
sub
xlat
jnp
movb
xor
mov
push
xchg
pop
test
or
mov
adc
insl
nop
inc
movsl
and
lcall
sub
or
inc
std
insb
es
adcb
mov
xchg
adcb
or
sbb
push
ja
fs
adc
mov
jle
xorl
mov
sub
es
and
les
lock
adc
push
sbb
mov
sbb
sub
add
add
push
hlt
and
jl
loopne
mov
dec
mov
or
cwtl
cmp
push
push
fadds
cmp
push
and
mov
adcb
clc
add
cmpb
inc
dec
pop
inc
add
addb
test
shl
add
pop
cwtl
mov
sub
or
add
fbld
rolb
sbb
rolb
pop
inc
ret
fidivrl
outsb
bound
mov
adc
divb
mov
fisttpll
adc
rorb
aad
jb
shlb
insl
mov
push
ret
fwait
push
jbe
mov
and
dec
rclb
inc
mov
dec
push
jg
orb
adc
js
fisubs
cs
push
push
ds
add
cmp
or
push
pop
sub
stos
dec
mov
xchg
ret
clc
jp
xor
imul
push
ret
add
aaa
xchg
jg
incl
or
daa
shll
subb
push
mov
or
or
imul
adcl
xchg
xor
mov
mov
cld
mov
jl
sub
sbb
shrb
jge
hlt
push
sub
addb
or
mov
pusha
jmp
xchg
out
inc
or
sar
push
jbe
inc
adc
sub
push
add
sub
pop
inc
adc
outsl
cmp
or
add
cld
push
adc
mov
das
jo
push
add
cld
andb
dec
gs
jo
sti
xlat
out
adcl
jg
mov
or
dec
out
add
cld
std
sti
cmpsb
das
mov
ret
xorl
jo
push
push
inc
data16
jp
loopne
mov
sub
inc
arpl
mov
fists
inc
jp
add
push
mov
mov
add
pop
mov
adc
push
test
xor
pop
les
jp
inc
add
sar
or
loopne
data16
mov
add
int3
ret
ja
jb
and
and
orl
adc
arpl
push
loopne
xlat
jg
mov
xchg
loop
mov
and
and
movsb
mov
push
push
inc
sub
fs
andb
outsb
xor
mov
pushf
loopne
jo
mov
ret
jecxz
push
loop
jle
pusha
std
outsl
int
dec
adc
and
pusha
and
or
push
pop
pusha
loopne
or
and
clc
addl
mov
mov
inc
jo
das
sub
and
mov
pop
loopne
adc
fisttpll
das
stos
lods
fisttps
add
and
loope
pop
test
push
popf
pusha
sub
loopne
call
fisubrs
push
frstor
jb
jbe
mov
adc
inc
inc
or
add
push
mov
dec
subb
adc
in
or
aad
subb
ss
adc
add
sub
sbb
adc
je
adc
in
adc
aam
hlt
and
jecxz
loope
pop
es
jne
add
data16
inc
lret
mov
and
ss
mov
mov
xor
loopne
mov
cwtl
mov
lock
jo
rorb
mov
add
sti
pop
ds
and
cs
pop
shlb
cmp
mov
fldl
sbb
push
fstpl
and
fistpll
or
xchg
dec
xor
das
push
imul
insb
ljmp
push
fidivrs
insl
insb
and
jle
das
outsl
ljmp
insb
and
inc
push
dec
pop
hlt
and
cs
pop
dec
aad
ficomps
or
adc
and
das
add
rorl
popa
mov
in
pop
mov
fs
push
sbb
jns
arpl
leave
add
xor
cmp
js
mov
inc
aaa
mov
push
xor
in
aam
cmp
and
in
ss
pop
xchg
lock
adc
mov
adc
cmp
lods
jo
out
sbb
scas
mov
inc
xor
pop
mov
data16
loopne
stos
add
xor
lds
adc
cmp
outsb
outsb
int
or
mov
data16
int
cmp
push
dec
subb
cmp
mov
dec
inc
xor
xchg
sbbb
loope
and
add
xor
pop
jge
clc
in
fildll
nop
and
nop
xor
cli
push
adc
jl
push
push
mov
adc
orb
loopne
movsl
lock
mov
inc
rclb
dec
daa
push
fs
adc
stos
inc
pop
cmp
add
xchg
mov
in
mov
psubsb
add
push
out
inc
add
subb
fistpll
rcll
scas
mov
mov
in
mov
push
cli
jge
daa
adc
les
push
and
mov
sub
xchg
mov
mov
repnz
sbb
sbb
ja
mov
adc
cmpb
or
dec
add
jge
pusha
add
inc
data16
outsl
push
incb
popf
subb
dec
cmp
push
or
cs
or
or
or
popf
ret
push
adc
pop
dec
cltd
inc
clc
lret
ds
adc
js
popa
fiadds
and
dec
inc
lods
mov
jp
xchg
and
push
add
sbb
pop
call
pop
add
outsb
push
and
jle
fmull
rclb
mov
test
add
lock
pusha
imul
insl
mov
or
pop
lock
jo
pop
mov
mov
sub
notb
jo
fsubl
xchg
sbbb
outsl
mov
mov
es
xchg
jo
loopne
lahf
add
pop
loop
dec
ret
pop
and
or
jo
rclb
rcl
dec
sbb
cwtl
ja
push
push
mov
mov
cs
inc
outsb
xor
adc
addl
pop
loopne
test
or
fdivrs
lock
push
jl
and
mov
and
jb
and
mov
adc
sub
test
push
mov
fwait
dec
scas
clc
adc
insl
xchg
xchg
pusha
mov
mov
loopne
mov
gs
xlat
xchg
rolb
xor
inc
ret
adc
adc
adc
dec
push
mov
movsl
jne
dec
outsb
pop
push
adcb
test
sbb
lods
ret
adc
shrl
fiadds
or
pop
nop
adc
test
adc
or
or
or
jg
xor
fmuls
add
loopne
push
push
add
pop
push
sub
and
and
inc
sbbb
or
ret
add
jge
add
and
cmp
cmpb
sar
mov
inc
shll
push
add
aas
push
add
push
mov
mov
add
and
push
pop
and
push
mov
push
adc
lods
lock
clc
fldt
sub
sbbb
jb
mov
lock
mov
inc
push
and
push
push
push
and
push
adc
mov
pop
or
fs
mov
sbb
mulb
push
push
cmp
mov
shlb
push
nop
ja
loopne
popa
pop
push
mov
mov
cld
adc
adc
or
cmp
or
xchg
adc
movsb
pop
rclb
cli
pushl
cmp
lcall
mov
jbe
or
arpl
mov
mov
mov
insl
mov
adc
add
pop
rolb
push
mov
push
imul
xlat
decl
out
loop
add
add
mov
push
movl
scas
push
or
je
and
mov
push
icebp
add
xchg
add
pop
scas
pop
or
sbb
pusha
push
fisubs
jg
subl
and
cmp
adcl
addb
or
push
adc
pop
mov
mov
push
dec
jbe
pop
andb
and
push
dec
test
insl
std
cmpsb
adc
insl
pusha
nop
aam
rolb
pusha
ja
cmp
push
mov
and
clc
xchg
ret
add
outsl
mov
and
jg
xchg
rcl
xor
pusha
dec
push
push
out
push
mov
jge
xor
and
fisttps
add
dec
js
dec
adc
add
inc
fildl
pause
push
and
rolb
in
stos
push
jp
and
cwtl
push
jb
pop
sub
das
and
pop
pop
enter
mov
xchg
and
mov
mov
lock
and
fimuls
push
cmc
mov
cmp
mov
data16
pusha
add
sub
cld
push
add
push
int3
cmp
sub
std
call
mov
xchg
nop
jle
pusha
pushf
pop
xor
mov
call
outsb
pop
aad
push
and
add
sub
sub
bound
fisttpll
cli
sbb
aad
fisubrs
mov
or
mov
adc
insl
lods
and
or
inc
outsl
push
and
adc
sub
insl
sub
nop
ljmp
inc
adc
fs
pop
sarb
push
adc
ffree
add
and
adc
lea
rolb
jno
out
loopne
jge
mov
adc
movsl
insl
mov
mov
pop
decb
adc
push
pop
sub
ja
adcb
ret
mov
mov
mov
and
adc
add
nop
cmp
outsb
out
out
mov
push
adc
inc
add
add
adcb
addb
push
push
fcoml
xor
pop
push
push
push
push
inc
mov
inc
jge
popf
fbstp
fs
ss
adc
stos
ds
dec
shlb
adc
mov
lock
add
and
and
mov
mov
and
push
cmp
mov
inc
fs
pop
push
jo
and
pop
jg
pusha
rsqrtps
xchg
pop
rorb
add
mov
xchg
nop
push
mov
rolb
filds
add
or
aam
pop
push
sbb
in
icebp
cmp
mov
nop
add
cli
sbb
cmc
and
mov
cld
aad
push
pop
mov
sub
inc
xchg
fildl
shlb
and
mov
sbb
and
adc
jge
scas
adc
mov
inc
gs
inc
push
rolb
pop
dec
mov
dec
and
add
and
pop
adc
imul
lea
mov
imul
mov
push
dec
lock
sbb
fsts
push
xor
mov
das
mov
movsl
cwtl
push
cmpsb
push
and
aam
lods
ljmp
dec
or
add
pop
shll
mov
repnz
subb
jle
mov
xor
push
in
fstl
out
cmp
mov
aad
add
add
push
mov
gs
pushf
out
incl
push
mov
subl
lock
lret
mov
mov
dec
xchg
jb
push
xchg
push
or
movsb
push
test
clc
push
add
daa
adcb
cmpsl
push
or
dec
inc
test
push
mov
or
jg
pop
ja
adc
and
mov
fstl
inc
jo
add
dec
jle
std
icebp
loope
or
or
pop
mov
ss
inc
lcall
inc
or
push
in
mov
add
jno
call
cmp
xorb
push
and
addb
filds
test
inc
push
add
xchg
or
loope
mov
and
nop
push
push
rolb
adc
pop
inc
in
orb
xchg
and
add
loop
add
scas
sub
test
jecxz
sbb
and
mov
add
rorb
subb
orb
sub
pop
mov
mov
jmp
and
je
push
lret
cli
sub
sbb
hlt
mov
dec
cmpl
fs
adc
ds
inc
mov
push
sti
adc
dec
add
push
insl
lods
push
jmp
pop
jecxz
mov
push
xchg
cmc
leave
addl
adc
adc
enter
add
loopne,pn
xchg
addl
mov
mov
fdivs
cmp
xor
add
fidivrl
nop
and
inc
nop
adc
jnp
lea
push
pusha
cmp
shrl
ret
mov
inc
pop
rorb
ret
into
and
push
pop
add
push
xchg
cli
add
cmp
cmp
xchg
inc
or
stos
adc
and
pop
and
mov
add
icebp
rclb
ja
insb
xchg
mov
aad
aam
jb
test
mov
xorb
lret
out
rcll
mov
or
fstpt
fcmovb
adc
adcl
add
adc
and
rolb
sarb
ret
sbb
aaa
mov
lret
push
shll
pop
lock
mov
mov
pop
mov
mov
mov
mov
mov
jecxz
test
orb
roll
mov
dec
dec
rolb
out
lds
adc
ret
pop
movsb
or
jnp
test
add
aas
adcb
mov
adc
inc
das
sbb
mov
push
sbb
mov
push
nop
add
popa
xor
pusha
cltd
mov
xor
fwait
rolb
dec
inc
push
add
mov
add
sub
and
add
or
mov
mov
in
dec
inc
and
movl
cwtl
inc
outsb
jle
orl
and
clc
jg
lret
rolb
pop
push
pop
cmpb
js
and
dec
jecxz
adc
push
push
jne
cmp
add
dec
push
scas
loopne
add
sbb
mov
dec
mov
lock
mov
add
loopne
mov
push
add
sub
addl
cmpsb
bound
pusha
fdivrs
add
xorb
pop
sub
pop
and
pop
pop
frstor
mov
insl
ds
sub
mov
and
loope
add
es
lods
ret
stos
pop
sub
mov
cli
add
movsl
dec
pop
roll
scas
adc
enter
rolb
inc
mov
lcall
and
and
push
xor
dec
mov
mov
jo
push
cwtl
cmp
sub
daa
lock
or
and
sub
add
and
mov
in
shlb
adc
ja
jle
jg
inc
cmp
fcoml
loopne
movsb
pop
pusha
or
mov
fwait
dec
adc
inc
mov
subl
adc
inc
jl
test
xchg
scas
outsl
sub
je
sub
das
int3
add
push
fistpl
and
jo
aaa
add
and
test
jge
and
sub
cmpsb
aad
dec
sbb
adc
mov
sbb
push
fbld
ss
lea
xlat
push
adcl
andl
jb
cltd
hlt
push
mov
xor
add
bound
inc
pop
pusha
mov
xchg
dec
add
push
pop
adc
in
cmp
jo
adc
push
scas
dec
push
or
inc
ja
insl
adc
dec
fwait
lock
test
int3
stos
dec
mov
mov
inc
les
movsb
mov
pop
mov
ljmp
test
jno
jbe
movsb
add
cmpsb
add
mov
sbb
ja
inc
lcall
adc
or
shrl
mov
and
jl
rorb
pop
jo
lods
adc
repnz
shll
mov
or
adc
push
mov
jne
out
fsubs
pop
nop
add
dec
xor
aaa
ljmp
fcoml
or
rolb
xor
mov
xorl
sub
xchg
test
lods
test
fucomi
add
fisubs
dec
sub
push
push
and
mov
orl
or
pop
fstpt
mov
add
lea
or
adc
inc
and
adc
cmpsb
gs
jle
scas
inc
lods
mov
andl
loopne
inc
rolb
jbe
or
sub
add
into
and
adc
jecxz
nop
rolb
inc
sbb
callw
pusha
loopne
jmp
push
adc
inc
add
inc
add
mov
jmp
in
fcmove
test
dec
dec
inc
or
pop
push
sbb
das
call
js
andb
mov
push
pop
lods
pop
cwtl
pushl
pop
push
cwtl
and
fisttpl
push
cmpb
fcoms
mov
out
add
movsl
jg
scas
adc
and
push
and
dec
insl
andb
stos
inc
mov
mov
adc
adc
push
and
inc
push
pop
and
adc
xor
adc
outsb
sbb
out
sub
adc
mov
and
mov
inc
hlt
test
fsubs
test
mov
add
pop
in
dec
cli
and
and
mov
dec
test
movsb
adc
mov
test
and
adc
sbb
mov
dec
outsb
mov
add
add
xchg
cmp
pop
fistpll
test
xor
test
sbb
jo
mull
das
jb
les
xor
les
and
sbb
js
push
mov
arpl
and
out
inc
and
add
adc
add
and
cmp
add
xchg
dec
nop
lods
fwait
ret
add
xor
ret
inc
or
xor
xchg
call
pushf
insl
push
dec
xchg
push
mov
mov
scas
xchg
ret
cli
jg
repnz
sbb
jo
jno
cmp
aaa
mov
pushl
std
push
jno
mov
nop
pop
and
mov
and
fbstp
sbb
nop
inc
bound
cs
lcall
or
icebp
sub
push
divl
mov
adc
mov
cmp
popa
jbe
add
or
inc
and
push
add
mov
jo
hlt
or
and
mov
or
sub
xor
das
adc
add
sahf
add
popa
jo
mov
mov
fldl
mov
das
adc
mov
push
add
leave
and
sarl
and
jo
rclb
push
movsl
es
lods
nop
lock
sub
shrb
jo
cld
mov
lock
mov
xor
mov
xchg
scas
imul
mov
mov
add
inc
mov
xlat
mov
fldl
or
movsl
pop
cs
jecxz
or
or
mov
sub
add
popa
and
jg
inc
dec
pop
lcall
cwtl
adc
dec
and
nop
je
sbb
mov
adcb
or
or
sar
fidivrs
push
rolb
cwtl
push
mov
orb
lock
push
and
imul
and
enter
loopne
dec
jo
adc
test
add
adc
inc
cmpl
loop
adcb
mov
movsb
mov
xorb
mov
mov
rcrb
jp
xchg
jo
insl
mov
xchg
shl
pop
add
loop
adc
jb
cltd
push
fbstp
ja
inc
xchg
bound
notl
loopne
dec
inc
fwait
dec
jo
scas
pop
and
rol
insl
frstor
and
add
and
mov
adcl
bound
or
sbb
pop
int3
into
bound
sub
mov
mov
jle
aam
pop
and
mov
mov
fstl
pop
cmp
les
and
bound
test
cmp
loope
cmpsb
sbbl
xor
push
sub
and
fidivrs
fcoml
or
mov
push
dec
in
scas
sub
adc
push
and
and
and
lea
aas
dec
jo
cmp
jge
push
push
adc
add
pop
lock
cmpb
les
add
xchg
rcrl
inc
hlt
push
push
push
mov
sub
sbb
sbb
mov
rorb
xor
out
jb
in
or
cld
push
mov
dec
in
mov
fstl
scas
add
fstpl
or
add
mov
inc
pop
jg
call
mov
dec
pop
push
push
mov
sub
rorb
push
mov
push
shl
lds
push
push
mov
mov
mov
movsb
adcb
adc
fcmovnb
dec
into
test
sbb
out
repz
add
cmpsb
pop
pop
shlb
push
addl
jbe
ljmp
in
loope
jle
add
push
sub
test
icebp
out
jp
scas
das
lret
adc
pop
fcoml
ja
insl
and
mov
sub
loop
jp
add
decb
push
or
shll
sbbb
add
insl
or
push
cmp
mov
or
mov
pop
pop
test
mov
outsl
loop
mov
adc
fldenv
incl
pop
nop
pop
mov
jmpw
jl
cmp
or
imul
push
andl
stos
add
movsl
lock
out
stos
sar
ja
mov
jae
sahf
sbb
mov
xor
or
add
pop
inc
bound
cmp
fndisi(8087
xor
test
ljmp
add
or
sub
push
xchg
shrb
mov
scas
and
outsl
add
enter
sbb
das
mov
adc
jbe
lret
inc
ret
jo,pn
dec
push
loopne
test
xor
and
pop
je
push
sub
xchg
xor
jo
push
adc
sbbl
bound
outsl
or
inc
call
mov
mov
outsl
fstl
push
add
subb
adc
mov
push
lods
scas
push
push
fldenv
ror
movsl
stos
mov
scas
and
movb
int3
jo
sub
pop
mov
add
adc
mov
sub
aaa
mov
mov
je
stos
jbe
ss
push
add
add
pop
les
pusha
cmp
mov
and
add
mov
xor
or
push
les
adc
ss
and
push
test
or
mov
jp
push
and
gs
and
insl
test
or
push
jbe
add
jbe
sbb
inc
orl
mov
push
cmp
xor
out
nop
filds
rorl
or
aam
insb
sarb
mov
xchg
push
push
mov
sub
stos
cmp
ret
xor
add
pop
jg
test
adc
test
or
stos
hlt
xchg
and
jo
add
outsb
mov
mov
out
data16
or
pop
adc
add
add
adc
jp
inc
and
in
mov
push
xor
pop
xor
xor
inc
cld
pushf
add
pop
push
es
push
add
lock
xchg
pop
and
add
sub
mov
inc
jl
in
and
push
sarb
xor
mov
xor
scas
adc
sbb
out
push
push
call
mov
roll
adc
adc
pop
and
and
sbb
outsl
push
fsubrs
xchg
mov
scas
push
inc
adcb
outsb
pop
sub
push
mov
xchg
push
adc
mov
lret
data16
aas
or
stos
fiaddl
fldt
push
je
push
adc
fcoml
adcb
data16
push
rcll
adc
pop
call
adc
jae
adc
mov
push
mov
push
mov
loopne
popfw
rcll
jae
pop
fidivs
stos
mov
adc
jbe
jle
pop
add
mov
das
clc
and
push
xchg
fstpl
push
push
jge
push
sbb
inc
xorb
nop
mov
data16
or
addl
xchg
inc
add
push
adcb
sub
add
insl
bound
add
jge
shl
pop
xor
add
mov
orb
cmpsl
roll
sbb
jl
aad
pop
jp
add
push
push
in
inc
aaa
sbb
add
stos
inc
and
call
pusha
test
inc
gs
clc
sub
xchg
add
roll
inc
dec
mov
outsb
push
cs
or
aam
orb
adc
adc
mov
or
loop
mov
int
inc
pop
leave
frstor
mov
and
ja
add
inc
sub
and
inc
xor
push
pop
roll
cs
inc
jg
push
xchg
mov
push
and
sbbb
das
xor
mov
lods
aad
or
jmp
sub
push
mov
pop
lock
rcrb
or
stos
decl
inc
test
cmpl
test
ret
scas
data16
jp
ficoml
inc
clc
jg
mov
or
xor
scas
and
xchg
add
xchg
adcb
add
mov
sub
and
mov
popa
push
add
add
mov
fisttps
jne
aaa
pusha
std
rolb
pusha
les
shlb
push
mov
cli
add
movsb
stos
pop
sahf
add
inc
push
std
lods
mov
xchg
pop
xor
or
mov
xchg
mov
andb
inc
ret
push
mov
jno
call
fisubrl
je
rolb
scas
add
adc
add
push
stos
bound
jp
add
sub
add
and
ljmp
lock
mov
mov
fsubrl
inc
jnp
jbe
ror
inc
std
pop
add
push
push
pop
adc
insl
push
fcomps
pop
push
mov
adc
mov
data16
adc
data16
andl
dec
pop
rolb
mov
pop
xor
dec
mov
mov
inc
pusha
xor
cmp
ret
sub
adc
cmpsb
popa
dec
shr
inc
pusha
add
add
movsb
add
add
inc
ja
ja
inc
inc
and
rorb
pop
adc
in
adc
add
in
add
dec
xchg
in
lods
filds
mov
addb
mov
lods
push
stos
push
lahf
mov
mov
cld
jbe
push
dec
test
pop
data16
dec
scas
sbb
adc
mov
pop
mov
xchg
add
mov
inc
jb
popf
push
mov
mov
shll
dec
push
adc
lods
adcb
pop
jne
and
mov
add
subb
cwtl
sbb
into
loop
inc
sub
mov
add
mov
and
nop
aad
popa
mov
insb
adc
es
push
sub
pop
adc
and
xorb
jne
sahf
cmpsb
and
clc
popf
shlb
sbb
and
mov
or
cmp
outsb
shlb
mov
adc
or
rorl
pop
into
mov
pop
inc
and
insl
xchg
and
scas
cli
push
rolb
xchg
add
cltd
push
push
and
pop
sbb
mov
call
addl
ds
call
sub
aam
fldl
add
push
push
add
push
scas
cmpsb
pop
and
sub
rsm
dec
mov
shrl
mov
dec
insl
pusha
ds
insb
gs
fbld
dec
xchg
or
cwtl
outsb
out
push
inc
pusha
or
and
dec
mov
push
inc
fisttps
adc
stos
and
and
int
mov
sahf
fs
push
into
pop
sti
mov
outsb
andb
mov
push
mov
mov
and
cld
decl
aad
dec
mov
shlb
or
mov
fcomps
push
add
push
in
ror
dec
and
adc
es
nop
ss
mov
mov
mov
loop
push
bound
sbb
add
add
clc
lods
sub
jbe
add
mov
adc
jb
js
ja
inc
inc
push
cmp
push
adc
sbb
lock
adc
fwait
xor
dec
sbb
mov
cwtl
movsb
dec
mov
pusha
xchg
mov
ja
inc
insb
push
push
inc
sbb
xlat
adc
inc
mov
add
out
loop
mov
pop
andb
mov
push
les
sbb
pop
cmp
mov
mov
pusha
popa
cmp
fstpt
nop
push
repz
cwtl
clc
mov
pop
add
ds
cmp
push
push
push
xor
ret
in
pop
mov
dec
rorl
adc
js
add
dec
inc
fninit
sbb
add
pusha
push
xchg
loopne
and
insb
sub
pop
pusha
or
bnd
xor
xor
inc
add
scas
mov
ds
push
lods
and
and
fidivl
test
mov
adc
inc
or
and
add
jb
xor
mov
add
mov
in
push
adc
sbb
aam
mov
adc
inc
mov
mov
inc
cmp
cli
fiaddl
inc
orl
push
mov
outsl
stos
pop
pop
cli
push
cmp
cld
scas
mov
insb
inc
mov
push
sahf
pop
js
loopne
push
roll
test
push
dec
icebp
call
push
xor
dec
mov
or
mov
andb
mov
xlat
adc
sbb
jle
add
shlb
jle
xchg
fs
jo
adc
cli
push
popf
and
ss
add
or
xorl
and
cli
xor
adc
add
jl
sbb
loop
test
stos
mov
test
and
sub
mov
int
inc
sbb
pusha
inc
sub
cmpsw
orb
pop
adc
cmp
ret
lds
addb
std
mov
mov
mov
xchg
or
orb
jle
mov
incb
lock
and
or
sbb
adc
xor
xchg
sub
loop
or
filds
push
scas
sub
daa
ss
dec
je
daa
mov
push
xorb
jge
nop
cltd
js
orb
lret
add
and
jo
sbb
pop
sub
push
lock
push
push
fs
mov
test
dec
inc
sub
nop
adc
xchg
addb
add
adc
inc
mov
outsl
sarl
adc
dec
rol
call
xor
sbb
jmp
inc
xor
push
cli
adc
icebp
movsb
and
outsl
inc
and
xor
xor
cmpsb
inc
mov
and
test
cmp
ljmp
and
cmp
add
and
mov
xlat
cmpsb
jmp
arpl
pop
add
mov
xor
add
push
mov
popa
and
push
pop
add
lahf
xchg
adc
inc
cmp
aaa
rclb
loopne
ss
sahf
lock
adc
adc
push
xchg
aaa
sbb
or
aas
add
nop
mov
out
test
adc
addl
loopne
sbb
xchg
loop
out
and
insl
rcrl
inc
mov
push
push
mov
jo
in
repnz
inc
xor
rolb
call
adcl
mov
fiadds
and
pop
fnsave
in
fucomi
mov
jmp
shl
add
sbb
hlt
incl
add
push
and
nop
and
xor
and
mov
pop
add
mov
inc
xor
lods
mov
mov
pop
or
jb
test
test
xchg
cmpb
add
and
xchg
pusha
pop
cmpsb
sub
scas
add
and
mov
cmc
sub
add
out
lock
adc
jl
lahf
push
xor
sub
add
scas
cmp
mov
adc
adc
jl
test
into
paddusw
lds
adc
addr16
mov
or
push
adc
test
rclb
add
test
push
pop
addb
addb
mov
shrl
lret
add
inc
inc
sbb
ss
sub
or
adc
pop
dec
or
or
dec
cmp
das
fadds
pop
pop
jecxz
mov
rcrb
dec
mov
or
dec
and
sub
push
les
mov
adc
pop
lock
push
pop
mov
shrl
pop
cli
lcall
mov
mov
fsubrs
dec
xor
gs
repz
mov
push
push
jno
sub
inc
cmpsb
adc
test
and
fsubs
decl
adc
fisubrs
pusha
add
add
add
jg
xchg
rcr
sbb
in
inc
call
sbb
bound
ret
decl
or
ds
iret
mov
inc
sbb
ss
sahf
inc
mov
mov
decl
in
cmp
adc
add
add
mov
incl
mov
out
add
scas
cli
jg
xchg
add
dec
sub
fists
test
test
fisubl
sub
jle,pt
xchg
and
push
add
xor
add
insl
adc
inc
mov
or
or
aam
in
into
sbb
and
and
sarb
jle
or
adc
sub
mov
xchg
les
lods
add
or
push
in
bound
jb
movsb
xor
das
push
aam
ds
test
lock
ja
mov
push
add
adc
mov
pop
fisubl
add
ss
pop
or
add
outsb
inc
pop
pop
add
push
ss
nop
jp
lret
mov
push
mov
stos
push
in
and
pop
and
or
pop
dec
test
ja
and
push
nop
dec
fildl
stos
jbe
or
dec
sbb
adc
xchg
into
inc
ds
jg
pop
xchg
push
pop
jo
fst
sub
push
sbb
xchg
inc
sub
cli
xor
add
add
adc
into
dec
mov
clc
xchg
shrb
sbb
ljmp
cld
ss
or
adc
loopne
repz
adc
loopne
ffreep
mov
repnz
and
push
xchg
mov
sbbl
add
test
loop
mov
push
leave
mov
cmp
mov
inc
mov
pop
inc
iret
or
cmpsb
dec
loop
and
ret
int3
add
rorl
push
sbbb
or
pop
mov
add
pop
mov
sub
cmp
and
sub
sub
add
ss
pop
jl
outsl
sbb
and
fldl
clc
add
pop
dec
inc
loopne
add
jmp
xor
or
sub
scas
subb
addb
ss
sbb
add
jl
paddd
imul
and
add
repz
jp
cmpsb
add
xlat
nop
sub
movsb
clc
fisubrl
js
pop
inc
in
nop
rcrb
push
and
mov
ret
popf
stos
cmpsb
je
add
dec
pop
std
jg
dec
push
and
push
and
cmc
and
dec
push
and
rol
repnz
adcb
pop
or
repz
idiv
xor
fstl
bound
add
cmc
orl
push
negb
testl
mov
xor
push
or
and
outsb
inc
or
orb
add
fmull
pop
addb
jle
nop
xorb
inc
lods
es
xor
jb
mov
cmp
xor
or
inc
addb
inc
sub
and
shlb
mov
lods
add
data16
scas
xchg
cmp
add
inc
adc
ss
mov
add
or
ja
call
imull
ljmp
and
and
mov
or
inc
xchg
std
or
push
xchg
push
adc
jns
std
mov
jb
inc
fldl
data16
push
push
fst
cmp
cld
incl
add
sub
sbb
cli
cmp
stos
fistl
scas
push
addb
add
fbld
push
dec
movsb
mov
dec
pop
or
out
add
shlb
mov
mov
pop
es
or
cli
frstor
shrb
outsb
fisttpll
or
jle
ffree
lods
cs
sbb
inc
fsubs
pusha
cli
rcrb
adc
inc
add
jp
push
mov
es
inc
and
adc
js
aaa
and
stos
and
mov
push
mov
shll
add
inc
shrl
push
cwtl
sub
shll
or
mov
add
mov
dec
test
cmpb
add
push
rclb
enter
mov
in
jg
icebp
inc
adc
dec
testl
or
rolb
cmc
jg
adc
cs
shll
rcll
inc
pavgb
insb
fcmovb
or
je
pop
add
adc
mov
repnz
xchg
test
loope
sub
add
inc
and
rcll
ljmp
movsl
mov
inc
jp
push
lds
adc
movd
pop
aam
aaa
inc
bound
adc
call
add
dec
sahf
rorb
std
iret
orb
pop
sbb
or
rolb
inc
fsub
push
add
in
fidivrs
add
ret
push
dec
adc
pusha
jle
mov
addb
adc
or
lock
lahf
adc
and
arpl
or
and
ja
and
cmovge
dec
and
xor
push
loop
push
mov
dec
mov
jne
sbbb
fs
pop
mov
fmul
add
sub
mov
sbb
addb
mov
hlt
lahf
push
inc
and
and
push
gs
push
loope
cli
dec
loope
jae
mov
jg
xchg
cld
ja
and
push
mov
clc
jg
aam
inc
pusha
or
jecxz
popa
es
and
cmp
ret
sbb
mov
stos
or
or
shrb
or
scas
mov
or
mov
jg
mov
push
push
jbe
mov
adc
sbb
jb
xor
and
ret
sbb
adc
dec
loope
lret
mov
cmpsb
inc
xor
or
outsl
loope
test
or
dec
rorb
call
or
sarb
mov
adc
and
pop
sub
mov
xor
mov
mov
sbbl
insb
fbstp
lods
and
jle
and
xchg
js
fiadds
out
outsl
les
aaa
pop
add
add
mov
push
pop
or
in
pusha
add
rcrl
mov
dec
xchg
mov
add
aaa
sub
ret
pop
sub
push
aaa
push
jae
jae
mov
in
xchg
mov
loope
nop
cmp
dec
gs
shll
stos
cmp
ljmp
cld
pop
into
inc
push
push
loope
addl
movb
add
clc
xlat
lret
add
mov
sbb
or
aas
ret
add
jl
or
push
push
in
outsl
out
mov
data16
sti
jg
mov
xchg
push
outsb
and
pop
and
mov
dec
std
sbb
sbb
femms
int3
push
lcall
rcll
xlat
outsb
adc
cld
dec
nop
jo
nop
dec
inc
adc
movsb
xor
and
stos
add
repnz
push
roll
xchg
mov
add
lret
jge
ljmp
sub
add
sub
das
cli
add
mov
mov
and
insb
push
cmpb
xchg
push
push
and
loopne
movhlps
jmp
add
subl
cwtl
mov
pop
push
mov
jle
mov
push
das
xchg
leave
inc
inc
sahf
fistps
jae
push
inc
pop
bound
adc
or
add
pushf
mov
jl
loopne
out
addl
adc
lock
mov
adc
lds
mov
xor
push
add
into
add
in
aaa
dec
repz
xor
hlt
xchg
in
add
push
or
pop
push
inc
les
insl
add
lock
push
mov
xor
and
push
mov
add
rclb
ljmp
sbb
pop
add
inc
or
pop
xchg
sbb
insl
mov
out
aaa
loop
pop
insl
adc
and
or
movsb
and
cld
xor
outsb
mov
mov
decb
xchg
mov
int3
mov
inc
push
arpl
add
lahf
adc
mov
and
jbe
cmp
or
mov
jl
or
ficoms
add
outsl
sub
addl
push
js
jo
mov
sbb
xchg
ds
xor
mov
xor
lods
insb
add
out
dec
inc
lret
dec
dec
dec
ljmp
in
add
scas
ss
jge
mov
inc
mov
xchg
scas
les
ds
sub
cs
bound
push
pop
or
aam
xchg
cwtl
pop
add
popf
push
adc
loope
cltd
mov
lds
les
and
mov
jle
push
push
sbbb
adc
subb
and
shlb
push
push
out
mov
jo
inc
loopne
xor
inc
fbld
and
call
dec
adc
inc
mov
lods
cmpps
dec
inc
xorb
popa
xchg
fcmovnbe
scas
mov
and
loope
or
dec
insb
loope
cmc
outsb
inc
add
ret
adc
xor
pop
popa
pop
fnstsw
int3
loope
push
or
test
inc
aam
mov
test
bnd
push
stos
hlt
dec
adc
xor
push
xor
push
repnz
push
mulb
ret
mov
arpl
add
fbld
fwait
push
jg
xor
into
rorb
ficoml
xchg
rcl
imul
lahf
mov
mov
data16
rcl
jle
and
popa
or
dec
jne
inc
cmp
mov
and
mov
mov
pop
subb
imul
arpl
or
loopne
or
mov
pop
jl
enter
test
test
jmp
sub
jp
add
bound
nop
cmc
jg
test
repnz
push
inc
test
loopne
icebp
adc
pop
inc
adc
xchg
sub
add
movsb
push
fbstp
aam
jbe
add
test
dec
sahf
inc
add
ret
dec
sbb
lcall
rorb
sub
and
and
sbb
scas
dec
insl
inc
add
xchg
fwait
adc
and
and
test
cwtl
mov
xchg
test
nop
cs
loopne
incb
push
lock
bound
xor
and
and
fcmovnbe
lea
popf
push
mov
call
ficoml
and
addl
jne
inc
shll
cli
nop
ds
push
inc
sbb
test
mov
sub
push
std
push
or
out
pop
in
mov
std
inc
push
je
dec
sub
decl
mov
adc
ret
mov
mov
mov
mov
inc
xor
add
dec
add
or
idivb
filds
cmpsb
sarb
iret
popa
orb
clc
out
subb
xor
roll
inc
shll
adc
mov
push
leave
mov
fwait
ror
ds
nop
cmp
mov
and
sar
add
add
mov
push
sbb
cs
jecxz
xchg
ret
outsl
mov
aas
fisttpll
jbe
dec
and
clc
or
push
jo
insb
jb
inc
add
jbe
aaa
insb
insb
inc
nop
pop
popa
fisttpll
inc
inc
es
push
mov
dec
loopne
outsl
mov
cmp
cs
icebp
pop
and
add
fists
stos
add
out
test
or
inc
xchg
add
jo
rorb
daa
jg
cmp
rorl
push
or
inc
xor
out
jmp
or
cmpb
leave
jo
add
cmc
add
inc
and
adc
or
cmp
add
loopne
push
lret
push
push
push
add
cmc
pop
nop
push
jle
push
dec
fists
push
insb
mov
add
push
sbb
outsl
dec
mov
pop
or
jge
push
add
testb
adc
inc
rolb
pop
outsl
add
and
sub
jbe
clc
movb
shrl
sbb
push
ret
add
and
inc
adc
ja
lods
inc
add
mov
popa
je
mov
test
add
or
ljmp
dec
push
add
and
adc
push
decb
test
inc
pop
add
icebp
cmc
testl
fistpll
push
sbb
mov
inc
scas
add
mov
adc
jne
add
outsl
call
aad
repnz
add
cmc
testb
add
fldt
ret
jb
test
pop
xchg
mov
add
add
mov
scas
dec
aam
mov
push
in
fbstp
mov
pushf
sbb
orb
lret
dec
add
push
insl
add
sbb
addb
mov
mov
out
dec
add
adc
or
pop
mov
fistps
fisttpl
mov
sbb
pop
lock
out
inc
inc
vpsrld
and
jl
test
add
push
call
fimull
push
cltd
mov
addl
data16
mov
loopne
addl
and
sub
lods
jo
push
or
xor
pop
in
ljmp
sar
sbb
add
aas
add
xchg
cmp
rorb
fwait
mov
and
inc
fdiv
aad
jle
push
xchg
ficoms
out
mov
sub
jp
mov
add
adc
cmp
lods
xor
je
push
mov
mov
push
mov
pop
cmp
push
rcrb
mov
orb
ljmp
call
dec
mov
or
lret
push
rolb
push
mov
andb
push
or
and
in
nop
push
or
enter
add
test
and
cmp
lret
pop
shlb
push
addb
rcrb
push
and
adc
mov
into
shll
add
lods
les
add
sarb
mov
call
idivl
int
mov
iret
mov
fsubrs
xchg
subb
push
add
aad
cmp
lods
or
mov
in
cli
and
mov
mov
ja
mov
sub
xorb
out
addl
adc
test
dec
inc
call
cmp
dec
sbb
lods
sub
lret
ret
shlb
lea
out
out
mov
imulb
push
notb
rorl
inc
mov
addl
test
and
jle
incl
sbb
mulb
mov
arpl
jg
scas
or
addl
adc
orb
loop
cs
ss
and
fwait
incb
rcrb
push
jecxz
pop
push
adc
adc
mov
movsb
in
test
sbb
loopne
adc
add
inc
lods
loopne
xor
inc
pop
pop
inc
add
add
pop
test
and
nop
and
out
test
or
sbb
lds
jg
out
test
insb
dec
loopne
movb
adcb
mov
jo
mov
ss
stos
and
dec
loope
adc
movsl
mov
adc
mov
fildll
cmp
and
mov
loopne
subb
mov
sbb
pop
rcrb
int3
js
mov
rolb
push
test
mov
adc
inc
es
mov
mov
loopne
push
or
and
inc
adc
sub
push
in
mov
pop
aam
shll
jns
cli
jbe
mov
sbb
ja
add
and
ffree
push
call
or
xchg
outsl
adc
inc
or
inc
mov
push
and
pusha
and
mov
add
pop
push
inc
mov
xchg
push
sbb
subl
xchg
adc
xor
outsl
add
lods
inc
nop
adc
loope
scas
andl
push
das
jp
jbe
jle
and
rclb
add
xchg
and
out
mov
jns
in
jbe
fs
std
and
jbe
mov
out
add
add
mov
sbb
adcl
add
lods
insb
inc
mov
fistpl
lods
add
mov
je
xchg
rcr
push
aad
scas
dec
add
fildl
jns
cwtl
mov
adc
fistl
dec
jb
or
insb
xorb
sub
repnz
adcl
pop
repnz
mov
mov
into
les
mov
mov
mov
cld
rclb
stos
add
and
xchg
cmpsl
cmp
and
pop
call
and
and
or
mov
data16
call
inc
ret
sub
fs
nop
push
and
outsb
mov
add
inc
inc
sbb
test
mov
dec
sub
or
sub
aas
negb
out
es
fisubrs
cmpb
and
mov
bound
aaa
and
dec
mov
sbb
andl
js
mov
rcrb
fiadds
pop
inc
sub
test
adc
fidivl
fimull
loopne
and
pop
add
insb
sbb
inc
stos
leave
xchg
xorb
adc
and
add
push
test
and
push
cld
addr16
das
pop
loope
push
pop
lret
frstor
incl
sbb
adc
or
mov
and
rcrb
stos
rorb
popa
adc
adc
sub
xchg
and
sbb
jg
nop
add
out
mov
push
ds
data16
xor
add
push
pusha
or
and
jbe
push
add
jb
pop
or
sahf
lock
and
mov
adc
push
inc
and
mov
jecxz
subl
out
pop
add
add
mov
lock
and
xchg
test
in
add
add
insb
mov
add
jp
push
mov
subb
add
mov
add
faddl
inc
jno
and
jl
stos
dec
test
nop
jnp
fs
and
add
fisttps
xchg
rclb
mov
sbbl
or
testb
nop
push
inc
clc
out
mov
ret
jl
or
inc
jo
push
and
xchg
data16
or
xor
test
or
mov
push
and
cli
cmpsb
sub
dec
in
or
out
jo
push
push
or
adc
mov
fwait
or
jb
ljmp
mov
jl
sbb
outsl
clc
das
es
jle
add
jbe
shrb
mov
loop
add
icebp
arpl
jae
mov
push
adc
sub
xorl
mov
adc
pop
jl
xor
sbb
cld
push
or
cli
push
and
pusha
scas
cli
and
pop
cmp
push
or
bound
adc
push
adc
mov
in
out
test
pop
lock
mov
cmpb
push
xchg
pop
and
adc
or
inc
sar
push
adc
jecxz
stos
sarb
mov
loopne
inc
pop
add
add
pop
call
lcall
out
inc
adc
dec
inc
push
sub
repz
jp
push
jbe
xor
rolb
sti
ja
jbe
in
imul
push
scas
clc
or
ret
push
or
lahf
xchg
xchg
js
nop
inc
add
fwait
mov
cwtl
jg
pop
cld
sbb
mov
test
push
stos
data16
cmp
hlt
pop
push
or
dec
xor
adc
or
xor
push
mov
sbb
andb
fdivrp
jg
mov
push
push
insb
cmc
addb
inc
popf
mov
sub
ja
sub
hlt
and
add
jbe
jg
aaa
pop
and
xchg
and
rcrl
mov
int3
imul
ret
rcr
jnp
add
stos
mov
cmpl
ljmp
mov
sbb
inc
test
hlt
xor
add
repz
hlt
outsl
aaa
adc
bound
outsb
stc
in
add
test
fisttps
adc
subb
mov
outsb
or
mov
push
cmp
repz
test
sbb
fadds
pop
mov
out
xor
insb
inc
rcrb
dec
push
push
sub
call
add
mov
pop
jo
fdivp
adc
inc
std
popf
xchg
pop
lods
out
pop
xor
jmp
xchg
outsb
loop
push
out
shlb
push
rclb
jg
push
pop
pop
adc
cmp
push
mov
mov
fucomi
in
jns
out
adc
add
push
pop
mov
mov
xor
std
xor
pop
push
mov
js
push
push
xlat
add
inc
mov
stos
pusha
test
and
in
cmp
add
push
add
mov
xchg
mov
cmp
ds
ds
or
and
or
mov
jae
pop
out
and
push
or
fwait
mov
dec
int
push
cmp
decl
mov
test
xor
push
inc
inc
mov
add
jmp
mov
jo
inc
and
inc
mov
pop
pop
inc
xchg
cmp
dec
hlt
pop
mov
rcrb
push
mov
jle
sarl
mov
outsl
test
rclb
pop
inc
mov
xchg
icebp
into
js
or
add
loope
cmp
sub
popa
imul
dec
mov
sub
add
popa
add
and
push
mov
or
xchg
or
enter
fbld
mov
pusha
mov
add
or
add
icebp
push
push
dec
dec
jecxz
inc
scas
mov
test
das
cli
das
cmp
jo
push
ss
jo
rcrl
out
sbb
idivb
ljmp
loopne
ds
push
push
adc
mov
sbb
push
sahf
test
fcoms
pop
out
xchg
pop
addb
test
pop
inc
fadds
or
fnsave
adc
xor
and
movb
dec
insl
adc
push
cmp
out
adc
sbb
shlb
dec
adc
sti
fbld
push
pop
pop
jbe
sbbb
mov
add
gs
sbb
xchg
outsl
push
jb
add
and
pop
pop
test
lock
bound
mov
jne
xor
and
or
sub
test
jae
and
inc
dec
aam
or
add
or
ds
mov
incl
mov
loope
add
or
adc
add
cs
mov
rol
pop
xor
cmp
or
or
or
pop
icebp
das
and
xor
jbe
aad
push
inc
or
ds
lock
mov
outsb
dec
jno
and
add
add
pusha
pop
ror
push
add
cli
incl
nop
fdivrs
insl
inc
sbbb
mov
inc
and
js
das
sub
ret
repnz
sub
pop
lret
ret
add
aaa
adc
mov
rcrb
jp
mov
cmp
notb
mov
mov
mov
sub
cmp
lock
add
pop
mov
lods
jne
je
loop
mov
mov
mov
popa
daa
or
inc
loopne
pop
mov
inc
loopne
adc
sbb
fwait
add
aam
imul
push
xchg
sub
adc
jb
or
xor
dec
clc
inc
cwtl
push
add
fistpll
les
add
ds
movsb
int3
mov
push
mov
add
sbb
in
insb
lods
stos
and
mov
mov
insl
xchg
push
int3
pusha
xor
lcall
aam
sarb
test
push
inc
sub
test
sub
jno
orl
mov
or
mov
incb
ds
testl
inc
push
clc
pop
mov
mov
jne
fidivrs
imul
and
addb
jne
or
data16
adc
push
clc
xchg
sbbb
fstpl
jmp
mov
mov
pop
ds
xorb
sub
push
dec
data16
mov
dec
sbb
pop
pop
mov
cmpb
in
dec
and
and
adc
cmpb
bound
andb
ret
adcl
xchg
mov
fiaddl
fdivr
outsb
jmp
dec
jbe
add
lahf
and
mov
andb
pop
and
scas
cmpsb
xor
outsb
pop
and
mov
mov
mov
lock
adc
jbe
add
addb
cmp
and
orl
pop
dec
push
or
sbb
xchg
orb
add
adcl
lock
jbe
bound
cmp
mov
sbbb
hlt
lea
loop
call
fadd
and
inc
insb
pop
add
add
xor
insb
pop
mov
xor
pop
cld
outsl
es
lods
push
scas
ss
ds
dec
hlt
es
add
add
fcmovnb
adc
and
push
sbb
pop
sbb
sbb
stos
sub
pop
mov
and
or
ljmp
popa
pop
push
xchg
xor
dec
or
and
xor
dec
aam
pop
or
xor
aad
les
pop
sbb
add
push
xor
out
xchg
rorb
pop
scas
stos
adc
xchg
adcb
inc
adc
mov
pushf
jecxz
or
in
rolb
sahf
testl
sbb
push
fmull
pop
sar
daa
scas
or
dec
fstl
cltd
ret
push
push
push
mov
add
mov
pop
rorb
push
dec
push
xorl
mov
rorb
add
js
loop
inc
inc
sub
push
sub
mov
inc
mov
pop
fisttps
adc
sbb
or
push
mov
roll
jp
mov
sbb
jge
push
sub
adc
mov
mov
inc
idivl
xchg
and
push
inc
das
adc
mov
pop
push
repnz
fiaddl
insb
push
pop
adc
add
adc
int
xor
dec
rcrb
mov
mov
mov
pop
inc
aas
fsubs
test
or
dec
in
mov
rolb
scas
sub
sbb
push
aad
xchg
mov
adcb
and
push
and
xlat
sub
add
add
pop
fwait
xorb
pop
mov
bound
mov
adc
pop
js
rcrb
or
push
and
adc
push
inc
insl
jecxz
cmpsb
push
cld
pop
aam
bound
push
and
pop
and
mov
aad
push
jb
ficoms
into
mov
and
add
pop
push
and
xor
and
jo
stos
popf
adc
xorb
test
rclb
inc
push
and
rcrb
mov
orb
popa
add
adc
shr
loopne
inc
push
push
loopne
ljmp
in
xchg
movsb
add
stos
lock
add
adc
sub
pop
pop
and
sub
push
jns
aas
and
pop
fstps
fistl
cmp
lock
ja
xchg
in
xorb
movsb
loope
pop
add
and
sub
fwait
idivb
push
pop
data16
data16
jmp
sub
xor
popf
or
jecxz
adc
in
xor
add
addb
jp
mov
incb
jge
pop
mov
xchg
mov
imul
pop
and
mov
shlb
jbe
arpl
adc
insl
loop
cmp
add
les
or
or
or
or
xchg
sbb
fdivp
add
mov
add
lcall
add
pop
adc
add
xor
pusha
addb
loopne
inc
addb
flds
movsb
or
mov
mov
test
cwtl
push
loope
sub
cmove
scas
xorb
stos
jle
test
adc
addr16
push
adc
fiaddl
fstps
addb
inc
or
scas
sbb
add
and
and
int3
lods
call
jae
jmp
rcr
or
inc
cli
pusha
inc
les
movsb
sbb
movsb
outsl
dec
mov
adc
sbb
or
scas
rorb
sub
mov
xor
jp
and
les
pushl
jbe
dec
mov
ret
ret
or
pop
inc
add
int
test
mov
js
mov
repz
push
mov
or
xchg
inc
xchg
add
loop
shrb
pop
icebp
jbe
inc
inc
or
push
or
inc
dec
inc
and
push
lds
rorl
js
push
incl
aad
push
test
dec
sar
push
jg
mov
push
inc
sbb
pop
addl
sub
fimull
scas
jo
lods
xor
adc
fwait
lods
jo
mov
scas
and
jno
arpl
sbb
int
mov
mov
rolb
inc
mov
aaa
mov
add
inc
mov
pushf
xor
add
mov
mov
arpl
icebp
add
out
add
rorb
loope
sub
je
mov
pop
mov
mov
out
add
incl
push
mov
and
add
pop
cli
xor
jle
mov
inc
mov
mov
out
and
add
mov
insb
mov
pop
lock
ret
dec
ja
decl
fdivrs
sub
push
push
xor
loopne
fiaddl
adc
sbb
cld
push
aad
xor
and
xor
fcoml
mov
or
push
rolb
insb
and
pop
inc
adc
bound
je
inc
adc
mov
pop
push
mov
inc
adc
mov
cmp
adc
aam
pop
je
inc
xor
pop
push
fidivl
mov
sub
movsl
rolb
cmpsb
pop
mov
jecxz
out
push
js
rorb
or
adc
jns
roll
insb
mov
pop
dec
mov
jg
adc
dec
add
mov
add
add
fs
mov
inc
sub
or
sub
add
add
in
mov
inc
mov
insb
cmp
push
push
adc
icebp
xchg
jne
fildl
xor
mov
add
imul
stos
add
cmp
loope
push
xor
push
mov
scas
mov
adcb
sbb
clc
mov
jne
in
fdivrl
mov
incl
mov
test
sbb
add
or
inc
add
ljmp
daa
mov
addb
mov
aaa
sbb
mov
loop
and
stc
push
daa
movsl
add
movsb
call
fisubl
mov
sub
incl
adc
mov
xchg
out
movsb
ljmp
lods
loopne
inc
push
xor
or
int
das
js
imul
mov
ja
pop
and
mov
mov
push
mov
test
and
xchg
or
pop
mov
out
fsubrl
testb
jae
int
sbb
ds
fwait
add
data16
sbb
push
pop
jecxz
jno
xor
adc
fsubrs
bound
xchg
add
hlt
add
aaa
lock
inc
adc
inc
jns
push
cwtl
add
add
and
nop
inc
insl
leave
jno
xor
mov
fstl
inc
inc
outsb
and
jo
pop
inc
js
push
cld
lods
adc
loopne
push
pop
and
push
add
mov
and
in
clc
jle
or
mov
fidivl
add
fbstp
fcompl
add
dec
xor
sbb
pop
push
repz
nop
call
pop
xlat
lcall
les
or
pop
sub
sub
jp
push
jmp
jecxz
mov
inc
ficoml
pop
test
cmp
cmpl
xchg
add
arpl
imul
inc
and
test
xor
scas
mov
pop
and
ret
adc
lcall
push
icebp
add
lods
nop
push
adcb
loopne
adcb
js
dec
mov
and
mov
mov
adc
add
add
lock
fs
pusha
cli
scas
lock
pop
mov
ret
mov
out
pop
cmp
cmp
bound
lods
jo
cmpsb
pop
outsl
outsl
jp
das
lods
mov
cmp
mov
nop
sub
fwait
mov
push
mov
xor
adc
xor
mov
add
fs
add
add
out
mov
sbb
add
xor
push
cmpsb
pop
add
ret
pusha
pop
xor
jb
pusha
dec
nop
arpl
in
mov
fwait
push
out
sbb
out
jo
pop
sbb
sbb
xor
lcall
sub
push
sub
inc
pop
xorl
movsb
jb
loope
pop
jl
xor
imul
sub
xchg
add
mov
xor
icebp
idiv
mov
add
push
testb
push
and
push
scas
xor
fnsave
adc
ljmp
pop
jge
pop
adc
jns
mov
ret
inc
pop
adc
adc
rcr
add
mov
and
pop
mov
testb
push
or
jne
dec
add
adc
push
inc
inc
mov
pop
or
sub
mov
rcr
mov
and
lods
push
jno
inc
sbb
nop
dec
cmp
rorb
xor
or
push
adc
pop
add
add
popa
adc
inc
ds
adc
or
fcomi
sub
sub
adc
or
gs
and
pop
add
popf
lahf
jbe
pop
aad
rcrb
dec
test
outsl
adc
add
andl
add
cmpl
mov
out
fimull
lret
push
push
inc
cli
adc
clc
fsin
addb
rorb
push
test
pop
adc
add
inc
and
and
mov
pop
adc
call
test
andb
jae
arpl
orb
pop
mov
jns
jle
xor
and
jb
addb
sbb
clc
rorl
or
jbe
lds
push
xchg
adcb
fdivl
stos
std
out
icebp
outsb
mov
addb
inc
push
xorb
adc
or
push
pushf
adc
aas
mov
pop
xchg
daa
aad
cli
call
pop
and
pop
push
stos
test
pop
jge
adc
aad
mov
jl
push
inc
sbb
in
insl
xor
pop
stos
movsb
nop
push
cmpsb
fiaddl
cli
jmp
mov
inc
sbb
rcll
add
test
test
pop
push
ret
mov
mov
outsb
rorl
jnp
push
sbb
icebp
push
rolb
inc
fwait
shll
scas
xchg
pop
pop
jle
and
sti
mov
or
stos
mov
ret
mov
cmp
mov
push
cmpsb
movsb
test
ss
fcoml
and
pop
adc
rolb
js
xor
xchg
js
loop
mov
mov
loop
jnp
aad
mov
aad
inc
filds
mov
add
push
add
inc
xchg
jle
add
add
sub
pop
adcb
out
xor
inc
add
or
jbe
and
sbb
clc
nop
adc
and
data16
mov
mov
inc
sub
add
cmp
xchg
push
fdivrs
or
sub
lcall
pop
pusha
add
int
jl
pop
rcll
jge
mov
in
push
fisubrl
or
insl
xchg
adc
lods
and
inc
out
lods
mov
or
mov
sub
pop
add
pop
push
add
subb
sbbb
push
inc
sarl
jg
mov
or
and
dec
mov
xor
jge
push
sub
push
rcrl
std
stos
fdivp
pop
test
das
xchg
xor
add
add
bswap
ffree
mov
mov
pusha
add
pushf
testl
ljmp
pop
and
or
or
sbb
xchg
add
pushw
clc
shl
jnp
and
jg
and
mov
add
jnp
and
add
inc
sub
and
int
ljmp
mov
mov
loope
push
andb
mov
xchg
mov
fists
inc
shrl
call
push
cmp
lea
pusha
or
enter
clc
xchg
lock
or
pop
inc
cmp
and
mov
jecxz
aaa
ds
les
dec
fwait
ljmp
or
pop
insl
scas
and
pop
popa
or
sarb
xchg
dec
cltd
mov
mov
movsb
sbb
mov
dec
fdiv
add
pop
jnp
test
movl
lahf
xchg
ss
int3
mov
mov
cwtl
loopne
and
sub
jbe
testl
add
sub
mov
mov
and
in
adc
mov
adc
and
pop
jle
lahf
dec
mov
sub
add
gs
sub
push
iret
push
dec
jnp
mov
dec
or
adc
mov
aaa
xchg
add
aam
adc
add
pushw
stc
in
push
and
sub
lret
pusha
in
dec
push
shlb
pop
testl
push
rcll
mov
dec
cld
imul
cmpb
jo
sbb
popa
or
stos
push
out
mov
fwait
mov
push
neg
adcb
and
andb
adc
pusha
add
fs
out
and
add
mov
fists
insl
or
ficoml
mov
pop
fdivl
popl
aaa
xor
in
inc
add
inc
mov
inc
add
cmp
inc
lea
shlb
dec
stos
es
aad
xchg
fcompl
adc
clc
sbb
push
push
es
pusha
add
and
inc
or
mov
pop
test
xchg
fildl
sbb
test
inc
push
fiadds
push
add
adc
push
xor
mov
sub
outsb
movsb
sbb
sbb
test
je
outsb
inc
fcoml
data16
push
outsb
adc
sbb
pop
rolb
shlb
es
cli
adc
rolb
jp
cmpsb
fs
sub
outsl
and
xchg
jno
cmp
xchg
sbb
inc
mov
movsbl
add
and
push
dec
std
outsl
nop
mov
jp
push
and
and
out
push
fildl
out
push
and
pop
push
and
insl
movsl
add
mov
data16
xor
push
and
cmpsl
sbb
and
addr16
mov
mov
nop
mov
push
add
sahf
outsb
push
or
cwtl
fisubs
xchg
and
push
xchg
lcall
inc
pop
inc
sub
cmpsb
movsb
ss
mov
test
sbb
pop
push
dec
push
dec
dec
inc
es
mov
test
and
sub
movsl
mov
out
stos
out
sahf
and
movsb
loopne
ss
mov
push
mov
bound
adc
stos
js
xor
shlb
cld
fwait
push
outsb
cld
fldt
mov
jb
call
pop
stos
xor
pop
add
add
adc
and
cmp
pop
sub
in
pop
inc
inc
add
and
mov
xchg
adc
stos
pop
push
stos
loop
mov
add
rorl
mov
dec
or
adc
cld
adcb
mov
xor
push
xchg
push
xor
mov
push
ss
rorl
adc
lea
cmp
push
xor
dec
mov
faddl
adc
add
pop
adc
push
jle
jbe
adc
fidivrl
mov
and
or
cmp
and
add
xchg
mov
lock
orl
je
add
outsl
pop
inc
loopne
mov
bound
mov
sub
inc
lahf
mov
xchg
lock
sub
test
into
and
and
push
in
pusha
cld
or
mov
or
sbb
push
insb
movsb
dec
fiaddl
ret
mov
jl
pusha
push
push
cs
fwait
sbb
cmp
ljmp
addb
test
mov
sub
and
cmp
add
mov
filds
lock
xor
xchg
or
inc
stos
dec
jo
sub
in
cli
adc
adc
nop
adc
mov
and
mov
lock
and
popa
add
sbb
push
cmpsb
xor
push
jo
xor
adc
dec
jo
mov
hlt
xor
push
repnz
dec
mov
nop
mov
movsb
inc
or
or
adc
subl
pop
cmp
sub
add
add
lahf
orb
adc
test
and
push
pop
js
subb
rclb
nop
or
pop
xorb
rorb
xchg
add
filds
or
cmp
xchg
and
inc
xor
dec
push
inc
push
imul
inc
mov
lods
test
inc
rorb
arpl
or
pusha
mov
sbb
add
or
lcall
cmp
pop
loopne
mov
call
or
loopne
jl
adc
fsub
out
pop
dec
and
xchg
out
add
addb
mov
or
jb
mov
mov
pop
roll
shrl
push
sahf
out
pop
add
call
mov
sub
cmpsb
and
sar
inc
insl
test
and
dec
shll
mov
xor
push
shlb
xor
jp
push
rcrb
jo
test
lea
adc
sub
jg
pop
icebp
adc
aas
les
lods
mov
out
lock
pop
or
and
pop
sbb
push
add
lcall
or
add
xchg
ds
out
xor
jecxz
dec
lret
sar
jmp
hlt
js
add
add
ss
nop
fdivl
pop
nop
add
jns
nop
sarl
scas
cld
mov
jg
stos
popa
cmpsb
cmpb
add
sub
repz
cmp
neg
add
enter
xchg
pop
add
cmp
inc
cli
xor
mov
push
fiadds
shll
add
ss
mov
ljmp
out
dec
add
cmp
mov
xor
jnp
clc
push
pop
je
inc
inc
jg
xor
pop
jo
mov
call
add
add
and
dec
or
rolb
mov
imulb
push
dec
shl
dec
int3
mov
lods
ret
outsl
mov
xchg
or
dec
testb
push
rcll
add
mov
in
in
mov
pop
cli
aas
or
add
sub
insl
ret
loop
dec
xor
xor
cmp
mov
jl
jge
movsl
aas
xchg
mov
inc
outsl
mov
ljmp
push
nop
add
mov
inc
ja
pop
cmp
mov
mov
or
aam
aaa
or
clc
in
mov
jo
push
jnp
lcall
lahf
mov
in
mov
in
or
inc
dec
sti
and
mov
outsl
mov
mov
outsl
adc
add
call
mov
decl
mov
je
mov
aaa
xor
push
xchg
mov
add
lcall
std
sbb
add
mov
and
inc
adc
or
sub
push
lret
or
insb
pop
mov
jg
fs
dec
or
xor
mov
sbb
call
aad
add
push
push
mov
jb
add
mov
jle
movsb
sub
mov
out
mov
lret
jl
pop
nop
shr
xor
xchg
cmp
ds
cli
testb
int
mov
push
mov
push
fucomp
mov
adc
or
or
jbe
push
mov
or
in
fmuls
sbb
outsl
jg
in
cmp
mov
ret
cmp
lock
icebp
pop
mov
jg
sub
scas
inc
add
outsb
jno
xchg
in
xor
mov
and
add
push
and
lcall
mov
sub
xor
inc
dec
mov
ljmp
add
add
sarb
rolb
call
adc
mov
in
mov
sub
fbstp
icebp
sub
out
or
dec
sbb
scas
pushl
pop
out
dec
pop
pop
inc
jo
les
mov
cmp
inc
add
jno
xor
mov
pop
mov
call
adc
out
add
sarl
mov
add
cld
push
fwait
lahf
xchg
test
fstpl
cli
clc
xchg
add
jp
or
add
repnz
call
fcmovnu
sub
push
or
outsb
add
add
mov
sbb
add
call
dec
add
cli
push
mov
add
inc
add
into
and
add
lret
and
cmp
loope
mov
fdivl
data16
orb
scas
ret
or
lds
cmp
ret
mov
xor
scas
hlt
sbb
jle
inc
add
sbbb
or
push
adc
mov
lds
xchg
rcrl
out
cmp
sub
dec
dec
aad
cmp
sub
sub
dec
or
inc
add
xchg
sbb
out
enter
fadd
sbbb
cmp
lahf
pushf
sbb
ret
aam
add
pop
jo
scas
lcall
orb
lcall
push
int
dec
ret
xchg
dec
repz
andb
cmp
enter
or
xor
scas
mov
add
leave
mov
andb
jl
clc
fisttpl
in
es
fmulp
xor
je
iret
jg
sub
mov
mov
call
inc
xorb
filds
push
adc
inc
xor
sub
and
xor
pop
pop
hlt
mov
stos
inc
decl
or
jne
scas
mov
in
testb
add
mov
inc
sarl
and
cmp
or
cld
add
jo,pn
adc
dec
xor
test
mov
clc
adc
pop
cmp
in
call
add
inc
adc
push
aas
fwait
test
cld
xchg
aas
insb
cli
ror
mov
nop
aam
cli
and
pop
hlt
mov
adc
std
dec
inc
mov
sahf
sar
sarl
fsubr
hlt
hlt
or
sbb
rorl
rorb
dec
jle
in
inc
jbe
push
cltd
jmp
in
cmpb
nop
xlat
adc
jg
sub
jb
jo
inc
adc
jb
shlb
dec
iret
mov
add
mov
push
or
adc
mov
push
aam
andl
mov
mov
aad
mov
adc
adc
xchg
push
push
dec
adc
add
push
xor
in
cli
in
mov
adc
insb
pusha
rcll
xor
adc
add
adc
cld
in
mulb
mov
inc
shr
subl
ds
inc
or
es
into
add
cwtl
and
into
inc
mov
inc
add
loope
push
dec
lret
or
add
push
mov
inc
pop
lds
push
gs
fndisi(8087
mov
subb
mov
or
mov
pop
ljmp
loope
sub
mov
les
mov
hlt
mov
fisttpl
lcall
mov
loop
ds
mov
add
push
and
or
pop
sub
or
push
orb
or
aas
cmp
adc
lcall
adc
pusha
jne
add
cmpb
cmp
inc
in
out
stos
and
inc
add
cld
jmp
add
mov
add
add
mov
test
mov
add
xchg
scas
add
lret
adcb
pop
jmp
push
mov
mov
inc
jo
fs
les
adc
jg
push
add
fcmovnu
sbb
pop
rcrl
or
add
insb
rcrl
inc
and
add
push
loope
pop
jo
and
cmp
pop
mov
sbb
mov
lea
pop
mov
xchg
xchg
dec
adc
fbld
sahf
inc
or
stos
mov
mov
mov
xor
mov
add
sub
bound
rolb
imul
or
scas
cmp
rolb
sbb
addr16
jb
rolb
inc
test
test
inc
sahf
loopne
push
and
inc
pop
add
inc
lret
cwtl
mov
test
add
inc
movsl
ljmp
lods
bound
adc
cmp
mov
jno
andb
or
pop
jl
subb
mov
test
add
ret
arpl
lods
jl
ds
or
adc
sub
aam
mov
lock
inc
add
add
mov
xor
add
loope
ds
add
ds
xor
out
test
hlt
insb
lods
jg
push
adc
mov
popa
psllw
mov
dec
and
dec
add
lcall
xchg
arpl
loopne
push
push
dec
and
push
hlt
xor
mov
sahf
add
lret
mov
call
or
and
sbb
pop
add
lods
lock
lea
or
sbb
inc
xchg
lret
add
int3
push
hlt
scas
and
and
arpl
add
rcrl
push
out
inc
jno
jo
add
or
and
inc
ss
add
lea
or
addb
inc
and
add
jmp
imul
and
adcl
js
popa
mov
imul
stos
rcrb
push
idivb
orb
rcr
jecxz
inc
and
push
mov
dec
push
sub
ds
pop
filds
dec
sbb
daa
mov
inc
outsl
movsb
jne
or
jb
pop
movb
adc
add
scas
dec
and
ret
rcl
mov
add
xchg
lods
dec
mov
push
subb
inc
or
add
test
aad
push
cs
inc
lods
and
add
scas
push
jnp
xchg
idivl
push
loop
bound
adc
xchg
push
mov
pop
pop
mov
and
bound
dec
push
push
jbe
xchg
mov
in
pop
and
leave
fildl
sub
inc
fstl
jnp
mov
xor
scas
mov
int
push
data16
shlb
test
sub
mov
pop
fcmovb
pop
xor
sub
lahf
mov
ss
sti
mov
add
stos
fisubs
pop
push
inc
je
push
test
mov
ret
mov
push
add
repz
mov
dec
cli
aas
pop
cmpb
popf
add
icebp
out
add
xor
adc
or
dec
mov
add
and
fsubrl
or
test
add
sub
and
xor
test
add
stos
pusha
or
adc
inc
out
push
fdivr
pop
data16
sbb
add
sub
dec
les
negl
push
mov
jbe
push
add
lock
mov
push
bound
sub
xor
shll
sbb
shll
notb
xor
out
xchg
push
xchg
imul
add
out
idivl
ficomps
jge
xor
push
xchg
add
out
jle
es
sar
cmpsl
mov
xor
push
ss
cld
imul
mov
xor
aam
or
ret
mov
xchg
cld
jmp
jmp
rorl
push
icebp
add
pop
scas
lret
xchg
xchg
roll
sar
push
jge
mov
scas
sbb
loop
into
lret
mov
mov
fcmovb
lret
mov
adc
mov
sbb
mov
out
sahf
mov
or
add
dec
or
outsb
call
into
les
ds
outsb
mov
mov
decl
nop
xor
jo
lock
aad
lret
cmc
out
xor
aam
inc
daa
rol
or
xchg
xor
icebp
add
pusha
push
loop
cmpsb
rol
push
add
in
stos
push
ljmp
popa
add
inc
xchg
push
arpl
xchg
push
push
jp
enter
xchg
inc
fnstcw
add
in
xchg
aam
stos
jo
push
cmp
xchg
sub
add
scas
push
add
mov
push
es
push
cmpsl
push
dec
add
pop
fsubrl
pop
outsb
dec
bound
sub
and
cli
pushl
xor
insb
xchg
and
push
jo
cmpsl
mov
add
aas
inc
mov
aas
inc
and
push
mov
mov
inc
insl
stos
aad
mov
add
cmc
int3
jbe
jp
imul
adc
fistl
sbb
dec
jmp
xchg
dec
fmull
cmpsb
shrl
push
ffreep
or
and
bnd
sbb
mov
add
jns
pop
or
push
mov
add
movsb
sbb
pushf
lods
mov
inc
pop
rol
push
cmp
adc
loopne
rcl
stos
push
add
adc
cmp
lret
jbe
push
in
idivb
jge
fcompl
loopne
jo
clc
insl
repnz
fstpl
and
add
out
add
and
outsl
adcb
xchg
pusha
add
push
sub
or
daa
fst
rolb
fsubr
adc
popf
sbb
xchg
adc
mov
fisttps
ljmp
test
pop
inc
or
mov
mov
add
pop
mov
cmpsb
aad
xor
out
xor
jbe
rolb
xor
pop
outsl
fcomp
push
xor
push
pusha
or
and
xchg
outsl
dec
pop
cmp
jb
add
xchg
shlb
lret
ss
hlt
jg
sti
scas
rolb
dec
inc
push
xchg
jbe
sbb
imul
mov
pop
pusha
push
sub
adc
push
or
loope
test
pop
xchg
push
xchg
add
pop
fstl
lea
mov
push
fcmovne
push
adc
or
cmp
ret
stos
lods
sub
mov
lock
imulb
add
jp
or
push
cmp
adc
jb
dec
pop
popa
lods
mov
add
lods
xchg
mov
add
sub
aaa
sub
sbb
adc
test
icebp
push
into
mov
add
add
arpl
idiv
push
js
add
lock
rorb
in
and
test
and
mov
data16
push
sbb
sub
push
fs
push
mov
xchg
or
rorb
xlat
add
pop
add
mov
orl
lods
sbb
test
add
xchg
sbb
adc
sbb
pop
lock
push
push
jg
mov
dec
fnsave
dec
popa
sbb
mov
sbb
filds
das
add
ret
adc
sbb
mov
shrb
imul
or
push
pop
push
shl
mov
paddd
in
rcrb
mov
push
es
push
push
adc
pop
std
add
sbb
movsb
sbb
adc
add
mov
ret
movsb
sbb
adc
mov
or
pop
push
inc
frstor
jge
mov
add
mov
jne
add
jecxz
add
jbe
inc
push
mov
jbe
lcall
sbbb
add
and
test
xchg
add
or
pop
lcall
lock
add
dec
add
lods
movsb
fadd
jge,pt
xlat
rcr
mov
cs
xor
mov
shlb
xchg
and
inc
cmp
mov
mov
cmp
jns
ds
inc
add
sub
sar
mov
inc
sub
adc
sub
mov
ret
push
sbbb
cmp
push
inc
scas
and
push
mov
inc
pop
add
push
sbb
lods
outsl
sarb
adc
add
call
add
shlb
push
mov
sarb
pop
filds
pop
cmp
lock
mull
pop
jl
xorb
insl
jge
ret
adc
mov
adc
dec
mov
sub
mov
mov
sub
or
mov
mov
push
adc
arpl
lods
sub
xor
dec
stos
test
and
inc
je
pushf
adcb
rorb
push
scas
jo
out
adc
lret
inc
sbb
push
add
dec
ja
dec
sub
inc
adcb
mov
fs
push
mov
mov
xor
inc
push
int
sub
dec
sarb
imul
or
fimull
sub
shrl
ret
cmp
fs
sub
rclb
rcrb
jge
insl
imul
dec
rolb
cs
cmpsb
or
or
inc
ror
inc
xor
cmp
and
inc
shll
add
nop
testb
outsl
fldt
addl
and
inc
pop
subb
add
add
sbbb
pop
and
push
lock
add
fcoml
mov
xchg
pushf
mul
or
push
push
xchg
xchg
or
stos
jle
fimuls
fcmovnu
ds
or
outsl
push
or
data16
mov
incl
repz
inc
push
fisubrs
push
fisttps
mov
ror
jle
xchg
movsb
mov
sarb
popf
add
jle
scas
sub
incl
out
adcb
and
mov
add
jl
in
push
xchg
orb
loopne
push
dec
int3
dec
and
pop
cmc
lds
inc
xchg
test
fisttpll
and
sub
mov
iret
or
or
pop
pop
fwait
lods
outsb
clc
inc
jbe
sbb
add
adc
mov
js
inc
test
dec
add
mov
mov
dec
inc
sub
pusha
push
cmpl
pop
loopne
sub
shlb
lock
push
fwait
insl
adc
or
rcrb
lods
sbbb
pop
nop
cltd
andb
nop
ja
sbb
mov
xor
and
push
add
pushf
mov
in
xor
jb
pop
mov
add
or
add
mov
mov
mov
inc
pusha
or
pop
adc
aaa
fbld
and
xchg
pop
or
pop
lods
and
mov
ficompl
push
xchg
loopne
adc
in
adc
jo
add
cmp
and
dec
or
push
or
and
pop
fdivrs
or
add
add
pop
push
sahf
fcomps
push
rcr
xchg
pop
in
cmc
xor
push
pushf
add
or
fists
xor
xor
mov
popa
push
mov
xchg
push
push
and
push
pop
add
xchg
sub
cld
mov
xchg
fisttpl
loope
addb
ss
sub
cmp
out
shlb
mov
ret
sarb
jmp
inc
add
arpl
inc
inc
cltd
stos
mov
and
mov
repnz
dec
loopne
add
icebp
subb
aad
push
and
jp
push
dec
xchg
dec
push
sub
mov
ds
cmp
mov
mov
inc
ror
dec
rolb
jge
jno
xor
mov
inc
rclb
das
xchg
mov
mov
sahf
addb
pusha
or
jnp
inc
insb
push
jp
push
mov
popa
test
dec
push
insb
fisubs
xchg
rcrb
loopne
mov
addb
rcr
push
jns
sub
dec
hlt
fimuls
mov
scas
xor
adc
and
psrad
test
mov
outsl
pop
push
dec
enter
jge
or
push
mov
sub
or
inc
std
jbe
lock
push
mov
mov
add
sub
add
aaa
orb
xlat
orl
mov
add
and
gs
jb
test
test
ss
add
add
cmp
imulb
test
dec
ss
inc
xchg
mov
out
mov
cmp
xchg
push
mov
or
inc
and
stos
xchg
cli
fistpl
pop
mov
lret
mov
shld
orb
call
adc
pop
mov
and
jmp
adc
inc
sub
or
add
sbbb
fistl
push
loopne
test
pop
bound
pop
pop
xchg
mov
mov
push
or
fsubrs
jo
adc
rcrl
loop
sbb
push
or
neg
in
pop
out
rol
cmpb
lods
push
push
push
mov
cld
inc
adc
sbb
push
add
cwtl
ret
push
mov
add
xchg
fstl
mov
push
sbb
pop
xorb
nop
or
jecxz
and
push
je
mov
cmc
or
repz
xor
mov
xchg
xorl
hlt
das
inc
ret
adc
mov
inc
mov
xchg
and
ret
rorb
inc
decl
sbb
rorb
fwait
xor
inc
add
mov
mov
mov
mov
dec
hlt
int3
pop
push
add
xchg
adc
mull
jecxz
add
cs
fcomip
add
pop
aad
or
inc
mov
sbb
mov
jae
add
ds
jo
dec
or
rorb
push
in
xor
out
cli
mov
ret
je
pop
and
jnp
rcl
push
int3
imul
mov
rclb
add
fiaddl
lods
add
outsl
adc
or
test
pop
fists
mov
cmp
xor
insl
sub
add
push
mov
mov
push
out
pop
mov
mov
jge
shl
jo
scas
inc
clc
std
mov
xor
notb
pop
lock
sti
fstpt
dec
cmpsb
inc
pop
add
and
add
push
pop
and
sub
add
sbb
mov
or
shrb
mov
addb
jb
pop
data16
add
jno
dec
lock
xchg
xchg
test
inc
xor
ret
add
lcall
nop
cwtl
imul
mov
inc
ljmp
inc
push
mov
adc
adc
pop
jl
xchg
loope
inc
adc
xchg
loope
adc
ljmp
inc
add
dec
add
cmp
push
fwait
pusha
lock
add
or
lock
aam
or
xchg
imul
inc
jb
and
rol
inc
in
push
jge
mov
ja
inc
and
cmp
jge
adc
push
std
ljmp
outsb
je
push
mov
sbb
andb
push
pop
rcrl
rcrb
loopne
loopne
mov
scas
sbb
and
push
and
ret
scas
and
jo
sub
stos
outsb
test
add
pusha
loopne
fistpl
in
lock
cld
add
add
in
js
call
push
insb
inc
push
cmp
mov
jns
mov
insl
pushf
sub
pushl
mov
dec
mov
add
andb
jo
or
enter
mov
push
ss
mov
pop
cld
jg
shr
inc
pusha
dec
adc
inc
and
mov
into
sub
and
cld
mov
push
ja
lds
adc
cmp
rclb
test
xor
pop
outsl
rclb
adc
adc
mov
xchg
popa
aas
adc
inc
add
inc
scas
add
push
rcll
pusha
andb
ret
sahf
dec
clc
stos
or
push
push
or
pop
mov
pop
adc
add
call
add
sub
fwait
aam
mov
mov
rolb
outsb
pop
mov
jo
add
sarl
jge
adc
adc
arpl
fcoml
xchg
outsb
loopne
xchg
cmc
rcl
pop
mov
and
push
or
ljmp
or
rcrl
faddl
adc
add
test
mov
jl
mov
mov
push
stos
add
pop
outsb
push
and
test
out
fiadds
mov
test
mov
xor
add
push
push
jno
mov
and
and
daa
shrb
jns
daa
push
sub
pop
jo
pop
sbb
into
mov
mov
add
cmpsb
xor
out
adc
adc
or
add
push
idiv
jg
mov
adc
inc
lock
andl
inc
lret
adc
sub
mov
lock
sub
add
and
std
testl
push
sbb
mov
xchg
popa
fnstenv
xchg
es
hlt
mov
inc
add
aam
and
das
push
jb
push
addl
or
sbb
and
add
or
cld
out
inc
rcll
scas
pop
adcb
sub
or
loopne
cmp
aaa
cs
mov
or
mov
jb
addb
ljmp
and
addb
or
or
outsb
or
sub
sahf
clc
decl
inc
mov
orl
push
pop
fcoml
inc
sbb
test
pop
loop
test
dec
xchg
icebp
mov
pop
fmuls
inc
and
fsub
mov
xchg
lock
ds
push
and
retw
xor
pop
test
sbb
mov
inc
pop
mov
mov
scas
sub
add
sub
push
push
mov
test
shl
xchg
sbb
loope
jg
mov
lret
mov
addb
add
add
test
lret
syscall
pop
test
xor
pop
sbb
cmpb
rcl
cmpsb
movsb
fiadds
mov
and
pop
outsb
adc
sub
aad
lock
fcmove
mov
repnz
add
mov
stc
jnp
nop
push
out
icebp
mov
xchg
inc
sbbl
add
adc
daa
push
pop
enter
add
push
xchg
mov
aam
neg
inc
xor
sbb
outsl
addb
lock
out
test
add
and
dec
jo
or
push
mov
pop
cs
lahf
add
outsb
imull
push
cmp
cwtl
stos
inc
pop
roll
test
add
aam
add
add
adc
rorb
cmp
out
adcb
out
sti
or
and
push
and
mov
or
push
mov
aad
xorb
pop
ret
incl
and
xor
adcb
xor
sbb
xorb
xor
add
mov
mov
sbb
mov
mov
inc
push
xor
or
addl
xchg
fdivs
mov
fadds
add
add
add
jbe
test
push
scas
cmp
inc
pop
push
pop
dec
dec
ret
shlb
sub
sub
dec
add
cwtl
insb
mov
incl
addb
sahf
ret
adc
add
xor
pushf
mov
mov
inc
aam
cld
das
cli
fwait
xlat
add
fistps
pop
sbbb
outsl
data16
lahf
and
pop
out
bound
xor
fdivs
push
sbb
adc
pop
shll
mov
loope
cltd
xchg
pop
ficompl
inc
pop
rol
mov
push
aad
and
shrl
mov
dec
fistpl
nop
pop
inc
scas
movsl
shlb
jae
lcall
pop
and
pop
insb
add
jp
inc
outsl
or
lea
pop
cld
test
or
add
js
dec
sub
mov
orb
jge
insl
mov
filds
rcll
pushf
pusha
inc
mov
scas
je
in
sbb
cld
hlt
out
fimull
pushf
pop
and
xchg
cmc
pushl
inc
aad
lods
pop
and
lods
bound
rclb
mov
loopne
xor
or
add
orl
mov
cmp
mov
ljmp
or
test
lret
or
lods
jg
add
push
jb
mulb
rcrb
stos
mov
mov
jmp
scas
mulb
adc
inc
pop
and
push
in
rorl
inc
jne
pop
cmpl
pop
xchg
pop
sub
mov
insb
inc
sbb
mov
mov
cs
or
push
js
inc
push
pop
sub
inc
std
jmp
adc
and
imul
aas
loope
dec
sarb
mov
cwtl
cmp
mov
bound
sbb
pop
mov
pop
add
outsb
pop
shl
data16
fwait
bound
inc
sub
push
test
push
push
fbstp
imul
and
add
ljmp
test
sub
test
push
xor
sub
push
jp
push
mov
loopne
rolb
sarb
mov
hlt
and
and
push
dec
icebp
jg
pusha
in
cwtl
ret
and
shrb
out
jmp
xchg
sub
in
mov
insl
dec
and
insl
fstpl
sub
outsb
and
xchg
insl
xchg
dec
xchg
inc
fcoml
adc
or
push
stos
pusha
imul
sbb
ljmp
je
mov
hlt
pop
mov
jge
lock
fstpl
and
mov
ss
sbb
test
idivb
mov
cld
clc
das
cli
outsl
push
fbld
pop
adc
jo
mov
icebp
or
add
shr
xorl
jg
js
push
adc
or
mov
add
xor
add
mov
sbb
jne
xchg
js
xchg
cmpsb
pop
inc
and
cmp
xor
add
pop
xchg
stos
pop
shrl
mov
ret
popa
or
cwtl
nop
cmp
xor
add
loope
xor
ret
add
jno
jg
dec
rorl
sbb
push
fnsave
add
push
ds
pop
dec
adc
adc
aaa
mov
aaa
or
adc
mov
pop
push
insl
adc
adc
sbb
fdivrs
add
outsl
dec
mov
sub
inc
mov
xchg
xor
and
scas
jl,pn
push
pop
insl
xor
ss
loopne
nop
sub
sti
faddl
xor
rcll
pop
sub
pop
das
add
sub
rolb
cmp
icebp
fwait
nop
fistl
aam
sub
mov
add
inc
mov
inc
push
test
mov
push
xchg
jp
js
mov
ret
sbb
add
jo
aaa
sub
jbe
das
cmp
jno
add
xor
shll
jne
xor
dec
push
stos
shrb
inc
loop
or
push
xorl
mov
mov
mov
mov
pop
loope
ljmp
jbe
add
push
cmpsb
push
add
imul
out
rclb
data16
mov
push
sub
jbe
stos
cmp
shlb
mov
inc
mov
pop
loopne
push
mov
nop
add
pop
std
jmp
or
mov
adc
aam
cmp
add
test
in
mov
mov
cmp
mov
lods
ret
pushf
mov
push
cli
push
and
adc
fstpl
popf
and
mov
xchg
push
or
xlat
test
jne
sbb
mov
lods
js
push
add
or
jb
mov
lret
mov
shl
mov
fwait
jbe
sahf
shlb
xor
nop
xchg
adc
and
push
push
test
add
int
lods
pop
sbb
xor
push
popf
mov
adc
cmp
add
push
lcall
cld
push
flds
mov
lock
adc
push
xchg
or
sbb
sub
add
and
or
stos
mov
push
add
add
rclb
dec
mov
sar
fbld
mov
mov
or
pop
xchg
popa
addr16
decl
sub
out
add
mov
and
dec
add
jb
mov
mov
cs
adc
adc
and
cmp
add
mov
cwtl
inc
pop
sbb
mov
inc
adc
push
push
icebp
lods
sbb
dec
incl
push
incb
loopne
fstp
ror
pop
sbb
mov
dec
clc
stos
xor
pop
and
aaa
push
pop
inc
sub
mov
daa
bound
add
dec
hlt
ljmp
loopne
add
rcrb
sub
adc
xor
xor
cli
mov
push
ds
scas
loope
add
jl
inc
xor
inc
mov
lcall
insb
sub
push
fstl
enter
faddl
cmp
lcall
sbb
faddl
xor
outsl
sbb
and
les
mov
jae
dec
outsl
sbb
and
clc
or
and
push
ficoms
adc
adc
int
inc
and
sbb
adc
pop
xor
ret
and
adcl
jecxz
sbb
add
nop
sarb
sbb
xor
inc
mov
push
shr
and
xor
pop
test
sub
dec
sahf
fbld
sbb
and
push
and
or
mov
add
sub
sbb
dec
sub
push
xchg
sti
mov
loop
loopne
mov
lods
mov
push
inc
nop
push
out
pusha
inc
mov
mov
pusha
inc
pop
std
outsb
std
jbe
add
subb
test
mov
mov
cld
pop
jmp
jo
adc
icebp
and
jp
mov
xchg
push
aam
mov
nop
shr
mov
aad
pop
int3
ficoms
inc
mov
mov
ja
mov
xorb
dec
mov
cmpl
mov
pop
jl
je
push
int3
add
sbb
dec
add
push
cwtl
ds
xor
xchg
add
or
pushf
add
pop
icebp
mov
test
addb
adc
sbb
data16
add
cld
push
jo
mov
add
dec
cmp
pop
add
adc
or
jp
call
jl
lods
push
mov
inc
or
add
or
cwtl
xchg
pop
pop
fildl
xchg
mov
add
add
in
psubd
cmpsb
jmp
pusha
or
dec
pusha
adc
xor
int
icebp
es
mov
data16
adcb
lahf
fisttps
inc
sarb
sub
cmp
adc
add
insl
shrb
inc
dec
loopne
test
clc
roll
lahf
and
and
and
cld
or
or
add
cmp
add
dec
sahf
jge
mov
addl
mov
add
decl
push
adc
xor
or
add
mov
jl
out
sbb
add
add
mov
mov
add
and
pushf
add
dec
and
push
sub
cwtl
gs
ljmp
test
inc
lea
inc
push
pusha
and
mov
addb
shlb
jle
and
adc
lock
inc
adcl
inc
lahf
mov
adc
mov
or
and
push
inc
jno
mov
push
add
sbb
sbb
mov
xchg
add
mov
push
mov
push
dec
cmp
xchg
in
lcall
mov
pushw
push
mov
rol
add
xor
enter
sbb
add
jl
movsl
adc
dec
jecxz
inc
dec
jg
divb
rorb
jns
jle
pop
stos
outsl
push
pop
add
adc
lcall
bound
inc
adc
adc
mov
fiadds
mov
nop
dec
addb
push
ja
cld
call
scas
push
push
push
rorb
or
orl
rorb
or
and
xchg
andl
movsb
mov
cmc
decl
push
mov
push
jbe
sbb
lds
or
mov
pop
and
inc
dec
fistl
movsl
clc
mov
rclb
lock
shll
mov
jae
dec
jge
test
ror
add
int3
adc
test
or
mov
adc
insb
hlt
scas
ss
lcall
xchg
lods
adc
aaa
je
repnz
add
loop
sub
andb
mov
fadds
pop
fcomps
je
das
loop
and
rcrl
fadds
push
movsl
ret
xor
cli
mov
push
add
insl
nop
int3
adc
mov
pop
or
cwtl
dec
push
pop
or
imul
inc
mov
lock
sub
daa
outsl
jmp
pusha
add
and
orb
add
mov
fisttps
enter
pop
mov
bound
hlt
mov
sub
je
add
push
mov
add
mov
mull
bound
inc
mov
xor
sub
push
negb
mov
and
mov
pop
inc
adc
stos
mov
add
push
loop
add
push
push
jecxz
dec
push
arpl
or
shll
cltd
incb
loopne
std
out
mov
in
add
ret
push
data16
fwait
lods
ret
mov
adc
out
xchg
or
jge
pusha
add
xor
add
add
scas
orb
inc
mov
inc
bound
push
jmp
adc
pop
dec
je
movb
and
out
call
adc
add
dec
push
out
mov
imul
cwtl
movsb
xor
stc
and
adc
rcll
nop
or
loopne
repz
rcrl
xchg
mov
mov
xor
jp
andb
sub
mov
aam
and
roll
xchg
add
scas
add
push
test
sbbb
pop
cmp
pop
add
inc
pop
mov
inc
inc
notb
add
mov
mov
je
jno
adc
and
jnp
filds
jo
sbb
pop
pushf
add
cld
data16
add
insb
insl
or
popa
jmp
add
add
addb
jbe
and
xchg
adc
out
push
loopne
pop
enter
sbb
push
jbe
mov
pushf
xor
add
add
or
sub
push
mov
mov
inc
lods
std
adc
cmp
lock
push
xchg
sbb
xorb
mov
call
xchg
aad
mov
add
add
cmp
dec
xor
xor
daa
mov
ret
push
add
aas
sbb
push
xchg
aas
add
and
push
in
test
nop
ljmp
xchg
push
imul
ret
mov
xchg
push
mov
dec
jg
or
mov
pop
mov
js
ds
stos
mov
je
into
mov
call
roll
mov
clc
inc
or
out
mov
sub
mov
dec
fcomp
aaa
sbb
push
inc
pusha
xor
adc
xchg
fisttpl
jmp
or
nop
add
push
adc
push
adc
mov
jle
fstl
jbe
xchg
xor
and
push
popl
push
dec
inc
scas
jo
imul
test
push
add
cwtl
xchg
and
adc
xor
and
xchg
mov
sahf
inc
inc
lods
orl
lea
sub
sub
xchg
sub
ljmp
or
mov
adcb
imul
push
in
xor
add
das
or
inc
cltd
push
add
adc
mov
pop
jne
xor
data16
add
test
shll
inc
adc
les
pop
jno
mov
cli
stos
subb
add
aad
dec
roll
ds
xchg
xor
rcrl
add
ss
sbb
out
and
rolb
icebp
loopne
pop
and
and
pop
nop
add
lret
insb
mov
pop
xor
push
push
xor
push
add
test
push
jne
ffreep
add
dec
add
and
sahf
pop
ss
ljmp
cwtl
dec
cmp
mov
addl
mov
or
rcll
push
add
mov
and
pop
test
lods
adc
xor
jbe
pop
mov
data16
push
inc
inc
add
adc
rorb
cs
sub
and
mov
sbb
pop
pop
and
test
dec
mov
jbe
scas
pop
cmp
and
fiadds
jb
rcrl
pop
jg
or
pop
push
cmp
adc
and
ret
and
mov
outsl
sub
inc
and
adc
add
movsl
or
or
stos
push
sbb
adc
inc
orb
dec
test
iret
cwtl
loop
or
pop
scas
sbbb
jge
lods
xor
sbb
iret
or
loope
loopne
js
das
push
cmp
dec
mov
xchg
adc
les
xorb
lods
mov
ret
mov
nop
or
push
mov
incb
pushf
mov
aad
add
mov
add
repnz
hlt
mov
pop
scas
add
and
sysret
mov
sub
loopne
and
or
jae
inc
push
fildl
inc
xchg
xchg
stos
mov
fs
and
mov
lock
and
mov
rorb
add
inc
inc
popa
push
sub
xlat
mov
loop
adc
jecxz
xchg
mov
inc
cwtl
xchg
push
loope
filds
rolb
and
inc
dec
mov
loope
and
add
xchg
inc
and
pop
je
add
hlt
sub
push
mov
push
and
adc
push
sbb
xchg
dec
add
mov
cltd
pop
add
push
pop
dec
movsl
std
add
add
and
and
call
jne
jle
sahf
mov
fisubrl
fcmovnb
sbb
subl
icebp
test
jo
gs
add
add
sbb
fcoml
insb
mov
and
xchg
popa
xchg
jle
sbb
cmp
adc
loop
outsb
push
das
nop
lock
and
xchg
sub
add
adc
sub
clc
sub
add
mov
call
fucomp
shrl
adc
add
pushf
jo
decb
loopne
mov
in
xchg
xchg
mov
rcr
sbb
ret
shl
pop
sub
inc
cwtl
adc
pop
sub
inc
andb
jp,pt
test
sub
sahf
and
rorl
or
fmul
or
adc
and
mov
pop
ret
popa
sub
add
push
push
call
subl
jmp
pop
inc
or
pop
and
loopne
test
push
jo
mov
add
and
pop
and
mov
jle
adc
outsl
dec
mov
push
in
and
or
decl
cmpsb
sub
jge
xchg
imul
push
hlt
pop
lret
xchg
push
xchg
pop
dec
outsl
loop
sbb
xchg
and
ret
ss
push
push
push
pop
push
cmpsb
cmpsb
insl
dec
and
pop
in
and
push
mov
mov
pop
pusha
add
jno
cli
and
add
fs
adc
add
mov
xor
jbe
sub
push
or
jp
adc
pop
fcmove
fnstsw
xchg
js
jbe
cmp
inc
mov
dec
mov
movsb
sbb
mov
or
dec
xchg
in
mov
adc
out
ljmp
insl
fs
pop
fadds
in
sub
jo
rcll
sub
inc
fcoms
cld
jg
fldt
xor
push
inc
data16
push
dec
sbb
shlb
fwait
and
mov
xor
mov
outsb
push
push
es
fsubl
adc
pop
mov
mov
cs
sub
sbb
andb
push
xor
jbe
xchg
orb
repz
filds
push
cli
aad
adc
add
mov
add
inc
or
inc
inc
or
push
cld
and
mov
and
push
jp
xchg
aas
and
fs
gs
push
adc
adc
xlat
mov
push
dec
xor
push
loopne
inc
andl
mov
fistps
jmp
push
and
sbb
mov
or
aam
inc
xor
outsb
lods
pop
push
cld
test
sub
jecxz
movsl
pop
dec
adc
push
add
sbb
mov
mov
enter
outsl
andb
sub
popa
adc
ljmp
sub
adc
add
and
push
js
mul
adc
iret
add
sub
mov
add
jge
pop
adc
xor
inc
push
ret
sub
filds
push
dec
cmp
add
mov
xchg
add
int
int3
nop
dec
test
fdivr
and
push
sahf
inc
add
cmp
pop
add
mov
jb
add
sbb
ficoms
sub
xchg
jle
sub
movsb
fidivrs
add
push
mov
pop
lcall
inc
pusha
je
adc
add
xorb
or
jmp
mov
mov
cmp
test
fimuls
add
ficoml
test
inc
and
pusha
push
adc
push
lret
xchg
mov
cmp
add
pop
inc
jge
xor
pop
mov
push
add
sbbb
or
sbb
ljmp
stos
je
sbb
clc
sub
add
sbb
ffree
orl
pop
push
push
add
push
jb
testb
jp
cmp
outsl
or
add
popa
addb
or
push
subb
sbb
inc
fsubrl
ficompl
mov
mov
or
dec
mov
inc
testb
xor
cmpl
subb
loopne
sub
stos
dec
enter
hlt
insl
add
orl
and
inc
sub
mov
mov
push
xchg
or
mov
dec
adc
enter
and
scas
inc
popf
nop
outsb
mov
rorb
mov
cld
mov
mov
push
push
pop
data16
mov
rclb
or
insb
adc
ss
cld
inc
pusha
fcoml
popf
subb
sarl
cmpsb
and
push
mov
les
call
sbb
test
in
push
cwtl
loop
out
mov
pop
mov
stos
movsb
mov
add
nop
fldl
mov
push
cmp
add
cmc
gs
dec
addb
mov
mov
inc
mov
push
inc
xchg
filds
push
filds
sbb
ret
ret
xchg
pop
sbb
test
mov
add
add
or
cs
inc
cs
std
das
or
jge
testb
pop
push
xchg
mov
add
adc
pop
push
outsb
mov
or
or
adc
push
adc
aad
add
push
add
inc
or
xor
inc
mov
negb
push
pop
and
pop
or
fiadds
incb
mov
pusha
daa
push
sahf
mov
ret
neg
or
add
hlt
push
add
add
int3
or
shrb
adc
push
popa
outsl
clc
ret
stos
sbb
add
push
jg
gs
fildll
add
pop
xchg
outsl
fildl
or
fnstsw
dec
adc
add
popf
push
or
test
mov
jne
scas
adc
leave
xor
mov
inc
lea
jp
adc
fs
pushf
mov
pop
out
push
mov
or
sbb
add
inc
fcmovnbe
popa
add
or
es
inc
push
pusha
adc
and
cwtl
adc
pop
fcoml
mov
adc
and
xchg
push
push
sbb
pushf
rolb
fsubl
pop
js
xor
and
adc
push
push
push
jb
xchg
inc
adc
cmp
cs
mov
sbbb
jo
and
lods
xor
jle
nop
ljmp
mov
mov
shrb
sbb
and
xchg
mov
sbb
add
push
and
mov
std
cmp
mov
and
inc
xchg
or
mov
adc
sbb
movsb
bound
ret
push
push
push
or
pop
xchg
aam
loop
pop
push
push
rorb
xor
pop
add
movsb
orb
adc
ret
add
cmp
push
mov
and
push
jae
mov
jecxz
out
hlt
push
pusha
mov
sbb
cld
adc
adc
xchg
add
push
push
addr16
xchg
push
pop
add
dec
dec
jmp
pop
faddl
addr16
popa
test
xor
cmp
sbb
subb
mov
fadds
insb
inc
and
adc
inc
and
incb
and
fisttpll
inc
adc
fdivrl
cs
xor
and
loop
sub
fldl
lahf
fimull
push
jbe
loopne,pn
or
ja
loope
lods
pusha
add
push
and
pop
add
sarb
pushf
fldl
fistps
aad
imul
adc
add
cmp
xchg
cwtl
clc
push
cmpb
mov
push
adc
xchg
mov
xchg
dec
pop
pop
jmp
sbb
add
or
xlat
add
daa
mov
pusha
or
mov
andb
data16
push
fistpl
add
or
xchg
push
xchg
imul
or
dec
ds
add
mov
inc
or
jnp
fcoms
inc
jo
push
jge
popa
frstors
push
sbb
nop
lods
adc
mov
dec
aaa
adc
xchg
repnz
filds
outsb
xchg
add
adc
add
pop
fs
or
out
sbb
pop
clc
fwait
ss
inc
aad
sbb
xchg
push
push
loope
mov
sbbb
fstpl
and
mov
or
cli
push
fisttps
xchg
sbb
aad
push
and
push
test
cld
cmpsb
xchg
popa
pop
add
xchg
scas
and
pushaw
pusha
imul
mov
push
ret
inc
mov
shrl
adc
cmp
or
xlat
fnsave
clc
lds
push
inc
add
scas
add
or
push
fcoml
jl
sub
insl
pop
jb
pop
into
lods
pop
sbb
adc
daa
dec
into
pushf
test
inc
add
mov
cmpsb
ljmp
dec
fcomps
fists
or
push
jp
inc
fiadds
xlat
scas
int
dec
jmp
cs
add
dec
outsb
insl
mov
jp
push
xchg
pop
es
outsw
dec
data16
fwait
outsl
xchg
adc
fs
bound
bound
xchg
ds
xor
adc
inc
sbb
xor
fidivs
and
cmp
xor
and
inc
add
popa
cmp
and
push
sbb
fistpl
je
fstl
fistps
jmp
add
push
adc
ljmp
inc
push
and
pop
aam
adc
das
adc
mov
jo
int
and
inc
jge
insl
pop
ss
or
jb
and
scas
es
adc
mov
push
xchg
adc
pop
xchg
ret
mov
insb
inc
mov
add
mov
popf
adcb
or
aaa
nop
adc
pop
subb
mov
das
add
add
fcmovnu
data16
or
adc
adc
push
shrb
hlt
sbb
in
mov
adc
and
inc
xlat
adc
mov
adc
fidivrl
insl
push
cmp
pop
clc
pop
icebp
push
addb
mov
xor
insl
adc
cmpb
inc
fisubl
mov
jbe
push
ss
adcb
mov
and
pop
aad
xchg
mov
outsl
cmp
and
xchg
mov
aad
jbe
cmc
cmpsb
movsl
or
filds
insl
xchg
push
fs
adc
bound
jle
inc
add
clc
and
jp
add
fwait
std
fldl
pop
xchg
add
adc
xor
jbe
inc
sbbb
push
js
inc
or
jle,pn
push
or
adc
subb
mov
stos
or
hlt
rcrb
or
pop
stos
pop
scas
pop
jb
and
adc
and
adc
movb
lock
xorb
adc
mov
inc
lret
push
xchg
fisubs
cmp
mov
push
mov
jnp
or
add
lcall
and
xchg
mov
mov
jo
add
mov
negb
pop
movsb
push
lods
aad
push
mov
aaa
inc
and
and
pusha
or
decl
sbb
and
insl
mov
pop
cli
mov
outsl
or
lock
test
lcall
mov
arpl
add
inc
test
sbb
mov
xchg
stos
mov
fldt
jl
push
pop
pop
mov
add
aas
shr
mov
stos
pop
mov
or
jno
adc
rorl
xlat
jle
inc
sbb
and
adc
pop
rcrb
outsb
aad
dec
pop
subb
inc
push
or
lock
pusha
adc
jbe
cmpsl
or
sbb
data16
fbstp
cmp
pop
test
push
adc
pop
mov
add
sbb
fisubrs
xor
add
data16
insl
adc
mov
xchg
loopne
add
add
outsl
loopne
or
pop
out
mov
push
dec
add
push
stos
add
fistpl
dec
lock
xchg
pop
outsb
pop
ljmp
add
out
les
sbb
pop
mov
lret
stos
or
jle
xchg
jp
add
rolb
adc
mov
mov
pop
mov
dec
inc
cmpsb
nop
and
inc
insb
call
mov
mov
lret
jo
xchg
jp
subb
ds
mov
inc
mov
pop
mov
or
jo,pn
and
in
das
adc
push
or
shlb
subl
inc
mov
subl
xor
xor
lcall
dec
clc
xlat
mulb
gs
xchg
mov
jge
add
inc
or
outsb
lock
sbb
pushf
pusha
subb
push
and
insl
add
fs
adcb
push
pop
xor
mov
pop
adc
push
dec
int3
xlat
lods
push
dec
jle
nop
nop
sub
and
rorl
cmp
and
outsl
bnd
adc
pop
movsl
mov
orb
add
pop
shlb
outsl
lcall
mov
and
mov
lock
shrb
xchg
push
pop
add
rclb
ljmp
icebp
mov
jg
push
fcmovnu
mov
fisttpl
mov
stos
pop
inc
hlt
pop
nop
inc
bound
xchg
or
pop
mov
or
or
adc
lea
mov
jge
dec
and
cmp
lods
fistps
insl
sahf
sub
insl
add
and
adc
add
clc
mov
imul
jle
ret
shll
and
sub
push
dec
and
inc
or
push
rcrb
rorl
xor
mov
incl
mov
adc
mov
xorb
jg
jo
mov
sbb
mov
push
add
or
aad
push
lcall
jg
adc
or
push
and
rclb
rorb
dec
mov
jae
add
or
in
mov
mov
mov
inc
push
dec
les
jnp
or
adc
mov
push
cld
aam
adc
lock
pop
fucomip
adc
mov
xchg
test
incl
notb
and
fimuls
rolb
lock
inc
imul
dec
clc
loopne
add
nop
xor
add
cltd
test
jp
pop
fstl
cmp
jg
hlt
mov
mov
fcompl
xor
jb
ficomps
mov
daa
dec
ss
mov
nop
pop
push
pop
pop
jbe
add
cmp
push
dec
push
loope
and
sub
nop
aam
cmpsb
test
dec
clc
lea
sbb
stos
cmpsb
push
inc
cwtl
adc
jle
pushl
adc
push
pop
pop
or
insl
mov
les
or
xchg
sarb
stc
push
add
sbb
add
in
test
and
shrb
stos
orb
ja
or
aad
push
out
xor
pop
or
lahf
clc
push
pop
lret
dec
cmpsl
jge
inc
add
dec
push
nop
or
cmpsb
in
icebp
dec
add
lret
xlat
outsl
faddl
dec
nop
adc
mov
mov
inc
add
aam
insl
add
fbstp
pop
add
hlt
or
and
ret
mov
mov
mov
iret
dec
loopne
je
push
mov
gs
pop
mov
push
or
stos
pop
sbb
add
nop
movsb
jbe
add
mov
add
test
dec
cld
add
and
pusha
cmpsb
mov
inc
adc
inc
xor
imul
inc
mov
or
mov
cld
gs
nop
mov
add
les
shrb
repz
mov
push
lods
repz
mov
xor
mov
cmp
outsb
call
adc
shl
lods
sub
jle
add
xchg
add
aaa
mov
pop
push
movsl
andb
pop
mov
inc
mov
addr16
mov
out
ljmp
data16
mov
mov
or
add
xor
mov
add
cmp
shll
int3
test
pop
movb
dec
sub
out
or
pop
xor
push
subl
push
movsb
sub
fiaddl
addb
and
pop
xchg
adc
or
jbe
lret
sub
add
sbb
xor
add
inc
xlat
xchg
loopne
mov
xchg
add
xchg
and
push
cwtl
subb
aas
xchg
add
adc
fisttpll
add
cli
hlt
pop
rcrl
les
inc
add
movsb
aad
push
fbstp
adc
bound
test
add
jns
pop
aad
pop
sbb
adcl
addl
orl
fwait
into
nop
int3
or
adc
call
cmpb
gs
test
inc
movsl
mov
daa
scas
jg
loop
loopne
aad
test
sbb
xchg
outsb
aas
dec
fisttpll
cltd
add
push
add
mov
ja
lcall
add
cmp
outsl
aaa
push
or
test
pop
push
lds
or
mov
pushf
push
stos
popa
inc
roll
ret
jo
hlt
add
rcrb
sub
add
out
mov
ret
mov
or
mov
adc
dec
jecxz
jecxz
jl
cs
inc
add
out
xchg
xor
add
in
int
jp
mov
push
xchg
insl
xchg
ss
jge
xor
ja
xchg
inc
out
fwait
inc
rcr
jecxz
rorb
rolb
pushl
cld
add
inc
leave
or
ret
or
dec
imul
fisubl
andb
clc
sbb
iret
test
xor
mov
addl
in
ljmp
dec
test
shll
scas
fsubrs
sbb
in
jle
aam
jg
add
add
rorl
enter
fcompl
clc
bound
incl
or
jp
shlb
jmp
orb
sbb
orb
mov
scas
mov
mov
mov
aad
add
push
sbbb
dec
mov
test
mov
test
ds
mov
pop
adc
push
pop
inc
xchg
pusha
pop
inc
bound
inc
fdivp
out
xchg
adc
inc
mov
ljmp
inc
or
dec
and
or
or
and
add
ret
sahf
inc
and
sub
aaa
ret
xchg
sub
add
ja
fsubs
sbb
cmp
inc
adc
sbb
sub
pop
fldl
pusha
sti
and
add
or
jb
mov
lret
pop
push
filds
cmp
or
mov
adc
sti
in
sbb
mov
push
dec
sar
lds
or
adc
jae
aam
add
loop
jne
loop
push
lret
adc
fisubs
add
and
aaa
test
daa
pop
outsl
jbe
pop
push
push
pop
es
pop
or
or
sbb
inc
lcall
sub
add
pop
scas
stos
shlb
pop
mov
fdiv
and
xor
and
imul
mov
mov
cmp
adc
popa
adc
movb
inc
pushl
and
shll
and
scas
or
test
add
jae
rclb
fisttps
and
push
pusha
bound
adc
addb
inc
jbe
xchg
jle
xor
es
mov
das
rolb
mov
cwtl
sub
and
pop
hlt
push
roll
or
pop
add
filds
orl
rorl
add
sbb
push
shlb
pop
add
mov
rorb
pop
loope
push
pop
mov
pop
faddl
cwtl
mov
lods
inc
arpl
jp
inc
xchg
scas
xchg
rorl
mov
mov
push
inc
and
add
and
ja
pusha
add
decl
in
arpl
push
xchg
loopne
pop
xchg
fdivl
sub
push
mov
lahf
outsb
sbb
jne
xor
fisttpl
test
fsubs
sub
loopne
add
cs
loopne
scas
mov
test
inc
cwtl
loopne
fbld
cmp
sbb
pop
bound
adc
xlat
mov
mov
push
je
push
inc
dec
cmc
lahf
loopne
popa
inc
xlat
mov
dec
dec
inc
int3
xchg
adc
inc
je
call
sbb
pop
or
pop
aam
popf
loopne
stos
add
mov
ret
or
roll
lea
add
push
add
enter
loopne
scas
push
cltd
mov
clc
push
pop
pusha
enter
mov
mov
lods
stos
mov
mov
outsb
dec
pop
adc
test
insb
lds
inc
mov
rcrb
loop
popa
mov
stos
inc
lock
mov
insb
fwait
imul
pop
sub
sub
test
mov
mov
sbbl
fsubs
fucomip
fbld
arpl
sarb
mov
inc
push
cmp
push
repnz
sahf
enter
adc
call
jo
and
sahf
pop
xchg
mov
push
outsl
sbb
inc
xchg
cs
les
repnz
pusha
loop
out
xchg
std
int3
lahf
mov
push
rcrl
push
and
rcll
lahf
gs
js
insb
inc
mov
lock
or
sub
std
pushl
lock
pop
xor
pop
into
icebp
xchg
call
or
pop
push
mov
mov
pop
lea
add
pop
clc
pop
sahf
test
and
call
push
pop
and
inc
jg
ds
mov
or
mov
dec
sbb
popf
inc
jo
pop
repz
mov
in
inc
jle
decl
jecxz
push
rorb
pop
mov
add
idiv
dec
ja
mov
mov
sbb
sbb
push
das
lock
add
jmp
pop
loopne
inc
test
mov
inc
add
cmc
ret
inc
cld
pop
lods
pusha
adc
xor
syscall
and
outsb
call
fcoms
imul
lret
cmp
inc
sbb
mov
decl
mov
add
loope
call
outsb
adcb
xor
push
dec
nop
pop
or
test
js
stos
enter
and
aaa
push
clc
ss
mov
pop
shrb
xchg
loopne
adc
dec
jmp
and
adc
sbb
mov
sub
ret
pushf
enter
inc
add
fidivrl
lock
fcmovu
xor
add
push
sbb
dec
movsb
clc
arpl
inc
sub
inc
pusha
or
cmpsb
mov
add
sbb
xor
push
xchg
lods
cmp
inc
ljmp
inc
loop
cli
shrl
std
outsl
ljmp
add
shlb
xor
dec
es
dec
xchg
or
push
mov
ffree
ret
add
add
xchg
adc
inc
mov
push
hlt
mov
rcrb
mov
add
mov
out
push
xchg
aas
mov
mov
dec
add
sbb
push
daa
pop
rcrb
dec
fbstp
xor
pop
cmp
ret
shlb
push
lcall
jbe
inc
scas
andb
cmpps
pop
mov
dec
loopne
adc
push
pop
mov
in
cmp
rcl
adc
or
scas
jbe
ficoms
add
std
repnz
std
adc
fidivl
pop
push
test
lcall
and
mov
mov
fdivrs
stos
out
adc
nop
mov
fucom
pop
mov
decl
and
cmpsl
inc
pushf
xchg
jmp
pushl
or
cmp
sarb
adc
fisttpll
xor
push
jo
pop
jo
xchg
loopne
sbb
psllw
nop
inc
and
lods
push
pusha
in
pop
lock
push
xor
dec
and
dec
mov
dec
xor
insb
test
addl
adc
inc
movsb
loope
push
call
mov
shrb
push
xchg
roll
mov
inc
mov
aad
sub
mov
and
int
dec
inc
js
cmp
cld
inc
or
push
and
js
pop
mov
push
shlb
xor
mov
ret
add
push
outsl
fstpt
ds
add
or
push
scas
nop
push
fs
inc
xor
xchg
repnz
mov
enter
outsl
fisubl
nop
sub
ds
or
stos
mov
fstl
mov
loop
enter
or
bound
popa
gs
adc
sbbl
pop
lcall
xor
popa
shrl
incl
shl
add
and
add
adc
das
popa
cld
loop
mov
pop
cli
icebp
xor
xchg
cli
jg
push
xor
fildll
dec
lods
mov
int
or
and
push
xchg
pop
imul
jmp
add
sub
cmove
add
mov
sub
stos
and
inc
add
aad
sysenter
enter
sbb
int
roll
scas
push
aas
ret
push
leave
push
push
mov
xchg
movsb
inc
out
data16
loopne
mov
pop
adc
jmp
lods
xchg
sub
sahf
and
mov
adcb
or
push
or
jecxz
popa
inc
cmp
mov
sub
les
and
data16
jno
jo
dec
mov
dec
jbe
sub
cmp
and
lcall
pop
add
inc
sbb
add
fmull
and
pusha
lock
push
ja
add
sub
enter
mov
shrb
insb
mov
push
push
mov
sub
jo
nop
repnz
add
mov
popa
cmp
fisttps
fimull
add
fnsave
fcmovnb
orb
push
arpl
push
add
mov
movsb
pushf
xchg
mov
sarl
mov
ss
mov
add
sbb
adc
mov
clc
xor
or
ret
mov
and
mov
fldl
fdivl
push
nop
cwtl
pop
add
insl
popf
push
sahf
ficompl
jg
aad
dec
lods
xchg
out
and
add
dec
add
add
push
jns
ljmp
orl
mov
shlb
mov
rcrb
mov
dec
test
shll
and
loop
xchg
stos
decb
mov
mov
or
incl
push
enter
mov
icebp
push
addl
dec
ds
mov
add
pushf
lret
xorl
pop
sbbl
mov
add
test
or
inc
mov
cmp
jle
cmpb
inc
cmp
xchg
add
pop
mov
xchg
and
push
cmpsb
push
mov
scas
inc
or
mov
and
lahf
mov
sbb
test
mov
sub
cmp
insb
mov
pusha
jmp
ds
les
sub
and
xor
mov
scas
xorb
nop
fildl
jmp
mov
add
pop
loope
dec
dec
xor
add
mov
and
push
ret
sub
add
sbb
scas
push
add
push
xor
loopne
push
add
push
cmp
fisttpll
push
push
push
cmp
into
fmulp
shll
add
cmp
mov
push
add
xor
mov
or
xor
adc
cmpsb
xor
mov
mov
xor
shl
insb
xchg
repnz
or
xor
adc
dec
ficompl
outsb
xor
dec
test
cwtl
sbb
loopne
loopne
xchg
repnz
fstl
inc
mov
adc
pusha
popf
and
das
movsb
daa
mov
rclb
aaa
cld
das
push
pop
aad
jb
and
jnp
je
in
mov
adc
mov
add
mov
push
popa
pop
inc
addr16
add
arpl
cmpl
es
pop
push
sub
xchg
or
adc
mov
or
addb
hlt
cmp
lods
aas
fninit
push
adc
in
stos
push
mov
and
adc
ds
orb
insl
test
cli
mov
orb
sbb
mov
push
pop
push
push
mov
orl
out
repz
adc
pop
aad
xchg
dec
add
inc
enter
and
orb
xchg
push
inc
inc
mov
inc
jbe
mov
call
test
ret
adcl
push
add
xor
fildll
cld
in
and
cmpl
into
and
lret
inc
xchg
scas
test
pop
cmc
fildll
sub
rclb
pushf
and
ljmp
ja
mov
movsl
dec
mov
dec
lret
fists
cmp
sbb
jp
sbb
inc
push
ss
or
test
inc
dec
int3
orb
push
sbb
test
lods
out
add
xor
or
xor
cld
sub
dec
mov
ret
adc
pop
lret
push
add
inc
mov
fwait
sar
sub
cmp
rcrb
mov
or
or
mov
mov
xor
push
add
pop
ret
mov
out
inc
push
cmpsl
insl
subl
rcr
push
outsb
inc
push
xchg
ds
add
notb
fistpl
adc
adc
or
cli
fwait
add
push
push
xor
mov
push
pusha
shr
arpl
rcrb
inc
dec
sub
pop
nop
cld
call
mov
sbb
add
clc
loope
clc
icebp
and
mov
cmp
pop
pop
ljmp
add
push
scas
inc
lret
push
test
push
cmp
and
sub
and
add
or
add
mov
sub
fdivl
hlt
subl
or
mov
jecxz
movsb
adc
inc
jns
pusha
inc
movsb
pop
add
sbb
jae
xchg
or
aas
rorb
sub
cmp
inc
cs
add
push
pusha
xor
add
fadds
or
jb
dec
insb
adc
lret
adc
test
aad
loopne
enter
add
sbb
and
mov
jp
or
push
lcall
sbb
push
inc
lea
out
test
outsl
mov
loopne
xchg
jnp
or
loopne
add
cld
cmp
push
lcall
mov
mov
push
sub
pop
bound
mov
mov
pop
add
add
subl
lret
add
incl
js
mov
add
lock
and
add
lcall
xor
mov
addr16
mov
pop
into
jge
mov
and
insl
movsl
inc
pop
push
rclb
icebp
xchg
pusha
subb
popa
add
push
mov
mov
std
add
and
add
popf
fnstsw
inc
push
mov
pop
test
add
ljmp
sub
mov
pop
xor
das
add
pusha
test
test
xchg
pushf
xchg
mov
ss
xchg
inc
ret
add
loope
add
test
dec
dec
and
mov
and
sahf
add
add
sarb
mov
into
push
pusha
mov
sbb
adcl
mov
sbb
rcrb
fcomi
in
dec
xchg
jp
shll
mov
xchg
xchg
push
dec
stos
inc
mov
les
mov
pushf
cwtl
cs
cmp
cwtl
mov
dec
mov
mov
mov
add
mov
leave
shr
clc
outsl
sbb
mov
in
rcrb
outsl
mov
or
lret
and
mov
pop
push
iret
inc
mov
pop
mov
xchg
lea
inc
test
loope
push
orl
add
aad
inc
xchg
aam
and
out
aad
mov
ret
jp
mov
aad
jle
inc
mov
sub
mov
call
pop
movb
rolb
pop
rcrb
in
loopne
loope
add
add
add
add
out
adc
inc
or
out
xor
pop
lods
add
mov
data16
cmp
mov
rolb
mov
stos
lret
add
xor
inc
push
cmp
or
jnp
and
sub
lods
dec
xchg
incl
lods
xchg
sbb
loopne
adc
adc
jbe
and
bts
mov
mov
ret
das
cli
lcall
insb
xor
add
add
popa
pop
mov
sarl
push
add
cmpsb
mov
rorb
push
test
pushf
addb
cwtl
dec
inc
push
test
incl
lret
adcb
inc
mov
orb
inc
pusha
movb
fcoml
test
add
std
outsl
and
fldl
mov
xor
ret
xchg
or
and
rcll
movsl
divb
loope
addl
ja
aaa
daa
pushf
sbb
and
push
xlat
mov
push
and
adc
or
and
shlb
adcb
and
filds
xor
nop
shl
js
outsb
push
xor
shlb
push
outsl
jg
nop
or
mov
icebp
pop
dec
xor
add
mov
xchg
mov
add
push
add
and
mov
push
pop
rorb
pop
inc
add
test
lret
and
mov
lret
pop
hlt
jbe
mov
mov
and
rcrl
jne
movsb
or
ja
add
mov
movsl
decl
popa
push
push
lock
or
push
or
push
mov
pop
outsb
out
cmp
and
adc
dec
xor
lods
adc
lods
push
add
test
fcmovnb
fucomi
inc
or
adc
adc
mov
mov
insw
push
mov
cli
ljmp
fsubrl
fcoml
rcrb
out
jo
fadd
pop
loope
insb
xchg
add
xchg
ja
sbb
cs
pop
adc
ljmp
cltd
sub
subb
push
stos
and
mov
push
cmp
and
gs
adc
cmp
dec
mov
sbb
dec
mov
xor
xor
mov
add
and
addb
insb
add
ret
repnz
or
popa
push
push
mov
mov
push
jg
xchg
cmp
push
jo
movsb
lods
lcall
jecxz
nop
add
xchg
into
adc
mov
inc
ret
and
xor
jb
das
insb
cmp
sbb
sbb
add
aaa
xchg
movsl
add
ds
shll
adc
jo
pusha
inc
push
xchg
jle
push
and
jno
push
adc
dec
cmp
cli
jo
shrb
movsb
add
push
push
adc
xchg
call
ds
dec
and
cld
jle
add
js
and
cs
adc
add
outsl
rorb
stos
jbe
xlat
mov
mov
imul
xor
add
push
sub
or
outsl
jle
sub
sbb
or
adc
test
pop
nop
sub
cmp
add
or
xchg
sbbb
cmp
bound
sbbl
adc
fistl
mov
scas
test
pop
rcr
push
add
push
mov
call
arpl
mov
and
mov
lock
jg
test
lock
sarl
sbb
jno
or
int3
push
xchg
xchg
aam
in
ds
in
pop
hlt
jmp
push
xchg
rolb
add
add
sbb
hlt
out
push
add
sub
cwtl
push
cmp
roll
sbb
inc
inc
daa
add
mov
shrb
dec
test
cli
inc
clc
fldenv
das
pop
inc
lods
idivb
insb
ss
pop
cmp
push
lcall
mov
inc
mov
and
aam
jg
xchg
movb
fucomi
fsubp
jne
jb
jne
add
ja
add
ljmp
pusha
adc
xor
aas
test
xor
idivb
mov
cmpsb
out
xor
out
push
and
and
lds
bound
shlb
bound
sub
push
shll
inc
mov
sub
test
jg
sbb
addl
jg
mov
adc
adc
push
jle
xchg
hlt
and
add
xlat
out
or
inc
adc
and
fstl
xchg
push
rcr
aam
stos
lret
add
push
and
cmpsb
ffreep
mov
scas
adc
mov
add
pop
xor
mov
iret
mov
sbb
push
aas
cmpsb
xchg
pop
scas
lock
or
xchg
cmp
rcrl
sub
pop
or
mov
mov
pop
out
mov
and
cmp
jle
dec
addb
sbbb
mov
add
adc
mov
add
or
dec
inc
ljmp
movsb
xorb
dec
adc
mov
scas
inc
test
lock
ficompl
add
fmull
shrb
fiadds
cmp
fwait
gs
repz
dec
ds
incl
xor
inc
jo
addw
insl
test
mov
push
add
pop
add
adcb
inc
push
ficoml
push
insb
add
test
or
mov
dec
daa
push
and
incl
dec
inc
out
aam
movsbl
push
lahf
add
scas
cli
and
pushf
inc
and
add
inc
pop
adc
ljmp
lahf
push
es
mov
orb
add
nop
push
push
inc
lret
and
and
mov
adc
sarb
xor
fisttpll
inc
mov
sub
rorb
movsl
loopne
stos
mov
xor
mull
sbb
dec
je
pop
xor
mov
mov
pusha
add
test
rolb
sub
or
or
rol
add
add
mov
sub
out
sub
jno
cmp
test
sub
rclb
cmpsl
add
add
mov
sub
fadds
ret
adcb
sti
push
sub
and
test
out
pop
call
ljmp
test
pop
rcl
dec
mov
xchg
test
sub
clc
push
mov
xchg
cli
add
or
ljmp
rorl
mov
jmp
fninit
sbbb
or
or
push
adc
fwait
pop
lods
in
push
repnz
fcmovb
in
mov
inc
fistpll
gs
cwtl
mov
rolb
testb
loopne
rol
pop
add
lods
pop
cmpsb
fiaddl
outsb
add
pop
and
add
add
push
or
sbb
jge
les
sub
or
cmpl
and
nop
add
add
pop
add
dec
adc
and
insl
mov
pop
cmpl
and
enter
sub
ja
mov
mov
out
das
or
add
outsb
xchg
test
stos
sub
push
pusha
jmp
cmp
divb
out
and
enter
jb
sub
int
js
shrl
dec
ficoms
add
dec
sarb
orb
push
push
and
stos
ljmp
rolb
xor
fldl
aaa
push
pop
rcrl
cmp
and
mov
fcmovb
add
addb
add
adc
mov
mov
inc
ss
or
pop
pusha
mov
mov
jo
mov
inc
frstor
jmp
addb
aas
test
cli
push
push
add
sub
outsb
or
cmp
dec
add
add
mov
push
push
shrb
sbb
mov
mov
mov
or
out
add
aad
push
and
aad
andb
xchg
adc
test
lock
xor
subb
dec
add
jg
or
xor
jno
dec
inc
jne
dec
lock
jle
test
push
xchg
hlt
inc
sbb
inc
sarb
inc
push
fadds
shll
sub
mov
dec
push
cmp
add
mov
cwtl
outsl
adc
add
sbb
xorb
mov
stos
sub
push
inc
andb
fadds
or
lock
add
fwait
icebp
rol
push
lods
shrb
inc
and
xchg
push
imul
and
aas
cmpsb
push
add
test
test
mov
push
sbb
loope
ss
mov
cmp
sbb
test
rol
adc
ds
sub
lock
sub
push
pop
sbb
popa
je
add
adc
push
cmc
orb
push
orl
dec
add
addb
mov
mov
or
lock
adc
sbb
popa
sbb
cmp
inc
push
push
out
movl
out
les
out
adc
out
out
add
out
ret
add
sar
or
push
ja
cmc
add
mov
xchg
sbb
and
and
add
ljmp
addr16
loope
mov
push
or
addl
xor
inc
push
dec
enter
fbld
sbb
test
inc
push
arpl
cmpsb
or
sahf
and
add
nop
and
ret
mov
inc
jg
mov
cmp
rcrb
inc
decl
push
xor
xor
and
add
mov
rclb
ja
mov
fisubrl
jo
inc
add
mov
jb
stos
mov
and
ret
insb
insb
mov
inc
mov
loopne
sub
cmc
insb
aad
fildll
adc
xor
inc
or
ret
inc
and
insl
mov
nop
push
rclb
inc
mov
fcomip
pop
push
and
shlb
add
popa
test
mov
pushl
pop
lods
jns
adc
adc
and
mov
mov
andb
and
push
cmpsb
inc
adcb
cli
shlb
or
loopne
push
rorl
sbb
test
push
inc
outsb
add
stos
cs
pop
and
neg
into
rorl
mov
outsb
movl
pusha
add
sbbl
mov
inc
popa
insb
xorb
out
iret
mov
pusha
inc
inc
movsb
jae
or
mov
test
inc
ret
jae
xchg
roll
fcoml
subl
orb
test
stos
add
pusha
insb
andb
pop
inc
sub
test
or
add
arpl
or
add
fs
sub
cmp
je
add
rcr
das
xchg
jb
add
je
adc
adc
mov
lcall
and
addb
and
movl
out
test
jp
push
mov
ss
and
pop
or
inc
out
mov
data16
outsl
divb
dec
and
dec
and
push
push
out
lret
popa
push
pop
loopne
inc
pushl
add
mov
inc
xchg
in
ljmp
mov
scas
enter
arpl
mov
aad
jle
add
or
cld
fisttpll
sbb
shl
adc
test
sub
je
test
inc
and
popf
xor
inc
mov
sub
and
xchg
lods
mov
dec
add
push
pop
adc
add
je
add
push
and
xlat
jo
sbb
or
loopne
loop
rolb
mov
push
or
adc
js
ljmp
cmp
jne
pushaw
je
jno
cmpsb
inc
mov
add
lock
cmp
aaa
adc
pop
xchg
nop
aaa
push
push
cmpb
scas
imul
daa
push
or
scas
sahf
or
scas
and
and
and
push
inc
sbb
shrb
cmp
mov
loope
inc
bound
push
push
add
cli
sbb
mov
push
leave
rcll
add
adc
add
scas
push
mov
add
jecxz
jb
decl
loop
mov
add
sahf
shlb
push
jp
jmp
push
xchg
fisttps
mov
xor
dec
fisubs
in
pushl
dec
stos
cwtl
xor
roll
mov
adc
imul
jl
inc
xor
xor
lock
jnp
pop
push
aaa
shll
add
repnz
mov
inc
aad
fs
add
ret
push
or
ja
fcom
lahf
push
ficoms
test
xchg
and
jecxz
sbb
adc
ret
and
faddl
test
mov
cli
xchg
inc
pop
adc
aas
xchg
je
andl
sbb
aaa
loope
idiv
mov
mov
mull
fs
cmpsb
inc
adc
es
jb
loopne
and
mov
dec
adc
inc
jnp,pn
test
mov
popa
add
add
sar
jg
sub
out
repnz
ret
out
mov
adc
out
lock
or
je
loop
inc
push
jg
add
ljmp
and
mov
mov
jg
orb
les
inc
inc
mov
ret
inc
xchg
sbb
cld
mov
add
rol
sub
push
movsb
add
fs
cld
ljmp
aad
mov
mov
push
cwtl
shlb
or
add
rclb
add
cwtl
dec
imul
mov
insb
aas
jno
add
in
push
call
push
call
sbbb
push
loopne
fildl
nop
mov
and
je
mov
dec
test
mov
ljmp
xor
mov
dec
add
fucomi
push
xor
mov
push
pop
lock
jno
es
sbb
mov
xor
and
xorb
add
add
mov
mov
inc
sub
adcl
rclb
pushf
adc
in
lods
clc
or
adc
shl
nop
and
cmp
add
jno
ret
push
add
in
lods
push
mov
fisubs
test
lods
mov
cs
es
in
lcall
mov
lcall
call
mov
or
xor
jb
xor
daa
bound
shll
sar
sbb
and
loop
das
mov
mov
fmul
add
cwtl
pop
jno
ret
adc
das
add
lock
lods
xchg
adc
sbbb
and
fildl
add
arpl
push
fs
inc
adc
jnp
jmp
add
test
xchg
je
inc
jl
jl
mov
push
add
push
pop
push
fildll
insb
insl
xchg
mov
xchg
aaa
sub
mov
xor
neg
push
sub
mov
add
xor
shlb
das
jb
xor
push
out
popa
imul
pop
popf
mov
ss
xor
cmpsb
jecxz
sub
mov
cld
push
mov
outsb
outsb
xchg
out
std
inc
mov
cli
rclb
mov
scas
in
movsl
xor
push
inc
movsb
jp
lcall
xor
mov
adc
xor
mov
xor
out
js
aam
push
shrb
cli
add
aaa
lea
adc
add
ds
cs
pop
push
aam
jo
lcall
push
pop
and
inc
sbb
stos
and
dec
loop
push
sahf
lock
jg
jns
and
cmpsb
subl
push
and
mov
mov
cs
je
mov
mov
mov
push
push
add
test
xor
into
fidivl
cmp
push
pop
and
xor
dec
mov
insb
aad
loope
jge
shll
adc
adc
cmp
xor
adc
notb
sbb
inc
mov
cmp
jo
adc
rcrb
adc
cmp
cld
xchg
jle
lret
xchg
xor
insl
mov
jle
or
aas
xchg
cmpb
and
or
mov
add
rclb
popf
add
sbb
dec
add
lock
jle
mov
or
js
insb
xchg
nop
mov
jl
add
xchg
hlt
adc
dec
xchg
mov
les
push
dec
pushl
call
add
or
xlat
inc
inc
dec
add
inc
fdivr
mov
or
mov
dec
sub
mov
sbb
adc
sbb
jge
sbb
jo
jno
add
xor
ret
lret
aaa
mov
xorb
add
subb
test
push
out
stc
add
inc
mov
or
out
or
outsb
out
out
mov
push
les
in
mov
jb
cmp
dec
adc
dec
adc
and
or
mov
push
ds
aad
out
xor
arpl
mov
out
test
inc
inc
adc
data16
filds
adc
or
adcb
orb
xor
or
cmpb
test
xchg
sub
orb
jo
add
adc
pop
andb
aad
or
push
aad
pop
inc
xor
fisubl
mov
push
adc
out
jle
adcb
loopne
dec
cmp
test
mov
jp
adc
fadds
mov
pop
popa
and
push
cmp
mov
or
add
push
dec
sbb
enter
data16
mov
add
ss
and
outsb
push
and
bound
pop
call
and
and
fisubl
loop
and
jge
arpl
arpl
test
add
nop
inc
add
add
pop
push
dec
mov
pop
add
sub
shll
test
stos
and
rolb
inc
push
jb
adcl
outsb
add
dec
mov
lods
dec
push
mov
ja
adc
and
cmpsb
rolb
and
mov
lret
inc
mov
fistl
jo
or
bound
sbb
cmpsb
jne
pop
or
test
cwtl
pusha
sbbb
sub
sbb
sbb
mov
jg
pop
dec
pop
push
add
rcrb
mov
mov
test
stos
xchg
or
mov
rclb
ret
orb
pop
out
fs
xchg
mov
int3
xor
sahf
jne
das
adc
out
insb
mov
lcall
test
nop
push
jecxz
or
inc
pop
shlb
dec
add
jecxz
sub
mov
add
flds
add
fidivrl
adc
xchg
push
mov
out
scas
adcb
ds
inc
rorl
sbb
mov
cwtl
sbb
add
rclb
mov
add
dec
js
stos
add
xor
inc
cwtl
test
fs
add
inc
mov
pop
sbb
les
add
ror
push
mov
scas
bound
pusha
psrlq
jg
stos
mov
inc
loopne
xchg
add
loopne
fists
out
inc
or
add
mulb
push
mov
mov
or
call
add
jg
loopne
orb
out
call
loopne
scas
pop
cmp
and
scas
rclb
add
sbb
mov
pop
push
and
mov
xlat
xchg
shr
pop
ret
fucomi
lds
jle
sahf
xor
gs
inc
shlb
lret
arpl
repnz
push
sub
js
xchg
es
or
and
lods
or
inc
xchg
subb
add
pop
mov
jl
pop
xchg
in
ja
scas
nop
outsl
push
sub
inc
in
cmpb
sbb
mov
or
push
or
push
out
je
std
jg
shr
jns
xor
add
out
sub
out
test
and
fsubr
lea
out
mov
es
out
sbb
mov
out
rolb
out
push
movb
mov
div
in
add
ja
into
out
pop
inc
stos
or
out
fdivs
fwait
lret
or
out
addl
hlt
out
mull
repnz
fidivl
out
les
xor
out
mov
test
movups
out
add
cli
out
push
inc
inc
inc
clc
out
xchg
jl
out
out
xchg
lret
or
out
jbe
adc
lcall
mov
dec
lock
mov
call
pop
shrl
xor
mov
out
push
roll
out
cld
incl
lds
addl
add
sahf
out
daa
divb
fistps
lcall
sub
fwait
stc
xchg
sub
pop
cmp
sub
subb
lahf
sub
mov
pop
dec
orb
push
test
ret
xor
or
push
inc
mov
mov
insb
mov
outsb
pusha
mov
pop
icebp
mov
stos
sbb
out
in
dec
add
roll
pushf
mov
call
mov
cmpsb
int
pop
mov
inc
movsb
push
aas
inc
mov
mov
mov
sahf
adc
inc
daa
push
enter
out
outsl
pop
repnz
shlb
pop
repz
push
out
fstp
push
push
ret
aaa
cld
int
lds
dec
cmp
mov
dec
pop
insl
push
adc
dec
and
loopne
push
ret
sub
icebp
aaa
cmp
out
enter
imul
adc
dec
out
cmp
addb
out
xchg
dec
mov
cmpsl
and
add
mov
jp
sbb
outsl
inc
jb
out
xchg
popa
jo
mov
out
mov
out
xadd
mov
adc
add
js
bound
push
adcb
mov
or
xor
fs
adc
int3
push
jnp
mov
add
bound
push
fistl
xchg
mov
adc
sbb
repnz
clc
adc
push
xor
out
fiaddl
push
pop
adc
sub
inc
mov
sbb
xor
adc
ret
push
add
jae
push
inc
jb
adc
out
imul
test
cmc
outsl
fildl
mov
sub
out
push
adc
xor
mov
jl
mov
push
push
out
sub
mov
lods
popa
or
out
pop
xchg
and
out
out
adc
xchg
iret
mov
es
scas
outsb
and
fsubl
and
loopne
xchg
mov
test
mov
nop
add
mov
iret
aad
push
inc
xchg
call
test
sub
fcmovnu
rorb
adc
jp,pn
sub
xchg
ja
gs
cwtl
jno
es
loopne
hlt
adc
loopne
adc
xchg
xorb
enter
dec
gs
adc
adc
adc
rclb
mov
push
and
pop
or
pop
pusha
mov
mov
and
je
jne
sahf
inc
jb
pop
aam
push
add
or
jo
sahf
add
popa
cld
decl
jl
jno
xor
mov
fisttpl
shrb
cs
or
cmpb
movsb
inc
lcall
mov
pop
xchg
cs
or
outsb
add
xchg
and
aas
or
insl
mov
and
jp
int3
pusha
stos
inc
push
jns
imul
jle
sub
add
mov
test
sbb
jle
nop
xchg
ljmp
or
add
loope
pushf
cmp
pop
push
push
ret
dec
push
add
fidivrl
jmp
add
shll
add
mov
ljmp
xchg
mov
push
mov
or
mov
mov
je
rolb
add
xor
sti
add
ss
jmp
test
icebp
aaa
add
jnp
jbe
das
xor
inc
lea
lret
adc
cmp
jg
call
add
adc
scas
sub
fucom
xchg
pusha
add
outsl
mov
push
sahf
sub
xlat
jb
cld
frstor
sub
and
lea
call
or
and
mov
mov
sub
test
adc
cmp
mov
mov
bound
test
jae
fcmovb
frstor
ja
push
mov
inc
or
xor
and
loopne
addl
mov
sub
jae
mov
xor
or
inc
adc
pop
mov
mov
pop
rclb
mov
mov
sbb
loop
push
mov
cmp
mov
add
cld
outsl
rcr
test
test
add
pop
aaa
pop
mov
xchg
sbb
rcrb
icebp
add
stos
push
add
ret
cmc
cs
cmpb
adc
add
jnp
movsl
add
add
and
mov
inc
xor
cs
mov
inc
lret
in
rcll
fucomi
xchg
scas
imulb
mov
and
push
dec
xorb
and
mov
loopne
adc
push
fsubrl
adc
es
ret
fimull
mov
push
movsl
xor
addb
cmp
incl
bound
loope
xchg
popa
andl
lcall
std
int
jmp
ljmp
inc
mov
mov
add
mov
or
mov
mov
and
ret
popf
inc
mov
xchg
aaa
loopne
add
cmc
shr
add
or
and
or
pusha
cs
inc
mov
add
test
jo
push
sub
add
push
aaa
cwtl
mov
or
jg
shll
push
movsb
fiadds
push
test
inc
add
jmp
push
adc
mov
push
inc
rolb
push
mov
shrb
or
mov
adc
les
push
pop
or
rorb
js
clc
mov
or
adc
mov
mov
dec
adc
shrl
push
jp
pop
je
fsubs
lcall
jo
sub
or
decl
push
pop
mov
das
xor
stos
mov
daa
or
push
adc
insb
ljmp
adcb
sub
push
push
add
scas
das
shrb
jl
out
lock
into
lret
insl
mov
jmp
add
fldl
sub
pushf
jg
push
mov
mov
out
add
sbb
add
movb
inc
xlat
lock
inc
jo
and
bound
mov
xchg
or
mov
adc
mov
rorb
and
es
add
or
mov
xor
pop
jo
mov
adc
push
mov
push
xor
xor
mov
movsl
add
inc
sub
sbb
addb
or
fcomip
fs
icebp
fs
sbb
stos
out
pop
inc
das
jmp
add
push
jle
add
test
sbb
rcrb
or
inc
fcomps
add
les
dec
cmp
fwait
or
dec
cli
push
adc
test
insb
push
adc
subl
movsb
iret
out
out
push
mov
or
adc
pop
push
ret
jb
push
push
or
add
adc
push
add
xchg
out
fcoms
loop
or
faddl
jmp
adc
add
sti
decl
mov
pop
and
and
cmp
in
mov
adc
jb
insb
fs
add
out
pop
and
inc
sub
add
lods
mov
push
push
mov
xchg
leave
test
pop
mov
xor
jle
inc
aas
rcr
test
xor
dec
cs
or
cmp
nop
push
xlat
adc
push
fsubrs
int
pop
inc
mov
fwait
in
outsl
or
bound
xchg
loop
xchg
enter
aaa
sbb
in
test
or
and
pop
movsb
mov
sbb
xor
or
push
addl
xchg
or
mov
data16
xor
dec
rclb
xor
xchg
mov
mov
or
adc
xor
clc
xchg
and
inc
and
addb
fcoms
mov
adcb
adc
add
push
in
into
int3
push
cmp
mov
nop
scas
cli
pop
mov
push
and
jb
or
and
sub
push
or
inc
mov
xorb
push
push
xchg
cmpb
sahf
test
inc
sub
enter
xchg
outsl
test
cli
fildl
push
in
das
shrb
fmull
cs
adc
xor
push
in
stos
shll
cmp
fadds
dec
lods
xchg
mov
jo
inc
test
sub
push
inc
jb
filds
orb
jg
movb
or
enter
outsl
lcall
add
dec
xchg
orb
jae
mov
lock
add
rolb
lock
xor
sub
push
inc
push
sbb
add
adc
addb
and
inc
pop
lcall
sbbl
adc
loope
adc
pushf
inc
sbb
pop
daa
mov
scas
mov
add
mov
in
ss
jp
and
sbb
add
andb
adc
adc
pop
orb
mov
adc
xor
add
cld
xchg
test
dec
xchg
push
rorb
arpl
push
orb
pushl
sbb
inc
push
push
inc
push
add
cli
inc
in
mov
cmp
dec
push
xor
pop
std
pushl
add
adc
add
push
mov
adc
hlt
add
xchg
out
bound
lahf
test
pushf
jle
ja
pop
dec
imul
pop
mov
loop
mov
xor
lods
inc
and
jp
push
inc
bound
mov
xchg
es
mov
stos
mov
pop
or
test
dec
xchg
and
dec
cmp
cmp
stos
or
scas
mov
xor
fdivr
aas
test
inc
cmp
mov
add
xor
test
inc
or
pusha
add
mov
outsl
or
push
mov
outsb
cltd
daa
and
hlt
adc
xchg
cs
mov
and
or
adc
pop
mov
filds
outsb
lret
nop
adc
test
sub
xor
pop
dec
mov
test
fcmovnu
pusha
loopne
and
add
and
cld
pusha
or
addl
jnp
ds
mov
xchg
add
in
imulb
push
mov
cmp
js
and
pop
xor
or
sbb
sete
adc
mov
les
xor
add
sbb
inc
sbb
inc
orb
mov
xchg
inc
or
inc
rolb
or
add
add
enter
pusha
insl
pop
pop
sbbb
inc
orl
mov
sub
loope
add
mov
bnd
jns
mov
ljmp
inc
sbb
mov
cmpsb
test
and
or
adc
inc
or
xchg
fwait
sarb
jb
or
xor
frstor
add
xor
imul
lcall
fidivrs
or
dec
and
xchg
add
dec
push
and
push
xchg
pushl
pop
popa
add
add
pusha
lods
les
pusha
pop
pop
loopne
aam
sbb
or
pop
add
and
dec
loopne
popa
and
icebp
jecxz
push
movsb
and
incb
loopne
inc
sub
inc
into
ds
push
stos
shll
xchg
jp
sbb
test
orl
push
add
stos
inc
rolb
or
pusha
dec
add
inc
and
aam
and
pop
adc
mov
imul
add
and
adc
dec
ret
sub
lods
and
xor
nop
pop
pop
ret
int
push
fcomip
and
dec
add
sbb
mov
inc
or
push
lret
or
cmp
pusha
das
into
subb
pop
cli
and
mov
adc
das
pusha
rolb
loopne
shrb
jne
movb
testb
xor
fists
call
or
pop
popa
imul
inc
pop
push
and
adc
cwtl
decb
loopne
or
adc
outsl
imul
mov
cli
cmp
repz
mov
hlt
dec
scas
lods
cmc
sbb
add
jecxz
cmpsb
pushf
out
pusha
add
out
bound
push
decl
and
add
and
cmc
push
rolb
sahf
daa
xor
fildl
adc
push
add
push
mov
jge
adc
and
add
and
stos
or
add
jg
mov
push
sbbb
add
xor
addb
scas
and
mov
inc
or
push
fistpl
mov
adc
sbb
xchg
loopne
cmp
cli
or
ret
mov
out
push
pop
mov
mov
cmpsb
test
fcmovnbe
jno
push
pop
push
mov
pop
xor
jg
lock
add
push
dec
cmp
inc
decl
add
cmp
push
add
inc
fcmovne
pop
push
add
adc
lock
jle
test
fs
in
pop
dec
std
add
mov
ds
and
adc
or
or
push
push
shll
add
push
mov
pop
test
mov
sbb
add
cmc
jns
mov
fcmovb
push
ds
cmp
mov
mov
push
and
ss
dec
sub
out
mov
sar
outsb
adc
dec
nop
ficoms
inc
mov
in
test
add
jmp
insb
jo
inc
inc
push
fcmovnb
or
scas
cld
scas
or
cmpb
aaa
sub
clc
mov
cmp
mov
adc
or
dec
fstp
scas
rolb
test
and
insl
frstor
xchg
imul
enter
jo
push
ds
dec
lock
ds
pop
pop
jl
xchg
inc
insb
adc
dec
jbe
jp
push
cli
or
add
jmp
pop
jmp
push
sbb
jo
roll
imul
loop
addl
add
jno
pop
outsb
jmp
jecxz
bound
jno
shlb
lock
rclb
push
cmp
or
mov
push
je
push
inc
mov
filds
adcb
loopne
into
fbstp
sub
ror
and
fsubl
jbe
adc
movsl
push
cmp
lods
and
sub
adc
xchg
or
jg
pop
lods
sbb
and
stos
mov
pop
jo
outsl
and
ja
mov
ja
push
push
push
lock
shrl
icebp
sbb
push
ret
push
js
das
mov
mov
sbb
rolb
lds
cmpsb
test
jg
or
inc
mov
frstor
and
add
adc
add
and
fs
das
xorb
jnp
scas
ret
imul
and
cmp
and
mov
rorb
test
or
aas
rcr
pop
adc
pop
or
mov
push
pusha
and
roll
fwait
call
scas
loopne
pop
cmp
cli
adc
out
adc
shlb
pop
xchg
orb
rcr
pop
xchg
and
nop
jne
xchg
mov
add
test
push
xchg
outsb
test
stos
jge
sub
movsb
jo
inc
or
mov
mov
mov
test
inc
les
pusha
ss
mov
sbb
add
pop
incl
stos
add
and
inc
xor
pop
clc
or
fiaddl
and
push
cmp
shlb
xchg
cmp
lods
aad
outsl
cmp
loopne
nop
cmp
dec
push
pusha
push
adc
mov
inc
shrb
lock
ds
cmp
sub
cwtl
push
pop
dec
or
xor
in
pop
sarb
sbb
add
mov
loopne
aam
add
pop
sbb
arpl
add
and
decl
push
push
mov
dec
and
pop
icebp
cltd
sti
add
pop
or
mov
or
ret
xor
and
jbe
ljmp
outsb
sbb
pop
nop
decl
addb
pop
inc
lock
pop
shlb
add
icebp
mov
sub
add
add
mov
je
clc
imulb
or
pusha
xor
sbb
scas
cli
jg
xchg
rorl
adc
push
ret
or
pop
jo
pop
adc
loop
pusha
fistpll
xchg
shlb
dec
pop
mov
jp
inc
xor
mov
adc
lods
mov
es
xor
rclb
das
pop
add
dec
sbb
sbb
cmp
push
call
push
js
sub
out
addr16
les
mov
mov
sub
xlat
xchg
lock
xchg
or
mov
add
mov
xchg
and
mov
pop
sbb
and
push
cs
add
and
clc
push
or
mov
push
jle
jecxz
push
add
rcr
rolb
shrl
mov
add
cmp
cmp
cld
cmpsb
fcmovnu
xor
pop
rclb
adc
addb
lret
dec
add
loopne
cmp
fcmovu
jle
imul
add
insl
rcll
sahf
sub
adc
outsb
ret
lcall
cmc
mov
jp
dec
jp
xor
or
mov
push
lcall
ljmp
enter
jg
sbb
mov
lcall
gs
in
mov
movsl
rolb
jmp
add
adc
mov
and
push
xchg
aam
cld
inc
fstl
or
mov
mov
mov
mov
jg
dec
enter
shrl
or
adc
pop
cli
pop
add
jb
inc
add
add
dec
mov
and
or
and
mov
mov
aam
mov
jl
adc
movsb
pop
mulb
inc
dec
mov
pop
xchg
orb
and
cmp
and
imul
and
push
orb
dec
insb
cmp
mov
cmp
push
adc
mov
aam
mov
jl
mov
xchg
push
mov
mov
sbb
xchg
mov
rol
nop
loope
insl
outsl
mov
loopne
or
xchg
jno
rcrl
and
push
imul
icebp
adc
xchg
jo,pt
or
and
add
repnz
push
in
dec
pop
adc
fcoml
insl
sbb
mov
popa
add
icebp
mov
cmp
cwtl
fst
xchg
test
pop
sub
mov
mov
xchg
test
mov
pusha
dec
mov
add
dec
mov
and
push
pop
cld
clc
imul
ja
aad
or
pop
mov
push
pop
sbbb
mov
fwait
mov
inc
addl
add
sbb
add
nop
fisubrl
sbb
and
push
sub
add
mov
and
adc
adc
fldl
push
xchg
mov
hlt
stos
popa
das
xor
inc
add
or
add
adc
enter
testb
xchg
and
sub
test
xor
scas
xchg
orl
mov
xor
pop
cmp
pop
pop
or
dec
mov
push
add
dec
dec
or
mov
dec
dec
mov
and
insb
cmpsl
cmpsb
and
in
dec
sbb
je
add
add
push
add
fdivs
aad
scas
push
cmpsb
adc
push
push
sbbb
sbb
mov
mov
adc
jmp
adc
push
repnz
inc
inc
loope
mov
sub
inc
adc
and
add
push
enter
mov
add
mov
pusha
adc
test
roll
std
mov
adcb
inc
adc
das
mov
pop
and
cmp
jle
adc
outsb
mov
aaa
sub
roll
mov
xchg
adc
test
adc
or
fildll
push
lcall
popf
inc
sbb
fistl
cmp
pop
adc
adc
fiadds
push
inc
xor
sub
fildll
add
pop
add
xorl
or
and
out
add
dec
xor
ficomps
inc
add
outsl
jg
movsb
mov
ret
add
inc
rolb
ret
rolb
inc
dec
add
inc
js
add
and
testb
push
mov
add
jg
loop
add
movsb
add
pop
jp
push
loopne
pop
pop
and
add
inc
int
add
inc
rcrl
cs
clc
add
cwtl
inc
cmpsb
jg
sub
and
inc
jge
out
movb
jge
pushf
add
mov
push
inc
or
mov
adc
pop
sub
push
mov
fs
push
and
and
mov
mov
and
xor
inc
cmp
cs
dec
fisubrl
cmpb
ljmp
dec
je
and
sub
mov
bound
and
cmp
ljmp
xor
rclb
and
jo
inc
mov
fstl
and
ds
clc
push
loopne
dec
push
inc
push
jge
sbb
inc
or
xorb
xor
dec
jg
jnp
loopne
and
inc
add
xchg
and
jnp
scas
movsb
cmc
or
sbb
add
xchg
loopne
subb
xchg
fwait
pop
sbb
dec
jmp
add
mov
add
lock
mov
lds
loope
js
cs
outsl
push
cmp
or
lcall
add
imul
xor
lods
add
ret
ret
cmp
mov
mov
dec
nop
nop
fisubrs
mov
shlb
es
add
mov
pop
pop
push
pop
cwtl
fucomip
mov
cmc
pop
js
mov
xlat
test
repz
adc
inc
or
push
loope
pop
push
shlb
bound
andb
jl
sbb
fisubs
and
and
cli
add
cmp
sbb
cmp
sbb
ret
and
pop
inc
sarb
add
and
stos
push
xchg
push
sub
pop
or
add
cli
sbb
inc
push
addl
adc
push
mov
sbb
add
into
jmp
fs
sub
dec
loopne
mov
shrl
cwtl
mov
mov
mov
lea
sub
jg
add
dec
aad
pop
pop
flds
or
lock
movsl
mov
dec
sbb
pmulhuw
add
dec
imul
and
adc
and
mov
mov
adc
cmp
imul
jg
fisubs
pusha
imul
and
notb
mov
sarb
mov
mov
sahf
into
or
mov
ja
cmpsb
mov
xorb
add
mov
or
arpl
das
cli
stos
jg
pop
mov
pop
pop
test
mov
ss
cmpsb
jg
jmp
fisubs
jbe
sbb
inc
and
jae
sbb
mov
push
adc
call
and
lret
add
addl
orl
and
pop
test
inc
push
shrl
xchg
test
in
aam
enter
loopne
pop
mov
test
add
fcomps
mov
lret
ficomps
and
inc
bound
add
test
cmpsl
push
mov
insl
rorb
mov
or
loopne
push
sub
popa
test
fistpll
jae
adc
add
jae
or
and
int
xlat
sbb
roll
xchg
xor
std
jg
jl
insl
adc
mov
pop
cmp
mov
or
add
dec
js
pop
add
shr
roll
jl
or
push
ljmp
and
and
adc
stos
orb
movsl
jle
sbb
mov
fldl
popa
dec
inc
push
aaa
push
and
sbbb
xor
or
adc
add
leave
or
push
mov
in
push
rorl
scas
and
rolb
sub
sbb
push
and
dec
mov
orb
mov
out
mov
jo
bnd
mov
push
mov
or
inc
mov
mov
and
mov
inc
push
and
inc
sub
mov
inc
dec
mov
xchg
push
loopne
pusha
or
mov
nop
aas
and
pushf
mov
lods
dec
push
scas
push
xor
bound
jo
addr16
jb
js
fildll
fwait
cmp
adc
pop
push
and
test
adc
and
ss
sub
push
jnp
mov
js
sub
aad
cmp
push
mov
sub
sub
mov
mov
shlb
add
lock
fdivrl
add
push
mov
push
and
pop
xor
mov
dec
inc
xlat
dec
add
outsb
popf
jle
cs
mov
pusha
xor
fiaddl
add
cli
sbb
add
add
add
add
repnz
sbb
nop
add
mov
mov
adc
shll
push
adc
les
inc
push
decl
jge
adc
xchg
mov
inc
xchg
stos
push
inc
cwtl
inc
push
repnz
lcall
mov
es
imul
pop
dec
xor
mov
mov
adc
pop
rorb
dec
nop
mov
mov
loopne
rorl
lret
jno
adc
mov
dec
cmc
pop
insl
add
cmp
and
dec
xor
sbb
inc
add
inc
mov
push
xor
push
or
jg
out
sbb
pop
rorl
adcb
mov
xlat
jno
add
mov
inc
shr
add
loopne
add
pop
cpuid
shrl
push
inc
cmp
push
cmpb
mov
rclb
xor
dec
push
push
add
fcomps
or
inc
and
push
xchg
sbb
jae
push
pop
adc
inc
adc
jns
push
xor
xchg
add
mov
add
xchg
es
or
nop
mov
push
pop
mov
insb
lret
pop
cmpsb
js
cmp
icebp
mov
jae
jno
nop
xchg
xor
dec
mov
pop
mov
add
int
and
add
jnp
rorb
jecxz
mov
push
rorb
les
movsb
pop
mov
push
icebp
testb
push
add
insl
scas
and
push
sub
mov
mov
mov
push
jno
push
adc
jae
rorl
xlat
adc
push
orb
cld
jecxz
lods
mov
mov
mov
jo
rclb
out
notl
mov
and
add
fucom
add
mov
jbe
mov
add
push
or
mov
xor
xchg
or
push
add
or
popa
xchg
rolb
mov
jae
mov
idiv
push
dec
inc
adc
dec
adc
cmp
in
xchg
mov
pop
addl
mov
lret
sub
jb
inc
testb
add
data16
ljmp
sbb
lds
loopne
mov
pusha
je
pop
jbe
jmp
rclb
add
mov
push
inc
insb
cmp
sub
add
sub
push
xchg
fimull
test
mov
js
push
clc
sti
adc
inc
fs
xchg
fiadds
xor
push
and
std
in
call
nop
push
outsb
add
push
lock
cs
loopne
ss
xor
push
xor
mov
lods
in
inc
addr16
jne
adc
xor
push
loope
and
or
or
enter
push
rclb
lcall
sar
mov
mov
fnstenv
das
xor
and
out
sbbb
push
addl
and
movsl
ja
adc
jl
mov
cli
xorl
fmul
sbb
jg
in
and
rorb
inc
mov
inc
sub
ljmp
in
fs
lods
add
lahf
jo
jno
or
add
sub
mov
insl
vpminub
inc
lcall
es
cld
stos
mov
dec
and
cwtl
pop
xor
push
or
mov
fs
lcall
fs
pop
push
mov
inc
mov
or
loop
or
movsl
and
push
push
push
add
or
inc
add
mov
and
ficoms
or
int3
xorb
or
inc
mov
add
push
adc
xchg
in
cmc
jg
inc
push
or
mov
lds
scas
cmp
adc
push
adc
pop
sbbb
mov
push
add
push
sbb
mov
add
inc
lea
dec
pusha
add
or
loopne
addb
subl
std
fs
mov
jle
cmp
outsl
xchg
xchg
xchg
shlb
add
push
mov
lods
mov
sbb
mov
or
cmp
push
adcb
xchg
leave
icebp
cmp
es
inc
rorl
js
push
mov
lods
aam
mov
pop
and
mov
jp
jnp
std
test
mov
mov
loop
negb
sub
out
add
add
test
mov
push
nop
adc
pop
inc
pop
push
and
mov
orl
cld
ja
xchg
pushf
add
mov
inc
fsubs
and
or
mov
and
nop
pusha
push
sub
or
mov
ficomps
pop
repnz
xor
xor
insl
cmp
jbe
sti
ja
add
add
jne
pop
leave
adc
and
add
jg
movsbl
xor
test
inc
fstl
fs
inc
add
fdivrl
xchg
pop
test
rolb
fcompl
or
or
lret
shlb
adc
add
test
adc
add
xor
jmp
andb
addl
jb
cmp
xor
adcw
mov
push
push
cwtl
pop
and
ficomps
or
nop
push
dec
sub
les
adc
mov
dec
ja
js
fistps
xchg
push
or
cmp
pop
mov
addb
mov
sub
dec
or
loope
inc
or
dec
add
inc
test
cmp
ret
sbb
inc
daa
adc
add
test
mov
adc
cmc
lock
xor
fidivs
inc
pop
inc
ret
daa
incb
mov
adc
ret
mov
mov
xor
testl
sbb
movsb
ficoms
push
xchg
sarb
adc
push
and
pop
sarb
cli
popf
stos
xchg
inc
addl
adc
cmp
pop
push
es
cltd
sti
inc
adc
mov
mov
xchg
fiaddl
or
out
insb
lods
xchg
adc
cmp
mov
lods
push
cmc
pop
and
jne
push
mov
mov
outsl
xchg
and
jmp
jecxz
or
or
mov
call
mov
fmuls
les
mov
cld
push
pop
outsb
inc
inc
stos
push
inc
pop
push
ds
add
push
push
jb
roll
addb
sub
jge
add
or
lods
sbbb
or
lcall
jae
add
lahf
mov
shlb
xor
shrl
xorl
pop
mov
js
jmp
shrb
insb
add
inc
jbe
pop
dec
mov
cltd
aam
mov
and
jge
adc
mov
gs
or
push
cld
scas
cmpsb
push
push
adc
dec
rol
and
std
mov
and
fldt
mov
test
mov
fldl
je
imul
mov
push
sbbb
mov
loopne
mov
lret
btr
add
andps
outsb
outsl
add
pop
mov
push
and
inc
and
add
push
jo
mov
adc
jmp
mov
adc
push
sbb
sbb
sbb
rcrl
cli
add
bound
fldl
inc
adc
dec
pop
sbb
pop
inc
pop
dec
mov
pusha
push
jo
add
fstl
inc
add
pop
sub
and
and
cwtl
pushl
and
scas
jge
add
test
push
sbbb
push
insl
add
and
pop
jg
sub
aad
aaa
mov
mov
pop
push
ret
ret
xor
push
xchg
mov
xchg
pop
sub
dec
add
mov
je
and
add
push
cmpb
js
cltd
or
js
in
and
aas
test
jp
lock
adc
mov
mov
cmp
mov
add
loope
cmc
mov
add
add
and
outsl
push
repnz
idivb
push
bound
and
adc
popa
add
push
stos
sbb
mov
push
nop
pushf
xchg
xor
add
mov
or
call
aam
and
add
loopne
pop
gs
loopne
js
icebp
cltd
pusha
add
and
and
cmp
ja
andb
test
mov
scas
cmpsb
icebp
das
pusha
inc
movsl
lods
loopne
fists
inc
std
push
add
mov
call
push
sub
mov
mov
cld
fbld
ds
insl
and
outsl
mov
cmp
push
andl
pop
adc
pop
fcompl
xchg
push
jecxz
movsl
or
hlt
loopne
add
pop
add
iret
inc
cmc
rcl
mov
xor
mov
pop
jb
loop
add
jae
add
mov
cmp
and
test
xchg
lcall
movsl
sub
cmc
sbb
and
cwtl
mov
push
mov
sub
sbb
pop
and
inc
adc
mov
ljmp
out
lahf
dec
call
outsb
mov
mov
aam
sarb
lds
dec
arpl
pop
ret
cli
fisttps
loop
lret
adc
in
push
push
mov
adc
pop
pop
movsb
xor
add
push
iret
add
call
add
dec
add
jl
dec
add
sub
jecxz
sbb
int
mov
inc
add
adc
scas
sbbb
les
xchg
push
lcall
sahf
dec
cwtl
push
sti
lds
mov
clc
push
jmp
mov
clc
sub
lret
inc
mov
subb
jle
pop
or
inc
fwait
and
or
add
andb
fcompl
and
inc
add
mov
fcom
int3
pop
and
add
es
adc
or
inc
jb
out
push
adc
gs
add
push
push
mov
addl
adc
ficomps
inc
sbb
sub
jo
mov
mov
mov
jb
adc
add
add
push
xchg
iret
dec
lods
insl
sti
pushl
push
add
gs
jge
ds
add
inc
inc
add
lcall
inc
in
roll
out
lock
out
cmp
cwtl
movl
or
test
dec
ror
sti
mov
or
xor
sub
push
push
push
push
xchg
or
out
call
mov
swapgs
pop
scas
sahf
xorb
popa
dec
add
dec
sbb
dec
scas
clc
ds
adc
lcall
xchg
rorb
ficoml
cmpsb
arpl
push
cmpsl
movsb
scas
pop
mov
sub
lock
int3
jo
push
mov
push
adc
push
roll
lret
jno
in
add
adc
flds
loopne
rolb
add
ret
loopne
xchg
andl
fistl
pusha
adc
pop
adc
push
xor
cmp
xchg
xchg
mov
rcrb
push
test
adc
ljmp
ja
mov
add
ljmp
mov
push
add
add
pop
mov
mov
cmpsb
stos
or
xchg
movb
mov
push
in
add
shl
xchg
mov
mov
pusha
or
ljmp
cmp
and
inc
and
add
xor
adc
adc
dec
or
push
and
adc
fs
push
or
es
add
add
mov
mov
mov
sbb
cmpb
mov
adc
outsl
rcl
sub
ljmp
push
inc
pusha
outsb
dec
push
mov
inc
pop
movsb
scas
nop
sbb
cmp
out
add
or
test
fstl
rcll
sub
push
ss
rclb
adc
insl
cmpsb
fisubrs
fstpl
data16
or
push
xchg
add
adc
mov
add
push
jle
sbb
fiaddl
mov
inc
pop
push
inc
add
and
mov
or
mov
and
and
data16
scas
xor
adc
adc
and
mov
sub
jle
adc
and
pop
adc
or
push
les
cmpsl
mov
adc
push
xor
xchg
or
add
and
nop
loop
mov
pop
cmp
nop
or
cmp
add
aad
sarb
jbe
lock
test
mov
xor
call
ret
xchg
cld
mov
or
pop
pop
pop
aam
adc
xchg
cli
mov
push
neg
push
push
pushf
xor
sub
cs
pop
jo
sahf
sub
addl
test
pop
outsl
xor
and
jbe
shlb
pop
push
sbb
add
gs
jbe
dec
add
popf
roll
mov
push
filds
cwtl
clc
cmp
cli
cwtl
inc
test
sbb
xor
clc
pop
fwait
jb
andb
sub
popa
or
call
fildl
fdivs
pop
aad
add
push
or
in
jp
jle
in
loop
enter
cmpsl
push
pop
and
clc
insl
xor
or
je
popl
out
xor
subb
daa
inc
add
or
dec
jno
movsb
fidivs
mov
and
incl
cmp
pusha
add
pop
fidivl
clc
test
in
rclb
mov
push
or
loopne
sub
jne,pt
or
ljmp
xorb
test
or
push
pop
adc
test
subb
js
xor
andb
loopne
jo
pop
adc
pop
pop
pop
mov
incl
pop
inc
pop
jb
adc
pop
in
dec
bound
dec
mov
das
rolb
and
or
fists
and
fst
and
aad
out
adc
and
lea
lcall
jle
push
mov
loop
or
inc
xor
lock
mov
inc
pop
fs
subb
push
add
mov
add
rcrl
sub
dec
out
dec
push
push
push
push
xchg
pop
fists
push
inc
fstl
fprem
xchg
addb
rcl
cmp
shl
mov
mov
cltd
mov
stos
add
dec
mov
cmp
mov
incl
fldl
lret
mov
cmpsb
add
mov
filds
les
push
push
cmpsb
mov
adc
or
lock
outsb
ljmp
push
xchg
push
pop
mov
inc
sub
xchg
add
outsl
or
xor
ret
bnd
push
xchg
or
cld
xor
data16
mov
pop
inc
cmp
and
jle
lock
mov
call
sub
xchg
mov
outsl
xchg
loopne
fimuls
or
adc
xchg
sarb
pusha
xchg
enter
add
test
cmp
push
scas
add
cmpsl
pop
jl
xchg
fidivs
jno
push
xor
cmp
inc
jg
icebp
ja
jo
insl
popf
and
inc
shrb
sub
decl
and
adc
sbb
mov
fiadds
mov
jb
mov
cld
fists
bound
iret
mov
push
push
mov
xchg
or
incl
push
or
and
or
fwait
mov
mov
mov
pop
pushl
mov
push
adc
push
loop
test
imul
es
pushl
inc
mov
cmpsb
cmp
push
out
xchg
and
and
xor
ljmp
xor
inc
cmpb
cs
fistpl
pop
mov
sbbb
dec
adc
add
les
mov
lret
or
dec
xor
jbe
inc
shll
lods
or
jb
jb
jp
cmp
jmp
data16
sbb
push
mov
pusha
sbb
mov
sbb
rclb
scas
cli
jae
push
lds
sub
mov
pop
pop
test
mov
std
mov
jmp
inc
std
shrb
jno
pop
mov
cmp
movsl
add
and
lods
and
cltd
jge
out
jp
sub
inc
call
inc
lahf
insl
rolb
and
add
cmp
pop
and
idivb
push
sarb
xchg
add
mov
cmpb
movsl
outsl
adc
sbb
aad
pop
and
popa
mov
mov
popf
je
push
sbb
xchg
or
xlat
mov
jl
add
push
bound
test
sub
and
mov
push
rclb
mov
xchg
add
scas
out
mov
orb
es
loop
add
rcrl
adc
je
insl
xchg
loopne
xchg
push
push
dec
sbb
test
add
out
sbb
movsb
fildl
xor
orb
sub
add
xlat
nop
hlt
add
loope
or
outsb
pop
push
popf
out
xchg
inc
std
incl
es
aad
dec
insl
pushf
adc
push
fwait
in
lcall
outsl
aad
jmp
and
push
outsb
fistpl
popa
add
in
or
insl
movsb
inc
sbb
loopne
dec
sbb
cmp
nop
mov
incb
push
sahf
fwait
jo
mov
into
mov
pop
or
jl
adcl
shrb
dec
aam
rolb
mov
out
xchg
add
sbb
rcr
add
and
sbb
mov
popa
cmp
add
xchg
dec
ljmp
and
icebp
fdivrs
jle
mov
mov
sbb
jmp
rclb
int3
add
addl
cmp
push
and
pusha
cmp
and
jnp
jle
insb
add
sub
lock
aaa
add
std
rorb
sbb
add
subb
mov
push
inc
outsb
shlb
add
test
pop
xchg
adc
sarb
lea
jmp
push
push
sbb
nop
xor
mov
xchg
insl
xchg
push
stos
rclb
add
sbb
icebp
inc
or
add
add
inc
sbb
sar
push
ret
push
inc
jg
mov
mov
adc
fcom
add
adc
and
pop
add
and
xchg
mov
and
sub
shll
pop
xor
mov
shlb
and
js
orb
dec
mov
nop
push
mov
and
sub
xchg
aam
outsb
add
sbb
mov
xchg
or
xchg
loopne
in
xchg
xchg
insb
dec
and
les
mov
or
ficompl
pop
rolb
sbb
add
or
push
jns
inc
fsubl
push
mov
push
or
add
outsl
call
rorl
xor
frstor
test
inc
out
mov
push
and
in
or
dec
sahf
sbb
jmp
push
and
xchg
aad
or
pusha
pop
mov
sbbb
or
jl
clc
inc
dec
mov
lret
dec
fwait
push
into
sbb
loopne
loopne
mov
add
dec
and
mov
push
insl
sub
push
dec
push
out
fs
jmp
push
xchg
push
inc
cld
adc
jl
nop
aad
push
lcall
int3
cmp
pop
or
mov
pop
out
lock
jbe
add
add
push
inc
aaa
lods
push
pusha
pop
scas
dec
pop
or
and
clc
sub
pop
add
mov
js
xchg
test
dec
push
ss
scas
loopne
add
mov
shlb
movsb
mov
les
add
inc
mov
pop
add
mov
or
sbb
and
and
lcall
pop
or
adc
sbb
or
mov
loopne
push
fildll
mov
add
mov
pop
xchg
cltd
insb
cld
mov
fs
push
or
loope
add
and
mov
xchg
dec
clc
xchg
dec
test
shlb
test
scas
loope
add
in
mov
push
add
or
rclb
cmpb
mov
adc
cwtl
and
jl
gs
mov
rcrb
mov
or
mov
mov
scas
hlt
push
and
rcl
mov
outsb
int3
dec
aaa
and
xchg
add
sbb
popa
adc
push
leave
and
lahf
add
pusha
xor
mov
add
loopne
sbb
jmp
sub
and
pop
call
xor
xchg
ss
push
add
mov
fmuls
outsb
inc
or
lcall
inc
test
lahf
xchg
filds
fstl
xchg
dec
mov
ds
push
xlat
xchg
or
int
outsb
jb
scas
jge
push
mov
add
xor
mov
dec
mov
and
stos
int3
jb
scas
push
negb
es
pop
inc
bound
push
push
xor
push
push
cwtl
mov
pop
or
mov
adc
rolb
mov
testb
hlt
daa
inc
or
xchg
and
push
pusha
xchg
cli
repnz
cmp
inc
mov
inc
push
pop
aad
scas
push
lods
fsts
and
inc
cmpsl
push
insl
xor
scas
dec
mov
mov
lea
pop
add
aad
dec
cmp
jle
push
push
aad
push
and
pop
xchg
mov
mov
xor
mov
repnz
pusha
test
cmp
add
dec
imul
xchg
push
mov
or
std
push
lcall
movsl
add
sbb
adc
test
cmp
or
and
clc
xor
in
or
jecxz
pop
and
cmc
frstor
push
sti
shrb
push
arpl
pusha
cmc
shrb
xchg
dec
pop
push
outsb
push
push
mov
clc
pop
xchg
and
mov
call
inc
push
cs
loopne
or
outsl
adc
push
orb
inc
add
inc
insb
dec
cmp
addb
bound
add
or
sub
sub
and
dec
aad
pusha
jbe
push
xor
inc
push
pop
sahf
pusha
mov
ror
lock
xor
mov
and
jae
or
lock
push
jb
jae
arpl
sub
xor
add
dec
fcoml
in
pop
push
outsb
sbb
sub
or
in
cli
frstor
jo
fdivs
ja
scas
xchg
loopne
xor
movups
push
jl
fs
mov
inc
es
das
nop
jo
cmpb
dec
pop
jb
add
xor
es
xlat
test
mov
push
pop
add
popf
test
pop
ds
frstor
and
cmp
shlb
jmp
or
rorb
adc
xchg
adc
test
or
push
cs
inc
call
adc
xor
sbb
add
rorb
or
add
push
mov
pop
xchg
push
dec
inc
cs
fisttpl
stos
icebp
sub
in
and
data16
cmpb
mov
cmpsl
mov
and
or
push
fcmovne
fidivl
xchg
cmc
fwait
inc
mov
adc
in
stos
mov
in
das
xchg
or
jno
cmp
add
in
xchg
loope
adc
sub
cmp
jle
dec
inc
xchg
push
and
dec
out
adc
sbb
mov
dec
mov
lock
imul
mov
imul
jo
out
fnstenv
mov
and
pop
xor
inc
cmp
or
std
and
mov
ret
outsl
mov
mov
inc
add
adc
fs
push
xchg
nop
js
addl
sbb
sbb
ret
inc
and
enter
mov
gs
outsb
xor
adc
movsl
subl
jo
push
add
inc
notl
fisubl
aaa
cmpsb
add
cmpl
adc
add
popa
sti
add
push
add
fwait
mov
pusha
data16
inc
adc
mov
scas
lea
aas
xor
lret
mov
cli
mov
loop
push
out
xchg
ljmp
mov
mov
push
aas
test
mov
sbb
lcall
push
push
mov
or
imul
adc
mov
jecxz
and
loopne
jne
mov
enter
or
ds
jg
add
push
cmp
or
or
adcb
mov
out
mov
adc
and
add
xor
add
push
imul
sbb
sahf
pusha
dec
rcl
loope
and
ds
xorb
arpl
insl
arpl
nop
lea
jecxz
dec
call
xchg
sub
ds
inc
mov
push
adc
inc
in
inc
ret
lock
lcall
jns
inc
pusha
mov
and
rorb
add
add
mov
and
or
xor
fsubrs
out
push
mov
dec
jmp
add
cmp
push
cwtl
test
mov
rcl
call
or
and
jb
ljmp
mov
jb
and
fisubrl
inc
mov
popf
aam
lds
pushf
or
push
sbb
mov
xor
jbe,pt
lcall
popa
mov
xor
fidivs
or
inc
mov
mov
mov
xor
mov
jge
pop
xchg
nop
pop
pop
insb
mov
mov
test
popa
mov
push
cmp
mov
cmpsb
or
mov
xorb
push
mov
dec
cmpl
neg
adc
mov
adc
xchg
or
mov
xor
add
scas
push
and
ljmp
lock
xor
mov
inc
mov
fldl
push
lock
sbb
incb
dec
ljmp
xchg
and
dec
ljmp
clc
sbb
shll
push
stos
ret
or
fistpl
clc
ja
xor
and
add
push
mov
mov
fadd
cwtl
test
mov
jno
push
mov
test
xor
mov
and
pop
mov
aad
add
loopne
lahf
rorb
in
test
into
and
add
xchg
add
int3
dec
lret
add
pop
sbb
dec
push
out
push
push
scas
sbb
mov
sub
les
mov
push
or
mov
cmp
jbe
fisubl
dec
or
mov
jg
cli
lcall
sub
inc
xchg
push
xor
mov
outsl
nop
xchg
inc
ds
mov
or
jno
inc
add
and
outsl
lcall
xor
imul
int3
add
dec
add
enter
aas
adc
hlt
add
dec
jp
sahf
pop
and
pusha
or
pop
imul
enter
add
mov
pusha
and
ds
adc
xor
je
xchg
and
ljmp
push
inc
cmp
cwtl
adc
test
adc
mov
inc
mov
add
icebp
es
and
xchg
sbb
adc
cltd
jo
aad
ja
test
test
inc
inc
xchg
test
sbb
or
cwtl
adc
push
or
adc
dec
jg
es
lock
jl
mov
and
pop
stos
push
scas
fildll
dec
mov
mov
add
dec
jp
or
mov
push
pop
in
decl
push
or
sbbb
xor
pop
cmc
add
std
pop
loopne
xchg
push
push
inc
add
add
scas
inc
clc
jge
mov
mov
push
mov
shrb
jo
leave
ss
xchg
add
mov
add
adc
push
negb
pop
mov
sub
adc
loopne
jge
clc
sub
cld
inc
jge
rolb
pop
and
add
jle
rcll
das
add
sub
push
mov
mov
test
sbb
xor
add
dec
loopne
or
push
mov
add
dec
fcoml
push
add
pop
and
push
mov
push
sbb
test
sbb
scas
movsl
jmp
and
test
xchg
jge
fistps
inc
in
inc
dec
inc
push
push
add
and
in
les
mov
imul
and
mov
sbbb
pop
mov
lcall
add
xchg
jle
lret
jno
mov
adc
mov
sub
or
cmp
stos
and
push
fisubrl
push
outsb
bound
adc
add
adcb
outsl
dec
fidivs
mov
add
inc
and
add
int
mov
xorb
mov
addb
cmpsb
imul
stos
mov
mov
mov
mov
lock
addb
enter
mov
shrb
into
ret
scas
shrb
repnz
cmp
enter
rcrb
xlat
push
dec
jg
adc
rolb
or
pop
jge
pop
and
mov
lcall
int
rcll
and
push
rclb
sbb
add
jp
fcmovbe
xor
add
jbe
dec
add
insl
pushw
pop
push
push
add
stos
push
int
mov
cs
mov
mov
xorb
inc
add
push
fisubrs
lcall
jg
adc
ljmp
sbb
repz
cmp
lret
ret
xor
fcmovu
rolb
sub
insl
cs
lea
rcll
cltd
rolb
push
cmpsb
cmp
adc
sbb
pusha
jo
outsb
bound
push
add
dec
ror
mov
push
popl
movsl
loopne
add
xchg
shrb
add
xlat
mov
add
mov
mov
mov
in
push
pop
lock
sub
jge
jg
fists
cmp
push
add
adc
icebp
and
add
or
stos
inc
loope
adc
or
inc
dec
push
add
cmp
jno
sbb
add
add
inc
bound
dec
mov
push
push
jge
add
mov
faddl
mov
pop
dec
cld
stc
inc
push
jl
cs
cltd
push
and
addr16
pusha
lcall
mov
mov
pusha
or
dec
cmpsl
test
xchg
adc
mov
lock
cli
lcall
mov
sti
pop
xor
push
or
sub
fidivrs
pop
push
sub
push
xchg
loopne
mov
test
push
mov
call
loopne
push
mov
mov
stos
lock
enter
scas
mov
mov
sub
adc
dec
xchg
inc
mov
insl
cmpsl
inc
add
pop
push
push
add
inc
in
lods
stos
pop
cmp
pop
ret
in
dec
adc
clc
and
loopne
push
jb
sub
insb
add
mov
imul
push
rorl
in
add
push
mov
and
push
mov
mov
mov
add
jo
push
ss
add
push
clc
cmp
sarl
outsb
sarl
jle
push
jo
subl
sub
stos
insl
ret
or
mov
cmp
sarl
addb
rcll
jg
rcl
xchg
decb
aaa
push
inc
pusha
or
pusha
stc
jno
mov
loopne
ret
xor
cmp
ds
push
loopne
rcl
add
shll
mov
mov
loope
jmp
cs
add
icebp
mov
popf
stos
cmpl
loopne
lret
xchg
pop
pop
das
push
addl
sub
loopne
rorb
sbb
pusha
pusha
adc
fisttpl
jo
popf
add
jb
push
loope
repnz
dec
add
shr
jno
rcrb
sub
cs
movsb
mov
push
mov
andl
in
sbb
add
add
jbe
hlt
dec
push
push
xor
stc
cli
xor
push
xor
imul
dec
inc
cmpsb
loope
cmpsb
inc
pop
pushl
push
jo
xor
imul
mov
lcall
sahf
cld
imul
cmpsb
mov
roll
out
mov
incb
xor
in
mov
lret
into
xor
cmpsl
imul
sub
inc
insb
mov
push
ss
cmp
pop
or
push
lea
push
addb
or
cmp
mov
out
jnp
rcr
shlb
aam
lock
mov
sbb
cmp
cmpsb
lods
and
xor
pop
jo
imul
scas
xor
int
cmpsb
mov
fs
mov
xorl
lcall
inc
imul
out
jecxz
adc
add
sbb
add
ret
movl
add
sbb
xlat
cmpsb
stc
inc
imul
add
sahf
nop
lock
in
loopne
clc
cld
lock
hlt
add
xor
fdivl
push
lcall
xor
and
xor
or
or
add
cmpsl
imul
rcrl
jl
jo
repz
sub
pop
sbb
lcall
lods
mov
fisubrs
mov
addb
xor
mov
xor
jb
or
add
jge
cmpsb
mov
mov
lods
inc
sub
bound
inc
inc
stos
inc
cmp
inc
inc
sub
into
icebp
loop
cmp
xor
or
dec
jae
mov
add
stos
dec
add
int
mov
sbb
cmp
pop
cmp
jecxz
in
pop
enter
push
sbb
lock
sbb
out
stos
in
stos
in
in
and
sbb
sub
out
sbbl
andb
shrl
aad
lock
testl
or
mov
aam
add
out
js
cmpsl
dec
sbb
pop
sbb
out
nop
add
add
and
sbb
jns
inc
sub
sub
stos
ficoms
push
inc
or
inc
sbb
sbb
or
sub
sub
nop
lods
sub
inc
dec
sbb
fimull
add
fistpll
stos
test
sbb
stos
xchg
add
ficomps
loopne
clc
add
add
lock
lcall
int3
sbb
fdivs
aam
sub
xor
shll
and
dec
imul
xor
add
or
push
add
dec
shll
sbb
adc
shll
shrl
js
dec
shll
jo
dec
dec
inc
inc
adc
pop
push
adcb
xor
movsb
add
xor
jne
mov
add
mov
inc
leave
lret
add
push
decb
jns
imul
add
inc
dec
pusha
imul
adc
push
mov
xor
mov
mov
imul
imul
imul
repz
jne
jmp
stos
jo
add
or
mov
rclb
add
push
xor
push
push
insb
add
push
fdivrs
jg
cs
jb
fiadds
or
jns
or
fmuls
std
orb
xchg
jno
jle
or
adc
mov
add
test
jg
mov
aad
adc
adc
mov
add
fbstp
xchg
mov
push
push
cmpsb
add
pop
xchg
inc
orb
cld
adc
mov
xchg
mov
add
push
jbe
ja
movnti
push
dec
push
sub
ret
pusha
and
rorb
sub
ret
pushf
push
addl
xchg
inc
mov
xor
inc
push
adc
jg
outsl
add
adc
inc
and
push
mov
rolb
pop
inc
inc
add
mov
or
inc
dec
jp
fistpll
jne
roll
push
push
fcoml
adc
mov
add
pop
int
jbe
add
adcb
sbbb
jge
pop
inc
cmpsb
adc
xor
xchg
es
test
decl
je
subb
addb
pop
ss
inc
or
or
rcrl
test
or
sbb
inc
inc
sub
inc
dec
sub
dec
incl
addb
dec
push
rorb
inc
and
adc
int3
out
pop
or
cmpl
add
les
inc
inc
fwait
push
fcos
push
inc
add
push
push
push
or
mov
cwtl
mov
add
add
mov
gs
push
mov
jl
mov
mov
jecxz
and
mov
aaa
adc
inc
mov
cmp
add
lcall
adc
push
or
data16
shl
xor
ret
add
inc
push
add
pusha
mov
or
sbb
addb
loopne
fiaddl
mov
or
mov
sbb
movsb
jg
cmp
and
pusha
push
call
imul
jmp
outsl
clc
add
inc
and
repnz
andb
mov
call
fs
fs
ret
push
push
orb
mov
cmpb
and
jmp
sub
xor
push
push
je
stos
dec
or
or
mov
xorb
mov
mov
add
mov
mov
sbb
mov
xor
dec
pusha
jp
push
cli
subb
pop
push
enter
and
mov
sbb
push
in
add
aam
loope
aam
add
jecxz
cmp
fisubl
add
movsb
add
push
and
or
or
es
mov
mov
call
mov
movsb
add
add
push
dec
or
inc
xor
lcall
mov
lods
or
sbb
inc
mov
pusha
es
cmp
js
adcb
pop
mov
adc
inc
loope
xchg
push
mov
inc
pusha
adc
cld
outsl
or
pop
push
loopne
mulb
adc
ljmp
shrb
pop
test
or
or
cmp
jmp
add
xor
add
sbb
or
push
jg
pusha
jg
pop
les
rorl
inc
add
mov
outsb
and
cmovl
es
movsl
sbb
stos
movsb
sbb
fidivrl
mov
mov
sahf
mov
or
cmp
jo
popa
xor
pop
inc
in
lds
leave
push
int
cli
fsubrs
sub
mov
mov
pop
sub
and
cmc
mov
or
sub
pop
and
add
roll
movntps
je
ret
mov
xor
addb
mov
mov
add
adc
push
mov
add
jg
mov
in
jne
and
add
xchg
push
in
enter
mov
or
lods
rcrl
fildl
dec
push
bound
sub
add
movsb
insl
xor
push
aaa
adc
cmp
nopl
sub
and
or
into
mov
jne
jl
std
aaa
and
or
mov
push
mov
fdivl
mov
ja
jo
add
inc
push
add
bound
mov
cwtl
popa
xor
in
fs
sub
loope
shll
repnz
ficoms
or
push
or
jmp
aad
adc
push
jne
test
divl
loopne
incl
mov
adcl
mov
cli
sarb
fistps
or
ja
std
outsl
ljmp
nop
add
and
inc
push
and
clc
adc
and
pop
and
push
jne
pop
imul
push
rorb
adc
and
insb
push
inc
and
in
outsl
jmp
lock
js
cld
and
and
cli
and
and
and
aaa
fildl
dec
add
push
and
cmp
pop
cmp
daa
pop
push
das
pop
adc
lcall
sub
push
es
pop
fcmovnbe
fsubrs
add
mov
pop
mov
add
ljmp
inc
outsl
add
lods
nop
push
add
ds
addr16
add
mov
sub
pop
mov
aas
jp
dec
jmp
fisubl
add
test
mov
and
lcall
xor
xchg
add
add
test
mov
aad
xchg
pop
mov
sbb
and
pushl
pop
and
stos
scas
push
push
add
add
mov
jnp
stos
rorb
push
push
mov
cwtl
jp
push
lcall
dec
and
imul
jge
or
or
pop
fildl
and
cltd
add
lcall
push
xchg
mov
mov
xor
mov
test
push
inc
lcall
pop
cmp
mov
pop
dec
loope
adc
inc
cmpsb
sub
jg
dec
cli
push
dec
rorb
inc
sbb
add
pop
sarb
fcoms
fwait
ljmp
femms
or
ljmp
lcall
add
pop
sub
pop
pop
rclb
movsl
pusha
sbb
prefetchw
je
adc
data16
add
into
adc
cmpsb
rolb
fildll
lahf
push
mov
shl
and
adc
jno
add
fbld
js
or
adc
fs
add
mov
stos
add
xor
adc
pop
cmp
roll
and
mov
addb
jg
jle
inc
adc
add
push
cs
add
movsb
sub
cwtl
fidivl
inc
enter
in
jg
and
dec
mov
aaa
add
notl
inc
add
movsb
xor
ficompl
xor
repnz
sbb
dec
lods
sub
pop
lock
inc
ficoms
mov
and
std
aaa
ret
pop
mov
or
lock
testl
adc
inc
or
mov
adc
xor
mov
add
add
add
sbb
push
ret
addl
call
ficompl
fsubrs
cwtl
nop
std
and
push
flds
dec
xorb
mov
push
or
sbb
sahf
add
ret
outsb
adc
add
push
out
push
rorb
out
push
xchg
mov
popa
xchg
push
bound
ss
and
fiadds
cli
sub
dec
mov
xchg
dec
jbe
push
pop
push
mov
sbb
hlt
add
mov
adc
out
xchg
cs
add
addb
stc
add
push
add
addb
addb
jo
lcall
adc
into
adc
xchg
sarb
sub
sbb
dec
cmp
mov
pop
add
pop
scas
lock
scas
std
adc
pop
mov
push
outsb
inc
popa
sahf
cmpsb
mov
dec
sbb
or
add
cmp
mov
out
into
and
js
push
sbb
lods
fnstcw
pop
sub
movsb
fnstcw
iret
dec
out
andb
aam
cmp
daa
hlt
xchg
add
shrl
or
pusha
sbb
out
dec
ds
rclb
inc
dec
sbbb
jne
into
sbb
push
test
push
out
imul
gs
lcall
aam
addb
xor
adc
add
shlb
xor
fiaddl
ret
cmp
adc
dec
sbb
push
inc
rolb
cwtl
out
shrb
jns
and
jbe
insl
add
push
les
ljmp
frstor
mov
shlb
fcmovb
jno
shlb
nop
es
add
and
or
push
js
pop
xchg
inc
jl
roll
xor
aaa
stos
repz
mov
stos
in
shl
xor
repz
push
sbb
jp
or
push
adc
mov
mov
add
ret
add
or
sbb
jbe
pop
mov
jl
fsts
and
rorb
test
test
and
das
lea
pusha
testb
aad
lods
imull
sub
sbb
sub
pusha
push
pop
ret
mov
test
cs
sbb
and
xor
sarl
out
sbb
xor
adc
je
push
inc
push
loopne
out
inc
mov
in
shll
fwait
mov
loopne
into
cld
ljmp
sub
adc
or
push
or
sti
lcall
xor
sbb
imul
loopne
lock
cmpsb
cmp
adc
mov
pusha
push
push
pusha
add
aam
add
xlat
fistl
xor
cld
sbb
adc
mov
cmp
cmpsl
int
loopne
insb
pop
cmpsb
loopne
stos
inc
out
les
ret
pop
jbe
push
sbb
arpl
cmp
xchg
inc
loopne
mulb
add
pop
sbb
adc
push
cmp
fsin
jne
outsb
inc
add
loope
push
ss
cmp
xor
xchg
xor
pop
inc
dec
rol
mov
loopne
pushf
test
cmp
shrl
pmulhuw
aaa
aas
and
and
cmp
or
out
and
aaa
and
add
sub
push
or
hlt
xor
xchg
andb
cmp
outsl
cli
cmp
push
aas
mov
and
cmp
and
inc
xor
cs
and
sbb
add
aas
cmpsl
add
and
fmuls
mov
sbb
sub
add
add
or
cmp
cmp
xor
jl
fcoms
or
es
cmp
mov
or
je
jle
adc
mov
xor
test
xor
ss
sub
and
and
das
or
cmp
fidivrl
cmp
sbb
xchg
add
adc
ret
in
add
push
adc
test
xor
cmp
add
mov
or
and
rcrb
aaa
bound
mov
and
mov
pop
and
adc
adc
loopne
lcall
pop
pop
sbb
shlb
loop
lds
and
add
xor
add
jmp
sbb
loopne
mov
mov
and
xchg
icebp
aaa
or
out
lods
aaa
cmp
outsb
jb
push
cmp
and
cmp
es
mov
roll
adc
xor
push
testb
sbb
and
xor
push
popf
push
push
cwtl
lock
cmp
xchg
adc
jb
mov
xchg
or
lock
roll
pusha
mov
pop
cmp
aas
or
xor
mov
jbe
or
sbb
outsb
rcrb
mov
pop
inc
inc
or
and
roll
add
cld
sbb
mov
mov
push
rcrb
shll
cmpsb
setno
dec
rcrb
or
lcall
loop
data16
dec
shrb
pusha
cmp
inc
cmp
loop
or
push
or
or
es
outsl
push
adc
clc
push
sub
and
add
loop
xor
xchg
push
cmp
fisubs
add
xchg
pop
mov
pop
fbstp
das
jo
adc
pop
hlt
mov
pop
cmp
jae
add
sbbb
push
or
add
adc
push
fnstenv
mov
or
mov
adc
adcb
decl
jo
pop
mov
fidivl
push
in
nop
adc
aaa
sar
and
or
mov
movsb
cmc
add
or
add
mov
in
aaa
cmc
sub
jb
or
mov
cmpl
lahf
cmp
pop
add
outsb
inc
jbe
es
repnz
cmpsb
ds
and
sbb
adc
pop
and
cld
xchg
and
cmp
mov
adc
push
dec
shlb
inc
sub
push
ljmp
mov
mov
aaa
jo
add
mov
in
lock
or
clc
ss
aaa
xor
hlt
mov
xchg
testb
inc
icebp
adc
push
xor
and
inc
add
neg
in
ret
adc
jecxz
push
xor
xor
add
lret
nop
test
rorl
xchg
inc
cmp
rcrl
xor
dec
push
push
cld
adcb
adc
clc
xor
rorb
icebp
sbb
add
shlb
lock
lcall
pop
rolb
sbb
or
push
sub
cmpb
lods
jo
shlb
or
push
cld
sbb
mov
xrelease
sub
inc
inc
mov
enter
sar
decl
mov
ss
push
nop
or
adc
arpl
mov
pusha
sub
adc
cmp
sbb
pop
nop
pop
mov
and
inc
decl
ljmp
sub
ss
movsb
jne
pop
and
das
icebp
xor
sbb
fwait
dec
std
mov
push
jb
dec
jno
mov
add
add
xchg
xor
pop
int3
mov
sbb
repnz
aad
xor
sbb
and
shl
and
cli
xor
pop
repnz
pusha
sbb
fisubl
lods
enter
decl
outsb
cs
adcb
sbb
out
ficoml
pop
mov
es
xchg
push
adc
dec
mov
lcall
pop
jno
nop
icebp
pslld
test
loopne
clc
mov
cmp
push
push
xor
cmp
fsts
filds
pop
pop
sbb
repnz
into
adc
cmp
and
xor
add
xchg
outsb
mov
movsb
mov
dec
pop
xor
and
pushl
dec
add
xor
call
punpcklbw
and
xor
fdivp
mov
ret
loope
rorb
xor
dec
loope
aam
std
jg
adc
notb
shlb
mov
lock
mov
cmpsb
or
push
cli
test
cmp
ja
les
jmp
pop
das
int3
popa
add
into
cmp
stos
jp,pn
add
or
xor
and
cmp
push
adc
pop
aaa
push
sbb
sbb
js
in
xchg
dec
push
lret
sahf
pop
cmp
mov
pop
sbb
cmpb
cli
adc
stos
adcb
into
cmp
add
pop
jecxz
rorb
inc
ret
pop
pushf
push
add
push
or
pusha
std
or
jmp
add
rolb
add
aaa
xchg
xchg
push
adc
dec
mov
jl
cmp
ljmp
add
pusha
rolb
repnz
xor
ljmp
orb
fstpt
cmp
leave
icebp
or
cs
mov
push
mov
adc
xchg
add
inc
cmpsb
pop
mov
rorb
cmp
add
push
adc
testb
and
xor
jnp
mov
or
enter
pop
ja
add
mov
js
mov
mov
or
inc
adc
cmp
rorb
adc
adc
jbe
jge
cld
hlt
add
daa
stos
and
and
outsb
add
or
rolb
movsl
cli
push
shlb
fcoms
add
add
int
subb
sub
sbb
aaa
xor
rolb
cmp
cmp
rcll
scas
loope
dec
les
outsl
das
mov
cmp
cmpsb
roll
subb
pusha
add
cmpb
cmp
jbe
mov
push
mov
aas
es
inc
dec
mov
inc
lcall
loopne
xor
jb
sbb
bound
std
mov
xor
cmp
jle
push
js
stos
add
add
xchg
loopne
sbb
push
add
cld
pop
inc
aas
dec
mov
adc
shlb
cmp
xchg
push
sbb
sbb
fimuls
in
and
and
mov
xor
subb
mov
and
add
test
idivl
addl
push
dec
cmp
xorl
mov
pop
xor
add
add
scas
sub
movsb
dec
xor
or
or
inc
sbb
sbb
or
and
sub
push
and
inc
pop
fwait
jecxz
adc
hlt
cmp
bnd
cld
push
dec
push
push
out
and
xor
into
lds
sbb
pop
adc
cmp
dec
aaa
cld
int
ret
adc
bound
sub
or
add
roll
out
and
add
lock
mov
in
add
dec
adc
int
add
cmp
mov
push
inc
adc
dec
inc
sbb
sarb
mov
mov
inc
sarl
and
add
and
mov
divb
cmp
adc
mov
lds
and
pop
call
shlb
inc
rclb
mov
test
fwait
sarb
cld
outsl
scas
das
jbe
cmpb
insb
and
inc
xor
bound
ret
rclb
les
sub
pop
add
xchg
ljmp
jl
sarb
inc
and
sub
adc
aam
in
mov
xor
inc
cltd
sbb
xor
addr16
int3
aas
sbb
ret
test
mov
push
or
add
sbb
adc
or
push
xchg
mov
inc
shll
or
inc
mov
fsubl
mov
call
addb
enter
or
ss
mov
popa
pusha
mov
les
jle
jno
pop
pusha
sub
stos
fldl
scas
lea
pusha
clc
lcall
or
or
pop
jbe
pop
jge
mov
add
inc
cltd
add
incl
addb
dec
lret
jnp
push
cmp
rorl
lock
loope
lods
sub
cmp
sub
popa
push
icebp
mov
and
lods
or
repz
cld
add
mov
jle
add
or
or
mov
sbb
push
pop
xor
ret
stos
xchg
push
or
add
pop
add
xor
out
sbb
mov
dec
shlb
ds
mov
or
shrb
or
mov
and
ret
aaa
ret
mov
cld
or
das
cli
incl
add
xorl
add
add
mov
push
xchg
js
call
and
shll
cmp
add
jnp
push
sub
ret
lahf
mov
xor
cmp
and
add
loopne
das
mov
mov
add
add
pop
xor
or
fstpt
add
dec
add
xor
push
or
in
mov
call
or
add
sub
clc
fsubp
cmp
mov
addl
out
cli
mov
push
xor
xor
add
popa
pop
push
pushf
push
and
cmp
jbe
mov
push
testb
orl
adc
push
mov
loopne
ljmp
pop
pop
in
ljmp
idivb
mov
push
push
pop
cld
jg
adc
sub
outsl
mov
rorb
mov
rorl
sub
insb
inc
cmp
or
cmc
rcll
in
in
cmp
adc
das
sub
add
cld
das
icebp
add
add
push
pop
aas
inc
inc
fsubs
ljmp
js
sbb
and
out
fs
dec
pop
xor
push
popa
push
jb
and
scas
sbb
pop
add
loope
and
lret
rcl
es
fstpt
mov
inc
daa
sahf
add
jg
mov
pop
adc
dec
clc
push
pop
push
pop
add
adc
shrb
cmp
data16
xor
adc
sbb
cmpsb
aaa
aam
loopne
mov
push
sar
inc
or
pusha
sub
xor
and
xor
cmpsl
movsb
outsl
sbb
adc
add
inc
push
test
sub
xor
mov
shlb
inc
pop
hlt
or
adc
std
adc
test
cmp
leave
repnz
js
ss
cmp
xor
jbe
dec
push
add
push
inc
and
je
pop
cmpb
and
mov
bound
fsubs
leave
push
in
dec
and
push
test
data16
sub
dec
xchg
add
mov
rolb
and
rcr
xchg
fwait
shlb
shll
or
inc
push
lock
bswap
jb
mov
orb
mov
xor
sub
decl
loope
add
mov
ss
push
mov
adc
lcall
push
or
movsb
lock
std
fistl
add
sbb
bound
push
nop
pop
adc
cmp
xchg
pop
ljmp
mov
xchg
clc
lea
out
add
and
or
add
pop
and
jl
push
jo
enter
test
dec
in
add
inc
psraw
scas
fwait
sub
xchg
das
loop
aam
xor
sbb
hlt
mov
pop
xor
adc
push
add
jo
xor
inc
pop
mov
cmp
adc
sbb
jmp
and
shl
ds
jb
mov
js
adc
out
push
add
test
push
inc
aam
push
and
mov
add
es
fwait
push
imul
push
or
mov
ljmp
xor
add
push
xor
imul
shlb
add
pop
mov
xorb
push
adc
out
push
adcb
xchg
sbb
dec
push
add
push
add
and
sub
cmpsb
pop
icebp
or
mov
clc
sbb
popa
xlat
jns
adcb
cld
cmp
sub
pushf
xchg
add
inc
add
add
adc
adc
and
pop
into
push
lahf
add
and
adc
xchg
xor
adc
cmp
mov
fisubs
cmp
test
or
sub
cmp
filds
mov
sbb
pop
jecxz
sub
inc
js
push
and
nop
sub
add
mov
dec
push
mov
fisttps
pop
cmp
fs
ja
adcb
popa
call
clc
and
sbb
mov
pusha
mov
dec
xchg
pop
shlb
inc
or
jnp
insb
test
inc
xchg
pop
aad
cmpsb
add
push
adc
das
popa
push
clc
add
jg
push
add
and
jb
sub
je
mov
push
push
fisubrs
js
pop
push
sar
bound
icebp
pop
lea
cmp
pusha
shlb
sub
adc
les
and
and
ljmp
xchg
or
mov
loope
and
xor
pminsw
pop
or
das
adc
jg
push
pmulhw
xor
sbb
sbb
mov
xor
dec
xor
push
int
movsl
test
and
aas
inc
cmp
rcrb
clc
or
and
sbb
cmp
pop
leave
pop
jb
mov
or
lds
rolb
xor
jb
sbb
push
hlt
mov
push
bound
sbb
or
inc
ljmp
loopne
nop
nop
lahf
add
jg
and
adc
or
adc
lret
push
push
repnz
insl
xchg
daa
jbe
sbb
add
enter
and
out
push
test
std
jb
icebp
and
shll
and
xor
rcrb
shrl
cmp
pop
cmp
sbb
jg
sbb
sbb
add
adc
add
ret
inc
add
adc
jo
orb
lret
cmpsb
mov
andb
and
push
bound
xor
and
add
nop
aaa
dec
sub
add
outsl
loop
and
add
imul
adc
jo
cwtl
push
shll
pop
mov
inc
mov
add
aaa
sbb
sbb
jmp
mov
mov
test
cmp
or
fists
movsl
or
or
push
fcompl
mov
xchg
sub
or
xchg
push
push
fimull
jg
mov
pop
stos
pop
aam
cmpl
in
decl
push
inc
cmpsb
mov
rorl
fwait
mov
int
mov
mov
fbstp
add
ja
mov
sub
pop
in
fcos
dec
scas
imul
lret
mov
aaa
int
mov
add
lret
push
pop
stos
lret
add
int3
add
mov
out
imul
lods
int3
add
adc
mov
imul
repz
add
push
ret
push
test
cld
dec
clc
rcll
mov
mov
outsl
jbe
mov
arpl
sub
leave
je
jno
add
adc
or
add
adc
stos
lods
cmpsb
adc
mov
xor
imul
sbb
test
sub
cmp
test
add
mov
or
das
mov
out
iret
mov
es
sti
inc
xchg
or
das
add
stos
test
inc
or
xchg
pusha
pushl
jg
lcall
pusha
mov
push
popa
pop
popa
inc
popa
dec
add
popa
stc
fwait
mov
popa
push
popa
sbb
popa
or
popa
cmp
popa
sub
negb
popa
ret
repnz
cli
popa
loop
mov
popa
lcall
outsl
popa
mov
mov
push
outsb
pop
outsb
inc
outsb
outsb
jb
jp
outsl
out
bound
adc
outsb
add
xor
outsb
and
out
outsb
shrb
outsb
ret
repnz
cli
outsb
loop
outsb
xchg
outsb
lcall
outsl
outsb
mov
mov
push
outsl
pop
outsl
inc
outsl
outsl
jb
jp
outsl
out
bound
adc
outsl
add
xor
outsl
and
out
outsl
shrb
outsl
ret
repnz
cli
outsl
loop
outsl
xchg
outsl
lcall
outsl
outsl
mov
mov
push
insb
pop
insb
inc
insb
cld
in
adc
bound
adc
add
int
insb
xor
and
insb
fisubrl
insb
repnz
cli
insb
int
cld
int
insb
insb
xchg
insb
lcall
mov
cld
int
cld
push
insl
pop
insl
inc
insl
insl
jb
jp
bound
adc
insl
add
cld
int
insl
xor
insl
and
shrb
insl
ret
repnz
cli
insl
int
cld
int
insl
insl
xchg
insl
lcall
mov
cld
int
cld
push
push
push
push
jb
jp
bound
adc
push
push
cld
int
push
push
push
push
shrb
push
push
repnz
push
int
push
xchg
push
push
push
mov
mov
cld
int
cld
push
imul
imul
jp
bound
adc
imul
int
imul
cmp
imul
fisubrl
imul
cli
imul
cld
int
imul
lcall
mov
cld
int
cld
push
push
push
bound
adc
push
int
push
and
shrb
push
push
cld
int
push
push
push
push
push
imul
imul
imul
cld
int
imul
imul
imul
int
imul
imul
imul
add
push
push
inc
lcall
gs
fisubl
gs
gs
mov
gs
jb
idiv
aaa
pop
lcall
add
into
shlb
repnz
cli
dec
xor
hlt
or
bound
jle
std
fistpll
lock
or
or
jae
or
out
sub
imul
pushf
dec
ret
lcall
cmpsw
data16
add
and
adc
in
lods
cmp
fs
adc
or
cmp
mov
jmp
andb
lret
or
fistpl
jmp
adc
xorl
jnp
xor
lock
int
cld
jmp
lahf
bound
arpl
adc
arpl
repz
fsubp
outsl
jmp
outsl
mov
pop
add
push
push
push
add
push
push
add
push
adc
mov
adc
xor
push
adc
ljmp
shlb
sub
shll
mov
push
add
jo
mov
pop
bound
decl
bound
ljmp
lods
arpl
pusha
ljmp
sbb
jg
out
sub
insb
jle
js
aaa
jg
dec
xor
cs
rcll
in
call
stos
insb
pop
clc
das
cli
ljmp
insl
cmp
sub
insl
int
test
insl
scas
insl
push
push
push
mov
adc
test
adc
push
adc
ljmp
push
push
push
push
lahf
push
push
push
es
out
xchg
or
imul
push
mov
xchg
cmp
das
lock
fs
adc
mov
adc
inc
sar
mull
gs
movsb
gs
bound
sbb
jmp
popa
pop
dec
xchg
outsb
int3
outsb
adc
xor
outsb
test
mov
outsl
dec
outsl
outsb
outsl
add
outsl
outsl
in
outsl
mov
and
insb
sar
das
mov
jbe
and
insl
leave
adc
insl
lods
insl
push
push
push
ljmp
push
push
push
test
push
imul
imul
fldcw
nop
adcb
cld
ljmp
imul
add
in
mov
push
data16
sbb
sar
jmp
outsl
adc
jmpw
mov
popa
sbb
add
les
pushl
xchg
addr16
addr16
fs
or
js
push
add
add
frstor
cli
fs
incl
mov
mov
gs
jl
mov
cmp
shlb
gs
aad
dec
cld
gs
add
sbb
inc
push
jle
dec
arpl
inc
pop
rcrl
bound
inc
arpl
decl
or
arpl
arpl
sub
arpl
xor
jecxz
xchg
arpl
test
pusha
enter
mov
ljmp
popa
push
add
popa
out
test
int3
add
and
outsb
xchg
add
dec
push
outsl
fbld
cld
dec
outsl
arpl
add
outsl
sub
add
sbb
outsl
push
insb
inc
lock
ljmp
insb
sbb
dec
int
out
insb
ret
mov
or
add
mov
call
in
push
pop
fcomip
push
push
or
imul
cmp
xchg
pop
sar
data16
adc
jle
insb
adc
jno
jbe
outsl
jg
data16
xor
addr16
addr16
popa
iret
clc
xor
insl
cmp
fcmovnu
fsubrp
je
cmp
cmp
xor
add
data16
lds
mov
out
pushfw
bound
addr16
sub
mov
push
or
adc
xchg
addr16
clc
incl
lock
inc
mov
jle
cmp
gs
xor
jg
outsl
dec
jg
sbb
push
cmp
adc
fstp
cmp
lock
and
add
xor
outsb
call
sbb
outsb
mov
outsb
outsl
add
jg
jge
outsl
movsl
outsl
scas
adc
dec
adc
push
cmpsb
subb
fsubl
imul
cmp
mov
jo
mov
addr16
cmp
adc
sbb
les
pusha
fdivrl
aam
fdiv
decl
mov
sbb
inc
push
push
xorb
xchg
pop
insb
ljmp
jecxz
jb
cmp
popa
add
in
shll
movsb
mov
scas
outsb
arpl
insb
xor
pop
enter
insl
aas
insl
cmp
rclb
fsubr
ret
lock
insl
ljmp
xchg
cmpsb
mov
pop
adc
inc
nop
or
pop
pop
push
mov
push
jo
mov
decl
lea
imul
pop
xor
imul
mov
incl
cld
ljmp
add
push
int
jbe
push
imull
shrb
cli
int
pushl
xor
or
data16
jo
lds
addr16
or
fs
fs
mov
gs
xor
cld
divb
bound
bound
xor
cmp
bound
arpl
fs
pop
pusha
jno
jnp
insb
ljmp
or
mov
call
aaa
mov
outsb
imul
incl
sbb
add
outsb
and
shlb
mov
repnz
out
cli
outsl
fidivrs
or
outsl
in
xchg
outsl
or
ja
imul
and
push
push
push
push
imul
sbb
mov
imul
fs
imul
and
rcl
pop
cld
push
dec
add
jo
inc
data16
adc
cmp
pop
cmp
es
push
arpl
mov
outsl
mov
dec
push
cld
das
shrb
ss
fsubrs
push
insl
pop
insl
inc
insl
dec
insl
cmpb
sub
xor
xor
add
push
inc
movsl
pop
adcb
ds
or
fwait
imul
ljmp
push
imul
xor
inc
loopne
call
pop
pushw
data16
push
int
out
scas
data16
ljmp
sub
addr16
sub
fs
fs
push
fcoms
gs
mov
add
inc
inc
sbb
das
and
arpl
mov
and
mov
pusha
cld
pusha
out
pusha
xor
inc
popa
jbe
fildl
push
lock
adc
popa
popa
mov
sti
add
ss
jne
jge
pusha
ja
or
mov
push
push
push
mov
jg
push
jo
sahf
and
push
imul
adc
imul
jbe
jmp
adc
xor
je
cmp
es
data16
push
xor
fiadds
xor
icebp
fs
fs
lock
jg
inc
xor
loopne
inc
pusha
addb
pusha
jae
rcrb
add
pusha
aas
pusha
and
ffreep
pusha
xlat
push
std
pusha
in
pusha
mov
xchg
jge
adc
decl
mull
popa
mov
sub
add
dec
js
call
outsl
mov
xchg
insl
and
xchg
lock
sbb
push
push
push
xchg
adc
mov
fiadds
push
push
cld
lcall
xchg
push
imul
mov
push
mov
xor
fidivs
fcmovnu
jo
adc
pushf
andb
mov
addr16
adc
incb
fsubl
mov
jecxz
in
outsb
sarb
cmpsb
addr16
dec
xchg
std
sub
fs
adc
or
jge
gs
push
cmp
clc
mov
pop
fdivp
aaa
lock
mov
outsb
inc
outsb
aaa
outsb
flds
insb
sub
mov
mov
imul
xor
sahf
lret
imul
xchg
imul
loopne
movsl
imul
push
mov
aaa
add
xorb
push
popa
sbb
popa
inc
or
mov
insb
stc
insb
cmp
cli
icebp
push
cwtl
or
xchg
pusha
mov
push
test
xor
jp
je
in
sub
addr16
in
cmp
mov
movsl
pop
cld
int
inc
scas
addr16
loopne
mov
gs
push
gs
jg
fisubs
and
bound
dec
arpl
jns
mov
mov
add
in
cmp
popa
mov
lods
adc
lcall
outsl
out
xchg
dec
insb
jne
fsubl
roll
add
insb
test
daa
mov
stc
xorb
inc
test
stos
insl
inc
push
pop
cld
lods
or
fdivrs
push
mov
loope
call
lock
pop
push
aam
fsubrl
imul
lret
xor
imul
subl
push
push
lods
imul
faddl
jle
repz
pop
data16
data16
cmc
data16
jmp
cld
int
mov
jb
adc
cmp
fisubl
addr16
jg
or
test
addr16
jo
push
aaa
cmp
shll
out
fs
testb
aaa
cmpsb
fs
inc
gs
bound
sub
adc
xchg
push
test
mov
mov
aas
xor
bound
pop
xor
stc
bound
arpl
dec
dec
mov
sub
insl
mov
inc
pusha
imul
pusha
jg
ret
bound
or
pusha
xor
mov
pusha
sub
popa
frstor
jg
inc
popa
popa
and
popa
nop
popa
xchg
lods
and
outsb
dec
outsb
jnp
push
imul
aaa
sbb
sub
outsb
into
adc
outsb
lahf
cld
mov
jno
outsl
inc
pop
insb
mov
outsl
sbb
push
cmp
sub
xor
fwait
mov
outsl
mov
scas
jnp
gs
insb
adc
incb
repz
out
insb
jmp
cltd
insb
mov
push
jecxz
lds
lock
clc
xchg
insl
or
or
and
mov
cld
push
ficomps
push
push
push
inc
push
push
push
adc
aad
data16
movsb
add
rcrb
xchg
js
add
sarl
adc
mov
push
adc
push
mov
mov
adc
imul
imulb
push
add
imul
adc
imul
xor
ror
jl
outsb
shrb
imul
shlb
mov
push
enter
out
mov
mov
imul
xchg
shrb
roll
imul
push
cld
sbb
data16
fs
pop
addr16
scas
mov
sbb
jecxz
xchg
gs
gs
bound
bound
jmp
decl
adc
into
rclb
pusha
stos
hlt
shr
outsl
jle
js
insb
popa
adc
popa
push
popa
aaa
popa
xor
cs
xlat
fildll
adc
hlt
jmp
sahf
adc
mov
loopne
outsb
nop
mov
mov
pop
insl
push
mov
decb
insl
xchg
rcrb
iret
out
sub
add
imul
or
imul
pop
hlt
incl
imul
pop
inc
mov
lods
mov
subb
xchg
rcrl
clc
push
jo
pop
inc
or
gs
pusha
lock
addl
push
popa
adc
fsubrl
pusha
jbe
outsl
stos
outsl
pushf
test
ljmp
mov
dec
add
stos
push
imul
cmc
fisttps
imul
pop
dec
inc
jg
sbb
jl
pop
data16
or
addr16
xor
xor
jg
fs
and
and
sub
fs
fstpt
fsubs
fs
fs
and
push
clc
fs
jb
fs
mov
cld
fs
fs
fs
or
sbb
push
loopne
mov
mov
mov
mov
mov
gs
gs
gs
adc
dec
gs
gs
xorb
gs
pop
sub
rcr
jmp
adc
sub
gs
pusha
pop
or
xor
arpl
pusha
outsl
pusha
mov
fsubl
pusha
outsb
popa
push
adc
popa
lock
outsb
xor
jg
outsb
mov
outsl
data16
insb
insl
scas
ret
inc
das
or
push
push
punpckhdq
outsl
js
mov
inc
pop
popa
sbb
out
loopne
inc
data16
data16
scas
cli
fbld
inc
xchg
data16
dec
mov
addr16
mov
mov
xor
sub
adc
mov
bound
inc
bound
clc
call
bound
mov
bound
stos
bound
decl
push
push
inc
and
add
fucomi
xorb
arpl
arpl
add
or
fwait
mov
arpl
sub
sub
arpl
arpl
arpl
xbegin
lret
arpl
arpl
cli
arpl
arpl
arpl
mov
jmp
arpl
fisubrl
arpl
stos
adc
push
pusha
pop
pusha
mov
pusha
dec
stos
push
or
js
fisubl
mov
adc
jnp
pusha
pop
and
ss
xor
pusha
cmp
fwait
mov
pusha
sub
pop
fisubs
pusha
les
lret
mov
std
mull
and
pusha
in
pusha
jmp
pusha
cwtl
pusha
test
adc
jmp
ret
mov
mov
mov
push
fisttps
mov
dec
popa
pop
hlt
dec
adc
jne
jle
mov
adc
adc
popa
or
popa
aas
scas
ret
cmp
popa
sub
inc
mov
popa
cmc
mov
mov
repnz
call
outsb
jno
sar
inc
push
and
push
jbe
inc
inc
outsb
dec
outsb
inc
jg
call
sbb
and
imul
and
mov
add
push
push
dec
cmc
out
shlb
adc
outsb
aad
popf
outsb
pop
je
ret
add
cli
outsl
dec
insb
in
jle
cmp
in
pushf
and
xor
mov
addr16
jo
adc
repz
mov
sbb
add
fs
outsl
das
push
xor
and
sub
shrl
push
mov
lds
shll
fs
sub
int
adc
fs
fs
fs
fs
pop
xchg
adc
aaa
jg
fs
fs
test
fs
fs
xchg
movsl
adc
mov
out
push
gs
gs
gs
inc
gs
gs
gs
gs
jns
gs
dec
subb
gs
and
gs
andl
mov
fidivrl
adc
lods
gs
fildl
and
dec
bound
jne
icebp
mov
jge
jns
les
bound
add
mov
or
sbb
cmpsb
fwait
je
bound
dec
bound
aad
dec
frstor
adc
insl
daa
sub
shl
ja
cmpsb
jle
sbb
xchg
imul
sbb
push
jecxz
cmp
ja
fwait
mov
arpl
pop
hlt
jb
push
mov
test
imul
dec
cs
imul
add
cli
mov
inc
push
jo
xchg
mov
pop
ljmp
int3
imul
mov
shlw
lcall
addr16
mov
addr16
fs
fs
adc
push
test
xor
fdivp
mov
gs
bound
adc
bound
mov
sbb
dec
arpl
rolb
sub
dec
pusha
mov
popa
push
pop
outsb
sub
mov
push
mov
cld
jg
in
cwtl
imul
jno
jle
jo
clc
cmp
pop
add
mov
gs
mov
arpl
mov
ficompl
popa
mov
jae
cmp
aad
inc
ljmp
outsl
push
insl
insl
xorb
imul
cmp
mov
mov
fisubl
inc
lock
jmp
fwait
add
notb
popa
sub
icebp
mov
adc
ret
insl
loopne
push
imul
insb
mov
jbe
mov
pop
jl
hlt
int
hlt
pusha
pusha
add
bound
xchg
inc
inc
insb
mov
nop
insb
cmp
insb
and
insb
mov
pop
push
cld
push
inc
sti
add
ljmp
mov
adc
push
rcrb
movsb
push
shrb
imul
imul
add
lods
data16
mov
call
fsubs
lods
addr16
sub
test
in
jmp
xchg
xor
addl
jge
inc
gs
bound
pop
shlb
pushl
bound
bound
adc
pop
mov
pshufw
bound
adc
cld
out
push
xlat
lock
push
jae
std
inc
add
inc
push
pusha
add
pusha
add
incl
inc
mov
cmpsb
pusha
mov
mov
sub
fwait
sbb
jg
xor
outsl
aaa
outsl
outsb
jnp
int3
outsl
cmc
outsl
cld
sarb
insb
sahf
roll
jbe
insb
add
mov
inc
push
add
push
push
push
push
icebp
ja
call
mov
sub
imul
and
test
push
lock
cmp
scas
decl
decb
popf
imul
or
data16
data16
clc
jo
add
stos
jle
xchg
addr16
fs
fs
cmpsb
add
cld
das
mov
das
arpl
andb
pusha
popa
push
xor
push
dec
add
outsb
jo
xchg
inc
xchg
push
pop
mov
mov
std
jbe
jl
xor
outsb
and
rcll
xchg
push
stc
outsb
sahf
add
xorl
outsl
mov
outsl
jp
inc
outsl
mov
insb
lods
adc
test
push
xchg
scas
push
shlb
add
push
jmp
sub
lret
stc
mov
js
cmc
mov
adc
fs
xor
jb
sti
mov
int
xchg
fsubrs
arpl
pusha
push
push
push
inc
push
push
imul
push
xchg
and
aad
pop
add
push
lods
push
test
imul
mov
fwait
push
sub
pop
data16
addr16
hlt
outsl
push
sub
lret
outsl
gs
or
mov
pop
rcl
in
add
popa
jl
add
or
and
dec
cld
mov
jmp
jo
jae
imul
add
hlt
pop
mov
inc
outsl
dec
outsl
jnp
lcall
rorb
insl
aas
inc
xor
jecxz
stos
cmpb
loopne
and
push
jb
call
xchg
hlt
adc
pop
xor
push
data16
push
daa
andb
mov
inc
lock
jle
adc
das
cmp
shlb
enter
lcall
pusha
push
fs
fs
bound
add
test
ret
lock
movsb
mov
jb
jg
test
adc
xor
rolb
adc
gs
mov
dec
outsl
mov
push
mov
bound
inc
lock
bound
jb
bound
jp
jg
inc
sub
outsb
bound
push
add
lock
add
bound
loopne
or
bound
das
mov
pop
add
and
decl
add
mov
add
cld
add
cltd
add
in
icebp
inc
sarl
add
mov
hlt
inc
lret
add
into
inc
mov
insl
jg
shr
mov
lret
adc
jmp
call
pop
add
sbb
cmc
rcll
icebp
push
xchg
pop
fcomip
js
push
cwtl
add
dec
fidivrl
scas
mov
call
fcos
lcall
test
call
aaa
add
xor
hlt
rolb
rcl
std
testb
sbb
cs
imul
sbb
test
mov
cli
lods
fcmove
add
idiv
loop
frstor
or
popl
push
push
push
scas
mov
adc
push
add
sbb
jns
mov
dec
rcrb
lock
std
pop
push
add
jae
test
jo
inc
adc
adc
loopne
xchg
push
aas
push
cmpsb
and
and
sbb
lcall
or
out
jg
mov
push
xor
mov
lods
lcall
lds
xor
inc
pop
jbe
mov
xchg
loop
lods
mov
ja
outsl
clc
mov
jmp
test
into
mov
adc
jmp
add
mov
lret
pop
sub
cld
or
add
add
jg
mov
mov
pop
ret
sub
jp
imul
pop
inc
pop
xchg
add
lea
cs
fcmovnu
cld
jno
jb
je
in
in
jecxz
out
mov
sbb
pop
hlt
daa
pop
inc
sti
sbb
add
push
popa
jnp
or
cmp
jl
decl
xchg
mov
or
fcom
cmp
cld
jo
mov
jl
unpckhps
lcall
nop
adc
je
and
stc
popa
jg
ror
adc
ljmp
out
scas
add
icebp
clc
pushf
scas
pusha
pop
lods
sbb
es
iret
lock
call
add
scas
adc
incl
lahf
in
out
push
hlt
outsl
ffree
pop
sarb
loope
inc
mov
dec
add
cmpl
outsl
dec
shlb
mov
push
jg
lea
stos
add
subl
test
mov
jae
lds
mov
dec
or
fdivs
mov
jmp
pushl
cld
dec
shlb
jecxz
sbbb
and
cmpl
call
adc
xchg
sbb
xchg
and
loope
add
mull
dec
imul
pop
clc
dec
fsubs
mov
btc
jge
add
mov
push
and
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
stos
or
sub
out
inc
insl
lret
mov
cli
and
add
cmp
inc
inc
out
pop
push
lods
sbb
xchg
std
mov
ror
push
xchg
push
int
out
push
cs
movsb
push
inc
mov
jmp
mov
adc
push
mov
mov
jns
data16
arpl
or
incl
outsl
lret
and
cmpsl
and
lcall
imul
int
mov
cmp
pop
es
or
adc
mov
mov
push
aaa
jbe
in
dec
cmp
popa
scas
dec
and
push
daa
inc
mov
insb
adc
cmp
mov
shr
mov
imul
xchg
pusha
iret
jo
pop
lock
rclb
in
dec
subl
sarl
inc
ss
dec
dec
inc
adc
jno
aas
xor
inc
inc
cmpsb
test
dec
pushf
inc
inc
dec
inc
insl
mov
push
imul
imul
cwtl
sbb
mov
orb
rcrb
and
fs
jo
insl
cmp
out
andb
lahf
inc
xchg
in
add
jge
push
fs
cmpsl
sub
scas
pusha
sub
mov
pop
push
jle
rcrb
clc
das
mov
arpl
jbe,pn
jo
insb
xor
scas
jo
mov
outsl
cs
sub
jne
inc
lahf
push
mov
dec
ds
and
outsl
sub
mov
ds
inc
push
stc
inc
inc
lret
pop
push
mov
adc
testb
mov
mov
aas
cli
xor
lret
mov
iret
inc
add
out
imul
adc
pop
xor
ret
cli
jle
mov
lret
sub
fcomip
je
xchg
outsb
inc
ror
cli
iret
or
jbe
lret
add
push
cmp
mov
xlat
les
pop
and
mov
mov
in
mov
es
scas
jg
cmc
mov
xor
mov
dec
xor
mov
shrb
inc
mov
inc
add
mov
pushl
into
int3
clc
es
inc
idivb
ss
xchg
ret
rol
pusha
push
dec
inc
test
dec
push
ss
loopne
jle
lret
dec
test
mov
or
inc
xchg
rol
cmp
cli
mov
cwtl
jo
xor
or
stc
xor
inc
dec
idivl
sbb
xor
jg
testl
mov
sub
xchg
pop
out
inc
cli
push
sbbb
push
push
inc
fimuls
sbb
jmp
decb
mov
inc
sarb
add
dec
mov
mov
stc
mov
addb
sahf
enter
mov
aaa
decl
pop
enter
xorl
or
sbb
jle
xchg
hlt
add
xchg
enter
ret
sub
out
cwtl
inc
ss
sbb
jl
out
int
ss
add
test
and
enter
pop
lea
add
xor
mov
fdivp
popa
inc
jae
decl
ss
inc
iret
dec
mov
or
mov
mulb
lock
pop
mov
andl
sti
cmp
fiadds
mov
repz
mov
decl
and
dec
scas
aaa
imul
cmpsb
ljmp
mov
mov
gs
cmp
cmp
push
roll
das
lcall
fldt
xchg
mov
inc
incl
push
orl
xchg
orl
mov
popf
cmp
iret
pusha
mov
mov
push
mov
js
mov
out
push
mov
incl
inc
xor
pop
enter
push
xchg
inc
push
pop
ds
in
mov
cltd
cmp
xor
pop
dec
nop
dec
addb
inc
cltd
inc
jp
loopne
push
cld
test
dec
inc
xorb
add
jnp
push
mov
aaa
jne
xor
mov
incl
mov
add
ja
jg
mov
popf
outsl
xlat
pop
cld
dec
popa
xor
mov
lea
cmp
ret
iret
ret
divb
les
pop
testb
xor
dec
divb
or
lods
jecxz
loopne
repz
mov
call
mov
outsb
xor
iretw
mov
fistpll
push
sarb
fidivrs
pop
and
decl
cmp
dec
sbb
imul
and
inc
ja
std
incl
push
lret
adc
testl
aas
ds
add
fildl
repnz
adc
pop
dec
outsl
das
and
jl
mov
add
lcall
mov
stos
clc
idiv
sub
lret
cmpsl
leave
sub
pop
mov
xchg
test
cs
or
data16
push
sar
scas
mov
popa
outsb
push
gs
push
dec
clc
idiv
pushl
bound
dec
pop
push
pop
jne
inc
push
insb
outsb
jno
data16
jbe
push
jne
xor
mov
jg
cmp
aaa
je
push
xor
cmp
popa
inc
inc
push
aaa
dec
jae
fstpt
inc
jns
inc
inc
xchg
dec
jne
dec
jb
outsb
inc
xor
mov
inc
push
dec
push
dec
fs
inc
imul
mov
jbe
arpl
jbe
jb
jo
inc
cs
ja
jbe
inc
pop
inc
add
bound
sar
inc
inc
push
js
add
ja
push
jno
push
dec
fistpll
inc
add
fs
jns
inc
add
bound
push
out
mov
sti
pop
add
imul
je
inc
je
pushl
data16
dec
aaa
addr16
data16
je
insb
inc
xor
dec
jb
cmpb
pop
outsl
jae
arpl
xor
inc
xor
dec
inc
incb
out
imul
gs
inc
dec
inc
mov
insb
dec
insl
jp
jbe
pop
jne
push
dec
in
push
dec
push
outsl
ficoml
xor
push
pop
inc
popa
lret
das
js
jae
xor
inc
jp
cmp
pop
jns
add
inc
dec
inc
push
xor
loope
das
mov
inc
cs
xor
insb
push
pop
fs
inc
clc
push
aam
sub
lods
jo
jp
popa
lock
popa
sub
cs
dec
push
dec
imul
loopne
adc
or
pop
push
outsb
rclb
outsl
arpl
and
xchg
inc
dec
inc
jae
dec
cld
divb
pop
inc
shrb
push
insl
jae
dec
jbe
jns
inc
je
ja
push
inc
add
jp
jb
insl
push
mov
addr16
xor
aaa
stos
inc
jecxz
add
aaa
ja
js
dec
push
jo
xor
sarl
push
push
dec
push
jo
jb
xor
outsb
insb
data16
sub
repnz
dec
sbb
insl
aaa
inc
push
ss
pop
decl
inc
popa
push
inc
jae
dec
dec
jns
inc
inc
dec
inc
xor
xchg
and
inc
inc
mov
outsl
inc
jno
inc
jb
push
push
jns
push
sub
push
jb
in
inc
dec
js
dec
and
dec
sub
jecxz
jle
dec
dec
dec
ds
arpl
inc
jae
aaa
fdivl
push
push
test
fs
bound
rclb
incb
push
jo
jbe
dec
inc
xor
jbe
jo
fbstp
movsb
addr16
jns
insb
nop
ss
jbe
je
dec
and
xor
insb
push
pop
push
dec
xchg
cwtl
or
push
push
bound
dec
mov
outsl
mov
lock
sub
inc
ss
bound
push
orb
inc
push
xor
or
xor
xor
ja
hlt
dec
outsl
add
push
mov
js
dec
jp
imul
dec
xchg
adc
inc
es
mov
inc
cmp
inc
jae
ss
push
jo
push
sub
incl
fs
dec
pop
dec
push
dec
jae
xor
insb
insb
gs
sub
push
push
fdivr
jne
jp
pop
ja
bound
fs
imul
jae
into
mov
inc
gs
cmpsb
add
dec
outsb
push
add
push
push
add
mov
imulb
sbb
push
pop
pop
rcl
arpl
ljmp
out
mov
mov
jb
inc
ja
jb
dec
outsl
mov
dec
jno
imul
mov
inc
dec
je
outsl
push
sub
jns
dec
xor
imul
sbb
dec
push
pop
js
push
push
jbe
lods
outsl
pop
push
data16
insl
push
imul
push
imul
outsl
outsl
pop
test
xor
push
cmp
addr16
dec
ficoms
dec
push
push
inc
popf
add
push
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
inc
decb
add
dec
add
pusha
and
and
mov
push
gs
outsl
je
data16
push
popa
outsb
addr16
gs
popa
insb
jne
add
inc
outsl
insl
jo
je
inc
arpl
jae
push
outsl
imul
int
jb
outsl
fs
jp
gs
insb
dec
dec
inc
push
int3
ds
xor
imul
popa
bound
cmpsb
jns
arpl
inc
jne
insb
imul
push
inc
gs
dec
outsb
outsw
jb
imul
dec
call
dec
dec
outsl
addr16
fs
outsb
push
jae
push
rorb
in
push
jne
insl
inc
js
add
shrb
adc
jp
push
and
sbb
lods
pusha
jns
cmp
push
jo
outsl
ret
push
sahf
std
dec
lock
fs
imul
push
or
arpl
fs
add
inc
divb
imul
je
inc
mov
xor
push
or
fcoms
js
gs
and
int3
pop
roll
insb
gs
push
sbb
aad
loopne
sti
dec
popa
jae
inc
jle
add
inc
inc
adc
xorb
addr16
dec
bound
mov
dec
outsl
stc
push
pushf
jne
xlat
adc
sub
inc
inc
pop
push
push
mov
ja
je
push
and
ret
notl
mov
insb
rorb
cmpsb
adc
add
loopne
and
mov
xchg
fistpl
mov
jae
jb
pop
sub
arpl
imul
sub
sbb
adc
cmpsl
jg
insl
cwtl
fisttpl
ja
xlat
add
sub
pop
sahf
sahf
gs
add
jne
mov
dec
jns
or
push
ficomps
loope
insb
xchg
jne
add
cld
mov
inc
add
dec
add
add
sub
lahf
loopne
popl
jbe
sbb
push
sub
data16
jge
xor
push
adc
pop
add
add
mov
and
fcmovu
lods
add
jge
negl
mov
sahf
sbb
sbb
jb
mov
add
and
sahf
out
push
inc
nop
add
cmp
fdivs
js
mov
sub
inc
add
fildl
push
add
insl
dec
ss
xchg
mov
out
jae
arpl
xchg
xchg
out
xor
in
aaa
dec
xchg
lock
or
add
add
mov
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
or
add
and
add
pusha
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
popa
pop
add
add
add
add
add
add
add
add
add
add
mov
add
mov
add
fadds
add
add
add
add
add
add
add
add
add
mov
arpl
add
add
add
add
add
add
add
add
add
add
enter
in
gs
add
add
add
add
add
add
add
add
add
add
lock
add
push
add
in
add
add
add
add
dec
add
dec
add
add
or
pop
add
add
pushf
xchg
loopne
jo
cli
dec
scas
xorb
add
cmp
mulb
rcrl
jmp
fs
aad
jne
rcrb
pusha
push
lahf
mov
push
or
aad
xor
or
lock
daa
ss
lcall
fs
sahf
pop
add
mov
mov
scas
xor
and
movl
xchg
pop
gs
popf
sbb
leave
imul
push
and
mov
decb
pop
test
hlt
mov
test
aas
int
cmc
and
mov
sub
test
sbb
xchg
mov
test
test
jo
mov
jbe
pop
inc
xchg
loope
mov
add
int3
and
inc
sbb
mov
ficompl
dec
fwait
bound
push
xchg
adc
loopne
and
std
out
xor
repz
push
andl
sar
mov
and
jl
mov
pop
or
fs
repz
sub
mov
fs
test
lret
stos
scas
adc
cmp
cmp
scas
rclb
decl
iret
loopne
sbb
add
in
add
jmp
push
and
pop
out
sbb
int3
fdivs
fwait
divb
aaa
pop
mov
clc
les
push
xor
adc
mov
lods
push
xchg
push
push
cwtl
mov
test
pop
dec
stos
ret
adc
dec
or
shl
jg
pop
lds
add
sahf
xor
fistps
xchg
sub
ret
push
popa
cmc
outsb
mov
mov
mov
mov
add
aad
add
gs
inc
loopne
and
aam
fmuls
fucom
mov
roll
jp
or
pop
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
or
or
add
add
or
aas
add
add
add
add
add
add
add
xor
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
push
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
adc
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
dec
add
jp
imul
popa
add
add
outsl
add
outsb
add
add
add
outsb
add
add
add
pop
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
add
arpl
jns
and
inc
add
je
popa
add
popa
add
add
add
add
jbe
add
add
add
inc
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
popa
add
imul
inc
add
inc
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
jae
jae
add
insl
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
outsb
add
jae
add
insl
add
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
je
ja
outsl
add
imul
add
add
jne
jb
imul
and
push
add
jb
jbe
imul
jae
add
dec
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
popa
add
imul
inc
add
inc
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
xor
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
or
or
add
add
or
aas
add
add
add
add
add
add
add
xor
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
push
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
adc
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
dec
add
jp
imul
popa
add
add
outsl
add
outsb
add
add
add
outsb
add
add
add
pop
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
add
arpl
jns
and
inc
add
je
popa
add
popa
add
add
add
add
jbe
add
add
add
inc
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
popa
add
imul
inc
add
inc
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
jae
jae
add
insl
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
outsb
add
jae
add
insl
add
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
je
ja
outsl
add
imul
add
add
jne
jb
imul
and
push
add
jb
jbe
imul
jae
add
dec
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
popa
add
imul
inc
add
inc
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
cmp
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
or
or
add
add
or
aas
add
add
add
add
add
add
add
xor
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
push
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
adc
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
dec
add
jp
imul
popa
add
add
outsl
add
outsb
add
add
add
outsb
add
add
add
pop
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
add
arpl
jns
and
inc
add
je
popa
add
popa
add
add
add
add
jbe
add
add
add
inc
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
popa
add
imul
inc
add
inc
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
jae
jae
add
insl
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
outsb
add
jae
add
insl
add
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
je
ja
outsl
add
imul
add
add
jne
jb
imul
and
push
add
jb
jbe
imul
jae
add
dec
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
popa
add
imul
inc
add
inc
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
insb
pop
add
add
add
pop
add
pop
add
add
add
pop
add
pop
add
add
add
pop
add
pop
add
add
add
pop
add
add
add
add
pop
add
pop
add
pop
add
insb
pop
add
add
add
insb
pop
add
add
add
insb
pop
add
add
add
insb
pop
add
add
add
insb
pop
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
jbe
jo
xor
cs
insb
add
jb
gs
xor
add
gs
xor
ja
outsb
je
jne
je
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
dec
inc
xor
imul
imul
push
add
add
je
inc
add
add
outsb
push
gs
data16
jb
jae
