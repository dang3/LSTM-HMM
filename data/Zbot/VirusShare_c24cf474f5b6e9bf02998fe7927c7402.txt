or
add
push
push
je
imul
repz
enter
fcomp
jnp
iret
rclb
push
dec
bound
arpl
dec
lcall
inc
add
xor
sub
pushf
pushf
and
sbb
pushf
pushf
pushf
pushf
adc
or
inc
sahf
pushf
pushf
add
cld
adc
fmull
clc
hlt
das
pusha
pop
cmp
jns
addps
lock
fisttpl
cmp
rcpps
xor
or
testb
incl
add
mov
and
mov
ss
pop
ret
addr16
xchg
xchg
fneni(8087
paddusb
aam
and
enter
add
jg
cmp
jne
push
add
or
pushw
sub
xor
mov
jmp
mov
mov
in
aaa
xlat
pop
mov
add
mov
push
roll
push
and
mov
ja
pop
or
inc
cmp
jne
mov
pushf
sub
in
mov
cpuid
mov
or
mulb
mov
add
push
push
sbb
mov
mov
push
cmpsb
jns
test
incb
jmp
mov
lahf
fstp
insb
roll
add
or
mov
andl
pop
add
push
mov
pop
pop
pop
mov
mov
adc
adc
jl
dec
add
out
add
popw
jbe
neg
push
push
outsl
mov
mov
jbe
push
mov
push
push
repz
mov
lret
add
sbb
enter
jp
nop
inc
inc
or
mov
pop
or
add
push
add
cmp
jne
cmp
das
inc
pop
cmp
jne
mov
mov
xor
sahf
pop
sbb
jo
pop
pop
pop
out
addw
fxtract
or
aam
push
mov
or
mov
bound
fildl
pop
sub
add
fbstp
push
and
xor
add
movhps
pop
push
cmpl
push
popa
daa
testb
jne
push
aaa
pop
adc
jmp
mov
add
pop
mov
add
lock
icebp
or
sti
mov
enter
lea
push
insb
ret
sub
sbb
jmp
and
push
add
cmp
test
add
insb
adc
addl
nop
xchg
fldenv
mov
pop
mov
dec
adc
jbe
push
mov
push
add
push
push
add
clc
xchg
test
je
xor
in
loope
inc
xlat
pusha
aam
orb
dec
sbbb
bound
sub
dec
dec
negb
jge
push
lahf
push
pop
icebp
dec
xchg
inc
xchg
pushf
sbb
sbb
in
mov
call
xchg
cmp
sub
repz
mov
xchg
sbb
add
sub
fcoml
xchg
cmp
imul
aad
pop
sbbb
jb
lcall
jo
ja
and
jae
or
inc
push
insb
cwtl
jbe
or
es
test
aas
push
cmp
add
mov
lock
jg
push
jne
push
pop
xchg
out
bound
je
jno
inc
sub
or
shll
fucomip
out
imul
mov
xchg
test
add
push
dec
mov
cmp
loop
mov
shr
stos
adc
cmp
xor
push
add
fdivr
xchg
cmp
or
imul
pop
sbb
lahf
cmp
push
push
es
js
rcll
in
out
setp
andl
pop
mov
js
ljmp
sbb
enter
inc
pop
pop
pop
roll
or
xchg
push
aaa
add
outsb
inc
add
test
insl
cmp
xor
lahf
div
inc
push
mov
rorb
inc
cmp
jg
mov
xor
mov
add
xchg
pop
add
lea
pand
inc
mov
fdivrs
das
jne
add
jno
lea
testl
fstl
daa
push
add
dec
in
out
or
or
mov
cli
orb
cmp
add
out
call
sbb
sarb
inc
pop
pushf
fnstenv
or
pushf
pop
ficomps
or
mov
sub
fwait
push
add
repnz
push
call
xor
jmp
or
adc
shrb
rorb
adc
push
or
test
add
xor
push
pop
pushl
jmp
stc
cmp
jne
pop
lock
out
jg
dec
jl
in
rorb
inc
lock
xchg
imul
adc
mov
lea
gs
add
and
outsl
mov
shrb
push
sub
test
jp
cs
les
pop
pusha
out
in
inc
movsb
out
ret
ljmp
mov
jmp
sub
push
mov
push
dec
push
push
pushl
mov
push
iret
push
add
jle
and
add
sub
adc
push
out
cmp
clc
jge
cmp
cld
addb
in
adc
outsb
out
push
loop
cmp
movl
mov
clc
jge
adc
mov
mov
ret
bound
pop
fs
orl
dec
add
and
or
ret
pop
pop
scas
test
pusha
mov
pop
out
call
sbb
push
inc
push
xor
mov
pusha
scas
or
mov
lea
pop
or
sbb
inc
movhps
mov
adc
or
and
mov
add
mov
xchg
jmp
xchg
popf
sbb
add
mov
mov
cmp
lahf
adc
add
cmp
into
jg
fdivs
test
jns
ret
cli
add
aas
nop
hlt
jmp
sub
sbb
mov
cmp
xchg
hlt
mov
adc
and
sbb
sbb
int3
push
and
adc
add
jb
sbb
push
or
sbb
add
adc
jnp
cmpsl
cld
enter
mov
pop
xchg
sub
lea
mov
in
testl
add
dec
adc
push
loope
pop
or
pop
dec
cs
pcmpeqd
add
mov
sub
add
lcall
ljmp
mov
jle
xor
or
push
or
insb
rolb
pushf
fwait
or
ret
inc
push
push
push
add
xor
cmp
pop
divl
add
and
xor
test
in
lock
add
sub
jl
or
xor
jo
xchg
arpl
mov
faddp
sahf
imulb
ja
fdivs
testb
and
fsubs
lea
in
lock
jne
sub
inc
adc
mov
xor
pop
cmpsl
hlt
pop
lea
das
or
jecxz
lods
xchg
jnp
in
js
mov
loope
sarb
lea
sub
xor
jg
mov
push
movl
dec
inc
push
loope
mov
xchg
or
adc
xor
inc
add
mov
xchg
cmp
mov
frstor
jp
mov
fadd
add
shlb
lea
rolb
mov
aam
pop
mov
ret
jo
or
or
mov
fistpl
lret
mov
add
or
movsb
ficompl
test
jo
clc
add
add
mov
lret
and
testb
and
xchg
cmovge
mov
inc
lods
or
or
cmp
or
xchg
rorl
inc
mov
mov
testb
outsb
cmpl
repnz
ss
or
pop
es
sub
sub
sbb
mov
add
push
test
cld
jo
daa
jl
andps
cs
cmp
or
or
inc
add
or
add
insb
mov
jae
or
jne
cmpl
jbe
subl
add
xor
mov
add
inc
add
lea
pop
xor
push
sbb
add
push
inc
mov
sbb
pop
ret
popa
fdivrs
jecxz
cwtl
or
cmp
pop
sbbb
dec
xor
or
out
add
xchg
mov
or
push
popf
jle
sub
inc
and
and
or
mov
push
cmp
pop
sub
dec
jbe
pop
je
cwtl
jbe
in
orl
addb
cmp
jmp
adc
sub
pop
dec
mov
or
pxor
cmp
sbb
addr16
mov
clc
cltd
or
repnz
mov
sub
mov
jmp
imulb
push
cli
mov
pusha
aaa
pop
or
cmpb
xchg
push
cmovle
imul
pop
lahf
pusha
xchg
dec
orb
jne
stos
cmp
aad
xchg
in
push
mov
loope
or
or
pop
clc
outsb
jle
inc
popa
repnz
lods
and
add
and
cmp
add
iret
jo
jg
pop
push
clc
stos
mov
xor
in
push
sub
sbb
lock
jne
push
jo
scas
aaa
jmp
xchg
sbb
mov
insb
mov
fidivl
sub
pop
xor
and
pop
cmp
and
sarl
sbb
punpckldq
cmp
add
out
lds
sbb
fcompl
les
pop
mov
mov
cld
pop
mov
lock
sub
push
loop
cmc
jne
out
or
in
insb
adc
add
loope
pop
clc
inc
sub
adc
insl
test
jne
cltd
or
ret
aaa
or
fwait
push
sub
push
or
cmp
ret
bound
test
fucomi
jge
lcall
cltd
fdivrs
sub
lock
jo
and
lods
add
cmp
das
mov
clc
fldl
xor
loop
add
loopne
fbld
sbb
test
je
addr16
add
cmp
cmp
or
jmp
push
repnz
fmull
cmpl
adc
or
or
sbb
into
scas
push
push
sbb
cmp
jo
lods
mov
mov
cmp
loope
xor
lods
lcall
mov
xchg
pop
mov
or
scas
nop
out
sub
out
scas
call
push
sub
push
test
push
add
sub
test
pop
mov
add
adc
js
or
push
mov
adc
std
int
in
sub
or
inc
stc
mov
sub
jno
cmp
jg
out
mov
add
daa
push
add
arpl
sub
imulb
mov
fdivs
sbb
out
das
jle
and
dec
nop
push
cmp
adc
add
std
push
movsl
add
sbb
out
test
ret
sti
dec
add
pop
mov
cmp
xchg
xchg
clc
sub
int
mov
pop
push
adc
mov
pusha
cmp
data16
sbb
or
pop
fs
jo
jl
adc
adc
sub
jp
mov
ret
adc
insl
mov
fistl
or
or
sbbl
add
cld
je
fmul
xchg
push
sbb
leave
sbbl
xchg
test
jle
nop
call
test
inc
add
ror
inc
jbe
jmp
stos
scas
out
mov
cmpsl
adc
jno
or
ja
sbb
ret
mov
xor
mov
sti
mov
dec
xor
or
add
push
jmp
xor
add
dec
sarl
loope
fimuls
sub
jecxz
jae
mov
cmp
sbb
jne
dec
cmp
add
jo
mov
xchg
jb
ret
mov
sbb
negl
loopne
es
or
push
push
push
jne
mov
in
mov
xor
sub
sbb
mov
test
data16
rcll
jae
sbb
pop
inc
mov
lret
ja
je
sar
js
rep
mov
and
rep
jnp
std
int
inc
je
cld
lea
xor
std
xor
lcall
ds
inc
push
mov
sub
je
dec
sub
jae
stos
or
rorl
jmp
enter
add
ljmp
add
add
sbb
mov
test
push
mov
sbb
hlt
pop
int3
imulb
shll
das
or
and
ljmpw
jne
call
mov
test
adc
push
fisttps
cmp
or
imul
mov
fistpl
sub
fstpt
push
inc
clc
dec
jae
jge
je
mov
or
je
or
je
and
cmpsb
out
js
pop
pop
je
xor
and
testl
or
std
or
cmp
ja
lea
add
add
push
mov
or
std
mov
or
push
neg
jle
js
pop
sub
jmp
inc
inc
jmp
mov
sbb
push
je
andb
xchg
and
jbe
push
adc
or
stos
cmc
insl
xor
jne
cwtl
pop
xor
mov
mov
jg
loope
repz
sub
mov
sbb
dec
je
cmp
add
lea
fnstsw
adc
fldt
call
pcmpeqb
push
pushf
das
jge
add
popa
scas
and
xor
xchg
jge
mov
xchg
push
cmpsb
movsb
xor
sbb
add
loope
jmp
fstp
fldt
fldz
mov
cmpb
cmp
xchg
dec
mov
cli
or
xchg
dec
ds
pushf
or
ret
mov
adc
xchg
jl
xchg
cwtl
push
and
sbb
lret
pop
ds
add
mov
mov
pop
in
es
test
out
sub
sub
xor
leave
sbb
mov
aas
incl
cmp
fidivrs
call
mov
bound
int
stc
aaa
cmpb
xlat
fadds
outsb
xor
xchg
ljmp
push
or
push
push
int3
into
sbb
rorl
mov
push
pop
test
enter
jmp
outsl
movsl
push
inc
cmp
and
daa
lret
into
pop
inc
test
xchg
clc
js
aas
sbbl
pushl
xlat
pop
mov
addr16
leave
repnz
bound
and
cld
gs
sahf
mov
sub
lods
lds
iret
decl
js
inc
mov
stos
mov
cmp
or
incl
xchg
test
stos
pop
out
sub
imul
divl
jl
xor
cmp
call
icebp
mov
inc
mov
sti
jmp
stos
push
inc
mov
push
sbb
sarb
repnz
ljmp
das
test
nop
fildl
daa
movsb
lahf
nop
inc
pop
stos
clc
scas
adc
inc
pop
pushf
mov
pop
pushf
decl
repz
loope
jp
iret
inc
bound
ds
push
cmpsb
scas
mov
jmp
addl
cmp
xor
in
cmp
sahf
xchg
pop
fcomip
jmp
push
movsl
mov
popa
mov
and
addr16
repz
mov
fldl
mov
push
pusha
les
outsb
bound
xor
and
or
rcr
jg
je
clc
pop
jne
push
pop
and
dec
es
incb
add
outsl
ret
hlt
movzwl
lea
push
int
mov
push
pop
jl
pop
jbe
das
movl
insl
pop
hlt
push
data16
add
test
sub
lahf
out
mov
outsl
push
jmp
pop
aas
or
mov
and
inc
push
push
inc
push
inc
pop
inc
outsl
jb
popa
outsb
fs
lcall
insb
jo
imul
push
dec
popa
jae
push
popa
insb
jne
fninit
mov
sub
mov
xor
mov
inc
push
lock
pop
rorb
pusha
mov
sbb
pop
aaa
pushf
jge
mull
cmp
sbb
add
push
push
cs
add
mov
pop
mov
or
push
cld
ret
xchg
aam
negb
clc
decl
push
shr
dec
rep
pop
pop
stos
mov
mov
sub
movsb
add
pop
fadd
add
sbb
in
cmp
or
je
pop
mov
add
jae
dec
push
mov
mov
outsl
pop
lock
sbb
jne
jne
lods
movb
decb
mov
shl
clc
and
scas
lret
lahf
test
mov
andb
cmpsl
mov
pop
push
xchg
jmp
cmpb
pop
idivl
or
movl
or
not
ret
pop
data16
mov
enter
cld
pop
out
add
shlb
inc
cmp
repz
mov
scas
sbb
lahf
pop
push
push
xor
je
adcw
insb
add
loope
mov
pop
adc
pop
jmp
pop
xor
lock
cmpb
jl
call
xor
cmp
mov
sbb
add
xor
mov
mov
pop
pop
pop
rorl
bound
push
ret
ret
in
mov
push
mov
pop
imul
push
clc
push
sbb
ret
in
push
enter
and
cli
jecxz
call
cmp
adc
push
in
push
call
and
idiv
pop
push
pusha
push
push
cmp
add
out
or
add
out
rol
add
pop
push
push
bound
mov
pop
mov
cmpb
je
or
jne
movsbl
inc
inc
jmp
add
fsub
add
sbb
cmpsb
and
addr16
xchg
push
adc
loop
mov
fiaddl
cmp
gs
pop
icebp
add
xor
testl
sbb
mov
fiadds
push
sbb
cld
leave
jo
xor
adc
test
dec
call
into
adc
bound
inc
cmp
cmp
cli
out
push
je
dec
xchg
dec
sbb
sbb
jbe
pop
ja
push
push
push
into
or
repz
stos
jno
and
outsb
enter
adc
lods
rorb
push
jns
or
and
je
orl
push
jo
fsubs
cmp
sub
sbb
push
push
mov
jne
test
pushl
mov
xor
das
ds
add
inc
add
push
push
sar
jecxz
notl
pop
popf
mov
dec
adc
ret
or
fdivrs
ret
inc
push
pop
je
mov
inc
add
xor
shlb
and
or
add
shll
fimuls
hlt
clc
jg
mov
pop
push
push
push
push
push
addl
rolb
fldenv
es
sarl
sbb
or
pusha
add
aas
inc
jo
push
je
cmp
mov
ret
aad
js
into
adc
adc
fdivs
inc
push
cwtl
lahf
jae
mov
mov
clc
push
insl
sub
loop
xor
rcll
or
outsl
aaa
movsl
add
loop
add
sub
push
out
pop
cmp
push
sub
and
cmp
pusha
add
call
xor
push
cmp
push
stc
adc
xchg
cs
adc
jmp
sub
ljmp
cmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
push
sbb
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xor
arpl
push
or
pop
ret
push
roll
dec
test
push
sbb
je
push
es
jmp
jp
pop
adc
lahf
mov
mov
je
cmc
outsb
mov
mov
stc
out
push
push
stos
sti
into
inc
sti
and
or
mov
mov
mov
or
ljmp
lret
movsb
fmul
xor
int3
movsb
jg
mov
mov
adc
sbbb
enter
push
fs
std
outsl
repnz
cmp
jne
and
push
mov
bound
jl
pop
dec
mov
mov
adc
mov
xor
in
cmp
popl
call
xor
addb
test
mov
das
movsl
insb
pop
sbb
dec
pop
push
fistpll
sbb
call
stc
mov
iret
mov
inc
mov
fistpll
repz
and
cmp
push
stos
adc
jo
cmp
sbb
pminsw
out
cmp
rol
add
ret
pop
fcomip
cs
je
add
push
dec
filds
ss
dec
jne
pop
pop
imul
add
or
inc
pop
movsl
in
lret
pop
mov
sarb
das
test
mov
add
add
imul
push
es
mov
sarb
xchg
jl
xor
mov
push
push
jbe
mov
out
sub
testb
loope
rolb
sbb
adc
ja
add
push
cmc
and
movsl
pop
leave
call
mov
notl
xorl
cmp
or
xor
or
loope
push
push
pop
pushl
jle
jl
add
cmp
ret
mov
and
inc
push
adc
cmpsb
fwait
jge
cmp
pop
add
addr16
mov
jnp
insb
push
cmpl
xchg
dec
xlat
sub
data16
incl
sbb
inc
sbb
mov
test
sub
nop
daa
jecxz
pop
sti
push
jne
ds
fiaddl
mov
xor
jbe
mov
js
mov
xor
sbb
scas
push
jne
cmp
je
push
cmp
stc
insb
and
adc
add
loopne
sbb
pop
shll
adc
add
sti
shll
sub
outsl
loopne
adc
inc
push
pushf
ret
nop
cmpsb
mov
jmp
in
mov
dec
clc
dec
jl
lock
clc
ja
or
mov
popa
xchg
inc
jle
sbb
add
or
sahf
mov
fisubl
add
inc
jg
or
sub
ret
in
sub
rcrl
jmp
jbe
xchg
lods
repnz
or
icebp
call
inc
out
jle
push
add
and
push
aaa
pop
icebp
lea
add
inc
push
sub
push
cld
xor
jne
xorb
push
pop
cltd
mov
mov
das
push
sub
js
mov
ljmp
js
cli
pop
cli
sub
in
scas
push
push
push
or
adc
rcrb
mov
add
dec
icebp
outsl
pop
fistl
or
outsb
pusha
test
add
sub
mov
sub
pushl
jl
jnp
mov
and
push
jge
add
sbb
sub
sbb
jge
cmp
adc
push
mov
mov
call
leave
push
push
cmp
je
cmp
orb
je
add
sti
in
jmp
inc
add
jmp
cmp
cmp
or
or
push
push
popf
mov
jmp
or
add
fidivl
mov
shl
mov
sti
test
rcrl
rcrl
cmpsl
add
mov
push
fmull
cld
ret
xor
sbb
aas
je
loop
jle
mov
push
cld
add
cmp
cld
shll
mov
mov
adc
cmp
xchg
sar
xchg
ss
xor
inc
xchg
adc
or
jecxz
cmp
cmp
jmp
push
rorl
mov
cmp
xor
dec
jne
hlt
addr16
adc
xchg
cmp
mov
aaa
add
dec
jmp
and
sbb
push
dec
or
into
repz
jne
jo
cmp
and
insb
add
fsubp
pop
insb
mov
lea
jmp
push
pop
add
dec
cmpb
scas
cmp
shlb
je
push
scas
or
inc
ss
adc
movsl
dec
cmpsl
aam
xchg
inc
pop
mov
dec
sub
std
add
xor
pop
sub
sar
lret
jl
cmp
jge
sub
mov
jg
add
lahf
jecxz
loopne
adcl
mov
jmp
and
or
push
ret
ret
rorl
rorb
jle
push
lcall
push
jl
sbb
or
loopne
mov
pusha
pop
js,pn
mov
cld
hlt
jmp
jl
aaa
adcl
mov
js
icebp
jl
or
jne
icebp
pop
lahf
push
fucomip
movsb
mov
dec
sub
jp
jge
xchg
and
jecxz
imul
push
mov
fsubl
push
lea
jl
push
test
and
inc
mov
insb
andb
cmp
mov
or
out
cmpsl
pop
call
sub
cmp
push
scas
sbb
incl
sub
cmp
and
cmp
je
cmp
je
cmp
je
dec
mov
pop
test
push
mov
das
inc
test
int3
jg
mov
scas
ror
mov
jmp
adc
mov
jmp
mov
sti
stos
or
notb
aad
push
or
add
mull
mov
pop
jmp
cmp
aam
and
sub
lods
bnd
sbb
cmp
push
shl
das
test
jmp
jecxz
pop
add
pop
adc
daa
incb
and
mov
jne
outsl
movsb
mov
into
adc
pop
pop
and
and
aas
xor
daa
mov
test
fidivs
push
cmp
mov
or
push
fdivr
dec
pop
faddl
jnp
sub
sub
mov
les
push
clc
mov
push
adc
sti
xor
inc
adc
adc
pop
daa
loope
pop
imul
push
ret
cmp
sub
push
out
dec
cmp
in
or
sbb
jae
sub
mov
pop
jno
xchg
lea
mov
adc
or
add
fiadds
outsb
add
sbb
sub
out
movsb
int
or
test
pusha
outsl
pop
ret
inc
mov
or
push
cmp
cmpl
cmc
dec
push
ss
test
push
mov
aam
call
sub
jge
add
and
cmpb
inc
ud2
xor
std
js
pop
jne
sbb
xor
inc
inc
or
xor
inc
das
cmc
out
or
sub
cld
lea
shr
loope
in
pop
cmp
in
mov
sub
mov
cmpl
inc
jbe
int3
mov
xor
stos
fwait
dec
ja
mov
je
push
aas
pushf
std
in
mov
push
add
ret
pop
movb
pop
mov
push
push
mov
jo
jg
jb
roll
and
dec
testb
mov
add
outsl
hlt
ljmp
jb
gs
xor
cs
insb
pop
inc
gs
outsl
outsb
addr16
popa
je
dec
push
out
mull
gs
daa
scas
fdivr
movsb
sti
dec
mov
int
movb
xor
aad
into
push
pushf
inc
add
mov
je
cmp
and
mov
xorl
mov
pop
inc
std
lock
or
or
call
sbb
inc
sti
cmp
push
jmp
fdivrs
outsb
insl
push
add
push
repnz
mov
inc
jne
imul
push
lods
repz
out
mov
and
mov
hlt
inc
test
repz
or
push
jmp
jnp
xchg
pop
repnz
icebp
add
mov
add
dec
in
in
mov
jbe
je
inc
cmp
jne
adc
add
sub
push
in
rolb
push
push
sbb
ss
sub
movsb
jne
or
pop
lret
das
ja
ss
sub
ss
jae
clc
iret
popa
pop
iret
push
outsl
data16
popa
jb
stos
fnstenv
cmpsl
lret
insb
gs
aaa
inc
xlat
xor
filds
movsb
add
test
stos
and
sub
aaa
pop
inc
mov
cmp
add
or
and
pop
push
push
loopne
pop
fidivl
jae
adc
dec
adc
mov
and
shll
inc
jbe
xor
enter
jne
cmp
xlat
dec
arpl
jmp
repz
jge
dec
and
cmp
xchg
jno
fdivrl
fmul
scas
in
sub
mov
call
dec
add
adc
lods
xor
adc
jge
dec
mov
inc
test
jle
sub
adc
mov
cmpsb
lahf
ret
mov
jae
adc
push
sub
or
addr16
imul
test
push
lock
mov
dec
push
lea
push
push
js
in
and
roll
pop
sbb
pushf
stos
jbe
test
mov
sub
sbb
inc
incl
aad
jne
mov
dec
fiadds
adc
add
or
cmp
inc
scas
clc
push
subl
add
add
movb
mov
aaa
xor
adc
and
popf
dec
subb
imull
shll
dec
mov
adc
add
pop
in
add
mov
cmp
add
loopne
mov
adc
test
ds
xor
dec
jbe
mov
nop
jbe
or
cmp
or
xor
and
fwait
dec
js
je
hlt
jl
dec
inc
aaa
fdivrl
mov
loopne
out
cmpl
or
cwtl
loop
imull
ljmp
or
mov
pop
push
aaa
in
sub
jmp
xor
test
jne
fs
sub
cmpb
cwtl
mov
or
addb
mov
sbb
and
ret
mov
mov
mov
aaa
fisubrs
divl
aam
pusha
mov
pop
xchg
cmp
or
mov
dec
repnz
arpl
pop
add
push
jle
or
xchg
fwait
rcrb
cmp
dec
push
in
inc
insb
mov
adc
sarb
cmp
cmp
enter
cmp
cmp
cmp
lods
test
mov
pushf
cwtl
xchg
nop
cmp
cmp
mov
cmp
in
add
add
dec
inc
sahf
cld
adc
hlt
lock
pop
insl
dec
jo
gs
push
je
jo
dec
dec
mov
icebp
repnz
dec
dec
dec
hlt
cmc
div
dec
dec
dec
dec
clc
stc
cli
sti
dec
dec
dec
dec
cld
std
decl
dec
dec
loopne
loop
dec
dec
dec
dec
in
out
dec
dec
dec
dec
call
dec
dec
dec
in
in
out
out
dec
dec
dec
dec
rcl
rcl
dec
dec
dec
dec
aam
xlat
dec
dec
dec
dec
fcomp
fcmovu
dec
dec
dec
dec
dec
dec
dec
dec
rol
ret
dec
dec
dec
dec
dec
dec
dec
dec
enter
dec
dec
dec
dec
int3
int
iret
dec
dec
dec
dec
mov
mov
dec
dec
dec
dec
mov
mov
dec
dec
dec
dec
mov
dec
dec
dec
mov
pop
je
mov
nop
sbb
je
dec
je
pop
or
daa
sahf
push
jb
hlt
or
or
inc
lahf
inc
jb
push
arpl
or
or
arpl
mov
gs
imul
daa
cmpsl
nop
iret
adc
jl
inc
sarl
testb
jo
nop
push
dec
mov
ljmp
stc
mov
or
dec
jne
dec
dec
gs
outsl
jb
shrl
outsl
sti
jge
popa
aas
or
outsb
mov
sub
scas
add
bound
je
popa
insb
xchg
daa
pop
lods
scas
pop
scas
pop
mov
cmpsb
adc
mov
mov
or
outsb
adc
call
out
ds
jo
or
imul
enter
outsl
nop
insb
insb
mov
mov
popa
outsb
les
sub
jbe
cmp
lock
jb
insb
outsl
ja
push
and
aam
add
dec
lods
cmp
push
scas
js
push
mov
jbe
imul
mov
fcmovnb
ret
jle
sub
jo
inc
dec
sub
inc
jae
popa
rcll
scas
pusha
mov
fs
inc
sbbb
scas
ds
xor
mov
or
add
aas
or
mov
mov
popa
jae
ficoms
in
or
roll
mov
or
and
arpl
jae
dec
push
pop
adcb
popa
sbb
add
daa
xchg
push
dec
push
push
pop
insl
aad
jb
insb
gs
nop
movsb
scas
movsb
adc
push
and
inc
push
je
arpl
and
sbb
nop
add
add
sbb
push
fidivs
inc
pop
adc
ds
pop
mov
push
popa
jb
popa
outsb
mov
mov
mov
orl
popa
fsubl
push
mov
adc
push
fimull
or
mov
in
nop
jo
or
jo,pn
mov
jo
int3
int3
stc
fwait
nop
add
push
popa
data16
int
jmp
in
adc
cs
xor
lods
dec
jl
mov
invd
push
jns
push
inc
insb
jae
or
cmp
and
nop
cmpsl
mov
push
scas
lret
mov
mov
jbe
mov
test
or
mov
xchg
in
jmp
jne
or
jns
notl
decl
inc
xorb
ret
mov
and
div
dec
fiadds
push
fidivs
pushf
ljmp
jbe
add
mov
imul
pushl
sub
jmp
mov
dec
jne
push
xor
jg
mov
jnp
pushl
pushl
mov
testl
jb
cmp
in
movb
dec
inc
outsb
ret
push
shrl
clc
incl
and
fnstcw
orw
sub
mov
pop
push
flds
mov
mov
andl
jg
or
fildll
fistps
ret
pop
rcr
rcrl
fildll
filds
rorl
fildll
pop
jo
stc
mov
add
cmp
add
push
sub
and
jg
rcrl
loope
push
cs
ffree
dec
ss
clc
ffree
ffree
pop
xchg
sub
add
in
mov
mov
and
data16
inc
add
or
sbb
xor
sub
xor
push
push
add
adc
mov
mov
sub
inc
push
pushl
imul
adc
push
push
enter
fbstp
xchg
hlt
sbb
les
pusha
mov
push
fildll
aaa
mov
sbb
or
jg
push
test
jle
mov
mov
mov
xchg
dec
pushf
aas
xlat
inc
pusha
sti
jg
push
push
dec
dec
push
jg
inc
mov
pop
push
ljmp
dec
add
jnp
cmp
push
mov
std
imul
sub
dec
cmpb
jne
push
or
loope
not
mov
adc
add
mov
jge
inc
pop
pushf
add
pop
lods
fnstsw
dec
loopne
lods
pop
mov
cmpsl
xchg
and
lds
xor
pop
inc
dec
loope
scas
inc
push
lea
mov
or
inc
std
and
aas
push
xchg
push
push
dec
ret
mov
xchg
or
in
mov
fadds
sahf
cmp
add
push
cld
push
push
insl
lock
pop
cld
cmp
shr
in
ljmp
subb
sbb
mov
mov
xchg
mov
xor
xchg
ret
push
ss
cli
mov
mov
pop
push
cld
inc
fisubrl
enter
push
mov
xor
push
mov
xchg
sti
sbb
inc
sub
mov
mov
subb
fstps
inc
mov
addr16
cltd
out
xlat
mov
xor
or
pusha
fldenv
mov
cmpsb
je
mov
popa
jb
cmp
ja
sub
mov
jle
stos
test
jp
ljmp
dec
shl
mov
cld
fs
dec
ficompl
test
mov
push
add
shlb
push
cs
push
decl
fcoms
jbe
mov
cmp
rorl
lods
cmp
push
dec
mov
sbb
adc
movb
les
mov
and
movb
push
sub
mov
mov
push
dec
lcall
mov
cmp
mov
mov
pop
pop
out
sbb
jge
outsl
xchg
jg
scas
xor
mov
xor
ds
dec
add
jge
adc
cmpsb
push
or
je
push
dec
add
and
in
xchg
loop
clc
sub
mov
stos
sub
add
decb
sub
in
scas
in
cli
mov
es
and
lods
jmp
adc
sub
jno
sub
sub
incb
mov
push
push
sbb
mov
jae
xor
cmpb
push
aam
xchg
or
jae
sar
movsb
xchg
sbb
xchg
mov
rep
sbb
cmpl
incl
adc
push
std
dec
cmp
mov
adc
cmp
je
cmp
jb
cmp
ja
imul
sbb
xor
mov
add
and
in
dec
jle
flds
ss
shl
mov
ret
je
xchg
xor
and
ret
and
mov
cmp
lock
rcrb
lea
mov
lcall
pop
sarl
mov
push
arpl
pop
xchg
out
dec
jnp
or
das
pop
movsb
push
iret
ss
popf
cmp
stos
push
hlt
in
ficompl
fwait
cld
add
sub
loopne
dec
lock
cmp
mov
faddl
jno
ret
mov
inc
je
push
push
sbb
mov
xchg
jmp
push
pop
outsb
adc
jb
lahf
imul
adc
dec
flds
jno
ss
stc
lods
fistpl
add
mov
aad
data16
or
jmp
xor
inc
inc
out
sbb
je
and
jmp
mov
mov
sub
jne
aas
and
repnz
aad
sahf
push
mov
add
lock
cmp
dec
cmp
or
cmp
jecxz
dec
mov
sub
cmp
push
leave
mov
cmp
mov
add
insl
outsb
mov
dec
inc
je
mov
or
je
mov
inc
je
mull
dec
je
dec
jl
mov
mov
lock
ret
mov
sbbl
fdivrl
outsb
cmp
pop
mov
mov
mov
xchg
mov
inc
iret
dec
push
sub
xor
jmp
lret
add
aad
jg
addb
icebp
jb
push
stos
jo
pop
and
dec
xchg
sarl
into
push
pop
fs
xlat
decb
or
jo
orl
outsl
sub
xchg
xchg
mov
es
add
mov
fcompl
fisttpl
ret
in
mov
sub
push
popa
dec
fdivr
out
js
mov
data16
cmp
xor
clc
jl
jmp
gs
mov
xorl
push
xchg
jne
fsubrl
out
jge
pop
xlat
jmp
lea
cmp
cmp
popa
mov
xor
stos
or
cmc
mov
add
push
mov
neg
jmp
or
add
pop
jo
loopne
xchg
push
mov
divb
and
or
mov
inc
dec
lock
or
jg
dec
mov
adc
incl
stos
cmp
jne
pop
pop
shlb
xor
mov
decb
cli
mov
jl
mov
icebp
repnz
jl
mov
int
lds
es
add
add
add
daa
les
or
adc
jb
fdiv
add
js
push
out
cld
movzwl
sub
lret
sbb
push
daa
lea
or
mov
mov
xlat
in
fbld
incb
je
add
or
mov
pop
insl
mov
add
sbb
or
sahf
sbb
call
lock
lret
cmc
jg
in
xor
xor
dec
inc
dec
inc
dec
lods
cltd
fdiv
xchg
adc
mov
dec
jge,pt
xor
shlb
std
mov
aam
ret
outsl
mov
stc
std
jl
pop
sbb
ljmp
xor
stos
jmp
out
mov
mov
loop
movlps
pop
scas
jo
mov
inc
clc
dec
sub
shr
push
test
mov
cwtl
dec
sbb
stos
lea
add
leave
mov
mov
lods
rorl
mov
in
in
add
jb
mov
ret
add
scas
je
mov
dec
adc
fsts
div
mov
inc
test
jne
sbb
in
pusha
pop
or
jmp
adc
sti
or
mov
or
je
inc
jne
pop
jge
push
xchg
repnz
or
fdivrs
cmp
cs
mov
cmp
lds
jle
inc
je
mov
cmp
orb
dec
aad
sbb
addb
leave
clc
add
rolb
push
mov
test
out
push
pushf
add
inc
add
and
fcmovnu
sahf
out
and
adc
and
sub
inc
sub
jne
into
mov
sub
sbb
and
out
mov
sub
or
iret
mov
xor
sub
xor
andl
push
adc
adc
mov
repnz
push
pop
adc
push
cld
scas
shr
ret
movsb
cmp
testl
push
add
cmpl
add
movb
push
sub
movsb
adc
aas
imul
clc
adc
stos
pusha
jno
inc
out
fabs
push
or
dec
mov
rcr
scas
cld
push
fcomp
pop
stos
jg
fstsw
fwait
mov
testb
je
fidivl
jne
push
cli
call
push
fwait
mov
nop
shr
sub
add
in
add
push
cmp
fisttps
jns
mov
or
sti
in
pushf
or
cmpb
jb
movb
js
scas
mov
cmp
jmp
pusha
xor
rcr
loopne
adc
cmp
inc
xor
out
push
pusha
push
or
shr
mov
add
push
ret
xchg
out
fisubl
cmp
push
adc
dec
push
add
or
sbb
rorl
test
neg
orl
or
or
jge
xchg
or
adc
jl
mov
cmpsl
aaa
sub
incl
or
sbb
inc
loopne
push
dec
js
in
in
insl
or
arpl
int
clc
xchg
cmp
mov
cmp
setnp
or
sbb
hlt
pop
pop
sbbb
and
jne
dec
sub
cmp
dec
dec
jl
and
inc
ljmp
dec
adc
sub
movb
cmpb
notl
push
or
mov
mov
js
xor
iret
inc
pop
or
aas
lret
push
or
inc
call
xor
pop
sbb
or
cmp
inc
stc
inc
sub
push
add
push
jae
pop
rcl
outsl
scas
sub
add
shrb
pusha
ljmp
ds
fs
fildl
xor
jg
push
or
sbb
pop
pop
es
sbb
stos
test
sub
iret
jecxz
je
test
push
push
mov
adc
jbe
fnstsw
dec
popa
pop
loopne
out
jg
outsl
sbb
outsb
pushf
jp
push
push
mov
mov
adc
cwtl
fstpl
fidivrl
xor
sub
sbb
loopne
adc
movsb
fdivs
inc
add
into
pop
or
jl
xchg
inc
lea
movsb
push
sbb
enter
sub
cld
lock
and
sub
imul
adc
inc
loope
add
push
addl
mov
cld
mov
call
inc
adc
xor
movsl
push
and
or
or
pop
xor
xchg
mov
lods
out
js
and
jle
sub
sbb
rorb
push
push
fidivrl
cmp
lea
dec
lret
xchg
pop
lcall
inc
lock
stc
nop
inc
cmp
mov
inc
add
sub
mov
movb
jne
roll
sbb
pop
add
sti
cltd
idiv
int3
sub
push
in
insb
fbld
pop
in
in
dec
call
mov
in
into
loope
push
or
jg
push
ds
xchg
dec
mov
xor
test
outsb
mov
ss
dec
jmp
jl
je
xchg
cmp
inc
sbb
aaa
or
scas
lock
sahf
and
xor
sbb
jge
pop
xchg
jp
push
push
push
in
imul
pop
xor
mov
test
mov
imul
mov
push
loop
loop
cmpsl
mov
sub
movsl
sti
cmp
mov
fildll
cmp
add
pop
push
push
push
mov
mov
mov
dec
jne
push
push
xor
jns
xchg
imul
push
jb
pop
clc
movsl
adc
xor
mov
sbb
inc
ss
insb
pop
cmp
or
mov
cmp
or
and
clc
test
addb
shl
mov
or
repz
dec
push
cld
scas
outsb
xor
ljmp
je
sub
je
jg
push
imulb
pusha
lcall
lahf
push
xchg
cmp
jle
sbbb
sub
push
sbb
popf
fwait
pop
test
and
dec
push
cmp
sbb
loop
cmp
lods
lock
xchg
mov
inc
mov
mov
test
pop
cmovp
mov
add
jle
push
dec
add
xchg
aas
enter
add
push
mov
repz
pop
je
jne
xor
jb
ret
and
add
in
cmp
or
mov
sbb
jge
aaa
lds
add
sbb
mov
daa
jg
add
sub
dec
cmp
fidivrs
movsb
sti
cmp
push
lea
in
out
sbb
sbb
sbb
insl
dec
int3
scas
ljmp
and
aaa
gs
lea
xor
jmp
sub
gs
dec
mov
in
dec
test
rolb
out
mov
add
mov
pandn
or
repnz
xor
pop
loop
jp
sbb
enter
test
idivb
jl
ljmp
je
mov
sub
jne
cld
lock
inc
add
xor
pop
cmp
xchg
cmp
inc
jb
pop
pop
jl
sbb
or
movb
movsl
mov
call
push
iret
mov
rolb
enter
cmp
push
lea
sub
dec
mov
or
aas
add
mov
dec
ffree
loopne
mov
loope
pop
loope
mov
cmp
or
mov
lcall
cmp
dec
mov
push
stc
in
sbbb
in
in
add
xor
add
popa
mov
repnz
cmpb
xor
mov
pop
push
or
lds
lahf
test
push
outsb
ja
insl
or
pushf
icebp
in
clc
lea
add
stos
add
cld
mov
lret
test
jl
mov
sbb
out
ret
xchg
pop
sbb
xchg
jnp
and
pop
fistl
push
les
lea
push
sbb
jo
cs
stos
mov
jnp
jo
testb
xchg
fsubr
adc
pop
jo
clc
mov
nop
fwait
jle
add
dec
cmpb
pop
lods
ret
mov
test
add
push
arpl
adc
icebp
xchg
xchg
xchg
xor
mov
out
jbe
incl
inc
cmp
jg
cmp
sbb
pushf
test
pusha
dec
pop
movsb
inc
cmpsl
aad
sbb
pusha
pop
cwtl
pop
fimull
in
jo
pop
ds
jno
or
jg
or
push
push
sar
lret
push
adc
push
popa
pop
hlt
ljmp
or
sub
jnp
rorb
nop
and
add
les
cmpsl
cmp
cs
or
pop
loope
xor
adc
mov
cmp
xor
lahf
mov
mov
jb
mov
and
and
enter
sub
or
add
mov
movb
mov
mov
lock
clc
push
in
lock
fistl
dec
loopne
push
sbb
int
pop
jb
add
push
ret
out
lock
mov
subb
adc
popa
js
and
add
or
and
into
clc
enter
outsl
fldt
pop
enter
push
push
cmp
je
jmp
push
cs
aas
xor
inc
xor
lcall
and
add
push
imul
and
cmpsb
or
in
xor
adc
cmp
test
xchg
dec
jae
or
jl
mov
je
nop
push
sbb
adc
cld
add
nop
inc
sbb
lret
pop
add
inc
fcoml
inc
or
jge
xor
int3
mov
test
loope
stc
loopne
je
test
decb
testl
xorb
xor
xlat
add
ja
jae
or
fcmove
enter
ror
shll
mov
ret
sbb
push
jmp
lret
cmpsl
jl
xor
lret
enter
mov
push
lcall
je
in
pop
and
and
cwtl
or
mov
inc
aaa
sub
jmp
jb
jne
rolb
or
push
mov
or
and
loop
push
adc
pop
adc
xor
mov
add
mov
push
sbb
sahf
adc
cmp
pusha
mov
or
xchg
loope
jne
sub
pusha
add
lcall
mov
cvttps2pi
mov
cld
pop
addr16
add
movl
lods
insb
adc
rep
jne
sub
mov
or
in
jb
sbb
je
div
mov
mov
mov
mov
mov
cmp
shufps
int3
add
cmc
pushf
mov
subl
faddp
sbb
fidivs
ret
push
sbb
adc
and
adc
daa
pusha
insb
inc
add
mov
add
loop
xor
mov
adc
mov
or
and
mov
jne
sub
cmpsb
loop
or
jmp
push
out
ja
adc
adc
addb
mov
jno
lahf
clc
inc
ja
or
test
repnz
movsl
dec
adc
xor
push
or
inc
mov
jae
pusha
cmp
xchg
loope
jge
bound
into
imul
dec
daa
adc
js
dec
popf
xchg
or
or
stos
mov
add
in
mov
dec
dec
dec
in
js
push
mov
push
pop
inc
xchg
clc
or
mov
cmpb
mov
mov
sbb
jmp
mov
dec
jmp
dec
test
jl
mov
and
jg
testb
jns
dec
or
inc
test
jne
test
sar
add
adc
inc
ret
adc
push
std
out
sahf
cs
pop
jae
pop
add
repnz
mov
cmp
daa
dec
rorl
and
push
aaa
imul
dec
lock
pop
dec
and
loop
adc
jecxz
dec
les
jo
sub
fcmovbe
ljmp
sahf
scas
enter
sbb
add
int3
aam
es
adc
mov
push
jl
push
aam
jbe
mov
sub
jns
ret
dec
popa
sub
jb
je
add
pop
add
ds
jne
sbb
mov
hlt
hlt
sbb
lea
cmp
addb
dec
pop
mov
jl
pop
or
push
jmp
iret
jge
add
push
mov
fwait
aam
incl
inc
aaa
push
mov
sub
jb
inc
mov
cwtl
ljmp
sub
stos
sbb
lret
jne
add
cmp
jge
push
arpl
or
mov
mov
pop
xor
xchg
pop
fs
add
inc
or
cmp
inc
pop
repnz
jge
mov
dec
data16
enter
das
add
add
mov
or
arpl
xor
mov
cmp
xchg
push
inc
imul
add
lods
scas
mov
push
cmp
mov
mul
pop
hlt
test
pop
xchg
ret
mov
iret
ret
popa
mov
mov
outsl
lock
cmp
test
adc
adc
push
and
mov
mov
cmpl
xchg
rorl
mov
fimull
jmp
mov
int
bound
and
shlb
sub
outsl
ja
out
xor
outsl
std
sbb
jne
push
mov
jle
dec
xchg
cmp
inc
rcrb
lea
pop
movsb
ds
jge
stos
push
mov
addr16
mov
lret
jne
clc
cwtl
mov
or
sub
mov
xor
daa
sbb
mov
mov
mov
jle
cs
push
jg
in
dec
out
push
sbb
subb
sbb
sbb
repz
mov
dec
aam
adc
aam
cmpl
mov
push
fstps
sub
jb
sarb
sub
mov
push
sarb
sub
nop
in
int3
mov
inc
test
out
enter
lcall
aaa
outsb
mov
push
leave
sbbb
leave
xchg
ss
ret
adc
and
enter
pop
clc
mov
idiv
jne
add
push
mov
in
popf
in
push
cmp
sbb
or
add
ljmp
inc
mov
outsb
mov
insl
das
fs
aas
scas
insl
add
fs
ss
lods
and
jo
pop
jmp
xchg
push
movsl
std
and
and
push
dec
add
sbb
aas
pop
cmp
pop
push
jge
pmaddwd
jae
ds
mov
push
js
inc
sub
xor
adcb
addr16
add
in
push
mov
add
pop
cmpb
fsubl
mov
mov
dec
lahf
subb
clc
lcall
push
jg
imul
push
jo
arpl
js
add
xchg
nop
scas
movsb
andb
xchg
cmp
cmp
push
inc
fdivp
xor
js
mov
push
mov
sahf
out
pusha
push
cld
repnz
cmp
iret
jnp
out
dec
dec
inc
push
pop
cmp
repz
xor
sub
repz
repz
hlt
adc
iret
jae
orb
push
add
clc
icebp
jns
out
in
xor
fcom
jl
out
lock
enter
push
pushf
mov
mov
xor
cmp
ficoms
push
pushf
iret
leave
sbb
mov
xchg
lods
aaa
ja
daa
nop
notl
mov
cmp
les
cmp
jl
aam
cs
je
mov
test
cmp
out
in
push
daa
out
cmpsb
pushf
pusha
cmpsl
pop
movsb
pop
out
cmp
pop
push
add
dec
sahf
xchg
dec
dec
je
push
outsb
out
in
inc
adc
mov
bnd
cmp
xor
repnz
cmp
xor
pushf
mov
mov
pop
mov
stc
add
sbb
sbb
dec
sahf
xchg
cwtl
adc
adc
pusha
xor
mov
int3
cs
lock
hlt
ja
loope
or
mov
dec
out
adc
jo
or
aam
shl
xor
fsubrl
shrb
sbb
pop
jns
push
repnz
lock
adc
das
mov
lahf
ljmp
pop
loopne
shlb
sbb
nop
out
xor
rolb
or
add
and
cwtl
adc
inc
test
pop
cltd
sbb
in
test
sbb
push
inc
incl
loopne
sub
sub
inc
daa
cmp
cmpb
out
pop
lea
gs
jl
pop
push
data16
in
adc
jecxz
pusha
and
js
sti
or
xchg
cmpsl
or
push
enter
aad
mov
add
loope
test
notl
mov
and
push
repz
jne
cld
pop
mov
sti
pop
cmp
push
aas
cmp
jmp
stos
js
ss
aaa
aas
fwait
sub
iret
xorl
jns
mov
arpl
mov
sbbl
icebp
lahf
int
push
fimull
mov
sarl
cmp
loope
lahf
rcrb
stos
add
sti
fdivl
int3
jb
jo
mov
jo
jae
push
jg
push
aam
in
into
fsubl
outsb
aas
and
sbb
pusha
cs
jmp
mov
out
jge
xchg
mov
outsl
inc
into
sub
out
out
hlt
mov
inc
sub
sub
in
out
out
mov
cltd
clc
push
cmp
add
out
dec
fidivrl
lret
mov
jno
sub
mov
ds
fwait
xlat
sbb
in
fsubp
out
testb
scas
sub
in
pop
inc
adc
test
out
popa
xchg
xchg
adc
fwait
inc
sti
pop
mov
xchg
repnz
and
fwait
fwait
ss
sub
mov
std
insb
outsb
outsb
jns
fisubl
mov
test
mov
orb
out
dec
fidivl
xor
shrl
test
lret
pushf
jle
ret
and
jae
out
sub
out
dec
jbe
cmc
push
cmp
xchg
dec
mov
mov
dec
adc
jae
jae
or
test
sarb
jge
dec
jae
jae
and
divl
stos
mov
scas
mov
insl
je
pop
fimuls
push
std
pop
fisttpl
mov
jne
sbb
cmp
das
aaa
aaa
aaa
lahf
push
jb
mov
xchg
cld
lods
or
adc
aaa
aaa
aaa
std
push
inc
movsb
add
clc
pop
rcr
cmp
aaa
popa
arpl
jbe
xor
mov
into
xchg
mov
out
or
sbb
mov
inc
mov
fidivrl
cltd
out
mov
jne
xor
xor
out
out
lret
mov
add
pop
out
out
ds
std
enter
fnstenv
xchg
dec
insl
out
out
leave
shll
das
ss
imul
out
mov
add
es
cmp
fwait
cli
roll
xor
lret
int
aas
fwait
int
and
adc
lds
cwtl
sti
mov
cmp
std
insb
jle
outsb
lret
jle
xlat
push
sub
add
cmp
add
movsl
std
pushf
mov
pop
adc
xchg
fsubl
divb
mov
mov
xor
iret
out
in
mov
rclb
in
rcrb
jle
std
sahf
outsl
aam
cmp
jp
cs
push
ja
inc
lret
je
repnz
je
jl
js
mov
dec
imul
pop
xchg
xchg
idiv
mov
jmp
push
loop
dec
lods
jecxz
cmpl
movsb
mov
mov
pop
push
ret
cltd
sbb
mov
aaa
mov
adc
adc
cmc
dec
test
aaa
idiv
pop
loop
clc
fwait
data16
les
jge
out
addr16
cmp
shrl
mov
jle
aas
fwait
or
inc
cmpsb
add
fmull
aas
sahf
arpl
or
int3
jae
sti
fldcw
movsl
jno
mov
mov
pop
stos
or
jae
jae
push
cld
icebp
inc
mov
insl
fsubr
jae
jae
fwait
inc
pusha
ret
aad
lret
sub
test
outsb
int
mov
jge
pop
pop
fildl
inc
es
data16
fwait
fwait
fwait
fwait
cmp
jb
xor
xor
aas
fwait
fwait
popf
or
imul
cli
icebp
aas
popf
cld
enter
ss
aaa
pop
loopne
sbb
push
jno
cs
xor
ds
mov
sahf
imul
outsb
cmc
cmp
pop
aad
jae
shl
mov
sub
sub
adc
xor
jae
les
pop
and
std
insb
outsb
sahf
cmp
shlb
clc
adc
or
inc
imul
sub
fistpll
in
add
outsb
push
test
movsb
shlb
sti
pop
adc
or
insb
outsb
xchg
repz
mov
sub
out
jns
rorl
and
add
xchg
out
pop
mov
cwtl
pop
sub
xchg
mov
int
xor
sub
faddl
sti
jge
gs
or
adc
stos
inc
jle
loopne
mov
sub
cs
fdivrl
loopne
jo
leave
daa
jg
fnstcw
pusha
push
cmp
mov
dec
in
cmc
fsts
jb
pop
sub
test
mov
imul
dec
in
test
test
xchg
std
fwait
out
div
xor
adc
test
out
out
in
dec
push
scas
sahf
push
mov
mov
out
out
dec
cmp
pop
mov
and
cmpsb
test
out
sbb
add
push
mov
adc
fwait
fwait
fwait
out
dec
lods
mov
out
xor
fwait
fwait
fwait
fwait
sbb
movsl
cmpl
outsb
lahf
fwait
pop
or
xchg
mov
out
in
push
ljmp
test
test
inc
xor
and
aaa
sbb
fildl
je
or
aaa
aaa
aaa
jmp
dec
scas
or
add
ja
jnp
mov
and
aas
add
es
sbb
fcmovnu
enter
sub
push
hlt
xchg
dec
fwait
fwait
fwait
fwait
stos
or
icebp
pop
icebp
in
mov
fwait
fwait
fwait
imul
int
jbe
scas
fwait
fwait
fwait
fwait
stos
mov
adc
outsb
outsb
outsb
lahf
pop
cld
pop
dec
icebp
jecxz
mov
jp
jl
outsb
fidivrl
add
sub
jae
stos
test
fsubl
lods
or
inc
adc
mov
add
sti
pop
in
fidivrs
popf
dec
shlb
jae
ss
sub
jo
mov
cld
insb
outsb
cmp
pop
decl
rcr
fs
popa
int
je
jae
mov
and
mov
shll
gs
sbb
imul
jae
jae
std
fdivrs
xchg
pop
insb
into
xchg
jae
xor
jae
jae
xlat
aaa
sub
push
movsl
mov
jae
jae
bound
add
les
mov
push
into
sub
mov
addr16
mov
cltd
cmp
aaa
xchg
das
and
cmp
outsl
or
jae
xor
jno
lret
sub
ror
int
in
fldl
fcmovb
test
std
pop
inc
and
mov
int
inc
ss
clc
mov
jmp
das
mov
jle
rcll
fdivrl
cmp
popa
rcr
mov
cmpsl
stos
lcall
xor
xchg
repnz
mov
outsb
outsb
scas
clc
xchg
addr16
sbb
pop
mov
insb
inc
mov
or
aaa
aaa
aaa
out
ficoms
jbe
jle
ret
or
inc
adc
pop
mov
neg
lods
mov
or
das
in
jno
mov
jecxz
es
test
fsubr
mov
cmp
dec
scas
lock
sub
xchg
push
and
add
pop
imul
pop
ds
jl
lds
xorb
pop
pop
mov
sbb
loopne
xor
dec
stos
xchg
mov
dec
cmp
adc
xchg
enter
jns
shlb
add
mov
iret
subb
sti
jecxz
or
push
shlb
xor
mov
mov
cmp
roll
shr
xchg
out
imulb
outsb
or
xor
xchg
mov
outsb
outsb
aas
movsb
cmpsl
orb
sti
xor
sahf
std
outsb
outsb
outsb
outsb
andb
aaa
xchg
imul
jo
add
das
add
enter
sti
adc
mov
es
push
cmp
jae
aam
insl
mov
push
aaa
aaa
mov
es
shll
pusha
push
lds
aaa
aaa
aaa
aaa
lcall
and
neg
mov
fdivrl
mov
nop
push
ja
xlat
enter
clc
cld
insb
clc
fidivrs
xchg
add
pushf
cld
iret
clc
insb
outsb
into
pop
or
hlt
and
aaa
aaa
aaa
mov
out
into
lea
shl
imul
fdivrl
aaa
cmp
mov
int
stc
pop
addr16
daa
das
mov
xchg
ret
xchg
xor
int
in
sub
cmc
les
sbb
cmp
lahf
int
lcall
xchg
inc
mov
xor
or
aaa
aaa
aaa
aaa
xor
test
sub
aaa
aaa
fsubrp
arpl
and
out
cli
pop
mov
andb
push
dec
sub
mov
out
jb
and
fldt
outsb
outsb
mov
sbb
clc
push
mov
jl
outsb
outsb
dec
test
cmp
out
jg
xor
xor
pop
and
out
in
pop
mov
pop
test
js
mov
loopne
mov
out
mov
pop
push
daa
xchg
aam
js
out
out
rcrb
push
add
pop
lock
out
in
dec
add
push
mov
push
mov
mov
mov
ds
and
loop
ficompl
mov
inc
add
jnp
mov
jmp
pop
fstps
sbb
dec
lods
jo
sbb
fdivrp
icebp
insb
outsb
outsb
rorb
out
jno
int
int
insb
insl
mov
mov
cmp
arpl
notb
dec
stos
mov
push
xchg
in
and
cmp
nop
jge
repnz
mov
pop
adc
jne
jmp
fdivr
insb
scas
mov
dec
mov
and
faddl
daa
xchg
sbb
movsb
scas
mov
repz
dec
decb
out
stc
repz
in
push
add
jge
cld
jns
iret
and
cmpsb
into
mov
jo
add
lahf
out
in
push
jecxz
test
repz
add
adc
jle
cmp
sahf
inc
ficoml
add
add
out
adc
add
jl
inc
in
fstp
data16
repz
iret
add
adc
mov
jno
push
jge
loopne
fcmove
lahf
out
or
or
lahf
out
aas
call
arpl
ds
aam
repz
iret
add
addr16
cmp
out
mov
add
mov
sbb
hlt
aam
sbb
int3
push
shl
mov
fmuls
cli
loop
jno
push
addr16
out
in
loopne
sub
push
imul
mov
incl
push
cmp
dec
mov
aaa
ds
js
loop
int3
fs
jns
movsl
add
stc
cmp
add
xor
insl
leave
outsb
jns
iret
repz
popa
popf
leave
sahf
iret
enter
mov
lret
mov
in
clc
out
cmp
and
jl
iret
repz
add
imul
iret
out
repz
add
xchg
fisubrl
int3
xchg
fidivrs
insb
rolb
incb
cwtl
notb
and
mov
stc
repz
pop
out
mov
add
xchg
cld
jns
iret
or
jge
add
dec
jmp
adc
xchg
in
xchg
lahf
out
cld
xor
frstor
cmpsl
inc
mov
push
mov
nop
hlt
insb
cs
adc
push
jle
incb
inc
hlt
loop
cmp
pushf
fistpl
mov
hlt
mov
fistpll
sbb
aam
out
sti
mov
or
out
sar
push
je
rolb
nop
xor
mov
lods
sub
cld
adc
lea
sub
pop
arpl
xchg
mov
rol
iret
out
popa
shlb
and
or
daa
cmp
cs
fimull
movsb
jge
push
loopne
sarb
fstpt
std
pop
aaa
aaa
aaa
pop
sbb
xchg
inc
mov
cmp
aaa
aaa
xor
pop
enter
fwait
fwait
mov
das
out
test
ds
mov
sub
sub
sub
in
mov
jae
test
out
out
xor
jns
mov
mov
cld
lock
rorb
dec
adc
iret
out
push
adc
clc
dec
push
lcall
xchg
sbb
sbb
pop
xor
add
dec
addb
out
addb
pop
iret
std
mull
pop
add
aaa
aaa
mov
mov
jbe
xor
adc
or
aaa
aaa
mov
xchg
inc
test
pop
push
or
repnz
fwait
fwait
fwait
inc
mov
add
mov
fists
sbb
xchg
mov
leave
xor
mov
mov
and
add
ret
std
repz
mov
sbbl
fsubr
mov
jecxz
fbstp
push
scas
dec
xchg
mov
fwait
loopne,pt
xor
inc
ljmp
xor
fdiv
mov
loope
movsl
jns
hlt
push
ss
mov
loop
xor
and
outsb
outsb
pop
clc
jnp
cmpsl
pop
in
mov
adc
add
outsb
outsb
outsb
mov
or
mov
mov
das
rcrb
push
mov
xchg
stos
js
pop
lahf
or
pop
aam
or
decb
mov
mov
add
pop
fchs
inc
out
out
les
add
fs
sub
fcmovne
icebp
jne
jbe
cmpsb
push
pop
jg
jne
movsb
mov
cli
les
adcb
arpl
cli
jp
cmp
int
int
jge
test
jmp
lods
int
int
movsb
pushl
mov
cld
bound
int
sub
insb
cmp
aad
xchg
jmp
mov
dec
mov
mov
xchg
dec
add
fdivrl
jl
jno
lock
adc
icebp
popf
hlt
repz
dec
xor
and
insb
push
mov
repz
mov
imul
mov
xor
das
les
pop
aaa
fsubrs
xchg
aaa
fdivrl
jbe
aas
xor
jno
lods
xor
hlt
lret
loope
cmp
dec
mov
int
adc
pop
leave
lds
aaa
pop
pusha
mov
pusha
cmp
idivl
scas
insb
jle
aaa
and
mov
iret
imulb
test
daa
stos
jbe
shrb
sahf
fwait
add
ss
xor
out
add
and
call
incb
mov
sbb
mov
mov
fldenv
adc
or
jl
push
fdiv
fwait
lahf
push
test
and
ds
jbe
imul
adc
aad
lods
or
jae
mov
push
rcrb
or
dec
mov
ja
int3
mov
fs
sahf
mov
mov
pop
push
mov
test
pop
adc
adc
cltd
dec
xchg
orl
repnz
sub
dec
mov
mov
xorl
lea
aaa
pop
sbb
jmp
rolb
fstps
ret
out
cmpb
xlat
push
jecxz
cltd
add
cmpb
xor
clc
pop
mov
ret
or
xor
out
mov
sbb
xchg
inc
mov
jp
pop
add
jbe
jbe
es
dec
aaa
aaa
aaa
aaa
jmp
cmp
insl
pop
jg
ds
aaa
aaa
aaa
cmp
mov
into
xchg
bound
aaa
aaa
aaa
add
dec
push
sarb
sti
cmp
adc
cmp
inc
mov
jecxz
jae
rcrl
popa
jle
int3
mov
test
fstps
push
sahf
test
inc
clc
xchg
lock
jae
jae
mov
cld
cmpsl
jno
fsubrl
jmp
push
ss
pop
push
sub
inc
mov
aas
push
cwtl
add
testb
adc
divb
sarb
jo
jnp
pop
es
insb
mov
or
js
sub
adc
insl
scas
movsb
push
scas
jae
shll
inc
mov
inc
out
cwtl
cmp
push
jge
movsl
decb
call
nop
addr16
jl
inc
sahf
mov
addr16
iret
aaa
xchg
and
cmp
jp
sbb
fnsave
incb
jae
movl
xchg
ret
push
dec
mov
stos
push
mov
jae
out
mov
xchg
cmpl
jp
addr16
sub
data16
jns
and
mov
and
dec
data16
loope
insb
mov
gs
push
sub
lea
sbb
sub
mov
lods
daa
xchg
sahf
fwait
sbb
jns
in
les
test
add
xchg
push
xchg
test
xor
addr16
jge
scas
dec
sbb
in
xchg
cmpsl
push
iret
and
dec
xor
mov
aad
shl
fldcw
adc
lahf
mov
sti
push
dec
add
inc
mov
out
cli
xor
int
mov
fdivrs
out
xor
adc
shlb
and
mov
mov
addr16
mov
fcmovne
out
mov
sti
clc
inc
mov
add
outsb
outsb
outsb
xchg
jecxz
rorb
das
inc
cmpsb
add
adc
xchg
test
jns
out
jl
loop
dec
lahf
sbb
or
sub
inc
mov
addr16
jae
repnz
iret
cmpsl
xor
sti
lods
les
add
notl
aaa
sub
adc
fdiv
jp
sub
mov
sub
adc
and
ljmp
fnstenv
mov
mov
cmpsb
cmp
aaa
xchg
lods
dec
test
aas
fcmovne
out
jmp
jp
sbb
mov
jae
add
test
push
mov
jns
in
pop
sahf
inc
insb
pop
push
cmp
mov
jbe
xor
jl
pop
sub
pop
xchg
sub
sarl
fstps
orb
shrl
sarb
mov
arpl
xor
mov
addr16
mov
fdivrs
out
pop
push
aas
pushf
sti
cmc
mov
mov
mov
add
push
out
decb
fwait
inc
jnp
dec
mov
clc
cltd
in
mov
out
out
push
push
and
fcmovnbe
sbb
dec
jl
decl
fdivl
incb
faddl
add
cs
jae
xchg
lods
adc
fdivp
jge
adc
cmpsb
xchg
clc
cltd
ss
or
push
decb
push
ret
shll
push
and
mov
push
pop
cmc
std
insb
or
pop
push
in
jmp
push
int
fildl
mov
add
fldenv
movsl
mov
adc
ja
xchg
out
sti
pushf
cmp
inc
mov
out
out
xchg
leave
push
lods
dec
out
xor
add
push
idivb
int
or
loope
and
gs
cmpsl
sahf
lea
sub
scas
fcoms
nop
xor
jne
mov
out
stos
out
jge
add
mov
out
out
push
lea
iret
jo
mov
out
out
hlt
xchg
xlat
js
mov
out
out
and
arpl
lret
adc
nop
xor
int
int
push
negl
mov
int
int
loop
and
popw
test
ljmp
int
cmpxchg
pop
jbe
mov
pop
cli
fwait
cmp
jle
shlb
ljmp
enter
addr16
arpl
mov
cs
sbb
fwait
fwait
fwait
fwait
jno
cmc
pop
cld
pop
or
fwait
fwait
fwait
fwait
out
jmp
jecxz
negl
push
fwait
fwait
shll
ljmp
outsb
aas
sub
cmp
in
outsl
inc
test
aaa
cmp
test
test
adc
aaa
aaa
aaa
cli
add
mov
jnp
sti
jb
jbe
aaa
aaa
aaa
aaa
xor
mov
jl
xor
cmp
fdivrl
aad
bound
shrl
cmp
sbb
jae
jae
inc
sub
lds
loopne
jae
mov
ljmp
push
rep
aas
fwait
sub
push
pop
aam
fstl
pop
lods
sbb
add
pusha
mov
int3
ss
mov
mov
js
int
xchg
jno
cs
xorl
sbbb
ds
xor
arpl
mov
out
fmull
jmp
rcl
or
aas
or
jbe
test
xchg
mov
or
outsb
or
pop
mov
add
adc
out
out
and
icebp
mov
xchg
bound
stc
aaa
dec
mov
jae
mov
jbe
ret
push
jecxz
and
and
out
inc
sbb
rcrl
iret
out
mov
cmpsb
add
shrl
adc
outsb
outsb
outsb
mov
stos
dec
lret
fisttpl
mov
outsb
outsb
outsb
add
nop
push
lahf
add
data16
insb
outsb
outsb
pop
int3
out
push
mov
pop
push
imul
adc
incl
mov
sahf
cmc
mov
js
out
mov
fdivrs
not
mov
jnp
lods
push
hlt
fistl
sti
and
cmp
or
fwait
inc
fadds
jle
mov
outsb
outsb
mov
mov
popa
call
outsb
inc
leave
rorl
out
jmp
out
mov
pop
pop
xor
adc
out
out
jmp
mov
inc
xchg
cltd
out
out
sbb
in
dec
pop
or
loop
mov
lahf
dec
push
push
aaa
lret
mov
mov
dec
iret
mov
cmp
sbb
insb
das
xor
outsb
out
cli
adc
ja
cmp
out
dec
popf
testl
xor
stos
push
lahf
int
inc
or
jne
push
dec
xor
clc
fmull
and
mov
mov
int
mov
pop
clc
mov
test
xor
add
pusha
cmp
fsubl
pop
cmc
repnz
pop
sub
aaa
das
lret
sti
outsb
adcl
in
ret
adc
jae
mov
push
insb
sti
or
sar
jle
lea
andb
pop
mov
cs
loope
jae
pop
out
lret
push
sub
jno
jae
dec
mov
sub
push
or
mov
mov
dec
outsl
out
mov
xchg
ror
xor
dec
mov
pusha
adc
out
cli
arpl
outsb
test
mov
inc
clc
insb
jge
scas
cmp
xchg
outsb
outsb
aas
pusha
push
out
xor
int
sbb
outsb
outsb
dec
leave
cmc
repz
into
xor
loop
jne
out
jnp
pop
sub
jbe
push
push
mov
jno
out
out
sub
fisubs
jp
int3
sbb
scas
push
imul
sahf
cli
outsb
aas
fwait
fwait
jb
aam
push
jno
stos
popl
inc
outsb
outsb
outsb
outsb
gs
add
mov
outsb
outsb
outsb
outsb
scas
dec
jge
shll
push
dec
xor
outsb
shrl
shlb
and
mov
je
sub
pushf
add
dec
jle
jecxz
mov
bound
jo
mov
jae
mov
testb
push
gs
out
out
aad
and
jae
lahf
mov
mov
out
out
pop
jne
inc
jle
mov
or
test
stos
mov
dec
inc
pusha
in
push
mov
fwait
fwait
fwait
inc
xor
sbb
or
mov
insb
outsb
aas
fwait
rcll
mov
sub
jns
mov
mov
movb
fsubs
xor
xchg
jns
enter
mov
xor
add
cltd
inc
insb
outsb
scas
clc
rol
xchg
lcall
fnsave
test
lock
clc
dec
stos
push
scas
call
pushl
add
scas
jp
fldt
aam
jecxz
testb
sahf
iret
out
out
out
jmp
loope
cmpsl
xchg
inc
fwait
lods
push
mov
adc
aas
fwait
fwait
or
mov
stos
fnstcw
arpl
xlat
mov
pusha
lock
sarb
orl
sti
icebp
lods
ss
push
jl
ds
mov
shl
xor
jnp
jle
mov
adcb
loopne
jae
arpl
pop
repnz
push
cld
aas
into
pop
ljmp
loopne
push
sbb
les
xor
bound
shlb
shlb
xlat
stos
pop
fildl
cwtl
xchg
push
sahf
jge
pop
xchg
fwait
fwait
fwait
rorl
push
dec
pop
push
push
mov
fwait
fwait
fwait
adc
xor
and
push
inc
in
mov
sbb
lret
insb
dec
addr16
add
mov
inc
mov
repnz
adc
pop
daa
sub
sub
outsb
fisttps
clc
jl
in
ja
adc
xchg
outsb
outsb
xchg
push
mov
push
jge
outsb
outsb
mov
movsl
lods
or
test
ja
sbb
sub
int
in
jae
and
inc
les
lea
addb
fdivrl
int
pop
add
loopne
in
jbe
fdivrl
mov
xor
pop
rclb
dec
xchg
frndint
cmc
fmul
sti
iret
jge
jb
mov
cli
dec
lret
mov
adc
inc
fdivs
jae
push
stos
jle
push
es
mov
es
int
lahf
fwait
mov
jae
or
mov
cmpsl
push
mov
std
insb
outsb
in
in
pusha
not
add
jo
out
mov
jg
mov
xor
aas
sbb
push
shr
pusha
jns
aas
fwait
fwait
push
pop
call
je
loop
aaa
mov
int
or
mov
cmp
popa
mov
sub
push
sbb
mov
jae
jae
pushf
repz
sbb
fstpt
jae
push
xchg
arpl
pushf
out
addr16
or
xchg
jmp
clc
inc
fistps
mov
repnz
sbb
cmp
fwait
pushl
lahf
cmc
mov
imul
loop
ljmp
icebp
fcompl
xchg
xchg
inc
jo
icebp
rclb
dec
clc
fdiv
or
push
lods
ret
push
repz
out
fstps
add
xchg
xchg
sub
out
jae
jae
pusha
andl
js
out
std
mov
jae
jae
and
out
xchg
jbe
mov
int
in
test
mov
repnz
ret
int
int
scas
test
pop
jge
popa
add
lahf
int
loop
outsb
dec
dec
mov
lock
out
mov
xor
push
cld
mov
mov
sbb
pop
pop
mov
int
xorl
hlt
jge
mov
jmp
inc
aad
mov
cmc
mov
dec
shll
jg
cmpsw
jle
mov
lcall
es
imul
dec
scas
fs
es
bound
ss
mov
into
int
mov
inc
popa
push
ss
mov
mov
loopne
int
out
icebp
cmp
adc
aam
jle
aaa
into
icebp
push
adcl
enter
cs
fstps
and
bound
cwtl
fwait
or
sub
stos
clc
inc
fisubrl
jp
mov
mov
mov
mov
std
add
jmp
int
in
addr16
mov
les
cmp
int
fwait
popa
icebp
lahf
lcall
stos
iret
int
int
fstpt
push
push
shlb
jae
mov
fmull
inc
into
jae
int
int
pop
xchg
in
and
addr16
outsl
adc
idivb
lods
push
lahf
int
adc
ret
popf
push
lahf
sub
and
outsb
cs
pop
cmpb
aam
enter
sub
jl
outsb
sti
test
pop
pushf
fidivrs
pop
sbb
cld
jle,pn
in
outsl
insb
sub
jmp
jns
inc
movsb
rclb
sti
sahf
pop
jae
setae
mov
addr16
jae
in
scas
daa
ja
lcall
shrl
aam
adcb
outsb
jp,pn
std
enter
add
jne
jnp
outsb
outsb
outsb
outsb
cmpsl
xchg
dec
dec
dec
sbb
js
andb
outsb
outsb
outsb
dec
pop
nop
or
test
outsb
fnstcw
icebp
jo
orb
cli
out
push
outsb
stos
jo
xchg
fdivrl
aaa
aaa
stos
jo
jg
sub
hlt
and
cli
bound
dec
xor
cs
out
cmpsl
int3
int
test
cmpsb
sahf
mov
addr16
out
pop
popa
jmp
mov
cmp
and
fwait
fwait
fwait
fwait
scas
lret
add
movb
push
fwait
push
sahf
xchg
bsf
fwait
fwait
fwait
fwait
daa
rclb
cltd
add
int
lahf
fwait
clc
lds
jns
mov
int
int
fwait
pusha
adc
xlat
idivl
dec
int
int
jge
pushf
xor
and
rcrb
int
inc
test
sahf
jmp
jmp
mov
je
push
div
scas
cmp
iret
scas
push
jo
scas
push
rcl
gs
cmp
sub
mov
arpl
mov
cmp
jnp
lahf
fwait
fwait
addr16
stos
sub
das
cli
adc
int
in
mov
xchg
cmp
cld
cmp
push
aaa
aaa
mov
pop
push
jne
out
test
mov
jecxz
dec
mov
in
jns
jnp
push
scas
dec
xor
div
movsb
mov
ss
mov
sti
push
fs
add
jp
jl
mov
or
ljmp
mov
test
int3
inc
outsb
xor
ret
dec
in
push
cld
loopne
xlat
push
aaa
cmp
cwtl
testb
or
ss
je
push
imul
adc
mov
xchg
je
xor
jne
or
push
fwait
in
mov
sub
shlb
and
jmp
clc
pop
jmp
sub
ljmp
pop
or
xchg
adc
mov
mov
je
scas
in
and
add
loope
mov
mov
ficompl
dec
imulb
scas
adc
jp
cmp
arpl
mov
inc
clc
insb
cs
int
mov
cmp
negl
adc
adc
int
lea
adc
and
sbbl
dec
jne
mov
div
sub
add
mov
xchg
in
gs
idivb
xchg
and
mov
push
fistps
mov
cld
filds
cmpsb
insb
fidivl
test
fwait
xchg
int3
icebp
lds
xchg
mov
mov
or
pop
aad
iret
lret
ja
mov
mov
adc
int
rorl
int
sub
or
jle
aam
in
fmulp
int
int
call
sbb
dec
xchg
mov
or
imul
stos
repz
es
mov
fwait
sbb
xchg
fisubrl
aad
cld
cltd
fmuls
daa
int3
bound
inc
dec
into
mov
xchg
xor
lahf
fwait
fwait
test
test
aaa
shlb
xor
icebp
orl
fadds
sbb
cli
adc
roll
iret
in
add
rorb
xor
add
or
test
xor
jae
outsl
loopne
and
shrb
jae
cmp
iret
into
imul
fwait
adc
jae
jae
mov
nop
imul
jb
jae
rcll
push
pavgb
mov
outsb
outsb
cs
mov
push
std
decb
add
cmpl
outsb
outsb
outsb
lds
jl
ret
test
das
jne
dec
or
add
mov
jmp
fcompl
in
das
test
insl
push
dec
in
dec
test
push
fs
ds
fwait
lea
adc
sahf
leave
mov
ss
aam
jl
inc
out
mov
mov
xorl
fimuls
insb
outsb
outsb
outsb
sub
add
imul
dec
hlt
sub
imul
int
shr
loope
mov
loope
ss
mov
inc
nop
or
or
aad
sti
cmp
add
inc
lcall
mov
js
xchg
movsb
and
jae
jae
in
sbb
rcr
out
add
sub
push
mov
jae
push
hlt
mov
sbb
adc
out
jae
pop
xchg
push
xchg
pop
adc
outsb
outsb
outsb
lahf
sbb
pop
sahf
movsb
clc
arpl
fs
and
int
mov
mov
jle
xchg
push
jno
dec
outsb
inc
mov
test
pop
mov
or
pop
imul
mov
ficoml
insl
push
fisubs
xor
push
jle
jl
aaa
sbb
mov
in
jae
mov
push
dec
push
pop
mov
sahf
cmpsb
mov
int
ror
adcl
stc
out
outsb
pop
ret
jl
dec
inc
mov
in
cld
cs
adc
or
aaa
rol
in
arpl
jp
sbb
aaa
aaa
mov
dec
mov
xchg
test
jae
sub
cwtl
xor
fadd
mov
pop
lods
cmp
frstor
push
dec
mov
mov
in
in
inc
lods
fs
ljmp
mov
cmp
sarb
push
popf
xchg
or
cmp
fwait
fwait
clc
and
and
cmpsb
push
movsb
add
insb
scas
jo
cmp
mov
out
pop
lock
aam
mov
jne
mov
cltd
adc
pop
repz
in
xor
xor
pop
jmp
cltd
pop
orb
inc
adcb
sub
pop
out
out
push
jge
ds
adc
mov
andb
iret
out
outsl
mov
test
mov
scas
jne
scas
cli
fdivl
std
fsubrl
push
add
mov
out
outsb
outsb
outsb
xchg
mov
mov
cmpsl
jp
outsb
outsb
push
dec
adc
push
mov
icebp
insb
out
rorb
iret
mov
ja
aaa
aaa
mov
sahf
loopne
xchg
adc
into
mov
aaa
dec
jmp
in
pop
or
fdivrl
aaa
sahf
stos
ss
push
mov
clc
lret
loopne
fucom
decl
lea
jbe
sub
add
inc
leave
movl
out
cltd
stc
fists
sti
int3
jmp
je
dec
es
xor
xor
mov
das
dec
or
in
mov
clc
ss
out
dec
mov
cmp
dec
aam
scas
andl
jmp
aaa
aaa
aaa
mov
rcl
cmp
xchg
and
sbb
push
push
ds
aaa
out
xlat
jb
mov
xchg
fwait
fwait
fwait
fwait
inc
sti
adc
enter
fnstcw
lahf
fwait
scas
xchg
push
hlt
push
or
loope
fucomi
call
sti
je
repnz
pop
mov
mov
popf
inc
jne
fwait
jle
test
insb
ret
push
sbb
push
pop
cmc
das
in
fwait
fwait
fwait
fwait
mov
fsubr
sub
mov
arpl
push
or
ss
mov
jge
loopne
popa
dec
adc
jnp
push
les
inc
inc
mov
xchg
push
sbb
dec
fidivrl
ss
aaa
aaa
aaa
cmp
cld
dec
mov
loopne
test
mov
xchg
xorb
mov
aaa
mov
mov
xor
ret
push
mov
and
aaa
aaa
aaa
aaa
es
lcall
outsb
add
aaa
mov
xor
addr16
jnp
mov
cmp
out
mov
mov
int
adc
scas
jbe
popa
xchg
shrl
int
arpl
aam
and
fbstp
aaa
aaa
mov
mov
insb
push
filds
cltd
jmp
aaa
js
sti
jecxz
jae
inc
loopne
mov
ljmp
sbb
leave
inc
insl
inc
cmp
fucomi
mov
out
dec
loopne
rcr
aam
mov
outsb
aas
lds
xor
fwait
xchg
adc
aaa
aaa
aaa
aaa
and
jle
pusha
inc
fisubrl
jne
aaa
aaa
aaa
cmp
mov
lods
xchg
test
pop
ss
aaa
aaa
lret
xor
dec
data16
xchg
fwait
fwait
sbb
sbb
fcmovu
pop
sub
lods
gs
mov
cmc
mov
std
add
and
jl
pop
out
aas
int3
mov
enter
insb
jae
iret
ret
leave
push
inc
xchg
ss
mov
hlt
sti
jge
int
jae
popa
xor
sub
lret
pop
aaa
aaa
mov
inc
outsb
not
cmpb
mov
xor
sti
jge
scas
lods
inc
and
lahf
or
cmp
and
shll
sbb
mov
mov
sub
clc
cmpsb
push
push
mov
jle
mov
out
mov
vaddsd
lahf
sbb
iret
push
enter
pop
outsb
jle
aaa
idivb
pop
dec
daa
add
and
jge
cld
insb
xchg
test
lods
popa
ja
mov
jb
js
jge
xchg
nop
xchg
adc
sti
subl
roll
cmp
jae
jae
femms
ret
outsb
les
push
mov
in
addr16
pop
sub
xchg
or
adc
pop
fdivrl
sbb
pop
adc
inc
sahf
in
cmp
jp
fsubl
insb
pop
jbe
xchg
gs
mov
dec
jnp
daa
daa
std
pop
outsb
scas
cli
fnstcw
imulb
outsb
outsb
outsb
outsb
arpl
jbe
lea
dec
and
mov
insb
js
add
sub
insb
outsb
mov
or
xchg
das
inc
roll
push
adc
lcall
loope
jae
repz
xor
int3
dec
pop
inc
mov
loopne
jo
xchg
fisubs
fldt
loopne
mov
adc
bound
fwait
fwait
fwait
fwait
out
xchg
es
xchg
into
dec
add
fisttpl
fwait
fwait
fwait
daa
outsb
rcl
pop
cmp
addl
fwait
jl
pusha
add
inc
lret
jnp
fwait
fwait
fwait
fwait
test
lds
stc
cmpps
and
dec
xlat
jmp
inc
add
subl
lahf
shrl
testl
je
shrl
pop
or
pop
insl
push
sub
loop
jae
xchg
jecxz
bound
sarb
loope
mov
and
aaa
fmul
test
movsl
mov
mov
mov
ss
dec
clc
cmc
lds
jnp
ret
add
ret
mov
mov
stos
jecxz
cs
js
or
vpaddusb
xchg
pop
cmc
pop
sbb
pop
cmp
mov
icebp
mov
mov
fnsave
push
add
mov
sti
jge
scas
les
popa
and
jae
jae
mov
aaa
jmp
sti
and
in
lock
negl
pop
ss
sahf
fistpl
jne
dec
in
clc
jno
xchg
sub
gs
jmp
pop
notb
mov
mov
scas
jp
mov
jb
xchg
mov
pop
cmp
xor
jl
push
inc
dec
adc
into
ss
aaa
ja
stos
xchg
stc
mov
xchg
loop
jp
jl
push
movsb
sbb
adc
and
insb
outsb
fdiv
pop
iret
sbb
int
fistl
lock
mov
dec
mov
jl
fwait
jmp
mov
jmp
cs
sbb
aaa
aaa
xlat
scas
out
xchg
sbb
fwait
insb
cmp
pushf
test
outsb
outsb
aas
fwait
rcl
add
or
in
addr16
arpl
lcall
adc
xor
mov
out
add
loopne
cmc
mov
xor
push
loope
cmp
out
add
data16
outsb
ds
jbe
and
xchg
and
jns
ror
push
movsl
dec
in
inc
sbb
insl
shl
pop
push
aaa
mov
int
idivb
pop
mov
dec
mov
or
cmpl
test
xchg
hlt
dec
xor
jo
mov
pusha
repz
mov
jne
daa
aaa
aaa
aaa
aaa
mov
pushf
xchg
test
xchg
adc
push
mov
mov
and
fwait
or
cmp
pop
cmpsb
dec
mov
pop
mov
sub
out
filds
or
push
test
in
mov
push
or
std
xchg
xchg
mov
mov
insl
and
inc
addr16
mov
xor
sub
les
subw
jae
aad
mov
sub
andnps
das
mov
or
adc
mov
fwait
fwait
mov
jnp
pusha
arpl
or
aas
fwait
fwait
and
fimuls
pushf
int
sub
or
lock
jle
stos
sbb
adc
ljmp
out
jg
or
in
sub
adc
push
pop
sub
imul
cmp
xchg
stos
or
fstps
shrb
scas
inc
jo
ds
xchg
xchg
mov
jo
xor
mov
pop
iret
int
xor
mov
xor
sub
mulb
insb
xchg
ret
hlt
or
pop
iret
mulb
mov
fwait
fistpl
test
pop
xor
push
cmp
repnz
pop
fwait
fwait
fwait
fwait
int
mov
adc
xor
fwait
adc
cs
inc
sbb
cmp
fwait
fwait
fwait
fwait
pop
test
aam
int
push
mov
stos
xor
inc
in
in
jno
push
call
fwait
fwait
fwait
jo
pop
lcall
xchg
stos
scas
lea
sub
fsubl
mov
rcrb
sahf
lahf
int
addr16
inc
and
adc
sub
outsb
outsb
popf
mov
jnp
insb
fwait
xor
aaa
std
insb
les
jbe
or
cld
jmp
scas
lahf
aaa
aaa
aaa
aaa
rcrb
sbbl
mov
or
fldt
jl
sub
push
mov
aad
idivl
cmp
xchg
or
jae
imul
mov
fnstcw
sbb
call
pop
mov
stos
fdivs
jae
jae
add
pop
sbbl
add
push
neg
bound
out
lahf
xor
pop
push
push
mov
ror
iret
jae
sti
movsl
xchg
jle
mov
es
jae
in
addr16
ja
cmp
data16
push
clc
mov
in
inc
iret
xchg
push
dec
sti
jle
mov
fdivl
xchg
adc
movsb
and
negl
xor
lea
lea
out
mulb
cmp
fcom
jb
lret
cmp
inc
mov
jl
negb
dec
ret
enter
add
cmp
stos
cmp
sbb
mov
cmpsb
mov
adc
js,pn
and
mov
dec
xor
xchg
push
psubd
loop
mov
inc
jo
fdivrl
clc
cwtl
mov
or
push
sbb
jae
sti
movsl
jb
int
in
lret
sbb
out
lahf
in
mov
mov
stos
fidivs
sbb
inc
xlat
adc
pop
stos
sbb
jae
data16
es
push
stc
pusha
js
push
jmp
mov
lret
je
test
and
mov
mov
repz
int
push
es
push
insb
mov
xor
cmp
outsb
outsb
lahf
fneni(8087
mov
loop
xchg
fwait
xchg
dec
push
cmp
mov
and
shll
loop
fs
aas
js
movsl
adc
dec
cmpsl
arpl
sub
loope
cs
fdiv
mov
pop
inc
push
lret
jmp
sbbl
cmc
jge
jge
call
leave
pushf
sbb
jnp
lahf
in
sub
sbb
push
pop
cltd
xchg
push
outsb
pop
js
ficompl
fisttpll
pusha
imul
daa
mov
lahf
cmp
jbe
sbb
scas
out
mov
popf
cs
dec
add
fdivrl
arpl
mov
or
adc
loopne
mov
inc
fidivrl
fdivrl
and
sub
loope
pop
andb
cmp
push
stos
iret
xchg
mov
xor
mov
cmpsb
cmp
xor
scas
mov
mov
dec
ljmp
gs
hlt
mov
pop
push
pop
daa
adc
fmul
pop
pop
sahf
jl
lret
dec
outsb
outsb
outsb
pop
mov
and
jbe
sbb
pop
jl
test
fldenv
push
inc
sbb
lret
flds
ss
lock
cltd
fists
std
add
push
inc
adc
sub
xchg
movsb
mov
dec
and
dec
inc
shr
mov
pop
push
mov
sbb
jmp
cs
and
xlat
lcall
movsb
ss
xor
jae
jae
outsl
and
push
sub
sbb
test
jae
out
pop
inc
xchg
pop
scas
jmp
int
int
mov
ja
shrl
int
add
cltd
jl
lret
gs
dec
add
cmp
inc
jae
jae
push
mov
cmp
jecxz
loopne
loope
jae
jae
sub
in
xorl
mov
jae
jae
and
test
mov
mov
loopne
and
test
in
loope
addr16
arpl
inc
aas
andb
mov
shlb
je
mov
je
je
rcrl
xorb
int
in
int
hlt
jnp
sub
imulb
test
pop
stos
mov
pushf
cmp
xchg
mov
jecxz
mov
mov
int
fwait
pop
ret
lcall
cs
cvttps2pi
jge
cmp
and
inc
mov
rclb
mov
dec
dec
xchg
pop
mov
jo
mov
cmp
cmc
jns
and
fdivrl
adc
fnstenv
int
in
jns
fcmove
jl
xor
loope
push
pusha
je
or
push
and
inc
call
jnp
rcrb
sub
fisubrl
mov
lds
push
and
mov
repnz
add
push
sub
insl
test
jns
jmp
icebp
enter
lods
fdivl
lcall
inc
jle
ret
add
jae
dec
sbb
mov
pop
xlat
adc
mov
movsl
into
jp
jecxz
cli
cld
mov
lods
inc
aaa
aaa
aaa
aaa
rolb
inc
push
mov
cmp
ds
aaa
jge
je
xchg
fwait
fwait
fwait
fwait
adc
lret
loopne
push
out
inc
pushf
fwait
xlat
mov
cld
mov
mov
jle
mov
pop
mov
xchg
xchg
mov
movsb
sbb
ja
pop
rcrl
mov
xor
aad
movsl
lock
add
inc
cmp
out
mov
mov
outsb
cli
add
sub
mov
stos
call
dec
push
ficoms
out
sub
jp
dec
push
xor
loope
push
out
rorb
mov
shlb
cmp
int3
aas
dec
fdivl
rcl
sub
mov
fistps
popl
out
pop
and
aaa
aaa
aaa
aaa
push
sub
sub
pop
fdivrl
aaa
aaa
addr16
add
rcll
sti
fcoml
or
and
jg
dec
adc
and
add
pop
xchg
out
cmp
stos
add
aaa
cld
insb
adc
pop
add
inc
add
inc
mov
fisubrl
pushf
cmpl
cli
fildl
cld
stos
push
adc
icebp
cmpsl
cs
fsubr
mov
outsl
pop
loope
faddl
into
data16
test
or
fucomi
roll
sub
test
mov
mov
jnp
cmp
cmpsb
out
mov
mov
jle
sub
fcompl
fidivs
sbb
mov
jae
pop
cli
fwait
push
jnp
data16
jae
int3
inc
add
add
loop
mov
mov
adc
lcall
popa
ds
mov
aaa
sbb
fimull
std
mov
adc
mov
mov
and
loope
subb
mov
pop
xchg
and
sbb
out
testb
popf
out
stos
mov
xchg
jno
popa
insl
into
int
das
movsl
mov
mov
cmp
mov
decb
xchg
pop
or
mov
idivb
adc
jecxz
movsl
mov
xchg
out
out
xchg
and
pop
andb
pop
dec
cwtl
scas
mov
out
jl
pop
push
aaa
mov
es
iret
and
xchg
dec
add
jb
jb
jae
adc
push
xchg
lock
xchg
hlt
mov
sti
sahf
mov
inc
ljmp
sub
cmpsl
xor
push
cmp
insb
aam
jbe
pop
es
fcompl
jl
pop
push
pop
lcall
mov
call
cld
push
pushf
cmp
push
pop
icebp
mov
movsl
pop
sarl
lret
fisttpl
imull
fcmovb
ja
jle
pop
mov
test
aas
mov
jae
jae
test
les
stc
mov
addr16
or
js
jns
push
mov
imul
jnp
lahf
daa
jl
jo
and
adc
shrb
testb
adc
insl
lods
aas
jno
stos
lcall
mov
xor
scas
jle
dec
and
lods
lock
aas
fwait
fwait
and
ret
imul
push
divb
lcall
test
in
out
out
fidivrl
rclb
jae
xlat
gs
pop
mov
in
mov
jmp
shll
into
out
add
lahf
jle
iret
int3
or
push
dec
orl
sbb
jae
ret
daa
cmp
scas
cld
movsl
lock
sti
jge
inc
sbbb
mov
les
or
jge
insl
lahf
sub
outsb
outsb
outsb
outsb
push
shll
ljmp
mov
das
shrl
sti
fsubrl
mov
xchg
mov
adc
mov
test
hlt
lds
jae
jae
inc
nop
mov
sub
addr16
or
aas
dec
pop
push
fnstenv
add
loope
jle
inc
and
pop
aas
aam
pop
pop
shrl
outsb
dec
pop
lods
icebp
lcall
pop
mov
js
into
push
jmp
iret
jg
pop
icebp
mov
insb
sub
mov
hlt
adc
loop
mov
int
or
addb
or
and
xor
jle
cmp
ficoms
cld
jb
push
mov
sub
sbb
bound
push
mov
aas
mov
int
mov
xor
sahf
arpl
js
inc
push
sub
movsb
iret
adc
adc
loop
sub
pop
xchg
fwait
fwait
fwait
stc
jmp
mov
cmpsl
aam
jle
xchg
ds
jle
test
adc
push
mov
mov
ja
mov
aad
test
out
aaa
aaa
aaa
lods
les
ror
popf
hlt
int3
test
dec
push
pop
hlt
add
sbb
pxor
and
sbb
pop
not
jb
popa
adc
out
popf
sahf
int
aas
sub
shlb
movl
loopne
jmp
sti
imul
cmp
mov
mov
movsb
xor
hlt
jecxz
jae
push
scas
test
cmp
xchg
xchg
add
lret
push
jae
sub
fwait
fwait
fwait
out
push
test
cmp
cltd
push
rolb
lock
insb
cmp
jle
xor
mov
adc
or
arpl
cmpl
dec
fisubl
mov
mov
hlt
cmpsl
icebp
mov
das
rorl
into
dec
out
out
addr16
out
ja
int3
imul
fcmovne
push
mov
dec
orb
xorb
inc
fdivl
js
nop
std
mov
add
js
clc
mov
fbld
add
cmc
cld
insb
outsb
outsb
rorb
test
sub
imul
enter
hlt
inc
in
scas
ljmp
xchg
fadd
push
mov
int
jae
pop
inc
inc
adc
inc
adc
mov
int
inc
sub
xchg
mov
or
outsb
jp
cmp
ds
repz
cmp
mov
loop
loope
loop
push
fwait
fwait
mov
out
sbb
inc
cli
mov
jle
add
push
roll
mov
mov
cs
inc
push
bound
pop
fs
mov
push
xchg
add
fiaddl
jmp
jecxz
mov
mov
imul
pop
int3
jg
ljmp
es
mov
in
in
mov
test
jmp
add
cmc
mov
mov
jle
iret
es
inc
xchg
mov
iret
jo
clc
fsubl
pop
xchg
int
jae
stos
testb
cld
insb
pop
xchg
mov
sbb
inc
popa
xchg
sbb
cmp
sub
cwtl
add
or
scas
mov
cs
ja
jl
leave
cli
insb
outsb
outsb
test
fdivl
shll
xchg
jo
jo
xor
out
cmpsb
mov
jb
mov
out
fs
mov
jnp
jg
xchg
ss
and
mov
push
xor
xchg
mov
loope
movsl
addb
push
test
push
mov
lea
movsb
pop
jae
jae
mov
pusha
adc
mov
jl
sbb
and
add
or
lahf
mov
out
sti
adc
mov
ja
add
fimull
aaa
movsb
and
add
std
insb
outsb
xchg
es
insb
das
jne
push
jmp
mov
cmp
ret
add
es
sbb
lahf
mov
out
out
and
mulb
out
out
mov
mov
movsl
inc
jae
shl
xchg
jl
cltd
popf
enter
jae
or
jecxz
pop
aam
aaa
aaa
mov
mov
imul
sti
jle
mov
cmp
fsubl
clc
cmp
loopne
jae
or
lcall
int3
pop
idivb
jle
adc
fwait
stos
test
movsl
and
cmp
adc
loope
aaa
mov
push
and
dec
or
mov
push
and
jle
in
add
or
movsl
xchg
or
jno
stc
fdivl
mov
pop
cmc
adc
jae,pn
mov
sahf
push
sbb
iret
ds
aaa
mov
bound
cmp
lcall
fwait
fwait
fwait
sub
mov
sti
jae
push
pop
mov
repnz
addb
rcrb
jo
mov
mov
test
in
fldt
faddp
testb
clc
sbb
iret
int
lahf
dec
movsl
mov
outsb
out
sar
sbb
pop
pop
aam
lahf
int
pop
sbb
data16
cmpsb
sbb
fwait
cmp
stos
sub
fbstp
in
adc
and
dec
pop
les
jle
fwait
shrl
ret
pop
iret
out
lret
lahf
bound
sahf
inc
fldenv
aaa
iret
jp
stos
test
jle
mov
aad
mov
out
ljmp
xchg
sub
xlat
xchg
sbb
rolb
cmp
mov
mov
popa
sub
cmp
out
out
fs
push
and
dec
test
out
test
fsts
xor
pop
sti
push
sbb
insl
rclb
mov
shrb
sbb
aaa
loopne
adc
or
and
divb
scas
xlat
es
xchg
xchg
out
mov
inc
test
imulb
jg
int
out
xor
and
mov
int
int
leave
cmp
dec
jnp
cmp
pop
adc
adc
dec
cs
cmc
test
push
sub
mov
iret
ds
mov
or
cmp
pop
add
add
dec
inc
xor
into
aaa
aaa
mov
stos
mov
inc
rcrl
dec
push
xchg
xchg
pop
add
jle
aaa
adcl
out
jbe
sbb
iret
call
sbb
dec
xor
jl
iret
int
xchg
lahf
inc
mov
outsb
outsb
pop
inc
in
sahf
jl
int
fdivr
push
dec
push
in
mov
addr16
or
inc
pop
adc
mov
sub
xchg
inc
ret
cld
fneni(8087
jae
jmp
or
sub
test
xchg
out
jae
in
jae
jae
cmp
push
scas
dec
or
cmpsl
ss
xchg
dec
insb
outsb
mov
lods
out
ljmp
ds
cli
repnz
xchg
push
sub
xor
and
sbb
aam
sbb
iret
in
jae
inc
test
xor
test
pop
sub
out
or
mov
in
out
icebp
shl
inc
sarl
push
inc
jo
popa
cld
clc
and
jno
subl
int
in
pop
and
ljmp
jecxz
aaa
aaa
mov
adc
lcall
hlt
jae
dec
out
clc
push
cmp
lods
data16
adc
outsb
outsb
outsb
outsb
mov
pop
or
faddp
push
repnz
pop
fdivrl
jge
scas
inc
addl
outsb
cs
pushf
out
lret
imul
push
push
adc
fwait
rol
xchg
lea
lock
mov
fwait
sub
shrl
dec
mov
int
int
out
push
mov
repz
sbb
int
int
cmpsb
add
xchg
sbb
cmp
hlt
inc
aaa
aaa
mov
enter
jle
repz
int
mov
fcomip
jge
repnz
xchg
mov
xor
cmp
mov
cmp
mov
out
data16
iret
adc
iret
int
inc
cmp
popf
mov
adc
push
out
out
loopne
call
insl
sub
xlat
jo
into
out
fs
stos
call
outsb
cs
rorb
mov
mov
add
outsb
outsb
sbb
push
inc
mov
mov
notl
and
dec
mov
jge
mov
int
mov
lea
out
push
mov
push
loop
jmp
iret
xchg
lret
mov
inc
xchg
sahf
sbb
ds
scas
inc
mov
sub
sti
jle
dec
repnz
fwait
adc
subb
jae
jae
xor
sbb
das
lret
mov
call
adc
jo
xchg
or
jae
jae
dec
ss
cmc
cmp
jge
mov
shlb
add
outsb
outsb
scas
clc
push
pushf
clc
xchg
ss
scas
and
adc
outsb
outsb
outsb
outsb
repnz
pcmpgtd
pop
mov
cmp
push
addr16
jp
out
out
movsl
adc
xchg
es
mov
out
out
aas
out
dec
jg
sbb
ja
outsb
jg
push
push
fisubl
pop
icebp
pop
js
fsubrs
daa
jle
adc
mov
cld
sub
icebp
xor
int3
clc
arpl
sub
jbe
inc
pop
adc
cli
adc
out
out
or
xchg
movb
iret
jge
mov
mov
mov
ljmp
xor
mov
testl
loopne
cltd
push
sti
filds
ds
aaa
pop
xor
cmpsb
repz
add
mull
movsl
icebp
and
push
stc
popf
dec
out
out
pushf
mov
cmpsl
mov
mov
out
cs
test
mov
iret
out
or
jle
add
movsb
enter
das
mov
pop
aam
lods
jp
testb
and
clc
shl
mul
loop,pn
js
imul
imul
sub
mov
adc
sahf
dec
mov
adc
fwait
fwait
fwait
fwait
xchg
push
lret
clc
test
pop
adc
fwait
dec
iret
mov
stos
aad
dec
push
add
push
aaa
aaa
push
std
enter
jle
mov
xlat
and
sahf
mov
aaa
dec
add
inc
stos
in
jle
cli
loope
std
xchg
rcrb
push
das
testb
clc
or
jnp
lret
jge
pop
and
int3
call
out
cmp
gs
mov
xor
rcr
mov
mov
pop
clc
mov
inc
out
mov
xchg
push
mov
jge
outsb
jg
xchg
add
out
test
add
xchg
loope
xor
mov
fsubp
out
mov
jp
in
insb
mov
mov
iret
out
sbb
push
sbb
cmp
jbe
cmp
fwait
fwait
insl
mov
ret
pop
mov
push
outsb
outsb
outsb
outsb
cmp
adc
pop
daa
adcb
xchg
nop
mov
popa
js
inc
inc
cld
fisttpl
jecxz
mov
jno
mov
fwait
fwait
fwait
sub
inc
push
fdivs
outsb
lahf
and
pcmpeqw
xor
adcl
out
scas
push
xor
adc
push
fcompl
xchg
roll
mov
ja
es
fdivrl
das
adc
cltd
sub
push
xor
hlt
mov
into
out
xor
imul
cmpb
les
push
cld
insb
outsb
outsb
lods
aam
and
arpl
mov
hlt
fdiv
inc
sahf
jecxz
icebp
enter
int
int
pusha
les
push
dec
sub
aaa
mov
fisubrs
jno
repz
inc
xor
mov
rolb
ss
push
out
add
sub
fmul
out
out
sbb
adc
mov
sti
push
out
adc
jbe
outsb
mov
jl,pt
iret
and
getsec
mov
xchg
mov
cmp
jmp
pop
test
and
dec
repnz
lock
sar
idivl
xor
shr
sub
ljmp
mov
mov
popf
hlt
or
dec
or
cmp
test
mov
int3
pop
clc
clc
fmull
sub
or
add
xor
sub
negb
lahf
mov
sub
jo
push
cli
fdivr
mov
inc
mov
push
and
outsb
outsb
and
loop
sub
lds
inc
insb
outsb
outsb
outsb
jae
mov
cmpsl
jg
gs
icebp
dec
std
repnz
fiadds
add
ljmp
out
mov
xchg
dec
mov
or
jae
jae
nop
negb
lret
inc
lea
ds
loop
loope
sbb
mov
sbb
mov
mov
jae
dec
sbb
sbb
out
sbb
data16
loope
cmp
cmpsl
sbb
into
xchg
jae
paddsb
xchg
ds
shlb
rcl
jnp
mov
cli
adc
outsb
aas
adcb
lods
daa
clc
sbb
ljmp
rolb
out
add
lock
insb
lahf
push
xchg
mov
mov
cmpb
adc
sahf
fwait
fwait
or
sub
test
push
pusha
add
mov
mov
pop
cmp
sti
ds
pop
cmc
mov
add
arpl
push
movsb
pop
aas
fisttpl
dec
fldcw
xchg
arpl
xchg
neg
inc
lret
int
aad
mull
enter
push
out
out
mov
xor
sub
js
pop
aam
pop
xor
call
out
out
mov
or
out
out
dec
scas
fwait
mov
push
sbb
pop
aam
mov
pop
jbe
dec
mov
mov
mov
cwtl
lahf
pop
stos
pop
outsb
clc
ficompl
jmp
aad
adc
xchg
out
std
insb
dec
mov
push
cmc
sbb
push
popf
fldt
cmp
inc
mov
mov
cmpsb
mov
popf
ds
mov
xlat
aam
fmull
cmp
pop
xor
jae
jae
jne
xor
orb
push
int
inc
loop
jae
stos
or
adc
sub
mov
push
xchg
adc
out
adc
xchg
inc
movsb
xor
lods
out
sbb
mov
out
mov
out
addr16
inc
inc
or
out
out
lock
pop
jle
movsl
dec
lahf
iret
out
out
pusha
add
fs
ja
push
ficomps
dec
xchg
das
jle
cmc
out
mov
adc
fwait
test
fnstcw
sub
int
pushf
xchg
adc
js
adc
in
fisubrs
and
mov
lea
push
lahf
stos
mov
out
out
mov
je
repnz
push
test
iret
out
out
and
push
inc
pop
cltd
into
es
push
shrb
xor
push
jne
inc
inc
jle
jae
test
gs
out
out
outsl
xchg
dec
sub
xchg
addb
add
cli
or
pandn
insb
xchg
into
cmpsl
pop
jmp
jle
in
lret
sbb
push
inc
push
out
add
dec
xchg
cmp
mov
out
xchg
ds
and
out
sahf
mov
int3
mov
ds
mov
es
in
daa
test
jmp
inc
or
jae
sbb
repz
dec
bound
cld
mov
push
mov
jp
shlb
test
sub
fsubrl
into
add
sbb
xor
pop
push
or
sarb
jnp
pcmpeqd
clc
or
pop
sub
ds
aaa
cmp
cwtl
xchg
jle
mov
fwait
fwait
fwait
fwait
inc
ja
and
xor
fwait
cmp
aaa
ret
scas
mov
fmul
int
int
incl
ds
arpl
iret
int
int
ljmp
mov
pop
mov
lods
push
jge
loop
inc
dec
out
xchg
jg
mov
std
shlb
mov
or
aaa
shll
or
adc
insb
dec
mov
jle
aaa
aaa
popf
jae
aad
inc
inc
into
or
fwait
neg
jbe
mov
jae
push
cmp
pop
push
pop
fistpll
hlt
lock
aaa
inc
imul
dec
push
xchg
cmc
loopne
cmp
ss
and
scas
pop
adc
out
push
sbb
clc
dec
arpl
ljmp
enter
test
and
cmp
xor
jecxz
out
mov
xchg
jecxz
lret
lcall
and
into
cmp
cmp
dec
clc
into
stos
xor
cmp
cmp
push
in
mov
xchg
shl
out
fildll
xchg
xor
test
pop
pop
ret
iret
out
xchg
push
add
in
pop
inc
dec
lock
nop
mov
je
iret
in
xor
mov
xor
inc
scas
xor
jle
mov
adc
ja
test
cli
sub
and
push
in
jae
fsts
ficompl
std
clc
lret
sbb
out
mov
xchg
icebp
pop
mov
fucomip
pop
int3
fstpl
push
xor
adc
aad
dec
sub
jae
xchg
hlt
loop
daa
lock
jle
adc
mov
ss
pushf
popa
out
fldl
call
dec
lahf
mov
xor
clc
enter
inc
outsb
fs
mov
lock
cs
into
pop
jno
xor
out
out
gs
in
push
sbb
push
ja,pt
jge
iret
out
out
pop
or
or
xchg
cli
fcompl
fbld
pop
testb
les
repz
out
xor
fs
pop
cmp
ds
inc
loope
mov
push
pop
iret
out
inc
pushf
cmp
mov
and
inc
xchg
idivb
shl
negb
xchg
sahf
inc
xlat
insl
inc
jle
ret
loop
mov
inc
mov
movl
icebp
aaa
mov
sbb
bound
dec
pop
push
sar
aaa
aaa
aaa
xor
add
inc
and
bound
ja
fistpll
jae
insb
adc
dec
mov
outsb
outsb
imul
aas
mov
jecxz
iret
pop
cs
or
in
insb
sub
notl
push
hlt
sbb
idiv
sahf
or
fidivl
or
out
fidivs
fildl
stos
add
add
adc
in
fwait
fwait
fwait
fwait
enter
sub
out
fwait
fwait
fwait
fwait
xorb
mov
lods
movsl
dec
call
outsb
sbb
call
sarb
sbb
and
fstpt
mov
ret
iret
pushf
stc
sub
push
outsl
int3
out
jbe
push
sahf
or
hlt
sbbl
push
xchg
cli
mov
shlb
les
clc
ds
ja
push
jg
cmpsl
shrb
fcompl
or
lds
in
test
adc
jnp
rcrb
int
int
std
sbb
notl
shll
mov
sbb
add
dec
jbe
jnp
lds
sahf
movsl
lahf
int
femms
push
test
outsb
outsb
cs
bound
push
adc
clc
sub
insb
outsb
sub
and
inc
pop
aad
imul
test
fcompl
subl
mov
outsb
outsb
jg
pop
and
rorl
lea
mov
push
jb
and
filds
xor
adc
push
dec
stc
or
pop
test
mov
lcall
inc
in
iret
int
iret
aaa
out
out
jb
imul
and
cli
fdivrl
sub
movsl
add
insb
outsb
outsb
cs
push
ds
dec
loop
pop
jmp
insb
std
imul
lock
aas
cltd
sbb
fwait
lds
fidivrs
dec
or
std
fsub
repz
addr16
pop
add
popf
xor
xor
je
xchg
mov
insb
cmp
adc
sbb
or
movsl
loop
and
out
out
iret
js
inc
xchg
xchg
mov
dec
pop
ret
out
out
inc
pop
mov
pop
popa
lcall
fcmovne
out
push
xor
xchg
sub
fildl
sahf
pop
lahf
xor
les
lods
inc
aas
fisttpl
mov
xchg
test
push
nop
jno
push
jae
jae
push
repz
jmp
push
jae
jae
pop
lahf
mov
mov
jae
jae
adc
lock
fs
daa
mov
jae
jae
shr
cltd
and
clc
lret
stos
inc
inc
mov
in
cs
out
out
mov
addr16
jl
sbb
shrb
jo
hlt
add
mov
mov
xchg
popf
mov
cltd
fcomps
jbe
notl
bound
sbb
loop
sub
out
and
cltd
fcos
jmp
iret
out
ds
mov
xchg
rol
js
dec
es
loop
outsb
lahf
fwait
ror
adc
fs
dec
movd
outsb
pop
adc
addr16
out
jmp
outsb
xchg
ret
mov
inc
inc
push
in
testl
aam
xorb
int
icebp
cmp
out
nop
mov
sbb
int
adc
lret
push
lahf
xor
je
mov
push
pop
rcll
aas
cmp
pushf
mov
add
int
fbstp
idivb
shlb
inc
jns
mov
fldt
test
adc
or
aam
outsb
outsb
outsb
mov
mov
mov
loop
outsb
outsb
outsb
jl
lea
mov
jl
outsb
outsb
outsb
outsb
lea
jp
inc
mov
icebp
lret
mov
adc
pop
shlb
mov
add
negl
outsb
outsb
outsb
outsb
lds
dec
mov
mov
outsb
outsb
outsb
sahf
xor
push
mov
imul
shl
lret
mov
mov
ja
xor
dec
das
sbb
pop
cli
pop
mov
fs
xchg
lahf
fcmovne
out
mov
mov
outsb
add
out
testb
add
cmpsb
pop
dec
fcmovne
and
dec
dec
in
add
adc
add
sub
lcall
fwait
add
insl
fldlg2
loop
xchg
mov
sahf
or
fs
out
testb
test
cwtl
pop
mov
mov
ret
out
shrl
pop
out
xchg
or
loop
test
into
xor
sbb
repnz
outsb
add
and
ret
inc
sbb
xchg
xchg
xor
int
aam
jl
pop
inc
inc
and
inc
dec
jp
iret
int
test
pushf
or
jo
jae
xchg
stos
out
scas
fadds
movsb
push
jge
push
sub
ret
sbb
outsb
outsb
outsb
outsb
sbb
pusha
mov
aas
and
mov
outsb
outsb
outsb
jbe
aaa
roll
jns
sbb
idivb
push
mov
insb
sti
xchg
ss
rcl
aam
or
fdivrl
pop
call
shl
cmp
fcompl
loop
mov
fldt
js
int3
test
jae
push
xchg
sbb
out
xchg
push
jnp
ret
adc
sub
inc
iret
int
int
push
out
sub
pop
adc
cli
sub
push
shufps
mov
cmp
notb
sahf
lock
ljmp
push
outsb
aas
sbb
repnz
out
inc
pusha
lods
enter
xchg
outsb
outsb
outsb
outsb
push
nop
popf
dec
shll
add
push
add
std
insb
outsb
outsb
inc
mov
add
sbb
repnz
mov
rcl
mov
int
icebp
jns
hlt
xor
fildll
xor
int
in
leave
or
pusha
xchg
push
test
int
int
pop
dec
xor
scas
xor
mov
int3
xlat
iret
mov
add
js
in
testl
pusha
xor
pop
mov
mov
dec
mov
adc
sbb
cmpsb
inc
insb
pop
cmpsl
filds
jo
push
iret
int
aas
inc
js
jmp
cli
adc
push
adc
cwtl
insb
pop
stos
or
decb
mov
adcb
icebp
mov
std
or
cmc
pop
jecxz
dec
jns
cmovge
add
aaa
fstpt
ljmp
inc
mov
int
jae
cs
mov
or
repnz
shl
push
inc
lahf
int
and
in
mov
aam
clc
jle
loopne
loopne
push
aam
ljmp
mov
test
jl
jge
outsb
out
inc
mov
jbe
aam
popf
out
fidivs
insb
hlt
ja
dec
jno
fwait
fwait
fwait
cltd
mov
sub
lods
and
sbb
fwait
fwait
imull
mov
ja
ds
bound
jl
cmp
inc
das
out
inc
cmp
adc
out
out
outsl
add
mov
jae
jae
addr16
and
xchg
dec
out
pop
test
adc
iret
cmp
out
out
jecxz
iret
push
shrb
mov
pop
shlb
push
inc
add
negl
outsb
das
icebp
icebp
das
fimuls
mov
or
outsb
push
pop
xor
addb
out
divb
inc
es
xchg
popa
lea
in
xchg
add
ss
jp
aas
pop
jmp
inc
or
dec
mov
and
lock
mov
push
aas
jl
jecxz
cs
xlat
jle
sub
movb
and
scas
cmp
leave
xor
mov
jnp
inc
test
daa
cwtl
lods
cltd
in
out
scas
mov
sbb
rcrl
ret
rcll
mov
jge
in
pop
xor
dec
sbb
outsb
out
ljmp
mov
add
aas
mov
jno
dec
jae
fnstcw
nop
push
pop
cmp
test
lahf
inc
mov
imul
xor
inc
out
out
repz
dec
jp
fwait
inc
in
mov
shl
ret
scas
cmc
test
daa
mov
in
cmc
push
and
sahf
int
or
hlt
mov
ljmp
dec
xor
test
or
in
xor
adcl
jae
sti
enter
xor
xor
jae
jae
push
cmc
outsl
pop
adcl
test
sahf
insb
sbb
scas
mov
push
xchg
mov
or
xlat
xchg
aaa
aaa
pop
bound
jo
adc
push
adc
outsb
outsb
jle
cmp
xchg
sub
pop
sub
testb
outsb
sub
xor
fistpl
sahf
int3
fidivrs
std
xlat
mov
int
int
gs
rcll
out
testb
cmp
loopne
das
push
scas
iret
rcrb
nop
lock
test
jecxz
sti
add
mov
inc
cmp
fcom
leave
icebp
xor
ss
mov
in
jbe
mov
sub
jle
xchg
mov
loope
mov
sti
fsts
mov
in
adc
pop
fdivrp
fldcw
mov
lds
cmp
jnp
mov
call
sub
and
ret
push
xchg
inc
cs
neg
jle
dec
rcrl
mov
mov
mov
out
cmpsb
and
xor
mov
sbb
xchg
push
mov
sub
into
xchg
add
dec
sbb
sub
iret
divb
pushf
test
push
shll
xchg
sahf
or
jle
mov
fdivrl
jbe
jnp
sub
pop
cmpsb
jp
fcompl
pop
icebp
pop
call
mov
dec
jae
jae
pop
jp
jp
xor
inc
lods
addr16
lods
mov
popf
add
idivl
loope
adc
mov
iret
mov
rcrl
or
pop
jg
sub
jmp
mov
fnstsw
aaa
ds
mov
cltd
sti
dec
int
jb
insb
sub
cltd
pusha
inc
fidivs
sti
xor
push
inc
roll
cld
inc
out
jae
stos
subb
pop
cmp
lods
addr16
out
lds
in
xlat
add
inc
jle
mov
repz
jmp
fwait
fwait
mov
pusha
jg
sbb
jge
ds
push
mov
lahf
test
mov
mov
loop
sbb
mov
stos
pop
xor
pop
inc
dec
sub
add
es
mov
lcall
sub
dec
int
nop
dec
test
inc
insb
outsb
outsb
aas
add
adcb
fs
jp
mov
divb
inc
loope
divl
in
jae
testl
and
bound
pop
hlt
ljmp
push
push
mov
aam
xchg
repz
push
rorb
mov
dec
inc
add
fwait
icebp
and
cld
bound
jbe
mov
pop
stos
dec
mov
mov
test
xor
pop
xchg
fs
out
scas
or
adc
cmp
imul
cli
pop
andb
rcl
inc
jg
test
mov
ret
cmpsb
cld
pop
test
shll
cmc
inc
mov
jae
sarl
std
mov
jnp
cmp
mov
cli
outsb
in
cmp
in
addr16
xchg
push
mov
out
iret
aad
pop
shlb
lcall
in
out
sub
mov
mov
mov
add
roll
pushf
fwait
fwait
cld
dec
pusha
daa
or
mov
fstps
and
test
clc
fwait
fwait
fwait
fwait
jmp
jecxz
jbe
repz
outsb
lahf
fwait
movsb
data16
test
cmpsb
aas
mov
mov
xor
jns
dec
sbb
call
push
ds
jbe
add
xor
xor
aaa
aaa
jle
scas
cmpsl
in
orl
mov
jl,pt
test
dec
xor
iret
les
cmc
cmp
mov
mov
fwait
sub
cmp
aas
pop
pop
testl
fistps
out
clc
shlb
and
outsb
outsb
outsb
sub
and
pusha
xchg
mov
aaa
jl
pop
xor
push
jg,pn
lcall
call
jg
cmp
iret
int
lretw
push
dec
out
cmp
rcr
fdiv
jo
pop
jo
icebp
push
sub
in
and
movsl
dec
or
sub
ret
dec
pop
xor
or
icebp
jo
nop
mov
mov
mov
sub
mov
lock
aam
shr
add
and
das
fsubrl
stos
xlat
daa
loope
dec
daa
push
sbb
jae
loope
pop
jo
cli
fwait
cmc
sub
outsb
outsb
outsb
sbb
stos
loope
shll
fs
mov
std
leave
xor
xor
mov
jmp
jg
fwait
fwait
jmp
mov
sbb
popf
repz
push
in
xor
lods
addl
fwait
fwait
sub
addr16
in
pusha
xchg
and
fwait
int3
lret
sbb
jb
mov
pushf
fwait
fwait
jmp
mov
dec
xchg
or
ficomps
push
mov
out
arpl
in
dec
scas
pop
enter
out
sti
pop
out
movsl
subb
pop
dec
mov
int
xor
mov
push
mov
rcl
cs
insb
ss
int
stos
and
es
loopne,pn
jae
cmpb
inc
pushf
clc
sahf
int3
ss
jae
jae
dec
mov
lock
dec
mov
jae
or
inc
test
pop
lds
ficoml
sbb
push
jecxz
call
int3
out
mov
jge
pop
fdiv
xchg
fwait
add
sub
nop
push
adc
fcoml
sbb
jg
movsb
loop
jp
out
notb
subb
repnz
mov
jbe
xor
cli
mov
inc
loopne
cmp
sub
mov
clc
add
lret
mov
dec
jge
mov
shl
nop
lds
adc
cwtl
cli
lock
lret
pop
imul
push
in
cmp
or
inc
push
in
push
lret
xor
pop
mov
outsb
push
mov
inc
mov
das
fxtract
mov
mov
test
int3
xor
jge
aas
jmp
push
mov
push
fmull
fcompl
pop
bound
out
and
out
loop
sbb
mul
mov
jp
cmp
or
cli
loop
clc
fldlg2
xchg
scas
pusha
sbb
mov
cwtl
pusha
mov
mov
xlat
shl
mov
hlt
mov
jo
test
jle
int
mov
xchg
mov
jl
push
inc
dec
mov
push
test
dec
fistpll
sub
int
xchg
popf
mov
push
push
push
or
lret
int
dec
addr16
cmpsb
and
bound
imul
xchg
in
lcall
fdivl
loop
shl
sbb
clc
mov
enter
dec
mov
test
mov
add
in
or
orb
or
les
iret
mov
cmpsl
notb
push
cmp
int
int
ds
mov
ret
mov
mov
pop
lock
lods
adc
sarb
sub
jae
test
adc
jae
jae
arpl
sbb
stc
mov
dec
dec
jae
jae
cwtl
xchg
mov
push
sub
sbb
movl
ds
cmp
sti
mov
add
pop
icebp
lret
cmp
andb
js
fcomps
int3
xor
inc
sub
fmul
adc
int
or
mov
es
xor
aas
fwait
fwait
fwait
cwtl
fidivrl
ja
pop
mov
and
outsb
outsb
pop
cmpsb
movsb
aad
into
sub
dec
lods
fildll
jl
lcall
sbb
pushf
cs
pop
xchg
fistl
cmp
pop
mov
mov
and
fwait
pushf
lock
je
jo
jbe
mov
int
int
in
sub
lods
fsubr
xor
test
addr16
and
push
dec
sbb
xor
jo
clc
fdivl
push
ss
jp
mov
outsb
out
xchg
aam
or
push
mov
jb
mov
cmc
sbb
inc
scas
outsb
pop
shlb
cmp
fidivs
loope
fcompl
and
mov
cltd
or
mov
xlat
sbb
xchg
sub
cli
iret
mov
jo
orb
int
add
movsl
decl
pop
jnp
out
xchg
sbb
ret
mov
out
pop
cmp
imul
out
mov
inc
arpl
std
push
out
cli
lret
add
sbb
push
dec
or
jge
or
popl
dec
jae
ret
sbb
inc
jne
test
shll
adc
leave
jno
add
xor
andl
outsl
push
adc
aaa
ja
mov
push
lods
adc
shll
out
push
dec
pop
inc
xor
dec
inc
mov
mov
imull
inc
mov
clc
sub
lock
adcl
add
pop
mov
shlb
cmc
or
sbb
mov
shll
ds
data16
and
inc
cmp
dec
xchg
outsb
outsb
outsb
mov
sub
jo
stc
cld
insb
outsb
mov
dec
mov
repz
xor
mov
shll
lahf
lahf
das
mov
dec
movsl
xchg
rclb
jge
or
mov
cs
les
bound
dec
or
jp
add
neg
pop
testl
jmp
out
and
stos
shl
sub
into
int
jb
xor
mov
div
mov
mov
mov
sbb
dec
xchg
ror
out
adc
fwait
or
xchg
push
add
das
push
jo
lcall
and
cmp
outsb
jg
ja
out
mov
dec
mov
jp
jle
pop
sbb
pushf
jge
outsb
outsb
push
xchg
mov
sbb
dec
insb
push
pop
lock
add
jp
jmp
out
fisttps
inc
jb
fldt
scas
clc
push
lret
push
pop
inc
repz
inc
lret
cli
insb
outsb
jbe
enter
arpl
jo
out
dec
test
idivl
call
cs
inc
mov
xchg
cmpsl
inc
mov
add
ss
mov
int
add
hlt
push
dec
push
push
or
or
mov
dec
orb
int
dec
sub
bound
stos
jge
movb
nop
jbe
cmc
hlt
mov
adc
jle
pop
call
fmulp
in
dec
jecxz
test
add
sbb
mov
in
mov
fisttpl
mov
add
mov
outsb
outsb
insb
or
pop
add
xchg
loope
ljmp
aad
inc
xor
ds
lock
jge
shrb
adc
leave
insl
cmp
push
out
clc
xchg
js
jle
aas
adc
jge
mov
xchg
loope
or
mov
shll
mov
rolb
js
fnstenv
xorb
jle
scas
shr
dec
mov
add
adc
dec
xchg
push
outsb
cmp
dec
xlat
divl
and
mov
ror
out
xlat
sub
xor
outsb
outsb
outsb
outsb
or
mov
fsubs
sbb
push
stos
outsb
outsb
outsb
outsb
cwtl
insb
shrb
out
xor
out
mov
out
add
push
das
add
xlat
iret
out
sub
inc
scas
lcall
push
loop
subl
popf
cmp
cmp
xchg
mov
add
xchg
imul
and
sbb
mov
or
movsb
test
das
add
sti
jle
insb
add
add
mov
iret
in
dec
insb
rcr
inc
rclb
clc
insb
outsb
out
sub
inc
adc
mov
add
negl
sub
js
sub
outsb
outsb
outsb
mov
mov
add
outsb
mov
inc
mov
idivl
mov
cmp
ds
mov
add
add
cld
testl
mov
out
cltd
sub
out
and
arpl
sbb
xlat
addr16
adc
insb
outsb
outsb
aas
loop
or
mov
cmp
cld
inc
call
push
add
stc
mov
fcompl
pop
jne
or
dec
insl
pop
imul
fsubrl
push
cmp
out
jmp
js
xchg
insb
out
add
cmpsb
lock
and
pusha
mov
or
mull
hlt
pop
mul
pop
jg
dec
mov
sub
ja
not
popa
mov
fwait
out
sbbl
test
ljmp
arpl
push
sbb
sti
fnstcw
aas
ficoms
les
or
mov
fwait
call
cmp
pop
divl
xor
sahf
jae
mov
sub
into
imul
pop
and
jg
pusha
pop
ret
aaa
aaa
aaa
jecxz
test
outsb
push
int3
xchg
jmp
ds
aaa
je
mov
leave
pop
jb
inc
rcrb
cmc
rcll
jge
mov
xor
fwait
aaa
push
jne
or
sarl
stos
push
daa
or
jge
ja
sub
popf
jae
jae
add
ds
sbb
mov
out
dec
and
lret
scas
or
mov
movsl
add
sarb
cmp
lcall
outsb
mov
lods
adc
subl
movsl
sbb
cwtl
lods
iret
in
addr16
lds
sbb
pop
mov
mov
int
or
outsb
outsb
out
cli
xlat
lds
xor
mov
insb
outsb
outsb
cmp
jns
mov
cmc
fstpt
outsb
or
adc
fisubrl
cmpsl
outsb
outsb
outsb
outsb
lods
in
and
popa
dec
fistps
outsb
outsb
outsb
push
cltd
jl
lret
adc
mov
mov
xchg
out
mov
pop
orl
jne
sahf
lahf
jge
xor
cmp
mov
in
test
and
pop
call
or
fwait
mulb
mov
bound
xchg
popf
rcll
mov
subl
outsb
leave
xor
push
inc
mov
aas
je
mov
mov
jb
inc
mov
fcompl
icebp
push
jmp
fldenv
in
outsl
ljmp
pop
popf
mov
int
int
cmpsl
sbb
push
sub
dec
pop
movsb
out
xor
lret
or
test
push
add
rol
mov
push
dec
popf
ja
adc
pop
jno
xchg
sub
lods
or
pop
sub
movsl
add
push
sbbl
clc
cmp
aad
or
push
fcmovne
nop
adc
cmp
mov
fwait
fwait
out
imul
pop
sub
out
idivb
xor
repnz
scas
inc
cs
jne
cmc
fidivrl
cmp
outsb
aas
nop
in
mov
sub
dec
dec
mov
mov
dec
adc
mov
aad
jae
jg
ss
push
inc
in
jb
loop
repz
or
jae
mov
xor
push
jecxz
out
fdiv
lods
mov
arpl
fsub
pop
push
pop
push
outsl
xchg
loopne
fadd
cmc
sbb
lret
mov
add
push
iret
adc
fsts
sbb
lahf
jl
addr16
jge
pop
dec
lahf
movsl
and
les
cli
dec
or
xchg
inc
xor
adc
pop
cmp
jno
mov
repz
pop
hlt
mov
and
sbb
inc
arpl
xchg
pop
jge
cmp
pushf
sub
aaa
ja
test
xchg
loopne
cwtl
inc
push
out
ds
aaa
addr16
add
addb
fdivrl
and
push
jge
and
xchg
pop
xor
mov
test
mov
lock
shrl
out
gs
insb
cs
adc
aam
mov
jmp
xchg
iret
dec
outsl
test
stos
adc
lods
or
out
mov
cmp
lea
jl
jmp
mov
loopne
jae
ja
and
lods
clc
mov
xchg
mov
aaa
aaa
aaa
aaa
add
xor
jno
jae
aaa
aaa
aaa
cltd
dec
push
ficoml
or
enter
dec
cmp
cmovne
mov
sub
jae
sbb
les
pop
dec
pop
stc
lock
mov
aam
push
push
mov
int3
push
add
enter
mov
cmp
divl
xchg
cmp
pop
out
jns
test
cli
inc
mov
in
dec
iret
cmp
dec
cmp
out
inc
insb
push
test
mov
pop
ret
out
out
loopne
das
cmpsb
pop
mov
out
out
into
test
adc
jnp
in
inc
pop
dec
lcall
cs
dec
stos
push
insb
es
test
stos
mov
mov
cs
mov
mov
push
aad
cmp
mov
sub
cltd
fwait
cmpsb
imul
in
push
xchg
in
test
xchg
mov
arpl
sub
adc
insb
xchg
and
fwait
fwait
fwait
fwait
mov
jbe
push
mov
and
adc
out
mov
cmp
xor
cs
pop
adc
adc
push
add
cmp
sti
stos
sbb
jle
fstpt
inc
and
mov
jecxz
push
cmpsb
stc
xlat
xor
xor
cmp
add
call
jle
pop
mov
inc
test
mov
xchg
lock
push
andb
das
adcl
xor
push
and
int3
xor
addr16
fsubl
push
frstor
cmpb
mov
dec
movsb
clc
or
xchg
shrb
fwait
fwait
fwait
fwait
addr16
mov
mov
xchg
mov
lret
add
mov
lods
and
js
imul
mov
movsl
out
push
xchg
and
sub
and
mov
mov
push
js
scas
test
jle
mov
mov
mov
cs
stos
mov
xor
out
mov
pop
lock
push
lcall
xchg
lcall
push
jle
lods
jbe
xchg
sub
push
lcall
inc
sbb
int
int
andb
push
pop
inc
or
cmp
push
fistl
mov
mul
mov
fwait
cmp
lods
fsub
sti
pop
add
mov
insb
faddl
ljmp
cmp
adc
addr16
es
xchg
rcrl
xor
mov
out
add
xchg
xchg
sbb
fdiv
in
aam
movsb
dec
rorb
push
jo
cli
ret
pop
adc
mov
fwait
jns
and
dec
sub
std
jg
aam
out
mov
loop
mov
aas
dec
movsb
pop
std
es
jo
repnz
cmp
or
ss
stos
and
pop
push
jl
jmp
jnp
fwait
cmp
gs
dec
mov
ror
movsl
mov
mov
stc
outsl
imulb
or
jecxz
xchg
mov
fimull
addr16
mov
jo
bound
aaa
mov
out
push
lahf
fwait
inc
push
xchg
jmp
fs
or
pop
and
xchg
or
mov
mov
fwait
fwait
fwait
jns
dec
aas
sti
xchg
or
test
fwait
fwait
in
or
adc
inc
mov
inc
lahf
icebp
test
mov
adc
repz
hlt
cmp
dec
sbb
fdivrs
mov
rorl
mov
sti
jnp
mov
jbe
loope
mov
jmp
fs
popf
xor
scas
mov
xchg
add
cmp
mov
rorb
jp
sti
inc
out
xor
lock
mov
inc
cmp
jae
mov
shlb
and
sbb
test
arpl
jmp
movsb
pop
jnp
ds
lahf
adc
push
ss
sub
sub
pop
std
dec
fs
inc
mov
fisubl
out
sub
push
jle
xchg
popa
sub
ror
sarb
in
jmp
aaa
aaa
mov
dec
testl
in
addr16
fnop
out
hlt
push
dec
out
rcl
sub
stos
mov
push
stc
sbb
xchg
lcall
sbb
bound
mov
lock
test
add
clc
add
lock
fcoml
push
mov
adc
cmp
jl
adcb
insb
outsl
xchg
dec
stos
call
cli
push
ds
je
push
addr16
jae
ret
pop
addr16
push
and
jae
jae
loop
sahf
inc
mov
dec
add
jae
mov
xlat
or
sbb
loopne
xchg
enter
loop
and
jge
sub
fucomi
xor
adc
dec
lods
mov
flds
mov
or
xor
sub
icebp
mov
cmp
out
pop
jo
mov
mov
add
sbb
sahf
adc
cmp
mov
mov
fnstsw
adc
pop
mov
ret
test
in
imul
stos
mov
xor
std
sbbb
shlb
fwait
lods
sub
mov
mov
jl
mov
outsb
inc
jne
aaa
aaa
aaa
inc
mov
insl
push
push
sbb
xchg
jmp
aaa
call
inc
stc
inc
fisubl
enter
aaa
fidivl
sub
or
sahf
ret
xchg
clc
mov
pop
icebp
mov
xlat
sarb
push
xor
mov
scas
jp
xor
cmpsl
push
pop
ss
push
cld
dec
imull
mov
pop
or
dec
ficoms
inc
loope
js
dec
mov
jo
pop
aad
addr16
test
xlat
push
pop
mov
push
and
int
lahf
fwait
mov
pusha
mov
ja
iret
int
int
or
sub
xchg
dec
sbbl
popf
movsb
hlt
add
mov
cs
fcmovnu
pop
and
mov
mov
loopne
jge,pt
nop
int
mov
and
fisubl
pop
sti
lds
mov
int
daa
jne
mov
and
aaa
aaa
mov
mov
shrb
lods
cmpsl
sti
and
mov
pushf
dec
frstor
sbb
jno
into
loop
pop
aaa
aaa
mov
sub
pushf
pop
es
out
inc
mov
sbbl
adc
jbe
fsubrl
push
xchg
xor
out
xchg
les
orl
outsb
mov
int
int
std
xor
sbb
sbb
lcall
iret
int
sbb
add
cltd
outsb
mov
xchg
out
out
mov
ret
movsl
addr16
dec
cmp
fcmovne
mov
lahf
aaa
jb
push
stos
lods
sub
fwait
fwait
fwait
dec
mov
lds
cmpsl
xchg
int
int
cwtl
lcall
into
xchg
fbld
push
push
fiaddl
popf
cwtl
cmpb
dec
daa
test
ss
aaa
aaa
inc
xchg
jle
xor
jns
mov
jp
data16
adc
push
mov
push
in
xchg
lret
jae
aad
in
jle
loope
jg
mov
addr16
sub
and
mov
aaa
aaa
mov
inc
jbe
jbe
jg
fisttpll
icebp
push
xor
xchg
jno
aad
call
outsb
scas
clc
fs
sbb
fs
or
insb
cmc
push
test
lcall
out
inc
jecxz
ja
xor
or
jns
and
gs
mov
pop
notb
div
cmpb
fwait
jo
loop
mov
jecxz
add
sub
jp
in
push
sub
cld
test
or
lahf
adc
push
mov
iret
mov
movsl
clc
inc
sahf
mov
sub
or
out
cmp
int
int
adc
cmpb
or
je
sti
std
add
popf
and
fcoms
sahf
fwait
out
jae
int3
sbb
adc
sbb
cmp
sub
jl
push
jne
mov
daa
add
into
icebp
cmpsb
orb
pxor
insb
inc
inc
test
stos
test
js
outsb
outsb
insb
loopne
ljmp
jae
mov
or
push
sbb
jae
add
mov
sbbb
pop
mov
fidivl
sti
fsubrl
sbbl
pushf
out
fbld
ljmp
or
outsb
mov
enter
ficomps
adc
aas
fwait
fwait
pop
push
insb
mov
jle
add
and
push
or
lret
mov
dec
js
mov
jo,pn
sub
sbb
jge
das
pop
mov
cmc
mov
es
jg
cmp
mov
movsb
pause
aas
divb
sbb
add
mov
aad
pop
adc
out
fdivr
inc
dec
dec
cmp
jg
jl
outsb
cmp
jnp
jle
and
aam
ret
and
push
sbb
mov
out
out
lcall
in
inc
xchg
add
pop
rorb
or
idivb
xchg
rorb
ret
iret
out
int
adc
and
fstpt
or
enter
jbe
pop
mov
lret
cmpsb
call
mov
outsb
xor
dec
jbe
and
int3
push
sub
shl
out
out
cmpsl
stc
lahf
push
data16
std
insb
addb
out
mov
mov
repz
and
add
inc
and
out
addr16
rol
mov
mov
adc
shlb
je
push
inc
mov
add
and
int3
jle
in
cmpsb
iret
int
and
or
addr16
mov
push
cmpsb
movb
add
xchg
dec
in
aaa
aaa
adc
test
fdivrs
cmp
stc
sbb
aaa
dec
stos
or
cli
pop
mov
ss
fcmovbe
fwait
cmc
dec
or
jae
jae
test
xorb
pop
mov
int
in
addr16
or
lods
iret
cmp
xor
mov
int
fdivl
xor
lock
mov
mov
add
jne
push
repnz
pop
jle
jle
iret
cmp
into
xor
or
xor
pop
fnstsw
cld
mov
jb
and
mov
dec
cmp
pop
push
push
mov
cmp
jbe
adc
enter
out
fsubs
xchg
or
fcmovne
out
daa
loopne
sbb
fisttpl
mov
outsb
outsb
lahf
int3
adc
cmpb
ficoms
cmp
popa
jb
mov
add
addr16
sbb
push
sbb
bnd
xor
cld
adc
xchg
in
add
sbb
out
xchg
fcomp
aam
les
out
pop
fwait
out
out
je
mov
pop
movsb
es
push
xorb
aas
push
out
jns
inc
pop
sub
sbb
inc
movsl
mov
lret
cmp
fwait
fwait
mov
mov
mov
mov
mov
or
lods
pop
inc
mov
and
jae
dec
add
out
out
mov
repz
pushf
cmp
mov
inc
loopne
jg
fsubr
sahf
scas
aas
mov
shll
mov
cmp
ss
idivb
cs
pop
int3
or
bound
fcmovne
loopne
xor
pop
fimull
push
mov
icebp
xchg
xor
mov
inc
call
data16
aaa
mov
int
dec
fwait
push
xchg
or
xchg
or
or
aaa
mov
adc
out
xlat
pop
sub
jo
mov
adc
add
pop
ss
cli
fsub
sub
sbb
xchg
rcrb
mov
jae
jg
pusha
inc
mov
mov
cld
insb
sbb
mov
lds
aam
js
je
inc
test
dec
cld
insb
mov
lds
sub
fwait
fsetpm(287
mov
int
rclb
pop
fstpl
std
sahf
fwait
sub
and
lock
imul
mov
rcrl
push
outsl
jecxz
les
mov
mov
call
pop
xchg
sub
in
mov
std
adc
leave
and
fwait
pop
call
in
push
jnp
ret
ds
fwait
fwait
outsl
xchg
mov
in
gs
and
dec
pop
jge
iret
jbe
js
fwait
fwait
fwait
mov
xchg
lods
add
outsb
out
lods
imul
pop
leave
pop
aaa
aaa
aaa
push
outsb
jae
xchg
mov
jle
cmpsl
adc
fsub
cmp
subb
jp
cmp
int
aas
mov
pop
sbbl
mov
lahf
clc
outsb
outsb
outsb
outsb
sahf
add
pop
mov
pop
jnp
daa
dec
outsb
outsb
outsb
outsb
movsb
lods
dec
dec
incb
shlb
outsb
outsb
outsb
push
lret
mov
hlt
pop
jae
outsb
outsb
outsb
pop
push
sub
sbb
mov
insl
mov
rol
in
push
jmp
mov
push
cmp
xchg
icebp
pop
cmc
pop
push
sahf
jno
mov
cmp
stos
fdivrl
jg
repz
rorl
mov
lret
adc
jae
popf
cld
jns
lret
inc
hlt
push
int3
movsb
xchg
addr16
jae
pop
out
mov
mov
and
aam
xor
dec
adc
inc
sub
mov
fcoml
mov
cmp
adc
xor
out
push
not
pushf
mov
iret
icebp
flds
icebp
jg
sub
gs
mov
jae
mov
sti
mov
lock
xchg
jae
inc
movsl
lods
push
jnp
mov
jae
pop
mov
pushf
sahf
rclb
xor
cmp
mov
fwait
push
gs
mov
hlt
insb
outsb
mov
push
pop
icebp
jge
or
mov
in
repz
aaa
pop
add
dec
sub
repnz
xor
stos
fbld
out
sub
es
popf
negb
push
out
mov
fsubs
cltd
inc
loope
mov
add
movsb
out
cmp
sbb
les
jmp
push
mov
fwait
fwait
jle
cwtl
pop
sub
pop
leave
pusha
pop
adc
fwait
aad
cmp
es
jae
or
inc
dec
enter
jp
int
in
sub
in
int3
pop
rcr
xor
hlt
sbbl
cmp
lahf
pop
ljmp
pop
fidivrs
sbb
sbb
mov
popf
lahf
outsl
and
in
or
adc
jae
jae
inc
je
lret
push
cld
dec
iret
inc
outsl
xorb
jae
inc
xlat
add
into
pop
mov
pop
xlat
sbb
addr16
xchg
push
nop
outsl
mov
sbb
mov
push
int3
ret
and
fwait
fwait
cmp
add
or
call
cmp
inc
or
jae
push
mov
jmp
and
aaa
repnz
lahf
lea
je
dec
iret
out
mov
cld
pop
arpl
and
testl
fdiv
dec
push
in
mov
movsb
and
sar
lcall
mov
push
sub
imul
cmp
fcmovnb
ficompl
inc
idiv
arpl
out
sub
sub
mov
out
mov
pop
xor
cmp
lahf
rcr
shll
mov
aaa
addb
inc
mov
fcompl
mov
inc
mov
add
ds
bound
mov
inc
js
enter
sub
xchg
mov
pop
mov
dec
gs
mov
std
push
das
rol
ja
gs
inc
shrb
test
jae
mov
and
pop
inc
sbb
push
movsb
pusha
loopne
adc
adc
aaa
js
lods
movups
stos
inc
push
shrl
xchg
icebp
imul
stos
icebp
ret
mov
push
ja
mov
xor
out
les
pop
dec
dec
add
fcompl
fcoms
cmp
fwait
xchg
adc
movsl
adc
mov
test
lahf
push
mov
mov
dec
dec
lret
loope
fwait
fwait
fwait
fwait
cmp
aas
push
xchg
out
cmp
mov
jge
jnp
xlat
adc
jle
cmp
mov
jb
mov
cs
and
fs
mov
lcall
cld
test
cmp
mov
test
fdivr
rcr
lock
adc
out
movsl
mov
imul
adc
push
lods
mov
mov
rcll
push
add
and
div
mov
mov
test
inc
sub
adc
dec
cmpsb
leave
scas
dec
cmp
iret
cld
xor
fwait
sbb
popf
mov
pop
rorb
fwait
fwait
pop
add
fucomip
dec
fildll
pop
js
test
inc
xrelease
push
fmull
xor
idivb
pop
sbb
inc
test
into
push
sbb
add
push
or
enter
dec
xchg
dec
mov
les
sbb
adc
cmp
fwait
fwait
fwait
fwait
mov
cmpsb
popa
pop
add
cmpsl
cli
push
sahf
fwait
sbb
pop
sub
mov
or
aad
jae
cld
insb
clc
sbb
mov
outsl
loop
movsb
and
lods
lds
mov
out
push
dec
pop
sub
rclb
aas
add
sub
add
xor
int
iret
or
and
stc
mov
cli
outsl
pop
xor
jmp
fcoml
add
int
int
fsts
xchg
sbb
cwtl
and
int
fdivs
inc
aam
adc
xor
jle
aaa
aaa
scas
subl
dec
int
jae
mov
pop
lahf
fcomps
sti
aam
inc
mov
stos
dec
hlt
fsubl
sete
rorl
pop
pop
popf
popf
or
cmp
orb
mov
and
shl
fwait
add
push
push
ds
jl
push
or
jne
pushf
movsl
insl
loop
cmc
dec
add
jne
pop
aaa
mov
std
or
or
cli
pop
shlb
aaa
aaa
aaa
fcmovnu
jae
movsl
or
loop
jae
xchg
cli
add
aaa
imul
gs
aam
inc
lock
fwait
cmp
in
jae
mov
dec
movsl
pop
push
fidivs
lods
jae
jae
fldenv
push
pcmpgtd
jle
sub
mov
cmp
inc
sti
fsubrl
sbbb
pop
shlb
xor
int3
rcll
scas
pushl
loop
lds
push
mov
pop
sbb
shrb
out
out
cmp
lea
fmuls
xor
ret
cld
mov
mov
flds
cli
test
ds
aaa
inc
dec
call
xchg
push
xor
jae
sti
cwtl
cmp
scas
pop
or
cwtl
std
mov
int
in
addr16
rorb
xor
mov
int
int
sti
rorb
lock
jno
aas
out
xor
aaa
mov
jbe
sub
cmp
mov
jle
aaa
aaa
push
mov
stos
std
mov
jnp
lock
clc
cmpsl
cmpl
cs
aam
lock
sahf
bound
sahf
dec
ret
int
filds
sub
dec
mov
lahf
int
add
mov
lahf
int
mov
leave
out
ljmp
fwait
or
sbbl
add
fwait
pop
les
ja
lahf
xor
pop
lock
and
xchg
fst
sahf
repnz
lcall
rclb
icebp
scas
inc
dec
push
xchg
jle
dec
xchg
shrb
lock
movsb
mov
inc
mov
dec
jb
jbe
xor
negb
cwtl
sub
adc
roll
adc
lahf
xchg
jae
inc
sub
subb
test
adc
jecxz
push
adc
jo
cmpb
sub
pop
push
fcompl
fdivl
imul
push
jbe
into
xlat
mov
ret
pop
iret
mov
xor
pavgb
mov
push
xorb
pop
lcall
movsl
sub
int
in
jae
daa
mov
dec
xchg
scas
shlb
mov
std
sbb
or
repz
jae
mov
dec
jle
xchg
cmpsl
std
pop
rol
addr16
push
loop
outsb
ret
fcmovnbe
or
inc
cmp
sub
test
hlt
inc
sbb
ds
sahf
and
dec
or
fsubrl
and
xor
iret
mov
or
imul
inc
jnp
insl
and
jae
aaa
iret
sub
mov
mov
jae
jae
mov
hlt
cmp
repnz
les
jae
int3
sub
out
les
push
or
clc
sbb
add
pop
ljmp
test
fs
xor
cli
mov
cmpsl
outsl
xor
rcrb
int
mov
sahf
jmp
fiaddl
pop
adc
jle
sarb
inc
xchg
dec
test
sbb
insl
adc
jo
icebp
sarl
mov
notb
lahf
fldt
pop
sbb
insl
push
pop
nop
out
out
std
dec
cmc
insb
aas
fwait
sbb
pop
xchg
xor
add
jmp
cwtl
fndisi(8087
mov
jle
in
xor
mov
add
inc
adc
pop
push
call
jno
es
and
push
loopne
jge
push
xchg
push
ficompl
out
sarl
roll
out
out
lods
xor
ds
dec
add
insb
lahf
movsl
ficompl
icebp
outsb
outsb
incl
fnstcw
std
fildll
mov
jl
jl
mov
int3
mov
int
aad
push
ret
les
fs
mov
sub
ja
outsl
aaa
aaa
aaa
aaa
dec
mov
lret
mov
insb
ds
lea
popa
clc
sub
int
adc
push
push
inc
inc
leave
mov
lahf
mov
adc
push
jo
mov
sahf
in
mov
loopne
loope
arpl
push
cmpsl
jns
fwait
aaa
shrl
insl
ljmp
dec
cmp
pop
pop
pop
mov
push
scas
mov
pop
mov
jle
loopne
xchg
adc
fcoml
and
cmp
imul
out
in
es
or
push
cltd
mov
and
bound
loop
jae
ja
fwait
jp
push
ret
sti
or
adc
pushl
rorb
int
in
jae
cmp
fidivrs
or
int
int
xchg
sbb
and
jge
aaa
mov
int
or
lea
mov
cmp
jecxz
call
lcall
sarl
push
orl
jle
xchg
fidivl
xor
inc
loope
jmp
pop
cs
or
cli
pusha
cli
fdiv
jae
jae
mov
xor
movsl
jae
jae
jo
jbe
mov
xlat
pop
dec
int
pop
cmpsb
push
inc
pushf
cld
pop
dec
lahf
int
lock
mov
scas
lret
mov
imulb
mov
cmc
or
mov
lahf
pop
inc
test
lcall
lock
fwait
cld
dec
pop
ret
hlt
mov
shrb
ja
fs
test
mov
jmp
push
pop
gs
push
sbb
and
mov
aam
inc
mov
in
jnp
mov
call
cmp
jne
imul
fcompl
hlt
fstpt
xchg
dec
das
test
pop
ret
mov
fildll
xchg
in
in
bound
add
xchg
out
out
add
mov
adc
out
out
int
add
out
xchg
mov
add
out
lcall
jg
addl
fsts
dec
and
adc
int
int
test
or
dec
and
rcr
jo
xchg
negb
int
das
jb
mov
in
out
out
lahf
cmc
das
scas
cltd
icebp
xor
js
aaa
sahf
shr
call
mov
out
inc
sahf
decb
sar
lcall
out
jns
cmp
fldcw
cmpsb
imul
xchg
pop
inc
add
mov
inc
dec
mov
adcl
and
divb
loope
mov
je
outsb
outsb
outsb
vmread
or
dec
adc
aas
push
ljmp
fcompl
or
aaa
fdivr
into
popa
call
mov
jl
jl
jo
xor
jbe
icebp
mov
mov
hlt
clc
sbb
fsub
and
arpl
and
fcoml
insb
push
jb
sti
fsubrl
in
sub
lods
es
ss
jae
xchg
and
testl
mov
fisttpl
int
mov
mov
add
cwtl
jge
xor
fwait
fldt
mov
js
cwtl
insb
out
lahf
push
lahf
mov
dec
dec
and
out
inc
mov
or
mov
test
in
lock
add
loope
out
cmpsb
mov
mov
inc
sub
into
repz
pop
inc
pusha
arpl
mov
iret
in
jae
xlat
out
popa
pop
pop
sub
jne
cmp
out
mov
lcall
pop
movsl
iret
out
xchg
data16
ds
bound
add
cmc
mov
jg
xlat
mov
ljmp
sbb
cmpsb
xchg
in
sub
pop
stc
xchg
int
add
xchg
push
ds
in
add
pop
daa
cmpsl
jbe
adc
inc
aam
xchg
test
shrb
sbb
sbb
into
jo
push
loopne
inc
fidivs
aaa
aaa
mov
mov
mov
sub
mov
cmp
jae
jle
cmpsb
dec
pop
lea
dec
in
int
in
push
ljmp
sbb
pop
and
popa
out
mov
pop
inc
xchg
mov
jl
jno
test
mov
jge
pop
push
mov
dec
mov
fidivl
nop
jbe
sbb
pop
push
and
cli
pop
shr
xor
iret
int
in
fildl
scas
cmp
shll
je
ds
mov
inc
ds
scas
cld
sbb
mov
xlat
inc
call
iret
xchg
or
add
fs
jae
pop
xor
in
lret
imul
and
addr16
rorb
leave
jbe
aaa
aaa
aaa
aaa
push
or
int3
cmpsb
push
mov
aaa
add
fidivrl
aaa
jo
mov
fisubrl
mov
imul
addr16
popf
mov
inc
cld
cld
dec
jbe
test
cmp
pop
sbb
arpl
mov
mov
lcall
dec
adcb
mov
lods
pusha
mov
les
and
pushf
sub
jle
int
insl
mull
xchg
pop
aaa
pushf
js
cmp
push
inc
shrb
lock
insb
cli
sub
pushf
and
mov
sar
ljmp
cli
aaa
mov
rcll
into
sbb
cmp
aaa
mov
stos
inc
enter
inc
add
int
in
push
das
fs
lahf
jnp
add
sbbb
lock
jp
inc
jecxz
xor
out
out
aaa
mov
inc
std
jge
outsb
pop
jb
aad
mov
push
adc
push
test
fisubs
sbb
jle
dec
mov
lahf
in
add
int
jns
rorl
loopne
and
or
mov
mov
aas
dec
cmpsl
ds
fwait
les
int3
inc
mov
insl
sub
sbbb
or
mov
adc
cld
and
mov
hlt
lahf
push
fidivs
adc
data16
ret
jo
into
jo
das
or
xchg
xchg
jmp
lods
adc
in
jae
sti
fcoml
bound
xchg
mov
inc
fcomps
int
jecxz
lods
xchg
push
dec
test
mov
int
les
unpcklps
xor
jle
aaa
aaa
stos
lods
loop
xor
add
fdivrl
mov
sub
in
movsb
adc
fs
sub
xchg
lret
mov
xchg
fidivs
sub
jecxz
add
pop
gs
icebp
pop
repz
push
inc
sbb
pop
jg
mull
mov
out
adc
xchg
popa
xchg
in
push
add
jbe
clc
call
and
xchg
jle
ja
push
xor
shll
mov
push
insb
inc
mov
loope
xor
scas
push
xchg
pop
jp
sbb
loope
inc
call
lock
rcl
dec
mov
cli
mov
pop
and
jne
sbb
scas
add
mov
mov
movsb
jae
mov
xchg
test
jae
push
add
mov
push
call
out
mov
shlb
in
es
add
sub
dec
mov
fsqrt
inc
decl
push
in
addr16
adc
clc
mov
test
mov
lahf
in
mov
pushf
inc
call
pcmpeqw
inc
outsb
sub
xlat
int
int
mov
inc
icebp
mov
jecxz
or
lret
mov
jb
fstps
mov
divb
lods
sbb
loopne
adc
es
fcmovne
out
insb
enter
add
mov
inc
ds
fwait
fwait
movsl
ja
andb
jmp
aaa
aaa
mov
cmc
xchg
stos
adc
push
imul
pop
ds
aaa
aaa
out
xchg
xor
pop
add
cmp
sbb
sarl
fnstcw
sub
pop
mov
ds
test
js,pn
cli
push
fcompl
arpl
mov
sbb
and
popa
clc
aad
mov
mov
lahf
cmp
test
inc
bound
xlat
cmc
ret
rorb
push
xchg
adc
gs
stos
mov
jl
sub
mov
push
enter
sbb
sub
int
lcall
sarl
ljmp
push
add
mov
clc
push
mov
cmp
std
adc
mov
dec
inc
mov
sarl
shlb
pushf
repnz
xor
test
mov
iret
mov
or
push
mov
inc
fldcw
or
loop
jge
adc
jo
outsb
cmp
dec
pop
jae
shufps
jg
mov
mov
rol
mov
jl
movsb
into
out
divb
and
andb
xor
xchg
mov
insb
outsb
dec
shlb
fstl
xor
out
std
in
or
jbe
xchg
mov
add
outsb
pop
inc
iret
mov
fwait
mov
imul
mov
std
insb
jns
rorl
movsl
add
inc
bswap
out
idivb
mov
outsb
je
pavgw
fildll
mov
enter
inc
dec
xor
testb
hlt
jb
or
scas
cwtl
lahf
fcmovnbe
jne
es
cmp
bound
xchg
dec
out
aas
fnstcw
fs
push
cmp
mov
fsts
bound
lods
fxtract
test
fnstsw
pop
out
cmpsl
cmpsb
clc
push
inc
divb
push
out
out
bound
cs
roll
lods
push
add
lahf
adc
mov
jae,pt
push
shlb
and
test
ret
addr16
psubb
lcall
mov
incl
jae
sbb
fnstcw
das
inc
mov
mov
xor
outsb
outsb
fistps
ficoms
scas
in
jns
mov
push
jge
outsb
lret
es
mov
sub
call
push
in
test
into
mov
mov
dec
fs
xor
inc
xchg
shl
outsb
mov
or
inc
dec
push
mov
outsb
outsb
mov
jae
aaa
lods
or
fsts
outsb
icebp
and
inc
sbb
pop
outsb
dec
jae
jae
rcrb
std
repz
paddb
xchg
jl
cmpsl
jae
jae
das
pop
cmp
dec
jae
nop
lds
aaa
test
xor
sub
movsb
inc
shll
ds
unpcklps
ljmp
daa
ds
shl
pop
xor
mov
out
mov
fstpt
lahf
aas
inc
jecxz
dec
out
pop
mov
lahf
int
leave
dec
mov
mov
loopne
loop
push
add
or
pop
int
inc
int3
outsb
out
ljmp
popf
es
out
push
jl
outsb
loope
pop
mov
jge
in
mov
jl
jmp
sub
xor
sub
dec
or
js
aaa
mov
cli
jle
fsts
xchg
jbe
aaa
aaa
aaa
aaa
mov
loope
and
xor
ds
ret
fdivs
mov
cmp
jne
and
xlat
mov
js
sbb
push
inc
loope
adc
dec
mov
sbb
pop
push
adc
aaa
cmp
pop
sarl
aaa
aaa
dec
pusha
bound
mov
jg
ret
adc
fdiv
xchg
mov
flds
repnz
clc
or
pop
rcr
fdivl
mov
inc
cmpl
jle
loop
pop
cmc
inc
ss
dec
loope
fsubl
ja
dec
sti
and
imul
aad
cmp
dec
out
pop
jmp
push
push
inc
aam
outsb
shld
sub
std
insb
popf
sub
add
cmc
das
ljmp
test
nop
push
loop
loope
inc
mov
jb
and
sbb
fadd
insb
cmpl
jg
imul
add
jo
push
out
ffreep
loopne
loopne
cmp
shlb
out
iret
incl
fists
scas
or
jo
inc
outsb
outsb
jg
sahf
repnz
pop
insb
push
roll
jl
sub
decl
push
cwtl
out
mov
cmpsb
lock
pop
in
test
rcrb
loopne
sbb
pop
jae
mov
shll
sub
cltd
sub
lcall
shll
sub
mov
out
sub
adc
mov
popa
cmpsl
push
jmp
lods
xchg
shrb
mov
push
inc
cmp
mov
mov
mov
cld
insb
outsb
arpl
add
inc
push
scas
and
ss
pop
pushf
in
in
das
push
cld
xchg
mov
dec
jbe
xchg
int
int
xchg
iret
push
ds
jle
jae
xor
pop
into
xor
out
pop
xor
fwait
fwait
fwait
nop
cwtl
int
cmp
add
mov
sbb
hlt
idivb
jge
mov
pop
out
adc
inc
mov
mov
loope
and
pusha
les
sub
lahf
in
and
and
xchg
daa
roll
push
add
call
sbb
cmp
out
and
add
push
dec
iret
adc
in
inc
iret
cwtl
insb
cmc
push
out
jmp
mov
ds
and
cmc
mov
mov
loopne
aas
pop
add
jmp
push
in
push
imul
mov
out
pop
jnp
jecxz
cli
adc
xchg
jne
xchg
jl
imul
sarb
add
outsl
xchg
mov
out
sahf
and
je
xor
test
fcompl
pop
ret
adc
fdivrs
ds
hlt
sub
inc
js
repnz
iret
out
test
stc
insb
dec
testl
sarb
pinsrw
aad
lret
lods
test
out
out
mov
inc
pop
cmpsl
mov
enter
out
xor
xor
pusha
aaa
popf
pop
out
out
clc
scas
push
lock
daa
imul
iret
out
sub
dec
adc
cmp
lahf
int
stos
pop
jmp
neg
fdivrl
scas
inc
cmp
jns
inc
cmp
into
in
xchg
enter
test
cmp
fwait
stos
in
mov
cld
dec
test
or
push
and
nop
in
sahf
int
pop
loop
mov
les
push
sub
sbb
sub
outsb
mov
int
add
mov
stos
std
mov
lods
adc
dec
out
jae
pop
cmc
mov
rorl
fwait
xchg
fcompl
cwtl
adc
rorb
lahf
int
lods
mov
lock
fs
in
out
fstps
adc
mov
repz
andl
ret
add
insb
fists
xor
cli
push
scas
cmp
aaa
aaa
aaa
push
or
adc
mov
sti
insl
jl
mov
and
pop
jae
jae
jnp
push
aad
mov
and
js
mov
sbb
jae
int3
aas
in
dec
movsl
dec
out
repz
aaa
mov
dec
pop
mov
nop
int
push
lahf
and
add
ljmp
pop
fptan
shll
pop
stos
xor
mov
in
lahf
cmpsl
rorb
fnstsw
adc
jne
into
inc
sbb
leave
jle
lahf
push
stos
xchg
insb
lahf
fstpt
subb
mov
mov
pop
inc
mov
mov
mov
call
out
inc
daa
mov
xchg
fwait
inc
or
hlt
mov
jnp
outsb
outsb
dec
sub
cmp
mov
icebp
test
pop
out
call
jp
cmp
sub
cmp
ret
pop
das
xchg
mov
xchg
jnp
lea
cli
and
ds
fmul
out
mov
push
cmp
ds
jge
test
fbstp
aam
adc
sti
test
jp
imul
fwait
jle
pop
add
dec
cmpsb
enter
inc
cmpsb
mov
jl
mov
jg
mov
add
lret
push
mov
dec
jp
cmpsb
xlat
movsl
jo
js
xor
ficomps
jp
mov
xchg
adc
insl
mov
mov
bound
sub
outsb
outsb
scas
cli
test
push
push
add
imul
adc
jle
mov
cpuid
xor
adc
pop
jns
jae
jge
clc
cltd
aam
sahf
xchg
xor
xchg
shll
mov
sti
dec
adc
mov
je
xlat
mov
js
jl
orb
aaa
aaa
aaa
mov
dec
jmp
cwtl
mov
test
sbb
clc
fdivrl
aaa
push
mov
push
sbb
pop
jle
out
adc
aas
sahf
push
xorl
leave
js
out
push
clc
ds
out
fisttpl
enter
xor
adc
pushf
push
into
jg
and
sub
cmpsb
push
mov
xor
fdivl
cmp
add
mov
xchg
fcomi
xor
pop
movsl
pop
or
add
push
lret
fdivrl
xchg
imul
or
insb
cmp
fnstcw
inc
lods
lods
loopne
fbstp
jae
stc
jp
gs
das
jmp
jl
in
jae
shlb
aad
mov
les
cmp
push
aam
sbb
and
sub
lock
in
movlhps
jae
jae
sub
push
cmpsl
jecxz
mov
push
push
stos
jne
ds
inc
repz
fnsave
in
xchg
dec
jmp
popf
xor
push
in
test
mov
mov
les
mov
aam
idivl
cwtl
pop
sti
popf
inc
xor
clc
in
pop
pop
hlt
mov
mov
cmp
jbe
xor
out
cmpsb
jo
iret
subb
xlat
shlb
push
arpl
jns
jnp
aas
lods
and
out
xchg
push
jno
jae
ljmp
jo
scas
cmp
lock
por
loopne
sub
shll
fisttpll
xor
mov
pop
inc
cmp
xor
fiaddl
pop
scas
push
fldl
dec
hlt
es
int
mov
lods
popf
inc
mov
xor
lahf
sub
sbb
mov
mov
iret
xor
push
fcompl
xchg
aaa
xlat
mov
aad
mov
dec
lods
push
js
icebp
sub
add
js
xchg
bound
daa
fiadds
sahf
fldt
inc
aas
fcompl
inc
push
insl
xor
cmp
out
adc
pop
andb
fcompl
test
push
xchg
lds
mov
jecxz
adc
lret
fdivr
push
jno
push
cmp
push
jae
fsubl
adc
xchg
dec
clc
fcompl
or
cmpsb
mov
adc
int
jle,pt
test
es
clc
add
repz
fs
fs
dec
push
outsb
pop
sub
shll
add
shlw
push
mov
adc
aas
xchg
pop
mov
call
ret
sbb
clc
stc
xor
roll
cwtl
xor
push
dec
mov
test
jae
jae
les
out
push
sub
jle
jmp
xorl
mov
lret
pop
mov
movsl
popf
xor
inc
loope
in
fidivs
es
pop
outsb
outsb
outsb
lahf
divb
cmp
cltd
fiaddl
sub
xchg
sbb
lods
mov
int
sub
pop
dec
mov
mov
test
cmp
mov
aam
aas
fistpl
movsb
sbb
sbb
cltd
push
gs
or
sbb
or
and
pop
mov
sbb
fsubs
jae
pop
mov
add
dec
xor
xor
stos
mov
imul
mov
icebp
cld
adc
out
mulb
lods
in
xchg
rcrl
sti
push
and
cltd
jb
loop
sbb
jp
stos
add
addr16
outsl
out
ficompl
out
repnz
mov
imulb
sti
std
movsl
subl
mov
lock
addr16
outsl
mov
push
enter
sti
jge
fbstp
xor
insb
fimull
cmpsb
lds
lahf
fucomi
xor
push
pop
rep
mov
fdivrl
cmp
mov
push
and
jg
dec
xchg
xchg
mov
insl
add
and
cmp
movsl
adc
popf
stos
sub
mov
xor
pop
lods
insb
jns
dec
call
fdivl
push
sub
and
dec
jmp
dec
daa
xor
daa
jmp
cmp
add
es
data16
jl
mov
mov
mov
je
aaa
aaa
cld
sub
out
xor
es
and
ds
aaa
aaa
pop
dec
fs
cmp
outsb
cs
and
mov
fs
inc
clc
insb
outsb
jbe
sahf
insl
bound
rorb
xchg
nop
in
out
rcll
clc
cltd
inc
cmp
into
push
int3
pop
cld
pop
clc
insb
outsb
in
sti
lret
push
xorb
out
rcrb
or
jne
jecxz
sbb
outsb
outsb
outsb
outsb
aaa
pop
cltd
xor
or
das
xor
js
outsb
outsb
outsb
mov
stos
jl
pop
icebp
shll
sbb
fldt
pop
jmp
icebp
fsubrl
leave
jae
and
in
mov
mov
pushf
cmp
out
cmpsl
and
sub
inc
add
aam
fmuls
int
das
mov
xchg
fdivrl
push
sahf
mov
xchg
xor
outsb
pmaddwd
jp
push
jl
jmp
fisubrl
loop
ss
jp
mov
adc
mov
addr16
jle
pop
les
inc
mov
lahf
in
and
lahf
pop
inc
mov
addr16
ror
out
cmp
xchg
cmp
outsb
outsb
fimull
cmpsl
mov
into
xchg
ret
pop
lock
add
mov
aaa
movsl
adc
mov
jecxz
mov
in
mov
dec
add
jle
mov
jl
push
sahf
add
xchg
and
out
lret
fstl
aas
leave
sbb
je
out
out
ss
pushf
loop
mov
out
mov
push
shl
cmp
sbb
nop
popa
jge
cmp
popf
lahf
jle
inc
and
adc
push
mov
cs
xchg
cwtl
add
std
sar
int3
dec
mov
cli
insb
outsb
sahf
in
stc
xor
cmc
sbb
pop
mov
in
or
push
mov
push
les
lahf
les
idivb
ret
cmp
adc
cmp
adc
lahf
movsb
iret
out
add
idivb
dec
mov
ljmp
call
clc
pop
mov
sbb
pop
sbb
xchg
pop
jge
jo
cld
mov
inc
sbb
dec
jge
ss
aaa
rorb
scas
nop
gs
push
loopne
aaa
cs
dec
push
jmp
fwait
mov
mov
loope
call
push
int
mov
jge
repnz
int
in
xchg
into
sbb
negb
std
ret
push
cli
hlt
jmp
add
xor
fsubrl
fwait
adc
mov
out
pop
sub
aas
dec
sub
lret
int
xor
cs
cmpps
aam
ss
push
pop
test
inc
dec
test
xor
lods
or
call
clc
jl
mov
int
push
push
in
dec
fidivl
xlat
insb
out
dec
mov
ret
dec
cmc
push
add
mov
pop
hlt
movsl
jo
testb
out
fdivr
mov
in
xchg
clc
and
mov
mov
lahf
cmpsl
inc
les
mov
sahf
imul
sti
faddl
add
mov
stc
and
in
shlb
out
mov
rolb
mov
xchg
test
dec
sahf
mov
dec
aam
ret
xchg
pop
and
mov
adc
jmp
push
clc
rorb
bnd
add
fcompl
sbb
or
sahf
icebp
mov
mov
pop
jne
inc
shlb
sub
mov
sub
pop
idivb
outsb
outsb
je
push
leave
mov
add
xchg
idivb
or
mov
pop
ja
insb
iret
aam
mov
jp
mov
aaa
aaa
aaa
cld
cs
sub
xchg
or
adc
aaa
aaa
aaa
movsb
jo
mov
and
imul
cmp
push
and
test
iret
cmpsb
iret
jmp
mov
dec
xor
jae
jle
cltd
xor
jbe
adc
sub
int
int
loope
stos
les
sub
daa
mov
rcrl
clc
sbb
pop
js
dec
fcoms
nop
mov
stc
outsb
outsb
outsb
lahf
imul
out
or
sbb
outsb
insb
outsb
outsb
outsb
or
xchg
dec
fildl
sbb
pop
int3
pop
sbb
cli
cmp
je
loope
mov
movsb
pminub
cmpsb
fdivr
xor
jl
outsb
outsb
inc
out
mov
pop
dec
mov
cmp
push
pop
lock
jae
stc
ror
in
addr16
int3
in
insl
or
arpl
jmp
push
sahf
int
int
cld
fs
xor
and
fwait
fwait
mov
ret
dec
stos
pop
push
cmp
daa
sbb
lahf
fwait
push
stos
insb
mov
inc
out
xchg
std
insb
xor
mov
inc
and
addr16
mov
bound
dec
ss
loope
loopne
pop
jecxz
fstp
xorl
idivb
and
mov
mov
mov
out
out
lcall
aaa
xchg
pop
int
aas
push
iret
sub
icebp
jb
in
or
lret
mov
fwait
fwait
fwait
mov
pop
stos
and
push
pop
jl
aas
lcall
cld
mov
hlt
fnstcw
aaa
push
addr16
sarb
in
cmp
push
insl
sbb
mov
add
jge
int3
sub
xor
fcomi
adcb
mov
push
and
lahf
xor
mov
mov
push
pop
fmuls
jne
outsb
outsb
fcmovnbe
sub
lcall
sti
rcll
push
stc
pop
dec
adc
pop
xor
aaa
loop
lods
int
mov
hlt
repz
fnstcw
in
pop
ret
push
popa
negb
insb
mov
cld
and
js
lcall
push
cmpsl
in
push
ss
lock
js
jle
jbe
jae
mov
mov
mov
int
in
imul
sbb
mov
jp
and
sbb
out
inc
and
dec
mov
inc
sub
filds
outsb
sub
dec
in
mov
jge
xor
in
fmulp
inc
out
int
mov
hlt
sbb
cs
add
hlt
sbb
loopne
mov
ja
cmp
adc
insb
dec
xchg
jnp
cli
cmp
xchg
pop
mov
lea
scas
loop
sub
clc
cmc
mov
push
lret
in
fs
in
and
out
and
shll
mov
repz
call
ss
push
rolb
stos
sbb
ja
mov
scas
idivb
jb
int
fists
stos
sub
mov
int
add
inc
mov
ja
insl
addb
mov
sbb
nop
add
fld
ror
notb
mov
test
jae
iret
in
test
push
mov
jmp
cld
dec
lcall
mov
test
mov
mov
cmp
inc
jo
arpl
fdivl
scas
loop
xor
inc
outsl
mov
mov
jl
outsb
mov
and
fs
loope
pop
mov
dec
ss
notl
jge
inc
out
cmp
sub
dec
xor
je
repz
cmpsb
adc
shrl
aam
mov
mov
and
lahf
or
dec
add
adc
jno
lcall
sbb
inc
mov
stos
mov
jmp
adc
pushf
adc
jbe
adc
lret
dec
loop
push
mov
mov
push
outsb
lahf
in
inc
cli
shlb
int
fnstcw
fs
mov
jbe
gs
mov
mov
dec
rcrb
aas
pop
fs
fcmovne
out
jo
xor
lcall
mov
adc
inc
sbbl
out
in
hlt
mov
mov
data16
xchg
and
ret
mov
lock
add
clc
incb
lret
stos
mov
adc
push
xor
aam
rclb
mov
jae
call
and
imul
insl
xchg
test
mov
out
dec
mov
sar
cmp
popa
pushf
fwait
cmp
rcl
xchg
popf
add
mov
jp
add
sbb
fisttpll
in
mov
add
orl
sub
loop
mov
mov
cmp
jns
xor
sub
lret
jl
mov
mov
rclb
test
mov
leave
scas
loope
es
and
sbb
or
bound
lahf
int
stos
push
inc
pop
sbb
pop
jecxz
cli
icebp
xor
sbb
ss
jle
in
enter
test
mov
and
inc
lock
outsb
imul
cs
mov
inc
loop
jae
cwtl
inc
push
leave
xorb
pop
or
cmp
lahf
in
xor
and
mov
rcll
cmp
and
out
xchg
cli
andb
mov
sbb
cmpps
xchg
jle
sub
mov
inc
insb
mov
iret
out
push
sub
fsubs
es
enter
hlt
or
loop
aaa
scas
mov
jmp
mov
inc
loope
out
cmc
ljmp
jle
test
mov
in
movsl
push
and
test
idivl
addl
in
or
jmp
je
pop
xchg
int
rcrl
mov
cmc
add
mov
sahf
int
nop
pop
pop
xor
lahf
in
iret
outsb
rorb
cbtw
dec
in
es
repz
test
lock
hlt
jnp
dec
pop
clc
sbb
ljmp
xor
in
nop
cli
push
xchg
cmp
fistl
inc
repnz
lahf
int
int
imul
xor
sub
out
or
out
out
insb
cmc
sub
mov
aad
out
adc
insb
xchg
sbb
insl
popf
fistpl
fadds
pop
psraw
jl
cld
push
or
or
xor
mov
jecxz
xchg
movsl
out
ficoml
xor
xlat
cmp
inc
test
adc
sbb
jnp
cmp
sbb
clc
lret
inc
cmpsb
popf
sbb
js
xlat
ja
jae
out
adc
enter
out
sub
jae
in
xor
pop
push
sbb
int3
sbb
in
lods
adc
sub
xor
mov
and
xchg
jle
adc
lock
orb
outsb
outsb
fucomi
stos
dec
adcb
sbb
out
mov
add
addb
dec
add
out
add
daa
cmp
out
pop
out
sbb
fwait
fwait
fwait
pop
jns
pop
testb
and
inc
sub
and
nop
mov
mov
cmp
fidivrs
push
scas
push
mov
les
lea
xchg
push
data16
into
in
xor
push
mov
mov
cmc
jne
cmp
shlb
jle
loopne
pop
mov
bound
test
mov
js
lcall
mov
xor
shrl
push
out
out
sbb
adc
xchg
out
out
xor
pop
cmp
jle
jae
mov
sbb
in
pop
add
adc
mov
mov
int3
aaa
aaa
aaa
aaa
xor
stos
fsubrs
enter
shll
aaa
aaa
aaa
mov
je
pop
dec
ret
adc
jle
movsl
out
add
sbb
adc
in
addr16
fcompl
mov
mov
pop
mov
jle
iret
int
call
dec
or
mov
fsubrl
jnp
out
insb
mov
js
outsl
outsb
outsb
cs
int
pop
push
and
out
add
daa
je
dec
insb
push
lcall
cmp
adc
mov
mov
hlt
scas
inc
movsb
xchg
cltd
mov
pushf
xor
xchg
mov
jmp
data16
lea
scas
sub
call
aam
out
fidivrl
pop
dec
push
arpl
les
lahf
int
pop
xor
jbe
insb
jecxz
sti
jns
out
testb
cltd
iret
cmc
scas
nop
out
out
sbb
jno
cmp
out
push
in
jmpw
xchg
fadds
jg
out
out
jge
or
push
or
push
imul
addr16
sarl
es
icebp
outsb
inc
insb
adc
mov
lods
mov
and
lock
or
sub
xor
notb
push
sub
test
adc
or
lret
cli
cmp
fcompl
fsubrp
add
into
cmp
mov
and
mov
push
out
lods
mov
testl
sub
sbb
inc
daa
jno
lahf
int
or
pusha
loopne
test
flds
ds
pop
shl
add
pop
adc
call
ror
push
mov
sub
out
sti
les
repnz
push
lock
bound
ds
ja
int
pop
mov
adc
jecxz
mov
lock
mov
out
ds
pop
cld
xorb
mov
pusha
adc
test
adc
dec
jno
mov
orb
int3
sub
call
fistps
xchg
mov
pop
xor
scas
std
or
inc
addl
lods
mov
jg
or
test
pop
cwtl
cwtl
ds
push
ret
cmp
fsubl
notb
outsb
out
mov
insb
divl
rep
lock
insb
mov
push
push
push
fwait
or
jne
cmp
lcall
orl
stos
pop
rorb
dec
mov
jo
dec
or
clc
and
popaw
pop
icebp
mov
cmp
push
clc
fcoml
cmp
sahf
jle
shll
mov
int
or
cmp
sub
xor
mov
mov
cmp
aaa
out
adc
outsl
stos
pop
mov
jge
test
lock
movsl
add
add
ret
addr16
xor
mov
pop
rclb
push
pop
lock
es
gs
sub
pop
ds
xchg
xchg
js
pusha
inc
aas
fmul
or
jae
test
stos
adc
sub
sbb
sbb
pop
adc
aam
aaa
jl
aad
outsb
jp
fsubrs
int
daa
push
inc
mov
jno
outsb
outsb
stos
bound
mov
into
andl
adc
pop
ss
fstps
mov
sub
ss
in
push
sbb
sbb
push
push
jns
pop
jae
fdivrl
xchg
xor
cmpsb
jb
adc
inc
jae
jae
inc
jo
jge
mov
xor
jae
ja
popf
repz
pop
mov
loop
jae
or
fimuls
cmc
lods
lock
shlb
pop
jae
jae
lods
sub
mov
loop
hlt
add
jae
jmp
push
outsb
jp
pop
and
cmpsl
push
xabort
mov
test
push
lods
daa
or
bound
cmp
sub
fcmovne
or
fstl
xchg
sub
int
mov
dec
stos
je
cli
rorb
loope
jge
dec
jno
test
lret
jecxz
dec
outsb
outsb
pop
mov
dec
inc
lods
cld
xlat
sbb
inc
out
inc
jge
inc
mov
or
push
arpl
arpl
cmpsl
dec
xor
mov
ja
xchg
fwait
fwait
fwait
fwait
add
fstpt
and
aad
mov
fwait
fwait
fwait
sub
jo
ret
lret
inc
lock
lahf
fwait
in
enter
clc
mov
clc
fstps
adc
test
push
and
inc
xor
dec
dec
cli
push
outsl
mov
ja
adc
fsubs
cmp
orl
std
cmp
lahf
incl
shlb
mov
xchg
cld
cld
mov
movsb
cmp
add
sbb
loopne
mov
jae
mov
addr16
test
mov
adc
out
cmp
icebp
adc
fsubrp
arpl
jnp
mov
test
jae
jae
inc
aam
sub
lahf
jle
in
dec
and
hlt
mov
ret
adc
pushf
xchg
mov
test
nop
xor
out
inc
out
cltd
sti
fmul
xor
cmpl
addr16
jo
fcom
xchg
or
xchg
mov
mov
xchg
add
out
arpl
aaa
repnz
mov
lods
iret
out
inc
add
popf
push
pop
push
sahf
fiadds
lock
cld
push
add
in
cmp
je
andl
pop
mov
int
cmp
les
and
sub
push
sti
andl
loop
insl
mov
and
loope
mov
mov
mov
clc
fbld
clc
mul
out
out
push
push
jno
loopew
fwait
out
sub
out
sbb
andl
sbb
lahf
outsb
outsb
outsb
outsb
mov
adc
in
int
outsb
outsb
outsb
add
test
jns
mov
outsb
arpl
std
jbe
shr
push
clc
add
dec
push
adc
mov
cmpsb
ds
or
sti
shrl
and
shrb
ja
jo
jl
fwait
sub
mov
cmpsl
fnstcw
inc
ficomps
fwait
fwait
insl
push
push
fsubrl
repnz
data16
fmul
int
pop
mov
js
mov
dec
pop
xchg
mov
cmpsb
sub
adc
mov
cli
jnp
icebp
adc
xchg
sti
xchg
mov
fcoml
std
mov
add
jl
loop
and
mov
lret
lret
jg
dec
scas
into
insl
ss
idivl
mov
jo
pusha
jbe
sahf
fwait
iret
int
into
push
adcb
ret
jns
ffree
xor
pop
addl
adc
ds
aaa
mov
pop
sbb
fdivl
loopne
mov
and
jo
into
adc
stos
cmpsb
outsl
mov
lahf
fistl
js
rclb
push
fdivs
cmp
mov
xor
push
inc
loope
mov
scas
push
sbb
data16
mov
mov
sub
push
imul
nop
xor
lock
add
aaa
mov
add
sbb
xor
inc
aad
inc
dec
jle
lahf
ljmp
and
int
addr16
les
jae
dec
add
subb
out
iret
int
inc
xor
xor
sbb
inc
jae
in
xchg
ret
fcoms
pop
andb
std
mov
jae
dec
ret
lret
movsl
adc
xlat
lods
rolb
addr16
les
mov
jge
adc
lahf
xlat
out
lock
data16
fdivr
jecxz
push
mov
adc
ljmp
icebp
fildl
lods
pop
lcall
jnp
sub
fsubrs
int
aaa
inc
ret
in
outsb
add
fstps
sarb
pusha
cs
loop
outsb
scas
jae
popa
outsb
push
movsl
test
outsb
outsb
outsb
or
testl
icebp
mov
xchg
mov
or
shll
nop
inc
iret
jbe
arpl
mov
dec
sub
sar
mov
lea
data16
fdivrl
adc
loopew
sub
add
daa
inc
push
xchg
repz
cli
js
stos
je
fmulp
int
jae
stos
dec
or
jbe
xor
mov
movsb
out
mov
adc
shrb
dec
inc
iret
int
out
lock
imul
push
out
push
js
add
orl
adc
outsb
outsb
outsb
dec
push
or
fdivr
rol
jp
cmp
jp
outsb
mov
mov
sub
pusha
pop
sbbb
aaa
aaa
aaa
mov
adcb
loop
push
ret
cli
shll
stc
aas
outsb
outsb
outsb
outsb
inc
mov
xchg
scas
lock
or
xor
rep
outsb
outsb
outsb
adc
daa
dec
int
cld
insb
outsb
outsb
xor
pop
loopne
pushf
add
insb
pop
imul
dec
fucomip
ret
fnstcw
jmp
out
mov
hlt
xchg
push
push
xor
dec
push
or
cltd
and
lock
pop
xchg
fsubr
aam
xchg
imul
xor
loop
sub
jb
xchg
outsl
addb
sub
dec
ljmp
nop
cmp
push
in
out
dec
in
xchg
or
jle
cmp
iret
int
jb
addr16
ficompl
adc
mov
add
jo
rcr
jge
rorl
in
shlb
cmpsl
leave
dec
dec
in
lods
in
das
dec
test
test
xchg
out
idivb
test
push
out
out
out
ret
je
dec
cwtl
es
out
mov
repnz
idivb
js
adc
addr16
sbb
adc
ret
xchg
nop
cmp
std
shl
in
inc
or
mov
sub
cmp
out
in
mov
cmp
mov
scas
mov
adc
in
adc
xor
es
mov
xchg
mov
push
xchg
sahf
lcall
ds
js
mov
jmp
and
pop
jmp
mov
repz
and
sub
out
ds
jmp
or
stos
sahf
lret
outsl
pop
sti
fcompl
hlt
cmp
cmp
outsb
andb
cmp
cld
jl
pop
mov
in
jae
subb
mov
jge
aaa
mov
leave
mov
sub
repnz
aaa
aaa
aaa
aaa
dec
mov
cmpsb
jecxz
mov
ljmp
nop
dec
fdiv
pop
mov
or
fdivrl
lret
xlat
ret
movsb
pop
xchg
push
pop
xchg
scas
sbb
loopne
sub
hlt
push
arpl
push
xor
loop
cli
fldenv
dec
mov
or
pop
xchg
xor
out
dec
aam
push
jecxz
jle
scas
and
popf
xor
and
aas
jecxz
cmp
idiv
shll
mov
insb
imul
aam
setae
add
mov
jnp
sbb
mov
jo
bound
and
sub
cld
sbb
and
ror
pop
in
inc
dec
sbb
jae
mov
cmp
or
push
call
jae
das
push
pusha
push
pop
mov
outsb
outsb
outsb
cli
jbe
enter
push
dec
cmp
dec
inc
inc
mov
int
sbb
int3
fstpl
outsb
outsb
test
sub
out
out
pop
lock
adc
ja
adc
outsb
xorb
jge
sub
stos
out
repz
add
fdivr
insb
pop
add
arpl
lcall
orl
pop
sahf
loope
outsb
mulps
aas
sbbb
lock
mov
test
add
les
push
fidivrl
mov
ja
addl
or
pop
push
add
jecxz
dec
rep
adc
ds
mov
cmp
outsl
mov
sub
lahf
fwait
fwait
sub
xor
xchg
mov
mov
cmp
cltd
lret
pop
call
jge
mov
lret
lea
iret
out
or
stos
scas
cmc
jge
sub
or
movsl
lret
cmpsb
or
push
lcall
mov
jecxz
xor
iret
mov
push
sbb
jnp
jne
ss
lds
jl
iret
out
iret
icebp
sub
cmp
gs
xchg
sub
jl
aas
adc
xor
xor
pop
mov
or
mov
lahf
int
das
pop
lcall
insl
or
out
jbe
push
decb
popa
cld
lods
fcoms
subb
out
jae
mov
push
mov
int
in
jae
sub
dec
ror
cmp
inc
repnz
iret
int
int
mov
mov
or
sbb
aaa
aaa
aaa
mov
xchg
and
js
dec
fildll
aam
cmpsb
jle
pop
imul
bound
xchg
xchg
stos
fwait
jae
sti
lock
sbb
cmpsl
push
lds
jae
dec
push
movsb
test
or
test
loope
jae
or
jne
popa
es
pushl
xchg
mov
cmp
or
cmp
fstpt
outsb
outsb
push
std
or
stos
fildll
and
hlt
mov
lret
inc
push
inc
xchg
fcoml
lods
pop
cmpsb
idivb
mov
jb
stos
jecxz
add
cmpsl
dec
mov
sahf
out
mov
out
notb
inc
int
int
sub
movsb
stos
mov
xor
inc
lahf
int
dec
lods
push
sar
cmp
dec
test
inc
jae
sti
xchg
lock
xchg
imull
pushf
jle
lahf
in
push
sbb
cmp
imulb
clc
fmull
mov
cli
inc
mov
test
jecxz
cs
cmpsb
xor
xchg
or
scas
push
xor
push
pushf
push
nop
mov
sub
addr16
sub
lods
ds
mov
or
cwtl
mov
fistl
cli
jb
push
lods
in
lea
lahf
int
adc
pushf
add
push
lahf
in
sub
sbb
lods
push
in
outsl
cmp
ret
mov
inc
lds
icebp
fwait
aas
or
mov
iret
jp
in
out
fstpl
sub
outsb
scas
imul
adc
add
sbb
mov
mov
mulb
push
out
pop
repz
dec
aad
shl
out
out
xor
jo
jecxz
or
out
jnp
mov
fildll
ret
cmp
into
cwtl
iret
add
push
jnp
popa
push
xor
out
sti
fstps
xor
outsb
les
test
jae
jae
dec
and
mov
push
fwait
iret
cmp
and
jns
mov
fwait
fwait
fwait
aam
pop
or
sti
pop
lret
mov
push
repnz
xor
xchg
scas
lods
mov
adc
pop
ss
dec
test
fsubs
mov
mov
orl
inc
adc
inc
push
movsb
mov
mov
sub
les
cmp
adc
lret
int
int
mov
or
int
int
es
push
jg
or
repz
pop
iret
int
add
lahf
inc
cmp
shrb
or
pop
in
or
lock
sbbb
and
adc
jns
das
xorl
fisubrl
xor
fwait
fwait
fwait
fwait
mov
push
js
or
push
fwait
fwait
fwait
fwait
cmp
nop
cli
iret
lods
jne
outsb
outsb
aas
fwait
data16
in
jle
jg
imul
sub
sti
dec
dec
in
loop
mov
xor
mov
insb
add
push
dec
popa
mov
inc
insb
imul
arpl
subb
pop
adc
and
mov
outsb
outsb
and
gs
xor
xchg
fldt
aas
mov
int
pushf
push
movb
andl
addr16
cld
inc
sbb
xchg
lret
add
aad
fs
inc
cmp
jae
lcall
xchg
sub
test
ds
mov
jg
fcomps
inc
hlt
movsl
addr16
iret
xchg
pop
mov
out
mov
mov
pop
aad
out
out
loopne
lea
in
enter
out
aad
push
aaa
and
in
add
lret
mov
out
out
nop
push
ja
mov
int
aas
cli
lcall
inc
adc
out
out
testl
fcmovne
adc
imul
sahf
fwait
fwait
popa
ret
and
loope
xor
mov
mov
int
xorl
and
xchg
int
int
dec
push
mov
mov
push
sub
insb
sub
fidivrl
ss
and
bound
pop
push
insl
or
lock
or
aaa
mov
and
push
mov
aad
cli
insb
xchg
std
in
mov
jl
imul
fmull
sbb
addr16
mov
mov
xchg
aaa
aaa
mov
push
loopne
movsl
es
sbb
cwtl
sbb
aad
aaa
aaa
aaa
xor
xor
add
ds
aaa
push
xchg
sahf
cwtl
cmc
push
mov
push
add
les
mov
cs
jl
fwait
fwait
repz
pop
outsb
push
sub
out
into
in
jnp
push
lret
int3
push
ficoml
pop
sub
xchg
jmp
sbb
or
in
lret
fucomp
es
out
add
lods
scas
pop
push
inc
xor
adc
pop
xchg
inc
push
cmc
mov
test
out
mov
movsl
cwtl
xor
je
aaa
mov
lret
cmc
push
andl
fwait
fwait
mov
xchg
insb
cltd
ror
sbb
xchg
cmp
ds
mov
inc
mov
sub
out
pop
sarb
jecxz
xchg
cmpl
pop
inc
insb
cmp
js
dec
rclb
inc
or
mov
adc
int
rcrb
xchg
sbb
pop
scas
pop
jp
aaa
and
xchg
das
and
popf
fldt
pop
sub
call
out
jl
pushf
mov
adc
inc
out
or
fnstenv
mov
fdivrl
test
cmove
mov
shlb
icebp
shll
cmp
cmp
vmovdqu32
loope
mov
movsb
and
mov
mov
mov
jge
cwtl
mov
sbb
cmp
fwait
push
inc
or
loopne
mov
push
cmpsb
adc
mov
or
xor
mov
ds
int
mov
push
pop
mov
ljmp
popa
notb
dec
movsl
imul
in
aaa
aaa
ja
pop
leave
jecxz
ret
mov
gs
aaa
aaa
aaa
pop
xor
push
outsb
and
xor
aaa
xchg
push
cmp
loopne
push
addb
mov
clc
shlb
fadds
mov
sahf
cli
xchg
arpl
outsb
out
enter
fwait
movhps
aaa
aaa
mov
movsb
pop
ljmp
add
imul
jle
aaa
cmp
jmp
outsl
pop
xor
fiaddl
mov
mov
repz
divb
es
rclb
mov
test
out
mov
push
fs
dec
xor
je
testb
sbb
es
mov
out
pusha
and
sub
iret
out
jle
xchg
adc
inc
das
mov
dec
jecxz
ret
adcb
cli
and
sub
mov
pop
dec
mov
inc
jne
loopne
jae
pushf
jecxz
xor
jb
adcb
mov
cmp
scas
ror
lea
xor
out
outsb
outsb
outsb
aas
popf
pop
lods
lea
fmull
lods
daa
jl
lods
pushf
push
sub
int3
push
push
clc
sub
enter
ficoms
pop
add
lret
movsl
sbb
dec
or
xor
por
hlt
mov
push
pop
lcall
aaa
aaa
pop
cmp
repnz
arpl
sub
ss
aaa
cmpb
cltd
shrb
int3
push
mov
ret
sbb
rolb
int
cmc
fwait
iret
adc
and
test
popa
shlb
sahf
xchg
mov
icebp
mov
pop
out
faddp
inc
jmp
jbe
adc
dec
jge
aaa
aaa
mov
pop
dec
xor
xchg
sbb
aaa
aaa
aaa
mov
lock
inc
jecxz
insb
int
sti
push
sub
adc
mov
sbb
aaa
mov
int
pushf
int
leave
jns
bound
jo
aaa
aaa
test
mov
repnz
xor
icebp
fstps
cmp
jmp
mov
movsb
cmp
mov
rorb
pop
call
or
dec
daa
xchg
in
cli
daa
push
inc
push
xchg
outsb
shll
mov
sub
cmp
icebp
mov
cmp
add
sbb
pop
aaa
jbe
arpl
xchg
or
or
cmp
push
jmp
mov
imul
jbe
jae
jae
insb
jns
pop
cld
ja
sbb
jae
test
adc
setp
inc
fbstp
jae
sub
into
sub
jge
das
ds
shll
mov
xor
out
pop
sub
pop
subb
testb
popa
aad
fsubl
pop
data16
mov
adc
mov
inc
sub
xchg
mov
jns
ja
add
rorl
js
out
js
sbb
xor
in
mov
out
faddp
push
cmp
push
iret
mov
out
or
in
sub
sti
push
test
shlb
xchg
jae
jbe
lea
or
testl
cmp
insl
jp
aaa
aaa
daa
dec
mov
outsb
outsb
cli
mov
lock
ds
push
jge
outsb
outsb
outsb
outsb
test
jle
or
shlb
outsb
outsb
outsb
adc
stos
add
cmp
outsb
outsb
outsb
outsb
push
test
cmc
jb
mov
ret
pop
lahf
jle
and
icebp
and
ret
jae
or
pop
fnstsw
out
aad
aaa
mov
cmpsb
lret
pop
out
cmp
in
ss
jle
aaa
ret
out
lahf
push
les
sbb
cmpb
aas
mov
mov
or
jae
dec
int3
insb
cli
mov
repnz
int
aas
mov
lods
insb
xor
data16
mov
jno
outsb
cli
insb
outsb
outsb
outsb
xor
xchg
clc
ja
add
adc
cli
jp
mov
pop
and
mov
negl
outsb
outsb
fisttps
insb
fiadds
bound
adc
pop
jecxz
stc
mov
mov
and
xchg
addb
outsb
cmp
pop
ret
xchg
dec
lcall
jle
fcmovb
ficoml
loope
jg
cmp
adc
dec
inc
mov
aam
lods
mov
inc
sub
adc
jnp
in
hlt
fadd
and
or
testl
enter
in
jnp
push
fidivl
das
lcall
addr16
pop
movsl
pop
mov
xor
int
int
pop
push
out
dec
or
loop
lcall
sub
mov
rorl
jae
sti
enter
inc
jg
mov
in
jae
jae
fsubl
and
mov
iret
int
jmp
cmp
jo
jae
sti
sbb
outsl
pop
idivl
pop
das
pop
lds
test
inc
fsts
xchg
add
addr16
lods
mov
imul
in
jnp
mov
mov
push
xchg
pop
sahf
and
aas
mov
add
fwait
pop
in
jg
call
movsb
push
fs
mov
into
int
cmp
out
sub
cmpsl
out
rorl
push
mov
add
shll
pop
xchg
mov
jae
iret
cld
mov
sub
rclb
xor
or
or
adc
jae
jae
sti
dec
jl
incb
outsb
mov
mov
adc
dec
pop
or
fsubrp
jbe
jnp
mov
sub
sbb
stc
sub
mov
shrl
mov
insl
push
dec
les
sbb
in
mov
fwait
fcmovne
mov
pop
mov
gs
cmpsb
push
dec
mov
lahf
fwait
pop
out
xchg
push
cs
push
mov
mov
add
mov
aaa
aaa
aaa
aaa
shlb
movsl
xlat
imul
mov
aaa
push
stos
jbe
stc
mov
fcompl
xchg
mov
mov
push
cmovge
stos
mov
pop
sbb
mov
pop
inc
dec
filds
adc
lods
add
sbb
pushf
into
jo
adc
add
xchg
jle
jo
pusha
mov
mov
divb
push
imul
xchg
or
pop
xor
push
or
aaa
or
mov
fsubrs
int
jno
lahf
xchg
lock
or
push
jmp
outsl
sti
pop
js
mov
mov
jae
adc
jnp
pop
pop
sti
fcompl
ljmp
jecxz
inc
hlt
mov
jae
jae
data16
jbe
rcrl
shlb
aaa
jl
jl
inc
mov
out
notb
jecxz
bound
mov
inc
mov
jno
sbb
jne
add
data16
mov
loop
xchg
push
fnstsw
setle
pop
add
jae
fsubrl
and
bound
aaa
mov
in
movsb
mov
xchg
test
push
jle
int
xor
fwait
xor
outsb
outsb
cs
xor
add
jbe,pn
or
outsb
outsb
loop
xchg
adcl
mov
pop
inc
or
cmpsb
push
push
into
shlb
and
xchg
lods
out
jae
dec
cwtl
aaa
pop
jp
push
out
pop
adc
adc
out
addr16
sub
ret
jle
xrelease
jmp
cmp
mov
sti
insb
iret
sbb
sbb
inc
fisubrl
xchg
jo
out
mov
push
jp
fstps
cs
js
fdivrl
into
fiadds
mov
add
mov
sbb
sahf
repnz
mov
sahf
ret
xlat
in
mov
cmpsb
out
jbe
xor
push
or
iret
out
out
pop
gs
cwtl
pop
fidivrl
dec
sbbb
adc
xchg
out
insl
daa
mov
jle
inc
sbb
inc
push
sbb
mov
rorb
xor
out
divb
shlb
in
out
out
into
inc
jge
aas
cld
jl
jno
mov
ljmp
call
ret
cwtl
int
int
daa
adc
pop
cli
xchg
aam
or
arpl
push
setg
mov
jge
mov
int
xor
xchg
mov
jl
clc
mov
aaa
aaa
lahf
in
rorl
fcmovu
mov
aas
fwait
js
xchg
andb
or
jl
das
mov
xchg
loopne
jg
adc
insb
outsb
iret
pop
push
pop
push
daa
mov
xchg
icebp
lock
xchg
sarl
insb
je
lret
icebp
jecxz
jno
push
sub
fwait
fwait
fwait
fwait
pushl
fsubl
jle
mov
pop
jo
js,pt
fdivp
and
into
in
sti
mov
test
inc
ds
ret
sub
fwait
or
stc
lods
push
jg
adc
adc
xchg
sub
xor
cmp
addr16
push
cmpsl
or
test
ss
aaa
pshufw
jnp
cli
adc
and
lock
lea
and
cltd
sarb
push
pop
and
aas
fcmovnbe
insb
sub
mov
jle
fwait
sbb
cld
insb
outsb
outsb
shl
sarl
ds
sub
aaa
aaa
push
enter
insl
hlt
jg
jecxz
inc
int
pop
ds
sub
aaa
xchg
std
mov
cmpb
mov
jnp
xchg
mov
bound
test
ja
in
adc
insb
pusha
stc
fs
jp
loop
mov
sbbb
fcom
scas
cmp
neg
popa
fbld
mov
inc
jns
cmc
into
xchg
jl
dec
lea
pop
dec
cmpsl
push
fwait
mov
int3
pop
clc
mov
je
or
add
mov
inc
pop
mov
and
fmull
hlt
scas
int3
jnp
xor
out
fwait
mov
xor
adc
idivl
scas
subb
pop
sbb
lret
dec
insb
test
fucomi
xchg
nop
iret
ror
inc
rclb
js
or
push
std
mov
jmp
aaa
cld
lods
clc
inc
out
push
out
xchg
ja
adc
inc
inc
or
out
test
push
push
adc
subb
inc
shlb
addr16
lock
cmp
sarl
aaa
jecxz
mov
xchg
cmp
mov
aam
sub
sbb
sub
jnp
push
add
aaa
push
pop
xor
mov
add
in
sti
cltd
sbb
cld
mov
sbb
jmp
adc
mov
imul
test
adc
test
test
out
in
addr16
pop
out
repz
dec
or
rcrl
pop
insl
adc
cmp
imul
ss
in
outsl
out
jbe
mov
adc
inc
jne
aas
fwait
or
addl
pop
mov
outsb
pop
sbb
jge
pop
sahf
push
cli
push
sahf
scas
lock
sub
fsin
add
jle
lock
repnz
imul
push
addb
ret
loopne
data16
fdivrl
mov
push
dec
ljmp
aas
das
cli
cld
out
jo
pushl
insl
sar
xor
adc
mov
jae,pt
pop
jno
push
mov
inc
inc
inc
jle
aam
into
arpl
movsb
lods
push
outsb
outsb
outsb
outsb
pop
aad
pop
xchg
shr
aas
cld
scas
jno
aaa
aaa
jge
loopne
mov
cmpsl
lods
incl
push
aaa
aaa
aaa
aaa
sub
xor
pop
test
icebp
mov
loop
cmp
es
pop
xchg
add
imul
out
mov
aaa
ljmp
push
shlb
ror
nopl
out
jp
adc
addr16
mov
add
iret
scas
pop
jle
int3
adc
mov
int
push
mov
outsb
add
push
lcall
fbld
into
int
fists
add
sbb
mov
cmp
fsub
sarb
rcrb
xchg
jo
sub
pop
xor
inc
bound
iret
out
jmp
jle
cs
push
push
data16
outsb
outsb
outsb
jbe
daa
jb
pop
cltd
cld
addr16
mov
insb
adc
pop
gs
out
sahf
jle
push
ds
sbb
fistl
repnz
mov
adc
incl
loope
rorb
sub
jge
ret
in
pop
les
inc
stc
push
clc
cwtl
lea
sti
outsl
mov
in
daa
mov
mov
pop
xor
inc
ret
adc
ss
rclb
jmp
jmp
xchg
or
pop
jle
pop
push
cmp
adc
pop
dec
mov
cmpsl
mov
sahf
fwait
or
leave
cmp
mov
sahf
push
sar
aaa
rcrl
xor
adc
shll
aam
jle
lock
cwtl
jp
cmp
test
jno
dec
pop
xor
mov
ror
lock
jnp
push
out
mov
lret
jb
je
mov
dec
mov
pop
xchg
aas
pop
movsl
inc
out
dec
out
sahf
mov
cmc
mov
sbb
lahf
fldt
cmp
in
outsb
sbb
and
jbe
xor
cltd
cwtl
and
push
pop
lods
rolb
es
testb
sbb
cli
out
pop
sbb
pop
scas
xchg
shll
sarb
xchg
mov
outsb
cmpsl
pop
movsl
dec
bound
loop
or
faddp
enter
cmp
mov
ds
add
ficompl
hlt
jno
out
cltd
stos
jmp
cli
icebp
cmp
jecxz
pop
lret
xor
mov
out
sarb
jae
or
icebp
leave
lahf
inc
js
dec
mov
test
lods
cmp
in
sbb
int3
cwtl
les
pop
ljmp
push
jl
jo
or
das
mov
pop
push
fcoml
mov
inc
jmp
mov
lahf
sahf
rcl
ret
les
dec
xor
scas
jge
test
test
dec
xor
rorb
mov
ror
xchg
pop
insb
jbe
rcrb
sbb
or
lds
fwait
aaa
notl
test
push
jbe
jge
outsb
outsb
and
stos
js
lock
dec
mov
pop
sbb
cmp
push
or
icebp
sarl
sahf
in
push
cmpb
pop
ret
outsl
cmp
shl
xchg
sbb
bound
idivb
lea
pop
mov
dec
xchg
popf
fcmovne
out
xchg
jo
ljmp
mov
orb
push
jle
dec
mov
fwait
fwait
fwait
fwait
ljmp
adcb
or
fwait
fwait
mov
test
push
repnz
mov
aam
fsubs
pop
int
cmc
xor
loop
fwait
stos
ds
imull
xor
mov
xchg
push
pop
inc
xor
cwtl
xor
cmp
lahf
jmp
mov
out
cmpsb
lret
sar
inc
or
jg
cmpps
jno
jae
out
xchg
jl
push
es
mov
jae
gs
pop
outsb
addl
xchg
jl
out
je
daa
cli
std
xchg
cmc
rcr
fucomi
sbb
leave
pop
adc
add
fs
shlb
aam
push
sub
outsb
jmp
dec
clc
pop
hlt
fwait
push
mov
es
lods
xor
mov
popa
sub
fcmovnb
rclb
add
lahf
orb
or
test
mov
movsl
mov
pop
xchg
mov
lahf
int
out
stos
inc
loope
repz
fwait
mov
sbb
mov
mov
push
and
fwait
fwait
xor
adc
imul
adc
or
cmp
jecxz
jae
mov
cld
insb
outsb
outsb
test
shll
push
cmp
xor
pop
fildl
popa
sub
mov
xchg
sbb
out
mov
rorb
dec
push
pop
cmpsb
pop
lahf
fwait
fwait
aaa
push
pop
in
mov
or
xor
int
test
lds
fdivrl
mov
into
das
sub
ret
hlt
fstpt
loope
nop
dec
xchg
inc
iret
pop
test
lcall
push
pushl
cltd
cli
icebp
fnstcw
out
jl
jmp
jl
fdiv
mov
int
dec
decb
outsl
pop
push
lret
xchg
jecxz
cli
jp
inc
outsb
inc
fcompl
aas
lods
push
mov
movsb
xor
clc
and
or
jp
int
adc
or
sti
and
iret
sbb
les
dec
mov
jae
ret
inc
lods
test
fmuls
insl
sub
mov
fwait
or
aaa
cmc
adc
inc
hlt
mov
and
ds
je
imul
cmp
xchg
adc
adc
les
jnp
jae
or
mov
les
pusha
sbb
shlb
dec
movsl
pop
cmp
pop
and
repnz
dec
scas
cld
jae
iret
in
xchg
mov
fadds
addr16
pop
addr16
pop
fidivl
push
xchg
mov
scas
cmp
insb
out
out
push
adc
and
out
out
cmc
push
insl
adc
out
popa
ljmp
loope
mov
dec
cmp
and
movl
or
add
pushf
mov
icebp
addr16
sub
cmp
fisttpl
jne
adc
dec
and
jae
shl
mov
out
pop
and
push
cmp
addr16
ret
adc
fwait
mov
jmp
pop
or
insb
sbb
and
xchg
cmpsb
jae
mulb
and
sti
inc
iret
pushf
and
lock
icebp
inc
ficompl
sarb
das
sar
sahf
push
push
imulb
jecxz
pop
data16
inc
jge
lcall
dec
sbb
call
push
sahf
push
and
mov
outsb
outsb
scas
xor
pop
and
push
fldenv
fimull
outsb
outsb
outsb
outsb
push
stos
adc
in
or
outsb
cltd
andl
push
clc
jmp
in
jbe
push
dec
jb
out
jae
jae
jbe
int
mov
jnp
aam
pop
or
std
dec
int
addr16
adc
inc
jle
mov
xchg
fisubl
sbb
outsb
out
clc
cmpb
in
dec
cld
push
testb
pop
mov
je
hlt
lret
shlb
aaa
cld
in
stos
cmp
push
mov
mov
cld
xor
addl
lret
ret
xchg
ds
pop
cld
fs
lahf
into
push
test
out
ja
loopne
push
push
adc
fcmovnb
or
clc
nop
sahf
add
ljmp
push
ficomps
shrb
fistl
dec
movsl
pop
out
mov
fwait
fwait
fwait
push
xchg
pop
test
jp
sub
notl
ljmp
pop
movsl
xchg
repnz
dec
iret
int
mov
xorb
mov
or
dec
out
cmc
pop
xlat
mov
jb
or
mov
pop
mov
pop
test
sbb
xchg
fcoml
outsb
xor
flds
cs
data16
adcb
dec
jge
jo
fwait
fwait
fwait
mov
push
mov
insb
outsb
sahf
int3
ds
sti
js
mov
fcompl
hlt
je
add
add
or
stc
push
mov
out
mov
mov
icebp
repnz
addr16
iret
ja
aad
clc
xchg
push
lods
jle
mov
aam
in
lods
mov
or
jmp
sti
fdivrl
mov
shrb
adc
xchg
mov
movsb
in
fidivs
loopne
fwait
fwait
fwait
fwait
jno
lret
mov
xchg
xor
fwait
jecxz
dec
push
mov
pop
add
ljmp
fildl
dec
add
sbb
fcom
mov
pop
insb
mov
mov
or
jno
cs
addr16
mov
adc
pop
sahf
mov
xchg
flds
add
mov
aaa
push
scas
push
subl
lea
cmp
stc
nop
and
pushf
out
fcoml
pop
int
in
sbb
jge
cmp
mov
int
int
mov
mov
sbb
aaa
mov
ja
pop
mov
xchg
dec
push
sbb
jl
rol
xchg
enter
jae
iret
divb
and
lret
mov
ret
dec
sub
push
adc
ror
jne
jl
divb
mov
cmp
test
sub
inc
int3
xor
mov
lea
jae
or
sarl
out
xor
mov
cmc
ljmp
stos
cmc
div
arpl
aaa
aaa
aaa
aaa
dec
jl
fldt
iret
inc
test
jle
aaa
mov
jbe
mov
notb
clc
and
sbb
mov
xchg
out
ss
push
sbb
lcall
fisubs
sbb
jge
clc
fsubl
leave
and
nop
push
fimull
icebp
test
out
or
jns
enter
subb
out
out
mov
dec
je
dec
sti
fdivrl
push
orl
aam
or
jae
jae
std
lahf
adc
push
pop
cmpsb
mov
in
outsb
cli
push
out
cmpsl
movsb
cmc
shl
mov
aaa
aaa
mov
jne
mov
js
add
adc
sub
aaa
push
lcall
cli
lods
mov
int
jno
pop
sub
movsb
fdiv
mov
int
negb
xchg
inc
push
mov
fsub
sub
xchg
xchg
scas
lahf
fildl
cmp
ja
adc
cmp
int
shlb
gs
pop
cmp
int
push
dec
ja
mov
inc
cmp
jle
lahf
int
cwtl
adc
sbb
pushf
sub
clc
popf
mov
inc
test
outsb
mov
jae
ds
jg
rcll
mov
jae
mov
inc
sete
xor
addr16
jae
push
inc
pop
pop
mov
out
pop
mov
leave
mov
loopne
jns
mov
rorl
cmp
out
push
int3
or
or
into
sbb
jecxz
mov
lret
decl
cwtl
movsb
hlt
mov
jae
push
ret
test
orb
inc
pop
push
nop
fidivrl
loop
jb
inc
out
or
mov
in
cmpsl
fistpl
inc
fs
rol
js
cmp
cmc
pop
lahf
hlt
insb
lahf
or
test
rorl
out
test
icebp
bound
cwtl
and
lcall
cmp
or
push
push
pop
sti
inc
in
rcll
stc
int
sub
pop
rcrl
aam
xor
insb
sbb
out
js
push
jl
sbb
out
imul
jl
xchg
lock
std
mov
xchg
bound
filds
jb
xor
sahf
lock
push
jmp
fcmovu
and
cld
or
test
out
push
pop
add
mulb
fs
xor
divb
shl
out
sti
jo
pop
sarb
loop
xor
cwtl
inc
xchg
es
out
out
add
inc
les
inc
nop
mov
jecxz
mov
fwait
push
add
jno
outsl
popa
inc
fcoms
lret
rclb
dec
out
lahf
fucomp
mov
pushf
and
ja
mov
fwait
sub
inc
adc
mov
cmp
pop
cmp
sti
sub
lods
pop
call
jno
icebp
add
pop
add
xchg
stos
rorl
cli
in
repz
imul
push
in
fstl
rorl
inc
cli
into
xchg
mov
je
pop
gs
xor
insl
mov
jne
push
xor
sbb
mov
mov
add
mov
enter
push
mov
mov
add
stos
xor
pop
iret
divb
xchg
xchg
sbb
out
hlt
mov
pop
jnp
int
mov
push
outsb
sbb
mov
xor
gs
mov
ret
and
xlat
mov
addb
fistps
aas
fwait
jp
scas
jl
mov
ds
or
es
into
jns
dec
mov
sti
dec
or
fs
pop
movl
sub
inc
fldl
sbb
push
cmp
cltd
lahf
in
jae
inc
pop
pop
add
into
bound
out
nop
pop
loope
xchg
xchg
adc
pop
adc
cli
jbe
pushf
repnz
in
addr16
in
shlb
jl
in
test
into
loop
mov
jbe
xlat
add
outsb
pop
call
adc
cmpsl
jns
cmp
sub
jle
mov
shr
mov
test
cmp
or
and
call
outsb
es
insb
stos
fdivrs
mov
mov
mov
jae
notl
pop
push
stos
and
enter
and
mov
jbe
inc
addb
inc
add
mov
mov
inc
xor
jmp
jmp
jmp
adc
fcmovne
out
pop
xlat
and
rorb
jnp
inc
lahf
lcall
xchg
int
int
push
icebp
pop
out
je
psubb
jmp
fmul
int
int
or
test
xor
lahf
int
int
cmc
jae
adc
mov
aaa
aaa
aaa
mov
cmp
aaa
lahf
xor
mov
xchg
aaa
aaa
aaa
aaa
rcrb
out
aad
ljmp
sub
int3
sarb
test
jle
push
and
outsl
aam
push
fwait
lcall
fmull
fwait
push
mov
dec
loop
mov
push
mov
pop
xchg
xor
push
sbb
aas
cmp
jo
mov
cwtl
cmp
aaa
aaa
cmpsb
les
das
jmp
mov
call
xchg
cmc
sbb
insb
inc
loope
cmp
dec
and
cmpsb
sbb
mov
inc
xorb
test
out
mov
and
dec
rcrb
adc
jo
roll
outsb
jl
loopne
sub
in
xchg
dec
dec
aaa
pop
cmp
sub
mov
or
outsl
movsl
aaa
aaa
aaa
aaa
insl
roll
adc
sbb
outsl
jmp
aaa
aaa
aaa
aaa
mov
pushf
mov
scas
mulb
aaa
aaa
mov
fldcw
inc
xchg
out
jb
sti
inc
jge
jo
shl
cmp
cmpsl
jae
jae
andb
adc
mov
mov
lods
inc
popf
mov
or
leave
repz
adc
dec
adc
pushf
aaa
outsb
outsb
aas
fwait
stc
inc
push
mov
jl
jge
test
push
movsb
stos
aas
inc
jge
aaa
aaa
es
sarl
outsl
idiv
jp
or
mov
aaa
aaa
aaa
mov
sahf
clc
jno
jb
int
mov
fwait
cmp
aaa
xchg
rcll
and
int3
fwait
fwait
fwait
fwait
cmp
sub
jg
jno
std
dec
mov
fwait
insb
test
mov
icebp
inc
sbb
pop
nop
outsb
mov
push
mov
mov
pop
jge
ds
dec
sahf
das
jo
push
xchg
divb
or
cmp
sbb
mov
cli
adc
mov
cli
inc
bound
mov
dec
adc
sub
into
dec
aas
in
fildll
jae
pusha
dec
out
test
mov
inc
in
repz
sahf
adc
pop
into
cmp
fdiv
mov
clc
pusha
push
sbb
pop
xor
in
or
fldcw
pop
jne
xchg
sti
or
rcrb
mov
jmp
orb
xor
mov
aaa
movsb
add
add
sarb
je
xchg
ret
out
fbstp
xchg
loope
je
mov
ljmp
xchg
mov
jbe
sbb
ret
lret
pop
mov
andb
fwait
adc
clc
lret
jp
cmp
dec
pop
aad
sub
sbb
fstpt
jo
nop
pop
test
sub
and
jae
loopne
in
xchg
jne
mov
adc
int
jae
push
inc
loopne
adc
and
jg
cmc
inc
iret
out
mov
hlt
adc
or
add
add
xchg
fildl
je
jns
test
testb
and
inc
psrad
or
pop
pushf
jle
jl
fisubrl
fisttpll
into
push
add
fistl
add
dec
mov
mov
in
adc
std
add
scas
ds
scas
iret
int
sbb
inc
mov
and
in
sti
rorb
cmp
out
iret
int
and
orb
aas
cli
lods
out
pshufw
fwait
inc
push
push
movb
pop
js
pop
js
cltd
xor
cmp
mov
add
sub
clc
lods
rclb
fcmovne
xor
dec
fsubs
movsb
int
add
jo
loop
lods
dec
testb
or
pop
hlt
inc
mov
aaa
lahf
fwait
fwait
push
pop
mov
xchg
imul
les
ss
lahf
dec
lods
sub
or
adc
mov
ja
std
insb
inc
inc
mov
xchg
sahf
push
lahf
fistl
ficompl
mov
push
jae
cmpsb
sub
int
int
orps
addr16
int
int
or
lret
adc
lcall
ds
inc
mov
gs
lret
and
and
jae
testl
push
scas
mov
pop
cmp
push
push
insb
jmp
mov
movsb
and
and
push
addr16
jae
loope
jmp
sbb
in
es
movb
mov
jae
sub
jbe
push
inc
or
test
mov
mov
cmp
mov
sarl
add
sbb
sbb
mov
js
push
mov
cltd
stos
xor
and
ds
inc
fwait
test
mov
test
clc
ss
imul
xchg
movsb
ret
sti
icebp
fistps
clc
jns
lock
xchg
std
stos
jnp
ds
bound
cmp
nop
push
in
fbld
jae
mov
push
xchg
jl
sarb
and
inc
je
hlt
sbb
jge
outsb
insl
push
mov
sbb
fcomi
mov
sub
push
insb
fcmovu
sub
js
adc
jmp
repnz
inc
pop
lea
insl
jp
cmp
and
shll
fwait
mov
stos
inc
cmpsb
gs
addr16
iret
out
notb
mov
xor
jae
mov
sti
adc
aaa
mov
loop
mov
inc
xlat
cmp
sbb
jecxz
testb
push
jge
outsb
outsb
pop
cmpb
inc
add
mov
daa
or
movsb
push
fistl
pop
sbb
jmp
cmp
fwait
fwait
fwait
fwait
adc
rorb
xor
mov
scas
mov
nop
test
or
outsb
outsb
outsb
aas
xchg
mov
mov
imulb
sti
inc
fs
mov
sbb
inc
or
mov
add
mov
add
cld
mov
fmuls
dec
jmp
fisubl
mov
dec
pop
jae
sub
jae
in
and
or
in
mov
in
sub
inc
int3
out
xor
fdivrl
mov
xchg
pop
sahf
rol
repnz
adc
pusha
mov
addr16
mov
push
jbe
mov
xchg
subl
loopne
test
push
pop
sbb
aaa
adc
out
std
xor
filds
lock
jl
adc
outsl
aad
push
jns
push
aam
mov
ja
and
outsb
xlat
and
push
xchg
fst
mov
mov
jge
jb
dec
mov
push
rorb
add
dec
pop
lea
clc
fldenv
pop
cs
inc
loopne
dec
fildl
jmp
lods
sahf
js
adc
cmp
sahf
fwait
fwait
fwait
sbb
test
addr16
mov
icebp
std
xor
adc
outsl
aas
xor
jg
fdivl
xor
sbb
sbb
adc
pop
out
inc
std
inc
and
xchg
pop
jbe
xchg
xchg
iret
out
cmp
sub
test
mov
mov
cmp
loopne
out
out
adc
jns
jb
sbb
repz
insb
xchg
je
ret
mov
int
jge
pop
iret
mov
sbb
or
xor
ret
je
mov
ja
lods
and
rorb
outsl
fwait
sub
aaa
mov
fdivr
ljmp
cmp
das
mov
sahf
arpl
dec
mov
inc
xor
fwait
fwait
fwait
fwait
popa
stos
pop
xchg
dec
xchg
jae
dec
and
fs
dec
or
inc
inc
aaa
mov
fwait
fwait
mov
xor
pop
out
js
mov
mov
jbe
adc
gs
mov
push
cmc
add
sar
sti
int3
pop
sbb
push
test
ds
icebp
fsubl
sbb
adc
out
add
pop
mov
je
mov
aaa
aaa
aaa
aaa
adc
push
lcall
aaa
std
jg
add
sub
ja
sub
fadd
pop
mov
adc
ljmp
loop
mov
out
jecxz
movl
jle
icebp
mov
aam
fdivl
mov
std
inc
mov
inc
ret
popa
fwait
fucomi
xchg
fcomps
add
xor
cmp
or
lock
bnd
push
xchg
sahf
push
mov
addr16
fsin
cmp
cmc
jle
mov
xor
pop
sbb
adc
mov
mov
xchg
cld
outsb
cmovge
fsubp
out
shl
sti
es
mov
inc
sbb
dec
sbb
aaa
push
std
ss
popf
inc
aaa
shl
xor
jp
aaa
aaa
cmpsb
dec
sbbb
jae
sti
dec
inc
sub
cmp
mov
mov
fcmovne
addr16
xchg
data16
inc
in
into
sbb
int
lahf
cwtl
lret
movsb
out
ss
xchg
mov
sahf
ds
xchg
xor
and
pop
int
in
sti
inc
mov
cmp
lock
mov
jo
leave
lea
pop
inc
outsb
outsb
outsb
push
mov
xchg
sub
aas
enter
outsb
dec
out
jnp
sbb
ficoms
test
int
int
leave
inc
in
mov
inc
fimuls
sub
sbb
insl
out
xor
lods
cli
or
add
test
inc
out
jae
ret
neg
cld
jp
in
jmp
cwtl
in
addr16
insb
ljmp
repnz
fdivrl
pop
mov
dec
repnz
fmull
mov
mov
imulb
out
xchg
and
inc
fdivr
push
inc
inc
bound
leave
arpl
jae
sti
inc
pop
das
bound
fnstsw
idivl
andb
sub
mov
sub
shr
push
test
xor
push
lret
out
pop
cmpsl
mov
mov
sub
icebp
out
pcmpeqw
adc
call
sbb
mov
in
mov
int3
and
jge
dec
pop
fdivrl
xor
jbe
mov
imulb
scas
idiv
or
cmpsl
and
dec
ja
adc
int
int
add
lret
mov
or
sar
sahf
int
shlb
and
dec
insl
incb
sub
jle
fisubrs
out
sahf
mov
push
cmp
or
jge
cmp
jp
or
out
jbe
sbb
jbe
mov
int
iret
cmp
enter
test
jno
mov
int
int
mov
push
fistpll
mov
pop
sti
push
ds
int
mov
pop
fldenv
insl
push
lods
in
adc
xchg
ret
jl
inc
fadds
ret
loopne
inc
out
xchg
dec
ret
in
mov
in
imul
push
sarb
add
mov
cli
insb
fs
pop
mov
repnz
jl
lods
insb
test
mov
xchg
xor
cmp
fistpl
rclb
aam
pop
fsts
xchg
dec
jne
xchg
cmpsb
cmp
adc
jb
mov
int
arpl
test
adc
dec
mov
fwait
sub
push
push
rcl
fs
cwtl
out
fwait
sbb
push
mov
popl
push
aam
cmp
or
enter
mov
adc
inc
add
sbb
out
out
and
and
mov
test
out
mov
fsubr
les
xchg
cmp
pop
xor
xor
pop
cmc
sti
xchg
bound
or
push
mov
into
sarb
test
mov
jae
cmp
in
and
scas
jae
lahf
sub
push
lret
dec
xchg
addr16
jae
cmc
loop
cmp
int3
xor
mov
pushf
scas
lret
mov
je
inc
call
mov
sbb
sub
mov
xchg
push
sub
jb
jae
jnp
int3
sarl
xchg
mov
or
das
int
gs
dec
ja
dec
cmp
in
out
lahf
int
fs
jl
jmp
out
shrb
sbb
xor
dec
jecxz
out
out
pop
push
cmp
in
adcb
dec
outsb
outsb
outsb
inc
rolb
xor
mov
cmpl
outsb
outsb
loopne
lret
lods
sub
out
jg
mov
add
addr16
int3
outsb
cmpsb
iret
out
mov
test
test
fwait
fcomi
test
jb
or
jns
daa
ds
outsb
outsb
lahf
fwait
dec
add
jb
icebp
adc
insb
sub
xchg
orb
or
aam
xchg
in
test
adc
mov
in
jecxz
rol
sbb
outsb
outsb
outsb
fildll
sbb
cltd
test
dec
shlb
push
mov
jno
pop
ficompl
push
out
divb
enter
xor
push
outsb
iret
out
out
or
pop
dec
fstpt
xorb
mov
addr16
mov
outsl
rolb
jne
lods
push
mov
fwait
xchg
push
or
pushf
sbb
out
ud2
mov
insl
cmp
es
push
jl
outsb
xor
dec
cltd
bound
jno
clc
sub
sarb
outsb
ja
insb
scas
enter
stos
cmp
test
inc
pusha
push
cmp
aaa
aaa
fwait
dec
push
ret
scas
pop
pop
lock
mov
in
mov
je
cmp
fwait
mov
xchg
and
dec
ds
jmp
or
icebp
fildl
mov
jmp
cmp
outsl
mov
fwait
out
xor
pushf
leave
push
jno
push
or
xor
addl
adc
cmpsl
push
cmpsb
je
stos
mov
push
push
movb
sbb
or
jae
sti
push
push
divl
dec
stc
xchg
push
fldl
out
xchg
fbstp
iret
sti
fsubr
push
ror
out
sub
or
sbb
adc
jae
or
cmpsb
or
ljmp
pop
fcomps
loope
sar
repnz
insl
or
adc
fdivrl
clc
sarb
cmpsl
inc
das
inc
push
cli
sbb
sti
fsubl
jno
jo
sti
sub
popf
ftst
lahf
int
addr16
shr
jbe
inc
cld
dec
hlt
lcall
out
sub
testb
adc
shl
add
mov
xchg
sub
jae
mov
test
clc
cwtl
ljmp
push
dec
std
mov
mov
mov
jp
mov
push
shrb
loop
push
mov
pop
pop
cmpb
dec
add
xchg
inc
mov
in
or
movl
jmp
mov
outsl
pop
bound
je
lock
das
add
in
and
ficomps
out
pushf
test
into
int
int
test
pop
pop
xorl
ror
push
add
mov
imull
dec
int
dec
pop
xchg
pop
or
in
hlt
and
int
int
push
and
andl
int
int
xor
or
adc
leave
sub
int
or
push
movd
test
fcomps
push
adc
clc
and
lcall
outsb
outsb
lahf
movsb
push
stos
mov
mov
ja
insb
mov
std
dec
in
movsb
dec
sbb
xor
negl
in
jp
fwait
fwait
leave
subb
dec
adc
rcrl
testb
dec
outsl
out
aam
andl
mov
loope
dec
pushf
or
out
mov
and
add
and
iret
inc
fisubl
out
push
aas
clc
mov
xor
mov
nop
push
mov
cmp
jae
cli
sub
or
js
push
or
test
mov
xlat
sbb
xchg
ret
rolb
imul
arpl
rclb
das
jecxz
iret
in
test
jae
xchg
ror
out
jmp
inc
dec
inc
fnstenv
in
imul
outsb
dec
push
cmp
clc
cmp
negb
jmp
fisubrl
xchg
or
and
out
out
lahf
sbb
add
inc
jno
xchg
mov
outsb
outsb
outsb
mov
into
mov
dec
cmpb
repnz
movsb
mov
xchg
and
cmp
int
dec
inc
rorl
xor
or
mov
int
mov
jl
jnp
sbb
test
test
mov
sysret
lcall
sub
aaa
adc
div
pop
into
push
add
out
fdiv
out
xor
hlt
xchg
inc
enter
jae
jae
dec
adc
out
rol
jae
jae
rclb
push
leave
pop
mov
inc
out
icebp
jbe
jae
jae
or
mov
jnp
jae
mov
clc
inc
sbb
and
mov
ja
dec
mov
mov
sbb
and
add
push
scas
pop
insl
repz
fdiv
loop
lret
push
and
dec
cli
popf
outsb
cmp
lcall
in
cli
sbb
lods
in
pop
arpl
adc
int
addl
push
popf
or
es
xorb
ret
out
out
add
aam
cmp
ds
scas
mov
stc
lods
cs
in
sbb
sarl
pushf
cmp
inc
pop
test
vpcomq
adc
or
jae
jae
data16
loopne
xchg
push
push
jecxz
incb
or
repz
mov
jmp
push
sbb
shlb
int
int
aam
jns
mov
movsb
lahf
xor
inc
lea
dec
ret
inc
sbb
mov
aas
pop
testl
int
repz
cltd
cwtl
in
jmp
es
jl
lods
test
push
mov
test
push
sbb
fwait
fwait
mov
scas
mov
jns
jnp
pusha
iret
inc
pop
ds
adc
fildl
addr16
and
fwait
fwait
sarb
lods
shlb
add
insb
in
nop
or
mov
adc
leave
dec
into
jge
adc
in
pop
lahf
cltd
xor
bound
mov
int
movsl
ja
in
dec
rorl
movsl
out
sub
clc
pop
push
jle
movsb
xchg
shrl
or
add
pop
ds
fsubrl
addr16
outsl
inc
inc
out
movsb
es
les
outsb
lods
out
pop
xchg
mov
fcompl
or
or
mov
imul
pop
adc
test
inc
xor
repnz
insb
outsb
outsb
pop
movb
cmp
rcrl
and
aaa
push
cld
scas
in
addb
push
frstor
aaa
aaa
aaa
aaa
clc
cmpsb
or
push
lods
inc
shl
mov
jle
mov
lea
movsl
xchg
push
movb
inc
add
addr16
shlb
cmp
push
push
or
sbb
cs
mov
in
stos
sub
aaa
aaa
adc
movsb
lods
add
fwait
bsf
jecxz
mov
inc
es
aam
test
cmp
mov
call
enter
shrb
repnz
stos
jns
jbe
iret
les
xor
or
or
sub
adcb
outsl
inc
adc
std
mov
pop
insb
pop
xor
mov
bound
cli
cwtl
int
fucomi
or
sahf
mov
or
cmpsl
mov
lahf
pop
push
or
xchg
mov
cld
cmc
ds
test
fnstsw
xor
inc
mov
mov
insl
jl
mov
aam
jl
mov
bound
or
ja
mov
fidivrl
push
cld
dec
movsb
jle
sbb
jg
sub
xorb
push
jne
fsubr
mov
fwait
fwait
iret
dec
dec
xor
sbb
rorb
ds
fwait
sbb
movsb
sbb
pop
ret
out
ja
ss
ret
clc
mov
int
aas
loope
les
mov
add
jp
bound
mov
fisttps
orb
cli
fiaddl
out
sbbb
ud0
out
movb
out
rolb
divb
mov
int
adc
or
mov
lahf
cmc
out
fcoms
test
fwait
fwait
fwait
ret
xor
cmp
mov
lret
loop
jge
mov
int3
sbb
push
jae
rol
inc
inc
sub
fs
jge
addr16
cvtps2pi
out
mov
lods
jne
mov
dec
and
mov
xchg
pop
insl
out
mov
mov
fisubl
xchg
outsl
mov
out
orl
out
lret
sbb
mov
or
cld
loop
stc
out
iret
in
xor
cmp
push
pusha
icebp
out
out
mov
lret
or
int
adc
pop
adc
push
les
rclb
es
popa
xchg
popa
xchg
lods
mov
test
lahf
int
pop
ss
inc
fsubrl
dec
or
add
out
mov
pop
shrl
cmpb
push
outsb
fidivrs
push
push
lcall
mov
int
out
fcoms
mov
sbb
push
jg
int
int
pop
cwtl
repz
jle
bound
je
xchg
jge
mov
pusha
test
bound
ss
js
push
mull
push
rorb
cmpsb
pop
lock
pop
or
and
mov
push
push
or
aad
and
mov
mov
iret
push
in
idiv
jge
outsb
mov
adc
xchg
push
dec
adc
mov
cmp
sar
in
cmpsl
and
aaa
xorl
adc
popa
xchg
lods
jmp
rolb
ret
lds
movsb
lahf
int
int
pop
in
mov
sub
into
fstpl
mov
xor
js
out
in
pop
repnz
in
sar
cmp
aaa
dec
sahf
xchg
cmp
or
push
xor
push
inc
cli
pushf
hlt
mov
sti
fidivrs
and
addl
aas
jbe
ljmp
int
add
outsb
lahf
test
movsl
mov
aas
jl
sub
aam
outsb
fidivl
aam
mov
mov
dec
lcall
stos
out
ja
mov
cmp
xchg
js
std
cmp
enter
fcomps
inc
push
mov
out
adc
add
in
lret
sub
add
fdivrl
xor
lahf
jae
jbe
jbe
jecxz
mov
outsb
outsb
mov
out
out
xchg
pop
ljmp
cld
insb
mov
test
jle
int
mov
or
cmpsl
dec
repz
sbb
lahf
int
int
jge
sub
mov
lock
fdivrl
es
push
ss
jae
jae
popf
mov
sbb
push
jle
inc
jae
jae
int
cmc
es
adc
inc
inc
imulb
iret
in
addr16
in
pop
mov
shll
or
in
bound
mov
call
fldt
test
lea
xor
cmp
fwait
fwait
jmp
mov
lock
dec
dec
sbb
aaa
jge
jg
frstor
sbb
cld
push
loope
data16
xchg
divl
aaa
aaa
dec
loopne
arpl
sbb
pop
loop
iret
ds
mov
js
scas
test
lds
mov
subb
xchg
cmpb
push
outsb
outsb
outsb
outsb
or
lds
fs
pusha
aaa
cld
insb
outsb
and
or
in
sbbb
mov
fisttpl
pop
xor
ss
aaa
cmp
mov
mov
xor
insl
adc
sti
subb
clc
les
jae
jae
push
sarb
dec
out
cmp
loop
jl
subl
jo
lods
xor
rclb
pushf
stc
mov
mov
outsb
adc
loop
scas
push
rcrb
cmp
cmp
cmc
hlt
filds
inc
test
mov
mov
mov
cmp
or
das
outsl
cmc
lock
aaa
inc
call
sahf
pusha
test
cs
test
rclb
or
in
cmp
iret
xchg
xchg
loop
fld1
cmp
xchg
cld
or
or
and
js
inc
loop
inc
push
testb
rorb
les
mov
outsl
pop
aad
ret
das
adc
sbbl
bound
aaa
mov
loope
insb
int
inc
add
sub
ss
imul
test
and
lahf
fldt
jl
sbb
in
mov
popa
xchg
cmp
fistpll
dec
ret
jecxz
jae
jae
in
mov
loopne
mov
jae
jae
roll
rcrb
xor
sarl
inc
mov
insb
outsb
aas
test
hlt
cwtl
icebp
xchg
and
mov
imul
out
lcall
pop
ljmp
jo
out
sti
mov
sbbb
cmpsl
cmp
inc
shlb
jns
les
add
pop
mov
ret
pop
mov
cmp
sahf
push
add
push
aas
fwait
fwait
cmovnp
loope
add
push
jbe
push
lds
sub
cmp
jo
add
mov
sbb
repnz
jle
outsb
aas
cmp
int3
popf
mov
rolb
addr16
sti
xor
call
orl
int
pushf
sbb
pop
sti
mov
pop
and
xlat
and
and
fwait
dec
push
mov
mov
push
pusha
ss
cmp
aaa
pop
pop
mov
push
je
outsb
outsb
clc
cwtl
inc
inc
sbb
cli
aaa
in
ret
jl
outsb
outsb
in
repz
cs
jge
xor
xor
movsb
lahf
push
sbb
jmp
mov
lahf
sbb
fcmovbe
jp
rcr
sti
push
jp
mov
shr
mov
jae
jae
popf
inc
aam
repz
fwait
nop
pop
push
shll
jae
jae
jecxz
mov
popf
clc
inc
cmp
push
xchg
int
inc
xchg
ret
xor
pop
adc
out
xchg
mov
push
xchg
mov
shl
mov
icebp
mov
call
outsl
hlt
mov
ljmp
aad
fcompl
mov
loopne
into
mov
push
hlt
add
pop
or
push
cmp
mov
pop
and
cmp
adc
testl
push
adc
outsb
outsb
outsb
outsb
lds
pushf
jg
jge
rolb
sbb
loopne
outsb
fsubrl
push
int3
insb
out
test
xchg
ss
scas
sub
out
pop
or
xor
nop
xchg
outsb
out
mov
xchg
jge
fistpll
outsb
push
mov
push
inc
pushf
cmp
cld
insb
hlt
aas
xchg
jnp
mov
and
insb
jbe
pop
pushf
scas
push
jae
adc
mov
js
add
stos
out
mov
andb
jae
jp
clc
movsb
inc
inc
mov
int
and
pop
test
arpl
sbb
cmp
fsubrl
push
lahf
xchg
sbb
scas
sub
fcmovnbe
dec
xor
push
cmp
and
clc
divl
push
mov
add
out
lock
cmp
out
mov
andb
repnz
jno
test
rorb
fwait
insl
call
sahf
lcall
mov
in
clc
aas
ss
fcompl
into
jl
push
cld
or
sahf
aam
arpl
pop
aaa
mov
xchg
iret
mov
xchg
fwait
push
mov
pushf
lock
cmp
fucomi
jecxz
adc
es
sbb
mov
int
adc
lret
push
xchg
or
int
jp
inc
sub
inc
aam
movsl
cli
fimull
xchg
and
leave
out
addr16
sub
clc
cmpsb
pop
addb
movsb
jp
fcmovne
out
add
fcmovnbe
and
jmp
xchg
out
mov
test
dec
mov
ljmp
out
or
int
in
das
xor
pusha
adc
out
loop
out
lahf
int
and
aaa
pop
std
sbb
loopne
outsb
dec
shl
mov
call
cmpsb
add
cld
sbb
push
fprem1
mov
ja
adc
mov
sbb
jbe
sbbb
jae
daa
fadd
push
arpl
pop
je
popa
orb
lcall
sub
cmp
lock
cmp
rcl
inc
push
xor
jp
loope
cmp
hlt
ffree
mov
addr16
mov
inc
jno
jnp
sub
pop
jge
fists
bound
movsb
sahf
pop
jmp
push
out
clc
add
sbb
push
int
pop
sub
mov
icebp
fwait
ss
fdivrl
aaa
mov
mov
xchg
pop
cmp
push
lret
icebp
fstps
mov
mov
test
jge
ds
nop
pop
sbb
inc
mov
sbb
push
mov
js
sbbb
ret
mov
jge
jno
nop
sbb
lods
or
hlt
lahf
mov
sub
mov
sbb
aaa
mov
shl
pop
or
and
lods
jae
fcoml
lods
std
aam
imul
std
aaa
pop
add
mov
xchg
mov
mov
dec
inc
and
cmpsl
inc
shlb
dec
shl
std
ds
cmp
arpl
imul
xchg
fwait
or
push
dec
call
filds
mov
out
jle
or
fs
mov
xor
out
imulb
movsb
jo
je
xchg
arpl
jle
loop
mov
sbb
add
outsl
les
mov
ja
pop
or
jmp
sub
cmp
fiadds
push
loop
popf
dec
mull
mov
repnz
sbbl
addl
mov
in
dec
dec
int3
incb
inc
push
sbb
call
js
pop
fdivrl
pop
add
and
and
outsb
hlt
mov
in
sti
mov
mov
adc
lock
fmuls
ret
cmp
test
xchg
test
ss
shl
inc
or
jne
pop
add
faddl
push
pop
dec
cmpsl
mov
jp
iret
idivb
sbb
dec
pop
add
call
clc
jo
adc
cmp
and
movsl
jge
jae
jae
cli
dec
mov
rcr
fadds
jae
pushf
fwait
xchg
sub
movsl
pop
jg
cmp
test
test
pop
shlb
mov
sti
ds
xchg
and
fcompl
adc
insb
jnp
pop
or
lods
jbe
push
xchg
pop
lock
clc
enter
fisubs
jmp
mov
inc
dec
outsb
jle
fbld
lods
insb
insl
cmp
jnp
enter
pop
inc
jo
inc
movsb
or
or
popf
je
stc
fmull
arpl
imul
icebp
mov
clc
xor
jecxz
push
inc
cli
in
fildl
loopne
fmul
daa
push
loope
pusha
call
cmp
xor
scas
inc
popf
lods
inc
lret
aaa
aaa
pop
push
fidivrs
scas
inc
movsb
cmpps
aaa
aaa
aaa
cmp
aaa
cmc
cmc
mov
cmp
pop
jl
xchg
lods
in
cmpsb
testl
loop
ss
inc
pusha
and
js
jg
and
pop
bound
push
mov
push
pop
sbb
mov
mov
xor
mov
cmp
ret
int
mov
jmp
push
cmpsb
lcall
lods
xor
outsl
in
loopne
loope
xorl
clc
adc
and
cmp
push
inc
ljmp
sbb
pusha
mov
shl
out
andb
adc
pop
pop
fists
out
lds
in
jno
add
out
jae
es
mov
int
jmp
cmpsl
ja
mov
aas
pop
ljmp
dec
jb
cli
stos
test
sahf
xchg
or
fwait
mov
repz
adcb
push
in
sahf
fwait
fwait
fwait
ret
lahf
mov
pop
jbe
mov
add
jae
push
in
dec
add
or
jb
inc
sarl
jae
js
sbb
mov
in
hlt
cmp
lods
cld
imul
aas
loop
hlt
test
dec
lret
xor
jae
outsl
je
sbb
sbb
lods
add
jp
jae
jae
xchg
call
aam
sub
sbb
mov
scas
jo
aam
mov
jge
mov
leave
mov
dec
repnz
aaa
cld
bound
les
push
mov
imul
push
js
movsb
cmpb
mov
js
add
cli
test
imull
push
into
pop
fisubrs
mov
ljmp
rcr
mov
or
out
cmp
adc
mov
mov
fisttpl
dec
mov
mov
mov
test
fwait
fwait
fwait
fwait
inc
roll
orb
cli
fwait
fwait
fwait
fwait
mov
aad
iret
gs
addr16
fwait
popa
push
push
or
xor
dec
cmp
and
jp
addr16
push
push
and
ss
lahf
jle
int
or
mov
jg
outsl
inc
sahf
pusha
jle
sahf
fwait
fwait
or
pop
pop
or
push
pop
arpl
data16
mov
jnp
xor
sbb
enter
jmp
sub
adc
cld
adc
sub
mov
aas
cltd
pop
adc
mov
mov
push
jle
cmpsb
mov
les
les
and
xchg
adc
sahf
lds
jae
out
mov
pop
push
leave
jnp
mov
addb
sbb
pop
aas
test
dec
push
mov
aam
outsb
outsb
outsb
dec
or
data16
out
or
mov
outsb
outsb
outsb
outsb
cmp
xor
inc
pop
pop
hlt
pop
adc
divb
lock
outsb
xor
jne
insb
cmpsb
mov
adc
sbb
data16
pop
lock
ret
pushf
or
mov
sbb
das
and
adc
int
inc
jg
sbb
pop
in
icebp
int
dec
sbbl
repnz
pop
or
push
push
mov
mov
push
fsincos
sbb
add
pop
int
or
je
xlat
arpl
and
mov
int
push
insl
shr
mov
sub
xchg
jno
andl
mov
cmp
xor
int3
xchg
mov
pop
add
xor
aaa
adc
cs
sar
jne
aaa
aaa
xchg
js
or
ret
xchg
push
or
out
mov
adc
outsb
outsb
outsb
pop
shlb
rorb
inc
mov
les
aaa
cld
insb
mov
push
test
into
or
ss
aaa
aaa
push
jno
sahf
in
xchg
iret
fadds
popa
outsb
cli
mov
fiaddl
loope
mov
aaa
mov
jp
jp
repnz
hlt
mov
aaa
aaa
lods
or
test
sub
sub
ss
jbe
cmp
dec
pop
jo
mov
add
pop
dec
shrl
in
int3
mov
dec
jnp
or
jle
lahf
shrl
xor
mov
mov
mov
push
ret
inc
mov
shrb
mov
stos
xchg
inc
int
cmp
repnz
je,pt
enter
mov
int
cmp
sbb
cmp
es
test
fdivrl
aaa
aaa
mov
lret
sbb
pushf
clc
jo
clc
fldl
pop
sub
mov
add
lods
bound
mov
jb
pop
push
dec
andb
cmpsl
cs
mov
lcall
dec
dec
push
movsl
mov
xor
hlt
sbb
lret
imul
fstps
cwtl
aaa
jns
and
jle
ljmp
xchg
fimull
sub
fnop
mov
push
dec
mov
jae
imul
dec
xchg
aaa
aaa
aaa
mov
or
push
fwait
add
popw
jle
aaa
aaa
xor
stos
inc
adc
stos
lds
jae
fmull
jmp
add
loope
pop
outsb
ds
sbb
sti
fsubrl
dec
mov
cmp
daa
xor
out
lahf
int
inc
xchg
add
cltd
pop
popa
orb
iret
out
mov
lods
insl
repnz
aas
sarb
fcmove
jg
orb
inc
mov
cmc
mov
loopne
adc
ret
idiv
insb
inc
push
pop
clc
jns
adc
ss
movsl
jbe
fcmovne
out
push
adc
add
bound
std
popa
dec
inc
fmul
sahf
cs
and
fiadds
mov
xchg
in
pop
push
orb
jae
jae
xchg
mov
sti
cmp
and
sti
xchg
addr16
not
jl
sub
sbb
int
xchg
test
int3
cmpb
xchg
add
jg
add
mov
cmp
cwtl
xor
notl
jb
jae
and
jne,pt
jle
ljmp
call
or
ja
xlat
ret
repnz
lods
gs
jle
aaa
sbb
imul
sub
and
inc
ficoms
test
scas
mov
xor
fnstcw
mov
pop
iret
decb
jb
insb
cs
pop
mov
jbe
scas
mov
loop
es
icebp
sbb
sbb
and
scas
ja
xchg
lret
cld
push
sahf
pop
lock
push
aam
cmc
mov
stc
rcl
mov
lcall
sbb
fsubrl
jle
xor
xor
jp
xchg
mov
out
dec
ljmp
test
call
bound
data16
jb
jae
hlt
jle
movzwl
xchg
mov
xor
or
add
mov
adc
pop
fs
sub
les
ret
and
lret
out
and
fidivrs
sbb
sahf
dec
adcb
jae
cmp
jne
adc
mov
and
jb
sbb
repz
mov
mov
outsb
mov
leave
jae
lds
and
loopne
sub
addr16
mov
cmc
shlw
aaa
aaa
mov
clc
dec
cmp
adcb
pusha
jno
push
jl
sarb
jecxz
insb
sbb
mov
jae
xor
mov
and
int
addr16
pop
lret
push
jle
xor
cltd
cli
jle
push
jl
cmp
mov
pop
and
xchg
jae
jae
sbbb
cmp
jae
jae
cmc
and
repz
push
dec
inc
iret
cmpsb
fbstp
mov
mov
xor
jae
ret
sbb
push
inc
cmp
or
bound
cmp
inc
iret
imul
aam
push
xchg
dec
test
jae
mov
inc
mov
insl
lret
clc
fdivrl
popf
scas
gs
sub
aam
movsb
clc
outsb
outsb
outsb
outsb
push
push
mov
repnz
loop
pop
sub
add
mov
out
mov
pop
cmp
lds
in
adc
pop
mov
adc
inc
les
fmull
sarl
paddq
inc
out
sbb
fwait
aaa
aaa
aaa
push
pushf
aas
gs
in
xor
outsl
fldcw
test
mov
jl
push
mov
dec
rcr
pop
cld
aam
sub
mov
shll
aaa
aaa
or
or
pop
inc
fwait
push
aaa
aaa
aaa
aaa
xor
neg
and
xchg
sub
aaa
aaa
aaa
cmpsl
dec
inc
ret
push
iret
arpl
negl
and
stos
pop
mov
inc
adcb
push
test
sbb
out
lret
js
fisubrl
add
test
rcl
sbb
or
lods
sarb
fistpl
out
adc
out
mov
int
int
add
fs
jne
add
mov
dec
sbbb
fdivrl
push
jbe
fnsave
shll
rorb
fildl
aaa
aaa
mov
es
imul
je
fldl
sub
ds
mov
dec
mov
mov
pusha
xchg
fbld
jne
fcmovne
imulb
in
lods
movsb
insb
imul
cmp
mov
out
and
iret
push
jno
imul
cmpsl
lahf
rol
or
mov
push
outsb
outsb
outsb
iret
pop
push
out
xor
pop
jge
cld
int
mov
mov
push
cwtl
dec
mov
call
pop
icebp
jb
std
inc
push
xor
stc
inc
cmpsl
roll
and
ret
mov
push
cmp
and
int
pop
hlt
mov
xchg
and
negl
iret
out
hlt
fs
or
lods
jg
push
pop
clc
push
movsb
mov
and
mov
mov
mov
in
sti
scas
lods
and
outsb
rclb
xor
fsubl
push
imul
adc
fucomi
aad
daa
or
jbe
adc
shl
mov
adc
mov
ffreep
mov
jl
xchg
out
xchg
outsb
mov
fwait
fwait
fwait
push
loope
push
push
data16
jge
jge
cmp
aam
pop
jno
pop
fsubr
and
xchg
pop
push
jne
push
lcall
mov
fs
es
jae
inc
xor
data16
mov
xor
loopne
add
mov
movsb
mov
adc
sbb
sti
or
and
jg
mov
push
fiadds
les
icebp
mov
out
bound
clc
fcompl
dec
mov
das
popf
stos
mov
aad
inc
icebp
jp
sub
out
lds
fiaddl
jle
dec
iret
out
mov
mov
pop
xchg
outsb
outsb
outsb
pop
inc
inc
aaa
test
lods
in
mov
fwait
ds
jl
inc
dec
mov
mov
jae
xor
enter
jae
jae
inc
mov
or
xor
aam
jae
jae
and
or
inc
insb
xlat
out
adc
mov
mov
sbb
push
ds
lock
mov
das
mov
and
jae
movsb
mov
out
cmp
jge
push
std
movsl
addr16
pop
cmpsl
enter
xchg
aaa
aaa
aaa
pop
rolb
fcompl
test
mov
pop
and
mov
popf
es
xor
adc
es
loope
pop
hlt
ljmp
push
mov
sbb
clc
and
sahf
cs
insb
push
sbb
adc
aas
adc
mov
cwtl
push
inc
and
shl
mov
out
int
outsl
into
adc
repz
push
inc
or
and
xchg
mov
loopne
sti
lret
inc
and
es
dec
lods
popa
ret
lahf
shlb
lahf
mov
push
push
mov
push
and
dec
xchg
mov
addr16
xor
cltd
scas
ljmp
pop
mov
enter
pop
or
dec
and
test
mov
aas
fwait
fwait
jno
xchg
shrl
fs
pop
push
lahf
cltd
jne
pop
sub
jge
in
addl
inc
jnp
aas
inc
in
xor
shlb
in
xor
call
call
pop
push
out
testl
or
or
lods
ret
sbb
out
les
jle
jbe
mov
lahf
mov
xor
jnp
cmp
push
enter
and
stos
add
add
outsb
outsb
mov
push
inc
mov
pushf
std
pop
ss
ja
mov
xchg
imul
loopne
nop
js
mov
pushf
pop
jb
dec
fsubl
iret
in
jae
push
sarl
pop
adc
imul
add
lock
mov
shlb
jae
js
or
fbld
movsl
mov
mov
jo
scas
movsl
jae
pusha
into
popw
sahf
aam
mov
scas
xor
push
or
cltd
test
aam
mov
out
adc
xchg
mov
jg
pop
bound
mov
enter
push
mov
jae
jae
fs
pop
scas
mov
inc
jg
lahf
in
insl
out
mov
cli
inc
in
add
mov
adcl
add
aaa
ja
sbb
call
test
aaa
adc
cld
pop
jl
lret
cmpsl
adc
data16
sub
mov
mov
test
pop
es
sbb
jp
push
sahf
xchg
xor
add
push
or
imul
cs
dec
cmp
int
js
push
gs
es
int
xor
ss
bound
out
push
cltd
in
ret
imul
pop
lret
pop
out
xchg
sub
xor
fwait
xchg
push
stos
push
sbb
scas
push
inc
loopne
mov
cmp
je
out
xor
imul
add
jno
fildl
cmpsl
jecxz
jl
es
fcmovnb
jp
pusha
pop
pusha
cmp
xchg
lret
roll
sub
push
stos
fsubrl
pusha
out
or
nop
adc
cmpsb
jle
in
sub
rcr
xlat
inc
mov
out
push
xor
pop
cs
mov
mov
fdivp
pop
fidivrs
rolb
les
sbb
fidivrl
mov
fsqrt
cmp
rcrb
push
inc
mov
adc
lahf
int
mov
pop
pop
cmp
arpl
lods
iret
ss
sar
pop
data16
adc
pop
cli
insb
add
mov
mov
pushf
lods
gs
xor
or
push
sti
sbb
fsubrl
xor
jmp
stos
fsubl
fs
iret
cs
mov
mov
xor
aas
jno
jle
rcr
out
pop
and
pand
xor
cmp
fwait
inc
jbe
notl
adc
sub
dec
xor
push
addr16
iret
int
popf
xor
shlb
push
jl
lea
xchg
sbbl
xor
aas
adc
and
mov
pop
inc
and
sub
in
push
xchg
ret
orl
fsubl
dec
mov
cmp
push
xor
aam
pop
mov
out
out
inc
das
adc
test
fidivrs
fcmovne
out
add
push
pop
subl
or
xor
jp
cmp
mov
mov
popf
fwait
mov
cmp
xlat
pop
scas
mov
aaa
aaa
aaa
sbb
loopne
sti
mov
addr16
xchg
addr16
or
in
into
insl
in
in
outsb
add
push
rcrb
mov
mov
dec
adc
pop
out
cmpsl
rclb
lcall
add
jp
adc
loope
adc
sbb
aam
inc
dec
sbb
add
imul
lock
lds
mov
push
cld
jne
sbb
lods
enter
imul
sbb
and
repz
iret
int
push
xlat
dec
stos
pop
or
ss
mov
test
xlat
lret
daa
dec
out
push
cmpsb
imul
mov
fs
std
inc
push
pop
and
adc
mov
mov
loop
insb
outsb
outsb
xchg
mov
jl
mov
fcmovbe
sbb
lahf
xchg
psllw
cmpl
ficoml
movsb
add
jl
or
jp
inc
pop
adc
int3
mov
push
mov
repnz
add
bound
mov
sbb
and
out
inc
xor
out
out
push
fnstsw
ja
call
cmpsb
pop
mov
sub
outsb
inc
xor
pushf
mov
and
jl
aas
mov
mov
mov
inc
fistps
xchg
cwtl
jae
sub
ds
aaa
mov
jbe
pop
jecxz
xor
cltd
arpl
stos
push
test
pop
daa
ljmp
sbb
rcrb
sbb
jge
jae
jae
fldt
repz
pop
mov
jmp
sub
sbb
mov
mov
push
sub
and
inc
jmp
ds
scas
push
pop
ret
and
fdivrl
loope
loopne
fidivl
pop
idivl
mov
popa
pop
enter
ds
ds
mov
inc
or
mov
cmp
in
jae
or
push
jo
adc
mov
lods
ja
clc
insb
scas
js
rolb
movsl
push
push
cli
loop
addr16
icebp
xchg
mov
mov
cld
mov
loop
fdivl
scas
int3
fcompl
aaa
aaa
push
shlb
addr16
test
pop
push
xlat
mov
ror
orb
sub
scas
xor
or
xor
lock
ds
fwait
sub
bound
add
loop
notb
cli
xor
or
mov
out
addr16
fcmovbe
lock
jle
jb
mov
pop
push
ss
cli
mov
inc
lcall
outsb
outsb
outsb
outsb
les
xlat
inc
push
rclb
sbb
or
pop
adc
inc
ja
sahf
adc
fidivl
scas
adc
adc
scas
aam
std
insb
outsb
lock
lret
jb
mov
push
divb
ja
xchg
cmp
jae
shl
mov
jl
fwait
cmpsb
ds
inc
sbb
addr16
jae
aaa
sub
imul
mov
or
push
cmp
xchg
cmp
lock
fcomp
mov
fucomi
and
mov
pop
loop
stc
jle
aaa
cmp
pop
xlat
cmp
xchg
dec
sarb
aam
int
or
clc
enter
fistpll
xchg
int
inc
aas
cmp
fs
xchg
aas
pop
pop
or
mov
pop
inc
lods
idiv
inc
cmp
pop
mov
mov
out
out
and
cli
loope
mov
jnp
lock
stos
shlb
cmp
cmp
fdivrl
push
in
es
xor
stc
inc
adc
loop
fdivrl
faddl
pop
sub
push
inc
bound
mov
ret
or
arpl
cmp
xorl
fwait
je
pop
test
xor
hlt
sti
loopne
sub
aaa
aaa
aaa
cld
arpl
cs
jl
test
les
aaa
aaa
aaa
push
cmp
out
hlt
cmovs
mov
test
pop
pop
cmp
outsl
push
cmpsl
pop
in
addr16
jge
imul
ja
xor
fs
int
int
lahf
mov
movsb
insl
adc
out
iret
mov
cmpsb
pushf
pop
pop
divb
out
out
std
push
mov
mov
sub
outsb
andl
loope
sti
mov
aas
cmovae
ljmp
outsb
stos
iret
test
or
sbb
fdiv
mov
dec
xor
subb
cmc
mov
and
mov
inc
xchg
cmp
xchg
int
aas
fstpt
xchg
xchg
pop
repnz
les
test
dec
jmp
inc
inc
outsb
jne
pop
lock
loopne
call
hlt
lahf
loop
jp
daa
jp
out
mov
mov
in
lret
scas
or
lret
out
ljmp
push
sub
push
insb
push
sub
inc
jo
mov
outsb
ja
rcll
xor
out
pop
imul
lret
cli
shlb
pop
je
ds
or
jle
lret
aaa
aaa
cmp
cmp
js
arpl
inc
cmp
pop
imul
pop
ret
clc
popf
lods
jnp
lea
and
jp
adc
in
outsb
inc
mov
or
xchg
pop
icebp
aas
or
int
int
aas
shlb
and
repz
fwait
fwait
fwait
jbe
xchg
mov
out
cmp
add
push
sbb
pop
mov
mov
es
jecxz
jne
insl
test
jae
jae
or
mov
mov
push
jae
leave
mov
pushf
sbb
arpl
jae
jae
jmp
jmp
decb
mov
adc
addr16
cmp
push
add
xchg
movsb
sbb
negl
rorb
in
aad
or
or
inc
std
insb
xchg
mov
pusha
xchg
lds
add
mov
mov
push
dec
outsb
outsb
lahf
fwait
sbb
icebp
mov
cmc
out
sbb
aam
jp
insb
hlt
mov
adc
or
es
adc
icebp
fwait
inc
jno
rcrb
mov
xor
insb
cmp
jle
lcall
push
pusha
add
or
sbbl
repnz
xchg
dec
mulb
lock
fucomi
mov
out
pop
gs
mov
test
xchg
mov
dec
mov
jl
and
in
xor
xchg
lahf
dec
cmp
lcall
sub
dec
jle
mov
loope
push
mov
dec
loope
mov
testb
int3
mov
popf
jmp
sbb
mov
rcll
cli
in
cs
ja
or
xor
mov
pop
in
fwait
sbb
mov
dec
pop
pop
out
xor
dec
jge
add
mov
int
in
pop
xchg
test
dec
push
push
in
in
or
xlat
cli
lret
int
call
ficoml
or
out
imul
cmpsl
xlat
fwait
fwait
fwait
fwait
notl
out
push
dec
cwtl
sub
ds
fwait
fwait
fwait
fwait
inc
ret
test
aas
mov
nop
fwait
fwait
fwait
fwait
mov
scas
decb
scas
test
xchg
mov
and
inc
sbbb
xor
inc
clc
hlt
repz
jp
add
mov
xchg
test
aas
loop
lahf
shlb
je
mov
push
out
out
out
push
mov
sub
out
out
xchg
pop
fnsave
jmp
ds
iret
mov
or
pop
lret
mov
and
jb
mov
lods
shrb
cwtl
jge
ret
faddp
mov
ret
pop
cmp
jmp
fdivrl
mov
jnp
movsb
xchg
xor
pop
mov
xchg
pop
pop
mov
into
push
xchg
cli
fcompl
dec
inc
xchg
pop
es
cld
insb
outsb
scas
fmul
pop
and
ret
icebp
mov
hlt
out
out
clc
jno
push
jl
mov
add
mov
sub
int3
shll
rol
int
aas
fwait
sbb
mov
test
xor
cmp
int
int
xor
out
sahf
xor
mov
ja
int
int
loope
popa
sbb
rcrl
daa
adc
gs
xor
jle
push
into
or
ds
xchg
bswap
test
sti
sub
sahf
lds
mov
jne
dec
addb
dec
loopne
stos
pop
lds
loop
aaa
mov
cmp
mov
xchg
jecxz
mov
pop
je
test
mov
push
js
jae
jae
ret
jns
mov
cs
cmp
jae
loopne
sahf
push
xchg
and
jl
loop
jle
inc
aad
xor
test
in
gs
jl
mov
mov
out
aad
decb
push
out
pop
aam
cmp
jae
bound
xor
ficoms
jae
mov
mov
xchg
bound
jae
addr16
popf
mov
popf
ret
push
aam
fsubl
outsb
inc
inc
rorb
jae
dec
je
mov
lret
push
iret
jae
jae
jp
add
insl
xor
inc
leave
mov
mov
and
and
mov
idiv
fdivrl
sbb
mov
mov
outsb
out
aad
das
dec
repnz
adc
outsb
xchg
loop
popa
mov
sbb
or
sub
clc
xlat
cmp
mov
push
test
imul
outsb
aas
fistl
inc
js
iret
dec
insl
in
jl
outsb
outsb
mov
xchg
dec
mov
aaa
pop
mov
adc
std
test
fdiv
pop
fdivs
add
and
fmull
lea
xchg
mov
dec
test
sbb
stos
cli
ret
fadd
jae
repnz
imul
cwtl
test
ss
mov
dec
test
mov
daa
out
jb
cmpsl
test
outsl
cmp
cmpsb
mov
mov
dec
push
add
ret
cmpl
xor
xchg
movsb
repz
daa
mov
pop
mov
mov
sahf
and
sti
sbb
int
fs
imul
xchg
ja
mov
xor
and
sbb
cli
jl
outsb
fiaddl
imul
inc
pop
dec
jp
scas
push
adc
and
or
es
jle
mov
rcrb
in
mov
push
rorb
inc
push
imul
dec
dec
or
in
sti
add
mov
int3
test
mov
out
out
in
int3
adcl
fwait
fwait
jno
add
in
push
jo
outsb
filds
push
fs
cli
fsubrs
into
jbe
insl
aas
aaa
mov
adcb
xor
dec
insb
stos
into
icebp
cmp
aaa
jb
call
ljmp
lahf
bound
mov
lret
outsb
outsb
outsb
cmp
outsb
or
mov
sub
adc
mov
js
push
and
mov
mov
xorb
fistl
ljmp
inc
sub
pushf
hlt
arpl
sbb
cmovl
pop
das
add
fcmovne
out
xchg
mov
cmp
mov
mov
pusha
aam
mov
outsb
ds
aaa
stos
int3
leave
xor
imul
mov
pop
inc
mov
testb
mov
or
xchg
negb
mov
push
push
aad
mov
outsb
outsb
test
test
gs
insb
outsb
outsb
out
insb
inc
mov
sbb
xchg
aaa
aaa
mov
mov
psubsb
ret
aaa
aaa
cmp
jp
push
xor
fdivrl
ja
clc
mov
add
sar
clc
bound
fwait
jns
mov
mov
into
repz
xor
ds
sbbb
rclb
imulb
fidivl
mov
ljmp
push
fsubrl
jge
jge
imul
jns
sub
mov
mov
ja
cmp
scas
jno
hlt
jl
dec
mov
lahf
int
sti
sub
test
sub
and
mov
add
test
lahf
int
int
fwait
or
jae
out
mov
fdivrl
adc
mov
addr16
mov
aam
subl
and
fnstcw
mov
jno
inc
and
mov
lahf
add
adc
pop
aas
jae
pop
or
xchg
jnp
int
lahf
int
call
sarl
sahf
scas
insl
or
cmp
mov
jbe
loop
push
andb
rclb
leave
js
mov
mov
fists
xchg
inc
pop
fistps
scas
or
movsb
addr16
lods
imul
lret
adc
mov
stos
sub
mov
inc
mov
inc
xchg
and
mov
pop
mov
pushf
outsl
nop
out
cmp
mov
lcall
testb
scas
push
push
and
lds
out
or
ja,pn
add
pop
mov
scas
outsl
frstor
ds
sahf
jecxz
lds
xchg
ss
ljmp
dec
hlt
push
pop
xor
lret
gs
jne
cld
mov
xchg
repnz
filds
popa
push
and
hlt
int
out
dec
mov
sub
or
scas
sbbl
pushf
cmp
fwait
fwait
mov
aaa
or
inc
push
mov
jnp
xor
or
inc
in
fs
push
int
int
inc
ret
pop
repnz
mov
out
push
lahf
cwtl
xchg
mov
xor
shll
iret
out
mov
out
xor
mov
insb
and
aaa
aaa
jl
fucomp
insb
test
pushf
pusha
fcomp
pop
daa
es
cmp
test
fsubs
lods
mov
mov
xchg
lahf
daa
or
addr16
mov
aaa
jbe
das
das
les
mov
pop
aas
hlt
cmpsl
mov
sbb
out
out
imul
mov
in
ss
aas
fwait
inc
inc
fwait
adc
xchg
pop
and
movsl
fwait
fwait
sub
mov
or
jge
adc
jge
cmp
push
pushf
sbb
js
clc
push
inc
xchg
inc
or
inc
enter
jmp
jnp
insl
cltd
insb
movsl
fadds
fmuls
xor
mov
add
lcall
cmp
fstpt
rcr
testb
insb
mov
adc
lret
xor
and
int
push
lcall
sbbl
int
outsb
and
mov
int
int
ja
pushf
inc
pop
xlat
jno
mov
mov
negb
in
addr16
sbb
push
xchg
and
aad
and
xchg
and
dec
push
test
out
out
jp
inc
jmp
ja
and
jo
lods
iret
out
test
insb
movsl
test
dec
sahf
out
jo
mov
and
dec
pop
xor
lods
dec
int
int
into
push
insb
pop
mov
lods
mov
iret
int
int
dec
js
mov
lret
fildll
cmp
in
neg
jle
test
jmp
loopne
faddl
mov
add
dec
loop
add
inc
lret
clc
fdivrl
aaa
aaa
je
and
xor
sub
or
in
cli
fnstcw
aam
xchg
pusha
mov
xchg
mov
sahf
nop
pop
dec
daa
mov
cmpsl
push
loop
adc
dec
ret
cli
mov
fistl
mov
test
mov
outsb
outsb
mov
cmp
cwtl
mov
call
insb
outsb
insb
cmp
out
out
loop
push
shrb
rcrl
mov
iret
sub
repnz
aad
jbe
ret
mov
lea
cmp
out
neg
cltd
fstps
mov
nop
pop
int3
mov
mov
cmpb
cs
sbb
cld
insb
jle
and
ss
cmc
out
mov
clc
fld
lods
push
mov
repz
outsl
xchg
sub
inc
cli
insb
mov
in
mov
subl
fs
push
dec
pop
jo
iret
adc
pop
jmp
fstps
daa
movsb
mov
icebp
mov
sub
arpl
mov
icebp
sbb
cmpb
sub
hlt
fdivl
jne
and
testb
mov
and
div
out
out
xor
jg
shrb
dec
and
jbe
hlt
mov
rorl
lret
outsb
outsb
jg
pop
add
or
and
outsb
pop
mov
xor
sbb
cmpsb
daa
mov
mov
mov
fs
mov
arpl
loopne
pusha
push
test
movsb
ss
loope
loopne
icebp
insb
dec
fsubrl
js
or
fdivrp
dec
mov
xchg
mov
xchg
es
out
lcall
push
outsl
xlat
repz
clc
xchg
jo
or
lock
inc
xor
xor
imul
sbb
cmp
xchg
cli
ret
rorb
mov
adc
cs
xchg
sbb
aam
jae
sbb
sti
insl
add
out
xlat
xchg
ret
out
insl
mov
je
int
int
dec
add
add
stos
push
iret
mov
inc
test
fs
mov
sub
xchg
and
xor
inc
push
insb
aas
jecxz
fistl
jbe
jnp
mov
cmp
sti
insl
and
jbe
jae
out
and
lock
dec
popf
out
dec
loope
subl
dec
xor
xchg
out
lret
jg
mov
cs
pusha
push
aam
ret
lods
int
int
and
adc
testl
xor
stos
pop
stc
lcall
int
mov
mov
sbb
iret
mov
fidivl
jp
push
xchg
pusha
cld
add
int3
or
icebp
jmp
dec
out
into
push
bound
push
pop
xchg
jg
fmul
xor
shrb
mov
mov
mov
fcompl
mov
cmp
jle
lods
test
add
movsb
sahf
dec
cmp
inc
or
jmp
mov
mov
mov
loope
pop
xor
in
cmp
pop
or
inc
mov
test
and
stc
pop
adc
negl
xor
mov
cmp
inc
sbb
xchg
rol
and
lret
inc
lret
in
mov
xor
sub
js
mov
test
in
fdivrl
mov
cmp
jns
xchg
jl
cs
fldenv
aas
and
in
fisubrl
push
addr16
lds
mov
mov
into
int
ds
es
and
jo
jmp
mov
stos
dec
add
outsb
aas
fistpl
mov
mov
popf
imul
std
insb
outsb
insb
stos
pushf
push
int
sub
outsb
mul
jae
adc
and
xchg
je
jle
stc
pop
or
and
adc
js
das
ljmp
adc
xchg
and
mov
xchg
jne
mov
rcll
xchg
andl
add
enter
xchg
inc
mov
data16
mov
mov
inc
push
es
add
jmp
daa
ljmp
je
aam
mov
cmpsb
lret
loop
sbb
and
mov
cmpsl
lods
sar
cltd
xor
mov
mov
fsub
divb
sbb
pop
xor
xor
pop
push
mov
in
jo
fwait
test
xor
ficoml
jae
out
clc
and
cmp
sub
lret
mov
cltd
dec
enter
ss
or
pop
insl
jbe
rclb
jae
lahf
loopne
or
push
jle
cmpsl
jo
lcall
fistl
cmp
pop
xor
cmp
jl
jecxz
out
and
ja
in
addr16
and
ljmp
and
lahf
int
int
add
aad
hlt
lahf
rcrb
les
jo
mov
mov
dec
cmp
je
scas
adc
xor
cmpsb
xor
int
jae
and
pop
loop
popf
add
cmp
int
outsl
cs
cmp
daa
xor
push
imul
sbb
es
push
out
out
repz
and
push
cmp
insb
mov
cmp
out
clc
test
add
loopne
cmpsb
les
enter
int
int
push
dec
insl
test
pop
mov
xchg
in
bound
sarl
loop
adc
addr16
mov
jae
mov
sub
cmc
inc
and
jmp
sbb
int
mov
lds
fwait
cbtw
push
cmp
sbb
das
loop
jae
jae
push
test
out
fistpl
imul
loopne
enter
sbb
imul
jl
and
cld
pushf
cmp
fwait
or
lods
imul
jge
mov
call
lss
mov
or
lea
mov
jno
adc
and
mov
out
sub
stos
mov
std
mov
out
cmp
hlt
sub
andb
inc
decl
fcoml
lea
insb
aam
call
int3
jb
push
and
xor
jg
dec
rorb
pushf
pop
test
xor
mov
sar
push
outsb
clc
xor
fdivr
jmp
ja
mov
sahf
into
lcall
int
out
imulb
mov
pusha
out
out
inc
mov
xchg
mov
cli
pop
iret
sub
out
repz
ret
fnstsw
popa
push
mov
xor
out
out
nop
jno
push
insb
jbe
sub
lahf
push
rcl
iret
out
rorl
mov
rcr
cmpsl
icebp
dec
sbb
shl
fwait
fwait
fwait
fwait
xor
repnz
addr16
ret
sarl
fs
xchg
test
out
xchg
lock
add
insb
sub
dec
fnstcw
fwait
fwait
fwait
sub
adc
enter
js
jno
mov
push
cmp
ljmp
mov
rolb
in
sub
call
mov
xor
imul
in
sbb
js
mov
inc
int
in
sti
adc
adc
pop
bound
lods
mov
int
adc
adc
or
ss
aaa
int
test
rolb
lods
push
jge
fcompl
notl
cmp
jb
aaa
aaa
aaa
aaa
dec
lock
fildl
dec
xchg
pop
mov
aam
push
cmp
int3
inc
push
sub
shll
clc
fisubrl
lahf
in
dec
jae
xchg
xchg
fimuls
mov
mov
sbb
out
mov
popf
fidivs
in
mov
std
dec
cmp
incb
loopne
mov
mov
xor
nop
lahf
sbb
movsb
mov
out
notb
pop
int3
dec
mov
sti
mov
lea
pop
cli
push
rclb
jae
jae
scas
or
out
ror
lahf
mov
jge
je
or
test
mov
shrb
or
shr
std
mov
fimull
outsb
outsb
pop
adc
or
int
dec
out
mov
ljmp
cmp
cld
jge
call
sbb
mov
or
outsb
mov
jb
cmp
repz
mov
leave
stos
pop
stos
mov
ror
xor
pop
sahf
scas
clc
fdivr
icebp
imul
inc
test
stos
inc
pushf
xchg
outsb
outsb
outsb
outsb
xor
js
sbb
sbb
or
jge
jle
mov
or
xchg
icebp
and
sarl
sbb
mov
dec
addr16
bound
inc
dec
shl
sub
clc
lahf
imul
repz
repnz
aam
jmp
hlt
push
ljmp
subl
adc
jp
in
aam
xor
loopne
adc
xchg
jo
scas
scas
xchg
sub
clc
into
jge
fcmovne
idivb
icebp
xor
inc
shlb
lea
sahf
out
pop
mov
shl
out
test
lahf
xor
nop
test
out
jp
mov
dec
fidivl
iret
int
scas
cmp
push
dec
pop
icebp
mov
lock
jmp
mov
xchg
lahf
in
add
jbe
jno
cwtl
jne
sti
or
ljmp
fs
les
cmp
jae
jnp
push
sbb
sbb
rcr
popa
xchg
cmp
dec
jae
jae
inc
shll
mov
lds
cmp
push
fcmovne
lods
insl
decb
xchg
adc
mov
pop
cmc
test
sub
int
mov
push
ror
arpl
mov
aaa
aaa
push
fcomps
js
ffree
mov
cld
insb
scas
mov
jecxz
into
jne
adc
inc
aad
add
out
push
pop
cmp
int
sti
lcall
sti
fcoml
outsl
jl
push
call
shll
xchg
test
lods
cmp
loop
pop
and
add
mov
mov
lods
int3
adc
hlt
pushf
aaa
arpl
pushf
insb
fidivl
enter
fwait
aam
out
clc
movsb
unpcklps
xorb
imul
popa
popf
fildl
adc
xchg
out
adc
dec
adc
in
ret
inc
jg
out
ja
bound
sub
mov
aas
insb
lock
dec
mov
or
pop
or
sbb
in
xlat
fucomi
fwait
fwait
popf
or
insb
aam
inc
pop
sbb
lahf
fwait
xchg
jo
sub
jbe
lea
pop
jle
subb
call
jne
mov
mov
dec
mov
stc
int
mov
mov
sub
mov
addr16
push
out
es
mov
jle
dec
arpl
in
add
andb
sti
scas
outsb
ljmp
add
jmp
data16
and
cmc
mov
scas
cli
jle
mov
lret
xor
push
clc
insb
outsb
gs
xchg
push
cld
mov
adc
cmp
cmp
repnz
ret
adc
xor
jmp
mov
dec
ret
jbe
pop
shlb
mov
mov
pop
ret
std
mov
ds
xchg
xlat
inc
jbe
mov
jmp
adc
sub
fdivrl
and
add
mov
ret
jle
or
xor
dec
out
sbb
mov
mov
cs
mov
pushf
fistpl
jge
cmp
enter
in
mov
aaa
shll
inc
dec
xchg
cmp
jbe
les
pop
loop
insl
loope
loopne
call
in
ffreep
mov
fmuls
imul
addb
cmp
idivl
loop
std
in
cs
insb
push
clc
imul
pop
xchg
lock
mov
idivb
or
loope
jg
or
iret
out
mov
int
ret
ss
in
jae
jae
ja
or
out
test
int
int
mov
cmp
and
int
int
frndint
sbb
xor
add
jge
iret
fiadds
pusha
adcb
mov
lahf
in
and
add
sbb
out
push
cmc
xchg
adc
cmp
enter
jae
jns
in
or
imul
aaa
mov
dec
xor
fsubl
into
pop
mov
ds
mov
xchg
stos
hlt
inc
or
jno
popf
jge
mov
das
ljmp
in
or
jmp
jae
sub
ret
xor
jmp
stc
loopne
push
outsl
mov
pop
aas
outsb
jg
mov
sub
fidivrs
jne
outsb
outsb
fyl2xp1
sbb
pusha
hlt
xchg
scas
mov
sub
hlt
mov
mov
in
add
hlt
pop
pop
sbb
dec
ja
int
int
loop
mov
aam
cltd
fldl
aaa
mov
fimull
push
or
mov
add
fbstp
imul
lret
mov
hlt
and
sub
loop
ds
jp
lahf
aas
sbb
lret
cmp
ficompl
jecxz
adc
lock
clc
icebp
adc
adc
xlat
ds
in
xor
mov
ret
bound
jp
jecxz
jle
lahf
in
popf
cli
adc
fiaddl
mov
faddl
mov
out
outsb
jns
adc
jae
jae
les
mov
inc
into
sbb
fsubrs
jae
in
sti
jl
sbb
ljmp
in
inc
imul
and
push
mov
or
insl
mov
mov
inc
mov
mov
mov
cld
sub
xor
xchg
ret
jecxz
icebp
pop
adc
sub
xor
rorb
pop
loop
pop
sbb
mov
addr16
push
lcall
cli
adc
negb
iret
int
sbb
push
sti
pop
sub
fnstenv
fmull
es
shl
out
add
stos
outsb
fisubl
add
ffreep
push
mov
push
pop
cmp
mov
cmp
out
add
pop
xor
ror
out
jb
in
cmp
rcll
push
das
cmp
inc
ret
push
jae
jae
pop
and
sub
fidivl
dec
jg
iret
jae
mov
hlt
pop
lock
int
mov
rclb
xor
sub
iret
js
cmpsl
into
int
pop
jge
sub
notb
sahf
loope
ror
xor
jbe
sub
cltd
js
mov
or
jae
sti
cwtl
sbb
pushf
bound
push
loopne
mov
push
shll
int
jae
scas
cmp
decb
sahf
jge
aaa
mov
dec
stos
cmp
fnsave
jecxz
sub
jl
jl
cmp
notl
aaa
aaa
jl
cmp
push
or
dec
pop
dec
jno
aaa
stos
mov
in
add
and
inc
mov
aaa
mov
int
in
mov
sbb
mull
fdivrl
shlb
out
pop
cmp
leave
negb
mov
out
aad
adc
sbb
pop
adc
icebp
or
pusha
or
aaa
std
dec
inc
dec
in
fwait
fwait
fwait
fwait
jecxz
sahf
js
out
push
pop
cmp
aas
fwait
fwait
fwait
adc
inc
and
xor
mov
push
pop
xchg
outsl
loope
sbb
mov
popa
or
jecxz
dec
mov
jl
repz
cmp
add
adc
rolb
inc
ss
bound
push
ffreep
aaa
pop
jl
sub
xor
lret
or
sub
js
jbe
push
sbb
adc
jmp
ljmp
outsb
outsb
outsb
sbb
inc
mov
xchg
xchg
xor
xor
pop
jecxz
ret
sahf
and
insl
jecxz
pop
mov
mov
popf
test
mov
mov
jg
pop
and
push
add
cmp
xchg
xchg
dec
pop
dec
pop
andb
out
mov
rcll
add
pop
fnstsw
addr16
test
push
cld
and
std
push
lods
addr16
addr16
movsb
inc
xchg
xor
je
leave
adc
aaa
aaa
aaa
mov
es
push
arpl
lods
mov
ds
push
sti
push
test
iret
icebp
push
sub
fistl
pop
dec
dec
jne
mov
enter
inc
fstl
cmp
or
rorl
lods
xchg
lods
pop
and
nopl
and
js
lods
push
pop
test
lahf
in
jae
dec
fisttps
mov
fucomp
std
insb
jg
or
xchg
push
mov
mov
mov
dec
dec
jge
in
cmp
cmp
mov
and
and
cmpsb
loope
mov
mov
push
aam
pop
movsb
mov
or
mov
test
sbb
inc
fadd
pop
sarl
out
push
jno
std
xchg
mov
xchg
lahf
in
jae
cs
int3
in
repz
sbb
test
sbbb
bound
lahf
push
xor
mov
pop
ljmp
out
jae
andl
imul
out
icebp
fnstcw
aaa
jne
cmpb
adc
int
pop
sbb
mov
ret
inc
jecxz
and
mov
ficompl
jl
repz
bound
test
inc
push
push
add
int
int
pop
xor
jo
dec
mov
cld
loope
fwait
or
sub
xchg
mov
fwait
fwait
fwait
leave
jmp
test
int
jp
das
in
mov
pop
mov
xchg
pop
cwtl
or
idivb
sahf
cltd
hlt
push
adc
pop
mov
fcmovne
out
rcll
mov
dec
mov
mov
ds
mov
jb
jae
push
insb
or
mov
xor
daa
jmp
bound
sub
test
mov
out
and
push
pop
aaa
lcall
mov
mov
inc
cmc
cmp
out
or
and
sahf
sbb
pushf
jle
mov
inc
and
out
out
fs
stc
jo
sbb
sub
add
sti
xchg
fcompl
xor
ljmp
push
push
push
loop
xor
sbb
jo
and
rcll
fadds
imul
aad
cmpsb
push
or
int
cmpb
xchg
dec
fcmovnu
fdivrl
leave
pop
or
je
call
xchg
addr16
test
xchg
sub
xchg
push
lahf
shrl
sbb
scas
fbld
call
movsl
stos
dec
inc
xor
lods
iret
mov
sub
lahf
in
addr16
lea
rol
pop
mov
cmp
in
mov
mov
outsb
or
mov
in
lea
negl
mov
out
out
mov
jecxz
lret
aas
aam
ror
out
xchg
jecxz
in
les
cmp
lods
push
test
ss
mov
outsb
loop
insb
cli
shll
or
jge
adc
mov
push
cli
outsb
xchg
in
mov
mov
mov
pop
adc
jmp
lahf
jle
or
call
push
pop
data16
jle
rclb
pop
or
jae
xchg
cltd
adc
cmp
ret
mov
loopne
out
aam
and
ret
ds
lret
and
mov
push
arpl
ljmp
fwait
fwait
and
cwtl
int3
dec
xchg
push
fdivrl
clc
adc
push
push
mov
inc
push
xchg
daa
icebp
icebp
xor
inc
inc
shll
sbb
clc
lods
clc
nop
jg
xor
adc
mov
xchg
pushl
adc
xchg
add
mov
mov
pop
mov
pop
out
out
mov
loopne
gs
lock
std
jae
sti
fdivr
and
xor
cmp
clc
sbb
es
outsb
scas
cli
int3
imull
std
cmpb
daa
pusha
popf
pop
fucomi
fprem
and
in
clc
mov
stos
outsb
outsb
aas
fwait
mov
divb
shlb
or
aaa
ja
insb
jbe
ret
push
dec
cwtl
lock
aaa
ret
repnz
sub
imul
cli
fstps
pop
xchg
lcall
loope
sbbb
subb
cs
jbe
or
xchg
cmp
divl
rcrb
jl
data16
fldl
dec
push
ljmp
aas
insb
dec
ja
push
xchg
ret
fbld
sub
jnp
mov
jge
mov
aam
mov
add
xchg
jle
das
into
mov
push
pop
mov
inc
iret
jae
rcrl
mov
jns
mov
push
jae
jae
in
push
gs
mov
push
sub
cmp
stos
addr16
jb
les
sub
sti
mov
subb
repz
arpl
addr16
or
js
pop
push
mov
cmp
idivl
mov
mov
out
sti
mov
jge
sub
or
or
mov
adc
sbb
lods
test
test
movsb
rcr
ds
push
or
cmp
hlt
in
neg
faddl
jmp
mov
cmp
int
int
std
inc
mov
test
imul
xchg
jp
int
push
shrb
out
adc
push
mov
mov
pop
inc
outsl
jecxz
pop
push
int
int
testb
sbb
pop
in
sahf
int
dec
shrl
dec
xor
aam
sub
mov
popf
and
jae
sti
dec
pop
stos
adc
push
inc
inc
popf
jecxz
les
lcall
xchg
inc
xor
shll
shll
sti
ds
out
mov
arpl
jae
push
cmovge
fucom
out
cmpsb
shll
mov
ja
xchg
mov
jp
out
in
pop
pcmpeqb
insl
rol
clc
insb
mov
lret
ljmp
addr16
movsb
pushf
divb
ret
ficomps
lea
pop
addb
push
pop
xor
jae
mov
push
es
push
repnz
stos
mov
fs
adc
xor
dec
iret
out
mov
lea
shl
dec
iret
scas
js
add
hlt
ljmp
outsb
outsb
outsb
les
imul
jo
push
sbb
mov
mov
jae
inc
clc
fdivl
cld
mov
int
dec
ljmp
sbb
int
int
and
jo
or
pop
mov
ss
mov
in
sbb
mov
mov
int
sti
faddl
dec
roll
jae
aam
lock
dec
out
icebp
mov
shlb
addr16
lds
fdivrl
mov
jbe
add
ret
in
ret
sti
sahf
push
repz
fcompl
dec
into
mov
mov
addr16
mov
or
mov
mov
iret
test
repnz
lock
mov
fnsave
jle
das
mov
aaa
insb
cmp
adc
outsb
daa
loopne
ljmp
rolb
pusha
mov
mov
insl
add
add
out
idivb
scas
mov
adc
mov
lcall
mov
test
lea
sahf
out
pop
jle
cmp
shlb
sti
cmp
lock
xchg
test
testb
jl
es
push
js
outsb
iret
std
sub
and
pushf
outsb
outsb
outsb
outsb
add
stc
addr16
push
sbb
pop
jge
sahf
sub
out
mov
lds
clc
xchg
inc
push
je
rorb
ret
std
insb
outsb
jbe
xchg
icebp
inc
repz
jb
mov
bound
fmul
push
jae
jae
lds
mov
scas
loop
repnz
rcl
jae
and
imul
mov
jl
inc
mov
bound
pusha
rolb
lods
mov
int
in
test
push
loope
push
cld
movsl
dec
in
int
int
cltd
das
pop
inc
adc
sbb
cmp
add
int
or
fnstsw
jle
adc
or
pop
pop
mov
mov
outsb
loopne
clc
fnstcw
sbb
mov
out
adc
into
lret
fisttpl
mov
inc
and
fdivr
xor
fwait
cmp
int3
cs
addr16
cwtl
repnz
xchg
mov
add
in
clc
sub
test
insb
and
mov
fistps
sti
pusha
hlt
jns
test
jmp
leave
push
and
nop
or
dec
cmp
mov
fisubrl
or
ss
lock
loopne
shlb
lods
cmpsb
xchg
subl
fwait
fwait
sub
lds
push
and
mov
popa
adc
bound
inc
inc
cmc
fwait
fwait
fwait
sub
adc
and
pop
mov
insl
lds
fwait
fwait
fwait
fwait
xor
int
mov
fdivrs
loop
add
sbb
sbb
push
mov
mov
dec
pushf
sub
imul
idivb
adc
add
pop
lret
outsb
outsb
sub
imul
jns
dec
adc
fdivrl
imull
in
pop
jnp
and
cmpb
mov
das
pop
in
push
arpl
jae
cmovg
inc
pop
ljmp
in
out
addr16
cmp
inc
cld
out
stc
push
adc
insb
fsubrs
sahf
js
mov
xchg
pop
pop
je
adc
or
pop
gs
mov
jae
and
xor
push
jne
cmp
adc
aas
nop
movsl
sahf
inc
aad
dec
mov
fbld
aaa
mov
cs
sbb
dec
or
inc
in
dec
lock
fsubrl
mov
add
mov
and
loop
add
xchg
mov
xchg
add
icebp
mov
jmp
push
aas
lcall
js
add
outsb
and
add
out
jl
out
xor
jbe
aaa
aaa
aaa
push
lock
mov
push
xchg
mov
aaa
aaa
aaa
je
xchg
popf
pop
pusha
lea
int
mov
fiadds
rcrb
popf
test
pop
hlt
xor
out
bound
ret
test
sbb
xchg
outsb
outsb
das
mov
mov
jle
test
outsb
and
mov
lcall
jo
jl
jno
add
inc
sarb
fcompl
push
shl
dec
sti
inc
lds
in
arpl
std
dec
loopne
fimull
sbb
xchg
cmpsl
sysenter
push
std
jb
or
mov
sbb
jae
shrl
call
scas
xchg
aaa
mov
push
push
out
cmp
loop
mov
shll
aaa
aaa
aaa
inc
jns
ja
fs
pop
imul
sub
in
add
shl
daa
out
divb
pop
mov
stc
mov
iret
out
pushf
jge
add
xor
sti
iret
mov
test
cltd
sarl
add
aaa
aaa
cmp
pop
jmp
push
pusha
inc
jae
or
inc
popf
lret
jmp
jb
mov
inc
or
inc
jmp
fidivrl
and
cld
insb
cs
es
rorl
aaa
aaa
mov
outsb
mov
push
xor
sbb
ss
aaa
aaa
inc
into
mov
jnp
and
movsb
lods
scas
cli
pop
js
dec
test
push
mov
lods
cmc
sub
insb
pop
movsl
cmpsl
pop
jp
cmp
mov
shrb
dec
push
and
ss
sub
mov
cmp
sbb
movsb
std
mov
dec
pop
jne
xchg
jo
mov
mov
push
iret
sarb
mov
or
pop
mov
dec
test
in
and
lods
push
js
xchg
cmpb
push
lahf
fwait
fwait
fwait
dec
out
lahf
imul
jae
jnp
push
movsl
test
push
mov
mov
lret
clc
insl
pop
test
repz
cmp
shlb
mov
loopne
push
jle
adc
add
lret
lea
rcrb
lahf
rorb
out
cli
sub
loope
loop
fimull
mov
jmp
push
or
sbb
int3
into
mov
xchg
lock
add
sahf
in
mov
sti
mov
iret
sti
push
xor
repnz
jmp
int
inc
into
pop
mov
push
mov
ja
sahf
int
out
push
mov
push
xor
xchg
gs
aaa
aaa
aaa
cmp
xchg
outsl
jno
fsubs
std
ds
out
out
lcall
into
pusha
outsl
outsb
outsb
jg
dec
pop
hlt
aam
mov
loopne
mul
mov
dec
repnz
push
push
jle
cmpsl
iret
test
pop
xor
jge
int
xchg
sahf
in
adc
test
cli
jns
ds
movsl
jns
dec
dec
jno
add
mov
popf
fwait
fwait
mov
pop
jge
pop
adc
push
icebp
sbb
mov
in
or
sbb
push
stos
mov
aaa
mov
int
or
popa
or
xchg
ret
pop
pushf
nop
xchg
jae
fnstcw
das
or
jl
pushf
bound
jae
sbb
add
lods
rcrl
jo
jae
jo
repnz
ljmp
mov
xchg
xchg
sub
sub
dec
fbstp
jae
add
mov
or
movsb
jge
mov
cmpsb
jp
xor
mov
mov
add
clc
push
clc
push
stos
cltd
mov
lahf
lcall
js
int
int
repnz
arpl
pusha
sbb
int
fidivs
aam
or
js
out
nop
std
pop
add
test
aas
cs
mov
addr16
sub
push
xlat
inc
sar
nop
jae
test
push
mov
call
adc
pop
fdivrl
sti
sbb
xorl
fdivl
ret
fnop
call
jge
neg
pop
push
and
test
xchg
jp
outsw
mov
and
adc
inc
xor
outsb
outsb
jp,pn
sbb
in
daa
sbb
insb
cmp
lods
fldenv
ja
push
cld
sbbb
dec
shll
pop
jp
insb
and
pop
cmp
jmp
push
jae
lods
dec
out
or
out
shr
iret
int
jae
sbb
lret
in
pop
sbb
push
fwait
or
int
lahf
fimuls
bound
jne
pop
lahf
int
mov
mov
fistl
loop
pop
test
xchg
push
push
and
cmp
mov
pop
shlb
mov
es
adc
push
rep
test
fmull
into
sub
loope
push
jae
mov
fidivl
xor
inc
iret
in
addr16
add
sbb
ret
clc
inc
jl
cmc
adc
sbb
pop
adc
cli
jl
test
fucomi
mov
xchg
jnp
repz
mov
sbb
xor
jo
push
jge
adc
mov
xor
dec
xchg
mov
pop
and
mov
pop
add
sbbl
mov
hlt
jmp
movsb
outsb
outsb
aas
fistl
pop
stos
cmc
sub
xor
outsb
outsb
mov
inc
cwtl
ret
jae
xor
mov
call
xchg
mov
push
das
push
clc
stos
out
dec
mov
clc
fcompl
fidivs
jnp
shr
or
outsb
outsb
and
cmpw
xor
clc
insb
ret
fildll
shl
je
sub
repnz
adc
testl
and
ret
pop
ss
idivl
push
bound
sub
lcall
xchg
enter
mov
cmp
cmp
adc
pop
add
cmp
out
or
jge
aas
add
xchg
mov
scas
jecxz
jl
xor
lret
movsl
mov
outsl
loopne
sarb
sbb
jge
or
mov
out
mov
xchg
out
out
sub
es
pop
pop
mov
mov
mov
xlat
xlat
dec
js
bound
mov
dec
mov
mov
sbb
add
out
mov
inc
push
sub
ljmp
fisttpl
mov
ror
lret
mov
insb
dec
sbb
bound
dec
xor
adc
int3
jge
xchg
pop
sbb
adc
imul
mov
lods
dec
and
les
shlb
outsb
mov
in
in
jecxz
and
mov
push
jge
cmp
sarl
cmp
sbb
hlt
fprem
xchg
mov
jbe
push
lret
in
lea
mov
push
bound
jmp
in
sub
inc
orb
pop
lock
sub
mov
call
xor
inc
mov
cmp
and
sbb
push
cmp
out
mov
arpl
jle
int
hlt
jecxz
and
repnz
loopne
insb
cmp
test
cmp
mov
int
shrb
leave
pop
scas
out
out
nop
or
clc
jle
jae
lods
insb
xor
xor
ljmp
outsb
push
imul
pop
jp
rclb
mov
or
iret
js
sub
int
pop
mov
mov
iret
scas
cmpsb
mov
fisttps
mov
jno
pop
or
call
je
fimuls
js
mov
in
jmp
cwtl
or
dec
xchg
ret
jae
sti
fnstenv
pop
js
and
mov
jne
cmp
aaa
aaa
mov
mov
adc
xor
push
mov
ds
dec
andb
or
pop
push
cmpsl
pop
sub
dec
or
sahf
std
dec
ficompl
mov
add
pop
ljmp
enter
int
int
fwait
xchg
imul
jno
ds
roll
jne
inc
push
sti
jle
fmull
jmp
lcall
addr16
pop
sbb
das
push
adc
js
ds
cltd
int
je
je
lock
lahf
es
push
insb
outsb
clc
fldenv
div
cwtl
pop
adc
jecxz
sar
aad
mov
pop
lahf
int
addr16
lea
popl
adc
adc
imul
aaa
mov
cmp
xor
and
mov
jle
jno
sbb
lea
push
outsl
cmc
bound
push
insb
pushf
dec
leave
es
cmpsb
imul
inc
cmp
pop
jle
dec
mov
dec
nop
movb
and
fwait
iret
int
cmp
push
mov
lahf
fwait
fwait
fwait
cmc
and
pop
xor
mov
or
popf
int
pop
or
inc
loop
jge
lret
pop
cmc
mov
sub
mov
ret
clc
mov
test
or
arpl
dec
bound
xor
and
cmpsb
cmp
repnz
out
ljmp
inc
pop
ret
mov
int
filds
push
xchg
test
jle
dec
jo
lahf
int
std
push
push
jae
jbe
fwait
sbb
add
clc
idivb
fwait
fwait
js
dec
xchg
jmp
lods
aaa
and
jle
lea
xchg
xor
xchg
jbe
or
sahf
fwait
mov
in
fsubs
lahf
in
jnp
add
cwtl
and
or
push
fwait
mov
lock
mov
fimuls
cmp
les
ror
xchg
xlat
mov
and
sub
jno
jns
cmc
mov
xor
or
jo
mov
sub
xchg
mov
aas
dec
dec
test
mov
popa
adc
out
out
push
into
mov
xor
test
int
out
in
fldl
movsb
mov
iret
cmp
push
xchg
mov
andb
iret
pop
lcall
sub
bound
mov
or
mov
sbb
lods
js
shlb
loope
cmp
outsb
outsb
outsb
lahf
mov
mov
daa
and
dec
push
xorb
out
add
xchg
adc
mov
nop
std
insb
mov
or
cltd
lahf
out
dec
rcr
and
insb
lcall
mov
mov
shlb
sbb
cli
jecxz
and
clc
stc
fdivrl
adc
dec
lock
mov
movsl
js
pop
aad
hlt
adc
jnp
sub
jl
fidivl
pop
shlb
pop
fs
jl
or
inc
sbb
mov
aaa
mov
jecxz
dec
divb
fimull
push
enter
jae
jle
lahf
stos
data16
es
dec
out
adc
push
jae
jae
or
clc
jg
lret
add
lock
stc
loope
dec
pop
fwait
mov
xchg
outsl
mov
xchg
fwait
fwait
fwait
fwait
js
loopne
iret
push
mov
bnd
setl
mov
scas
and
mov
jecxz
clc
inc
insb
mov
add
aaa
aaa
aaa
in
dec
call
mov
push
fistps
xchg
xorb
sahf
insb
outsb
outsb
jbe,pn
mov
xor
mov
hlt
pusha
and
mov
xchg
aam
rcl
dec
sub
andl
fdivrl
mov
out
mov
push
or
lret
cmpsl
dec
mov
xchg
cld
mov
js
out
clc
outsb
dec
push
xlat
lods
jbe
jne
adc
insb
pop
xchg
lods
fidivl
mov
cmpsl
jp
cmc
pop
fdivr
inc
lahf
xchg
into
fistpl
sahf
cmp
pop
pop
sub
fdivrl
test
rcr
das
cli
cmp
jae
jae
mov
add
mov
push
ds
mov
inc
rcrb
ret
popa
dec
or
in
pop
mov
jl
cmp
ds
xor
ds
mov
or
lock
pop
call
push
sbb
cmp
addl
arpl
rcl
xor
test
int
int
and
xchg
das
pop
add
or
jns
setg
int
shll
in
cmp
pushf
xchg
cmpl
repnz
sarb
icebp
out
out
out
mov
pop
into
ret
push
outsb
aas
fcmovne
fists
mov
mov
and
ficomps
loope
sahf
outsb
outsb
outsb
outsb
std
add
sahf
imul
outsb
int3
outsl
lahf
data16
sar
mov
ja
filds
push
cmc
mov
add
out
push
pop
fsubrs
fwait
jle
and
nop
xor
pop
mov
xchg
lods
imul
dec
ja
or
test
out
and
mov
mov
adc
mov
lahf
ljmp
shrl
mov
cltd
pushf
sahf
dec
dec
int
fildll
mov
unpcklps
dec
push
lahf
js
mov
aad
lods
fimuls
xor
test
lods
push
mov
cwtl
bound
or
das
loopne
or
sub
out
mov
test
insb
outsb
and
mov
push
stos
jbe
cli
lret
xchg
inc
jecxz
shrb
push
pop
lret
dec
enter
mov
test
pop
mov
out
xchg
xor
cmp
xchg
xlat
stos
andb
push
jg
cld
inc
sub
push
insl
roll
stos
xor
adc
jbe
push
loopnew
ds
mov
push
or
sub
inc
xor
repz
aaa
aaa
outsl
and
fs
sbb
mov
in
push
mov
jbe
movb
stc
mov
ljmp
xor
aam
mov
insl
push
add
clc
movsl
es
jl
test
xchg
lods
test
pushf
mov
xchg
sub
incl
xchg
sahf
sub
divl
int
insb
pop
ret
out
fmull
push
dec
push
lods
adc
stc
xchg
pop
dec
push
sub
int
int
loope
and
rorb
int
mov
test
jle
lahf
int
int
pop
scas
push
mov
push
sarb
ds
cmp
xor
mov
fwait
fwait
fwait
mov
js
lret
lret
loopne
fdiv
inc
push
push
ret
inc
rclb
push
cmp
test
add
dec
dec
dec
les
stos
push
fstl
jns
cmp
out
into
popl
popa
cld
adc
push
sahf
pop
add
inc
jmp
jnp
cmp
mov
lock
mov
inc
and
inc
dec
jne
jge
xor
pop
cmp
xor
mov
xor
fs
mov
roll
aad
or
sbb
dec
xchg
xchg
arpl
mov
cmp
cmp
out
push
jb
loope
mov
xchg
test
dec
xor
fstps
popf
cwtl
push
adc
add
jae
mov
daa
in
mov
adc
fisttpl
mov
aad
lea
jbe
jbe
sbb
movsb
cmpsb
filds
add
sbb
shlb
loopne
push
sti
in
dec
aas
jl
int
pop
in
adc
lahf
int
mov
popf
mov
stos
xchg
xor
mov
aaa
mov
push
jns
sbb
mov
and
outsb
adc
mov
int
xor
ret
cmp
inc
mov
pop
stos
aam
mov
out
aam
out
push
mov
mov
imul
mov
push
rcrb
cmp
in
cmp
out
xor
mov
and
addb
jnp
cwtl
adc
icebp
mov
pusha
outsb
xchg
pusha
cwtl
sub
or
std
insb
outsb
outsb
sub
mov
bound
mov
arpl
out
mov
adcl
add
es
call
sahf
scas
mov
lcall
dec
xchg
sahf
int
and
jbe
lock
jl
jbe
sahf
mov
xor
data16
fcmovne
cmpsb
pop
in
movsb
bound
cmp
add
nop
aam
adc
jnp
mov
pushf
mov
outsb
clc
fdivs
add
insl
or
and
mov
pop
jmp
fdiv
mov
in
lahf
mov
shrl
std
je
int
xchg
jo
roll
dec
mov
in
or
ds
cwtl
mov
loop
fwait
fwait
cmp
mov
das
loop
jno
jnp
or
push
add
addr16
jge
dec
out
bound
fildll
test
ret
xchg
ficoms
int3
iret
mov
sbb
mov
addr16
jle
adc
mov
jne
mov
mov
lcall
cmp
mov
and
mov
fwait
out
mov
std
adc
aaa
pop
jp
mov
xchg
aas
fistl
mov
push
out
popa
loopne
ret
cld
fwait
loop
sbb
lahf
or
mov
fidivl
push
jle
shrl
aaa
aaa
aaa
aaa
inc
push
dec
rcrb
cmp
lds
jle
test
je
pop
push
clc
icebp
insb
outsb
outsb
add
stc
push
movsl
movsb
mov
inc
vaddsubps
sub
fdivl
shlb
fdivrl
push
add
ret
repz
int
mov
lds
hlt
add
in
push
cs
mov
sar
lock
fildl
scas
sahf
pop
repnz
cld
loopne
ds
aaa
mov
es
sbb
pop
mov
push
fcompl
sbb
pop
test
mov
lcall
insl
mov
mov
and
sbb
enter
insb
mov
sahf
mov
lds
aaa
aaa
push
stos
inc
stos
push
cmp
push
mov
mov
aaa
aaa
flds
cmpsb
adc
sbb
movsb
cmp
push
mov
push
dec
inc
pop
out
dec
mov
push
movsl
pop
adcl
or
ret
push
push
pusha
lret
xchg
jp
je
fsubrp
test
cmc
jae
aad
push
in
and
pop
or
jae
jae
fldcw
call
aam
xchg
jae
sbb
sbb
mov
mov
lea
das
ja
xchg
out
inc
out
cli
cltd
cmp
aad
call
xor
mov
addr16
dec
in
or
sarl
out
out
sbb
outsb
xor
out
out
or
lcall
clc
out
out
or
mov
ja
ljmp
aas
out
mov
fdivrl
sub
imul
addb
mov
aaa
adc
cs
stc
pop
outsb
outsb
outsb
pusha
xor
fcoms
rcrl
pop
adc
sbb
adc
jg
ljmp
add
mov
mov
int
int
bound
xchg
mov
sbb
int
gs
xchg
mov
ds
out
out
jo
mov
or
jge
push
sahf
cmp
inc
xchg
push
sbb
arpl
jb
jno
pop
sti
scas
out
mov
mov
hlt
scas
pop
xor
add
or
cmovbe
negb
pushf
adc
sbbl
imul
rclb
fists
dec
adc
lahf
push
jl
mov
fcomi
pop
sbb
dec
jp
aaa
aaa
mov
or
dec
shr
cmp
xchg
in
cmp
push
mov
mov
mov
imul
mov
cmpsb
sub
test
ds
out
icebp
adc
je
ds
inc
add
push
inc
dec
lock
fwait
fwait
sub
fbstp
xchg
mov
dec
popf
mov
insb
imul
hlt
sets
jecxz
dec
sti
mov
sbb
outsl
ljmp
pop
lock
insb
jb
add
add
int3
int
daa
loopne
jno
jo
sub
int
xchg
jnp
shrl
lret
out
adc
fisttps
iret
pop
add
mov
dec
sub
fidivl
pushf
int
int
shll
sub
aaa
aaa
push
adc
push
mov
xchg
dec
imul
add
sbb
jne
or
addr16
mov
mov
nop
pop
add
adc
cmc
out
and
stos
inc
pop
loop
dec
cli
xchg
or
sbb
push
sub
inc
outsb
outsb
outsb
outsb
sbb
sub
repz
mov
clc
jp
xor
mov
dec
jle
scas
mov
ljmp
js,pn
in
mov
inc
int
pusha
jecxz
test
popa
or
inc
xor
cmp
mov
iret
mov
test
out
xchg
jnp
or
int3
inc
mov
int
jae
test
lods
lods
sti
ss
in
mov
add
adc
and
int
js
pop
push
push
pop
and
sbb
sub
int
sub
inc
xor
fwait
fwait
cld
leave
push
test
push
fdivl
mov
fwait
fwait
scas
cmp
sub
imul
fmull
fdivrl
push
daa
push
mov
arpl
mov
sahf
pop
scas
inc
out
out
sahf
pop
sbb
pop
pop
inc
inc
sbb
aas
lods
iret
sbb
xor
orl
aaa
std
insb
jno
xchg
mov
enter
cmp
pop
shlb
stos
mov
jae
pop
xchg
xchg
lds
rcrl
inc
jle
call
pop
cvtps2pd
push
filds
js
es
cmpsb
in
or
fwait
or
cmp
jb
adcb
mov
mov
pop
adc
enter
dec
pop
ds
push
adc
inc
mov
inc
lahf
not
fildll
aam
subl
ljmp
jns
shl
add
fdivl
cmp
lcall
fcmovbe
loope
inc
sbb
outsb
lahf
fwait
fwait
outsb
mov
add
cmc
mov
out
sti
insb
out
loope
shll
push
adc
out
subl
loop
mov
fsub
out
out
xor
std
nop
push
aas
imul
adcl
jae
pop
gs
mov
push
jbe
lods
or
mov
out
icebp
mov
mov
pop
jae
push
scas
cmc
pop
enter
imul
jae
out
sti
pop
popf
in
lret
xchg
adc
xor
daa
pop
push
mov
movsb
addr16
dec
aaa
arpl
int3
sahf
std
insb
pop
stos
les
dec
pop
xchg
fildl
push
clc
out
pop
dec
frstor
mov
std
xchg
mov
jno
lcall
mov
loopne
into
in
in
mov
repnz
add
and
out
jbe
or
jmp
int
out
rcrb
adc
imul
out
out
push
in
xchg
pusha
jns
xor
cmp
je
adc
out
pushf
call
or
sub
out
divb
sub
xchg
mov
fcmovne
xchg
cmp
push
fcompl
inc
xchg
sahf
testl
pusha
cmc
mov
je
mov
loopne
roll
loope
int
inc
pop
ret
in
or
cmp
xchg
add
or
inc
outsl
xor
pop
repnz
jae
out
mov
in
adc
xlat
shlb
jle
cmc
adc
out
inc
xor
mov
out
and
push
sbb
bound
lcall
rcr
cmp
movsb
faddl
cltd
nop
je
pop
ss
aaa
aaa
push
sbb
jbe
lahf
pop
in
sbb
lret
mov
lahf
int
adc
cwtl
xor
es
pop
les
pop
loope
mov
jp
mov
fdiv
jge
js
fisubrl
lock
pop
movsl
fcoms
aas
aad
fdivrl
je
out
inc
mov
aad
aaa
aaa
aaa
aad
jl
push
bound
movsb
stc
xor
sub
aaa
aaa
daa
push
ljmp
jp
jmp
shlb
out
fdiv
xchg
ljmp
mov
aam
insl
lea
outsl
dec
sahf
jecxz
loop
cmc
xorb
scas
inc
sub
sahf
xchg
ljmp
pushf
dec
add
add
pop
add
xor
push
ret
int
jae
sbbb
out
popa
mov
test
mov
int
int
mov
fwait
and
mov
int
ss
pop
push
shlb
sbb
jnp
inc
sbb
ja
fwait
push
lahf
add
mov
out
jbe
je
xchg
mov
push
jl
out
popa
add
pusha
in
imul
mov
aaa
aaa
aaa
cmp
adc
mov
outsb
sti
fwait
inc
hlt
sarb
or
aas
ss
fadds
jecxz
loopne
cld
int3
insb
fnstcw
jo
xchg
out
cli
mov
push
in
addr16
ret
dec
xchg
les
ret
mov
mov
les
mov
imul
sahf
pop
or
sub
jp
push
into
negl
push
outsb
mov
leave
clc
pop
jl
jg
mov
mov
outsb
outsb
outsb
xchg
fdecstp
idivb
lods
sbb
push
ss
pop
xchg
sti
in
iret
mov
mov
dec
clc
or
xor
add
pop
mov
or
repnz
mov
out
jle
xchg
push
inc
cld
jge
sti
fnstcw
popf
pushf
mov
aam
mov
sub
insb
jae
jae
cs
nop
inc
add
iret
jae
jae
cmp
movsb
sbb
fidivrs
in
xchg
out
or
iret
in
inc
pop
out
outsb
xchg
into
aad
push
icebp
lock
push
push
aaa
popa
mov
bound
xor
or
andl
push
sbb
sub
pop
out
stos
jae
mov
mov
push
lret
mov
aaa
aaa
aaa
aaa
xor
test
push
cmpl
leave
js
jmp
int
jl
sub
inc
xchg
aam
out
xchg
push
shl
out
pop
dec
ds
mov
pop
outsl
stc
jo
insb
outsb
outsb
cmp
and
imul
or
lock
cmp
clc
mov
xor
pop
xchg
stos
xchg
popa
insb
outsb
outsb
outsb
xchg
sub
mov
gs
mov
adc
sahf
mov
lea
mov
pop
cld
std
lods
je
aas
std
inc
in
push
push
sti
add
sub
cmp
rcrb
pusha
and
in
dec
xor
ss
fcoms
lock
rcr
sub
cmp
push
rol
adc
popa
jnp
test
nop
fimull
mov
pop
mov
js
mov
aaa
hlt
jl
and
sbb
cli
in
sub
dec
ss
je
add
jmp
pop
pushf
inc
call
pop
cmp
cmc
ret
mov
cltd
addb
es
inc
int
pop
aas
xabort
cmp
mov
adc
mov
cmc
mov
repz
cmp
sbbb
or
adc
fsubl
mov
jbe
adc
call
repnz
ja
mov
mov
mov
scas
adcl
and
call
ljmp
es
fmull
out
int
int
xchg
cmp
aam
dec
push
push
xchg
dec
int
int
ret
out
dec
lret
test
xchg
mov
aam
loop
push
cmpsl
jns
add
fcmovne
out
xchg
push
push
rcrl
dec
jmp
push
mov
adc
mov
dec
insb
mov
jae
pop
js
or
sahf
cmp
fcos
movsb
jae
jae
push
push
fdivs
add
sbb
mov
imul
test
shlb
mov
xor
div
ja
add
cmp
sar
mov
iret
int
jb
test
mov
add
push
out
mov
or
into
fwait
fwait
fwait
fwait
sahf
out
lods
les
rcpps
mov
fwait
fwait
xor
cmp
xchg
dec
add
jl
outsb
xor
cmp
push
test
js
outsb
jecxz,pt
pop
rorb
int3
cwtl
pop
sub
out
cmpl
mov
push
loopne
outsl
mov
jbe
fs
ljmp
ds
jle
push
dec
sahf
scas
and
test
psubw
mov
mov
mov
jb
out
idivb
repnz
cmp
xor
and
mov
sbb
and
add
push
fbld
mov
test
out
filds
add
sbb
bound
iret
out
out
ss
and
das
js
and
mov
ja
adc
outsb
outsb
outsb
outsb
aaa
lahf
das
sbb
sti
adc
std
insb
outsb
sbb
cmp
mov
sub
leave
test
jae
or
aam
out
jl
pop
fs
mov
jae
mov
frstor
mov
mov
and
jl
sar
int
mov
pop
xchg
fwait
cmp
mov
int
nop
adc
mov
sti
jle
jecxz
loopne
xchg
inc
dec
ljmp
loop
mov
out
sbb
fisttpl
cmpsl
xor
aas
jnp
push
int
imul
sarl
sbb
fs
push
push
lahf
int
xchg
sub
fwait
mov
or
jecxz,pn
mov
aas
mov
gs
ss
mov
jp
jge
push
pop
ljmp
sti
inc
and
jb
lods
cld
dec
sub
mov
add
jae
jae
mov
and
jnp
jb
jae
in
push
aas
out
push
inc
int
int
out
ds
sub
stos
add
int
push
addr16
lds
dec
jae
es
cmpsl
pop
lock
mov
int
cmpl
xchg
adc
not
push
test
int
cltd
aam
cmp
outsb
jl
cmp
jp
xor
in
inc
jno
js
sub
jle
dec
ss
mov
addb
cmp
int
fwait
mov
jns
sbb
mov
test
test
inc
rcll
fisubs
mov
mov
xor
pop
mov
mov
adc
pop
sub
pusha
mov
or
outsb
outsb
scas
mov
ror
jbe
cmp
push
dec
gs
xchg
shll
and
es
pop
clc
ljmp
add
call
movsl
mov
mov
mov
xor
test
ret
mov
test
mov
jae
sub
jbe
push
cld
aaa
aaa
aaa
aaa
jne
cltd
inc
mov
nop
push
loopne
jne
ss
sbb
repz
add
movsb
jle
mov
es
loope
xor
out
jae
pop
loopne
add
nop
es
xchg
ss
jae
jae
and
movsl
loope
adc
sbb
pop
jae
jae
inc
mov
hlt
dec
push
pop
jbe
gs
xchg
fbld
mov
ljmp
out
pop
mov
adc
in
dec
int3
leave
jae
jae
push
cmpsb
call
inc
dec
dec
mov
test
mov
xchg
push
add
push
dec
jecxz
xorb
mov
mov
daa
idiv
xor
add
jae
divl
cs
pop
sbb
jae
xor
mov
pop
xchg
loopne
mov
shlb
mov
pushf
data16
out
or
popa
mov
push
add
iret
iret
shrb
xor
outsb
outsb
outsb
push
popa
pop
and
out
inc
das
sarl
incb
ljmp
and
outsb
outsb
or
dec
or
pop
mov
rcrl
out
testb
inc
sahf
mov
sbb
sbb
xchg
test
xor
jne
pop
cltd
data16
jae
dec
lret
cltd
xor
ljmp
jae
cwtl
mov
dec
pop
cmp
incb
cmp
dec
ficoml
mov
cmp
in
jae
adc
and
dec
xor
jmp
iret
int
adc
or
adc
jb
stos
jne
testl
mov
add
movsb
in
stos
sbbb
lock
xchg
sub
lret
sub
sub
push
push
inc
xchg
shl
out
adc
mov
outsl
pop
jp
int
cmpl
das
aaa
aaa
mov
jmp
bound
movsb
xor
fwait
fwait
sub
cmp
outsb
sbb
lods
mov
jge,pt
pushf
clc
push
mov
rorb
xchg
mov
je
sbb
aaa
aaa
pop
shl
out
mov
or
xchg
mov
in
fdivrl
aaa
push
stos
je
stos
fidivl
test
mov
scas
clc
movsb
xor
push
inc
pop
dec
mov
sub
outsb
outsb
xchg
inc
or
add
int
addr16
rcrb
shl
out
loop
jecxz
or
pop
das
mov
sub
xor
mov
outsb
outsb
mov
xchg
arpl
jns
test
mov
pop
aaa
mov
dec
mov
push
sbb
bound
in
mov
xor
lcall
adc
fwait
pop
arpl
cmp
aaa
mov
leave
outsb
outsb
outsb
mov
adc
lods
xchg
ret
add
outsb
mov
fstpl
xor
jle
dec
dec
int
dec
sub
int3
push
int
or
dec
or
mov
jle
xchg
mov
push
cmp
insb
sbb
ret
sahf
arpl
adc
sub
cli
in
dec
mov
repz
rorb
repz
pop
sbb
sub
jmp
cmp
xor
call
leave
or
sti
movsb
imul
xchg
fimull
adc
jae
jae
inc
test
pop
jo
insl
pop
outsl
out
idivb
mov
mov
sti
scas
dec
mov
out
out
jb
repnz
cmc
cmp
inc
pop
shlb
and
mov
lret
aaa
mov
sbb
mov
aas
mov
jb
aam
cmp
jl
aaa
aaa
sub
xlat
xchg
dec
and
test
xor
adc
push
mov
int
in
jp
jl
fadd
lret
hlt
xchg
sub
lock
xor
jae
sti
nop
mov
mov
pop
insl
inc
push
lock
fbstp
xor
dec
fiaddl
pop
int3
mov
xor
xor
jge
inc
cmc
jbe
das
cs
mov
xchg
push
xchg
bound
clc
push
push
jbe
sbb
mov
mov
push
fsts
mov
xor
sahf
imul
xor
rclb
loopne
mov
sbb
subb
cmp
fcompl
jge
dec
dec
or
inc
test
pop
jg
dec
mov
mov
ljmp
js
sub
fwait
sub
mov
dec
pusha
xor
fwait
pusha
fwait
fwait
fwait
fwait
mov
movsb
mov
pop
std
pop
push
rolb
repz
fwait
ds
mov
sbb
imul
sarl
fwait
fwait
fwait
fwait
outsb
mov
out
xor
xchg
fwait
jmp
cmp
jo
hlt
lret
jp
imul
shrb
fcompl
sti
ja
repnz
scas
adc
cmpsl
int
inc
clc
mov
cwtl
enter
push
xor
lahf
or
bnd
xchg
xor
xchg
das
nop
in
mov
arpl
call
insb
xchg
cmp
mov
jne
sub
out
sbb
mov
mov
fwait
or
mov
fdiv
mov
or
fisubrl
iret
in
or
mov
mov
or
mov
outsl
jge
outsb
outsb
outsb
pop
dec
fnstenv
hlt
test
insb
cwtl
jp
jecxz
in
adc
clc
insb
outsb
int
shll
ljmp
jle
aas
lea
inc
imul
mov
and
mov
cmpsb
lahf
in
sbb
xchg
loop
and
test
out
outsl
out
out
int3
dec
xchg
js
stc
mov
shlb
out
xchg
and
popf
or
inc
mov
shl
xor
outsb
filds
lahf
ja
cmp
out
mov
add
mov
outsb
hlt
jmp
xchg
es
inc
cmp
jo
mov
outsb
outsb
outsb
cmp
or
jae
shlb
hlt
jne
jmp
aaa
jae
jae
mov
dec
int
pop
notl
mov
dec
addr16
ljmp
ds
aaa
push
push
lods
and
popa
adc
xchg
cmp
push
cltd
cwtl
jge
js
ja
mov
xor
pusha
pop
inc
push
and
mov
mov
aad
imul
shr
sub
xchg
fldl
arpl
aam
jae
addb
mov
or
sub
sahf
mov
jl
mov
testb
push
in
cmpb
pop
sbb
lock
out
mov
mov
push
sub
jbe
mov
ret
fdivl
in
cmp
cmp
mov
dec
pop
mov
lahf
js
es
insl
in
fnsave
lods
jmp
mov
xchg
ds
cmp
push
mov
hlt
mov
dec
inc
adc
sti
loop
fidivrl
cmp
popf
loop
loop
jae
inc
loopne
mov
dec
out
jae
xchg
cmc
jbe
inc
jl
jp
adc
xor
xor
mov
mov
in
mov
dec
xchg
data16
fdivrl
fisttpl
xor
add
jo
out
clc
fsubrl
xor
ret
movsb
cwtl
popf
adc
and
outsb
inc
inc
xchg
fistpl
aam
fcompl
xchg
pop
stos
test
dec
outsl
pop
or
rcrl
adc
adcl
push
fadds
jae
sti
cmp
imul
cmp
push
adc
pop
jbe
pcmpeqw
pop
in
testl
fdivrl
jecxz
mov
imul
sub
loope
mov
mov
jp
push
mov
add
dec
adc
xchg
mov
add
ss
aaa
not
enter
xchg
push
movsl
mov
fistl
out
adc
push
gs
push
dec
fwait
fwait
fwait
fwait
negb
pusha
loope
inc
jmp
loop
lahf
int
lahf
mov
cld
push
and
insb
jns
mov
or
outsl
test
pop
adc
iret
int
clc
fcompl
scas
arpl
ss
aaa
mov
xor
cmp
xor
jp
mov
ret
jle
into
pop
pop
jle
sbbb
ljmp
push
add
sbb
dec
push
repnz
pop
or
dec
jg
dec
lahf
mov
mov
movsl
fs
sbb
push
cwtl
mov
ljmp
mov
dec
dec
lods
xor
out
aaa
fwait
push
inc
mov
or
mov
pop
push
inc
or
stos
mov
pushf
into
loop
int
int
add
scas
call
lea
int
das
fmull
arpl
movsb
pop
int
int
pop
movl
int
int
int
rorl
cmp
cld
inc
sbbb
push
sbb
fcompl
push
mov
jecxz
pop
jae
jae
push
push
bound
mov
jae
cmp
mov
in
nop
mov
ds
enter
inc
adc
ss
aaa
aaa
and
popf
pop
cmpsl
mov
popf
fwait
jle
cmpsb
push
jge
xor
sbb
xor
leave
mov
mov
ja
out
xchg
xorb
jo
pop
icebp
sub
mov
lcall
imulb
iret
aaa
inc
push
repnz
or
in
insb
jbe
cmpsb
in
mov
fwait
pop
or
sti
cmp
int
nop
js
stos
jle
mov
push
movsb
outsb
outsb
push
lcall
jle
orl
push
jae
lds
mov
movsb
jno
pop
imul
addr16
xor
pop
push
push
mov
movsb
jae
mov
or
ds
aaa
aaa
sbb
adc
or
mov
fistl
pop
or
add
js
nop
icebp
mov
push
or
sbb
pop
inc
mov
in
mov
stos
out
mov
mov
int
xlat
pop
sub
sahf
fwait
fwait
fwait
mov
leave
xchg
aaa
jl
jb
xchg
and
xchg
and
ss
mov
mov
sahf
lcall
mov
or
fdivl
lcall
out
lock
fs
in
in
cmc
arpl
int
out
push
std
xchg
subl
mov
or
stos
jbe
jo
mov
dec
xchg
das
leave
enter
ljmp
pop
inc
jmp
inc
push
ss
jbe
sbb
inc
sub
xchg
jp
cmp
jb
mov
ja
stc
std
scas
ret
xor
cmp
in
xchg
scas
aaa
ss
rolb
aaa
aaa
mov
or
out
imul
fwait
fwait
sbb
es
ftst
aam
cmp
aas
pop
lock
addps
hlt
pop
cwtl
loopne
mov
xor
xchg
shr
mov
lods
iret
fdivs
cmp
mov
mov
repz
push
xchg
stos
lock
fdiv
das
inc
orl
pop
inc
pop
loopne
pop
cmp
rcr
mov
jns
in
out
rorb
test
clc
rorb
arpl
inc
lahf
imul
pop
dec
loopne
jmp
xchg
jg
sub
out
cltd
clc
insb
outsb
cmp
subb
out
mov
bound
jp
mov
outsb
outsb
cs
in
sbbb
outsb
outsb
outsb
or
xorl
lods
jecxz
dec
adc
adc
push
pop
pop
mov
lret
popa
lahf
fwait
fwait
push
xor
add
cmp
aaa
jge
repnz
lods
fistpll
push
push
jo
outsb
outsb
clc
or
sub
sbb
jne
out
cld
jp
gs
jecxz
stos
ss
sbb
jle
faddl
mov
stc
sub
addr16
push
inc
es
push
mov
or
sbb
adc
cmp
ds
xorl
mov
sahf
add
pusha
cmp
in
in
sti
cmp
into
mov
sub
xchg
xchg
lds
jl
inc
dec
roll
lahf
int
ret
mov
jne
flds
clc
dec
sub
add
sbb
mov
pop
test
outsb
outsb
outsb
cmovs
lock
add
fnstsw
cmpsb
cs
std
insb
lods
lds
cwtl
pushf
mov
imul
test
and
push
insl
ret
sti
sub
sahf
cmpl
int
and
daa
cmpsb
push
mov
mov
int
jecxz
int3
mov
sub
xchg
adc
out
out
push
dec
push
jecxz
out
rorb
scas
sahf
or
lods
je
jb
jnp
std
mov
sub
mov
insb
jle
in
lods
shlb
mov
xchg
in
add
clc
clc
pop
push
lds
jmp
xchg
cmc
push
cmp
lret
flds
stc
jbe
add
sarl
jp
scas
pop
or
std
insb
iret
dec
jecxz
fisttpl
stos
adc
pusha
or
or
aaa
aaa
aaa
faddl
xchg
loopne
sbb
lar
add
add
mov
push
es
pusha
dec
fcoml
test
out
out
movsl
push
nop
adc
add
out
xchg
sbb
xchg
jne
in
cmp
lret
out
and
pusha
add
mov
jmp
xor
cmc
dec
mov
xlat
mov
mov
fdivrs
jae
call
mov
fsubl
mov
and
jne
scas
sbb
push
ds
mov
repnz
fdivr
jae
std
mov
mov
nop
idivb
sub
mov
jno
cmp
adc
rclb
mov
lcall
std
movsb
in
test
popa
iret
adc
out
or
aaa
aaa
ja
adc
mov
fmull
dec
or
mov
jmp
cmp
lock
inc
and
ds
add
push
in
add
jo
pusha
mov
cmp
out
inc
out
in
std
jb
mov
decl
jmp
shlb
sarl
mov
push
cli
push
cmp
out
cmp
stos
aaa
in
scas
cmp
pop
pushf
add
subb
cli
mov
pop
dec
pushf
mov
fisubrs
pop
scas
inc
shlb
adc
pop
mov
lods
out
or
jae
ja
push
lahf
dec
sarl
es
addr16
jae
dec
mov
repz
mov
or
in
cmpb
scas
pop
sti
fs
mov
mov
sub
test
lret
clc
mov
inc
push
dec
inc
push
cmp
lods
sbb
mov
mov
mov
int
aaa
or
ror
sbb
cltd
push
or
pop
sub
es
and
jmp
dec
std
and
out
mov
jae
js
xor
adc
mov
jae
iret
mov
xchg
fmul
test
ret
dec
mov
xchg
int
and
mov
aaa
ret
sub
stc
lret
sti
ror
int
add
jge
mov
sahf
int
pop
je
loopne
xchg
fsubs
inc
cltd
push
push
mov
movl
sub
scas
xor
inc
xor
pop
call
test
ljmp
mov
es
mov
jge
int
in
addr16
xchg
in
out
movsl
pop
cmp
int
int
fxch
lock
les
into
lods
loopne
nop
jae
sahf
adc
jns
clc
xor
in
movsb
or
jae
jae
iret
testl
jae
jae
adc
bound
pop
fsubl
adc
iret
in
xchg
cmp
aas
add
xorb
sahf
cwtl
lcall
fidivrl
out
enter
and
outsb
fnstenv
ss
push
iret
iret
data16
sbbl
dec
loope
pop
and
pusha
sub
mov
insb
outsb
scas
add
push
aaa
aaa
mov
mov
inc
dec
mov
pop
insl
stos
int
and
aaa
aaa
aaa
aaa
push
sbb
sti
pop
dec
xchg
add
sub
aaa
aaa
aaa
inc
add
mov
sbb
outsb
outsb
out
clc
sahf
aaa
dec
mov
cli
xchg
outsb
outsb
adc
insb
and
fidivs
mulb
cmpsl
or
les
out
data16
clc
sub
xchg
xor
iret
out
mulb
inc
popa
into
icebp
rol
insl
mov
mov
mov
loope
inc
mov
mov
sbb
aas
pop
or
jle
iret
out
pusha
jbe
fsubs
scas
mov
mov
lds
jmp
mov
cmp
clc
push
out
lahf
and
call
add
fdiv
mov
call
into
jae,pn
jge
jmp
repnz
cmpsb
sbb
dec
scas
jbe
mov
jmp
mov
inc
adc
mov
dec
push
lods
fadds
addb
mov
std
je
out
mov
data16
cmpb
fcoms
push
and
iret
rcl
aad
out
add
jnp
jl
iret
out
dec
movsl
fwait
mov
cwtl
add
into
in
cmovl
movl
cmp
jb
loop
push
daa
addr16
or
out
mov
push
xor
in
mov
mov
add
jbe
lods
rcrl
fnstcw
cli
test
xlat
adc
sti
pop
add
cmpsl
aaa
in
scas
aaa
aaa
jge
sbb
sub
xchg
adc
xchg
cld
jo
mov
loopne
jbe
and
push
ljmp
push
fdivl
jo
movsl
rcrl
pop
loopne
aam
popf
push
out
idiv
int3
lea
insb
outsb
mov
stos
ss
jae
iret
out
jmp
imul
mov
jmp
dec
xchg
mov
cmpb
in
addr16
daa
cld
dec
adc
test
test
sub
adc
xchg
ret
xchg
add
out
clc
jge
fs
out
gs
dec
loopne
outsl
pop
cli
cmpl
outsb
outsb
scas
push
sbb
sub
push
lcall
jge
jl
mov
sub
dec
jmp
ud1
out
push
pop
nop
cmc
dec
xor
mov
call
jae
in
sub
icebp
mov
mov
cwtl
xor
int
int
arpl
push
pop
dec
fsub
push
scas
rcll
lahf
int
jb
pop
jns
fbstp
xchg
int
sbb
inc
aaa
leave
sub
push
mov
fcomi
sub
insb
jns
xchg
push
hlt
and
insb
loop
sbb
hlt
mov
fdivrl
mov
mov
dec
jle
adc
sti
fdivrl
cmpsb
lods
jge
mov
pop
adc
jle
hlt
scas
xorb
es
out
in
jae
push
sbb
jle
stos
xor
add
jae
adc
and
sbb
int3
mov
adc
inc
notb
fwait
fwait
fwait
fwait
adc
aaa
rcll
std
sahf
add
fistpl
xchg
test
int
sub
mov
int
cwtl
dec
push
pop
mov
ret
pop
jg
out
inc
mov
aaa
lock
add
shl
test
mov
pop
daa
lea
push
mov
subb
add
cmp
mov
fiadds
or
mov
scas
pop
cltd
aas
stc
gs
mov
outsb
outsb
add
fisubs
mov
xchg
adc
insb
iret
out
jmp
inc
out
mov
fidivrl
out
jne
shr
in
or
repz
xor
sbb
stos
lds
int
cwtl
mov
pop
ljmp
adc
push
push
mov
shrb
fiadds
push
push
repnz
adc
aam
jne
test
fdivrs
inc
inc
or
adc
cmp
jle
adc
outsb
mov
sbb
inc
push
and
cld
jbe
scas
cmpsb
push
sbb
imul
daa
bswap
js
aaa
jno
aad
test
cmpsb
gs
mov
mov
in
loop
negl
xchg
into
inc
mov
xchg
iret
enter
insb
outsb
sbb
sub
repnz
addb
lods
ljmp
test
rol
push
adc
fcompl
adc
hlt
adc
clc
fnstcw
insb
sub
add
dec
out
int
out
scas
int
add
lret
mov
iret
out
lahf
aad
and
cmp
test
add
ljmp
mov
push
jmp
iret
out
rclb
mov
test
add
jmp
outsb
aas
fwait
movzbl
pop
jp
sbb
pop
dec
cli
adc
mov
icebp
in
jae
mov
mov
lock
fnstcw
xor
sahf
mov
je
xchg
repnz
movsl
negb
insb
cmp
xor
pop
movsl
jo
fdivl
rolb
outsb
outsb
outsb
xchg
push
xor
cmp
bound
lock
je
outsb
pushf
mov
out
mov
mov
aam
mov
pop
icebp
xchg
xor
cmp
cmpsl
cmp
sti
pusha
lds
sbb
inc
ret
push
les
je
into
lods
outsb
outsb
outsb
outsb
cmp
mov
int3
push
xor
mov
rclb
stos
fdivrl
add
pop
sub
push
mov
outsb
cs
and
add
mov
or
xor
std
cmp
mov
aas
bound
mov
xorl
nop
add
scas
mov
pusha
lock
sbb
in
mov
cmpsb
and
push
mov
aaa
xor
adc
pop
mov
fldt
ret
xlat
sbb
cmpsb
cmp
sti
pop
bound
add
in
loopne
sub
clc
mov
mov
xor
mov
loopne
jae
xor
ss
out
mov
push
sbbb
xchg
aad
jge
lahf
int
mov
xor
sbb
insb
outsb
bound
cld
clc
sbb
mov
ss
and
dec
cli
fldt
dec
icebp
jne
jp
xor
dec
lcall
mov
xchg
aaa
aaa
mov
dec
das
push
dec
and
cld
mov
outsb
out
cli
fsubrl
cmp
nop
shl
fldt
icebp
stc
cli
mov
enter
adc
pop
movsl
imul
notb
xchg
sbb
clc
xchg
call
mov
inc
enter
call
fwait
fwait
fwait
addr16
jbe
push
cmpsb
xchg
jmp
and
sub
and
pop
add
pop
mov
outsb
inc
fwait
fwait
fwait
or
add
mov
lods
inc
mov
bound
push
jb
shr
add
popa
gs
out
ja
sarl
or
in
xor
fdivrl
xorb
insl
sbb
std
aaa
aaa
mov
stos
cli
cs
mov
mov
aaa
cltd
or
fdivrl
sub
mov
rolb
sti
ret
mov
popa
xor
mul
mov
sbb
jae
jae
call
cwtl
jp
hlt
and
ds
insb
push
mov
lret
test
sti
mov
outsb
cli
mov
sti
mov
pop
lahf
out
cmp
mov
sarb
jae
iret
xchg
cmp
xchg
jb
lahf
jle
rcrl
pop
subl
vpcomud
dec
ret
out
push
jb
fcmovb
dec
jle
cld
fbstp
cs
lods
jne
or
pop
cmp
adc
cmc
inc
push
add
xor
pusha
cwtl
adc
or
iret
sbb
inc
pop
jg
ret
push
adc
xchg
hlt
push
out
pop
xchg
ds
dec
xor
jb
and
cli
outsb
inc
lds
movsl
xchg
outsl
js
xlat
fdivr
sbb
in
mov
inc
imul
dec
ss
lea
cmp
mov
lds
dec
out
lahf
int
in
and
or
popf
pop
enter
out
or
mov
lret
pop
lock
adc
fiaddl
imul
mov
adc
sub
or
push
cmpsl
std
mov
pushf
test
jo
fcompl
lock
xchg
adc
sbb
mov
inc
fwait
psraw
clc
repz
in
out
add
mov
pop
aas
ret
iret
pop
sti
scas
jbe
or
insb
outsb
cmp
push
out
inc
dec
push
mov
pop
in
sbb
jb
sbb
push
jmp
xor
adc
push
and
jno
fs
sub
idivb
add
and
cmp
cmpsb
cld
andb
rorl
ss
jnp
mov
sub
cmpsb
test
add
pop
ja
ret
ficoms
sbb
ss
divb
push
pop
gs
dec
mov
out
out
stos
out
inc
orb
int3
insb
aas
fcmovne
clc
mov
daa
lods
cmpsb
pop
cmp
cli
adc
mov
jecxz
out
inc
int3
xor
aaa
cmp
sar
lret
faddl
out
dec
aaa
cld
clc
sub
mov
push
outsb
xchg
push
aaa
aaa
aaa
aaa
push
sarl
jne
int3
divl
mov
mov
jno
push
lock
xor
or
es
hlt
inc
xchg
cmpsb
pop
fldt
cmp
push
loope
insb
fsubs
in
in
iret
int
aas
cmp
fs
inc
xchg
adc
cmc
mov
in
jp
dec
addr16
and
mov
fdivrl
xchg
sbb
test
rcl
loope
jl
repz
adc
inc
or
mov
sahf
mov
pop
shl
mov
xorb
hlt
dec
mov
sbb
inc
fiadds
sub
aas
fwait
fwait
jae
pushf
sub
loop
lods
push
adc
mov
cwtl
jecxz
iret
sub
addr16
pop
and
mov
sbb
sub
dec
pop
shl
mov
fsubl
ljmp
jecxz
xor
dec
mov
and
fmull
or
add
int3
in
filds
out
stos
into
mov
dec
outsb
outsb
outsb
pop
stos
jl
insb
inc
adc
mov
outsb
cli
out
lret
cld
or
add
jmp
out
mov
arpl
and
xchg
push
fcoml
leave
or
cmc
mov
push
jo
push
idivl
aaa
add
test
cwtl
dec
loop
lds
push
or
insb
sub
lods
pop
inc
hlt
push
mov
pop
in
ret
sahf
int
dec
and
sbb
mov
or
adc
mov
and
xchg
jno
aas
fucomi
mov
lods
add
mov
test
shrl
inc
mov
movsl
sbb
hlt
mov
jns
lock
fisubs
ret
iret
idiv
and
insb
stc
or
sbb
add
addr16
jae
sub
inc
push
push
orl
mov
movsl
out
aaa
and
mov
jle
aaa
mov
cmp
mov
clc
sarb
rcrb
xor
mov
aaa
ja
adc
outsb
fidivl
js
testl
sub
loop
adc
enter
out
fbstp
sar
lahf
and
fcmovne
int
int
mov
inc
test
xchg
xor
lcall
sarb
int
cmp
out
dec
cmp
in
dec
dec
mov
dec
pop
arpl
pop
fistps
mov
insb
and
xor
insb
pop
aas
sbb
ficoml
mov
jle
xorl
jmp
jae
jle
cwtl
inc
jbe
mov
orb
inc
iret
int
addr16
add
sahf
jns
aas
and
mov
mov
sarb
jg
nop
and
rcll
or
pop
movsl
shll
ds
jbe
adc
mov
jle
mov
dec
ud1
xchg
xorb
mov
mov
push
loope
sbb
movsb
adc
inc
je
xor
ja
insb
sbb
ljmp
inc
dec
xchg
xor
push
popf
bound
jae
push
out
mov
lock
sahf
imul
xor
sbb
mov
int
imul
xchg
mov
sti
sarl
aaa
xchg
lcall
jl
fiadds
faddp
push
jmp
fistps
sub
outsl
inc
shlb
sub
mov
cmp
iret
in
xchg
icebp
cmp
jl
and
pop
aad
mov
jp
push
out
lds
scas
ja
fildl
aaa
aaa
aaa
aaa
fs
sub
into
fwait
mov
outsl
fwait
fwait
mov
sub
mov
fwait
hlt
js
sub
mov
push
or
cmp
aaa
aas
jp
xchg
push
cmp
loop
outsb
clc
inc
inc
cmp
add
repz
nop
mov
js
or
es
cmp
xlat
mov
add
jecxz
dec
xchg
setg
jae
mov
jae
mov
cmp
cltd
push
xchg
xor
inc
sbbl
mov
mov
mov
dec
and
aam
dec
sub
clc
inc
mov
dec
push
jle
das
sbb
mov
test
outsb
js,pn
xlat
ror
ja
std
and
aad
bound
fwait
mov
push
imul
push
add
clc
leave
iret
int
aaa
data16
xacquire
nop
jge
aaa
aaa
mov
es
out
lea
mov
mov
jge
xchg
cwtl
and
mov
cmpsl
pop
push
jbe
fnstenv
mov
jecxz
pop
pop
pop
jns
push
push
dec
out
out
pop
mov
leave
push
xchg
fdivr
outsb
mov
jbe
jbe
cmp
js
jnp
pop
jae
daa
jmp
push
inc
sub
movsb
lcall
fsubrs
int3
mov
or
or
mov
iret
mulb
xor
imul
mov
movsb
jle
jl
lret
shr
or
iret
int
jae
jae
rclb
pop
enter
cmpsb
xchg
xor
jae
xlat
mov
loop
pop
icebp
cmp
mov
hlt
push
mov
aad
mov
jl
adc
cmp
pop
rorb
negb
mov
and
cmp
mov
mov
jl
sbb
insb
call
idivb
fs
test
out
outsl
dec
mov
jbe
lret
mov
push
pop
cmc
pop
push
loope
and
pop
dec
lods
jg
out
mov
mov
fdivr
pop
jp
lods
stc
lcall
jae
rcrb
mov
mov
out
jecxz
ss
mov
bound
push
sbbl
gs
cmp
or
movsl
in
mov
jg
shl
dec
sub
movd
test
xchg
stc
aas
mov
mov
sbb
idivl
cmp
lea
ret
test
mov
jle
pop
sbb
pop
inc
sbb
add
icebp
cs
pop
jnp
cmp
mov
outsb
outsb
outsb
outsb
cli
popa
and
cmp
clc
insb
sbb
rcrl
loop
xchg
mov
data16
in
movsl
mov
jnp
jns
ret
sahf
popa
xchg
mov
ds
fwait
fwait
fwait
je
dec
sti
push
mov
sbb
fstpt
lahf
shrl
cld
lods
fcmovnb
iret
divb
fsubrp
jne
adc
xchg
outsb
outsb
js
inc
repnz
mov
jp
mov
outsb
outsb
outsb
dec
cmovne
jno
roll
cli
insb
js
les
addr16
fcomps
scas
aaa
in
push
fisubl
mov
jae
jae
lock
cld
and
outsb
mov
mov
es
lcall
jno
jl
outsb
outsb
push
clc
pop
nop
or
aam
jae
sti
fldenv
imul
adc
jo
jnp
xchg
cmc
shll
sti
out
ds
std
mov
in
pop
mov
in
sahf
das
jle
xor
sarl
arpl
aas
jbe
mov
xor
pop
adc
pop
mov
cmp
pop
imul
loop
lock
shl
pushf
gs
ds
jae
mov
dec
pusha
pop
or
pusha
lods
jle
fwait
in
neg
fcompl
in
out
cmp
or
iret
stos
iret
int
push
sub
pop
sbb
dec
xor
test
pop
mov
out
mov
xchg
outsb
xor
xchg
mov
or
lds
clc
mov
shlb
hlt
jl
mov
xlat
dec
sti
or
sbb
mov
mov
mov
call
jl
fcmovne
out
iret
dec
push
adc
aas
mov
mov
pop
int
push
aas
fwait
adc
repz
inc
out
adc
fiaddl
jae
in
fdivrs
jo
in
adc
dec
out
mov
add
jns
mov
cli
out
sub
push
lea
in
cmp
cmp
sahf
fwait
fwait
aaa
xlat
dec
hlt
push
loope
pop
rclb
add
popf
dec
mov
sbb
int
in
xor
sbb
rcrb
jge
lahf
int
push
outsb
test
faddp
cmpsl
stos
lret
out
add
cmp
ret
pop
adc
iret
sub
xor
js
int3
insb
imul
dec
enter
mov
add
fdivl
mov
repz
mov
sub
addr16
or
push
cmp
mov
call
cs
test
xor
outsb
ds
mov
cmp
push
jg
inc
jmp
movsb
inc
xor
addb
cmpsb
in
pop
pop
out
out
mov
and
out
out
jb,pt
mov
inc
adc
das
into
xor
roll
adc
adc
loop
jne
ret
jo
cld
fs
sbb
ss
ljmp
and
mov
xchg
mov
aas
dec
xor
or
adc
outsb
outsb
outsb
lds
xchg
hlt
dec
push
mov
cmp
lretw
cli
in
xchg
in
pop
aas
fldt
in
aam
and
clc
mov
sub
add
loope
shll
out
sub
jns
mov
and
lahf
mov
xor
xchg
leave
mov
scas
inc
je
outsb
outsb
fbld
je
mov
sub
mov
sub
pop
pop
xchg
jb
lods
inc
jecxz
loop
dec
out
xor
cmp
insb
mov
push
out
insl
xchg
sbb
mov
fcmove
es
sbb
fwait
out
inc
sub
lcall
adc
fisubs
dec
pop
ficompl
scas
popf
fstl
sarl
push
aas
je
sub
fadds
pop
clc
test
das
int
pop
jl
in
cwtl
or
cmp
dec
adc
js
push
cmp
inc
imul
cld
dec
xlat
mov
fwait
insl
popf
xor
pop
jo
lock
enter
and
fsubrl
xchg
mov
fwait
dec
jb
and
outsb
outsb
out
push
and
cld
dec
sub
cmp
cld
insb
outsb
push
imul
jle
aaa
jmp
sti
pusha
adc
insl
scas
xchg
mov
cld
ds
xor
hlt
loopne
out
and
jae
xor
jg
jnp
andb
jae
jae
jo
stc
push
xor
mov
mov
mov
test
repnz
pop
mov
fwait
ds
aaa
enter
out
sub
les
cmp
pusha
mov
jno
mov
fdivs
es
test
outsl
ljmp
add
clc
pop
es
jp
popa
or
out
imul
outsb
dec
popa
imulb
test
test
stos
leave
js
mov
pop
add
push
xchg
lock
xchg
adc
iret
bound
div
insl
mov
std
and
popa
jnp
les
out
mov
clc
aas
jne
stos
test
mov
push
xor
call
mov
out
negb
shrb
pop
dec
mov
filds
pushf
adc
in
orb
lea
inc
lea
loop
mov
scas
add
mov
mov
call
mov
sbb
pop
xchg
mov
pop
add
mov
or
add
test
loopne
bound
mov
mov
lret
arpl
pop
ss
jle
fst
inc
daa
imul
movsl
jno
inc
out
out
lcall
daa
fnstenv
jmp
repnz
jbe
xchg
sub
push
pop
inc
iret
mul
jmp
out
xchg
mov
iret
or
sbb
psubsb
xor
jae
orl
ss
mov
sbb
mov
jl
out
jp
test
sub
cwtl
xor
iret
out
std
fsubs
out
jnp
in
in
sbb
fucomi
movsb
dec
into
jmp
add
sarb
mov
imull
xchg
aam
in
mov
int3
hlt
outsb
outsb
outsb
outsb
out
mov
daa
lahf
out
imul
fmuls
mov
int
mov
daa
ds
inc
ds
adc
lods
iret
and
add
sbb
xchg
mov
das
dec
fistps
scas
ds
xor
gs
xchg
push
movl
cltd
les
test
les
push
cmp
fbstp
fnstcw
jmp
sbb
insl
mov
dec
inc
ljmp
fimuls
popf
push
dec
add
pop
pusha
mov
adc
add
in
aad
mov
pushf
jne
bnd
jge
ds
stos
push
fwait
push
mov
out
mov
pusha
bound
sti
pop
xor
sub
sbb
mov
adc
lahf
mov
pop
mov
xchg
sti
dec
pusha
jno
and
int
cwtl
pop
xchg
cld
pop
int
mov
addr16
push
pushf
repz
add
add
clc
nop
ss
jg
imul
outsb
outsb
outsb
loop
mov
rol
sbb
das
nop
cli
outsb
outsb
outsb
outsb
pop
push
and
jmp
ljmp
dec
sub
sbb
cli
fnstcw
and
fisubl
jne
aam
insl
adc
loopne
outsb
outsb
push
adc
adc
mov
cmp
push
mov
out
sbb
fs
into
bound
ljmp
push
rclb
and
cmp
sbb
aad
and
xor
outsb
outsb
clc
ss
int3
xchg
jl
shl
test
insl
jbe
outsb
outsb
outsb
lock
movsl
fnstsw
lahf
fdivrs
clc
insb
xchg
imul
aas
lock
enter
adc
ja
insb
es
cmp
inc
cmp
pusha
.byte
or
add
push
push
je
imul
repz
enter
fcomp
jnp
iret
rclb
push
dec
bound
arpl
dec
lcall
inc
add
xor
sub
pushf
pushf
and
sbb
pushf
pushf
pushf
pushf
adc
or
inc
sahf
pushf
pushf
add
cld
adc
fmull
clc
hlt
das
pusha
pop
cmp
jns
addps
lock
fisttpl
cmp
rcpps
xor
or
testb
incl
add
mov
and
mov
ss
pop
ret
addr16
xchg
xchg
fneni(8087
paddusb
aam
and
enter
add
jg
cmp
jne
push
add
or
pushw
sub
xor
mov
jmp
mov
mov
in
aaa
xlat
pop
mov
add
mov
push
roll
push
and
mov
ja
pop
or
inc
cmp
jne
mov
pushf
sub
in
mov
cpuid
mov
or
mulb
mov
add
push
push
sbb
mov
mov
push
cmpsb
jns
test
incb
jmp
mov
lahf
fstp
insb
roll
add
or
mov
andl
pop
add
push
mov
pop
pop
pop
mov
mov
adc
adc
jl
dec
add
out
add
popw
jbe
neg
push
push
outsl
mov
mov
jbe
push
mov
push
push
repz
mov
lret
add
sbb
enter
jp
nop
inc
inc
or
mov
pop
or
add
push
add
cmp
jne
cmp
das
inc
pop
cmp
jne
mov
mov
xor
sahf
pop
sbb
jo
pop
pop
pop
out
addw
fxtract
or
aam
push
mov
or
mov
bound
fildl
pop
sub
add
fbstp
push
and
xor
add
movhps
pop
push
cmpl
push
popa
daa
testb
jne
push
aaa
pop
adc
jmp
mov
add
pop
mov
add
lock
icebp
or
sti
mov
enter
lea
push
insb
ret
sub
sbb
jmp
and
push
add
cmp
test
add
insb
adc
addl
nop
xchg
fldenv
mov
pop
mov
dec
adc
jbe
push
mov
push
add
push
push
add
clc
xchg
test
je
xor
in
loope
inc
xlat
pusha
aam
orb
dec
sbbb
bound
sub
dec
dec
negb
jge
push
lahf
push
pop
icebp
dec
xchg
inc
xchg
pushf
sbb
sbb
in
mov
call
xchg
cmp
sub
repz
mov
xchg
sbb
add
sub
fcoml
xchg
cmp
imul
aad
pop
sbbb
jb
lcall
jo
ja
and
jae
or
inc
push
insb
cwtl
jbe
or
es
test
aas
push
cmp
add
mov
lock
jg
push
jne
push
pop
xchg
out
bound
je
jno
inc
sub
or
shll
fucomip
out
imul
mov
xchg
test
add
push
dec
mov
cmp
loop
mov
shr
stos
adc
cmp
xor
push
add
fdivr
xchg
cmp
or
imul
pop
sbb
lahf
cmp
push
push
es
js
rcll
in
out
setp
andl
pop
mov
js
ljmp
sbb
enter
inc
pop
pop
pop
roll
or
xchg
push
aaa
add
outsb
inc
add
test
insl
cmp
xor
lahf
div
inc
push
mov
rorb
inc
cmp
jg
mov
xor
mov
add
xchg
pop
add
lea
pand
inc
mov
fdivrs
das
jne
add
jno
lea
testl
fstl
daa
push
add
dec
in
out
or
or
mov
cli
orb
cmp
add
out
call
sbb
sarb
inc
pop
pushf
fnstenv
or
pushf
pop
ficomps
or
mov
sub
fwait
push
add
repnz
push
call
xor
jmp
or
adc
shrb
rorb
adc
push
or
test
add
xor
push
pop
pushl
jmp
stc
cmp
jne
pop
lock
out
jg
dec
jl
in
rorb
inc
lock
xchg
imul
adc
mov
lea
gs
add
and
outsl
mov
shrb
push
sub
test
jp
cs
les
pop
pusha
out
in
inc
movsb
out
ret
ljmp
mov
jmp
sub
push
mov
push
dec
push
push
pushl
mov
push
iret
push
add
jle
and
add
sub
adc
push
out
cmp
clc
jge
cmp
cld
addb
in
adc
outsb
out
push
loop
cmp
movl
mov
clc
jge
adc
mov
mov
ret
bound
pop
fs
orl
dec
add
and
or
ret
pop
pop
scas
test
pusha
mov
pop
out
call
sbb
push
inc
push
xor
mov
pusha
scas
or
mov
lea
pop
or
sbb
inc
movhps
mov
adc
or
and
mov
add
mov
xchg
jmp
xchg
popf
sbb
add
mov
mov
cmp
lahf
adc
add
cmp
into
jg
fdivs
test
jns
ret
cli
add
aas
nop
hlt
jmp
sub
sbb
mov
cmp
xchg
hlt
mov
adc
and
sbb
sbb
int3
push
and
adc
add
jb
sbb
push
or
sbb
add
adc
jnp
cmpsl
cld
enter
mov
pop
xchg
sub
lea
mov
in
testl
add
dec
adc
push
loope
pop
or
pop
dec
cs
pcmpeqd
add
mov
sub
add
lcall
ljmp
mov
jle
xor
or
push
or
insb
rolb
pushf
fwait
or
ret
inc
push
push
push
add
xor
cmp
pop
divl
add
and
xor
test
in
lock
add
sub
jl
or
xor
jo
xchg
arpl
mov
faddp
sahf
imulb
ja
fdivs
testb
and
fsubs
lea
in
lock
jne
sub
inc
adc
mov
xor
pop
cmpsl
hlt
pop
lea
das
or
jecxz
lods
xchg
jnp
in
js
mov
loope
sarb
lea
sub
xor
jg
mov
push
movl
dec
inc
push
loope
mov
xchg
or
adc
xor
inc
add
mov
xchg
cmp
mov
frstor
jp
mov
fadd
add
shlb
lea
rolb
mov
aam
pop
mov
ret
jo
or
or
mov
fistpl
lret
mov
add
or
movsb
ficompl
test
jo
clc
add
add
mov
lret
and
testb
and
xchg
cmovge
mov
inc
lods
or
or
cmp
or
xchg
rorl
inc
mov
mov
testb
outsb
cmpl
repnz
ss
or
pop
es
sub
sub
sbb
mov
add
push
test
cld
jo
daa
jl
andps
cs
cmp
or
or
inc
add
or
add
insb
mov
jae
or
jne
cmpl
jbe
subl
add
xor
mov
add
inc
add
lea
pop
xor
push
sbb
add
push
inc
mov
sbb
pop
ret
popa
fdivrs
jecxz
cwtl
or
cmp
pop
sbbb
dec
xor
or
out
add
xchg
mov
or
push
popf
jle
sub
inc
and
and
or
mov
push
cmp
pop
sub
dec
jbe
pop
je
cwtl
jbe
in
orl
addb
cmp
jmp
adc
sub
pop
dec
mov
or
pxor
cmp
sbb
addr16
mov
clc
cltd
or
repnz
mov
sub
mov
jmp
imulb
push
cli
mov
pusha
aaa
pop
or
cmpb
xchg
push
cmovle
imul
pop
lahf
pusha
xchg
dec
orb
jne
stos
cmp
aad
xchg
in
push
mov
loope
or
or
pop
clc
outsb
jle
inc
popa
repnz
lods
and
add
and
cmp
add
iret
jo
jg
pop
push
clc
stos
mov
xor
in
push
sub
sbb
lock
jne
push
jo
scas
aaa
jmp
xchg
sbb
mov
insb
mov
fidivl
sub
pop
xor
and
pop
cmp
and
sarl
sbb
punpckldq
cmp
add
out
lds
sbb
fcompl
les
pop
mov
mov
cld
pop
mov
lock
sub
push
loop
cmc
jne
out
or
in
insb
adc
add
loope
pop
clc
inc
sub
adc
insl
test
jne
cltd
or
ret
aaa
or
fwait
push
sub
push
or
cmp
ret
bound
test
fucomi
jge
lcall
cltd
fdivrs
sub
lock
jo
and
lods
add
cmp
das
mov
clc
fldl
xor
loop
add
loopne
fbld
sbb
test
je
addr16
add
cmp
cmp
or
jmp
push
repnz
fmull
cmpl
adc
or
or
sbb
into
scas
push
push
sbb
cmp
jo
lods
mov
mov
cmp
loope
xor
lods
lcall
mov
xchg
pop
mov
or
scas
nop
out
sub
out
scas
call
push
sub
push
test
push
add
sub
test
pop
mov
add
adc
js
or
push
mov
adc
std
int
in
sub
or
inc
stc
mov
sub
jno
cmp
jg
out
mov
add
daa
push
add
arpl
sub
imulb
mov
fdivs
sbb
out
das
jle
and
dec
nop
push
cmp
adc
add
std
push
movsl
add
sbb
out
test
ret
sti
dec
add
pop
mov
cmp
xchg
xchg
clc
sub
int
mov
pop
push
adc
mov
pusha
cmp
data16
sbb
or
pop
fs
jo
jl
adc
adc
sub
jp
mov
ret
adc
insl
mov
fistl
or
or
sbbl
add
cld
je
fmul
xchg
push
sbb
leave
sbbl
xchg
test
jle
nop
call
test
inc
add
ror
inc
jbe
jmp
stos
scas
out
mov
cmpsl
adc
jno
or
ja
sbb
ret
mov
xor
mov
sti
mov
dec
xor
or
add
push
jmp
xor
add
dec
sarl
loope
fimuls
sub
jecxz
jae
mov
cmp
sbb
jne
dec
cmp
add
jo
mov
xchg
jb
ret
mov
sbb
negl
loopne
es
or
push
push
push
jne
mov
in
mov
xor
sub
sbb
mov
test
data16
rcll
jae
sbb
pop
inc
mov
lret
ja
je
sar
js
rep
mov
and
rep
jnp
std
int
inc
je
cld
lea
xor
std
xor
lcall
ds
inc
push
mov
sub
je
dec
sub
jae
stos
or
rorl
jmp
enter
add
ljmp
add
add
sbb
mov
test
push
mov
sbb
hlt
pop
int3
imulb
shll
das
or
and
ljmpw
jne
call
mov
test
adc
push
fisttps
cmp
or
imul
mov
fistpl
sub
fstpt
push
inc
clc
dec
jae
jge
je
mov
or
je
or
je
and
cmpsb
out
js
pop
pop
je
xor
and
testl
or
std
or
cmp
ja
lea
add
add
push
mov
or
std
mov
or
push
neg
jle
js
pop
sub
jmp
inc
inc
jmp
mov
sbb
push
je
andb
xchg
and
jbe
push
adc
or
stos
cmc
insl
xor
jne
cwtl
pop
xor
mov
mov
jg
loope
repz
sub
mov
sbb
dec
je
cmp
add
lea
fnstsw
adc
fldt
call
pcmpeqb
push
pushf
das
jge
add
popa
scas
and
xor
xchg
jge
mov
xchg
push
cmpsb
movsb
xor
sbb
add
loope
jmp
fstp
fldt
fldz
mov
cmpb
cmp
xchg
dec
mov
cli
or
xchg
dec
ds
pushf
or
ret
mov
adc
xchg
jl
xchg
cwtl
push
and
sbb
lret
pop
ds
add
mov
mov
pop
in
es
test
out
sub
sub
xor
leave
sbb
mov
aas
incl
cmp
fidivrs
call
mov
bound
int
stc
aaa
cmpb
xlat
fadds
outsb
xor
xchg
ljmp
push
or
push
push
int3
into
sbb
rorl
mov
push
pop
test
enter
jmp
outsl
movsl
push
inc
cmp
and
daa
lret
into
pop
inc
test
xchg
clc
js
aas
sbbl
pushl
xlat
pop
mov
addr16
leave
repnz
bound
and
cld
gs
sahf
mov
sub
lods
lds
iret
decl
js
inc
mov
stos
mov
cmp
or
incl
xchg
test
stos
pop
out
sub
imul
divl
jl
xor
cmp
call
icebp
mov
inc
mov
sti
jmp
stos
push
inc
mov
push
sbb
sarb
repnz
ljmp
das
test
nop
fildl
daa
movsb
lahf
nop
inc
pop
stos
clc
scas
adc
inc
pop
pushf
mov
pop
pushf
decl
repz
loope
jp
iret
inc
bound
ds
push
cmpsb
scas
mov
jmp
addl
cmp
xor
in
cmp
sahf
xchg
pop
fcomip
jmp
push
movsl
mov
popa
mov
and
addr16
repz
mov
fldl
mov
push
pusha
les
outsb
bound
xor
and
or
rcr
jg
je
clc
pop
jne
push
pop
and
dec
es
incb
add
outsl
ret
hlt
movzwl
lea
push
int
mov
push
pop
jl
pop
jbe
das
movl
insl
pop
hlt
push
data16
add
test
sub
lahf
out
mov
outsl
push
jmp
pop
aas
or
mov
and
inc
push
push
inc
push
inc
pop
inc
outsl
jb
popa
outsb
fs
lcall
insb
jo
imul
push
dec
popa
jae
push
popa
insb
jne
fninit
mov
sub
mov
xor
mov
inc
push
lock
pop
rorb
pusha
mov
sbb
pop
aaa
pushf
jge
mull
cmp
sbb
add
push
push
cs
add
mov
pop
mov
or
push
cld
ret
xchg
aam
negb
clc
decl
push
shr
dec
rep
pop
pop
stos
mov
mov
sub
movsb
add
pop
fadd
add
sbb
in
cmp
or
je
pop
mov
add
jae
dec
push
mov
mov
outsl
pop
lock
sbb
jne
jne
lods
movb
decb
mov
shl
clc
and
scas
lret
lahf
test
mov
andb
cmpsl
mov
pop
push
xchg
jmp
cmpb
pop
idivl
or
movl
or
not
ret
pop
data16
mov
enter
cld
pop
out
add
shlb
inc
cmp
repz
mov
scas
sbb
lahf
pop
push
push
xor
je
adcw
insb
add
loope
mov
pop
adc
pop
jmp
pop
xor
lock
cmpb
jl
call
xor
cmp
mov
sbb
add
xor
mov
mov
pop
pop
pop
rorl
bound
push
ret
ret
in
mov
push
mov
pop
imul
push
clc
push
sbb
ret
in
push
enter
and
cli
jecxz
call
cmp
adc
push
in
push
call
and
idiv
pop
push
pusha
push
push
cmp
add
out
or
add
out
rol
add
pop
push
push
bound
mov
pop
mov
cmpb
je
or
jne
movsbl
inc
inc
jmp
add
fsub
add
sbb
cmpsb
and
addr16
xchg
push
adc
loop
mov
fiaddl
cmp
gs
pop
icebp
add
xor
testl
sbb
mov
fiadds
push
sbb
cld
leave
jo
xor
adc
test
dec
call
into
adc
bound
inc
cmp
cmp
cli
out
push
je
dec
xchg
dec
sbb
sbb
jbe
pop
ja
push
push
push
into
or
repz
stos
jno
and
outsb
enter
adc
lods
rorb
push
jns
or
and
je
orl
push
jo
fsubs
cmp
sub
sbb
push
push
mov
jne
test
pushl
mov
xor
das
ds
add
inc
add
push
push
sar
jecxz
notl
pop
popf
mov
dec
adc
ret
or
fdivrs
ret
inc
push
pop
je
mov
inc
add
xor
shlb
and
or
add
shll
fimuls
hlt
clc
jg
mov
pop
push
push
push
push
push
addl
rolb
fldenv
es
sarl
sbb
or
pusha
add
aas
inc
jo
push
je
cmp
mov
ret
aad
js
into
adc
adc
fdivs
inc
push
cwtl
lahf
jae
mov
mov
clc
push
insl
sub
loop
xor
rcll
or
outsl
aaa
movsl
add
loop
add
sub
push
out
pop
cmp
push
sub
and
cmp
pusha
add
call
xor
push
cmp
push
stc
adc
xchg
cs
adc
jmp
sub
ljmp
cmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
push
sbb
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xor
arpl
push
or
pop
ret
push
roll
dec
test
push
sbb
je
push
es
jmp
jp
pop
adc
lahf
mov
mov
je
cmc
outsb
mov
mov
stc
out
push
push
stos
sti
into
inc
sti
and
or
mov
mov
mov
or
ljmp
lret
movsb
fmul
xor
int3
movsb
jg
mov
mov
adc
sbbb
enter
push
fs
std
outsl
repnz
cmp
jne
and
push
mov
bound
jl
pop
dec
mov
mov
adc
mov
xor
in
cmp
popl
call
xor
addb
test
mov
das
movsl
insb
pop
sbb
dec
pop
push
fistpll
sbb
call
stc
mov
iret
mov
inc
mov
fistpll
repz
and
cmp
push
stos
adc
jo
cmp
sbb
pminsw
out
cmp
rol
add
ret
pop
fcomip
cs
je
add
push
dec
filds
ss
dec
jne
pop
pop
imul
add
or
inc
pop
movsl
in
lret
pop
mov
sarb
das
test
mov
add
add
imul
push
es
mov
sarb
xchg
jl
xor
mov
push
push
jbe
mov
out
sub
testb
loope
rolb
sbb
adc
ja
add
push
cmc
and
movsl
pop
leave
call
mov
notl
xorl
cmp
or
xor
or
loope
push
push
pop
pushl
jle
jl
add
cmp
ret
mov
and
inc
push
adc
cmpsb
fwait
jge
cmp
pop
add
addr16
mov
jnp
insb
push
cmpl
xchg
dec
xlat
sub
data16
incl
sbb
inc
sbb
mov
test
sub
nop
daa
jecxz
pop
sti
push
jne
ds
fiaddl
mov
xor
jbe
mov
js
mov
xor
sbb
scas
push
jne
cmp
je
push
cmp
stc
insb
and
adc
add
loopne
sbb
pop
shll
adc
add
sti
shll
sub
outsl
loopne
adc
inc
push
pushf
ret
nop
cmpsb
mov
jmp
in
mov
dec
clc
dec
jl
lock
clc
ja
or
mov
popa
xchg
inc
jle
sbb
add
or
sahf
mov
fisubl
add
inc
jg
or
sub
ret
in
sub
rcrl
jmp
jbe
xchg
lods
repnz
or
icebp
call
inc
out
jle
push
add
and
push
aaa
pop
icebp
lea
add
inc
push
sub
push
cld
xor
jne
xorb
push
pop
cltd
mov
mov
das
push
sub
js
mov
ljmp
js
cli
pop
cli
sub
in
scas
push
push
push
or
adc
rcrb
mov
add
dec
icebp
outsl
pop
fistl
or
outsb
pusha
test
add
sub
mov
sub
pushl
jl
jnp
mov
and
push
jge
add
sbb
sub
sbb
jge
cmp
adc
push
mov
mov
call
leave
push
push
cmp
je
cmp
orb
je
add
sti
in
jmp
inc
add
jmp
cmp
cmp
or
or
push
push
popf
mov
jmp
or
add
fidivl
mov
shl
mov
sti
test
rcrl
rcrl
cmpsl
add
mov
push
fmull
cld
ret
xor
sbb
aas
je
loop
jle
mov
push
cld
add
cmp
cld
shll
mov
mov
adc
cmp
xchg
sar
xchg
ss
xor
inc
xchg
adc
or
jecxz
cmp
cmp
jmp
push
rorl
mov
cmp
xor
dec
jne
hlt
addr16
adc
xchg
cmp
mov
aaa
add
dec
jmp
and
sbb
push
dec
or
into
repz
jne
jo
cmp
and
insb
add
fsubp
pop
insb
mov
lea
jmp
push
pop
add
dec
cmpb
scas
cmp
shlb
je
push
scas
or
inc
ss
adc
movsl
dec
cmpsl
aam
xchg
inc
pop
mov
dec
sub
std
add
xor
pop
sub
sar
lret
jl
cmp
jge
sub
mov
jg
add
lahf
jecxz
loopne
adcl
mov
jmp
and
or
push
ret
ret
rorl
rorb
jle
push
lcall
push
jl
sbb
or
loopne
mov
pusha
pop
js,pn
mov
cld
hlt
jmp
jl
aaa
adcl
mov
js
icebp
jl
or
jne
icebp
pop
lahf
push
fucomip
movsb
mov
dec
sub
jp
jge
xchg
and
jecxz
imul
push
mov
fsubl
push
lea
jl
push
test
and
inc
mov
insb
andb
cmp
mov
or
out
cmpsl
pop
call
sub
cmp
push
scas
sbb
incl
sub
cmp
and
cmp
je
cmp
je
cmp
je
dec
mov
pop
test
push
mov
das
inc
test
int3
jg
mov
scas
ror
mov
jmp
adc
mov
jmp
mov
sti
stos
or
notb
aad
push
or
add
mull
mov
pop
jmp
cmp
aam
and
sub
lods
bnd
sbb
cmp
push
shl
das
test
jmp
jecxz
pop
add
pop
adc
daa
incb
and
mov
jne
outsl
movsb
mov
into
adc
pop
pop
and
and
aas
xor
daa
mov
test
fidivs
push
cmp
mov
or
push
fdivr
dec
pop
faddl
jnp
sub
sub
mov
les
push
clc
mov
push
adc
sti
xor
inc
adc
adc
pop
daa
loope
pop
imul
push
ret
cmp
sub
push
out
dec
cmp
in
or
sbb
jae
sub
mov
pop
jno
xchg
lea
mov
adc
or
add
fiadds
outsb
add
sbb
sub
out
movsb
int
or
test
pusha
outsl
pop
ret
inc
mov
or
push
cmp
cmpl
cmc
dec
push
ss
test
push
mov
aam
call
sub
jge
add
and
cmpb
inc
ud2
xor
std
js
pop
jne
sbb
xor
inc
inc
or
xor
inc
das
cmc
out
or
sub
cld
lea
shr
loope
in
pop
cmp
in
mov
sub
mov
cmpl
inc
jbe
int3
mov
xor
stos
fwait
dec
ja
mov
je
push
aas
pushf
std
in
mov
push
add
ret
pop
movb
pop
mov
push
push
mov
jo
jg
jb
roll
and
dec
testb
mov
add
outsl
hlt
ljmp
jb
gs
xor
cs
insb
pop
inc
gs
outsl
outsb
addr16
popa
je
dec
push
out
mull
gs
daa
scas
fdivr
movsb
sti
dec
mov
int
movb
xor
aad
into
push
pushf
inc
add
mov
je
cmp
and
mov
xorl
mov
pop
inc
std
lock
or
or
call
sbb
inc
sti
cmp
push
jmp
fdivrs
outsb
insl
push
add
push
repnz
mov
inc
jne
imul
push
lods
repz
out
mov
and
mov
hlt
inc
test
repz
or
push
jmp
jnp
xchg
pop
repnz
icebp
add
mov
add
dec
in
in
mov
jbe
je
inc
cmp
jne
adc
add
sub
push
in
rolb
push
push
sbb
ss
sub
movsb
jne
or
pop
lret
das
ja
ss
sub
ss
jae
clc
iret
popa
pop
iret
push
outsl
data16
popa
jb
stos
fnstenv
cmpsl
lret
insb
gs
aaa
inc
xlat
xor
filds
movsb
add
test
stos
and
sub
aaa
pop
inc
mov
cmp
add
or
and
pop
push
push
loopne
pop
fidivl
jae
adc
dec
adc
mov
and
shll
inc
jbe
xor
enter
jne
cmp
xlat
dec
arpl
jmp
repz
jge
dec
and
cmp
xchg
jno
fdivrl
fmul
scas
in
sub
mov
call
dec
add
adc
lods
xor
adc
jge
dec
mov
inc
test
jle
sub
adc
mov
cmpsb
lahf
ret
mov
jae
adc
push
sub
or
addr16
imul
test
push
lock
mov
dec
push
lea
push
push
js
in
and
roll
pop
sbb
pushf
stos
jbe
test
mov
sub
sbb
inc
incl
aad
jne
mov
dec
fiadds
adc
add
or
cmp
inc
scas
clc
push
subl
add
add
movb
mov
aaa
xor
adc
and
popf
dec
subb
imull
shll
dec
mov
adc
add
pop
in
add
mov
cmp
add
loopne
mov
adc
test
ds
xor
dec
jbe
mov
nop
jbe
or
cmp
or
xor
and
fwait
dec
js
je
hlt
jl
dec
inc
aaa
fdivrl
mov
loopne
out
cmpl
or
cwtl
loop
imull
ljmp
or
mov
pop
push
aaa
in
sub
jmp
xor
test
jne
fs
sub
cmpb
cwtl
mov
or
addb
mov
sbb
and
ret
mov
mov
mov
aaa
fisubrs
divl
aam
pusha
mov
pop
xchg
cmp
or
mov
dec
repnz
arpl
pop
add
push
jle
or
xchg
fwait
rcrb
cmp
dec
push
in
inc
insb
mov
adc
sarb
cmp
cmp
enter
cmp
cmp
cmp
lods
test
mov
pushf
cwtl
xchg
nop
cmp
cmp
mov
cmp
in
add
add
dec
inc
sahf
cld
adc
hlt
lock
pop
insl
dec
jo
gs
push
je
jo
dec
dec
mov
icebp
repnz
dec
dec
dec
hlt
cmc
div
dec
dec
dec
dec
clc
stc
cli
sti
dec
dec
dec
dec
cld
std
decl
dec
dec
loopne
loop
dec
dec
dec
dec
in
out
dec
dec
dec
dec
call
dec
dec
dec
in
in
out
out
dec
dec
dec
dec
rcl
rcl
dec
dec
dec
dec
aam
xlat
dec
dec
dec
dec
fcomp
fcmovu
dec
dec
dec
dec
dec
dec
dec
dec
rol
ret
dec
dec
dec
dec
dec
dec
dec
dec
enter
dec
dec
dec
dec
int3
int
iret
dec
dec
dec
dec
mov
mov
dec
dec
dec
dec
mov
mov
dec
dec
dec
dec
mov
dec
dec
dec
mov
pop
je
mov
nop
sbb
je
dec
je
pop
or
daa
sahf
push
jb
hlt
or
or
inc
lahf
inc
jb
push
arpl
or
or
arpl
mov
gs
imul
daa
cmpsl
nop
iret
adc
jl
inc
sarl
testb
jo
nop
push
dec
mov
ljmp
stc
mov
or
dec
jne
dec
dec
gs
outsl
jb
shrl
outsl
sti
jge
popa
aas
or
outsb
mov
sub
scas
add
bound
je
popa
insb
xchg
daa
pop
lods
scas
pop
scas
pop
mov
cmpsb
adc
mov
mov
or
outsb
adc
call
out
ds
jo
or
imul
enter
outsl
nop
insb
insb
mov
mov
popa
outsb
les
sub
jbe
cmp
lock
jb
insb
outsl
ja
push
and
aam
add
dec
lods
cmp
push
scas
js
push
mov
jbe
imul
mov
fcmovnb
ret
jle
sub
jo
inc
dec
sub
inc
jae
popa
rcll
scas
pusha
mov
fs
inc
sbbb
scas
ds
xor
mov
or
add
aas
or
mov
mov
popa
jae
ficoms
in
or
roll
mov
or
and
arpl
jae
dec
push
pop
adcb
popa
sbb
add
daa
xchg
push
dec
push
push
pop
insl
aad
jb
insb
gs
nop
movsb
scas
movsb
adc
push
and
inc
push
je
arpl
and
sbb
nop
add
add
sbb
push
fidivs
inc
pop
adc
ds
pop
mov
push
popa
jb
popa
outsb
mov
mov
mov
orl
popa
fsubl
push
mov
adc
push
fimull
or
mov
in
nop
jo
or
jo,pn
mov
jo
int3
int3
stc
fwait
nop
add
push
popa
data16
int
jmp
in
adc
cs
xor
lods
dec
jl
mov
invd
push
jns
push
inc
insb
jae
or
cmp
and
nop
cmpsl
mov
push
scas
lret
mov
mov
jbe
mov
test
or
mov
xchg
in
jmp
jne
or
jns
notl
decl
inc
xorb
ret
mov
and
div
dec
fiadds
push
fidivs
pushf
ljmp
jbe
add
mov
imul
pushl
sub
jmp
mov
dec
jne
push
xor
jg
mov
jnp
pushl
pushl
mov
testl
jb
cmp
in
movb
dec
inc
outsb
ret
push
shrl
clc
incl
and
fnstcw
orw
sub
mov
pop
push
flds
mov
mov
andl
jg
or
fildll
fistps
ret
pop
rcr
rcrl
fildll
filds
rorl
fildll
pop
jo
stc
mov
add
cmp
add
push
sub
and
jg
rcrl
loope
push
cs
ffree
dec
ss
clc
ffree
ffree
pop
xchg
sub
add
in
mov
mov
and
data16
inc
add
or
sbb
xor
sub
xor
push
push
add
adc
mov
mov
sub
inc
push
pushl
imul
adc
push
push
enter
fbstp
xchg
hlt
sbb
les
pusha
mov
push
fildll
aaa
mov
sbb
or
jg
push
test
jle
mov
mov
mov
xchg
dec
pushf
aas
xlat
inc
pusha
sti
jg
push
push
dec
dec
push
jg
inc
mov
pop
push
ljmp
dec
add
jnp
cmp
push
mov
std
imul
sub
dec
cmpb
jne
push
or
loope
not
mov
adc
add
mov
jge
inc
pop
pushf
add
pop
lods
fnstsw
dec
loopne
lods
pop
mov
cmpsl
xchg
and
lds
xor
pop
inc
dec
loope
scas
inc
push
lea
mov
or
inc
std
and
aas
push
xchg
push
push
dec
ret
mov
xchg
or
in
mov
fadds
sahf
cmp
add
push
cld
push
push
insl
lock
pop
cld
cmp
shr
in
ljmp
subb
sbb
mov
mov
xchg
mov
xor
xchg
ret
push
ss
cli
mov
mov
pop
push
cld
inc
fisubrl
enter
push
mov
xor
push
mov
xchg
sti
sbb
inc
sub
mov
mov
subb
fstps
inc
mov
addr16
cltd
out
xlat
mov
xor
or
pusha
fldenv
mov
cmpsb
je
mov
popa
jb
cmp
ja
sub
mov
jle
stos
test
jp
ljmp
dec
shl
mov
cld
fs
dec
ficompl
test
mov
push
add
shlb
push
cs
push
decl
fcoms
jbe
mov
cmp
rorl
lods
cmp
push
dec
mov
sbb
adc
movb
les
mov
and
movb
push
sub
mov
mov
push
dec
lcall
mov
cmp
mov
mov
pop
pop
out
sbb
jge
outsl
xchg
jg
scas
xor
mov
xor
ds
dec
add
jge
adc
cmpsb
push
or
je
push
dec
add
and
in
xchg
loop
clc
sub
mov
stos
sub
add
decb
sub
in
scas
in
cli
mov
es
and
lods
jmp
adc
sub
jno
sub
sub
incb
mov
push
push
sbb
mov
jae
xor
cmpb
push
aam
xchg
or
jae
sar
movsb
xchg
sbb
xchg
mov
rep
sbb
cmpl
incl
adc
push
std
dec
cmp
mov
adc
cmp
je
cmp
jb
cmp
ja
imul
sbb
xor
mov
add
and
in
dec
jle
flds
ss
shl
mov
ret
je
xchg
xor
and
ret
and
mov
cmp
lock
rcrb
lea
mov
lcall
pop
sarl
mov
push
arpl
pop
xchg
out
dec
jnp
or
das
pop
movsb
push
iret
ss
popf
cmp
stos
push
hlt
in
ficompl
fwait
cld
add
sub
loopne
dec
lock
cmp
mov
faddl
jno
ret
mov
inc
je
push
push
sbb
mov
xchg
jmp
push
pop
outsb
adc
jb
lahf
imul
adc
dec
flds
jno
ss
stc
lods
fistpl
add
mov
aad
data16
or
jmp
xor
inc
inc
out
sbb
je
and
jmp
mov
mov
sub
jne
aas
and
repnz
aad
sahf
push
mov
add
lock
cmp
dec
cmp
or
cmp
jecxz
dec
mov
sub
cmp
push
leave
mov
cmp
mov
add
insl
outsb
mov
dec
inc
je
mov
or
je
mov
inc
je
mull
dec
je
dec
jl
mov
mov
lock
ret
mov
sbbl
fdivrl
outsb
cmp
pop
mov
mov
mov
xchg
mov
inc
iret
dec
push
sub
xor
jmp
lret
add
aad
jg
addb
icebp
jb
push
stos
jo
pop
and
dec
xchg
sarl
into
push
pop
fs
xlat
decb
or
jo
orl
outsl
sub
xchg
xchg
mov
es
add
mov
fcompl
fisttpl
ret
in
mov
sub
push
popa
dec
fdivr
out
js
mov
data16
cmp
xor
clc
jl
jmp
gs
mov
xorl
push
xchg
jne
fsubrl
out
jge
pop
xlat
jmp
lea
cmp
cmp
popa
mov
xor
stos
or
cmc
mov
add
push
mov
neg
jmp
or
add
pop
jo
loopne
xchg
push
mov
divb
and
or
mov
inc
dec
lock
or
jg
dec
mov
adc
incl
stos
cmp
jne
pop
pop
shlb
xor
mov
decb
cli
mov
jl
mov
icebp
repnz
jl
mov
int
lds
es
add
add
add
daa
les
or
adc
jb
fdiv
add
js
push
out
cld
movzwl
sub
lret
sbb
push
daa
lea
or
mov
mov
xlat
in
fbld
incb
je
add
or
mov
pop
insl
mov
add
sbb
or
sahf
sbb
call
lock
lret
cmc
jg
in
xor
xor
dec
inc
dec
inc
dec
lods
cltd
fdiv
xchg
adc
mov
dec
jge,pt
xor
shlb
std
mov
aam
ret
outsl
mov
stc
std
jl
pop
sbb
ljmp
xor
stos
jmp
out
mov
mov
loop
movlps
pop
scas
jo
mov
inc
clc
dec
sub
shr
push
test
mov
cwtl
dec
sbb
stos
lea
add
leave
mov
mov
lods
rorl
mov
in
in
add
jb
mov
ret
add
scas
je
mov
dec
adc
fsts
div
mov
inc
test
jne
sbb
in
pusha
pop
or
jmp
adc
sti
or
mov
or
je
inc
jne
pop
jge
push
xchg
repnz
or
fdivrs
cmp
cs
mov
cmp
lds
jle
inc
je
mov
cmp
orb
dec
aad
sbb
addb
leave
clc
add
rolb
push
mov
test
out
push
pushf
add
inc
add
and
fcmovnu
sahf
out
and
adc
and
sub
inc
sub
jne
into
mov
sub
sbb
and
out
mov
sub
or
iret
mov
xor
sub
xor
andl
push
adc
adc
mov
repnz
push
pop
adc
push
cld
scas
shr
ret
movsb
cmp
testl
push
add
cmpl
add
movb
push
sub
movsb
adc
aas
imul
clc
adc
stos
pusha
jno
inc
out
fabs
push
or
dec
mov
rcr
scas
cld
push
fcomp
pop
stos
jg
fstsw
fwait
mov
testb
je
fidivl
jne
push
cli
call
push
fwait
mov
nop
shr
sub
add
in
add
push
cmp
fisttps
jns
mov
or
sti
in
pushf
or
cmpb
jb
movb
js
scas
mov
cmp
jmp
pusha
xor
rcr
loopne
adc
cmp
inc
xor
out
push
pusha
push
or
shr
mov
add
push
ret
xchg
out
fisubl
cmp
push
adc
dec
push
add
or
sbb
rorl
test
neg
orl
or
or
jge
xchg
or
adc
jl
mov
cmpsl
aaa
sub
incl
or
sbb
inc
loopne
push
dec
js
in
in
insl
or
arpl
int
clc
xchg
cmp
mov
cmp
setnp
or
sbb
hlt
pop
pop
sbbb
and
jne
dec
sub
cmp
dec
dec
jl
and
inc
ljmp
dec
adc
sub
movb
cmpb
notl
push
or
mov
mov
js
xor
iret
inc
pop
or
aas
lret
push
or
inc
call
xor
pop
sbb
or
cmp
inc
stc
inc
sub
push
add
push
jae
pop
rcl
outsl
scas
sub
add
shrb
pusha
ljmp
ds
fs
fildl
xor
jg
push
or
sbb
pop
pop
es
sbb
stos
test
sub
iret
jecxz
je
test
push
push
mov
adc
jbe
fnstsw
dec
popa
pop
loopne
out
jg
outsl
sbb
outsb
pushf
jp
push
push
mov
mov
adc
cwtl
fstpl
fidivrl
xor
sub
sbb
loopne
adc
movsb
fdivs
inc
add
into
pop
or
jl
xchg
inc
lea
movsb
push
sbb
enter
sub
cld
lock
and
sub
imul
adc
inc
loope
add
push
addl
mov
cld
mov
call
inc
adc
xor
movsl
push
and
or
or
pop
xor
xchg
mov
lods
out
js
and
jle
sub
sbb
rorb
push
push
fidivrl
cmp
lea
dec
lret
xchg
pop
lcall
inc
lock
stc
nop
inc
cmp
mov
inc
add
sub
mov
movb
jne
roll
sbb
pop
add
sti
cltd
idiv
int3
sub
push
in
insb
fbld
pop
in
in
dec
call
mov
in
into
loope
push
or
jg
push
ds
xchg
dec
mov
xor
test
outsb
mov
ss
dec
jmp
jl
je
xchg
cmp
inc
sbb
aaa
or
scas
lock
sahf
and
xor
sbb
jge
pop
xchg
jp
push
push
push
in
imul
pop
xor
mov
test
mov
imul
mov
push
loop
loop
cmpsl
mov
sub
movsl
sti
cmp
mov
fildll
cmp
add
pop
push
push
push
mov
mov
mov
dec
jne
push
push
xor
jns
xchg
imul
push
jb
pop
clc
movsl
adc
xor
mov
sbb
inc
ss
insb
pop
cmp
or
mov
cmp
or
and
clc
test
addb
shl
mov
or
repz
dec
push
cld
scas
outsb
xor
ljmp
je
sub
je
jg
push
imulb
pusha
lcall
lahf
push
xchg
cmp
jle
sbbb
sub
push
sbb
popf
fwait
pop
test
and
dec
push
cmp
sbb
loop
cmp
lods
lock
xchg
mov
inc
mov
mov
test
pop
cmovp
mov
add
jle
push
dec
add
xchg
aas
enter
add
push
mov
repz
pop
je
jne
xor
jb
ret
and
add
in
cmp
or
mov
sbb
jge
aaa
lds
add
sbb
mov
daa
jg
add
sub
dec
cmp
fidivrs
movsb
sti
cmp
push
lea
in
out
sbb
sbb
sbb
insl
dec
int3
scas
ljmp
and
aaa
gs
lea
xor
jmp
sub
gs
dec
mov
in
dec
test
rolb
out
mov
add
mov
pandn
or
repnz
xor
pop
loop
jp
sbb
enter
test
idivb
jl
ljmp
je
mov
sub
jne
cld
lock
inc
add
xor
pop
cmp
xchg
cmp
inc
jb
pop
pop
jl
sbb
or
movb
movsl
mov
call
push
iret
mov
rolb
enter
cmp
push
lea
sub
dec
mov
or
aas
add
mov
dec
ffree
loopne
mov
loope
pop
loope
mov
cmp
or
mov
lcall
cmp
dec
mov
push
stc
in
sbbb
in
in
add
xor
add
popa
mov
repnz
cmpb
xor
mov
pop
push
or
lds
lahf
test
push
outsb
ja
insl
or
pushf
icebp
in
clc
lea
add
stos
add
cld
mov
lret
test
jl
mov
sbb
out
ret
xchg
pop
sbb
xchg
jnp
and
pop
fistl
push
les
lea
push
sbb
jo
cs
stos
mov
jnp
jo
testb
xchg
fsubr
adc
pop
jo
clc
mov
nop
fwait
jle
add
dec
cmpb
pop
lods
ret
mov
test
add
push
arpl
adc
icebp
xchg
xchg
xchg
xor
mov
out
jbe
incl
inc
cmp
jg
cmp
sbb
pushf
test
pusha
dec
pop
movsb
inc
cmpsl
aad
sbb
pusha
pop
cwtl
pop
fimull
in
jo
pop
ds
jno
or
jg
or
push
push
sar
lret
push
adc
push
popa
pop
hlt
ljmp
or
sub
jnp
rorb
nop
and
add
les
cmpsl
cmp
cs
or
pop
loope
xor
adc
mov
cmp
xor
lahf
mov
mov
jb
mov
and
and
enter
sub
or
add
mov
movb
mov
mov
lock
clc
push
in
lock
fistl
dec
loopne
push
sbb
int
pop
jb
add
push
ret
out
lock
mov
subb
adc
popa
js
and
add
or
and
into
clc
enter
outsl
fldt
pop
enter
push
push
cmp
je
jmp
push
cs
aas
xor
inc
xor
lcall
and
add
push
imul
and
cmpsb
or
in
xor
adc
cmp
test
xchg
dec
jae
or
jl
mov
je
nop
push
sbb
adc
cld
add
nop
inc
sbb
lret
pop
add
inc
fcoml
inc
or
jge
xor
int3
mov
test
loope
stc
loopne
je
test
decb
testl
xorb
xor
xlat
add
ja
jae
or
fcmove
enter
ror
shll
mov
ret
sbb
push
jmp
lret
cmpsl
jl
xor
lret
enter
mov
push
lcall
je
in
pop
and
and
cwtl
or
mov
inc
aaa
sub
jmp
jb
jne
rolb
or
push
mov
or
and
loop
push
adc
pop
adc
xor
mov
add
mov
push
sbb
sahf
adc
cmp
pusha
mov
or
xchg
loope
jne
sub
pusha
add
lcall
mov
cvttps2pi
mov
cld
pop
addr16
add
movl
lods
insb
adc
rep
jne
sub
mov
or
in
jb
sbb
je
div
mov
mov
mov
mov
mov
cmp
shufps
int3
add
cmc
pushf
mov
subl
faddp
sbb
fidivs
ret
push
sbb
adc
and
adc
daa
pusha
insb
inc
add
mov
add
loop
xor
mov
adc
mov
or
and
mov
jne
sub
cmpsb
loop
or
jmp
push
out
ja
adc
adc
addb
mov
jno
lahf
clc
inc
ja
or
test
repnz
movsl
dec
adc
xor
push
or
inc
mov
jae
pusha
cmp
xchg
loope
jge
bound
into
imul
dec
daa
adc
js
dec
popf
xchg
or
or
stos
mov
add
in
mov
dec
dec
dec
in
js
push
mov
push
pop
inc
xchg
clc
or
mov
cmpb
mov
mov
sbb
jmp
mov
dec
jmp
dec
test
jl
mov
and
jg
testb
jns
dec
or
inc
test
jne
test
sar
add
adc
inc
ret
adc
push
std
out
sahf
cs
pop
jae
pop
add
repnz
mov
cmp
daa
dec
rorl
and
push
aaa
imul
dec
lock
pop
dec
and
loop
adc
jecxz
dec
les
jo
sub
fcmovbe
ljmp
sahf
scas
enter
sbb
add
int3
aam
es
adc
mov
push
jl
push
aam
jbe
mov
sub
jns
ret
dec
popa
sub
jb
je
add
pop
add
ds
jne
sbb
mov
hlt
hlt
sbb
lea
cmp
addb
dec
pop
mov
jl
pop
or
push
jmp
iret
jge
add
push
mov
fwait
aam
incl
inc
aaa
push
mov
sub
jb
inc
mov
cwtl
ljmp
sub
stos
sbb
lret
jne
add
cmp
jge
push
arpl
or
mov
mov
pop
xor
xchg
pop
fs
add
inc
or
cmp
inc
pop
repnz
jge
mov
dec
data16
enter
das
add
add
mov
or
arpl
xor
mov
cmp
xchg
push
inc
imul
add
lods
scas
mov
push
cmp
mov
mul
pop
hlt
test
pop
xchg
ret
mov
iret
ret
popa
mov
mov
outsl
lock
cmp
test
adc
adc
push
and
mov
mov
cmpl
xchg
rorl
mov
fimull
jmp
mov
int
bound
and
shlb
sub
outsl
ja
out
xor
outsl
std
sbb
jne
push
mov
jle
dec
xchg
cmp
inc
rcrb
lea
pop
movsb
ds
jge
stos
push
mov
addr16
mov
lret
jne
clc
cwtl
mov
or
sub
mov
xor
daa
sbb
mov
mov
mov
jle
cs
push
jg
in
dec
out
push
sbb
subb
sbb
sbb
repz
mov
dec
aam
adc
aam
cmpl
mov
push
fstps
sub
jb
sarb
sub
mov
push
sarb
sub
nop
in
int3
mov
inc
test
out
enter
lcall
aaa
outsb
mov
push
leave
sbbb
leave
xchg
ss
ret
adc
and
enter
pop
clc
mov
idiv
jne
add
push
mov
in
popf
in
push
cmp
sbb
or
add
ljmp
inc
mov
outsb
mov
insl
das
fs
aas
scas
insl
add
fs
ss
lods
and
jo
pop
jmp
xchg
push
movsl
std
and
and
push
dec
add
sbb
aas
pop
cmp
pop
push
jge
pmaddwd
jae
ds
mov
push
js
inc
sub
xor
adcb
addr16
add
in
push
mov
add
pop
cmpb
fsubl
mov
mov
dec
lahf
subb
clc
lcall
push
jg
imul
push
jo
arpl
js
add
xchg
nop
scas
movsb
andb
xchg
cmp
cmp
push
inc
fdivp
xor
js
mov
push
mov
sahf
out
pusha
push
cld
repnz
cmp
iret
jnp
out
dec
dec
inc
push
pop
cmp
repz
xor
sub
repz
repz
hlt
adc
iret
jae
orb
push
add
clc
icebp
jns
out
in
xor
fcom
jl
out
lock
enter
push
pushf
mov
mov
xor
cmp
ficoms
push
pushf
iret
leave
sbb
mov
xchg
lods
aaa
ja
daa
nop
notl
mov
cmp
les
cmp
jl
aam
cs
je
mov
test
cmp
out
in
push
daa
out
cmpsb
pushf
pusha
cmpsl
pop
movsb
pop
out
cmp
pop
push
add
dec
sahf
xchg
dec
dec
je
push
outsb
out
in
inc
adc
mov
bnd
cmp
xor
repnz
cmp
xor
pushf
mov
mov
pop
mov
stc
add
sbb
sbb
dec
sahf
xchg
cwtl
adc
adc
pusha
xor
mov
int3
cs
lock
hlt
ja
loope
or
mov
dec
out
adc
jo
or
aam
shl
xor
fsubrl
shrb
sbb
pop
jns
push
repnz
lock
adc
das
mov
lahf
ljmp
pop
loopne
shlb
sbb
nop
out
xor
rolb
or
add
and
cwtl
adc
inc
test
pop
cltd
sbb
in
test
sbb
push
inc
incl
loopne
sub
sub
inc
daa
cmp
cmpb
out
pop
lea
gs
jl
pop
push
data16
in
adc
jecxz
pusha
and
js
sti
or
xchg
cmpsl
or
push
enter
aad
mov
add
loope
test
notl
mov
and
push
repz
jne
cld
pop
mov
sti
pop
cmp
push
aas
cmp
jmp
stos
js
ss
aaa
aas
fwait
sub
iret
xorl
jns
mov
arpl
mov
sbbl
icebp
lahf
int
push
fimull
mov
sarl
cmp
loope
lahf
rcrb
stos
add
sti
fdivl
int3
jb
jo
mov
jo
jae
push
jg
push
aam
in
into
fsubl
outsb
aas
and
sbb
pusha
cs
jmp
mov
out
jge
xchg
mov
outsl
inc
into
sub
out
out
hlt
mov
inc
sub
sub
in
out
out
mov
cltd
clc
push
cmp
add
out
dec
fidivrl
lret
mov
jno
sub
mov
ds
fwait
xlat
sbb
in
fsubp
out
testb
scas
sub
in
pop
inc
adc
test
out
popa
xchg
xchg
adc
fwait
inc
sti
pop
mov
xchg
repnz
and
fwait
fwait
ss
sub
mov
std
insb
outsb
outsb
jns
fisubl
mov
test
mov
orb
out
dec
fidivl
xor
shrl
test
lret
pushf
jle
ret
and
jae
out
sub
out
dec
jbe
cmc
push
cmp
xchg
dec
mov
mov
dec
adc
jae
jae
or
test
sarb
jge
dec
jae
jae
and
divl
stos
mov
scas
mov
insl
je
pop
fimuls
push
std
pop
fisttpl
mov
jne
sbb
cmp
das
aaa
aaa
aaa
lahf
push
jb
mov
xchg
cld
lods
or
adc
aaa
aaa
aaa
std
push
inc
movsb
add
clc
pop
rcr
cmp
aaa
popa
arpl
jbe
xor
mov
into
xchg
mov
out
or
sbb
mov
inc
mov
fidivrl
cltd
out
mov
jne
xor
xor
out
out
lret
mov
add
pop
out
out
ds
std
enter
fnstenv
xchg
dec
insl
out
out
leave
shll
das
ss
imul
out
mov
add
es
cmp
fwait
cli
roll
xor
lret
int
aas
fwait
int
and
adc
lds
cwtl
sti
mov
cmp
std
insb
jle
outsb
lret
jle
xlat
push
sub
add
cmp
add
movsl
std
pushf
mov
pop
adc
xchg
fsubl
divb
mov
mov
xor
iret
out
in
mov
rclb
in
rcrb
jle
std
sahf
outsl
aam
cmp
jp
cs
push
ja
inc
lret
je
repnz
je
jl
js
mov
dec
imul
pop
xchg
xchg
idiv
mov
jmp
push
loop
dec
lods
jecxz
cmpl
movsb
mov
mov
pop
push
ret
cltd
sbb
mov
aaa
mov
adc
adc
cmc
dec
test
aaa
idiv
pop
loop
clc
fwait
data16
les
jge
out
addr16
cmp
shrl
mov
jle
aas
fwait
or
inc
cmpsb
add
fmull
aas
sahf
arpl
or
int3
jae
sti
fldcw
movsl
jno
mov
mov
pop
stos
or
jae
jae
push
cld
icebp
inc
mov
insl
fsubr
jae
jae
fwait
inc
pusha
ret
aad
lret
sub
test
outsb
int
mov
jge
pop
pop
fildl
inc
es
data16
fwait
fwait
fwait
fwait
cmp
jb
xor
xor
aas
fwait
fwait
popf
or
imul
cli
icebp
aas
popf
cld
enter
ss
aaa
pop
loopne
sbb
push
jno
cs
xor
ds
mov
sahf
imul
outsb
cmc
cmp
pop
aad
jae
shl
mov
sub
sub
adc
xor
jae
les
pop
and
std
insb
outsb
sahf
cmp
shlb
clc
adc
or
inc
imul
sub
fistpll
in
add
outsb
push
test
movsb
shlb
sti
pop
adc
or
insb
outsb
xchg
repz
mov
sub
out
jns
rorl
and
add
xchg
out
pop
mov
cwtl
pop
sub
xchg
mov
int
xor
sub
faddl
sti
jge
gs
or
adc
stos
inc
jle
loopne
mov
sub
cs
fdivrl
loopne
jo
leave
daa
jg
fnstcw
pusha
push
cmp
mov
dec
in
cmc
fsts
jb
pop
sub
test
mov
imul
dec
in
test
test
xchg
std
fwait
out
div
xor
adc
test
out
out
in
dec
push
scas
sahf
push
mov
mov
out
out
dec
cmp
pop
mov
and
cmpsb
test
out
sbb
add
push
mov
adc
fwait
fwait
fwait
out
dec
lods
mov
out
xor
fwait
fwait
fwait
fwait
sbb
movsl
cmpl
outsb
lahf
fwait
pop
or
xchg
mov
out
in
push
ljmp
test
test
inc
xor
and
aaa
sbb
fildl
je
or
aaa
aaa
aaa
jmp
dec
scas
or
add
ja
jnp
mov
and
aas
add
es
sbb
fcmovnu
enter
sub
push
hlt
xchg
dec
fwait
fwait
fwait
fwait
stos
or
icebp
pop
icebp
in
mov
fwait
fwait
fwait
imul
int
jbe
scas
fwait
fwait
fwait
fwait
stos
mov
adc
outsb
outsb
outsb
lahf
pop
cld
pop
dec
icebp
jecxz
mov
jp
jl
outsb
fidivrl
add
sub
jae
stos
test
fsubl
lods
or
inc
adc
mov
add
sti
pop
in
fidivrs
popf
dec
shlb
jae
ss
sub
jo
mov
cld
insb
outsb
cmp
pop
decl
rcr
fs
popa
int
je
jae
mov
and
mov
shll
gs
sbb
imul
jae
jae
std
fdivrs
xchg
pop
insb
into
xchg
jae
xor
jae
jae
xlat
aaa
sub
push
movsl
mov
jae
jae
bound
add
les
mov
push
into
sub
mov
addr16
mov
cltd
cmp
aaa
xchg
das
and
cmp
outsl
or
jae
xor
jno
lret
sub
ror
int
in
fldl
fcmovb
test
std
pop
inc
and
mov
int
inc
ss
clc
mov
jmp
das
mov
jle
rcll
fdivrl
cmp
popa
rcr
mov
cmpsl
stos
lcall
xor
xchg
repnz
mov
outsb
outsb
scas
clc
xchg
addr16
sbb
pop
mov
insb
inc
mov
or
aaa
aaa
aaa
out
ficoms
jbe
jle
ret
or
inc
adc
pop
mov
neg
lods
mov
or
das
in
jno
mov
jecxz
es
test
fsubr
mov
cmp
dec
scas
lock
sub
xchg
push
and
add
pop
imul
pop
ds
jl
lds
xorb
pop
pop
mov
sbb
loopne
xor
dec
stos
xchg
mov
dec
cmp
adc
xchg
enter
jns
shlb
add
mov
iret
subb
sti
jecxz
or
push
shlb
xor
mov
mov
cmp
roll
shr
xchg
out
imulb
outsb
or
xor
xchg
mov
outsb
outsb
aas
movsb
cmpsl
orb
sti
xor
sahf
std
outsb
outsb
outsb
outsb
andb
aaa
xchg
imul
jo
add
das
add
enter
sti
adc
mov
es
push
cmp
jae
aam
insl
mov
push
aaa
aaa
mov
es
shll
pusha
push
lds
aaa
aaa
aaa
aaa
lcall
and
neg
mov
fdivrl
mov
nop
push
ja
xlat
enter
clc
cld
insb
clc
fidivrs
xchg
add
pushf
cld
iret
clc
insb
outsb
into
pop
or
hlt
and
aaa
aaa
aaa
mov
out
into
lea
shl
imul
fdivrl
aaa
cmp
mov
int
stc
pop
addr16
daa
das
mov
xchg
ret
xchg
xor
int
in
sub
cmc
les
sbb
cmp
lahf
int
lcall
xchg
inc
mov
xor
or
aaa
aaa
aaa
aaa
xor
test
sub
aaa
aaa
fsubrp
arpl
and
out
cli
pop
mov
andb
push
dec
sub
mov
out
jb
and
fldt
outsb
outsb
mov
sbb
clc
push
mov
jl
outsb
outsb
dec
test
cmp
out
jg
xor
xor
pop
and
out
in
pop
mov
pop
test
js
mov
loopne
mov
out
mov
pop
push
daa
xchg
aam
js
out
out
rcrb
push
add
pop
lock
out
in
dec
add
push
mov
push
mov
mov
mov
ds
and
loop
ficompl
mov
inc
add
jnp
mov
jmp
pop
fstps
sbb
dec
lods
jo
sbb
fdivrp
icebp
insb
outsb
outsb
rorb
out
jno
int
int
insb
insl
mov
mov
cmp
arpl
notb
dec
stos
mov
push
xchg
in
and
cmp
nop
jge
repnz
mov
pop
adc
jne
jmp
fdivr
insb
scas
mov
dec
mov
and
faddl
daa
xchg
sbb
movsb
scas
mov
repz
dec
decb
out
stc
repz
in
push
add
jge
cld
jns
iret
and
cmpsb
into
mov
jo
add
lahf
out
in
push
jecxz
test
repz
add
adc
jle
cmp
sahf
inc
ficoml
add
add
out
adc
add
jl
inc
in
fstp
data16
repz
iret
add
adc
mov
jno
push
jge
loopne
fcmove
lahf
out
or
or
lahf
out
aas
call
arpl
ds
aam
repz
iret
add
addr16
cmp
out
mov
add
mov
sbb
hlt
aam
sbb
int3
push
shl
mov
fmuls
cli
loop
jno
push
addr16
out
in
loopne
sub
push
imul
mov
incl
push
cmp
dec
mov
aaa
ds
js
loop
int3
fs
jns
movsl
add
stc
cmp
add
xor
insl
leave
outsb
jns
iret
repz
popa
popf
leave
sahf
iret
enter
mov
lret
mov
in
clc
out
cmp
and
jl
iret
repz
add
imul
iret
out
repz
add
xchg
fisubrl
int3
xchg
fidivrs
insb
rolb
incb
cwtl
notb
and
mov
stc
repz
pop
out
mov
add
xchg
cld
jns
iret
or
jge
add
dec
jmp
adc
xchg
in
xchg
lahf
out
cld
xor
frstor
cmpsl
inc
mov
push
mov
nop
hlt
insb
cs
adc
push
jle
incb
inc
hlt
loop
cmp
pushf
fistpl
mov
hlt
mov
fistpll
sbb
aam
out
sti
mov
or
out
sar
push
je
rolb
nop
xor
mov
lods
sub
cld
adc
lea
sub
pop
arpl
xchg
mov
rol
iret
out
popa
shlb
and
or
daa
cmp
cs
fimull
movsb
jge
push
loopne
sarb
fstpt
std
pop
aaa
aaa
aaa
pop
sbb
xchg
inc
mov
cmp
aaa
aaa
xor
pop
enter
fwait
fwait
mov
das
out
test
ds
mov
sub
sub
sub
in
mov
jae
test
out
out
xor
jns
mov
mov
cld
lock
rorb
dec
adc
iret
out
push
adc
clc
dec
push
lcall
xchg
sbb
sbb
pop
xor
add
dec
addb
out
addb
pop
iret
std
mull
pop
add
aaa
aaa
mov
mov
jbe
xor
adc
or
aaa
aaa
mov
xchg
inc
test
pop
push
or
repnz
fwait
fwait
fwait
inc
mov
add
mov
fists
sbb
xchg
mov
leave
xor
mov
mov
and
add
ret
std
repz
mov
sbbl
fsubr
mov
jecxz
fbstp
push
scas
dec
xchg
mov
fwait
loopne,pt
xor
inc
ljmp
xor
fdiv
mov
loope
movsl
jns
hlt
push
ss
mov
loop
xor
and
outsb
outsb
pop
clc
jnp
cmpsl
pop
in
mov
adc
add
outsb
outsb
outsb
mov
or
mov
mov
das
rcrb
push
mov
xchg
stos
js
pop
lahf
or
pop
aam
or
decb
mov
mov
add
pop
fchs
inc
out
out
les
add
fs
sub
fcmovne
icebp
jne
jbe
cmpsb
push
pop
jg
jne
movsb
mov
cli
les
adcb
arpl
cli
jp
cmp
int
int
jge
test
jmp
lods
int
int
movsb
pushl
mov
cld
bound
int
sub
insb
cmp
aad
xchg
jmp
mov
dec
mov
mov
xchg
dec
add
fdivrl
jl
jno
lock
adc
icebp
popf
hlt
repz
dec
xor
and
insb
push
mov
repz
mov
imul
mov
xor
das
les
pop
aaa
fsubrs
xchg
aaa
fdivrl
jbe
aas
xor
jno
lods
xor
hlt
lret
loope
cmp
dec
mov
int
adc
pop
leave
lds
aaa
pop
pusha
mov
pusha
cmp
idivl
scas
insb
jle
aaa
and
mov
iret
imulb
test
daa
stos
jbe
shrb
sahf
fwait
add
ss
xor
out
add
and
call
incb
mov
sbb
mov
mov
fldenv
adc
or
jl
push
fdiv
fwait
lahf
push
test
and
ds
jbe
imul
adc
aad
lods
or
jae
mov
push
rcrb
or
dec
mov
ja
int3
mov
fs
sahf
mov
mov
pop
push
mov
test
pop
adc
adc
cltd
dec
xchg
orl
repnz
sub
dec
mov
mov
xorl
lea
aaa
pop
sbb
jmp
rolb
fstps
ret
out
cmpb
xlat
push
jecxz
cltd
add
cmpb
xor
clc
pop
mov
ret
or
xor
out
mov
sbb
xchg
inc
mov
jp
pop
add
jbe
jbe
es
dec
aaa
aaa
aaa
aaa
jmp
cmp
insl
pop
jg
ds
aaa
aaa
aaa
cmp
mov
into
xchg
bound
aaa
aaa
aaa
add
dec
push
sarb
sti
cmp
adc
cmp
inc
mov
jecxz
jae
rcrl
popa
jle
int3
mov
test
fstps
push
sahf
test
inc
clc
xchg
lock
jae
jae
mov
cld
cmpsl
jno
fsubrl
jmp
push
ss
pop
push
sub
inc
mov
aas
push
cwtl
add
testb
adc
divb
sarb
jo
jnp
pop
es
insb
mov
or
js
sub
adc
insl
scas
movsb
push
scas
jae
shll
inc
mov
inc
out
cwtl
cmp
push
jge
movsl
decb
call
nop
addr16
jl
inc
sahf
mov
addr16
iret
aaa
xchg
and
cmp
jp
sbb
fnsave
incb
jae
movl
xchg
ret
push
dec
mov
stos
push
mov
jae
out
mov
xchg
cmpl
jp
addr16
sub
data16
jns
and
mov
and
dec
data16
loope
insb
mov
gs
push
sub
lea
sbb
sub
mov
lods
daa
xchg
sahf
fwait
sbb
jns
in
les
test
add
xchg
push
xchg
test
xor
addr16
jge
scas
dec
sbb
in
xchg
cmpsl
push
iret
and
dec
xor
mov
aad
shl
fldcw
adc
lahf
mov
sti
push
dec
add
inc
mov
out
cli
xor
int
mov
fdivrs
out
xor
adc
shlb
and
mov
mov
addr16
mov
fcmovne
out
mov
sti
clc
inc
mov
add
outsb
outsb
outsb
xchg
jecxz
rorb
das
inc
cmpsb
add
adc
xchg
test
jns
out
jl
loop
dec
lahf
sbb
or
sub
inc
mov
addr16
jae
repnz
iret
cmpsl
xor
sti
lods
les
add
notl
aaa
sub
adc
fdiv
jp
sub
mov
sub
adc
and
ljmp
fnstenv
mov
mov
cmpsb
cmp
aaa
xchg
lods
dec
test
aas
fcmovne
out
jmp
jp
sbb
mov
jae
add
test
push
mov
jns
in
pop
sahf
inc
insb
pop
push
cmp
mov
jbe
xor
jl
pop
sub
pop
xchg
sub
sarl
fstps
orb
shrl
sarb
mov
arpl
xor
mov
addr16
mov
fdivrs
out
pop
push
aas
pushf
sti
cmc
mov
mov
mov
add
push
out
decb
fwait
inc
jnp
dec
mov
clc
cltd
in
mov
out
out
push
push
and
fcmovnbe
sbb
dec
jl
decl
fdivl
incb
faddl
add
cs
jae
xchg
lods
adc
fdivp
jge
adc
cmpsb
xchg
clc
cltd
ss
or
push
decb
push
ret
shll
push
and
mov
push
pop
cmc
std
insb
or
pop
push
in
jmp
push
int
fildl
mov
add
fldenv
movsl
mov
adc
ja
xchg
out
sti
pushf
cmp
inc
mov
out
out
xchg
leave
push
lods
dec
out
xor
add
push
idivb
int
or
loope
and
gs
cmpsl
sahf
lea
sub
scas
fcoms
nop
xor
jne
mov
out
stos
out
jge
add
mov
out
out
push
lea
iret
jo
mov
out
out
hlt
xchg
xlat
js
mov
out
out
and
arpl
lret
adc
nop
xor
int
int
push
negl
mov
int
int
loop
and
popw
test
ljmp
int
cmpxchg
pop
jbe
mov
pop
cli
fwait
cmp
jle
shlb
ljmp
enter
addr16
arpl
mov
cs
sbb
fwait
fwait
fwait
fwait
jno
cmc
pop
cld
pop
or
fwait
fwait
fwait
fwait
out
jmp
jecxz
negl
push
fwait
fwait
shll
ljmp
outsb
aas
sub
cmp
in
outsl
inc
test
aaa
cmp
test
test
adc
aaa
aaa
aaa
cli
add
mov
jnp
sti
jb
jbe
aaa
aaa
aaa
aaa
xor
mov
jl
xor
cmp
fdivrl
aad
bound
shrl
cmp
sbb
jae
jae
inc
sub
lds
loopne
jae
mov
ljmp
push
rep
aas
fwait
sub
push
pop
aam
fstl
pop
lods
sbb
add
pusha
mov
int3
ss
mov
mov
js
int
xchg
jno
cs
xorl
sbbb
ds
xor
arpl
mov
out
fmull
jmp
rcl
or
aas
or
jbe
test
xchg
mov
or
outsb
or
pop
mov
add
adc
out
out
and
icebp
mov
xchg
bound
stc
aaa
dec
mov
jae
mov
jbe
ret
push
jecxz
and
and
out
inc
sbb
rcrl
iret
out
mov
cmpsb
add
shrl
adc
outsb
outsb
outsb
mov
stos
dec
lret
fisttpl
mov
outsb
outsb
outsb
add
nop
push
lahf
add
data16
insb
outsb
outsb
pop
int3
out
push
mov
pop
push
imul
adc
incl
mov
sahf
cmc
mov
js
out
mov
fdivrs
not
mov
jnp
lods
push
hlt
fistl
sti
and
cmp
or
fwait
inc
fadds
jle
mov
outsb
outsb
mov
mov
popa
call
outsb
inc
leave
rorl
out
jmp
out
mov
pop
pop
xor
adc
out
out
jmp
mov
inc
xchg
cltd
out
out
sbb
in
dec
pop
or
loop
mov
lahf
dec
push
push
aaa
lret
mov
mov
dec
iret
mov
cmp
sbb
insb
das
xor
outsb
out
cli
adc
ja
cmp
out
dec
popf
testl
xor
stos
push
lahf
int
inc
or
jne
push
dec
xor
clc
fmull
and
mov
mov
int
mov
pop
clc
mov
test
xor
add
pusha
cmp
fsubl
pop
cmc
repnz
pop
sub
aaa
das
lret
sti
outsb
adcl
in
ret
adc
jae
mov
push
insb
sti
or
sar
jle
lea
andb
pop
mov
cs
loope
jae
pop
out
lret
push
sub
jno
jae
dec
mov
sub
push
or
mov
mov
dec
outsl
out
mov
xchg
ror
xor
dec
mov
pusha
adc
out
cli
arpl
outsb
test
mov
inc
clc
insb
jge
scas
cmp
xchg
outsb
outsb
aas
pusha
push
out
xor
int
sbb
outsb
outsb
dec
leave
cmc
repz
into
xor
loop
jne
out
jnp
pop
sub
jbe
push
push
mov
jno
out
out
sub
fisubs
jp
int3
sbb
scas
push
imul
sahf
cli
outsb
aas
fwait
fwait
jb
aam
push
jno
stos
popl
inc
outsb
outsb
outsb
outsb
gs
add
mov
outsb
outsb
outsb
outsb
scas
dec
jge
shll
push
dec
xor
outsb
shrl
shlb
and
mov
je
sub
pushf
add
dec
jle
jecxz
mov
bound
jo
mov
jae
mov
testb
push
gs
out
out
aad
and
jae
lahf
mov
mov
out
out
pop
jne
inc
jle
mov
or
test
stos
mov
dec
inc
pusha
in
push
mov
fwait
fwait
fwait
inc
xor
sbb
or
mov
insb
outsb
aas
fwait
rcll
mov
sub
jns
mov
mov
movb
fsubs
xor
xchg
jns
enter
mov
xor
add
cltd
inc
insb
outsb
scas
clc
rol
xchg
lcall
fnsave
test
lock
clc
dec
stos
push
scas
call
pushl
add
scas
jp
fldt
aam
jecxz
testb
sahf
iret
out
out
out
jmp
loope
cmpsl
xchg
inc
fwait
lods
push
mov
adc
aas
fwait
fwait
or
mov
stos
fnstcw
arpl
xlat
mov
pusha
lock
sarb
orl
sti
icebp
lods
ss
push
jl
ds
mov
shl
xor
jnp
jle
mov
adcb
loopne
jae
arpl
pop
repnz
push
cld
aas
into
pop
ljmp
loopne
push
sbb
les
xor
bound
shlb
shlb
xlat
stos
pop
fildl
cwtl
xchg
push
sahf
jge
pop
xchg
fwait
fwait
fwait
rorl
push
dec
pop
push
push
mov
fwait
fwait
fwait
adc
xor
and
push
inc
in
mov
sbb
lret
insb
dec
addr16
add
mov
inc
mov
repnz
adc
pop
daa
sub
sub
outsb
fisttps
clc
jl
in
ja
adc
xchg
outsb
outsb
xchg
push
mov
push
jge
outsb
outsb
mov
movsl
lods
or
test
ja
sbb
sub
int
in
jae
and
inc
les
lea
addb
fdivrl
int
pop
add
loopne
in
jbe
fdivrl
mov
xor
pop
rclb
dec
xchg
frndint
cmc
fmul
sti
iret
jge
jb
mov
cli
dec
lret
mov
adc
inc
fdivs
jae
push
stos
jle
push
es
mov
es
int
lahf
fwait
mov
jae
or
mov
cmpsl
push
mov
std
insb
outsb
in
in
pusha
not
add
jo
out
mov
jg
mov
xor
aas
sbb
push
shr
pusha
jns
aas
fwait
fwait
push
pop
call
je
loop
aaa
mov
int
or
mov
cmp
popa
mov
sub
push
sbb
mov
jae
jae
pushf
repz
sbb
fstpt
jae
push
xchg
arpl
pushf
out
addr16
or
xchg
jmp
clc
inc
fistps
mov
repnz
sbb
cmp
fwait
pushl
lahf
cmc
mov
imul
loop
ljmp
icebp
fcompl
xchg
xchg
inc
jo
icebp
rclb
dec
clc
fdiv
or
push
lods
ret
push
repz
out
fstps
add
xchg
xchg
sub
out
jae
jae
pusha
andl
js
out
std
mov
jae
jae
and
out
xchg
jbe
mov
int
in
test
mov
repnz
ret
int
int
scas
test
pop
jge
popa
add
lahf
int
loop
outsb
dec
dec
mov
lock
out
mov
xor
push
cld
mov
mov
sbb
pop
pop
mov
int
xorl
hlt
jge
mov
jmp
inc
aad
mov
cmc
mov
dec
shll
jg
cmpsw
jle
mov
lcall
es
imul
dec
scas
fs
es
bound
ss
mov
into
int
mov
inc
popa
push
ss
mov
mov
loopne
int
out
icebp
cmp
adc
aam
jle
aaa
into
icebp
push
adcl
enter
cs
fstps
and
bound
cwtl
fwait
or
sub
stos
clc
inc
fisubrl
jp
mov
mov
mov
mov
std
add
jmp
int
in
addr16
mov
les
cmp
int
fwait
popa
icebp
lahf
lcall
stos
iret
int
int
fstpt
push
push
shlb
jae
mov
fmull
inc
into
jae
int
int
pop
xchg
in
and
addr16
outsl
adc
idivb
lods
push
lahf
int
adc
ret
popf
push
lahf
sub
and
outsb
cs
pop
cmpb
aam
enter
sub
jl
outsb
sti
test
pop
pushf
fidivrs
pop
sbb
cld
jle,pn
in
outsl
insb
sub
jmp
jns
inc
movsb
rclb
sti
sahf
pop
jae
setae
mov
addr16
jae
in
scas
daa
ja
lcall
shrl
aam
adcb
outsb
jp,pn
std
enter
add
jne
jnp
outsb
outsb
outsb
outsb
cmpsl
xchg
dec
dec
dec
sbb
js
andb
outsb
outsb
outsb
dec
pop
nop
or
test
outsb
fnstcw
icebp
jo
orb
cli
out
push
outsb
stos
jo
xchg
fdivrl
aaa
aaa
stos
jo
jg
sub
hlt
and
cli
bound
dec
xor
cs
out
cmpsl
int3
int
test
cmpsb
sahf
mov
addr16
out
pop
popa
jmp
mov
cmp
and
fwait
fwait
fwait
fwait
scas
lret
add
movb
push
fwait
push
sahf
xchg
bsf
fwait
fwait
fwait
fwait
daa
rclb
cltd
add
int
lahf
fwait
clc
lds
jns
mov
int
int
fwait
pusha
adc
xlat
idivl
dec
int
int
jge
pushf
xor
and
rcrb
int
inc
test
sahf
jmp
jmp
mov
je
push
div
scas
cmp
iret
scas
push
jo
scas
push
rcl
gs
cmp
sub
mov
arpl
mov
cmp
jnp
lahf
fwait
fwait
addr16
stos
sub
das
cli
adc
int
in
mov
xchg
cmp
cld
cmp
push
aaa
aaa
mov
pop
push
jne
out
test
mov
jecxz
dec
mov
in
jns
jnp
push
scas
dec
xor
div
movsb
mov
ss
mov
sti
push
fs
add
jp
jl
mov
or
ljmp
mov
test
int3
inc
outsb
xor
ret
dec
in
push
cld
loopne
xlat
push
aaa
cmp
cwtl
testb
or
ss
je
push
imul
adc
mov
xchg
je
xor
jne
or
push
fwait
in
mov
sub
shlb
and
jmp
clc
pop
jmp
sub
ljmp
pop
or
xchg
adc
mov
mov
je
scas
in
and
add
loope
mov
mov
ficompl
dec
imulb
scas
adc
jp
cmp
arpl
mov
inc
clc
insb
cs
int
mov
cmp
negl
adc
adc
int
lea
adc
and
sbbl
dec
jne
mov
div
sub
add
mov
xchg
in
gs
idivb
xchg
and
mov
push
fistps
mov
cld
filds
cmpsb
insb
fidivl
test
fwait
xchg
int3
icebp
lds
xchg
mov
mov
or
pop
aad
iret
lret
ja
mov
mov
adc
int
rorl
int
sub
or
jle
aam
in
fmulp
int
int
call
sbb
dec
xchg
mov
or
imul
stos
repz
es
mov
fwait
sbb
xchg
fisubrl
aad
cld
cltd
fmuls
daa
int3
bound
inc
dec
into
mov
xchg
xor
lahf
fwait
fwait
test
test
aaa
shlb
xor
icebp
orl
fadds
sbb
cli
adc
roll
iret
in
add
rorb
xor
add
or
test
xor
jae
outsl
loopne
and
shrb
jae
cmp
iret
into
imul
fwait
adc
jae
jae
mov
nop
imul
jb
jae
rcll
push
pavgb
mov
outsb
outsb
cs
mov
push
std
decb
add
cmpl
outsb
outsb
outsb
lds
jl
ret
test
das
jne
dec
or
add
mov
jmp
fcompl
in
das
test
insl
push
dec
in
dec
test
push
fs
ds
fwait
lea
adc
sahf
leave
mov
ss
aam
jl
inc
out
mov
mov
xorl
fimuls
insb
outsb
outsb
outsb
sub
add
imul
dec
hlt
sub
imul
int
shr
loope
mov
loope
ss
mov
inc
nop
or
or
aad
sti
cmp
add
inc
lcall
mov
js
xchg
movsb
and
jae
jae
in
sbb
rcr
out
add
sub
push
mov
jae
push
hlt
mov
sbb
adc
out
jae
pop
xchg
push
xchg
pop
adc
outsb
outsb
outsb
lahf
sbb
pop
sahf
movsb
clc
arpl
fs
and
int
mov
mov
jle
xchg
push
jno
dec
outsb
inc
mov
test
pop
mov
or
pop
imul
mov
ficoml
insl
push
fisubs
xor
push
jle
jl
aaa
sbb
mov
in
jae
mov
push
dec
push
pop
mov
sahf
cmpsb
mov
int
ror
adcl
stc
out
outsb
pop
ret
jl
dec
inc
mov
in
cld
cs
adc
or
aaa
rol
in
arpl
jp
sbb
aaa
aaa
mov
dec
mov
xchg
test
jae
sub
cwtl
xor
fadd
mov
pop
lods
cmp
frstor
push
dec
mov
mov
in
in
inc
lods
fs
ljmp
mov
cmp
sarb
push
popf
xchg
or
cmp
fwait
fwait
clc
and
and
cmpsb
push
movsb
add
insb
scas
jo
cmp
mov
out
pop
lock
aam
mov
jne
mov
cltd
adc
pop
repz
in
xor
xor
pop
jmp
cltd
pop
orb
inc
adcb
sub
pop
out
out
push
jge
ds
adc
mov
andb
iret
out
outsl
mov
test
mov
scas
jne
scas
cli
fdivl
std
fsubrl
push
add
mov
out
outsb
outsb
outsb
xchg
mov
mov
cmpsl
jp
outsb
outsb
push
dec
adc
push
mov
icebp
insb
out
rorb
iret
mov
ja
aaa
aaa
mov
sahf
loopne
xchg
adc
into
mov
aaa
dec
jmp
in
pop
or
fdivrl
aaa
sahf
stos
ss
push
mov
clc
lret
loopne
fucom
decl
lea
jbe
sub
add
inc
leave
movl
out
cltd
stc
fists
sti
int3
jmp
je
dec
es
xor
xor
mov
das
dec
or
in
mov
clc
ss
out
dec
mov
cmp
dec
aam
scas
andl
jmp
aaa
aaa
aaa
mov
rcl
cmp
xchg
and
sbb
push
push
ds
aaa
out
xlat
jb
mov
xchg
fwait
fwait
fwait
fwait
inc
sti
adc
enter
fnstcw
lahf
fwait
scas
xchg
push
hlt
push
or
loope
fucomi
call
sti
je
repnz
pop
mov
mov
popf
inc
jne
fwait
jle
test
insb
ret
push
sbb
push
pop
cmc
das
in
fwait
fwait
fwait
fwait
mov
fsubr
sub
mov
arpl
push
or
ss
mov
jge
loopne
popa
dec
adc
jnp
push
les
inc
inc
mov
xchg
push
sbb
dec
fidivrl
ss
aaa
aaa
aaa
cmp
cld
dec
mov
loopne
test
mov
xchg
xorb
mov
aaa
mov
mov
xor
ret
push
mov
and
aaa
aaa
aaa
aaa
es
lcall
outsb
add
aaa
mov
xor
addr16
jnp
mov
cmp
out
mov
mov
int
adc
scas
jbe
popa
xchg
shrl
int
arpl
aam
and
fbstp
aaa
aaa
mov
mov
insb
push
filds
cltd
jmp
aaa
js
sti
jecxz
jae
inc
loopne
mov
ljmp
sbb
leave
inc
insl
inc
cmp
fucomi
mov
out
dec
loopne
rcr
aam
mov
outsb
aas
lds
xor
fwait
xchg
adc
aaa
aaa
aaa
aaa
and
jle
pusha
inc
fisubrl
jne
aaa
aaa
aaa
cmp
mov
lods
xchg
test
pop
ss
aaa
aaa
lret
xor
dec
data16
xchg
fwait
fwait
sbb
sbb
fcmovu
pop
sub
lods
gs
mov
cmc
mov
std
add
and
jl
pop
out
aas
int3
mov
enter
insb
jae
iret
ret
leave
push
inc
xchg
ss
mov
hlt
sti
jge
int
jae
popa
xor
sub
lret
pop
aaa
aaa
mov
inc
outsb
not
cmpb
mov
xor
sti
jge
scas
lods
inc
and
lahf
or
cmp
and
shll
sbb
mov
mov
sub
clc
cmpsb
push
push
mov
jle
mov
out
mov
vaddsd
lahf
sbb
iret
push
enter
pop
outsb
jle
aaa
idivb
pop
dec
daa
add
and
jge
cld
insb
xchg
test
lods
popa
ja
mov
jb
js
jge
xchg
nop
xchg
adc
sti
subl
roll
cmp
jae
jae
femms
ret
outsb
les
push
mov
in
addr16
pop
sub
xchg
or
adc
pop
fdivrl
sbb
pop
adc
inc
sahf
in
cmp
jp
fsubl
insb
pop
jbe
xchg
gs
mov
dec
jnp
daa
daa
std
pop
outsb
scas
cli
fnstcw
imulb
outsb
outsb
outsb
outsb
arpl
jbe
lea
dec
and
mov
insb
js
add
sub
insb
outsb
mov
or
xchg
das
inc
roll
push
adc
lcall
loope
jae
repz
xor
int3
dec
pop
inc
mov
loopne
jo
xchg
fisubs
fldt
loopne
mov
adc
bound
fwait
fwait
fwait
fwait
out
xchg
es
xchg
into
dec
add
fisttpl
fwait
fwait
fwait
daa
outsb
rcl
pop
cmp
addl
fwait
jl
pusha
add
inc
lret
jnp
fwait
fwait
fwait
fwait
test
lds
stc
cmpps
and
dec
xlat
jmp
inc
add
subl
lahf
shrl
testl
je
shrl
pop
or
pop
insl
push
sub
loop
jae
xchg
jecxz
bound
sarb
loope
mov
and
aaa
fmul
test
movsl
mov
mov
mov
ss
dec
clc
cmc
lds
jnp
ret
add
ret
mov
mov
stos
jecxz
cs
js
or
vpaddusb
xchg
pop
cmc
pop
sbb
pop
cmp
mov
icebp
mov
mov
fnsave
push
add
mov
sti
jge
scas
les
popa
and
jae
jae
mov
aaa
jmp
sti
and
in
lock
negl
pop
ss
sahf
fistpl
jne
dec
in
clc
jno
xchg
sub
gs
jmp
pop
notb
mov
mov
scas
jp
mov
jb
xchg
mov
pop
cmp
xor
jl
push
inc
dec
adc
into
ss
aaa
ja
stos
xchg
stc
mov
xchg
loop
jp
jl
push
movsb
sbb
adc
and
insb
outsb
fdiv
pop
iret
sbb
int
fistl
lock
mov
dec
mov
jl
fwait
jmp
mov
jmp
cs
sbb
aaa
aaa
xlat
scas
out
xchg
sbb
fwait
insb
cmp
pushf
test
outsb
outsb
aas
fwait
rcl
add
or
in
addr16
arpl
lcall
adc
xor
mov
out
add
loopne
cmc
mov
xor
push
loope
cmp
out
add
data16
outsb
ds
jbe
and
xchg
and
jns
ror
push
movsl
dec
in
inc
sbb
insl
shl
pop
push
aaa
mov
int
idivb
pop
mov
dec
mov
or
cmpl
test
xchg
hlt
dec
xor
jo
mov
pusha
repz
mov
jne
daa
aaa
aaa
aaa
aaa
mov
pushf
xchg
test
xchg
adc
push
mov
mov
and
fwait
or
cmp
pop
cmpsb
dec
mov
pop
mov
sub
out
filds
or
push
test
in
mov
push
or
std
xchg
xchg
mov
mov
insl
and
inc
addr16
mov
xor
sub
les
subw
jae
aad
mov
sub
andnps
das
mov
or
adc
mov
fwait
fwait
mov
jnp
pusha
arpl
or
aas
fwait
fwait
and
fimuls
pushf
int
sub
or
lock
jle
stos
sbb
adc
ljmp
out
jg
or
in
sub
adc
push
pop
sub
imul
cmp
xchg
stos
or
fstps
shrb
scas
inc
jo
ds
xchg
xchg
mov
jo
xor
mov
pop
iret
int
xor
mov
xor
sub
mulb
insb
xchg
ret
hlt
or
pop
iret
mulb
mov
fwait
fistpl
test
pop
xor
push
cmp
repnz
pop
fwait
fwait
fwait
fwait
int
mov
adc
xor
fwait
adc
cs
inc
sbb
cmp
fwait
fwait
fwait
fwait
pop
test
aam
int
push
mov
stos
xor
inc
in
in
jno
push
call
fwait
fwait
fwait
jo
pop
lcall
xchg
stos
scas
lea
sub
fsubl
mov
rcrb
sahf
lahf
int
addr16
inc
and
adc
sub
outsb
outsb
popf
mov
jnp
insb
fwait
xor
aaa
std
insb
les
jbe
or
cld
jmp
scas
lahf
aaa
aaa
aaa
aaa
rcrb
sbbl
mov
or
fldt
jl
sub
push
mov
aad
idivl
cmp
xchg
or
jae
imul
mov
fnstcw
sbb
call
pop
mov
stos
fdivs
jae
jae
add
pop
sbbl
add
push
neg
bound
out
lahf
xor
pop
push
push
mov
ror
iret
jae
sti
movsl
xchg
jle
mov
es
jae
in
addr16
ja
cmp
data16
push
clc
mov
in
inc
iret
xchg
push
dec
sti
jle
mov
fdivl
xchg
adc
movsb
and
negl
xor
lea
lea
out
mulb
cmp
fcom
jb
lret
cmp
inc
mov
jl
negb
dec
ret
enter
add
cmp
stos
cmp
sbb
mov
cmpsb
mov
adc
js,pn
and
mov
dec
xor
xchg
push
psubd
loop
mov
inc
jo
fdivrl
clc
cwtl
mov
or
push
sbb
jae
sti
movsl
jb
int
in
lret
sbb
out
lahf
in
mov
mov
stos
fidivs
sbb
inc
xlat
adc
pop
stos
sbb
jae
data16
es
push
stc
pusha
js
push
jmp
mov
lret
je
test
and
mov
mov
repz
int
push
es
push
insb
mov
xor
cmp
outsb
outsb
lahf
fneni(8087
mov
loop
xchg
fwait
xchg
dec
push
cmp
mov
and
shll
loop
fs
aas
js
movsl
adc
dec
cmpsl
arpl
sub
loope
cs
fdiv
mov
pop
inc
push
lret
jmp
sbbl
cmc
jge
jge
call
leave
pushf
sbb
jnp
lahf
in
sub
sbb
push
pop
cltd
xchg
push
outsb
pop
js
ficompl
fisttpll
pusha
imul
daa
mov
lahf
cmp
jbe
sbb
scas
out
mov
popf
cs
dec
add
fdivrl
arpl
mov
or
adc
loopne
mov
inc
fidivrl
fdivrl
and
sub
loope
pop
andb
cmp
push
stos
iret
xchg
mov
xor
mov
cmpsb
cmp
xor
scas
mov
mov
dec
ljmp
gs
hlt
mov
pop
push
pop
daa
adc
fmul
pop
pop
sahf
jl
lret
dec
outsb
outsb
outsb
pop
mov
and
jbe
sbb
pop
jl
test
fldenv
push
inc
sbb
lret
flds
ss
lock
cltd
fists
std
add
push
inc
adc
sub
xchg
movsb
mov
dec
and
dec
inc
shr
mov
pop
push
mov
sbb
jmp
cs
and
xlat
lcall
movsb
ss
xor
jae
jae
outsl
and
push
sub
sbb
test
jae
out
pop
inc
xchg
pop
scas
jmp
int
int
mov
ja
shrl
int
add
cltd
jl
lret
gs
dec
add
cmp
inc
jae
jae
push
mov
cmp
jecxz
loopne
loope
jae
jae
sub
in
xorl
mov
jae
jae
and
test
mov
mov
loopne
and
test
in
loope
addr16
arpl
inc
aas
andb
mov
shlb
je
mov
je
je
rcrl
xorb
int
in
int
hlt
jnp
sub
imulb
test
pop
stos
mov
pushf
cmp
xchg
mov
jecxz
mov
mov
int
fwait
pop
ret
lcall
cs
cvttps2pi
jge
cmp
and
inc
mov
rclb
mov
dec
dec
xchg
pop
mov
jo
mov
cmp
cmc
jns
and
fdivrl
adc
fnstenv
int
in
jns
fcmove
jl
xor
loope
push
pusha
je
or
push
and
inc
call
jnp
rcrb
sub
fisubrl
mov
lds
push
and
mov
repnz
add
push
sub
insl
test
jns
jmp
icebp
enter
lods
fdivl
lcall
inc
jle
ret
add
jae
dec
sbb
mov
pop
xlat
adc
mov
movsl
into
jp
jecxz
cli
cld
mov
lods
inc
aaa
aaa
aaa
aaa
rolb
inc
push
mov
cmp
ds
aaa
jge
je
xchg
fwait
fwait
fwait
fwait
adc
lret
loopne
push
out
inc
pushf
fwait
xlat
mov
cld
mov
mov
jle
mov
pop
mov
xchg
xchg
mov
movsb
sbb
ja
pop
rcrl
mov
xor
aad
movsl
lock
add
inc
cmp
out
mov
mov
outsb
cli
add
sub
mov
stos
call
dec
push
ficoms
out
sub
jp
dec
push
xor
loope
push
out
rorb
mov
shlb
cmp
int3
aas
dec
fdivl
rcl
sub
mov
fistps
popl
out
pop
and
aaa
aaa
aaa
aaa
push
sub
sub
pop
fdivrl
aaa
aaa
addr16
add
rcll
sti
fcoml
or
and
jg
dec
adc
and
add
pop
xchg
out
cmp
stos
add
aaa
cld
insb
adc
pop
add
inc
add
inc
mov
fisubrl
pushf
cmpl
cli
fildl
cld
stos
push
adc
icebp
cmpsl
cs
fsubr
mov
outsl
pop
loope
faddl
into
data16
test
or
fucomi
roll
sub
test
mov
mov
jnp
cmp
cmpsb
out
mov
mov
jle
sub
fcompl
fidivs
sbb
mov
jae
pop
cli
fwait
push
jnp
data16
jae
int3
inc
add
add
loop
mov
mov
adc
lcall
popa
ds
mov
aaa
sbb
fimull
std
mov
adc
mov
mov
and
loope
subb
mov
pop
xchg
and
sbb
out
testb
popf
out
stos
mov
xchg
jno
popa
insl
into
int
das
movsl
mov
mov
cmp
mov
decb
xchg
pop
or
mov
idivb
adc
jecxz
movsl
mov
xchg
out
out
xchg
and
pop
andb
pop
dec
cwtl
scas
mov
out
jl
pop
push
aaa
mov
es
iret
and
xchg
dec
add
jb
jb
jae
adc
push
xchg
lock
xchg
hlt
mov
sti
sahf
mov
inc
ljmp
sub
cmpsl
xor
push
cmp
insb
aam
jbe
pop
es
fcompl
jl
pop
push
pop
lcall
mov
call
cld
push
pushf
cmp
push
pop
icebp
mov
movsl
pop
sarl
lret
fisttpl
imull
fcmovb
ja
jle
pop
mov
test
aas
mov
jae
jae
test
les
stc
mov
addr16
or
js
jns
push
mov
imul
jnp
lahf
daa
jl
jo
and
adc
shrb
testb
adc
insl
lods
aas
jno
stos
lcall
mov
xor
scas
jle
dec
and
lods
lock
aas
fwait
fwait
and
ret
imul
push
divb
lcall
test
in
out
out
fidivrl
rclb
jae
xlat
gs
pop
mov
in
mov
jmp
shll
into
out
add
lahf
jle
iret
int3
or
push
dec
orl
sbb
jae
ret
daa
cmp
scas
cld
movsl
lock
sti
jge
inc
sbbb
mov
les
or
jge
insl
lahf
sub
outsb
outsb
outsb
outsb
push
shll
ljmp
mov
das
shrl
sti
fsubrl
mov
xchg
mov
adc
mov
test
hlt
lds
jae
jae
inc
nop
mov
sub
addr16
or
aas
dec
pop
push
fnstenv
add
loope
jle
inc
and
pop
aas
aam
pop
pop
shrl
outsb
dec
pop
lods
icebp
lcall
pop
mov
js
into
push
jmp
iret
jg
pop
icebp
mov
insb
sub
mov
hlt
adc
loop
mov
int
or
addb
or
and
xor
jle
cmp
ficoms
cld
jb
push
mov
sub
sbb
bound
push
mov
aas
mov
int
mov
xor
sahf
arpl
js
inc
push
sub
movsb
iret
adc
adc
loop
sub
pop
xchg
fwait
fwait
fwait
stc
jmp
mov
cmpsl
aam
jle
xchg
ds
jle
test
adc
push
mov
mov
ja
mov
aad
test
out
aaa
aaa
aaa
lods
les
ror
popf
hlt
int3
test
dec
push
pop
hlt
add
sbb
pxor
and
sbb
pop
not
jb
popa
adc
out
popf
sahf
int
aas
sub
shlb
movl
loopne
jmp
sti
imul
cmp
mov
mov
movsb
xor
hlt
jecxz
jae
push
scas
test
cmp
xchg
xchg
add
lret
push
jae
sub
fwait
fwait
fwait
out
push
test
cmp
cltd
push
rolb
lock
insb
cmp
jle
xor
mov
adc
or
arpl
cmpl
dec
fisubl
mov
mov
hlt
cmpsl
icebp
mov
das
rorl
into
dec
out
out
addr16
out
ja
int3
imul
fcmovne
push
mov
dec
orb
xorb
inc
fdivl
js
nop
std
mov
add
js
clc
mov
fbld
add
cmc
cld
insb
outsb
outsb
rorb
test
sub
imul
enter
hlt
inc
in
scas
ljmp
xchg
fadd
push
mov
int
jae
pop
inc
inc
adc
inc
adc
mov
int
inc
sub
xchg
mov
or
outsb
jp
cmp
ds
repz
cmp
mov
loop
loope
loop
push
fwait
fwait
mov
out
sbb
inc
cli
mov
jle
add
push
roll
mov
mov
cs
inc
push
bound
pop
fs
mov
push
xchg
add
fiaddl
jmp
jecxz
mov
mov
imul
pop
int3
jg
ljmp
es
mov
in
in
mov
test
jmp
add
cmc
mov
mov
jle
iret
es
inc
xchg
mov
iret
jo
clc
fsubl
pop
xchg
int
jae
stos
testb
cld
insb
pop
xchg
mov
sbb
inc
popa
xchg
sbb
cmp
sub
cwtl
add
or
scas
mov
cs
ja
jl
leave
cli
insb
outsb
outsb
test
fdivl
shll
xchg
jo
jo
xor
out
cmpsb
mov
jb
mov
out
fs
mov
jnp
jg
xchg
ss
and
mov
push
xor
xchg
mov
loope
movsl
addb
push
test
push
mov
lea
movsb
pop
jae
jae
mov
pusha
adc
mov
jl
sbb
and
add
or
lahf
mov
out
sti
adc
mov
ja
add
fimull
aaa
movsb
and
add
std
insb
outsb
xchg
es
insb
das
jne
push
jmp
mov
cmp
ret
add
es
sbb
lahf
mov
out
out
and
mulb
out
out
mov
mov
movsl
inc
jae
shl
xchg
jl
cltd
popf
enter
jae
or
jecxz
pop
aam
aaa
aaa
mov
mov
imul
sti
jle
mov
cmp
fsubl
clc
cmp
loopne
jae
or
lcall
int3
pop
idivb
jle
adc
fwait
stos
test
movsl
and
cmp
adc
loope
aaa
mov
push
and
dec
or
mov
push
and
jle
in
add
or
movsl
xchg
or
jno
stc
fdivl
mov
pop
cmc
adc
jae,pn
mov
sahf
push
sbb
iret
ds
aaa
mov
bound
cmp
lcall
fwait
fwait
fwait
sub
mov
sti
jae
push
pop
mov
repnz
addb
rcrb
jo
mov
mov
test
in
fldt
faddp
testb
clc
sbb
iret
int
lahf
dec
movsl
mov
outsb
out
sar
sbb
pop
pop
aam
lahf
int
pop
sbb
data16
cmpsb
sbb
fwait
cmp
stos
sub
fbstp
in
adc
and
dec
pop
les
jle
fwait
shrl
ret
pop
iret
out
lret
lahf
bound
sahf
inc
fldenv
aaa
iret
jp
stos
test
jle
mov
aad
mov
out
ljmp
xchg
sub
xlat
xchg
sbb
rolb
cmp
mov
mov
popa
sub
cmp
out
out
fs
push
and
dec
test
out
test
fsts
xor
pop
sti
push
sbb
insl
rclb
mov
shrb
sbb
aaa
loopne
adc
or
and
divb
scas
xlat
es
xchg
xchg
out
mov
inc
test
imulb
jg
int
out
xor
and
mov
int
int
leave
cmp
dec
jnp
cmp
pop
adc
adc
dec
cs
cmc
test
push
sub
mov
iret
ds
mov
or
cmp
pop
add
add
dec
inc
xor
into
aaa
aaa
mov
stos
mov
inc
rcrl
dec
push
xchg
xchg
pop
add
jle
aaa
adcl
out
jbe
sbb
iret
call
sbb
dec
xor
jl
iret
int
xchg
lahf
inc
mov
outsb
outsb
pop
inc
in
sahf
jl
int
fdivr
push
dec
push
in
mov
addr16
or
inc
pop
adc
mov
sub
xchg
inc
ret
cld
fneni(8087
jae
jmp
or
sub
test
xchg
out
jae
in
jae
jae
cmp
push
scas
dec
or
cmpsl
ss
xchg
dec
insb
outsb
mov
lods
out
ljmp
ds
cli
repnz
xchg
push
sub
xor
and
sbb
aam
sbb
iret
in
jae
inc
test
xor
test
pop
sub
out
or
mov
in
out
icebp
shl
inc
sarl
push
inc
jo
popa
cld
clc
and
jno
subl
int
in
pop
and
ljmp
jecxz
aaa
aaa
mov
adc
lcall
hlt
jae
dec
out
clc
push
cmp
lods
data16
adc
outsb
outsb
outsb
outsb
mov
pop
or
faddp
push
repnz
pop
fdivrl
jge
scas
inc
addl
outsb
cs
pushf
out
lret
imul
push
push
adc
fwait
rol
xchg
lea
lock
mov
fwait
sub
shrl
dec
mov
int
int
out
push
mov
repz
sbb
int
int
cmpsb
add
xchg
sbb
cmp
hlt
inc
aaa
aaa
mov
enter
jle
repz
int
mov
fcomip
jge
repnz
xchg
mov
xor
cmp
mov
cmp
mov
out
data16
iret
adc
iret
int
inc
cmp
popf
mov
adc
push
out
out
loopne
call
insl
sub
xlat
jo
into
out
fs
stos
call
outsb
cs
rorb
mov
mov
add
outsb
outsb
sbb
push
inc
mov
mov
notl
and
dec
mov
jge
mov
int
mov
lea
out
push
mov
push
loop
jmp
iret
xchg
lret
mov
inc
xchg
sahf
sbb
ds
scas
inc
mov
sub
sti
jle
dec
repnz
fwait
adc
subb
jae
jae
xor
sbb
das
lret
mov
call
adc
jo
xchg
or
jae
jae
dec
ss
cmc
cmp
jge
mov
shlb
add
outsb
outsb
scas
clc
push
pushf
clc
xchg
ss
scas
and
adc
outsb
outsb
outsb
outsb
repnz
pcmpgtd
pop
mov
cmp
push
addr16
jp
out
out
movsl
adc
xchg
es
mov
out
out
aas
out
dec
jg
sbb
ja
outsb
jg
push
push
fisubl
pop
icebp
pop
js
fsubrs
daa
jle
adc
mov
cld
sub
icebp
xor
int3
clc
arpl
sub
jbe
inc
pop
adc
cli
adc
out
out
or
xchg
movb
iret
jge
mov
mov
mov
ljmp
xor
mov
testl
loopne
cltd
push
sti
filds
ds
aaa
pop
xor
cmpsb
repz
add
mull
movsl
icebp
and
push
stc
popf
dec
out
out
pushf
mov
cmpsl
mov
mov
out
cs
test
mov
iret
out
or
jle
add
movsb
enter
das
mov
pop
aam
lods
jp
testb
and
clc
shl
mul
loop,pn
js
imul
imul
sub
mov
adc
sahf
dec
mov
adc
fwait
fwait
fwait
fwait
xchg
push
lret
clc
test
pop
adc
fwait
dec
iret
mov
stos
aad
dec
push
add
push
aaa
aaa
push
std
enter
jle
mov
xlat
and
sahf
mov
aaa
dec
add
inc
stos
in
jle
cli
loope
std
xchg
rcrb
push
das
testb
clc
or
jnp
lret
jge
pop
and
int3
call
out
cmp
gs
mov
xor
rcr
mov
mov
pop
clc
mov
inc
out
mov
xchg
push
mov
jge
outsb
jg
xchg
add
out
test
add
xchg
loope
xor
mov
fsubp
out
mov
jp
in
insb
mov
mov
iret
out
sbb
push
sbb
cmp
jbe
cmp
fwait
fwait
insl
mov
ret
pop
mov
push
outsb
outsb
outsb
outsb
cmp
adc
pop
daa
adcb
xchg
nop
mov
popa
js
inc
inc
cld
fisttpl
jecxz
mov
jno
mov
fwait
fwait
fwait
sub
inc
push
fdivs
outsb
lahf
and
pcmpeqw
xor
adcl
out
scas
push
xor
adc
push
fcompl
xchg
roll
mov
ja
es
fdivrl
das
adc
cltd
sub
push
xor
hlt
mov
into
out
xor
imul
cmpb
les
push
cld
insb
outsb
outsb
lods
aam
and
arpl
mov
hlt
fdiv
inc
sahf
jecxz
icebp
enter
int
int
pusha
les
push
dec
sub
aaa
mov
fisubrs
jno
repz
inc
xor
mov
rolb
ss
push
out
add
sub
fmul
out
out
sbb
adc
mov
sti
push
out
adc
jbe
outsb
mov
jl,pt
iret
and
getsec
mov
xchg
mov
cmp
jmp
pop
test
and
dec
repnz
lock
sar
idivl
xor
shr
sub
ljmp
mov
mov
popf
hlt
or
dec
or
cmp
test
mov
int3
pop
clc
clc
fmull
sub
or
add
xor
sub
negb
lahf
mov
sub
jo
push
cli
fdivr
mov
inc
mov
push
and
outsb
outsb
and
loop
sub
lds
inc
insb
outsb
outsb
outsb
jae
mov
cmpsl
jg
gs
icebp
dec
std
repnz
fiadds
add
ljmp
out
mov
xchg
dec
mov
or
jae
jae
nop
negb
lret
inc
lea
ds
loop
loope
sbb
mov
sbb
mov
mov
jae
dec
sbb
sbb
out
sbb
data16
loope
cmp
cmpsl
sbb
into
xchg
jae
paddsb
xchg
ds
shlb
rcl
jnp
mov
cli
adc
outsb
aas
adcb
lods
daa
clc
sbb
ljmp
rolb
out
add
lock
insb
lahf
push
xchg
mov
mov
cmpb
adc
sahf
fwait
fwait
or
sub
test
push
pusha
add
mov
mov
pop
cmp
sti
ds
pop
cmc
mov
add
arpl
push
movsb
pop
aas
fisttpl
dec
fldcw
xchg
arpl
xchg
neg
inc
lret
int
aad
mull
enter
push
out
out
mov
xor
sub
js
pop
aam
pop
xor
call
out
out
mov
or
out
out
dec
scas
fwait
mov
push
sbb
pop
aam
mov
pop
jbe
dec
mov
mov
mov
cwtl
lahf
pop
stos
pop
outsb
clc
ficompl
jmp
aad
adc
xchg
out
std
insb
dec
mov
push
cmc
sbb
push
popf
fldt
cmp
inc
mov
mov
cmpsb
mov
popf
ds
mov
xlat
aam
fmull
cmp
pop
xor
jae
jae
jne
xor
orb
push
int
inc
loop
jae
stos
or
adc
sub
mov
push
xchg
adc
out
adc
xchg
inc
movsb
xor
lods
out
sbb
mov
out
mov
out
addr16
inc
inc
or
out
out
lock
pop
jle
movsl
dec
lahf
iret
out
out
pusha
add
fs
ja
push
ficomps
dec
xchg
das
jle
cmc
out
mov
adc
fwait
test
fnstcw
sub
int
pushf
xchg
adc
js
adc
in
fisubrs
and
mov
lea
push
lahf
stos
mov
out
out
mov
je
repnz
push
test
iret
out
out
and
push
inc
pop
cltd
into
es
push
shrb
xor
push
jne
inc
inc
jle
jae
test
gs
out
out
outsl
xchg
dec
sub
xchg
addb
add
cli
or
pandn
insb
xchg
into
cmpsl
pop
jmp
jle
in
lret
sbb
push
inc
push
out
add
dec
xchg
cmp
mov
out
xchg
ds
and
out
sahf
mov
int3
mov
ds
mov
es
in
daa
test
jmp
inc
or
jae
sbb
repz
dec
bound
cld
mov
push
mov
jp
shlb
test
sub
fsubrl
into
add
sbb
xor
pop
push
or
sarb
jnp
pcmpeqd
clc
or
pop
sub
ds
aaa
cmp
cwtl
xchg
jle
mov
fwait
fwait
fwait
fwait
inc
ja
and
xor
fwait
cmp
aaa
ret
scas
mov
fmul
int
int
incl
ds
arpl
iret
int
int
ljmp
mov
pop
mov
lods
push
jge
loop
inc
dec
out
xchg
jg
mov
std
shlb
mov
or
aaa
shll
or
adc
insb
dec
mov
jle
aaa
aaa
popf
jae
aad
inc
inc
into
or
fwait
neg
jbe
mov
jae
push
cmp
pop
push
pop
fistpll
hlt
lock
aaa
inc
imul
dec
push
xchg
cmc
loopne
cmp
ss
and
scas
pop
adc
out
push
sbb
clc
dec
arpl
ljmp
enter
test
and
cmp
xor
jecxz
out
mov
xchg
jecxz
lret
lcall
and
into
cmp
cmp
dec
clc
into
stos
xor
cmp
cmp
push
in
mov
xchg
shl
out
fildll
xchg
xor
test
pop
pop
ret
iret
out
xchg
push
add
in
pop
inc
dec
lock
nop
mov
je
iret
in
xor
mov
xor
inc
scas
xor
jle
mov
adc
ja
test
cli
sub
and
push
in
jae
fsts
ficompl
std
clc
lret
sbb
out
mov
xchg
icebp
pop
mov
fucomip
pop
int3
fstpl
push
xor
adc
aad
dec
sub
jae
xchg
hlt
loop
daa
lock
jle
adc
mov
ss
pushf
popa
out
fldl
call
dec
lahf
mov
xor
clc
enter
inc
outsb
fs
mov
lock
cs
into
pop
jno
xor
out
out
gs
in
push
sbb
push
ja,pt
jge
iret
out
out
pop
or
or
xchg
cli
fcompl
fbld
pop
testb
les
repz
out
xor
fs
pop
cmp
ds
inc
loope
mov
push
pop
iret
out
inc
pushf
cmp
mov
and
inc
xchg
idivb
shl
negb
xchg
sahf
inc
xlat
insl
inc
jle
ret
loop
mov
inc
mov
movl
icebp
aaa
mov
sbb
bound
dec
pop
push
sar
aaa
aaa
aaa
xor
add
inc
and
bound
ja
fistpll
jae
insb
adc
dec
mov
outsb
outsb
imul
aas
mov
jecxz
iret
pop
cs
or
in
insb
sub
notl
push
hlt
sbb
idiv
sahf
or
fidivl
or
out
fidivs
fildl
stos
add
add
adc
in
fwait
fwait
fwait
fwait
enter
sub
out
fwait
fwait
fwait
fwait
xorb
mov
lods
movsl
dec
call
outsb
sbb
call
sarb
sbb
and
fstpt
mov
ret
iret
pushf
stc
sub
push
outsl
int3
out
jbe
push
sahf
or
hlt
sbbl
push
xchg
cli
mov
shlb
les
clc
ds
ja
push
jg
cmpsl
shrb
fcompl
or
lds
in
test
adc
jnp
rcrb
int
int
std
sbb
notl
shll
mov
sbb
add
dec
jbe
jnp
lds
sahf
movsl
lahf
int
femms
push
test
outsb
outsb
cs
bound
push
adc
clc
sub
insb
outsb
sub
and
inc
pop
aad
imul
test
fcompl
subl
mov
outsb
outsb
jg
pop
and
rorl
lea
mov
push
jb
and
filds
xor
adc
push
dec
stc
or
pop
test
mov
lcall
inc
in
iret
int
iret
aaa
out
out
jb
imul
and
cli
fdivrl
sub
movsl
add
insb
outsb
outsb
cs
push
ds
dec
loop
pop
jmp
insb
std
imul
lock
aas
cltd
sbb
fwait
lds
fidivrs
dec
or
std
fsub
repz
addr16
pop
add
popf
xor
xor
je
xchg
mov
insb
cmp
adc
sbb
or
movsl
loop
and
out
out
iret
js
inc
xchg
xchg
mov
dec
pop
ret
out
out
inc
pop
mov
pop
popa
lcall
fcmovne
out
push
xor
xchg
sub
fildl
sahf
pop
lahf
xor
les
lods
inc
aas
fisttpl
mov
xchg
test
push
nop
jno
push
jae
jae
push
repz
jmp
push
jae
jae
pop
lahf
mov
mov
jae
jae
adc
lock
fs
daa
mov
jae
jae
shr
cltd
and
clc
lret
stos
inc
inc
mov
in
cs
out
out
mov
addr16
jl
sbb
shrb
jo
hlt
add
mov
mov
xchg
popf
mov
cltd
fcomps
jbe
notl
bound
sbb
loop
sub
out
and
cltd
fcos
jmp
iret
out
ds
mov
xchg
rol
js
dec
es
loop
outsb
lahf
fwait
ror
adc
fs
dec
movd
outsb
pop
adc
addr16
out
jmp
outsb
xchg
ret
mov
inc
inc
push
in
testl
aam
xorb
int
icebp
cmp
out
nop
mov
sbb
int
adc
lret
push
lahf
xor
je
mov
push
pop
rcll
aas
cmp
pushf
mov
add
int
fbstp
idivb
shlb
inc
jns
mov
fldt
test
adc
or
aam
outsb
outsb
outsb
mov
mov
mov
loop
outsb
outsb
outsb
jl
lea
mov
jl
outsb
outsb
outsb
outsb
lea
jp
inc
mov
icebp
lret
mov
adc
pop
shlb
mov
add
negl
outsb
outsb
outsb
outsb
lds
dec
mov
mov
outsb
outsb
outsb
sahf
xor
push
mov
imul
shl
lret
mov
mov
ja
xor
dec
das
sbb
pop
cli
pop
mov
fs
xchg
lahf
fcmovne
out
mov
mov
outsb
add
out
testb
add
cmpsb
pop
dec
fcmovne
and
dec
dec
in
add
adc
add
sub
lcall
fwait
add
insl
fldlg2
loop
xchg
mov
sahf
or
fs
out
testb
test
cwtl
pop
mov
mov
ret
out
shrl
pop
out
xchg
or
loop
test
into
xor
sbb
repnz
outsb
add
and
ret
inc
sbb
xchg
xchg
xor
int
aam
jl
pop
inc
inc
and
inc
dec
jp
iret
int
test
pushf
or
jo
jae
xchg
stos
out
scas
fadds
movsb
push
jge
push
sub
ret
sbb
outsb
outsb
outsb
outsb
sbb
pusha
mov
aas
and
mov
outsb
outsb
outsb
jbe
aaa
roll
jns
sbb
idivb
push
mov
insb
sti
xchg
ss
rcl
aam
or
fdivrl
pop
call
shl
cmp
fcompl
loop
mov
fldt
js
int3
test
jae
push
xchg
sbb
out
xchg
push
jnp
ret
adc
sub
inc
iret
int
int
push
out
sub
pop
adc
cli
sub
push
shufps
mov
cmp
notb
sahf
lock
ljmp
push
outsb
aas
sbb
repnz
out
inc
pusha
lods
enter
xchg
outsb
outsb
outsb
outsb
push
nop
popf
dec
shll
add
push
add
std
insb
outsb
outsb
inc
mov
add
sbb
repnz
mov
rcl
mov
int
icebp
jns
hlt
xor
fildll
xor
int
in
leave
or
pusha
xchg
push
test
int
int
pop
dec
xor
scas
xor
mov
int3
xlat
iret
mov
add
js
in
testl
pusha
xor
pop
mov
mov
dec
mov
adc
sbb
cmpsb
inc
insb
pop
cmpsl
filds
jo
push
iret
int
aas
inc
js
jmp
cli
adc
push
adc
cwtl
insb
pop
stos
or
decb
mov
adcb
icebp
mov
std
or
cmc
pop
jecxz
dec
jns
cmovge
add
aaa
fstpt
ljmp
inc
mov
int
jae
cs
mov
or
repnz
shl
push
inc
lahf
int
and
in
mov
aam
clc
jle
loopne
loopne
push
aam
ljmp
mov
test
jl
jge
outsb
out
inc
mov
jbe
aam
popf
out
fidivs
insb
hlt
ja
dec
jno
fwait
fwait
fwait
cltd
mov
sub
lods
and
sbb
fwait
fwait
imull
mov
ja
ds
bound
jl
cmp
inc
das
out
inc
cmp
adc
out
out
outsl
add
mov
jae
jae
addr16
and
xchg
dec
out
pop
test
adc
iret
cmp
out
out
jecxz
iret
push
shrb
mov
pop
shlb
push
inc
add
negl
outsb
das
icebp
icebp
das
fimuls
mov
or
outsb
push
pop
xor
addb
out
divb
inc
es
xchg
popa
lea
in
xchg
add
ss
jp
aas
pop
jmp
inc
or
dec
mov
and
lock
mov
push
aas
jl
jecxz
cs
xlat
jle
sub
movb
and
scas
cmp
leave
xor
mov
jnp
inc
test
daa
cwtl
lods
cltd
in
out
scas
mov
sbb
rcrl
ret
rcll
mov
jge
in
pop
xor
dec
sbb
outsb
out
ljmp
mov
add
aas
mov
jno
dec
jae
fnstcw
nop
push
pop
cmp
test
lahf
inc
mov
imul
xor
inc
out
out
repz
dec
jp
fwait
inc
in
mov
shl
ret
scas
cmc
test
daa
mov
in
cmc
push
and
sahf
int
or
hlt
mov
ljmp
dec
xor
test
or
in
xor
adcl
jae
sti
enter
xor
xor
jae
jae
push
cmc
outsl
pop
adcl
test
sahf
insb
sbb
scas
mov
push
xchg
mov
or
xlat
xchg
aaa
aaa
pop
bound
jo
adc
push
adc
outsb
outsb
jle
cmp
xchg
sub
pop
sub
testb
outsb
sub
xor
fistpl
sahf
int3
fidivrs
std
xlat
mov
int
int
gs
rcll
out
testb
cmp
loopne
das
push
scas
iret
rcrb
nop
lock
test
jecxz
sti
add
mov
inc
cmp
fcom
leave
icebp
xor
ss
mov
in
jbe
mov
sub
jle
xchg
mov
loope
mov
sti
fsts
mov
in
adc
pop
fdivrp
fldcw
mov
lds
cmp
jnp
mov
call
sub
and
ret
push
xchg
inc
cs
neg
jle
dec
rcrl
mov
mov
mov
out
cmpsb
and
xor
mov
sbb
xchg
push
mov
sub
into
xchg
add
dec
sbb
sub
iret
divb
pushf
test
push
shll
xchg
sahf
or
jle
mov
fdivrl
jbe
jnp
sub
pop
cmpsb
jp
fcompl
pop
icebp
pop
call
mov
dec
jae
jae
pop
jp
jp
xor
inc
lods
addr16
lods
mov
popf
add
idivl
loope
adc
mov
iret
mov
rcrl
or
pop
jg
sub
jmp
mov
fnstsw
aaa
ds
mov
cltd
sti
dec
int
jb
insb
sub
cltd
pusha
inc
fidivs
sti
xor
push
inc
roll
cld
inc
out
jae
stos
subb
pop
cmp
lods
addr16
out
lds
in
xlat
add
inc
jle
mov
repz
jmp
fwait
fwait
mov
pusha
jg
sbb
jge
ds
push
mov
lahf
test
mov
mov
loop
sbb
mov
stos
pop
xor
pop
inc
dec
sub
add
es
mov
lcall
sub
dec
int
nop
dec
test
inc
insb
outsb
outsb
aas
add
adcb
fs
jp
mov
divb
inc
loope
divl
in
jae
testl
and
bound
pop
hlt
ljmp
push
push
mov
aam
xchg
repz
push
rorb
mov
dec
inc
add
fwait
icebp
and
cld
bound
jbe
mov
pop
stos
dec
mov
mov
test
xor
pop
xchg
fs
out
scas
or
adc
cmp
imul
cli
pop
andb
rcl
inc
jg
test
mov
ret
cmpsb
cld
pop
test
shll
cmc
inc
mov
jae
sarl
std
mov
jnp
cmp
mov
cli
outsb
in
cmp
in
addr16
xchg
push
mov
out
iret
aad
pop
shlb
lcall
in
out
sub
mov
mov
mov
add
roll
pushf
fwait
fwait
cld
dec
pusha
daa
or
mov
fstps
and
test
clc
fwait
fwait
fwait
fwait
jmp
jecxz
jbe
repz
outsb
lahf
fwait
movsb
data16
test
cmpsb
aas
mov
mov
xor
jns
dec
sbb
call
push
ds
jbe
add
xor
xor
aaa
aaa
jle
scas
cmpsl
in
orl
mov
jl,pt
test
dec
xor
iret
les
cmc
cmp
mov
mov
fwait
sub
cmp
aas
pop
pop
testl
fistps
out
clc
shlb
and
outsb
outsb
outsb
sub
and
pusha
xchg
mov
aaa
jl
pop
xor
push
jg,pn
lcall
call
jg
cmp
iret
int
lretw
push
dec
out
cmp
rcr
fdiv
jo
pop
jo
icebp
push
sub
in
and
movsl
dec
or
sub
ret
dec
pop
xor
or
icebp
jo
nop
mov
mov
mov
sub
mov
lock
aam
shr
add
and
das
fsubrl
stos
xlat
daa
loope
dec
daa
push
sbb
jae
loope
pop
jo
cli
fwait
cmc
sub
outsb
outsb
outsb
sbb
stos
loope
shll
fs
mov
std
leave
xor
xor
mov
jmp
jg
fwait
fwait
jmp
mov
sbb
popf
repz
push
in
xor
lods
addl
fwait
fwait
sub
addr16
in
pusha
xchg
and
fwait
int3
lret
sbb
jb
mov
pushf
fwait
fwait
jmp
mov
dec
xchg
or
ficomps
push
mov
out
arpl
in
dec
scas
pop
enter
out
sti
pop
out
movsl
subb
pop
dec
mov
int
xor
mov
push
mov
rcl
cs
insb
ss
int
stos
and
es
loopne,pn
jae
cmpb
inc
pushf
clc
sahf
int3
ss
jae
jae
dec
mov
lock
dec
mov
jae
or
inc
test
pop
lds
ficoml
sbb
push
jecxz
call
int3
out
mov
jge
pop
fdiv
xchg
fwait
add
sub
nop
push
adc
fcoml
sbb
jg
movsb
loop
jp
out
notb
subb
repnz
mov
jbe
xor
cli
mov
inc
loopne
cmp
sub
mov
clc
add
lret
mov
dec
jge
mov
shl
nop
lds
adc
cwtl
cli
lock
lret
pop
imul
push
in
cmp
or
inc
push
in
push
lret
xor
pop
mov
outsb
push
mov
inc
mov
das
fxtract
mov
mov
test
int3
xor
jge
aas
jmp
push
mov
push
fmull
fcompl
pop
bound
out
and
out
loop
sbb
mul
mov
jp
cmp
or
cli
loop
clc
fldlg2
xchg
scas
pusha
sbb
mov
cwtl
pusha
mov
mov
xlat
shl
mov
hlt
mov
jo
test
jle
int
mov
xchg
mov
jl
push
inc
dec
mov
push
test
dec
fistpll
sub
int
xchg
popf
mov
push
push
push
or
lret
int
dec
addr16
cmpsb
and
bound
imul
xchg
in
lcall
fdivl
loop
shl
sbb
clc
mov
enter
dec
mov
test
mov
add
in
or
orb
or
les
iret
mov
cmpsl
notb
push
cmp
int
int
ds
mov
ret
mov
mov
pop
lock
lods
adc
sarb
sub
jae
test
adc
jae
jae
arpl
sbb
stc
mov
dec
dec
jae
jae
cwtl
xchg
mov
push
sub
sbb
movl
ds
cmp
sti
mov
add
pop
icebp
lret
cmp
andb
js
fcomps
int3
xor
inc
sub
fmul
adc
int
or
mov
es
xor
aas
fwait
fwait
fwait
cwtl
fidivrl
ja
pop
mov
and
outsb
outsb
pop
cmpsb
movsb
aad
into
sub
dec
lods
fildll
jl
lcall
sbb
pushf
cs
pop
xchg
fistl
cmp
pop
mov
mov
and
fwait
pushf
lock
je
jo
jbe
mov
int
int
in
sub
lods
fsubr
xor
test
addr16
and
push
dec
sbb
xor
jo
clc
fdivl
push
ss
jp
mov
outsb
out
xchg
aam
or
push
mov
jb
mov
cmc
sbb
inc
scas
outsb
pop
shlb
cmp
fidivs
loope
fcompl
and
mov
cltd
or
mov
xlat
sbb
xchg
sub
cli
iret
mov
jo
orb
int
add
movsl
decl
pop
jnp
out
xchg
sbb
ret
mov
out
pop
cmp
imul
out
mov
inc
arpl
std
push
out
cli
lret
add
sbb
push
dec
or
jge
or
popl
dec
jae
ret
sbb
inc
jne
test
shll
adc
leave
jno
add
xor
andl
outsl
push
adc
aaa
ja
mov
push
lods
adc
shll
out
push
dec
pop
inc
xor
dec
inc
mov
mov
imull
inc
mov
clc
sub
lock
adcl
add
pop
mov
shlb
cmc
or
sbb
mov
shll
ds
data16
and
inc
cmp
dec
xchg
outsb
outsb
outsb
mov
sub
jo
stc
cld
insb
outsb
mov
dec
mov
repz
xor
mov
shll
lahf
lahf
das
mov
dec
movsl
xchg
rclb
jge
or
mov
cs
les
bound
dec
or
jp
add
neg
pop
testl
jmp
out
and
stos
shl
sub
into
int
jb
xor
mov
div
mov
mov
mov
sbb
dec
xchg
ror
out
adc
fwait
or
xchg
push
add
das
push
jo
lcall
and
cmp
outsb
jg
ja
out
mov
dec
mov
jp
jle
pop
sbb
pushf
jge
outsb
outsb
push
xchg
mov
sbb
dec
insb
push
pop
lock
add
jp
jmp
out
fisttps
inc
jb
fldt
scas
clc
push
lret
push
pop
inc
repz
inc
lret
cli
insb
outsb
jbe
enter
arpl
jo
out
dec
test
idivl
call
cs
inc
mov
xchg
cmpsl
inc
mov
add
ss
mov
int
add
hlt
push
dec
push
push
or
or
mov
dec
orb
int
dec
sub
bound
stos
jge
movb
nop
jbe
cmc
hlt
mov
adc
jle
pop
call
fmulp
in
dec
jecxz
test
add
sbb
mov
in
mov
fisttpl
mov
add
mov
outsb
outsb
insb
or
pop
add
xchg
loope
ljmp
aad
inc
xor
ds
lock
jge
shrb
adc
leave
insl
cmp
push
out
clc
xchg
js
jle
aas
adc
jge
mov
xchg
loope
or
mov
shll
mov
rolb
js
fnstenv
xorb
jle
scas
shr
dec
mov
add
adc
dec
xchg
push
outsb
cmp
dec
xlat
divl
and
mov
ror
out
xlat
sub
xor
outsb
outsb
outsb
outsb
or
mov
fsubs
sbb
push
stos
outsb
outsb
outsb
outsb
cwtl
insb
shrb
out
xor
out
mov
out
add
push
das
add
xlat
iret
out
sub
inc
scas
lcall
push
loop
subl
popf
cmp
cmp
xchg
mov
add
xchg
imul
and
sbb
mov
or
movsb
test
das
add
sti
jle
insb
add
add
mov
iret
in
dec
insb
rcr
inc
rclb
clc
insb
outsb
out
sub
inc
adc
mov
add
negl
sub
js
sub
outsb
outsb
outsb
mov
mov
add
outsb
mov
inc
mov
idivl
mov
cmp
ds
mov
add
add
cld
testl
mov
out
cltd
sub
out
and
arpl
sbb
xlat
addr16
adc
insb
outsb
outsb
aas
loop
or
mov
cmp
cld
inc
call
push
add
stc
mov
fcompl
pop
jne
or
dec
insl
pop
imul
fsubrl
push
cmp
out
jmp
js
xchg
insb
out
add
cmpsb
lock
and
pusha
mov
or
mull
hlt
pop
mul
pop
jg
dec
mov
sub
ja
not
popa
mov
fwait
out
sbbl
test
ljmp
arpl
push
sbb
sti
fnstcw
aas
ficoms
les
or
mov
fwait
call
cmp
pop
divl
xor
sahf
jae
mov
sub
into
imul
pop
and
jg
pusha
pop
ret
aaa
aaa
aaa
jecxz
test
outsb
push
int3
xchg
jmp
ds
aaa
je
mov
leave
pop
jb
inc
rcrb
cmc
rcll
jge
mov
xor
fwait
aaa
push
jne
or
sarl
stos
push
daa
or
jge
ja
sub
popf
jae
jae
add
ds
sbb
mov
out
dec
and
lret
scas
or
mov
movsl
add
sarb
cmp
lcall
outsb
mov
lods
adc
subl
movsl
sbb
cwtl
lods
iret
in
addr16
lds
sbb
pop
mov
mov
int
or
outsb
outsb
out
cli
xlat
lds
xor
mov
insb
outsb
outsb
cmp
jns
mov
cmc
fstpt
outsb
or
adc
fisubrl
cmpsl
outsb
outsb
outsb
outsb
lods
in
and
popa
dec
fistps
outsb
outsb
outsb
push
cltd
jl
lret
adc
mov
mov
xchg
out
mov
pop
orl
jne
sahf
lahf
jge
xor
cmp
mov
in
test
and
pop
call
or
fwait
mulb
mov
bound
xchg
popf
rcll
mov
subl
outsb
leave
xor
push
inc
mov
aas
je
mov
mov
jb
inc
mov
fcompl
icebp
push
jmp
fldenv
in
outsl
ljmp
pop
popf
mov
int
int
cmpsl
sbb
push
sub
dec
pop
movsb
out
xor
lret
or
test
push
add
rol
mov
push
dec
popf
ja
adc
pop
jno
xchg
sub
lods
or
pop
sub
movsl
add
push
sbbl
clc
cmp
aad
or
push
fcmovne
nop
adc
cmp
mov
fwait
fwait
out
imul
pop
sub
out
idivb
xor
repnz
scas
inc
cs
jne
cmc
fidivrl
cmp
outsb
aas
nop
in
mov
sub
dec
dec
mov
mov
dec
adc
mov
aad
jae
jg
ss
push
inc
in
jb
loop
repz
or
jae
mov
xor
push
jecxz
out
fdiv
lods
mov
arpl
fsub
pop
push
pop
push
outsl
xchg
loopne
fadd
cmc
sbb
lret
mov
add
push
iret
adc
fsts
sbb
lahf
jl
addr16
jge
pop
dec
lahf
movsl
and
les
cli
dec
or
xchg
inc
xor
adc
pop
cmp
jno
mov
repz
pop
hlt
mov
and
sbb
inc
arpl
xchg
pop
jge
cmp
pushf
sub
aaa
ja
test
xchg
loopne
cwtl
inc
push
out
ds
aaa
addr16
add
addb
fdivrl
and
push
jge
and
xchg
pop
xor
mov
test
mov
lock
shrl
out
gs
insb
cs
adc
aam
mov
jmp
xchg
iret
dec
outsl
test
stos
adc
lods
or
out
mov
cmp
lea
jl
jmp
mov
loopne
jae
ja
and
lods
clc
mov
xchg
mov
aaa
aaa
aaa
aaa
add
xor
jno
jae
aaa
aaa
aaa
cltd
dec
push
ficoml
or
enter
dec
cmp
cmovne
mov
sub
jae
sbb
les
pop
dec
pop
stc
lock
mov
aam
push
push
mov
int3
push
add
enter
mov
cmp
divl
xchg
cmp
pop
out
jns
test
cli
inc
mov
in
dec
iret
cmp
dec
cmp
out
inc
insb
push
test
mov
pop
ret
out
out
loopne
das
cmpsb
pop
mov
out
out
into
test
adc
jnp
in
inc
pop
dec
lcall
cs
dec
stos
push
insb
es
test
stos
mov
mov
cs
mov
mov
push
aad
cmp
mov
sub
cltd
fwait
cmpsb
imul
in
push
xchg
in
test
xchg
mov
arpl
sub
adc
insb
xchg
and
fwait
fwait
fwait
fwait
mov
jbe
push
mov
and
adc
out
mov
cmp
xor
cs
pop
adc
adc
push
add
cmp
sti
stos
sbb
jle
fstpt
inc
and
mov
jecxz
push
cmpsb
stc
xlat
xor
xor
cmp
add
call
jle
pop
mov
inc
test
mov
xchg
lock
push
andb
das
adcl
xor
push
and
int3
xor
addr16
fsubl
push
frstor
cmpb
mov
dec
movsb
clc
or
xchg
shrb
fwait
fwait
fwait
fwait
addr16
mov
mov
xchg
mov
lret
add
mov
lods
and
js
imul
mov
movsl
out
push
xchg
and
sub
and
mov
mov
push
js
scas
test
jle
mov
mov
mov
cs
stos
mov
xor
out
mov
pop
lock
push
lcall
xchg
lcall
push
jle
lods
jbe
xchg
sub
push
lcall
inc
sbb
int
int
andb
push
pop
inc
or
cmp
push
fistl
mov
mul
mov
fwait
cmp
lods
fsub
sti
pop
add
mov
insb
faddl
ljmp
cmp
adc
addr16
es
xchg
rcrl
xor
mov
out
add
xchg
xchg
sbb
fdiv
in
aam
movsb
dec
rorb
push
jo
cli
ret
pop
adc
mov
fwait
jns
and
dec
sub
std
jg
aam
out
mov
loop
mov
aas
dec
movsb
pop
std
es
jo
repnz
cmp
or
ss
stos
and
pop
push
jl
jmp
jnp
fwait
cmp
gs
dec
mov
ror
movsl
mov
mov
stc
outsl
imulb
or
jecxz
xchg
mov
fimull
addr16
mov
jo
bound
aaa
mov
out
push
lahf
fwait
inc
push
xchg
jmp
fs
or
pop
and
xchg
or
mov
mov
fwait
fwait
fwait
jns
dec
aas
sti
xchg
or
test
fwait
fwait
in
or
adc
inc
mov
inc
lahf
icebp
test
mov
adc
repz
hlt
cmp
dec
sbb
fdivrs
mov
rorl
mov
sti
jnp
mov
jbe
loope
mov
jmp
fs
popf
xor
scas
mov
xchg
add
cmp
mov
rorb
jp
sti
inc
out
xor
lock
mov
inc
cmp
jae
mov
shlb
and
sbb
test
arpl
jmp
movsb
pop
jnp
ds
lahf
adc
push
ss
sub
sub
pop
std
dec
fs
inc
mov
fisubl
out
sub
push
jle
xchg
popa
sub
ror
sarb
in
jmp
aaa
aaa
mov
dec
testl
in
addr16
fnop
out
hlt
push
dec
out
rcl
sub
stos
mov
push
stc
sbb
xchg
lcall
sbb
bound
mov
lock
test
add
clc
add
lock
fcoml
push
mov
adc
cmp
jl
adcb
insb
outsl
xchg
dec
stos
call
cli
push
ds
je
push
addr16
jae
ret
pop
addr16
push
and
jae
jae
loop
sahf
inc
mov
dec
add
jae
mov
xlat
or
sbb
loopne
xchg
enter
loop
and
jge
sub
fucomi
xor
adc
dec
lods
mov
flds
mov
or
xor
sub
icebp
mov
cmp
out
pop
jo
mov
mov
add
sbb
sahf
adc
cmp
mov
mov
fnstsw
adc
pop
mov
ret
test
in
imul
stos
mov
xor
std
sbbb
shlb
fwait
lods
sub
mov
mov
jl
mov
outsb
inc
jne
aaa
aaa
aaa
inc
mov
insl
push
push
sbb
xchg
jmp
aaa
call
inc
stc
inc
fisubl
enter
aaa
fidivl
sub
or
sahf
ret
xchg
clc
mov
pop
icebp
mov
xlat
sarb
push
xor
mov
scas
jp
xor
cmpsl
push
pop
ss
push
cld
dec
imull
mov
pop
or
dec
ficoms
inc
loope
js
dec
mov
jo
pop
aad
addr16
test
xlat
push
pop
mov
push
and
int
lahf
fwait
mov
pusha
mov
ja
iret
int
int
or
sub
xchg
dec
sbbl
popf
movsb
hlt
add
mov
cs
fcmovnu
pop
and
mov
mov
loopne
jge,pt
nop
int
mov
and
fisubl
pop
sti
lds
mov
int
daa
jne
mov
and
aaa
aaa
mov
mov
shrb
lods
cmpsl
sti
and
mov
pushf
dec
frstor
sbb
jno
into
loop
pop
aaa
aaa
mov
sub
pushf
pop
es
out
inc
mov
sbbl
adc
jbe
fsubrl
push
xchg
xor
out
xchg
les
orl
outsb
mov
int
int
std
xor
sbb
sbb
lcall
iret
int
sbb
add
cltd
outsb
mov
xchg
out
out
mov
ret
movsl
addr16
dec
cmp
fcmovne
mov
lahf
aaa
jb
push
stos
lods
sub
fwait
fwait
fwait
dec
mov
lds
cmpsl
xchg
int
int
cwtl
lcall
into
xchg
fbld
push
push
fiaddl
popf
cwtl
cmpb
dec
daa
test
ss
aaa
aaa
inc
xchg
jle
xor
jns
mov
jp
data16
adc
push
mov
push
in
xchg
lret
jae
aad
in
jle
loope
jg
mov
addr16
sub
and
mov
aaa
aaa
mov
inc
jbe
jbe
jg
fisttpll
icebp
push
xor
xchg
jno
aad
call
outsb
scas
clc
fs
sbb
fs
or
insb
cmc
push
test
lcall
out
inc
jecxz
ja
xor
or
jns
and
gs
mov
pop
notb
div
cmpb
fwait
jo
loop
mov
jecxz
add
sub
jp
in
push
sub
cld
test
or
lahf
adc
push
mov
iret
mov
movsl
clc
inc
sahf
mov
sub
or
out
cmp
int
int
adc
cmpb
or
je
sti
std
add
popf
and
fcoms
sahf
fwait
out
jae
int3
sbb
adc
sbb
cmp
sub
jl
push
jne
mov
daa
add
into
icebp
cmpsb
orb
pxor
insb
inc
inc
test
stos
test
js
outsb
outsb
insb
loopne
ljmp
jae
mov
or
push
sbb
jae
add
mov
sbbb
pop
mov
fidivl
sti
fsubrl
sbbl
pushf
out
fbld
ljmp
or
outsb
mov
enter
ficomps
adc
aas
fwait
fwait
pop
push
insb
mov
jle
add
and
push
or
lret
mov
dec
js
mov
jo,pn
sub
sbb
jge
das
pop
mov
cmc
mov
es
jg
cmp
mov
movsb
pause
aas
divb
sbb
add
mov
aad
pop
adc
out
fdivr
inc
dec
dec
cmp
jg
jl
outsb
cmp
jnp
jle
and
aam
ret
and
push
sbb
mov
out
out
lcall
in
inc
xchg
add
pop
rorb
or
idivb
xchg
rorb
ret
iret
out
int
adc
and
fstpt
or
enter
jbe
pop
mov
lret
cmpsb
call
mov
outsb
xor
dec
jbe
and
int3
push
sub
shl
out
out
cmpsl
stc
lahf
push
data16
std
insb
addb
out
mov
mov
repz
and
add
inc
and
out
addr16
rol
mov
mov
adc
shlb
je
push
inc
mov
add
and
int3
jle
in
cmpsb
iret
int
and
or
addr16
mov
push
cmpsb
movb
add
xchg
dec
in
aaa
aaa
adc
test
fdivrs
cmp
stc
sbb
aaa
dec
stos
or
cli
pop
mov
ss
fcmovbe
fwait
cmc
dec
or
jae
jae
test
xorb
pop
mov
int
in
addr16
or
lods
iret
cmp
xor
mov
int
fdivl
xor
lock
mov
mov
add
jne
push
repnz
pop
jle
jle
iret
cmp
into
xor
or
xor
pop
fnstsw
cld
mov
jb
and
mov
dec
cmp
pop
push
push
mov
cmp
jbe
adc
enter
out
fsubs
xchg
or
fcmovne
out
daa
loopne
sbb
fisttpl
mov
outsb
outsb
lahf
int3
adc
cmpb
ficoms
cmp
popa
jb
mov
add
addr16
sbb
push
sbb
bnd
xor
cld
adc
xchg
in
add
sbb
out
xchg
fcomp
aam
les
out
pop
fwait
out
out
je
mov
pop
movsb
es
push
xorb
aas
push
out
jns
inc
pop
sub
sbb
inc
movsl
mov
lret
cmp
fwait
fwait
mov
mov
mov
mov
mov
or
lods
pop
inc
mov
and
jae
dec
add
out
out
mov
repz
pushf
cmp
mov
inc
loopne
jg
fsubr
sahf
scas
aas
mov
shll
mov
cmp
ss
idivb
cs
pop
int3
or
bound
fcmovne
loopne
xor
pop
fimull
push
mov
icebp
xchg
xor
mov
inc
call
data16
aaa
mov
int
dec
fwait
push
xchg
or
xchg
or
or
aaa
mov
adc
out
xlat
pop
sub
jo
mov
adc
add
pop
ss
cli
fsub
sub
sbb
xchg
rcrb
mov
jae
jg
pusha
inc
mov
mov
cld
insb
sbb
mov
lds
aam
js
je
inc
test
dec
cld
insb
mov
lds
sub
fwait
fsetpm(287
mov
int
rclb
pop
fstpl
std
sahf
fwait
sub
and
lock
imul
mov
rcrl
push
outsl
jecxz
les
mov
mov
call
pop
xchg
sub
in
mov
std
adc
leave
and
fwait
pop
call
in
push
jnp
ret
ds
fwait
fwait
outsl
xchg
mov
in
gs
and
dec
pop
jge
iret
jbe
js
fwait
fwait
fwait
mov
xchg
lods
add
outsb
out
lods
imul
pop
leave
pop
aaa
aaa
aaa
push
outsb
jae
xchg
mov
jle
cmpsl
adc
fsub
cmp
subb
jp
cmp
int
aas
mov
pop
sbbl
mov
lahf
clc
outsb
outsb
outsb
outsb
sahf
add
pop
mov
pop
jnp
daa
dec
outsb
outsb
outsb
outsb
movsb
lods
dec
dec
incb
shlb
outsb
outsb
outsb
push
lret
mov
hlt
pop
jae
outsb
outsb
outsb
pop
push
sub
sbb
mov
insl
mov
rol
in
push
jmp
mov
push
cmp
xchg
icebp
pop
cmc
pop
push
sahf
jno
mov
cmp
stos
fdivrl
jg
repz
rorl
mov
lret
adc
jae
popf
cld
jns
lret
inc
hlt
push
int3
movsb
xchg
addr16
jae
pop
out
mov
mov
and
aam
xor
dec
adc
inc
sub
mov
fcoml
mov
cmp
adc
xor
out
push
not
pushf
mov
iret
icebp
flds
icebp
jg
sub
gs
mov
jae
mov
sti
mov
lock
xchg
jae
inc
movsl
lods
push
jnp
mov
jae
pop
mov
pushf
sahf
rclb
xor
cmp
mov
fwait
push
gs
mov
hlt
insb
outsb
mov
push
pop
icebp
jge
or
mov
in
repz
aaa
pop
add
dec
sub
repnz
xor
stos
fbld
out
sub
es
popf
negb
push
out
mov
fsubs
cltd
inc
loope
mov
add
movsb
out
cmp
sbb
les
jmp
push
mov
fwait
fwait
jle
cwtl
pop
sub
pop
leave
pusha
pop
adc
fwait
aad
cmp
es
jae
or
inc
dec
enter
jp
int
in
sub
in
int3
pop
rcr
xor
hlt
sbbl
cmp
lahf
pop
ljmp
pop
fidivrs
sbb
sbb
mov
popf
lahf
outsl
and
in
or
adc
jae
jae
inc
je
lret
push
cld
dec
iret
inc
outsl
xorb
jae
inc
xlat
add
into
pop
mov
pop
xlat
sbb
addr16
xchg
push
nop
outsl
mov
sbb
mov
push
int3
ret
and
fwait
fwait
cmp
add
or
call
cmp
inc
or
jae
push
mov
jmp
and
aaa
repnz
lahf
lea
je
dec
iret
out
mov
cld
pop
arpl
and
testl
fdiv
dec
push
in
mov
movsb
and
sar
lcall
mov
push
sub
imul
cmp
fcmovnb
ficompl
inc
idiv
arpl
out
sub
sub
mov
out
mov
pop
xor
cmp
lahf
rcr
shll
mov
aaa
addb
inc
mov
fcompl
mov
inc
mov
add
ds
bound
mov
inc
js
enter
sub
xchg
mov
pop
mov
dec
gs
mov
std
push
das
rol
ja
gs
inc
shrb
test
jae
mov
and
pop
inc
sbb
push
movsb
pusha
loopne
adc
adc
aaa
js
lods
movups
stos
inc
push
shrl
xchg
icebp
imul
stos
icebp
ret
mov
push
ja
mov
xor
out
les
pop
dec
dec
add
fcompl
fcoms
cmp
fwait
xchg
adc
movsl
adc
mov
test
lahf
push
mov
mov
dec
dec
lret
loope
fwait
fwait
fwait
fwait
cmp
aas
push
xchg
out
cmp
mov
jge
jnp
xlat
adc
jle
cmp
mov
jb
mov
cs
and
fs
mov
lcall
cld
test
cmp
mov
test
fdivr
rcr
lock
adc
out
movsl
mov
imul
adc
push
lods
mov
mov
rcll
push
add
and
div
mov
mov
test
inc
sub
adc
dec
cmpsb
leave
scas
dec
cmp
iret
cld
xor
fwait
sbb
popf
mov
pop
rorb
fwait
fwait
pop
add
fucomip
dec
fildll
pop
js
test
inc
xrelease
push
fmull
xor
idivb
pop
sbb
inc
test
into
push
sbb
add
push
or
enter
dec
xchg
dec
mov
les
sbb
adc
cmp
fwait
fwait
fwait
fwait
mov
cmpsb
popa
pop
add
cmpsl
cli
push
sahf
fwait
sbb
pop
sub
mov
or
aad
jae
cld
insb
clc
sbb
mov
outsl
loop
movsb
and
lods
lds
mov
out
push
dec
pop
sub
rclb
aas
add
sub
add
xor
int
iret
or
and
stc
mov
cli
outsl
pop
xor
jmp
fcoml
add
int
int
fsts
xchg
sbb
cwtl
and
int
fdivs
inc
aam
adc
xor
jle
aaa
aaa
scas
subl
dec
int
jae
mov
pop
lahf
fcomps
sti
aam
inc
mov
stos
dec
hlt
fsubl
sete
rorl
pop
pop
popf
popf
or
cmp
orb
mov
and
shl
fwait
add
push
push
ds
jl
push
or
jne
pushf
movsl
insl
loop
cmc
dec
add
jne
pop
aaa
mov
std
or
or
cli
pop
shlb
aaa
aaa
aaa
fcmovnu
jae
movsl
or
loop
jae
xchg
cli
add
aaa
imul
gs
aam
inc
lock
fwait
cmp
in
jae
mov
dec
movsl
pop
push
fidivs
lods
jae
jae
fldenv
push
pcmpgtd
jle
sub
mov
cmp
inc
sti
fsubrl
sbbb
pop
shlb
xor
int3
rcll
scas
pushl
loop
lds
push
mov
pop
sbb
shrb
out
out
cmp
lea
fmuls
xor
ret
cld
mov
mov
flds
cli
test
ds
aaa
inc
dec
call
xchg
push
xor
jae
sti
cwtl
cmp
scas
pop
or
cwtl
std
mov
int
in
addr16
rorb
xor
mov
int
int
sti
rorb
lock
jno
aas
out
xor
aaa
mov
jbe
sub
cmp
mov
jle
aaa
aaa
push
mov
stos
std
mov
jnp
lock
clc
cmpsl
cmpl
cs
aam
lock
sahf
bound
sahf
dec
ret
int
filds
sub
dec
mov
lahf
int
add
mov
lahf
int
mov
leave
out
ljmp
fwait
or
sbbl
add
fwait
pop
les
ja
lahf
xor
pop
lock
and
xchg
fst
sahf
repnz
lcall
rclb
icebp
scas
inc
dec
push
xchg
jle
dec
xchg
shrb
lock
movsb
mov
inc
mov
dec
jb
jbe
xor
negb
cwtl
sub
adc
roll
adc
lahf
xchg
jae
inc
sub
subb
test
adc
jecxz
push
adc
jo
cmpb
sub
pop
push
fcompl
fdivl
imul
push
jbe
into
xlat
mov
ret
pop
iret
mov
xor
pavgb
mov
push
xorb
pop
lcall
movsl
sub
int
in
jae
daa
mov
dec
xchg
scas
shlb
mov
std
sbb
or
repz
jae
mov
dec
jle
xchg
cmpsl
std
pop
rol
addr16
push
loop
outsb
ret
fcmovnbe
or
inc
cmp
sub
test
hlt
inc
sbb
ds
sahf
and
dec
or
fsubrl
and
xor
iret
mov
or
imul
inc
jnp
insl
and
jae
aaa
iret
sub
mov
mov
jae
jae
mov
hlt
cmp
repnz
les
jae
int3
sub
out
les
push
or
clc
sbb
add
pop
ljmp
test
fs
xor
cli
mov
cmpsl
outsl
xor
rcrb
int
mov
sahf
jmp
fiaddl
pop
adc
jle
sarb
inc
xchg
dec
test
sbb
insl
adc
jo
icebp
sarl
mov
notb
lahf
fldt
pop
sbb
insl
push
pop
nop
out
out
std
dec
cmc
insb
aas
fwait
sbb
pop
xchg
xor
add
jmp
cwtl
fndisi(8087
mov
jle
in
xor
mov
add
inc
adc
pop
push
call
jno
es
and
push
loopne
jge
push
xchg
push
ficompl
out
sarl
roll
out
out
lods
xor
ds
dec
add
insb
lahf
movsl
ficompl
icebp
outsb
outsb
incl
fnstcw
std
fildll
mov
jl
jl
mov
int3
mov
int
aad
push
ret
les
fs
mov
sub
ja
outsl
aaa
aaa
aaa
aaa
dec
mov
lret
mov
insb
ds
lea
popa
clc
sub
int
adc
push
push
inc
inc
leave
mov
lahf
mov
adc
push
jo
mov
sahf
in
mov
loopne
loope
arpl
push
cmpsl
jns
fwait
aaa
shrl
insl
ljmp
dec
cmp
pop
pop
pop
mov
push
scas
mov
pop
mov
jle
loopne
xchg
adc
fcoml
and
cmp
imul
out
in
es
or
push
cltd
mov
and
bound
loop
jae
ja
fwait
jp
push
ret
sti
or
adc
pushl
rorb
int
in
jae
cmp
fidivrs
or
int
int
xchg
sbb
and
jge
aaa
mov
int
or
lea
mov
cmp
jecxz
call
lcall
sarl
push
orl
jle
xchg
fidivl
xor
inc
loope
jmp
pop
cs
or
cli
pusha
cli
fdiv
jae
jae
mov
xor
movsl
jae
jae
jo
jbe
mov
xlat
pop
dec
int
pop
cmpsb
push
inc
pushf
cld
pop
dec
lahf
int
lock
mov
scas
lret
mov
imulb
mov
cmc
or
mov
lahf
pop
inc
test
lcall
lock
fwait
cld
dec
pop
ret
hlt
mov
shrb
ja
fs
test
mov
jmp
push
pop
gs
push
sbb
and
mov
aam
inc
mov
in
jnp
mov
call
cmp
jne
imul
fcompl
hlt
fstpt
xchg
dec
das
test
pop
ret
mov
fildll
xchg
in
in
bound
add
xchg
out
out
add
mov
adc
out
out
int
add
out
xchg
mov
add
out
lcall
jg
addl
fsts
dec
and
adc
int
int
test
or
dec
and
rcr
jo
xchg
negb
int
das
jb
mov
in
out
out
lahf
cmc
das
scas
cltd
icebp
xor
js
aaa
sahf
shr
call
mov
out
inc
sahf
decb
sar
lcall
out
jns
cmp
fldcw
cmpsb
imul
xchg
pop
inc
add
mov
inc
dec
mov
adcl
and
divb
loope
mov
je
outsb
outsb
outsb
vmread
or
dec
adc
aas
push
ljmp
fcompl
or
aaa
fdivr
into
popa
call
mov
jl
jl
jo
xor
jbe
icebp
mov
mov
hlt
clc
sbb
fsub
and
arpl
and
fcoml
insb
push
jb
sti
fsubrl
in
sub
lods
es
ss
jae
xchg
and
testl
mov
fisttpl
int
mov
mov
add
cwtl
jge
xor
fwait
fldt
mov
js
cwtl
insb
out
lahf
push
lahf
mov
dec
dec
and
out
inc
mov
or
mov
test
in
lock
add
loope
out
cmpsb
mov
mov
inc
sub
into
repz
pop
inc
pusha
arpl
mov
iret
in
jae
xlat
out
popa
pop
pop
sub
jne
cmp
out
mov
lcall
pop
movsl
iret
out
xchg
data16
ds
bound
add
cmc
mov
jg
xlat
mov
ljmp
sbb
cmpsb
xchg
in
sub
pop
stc
xchg
int
add
xchg
push
ds
in
add
pop
daa
cmpsl
jbe
adc
inc
aam
xchg
test
shrb
sbb
sbb
into
jo
push
loopne
inc
fidivs
aaa
aaa
mov
mov
mov
sub
mov
cmp
jae
jle
cmpsb
dec
pop
lea
dec
in
int
in
push
ljmp
sbb
pop
and
popa
out
mov
pop
inc
xchg
mov
jl
jno
test
mov
jge
pop
push
mov
dec
mov
fidivl
nop
jbe
sbb
pop
push
and
cli
pop
shr
xor
iret
int
in
fildl
scas
cmp
shll
je
ds
mov
inc
ds
scas
cld
sbb
mov
xlat
inc
call
iret
xchg
or
add
fs
jae
pop
xor
in
lret
imul
and
addr16
rorb
leave
jbe
aaa
aaa
aaa
aaa
push
or
int3
cmpsb
push
mov
aaa
add
fidivrl
aaa
jo
mov
fisubrl
mov
imul
addr16
popf
mov
inc
cld
cld
dec
jbe
test
cmp
pop
sbb
arpl
mov
mov
lcall
dec
adcb
mov
lods
pusha
mov
les
and
pushf
sub
jle
int
insl
mull
xchg
pop
aaa
pushf
js
cmp
push
inc
shrb
lock
insb
cli
sub
pushf
and
mov
sar
ljmp
cli
aaa
mov
rcll
into
sbb
cmp
aaa
mov
stos
inc
enter
inc
add
int
in
push
das
fs
lahf
jnp
add
sbbb
lock
jp
inc
jecxz
xor
out
out
aaa
mov
inc
std
jge
outsb
pop
jb
aad
mov
push
adc
push
test
fisubs
sbb
jle
dec
mov
lahf
in
add
int
jns
rorl
loopne
and
or
mov
mov
aas
dec
cmpsl
ds
fwait
les
int3
inc
mov
insl
sub
sbbb
or
mov
adc
cld
and
mov
hlt
lahf
push
fidivs
adc
data16
ret
jo
into
jo
das
or
xchg
xchg
jmp
lods
adc
in
jae
sti
fcoml
bound
xchg
mov
inc
fcomps
int
jecxz
lods
xchg
push
dec
test
mov
int
les
unpcklps
xor
jle
aaa
aaa
stos
lods
loop
xor
add
fdivrl
mov
sub
in
movsb
adc
fs
sub
xchg
lret
mov
xchg
fidivs
sub
jecxz
add
pop
gs
icebp
pop
repz
push
inc
sbb
pop
jg
mull
mov
out
adc
xchg
popa
xchg
in
push
add
jbe
clc
call
and
xchg
jle
ja
push
xor
shll
mov
push
insb
inc
mov
loope
xor
scas
push
xchg
pop
jp
sbb
loope
inc
call
lock
rcl
dec
mov
cli
mov
pop
and
jne
sbb
scas
add
mov
mov
movsb
jae
mov
xchg
test
jae
push
add
mov
push
call
out
mov
shlb
in
es
add
sub
dec
mov
fsqrt
inc
decl
push
in
addr16
adc
clc
mov
test
mov
lahf
in
mov
pushf
inc
call
pcmpeqw
inc
outsb
sub
xlat
int
int
mov
inc
icebp
mov
jecxz
or
lret
mov
jb
fstps
mov
divb
lods
sbb
loopne
adc
es
fcmovne
out
insb
enter
add
mov
inc
ds
fwait
fwait
movsl
ja
andb
jmp
aaa
aaa
mov
cmc
xchg
stos
adc
push
imul
pop
ds
aaa
aaa
out
xchg
xor
pop
add
cmp
sbb
sarl
fnstcw
sub
pop
mov
ds
test
js,pn
cli
push
fcompl
arpl
mov
sbb
and
popa
clc
aad
mov
mov
lahf
cmp
test
inc
bound
xlat
cmc
ret
rorb
push
xchg
adc
gs
stos
mov
jl
sub
mov
push
enter
sbb
sub
int
lcall
sarl
ljmp
push
add
mov
clc
push
mov
cmp
std
adc
mov
dec
inc
mov
sarl
shlb
pushf
repnz
xor
test
mov
iret
mov
or
push
mov
inc
fldcw
or
loop
jge
adc
jo
outsb
cmp
dec
pop
jae
shufps
jg
mov
mov
rol
mov
jl
movsb
into
out
divb
and
andb
xor
xchg
mov
insb
outsb
dec
shlb
fstl
xor
out
std
in
or
jbe
xchg
mov
add
outsb
pop
inc
iret
mov
fwait
mov
imul
mov
std
insb
jns
rorl
movsl
add
inc
bswap
out
idivb
mov
outsb
je
pavgw
fildll
mov
enter
inc
dec
xor
testb
hlt
jb
or
scas
cwtl
lahf
fcmovnbe
jne
es
cmp
bound
xchg
dec
out
aas
fnstcw
fs
push
cmp
mov
fsts
bound
lods
fxtract
test
fnstsw
pop
out
cmpsl
cmpsb
clc
push
inc
divb
push
out
out
bound
cs
roll
lods
push
add
lahf
adc
mov
jae,pt
push
shlb
and
test
ret
addr16
psubb
lcall
mov
incl
jae
sbb
fnstcw
das
inc
mov
mov
xor
outsb
outsb
fistps
ficoms
scas
in
jns
mov
push
jge
outsb
lret
es
mov
sub
call
push
in
test
into
mov
mov
dec
fs
xor
inc
xchg
shl
outsb
mov
or
inc
dec
push
mov
outsb
outsb
mov
jae
aaa
lods
or
fsts
outsb
icebp
and
inc
sbb
pop
outsb
dec
jae
jae
rcrb
std
repz
paddb
xchg
jl
cmpsl
jae
jae
das
pop
cmp
dec
jae
nop
lds
aaa
test
xor
sub
movsb
inc
shll
ds
unpcklps
ljmp
daa
ds
shl
pop
xor
mov
out
mov
fstpt
lahf
aas
inc
jecxz
dec
out
pop
mov
lahf
int
leave
dec
mov
mov
loopne
loop
push
add
or
pop
int
inc
int3
outsb
out
ljmp
popf
es
out
push
jl
outsb
loope
pop
mov
jge
in
mov
jl
jmp
sub
xor
sub
dec
or
js
aaa
mov
cli
jle
fsts
xchg
jbe
aaa
aaa
aaa
aaa
mov
loope
and
xor
ds
ret
fdivs
mov
cmp
jne
and
xlat
mov
js
sbb
push
inc
loope
adc
dec
mov
sbb
pop
push
adc
aaa
cmp
pop
sarl
aaa
aaa
dec
pusha
bound
mov
jg
ret
adc
fdiv
xchg
mov
flds
repnz
clc
or
pop
rcr
fdivl
mov
inc
cmpl
jle
loop
pop
cmc
inc
ss
dec
loope
fsubl
ja
dec
sti
and
imul
aad
cmp
dec
out
pop
jmp
push
push
inc
aam
outsb
shld
sub
std
insb
popf
sub
add
cmc
das
ljmp
test
nop
push
loop
loope
inc
mov
jb
and
sbb
fadd
insb
cmpl
jg
imul
add
jo
push
out
ffreep
loopne
loopne
cmp
shlb
out
iret
incl
fists
scas
or
jo
inc
outsb
outsb
jg
sahf
repnz
pop
insb
push
roll
jl
sub
decl
push
cwtl
out
mov
cmpsb
lock
pop
in
test
rcrb
loopne
sbb
pop
jae
mov
shll
sub
cltd
sub
lcall
shll
sub
mov
out
sub
adc
mov
popa
cmpsl
push
jmp
lods
xchg
shrb
mov
push
inc
cmp
mov
mov
mov
cld
insb
outsb
arpl
add
inc
push
scas
and
ss
pop
pushf
in
in
das
push
cld
xchg
mov
dec
jbe
xchg
int
int
xchg
iret
push
ds
jle
jae
xor
pop
into
xor
out
pop
xor
fwait
fwait
fwait
nop
cwtl
int
cmp
add
mov
sbb
hlt
idivb
jge
mov
pop
out
adc
inc
mov
mov
loope
and
pusha
les
sub
lahf
in
and
and
xchg
daa
roll
push
add
call
sbb
cmp
out
and
add
push
dec
iret
adc
in
inc
iret
cwtl
insb
cmc
push
out
jmp
mov
ds
and
cmc
mov
mov
loopne
aas
pop
add
jmp
push
in
push
imul
mov
out
pop
jnp
jecxz
cli
adc
xchg
jne
xchg
jl
imul
sarb
add
outsl
xchg
mov
out
sahf
and
je
xor
test
fcompl
pop
ret
adc
fdivrs
ds
hlt
sub
inc
js
repnz
iret
out
test
stc
insb
dec
testl
sarb
pinsrw
aad
lret
lods
test
out
out
mov
inc
pop
cmpsl
mov
enter
out
xor
xor
pusha
aaa
popf
pop
out
out
clc
scas
push
lock
daa
imul
iret
out
sub
dec
adc
cmp
lahf
int
stos
pop
jmp
neg
fdivrl
scas
inc
cmp
jns
inc
cmp
into
in
xchg
enter
test
cmp
fwait
stos
in
mov
cld
dec
test
or
push
and
nop
in
sahf
int
pop
loop
mov
les
push
sub
sbb
sub
outsb
mov
int
add
mov
stos
std
mov
lods
adc
dec
out
jae
pop
cmc
mov
rorl
fwait
xchg
fcompl
cwtl
adc
rorb
lahf
int
lods
mov
lock
fs
in
out
fstps
adc
mov
repz
andl
ret
add
insb
fists
xor
cli
push
scas
cmp
aaa
aaa
aaa
push
or
adc
mov
sti
insl
jl
mov
and
pop
jae
jae
jnp
push
aad
mov
and
js
mov
sbb
jae
int3
aas
in
dec
movsl
dec
out
repz
aaa
mov
dec
pop
mov
nop
int
push
lahf
and
add
ljmp
pop
fptan
shll
pop
stos
xor
mov
in
lahf
cmpsl
rorb
fnstsw
adc
jne
into
inc
sbb
leave
jle
lahf
push
stos
xchg
insb
lahf
fstpt
subb
mov
mov
pop
inc
mov
mov
mov
call
out
inc
daa
mov
xchg
fwait
inc
or
hlt
mov
jnp
outsb
outsb
dec
sub
cmp
mov
icebp
test
pop
out
call
jp
cmp
sub
cmp
ret
pop
das
xchg
mov
xchg
jnp
lea
cli
and
ds
fmul
out
mov
push
cmp
ds
jge
test
fbstp
aam
adc
sti
test
jp
imul
fwait
jle
pop
add
dec
cmpsb
enter
inc
cmpsb
mov
jl
mov
jg
mov
add
lret
push
mov
dec
jp
cmpsb
xlat
movsl
jo
js
xor
ficomps
jp
mov
xchg
adc
insl
mov
mov
bound
sub
outsb
outsb
scas
cli
test
push
push
add
imul
adc
jle
mov
cpuid
xor
adc
pop
jns
jae
jge
clc
cltd
aam
sahf
xchg
xor
xchg
shll
mov
sti
dec
adc
mov
je
xlat
mov
js
jl
orb
aaa
aaa
aaa
mov
dec
jmp
cwtl
mov
test
sbb
clc
fdivrl
aaa
push
mov
push
sbb
pop
jle
out
adc
aas
sahf
push
xorl
leave
js
out
push
clc
ds
out
fisttpl
enter
xor
adc
pushf
push
into
jg
and
sub
cmpsb
push
mov
xor
fdivl
cmp
add
mov
xchg
fcomi
xor
pop
movsl
pop
or
add
push
lret
fdivrl
xchg
imul
or
insb
cmp
fnstcw
inc
lods
lods
loopne
fbstp
jae
stc
jp
gs
das
jmp
jl
in
jae
shlb
aad
mov
les
cmp
push
aam
sbb
and
sub
lock
in
movlhps
jae
jae
sub
push
cmpsl
jecxz
mov
push
push
stos
jne
ds
inc
repz
fnsave
in
xchg
dec
jmp
popf
xor
push
in
test
mov
mov
les
mov
aam
idivl
cwtl
pop
sti
popf
inc
xor
clc
in
pop
pop
hlt
mov
mov
cmp
jbe
xor
out
cmpsb
jo
iret
subb
xlat
shlb
push
arpl
jns
jnp
aas
lods
and
out
xchg
push
jno
jae
ljmp
jo
scas
cmp
lock
por
loopne
sub
shll
fisttpll
xor
mov
pop
inc
cmp
xor
fiaddl
pop
scas
push
fldl
dec
hlt
es
int
mov
lods
popf
inc
mov
xor
lahf
sub
sbb
mov
mov
iret
xor
push
fcompl
xchg
aaa
xlat
mov
aad
mov
dec
lods
push
js
icebp
sub
add
js
xchg
bound
daa
fiadds
sahf
fldt
inc
aas
fcompl
inc
push
insl
xor
cmp
out
adc
pop
andb
fcompl
test
push
xchg
lds
mov
jecxz
adc
lret
fdivr
push
jno
push
cmp
push
jae
fsubl
adc
xchg
dec
clc
fcompl
or
cmpsb
mov
adc
int
jle,pt
test
es
clc
add
repz
fs
fs
dec
push
outsb
pop
sub
shll
add
shlw
push
mov
adc
aas
xchg
pop
mov
call
ret
sbb
clc
stc
xor
roll
cwtl
xor
push
dec
mov
test
jae
jae
les
out
push
sub
jle
jmp
xorl
mov
lret
pop
mov
movsl
popf
xor
inc
loope
in
fidivs
es
pop
outsb
outsb
outsb
lahf
divb
cmp
cltd
fiaddl
sub
xchg
sbb
lods
mov
int
sub
pop
dec
mov
mov
test
cmp
mov
aam
aas
fistpl
movsb
sbb
sbb
cltd
push
gs
or
sbb
or
and
pop
mov
sbb
fsubs
jae
pop
mov
add
dec
xor
xor
stos
mov
imul
mov
icebp
cld
adc
out
mulb
lods
in
xchg
rcrl
sti
push
and
cltd
jb
loop
sbb
jp
stos
add
addr16
outsl
out
ficompl
out
repnz
mov
imulb
sti
std
movsl
subl
mov
lock
addr16
outsl
mov
push
enter
sti
jge
fbstp
xor
insb
fimull
cmpsb
lds
lahf
fucomi
xor
push
pop
rep
mov
fdivrl
cmp
mov
push
and
jg
dec
xchg
xchg
mov
insl
add
and
cmp
movsl
adc
popf
stos
sub
mov
xor
pop
lods
insb
jns
dec
call
fdivl
push
sub
and
dec
jmp
dec
daa
xor
daa
jmp
cmp
add
es
data16
jl
mov
mov
mov
je
aaa
aaa
cld
sub
out
xor
es
and
ds
aaa
aaa
pop
dec
fs
cmp
outsb
cs
and
mov
fs
inc
clc
insb
outsb
jbe
sahf
insl
bound
rorb
xchg
nop
in
out
rcll
clc
cltd
inc
cmp
into
push
int3
pop
cld
pop
clc
insb
outsb
in
sti
lret
push
xorb
out
rcrb
or
jne
jecxz
sbb
outsb
outsb
outsb
outsb
aaa
pop
cltd
xor
or
das
xor
js
outsb
outsb
outsb
mov
stos
jl
pop
icebp
shll
sbb
fldt
pop
jmp
icebp
fsubrl
leave
jae
and
in
mov
mov
pushf
cmp
out
cmpsl
and
sub
inc
add
aam
fmuls
int
das
mov
xchg
fdivrl
push
sahf
mov
xchg
xor
outsb
pmaddwd
jp
push
jl
jmp
fisubrl
loop
ss
jp
mov
adc
mov
addr16
jle
pop
les
inc
mov
lahf
in
and
lahf
pop
inc
mov
addr16
ror
out
cmp
xchg
cmp
outsb
outsb
fimull
cmpsl
mov
into
xchg
ret
pop
lock
add
mov
aaa
movsl
adc
mov
jecxz
mov
in
mov
dec
add
jle
mov
jl
push
sahf
add
xchg
and
out
lret
fstl
aas
leave
sbb
je
out
out
ss
pushf
loop
mov
out
mov
push
shl
cmp
sbb
nop
popa
jge
cmp
popf
lahf
jle
inc
and
adc
push
mov
cs
xchg
cwtl
add
std
sar
int3
dec
mov
cli
insb
outsb
sahf
in
stc
xor
cmc
sbb
pop
mov
in
or
push
mov
push
les
lahf
les
idivb
ret
cmp
adc
cmp
adc
lahf
movsb
iret
out
add
idivb
dec
mov
ljmp
call
clc
pop
mov
sbb
pop
sbb
xchg
pop
jge
jo
cld
mov
inc
sbb
dec
jge
ss
aaa
rorb
scas
nop
gs
push
loopne
aaa
cs
dec
push
jmp
fwait
mov
mov
loope
call
push
int
mov
jge
repnz
int
in
xchg
into
sbb
negb
std
ret
push
cli
hlt
jmp
add
xor
fsubrl
fwait
adc
mov
out
pop
sub
aas
dec
sub
lret
int
xor
cs
cmpps
aam
ss
push
pop
test
inc
dec
test
xor
lods
or
call
clc
jl
mov
int
push
push
in
dec
fidivl
xlat
insb
out
dec
mov
ret
dec
cmc
push
add
mov
pop
hlt
movsl
jo
testb
out
fdivr
mov
in
xchg
clc
and
mov
mov
lahf
cmpsl
inc
les
mov
sahf
imul
sti
faddl
add
mov
stc
and
in
shlb
out
mov
rolb
mov
xchg
test
dec
sahf
mov
dec
aam
ret
xchg
pop
and
mov
adc
jmp
push
clc
rorb
bnd
add
fcompl
sbb
or
sahf
icebp
mov
mov
pop
jne
inc
shlb
sub
mov
sub
pop
idivb
outsb
outsb
je
push
leave
mov
add
xchg
idivb
or
mov
pop
ja
insb
iret
aam
mov
jp
mov
aaa
aaa
aaa
cld
cs
sub
xchg
or
adc
aaa
aaa
aaa
movsb
jo
mov
and
imul
cmp
push
and
test
iret
cmpsb
iret
jmp
mov
dec
xor
jae
jle
cltd
xor
jbe
adc
sub
int
int
loope
stos
les
sub
daa
mov
rcrl
clc
sbb
pop
js
dec
fcoms
nop
mov
stc
outsb
outsb
outsb
lahf
imul
out
or
sbb
outsb
insb
outsb
outsb
outsb
or
xchg
dec
fildl
sbb
pop
int3
pop
sbb
cli
cmp
je
loope
mov
movsb
pminub
cmpsb
fdivr
xor
jl
outsb
outsb
inc
out
mov
pop
dec
mov
cmp
push
pop
lock
jae
stc
ror
in
addr16
int3
in
insl
or
arpl
jmp
push
sahf
int
int
cld
fs
xor
and
fwait
fwait
mov
ret
dec
stos
pop
push
cmp
daa
sbb
lahf
fwait
push
stos
insb
mov
inc
out
xchg
std
insb
xor
mov
inc
and
addr16
mov
bound
dec
ss
loope
loopne
pop
jecxz
fstp
xorl
idivb
and
mov
mov
mov
out
out
lcall
aaa
xchg
pop
int
aas
push
iret
sub
icebp
jb
in
or
lret
mov
fwait
fwait
fwait
mov
pop
stos
and
push
pop
jl
aas
lcall
cld
mov
hlt
fnstcw
aaa
push
addr16
sarb
in
cmp
push
insl
sbb
mov
add
jge
int3
sub
xor
fcomi
adcb
mov
push
and
lahf
xor
mov
mov
push
pop
fmuls
jne
outsb
outsb
fcmovnbe
sub
lcall
sti
rcll
push
stc
pop
dec
adc
pop
xor
aaa
loop
lods
int
mov
hlt
repz
fnstcw
in
pop
ret
push
popa
negb
insb
mov
cld
and
js
lcall
push
cmpsl
in
push
ss
lock
js
jle
jbe
jae
mov
mov
mov
int
in
imul
sbb
mov
jp
and
sbb
out
inc
and
dec
mov
inc
sub
filds
outsb
sub
dec
in
mov
jge
xor
in
fmulp
inc
out
int
mov
hlt
sbb
cs
add
hlt
sbb
loopne
mov
ja
cmp
adc
insb
dec
xchg
jnp
cli
cmp
xchg
pop
mov
lea
scas
loop
sub
clc
cmc
mov
push
lret
in
fs
in
and
out
and
shll
mov
repz
call
ss
push
rolb
stos
sbb
ja
mov
scas
idivb
jb
int
fists
stos
sub
mov
int
add
inc
mov
ja
insl
addb
mov
sbb
nop
add
fld
ror
notb
mov
test
jae
iret
in
test
push
mov
jmp
cld
dec
lcall
mov
test
mov
mov
cmp
inc
jo
arpl
fdivl
scas
loop
xor
inc
outsl
mov
mov
jl
outsb
mov
and
fs
loope
pop
mov
dec
ss
notl
jge
inc
out
cmp
sub
dec
xor
je
repz
cmpsb
adc
shrl
aam
mov
mov
and
lahf
or
dec
add
adc
jno
lcall
sbb
inc
mov
stos
mov
jmp
adc
pushf
adc
jbe
adc
lret
dec
loop
push
mov
mov
push
outsb
lahf
in
inc
cli
shlb
int
fnstcw
fs
mov
jbe
gs
mov
mov
dec
rcrb
aas
pop
fs
fcmovne
out
jo
xor
lcall
mov
adc
inc
sbbl
out
in
hlt
mov
mov
data16
xchg
and
ret
mov
lock
add
clc
incb
lret
stos
mov
adc
push
xor
aam
rclb
mov
jae
call
and
imul
insl
xchg
test
mov
out
dec
mov
sar
cmp
popa
pushf
fwait
cmp
rcl
xchg
popf
add
mov
jp
add
sbb
fisttpll
in
mov
add
orl
sub
loop
mov
mov
cmp
jns
xor
sub
lret
jl
mov
mov
rclb
test
mov
leave
scas
loope
es
and
sbb
or
bound
lahf
int
stos
push
inc
pop
sbb
pop
jecxz
cli
icebp
xor
sbb
ss
jle
in
enter
test
mov
and
inc
lock
outsb
imul
cs
mov
inc
loop
jae
cwtl
inc
push
leave
xorb
pop
or
cmp
lahf
in
xor
and
mov
rcll
cmp
and
out
xchg
cli
andb
mov
sbb
cmpps
xchg
jle
sub
mov
inc
insb
mov
iret
out
push
sub
fsubs
es
enter
hlt
or
loop
aaa
scas
mov
jmp
mov
inc
loope
out
cmc
ljmp
jle
test
mov
in
movsl
push
and
test
idivl
addl
in
or
jmp
je
pop
xchg
int
rcrl
mov
cmc
add
mov
sahf
int
nop
pop
pop
xor
lahf
in
iret
outsb
rorb
cbtw
dec
in
es
repz
test
lock
hlt
jnp
dec
pop
clc
sbb
ljmp
xor
in
nop
cli
push
xchg
cmp
fistl
inc
repnz
lahf
int
int
imul
xor
sub
out
or
out
out
insb
cmc
sub
mov
aad
out
adc
insb
xchg
sbb
insl
popf
fistpl
fadds
pop
psraw
jl
cld
push
or
or
xor
mov
jecxz
xchg
movsl
out
ficoml
xor
xlat
cmp
inc
test
adc
sbb
jnp
cmp
sbb
clc
lret
inc
cmpsb
popf
sbb
js
xlat
ja
jae
out
adc
enter
out
sub
jae
in
xor
pop
push
sbb
int3
sbb
in
lods
adc
sub
xor
mov
and
xchg
jle
adc
lock
orb
outsb
outsb
fucomi
stos
dec
adcb
sbb
out
mov
add
addb
dec
add
out
add
daa
cmp
out
pop
out
sbb
fwait
fwait
fwait
pop
jns
pop
testb
and
inc
sub
and
nop
mov
mov
cmp
fidivrs
push
scas
push
mov
les
lea
xchg
push
data16
into
in
xor
push
mov
mov
cmc
jne
cmp
shlb
jle
loopne
pop
mov
bound
test
mov
js
lcall
mov
xor
shrl
push
out
out
sbb
adc
xchg
out
out
xor
pop
cmp
jle
jae
mov
sbb
in
pop
add
adc
mov
mov
int3
aaa
aaa
aaa
aaa
xor
stos
fsubrs
enter
shll
aaa
aaa
aaa
mov
je
pop
dec
ret
adc
jle
movsl
out
add
sbb
adc
in
addr16
fcompl
mov
mov
pop
mov
jle
iret
int
call
dec
or
mov
fsubrl
jnp
out
insb
mov
js
outsl
outsb
outsb
cs
int
pop
push
and
out
add
daa
je
dec
insb
push
lcall
cmp
adc
mov
mov
hlt
scas
inc
movsb
xchg
cltd
mov
pushf
xor
xchg
mov
jmp
data16
lea
scas
sub
call
aam
out
fidivrl
pop
dec
push
arpl
les
lahf
int
pop
xor
jbe
insb
jecxz
sti
jns
out
testb
cltd
iret
cmc
scas
nop
out
out
sbb
jno
cmp
out
push
in
jmpw
xchg
fadds
jg
out
out
jge
or
push
or
push
imul
addr16
sarl
es
icebp
outsb
inc
insb
adc
mov
lods
mov
and
lock
or
sub
xor
notb
push
sub
test
adc
or
lret
cli
cmp
fcompl
fsubrp
add
into
cmp
mov
and
mov
push
out
lods
mov
testl
sub
sbb
inc
daa
jno
lahf
int
or
pusha
loopne
test
flds
ds
pop
shl
add
pop
adc
call
ror
push
mov
sub
out
sti
les
repnz
push
lock
bound
ds
ja
int
pop
mov
adc
jecxz
mov
lock
mov
out
ds
pop
cld
xorb
mov
pusha
adc
test
adc
dec
jno
mov
orb
int3
sub
call
fistps
xchg
mov
pop
xor
scas
std
or
inc
addl
lods
mov
jg
or
test
pop
cwtl
cwtl
ds
push
ret
cmp
fsubl
notb
outsb
out
mov
insb
divl
rep
lock
insb
mov
push
push
push
fwait
or
jne
cmp
lcall
orl
stos
pop
rorb
dec
mov
jo
dec
or
clc
and
popaw
pop
icebp
mov
cmp
push
clc
fcoml
cmp
sahf
jle
shll
mov
int
or
cmp
sub
xor
mov
mov
cmp
aaa
out
adc
outsl
stos
pop
mov
jge
test
lock
movsl
add
add
ret
addr16
xor
mov
pop
rclb
push
pop
lock
es
gs
sub
pop
ds
xchg
xchg
js
pusha
inc
aas
fmul
or
jae
test
stos
adc
sub
sbb
sbb
pop
adc
aam
aaa
jl
aad
outsb
jp
fsubrs
int
daa
push
inc
mov
jno
outsb
outsb
stos
bound
mov
into
andl
adc
pop
ss
fstps
mov
sub
ss
in
push
sbb
sbb
push
push
jns
pop
jae
fdivrl
xchg
xor
cmpsb
jb
adc
inc
jae
jae
inc
jo
jge
mov
xor
jae
ja
popf
repz
pop
mov
loop
jae
or
fimuls
cmc
lods
lock
shlb
pop
jae
jae
lods
sub
mov
loop
hlt
add
jae
jmp
push
outsb
jp
pop
and
cmpsl
push
xabort
mov
test
push
lods
daa
or
bound
cmp
sub
fcmovne
or
fstl
xchg
sub
int
mov
dec
stos
je
cli
rorb
loope
jge
dec
jno
test
lret
jecxz
dec
outsb
outsb
pop
mov
dec
inc
lods
cld
xlat
sbb
inc
out
inc
jge
inc
mov
or
push
arpl
arpl
cmpsl
dec
xor
mov
ja
xchg
fwait
fwait
fwait
fwait
add
fstpt
and
aad
mov
fwait
fwait
fwait
sub
jo
ret
lret
inc
lock
lahf
fwait
in
enter
clc
mov
clc
fstps
adc
test
push
and
inc
xor
dec
dec
cli
push
outsl
mov
ja
adc
fsubs
cmp
orl
std
cmp
lahf
incl
shlb
mov
xchg
cld
cld
mov
movsb
cmp
add
sbb
loopne
mov
jae
mov
addr16
test
mov
adc
out
cmp
icebp
adc
fsubrp
arpl
jnp
mov
test
jae
jae
inc
aam
sub
lahf
jle
in
dec
and
hlt
mov
ret
adc
pushf
xchg
mov
test
nop
xor
out
inc
out
cltd
sti
fmul
xor
cmpl
addr16
jo
fcom
xchg
or
xchg
mov
mov
xchg
add
out
arpl
aaa
repnz
mov
lods
iret
out
inc
add
popf
push
pop
push
sahf
fiadds
lock
cld
push
add
in
cmp
je
andl
pop
mov
int
cmp
les
and
sub
push
sti
andl
loop
insl
mov
and
loope
mov
mov
mov
clc
fbld
clc
mul
out
out
push
push
jno
loopew
fwait
out
sub
out
sbb
andl
sbb
lahf
outsb
outsb
outsb
outsb
mov
adc
in
int
outsb
outsb
outsb
add
test
jns
mov
outsb
arpl
std
jbe
shr
push
clc
add
dec
push
adc
mov
cmpsb
ds
or
sti
shrl
and
shrb
ja
jo
jl
fwait
sub
mov
cmpsl
fnstcw
inc
ficomps
fwait
fwait
insl
push
push
fsubrl
repnz
data16
fmul
int
pop
mov
js
mov
dec
pop
xchg
mov
cmpsb
sub
adc
mov
cli
jnp
icebp
adc
xchg
sti
xchg
mov
fcoml
std
mov
add
jl
loop
and
mov
lret
lret
jg
dec
scas
into
insl
ss
idivl
mov
jo
pusha
jbe
sahf
fwait
iret
int
into
push
adcb
ret
jns
ffree
xor
pop
addl
adc
ds
aaa
mov
pop
sbb
fdivl
loopne
mov
and
jo
into
adc
stos
cmpsb
outsl
mov
lahf
fistl
js
rclb
push
fdivs
cmp
mov
xor
push
inc
loope
mov
scas
push
sbb
data16
mov
mov
sub
push
imul
nop
xor
lock
add
aaa
mov
add
sbb
xor
inc
aad
inc
dec
jle
lahf
ljmp
and
int
addr16
les
jae
dec
add
subb
out
iret
int
inc
xor
xor
sbb
inc
jae
in
xchg
ret
fcoms
pop
andb
std
mov
jae
dec
ret
lret
movsl
adc
xlat
lods
rolb
addr16
les
mov
jge
adc
lahf
xlat
out
lock
data16
fdivr
jecxz
push
mov
adc
ljmp
icebp
fildl
lods
pop
lcall
jnp
sub
fsubrs
int
aaa
inc
ret
in
outsb
add
fstps
sarb
pusha
cs
loop
outsb
scas
jae
popa
outsb
push
movsl
test
outsb
outsb
outsb
or
testl
icebp
mov
xchg
mov
or
shll
nop
inc
iret
jbe
arpl
mov
dec
sub
sar
mov
lea
data16
fdivrl
adc
loopew
sub
add
daa
inc
push
xchg
repz
cli
js
stos
je
fmulp
int
jae
stos
dec
or
jbe
xor
mov
movsb
out
mov
adc
shrb
dec
inc
iret
int
out
lock
imul
push
out
push
js
add
orl
adc
outsb
outsb
outsb
dec
push
or
fdivr
rol
jp
cmp
jp
outsb
mov
mov
sub
pusha
pop
sbbb
aaa
aaa
aaa
mov
adcb
loop
push
ret
cli
shll
stc
aas
outsb
outsb
outsb
outsb
inc
mov
xchg
scas
lock
or
xor
rep
outsb
outsb
outsb
adc
daa
dec
int
cld
insb
outsb
outsb
xor
pop
loopne
pushf
add
insb
pop
imul
dec
fucomip
ret
fnstcw
jmp
out
mov
hlt
xchg
push
push
xor
dec
push
or
cltd
and
lock
pop
xchg
fsubr
aam
xchg
imul
xor
loop
sub
jb
xchg
outsl
addb
sub
dec
ljmp
nop
cmp
push
in
out
dec
in
xchg
or
jle
cmp
iret
int
jb
addr16
ficompl
adc
mov
add
jo
rcr
jge
rorl
in
shlb
cmpsl
leave
dec
dec
in
lods
in
das
dec
test
test
xchg
out
idivb
test
push
out
out
out
ret
je
dec
cwtl
es
out
mov
repnz
idivb
js
adc
addr16
sbb
adc
ret
xchg
nop
cmp
std
shl
in
inc
or
mov
sub
cmp
out
in
mov
cmp
mov
scas
mov
adc
in
adc
xor
es
mov
xchg
mov
push
xchg
sahf
lcall
ds
js
mov
jmp
and
pop
jmp
mov
repz
and
sub
out
ds
jmp
or
stos
sahf
lret
outsl
pop
sti
fcompl
hlt
cmp
cmp
outsb
andb
cmp
cld
jl
pop
mov
in
jae
subb
mov
jge
aaa
mov
leave
mov
sub
repnz
aaa
aaa
aaa
aaa
dec
mov
cmpsb
jecxz
mov
ljmp
nop
dec
fdiv
pop
mov
or
fdivrl
lret
xlat
ret
movsb
pop
xchg
push
pop
xchg
scas
sbb
loopne
sub
hlt
push
arpl
push
xor
loop
cli
fldenv
dec
mov
or
pop
xchg
xor
out
dec
aam
push
jecxz
jle
scas
and
popf
xor
and
aas
jecxz
cmp
idiv
shll
mov
insb
imul
aam
setae
add
mov
jnp
sbb
mov
jo
bound
and
sub
cld
sbb
and
ror
pop
in
inc
dec
sbb
jae
mov
cmp
or
push
call
jae
das
push
pusha
push
pop
mov
outsb
outsb
outsb
cli
jbe
enter
push
dec
cmp
dec
inc
inc
mov
int
sbb
int3
fstpl
outsb
outsb
test
sub
out
out
pop
lock
adc
ja
adc
outsb
xorb
jge
sub
stos
out
repz
add
fdivr
insb
pop
add
arpl
lcall
orl
pop
sahf
loope
outsb
mulps
aas
sbbb
lock
mov
test
add
les
push
fidivrl
mov
ja
addl
or
pop
push
add
jecxz
dec
rep
adc
ds
mov
cmp
outsl
mov
sub
lahf
fwait
fwait
sub
xor
xchg
mov
mov
cmp
cltd
lret
pop
call
jge
mov
lret
lea
iret
out
or
stos
scas
cmc
jge
sub
or
movsl
lret
cmpsb
or
push
lcall
mov
jecxz
xor
iret
mov
push
sbb
jnp
jne
ss
lds
jl
iret
out
iret
icebp
sub
cmp
gs
xchg
sub
jl
aas
adc
xor
xor
pop
mov
or
mov
lahf
int
das
pop
lcall
insl
or
out
jbe
push
decb
popa
cld
lods
fcoms
subb
out
jae
mov
push
mov
int
in
jae
sub
dec
ror
cmp
inc
repnz
iret
int
int
mov
mov
or
sbb
aaa
aaa
aaa
mov
xchg
and
js
dec
fildll
aam
cmpsb
jle
pop
imul
bound
xchg
xchg
stos
fwait
jae
sti
lock
sbb
cmpsl
push
lds
jae
dec
push
movsb
test
or
test
loope
jae
or
jne
popa
es
pushl
xchg
mov
cmp
or
cmp
fstpt
outsb
outsb
push
std
or
stos
fildll
and
hlt
mov
lret
inc
push
inc
xchg
fcoml
lods
pop
cmpsb
idivb
mov
jb
stos
jecxz
add
cmpsl
dec
mov
sahf
out
mov
out
notb
inc
int
int
sub
movsb
stos
mov
xor
inc
lahf
int
dec
lods
push
sar
cmp
dec
test
inc
jae
sti
xchg
lock
xchg
imull
pushf
jle
lahf
in
push
sbb
cmp
imulb
clc
fmull
mov
cli
inc
mov
test
jecxz
cs
cmpsb
xor
xchg
or
scas
push
xor
push
pushf
push
nop
mov
sub
addr16
sub
lods
ds
mov
or
cwtl
mov
fistl
cli
jb
push
lods
in
lea
lahf
int
adc
pushf
add
push
lahf
in
sub
sbb
lods
push
in
outsl
cmp
ret
mov
inc
lds
icebp
fwait
aas
or
mov
iret
jp
in
out
fstpl
sub
outsb
scas
imul
adc
add
sbb
mov
mov
mulb
push
out
pop
repz
dec
aad
shl
out
out
xor
jo
jecxz
or
out
jnp
mov
fildll
ret
cmp
into
cwtl
iret
add
push
jnp
popa
push
xor
out
sti
fstps
xor
outsb
les
test
jae
jae
dec
and
mov
push
fwait
iret
cmp
and
jns
mov
fwait
fwait
fwait
aam
pop
or
sti
pop
lret
mov
push
repnz
xor
xchg
scas
lods
mov
adc
pop
ss
dec
test
fsubs
mov
mov
orl
inc
adc
inc
push
movsb
mov
mov
sub
les
cmp
adc
lret
int
int
mov
or
int
int
es
push
jg
or
repz
pop
iret
int
add
lahf
inc
cmp
shrb
or
pop
in
or
lock
sbbb
and
adc
jns
das
xorl
fisubrl
xor
fwait
fwait
fwait
fwait
mov
push
js
or
push
fwait
fwait
fwait
fwait
cmp
nop
cli
iret
lods
jne
outsb
outsb
aas
fwait
data16
in
jle
jg
imul
sub
sti
dec
dec
in
loop
mov
xor
mov
insb
add
push
dec
popa
mov
inc
insb
imul
arpl
subb
pop
adc
and
mov
outsb
outsb
and
gs
xor
xchg
fldt
aas
mov
int
pushf
push
movb
andl
addr16
cld
inc
sbb
xchg
lret
add
aad
fs
inc
cmp
jae
lcall
xchg
sub
test
ds
mov
jg
fcomps
inc
hlt
movsl
addr16
iret
xchg
pop
mov
out
mov
mov
pop
aad
out
out
loopne
lea
in
enter
out
aad
push
aaa
and
in
add
lret
mov
out
out
nop
push
ja
mov
int
aas
cli
lcall
inc
adc
out
out
testl
fcmovne
adc
imul
sahf
fwait
fwait
popa
ret
and
loope
xor
mov
mov
int
xorl
and
xchg
int
int
dec
push
mov
mov
push
sub
insb
sub
fidivrl
ss
and
bound
pop
push
insl
or
lock
or
aaa
mov
and
push
mov
aad
cli
insb
xchg
std
in
mov
jl
imul
fmull
sbb
addr16
mov
mov
xchg
aaa
aaa
mov
push
loopne
movsl
es
sbb
cwtl
sbb
aad
aaa
aaa
aaa
xor
xor
add
ds
aaa
push
xchg
sahf
cwtl
cmc
push
mov
push
add
les
mov
cs
jl
fwait
fwait
repz
pop
outsb
push
sub
out
into
in
jnp
push
lret
int3
push
ficoml
pop
sub
xchg
jmp
sbb
or
in
lret
fucomp
es
out
add
lods
scas
pop
push
inc
xor
adc
pop
xchg
inc
push
cmc
mov
test
out
mov
movsl
cwtl
xor
je
aaa
mov
lret
cmc
push
andl
fwait
fwait
mov
xchg
insb
cltd
ror
sbb
xchg
cmp
ds
mov
inc
mov
sub
out
pop
sarb
jecxz
xchg
cmpl
pop
inc
insb
cmp
js
dec
rclb
inc
or
mov
adc
int
rcrb
xchg
sbb
pop
scas
pop
jp
aaa
and
xchg
das
and
popf
fldt
pop
sub
call
out
jl
pushf
mov
adc
inc
out
or
fnstenv
mov
fdivrl
test
cmove
mov
shlb
icebp
shll
cmp
cmp
vmovdqu32
loope
mov
movsb
and
mov
mov
mov
jge
cwtl
mov
sbb
cmp
fwait
push
inc
or
loopne
mov
push
cmpsb
adc
mov
or
xor
mov
ds
int
mov
push
pop
mov
ljmp
popa
notb
dec
movsl
imul
in
aaa
aaa
ja
pop
leave
jecxz
ret
mov
gs
aaa
aaa
aaa
pop
xor
push
outsb
and
xor
aaa
xchg
push
cmp
loopne
push
addb
mov
clc
shlb
fadds
mov
sahf
cli
xchg
arpl
outsb
out
enter
fwait
movhps
aaa
aaa
mov
movsb
pop
ljmp
add
imul
jle
aaa
cmp
jmp
outsl
pop
xor
fiaddl
mov
mov
repz
divb
es
rclb
mov
test
out
mov
push
fs
dec
xor
je
testb
sbb
es
mov
out
pusha
and
sub
iret
out
jle
xchg
adc
inc
das
mov
dec
jecxz
ret
adcb
cli
and
sub
mov
pop
dec
mov
inc
jne
loopne
jae
pushf
jecxz
xor
jb
adcb
mov
cmp
scas
ror
lea
xor
out
outsb
outsb
outsb
aas
popf
pop
lods
lea
fmull
lods
daa
jl
lods
pushf
push
sub
int3
push
push
clc
sub
enter
ficoms
pop
add
lret
movsl
sbb
dec
or
xor
por
hlt
mov
push
pop
lcall
aaa
aaa
pop
cmp
repnz
arpl
sub
ss
aaa
cmpb
cltd
shrb
int3
push
mov
ret
sbb
rolb
int
cmc
fwait
iret
adc
and
test
popa
shlb
sahf
xchg
mov
icebp
mov
pop
out
faddp
inc
jmp
jbe
adc
dec
jge
aaa
aaa
mov
pop
dec
xor
xchg
sbb
aaa
aaa
aaa
mov
lock
inc
jecxz
insb
int
sti
push
sub
adc
mov
sbb
aaa
mov
int
pushf
int
leave
jns
bound
jo
aaa
aaa
test
mov
repnz
xor
icebp
fstps
cmp
jmp
mov
movsb
cmp
mov
rorb
pop
call
or
dec
daa
xchg
in
cli
daa
push
inc
push
xchg
outsb
shll
mov
sub
cmp
icebp
mov
cmp
add
sbb
pop
aaa
jbe
arpl
xchg
or
or
cmp
push
jmp
mov
imul
jbe
jae
jae
insb
jns
pop
cld
ja
sbb
jae
test
adc
setp
inc
fbstp
jae
sub
into
sub
jge
das
ds
shll
mov
xor
out
pop
sub
pop
subb
testb
popa
aad
fsubl
pop
data16
mov
adc
mov
inc
sub
xchg
mov
jns
ja
add
rorl
js
out
js
sbb
xor
in
mov
out
faddp
push
cmp
push
iret
mov
out
or
in
sub
sti
push
test
shlb
xchg
jae
jbe
lea
or
testl
cmp
insl
jp
aaa
aaa
daa
dec
mov
outsb
outsb
cli
mov
lock
ds
push
jge
outsb
outsb
outsb
outsb
test
jle
or
shlb
outsb
outsb
outsb
adc
stos
add
cmp
outsb
outsb
outsb
outsb
push
test
cmc
jb
mov
ret
pop
lahf
jle
and
icebp
and
ret
jae
or
pop
fnstsw
out
aad
aaa
mov
cmpsb
lret
pop
out
cmp
in
ss
jle
aaa
ret
out
lahf
push
les
sbb
cmpb
aas
mov
mov
or
jae
dec
int3
insb
cli
mov
repnz
int
aas
mov
lods
insb
xor
data16
mov
jno
outsb
cli
insb
outsb
outsb
outsb
xor
xchg
clc
ja
add
adc
cli
jp
mov
pop
and
mov
negl
outsb
outsb
fisttps
insb
fiadds
bound
adc
pop
jecxz
stc
mov
mov
and
xchg
addb
outsb
cmp
pop
ret
xchg
dec
lcall
jle
fcmovb
ficoml
loope
jg
cmp
adc
dec
inc
mov
aam
lods
mov
inc
sub
adc
jnp
in
hlt
fadd
and
or
testl
enter
in
jnp
push
fidivl
das
lcall
addr16
pop
movsl
pop
mov
xor
int
int
pop
push
out
dec
or
loop
lcall
sub
mov
rorl
jae
sti
enter
inc
jg
mov
in
jae
jae
fsubl
and
mov
iret
int
jmp
cmp
jo
jae
sti
sbb
outsl
pop
idivl
pop
das
pop
lds
test
inc
fsts
xchg
add
addr16
lods
mov
imul
in
jnp
mov
mov
push
xchg
pop
sahf
and
aas
mov
add
fwait
pop
in
jg
call
movsb
push
fs
mov
into
int
cmp
out
sub
cmpsl
out
rorl
push
mov
add
shll
pop
xchg
mov
jae
iret
cld
mov
sub
rclb
xor
or
or
adc
jae
jae
sti
dec
jl
incb
outsb
mov
mov
adc
dec
pop
or
fsubrp
jbe
jnp
mov
sub
sbb
stc
sub
mov
shrl
mov
insl
push
dec
les
sbb
in
mov
fwait
fcmovne
mov
pop
mov
gs
cmpsb
push
dec
mov
lahf
fwait
pop
out
xchg
push
cs
push
mov
mov
add
mov
aaa
aaa
aaa
aaa
shlb
movsl
xlat
imul
mov
aaa
push
stos
jbe
stc
mov
fcompl
xchg
mov
mov
push
cmovge
stos
mov
pop
sbb
mov
pop
inc
dec
filds
adc
lods
add
sbb
pushf
into
jo
adc
add
xchg
jle
jo
pusha
mov
mov
divb
push
imul
xchg
or
pop
xor
push
or
aaa
or
mov
fsubrs
int
jno
lahf
xchg
lock
or
push
jmp
outsl
sti
pop
js
mov
mov
jae
adc
jnp
pop
pop
sti
fcompl
ljmp
jecxz
inc
hlt
mov
jae
jae
data16
jbe
rcrl
shlb
aaa
jl
jl
inc
mov
out
notb
jecxz
bound
mov
inc
mov
jno
sbb
jne
add
data16
mov
loop
xchg
push
fnstsw
setle
pop
add
jae
fsubrl
and
bound
aaa
mov
in
movsb
mov
xchg
test
push
jle
int
xor
fwait
xor
outsb
outsb
cs
xor
add
jbe,pn
or
outsb
outsb
loop
xchg
adcl
mov
pop
inc
or
cmpsb
push
push
into
shlb
and
xchg
lods
out
jae
dec
cwtl
aaa
pop
jp
push
out
pop
adc
adc
out
addr16
sub
ret
jle
xrelease
jmp
cmp
mov
sti
insb
iret
sbb
sbb
inc
fisubrl
xchg
jo
out
mov
push
jp
fstps
cs
js
fdivrl
into
fiadds
mov
add
mov
sbb
sahf
repnz
mov
sahf
ret
xlat
in
mov
cmpsb
out
jbe
xor
push
or
iret
out
out
pop
gs
cwtl
pop
fidivrl
dec
sbbb
adc
xchg
out
insl
daa
mov
jle
inc
sbb
inc
push
sbb
mov
rorb
xor
out
divb
shlb
in
out
out
into
inc
jge
aas
cld
jl
jno
mov
ljmp
call
ret
cwtl
int
int
daa
adc
pop
cli
xchg
aam
or
arpl
push
setg
mov
jge
mov
int
xor
xchg
mov
jl
clc
mov
aaa
aaa
lahf
in
rorl
fcmovu
mov
aas
fwait
js
xchg
andb
or
jl
das
mov
xchg
loopne
jg
adc
insb
outsb
iret
pop
push
pop
push
daa
mov
xchg
icebp
lock
xchg
sarl
insb
je
lret
icebp
jecxz
jno
push
sub
fwait
fwait
fwait
fwait
pushl
fsubl
jle
mov
pop
jo
js,pt
fdivp
and
into
in
sti
mov
test
inc
ds
ret
sub
fwait
or
stc
lods
push
jg
adc
adc
xchg
sub
xor
cmp
addr16
push
cmpsl
or
test
ss
aaa
pshufw
jnp
cli
adc
and
lock
lea
and
cltd
sarb
push
pop
and
aas
fcmovnbe
insb
sub
mov
jle
fwait
sbb
cld
insb
outsb
outsb
shl
sarl
ds
sub
aaa
aaa
push
enter
insl
hlt
jg
jecxz
inc
int
pop
ds
sub
aaa
xchg
std
mov
cmpb
mov
jnp
xchg
mov
bound
test
ja
in
adc
insb
pusha
stc
fs
jp
loop
mov
sbbb
fcom
scas
cmp
neg
popa
fbld
mov
inc
jns
cmc
into
xchg
jl
dec
lea
pop
dec
cmpsl
push
fwait
mov
int3
pop
clc
mov
je
or
add
mov
inc
pop
mov
and
fmull
hlt
scas
int3
jnp
xor
out
fwait
mov
xor
adc
idivl
scas
subb
pop
sbb
lret
dec
insb
test
fucomi
xchg
nop
iret
ror
inc
rclb
js
or
push
std
mov
jmp
aaa
cld
lods
clc
inc
out
push
out
xchg
ja
adc
inc
inc
or
out
test
push
push
adc
subb
inc
shlb
addr16
lock
cmp
sarl
aaa
jecxz
mov
xchg
cmp
mov
aam
sub
sbb
sub
jnp
push
add
aaa
push
pop
xor
mov
add
in
sti
cltd
sbb
cld
mov
sbb
jmp
adc
mov
imul
test
adc
test
test
out
in
addr16
pop
out
repz
dec
or
rcrl
pop
insl
adc
cmp
imul
ss
in
outsl
out
jbe
mov
adc
inc
jne
aas
fwait
or
addl
pop
mov
outsb
pop
sbb
jge
pop
sahf
push
cli
push
sahf
scas
lock
sub
fsin
add
jle
lock
repnz
imul
push
addb
ret
loopne
data16
fdivrl
mov
push
dec
ljmp
aas
das
cli
cld
out
jo
pushl
insl
sar
xor
adc
mov
jae,pt
pop
jno
push
mov
inc
inc
inc
jle
aam
into
arpl
movsb
lods
push
outsb
outsb
outsb
outsb
pop
aad
pop
xchg
shr
aas
cld
scas
jno
aaa
aaa
jge
loopne
mov
cmpsl
lods
incl
push
aaa
aaa
aaa
aaa
sub
xor
pop
test
icebp
mov
loop
cmp
es
pop
xchg
add
imul
out
mov
aaa
ljmp
push
shlb
ror
nopl
out
jp
adc
addr16
mov
add
iret
scas
pop
jle
int3
adc
mov
int
push
mov
outsb
add
push
lcall
fbld
into
int
fists
add
sbb
mov
cmp
fsub
sarb
rcrb
xchg
jo
sub
pop
xor
inc
bound
iret
out
jmp
jle
cs
push
push
data16
outsb
outsb
outsb
jbe
daa
jb
pop
cltd
cld
addr16
mov
insb
adc
pop
gs
out
sahf
jle
push
ds
sbb
fistl
repnz
mov
adc
incl
loope
rorb
sub
jge
ret
in
pop
les
inc
stc
push
clc
cwtl
lea
sti
outsl
mov
in
daa
mov
mov
pop
xor
inc
ret
adc
ss
rclb
jmp
jmp
xchg
or
pop
jle
pop
push
cmp
adc
pop
dec
mov
cmpsl
mov
sahf
fwait
or
leave
cmp
mov
sahf
push
sar
aaa
rcrl
xor
adc
shll
aam
jle
lock
cwtl
jp
cmp
test
jno
dec
pop
xor
mov
ror
lock
jnp
push
out
mov
lret
jb
je
mov
dec
mov
pop
xchg
aas
pop
movsl
inc
out
dec
out
sahf
mov
cmc
mov
sbb
lahf
fldt
cmp
in
outsb
sbb
and
jbe
xor
cltd
cwtl
and
push
pop
lods
rolb
es
testb
sbb
cli
out
pop
sbb
pop
scas
xchg
shll
sarb
xchg
mov
outsb
cmpsl
pop
movsl
dec
bound
loop
or
faddp
enter
cmp
mov
ds
add
ficompl
hlt
jno
out
cltd
stos
jmp
cli
icebp
cmp
jecxz
pop
lret
xor
mov
out
sarb
jae
or
icebp
leave
lahf
inc
js
dec
mov
test
lods
cmp
in
sbb
int3
cwtl
les
pop
ljmp
push
jl
jo
or
das
mov
pop
push
fcoml
mov
inc
jmp
mov
lahf
sahf
rcl
ret
les
dec
xor
scas
jge
test
test
dec
xor
rorb
mov
ror
xchg
pop
insb
jbe
rcrb
sbb
or
lds
fwait
aaa
notl
test
push
jbe
jge
outsb
outsb
and
stos
js
lock
dec
mov
pop
sbb
cmp
push
or
icebp
sarl
sahf
in
push
cmpb
pop
ret
outsl
cmp
shl
xchg
sbb
bound
idivb
lea
pop
mov
dec
xchg
popf
fcmovne
out
xchg
jo
ljmp
mov
orb
push
jle
dec
mov
fwait
fwait
fwait
fwait
ljmp
adcb
or
fwait
fwait
mov
test
push
repnz
mov
aam
fsubs
pop
int
cmc
xor
loop
fwait
stos
ds
imull
xor
mov
xchg
push
pop
inc
xor
cwtl
xor
cmp
lahf
jmp
mov
out
cmpsb
lret
sar
inc
or
jg
cmpps
jno
jae
out
xchg
jl
push
es
mov
jae
gs
pop
outsb
addl
xchg
jl
out
je
daa
cli
std
xchg
cmc
rcr
fucomi
sbb
leave
pop
adc
add
fs
shlb
aam
push
sub
outsb
jmp
dec
clc
pop
hlt
fwait
push
mov
es
lods
xor
mov
popa
sub
fcmovnb
rclb
add
lahf
orb
or
test
mov
movsl
mov
pop
xchg
mov
lahf
int
out
stos
inc
loope
repz
fwait
mov
sbb
mov
mov
push
and
fwait
fwait
xor
adc
imul
adc
or
cmp
jecxz
jae
mov
cld
insb
outsb
outsb
test
shll
push
cmp
xor
pop
fildl
popa
sub
mov
xchg
sbb
out
mov
rorb
dec
push
pop
cmpsb
pop
lahf
fwait
fwait
aaa
push
pop
in
mov
or
xor
int
test
lds
fdivrl
mov
into
das
sub
ret
hlt
fstpt
loope
nop
dec
xchg
inc
iret
pop
test
lcall
push
pushl
cltd
cli
icebp
fnstcw
out
jl
jmp
jl
fdiv
mov
int
dec
decb
outsl
pop
push
lret
xchg
jecxz
cli
jp
inc
outsb
inc
fcompl
aas
lods
push
mov
movsb
xor
clc
and
or
jp
int
adc
or
sti
and
iret
sbb
les
dec
mov
jae
ret
inc
lods
test
fmuls
insl
sub
mov
fwait
or
aaa
cmc
adc
inc
hlt
mov
and
ds
je
imul
cmp
xchg
adc
adc
les
jnp
jae
or
mov
les
pusha
sbb
shlb
dec
movsl
pop
cmp
pop
and
repnz
dec
scas
cld
jae
iret
in
xchg
mov
fadds
addr16
pop
addr16
pop
fidivl
push
xchg
mov
scas
cmp
insb
out
out
push
adc
and
out
out
cmc
push
insl
adc
out
popa
ljmp
loope
mov
dec
cmp
and
movl
or
add
pushf
mov
icebp
addr16
sub
cmp
fisttpl
jne
adc
dec
and
jae
shl
mov
out
pop
and
push
cmp
addr16
ret
adc
fwait
mov
jmp
pop
or
insb
sbb
and
xchg
cmpsb
jae
mulb
and
sti
inc
iret
pushf
and
lock
icebp
inc
ficompl
sarb
das
sar
sahf
push
push
imulb
jecxz
pop
data16
inc
jge
lcall
dec
sbb
call
push
sahf
push
and
mov
outsb
outsb
scas
xor
pop
and
push
fldenv
fimull
outsb
outsb
outsb
outsb
push
stos
adc
in
or
outsb
cltd
andl
push
clc
jmp
in
jbe
push
dec
jb
out
jae
jae
jbe
int
mov
jnp
aam
pop
or
std
dec
int
addr16
adc
inc
jle
mov
xchg
fisubl
sbb
outsb
out
clc
cmpb
in
dec
cld
push
testb
pop
mov
je
hlt
lret
shlb
aaa
cld
in
stos
cmp
push
mov
mov
cld
xor
addl
lret
ret
xchg
ds
pop
cld
fs
lahf
into
push
test
out
ja
loopne
push
push
adc
fcmovnb
or
clc
nop
sahf
add
ljmp
push
ficomps
shrb
fistl
dec
movsl
pop
out
mov
fwait
fwait
fwait
push
xchg
pop
test
jp
sub
notl
ljmp
pop
movsl
xchg
repnz
dec
iret
int
mov
xorb
mov
or
dec
out
cmc
pop
xlat
mov
jb
or
mov
pop
mov
pop
test
sbb
xchg
fcoml
outsb
xor
flds
cs
data16
adcb
dec
jge
jo
fwait
fwait
fwait
mov
push
mov
insb
outsb
sahf
int3
ds
sti
js
mov
fcompl
hlt
je
add
add
or
stc
push
mov
out
mov
mov
icebp
repnz
addr16
iret
ja
aad
clc
xchg
push
lods
jle
mov
aam
in
lods
mov
or
jmp
sti
fdivrl
mov
shrb
adc
xchg
mov
movsb
in
fidivs
loopne
fwait
fwait
fwait
fwait
jno
lret
mov
xchg
xor
fwait
jecxz
dec
push
mov
pop
add
ljmp
fildl
dec
add
sbb
fcom
mov
pop
insb
mov
mov
or
jno
cs
addr16
mov
adc
pop
sahf
mov
xchg
flds
add
mov
aaa
push
scas
push
subl
lea
cmp
stc
nop
and
pushf
out
fcoml
pop
int
in
sbb
jge
cmp
mov
int
int
mov
mov
sbb
aaa
mov
ja
pop
mov
xchg
dec
push
sbb
jl
rol
xchg
enter
jae
iret
divb
and
lret
mov
ret
dec
sub
push
adc
ror
jne
jl
divb
mov
cmp
test
sub
inc
int3
xor
mov
lea
jae
or
sarl
out
xor
mov
cmc
ljmp
stos
cmc
div
arpl
aaa
aaa
aaa
aaa
dec
jl
fldt
iret
inc
test
jle
aaa
mov
jbe
mov
notb
clc
and
sbb
mov
xchg
out
ss
push
sbb
lcall
fisubs
sbb
jge
clc
fsubl
leave
and
nop
push
fimull
icebp
test
out
or
jns
enter
subb
out
out
mov
dec
je
dec
sti
fdivrl
push
orl
aam
or
jae
jae
std
lahf
adc
push
pop
cmpsb
mov
in
outsb
cli
push
out
cmpsl
movsb
cmc
shl
mov
aaa
aaa
mov
jne
mov
js
add
adc
sub
aaa
push
lcall
cli
lods
mov
int
jno
pop
sub
movsb
fdiv
mov
int
negb
xchg
inc
push
mov
fsub
sub
xchg
xchg
scas
lahf
fildl
cmp
ja
adc
cmp
int
shlb
gs
pop
cmp
int
push
dec
ja
mov
inc
cmp
jle
lahf
int
cwtl
adc
sbb
pushf
sub
clc
popf
mov
inc
test
outsb
mov
jae
ds
jg
rcll
mov
jae
mov
inc
sete
xor
addr16
jae
push
inc
pop
pop
mov
out
pop
mov
leave
mov
loopne
jns
mov
rorl
cmp
out
push
int3
or
or
into
sbb
jecxz
mov
lret
decl
cwtl
movsb
hlt
mov
jae
push
ret
test
orb
inc
pop
push
nop
fidivrl
loop
jb
inc
out
or
mov
in
cmpsl
fistpl
inc
fs
rol
js
cmp
cmc
pop
lahf
hlt
insb
lahf
or
test
rorl
out
test
icebp
bound
cwtl
and
lcall
cmp
or
push
push
pop
sti
inc
in
rcll
stc
int
sub
pop
rcrl
aam
xor
insb
sbb
out
js
push
jl
sbb
out
imul
jl
xchg
lock
std
mov
xchg
bound
filds
jb
xor
sahf
lock
push
jmp
fcmovu
and
cld
or
test
out
push
pop
add
mulb
fs
xor
divb
shl
out
sti
jo
pop
sarb
loop
xor
cwtl
inc
xchg
es
out
out
add
inc
les
inc
nop
mov
jecxz
mov
fwait
push
add
jno
outsl
popa
inc
fcoms
lret
rclb
dec
out
lahf
fucomp
mov
pushf
and
ja
mov
fwait
sub
inc
adc
mov
cmp
pop
cmp
sti
sub
lods
pop
call
jno
icebp
add
pop
add
xchg
stos
rorl
cli
in
repz
imul
push
in
fstl
rorl
inc
cli
into
xchg
mov
je
pop
gs
xor
insl
mov
jne
push
xor
sbb
mov
mov
add
mov
enter
push
mov
mov
add
stos
xor
pop
iret
divb
xchg
xchg
sbb
out
hlt
mov
pop
jnp
int
mov
push
outsb
sbb
mov
xor
gs
mov
ret
and
xlat
mov
addb
fistps
aas
fwait
jp
scas
jl
mov
ds
or
es
into
jns
dec
mov
sti
dec
or
fs
pop
movl
sub
inc
fldl
sbb
push
cmp
cltd
lahf
in
jae
inc
pop
pop
add
into
bound
out
nop
pop
loope
xchg
xchg
adc
pop
adc
cli
jbe
pushf
repnz
in
addr16
in
shlb
jl
in
test
into
loop
mov
jbe
xlat
add
outsb
pop
call
adc
cmpsl
jns
cmp
sub
jle
mov
shr
mov
test
cmp
or
and
call
outsb
es
insb
stos
fdivrs
mov
mov
mov
jae
notl
pop
push
stos
and
enter
and
mov
jbe
inc
addb
inc
add
mov
mov
inc
xor
jmp
jmp
jmp
adc
fcmovne
out
pop
xlat
and
rorb
jnp
inc
lahf
lcall
xchg
int
int
push
icebp
pop
out
je
psubb
jmp
fmul
int
int
or
test
xor
lahf
int
int
cmc
jae
adc
mov
aaa
aaa
aaa
mov
cmp
aaa
lahf
xor
mov
xchg
aaa
aaa
aaa
aaa
rcrb
out
aad
ljmp
sub
int3
sarb
test
jle
push
and
outsl
aam
push
fwait
lcall
fmull
fwait
push
mov
dec
loop
mov
push
mov
pop
xchg
xor
push
sbb
aas
cmp
jo
mov
cwtl
cmp
aaa
aaa
cmpsb
les
das
jmp
mov
call
xchg
cmc
sbb
insb
inc
loope
cmp
dec
and
cmpsb
sbb
mov
inc
xorb
test
out
mov
and
dec
rcrb
adc
jo
roll
outsb
jl
loopne
sub
in
xchg
dec
dec
aaa
pop
cmp
sub
mov
or
outsl
movsl
aaa
aaa
aaa
aaa
insl
roll
adc
sbb
outsl
jmp
aaa
aaa
aaa
aaa
mov
pushf
mov
scas
mulb
aaa
aaa
mov
fldcw
inc
xchg
out
jb
sti
inc
jge
jo
shl
cmp
cmpsl
jae
jae
andb
adc
mov
mov
lods
inc
popf
mov
or
leave
repz
adc
dec
adc
pushf
aaa
outsb
outsb
aas
fwait
stc
inc
push
mov
jl
jge
test
push
movsb
stos
aas
inc
jge
aaa
aaa
es
sarl
outsl
idiv
jp
or
mov
aaa
aaa
aaa
mov
sahf
clc
jno
jb
int
mov
fwait
cmp
aaa
xchg
rcll
and
int3
fwait
fwait
fwait
fwait
cmp
sub
jg
jno
std
dec
mov
fwait
insb
test
mov
icebp
inc
sbb
pop
nop
outsb
mov
push
mov
mov
pop
jge
ds
dec
sahf
das
jo
push
xchg
divb
or
cmp
sbb
mov
cli
adc
mov
cli
inc
bound
mov
dec
adc
sub
into
dec
aas
in
fildll
jae
pusha
dec
out
test
mov
inc
in
repz
sahf
adc
pop
into
cmp
fdiv
mov
clc
pusha
push
sbb
pop
xor
in
or
fldcw
pop
jne
xchg
sti
or
rcrb
mov
jmp
orb
xor
mov
aaa
movsb
add
add
sarb
je
xchg
ret
out
fbstp
xchg
loope
je
mov
ljmp
xchg
mov
jbe
sbb
ret
lret
pop
mov
andb
fwait
adc
clc
lret
jp
cmp
dec
pop
aad
sub
sbb
fstpt
jo
nop
pop
test
sub
and
jae
loopne
in
xchg
jne
mov
adc
int
jae
push
inc
loopne
adc
and
jg
cmc
inc
iret
out
mov
hlt
adc
or
add
add
xchg
fildl
je
jns
test
testb
and
inc
psrad
or
pop
pushf
jle
jl
fisubrl
fisttpll
into
push
add
fistl
add
dec
mov
mov
in
adc
std
add
scas
ds
scas
iret
int
sbb
inc
mov
and
in
sti
rorb
cmp
out
iret
int
and
orb
aas
cli
lods
out
pshufw
fwait
inc
push
push
movb
pop
js
pop
js
cltd
xor
cmp
mov
add
sub
clc
lods
rclb
fcmovne
xor
dec
fsubs
movsb
int
add
jo
loop
lods
dec
testb
or
pop
hlt
inc
mov
aaa
lahf
fwait
fwait
push
pop
mov
xchg
imul
les
ss
lahf
dec
lods
sub
or
adc
mov
ja
std
insb
inc
inc
mov
xchg
sahf
push
lahf
fistl
ficompl
mov
push
jae
cmpsb
sub
int
int
orps
addr16
int
int
or
lret
adc
lcall
ds
inc
mov
gs
lret
and
and
jae
testl
push
scas
mov
pop
cmp
push
push
insb
jmp
mov
movsb
and
and
push
addr16
jae
loope
jmp
sbb
in
es
movb
mov
jae
sub
jbe
push
inc
or
test
mov
mov
cmp
mov
sarl
add
sbb
sbb
mov
js
push
mov
cltd
stos
xor
and
ds
inc
fwait
test
mov
test
clc
ss
imul
xchg
movsb
ret
sti
icebp
fistps
clc
jns
lock
xchg
std
stos
jnp
ds
bound
cmp
nop
push
in
fbld
jae
mov
push
xchg
jl
sarb
and
inc
je
hlt
sbb
jge
outsb
insl
push
mov
sbb
fcomi
mov
sub
push
insb
fcmovu
sub
js
adc
jmp
repnz
inc
pop
lea
insl
jp
cmp
and
shll
fwait
mov
stos
inc
cmpsb
gs
addr16
iret
out
notb
mov
xor
jae
mov
sti
adc
aaa
mov
loop
mov
inc
xlat
cmp
sbb
jecxz
testb
push
jge
outsb
outsb
pop
cmpb
inc
add
mov
daa
or
movsb
push
fistl
pop
sbb
jmp
cmp
fwait
fwait
fwait
fwait
adc
rorb
xor
mov
scas
mov
nop
test
or
outsb
outsb
outsb
aas
xchg
mov
mov
imulb
sti
inc
fs
mov
sbb
inc
or
mov
add
mov
add
cld
mov
fmuls
dec
jmp
fisubl
mov
dec
pop
jae
sub
jae
in
and
or
in
mov
in
sub
inc
int3
out
xor
fdivrl
mov
xchg
pop
sahf
rol
repnz
adc
pusha
mov
addr16
mov
push
jbe
mov
xchg
subl
loopne
test
push
pop
sbb
aaa
adc
out
std
xor
filds
lock
jl
adc
outsl
aad
push
jns
push
aam
mov
ja
and
outsb
xlat
and
push
xchg
fst
mov
mov
jge
jb
dec
mov
push
rorb
add
dec
pop
lea
clc
fldenv
pop
cs
inc
loopne
dec
fildl
jmp
lods
sahf
js
adc
cmp
sahf
fwait
fwait
fwait
sbb
test
addr16
mov
icebp
std
xor
adc
outsl
aas
xor
jg
fdivl
xor
sbb
sbb
adc
pop
out
inc
std
inc
and
xchg
pop
jbe
xchg
xchg
iret
out
cmp
sub
test
mov
mov
cmp
loopne
out
out
adc
jns
jb
sbb
repz
insb
xchg
je
ret
mov
int
jge
pop
iret
mov
sbb
or
xor
ret
je
mov
ja
lods
and
rorb
outsl
fwait
sub
aaa
mov
fdivr
ljmp
cmp
das
mov
sahf
arpl
dec
mov
inc
xor
fwait
fwait
fwait
fwait
popa
stos
pop
xchg
dec
xchg
jae
dec
and
fs
dec
or
inc
inc
aaa
mov
fwait
fwait
mov
xor
pop
out
js
mov
mov
jbe
adc
gs
mov
push
cmc
add
sar
sti
int3
pop
sbb
push
test
ds
icebp
fsubl
sbb
adc
out
add
pop
mov
je
mov
aaa
aaa
aaa
aaa
adc
push
lcall
aaa
std
jg
add
sub
ja
sub
fadd
pop
mov
adc
ljmp
loop
mov
out
jecxz
movl
jle
icebp
mov
aam
fdivl
mov
std
inc
mov
inc
ret
popa
fwait
fucomi
xchg
fcomps
add
xor
cmp
or
lock
bnd
push
xchg
sahf
push
mov
addr16
fsin
cmp
cmc
jle
mov
xor
pop
sbb
adc
mov
mov
xchg
cld
outsb
cmovge
fsubp
out
shl
sti
es
mov
inc
sbb
dec
sbb
aaa
push
std
ss
popf
inc
aaa
shl
xor
jp
aaa
aaa
cmpsb
dec
sbbb
jae
sti
dec
inc
sub
cmp
mov
mov
fcmovne
addr16
xchg
data16
inc
in
into
sbb
int
lahf
cwtl
lret
movsb
out
ss
xchg
mov
sahf
ds
xchg
xor
and
pop
int
in
sti
inc
mov
cmp
lock
mov
jo
leave
lea
pop
inc
outsb
outsb
outsb
push
mov
xchg
sub
aas
enter
outsb
dec
out
jnp
sbb
ficoms
test
int
int
leave
inc
in
mov
inc
fimuls
sub
sbb
insl
out
xor
lods
cli
or
add
test
inc
out
jae
ret
neg
cld
jp
in
jmp
cwtl
in
addr16
insb
ljmp
repnz
fdivrl
pop
mov
dec
repnz
fmull
mov
mov
imulb
out
xchg
and
inc
fdivr
push
inc
inc
bound
leave
arpl
jae
sti
inc
pop
das
bound
fnstsw
idivl
andb
sub
mov
sub
shr
push
test
xor
push
lret
out
pop
cmpsl
mov
mov
sub
icebp
out
pcmpeqw
adc
call
sbb
mov
in
mov
int3
and
jge
dec
pop
fdivrl
xor
jbe
mov
imulb
scas
idiv
or
cmpsl
and
dec
ja
adc
int
int
add
lret
mov
or
sar
sahf
int
shlb
and
dec
insl
incb
sub
jle
fisubrs
out
sahf
mov
push
cmp
or
jge
cmp
jp
or
out
jbe
sbb
jbe
mov
int
iret
cmp
enter
test
jno
mov
int
int
mov
push
fistpll
mov
pop
sti
push
ds
int
mov
pop
fldenv
insl
push
lods
in
adc
xchg
ret
jl
inc
fadds
ret
loopne
inc
out
xchg
dec
ret
in
mov
in
imul
push
sarb
add
mov
cli
insb
fs
pop
mov
repnz
jl
lods
insb
test
mov
xchg
xor
cmp
fistpl
rclb
aam
pop
fsts
xchg
dec
jne
xchg
cmpsb
cmp
adc
jb
mov
int
arpl
test
adc
dec
mov
fwait
sub
push
push
rcl
fs
cwtl
out
fwait
sbb
push
mov
popl
push
aam
cmp
or
enter
mov
adc
inc
add
sbb
out
out
and
and
mov
test
out
mov
fsubr
les
xchg
cmp
pop
xor
xor
pop
cmc
sti
xchg
bound
or
push
mov
into
sarb
test
mov
jae
cmp
in
and
scas
jae
lahf
sub
push
lret
dec
xchg
addr16
jae
cmc
loop
cmp
int3
xor
mov
pushf
scas
lret
mov
je
inc
call
mov
sbb
sub
mov
xchg
push
sub
jb
jae
jnp
int3
sarl
xchg
mov
or
das
int
gs
dec
ja
dec
cmp
in
out
lahf
int
fs
jl
jmp
out
shrb
sbb
xor
dec
jecxz
out
out
pop
push
cmp
in
adcb
dec
outsb
outsb
outsb
inc
rolb
xor
mov
cmpl
outsb
outsb
loopne
lret
lods
sub
out
jg
mov
add
addr16
int3
outsb
cmpsb
iret
out
mov
test
test
fwait
fcomi
test
jb
or
jns
daa
ds
outsb
outsb
lahf
fwait
dec
add
jb
icebp
adc
insb
sub
xchg
orb
or
aam
xchg
in
test
adc
mov
in
jecxz
rol
sbb
outsb
outsb
outsb
fildll
sbb
cltd
test
dec
shlb
push
mov
jno
pop
ficompl
push
out
divb
enter
xor
push
outsb
iret
out
out
or
pop
dec
fstpt
xorb
mov
addr16
mov
outsl
rolb
jne
lods
push
mov
fwait
xchg
push
or
pushf
sbb
out
ud2
mov
insl
cmp
es
push
jl
outsb
xor
dec
cltd
bound
jno
clc
sub
sarb
outsb
ja
insb
scas
enter
stos
cmp
test
inc
pusha
push
cmp
aaa
aaa
fwait
dec
push
ret
scas
pop
pop
lock
mov
in
mov
je
cmp
fwait
mov
xchg
and
dec
ds
jmp
or
icebp
fildl
mov
jmp
cmp
outsl
mov
fwait
out
xor
pushf
leave
push
jno
push
or
xor
addl
adc
cmpsl
push
cmpsb
je
stos
mov
push
push
movb
sbb
or
jae
sti
push
push
divl
dec
stc
xchg
push
fldl
out
xchg
fbstp
iret
sti
fsubr
push
ror
out
sub
or
sbb
adc
jae
or
cmpsb
or
ljmp
pop
fcomps
loope
sar
repnz
insl
or
adc
fdivrl
clc
sarb
cmpsl
inc
das
inc
push
cli
sbb
sti
fsubl
jno
jo
sti
sub
popf
ftst
lahf
int
addr16
shr
jbe
inc
cld
dec
hlt
lcall
out
sub
testb
adc
shl
add
mov
xchg
sub
jae
mov
test
clc
cwtl
ljmp
push
dec
std
mov
mov
mov
jp
mov
push
shrb
loop
push
mov
pop
pop
cmpb
dec
add
xchg
inc
mov
in
or
movl
jmp
mov
outsl
pop
bound
je
lock
das
add
in
and
ficomps
out
pushf
test
into
int
int
test
pop
pop
xorl
ror
push
add
mov
imull
dec
int
dec
pop
xchg
pop
or
in
hlt
and
int
int
push
and
andl
int
int
xor
or
adc
leave
sub
int
or
push
movd
test
fcomps
push
adc
clc
and
lcall
outsb
outsb
lahf
movsb
push
stos
mov
mov
ja
insb
mov
std
dec
in
movsb
dec
sbb
xor
negl
in
jp
fwait
fwait
leave
subb
dec
adc
rcrl
testb
dec
outsl
out
aam
andl
mov
loope
dec
pushf
or
out
mov
and
add
and
iret
inc
fisubl
out
push
aas
clc
mov
xor
mov
nop
push
mov
cmp
jae
cli
sub
or
js
push
or
test
mov
xlat
sbb
xchg
ret
rolb
imul
arpl
rclb
das
jecxz
iret
in
test
jae
xchg
ror
out
jmp
inc
dec
inc
fnstenv
in
imul
outsb
dec
push
cmp
clc
cmp
negb
jmp
fisubrl
xchg
or
and
out
out
lahf
sbb
add
inc
jno
xchg
mov
outsb
outsb
outsb
mov
into
mov
dec
cmpb
repnz
movsb
mov
xchg
and
cmp
int
dec
inc
rorl
xor
or
mov
int
mov
jl
jnp
sbb
test
test
mov
sysret
lcall
sub
aaa
adc
div
pop
into
push
add
out
fdiv
out
xor
hlt
xchg
inc
enter
jae
jae
dec
adc
out
rol
jae
jae
rclb
push
leave
pop
mov
inc
out
icebp
jbe
jae
jae
or
mov
jnp
jae
mov
clc
inc
sbb
and
mov
ja
dec
mov
mov
sbb
and
add
push
scas
pop
insl
repz
fdiv
loop
lret
push
and
dec
cli
popf
outsb
cmp
lcall
in
cli
sbb
lods
in
pop
arpl
adc
int
addl
push
popf
or
es
xorb
ret
out
out
add
aam
cmp
ds
scas
mov
stc
lods
cs
in
sbb
sarl
pushf
cmp
inc
pop
test
vpcomq
adc
or
jae
jae
data16
loopne
xchg
push
push
jecxz
incb
or
repz
mov
jmp
push
sbb
shlb
int
int
aam
jns
mov
movsb
lahf
xor
inc
lea
dec
ret
inc
sbb
mov
aas
pop
testl
int
repz
cltd
cwtl
in
jmp
es
jl
lods
test
push
mov
test
push
sbb
fwait
fwait
mov
scas
mov
jns
jnp
pusha
iret
inc
pop
ds
adc
fildl
addr16
and
fwait
fwait
sarb
lods
shlb
add
insb
in
nop
or
mov
adc
leave
dec
into
jge
adc
in
pop
lahf
cltd
xor
bound
mov
int
movsl
ja
in
dec
rorl
movsl
out
sub
clc
pop
push
jle
movsb
xchg
shrl
or
add
pop
ds
fsubrl
addr16
outsl
inc
inc
out
movsb
es
les
outsb
lods
out
pop
xchg
mov
fcompl
or
or
mov
imul
pop
adc
test
inc
xor
repnz
insb
outsb
outsb
pop
movb
cmp
rcrl
and
aaa
push
cld
scas
in
addb
push
frstor
aaa
aaa
aaa
aaa
clc
cmpsb
or
push
lods
inc
shl
mov
jle
mov
lea
movsl
xchg
push
movb
inc
add
addr16
shlb
cmp
push
push
or
sbb
cs
mov
in
stos
sub
aaa
aaa
adc
movsb
lods
add
fwait
bsf
jecxz
mov
inc
es
aam
test
cmp
mov
call
enter
shrb
repnz
stos
jns
jbe
iret
les
xor
or
or
sub
adcb
outsl
inc
adc
std
mov
pop
insb
pop
xor
mov
bound
cli
cwtl
int
fucomi
or
sahf
mov
or
cmpsl
mov
lahf
pop
push
or
xchg
mov
cld
cmc
ds
test
fnstsw
xor
inc
mov
mov
insl
jl
mov
aam
jl
mov
bound
or
ja
mov
fidivrl
push
cld
dec
movsb
jle
sbb
jg
sub
xorb
push
jne
fsubr
mov
fwait
fwait
iret
dec
dec
xor
sbb
rorb
ds
fwait
sbb
movsb
sbb
pop
ret
out
ja
ss
ret
clc
mov
int
aas
loope
les
mov
add
jp
bound
mov
fisttps
orb
cli
fiaddl
out
sbbb
ud0
out
movb
out
rolb
divb
mov
int
adc
or
mov
lahf
cmc
out
fcoms
test
fwait
fwait
fwait
ret
xor
cmp
mov
lret
loop
jge
mov
int3
sbb
push
jae
rol
inc
inc
sub
fs
jge
addr16
cvtps2pi
out
mov
lods
jne
mov
dec
and
mov
xchg
pop
insl
out
mov
mov
fisubl
xchg
outsl
mov
out
orl
out
lret
sbb
mov
or
cld
loop
stc
out
iret
in
xor
cmp
push
pusha
icebp
out
out
mov
lret
or
int
adc
pop
adc
push
les
rclb
es
popa
xchg
popa
xchg
lods
mov
test
lahf
int
pop
ss
inc
fsubrl
dec
or
add
out
mov
pop
shrl
cmpb
push
outsb
fidivrs
push
push
lcall
mov
int
out
fcoms
mov
sbb
push
jg
int
int
pop
cwtl
repz
jle
bound
je
xchg
jge
mov
pusha
test
bound
ss
js
push
mull
push
rorb
cmpsb
pop
lock
pop
or
and
mov
push
push
or
aad
and
mov
mov
iret
push
in
idiv
jge
outsb
mov
adc
xchg
push
dec
adc
mov
cmp
sar
in
cmpsl
and
aaa
xorl
adc
popa
xchg
lods
jmp
rolb
ret
lds
movsb
lahf
int
int
pop
in
mov
sub
into
fstpl
mov
xor
js
out
in
pop
repnz
in
sar
cmp
aaa
dec
sahf
xchg
cmp
or
push
xor
push
inc
cli
pushf
hlt
mov
sti
fidivrs
and
addl
aas
jbe
ljmp
int
add
outsb
lahf
test
movsl
mov
aas
jl
sub
aam
outsb
fidivl
aam
mov
mov
dec
lcall
stos
out
ja
mov
cmp
xchg
js
std
cmp
enter
fcomps
inc
push
mov
out
adc
add
in
lret
sub
add
fdivrl
xor
lahf
jae
jbe
jbe
jecxz
mov
outsb
outsb
mov
out
out
xchg
pop
ljmp
cld
insb
mov
test
jle
int
mov
or
cmpsl
dec
repz
sbb
lahf
int
int
jge
sub
mov
lock
fdivrl
es
push
ss
jae
jae
popf
mov
sbb
push
jle
inc
jae
jae
int
cmc
es
adc
inc
inc
imulb
iret
in
addr16
in
pop
mov
shll
or
in
bound
mov
call
fldt
test
lea
xor
cmp
fwait
fwait
jmp
mov
lock
dec
dec
sbb
aaa
jge
jg
frstor
sbb
cld
push
loope
data16
xchg
divl
aaa
aaa
dec
loopne
arpl
sbb
pop
loop
iret
ds
mov
js
scas
test
lds
mov
subb
xchg
cmpb
push
outsb
outsb
outsb
outsb
or
lds
fs
pusha
aaa
cld
insb
outsb
and
or
in
sbbb
mov
fisttpl
pop
xor
ss
aaa
cmp
mov
mov
xor
insl
adc
sti
subb
clc
les
jae
jae
push
sarb
dec
out
cmp
loop
jl
subl
jo
lods
xor
rclb
pushf
stc
mov
mov
outsb
adc
loop
scas
push
rcrb
cmp
cmp
cmc
hlt
filds
inc
test
mov
mov
mov
cmp
or
das
outsl
cmc
lock
aaa
inc
call
sahf
pusha
test
cs
test
rclb
or
in
cmp
iret
xchg
xchg
loop
fld1
cmp
xchg
cld
or
or
and
js
inc
loop
inc
push
testb
rorb
les
mov
outsl
pop
aad
ret
das
adc
sbbl
bound
aaa
mov
loope
insb
int
inc
add
sub
ss
imul
test
and
lahf
fldt
jl
sbb
in
mov
popa
xchg
cmp
fistpll
dec
ret
jecxz
jae
jae
in
mov
loopne
mov
jae
jae
roll
rcrb
xor
sarl
inc
mov
insb
outsb
aas
test
hlt
cwtl
icebp
xchg
and
mov
imul
out
lcall
pop
ljmp
jo
out
sti
mov
sbbb
cmpsl
cmp
inc
shlb
jns
les
add
pop
mov
ret
pop
mov
cmp
sahf
push
add
push
aas
fwait
fwait
cmovnp
loope
add
push
jbe
push
lds
sub
cmp
jo
add
mov
sbb
repnz
jle
outsb
aas
cmp
int3
popf
mov
rolb
addr16
sti
xor
call
orl
int
pushf
sbb
pop
sti
mov
pop
and
xlat
and
and
fwait
dec
push
mov
mov
push
pusha
ss
cmp
aaa
pop
pop
mov
push
je
outsb
outsb
clc
cwtl
inc
inc
sbb
cli
aaa
in
ret
jl
outsb
outsb
in
repz
cs
jge
xor
xor
movsb
lahf
push
sbb
jmp
mov
lahf
sbb
fcmovbe
jp
rcr
sti
push
jp
mov
shr
mov
jae
jae
popf
inc
aam
repz
fwait
nop
pop
push
shll
jae
jae
jecxz
mov
popf
clc
inc
cmp
push
xchg
int
inc
xchg
ret
xor
pop
adc
out
xchg
mov
push
xchg
mov
shl
mov
icebp
mov
call
outsl
hlt
mov
ljmp
aad
fcompl
mov
loopne
into
mov
push
hlt
add
pop
or
push
cmp
mov
pop
and
cmp
adc
testl
push
adc
outsb
outsb
outsb
outsb
lds
pushf
jg
jge
rolb
sbb
loopne
outsb
fsubrl
push
int3
insb
out
test
xchg
ss
scas
sub
out
pop
or
xor
nop
xchg
outsb
out
mov
xchg
jge
fistpll
outsb
push
mov
push
inc
pushf
cmp
cld
insb
hlt
aas
xchg
jnp
mov
and
insb
jbe
pop
pushf
scas
push
jae
adc
mov
js
add
stos
out
mov
andb
jae
jp
clc
movsb
inc
inc
mov
int
and
pop
test
arpl
sbb
cmp
fsubrl
push
lahf
xchg
sbb
scas
sub
fcmovnbe
dec
xor
push
cmp
and
clc
divl
push
mov
add
out
lock
cmp
out
mov
andb
repnz
jno
test
rorb
fwait
insl
call
sahf
lcall
mov
in
clc
aas
ss
fcompl
into
jl
push
cld
or
sahf
aam
arpl
pop
aaa
mov
xchg
iret
mov
xchg
fwait
push
mov
pushf
lock
cmp
fucomi
jecxz
adc
es
sbb
mov
int
adc
lret
push
xchg
or
int
jp
inc
sub
inc
aam
movsl
cli
fimull
xchg
and
leave
out
addr16
sub
clc
cmpsb
pop
addb
movsb
jp
fcmovne
out
add
fcmovnbe
and
jmp
xchg
out
mov
test
dec
mov
ljmp
out
or
int
in
das
xor
pusha
adc
out
loop
out
lahf
int
and
aaa
pop
std
sbb
loopne
outsb
dec
shl
mov
call
cmpsb
add
cld
sbb
push
fprem1
mov
ja
adc
mov
sbb
jbe
sbbb
jae
daa
fadd
push
arpl
pop
je
popa
orb
lcall
sub
cmp
lock
cmp
rcl
inc
push
xor
jp
loope
cmp
hlt
ffree
mov
addr16
mov
inc
jno
jnp
sub
pop
jge
fists
bound
movsb
sahf
pop
jmp
push
out
clc
add
sbb
push
int
pop
sub
mov
icebp
fwait
ss
fdivrl
aaa
mov
mov
xchg
pop
cmp
push
lret
icebp
fstps
mov
mov
test
jge
ds
nop
pop
sbb
inc
mov
sbb
push
mov
js
sbbb
ret
mov
jge
jno
nop
sbb
lods
or
hlt
lahf
mov
sub
mov
sbb
aaa
mov
shl
pop
or
and
lods
jae
fcoml
lods
std
aam
imul
std
aaa
pop
add
mov
xchg
mov
mov
dec
inc
and
cmpsl
inc
shlb
dec
shl
std
ds
cmp
arpl
imul
xchg
fwait
or
push
dec
call
filds
mov
out
jle
or
fs
mov
xor
out
imulb
movsb
jo
je
xchg
arpl
jle
loop
mov
sbb
add
outsl
les
mov
ja
pop
or
jmp
sub
cmp
fiadds
push
loop
popf
dec
mull
mov
repnz
sbbl
addl
mov
in
dec
dec
int3
incb
inc
push
sbb
call
js
pop
fdivrl
pop
add
and
and
outsb
hlt
mov
in
sti
mov
mov
adc
lock
fmuls
ret
cmp
test
xchg
test
ss
shl
inc
or
jne
pop
add
faddl
push
pop
dec
cmpsl
mov
jp
iret
idivb
sbb
dec
pop
add
call
clc
jo
adc
cmp
and
movsl
jge
jae
jae
cli
dec
mov
rcr
fadds
jae
pushf
fwait
xchg
sub
movsl
pop
jg
cmp
test
test
pop
shlb
mov
sti
ds
xchg
and
fcompl
adc
insb
jnp
pop
or
lods
jbe
push
xchg
pop
lock
clc
enter
fisubs
jmp
mov
inc
dec
outsb
jle
fbld
lods
insb
insl
cmp
jnp
enter
pop
inc
jo
inc
movsb
or
or
popf
je
stc
fmull
arpl
imul
icebp
mov
clc
xor
jecxz
push
inc
cli
in
fildl
loopne
fmul
daa
push
loope
pusha
call
cmp
xor
scas
inc
popf
lods
inc
lret
aaa
aaa
pop
push
fidivrs
scas
inc
movsb
cmpps
aaa
aaa
aaa
cmp
aaa
cmc
cmc
mov
cmp
pop
jl
xchg
lods
in
cmpsb
testl
loop
ss
inc
pusha
and
js
jg
and
pop
bound
push
mov
push
pop
sbb
mov
mov
xor
mov
cmp
ret
int
mov
jmp
push
cmpsb
lcall
lods
xor
outsl
in
loopne
loope
xorl
clc
adc
and
cmp
push
inc
ljmp
sbb
pusha
mov
shl
out
andb
adc
pop
pop
fists
out
lds
in
jno
add
out
jae
es
mov
int
jmp
cmpsl
ja
mov
aas
pop
ljmp
dec
jb
cli
stos
test
sahf
xchg
or
fwait
mov
repz
adcb
push
in
sahf
fwait
fwait
fwait
ret
lahf
mov
pop
jbe
mov
add
jae
push
in
dec
add
or
jb
inc
sarl
jae
js
sbb
mov
in
hlt
cmp
lods
cld
imul
aas
loop
hlt
test
dec
lret
xor
jae
outsl
je
sbb
sbb
lods
add
jp
jae
jae
xchg
call
aam
sub
sbb
mov
scas
jo
aam
mov
jge
mov
leave
mov
dec
repnz
aaa
cld
bound
les
push
mov
imul
push
js
movsb
cmpb
mov
js
add
cli
test
imull
push
into
pop
fisubrs
mov
ljmp
rcr
mov
or
out
cmp
adc
mov
mov
fisttpl
dec
mov
mov
mov
test
fwait
fwait
fwait
fwait
inc
roll
orb
cli
fwait
fwait
fwait
fwait
mov
aad
iret
gs
addr16
fwait
popa
push
push
or
xor
dec
cmp
and
jp
addr16
push
push
and
ss
lahf
jle
int
or
mov
jg
outsl
inc
sahf
pusha
jle
sahf
fwait
fwait
or
pop
pop
or
push
pop
arpl
data16
mov
jnp
xor
sbb
enter
jmp
sub
adc
cld
adc
sub
mov
aas
cltd
pop
adc
mov
mov
push
jle
cmpsb
mov
les
les
and
xchg
adc
sahf
lds
jae
out
mov
pop
push
leave
jnp
mov
addb
sbb
pop
aas
test
dec
push
mov
aam
outsb
outsb
outsb
dec
or
data16
out
or
mov
outsb
outsb
outsb
outsb
cmp
xor
inc
pop
pop
hlt
pop
adc
divb
lock
outsb
xor
jne
insb
cmpsb
mov
adc
sbb
data16
pop
lock
ret
pushf
or
mov
sbb
das
and
adc
int
inc
jg
sbb
pop
in
icebp
int
dec
sbbl
repnz
pop
or
push
push
mov
mov
push
fsincos
sbb
add
pop
int
or
je
xlat
arpl
and
mov
int
push
insl
shr
mov
sub
xchg
jno
andl
mov
cmp
xor
int3
xchg
mov
pop
add
xor
aaa
adc
cs
sar
jne
aaa
aaa
xchg
js
or
ret
xchg
push
or
out
mov
adc
outsb
outsb
outsb
pop
shlb
rorb
inc
mov
les
aaa
cld
insb
mov
push
test
into
or
ss
aaa
aaa
push
jno
sahf
in
xchg
iret
fadds
popa
outsb
cli
mov
fiaddl
loope
mov
aaa
mov
jp
jp
repnz
hlt
mov
aaa
aaa
lods
or
test
sub
sub
ss
jbe
cmp
dec
pop
jo
mov
add
pop
dec
shrl
in
int3
mov
dec
jnp
or
jle
lahf
shrl
xor
mov
mov
mov
push
ret
inc
mov
shrb
mov
stos
xchg
inc
int
cmp
repnz
je,pt
enter
mov
int
cmp
sbb
cmp
es
test
fdivrl
aaa
aaa
mov
lret
sbb
pushf
clc
jo
clc
fldl
pop
sub
mov
add
lods
bound
mov
jb
pop
push
dec
andb
cmpsl
cs
mov
lcall
dec
dec
push
movsl
mov
xor
hlt
sbb
lret
imul
fstps
cwtl
aaa
jns
and
jle
ljmp
xchg
fimull
sub
fnop
mov
push
dec
mov
jae
imul
dec
xchg
aaa
aaa
aaa
mov
or
push
fwait
add
popw
jle
aaa
aaa
xor
stos
inc
adc
stos
lds
jae
fmull
jmp
add
loope
pop
outsb
ds
sbb
sti
fsubrl
dec
mov
cmp
daa
xor
out
lahf
int
inc
xchg
add
cltd
pop
popa
orb
iret
out
mov
lods
insl
repnz
aas
sarb
fcmove
jg
orb
inc
mov
cmc
mov
loopne
adc
ret
idiv
insb
inc
push
pop
clc
jns
adc
ss
movsl
jbe
fcmovne
out
push
adc
add
bound
std
popa
dec
inc
fmul
sahf
cs
and
fiadds
mov
xchg
in
pop
push
orb
jae
jae
xchg
mov
sti
cmp
and
sti
xchg
addr16
not
jl
sub
sbb
int
xchg
test
int3
cmpb
xchg
add
jg
add
mov
cmp
cwtl
xor
notl
jb
jae
and
jne,pt
jle
ljmp
call
or
ja
xlat
ret
repnz
lods
gs
jle
aaa
sbb
imul
sub
and
inc
ficoms
test
scas
mov
xor
fnstcw
mov
pop
iret
decb
jb
insb
cs
pop
mov
jbe
scas
mov
loop
es
icebp
sbb
sbb
and
scas
ja
xchg
lret
cld
push
sahf
pop
lock
push
aam
cmc
mov
stc
rcl
mov
lcall
sbb
fsubrl
jle
xor
xor
jp
xchg
mov
out
dec
ljmp
test
call
bound
data16
jb
jae
hlt
jle
movzwl
xchg
mov
xor
or
add
mov
adc
pop
fs
sub
les
ret
and
lret
out
and
fidivrs
sbb
sahf
dec
adcb
jae
cmp
jne
adc
mov
and
jb
sbb
repz
mov
mov
outsb
mov
leave
jae
lds
and
loopne
sub
addr16
mov
cmc
shlw
aaa
aaa
mov
clc
dec
cmp
adcb
pusha
jno
push
jl
sarb
jecxz
insb
sbb
mov
jae
xor
mov
and
int
addr16
pop
lret
push
jle
xor
cltd
cli
jle
push
jl
cmp
mov
pop
and
xchg
jae
jae
sbbb
cmp
jae
jae
cmc
and
repz
push
dec
inc
iret
cmpsb
fbstp
mov
mov
xor
jae
ret
sbb
push
inc
cmp
or
bound
cmp
inc
iret
imul
aam
push
xchg
dec
test
jae
mov
inc
mov
insl
lret
clc
fdivrl
popf
scas
gs
sub
aam
movsb
clc
outsb
outsb
outsb
outsb
push
push
mov
repnz
loop
pop
sub
add
mov
out
mov
pop
cmp
lds
in
adc
pop
mov
adc
inc
les
fmull
sarl
paddq
inc
out
sbb
fwait
aaa
aaa
aaa
push
pushf
aas
gs
in
xor
outsl
fldcw
test
mov
jl
push
mov
dec
rcr
pop
cld
aam
sub
mov
shll
aaa
aaa
or
or
pop
inc
fwait
push
aaa
aaa
aaa
aaa
xor
neg
and
xchg
sub
aaa
aaa
aaa
cmpsl
dec
inc
ret
push
iret
arpl
negl
and
stos
pop
mov
inc
adcb
push
test
sbb
out
lret
js
fisubrl
add
test
rcl
sbb
or
lods
sarb
fistpl
out
adc
out
mov
int
int
add
fs
jne
add
mov
dec
sbbb
fdivrl
push
jbe
fnsave
shll
rorb
fildl
aaa
aaa
mov
es
imul
je
fldl
sub
ds
mov
dec
mov
mov
pusha
xchg
fbld
jne
fcmovne
imulb
in
lods
movsb
insb
imul
cmp
mov
out
and
iret
push
jno
imul
cmpsl
lahf
rol
or
mov
push
outsb
outsb
outsb
iret
pop
push
out
xor
pop
jge
cld
int
mov
mov
push
cwtl
dec
mov
call
pop
icebp
jb
std
inc
push
xor
stc
inc
cmpsl
roll
and
ret
mov
push
cmp
and
int
pop
hlt
mov
xchg
and
negl
iret
out
hlt
fs
or
lods
jg
push
pop
clc
push
movsb
mov
and
mov
mov
mov
in
sti
scas
lods
and
outsb
rclb
xor
fsubl
push
imul
adc
fucomi
aad
daa
or
jbe
adc
shl
mov
adc
mov
ffreep
mov
jl
xchg
out
xchg
outsb
mov
fwait
fwait
fwait
push
loope
push
push
data16
jge
jge
cmp
aam
pop
jno
pop
fsubr
and
xchg
pop
push
jne
push
lcall
mov
fs
es
jae
inc
xor
data16
mov
xor
loopne
add
mov
movsb
mov
adc
sbb
sti
or
and
jg
mov
push
fiadds
les
icebp
mov
out
bound
clc
fcompl
dec
mov
das
popf
stos
mov
aad
inc
icebp
jp
sub
out
lds
fiaddl
jle
dec
iret
out
mov
mov
pop
xchg
outsb
outsb
outsb
pop
inc
inc
aaa
test
lods
in
mov
fwait
ds
jl
inc
dec
mov
mov
jae
xor
enter
jae
jae
inc
mov
or
xor
aam
jae
jae
and
or
inc
insb
xlat
out
adc
mov
mov
sbb
push
ds
lock
mov
das
mov
and
jae
movsb
mov
out
cmp
jge
push
std
movsl
addr16
pop
cmpsl
enter
xchg
aaa
aaa
aaa
pop
rolb
fcompl
test
mov
pop
and
mov
popf
es
xor
adc
es
loope
pop
hlt
ljmp
push
mov
sbb
clc
and
sahf
cs
insb
push
sbb
adc
aas
adc
mov
cwtl
push
inc
and
shl
mov
out
int
outsl
into
adc
repz
push
inc
or
and
xchg
mov
loopne
sti
lret
inc
and
es
dec
lods
popa
ret
lahf
shlb
lahf
mov
push
push
mov
push
and
dec
xchg
mov
addr16
xor
cltd
scas
ljmp
pop
mov
enter
pop
or
dec
and
test
mov
aas
fwait
fwait
jno
xchg
shrl
fs
pop
push
lahf
cltd
jne
pop
sub
jge
in
addl
inc
jnp
aas
inc
in
xor
shlb
in
xor
call
call
pop
push
out
testl
or
or
lods
ret
sbb
out
les
jle
jbe
mov
lahf
mov
xor
jnp
cmp
push
enter
and
stos
add
add
outsb
outsb
mov
push
inc
mov
pushf
std
pop
ss
ja
mov
xchg
imul
loopne
nop
js
mov
pushf
pop
jb
dec
fsubl
iret
in
jae
push
sarl
pop
adc
imul
add
lock
mov
shlb
jae
js
or
fbld
movsl
mov
mov
jo
scas
movsl
jae
pusha
into
popw
sahf
aam
mov
scas
xor
push
or
cltd
test
aam
mov
out
adc
xchg
mov
jg
pop
bound
mov
enter
push
mov
jae
jae
fs
pop
scas
mov
inc
jg
lahf
in
insl
out
mov
cli
inc
in
add
mov
adcl
add
aaa
ja
sbb
call
test
aaa
adc
cld
pop
jl
lret
cmpsl
adc
data16
sub
mov
mov
test
pop
es
sbb
jp
push
sahf
xchg
xor
add
push
or
imul
cs
dec
cmp
int
js
push
gs
es
int
xor
ss
bound
out
push
cltd
in
ret
imul
pop
lret
pop
out
xchg
sub
xor
fwait
xchg
push
stos
push
sbb
scas
push
inc
loopne
mov
cmp
je
out
xor
imul
add
jno
fildl
cmpsl
jecxz
jl
es
fcmovnb
jp
pusha
pop
pusha
cmp
xchg
lret
roll
sub
push
stos
fsubrl
pusha
out
or
nop
adc
cmpsb
jle
in
sub
rcr
xlat
inc
mov
out
push
xor
pop
cs
mov
mov
fdivp
pop
fidivrs
rolb
les
sbb
fidivrl
mov
fsqrt
cmp
rcrb
push
inc
mov
adc
lahf
int
mov
pop
pop
cmp
arpl
lods
iret
ss
sar
pop
data16
adc
pop
cli
insb
add
mov
mov
pushf
lods
gs
xor
or
push
sti
sbb
fsubrl
xor
jmp
stos
fsubl
fs
iret
cs
mov
mov
xor
aas
jno
jle
rcr
out
pop
and
pand
xor
cmp
fwait
inc
jbe
notl
adc
sub
dec
xor
push
addr16
iret
int
popf
xor
shlb
push
jl
lea
xchg
sbbl
xor
aas
adc
and
mov
pop
inc
and
sub
in
push
xchg
ret
orl
fsubl
dec
mov
cmp
push
xor
aam
pop
mov
out
out
inc
das
adc
test
fidivrs
fcmovne
out
add
push
pop
subl
or
xor
jp
cmp
mov
mov
popf
fwait
mov
cmp
xlat
pop
scas
mov
aaa
aaa
aaa
sbb
loopne
sti
mov
addr16
xchg
addr16
or
in
into
insl
in
in
outsb
add
push
rcrb
mov
mov
dec
adc
pop
out
cmpsl
rclb
lcall
add
jp
adc
loope
adc
sbb
aam
inc
dec
sbb
add
imul
lock
lds
mov
push
cld
jne
sbb
lods
enter
imul
sbb
and
repz
iret
int
push
xlat
dec
stos
pop
or
ss
mov
test
xlat
lret
daa
dec
out
push
cmpsb
imul
mov
fs
std
inc
push
pop
and
adc
mov
mov
loop
insb
outsb
outsb
xchg
mov
jl
mov
fcmovbe
sbb
lahf
xchg
psllw
cmpl
ficoml
movsb
add
jl
or
jp
inc
pop
adc
int3
mov
push
mov
repnz
add
bound
mov
sbb
and
out
inc
xor
out
out
push
fnstsw
ja
call
cmpsb
pop
mov
sub
outsb
inc
xor
pushf
mov
and
jl
aas
mov
mov
mov
inc
fistps
xchg
cwtl
jae
sub
ds
aaa
mov
jbe
pop
jecxz
xor
cltd
arpl
stos
push
test
pop
daa
ljmp
sbb
rcrb
sbb
jge
jae
jae
fldt
repz
pop
mov
jmp
sub
sbb
mov
mov
push
sub
and
inc
jmp
ds
scas
push
pop
ret
and
fdivrl
loope
loopne
fidivl
pop
idivl
mov
popa
pop
enter
ds
ds
mov
inc
or
mov
cmp
in
jae
or
push
jo
adc
mov
lods
ja
clc
insb
scas
js
rolb
movsl
push
push
cli
loop
addr16
icebp
xchg
mov
mov
cld
mov
loop
fdivl
scas
int3
fcompl
aaa
aaa
push
shlb
addr16
test
pop
push
xlat
mov
ror
orb
sub
scas
xor
or
xor
lock
ds
fwait
sub
bound
add
loop
notb
cli
xor
or
mov
out
addr16
fcmovbe
lock
jle
jb
mov
pop
push
ss
cli
mov
inc
lcall
outsb
outsb
outsb
outsb
les
xlat
inc
push
rclb
sbb
or
pop
adc
inc
ja
sahf
adc
fidivl
scas
adc
adc
scas
aam
std
insb
outsb
lock
lret
jb
mov
push
divb
ja
xchg
cmp
jae
shl
mov
jl
fwait
cmpsb
ds
inc
sbb
addr16
jae
aaa
sub
imul
mov
or
push
cmp
xchg
cmp
lock
fcomp
mov
fucomi
and
mov
pop
loop
stc
jle
aaa
cmp
pop
xlat
cmp
xchg
dec
sarb
aam
int
or
clc
enter
fistpll
xchg
int
inc
aas
cmp
fs
xchg
aas
pop
pop
or
mov
pop
inc
lods
idiv
inc
cmp
pop
mov
mov
out
out
and
cli
loope
mov
jnp
lock
stos
shlb
cmp
cmp
fdivrl
push
in
es
xor
stc
inc
adc
loop
fdivrl
faddl
pop
sub
push
inc
bound
mov
ret
or
arpl
cmp
xorl
fwait
je
pop
test
xor
hlt
sti
loopne
sub
aaa
aaa
aaa
cld
arpl
cs
jl
test
les
aaa
aaa
aaa
push
cmp
out
hlt
cmovs
mov
test
pop
pop
cmp
outsl
push
cmpsl
pop
in
addr16
jge
imul
ja
xor
fs
int
int
lahf
mov
movsb
insl
adc
out
iret
mov
cmpsb
pushf
pop
pop
divb
out
out
std
push
mov
mov
sub
outsb
andl
loope
sti
mov
aas
cmovae
ljmp
outsb
stos
iret
test
or
sbb
fdiv
mov
dec
xor
subb
cmc
mov
and
mov
inc
xchg
cmp
xchg
int
aas
fstpt
xchg
xchg
pop
repnz
les
test
dec
jmp
inc
inc
outsb
jne
pop
lock
loopne
call
hlt
lahf
loop
jp
daa
jp
out
mov
mov
in
lret
scas
or
lret
out
ljmp
push
sub
push
insb
push
sub
inc
jo
mov
outsb
ja
rcll
xor
out
pop
imul
lret
cli
shlb
pop
je
ds
or
jle
lret
aaa
aaa
cmp
cmp
js
arpl
inc
cmp
pop
imul
pop
ret
clc
popf
lods
jnp
lea
and
jp
adc
in
outsb
inc
mov
or
xchg
pop
icebp
aas
or
int
int
aas
shlb
and
repz
fwait
fwait
fwait
jbe
xchg
mov
out
cmp
add
push
sbb
pop
mov
mov
es
jecxz
jne
insl
test
jae
jae
or
mov
mov
push
jae
leave
mov
pushf
sbb
arpl
jae
jae
jmp
jmp
decb
mov
adc
addr16
cmp
push
add
xchg
movsb
sbb
negl
rorb
in
aad
or
or
inc
std
insb
xchg
mov
pusha
xchg
lds
add
mov
mov
push
dec
outsb
outsb
lahf
fwait
sbb
icebp
mov
cmc
out
sbb
aam
jp
insb
hlt
mov
adc
or
es
adc
icebp
fwait
inc
jno
rcrb
mov
xor
insb
cmp
jle
lcall
push
pusha
add
or
sbbl
repnz
xchg
dec
mulb
lock
fucomi
mov
out
pop
gs
mov
test
xchg
mov
dec
mov
jl
and
in
xor
xchg
lahf
dec
cmp
lcall
sub
dec
jle
mov
loope
push
mov
dec
loope
mov
testb
int3
mov
popf
jmp
sbb
mov
rcll
cli
in
cs
ja
or
xor
mov
pop
in
fwait
sbb
mov
dec
pop
pop
out
xor
dec
jge
add
mov
int
in
pop
xchg
test
dec
push
push
in
in
or
xlat
cli
lret
int
call
ficoml
or
out
imul
cmpsl
xlat
fwait
fwait
fwait
fwait
notl
out
push
dec
cwtl
sub
ds
fwait
fwait
fwait
fwait
inc
ret
test
aas
mov
nop
fwait
fwait
fwait
fwait
mov
scas
decb
scas
test
xchg
mov
and
inc
sbbb
xor
inc
clc
hlt
repz
jp
add
mov
xchg
test
aas
loop
lahf
shlb
je
mov
push
out
out
out
push
mov
sub
out
out
xchg
pop
fnsave
jmp
ds
iret
mov
or
pop
lret
mov
and
jb
mov
lods
shrb
cwtl
jge
ret
faddp
mov
ret
pop
cmp
jmp
fdivrl
mov
jnp
movsb
xchg
xor
pop
mov
xchg
pop
pop
mov
into
push
xchg
cli
fcompl
dec
inc
xchg
pop
es
cld
insb
outsb
scas
fmul
pop
and
ret
icebp
mov
hlt
out
out
clc
jno
push
jl
mov
add
mov
sub
int3
shll
rol
int
aas
fwait
sbb
mov
test
xor
cmp
int
int
xor
out
sahf
xor
mov
ja
int
int
loope
popa
sbb
rcrl
daa
adc
gs
xor
jle
push
into
or
ds
xchg
bswap
test
sti
sub
sahf
lds
mov
jne
dec
addb
dec
loopne
stos
pop
lds
loop
aaa
mov
cmp
mov
xchg
jecxz
mov
pop
je
test
mov
push
js
jae
jae
ret
jns
mov
cs
cmp
jae
loopne
sahf
push
xchg
and
jl
loop
jle
inc
aad
xor
test
in
gs
jl
mov
mov
out
aad
decb
push
out
pop
aam
cmp
jae
bound
xor
ficoms
jae
mov
mov
xchg
bound
jae
addr16
popf
mov
popf
ret
push
aam
fsubl
outsb
inc
inc
rorb
jae
dec
je
mov
lret
push
iret
jae
jae
jp
add
insl
xor
inc
leave
mov
mov
and
and
mov
idiv
fdivrl
sbb
mov
mov
outsb
out
aad
das
dec
repnz
adc
outsb
xchg
loop
popa
mov
sbb
or
sub
clc
xlat
cmp
mov
push
test
imul
outsb
aas
fistl
inc
js
iret
dec
insl
in
jl
outsb
outsb
mov
xchg
dec
mov
aaa
pop
mov
adc
std
test
fdiv
pop
fdivs
add
and
fmull
lea
xchg
mov
dec
test
sbb
stos
cli
ret
fadd
jae
repnz
imul
cwtl
test
ss
mov
dec
test
mov
daa
out
jb
cmpsl
test
outsl
cmp
cmpsb
mov
mov
dec
push
add
ret
cmpl
xor
xchg
movsb
repz
daa
mov
pop
mov
mov
sahf
and
sti
sbb
int
fs
imul
xchg
ja
mov
xor
and
sbb
cli
jl
outsb
fiaddl
imul
inc
pop
dec
jp
scas
push
adc
and
or
es
jle
mov
rcrb
in
mov
push
rorb
inc
push
imul
dec
dec
or
in
sti
add
mov
int3
test
mov
out
out
in
int3
adcl
fwait
fwait
jno
add
in
push
jo
outsb
filds
push
fs
cli
fsubrs
into
jbe
insl
aas
aaa
mov
adcb
xor
dec
insb
stos
into
icebp
cmp
aaa
jb
call
ljmp
lahf
bound
mov
lret
outsb
outsb
outsb
cmp
outsb
or
mov
sub
adc
mov
js
push
and
mov
mov
xorb
fistl
ljmp
inc
sub
pushf
hlt
arpl
sbb
cmovl
pop
das
add
fcmovne
out
xchg
mov
cmp
mov
mov
pusha
aam
mov
outsb
ds
aaa
stos
int3
leave
xor
imul
mov
pop
inc
mov
testb
mov
or
xchg
negb
mov
push
push
aad
mov
outsb
outsb
test
test
gs
insb
outsb
outsb
out
insb
inc
mov
sbb
xchg
aaa
aaa
mov
mov
psubsb
ret
aaa
aaa
cmp
jp
push
xor
fdivrl
ja
clc
mov
add
sar
clc
bound
fwait
jns
mov
mov
into
repz
xor
ds
sbbb
rclb
imulb
fidivl
mov
ljmp
push
fsubrl
jge
jge
imul
jns
sub
mov
mov
ja
cmp
scas
jno
hlt
jl
dec
mov
lahf
int
sti
sub
test
sub
and
mov
add
test
lahf
int
int
fwait
or
jae
out
mov
fdivrl
adc
mov
addr16
mov
aam
subl
and
fnstcw
mov
jno
inc
and
mov
lahf
add
adc
pop
aas
jae
pop
or
xchg
jnp
int
lahf
int
call
sarl
sahf
scas
insl
or
cmp
mov
jbe
loop
push
andb
rclb
leave
js
mov
mov
fists
xchg
inc
pop
fistps
scas
or
movsb
addr16
lods
imul
lret
adc
mov
stos
sub
mov
inc
mov
inc
xchg
and
mov
pop
mov
pushf
outsl
nop
out
cmp
mov
lcall
testb
scas
push
push
and
lds
out
or
ja,pn
add
pop
mov
scas
outsl
frstor
ds
sahf
jecxz
lds
xchg
ss
ljmp
dec
hlt
push
pop
xor
lret
gs
jne
cld
mov
xchg
repnz
filds
popa
push
and
hlt
int
out
dec
mov
sub
or
scas
sbbl
pushf
cmp
fwait
fwait
mov
aaa
or
inc
push
mov
jnp
xor
or
inc
in
fs
push
int
int
inc
ret
pop
repnz
mov
out
push
lahf
cwtl
xchg
mov
xor
shll
iret
out
mov
out
xor
mov
insb
and
aaa
aaa
jl
fucomp
insb
test
pushf
pusha
fcomp
pop
daa
es
cmp
test
fsubs
lods
mov
mov
xchg
lahf
daa
or
addr16
mov
aaa
jbe
das
das
les
mov
pop
aas
hlt
cmpsl
mov
sbb
out
out
imul
mov
in
ss
aas
fwait
inc
inc
fwait
adc
xchg
pop
and
movsl
fwait
fwait
sub
mov
or
jge
adc
jge
cmp
push
pushf
sbb
js
clc
push
inc
xchg
inc
or
inc
enter
jmp
jnp
insl
cltd
insb
movsl
fadds
fmuls
xor
mov
add
lcall
cmp
fstpt
rcr
testb
insb
mov
adc
lret
xor
and
int
push
lcall
sbbl
int
outsb
and
mov
int
int
ja
pushf
inc
pop
xlat
jno
mov
mov
negb
in
addr16
sbb
push
xchg
and
aad
and
xchg
and
dec
push
test
out
out
jp
inc
jmp
ja
and
jo
lods
iret
out
test
insb
movsl
test
dec
sahf
out
jo
mov
and
dec
pop
xor
lods
dec
int
int
into
push
insb
pop
mov
lods
mov
iret
int
int
dec
js
mov
lret
fildll
cmp
in
neg
jle
test
jmp
loopne
faddl
mov
add
dec
loop
add
inc
lret
clc
fdivrl
aaa
aaa
je
and
xor
sub
or
in
cli
fnstcw
aam
xchg
pusha
mov
xchg
mov
sahf
nop
pop
dec
daa
mov
cmpsl
push
loop
adc
dec
ret
cli
mov
fistl
mov
test
mov
outsb
outsb
mov
cmp
cwtl
mov
call
insb
outsb
insb
cmp
out
out
loop
push
shrb
rcrl
mov
iret
sub
repnz
aad
jbe
ret
mov
lea
cmp
out
neg
cltd
fstps
mov
nop
pop
int3
mov
mov
cmpb
cs
sbb
cld
insb
jle
and
ss
cmc
out
mov
clc
fld
lods
push
mov
repz
outsl
xchg
sub
inc
cli
insb
mov
in
mov
subl
fs
push
dec
pop
jo
iret
adc
pop
jmp
fstps
daa
movsb
mov
icebp
mov
sub
arpl
mov
icebp
sbb
cmpb
sub
hlt
fdivl
jne
and
testb
mov
and
div
out
out
xor
jg
shrb
dec
and
jbe
hlt
mov
rorl
lret
outsb
outsb
jg
pop
add
or
and
outsb
pop
mov
xor
sbb
cmpsb
daa
mov
mov
mov
fs
mov
arpl
loopne
pusha
push
test
movsb
ss
loope
loopne
icebp
insb
dec
fsubrl
js
or
fdivrp
dec
mov
xchg
mov
xchg
es
out
lcall
push
outsl
xlat
repz
clc
xchg
jo
or
lock
inc
xor
xor
imul
sbb
cmp
xchg
cli
ret
rorb
mov
adc
cs
xchg
sbb
aam
jae
sbb
sti
insl
add
out
xlat
xchg
ret
out
insl
mov
je
int
int
dec
add
add
stos
push
iret
mov
inc
test
fs
mov
sub
xchg
and
xor
inc
push
insb
aas
jecxz
fistl
jbe
jnp
mov
cmp
sti
insl
and
jbe
jae
out
and
lock
dec
popf
out
dec
loope
subl
dec
xor
xchg
out
lret
jg
mov
cs
pusha
push
aam
ret
lods
int
int
and
adc
testl
xor
stos
pop
stc
lcall
int
mov
mov
sbb
iret
mov
fidivl
jp
push
xchg
pusha
cld
add
int3
or
icebp
jmp
dec
out
into
push
bound
push
pop
xchg
jg
fmul
xor
shrb
mov
mov
mov
fcompl
mov
cmp
jle
lods
test
add
movsb
sahf
dec
cmp
inc
or
jmp
mov
mov
mov
loope
pop
xor
in
cmp
pop
or
inc
mov
test
and
stc
pop
adc
negl
xor
mov
cmp
inc
sbb
xchg
rol
and
lret
inc
lret
in
mov
xor
sub
js
mov
test
in
fdivrl
mov
cmp
jns
xchg
jl
cs
fldenv
aas
and
in
fisubrl
push
addr16
lds
mov
mov
into
int
ds
es
and
jo
jmp
mov
stos
dec
add
outsb
aas
fistpl
mov
mov
popf
imul
std
insb
outsb
insb
stos
pushf
push
int
sub
outsb
mul
jae
adc
and
xchg
je
jle
stc
pop
or
and
adc
js
das
ljmp
adc
xchg
and
mov
xchg
jne
mov
rcll
xchg
andl
add
enter
xchg
inc
mov
data16
mov
mov
inc
push
es
add
jmp
daa
ljmp
je
aam
mov
cmpsb
lret
loop
sbb
and
mov
cmpsl
lods
sar
cltd
xor
mov
mov
fsub
divb
sbb
pop
xor
xor
pop
push
mov
in
jo
fwait
test
xor
ficoml
jae
out
clc
and
cmp
sub
lret
mov
cltd
dec
enter
ss
or
pop
insl
jbe
rclb
jae
lahf
loopne
or
push
jle
cmpsl
jo
lcall
fistl
cmp
pop
xor
cmp
jl
jecxz
out
and
ja
in
addr16
and
ljmp
and
lahf
int
int
add
aad
hlt
lahf
rcrb
les
jo
mov
mov
dec
cmp
je
scas
adc
xor
cmpsb
xor
int
jae
and
pop
loop
popf
add
cmp
int
outsl
cs
cmp
daa
xor
push
imul
sbb
es
push
out
out
repz
and
push
cmp
insb
mov
cmp
out
clc
test
add
loopne
cmpsb
les
enter
int
int
push
dec
insl
test
pop
mov
xchg
in
bound
sarl
loop
adc
addr16
mov
jae
mov
sub
cmc
inc
and
jmp
sbb
int
mov
lds
fwait
cbtw
push
cmp
sbb
das
loop
jae
jae
push
test
out
fistpl
imul
loopne
enter
sbb
imul
jl
and
cld
pushf
cmp
fwait
or
lods
imul
jge
mov
call
lss
mov
or
lea
mov
jno
adc
and
mov
out
sub
stos
mov
std
mov
out
cmp
hlt
sub
andb
inc
decl
fcoml
lea
insb
aam
call
int3
jb
push
and
xor
jg
dec
rorb
pushf
pop
test
xor
mov
sar
push
outsb
clc
xor
fdivr
jmp
ja
mov
sahf
into
lcall
int
out
imulb
mov
pusha
out
out
inc
mov
xchg
mov
cli
pop
iret
sub
out
repz
ret
fnstsw
popa
push
mov
xor
out
out
nop
jno
push
insb
jbe
sub
lahf
push
rcl
iret
out
rorl
mov
rcr
cmpsl
icebp
dec
sbb
shl
fwait
fwait
fwait
fwait
xor
repnz
addr16
ret
sarl
fs
xchg
test
out
xchg
lock
add
insb
sub
dec
fnstcw
fwait
fwait
fwait
sub
adc
enter
js
jno
mov
push
cmp
ljmp
mov
rolb
in
sub
call
mov
xor
imul
in
sbb
js
mov
inc
int
in
sti
adc
adc
pop
bound
lods
mov
int
adc
adc
or
ss
aaa
int
test
rolb
lods
push
jge
fcompl
notl
cmp
jb
aaa
aaa
aaa
aaa
dec
lock
fildl
dec
xchg
pop
mov
aam
push
cmp
int3
inc
push
sub
shll
clc
fisubrl
lahf
in
dec
jae
xchg
xchg
fimuls
mov
mov
sbb
out
mov
popf
fidivs
in
mov
std
dec
cmp
incb
loopne
mov
mov
xor
nop
lahf
sbb
movsb
mov
out
notb
pop
int3
dec
mov
sti
mov
lea
pop
cli
push
rclb
jae
jae
scas
or
out
ror
lahf
mov
jge
je
or
test
mov
shrb
or
shr
std
mov
fimull
outsb
outsb
pop
adc
or
int
dec
out
mov
ljmp
cmp
cld
jge
call
sbb
mov
or
outsb
mov
jb
cmp
repz
mov
leave
stos
pop
stos
mov
ror
xor
pop
sahf
scas
clc
fdivr
icebp
imul
inc
test
stos
inc
pushf
xchg
outsb
outsb
outsb
outsb
xor
js
sbb
sbb
or
jge
jle
mov
or
xchg
icebp
and
sarl
sbb
mov
dec
addr16
bound
inc
dec
shl
sub
clc
lahf
imul
repz
repnz
aam
jmp
hlt
push
ljmp
subl
adc
jp
in
aam
xor
loopne
adc
xchg
jo
scas
scas
xchg
sub
clc
into
jge
fcmovne
idivb
icebp
xor
inc
shlb
lea
sahf
out
pop
mov
shl
out
test
lahf
xor
nop
test
out
jp
mov
dec
fidivl
iret
int
scas
cmp
push
dec
pop
icebp
mov
lock
jmp
mov
xchg
lahf
in
add
jbe
jno
cwtl
jne
sti
or
ljmp
fs
les
cmp
jae
jnp
push
sbb
sbb
rcr
popa
xchg
cmp
dec
jae
jae
inc
shll
mov
lds
cmp
push
fcmovne
lods
insl
decb
xchg
adc
mov
pop
cmc
test
sub
int
mov
push
ror
arpl
mov
aaa
aaa
push
fcomps
js
ffree
mov
cld
insb
scas
mov
jecxz
into
jne
adc
inc
aad
add
out
push
pop
cmp
int
sti
lcall
sti
fcoml
outsl
jl
push
call
shll
xchg
test
lods
cmp
loop
pop
and
add
mov
mov
lods
int3
adc
hlt
pushf
aaa
arpl
pushf
insb
fidivl
enter
fwait
aam
out
clc
movsb
unpcklps
xorb
imul
popa
popf
fildl
adc
xchg
out
adc
dec
adc
in
ret
inc
jg
out
ja
bound
sub
mov
aas
insb
lock
dec
mov
or
pop
or
sbb
in
xlat
fucomi
fwait
fwait
popf
or
insb
aam
inc
pop
sbb
lahf
fwait
xchg
jo
sub
jbe
lea
pop
jle
subb
call
jne
mov
mov
dec
mov
stc
int
mov
mov
sub
mov
addr16
push
out
es
mov
jle
dec
arpl
in
add
andb
sti
scas
outsb
ljmp
add
jmp
data16
and
cmc
mov
scas
cli
jle
mov
lret
xor
push
clc
insb
outsb
gs
xchg
push
cld
mov
adc
cmp
cmp
repnz
ret
adc
xor
jmp
mov
dec
ret
jbe
pop
shlb
mov
mov
pop
ret
std
mov
ds
xchg
xlat
inc
jbe
mov
jmp
adc
sub
fdivrl
and
add
mov
ret
jle
or
xor
dec
out
sbb
mov
mov
cs
mov
pushf
fistpl
jge
cmp
enter
in
mov
aaa
shll
inc
dec
xchg
cmp
jbe
les
pop
loop
insl
loope
loopne
call
in
ffreep
mov
fmuls
imul
addb
cmp
idivl
loop
std
in
cs
insb
push
clc
imul
pop
xchg
lock
mov
idivb
or
loope
jg
or
iret
out
mov
int
ret
ss
in
jae
jae
ja
or
out
test
int
int
mov
cmp
and
int
int
frndint
sbb
xor
add
jge
iret
fiadds
pusha
adcb
mov
lahf
in
and
add
sbb
out
push
cmc
xchg
adc
cmp
enter
jae
jns
in
or
imul
aaa
mov
dec
xor
fsubl
into
pop
mov
ds
mov
xchg
stos
hlt
inc
or
jno
popf
jge
mov
das
ljmp
in
or
jmp
jae
sub
ret
xor
jmp
stc
loopne
push
outsl
mov
pop
aas
outsb
jg
mov
sub
fidivrs
jne
outsb
outsb
fyl2xp1
sbb
pusha
hlt
xchg
scas
mov
sub
hlt
mov
mov
in
add
hlt
pop
pop
sbb
dec
ja
int
int
loop
mov
aam
cltd
fldl
aaa
mov
fimull
push
or
mov
add
fbstp
imul
lret
mov
hlt
and
sub
loop
ds
jp
lahf
aas
sbb
lret
cmp
ficompl
jecxz
adc
lock
clc
icebp
adc
adc
xlat
ds
in
xor
mov
ret
bound
jp
jecxz
jle
lahf
in
popf
cli
adc
fiaddl
mov
faddl
mov
out
outsb
jns
adc
jae
jae
les
mov
inc
into
sbb
fsubrs
jae
in
sti
jl
sbb
ljmp
in
inc
imul
and
push
mov
or
insl
mov
mov
inc
mov
mov
mov
cld
sub
xor
xchg
ret
jecxz
icebp
pop
adc
sub
xor
rorb
pop
loop
pop
sbb
mov
addr16
push
lcall
cli
adc
negb
iret
int
sbb
push
sti
pop
sub
fnstenv
fmull
es
shl
out
add
stos
outsb
fisubl
add
ffreep
push
mov
push
pop
cmp
mov
cmp
out
add
pop
xor
ror
out
jb
in
cmp
rcll
push
das
cmp
inc
ret
push
jae
jae
pop
and
sub
fidivl
dec
jg
iret
jae
mov
hlt
pop
lock
int
mov
rclb
xor
sub
iret
js
cmpsl
into
int
pop
jge
sub
notb
sahf
loope
ror
xor
jbe
sub
cltd
js
mov
or
jae
sti
cwtl
sbb
pushf
bound
push
loopne
mov
push
shll
int
jae
scas
cmp
decb
sahf
jge
aaa
mov
dec
stos
cmp
fnsave
jecxz
sub
jl
jl
cmp
notl
aaa
aaa
jl
cmp
push
or
dec
pop
dec
jno
aaa
stos
mov
in
add
and
inc
mov
aaa
mov
int
in
mov
sbb
mull
fdivrl
shlb
out
pop
cmp
leave
negb
mov
out
aad
adc
sbb
pop
adc
icebp
or
pusha
or
aaa
std
dec
inc
dec
in
fwait
fwait
fwait
fwait
jecxz
sahf
js
out
push
pop
cmp
aas
fwait
fwait
fwait
adc
inc
and
xor
mov
push
pop
xchg
outsl
loope
sbb
mov
popa
or
jecxz
dec
mov
jl
repz
cmp
add
adc
rolb
inc
ss
bound
push
ffreep
aaa
pop
jl
sub
xor
lret
or
sub
js
jbe
push
sbb
adc
jmp
ljmp
outsb
outsb
outsb
sbb
inc
mov
xchg
xchg
xor
xor
pop
jecxz
ret
sahf
and
insl
jecxz
pop
mov
mov
popf
test
mov
mov
jg
pop
and
push
add
cmp
xchg
xchg
dec
pop
dec
pop
andb
out
mov
rcll
add
pop
fnstsw
addr16
test
push
cld
and
std
push
lods
addr16
addr16
movsb
inc
xchg
xor
je
leave
adc
aaa
aaa
aaa
mov
es
push
arpl
lods
mov
ds
push
sti
push
test
iret
icebp
push
sub
fistl
pop
dec
dec
jne
mov
enter
inc
fstl
cmp
or
rorl
lods
xchg
lods
pop
and
nopl
and
js
lods
push
pop
test
lahf
in
jae
dec
fisttps
mov
fucomp
std
insb
jg
or
xchg
push
mov
mov
mov
dec
dec
jge
in
cmp
cmp
mov
and
and
cmpsb
loope
mov
mov
push
aam
pop
movsb
mov
or
mov
test
sbb
inc
fadd
pop
sarl
out
push
jno
std
xchg
mov
xchg
lahf
in
jae
cs
int3
in
repz
sbb
test
sbbb
bound
lahf
push
xor
mov
pop
ljmp
out
jae
andl
imul
out
icebp
fnstcw
aaa
jne
cmpb
adc
int
pop
sbb
mov
ret
inc
jecxz
and
mov
ficompl
jl
repz
bound
test
inc
push
push
add
int
int
pop
xor
jo
dec
mov
cld
loope
fwait
or
sub
xchg
mov
fwait
fwait
fwait
leave
jmp
test
int
jp
das
in
mov
pop
mov
xchg
pop
cwtl
or
idivb
sahf
cltd
hlt
push
adc
pop
mov
fcmovne
out
rcll
mov
dec
mov
mov
ds
mov
jb
jae
push
insb
or
mov
xor
daa
jmp
bound
sub
test
mov
out
and
push
pop
aaa
lcall
mov
mov
inc
cmc
cmp
out
or
and
sahf
sbb
pushf
jle
mov
inc
and
out
out
fs
stc
jo
sbb
sub
add
sti
xchg
fcompl
xor
ljmp
push
push
push
loop
xor
sbb
jo
and
rcll
fadds
imul
aad
cmpsb
push
or
int
cmpb
xchg
dec
fcmovnu
fdivrl
leave
pop
or
je
call
xchg
addr16
test
xchg
sub
xchg
push
lahf
shrl
sbb
scas
fbld
call
movsl
stos
dec
inc
xor
lods
iret
mov
sub
lahf
in
addr16
lea
rol
pop
mov
cmp
in
mov
mov
outsb
or
mov
in
lea
negl
mov
out
out
mov
jecxz
lret
aas
aam
ror
out
xchg
jecxz
in
les
cmp
lods
push
test
ss
mov
outsb
loop
insb
cli
shll
or
jge
adc
mov
push
cli
outsb
xchg
in
mov
mov
mov
pop
adc
jmp
lahf
jle
or
call
push
pop
data16
jle
rclb
pop
or
jae
xchg
cltd
adc
cmp
ret
mov
loopne
out
aam
and
ret
ds
lret
and
mov
push
arpl
ljmp
fwait
fwait
and
cwtl
int3
dec
xchg
push
fdivrl
clc
adc
push
push
mov
inc
push
xchg
daa
icebp
icebp
xor
inc
inc
shll
sbb
clc
lods
clc
nop
jg
xor
adc
mov
xchg
pushl
adc
xchg
add
mov
mov
pop
mov
pop
out
out
mov
loopne
gs
lock
std
jae
sti
fdivr
and
xor
cmp
clc
sbb
es
outsb
scas
cli
int3
imull
std
cmpb
daa
pusha
popf
pop
fucomi
fprem
and
in
clc
mov
stos
outsb
outsb
aas
fwait
mov
divb
shlb
or
aaa
ja
insb
jbe
ret
push
dec
cwtl
lock
aaa
ret
repnz
sub
imul
cli
fstps
pop
xchg
lcall
loope
sbbb
subb
cs
jbe
or
xchg
cmp
divl
rcrb
jl
data16
fldl
dec
push
ljmp
aas
insb
dec
ja
push
xchg
ret
fbld
sub
jnp
mov
jge
mov
aam
mov
add
xchg
jle
das
into
mov
push
pop
mov
inc
iret
jae
rcrl
mov
jns
mov
push
jae
jae
in
push
gs
mov
push
sub
cmp
stos
addr16
jb
les
sub
sti
mov
subb
repz
arpl
addr16
or
js
pop
push
mov
cmp
idivl
mov
mov
out
sti
mov
jge
sub
or
or
mov
adc
sbb
lods
test
test
movsb
rcr
ds
push
or
cmp
hlt
in
neg
faddl
jmp
mov
cmp
int
int
std
inc
mov
test
imul
xchg
jp
int
push
shrb
out
adc
push
mov
mov
pop
inc
outsl
jecxz
pop
push
int
int
testb
sbb
pop
in
sahf
int
dec
shrl
dec
xor
aam
sub
mov
popf
and
jae
sti
dec
pop
stos
adc
push
inc
inc
popf
jecxz
les
lcall
xchg
inc
xor
shll
shll
sti
ds
out
mov
arpl
jae
push
cmovge
fucom
out
cmpsb
shll
mov
ja
xchg
mov
jp
out
in
pop
pcmpeqb
insl
rol
clc
insb
mov
lret
ljmp
addr16
movsb
pushf
divb
ret
ficomps
lea
pop
addb
push
pop
xor
jae
mov
push
es
push
repnz
stos
mov
fs
adc
xor
dec
iret
out
mov
lea
shl
dec
iret
scas
js
add
hlt
ljmp
outsb
outsb
outsb
les
imul
jo
push
sbb
mov
mov
jae
inc
clc
fdivl
cld
mov
int
dec
ljmp
sbb
int
int
and
jo
or
pop
mov
ss
mov
in
sbb
mov
mov
int
sti
faddl
dec
roll
jae
aam
lock
dec
out
icebp
mov
shlb
addr16
lds
fdivrl
mov
jbe
add
ret
in
ret
sti
sahf
push
repz
fcompl
dec
into
mov
mov
addr16
mov
or
mov
mov
iret
test
repnz
lock
mov
fnsave
jle
das
mov
aaa
insb
cmp
adc
outsb
daa
loopne
ljmp
rolb
pusha
mov
mov
insl
add
add
out
idivb
scas
mov
adc
mov
lcall
mov
test
lea
sahf
out
pop
jle
cmp
shlb
sti
cmp
lock
xchg
test
testb
jl
es
push
js
outsb
iret
std
sub
and
pushf
outsb
outsb
outsb
outsb
add
stc
addr16
push
sbb
pop
jge
sahf
sub
out
mov
lds
clc
xchg
inc
push
je
rorb
ret
std
insb
outsb
jbe
xchg
icebp
inc
repz
jb
mov
bound
fmul
push
jae
jae
lds
mov
scas
loop
repnz
rcl
jae
and
imul
mov
jl
inc
mov
bound
pusha
rolb
lods
mov
int
in
test
push
loope
push
cld
movsl
dec
in
int
int
cltd
das
pop
inc
adc
sbb
cmp
add
int
or
fnstsw
jle
adc
or
pop
pop
mov
mov
outsb
loopne
clc
fnstcw
sbb
mov
out
adc
into
lret
fisttpl
mov
inc
and
fdivr
xor
fwait
cmp
int3
cs
addr16
cwtl
repnz
xchg
mov
add
in
clc
sub
test
insb
and
mov
fistps
sti
pusha
hlt
jns
test
jmp
leave
push
and
nop
or
dec
cmp
mov
fisubrl
or
ss
lock
loopne
shlb
lods
cmpsb
xchg
subl
fwait
fwait
sub
lds
push
and
mov
popa
adc
bound
inc
inc
cmc
fwait
fwait
fwait
sub
adc
and
pop
mov
insl
lds
fwait
fwait
fwait
fwait
xor
int
mov
fdivrs
loop
add
sbb
sbb
push
mov
mov
dec
pushf
sub
imul
idivb
adc
add
pop
lret
outsb
outsb
sub
imul
jns
dec
adc
fdivrl
imull
in
pop
jnp
and
cmpb
mov
das
pop
in
push
arpl
jae
cmovg
inc
pop
ljmp
in
out
addr16
cmp
inc
cld
out
stc
push
adc
insb
fsubrs
sahf
js
mov
xchg
pop
pop
je
adc
or
pop
gs
mov
jae
and
xor
push
jne
cmp
adc
aas
nop
movsl
sahf
inc
aad
dec
mov
fbld
aaa
mov
cs
sbb
dec
or
inc
in
dec
lock
fsubrl
mov
add
mov
and
loop
add
xchg
mov
xchg
add
icebp
mov
jmp
push
aas
lcall
js
add
outsb
and
add
out
jl
out
xor
jbe
aaa
aaa
aaa
push
lock
mov
push
xchg
mov
aaa
aaa
aaa
je
xchg
popf
pop
pusha
lea
int
mov
fiadds
rcrb
popf
test
pop
hlt
xor
out
bound
ret
test
sbb
xchg
outsb
outsb
das
mov
mov
jle
test
outsb
and
mov
lcall
jo
jl
jno
add
inc
sarb
fcompl
push
shl
dec
sti
inc
lds
in
arpl
std
dec
loopne
fimull
sbb
xchg
cmpsl
sysenter
push
std
jb
or
mov
sbb
jae
shrl
call
scas
xchg
aaa
mov
push
push
out
cmp
loop
mov
shll
aaa
aaa
aaa
inc
jns
ja
fs
pop
imul
sub
in
add
shl
daa
out
divb
pop
mov
stc
mov
iret
out
pushf
jge
add
xor
sti
iret
mov
test
cltd
sarl
add
aaa
aaa
cmp
pop
jmp
push
pusha
inc
jae
or
inc
popf
lret
jmp
jb
mov
inc
or
inc
jmp
fidivrl
and
cld
insb
cs
es
rorl
aaa
aaa
mov
outsb
mov
push
xor
sbb
ss
aaa
aaa
inc
into
mov
jnp
and
movsb
lods
scas
cli
pop
js
dec
test
push
mov
lods
cmc
sub
insb
pop
movsl
cmpsl
pop
jp
cmp
mov
shrb
dec
push
and
ss
sub
mov
cmp
sbb
movsb
std
mov
dec
pop
jne
xchg
jo
mov
mov
push
iret
sarb
mov
or
pop
mov
dec
test
in
and
lods
push
js
xchg
cmpb
push
lahf
fwait
fwait
fwait
dec
out
lahf
imul
jae
jnp
push
movsl
test
push
mov
mov
lret
clc
insl
pop
test
repz
cmp
shlb
mov
loopne
push
jle
adc
add
lret
lea
rcrb
lahf
rorb
out
cli
sub
loope
loop
fimull
mov
jmp
push
or
sbb
int3
into
mov
xchg
lock
add
sahf
in
mov
sti
mov
iret
sti
push
xor
repnz
jmp
int
inc
into
pop
mov
push
mov
ja
sahf
int
out
push
mov
push
xor
xchg
gs
aaa
aaa
aaa
cmp
xchg
outsl
jno
fsubs
std
ds
out
out
lcall
into
pusha
outsl
outsb
outsb
jg
dec
pop
hlt
aam
mov
loopne
mul
mov
dec
repnz
push
push
jle
cmpsl
iret
test
pop
xor
jge
int
xchg
sahf
in
adc
test
cli
jns
ds
movsl
jns
dec
dec
jno
add
mov
popf
fwait
fwait
mov
pop
jge
pop
adc
push
icebp
sbb
mov
in
or
sbb
push
stos
mov
aaa
mov
int
or
popa
or
xchg
ret
pop
pushf
nop
xchg
jae
fnstcw
das
or
jl
pushf
bound
jae
sbb
add
lods
rcrl
jo
jae
jo
repnz
ljmp
mov
xchg
xchg
sub
sub
dec
fbstp
jae
add
mov
or
movsb
jge
mov
cmpsb
jp
xor
mov
mov
add
clc
push
clc
push
stos
cltd
mov
lahf
lcall
js
int
int
repnz
arpl
pusha
sbb
int
fidivs
aam
or
js
out
nop
std
pop
add
test
aas
cs
mov
addr16
sub
push
xlat
inc
sar
nop
jae
test
push
mov
call
adc
pop
fdivrl
sti
sbb
xorl
fdivl
ret
fnop
call
jge
neg
pop
push
and
test
xchg
jp
outsw
mov
and
adc
inc
xor
outsb
outsb
jp,pn
sbb
in
daa
sbb
insb
cmp
lods
fldenv
ja
push
cld
sbbb
dec
shll
pop
jp
insb
and
pop
cmp
jmp
push
jae
lods
dec
out
or
out
shr
iret
int
jae
sbb
lret
in
pop
sbb
push
fwait
or
int
lahf
fimuls
bound
jne
pop
lahf
int
mov
mov
fistl
loop
pop
test
xchg
push
push
and
cmp
mov
pop
shlb
mov
es
adc
push
rep
test
fmull
into
sub
loope
push
jae
mov
fidivl
xor
inc
iret
in
addr16
add
sbb
ret
clc
inc
jl
cmc
adc
sbb
pop
adc
cli
jl
test
fucomi
mov
xchg
jnp
repz
mov
sbb
xor
jo
push
jge
adc
mov
xor
dec
xchg
mov
pop
and
mov
pop
add
sbbl
mov
hlt
jmp
movsb
outsb
outsb
aas
fistl
pop
stos
cmc
sub
xor
outsb
outsb
mov
inc
cwtl
ret
jae
xor
mov
call
xchg
mov
push
das
push
clc
stos
out
dec
mov
clc
fcompl
fidivs
jnp
shr
or
outsb
outsb
and
cmpw
xor
clc
insb
ret
fildll
shl
je
sub
repnz
adc
testl
and
ret
pop
ss
idivl
push
bound
sub
lcall
xchg
enter
mov
cmp
cmp
adc
pop
add
cmp
out
or
jge
aas
add
xchg
mov
scas
jecxz
jl
xor
lret
movsl
mov
outsl
loopne
sarb
sbb
jge
or
mov
out
mov
xchg
out
out
sub
es
pop
pop
mov
mov
mov
xlat
xlat
dec
js
bound
mov
dec
mov
mov
sbb
add
out
mov
inc
push
sub
ljmp
fisttpl
mov
ror
lret
mov
insb
dec
sbb
bound
dec
xor
adc
int3
jge
xchg
pop
sbb
adc
imul
mov
lods
dec
and
les
shlb
outsb
mov
in
in
jecxz
and
mov
push
jge
cmp
sarl
cmp
sbb
hlt
fprem
xchg
mov
jbe
push
lret
in
lea
mov
push
bound
jmp
in
sub
inc
orb
pop
lock
sub
mov
call
xor
inc
mov
cmp
and
sbb
push
cmp
out
mov
arpl
jle
int
hlt
jecxz
and
repnz
loopne
insb
cmp
test
cmp
mov
int
shrb
leave
pop
scas
out
out
nop
or
clc
jle
jae
lods
insb
xor
xor
ljmp
outsb
push
imul
pop
jp
rclb
mov
or
iret
js
sub
int
pop
mov
mov
iret
scas
cmpsb
mov
fisttps
mov
jno
pop
or
call
je
fimuls
js
mov
in
jmp
cwtl
or
dec
xchg
ret
jae
sti
fnstenv
pop
js
and
mov
jne
cmp
aaa
aaa
mov
mov
adc
xor
push
mov
ds
dec
andb
or
pop
push
cmpsl
pop
sub
dec
or
sahf
std
dec
ficompl
mov
add
pop
ljmp
enter
int
int
fwait
xchg
imul
jno
ds
roll
jne
inc
push
sti
jle
fmull
jmp
lcall
addr16
pop
sbb
das
push
adc
js
ds
cltd
int
je
je
lock
lahf
es
push
insb
outsb
clc
fldenv
div
cwtl
pop
adc
jecxz
sar
aad
mov
pop
lahf
int
addr16
lea
popl
adc
adc
imul
aaa
mov
cmp
xor
and
mov
jle
jno
sbb
lea
push
outsl
cmc
bound
push
insb
pushf
dec
leave
es
cmpsb
imul
inc
cmp
pop
jle
dec
mov
dec
nop
movb
and
fwait
iret
int
cmp
push
mov
lahf
fwait
fwait
fwait
cmc
and
pop
xor
mov
or
popf
int
pop
or
inc
loop
jge
lret
pop
cmc
mov
sub
mov
ret
clc
mov
test
or
arpl
dec
bound
xor
and
cmpsb
cmp
repnz
out
ljmp
inc
pop
ret
mov
int
filds
push
xchg
test
jle
dec
jo
lahf
int
std
push
push
jae
jbe
fwait
sbb
add
clc
idivb
fwait
fwait
js
dec
xchg
jmp
lods
aaa
and
jle
lea
xchg
xor
xchg
jbe
or
sahf
fwait
mov
in
fsubs
lahf
in
jnp
add
cwtl
and
or
push
fwait
mov
lock
mov
fimuls
cmp
les
ror
xchg
xlat
mov
and
sub
jno
jns
cmc
mov
xor
or
jo
mov
sub
xchg
mov
aas
dec
dec
test
mov
popa
adc
out
out
push
into
mov
xor
test
int
out
in
fldl
movsb
mov
iret
cmp
push
xchg
mov
andb
iret
pop
lcall
sub
bound
mov
or
mov
sbb
lods
js
shlb
loope
cmp
outsb
outsb
outsb
lahf
mov
mov
daa
and
dec
push
xorb
out
add
xchg
adc
mov
nop
std
insb
mov
or
cltd
lahf
out
dec
rcr
and
insb
lcall
mov
mov
shlb
sbb
cli
jecxz
and
clc
stc
fdivrl
adc
dec
lock
mov
movsl
js
pop
aad
hlt
adc
jnp
sub
jl
fidivl
pop
shlb
pop
fs
jl
or
inc
sbb
mov
aaa
mov
jecxz
dec
divb
fimull
push
enter
jae
jle
lahf
stos
data16
es
dec
out
adc
push
jae
jae
or
clc
jg
lret
add
lock
stc
loope
dec
pop
fwait
mov
xchg
outsl
mov
xchg
fwait
fwait
fwait
fwait
js
loopne
iret
push
mov
bnd
setl
mov
scas
and
mov
jecxz
clc
inc
insb
mov
add
aaa
aaa
aaa
in
dec
call
mov
push
fistps
xchg
xorb
sahf
insb
outsb
outsb
jbe,pn
mov
xor
mov
hlt
pusha
and
mov
xchg
aam
rcl
dec
sub
andl
fdivrl
mov
out
mov
push
or
lret
cmpsl
dec
mov
xchg
cld
mov
js
out
clc
outsb
dec
push
xlat
lods
jbe
jne
adc
insb
pop
xchg
lods
fidivl
mov
cmpsl
jp
cmc
pop
fdivr
inc
lahf
xchg
into
fistpl
sahf
cmp
pop
pop
sub
fdivrl
test
rcr
das
cli
cmp
jae
jae
mov
add
mov
push
ds
mov
inc
rcrb
ret
popa
dec
or
in
pop
mov
jl
cmp
ds
xor
ds
mov
or
lock
pop
call
push
sbb
cmp
addl
arpl
rcl
xor
test
int
int
and
xchg
das
pop
add
or
jns
setg
int
shll
in
cmp
pushf
xchg
cmpl
repnz
sarb
icebp
out
out
out
mov
pop
into
ret
push
outsb
aas
fcmovne
fists
mov
mov
and
ficomps
loope
sahf
outsb
outsb
outsb
outsb
std
add
sahf
imul
outsb
int3
outsl
lahf
data16
sar
mov
ja
filds
push
cmc
mov
add
out
push
pop
fsubrs
fwait
jle
and
nop
xor
pop
mov
xchg
lods
imul
dec
ja
or
test
out
and
mov
mov
adc
mov
lahf
ljmp
shrl
mov
cltd
pushf
sahf
dec
dec
int
fildll
mov
unpcklps
dec
push
lahf
js
mov
aad
lods
fimuls
xor
test
lods
push
mov
cwtl
bound
or
das
loopne
or
sub
out
mov
test
insb
outsb
and
mov
push
stos
jbe
cli
lret
xchg
inc
jecxz
shrb
push
pop
lret
dec
enter
mov
test
pop
mov
out
xchg
xor
cmp
xchg
xlat
stos
andb
push
jg
cld
inc
sub
push
insl
roll
stos
xor
adc
jbe
push
loopnew
ds
mov
push
or
sub
inc
xor
repz
aaa
aaa
outsl
and
fs
sbb
mov
in
push
mov
jbe
movb
stc
mov
ljmp
xor
aam
mov
insl
push
add
clc
movsl
es
jl
test
xchg
lods
test
pushf
mov
xchg
sub
incl
xchg
sahf
sub
divl
int
insb
pop
ret
out
fmull
push
dec
push
lods
adc
stc
xchg
pop
dec
push
sub
int
int
loope
and
rorb
int
mov
test
jle
lahf
int
int
pop
scas
push
mov
push
sarb
ds
cmp
xor
mov
fwait
fwait
fwait
mov
js
lret
lret
loopne
fdiv
inc
push
push
ret
inc
rclb
push
cmp
test
add
dec
dec
dec
les
stos
push
fstl
jns
cmp
out
into
popl
popa
cld
adc
push
sahf
pop
add
inc
jmp
jnp
cmp
mov
lock
mov
inc
and
inc
dec
jne
jge
xor
pop
cmp
xor
mov
xor
fs
mov
roll
aad
or
sbb
dec
xchg
xchg
arpl
mov
cmp
cmp
out
push
jb
loope
mov
xchg
test
dec
xor
fstps
popf
cwtl
push
adc
add
jae
mov
daa
in
mov
adc
fisttpl
mov
aad
lea
jbe
jbe
sbb
movsb
cmpsb
filds
add
sbb
shlb
loopne
push
sti
in
dec
aas
jl
int
pop
in
adc
lahf
int
mov
popf
mov
stos
xchg
xor
mov
aaa
mov
push
jns
sbb
mov
and
outsb
adc
mov
int
xor
ret
cmp
inc
mov
pop
stos
aam
mov
out
aam
out
push
mov
mov
imul
mov
push
rcrb
cmp
in
cmp
out
xor
mov
and
addb
jnp
cwtl
adc
icebp
mov
pusha
outsb
xchg
pusha
cwtl
sub
or
std
insb
outsb
outsb
sub
mov
bound
mov
arpl
out
mov
adcl
add
es
call
sahf
scas
mov
lcall
dec
xchg
sahf
int
and
jbe
lock
jl
jbe
sahf
mov
xor
data16
fcmovne
cmpsb
pop
in
movsb
bound
cmp
add
nop
aam
adc
jnp
mov
pushf
mov
outsb
clc
fdivs
add
insl
or
and
mov
pop
jmp
fdiv
mov
in
lahf
mov
shrl
std
je
int
xchg
jo
roll
dec
mov
in
or
ds
cwtl
mov
loop
fwait
fwait
cmp
mov
das
loop
jno
jnp
or
push
add
addr16
jge
dec
out
bound
fildll
test
ret
xchg
ficoms
int3
iret
mov
sbb
mov
addr16
jle
adc
mov
jne
mov
mov
lcall
cmp
mov
and
mov
fwait
out
mov
std
adc
aaa
pop
jp
mov
xchg
aas
fistl
mov
push
out
popa
loopne
ret
cld
fwait
loop
sbb
lahf
or
mov
fidivl
push
jle
shrl
aaa
aaa
aaa
aaa
inc
push
dec
rcrb
cmp
lds
jle
test
je
pop
push
clc
icebp
insb
outsb
outsb
add
stc
push
movsl
movsb
mov
inc
vaddsubps
sub
fdivl
shlb
fdivrl
push
add
ret
repz
int
mov
lds
hlt
add
in
push
cs
mov
sar
lock
fildl
scas
sahf
pop
repnz
cld
loopne
ds
aaa
mov
es
sbb
pop
mov
push
fcompl
sbb
pop
test
mov
lcall
insl
mov
mov
and
sbb
enter
insb
mov
sahf
mov
lds
aaa
aaa
push
stos
inc
stos
push
cmp
push
mov
mov
aaa
aaa
flds
cmpsb
adc
sbb
movsb
cmp
push
mov
push
dec
inc
pop
out
dec
mov
push
movsl
pop
adcl
or
ret
push
push
pusha
lret
xchg
jp
je
fsubrp
test
cmc
jae
aad
push
in
and
pop
or
jae
jae
fldcw
call
aam
xchg
jae
sbb
sbb
mov
mov
lea
das
ja
xchg
out
inc
out
cli
cltd
cmp
aad
call
xor
mov
addr16
dec
in
or
sarl
out
out
sbb
outsb
xor
out
out
or
lcall
clc
out
out
or
mov
ja
ljmp
aas
out
mov
fdivrl
sub
imul
addb
mov
aaa
adc
cs
stc
pop
outsb
outsb
outsb
pusha
xor
fcoms
rcrl
pop
adc
sbb
adc
jg
ljmp
add
mov
mov
int
int
bound
xchg
mov
sbb
int
gs
xchg
mov
ds
out
out
jo
mov
or
jge
push
sahf
cmp
inc
xchg
push
sbb
arpl
jb
jno
pop
sti
scas
out
mov
mov
hlt
scas
pop
xor
add
or
cmovbe
negb
pushf
adc
sbbl
imul
rclb
fists
dec
adc
lahf
push
jl
mov
fcomi
pop
sbb
dec
jp
aaa
aaa
mov
or
dec
shr
cmp
xchg
in
cmp
push
mov
mov
mov
imul
mov
cmpsb
sub
test
ds
out
icebp
adc
je
ds
inc
add
push
inc
dec
lock
fwait
fwait
sub
fbstp
xchg
mov
dec
popf
mov
insb
imul
hlt
sets
jecxz
dec
sti
mov
sbb
outsl
ljmp
pop
lock
insb
jb
add
add
int3
int
daa
loopne
jno
jo
sub
int
xchg
jnp
shrl
lret
out
adc
fisttps
iret
pop
add
mov
dec
sub
fidivl
pushf
int
int
shll
sub
aaa
aaa
push
adc
push
mov
xchg
dec
imul
add
sbb
jne
or
addr16
mov
mov
nop
pop
add
adc
cmc
out
and
stos
inc
pop
loop
dec
cli
xchg
or
sbb
push
sub
inc
outsb
outsb
outsb
outsb
sbb
sub
repz
mov
clc
jp
xor
mov
dec
jle
scas
mov
ljmp
js,pn
in
mov
inc
int
pusha
jecxz
test
popa
or
inc
xor
cmp
mov
iret
mov
test
out
xchg
jnp
or
int3
inc
mov
int
jae
test
lods
lods
sti
ss
in
mov
add
adc
and
int
js
pop
push
push
pop
and
sbb
sub
int
sub
inc
xor
fwait
fwait
cld
leave
push
test
push
fdivl
mov
fwait
fwait
scas
cmp
sub
imul
fmull
fdivrl
push
daa
push
mov
arpl
mov
sahf
pop
scas
inc
out
out
sahf
pop
sbb
pop
pop
inc
inc
sbb
aas
lods
iret
sbb
xor
orl
aaa
std
insb
jno
xchg
mov
enter
cmp
pop
shlb
stos
mov
jae
pop
xchg
xchg
lds
rcrl
inc
jle
call
pop
cvtps2pd
push
filds
js
es
cmpsb
in
or
fwait
or
cmp
jb
adcb
mov
mov
pop
adc
enter
dec
pop
ds
push
adc
inc
mov
inc
lahf
not
fildll
aam
subl
ljmp
jns
shl
add
fdivl
cmp
lcall
fcmovbe
loope
inc
sbb
outsb
lahf
fwait
fwait
outsb
mov
add
cmc
mov
out
sti
insb
out
loope
shll
push
adc
out
subl
loop
mov
fsub
out
out
xor
std
nop
push
aas
imul
adcl
jae
pop
gs
mov
push
jbe
lods
or
mov
out
icebp
mov
mov
pop
jae
push
scas
cmc
pop
enter
imul
jae
out
sti
pop
popf
in
lret
xchg
adc
xor
daa
pop
push
mov
movsb
addr16
dec
aaa
arpl
int3
sahf
std
insb
pop
stos
les
dec
pop
xchg
fildl
push
clc
out
pop
dec
frstor
mov
std
xchg
mov
jno
lcall
mov
loopne
into
in
in
mov
repnz
add
and
out
jbe
or
jmp
int
out
rcrb
adc
imul
out
out
push
in
xchg
pusha
jns
xor
cmp
je
adc
out
pushf
call
or
sub
out
divb
sub
xchg
mov
fcmovne
xchg
cmp
push
fcompl
inc
xchg
sahf
testl
pusha
cmc
mov
je
mov
loopne
roll
loope
int
inc
pop
ret
in
or
cmp
xchg
add
or
inc
outsl
xor
pop
repnz
jae
out
mov
in
adc
xlat
shlb
jle
cmc
adc
out
inc
xor
mov
out
and
push
sbb
bound
lcall
rcr
cmp
movsb
faddl
cltd
nop
je
pop
ss
aaa
aaa
push
sbb
jbe
lahf
pop
in
sbb
lret
mov
lahf
int
adc
cwtl
xor
es
pop
les
pop
loope
mov
jp
mov
fdiv
jge
js
fisubrl
lock
pop
movsl
fcoms
aas
aad
fdivrl
je
out
inc
mov
aad
aaa
aaa
aaa
aad
jl
push
bound
movsb
stc
xor
sub
aaa
aaa
daa
push
ljmp
jp
jmp
shlb
out
fdiv
xchg
ljmp
mov
aam
insl
lea
outsl
dec
sahf
jecxz
loop
cmc
xorb
scas
inc
sub
sahf
xchg
ljmp
pushf
dec
add
add
pop
add
xor
push
ret
int
jae
sbbb
out
popa
mov
test
mov
int
int
mov
fwait
and
mov
int
ss
pop
push
shlb
sbb
jnp
inc
sbb
ja
fwait
push
lahf
add
mov
out
jbe
je
xchg
mov
push
jl
out
popa
add
pusha
in
imul
mov
aaa
aaa
aaa
cmp
adc
mov
outsb
sti
fwait
inc
hlt
sarb
or
aas
ss
fadds
jecxz
loopne
cld
int3
insb
fnstcw
jo
xchg
out
cli
mov
push
in
addr16
ret
dec
xchg
les
ret
mov
mov
les
mov
imul
sahf
pop
or
sub
jp
push
into
negl
push
outsb
mov
leave
clc
pop
jl
jg
mov
mov
outsb
outsb
outsb
xchg
fdecstp
idivb
lods
sbb
push
ss
pop
xchg
sti
in
iret
mov
mov
dec
clc
or
xor
add
pop
mov
or
repnz
mov
out
jle
xchg
push
inc
cld
jge
sti
fnstcw
popf
pushf
mov
aam
mov
sub
insb
jae
jae
cs
nop
inc
add
iret
jae
jae
cmp
movsb
sbb
fidivrs
in
xchg
out
or
iret
in
inc
pop
out
outsb
xchg
into
aad
push
icebp
lock
push
push
aaa
popa
mov
bound
xor
or
andl
push
sbb
sub
pop
out
stos
jae
mov
mov
push
lret
mov
aaa
aaa
aaa
aaa
xor
test
push
cmpl
leave
js
jmp
int
jl
sub
inc
xchg
aam
out
xchg
push
shl
out
pop
dec
ds
mov
pop
outsl
stc
jo
insb
outsb
outsb
cmp
and
imul
or
lock
cmp
clc
mov
xor
pop
xchg
stos
xchg
popa
insb
outsb
outsb
outsb
xchg
sub
mov
gs
mov
adc
sahf
mov
lea
mov
pop
cld
std
lods
je
aas
std
inc
in
push
push
sti
add
sub
cmp
rcrb
pusha
and
in
dec
xor
ss
fcoms
lock
rcr
sub
cmp
push
rol
adc
popa
jnp
test
nop
fimull
mov
pop
mov
js
mov
aaa
hlt
jl
and
sbb
cli
in
sub
dec
ss
je
add
jmp
pop
pushf
inc
call
pop
cmp
cmc
ret
mov
cltd
addb
es
inc
int
pop
aas
xabort
cmp
mov
adc
mov
cmc
mov
repz
cmp
sbbb
or
adc
fsubl
mov
jbe
adc
call
repnz
ja
mov
mov
mov
scas
adcl
and
call
ljmp
es
fmull
out
int
int
xchg
cmp
aam
dec
push
push
xchg
dec
int
int
ret
out
dec
lret
test
xchg
mov
aam
loop
push
cmpsl
jns
add
fcmovne
out
xchg
push
push
rcrl
dec
jmp
push
mov
adc
mov
dec
insb
mov
jae
pop
js
or
sahf
cmp
fcos
movsb
jae
jae
push
push
fdivs
add
sbb
mov
imul
test
shlb
mov
xor
div
ja
add
cmp
sar
mov
iret
int
jb
test
mov
add
push
out
mov
or
into
fwait
fwait
fwait
fwait
sahf
out
lods
les
rcpps
mov
fwait
fwait
xor
cmp
xchg
dec
add
jl
outsb
xor
cmp
push
test
js
outsb
jecxz,pt
pop
rorb
int3
cwtl
pop
sub
out
cmpl
mov
push
loopne
outsl
mov
jbe
fs
ljmp
ds
jle
push
dec
sahf
scas
and
test
psubw
mov
mov
mov
jb
out
idivb
repnz
cmp
xor
and
mov
sbb
and
add
push
fbld
mov
test
out
filds
add
sbb
bound
iret
out
out
ss
and
das
js
and
mov
ja
adc
outsb
outsb
outsb
outsb
aaa
lahf
das
sbb
sti
adc
std
insb
outsb
sbb
cmp
mov
sub
leave
test
jae
or
aam
out
jl
pop
fs
mov
jae
mov
frstor
mov
mov
and
jl
sar
int
mov
pop
xchg
fwait
cmp
mov
int
nop
adc
mov
sti
jle
jecxz
loopne
xchg
inc
dec
ljmp
loop
mov
out
sbb
fisttpl
cmpsl
xor
aas
jnp
push
int
imul
sarl
sbb
fs
push
push
lahf
int
xchg
sub
fwait
mov
or
jecxz,pn
mov
aas
mov
gs
ss
mov
jp
jge
push
pop
ljmp
sti
inc
and
jb
lods
cld
dec
sub
mov
add
jae
jae
mov
and
jnp
jb
jae
in
push
aas
out
push
inc
int
int
out
ds
sub
stos
add
int
push
addr16
lds
dec
jae
es
cmpsl
pop
lock
mov
int
cmpl
xchg
adc
not
push
test
int
cltd
aam
cmp
outsb
jl
cmp
jp
xor
in
inc
jno
js
sub
jle
dec
ss
mov
addb
cmp
int
fwait
mov
jns
sbb
mov
test
test
inc
rcll
fisubs
mov
mov
xor
pop
mov
mov
adc
pop
sub
pusha
mov
or
outsb
outsb
scas
mov
ror
jbe
cmp
push
dec
gs
xchg
shll
and
es
pop
clc
ljmp
add
call
movsl
mov
mov
mov
xor
test
ret
mov
test
mov
jae
sub
jbe
push
cld
aaa
aaa
aaa
aaa
jne
cltd
inc
mov
nop
push
loopne
jne
ss
sbb
repz
add
movsb
jle
mov
es
loope
xor
out
jae
pop
loopne
add
nop
es
xchg
ss
jae
jae
and
movsl
loope
adc
sbb
pop
jae
jae
inc
mov
hlt
dec
push
pop
jbe
gs
xchg
fbld
mov
ljmp
out
pop
mov
adc
in
dec
int3
leave
jae
jae
push
cmpsb
call
inc
dec
dec
mov
test
mov
xchg
push
add
push
dec
jecxz
xorb
mov
mov
daa
idiv
xor
add
jae
divl
cs
pop
sbb
jae
xor
mov
pop
xchg
loopne
mov
shlb
mov
pushf
data16
out
or
popa
mov
push
add
iret
iret
shrb
xor
outsb
outsb
outsb
push
popa
pop
and
out
inc
das
sarl
incb
ljmp
and
outsb
outsb
or
dec
or
pop
mov
rcrl
out
testb
inc
sahf
mov
sbb
sbb
xchg
test
xor
jne
pop
cltd
data16
jae
dec
lret
cltd
xor
ljmp
jae
cwtl
mov
dec
pop
cmp
incb
cmp
dec
ficoml
mov
cmp
in
jae
adc
and
dec
xor
jmp
iret
int
adc
or
adc
jb
stos
jne
testl
mov
add
movsb
in
stos
sbbb
lock
xchg
sub
lret
sub
sub
push
push
inc
xchg
shl
out
adc
mov
outsl
pop
jp
int
cmpl
das
aaa
aaa
mov
jmp
bound
movsb
xor
fwait
fwait
sub
cmp
outsb
sbb
lods
mov
jge,pt
pushf
clc
push
mov
rorb
xchg
mov
je
sbb
aaa
aaa
pop
shl
out
mov
or
xchg
mov
in
fdivrl
aaa
push
stos
je
stos
fidivl
test
mov
scas
clc
movsb
xor
push
inc
pop
dec
mov
sub
outsb
outsb
xchg
inc
or
add
int
addr16
rcrb
shl
out
loop
jecxz
or
pop
das
mov
sub
xor
mov
outsb
outsb
mov
xchg
arpl
jns
test
mov
pop
aaa
mov
dec
mov
push
sbb
bound
in
mov
xor
lcall
adc
fwait
pop
arpl
cmp
aaa
mov
leave
outsb
outsb
outsb
mov
adc
lods
xchg
ret
add
outsb
mov
fstpl
xor
jle
dec
dec
int
dec
sub
int3
push
int
or
dec
or
mov
jle
xchg
mov
push
cmp
insb
sbb
ret
sahf
arpl
adc
sub
cli
in
dec
mov
repz
rorb
repz
pop
sbb
sub
jmp
cmp
xor
call
leave
or
sti
movsb
imul
xchg
fimull
adc
jae
jae
inc
test
pop
jo
insl
pop
outsl
out
idivb
mov
mov
sti
scas
dec
mov
out
out
jb
repnz
cmc
cmp
inc
pop
shlb
and
mov
lret
aaa
mov
sbb
mov
aas
mov
jb
aam
cmp
jl
aaa
aaa
sub
xlat
xchg
dec
and
test
xor
adc
push
mov
int
in
jp
jl
fadd
lret
hlt
xchg
sub
lock
xor
jae
sti
nop
mov
mov
pop
insl
inc
push
lock
fbstp
xor
dec
fiaddl
pop
int3
mov
xor
xor
jge
inc
cmc
jbe
das
cs
mov
xchg
push
xchg
bound
clc
push
push
jbe
sbb
mov
mov
push
fsts
mov
xor
sahf
imul
xor
rclb
loopne
mov
sbb
subb
cmp
fcompl
jge
dec
dec
or
inc
test
pop
jg
dec
mov
mov
ljmp
js
sub
fwait
sub
mov
dec
pusha
xor
fwait
pusha
fwait
fwait
fwait
fwait
mov
movsb
mov
pop
std
pop
push
rolb
repz
fwait
ds
mov
sbb
imul
sarl
fwait
fwait
fwait
fwait
outsb
mov
out
xor
xchg
fwait
jmp
cmp
jo
hlt
lret
jp
imul
shrb
fcompl
sti
ja
repnz
scas
adc
cmpsl
int
inc
clc
mov
cwtl
enter
push
xor
lahf
or
bnd
xchg
xor
xchg
das
nop
in
mov
arpl
call
insb
xchg
cmp
mov
jne
sub
out
sbb
mov
mov
fwait
or
mov
fdiv
mov
or
fisubrl
iret
in
or
mov
mov
or
mov
outsl
jge
outsb
outsb
outsb
pop
dec
fnstenv
hlt
test
insb
cwtl
jp
jecxz
in
adc
clc
insb
outsb
int
shll
ljmp
jle
aas
lea
inc
imul
mov
and
mov
cmpsb
lahf
in
sbb
xchg
loop
and
test
out
outsl
out
out
int3
dec
xchg
js
stc
mov
shlb
out
xchg
and
popf
or
inc
mov
shl
xor
outsb
filds
lahf
ja
cmp
out
mov
add
mov
outsb
hlt
jmp
xchg
es
inc
cmp
jo
mov
outsb
outsb
outsb
cmp
or
jae
shlb
hlt
jne
jmp
aaa
jae
jae
mov
dec
int
pop
notl
mov
dec
addr16
ljmp
ds
aaa
push
push
lods
and
popa
adc
xchg
cmp
push
cltd
cwtl
jge
js
ja
mov
xor
pusha
pop
inc
push
and
mov
mov
aad
imul
shr
sub
xchg
fldl
arpl
aam
jae
addb
mov
or
sub
sahf
mov
jl
mov
testb
push
in
cmpb
pop
sbb
lock
out
mov
mov
push
sub
jbe
mov
ret
fdivl
in
cmp
cmp
mov
dec
pop
mov
lahf
js
es
insl
in
fnsave
lods
jmp
mov
xchg
ds
cmp
push
mov
hlt
mov
dec
inc
adc
sti
loop
fidivrl
cmp
popf
loop
loop
jae
inc
loopne
mov
dec
out
jae
xchg
cmc
jbe
inc
jl
jp
adc
xor
xor
mov
mov
in
mov
dec
xchg
data16
fdivrl
fisttpl
xor
add
jo
out
clc
fsubrl
xor
ret
movsb
cwtl
popf
adc
and
outsb
inc
inc
xchg
fistpl
aam
fcompl
xchg
pop
stos
test
dec
outsl
pop
or
rcrl
adc
adcl
push
fadds
jae
sti
cmp
imul
cmp
push
adc
pop
jbe
pcmpeqw
pop
in
testl
fdivrl
jecxz
mov
imul
sub
loope
mov
mov
jp
push
mov
add
dec
adc
xchg
mov
add
ss
aaa
not
enter
xchg
push
movsl
mov
fistl
out
adc
push
gs
push
dec
fwait
fwait
fwait
fwait
negb
pusha
loope
inc
jmp
loop
lahf
int
lahf
mov
cld
push
and
insb
jns
mov
or
outsl
test
pop
adc
iret
int
clc
fcompl
scas
arpl
ss
aaa
mov
xor
cmp
xor
jp
mov
ret
jle
into
pop
pop
jle
sbbb
ljmp
push
add
sbb
dec
push
repnz
pop
or
dec
jg
dec
lahf
mov
mov
movsl
fs
sbb
push
cwtl
mov
ljmp
mov
dec
dec
lods
xor
out
aaa
fwait
push
inc
mov
or
mov
pop
push
inc
or
stos
mov
pushf
into
loop
int
int
add
scas
call
lea
int
das
fmull
arpl
movsb
pop
int
int
pop
movl
int
int
int
rorl
cmp
cld
inc
sbbb
push
sbb
fcompl
push
mov
jecxz
pop
jae
jae
push
push
bound
mov
jae
cmp
mov
in
nop
mov
ds
enter
inc
adc
ss
aaa
aaa
and
popf
pop
cmpsl
mov
popf
fwait
jle
cmpsb
push
jge
xor
sbb
xor
leave
mov
mov
ja
out
xchg
xorb
jo
pop
icebp
sub
mov
lcall
imulb
iret
aaa
inc
push
repnz
or
in
insb
jbe
cmpsb
in
mov
fwait
pop
or
sti
cmp
int
nop
js
stos
jle
mov
push
movsb
outsb
outsb
push
lcall
jle
orl
push
jae
lds
mov
movsb
jno
pop
imul
addr16
xor
pop
push
push
mov
movsb
jae
mov
or
ds
aaa
aaa
sbb
adc
or
mov
fistl
pop
or
add
js
nop
icebp
mov
push
or
sbb
pop
inc
mov
in
mov
stos
out
mov
mov
int
xlat
pop
sub
sahf
fwait
fwait
fwait
mov
leave
xchg
aaa
jl
jb
xchg
and
xchg
and
ss
mov
mov
sahf
lcall
mov
or
fdivl
lcall
out
lock
fs
in
in
cmc
arpl
int
out
push
std
xchg
subl
mov
or
stos
jbe
jo
mov
dec
xchg
das
leave
enter
ljmp
pop
inc
jmp
inc
push
ss
jbe
sbb
inc
sub
xchg
jp
cmp
jb
mov
ja
stc
std
scas
ret
xor
cmp
in
xchg
scas
aaa
ss
rolb
aaa
aaa
mov
or
out
imul
fwait
fwait
sbb
es
ftst
aam
cmp
aas
pop
lock
addps
hlt
pop
cwtl
loopne
mov
xor
xchg
shr
mov
lods
iret
fdivs
cmp
mov
mov
repz
push
xchg
stos
lock
fdiv
das
inc
orl
pop
inc
pop
loopne
pop
cmp
rcr
mov
jns
in
out
rorb
test
clc
rorb
arpl
inc
lahf
imul
pop
dec
loopne
jmp
xchg
jg
sub
out
cltd
clc
insb
outsb
cmp
subb
out
mov
bound
jp
mov
outsb
outsb
cs
in
sbbb
outsb
outsb
outsb
or
xorl
lods
jecxz
dec
adc
adc
push
pop
pop
mov
lret
popa
lahf
fwait
fwait
push
xor
add
cmp
aaa
jge
repnz
lods
fistpll
push
push
jo
outsb
outsb
clc
or
sub
sbb
jne
out
cld
jp
gs
jecxz
stos
ss
sbb
jle
faddl
mov
stc
sub
addr16
push
inc
es
push
mov
or
sbb
adc
cmp
ds
xorl
mov
sahf
add
pusha
cmp
in
in
sti
cmp
into
mov
sub
xchg
xchg
lds
jl
inc
dec
roll
lahf
int
ret
mov
jne
flds
clc
dec
sub
add
sbb
mov
pop
test
outsb
outsb
outsb
cmovs
lock
add
fnstsw
cmpsb
cs
std
insb
lods
lds
cwtl
pushf
mov
imul
test
and
push
insl
ret
sti
sub
sahf
cmpl
int
and
daa
cmpsb
push
mov
mov
int
jecxz
int3
mov
sub
xchg
adc
out
out
push
dec
push
jecxz
out
rorb
scas
sahf
or
lods
je
jb
jnp
std
mov
sub
mov
insb
jle
in
lods
shlb
mov
xchg
in
add
clc
clc
pop
push
lds
jmp
xchg
cmc
push
cmp
lret
flds
stc
jbe
add
sarl
jp
scas
pop
or
std
insb
iret
dec
jecxz
fisttpl
stos
adc
pusha
or
or
aaa
aaa
aaa
faddl
xchg
loopne
sbb
lar
add
add
mov
push
es
pusha
dec
fcoml
test
out
out
movsl
push
nop
adc
add
out
xchg
sbb
xchg
jne
in
cmp
lret
out
and
pusha
add
mov
jmp
xor
cmc
dec
mov
xlat
mov
mov
fdivrs
jae
call
mov
fsubl
mov
and
jne
scas
sbb
push
ds
mov
repnz
fdivr
jae
std
mov
mov
nop
idivb
sub
mov
jno
cmp
adc
rclb
mov
lcall
std
movsb
in
test
popa
iret
adc
out
or
aaa
aaa
ja
adc
mov
fmull
dec
or
mov
jmp
cmp
lock
inc
and
ds
add
push
in
add
jo
pusha
mov
cmp
out
inc
out
in
std
jb
mov
decl
jmp
shlb
sarl
mov
push
cli
push
cmp
out
cmp
stos
aaa
in
scas
cmp
pop
pushf
add
subb
cli
mov
pop
dec
pushf
mov
fisubrs
pop
scas
inc
shlb
adc
pop
mov
lods
out
or
jae
ja
push
lahf
dec
sarl
es
addr16
jae
dec
mov
repz
mov
or
in
cmpb
scas
pop
sti
fs
mov
mov
sub
test
lret
clc
mov
inc
push
dec
inc
push
cmp
lods
sbb
mov
mov
mov
int
aaa
or
ror
sbb
cltd
push
or
pop
sub
es
and
jmp
dec
std
and
out
mov
jae
js
xor
adc
mov
jae
iret
mov
xchg
fmul
test
ret
dec
mov
xchg
int
and
mov
aaa
ret
sub
stc
lret
sti
ror
int
add
jge
mov
sahf
int
pop
je
loopne
xchg
fsubs
inc
cltd
push
push
mov
movl
sub
scas
xor
inc
xor
pop
call
test
ljmp
mov
es
mov
jge
int
in
addr16
xchg
in
out
movsl
pop
cmp
int
int
fxch
lock
les
into
lods
loopne
nop
jae
sahf
adc
jns
clc
xor
in
movsb
or
jae
jae
iret
testl
jae
jae
adc
bound
pop
fsubl
adc
iret
in
xchg
cmp
aas
add
xorb
sahf
cwtl
lcall
fidivrl
out
enter
and
outsb
fnstenv
ss
push
iret
iret
data16
sbbl
dec
loope
pop
and
pusha
sub
mov
insb
outsb
scas
add
push
aaa
aaa
mov
mov
inc
dec
mov
pop
insl
stos
int
and
aaa
aaa
aaa
aaa
push
sbb
sti
pop
dec
xchg
add
sub
aaa
aaa
aaa
inc
add
mov
sbb
outsb
outsb
out
clc
sahf
aaa
dec
mov
cli
xchg
outsb
outsb
adc
insb
and
fidivs
mulb
cmpsl
or
les
out
data16
clc
sub
xchg
xor
iret
out
mulb
inc
popa
into
icebp
rol
insl
mov
mov
mov
loope
inc
mov
mov
sbb
aas
pop
or
jle
iret
out
pusha
jbe
fsubs
scas
mov
mov
lds
jmp
mov
cmp
clc
push
out
lahf
and
call
add
fdiv
mov
call
into
jae,pn
jge
jmp
repnz
cmpsb
sbb
dec
scas
jbe
mov
jmp
mov
inc
adc
mov
dec
push
lods
fadds
addb
mov
std
je
out
mov
data16
cmpb
fcoms
push
and
iret
rcl
aad
out
add
jnp
jl
iret
out
dec
movsl
fwait
mov
cwtl
add
into
in
cmovl
movl
cmp
jb
loop
push
daa
addr16
or
out
mov
push
xor
in
mov
mov
add
jbe
lods
rcrl
fnstcw
cli
test
xlat
adc
sti
pop
add
cmpsl
aaa
in
scas
aaa
aaa
jge
sbb
sub
xchg
adc
xchg
cld
jo
mov
loopne
jbe
and
push
ljmp
push
fdivl
jo
movsl
rcrl
pop
loopne
aam
popf
push
out
idiv
int3
lea
insb
outsb
mov
stos
ss
jae
iret
out
jmp
imul
mov
jmp
dec
xchg
mov
cmpb
in
addr16
daa
cld
dec
adc
test
test
sub
adc
xchg
ret
xchg
add
out
clc
jge
fs
out
gs
dec
loopne
outsl
pop
cli
cmpl
outsb
outsb
scas
push
sbb
sub
push
lcall
jge
jl
mov
sub
dec
jmp
ud1
out
push
pop
nop
cmc
dec
xor
mov
call
jae
in
sub
icebp
mov
mov
cwtl
xor
int
int
arpl
push
pop
dec
fsub
push
scas
rcll
lahf
int
jb
pop
jns
fbstp
xchg
int
sbb
inc
aaa
leave
sub
push
mov
fcomi
sub
insb
jns
xchg
push
hlt
and
insb
loop
sbb
hlt
mov
fdivrl
mov
mov
dec
jle
adc
sti
fdivrl
cmpsb
lods
jge
mov
pop
adc
jle
hlt
scas
xorb
es
out
in
jae
push
sbb
jle
stos
xor
add
jae
adc
and
sbb
int3
mov
adc
inc
notb
fwait
fwait
fwait
fwait
adc
aaa
rcll
std
sahf
add
fistpl
xchg
test
int
sub
mov
int
cwtl
dec
push
pop
mov
ret
pop
jg
out
inc
mov
aaa
lock
add
shl
test
mov
pop
daa
lea
push
mov
subb
add
cmp
mov
fiadds
or
mov
scas
pop
cltd
aas
stc
gs
mov
outsb
outsb
add
fisubs
mov
xchg
adc
insb
iret
out
jmp
inc
out
mov
fidivrl
out
jne
shr
in
or
repz
xor
sbb
stos
lds
int
cwtl
mov
pop
ljmp
adc
push
push
mov
shrb
fiadds
push
push
repnz
adc
aam
jne
test
fdivrs
inc
inc
or
adc
cmp
jle
adc
outsb
mov
sbb
inc
push
and
cld
jbe
scas
cmpsb
push
sbb
imul
daa
bswap
js
aaa
jno
aad
test
cmpsb
gs
mov
mov
in
loop
negl
xchg
into
inc
mov
xchg
iret
enter
insb
outsb
sbb
sub
repnz
addb
lods
ljmp
test
rol
push
adc
fcompl
adc
hlt
adc
clc
fnstcw
insb
sub
add
dec
out
int
out
scas
int
add
lret
mov
iret
out
lahf
aad
and
cmp
test
add
ljmp
mov
push
jmp
iret
out
rclb
mov
test
add
jmp
outsb
aas
fwait
movzbl
pop
jp
sbb
pop
dec
cli
adc
mov
icebp
in
jae
mov
mov
lock
fnstcw
xor
sahf
mov
je
xchg
repnz
movsl
negb
insb
cmp
xor
pop
movsl
jo
fdivl
rolb
outsb
outsb
outsb
xchg
push
xor
cmp
bound
lock
je
outsb
pushf
mov
out
mov
mov
aam
mov
pop
icebp
xchg
xor
cmp
cmpsl
cmp
sti
pusha
lds
sbb
inc
ret
push
les
je
into
lods
outsb
outsb
outsb
outsb
cmp
mov
int3
push
xor
mov
rclb
stos
fdivrl
add
pop
sub
push
mov
outsb
cs
and
add
mov
or
xor
std
cmp
mov
aas
bound
mov
xorl
nop
add
scas
mov
pusha
lock
sbb
in
mov
cmpsb
and
push
mov
aaa
xor
adc
pop
mov
fldt
ret
xlat
sbb
cmpsb
cmp
sti
pop
bound
add
in
loopne
sub
clc
mov
mov
xor
mov
loopne
jae
xor
ss
out
mov
push
sbbb
xchg
aad
jge
lahf
int
mov
xor
sbb
insb
outsb
bound
cld
clc
sbb
mov
ss
and
dec
cli
fldt
dec
icebp
jne
jp
xor
dec
lcall
mov
xchg
aaa
aaa
mov
dec
das
push
dec
and
cld
mov
outsb
out
cli
fsubrl
cmp
nop
shl
fldt
icebp
stc
cli
mov
enter
adc
pop
movsl
imul
notb
xchg
sbb
clc
xchg
call
mov
inc
enter
call
fwait
fwait
fwait
addr16
jbe
push
cmpsb
xchg
jmp
and
sub
and
pop
add
pop
mov
outsb
inc
fwait
fwait
fwait
or
add
mov
lods
inc
mov
bound
push
jb
shr
add
popa
gs
out
ja
sarl
or
in
xor
fdivrl
xorb
insl
sbb
std
aaa
aaa
mov
stos
cli
cs
mov
mov
aaa
cltd
or
fdivrl
sub
mov
rolb
sti
ret
mov
popa
xor
mul
mov
sbb
jae
jae
call
cwtl
jp
hlt
and
ds
insb
push
mov
lret
test
sti
mov
outsb
cli
mov
sti
mov
pop
lahf
out
cmp
mov
sarb
jae
iret
xchg
cmp
xchg
jb
lahf
jle
rcrl
pop
subl
vpcomud
dec
ret
out
push
jb
fcmovb
dec
jle
cld
fbstp
cs
lods
jne
or
pop
cmp
adc
cmc
inc
push
add
xor
pusha
cwtl
adc
or
iret
sbb
inc
pop
jg
ret
push
adc
xchg
hlt
push
out
pop
xchg
ds
dec
xor
jb
and
cli
outsb
inc
lds
movsl
xchg
outsl
js
xlat
fdivr
sbb
in
mov
inc
imul
dec
ss
lea
cmp
mov
lds
dec
out
lahf
int
in
and
or
popf
pop
enter
out
or
mov
lret
pop
lock
adc
fiaddl
imul
mov
adc
sub
or
push
cmpsl
std
mov
pushf
test
jo
fcompl
lock
xchg
adc
sbb
mov
inc
fwait
psraw
clc
repz
in
out
add
mov
pop
aas
ret
iret
pop
sti
scas
jbe
or
insb
outsb
cmp
push
out
inc
dec
push
mov
pop
in
sbb
jb
sbb
push
jmp
xor
adc
push
and
jno
fs
sub
idivb
add
and
cmp
cmpsb
cld
andb
rorl
ss
jnp
mov
sub
cmpsb
test
add
pop
ja
ret
ficoms
sbb
ss
divb
push
pop
gs
dec
mov
out
out
stos
out
inc
orb
int3
insb
aas
fcmovne
clc
mov
daa
lods
cmpsb
pop
cmp
cli
adc
mov
jecxz
out
inc
int3
xor
aaa
cmp
sar
lret
faddl
out
dec
aaa
cld
clc
sub
mov
push
outsb
xchg
push
aaa
aaa
aaa
aaa
push
sarl
jne
int3
divl
mov
mov
jno
push
lock
xor
or
es
hlt
inc
xchg
cmpsb
pop
fldt
cmp
push
loope
insb
fsubs
in
in
iret
int
aas
cmp
fs
inc
xchg
adc
cmc
mov
in
jp
dec
addr16
and
mov
fdivrl
xchg
sbb
test
rcl
loope
jl
repz
adc
inc
or
mov
sahf
mov
pop
shl
mov
xorb
hlt
dec
mov
sbb
inc
fiadds
sub
aas
fwait
fwait
jae
pushf
sub
loop
lods
push
adc
mov
cwtl
jecxz
iret
sub
addr16
pop
and
mov
sbb
sub
dec
pop
shl
mov
fsubl
ljmp
jecxz
xor
dec
mov
and
fmull
or
add
int3
in
filds
out
stos
into
mov
dec
outsb
outsb
outsb
pop
stos
jl
insb
inc
adc
mov
outsb
cli
out
lret
cld
or
add
jmp
out
mov
arpl
and
xchg
push
fcoml
leave
or
cmc
mov
push
jo
push
idivl
aaa
add
test
cwtl
dec
loop
lds
push
or
insb
sub
lods
pop
inc
hlt
push
mov
pop
in
ret
sahf
int
dec
and
sbb
mov
or
adc
mov
and
xchg
jno
aas
fucomi
mov
lods
add
mov
test
shrl
inc
mov
movsl
sbb
hlt
mov
jns
lock
fisubs
ret
iret
idiv
and
insb
stc
or
sbb
add
addr16
jae
sub
inc
push
push
orl
mov
movsl
out
aaa
and
mov
jle
aaa
mov
cmp
mov
clc
sarb
rcrb
xor
mov
aaa
ja
adc
outsb
fidivl
js
testl
sub
loop
adc
enter
out
fbstp
sar
lahf
and
fcmovne
int
int
mov
inc
test
xchg
xor
lcall
sarb
int
cmp
out
dec
cmp
in
dec
dec
mov
dec
pop
arpl
pop
fistps
mov
insb
and
xor
insb
pop
aas
sbb
ficoml
mov
jle
xorl
jmp
jae
jle
cwtl
inc
jbe
mov
orb
inc
iret
int
addr16
add
sahf
jns
aas
and
mov
mov
sarb
jg
nop
and
rcll
or
pop
movsl
shll
ds
jbe
adc
mov
jle
mov
dec
ud1
xchg
xorb
mov
mov
push
loope
sbb
movsb
adc
inc
je
xor
ja
insb
sbb
ljmp
inc
dec
xchg
xor
push
popf
bound
jae
push
out
mov
lock
sahf
imul
xor
sbb
mov
int
imul
xchg
mov
sti
sarl
aaa
xchg
lcall
jl
fiadds
faddp
push
jmp
fistps
sub
outsl
inc
shlb
sub
mov
cmp
iret
in
xchg
icebp
cmp
jl
and
pop
aad
mov
jp
push
out
lds
scas
ja
fildl
aaa
aaa
aaa
aaa
fs
sub
into
fwait
mov
outsl
fwait
fwait
mov
sub
mov
fwait
hlt
js
sub
mov
push
or
cmp
aaa
aas
jp
xchg
push
cmp
loop
outsb
clc
inc
inc
cmp
add
repz
nop
mov
js
or
es
cmp
xlat
mov
add
jecxz
dec
xchg
setg
jae
mov
jae
mov
cmp
cltd
push
xchg
xor
inc
sbbl
mov
mov
mov
dec
and
aam
dec
sub
clc
inc
mov
dec
push
jle
das
sbb
mov
test
outsb
js,pn
xlat
ror
ja
std
and
aad
bound
fwait
mov
push
imul
push
add
clc
leave
iret
int
aaa
data16
xacquire
nop
jge
aaa
aaa
mov
es
out
lea
mov
mov
jge
xchg
cwtl
and
mov
cmpsl
pop
push
jbe
fnstenv
mov
jecxz
pop
pop
pop
jns
push
push
dec
out
out
pop
mov
leave
push
xchg
fdivr
outsb
mov
jbe
jbe
cmp
js
jnp
pop
jae
daa
jmp
push
inc
sub
movsb
lcall
fsubrs
int3
mov
or
or
mov
iret
mulb
xor
imul
mov
movsb
jle
jl
lret
shr
or
iret
int
jae
jae
rclb
pop
enter
cmpsb
xchg
xor
jae
xlat
mov
loop
pop
icebp
cmp
mov
hlt
push
mov
aad
mov
jl
adc
cmp
pop
rorb
negb
mov
and
cmp
mov
mov
jl
sbb
insb
call
idivb
fs
test
out
outsl
dec
mov
jbe
lret
mov
push
pop
cmc
pop
push
loope
and
pop
dec
lods
jg
out
mov
mov
fdivr
pop
jp
lods
stc
lcall
jae
rcrb
mov
mov
out
jecxz
ss
mov
bound
push
sbbl
gs
cmp
or
movsl
in
mov
jg
shl
dec
sub
movd
test
xchg
stc
aas
mov
mov
sbb
idivl
cmp
lea
ret
test
mov
jle
pop
sbb
pop
inc
sbb
add
icebp
cs
pop
jnp
cmp
mov
outsb
outsb
outsb
outsb
cli
popa
and
cmp
clc
insb
sbb
rcrl
loop
xchg
mov
data16
in
movsl
mov
jnp
jns
ret
sahf
popa
xchg
mov
ds
fwait
fwait
fwait
je
dec
sti
push
mov
sbb
fstpt
lahf
shrl
cld
lods
fcmovnb
iret
divb
fsubrp
jne
adc
xchg
outsb
outsb
js
inc
repnz
mov
jp
mov
outsb
outsb
outsb
dec
cmovne
jno
roll
cli
insb
js
les
addr16
fcomps
scas
aaa
in
push
fisubl
mov
jae
jae
lock
cld
and
outsb
mov
mov
es
lcall
jno
jl
outsb
outsb
push
clc
pop
nop
or
aam
jae
sti
fldenv
imul
adc
jo
jnp
xchg
cmc
shll
sti
out
ds
std
mov
in
pop
mov
in
sahf
das
jle
xor
sarl
arpl
aas
jbe
mov
xor
pop
adc
pop
mov
cmp
pop
imul
loop
lock
shl
pushf
gs
ds
jae
mov
dec
pusha
pop
or
pusha
lods
jle
fwait
in
neg
fcompl
in
out
cmp
or
iret
stos
iret
int
push
sub
pop
sbb
dec
xor
test
pop
mov
out
mov
xchg
outsb
xor
xchg
mov
or
lds
clc
mov
shlb
hlt
jl
mov
xlat
dec
sti
or
sbb
mov
mov
mov
call
jl
fcmovne
out
iret
dec
push
adc
aas
mov
mov
pop
int
push
aas
fwait
adc
repz
inc
out
adc
fiaddl
jae
in
fdivrs
jo
in
adc
dec
out
mov
add
jns
mov
cli
out
sub
push
lea
in
cmp
cmp
sahf
fwait
fwait
aaa
xlat
dec
hlt
push
loope
pop
rclb
add
popf
dec
mov
sbb
int
in
xor
sbb
rcrb
jge
lahf
int
push
outsb
test
faddp
cmpsl
stos
lret
out
add
cmp
ret
pop
adc
iret
sub
xor
js
int3
insb
imul
dec
enter
mov
add
fdivl
mov
repz
mov
sub
addr16
or
push
cmp
mov
call
cs
test
xor
outsb
ds
mov
cmp
push
jg
inc
jmp
movsb
inc
xor
addb
cmpsb
in
pop
pop
out
out
mov
and
out
out
jb,pt
mov
inc
adc
das
into
xor
roll
adc
adc
loop
jne
ret
jo
cld
fs
sbb
ss
ljmp
and
mov
xchg
mov
aas
dec
xor
or
adc
outsb
outsb
outsb
lds
xchg
hlt
dec
push
mov
cmp
lretw
cli
in
xchg
in
pop
aas
fldt
in
aam
and
clc
mov
sub
add
loope
shll
out
sub
jns
mov
and
lahf
mov
xor
xchg
leave
mov
scas
inc
je
outsb
outsb
fbld
je
mov
sub
mov
sub
pop
pop
xchg
jb
lods
inc
jecxz
loop
dec
out
xor
cmp
insb
mov
push
out
insl
xchg
sbb
mov
fcmove
es
sbb
fwait
out
inc
sub
lcall
adc
fisubs
dec
pop
ficompl
scas
popf
fstl
sarl
push
aas
je
sub
fadds
pop
clc
test
das
int
pop
jl
in
cwtl
or
cmp
dec
adc
js
push
cmp
inc
imul
cld
dec
xlat
mov
fwait
insl
popf
xor
pop
jo
lock
enter
and
fsubrl
xchg
mov
fwait
dec
jb
and
outsb
outsb
out
push
and
cld
dec
sub
cmp
cld
insb
outsb
push
imul
jle
aaa
jmp
sti
pusha
adc
insl
scas
xchg
mov
cld
ds
xor
hlt
loopne
out
and
jae
xor
jg
jnp
andb
jae
jae
jo
stc
push
xor
mov
mov
mov
test
repnz
pop
mov
fwait
ds
aaa
enter
out
sub
les
cmp
pusha
mov
jno
mov
fdivs
es
test
outsl
ljmp
add
clc
pop
es
jp
popa
or
out
imul
outsb
dec
popa
imulb
test
test
stos
leave
js
mov
pop
add
push
xchg
lock
xchg
adc
iret
bound
div
insl
mov
std
and
popa
jnp
les
out
mov
clc
aas
jne
stos
test
mov
push
xor
call
mov
out
negb
shrb
pop
dec
mov
filds
pushf
adc
in
orb
lea
inc
lea
loop
mov
scas
add
mov
mov
call
mov
sbb
pop
xchg
mov
pop
add
mov
or
add
test
loopne
bound
mov
mov
lret
arpl
pop
ss
jle
fst
inc
daa
imul
movsl
jno
inc
out
out
lcall
daa
fnstenv
jmp
repnz
jbe
xchg
sub
push
pop
inc
iret
mul
jmp
out
xchg
mov
iret
or
sbb
psubsb
xor
jae
orl
ss
mov
sbb
mov
jl
out
jp
test
sub
cwtl
xor
iret
out
std
fsubs
out
jnp
in
in
sbb
fucomi
movsb
dec
into
jmp
add
sarb
mov
imull
xchg
aam
in
mov
int3
hlt
outsb
outsb
outsb
outsb
out
mov
daa
lahf
out
imul
fmuls
mov
int
mov
daa
ds
inc
ds
adc
lods
iret
and
add
sbb
xchg
mov
das
dec
fistps
scas
ds
xor
gs
xchg
push
movl
cltd
les
test
les
push
cmp
fbstp
fnstcw
jmp
sbb
insl
mov
dec
inc
ljmp
fimuls
popf
push
dec
add
pop
pusha
mov
adc
add
in
aad
mov
pushf
jne
bnd
jge
ds
stos
push
fwait
push
mov
out
mov
pusha
bound
sti
pop
xor
sub
sbb
mov
adc
lahf
mov
pop
mov
xchg
sti
dec
pusha
jno
and
int
cwtl
pop
xchg
cld
pop
int
mov
addr16
push
pushf
repz
add
add
clc
nop
ss
jg
imul
outsb
outsb
outsb
loop
mov
rol
sbb
das
nop
cli
outsb
outsb
outsb
outsb
pop
push
and
jmp
ljmp
dec
sub
sbb
cli
fnstcw
and
fisubl
jne
aam
insl
adc
loopne
outsb
outsb
push
adc
adc
mov
cmp
push
mov
out
sbb
fs
into
bound
ljmp
push
rclb
and
cmp
sbb
aad
and
xor
outsb
outsb
clc
ss
int3
xchg
jl
shl
test
insl
jbe
outsb
outsb
outsb
lock
movsl
fnstsw
lahf
fdivrs
clc
insb
xchg
imul
aas
lock
enter
adc
ja
insb
es
cmp
inc
cmp
pusha
in
out
fstpt
jl
int
mov
pop
sbb
out
sahf
in
jae
stos
popl
jmp
inc
push
push
fists
clc
jle
push
bound
xchg
push
add
ret
in
outsb
aas
fisttpl
jbe
outsl
xchg
das
mov
leave
mov
insb
outsb
bound
push
lods
jno
cmp
or
fdiv
cwtl
jle
mov
mov
std
insb
outsb
es
mov
sarb
idivb
mov
out
test
xlat
out
testl
mov
xor
stos
les
push
pop
outsb
jle
mov
shlb
movsl
popa
sub
outsb
outsb
jp
inc
cmpsb
or
ja
popa
sub
push
jae
mov
inc
hlt
adc
xor
jae
jae
adc
add
gs
daa
out
iret
int
jecxz
xchg
mov
or
pop
data16
out
out
jmp
mov
jbe
lea
out
mov
mov
sarb
jge
outsb
shrb
dec
lret
int3
mov
leave
and
mov
into
fsubs
inc
rcr
cmp
mov
jne
dec
fistpl
fwait
fwait
pop
not
inc
shll
mov
mov
outsb
outsb
outsb
inc
mov
loopne
jnp
jno
sarb
insb
outsb
fwait
xor
gs
call
mov
mov
fs
cmpsl
popf
and
mov
cmp
sahf
xor
ret
in
mov
hlt
push
or
pop
shr
enter
std
xchg
icebp
mov
and
pop
push
push
pop
ficoml
fnstcw
idivb
pmulhuw
mov
push
fcoms
jae
ror
mov
aaa
mov
adc
arpl
jae
jae
cld
movsb
out
push
jns
pop
xchg
inc
fisttpl
loope
xor
xchg
ficomps
fwait
fwait
call
jno
add
rclb
lahf
fwait
fwait
es
les
hlt
xor
jo
push
jge
inc
sbb
pop
xchg
mov
add
lret
mov
dec
cli
dec
and
jnp
mov
mov
xchg
mov
dec
cmp
inc
pushf
mov
push
ja
rcrl
test
fdivrl
cmp
or
xor
cmp
insb
cs
push
adc
ret
sbb
out
leave
push
pop
dec
or
ret
mov
jp
xchg
push
push
scas
inc
inc
imul
dec
enter
mov
cmpsb
arpl
adc
push
cs
mov
arpl
lret
mov
fidivl
mov
dec
jp
cwtl
lds
jns
mov
fisttpll
inc
in
and
imulb
loopw
dec
in
adc
pop
clc
sbb
or
jp
mov
js
adc
sbbl
stos
jnp
jns
lds
push
sahf
jne
jae
jae
mov
mov
fsubp
out
jae
push
sub
adc
adc
sub
dec
iret
cltd
cltd
push
push
repnz
rol
and
xlat
clc
push
mov
mov
add
fmull
add
popa
mov
mov
loopne
cmpsb
sbb
cwtl
cmp
out
jb
dec
jo
divb
or
iret
and
mov
jns
int
int
inc
jle
lds
mov
and
pushf
jns
mov
mov
dec
in
int
int
mov
ss
pop
xor
aaa
aaa
mov
ficoml
jne
enter
jae
jle
push
push
fwait
sbb
cmp
pop
test
rcrb
lret
in
lock
push
or
fwait
fwait
fwait
and
xchg
adc
dec
push
inc
lret
ljmp
inc
jp
mov
imul
aaa
aaa
sahf
ds
pop
lock
cmp
jg
lods
dec
fwait
loopne
cmp
pushf
shrb
lahf
sahf
mov
sbb
fdivrs
test
mov
cmpsb
sahf
inc
int
int
call
jbe
mov
lahf
int
int
mov
xor
sbb
jne
aaa
aaa
aaa
mov
dec
xchg
out
jmp
test
aaa
aaa
aaa
negl
sahf
dec
pop
ds
fs
clc
gs
mov
test
out
xor
sbb
mov
hlt
push
outsb
popf
xchg
adc
xchg
sub
js
icebp
fisubrs
int3
icebp
mov
std
mov
sub
loope
mov
add
sbb
xor
xor
lock
mov
sbbb
stos
divl
xchg
sahf
xchg
rolb
pop
loope
jp
sub
lret
mov
test
cmp
cmc
mov
ficomps
outsl
jnp
add
pop
adc
stos
and
push
cmp
fs
push
push
jne
push
or
inc
movsb
cmpps
rcrb
mov
mov
jp
pop
push
xchg
inc
movsb
dec
sbb
clc
insb
xchg
fwait
sbb
stc
push
or
pop
hlt
pop
cmp
in
and
das
push
cld
jecxz
clc
lds
arpl
mov
sbb
ljmp
rorb
loopne
or
adc
test
adc
jl
adc
mov
cmp
jle
pop
fwait
fucomi
int3
rclb
jmp
shll
fwait
fwait
pop
jnp
jmp
sahf
rcl
sti
cltd
xchg
mov
hlt
sub
or
in
push
cltd
mov
jnp,pt
push
jns
lret
andb
mov
stc
scas
out
scas
dec
leave
enter
fdiv
in
pusha
pop
scas
add
mov
cmp
adc
rolb
pop
shlb
mov
adc
jbe
jge
push
fdivrs
adc
mov
inc
dec
movsb
cs
fimull
mov
push
mov
outsl
popa
gs
repz
sbb
jp
jno
mov
sub
fisttpll
pusha
sbb
int
in
pop
add
cmp
push
outsb
jnp
sub
ss
int
cmpsb
dec
test
aaa
nop
out
mov
ja
jbe
cli
insl
jl
jae
jnp
shr
mov
icebp
repz
data16
popf
pop
jmp
je
xor
or
aas
push
push
popa
mov
inc
mov
ficoml
inc
movsl
in
jae
fcmovnu
and
or
adc
js
cmpsl
or
int
int
mov
xchg
mov
int
int
lods
bnd
rcrb
push
lods
mov
and
cs
outsb
add
icebp
in
or
push
xchg
dec
clc
insb
outsb
aaa
ret
adc
cmpsl
jb
jae
add
jns
inc
insb
lock
je
cmpb
pop
xlat
enter
dec
lahf
fwait
fwait
or
ljmp
sti
xchg
lret
sbb
fistps
or
jg
push
inc
vaddps
out
clc
fdivrl
xchg
insl
es
inc
ss
sub
es
and
test
or
js
jo
mov
rcrl
rolb
clc
or
sbb
jle
fs
xchg
lea
pop
bound
fdivr
insl
push
cmp
push
fldcw
adc
stos
mov
jle
xchg
clc
pop
cmpsl
dec
sarb
dec
pop
mov
mov
rolb
cli
test
insb
and
jle
aaa
and
stc
add
add
sub
sub
out
out
scas
pop
cli
mov
pop
cwtl
int
pop
popa
xor
or
mov
sub
iret
int
or
xchg
clc
xchg
pushf
cmp
cs
cmp
pusha
movb
stos
lahf
int
int
dec
mov
stos
mov
pushf
test
jle
jo
mov
xchg
je
in
add
jae
jae
mov
roll
dec
test
jae
jae
pop
fucom
dec
lock
or
movsl
jp
jae
jae
imul
jno
mov
jae
dec
adc
cmpsl
and
in
sbb
jge
adc
mov
enter
add
add
pop
jnp
das
aaa
aaa
mov
push
jge
fldcw
lret
fs
aaa
aaa
aaa
aaa
push
sub
mov
ds
aaa
aaa
mov
and
and
mov
sbb
outsb
aas
fisttpl
lret
int
in
push
lock
mov
repnz
sub
lahf
sbb
xchg
dec
je
insl
cmpsl
pop
inc
kmovw
iret
ljmp
call
or
push
aam
or
push
pop
jae
ret
cmp
inc
outsb
test
push
fcomps
fcoml
insl
mov
pop
out
jae
jae
cli
jge
es
inc
push
scas
mov
idivb
or
xchg
jns
add
aam
push
ret
cmp
mov
or
cmc
mov
outsb
out
cli
cld
scas
into
push
in
or
inc
rclb
ds
sub
sti
xchg
xor
cs
cmp
jae
jae
add
pop
or
cmp
or
mov
sahf
clc
mov
movsl
test
sub
test
mov
sbb
ljmp
jecxz
fldt
push
cmp
lods
out
test
outsb
lahf
movsl
push
push
mov
push
jnp
mov
fucomi
movsl
lock
and
aam
clc
jo
mov
dec
sub
mov
lock
dec
pushf
mov
xchg
es
jno
inc
or
jp
jbe
push
roll
mulb
lret
inc
dec
jecxz
fcmovne
negb
shll
cmp
in
test
mov
aas
fwait
mov
mov
jmp
mov
xchg
fs
popa
mov
xchg
test
rolb
pop
cmc
mov
dec
in
inc
rclb
push
jae
mov
cld
fwait
shlb
sbb
sub
int3
xchg
inc
repz
cmp
js
jl
jbe
cwtl
lods
dec
sub
mov
add
mov
jp
shlb
out
add
lret
add
mov
and
stos
aas
mov
fs
xchg
jbe
mov
sbbl
inc
sahf
add
xchg
call
inc
dec
xchg
jnp
add
push
pop
ret
mov
iret
int
jb
in
xchg
sub
pop
dec
out
xchg
stos
pop
cmpsl
mov
push
cmpsb
sahf
int
faddl
mov
js
jae
icebp
or
push
pop
mov
sub
outsb
cli
fdivl
or
xchg
std
inc
mov
aad
mov
jbe
les
loopne
js
outsb
in
bnd
ret
insl
mov
mov
bnd
aaa
fwait
stos
jle
sbb
in
ljmp
aas
fwait
mov
mov
push
clc
inc
int
int
add
add
fsubr
adcl
int
int
cmc
jle
js
and
scas
out
out
mov
dec
mov
not
jl
out
out
stc
push
add
lret
cmpsl
cltd
in
xor
das
or
push
sti
data16
hlt
sub
mov
int
int
xor
dec
mov
cld
arpl
aas
inc
xchg
movsl
iret
int
jmp
mov
sub
push
aas
sub
loop
subb
mov
in
push
add
ror
add
lock
push
out
mov
mov
xchg
fdivrs
pop
ss
jae
sti
jmp
add
incb
dec
inc
into
test
in
add
test
das
jae
xor
sbbb
in
jge
scas
push
int
jnp
scas
push
in
and
rorb
fdivrl
int
jge
das
sub
ficoms
stos
ficoml
pop
pusha
gs
fs
sub
sahf
mov
fidivrl
push
pop
lret
aaa
aaa
aaa
sbb
xchg
dec
sub
cmpsb
nop
repz
jle
cmp
aaa
aaa
or
push
int3
test
xchg
mov
cmp
sub
lock
mov
outsb
outsb
outsb
jmp
add
hlt
popa
xor
outsb
outsb
outsb
outsb
movsl
cs
xchg
sti
jmp
mov
or
pop
lret
dec
lahf
pop
pop
leave
cli
insb
inc
jecxz
out
out
fdiv
les
adc
stc
adc
xchg
repz
jge
icebp
push
flds
xor
in
jnp
mov
test
rclb
pop
cmc
aaa
mov
int
movsl
rcrl
data16
xor
js
aaa
aaa
movsl
sub
mov
inc
adc
int3
fbstp
es
mov
fwait
sbb
out
add
in
std
movsb
pop
adc
ss
adc
add
ror
in
jae
pop
jae
inc
jge
add
cmp
int
adc
mov
xchg
add
fdivl
push
dec
das
jo
cmp
lahf
and
data16
scas
cli
adc
fcoms
je
push
imulb
rcll
sti
pushf
lret
aas
or
xchg
ficomps
fs
jmp
cld
int
int
jno
out
add
xor
repnz
sahf
inc
ds
stc
dec
fwait
fwait
fwait
fwait
sub
inc
xor
xchg
inc
adc
lahf
enter
jecxz
lock
push
mov
loop
and
mov
push
mov
mov
in
fwait
in
out
out
cltd
repz
push
dec
ret
not
out
out
pusha
test
jg
jge
cmp
rorb
or
adc
std
insb
outsb
outsb
mov
inc
mov
shlb
xor
mov
mov
sub
inc
insb
adc
aas
lret
dec
cs
dec
xchg
int
int
xchg
jns
dec
inc
movsb
cmovno
jno
int
int
or
xchg
loopne
insb
inc
xchg
add
xchg
ficoml
push
fstpt
pop
fdivr
push
popf
mov
ret
lahf
insb
mov
mov
fwait
aas
mov
sub
mov
fdivrl
mov
pop
jmp
add
fmull
jns
aaa
in
or
addr16
fistl
sub
add
mov
iret
std
enter
xchg
mov
or
fsubrl
out
rcrl
mov
insb
cs
ret
test
gs
sbbb
ror
lahf
cmp
loop
push
pop
or
jns
mov
outsb
push
cmp
mov
mov
out
fmull
andl
mov
inc
pop
jl
or
cld
in
fstpt
shlb
out
cmc
int
int
jmp
stos
test
push
lahf
mov
iret
inc
inc
fcompl
sti
out
sub
movsb
sub
and
subb
lea
mov
mov
addr16
rol
es
dec
shll
mov
mov
out
sbb
js
lcall
inc
dec
addl
push
loope
scas
jne
aas
fwait
fwait
movsl
cld
cmp
loope
xchg
pusha
mov
rep
outsb
outsb
outsb
sbb
fstl
sbb
jl
outsb
outsb
test
dec
test
in
mov
xor
bts
loopne
aaa
aaa
aaa
aaa
outsb
mov
mov
addr16
mov
push
jmp
outsb
push
mov
xchg
cs
adc
iret
aam
lcall
neg
decb
loopne
mov
fimuls
cli
fsubrl
or
enter
inc
mov
jo
cmp
add
les
bound
add
jge
lods
adc
mov
inc
test
insb
notb
and
xor
xchg
sbb
push
pop
fsubl
subb
jns
mov
test
and
clc
push
cli
loop
ds
lcall
jle
xor
pop
lahf
arpl
frstor
outsb
lar
inc
sub
aaa
aaa
mov
xor
les
add
clc
ds
aaa
ja
pushf
inc
and
xchg
dec
mov
cmp
sbb
fldt
shlb
test
jns
outsb
outsb
outsb
aas
scas
insb
push
cli
push
jbe
mov
inc
outsb
outsb
outsb
outsb
in
jle
cmpsb
xor
fwait
mov
outsb
outsb
outsb
outsb
out
loope
pop
sub
or
or
and
inc
lcall
or
or
sub
mov
ljmp
pop
int
jmp
inc
icebp
sahf
sbb
adc
shrb
test
jg
imul
fcompl
pop
inc
and
push
xor
xchg
and
sub
stc
lret
or
push
fbld
cmp
loopne
fucomi
add
int3
in
inc
fnstenv
aaa
aaa
aaa
mov
sub
or
in
fwait
fwait
fwait
ds
into
lret
dec
out
clc
jle
cltd
outsl
cmp
fwait
pop
lock
and
mov
mov
out
inc
xorb
mov
mov
and
loopne
add
xchg
pop
insl
mov
xor
loope
dec
pop
adc
aaa
aaa
aaa
dec
lcall
ror
cmpsl
sub
sub
push
mov
mov
iret
out
jbe
jle
into
mov
mov
insl
or
jae
lcall
fisttpl
jnp
sysenter
cli
push
movsl
ja
pop
rcr
push
add
rcrb
fwait
fwait
inc
repnz
jp
pop
mov
rcr
lock
lahf
push
push
adc
cmpsl
pop
neg
fcompl
scas
adc
bound
xchg
or
mov
dec
pop
fsubrp
inc
and
jae
lods
push
ds
int
dec
cmp
int
pop
aam
data16
mov
push
jle
sub
aas
pop
iret
mov
push
outsb
outsb
outsb
jbe
loope
sbb
pop
dec
mov
sub
mov
subl
jae
out
adc
adc
mov
test
daa
cmpsl
and
jae
jae
frstor
cltd
jge
addr16
imul
daa
loopne
push
pop
adc
jb
scas
movsl
fisubrs
lret
es
xlat
xor
aaa
aaa
aaa
notb
adc
mov
cld
lods
cli
dec
pop
lcall
movsl
mov
sub
insb
fdiv
mov
addr16
jbe
sti
outsb
adc
scas
or
lods
js
mov
enter
icebp
add
mov
jp
sub
cmp
cltd
cmpsb
pop
call
shrb
adc
cltd
clc
bound
adc
orl
pop
and
aad
mov
jnp
lahf
adc
adc
mov
repnz
insb
pop
mov
ret
mov
je
cmp
loop
mov
mov
push
scas
in
sahf
hlt
add
out
repnz
fbstp
fprem
outsl
shlb
aas
cmpsb
es
in
jle
out
ja
mov
cmp
push
push
data16
sub
mov
jmp
mov
bound
shlb
jae
int
nop
sub
imull
enter
jae
dec
dec
mov
mov
mov
dec
iret
dec
ljmp
shl
mov
mov
mov
adc
cmp
arpl
push
insb
je
sbbb
adc
and
popa
sbb
and
aam
in
push
lcall
adc
push
bound
out
out
sbb
idiv
pop
rcll
jge
aas
fistl
scas
cmp
mov
ret
push
lock
stc
shrb
inc
xchg
or
loop
fsubrl
mov
mov
mov
mov
out
jns
jo
sbb
push
lods
ror
in
inc
loopne
std
sub
mov
notb
mov
scas
mov
hlt
jmp
cld
push
mov
insb
ss
divl
addr16
or
xlat
lahf
and
or
cmp
mov
xchg
sub
push
jge
test
hlt
sti
jbe
repz
fcmove
out
out
jae
sbb
das
adc
popa
out
mov
jae
shl
mov
cmp
cmc
inc
jmp
fistl
jl
cmpsl
outsl
fsubr
fisubs
push
mov
imul
jae
aaa
pop
loopne
mov
and
sub
ds
pusha
mov
dec
dec
push
fsubr
jae
jae
mov
mov
cli
jne
adc
aaa
aaa
mov
pop
mov
pop
and
xchg
inc
or
aaa
aaa
aaa
jo
xchg
push
js
cmp
subl
out
arpl
inc
lds
fwait
fwait
inc
mov
loope
dec
jle
aas
std
and
shr
xchg
lds
mov
push
js
and
ret
sbb
pop
sbb
dec
sub
es
flds
sbb
push
jl
out
sti
repz
insb
xchg
pop
clc
jne
pushf
out
or
add
xor
fsin
nop
dec
lahf
roll
fidivrs
addr16
push
cmc
fcmovu
adc
hlt
adc
int
int
mov
push
xlat
and
mov
in
adc
cmpsb
inc
je
jge
outsb
sysenter
in
shlb
insl
mov
cmp
cli
jb
insb
es
lock
add
add
mov
fdiv
sub
fidivs
mov
aam
adc
and
add
popa
and
cmp
ds
pop
scas
jp
or
jle
or
jo
xchg
mov
and
push
pop
xor
mov
mov
cli
shrw
cld
mov
ret
push
out
sbb
sti
iret
test
jmp
test
lock
test
loope
mov
out
cmp
mov
arpl
mov
loope
pop
mov
notb
cmp
addr16
dec
push
aam
adc
jg
xchg
fdivrl
mov
insb
pop
dec
fisttpl
jl
mov
cmp
es
lods
push
mov
pushf
adc
addr16
or
cmc
mov
sbb
push
xchg
imul
int
ja
dec
dec
scas
xor
mov
mov
repz
js
jae
addr16
push
add
add
das
fdiv
cmp
mov
psubw
jge
xor
xchg
xlat
push
dec
inc
pop
test
pusha
outsb
jbe
xor
and
sub
cwtl
fidivrs
sub
jnp
push
inc
sub
or
in
sub
jmp
je
fdivl
out
aad
ljmp
jns
jge
or
es
push
add
repnz
fisubl
pop
ror
out
mov
ja
scas
and
fcmovbe
dec
imul
ret
lahf
mov
xchg
mov
jo
sub
lahf
shufps
inc
push
mov
push
fcompl
pop
ljmp
dec
dec
pop
int
arpl
sahf
fsin
iret
insb
or
movsb
jo
mov
int
cld
dec
adc
mov
jl
sbb
jge
clc
push
fs
out
divb
loop
pop
ljmp
dec
stos
std
ds
dec
or
xor
jb
sub
sub
in
inc
mov
jmp
dec
or
outsb
out
sbb
jns
andb
je
mov
out
out
mov
jne
mov
lock
js
adc
fildl
inc
std
xor
add
out
jg
sahf
adc
out
push
fwait
and
lds
xchg
sbb
and
loope
mov
cmpsl
push
jbe
xor
aaa
aaa
aaa
aaa
inc
cmp
testl
clc
xchg
jle
sbb
cmp
mov
daa
sti
movsb
roll
and
rcr
pop
cmc
dec
xchg
adc
dec
inc
add
shrb
mov
xchg
fnstsw
lds
inc
jl
outsb
mov
add
neg
fcompl
lahf
cmp
cmp
sub
sbb
fdivrl
jbe
mov
mov
roll
mov
mov
and
mov
scas
mov
jmp
mov
outsb
cmp
sbb
push
mov
test
inc
rcr
fiadds
test
repz
out
clc
ret
dec
out
out
jecxz
nop
mov
add
pushf
mov
jge
lods
insb
pusha
jns
mov
xchg
loope
fcompl
mov
push
sahf
cli
insl
add
add
out
mov
fnop
mov
dec
sti
fcmovne
out
pop
mov
add
dec
ds
fwait
fwait
das
lea
mov
mov
sbb
jo
jl
idivb
in
pop
xor
sbb
mov
mov
je
mov
outsb
mov
je
lahf
in
inc
rcr
pop
lods
imul
mov
pop
call
mov
mov
pusha
dec
jno
mov
roll
push
shl
jo
scas
movsl
addr16
sahf
fidivs
pop
sbb
out
out
jmp
repnz
sbb
ficoms
and
add
mov
test
jge
pop
jl
or
fidivl
out
mov
cmp
nop
push
or
loope
ljmp
and
sbb
ss
aaa
mov
aam
adc
mov
dec
out
inc
jl
aaa
insl
inc
mov
sub
scas
xchg
jecxz
in
jne
sub
fstps
int
insb
dec
xorb
mov
mov
or
xor
sbb
fstps
mov
lret
ss
mul
jp
sahf
fwait
xchg
scas
cmpsb
popa
outsb
dec
dec
add
sbb
jp
nop
push
filds
push
adc
insb
outsb
xchg
sbb
adc
clc
push
test
hlt
cld
lret
adc
push
lock
mov
movsl
lret
jp
loope
std
pop
test
out
cld
lock
insl
xor
jmp
or
cmc
ljmp
ret
adc
rorl
movb
outsb
jbe
pop
sbb
int3
lret
mov
addr16
cmc
rcll
lea
test
das
jmp
xchg
and
sub
imul
mov
jbe
shll
adc
mov
pop
ret
push
icebp
push
cld
adc
int
in
outsl
xor
jmp
clc
or
mov
scas
lret
cli
int
int
imul
icebp
pop
xchg
mov
dec
das
push
aaa
mov
inc
sarl
shrl
pop
mov
es
jle
dec
pop
fcmovu
sbb
cmp
shl
sub
xchg
out
mov
jno
call
mov
lcall
popa
push
test
xorl
outsb
mov
dec
cmp
push
stc
push
cli
mov
inc
inc
inc
lea
daa
sbb
mov
lcall
jae
lds
xchg
mov
or
addr16
testb
cmc
jae
addr16
fldcw
ror
and
insb
test
out
lahf
in
push
out
mov
test
xor
dec
or
out
xchg
scas
jns
fisubl
jae
or
jbe
scas
loopne
mov
fmul
fidivl
xor
movsl
adc
cwtl
or
fmull
fnstcw
mov
jbe
out
inc
lock
mov
jle
in
or
ja
popa
jl
push
out
outsb
stos
mov
xchg
out
out
inc
aas
xor
jo
test
jae
sti
dec
das
inc
mov
mov
inc
ror
jle
pop
jmp
xorb
pop
clc
cmp
loopne
xchg
mov
xchg
mov
inc
je
mov
mov
aas
sbb
es
add
rcll
add
mov
fwait
fwait
fwait
mov
subl
xlat
sahf
fs
xchg
sahf
fwait
in
mov
and
fcompl
jne
or
bswap
fstl
scas
jb
pop
xchg
cmp
nop
stc
mov
sahf
filds
xor
inc
fcmovne
jbe
js
dec
add
xor
xchg
inc
shrl
outsb
aas
fs
xor
adcb
push
xor
push
jmp
or
sbb
pop
pushf
sbb
add
inc
sub
cmpsb
cmp
les
outsb
cmc
fwait
cmp
mov
sarb
insb
mov
mov
fldcw
pop
insb
cmpsb
pusha
adc
out
mov
shll
mov
and
out
pusha
aas
aam
or
xchg
test
sbb
fwait
sub
in
test
xor
mov
and
aad
outsl
mov
neg
xchg
mov
mov
dec
scas
lods
jnp
out
test
jns
adc
jge
mov
rclb
clc
adc
mov
inc
mul
clc
cmc
pop
loopne
xchg
jnp
dec
mov
push
daa
ljmp
jmp
les
jae
jae
ss
js
push
fadds
jmp
jae
cmc
lock
pop
dec
les
mov
movsl
inc
out
pop
jne
dec
shll
enter
fwait
pop
cmpsb
fnstenv
ja
cmp
jge
cmp
adc
jae
sysexit
sbb
sub
shr
and
add
ret
mov
sarb
out
js
add
hlt
mov
inc
js
mov
dec
jae
rcll
outsb
daa
jo
jae
jae
mov
call
or
jae
sbb
xchg
test
jae
jae
mov
stc
leave
mov
stos
loopew
fwait
adc
adc
mov
xchg
pop
mov
int3
pop
dec
mov
mov
out
out
dec
fdivrl
add
cmp
mov
sti
fnstcw
or
dec
jae
jae
scas
outsb
rcrl
imul
sub
addr16
push
inc
add
adcl
roll
cmp
aaa
aaa
and
mov
cli
add
fucomi
mov
lcall
mov
pop
test
lret
pop
push
sarb
fists
inc
fisubrs
outsb
outsb
ja
mov
repnz
jne
out
and
pop
outsb
outsb
out
das
xor
jle
icebp
and
pop
aas
fwait
fwait
mov
xor
or
push
mov
in
int
int
pusha
adc
add
fildll
mov
int
int
cltd
add
and
xor
test
int
mov
cmp
mov
fmull
hlt
cld
xchg
rorb
fmul
xchg
pop
popa
adcb
pop
popa
gs
outsb
fistpl
or
sbb
and
outsl
mov
and
cmp
and
jge
cs
mov
test
mov
mov
add
test
clc
fcompl
mov
pusha
loop
xchg
sub
fiadds
lds
sbb
cmp
mov
lods
pop
and
mov
lds
std
testl
hlt
add
out
xchg
mov
pop
and
jmp
into
test
xlat
fsubs
in
cmp
cmpsl
dec
mov
cmp
jl
mov
xor
pop
clc
daa
dec
jbe
out
out
sub
aam
dec
pop
jl
aas
loop
pop
out
mov
mov
in
mov
xchg
mov
das
mov
pop
xor
loopne
jae
fldcw
movsl
mov
lret
sti
sahf
add
xchg
or
or
or
mov
test
hlt
inc
clc
mov
add
scas
insb
outsb
outsb
inc
sub
lret
enter
lods
jp
jbe
cmp
scas
xor
int
jmp
mov
cmp
add
push
out
inc
fcomps
imul
pushf
inc
lods
cmpsl
xchg
dec
add
or
fwait
testl
cmp
lahf
clts
or
cmpsl
mov
mov
or
mov
iret
call
int
xchg
repz
sbb
pop
cmp
loop
stc
aas
lcall
mov
rorb
jae
sub
push
cmp
jae
enter
stos
fldl
mov
jae
push
adc
sub
idivl
push
ret
fistl
test
sti
and
mov
ja
xor
hlt
mov
cmp
cmp
leave
lahf
xlat
pop
js
adc
fisubs
add
stc
test
jecxz,pn
loopne
sbb
sub
push
jae
jae
les
daa
lods
xchg
jge
fcoms
xchg
jmp
jbe
test
out
jle
icebp
ret
stos
jp
mov
leave
adcb
mov
mov
icebp
mov
pop
adc
and
lret
push
cld
dec
jge
xchg
movsb
and
xchg
sbb
hlt
add
cmp
notl
jp
les
insb
ret
lahf
les
mov
mov
insb
sbb
test
lods
sbb
mov
mov
test
test
cmp
mov
jp
iret
out
inc
adc
ljmp
rorb
sahf
fwait
inc
pop
test
push
loopne
pop
mov
adc
ds
in
loop
es
inc
cmpsb
fbld
fwait
in
addr16
ljmp
mov
iret
int
or
fldl
mov
pop
aaa
aaa
aaa
aaa
les
mov
mov
test
aaa
mov
pushl
push
fs
push
test
insb
cmp
orb
mov
dec
xchg
dec
in
sbb
sahf
mov
int3
rcll
sbb
in
mov
outsb
outsb
lock
sub
je
hlt
ja
insb
outsb
into
push
scas
aam
adc
out
fidivl
aaa
aaa
aaa
adc
xor
fwait
stos
push
imul
call
imul
sbb
rorl
push
ja
aas
fwait
fwait
rclb
loope
shlb
test
in
clc
cld
mov
addr16
mov
pop
lods
repnz
divb
insb
xor
lods
sahf
fcmovne
out
lea
cmp
mov
push
out
idiv
in
fs
inc
xchg
or
inc
mov
out
out
outsb
add
jmp
sub
push
mov
out
mov
clc
cmp
mov
out
cld
xlat
cmpsb
je
adc
loop
add
inc
insb
iret
xor
pop
fdivrl
jns
xchg
inc
inc
mov
xchg
fbstp
cld
mov
popa
jp
cmp
dec
cwtl
ficompl
sub
xchg
xor
adc
dec
aas
daa
xchg
xchg
mov
and
outsb
sub
ljmp
enter
insb
dec
xchg
test
in
cli
fstps
aad
loopne
adc
fidivrs
sbb
call
in
in
sti
or
scas
dec
inc
mov
mov
push
dec
sub
scas
fs
sbb
jl
cmp
xchg
add
sbb
ds
pop
jle
movsb
push
cmp
stos
jae
mov
push
call
aad
outsb
scas
cli
faddl
mov
rcl
fisubrs
outsb
outsb
roll
es
dec
mov
jge
les
mov
push
and
fsubs
or
or
push
aaa
cld
psraw
dec
dec
in
addr16
in
sbb
outsb
add
push
mov
test
lahf
mov
add
scas
xor
cmpsb
xchg
out
clc
and
inc
out
lret
jo
dec
leave
dec
jp
pop
andb
fistl
loopne
sbb
sbb
push
push
xchg
call
ds
lods
add
and
je
mov
aaa
aas
addb
sub
popa
insb
outsb
ds
clc
bound
xchg
jne
xor
mov
ds
imul
fld
mov
xor
inc
and
jo
test
arpl
mov
jp
loope
sub
cmp
jae
jae
ljmp
dec
pushf
xchg
push
jae
jae
mov
arpl
insb
jl
outsb
mov
out
out
lahf
rcll
cmp
jl
sbb
jne
imul
iret
jge
movsb
mov
stos
stc
fidivl
pop
repnz
mov
insl
imul
mov
int3
mov
and
xor
sti
pop
enter
add
jle
cld
insb
outsb
outsb
subb
xlat
cmp
add
aaa
aaa
pop
repnz
dec
jns
cli
xlat
cmp
mov
cmp
test
shlb
or
int
pop
xorb
mov
mov
iret
mov
cmp
out
gs
sahf
mov
bound
outsb
outsb
scas
clc
xchg
idivl
adc
dec
aad
inc
push
mov
cli
insb
inc
iret
loopne
scas
jge
adc
test
loopne
jge
push
jns,pt
enter
cltd
lret
fstps
lea
mov
mov
aaa
aaa
aaa
stos
int3
adc
ret
pop
sub
cmp
xor
out
jo
xchg
jae
jae
repz
adc
imul
xchg
fstpl
lret
loope
fists
cld
push
and
int
jae
xlat
ss
sbb
jp
outsl
in
movsl
pop
push
ror
cmpsb
jg
andb
inc
inc
test
push
and
je
rcr
pop
je
aaa
cmp
sub
int
lock
push
push
dec
movsb
clc
push
pusha
sbb
mov
or
rol
in
add
ret
and
sahf
sbb
repz
testl
out
adc
repz
dec
lods
pop
lods
hlt
in
pop
dec
xchg
jne
xor
sbb
rcrb
mov
jecxz
popf
int3
fdivp
jge
jmp
daa
and
pop
inc
jmp
clc
lods
stos
sahf
sbb
xchg
jp
int3
out
sbb
stc
dec
lahf
fcmovnu
scas
mov
or
push
out
or
or
sub
xchg
sbb
fsubl
hlt
out
add
sbb
aaa
aaa
cmpl
dec
adc
aaa
aaa
aaa
aaa
mov
ja
cli
popa
dec
push
jbe
aaa
aaa
aaa
jnp
into
cmp
stos
mov
sub
jle
inc
sbb
mov
add
add
jmp
mov
mov
add
dec
int
mov
mov
mov
mov
dec
dec
or
out
dec
adc
scas
cwtd
scas
adc
out
dec
es
push
movsb
jbe
mov
push
dec
dec
test
aas
add
insb
outsb
outsb
scas
cmpsb
lahf
mov
jo
pop
sub
fsubl
icebp
jp
adc
push
daa
out
xor
jle
iret
int
popa
cwtl
aas
adc
dec
add
jge
cmp
sbb
mov
clc
mulb
jp
pop
add
je
divb
das
leave
mov
enter
hlt
fcmovne
out
in
mov
jnp
std
jb
pop
dec
mov
mov
sbb
scas
dec
ret
hlt
scas
rcll
inc
push
mov
sbb
mov
inc
movsb
xor
cmp
out
mov
pop
ljmp
and
aam
push
xchg
jns
push
jmp
lret
mov
jbe
cmpsl
loop
cwtl
adc
adc
orb
push
cmp
inc
cmp
mov
sub
out
cmp
outsl
push
xor
dec
in
sarb
js
int
loop
in
mov
int
sub
xchg
clc
mov
imul
aaa
out
mov
out
or
in
in
jae
aaa
sbb
ja
sahf
sbb
add
aaa
aaa
mov
insb
jo
shl
scas
insl
fsubp
enter
sbbl
xchg
aad
je
xor
push
mov
mov
sub
ljmp
push
movb
push
pop
jmp
inc
mov
xor
addb
loope
sahf
int
sbb
into
add
mov
js
negl
scas
test
push
push
out
ret
cli
clc
ss
scas
ds
add
sub
adc
mov
ret
push
mov
mov
and
out
lods
out
stos
inc
fwait
fwait
fwait
fwait
aad
fs
cmpsl
out
loope
xor
adc
pusha
outsb
lret
les
xorb
xchg
mov
xor
rcrl
aam
pushf
lods
cmp
cmp
pop
and
rorb
bound
mov
fcompl
sbb
and
shlb
insb
jmp
jmp
xchg
add
fstpt
cld
movb
je
sub
sar
lock
add
cmpsb
adc
dec
dec
std
fisttpl
sbb
clc
lret
mov
setnp
gs
cmp
and
sub
mov
ljmp
mov
lods
jp
fstl
out
arpl
ret
xor
test
call
and
dec
push
das
mov
adc
addr16
mov
jnp
divb
ds
mov
or
mov
fildl
xchg
dec
lods
bound
mov
orl
mov
mov
ljmp
mov
inc
lods
jp
cmp
push
sahf
xchg
push
xchg
out
imul
stos
mov
incb
pop
inc
jp
movsb
lahf
sub
iret
lcall
clc
arpl
pop
pop
scas
mov
mov
sub
xor
mov
push
mov
adc
enter
pop
inc
xchg
idivl
adc
and
outsb
scas
clc
int3
loope
mov
dec
or
imul
insb
cmp
and
pop
lcall
mov
movsb
push
mov
mov
cltd
add
mov
loop
lret
fcompl
popa
xchg
push
inc
jae
xor
or
pop
jle
fbld
jae
inc
xor
add
repnz
out
xchg
inc
sti
aad
es
mov
outsb
pop
inc
cmp
mov
sbb
mov
jbe
cmp
cld
insb
outsb
mov
dec
inc
and
int
xor
sti
cmpb
mov
imul
stos
lret
sti
xchg
sbb
lock
mov
outsl
outsb
outsb
jle
test
ss
cld
insb
outsb
outsb
xor
lods
iret
pop
and
imul
ret
mov
mov
and
mov
int
stc
test
xchg
mov
inc
xlat
mov
add
or
int
jg
or
cltd
shlb
push
dec
mov
adc
push
sbb
adc
lret
repz
xchg
outsb
outsb
js
xor
sbb
inc
xchg
mov
je
sbb
lahf
fisubrl
int3
mov
shll
cmpb
popa
frstor
mov
mov
xchg
outsb
adc
cli
mov
mov
sbb
inc
ja
aas
hlt
mov
je
cwtl
cld
add
daa
fistl
sbb
cltd
shrl
jg
sub
and
loop
mov
clc
pop
ja
cmp
pop
adc
ss
lock
cmpsl
inc
add
dec
or
int
in
adc
out
insb
shlb
ds
mov
test
sbb
mov
stc
fmull
pop
inc
ljmp
outsl
call
arpl
adc
jle
test
in
cltd
sbb
sbb
jle
inc
mov
pop
sub
scas
cli
pop
insl
and
aaa
aam
std
push
rclb
dec
rcll
lahf
ds
mov
mov
push
orb
shlb
add
mov
ss
sbb
mov
fldenv
call
inc
lahf
mov
sub
mov
out
mov
jle
shr
lcall
iret
out
sbb
pop
mov
jae
sti
popf
imul
jp
jne
repz
ljmp
and
mov
por
cltd
jb
mov
shll
jle
push
bswap
jbe
imull
or
data16
mov
dec
rolb
repnz
fwait
fwait
fwait
push
jbe
inc
push
push
shrb
adc
bound
fdivrs
mov
fsetpm(287
cmp
out
jp
les
inc
nop
sub
adc
out
push
inc
testb
fdivrl
pop
cmove
pop
mov
loop
mov
cmp
sbb
dec
jl
loop
mov
push
and
push
aas
ret
jmp
out
mov
jmp
cmp
sub
rcrb
iret
out
dec
xchg
mov
lahf
outsb
outsb
outsb
jg
mov
and
addr16
outsb
outsb
outsb
outsb
test
lea
fistpl
notb
insb
aad
das
arpl
ror
or
nop
add
aam
and
in
dec
idivl
aas
movsl
loop
ds
fwait
dec
and
int
int
jp
sahf
mov
jmp
lea
jle
lahf
int
xchg
vrcpps
jle
sti
add
mov
inc
sub
lcall
ficomps
mov
insb
fstpt
out
out
cmp
add
leave
cmc
dec
cmpsl
add
dec
les
insl
inc
adc
xor
xchg
xchg
adc
sar
rcr
xlat
cmpsb
push
dec
cli
pop
stos
jmp
mov
sbb
in
or
sub
in
mov
mov
nop
loop
lock
les
je
fcmovnbe
adc
fwait
inc
pop
addr16
jae
pop
leave
xchg
ret
shlb
fcompp
fs
aam
dec
mov
imul
mov
daa
jp
lret
int
aas
sub
cmp
idivl
shl
sbb
int
mov
fidivrs
aam
ret
out
and
jmp
adc
movsl
scas
ljmp
aaa
mov
xchg
test
in
xchg
pop
add
push
ret
ss
outsl
jecxz
push
pop
pop
dec
mov
aad
sahf
int
cmpsl
push
jg
ret
mov
adc
xor
or
stos
xchg
and
inc
jmp
pop
fisttpl
dec
sahf
sub
das
test
pop
std
cmp
pop
js,pn
cmp
outsl
jnp
pop
push
sti
pop
leave
outsb
outsb
outsb
outsb
xchg
xchg
push
sbbl
push
push
and
push
ljmp
pop
ss
xor
imul
clc
test
out
lcall
arpl
fdivrl
test
sub
insb
negb
or
lea
addr16
faddl
in
lcall
insb
sbb
int
int
push
mov
cmp
orb
cli
lock
cli
jle
pop
ds
or
jecxz
gs
aaa
int
int
sbb
jbe
mov
int3
and
clc
push
push
mov
mov
pop
iret
or
hlt
fsub
jge
repz
rorb
push
inc
into
push
iret
in
and
adc
cmc
push
clc
repnz
aam
push
sbb
cmp
jp
js
cmp
mov
lods
movsb
fisttpl
cli
jp
pushf
aaa
inc
push
int
dec
aas
insb
push
mov
dec
push
js
jno
push
imul
iret
add
dec
jp
mov
push
cmc
shr
mov
iret
out
das
sub
add
pop
jecxz
outsb
iret
or
add
add
insb
add
mov
in
out
mov
lds
adc
fwait
pop
popf
bound
mov
mov
and
iret
out
sti
pop
stc
sarb
hlt
imul
or
scas
sbb
divb
push
xchg
xlat
mov
pop
add
ss
lods
lods
shlb
out
xchg
mov
sub
nop
imul
add
sbb
dec
mov
push
and
inc
fidivs
jge
aaa
jnp
rcrl
add
pusha
pop
and
andb
test
sbbl
push
shrb
mov
stc
and
fdivrl
aaa
pop
mov
or
or
faddl
mov
jbe
and
push
mov
rorl
push
dec
in
dec
cs
dec
out
or
lods
jl
out
push
pop
clc
insb
outsb
sub
adc
mov
ja
out
xchg
iret
xchg
xlat
push
jmp
out
out
jl
jge
or
stos
shl
out
out
add
sbb
out
mov
dec
and
push
outsb
outsb
pinsrw
icebp
or
out
je
mov
sub
clc
fadd
xor
cmp
or
pop
cmpsb
idivb
jo
adc
pop
scas
into
push
inc
gs
js
add
out
test
ffreep
daa
pop
popf
pushf
xchg
sbb
out
cmc
aas
popa
mov
mov
pop
xlat
rcrb
cld
aad
mov
out
bound
xchg
jnp
ds
lods
mov
xchg
dec
test
out
dec
mov
test
mov
cs
fdivrl
daa
addb
add
outsb
outsb
lret
out
mov
cmp
mov
call
divb
aaa
aaa
mov
xor
sbb
fsubp
dec
push
cmp
aaa
aaa
pop
loope
dec
sub
and
inc
sbb
filds
js
scas
ret
jle
xchg
lods
es
cmpsb
push
mov
adc
fstpt
iret
fwait
xlat
pop
ss
mov
mov
stos
mov
in
ret
xlat
mov
jge
outsb
das
mov
xchg
sbb
add
sub
in
nop
mov
mov
aaa
aaa
aaa
aaa
cmpsb
dec
jmp
add
fnstcw
pop
clc
inc
xchg
shll
fidivrl
and
iret
addr16
xor
jge
sahf
or
out
imul
sahf
pop
dec
push
int
adc
notl
mov
mov
fldt
out
cmpsb
mov
sbb
scas
hlt
dec
dec
pop
inc
shr
mov
jmp
push
mov
fisttps
jl
pop
mov
or
jle
aaa
mov
clc
inc
cmp
add
popa
lock
inc
popf
sbb
push
cmp
sub
fwait
fwait
fwait
test
xor
aad
lea
cmpsb
pop
ja
or
call
fisubrl
aaa
lahf
xchg
ds
jne
push
stos
mov
sub
lcall
xchg
dec
mov
movsb
insl
xor
push
jg
int3
cmp
pusha
icebp
mov
mov
dec
inc
fiaddl
sub
repnz
pop
mov
sbb
pop
out
sub
cmc
mov
arpl
cmpsb
inc
push
mov
arpl
out
mov
bound
or
sti
sahf
jnp
or
pop
dec
cltd
mov
and
scas
pop
shlb
std
nop
ret
adc
or
js
cld
popf
jle
jbe
xchg
inc
push
or
sti
dec
sbb
aas
clc
nop
stc
dec
f2xm1
mov
add
gs
idivl
imul
fildll
and
mov
or
mov
dec
mov
out
popa
sub
inc
pop
cli
sub
out
dec
push
cld
sets
pop
or
sbb
dec
cmp
sub
nop
js
sbb
aad
and
jmp
out
out
mov
adc
dec
mov
out
fmull
mov
xchg
mov
repnz
out
sub
jae
jp
iret
push
test
add
mov
gs
rcr
push
je
jbe
or
aaa
lods
ja
loope
sub
mov
mov
ds
inc
mov
add
xchg
mov
lahf
int
inc
loop
enter
sbb
clc
sub
int
addl
cmc
jg
out
iret
mov
jbe
test
outsb
mov
inc
dec
out
push
iret
divb
cli
cld
in
out
xchg
pop
gs
std
insb
fistps
sub
inc
push
es
test
mov
test
xlat
xchg
lock
je
push
ds
insb
jns
or
add
pop
testl
add
jae
jae
and
les
dec
ss
mov
scas
inc
inc
adc
in
fisttpll
jecxz
fstl
loop
push
out
les
push
hlt
sbb
cli
jbe
inc
pop
inc
rorb
pop
inc
xlat
movsb
test
ja
push
pop
lahf
in
adc
mov
mov
or
std
mov
outsl
int
int
and
sbb
add
int
int
imul
mov
ljmp
outsb
ficoml
repz
je
loopne
adc
xor
enter
rcrl
fistpl
in
cmp
xchg
and
jo
xchg
and
inc
mov
or
outsl
test
sbb
dec
loope
shrb
ljmp
push
ss
adc
sar
cli
jp
dec
incb
jmp
popa
stos
pop
shlb
pop
loopne
stc
xchg
out
out
mov
andl
lods
add
sbb
adcl
hlt
pop
push
insb
outsl
xlat
xchg
push
push
mov
fwait
cli
outsb
outsb
push
addr16
sbb
lods
push
xor
inc
adc
lds
mov
test
adc
sub
int
in
pop
into
jg
incb
cmp
int
int
gs
dec
dec
xor
mov
or
ficoml
and
or
pop
lods
int
int
adc
in
repz
sbb
int
and
cmpsb
dec
push
clc
pop
or
ja
aas
cmp
mov
mov
mov
incl
ja
push
cmp
cli
rorl
leave
push
pop
out
sti
imul
or
insb
aas
fstpt
lods
cmp
es
int3
fcomi
or
jb
push
insb
pop
cmc
dec
sbb
fwait
fwait
fwait
fwait
popl
sub
aas
fwait
fstl
mov
loope
pop
mov
test
and
jae
sti
fdivl
jge
xlat
mov
mov
jae
push
sbbl
mov
fisubrs
sub
les
inc
call
mov
ds
cmp
inc
cmp
jbe
jne
hlt
ret
daa
je
ret
popf
sbb
cli
test
clc
clc
pop
aam
dec
ficoml
insb
outsb
mov
leave
fiadds
aas
jmp
mov
pusha
sub
add
int
repnz
mov
in
addr16
adc
and
in
in
mov
mov
and
fdivrl
in
push
or
dec
fidivrl
cmp
clc
fldcw
bnd
sahf
or
out
xorl
mov
jmp
leave
ds
mov
fwait
mov
adc
fcomps
mov
lods
push
out
push
addr16
nop
mov
or
loop
lods
das
jno
ret
jmp
out
in
xchg
fnstenv
adc
test
or
int
int
incb
test
jb
mov
int
loopne
out
sbb
enter
leave
or
ss
inc
or
dec
inc
and
mov
fdivrs
aad
jecxz
jae
aas
fwait
fwait
fs
cmc
dec
test
cmp
pop
dec
into
int
add
test
out
and
adc
fmull
push
call
jae
jae
or
and
pop
or
dec
cmp
sti
mov
sahf
dec
mov
imul
push
fadd
fidivrs
aaa
aaa
aaa
mov
xchg
sbb
inc
jno
ds
push
fiadds
xchg
push
cmpsb
push
sbb
dec
pop
stos
or
pop
dec
icebp
cwtl
pop
fdivp
xor
pop
hlt
mov
faddl
subb
xor
pop
movb
das
sti
rol
divb
cmpsb
in
lcall
bound
loopne
aam
cmp
jle
mov
out
daa
push
insl
rolb
cmp
js
push
dec
push
sub
out
inc
ret
rolb
inc
loope
lods
adc
iret
out
push
jle
stos
xchg
pusha
jae
imulb
ljmp
out
mov
pop
out
inc
push
mov
out
shll
mov
inc
pop
inc
lahf
fs
jbe
sbb
outsb
sbb
fiaddl
out
jecxz
out
imul
mov
jae
jae
jg
pop
lcall
fcmovbe
push
mov
cmpsb
pop
rorb
jnp
push
cmp
add
lds
pop
iret
out
imul
sub
cld
mov
rolb
add
pop
stc
ljmp
fdivrl
cmp
inc
lahf
and
stc
mov
jns
nop
mov
xchg
push
sarb
pop
sahf
push
inc
clc
or
ds
in
loopne
mov
mov
bound
lds
je
out
jnp
outsb
aad
hlt
test
sbb
lret
fnstcw
inc
sub
cmpl
fisubs
pop
icebp
mov
out
leave
xlat
int
sbbl
mov
daa
or
pop
pop
push
push
lahf
in
or
repz
push
andb
aam
pop
adc
iret
out
mov
inc
nop
adcl
pop
inc
popa
mov
test
mov
mov
leave
sbb
mov
jbe
aaa
cmp
mov
jo
or
lods
or
xchg
inc
shlb
push
cmp
fmull
mov
jae
sti
jo
push
xor
inc
fwait
outsl
inc
out
mov
ljmp
xor
fildl
dec
dec
sbb
addr16
xchg
xlat
jb
fwait
fwait
fwait
pusha
sub
dec
inc
jbe
inc
mov
insb
mov
icebp
push
sub
mov
outsb
push
call
xor
pop
stc
jno
repz
inc
popf
fwait
fwait
or
push
add
sub
popf
fwait
and
pop
std
xor
aaa
sarl
or
es
dec
inc
rcll
cmp
aaa
cld
jmp
mov
mov
push
jno
cmp
adc
mov
in
jle
fstpt
fistps
stc
mov
mov
xor
shll
or
out
out
or
imul
lahf
xchg
xor
fdivrs
pop
aas
cltd
test
insb
outsb
dec
sub
cs
or
stos
sbb
movsb
xor
fcompl
lcall
jne
pusha
push
dec
inc
or
lahf
fwait
shlb
cmp
cli
fnstenv
mov
icebp
gs
in
adc
jbe
lock
cli
sarl
aaa
aaa
jb
imul
xor
popa
popf
aaa
aaa
aaa
aaa
and
pop
adc
lds
ss
dec
adc
pop
inc
mov
out
inc
dec
inc
fs
sbb
aas
fwait
stos
testb
cld
fcom
out
fcom
mov
jecxz
ret
movsb
xorb
sub
and
mov
sub
fdiv
mov
incl
js
fstps
stc
xchg
ljmp
aaa
aaa
mov
fisubrl
or
xchg
aas
sub
repz
fwait
sub
test
push
rep
lock
xor
xchg
je
cld
bound
dec
test
fwait
jle
fists
push
mov
cmp
bound
inc
add
outsb
out
jae
out
sti
sbb
mov
cmp
xchg
in
mov
inc
cwtl
bound
es
xchg
idivb
pop
jp
notb
shrb
dec
es
loopne
dec
out
or
mov
pop
jl
cmp
shlb
ficoml
mov
push
pop
jae
jae
fimull
dec
jnp
shll
jae
inc
ret
imul
imul
mov
inc
sub
mov
cmp
std
mov
mov
loop
or
mov
loopne
xchg
mov
mov
xchg
cmp
nop
xchg
jle
aad
les
add
push
dec
repnz
dec
sbb
shlb
in
cmpsb
rorl
fdivs
ret
leavew
cld
mov
inc
into
or
xlat
adc
fwait
or
and
push
rclb
mov
or
fwait
xlat
pop
cli
call
out
dec
xor
sahf
mov
leave
pmaxub
out
jb
pop
jns
xchg
and
imull
call
ss
jo
mov
add
dec
out
mov
and
fsubrs
pusha
cmpsl
rcrb
outsb
outsb
xchg
xor
inc
lcall
enter
outsb
outsb
adcb
lret
fsubrs
int3
jo
aad
sti
insb
cmpl
pop
subb
jae
jae
add
sub
icebp
cmp
fnstsw
loop
iret
out
aad
cmp
popf
push
mov
add
loop
mov
or
jb
lods
xor
std
xchg
in
xor
test
arpl
dec
jle
mov
adc
int
sbb
cmpsb
aaa
or
addr16
mov
ficoml
xor
inc
pop
movsb
push
and
into
out
push
pop
hlt
lods
or
add
mov
ret
mov
jae
out
mov
in
inc
out
sahf
mov
xchg
jae
jge
jae
repnz
leave
out
dec
pop
pop
push
mov
and
es
pop
mov
aaa
iret
int
push
shrb
xchg
je
jl
pop
mov
or
movsb
inc
jg
icebp
jge
jnp
xchg
jb
jbe
sbb
fcomps
sahf
fistpl
mov
push
or
clc
mov
cmpsb
pop
jp
fnstcw
pushf
lods
test
call
ds
cmp
scas
add
fwait
lcall
sub
int
adc
push
mov
jge
sahf
int
rol
cmp
adc
cld
xor
push
sahf
pop
inc
inc
cld
out
shlb
cmc
shlb
adc
inc
mov
xor
push
mov
adc
roll
pop
cmp
dec
inc
lahf
jp
outsb
scas
addr16
push
notb
insb
cmc
mov
mov
mov
dec
inc
jbe
gs
inc
lods
sub
mov
mov
mov
popa
cmp
xchg
in
addr16
jle
mov
mul
pop
push
or
add
cmp
jae
jae
dec
fwait
push
push
inc
mov
test
dec
inc
sub
adc
push
jae
cmc
mov
mov
xor
pop
lods
add
push
les
push
clc
loop
cmc
es
jle
or
lahf
in
shlb
push
sahf
ret
aad
shll
cmpsb
inc
mov
cmc
push
cwtl
flds
jnp
mov
mov
cmpsl
or
jbe
test
mov
outsb
or
cwtl
leave
dec
aam
pop
in
icebp
jo
inc
mov
push
lea
ja
push
stos
push
rorl
mov
das
test
inc
dec
push
inc
jl
movl
fs
jae
jae
mov
mov
dec
fidivs
jb
add
pop
add
fcompl
cmp
xor
mov
cmpsl
out
jmp
int
xor
fadds
xchg
pop
pop
pop
pop
mov
or
mov
scas
mov
sbb
rorl
cmpsb
test
push
xor
test
addr16
fistpl
fidivl
test
xchg
and
push
sbb
fwait
fwait
fwait
sub
lds
int
int
dec
mov
cmpsb
inc
int3
ror
dec
iret
int
push
dec
in
stos
pop
pop
mov
out
sti
and
mov
and
insb
rorb
out
out
cmp
xchg
rol
dec
jo
out
out
mov
and
outsl
xchg
cs
ds
iret
xchg
mov
out
mov
aam
lcall
les
iret
outsb
jne
fiaddl
push
lcall
mov
clc
push
xchg
scas
sti
fstps
pop
inc
cmp
pop
rolb
mov
xchg
push
adc
cli
add
test
pushf
int
dec
xor
sti
sbb
push
sub
sahf
int
addr16
std
iret
inc
stos
jns
stc
dec
js
arpl
aas
pop
jp
imul
push
pop
dec
insb
xchg
outsb
ss
mov
mov
ss
cld
jmp
int3
mov
in
pop
jl
mov
mov
and
clc
jne
out
mov
sub
inc
dec
mov
stc
int
jbe
mov
jb
out
jg
loope
clc
mov
pop
dec
js
xchg
pusha
mov
hlt
xor
add
loope
push
mov
jle
sbb
jae
lds
pop
xchg
inc
lahf
mov
mov
jae
jae
fiadds
repz
cld
inc
xor
pop
shlb
dec
lods
and
add
adc
neg
int
mov
pop
pop
icebp
adc
fistl
sbb
iret
out
test
popf
cmp
addr16
in
push
or
pop
add
aaa
mov
jb
enter
adc
int3
std
arpl
aaa
aad
mov
ret
repz
pop
mov
fidivs
jmp
out
sbb
aas
pop
xchg
sbb
xorl
lock
sub
mov
int
in
sub
pop
dec
icebp
cs
int
push
faddl
loop
mov
inc
pop
xchg
sbb
jnp
sar
mov
es
addb
int
int
jmp
syscall
repnz
int
int
fisttpl
outsb
cld
add
xor
mov
aas
mov
xor
jmp
idiv
clc
loopew
mov
push
cs
dec
mov
push
add
mov
sbb
rorl
jecxz
push
lahf
lcall
mov
push
dec
sahf
int
int
push
dec
xorl
lea
sahf
cmpsb
jp
mov
jmp
jle
push
sbb
fcoms
jp
scas
mov
lret
fidivl
jno
ret
fimuls
adc
jno
mov
scas
outsb
outsb
cs
dec
xchg
lods
pushf
push
mov
aaa
push
daa
leave
xchg
outsb
arpl
stos
loopne
shlb
ret
push
outsb
outsb
outsb
outsb
dec
aaa
shlb
jnp
test
sahf
cmp
outsb
outsb
and
subl
out
mov
push
adcb
and
lods
cmp
ds
jmp
adc
push
pop
jb
mov
mov
jae
jae
xchg
fistps
push
inc
gs
ret
fsubrl
test
or
into
out
das
xor
push
xor
outsb
ss
adc
popa
cmpsl
pushl
sub
int
jne
in
cwtl
aaa
mov
shlb
add
jb
cmp
jae
sti
cmp
mov
xchg
sbb
int
addr16
xor
loop
sbb
insb
adc
dec
or
pop
int
mov
outsb
scas
mov
jmp
in
pop
pop
cbtw
je
loope
or
mov
repnz
outsb
outsb
mov
jl
xlat
loope
sbb
std
insb
andb
mov
push
int3
jmp
out
pop
mov
push
repz
bound
xor
pusha
das
mov
mov
jle
repnz
sahf
das
sub
mov
xor
mov
jae
adc
and
imul
mov
mov
dec
cmp
pop
and
jecxz
push
loopne
cmp
std
xchg
mov
inc
xlat
divb
icebp
inc
rclb
outsb
sbb
sbbb
sbb
out
es
jno
outsb
lahf
fwait
fwait
test
ja
mov
clc
hlt
mov
test
dec
xor
int
mov
mov
xor
mov
rorb
sub
mov
je
into
int
dec
ret
xchg
mov
insb
outsb
jp
mov
addb
shrl
std
insb
sbb
mov
rcl
fimuls
into
divl
ljmp
sti
pop
fistl
fwait
fstpt
in
or
pop
sbb
xchg
hlt
sub
lahf
fwait
sub
sub
or
out
mov
in
cmp
add
test
mov
push
or
cmp
fcompl
mov
pop
lock
add
cmc
lcall
mov
mov
cmpsl
mov
jg
ljmp
mov
jne
cmc
shl
xchg
mov
lock
rclb
fs
bound
out
outsb
outsb
outsb
outsb
mov
je
cwtl
movsb
pop
xchg
stc
addb
push
jmp
out
xchg
popa
roll
jae
subl
mov
lods
fs
jae
aas
lret
inc
movsl
lcall
out
jl
lcall
stos
or
iret
in
divl
adc
jbe
or
ja
lahf
into
mov
js
sbb
rcrb
hlt
mov
outsl
jno
dec
out
in
push
sub
adcl
pusha
pop
push
fsubs
std
ss
adc
orb
mov
or
in
icebp
fwait
fwait
cmp
sti
dec
nop
jg
lret
jl
xchg
mov
mov
jge
fdivrp
fnstenv
sar
push
cmp
hlt
xchg
lret
jl
in
test
jb
outsb
fcmovne
imulb
cmp
and
mov
vpshaq
and
sar
or
ficompl
outsb
outsb
outsb
or
pop
sub
ds
fsubr
mov
push
int
icebp
insb
adc
adc
int
int
test
inc
xchg
loopne
sub
sar
pop
iret
mov
pop
jmp
mov
jle
outsb
outsb
pop
mov
aad
scas
repnz
insb
outsb
outsb
add
cld
lahf
int
sub
or
fs
js
stos
mov
jae
sbb
jg
adc
ds
es
clc
adc
adc
inc
jecxz
adc
mov
je
adc
xchg
in
mov
mov
pop
lock
test
lods
jo
jecxz
dec
mov
fneni(8087
jne
out
or
ljmp
scas
lahf
fcmovne
out
inc
push
into
nop
insl
aas
in
jecxz
and
iret
int
push
lock
outsl
arpl
xchg
fwait
fwait
stos
mov
sub
pop
mov
xor
fwait
daa
pop
cmp
mov
sub
call
cwtl
sbb
call
add
into
inc
aad
cmp
movsb
dec
sub
mov
out
jbe
pop
cld
stos
inc
out
gs
add
push
and
jmp
mov
bswap
int
int
and
inc
insb
push
xor
pop
into
or
pushf
lahf
int
mov
ret
xor
jge
mov
pop
xchg
test
loop
out
cmp
cli
mov
sub
pusha
sbb
push
pop
outsl
cld
insb
xchg
cld
mov
enter
add
aaa
ljmp
push
cmp
aas
and
stc
mov
jae
ds
inc
arpl
push
int
jno
daa
mov
in
jnp
movsb
mov
out
fnsave
aaa
aaa
mov
jbe
add
xlat
or
jle
aaa
sub
xchg
xor
push
in
inc
test
jge
jl
inc
adc
jb
mov
aas
test
pusha
hlt
pop
fdivr
or
or
dec
jl
or
push
sbb
inc
sub
cmc
insb
xor
movsb
pop
fs
addr16
gs
out
les
shll
mov
jo
xchg
adc
ds
test
pop
les
js
mov
jle
jl
and
jl
xchg
in
inc
and
adc
fdivrl
fs
xor
adc
jle
icebp
mov
jne
ret
stos
sub
std
lock
or
push
pop
mov
lock
fnstenv
push
mov
sahf
push
mov
int
vmread
imull
out
clc
or
add
dec
lret
cmpsb
pushf
outsl
out
testb
std
stos
xchg
or
ljmp
iret
sbb
shr
in
in
mov
stos
and
jp
adc
or
faddl
lods
hlt
ja
cli
xor
cmp
jae
mov
push
ds
adcb
out
jae
mov
jl
mov
push
mov
iret
out
cltd
adc
pop
movsl
mov
outsb
outsb
outsb
fildll
rorl
cmp
sub
or
jge
in
shlb
loope
out
or
jle
outsb
xchg
ret
or
push
dec
das
adc
testb
outsb
outsb
outsb
ret
pop
fldcw
lea
sti
insb
outsb
mov
mov
mov
in
sahf
ds
fcmovnu
cmpsl
or
mov
push
fcompl
add
mov
mov
jae
sti
fxch
jg
icebp
test
cmp
out
ficoms
jecxz
and
and
addr16
test
push
cld
push
adc
das
nop
rorb
lods
fbstp
dec
in
push
lahf
in
jnp
push
inc
int3
clc
clc
adc
cmp
cltd
out
fdivrl
mov
xor
and
fisttps
in
ret
pop
mov
ret
push
cld
es
test
sbbl
out
pop
pushf
int
or
leave
cmpsl
cmp
cmp
push
jne
push
mulb
imul
fcmovne
cmc
mov
in
mov
jle
fwait
fwait
fwait
dec
jg
je
cwtl
mov
js
xchg
in
xchg
jle
clc
add
out
push
repnz
lods
aaa
aaa
aaa
cld
mov
push
outsb
sbb
sbb
or
aaa
out
push
sub
aas
call
mov
in
pop
icebp
xchg
lock
stos
pop
fs
adcl
inc
jp
iret
pushf
mov
shl
jnp
pop
jp
jae
arpl
jg
in
out
out
bound
jl
cwtl
lret
pushf
nop
xchg
shld
mov
aaa
aaa
aaa
mov
test
rcll
add
sub
fnstsw
dec
push
mov
aaa
pop
mov
lock
orl
mov
push
fsts
jns
shlb
icebp
loopne
jecxz
pop
sarb
mov
push
mov
clc
dec
daa
bnd
cmp
sbb
imul
mov
cltd
mov
xchg
mov
jl
and
mov
cmpl
out
aas
es
out
mov
repnz
add
push
jnp
cmp
jbe
mov
loopne
icebp
loopne
cmp
adc
push
jne
mov
rclb
xchg
inc
out
mov
divb
and
mov
or
mov
aas
gs
out
notb
mov
mov
xchg
dec
out
int
pusha
mov
or
das
xor
hlt
lahf
fwait
fwait
fwait
das
aaa
inc
rcrl
push
xor
out
cld
insb
adc
sub
lret
out
icebp
xor
mov
shl
scas
jge
pop
inc
inc
inc
inc
ret
inc
dec
add
mov
divl
cwtl
popf
in
pop
lock
push
gs
cmpsb
jge
call
sar
sub
inc
imul
dec
cltd
inc
outsl
hlt
ficoml
jo
jl
loopne
repnz
inc
jecxz
shrb
and
adc
addr16
push
outsb
outsb
outsb
lods
mov
mov
cmpb
lock
stos
int
mov
aam
cld
push
push
call
push
imul
nop
adc
cltd
jnp
mov
popa
inc
mov
cmp
mov
sarb
jge
sbb
rcl
out
out
cwtl
repnz
movsb
lock
mov
inc
pop
test
shl
mov
jle
sub
adc
mov
inc
fstpl
hlt
inc
adc
sub
insb
loop
jne
clc
sbb
sbb
mov
shr
push
ljmp
or
pop
mov
jp
mov
int
pop
adcb
and
int
jmp
pop
inc
inc
mov
cs
adc
or
test
stc
sti
loop
adc
addr16
dec
xor
and
mov
and
jne
repnz
imul
idivl
adc
xchg
in
jns
mov
or
outsb
clc
pop
sub
ret
insb
shl
fmull
jmp
aas
adc
rcr
sbb
cli
test
pop
cmp
fs
jle
cs
jo
shrl
xchg
cmc
or
lods
pop
lock
in
push
jne
jl
clc
fnstenv
lods
cli
pop
ss
js
loopne
mov
test
lahf
cmp
inc
jl
fwait
and
loop
std
sub
stos
sbb
add
xchg
je
mov
loop
mov
mov
adc
aaa
aaa
aaa
mov
pop
fiadds
js
inc
aas
sbb
stc
repnz
mov
mov
insb
lock
subb
lods
mov
mov
mov
jbe
or
inc
mov
repz
xchg
mov
jl
hlt
push
and
inc
sbb
jno
jne
push
adc
jl
sti
adc
inc
mov
inc
es
mov
jae
jmp
loope
iret
out
pop
scas
pop
rorl
mov
mov
loopne
jp
test
and
jbe
mov
icebp
jbe
jb
js
les
mov
mov
shl
mov
mov
out
testb
movb
rcl
or
int
lahf
fldt
mov
int3
pop
mov
int
sub
push
aam
push
aas
mov
sti
ja
xchg
test
lods
sbb
mov
lcall
mov
adc
sahf
fwait
divl
pop
xchg
mov
jnp
push
adcb
in
xchg
xchg
xor
mov
fsubr
mov
icebp
dec
sahf
loop
sbbb
mov
lcall
cwtl
sub
cmp
outsb
outsb
outsb
outsb
mov
push
punpcklbw
jl
mov
add
insb
outsb
sbb
sti
dec
mov
lock
xchg
dec
bound
out
testb
mov
nop
insb
out
popa
sub
aas
xor
xlat
test
xchg
push
loope
clc
jno
jp
xor
and
loopne
mov
sbbb
stos
int
fists
rolb
daa
adc
pushf
and
js
sub
jae
fdivs
xchg
push
jnp
lret
in
addr16
ja
data16
jo
dec
outsb
xor
es
or
int
loop
into
inc
popa
adcb
jp
or
sarl
iret
mov
ret
jno
ret
adc
fwait
mov
mov
iret
notb
sub
pop
in
dec
dec
loop
movsl
das
cs
mov
insl
pop
loope
and
jge
sbb
hlt
test
jl
aas
fisttpl
negl
repz
jg
xchg
js
notb
clc
add
pop
xor
andl
loope
clc
leave
mov
es
adc
push
popf
movsb
jecxz
mov
fdiv
sti
mov
xchg
out
out
insb
pop
sub
movsb
pop
cmpxchg
push
mov
add
loopne
push
adc
push
lcall
xchg
mov
adc
outsb
aas
push
jge
pop
dec
jmp
and
mov
test
divl
aaa
pop
std
xchg
jne
rol
or
je
shr
sbb
ds
aaa
mov
mov
stos
lock
fcoml
cs
shll
orl
xlat
xor
xor
out
out
xchg
adc
mov
mov
fucomi
jne
fcomip
xor
clc
xchg
repz
fnstcw
pop
pop
repnz
stos
faddl
xchg
gs
int
daa
jmp
js
and
int
ds
aaa
pop
cmp
aad
outsl
inc
out
out
cmp
mov
add
sbb
jb
adc
pop
xor
lods
lahf
jecxz
fdivs
push
or
xor
hlt
in
jae
fnstcw
sbb
jle
rcrb
clc
sahf
ljmp
lahf
loop
mov
dec
subb
shll
imul
out
loop
jae
jae
mov
sarl
sbb
push
mov
push
test
insb
jae
pop
dec
divl
nop
adc
mov
adc
popa
mov
pop
fidivrl
aaa
aaa
jae
xor
pop
adc
xchg
jle
inc
data16
adc
out
idiv
cmp
dec
push
aad
lret
pop
outsb
scas
add
enter
xchg
cmp
adc
fstpl
shll
xor
notl
sub
sbbb
stos
cmp
or
jl
std
xchg
stc
and
hlt
jmp
mov
clc
f2xm1
sub
adc
jp
or
cmp
int
mov
push
dec
inc
cmp
push
adc
xchg
add
out
inc
leave
adc
imul
sahf
xchg
jo
outsl
dec
xor
outsb
dec
rorl
pop
loopne
mov
cmpsb
iret
push
push
clc
insb
mov
dec
cmp
out
divb
adc
pop
xor
imul
dec
sarl
sbb
sahf
idivl
icebp
jl
xchg
out
out
or
mov
dec
dec
orb
cmp
adc
pop
icebp
sti
fs
dec
es
xchg
pop
mov
ret
in
imul
cltd
ds
pusha
movsl
push
inc
les
and
lea
in
dec
ret
push
decb
cli
mov
mov
adc
sbb
push
ror
aaa
fldl
push
push
into
rcrb
inc
mov
sub
mov
xchg
addr16
jae
loope
clc
adc
sbb
pop
xchg
out
scas
fists
ss
inc
in
iretw
out
out
jle
hlt
ja
int3
and
mov
subl
jne
shr
cmp
mov
std
push
mov
sub
sub
fcomi
or
bound
push
mov
pop
std
insb
outsb
xchg
xor
xor
mov
jns
cwtl
jp
aaa
je
dec
adc
fidivs
xchg
adc
mov
adc
xchg
lods
or
xchg
sahf
push
push
add
and
jecxz
mov
ss
pop
hlt
sbb
test
pop
inc
xor
xchg
cld
out
or
push
adc
outsb
shlb
adc
cmp
pop
xor
cwtl
ds
dec
inc
inc
jb
in
fcoml
dec
adc
or
rorb
movsb
fisttpl
aad
into
lea
push
xchg
add
sbb
out
idivb
fs
sbb
loopne
movl
pop
fincstp
lods
imul
nop
sbb
add
pop
call
shlb
mov
xchg
mov
mov
cmc
negb
sub
jae
imul
loopne
arpl
ljmp
mov
adcl
sbb
dec
ss
aaa
aaa
add
add
push
int3
inc
cmp
jmp
pop
jo
mov
mov
cmp
sbb
es
mov
xchg
test
mov
aas
mov
adc
jmp
repz
or
int
fdivrs
sub
mov
in
jmp
call
out
loopne
or
aaa
aaa
aaa
aaa
insl
outsb
outsl
lods
roll
add
aaa
aaa
aaa
aaa
xlat
jno
decb
les
cli
sub
jle
adc
ficoms
sbb
lock
test
faddl
aad
cmp
cmp
mov
loope
xor
jae
int3
mov
mov
jecxz
xor
les
adc
dec
mov
lea
aaa
aaa
aaa
mov
sbb
push
leave
cli
sarb
aaa
adc
sbb
mov
sbb
arpl
dec
inc
sar
in
mov
shlb
adc
ret
jno
cmp
std
in
ljmp
arpl
data16
addr16
psadbw
push
adc
cmpb
out
out
insb
xchg
xor
inc
pop
mov
pop
dec
ret
sbb
shl
outsb
out
mov
std
scas
cmp
loope
outsb
outsb
outsb
cmp
cs
daa
pop
xor
lahf
or
insb
outsb
outsb
mov
imul
pop
pop
clc
imul
mov
mov
pop
out
cs
hlt
mov
je
fs
jg
mov
pop
dec
lods
xchg
jmp
adc
xchg
xchg
sub
outsb
fucomip
sti
loope
mov
incl
lods
lret
in
outsb
outsb
outsb
stc
pop
mov
xor
fistpll
outsb
outsb
outsb
pop
or
icebp
stos
loop
sbb
es
outsb
outsb
gs
jae
ret
cld
mov
outsb
outsb
sub
pushf
mov
mov
jb
hlt
f2xm1
jge
jno
in
xor
das
bound
std
xor
cld
jae
roll
inc
mov
mov
das
fdivrl
test
test
int3
cmp
xchg
insl
dec
lret
jne
dec
dec
cmp
sahf
iret
add
loop
popf
inc
fnstsw
fdivl
xor
out
insb
xor
insb
inc
pushf
cmp
pop
or
mov
loop
mov
sbb
pop
mov
mov
aam
jae
cld
xchg
pusha
dec
mov
stos
into
out
xchg
mov
out
in
in
addr16
cmp
xor
mov
int
pusha
mov
call
or
out
out
jecxz
push
inc
pop
fsubrl
sahf
or
scas
faddp
out
sbb
xchg
fstl
in
jle
jl
pop
mov
mov
clc
fldcw
xor
mov
aaa
aaa
mov
mov
push
dec
loop
or
sub
loope
ds
inc
adc
xor
xor
insl
enter
sub
les
pop
fidivrs
mov
out
mov
test
inc
and
mov
sbb
icebp
dec
loop
inc
hlt
fisubrs
mov
ljmp
int3
cmp
push
aaa
aaa
aaa
pop
hlt
xor
add
push
lods
push
in
and
adc
aaa
imul
js
pop
cmp
sbb
decb
jne
jle
jge
mov
sub
int
add
leave
ret
xchg
out
lahf
int
insb
cmp
xchg
gs
or
out
bound
sbb
xchg
out
sarl
mov
mov
jecxz
mov
scas
lcall
cmp
xchg
insb
outsb
outsb
outsb
clc
test
mov
into
fs
cmovno
jnp
push
stos
in
mov
xor
dec
jbe
loop
xchg
test
fs
xchg
lahf
in
push
mov
scas
and
and
ss
aaa
mov
test
pop
inc
ja
mov
fdivrl
shrb
sti
sahf
xchg
sbb
clc
fsubr
jae
jp
mov
push
mov
outsb
outsb
cld
fs
or
jmp
dec
sbb
inc
jl
cmp
mov
push
push
jae
nop
out
sarl
and
mov
cmp
cmp
mov
mov
dec
mov
sbb
shlb
inc
loop
mov
das
aaa
mov
aam
add
shl
xor
inc
sub
stos
push
mov
push
sub
mov
cmpsb
popf
aas
xor
pop
pusha
loop
mov
sbb
dec
movsl
jl
das
out
into
int
int
mov
dec
out
test
pop
and
fwait
stos
mov
cltd
xchg
test
xor
add
in
and
jae
pop
lock
dec
sub
push
arpl
test
iret
addr16
pushf
cltd
push
cmp
in
ret
fiaddl
in
aaa
mov
jae
sbb
xchg
mov
add
jecxz
pop
xchg
stc
cmp
mov
mov
testl
das
cmp
outsl
clc
inc
outsb
outsb
outsb
fimull
addr16
mov
pop
icebp
mov
or
scas
sub
xchg
pop
pop
popa
lods
sbb
push
dec
pop
adc
test
cmp
mov
mulb
dec
xchg
daa
and
int
aaa
add
pop
jno
sahf
es
mov
int
add
aas
jmp
outsb
cs
sbb
dec
jp
jno
lock
outsb
mov
push
je
xchg
test
and
repz
pop
lods
leave
ror
int
mov
push
sbb
out
clc
lret
int
stos
ja
xor
out
sbb
clc
push
mov
insb
outsb
outsb
sbb
addl
loope
lcall
mov
mov
sub
jo
or
clc
and
sarb
popa
lock
roll
int3
push
xor
xchg
lea
sti
lret
test
fwait
fwait
hlt
or
and
mov
decl
mov
int
inc
lahf
jb
xor
pop
pop
pop
add
rcrl
sbb
sub
lods
into
sbb
fcompl
push
sbbb
hlt
add
aam
jmp
enter
xor
in
lds
out
xor
cs
loop
cmp
cmp
aad
rcrl
push
adc
stos
fidivrl
scas
jle
mov
loop
sub
aaa
aaa
mov
fidivrl
in
mov
jge
aaa
jb
roll
inc
push
mov
mov
xchg
bound
out
lock
popf
in
cmp
inc
bound
jl
mov
mov
xchg
rol
test
out
jae
mov
pop
test
and
shlb
and
test
out
in
push
pop
rcrl
jo
std
scas
imul
xor
lock
xor
ret
scas
out
push
cli
insb
outsb
das
out
clc
imul
add
ss
fists
je
sub
xlat
outsb
outsb
xchg
sub
inc
pop
adc
or
test
insb
lea
jae
add
out
aad
jae
jae
mov
mov
sub
mov
lods
jnp
jg
dec
pusha
sub
div
rolb
mov
fildl
and
repz
idivl
cmc
test
ljmp
rcl
and
test
jl
dec
cmpsl
pushf
and
in
nop
cmp
mov
lret
push
aad
push
fildll
dec
call
adc
std
test
out
adc
int3
sbb
fidivrl
cmp
sbb
movsb
ds
rcll
jmp
imul
sar
add
shlb
aaa
cwtl
fmuls
and
cmp
mov
sahf
xorl
das
in
and
das
loopne
pop
cmpsb
and
std
lcall
int
pop
mov
lcall
out
adc
inc
pop
push
cmp
out
out
inc
pop
mov
cmp
sub
lret
inc
stos
test
je
data16
je
divb
jae
test
xor
jnp
sbb
addr16
and
pop
iret
idivl
cmp
hlt
repnz
or
mov
or
out
notl
aas
fwait
fwait
cltd
aas
movsl
adc
xchg
int
int
push
mov
pop
mov
fstps
mov
adc
jb
jae
jae
push
imul
inc
sar
add
or
ret
push
dec
in
xor
ss
in
mov
jbe
sahf
add
mov
xchg
mov
jg
arpl
add
mov
std
insb
aas
jp
adc
mov
xor
lock
push
inc
dec
pop
pop
push
jbe
mov
sbb
dec
xor
xchg
jo,pt
inc
rolb
add
test
pop
iret
int
jae
xchg
mov
add
pop
jge
pop
fsubs
and
add
fwait
dec
or
mov
jno
mov
std
mov
cwtl
int3
mov
mov
pop
es
push
fidivrl
xchg
out
out
pop
filds
adc
lret
pop
out
out
cmpsl
jnp
dec
test
flds
cmp
out
pop
pushf
fs
lods
outsl
pop
iret
lret
loop
fbld
lods
add
and
je
out
out
xor
xchg
pushf
add
mov
out
out
add
push
call
shll
out
sub
cld
mov
sahf
mov
push
sub
or
ss
testb
shl
or
cld
enter
loop
outsb
clc
jge
jge
adc
scas
sahf
cmp
lcall
push
int
fwait
in
sti
fdivrl
and
jnp
xchg
mov
push
rorb
mov
fimull
mov
pop
lea
das
popf
sbb
and
or
sub
out
testb
or
pusha
pop
jae
addr16
cwtl
cltd
into
jae
rcr
push
sub
xchg
xor
and
shl
push
pop
imul
out
xchg
sbb
jg
out
js
fcmovnbe
or
int
int
cld
loope
ljmp
loope
and
repz
mov
fnstcw
jb
xlat
jnp
pop
xchg
add
jae
mov
clc
es
inc
xchg
fisttpll
clc
das
arpl
fstps
mov
shl
pop
out
aas
movsb
test
sub
test
clc
adc
out
mov
test
cmp
js
fidivs
clc
test
mov
cmp
sbb
add
mov
mul
out
dec
ss
xchg
int3
jmp
sbb
out
out
aas
dec
shr
add
and
cwtl
loop
jae
sti
xorb
mov
in
addr16
pop
xchg
lret
dec
or
dec
xchg
mov
cli
repz
fdivs
adc
cmp
jmp
lock
inc
jp
cmp
mov
mov
sbb
mov
std
fwait
fwait
and
gs
mov
ljmp
shlb
pop
adc
xchg
jne
sarl
aaa
out
dec
add
pushl
mov
aaa
aaa
mov
xorb
fmull
add
loope
sub
aaa
aaa
aaa
mov
pop
in
daa
mov
ds
jo
bound
insb
push
push
call
fdivl
scas
push
cmpsb
rcll
adc
leave
aas
lods
push
xchg
dec
add
jl
das
test
adc
stc
pop
hlt
data16
lds
cmp
iret
xlat
jno
mov
xor
test
insb
pop
in
xchg
cmc
ds
stos
jbe
sub
add
fucomp
add
aaa
aaa
popf
pop
movsb
mov
pop
loopne
pusha
sbb
inc
sahf
dec
cmp
fcomi
pop
lods
xchg
filds
pop
ret
inc
xchg
divb
out
repz
xor
mov
setge
out
out
push
int3
das
jp
xchg
arpl
xlat
jns
imulb
cmpsl
jmp
mov
adc
mov
outsb
fdivs
inc
add
push
gs
in
xchg
out
push
mov
mov
and
out
pop
sub
jg
je
dec
mov
adc
adc
insb
loop
jle
fnstenv
sti
fidivrl
add
lock
icebp
ret
mov
fcoml
mov
repnz
and
lods
sbb
insb
xor
cmp
xor
fimuls
pcmpeqb
add
leave
subl
mov
mov
and
sub
pusha
test
jecxz
dec
call
mov
push
jle
fdivs
mov
scas
fsub
xchg
outsb
int
int
out
test
add
hlt
into
int
int
cmp
sbb
pop
cmp
push
pop
mov
mov
aam
xchg
in
inc
out
divb
fsubrp
inc
outsl
dec
cmp
pop
iret
out
jnp
aad
addl
push
mov
cmpsl
mov
test
out
mov
mov
inc
pushf
hlt
and
hlt
cmp
push
aaa
std
ds
pusha
out
in
cmpsb
push
mov
mov
adc
bound
push
cmp
js
idivl
xor
hlt
adc
sub
sub
push
push
ret
lret
sub
mov
jae
stos
int3
test
dec
xchg
sbbb
popf
je
hlt
mov
dec
cmp
mov
cmpb
mov
imul
adc
mov
ja
in
jae
jae
xchg
pop
mov
ffree
test
or
jae
dec
jmp
stc
or
and
pop
lea
dec
ss
test
lret
popa
sbb
outsb
pop
les
push
lcall
xor
fdivr
insb
add
or
sub
addr16
stos
int3
icebp
cmp
cltd
or
test
pop
lret
xchg
jle
aaa
aaa
lods
push
clc
loopne
dec
sbb
adc
lahf
xchg
scas
or
fmull
push
je
stos
fiaddl
add
outsb
outsb
xchg
js
mov
cmp
push
cld
insb
jo
add
sahf
cli
movb
sub
xor
xor
int
sar
dec
mov
mov
jbe
aas
scas
jb
mov
divb
shl
insb
test
enter
aam
les
lret
sahf
inc
outsb
outsb
outsb
outsb
mov
push
jns
jno
int3
fldcw
outsb
outsb
ss
loop
popa
fdivs
fistps
mov
jge
inc
pop
mov
test
fdiv
mov
aas
nop
subb
aas
jge
cltd
sbb
xchg
mov
std
test
scas
mov
mov
andb
int
aam
xchg
push
adc
xor
push
fmull
jae
add
or
sti
dec
push
pop
push
jg
mov
aad
fbld
jae
imull
push
push
cmpsb
pop
mov
out
aas
dec
dec
cmc
sbb
add
jnp
xchg
sahf
subl
mov
shufps
outsb
outsb
outsb
insl
lds
xchg
cmc
cmp
out
and
in
mov
sbb
ljmp
loopne
je
repnz
sbb
mov
pop
pop
enter
fwait
fwait
fwait
mov
out
pop
mov
aam
jge
in
xor
xor
les
jns
sub
mov
in
sti
lods
loope
push
xorb
nop
cmpsl
jae
mov
fs
rcl
adc
test
push
mov
cld
out
mov
cmp
cmp
pop
fsubl
es
mov
loope
iret
out
and
mov
int
in
dec
fdivrs
call
movsb
push
lahf
int
int
repnz
out
mov
and
mov
sub
adc
leave
shlb
adc
mov
cmp
sub
loopne
idivb
iret
idiv
test
clc
and
mov
outsb
outsb
xor
out
mov
cmc
jecxz
inc
cmp
outsl
loop
xor
rcrb
pop
sbb
inc
mov
std
push
jmp
clc
hlt
jp
push
jae
out
mov
out
mov
adcb
mov
jmp
ret
mov
int
push
shlb
mov
adc
int
push
fdivrs
mov
fdivrl
mov
repz
addr16
pop
insb
lods
and
out
test
add
jo
xor
lea
cli
dec
dec
mov
and
xchg
out
sbb
jmp
mov
sbb
cwtl
shlb
les
add
xchg
inc
clc
inc
pop
out
mov
aaa
pop
cld
jbe
inc
cmp
fisttpl
jle
xor
mov
fwait
fwait
fwait
imul
popf
sub
and
loop
xor
cmp
add
out
enter
dec
jg
pop
or
mov
fwait
jb
ss
pushf
pop
sbb
mov
aaa
or
xor
jge
jge
inc
fsubr
push
push
cmpb
jnp
mov
cwtl
inc
xchg
js
xlat
ljmp
ret
cli
and
sar
mov
clc
f2xm1
pop
fidivrl
cs
push
out
xchg
scas
cmp
add
ds
fcomi
or
xor
fcmovb
lahf
cmp
mov
scas
add
pop
clc
int
in
outsl
cld
adc
sahf
mov
sbb
sbb
dec
and
insb
sbbl
fdivrl
es
out
out
dec
jmp
int
add
aas
movsb
jle
dec
push
fnstcw
mov
xchg
mov
aas
xor
push
jae
jae
sub
rol
ret
xor
aam
mov
push
xor
sbb
loopne
dec
int
pusha
mov
leave
ficoms
fs
ljmp
cmc
mov
or
std
mov
inc
arpl
dec
pusha
push
insb
push
std
dec
fdivrl
xchg
push
cs
mov
pop
or
je
xchg
imul
cmpb
cmc
mov
and
test
lock
shlb
cmp
and
dec
cmp
or
lea
rcr
seta
int
mov
out
mov
js
inc
fcmovu
mov
pop
test
ljmp
mov
or
mov
mov
mov
js
sub
hlt
sub
mov
mov
sahf
mov
or
mov
dec
push
cmp
loopne
cmc
fdivr
mov
mov
cmc
mov
icebp
adc
fwait
sbb
mov
dec
pop
test
cmp
cmpsb
jl
lods
aaa
inc
gs
xor
enter
jno
dec
xor
cmp
lret
jecxz
cmp
fimuls
mov
lret
es
xor
mov
int
hlt
sahf
int
xchg
jo
pop
mov
icebp
adc
ficompl
mov
mov
jl
jae
mov
mov
mov
xchg
movl
outsb
push
pop
popf
insl
mov
out
xor
out
and
lcall
out
out
or
repnz
mov
mov
ret
sub
mov
cmp
out
xchg
sbb
pop
jmp
xchg
rolb
xchg
nop
into
cmpl
pusha
lods
imul
in
test
mov
xor
pop
sahf
js
jb
ds
add
jle
xchg
mov
fnstenv
push
and
fst
lret
mov
sub
je
jge
sti
pop
dec
insb
jle
push
inc
clc
and
scas
mov
jno
push
mov
adc
lret
nop
mov
loope
popf
inc
stc
inc
aaa
aaa
mov
into
mov
mov
cli
into
jecxz
ds
aaa
adc
jp
rcll
or
pusha
cmpsl
test
sti
fwait
jle
mov
cmpsb
int3
xor
iret
int
mov
outsb
sub
ror
and
jbe
mov
fdiv
mov
xchg
ljmpw
mov
rcrb
sub
ret
mov
xlat
add
bound
lods
orl
mov
aam
lahf
ret
lock
cmc
fisubrs
dec
fcmovu
repnz
lods
add
pop
pop
test
call
mov
xor
or
fmull
lods
adc
sub
cmc
out
stos
lahf
in
jae
aam
dec
lret
sbb
cltd
dec
sub
out
jae
lret
jo
sub
mov
lcall
mov
icebp
mov
loopne
stos
sub
cld
jnp
jb
ljmp
jne
push
and
mov
or
mov
ss
and
lods
mov
adc
mov
hlt
mov
mov
test
repz
inc
fidivs
test
shlb
outsb
lahf
fwait
ret
ret
inc
out
jg
ret
mov
cld
popa
out
shlb
fcompl
fmull
out
mov
or
fmul
mov
out
xor
outsl
or
imul
push
dec
mov
icebp
adc
cmp
std
dec
mov
sti
divb
fadd
aaa
pop
mov
jno
add
inc
loop
rorb
out
ljmp
xchg
cmp
mov
out
mov
cmp
incl
mov
popf
lret
jge
jl
fstl
jge
aad
int3
loopne
ss
and
idivb
fcmovne
jbe
imul
xor
fwait
fs
mov
js
mov
icebp
sbb
mov
adc
xor
clc
fdivrl
aaa
mov
outsl
xchg
out
pop
in
scas
or
insb
outsb
outsb
push
fdivp
es
push
and
testl
es
pushf
push
lret
xchg
jae
jae
dec
xor
jae
and
lods
jecxz
gs
jge
xorl
iret
test
aaa
icebp
pop
mov
mov
sub
int
add
mov
jne
mov
iret
int
int
std
pop
xor
pop
addr16
or
lods
push
or
lods
adc
out
out
jge
pusha
pop
pushf
test
lret
std
sbbl
unpckhps
insl
mov
daa
sbb
fwait
add
or
or
scas
ds
cwtl
adc
clc
cli
mov
outsb
outsb
cli
cwtl
movl
fiaddl
and
mov
sti
jg
in
pop
xchg
cwtl
xchg
or
jne
shlb
jl
inc
fs
mov
arpl
aaa
aaa
sbb
pop
movsb
pop
imul
pop
in
mov
jecxz
test
mov
fcmovnb
and
and
cs
ret
fbld
pop
mov
cwtl
inc
icebp
loopne
add
lret
addr16
neg
fsubrl
and
fiaddl
testb
mov
xor
ror
out
lods
test
fwait
in
aaa
jne
das
movsl
addr16
or
mov
stos
or
in
fdivrl
insb
sahf
mov
rcr
sub
mov
xchg
pop
popl
inc
std
push
mov
insb
outsb
sahf
out
mov
push
dec
fimuls
pop
icebp
in
andl
mov
loop
cli
xor
outsb
xor
sbb
lds
cmc
pop
in
call
out
out
aaa
mov
jl
jle
sbb
add
sbb
inc
xchg
mov
ret
mov
hlt
ds
mov
outsb
outsb
outsb
outsb
sub
aam
insb
in
in
outsb
outsb
outsb
sbb
adc
cmp
jbe
cld
insb
jae
push
testl
out
jmp
rcrl
dec
inc
and
lods
cmpsl
xchg
rorb
sub
lock
test
inc
clc
add
in
xlat
into
outsb
outsb
outsb
jp,pn
push
xchg
sub
adc
outsb
testb
pop
shlb
clc
hlt
outsb
test
sbb
cmp
dec
mov
les
xchg
pmaxsw
stos
sahf
insb
inc
inc
clc
sarb
push
adc
cld
lods
stos
pop
jmp
adc
cmpsb
ficompl
lods
jae
je
push
ja
lahf
test
addl
outsb
outsb
outsb
outsb
pop
call
mov
push
cmpb
std
insb
outsb
outsb
sub
or
pop
mov
mov
pop
dec
mov
push
adc
push
xor
adc
xchg
repnz
icebp
lods
insb
jp
jbe
mov
fisubrl
pop
stos
bound
test
shll
and
xchg
cmp
jp
pop
xchg
clc
jl
paddb
xchg
iret
mov
lret
jp
dec
fdivr
mov
stos
nop
shlb
sub
es
push
push
rcr
fsubrl
insb
xchg
cmp
movsb
insl
xor
mov
fsubrl
xchg
or
cmp
fisubrl
divb
insb
ret
scas
icebp
jae
and
jb
out
out
scas
sub
les
and
shrb
xchg
jns
repz
and
iret
out
lds
movsl
roll
push
fwait
mov
sahf
insb
addr16
in
out
out
insl
in
insb
fidivs
dec
jb
pop
imul
fnstsw
test
scas
nop
add
jl
pop
push
jge
cmp
sbb
push
lods
es
fcmovnb
or
test
pop
adc
mov
test
sbb
rorb
dec
push
xchg
xor
dec
and
leave
fdivr
ds
cmp
loopne
push
aaa
mov
insb
in
mov
in
xor
push
mov
idivl
jae
jae
pop
inc
cmp
push
mov
mov
jne
cmp
sub
ss
mov
mov
push
inc
pop
xchg
cli
jle
icebp
mov
jg
push
mov
add
les
lods
mov
inc
out
fstpl
pop
incl
loop
sbb
iret
mov
mov
pop
adc
add
cmp
out
divb
fwait
ret
cli
out
lods
pop
out
out
xor
jo
test
out
xchg
das
bound
out
and
addr16
xchg
in
stos
test
ljmp
into
dec
out
cmp
pusha
jns
sub
and
jmp
jns
ds
test
int3
xchg
mov
pop
in
sti
mov
and
jge
dec
mov
out
out
pushf
fistps
lea
xor
push
shl
out
ljmp
or
stc
mov
or
push
fwait
fwait
stos
push
testb
mov
add
imul
sahf
mov
lds
dec
or
cmp
rol
xchg
mov
addr16
xchg
push
daa
aaa
push
je
xchg
addr16
jae
sub
inc
bound
dec
cmpsl
pop
test
enter
cld
mov
lahf
leave
jg
lahf
ja
inc
out
out
mov
outsb
hlt
xchg
push
les
fcompl
xor
out
mov
pop
ljmp
adc
cmpsl
fwait
cmp
subb
outsl
mov
ds
fwait
fwait
ret
sbb
jge
cwtl
fnstcw
stos
adc
or
fwait
fwait
sbb
filds
dec
lods
push
push
in
jbe
mov
in
nop
adc
js
rol
cmp
pop
add
leave
cmp
insb
outsb
fists
es
xor
add
inc
pop
idivb
jg
cmp
nop
icebp
add
push
mov
or
daa
push
push
loope
mov
out
out
popf
rorb
call
aaa
aaa
mov
das
rcll
and
cmp
jmp
pop
lret
xor
aaa
aaa
imul
shrl
sbb
fbstp
jnp
and
fcmovbe
aas
int3
add
add
clc
cmp
shl
mov
sbb
pop
push
cld
insb
outsb
outsb
scas
mov
scas
mov
aaa
aaa
aaa
sub
jae
faddl
sub
loope
fimull
out
insl
popa
test
push
pushf
pop
or
aas
mov
adc
out
clc
mov
push
inc
push
pop
dec
cmc
dec
negl
lret
outsb
sbb
std
insb
mov
out
xor
adc
inc
inc
out
dec
cmpsl
mov
scas
je
mov
scas
iret
in
stos
cmp
ror
inc
xchg
jecxz
jno
or
fdivl
dec
dec
or
push
push
cwtl
ds
aaa
mov
bound
insb
sahf
leave
frstor
add
ret
fcoml
lea
cltd
cmp
mov
jb
les
les
outsb
outsb
sar
lcall
aam
out
cwtl
inc
cmp
add
je
jae
jae
xor
sub
mov
jle
jg
mov
out
jae
pop
ljmp
nop
dec
testl
fmuls
or
dec
adc
iret
out
out
push
mov
mov
std
sbb
fwait
pop
sub
sti
jb
pop
out
imull
lahf
fwait
fs
negl
adc
mov
int3
insb
outsb
outsb
outsb
int
ds
mov
dec
push
out
add
fsubs
mov
aas
sbb
ror
dec
dec
cwtl
add
repz
dec
aad
sbb
sbbb
fwait
mov
and
lea
jmp
xchg
jo
pop
fwait
mov
mov
or
pop
and
or
jae
and
popa
inc
push
les
cmpb
clc
sbb
sbb
mov
out
sub
fs
add
out
pop
sbb
std
insb
push
sbb
fs
push
adc
popf
push
movsb
push
cli
std
jae
aaa
ja
call
xor
push
sbb
gs
jae
adc
xchg
fcomps
sarb
pop
ljmp
rcrb
scas
fcompl
or
jle
add
in
outsb
shlb
fwait
icebp
push
dec
mov
fisubl
sbb
lods
fninit
mov
pop
sbb
test
dec
cmc
cmp
dec
ficoml
dec
imul
dec
jmp
mov
lds
mov
lods
test
jnp
jl
fadd
hlt
mov
int
in
dec
mov
and
fwait
std
xor
out
lahf
or
scas
aam
add
rolb
jge
pop
or
ss
loopne
les
xchg
out
imul
mov
mov
shlb
sahf
cld
pop
mov
push
xchg
in
mov
cmp
imul
testb
pop
movsb
imul
out
inc
cmp
cmpb
out
out
cmc
outsb
shrl
inc
das
out
mov
jle
decb
inc
push
jno
fwait
fwait
fwait
push
xchg
test
and
pop
push
iret
or
pminsw
sub
xchg
and
loopne
mov
pop
in
in
adc
and
mov
push
adc
stos
fisttpl
rcll
rorb
fwait
fwait
fwait
fwait
xlat
popa
js
and
adcb
xchg
xor
pop
aas
fistpll
dec
pop
insb
jo
call
mov
movsb
mov
jl
iret
int
scas
outsl
jp
sub
outsb
outsb
das
dec
pop
sar
int
bound
and
mov
add
pop
mov
cmp
adc
test
test
cmc
enter
sahf
call
outsl
outsb
outsb
outsb
outsb
cli
scas
repz
cmp
bound
mov
ret
cli
rcl
mov
cmp
out
cmp
sbb
jl
lods
das
jmp
test
mov
out
out
inc
and
cmp
push
repz
lods
ret
and
test
iret
mov
cmpsb
dec
push
and
stos
jae
xchg
loopne
push
cli
call
pop
jmp
cmp
out
adc
cmp
mov
ljmp
lret
das
push
fwait
fwait
iret
in
sbb
cmp
xor
xor
dec
jmp
mov
jns
sahf
cltd
cmpsl
mov
adc
leave
fadds
mov
insb
push
lea
lret
xor
adc
jle
test
inc
clc
push
mov
fwait
fwait
ret
xor
mov
dec
fdivl
out
cmpsb
int
in
and
dec
pop
ret
fiaddl
sti
xor
mov
loopne
mov
movsb
fwait
fwait
fwait
mov
mull
cmp
mov
orb
add
stc
cmp
add
jp
adc
mov
pop
and
jmp
movsl
dec
jle
int
enter
mov
iret
movsl
mov
push
cmpsl
ror
push
mov
out
or
test
inc
inc
cmp
cwtl
cmpsb
ljmp
pop
mov
mov
and
jno
loopne
rclb
push
data16
cmp
fdivrl
cmc
inc
jbe
rorl
fstl
mov
xor
repnz
sbb
mov
scas
in
pushf
insl
sar
jb
mov
data16
mov
fwait
lahf
sbb
pop
mov
daa
jno
into
mov
adc
dec
xor
outsb
or
test
mov
lock
and
outsb
outsb
outsb
outsb
cli
cltd
fwait
dec
push
test
insl
and
rcll
js
inc
pusha
mov
inc
dec
jae
mov
push
bndldx
in
jge
sub
stos
pop
pop
test
push
lret
push
rorb
int
int
xchg
push
in
jo
inc
shrl
int
inc
shlb
xor
cmp
dec
loope
mov
mov
notb
js
loopne
ds
xor
iret
out
fsubs
xchg
jmp
pop
mov
psubsb
xor
lea
sahf
cmp
jecxz
mov
icebp
pop
dec
fidivrs
outsb
int3
mov
and
hlt
cs
int3
pop
xor
mov
dec
push
sti
orl
cmpsb
mov
push
sti
pop
push
sbb
insb
out
jo
push
divl
push
int
and
sbb
or
dec
jp
add
mov
into
je
icebp
mov
and
addb
dec
mov
mov
addr16
inc
mov
mov
gs
nop
adc
and
push
mov
mov
sub
cld
jae
xlat
shlb
add
and
pop
jmp
rcr
fwait
push
pop
or
ss
aaa
mov
mov
pop
dec
jge
jecxz
lock
jae
mov
imul
sarb
icebp
mov
sbb
js
sub
jmp
out
pop
shlb
mov
jl
xor
in
daa
pop
out
test
test
repz
jmp
clc
inc
add
sub
insb
pop
mov
and
inc
aaa
aaa
aaa
aaa
data16
and
mov
pushl
testl
ret
into
popf
add
or
push
mov
jmp
push
cwtl
pop
addr16
dec
fcmovnb
rcrb
cli
jo
ret
mov
mov
mov
ret
repz
jl
std
fildl
mov
mov
fwait
fs
cmp
cmpsb
fnstenv
sti
or
pushf
subb
sbb
mov
in
aam
mov
mov
sbb
mov
jmp
sub
and
mov
dec
in
mov
push
mov
rcll
popa
loopne
adc
cmpl
lahf
in
rclb
enter
push
pushl
divb
cmp
fisubl
and
not
test
es
out
xchg
or
xchg
test
bound
jp
outsb
mov
dec
mov
loopne
xchg
or
and
xchg
pop
mov
inc
out
addr16
ret
pop
and
mov
mov
lods
adc
add
jl
adc
lods
pop
cmp
xor
xchg
pushf
adc
mov
inc
minps
rcrl
and
test
mov
mov
and
popa
pusha
jb
pop
insb
cmp
sub
adc
cmp
out
mov
push
xchg
and
bnd
xchg
outsb
outsb
inc
push
adc
inc
sub
mov
clc
insb
jae
sub
push
ljmp
cwtl
cmp
stos
mov
mov
sahf
dec
xchg
pop
pop
cmc
mov
xor
sbb
adc
mov
sbb
dec
jae
xlat
push
xchg
sub
pop
cmc
sub
ljmp
add
out
xchg
cmp
mov
sub
int3
dec
in
scas
lods
insb
jae
xor
adc
xchg
xchg
mov
sub
jl
mov
clc
sub
mov
mov
sahf
mov
pop
fidivrl
gs
xorb
mov
xchg
iret
out
mov
ljmp
and
outsb
cli
lea
test
cld
mov
icebp
inc
loope
outsb
outsb
outsb
outsb
jl
pop
pop
dec
nop
mov
daa
cltd
scas
and
pop
mov
cmp
lret
lock
mov
popa
sbb
bound
mov
test
ljmp
sti
test
and
mov
jno
addr16
jae
imul
push
pop
jge
xchg
mov
cld
push
adcl
ja
out
cmp
std
icebp
pusha
clc
push
lret
jo
sarb
sub
imul
daa
daa
scas
mov
cmc
fisubs
in
addr16
ds
outsl
and
imulb
jbe
xchg
out
mov
int
int
mov
scas
orl
mov
jne
pop
mov
xchg
shlb
lcall
and
jb
insb
xchg
pop
xor
mov
add
push
inc
ss
push
scas
cli
nop
jle
cwtl
movsb
lcall
outsb
outsb
outsb
xchg
mov
pushf
pushl
cmp
cli
dec
dec
jbe
jae
sti
rolb
test
aaa
mov
mov
xchg
sbb
ljmp
xchg
and
pop
movsb
ret
ret
cmp
pop
out
pop
add
sbb
aaa
aaa
pop
aam
jp
push
lahf
mov
fucomi
fwait
fwait
sub
fnstcw
inc
sub
ljmp
inc
aas
xchg
mov
jae
sub
insl
pop
lock
insb
push
lcall
loopne
cli
fdivl
in
adc
sarb
cmp
test
sub
or
std
adc
das
int
iret
mov
cli
les
push
cli
sub
push
push
aas
push
outsb
aas
fucomi
cmpsb
shlb
dec
cmp
loop
mov
fsubrs
movsb
dec
push
dec
fwait
dec
adc
and
adc
rolb
rcl
jae
pop
cmp
out
inc
or
and
sahf
cmp
sbb
or
mov
jbe
adc
fwait
popa
call
int
aas
fwait
push
xor
push
addr16
ja
mov
mov
outsb
cmp
xor
mov
sti
mov
pop
jge
sahf
int
mov
jae
jae
addl
mov
xor
lods
dec
sub
icebp
fcompl
movsl
dec
pop
les
xchg
test
lret
adc
push
fwait
sub
mov
out
xchg
cmp
pop
test
sbb
fwait
mov
pop
mov
aam
cmp
rcrb
fadds
outsb
mov
jbe
mov
es
pop
push
clc
insb
outsb
cltd
pushf
rorl
popf
inc
mov
mov
pushf
out
push
insb
mov
xchg
jno
ja
out
adc
and
add
ds
fwait
subl
sbb
sub
je
and
rcrb
fwait
inc
iret
jns
sbb
jle
aaa
les
icebp
nop
dec
mov
and
mov
inc
lret
std
mov
loop
sub
xchg
push
in
int
mov
loopne
lahf
out
mov
neg
or
je
ds
repz
mov
es
mov
movsb
fmuls
add
push
jle
xchg
out
sub
ret
scas
in
into
mov
fnstenv
xor
sbb
jae
pop
fstl
or
jecxz
xor
jb
jbe
lods
mov
xchg
mov
inc
push
ficompl
xchg
fs
fwait
fwait
fwait
jmp
jle
jl
inc
dec
push
aad
fdiv
icebp
mov
add
mov
std
lahf
sub
insb
into
lahf
mov
outsb
cli
out
out
push
pusha
pop
sub
inc
inc
pop
adc
out
das
lods
hlt
cmp
bound
lods
jge
ja
pop
xchg
in
sti
bound
xor
xchg
subb
out
int
int
lock
cmp
jb
out
sahf
int
int
push
aas
in
fistl
mov
jle
or
mov
incb
adc
mov
mov
add
movsb
sub
mov
mov
outsb
icebp
leave
lds
jg
iret
stos
mov
loop
or
mov
dec
cld
jnp
jns
outsb
out
fcmove
mov
cli
push
xor
ja
ja
jge
inc
mov
insb
mov
std
mov
repnz
push
adc
test
mov
out
jo
fwait
pop
divb
mov
mov
fisubrl
loopne
sbb
std
pop
outsb
lahf
movsb
push
ficompl
push
enter
scas
les
push
jge
dec
cwtl
call
jge
fwait
test
adc
inc
aas
ljmp
push
xor
cmc
adc
inc
sahf
mov
jmp
pop
les
dec
sbb
pop
mov
adc
bound
sbb
icebp
fldt
pop
cmp
dec
xchg
add
mov
aas
fwait
fwait
fwait
insl
push
cltd
and
adc
jne
mov
das
andb
push
mov
mov
nop
mov
lahf
in
stos
lret
out
les
pop
loope
mov
ljmp
pop
push
mov
icebp
lds
fcoml
jbe
fwait
fwait
fwait
or
cmpsl
dec
xchg
call
mov
pushf
xchg
in
stos
popf
cmpb
mov
xchg
mov
add
ljmp
out
fwait
cmp
pushf
cli
cmpsl
lahf
sub
repz
adc
repz
outsb
outsb
pop
les
adc
test
adc
dec
js
insb
mov
shll
and
int
sub
out
xchg
lock
push
push
xchg
leave
out
inc
lods
out
jnp
popf
lcall
test
shl
popf
mov
xor
mov
ret
xchg
mov
out
movsb
xsaveopt
pop
or
jae
out
je
fidivs
rorb
fmul
mov
loop
mov
add
sub
loopne
sbbb
jle
mov
mov
movsl
xchg
loop
push
ss
test
fcmovb
adcl
popa
jge
out
out
xorb
adc
testb
xchg
dec
scas
lods
or
pop
fistpl
add
mov
push
jle
add
fdivl
adc
addr16
jae
ficoms
sbb
lods
test
push
aaa
pop
jl
in
push
std
mov
push
mov
inc
or
sub
cmp
out
out
test
jo
inc
popf
mov
pop
cmp
fildl
push
jmp
xlat
sti
push
test
xchg
and
int3
jmp
sar
in
aaa
jle
cmpsl
or
fcmovb
add
jle
and
sub
cltd
jl
xchg
sbb
insb
outsb
outsb
outsb
adc
je
pop
push
repz
lock
jno
dec
rorb
cmp
aaa
mov
int3
add
inc
ficoml
sbbl
xchg
daa
fidivrs
push
out
mov
pop
icebp
adc
out
push
fsubs
rolb
fucomi
les
mov
mov
subl
or
mov
fwait
dec
jo
sub
je
mov
inc
cmp
insl
pusha
fcompl
movl
test
fstps
or
clc
mov
pop
out
popa
fisubrl
xchg
cli
xor
outsb
rorb
mov
mov
std
fwait
jge
cld
insb
scas
in
pop
push
testb
clc
int3
xchg
test
pop
pop
hlt
aam
outsb
aas
fwait
clc
pop
pop
fstp
pop
jno
insb
outsb
outsb
outsb
adc
xchg
mov
cmp
cli
mov
jae
jae
jle
dec
xchg
stos
mov
mov
fst
jae
jae
mov
nop
mov
lret
pop
lea
jae
jae
test
sbb
or
test
and
imull
mov
test
out
stc
push
push
mov
fcmove
jge
jno
ljmp
sub
nop
addr16
dec
add
sbb
jp
std
lock
mov
imul
xor
insl
ret
or
out
out
add
int3
mov
inc
lock
push
and
mov
out
fs
or
outsb
outsb
aas
jl
or
fidivrl
cmp
es
outsb
outsb
outsb
jnp
pop
cmp
mov
popa
add
std
ret
mov
cmpsl
xlat
data16
mov
cmp
int
and
mov
std
pushl
xor
mov
sbb
mov
sti
fsts
insb
jo
cmp
in
mov
and
push
dec
lock
and
sub
testl
xchg
dec
mov
iret
int
and
jp
and
add
popf
fs
dec
mov
mov
inc
nop
es
aad
adc
jge
aaa
aaa
int3
dec
fwait
pop
lret
and
dec
std
xchg
inc
pop
inc
lods
push
sbb
imul
jbe
dec
xor
addr16
pop
sub
popf
mov
rolb
adc
mov
mov
sbb
aaa
aaa
aaa
cmp
data16
inc
sbb
in
andb
ss
movsl
add
aas
fcmovne
mov
test
xchg
xorl
in
mov
js
clc
dec
xor
addr16
mov
add
pop
dec
push
scas
xchg
inc
lea
ss
decb
lcall
repnz
addr16
jae
lcall
test
jle
push
mov
dec
jns
xchg
fwait
fwait
imul
cmpsb
pop
iret
mov
pmaxub
int3
sahf
mov
xor
fiadds
iret
out
xchg
push
int3
sahf
lea
push
adc
pushf
fwait
sbb
or
aaa
and
mov
fisubrl
loopne
sbb
mov
adc
jp
in
test
jp
es
out
in
jmp
sbb
idivb
sbb
data16
adc
fcompl
les
lret
xor
inc
loope
sub
inc
pop
pop
adc
out
out
pop
int3
clc
mov
clc
psraw
inc
jae
mov
mov
hlt
mov
subb
loope
cmp
mov
aas
lcall
dec
and
arpl
xchg
mov
clc
ret
out
insb
testb
push
ret
subb
pop
mov
jno
outsb
outsb
lret
xchg
mov
adc
xchg
and
jae
push
adc
loopne
jo
jle
xor
jo
cwtl
iret
int
int
add
lock
leave
orl
sub
jae
jae
pusha
repz
test
push
pop
out
xchg
addr16
inc
jmp
imul
push
iret
out
jg
std
shl
jb
inc
jge
xor
jg
cmpb
aas
fcomi
mov
mov
mov
out
mov
jge
les
sub
andb
mov
shlb
mov
aaa
fiaddl
fadds
call
lret
xor
push
pop
ljmp
push
bound
or
ja,pt
xor
repz
addb
jge
or
xlat
sarb
out
dec
push
rclb
and
fdivl
add
mov
shlb
fs
push
mov
sbb
dec
mov
push
mov
enter
jl
movsb
or
shl
in
clc
cmp
enter
fwait
jl
xorb
loopne
aaa
mov
pop
mov
adc
mov
ret
sbb
ljmp
cmp
mov
loopne
jecxz
repnz
xchg
mov
sub
adc
shlb
jne
fcomps
fwait
fwait
push
dec
pop
push
xor
xchg
leave
fsubrs
push
push
cld
outsb
int3
movsb
mov
iret
lcall
faddl
loop
das
movsb
arpl
nop
subb
sbb
shl
mov
or
sbbb
sbb
or
mov
cmpsl
and
aaa
aaa
aaa
lods
sub
jb
xor
and
adc
pop
mov
jge
mov
pop
loopne
xchg
lea
out
aas
xlat
je
rcll
iret
sub
jle
xorl
loop
sbbl
xchg
cmp
dec
push
popl
xor
push
stc
or
push
sbb
aaa
cwtl
mov
test
cltd
inc
mov
sarl
mov
jmp
add
jp
out
dec
incl
adc
insl
xor
addr16
mov
mov
mov
mov
or
or
sub
jecxz
test
inc
movsl
mov
and
xorb
add
hlt
std
inc
out
test
fsubrl
mov
scas
pop
dec
imul
adc
lods
mov
dec
dec
call
cmp
out
clc
dec
movsl
xor
or
dec
mov
lods
out
pop
jae
jae
int3
lret
out
sti
je
add
jae
jae
lock
jo
out
sub
test
sbb
std
lock
iret
pop
jb
sbb
cs
scas
addr16
mov
outsb
outsb
jg
sub
out
cmp
pop
and
bound
lds
or
inc
lods
loope
push
lds
add
push
dec
cmp
xchg
int3
repz
loope
loopne
mov
mull
les
movsl
xor
rcrb
fisubs
mov
inc
jmp
dec
adc
xor
jle
inc
adc
lret
les
xchg
clc
mov
adc
or
adc
je
outsb
xchg
fwait
sbb
pop
cmpsl
and
mov
xchg
xchg
pop
mov
fisubs
dec
lock
add
jmp
sub
jg
sub
les
hlt
test
and
aad
xchg
push
unpckhps
pop
fists
xor
mov
dec
jnp
sahf
xchg
scas
lret
inc
inc
xchg
jae
movsb
nop
cmp
ljmp
jge
sub
arpl
adc
sbb
mov
fdivrl
insl
loop
ret
sub
jmp
pusha
mov
or
mov
jecxz
jl
hlt
ja
ret
xchg
dec
fldcw
jbe
out
mov
bound
rcrb
jmp
cmp
mov
mov
pushf
sub
mov
jle
and
iret
jmp
bound
sbb
fcompl
push
mov
lahf
mov
lock
insl
sahf
stos
add
int
lods
insb
push
inc
sub
std
mov
xchg
rcrb
cmp
fwait
fwait
adc
xchg
cmpb
aaa
jge
cwtl
and
data16
or
pop
mov
stc
hlt
xor
jo
add
daa
call
or
test
fcmovb
mov
cmp
addl
sub
data16
and
mov
sub
insb
outsb
shll
jmp
fistl
push
pop
mov
movsb
push
or
gs
add
jnp
outsb
outsb
adc
sbb
faddl
pop
hlt
and
inc
pop
dec
fwait
push
scas
bound
loope
ret
or
mov
stos
jae
ret
test
ret
jb
cmpsl
add
jae
dec
arpl
fmull
cmp
fdivp
call
jne
add
test
jae
jp
aaa
aaa
jl
mov
or
jns
sub
test
lret
daa
jo
scas
xor
jae
or
mov
jbe
sbb
scas
shlb
cs
stc
xchg
cmp
push
mov
imul
mov
loop
mov
push
lds
jae
jae
mov
cwtl
lock
jo
loop
mov
inc
shrb
inc
jne
shr
push
int
in
pop
fnsave
out
xchg
mov
pop
xchg
stc
leave
mov
push
icebp
out
out
and
inc
lock
mov
out
out
mov
mov
int3
aaa
sub
addb
iret
adc
jns
cmp
fadds
out
repnz
jbe
push
mov
rolb
dec
pop
jmp
sbb
cmp
aaa
aaa
aaa
mov
movb
in
push
int
ret
out
sub
push
adc
adc
mov
sub
adc
outsb
push
push
in
into
jns
pop
arpl
jno
clc
ror
loopne
in
sti
fnstcw
in
daa
sahf
inc
aad
imul
int
loop
std
ret
movsb
nop
stos
fldcw
iret
inc
xchg
pcmpgtw
jo
outsb
pop
or
lods
insb
bound
hlt
mov
fcmovne
js
or
clc
cs
int
ret
in
mov
fwait
fwait
fwait
sbb
das
or
rclb
in
fwait
fwait
fwait
fwait
enter
pop
cs
adc
lahf
fwait
jecxz
mov
ret
pusha
pop
add
idiv
insb
outsb
roll
lds
test
out
sbb
lahf
inc
mov
jbe
add
ret
and
pop
movsl
hlt
pop
push
int
jl
std
mov
les
inc
jae
jae
fadds
in
lods
lds
test
jae
push
testl
mov
arpl
mov
shrb
mov
pop
push
cmp
int3
and
xor
out
loope
cmp
cmpsl
sbb
iret
out
mov
add
rcrl
into
push
pop
mov
loopne
fidivl
aaa
aaa
lds
inc
mov
test
aaa
aaa
nop
scas
call
clc
jl
clc
push
xchg
enter
pop
je
inc
mov
neg
add
in
xchg
rorb
xchg
mov
les
jecxz
dec
es
loop
or
pop
adc
outsb
lahf
fwait
fwait
ja
cmpb
mov
dec
mov
rcr
mov
sbb
add
fistpl
mov
cmp
aas
fwait
fwait
fwait
mov
mov
das
fcomps
or
int
add
idivb
lahf
xchg
fisttpl
cmp
pop
leave
in
insl
dec
fidivs
adc
mov
jae
and
mov
inc
dec
jecxz
cmpsb
mov
loopne
or
mov
cltd
es
fildl
dec
lods
inc
in
xlat
push
mov
fwait
fwait
mov
out
int3
inc
or
adc
outsb
outsb
int
inc
sub
andl
fucomi
cmp
mov
leave
cltd
nop
loop
repz
fwait
fwait
fwait
mov
adc
repz
jecxz
push
mov
pop
movsb
aaa
jne
fsubl
lcall
xchg
mov
mov
xor
push
xor
mov
dec
test
stos
hlt
fidivrl
aaa
mov
mov
mov
sarb
jnp
fdivrs
addr16
roll
or
cld
stos
mov
cmp
mov
incb
rcl
pop
push
mov
outsb
aas
out
jge
adc
xor
lret
or
out
and
or
xchg
cmp
or
out
or
push
clc
mov
shl
in
inc
fidivrs
dec
test
mov
mov
rcl
lock
fwait
std
cmp
cmpsl
push
test
jbe
and
je
push
lahf
loope
pop
clc
fnstcw
bound
push
mov
mov
jb
dec
push
fwait
fwait
fwait
sub
scas
cmpsb
push
sbb
test
mov
pop
mov
jecxz
add
mov
lods
test
jecxz
scas
push
adc
jno
push
out
shrd
ficoms
mov
sahf
fs
aas
push
js
mov
cmp
sbb
sbb
loop
or
sarb
sub
rcl
repz
push
imul
pop
dec
sbb
ret
rol
std
loop
ficoml
popl
sbb
xchg
mov
test
rolb
out
xchg
addl
or
jecxz
insl
jb
fnsave
xor
cmp
hlt
loop
int
int
aad
fcomps
sahf
pop
push
fistpl
lahf
dec
and
xorl
jle
inc
pushf
sbb
jmp
mov
xor
inc
pushf
mov
outsb
js
inc
out
out
dec
clc
bound
lret
xchg
lret
jl
iret
out
inc
ja
add
stc
sbb
rcll
mov
and
rolb
mov
sub
xchg
or
cmp
pushl
pop
loop
outsb
outsb
jmp
jns
rcrb
mov
clc
frstor
push
aam
inc
and
push
add
and
or
or
inc
divb
xchg
and
add
push
jp
pop
movsl
dec
aad
shlb
lcall
lahf
int
adc
mov
push
test
mov
mov
test
int
xor
pusha
aam
mov
adcl
sahf
sub
mov
push
pop
adc
xchg
cli
lods
xchg
pushf
int
int
dec
lret
mov
sub
inc
popf
int
int
pusha
jg
rcll
cld
mov
xor
daa
mov
inc
lea
jae
sub
push
mov
js
sbbb
fwait
clc
fld
add
add
jae
fnstcw
mov
out
sbb
sbb
in
ds
gs
jae
in
imul
mov
flds
push
loope
fildl
jmp
insl
movsb
leave
std
xchg
push
or
hlt
outsb
outsb
outsb
outsb
jbe
loopne
and
fisttpl
mov
std
insb
dec
sub
in
pop
inc
pop
pop
icebp
push
cli
jecxz
mov
or
insb
outsb
aas
out
push
outsl
mov
xor
push
stos
xlat
cmp
jle
aaa
aaa
dec
pop
jmp
mov
add
out
std
es
dec
jl
cmp
sbb
pop
fstpt
and
mov
mov
and
test
out
sbb
stc
cli
pop
lods
fwait
jne
out
out
out
mov
sub
test
push
out
cmpsl
je
es
cs
push
push
jl
pop
inc
out
sub
loope
cmp
sub
push
lahf
in
and
push
push
cmp
in
out
xlat
jnp
lock
inc
dec
pop
cmp
fisttpl
in
popa
or
xchg
lahf
cmp
lods
push
dec
das
inc
pop
call
arpl
mov
clc
mov
cmp
cmpsl
adc
xchg
addr16
loop
mov
jmp
jmp
jecxz
fcomi
in
rcrb
or
mov
adc
xchg
scas
inc
iret
int
lahf
subl
jne
or
pop
mov
or
or
sbb
jle
push
nop
sbb
shl
jb
cli
adc
icebp
adc
outsb
outsb
and
dec
pushf
adc
sti
clc
dec
cmp
icebp
and
aas
fucomi
mov
mov
iret
int
int
and
jg
cmpsb
lock
pop
sub
ds
test
add
and
test
outsb
outsb
clc
out
and
out
mov
lahf
jno
loope
outsb
addb
cmc
fdivr
subl
int
jno
mov
ret
xchg
mov
mov
xchg
mov
mov
arpl
fincstp
jb
or
idiv
mov
punpckhbw
inc
fsubs
sub
daa
add
outsb
popf
and
xor
rorl
stc
insb
outsb
push
push
fdivs
iret
pop
fwait
dec
sub
mov
inc
out
movsb
clc
cli
outsb
out
mov
xor
scas
mov
push
mov
bound
sub
xor
jecxz
cmc
dec
adc
jl
cld
mov
mov
loope
test
jno
mov
xchg
in
addr16
pusha
repnz
ja
clc
adc
stos
sbb
jle
lahf
int
out
or
push
icebp
adcb
fmull
inc
sti
mov
fldz
add
fcom
mov
push
test
push
testb
lea
fcmovne
mov
or
lods
jne
and
jb
rcl
mov
fisubs
rorb
testb
mov
cmp
xor
sbb
inc
mov
jp
leave
fbld
loop
int3
dec
pop
adc
mov
ds
dec
xor
push
adc
aad
adc
push
data16
lcall
xchg
addr16
jae
sti
flds
jns
aam
xchg
cmc
xchg
push
jae
jae
call
jbe
push
std
mov
jae
jae
scas
xchg
fadds
add
jmp
mov
test
pop
repnz
jbe
jno
out
out
stos
pop
adc
je
pop
pop
mov
add
lods
iret
out
or
mov
es
jae
jae
ja
xor
out
jp
fisubrl
sub
lahf
xchg
xor
inc
xchg
push
jbe
test
sahf
fwait
testb
mov
arpl
jle
popa
cmp
mov
in
das
push
out
imul
push
dec
push
xor
xchg
int
int
aaa
and
sbb
test
or
mov
int
int
sub
pop
jne
movsb
xchg
cmp
mov
int
lcall
notb
inc
bound
mov
xchg
xchg
mov
adc
fs
rcrl
lahf
in
sbb
rolb
mov
pushf
pop
fisttps
xchg
aad
and
xor
jg
scas
clc
fnstcw
pop
push
or
aaa
sti
xor
outsb
outsb
mov
dec
stos
or
cmpsb
les
lock
ds
cmp
pop
sbb
insl
xor
cltd
dec
addr16
jbe
scas
scas
ljmp
mov
int
es
es
je
jle
mov
ja
int
int
mov
test
pop
stos
inc
xchg
hlt
lea
cmp
movsb
in
mov
mov
imul
rorl
xor
fcompl
and
xor
cmp
cli
icebp
dec
sbb
shr
loope
fcompl
jecxz
inc
push
mov
leave
std
sahf
fwait
fwait
dec
xor
jbe
push
sub
add
mov
mov
fs
mov
rolb
enter
adc
push
pop
mov
and
ljmp
dec
in
xor
dec
adc
fsub
and
inc
add
es
fwait
fwait
fwait
and
or
jnp
lock
movsl
fwait
fwait
fidivrs
jle
sub
pop
loop
shrb
or
dec
outsb
outsl
or
pop
lea
gs
mov
arpl
loope
icebp
add
mov
repnz
aas
fwait
fwait
dec
jmp
inc
aam
enter
icebp
daa
clc
int3
sub
addr16
fistpl
cmp
fdivr
fdivrl
lcall
insl
inc
sbb
out
cli
pop
sbb
das
inc
inc
add
jo
inc
outsb
outsb
outsb
outsb
mov
bound
xchg
mov
rep
outsb
outsb
outsb
fildll
or
arpl
cmpb
outsb
xchg
jle
fbstp
insl
pusha
imul
insb
cmpl
jbe
iret
out
pop
iret
popa
into
lret
mov
mov
lods
popl
in
lcall
hlt
sub
mov
cmp
insb
je
test
cld
fldl2e
sahf
int
pop
fimull
sub
dec
repnz
repnz
push
jbe
aaa
ss
mov
cli
daa
push
mov
fwait
fcmovnb
sbb
insl
push
insl
js
sub
sti
sahf
pop
aad
fwait
fwait
fwait
outsl
inc
cmc
addl
fwait
fwait
fwait
cmp
mov
pop
std
ds
fwait
push
popa
movsb
int
sbb
test
sbb
mov
lods
jg
rclb
mov
and
mov
inc
out
movsl
rclb
mov
out
jbe
inc
loope
pusha
mov
loop
cmp
dec
xchg
push
xchg
mov
mov
das
sti
cmp
iret
jp
inc
mov
mov
fstps
jo
shrl
push
mov
out
out
lods
xchg
jnp
imul
out
and
add
mov
mov
pop
xchg
fistl
test
xchg
cmpb
mov
push
xchg
js
cli
mov
fistpll
lods
add
scas
invd
or
adc
stc
add
sub
clc
out
stos
lahf
pop
loopne
jle
divb
xor
outsb
outsb
pop
adc
and
push
pop
or
cmpsb
outsb
outsb
outsb
outsb
dec
out
jg
test
xchg
mov
or
daa
lock
fs
xchg
inc
push
lret
or
out
push
xchg
or
pop
mov
inc
add
fcomi
sub
fldt
test
insb
outsb
outsb
outsb
stc
insb
call
fldl
mov
and
inc
dec
shl
mov
add
and
in
arpl
jmp
push
and
mov
mov
jecxz
cmp
shll
outsb
outsb
mov
fldcw
pop
int3
fistpll
pop
lock
jp
xchg
shlb
loop
ljmp
icebp
clc
mov
push
repz
fs
lahf
xor
ja
std
aam
sbb
dec
add
sti
outsb
and
mov
xchg
ficomps
jae
jae
out
xchg
add
add
outsb
xor
mov
inc
sbb
jg
mov
push
int
mov
mov
into
out
clc
jmp
lods
iret
int
and
adc
jns
jmp
add
fwait
mov
mov
lcall
fwait
pop
jle
mov
xchg
cmc
and
out
insb
outsb
outsb
mov
xchg
sahf
int
ss
shll
or
dec
out
mov
call
test
hlt
rcrb
pop
clc
mov
mov
cmpsl
movsl
cmp
ljmp
lahf
in
jae
in
cmp
mov
mov
iret
out
mov
sub
test
cwtl
outsb
outsb
outsb
das
push
sbb
outsb
clc
sub
sub
outsb
outsb
outsb
or
stc
adc
or
sub
adc
and
mov
out
testb
lods
xlat
test
mov
addr16
sbb
xor
stc
xchg
cmp
clc
rclb
test
mov
insb
outsb
outsb
outsb
jb
push
mov
mov
iret
mov
fistl
lock
jb
lahf
ds
and
outsl
aam
iret
push
lahf
pop
stos
inc
xchg
mov
push
loope
icebp
call
xchg
lcall
mov
mov
fwait
fwait
fwait
fwait
sub
rcl
pop
sub
sub
aas
fwait
fs
or
xchg
rorb
mov
jne
sbb
xor
pop
insl
stos
jp
cmp
xorl
aam
mov
mov
mov
mov
shl
stos
les
mov
fcompl
inc
lods
cmp
push
ss
fildl
cmpsl
jge
icebp
fabs
inc
xor
gs
insb
add
adc
repnz
pushf
push
add
add
cmpps
leave
lods
xchg
sub
pusha
dec
jae
jae
mov
mov
jnp
jae
jae
sbb
fwait
mov
fbld
jae
mov
jnp
sti
xchg
jbe
clc
fisttpl
pop
outsb
or
loop
mov
fwait
fwait
fwait
mov
jle
mov
daa
cmp
cltd
sub
cmc
scas
push
jle
cltd
push
fwait
stos
adc
mov
add
jb
je
rcrb
fwait
adc
push
aaa
aaa
mov
in
fbld
mov
cmp
sbb
sbb
hlt
push
test
mov
int
inc
cmp
jl
fstps
aad
fwait
or
fisubrs
cli
pop
lret
notl
lcall
xor
int
int
inc
notb
pop
fisubl
mov
inc
or
or
popa
xchg
lods
scas
push
pop
cs
test
in
mov
outsb
subb
xchg
loopne
or
incb
push
fnstcw
loop
sahf
outsl
add
add
and
fcmovne
addr16
pop
pop
pop
inc
or
lcall
xchg
cmpl
cmp
fmull
ret
insl
testl
in
jae
sti
sbb
sahf
ret
cmpsb
movl
jae
leave
pop
inc
xor
xchg
pop
movsb
les
mov
mov
mov
stc
out
jb
outsb
fistps
fidivl
mov
pop
mov
sbb
leave
inc
add
cmpsl
mov
imul
xchg
mov
jo
arpl
rcrl
imul
dec
cmpsl
mov
mov
inc
push
or
mov
fistps
push
je
sbb
outsl
lahf
fwait
fwait
fwait
fwait
dec
and
sbb
repnz
outsb
aas
fwait
jg
cmpsb
and
adc
divb
fwait
clc
mov
gs
pop
idivb
and
out
sub
mov
clc
xchg
out
out
cmp
cmp
xchg
stos
xor
out
out
mov
popa
aad
xor
sbb
out
lock
mov
stos
fstpt
fwait
fwait
fwait
jne
push
xchg
shlb
nop
les
outsb
lahf
sbb
out
aam
pop
scas
xchg
xor
jl
jge
outsb
fcomps
dec
cmp
cltd
ss
push
dec
add
or
mov
mov
fwait
sub
sub
mov
mov
pop
jecxz
shrl
fcomip
std
sub
out
iret
test
sub
cmp
rcl
out
out
scas
in
in
subps
cmpsb
mov
out
out
pop
lods
mov
mov
out
cmp
or
out
outsb
xlat
iret
cli
lret
jge
sub
pusha
xor
mulb
mov
cld
jp
mov
cwtl
mov
or
xorb
sbb
mov
mov
mov
mov
pop
bound
dec
mov
fnstsw
pop
adc
cmp
push
cld
inc
jecxz
adc
mov
push
xlat
adc
lahf
int
daa
out
scas
add
jmp
fcomi
test
movsb
es
leave
jp
in
cmp
std
jp
jbe
call
rorb
das
out
cmp
insl
outsb
inc
repz
cmpsl
andl
mov
cmp
fistl
push
push
add
sahf
aas
int
int
pop
push
stc
aas
jge
adc
or
jne
pusha
mov
cld
addl
or
jae
push
dec
mov
xor
fbstp
mov
cli
je
mov
mov
dec
sub
cltd
inc
nop
fdivrl
movsb
pop
sbb
xor
mov
xor
les
jae
or
notl
pop
xchg
ret
pop
frstor
addr16
mov
rorl
fdivrl
mov
or
fs
enter
lahf
dec
in
inc
outsb
outsb
scas
clc
pop
mov
mov
in
inc
xchg
sub
stc
stos
push
push
int
loopne
jns
out
pop
inc
mov
xor
outsb
outsb
mov
adc
cld
cmp
fistps
and
fdivs
outsb
outsb
add
or
sub
movsb
sbb
fs
xor
mov
jbe
std
insb
in
clc
ljmp
out
out
xchg
ret
jo
xchg
jmp
gs
out
out
pop
int
cmp
pop
addl
int3
mov
test
popf
or
xchg
sbb
aad
and
lock
call
outsl
mov
mov
mov
push
mov
lock
sahf
mov
mov
mov
out
cli
jnp
sahf
lock
das
rcll
int
in
addr16
xor
inc
andb
out
mov
int
int
xor
hlt
popf
dec
and
int
int
jecxz
mov
jge
in
cmp
xchg
mov
into
rcr
iret
out
jae
push
jno
nop
aaa
aaa
mov
cmp
pop
fists
out
inc
xlat
pusha
xchg
pushf
stos
jle
or
into
rcrl
adc
test
in
inc
dec
mov
sbb
in
mov
or
mov
aam
int
adc
test
mov
mov
ret
cs
enter
fwait
fsubrs
dec
xor
cmp
fwait
xchg
lock
bound
dec
pop
cmp
cld
jbe
xchg
dec
or
inc
out
sarl
dec
sbb
out
loope
test
push
enter
mov
adc
lcall
call
aam
jle
loop
popa
stos
xor
push
cmp
jae
sti
dec
in
mov
test
iret
in
les
insl
pop
mulb
jle
push
push
sbb
test
jle
aaa
xor
sbb
lcall
mov
xor
pop
fdivr
rcr
cmp
or
rcrl
movsb
add
xchg
outsb
push
std
insb
outsb
outsb
dec
sub
jb
sub
f2xm1
gs
andb
data16
inc
pusha
outsb
mov
add
cld
pop
push
aaa
mov
fiadds
dec
jecxz
fdivrl
popa
jp
jge
orb
or
std
cs
mov
mov
ret
leave
loop
aas
aad
scas
mov
push
or
inc
xchg
mov
nop
add
sbb
sahf
push
xchg
shlb
outsb
je
mov
mov
adc
cwtl
xchg
jecxz
ret
mov
mov
mov
push
test
fcompl
shlb
js
cmp
movsl
icebp
fdiv
push
imul
add
loope
sub
mov
les
rorl
outsb
in
or
mull
mov
push
js
fdivs
shlb
aam
mov
testl
cmp
aaa
aaa
inc
or
aam
sub
aaa
xchg
fwait
insl
pushf
jae
or
fcompl
push
mov
popa
bound
movsb
jge
fsubl
and
add
ja
xchg
xlat
adc
int
test
cmp
cmp
aaa
mov
int
xchg
xchg
aaa
sbb
and
sbb
push
pop
pop
pop
in
jae
addr16
jl
out
andl
pop
or
xchg
or
fisttpll
icebp
add
push
pop
testb
aad
into
clc
fnstsw
pop
mov
clc
loope
mov
adc
pop
loope
out
das
ret
in
out
mov
mov
sbb
jnp
adc
lock
dec
sbb
cmp
mov
push
pop
add
fmul
mov
cmp
in
pusha
loopne
test
int
mov
or
into
int
int
movsl
shll
cli
rcrl
fsts
mov
in
movsl
fimuls
mov
fisubl
iret
cmpsb
iret
xor
adc
and
cmp
fcmove
int
lahf
ds
imul
cmp
push
pop
and
mov
aas
addb
add
out
testb
addb
cmp
movsl
pop
stos
sub
iret
lcall
push
push
xchg
shlb
in
mov
fsubl
sbb
push
or
fdivrl
aaa
inc
aam
sub
xchg
aaa
mov
ret
fidivs
jl
jge
int
jae
outsl
mov
test
rcll
mov
pusha
popf
fsubs
pop
pop
sbb
shrl
loop
or
out
adcb
xchg
push
out
stos
gs
jle
iret
iret
or
int
mov
push
mov
push
aas
or
and
jb
mov
addr16
fldt
into
xchg
cmp
aaa
aaa
aad
jl
aad
sub
mov
fwait
stos
jle
popa
es
push
ds
mov
pop
mov
pop
mov
ja
push
mov
divl
sbb
data16
out
push
insb
outsb
outsb
cs
jb
pop
add
cmc
mov
dec
out
insb
outsb
outsb
lods
pop
dec
xor
pushf
inc
xchg
pop
ret
xor
icebp
sub
fucomi
add
or
mov
and
mov
push
pusha
aas
je
inc
leave
xorl
repnz
pop
hlt
data16
and
or
push
cs
and
push
test
mov
lret
clc
fnstenv
fistpl
in
mov
scas
dec
outsb
push
pop
pop
sub
in
shlb
fistpl
fimull
mov
sub
mov
in
fwait
fwait
fwait
fwait
jg
mov
jle
pop
cmp
bound
xchg
pop
pop
out
sub
int
int
nop
loopne
repz
sub
cli
ja,pt
int
int
and
adc
ja
iret
int
ret
push
jae
or
out
xor
andl
sarb
xlat
and
fdivl
jecxz
icebp
push
add
mov
sub
add
pop
mov
and
pop
rorb
lahf
std
fwait
sub
rorb
lret
mov
pop
sub
pop
cmpb
pop
jge
jns
add
cltd
push
rorl
aas
fiadds
jno
xchg
jl
add
out
mov
inc
and
gs
or
xchg
movsb
fsubr
scas
test
or
fwait
dec
push
fsubrl
push
push
cs
adc
adcb
fdivrl
xchg
in
sbb
rorl
inc
mov
mov
push
loop
imulb
loop
fdivr
jb
push
mov
cmc
popa
and
loopne
lahf
ror
jae
pop
inc
xchg
inc
xchg
ret
sbb
jg
addr16
and
repnz
int3
mov
jg
cmp
dec
sbb
sub
inc
add
or
push
in
ss
lods
iret
and
int
mov
outsb
clc
fnstcw
ss
in
jne
jecxz
stos
mov
xor
outsb
cmp
add
js
ss
sarl
andb
dec
pop
sbb
cli
insb
xchg
adc
rolb
adc
loopne
jbe
mov
mov
in
mov
mov
in
xor
mov
ds
aaa
aaa
int
loopne
cmpsl
push
dec
sbb
mov
lock
cmc
popf
add
jge
mov
ds
dec
in
test
ja
push
mov
xor
pop
es
dec
push
mov
aas
mov
loopne
jb
lret
pop
lret
insb
mov
loop
jns
subb
test
int
in
and
sub
addr16
gs
sarb
je
call
aam
sbb
mov
pusha
jge
out
adc
mov
sbb
push
lret
jle
test
dec
add
fwait
fwait
in
outsb
and
or
popf
adc
mov
inc
pop
rorb
mov
lcall
lds
addb
xchg
iret
mov
addr16
cmp
xchg
jae
sti
movsb
bound
in
das
hlt
xorl
fistps
mov
clc
xor
ds
aaa
std
xor
pop
jno
cs
sarb
outsb
dec
or
push
test
dec
cmpb
outsb
outsb
outsb
aaa
mov
pop
fisubs
outsb
outsb
outsb
inc
or
jo
mov
icebp
mov
insb
fsts
rorb
aaa
scas
ja
or
add
shlb
adc
add
or
mov
enter
inc
jne
fcompl
push
sbb
cmpsb
fbld
jecxz
cli
inc
xchg
mov
pop
jnp
std
loope
push
in
addr16
fcmovne
shlb
or
push
aas
movsb
dec
mov
adc
xlat
outsb
pop
mov
insb
shlb
dec
hlt
outsb
outsb
outsb
outsb
sub
dec
scas
imul
mov
shlb
and
xchg
ret
aaa
ret
mov
test
lret
jae
jae
mov
lcall
int
jae
jae
jno
cmpsb
inc
out
aaa
outsb
mov
addr16
sbb
jp
lahf
sub
fdivrl
fs
cmpb
xchg
fwait
fwait
fwait
mov
adc
repz
loop
callw
fwait
fwait
lods
sub
or
pop
test
fwait
mov
stc
notb
scas
sbb
lods
iret
divb
lods
mov
sti
xchg
sub
fdivrl
mov
mov
xor
dec
test
mov
pop
clc
jne
cmpsb
popf
mov
ret
cld
aas
jne
outsb
inc
adcb
dec
adc
jle
cld
jge
shlb
js
xchg
enter
outsb
clc
fld
adcl
in
xchg
fwait
jne
push
outsb
mov
aaa
jnp
int
insb
loopne
sahf
out
outsb
outsb
outsb
shll
jne
or
inc
sbb
outsb
rcl
cmp
daa
pop
fmuls
sub
ljmp
aam
stos
cmp
dec
rorb
addr16
cmp
idivl
pop
jl
out
dec
xor
es
mov
xor
icebp
hlt
xchg
sbb
fcmovne
out
pop
pushf
mov
adc
sub
sbb
push
xor
or
out
or
int3
jne,pn
mov
incb
shll
push
ret
jne
ljmp
pslld
movsl
ds
sti
mov
out
aas
push
fmul
loop
push
xor
rcl
out
add
pushf
xor
mov
sub
xchg
and
jge
jne
push
testb
jecxz
sti
es
clc
sbb
test
out
cmp
add
aam
pop
dec
jb
mov
add
sbb
jne
hlt
insl
pop
out
fadds
push
or
cmp
push
mov
roll
nop
out
out
inc
xchg
fisubl
nop
das
cmpsb
add
ret
out
mov
push
jae
outsb
mov
es
nop
outsb
inc
ljmp
and
lock
adc
leave
adc
jmp
stc
cmc
xor
push
ss
clc
loop
cmp
sbb
out
jge
fs
test
cwtl
or
xor
out
sub
out
mov
sbb
push
push
into
adc
mov
addr16
xor
jle
pop
mov
cltd
sbb
add
fdivrl
js
es
fmull
or
sti
pop
mov
mov
cmp
sbb
fbstp
insb
jg
xor
pop
add
mov
dec
sbb
push
outsb
add
cmp
les
pop
daa
loop
mov
outsb
xchg
lods
movb
cld
xchg
loop
ds
xchg
xchg
fs
arpl
test
scas
push
jge
pmaxub
pop
and
popf
or
cmp
push
or
ss
push
mov
shr
ljmp
mov
lahf
in
inc
lods
mov
push
std
subb
std
push
mov
lret
pusha
push
loope
jecxz
mov
xchg
lods
hlt
xor
bound
pop
js
es
jne
or
iret
out
lret
aas
insb
mov
das
fmull
mov
jno
cld
pop
pop
cmp
sub
dec
mov
test
clc
sub
xor
or
mov
sub
stc
pusha
cmp
xor
dec
and
lahf
ss
ljmp
lds
jle
imul
sahf
pop
mov
lods
cli
je
fwait
lock
popa
mov
inc
sbb
int
int
mov
fisubl
lahf
ret
push
pop
call
int
cld
xor
xorl
xor
mov
out
pop
je
mov
imul
cs
and
mov
sub
out
and
cmpsl
pop
les
inc
sbb
movsb
jge
dec
xlat
or
mov
cmp
into
int
lret
loope
mov
lock
pusha
xchg
push
int
jae
aaa
js
into
scas
push
sbb
lret
mov
inc
idiv
mov
mov
sbb
stc
mov
jle
lods
std
ret
in
mov
lods
xor
xchg
in
jae
fnstcw
loopne
and
shll
outsb
dec
addr16
push
xchg
mov
test
js
outsb
and
dec
xlat
fistpll
out
mov
jb
and
jne
outsb
outsb
sbb
outsl
sbb
out
xchg
andb
jbe
subb
mov
out
push
jo
sahf
pushf
ja
aam
negb
cmp
mov
aam
and
fwait
jl
pop
sbb
arpl
lret
arpl
xlat
inc
mov
xchg
out
dec
mov
push
icebp
mov
mov
fmuls
out
nop
jae
aad
scas
push
adc
push
scas
rcrb
movsl
xchg
push
outsl
stos
jp
notb
or
repz
sub
addr16
out
shlb
in
cmp
jecxz
stos
jle
pop
les
mov
xor
out
icebp
fmull
jge
mov
int
aad
sbb
jmp
xor
insb
cs
sbb
cli
aam
in
adc
mov
jo
ljmp
scas
popf
pop
sub
fdivrl
mov
aas
pop
lret
les
into
orl
add
popl
lea
and
sbb
adc
jne
shrl
int
aas
cmp
mov
push
cmp
int
int
inc
loopne
lods
or
sbb
inc
int
int
nop
imulb
sub
int
int
lock
out
sub
sub
out
pop
mov
dec
mov
repnz
pop
icebp
lods
out
out
leave
dec
fs
call
sbb
out
inc
cmp
add
out
lret
jo
adc
mov
int3
sbb
int
add
fcoms
ljmp
adc
mov
outsb
jl
or
lods
lahf
sahf
jb
daa
mov
jge
fs
push
jno
fcomps
and
and
jl
fidivs
jnp
jp
mov
aaa
cmc
dec
out
inc
cmp
js
loopew
mov
adc
or
out
xchg
push
mov
dec
mov
clc
pop
sbb
data16
cmc
mov
out
jl
mov
out
pop
push
orb
iret
out
mov
sub
pop
xor
inc
outsb
outsb
outsb
clc
push
aaa
cmpsb
mov
imul
outsb
xor
mov
lret
hlt
mov
pop
cwtl
movsb
test
fidivrl
outsb
add
xchg
out
loopne
jle
and
sub
cmp
sub
mov
ret
daa
ds
mov
insb
sbb
jmp
inc
cld
pushf
adc
ss
mov
aaa
mov
test
movsl
clc
outsb
outsb
scas
cli
mov
jle
jle
test
dec
js
sahf
pop
rcrb
jmp
sbb
dec
or
int
lahf
and
add
fs
lods
dec
int
int
int
mov
mov
and
insl
jno
int
or
or
inc
dec
add
loopne
fists
sub
ja
push
mov
in
jl
inc
out
mov
dec
mov
pop
roll
mov
mov
out
push
das
repnz
lcall
xorb
fiadds
mulb
pop
mov
mov
mov
mov
out
jnp
dec
repz
clc
in
mov
inc
mov
fwait
cmpsl
mov
popa
xor
mov
ja
sbb
insb
rcll
sub
mov
std
mov
dec
dec
aaa
aaa
push
cld
push
hlt
push
mov
aad
pusha
push
jae
jns
cmp
xchg
fwait
fwait
sbb
sbb
mov
es
stos
pop
or
mov
mov
jb
cs
lea
into
and
mov
cli
insb
xor
adc
mov
xchg
clc
lds
aaa
aaa
aaa
aaa
or
and
pop
add
sahf
or
mov
and
mov
jb
push
dec
ficomps
ds
aaa
aaa
pop
push
cltd
popa
les
in
and
lret
or
incl
sub
xchg
mov
and
push
daa
add
jecxz
adc
cmp
sbb
mov
aaa
aaa
aaa
fistpl
pop
mov
xor
fs
fwait
fwait
stos
loop
mov
lret
lods
push
stos
movsb
cmp
lods
lods
adc
pop
mov
mov
jbe
push
inc
dec
mov
and
jecxz
or
out
mov
cmp
bound
sbb
out
cmpsl
lcall
pop
sarb
out
out
mov
mov
inc
mov
jae
shll
dec
xchg
cmpl
daa
sbb
std
pop
in
hlt
lret
test
push
ja
rcrb
sahf
insb
out
out
imul
mov
sbb
mov
mov
and
sbb
pushf
mov
ja
cmpsb
push
cmp
mov
clc
dec
insb
cmp
mov
mov
leave
mov
fnsave
cmp
mov
call
into
mov
push
xor
mov
mov
or
pop
lea
fwait
fwait
sub
rcr
out
mov
negb
loop
jno
mov
notl
sub
fwait
jns
add
in
sbb
aaa
aaa
aaa
inc
adc
fisttpll
mov
xor
out
lods
cmp
push
orl
pop
outsb
outsb
outsb
outsb
lret
movsb
rorb
ret
pop
pop
adcl
mov
out
or
outsb
lahf
fwait
fwait
andl
jo
sahf
or
outsb
lret
xor
mov
out
lretw
jge
adc
lret
fnstcw
int
int
mov
dec
loope
sbb
pop
rcrl
xchg
and
cltd
in
push
lds
sbb
cli
test
push
xchg
icebp
inc
mov
adc
mov
fwait
fwait
fwait
fwait
lahf
pop
inc
mov
ret
aad
fwait
fwait
fwait
fwait
cmp
dec
push
or
fwait
fwait
stc
and
mov
fs
add
aas
loopne
das
or
cmp
fdiv
jnp
xlat
or
test
xchg
out
pop
jl
inc
jmp
call
fsts
push
insb
add
mov
jecxz
xor
nop
scas
xor
aad
popa
insl
lods
arpl
out
pop
repz
push
std
test
cmp
push
jge
cmp
jge
out
mov
mov
pop
or
push
out
out
adc
bsr
xlat
shlb
cmpsb
roll
inc
ljmp
aaa
mov
notb
mov
fisttpl
stos
dec
addr16
ds
adc
push
mov
xchg
mov
jle
mov
mov
std
test
rcrb
sahf
sti
nop
andb
aaa
mov
mov
call
adc
loopne
stos
rcr
ds
xchg
xor
push
test
out
clc
mov
fldcw
int3
ficoms
jecxz
jl
mul
mov
movl
xchg
jl
int
and
clc
pop
loopne
sarb
sub
cmp
push
push
adc
into
xor
adc
mov
inc
cld
cmp
pop
xchg
sub
pop
icebp
add
and
jno
addr16
imul
cli
cmpl
loopne
and
adc
in
push
icebp
outsb
outsb
outsb
outsb
outsl
inc
inc
xchg
inc
jl
dec
adc
ss
inc
cld
push
lahf
mov
lcall
pushf
dec
cmp
ds
add
or
xor
cmp
js
int
int
cmp
jmp
and
aam
jbe
out
outsl
mov
mov
imul
rolb
out
icebp
iret
out
mov
jp
in
xchg
sbb
inc
popf
fistpl
mov
xchg
mov
ret
aad
mov
hlt
sub
pop
sbb
movsb
fcmove
sbb
out
push
clc
ds
add
inc
pop
or
xor
outsb
lahf
fwait
fwait
or
add
adc
pop
xchg
lock
jae
sti
insb
loopne
aad
rorb
mov
jae
loope
cmc
sbb
adc
in
in
jb
fstpt
int
int
mov
adc
dec
iret
int
int
pop
or
xchg
fisubrl
iret
mov
pop
cmp
addb
jle
jge
mov
fists
stos
out
mov
fwait
fwait
fwait
cmc
mov
ss
sahf
jmp
jno
and
out
xchg
stos
mov
or
mov
mov
mov
lock
cmp
aaa
mov
ret
cmp
sub
sbb
jb,pt
aaa
aaa
aaa
mov
jl
inc
shrb
sti
fcompl
fildll
mov
hlt
test
mov
shrl
push
scas
cltd
jbe
add
loopne
and
imul
jae
movsl
lcall
adc
jae
div
sub
xchg
mov
shlb
idivl
cli
nop
fistpl
jae
aaa
aaa
aaa
aaa
pusha
cmp
push
test
mov
aaa
aaa
aaa
add
cmp
aaa
iret
jge
loope
cmc
sbb
jge
aaa
jo
mov
jns
out
cwtl
jbe
call
xchg
push
xor
pop
scas
out
inc
cli
es
mov
xor
pop
in
xchg
out
out
out
push
pop
jne
or
dec
inc
add
mov
movsb
test
mov
cmpsb
es
pop
inc
fcomi
shlb
push
js
fistpl
rclb
sub
ds
sbb
insl
enter
push
inc
jae
rcrl
and
aaa
jl
or
addr16
inc
or
out
js
int
lods
out
inc
add
sub
pop
inc
int
int
sbb
jns
xchg
xor
mov
iret
ror
int
int
jg
iret
lret
mov
leave
sbb
je
out
aaa
movsb
into
mov
je
clc
mov
neg
push
push
xor
movsb
jl
stos
test
int
mov
ds
mov
int
and
jmp
xor
bound
jle
jae
and
mov
and
lea
mov
imul
jle
ret
sti
push
adc
adc
or
cmpsb
sahf
sbb
xchg
popf
leave
lods
add
mov
icebp
dec
cld
xchg
call
push
jae
fdivrl
push
imul
andb
inc
or
xor
push
xchg
xchg
push
fdivrl
xchg
jbe
mov
mov
sbb
clc
fsubl
add
pop
sahf
test
insb
push
insb
ljmp
pop
clc
dec
mov
cli
cmp
cltd
pop
in
aas
std
insb
fisttps
sbb
hlt
in
mov
cmp
test
mov
pop
int
int
jecxz
cmp
xchg
icebp
and
jns
filds
xchg
aam
mov
cld
test
mov
cld
ss
aaa
pop
dec
negl
sbb
jb
push
and
jge
jnp
inc
cwtl
inc
imul
push
lret
sti
push
lcall
lock
mov
xor
sbb
push
dec
loop
mov
fwait
fwait
add
shr
mov
ss
fwait
fwait
out
fists
pop
mov
stos
mov
fwait
fwait
fwait
push
xor
mov
mov
add
lcall
ret
addr16
cmp
es
out
adc
push
int
neg
call
inc
or
leave
push
dec
stos
jle
int
jmp
cmp
inc
sbb
fiaddl
pop
std
push
add
int
int
mov
adcb
pop
and
int
xchg
mov
xchg
mov
mov
out
mov
insl
out
mov
outsl
inc
jl
bound
sahf
out
out
insb
outsb
lahf
adcb
lahf
adc
cmp
adc
outsb
outsb
pcmpeqb
insl
and
insb
call
mov
cmp
iret
jno
movsb
pop
lahf
les
ffreep
xchg
scas
iret
sbb
mov
sbb
into
cmpsl
test
iret
out
add
push
push
jbe
jae
jae
fmulp
mov
jecxz
in
test
addr16
fisubl
inc
pop
or
stos
js
out
out
cmpsb
pop
dec
inc
cmpsb
scas
enter
iret
das
movsb
out
daa
mov
rolb
hlt
lock
cld
insb
inc
gs
push
fcompl
ficompl
jno
outsl
pop
gs
sarl
adc
in
aas
fldt
cmp
movsb
mov
xor
fadds
popf
out
mov
adc
bound
adc
pushf
fwait
pushl
and
mov
and
call
xor
dec
cli
cmpb
cltd
lock
or
pop
ds
and
mov
add
mov
xchg
out
mov
mov
sub
test
out
out
dec
fcompl
pop
scas
pop
mov
fiadds
jmp
mov
mov
fs
sub
mov
decl
imul
stos
out
ret
and
icebp
ds
sbb
or
fwait
fildl
or
cmovo
mov
xor
test
mov
sbb
movsb
xchg
jp
fstps
aad
add
cwtl
or
pop
fucomi
mov
mov
push
mov
fldt
lock
repnz
dec
xchg
out
xchg
and
push
and
iret
out
mov
jl
lds
movsb
icebp
jge
ffreep
out
xor
test
imul
fstl
ret
mov
in
and
adc
pop
call
addr16
cmp
outsb
sub
sub
push
mov
mulb
jne
shlb
jae
jae
sub
ficompl
pop
sub
addr16
daa
andb
or
jle
outsb
psrld
into
mov
sub
inc
or
mov
or
lahf
ret
cmp
out
loop
mov
or
movsb
jae
shrl
fisttps
bnd
call
jle
pop
xchg
das
fcom
push
add
push
hlt
sbbb
push
ror
push
cld
jne
lock
call
loop
push
xor
jecxz
adc
cli
fcomp
aam
out
call
xor
pop
rcrl
std
sahf
and
mov
test
inc
subb
cmp
mov
mov
outsb
outsb
mov
xchg
scas
or
aaa
aaa
mov
mov
fwait
pop
jl
pop
mov
aaa
aaa
xchg
xchg
subb
test
xor
cmc
mov
ficomps
cmc
push
cmp
mov
lret
rol
and
mov
inc
sub
push
cmp
cli
psrad
jno
popf
mov
mov
pop
add
int3
sar
cmp
push
gs
lods
sbb
lds
pop
shr
cltd
fsub
jmp
pop
ret
out
cmp
data16
iret
insb
jo
mov
movsl
pushf
add
mov
adc
mov
cmp
fucomp
pop
dec
cmp
sbb
and
xchg
lock
stos
ss
mov
mov
add
inc
fs
inc
test
sbb
clc
mov
jp
sahf
adc
push
aas
and
imul
pop
cmp
in
sahf
bound
jae
pop
cmpb
test
es
sub
jl
pop
xchg
lahf
inc
aas
mulb
xchg
test
cmp
mov
jecxz
push
push
movsb
ror
adc
xor
dec
sub
sbbb
fcoml
cmp
icebp
jle,pt
js
and
inc
fcompl
iret
xchg
pop
mov
push
pop
lock
fcompl
sub
cld
lock
test
jmp
or
xchg
jb
mov
push
ljmp
inc
in
aad
pop
pushf
fcoml
xchg
int
repnz
dec
adc
push
test
out
mulb
sbb
in
sbb
xor
out
out
push
pushf
mov
notb
mov
into
push
in
out
out
test
sub
aaa
pop
repz
push
mov
and
mov
jmp
aad
jno
xor
ja
fildl
pop
shrl
cmp
addr16
out
out
es
mov
sbb
xchg
loope
mov
rorl
ja
jecxz
jp
popa
sbb
ds
sarb
adc
or
outsb
outsb
cltd
cli
xchg
repnz
jp
lret
fcompl
fidivl
push
clc
fisubrs
divb
push
cli
fdivrl
cld
test
mov
jmp
jmp
nop
mov
dec
ljmp
mov
in
push
or
pop
add
add
clc
adc
and
jmp
pusha
mov
dec
cmpsb
add
push
clc
pop
cmp
outsb
outsb
outsb
mov
cmp
push
sbbl
aaa
aaa
pop
jge
rcrb
lods
xor
pop
aas
in
jo,pt
jle
and
shll
mov
out
or
cmpb
sbb
mov
inc
cmp
pop
negb
cld
mov
dec
rclb
xchg
add
std
jno
sahf
out
pusha
int
int
cmpb
dec
and
pusha
pop
cmpsl
int
clc
and
mov
and
das
mov
fwait
fwait
fwait
jmp
enter
mov
pusha
mov
push
add
ljmp
enter
sub
adcb
scas
lahf
in
neg
movb
out
or
out
pop
pop
ss
aaa
mov
or
fisubs
in
adc
fistl
or
mov
scas
loopne
js
fdivrl
push
ljmp
or
pop
outsb
adc
sbb
cwtl
xchg
das
test
in
lods
or
les
dec
inc
or
decb
dec
jns
xchg
jno
test
jp
les
cmp
out
addr16
cmc
jae
jmp
jae
clc
sbb
mov
stos
jmp
stos
inc
mov
jg
bound
sub
out
mov
loopne
jo
mov
aad
add
ret
out
out
inc
pop
jae
ljmp
addr16
jae
sbb
jle
in
push
movsl
mov
pop
test
into
idiv
lods
pop
or
inc
fs
xchg
sbb
cmp
mov
cli
push
in
xchg
ds
adc
inc
inc
aaa
xor
mov
loope
dec
pop
mov
push
outsl
sbb
xchg
out
xchg
mov
insl
insb
cltd
jbe
or
mov
insl
sbb
jb
popf
sbb
imul
mov
dec
bound
add
std
cli
cmp
scas
bound
dec
cmp
and
xor
loop
push
jae
addr16
cmpb
jae
jae
dec
dec
push
and
pop
insl
xor
and
mov
xlat
jle
push
call
cmpsb
push
xchg
lock
je
inc
rorb
int3
fs
ret
aad
sub
cmp
and
sub
in
arpl
mov
int
lods
in
dec
and
lahf
mov
stos
mov
jge
lea
mov
out
inc
call
mov
and
xor
ret
shlb
mov
pusha
ljmp
les
dec
les
adc
out
testb
outsb
rcrb
fwait
lcall
cmp
inc
pop
adc
add
negl
mov
pop
mov
fnstcw
adc
jmp
cmp
int
adc
xor
add
mov
adc
inc
clc
scas
iret
int
int
test
push
push
jb
mov
mov
aaa
aaa
mov
sbb
cmp
scas
inc
gs
mov
and
sbb
add
lahf
ret
cmp
rcr
xorl
sar
and
mov
je
push
mov
lods
fsubrl
int
or
push
fiadds
jecxz
cmpsb
test
fistpll
add
jl
jl
dec
or
ljmp
arpl
xchg
sub
jge
cmp
sbb
clc
repz
pinsrw
incb
cmc
fwait
fwait
fwait
fwait
das
inc
enter
adc
dec
in
int3
sahf
fwait
fwait
fwait
shrl
pop
repnz
cmc
sarl
addb
mov
fisubrl
int3
clc
xor
int
inc
or
jle
mov
loopne
inc
js
xorl
jae
iret
das
mov
cmpsb
push
psadbw
pop
out
pop
loopne
mov
insl
js
inc
vunpckhpd
jmp
dec
cli
lods
inc
and
ss
scas
aaa
aaa
mov
jno
jg
out
test
push
sbb
bound
cmp
iret
call
daa
jne
push
sbb
fdivr
sbb
dec
js
xchg
pusha
add
in
por
xor
mov
iret
int
adc
mov
mov
mov
test
add
inc
mov
inc
hlt
dec
scas
mov
icebp
pop
into
jecxz
dec
test
cli
nop
add
sbb
imul
lods
mov
push
outsl
das
mov
mov
jl
sahf
in
add
jl
dec
ret
aad
addl
ds
fwait
jmp
jmp
xchg
or
loopne
aaa
jl
stos
sub
and
outsb
lods
push
adc
imul
negl
mov
insb
lret
sub
add
out
out
enter
inc
mov
xchg
jae
out
pop
sub
ss
nop
mov
test
movsl
bound
pop
cmp
mov
or
add
and
mov
addr16
inc
stos
inc
pop
cmc
insl
jge
stc
or
mov
jmp
popf
add
loop
out
in
xchg
movsb
fsubr
inc
sbb
pop
jle
lahf
mov
add
loopne
push
push
in
divl
inc
cmp
repz
fldenv
sub
xchg
jle
mov
test
inc
in
jp
rcrb
fidivrl
inc
lock
inc
jae
pop
inc
or
rcrb
les
out
pop
or
divl
shr
xlat
jle
jle
inc
push
test
lods
pop
aas
fwait
fwait
fwait
xorl
jne
fbstp
adc
dec
repnz
outsb
mov
mov
ficoml
xchg
dec
cmp
mov
cmp
sti
and
aas
sub
pop
pop
pop
dec
int
int
je
test
out
mov
pop
jno
sbb
stos
es
cmpsb
lock
sbb
movsl
jo
mov
out
adc
shlb
dec
movsl
adc
or
and
int
inc
sarb
pop
inc
mov
arpl
cmpsb
xchg
push
mov
cmp
xchg
fdivrl
mov
in
jmp
movsl
and
in
lock
cld
int3
mov
sub
shl
mov
dec
add
sub
jmp
in
imul
sub
arpl
jbe
pop
and
jae
fisubl
rorl
out
jg
loope
outsl
into
jae
inc
shr
iret
out
out
ljmp
and
sbb
aas
movsb
push
push
add
jno
pop
xor
sbb
mov
jl
xor
pop
ss
cs
pop
lods
aam
outsb
cs
fincstp
sub
dec
inc
xchg
adc
jle
clc
insb
enter
ss
and
pop
or
push
decb
jle
push
jge
adc
push
lock
and
xchg
stc
jl
inc
js
cld
es
sahf
push
xor
test
jae
insb
xorl
ret
fwait
dec
mov
inc
fsubs
ja
mov
jne
addr16
int
es
push
subb
push
mov
out
xchg
and
pop
jle
shrb
pop
loope
mov
outsl
adc
jecxz
and
add
xchg
leave
imul
xchg
mov
insl
insl
pop
lahf
int
pop
sub
aaa
test
dec
enter
xor
iret
stos
mov
jmp
mov
aas
fwait
fwait
fwait
cmp
mov
icebp
adcl
push
jge
outsb
outsb
test
ret
sahf
pop
sti
and
xor
loopne
mov
ja
dec
ret
in
testl
jne
or
xchg
jmp
int
pop
jno
or
sbb
xchg
push
outsb
outsb
clc
test
xchg
out
ljmp
and
bound
pop
sbb
sahf
push
sub
mov
pop
test
cmp
jge
or
clc
subb
mov
push
pop
sbb
outsb
outsb
outsb
cmpb
pop
lods
mov
sbb
push
jmp
arpl
sahf
and
mov
test
loope
fwait
fcmovne
out
ja
loopne
cmpsb
clc
jnp
pusha
inc
pushf
fwait
fwait
fwait
repnz
or
dec
or
cmp
ja
jp
outsb
outsb
push
ret
cmpsl
bound
adc
and
out
dec
aam
cmc
xor
outsl
xlat
insb
mov
and
das
push
call
aaa
pop
jl
sub
cmpsb
dec
xor
and
adc
fstpl
outsb
push
adc
lcall
mov
ss
popa
ljmp
int
xor
movsl
stc
in
or
repnz
inc
adc
int
outsb
mov
mov
divl
pop
xor
add
cli
stos
inc
cld
fldt
les
sbb
fidivs
pop
add
push
enter
adc
or
into
int
rcr
pop
xchg
mov
sahf
cmpl
fisttps
fisttps
fwait
fwait
sahf
pop
cwtl
aam
and
and
fwait
fwait
fwait
fwait
cmc
mov
mov
fsub
mov
fwait
fwait
fwait
std
pop
jo
mov
push
xchg
ror
inc
add
pop
jae
int
int
nop
scas
sbb
insb
dec
in
test
int
int
test
add
or
mov
out
push
or
xchg
cmp
jb
or
inc
cmp
lock
imul
fimull
ss
and
mov
mov
xlat
scas
in
popf
sbb
jae
mov
fsubrl
mov
jno
int
in
push
mov
lahf
or
mov
mov
and
pop
insl
fstpt
push
add
in
adc
rcr
and
insb
repz
xchg
mov
push
lods
jnp
iret
notb
mov
int
mov
xor
push
add
inc
das
lcall
bound
out
cmpsb
jno
addb
mov
inc
jae
jae
mov
jns
std
int
add
in
dec
pushf
xchg
jo
xor
jb
outsb
pop
rcr
mov
popf
mov
xchg
jne
push
add
lahf
or
ja
inc
adc
ret
fimull
ljmp
mov
dec
mov
out
out
in
mov
loopne
and
xchg
pop
pop
dec
iret
jnp
repz
add
clc
mov
dec
xor
movsl
addr16
jle
jl
fidivrl
cmp
dec
ret
sub
shl
mov
shl
jle
mov
jae
arpl
jno
jp
inc
lods
jne
fildl
scas
out
dec
sbb
sti
jecxz
js
jne
sub
arpl
sbb
jl
cmp
cmpsl
das
push
iret
mov
cmp
mov
mov
xchg
out
push
lock
push
ffreep
aam
in
xor
sti
fnstcw
movntq
lds
iret
sbbb
cli
in
int3
xchg
or
mov
or
ss
mov
inc
push
test
mov
mov
int
jnp
jge
xor
repz
mov
fistpl
add
shlb
movsb
rclb
fldt
ljmp
mov
jne
aas
adc
sub
mov
sub
aaa
pop
cld
lds
fdivrl
pop
push
roll
outsb
scas
jp
cmpb
lods
loope
das
mul
insb
outsb
outsb
outsb
push
loopne
hlt
push
insb
cmp
dec
jmp
push
loope
cli
lods
mov
shlb
aas
fwait
fwait
sub
or
push
lahf
loopne
fildl
in
enter
lds
pop
and
fwait
xor
jg
in
mov
clc
aaa
aaa
ja
fisubs
ss
jnp
adc
xchg
aaa
ds
aaa
xchg
fcmovnbe
psubq
xchg
add
jae
ret
mov
sbb
pusha
pop
adc
loope
mov
inc
mov
and
iret
ret
pop
jns
sbb
mov
jo
in
cld
sti
ss
fcmovne
inc
jle
inc
cs
hlt
jns
pop
dec
aaa
push
jl
lock
lea
out
cmp
inc
movl
loopne
xor
jbe,pn
lds
push
pop
jno
mov
jae
or
dec
cmp
pop
scas
insb
das
push
jnp
jae
imul
pop
ret
adc
xor
orb
jae
cwtl
mov
cwtl
pop
inc
iret
out
ss
pop
in
dec
fadd
xchg
sbb
xor
inc
std
lahf
push
jge
sahf
and
push
imul
or
dec
rol
push
jbe
jp
xchg
jle
dec
pop
add
out
clc
pop
repz
mov
sbbb
aad
imul
cld
js
ret
pop
ret
cmp
in
xor
sub
cmp
add
lock
and
fs
sbb
inc
dec
out
cmp
add
cmp
pop
adc
sarl
pop
mov
add
imul
push
xlat
xchg
out
out
mov
bound
sub
xchg
out
out
insl
fwait
mov
jns
rcr
xchg
cld
sti
insb
lahf
fistl
jmp
lret
insb
sbb
or
iret
out
jne
mov
iret
lods
mov
jecxz
cmpsl
mov
imull
outsb
lahf
shl
insl
adc
fwait
lock
inc
inc
or
outsb
outsb
outsb
outsb
loopne
push
imul
ret
push
jp
insb
outsb
int
lds
cltd
mov
mov
mov
cmpsb
fbstp
push
xchg
dec
adc
movsl
orb
int
int
jo
pop
push
daa
push
js
cmp
xchg
into
int
jns
outsb
fisttpll
xchg
int3
test
bound
mov
or
fucomi
loopne
rorl
fsubs
add
push
and
pop
outsl
cs
cmp
out
xchg
test
in
pop
mov
cmp
cmp
lods
ljmp
js
add
sar
es
mov
push
pop
inc
mov
rcl
sbb
out
notb
cmp
sbb
imul
clc
jmp
leave
out
mov
mov
push
mov
insb
incl
dec
push
shll
fwait
fwait
fwait
popf
scas
pop
mov
dec
mov
fwait
dec
and
fistpl
nop
fwait
inc
sub
inc
outsb
outsb
lahf
fwait
push
sbb
ss
jne
test
call
xchg
sbb
jg
fucomip
fwait
js
jb
cmc
fdivs
jle
jae
daa
shlb
insb
mov
pusha
out
push
sbb
or
xor
iret
in
jae
jle
push
in
movsl
adc
xchg
ds
xchg
cltd
shrl
xor
sti
dec
mov
mov
out
ret
jae
jae
ret
pusha
xorb
fisubrl
out
out
and
mov
data16
inc
xor
and
mov
pop
sub
adc
jae
push
test
insb
out
mov
jmp
int
xchg
jb
sahf
dec
cmc
pushf
inc
pop
ss
xor
aas
push
cmpsl
iret
dec
and
in
lods
mov
add
inc
andb
cli
cs
pop
arpl
pop
int
int
aam
popf
push
push
jbe
jg
sbbb
jle
fisubs
adc
mov
testb
ljmp
rcrb
iret
push
or
mov
push
xor
dec
add
sub
pushf
fwait
fwait
fwait
mov
mov
roll
push
mov
sub
push
mov
xor
mov
fnstenv
shll
lahf
fisttpl
xor
fucomp
and
icebp
mov
int
imul
ja
out
mov
ret
aaa
add
aaa
or
repnz
dec
dec
cld
dec
pushf
fisttpl
in
push
add
sbb
and
pop
dec
idivl
imul
out
dec
cmp
lock
dec
xchg
testb
out
sbbl
sub
mov
push
cltd
mov
dec
js
in
jge
cmp
outsb
push
xchg
sbb
es
daa
mov
add
lods
xlat
inc
jecxz
mov
lods
push
aaa
andb
adc
ja
aas
push
aaa
push
add
cmc
add
mov
add
stc
mov
loope
iret
sti
cmp
std
icebp
lret
or
pop
xchg
dec
add
dec
mov
xchg
ja
sti
cmpsb
clc
and
inc
cmp
das
outsb
push
imul
int
inc
loopne
cwtl
addr16
sbb
add
add
inc
movsl
mov
pop
fnsave
add
ss
add
cmpsb
xchg
rol
push
lahf
les
std
xchg
jne
sub
fdivrl
insl
shll
adc
fs
cld
out
sbb
fsubl
out
out
dec
push
sbb
cltd
fidivrl
fs
mov
adc
inc
test
stos
push
sti
into
inc
add
fwait
jae
es
jns
js
add
addr16
mov
inc
imul
mov
jne
lods
aaa
clc
xchg
and
cs
aaa
aaa
aaa
shl
cmp
lret
ljmp
aaa
aaa
aaa
mov
mov
test
push
add
sahf
push
jo
mov
jno
inc
dec
sbb
das
sti
jge
lahf
cwtl
rcrb
cs
jae
push
inc
test
pushl
loopne
adc
jae
jae
xchg
ds
popf
lock
dec
inc
sbb
dec
out
jae
jae
inc
cmp
lcall
jae
fwait
test
outsb
out
mov
jbe
fwait
fwait
or
cwtl
test
adc
mov
add
cwtl
or
int
dec
dec
outsl
clc
stc
sub
into
add
ss
out
lahf
xchg
sti
pop
mov
push
jmp
aas
sahf
shl
sub
sub
fidivl
jl
xorb
and
std
adc
or
inc
or
push
push
mov
out
add
inc
push
dec
lods
xchg
sub
adc
clc
mov
bound
xor
enter
cmp
insb
lods
fmuls
jl
fwait
fwait
fwait
test
fwait
aam
push
xor
outsb
aas
leave
test
loopne
aas
in
sbb
mov
mov
sub
fisubrs
hlt
xlat
push
cmpsl
xor
mov
in
mov
xchg
and
out
ja
clc
pop
js
mov
std
loope
fdivp
fistpl
and
inc
jp
xchg
sub
test
mov
xchg
hlt
aam
movsb
cld
dec
inc
xchg
fdivrl
rorb
insl
hlt
ljmp
xor
repnz
movsb
add
ror
int
sbb
int
pop
jmp
ficompl
xchg
shrl
cld
sbb
cmp
mov
inc
dec
xor
pop
jl
dec
xor
ret
adc
outsb
dec
inc
fisttpl
fildl
jge
fisttps
mov
out
outsb
outsb
outsb
outsb
insb
test
xor
xchg
insb
idivl
outsb
outsb
ss
xor
in
int
movsl
cmc
inc
or
cmpsl
mov
mov
shrb
add
cli
fcompl
faddl
adc
mov
lock
fwait
mov
icebp
mov
jbe
sbbb
out
ljmp
int3
es
push
push
in
cltd
out
fwait
dec
push
arpl
or
dec
fwait
fwait
lahf
adc
scas
or
add
fwait
fwait
push
cmpsb
xor
mov
add
in
adcw
lea
daa
cltd
sahf
mov
jo
imul
fwait
sub
aad
fdiv
nop
lahf
cmp
push
in
xor
rol
mov
shrb
js
jae
rorb
dec
sbb
in
jae
push
inc
and
arpl
call
jne
jle
xchg
in
pop
into
aad
rorb
insb
imul
fwait
jg
iret
ret
mov
mov
pop
jg
ds
js
outsl
test
inc
sub
push
mov
or
fwait
addr16
xchg
out
loope
aaa
push
std
insb
add
frstor
dec
test
js
jo
pusha
mov
in
dec
mov
pmuludq
loopne
pop
inc
stc
pop
call
cmpsb
add
test
stos
inc
aam
pop
ficoms
and
fsubr
fildl
lret
in
imul
outsb
lahf
push
adc
out
push
push
cmc
fisttps
lahf
test
jbe
mov
xor
sahf
push
sbb
mov
int
jl
push
adc
aad
into
int
int
sbb
in
pmaddwd
pop
icebp
xchg
test
icebp
or
fdivrl
seto
or
fcmovu
fisubl
in
sbb
inc
rolb
popf
add
sub
lock
sti
jns
sarl
daa
cmp
mulb
push
sub
fimull
add
jae
push
mov
mov
out
sbb
je,pt
adc
xchg
xor
jae
mov
mov
xor
pop
outsb
cwtl
or
adc
mov
in
insb
or
sbb
mov
mov
bound
mov
or
jae
or
insl
cmc
pop
xor
clc
fcompl
add
jmp
sub
std
insb
pop
cmpsb
cld
xor
rolb
lods
and
lds
lock
shll
ja
lods
std
or
test
ds
mov
or
lods
sbb
push
out
mov
adc
adc
sbb
sti
jle
daa
jl
dec
mov
das
mov
leave
xchg
es
jae
pop
xorl
jae
xchg
adcb
or
inc
adc
mov
imul
and
daa
iret
mov
mov
sahf
pop
sbb
xor
mov
in
pop
cmp
fwait
fwait
fwait
fwait
in
cmp
cmc
push
imul
mov
ja
mov
xchg
pop
outsb
dec
pop
outsb
outsb
outsb
outsb
sbb
mov
jle
jnp
insb
outsb
outsb
outsb
imul
pop
sbb
clc
test
addr16
in
rcr
cld
out
daa
jnp
popf
sbb
inc
shll
mov
cmpsb
xchg
jno
and
cmp
xchg
sub
int3
pop
jo
mov
int
outsl
cmc
loop
and
jnp
je
add
jle
clc
fnstsw
fnstcw
jle
loope
ret
cmp
push
movsb
fidivs
cmc
lds
inc
push
xlat
add
lea
mov
ficoml
push
xchg
flds
pop
outsl
imul
stos
cmp
jp
sbbb
enter
and
cmpsb
jne
xor
fcompl
jle
cmp
or
lret
test
out
out
addr16
int
outsl
test
dec
cwtl
cmp
popl
cmp
out
rcrl
push
sahf
movsb
fsubrl
jmp
mov
xchg
mov
insb
cmp
xchg
pop
stos
xchg
dec
inc
clc
cli
pusha
xor
out
jo
sub
out
out
mulb
jle
pop
roll
pop
jmp
out
out
jnp
pop
xor
clc
pop
xchg
inc
inc
nop
out
out
shr
arpl
les
mov
iret
lods
iret
pop
jne
mulb
xchg
xchg
insb
jne
push
pop
pusha
je
mov
cmp
inc
loope
js
mov
cs
arpl
push
mov
fcompl
filds
xor
out
dec
popf
mov
or
mov
fisttps
jb
dec
add
out
cltd
gs
lahf
cli
cmpsb
mov
adc
push
ret
cs
inc
dec
mov
sti
mov
inc
mov
sbb
shrb
sub
incl
fwait
or
mov
xchg
ret
dec
adc
pop
xlat
push
aam
cmpsl
in
xor
push
cmpsl
push
icebp
daa
lds
clc
sbb
incb
icebp
int
int
or
sub
or
sbbb
arpl
sbb
jle
or
repz
push
rclb
test
outsb
outsl
lcall
subl
xor
fdivp
jae
and
hlt
popa
sbb
inc
cltd
add
out
jae
insb
test
add
jae
aam
stos
dec
push
xor
in
mov
add
test
out
shlb
xchg
mov
or
test
cmp
iret
out
pop
loop
fstl
das
or
push
xchg
lock
call
cli
mov
lods
lods
cmp
inc
cli
insb
outsb
and
or
aam
and
test
clc
lea
fwait
fwait
fwait
je
loopne
stos
pop
sub
xlat
test
xorl
sbb
data16
scas
int
push
or
adc
out
sub
inc
dec
xor
in
cmp
adc
jp
sarb
xchg
sahf
int
mov
and
cmc
mov
jge
fnstcw
jp
jl
hlt
fstps
popf
pop
mov
adc
cmp
int
orb
pop
hlt
xor
insl
lods
ret
and
loop
cs
fnstcw
fadds
mov
sbb
mov
pop
jb
pushl
sti
fcoml
outsb
cmp
adc
fwait
in
jae
jae
jecxz
jns
scas
orb
sub
mov
xlat
mov
jp
jge
fists
ficomps
ss
sbb
es
fdivs
jp
popf
fwait
push
cmp
adc
mov
adc
adc
fildl
fidivrs
je
fsubp
out
mov
fwait
data16
test
jne
filds
lret
lods
and
movb
sub
ss
std
mov
test
out
imul
add
or
ret
loope
and
jae
sti
test
jg
mov
push
sub
ljmp
dec
xor
push
int
or
xchg
sbb
and
cmp
push
mov
pop
push
xor
dec
sahf
flds
clc
cli
adc
inc
fistpll
mov
mov
sti
in
fwait
xchg
sarb
outsb
inc
inc
push
cmp
jg
sahf
and
and
insl
dec
dec
push
popa
jecxz
hlt
mov
out
xor
adc
mov
inc
adc
add
in
sahf
mov
and
jae
dec
fnclex
in
push
ja
lret
ret
loop
jp
cmp
call
test
test
add
mul
out
punpcklbw
jl
vpsubd
out
fstpt
xor
lods
mov
sbb
mov
sbb
out
fcmovb
cmp
out
notb
mov
ret
xchg
push
daa
xchg
mull
jae
mov
mov
mov
or
ret
or
fsubrl
outsl
push
mov
or
ds
in
xchg
int
aaa
out
sub
and
in
mov
mov
lcall
jae
movsb
jmp
es
push
pop
and
adc
jge
movsb
shrl
cltd
jp
pop
or
dec
fwait
insb
xchg
push
ds
popl
lcall
std
ds
pop
cmp
bound
jae
out
div
shrl
mov
loop
push
nop
in
mov
jl
pop
cmp
mov
push
push
or
adc
out
mov
in
push
dec
adc
out
mov
cmp
data16
mov
pop
cmpsb
push
rclb
push
in
out
mov
mov
jmp
cmp
ficompl
test
jge
and
jl
pop
addl
sahf
sahf
lret
jecxz
and
outsb
outsb
outsb
outsb
pushf
mov
inc
ss
mov
ss
and
dec
pop
js
in
es
xlat
sbb
mov
ja
mov
push
shll
pushf
pop
jae
pop
hlt
pop
add
cmc
dec
pusha
dec
inc
pop
ljmp
mov
cli
xor
mov
jge
or
inc
mov
cmc
mov
mov
es
loope
js
xchg
rorb
ljmp
pop
fdivp
sbb
in
ljmp
ss
or
add
mov
fisubl
inc
das
ljmp
ljmp
and
test
push
sub
add
xchg
int3
hlt
fmull
or
sbb
pop
mov
repnz
addr16
fdivr
ds
adc
mov
insb
fwait
cmpsb
iret
int
mov
daa
test
push
jns
ljmp
es
lahf
clc
insb
outsb
outsb
aam
popf
dec
fisttps
pop
insl
fisubs
out
adc
cmpsl
clc
mov
cmp
iret
pusha
in
addr16
pop
sbb
fs
cmpsl
mov
fwait
jle
ftst
shl
push
push
push
movsl
xor
faddl
test
dec
mov
jno
sbb
je
pop
and
push
dec
lret
ja
outsb
outsb
pop
cli
pushf
rorl
lret
fisubrl
scas
fs
pop
lock
mov
inc
sub
icebp
aad
call
cmp
out
add
cmp
call
cmp
mov
push
shlb
sbb
sbb
pop
rcl
jae
xchg
lock
mov
mov
loopne
jae
imul
sub
xchg
hlt
orb
push
dec
shll
fcompl
pop
fstpl
mov
js
shlb
cmp
mov
sahf
push
stos
inc
pop
sbb
or
outsb
or
dec
mov
cmp
int
mov
push
stos
ljmp
cld
test
inc
jns
addr16
mov
cli
adc
fwait
sub
xchg
fdivs
xor
cmp
add
pusha
scas
outsb
xchg
fstpt
push
fsubrs
or
pop
aam
shl
mov
cmp
outsl
adc
hlt
pusha
leave
out
addr16
lods
mov
shlb
add
out
xor
icebp
cmp
pop
std
cmp
add
jle
xchg
cld
insb
fistps
movsb
popf
rcl
stc
cmp
xchg
xchg
inc
imul
pop
pop
stos
push
test
gs
loope
idiv
idivl
testl
jae
and
jle
aaa
mov
es
lahf
add
cmp
fwait
fwait
call
fwait
int
jae
ja
ds
cwtl
adc
adcl
iret
in
das
aaa
or
mov
scas
bound
sub
jl
mov
cmpb
xor
push
sbb
sbb
test
mov
aas
fcmovbe
or
enter
cmp
mov
out
out
fucom
cmp
out
idivb
arpl
sub
push
sub
pusha
stos
sbb
mov
popa
fidivs
sbb
scas
fadd
je
out
out
push
mov
test
fisttpll
iret
mov
enter
aam
dec
mov
iret
idiv
ja
sbb
imul
out
and
and
cmpb
sbb
enter
mov
sub
push
js
shrb
in
mov
inc
cmp
pop
dec
mov
mov
adc
push
dec
mov
cwtl
jmp
or
out
cmp
xchg
add
js
pusha
mov
jb
lods
mov
loopne
adc
mov
adc
adc
jae
imul
jmp
xchg
jae
inc
fidivrs
xor
out
out
push
lock
add
cmpsl
popa
push
pop
scas
iret
nop
mov
pushf
inc
pop
inc
iret
out
fstl
xchg
stc
add
mov
mov
xor
cli
or
ljmp
push
jl
iret
push
jo
add
in
enter
hlt
add
push
push
fists
fcmovne
divb
es
push
inc
flds
add
outsb
inc
mov
insl
std
pop
cmp
lock
fsubrl
sbb
inc
sub
push
inc
dec
int3
and
cltd
xadd
ss
adc
clc
push
xor
push
es
adc
adc
pop
fdivrl
sub
cli
insb
cli
mov
outsb
push
out
out
xor
insb
ja
or
add
fimuls
clc
out
pop
jl
je
sti
test
outsb
outsb
out
inc
push
xlat
out
jns
leave
dec
add
std
insb
outsb
and
inc
mov
out
jbe
xchg
sahf
lahf
lret
mov
inc
insb
outsb
aas
fwait
dec
mov
inc
ds
ret
fmul
cmp
aam
push
mov
loop
outsb
outsb
xor
push
js
ja
vpaddsb
push
mov
ljmp
ds
mov
or
sbb
lods
jno
and
aaa
mov
pop
lock
lret
pop
xchg
push
stc
mov
js
sbb
fmull
test
push
out
mov
mov
jle
mov
loope
pop
out
in
outsl
mov
mov
ss
ret
loop
push
and
mov
cmp
and
data16
cmpsl
cs
lcall
push
mov
mov
mov
ja
xchg
outsb
scas
clc
fnstenv
xor
push
mov
shll
outsb
outsb
outsb
xchg
xor
sbb
fbstp
pop
shlb
out
sub
insb
cwtl
cmpsl
mov
xor
jge
wrmsr
addb
inc
imul
sbb
popf
lea
iret
out
idiv
jmp
cmpsb
or
orl
cmpsl
gs
pop
icebp
xchg
ret
and
fcmovnb
std
push
loop
or
enter
psubb
addr16
push
insb
pop
xor
or
fmull
fcompl
repz
je
fldz
mov
xor
icebp
mov
mov
fwait
sbb
sub
loope
ret
fiadds
stos
jbe
clc
in
mov
inc
adc
enter
dec
nop
mov
xor
fdivrl
mov
jbe
jmp
inc
xchg
repnz
jle
xor
scas
insb
pushf
popa
dec
xor
fld
test
insb
sbb
outsb
scas
mov
fsubl
pushf
aas
testl
mov
mov
clc
jae
jae
das
sub
pusha
outsb
jne
cld
mov
jmp
push
mov
orl
pop
inc
lds
or
fs
aaa
aaa
push
out
jae
ds
es
sahf
mov
fisubl
fldt
clc
ret
pop
dec
or
xchg
outsl
out
divb
sahf
xchg
fwait
sbb
jge
jae
jae
jge
rclb
test
cmp
les
push
mov
pusha
fcompl
mov
js
pop
add
xor
rclb
pusha
jge
pop
push
aam
js
andb
xchg
int3
jnp
aaa
aaa
pop
bound
jb
mov
jp
cld
sarb
aaa
aaa
push
das
testl
popa
jmp
mov
insb
into
stc
je
sbb
clc
mov
notl
outsl
xchg
cmc
adc
push
jecxz,pn
push
por
fcoml
adc
mov
ds
lods
dec
lahf
imul
push
inc
pop
push
sahf
int
push
mov
roll
add
mov
pop
pop
aam
mov
xchg
ret
fisubs
pop
les
jno
in
pop
clc
pop
lock
fwait
pop
data16
pop
ljmp
lods
iret
dec
adc
fildll
pop
or
adc
cmpsb
les
jge
outsb
sahf
pop
out
inc
test
pop
xor
out
idivb
ss
xchg
mov
out
xchg
test
jo
out
inc
push
leave
jb
les
ja
call
inc
sarb
fnsave
sahf
and
mov
int
int
adc
stc
add
aam
jb
out
or
add
bnd
test
nop
fwait
fwait
cmp
add
into
movsl
hlt
and
jge
and
stc
test
jnp
pop
ljmp
jb
iret
mov
movsb
out
les
add
fldl
fs
lock
ftst
pop
sub
lret
ljmp
mov
xor
inc
rcl
je
jge
outsb
cmpsl
xor
lock
mulb
xchg
ljmp
nop
in
test
ljmp
cli
sbb
and
enter
outsb
hlt
out
ret
lret
inc
adc
sahf
into
out
not
jp
pushf
add
push
shl
out
out
jp
nopl
inc
xchg
hlt
faddl
dec
mov
arpl
fwait
test
idivl
lahf
xchg
std
or
bound
jae
dec
mov
sbb
popf
xor
xor
jae
jae
mov
and
push
fdivrl
jae
jae
xchg
dec
push
cmc
mov
aaa
mov
inc
pusha
inc
fldcw
outsb
xlat
push
ja
xor
int3
jae
mov
jmp
jecxz
aam
jae
jae
add
repz
inc
inc
lea
bound
call
ret
or
cli
jp
sahf
shlb
std
mov
stos
fidivl
sbb
or
out
cld
push
dec
sbb
outsb
xchg
mov
dec
or
xorb
inc
push
loope
mov
push
data16
iret
testb
xor
pop
ds
push
sub
jge
fstl
lock
js
inc
outsb
lahf
fistl
fidivl
sbb
fisubrl
outsb
outsb
outsb
outsb
cmp
xchg
jle
adc
pop
and
jo
adc
movsb
xchg
mov
das
loop
enter
das
in
jl
jge
sub
dec
addr16
dec
cmp
loop
loop
rcrb
int
in
enter
roll
jnp
aad
aaa
aaa
aaa
mov
in
mov
pop
pop
sub
je
sub
jl
addb
icebp
repz
jecxz
mov
pop
add
adc
inc
fadd
or
sbb
lock
cmp
mov
cs
in
mov
std
mov
mov
cltd
push
cmpsb
mov
sub
jp
cmp
pop
test
mov
out
insb
sbb
cltd
aad
cmp
insb
mov
imul
fs
dec
cmc
dec
mov
test
out
sbb
pop
shll
mov
insl
jmp
roll
test
or
out
stos
or
aas
leave
test
jl
mov
pop
jp
jp
out
sbb
adc
fildl
sbb
mov
out
inc
call
test
mov
outsb
outsb
es
dec
sbbb
lods
mov
xor
inc
adc
add
iret
jge
fcmovnu
clc
push
fwait
dec
fwait
push
sub
out
out
lret
orb
dec
sbb
out
xchg
pop
movsl
jge
jo
ud1
out
xor
insl
out
rcl
das
sub
lahf
fildl
push
lods
dec
xor
sbb
es
cmc
xchg
push
outsb
outsb
outsb
outsb
bnd
jmp
and
std
insb
jle
filds
pushf
mov
rclb
lcall
mov
das
inc
lock
lock
stos
or
divb
rsqrtps
addr16
inc
pop
in
push
aas
lock
int3
les
mov
dec
add
pushf
int
add
xor
cmp
mov
ret
add
mov
inc
mov
sub
xchg
in
mov
push
push
inc
mov
lahf
out
mov
xchg
pop
mov
pcmpeqb
inc
divl
aaa
aaa
mov
insb
addr16
fs
nop
xor
pop
and
sti
cmp
repz
inc
push
dec
sahf
cwtl
inc
sbb
jae
fwait
subb
loop
icebp
bound
push
cmpl
fstpt
inc
lea
shll
rolb
pop
pop
ret
fwait
mov
aaa
fildl
push
dec
jb
mov
fwait
fwait
pop
scas
dec
es
fcompl
sarb
adc
push
cmp
lea
cmp
mov
push
sbb
inc
xor
outsb
outsb
outsb
adc
inc
or
xor
out
add
sbb
cmpsl
repnz
jns
out
out
push
lcall
in
and
and
dec
fidivl
jae
sti
and
mov
cmp
inc
repz
insb
jae
jae
inc
test
pusha
dec
cli
lret
xchg
mov
jae
jae
xchg
mov
testb
add
sub
jmp
out
mov
mov
mov
paddb
mov
mov
lds
push
xchg
out
ret
sub
aas
xchg
pushl
fdivl
xlat
je
lods
cli
mov
jns
mov
push
xchg
mov
mov
mov
add
inc
popf
out
jne
mov
lods
jb
jge
pop
out
pop
dec
push
mov
lea
xor
lahf
sbb
repnz
jmp
mov
mov
sub
and
mov
andl
loop
or
out
lods
imulb
ret
sahf
int
int
cli
fs
jle
jecxz
mov
mov
ret
push
icebp
movzwl
shlb
jae
xor
or
push
mov
jae
jae
push
push
in
jae
and
push
fldenv
stos
loope
jae
popf
xor
or
adc
fwait
xchg
push
mov
shlb
pop
subl
aas
movsb
mov
insb
sbb
jge
int
dec
or
jo
jmp
test
xor
shll
sar
es
dec
mov
fucomi
mov
jne
xor
mov
cmp
jno
int
aas
push
pop
daa
sub
das
sbb
iret
int
int
je
pop
mov
add
sbb
fnstcw
add
cmp
push
mov
xchg
adc
xor
jmp
aam
in
mov
adc
pop
adc
pop
mov
fdivrl
adc
cmp
stos
outsl
or
dec
push
push
mov
icebp
inc
dec
gs
ss
xchg
std
ds
fwait
cmc
and
mov
cmp
test
fdiv
mov
rclb
mov
inc
sub
cmpsl
outsl
jns
adc
int
int
xchg
jg
jecxz
cmp
ds
int
lret
ja
jl
inc
test
in
movsb
sbb
fdivrl
xor
inc
test
xlat
jmp
mov
jae
popa
mov
insb
or
mov
xorl
mov
inc
aaa
aaa
aaa
mov
inc
sbb
inc
xchg
add
push
cmp
and
leave
test
insb
and
pop
outsb
shrb
ret
adc
les
adc
lock
xor
dec
and
jnp
stc
sub
jae
popa
mov
int
int
shr
and
test
into
int
push
inc
cmp
clc
dec
ja
faddl
sbb
mov
mov
fxch
cld
jnp
mov
ss
fiadds
es
mov
push
push
xchg
add
ret
nop
in
fiadds
aaa
aaa
mov
notb
fidivl
pop
repz
adc
bound
sbb
fdivrl
aaa
mov
xchg
and
fwait
sub
adc
vpaddsw
xchg
inc
loop
sbb
lahf
int
jg
adc
mov
int
add
sub
and
lahf
int
int
sti
xor
jo
mov
in
add
pop
hlt
pop
pusha
pop
or
mov
and
or
sbb
cmp
jg
dec
lahf
jmp
sbbb
jge
popf
js
push
shrb
push
jle
int
or
shl
push
cmpsl
mov
aaa
aaa
mov
out
pop
out
mov
inc
pusha
popa
cmpl
aaa
or
out
lods
jbe,pn
in
addr16
ret
adc
lcall
mov
push
mov
add
and
orb
out
outsl
in
sub
outsb
outsb
outsb
aas
cmpsb
adc
and
pop
imull
pop
out
imul
pop
xor
xchg
outsb
outsb
outsb
outsb
ficompl
mov
push
mov
mov
fisttps
out
movsl
add
xor
xor
loop
sub
out
out
xchg
adc
lea
std
sarl
push
nop
inc
sbb
mov
cmp
jecxz
add
outsb
outsb
mov
jle
fistpl
je
cmp
cmp
cmc
insb
test
das
inc
arpl
push
lods
ret
bound
clc
into
and
cmp
fcoms
js
clc
jge
in
js
adc
es
cmp
aad
dec
outsb
outsb
outsb
outsb
out
mov
dec
ss
in
decb
jl
mov
popf
cmovne
and
bound
in
xor
int
addr16
dec
adc
sti
fsin
mov
cli
xorb
stos
pop
cli
sbbl
in
addr16
pop
aad
sbb
adc
lea
mov
or
fcompl
or
addr16
sub
in
movsl
mov
mov
fmull
out
hlt
inc
mov
shll
imul
xlat
out
loope
inc
loop
or
or
dec
fs
sbb
jl
fcomi
sti
pusha
movsb
ja
sahf
fnstcw
push
mov
fwait
fwait
fwait
dec
ret
mov
popf
dec
std
fldl
das
or
dec
insb
push
les
push
lods
sbb
jo
mov
sahf
repnz
scas
in
jne
mov
jmp
imul
push
mov
enter
adc
fwait
fwait
fwait
fwait
popa
xchg
cmp
dec
sahf
ds
imul
outsb
lahf
fwait
fwait
test
sbb
mov
movsl
sbb
mov
bound
imulb
mov
mov
mov
outsb
cs
loop
sbb
jo
shll
aam
cli
insb
adcb
mov
aad
test
int
adc
ljmp
push
push
jbe
mov
test
mov
ret
add
in
or
mov
jl
mov
fwait
jle
lahf
in
lret
xchg
xorl
cmp
mov
add
shr
jge
ret
sbb
fsubrl
jae
jae
enter
out
and
mov
jae
sti
and
scas
sbb
cmp
mov
inc
jb
jae
xor
clc
sub
and
cld
rolb
out
daa
cmp
jae
jae
divl
mov
and
pop
test
and
icebp
out
lret
dec
js
mov
cmp
lds
dec
inc
inc
jns
sub
fisttpl
xchg
pop
sub
iret
adc
mov
shl
push
loopne
in
movsb
dec
add
jecxz
mov
sbb
cli
and
clc
fldcw
clc
mov
outsb
lds
sti
sbb
inc
enter
cltd
clc
loopne
cmp
pop
dec
inc
inc
hlt
ret
jp
pop
and
rcrl
jge
add
out
insl
dec
ljmp
negb
sub
fs
add
pop
sub
lret
sarl
or
nop
ret
xchg
inc
mov
push
inc
dec
outsb
xchg
stos
mov
mov
movsl
jb
into
jg
cmp
mov
lcall
mov
mov
das
pop
xchg
add
pushf
xor
pop
mov
pop
jne
jge
les
ret
call
adc
ss
aas
jno
mov
mov
cmpsl
and
and
adc
mov
lahf
in
and
pop
fucomi
ret
pop
out
mov
mov
stos
dec
add
mov
ret
outsb
lods
in
stos
iret
adc
add
pusha
ficoml
arpl
xchg
lcall
pop
popl
add
in
jbe
sahf
les
cmp
push
rorb
jnp
sbb
jae
jae
lahf
stc
xor
inc
rorb
jae
jae
inc
ljmp
in
mov
iret
hlt
dec
sti
push
test
and
int
int
inc
shrl
out
out
lahf
int
out
and
mov
sbb
mov
pop
outsb
sbb
clc
rorb
dec
ret
out
das
loop
pop
in
repnz
mov
push
sbb
adc
jbe
inc
out
add
cmpsl
mov
aam
sahf
in
out
sbb
xor
loopne
sub
rol
mov
out
cmpsl
repnz
dec
and
mov
sahf
mov
xchg
cmc
push
dec
mov
int3
sbbb
inc
mov
pop
icebp
mov
insb
xchg
cltd
mov
push
cmp
cmp
ljmp
enter
ds
fwait
iret
xlat
dec
mov
rorb
aaa
pop
mov
bnd
mov
xchg
cs
mov
sbb
pop
xor
mov
std
xchg
faddp
sub
stc
and
inc
push
cmp
je
sbb
push
outsb
outsb
outsb
mov
int3
sarb
push
insb
outsb
outsb
outsb
xor
bound
std
xor
ret
sbb
adc
add
out
jp
imull
jp
pop
lds
adc
sbbb
cld
in
jmp
pop
cmp
je
xor
outsb
jp
adc
jge
pusha
mov
cmp
cs
and
pop
pop
shlb
mov
cld
cmpsb
fwait
mov
xor
data16
push
std
mov
cmp
add
fstps
hlt
or
inc
hlt
std
lods
pop
lock
shl
pushf
clc
insb
mov
rol
push
outsb
push
dec
or
jb
fwait
fwait
fwait
or
jmp
int
je
in
and
mov
out
iret
int
das
subb
adc
sub
in
out
out
pop
loopne
stc
cld
xchg
xchg
jnp
iret
out
into
movq
or
jae
jae
fisubrl
inc
rorb
int
in
jae
xchg
es
out
push
pop
mov
int
int
stos
rcl
and
mov
sahf
int
cmp
test
xchg
push
sub
cmpl
mov
cmp
cmpsl
lods
jl
aam
mov
mov
or
pop
sahf
ss
aaa
jl
adc
pusha
jae
sahf
adc
cmp
jle
cmp
adc
out
jae
jne
hlt
shll
mov
int
sbb
jnp
push
inc
mov
int
int
lret
xchg
and
ret
xor
xchg
arpl
push
cmp
and
or
cmpl
jle
psubsw
fmul
xor
cmp
mov
jp
sbb
pop
pop
movsb
aaa
sbb
mov
add
pop
fisubs
mov
pop
imul
psubb
mov
inc
adc
sbb
test
mov
fcmovbe
jbe
std
mov
xchg
in
add
out
frstor
aad
jl
cwtl
insb
or
pop
ror
out
data16
sbb
std
insb
outsb
outsb
cmp
mov
in
sti
pop
js
mov
sbb
insb
jmp
jge
lahf
in
addr16
mov
jnp
cmp
mov
and
jae
pop
dec
sbbl
mov
outsb
outsb
outsb
aaa
dec
imul
mov
adc
pusha
or
stos
outsb
pop
loop
push
and
je
pop
xor
mov
std
fwait
in
sbb
adc
sti
test
or
push
movsb
xchg
sub
add
jbe
sbb
sbb
fadd
dec
pushf
sbb
push
mov
xor
jle
add
sti
loope,pt
insb
nop
xchg
push
mov
jae
xchg
push
popf
or
lock
or
fidivrl
and
pop
test
hlt
mov
daa
fstpt
push
inc
dec
jb
xor
aad
mov
aam
mov
mov
in
dec
ss
pop
sbb
pop
clc
into
pop
inc
rolb
sbb
nop
mov
scas
jle
leave
lret
fwait
fwait
fwait
and
addr16
mov
mov
or
jl
cmc
cmpsb
into
mov
cli
sbb
dec
out
faddl
and
imul
mov
xor
mov
xchg
int
int
mov
pop
or
imul
mov
cli
add
out
js
dec
push
clc
add
sti
jp
les
xchg
jae
jae
push
cwtl
sbb
add
int
int
and
adc
xchg
jle
mov
int
mov
fidivrl
cmp
clc
shlb
cs
inc
xor
add
adc
test
jae
iret
enter
lock
xchg
out
std
pop
jecxz
jae
lea
sub
jae
repz
fsubrl
mov
sahf
cmp
fnsave
iret
int
inc
ljmp
add
inc
in
ret
scas
fdivrl
aaa
lods
test
test
add
cmp
nop
and
notl
loop
and
dec
and
fcoml
repz
test
dec
mov
das
es
mov
pop
jecxz
shlb
aam
test
adc
fsubl
shrb
jns
insb
dec
inc
std
insb
outsb
outsb
outsb
cltd
frstor
jns
out
sbb
testb
lods
jo
jbe
mov
in
add
jmp
jle
cmp
aam
push
xor
pushf
pop
pop
cmp
cmp
mov
push
push
shrb
push
loope
push
fidivrl
hlt
cmp
and
dec
jno
lds
mov
pop
sbb
sbb
sub
in
jae
ret
in
adcl
lahf
mov
mov
mov
sub
out
out
jle
into
mov
cmp
sub
pop
ja
pop
aam
int
cmp
sahf
dec
scas
jnp
pop
hlt
mov
xor
int3
adc
insb
iret
sub
fsubrl
nopl
sarl
test
enter
in
clc
jge
aaa
mov
shl
sti
shl
mov
je
inc
fisttpl
dec
inc
arpl
and
jl
ss
aaa
xchg
test
clc
and
test
xchg
jae
push
cmp
mov
aaa
mov
jnp
mov
inc
jl
loop
mov
mov
pop
fisubl
sbb
insb
nop
add
mov
or
lock
outsb
clc
fiaddl
les
mov
int3
je
iret
out
aas
jle
or
and
icebp
sar
inc
in
sar
dec
xor
lahf
dec
mov
dec
imul
imul
stos
into
push
ja
and
out
out
jbe
pop
xchg
dec
or
inc
popa
cmp
aas
lods
pop
inc
adc
out
fisubs
fcmovne
imul
jne
outsl
jb
dec
jbe
je
add
pop
iret
pop
jmp
cli
pop
pop
xchg
inc
loop
insb
repnz
sub
cltd
pop
push
xor
push
xor
mov
sbb
icebp
dec
es
add
mov
fsubl
repz
dec
pop
cmpsl
enter
movsl
cmpsb
mov
cmc
mov
out
out
mov
jge
cmp
es
fistpll
divl
sbb
bound
pop
cmc
and
xor
sbb
ss
cli
fadd
sub
xor
mov
jbe
push
notl
add
test
pop
mov
ret
mov
jae
jae
jae
notl
faddl
testl
or
jb
mulb
xor
jl
aaa
xor
outsl
inc
lahf
cmc
lods
clc
cmp
sahf
enter
js
pop
jg
jp
mov
pop
ja
mov
push
mov
sub
add
mov
push
dec
jns
test
icebp
adc
sbb
mov
mov
int
xchg
sub
lds
fcompl
sbb
fdivrl
aaa
movsb
mov
mov
cmp
fsubl
mov
mov
mov
clc
or
iret
jge
int
in
adc
sti
and
outsb
mov
push
negb
fdivs
inc
mov
sbb
or
push
jo
pop
movsb
lcall
sbb
rcrb
into
insb
imul
outsb
outsb
aas
nop
mov
lods
sbb
leave
arpl
cmp
jnp
in
ds
mov
jae
sbb
out
cltd
sbb
loopne
aam
fisttpl
scas
dec
les
test
scas
pushf
pop
adc
outsb
aas
lcall
sbb
and
outsb
outsb
gs
invd
mov
and
int3
push
in
sarb
xchg
xchg
loope
or
mov
jmp
aas
and
insb
out
divb
push
cli
ss
push
jne
aas
fcmovne
loopne
shlb
push
stos
dec
ficoml
idivb
imul
pop
iret
out
rorl
ret
xchg
pop
jg
dec
and
inc
push
subl
jge
mov
andb
jecxz
mov
fidivl
sbb
inc
mov
add
shll
push
jo
mov
xor
addr16
lds
push
mov
in
jle
xchg
test
or
push
lahf
fwait
mov
fcomps
fdivs
aaa
pop
sbb
jmp
popa
fldt
lea
ss
aaa
aaa
aad
fiaddl
and
pop
js
lods
pop
ljmp
iret
aaa
push
cld
insb
clc
xor
xchg
adc
ljmp
sub
pop
jle
std
push
sub
adc
push
and
in
jnp
lods
inc
pushf
xchg
inc
shlb
jae
jae
and
aam
cmp
cmp
adc
xchg
out
jae
and
js
rclb
bound
out
clc
xor
adc
pushf
loope
sub
push
in
outsb
outsb
outsb
outsb
fisttpl
iret
sbb
xchg
call
jl
aad
iret
nop
push
adc
pop
rcrb
inc
cltd
jg
hlt
mov
int
int
out
jnp
push
aad
les
pusha
adc
int
xchg
xchg
xor
push
rep
out
out
call
xchg
and
sbb
insb
sbb
inc
out
jns
pop
or
add
ficoms
push
sub
adc
inc
fcmovnu
adc
icebp
mov
mov
lea
into
sbb
fcompl
add
ss
cmp
push
cli
stc
push
pop
add
bound
and
adc
and
jge
aam
in
out
cmp
hlt
mov
mov
jp
jne
fstps
fbstp
mov
adc
cmp
sub
xlat
stos
mov
int
sbb
lds
push
mov
popf
jp
mov
jmp
out
dec
lahf
mov
push
xchg
mov
inc
nop
sbb
je
mov
xchg
xchg
outsb
scas
clc
fdivl
mov
std
jmp
imul
lock
mov
pop
stc
fnstcw
mov
in
jmp
xor
fwait
lret
out
mov
imul
test
add
cltd
lahf
out
push
pushf
data16
iret
inc
inc
lcall
outsb
outsb
es
iret
loopne
stc
sbb
jle
dec
xchg
outsl
outsb
outsb
outsb
outsb
inc
out
mov
push
in
in
jl
sbb
mov
jge
and
push
scas
das
cld
dec
mov
fcmovne
out
pusha
mov
ds
fstl
cmc
push
add
jle
repnz
adc
xchg
push
xor
daa
jbe
xchg
fwait
fwait
sub
jge
add
sub
iret
lds
xchg
add
loopne
aad
push
inc
test
js
jae
sti
push
movl
nop
jge
in
addr16
xchg
enter
stos
cmp
out
mov
popa
pop
pushf
in
pop
inc
pushl
aas
xlat
ret
add
xchg
push
cmp
outsb
clc
push
sub
xor
add
aas
cltd
fmuls
cmpsb
mov
hlt
cmpsl
int
rcr
xlat
sub
int
movsb
jns
xor
out
xchg
or
ds
aaa
loop
and
mov
outsb
outsb
outsb
rclb
cmp
cmp
scas
xor
mov
xlat
and
frstor
ds
fwait
add
cmpsb
add
out
mov
fdivr
mov
or
mov
out
and
mov
jmp
xor
inc
cli
jle,pt
sub
sbb
repz
outsb
lahf
fcmovnb
das
in
mov
jbe
clc
inc
mov
jle
out
arpl
fmull
jae
stos
add
je
aaa
cmc
imul
movsl
mov
xchg
adcb
xor
addl
jl
lods
pop
testl
dec
cmp
sbb
sbb
mov
clc
test
xchg
push
dec
test
out
rcrl
pop
xlat
ds
cld
insb
pop
pop
sbb
push
jmp
arpl
and
jp
add
call
je
mov
adc
cld
xorb
leave
xlat
lock
fcoms
insb
outsb
out
shrl
pop
mov
jp
lcall
inc
jmp
loopne
inc
testb
leave
xor
xor
out
push
out
in
pop
xor
mov
fstpt
push
sahf
xor
jb
push
mov
adc
outsb
outsb
outsb
pusha
xchg
jmp
out
sub
jne
ja
mull
mov
test
xor
fwait
or
cli
adc
fwait
fwait
fwait
fwait
lock
enter
stos
fs
inc
xor
aas
fwait
push
adcb
ljmp
dec
movsb
jmp
je
mov
shl
sbb
pop
ds
mov
sub
test
mov
repz
cmp
jle
jle
enter
std
insb
outsb
rcrl
rclb
mov
mov
outsl
jecxz
mov
and
xchg
fbstp
mov
cmp
push
sub
fwait
fwait
fwait
jbe
lock
ja
mov
std
outsb
outsb
outsb
outsb
mov
sub
pop
mov
test
scas
adc
popf
or
lea
lcall
sti
rorl
jns
push
and
into
int
jecxz
sbb
fwait
sti
rcr
fdivrl
adc
lods
out
or
sbb
sbb
xlat
mov
jae
fsubl
in
dec
mov
jae
jae
add
sti
leave
mov
mov
xchg
into
add
xchg
inc
jo
inc
shl
insb
jmp
xchg
push
imul
jae
jae
ror
pop
cltd
fwait
int3
push
fcomps
adc
int
jae
in
movsl
inc
in
sti
add
ds
sahf
lea
imul
jle
in
push
mov
fnstenv
test
ss
aaa
mov
addb
or
mov
insb
jnp
int3
push
ret
loop
mov
aaa
push
mov
daa
mov
pushf
int
in
cli
leave
push
mov
sub
ss
sbb
inc
jge
fidivl
lods
jb
ja
fcompl
mov
fcom
push
les
push
outsb
adc
add
clc
mov
leave
pop
and
or
int
inc
and
fisubs
inc
arpl
jne
dec
or
repnz
xchg
test
aaa
aaa
aaa
mov
or
out
cli
mov
and
js
out
divb
cmp
mov
jb
stos
insl
xchg
mov
es
addb
xor
jp
sti
insb
pop
ljmp
leave
xchg
loope
sub
hlt
pop
and
imul
push
dec
or
xlat
rcl
loopne
jno
les
jae
jl
aad
pop
sub
mov
insb
mov
dec
inc
pusha
push
push
push
cwtl
cmp
aaa
aaa
in
dec
sub
mov
les
sbb
or
mov
jmp
fdivrl
movsb
jecxz
pop
dec
pusha
inc
jbe
jae
dec
inc
aad
mov
ljmp
movsb
push
pop
cmpsl
jl
insb
shrl
dec
add
lods
out
stos
ss
and
rcrl
and
and
mov
jbe
loop
push
mov
jae
jae
mov
cmp
xor
mov
lods
out
push
lcall
mov
mov
lock
shlb
insl
mov
mov
dec
adcl
idivb
cmp
xchg
iret
push
es
out
out
scas
adc
repz
sbb
scas
adcl
test
je
sbb
rcrb
jae
filds
or
jmp
fistps
out
adc
sub
pushf
popa
inc
rolb
out
mov
jle
and
btr
lock
sti
fs
sub
pop
pop
push
pop
shlb
je
js
lret
int
inc
pop
andl
cmc
and
repz
adc
lahf
stos
pop
mov
mov
sub
fisubl
mov
movsl
xchg
movb
out
addr16
xor
inc
scas
scas
sub
fstpt
scas
mov
mov
inc
addr16
jge
push
cmp
mov
rcrl
add
mov
hlt
adc
arpl
lea
sti
test
iret
dec
ds
test
xor
jle
adc
push
push
mov
pop
loop
fdiv
test
cmp
push
out
jmp
cmp
cli
add
das
sti
and
pop
add
movsl
addr16
dec
sbb
mov
cli
movsb
ss
aaa
mov
clc
xchg
pop
stos
incl
adc
jp
jge
sub
cli
fisubs
mov
addb
cs
pop
pop
lock
or
cmp
fsubrs
adc
lcall
xchg
in
mov
into
fnstcw
mov
rdtsc
js
jmp
cmp
movsb
movl
lahf
jo
ret
xchg
cmpsl
adc
sbbb
push
sbb
inc
nop
mov
mov
cmp
es
insl
out
repz
jmp
mov
out
not
movb
xchg
add
add
xchg
lcall
test
ljmp
out
out
pushf
push
mov
xchg
mov
mov
mov
jbe
movsl
mov
gs
cmpsl
jno
ret
pop
in
hlt
out
leave
lahf
int
int
push
mov
stos
pop
pop
xchg
jl
jle
pop
push
mov
gs
or
jae
std
cmp
mov
out
out
xlat
push
out
pop
je
fdivrs
shl
out
xor
aaa
test
test
je
ljmp
push
outsb
outsb
dec
cli
int
int3
clc
jg
and
aad
mov
outsb
outsb
outsb
outsb
cmp
sbb
lahf
leave
shrb
outsb
outsb
outsb
jno
sub
ss
or
insb
scas
stos
out
mov
repz
fisubrs
inc
sub
outsb
shlb
sbb
addr16
jae
adcl
iret
xchg
adc
ficoms
push
dec
push
ret
mov
outsb
inc
ss
outsl
enter
out
mov
out
es
dec
pop
pop
xor
addr16
pop
cmp
cld
stc
mov
push
pop
add
jae
jae
sub
jle
lea
mov
fistl
hlt
out
add
movsb
mov
lcall
fimull
jbe
sub
std
sub
pop
out
sbb
mov
sub
and
mov
xchg
pop
daa
es
xchg
notb
xlat
stos
jg
jne
mov
int
dec
lret
gs
shlb
int
int
push
xor
adc
cmp
int
int
stos
inc
adc
sub
dec
lahf
sbb
ret
push
pop
pusha
xlat
cmpsl
je
jecxz
in
cmp
popa
pop
fmul
out
fisubl
fcomi
sbb
dec
data16
enter
js
push
in
fwait
fwait
fwait
fwait
shlb
push
xchg
add
in
ja
xchg
fwait
outsb
outsb
outsb
lahf
test
add
cltd
nop
push
daa
call
push
jl
outsb
pop
bnd
int
cld
int
and
ss
aaa
aaa
add
and
mov
sahf
xor
cltd
jae
rolb
fxch
dec
lahf
int
movl
inc
cltd
push
ljmp
mov
pop
loopne
push
nop
sarl
movsl
xlat
or
mov
rcrl
and
xchg
adc
cmpsl
xchg
outsl
cmpsb
pop
mov
or
mov
fcmovnbe
jmp
frstor
or
xchg
out
pop
std
sahf
fwait
inc
clc
jns
in
inc
loopne
mov
aaa
aaa
aaa
aaa
aad
adc
or
das
int3
ss
aaa
aaa
ss
sbb
and
jge
int
out
andb
add
mov
insl
test
out
mov
scas
jae
repnz
push
addr16
fcmovb
les
je
insb
pop
mov
inc
rcl
call
out
shll
out
mov
out
mov
int3
mov
cmpsb
mov
jno
movsb
hlt
out
xor
fisttpl
pusha
cmpsb
mov
mov
insb
lahf
fwait
cmp
push
mov
inc
andb
ror
fdiv
mov
xchg
rclb
aad
inc
inc
jnp
fdivl
in
mov
and
addl
mov
xchg
fsubrs
dec
shlb
mov
xor
xchg
and
jle
loop
dec
xor
mov
mov
popf
cltd
cwtl
ret
int
push
je
ljmp
sub
or
ret
testl
xchg
icebp
mov
or
ret
iret
idivb
movb
jno
ret
shrb
cmpb
js
jg
fldln2
or
addr16
push
xchg
pop
xchg
rorb
sar
sarl
and
int3
addr16
sbb
xchg
add
aad
pop
aam
ja
or
jno
push
mov
sbb
xchg
in
scas
jae
repz
mov
imul
aaa
mov
sti
in
adc
pop
sbb
lcall
inc
popa
testb
sbb
ljmp
add
push
push
fwait
fwait
fwait
fwait
mov
std
rcl
sub
arpl
call
lea
addb
fidivl
and
movb
sbb
outsb
outsb
es
mov
test
mov
je
mov
ror
add
movsl
lahf
int
out
aaa
rol
add
push
lret
in
test
cld
test
aaa
aaa
aaa
mov
shr
std
arpl
mov
xchg
and
inc
in
add
dec
push
cld
es
sbb
divl
ds
mov
fsubl
out
inc
jl
or
jb
adc
mov
adc
iret
mov
lret
add
test
or
sbb
bound
or
mov
sbb
xor
ficoml
jae
addr16
test
ret
aaa
aaa
mov
mov
pushf
dec
mov
ret
jle
aaa
aaa
arpl
lds
add
call
nop
add
xchg
jns
rcll
hlt
mov
in
shlb
jae
js
xor
push
xor
scas
out
popl
mov
adc
lret
out
sarb
xor
sahf
mov
lds
cli
pop
cmp
pop
std
je
adc
cmp
outsb
pop
cmp
stos
mov
int
int
dec
es
jno
sub
jge
jnp
stos
iret
out
lahf
xchg
lret
sbb
fidivrl
outsb
outsb
mov
fisubl
out
daa
sbb
insb
outsb
jbe
fstpt
mov
adc
addr16
lods
out
cli
xchg
add
lret
jg
int
xor
int3
je
and
or
pusha
repnz
and
pop
jge
lahf
mov
push
in
jo
or
aad
fcoml
aaa
push
cmpsb
xchg
out
lret
sbb
xor
leave
pop
aam
dec
and
sub
ret
daa
jbe
or
jle
adc
mov
popa
or
ss
adc
clc
xor
pop
or
jmp
jmp
mov
xchg
push
sub
dec
mov
or
xor
mov
iret
out
push
pusha
jl
add
lahf
int
aas
dec
loop
js
jg
fstl
jp
stos
mov
pop
inc
aaa
ja
or
dec
add
aaa
aaa
and
aas
fldcw
outsb
adc
push
sbbl
pop
pushf
cmp
or
inc
inc
fwait
fstpt
xor
cmpsb
bound
fwait
fwait
fwait
fwait
dec
inc
hlt
cltd
mov
cmp
int
adc
enter
xor
nop
outsb
cli
lret
int
in
popa
repz
add
enter
cmc
push
jo
sbb
mov
in
fsubl
or
sub
cmp
fsub
lea
pop
and
jle
fistps
add
or
fcmovbe
ljmp
ret
test
add
int3
mov
dec
hlt
add
lcall
int
bound
cmc
xlat
imul
outsb
pop
addr16
sbb
push
iret
push
aas
ffree
jecxz
mov
rolb
icebp
add
adc
lret
and
out
add
sbb
sbb
ret
jae
ror
dec
int
pushf
ds
loopne
mov
xlat
ret
push
cmp
iret
out
sub
fdivl
cmp
iret
int
jbe
sub
inc
test
xchg
pop
daa
jp
jmp
or
stos
dec
cld
sub
cld
mov
push
repnz
hlt
out
xor
cmp
pop
lahf
dec
lahf
fwait
jns
xor
jle
or
cld
clc
pop
dec
movsb
test
mov
add
pop
sbb
mov
lcall
addr16
enter
mov
mov
int
test
bound
xor
mov
outsb
cs
jge
repz
int3
xchg
inc
popf
movq
add
push
xchg
hlt
test
out
jge
cmp
dec
lcall
add
and
inc
sarb
or
movsb
dec
sbb
call
insb
dec
pop
les
imull
push
or
cmc
mov
rcrb
sub
adc
testb
cwtl
pop
insl
jecxz
jg
lahf
fwait
fwait
adc
pop
addr16
das
pop
jge
lods
add
faddl
pop
ljmp
insb
pop
mov
sub
or
mov
mov
divb
addr16
xchg
es
sub
lcall
mov
aas
into
pop
mov
adc
lret
decl
inc
pop
std
insb
clc
fdivrl
in
push
xor
divb
push
outsl
lcall
xor
inc
mov
cmp
or
inc
pop
ficoms
leave
inc
mov
inc
scas
aad
call
mov
mov
mov
or
jae
mov
push
ret
mov
mov
mov
jle
ja
mov
fildl
ret
inc
mov
fwait
fwait
and
lea
mov
or
je
xchg
inc
mov
xchg
icebp
fxtract
loopne
icebp
jmp
push
mov
add
fidivrl
ljmp
sarl
lahf
cmpsb
sub
pop
sti
add
jae
jl
rcrl
push
pop
push
xlat
push
shlb
push
test
cmp
push
jo
cmpsb
fdivrl
aaa
mov
fcmove
xchg
and
popf
es
jbe
faddl
sbb
cltd
inc
imul
not
jbe
push
and
fwait
shlb
cmp
sbb
out
adc
fcmovnb
arpl
test
dec
stc
repz
das
shlb
insl
cmp
test
cs
das
and
scas
mov
jle
push
js
inc
push
lcall
iret
les
push
and
cmp
outsb
outsb
lds
negb
fs
add
add
addr16
mov
in
out
xchg
pop
fdivrl
pusha
bound
loopne
test
pop
cs
sarb
or
add
test
mov
in
adc
pop
cmp
fwait
fwait
fwait
or
cmp
jecxz
mov
lcall
shrl
sub
pop
jmp
cltd
aad
xchg
cmp
int
orb
mov
push
shlb
rep
push
jbe
jge
aaa
aaa
aaa
aaa
aas
sti
jnp
jecxz
inc
into
int
jo
ss
aaa
aaa
jns
loop
pop
mov
fistpll
ret
loopne
sbb
stos
inc
fisubrl
or
in
idivl
bound
scas
sbb
jg
jl
iret
out
iret
cltd
jno
xchg
fsubrs
pop
dec
fsubl
lea
sub
mov
and
pop
push
pushf
incl
aas
aaa
aaa
aaa
aaa
inc
frstor
stos
dec
arpl
outsb
clc
cmp
popf
jbe
cmpsl
ja
push
cmc
or
roll
out
sub
insb
and
aaa
mov
xchg
arpl
push
adc
mov
jmp
loope
in
mov
sbb
dec
decl
pusha
dec
cld
dec
add
notl
popa
mov
movsb
xchg
fcoms
bound
neg
int3
in
out
out
xchg
sbb
fildll
mov
out
or
insb
testl
mov
adc
cltd
mov
sahf
pop
xchg
jl
xor
andb
mov
daa
repz
push
xlat
aad
mov
ljmp
mov
call
daa
add
pop
fs
xchg
xor
aas
loope
pop
bound
and
or
bound
pop
out
lahf
add
mov
rcrb
pop
in
dec
inc
mov
cmp
das
ja
test
dec
loop
add
in
test
or
shlb
mov
mov
ds
mov
popa
jecxz
sub
imulb
call
or
mov
inc
inc
add
xor
sub
andb
inc
sahf
shll
leave
out
outsb
sahf
lret
pop
add
add
iret
pop
add
rclb
out
in
lahf
adc
hlt
cmpb
pop
fcomp
sahf
lock
test
add
mov
aam
cmpsb
pop
mov
mov
xchg
mov
in
aam
lcall
mov
gs
adcb
fwait
imul
test
test
lods
mov
add
cmp
pop
add
dec
xor
adc
in
fsts
lahf
int
push
div
insl
xlat
out
sub
out
out
es
js
fcomip
sbb
fcmovne
out
enter
add
pop
fldt
mov
pop
mov
push
stc
data16
subl
add
pop
cmc
jge
sti
cld
lock
cmp
add
cltd
lcall
aaa
incl
sub
jbe
out
ficomps
adc
rol
jp
pop
nop
pusha
out
lret
sbbb
aas
fisttpl
or
addl
out
cli
push
cmp
arpl
push
dec
push
adc
sub
outsb
outsb
mov
rclb
cwtl
dec
and
insb
outsb
outsb
outsb
or
cmp
jl
sub
cli
xchg
mov
cwtl
adc
shlb
lods
xor
loop
bound
add
mov
ljmp
jae
adc
adc
fadds
notl
jae
mov
out
in
or
cmp
incb
inc
imul
mov
out
addr16
add
mov
pop
dec
pusha
cltd
mov
aaa
mov
call
push
add
out
push
andb
ds
jno
out
xor
jo
nop
test
iret
in
sti
dec
leave
pop
jg
mov
cmc
pop
loop
adc
sti
fsubrl
push
jne
loopne
rorl
xchg
popf
es
cmp
xor
mov
sub
mov
cmp
es
dec
jp
adc
sbb
cmpsb
pop
int
mov
insb
testl
pop
lahf
int
add
je
xor
lock
test
rclb
das
fisttpl
clc
imulb
sahf
ja
xor
xchg
mov
test
stos
mov
mov
mov
dec
and
xlat
mov
ss
idivb
mov
loopne
test
adc
dec
lcall
inc
rolb
jle
imull
push
jbe
stc
mov
faddp
int
pop
icebp
repz
pop
cmp
pcmpgtb
and
cli
fchs
and
gs
cmp
in
sbb
sub
add
jb
add
sbbl
add
out
imul
adc
pop
das
cmp
xchg
clc
ss
shlb
or
pop
enter
aaa
aaa
aaa
push
jnp
hlt
pop
insb
arpl
lcall
xor
pop
mov
pop
dec
pop
arpl
fwait
cs
jb
jmp
notb
jne
inc
push
dec
fildl
mov
out
dec
cmp
fstl
fcoms
mov
push
mov
faddl
int
int
mov
sub
rorb
clc
pop
adc
outsb
fdivs
cld
insb
push
sub
jmp
call
dec
clc
into
cmc
mov
jae
in
das
jne
pop
mov
sub
lock
fsts
fwait
sbb
mov
testb
jge
les
mov
jns
addb
xchg
mov
jge
and
testb
fwait
fwait
pop
jecxz
add
jecxz
jp
divl
fwait
fwait
cmp
data16
add
shl
adc
dec
jb
pop
sbb
push
test
lods
xlat
pop
std
cmpb
sub
outsb
and
sbb
imul
scas
shlb
nop
in
sbb
inc
outsb
ret
scas
or
mov
int
sbb
insl
shll
sbb
iret
xchg
negb
cltd
or
std
insb
cli
inc
fisubl
bound
call
cmpsl
cmpsb
mov
in
cmp
adc
mov
lahf
or
out
mov
sarl
pusha
inc
xor
out
out
cmp
loop
test
cld
aas
out
out
int
dec
movsl
mov
sbb
out
out
loopne
movsb
pop
dec
arpl
testb
jae
jnp
dec
cltd
bound
xchg
into
add
cmp
jo
cmp
sub
push
cmp
cmpsb
cld
pop
mov
pop
add
call
mov
mov
push
jbe
and
adc
js
mov
mov
sub
fnstenv
fldt
call
test
jmp
mov
or
push
mov
xchg
insl
loope
fwait
mov
pop
add
aam
pop
js
push
lcall
popa
fsubs
icebp
mov
mov
in
jnp
cmp
jbe
or
lea
data16
addl
push
mov
call
adc
lret
xchg
movsb
shll
stc
mov
loopne
cmp
xor
sti
lea
bound
sbb
testb
int
repz
movsb
mov
pusha
dec
sub
lret
sbbb
jle
ja
mov
ds
mov
fdivr
cmp
inc
sub
lods
divb
clc
dec
mov
in
cwtl
cli
or
call
stc
cmpsb
xor
arpl
movsb
pop
cwtl
clc
and
ds
aaa
aaa
aaa
outsb
mov
mov
push
cli
inc
aaa
aaa
aaa
aaa
jae
les
pushf
insl
sbb
add
popf
in
iret
ss
or
addr16
jmp
stos
loop
out
aas
insl
mov
sbb
mov
out
jbe
lea
add
fcmovne
pop
in
mov
dec
ss
adc
int
int
pushf
lcall
pushw
mov
int
repz
fdiv
push
xor
in
outsb
clc
pop
mov
dec
pusha
adc
bound
int
insb
or
push
cmpsl
lahf
cwtl
cmp
ret
aaa
aaa
aaa
std
pop
inc
cmpsb
lea
add
pop
push
sub
test
dec
ss
je
ficoml
mov
loope
loop
test
adc
adcb
mov
xor
and
jl
or
sahf
lock
call
clc
and
leave
adc
shrb
outsb
negb
jnp
out
imul
cld
sti
daa
xchg
mov
sbbl
aad
rol
sbb
fnstcw
push
jo
ljmp
mov
aas
nop
fistl
sar
int3
push
clc
cmp
lock
aas
mov
cld
adc
jae
xchg
dec
fs
loop
les
jg
in
js
int
in
dec
hlt
into
imul
fisubl
jae
fwait
stos
jle
ds
mov
aas
cmp
cmp
cmp
sub
jmp
sub
adc
stos
mov
pop
mov
xor
out
out
or
test
lret
iret
out
out
add
sbb
loope
stc
jae
sti
inc
or
mov
dec
inc
cltd
stos
mov
add
rcll
adc
mov
jecxz
mov
sahf
fldt
xchg
aaa
test
icebp
scas
rcr
decb
enter
mov
cmp
enter
cmp
add
fdivrl
aam
adc
pop
mov
add
jae
jae
ret
jbe
push
sbb
and
dec
pop
icebp
jmp
jmp
and
call
dec
xlat
out
shll
cmp
pop
mov
lods
out
fmuls
push
xor
aaa
popa
int
int
mov
bswap
cmp
je
add
add
sub
outsb
outsb
mov
call
push
mov
movsl
out
roll
aas
push
fidivs
cli
insb
outsb
outsb
outsl
lahf
out
mov
adc
pop
popa
clc
mov
pop
adc
pop
cmp
cld
insl
out
cmpsb
pushf
push
outsb
sbb
xor
and
nop
sti
je
jnp
hlt
popa
dec
cld
aas
call
xchg
mov
dec
decb
xor
adc
mov
popf
idivb
out
pop
aam
mov
pop
xchg
loope
jae
sub
xchg
in
inc
cmp
dec
outsb
test
pop
sub
jae
jae
subl
insl
dec
pop
pop
scas
addr16
jae
insl
movsb
jo
lds
xchg
ds
cmp
mov
je
icebp
mov
divb
es
divb
pop
out
sbb
and
shll
cmp
fcmovb
sar
insb
in
push
arpl
mov
ljmp
and
xchg
sbb
mov
xchg
jne
cli
pop
pop
mov
mov
xchg
jo
sub
inc
or
loopne
mov
insb
ja
insl
cmp
pop
fdivrl
fs
sbb
mov
fbstp
or
jae
fcompl
push
mov
and
addr16
fsts
insb
rolb
std
ret
stc
and
shl
testb
fsub
in
in
pop
cmc
push
in
push
fcmovne
out
dec
inc
in
nop
sub
push
das
ret
pop
mov
fwait
fwait
sub
mov
and
repz
sti
and
fwait
add
int
bound
mov
fcompl
fsubs
xlat
popf
fcoml
fcompl
pop
shrl
outsl
clc
insl
clc
fsubrl
stos
popa
mov
or
xchg
sub
adc
leave
mov
movsb
icebp
insb
jecxz
adc
out
out
rol
aaa
aaa
aaa
aaa
jecxz
xchg
adc
in
cld
add
aaa
pop
out
cmp
push
mov
cmp
rorl
insb
iret
sbb
cmpsb
test
mov
mov
imull
cmp
mov
int
aad
mov
dec
addr16
mov
bound
es
xorb
sarb
lcall
dec
sub
scas
filds
sbb
add
xor
iret
add
lahf
adc
and
and
addr16
xchg
pop
das
or
jmp
xor
cmpsl
mov
mov
rclb
addr16
sub
mov
pop
bound
and
fldt
aaa
out
and
loopne
rorb
jge
outsb
pop
adc
je
inc
pop
aam
subb
movsb
iret
cmpsb
imul
push
mov
xchg
cld
scas
xchg
add
aaa
aaa
aaa
and
call
loopne
test
cli
movsb
hlt
xchg
dec
and
out
cltd
shrb
mov
push
jne,pt
pop
adc
in
mov
aad
pop
aam
mov
add
xor
insl
jbe
pop
scas
and
mov
int
push
xchg
cmpsl
mov
dec
lea
outsb
outsb
ds
cmp
mov
lock
out
bound
movsb
sahf
leave
cmpsl
jnp
add
or
or
outsb
aas
fwait
fwait
mov
add
in
je
out
jge
aad
imul
test
and
int
add
cmp
add
jecxz
xchg
sbb
repnz
subb
sbb
and
jne
mov
addr16
fdivrl
repz
insb
sbb
pushl
dec
iret
in
sbb
rorl
mov
push
in
fwait
fwait
stos
pushf
mov
das
adc
insl
sbb
fwait
fwait
jecxz
xor
mov
mov
pop
jmp
ja
jb
adcb
mov
cmp
lret
into
xchg
dec
insb
xor
mov
mov
xor
jl
add
sarl
aaa
push
fdivs
mov
and
clc
sbb
cmp
mov
and
icebp
insb
cli
out
nop
test
inc
inc
cmpsl
mov
dec
adc
or
inc
mov
jns
fcomi
mov
mov
add
clc
lret
stc
sbb
daa
cmp
jle
push
pop
push
xchg
popa
in
cwtl
clc
fldcw
adcb
int
mov
int
int
and
test
in
sbb
mov
jns
xor
xchg
loop
jmp
ss
mov
mov
push
add
inc
test
popf
imul
pop
ss
shll
cld
ljmp
xlat
scas
int
int
xchg
imull
dec
int3
sahf
mov
int
int
sbb
jp
inc
je
sar
arpl
cmp
fcom
inc
in
std
xchg
sahf
int
mov
xchg
add
cli
test
mov
enter
lcall
mov
iret
or
sarb
mov
adc
xchg
int
jae
lcall
lods
push
push
dec
outsb
ds
mov
out
pushf
add
pop
call
je
je
out
idivb
ds
mov
int
int
mov
and
out
fadds
mov
xchg
clc
ror
pop
inc
repnz
sbb
pop
aad
ljmp
shll
test
inc
scas
mov
pop
hlt
in
repnz
fdivs
xor
insb
mov
mov
add
sub
ficomps
mov
xchg
aam
lea
cmp
rol
aaa
mov
mov
cmp
fs
xor
dec
loop
aam
ja
push
out
scas
sahf
test
mov
stc
int
and
push
push
notb
cmc
insb
jp
popf
inc
push
push
les
out
adc
out
mov
mov
and
imul
mov
cmc
lods
or
inc
enter
or
out
div
xor
lea
iret
out
fimull
in
lock
test
inc
pop
shrb
dec
xor
outsb
outsb
cli
fcompl
xchg
ds
xor
insb
outsb
pop
adc
pop
adc
in
pop
out
out
mov
out
fdivrp
and
push
fcmovne
out
dec
lahf
mov
and
jo
lahf
neg
or
addb
movsl
xchg
add
lahf
rcrb
test
out
mov
and
js
ss
xor
pop
inc
test
in
addr16
outsl
jbe
outsb
inc
call
jns
int
int
mov
daa
mov
sahf
xchg
xchg
jg
int
int
inc
xor
mov
add
sub
mov
int
xchg
push
rcrl
xor
in
mov
daa
push
lcall
lods
imulb
cmpsb
push
cmp
jo
jl
test
cmp
mov
jmp
fs
and
fistl
hlt
xchg
mov
mov
adc
cwtl
cmpsl
cmp
mov
ss
pop
pop
push
test
push
mov
mov
int
jne
cmp
xchg
les
test
lcall
clc
idivb
pop
jp
clc
jle
mov
inc
je
dec
insl
mov
jle
cmpb
ret
jcxz
xor
pop
int
mov
shr
adc
imul
int
int
scas
mov
xchg
int
xchg
rcrl
cld
add
sub
adc
addr16
cmpsl
sub
int
int
ret
loopne
fldt
scas
push
mov
leave
cli
adc
aad
push
sahf
sub
iret
add
inc
cmp
push
jo
fcompl
sbb
out
mov
mov
hlt
fptan
pop
xor
sbb
mov
xor
cld
insb
outsb
clc
and
mov
out
pop
rcll
out
dec
add
jbe
pushf
hlt
sub
sahf
int
lahf
scas
push
xchg
nop
cmp
xor
adc
jl
mov
mov
icebp
or
pop
sub
pop
or
jae
das
mov
int
call
outsb
mov
jp
loope
add
jl
push
jge
jle
sbb
inc
sti
addr16
push
arpl
cwtl
mov
push
out
subl
sbb
or
xchg
mov
mov
in
mov
jmp
hlt
sarb
xlat
lcall
or
sahf
or
in
sbb
mov
xchg
sarb
movl
mov
or
ljmp
cmpsl
jo
mov
mov
jae
les
cld
add
push
jo
push
inc
or
clc
bound
fs
and
dec
pop
sbb
fisttpll
je
iret
out
lahf
int
repnz
mov
jecxz
xchg
jle
adc
push
cmpsl
push
adc
aaa
push
rolb
dec
sbb
movsl
cmc
mov
pop
xchg
sub
xchg
mov
ret
lock
testb
dec
orb
daa
and
aad
inc
out
mov
cmp
pop
mov
scas
addb
pop
fs
pop
mov
add
in
sbb
flds
push
pop
hlt
push
enter
out
lahf
int
sub
das
xor
je
sub
shld
pushf
lea
test
popf
cmpsl
mov
fisttpl
insb
push
sahf
hlt
arpl
out
rclb
repz
xor
push
scas
mov
arpl
lret
or
jo
mov
cmovns
xor
xchg
add
adc
ja
push
fildl
mov
out
ret
fwait
fwait
fwait
mov
add
pop
daa
lahf
fwait
fwait
fwait
push
adc
inc
jno
mov
outsb
outsb
outsb
outsb
or
jnp
std
jno
xor
pop
cmp
inc
jne
adc
outsb
outsb
outsb
push
jnp
mov
sbb
pop
les
stc
mov
mov
fwait
fwait
sbb
adc
ret
mov
rcr
push
fs
mov
xor
cmp
adc
clc
ret
iret
int
sub
fcoml
add
cmp
push
jl
cli
push
or
push
pop
hlt
mov
jl
mov
mov
imul
lahf
sub
cmp
cmc
xor
pop
mov
cmp
lahf
fwait
cmp
mov
sub
push
lods
mov
cmp
add
adc
mov
or
out
fisubrs
mov
sbb
lahf
fistpl
add
mov
clc
mov
js
push
cmpsl
stc
outsb
outsb
outsb
scas
cli
adc
sbb
dec
outsb
outsb
outsb
outsb
daa
xorb
sub
outsb
outsb
ljmp
ret
fldt
jmp
sub
lret
sbbb
sahf
fwait
fwait
push
jp
jge
push
inc
loope
cs
incb
pop
test
add
div
dec
mov
sti
and
iret
out
mov
jle
out
test
fs
sbb
insb
mov
test
outsb
lahf
fwait
fwait
pushf
out
mov
incl
loopne
std
insb
outsb
ljmp
push
sahf
xchg
and
mov
mov
add
shr
int
rcrb
inc
roll
enter
pop
aas
fwait
fwait
fwait
test
adc
cwtl
aaa
testl
int
dec
cwtl
cmp
pop
jae
leave
test
push
int
int
std
dec
fs
das
aaa
mov
jle
lahf
sti
xor
aaa
cmp
mov
push
sahf
popf
movsb
fcmovnb
movb
dec
scas
inc
sub
jbe,pt
ss
pop
loop
or
outsl
filds
sub
push
inc
cmp
out
out
les
shlb
sbb
or
out
jns
mov
lods
sub
mov
mov
sbb
push
mov
jge
or
cmpsb
xchg
cmpsl
mov
or
add
or
pop
cli
mov
push
jnp
in
loop
pop
icebp
mov
stos
jmp
dec
imull
jg
lcall
pop
mov
lods
rcr
movsl
sbb
jo
adc
sar
fnstcw
sub
mov
pop
fisubrs
ljmp
add
test
enter
loop
rorb
ljmp
sub
push
xor
sbb
mov
jle
jo
cmp
mov
or
addr16
add
dec
xor
scas
add
inc
gs
out
shld
jae
cli
insl
sarl
shl
iret
jbe
inc
inc
xchg
call
loopne
movsb
xchg
addr16
sbb
pushf
xchg
jo
fildl
out
mov
aas
ss
fwait
sub
in
dec
out
idivb
add
insb
mov
into
aad
xchg
iret
out
out
fidivs
or
je
popf
loop
mov
popa
push
out
aam
mov
gs
arpl
xor
mov
movsl
adc
sarb
dec
fs
dec
outsb
outsb
outsb
outsb
clc
cmp
push
mov
or
stos
aaa
dec
fdivrp
insb
outsb
outsb
jle
pop
rclb
loop
fcompl
aaa
hlt
pop
repz
or
mov
adc
js
jl
dec
adc
xor
xor
mov
jae
sti
adc
jg
fwait
cmpb
jae
jae
in
add
xchg
mov
sub
xchg
out
out
test
popa
mov
add
lea
push
ret
lret
lods
loop
test
ljmp
sub
mov
mov
frstor
outsb
mov
add
loop
sbb
jmp
xor
outsl
fidivl
sub
sbb
sub
mov
insl
fadd
clc
inc
mov
or
adc
out
sbbb
lods
mov
jae
sti
fsubl
fwait
ss
adc
mov
jae
jae
repnz
scas
cmp
out
fbstp
push
mov
insl
je
push
xor
rcrb
jle
mov
sbb
imull
mov
mov
insl
mov
filds
inc
mov
fldt
cli
pop
loop
add
add
fnstenv
icebp
or
imul
sbb
fcompl
les
pusha
movsl
fnstenv
push
hlt
mov
cmpsl
pop
jg
jecxz
jl
xor
movsb
ret
addr16
mov
push
test
fcompl
pushf
add
daa
ljmp
cltd
xor
lock
jo
mov
xchg
sub
fisubl
inc
sbb
dec
adc
mov
mov
insl
stos
cmpsl
aad
mov
jmp
adc
jle
adc
out
ds
lods
rorb
mov
inc
push
addr16
lea
lea
aad
mov
mov
jp
orb
jge
cmp
mov
and
and
lds
mov
in
fwait
rorb
dec
leave
jp
fwait
fwait
fwait
fwait
cmpsb
lret
dec
das
jecxz
test
mov
fwait
sub
icebp
mov
sbb
fwait
jle
mov
insb
fimull
xchg
fwait
in
mov
jmp
ja
cmp
push
sub
pusha
outsb
outsb
mov
sbb
repnz
incl
outsb
outsb
outsb
outsb
cmp
test
ss
outsb
outsb
outsb
push
pushf
mov
lods
std
xchg
fcoml
mov
repz
mov
lahf
mov
out
out
mov
mov
hlt
out
xchg
fstp
sbbl
mov
fwait
fwait
fwait
or
xor
jecxz
push
into
pop
fcompl
aas
cs
insb
xor
cmp
fdivl
mov
add
fwait
stos
push
sbb
cmpsl
jecxz
fsubl
dec
xchg
push
pusha
jb
rolb
iret
mov
push
mov
out
pop
or
icebp
and
gs
cmpsl
test
std
xchg
add
pushw
fcomi
fs
dec
or
sub
fwait
fwait
fwait
std
inc
ja
inc
inc
mov
cli
iret
aam
ds
dec
adc
jle
clc
outsl
adc
out
sbb
out
scas
out
mov
outsl
into
repz
sbb
lea
out
out
mulb
aad
dec
pop
add
ror
jmp
repnz
out
out
dec
mov
lock
out
ja
hlt
lret
pop
mov
push
out
inc
adc
sbb
fcoms
xchg
jg
out
xchg
inc
inc
test
cld
lea
fwait
fwait
jecxz
adc
pop
js
cmp
lret
shlb
push
pop
xchg
xchg
loop
mov
push
mov
cld
es
xchg
mov
and
addr16
mov
fisubl
gs
scas
adc
testl
fisubrs
xor
jle
addr16
ja
insb
outsb
jo
mov
insb
popf
xor
dec
aaa
aaa
aaa
aaa
mov
test
mov
or
cmpsl
fldl
mov
ja
jl
adc
xor
sbb
pop
lods
arpl
dec
rorb
inc
adc
add
add
jb
jnp
inc
fs
aaa
aaa
mov
xchg
lcall
mov
sbb
aas
xchg
dec
mov
inc
and
les
jo
movsb
pushf
sbb
pop
andb
sarb
mov
jae
pop
fsts
into
and
xchg
adc
int
in
jae
jbe
dec
sub
dec
dec
test
outsb
aas
fwait
lahf
push
jge
lret
pop
xor
mov
outsb
je
xchg
push
adc
out
sub
aam
add
shll
mov
aad
jge
cmp
push
mov
mov
sub
xchg
and
fwait
cmp
pop
hlt
mov
cmc
out
mov
and
xor
out
xlat
rol
cwtl
std
mov
jne
outsb
outsb
or
fbld
pop
add
push
iret
out
scas
push
jnp
mov
or
inc
mov
insb
outsb
aas
adc
les
cmp
jne
push
cld
push
push
outsb
fdivp
bound
rclb
add
fsubrl
sahf
dec
daa
or
test
aaa
and
jl
jl
pop
push
and
inc
popf
mov
das
pop
xor
push
icebp
fmul
inc
jmp
arpl
sub
sarb
mov
pop
je
inc
xchg
adc
dec
inc
adc
add
push
fs
mov
sti
inc
or
outsb
outsb
outsb
clc
mov
xor
xor
mov
loopew
fldt
outsb
outsb
addr16
inc
push
sub
dec
sar
insb
outsb
lods
icebp
adc
addb
mov
insb
aam
jle
into
int
push
dec
xchg
es
lahf
sbb
cli
mov
in
mov
aaa
lea
sub
jl
jbe
aaa
aaa
aaa
aaa
xor
mov
sbb
idivb
xchg
sbb
addr16
sti
test
ficoml
jne
arpl
cmp
or
out
fbstp
mov
mov
or
pop
stos
pushf
iret
clc
int
in
xchg
add
loop
push
push
push
fdivrl
iret
pushf
cmp
jle
add
fsubl
shrb
fdiv
inc
mov
sbb
faddl
xor
xchg
out
aas
xor
jo
scas
xor
outsb
xchg
cmpb
cmpsl
mov
jl
cmp
jl
cmp
mov
mov
clc
scas
pushl
idivl
sbb
lret
sub
add
iret
int
or
jmp
push
ds
hlt
pop
je
mov
es
aaa
aaa
cwtl
xor
mov
movb
lcall
jl
cli
std
popf
pop
in
push
outsb
sub
mov
inc
out
iret
mov
movsb
mov
or
jae
jae
int
inc
dec
mov
sbb
addr16
jae
test
push
and
push
sub
dec
inc
cmp
hlt
aam
iret
mov
cmp
shlb
aaa
aaa
aas
fwait
enter
sub
jbe
xchg
aad
add
jl
dec
into
mov
fmuls
pop
mov
jl
push
das
test
jae
jae
loop
test
std
cltd
loop
test
dec
xchg
jae
jae
pop
shlb
jbe
and
int
int
aas
pop
jbe
sub
sub
cs
mov
int
sub
cmp
inc
std
inc
and
aaa
aaa
aaa
test
mov
xor
push
lcall
cli
and
sub
cmpsb
inc
and
aaa
push
cmp
cmp
enter
rcrl
mov
cltd
fldt
inc
xor
insb
pop
mov
fs
mov
mov
xor
pop
ds
lahf
js
push
mov
mov
aas
fistl
adc
into
inc
jns
in
cmpsb
jno
outsb
dec
mov
call
shlb
lcall
mov
cltd
and
ds
int
int
icebp
clc
fdivr
lods
push
pop
ljmp
into
int
mov
jae
jmp
rcr
fdivr
cli
loopne
xor
rorl
loopne
sti
jecxz
test
inc
xchg
xchg
call
mov
fisttpl
data16
jo
cmp
cli
int
pop
sbb
push
bound
lahf
int
je
frstor
jmp
divl
mov
jae
xlat
dec
cs
pop
xchg
xchg
and
ret
shrl
call
sub
imul
or
cmp
dec
fimuls
fwait
fwait
fwait
fwait
add
ja
pop
lods
rorl
das
sub
push
cltd
stos
rolb
adcb
cmc
movsb
sbb
adc
sub
push
ljmp
lock
xchg
fisttps
lahf
sbb
cmp
mov
push
outsb
outsb
outsb
mov
gs
fimull
jnp
pop
loop
jbe
mov
sar
lock
mov
mov
call
or
xchg
sti
fstps
dec
out
and
sahf
sti
fnstcw
addr16
divb
jbe
inc
out
jae
jae
xchg
aaa
xorl
insb
fnstcw
in
jae
add
pop
out
sbb
stos
jle
sti
ret
push
sahf
push
int3
lret
add
shlb
jae
fstps
xor
sti
jl
add
divl
aaa
lods
cmpsb
fidivrl
lahf
mov
cli
push
mov
mov
sahf
fwait
sub
mov
push
aad
mov
loopne
pop
add
cmpsl
mov
test
fbstp
insb
lds
icebp
pop
pop
inc
push
mov
jo
outsb
outsb
fisttps
ret
jl
idivb
adc
gs
rol
cmp
lahf
fwait
fwait
pop
jnp
gs
lea
enter
lock
int
add
xchg
cmc
or
pop
mov
iret
mov
and
push
aad
and
fcompl
es
sbb
jne
pop
loop
hlt
fcoml
and
mov
pusha
call
lods
test
mov
int
push
pop
pop
sti
mov
sarb
shl
dec
test
mov
mov
clc
shl
clc
jmp
lock
out
cli
mov
add
out
pop
push
fbld
inc
xor
test
in
fcoml
lea
mov
mov
dec
inc
sub
cmc
je
mov
fs
addr16
outsl
sub
jl
in
xlat
int
int
das
adc
mov
fbstp
jmp
mov
hlt
mov
nop
cmpsb
ffreep
cwtl
cli
data16
sbb
test
cmp
xchg
pop
decb
sbb
fsubp
mov
outsb
outsb
outsb
outsb
and
cwtl
aas
mov
movsl
das
mov
inc
clc
insb
xor
rol
mov
mov
lahf
sbb
ret
add
or
jno
loope
test
sbb
notb
in
lahf
int
int
mov
orl
mov
adcb
sbbl
cld
adc
jns
adc
ficoml
arpl
xchg
push
inc
nop
pop
cmpsb
jmp
lahf
insb
xor
add
jbe
mov
sbb
imul
dec
jae
mov
mul
pop
out
ror
imul
daa
rclb
pop
jae
sbb
in
cmp
push
ljmp
hlt
insb
iret
test
shlb
mov
cmpsb
sbb
jge
outsb
sbb
adc
dec
adc
mov
pop
cltd
pop
ss
pusha
ret
jae
xchg
pmaxub
out
add
cltd
dec
mov
or
inc
lahf
fnsetpm(287
fistps
imul
push
add
pusha
and
inc
mov
xchg
test
xor
push
push
stos
jmp
jge
mov
add
mov
lock
jl
adc
test
inc
and
ja
mov
pop
cld
push
mov
push
mov
fisubs
sub
cs
fmull
sbb
dec
add
data16
pop
inc
fisttps
nop
hlt
sub
iret
out
xchg
dec
inc
test
pop
out
fistps
fiaddl
cmp
pop
xor
lret
fsub
fsts
rclb
push
adc
sbb
mov
xor
adc
cld
clc
shlb
hlt
fucomi
mov
push
inc
sbb
pop
jl
ret
loopw
push
inc
mov
aad
jae
jae
mov
addl
fdivr
jb
movsb
out
sbb
loopne
sbb
icebp
inc
cmp
or
test
adc
and
pop
hlt
or
jge
test
jae
sti
push
in
enter
fs
lods
push
into
mov
cmc
shll
pop
sbb
xacquire
jp
cli
mov
das
out
mov
xor
out
popa
mov
mov
jo
cmp
jne
xor
jl
out
fdivp
mov
testb
jmp
mov
into
mov
adc
pop
jno
adc
imulb
jge
xchg
je
dec
ljmp
out
movsb
pop
cld
jmp
shrl
inc
iret
int
int
xchg
push
push
ds
aaa
jle
adc
out
dec
pop
repz
dec
bound
outsb
dec
insb
adc
mov
cwtl
push
jge
fucomip
pop
das
in
dec
inc
or
pop
jno
pop
adc
adc
mov
faddl
pop
movsb
dec
jmp
sbb
data16
lret
or
xor
jmp
mov
sahf
clc
cmpl
lea
xor
xor
xchg
sbb
ss
fwait
fwait
push
in
mov
mov
xlat
fwait
fwait
or
in
push
mov
je
cmp
popf
fwait
fwait
fwait
dec
cli
comiss
loopnew
sub
outsb
adc
aam
push
jnp
into
and
outsb
outsb
outsb
outsb
cld
pop
mov
popa
sbb
outsb
outsb
outsb
outsb
mov
lcall
xor
cld
insb
movsl
fisubs
sbb
lock
hlt
nop
push
xchg
lock
push
lahf
mov
fistpll
shr
psadbw
dec
sarb
fcom
sti
fdivl
mov
sbb
inc
in
xor
psadbw
pop
xor
fdivrs
rorl
and
mov
ja
inc
out
clc
not
imul
sbb
jb
icebp
mov
push
add
in
and
dec
add
fcmovnu
mov
mov
pusha
movsl
int
sbb
scas
or
rclb
test
or
xor
xchg
jno
inc
mov
inc
aas
mov
out
cmp
jo
mov
imul
pop
sahf
int
cvttps2pi
ret
xor
push
fcomps
xchg
decb
std
insb
imulb
jnp
mov
divb
iret
sbb
sub
xor
sub
nop
push
rcl
fcmovbe
push
sub
divb
jg
xchg
push
jae
pop
add
add
jo
mov
sub
cmc
xor
insb
xchg
fdivrs
rcll
fwait
sub
idivl
xor
or
jl
mov
outsb
scas
mov
cmp
lret
icebp
arpl
jge
cmp
icebp
jae
int
daa
nop
or
jo
mov
lahf
int
mov
xabort
adc
js
loope
pop
push
je
adc
ja
ljmp
sub
js
aad
shlb
xor
pop
xorb
cmp
mov
orl
mov
xor
dec
aas
jno,pn
cwtl
push
int
sbb
jae
decl
shrb
aaa
shll
cmp
loope
sbb
aaa
aaa
jae
sahf
cmpsl
xchg
sub
mov
data16
outsb
outsb
xchg
dec
mov
xchg
fs
mov
out
jnp
mov
xlat
pop
inc
inc
fidivl
out
aas
and
ret
rcr
leave
lahf
daa
or
out
xor
in
xchg
dec
mov
imul
outsb
outsb
pop
pop
pop
pop
adc
ljmp
jle
jge
inc
adc
cmp
loope
call
pusha
call
push
xchg
lret
and
out
out
or
lret
adc
dec
fbstp
and
pop
bnd
adcl
lret
fsubrl
hlt
add
aaa
jge
popf
mov
or
cmc
lret
movsl
jns
sbb
popa
jle
les
or
fwait
mov
push
ffree
inc
sub
sub
repnz
pop
dec
or
mov
jge
lret
adc
fwait
xor
push
add
fsubrl
stos
imul
icebp
mov
shll
int
sbb
jl
inc
in
inc
lahf
int
int
jno
xchg
xor
cmp
cmpsl
in
daa
xor
cli
sbb
cmp
and
or
fnstenv
aad
call
js
addr16
loopne
jbe
or
fsubrl
add
into
out
out
movsb
inc
addl
xorl
lock
je
push
dec
insl
sbb
jb
jecxz
add
testb
repnz
out
push
insl
jb
xchg
sbbb
adc
and
cwtl
stc
cmp
and
jmp
jae
shll
sti
subb
movsl
dec
lods
cmp
push
mov
js
imul
insl
jbe
fwait
ret
jo
mov
int
int
enter
xor
adc
jae
lret
outsb
push
mov
mov
mov
aam
cmp
addr16
rorb
lcall
push
add
xchg
jns
out
out
mov
or
sub
mov
cld
add
add
jp
cmpsb
and
jle
or
mov
ja
test
dec
lahf
int
pop
cmc
fcoml
stos
fs
xlat
mov
xchg
mov
push
sbb
test
sbb
xchg
leave
mov
stos
call
mov
mov
sub
xor
mov
jae
xchg
cmp
push
pop
or
mov
inc
negb
adc
fistpl
cmp
inc
and
arpl
add
outsb
outsb
aas
mov
leave
lods
mov
repnz
inc
pop
xchg
aaa
pop
jge
fs
inc
andl
mov
jp
or
shlb
nop
pop
mov
dec
out
out
or
dec
clc
std
adc
push
jnp
mov
movsl
iret
fisubrs
cmpsl
stos
mov
jb
or
insb
xor
icebp
shrl
dec
mov
aaa
aaa
aaa
sub
sub
push
ds
jle
aaa
aaa
jg
enter
mov
in
lcall
mov
int
int
or
idivl
mov
cld
or
push
add
adc
mov
bound
push
cmp
outsl
iret
stos
mov
mov
test
mov
mov
stc
sbb
mov
or
pop
fimuls
sub
adc
cs
dec
xlat
pop
adc
jle
xor
push
inc
mov
lcall
lods
add
es
or
jae
fdivrl
xchg
xlat
push
dec
test
mov
shll
and
mov
inc
xor
mov
sti
fnop
push
inc
push
mov
in
ret
sbb
aas
fistpl
rclb
push
out
rol
add
pop
pop
mov
or
cmp
cli
divb
sub
or
repnz
adc
out
shlb
mov
xlat
out
cmp
imul
jp
outsb
adc
fcmovbe
fisubl
in
mov
fwait
mov
cmp
scas
adc
icebp
mov
cltd
fcmove
es
dec
popa
push
dec
enter
lods
mov
or
mov
or
xlat
and
int3
inc
jle
mov
in
int
dec
sub
mov
add
and
cld
lock
fidivrl
insl
je
notb
or
in
std
lods
cli
and
jae
das
fstps
les
scas
addr16
add
pop
or
out
movsb
jne
mov
fdivrl
popa
sub
jp
xchg
cli
push
pop
jmp
fwait
push
xor
sub
inc
sbb
adc
mov
addr16
inc
add
cmpsb
mov
fcmovne
rolb
adc
data16
add
fwait
jmp
enter
mov
jmp
sti
lret
adc
orl
ret
cmp
jle
mov
hlt
add
fists
shll
arpl
dec
lcall
mov
lcall
or
inc
out
out
shll
sbb
out
out
or
inc
cmpsb
repnz
loop
out
out
xorl
pop
sahf
insb
aaa
push
jge
in
and
ss
pushf
outsb
aas
adc
aaa
aaa
aaa
or
movb
std
insb
aas
jo
aam
or
es
dec
cmp
test
mov
das
pusha
es
jmp
pop
mov
mov
fdivp
add
sti
jl
add
aaa
sbb
jp
dec
data16
in
addr16
popa
roll
dec
xor
insl
jecxz
sahf
ss
ds
aaa
aaa
int3
dec
xchg
inc
pop
stos
sbb
les
fnstcw
cmp
je
pop
test
jmp
xchg
push
test
int
int
dec
popf
mov
stc
icebp
xchg
inc
mov
lahf
rclb
or
mov
lea
jb
shll
jp
and
aaa
aaa
aaa
adc
std
fldenv
or
fstpt
add
out
adc
js
fsub
sub
xorb
out
mov
dec
out
adc
inc
in
pop
hlt
jbe
and
add
dec
es
out
iret
mov
rcll
dec
sti
int
int
inc
sub
divl
sbb
pop
testb
clc
cli
inc
sbb
out
out
movsl
rcr
xchg
cmpsl
mov
push
add
das
test
ds
mov
fiaddl
sub
inc
rorl
mov
rcrl
push
cmpl
jae
jae
jbe
xor
jb
xchg
lock
and
int
in
jae
pop
jo
in
jecxz
aas
or
mov
int
sbb
add
lock
lock
cltd
flds
sub
mov
data16
mov
or
adc
push
mov
movzwl
sahf
in
repz
popa
mov
mov
fildll
daa
adc
cs
leave
jle
sbb
cli
adc
fimuls
and
jbe
jl
adc
icebp
into
ret
mov
mov
xchg
push
mov
test
addr16
pop
adc
in
adc
out
mov
push
int3
fsubl
outsb
outsb
outsb
outsb
into
arpl
xchg
add
cmp
subl
dec
push
inc
mov
xor
mov
cmp
cld
imul
outsb
popf
rorl
bound
ret
out
hlt
xor
outsb
outsb
cli
iret
je
xchg
adcl
aad
mov
sbb
fistps
int
add
cmpsl
dec
add
add
insb
outsb
cs
ds
dec
clc
call
cmp
sbb
ss
scas
daa
sbb
cs
xor
lea
int
addr16
push
outsb
popf
popf
rcr
mov
dec
or
iret
int
ret
dec
bound
dec
pop
jo
in
dec
jmp
inc
mov
pop
in
xor
negl
lahf
int
mov
jp
jo
outsb
cs
or
movsb
adc
jle
scas
out
arpl
adc
push
out
ret
mov
into
out
pop
lcall
sub
xchg
xor
out
adc
int3
lods
adc
xchg
jge
call
out
test
add
sub
mov
dec
out
mov
lar
mov
adc
fwait
fwait
fwait
fwait
jl
push
aad
daa
repz
and
jge
lahf
cmp
push
jbe
dec
sub
aaa
aaa
xchg
jns
int
and
mov
cmp
xchg
adc
mov
cld
neg
xor
test
adc
ljmp
faddl
ljmp
mov
mov
and
ret
insb
mov
mov
xchg
imull
sub
dec
pop
add
aad
sarb
lahf
int
xor
sbb
ds
mov
mov
es
xchg
pop
arpl
jae
jae
lea
adc
lret
iret
out
jae
sub
xor
xor
rcll
push
hlt
call
xchg
adc
scas
dec
dec
jnp
xchg
mov
cmpb
sbb
pslld
addr16
fs
inc
iret
testb
je
xlat
ror
int
into
dec
xor
push
rcll
jmp
std
push
push
loopne
push
loop
test
mov
adc
lea
int
iret
les
add
add
fsubl
jne
xlat
jl
ljmp
jecxz
sub
sbb
jno
jne
call
and
push
std
mov
inc
mov
lahf
in
pop
cmc
loopne
aaa
aaa
aaa
aaa
jg
mov
dec
pop
test
fs
sti
inc
jge
leave
inc
mov
jae
jae
xchg
mov
lock
cltd
cmp
jae
xor
fbld
push
pop
loop
jo
movsl
int
int
ja
loopne
add
pop
lss
int
int
jae
pop
icebp
jb
orb
lahf
int
sub
mov
pop
test
mov
aaa
aaa
jnp
repz
test
push
lods
cmp
test
and
aaa
dec
lret
js
negb
sti
fcoml
add
xchg
jmp
push
clc
addr16
jae
pop
add
xchg
loop
int
int
dec
mov
test
pop
bound
mov
daa
mov
int
int3
sub
mov
push
aaa
ljmp
mov
clc
pop
pop
or
pop
cmp
mov
pop
clc
fcoms
aam
inc
mov
aam
mov
xor
js
pop
jecxz
xchg
ret
movsl
push
mov
out
cmp
mov
fwait
sub
int
out
mov
leave
xchg
sti
cmpsb
in
cmp
xchg
sbb
imul
cmpsl
add
out
mov
xor
je
or
out
out
test
mov
dec
test
popf
sub
ret
or
iret
out
inc
dec
insl
xchg
adc
jbe
cmp
sahf
outsb
sahf
jae
aad
sub
loope
dec
push
sbb
fwait
and
jae
add
scas
push
pop
gs
jge
mov
test
mov
out
mov
lcall
pop
mov
add
mov
sahf
loopne
mov
mov
xor
out
ret
mov
adc
fistpl
inc
movsl
sbbb
stos
sub
imul
shl
dec
push
inc
xchg
xchg
pop
loopne
int
xor
pop
xchg
mov
stos
fbld
shll
sub
aad
push
inc
int3
lret
scas
lods
test
out
dec
push
cmp
movsb
popa
push
out
xor
add
jge
shld
out
and
xchg
repnz
int3
fisubrl
and
stos
xchg
int
pop
iret
lcall
ret
testl
adc
add
mov
sti
fnstcw
mov
xchg
cld
bound
test
ret
dec
call
inc
adc
aad
mov
ret
cmp
mov
pop
ds
test
xchg
test
imull
scas
clc
fldenv
mov
test
mov
or
xor
push
lret
cli
fyl2x
in
lods
push
xchg
jne
in
jo
insb
lret
dec
mov
push
push
mov
dec
mov
push
mov
dec
cld
arpl
lock
fisubs
push
or
push
fwait
fwait
fwait
fwait
dec
and
cmp
xchg
inc
jle
add
and
sbbb
clc
sbb
test
adc
sbb
sub
cli
xchg
cmc
xor
push
pop
mov
adc
mov
std
insb
outsb
in
xor
rcrb
mov
aam
fld
mov
xchg
into
adc
mov
js
mov
test
out
aaa
inc
pop
inc
sub
mov
clc
ss
pop
lock
lock
and
push
ret
imul
cmp
dec
in
or
xchg
jae
jae
gs
lods
dec
lahf
lahf
pop
loop
jae
jae
loopne
std
in
jg
mov
or
jae
jae
lods
mov
push
jl
ds
fcmovne
mov
push
and
mov
fs
fwait
fwait
and
and
push
lods
sub
mov
testb
adc
sbb
in
andb
add
cmp
int
xchg
sub
dec
push
fnstenv
inc
test
add
into
or
mov
xlat
and
stc
hlt
incb
pop
pop
std
mov
int3
xlat
call
js
cwtl
ds
lock
or
or
loop
bound
stos
xchg
sbb
aaa
mov
lods
cli
test
sbb
adc
repnz
mov
adc
jbe
xchg
js
and
pop
adc
push
nop
sbb
mov
andb
xchg
stos
or
pushf
fwait
fwait
adc
jl
xchg
into
fdiv
or
scas
lock
add
jl
mov
sub
add
out
popf
pop
sbb
aaa
aaa
aaa
push
push
mov
pop
pop
cld
push
xchg
aaa
inc
loop
lahf
insl
pop
dec
push
xchg
and
xor
sti
jbe
icebp
pusha
cmpsl
test
movq
xor
jne
add
js
popf
push
pop
inc
pop
inc
adc
iret
out
and
xor
sub
cmpl
and
les
je
lods
out
mov
jge
dec
push
pop
or
lds
clc
dec
pop
roll
jp
pop
and
push
cld
insb
outsb
ljmp
cmp
sbb
sub
xchg
enter
inc
es
jbe
das
adc
popf
jge
push
jle
cli
out
iret
ss
sub
stc
notb
fistl
sar
cwtl
es
push
mov
insb
js
add
jnp
mov
hlt
xchg
sub
es
fiadds
les
pop
lock
jae
sub
sub
mulb
add
test
dec
imul
int3
and
pop
sub
dec
push
xlat
gs
fsubl
pop
call
mov
mov
mov
fwait
outsl
into
ret
inc
push
sbb
jo
mov
out
shl
call
cmp
sahf
fistl
les
add
jle
cmp
push
ror
add
jp
iret
adc
cs
ds
pop
push
enter
cmpsl
push
or
cmpsb
push
xor
mov
js
outsb
outsb
cmp
imul
jge
inc
pop
cltd
cltd
aaa
andb
mov
sub
popf
shlb
jae
push
add
ss
mov
mov
scas
xchg
lds
andl
mov
and
ljmp
sbb
push
pop
sti
adc
lahf
adc
arpl
push
inc
pushf
lods
cli
push
inc
xor
or
pushf
sub
and
xor
sbb
inc
sbb
mulb
cmp
movsb
fdivrs
mov
pusha
out
outsb
outsb
sub
sahf
in
rorb
shrb
outsb
outsb
ljmp
and
sub
mov
outsb
pop
add
mov
pop
xchg
push
sbb
incb
mov
jl
scas
cs
repnz
sti
mov
sub
lods
insb
mov
das
ds
aaa
aaa
inc
adc
pop
icebp
mov
addb
push
fdivrl
lods
outsl
and
xor
ret
mov
dec
push
out
pop
sub
dec
or
xchg
dec
xor
sti
fsubrl
addr16
negl
rcl
push
addr16
fists
aaa
jge
push
aaa
push
rclb
mov
inc
cmp
clc
outsb
outsb
jb
sti
shrb
fwait
xor
cld
fnstsw
cltd
int
outsb
outsb
outsb
jne
pop
ret
bound
popa
jg
mov
jecxz
adc
xchg
std
sub
lahf
in
xor
mov
sti
mov
popf
push
psubq
cmp
xor
iret
in
addr16
mov
or
bound
bound
push
inc
adc
fildl
aas
fwait
fwait
jno
mov
push
pushf
mov
lret
mov
push
jmp
iret
out
idivb
jbe
sbb
pop
cmpsl
dec
sbb
mov
add
pop
test
out
add
jle
jae
clc
pushf
inc
andl
cmp
inc
mov
rcpps
mov
adc
scas
cli
rcrb
lret
icebp
into
loop
out
int3
clc
frndint
insb
mov
push
dec
bndldx
xchg
in
outsb
outsb
pop
test
jle
and
cld
pop
cld
insb
outsb
or
xor
xchg
and
ss
lods
sbb
rcr
jno
int
ja
jb
test
sti
pop
in
push
bound
into
sbb
movsl
xor
andb
in
xchg
mov
jne
rol
es
int
int
sub
in
popa
and
adc
iret
int
rorl
mov
dec
ret
pop
in
cmp
dec
sub
dec
jmp
fcmovbe
lods
adc
dec
xlat
mov
cmp
pop
jg
packuswb
movsl
loopne
fld
imul
mov
pop
jne
lret
test
loopne
and
sarb
add
add
mov
inc
sub
notl
lret
jae
jae
sbb
mov
mov
jae
mov
mov
mov
out
jae
loop
push
data16
ja
out
out
mov
ret
in
pop
xchg
or
fwait
sbb
js
pop
fsubl
ss
sub
jno
inc
push
out
add
pop
jl
shlb
fcompl
mov
leave
pop
and
js
shrd
insb
adc
xchg
jp
push
fisttps
insl
cmp
out
adc
pop
mov
js
pop
sahf
sub
mov
int
stc
lahf
and
mov
filds
icebp
icebp
cltd
sahf
out
int3
sub
les
test
push
lcall
cs
fsubrs
add
ljmp
mov
ret
or
xor
outsb
xchg
enter
jge
fldcw
jge
cltd
or
jle
pop
fdivrs
addr16
sub
cli
push
aas
cwtl
aaa
mov
jbe
xor
fs
jge
mov
ds
lock
testb
xchg
mov
push
stc
dec
mov
push
ret
dec
int
push
js
push
jne
in
xchg
add
pop
cld
int
int
icebp
xchg
out
xchg
js
addr16
cmp
lock
int
int
sub
das
mov
sahf
addr16
push
jp
ds
mov
andl
aam
mov
mov
or
xor
xor
cld
pop
jecxz
fldcw
push
in
mov
aaa
aaa
aaa
loopew
mov
mov
or
ss
aaa
aaa
sub
adc
js
ret
mov
js
jle
negb
sbb
insl
std
insb
inc
xchg
push
adc
pop
aaa
xlat
mov
enter
jbe
mov
and
inc
mov
hlt
inc
mov
xchg
jnp
jle
aaa
inc
ja
dec
add
add
adc
bound
addps
mov
hlt
pusha
sub
outsb
cli
nop
push
dec
xchg
mov
xchg
jg
and
insb
outsb
cmp
cmp
push
add
outsb
jl
mov
mov
int
or
loop
lds
loop
mov
int
int
nop
scas
inc
pop
nop
pop
ret
add
fcomi
add
dec
loop
cmpsl
lret
out
mov
insl
jmp
or
adc
xor
jg
out
lock
scas
or
dec
push
in
push
lods
mov
sahf
outsl
out
pop
adc
mov
fs
mov
fwait
js
mov
testl
subb
rorb
ja
into
nop
rcrb
jl
ljmp
aaa
aaa
mov
fisubrs
inc
and
jnp
pop
in
mov
pop
xor
out
out
mov
xor
decb
jae
jae
imul
pop
sarb
jae
push
das
loop
and
and
movsl
addr16
out
fisttpl
add
repnz
xor
push
lea
adc
aaa
aaa
mov
mov
dec
jecxz
push
dec
sbb
add
ljmp
fmull
testb
leave
fwait
jg
dec
pusha
lahf
pop
je
mov
jb
push
fdivrs
dec
outsl
dec
fcmovne
int
sti
xabort
or
clc
or
repz
iret
int
insb
lds
cmpsl
mov
or
das
mov
mov
in
xchg
xor
mov
mov
push
test
pop
loop
popa
sbb
and
cmpsb
data16
adc
int
add
test
test
int
int
cwtl
add
dec
stc
fidivrs
out
inc
iret
mov
call
pop
pushf
loope
or
jp
icebp
mov
add
mov
int3
jnp
xchg
pop
xchg
scas
shr
insl
sub
sbb
add
imull
test
ja
mov
mov
data16
sbb
loop
mov
addr16
sub
xchg
sub
popa
jge
stos
test
addb
mov
push
ret
jbe
mov
jp
ds
sbb
insb
shrb
popf
and
les
popf
dec
cmp
inc
xchg
push
es
jl
push
test
xor
push
loope
xchg
in
sti
mov
andl
lods
insb
or
jle
cmpsb
iret
out
iret
jg
movsl
cli
fs
sbb
mov
mov
push
out
push
dec
adc
mov
mov
inc
pop
add
rorl
mov
gs
and
outsb
outsb
outsb
cmp
cli
jbe
sbb
outsb
outsb
outsb
outsb
aad
mov
dec
jl
imul
inc
dec
jge
outsb
outsb
and
xchg
out
xor
clc
in
ljmp
out
mov
fwait
jne
popa
aad
cmp
in
jbe
out
out
cmp
and
mov
insl
xor
out
out
in
mov
inc
bound
mov
cmc
dec
int
inc
cvtpd2dq
ror
int
or
orb
int
int
mov
lock
dec
mov
int
int
add
rorb
popf
jno
sbb
arpl
pusha
rep
push
jno
push
ljmp
sub
jb
daa
xchg
mov
std
ds
pop
addb
pop
pop
icebp
jg
lret
setle
hlt
scas
pmulhuw
ds
call
push
ds
fwait
fwait
lea
xchg
imull
jbe
aam
xor
std
adc
jae
mov
movsb
inc
mov
cmp
outsl
sbbl
xor
add
push
jae
mov
cmpsl
inc
cld
dec
movsb
push
dec
cltd
adc
add
mov
lahf
fstpt
mov
aaa
aaa
push
cmpsb
cli
insl
fwait
gs
enter
aaa
aaa
aaa
cld
push
in
das
clc
addr16
dec
aam
pushf
adc
loope
aad
jle
ret
fsub
out
dec
inc
sbb
or
sti
sahf
mov
inc
add
stos
pop
xchg
or
jns
push
jge
fcmovbe
shl
stos
lret
xchg
icebp
mov
xor
jo
out
and
shlb
lock
fisttps
inc
pop
stos
sbb
imul
iret
int
int
cmp
mov
repnz
sbb
or
pushf
ds
popa
dec
push
xchg
ds
fwait
fwait
out
cmp
and
or
mov
cmp
nop
dec
addr16
xlat
bound
mov
mov
dec
aaa
mov
ret
rcl
subb
clc
cltd
fsubrs
int3
repz
mov
frstor
xchg
xor
mov
mov
push
jle
mov
js
mov
fdivl
pop
jge
cwtl
das
add
clc
mov
mov
int
mov
std
add
inc
loop
pop
xor
fcmovne
out
in
push
cmp
fwait
sbb
dec
jl
or
and
es
dec
fnstsw
sbb
sbb
ss
inc
xchg
aam
sbb
repnz
add
dec
jmp
lret
jne
jb
shlb
dec
fsubs
xchg
push
and
add
add
xor
sub
jp
jge
mov
pop
repz
ds
pop
mov
mov
dec
lret
sbb
movsb
not
sbb
or
dec
sbb
or
decb
aaa
mov
shl
add
and
and
and
aaa
aaa
aaa
hlt
mov
nop
gs
movsb
pusha
in
add
scas
xor
jnp
fwait
bound
mov
roll
add
nop
clc
fs
pop
repnz
jl
mov
mov
mov
stos
xchg
mov
ret
cmp
pop
pop
push
xchg
fwait
fistpl
addb
rcr
mov
fwait
fwait
movsb
sbb
popf
mov
loopne
push
push
pop
jne,pt
xchg
dec
inc
add
mov
hlt
mov
mov
shrb
aam
push
jecxz
lcall
xchg
andl
push
add
test
aas
dec
sahf
xchg
aaa
xor
sub
mov
sub
mov
cli
insb
mov
and
cmp
aaa
aaa
sbb
push
adc
cmp
pop
pop
pop
fsubl
mov
je
pop
aam
fs
mov
mov
fsubrl
xabort
out
xor
lret
mov
xor
bound
xlat
pop
jecxz
aaa
adc
xchg
jae
sti
cmp
or
xor
mov
addr16
sbb
fsubl
inc
lret
int
int
repnz
stc
xor
pushf
fs
bound
adc
adc
pusha
andl
or
int3
out
mov
sbb
mov
adc
and
sbb
mov
int
aas
adc
into
cltd
mov
rep
pop
sbb
int
decb
stc
mov
sbbl
scas
xchg
lds
add
mov
push
lret
iret
push
aam
and
ja
sbb
ror
jl
aad
push
iret
out
testb
or
movsl
je
cmp
ret
lods
fwait
fcomi
ret
jbe
out
mov
xchg
or
lahf
fwait
fwait
fwait
lds
pop
push
inc
pushf
add
cmp
cmp
add
add
sub
sbb
sti
fdivl
lret
push
mov
fbld
lahf
pop
sbb
pop
inc
lcall
out
out
push
sbb
fs
mov
adc
push
mov
divl
insb
adc
std
or
jbe
jae
jae
mov
jbe
sbb
les
mov
in
jae
jae
fisttps
std
inc
xorb
ljmp
jae
pop
dec
popa
xchg
mov
mov
pop
lcall
dec
sti
fdivr
sub
insl
ja
push
std
test
loope
jae
movsl
ds
jae
pop
xor
mov
lds
xchg
dec
test
call
or
rolb
dec
pop
sarb
out
rorl
and
xlat
adc
out
sub
fyl2x
std
in
push
lret
test
mov
sahf
int
pop
into
inc
movsb
xchg
lock
ret
push
inc
pop
loope
mov
jae
sti
fs
adc
hlt
jbe
push
ds
shll
aas
mov
or
fnstenv
xchg
adc
xor
xlat
out
inc
fwait
cmpb
and
cli
out
pop
mov
stc
dec
dec
cld
in
out
pop
cltd
lea
xor
push
cli
cwtl
xchg
xor
xchg
mov
sarb
jae
aad
inc
dec
jne
cld
into
mov
jae
jae
sub
stos
adc
addl
mov
hlt
inc
imul
test
add
aaa
aaa
pop
jne
jo
add
inc
mov
js
dec
pushf
enter
jnp
loop
xchg
dec
mov
dec
lods
int
xchg
clc
mov
jno
outsb
sarl
fdivrl
or
jbe
xor
es
ret
icebp
test
in
fucomip
adc
in
cwtl
push
stos
idivl
jl
aaa
test
pusha
xchg
loop
sub
and
in
dec
lahf
lods
insl
push
loopne
clc
out
mov
int
and
test
outsl
and
ss
aaa
mov
pop
mov
dec
mov
push
or
jge
or
xor
mul
out
push
mov
and
sub
jbe
push
daa
sub
dec
push
rclb
clc
jne
dec
loop
rcr
lock
fisttpl
imul
sahf
fwait
fwait
clc
lret
les
fsubrs
push
pop
out
mulb
lock
cs
inc
fisttps
out
out
adc
daa
mov
mov
adc
mov
push
jg
cmp
mov
pop
lods
imul
outsb
push
or
sub
es
arpl
outsb
outsb
outsb
outsb
lahf
imul
push
xor
add
insb
outsb
outsb
outsb
cli
cmp
cmp
adc
cmp
aaa
std
cmpb
repz
mov
int
mov
test
ret
add
jl
or
int
pop
cmp
idivb
mov
mov
loope
inc
daa
lock
xchg
fwait
fwait
cld
sbb
mov
push
test
stos
xor
je
cmp
sbb
sti
lahf
divb
lcall
sbb
out
dec
inc
jecxz
pusha
dec
enter
cli
mov
pop
sbb
sbb
aaa
aaa
pop
or
jge
aas
sbb
std
dec
frstor
ja
ss
aaa
xchg
arpl
jl
dec
mov
mov
xchg
shlb
out
out
stc
gs
sahf
clc
push
mov
outsb
outsb
push
dec
pop
adc
outsb
outsb
imul
nop
add
insb
sbb
jle
aaa
aaa
fidivrs
push
cmc
inc
sahf
sub
je
outsb
push
cmp
shll
movsl
jo
out
xchg
and
fstpl
aas
fwait
rcl
mov
jg
cmp
push
sbb
sub
outsl
or
mov
scas
push
inc
mov
test
xchg
pop
cli
sti
pop
ljmp
mov
fst
out
loopne
inc
pop
movsl
hlt
dec
cmp
push
je
neg
pop
rorb
movsb
mov
dec
test
fidivs
add
ret
add
sbb
loop
call
xchg
repnz
fdivl
mov
mov
jb
js,pt
lahf
fwait
fwait
pop
jb
rcrb
js
js
jge
outsb
outsb
in
and
incl
call
cmc
lret
cmp
mov
rcrl
mov
into
adc
out
mov
jbe
call
or
or
cld
loopne
clc
fistpll
mov
fidivl
mov
mov
loope
mov
jp
mov
mov
adc
pop
insb
xor
cmp
test
jmp
xchg
lock
roll
and
add
jl
xor
adc
push
xchg
decl
mov
xor
clc
aaa
add
and
loop
loop
lcall
push
fidivl
add
mov
mov
cmp
jb
sti
leave
ret
pop
inc
pushf
pop
mov
mov
in
addr16
xchg
out
mov
fldenv
mov
mov
in
jmp
push
into
dec
jge
fwait
fwait
fwait
cmp
lds
mov
xor
scas
xor
ja
out
loopne
or
ss
jae
jae
jge
push
pop
test
xchg
pop
add
in
addr16
add
mov
in
in
incb
xchg
rolb
sarb
sub
data16
mov
testl
dec
pop
js
and
shrl
and
push
xor
into
sbb
pop
dec
in
icebp
dec
mov
insb
mov
cmp
push
scas
dec
and
dec
mov
mov
ret
dec
jg
dec
adc
fwait
fclex
sbbb
pop
cwtl
xor
fwait
fwait
fwait
fwait
xor
sahf
push
push
fbstp
jg
int
lahf
xchg
ret
test
adc
or
pop
pop
enter
call
or
sbb
repnz
pop
jb
test
std
insb
sbb
cmpsl
or
insl
rclb
xchg
imul
ds
das
add
rol
or
fsubrl
sbbb
call
outsb
out
fcomp
dec
mov
sub
sub
jbe
jge
clc
or
dec
cld
xchg
out
fnstsw
out
inc
sahf
lods
xchg
xchg
adc
stc
xchg
jbe
lock
enter
inc
xor
aaa
jo
cmp
int3
push
sub
test
fcmovne
out
sbb
xor
xor
cmpsb
in
aaa
cld
jno
outsb
lahf
jp
add
cmp
scas
clc
jbe
aas
pop
sbb
cli
pop
lock
inc
dec
xchg
pop
xor
adc
inc
outsl
pusha
iret
out
pop
addr16
adc
xchg
js
aaa
mov
movsl
in
insb
sub
rcll
jb
negb
in
aaa
movsb
cmc
adc
lcall
out
les
mov
lock
cs
adc
in
cmp
es
mov
cmpsb
int
outsb
outsb
outsb
lahf
stos
mov
and
loope
push
xlat
out
outsb
outsb
outsb
outsb
sub
jnp
adc
xchg
arpl
orl
js
add
scas
in
lock
sub
xchg
ficoms
xor
sti
sub
xchg
aad
out
mov
js
jae
dec
jl
out
out
sub
or
xchg
insb
cld
lret
out
add
jb
xchg
adc
cmp
and
jg
out
xor
jmp
jno
pop
ret
jbe
mov
and
sub
pop
dec
xchg
in
and
lret
pop
adc
or
cmc
push
mov
adc
lock
sbb
mov
inc
cwtl
dec
aas
fwait
fwait
xchg
int3
mov
push
push
adc
dec
lods
cs
and
mov
or
sahf
int
aas
and
out
pop
or
out
test
ror
dec
mov
aas
fwait
fwait
sbb
aad
cli
arpl
jg
stos
or
jb
shlb
adc
ret
sub
aaa
aaa
mov
push
das
mov
sub
insl
lret
or
mov
insb
outsb
sbb
in
and
push
xchg
sub
fdiv
in
ja
and
fldcw
pop
fnstcw
sarl
jl
jae
jae
jno
lock
cli
test
xor
jae
jae
inc
rorl
je
xchg
push
mov
jae
jae
les
cltd
sub
aas
sub
adc
jae
jae
outsb
or
cmp
mov
int
addr16
fwait
scas
sub
gs
dec
int
int
loopew
jecxz
mov
imul
out
add
adc
sub
movsb
inc
and
or
sti
lcall
clc
push
cmp
call
ficoml
mov
enter
mov
mov
mov
fsts
or
push
fstpl
icebp
cmp
hlt
fxtract
xchg
repnz
loopne
daa
mov
cli
out
cmc
loope
les
jae
insb
je
pop
stc
cmp
add
mov
test
sub
loope
push
cwtl
jg
lahf
adc
xchg
cmp
in
rorl
mov
cmpsl
pop
xchg
mov
loopne
ret
ss
mov
xchg
lods
pusha
mov
and
pop
xor
call
data16
xor
out
mov
push
fldt
jae
lahf
rcll
xchg
outsl
cmp
xchg
xchg
pusha
mov
cli
dec
mov
es
cmp
jge
aaa
aaa
orb
push
mov
jg
mov
cmc
subb
lock
dec
sub
shr
ror
out
test
push
lcall
addr16
int3
iret
or
mov
aaa
aaa
pop
data16
testb
or
les
sarl
aaa
subl
pushl
outsb
outsb
scas
clc
sub
sub
xor
dec
or
icebp
insb
outsb
outsb
scas
jl
sbb
out
test
jmp
inc
inc
dec
int3
pop
adc
rcl
outsb
outsb
lahf
fcmovnu
in
cltd
fs
dec
cmpsl
hlt
test
jns
mov
out
adc
daa
clc
pop
push
sbb
mov
insb
aaa
mov
sbb
out
bound
xor
sbb
lret
clc
fdivrl
sub
cs
bound
push
repz
mov
in
fisubrl
mov
inc
push
mov
int3
fwait
fwait
stos
jg,pt
push
fmull
jno
jl
cmp
pop
lcall
mov
jo
and
add
jae
or
or
mov
jae
adc
or
mov
xorl
sbb
sbb
add
insb
outsb
pop
adc
push
les
jge
mov
cld
dec
or
pop
rcrb
adc
adc
idivb
movsl
test
not
outsb
outsb
outsb
pop
js
mov
dec
sub
sbb
outsb
outsb
mov
sub
mov
sar
fnstcw
add
int
in
enter
insl
ja
jg
pop
lahf
or
leave
cmp
sub
or
rol
nop
mov
jae
ss
xchg
gs
hlt
fnstenv
add
aaa
jmp
mov
cmpsl
inc
cli
pop
repz
loopne
nop
cs
dec
jbe
lahf
int
fisubs
push
ret
jl
pop
mov
cmp
pushf
fwait
fwait
mov
or
imul
fsub
mov
dec
aam
dec
imul
mov
adc
mov
cli
mov
movsl
addr16
xor
in
div
mov
inc
and
mov
icebp
leave
pop
mov
lahf
push
adc
cmp
int
int
stc
adc
ja
out
lcall
jns
dec
jl
cs
jae
sti
cmpsb
ret
xor
je
pop
cmp
das
xchg
mov
add
fwait
ljmp
in
sbb
hlt
mov
adc
std
movb
in
movsl
cmc
mov
jg
lods
pop
iret
int
lret
cs
adc
ffreep
aaa
jbe
pop
inc
outsl
and
sti
aaa
aaa
aaa
mov
xor
sbb
mov
inc
outsl
fidivrs
jae
xlat
cltd
rorl
jo
lahf
sbb
int3
into
push
and
fwait
cmp
sub
out
cmpsl
fisubs
mov
std
push
sbb
lahf
inc
jg
add
sahf
cmpsl
js
arpl
cld
lods
clc
xchg
jge
out
add
adc
sub
test
pusha
sub
mov
sub
insb
pushf
gs
pop
push
in
outsl
mov
repnz
js
lds
jne
xchg
stc
das
ss
fwait
stos
dec
jbe
pusha
shrl
mov
mov
jle
data16
xor
jae
sub
fs
xchg
sbb
outsb
shlb
in
inc
xchg
jnp
jge
mov
out
add
movsl
test
int
lahf
mov
mov
movsl
push
mov
insl
pop
pop
sti
mov
pop
sub
in
jae
cwtl
inc
pushf
lahf
adc
das
push
sahf
adc
sahf
or
sbb
push
mov
sub
cmp
sbb
jbe
jne
scas
outsb
lock
out
divb
jle
push
movsl
push
adc
sub
cwtl
xchg
insl
jl
xchg
dec
nop
mov
iret
or
fwait
fwait
fwait
mov
int
and
cli
adc
outsl
jno
cmp
mov
mov
clc
and
push
or
not
imul
aaa
aaa
aaa
aaa
movsl
pop
or
pop
jge
aaa
ds
iret
mov
mov
xchg
pop
clc
sub
cltd
jp
aas
fstpt
mov
mov
xor
xor
or
lods
subb
notl
movsb
inc
dec
add
jae
lahf
fsubrl
pop
lahf
sub
pop
inc
rorb
dec
js
inc
aas
xor
outsl
fs
loopne
lock
cld
js
inc
cld
shufps
push
adc
mov
sub
push
test
sub
fmull
stc
sub
or
adc
fdivl
test
out
testb
cmp
in
sub
mov
out
out
mov
or
pusha
mov
xchg
call
or
repz
mov
sarb
out
mov
int
arpl
je,pt
insb
push
ds
push
mov
mov
xchg
xor
in
movlps
addr16
or
pop
sbb
popa
or
push
pop
hlt
mov
mov
fst
pop
aaa
inc
nop
sub
std
adc
pop
jmp
mov
xchg
lcall
and
mov
or
cs
cmpsl
sbb
jo
je
lods
jae
adc
jbe
aam
jmp
mov
jae
add
cmp
mov
adc
int
pop
loop
paddb
outsb
or
cli
fnstcw
call
add
lods
push
sub
js
sub
aas
push
or
lret
xchg
out
out
sahf
mov
das
cmpsl
lea
out
ret
ficoms
nop
call
into
les
mov
jecxz
fadds
mov
loope
sti
fdivl
clc
cld
mov
movl
jbe
mov
movsb
sbb
into
and
repnz
or
fsubs
sub
insl
add
fucom
jo
mov
adc
int3
add
cmp
pop
ret
in
mov
pop
cmc
mov
xor
jp,pn
ja
jl
dec
ds
das
hlt
insb
outsb
inc
jg
outsl
shrb
dec
aaa
aaa
aaa
mov
rolb
add
push
scas
cwtl
popf
or
jle
aaa
aaa
rolb
xorb
pop
inc
mov
fwait
fwait
fwait
mov
jns
icebp
sbb
mov
fwait
fwait
insl
dec
jmp
idivb
push
dec
or
mov
mov
insb
sbb
mov
mov
mov
mov
mov
imul
push
popa
out
out
push
jle
cmp
lret
mov
repz
imul
movsl
jl
aaa
pop
jge
push
sar
divl
pop
push
or
cmpsb
imul
add
fwait
sahf
repz
out
cld
stc
lret
fidivrl
loope
loop
pop
add
fstps
into
in
mov
mov
ljmp
cld
push
cmp
scas
lods
jae
test
mov
mov
fdivrl
aaa
mov
ficoml
std
or
add
sub
fdivrl
insb
sti
inc
sbbb
mov
adc
rolb
icebp
mov
adc
pop
inc
aaa
aaa
fists
insb
pop
ret
mov
add
xchg
outsb
mov
jae
negl
mov
mov
dec
add
mov
and
mov
aas
mov
cmpb
jl
adc
outsb
outsb
bound
jg
aad
dec
xor
insb
es
xlat
clc
fnstcw
inc
ret
lretw
out
sahf
int
pop
mov
sar
sbb
movsl
sahf
push
jecxz
xchg
add
int3
mov
pop
adc
scas
test
mov
int
aas
fwait
sar
jecxz
repnz
rol
dec
mov
xor
fnsave
mov
ds
and
les
jl
and
fwait
fwait
pop
daa
adc
adc
stos
mov
fwait
fwait
fwait
mov
dec
jbe
mov
cli
pushf
adc
mov
out
xchg
cli
inc
cmp
fnstenv
cmc
outsl
mov
out
lret
dec
cmpsl
mov
sbb
outsb
outsb
outsb
pop
ss
and
xor
jns
cwtl
and
outsb
outsb
outsb
std
sbb
adc
jecxz
sbb
outsb
pop
les
pop
inc
outsl
mov
rclb
dec
pop
bnd
jmp
cvtps2pd
mov
in
xchg
lock
je
xor
dec
pop
or
add
int
int
gs
loopne
icebp
pop
or
int
mov
ss
sub
dec
out
out
jp
aaa
pop
popa
lahf
and
incb
or
out
out
xchg
and
jmp
lods
push
xor
push
cmp
mov
shlb
cwtl
cli
inc
popl
jae
dec
push
jb
aam
mov
aam
insb
cs
lret
xor
stos
lods
dec
sub
aaa
aaa
ja
rol
stos
or
test
js
aaa
aaa
les
push
fdivrl
jbe
jae
xchg
testb
mov
fdivrl
out
testb
fs
dec
cs
scas
adc
xor
and
cltd
pop
add
and
test
arpl
sub
orb
enter
rclb
add
jmp
out
out
cmpsb
or
sbb
outsb
pushf
shr
pop
mov
mov
xor
rcr
out
xorl
pop
repz
cmp
lahf
mov
sub
dec
inc
or
rclb
mov
aaa
mov
ret
sarl
in
cs
jl
shll
lahf
out
dec
aas
jbe
sbb
adc
fucomi
push
sahf
fimull
xchg
test
jp
xor
jle
lahf
int
inc
pushf
cmp
and
or
test
out
insl
sahf
stos
jmp
repnz
mov
cli
and
cmp
adc
shr
repnz
lds
ds
pop
push
lahf
mov
inc
xchg
add
fisubrs
insb
loopne
loope
push
push
testl
pop
push
lret
out
mov
xchg
out
movsl
ret
loopne
jl
inc
leave
mov
xchg
je
sbb
dec
stos
js
cs
aaa
jge
popf
fwait
jno
push
dec
in
cli
jge
cmp
jle
cmp
cmpsl
scas
rcr
ds
lret
cmp
sub
mov
divl
sbbb
pop
lock
aam
and
inc
sbb
in
lret
push
adc
jp
daa
inc
push
mov
int
xchg
pop
cmp
xor
cli
and
int
pusha
movsl
sti
arpl
push
push
adc
sub
lods
fwait
cmp
mov
je
xor
cmp
sbb
cmp
xor
push
inc
mov
test
mov
jecxz
pop
std
insb
outsb
aas
cmp
aas
pushf
sbb
pop
dec
mov
inc
inc
outsl
or
into
pop
adc
xor
adc
aaa
pop
loopne
rcrl
lahf
mov
scas
arpl
jge
sub
fldt
ljmp
lock
push
mov
loop
xchg
cmp
fwait
fwait
fwait
xchg
push
dec
dec
les
inc
mov
out
xchg
or
pop
out
idivb
push
xchg
xor
pop
lahf
add
out
mov
inc
adc
pop
stos
pmaddwd
hlt
sbb
stos
jp
loope
aam
and
mov
test
imul
sbb
dec
sbb
add
das
loopne
int3
rol
adc
sub
mov
int
lds
test
out
out
jle
mov
xchg
adc
and
dec
lahf
stc
or
and
xor
inc
push
inc
sti
xchg
dec
xchg
lock
xchg
mov
and
jle
in
ja
adc
das
int3
add
repz
in
and
ljmp
pushf
mov
lock
ss
jp
std
int
arpl
xchg
mov
dec
mov
mov
add
mov
fnstcw
mov
xchg
sub
rcl
aam
jae
scas
or
repnz
add
out
jle
pop
fdivrp
pop
adc
movsb
xchg
sahf
rorl
or
add
lea
nop
mov
inc
loop
cwtl
lret
int
int
fidivs
push
lds
test
cli
ja
push
lods
mov
arpl
out
pop
lock
cmp
mov
xchg
xor
mov
loop
jbe
and
cmpsb
insb
outsb
outsb
cs
scas
aam
adc
fcoml
jp
hlt
testb
fidivrl
in
dec
jg
test
outsb
mov
lret
in
int
int
fwait
int3
push
bound
std
fisttpll
mov
negb
or
inc
rorl
sbb
ds
mov
mov
rcl
loopne
pop
hlt
adc
sub
lock
orb
in
mov
dec
int
iret
out
mov
stos
push
jo
dec
aaa
add
ret
sti
push
xchg
jae
rcll
push
std
or
cmp
jae
push
into
and
out
jmp
lock
inc
sbb
cmp
outsb
scas
cli
clc
outsl
fdivrs
mul
dec
jbe
std
insb
or
testl
xor
add
test
inc
cmp
aad
mov
jo
sub
lcall
mov
fistpll
inc
mov
xchg
mov
ds
in
popa
xor
add
fwait
fwait
fwait
lods
cltd
fwait
add
fs
or
fwait
fwait
fwait
outsb
dec
lret
sbb
test
jle
or
fisttpl
lcall
xor
ret
dec
idivb
fwait
sub
push
mov
adcl
movsl
outsb
iret
insb
adc
movsb
xlat
inc
test
pop
mov
test
in
xchg
fdivs
jecxz
add
jmp
pop
pushl
pop
jl
fisttpll
mov
dec
xor
pusha
dec
rcrb
add
add
cld
fmull
std
lods
cli
cmp
ja
mov
adc
adc
dec
push
out
loope
out
add
cmp
adc
jge
fwait
sbb
and
and
std
cli
fdiv
mov
mov
hlt
push
les
lea
xchg
xchg
jp
xor
or
inc
cli
xchg
lahf
in
pop
pop
jp
pop
xchg
lods
daa
jl
aaa
mov
mov
pop
xchg
inc
sbb
pop
out
mov
dec
xlat
sub
mov
xchg
mov
test
mov
cmc
xor
lahf
fwait
fwait
sub
insb
adc
lods
pop
insl
out
dec
push
or
inc
mov
or
or
shl
jbe
iret
test
mov
es
sbb
jae
rcrl
stos
sub
jbe
in
mov
int
int
mov
fisubs
out
mov
sbb
inc
mov
sbb
sbb
das
lret
int3
aam
lock
lcall
fldenv
dec
gs
iret
sbb
test
cmp
in
cmp
cwtl
xlat
out
les
pop
in
add
subb
out
mov
jne
popf
and
in
dec
scas
mov
fisttps
addr16
jbe
sbb
fucomip
mov
shlb
inc
stc
adc
outsb
dec
push
movsl
rorb
addr16
lea
xchg
mov
ret
cli
or
fwait
out
into
idivb
xor
adc
inc
jmp
mov
inc
jo
and
sbb
mov
lock
jo
sub
xchg
lock
scas
xor
adc
cmp
iret
in
dec
imul
xchg
fwait
fwait
adc
in
mov
or
in
out
xorb
out
stc
andl
dec
cs
test
jae
jle
in
stc
nop
push
jle
punpcklbw
test
xchg
push
lods
pop
xor
imul
flds
outsl
sti
mov
dec
je,pn
jg
out
xchg
mov
lea
aaa
pop
std
notb
xabort
mov
xchg
lock
sub
aaa
scas
cmpsl
insb
arpl
outsl
shl
xchg
dec
int
jnp
mov
aad
sbb
stos
sub
int
int
xchg
repnz
lea
sub
fcompl
lahf
es
rcll
push
fadds
dec
shlb
loop
in
mov
ds
sbb
gs
mov
inc
shll
mov
fcompl
lcall
mov
cld
push
hlt
fdiv
out
pop
jno
push
fsubl
jbe
push
aas
jecxz
cli
in
xchg
mov
lahf
mov
cmp
mov
lret
iret
out
test
sbb
scas
jne
adc
cmp
in
dec
ret
sub
mov
and
jmp
popa
ffreep
push
stc
je
add
jp
pop
sbb
dec
loopne
repz
insb
outsb
outsb
pop
arpl
cmpsl
mov
idiv
jmp
mov
sahf
wrmsr
nop
out
fnclex
call
pop
in
mov
mov
jno
rcrl
adc
jl
xchg
mov
xor
jge
pop
js
mov
fistl
jg
int
mov
loopne
outsb
clc
fnop
mov
les
out
add
sub
mov
cmp
icebp
outsb
aas
and
mov
xchg
cmp
push
push
outsb
outsb
outsb
outsb
shlb
lods
imul
clc
or
jns
xor
aad
ja
sbb
inc
push
shr
mov
jmp
ljmp
and
push
inc
out
out
push
out
cmp
xor
clc
pop
jg
mov
mov
sarl
lret
addr16
fcompl
adc
mov
out
insl
insb
aas
outsl
xchg
or
enter
out
sub
out
add
out
out
out
clc
in
mov
mov
push
dec
popf
jb
pop
inc
iret
out
sbb
popa
fisttpl
mov
push
cmpb
fadds
test
icebp
adc
mov
pop
push
add
mov
insb
add
js
cmp
dec
insb
outsb
outsb
pop
mov
adc
cli
push
out
fprem1
sti
xor
adc
or
mov
sbb
idivb
aaa
inc
jne
repz
jae
ror
mov
and
mov
jae
jae
es
cltd
cmpsb
pop
addr16
mov
les
mov
out
dec
dec
mov
into
mov
neg
and
scas
jbe
pop
cmp
fisttpl
sbb
call
lods
or
fs
addr16
fsubp
mov
mov
std
add
xchg
mov
ret
add
pop
je
mov
xchg
movsl
test
sahf
or
xchg
mov
iret
out
mov
sbb
inc
and
mov
jne
cld
adcl
lock
out
movmskps
xor
cli
insb
scas
clc
pop
cmp
xor
mov
stc
f2xm1
add
int3
or
push
aas
mov
inc
ret
push
add
push
mov
repz
dec
xor
adc
add
sub
stos
mov
sti
jbe
and
add
rol
fwait
fwait
sbb
dec
notl
jbe
sub
fwait
fwait
fwait
sub
inc
orb
loope
ds
jl
push
xchg
inc
push
insb
mov
jg
mov
mov
jae
fwait
fwait
fwait
mov
xchg
jne
call
lea
dec
xor
aaa
push
jae
jae
adc
xor
negb
jae
jae
mov
stc
push
ljmp
ss
lods
adc
xchg
decl
jmp
xchg
je
ljmpw
xor
xor
pop
sub
xlat
outsl
bound
cmpb
push
mov
out
xchg
push
dec
cli
insb
outsb
outsb
enter
ret
ljmp
pop
or
std
addb
sub
aaa
lods
in
cli
lcall
sub
pusha
xchg
fidivl
adc
in
enter
xchg
fists
loopne
shrl
push
testl
dec
xchg
pop
mov
hlt
jecxz
add
mov
pop
adc
add
dec
orb
fisubl
ds
jbe
dec
jo
jo
mov
loope
inc
test
add
adc
ss
movsb
idiv
bound
aaa
mov
out
mov
push
push
bound
and
clc
hlt
lcall
loope
sti
adc
out
mov
xor
and
fwait
fwait
mov
mov
test
test
pop
xchg
cwtl
sub
jecxz
outsl
sub
adc
ja
cmp
mov
lods
push
inc
add
into
out
sar
jle
das
mov
xor
mov
es
pop
mov
push
jnp
cmp
fcmovu
ret
jmp
inc
jne
fadd
and
js
push
fwait
aam
lds
test
mov
nop
push
js
cmp
and
jle
cmpsb
inc
daa
movl
iret
or
fiaddl
jle
sub
cli
sahf
movsb
iret
int
out
mov
dec
ds
xchg
xchg
mov
jns
jne
push
lahf
int
imul
push
jae
sti
xor
fcmovu
mov
cld
into
adc
inc
mov
clc
insb
mov
push
out
neg
loop
adc
ja
ret
lahf
jg
iret
out
sbb
mov
test
int
add
imul
sahf
int
int
cmp
or
popa
mov
fnstcw
shr
cmp
notb
js
push
or
fsubrl
out
out
adcb
and
out
mov
std
pushf
outsl
lock
lea
outsb
outsb
pop
cmp
cmc
or
mov
loope
cmc
sti
insb
outsb
out
lds
inc
mov
sahf
sahf
adc
jae
shll
insb
call
inc
dec
je
jae
jae
and
pop
arpl
inc
ss
sbb
outsb
pop
xchg
jbe
out
cltd
andb
rcr
icebp
xchg
adc
xchg
add
call
fcmovbe
pop
cmpb
or
push
rolb
mov
out
mov
inc
push
mov
in
mov
insb
mov
cli
in
dec
push
scas
sbb
cmpsl
insb
outsb
js
les
std
nop
out
adc
add
cmp
push
xor
or
sahf
sbbl
cmp
pusha
outsb
outsb
aas
fwait
mov
aad
push
or
xchg
not
push
jl
outsb
rcr
mov
mov
jnp
cmp
addb
or
in
jae
lds
pop
mov
mov
lock
les
iret
sbb
lds
mov
xchg
out
je
outsb
outsb
cmp
pop
and
push
xchg
js
in
xchg
fcomps
sti
ds
and
out
pop
outsb
mov
cmp
les
jle
bound
int
adc
ss
aaa
sub
int
adc
into
mov
fnstcw
sbb
mov
jnp
push
cmp
push
rcl
pop
fimuls
push
or
push
jae
and
mov
push
and
addr16
ret
cmp
ret
outsb
jae
mov
ljmp
jmp
xchg
mov
dec
ljmp
add
pop
mov
out
pushf
xor
xor
mov
mov
insb
push
into
stos
push
jo
shll
gs
addb
clc
out
jnp
data16
addr16
ret
pusha
xor
dec
mov
xchg
pop
cltd
or
aaa
mov
fnsave
pop
jl
enter
and
shll
movsl
dec
decb
xor
pop
jae
mov
fsubl
cmp
jns
stos
aad
fcompl
cmp
and
mov
cli
xchg
loop
cli
insb
outsb
scas
mov
pop
cmpsl
dec
jmp
out
push
mov
dec
mov
sahf
int3
or
mov
out
jo
pop
jecxz
fidivl
jae
jle
inc
cltd
mov
push
mov
jae
clc
imul
mov
insb
iret
dec
loop
divl
les
stos
stos
test
adc
jle
lcall
jmp
int
test
icebp
add
jg
jmp
and
xor
xchg
subl
roll
or
stos
add
aaa
sub
outsb
scas
js
lods
cwtl
cmp
into
inc
cmpb
mov
test
dec
xchg
hlt
loopne
js
sbb
out
adc
cli
test
and
push
loop
inc
sub
sub
xchg
add
shrd
call
cmpl
fdivrl
das
sbb
inc
xor
aad
daa
loopne
je
mov
lods
push
sbb
fcomip
ds
lret
inc
sub
sub
jp
repnz
lret
sub
mov
in
aam
adc
sub
cmp
add
out
mov
inc
in
lods
pop
adc
mov
cmp
repz
sub
sbbl
jae
ror
out
out
stos
enter
daa
enter
mov
xor
fistl
clc
adc
dec
and
push
push
fwait
int
stc
jno
movsb
dec
cmc
fadd
lods
inc
sbb
push
jne
jo
clc
sub
out
push
lcall
arpl
out
pop
fisttpl
pop
inc
loop
outsb
lahf
mov
sub
add
inc
movsl
outsb
aaa
aaa
jge
cmp
fidivl
pushf
cltd
icebp
and
cmp
loope
and
jns
sub
sahf
out
add
aaa
pop
cmp
test
jae
notb
sbb
fstps
popa
fs
fdivl
insb
fists
xor
push
in
or
ret
pop
std
mov
aas
sbb
mov
jl
pop
cmp
push
jecxz
cltd
mov
mov
push
bound
f2xm1
mov
add
ret
dec
pop
int3
add
dec
rol
sahf
je
jae
inc
test
add
jbe
int
inc
sbb
or
sti
sbb
int
adc
vphaddbw
lahf
int
int
lods
cld
dec
insl
xchg
pop
daa
insl
mov
add
jnp
in
pop
jmp
icebp
inc
das
sarl
cwtl
fdivl
fisubs
jp
jmp
sub
fsts
push
cmpsb
sbb
mov
les
outsl
mov
jmp
push
in
mov
lods
adc
jge
bound
fstl
aaa
cmp
int
mov
fisubrl
int
int
jp
dec
cmpsl
jne
pop
xchg
xchg
fmull
add
lea
push
loope
outsb
out
clc
flds
or
or
push
pop
insb
outsb
outsb
outsb
adc
into
xchg
pop
out
ffreep
push
cli
push
jp,pn
into
int
fisttps
cmc
bound
mov
or
aad
notb
or
mov
and
js
xchg
cs
cli
fcompl
lret
cltd
push
test
mov
xor
sbb
mov
and
xchg
jo
mov
jo
sbb
ja
loope
jae
sbb
xchg
addr16
xlat
add
mov
clc
cmp
jp
lds
dec
call
xor
and
js
nop
movsb
xchg
dec
inc
pop
insb
pusha
jp
mov
or
mov
ljmp
mov
mov
mov
outsb
clc
push
out
repz
jb
idivb
xor
hlt
insb
mov
lret
imul
loope
sub
aas
test
pop
fldt
cltd
iret
int
in
fmull
sbbb
xchg
fs
adc
shll
push
jp
gs
sti
fdivrl
xchg
in
pop
xor
insb
in
addr16
inc
xchg
mov
add
scas
inc
and
aaa
mov
repz
fnstsw
sahf
lock
cmp
mov
inc
adc
es
inc
mov
repnz
sbb
fstps
jge
jecxz
mov
iret
xchg
int
inc
push
fcoml
clc
bts
fdivr
mov
lahf
int
rclb
cmp
jb
fcmovne
shr
fsubrl
push
and
pop
lds
fwait
fwait
fwait
adc
testl
and
fwait
fwait
fwait
cmp
jne
scas
popf
test
fmuls
outsb
sarb
or
sub
stos
hlt
mov
mov
rcrl
repnz
xor
push
mov
scas
and
adc
fdivrl
and
nop
or
ss
mov
shl
test
push
out
push
dec
notb
imul
pop
in
mov
adc
imul
mov
jnp
scas
test
scas
js
or
call
jg
jg
jge
movsb
pop
add
mov
xchg
int
int
dec
jmp
adc
daa
and
test
inc
and
or
jae
xchg
bound
adc
mov
push
jmp
aaa
add
jl
std
into
mov
mov
arpl
inc
out
fsub
xchg
jo
mov
sub
in
pop
cmc
fmul
cli
jl
out
dec
mov
push
int
int
xchg
pop
pop
mov
je
notl
aaa
mov
dec
and
push
in
dec
inc
add
aaa
aaa
aaa
aaa
out
cmp
movsb
dec
in
sti
fdivrl
aaa
dec
movsb
inc
out
inc
xor
mov
jge
es
cmp
stos
in
int3
out
mov
orl
fcoml
add
mov
sti
dec
std
dec
repnz
mov
jecxz
or
jno
mov
ret
pop
aad
cltd
js
or
jnp
insb
push
clc
sbb
fimuls
xchg
ret
out
clc
adc
sub
sbb
insl
out
mov
mov
es
push
cli
out
push
mov
pop
mov
test
outsb
outsb
scas
adc
and
pop
xchg
xor
ss
cld
mov
imul
pop
lock
dec
bound
lds
enter
mov
bnd
addr16
jg
jb
cmp
mov
xchg
rorb
sbb
push
xchg
jp
mov
inc
jnp
pavgb
dec
aam
mov
je
dec
mov
xlat
cld
or
inc
outsb
enter
in
shrb
dec
push
mov
dec
fcomp
fsubp
cmp
xor
int
push
pop
sbb
popf
sar
fnstcw
cmpsb
pop
bound
out
out
js
nop
fiaddl
jle
push
clc
test
or
xchg
in
push
or
out
cltd
dec
int3
xor
aad
xor
loop
and
add
dec
jge
lcall
in
mov
scas
jb
cld
imul
xchg
or
icebp
in
in
xchg
and
aam
xchg
mov
dec
mov
mov
shr
pop
adc
int
out
aad
std
es
sahf
rcrb
xor
lahf
loopne
adc
mov
test
xorl
out
out
sti
push
mov
inc
mov
inc
iret
out
add
addr16
cli
gs
out
fs
or
das
in
pop
or
aas
fstpt
xchg
xor
ret
idivb
xchg
sbb
shlb
cmp
repz
mov
cmpsb
mov
jno
mov
cmp
clc
pop
cmc
jecxz
cmpsl
cmpsb
scas
out
dec
stc
cmp
int
in
mov
sahf
ja
and
int3
insl
mov
jle
int
int
and
add
nop
pop
xor
les
gs
jl
push
push
xor
lahf
pushf
stos
push
aaa
aaa
enter
push
jmp
outsb
cs
push
push
fs
jns
adc
xchg
icebp
insb
outsb
frstor
or
addr16
lret
ret
test
ret
mov
mull
add
cmp
mov
test
or
jmp
inc
add
add
fcompl
xlat
cmp
repnz
lret
push
addr16
frndint
sbb
xor
bound
mov
jbe
mov
push
dec
dec
call
mov
sub
hlt
lcall
jae
lods
aaa
ja
icebp
loopne
push
das
pop
cmc
mov
bound
fwait
mov
cmc
lods
ret
cs
mov
adc
pop
sbb
fcomps
mov
xorb
repnz
adc
adc
adc
lahf
pop
fldcw
sbbl
std
fwait
pop
outsb
outsb
outsb
outsb
or
dec
and
cmp
jl
push
xor
insl
lods
loope
jl
loop
add
fsubr
sbb
mov
nop
cmp
insb
jg
pop
addr16
mov
jmp
pop
mov
out
pop
push
fiadds
mov
adc
cmp
and
iret
mov
in
cli
aaa
mov
ljmp
mov
or
ds
fidivs
xchg
dec
sbb
cmc
jge
cli
aaa
cmp
lret
movsl
lret
bound
or
aaa
mov
jecxz
ss
pop
mov
xor
sti
cmp
jb
clc
jno
xchg
movsl
mov
push
xor
add
out
pusha
cmp
add
mov
inc
icebp
adc
bnd
test
loope
or
jae
jae
xor
inc
jge
jge
int
in
addr16
adc
cli
insb
add
int
int
dec
inc
out
iret
lea
sub
xor
pusha
icebp
jl
outsb
pop
and
aad
xor
fucomip
sub
jmp
and
aaa
aaa
mov
roll
in
fnstenv
push
in
aas
dec
fdivrl
or
mov
jecxz
pop
jge
jle
mov
mov
mov
mov
pop
daa
daa
sub
int
divb
adc
in
es
jge
pop
mov
cmp
and
mov
orb
mov
sti
andb
les
xor
addb
dec
and
mov
jae
sti
sub
mov
loop
and
repz
jae
ffree
scas
nop
popa
cli
and
test
popf
mov
mov
loop
push
gs
in
filds
mov
fwait
fwait
fisubs
fs
pop
dec
or
cmp
jnp
jle
push
test
adc
mov
in
addr16
mov
push
fcoml
out
out
xchg
mov
mov
mul
out
out
push
fwait
sub
testb
inc
cmp
pushf
cld
leave
mov
jl
imul
inc
mov
or
in
and
in
pusha
mov
out
out
push
icebp
ret
jae
rclb
insb
outsb
outsb
pop
stos
sbbb
jmp
jno
push
cld
incl
out
mov
mov
data16
jp
inc
jno
fidivl
or
insb
test
dec
ljmp
iret
nop
adc
addr16
mov
dec
scas
lock
lock
in
out
jmp
lods
mov
push
jo
push
jp
fs
mov
and
cmc
std
adc
movsl
mov
adc
inc
jae
out
repz
lods
and
cmp
xor
cmpsb
adc
icebp
jl
pop
gs
fwait
lea
outsb
push
sbb
push
mov
mov
out
ret
cmpsl
outsb
outsb
outsb
outsb
sahf
call
add
fisubrl
cli
insb
outsb
pop
out
mov
sti
rcrb
jno
adc
mov
jl
lret
lea
push
int
mov
adc
jle
cmp
mov
rorb
into
pop
jp
test
xor
mov
aas
cmpsb
mov
repnz
fucomi
mov
inc
aaa
rcll
out
jmp
mov
getsec
ja
ds
movsb
in
iret
sbb
das
in
pop
xorl
sub
mov
divb
mov
rclb
jmp
jge
mov
and
addr16
jmp
sbb
arpl
adc
xchg
fwait
jno
movsl
outsb
aas
fwait
fwait
sub
bound
jl
mov
push
mov
inc
cmp
xor
test
sub
int
cmpsb
fxch
xchg
cmc
lret
cmp
push
lock
call
jns
cmp
cmp
out
out
ds
sbb
lods
xor
lds
sahf
movsl
int
aas
cmpb
dec
lds
je
aas
cmp
mov
movsl
mov
fiadds
ds
aaa
jge
lret
xchg
int3
sti
bound
xchg
cmpb
popa
inc
fwait
sbb
adc
jae
int
sbb
call
int
jae
push
push
inc
mov
jmp
ret
sbb
int
rcl
mov
lods
adcl
cmp
lahf
int
xor
scas
in
mov
rcll
dec
insl
cmp
sbb
loop
shrb
idivb
add
or
mov
out
inc
ror
les
inc
xchg
mov
mov
call
mov
pop
fs
pop
push
cs
fnop
mov
xchg
adc
xchg
sbb
iret
xchg
jae
inc
sub
adc
xor
movsb
pop
das
lods
mov
in
arpl
daa
jp
cmc
jnp
sti
repnz
jl
inc
roll
lods
mov
mov
jae
out
insl
cwtl
push
jmp
jns
push
fidivrl
mov
mov
xor
je,pt
dec
mov
jbe
shlb
push
or
hlt
fisubrl
cmp
fucompp
ret
pop
jno
lds
ret
iret
shlb
mov
insb
mov
sub
fwait
lods
jae
xchg
cmc
mov
push
sub
jo
in
addr16
daa
andb
outsb
jnp
sarl
push
cmpsb
cmove
cmpsb
clc
stc
insb
outsb
outsb
sahf
or
test
int
addr16
fs
out
jle
ja
icebp
sahf
loopne
ljmp
jle
pusha
addb
mov
aaa
cld
add
fdivs
aaa
aaa
jbe
cltd
jo
jne
and
out
jns
imul
add
mov
mov
cmp
dec
lock
mov
int
push
and
ja
outsb
outsb
lahf
int3
lcall
movsb
and
adc
mov
jbe
das
sub
enter
fucomi
mov
push
cmp
mov
repz
mov
inc
pop
add
xchg
sbb
mov
and
insb
outsb
push
enter
repz
add
cmp
or
mov
dec
jnp
or
mov
dec
les
push
sbb
shll
outsb
outsb
outsb
or
aas
in
push
movsl
loop
xchg
adc
outsb
sbb
jl
jge
or
mov
aaa
ja
jecxz
jb
ret
mov
adc
or
or
int
adc
adc
jae
outsl
mov
pop
and
xchg
iret
mov
fcompl
ficoml
sbb
sub
imul
push
call
loope
ret
mov
es
and
and
sti
adc
in
xchg
mov
sbb
out
pop
dec
pusha
add
testb
sbb
pop
inc
sub
out
out
stos
fiaddl
adc
push
xor
js,pt
dec
mov
cmp
repnz
and
dec
push
xor
sarb
fwait
mov
cmc
ret
add
jbe
pusha
in
xchg
push
add
fwait
cmp
test
xor
js
filds
out
fldl
imul
fdivr
shrb
pop
stos
fistps
imul
fwait
sbb
jnp
push
mov
aaa
jg
outsb
outsb
outsb
outsb
loopne,pt
scas
int3
xor
insl
mov
push
sahf
loopne
mov
jle
shll
jae
mov
adc
dec
pusha
mov
cltd
jae
jae
jmp
mov
inc
lret
divb
jae
xlat
subl
ss
in
jae
sbb
cmp
enter
pop
test
scas
std
jne
jle
inc
mov
inc
sbb
sub
fimuls
and
test
cwtl
fwait
fwait
fwait
fwait
mov
xor
mov
push
cmp
mov
aad
mov
loop
mov
mov
popf
rol
pop
popf
fwait
sbb
loop
icebp
loop
dec
xlat
adc
shrb
push
dec
sub
imull
sbb
push
cltd
push
fcmove
sar
xchg
in
mov
ljmp
adc
adc
pop
out
out
iret
pop
jl
mov
adc
rcrl
lcall
cmp
inc
aas
in
in
addr16
xorb
jae
inc
cmp
mov
sbb
jae
jae
in
or
sub
push
xchg
out
jae
jae
adc
dec
cmc
int3
fists
cmpsb
idiv
test
jae
popa
push
aas
rcrl
pop
dec
xchg
iret
mov
dec
inc
fcmovbe
xchg
mov
inc
iret
ret
cmp
in
mov
ficoml
sahf
and
cmc
xor
cmc
insb
push
push
jno
in
mov
nop
sahf
cmp
repz
das
pop
mov
mov
push
pop
int
mov
and
xorb
lret
jle
sbb
roll
push
outsb
scas
ljmp
loopne
ds
jne
sub
iret
in
mov
xchg
pop
shlb
and
imul
aaa
mov
es
adc
and
mov
fwait
fwait
fwait
fwait
jnp
leave
push
pusha
mov
clc
sahf
adc
lock
je
mov
aas
out
and
mov
sbb
cli
mov
insb
outsb
dec
mov
adc
in
xchg
subb
xchg
mov
push
pusha
int3
cmp
jge
mov
fdivl
in
pop
loop
jne
jle
inc
and
out
testb
dec
xchg
ljmp
fisttpl
xchg
xor
sbb
jne
outsb
insb
lea
pop
loopne
cmp
mov
sahf
scas
insb
outsb
outsb
outsb
outsb
mov
in
push
cs
pop
loope
xchg
ds
cld
pop
cmc
add
cltd
jo
mov
add
adc
inc
mov
lods
mov
iret
adc
jmp
or
cli
pushf
dec
pushf
cmc
mov
lcall
pop
sar
movsb
mov
pop
add
icebp
shll
push
jge
out
push
sub
inc
mov
or
mov
xor
je
mov
mov
xorl
xchg
lock
adc
nop
mov
push
jo
hlt
push
sahf
lret
ds
sahf
cmc
mov
mov
clc
adc
pusha
or
mov
push
pop
mov
mov
test
outsl
ja
out
lahf
int
das
and
inc
movsb
pop
test
jl
inc
inc
iret
out
xorb
stc
test
jle
lods
pop
add
mov
dec
xor
insl
cmp
movsb
xor
pop
cld
fistpl
cmp
sarl
test
subb
inc
aas
fwait
fwait
pop
les
sub
mov
int
push
cld
mov
jo
xlat
loopne
fdivrl
lods
cmp
aaa
pop
and
mov
and
dec
int
int
or
rcr
mov
adc
pop
cwtl
mov
int
iret
fsts
mov
mov
dec
inc
enter
popf
test
mov
add
cs
popa
popa
out
and
rcr
pop
or
or
add
add
xlat
mov
sub
xchg
lret
test
out
inc
fiaddl
push
nop
inc
jl
aaa
cld
jle
jns
push
out
std
les
in
int
sti
add
pop
lea
jno,pn
jge
lahf
int
push
test
stos
popf
mov
jp
push
jl
jno
ss
loop
js
inc
lret
ds
loop
jo
lret
pop
jle
loopne
in
insl
rclb
into
out
jg
add
add
loopne
or
ds
mov
adc
mov
jb
inc
lret
jae
jae
mov
dec
arpl
and
loopne
jae
int3
cmp
mov
std
cltd
fistpl
test
and
push
push
test
lret
data16
sbb
aas
fwait
fwait
add
aas
mov
xor
pop
pusha
mov
pusha
adcb
cmpsb
and
xor
dec
mov
aaa
stos
in
mov
in
in
inc
js
gs
push
mov
leave
ss
cmp
or
idivb
or
ja
push
xchg
loop
xlat
out
out
aas
sti
push
arpl
pusha
ret
mov
rol
out
or
aaa
mov
push
scas
mov
xor
sti
in
pop
sahf
lds
jbe
ret
jae
jae
call
pop
mov
xor
fildll
andb
push
sahf
filds
sahf
fwait
mov
movl
xor
xchg
lock
or
dec
sbb
ret
add
gs
iret
mov
fistl
inc
xlat
cltd
mov
into
std
mov
insb
outsb
adc
mov
cmp
shr
idivb
orl
int3
mulb
mov
out
fsubrp
test
sahf
lock
lahf
ss
mov
push
jp
sahf
call
pop
outsb
dec
int3
fldt
cld
push
mov
repnz
fwait
inc
ret
in
sub
testb
scas
mov
adc
insb
push
inc
addl
mov
mov
enter
dec
cld
jbe
call
repz
lods
in
push
shl
add
popa
lea
jge
lret
mov
mov
mov
push
sub
push
mov
sbb
sbb
push
je
push
cmp
ds
jne
lock
or
aaa
push
jl
mov
fldt
out
enter
arpl
aaa
mov
pop
je
hlt
pop
iret
in
sti
and
int3
movsb
insb
outsl
mov
mov
mov
gs
lock
adc
add
mov
aas
or
lds
sub
adc
adc
inc
jp
fwait
fwait
fwait
mov
rol
int3
jns
fstps
sahf
fwait
fwait
orl
fwait
shrl
fwait
fwait
pop
push
call
fs
sub
adc
fwait
fwait
sbb
adc
std
lock
shrb
add
andb
jno
cld
es
sbb
fs
jmp
mov
or
add
addr16
call
push
addr16
imul
sub
dec
adc
shlb
bnd
lcall
pop
int3
loop
dec
es
int
popf
jle
imul
sbb
js
mov
adc
outsl
push
lods
sbb
pop
lds
int
cmp
flds
and
scas
fld1
fwait
iret
out
lahf
cmp
cli
shl
xchg
push
dec
mov
add
js
mov
test
xor
push
in
cmpsb
mov
cmpsl
xor
xchg
dec
sar
jecxz
jp
adc
mov
clc
lock
fwait
test
xor
fstps
xor
cmp
leave
roll
cli
add
roll
sbb
ss
dec
jmp
adc
jl
jne
cltd
insl
sahf
sub
and
add
fldenv
push
add
add
mov
lods
sub
loop
sbb
push
jne
je
cltd
mov
xchg
aam
dec
and
pop
sbb
add
push
aas
push
std
lcall
cmc
addr16
repnz
jno
das
in
lret
jo
repz
mov
in
fidivl
xor
ss
je
xchg
pop
xor
call
and
push
test
lods
clc
jl
out
and
cmp
xchg
pop
xor
pusha
fdivs
sub
insb
aas
fistl
les
xchg
idivb
out
pushf
bound
and
ret
out
addb
lret
jle
insb
outsb
jg
jp
push
nop
mov
add
sti
cld
js
mov
in
sbb
jae
jae
mov
push
dec
out
loope
jae
xor
mov
xor
cli
xchg
inc
and
push
ds
jge
fcoms
ds
stos
dec
jmp
inc
or
out
mov
mov
jbe
xor
iret
jae
jl
jb
pop
cmp
loop
gs
loope
jbe
lods
mov
jno
das
scas
aam
sahf
fwait
fwait
fwait
popa
cmp
add
mov
hlt
push
sub
iret
xor
loop
jne
mov
cld
pop
push
push
clc
insb
pusha
push
fwait
fwait
ficoms
pop
mov
adc
mov
add
mov
lret
clc
inc
shlb
movsb
in
fsubl
cmpsb
lea
stc
dec
out
fs
enter
and
mov
loopne
cmpsb
xchg
jge
pop
adc
adcb
rcrb
dec
negb
mov
and
xor
push
icebp
ljmp
jb
mov
fwait
ljmp
cs
stos
push
outsb
inc
popf
fdivr
sahf
pushf
pop
lock
mov
push
cmp
out
ss
cmpsl
cmc
push
shrl
push
mov
out
int3
clc
xor
les
aaa
aaa
dec
cs
in
subb
or
xchg
dec
loop
cmp
mov
mov
add
cmp
cli
outsb
iret
shl
sbb
dec
imul
outsb
or
fildll
inc
cltd
addr16
fstps
xor
or
in
cmp
stc
insb
xor
outsb
nop
sub
jmp
out
push
mov
lret
mov
out
out
inc
fisttpl
push
cwtl
adc
mov
cli
xor
out
lret
sub
out
pop
add
aas
int
iret
les
xchg
cld
cli
jns
aaa
dec
addl
push
das
sahf
mov
movsl
mov
fstl
int3
adc
inc
xchg
mov
fidivs
pop
or
jecxz
je
mov
add
push
or
or
orb
sbb
or
aas
fiaddl
movsl
push
adc
jae
orl
lret
pop
sub
aam
addr16
dec
popa
aas
adc
test
fcmovnbe
je,pn
xchg
insb
cmp
fdivp
push
mov
cmpsb
in
aam
or
mov
push
bound
pop
dec
cmpsb
enter
mov
fadds
fdivl
sbb
inc
cld
mov
mov
out
data16
aad
cld
jbe
or
lahf
out
mov
jne
xor
sbb
fwait
fwait
ds
test
insl
arpl
dec
dec
ljmp
addr16
fstps
sub
sahf
in
push
outsb
outsb
outsb
outsb
ret
jmp
repnz
movsb
ss
jbe
outsb
outsb
and
cli
cmpsb
lahf
jl
popa
sub
subb
jle
mov
push
pop
aam
and
outsb
outsb
outsb
outsb
mov
popf
das
jo
sbb
outsb
mov
mov
dec
xor
outsb
and
movsb
pusha
fwait
pop
cmc
sbb
cmp
rorb
mov
addr16
sub
cvtpi2ps
fnstcw
aaa
out
movsl
bound
adc
divps
jae
jae
sbb
mov
or
jmp
and
pop
add
js
les
fcompl
rolb
scas
lahf
jnp
subl
int
shrl
lds
daa
add
add
cmpl
cmp
movsb
stc
in
jle
aaa
push
xchg
xor
les
or
andb
js
cmp
sbb
dec
test
aam
dec
xchg
adc
in
pop
aas
in
sbb
pop
clc
mov
gs
jecxz
call
mov
fcmove
outsb
out
mov
shrl
push
sbb
outsb
testb
lcall
jl
lock
dec
addb
jb
in
sti
sbb
call
pop
pop
sahf
pop
jo
stos
cli
xor
push
les
lock
mov
test
pop
lcall
in
imul
imul
in
imul
test
int3
int
int
inc
scas
jns
or
mov
fdivrl
into
jo
stos
mov
fcomps
ja
and
iret
mov
pop
shlb
xchg
jns
jbe
or
inc
jae
jae
imul
push
jmp
xor
xchg
jle
in
std
andb
test
pop
cmp
jmp
cld
out
push
xchg
pusha
out
lahf
mov
push
aaa
aaa
aaa
push
test
mov
aaa
mov
mov
std
push
addb
shrb
xor
xchg
lock
sub
popf
rcr
movb
cli
hlt
mov
xorb
lock
mov
arpl
dec
xlat
rclb
fdivl
aaa
mov
cmpsb
or
int3
pop
cltd
sbb
jecxz
js
aaa
push
repnz
fidivrl
test
outsb
mov
shlb
hlt
push
push
mov
fcmovnbe
lds
inc
mull
dec
jbe
in
push
movsl
push
push
das
push
cwtl
xchg
xchg
imul
ja
enter
pop
pop
inc
out
inc
fmull
cmp
dec
mov
cmp
test
push
mov
aaa
aaa
aaa
lahf
subl
pushf
lret
aaa
aaa
aaa
fisubs
fcmovnu
add
imul
outsb
cld
sbb
outsb
outsb
outsb
pop
outsb
inc
push
pop
cmpsl
cmp
stos
insb
outsb
and
sbbb
pushf
pop
out
out
push
rolb
rcll
out
out
dec
movsb
nop
cmp
aas
out
xor
out
push
mov
call
push
ret
aas
fwait
jp
sub
adc
adc
mov
out
mov
sub
clc
out
movsl
lea
outsb
outsb
outsb
mov
mov
jnp
cmp
divl
cli
insb
push
rcr
clc
push
jnp
aam
clc
xchg
imul
xor
insb
test
fimull
int
or
and
mov
xchg
or
cli
lock
inc
movsb
sub
loopne
bound
iret
out
cltd
ss
fstps
lret
dec
add
mov
push
sahf
adc
out
mov
fdivrs
rcr
and
push
sub
out
sub
ds
aaa
sahf
movb
pop
je
adc
repz
lahf
add
adc
ljmp
jbe
xor
adc
loope
clc
fnstcw
std
mov
sbb
rorl
dec
inc
lret
and
pop
icebp
xchg
mov
wrmsr
fmull
sbb
adc
push
insb
rclb
fsubl
dec
adc
mov
mov
cwtl
int
jae
mov
js
insb
inc
ds
int
repnz
cmp
jl
icebp
fwait
fwait
fwait
fwait
pop
ss
shl
es
pop
aas
out
aaa
sbb
mov
push
mov
cld
mov
pop
xchg
adc
inc
add
outsb
pop
stos
scas
test
sbb
fwait
fwait
fwait
pop
ret
add
push
sub
mov
and
dec
sbb
sub
in
enter
dec
ret
dec
xchg
sbb
insb
mov
and
sahf
test
dec
cmp
mov
sbb
sbb
scas
mov
cwtl
loop
cs
mov
out
mov
mov
cmp
popa
sub
fcmovbe
fstpl
xchg
add
lods
cltd
js
je
mov
scas
fcoms
jae
jae
enter
mov
fdivl
aam
lahf
in
addr16
jmp
jle
in
cmp
mov
push
int
int
xor
std
or
add
int
mov
jne
and
inc
xor
iret
int
pushf
pop
movsl
mov
cmp
and
negl
jecxz
aaa
aaa
mov
pop
mov
mov
mov
popf
inc
cld
sub
mov
inc
fnstsw
jge
mov
scas
mov
movsb
add
inc
push
movsl
push
sbbb
fmull
inc
dec
in
in
icebp
aaa
lods
or
cs
fcoml
xchg
js
iret
pop
mov
xor
outsb
outsb
sub
sbb
hlt
mov
xorb
push
pop
cld
loop
lods
push
ljmp
mov
xchg
push
test
inc
or
cmp
xchg
inc
mov
fwait
fwait
sbb
pop
and
ss
loopne
popa
ficomps
idivb
pushf
in
in
outsl
inc
out
loop
sahf
out
mov
ss
outsl
mov
test
sbb
pushf
mov
jne
sti
or
ds
inc
mov
stos
fbstp
push
nop
sub
in
je
rolb
add
iret
out
mov
mov
dec
movl
pushf
push
rol
enter
into
or
fwait
loopne
out
dec
clc
out
jb
pop
out
dec
xor
iret
out
push
scas
add
in
pushf
int
dec
outsb
outsb
outsb
outsb
sahf
mov
cmp
sbb
js
jo
push
inc
mov
cmpsb
push
cmp
cs
xor
fcompl
pop
fisubl
decl
scas
fimull
nop
jg
fs
pop
adc
push
sbb
mov
les
and
mov
adc
shrb
mov
sahf
xchg
xor
mov
out
out
sub
jo
cmpsb
outsb
aas
adc
jl
mov
sahf
dec
andb
outsb
outsb
outsb
adc
cmp
jne
mov
repz
divb
xchg
push
loope
xor
js
mov
push
dec
mov
outsb
nop
push
ds
test
push
push
ds
movsb
jp
fwait
fwait
sub
lret
dec
arpl
clc
and
inc
or
mov
inc
cmp
mov
cmp
push
or
dec
dec
mov
sbb
pop
cltd
ljmp
jl
insb
loope
xchg
xchg
dec
clc
inc
fdivrl
es
mov
mov
jae
fsubrl
sahf
jae
inc
ds
das
fisubrs
clc
lret
mov
stc
inc
xor
aaa
lods
mov
add
aad
jmp
fdivrl
test
dec
mov
je
mov
cltd
dec
or
aaa
xor
je
icebp
sbb
call
push
sub
aas
dec
jecxz
fcmovb
stos
fwait
sub
iretw
out
jnp
in
loope
out
mov
mov
dec
or
inc
dec
rolb
mov
ret
xchg
mov
lret
cwtl
push
xlat
mov
into
shlb
jae
xor
nop
xor
push
iret
xor
faddl
cmp
jb
mov
cli
xchg
ror
out
pop
inc
je
int3
pusha
ds
clc
outsb
scas
fsubrs
adc
push
addr16
xor
dec
sahf
pop
xor
outsb
cld
mov
jp
fwait
jae
or
shl
shrb
out
scas
mov
in
mov
out
out
imul
lods
cmpsb
outsb
outsb
outsb
mov
jmp
and
jae
sbb
popf
std
insb
outsb
outsb
or
ljmp
pop
cmc
mov
std
loop
mov
int
in
inc
cmp
xor
mov
pop
leave
mov
int
push
imul
inc
es
pop
in
jge
aaa
lods
outsl
pusha
push
fs
arpl
negb
clc
into
loopne
dec
or
jb
jae
inc
scas
test
insb
repnz
out
push
insl
and
out
scas
cmp
nop
test
outsb
pop
shl
je
add
filds
jge
ljmp
out
or
mov
push
and
jle
push
mov
push
lahf
cmpsb
lock
sbb
mov
xlat
push
cmp
mov
mov
sub
jp
fwait
fwait
fwait
dec
out
andnps
adc
xchg
inc
mov
aas
fwait
inc
add
ret
ss
fucompp
fs
das
cmp
fsubs
fwait
fldt
sahf
dec
ss
and
in
daa
lea
cmp
outsb
mov
std
mov
push
pop
shrb
outsb
outsb
sbb
mov
dec
dec
adc
fisttpll
cmpsl
xor
inc
mov
sub
add
movsl
aaa
jb
bound
and
das
and
sbb
sbb
add
insl
add
dec
cmp
dec
out
or
iret
int
sub
pop
es
ljmp
mov
out
pop
addr16
aas
xor
add
pop
in
cmp
mov
mov
and
mov
out
mov
ret
popa
mov
in
sbb
movq
sub
pop
test
cmc
bound
in
outsb
outsb
outsb
xor
cs
nop
ja
ret
lock
movsb
dec
xlat
xor
insb
js
fwait
pop
jo
les
cmp
dec
cmp
adc
sub
outsb
dec
push
in
push
movsl
jle
xchg
xor
divb
imul
pop
fwait
fsetpm(287
mov
sub
bound
lods
push
gs
ds
fwait
fwait
mov
mov
xor
inc
pop
xor
mov
adcb
fisttpl
pop
xchg
push
jbe
test
movsb
cwtl
cltd
fstpt
inc
jne
xor
pushf
or
fwait
fwait
fwait
fwait
inc
and
mov
insb
outsb
aas
fwait
andb
test
and
das
out
mov
xor
into
addr16
clc
mov
fcmovne
out
adc
lret
jle
pop
loopne
loopne
adc
data16
fwait
fwait
inc
adcl
or
xor
ss
scas
jle
je
xchg
mov
clc
inc
imul
pop
add
adc
sub
and
aas
fwait
mov
sbb
test
enter
cwtl
jg
fistps
cmp
push
clc
pop
hlt
gs
and
shlb
or
mov
pop
xlat
mov
xchg
jne
out
out
mov
mov
aaa
xor
test
cmpsb
sbb
ss
fisubs
dec
enter
fildl
cmpb
out
push
mov
cmp
mov
out
out
push
cmp
push
out
mov
out
out
adc
es
jo
lahf
pop
mov
mov
fcompl
arpl
cltd
mov
clc
inc
xchg
cs
fisubrs
cmp
ljmp
dec
scas
push
jne
or
mov
popa
popa
sti
and
or
adc
xchg
push
dec
jg
or
lcall
mov
lods
dec
mov
or
aaa
push
jl
cmp
rcrb
sbb
fs
aaa
aaa
aaa
aaa
and
insb
shrb
jmp
out
jp
ds
outsl
xchg
jb
fidivs
outsb
imulb
cmp
xlat
cmp
outsb
outsb
outsb
outsb
fisttps
inc
push
cmp
dec
aad
adc
xor
outsb
cmc
divl
sub
push
arpl
mov
ret
loop
outsb
outsb
pop
inc
or
push
mov
push
mov
inc
enter
outsb
test
test
dec
jnp
mov
push
and
pop
ret
test
push
int
in
outsl
fadd
imul
out
inc
mov
mov
int
add
xchg
xor
xchg
js
or
addr16
sbb
std
sub
jbe
aad
xchg
aaa
repnz
icebp
mov
pop
push
int3
push
movsl
paddq
nop
jge
out
sbb
fcoml
insl
test
mov
movsl
xchg
int3
outsb
outsb
outsb
outsb
mov
ret
cs
test
or
insb
push
push
sbb
iret
out
out
call
adc
mov
fucomi
cmp
aas
lods
cltd
bound
inc
shll
lea
push
stos
adc
mov
scas
sbb
pop
nop
adcl
cmc
and
mov
jae
xor
cwtl
mov
or
jae
jae
push
stos
jbe
adc
aam
out
in
or
mov
lds
out
fs
sbb
cmpsb
cs
sbb
aaa
mov
jecxz
scas
xchg
data16
pop
insl
into
push
movsl
aaa
cld
sub
pushf
sbb
dec
adc
popf
add
ds
gs
iret
out
cmp
iret
jg
and
pop
bound
xchg
push
mov
movb
cld
mov
mov
into
int3
mov
mov
mov
pop
jnp
push
pop
loop
inc
or
dec
arpl
jns
add
push
cs
jge
sbb
bound
ds
movb
jo
dec
sbb
fadds
arpl
outsb
jg
mov
xor
jmp
nop
test
std
insb
outsb
outsb
dec
fs
outsb
mov
daa
cmp
testb
fs
cmp
push
sub
jmp
outsb
lahf
fwait
ljmp
aam
jbe
mov
mov
xor
out
arpl
scas
push
mov
mov
and
lds
pop
sbb
rcr
fdivr
lods
fisubrs
dec
mov
jae
mov
pusha
ja
adc
xor
loop
out
mov
inc
out
jp
mov
or
stos
loope
sub
ss
ret
push
mov
cmp
pop
insb
gs
call
ss
loopne
cmpl
pop
add
fs
or
fwait
arpl
sbb
sbb
ja
sahf
xchg
xchg
rclb
push
mov
aaa
xor
push
pop
adc
aaa
jl
in
ja
loop
inc
movl
aaa
push
xor
orb
out
sar
fwait
cmp
jns
aas
fcmovne
sub
push
pop
das
fcmovb
pop
sub
push
or
xor
pop
cmc
das
push
cwtl
sahf
xchg
out
jecxz
pop
rclb
or
enter
lock
into
mov
adc
cmc
fdivrl
adc
outsb
out
pop
and
push
imul
jno
outsb
outsb
outsb
outsb
nop
std
mov
mov
push
push
ss
outsb
outsb
outsb
lcall
jno
fs
test
clc
aas
sahf
lcall
and
in
into
shl
call
jle
loope
jns
testl
jp
psllw
clc
and
sbb
or
out
mov
dec
cmp
xor
mov
in
mov
out
aas
mov
pusha
repnz
inc
xor
in
testl
cmp
jp
int
int
addr16
and
cld
mov
iret
jmp
popf
fisubl
xor
divb
xor
fwait
sub
aaa
cmp
jo
add
sahf
or
dec
xor
or
and
cwtl
xor
ficompl
fistpl
adc
xlat
fwait
push
rep
outsb
outsb
pop
in
xlat
inc
inc
sub
shll
daa
jge
outsb
outsb
xor
dec
push
andl
out
idivb
and
xchg
nop
or
sbbl
push
data16
jo
cmp
pusha
test
push
jmp
scas
inc
or
out
sbb
cmpsl
push
movsl
or
out
mov
fs
sbb
out
mov
out
je
xchg
add
lret
lahf
fwait
fwait
fwait
imul
wbinvd
inc
jnp
cld
clc
sbbl
iret
push
push
jo
stos
adc
int
mov
dec
and
xchg
jae
rcll
and
aas
fwait
fwait
stos
pushf
je
sub
mov
cltd
aaa
aaa
jge
or
or
or
cwtl
ja
jge
aaa
aaa
mov
ret
aam
mov
bound
cmpsb
mov
js
xchg
jle
lahf
int
inc
cmp
mov
iret
fldcw
outsb
inc
xor
pop
cmpl
xlat
aaa
push
cld
insb
scas
insl
xor
repnz
dec
adc
jle
mov
fs
iret
or
rcr
lret
xor
sti
sbb
popf
repz
cmpsb
and
xor
loop
cs
lock
es
cli
pop
mov
nop
xor
add
dec
int3
xchg
data16
jecxz
bound
aaa
cmp
out
out
xor
aam
mov
test
mov
mov
out
lea
loope
scas
adc
js
mov
xchg
ds
mov
out
jl
stos
pop
rol
addl
out
mov
mov
jo
dec
sbb
iret
out
out
push
mov
jae
push
pop
in
int
add
mov
jp
push
aad
int
int
in
inc
jp
ds
fimuls
jns
jp
push
popf
or
xchg
pushf
orl
pop
int
jnp
push
mov
mov
ljmp
push
loope
mov
rcl
mov
fwait
or
cli
cmp
push
rclb
or
xor
jmp
dec
mov
cld
push
adc
push
pop
jmp
aad
iret
push
push
mov
lds
cmp
cmc
inc
lods
xchg
pop
push
mov
pop
adcl
ljmp
outsl
jmp
push
or
fcmovu
push
test
and
cs
mov
in
ret
scas
push
addb
sbb
inc
lea
cmp
aas
fwait
add
fsubrl
in
dec
call
sub
fcompl
into
cmp
rol
insb
aas
lock
xor
testb
repnz
adc
jno
jae
out
and
and
outsb
aad
popf
movsb
out
pop
mov
cwtl
aad
jnp
das
call
test
call
hlt
mov
cmc
in
pop
popa
and
add
lret
push
adc
jae
rol
mov
mov
and
push
jae
inc
int3
or
ret
add
mov
ftst
ds
add
ds
xchg
pop
in
jae
arpl
int
neg
hlt
jnp
push
out
mov
jb
lods
dec
iret
int
inc
mov
push
jbe
ds
push
out
sarl
popf
ja
fisubrs
mov
call
sub
clc
and
loop
sbb
push
int
xchg
pop
insb
mov
loop
daa
int
sub
int
int
in
fldenv
mov
dec
mov
into
adc
xchg
lea
ffreep
jae
inc
and
popa
movsl
mov
faddl
adc
sahf
jp
pop
mov
pop
inc
ss
mov
sbb
pop
inc
aad
sbb
enter
push
das
jle
sbb
pop
test
fucomi
mov
adc
and
daa
es
and
dec
aas
fwait
fwait
fwait
and
mov
mov
int
or
rolb
inc
aaa
xor
mov
out
in
dec
xor
outsb
outsb
outsb
sub
cmpsb
movsl
jl
stc
push
iret
mov
outsb
outsb
sbb
push
push
inc
cmp
scas
fwait
sbb
call
jae
ja
xchg
cmc
mov
fwait
fwait
fwait
icebp
rcrl
push
pop
shll
jo
fwait
fwait
fwait
fwait
sub
lea
push
or
es
ljmp
iret
mov
fs
mov
in
fcmovbe
lcall
xor
ds
mov
addr16
xor
lds
adc
push
jl
pop
mov
push
inc
and
mov
loop
xchg
outsb
jp
jae
sti
mov
push
jb
lret
addr16
daa
mov
sub
loop
dec
scas
sub
mov
inc
adc
or
les
out
and
ret
cmpsb
rcrl
shlb
out
test
fisubrs
jae
pop
mov
in
sbb
jae
ds
sahf
insl
pusha
cmp
push
dec
enter
mov
jae
and
ljmp
mov
lock
adc
pop
sti
jge
es
sbb
int3
popa
xchg
dec
out
addr16
rorl
outsl
ja
or
das
cwtl
mov
icebp
ja
and
out
les
iret
int
add
adc
sti
sub
push
xor
sub
sbb
bound
cmp
out
mov
mov
xor
cmp
in
jae
insb
add
mov
sbb
mov
and
cmc
or
repnz
push
lcall
mov
xlat
add
mov
mov
andb
pop
jp
or
cli
sbb
cltd
into
dec
dec
pop
jl
xorb
pop
in
repz
pop
fdivrs
lds
in
gs
mov
push
into
mov
xadd
mov
dec
bound
adc
xchg
mov
fmul
int
int
xchg
stos
xchg
pop
xchg
cmp
lret
ja
mov
add
out
fmul
call
loop,pt
jbe
mov
mov
sahf
and
push
jbe
out
out
or
das
adc
scas
loope
int
sbb
lods
fldenv
shrd
aaa
aaa
mov
cmp
pusha
imul
dec
mov
cmp
pop
in
movsb
add
clc
lcall
movzwl
dec
rep
outsb
outsb
lahf
subb
rorl
stos
pop
clc
mov
outsb
outsb
outsb
stos
mov
stos
fwait
in
lret
or
outsb
outsb
xchg
dec
rcrb
test
adc
mov
fcmovne
out
iret
sub
call
test
mov
inc
push
hlt
sahf
fwait
loopne
test
xchg
adc
push
sbb
xchg
pushf
enter
cli
insb
adc
mov
mov
inc
inc
cmc
sub
and
lahf
cld
cld
mov
testl
sbb
xchg
aaa
dec
pop
lds
adc
addr16
inc
ljmp
mov
jmp
cmp
in
mov
out
sub
int
inc
aas
sarl
aas
jb
nop
int
int
stos
insl
sbb
dec
push
dec
jne
sbb
push
lahf
int
imul
outsb
dec
je
int
pop
fiadds
in
sub
int
in
sub
rcr
out
jge
add
ds
addr16
mov
jo
stos
xor
fwait
fwait
fwait
clc
lock
inc
mov
repnz
xchg
testb
lock
and
mov
repz
shl
fxtract
mov
or
mov
lahf
add
fnstsw
cmpsb
cs
rorb
sub
out
divb
subl
add
lret
cmp
dec
cmc
sub
cmp
aaa
jae
jae
xchg
mov
sar
shl
lods
add
jae
mov
imul
lahf
in
and
scas
jbe
or
dec
inc
add
repz
idivb
aas
data16
or
repnz
out
cmp
adc
repnz
es
std
insb
lahf
fwait
pop
lcall
mov
in
mov
xor
push
adc
fdivs
popf
mov
or
faddl
and
js
out
xchg
jecxz
mov
jecxz
cmp
test
imul
lahf
fwait
fwait
mov
bound
and
inc
out
aas
mulb
cli
push
aad
mov
ss
cmp
adc
jae
push
pop
xchg
push
ret
xchg
push
adc
add
rorl
fistps
scas
push
sub
rclb
xor
out
out
shrl
or
inc
into
movsb
iret
out
out
data16
jge
lock
aad
insb
jp,pn
mov
outsb
les
aaa
aaa
mov
cmp
mov
sbb
clc
ds
js
mov
jae
pop
shll
mov
dec
mov
loopne
cld
jmp
lret
xchg
nop
adcb
lret
js
mov
inc
pop
sbb
sub
dec
ja
lahf
inc
js
aad
sahf
lahf
out
add
pop
iret
testb
imul
sbb
ja
std
jno
cmpsl
inc
push
es
ret
and
lcall
xchg
scas
outsb
movsb
cmp
nop
adc
push
dec
fldt
dec
xchg
pop
mov
aaa
aaa
aaa
pop
fpatan
sahf
movsb
xchg
in
or
sbb
fnstcw
dec
inc
and
adc
nop
fcmovbe
xchg
cmpl
cmp
mov
sbb
into
ja
xchg
test
add
jg
out
pop
iret
addb
jge
cwtl
andb
fbstp
xchg
jb
sarl
enter
movsb
push
fstl
jle
jle
jbe
fsubl
cld
test
sti
fldcw
inc
adc
sbb
mov
cmc
xchg
lock
js
add
xlat
loop
jo
add
push
xchg
inc
in
insb
inc
fistpl
add
mov
mov
ret
inc
dec
xor
mov
pop
add
xchg
lahf
rorb
ds
in
fdivrl
jmp
mov
insl
or
fdivl
repz
mov
cli
sub
push
fiaddl
andb
cmp
stos
jb
inc
sbb
sbb
jae
mov
rolb
dec
orl
sbb
cmpsl
cmp
int3
loopne
fs
xorb
aad
inc
and
outsb
xchg
xor
adc
jae
movsb
fadds
xchg
push
mov
fdivl
adc
pop
test
sbb
mov
fdiv
lock
jo
cltd
insl
xor
lahf
lods
inc
mov
mov
loop
mov
enter
enter
arpl
das
nop
outsb
arpl
scas
pop
loopne
fcmovne
jbe
std
cmpsl
cmp
mov
adc
adc
jg
mov
aad
lahf
mov
popf
scas
rcrb
push
mov
jbe
jne
adc
ds
ds
fwait
stos
pushf
das
pop
imul
mov
mov
in
int
xor
lds
bound
mov
int
fwait
outsb
mov
fildll
int
push
inc
jecxz
iret
iret
push
pop
lcall
mov
aad
push
mov
ror
mov
fwait
fwait
iret
leave
pop
lahf
add
adc
sarl
mov
push
dec
rolb
repz
mov
xor
or
les
xor
out
xchg
adc
out
outsb
outsb
cs
hlt
xchg
cmpb
outsl
push
sbb
adc
insb
outsb
push
sub
aam
or
notb
rorb
mov
pop
pop
sbb
out
xor
mov
fwait
jns
mov
xor
xchg
ljmp
fstps
pop
adc
dec
loopne
and
ja
std
xor
outsb
outsb
lahf
fildl
fidivl
rcrb
int
jge
outsb
adc
clc
sub
lods
sahf
sbb
or
sbb
or
ss
int
xchg
stos
and
pop
aas
ficompl
mov
push
mov
fwait
fwait
fwait
stc
shl
xchg
add
add
addb
inc
jge
push
std
test
add
pop
mov
repz
sub
push
fs
xchg
push
andb
ret
mov
sbb
mov
mov
leave
sub
push
sub
out
notb
sbb
dec
cwtl
sbb
aaa
adc
fsubr
dec
mov
ljmp
push
inc
ret
lahf
in
sti
mov
aam
subl
adc
sub
lahf
in
sti
sbb
xchg
adcb
stos
fistpl
hlt
jbe
jne
std
add
pop
adc
out
mov
outsb
dec
fadds
loopne
out
popa
pop
ja
sbb
sti
and
rol
fwait
sbb
xor
jle
pushf
cmp
clc
repnz
or
fwait
aaa
add
pop
in
or
shrl
mov
push
and
loopne
ds
mov
lcall
inc
jae
ret
test
push
dec
dec
mov
xor
sbb
fdivl
jle
test
mov
dec
lods
jle
cli
fsubr
jge
daa
arpl
add
in
add
fst
shl
jg
pop
cli
fstps
inc
mov
jbe
int
in
dec
imul
popa
or
pop
ret
sahf
int
repz
cmp
jge
sbb
subb
outsl
imul
ljmp
pusha
xchg
sbb
addr16
aad
mov
mov
mov
jl
mov
xor
dec
sub
popf
fwait
fwait
push
pusha
sar
pop
adc
xlat
pop
jae
pop
movsl
xor
jle
pop
pop
std
cli
and
jne
mov
fiaddl
jno
cld
cs
pop
lock
test
xchg
push
cmp
fsubrl
cmp
xchg
js
mov
push
rdmsr
add
lcall
movsb
ds
fcmovbe
jge
cs
iret
out
test
pop
xor
not
out
pop
lahf
adc
mov
movsb
les
mov
xor
fistpl
aas
xlat
sub
dec
xchg
pop
or
std
insb
outsb
jns
xchg
mov
cli
mov
dec
aaa
aaa
aaa
aaa
sti
popa
pop
xor
pop
pop
test
adc
cltd
ss
aaa
aaa
cmpsl
mov
inc
mov
or
mov
clc
add
rclb
sub
loopne
js
int3
xor
jnp
and
add
addb
popa
or
jae
jae
addr16
add
jo
ljmp
jae
mov
mov
mov
xchg
enter
jmp
shlb
mov
jnp
dec
pushf
inc
in
adc
outsb
outsb
jg
and
push
adc
push
cmp
mov
pop
pop
or
daa
mov
into
add
pop
lret
cli
rcl
cli
lret
int
and
add
mov
push
mov
int
jno
scas
int
xchg
js
call
out
insl
jle
jl
lods
test
outsl
pop
mov
shll
je
data16
adc
jo
out
arpl
in
sti
xchg
mov
bound
xchg
xchg
faddl
in
mov
out
fstl
rclb
loop
mov
inc
push
cmp
repz
hlt
aas
outsb
outsb
outsb
pushf
inc
and
das
inc
loopne
loope
adc
push
sahf
loope
jae
subl
arpl
addr16
cmpsb
sahf
out
pop
ja
les
sbbb
xchg
sub
mov
push
sub
inc
push
out
out
insb
sub
andb
psubsb
iret
cmp
in
fists
out
dec
mov
fmull
shlb
xchg
push
dec
inc
loop
ds
sub
mov
mov
pop
pusha
std
sbb
iret
pop
stos
aam
sahf
fwait
fwait
or
inc
leave
and
pop
xor
fisubs
popf
repz
add
hlt
ja
sub
scas
iret
mov
cwtl
sub
fstpl
push
push
mov
or
insb
xchg
pop
insb
cli
jecxz
mov
dec
mov
inc
ljmp
icebp
inc
mov
test
data16
mov
jmp
ror
out
ja
ds
les
mov
scas
cmp
outsb
outsb
outsb
dec
call
test
jae
push
scas
iret
outsb
outsb
outsb
outsb
push
scas
aaa
dec
std
sub
or
insb
outsb
xchg
sub
xor
dec
xchg
dec
add
aad
mov
ret
xor
jle
mov
mov
sub
bswap
push
mov
and
pop
lods
loope
and
test
push
lret
adc
enter
call
fs
out
or
push
stos
jb
dec
cmp
and
add
cmp
mov
xchg
lods
call
mov
cmp
jno
xchg
notb
mov
adc
mov
pop
shll
pushl
or
call
shlb
pushl
mov
jecxz
loope
xchg
jp
push
aam
push
push
sub
stc
dec
push
jno
lcall
xor
pop
mov
mov
cwtl
and
lea
mov
stc
add
ret
shr
sub
call
fiadds
jns
jo
sub
push
std
push
repnz
pop
mov
cltd
andl
or
dec
into
jmp
loop
pop
dec
push
inc
gs
fucomp
or
aaa
add
push
imul
lcall
mov
mov
add
cmp
inc
icebp
pop
icebp
aaa
sub
shrb
inc
cmpsb
lcall
jg
push
repnz
daa
outsb
out
xchg
ljmp
mov
jl
fdivs
cld
mov
loop
jae
pop
or
lods
pop
push
xor
call
outsl
mov
push
dec
or
jecxz
sbb
jg
xchg
pop
pop
mov
movsb
mov
mov
notb
pop
inc
mov
xchg
fistl
adc
fadds
xchg
pop
xchg
pop
xor
push
xchg
es
mov
pushl
bound
fstp
lret
ret
mov
lods
repz
mov
mov
in
mov
xor
or
mov
mov
cltd
jae
and
pop
sbb
mov
sub
lcall
insb
in
xchg
out
jo
pop
adc
fdivs
pop
inc
rolb
ljmp
inc
cmpsl
leave
jb
jg
dec
sbb
dec
xchg
js
arpl
std
int
pop
cmpsl
sar
call
sbb
imul
and
jae
mov
xchg
sbb
jns
addl
lcall
add
mov
or
mov
dec
out
mov
dec
jbe
sbb
lcall
fcoml
push
lahf
cs
mov
jne
cmp
push
dec
jmp
ret
pop
insb
cmp
inc
sub
and
pop
insl
inc
fcmovnu
lret
rol
jecxz
orl
lcall
and
dec
fdivl
in
ret
in
movsl
and
lret
mov
pushl
daa
ret
and
mov
or
hlt
mov
push
xor
lock
addr16
jecxz
pop
fldt
and
add
xor
xor
jne
call
cmp
faddp
mov
push
mov
inc
sbb
xlat
sbb
dec
sbb
arpl
int
es
or
je
pop
movsl
and
daa
fs
in
dec
sub
fcomp
add
out
inc
push
lds
mov
sahf
inc
push
loopne
push
cmpsb
pop
and
pop
jle
cwtl
ljmp
xchg
stos
pop
fsubl
repnz
xchg
sbb
xchg
leave
sub
das
cmp
and
xchg
push
mov
mov
incl
adc
daa
mov
xchg
rorb
mov
jne
ficompl
iret
into
push
pop
mov
push
xchg
imul
sub
inc
inc
shlb
dec
jno
shrd
lcall
jmp
lret
scas
mov
pop
dec
fldenvs
push
in
scas
jns
jno
lcall
mov
leave
xchg
data16
pmaxsw
xchg
hlt
lret
mov
test
sbb
lock
incl
adc
ret
rcrb
test
xchg
or
aas
lret
out
or
cwtl
out
dec
or
data16
and
xor
fwait
dec
es
jp
cmpsb
loop
ret
mul
popa
push
ss
bswap
mov
or
bound
bswap
mov
jl
cmpsl
jle
add
add
inc
mov
loope
push
xchg
sbb
std
stos
jns
push
lods
cltd
cs
fmull
pop
xchg
call
lods
rcrl
fmul
push
pop
lea
sub
out
inc
cld
mov
sub
push
pop
clc
hlt
lcall
jo
mov
push
jbe
adc
lret
pop
or
jbe
xor
mov
lods
lcall
mov
aam
pop
mov
cs
pop
or
stc
arpl
jo
pop
clc
scas
xor
xor
mov
js
jmp
incl
mov
pop
dec
shl
inc
nop
arpl
and
push
mov
push
xchg
pushf
inc
leave
adc
iret
dec
dec
adc
xchg
pop
aas
cmp
mov
rcrl
mov
sbb
loop
fucomip
push
cld
in
pop
jmp
cwtl
popf
add
fcomip
sbb
shlb
roll
fsubrl
adc
lcall
adc
and
sbb
arpl
inc
int3
les
inc
mov
lcall
cltd
pop
pop
add
sti
xor
xlat
or
pop
dec
adc
adc
cmp
xchg
stos
ljmp
repnz
xchg
gs
arpl
int
xor
lcall
mov
decl
test
clc
jne
push
jne
xor
js
jp
adc
pushf
das
sbb
jnp
mov
int3
addb
dec
xor
adc
and
and
mov
xor
pop
imul
or
xchg
adc
xchg
or
in
daa
fcomip
call
sarl
cwtl
adc
ja
lret
nop
mov
sub
or
icebp
hlt
ljmp
xor
push
lahf
dec
fdivrl
dec
pop
stos
mov
mov
adcl
dec
xchg
add
cmpsl
adc
das
adc
gs
mov
xor
xchg
bound
jno
cmp
fldl
in
mov
lahf
stos
dec
mov
inc
out
pop
loopne
jmp
dec
mov
add
cmp
push
mov
jmp
fildl
lods
das
mov
push
xchg
xchg
mov
push
dec
push
jns
xorl
mov
lahf
icebp
call
add
jne
xchg
lods
clc
decl
xlat
out
mov
test
xorb
xor
out
inc
mov
mov
fld1
rorb
add
cs
add
mov
bound
into
push
mov
gs
sub
data16
pushl
in
push
ds
shrb
and
iret
xchg
cmp
ja
cld
fadd
cmp
loop
out
sti
int3
cmp
xor
add
incb
aam
adc
sub
jl
xchg
jbe
or
push
push
jo
popa
lds
incl
dec
pop
dec
ret
movsl
in
fxtract
or
aam
push
scas
into
jle
jp
dec
cld
cmp
jmp
sub
cmpsl
mov
addb
test
mov
adc
add
mov
test
cli
adc
in
and
jle
ffree
nop
pop
cmp
aas
pusha
cmc
push
add
out
dec
cs
xor
ljmp
std
inc
fcmovnbe
std
andb
xor
lcall
popa
push
je
pop
adc
adc
incl
data16
and
lock
aad
les
pop
insb
test
mov
loope
jmp
jecxz
jg
icebp
mov
std
and
cmp
cld
cmp
push
cld
mov
js
mov
mov
or
sahf
add
cmpsb
decl
enter
imul
push
gs
xchg
dec
aas
inc
cmp
mov
fcomip
scas
mov
and
sub
outsb
jno
iret
pushf
lar
sub
jmp
addr16
stos
ljmp
xor
adc
scas
ret
dec
repnz
push
xlat
jp
or
mov
add
outsb
xchg
mov
xor
sub
jle
leave
jae
xor
mov
subb
xlat
rorl
jne
and
jg
jg
gs
cwtl
stos
jno
dec
mov
call
push
icebp
iret
sbb
jg
sub
pop
mov
dec
out
cmpsb
sahf
stos
sti
and
pushl
xor
out
nop
pop
aaa
popf
das
fcomps
mov
ret
fildll
or
aas
inc
mov
call
call
mov
mov
loop
jl
dec
pushf
push
sbb
cmp
daa
add
xchg
xor
lret
cli
incl
stos
mov
pop
sahf
pop
cmp
das
push
pop
pop
cld
xor
mov
push
call
xchg
push
adc
add
push
ljmp
or
inc
adc
adc
repnz
es
jmp
pop
inc
jmp
subb
jmp
xor
enter
sbbb
add
add
rclb
fisubrl
decl
shlb
mov
divb
push
jge
movsb
incb
mov
mov
mov
jmp
in
mov
inc
sub
mov
add
ret
mov
mov
or
clc
mov
mov
dec
pop
mov
pop
add
cli
mov
mov
inc
dec
jne
and
xor
inc
inc
and
xor
cmp
jae
data16
cld
or
mov
and
mov
cmpsl
dec
xor
mov
data16
incb
mov
out
lret
push
and
mov
pop
xchg
cmp
pop
mov
xor
add
out
dec
or
push
inc
inc
decl
sub
popf
add
cld
adc
push
jae
pop
adc
in
dec
fldenv
clc
insb
sahf
sub
cli
push
push
mov
push
fcomp
sarb
insb
lea
fwait
sub
push
push
xor
shlb
rcr
ret
aaa
inc
cmp
push
lss
pop
add
lds
nop
in
inc
pop
push
pushf
mov
jbe
adc
loopne
push
add
mov
int
lahf
dec
dec
sbb
push
push
cmp
shlb
clc
addb
test
inc
push
push
and
cli
movsl
call
cwtl
clc
cs
sub
mov
dec
cmp
adc
hlt
pop
in
and
jl
hlt
inc
in
mov
mov
mov
cmp
test
cmp
add
fcoml
adcl
push
xor
and
push
cmp
pop
pop
push
or
sahf
call
add
call
in
jl
xor
cmp
inc
loopne
loopne
cmp
sbb
mov
fcomp
pop
xchg
out
test
fdivs
aam
daa
imul
jecxz
dec
lcall
shl
jl
xor
int
cwtl
out
inc
mov
int3
push
andb
test
and
in
or
fstl
push
call
adc
mov
out
inc
int3
mov
sbb
int
xor
scas
iret
arpl
xchg
bound
pop
dec
mov
push
inc
pop
inc
out
iret
add
inc
add
xchg
jo
ss
xor
mov
add
das
adc
es
lock
dec
int3
enter
enter
fcomp
fxch
loopne
mov
pop
mov
pop
add
push
jne
je
insl
and
and
popa
cld
je
xor
xor
xor
xor
ss
cmp
inc
inc
inc
inc
inc
inc
jl
insb
adc
wrmsr
push
inc
cmp
xlat
mov
push
dec
pop
dec
xor
add
mov
fsubs
loopne
call
cmp
stos
dec
push
or
sbb
iret
repz
sub
cmp
push
cmp
repz
pusha
push
iret
repz
cmp
test
mov
iret
repz
loopne
lock
jb
mov
popl
xchg
and
add
leave
enter
insb
in
enter
push
shrb
push
push
repnz
leave
insb
cmp
pop
movsb
in
inc
in
pop
push
lfs
jle
jb
push
int3
rcrl
and
lahf
ud0
dec
movl
mov
cmp
ret
jns
or
push
rcr
repz
scas
loopne
sbb
dec
dec
mov
dec
jno
dec
jg
dec
dec
cwtl
dec
fidivs
dec
movsl
push
pop
mov
sahf
jae
jnp
push
add
ja
inc
and
clc
cmp
push
xor
cwtl
loopne
jg
dec
out
jns
sbb
mov
pusha
nop
cmpb
mov
xor
mov
imul
mov
ja
dec
jns
into
test
inc
lea
jno
ja
rorb
dec
push
dec
outsl
mov
repz
fcom
dec
dec
call
jle
adc
inc
movswl
andb
pop
and
push
xchg
movsb
pop
addb
or
daa
ret
adc
inc
addl
and
push
add
in
jle
push
add
dec
add
add
sbb
sub
cmp
dec
add
inc
sbb
and
and
add
je
push
out
bound
jb
adc
outsb
or
pop
jb
outsw
push
outsb
xchg
jbe
and
ja
push
arpl
add
outsb
push
dec
add
out
cmp
push
or
add
loopne
inc
pop
imul
mov
ss
jnp
pop
xchg
or
outsb
daa
or
and
fadd
fisttpl
dec
sbb
inc
addr16
loopne
sbb
add
add
pop
outsb
popa
jne
jb
inc
out
push
ret
out
bound
and
mov
inc
xchg
sub
cs
ja
mov
ja
push
jae
imul
iret
add
popa
sarl
jb
loopne
out
sbb
push
data16
jb
testl
sub
jne
idivb
sahf
bound
cmp
sahf
adc
cmp
scas
cmp
je
mov
lcall
xorl
imul
sub
aaa
xchg
pop
je
adc
jmp
test
insl
push
imul
dec
lock
xchg
arpl
es
adc
neg
pop
push
cmpsl
pop
fistps
mov
je
cmpsb
jo
push
fstpl
jle
sbb
xlat
sahf
xor
mov
das
jbe
sahf
aaa
dec
push
lds
sub
insb
outsl
fisubs
addb
bound
and
fsubrp
xchg
mov
aas
cmp
xlat
lock
insb
ja
shrb
jnp
or
push
mov
inc
inc
insl
pop
ljmp
pop
or
dec
jae
xorl
arpl
scas
pop
hlt
pop
lahf
add
push
iret
pop
shr
add
cmp
jae
add
jbe
cmp
imul
pop
and
xchg
pop
dec
push
cmp
dec
xchg
push
mov
loopne
arpl
jae
push
jo
jecxz
mov
jg
ret
push
add
loope
jno
imul
orl
loopne
dec
push
scas
jbe
pop
sbb
scas
addr16
out
jne
adc
xchg
mov
xor
jl
push
push
fistl
or
push
pop
adc
or
jle
jo
arpl
jne
sub
ljmp
fcomi
out
dec
sub
scas
stos
pop
jo
bound
ja
mov
aaa
sbb
outsb
stos
aad
out
popw
test
add
and
subl
aaa
popf
or
push
testl
pop
xchg
sub
inc
addl
pop
ja
jo
pusha
out
ds
es
rol
ficoms
lock
adc
jno
push
mov
pop
scas
loope
scas
jmp
mov
ss
pusha
lahf
pop
xchg
cmpsb
inc
mov
ret
adc
push
sbb
pop
out
pusha
mov
popa
xchg
fs
cmp
enter
pop
bound
movl
scas
loop
push
mov
imul
push
lock
adc
ds
aam
arpl
jo
adc
jo
loopne
jmp
xchg
xor
jb
scas
adc
push
addr16
push
jmp
xchg
adc
sbb
sti
and
xchg
roll
jmp
adc
fiaddl
jg
call
add
cmp
jns
jno
or
sub
xor
int3
xorb
dec
push
adc
and
jae
add
adc
in
je
insl
adc
push
push
jns
gs
jno
add
mov
outsb
outsl
ja
ja
aaa
adc
test
add
pop
xchg
jb
jo
outsb
push
add
push
jb
inc
ljmp
jp
adc
imul
jne
jb
sbb
insl
pop
adcb
jae
jmp
das
roll
jb
popa
fs
sahf
inc
jmp
pop
xchg
or
popa
mov
aas
push
jb
inc
fs
jae
dec
outsl
xchg
pop
fldenv
inc
inc
and
stos
int3
jge
cltd
daa
rol
ss
fisubl
pop
push
imul
lods
jecxz
stc
add
and
adc
xor
push
shl
cwtl
je
inc
mov
inc
insb
outsl
jae
and
push
mov
xor
loop
inc
outsb
mov
insl
inc
andb
xchg
data16
pop
push
in
enter
sbb
mov
mov
push
imul
sub
test
fcmovnu
push
sub
int3
pusha
inc
push
push
out
sbb
xor
bound
sub
push
mov
inc
outsb
cmpsl
dec
adc
int3
push
test
dec
enter
jecxz
xchg
push
inc
gs
mov
imul
jecxz
loopne
es
pop
push
scas
fs
outsb
inc
leave
add
dec
imul
loope
outsb
push
aaa
test
adc
push
je
cmp
adc
imul
push
scas
dec
lret
sbb
xor
adcb
sbb
icebp
rcll
pop
push
gs
push
fisubrs
and
outsb
dec
gs
in
push
ret
push
insb
ljmp
add
mov
dec
push
sahf
imull
das
inc
movsl
fldcw
lock
push
insb
inc
pusha
jmp
gs
outsl
js
sbb
stos
popf
jmp
mov
dec
gs
cmp
cmp
gs
cmp
inc
bound
bound
jb
sub
dec
pop
jl
loopne
inc
pop
pop
imul
mov
xor
push
cmpsb
dec
add
add
pop
inc
sub
add
sbb
add
sub
in
or
adc
push
add
add
nop/reserved
cmp
add
packuswb
add
jns
adc
pop
outsb
push
push
add
lock
add
add
inc
inc
scas
mov
xor
jnp
loopne
inc
pop
lock
push
jb
inc
push
push
add
testl
inc
in
push
rolb
lds
cmc
ljmp
imul
push
dec
lret
pushf
jae
enter
or
cmp
sbb
add
jns
cmp
dec
or
faddl
in
jae
dec
pop
outsb
aaa
ficoml
dec
aaa
adc
das
xchg
and
movsb
loope
mov
add
pusha
mov
lea
movl
push
jmp
nop
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
shlb
enter
mov
inc
add
add
jmp
add
add
add
add
add
add
add
orb
add
push
add
addb
add
jmp
add
add
add
add
sldt
pusha
add
cmp
add
mov
add
mov
add
fadds
add
add
add
sub
add
jmp
add
add
add
add
add
add
add
call
add
add
pusha
cli
inc
add
add
add
add
add
add
mov
push
add
add
pusha
cli
inc
add
add
add
add
add
add
enter
or
add
add
add
pusha
cli
inc
add
add
add
add
add
add
lock
add
push
add
add
pusha
cli
inc
add
add
add
add
add
add
sbb
add
test
add
add
jmp
add
add
add
add
add
add
add
fcompl
add
add
add
pusha
cli
inc
add
add
add
add
rolb
xorb
or
add
add
add
jmp
add
add
add
add
add
add
pop
add
add
pusha
cli
inc
add
add
add
add
add
add
mov
add
pushf
pop
add
add
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
add
mov
addb
lds
add
add
addb
filds
add
add
addb
testl
add
add
add
add
addl
dec
addl
pop
addl
push
add
add
add
add
add
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
jbe
jo
xor
cs
insb
add
insl
fs
xor
cs
insb
add
gs
jne
xor
cs
insb
add
gs
xor
fs
insb
add
jb
imul
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
gs
insb
outsl
jae
dec
gs
add
inc
gs
popa
jbe
inc
imul
add
push
jns
inc
jb
gs
je
imul
push
js
inc
add
add
jb
jne
jb
push
popa
insb
jne
inc
