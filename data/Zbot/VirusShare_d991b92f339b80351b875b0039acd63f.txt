incl
les
cwtl
push
jge
ds
mov
mov
pop
ret
pop
add
pop
pop
decb
negl
incl
add
ret
fucom
out
or
add
pop
ret
ret
adc
inc
inc
xor
sub
mov
jbe
and
pusha
imul
ljmp
inc
add
inc
add
adc
add
add
inc
add
pusha
idivb
mulb
and
movsb
and
push
adc
addb
add
lret
in
idivl
add
add
xor
pusha
add
sbb
cmp
and
and
pusha
adc
scas
fsts
push
bound
pushl
jp
call
lret
mov
ror
pusha
clc
add
sbb
std
lods
popf
pop
or
mov
add
add
xlat
xchg
cltd
or
adc
int3
mov
or
cmp
jle
cmp
push
shlb
pop
inc
adc
in
enter
push
inc
pusha
add
mov
in
in
call
fsubr
stos
loopne
xor
inc
inc
sbb
lods
pop
add
adc
push
jns
pop
jo
and
cmp
add
xchg
xor
addps
add
in
add
xchg
adc
into
push
push
push
sbb
outsl
int
add
std
pusha
add
cli
sbb
adc
add
inc
mov
inc
push
pop
sub
ret
out
subb
or
add
add
and
and
andl
and
or
rorb
inc
orl
add
adc
addl
mov
or
shlb
pusha
dec
add
pop
or
inc
and
or
sti
fwait
pop
jnp
or
adc
push
add
add
addl
adc
add
subb
cltd
mov
andb
push
add
add
inc
or
rolb
pusha
add
xor
mov
dec
add
or
pusha
mov
rolb
add
mov
jo
mov
and
ss
ljmp
cmpl
add
add
xchg
xor
or
dec
mov
data16
data16
mov
sub
fsubrs
and
cmp
cwtl
or
int3
test
and
cwtl
ljmp
loop
or
jo
shll
add
inc
pusha
push
push
sub
int
orl
jo
adc
mov
insb
pop
in
mov
jo
mov
mov
lcall
test
sar
scas
loop
es
sbb
scas
xchg
or
test
rclb
dec
or
lret
add
xchg
or
es
or
mov
mov
inc
or
or
shr
pusha
mov
push
sub
shlb
andl
or
data16
loop
mov
ret
js
cmp
xor
cmp
sbb
cmp
or
test
or
xor
dec
inc
add
add
dec
cmp
mov
andb
push
insb
and
int3
hlt
test
mov
ret
scas
loope
or
out
mov
dec
hlt
fdivrl
or
or
mov
lods
sub
in
mov
mov
subl
add
out
mov
gs
sahf
or
mov
adc
sbb
add
nop
fs
lcall
adc
add
popa
xchg
ror
jle
call
icebp
in
addb
or
or
or
btr
mov
cmp
inc
negb
cmp
sbb
subl
xchg
jnp
test
je
call
mov
xor
add
and
push
xor
push
mov
adc
xchg
int3
xchg
sarb
xor
jbe
xor
jp
and
fxch
in
pusha
cld
pop
sarb
xor
inc
pop
shrb
or
andb
pop
add
or
push
push
xchg
pop
loopne
push
add
orl
cs
add
sbb
cmp
push
push
add
jp
adcb
pushf
sbb
pusha
shrb
ja
or
xor
test
insl
jno
shlb
or
xor
lcall
push
call
and
pushw
test
es
xor
dec
add
mov
adc
add
jle
es
hlt
data16
shlb
mov
sub
inc
lock
adc
pop
and
or
push
fmul
cmp
jl
fdivs
xor
shlb
push
inc
sub
add
in
inc
push
dec
test
ret
push
push
push
add
cmpsl
add
ret
js
lcall
xor
or
push
jnp
cmp
push
pop
daa
xchg
mov
and
cli
jns
testb
adc
push
int3
push
popl
sarb
jb
mov
orl
add
andb
or
sbb
mov
pop
scas
xchg
enter
int3
rcrb
test
lahf
pop
add
stos
add
incl
dec
add
dec
pop
dec
sub
dec
not
inc
dec
jmp
inc
add
add
ret
movb
push
cli
ljmp
mov
and
test
neg
mov
mov
inc
mov
fisubrl
not
neg
mov
xor
or
ds
es
imul
out
or
mov
inc
or
sti
negl
clc
mov
inc
jbe
add
mov
insl
jae
mov
push
lret
sti
jnp,pt
pop
xor
lret
repz
outsb
lock
mull
adc
add
int3
mov
pop
adc
out
in
sarb
and
nop
nop
sub
and
in
in
ja
js
stc
nop
pop
in
neg
loopne
lock
add
test
in
adcl
dec
sub
sahf
aas
adc
xchg
daa
inc
mov
insb
addr16
xor
jbe
ja
loope
push
fistpl
add
adc
icebp
ljmp
or
and
or
xchg
jns
fsubs
push
maxps
call
jmp
mov
shll
or
add
add
xor
or
clc
nop
fwait
in
outsl
pop
adc
roll
dec
add
or
inc
cmp
jmp
out
add
sar
testb
and
jmp
cmp
test
fldt
xor
jne
dec
adc
sub
sub
dec
jmp
add
sub
jmp
or
ss
mov
int
xchg
out
mov
cld
jecxz
int3
and
add
inc
jmp
test
pop
inc
mov
lods
dec
movsl
and
lea
test
add
and
in
add
clc
rorl
test
push
inc
fsub
ret
jns
xor
popa
es
add
push
adc
fistps
rolb
cmp
cmp
jae
ja
call
mov
xor
aaa
in
lods
jecxz
mov
enter
cmp
mov
sub
mov
dec
je
add
decb
mov
xchg
sub
mov
dec
es
dec
addb
inc
fsubl
dec
mov
shll
mov
xchg
out
dec
pop
gs
inc
cmc
add
out
cmp
and
divb
mov
adc
mov
push
sub
mov
mov
fdivl
push
xor
inc
push
ljmp
stc
in
mov
lods
mov
cltd
ret
add
push
mov
add
adc
xor
stc
int3
inc
js
popa
sub
rorb
lock
jge
push
dec
call
test
ja
push
dec
loope
push
out
jns
repnz
sub
cmp
cwtl
pop
mov
daa
adc
roll
cmpsb
addr16
ficoml
or
push
fcompl
xchg
push
and
cmc
int3
mov
adc
nop
fisttpl
js
fstl
add
adc
clc
insb
mov
arpl
lret
dec
mov
pop
xor
push
jns
add
sbb
mov
jmp
sahf
dec
jne
mov
sub
mov
dec
hlt
sti
fs
hlt
lds
enter
mov
sbb
xchg
xchg
sbb
cmp
pop
fcompl
es
loop
or
popa
or
add
dec
loope
loope
clc
pop
pop
shrl
dec
jge
push
popa
fiadds
lret
mov
je
xor
xor
rcrl
xlat
lea
inc
dec
test
xchg
push
xchg
jle
push
lock
push
mov
lock
xchg
pop
inc
movsl
std
push
mov
or
mov
add
sbb
cmp
pop
pusha
out
outsb
add
pop
faddl
orl
xor
loopne
cmp
jno
sti
bound
movsb
mov
cmpsb
fcoms
fldenv
ds
fbstp
lret
sbb
shl
pop
rorb
jmp
ja
sbb
and
aaa
push
insl
aam
or
add
imul
jns
xchg
xchg
aas
mov
popa
pop
adc
iret
mov
daa
adc
sbb
push
xchg
lea
lret
sahf
outsb
jmp
cld
xor
addb
js
add
lock
cmc
jg
loope
pop
jbe
call
xor
call
outsl
xor
sarl
call
pop
imul
dec
mov
pop
scas
mov
xlat
dec
call
jmp
pop
fldl
jae
jno
add
jbe
sbb
mov
fldln2
add
cld
add
mov
mov
loopne
cmp
add
adc
sbb
xor
popf
dec
subb
jb
add
je
push
inc
mov
nop
loope
cwtl
push
sbb
cmc
stc
mov
add
dec
mov
out
lea
cmp
sbb
and
popf
or
cmp
mov
sub
xor
or
mov
or
mov
int3
bswap
pusha
jb
cltd
in
add
jbe
cmc
out
push
mov
int
icebp
push
xor
sti
sbb
stos
and
inc
jl
shlb
fsubs
enter
cmp
jo
fisubrl
sbb
push
popf
fwait
sahf
mov
or
add
xor
nop
js
cmc
cmp
inc
pop
push
add
inc
cmp
dec
hlt
fwait
xchg
xor
notl
fcoms
shll
xor
and
imul
repnz
mov
jne
mov
mov
mov
stos
mov
add
addb
fistpll
add
addb
cmp
dec
or
hlt
add
inc
add
sub
xlat
icebp
popa
xor
sbb
sub
and
push
inc
addb
cli
fistps
dec
or
shl
loope
cmpsb
xor
int3
adc
je
notl
lock
adc
xchg
in
ret
aad
adc
lods
in
cmp
pop
cmpl
cmpb
mov
or
insl
loop
rorl
sbb
inc
jmp
push
test
fs
in
adc
jecxz
push
fdivs
dec
in
call
adc
movsl
loopne
cmp
in
and
ret
cli
sti
out
pop
mov
lock
pop
add
sbb
rorl
sub
sub
ljmp
push
dec
mov
inc
or
lcall
fnsave
dec
std
mov
push
cmp
lds
sbb
rcll
dec
rorl
sub
jecxz
add
andb
shr
cmp
adc
mov
xchg
jg
fsub
iret
aas
sub
dec
repnz
jl
add
add
shrl
gs
xor
xlat
mov
pop
ljmp
xchg
or
add
js
push
mov
fnsetpm(287
fistpll
lods
xchg
out
test
loop
out
lret
inc
mov
adc
stos
lock
mov
xor
fldenv
ret
insb
push
lcall
lock
sub
add
add
lock
sub
pop
pop
test
mov
cmp
and
sbb
add
cmp
aaa
repnz
and
push
mov
xor
fistpll
jnp
mov
jne
xor
lock
add
adc
jne
pop
dec
jmp
adc
xor
jl
adc
stos
mov
add
push
dec
faddl
inc
aas
sbb
dec
adc
data16
mov
inc
pushf
mov
pop
lock
xchg
mov
adc
cld
bound
int3
in
add
sbb
xchg
xor
pop
in
mov
pop
adc
cmpsb
mov
push
pop
mov
cli
inc
fwait
daa
add
sbb
hlt
add
cld
push
ret
add
lea
call
cmp
dec
and
call
cmp
lock
out
or
sbb
pop
or
inc
notl
dec
xchg
add
xchg
call
sbb
pop
lcall
idiv
or
ret
add
add
and
and
mov
lret
testl
fmuls
lea
pop
cltd
pop
lods
fildl
fidivs
mov
xor
mov
testl
sbb
loope
flds
sbb
mov
add
mov
loop
mov
mov
loopne
into
fisubl
pusha
xor
lock
mov
sub
dec
fdivr
cltd
es
int3
into
insb
sbb
ss
push
popa
lods
nop
jmp
or
xor
inc
loopne
lret
data16
add
mov
inc
ret
shr
sub
push
in
pop
pop
lcall
fmull
fdivr
xor
movsb
mov
xor
loope
dec
mov
and
or
xchg
or
inc
add
in
inc
add
adc
mov
fstp
loopne
mov
out
dec
cs
inc
mov
adc
mov
sub
sub
mov
out
dec
add
pop
into
adc
pop
cmp
xchg
xchg
pop
cmp
nop
es
dec
loope
pop
mov
cld
fstpt
mov
sbb
push
rorb
into
xchg
ret
scas
pop
dec
ljmp
cmova
into
outsb
add
or
pop
call
xchg
fildl
mov
cld
sbb
sti
ja
sti
daa
xlat
mov
cmp
jne
mov
icebp
add
ja
mov
jmp
loopne
andl
inc
sysexit
fistps
xchg
pusha
movsb
not
stc
mov
movsb
mov
pop
test
push
adc
cmc
jmp
fisttps
out
xchg
stos
inc
xor
sbb
dec
hlt
mov
inc
pop
nop
stos
or
and
inc
sbb
or
loop
push
dec
arpl
push
in
test
mov
icebp
notb
loope
fcomp
into
mov
daa
repz
sbb
mov
inc
inc
cmp
shll
mov
sbb
out
mov
in
mov
jp
ljmp
inc
aam
sbb
mov
mov
das
nop
sub
ret
cmp
push
es
mov
in
sub
add
aam
pop
in
cmp
xchg
sbb
cltd
sub
movsl
dec
fists
dec
xor
in
arpl
out
mov
add
push
rclb
pop
mov
icebp
lcall
xor
jae
add
xor
mov
xchg
pop
jno
stos
adc
push
clc
fbld
aad
or
ljmp
dec
inc
clc
jecxz
sub
lret
sbbl
scas
sbb
out
or
loope
mov
push
rclb
mov
push
cld
lods
cmp
or
cs
rcrl
mov
adc
dec
jnp
call
sbb
sbb
push
shl
mov
push
repz
mov
repnz
push
not
pop
inc
push
push
sub
das
pop
popf
jo
pusha
mov
cmp
fldt
mov
adc
lahf
push
jl
jl
mov
sbb
pop
dec
fwait
pusha
scas
or
in
pop
clc
lock
jo
shll
ret
xchg
call
repz
cwtl
adc
je
movsb
pop
aam
dec
xor
inc
sbb
add
das
dec
add
imul
mov
add
xor
call
mov
sarb
and
sub
es
in
pusha
mov
sub
sti
cwtl
adc
aas
add
sub
mov
sbb
loopne
mov
push
cmc
add
xchg
cmp
xchg
inc
dec
aam
cwtl
adc
ss
push
cmp
sub
adc
mov
sub
aam
aam
iret
rcll
or
mov
or
or
je
adc
div
adc
loopne
addr16
loop
outsl
push
fcom
lcall
mov
lret
test
lidtl
push
jmp
shlb
push
data16
loop
jle
add
outsl
push
outsl
lret
xor
mov
mov
adc
loopne
add
push
add
enter
cmpsl
xlat
mov
dec
xchg
pmaddwd
or
std
addr16
jge
and
cld
xchg
in
and
push
pusha
add
popf
jle
add
push
jmp
cmp
ja
lea
popf
cmpsl
xchg
sub
or
add
ss
loopne
loopne
add
add
loop
aad
adc
sub
loopne
sub
sbb
fstpt
add
add
inc
shrl
test
rcll
xlat
neg
sbb
push
neg
mov
jns
aad
aam
mov
add
push
insb
mov
sub
push
push
push
frstor
fistl
aas
aas
fxch
push
outsb
add
adc
out
mov
mov
outsl
ss
cld
push
push
lea
ret
push
adc
sbb
add
test
lock
fiaddl
xor
and
xor
dec
push
jmp
lret
loope
clc
inc
and
rcr
ret
xor
pop
push
out
loopne
push
jge
aam
push
stos
stc
and
and
add
ret
and
out
dec
loopne
mov
mov
loope
push
inc
stc
xlat
out
clc
or
leave
ret
neg
xor
sbb
sbb
sbb
bound
pusha
and
inc
andb
cli
ja
add
inc
sub
mov
xchg
push
inc
sti
in
es
xor
add
sbb
pop
fidivrs
push
adc
je
clc
ja
mov
into
shll
mov
pushf
lods
add
cli
sub
xchg
enter
dec
jne
inc
flds
pop
mov
jle
mov
xchg
fistl
iret
loop
inc
addb
lock
cli
daa
and
xlat
mov
inc
sub
pop
scas
sbb
jmp
cmpsl
add
inc
addb
pop
lock
dec
mov
cs
stos
popf
add
or
adc
outsb
inc
push
jns
test
bnd
push
push
aas
call
in
sar
mov
mov
rcrl
push
jmp
dec
inc
aas
add
fadds
rorl
ss
adc
adc
push
fistps
stos
ret
jne
stos
mov
fisttps
icebp
das
dec
inc
sbb
sbb
stc
icebp
sbb
in
cmp
aas
sub
mov
incb
loopne
stos
inc
add
into
jmp
add
and
aad
addr16
add
popf
jno
xor
xchg
mov
fsubrs
inc
push
cmp
fisttpll
pop
rclb
gs
pop
jmp
daa
mov
inc
pushf
dec
adc
ret
int3
xchg
or
dec
test
cmc
clc
adc
add
stos
sahf
enter
lock
cmp
lock
adc
fcmovnb
add
jp
push
add
adc
pop
mov
mov
aam
pop
add
gs
jmp
addr16
loope
or
and
xor
loope
icebp
test
aaa
mov
pusha
dec
jbe
jnp
jo
jl
fcomp
fsubl
les
jge
mov
jne
popa
add
ret
inc
out
or
jnp
dec
je
loopne
or
mov
cmpsl
aas
sbb
cli
int3
pop
loopne
clc
loop
xor
movsl
incl
push
jecxz
add
pcmpeqb
daa
scas
popa
lret
lcall
pop
xchg
push
jle
shrb
cmp
jne
dec
aas
scas
add
jmp
mov
subb
or
xor
lcall
mov
sub
pop
adc
and
pop
icebp
rolb
sti
jmp
mov
add
add
lds
enter
sbb
test
adc
inc
popa
incl
jae
mov
int3
movsl
andb
adc
cmp
adc
pop
pop
fdivrs
inc
sbb
cli
mov
add
pop
mov
or
sub
push
imul
jmp
in
and
xor
add
adc
jae
aam
sbbl
clc
out
jle
out
mov
adc
mov
cmp
ja
cmp
push
pop
or
cld
out
inc
mov
add
shlb
pop
lcall
call
dec
lods
mov
ret
loope
fchs
loopne
idivl
pop
mov
repz
ret
jge
out
add
dec
ret
outsb
push
push
test
push
xlat
ljmp
sub
aam
scas
pop
outsl
pop
ss
add
clc
adc
inc
cwtl
rolb
les
data16
sub
pushf
ficoms
mov
inc
bound
arpl
imul
ljmp
repnz
sub
inc
rorb
sbb
dec
sbbb
je
pusha
and
stc
jecxz
cmp
xchg
lods
jbe
mov
xor
icebp
movsl
dec
daa
jo
jge
fmull
not
pop
hlt
mov
mov
pusha
or
shll
jmp
je
add
mov
dec
add
and
fiadds
fiaddl
mov
push
add
pop
and
fwait
outsl
bound
fsubrl
testb
dec
fcomi
test
pusha
rorb
in
adc
nop
xor
dec
shlb
sarb
ret
fisubs
scas
mov
nop
add
inc
inc
jl
je
dec
fistpl
std
das
xor
mov
xor
dec
xor
pop
inc
stc
test
jne
scas
xor
aas
dec
jp
mov
iret
icebp
out
out
cmp
dec
xchg
push
inc
cmpsl
lea
stc
xor
incb
cmp
mov
call
xchg
inc
je
dec
and
std
lods
add
jecxz
add
ret
out
pop
jecxz
cld
adc
push
inc
pop
jne
fimull
test
and
sbb
push
pop
mov
push
lds
scas
mov
repnz
test
inc
add
mov
pop
add
outsb
mov
jp
mov
adc
push
and
xchg
sbb
mov
inc
xlat
ljmp
add
loope
es
and
std
vmread
repnz
aad
jmp
cmp
jb
add
and
add
jmp
jbe
jne
inc
push
fsubs
jo
pop
outsl
sbb
lret
bound
inc
lea
lods
scas
call
dec
push
push
les
lock
loopne
sub
mov
ret
mov
fldenv
sbb
xor
jmp
and
popf
push
jmp
and
cli
out
scas
xchg
mov
add
repz
adc
test
outsl
nop
stos
xchg
mov
jo
ret
mov
cmp
test
add
xlat
in
repz
cmc
jp
xlat
dec
and
out
dec
inc
adc
scas
sar
test
out
xor
lock
xchg
xor
push
inc
std
jge
test
imul
push
dec
jmp
or
inc
sbb
push
add
adc
ret
lods
imul
mov
loop
sub
jg
fsubl
sahf
bnd
mov
cmp
push
cmpl
add
js
out
push
mov
push
sbb
add
lock
adc
lock
xor
push
pop
arpl
sub
mov
fdivl
push
rorb
popf
or
notb
test
sarb
aam
xchg
add
mov
inc
add
loop
roll
ret
addb
mov
mov
mov
loop
fcom
mov
add
imul
fstp
scas
xor
sbb
movsl
mov
or
cmovne
mov
push
aam
xor
rolb
pop
pop
js
dec
pushf
rclb
mov
aas
xor
ficoml
or
js
mov
scas
loopne
mov
or
xchg
xchg
mov
dec
push
cld
and
cmp
fcmove
pop
mov
jo
lcall
inc
and
xchg
pop
mov
gs
ret
sub
movsb
rorb
in
call
sbb
mov
and
push
insb
insb
sbb
xchg
fcoms
pop
mov
or
add
mov
sbb
add
ret
mov
push
sbb
cmp
or
jns
and
dec
imull
shr
test
xchg
shrb
aam
das
add
lcall
push
sbb
shlb
sub
fisttps
aam
mov
jl
jb
dec
push
inc
jbe
and
loopne
fidivrl
mov
push
out
mov
sbb
minps
lock
repnz
inc
jo
pusha
clc
add
stos
adcl
mov
push
call
adc
mov
push
jecxz
dec
pop
aaa
or
xor
xor
pop
call
dec
mov
jno
int
xchg
nop
push
jnp
push
fmull
mov
fsubrp
shlb
ret
jnp
mov
js
f2xm1
xlat
add
xorb
outsb
cmpl
mov
inc
dec
loop
xor
dec
sub
mov
mov
jmp
jb
mov
add
test
lds
pop
std
jmp
dec
add
push
data16
or
in
dec
inc
dec
add
mov
mov
fcoms
xor
xchg
add
and
lea
and
sbb
xor
mov
fildl
push
lret
ficoms
push
ss
cli
iret
add
jo
outsb
mull
data16
push
pop
cmp
shrl
push
adc
fsubrs
cli
fcoms
loope
jge
add
filds
mov
leave
rcrl
dec
inc
adc
subb
pop
mov
in
sbb
mov
inc
ja
lahf
sbb
ficoms
lcall
cmp
and
push
mov
push
repz
clc
sbb
xor
lea
or
shlb
or
call
sbb
mov
lock
and
shll
mov
jne
rclb
rorl
loopne
clc
enter
movsl
int
test
mov
js
sub
sub
loop
fdivp
ljmp
loop
mov
std
push
mov
test
out
add
fdivp
or
push
out
push
push
push
addr16
call
stc
pop
daa
loope
lods
shl
scas
mov
inc
ljmp
dec
sbb
nop
pop
lock
lock
and
or
mov
xchg
add
add
xlat
xchg
jae
sbb
fstps
xorl
sahf
and
out
or
insl
cmovg
lock
test
inc
stos
sbb
jp
mov
jge
mov
lret
sbb
push
mov
enter
push
cmpsb
adc
clc
daa
add
cmp
xor
dec
and
mov
nop
sub
add
rol
sbb
sbb
adc
psllq
dec
rcll
sti
lock
neg
orb
stc
pusha
fmul
clc
aad
fwait
adc
push
scas
out
icebp
jno
les
xor
push
ljmp
ja
psubd
adc
jg
sbb
js
add
inc
push
mov
pop
loope
adc
push
rcl
lahf
shl
mov
add
dec
mov
jl
cmp
mov
mov
sbb
dec
roll
pop
inc
pusha
or
sarb
pop
mov
roll
sub
mov
rolb
or
in
dec
mov
enter
adcl
adc
jmp
add
mov
xor
sub
add
lock
add
sbb
lea
cld
lahf
arpl
xchg
mov
into
xor
mov
mov
jns
ret
cmpsl
out
rolb
push
jne
push
ljmp
loop
dec
inc
cmp
pop
sub
jae
mov
arpl
movsb
add
loopne
dec
push
xor
lea
sub
jecxz
mov
fiadds
imull
cmpsb
aam
and
sub
and
add
push
and
add
or
mov
lcall
mov
pop
outsl
inc
adc
out
xchg
or
cmpsl
mov
fcomp
sbb
clc
push
push
push
xchg
shlb
jg
adc
cmp
jbe
add
movsl
or
mov
das
clc
adc
cld
jmp
jno
test
cmc
je
arpl
sbb
test
cld
repz
sub
add
pop
jae
jge
dec
shrb
cwtl
fdivl
mov
add
sbb
call
xlat
enter
pop
mov
out
push
test
mov
cmp
add
xorb
popa
mov
sbb
icebp
roll
jns
shrb
mov
and
in
nop
push
jo
and
add
outsl
push
lock
dec
testb
jae
gs
js
js
adc
dec
repnz
add
lcall
bound
pop
cmp
test
cli
jmp
fsubr
xor
ret
add
pop
xorl
pusha
inc
mov
test
outsb
or
adcl
inc
fdivs
and
nop
xchg
jnp
sti
call
cld
sbb
adc
mov
aam
inc
pop
lock
adcb
add
test
mov
push
call
push
and
bound
mov
sbb
and
add
add
pop
inc
shrb
xor
lods
inc
sub
cmp
jo
mov
rorb
aas
cmp
add
jno
popa
lret
ficoms
adc
icebp
fwait
adc
mov
sub
ret
daa
jg
add
add
mov
insb
or
mov
stos
cld
fcompl
loope
add
xor
add
stc
push
jge
imul
push
jne
push
dec
movsb
pop
mov
mov
cmp
add
inc
pop
push
xor
and
push
xor
mov
lds
sub
fistps
sarb
cs
xor
pop
jmp
jmp
mov
sub
jmp
lods
idivb
les
push
jp
sbb
pusha
mov
aaa
mov
hlt
inc
mov
pop
xchg
mov
shrb
adc
sbb
dec
sbb
push
lods
add
jg
push
push
insb
dec
insb
or
subl
aad
add
add
sbb
add
xor
xlat
adc
and
and
add
rcr
add
fsub
sbb
jo
sbb
pop
and
sbb
test
jle
faddl
and
or
les
push
outsb
add
roll
xor
add
fstpl
addl
mov
inc
stos
adc
in
add
or
add
push
mov
push
add
add
push
xor
or
mov
or
mov
add
and
repz
cmc
pop
lahf
inc
xor
inc
inc
push
mov
ss
push
xor
test
xor
jecxz
cmp
jbe
filds
lods
and
mov
nop
pop
clc
or
or
inc
mov
les
test
cmp
aas
pop
sbb
xchg
or
jno
cmpsb
mov
fcoml
jmp
pop
dec
dec
cmp
jae
aas
add
rclb
mov
lret
cmp
inc
daa
mov
cltd
xor
cwtl
popa
sub
dec
mov
push
rcrb
test
jne
add
stos
js
pop
xchg
out
jge
or
cmc
ss
add
rcrl
mov
cmp
cmp
popl
jno
add
or
jnp
mov
mov
testb
jg
push
in
imull
in
mov
aas
mov
out
pop
or
addl
icebp
cmp
sbb
jmp
pop
in
and
cmp
add
aas
sbb
adc
rolb
add
and
jmp
dec
fsubl
enter
sbb
and
or
jmp
lret
decb
mov
shrb
adc
xchg
dec
jae
inc
push
push
movsl
jo
xchg
jno
mov
xlat
rol
sbb
sbb
cmp
icebp
mov
fldl
jecxz
add
inc
cli
add
pop
test
test
roll
sbb
add
fcmovu
mov
inc
push
call
cmp
fstl
je
xor
or
mov
mov
xor
push
xor
push
inc
or
rol
pop
mov
mov
mov
mov
push
sbb
add
faddl
loope
les
jnp
push
or
mov
nop
or
pop
lods
mull
loope
das
fdiv
mov
adc
adc
cmpps
sbb
lock
push
icebp
outsl
in
xchg
sbb
addb
adc
pop
pop
adc
sbb
adc
mov
pusha
ret
inc
xor
aam
xlat
lock
adc
push
push
push
adc
fdivl
xchg
rorl
les
add
aam
sbb
sahf
or
loop
cmp
jne
inc
rcr
loopne
call
es
shrb
jle
xchg
push
xorl
xlat
mov
js
pop
sub
adc
outsl
inc
cmp
and
lods
icebp
insl
or
adc
cld
fimuls
daa
push
js
mov
adcb
scas
adc
dec
jb
sti
lock
or
aaa
xor
pop
cld
sub
lret
jmp
xchg
cmp
sbb
or
adc
push
addl
dec
cmpb
dec
ret
jge
adcl
mov
sub
inc
xor
push
mov
xchg
sbb
movsb
iret
mov
push
call
add
sbbb
jge
scas
lock
pop
xor
icebp
addl
scas
or
ficompl
or
jo
in
es
scas
fisubl
mov
xlat
mov
outsb
inc
clc
idivb
dec
lea
push
lea
push
push
loopne
je
and
nop
cmpsl
dec
movsb
push
shl
xchg
cmp
add
inc
add
in
sbb
dec
test
sbb
in
fsubl
cld
lea
out
or
sbb
shll
and
jae
xor
outsl
xor
sar
add
sbb
aaa
ljmp
mul
fwait
mov
mov
inc
in
aam
pop
gs
icebp
sub
pusha
mov
sbb
and
notl
aam
sbb
fimull
mov
adc
hlt
dec
neg
inc
hlt
pop
lock
jns
inc
and
ret
or
mov
mov
bound
fisubrs
dec
loopne
add
ljmp
mov
fnstsw
add
add
push
cmpsb
dec
out
imul
hlt
inc
hlt
push
pop
cmpsl
inc
cltd
dec
stos
in
push
xor
or
roll
xlat
xchg
nop
out
mov
js
stos
loope
mov
jns
mov
pop
out
xchg
cmp
sub
mov
cmp
adc
movsb
sub
call
inc
in
add
loope
jno
pop
testl
lods
bound
xchg
sbb
call
push
push
addr16
hlt
pavgw
out
add
add
cmp
lock
mov
xor
aad
mov
sub
mov
add
mov
add
lahf
push
adc
ror
enter
mov
sbb
out
loopne
out
xor
sahf
and
adc
mov
and
cmpsl
pop
or
mov
sub
add
add
mov
cmpsb
jno
adc
hlt
loopne
xchg
xchg
and
out
mov
xor
aam
add
pop
jno
lock
cmp
jmp
and
jbe
or
rcll
mov
sti
les
icebp
ret
in
add
ss
sti
add
pop
ljmp
int3
loopne
insb
or
pop
int3
fiadds
and
enter
mov
std
xor
pop
ret
push
std
imul
sbb
fisubrl
push
xor
push
cmp
int3
jge
rolb
dec
iret
repnz
scas
add
fs
call
mov
jmp
add
add
inc
loope
mov
and
aas
es
add
jo
cmc
std
xchg
testl
xchg
xchg
push
vmread
ja
mov
lock
jmp
and
pushf
decl
les
cwtl
sbb
sar
icebp
inc
incl
add
xchg
jecxz
sub
mov
clc
add
push
test
or
addl
add
jmp
push
fsubrs
add
dec
loopne
push
call
arpl
jae
or
imul
jecxz
inc
jmp
mov
outsb
mov
add
sbb
bound
mov
push
mov
ljmp
cmp
jbe
xchg
nop
lods
adc
sub
sbb
xchg
mov
je
inc
subl
add
inc
rcrl
sbb
pop
jle
mov
mov
push
scas
jmp
xchg
xlat
pushl
daa
jmp
daa
cwtl
mov
or
mov
mov
add
negb
call
add
inc
out
rol
inc
and
push
sub
sub
xor
push
inc
sbb
jmp
clc
or
out
mov
mov
outsl
xorl
bound
popa
add
sub
gs
cmpsb
cmp
testl
or
dec
stc
sub
sub
mov
cmp
hlt
fidivrs
sub
or
sbb
imul
mov
adc
add
or
add
mov
sbb
mov
shl
pop
in
jnp
fimull
fidivs
and
in
jb
cmp
loop
sbb
shr
add
mov
add
dec
test
push
cmpsb
lret
std
adc
sbb
shll
nop
movsl
mov
push
lock
popa
cwtl
movhps
add
inc
lods
pop
fidivs
adc
pop
pop
lock
inc
jg
jbe
inc
mov
adc
inc
lock
sahf
push
mov
rcl
mov
loope
ret
adc
or
fistl
push
sub
sub
rolb
pop
dec
loop
mov
cmpsb
xchg
test
notb
push
or
pushf
mov
aad
push
xchg
or
subb
ljmp
xlat
mov
shr
xchg
pop
loope
sbb
shrl
and
xor
imull
jmp
pop
push
push
mov
lods
sbb
fimuls
rolb
or
inc
sarb
inc
jle
imul
loope
xorb
adc
xor
push
mov
fisubrs
adc
sbb
es
jo
cmp
and
mov
out
imul
jbe
ss
xor
mov
enter
dec
cmp
jno
outsl
jnp
fmuls
daa
jne
xor
fdivrl
cmp
or
in
je
dec
icebp
jmp
loope
xor
in
rcrb
cmpsl
xor
flds
and
sahf
enter
sarb
movsl
shl
push
dec
adc
cmp
push
inc
adc
daa
fucomip
jno
xchg
xor
sbb
shl
pop
add
movsl
hlt
dec
loopne
inc
cmp
ud2
sub
xor
test
jmp
shlb
outsl
push
inc
push
shlb
lods
mov
mov
sbb
js
loopne
fs
xchg
ds
or
sbb
leave
mov
mov
adc
push
jmp
sbb
out
add
call
into
ljmp
sbb
gs
and
sub
xor
jg
addr16
jne
xor
sub
push
lret
add
arpl
test
addl
sub
out
popa
dec
mov
aas
nop
adc
cld
ret
lods
repz
jae
lcall
cmpsl
aaa
xchg
sbbb
orl
add
xchg
sbb
repnz
aas
xor
mov
insb
and
sbb
adc
cmpsl
adc
adc
imul
push
or
test
dec
adc
loopne
xchg
push
add
push
and
adc
paddq
test
aaa
sbb
jo
loopne
inc
xchg
nop
lret
std
pop
adc
add
add
xchg
push
aam
jno
faddl
aam
inc
sbb
cld
xor
lcall
jl
add
faddl
mov
pop
fildl
mov
adc
fstpt
and
push
sbb
and
dec
stc
push
push
shll
cmp
cmp
cmp
xchg
dec
in
adc
inc
cmp
das
add
mov
add
jle
cmpsl
jmp
mov
jg
into
adc
xor
sub
test
ljmp
mov
and
mov
fucomi
sub
adc
and
lock
das
lds
cmp
add
sbb
dec
lcall
xor
or
jbe
daa
or
adc
addb
mov
pop
dec
inc
cltd
mov
test
sbb
cvtps2pi
push
adc
vpextrw
lds
pushf
imul
cltd
push
sbb
lods
adc
xor
xor
movsb
roll
test
cmp
jb
or
mov
leave
sbb
fsub
adc
xor
rorl
mov
mov
dec
jmp
add
mov
sbb
repnz
and
add
add
in
cs
insb
push
dec
add
adc
pop
jns
mov
arpl
out
or
sbb
add
and
sub
std
pop
add
test
jo
pop
loop
sub
bound
dec
repz
bound
out
push
out
clc
js
inc
fsub
sub
push
outsb
dec
test
or
xchg
mov
lods
loope
add
sub
in
push
pushf
mov
jmp
or
aas
mov
mov
add
clc
pop
mov
pop
addl
and
sbb
cmp
incl
push
addb
xor
xor
ja
ret
js
in
subb
hlt
xchg
outsb
add
js
inc
inc
stos
mov
aam
clc
repnz
test
das
clc
inc
into
xchg
cmp
adc
mov
fisubrl
fisttps
or
and
lcall
scas
iret
sub
inc
adc
loope
call
adc
push
imul
loopne
pop
sbb
push
cld
pop
clc
dec
repnz
or
mov
cmp
in
stos
inc
cld
enter
loope
into
add
hlt
cmp
jb
test
fdiv
lock
pop
maxps
dec
mov
mov
sbb
bswap
nop
ret
pop
lods
test
and
and
dec
sbb
xor
call
sbb
add
dec
movsl
adc
pop
sbb
fwait
popa
loop
xlat
push
sbb
int
syscall
dec
dec
push
or
lock
push
cltd
insb
mov
nop
movsb
ret
adc
in
enter
loop
mov
and
movsb
arpl
fadd
data16
les
loopne
dec
movsb
test
mov
adc
inc
test
mov
mov
push
cltd
xor
test
pop
call
lods
test
push
loopne
shl
inc
push
daa
mov
pop
push
outsl
call
push
add
cs
sub
push
adc
push
ret
movsl
inc
stos
icebp
push
mov
sub
fistpl
jmp
inc
xor
fnsave
jo
fnstsw
dec
xor
xor
lock
inc
lods
enter
cmp
lock
imul
cwtl
inc
sbb
popa
xor
push
call
loop
cmp
rol
sbb
lea
fadd
enter
and
cmp
pop
or
into
inc
sbb
mov
lods
pop
sbb
sub
push
lods
loopne
jecxz
cld
pop
psubsw
cmpb
loope
inc
cli
test
loop
in
call
push
pusha
test
cmc
pop
push
add
pop
loopne
adc
dec
adc
push
add
gs
stos
mov
addl
push
scas
pop
jae
call
mov
xchg
leave
call
inc
int
fiadds
add
mov
fldl
add
jne
push
add
dec
pop
call
cmp
adc
aam
cld
clc
jecxz
divl
or
add
faddl
pop
inc
and
mov
stos
mov
rcr
sbb
arpl
lods
sbb
push
and
pop
cld
cmp
inc
fnstcw
movsb
xchg
add
jecxz
mov
aas
and
jl
sub
xchg
pusha
ret
inc
xor
loop
out
clc
pop
sahf
imul
adc
mov
and
negb
cmp
idiv
shlb
pop
mov
fiadds
jo
ret
call
fsts
cmpsb
imul
fdivrs
pusha
in
or
mov
stos
sbb
lock
or
pusha
mov
push
cmp
xor
xlat
int3
rclb
pop
mov
icebp
adc
ret
cmpsl
inc
in
inc
xchg
push
xor
loop
push
add
in
jbe
fists
jle
jne
push
movsb
lcall
and
pop
movsb
add
scas
sbb
jl
lea
roll
in
mov
ja
icebp
leave
pop
mov
adc
shr
out
xor
or
pop
or
mov
sbb
rcrb
sbb
push
xor
inc
movsb
mov
push
and
xor
xor
mov
sub
lahf
call
lea
lret
pop
mov
push
loop
aaa
pop
sbb
pop
sub
sbb
and
aam
jo
xchg
ds
inc
lcall
ret
in
out
dec
movsl
into
jnp
jns
clc
and
ljmp
mov
add
sub
pop
xlat
or
mov
xor
push
inc
sbb
lock
sarl
jecxz
cmc
fldt
cmp
popf
loopne
into
cmpl
sbb
pop
lock
jecxz
adc
sarl
ljmp
hlt
sbb
dec
dec
lock
rcrl
add
fcomip
test
pop
add
sbb
pop
pop
and
js
xor
push
add
ja
shl
aam
mov
adc
repnz
sbb
cmp
dec
jecxz
push
scas
rcr
loope
cmp
inc
add
stos
push
adc
sub
hlt
push
push
and
lock
push
pop
fsts
int
rolb
add
ja
das
pop
leave
in
sub
test
dec
in
sti
inc
jne
xor
std
inc
or
push
or
pop
ss
aas
and
loop
lods
jle
enter
push
jmp
sti
xchg
loop
add
aaa
pop
loop
inc
xchg
dec
call
sub
mov
fisttpl
shrl
decl
cld
adc
addr16
out
pop
jbe
dec
jp
sbb
inc
xor
pop
pop
out
mov
and
ret
clc
adc
push
stos
mov
out
dec
fwait
es
scas
pop
test
ds
ret
cltd
scas
fiaddl
es
and
mov
mov
xlat
pushf
push
cld
clc
lods
inc
sub
inc
dec
loopne
or
out
movsl
aas
loop
push
shl
dec
jecxz
repz
or
lods
sub
add
mov
add
inc
ja
jo
andb
ss
arpl
fwait
jne
jle
mov
cwtl
nop
dec
fwait
ja
push
ret
add
ret
jae
mov
out
lea
mov
add
push
dec
sbb
inc
mov
pop
hlt
adc
addb
add
cmc
test
cmp
and
addr16
mov
test
adc
movsb
xchg
inc
fptan
cld
add
dec
push
or
cmp
cmc
add
inc
outsl
sub
and
xchg
movsb
lret
shll
add
inc
cmp
adc
and
popa
mov
push
icebp
scas
add
dec
jno
das
out
dec
mov
andb
sub
lea
ret
pop
jne
mov
fsubrl
imul
pop
inc
popa
aam
sarb
cmp
inc
inc
add
hlt
mov
addl
es
sub
insl
popf
jmp
shlb
out
loope
shlb
sarb
add
test
ret
dec
mov
xchg
pop
sbb
dec
inc
dec
and
inc
mov
adc
push
sbb
lret
ficoms
cltd
shlb
in
adc
sbb
je
cltd
icebp
adc
les
pop
cld
add
jge
dec
mov
shl
cli
gs
imul
sar
sbb
xor
jge
pop
outsb
and
dec
bound
sahf
call
adcb
shrb
push
jl
pushf
test
rolb
add
jle
popf
jns
shrl
shrb
jecxz
frstor
and
stos
cmc
push
pinsrw
loop
out
push
jb
and
pop
dec
mov
popa
insb
mov
cmp
and
fiaddl
les
mov
sbb
ljmp
mov
inc
inc
and
push
div
dec
sub
and
xor
xchg
adc
dec
dec
inc
fidivrl
js
lods
sub
mov
add
or
push
push
imul
sbb
pop
loopne
xchg
fcmovnb
add
data16
xorl
mov
movsb
mov
iret
mov
fmull
sti
and
mov
xchg
xchg
lock
fimuls
scas
sbb
test
arpl
rcl
cltd
inc
call
gs
sbb
fstl
shll
sahf
xor
sbb
mov
jle
push
cwtl
loop
fsubrp
sub
popa
into
lock
shlb
ret
and
std
push
cmp
out
or
push
adc
fnstcw
jmp
faddp
adc
mov
pop
dec
lea
enter
or
pop
cmc
cmpsb
das
and
lods
mov
dec
hlt
xlat
or
push
mov
andb
adc
dec
or
loop
popa
rolb
xor
or
xchg
ficoms
nop
nop
fdivl
push
loopne
stc
lret
test
dec
cmpsl
xchg
mov
jmp
ljmp
sub
push
add
add
stos
adc
jbe
add
inc
les
cwtl
inc
jmp
sbb
lock
outsl
xchg
into
inc
add
cmp
stc
inc
mov
lea
jbe
xor
cmp
inc
adcl
mov
pop
popf
mov
dec
out
aam
lds
iret
js
jbe
addl
push
aad
sub
and
mov
pusha
insb
cwtl
rcl
stos
les
sub
add
xchg
and
jno
lock
sbb
xchg
or
lods
jno
fadd
dec
fwait
or
ss
lea
dec
fstpt
or
out
dec
sbb
mov
jne
sub
shrl
test
mov
xchg
and
adc
stos
inc
arpl
dec
andl
neg
xchg
add
imul
adc
dec
adc
cmpsl
jo
or
xchg
sbb
xchg
mov
stos
jo
daa
cmp
sbb
adc
mov
out
mov
adc
xor
jno
or
dec
push
dec
and
fstpl
test
jp
stos
xchg
add
icebp
pop
xchg
fnsave
adc
popa
mov
jl
daa
jns
enter
mov
cmp
xchg
decb
push
dec
daa
jnp
fsubl
cmp
xor
inc
das
jge
les
std
cmp
push
in
add
or
inc
adc
arpl
mov
pop
inc
dec
dec
shl
add
les
lods
fwait
test
cltd
test
lock
xchg
jb
jecxz
les
cli
in
mov
xorl
xchg
stos
push
sub
lods
fstl
ds
pushf
addr16
pushl
push
hlt
adc
sarb
enter
sbb
je
mov
mov
outsl
cmp
ja
scas
add
and
mov
lret
popa
outsb
rclb
push
adc
push
pop
dec
ljmp
outsl
fdivrl
shr
inc
rcrl
inc
mov
test
adc
loope
jae
or
ja
sbb
inc
loopne
xor
loop
dec
and
in
lock
orl
ds
mov
das
adc
jp
scas
pop
dec
mov
aaa
jecxz
inc
xchg
jmp
add
sbb
mov
fwait
mov
pop
cltd
mov
enter
sub
mov
jmp
cmp
aas
jge
fcoms
sarl
mov
xor
adc
lret
or
push
lock
push
xchg
inc
into
clc
dec
and
add
xchg
jno
js
adc
mov
add
and
bound
rolb
in
cmp
inc
mov
adc
pusha
push
dec
js
mov
adc
mov
jle
ljmp
out
add
orb
jg
aaa
sahf
push
push
jb
xchg
mov
dec
inc
dec
hlt
cmp
adc
add
pop
jl
push
jle
cwtl
inc
aam
lods
scas
arpl
pusha
xlat
lods
aad
xor
insb
les
sub
sub
out
daa
roll
jl
inc
and
ds
mov
push
xor
pop
mov
add
testb
add
sub
push
out
inc
incb
lcall
test
ja
loopne
cmp
or
test
outsb
mov
daa
test
in
xchg
sub
addr16
jecxz
or
cmp
pop
mov
imul
pop
popf
xchg
ja
pusha
sti
scas
lock
xor
test
mov
jle
jb
xor
push
out
sbb
inc
mov
adc
ja
faddp
sub
loopne
ret
ja
inc
xor
test
adc
mov
sub
loop
ficompl
shll
stos
push
stos
icebp
inc
add
push
adc
out
inc
loope
sub
movsb
ss
inc
inc
cltd
scas
ja
push
push
pusha
ret
mov
sbb
pop
clc
xor
push
jns
test
xor
add
pushf
and
out
sarb
or
cmpsl
out
jge
add
mov
and
cmpl
loope,pt
ficoms
pusha
iret
or
stos
xchg
sbb
cli
sbb
mov
je
lods
orl
adc
insb
adc
mov
sub
add
fistpll
or
xor
enter
pop
outsb
or
jp
push
imul
add
cmp
adc
loope
sbb
fwait
add
int
sbb
fisubrl
adc
arpl
and
ret
out
or
pop
pop
pop
jbe
in
lds
out
inc
neg
xor
push
dec
repz
xor
das
js
jle
addb
outsl
lret
push
xchg
int3
insb
cmp
lds
pop
movsb
mov
sub
in
add
jne
or
cmp
incl
addl
sbb
jecxz
stc
jg
jmp
xchg
lahf
mov
arpl
test
sbb
les
dec
nop
aas
movsb
lret
je
xchg
mov
je
or
push
inc
sub
std
inc
into
ja
sbb
ret
or
outsl
pop
pop
add
push
sti
cmpsl
js
std
loope
dec
push
xor
out
repnz
into
popl
inc
mov
jbe
add
mov
push
or
inc
scas
xor
sbb
pop
mov
sti
adc
in
or
add
mov
inc
or
and
nop
pop
lods
push
popa
add
adc
ror
clc
sub
push
jbe
xor
or
push
cmp
jle
inc
int3
add
xor
insl
shrd
int3
dec
xor
adc
jne
inc
sbb
xchg
in
dec
imul
hlt
mov
ror
in
dec
push
or
sub
clc
add
imul
adcl
sbb
sbb
add
cwtl
aam
rolb
dec
aam
add
sbb
push
test
sahf
arpl
addb
rol
sub
les
rcrb
outsb
jb
les
jbe
fbld
arpl
push
inc
mov
ret
lret
je
jecxz
xor
xor
add
push
cmp
fwait
stos
add
loopne
clc
js
dec
pop
jge
adc
loopne
xchg
cld
add
jp
dec
shl
clc
sar
fcom
cmp
data16
loopne
addb
xchg
jge
jp
popa
push
dec
pop
shlb
nop
mov
addb
dec
sbb
and
paddusb
push
dec
enter
jg
push
ret
push
sbb
add
stc
fnstenv
add
pop
cmp
popa
adc
outsl
shlb
sub
xor
mov
and
movsb
add
or
cmpb
sbb
or
inc
pop
dec
push
enter
mov
add
leave
js
or
mov
push
xchg
jno
dec
mov
mov
mov
and
xor
test
loopne
shll
arpl
pop
jbe
and
incb
dec
and
shll
sub
push
jp
sub
shll
sub
incb
cmpsl
repz
lods
mov
lcall
push
mov
add
mov
test
mov
mov
and
mov
jecxz
mov
or
je
pop
adc
sbb
jecxz
nop
adc
neg
dec
mov
aaa
adc
inc
push
ret
cmp
xlat
pop
push
mov
add
xor
sbb
jne
inc
sub
aas
xchg
push
xor
sahf
add
and
add
imul
xor
enter
push
ret
js
imul
or
popf
add
xchg
inc
int3
outsl
xor
outsb
fistps
or
push
inc
xchg
loope
xor
mov
sub
cmp
or
loop
add
sub
adc
nop
jo
idiv
in
aam
jl
fisubl
add
fmul
mov
mov
rcll
push
dec
dec
and
mov
pop
mov
sbb
push
mov
in
jns
sub
cmp
call
or
mov
cmp
loopne
pop
sarb
dec
sbb
repz
push
pop
icebp
or
mov
jnp
gs
int
clc
cld
out
xor
je
dec
xchg
pop
test
pop
inc
sub
aaa
pop
mov
and
push
jle
inc
orl
fsubp
lock
js
inc
cmpsl
push
push
or
mov
mov
add
dec
sbb
push
add
movb
and
add
out
pop
repz
stc
add
adc
lods
les
mov
pop
xchg
into
xchg
sub
cmp
adc
or
out
add
movsl
fsubs
push
cli
fs
fcoms
sbb
mov
in
aaa
jbe
in
inc
xlat
adc
cmp
les
cmp
ljmp
ret
loope
iret
pop
or
test
or
ljmp
cmp
add
leave
sbb
add
add
or
adc
stos
popf
adcl
jnp
popf
add
sbb
rep
cmp
ljmp
mov
push
cmpsl
popa
cmp
cld
rcl
out
lea
in
jnp
sub
xchg
aaa
mov
clc
inc
mov
sub
notb
sbb
xchg
shrl
xor
and
popf
nop
sbb
pusha
decl
adc
push
pop
mov
movb
mov
push
out
aas
dec
fdivr
cld
lods
dec
orl
xor
push
xor
sbbb
subl
cmpsb
test
aad
lock
ss
lock
shrb
jmp
inc
mov
in
and
push
inc
shl
paddusw
mov
xchg
es
adc
orb
add
addl
testl
stos
fwait
mov
stos
pop
ljmp
fdiv
in
fmuls
cmp
jo
cld
aaa
test
mov
cmpsb
adc
rcrb
cmp
add
inc
pop
js
and
es
jne
inc
pusha
and
lds
cld
jmp
sbb
into
pusha
dec
pop
mov
fcmovnu
fdiv
add
mov
and
mov
daa
in
add
shlb
nop
cmp
dec
clc
test
or
xor
cld
xor
nop
addb
adc
xorb
xchg
inc
sub
es
fs
andl
dec
add
cli
add
push
invlpg
add
les
cmovg
xsaveopt
es
mov
mov
push
rorl
je
jmp
lahf
add
mov
test
jb
sub
pop
and
dec
inc
fisttps
clc
sbb
mov
ss
push
jmp
cmp
pop
add
pop
push
dec
addr16
fidivl
mov
push
scas
cmpsb
pop
dec
shlb
push
sbb
sbb
imul
fiaddl
mov
sti
mov
loopne
outsb
lea
lret
mov
insl
adc
push
rolb
mov
popa
add
cld
xchg
daa
mov
scas
add
inc
loope
cmp
push
repnz
pop
shl
mov
out
loope
mov
push
add
int
and
adc
adc
mov
aam
cmpsl
add
jmp
mov
jbe
xchg
cmp
pop
fiadds
push
cmpsl
loopne
aaa
cmp
pop
fmull
cld
xor
pop
push
mov
jg
nop
jb
pusha
dec
adc
roll
rcll
jmp
gs
and
outsl
test
mov
shll
and
jnp
push
mov
aam
fs
xchg
push
or
mov
sbb
push
jge
mov
sbb
cmp
push
rcll
lret
icebp
es
push
clc
push
jne
rcr
or
add
jne
shl
test
and
push
clc
cwtl
adc
sbb
clc
sbb
mov
fsubr
cmp
cmp
mov
ss
ja
ret
jl
loopne
js
outsl
add
in
enter
arpl
movsl
pop
ljmp
loopne
mov
adc
enter
sbb
es
mov
cmp
icebp
aas
shll
push
inc
xor
outsl
sbb
test
sbbb
jbe
inc
cmpb
add
xor
clc
add
add
imul
push
sub
jnp
out
dec
push
sbb
sbb
push
xor
aad
aam
fsubs
aam
and
lods
movsl
dec
sub
dec
loope
pop
push
or
lock
addb
add
imul
stos
mov
mov
push
push
push
mov
push
inc
arpl
jns
sbb
mov
pop
mov
js
mov
fmuls
cmpsb
scas
mov
sbb
xchg
adc
bound
pop
sub
mov
idivl
lea
aaa
fsubr
lar
ret
test
js
xchg
sub
out
addb
fcmove
scas
aas
outsb
shrb
pop
or
push
fadd
xor
ret
dec
int
loope
mov
mov
and
xor
push
or
push
rorb
movsl
arpl
inc
sbbb
shll
mov
ret
loopne
fidivs
xchg
lret
pop
cli
and
or
cltd
sbb
dec
cmp
jae
fidivs
inc
leave
adc
insl
sub
pop
sysexit
adc
sbb
dec
imul
dec
aaa
hlt
sub
or
jns
es
mov
pop
lock
cld
test
in
mov
xor
test
sbb
jo
outsl
loope
lcall
or
inc
pop
movsb
imul
mov
nop
cmpsl
jle
mov
sahf
push
pop
inc
and
outsl
nop
in
sbb
lahf
call
inc
and
mov
mov
xchg
insb
popa
inc
ljmp
enter
pop
xor
xchg
add
xchg
sbb
mov
repz
ja
or
stos
mov
and
add
add
addb
add
add
lods
or
mov
lds
insb
sub
cmpsb
push
aam
mov
cld
aas
adc
push
call
repz
mov
shrl
loopne
test
cwtl
inc
test
sahf
mov
add
mov
inc
hlt
dec
jae
test
push
dec
push
aad
out
jb
cmp
enter
les
and
pop
roll
and
mov
orl
outsl
insl
and
imul
cld
adc
mov
and
mov
jne
fsubrs
push
adc
test
outsb
add
aaa
sbb
cmpsl
loopne
aam
fnstsw
int
imul
les
xor
les
cltd
add
mov
xchg
xor
inc
mov
dec
or
and
adc
ret
shld
ss
sub
das
aam
int
outsb
mov
dec
push
js
mov
lods
xor
and
or
xor
mov
sarb
or
mov
pop
adc
cmpsb
sub
imul
dec
out
adc
inc
loop
aas
pop
or
fisubs
inc
sub
dec
mov
inc
rclb
clc
xchg
repz
ret
or
sub
negl
pop
pop
push
cmpsl
imul
adc
or
insl
sub
fidivrs
in
inc
sbb
or
nop
or
mov
movsl
xor
sub
jecxz
js
pop
imul
mov
mov
mov
roll
xor
shr
out
aam
or
mov
push
leave
test
rcr
or
push
jbe
cmp
jo
shl
inc
sub
addl
adc
jmp
in
xor
dec
lods
jl
and
das
js
cmp
pusha
cmpsl
or
push
add
ret
sbb
jnp
or
shll
adc
mov
inc
push
mov
sub
andb
dec
xor
sbb
xor
test
ret
pop
inc
ret
fnstsw
out
add
outsb
jmp
add
popf
xor
ret
mov
mov
daa
mov
popf
dec
add
sub
ret
mov
sub
neg
cli
clc
iret
add
fldl
mov
ret
push
push
decl
jnp
push
or
add
mov
neg
scas
sbb
mov
xor
xchg
add
iret
push
or
test
outsl
fiaddl
test
js
adc
nop
sub
sbb
gs
sub
or
add
inc
pop
jge
js
inc
test
adc
mov
pop
imul
add
in
push
pop
push
icebp
and
pop
pop
add
and
add
mov
adc
fidivrl
cmc
call
mov
je
or
pop
std
adc
adc
and
ja
pop
adc
xor
rcr
popf
or
xor
push
insl
cmp
cmp
dec
mov
push
lods
mov
xor
xchg
lods
xor
ja,pn
add
sub
add
xor
xor
cmp
xorb
push
adc
mov
push
mov
dec
sbb
sub
js
push
call
add
inc
push
ja
icebp
xor
cwtl
sbb
xchg
lods
jne
mov
js
pop
rclb
test
arpl
sbb
pusha
sbb
jecxz
jnp
adc
xlat
xor
nop
push
xchg
fcoml
roll
mov
jae
push
push
lods
data16
ret
push
insl
jno
sbb
adcb
add
and
xor
rcrl
sarb
mov
shrb
mov
popf
pop
mov
jb
rclb
fadd
cmp
loop
xchg
scas
push
movsl
rolb
cld
mov
arpl
in
push
ljmp
shll
push
jo
jge
xchg
and
inc
imull
outsl
scas
lock
inc
cltd
add
sbb
sbb
dec
cmp
sub
add
aas
jo
mov
addl
mov
nop
insl
mov
aam
cld
out
jns
imul
mov
jp
mov
fists
icebp
fiadds
aaa
in
sub
jo
pop
cltd
jmp
mov
test
pop
jmp
ja
into
jo
add
out
mov
loope
aam
adc
sbb
adc
mov
dec
inc
rolb
sbb
jmp
divl
lds
lock
shrb
popa
loopne
or
xchg
and
adc
jae
adc
inc
mov
push
enter
test
inc
push
sarb
add
popa
sub
aas
cmp
ficoml
inc
insl
sbb
jbe
adc
xor
std
out
sub
nop
mov
loop
push
aam
lods
pop
lock
lock
add
xchg
jmp
inc
test
mov
sbb
lods
or
cmp
pusha
cs
push
lret
mov
and
sub
mov
jmp
cmp
jb
pop
loop
jne
stos
shlb
scas
aad
sub
and
mov
ret
js
inc
movb
jl
lock
jmp
or
add
arpl
neg
push
dec
mov
or
dec
cmpsl
iret
sub
sbb
adc
mov
out
les
daa
arpl
jb
cmpsb
and
cmp
rcrl
inc
in
mov
mov
pop
call
xchg
jbe
enter
sbb
add
mov
sbbb
add
push
dec
add
dec
jg
clc
or
mov
scas
jl
or
xchg
add
jmp
add
push
inc
adc
or
fcmovu
push
loope
fs
and
jmp
push
dec
mov
jo
jle
xor
test
les
fistl
adc
imul
aaa
in
addr16
xabort
rorb
pop
into
add
mov
pop
pop
fadds
and
dec
or
jbe
subl
adc
add
dec
xchg
sub
js
loopne
xchg
ret
mov
inc
in
add
push
push
push
push
or
sub
in
pop
dec
cld
push
adc
test
pop
xchg
jnp
test
sbbl
out
inc
out
in
jbe
add
mov
into
inc
pop
es
test
dec
popf
mov
and
fsubs
shrb
inc
xor
mov
add
cmpsb
aam
jnp
fcmovnbe
cs
repz
lods
or
mov
add
sbb
jp
sbb
fwait
or
inc
mov
pushw
pop
dec
out
stos
or
enter
push
inc
mov
hlt
dec
push
fcmovnb
or
test
or
jbe
jno
jl
or
dec
push
bound
mov
imul
push
shl
jo
sbb
movsb
cld
mov
push
or
push
push
pop
mov
xchg
in
in
add
enter
push
rclb
dec
pop
insb
pop
addl
aam
loop
aad
push
push
out
lret
adc
cmpsb
ljmp
out
or
sbb
cmp
sub
neg
les
add
sub
xor
fstpl
jge
and
add
aas
in
call
fcoms
push
add
or
adc
sbb
adc
cmp
out
test
call
xchg
clc
pop
or
push
les
sbb
cltd
test
xor
sub
sbb
inc
ret
loope
mov
inc
cmp
int3
pop
mov
shrl
and
mov
jp
std
sub
or
mov
js
xchg
ret
je
pop
lods
rcrb
fcoml
inc
mov
xor
mov
push
mov
loope
stc
cld
ljmp
dec
pusha
xor
aad
ret
hlt
cli
lea
mov
out
add
pop
pushf
jne
loopne
fmuls
jo
inc
aaa
repz
mov
adc
sti
xor
add
dec
xlat
push
pop
inc
and
xor
sub
and
sbb
push
int
xor
out
pop
repz
fisttps
imul
lcall
rolb
cmp
jb
pop
fimull
js
jno
in
add
in
mov
les
jp
lcall
std
mov
lods
adc
sub
cmpsl
daa
xchg
pusha
inc
push
sbb
or
shlb
jns
cwtl
lods
int
mov
popf
shll
cwtl
cld
pop
and
lods
repz
insb
or
jae
dec
inc
cld
jne
por
add
mov
in
mov
or
fbstp
mov
jne
cmc
xor
xchg
ljmp
adc
xor
mov
sub
aad
aam
add
mov
add
gs
call
inc
out
int3
xchg
mov
mov
fstpt
shlb
pusha
jp
pop
enter
in
pop
gs
cmp
outsl
hlt
pop
pusha
out
out
daa
dec
fisttpl
add
cld
lods
sbbl
inc
inc
xchg
sub
sub
mov
mov
xor
and
fildl
mov
mov
mov
orl
lret
fiaddl
adc
rcll
cmp
dec
aam
dec
les
add
daa
cmp
fists
mov
sub
add
mov
mov
xor
inc
cmp
mov
leave
and
in
jbe
sbb
jmp
outsl
in
add
xor
and
xor
pop
addr16
add
cmpsb
sbb
aaa
test
out
mulb
mov
sahf
mov
in
outsl
shrl
dec
ret
xor
xorb
or
sub
shlb
and
xchg
ret
push
cld
inc
xchg
test
out
jno
push
jo
loopne
stos
push
dec
imul
lock
clc
push
testl
adc
fdivs
sub
mov
dec
rcrb
jns
mov
mov
pop
repz
insb
sbb
addr16
sbb
pop
dec
pop
testb
mov
xor
arpl
dec
or
sub
and
fsubr
sbb
cli
sbb
mov
dec
add
add
test
or
out
inc
sar
js
jo
test
dec
mov
test
add
add
subb
cmp
pop
das
je
add
sbb
test
cmpsl
nop
adc
dec
mov
add
cltd
cld
bound
ret
and
cwtl
sub
cltd
js
jbe
data16
xor
int3
outsl
popa
sub
sbbb
test
cmpsl
idivl
adc
sbb
xor
push
add
shl
lods
add
in
sbbb
cmpsl
lods
sahf
mov
cmp
lahf
repz
clc
out
adc
mov
xor
lret
or
jmp
mov
aas
mov
inc
dec
pusha
outsb
push
adc
sbb
adc
add
pusha
aad
jb
push
cmovno
mov
jmp
sub
sub
pop
cmp
xor
lods
stos
cmc
sub
int
inc
and
ds
and
push
jg
xor
adc
xor
pop
out
jmp
adc
dec
cmp
dec
cmp
cld
insb
cmp
add
fistpll
lcall
cmpl
in
dec
insb
cmp
aas
cmp
inc
inc
adc
or
xchg
cmpl
jle
sub
test
dec
shll
xchg
imul
mov
test
mov
aam
sbb
jp
sbb
mov
lock
adc
adc
andb
clc
push
xchg
pop
mov
lcall
jbe
and
push
pop
addl
xorl
ror
mov
cmp
subl
xchg
rcr
jle
loope
push
test
cmp
sub
sub
insl
or
or
fildll
cmp
out
jnp
out
xor
sub
xchg
cmpsl
adc
pop
sub
jne
sub
xchg
daa
xor
or
push
push
sbb
int
arpl
aam
sarb
aad
xchg
int3
cltd
jmp
push
jo
add
repz
getsec
add
mov
xorb
pop
mov
inc
shll
pop
mov
js
test
out
xor
out
scas
lods
dec
push
clc
and
pop
repnz
scas
lock
jb
repnz
dec
out
in
ret
sub
lret
sti
ljmp
or
pop
add
je
mov
mov
aam
add
jne
enter
rcrl
push
add
enter
cmp
cmp
addl
std
call
add
or
push
xchg
das
aas
inc
add
mul
xor
add
mov
loope
add
add
inc
or
cmp
xor
push
cld
pushl
and
or
outsb
adc
lods
adc
add
push
fcomi
decl
ret
cmp
js
gs
push
fiadds
add
inc
add
dec
jmp
sub
incl
push
adc
roll
xlat
ljmp
jmp
add
jle
push
add
shll
sbb
sbb
push
push
mov
lea
dec
adc
sub
or
mov
stos
mov
add
pop
test
push
inc
imul
mov
xor
call
out
inc
int
pop
outsb
and
mov
ret
movsb
addr16
pop
adc
cli
inc
push
or
test
fprem
outsl
ret
sahf
mov
inc
add
cmc
lret
cmp
or
xchg
repnz
add
fldl
popf
outsl
icebp
add
add
xor
fsubrl
enter
mov
icebp
faddp
push
loopne
xor
sub
push
mov
ret
and
push
or
pop
push
jge
xchg
pop
push
mov
insl
cmp
test
add
adc
xor
mov
mov
mov
mov
xor
add
xchg
cs
and
xor
adc
addr16
add
and
nop
lret
mov
push
xor
es
jns
add
fsubrl
jb
or
out
out
outsl
sti
lret
mov
pop
out
inc
sarb
or
xchg
and
repz
lret
loopne
cmp
inc
dec
push
call
inc
push
rcrb
cmp
int
inc
es
fcom
xor
call
add
inc
sbb
add
pop
xchg
xorl
dec
dec
imul
hlt
jae
repz
jbe
jmp
add
mov
xorl
mov
mov
xor
push
mov
and
int
sub
aad
xor
mov
lret
inc
test
inc
jb
std
push
or
ror
jae
lds
not
mov
clc
sbb
sarl
adc
daa
ret
pop
and
xorl
js
and
or
loope
dec
pop
cld
xor
into
add
xor
mov
sub
xchg
mov
call
jbe
jno
inc
add
mov
sbb
std
jmp
push
lods
fdivs
xor
cmp
dec
stos
xor
xchg
or
fistl
cmpb
nop
push
dec
or
cmp
jo
inc
test
mov
mov
or
rcrb
push
mov
les
lods
frstor
push
mov
mov
imul
jb
add
in
and
fdivs
jae
dec
cld
or
out
mov
insb
adc
clc
add
adc
adc
filds
cld
sub
jb
adc
shrb
cs
pop
add
dec
push
pop
adc
clc
push
out
mov
ret
mov
mov
xor
je
mov
out
and
out
xchg
or
outsb
mov
mov
stos
orl
jle
fs
aaa
mov
std
inc
push
push
sub
aam
sbb
inc
cmp
rorb
in
xchg
in
xor
inc
push
pop
or
pop
jo
push
push
dec
inc
push
fcoml
and
icebp
jmp
sub
dec
push
mov
add
or
fbld
or
fdivl
jne
sub
or
cmpsb
insb
mov
shl
addr16
add
or
rcll
lock
jmp
lret
out
adc
call
inc
sub
add
or
xor
iret
inc
inc
lret
data16
jl
dec
daa
pop
jecxz
or
xchg
inc
cli
add
cmp
push
xchg
test
jp
push
jp
jg
loope
cmpl
outsb
add
sbb
dec
shrb
jae
adc
lret
fsubr
hlt
add
push
mov
jge,pn
popa
lahf
es
mov
test
nop
inc
push
jo
loope
shl
pop
bound
push
loop
mov
out
cmp
daa
adc
add
fcoml
out
por
lods
sbb
or
shrb
cmp
leave
cmp
or
cli
sub
inc
cmp
hlt
cmpsb
in
aam
int3
push
jmp
or
inc
inc
dec
inc
cmp
ja
adc
sub
xor
clc
xchg
add
and
push
adc
fnstenv
dec
stos
stc
cmp
dec
push
clc
loope
inc
xchg
adc
enter
mov
sbb
cld
jp
jae
enter
cld
inc
push
xchg
mov
pop
pop
add
loopne
stos
icebp
adc
push
out
xlat
xchg
and
and
loop
jecxz
mov
faddl
sbb
xchg
add
lea
incb
ss
in
add
subb
xor
mov
aas
out
mov
add
sub
add
cmp
xchg
and
inc
jecxz
add
std
pop
sbb
cmpsl
pop
and
enter
pop
into
cmp
mov
sub
out
pop
addb
push
ss
or
std
rolb
not
mov
jmp
push
cmpsb
nop
aas
inc
stc
dec
inc
jmp
jmp
jns
adc
xchg
xchg
addb
fildll
inc
in
pop
addr16
in
les
add
sub
dec
sub
ret
icebp
in
push
out
data16
xchg
repz
xor
in
pushl
hlt
adc
sbb
add
ljmp
addr16
dec
sbb
lea
fidivrl
sbb
jmp
dec
stos
add
decl
xor
mov
pop
cmpsl
sub
sbb
mov
pop
gs
notl
fcmovb
testb
fcompl
ret
adc
sub
or
sub
fildl
push
add
popa
loope
pop
jbe
clc
test
xor
addr16
mov
pfcmpge
mov
rclb
test
fidivs
and
or
stos
push
aam
mov
lock
add
push
nop
pop
or
mov
pop
pop
mov
jmp
shlb
out
gs
sarb
xor
pop
dec
loope
sarb
bound
pop
add
adc
mov
fwait
mov
addr16
push
sub
adc
clc
mov
out
lea
xchg
jns
xor
adc
rcl
add
or
xor
aam
xchg
pusha
repz
call
fiaddl
mov
jns
mov
push
inc
sbb
dec
sbb
mov
and
test
fmuls
das
rclb
adc
xor
ds
popf
mov
pusha
cmc
sub
inc
bound
jnp
pusha
lock
scas
addl
xor
dec
sti
cmp
jg
andb
mov
arpl
mov
cmpsb
or
and
pop
jns
inc
jmp
das
xor
je
mov
mov
cmpsl
aad
or
in
pop
xchg
cmp
or
test
add
sub
jp
or
ljmp
call
pop
push
jecxz
fdivl
dec
cmp
cltd
adc
and
stos
or
pop
hlt
xor
xor
add
push
pop
cmc
ret
or
push
sbb
mov
lds
call
pop
enter
mov
push
xchg
std
mov
push
sahf
add
lea
shlb
loopne
icebp
fists
dec
xchg
jmp
or
mov
add
dec
sbb
fistpl
sahf
xchg
fs
outsb
or
or
or
lret
mov
sub
jmp
xor
daa
xlat
sbb
push
xor
cwtl
jp
mov
sub
test
xchg
cmp
add
out
test
and
mov
sbb
loope
lcall
xchg
add
mov
dec
mov
mov
sub
loope
xchg
push
mov
pop
pusha
add
inc
test
xchg
loopne
and
push
mov
xor
lock
push
sub
dec
adc
mov
pop
sub
pop
std
ret
push
mov
fists
lahf
xor
shlb
pop
subb
cld
popa
or
subl
add
mov
dec
add
popf
sub
imul
push
fisttpl
gs
cmovnp
xorl
dec
pop
rolb
fdivrl
fdivl
adc
sbb
andl
in
outsl
lcall
jmp
adc
fld
jae
sub
xor
fiadds
rorl
gs
push
sbb
lock
or
shll
adcl
sub
adc
leave
daa
cmpsb
pushf
movsb
aaa
ret
rol
mov
stos
jno
jmp
jmp
xchg
adc
pop
jns
lret
mov
andl
mov
fcmovu
jl
mov
adc
mov
js
popf
minps
push
sbb
jecxz
aaa
call
or
in
icebp
xor
push
jp
push
paddsw
jl
std
int3
pop
sbb
fstpl
cmp
add
sub
jp
lock
lods
int3
dec
shrl
xor
add
fs
mov
bound
inc
sbb
add
out
push
jne
mov
or
and
adc
xor
mov
push
enter
push
out
or
pop
add
jo
dec
cmp
or
mov
xchg
push
mov
cmp
shrl
arpl
cltd
pusha
dec
ret
mov
test
daa
pop
jbe
out
sbb
xchg
dec
xor
out
outsb
out
sbb
xlat
mul
sub
push
pop
stos
les
dec
sbb
pop
adc
sbb
inc
add
mov
and
rcl
and
add
adc
ja
sbb
test
lret
arpl
mov
mov
dec
mov
jne
pop
or
fldenv
mov
mov
push
repz
mov
outsl
mov
movl
stos
js
cld
popf
add
push
call
mov
out
mov
adc
push
cs
pop
jmp
xlat
mov
and
mov
push
pop
or
xchg
jmp
and
sbb
adc
add
or
fsubrs
and
mov
mov
and
inc
ret
mov
sbb
scas
and
adc
movsl
add
mov
push
add
mov
add
aas
cmpsl
loope,pn
lods
or
testl
inc
inc
dec
sub
push
jg
inc
stos
inc
test
add
or
inc
lods
jb
sub
or
mov
dec
sub
jmp
xor
addb
rcr
or
scas
adc
fistl
lock
push
and
push
inc
cmp
dec
push
and
enter
test
andl
push
cmpsb
jno
gs
cmc
sub
sbb
iret
adcl
adc
dec
xchg
sbb
push
adc
aam
add
xchg
outsl
push
in
aaa
decl
inc
xor
inc
sarl
push
add
orb
cmp
outsl
mov
jnp
lock
sti
movsl
iret
cli
movsl
jle
xchg
add
mov
sub
test
loopne
add
and
pop
dec
mov
xchg
ss
mov
add
xchg
lock
xchg
sti
and
sbb
addr16
daa
movsb
pop
jb
test
xor
leave
and
dec
jnp
pop
dec
hlt
icebp
xchg
pop
int
int3
ss
mov
rclb
data16
adc
lea
mov
enter
pop
add
or
fcmovnbe
pop
cmp
add
popa
pop
sbb
add
les
mov
dec
testl
mov
or
and
push
cld
mov
mov
jae
subl
fcmovu
add
dec
xor
pusha
push
shl
aas
push
pop
jo
pop
cmpsl
loop
mov
into
jmp
jp
xor
dec
dec
cltd
loopne
jbe
cmpsb
inc
mov
mov
sub
dec
mov
xchg
jo
cli
dec
jmp
sub
adc
into
dec
mov
js
and
test
dec
and
test
sbb
sub
sbb
xlat
and
mull
jecxz
add
adc
test
xor
or
inc
popa
jp
cmp
xor
cli
sbb
and
cmc
test
ja
push
daa
addl
jne
ret
inc
mov
movsl
sbb
pop
dec
add
jmp
sub
pop
mov
ret
push
sbb
pop
sbb
dec
jmp
mov
mov
adc
cmp
call
loope
push
xchg
dec
xchg
dec
mov
sub
pop
mov
loop
clc
ret
ljmp
aas
add
fldt
adc
not
add
imul
mov
popf
sti
les
jecxz
xchg
sbb
push
jl
insb
cltd
xchg
dec
adc
iret
dec
int3
push
xlat
push
jl
mov
rcr
and
jl
and
pop
adc
sbb
jmp
jge
and
ficomps
inc
cld
push
outsl
lods
jnp
adc
xor
push
lock
or
lahf
into
xlat
add
arpl
push
repnz
xor
xorl
fwait
pop
adc
inc
stc
call
stos
stos
cmp
mov
dec
dec
cmp
popf
jae
pop
hlt
jne
dec
mov
xchg
nop
push
sti
jno
enter
repz
loop
add
stos
rcll
cwtl
pop
lahf
in
add
add
xor
sti
jecxz
jo
mov
repnz
push
fsubl
add
sbb
or
xchg
and
inc
mov
add
fcoms
push
les
test
push
sbb
pop
mov
js
cld
push
or
stos
je
cmp
dec
test
test
or
in
sbb
daa
mov
and
or
dec
or
addl
sbb
mov
pusha
dec
in
xor
insb
pop
or
jnp
scas
shrb
scas
lods
call
and
cmp
push
mov
rcl
movsb
fstpl
sub
loopne
mov
mov
sub
jmp
out
sub
mov
test
cmp
les
cmp
or
mov
mov
adc
pop
dec
or
cli
stos
jp
out
imul
clc
bound
push
fisubs
in
xor
sub
sub
icebp
jno
gs
sub
sbb
jecxz
dec
xchg
shrb
outsb
ret
xor
into
call
pop
pcmpgtb
xor
loope
arpl
lea
push
dec
aam
adc
aam
and
jmp
mov
and
adc
pop
push
fs
mov
push
mov
lods
jp
out
out
pop
stc
push
lcall
shr
cwtl
insl
and
xchg
inc
add
or
adc
mov
ss
mov
ret
mov
xchg
sub
or
mov
ret
js
sbb
lcall
sbb
cmp
cmp
push
adc
in
arpl
pushf
add
es
loopne
mov
test
and
movl
add
adc
ret
inc
lds
lcall
sub
mov
mov
and
loop
insb
adc
cmpsb
adc
fstpl
les
pushf
dec
or
adc
adc
idivl
mov
pop
aad
ds
lcall
or
add
adc
jp
inc
int
jo
pushl
xchg
push
inc
test
pushf
in
pop
aaa
mov
add
into
dec
sub
and
and
rcll
rolb
add
and
fadd
addr16
jge
xchg
push
pop
sub
sub
jecxz
out
adc
js
bound
aam
setns
cmp
outsl
sbb
xchg
pop
outsb
adc
fisttpll
fmuls
scas
fnstenv
pop
dec
and
xchg
and
rolb
cmp
rsqrtps
subb
or
out
loopne
out
call
rclb
add
fmull
cmpsl
add
pop
inc
sbb
fsubrl
adc
xchg
outsb
scas
lods
cmp
enter
popa
loop
add
add
push
xor
push
sub
and
adc
dec
push
les
cld
cmc
mov
sub
fsubrp
mov
mov
xor
cmp
push
and
push
test
cmpsb
or
cmpsl
je
repnz
cmpsb
cli
cmpsb
jmp
or
add
mov
and
sub
into
xor
lret
inc
or
pop
mov
sub
cmp
ja
fisubs
jo
add
fsubl
jb
out
jno
pop
mov
inc
test
or
scas
int
ficoms
dec
push
jge
cmp
ss
or
repz
xchg
jo
push
fistpl
xchg
push
roll
push
and
sbbl
jae
loopne
xchg
rorb
in
inc
adc
icebp
daa
leave
or
push
in
jae
jecxz
popf
cltd
gs
test
lock
andl
enter
adcl
fadds
jbe
cli
lock
push
loopne
mov
ss
fcomps
push
add
fadds
dec
cmp
popa
jmp
adc
or
test
inc
xor
fadds
scas
cmp
sub
and
out
mov
adc
mov
add
lock
loope
jno
fsts
bound
mov
leave
clc
adc
fisttps
add
roll
iret
mov
inc
inc
mov
fbstp
pop
pop
mov
and
pop
cmp
clc
xor
in
loopne
mov
dec
add
add
xchg
popa
nop
xchg
mov
cmp
add
les
pop
sarb
adc
cmc
inc
xlat
es
call
dec
xor
add
enter
gs
xchg
ds
lods
pop
cmp
sbb
jno
mov
cmp
jmp
or
shlb
or
xor
test
pusha
inc
adc
js
jg
or
clc
cwtl
jo
sub
xchg
pop
pop
movsb
ja
aam
loopne
imul
scas
sahf
repz
xchg
push
push
int3
fimuls
dec
mov
into
lret
lds
clc
incb
lahf
push
mov
repz
push
mov
add
fldt
or
jb
incl
cmp
xchg
or
or
xor
aad
pop
cmpsb
daa
push
mov
repnz
jecxz
push
negb
sbb
adc
negb
inc
xchg
jmp
cli
je
aam
inc
mov
icebp
aaa
out
mov
mov
arpl
into
jle
xor
loop
aam
lods
mov
push
inc
adc
push
jmp
push
mov
add
ret
pop
push
dec
pop
xor
add
xchg
sub
pop
enter
sub
dec
sub
leave
jecxz
mov
xchg
aas
pop
add
mov
jp
add
cmp
ret
loope
pop
add
inc
sub
test
shrb
adc
sbb
add
sub
sub
xchg
jecxz
test
xchg
cmp
jns
and
adcl
inc
adc
out
inc
les
scas
dec
add
movsb
jo
pop
jae
pop
xor
and
and
int
xchg
push
pop
in
sub
add
mov
xchg
repnz
sub
sysexit
ffree
add
pop
and
sbb
fmul
adc
sub
and
movsl
mov
icebp
aas
shll
in
insb
ja
pop
hlt
inc
xor
imul
pop
jno
stos
xlat
or
fst
pusha
add
cli
add
jp
insb
iret
loopne
pop
mov
scas
jp
out
scas
fcom
dec
and
jbe
jmp
xor
or
es
mov
mov
jmp
mov
out
and
sub
xchg
sbb
out
lcall
add
stos
in
dec
push
jne
out
inc
movsl
fwait
and
test
jne
xchg
std
hlt
mov
loopne
rclb
mov
dec
sti
movsb
push
or
mov
mov
fisubl
cwtl
mov
push
inc
adc
mov
das
std
push
sub
std
and
push
inc
inc
sarb
popa
cmpsl
mov
rcr
push
xchg
jo
in
lods
mov
outsb
xchg
and
adc
dec
test
int
or
xor
inc
push
dec
mov
in
ret
out
xor
nop
popf
mov
push
add
lahf
int
xchg
das
lods
dec
mov
push
pop
xchg
orl
outsl
andl
pop
mov
and
sbb
out
sub
and
lcall
add
fmull
and
mov
or
push
aam
lahf
and
add
sbb
add
mov
jecxz
or
test
loop
adc
mov
mov
sbb
imul
dec
push
mov
daa
icebp
mov
lahf
adc
push
push
or
dec
sbb
sbb
push
jbe
mov
push
adc
xchg
mov
lock
pop
fs
pop
lock
push
inc
adc
xchg
loopne
test
cmpsb
mov
ret
pop
ret
adc
testl
mov
xchg
int3
out
and
icebp
call
add
sbb
fcoms
in
lahf
adc
mov
sbb
sti
pop
movsl
sbb
inc
dec
sbb
adc
aas
push
add
inc
mov
xchg
push
mov
mov
mov
push
mov
jl
mov
sub
outsl
les
dec
add
and
or
cs
adc
push
fs
add
test
test
push
bound
adc
pop
idivb
pop
cs
or
test
cli
push
imul
scas
or
jle
push
test
and
dec
cmpl
sbb
add
pushf
cld
nop
test
shlb
cli
inc
mov
dec
outsl
adc
pop
add
sahf
inc
and
adc
mov
and
jge
push
xor
nop
xor
popl
call
jo
repnz
repnz
dec
dec
add
pop
pop
pop
daa
ss
jg
lock
jbe
clc
sbb
into
inc
sub
jp
or
add
idiv
popa
dec
xchg
inc
addb
sub
mov
add
rcrl
int
xor
mov
popa
adc
imul
push
sbb
mov
mov
lds
xor
lret
pop
jae
call
ret
add
das
dec
add
adc
and
jg
lods
nop
loopne
fstpl
test
xchg
fsubrs
sbb
ss
adc
jl
cmpsl
fsubp
jns
test
jbe
jnp
xor
add
push
imul
sbb
cmpsb
jecxz
push
adc
int
fsub
and
test
pop
hlt
adc
mov
aas
cmp
push
pop
in
xor
daa
imul
loope
sbbb
add
jne
test
pop
sbb
xlat
cmp
in
mov
movsb
popf
daa
add
andb
daa
adc
xchg
cmp
adc
fcompl
inc
adc
cmpsl
jmp
fdivrs
mov
sub
adc
or
pop
ja
push
mov
rorl
pop
mov
xchg
inc
mov
sahf
push
adc
mov
pop
test
inc
dec
add
pusha
call
out
mov
jmp
cld
xor
cld
add
jecxz
scas
sub
or
push
aas
mov
call
push
push
adc
in
cmp
pop
inc
xlat
cld
push
inc
cli
and
sbb
js
xchg
add
jbe
mov
xchg
call
and
pusha
add
das
daa
or
dec
fmuls
loopne
loope
popf
inc
mov
notl
jne
lfs
imul
addl
clc
xchg
sbb
and
rcll
push
into
aam
call
pop
or
sub
push
pop
dec
inc
sarl
xchg
fst
in
mov
adc
jl
rorl
sub
mov
inc
not
mov
or
xchg
sbb
cs
fisubs
mov
sbb
and
daa
ret
dec
fs
pop
push
pop
or
adc
in
jecxz
push
push
cmp
inc
adc
mov
addl
push
pop
pop
xor
lock
add
xchg
sub
push
orl
std
fmul
jns
pusha
inc
inc
xor
xchg
sarb
daa
mov
fsubrs
inc
push
daa
mov
movsb
push
call
cld
repz
add
sbb
movb
and
aam
xor
clc
fnstcw
loopne
rorl
push
insb
fcompl
loopne
js
pop
movsb
cltd
out
dec
xchg
lret
jns
pop
xorl
jmp
jmp
sub
jg
fwait
lock
xor
je
pop
xchg
sub
sarb
pop
out
push
mov
jb
push
push
mov
xchg
mov
add
xor
push
sbb
xchg
outsl
jecxz
iret
mov
adc
dec
loop
fisubl
xor
jge
jle
imul
push
cmp
or
adc
insb
ret
adc
repz
daa
mov
and
cmpsb
dec
mov
jae
jmp
and
lahf
lret
incl
inc
dec
inc
sbb
jmp
shlb
scas
imul
jg
and
loopne
or
test
adc
daa
mov
lcall
xor
xlat
dec
adc
adc
loope
xchg
movsl
test
subb
les
dec
sti
movsl
pop
cmp
insb
xor
or
add
in
sbb
and
mov
jo
ret
inc
inc
dec
jo
loope
out
or
add
xchg
pop
cld
aas
push
mov
in
sbb
mov
mov
mov
push
cmp
sub
mov
addl
out
add
mov
subl
ret
sbb
push
jmp
dec
aam
popf
shll
jl
mov
je
inc
jecxz
mov
push
rol
call
jg
fcomi
ficoms
or
sbb
ja
lret
jb
xor
mov
rol
add
dec
push
jo
inc
fs
sbb
cmpps
xchg
push
pop
andb
inc
shlb
adc
pusha
int
sub
dec
sbb
or
push
lock
jns
xlat
pop
mov
inc
push
mov
test
push
adc
mov
clc
push
push
jg
les
shl
scas
xor
or
or
out
fcomps
cmpl
pushf
lods
insb
ret
cli
add
sub
jns
ljmp
insb
cs
add
adc
xchg
xor
pop
in
push
js
dec
mov
xor
or
dec
popa
push
sub
mov
and
popa
xchg
jo
add
stos
testl
mov
add
add
cmp
mov
add
stc
int
mov
in
push
cmc
push
or
jge
fsubrs
push
cmpb
lds
cmp
xor
sahf
das
outsl
rcll
pop
xchg
arpl
xchg
xor
xchg
in
add
cld
and
xor
std
jecxz
cs
das
cltd
or
inc
mov
cs
roll
mov
adcb
adc
loop
xchg
sub
add
adc
ljmp
pushf
dec
hlt
das
sahf
rsqrtps
mov
or
mov
aaa
cld
jmp
out
inc
aaa
movl
stos
call
scas
xchg
add
shlb
inc
jmp
lcall
or
pop
dec
push
and
lds
loope
add
cli
jmp
rcl
test
dec
repz
xchg
add
enter
add
std
stos
fs
and
lock
xchg
push
pop
ljmp
xor
inc
ljmp
ffree
sbb
push
mov
jo
adc
aam
pop
in
add
add
mov
xor
mov
pop
mov
setle
xchg
cmp
pusha
sbb
js
xchg
xlat
aaa
pop
ss
mov
xchg
adc
clc
or
or
xor
push
adc
inc
out
xor
hlt
popf
test
loope
loopne
mov
shlb
in
ds
ret
mov
mov
js
popa
inc
gs
sti
daa
and
sub
aam
test
sub
aam
mov
enter
popa
icebp
bound
push
negl
xchg
jno
enter
sbbl
and
adc
pop
cltd
push
add
std
push
dec
pop
add
cmp
mov
in
enter
push
cmp
add
ret
push
and
xor
pusha
and
jl
xor
jae
lret
ds
pop
pop
popa
movsl
xchg
outsb
xor
or
or
dec
adc
add
mov
xlat
and
stos
int3
stos
xorb
and
test
in
mov
cmpl
jb
ljmp
ret
jecxz
fwait
pusha
dec
or
xchg
push
pop
ljmp
test
iret
mov
shrb
inc
xchg
lea
popa
lea
enter
jne
xchg
lret
inc
std
pop
and
xor
and
sbb
sbb
pop
or
fldl
imul
push
movl
push
imul
js
push
js
insb
mov
inc
xchg
push
ds
daa
inc
sbb
outsl
push
pavgb
pop
fsubrs
jo,pn
mov
jmp
movsl
adc
aas
loopne
bound
adc
adc
hlt
mov
hlt
inc
push
or
cwtl
jge
sbb
lret
xor
mov
push
mov
lods
mov
inc
dec
into
outsl
add
xchg
dec
sbb
push
call
jmp
adc
sub
pop
repz
or
jmp
inc
sbb
in
loopne
pop
or
pop
inc
xor
jnp
dec
enter
and
fcoml
out
xchg
pop
adc
fcoml
loope
rcrl
notb
sub
shr
fcmovu
sbb
pusha
mov
mov
imul
xchg
inc
adcl
adc
std
inc
inc
nop
pop
sbb
les
dec
iret
xchg
sbb
inc
xchg
xorb
mov
add
adc
inc
jmp
mov
out
mov
push
rclb
pushf
je
loopne
cmc
sub
aaa
aam
adc
mov
sub
lock
pop
pushf
shlb
push
iret
inc
leave
aas
test
inc
xlat
push
jae
dec
jnp
fs
imul
cmp
dec
loop
movb
iret
test
imul
lcall
in
aam
jbe
loopne
cmpl
or
sbb
js
pop
aam
mov
sti
dec
lret
cmp
inc
enter
sub
jmp
shlb
and
jl
fiadds
dec
fiaddl
adc
andl
lods
ds
clc
in
in
in
inc
jnp
arpl
scas
xchg
ficompl
sarl
adc
out
push
int3
adc
sbb
testb
adc
adc
mov
faddl
lcall
dec
push
leave
rcrb
sarl
iret
loop
sub
gs
sbb
push
inc
scas
mull
pop
pavgb
pusha
outsb
arpl
icebp
jecxz
sahf
mov
mov
femms
cli
int
jno
loopne
rol
pop
inc
push
imul
dec
or
add
adc
scas
mov
lahf
and
es
sub
ret
insl
jmp
out
sbb
inc
out
movsb
call
dec
adc
jg
clc
icebp
push
shll
dec
add
leave
mov
sub
shlb
adc
lahf
and
fwait
jne
mov
cs
lcall
pop
dec
jbe
cmc
xchg
push
cmpsl
mov
add
in
sbb
fidivrs
or
xor
inc
stos
push
jecxz
into
icebp
cltd
repz
jae
roll
pop
mov
faddp
push
stc
dec
inc
cmp
js
jbe
cmp
pop
xchg
stos
and
icebp
popf
cmc
imul
cli
test
je
jecxz
es
mov
mov
push
cmp
sub
mulb
mov
xor
sbb
subb
or
inc
pop
cmpl
pop
jb
push
cmp
sub
add
cmpsl
into
rorl
rclb
mov
and
push
pop
loopne
test
cmp
movsl
sbb
jnp
pop
aam
adc
adc
pop
ljmp
cmp
add
jecxz
and
adc
inc
loopne
std
sub
pusha
sti
or
dec
lahf
clc
sub
jo
cltd
dec
loop
jnp
inc
fisubrl
push
pop
scas
sub
popa
adc
mov
dec
sbb
add
inc
lock
sarb
lea
stos
add
push
xchg
loopne
iret
xchg
andl
pop
inc
push
les
pop
pop
dec
shr
pop
movq
sbb
pop
icebp
xchg
stc
sub
pop
jns
lock
pushf
jae
push
and
mov
sbb
xor
lock
cmp
dec
inc
lcall
sahf
pop
xor
dec
outsl
or
call
cmp
dec
jmp
daa
jns
dec
fmull
add
jl
xchg
xor
xor
ja
mov
cli
ds
mov
jbe
jbe
jo
sbb
stos
xor
cmp
pop
stc
add
jge
push
nop
loop
pop
xchg
jmp
sub
pop
adc
lahf
dec
sub
fcomps
mov
dec
jl
xchg
sbb
pop
jmp
in
jecxz
addl
push
mov
jle
push
mov
add
push
js
icebp
fdivs
xchg
and
mov
push
outsl
xlat
adc
lret
popa
or
xor
and
pop
xchg
xor
sbb
or
adc
dec
mov
out
fiadds
mov
or
sub
imull
add
pop
cmpsb
cmp
cmp
rcrl
xchg
dec
loop
and
inc
jb
adc
jns
cmp
mov
adc
fstps
insb
add
faddp
les
and
shr
mov
loope
lock
iret
xchg
push
inc
jp
ss
adc
clc
lea
xor
repnz
mov
ja
sbb
fiadds
aam
fisttpl
hlt
jae
daa
cld
jns
roll
notb
cld
push
ret
ja
aas
loop
mov
aas
aad
loop
or
dec
jmp
hlt
rolb
cmp
jp
xchg
ficomps
ret
js
dec
insl
mov
and
cltd
xor
ja
jo
pusha
outsb
xlat
cmp
shll
ss
xchg
mov
cmpsb
sti
cwtl
lods
mov
adcl
mov
or
sub
pop
in
cmpsb
push
and
addb
repz
pop
jo
popf
cmp
cmpsl
add
sti
je
lods
pop
xchg
lcall
adc
mov
call
xchg
mov
xorl
data16
xor
add
mov
pop
or
add
cmp
js
enter
loope
push
xor
ja
cmp
pop
or
pop
loop
mov
int3
out
mov
dec
outsb
rsm
inc
imul
cmpsl
in
cmp
lahf
add
jb
mov
imul
insb
iret
pop
mov
mov
or
jo
lods
adc
xorb
lock
jmp
jle
js
pop
sahf
aam
in
or
insl
add
adc
cmp
iret
mov
testb
adc
jno
dec
scas
push
and
pop
xchg
fcomip
daa
or
out
xchg
sbb
adcb
pop
sub
shll
out
adc
jae
xchg
mov
and
mov
pop
aam
nop
lock
mov
fwait
sub
data16
push
pop
addl
xor
jb
sbb
xchg
es
or
std
ljmp
xor
xor
sbb
cmpl
fdivs
push
outsb
mov
jl
ds
jmp
xor
pop
mov
movsb
jb
add
and
mov
adc
xchg
bound
test
adc
lds
das
jbe
imul
inc
sub
push
test
je
jmp
push
fiadds
mov
dec
sub
xchg
cmp
nop
inc
ljmp
xchg
xor
sub
aam
je
and
enter
xor
icebp
sub
mov
cmp
mov
popa
pop
repz
add
rcll
adc
inc
jne
push
rclb
mov
adcl
ja
push
dec
std
mov
stos
sbb
sbb
test
jno
das
jecxz
jp
pop
fldcw
andl
mov
sti
adc
lock
push
mov
mov
and
add
adc
test
scas
sub
push
sub
and
xchg
jae
sub
mov
and
mov
add
andl
cltd
cmp
daa
add
test
data16
or
out
andb
filds
push
lea
adc
cwtl
cld
lock
inc
jb
pop
movsl
add
es
fstps
jbe
lock
sbb
lcall
jmp
add
cmp
xorb
fwait
in
shr
call
imul
inc
popf
mov
add
mov
fmuls
pusha
xchg
aad
mov
push
mov
cmp
cs
push
dec
stc
loopne
pop
lock
mov
pop
xor
pop
mov
fs
or
iret
mov
lods
mov
dec
imul
sub
add
mov
cwtl
imul
mov
or
loopne
je
push
andb
jl
jg
jae
and
or
cld
insb
pop
loopne
push
jb
mov
xor
hlt
xchg
xor
cmp
dec
test
xchg
ss
add
sub
in
inc
jge
adc
xor
push
or
shlb
sbb
sub
ret
hlt
cmp
pop
xchg
and
icebp
sahf
push
aad
popf
stos
mov
sub
in
out
out
sub
les
xor
sbb
inc
hlt
sub
lret
add
arpl
mov
dec
cmp
ret
cli
cmp
cmc
js
test
and
cmp
loope
shlb
stos
rcl
shll
popa
ret
or
jmp
popf
stc
lock
push
js
out
sub
adc
and
sarb
pushf
test
ja
hlt
or
inc
addr16
push
fnstsw
add
sbb
test
cmp
sbb
mov
hlt
mov
mov
aaa
mov
js
jecxz
cmpl
out
inc
inc
adc
cmp
mov
popa
add
or
pusha
loopne
test
ja
pop
and
sbb
dec
xchg
add
dec
mov
fcomi
or
test
cltd
mov
pop
push
push
ret
push
aaa
loope
and
push
add
mov
adc
enter
lret
add
cmc
xor
sbb
sub
adc
pop
lahf
cmc
push
sbb
mov
fidivs
les
mov
lret
pop
lock
hlt
fstps
ljmp
add
xor
cs
bound
rorb
js
dec
test
adc
out
pop
loope
loope
adcb
int3
lea
cmp
pop
enter
fmuls
outsl
jmp
sub
adc
pop
and
dec
dec
lds
or
pop
push
xor
jecxz
fimull
xor
cmp
cpuid
rol
test
je
and
xlat
pop
mov
xchg
cld
fimuls
pushf
nop
sub
andb
out
add
jne
stc
outsl
jmp
imul
je
dec
jl
out
sbb
out
ret
mov
addb
push
sti
pop
shll
jae
adc
sbb
rorl
and
les
notl
jnp
or
pop
add
xlat
mov
mov
jl
inc
cmp
addb
cli
xchg
imul
jb
jg
dec
popa
xchg
roll
sbb
and
fwait
test
loopne
add
or
xor
sub
cmc
dec
popf
or
ret
mov
mov
aad
or
cmp
sub
rcr
leave
cmpxchg
out
xor
inc
scas
pop
cmp
push
mov
adc
xlat
cmp
push
aam
mov
pushf
cmp
jno
lock
ja
mov
fs
add
lods
sub
imulb
xchg
scas
ljmp
add
sub
xchg
xor
jno
or
mov
inc
adc
loop
fidivs
leave
xchg
shr
cmc
bound
mov
add
mov
movsb
adc
addr16
push
push
jmp
add
pop
jae
fwait
push
mov
not
push
scas
add
adc
and
push
cmc
dec
adc
fwait
ret
sahf
in
test
jecxz
sub
jg
clc
mov
or
mov
repz
jne
loop
dec
sbb
mov
loopne
rol
jge
movsl
add
push
stos
dec
in
inc
ret
mov
cwtl
xor
out
push
xor
mov
test
test
lock
add
js
adcb
mov
sarl
add
stos
sbb
xor
test
arpl
pop
addb
jge
ljmp
push
ret
mov
out
test
add
aam
subb
stos
rorl
iret
rcrb
stos
les
push
sbb
fimuls
ljmp
inc
lret
nop
jge
ret
dec
das
daa
push
xchg
mov
mov
and
fisubrs
push
jno
mov
gs
push
lock
sbb
cmpsb
mov
aad
es
fcomps
adc
add
mov
push
lods
or
cltd
sbbl
sbb
in
mov
cmp
mov
adc
sbb
dec
xchg
cmp
fidivl
cmc
cmp
stc
andl
dec
pop
paddusw
iret
int3
push
hlt
add
sbb
add
test
das
lahf
les
push
sbb
test
icebp
aas
mov
push
xor
jge
xlat
jb
xchg
cwtl
push
jmp
test
mov
les
ficoms
dec
dec
fidivl
xor
pop
lock
data16
repnz
addr16
pop
mov
pop
cmp
sbb
xchg
imul
pop
xlat
cmp
or
and
fidivs
outsl
pop
cmp
xlat
mov
lahf
mov
push
add
icebp
loop
mov
pop
mov
or
int
call
sub
add
mov
sahf
mov
xchg
lahf
rcr
int3
cmp
mov
add
or
hlt
push
dec
mov
jbe
sbb
cmp
sahf
adc
sub
add
xlat
adc
inc
fstps
xor
aas
add
xchg
add
xor
pop
inc
pop
ja
xchg
push
test
cmp
adc
dec
push
aas
and
call
fcmovnbe
pop
mov
fadd
dec
jecxz
lods
ja
stos
ret
jns
sub
or
dec
jne
or
or
cmp
cmc
mov
lods
enter
shlb
adc
inc
dec
jge
pushf
push
cmc
mov
and
jmp
adc
out
mov
ss
add
cmp
repnz
cmpsl
or
push
loopne
push
xchg
sbb
xor
or
aad
syscall
lock
push
cmp
lock
dec
pop
test
lahf
add
mov
adc
xlat
testl
or
ds
mov
orb
iret
mov
sub
iret
fs
sub
std
add
mov
push
mov
or
jae
inc
sub
xchg
dec
pusha
out
xchg
or
enter
incb
inc
mov
cmp
xchg
jbe
jb
xor
sub
jecxz
or
mov
fwait
js
add
mov
inc
or
sbb
bound
data16
cs
int
lock
lret
orb
and
mov
adc
and
push
ret
sbb
arpl
sub
loopne
push
stos
scas
mov
mov
cmp
jmp
add
add
rorl
inc
push
cmpsl
adc
icebp
cs
xchg
pop
sub
jbe
cmp
jbe
xchg
shll
xor
lods
jbe
jecxz
add
sbb
inc
in
idiv
inc
pop
jle
shll
adc
xchg
dec
jb
sahf
test
dec
xor
popf
call
sbb
js
rolb
sbb
sbb
int3
inc
add
inc
sti
and
sbb
enter
pop
or
sbbb
mov
lock
scas
xor
jnp
fcmovu
rorl
pop
and
into
fbstp
push
stos
jle
cli
fildll
andl
je
fucomp
aaa
add
jns
adc
into
js
or
lea
or
lcall
scas
in
scas
mov
xor
aad
or
test
mov
repnz
pop
sbb
ret
test
fst
mov
mov
inc
push
test
push
jmp
pop
mov
mov
int
cmpsl
bound
add
lods
xor
sub
cmp
pop
call
add
je
xlat
out
mov
aaa
ror
out
and
jmp
xchg
aaa
cmp
mov
lds
ret
pusha
xor
pop
imul
xchg
sbb
adc
je
cmp
jmp
aaa
xchg
aaa
addr16
bound
and
inc
adc
in
sub
out
sub
xchg
adc
or
mov
test
imul
das
mov
push
cmp
adc
aam
leave
popf
adcl
cli
daa
scas
push
xor
sbb
fldl
pop
lods
or
or
jo
adc
or
bndldx
push
adc
dec
cmp
and
test
repz
enter
mov
cmp
std
cmp
xchg
add
jp
adc
xor
mov
pushf
cmp
aam
into
add
lret
mov
or
pop
fcomps
in
push
or
lods
dec
jg
jg
iret
jae
inc
jp
adc
pop
repz
xor
stc
push
add
adc
ret
fsubrs
dec
cld
jmp
sti
or
mov
sbb
add
adc
push
inc
cld
repz
inc
fs
mov
push
int
push
stos
mov
aad
cld
clc
sbb
push
sub
or
push
call
shlb
mov
popa
inc
fsts
push
sbb
push
mov
mov
jl
mov
and
sti
clc
aas
aaa
shr
add
sbb
cmp
dec
cwtl
inc
and
and
clc
jmp
cmp
mov
pop
test
dec
and
mov
lods
push
xor
dec
mov
fsubs
aaa
nop
arpl
mov
or
fwait
out
icebp
lock
cmpsl
xchg
sub
testl
call
popf
add
mov
xchg
push
incb
or
data16
fstpt
fistps
jge
add
or
xorl
scas
loopne
mov
pop
fidivrs
test
xchg
fwait
mov
arpl
lock
add
decb
add
mov
lret
in
add
addr16
les
push
cli
sub
fs
sbb
testb
pop
movsb
inc
push
xchg
push
sub
xor
sbb
or
mov
jne
jl
cmp
jne
sub
test
push
loop
clc
out
push
add
jle
movsb
and
add
test
aas
cmp
pop
lods
and
es
jmp
xchg
add
fcompl
adcl
lock
pop
lret
shlb
jno
xchg
aaa
adc
mov
add
dec
pop
leave
sub
out
inc
movsl
dec
push
cmpsl
sbb
dec
sub
sub
lods
popa
push
add
fcomip
adc
fstpt
xlat
sbb
mov
daa
loopne
adc
and
adc
testl
add
shr
inc
out
mov
push
icebp
loope
je
lret
ror
add
xchg
ret
test
push
repnz
inc
into
call
sub
js
fs
insl
dec
or
loopne
ss
test
cmp
mov
pop
push
and
sti
lock
jo
pop
dec
add
sbb
add
add
xor
push
dec
xor
ret
ffree
xor
inc
cmp
sub
sbb
test
add
and
test
icebp
dec
or
push
inc
rcr
pop
hlt
iret
int3
jo
shl
sub
addb
xor
xchg
mov
xchg
lock
jo
add
inc
insl
xor
rorl
cmp
or
mov
into
ret
mov
fwait
shll
repnz
mov
loopne
sbb
and
in
arpl
cli
pop
rorb
loope
adc
scas
cmpsb
pop
xor
and
test
loope
lret
push
jle
jae
mov
inc
arpl
andl
rclb
rclb
push
adc
addb
jmp
mov
rorb
orb
mov
mov
xchg
mov
arpl
jmp
cmp
push
icebp
mov
jle
mov
int3
or
adc
add
arpl
add
je
push
cs
pop
cmp
mov
mov
jne
loop
js
pop
mov
shlb
lock
jg
lock
nop
sub
in
dec
loopne
push
in
mov
sbb
popa
push
ret
jae
pop
pushf
push
in
sbb
xor
push
jae
xor
cmp
je
pop
aas
in
sbb
and
ss
mov
sbb
lcall
push
mov
ficomps
and
lahf
imul
int3
orb
push
adc
add
fmuls
mov
je
add
les
xchg
cli
add
push
scas
add
add
outsl
sbb
sub
and
fldcw
leave
test
ficompl
add
jb
adc
xchg
or
push
sbb
movsl
mov
pop
popa
add
mov
and
xlat
xlat
ss
outsl
inc
xor
roll
mov
xor
push
mov
lds
adc
pop
test
aam
imul
sbb
filds
push
in
pop
sbb
cmp
or
adc
push
add
inc
movq
aaa
jnp
mov
add
lcall
mov
mov
cmpsl
cmp
mov
popa
push
push
aad
rclb
in
lahf
push
sbb
and
adc
pop
ret
jno
popa
sbb
ja
ret
popf
movsl
pop
pop
cmc
push
aam
cwtl
add
loopne
loope
sysexit
jmp
addr16
shlb
mov
xchg
cmp
pop
mov
jb
adc
test
aas
jne
cmpsl
jl,pn
mov
mov
add
mov
out
pop
js
clc
jae
pop
ds
sub
or
sbb
dec
lcall
pop
lds
mov
sbb
ffreep
push
jnp
in
sar
jbe
mov
jns
xlat
dec
cmc
sarb
aas
test
loopne
and
inc
movntps
xor
adc
test
cmp
mov
lock
outsb
filds
mov
pop
inc
mov
push
sub
fiadds
aaa
push
cld
or
pushf
movsb
sub
jle
fs
sub
fwait
or
add
mov
jno
sub
xor
adc
add
loope
rorb
and
push
dec
and
mov
inc
sub
jo
not
bound
xor
sub
and
jmp
rol
push
div
mov
in
or
or
fisubl
pop
lahf
inc
cs
lods
insl
mov
xor
add
and
ds
xor
pop
cmp
jb
lods
inc
sub
xchg
and
xor
adc
xchg
sub
jle
aas
loope
dec
jmp
sahf
cmpsb
cli
clc
mov
sub
mov
rol
decl
jo
out
cli
sbb
mov
fildl
int
mov
cmpsl
and
jnp
jmp
jbe
in
or
or
rolb
and
add
mov
call
and
ret
fimull
mov
clc
sub
loop
in
loopne
or
jo
adc
sbb
push
adc
jno
jle
jno
and
mov
pop
jne
xorb
test
pushf
mov
add
and
shrl
mov
pop
sti
push
add
jmp
mov
ficompl
jb
sub
fs
lock
lret
sbb
dec
add
inc
pop
push
pop
adc
dec
inc
loopne
push
imul
leave
bound
sub
mov
lahf
out
dec
mov
mov
and
pop
lcall
push
jne
xor
inc
jmp
or
jmp
push
inc
or
adc
or
movsl
shl
jg
cld
scas
push
inc
call
mov
jp
std
maskmovq
fwait
mov
adc
add
jecxz,pn
push
and
push
outsb
adc
push
out
add
out
inc
xchg
das
jle
xchg
xchg
in
pop
in
call
scas
icebp
out
cmp
int
mov
mov
scas
push
icebp
negl
mov
daa
mov
xor
hlt
xchg
sarb
icebp
push
mov
adc
in
mov
popl
jno
cld
xor
push
and
mov
pop
cwtl
push
je
push
add
aaa
pusha
sbb
loopne
xchg
loopne
test
loope
pop
mull
loope
lret
sbb
cli
or
pop
pop
cmpb
orl
stc
ret
sbb
ss
loopne
push
fadd
inc
add
test
xor
fidivs
sbb
stc
add
gs
xor
fsts
push
insl
sub
adc
xchg
cmc
inc
enter
loopne
sbb
fstpt
mov
mov
fbld
jno
adc
sbb
push
sub
inc
adc
adcb
mov
jmp
adc
popa
cmp
pusha
or
sub
test
loopne
push
xchg
add
cwtl
sub
sub
sbb
ljmp
xchg
xlat
sub
mov
ror
cmovs
fcomps
xor
sbb
mov
icebp
lea
push
jns
rorl
call
add
add
sub
sub
test
or
inc
pushf
cmp
rcrb
cltd
mov
ror
inc
dec
and
sub
or
push
icebp
icebp
call
mov
mov
and
sbb
test
or
push
ret
dec
enter
clc
xchg
mov
icebp
loope
inc
rcl
adc
push
or
push
js
jno
inc
cmp
out
add
mov
shll
mov
inc
ret
imul
jne
mov
test
mov
shlb
movsb
or
sub
mov
lock
adc
ret
push
mov
stos
sub
arpl
mov
jno
cmc
cmp
jmp
push
test
xor
xchg
adc
adc
test
inc
leave
cwtl
out
loope
xchg
ljmp
add
shrb
aam
inc
mov
movsb
add
mov
shl
cmp
or
in
push
dec
mov
lcall
add
aaa
lcall
loope
fstpl
xchg
ficoml
inc
adc
enter
cmp
repnz
push
fcoml
dec
mov
in
ds
aam
mov
xorl
arpl
lds
xchg
aaa
out
hlt
pop
and
mov
ret
push
mov
aas
movsl
or
loope
jo
jno
mov
pop
sbb
jecxz
gs
or
lock
or
sub
adc
adc
cs
or
repnz
and
fwait
jne
cld
or
cltd
inc
jl
jnp
std
add
mov
xchg
mov
rclb
aam
xorb
out
rorl
enter
js
push
push
pop
neg
xor
and
lret
inc
inc
movsl
sub
push
fstp
sbb
cli
es
sti
add
test
enter
mov
sbb
add
add
daa
out
xor
sub
cld
adc
aas
add
mov
xorb
mov
push
push
cmp
dec
push
pop
mov
and
adc
in
movsl
jecxz
dec
mov
add
adc
lea
dec
ja
fs
sbb
and
inc
jp
mov
rdmsr
sbb
aas
or
inc
iret
or
mov
add
aad
pushf
adc
push
xchg
adc
rolb
addl
fisubrs
dec
push
push
push
jne
push
adc
or
pop
loopne
inc
test
js
aas
sbb
add
xor
push
bound
pop
inc
aas
imul
pop
xlat
mov
xchg
sub
sub
jecxz
test
or
or
aaa
ret
inc
mov
push
pop
mov
rol
ljmp
push
push
lret
xchg
outsb
dec
adc
add
loop
jne
inc
cld
adc
nop
mov
mov
movsl
sbb
and
sub
add
scas
cmp
cmp
and
test
aad
clc
add
inc
xorb
rcl
dec
cs
and
mov
addb
or
and
xor
das
pop
sub
fstpl
push
imul
les
xor
add
fstl
outsb
jmp
cmp
mov
loopne
push
adc
mov
adc
test
lahf
loopne
adcl
dec
sarl
add
lea
mov
loop
or
mov
nop
pop
and
xor
push
pop
and
add
dec
or
insb
adc
add
xor
movl
add
test
inc
push
fldcw
add
pop
add
dec
sub
sbb
or
jmp
push
aas
dec
adc
or
addr16
lret
jmp
pop
dec
and
and
dec
scas
push
rcr
pop
pop
mov
jne
rcrl
out
sub
xchg
sbb
add
movsl
das
pop
pop
jp
and
push
clc
adc
pop
adc
mov
jmp
mov
mov
les
and
jnp
xchg
jmp
jb
insb
pop
outsl
mov
arpl
push
dec
fldt
jno
dec
outsl
clc
sarb
cld
or
xor
dec
xor
xchg
daa
repz
addl
cltd
mov
mov
mov
xor
rorb
test
iret
call
divb
pushl
lods
add
xchg
pop
sbbb
pop
sbb
cmpsl
subb
dec
push
or
inc
mov
add
mov
xor
imulb
sbb
cmp
outsl
add
adc
push
xchg
lret
sbb
mov
add
adc
cmp
and
mov
sub
orb
popf
les
ja
xchg
sub
in
xchg
cwtl
or
mov
and
std
mov
pop
divl
inc
pop
mov
jg
jnp
xchg
call
je
push
inc
push
pop
les
mov
sbb
jg
outsl
andl
jl
arpl
sbb
xchg
int
pusha
push
cwtl
jmp
out
hlt
pop
aam
mov
mov
jg
lahf
or
pop
push
jne
arpl
adc
idivl
sbb
andb
push
push
lahf
mov
jns
push
mov
pop
or
push
out
mov
shl
bound
push
jno
push
pop
sub
jbe
jmp
movsb
mov
roll
inc
cs
pop
pop
pop
clc
out
inc
mov
lds
add
dec
loop
mov
jb
ljmp
jl
sbb
sub
movsl
and
add
push
clc
loopne
inc
rcrb
jmp
adc
mov
shlb
adc
mov
adc
or
inc
enter
dec
mov
cmp
sbb
xchg
adc
dec
ja
and
sbb
xchg
in
adc
shll
add
sub
add
loop
xorl
sub
test
adc
sub
push
cmpsb
in
mov
push
and
add
or
in
or
xor
inc
sub
outsb
insl
lods
sarb
jmp
addr16
cli
clc
push
adc
jno
test
xchg
mov
rcll
mov
les
roll
mov
cld
or
adc
add
movsb
dec
inc
enter
dec
sbb
dec
dec
dec
dec
scas
popf
jns
sbbl
xor
pop
inc
lds
inc
mov
movsb
aad
std
out
pop
orb
sbb
jo
ret
lock
repnz
push
sub
jae
sub
shrb
jmp
call
ljmp
lock
add
mov
ficomps
dec
ret
ret
mov
enter
clc
adc
ret
adc
daa
adcl
popa
popa
adc
and
flds
orb
xor
pop
and
int3
in
xlat
push
sbb
hlt
jl
mov
popa
add
push
aam
or
mov
xor
popf
and
cmpsl
aam
add
xor
repnz
loope
rclb
cmp
out
adc
call
stc
mov
iret
xor
xchg
adc
filds
adc
popl
add
dec
and
mov
mov
jp
pop
and
jo
fmul
xchg
pop
popa
mov
pop
add
inc
jb
subps
dec
jecxz
push
dec
inc
and
lret
and
ljmp
and
xlat
scas
cmp
cltd
imul
add
inc
and
lea
pop
adc
rcl
and
sub
xchg
xchg
test
gs
adc
or
mov
adc
movsl
mov
cmc
cmp
xchg
or
sub
aam
loop
in
int
fiadds
or
sbb
hlt
mov
out
jae
xchg
sub
xor
pop
mov
and
add
ret
push
ret
pop
fcoml
xlat
enter
dec
in
jp
imul
mov
cmp
gs
push
lret
lret
inc
aam
out
push
jns
test
add
adc
sub
out
or
and
add
sub
sbb
aaa
aaa
inc
add
fistl
in
mov
push
leave
or
adc
das
inc
sbb
cmp
dec
sub
fildl
mov
pop
pop
add
dec
aam
inc
inc
div
sbb
push
cmc
jmp
aam
push
rorb
pop
and
fldcw
clc
ficompl
dec
lods
adc
scas
push
inc
sub
mov
mov
stc
xor
xor
loopne
pop
int3
leave
ret
mov
test
sub
inc
dec
iret
xor
ret
xor
xor
or
jbe
mov
inc
lcall
fst
shlb
inc
les
jne
dec
pop
es
int3
pusha
xor
xor
sbb
xor
cmp
popa
bound
inc
or
loop
lret
cmp
dec
dec
int3
inc
sbb
add
loop
insl
mov
inc
cmp
adc
and
xor
in
addl
or
add
test
push
push
lret
jae
jmp
lods
das
adc
jbe
loope
add
lea
sub
ficomps
repz
fdiv
push
inc
popa
popf
xor
inc
cmp
test
inc
int3
pop
sahf
sub
shll
and
adc
jne
pop
inc
loopne
into
int3
mov
inc
inc
lret
lock
out
lea
fisubrs
iret
xor
dec
add
rolb
jle
push
xchg
ret
mov
int3
and
fnstcw
adc
cmc
es
fs
add
insb
dec
xchg
out
or
pop
inc
add
pop
cmp
add
std
adc
inc
mov
add
sarb
in
mov
inc
in
hlt
lret
fcoml
sbb
cmp
mov
and
sub
push
adc
xlat
sbb
bound
faddp
mov
jae
and
and
add
cmpsb
mov
aam
adc
xchg
jno
mov
cmp
or
mov
sahf
jae
stos
pop
andb
icebp
test
and
adc
inc
push
inc
sbb
loop
mov
or
jbe
in
fwait
or
or
mov
push
enter
insb
and
xorb
lock
mov
mov
mov
add
add
dec
dec
es
notb
rorb
test
ljmp
test
notb
xchg
gs
xchg
imul
test
loope
dec
hlt
clc
shrl
lcall
push
imul
sub
xchg
or
mov
add
inc
sub
icebp
dec
inc
nop
inc
mov
sub
lock
xchg
jmp
xlat
out
push
pop
xor
cmpb
mov
cmp
aad
jmp
sbb
movl
or
inc
pop
ficoms
dec
out
movsb
lcall
imul
adc
data16
repz
pop
adc
xchg
dec
test
sti
add
mov
sbb
daa
fcoms
sub
push
push
adc
xchg
leave
lcall
jne
mov
sub
imull
jne
lahf
xlat
mov
roll
scas
lods
inc
cmp
test
shlb
fcomi
sub
insl
ret
test
dec
push
xchg
pop
out
adc
in
mov
lds
out
ficoms
jns
pop
lock
aaa
and
and
add
and
sbb
push
push
sbb
push
push
mov
fsubrs
inc
ds
jp
ds
xchg
cmpsb
mov
cmp
xor
sbb
ffreep
js
adc
jo
scas
jb
aam
dec
lahf
mov
rol
out
rolb
notb
rolb
fwait
rcrb
out
xor
test
jo
xor
lds
fwait
xchg
mov
sbb
faddl
add
add
cld
sub
sub
lea
mov
loop
push
cmpl
loopne
pop
cmp
xor
add
push
push
jle
ss
lret
cmp
push
adc
mov
adc
gs
adc
add
sahf
orb
jne
test
outsb
and
or
jne
push
add
sbb
sbb
sbb
inc
cli
pusha
push
sbb
inc
je
mov
aam
int3
lds
sbb
sar
out
cltd
mov
sub
jo
leave
nop
jmp
adc
mov
aas
sbb
add
lds
inc
in
xchg
fsubr
xchg
pop
cmp
or
ds
jae
sbb
inc
imull
push
pusha
scas
pop
cmp
jae
jno
lods
scas
or
lods
dec
xlat
adc
movsb
loopne
js
jmp
jb
call
push
cmp
mov
bound
mov
mov
inc
cmp
insl
push
std
arpl
es
fistl
or
sarb
into
fidivrs
daa
mov
jae
add
hlt
sbb
into
pop
dec
shrb
add
or
test
lcall
shlb
inc
sub
dec
ds
inc
sbb
and
mov
mov
or
aaa
push
call
sbb
repz
or
mov
add
xor
add
shll
mov
sbb
outsl
sub
andl
mov
jmp
add
jg
lock
addb
jmp
ret
push
mov
sbb
ret
pop
mov
rolb
movb
add
inc
rorb
push
rclb
fdivl
xlat
inc
outsb
add
push
mov
add
or
xchg
add
pop
dec
scas
xchg
inc
sub
in
xchg
inc
ret
add
outsl
or
dec
inc
sbb
notl
fbld
or
in
cmpsl
and
cmpb
cmp
outsb
pop
mov
push
inc
aas
xchg
sub
fdiv
ja
js
lcall
addb
xor
fisubl
sub
gs
lock
movsl
inc
or
inc
sbb
les
rorb
jb
lret
or
inc
push
clc
pop
xchg
out
mov
cld
notb
imul
daa
test
jge
mov
push
mov
mov
cmp
cmpsl
lods
js
orb
or
lcall
int
push
add
iret
mov
or
inc
sbb
xrelease
je
cmp
pushf
and
out
mov
or
push
or
jge
andb
mov
xor
mov
mov
cmp
cmpl
daa
inc
daa
jp
movsb
sbb
xor
cmp
test
ds
adc
sub
daa
mov
shl
cmp
pop
pop
dec
or
xor
xchg
aad
or
rcrb
pop
out
sarb
rclb
ret
adc
xor
dec
sahf
fmul
cli
inc
push
mov
jmp
or
xchg
jne
dec
lahf
jmp
dec
xor
jle
pop
dec
adc
pop
adc
pop
mov
sbbl
scas
ret
adc
sbb
mull
mov
mov
jbe
insb
rcrb
xor
xlat
sub
jne
out
and
or
subb
mov
aad
ret
pop
mov
ret
sub
xor
les
pop
in
add
movsb
lds
push
jle
jp
les
add
sbb
shlb
mov
bound
orl
movq
div
sbb
cmpsl
add
imul
xor
test
push
push
insl
out
add
lret
out
adc
sbbb
aam
xor
inc
mov
test
stos
jmp
ljmp
mov
pop
jmp
adc
cmpsl
shlb
js
xchg
mov
mov
rcll
xchg
adc
xor
rorl
add
and
rorl
fucom
lods
mov
loopne
repz
add
cmp
sbb
mov
sub
shrl
add
lock
rcrb
and
shlb
xchg
inc
push
loopne
and
push
addr16
mov
or
imul
xchg
inc
xchg
movsb
das
loope
dec
pop
mov
xchg
or
in
or
xchg
mov
rcl
daa
push
movsb
inc
push
hlt
and
mov
xlat
sar
lock
idivb
js
sbb
arpl
and
add
mov
sub
pop
inc
xlat
or
arpl
add
lcall
sub
cmp
popa
hlt
mov
and
fstpt
fisttpl
inc
rcrl
sbb
mov
aas
cwtl
hlt
sub
or
and
xchg
repz
scas
push
aas
test
faddp
or
loope
jl
or
fiadds
outsb
cmp
push
test
push
add
or
dec
mov
dec
pop
fwait
in
insl
in
xchg
push
xor
jno
adc
sub
pop
inc
mov
mov
fmul
rclb
clc
push
push
push
xchg
repz
sub
mov
popf
and
xor
and
dec
cmp
test
mov
or
mov
std
sbb
push
clc
mov
and
push
mov
or
ret
push
pop
dec
add
mov
daa
push
int
dec
inc
pop
or
sbb
addl
xchg
pop
xlat
push
aam
sbb
ss
push
pushf
mov
ret
mov
dec
movups
fdiv
outsb
adc
adc
or
popf
cmp
out
div
bswap
sbb
add
sub
adc
mov
ljmp
adcl
mov
xchg
lock
and
xor
sub
inc
sbb
cs
aad
jmp
mov
add
cmc
cmp
mov
adc
add
rcl
les
mov
mov
add
mov
xchg
mov
jle
subl
les
push
sub
inc
adc
int3
jae
jno
test
jmp
mov
movsb
cmpsb
pop
mov
js
hlt
insb
negb
or
lcall
mov
loop
mov
loope
cmp
addb
arpl
fdivl
add
push
add
cmp
xchg
aaa
jbe
mov
fcoms
repz
cmp
dec
out
les
lret
sub
out
mov
inc
add
cmpsl
fld
mov
and
outsb
loope
pop
and
test
jo
sbb
shr
cltd
xor
mov
mov
add
test
lds
jno
or
jle
ds
push
int3
pop
adc
or
dec
pop
dec
xorb
shll
xchg
pusha
sub
mov
sbb
jmp
fistpl
pop
inc
cmp
imulb
into
mov
div
mov
jp
cmp
sub
cmpsl
xchg
mov
xchg
cs
jle
stos
add
mov
fiadds
fwait
sub
mov
sbb
pop
sub
int3
sbb
addr16
xlat
add
cld
mov
xchg
clc
adc
xchg
jae
loop
cmp
dec
ss
xlat
xor
addb
int3
cmp
sub
pop
inc
in
jo
sub
neg
sub
je
outsb
sub
lods
bound
xor
push
dec
sbb
aad
iret
movb
xchg
dec
and
xchg
mov
sbb
push
lea
and
adc
subl
fistl
jmp
js
in
jne
gs
xchg
jne
inc
jns
dec
mov
mov
shlb
adc
mov
jne
lds
lock
push
add
mov
cmp
int3
jmp
pop
fsubrp
or
out
mov
imulb
pop
adc
cmp
jnp
shlb
add
data16
stos
ret
fbld
push
xchg
add
push
out
addl
aad
decl
cmpsl
btr
add
lds
inc
xchg
bound
mov
jno
push
arpl
mov
dec
xchg
sbb
push
jo
fnstsw
movsb
shlb
mov
cltd
int3
hlt
mov
cmp
push
mov
insl
lock
xor
pop
add
inc
jns
push
or
lods
xchg
mov
mov
mov
mov
push
xchg
in
mov
ds
lods
cmp
fs
adc
lock
sbb
xor
jne
popf
jp
ret
inc
pop
xchg
in
call
xchg
nop
xor
out
test
add
insl
mov
icebp
add
loop
cmp
pop
pop
adc
jecxz
mov
inc
xchg
rolb
andl
cmc
icebp
xor
dec
mov
lret
lds
or
outsl
das
aam
inc
or
in
sbb
add
push
mov
inc
xchg
sub
into
xor
data16
mov
adc
cmp
dec
sbb
ja
popf
hlt
hlt
or
push
out
enter
pop
add
lahf
mov
adc
fucomip
xchg
add
pop
packssdw
leave
mov
sbb
in
addl
add
sub
inc
jae
push
add
insl
cwtl
adc
lods
sub
in
dec
or
out
lea
adc
ljmp
mov
pop
sar
shll
mov
rolb
add
sbb
es
std
xor
add
adc
es
mov
sahf
add
push
cmpsb
mov
push
mov
test
mov
lds
add
dec
dec
loop
pop
ljmp
mov
adc
shrb
jno
test
cmp
adc
and
jecxz
push
sbb
xor
cmp
rol
xrelease
dec
aad
or
pop
and
cmp
fmul
pusha
push
test
scas
and
add
cltd
or
or
add
lods
sar
add
ficompl
cli
sub
xchg
add
jne
mov
arpl
push
inc
adc
adc
cs
stos
daa
test
xor
nop
push
pusha
mov
es
loop
mov
and
and
pop
test
dec
push
orb
lret
sbb
cmpsl
stos
and
pop
sbb
outsl
adc
pop
sahf
dec
jne
lahf
std
loopne
push
aam
jmp
addl
cld
dec
cmc
rorb
insb
div
in
stos
loope
inc
loope
loopne
lea
pop
pop
dec
pop
dec
stos
mov
adc
sub
shlb
pop
jle
ljmp
pop
rclb
pusha
xchg
xor
add
xchg
or
mov
out
jecxz
in
icebp
test
sub
push
inc
adc
jecxz
outsl
test
lds
mov
shlb
in
test
or
addl
ret
sub
inc
adc
push
popf
jnp
dec
decl
das
jo
dec
and
add
adc
pop
or
andb
in
pop
outsb
sub
iret
pop
rcrb
xor
icebp
mov
or
jbe
clc
add
insl
popa
bound
lock
das
mov
pop
add
popa
aam
shl
cwtl
loopne
jp
into
sahf
xchg
adc
nop
or
loopne
lods
jno
test
sub
pop
xchg
jae
outsl
loopne
in
or
and
ret
sarb
jo
cmc
and
jnp
dec
arpl
add
addb
push
dec
int3
xor
pand
sbb
sbb
adc
call
imul
pop
outsb
xor
jbe
mov
neg
or
cmpsl
cmp
lahf
and
xor
add
mov
mov
inc
push
addr16
cmpsl
mov
sbb
fsubl
out
or
aam
sub
lock
outsb
loopne
dec
cli
fdivr
add
repz
mov
cld
cmp
fwait
mov
dec
mov
pop
xchg
push
aam
neg
idiv
xor
outsb
jae
cmp
adc
mov
rcrb
add
lea
dec
xchg
jne
inc
fwait
dec
add
arpl
lods
mov
js
add
cmp
lods
pop
push
loop
les
adc
das
ret
out
shld
movsb
cld
pop
fisubl
aaa
mov
inc
mov
enter
sbb
movsl
fcmovnu
cmp
push
les
mov
fucomp
jge
cmp
dec
cmp
pop
bound
push
push
mov
jp
ret
into
scas
hlt
or
jecxz
mov
xchg
xchg
scas
incl
ret
cmpsb
and
loope
rcr
adc
mov
call
inc
sbb
int
cld
sbb
stos
insl
inc
js
aam
ds
inc
daa
out
leave
xchg
pop
inc
pop
mov
mov
movsb
push
inc
repz
mov
mov
call
sbb
in
ljmp
aas
or
adc
push
das
aam
inc
and
insb
adc
test
not
push
dec
sarl
add
xlat
mov
jecxz
push
jmp
sbb
popa
pop
out
inc
lea
test
sub
popa
or
xchg
xchg
out
pop
or
dec
lods
dec
in
sti
xchg
in
bound
dec
movsl
inc
add
ficompl
fnstsw
cmp
andb
xchg
imul
rclb
ret
out
loopne
inc
lret
xor
repnz
add
mov
lock
inc
sbb
lcall
mov
rep
or
add
or
inc
js
and
pop
and
cli
dec
setb
inc
pusha
je
mov
and
les
add
and
add
push
dec
adc
and
lcall
xor
add
ret
pop
adc
punpcklwd
jae
sbb
sbb
subl
jmp
popa
mov
fldenv
insl
jmp
jle
in
test
rolb
and
push
inc
add
sub
jle
cmp
rcl
add
scas
push
icebp
add
stos
gs
loopne
cmp
shrb
push
inc
cltd
decb
cmp
jnp
ret
inc
inc
and
mov
push
add
loope
or
int3
xor
fmulp
js
push
push
fisubrs
sub
fs
in
pop
and
adc
cmpsb
push
sub
sub
js
xchg
lahf
fbld
jle
into
push
ds
cmp
inc
rcl
sbb
or
jle
mov
dec
ret
jmp
pusha
inc
pop
test
in
mov
or
cmp
push
movsb
fstps
mov
and
dec
push
inc
inc
jmp
push
outsb
xor
add
loop
or
fnstsw
je
out
inc
or
ret
adc
cli
mov
xlat
xlat
outsl
push
xchg
pop
jmp
jne
add
pop
stos
mov
add
xor
and
mov
xchg
ret
imul
orb
adc
rolb
sbb
cmp
fwait
mov
icebp
adc
cltd
dec
lcall
jl
in
cli
add
dec
jge
in
rorb
scas
or
xchg
mov
sbb
lret
inc
sbb
es
push
mov
test
or
in
lock
xchg
adc
add
outsl
enter
sbb
mov
add
inc
sub
add
mov
mov
jmp
mov
add
sub
icebp
add
sub
repz
and
aas
dec
popa
movsl
jnp
xchg
push
dec
sub
loopne
mov
mov
mov
dec
mov
push
sub
lcall
dec
out
mov
into
rcr
ljmp
pop
cmpsl
dec
and
inc
xor
and
inc
ret
in
pop
nop
js
mov
andnps
cmc
icebp
or
and
mov
sub
push
mov
sub
test
stc
inc
push
idiv
jg
sbb
add
imul
dec
addr16
xorb
incl
xchg
and
jmp
cmp
mov
in
jae
loop
fildl
inc
add
cmp
jge
push
add
repnz
fwait
rolb
les
imul
push
add
shll
push
xor
add
call
xchg
jo
aas
in
jp
enter
and
add
dec
cmp
lods
aam
push
ficoms
dec
or
add
out
pop
movsb
dec
ljmp
lds
add
dec
fildll
or
add
or
inc
mov
add
popf
add
xchg
add
call
xlat
sub
mov
loopne
jg
jg
or
pop
loope
ret
adc
add
add
push
pusha
jno
gs
add
push
pushl
add
mov
maxps
cli
xchg
xor
sbb
push
cmp
std
sahf
repz
shr
mov
add
hlt
add
call
sarl
inc
dec
inc
push
idiv
xor
fbld
fistps
jnp
push
cmpb
inc
jbe
daa
xchg
bound
mov
jl
daa
add
call
dec
or
mov
pushf
add
adc
mov
jo
sarb
mov
dec
add
outsl
xchg
mov
divb
cmpl
push
push
push
fucomi
lcall
fsts
xchg
std
add
aad
mov
frstor
scas
bound
or
jmp
adc
andb
aam
shlb
push
cmpsl
xor
stos
aad
xor
inc
xchg
adc
sbb
mov
das
clc
mov
shll
push
add
xchg
sub
fists
mov
or
add
outsl
ret
inc
cltd
add
or
dec
mov
rolb
mov
sub
pushl
cmpsb
lods
adc
pop
cmpsl
add
dec
add
stc
add
add
lock
clc
and
or
jcxz,pt
mov
and
aam
jmp
adc
shll
iret
in
add
dec
jns
mov
add
in
ret
xor
es
push
pop
imul
push
jge
jnp
das
xor
mov
adc
add
out
mov
cli
jecxz
jge
add
in
dec
or
nop
cmp
cmp
pop
mov
jb
mov
jmp
add
or
movsb
add
arpl
or
xchg
mov
loop
pop
ret
rclb
pop
icebp
fistl
fldenv
scas
mov
cmpsb
fists
je
aaa
call
jl
add
outsb
pop
jp
jns
add
or
pop
mov
inc
mov
add
or
mov
out
clc
push
pop
fistpll
add
out
mov
cli
les
mov
fwait
or
lahf
hlt
fs
fbstp
cmpb
and
add
rcrb
add
cmp
add
cmpsb
or
push
lea
fstpt
filds
rcll
mov
mov
fcomip
call
mov
inc
cmp
adc
mov
je
pop
jo
bound
and
pop
ficoml
pop
add
test
cld
add
test
mov
mov
push
add
mov
jbe
mov
mov
adc
icebp
repz
push
in
add
out
pop
mov
cmp
or
xchg
mov
mov
fimull
dec
adc
pop
sub
jmp
incl
inc
lcall
stos
add
ret
ljmp
pop
mov
push
ljmp
aad
dec
sbb
and
ja
aam
mov
mov
not
mov
int
or
fisttps
add
inc
xchg
xor
scas
repnz
js
push
inc
sti
mov
roll
and
cmp
pushf
jge
les
push
mov
test
mov
jp
out
addb
pop
and
mov
popa
ljmp
je
pop
mov
stos
push
inc
push
add
into
xchg
inc
into
add
xchg
stc
add
push
mov
push
and
jg
jmp
or
push
popa
push
dec
cmp
popf
loope
decl
sahf
fwait
sahf
add
cs
cmpl
or
test
mov
lret
sbb
dec
ret
jmp
cltd
insb
sti
push
add
ljmp
std
pop
add
pushf
decl
jle
in
cmp
and
lret
movsb
sub
inc
inc
pop
in
cli
mov
imulb
inc
movsb
es
aad
cmpl
push
fildl
xchg
sahf
stos
notb
mov
loop
and
cmpl
clc
sbb
and
in
add
outsl
das
clc
fsubs
je
jmp
lcall
jg
incl
or
aam
add
adc
jmp
or
pop
cs
push
loop
jno
inc
add
dec
fdivl
dec
push
les
xchg
insl
inc
stc
push
or
imul
scas
jp
loope
cmp
fs
dec
cwtl
mov
pop
fists
popa
mov
and
lea
subl
add
push
mov
add
and
add
cmp
push
inc
mov
js
test
xchg
mov
mov
movsl
xchg
push
nop
cmpsb
aam
mov
jns
cmp
subl
lcall
arpl
xor
cltd
fadd
call
dec
push
fucomp
insl
insl
xchg
adc
pop
pop
ret
rcl
mov
add
insb
aam
xchg
or
std
int
hlt
push
add
dec
mov
lods
loope
inc
mov
add
je
fstl
lds
std
mov
mov
sbb
xchg
xchg
ret
mov
int3
jg
xorb
inc
xor
mov
pop
sub
cmc
pop
push
jmp
cmpsl
pop
add
es
and
inc
dec
testb
pop
in
add
mov
jo
xor
add
cmp
xchg
push
notl
fwait
ljmp
clc
fadds
scas
xchg
add
dec
sub
xchg
mov
add
and
dec
clc
mov
sarb
or
fisttpl
out
mov
add
sub
push
sub
aaa
sub
inc
out
cmp
in
xor
push
repz
pop
adc
inc
jecxz
lds
es
ljmp
loopne
adc
push
shr
mov
add
and
ud1
push
push
lods
xor
add
or
mov
scas
scas
es
outsb
push
dec
mov
addb
stos
enter
adc
xchg
push
pusha
mov
mov
inc
ret
std
or
pop
xchg
rcrl
jp
cli
mov
add
adcb
cmpsl
mov
mov
cltd
mov
movsb
mov
sbb
faddl
out
int3
xchg
loope
rolb
fisubrl
ss
sti
cwtl
push
adc
push
mov
stos
sbb
std
insb
jnp
mov
add
or
cs
mov
daa
and
cmp
jno
inc
mov
sbb
clc
outsl
movsb
nop
xchg
add
push
ljmp
adc
or
ret
mov
andb
pop
add
mov
out
decl
in
jl
int3
mov
mov
lcall
jnp
shrb
adc
mov
loopne
out
dec
addl
lret
cmpsl
addl
lock
mov
ljmp
add
es
push
mov
add
ja
inc
push
or
push
pop
subb
push
mov
sbb
sub
jno
loop
or
icebp
mov
and
add
test
add
push
add
sbb
sbb
adc
pusha
adc
adc
pop
mov
add
call
cld
mov
mov
notb
jne
es
mov
or
pop
push
arpl
xor
cmc
cmpb
lock
add
sbb
nop
aaa
fucomip
push
rolb
outsb
enter
clc
mov
idiv
mov
mov
and
pushw
fcompl
jp
lock
mov
mov
rorb
or
mov
pop
loopne
jnp
add
inc
add
mov
push
push
sahf
mov
dec
lock
fistpll
and
popl
and
push
std
xchg
sub
xor
lock
loopne
mov
dec
mov
lea
fimull
mov
inc
ds
loopne
daa
xor
test
mov
pop
or
loop
ret
sub
aas
jo
out
scas
sahf
fdivrs
xchg
cld
aam
mov
add
mov
test
add
call
cmp
dec
push
cmp
ret
fbstp
shrl
lds
mov
int3
sub
cmpsb
push
clc
cmpsl
daa
lds
add
add
inc
add
push
xchg
push
cmp
sbb
pop
jp
dec
clc
iret
out
mov
mov
inc
dec
add
push
add
add
popa
inc
decl
pop
inc
add
push
and
cmpsb
jle
adc
fcomip
pop
push
stos
pop
std
jns
icebp
subb
adc
dec
adcl
inc
jp
add
xchg
movsb
pusha
push
imul
sti
jne
and
movb
mov
add
and
inc
les
mov
mov
dec
mov
adc
adc
cld
jmp
clc
aaa
push
xor
scas
imull
bound
icebp
jl
push
sbbl
stos
jne
inc
push
or
into
jno
pusha
fistpl
sbb
pop
xor
xchg
inc
aad
test
aam
sbb
and
insb
mov
orb
jmp
in
mov
xchg
arpl
sbb
arpl
es
std
sbbb
add
dec
stos
in
int3
iret
cmp
stos
js
push
cmc
pop
push
mov
dec
push
and
fwait
pop
add
aaa
xor
jo
test
push
push
jo
sti
cmp
loop
lahf
shlb
xchg
cmp
xor
xor
sub
and
jg
ja
int3
cmp
cld
pop
add
push
dec
mov
push
ja
sub
or
inc
sbb
mov
sbb
xchg
bound
mov
stos
sub
add
adc
rclb
mulb
mov
out
pop
or
cmp
and
and
add
enter
add
bnd
sub
mov
dec
shlb
jg
insl
lcall
xlat
fs
cmpsb
negb
ss
sbb
pusha
mov
lds
sbb
mov
nop
fsts
pushf
xchg
adc
jb
lahf
mov
mov
cmpsb
bound
jg
jne
xor
fcompl
lea
stc
popf
sbbl
jmp
int3
mov
push
rolb
shrb
fld
inc
add
enter
aad
mov
aaa
mov
add
pop
shl
and
adc
sbb
push
les
jmp
mov
stos
mov
out
add
nop
test
xor
jg
ffreep
mov
cmpsl
adc
mov
test
xchg
or
in
outsb
cli
jg
inc
lea
push
mov
jmp
jnp
popf
add
in
shrb
orb
popf
sarb
std
adc
push
adc
mov
or
push
lods
push
mov
icebp
cli
sarb
lods
cli
stc
pop
icebp
das
sar
cld
xchg
les
pop
cs
pop
jmp
je
and
rcr
icebp
mov
add
scas
call
mov
mov
add
fcmovnb
sub
cld
incl
test
ret
cmp
dec
or
mov
stos
cmp
jb
add
rcl
ljmp
lea
into
ficoms
sti
add
clc
add
lcall
mov
idivb
int3
hlt
push
pushf
daa
decl
insl
aaa
scas
xchg
cmp
cmp
sub
inc
jg
mov
xchg
lret
inc
cmp
pop
es
inc
out
cmpl
add
and
shrl
jmp
outsl
push
ret
inc
in
add
cmc
jg
cltd
ss
fisubs
scas
mov
aas
push
or
cmp
xor
jg
data16
rorb
data16
adc
pop
or
hlt
jbe
fidivs
inc
push
inc
lea
loopne
mov
movsb
pop
sub
leave
divb
test
loop
xchg
push
mov
lret
pop
mov
pop
jne
mov
popf
add
jg
push
lock
inc
decl
xchg
cmp
push
movsb
call
out
mov
cmp
xchg
stos
les
push
loope
leave
or
rcrl
stos
pop
inc
adc
aaa
push
test
mov
or
jg
pop
sbb
mov
mov
ja
adc
add
pop
incb
pusha
adc
xlat
jo
adc
add
mov
stos
lcall
or
adc
push
add
dec
mov
xchg
or
mov
incb
fstp
xorb
mov
movsl
sub
sbb
or
cmpsb
push
cmpsb
cmp
jo
outsl
mov
pushf
cli
ret
decl
rorb
cvtps2pd
ret
cs
mov
xor
das
es
xor
push
dec
sbb
jle
fsubl
push
and
or
fadds
jmp
inc
js
test
divl
add
ret
add
jmp
inc
lock
ja
inc
popf
pop
cmc
jg
filds
xor
adc
ret
adc
lds
addb
dec
push
inc
fs
jo
mov
mov
or
mov
inc
sbb
mov
inc
and
loopne
out
idivb
add
and
out
mov
lock
push
inc
fnsave
lea
aad
push
xor
mov
pop
push
pop
xor
ljmp
mov
jmp
add
dec
outsb
insl
inc
or
js
nop
and
popf
jmp
mov
pop
jp
cmc
lock
insl
push
lods
inc
out
mov
insb
and
lock
lods
ficomps
rorb
jo
add
push
cld
aas
jo
xchg
pusha
subl
inc
add
pop
std
sub
mov
sub
pop
rorb
repz
sbb
xchg
push
scas
dec
nop
ja
and
call
jp
and
and
andb
fidivs
jmp
dec
hlt
adc
xchg
and
inc
nop
aad
ljmp
inc
outsl
dec
add
adc
or
outsl
cmp
and
andb
repz
mov
cli
jmp
gs
pop
pop
andb
lret
xchg
and
xchg
std
pop
jg
jmp
mov
push
sub
in
ss
pop
mov
mov
int
imul
mov
ja,pt
sbb
xor
in
dec
icebp
lods
push
bound
lret
call
add
mov
lock
add
or
test
push
dec
orl
push
dec
ds
push
inc
bound
xchg
test
push
xor
or
push
mov
push
jle
test
cli
jo
dec
mov
fnsave
push
or
xor
jns
mov
jmp
mov
pushl
and
add
movsl
xor
cmpsl
cmp
test
push
add
jbe
jg
lcall
xor
test
mov
js
push
lret
and
xchg
inc
sub
push
add
sbb
mov
cmpsb
pop
outsl
inc
repz
daa
push
cmpsb
jne
xchg
testl
pop
mov
or
pop
jae
xchg
cmp
cmpb
outsb
jp
push
pushl
and
nop
push
adc
sbb
xchg
and
dec
xor
out
clc
scas
xor
jg
pop
std
shl
and
scas
es
fwait
popa
adc
sbb
lcall
add
xor
or
in
cli
fbld
mov
pop
push
je
clc
push
icebp
mov
mov
clc
mov
pop
mov
mov
add
notb
rorb
sar
pop
push
add
xor
mov
sbb
mov
das
pop
jo
xchg
cmp
cmp
adc
arpl
stos
or
lea
mov
daa
mov
mov
sub
outsl
sub
add
hlt
cmp
mov
and
cmc
sub
adc
loop
adc
cmp
or
pop
add
or
push
in
sahf
push
shrb
cli
push
ja
mov
fimull
push
inc
fdivs
adc
lret
ret
fwait
scas
cli
pop
test
add
imul
cld
pop
ja
jmp
add
loop
push
lods
push
or
add
inc
aaa
jno
sar
outsl
pop
adc
pop
adc
jmp
dec
inc
sbb
in
outsb
adc
ret
test
subl
loopne
mov
pop
push
shl
push
pop
jo
jae
ljmp
push
and
pop
fidivrs
dec
pop
loopne
sub
insb
xchg
adc
pop
daa
jle
loope
sahf
mov
mov
inc
pop
js
fcom
jno
jbe
xchg
dec
sbb
pushf
sbb
sbb
jle
adc
push
mov
sbb
mov
hlt
cmc
add
add
sbb
cmp
sbb
es
sub
popf
fsubs
outsl
sub
add
filds
pusha
xchg
shll
mov
fiaddl
mov
jl
mov
lcall
and
xchg
les
adc
mov
loop
imul
push
mov
loop
movsl
cs
ljmp
jle
mov
xchg
cmpsl
lock
add
jmp
imull
imul
add
nop
stc
in
dec
inc
neg
sbb
adc
cltd
das
cwtl
cmpb
aaa
mov
addr16
std
mov
adc
pop
sbbb
cwtl
jbe
dec
outsb
fstps
lcall
js
cltd
add
das
adc
faddl
idivl
cmp
stos
fldcw
lds
add
jl
sahf
repz
lods
push
inc
orb
and
incl
pop
jl
pop
sahf
lcall
inc
in
sar
pushl
push
pop
idivb
adc
fnstsw
imul
add
jno
push
xlat
push
cld
int
cmpsl
lods
cmc
es
aad
push
mov
and
les
movsb
jmp
sti
imul
std
mov
shll
sbb
add
in
push
in
call
add
call
xchg
or
jo
jo
pop
lea
inc
pop
sub
shrl
rcrl
nop
fildll
jmp
and
cmc
sbb
stc
or
sbb
jno
das
pop
or
sbb
adc
xchg
dec
adc
or
xor
arpl
adc
push
mov
in
lret
test
push
sbb
mov
filds
push
inc
push
pusha
cmpsb
orb
dec
cld
or
dec
and
cli
push
sarb
clc
dec
cmp
lret
daa
push
lock
js,pn
nop
cmp
sub
aam
push
fmul
and
adc
xchg
add
fnstcw
jmp
cwtl
bound
push
fs
jae
add
or
add
mov
popa
sarl
mov
inc
push
dec
testl
push
mov
jmp
pushf
jle
rcl
mov
sub
and
and
push
cmp
add
xor
stos
add
xchg
sub
xchg
out
cli
push
mov
cli
pushf
mov
scas
aam
nop
stos
add
shrb
mov
js
mov
cli
orb
xor
push
dec
iret
inc
xor
sbb
lods
sarb
adc
addb
and
inc
cld
andps
and
xchg
xor
or
loope
jecxz
dec
icebp
fsubrl
lds
das
add
jg
mov
mov
faddl
add
jge
mov
dec
pop
adc
mov
hlt
push
cmp
in
in
mov
push
add
les
adc
xchg
sub
lcall
mov
ss
ljmp
push
xchg
mov
xchg
mov
pushf
mov
inc
stos
hlt
mov
mov
fidivrs
add
iret
in
mov
inc
xor
cmp
lcall
mov
pop
jns
movsb
call
mov
push
pop
je
xchg
call
mov
jb
dec
add
pop
dec
cmp
imul
movsb
stos
or
loope
testb
push
inc
lret
jbe
subb
jb
insb
xor
ss
stos
imul
out
push
jp
pop
and
mov
mov
and
aaa
or
pushl
jge
mov
ss
push
xchg
ret
dec
mov
xchg
std
xlat
xlat
es
push
daa
movsb
cs
adc
jl
add
xchg
jge
add
loop
aad
jge
mov
stos
out
js
pop
cli
mov
out
cmp
mov
js
je
ds
push
and
pop
lds
push
ret
adcb
fnstsw
icebp
fcom
push
sub
lahf
cmp
cld
or
xorl
xor
or
ja
cwtl
mov
int3
mov
jbe
stos
outsb
pop
push
insb
pop
hlt
mov
add
pop
lret
dec
call
les
sub
aam
push
divl
and
pop
hlt
call
cltd
in
sbb
adc
inc
mov
lret
xchg
xchg
call
adc
out
add
imul
lea
incl
add
jne
divb
cmp
dec
or
aas
add
push
or
adc
mov
iret
jmp
sub
sub
sub
fbstp
jnp
es
cmp
fiadds
insb
lcall
iret
cmpsb
fucomi
push
cs
or
call
and
jbe
call
rcrl
mov
push
mov
bound
and
jb,pn
hlt
stos
add
dec
outsb
loopne
add
shrb
or
cltd
xor
jb
ss
ds
je
xor
mov
sbb
add
lret
xor
loop
jbe
sub
sbb
jae
inc
xchg
push
push
movsb
mov
adc
sub
mov
sub
filds
push
ret
test
ss
lret
sbb
push
dec
sti
xchg
fs
push
push
daa
push
mov
add
ret
push
in
mov
xor
std
in
sbbb
mov
add
decl
fucomip
pop
add
jmp
inc
sti
add
push
cmpsb
add
xor
fs
cmp
pushl
jmp
nop
add
mov
sahf
dec
aaa
cmp
pop
lret
jecxz
fiadds
pop
add
inc
insl
cmp
jbe
mov
popf
push
mov
push
popf
push
jb
xor
mov
outsl
test
or
xchg
rcrb
pop
inc
sti
mov
cmp
cmp
testb
sub
les
xchg
pop
lock
adc
addr16
adc
xchg
lods
adc
shrl
jbe
dec
shl
xchg
mov
mov
mov
xchg
mov
adc
push
in
outsl
fcompl
movsb
or
xor
push
or
lret
mov
dec
cltd
loope
icebp
icebp
mov
movsl
pop
cmp
call
insb
sub
adc
sbb
add
in
mov
js
mov
cmpsb
adc
add
ss
pushf
cltd
lret
int3
cld
or
xor
decb
adc
pop
add
cltd
xor
stos
adc
inc
out
pusha
nop
adc
sti
jmp
aas
or
stos
or
add
jge
inc
cmpsl
add
aad
mov
mov
lret
outsl
add
loope
sti
call
addl
shrl
and
movsl
jmp
or
call
xchg
icebp
lds
or
mov
test
xchg
add
scas
ljmp
add
and
lods
std
outsl
in
int3
cmc
sub
cmpb
inc
nop
xchg
push
das
fdivr
in
xchg
inc
or
cmp
mov
jle
cwtl
ljmp
je
mov
adc
in
push
call
popa
xchg
jbe
adc
sub
jecxz
pop
sbb
or
or
cwtl
or
pop
pop
push
lock
scas
push
je
shrl
jne
adc
fbstp
loopne
mov
idivb
add
dec
mov
sar
jg
dec
vaesdeclast
cmp
stc
add
std
aaa
inc
adc
inc
cs
or
gs
enter
js
mov
and
xor
and
cmp
mov
scas
push
add
push
lds
mov
jbe
inc
fwait
incl
hlt
insb
sarb
push
outsb
jbe
dec
sbb
cltd
cmpsb
add
mov
pop
test
cmpsl
add
fwait
sahf
or
pop
pop
shlb
fldcw
pop
je
mov
add
hlt
popa
xor
shl
icebp
push
mov
jne
andb
cmpsb
ja
scas
jmp
call
lcall
mov
lcall
dec
out
shr
mov
mov
cmp
jle
jmp
shlb
push
in
mov
pop
dec
fstps
out
fs
push
imul
mov
sub
leave
jne
sub
xchg
fstpt
lock
xchg
lock
lahf
jl
sbb
jbe
xchg
fstl
dec
add
mov
lea
imull
out
pop
add
out
xor
inc
and
push
sti
divb
cmpsb
sub
jle
shrl
and
movsl
loope
test
sub
out
jle
dec
xchg
lods
xor
inc
jb
movb
or
cmpsb
jl
or
dec
call
cld
lds
enter
xchg
mov
cmp
push
les
jmp
mov
add
fbstp
or
add
lcall
add
xorb
sbb
push
das
push
jle
sbb
sub
xchg
mov
clc
stos
sub
fcomps
jl
jmp
xchg
mov
jno
scas
sbb
jle
loop
add
fists
subb
notl
insb
nop
cmpsb
mov
push
add
sub
mov
cld
lea
adc
pop
pop
ret
add
fildl
testl
mov
test
aam
pusha
fsubl
mov
push
cmp
mov
test
sbb
jle
pop
jb
mov
push
inc
push
xor
mov
into
rcrl
sbb
filds
clc
test
add
mov
jns
and
sub
jb
sar
add
test
ss
inc
mov
push
addb
lods
xor
lea
lea
insb
cwtl
aad
mov
fiadds
inc
mov
lea
xchg
sub
call
inc
data16
sti
scas
cwtl
repnz
xor
and
pushf
add
sub
pusha
lock
rcrb
lret
jno
inc
sbb
jle
jge
fistl
sbb
xlat
fs
out
mov
and
jo
lret
stos
or
cwtl
mov
mov
addb
lret
out
push
ret
or
scas
cld
sbb
mov
and
push
mov
lods
scas
push
jnp
test
mov
fadds
push
sub
cmpsb
ret
outsb
mov
or
and
adc
xor
ficoms
fldl
xchg
dec
imul
xor
test
sub
shl
mov
push
sar
push
dec
fistl
jge
sub
mov
imul
popf
sub
out
or
push
movsb
pop
std
mov
cli
pop
insb
iret
jmp
mov
mov
mov
out
cmp
or
bound
mov
push
dec
data16
pop
or
cmp
jbe
jg
lcall
pop
sbb
sti
push
outsb
test
push
es
outsl
jmp
cmpsb
xor
aam
in
in
clc
sahf
loopne
aad
pop
lock
icebp
adc
lods
andb
aas
push
scas
or
scas
or
and
pop
push
mov
mov
dec
inc
insl
repnz
lock
shrl
inc
popa
subb
pushl
cld
mov
gs
mov
sub
fstpl
ret
mov
pop
jge
cmp
scas
mov
mov
lock
shrb
ss
pop
mov
adc
xchg
jmp
mov
adc
jg
loope
or
aaa
mov
dec
mov
decl
icebp
ret
sahf
loop
sub
xchg
test
inc
bound
add
dec
daa
dec
pop
xor
sbb
xor
xchg
push
les
jmp
adc
cmpsl
adc
fsubr
push
add
mov
sbb
mov
mov
mov
mov
adc
and
shll
stos
clc
decl
je
push
decl
stos
repz
pop
jl
sbb
pushf
lock
jno
or
xchg
and
cmc
or
fidivrs
inc
push
test
sub
fisubrs
mov
xor
mov
fldl
push
out
pop
sbb
mov
mov
push
jnp
call
or
sbb
adc
clc
add
outsb
sub
imul
mov
adc
mov
cmc
ja
inc
insb
mov
jnp
inc
out
dec
flds
sahf
mov
dec
mull
outsb
ljmp
add
imul
jle
add
sbb
mov
add
into
pusha
mov
push
pop
into
sbb
out
inc
mov
mov
adc
dec
cmp
mov
and
jge
test
jnp
es
call
sub
test
hlt
fdivl
pop
mov
jno
ffreep
out
sub
add
push
mov
lret
aaa
rcll
inc
cli
adc
sub
xchg
imul
lock
sub
jno
sub
cwtl
call
and
mov
or
sub
sub
scas
cli
cmp
mov
or
and
vmread
scas
jbe
push
add
es
arpl
repz
das
fldcw
xchg
js
cs
inc
sar
sub
mov
jl
int
int3
shrl
mov
sbb
cld
add
sbb
dec
or
and
sub
mov
xchg
sbb
scas
test
arpl
or
dec
lods
xchg
ss
shlb
fmuls
add
add
hlt
lcall
xchg
push
mov
clc
mov
mov
push
ds
xor
cld
into
jmp
hlt
cmpsb
mov
jnp
lds
cmp
lock
or
mov
mov
xlat
push
xchg
sbb
fisttpl
adc
out
arpl
mov
rcr
adc
aaa
cld
int
dec
add
jno
nop
mov
loopne
sbb
xor
xor
adc
mov
add
inc
mov
cli
mov
xchg
xor
repnz
cli
nop
loopne
ljmp
push
dec
test
out
push
or
xlat
or
push
add
or
xchg
xchg
add
sbb
bound
push
and
adc
pop
rorl
sub
rorl
fucom
outsl
push
cmc
mov
shlb
orl
mov
lcall
add
lahf
imulb
call
pop
icebp
in
pop
add
dec
pop
xchg
loope
jnp
mov
cli
cmpsb
inc
fldt
fisttpll
int
stos
jmp
pusha
out
movsl
cmp
add
in
cs
lock
mov
or
clc
push
pop
repnz
mov
push
adc
mov
jp
mov
sbb
xor
pop
inc
adc
xlat
loope
rcrb
mov
cld
cli
sbb
sub
lock
or
mov
fmul
adc
pushl
add
cmpsl
mov
ljmp
loope
mov
filds
mov
outsb
movsb
cmpb
les
or
outsl
add
jo
out
push
mov
rcl
inc
xor
xor
clc
stos
xor
xorb
mov
clc
pop
mov
js
or
in
sbb
scas
mov
add
jne
push
testl
pop
fsts
sbb
push
loopne
and
roll
sub
sahf
jmp
sbb
mov
bound
jg
bound
and
imul
adc
push
lret
in
pop
lea
mov
xchg
movsb
jnp
sbb
pop
mov
fs
cwtl
stos
je
scas
cmp
je
and
in
sub
pop
gs
loopne
enter
jmp
push
mov
das
push
add
push
mov
xor
add
mov
mov
or
loopne
mov
inc
push
jmp
mulb
test
fists
mov
add
xchg
mov
int
jecxz
adc
pop
and
fwait
mov
mov
test
push
cmp
out
psubq
dec
imul
adc
pop
js
sbb
pushl
popa
lock
dec
fidivs
shl
dec
adc
fnstcw
loope
adc
and
mov
mov
jb
inc
clc
mov
mov
push
pop
mov
xchg
fnstenv
xchg
fbstp
inc
mov
movsl
or
pop
xor
push
shl
pop
add
and
ss
ds
adc
add
jg
fildl
sbbb
mov
incl
out
or
stos
inc
fwait
dec
in
cwtl
cwtl
inc
addb
or
mov
sbb
push
test
fidivrs
jecxz
cli
test
imul
test
cli
jg
sbb
dec
hlt
or
cmpb
push
popf
fidivs
stc
or
testl
ret
push
fs
lcall
bnd
loopne
mov
mov
sub
cs
cltd
mov
popa
subb
fimuls
nop
in
scas
inc
push
push
mov
lods
add
push
mov
out
or
mov
inc
xchg
or
cmc
add
sarl
jl
loop
and
call
push
imul
enter
push
arpl
add
sahf
adc
int
xchg
add
sbb
cld
and
stc
sub
fwait
into
movsl
rorb
in
push
fistpll
or
mov
inc
mov
movsb
out
inc
ret
aaa
add
call
or
inc
stc
or
hlt
mov
xchg
dec
push
aas
jg
idiv
scas
ds
cmpb
mov
dec
add
xor
add
das
pop
sub
int3
or
in
clc
push
push
fcomps
inc
pop
add
rcrb
cwtl
lea
mov
pop
inc
mov
add
cmp
movl
loopne
sbb
imul
cmpb
mov
push
mov
incb
data16
mov
xor
int
rolb
or
clc
call
movsb
xchg
xor
cmp
mov
push
jg
add
add
mov
in
cltd
xor
add
add
xchg
lods
inc
sti
xchg
sub
mov
in
in
lret
mov
push
ret
jp
idiv
cli
lock
daa
repnz
push
loope
jle
outsb
into
lret
mov
les
test
rorb
cld
inc
fiaddl
inc
mov
push
mov
adc
push
nop
mov
pop
adc
pop
in
cmp
scas
jo
ss
dec
test
and
xor
movswl
jno
inc
jb
mov
cwtl
xor
inc
hlt
fucomi
adc
and
roll
fidivrs
punpckhdq
adc
sub
ss
mov
lds
addr16
std
popf
clc
jp
mov
sub
jl
xchg
xor
lcall
xor
ja
mov
js
pop
outsl
das
mov
mov
scas
mov
xor
lods
dec
xor
loopne
fildl
jb
lret
sub
add
cmc
add
lods
loopne
cmp
xor
xchg
dec
push
lock
orb
push
in
inc
pusha
clc
int
ja
push
daa
addl
lock
ljmp
xor
add
jno
jne
add
adc
ret
testl
stos
push
mov
call
outsl
add
pop
and
inc
enter
gs
or
lcall
test
sarb
and
xchg
or
xor
add
insb
sub
mov
in
push
dec
sahf
data16
or
pushf
mov
add
out
mov
inc
idivb
outsb
fcoms
fiaddl
out
pop
inc
sbb
lret
xor
or
or
cwtl
repnz
cli
enter
clc
jg
les
mov
lea
xchg
out
or
xchg
mov
and
cmp
add
push
insb
movsb
mov
sub
sahf
push
sbb
lgs
jbe
mov
mov
inc
or
push
and
cs
xchg
lods
xor
cmp
pusha
mov
dec
stos
testl
lcall
lods
mov
fsubrl
mov
fcoml
aaa
or
loop
dec
add
into
movsb
je
and
xor
jo
outsl
push
jle
sub
cld
mov
mov
fmull
cmp
ret
cmp
aaa
adc
sbb
outsb
aaa
xchg
push
push
add
mov
lods
fwait
test
insl
js
daa
les
adc
adc
add
sbb
xor
sub
add
mov
add
xor
scas
adcb
leave
xor
stos
jle
cwtl
js
inc
insb
dec
stos
repnz
push
lcall
push
int
arpl
pushf
aam
pushf
inc
cmp
sbb
mov
push
dec
xchg
rolb
les
jo
iret
sbb
aas
push
mov
ja
jbe
or
std
mov
out
mov
mov
sar
es
sbb
fs
shlb
test
push
out
aad
test
or
xchg
ret
lock
loopne
in
mov
outsb
pop
std
and
or
sub
adc
out
pusha
stc
pop
jo
clc
pop
dec
add
jo
cmp
call
xchg
jle
scas
test
into
mov
fists
scas
sbbb
stos
cmp
pop
lock
in
sbbl
adc
sti
ja
std
or
xchg
test
in
xchg
pop
xchg
add
pop
inc
sbb
aaa
push
mov
mov
dec
in
pusha
inc
mov
pop
test
sarl
push
cs
push
mov
outsl
fsubrs
les
leave
jl
popf
jmp
sub
shlb
pop
push
push
mov
adc
dec
sub
aaa
loope
push
clc
adc
movsb
and
inc
jg
roll
xchg
sub
lock
lods
or
or
and
xor
jno
rolb
sub
add
cmp
subb
imul
pop
mov
add
out
nop
jle
fimuls
xor
xchg
adc
push
incb
dec
and
cmp
fcmovnbe
push
pop
aad
in
cmp
add
mov
cltd
xchg
nop
je
iret
pop
cmpsb
add
lret
subl
aad
imul
jp
in
sbb
jae
sub
jnp
les
rolb
cwtl
insl
clc
push
mov
push
xchg
push
ficomps
imul
xchg
sbb
mov
xor
and
in
and
test
outsb
dec
fbstp
jle
loope
fsubr
insl
les
lock
sbb
pop
jecxz
xchg
add
test
xchg
push
adc
test
jo
or
cld
push
addb
shl
xor
out
iret
jle
jmp
mov
mov
and
in
lock
addl
pop
xor
lods
push
ja
xchg
mov
addr16
xchg
and
enter
decb
ror
mov
push
sub
push
add
movsb
add
movsb
or
push
and
xchg
push
adc
push
loope
inc
xchg
ss
and
and
dec
cmpb
js
ja
mov
or
mov
push
inc
adc
loop
jo
pusha
xor
push
adc
dec
cmp
push
push
movsb
jp
dec
call
jne
fistpll
pop
inc
mov
and
lods
out
inc
fucom
out
mov
mov
mov
dec
shlb
movsb
in
xchg
mov
pop
cmp
jo
xor
add
les
mov
cmp
mov
sahf
test
add
imull
and
fldenv
inc
adc
movsb
inc
fisubrl
lds
mov
pushf
sti
push
xor
xor
sub
mov
ja
into
mov
jp
xchg
popf
rol
ret
cmp
push
jmp
jb
inc
push
jp
jmp
jmp
icebp
jmp
call
pop
out
out
clc
cmp
sbb
mov
gs
inc
push
loopne
adc
xchg
cmp
inc
and
sbb
mov
or
jp
push
fs
jg
inc
incl
push
in
xchg
test
movsl
push
dec
add
std
or
call
cmp
pop
bound
aas
pop
out
adc
ss
xchg
pop
adc
lret
push
mov
cs
je
fucomi
lods
add
je
outsl
js
in
inc
mov
add
pop
cmp
mov
dec
jg
icebp
call
fistps
loopne
mov
mov
int
or
inc
xchg
cmp
or
shlb
test
jno
xor
lret
lds
sub
enter
push
mov
mov
jg
ljmp
mov
xchg
lahf
fs
icebp
push
mov
add
dec
sub
insb
call
jo
popa
out
lock
fadd
jge
outsl
mov
ljmp
or
mov
jg
lret
mov
cld
stos
mov
repz
add
adc
mov
push
push
inc
add
call
xchg
ljmp
mov
push
movsl
shrl
jne
ficoml
nop
add
jmp
ret
cmpl
pop
mov
ja
adc
cli
dec
cmp
movsl
lahf
dec
or
push
fcomps
pop
sbb
or
push
jbe
sub
mov
mov
inc
and
mov
adc
lret
xlat
jae
add
inc
stos
cmpsb
or
mov
ljmp
pop
inc
xchg
enter
or
jo
je
xchg
mov
cmpsb
inc
clc
dec
call
leave
mov
jnp
push
call
push
cmpsb
pop
ljmp
in
add
adcl
outsl
hlt
aas
dec
jo
pop
out
andb
aad
dec
mov
je
aad
adc
and
or
fwait
mov
and
popf
cmp
and
out
stos
call
or
fisubrs
pmaxub
jg
sar
filds
and
ja
les
cli
lahf
mov
call
popa
add
pop
loopne
push
shll
enter
jge
cmp
inc
jo
sbb
jbe
adc
pop
mov
jle
and
or
push
xchg
roll
jg
or
and
test
stos
pop
je
push
inc
ds
adc
inc
je
add
jb
scas
or
mov
test
cmc
mov
pop
cltd
fwait
dec
outsl
xchg
ljmp
push
repnz
outsl
jp
cmpsb
bound
into
dec
and
xchg
adc
fildll
add
stos
xchg
bound
push
mov
xchg
mov
clc
fcompl
add
decl
mov
rcll
out
bound
sub
ja
cli
outsl
loope
sbb
pusha
cld
mov
xor
add
sbb
mov
call
xchg
mov
mov
and
fstpl
int
push
inc
les
sarb
jmp
mov
push
jg
jo
mov
add
sahf
xchg
sbb
stc
or
push
xchg
out
inc
inc
mov
stos
lcall
push
xchg
rcrb
into
mov
cmp
xchg
cmpsl
and
mov
cmp
loop
call
pop
aas
inc
cmp
lods
jns
pop
mov
imul
ljmp
mov
aas
notl
lret
fildll
jmp
push
fildll
dec
in
dec
loopne
mov
orl
out
dec
mov
dec
pop
xchg
cmc
mov
jnp
or
cld
aaa
add
jns
shl
lods
xor
mov
or
mov
jb
xchg
or
mov
je
flds
pop
xor
add
mov
ja
sahf
xor
je
xchg
inc
faddl
cmc
pusha
insb
or
push
adc
push
movl
mov
cmp
cmp
pop
adcb
out
mov
cmpsb
inc
test
scas
clc
cmp
mov
data16
pop
decb
mov
rorb
fsubrs
add
js
mov
push
ljmp
mov
pushf
xor
into
xchg
int3
xchg
jbe
data16
cmp
xchg
pop
jl
and
mov
ljmp
add
call
add
call
xor
and
cmp
scas
pop
loope
add
pop
das
sahf
sub
add
test
cmp
cmp
jbe
dec
es
fs
lods
dec
fsubs
rolb
dec
mov
push
cmp
out
mov
mov
push
cmp
inc
sub
test
sti
cmp
pop
ss
sti
test
inc
add
bound
je
mov
inc
cmp
pop
and
and
jne
push
cld
out
mov
movsl
mov
xor
rcrb
sbb
cmpsb
lods
rclb
out
xchg
xchg
ret
mov
lret
inc
cmp
xor
outsl
addr16
ret
decl
push
push
pop
mov
mov
cmp
loop
sub
push
jge
les
inc
dec
push
mov
mov
pop
lods
push
jns
add
fxch
pushf
sbb
mov
jge
mov
and
sub
insl
pop
fnstenv
adc
ds
je
daa
test
lret
dec
out
sub
push
ja
push
sarl
pop
popw
adc
flds
and
xor
inc
pop
loopne
adc
aam
jae
bound
ret
push
inc
negb
mov
repnz
outsl
mov
call
cmpsl
lock
mov
lods
insl
xor
test
imulb
sbb
jmp
in
clc
je
cmc
cmp
inc
and
lock
jle
lds
cmp
xchg
sub
js
mov
scas
jl
cld
inc
pop
cmp
mov
loope
das
ret
negl
mov
pop
ret
xor
cmp
add
pop
es
xorb
cmp
fisubl
inc
roll
aam
push
sar
lret
and
adc
cwtl
pop
pushf
repz
outsb
pop
js
imul
add
loope
mov
pop
fimuls
cmp
outsl
mov
aam
fwait
imul
jecxz
test
ds
mov
lods
aaa
das
in
out
add
popf
ljmp
outsl
out
jp
cmp
mov
lahf
fdiv
adc
mov
jmp
mov
shl
xchg
xor
lcall
popa
emms
gs
ret
clc
inc
sub
loop
mov
mov
enter
add
pop
xor
fisttpll
imul
adc
ret
add
cmp
mov
mov
push
inc
cmp
or
sub
test
sahf
cmp
notb
cli
test
lods
xor
or
cwtl
cmpb
sbb
aam
push
mov
lods
inc
cmc
cmpsl
mov
xor
add
or
cmp
sahf
mov
add
lods
cli
cmp
aas
arpl
mov
or
push
aaa
mov
sub
lock
push
fistps
xor
dec
or
test
add
mov
push
dec
into
add
cs
jp
inc
pop
add
mov
or
stos
jge
mov
je
js
and
add
mov
stos
jmp
xchg
xchg
xor
or
adc
pop
jle
inc
jmp
mov
stos
fbld
sub
mov
push
shll
imul
add
pop
test
jg
fbstp
lods
pop
push
aas
adc
rolb
xor
jp
xchg
outsb
cmc
push
mov
cmp
dec
cmp
fs
leave
test
test
mov
dec
ljmp
push
jb
sbb
shl
sbb
addr16
cld
shrl
and
cmp
arpl
cmc
xchg
xchg
add
mov
lret
shl
out
mov
adcl
jnp
xor
out
push
add
lods
cli
jl
dec
icebp
xchg
jb
mov
pop
jo
xchg
mov
ret
jl
cld
int3
inc
scas
clc
aam
bound
mov
stos
add
sbb
or
lods
add
pusha
adcl
cld
pop
lret
inc
nop
les
cli
or
pop
into
push
std
pop
faddl
ret
pusha
punpckhbw
hlt
ss
test
pop
inc
fdivl
stos
jne
addr16
rcll
cmc
jg
sarl
push
inc
jecxz
fisttpll
jge
bound
test
cmp
std
cld
test
push
or
mov
jge
xchg
push
xchg
xchg
outsb
fisttps
cmp
cli
jmp
dec
jg
ss
mov
push
pushl
loop
aam
sub
test
pusha
daa
stos
cmc
cli
mov
and
lret
ja
mov
repz
jge
add
mov
fisttpl
les
ljmp
mov
push
xchg
sub
dec
gs
sub
add
inc
xor
addr16
sbb
xor
xchg
cmp
xor
clc
fistpll
or
jno
add
pushf
lock
cmp
fwait
cli
fwait
or
cs
pop
cmp
enter
mov
ljmp
sbb
or
jl
push
jmp
rcll
incb
pop
mov
insb
mov
mov
pop
pop
in
sbbl
jle
outsl
jne
cld
push
mov
sub
or
lcall
dec
inc
pop
mov
sub
push
pop
cmp
lock
sub
ud0
in
cmp
lods
pop
ja
scas
dec
cltd
lcall
rcr
ljmp
les
adc
add
testb
xor
sbb
pusha
mov
cmp
push
sub
mov
sarl
cli
xor
cs
insb
shl
jnp
pop
and
inc
ds
mov
xchg
imul
out
cmc
aad
or
pusha
pushf
sbb
xchg
xchg
jle
cmc
jg
jg
add
movl
fnstcw
or
mov
cmp
jg
mov
mov
pusha
adc
sbb
outsl
js
xchg
cmp
aam
imul
orb
shl
lcall
pop
sub
pushf
cmp
cs
movsl
cmpsb
ret
mov
inc
mov
mov
mov
and
lods
cli
jg
fdivs
lcall
sub
cmpsb
mov
mov
cmp
data16
lcall
add
and
jbe
imulb
jo
test
and
push
aaa
mov
sub
sub
and
scas
clc
sub
add
imul
stos
mov
mov
push
cwtl
jbe
das
clc
mov
cwtl
xor
mov
jb
xor
sub
int
sbb
fsubrs
pop
andl
nop
leave
emms
pop
mov
mov
mov
aad
cmpsb
add
or
scas
lods
jge
sub
jmp
mov
mov
std
pop
ret
and
xor
xor
fildll
pop
ja
sub
pusha
fs
mov
test
jb
push
stos
mov
or
out
aaa
lods
mov
fisubrl
push
shrb
sbb
mov
push
xor
add
in
adc
pushl
je
insl
fcomi
pop
scas
mov
mov
and
clc
call
or
jl
push
cmc
add
add
imul
rclb
and
adc
in
loop
es
mov
add
sub
mov
lods
jg
and
pop
cmpl
and
xlat
stos
cmp
mov
push
xor
mov
pop
lock
aaa
loope
ret
cmp
or
xchg
and
or
movl
pop
mov
stos
pcmpgtw
pop
clc
sub
repnz
mul
nop
push
cli
inc
or
push
nop
add
int3
inc
jne
scas
inc
aaa
loope
in
es
xlat
mov
cmc
jmp
jl
sti
lock
add
pop
movsl
fbstp
dec
or
and
cwtl
mov
bound
jb
pop
mov
inc
jle
pushf
lods
mov
jbe
push
mov
push
mov
cmpb
inc
dec
pop
ret
dec
fimuls
ljmp
sub
cs
adc
xchg
insl
push
ss
xorb
je
ficomps
in
inc
aas
loopne
stos
sub
daa
into
sub
dec
loope
add
dec
adcb
sti
mov
xor
sbb
cs
pop
popa
ret
pop
push
test
incl
insb
adc
sbb
cltd
lea
or
push
fwait
push
fsubl
sub
ljmp
cmpsb
push
sub
outsl
xor
inc
xor
add
mov
sub
pop
enter
xor
and
and
mov
dec
cmp
into
fwait
mov
push
dec
jmp
dec
push
aam
mov
fistpll
sar
hlt
sub
inc
fdiv
push
js
test
sbb
stos
mov
inc
rcrb
lret
cmp
fbstp
fwait
mov
dec
aam
pusha
jge
insl
mov
dec
cltd
fwait
lret
sub
mov
lock
mov
lods
push
ss
mov
fidivrl
mov
es
mov
dec
jns
les
xor
insb
into
pop
loop
mov
jno
dec
xor
int3
pop
adc
and
loope
icebp
test
or
sarl
outsb
mov
jecxz
mov
lock
jg
mov
inc
je
rorb
ja
int
fldcw
mov
and
adc
movsb
pop
mov
sbb
jl
cli
decl
pop
sub
mov
dec
addb
push
ss
xchg
test
test
xchg
pop
in
or
imul
sbb
fadd
add
add
add
cmp
inc
mov
imul
cld
inc
hlt
adc
test
push
scas
aam
mov
popa
pop
filds
inc
call
lods
arpl
iret
clc
cli
xchg
mov
dec
lock
sub
jo
mov
add
mov
daa
jnp
js
test
inc
inc
mov
leave
sbb
mov
sub
shl
jns
mov
sub
pop
mov
in
lea
adc
in
jg
adc
call
repnz
cmp
mov
sbb
push
pusha
test
ret
call
fs
add
mov
or
adc
movsb
adc
push
fiadds
hlt
test
add
lcall
sbb
popa
jb
add
xor
lret
fists
jne
cmp
out
inc
out
dec
adc
decb
sahf
push
fs
iret
or
and
cmp
call
xchg
bound
push
test
dec
js
or
sbb
push
sti
daa
mov
mov
add
mov
mov
ljmp
fistpll
sarl
cmpsb
lock
push
jns
es
mov
les
out
rcll
aad
pop
sbb
int
inc
mov
lock
cli
daa
xor
push
sbb
dec
sub
loope
adc
mov
aam
cld
or
jge
adc
imul
int
ret
xor
imul
sbb
push
outsw
jecxz
lods
ljmp
push
jle
stos
mov
addb
jg
mov
loopne
pop
ror
out
ds
push
jle
jl
inc
jne
jae
pusha
clc
cmp
cmp
dec
mov
sti
cmpsb
mov
lret
icebp
sub
mov
jnp
lret
loope
jl
add
cmp
jmp
cmp
pop
mov
add
sar
cmp
jg
insb
roll
inc
mov
add
mov
mov
add
or
fcompl
pop
int
fists
pushf
outsb
cmp
test
cwtl
push
add
jo
inc
hlt
xchg
push
or
clc
pop
jecxz
and
push
out
shll
jne
in
sub
ss
pop
adc
dec
inc
cltd
inc
mov
sar
arpl
or
cmp
call
dec
ret
int3
adc
add
jnp
pop
xchg
lcall
fdivp
add
push
mov
popa
xlat
decl
mov
test
mov
mov
cmp
or
or
jg
pop
xor
lahf
dec
add
sahf
insl
push
sbb
mov
iret
jo
mov
outsl
mov
jg
or
sub
sub
sbb
xor
loope
jmp
cld
jp
push
mov
adc
test
rcll
and
lock
inc
iret
aad
decl
jb
xchg
mov
nop
pop
dec
push
xchg
pop
shr
pop
dec
xchg
jo
cmc
pushf
inc
into
lods
ds
insl
xor
mov
or
sar
sub
dec
mov
icebp
xor
jae
xor
push
mov
ljmp
add
mov
jmp
jecxz
jbe
xlat
pop
mov
push
or
mov
fimuls
fidivrl
inc
add
cmp
test
and
add
push
lock
adc
ffreep
scas
iret
dec
sub
push
dec
add
rcrb
jl
xor
popa
jno
mov
data16
movsl
cmp
lret
movsb
loopne
lock
clc
inc
cmpsl
add
pop
add
sbb
call
mov
and
int3
cmp
xor
test
loopne
and
les
adc
xchg
cmpsb
xchg
in
icebp
in
jle
iret
testb
outsb
int3
call
test
sub
xchg
das
jmp
mov
or
mov
xor
sub
inc
add
js
test
aaa
xor
push
stos
call
mov
cmpsb
mov
add
loope
mov
sbb
add
adc
lock
adc
inc
push
ja
mov
push
xchg
mov
je
xchg
outsl
sbb
pop
aam
into
add
mov
pop
xor
lahf
ret
cmp
lea
mov
push
lahf
into
mov
add
push
mov
pop
decl
and
and
add
ja
and
cmp
or
stos
push
xchg
das
mov
add
jnp
sbb
inc
jmp
lds
fsubrl
mov
les
inc
fwait
dec
and
lods
addb
lahf
cli
and
or
or
lcall
pop
jmp
jmp
add
loop
lock
shll
or
adc
cmpl
roll
out
mov
inc
aaa
add
ljmp
sbb
sub
enter
ja
imul
stos
push
loope
ror
pop
movsb
xor
cmovg
jl
test
outsl
fdiv
lret
xchg
mov
xor
add
enter
dec
add
iret
jo
aaa
mov
inc
popf
mov
popa
jg
lock
jle
and
movb
and
rorl
sahf
jp
inc
pop
mov
mov
inc
mov
jecxz
inc
xlat
push
adc
mov
inc
mov
dec
outsb
add
add
cld
mov
or
jecxz
cmpsb
and
js
mov
dec
es
push
insl
test
or
dec
jae
mov
test
push
mov
leave
in
repnz
daa
std
adc
or
sub
mov
cmc
jnp
mov
sub
aaa
fcomip
xchg
sahf
loope
pop
dec
sahf
lahf
add
ret
mov
mov
cmpl
push
pop
xor
test
pop
inc
cld
fwait
inc
xchg
and
insl
cs
enter
lcall
lea
icebp
cmp
enter
cli
lock
sbb
jl
sbb
dec
or
sub
out
test
xor
add
cmpsb
pop
push
mov
or
loopne
xor
in
cmp
push
xor
push
adc
pushf
sbb
test
xor
push
cmp
add
fmull
sbb
add
ret
jge
clc
outsl
mov
js
adc
test
adc
sarl
add
lock
inc
cld
or
lods
clc
sbb
xchg
add
push
sbb
lods
in
push
cli
or
mov
sbb
fwait
add
sbb
test
pop
mov
sti
xchg
cwtl
cmp
dec
mov
roll
outsl
push
xor
mov
stc
push
nop
imul
test
push
std
inc
sbb
mov
pop
fsubl
pop
outsb
std
outsb
repz
incl
ret
dec
cmp
jmp
xchg
sar
mov
mov
mov
and
push
lret
sbb
lods
add
scas
cli
mov
and
icebp
subb
cmp
and
outsb
pop
add
cmp
outsl
scas
and
ds
cmc
repz
xor
mulb
shr
cli
int3
into
ret
fwait
hlt
mov
shr
scas
jp
mov
cmp
push
outsl
test
roll
push
fs
sbb
call
sarl
inc
rsm
dec
push
mov
and
pop
cld
pop
dec
in
ret
sub
cwtl
nop
jge
cmp
movl
jmp
shrb
jo
jl
cmp
inc
mov
loopne
aaa
in
inc
imul
add
or
lret
jg
hlt
jl
aam
dec
rorb
pop
mov
sbb
out
pusha
fdiv
mov
pusha
sub
cwtl
push
ret
xchg
test
mov
in
xchg
jbe
call
push
lock
and
push
jb
dec
jp
jl
pop
fsubrs
cmpsb
adc
pop
push
mov
shrb
out
sbb
push
sti
fld
or
int
mov
lcall
inc
fsubrs
push
mov
adc
sahf
xchg
stos
leave
aaa
dec
sub
es
jmp
mov
les
ljmp
pusha
push
add
sub
shrb
pop
jbe
cli
sbb
mov
hlt
sbb
sarb
mov
inc
inc
ret
pusha
inc
pop
xor
push
test
sarb
out
repnz
push
jmp
fistps
adc
jae
pop
fcomi
test
push
xor
pop
pop
lcall
pop
xchg
jo
mov
cs
mov
push
sbb
jmp
xor
or
sub
sub
add
mov
pop
loop
sbb
mov
mov
add
jmp
ds
mov
add
inc
xor
lock
cld
in
outsl
and
or
loop
sbb
push
lods
mov
cmpsb
push
fiadds
add
push
push
push
cmp
out
sub
loopne
sub
test
add
sub
decb
pop
ret
dec
dec
shlb
dec
mulb
mov
loop
push
push
adc
mov
pop
lahf
pop
dec
cli
adc
fwait
cmp
aaa
adc
xor
mov
aas
cmp
psubw
shrb
fldcw
into
out
adc
add
fwait
pushl
fwait
xor
in
adc
call
pop
std
jo
out
dec
push
sub
push
sbb
fstps
mov
inc
sub
pusha
es
add
sti
shrb
incb
dec
and
js
mov
mov
fwait
jbe
fdivs
adc
sub
rol
inc
and
adcb
push
adc
xchg
mov
and
push
mov
clc
jp
lret
mov
push
push
rolb
roll
aaa
pop
pop
mov
ljmp
sbbl
add
orb
push
test
enter
jg
add
cmpsl
mov
testb
and
add
jbe
pop
sbb
decl
imul
cwtl
sub
movsl
popf
repnz
sar
xlat
push
addb
push
pushl
dec
add
popf
jns
pop
push
pop
pop
insb
inc
cmp
add
and
sbb
aam
push
hlt
push
fdivl
loop
mov
and
outsl
push
mov
insb
stc
call
hlt
xchg
fisubrl
inc
xor
stos
add
mov
adc
mov
dec
sub
pop
andb
mov
stc
jno
mov
and
cmc
in
jg
pop
xchg
lods
jmp
push
ret
loop
cmp
mov
out
aam
cwtl
mov
std
js
sbb
xchg
rcrl
leave
lcall
push
push
push
dec
xchg
and
fsts
mov
hlt
adcb
push
ljmp
das
cli
das
pop
enter
lods
call
push
fadds
adc
add
adc
inc
shrl
pop
scas
test
or
hlt
adc
repz
nop
pop
xchg
or
mov
push
enter
and
ja
mov
or
nop
cld
das
je
mov
inc
rol
sahf
lahf
add
loopne
ljmp
push
inc
sarl
cwtl
movntps
lret
jnp
xor
pop
cmpl
fbstp
cmp
mov
cmp
incl
jno
outsl
pop
or
mov
sub
in
inc
sar
jg
push
ss
call
cmp
sub
and
mov
pop
ljmp
pop
in
setbe
insb
mov
xlat
mov
gs
sbb
imul
mov
dec
jmp
xchg
mov
xor
roll
rolb
jne
mov
add
dec
cmp
jne
call
repz
aam
insb
sub
add
lods
sub
inc
mov
jge
rcrl
mov
test
movsl
sbb
xchg
lcall
xor
dec
push
fsubrl
jno
push
test
push
sarl
lcall
imul
daa
adc
inc
outsb
sub
imul
lret
add
daa
xchg
add
adc
sti
es
mov
lock
add
push
call
lret
adc
loope
sub
jmp
and
sub
cs
fwait
rcrl
into
xchg
add
dec
cld
das
push
ds
push
ss
cltd
rolb
add
sub
jl
xchg
xor
dec
mov
jge
lret
jg
subb
outsl
jo
fucomip
cwtl
shll
add
pop
aam
or
mov
push
imul
daa
mov
jno
sbb
in
outsb
adc
jg
scas
xor
inc
or
fnsave
dec
mov
icebp
incl
mov
add
xchg
and
push
fadds
je
mov
pop
dec
dec
pushf
sub
fstpt
mov
jb
out
add
add
add
fbld
sub
sahf
push
mov
jo
pop
pop
ja
lahf
gs
jle
push
rolb
add
cmpsb
fcmovnb
into
mov
lock
mov
sti
bound
data16
xor
call
cmc
sbb
xor
fs
mov
and
adc
mov
add
jo
add
movsb
in
mov
incl
fstpt
and
ss
adc
loop
rolb
mov
ret
add
add
test
out
mov
in
xor
aaa
loop
push
mov
arpl
into
out
jbe
pop
inc
bound
push
sub
and
mov
out
adc
js
push
insl
aas
loop
add
jp
push
outsl
shl
lds
div
xchg
sub
push
icebp
cmp
mov
mov
scas
pop
loopne
leave
test
dec
sarl
cmp
xor
cmpsl
sub
mov
lock
int3
sub
test
jmp
mov
leave
lret
adc
pop
inc
ret
or
shl
pusha
mov
adc
mov
and
and
dec
lret
addr16
xchg
shlw
lock
xor
fs
mov
pusha
push
fstp
sti
mov
xchg
ret
add
inc
or
andl
aad
fsubl
leave
mov
pop
dec
fidivrs
outsl
jbe
push
xchg
out
stos
mov
xchg
push
sbb
in
outsb
cld
incb
loop
cmp
es
es
or
ja
incl
jg
and
push
ljmp
pop
xchg
and
test
scas
popf
rcrl
jmp
and
add
jae
out
cmc
xor
pop
das
clc
lock
push
shrb
or
cmpsl
data16
xor
mov
lret
jne
data16
xlat
out
decl
lods
add
jb
js
jae
lods
shll
sbb
inc
add
hlt
sub
imul
scas
jo
fsubrs
mov
fldl
xchg
lcall
jecxz
sub
pop
cwtl
repz
sub
ds
mov
call
subb
add
add
cmp
loope
xlat
mov
xchg
rclb
cmp
mulb
mov
testb
rcl
bound
sbb
enter
push
dec
int3
or
and
mov
aaa
sbb
into
jae
dec
pusha
inc
lcall
shrl
ret
jecxz
xchg
stc
lods
add
decl
mov
mov
xor
pushf
aam
add
iret
dec
xor
std
adc
mov
call
jb
mov
push
inc
cli
in
arpl
data16
sarb
sub
or
xchg
xor
pop
lods
js
pop
cli
mov
pop
cli
hlt
hlt
adc
mov
stos
sbb
clc
sbb
pop
push
push
inc
jne
pop
subb
cld
aaa
sbb
dec
das
jl
hlt
xor
sub
mov
add
dec
jnp
cmp
fisttps
hlt
cmp
xchg
les
outsl
mov
push
lcall
rolb
loopne
xchg
jne
jbe
nop
xchg
adc
pop
add
test
outsb
loop
cmpsb
mov
out
dec
jo
aam
cld
aas
push
cmp
fidivl
cmpsl
ret
sbb
pop
fstp
add
sahf
push
stos
std
add
mov
inc
call
sbb
xor
ret
sub
jge
lcall
inc
call
addr16
int
in
sbb
pop
and
loop
xor
xchg
xchg
rcrb
cmc
push
jne
and
fdivr
stos
incl
add
ss
daa
add
lds
and
inc
cld
adc
sbb
insl
push
cmp
mulb
fsubrl
in
inc
leave
js
sbb
rcrb
aas
rcrl
dec
mov
cmc
xor
fadds
aas
aam
dec
jbe
gs
push
test
test
or
jg
adc
mov
pop
sub
out
fldl
pop
lret
push
cmp
stos
hlt
fcmovne
fistpl
pop
xor
nop
sbb
mov
sub
pusha
loop
js
jg
xor
xchg
jns
pop
adc
sub
xchg
in
ret
sbb
cmpb
adc
dec
std
push
out
cmp
mov
insb
adc
jno
nop
cwtl
mov
add
and
in
mov
cmp
jns
bound
icebp
cmpsl
shr
orb
add
mov
xor
insb
mov
repz
fimuls
cld
push
jge
fnstenv
jle
scas
jb
cmc
fcmovnu
enter
arpl
adc
and
mov
idivl
xorb
adc
mov
pop
int3
pop
xor
sub
push
call
mov
mov
movsb
mov
stos
decb
jo
push
jb
push
jae
cmp
fcompl
sub
pusha
and
shrl
leave
pushf
call
xlat
mov
mov
loope
mov
push
popl
xchg
adc
addl
sahf
lahf
and
out
gs
jb
push
dec
push
in
sub
jp
add
fcmovbe
pop
jne
sub
sbb
sbb
adc
cmpb
fcomip
jno
jnp
movsb
cmpsl
dec
test
popa
push
decl
jo
mov
cmpsb
push
outsl
cmp
popa
les
popa
inc
push
lret
stos
cld
fdivr
pop
add
movb
stos
push
mov
out
push
test
sub
cmc
test
pop
clc
pusha
popl
fdivp
push
add
dec
and
mov
sahf
cmp
and
pushf
mov
jp
mov
stos
stos
or
mov
mov
sti
aaa
jmp
je
sbb
adc
fsubr
clc
jo
insl
push
ljmp
sub
or
ss
mov
mov
repnz
mov
dec
repz
mov
sbb
add
push
pop
sub
decb
in
pop
inc
bound
jg
add
inc
rcl
or
fisubl
fisttpl
cld
sbb
sub
push
jle
push
inc
xlat
pop
ret
dec
xchg
or
cmpsb
push
mov
lret
mov
aad
insl
stc
cwtl
test
push
cmp
jo
cltd
pop
dec
or
dec
mov
sarb
out
add
movsb
in
data16
stos
fadds
and
add
call
lock
sbb
aad
pop
loop
xor
or
add
jp
mov
and
xchg
xor
mov
out
jl
idivl
gs
xor
sbb
inc
data16
hlt
and
lods
addb
mov
leave
cs
cli
pop
clc
dec
or
enter
jecxz
add
push
xchg
test
lret
pop
push
inc
or
lods
and
sub
pop
stos
rclb
inc
int3
cmc
inc
int
mov
nop
scas
shlb
movsb
in
in
loop
lcall
add
bound
shl
inc
jmp
dec
out
sbb
add
or
shll
ret
das
xchg
lcall
or
lret
subb
sbbb
fidivl
popa
lock
mov
pop
lret
push
jb
fwait
add
rolb
xor
lcall
cli
inc
pop
call
mov
mov
addb
inc
push
sbb
mov
ds
fsubrl
pop
add
stos
int3
pop
push
and
hlt
mov
push
cmp
es
push
add
decl
orl
sti
push
dec
push
xor
lock
test
jmp
insl
leave
xor
cmp
inc
mov
jle
call
push
push
gs
inc
pop
sbb
push
cmp
sub
inc
sub
stos
pushl
add
movsb
mov
pop
and
or
cs
sar
incl
sbb
sbb
imul
enter
cmp
sahf
out
jg
mov
mov
pcmpgtb
into
sbb
stos
mov
lea
adc
jmp
out
mov
imul
icebp
push
icebp
in
aam
xlat
lret
nop
mov
mov
dec
dec
sbb
or
aad
push
inc
aaa
jmp
fiaddl
stc
lahf
inc
ds
add
lret
or
pop
jmp
rolb
add
mov
ret
add
pop
push
dec
xchg
cwtl
cmpsl
sub
icebp
dec
dec
fs
mov
pop
pusha
test
outsb
xchg
daa
and
test
or
lret
in
jnp
mov
mov
pushl
outsb
lcall
jns
hlt
or
add
test
cmp
clc
pop
fstpt
jo
xchg
nop
lea
ljmp
movl
adc
call
repz
inc
sbb
push
and
repnz
and
jecxz
xor
movsb
mov
rorb
loope
js
into
adc
and
xchg
cs
rcpps
fdivrl
add
mov
push
and
scas
inc
lcall
push
aam
mov
rorb
sahf
ficompl
incl
fwait
pop
lock
inc
sub
sub
push
movsl
ret
hlt
pop
push
cld
fidivs
xchg
test
and
imul
sub
ret
ljmp
sahf
and
clc
int3
mov
mov
inc
jp
cmp
loop
loop
jmp
dec
and
jo
mov
sti
sbbb
vmaxsd
sub
and
lcall
movsb
cwtl
cmp
int
lcall
mov
mov
mov
pushf
insl
inc
fcomps
out
push
inc
pushl
ss
pop
push
add
sar
inc
add
jge
xchg
jo
mov
lods
push
and
mov
fs
xchg
mov
ds
xchg
fsts
dec
lcall
mov
ljmp
fidivl
or
xor
add
dec
cmpl
bnd
or
lcall
int3
xor
iret
push
stos
test
insb
push
mov
mulb
filds
scas
hlt
pop
sbb
div
push
dec
insb
mov
xchg
cld
jecxz
sbb
jbe
repz
outsb
incb
sahf
int3
stc
stc
add
sbb
jg
out
scas
stos
push
add
out
add
out
mov
aam
xchg
xchg
mov
stos
add
add
dec
ds
adc
push
inc
fisubl
daa
mov
push
icebp
jb
or
dec
mov
or
or
pop
inc
inc
mov
xor
jl
std
jg
je
dec
daa
sbb
xchg
push
mov
movsl
add
jg
out
mov
flds
in
fiadds
adc
jmp
jno
push
jg
push
ret
cmp
aam
mov
cs
push
call
sti
jg
outsb
nop
mov
add
popl
lea
imul
das
push
movsl
xor
mov
push
pushf
shll
add
push
pop
pusha
rorb
mov
adc
mov
dec
stos
sub
call
lock
mov
sub
xchg
add
mov
clc
outsl
adc
lea
popf
mov
in
es
xor
jle
rolb
mov
enter
pop
enter
outsb
xchg
sbb
scas
adc
iret
add
push
loop
add
push
loopne
sub
inc
pop
sbb
jecxz
jg
data16
xchg
pusha
jbe
push
cld
aas
jp
pop
dec
push
out
popa
inc
out
xchg
mov
cmp
or
loop
mov
inc
adc
dec
decl
push
mov
and
sbb
popa
pushf
rclb
outsl
and
ret
sahf
jmp
cli
pop
movsb
cmpsb
sub
xor
push
rcr
out
fldenv
lods
xchg
xchg
cmp
mov
movsb
loop
push
sub
sti
mov
push
scas
push
out
cmp
movsl
inc
xchg
lods
pushl
jmp
outsl
pop
inc
mov
shrb
cmp
ret
jmp
add
movsb
xchg
inc
sub
pop
cli
pop
mov
inc
add
jmp
mov
mov
inc
mov
ret
jne
or
jge
lods
loopne
push
mov
or
aas
mov
jo
mov
xor
adc
or
je
cmp
shll
xchg
stos
or
cltd
stos
mov
xchg
jg
cmp
add
stos
test
sub
xor
mov
cld
sub
loop
add
aas
add
rolb
decl
sbb
add
test
or
incl
push
insb
and
dec
adc
pop
rcr
das
pop
icebp
or
inc
xor
xchg
ljmp
pop
insl
vpsubb
es
add
popf
jno
inc
cmp
test
es
stos
or
stos
add
cltd
out
std
ja
cmp
scas
imul
test
lea
sub
mov
inc
xor
pop
push
push
mov
add
fisttpll
rcl
jbe
enter
push
mov
mov
jle
lock
lock
xor
lcall
dec
cmp
cld
mov
sbb
cmp
mov
mov
lea
mov
mov
cwtl
jmp
or
fwait
or
push
mov
lock
jnp
lcall
sbb
test
dec
inc
jmp
fisttpl
jl
mov
push
jge
adc
out
push
lock
pop
inc
inc
jmp
popw
xchg
in
jg
push
outsl
adc
lods
aaa
test
xor
mov
loopne
mov
leave
fidivrs
ret
fcompl
sahf
loopne
inc
sahf
call
push
nop
rcr
pop
ret
add
sbbb
rcll
cmpsl
or
gs
loope
mov
jb
icebp
mov
je
push
inc
sti
adc
enter
jb
and
rcrb
shl
ror
out
jbe
into
mov
rolb
fidivs
or
fsubrl
ljmp
loopne
std
fbld
push
sbbl
enter
ds
mov
sbb
inc
dec
bound
lods
rorb
pop
fildl
int3
aas
movsb
or
adc
call
movsl
pop
test
mov
mov
add
xor
scas
push
jmp
jecxz
lret
test
xchg
jp
fcompl
xor
cli
scas
push
lock
leave
mov
mov
call
hlt
lea
outsb
cmp
sbb
inc
popa
repnz
shlb
in
cli
negl
xchg
jp
pop
push
push
jecxz
cmpsb
push
push
mov
mov
push
fmul
jo
clc
add
fiadds
push
out
cmc
jbe
push
nop
call
sub
inc
cld
cmp
std
fists
push
pop
loopne
adc
outsl
adc
mov
or
adc
mov
sahf
add
repnz
inc
add
ret
push
push
add
rol
fcoms
enter
fdivrl
loop
gs
push
hlt
jmp
adcl
outsb
add
lret
add
and
adc
aad
std
sbbl
push
and
test
jge
jmp
inc
loopne
xchg
sub
and
cmpsb
les
jle
jp
sub
enter
addr16
push
push
cmp
popf
shlb
in
adc
pushf
nop
test
mov
js
mov
leave
xlat
fiaddl
fsubrs
dec
cmp
or
pop
pusha
add
sub
les
mov
je
jnp
incb
cmp
sub
mov
aam
imul
push
shrb
add
xlat
lcall
pop
dec
jo
ret
add
rcl
out
fstpt
ret
push
mov
mov
mov
aam
or
mov
je
push
hlt
sub
push
rolb
cs
or
mov
cs
pop
fisubs
test
xor
cld
pop
sbb
sub
dec
add
decl
aad
mov
mov
aaa
add
cmp
sub
sbb
iret
hlt
adc
pop
add
hlt
decl
and
inc
je
loope
repnz
test
jecxz
sub
push
test
nop
outsb
push
in
shlb
test
cmpl
cmc
popf
pop
mov
test
cmp
mov
xchg
sahf
mov
in
cltd
sbb
add
xchg
fisubrl
and
or
pusha
ss
cmp
push
or
mov
mov
adc
aaa
xchg
loope
adc
xchg
mov
pop
lea
mov
fs
bswap
incl
mov
insb
adc
sbb
fsubs
adc
icebp
movb
cmp
add
js
inc
mov
and
xor
lcall
adc
jbe
add
fimull
loop
mov
int3
in
and
fldenv
add
mov
sub
test
loopne
test
cmp
cmp
push
loopne
or
mov
loopne
icebp
loopne
add
push
mov
or
pop
je
and
add
fdivs
dec
das
fistpll
test
cwtl
fnsave
iret
inc
jne
jle
pop
inc
push
je
insl
mov
outsb
add
out
mov
fdivs
clc
cli
push
js
mov
or
clc
and
cmc
dec
push
test
dec
int3
pusha
pop
sarb
mov
imul
mov
xorb
sar
out
jp
movsb
fimuls
inc
sbb
jb
mov
mov
pusha
sub
pushf
stos
cmp
arpl
out
int3
sbb
cmp
inc
loopne
rcr
sbb
sarl
stos
dec
or
dec
sbb
cmp
fisttps
test
in
imul
pop
push
adc
movsb
jo
lret
mov
sub
push
popa
dec
pop
ss
stc
push
scas
or
mov
lods
mov
mov
stos
mov
sub
popa
xchg
mov
pop
adc
inc
cld
es
je
and
scas
clc
adc
jp
or
mov
jmp
pop
iret
bound
mov
out
inc
or
fstpl
xchg
incl
es
jo
icebp
mov
add
dec
sub
fdivp
mov
sti
mov
lods
mov
sbb
xor
outsl
out
test
cs
and
jno
xor
sub
jge
cmc
ds
mov
insl
aam
hlt
mov
dec
call
adc
outsb
loopne
sub
pop
jno
out
fcom
fiaddl
shlb
test
xchg
lret
add
ret
sub
imulb
xchg
enter
mov
ja
and
insb
bound
and
dec
inc
xorl
add
sub
mov
add
cmc
xchg
mov
jae
cmp
push
sbb
dec
mov
mov
in
gs
jnp
push
cmp
pop
aaa
xor
shrl
sarb
jo
loop
dec
out
mov
add
ljmp
cmp
mov
lods
mov
icebp
jo
add
push
ror
scas
test
aaa
cwtl
adc
mov
dec
inc
dec
xor
outsl
ljmp
cmp
jmp
fwait
xor
fcomps
and
inc
inc
pop
pop
push
inc
mov
xchg
push
js
dec
fistpll
adc
pop
and
mov
or
pop
mov
mov
pop
pop
fxch
jnp
shl
cmp
pop
push
mov
bound
xor
lock
lahf
int
insl
jl
mov
sar
mov
jo
mov
repnz
es
cmp
pop
sbb
insb
nop
movsb
mov
les
in
inc
movsb
add
inc
cltd
cmc
sbb
cmp
aas
xchg
xchg
lret
mov
sahf
fwait
test
ss
outsb
xor
jbe
cwtl
lods
xchg
and
pop
icebp
pushl
inc
sbb
and
sahf
sub
mov
or
mov
and
lods
inc
sbb
subb
pop
loopne
xchg
addl
std
idivl
add
loope
sbb
push
push
pop
jnp
aas
and
enter
mov
jle
cld
call
add
and
add
or
mull
mov
add
je
push
fsubp
adc
ljmp
lock
loopne
push
add
ror
push
fwait
shrb
push
dec
out
into
push
or
adc
push
add
pushf
fwait
adc
mov
nop
shlb
enter
push
jle
in
popa
push
mov
out
outsb
jae
add
xor
mov
adc
mov
push
pop
movsb
mov
push
std
js
and
push
insl
pop
pop
lock
mov
nop
add
bndldx
jmp
adc
xchg
enter
aaa
and
mov
fwait
aaa
shll
mov
popa
in
loop
das
loop
sbb
aaa
cld
sub
xlat
sub
pop
movsb
inc
iret
out
sub
sbb
je
decl
cmpsb
inc
push
mov
clc
push
lods
or
push
js
aad
mov
jne
push
outsl
ficompl
adc
add
mov
fimull
dec
adc
or
outsl
incb
add
mov
stos
jle
xor
icebp
repz
mov
xchg
add
push
std
push
out
xchg
mov
dec
cmp
lock
pop
xor
mov
ret
add
xchg
xchg
dec
add
cmp
sbb
aam
pushf
sbb
mov
ret
add
push
data16
lret
sub
call
jo
cmpb
jmp
addr16
call
inc
jno
mov
cld
push
cld
mov
repz
pop
dec
clc
sub
jecxz
sbbl
adc
fildl
push
cmpb
int3
push
sub
popf
push
or
or
sub
pop
push
sbb
pusha
or
add
je
sub
cs
scas
test
test
lock
shr
sbb
pop
rclb
xor
xor
xchg
push
fs
or
orb
lds
fsubr
mov
adc
xor
adc
aaa
fprem
xlat
int
movsb
je
lret
aam
pop
je
jg
mov
lds
lcall
xor
add
imull
clc
or
push
cmpsb
or
insb
bound
jo
mov
incb
int
xchg
or
add
testl
cld
mov
lcall
xlat
sub
decl
insb
sbb
outsl
add
movsb
cmp
iret
pop
mov
add
cld
out
call
ds
daa
sub
mov
jecxz
fdivl
xor
add
int
insl
mov
out
subb
inc
xlat
shlb
dec
imulb
dec
mov
mov
add
or
orl
adc
xor
sub
jecxz
xchg
mov
or
mov
jnp
leave
xor
cmp
movsb
das
mov
ficomps
sub
fnsave
inc
cmpsb
xor
jmp
mov
inc
dec
out
inc
cmp
ljmp
incl
dec
mov
cltd
popf
inc
sub
pop
adc
cli
adc
fisubrl
dec
ss
cld
push
push
add
fisttpll
jg
sahf
sbb
fisttps
in
iret
je
sbb
test
push
cmc
popa
jno
stos
sahf
mov
add
incb
cwtl
movsb
adcb
in
xchg
or
mov
push
adc
in
call
pop
test
mov
sbb
lods
add
int3
xor
jo
nop
xchg
pop
nop
mov
icebp
or
leave
mov
add
fwait
mov
nop
add
das
movsl
cmpsb
shrl
jae
add
stos
enter
add
mov
ss
pop
or
pop
sbb
cmp
add
push
jbe
mov
js
jl
incb
inc
fldt
add
jae
jle
or
sbb
icebp
jmp
push
pop
add
mov
ret
ds
sahf
mov
cmp
and
pop
je
ljmp
icebp
sbbb
adc
iret
ret
gs
outsl
mov
fimull
addb
add
push
add
mov
ds
jg
add
jbe
push
out
mov
divl
or
mov
ret
sbb
inc
jmp
inc
xchg
out
mov
pusha
divl
arpl
sbb
mov
sbb
idiv
cmp
in
adc
pusha
pop
test
add
xchg
add
sbb
clc
adc
add
push
out
loop
ja
shl
cli
xor
fisttpl
add
scas
out
out
or
inc
mov
insb
test
dec
push
and
fiaddl
add
test
add
cli
js
jo
js
sub
test
push
mov
rcrb
cli
loopne
push
scas
lcall
jmp
pop
addb
loopne
jge
enter
clc
outsl
ljmp
xor
pushf
inc
lret
lods
push
mov
bound
ja
es
es
cmpl
outsl
ret
mov
jle
or
push
jnp
inc
cmpsb
push
lods
divb
movl
dec
and
xchg
mov
sub
jl
sbb
lods
fbld
roll
cmc
lret
and
lock
lock
xchg
inc
mov
lock
stos
sbb
add
cmpsl
mov
pop
stos
shll
daa
stos
loope
pop
fildl
insb
jnp
jo
mov
imul
cmc
insb
stos
in
or
inc
add
or
pop
and
mov
std
test
jmp
in
mov
adc
lods
xchg
insl
std
jg
mov
pushf
std
mov
xchg
mov
mov
cmp
aaa
dec
sub
jb
and
sub
addb
push
jl
sbb
dec
adc
js
shl
push
popf
add
aas
mov
and
jg
icebp
aad
or
cmp
test
push
add
xor
ror
adc
repnz
or
sti
dec
rcl
es
iret
ret
into
cmp
ja
inc
add
out
js
push
inc
std
mov
pop
popa
out
dec
mov
ret
clc
incl
jnp
movsb
xor
out
mov
jl
stos
inc
cmp
xchg
movb
mov
rorb
xchg
mov
dec
add
mov
sarb
addr16
cli
and
and
sbb
pop
jg
dec
cmpb
xlat
enter
or
call
inc
jno
push
insb
mov
dec
test
pop
lock
rcrl
pop
push
lock
nop
aam
xchg
jl
cmpsl
test
adc
mov
cmpsb
or
mov
addb
inc
cmp
ja
xor
pop
ret
sbb
inc
or
inc
mov
divb
jae
nop
in
int3
mov
pop
add
fldpi
outsb
push
pushf
xchg
mov
mov
stos
push
sub
mov
mov
push
adc
add
ljmp
pushl
loop
das
jne
inc
loope
sbbl
push
fldl
incl
or
dec
mov
jg
pop
call
in
xchg
pushf
xchg
cld
clc
nop
mov
out
std
push
jo
xor
mov
dec
pop
aaa
xor
push
mov
gs
stos
add
fsubl
enter
ret
mov
call
repz
or
jge
inc
jg
imul
add
subb
stos
or
add
jo
mov
into
inc
pushf
stos
daa
jl
mov
xor
push
dec
int3
mov
test
mov
add
adc
sahf
inc
sbb
dec
mov
call
nop
stc
pop
pop
sub
or
loope
ret
arpl
or
jecxz
divl
shrb
sub
jecxz
movsb
repz
js
xchg
sub
nop
adc
stos
test
and
jecxz
scas
jg
stos
mov
add
cmpsb
jl
mov
ret
mov
decl
dec
mov
les
inc
xor
call
das
cmp
fldcw
lock
add
add
push
pop
adc
sub
aad
xchg
push
loopne
aam
mov
daa
push
movsl
mov
sbb
es
xchg
out
clc
out
mov
xchg
or
xlat
icebp
inc
inc
jo
scas
sar
out
lock
roll
and
xchg
dec
aas
mov
pop
mov
mov
fbstp
jbe
add
stos
xor
jbe
and
push
push
roll
bound
mov
test
cmp
adc
clc
das
js
inc
es
mov
je
test
jno
mov
cmp
incb
inc
mov
adc
rcrl
add
inc
clc
mov
mov
push
aas
cmp
das
push
imul
jg
inc
or
cmc
sbb
stos
jb
in
ljmp
inc
inc
cltd
cmp
xlat
pushf
movsb
outsb
sub
add
insl
call
mov
hlt
cmp
clc
or
sti
cmpsl
add
push
rclb
lret
adc
cmp
call
nop
out
add
mov
dec
je
fcompp
rcrb
lock
xor
in
das
push
andl
fsubrl
jne
aaa
cmpb
and
xor
pop
or
adc
test
mov
add
pop
xchg
jbe
scas
push
xorb
std
daa
sub
pop
xor
sti
mov
mov
movsb
cmpsl
pop
aam
lret
mov
je
dec
stc
aam
or
mov
mov
inc
divb
ja
shlb
fbstp
push
cmc
mov
and
and
int
out
aam
mov
sub
cs
mov
pop
jmp
fists
mov
cmpb
xor
into
cmpsb
or
fwait
mov
mov
sub
xor
jle
xlat
aam
rcll
push
aas
clc
add
adc
push
inc
jbe
fimull
rolb
add
loop
sub
adc
fmul
mov
pop
cld
idivl
xor
and
lods
adc
mov
cmp
add
lods
inc
lock
data16
insb
cmp
push
adc
addr16
scas
jle
call
js
push
dec
inc
jbe
outsb
shlb
lods
sahf
sbb
adc
sub
mov
lret
adc
jns
addl
mov
mov
push
cmp
jbe
inc
arpl
and
add
adc
mov
mov
push
imul
lods
rcrb
pop
data16
inc
mov
xchg
sbb
push
sub
push
sarl
push
pusha
xlat
cmp
fnsave
sub
push
mov
aad
cs
lret
dec
mov
and
loop
push
out
ret
sbb
test
add
pop
mov
xchg
pop
les
add
pop
mov
mov
cmc
add
push
repnz
insb
adc
mov
pop
pop
mov
mov
push
adcl
push
lods
lods
call
mov
xchg
inc
dec
inc
cli
pop
cs
in
nop
lret
jno
jge
aad
loopne
and
mov
clc
mov
sbb
popa
lahf
push
sbb
stos
mov
mov
outsl
mov
std
mov
adc
mov
rcrl
das
mov
mov
or
add
adc
mov
adc
stos
fstps
js
fwait
insb
xchg
mov
cmp
mov
jno
sbb
or
roll
sub
mov
jb
push
jo
xchg
add
loop
or
and
int
data16
or
repnz
inc
mov
xchg
sarl
aam
sahf
jl
filds
push
bound
sbb
loopne
or
out
mov
push
cmp
adc
loop
mov
sbb
jmp
imul
mov
adc
test
int
mov
push
ds
xchg
cld
movsb
xchg
cli
and
mov
add
inc
sbb
mov
test
push
into
insb
xorb
movsb
movsb
sub
out
add
into
or
sbb
in
outsl
iret
add
ret
add
pop
adc
pop
pop
sahf
add
mov
in
xchg
jecxz
hlt
sub
push
movsl
fiadds
add
test
data16
jecxz
mov
mov
arpl
cmpsl
or
or
lods
mov
ljmp
mov
cmp
cmp
inc
cwtl
and
push
or
std
mov
inc
pop
cmp
xchg
divl
mov
add
aaa
aaa
xorl
test
push
cli
scas
inc
or
and
fimull
and
outsl
fcoms
out
push
xchg
cmc
mov
jbe
mov
cli
ljmp
mov
lods
mov
and
pop
jmp
test
xor
inc
dec
mov
aas
std
inc
rolb
adc
xchg
inc
mov
pop
push
add
xchg
push
or
fs
cmpl
ret
adc
adc
loope
or
cmp
cmp
lahf
xchg
ret
pop
inc
jb
cmpps
jecxz
sarb
lret
push
jle
cwtl
and
data16
mov
and
aad
adc
push
sbb
sti
sbb
xor
sahf
insb
dec
call
inc
mov
cmpsb
fiaddl
in
push
mov
aas
insb
pop
xor
sahf
lahf
xor
xchg
jmp
movsb
mul
lcall
mov
arpl
push
cs
mov
mov
inc
add
fistps
aaa
add
sbb
and
icebp
dec
mov
mov
pushf
jg
add
xchg
imul
ja
pop
sub
ljmp
inc
pop
sbb
ficomps
inc
sarb
stos
lods
test
mov
pusha
xchg
and
ds
fdivrl
add
lcall
aad
sti
mov
or
ret
fwait
cli
jp
mov
add
cmp
dec
cmp
out
push
xchg
lock
jnp
push
inc
stos
out
cli
xchg
std
pushf
add
add
hlt
inc
sahf
xchg
push
pushf
clc
inc
fwait
in
cs
jo
jb
pop
xchg
mov
out
and
js
loopne
lahf
jg
loopne
xor
in
xlat
shlb
push
add
stos
jl
cmc
pop
mov
popf
testl
mov
and
push
pop
aaa
cwtl
lret
and
mov
mov
xor
clc
fisttps
xchg
imul
inc
push
test
daa
add
dec
ficomps
xchg
ljmp
cmp
rorb
mov
fildl
dec
in
scas
loope
movsb
and
adc
fildll
push
mov
mov
jmp
dec
insb
jle
hlt
inc
es
and
mov
call
mov
mov
test
push
in
mov
inc
stos
loop
adc
je
imul
insb
ret
cli
xchg
gs
adc
scas
pop
push
dec
les
pop
sbb
mov
jb
mov
add
mov
mov
mov
ja,pn
adc
bound
nop
decl
loope
sub
push
es
in
adc
jo
cld
call
push
hlt
nop
pop
mov
mov
jl
add
dec
cli
loopne
in
mov
dec
je
lahf
lea
inc
sbb
lea
jns
outsb
pushl
sar
xor
mov
mov
add
jmp
jecxz
xchg
sbb
cld
jg
dec
pop
mov
hlt
je
es
add
loope
into
cmc
adc
cmpsb
fildll
or
insb
fwait
mov
test
push
pop
mov
test
inc
and
cmp
mov
lods
lds
aad
push
out
and
push
cmp
xlat
movb
enter
insl
out
lods
jecxz
dec
dec
add
add
jecxz
xor
pusha
ja
pusha
aaa
cmp
mov
push
push
sbb
xchg
lds
push
add
mov
jbe
jp
call
out
inc
xchg
or
hlt
inc
or
push
jns
mov
adc
and
loope
jo
cmp
push
arpl
mov
std
dec
adc
mov
cmp
adc
xchg
inc
sub
adc
sub
incl
test
pminsw
cmp
andb
sbb
out
push
fsubr
dec
add
loopne
push
push
cmp
mov
ret
roll
xchg
int
inc
pop
popl
es
cli
decl
sbb
mov
test
stc
loop
sub
pop
xchg
pop
sub
aaa
cmp
jmp
pop
push
lret
push
mov
dec
pop
enter
push
ss
pop
cmp
das
mov
cmp
add
jle
cmp
test
in
dec
in
test
aas
fs
sbb
in
push
fisttpl
in
daa
adc
std
insl
adc
and
stos
cmp
jnp
mov
adc
xor
mov
sarb
cmp
std
add
bound
xchg
mov
push
dec
lret
dec
push
loop
push
fwait
decl
in
rclb
mov
pop
sub
cmp
call
shl
or
daa
bound
lcall
xor
xchg
clc
jg
jae
inc
movb
gs
inc
test
mov
sbb
rol
mov
push
cmp
nop
incb
fsubs
adc
gs
movsb
jbe
sar
jb
je
push
aaa
insb
push
shll
cwtl
pop
mov
mov
and
in
mov
sub
in
shrb
ss
nop
shlb
mov
movsb
and
ds
fistpll
seto
dec
mov
dec
les
sub
cmpsb
mov
stos
imul
push
xchg
adc
xor
or
into
adc
jge
lea
push
or
repz
cmp
arpl
dec
adc
mov
test
or
add
inc
dec
xchg
call
mov
add
rcll
mov
outsb
into
jbe
inc
je
add
movsb
imul
ja
int3
inc
dec
push
jmp
aam
test
xlat
xor
sbbl
pop
dec
or
dec
mov
xchg
dec
add
xchg
fcmovb
lods
test
sub
sbb
test
add
stos
add
imul
xchg
jle
mov
lds
pop
mov
push
je
ljmp
decl
mov
jge
push
add
pop
mov
push
mov
cli
push
in
ret
hlt
and
cmpsl
pop
push
out
movsb
add
xor
inc
scas
js
push
mov
inc
sarb
add
movsb
std
xchg
cmpl
subb
std
xchg
cld
mov
lock
lea
test
repnz
push
sub
push
sbb
fcomip
inc
cmpsb
or
add
ss
mov
sbb
push
cmc
xchg
fiadds
cmovge
sbb
enter
mov
jne
shrl
pop
divb
dec
add
aam
sbb
fwait
jg
call
cmp
dec
mov
push
pop
xchg
sub
outsb
jge
mov
bound
mov
push
rorl
sahf
mov
punpcklbw
sbb
insb
movb
jnp
nop
pop
enter
mov
dec
add
pop
pop
cmp
sbb
pop
sar
jo
aaa
jle
add
cld
mov
pop
adc
scas
or
sub
fcoms
clc
in
inc
std
pop
insb
jbe
mov
pop
repnz
scas
stos
dec
arpl
sub
pushl
dec
shlb
pop
aaa
mov
sub
jno
cmp
ljmp
pop
js
pop
hlt
xchg
push
sti
sbb
test
or
push
push
lods
sahf
inc
lea
test
or
les
ljmp
outsl
jb
add
pop
fmuls
push
or
rcrl
cld
mov
or
clc
inc
or
push
and
add
sub
shl
shl
and
xchg
jmp
pop
push
loope
push
popf
rclb
push
adc
test
rclb
mov
cld
stos
lcall
gs
xor
data16
lcall
and
outsb
inc
mov
jno
sbb
sub
jl
enter
incl
or
adc
int
js
jb
mov
sub
sub
fbld
push
loop
mov
movsl
addr16
xor
aas
out
mov
and
cld
cmp
ret
mov
adc
add
fucomip
imul
movsb
rolb
dec
mov
cmp
fsubl
adc
nop
inc
adc
jp
and
mov
add
push
mov
filds
mov
and
cmp
decl
push
pop
cmc
adc
mov
lret
cs
pop
arpl
mov
push
or
jg
lock
cltd
mov
or
lahf
std
je
sub
dec
xlat
adc
sub
push
mov
inc
xor
clc
pop
dec
fildl
cmp
mov
mov
inc
xor
sub
in
ss
hlt
shl
out
mov
push
pop
or
sbb
sysexit
lock
xchg
rcl
test
push
and
cld
sub
mov
push
sbbb
jo
in
inc
lods
pusha
sarl
hlt
subb
push
adc
subb
pop
fdivrs
xchg
add
out
push
sbb
rorb
xchg
es
pop
data16
jae
pop
mov
push
fiadds
shlb
outsb
or
or
ret
and
ja
add
add
mov
lcall
clc
sub
subl
cmp
jp
jo
jp
lea
popf
shll
dec
pop
stos
and
repnz
sbb
arpl
mov
and
sub
push
call
rclb
xchg
ss
cmp
or
sbb
icebp
adc
stos
pop
add
rolb
pusha
adc
sbb
jbe
xchg
loop
inc
add
aas
push
lock
call
in
daa
xchg
mov
das
les
dec
stc
popf
lcall
cld
gs
add
inc
inc
dec
add
cld
cmp
iret
or
hlt
push
test
inc
dec
cmpl
mov
test
pop
lea
mov
fsubrs
or
idivb
dec
insl
ljmp
test
push
and
jnp
fildll
add
decb
int
repnz
xchg
cmp
pop
lock
add
inc
je
mov
jae
xchg
pop
jp
inc
jo
add
inc
lret
xchg
dec
inc
sahf
in
cmp
push
mov
push
fidivl
testl
mov
mov
test
mov
xchg
loopew,pn
js
and
fdivr
sub
fidivl
lret
rclb
rorb
mov
rclb
adc
and
pushl
jle
std
push
out
cli
dec
add
inc
sbb
ret
xchg
xchg
shrb
xchg
enter
adc
mov
dec
adc
adc
inc
pusha
popa
jo
mov
lret
inc
shll
bound
sbb
out
xchg
jo
imul
outsb
pop
cld
lods
xor
inc
xchg
bound
stos
pop
add
cld
jb
hlt
jg
ds
sub
mov
push
sbb
xchg
es
jecxz
push
ret
daa
call
les
jne
call
lock
adc
loopne
cmpb
or
sub
jne
jg
add
or
xchg
ljmp
cs
fcompl
jmp
add
es
jp
arpl
cwtl
add
insb
icebp
push
mov
xor
out
jp
jns
xchg
jb
fwait
push
dec
lcall
push
or
cmp
or
out
int3
arpl
mov
cs
or
sub
adc
jmp
push
lods
add
and
pop
push
and
jnp
into
in
inc
idivb
sarl
xchg
push
shlb
or
jns
daa
jne
push
stos
insl
cmp
xchg
rclb
mov
pop
jle
fincstp
rcrb
jmp
sbb
nop
mov
outsb
mov
inc
and
and
mov
dec
and
mov
jle
jb
mov
sub
add
xor
inc
mov
fdivs
in
sbb
inc
mov
push
push
lea
mov
and
jmp
lcall
pushf
mov
or
in
adc
lahf
push
jl
push
arpl
or
lcall
mov
daa
adc
push
aam
ljmp
sbb
add
int
xor
fiaddl
pop
insl
xchg
xchg
mov
jp
rcrb
pop
adc
scas
sbb
lods
or
lock
jge
lock
inc
bound
mov
jns
call
push
sbb
inc
xchg
clc
cmpsl
sub
push
ljmp
lahf
lods
sti
movsb
jns
sub
fs
filds
in
mov
jno
or
cmp
pop
mov
test
jae
adc
and
or
pop
sahf
push
inc
cmp
or
mov
add
int3
repnz
lods
adc
xchg
mov
movsl
xchg
fists
sbb
daa
push
jb
fs
sub
fistpll
imul
stos
sub
pop
cmc
cmp
icebp
daa
add
iret
jmp
sahf
jmp
xor
dec
sub
dec
jecxz
add
fisttpll
cld
cmp
sbb
icebp
pushf
fucomip
mov
dec
xchg
pusha
pop
adc
in
and
cmp
push
scas
cmp
fmull
sbb
insl
cmpsl
or
andb
lods
add
jmp
xorl
mov
mov
dec
add
out
xchg
push
decl
or
test
pop
mov
jo
push
jp
dec
jo
push
pop
jg
adc
int
mov
stos
add
cmp
hlt
mov
mov
sbb
push
mov
rorb
shlb
sbb
sbb
sbb
push
lds
adc
jge
push
or
inc
pop
or
outsb
mov
imul
adc
dec
inc
push
jp
sar
pusha
ss
jbe
inc
outsb
dec
mov
enter
in
clc
scas
sbb
js
jl
int3
sbb
or
or
imul
testl
movsb
add
sub
pop
aaa
cli
scas
jbe
jmp
jb
adc
pop
sub
aaa
lods
aam
into
sub
pop
mov
stos
add
xchg
inc
mov
hlt
aaa
adc
out
adc
mov
sbb
cli
adc
push
jg
in
adc
sbbb
adc
cmp
dec
je
pop
test
in
cwtl
or
jb
ljmp
mov
jb
mov
test
psubusw
inc
movsl
ljmp
ret
inc
cld
or
add
nop
mov
ret
jle
loope
rcrl
push
sub
scas
sub
pop
in
push
movsb
js
pop
rolb
push
jle
jmp
push
push
jns
addl
cmp
cld
pop
push
mov
ret
in
xchg
data16
pop
andl
sbb
hlt
add
pop
fiadds
bnd
roll
xchg
ret
cmp
lcall
std
mov
ret
sub
mov
pop
shlb
mov
cmp
cmpsl
adc
inc
sbb
cmc
mov
cmp
push
sbb
xor
mov
test
test
mov
mov
and
je
loope
ljmp
add
sub
add
leave
ds
adc
lods
push
std
test
outsl
cwtl
sbb
imul
sti
popf
je
push
iret
push
dec
jne
push
xchg
push
adc
fimuls
push
add
add
dec
cmpl
call
sahf
in
aad
xor
repnz
jle
setns
outsb
in
js
cltd
adc
bound
inc
sbb
pop
adc
iret
ss
addl
sbbb
rolb
lods
mov
call
bound
sbb
xchg
mov
nop
int3
push
out
je
cmp
push
adc
rclb
sub
sub
loopne
mov
push
icebp
out
cmp
add
add
ds
imul
mov
cs
test
adc
inc
add
mov
xor
fdivs
sarl
repnz
sub
in
pop
aas
pop
je
pop
sbb
incl
js
mov
add
inc
fwait
mov
subl
aaa
arpl
mov
enter
sub
incb
idivb
xchg
adc
divb
mov
std
and
sbb
push
loopne
cli
or
cmpsb
mov
scas
mov
jbe
jo
jmp
ss
je
loopne
xchg
mov
vfmsubps
ss
jle
xor
loope
nop
sub
jae
shrl
inc
jo
add
lock
or
push
add
loopne
ds
lcall
jbe
aam
xchg
mov
lahf
adc
clc
cmpb
loope
scas
or
loopne
enter
mulb
add
pop
add
in
out
jo
scas
test
ja
sbb
sar
pop
sbb
fdiv
mov
cmpsb
jb
push
mov
dec
test
jns
push
jmp
jmp
aad
les
push
dec
add
pushl
mov
outsb
insl
js
rclb
cmp
repnz
and
mov
orb
popa
ss
jno
or
fstpt
hlt
mov
cwtl
int3
leave
frstor
pop
add
decl
dec
cmp
jl
test
fstpt
add
hlt
jbe
loope
sarb
fisubs
mov
outsl
rclb
lock
dec
xor
decl
loop
inc
xor
repz
push
pop
mov
cmp
popf
xchg
mov
shll
insb
or
cmc
adc
rcrl
cmp
lcall
loope
test
sbb
daa
rclb
fmull
lods
jge
bound
and
js
mov
repz
lods
mov
clc
push
push
add
pop
mov
inc
insb
sub
notb
test
xchg
pop
jmp
jo,pn
xchg
stc
enter
je
inc
xchg
decl
xor
adc
sbb
mov
fcmovne
or
cmp
inc
pop
dec
push
repnz
lds
dec
sbb
dec
mov
addb
mov
and
pop
push
push
outsb
outsb
cld
int
and
filds
xor
mov
xor
push
push
add
int
stc
les
mov
xor
mov
or
loop
push
cmp
sbb
adc
add
repnz
jle
cwtl
jb
mov
or
sub
cld
ja
mov
push
cltd
sbb
sbb
loope
jge
insl
xorb
push
mov
cld
sub
dec
mov
xchg
mov
mov
ljmp
and
lods
lea
test
testl
push
mov
out
ds
push
adc
jmp
xchg
mov
xchg
add
add
mov
and
mov
scas
mov
adc
or
jl
push
movb
jl
pop
and
sub
cmpsb
ret
sar
repz
fcmovu
aaa
xor
enter
mov
call
icebp
cmpsl
sub
push
sbb
add
mov
and
lret
cmc
es
lret
mov
rorb
mov
or
or
gs
sub
loop
pop
lea
jb
add
dec
pop
sbb
or
clc
imul
fdivs
xor
clc
sbb
into
xchg
or
sub
cmp
sub
jmp
mov
lock
cmp
das
das
xor
cli
inc
popl
ret
push
pop
orb
mov
loopne
rorl
mov
or
xchg
or
sbb
xor
lock
push
push
xchg
and
add
aad
mov
mov
movsb
aam
inc
repz
adc
fcomip
push
adc
add
xor
xor
rcrb
jns
mov
or
pop
movsb
mov
or
mov
jl
jns
inc
inc
loope
je
hlt
lds
jno
sub
lahf
or
or
or
mov
cld
mov
jle
in
pop
pshufw
jne
cs
call
lods
or
jge
out
xchg
gs
xchg
and
pushf
fisubl
push
inc
push
gs
and
add
icebp
fdivp
mov
ljmp
fwait
loope
mov
mov
mov
pop
bound
jle
push
pop
sub
dec
jmp
adc
and
sahf
ds
mov
inc
rol
pop
lahf
dec
icebp
cmp
xchg
sbb
and
pop
ficompl
cmp
mov
aaa
std
lcall
jne
je
fchs
hlt
or
mov
or
ja
fwait
das
mov
pop
pop
test
sbb
cwtl
mov
test
and
add
dec
mov
sub
xchg
push
scas
pop
in
lcall
cs
mov
mov
cld
or
adc
mov
or
rcrb
and
ds
add
mov
sbb
or
cmp
adc
cld
mov
push
adc
shlb
jge
in
push
xchg
pop
cs
lock
cli
pop
inc
and
push
jns
loopne
cwtl
sbb
test
jne
out
cs
out
cli
dec
add
mov
xor
push
mov
shrl
clc
das
add
lcall
sub
test
and
cmp
faddl
xchg
jecxz
lods
out
adc
fisubl
inc
es
jbe
cs
cmp
mov
scas
loop
xchg
pop
pop
aam
mov
or
push
xchg
popf
push
xchg
fiadds
cmp
or
mov
pop
jg
push
and
in
jo
adc
and
xchg
add
out
ljmp
sbb
rcl
xchg
ret
and
xchg
add
or
add
push
lret
cld
mov
sbb
aad
clc
pop
push
push
movsb
lcall
jo
mov
jp
popa
test
and
lock
insb
adc
mov
lock
sbb
jno
or
and
lcall
push
stc
adc
rcrb
movsl
aam
fstpl
adc
mov
stos
lods
stos
je
sub
sub
sbb
leave
test
adc
mov
add
data16
adc
sub
sub
and
dec
xchg
jecxz
inc
imul
data16
add
outsl
clc
call
jnp
xchg
into
in
jle
xchg
es
loop
sbb
mov
mov
sahf
bound
icebp
and
jae
pushf
icebp
jg
pop
mov
bound
sbb
ret
xorb
add
xor
jbe
out
lret
inc
dec
ret
sub
mov
mov
ret
lods
mov
or
sub
insl
jg
dec
rcr
in
dec
jns
incl
xlat
mov
push
mull
test
addr16
test
pop
sbb
shl
push
adc
pop
test
and
inc
je
xchg
call
jmp
cwtl
push
fwait
push
pop
add
push
out
add
sahf
mov
adc
push
inc
addw
cld
testb
jp
stos
pusha
ljmp
xor
test
pop
dec
loopne
xlat
ja
push
cmp
xchg
bound
mov
rol
incl
or
jge
inc
test
stos
lret
repz
mov
mov
mov
es
push
or
loop
ja
dec
stos
int3
fcomi
cwtl
inc
or
push
out
stos
or
cmpsb
and
push
into
call
clc
cmp
jl
push
ljmp
mov
lahf
or
mov
cmp
ss
ret
xchg
add
xor
imul
pop
mov
push
mov
arpl
or
popf
rorb
call
mov
dec
je
push
or
scas
cmp
push
shrb
jne
jns
adc
sub
pop
pushf
mul
inc
sti
and
add
mov
xor
nop
push
cld
outsl
and
decl
and
inc
and
inc
je
mov
test
cli
jl
in
dec
jg
jnp
jl
sbbb
ljmp
push
out
inc
lahf
inc
icebp
xchg
push
pop
push
ljmp
lahf
xor
dec
xor
sahf
loop
jle
xor
incb
or
pop
mov
cmp
add
mov
inc
cmpsl
mov
add
into
mov
aam
and
sbb
add
cmpsl
mov
ja
dec
sub
jns
int
aad
jo
add
mov
jg
sbb
and
add
int
test
ror
inc
clc
outsl
das
xchg
xchg
pop
hlt
mov
or
mov
aas
and
stc
dec
pop
fs
pop
xor
lcall
fdivr
dec
add
sbb
sbb
clc
mov
push
mov
mov
call
sbb
loope
into
push
cmp
sbb
inc
pop
add
xlat
inc
shll
ret
rolb
pop
fnstsw
cmp
fwait
pop
adc
add
cmpsl
jp
adc
mov
adc
xor
sub
pop
pop
adc
gs
push
cmp
push
cmpsb
loopne
fstl
sti
xchg
add
cli
movsl
call
jmp
arpl
orl
mov
dec
out
test
loopne
xor
or
aam
outsl
mov
int
xchg
mov
aas
pusha
cmp
adc
mov
add
mov
call
imul
jne
jo
jmp
fwait
in
sahf
lods
mov
xchg
das
fdivr
or
aad
inc
push
rcll
andb
dec
insb
fwait
lcall
ss
xor
popf
xor
in
pop
scas
repnz
jb
or
mov
cmp
insl
addr16
dec
stos
xor
sub
and
add
dec
cmc
jl
jmp
jo
and
push
cld
ret
add
adc
test
jmp
cld
loop
cmp
and
adc
daa
repnz
push
insb
mov
push
add
add
fsubr
aaa
sbb
and
xchg
sbb
sub
shrl
push
out
or
mov
and
mov
mov
pop
or
inc
arpl
add
mov
outsb
dec
dec
test
or
mov
cld
or
adc
fstl
mov
ret
andb
js
out
cmp
movsb
fs
push
sar
push
xor
incl
pusha
sub
or
in
test
xorb
stos
fcomip
int3
mov
sub
cmp
icebp
daa
jo
add
icebp
jp
test
pop
add
loop
imul
lods
jp
push
lock
push
subb
clc
ja
mov
fs
popa
std
inc
pop
mov
or
dec
subb
sbb
lcall
sub
test
scas
ret
lods
mov
ficomps
test
xor
ljmp
mov
pop
sbb
aad
lds
scas
ret
add
mov
mov
mov
test
cmpb
mov
jo
shl
push
jecxz
add
jp
icebp
dec
loopne
inc
jne,pt
fcoml
sub
adc
mov
cmp
mov
jg
and
jmp
and
fiaddl
mov
fdivrs
pop
xor
test
leave
jne
ljmp
adc
pop
pop
clc
daa
push
out
stos
icebp
add
icebp
sbb
push
lds
mov
test
jp
mov
lret
dec
or
inc
popa
dec
mov
inc
cs
popf
sub
inc
push
faddp
add
jnp
xlat
sbb
sbb
adc
lcall
in
pop
pop
dec
inc
add
inc
and
push
add
lcall
pop
bound
dec
push
dec
mov
or
mov
jo
lock
lock
test
add
xchg
dec
or
sub
push
and
aad
sbb
sti
xchg
mov
xor
aad
lcall
incl
pop
lret
add
subl
movsb
in
jnp
adc
or
mov
into
inc
movsl
ljmp
push
dec
push
es
mov
sub
mov
sti
xor
sahf
orb
push
std
pop
push
stos
fstps
adc
add
pushf
sbb
fcomip
fcmovnbe
push
inc
insl
cwtl
test
scas
push
into
push
mov
lret
pushl
or
out
add
out
mov
icebp
loopne
sbbb
sbb
pop
jp
out
push
loop
jne
add
mov
cmp
iret
std
add
cmp
pop
cli
pushf
addr16
loopne
cmpsb
mov
ret
icebp
pop
incl
adc
xchg
push
pop
lret
xor
jae
inc
popa
pop
enter
dec
add
sbb
push
jbe
xor
pop
test
scas
jb
or
sar
daa
or
cld
ljmp
gs
ret
adc
add
sub
or
mov
mov
loopne
mov
sbb
pop
loop
fcomip
test
loope
xchg
sub
and
pop
icebp
mov
testl
test
mov
jbe
inc
loop
add
test
test
sti
fsubrs
xchg
call
out
clc
xchg
mov
mov
mov
or
test
pop
rorl
mov
rolb
mov
pop
inc
xchg
hlt
dec
shl
xrelease
inc
js
add
scas
test
mov
clc
js
test
sub
das
pushf
dec
or
jbe
cmpb
or
insl
addb
clc
push
pop
mov
mov
push
lods
aam
sub
mov
mov
dec
add
add
stos
decl
adc
pop
pop
jne
jnp
rorl
push
push
adc
adc
pop
or
pop
cmp
rclb
or
cmp
mov
inc
pop
push
in
xchg
or
stos
jo
rcrl
dec
dec
cs
pop
ljmp
pop
and
mov
push
xor
sahf
inc
and
cld
adcb
lcall
dec
out
mov
nop
fbstp
mov
push
push
mov
mov
fldt
inc
lods
addb
push
adc
mov
add
nop
mov
cltd
and
push
xor
add
mov
add
push
sbb
adc
jge
dec
adc
xor
notb
and
lock
imul
dec
dec
popa
inc
clc
test
cmpb
mov
dec
push
add
ret
pop
lret
pop
leave
ds
out
std
jo
aaa
dec
bound
sub
mov
xchg
lds
stc
inc
dec
sub
mov
push
pop
addr16
cmp
scas
sub
inc
and
mov
and
jg,pt
mov
cmp
xlat
cmpb
push
cmp
push
jl
xchg
add
popf
popa
out
lock
or
insl
jne
in
xchg
adc
inc
nop
inc
aad
js
mov
pusha
jge
pusha
fcoms
and
loopne
ret
cmp
clc
and
ss
cmp
pushl
loope
mov
push
or
mov
ljmp
dec
add
cwtl
add
pop
outsb
or
mov
arpl
pop
test
sar
mov
and
add
and
bound
inc
hlt
pushl
pop
cli
inc
lcall
jns
jno
in
sub
pop
into
imul
mov
jo
push
mov
push
push
sbb
inc
adc
add
test
test
lds
or
icebp
rorl
pop
xor
pop
and
add
mov
nop
xor
inc
cs
or
stos
pop
sbb
add
pop
mov
fwait
test
out
xchg
bound
and
sbb
lds
mov
xchg
repz
and
rcrl
rcr
xchg
or
out
mov
imul
leave
ret
and
decl
in
lock
push
push
hlt
sub
int3
shl
push
cmpsl
add
mov
rcll
sbb
add
fs
jmp
inc
or
orb
jmp
bound
into
push
xor
hlt
lock
add
or
sbbl
push
mov
test
pop
jg
push
jbe
mov
rolb
cmpsl
sub
insb
aam
mov
mov
add
inc
nop
or
mov
mov
xchg
jg
inc
in
xor
or
ljmp
inc
sbb
inc
mov
stos
lock
inc
adc
shr
lret
add
and
shll
inc
pop
and
sbb
xor
ljmp
int
inc
mov
pop
pusha
sarl
or
pop
mov
sub
sub
std
mov
popa
sbb
pusha
adc
or
lcall
imul
add
ljmp
daa
jg
push
out
xor
add
fsubrl
xchg
or
cli
sahf
and
jg
push
rolb
ljmp
dec
cmpsb
outsb
mov
sbb
inc
clc
hlt
test
ret
push
enter
lcall
in
andl
addr16
subb
push
and
add
std
or
iret
add
faddp
pop
push
inc
push
mov
sbb
aam
lcall
ret
pop
xchg
out
call
rorl
or
pop
push
jp
loop
add
sbb
imul
jp
insb
stos
mov
and
cld
push
jne
into
dec
enter
mov
xorl
pop
cmp
push
xchg
or
fbstp
std
jge
dec
ja
outsb
notl
jp
pop
movsl
inc
push
inc
fdivrs
xor
add
pop
mov
xor
sub
fidivrl
pop
cmpsl
sub
shll
rcll
mov
aad
sbb
xor
sub
clc
into
push
pop
lea
rcrl
cmp
sbb
mov
jnp
mov
cmc
rolb
xlat
add
jmp
mov
dec
xchg
mov
xchg
jg
ss
filds
add
test
dec
inc
ds
xor
les
incl
cmp
add
lock
fdivs
jb
sbb
dec
jb
pushf
ss
add
lret
push
jl
lods
cmp
push
jge
in
pop
add
mov
push
jns
pop
test
and
jmp
scas
add
outsl
pop
popa
std
aaa
stos
xor
and
adcb
mov
cmpsb
stos
repnz
jp
jmp
pop
push
push
mov
pop
pop
pushl
and
inc
inc
add
pop
outsl
add
add
mov
cld
hlt
test
lock
pushf
add
jmp
inc
add
xor
cmp
add
dec
pop
icebp
push
pop
lcall
xor
mov
adc
mov
popa
or
xor
cmp
adc
xor
insl
xlat
aaa
inc
push
mov
jle
pop
idivb
xchg
subl
sbb
sti
pop
mov
test
in
leave
sbb
js
mov
sti
push
mov
adc
pop
mov
xchg
cmp
test
pop
inc
cmp
mov
incl
jno
mov
sub
cmp
rolb
testl
xor
adc
jg
dec
xor
in
fimuls
jecxz
cld
mov
adc
jecxz
es
cmc
or
jle
adc
clc
outsb
std
sub
clc
or
mov
jno
test
cmp
jl
rcrb
mov
or
add
pop
add
icebp
xchg
test
xchg
add
add
jo
or
xor
js
out
lock
mov
xlat
rolb
xchg
sti
mov
add
sbbb
add
dec
xor
pushf
xor
mov
mov
or
rolb
add
pop
push
into
pop
shr
inc
out
fldl
test
das
stc
gs
xor
mov
or
add
setbe
iret
pop
cmc
dec
outsb
lods
lcall
enter
sahf
sub
add
daa
inc
insl
cwtl
nop
lret
data16
divl
xor
ret
dec
mov
cmovo
iret
inc
gs
stos
cli
xor
inc
fisttpl
adc
leave
mov
mov
mov
inc
or
in
mov
pop
enter
adc
mov
add
sbb
movsb
jmp
or
lock
divl
xchg
add
ljmp
cmpsb
xor
sbb
lds
pushf
mov
cmp
inc
leave
mov
sub
or
test
nop
repnz
or
fwait
push
cmp
test
clc
add
aam
fisttpll
sarb
mov
test
jp
push
mov
inc
rolb
dec
push
xor
push
sub
add
mov
insl
enter
push
jno
mov
clc
test
mov
mov
sbb
movsl
insb
or
cld
dec
sbbb
shrb
fldenv
flds
pop
sbb
fdivr
icebp
mov
incl
xor
shll
insb
adc
pop
add
test
mov
mov
aad
cli
scas
nop
or
pop
pop
sti
rcr
mov
jl
jo
gs
adc
push
fidivrl
in
fistps
pushf
roll
add
dec
add
insl
call
rolb
shlb
sub
scas
xchg
sub
hlt
adc
xchg
imul
ja
je
filds
add
sbb
and
divb
mov
popf
ja
orl
cs
or
and
loopne
in
scas
ss
call
add
mov
pop
rorb
imul
push
int3
cmp
hlt
fisttps
or
mov
jle
pop
aad
ffreep
dec
mov
pop
mov
cmp
sbb
xchg
nop
xor
jbe
add
dec
pushl
jnp
push
std
xor
cmpsb
rorl
pop
cmp
push
aam
mov
fsub
rolb
xor
cltd
inc
enter
ja
mov
loopne
out
test
and
repnz
cmp
cmpsl
sub
cli
lods
mov
jg
out
adc
and
imul
hlt
push
push
cmp
and
jg
inc
pop
out
roll
fcomi
decl
jecxz
pusha
dec
in
add
daa
and
jp
cmp
add
xor
bound
jno
pop
cmpb
add
mov
ljmp
movsb
cld
mov
pop
mov
icebp
inc
mov
add
jns
sub
jge
add
shll
mov
adc
sub
sahf
jne
fidivrl
pushl
fwait
push
je
ret
out
aas
mov
dec
lcall
icebp
loop
and
and
xor
fbstp
les
je
ficomps
xor
cmp
fwait
push
inc
test
sub
fdivl
sbb
mov
loop
mov
fsub
inc
adc
aad
pop
lock
inc
sub
mov
clc
inc
fistpll
push
inc
dec
test
ss
addr16
adc
adc
les
dec
inc
movd
xorl
jb
mov
loopne
inc
sbb
sbb
lock
jle
insl
inc
jg
repnz
jge
fs
movsb
das
inc
add
jmp
adc
andl
push
mul
dec
mul
fs
xor
jo
subb
incl
mov
ret
mov
adc
mov
push
jl
adc
pusha
and
add
mov
into
aam
in
call
mov
int3
insl
jnp
mov
pop
ss
cmp
xchg
lcall
lock
adc
addr16
push
and
mov
std
out
cs
cltd
or
test
mov
cld
push
jb
push
and
je
mov
cmp
add
lods
mov
push
aam
pop
cmpsb
dec
outsl
cs
xchg
cmc
xor
out
call
pop
or
cmp
je
outsl
pushf
adc
cmpsl
sbb
inc
negb
jmp
add
std
in
lret
jge
add
fwait
call
scas
mov
xchg
dec
inc
lods
or
mov
push
add
repnz
mov
mov
adc
add
bound
add
jp
or
js
jne
std
out
lret
adc
jmp
adc
or
lahf
rcrb
add
push
cmc
push
data16
push
cmp
xchg
iret
push
jmp
inc
data16
xchg
es
sbb
mov
xor
fs
out
add
sub
ljmp
xchg
add
and
aam
add
scas
adc
adcb
pop
xor
mov
add
aad
mov
std
sub
rolb
cs
xchg
std
mov
or
popf
add
mov
stos
push
and
jge
jg
add
outsl
push
add
scas
je
mov
xchg
loopne
cmp
and
pop
inc
pop
sti
dec
jmp
xorb
jge
jle
stos
and
in
aas
or
ljmp
or
xor
call
rorl
pop
sbb
lahf
sub
call
scas
or
mov
mov
aas
sar
daa
jp
mov
scas
shrb
dec
sbb
or
add
push
jnp
inc
das
movsb
mov
movsb
es
mov
sub
and
scas
add
lret
rorb
in
aas
lock
popa
mov
cmp
ret
fcomps
jge
or
pop
mov
push
add
test
xor
mov
pop
pop
and
mov
fistpll
rolb
fs
add
ret
lea
adc
fidivrs
test
stos
ja
lock
push
sbb
lock
inc
and
shrl
sub
add
pop
ljmp
leave
pop
cmpb
jp
fwait
rolb
mov
or
xor
push
mov
and
mov
pushf
stos
mov
test
jnp
sbb
cltd
fcoms
mov
mov
xlat
inc
int3
add
flds
and
cwtl
and
cmp
iret
dec
pushf
jno
mov
mov
fmull
push
bnd
test
ret
pop
rcll
popa
push
shrb
pop
ret
ficoms
aam
cwtl
adc
hlt
lea
shlb
icebp
out
aam
pushf
fwait
xchg
add
inc
int
adcb
pop
rorl
rcrl
pushf
lock
test
sub
xor
cli
sbb
adc
cmp
pop
xchg
sar
mov
dec
add
ds
mov
xchg
mov
xor
adc
mov
decl
fcomps
cmp
dec
sub
repz
inc
mov
pushf
test
add
lret
mov
push
sub
adc
inc
mov
jl
ficoml
add
std
mov
icebp
jecxz
cmp
xchg
loope
sbbb
sub
sarl
mov
or
mov
dec
fildl
push
mov
loope
pushf
in
mov
dec
rcrl
les
mov
inc
repz
jecxz
cs
add
xchg
and
es
sbb
mov
jle
loopne
jecxz
fbstp
mov
mov
loopne
sbb
adc
popa
push
mov
outsl
jb
pop
mov
add
sbb
fwait
outsl
loop
sbb
add
out
xchg
sbbb
push
and
mov
push
or
pop
push
add
cmp
jp
pop
cli
sbb
cmp
dec
xor
popf
std
cwtl
les
xor
mov
shlb
mov
lcall
and
loopne
mov
popa
push
cs
test
mov
sarb
push
or
icebp
je
clc
and
mov
add
sbb
add
add
inc
aam
inc
pushf
push
rorl
or
mov
mov
ret
pusha
pop
shl
cmp
mov
in
out
lret
jl
test
dec
sub
out
xor
dec
scas
lock
cmp
imul
mov
rol
jle
enter
or
xor
pop
jbe
pop
cmp
mov
mov
push
inc
rorl
shlb
into
xor
ret
mov
cmp
outsb
cld
sub
mov
ss
jne
xchg
push
mov
sub
orb
push
or
outsb
mov
mulb
fsubl
ds
clc
iret
sahf
inc
mov
outsl
or
adc
mov
testl
and
push
xchg
out
aad
fildl
loopne
aad
outsb
aam
adc
cwtl
inc
loope
mov
pop
inc
fmull
sub
insl
dec
and
xor
mov
or
lock
inc
adc
flds
add
or
faddl
inc
hlt
call
sub
mov
mov
pushf
lods
push
cmp
testl
ljmp
jp
fst
out
mov
xchg
pop
pop
xor
mov
add
add
cwtl
cmp
mov
xor
sahf
inc
xchg
fwait
add
push
push
add
fnstenv
adc
cmpsl
push
adc
ljmp
add
or
mov
mulb
test
mov
xor
or
mov
jp
fdivl
adc
movups
pop
cltd
aam
jmp
push
div
fs
inc
sti
aam
inc
movb
and
ret
adc
add
loop
bound
outsb
lods
inc
mov
roll
sbb
mov
xchg
push
popf
mov
push
rorb
and
nop
loopne
fsubl
popa
js
fs
out
std
fsubp
xor
push
and
or
xor
xchg
dec
hlt
mov
add
mov
xchg
sbb
ret
js
into
mov
into
xchg
fs
js
fbld
and
dec
lahf
push
xchg
push
push
add
mov
test
pop
xor
leave
and
cld
mov
in
in
inc
sar
push
pop
adc
sbb
and
xchg
roll
and
pop
bound
and
lahf
stos
fiaddl
pop
inc
out
adc
cmp
push
clc
clc
add
dec
add
xlat
les
pop
test
movsb
cmp
in
add
mov
dec
jnp
ja
pusha
pop
pusha
sbb
iret
push
jge
das
in
popf
pop
push
push
cmp
sub
sbb
inc
mov
xor
stos
aad
jle
jae
inc
or
adc
jae
fwait
sbb
push
jne
loope
ljmp
ss
daa
stos
xor
ror
es
adc
push
cmp
jb
adc
pop
lahf
push
sub
dec
pop
sub
decb
clc
xchg
sub
add
or
clc
cwtl
in
in
scas
es
test
divl
pop
test
jne
push
mov
pop
int
flds
cmpb
push
test
mov
ds
mov
adc
sub
bound
adc
lcall
lret
dec
push
xchg
dec
inc
mov
mov
jp
inc
neg
push
test
add
sbb
ret
adc
mov
cmpsb
das
mov
fidivs
ljmp
repnz
insb
dec
incl
push
adc
jbe
popl
loopne
pusha
mov
and
dec
add
or
dec
fimuls
loopne
push
dec
into
test
push
sbb
std
add
xchg
cltd
or
cs
frstor
inc
iret
add
aas
sbb
ja
negl
shll
adc
push
push
popa
cmc
add
xchg
dec
daa
adc
sbb
je
rclb
test
mov
aas
shrb
cli
push
addl
sbb
mov
out
pop
jp
cmp
or
mov
pop
pop
push
cli
and
sub
jae
mov
hlt
mov
add
mov
pop
push
dec
add
dec
stos
cli
dec
loope
mov
out
fdivl
call
xchg
stos
fsubrs
jp
pop
aaa
cmp
incl
ljmp
or
sub
lea
pop
push
std
outsl
adc
jb
bound
add
bound
adcb
jp
aas
shl
add
mov
lock
jno
out
xor
sbb
jecxz
pop
icebp
fsts
xchg
mov
std
jmp
hlt
sub
aas
mov
lock
xor
jbe
jb
xor
inc
insb
push
addb
push
stos
inc
cwtl
pop
jo
adc
push
mov
ja
push
push
xor
mov
andl
jmp
push
or
std
xchg
ret
xor
pop
jg
mov
test
scas
jecxz
jle
ds
lahf
cmp
popf
xor
push
jl
pop
dec
movsl
inc
movsb
inc
lds
xor
xor
daa
pop
ret
int3
jl
hlt
vmread
inc
fstl
sub
mov
imul
fwait
push
and
jp
out
xor
sub
pusha
insb
pop
mov
sbb
out
pop
xor
sbb
inc
inc
xchg
imul
loop
test
dec
imulb
lea
loopne
lock
mov
fcmovnb
inc
jae
and
sbb
add
movsb
sub
mov
outsb
sahf
fcoml
lcall
jo
test
xchg
test
adc
cli
dec
mov
das
add
movl
jg
ja
xchg
test
in
sub
leave
add
rolb
outsb
sbb
scas
stc
mov
ja
cmpsb
stos
lahf
and
add
je
or
aaa
adc
mov
jns
or
testb
xchg
mov
mov
les
test
add
mov
and
shr
sbb
dec
mov
jmp
mov
movsb
xlat
fcoml
clc
je
test
inc
mov
clc
fwait
xchg
cmc
test
shl
stc
push
sub
inc
mov
or
loop
lock
mov
xchg
rcrl
into
and
insl
cwtl
mov
sub
dec
xchg
lret
push
xchg
adc
insl
clc
add
jb
hlt
shll
cmp
jge
jmp
and
popf
int3
decb
loop
xchg
je
push
roll
xor
or
jbe
js
pop
xchg
cmp
push
stos
push
lea
cltd
outsl
sbb
cmp
mov
sahf
jg
mul
scas
push
xor
mull
insb
cmp
and
cs
lahf
add
mov
test
add
or
push
jle
pop
mov
sahf
and
adc
ss
aaa
ljmp
inc
imul
cmpsl
adcb
push
lds
dec
hlt
fbld
outsb
fs
add
sub
push
mov
jg
cmpb
and
pop
mov
lock
adc
or
pop
sub
aam
add
jmp
sbb
push
sbb
lock
cld
mov
shrl
sub
lds
cmc
mov
fs
in
or
inc
xor
pusha
and
and
enter
test
sbb
cld
call
test
push
add
jne
dec
lret
incb
mov
outsb
nop
aam
lods
sub
mov
scas
push
and
out
or
cmp
pop
mov
nop
push
fcompl
loopne
push
mov
adc
xor
loopne
mov
andl
cli
jp
or
mov
jecxz
add
aam
mov
cmp
mov
jmp
aad
insb
sbb
test
roll
cmp
push
add
push
jne
xor
mov
mov
repz
lret
xchg
inc
xor
stos
rcrb
push
add
sarb
mov
jle
push
mov
fs
mov
add
loope
inc
inc
jo
nop
out
sub
pop
sub
popf
in
jge
loopne
daa
mov
shll
clc
sbb
lods
fisttpl
lret
cs
inc
adc
mov
push
jg
das
inc
mov
pop
jb
dec
loope
dec
push
in
rcl
xchg
int
cmp
push
in
dec
jmp
cwtl
adc
xchg
sub
xorb
xchg
movsl
xchg
sub
data16
jo
sub
mov
mov
xor
clc
sbb
movb
mov
push
lods
mov
mov
cwtl
xchg
sbb
jle
xchg
ljmp
push
sub
pushf
popf
adc
push
je
jo
clc
decl
imul
sti
cmp
clc
ret
aas
es
ss
or
icebp
or
lea
sbb
sub
jb
xchg
hlt
adc
inc
sbb
jno
dec
xchg
enter
adc
mov
pop
add
add
pop
mov
sbb
add
ss
sub
sub
lods
sub
iret
xchg
out
fadds
std
pushl
lods
xor
dec
pop
pop
loope
add
pop
push
mov
sub
mov
or
mov
cmp
jmp
dec
clc
push
rorl
sub
mov
pop
cmc
jg
xchg
push
jg
sbb
test
pushf
jg
cmp
and
or
jbe
push
jg
fwait
cmpsb
mov
lret
aaa
jmp
lods
mov
rclb
add
inc
push
shrl
push
mov
test
jns
ss
pop
imul
insb
hlt
lret
sub
pop
sbb
pop
mov
cmp
xor
and
mov
test
out
mov
jo
xor
adc
in
inc
mov
adc
add
int
sbb
es
xlat
inc
pop
push
dec
mov
sbb
mov
jle
mov
inc
or
mov
imul
inc
int
jge
mov
stos
test
notl
inc
repnz
jno
jbe
sahf
call
mov
mov
mov
je
leave
push
es
lcall
mov
pop
or
out
fwait
jo
or
pop
xchg
shrb
add
push
push
jecxz
push
or
pushf
jae
aas
adc
mov
insl
cli
mov
ljmp
add
in
and
decl
sbbb
mov
mov
sarb
sbb
pop
add
cld
outsb
dec
fcoms
lcall
or
loop
and
xchg
sarl
loopne
xchg
std
incb
jnp
xchg
dec
sbb
out
hlt
jge
loope
jno
and
dec
es
pop
xchg
cwtl
fadd
cmp
orl
js
outsb
lock
adcb
pop
inc
xchg
push
fisttpl
and
add
dec
or
and
mov
repnz
in
pop
je
addl
fsubr
jg
clc
or
fdecstp
js
testb
mov
mov
movsb
sub
pop
mov
pop
lods
rorl
and
lcall
jle
pop
inc
mov
push
sub
insl
adc
mov
pop
cli
push
cld
lret
and
orl
mov
cmp
sahf
in
loope
adcb
push
dec
outsb
in
or
fwait
std
jl
pop
xchg
cwtl
cwtl
and
mov
mov
loopne
pop
or
fdiv
jmp
jmp
mov
push
call
divb
mov
insb
js
push
nop
xor
andb
or
and
pop
enter
popf
adc
jne
clc
mov
enter
sbb
out
lock
in
cs
jge
fbld
test
mov
or
rolb
das
sub
addr16
sbb
cwtl
jb
xor
push
mov
jmp
pop
lods
lds
sub
mov
mov
mulb
jl
cmpsl
clc
lahf
lods
aad
jo
push
xchg
sbbb
lds
sahf
test
into
push
movsb
jae
mov
fwait
xchg
add
imul
xor
ds
add
cld
jns
nop
les
cmp
sub
movsl
lock
adc
lcall
push
stos
std
inc
cld
rorl
adc
fs
pusha
or
cld
lea
push
adc
lret
xor
xchg
push
mov
scas
orb
mov
push
xchg
push
push
jae
cmp
jmp
sbb
call
es
movsl
mov
pusha
mov
jg
test
aaa
out
inc
movsl
mov
push
scas
add
push
pop
lea
pop
das
sub
in
dec
pop
add
mov
xchg
outsb
mov
cmovbe
jo
cmpsl
stos
js
loop
int
aaa
icebp
add
xlat
icebp
sub
add
xchg
fcom
jmp
pop
cmp
fimuls
pop
and
xorl
mov
das
and
dec
dec
add
cmp
call
andb
and
mov
incb
mov
aad
jbe
add
xor
repnz
iret
push
clc
sub
addr16
fisubrs
jo
push
ss
outsb
sub
inc
stos
mov
adc
cmp
adc
push
js
in
pop
cmpsl
ljmp
jb
mov
xchg
sbb
shr
ret
add
push
pop
xchg
xor
aaa
sub
clc
pop
add
jle
mov
mov
xchg
xor
movsb
clc
aam
jmp
mov
daa
dec
fcom
leave
dec
xlat
adc
dec
in
cwtl
enter
adc
pusha
add
loop
push
mov
cmpb
push
mov
mov
shll
adc
adcb
mov
scas
xchg
sub
jno
push
add
inc
jg
push
mov
jo
mov
add
popa
sbbl
cmpb
sbb
ljmp
sbb
mov
mov
xor
and
repz
jl
adc
insl
sbb
mov
jge
sar
mov
mov
aad
xor
xchg
mov
fs
adc
ret
call
mov
cwtl
push
inc
je
int
xchg
inc
cmp
scas
mov
sub
cmp
fstl
loopne
daa
ffreep
imul
jb
mov
push
rolb
add
dec
imul
pop
daa
test
loope
push
addb
jmp
in
daa
pop
pop
cli
call
out
fimull
out
pushl
mov
push
push
xor
insb
sbb
hlt
loop
addb
adc
arpl
jle
and
shll
decl
lock
add
xchg
ljmp
roll
ret
mov
popf
jbe
jle
scas
fwait
outsb
and
push
out
ret
sbb
je
adc
cmp
push
mov
push
mov
adc
fstpt
push
mov
testb
mov
orb
ja
sahf
cld
jmp
in
inc
mov
adc
insl
push
orl
sahf
push
shll
rcll
sbb
mov
xchg
mov
incl
pop
fstpl
lods
push
sahf
adc
sub
ds
cmp
andps
addr16
add
outsb
or
das
inc
dec
mov
int3
or
stc
cmp
or
mov
push
sbb
pop
jle
nop
dec
add
mov
sub
xchg
test
not
xor
loopne
pop
lods
js
push
mov
sub
fwait
sub
int
add
push
sbb
push
cltd
out
loopne
lcall
ret
ds
or
sub
cwtl
jb
insl
adc
sbb
dec
or
jmp
mov
sbb
icebp
mov
jmp
testb
dec
pop
jmp
inc
mov
stos
mov
add
cwtl
mov
loop
push
or
outsl
cmp
inc
out
xchg
add
std
dec
fidivs
add
pop
jl
test
sbb
rolb
pop
mov
lods
lods
cs
sarb
dec
lahf
push
xchg
xor
jge
loopne
das
lcall
mov
xchg
data16
cmp
pop
cmp
jp
loopne
das
addr16
cmpsb
out
jecxz
mov
sarl
mov
call
adc
jns
xchg
data16
xor
and
jmp
or
dec
sub
jmp
adc
lcall
jno
fwait
push
sbb
push
mov
dec
ds
sbb
jl
jg
dec
add
sub
add
cmpsb
dec
lds
in
std
js
add
lock
mov
sbb
leave
stc
sub
std
mov
js
shll
out
mov
stos
and
jbe
lret
lahf
inc
pop
stc
jmp
lret
mov
xchg
blcs
xor
pop
cltd
push
or
add
jmp
mov
aam
fcomps
dec
roll
ficoml
dec
cld
mov
into
xchg
cltd
daa
push
int
or
mov
sbb
cmp
cmc
pop
clc
ljmp
jo
repz
mov
mov
fisttps
lcall
or
add
or
sbb
jno
scas
inc
xchg
std
into
mov
mov
test
dec
cld
rcrb
lods
jecxz,pt
jmp
dec
clc
int
les
cld
inc
or
js
sahf
mov
xor
repnz
adc
jle
mov
popa
push
or
pusha
inc
mov
jo
add
xor
cmp
lea
adc
push
adc
mov
xorl
add
lock
aad
int3
js
out
inc
outsl
xor
out
jmp
mov
fsub
andb
xlat
fnstsw
in
repnz
add
lock
and
addb
cmp
pop
icebp
dec
cld
jg
ds
enter
sub
je
add
mov
push
dec
and
pop
mov
cli
mov
xchg
xchg
or
aad
add
lahf
jno
fdivr
loop
mov
sbb
jecxz
imul
sbb
xchg
mov
xlat
add
test
mov
add
lret
cmp
push
add
inc
dec
mov
jecxz
xchg
cmpsb
add
data16
and
mov
test
inc
mov
sbb
sti
lock
js
pushf
jge
xchg
add
or
stos
jbe
std
rcrb
or
repz
and
jbe
idivl
or
mov
stos
test
cmpsb
jbe
js
sub
ret
mov
adc
xchg
mov
outsb
clc
shlb
inc
pop
int3
xor
adc
pop
popa
jne
pop
sub
xor
add
adc
mov
cmp
xchg
add
fdivrl
out
mov
cmpsb
aam
push
pop
inc
dec
pop
cmp
inc
mov
sub
ret
fs
decl
mov
xor
dec
movsl
idivb
push
idivb
pop
sbb
jp
add
sbb
stos
shll
in
adc
inc
in
sub
lock
cmpl
movsb
lahf
dec
daa
mov
mov
add
push
daa
cli
xor
xor
and
fs
mov
decl
pop
cmpb
call
mov
scas
mov
pop
test
xor
add
incl
mov
xor
stc
call
push
jge
sti
inc
push
sub
out
loop
loop
std
cltd
in
pop
add
cli
sbb
ljmp
fisttps
xchg
mov
dec
mov
jae
sti
aaa
std
push
add
aam
mov
imul
pop
jo
cld
rolb
rclb
iret
sub
pusha
lock
call
xchg
mov
cmp
notl
rorl
outsl
inc
std
push
push
mov
outsb
imul
dec
xchg
lods
insb
pop
cmc
mov
incl
cmpsb
fcomip
jo
cmpsl
and
rcll
outsl
xchg
or
adc
loop
out
pop
aam
mov
inc
jo
adc
sti
mov
jmp
mov
sti
stos
xlat
sub
mov
and
mov
loopne
adc
aam
sti
aaa
shrb
add
fimull
and
loope
out
mov
jne
ja
jecxz
ss
mov
call
add
mov
mov
test
mov
mov
orl
decb
std
pop
add
and
sub
xor
dec
test
stos
outsb
gs
mov
rcl
outsl
sbb
dec
cld
dec
or
add
push
lea
sahf
mov
in
bound
ret
push
cltd
jmp
andb
mul
lcall
pushf
and
and
cs
popa
cmp
add
mov
call
cmp
adc
cmp
enter
cwtl
test
sbb
push
decl
xor
in
add
mov
shlb
mov
sbb
add
push
and
fcomip
das
cmp
test
mov
push
xor
mov
fimuls
pop
mov
sbb
dec
nop
xor
ret
jg
sbb
pop
andb
cmp
pushf
lods
inc
ds
lods
ljmp
push
sub
jnp
pusha
cmpsl
push
mov
imul
jne
and
in
or
sti
adc
jg
jle
and
pop
adc
int3
xchg
pusha
call
jg
jg
sbbb
sbb
sbb
mov
and
sbb
bnd
add
data16
push
test
adc
xor
std
push
mov
inc
test
ds
sub
in
mov
cli
push
jno
cmp
stos
icebp
and
add
push
pop
lock
std
sub
jl
in
push
adc
or
les
pop
lods
fmull
out
dec
mov
sub
xor
push
pop
fimuls
cmpb
pusha
adc
mov
jp
ret
cmp
jns
xor
pop
mov
fcomps
enter
not
add
pop
pop
int3
or
pop
mov
cltd
rol
mov
cmp
mov
sub
sahf
add
pop
add
pop
add
test
popa
daa
and
test
adc
rclb
mov
test
lret
mov
ret
mov
insb
dec
jbe
xor
mov
adc
fsubs
dec
test
adc
push
pop
sbb
add
dec
or
push
ss
aas
aad
or
or
das
sahf
fidivl
test
pop
or
pop
test
out
jae
push
outsb
pushl
jns
hlt
push
jecxz
js
call
ss
outsl
xor
add
push
dec
scas
ret
dec
pop
scas
xor
les
mul
inc
cmpsb
xor
sub
gs
cmp
out
sub
fldenv
fiadds
cmp
jmp
adc
add
push
sbb
add
andb
inc
push
push
pop
sub
pop
jo
je
fldenv
nop
push
mov
add
arpl
loop
lods
ljmp
dec
insb
call
inc
jns
arpl
jno,pn
add
jne
add
or
cmp
jmp
roll
add
bound
jbe
jg
sbb
mov
lret
movl
xorb
mov
jg
clc
adc
inc
insl
rsqrtps
adc
ret
add
adc
ljmp
fcmovu
add
testb
out
dec
stos
pop
cli
mov
pushl
incl
mov
cmc
jbe
pop
sahf
push
aas
clc
or
jl
inc
push
xor
clc
sub
cmp
rclb
jecxz
jnp
cmp
mov
icebp
inc
fstpt
repnz
shrb
ss
cmp
cmp
call
loop
ss
js
jg
mov
add
xchg
cli
cmp
adc
enter
dec
les
fdivs
push
sbb
pop
in
enter
add
xchg
lret
lret
xchg
and
push
enter
mov
dec
mov
test
lcall
jle
lock
mov
repnz
ds
mov
mov
cmpsb
xchg
lock
cwtl
add
mov
mov
sti
cwtl
pop
inc
fs
push
jns
cmpsl
pop
ljmp
adc
dec
fisttps
idiv
xchg
mov
in
or
mov
movsl
fs
pop
test
mov
addb
mov
sbb
out
cmp
mov
ret
sub
push
sbb
ret
mov
pop
adcb
popa
xor
add
pop
lods
xchg
mov
and
mov
xor
pop
add
jbe
loope
dec
lret
add
nop
stos
jmp
sub
adc
shlb
sub
inc
in
add
push
ja
insl
xchg
fidivs
jle
xor
fbstp
fimull
ljmp
mov
aam
adc
xor
jo
push
jo
std
or
push
fwait
xchg
pop
pop
add
push
daa
and
pop
mov
fcoml
or
js
insl
orl
loopne
or
jbe
sub
ret
xor
out
orl
cmp
lods
xchg
imul
out
or
lcall
cli
mov
rcll
inc
sub
ds
test
mov
inc
push
scas
inc
and
jns
add
xor
xchg
sbb
iret
sbb
mov
sarb
and
cmp
xchg
mov
pushl
movsb
xchg
arpl
mov
aam
push
jo
imull
jo
shl
or
mov
stos
aam
sbb
mov
sahf
addb
sarb
jo
loopne
out
std
dec
jno
jp
sub
je
adc
xchg
xchg
cmp
jl
push
fbstp
mov
cs
loop
adc
movsb
xor
push
std
push
movsb
add
es
mov
pop
out
test
cmp
std
push
clc
cmp
cmpsb
repz
shlb
pusha
rcrb
arpl
in
dec
insb
lret
imull
xor
adc
stos
push
mov
inc
adc
data16
push
xor
ret
mov
adc
mov
aad
jne
inc
sahf
mov
jle
jo
add
stos
mov
push
hlt
push
cmp
aaa
and
push
mov
lds
or
insl
shrl
aaa
or
mov
and
pop
add
ss
arpl
aam
test
adc
loop
dec
jo
xchg
insb
subb
sbb
add
cld
jle
and
push
xor
test
lret
jo
iret
jecxz
pop
push
enter
out
daa
dec
fldcw
pop
xor
call
cld
cmp
add
jg
push
push
sub
fcomps
aas
inc
enter
stos
cmpsb
push
sti
hlt
pop
sbb
jp
push
adc
pop
loop
dec
push
mov
cmc
shrl
xchg
inc
mov
push
and
mov
je
mov
cltd
ret
mov
push
pop
shlb
xchg
pop
jnp
imul
push
ss
ret
lahf
das
pop
inc
sub
sbb
add
insb
in
out
push
decl
cmpsl
addr16
mov
push
sbb
lcall
lock
in
iret
vpunpcklbw
dec
jl,pt
lods
ret
inc
push
es
mov
lock
incl
dec
lock
inc
in
ret
mov
jg
scas
stc
orl
mov
pop
mov
rcll
sbb
xchg
mov
mov
inc
test
sub
test
sub
add
loope
aam
ljmp
lods
cmp
clc
cltd
push
or
hlt
mov
clc
sub
mov
jle
sub
inc
sub
dec
xor
jl
mov
add
rcrb
lock
outsl
adc
cmp
lea
loop
inc
xor
mov
fisubrl
pop
cwtl
xor
pop
dec
cmp
add
push
mov
mov
mov
cmp
cwtl
pop
call
jnp
clc
add
call
sarb
inc
dec
pop
lahf
faddp
leave
sti
sub
and
outsb
sub
push
jmp
jg
fdivrs
mov
dec
or
and
ret
rorl
pop
push
les
leave
lret
loope
clc
fisttps
adc
pusha
jne
dec
push
lods
or
sub
xor
in
aam
push
pop
jl
jle
xchg
and
jmp
bound
add
pop
mov
andl
pop
je
das
inc
mov
pop
repnz
mov
and
mov
add
movsb
mov
cwtl
push
imul
mov
jl
pop
data16
mov
adc
inc
inc
and
aas
movsb
data16
dec
or
xchg
cs
push
dec
lret
cmpsb
push
incb
adc
adc
jp
orb
cmpsl
sub
inc
std
adc
aaa
pushf
mov
mov
rorb
fs
jge
in
mov
js
push
mov
cmp
mov
cld
fnsave
or
jmp
xchg
push
outsl
jge
mov
sbb
add
mov
pushf
ret
es
mov
add
cmp
push
push
loop
jae
incl
sub
fidivrs
sub
jp
add
fwait
pusha
testl
add
pop
adc
or
mov
das
push
mov
je
shll
icebp
outsb
push
les
push
loop
sahf
push
mov
pop
js
and
mov
xchg
jmp
cmp
outsb
je
mov
sub
pusha
mulb
popa
repz
rcrl
adc
lcall
and
pop
insl
sti
xor
mov
movsb
test
mov
movsl
scas
add
enter
xor
inc
das
push
insl
xchg
mov
mov
je
push
sahf
lahf
cmp
jge
repnz
mov
mov
xor
fcomps
clc
jg
dec
sbb
jecxz
std
mov
or
mov
mov
outsb
xor
iret
aad
sub
mov
or
inc
xor
loop
lock
xor
or
in
add
sarb
mov
jbe
mov
pop
enter
pop
inc
jl
cmp
bound
pop
add
ds
xor
roll
movsb
leave
rorl
bt
lock
in
sbb
sahf
sub
push
jnp
and
push
add
mov
aaa
lods
add
test
cmpsb
ljmp
pop
loopne
fbstp
call
pop
bound
jmp
imul
mov
jnp
pop
push
jo
xchg
adc
or
push
mov
popf
pop
aam
pop
mov
out
mov
add
or
in
idivb
jl
ret
mov
in
in
enter
fsubs
jne
ror
and
je
xlat
call
push
test
push
ss
pusha
arpl
or
pop
sub
and
icebp
jnp
jp
pop
lahf
pop
push
scas
add
and
pop
stos
add
mov
test
orl
jp
mov
adcb
mov
pop
jns
add
dec
add
mov
lcall
sub
jecxz
adc
cltd
cwtl
pushl
rolb
jne
jle
into
xor
xchg
sarl
fs
xchg
stos
jmp
mov
test
push
sbbb
mov
loop
insl
addb
xchg
cmc
loope
pop
cmpsl
or
aam
movsb
mov
inc
mov
rcr
pushf
adc
pop
scas
jg
shll
xlat
mov
out
movsb
movl
mov
js
pop
nop
xchg
mov
mov
add
imul
xchg
dec
sub
xchg
mov
add
fildll
jp
jbe
xchg
xchg
ret
inc
and
push
jl
pusha
out
lret
xlat
mov
push
js
push
cld
push
movsb
in
add
inc
add
mov
or
mov
cmc
mov
pop
add
xchg
shrd
nop
dec
sbb
mov
enter
nop
and
cltd
loopne
xor
test
xchg
lock
pop
std
inc
ficoml
xorl
xor
add
cmpsb
cli
mov
pop
negb
sub
mov
pop
mov
sbb
and
std
xor
xlat
and
add
clc
inc
sub
sar
adc
lret
int3
sub
out
fs
negb
or
pop
sub
insb
add
mov
ss
andl
cwtl
mov
daa
xchg
xor
aaa
sbb
lcall
inc
mov
lds
pop
pop
inc
scas
inc
mov
xchg
aam
out
cwtl
xchg
and
lcall
sub
push
movsl
ljmp
mov
xor
mov
dec
mov
mov
aam
adc
dec
fucom
add
addr16
mov
pop
xchg
dec
fsubl
xchg
cs
dec
filds
sti
xlat
sub
pop
mov
add
xor
mov
shrl
xor
outsb
fstpl
jl
and
inc
scas
addr16
bound
cwtl
jg
std
sbb
ss
out
andb
sti
or
and
push
add
je
sub
push
aad
scas
pusha
cmc
std
fwait
pop
or
cmpsl
push
repz
outsl
pop
out
mov
lcall
jbe
in
pop
rolb
xchg
aam
jmp
pop
jg
fimull
pushf
cli
push
push
push
xchg
push
pushl
outsl
test
les
mov
rcr
fcomip
inc
mov
or
jle
sbb
xor
sar
mov
fcompl
push
aad
jg
sbb
push
push
cmp
mov
or
xchg
loopne
scas
cltd
aam
add
addb
incl
mull
dec
js
out
in
xor
call
push
movsb
jp
es
push
outsl
dec
dec
adc
push
notl
push
inc
jmp
leave
inc
fbstp
pop
cmp
mov
jl
stos
add
insb
cld
sbb
je
shrl
sahf
arpl
xor
inc
clc
mov
adc
inc
outsb
inc
sub
scas
popf
pop
mov
in
mov
out
shrl
dec
xor
xchg
ret
xchg
clc
call
bound
xchg
cmpsl
xor
cli
push
push
add
lahf
cmp
push
mov
scas
add
xorl
test
push
into
pop
pushf
mov
push
ss
in
sub
mov
cld
mov
les
out
and
add
sub
test
aaa
out
cmp
movsl
ret
push
mov
add
push
mov
sub
shrb
and
push
pop
add
jl
dec
sbb
addps
sti
mov
je
push
std
std
dec
enter
loop
int3
and
inc
mov
imul
clc
aad
pop
pop
sbb
xchg
lds
mov
push
cmp
push
loop
add
mov
stc
or
sbb
divl
and
inc
in
pop
and
inc
sbb
jp
mov
push
aam
xchg
push
fwait
jecxz
fwait
push
jbe
in
xchg
lea
add
mov
sbb
sbb
or
lea
jmp
add
into
sub
and
inc
dec
jns
add
aaa
jbe
ret
or
jl
ja
xor
clc
push
adc
add
je
push
sbb
mov
aad
mov
mov
test
lcall
imul
mov
push
push
mov
andb
xchg
add
push
aam
mov
push
push
test
clc
loopne
or
stos
cmp
aaa
imulb
inc
fsubrs
adc
mov
clc
dec
xor
sbb
orb
add
fisttps
paddb
mov
popa
cmp
add
jle
in
cmpl
push
pop
inc
and
fisubrl
fdivs
out
push
xor
je
xlat
inc
stos
cli
inc
sub
aas
xchg
in
push
cmp
cs
push
pushf
fiaddl
inc
add
clc
jg
mov
and
loopne
fs
add
and
add
xor
cs
out
rcll
notb
add
mov
pusha
and
cmp
push
fisubl
adc
inc
mov
rdmsr
and
icebp
and
fnstenv
inc
jmp
out
out
mov
cmc
iret
jnp
mov
daa
add
fistps
enter
je
xchg
out
dec
js
sarl
je
cmpsb
adc
stos
push
test
sti
dec
hlt
add
pop
mov
andb
test
adc
xor
loopne
outsb
clc
notl
add
xor
add
xor
pop
add
xchg
dec
or
inc
sub
jno
adc
pop
jo
mov
mov
jle
cmpl
lock
mov
xchg
lahf
inc
int3
adc
push
divb
mov
stc
or
lret
push
shrb
sbb
jne
or
mov
cs
jle
lods
or
fildll
and
repz
pop
add
icebp
add
add
les
mov
cmc
cltd
insb
test
inc
cmpb
dec
mov
pushl
cs
ret
adc
jge
xchg
subl
sbb
hlt
fbld
or
and
add
rcl
dec
inc
mov
push
mov
cmc
xchg
les
push
and
add
jl
stos
in
sbb
andl
stos
dec
jno
pop
js
cltd
sub
ss
add
inc
xchg
je
ss
add
or
or
shrl
mov
sarb
popf
cmp
xchg
mov
jnp
cli
xchg
and
add
push
xor
cwtl
xor
movsl
cmp
jne
xor
or
aaa
dec
mov
pop
std
popf
rolb
orl
in
mov
ret
lds
add
sub
int
pop
sub
push
rcrb
cmp
mov
repnz
bound
neg
lock
imul
push
add
xchg
or
out
bnd
jle
iret
scas
inc
jmp
in
lock
cmp
sbb
mov
loopne
jnp
add
xchg
call
sbb
ja
std
dec
or
mov
out
cmc
inc
and
pop
push
jne
and
xorb
inc
decb
lea
mov
loopne
mov
push
arpl
pop
lea
adc
adc
mov
inc
xchg
jno
outsb
je
mov
or
test
cld
mov
add
adc
mov
shlb
mov
inc
jb
mov
int3
clc
pop
pushf
add
mov
inc
incl
push
fmuls
nop
push
mov
or
push
add
ljmp
shll
add
aad
mov
repnz
and
dec
dec
mov
outsb
adc
add
roll
mov
adcb
add
jle
stos
dec
sbb
cmp
adc
jp
pop
dec
push
repnz
mov
call
add
aas
movsb
in
add
pop
clc
pusha
inc
push
or
lock
mov
inc
decl
add
xchg
xchg
fidivrl
mov
mov
push
lods
rorb
push
xchg
pushf
mov
push
popa
sbb
pusha
pop
or
mov
jecxz
loop
mov
add
rcrb
inc
pop
mov
pop
push
aam
pushf
shrb
xor
fnsave
xor
in
add
mov
movsl
mov
jo
sub
pop
cmp
push
sbb
sbb
jnp
int3
xlat
xchg
call
aam
jo
mov
push
dec
dec
imul
sbb
js
and
stos
inc
cwtl
mov
jnp
sbb
mov
adcl
adc
fs
andl
push
and
mov
js
xchg
and
test
add
jmp
jecxz
js
ds
inc
orl
jne
jne
dec
out
xchg
adc
loop
jp
xchg
cmp
xor
xchg
outsl
xor
pop
mov
bound
sub
pusha
xor
mov
sub
call
push
pushf
add
mov
ret
add
mov
incl
insl
loopne
pop
cmpsb
fwait
add
mov
test
clc
push
cld
les
adc
xchg
jns
cmp
fdivrs
dec
in
aaa
adc
or
add
mov
js
loop
daa
or
push
lods
dec
xchg
addl
push
les
pop
shrb
inc
jbe
scas
adc
pop
test
fwait
pop
mov
fnstcw
jmp
add
inc
iret
div
xchg
push
lea
xchg
inc
xchg
lret
faddl
and
enter
movb
out
cld
xchg
aad
mov
movsb
sub
pop
jb
push
mov
xchg
testl
cmpsb
nop
sbb
sub
xabort
add
sbb
addb
push
std
cmp
stos
cmpsb
test
jecxz
and
sbb
fcoml
les
ret
pop
xor
out
cmpsl
cld
inc
out
ficompl
xor
jbe
stos
pusha
cli
repnz
cmpsl
pop
sahf
sub
mov
call
push
enter
outsl
mov
pop
adc
sub
sub
dec
pop
lcall
or
inc
test
clc
push
add
loop
jbe
sbb
pop
int3
call
ffreep
addb
roll
push
decl
sub
xchg
jb
daa
fisubs
pop
ljmp
push
frstor
dec
outsb
xchg
ss
pusha
roll
loopne
mov
shlb
sti
xorl
std
ljmp
and
jb
add
gs
mov
or
pop
sub
pop
xor
xor
mov
into
xchg
mov
mov
pop
dec
stos
clc
jmp
jo
push
pop
sbb
push
ja
pushf
cmp
rcrb
dec
scas
mov
jl
xchg
xchg
xor
adc
int3
lret
adc
xorb
mov
pop
mov
ss
test
mov
fisubrl
out
push
jp
out
loope
dec
sbb
nop
push
out
cmc
add
mov
add
je
mov
and
mov
mov
xor
xchg
add
jmp
hlt
push
cmp
sarl
xor
in
xor
sbb
push
les
and
pusha
fadd
mov
dec
cmpb
fcmovbe
mov
xchg
and
sbb
mov
mov
ss
pop
stos
les
adc
lea
add
es
and
outsl
aaa
jge
add
hlt
fmull
add
loope
int
std
hlt
incl
push
lods
dec
insb
push
fadd
mov
rorl
lods
adc
movhps
cwtl
unpcklps
jecxz
js,pt
je
js
fldenv
cs
xchg
sub
arpl
das
inc
loop
and
xchg
pushf
outsl
fbld
inc
add
notl
inc
cmp
subl
clc
push
inc
cmp
int
push
add
add
pop
fdivl
outsb
cld
pop
xchg
cli
dec
dec
sbb
ds
dec
push
repz
cmpps
aaa
and
mov
jg
mov
lahf
adc
push
or
adcb
jg
test
mov
cmp
and
mov
sbb
push
sti
data16
pop
jle
popf
cmp
insb
rorb
jb
pop
enter
xchg
jecxz
sarb
rcrb
jge
das
les
or
or
aas
movsb
add
push
fmulp
jno
enter
call
pop
subb
nop
sub
mov
jecxz
adc
jle
ret
fst
psraw
cmp
jbe
lahf
insl
mov
pop
add
and
stos
fldcw
leave
clc
sub
aas
or
xor
and
test
inc
aas
pop
jle
das
lods
adc
out
push
push
out
lret
and
sahf
rorb
add
inc
dec
adc
ret
cs
push
aad
add
sbb
or
mov
nop
adc
out
push
lret
lea
fs
inc
rclb
sbb
and
push
test
mov
xlat
ss
scas
clc
or
xchg
in
jmp
gs
mov
out
adcb
mov
jp
pop
sbb
scas
mov
add
dec
mov
je
adc
xor
cmc
push
nop
push
sub
bnd
xchg
add
xor
jg
fwait
jno
dec
cld
vmread
out
es
loopne
inc
inc
mov
mov
mov
mov
push
mov
ja
xchg
push
or
mov
dec
fdivrs
add
mov
dec
and
decb
pop
test
pop
mov
mov
sbb
movsb
sub
mov
mov
jno
fisubrs
add
and
out
fildl
je
loop
push
fiaddl
subb
cld
and
andl
insb
push
ds
pop
cli
pop
dec
shr
jmp
fsubr
and
cld
pushl
xor
push
and
add
cltd
cs
shl
push
pop
mov
arpl
lea
aaa
cmp
lcall
cmp
adcl
dec
sti
fstpl
pop
int3
les
cmpsl
and
std
fucomip
and
jmp
dec
rclb
or
add
hlt
test
mov
lock
cltd
cmp
scas
ret
clc
add
cmp
or
add
push
pusha
jecxz
jbe
out
xchg
cmpsb
aaa
jge
pop
jns
adc
mov
rcl
push
add
lcall
lock
fstpt
sub
int3
fdivr
add
xor
mov
roll
ret
enter
and
adc
in
xchg
out
loop
fdivl
xchg
std
mov
dec
and
and
sbb
inc
leave
mov
ret
and
pop
mov
sub
outsb
jl
je
scas
cmc
pop
std
std
add
int3
insb
or
out
mov
call
or
test
ljmp
dec
insl
fimuls
sub
jno
aaa
imul
call
and
xchg
adc
sbb
ret
mov
sub
loop
xor
inc
test
icebp
inc
std
aas
jbe
dec
jp
lret
testl
ljmp
mulb
test
mov
sub
pop
mov
in
add
inc
sub
xlat
jns
add
decl
pop
lcall
push
cmp
pop
sub
scas
fisubs
lock
arpl
mov
mov
add
push
dec
jecxz
mov
jp
clc
inc
push
xchg
fidivl
mov
push
mov
push
js
test
sub
jo
mov
jge
jne
nop
je
pop
adc
adc
and
decl
ret
and
mov
test
fsubrs
xchg
pushf
jb
push
leave
mov
or
lods
scas
movsl
call
xlat
ret
ret
sti
iret
sub
ljmp
dec
aaa
scas
xchg
xor
add
push
push
xchg
sbb
xor
ds
jnp
and
inc
orl
or
sbb
pop
dec
in
push
xchg
pop
aad
xor
test
jle
jmp
or
sti
xor
scas
dec
fidivrl
out
mov
jbe
pop
cli
push
pushf
emms
popa
in
movsb
mov
aad
rolb
lret
int3
adc
push
push
idivl
out
inc
imul
lds
mov
xchg
xor
int3
mov
out
sub
push
les
jno
shrb
sbb
je
add
push
dec
cmpsl
jbe
lret
in
xchg
pop
sbb
out
jbe
sbb
xchg
or
pop
sub
jge
cli
inc
lcall
fs
bound
gs
loop
cmp
pop
adc
jmp
inc
push
mov
cmpsb
rclb
out
decl
inc
pop
dec
ret
fcmovnb
cli
mov
icebp
jecxz
cmc
mov
call
sbb
lods
das
loopne
pusha
or
icebp
adc
into
shr
jl
mov
mov
out
fisubrl
popl
nop
lea
cmp
sti
aas
or
loopne
int
dec
les
or
cld
into
inc
arpl
sub
mov
aaa
insb
scas
and
mov
mov
movl
sbb
mov
mov
call
loop
mov
cmp
rcll
mov
fwait
inc
popa
cld
jmp
adc
xchg
inc
js
decl
inc
lods
jge
and
sbb
std
addr16
add
cltd
add
test
cmp
mov
cmpsl
ret
bswap
sub
xor
xor
cli
rcr
ret
cmpsb
lcall
add
inc
icebp
lea
ja
test
adcl
icebp
pop
mov
sbb
mov
addb
cmp
cld
or
aas
es
jb
std
jmp
int
loope
ret
mov
jns
cmp
jp
out
push
in
sahf
mov
decl
add
or
test
adc
dec
push
sub
push
mov
pusha
das
shlb
ret
vsubpd
bound
mov
sub
or
test
aad
sbb
mov
mov
cwtl
lcall
mov
jmp
test
insl
and
push
jp
xor
and
sbb
push
push
adc
lret
cmp
faddl
cld
call
cltd
fists
pusha
lcall
imul
sub
or
jecxz
mov
inc
jl
fwait
or
jl
in
adc
jo
adc
push
xchg
push
sbb
jmp
gs
lret
xchg
fidivl
inc
pop
out
stc
pop
push
mov
call
cmp
scas
jecxz
jecxz
loopne
sti
ja
push
push
lock
adc
mov
dec
shll
insl
dec
or
add
out
mov
loopne
adc
clc
ret
lods
or
out
clc
sub
push
mov
xchg
test
lahf
pop
fs
fmuls
stos
std
sub
test
lret
lods
pusha
or
sbb
inc
pop
push
cmp
sub
and
jg
lods
test
mov
push
adc
js
pop
fs
or
add
push
call
and
cmp
ret
popa
stos
add
stos
popa
pop
and
pop
sub
stos
pop
lahf
loope
loope
out
adc
jno
xor
test
test
inc
loop
test
dec
std
push
fdivrl
ret
sub
mov
dec
lea
and
and
adc
test
jo
pop
scas
into
or
push
ja
fcmovbe
add
call
or
mov
je
es
dec
aad
add
mov
psubd
add
jg
sub
jg
or
pop
hlt
adc
jmp
push
sarb
subb
push
adc
sbb
add
cmp
adc
int3
pop
xor
mov
je
adc
pop
out
add
adc
dec
sahf
jb
out
mov
enter
fcompl
loopne
adc
aam
fisubl
pusha
into
hlt
xchg
push
insb
lock
frstpm(287
pusha
pop
mov
lcall
test
sahf
test
and
push
movsl
xchg
xchg
in
mov
push
cld
lock
jp
mov
je
add
cwtl
sbb
jae
aas
in
pushf
dec
fadds
mov
lcall
sub
or
sub
add
es
rcrb
fildll
cmp
xchg
add
add
mov
pop
inc
loop
dec
mov
mov
jecxz
mov
jge
inc
test
jns
adc
inc
jo
sub
cmpsl
scas
adc
and
imulb
inc
inc
mov
pop
xchg
enter
idivl
or
addw
cltd
enter
popf
lahf
out
dec
cs
movzwl
xor
inc
pop
jno
int
les
outsb
bnd
sti
xor
scas
ficompl
inc
inc
inc
or
clc
test
mov
imul
cld
jmp
adc
push
adc
sub
adc
fs
call
sbb
cmp
or
xchg
jge
int3
call
aam
out
out
popf
es
mov
push
cmp
mov
pusha
scas
mov
pop
aas
push
push
xor
imul
mov
add
sbb
aam
sbb
loop
xor
add
inc
pop
cwtl
lock
icebp
cmp
cmp
outsb
std
pop
jne
inc
mov
cmpsb
add
aaa
mov
pusha
mov
push
add
sub
jno
pop
icebp
or
les
fwait
lret
push
daa
jp
rcl
jbe
and
movsl
int
lret
inc
out
fbld
sbb
pusha
lds
shlb
push
add
mov
pop
push
mov
cmp
fidivl
cmpsl
sub
mov
fidivl
inc
in
adc
add
std
notb
jg
mov
leave
mov
inc
adc
ret
outsl
mov
pop
mov
ds
xor
mov
cwtl
lahf
mov
add
ret
mov
roll
mov
pop
pop
loop
mov
out
idivl
xor
fmul
scas
push
cld
pop
jae
ds
test
pop
rorb
icebp
push
data16
cmp
sbb
decb
jo
dec
cmp
pop
sub
incb
outsb
jmp
add
sub
mov
outsb
inc
gs
clc
dec
push
jge
cmp
ret
xchg
shl
icebp
push
dec
lret
and
ficoml
js
outsb
add
in
inc
arpl
xor
sub
push
mov
nop
nop
mov
and
out
adc
mov
out
repz
dec
xchg
fs
add
sub
test
fdiv
dec
imul
fiadds
fdivr
iret
sbb
and
pop
adc
or
sbb
cmpsl
fsubrp
scas
test
jns
cs
xchg
test
or
add
ret
in
adc
mov
inc
and
out
shlb
or
clc
xor
orb
mov
stos
or
aam
xchg
adc
aaa
add
mov
lods
mov
jno
jmp
push
and
mov
pop
shrl
inc
cmp
test
outsl
test
mov
xor
push
mov
rclb
sub
add
cmp
aam
sub
pusha
jg
stos
rcl
pop
pop
pop
aaa
dec
dec
push
inc
ja
add
loopne
push
mov
or
into
dec
cvtpi2ps
adc
int3
test
add
mov
inc
negl
adc
cs
sbb
leave
out
xchg
loope
test
push
lods
lahf
push
dec
inc
andb
jns
inc
or
leave
les
mov
push
and
add
xor
push
enter
movsb
fsubrp
movl
mov
sub
inc
jg
clc
lds
sbb
mov
push
fsubl
cmc
dec
les
jbe
push
xchg
ds
ret
push
daa
xchg
xchg
mov
sbb
xchg
xchg
mov
xchg
push
add
adc
push
xchg
push
adc
call
cmp
mov
cmp
inc
in
dec
loop
sub
std
in
inc
cli
notb
sbb
mov
add
adc
inc
test
popa
test
hlt
rorb
pop
rcr
sub
adc
sbb
mov
fstl
ficomps
stos
arpl
add
test
call
jecxz
lcall
add
mov
jmp
lock
je
shlb
lock
lea
xchg
add
psubq
jne
mov
lods
jp
pop
pop
sbbl
nop
cs
ja
mov
enter
adc
sbb
insb
clc
add
imul
stc
ljmp
push
nop
adc
add
pop
mov
sbb
adc
add
imul
dec
scas
xchg
sahf
or
lret
lock
aaa
ljmp
sbb
inc
pushf
loop
fimuls
addb
loopne
int3
int3
lahf
and
pop
rcl
push
popa
pop
nop
xchg
lods
mov
cmp
jb
fstpl
cltd
aam
mov
xor
dec
cmp
jmp
aam
addb
cld
push
lods
lahf
dec
dec
fldt
clc
fidivs
test
jecxz
hlt
stc
fsubr
icebp
jno
roll
mov
in
mov
and
jne
test
cmpsb
nop
lcall
jg
jbe
push
mov
jnp
jae
icebp
jg
add
or
popl
stc
fisubl
add
pop
adc
sar
cmp
push
std
ljmp
movsb
lods
test
xchg
mov
mov
in
add
adc
movq
mov
inc
dec
cmc
mov
mov
hlt
outsl
incl
push
roll
xor
add
pop
hlt
fildll
xchg
orl
or
inc
fmuls
inc
add
and
push
rorl
push
push
fmull
in
mov
xchg
ror
notl
cmpsl
adc
cmp
rcrl
dec
popf
rcrl
inc
dec
jo
in
lods
sbb
inc
sarb
ljmp
lods
stos
mul
jno
or
loopne
mov
adc
cli
out
pushf
or
outsb
nop
icebp
sahf
mov
or
xchg
lods
pushf
cli
xchg
add
adc
std
cmp
mov
mov
jmp
mov
stos
cmpl
pop
lock
lds
jo
mov
sub
bound
xchg
pop
push
jbe
jmp
or
or
or
push
std
cmp
js
ja
lcall
push
ret
pop
mov
mov
bound
call
nop
sar
insb
mov
jmp
and
xchg
adc
mov
rolb
cmp
and
cmp
dec
ret
xor
decb
push
aad
popa
jge
les
jge
shll
mov
xor
repz
rol
pushl
sbbb
sti
xor
cmp
xor
mov
aaa
mov
adc
lock
sahf
adc
popa
rcl
inc
push
ficoml
mov
add
xor
inc
dec
adc
pop
mov
inc
push
mov
scas
stc
dec
call
scas
jl
mov
pop
sbb
adc
fsub
pop
aas
aas
mov
in
adc
aas
cmp
fs
arpl
mov
push
add
mov
scas
ljmp
inc
je
clc
push
jns
or
outsb
stc
mov
mov
adc
call
push
inc
je
clc
mov
push
lret
mov
add
dec
lds
dec
sub
sti
push
aaa
je
data16
jnp
pop
lret
jo
add
xchg
dec
out
push
fcoms
dec
xchg
lahf
dec
add
mov
into
out
in
push
pop
sbb
aam
sahf
dec
push
imul
shlb
pop
dec
sbb
jnp
jle
cltd
stc
mov
bound
cmp
jns
cs
pop
sub
repnz
xor
sbb
rcrl
push
lock
sub
and
sahf
test
xchg
mull
out
sbb
push
mov
push
jbe
mov
sti
cltd
adc
push
in
or
inc
adc
pop
jb
cmp
fdivs
jp
das
pop
test
cs
outsl
mov
adc
mov
out
mov
lcall
test
push
dec
mov
sti
cmp
inc
pusha
and
mov
das
mov
xor
jae
dec
mov
and
ret
xor
jp
orb
ja
clc
jg
in
lods
mov
push
xorl
xchg
and
push
sbb
outsb
test
jecxz
outsl
inc
xorl
pop
leave
cld
out
pop
ret
jns
cs
aam
jg
xor
leave
jnp
mov
loope
cmc
mov
enter
insb
add
mov
mov
mov
mov
mov
mov
loope
or
lret
in
outsl
adc
mov
sub
add
pusha
cmp
andb
mov
add
aam
pop
loop
ja
push
pop
nop
sub
cmp
les
mov
dec
daa
movb
pushf
repz
dec
loop
sti
sahf
add
movsb
mov
ja
add
cli
xor
pop
daa
es
push
inc
stc
or
add
out
je
inc
sub
loope
decb
jle
dec
or
or
rclb
and
ret
shll
mov
xor
rcll
inc
pminsw
jmp
mov
add
add
push
mov
imul
insb
test
mov
gs
fwait
add
jb
idivl
test
pushf
push
pop
mov
mov
ljmp
or
dec
je
push
push
xchg
sub
jmp
fwait
add
lcall
pop
lock
inc
ret
and
xor
cmp
mov
add
cmp
int3
out
aas
mov
pushl
jl
notb
adc
js
idiv
cmp
test
jne
and
aad
mov
lea
push
cld
sbb
mov
xor
adc
enter
aaa
dec
jns
push
push
scas
or
clc
pop
or
push
stc
shr
aad
lock
mov
xchg
lret
es
bound
sub
or
jl
cmpsb
outsl
xor
std
sbb
ja
clc
aad
dec
mov
cs
lea
pop
pop
dec
add
pop
adc
jle
adc
sti
inc
fsubrl
sarl
ss
fistps
loopne
adc
test
int
out
fcomip
pop
inc
stos
je
or
add
adc
sub
add
ret
inc
das
fwait
aam
aam
test
pop
mov
testl
inc
andl
cwtl
adc
stos
cwtl
ffree
sahf
out
add
or
stos
sahf
mov
aad
lods
mov
jnp
cvttps2pi
dec
lods
les
das
sub
xchg
iret
out
cwtl
insb
inc
cmp
push
mov
mov
sub
cs
dec
cmp
sbb
jnp
add
xchg
fadds
js
movsb
dec
mov
add
pop
jg
push
cld
es
out
stos
xchg
push
call
or
decl
popf
loop
dec
popa
bound
pop
in
jns
add
mov
hlt
bound
or
and
movsb
push
dec
and
mov
pop
xor
shlb
loopne
fwait
test
add
enter
jmp
fisttpll
adc
inc
adc
scas
clc
stos
mov
mov
mov
mov
loopne
or
roll
rorl
fs
dec
sbbb
push
cmp
hlt
dec
call
negl
scas
add
loope
add
inc
inc
xchg
fidivs
cld
mov
push
mov
adc
add
out
push
adc
repz
ss
pop
mov
cld
pop
xchg
add
aaa
addb
and
std
nop
mov
mov
push
fs
mov
js
push
and
test
push
push
pushf
mov
sbb
xchg
and
adc
inc
add
add
sub
push
mov
mov
aas
nopl
push
leave
lcall
mov
xor
mov
cmpsb
sbb
cli
negb
ret
fld
loop
inc
mov
jmp
mov
sub
inc
xor
add
test
push
ja
add
test
cs
test
pushaw
push
xchg
xchg
es
stos
mov
add
lahf
jl
xor
fiadds
clc
mov
outsl
fsubs
add
cmp
mov
cbtw
jnp
xchg
xor
incl
aad
sub
cmp
and
xchg
cmp
in
fs
in
sahf
stos
call
inc
jl
adc
or
bound
jb
out
push
clc
xchg
fcoms
add
jmp
inc
scas
adc
mov
in
pusha
out
test
mov
add
int3
xchg
dec
nop
mov
fbld
mul
addr16
add
fs
push
loop
fdivr
in
dec
mov
aas
jnp
addb
and
and
add
jle
add
mov
xor
dec
dec
lcall
sbb
mov
mov
or
mov
je
and
outsl
inc
rorl
xor
shrb
clc
add
cmp
adcl
or
add
pop
test
pusha
ret
in
or
xor
or
jp
jo
xor
stos
sbb
data16
in
xor
jmp
mov
and
and
rcl
daa
test
sub
dec
adc
sbb
jmp
jp
push
test
cwtl
xor
pop
data16
xor
icebp
inc
cwtl
bound
xchg
mov
int
inc
out
and
in
dec
stc
or
mov
add
add
ja
ljmp
stos
cmp
js
jmp
mov
inc
in
inc
mov
incb
adc
cli
inc
hlt
sbb
and
loop
insl
sub
dec
aas
cmpsb
cltd
rcll
je
mov
adc
xorb
xchg
dec
mov
mov
xchg
pop
cmp
xchg
add
inc
pop
jae
cli
dec
imul
lds
xor
mov
loopne
loop
dec
or
aam
iret
add
or
enter
in
je
lret
loop
rcr
cmc
xchg
imul
push
mov
jle
nop
mov
xlat
dec
jmp
lret
jl
aaa
jge
add
push
hlt
xlat
repnz
rorb
adc
fistpl
and
inc
insl
xchg
mov
cld
add
ret
addr16
sti
cmp
xchg
shlb
mov
mov
std
cwtl
jp
pop
mov
xchg
sbb
cmc
incl
shl
inc
and
mov
iret
adc
fcompl
jle
adc
sub
xchg
andb
dec
stos
jne
xchg
push
pop
push
popa
call
sub
mov
inc
das
cli
cmpl
dec
std
or
jecxz
arpl
ljmp
mov
xchg
lret
icebp
xchg
fcomi
xchg
fidivrl
stc
lock
adc
sub
pop
inc
mov
call
dec
jge
inc
nop
lret
fmuls
mov
mov
sti
inc
push
and
insb
cmp
xchg
ret
jo
popa
mov
mov
inc
inc
xchg
add
sahf
adc
mov
adc
adc
mov
jg
mov
or
push
sbbb
pop
loopne
test
cmp
jge
mov
out
enter
mov
jle
in
call
push
pop
and
push
sub
mov
jo
add
in
dec
mov
js
cmp
mov
add
lea
jge
ret
pop
pop
cmp
jp
fistps
or
add
jp
jb
cmp
test
adc
pushf
loop
mov
hlt
addr16
lods
cwtl
sub
cmp
adc
xor
mov
or
fistl
add
adc
or
add
push
mull
ss
cmc
push
call
adc
sub
ss
outsl
js
adc
lret
sub
push
mov
dec
data16
test
shrl
fdivr
lock
jns
sub
add
pop
fnstenv
pop
pop
test
mov
jp
ret
movsl
popl
popf
loope
addb
idiv
add
sub
ret
or
xor
rolb
or
pushl
dec
mov
and
stos
ss
pop
es
fisubl
shlb
mov
mov
repnz
ss
cld
xor
shll
insb
fists
loope
mov
mov
sbb
push
loop
js
js
insl
cmpb
pop
out
fdivs
into
pop
cmc
add
and
pop
xchg
or
mov
adc
sub
mov
adc
stc
in
scas
lea
mov
push
mov
add
ljmp
inc
mov
out
push
inc
and
fistps
dec
xlat
pop
xchg
fdivrl
rcl
adc
into
jmp
shl
aad
aam
cld
sbb
cmp
jo
stos
add
sbb
push
dec
int
ja
push
dec
jmp
loope
wbinvd
cmp
mov
rcrb
xor
mov
out
jge
mov
xchg
pop
cmc
aas
xor
add
hlt
mov
mov
and
das
or
inc
ss
roll
pushf
in
in
andl
jo
xorb
inc
and
fstpl
cwtl
add
cmpsb
push
jb
pop
adc
fcmove
sub
adc
xchg
rorl
sbbb
call
inc
add
and
aaa
push
or
xchg
orb
xor
std
push
in
push
fistl
cmp
decb
or
pop
sub
clc
jg
add
fists
stos
fwait
in
popf
push
inc
push
jp
hlt
sub
lock
push
popf
jecxz
sbb
or
lods
das
add
mov
pop
repnz
sbb
clc
push
add
sub
bswap
pop
xor
mov
xor
push
lock
inc
outsb
push
js
ja
jge
pop
movl
or
js
push
clc
add
fiaddl
inc
lds
add
or
ja
jecxz
mov
pop
repnz
and
cwtl
push
and
add
call
rclb
adc
or
lea
pop
call
add
cmp
push
fiaddl
rcr
push
or
jne
add
jbe
push
mov
fstpl
xor
orb
cli
fwait
mov
or
jp
push
aaa
insb
and
pop
sbb
cmp
icebp
lods
add
push
pop
cmp
decl
xor
sbb
ret
loopne
test
inc
cltd
jbe
je
fdivl
cmpsl
sarl
adc
mov
jno
inc
je
out
arpl
lcall
loop
mov
inc
rorl
fstl
push
or
mov
cli
test
out
ss
enter
aam
subl
fmuls
xor
inc
or
mov
dec
cli
add
lock
cmp
ds
ljmp
cmp
or
leave
call
jmp
mov
in
push
dec
add
scas
lods
add
sbb
insb
outsb
movsb
aam
sbb
fistps
pop
sbb
cmp
adc
pop
movsl
jg
pop
push
mov
sbb
push
push
shl
push
filds
enter
fdivs
mov
pop
mov
push
sub
jns
push
push
push
jecxz
push
outsb
imul
jbe
clc
ja
jno
dec
movsl
xor
ds
lcall
add
aad
fbld
sub
cmp
inc
clc
add
add
sarb
jp
pop
cs
call
mov
sarl
pop
cmp
shr
xor
out
fs
mov
ss
push
dec
dec
xchg
xchg
out
push
out
jae
adc
enter
jp
inc
xchg
mov
sbb
inc
sub
or
in
fiaddl
outsb
ficoms
test
mov
les
pop
mov
test
cli
ret
and
clc
push
jp
inc
jnp
cmc
or
mov
push
adc
mov
adc
pusha
sarb
js
jle
incl
add
and
mov
aaa
insl
push
cmp
popf
push
inc
sub
in
pop
fcoms
xor
mov
notb
lret
lret
in
mov
incl
dec
mov
std
or
ret
push
xor
movsb
jge
and
mov
sub
add
ja
jb
mov
mov
lret
loope
or
jmp
sti
mov
enter
shl
dec
inc
mov
xlat
scas
push
pushf
or
outsb
xor
inc
inc
mov
add
push
sub
test
mov
adc
cmpsl
mov
push
pusha
jecxz
push
and
je
call
lock
clc
sbb
les
js
rolb
incb
repz
into
int
xchg
mov
mov
outsb
out
sar
add
inc
xor
int3
jno
ds
add
cmp
mov
cmc
js
sbb
nopl
arpl
es
int3
push
and
sub
and
inc
ds
movsb
jp
sub
mov
rcrb
lds
ss
das
sbb
shrl
xlat
push
push
stos
movsb
pop
nop
dec
dec
mov
inc
or
cltd
enter
mov
fdivrs
mulb
orb
and
fcmovnbe
mov
ljmp
mov
out
mov
mov
mov
sbb
fbstp
push
cmpsl
cmpsb
or
in
or
xchg
add
add
mov
mov
xor
push
loope
fwait
and
dec
ss
decb
sbb
pop
ret
jecxz
xor
dec
out
push
and
pushf
jbe
sub
mov
inc
mov
and
cmp
inc
cmpsb
ss
subl
mov
inc
cmp
loop
cli
je
test
add
adc
or
aaa
fisubl
dec
jp
pop
outsl
push
pushf
pusha
aad
sbb
inc
xor
or
es
push
rclb
jecxz
ret
cmp
and
lret
add
adc
dec
and
test
adc
data16
cwtl
push
gs
jmp
out
aaa
pop
mov
das
sarb
or
add
lret
movsb
dec
mov
push
mov
aad
pop
fisubl
xor
test
jle
je
js
rorl
dec
xor
mov
fcomps
xor
call
add
cld
sub
das
mov
xor
out
or
sbb
aam
inc
dec
out
cmpsb
fs
and
inc
sbb
and
cmp
fwait
inc
fwait
push
popf
test
les
out
int3
xor
inc
cmpl
or
fisttps
out
cli
push
incl
decl
js
pop
cli
jmp
dec
aaa
andb
ljmp
in
pushf
dec
push
ss
pop
push
subb
in
sub
inc
fmulp
sub
dec
fbstp
mov
rolb
pushl
jp
add
sub
pop
ffreep
xorb
adc
outsl
add
jo
aad
xchg
lea
pop
sar
inc
cld
jbe
dec
and
scas
push
lcall
test
dec
and
test
fiadds
fwait
inc
jl
icebp
inc
shll
mov
rcr
or
xchg
or
rol
mov
ljmp
xchg
inc
cmp
js
sub
shrb
push
movsb
orl
pop
jbe
rorb
sbb
xchg
push
sbb
push
hlt
push
pop
imul
mov
ljmp
jns
dec
sbb
sub
add
and
mov
mov
mov
xor
test
push
pop
and
fisubl
ljmp
in
pop
sub
sti
jae
jo
dec
movsb
clc
ret
jg
mov
pop
test
ret
les
xor
repz
shrb
push
xchg
mov
pop
test
rorl
sub
mov
sbbl
pop
add
insb
add
cld
push
push
pop
cmp
mov
out
xchg
adc
adc
jmp
xor
xchg
or
subl
and
jno
xchg
push
push
lret
out
xchg
inc
lret
movsl
negl
jge
out
cmpsb
or
and
cld
mov
push
xor
push
mov
mov
loop
sbb
arpl
mov
daa
ljmp
jl
inc
fildl
jns
out
clc
mov
call
cwtl
loop
add
fdivr
xor
push
adc
out
cmpsb
aaa
mov
add
insb
and
xor
add
je
insb
fldt
sbb
jns
or
add
dec
add
mov
cmc
shrb
cmpb
mov
push
add
push
das
mov
cltd
xchg
insb
xor
and
push
movsb
addb
mov
mov
cld
nop
out
test
mov
cld
push
into
ror
cmpsb
out
sbb
test
push
rolb
aas
fcoms
andl
cwtl
iret
in
or
fistps
jb
xchg
pop
adc
mov
stc
mov
sub
mov
call
testl
add
push
dec
cmc
push
cmc
aam
sbb
or
aaa
icebp
mov
cmp
movq
add
hlt
cmp
out
nop
mov
adc
fisubrl
dec
sbb
xchg
fsts
lds
xor
jp
pop
sub
jl
push
inc
mov
sbb
std
dec
in
daa
fistpll
sar
cmp
lret
or
jnp
pop
sub
clc
sub
pop
pop
mov
out
push
add
mov
in
mov
dec
loopne
insb
jecxz
push
or
test
fimull
cwtl
xchg
inc
into
pop
push
sbb
jbe
fiaddl
je
fnsave
dec
ljmp
subb
or
fsubs
out
push
add
lret
fisubrl
inc
ss
fdivr
scas
das
xchg
pop
xchg
js
subl
testb
push
jle
cmp
out
jae
cmpsb
test
ljmp
mov
clc
out
sub
test
lcall
ljmp
pushl
inc
loopne
xor
outsl
inc
mov
aam
pop
mov
mov
dec
sbb
mov
pop
sub
addr16
dec
call
sarl
clc
mov
int
push
adc
sub
adc
fcoml
test
or
movsl
in
mov
mov
loope
in
pop
lock
sbb
shl
jo
js
lock
sbb
lds
push
repnz
jle
push
sarl
push
je
push
ret
sub
rolb
mov
xchg
sub
mov
arpl
cli
xchg
sbb
jns
ret
push
fbstp
pop
cld
cmp
pop
cmp
in
jo
fcmovnbe
pop
popf
loopne
sub
xchg
js
sbb
mov
cmp
cmp
dec
cmp
mov
or
adc
adc
xchg
mov
adc
sbbb
and
push
mov
je
ficomps
push
push
inc
add
adc
jbe
out
clc
scas
icebp
or
adc
push
call
repz
inc
xchg
sbb
outsl
cmc
sub
pop
mov
cli
inc
lock
xor
mov
imul
push
jle
cli
mov
adc
or
mov
testb
clc
in
fs
jp
sub
or
fcmovbe
and
mov
xchg
lods
js
cmp
jbe
jb
ljmp
decb
pop
divl
cmpsl
add
sub
inc
mov
or
ficoms
mov
and
std
jns
repz
and
mov
nop
dec
or
adc
pop
dec
xor
cld
mov
dec
xchg
fcomps
push
js
call
repz
sarb
fisttps
xchg
mov
xchg
daa
clc
cltd
jge
or
mov
jmp
sub
and
enter
adc
lcall
test
xchg
pop
test
sarl
mov
add
addb
cmp
decb
push
in
es
cmp
decl
and
xor
xchg
test
cmp
sbb
pop
test
cmpsb
push
icebp
sub
sbbb
decl
xchg
or
mov
cld
pop
jecxz
das
inc
cmc
inc
mov
xor
sub
pop
mov
lret
outsb
inc
jg
and
jl
mov
adc
inc
jg
xchg
pushl
lock
adcb
mov
jo
and
sub
vshufps
inc
in
adc
fisubrl
xchg
dec
xor
mov
push
aaa
fsubs
or
fwait
les
cmc
outsl
stos
inc
test
jbe
sbb
popa
hlt
jmpw
push
icebp
pop
pop
jge
fidivl
xchg
bound
mov
callw
mov
fdivrs
xor
cld
or
sbbl
fidivl
movsl
int
ss
out
jle
sub
mov
je
cmp
sbbl
add
in
stc
pop
jg
ret
adc
add
xchg
movmskps
mov
push
inc
add
sub
pop
push
in
inc
pop
fmull
xchg
inc
sub
jno
loop
fbld
sub
pop
lds
cmpsl
pusha
imul
dec
add
test
xor
cmp
adc
pop
and
sbb
xor
pop
je
loopne
ss
inc
mov
mov
std
or
jbe
rolb
clc
xchg
adc
aad
test
ss
lret
jmp
push
push
hlt
lock
jo
inc
mov
mov
rcll
xorb
jb
orl
jge
cmc
jp
mov
mov
lock
adc
cmp
negb
add
add
lods
sub
imul
loop
inc
sbbl
add
xlat
popa
mov
mov
outsl
jg
mov
inc
sarl
cmp
xlat
mov
call
mov
push
inc
push
mov
cltd
test
sbb
bound
int3
lahf
and
mov
ret
cli
add
push
icebp
scas
pop
push
mov
ret
test
rorl
add
and
adc
inc
fdivs
fidivs
jg
mov
jg
in
push
scas
xor
xchg
test
ss
int
test
sti
inc
loop
cmp
dec
xlat
xorb
push
jo
ljmp
pop
outsl
iret
xchg
and
mov
mov
out
sub
fisubrl
add
sub
dec
adc
inc
nop
mov
enter
orb
cld
adc
std
sbb
insl
icebp
lahf
insb
std
dec
mov
cwtl
loopne
add
jbe
cmpsl
in
pop
dec
add
push
pop
mov
add
fdivr
incl
lock
es
int3
jno
jmp
mov
push
cmp
aaa
xchg
loope
push
enter
inc
adcl
add
add
mov
lods
push
inc
nop
outsl
inc
outsb
loop
push
add
jo
fstpl
xorb
adc
hlt
stos
dec
mov
std
aaa
cld
sbb
push
sarl
cld
sub
inc
pop
mov
jo
lret
push
ja
pop
or
mov
adc
dec
inc
add
inc
inc
les
jo
test
orb
add
push
aam
pusha
pop
inc
aam
push
xchg
pushf
jne
fwait
mov
mov
sbb
cmp
dec
ss
call
or
lds
jl
loop
incb
cli
add
rcrl
out
lahf
or
xor
mov
mov
imul
add
jp
dec
inc
sub
fsts
pop
push
sub
cmc
or
sub
dec
loopne
sub
inc
xchg
mov
push
adc
xchg
jg
and
shrb
xor
push
adc
add
inc
dec
lea
cmp
and
and
push
mov
sub
shlb
mov
xor
es
push
mov
jle
jge
enter
enter
adc
dec
call
mov
sub
mov
imulb
mov
ss
add
shll
imul
sub
paddusw
subl
push
fwait
cmp
inc
loopne
add
push
xchg
adc
xchg
call
sbb
mov
mov
test
adc
lock
rclb
gs
add
sbb
int3
push
sar
mov
stos
push
inc
push
faddl
int3
and
mov
cmp
divb
mov
in
jo
jno
mov
push
jp,pn
sbb
and
sbb
inc
jnp
std
fcoml
or
ret
cwtl
iret
test
sbb
fists
repz
inc
lcall
hlt
push
lcall
add
leave
lock
mov
scas
xchg
xor
mov
jne
test
dec
adc
mov
cld
jbe
add
inc
push
sbb
mov
hlt
ss
xchg
dec
sbb
dec
aaa
cs
gs
pop
sahf
test
out
cmp
add
sahf
lcall
cld
mov
pop
dec
fwait
sbb
dec
mov
mov
push
shrb
jnp
incl
sub
iret
fnstsw
loope
pop
stos
call
dec
mov
imul
xchg
pop
roll
mov
fwait
sbb
popa
jmp
insl
xchg
sti
and
cmpsb
out
fmull
test
mov
out
xorb
and
orb
lret
mov
in
mov
rclb
add
push
ret
ret
pop
add
push
test
or
int3
push
sub
mov
jne
dec
aas
dec
jmp
insb
mov
pusha
xorl
ljmp
or
test
add
std
and
sbb
jecxz
cmpsb
mov
inc
sub
fcomi
add
into
jg
in
mov
sbb
pop
jnp
sbb
inc
pavgw
call
dec
in
js
lret
sbb
mov
fisubs
pop
add
repnz
out
and
or
pop
pop
mov
jae
cmp
push
push
pop
shll
hlt
fwait
test
pop
popa
xchg
and
push
stos
fcom
mov
push
out
and
inc
xor
xchg
add
pop
cmp
stos
aas
jp
mov
dec
out
clc
add
sbb
nop
test
jmp
or
sbb
nop
push
loop
out
shr
test
lods
gs
jl
pop
out
xchg
adc
shll
add
mov
pusha
sbb
xlat
imul
mov
ret
ret
and
sbb
mov
sub
into
psubusb
nop
xchg
cmovp
add
mull
leave
negb
pop
jecxz
xchg
lea
loope
pop
xor
or
aad
and
loopne
mov
daa
jo
push
or
scas
stos
mov
dec
cltd
in
or
test
in
add
mov
and
cmp
aaa
lcall
jl
push
cmp
sahf
inc
stos
pop
out
les
xchg
or
lock
pushf
xor
mov
ljmp
mov
mov
ret
mov
je
sub
aaa
movb
mov
sub
mov
sub
rcll
lret
outsl
in
jmp
push
pop
jp
adc
fsubrs
pushl
xor
or
loopne
mov
jno
fwait
cs
sar
inc
mov
nop
idivl
test
add
and
fcompl
rcrb
push
data16
int
hlt
les
sub
mov
rorb
mov
pop
and
stos
or
adc
mov
cs
mov
adc
repz
mov
inc
mov
pop
and
jmp
pushf
add
mov
sbb
mov
sub
inc
pop
ficoms
lret
cs
mov
je
aam
movl
inc
daa
cs
cwtl
adc
sub
cmovl
lcall
in
mov
adc
xchg
hlt
fisttpl
aam
xor
sub
xor
jbe
jbe
fisttps
sub
cmp
sub
mov
push
sbbb
js
test
jno
fldl
sbb
insb
mov
test
add
pushl
and
cld
dec
adc
mov
mov
xlat
cmp
xor
daa
adc
dec
in
mov
cmp
mov
jb
mov
inc
add
xor
jg
test
or
xchg
add
sub
mov
add
pop
ja
mov
mov
dec
pop
sar
or
mov
add
clc
scas
mov
mov
xor
out
int3
cmp
add
pusha
rorb
and
xor
inc
cmpsb
jle
fstpl
loope
out
rorb
inc
test
sbb
lods
cld
mov
or
shrb
or
outsl
pop
rorl
lds
mov
mov
xor
inc
pop
dec
int3
stc
add
and
cmc
push
cmc
inc
sbb
sar
jecxz
jbe
xor
add
mov
dec
lods
push
jb
push
add
sub
jl
inc
int3
xchg
and
clc
sbb
dec
fisubrs
sar
fs
mov
adc
stos
insb
das
clc
xlat
adc
out
adc
add
repz
scas
insl
fsubs
fmulp
mov
push
outsl
cli
sti
add
mov
add
and
pop
icebp
lds
fcoms
dec
push
mov
and
pop
jbe
push
mov
imul
pop
pop
lock
mov
andb
mov
std
sbb
pop
xchg
arpl
inc
xor
jg
js
and
xchg
fadd
lock
pushf
cli
inc
stos
sbb
jo
shr
rcrb
jle
stos
add
lods
iret
pop
mov
test
test
inc
xor
js
popa
test
dec
dec
sub
jg
mov
push
and
lods
insb
test
jne
in
mov
jmp
mov
in
xlat
push
push
jns
idiv
mov
xchg
cmpsb
hlt
mov
ljmp
stos
popf
rorw
inc
out
icebp
add
cs
icebp
mov
adc
xlat
lret
rorl
push
pop
fdiv
inc
jg
mov
sahf
add
xchg
xchg
add
xchg
arpl
mov
xchg
add
lock
sub
movl
popf
sbb
cmp
mov
xchg
and
sbb
inc
pusha
sbb
ljmp
and
jecxz
ja
loop
popf
rolb
xchg
in
out
ret
mov
icebp
aas
dec
cmc
cs
popa
int3
sbb
sbb
add
dec
call
xlat
movsl
cwtl
mov
test
or
cld
orb
mov
lcall
shl
leave
xorb
into
add
pop
cmpsl
cmp
test
pusha
bound
xor
mov
hlt
xchg
in
adc
das
sahf
adc
dec
stc
cmc
sbb
subl
sbb
sbb
roll
lock
jle
mov
lock
in
notb
add
inc
sbb
push
sbb
test
out
and
dec
jl
arpl
inc
add
inc
jg
dec
ljmp
jno
push
loope
call
mov
xor
mov
out
cmp
loop
mov
xchg
loope
test
pop
mov
xor
xor
dec
mov
jmp
sub
jnp
sahf
in
cmp
pop
inc
filds
sbb
mov
inc
and
mov
push
mov
mov
ret
sub
cmp
push
push
mov
add
jg
dec
sbbl
push
jnp
lock
xchg
mov
push
jb
xorb
inc
jle
and
sahf
inc
cmp
sbb
jmp
popf
sbb
rorb
cmpsb
loope
dec
cs
jb
loopne
push
test
and
lods
iret
in
push
loopne
push
cld
sub
xor
cmp
std
inc
xchg
cs
mov
inc
inc
dec
test
scas
test
rcll
mov
jbe
add
fimull
pop
and
sub
cmpsl
mov
mov
xchg
js
movsb
fneni(8087
mov
lods
data16
iret
test
test
push
shlb
mov
xchg
or
call
mov
cvttps2pi
loopne
rcrl
jp
mov
stc
rcl
xor
rolb
sbb
push
or
lds
cwtl
leave
or
or
adcb
addb
xor
or
add
cmp
add
adc
push
xor
xchg
add
movsl
adc
xchg
jl
cli
das
pop
jno
push
in
xchg
mov
push
loope
filds
inc
mov
jb
inc
clc
sbb
in
add
outsb
inc
aas
test
pop
fs
mov
lcall
rcll
pusha
xchg
and
cli
add
mov
mov
dec
pop
aam
push
pop
lock
mov
adc
adc
jle
or
repnz
stos
adc
jle
jbe
xchg
add
push
pusha
mov
cmpsb
lret
add
decl
add
cli
xor
pop
enter
adc
adc
and
incl
lcall
es
shll
in
add
and
js
xor
inc
mov
push
mov
sub
adc
xchg
cmpl
mov
cmpsb
xchg
xchg
jle
nop
fisubrs
cmp
inc
or
jg
adc
and
jl
jae
sahf
cli
ljmp
xchg
sti
xlat
inc
xchg
cmp
mov
or
scas
mov
fwait
mov
fmul
inc
pop
stos
xchg
adc
je
sub
xor
cs
pop
mov
jo
pop
cmp
pop
cltd
cmp
into
cmp
xchg
icebp
sub
pop
mov
push
lock
push
cmp
into
mov
lret
rcrl
jle
clc
cmp
jp
mov
test
or
in
ljmp
mov
mov
pushf
icebp
fsub
je
addl
lock
fs
mov
jl
std
ret
insl
push
xchg
inc
push
outsb
andb
cs
out
sub
push
lock
ja
sbb
mov
addb
hlt
xor
int3
imul
dec
add
mov
push
es
pop
and
js
pop
jecxz
mov
fistps
dec
adc
jnp
add
jno
xchg
jp
popa
js
cmp
xor
insb
loope
leave
and
mov
aad
cwtl
nop
push
push
dec
movsb
call
mov
fisttps
jg
sbb
ljmp
xor
or
cmp
aam
or
cmp
jl
ror
test
push
sarl
rolb
and
loope
and
ja
mov
dec
push
xor
push
dec
fists
mov
xor
enter
or
sarl
mov
outsl
mov
push
mov
xchg
cmp
cmp
in
jns
idiv
inc
shl
xchg
xor
loope
into
adc
movsb
jg
adcb
ljmp
and
add
std
dec
mov
pop
ds
mov
push
ds
cltd
xor
movsb
jecxz
add
out
sub
xchg
adcl
push
lods
fadds
pop
jecxz
jg
jp
sbb
inc
cmp
adc
add
ljmp
jno
cmp
add
xor
cs
mov
pop
fiaddl
repnz
mov
pushl
sar
jo
add
fs
call
pand
aam
in
xor
popl
repz
pushf
xchg
and
pop
incb
cli
adc
lock
call
push
mov
ret
xor
adc
fdivrs
pop
and
push
andl
mov
shl
mov
and
hlt
pop
add
adc
xor
mov
repz
push
cmc
jg
or
pop
mov
sbb
jmp
das
mov
hlt
adc
stos
cli
insl
dec
add
pop
hlt
pop
sub
fisubs
push
iret
in
sub
xor
adc
aad
in
stos
clc
in
pop
daa
loope
or
pop
data16
mov
push
outsl
rolb
ljmp
inc
stos
shlb
push
loopne
stos
mov
adc
xchg
or
xor
jo
sub
into
adc
xor
xchg
dec
xchg
das
shrb
cltd
popf
xchg
fs
xchg
in
icebp
pop
stos
jge
loopne
push
mov
jl
insl
jmp
inc
cmp
divb
iret
sbb
shrl
jbe
add
aaa
mov
jne
bound
out
xchg
sbb
adc
mov
fbstp
pop
call
mov
imul
mov
add
mov
fsub
add
pop
test
out
aas
fisubs
aas
cmpsl
es
clc
fwait
sbb
mov
imul
test
push
lods
add
pminub
pop
mov
add
mov
test
lods
js
outsl
aam
or
sbb
push
cmpb
loopne
push
cld
fwait
jo
jl
decl
jo
pop
and
test
push
hlt
xchg
add
mov
mov
shl
test
mov
jl
sub
add
dec
pop
cmp
sbb
movsb
xor
sbb
mov
rcrb
lret
enter
roll
pop
mov
stos
or
outsl
mov
and
sbb
call
jg
sti
int3
pusha
js
push
add
mov
cmp
add
jb
inc
sbb
out
aam
adc
test
loop
push
mov
aam
repnz
repz
add
loopne
addr16
xchg
and
stc
test
pop
test
xchg
jl
icebp
nop
adc
mov
dec
jle
cmpsb
adc
movb
es
fistps
sbb
dec
pushf
xor
callw
mov
xchg
jb
stos
insl
push
addr16
call
xchg
aas
push
jl
inc
jp
sub
pop
into
or
pop
pusha
insb
jecxz
std
adc
test
xchg
add
cmp
out
sarb
mov
ja
hlt
mov
pusha
ds
xorb
ror
std
add
mov
test
movsl
add
inc
push
inc
cmp
push
or
cmp
cld
sti
movsb
frstor
cli
je
rcl
ret
cwtl
dec
fisttps
les
sub
sahf
out
adc
mov
or
ret
scas
sar
aas
mov
lret
push
dec
rclb
clc
sub
cmp
clc
xchg
jbe
daa
cmp
nop
jo
cli
add
mov
sub
adc
and
sbb
outsb
or
dec
sbb
pop
and
sub
pinsrw
add
sub
cs
mov
adc
aad
lock
int3
sub
lea
xchg
push
push
idivl
psubq
ret
incl
les
cwtl
push
jge
ds
mov
mov
pop
ret
pop
add
pop
pop
decb
negl
incl
add
ret
fucom
out
or
add
pop
ret
ret
adc
inc
inc
xor
sub
mov
jbe
and
pusha
imul
ljmp
inc
add
inc
add
adc
add
add
inc
add
pusha
idivb
mulb
and
movsb
and
push
adc
addb
add
lret
in
idivl
add
add
xor
pusha
add
sbb
cmp
and
and
pusha
adc
scas
fsts
push
bound
pushl
jp
call
lret
mov
ror
pusha
clc
add
sbb
std
lods
popf
pop
or
mov
add
add
xlat
xchg
cltd
or
adc
int3
mov
or
cmp
jle
cmp
push
shlb
pop
inc
adc
in
enter
push
inc
pusha
add
mov
in
in
call
fsubr
stos
loopne
xor
inc
inc
sbb
lods
pop
add
adc
push
jns
pop
jo
and
cmp
add
xchg
xor
addps
add
in
add
xchg
adc
into
push
push
push
sbb
outsl
int
add
std
pusha
add
cli
sbb
adc
add
inc
mov
inc
push
pop
sub
ret
out
subb
or
add
add
and
and
andl
and
or
rorb
inc
orl
add
adc
addl
mov
or
shlb
pusha
dec
add
pop
or
inc
and
or
sti
fwait
pop
jnp
or
adc
push
add
add
addl
adc
add
subb
cltd
mov
andb
push
add
add
inc
or
rolb
pusha
add
xor
mov
dec
add
or
pusha
mov
rolb
add
mov
jo
mov
and
ss
ljmp
cmpl
add
add
xchg
xor
or
dec
mov
data16
data16
mov
sub
fsubrs
and
cmp
cwtl
or
int3
test
and
cwtl
ljmp
loop
or
jo
shll
add
inc
pusha
push
push
sub
int
orl
jo
adc
mov
insb
pop
in
mov
jo
mov
mov
lcall
test
sar
scas
loop
es
sbb
scas
xchg
or
test
rclb
dec
or
lret
add
xchg
or
es
or
mov
mov
inc
or
or
shr
pusha
mov
push
sub
shlb
andl
or
data16
loop
mov
ret
js
cmp
xor
cmp
sbb
cmp
or
test
or
xor
dec
inc
add
add
dec
cmp
mov
andb
push
insb
and
int3
hlt
test
mov
ret
scas
loope
or
out
mov
dec
hlt
fdivrl
or
or
mov
lods
sub
in
mov
mov
subl
add
out
mov
gs
sahf
or
mov
adc
sbb
add
nop
fs
lcall
adc
add
popa
xchg
ror
jle
call
icebp
in
addb
or
or
or
btr
mov
cmp
inc
negb
cmp
sbb
subl
xchg
jnp
test
je
call
mov
xor
add
and
push
xor
push
mov
adc
xchg
int3
xchg
sarb
xor
jbe
xor
jp
and
fxch
in
pusha
cld
pop
sarb
xor
inc
pop
shrb
or
andb
pop
add
or
push
push
xchg
pop
loopne
push
add
orl
cs
add
sbb
cmp
push
push
add
jp
adcb
pushf
sbb
pusha
shrb
ja
or
xor
test
insl
jno
shlb
or
xor
lcall
push
call
and
pushw
test
es
xor
dec
add
mov
adc
add
jle
es
hlt
data16
shlb
mov
sub
inc
lock
adc
pop
and
or
push
fmul
cmp
jl
fdivs
xor
shlb
push
inc
sub
add
in
inc
push
dec
test
ret
push
push
push
add
cmpsl
add
ret
js
lcall
xor
or
push
jnp
cmp
push
pop
daa
xchg
mov
and
cli
jns
testb
adc
push
int3
push
popl
sarb
jb
mov
orl
add
andb
or
sbb
mov
pop
scas
xchg
enter
int3
rcrb
test
lahf
pop
add
stos
add
incl
dec
add
dec
pop
dec
sub
dec
not
inc
dec
jmp
inc
add
add
ret
movb
push
cli
ljmp
mov
and
test
neg
mov
mov
inc
mov
fisubrl
not
neg
mov
xor
or
ds
es
imul
out
or
mov
inc
or
sti
negl
clc
mov
inc
jbe
add
mov
insl
jae
mov
push
lret
sti
jnp,pt
pop
xor
lret
repz
outsb
lock
mull
adc
add
int3
mov
pop
adc
out
in
sarb
and
nop
nop
sub
and
in
in
ja
js
stc
nop
pop
in
neg
loopne
lock
add
test
in
adcl
dec
sub
sahf
aas
adc
xchg
daa
inc
mov
insb
addr16
xor
jbe
ja
loope
push
fistpl
add
adc
icebp
ljmp
or
and
or
xchg
jns
fsubs
push
maxps
call
jmp
mov
shll
or
add
add
xor
or
clc
nop
fwait
in
outsl
pop
adc
roll
dec
add
or
inc
cmp
jmp
out
add
sar
testb
and
jmp
cmp
test
fldt
xor
jne
dec
adc
sub
sub
dec
jmp
add
sub
jmp
or
ss
mov
int
xchg
out
mov
cld
jecxz
int3
and
add
inc
jmp
test
pop
inc
mov
lods
dec
movsl
and
lea
test
add
and
in
add
clc
rorl
test
push
inc
fsub
ret
jns
xor
popa
es
add
push
adc
fistps
rolb
cmp
cmp
jae
ja
call
mov
xor
aaa
in
lods
jecxz
mov
enter
cmp
mov
sub
mov
dec
je
add
decb
mov
xchg
sub
mov
dec
es
dec
addb
inc
fsubl
dec
mov
shll
mov
xchg
out
dec
pop
gs
inc
cmc
add
out
cmp
and
divb
mov
adc
mov
push
sub
mov
mov
fdivl
push
xor
inc
push
ljmp
stc
in
mov
lods
mov
cltd
ret
add
push
mov
add
adc
xor
stc
int3
inc
js
popa
sub
rorb
lock
jge
push
dec
call
test
ja
push
dec
loope
push
out
jns
repnz
sub
cmp
cwtl
pop
mov
daa
adc
roll
cmpsb
addr16
ficoml
or
push
fcompl
xchg
push
and
cmc
int3
mov
adc
nop
fisttpl
js
fstl
add
adc
clc
insb
mov
arpl
lret
dec
mov
pop
xor
push
jns
add
sbb
mov
jmp
sahf
dec
jne
mov
sub
mov
dec
hlt
sti
fs
hlt
lds
enter
mov
sbb
xchg
xchg
sbb
cmp
pop
fcompl
es
loop
or
popa
or
add
dec
loope
loope
clc
pop
pop
shrl
dec
jge
push
popa
fiadds
lret
mov
je
xor
xor
rcrl
xlat
lea
inc
dec
test
xchg
push
xchg
jle
push
lock
push
mov
lock
xchg
pop
inc
movsl
std
push
mov
or
mov
add
sbb
cmp
pop
pusha
out
outsb
add
pop
faddl
orl
xor
loopne
cmp
jno
sti
bound
movsb
mov
cmpsb
fcoms
fldenv
ds
fbstp
lret
sbb
shl
pop
rorb
jmp
ja
sbb
and
aaa
push
insl
aam
or
add
imul
jns
xchg
xchg
aas
mov
popa
pop
adc
iret
mov
daa
adc
sbb
push
xchg
lea
lret
sahf
outsb
jmp
cld
xor
addb
js
add
lock
cmc
jg
loope
pop
jbe
call
xor
call
outsl
xor
sarl
call
pop
imul
dec
mov
pop
scas
mov
xlat
dec
call
jmp
pop
fldl
jae
jno
add
jbe
sbb
mov
fldln2
add
cld
add
mov
mov
loopne
cmp
add
adc
sbb
xor
popf
dec
subb
jb
add
je
push
inc
mov
nop
loope
cwtl
push
sbb
cmc
stc
mov
add
dec
mov
out
lea
cmp
sbb
and
popf
or
cmp
mov
sub
xor
or
mov
or
mov
int3
bswap
pusha
jb
cltd
in
add
jbe
cmc
out
push
mov
int
icebp
push
xor
sti
sbb
stos
and
inc
jl
shlb
fsubs
enter
cmp
jo
fisubrl
sbb
push
popf
fwait
sahf
mov
or
add
xor
nop
js
cmc
cmp
inc
pop
push
add
inc
cmp
dec
hlt
fwait
xchg
xor
notl
fcoms
shll
xor
and
imul
repnz
mov
jne
mov
mov
mov
stos
mov
add
addb
fistpll
add
addb
cmp
dec
or
hlt
add
inc
add
sub
xlat
icebp
popa
xor
sbb
sub
and
push
inc
addb
cli
fistps
dec
or
shl
loope
cmpsb
xor
int3
adc
je
notl
lock
adc
xchg
in
ret
aad
adc
lods
in
cmp
pop
cmpl
cmpb
mov
or
insl
loop
rorl
sbb
inc
jmp
push
test
fs
in
adc
jecxz
push
fdivs
dec
in
call
adc
movsl
loopne
cmp
in
and
ret
cli
sti
out
pop
mov
lock
pop
add
sbb
rorl
sub
sub
ljmp
push
dec
mov
inc
or
lcall
fnsave
dec
std
mov
push
cmp
lds
sbb
rcll
dec
rorl
sub
jecxz
add
andb
shr
cmp
adc
mov
xchg
jg
fsub
iret
aas
sub
dec
repnz
jl
add
add
shrl
gs
xor
xlat
mov
pop
ljmp
xchg
or
add
js
push
mov
fnsetpm(287
fistpll
lods
xchg
out
test
loop
out
lret
inc
mov
adc
stos
lock
mov
xor
fldenv
ret
insb
push
lcall
lock
sub
add
add
lock
sub
pop
pop
test
mov
cmp
and
sbb
add
cmp
aaa
repnz
and
push
mov
xor
fistpll
jnp
mov
jne
xor
lock
add
adc
jne
pop
dec
jmp
adc
xor
jl
adc
stos
mov
add
push
dec
faddl
inc
aas
sbb
dec
adc
data16
mov
inc
pushf
mov
pop
lock
xchg
mov
adc
cld
bound
int3
in
add
sbb
xchg
xor
pop
in
mov
pop
adc
cmpsb
mov
push
pop
mov
cli
inc
fwait
daa
add
sbb
hlt
add
cld
push
ret
add
lea
call
cmp
dec
and
call
cmp
lock
out
or
sbb
pop
or
inc
notl
dec
xchg
add
xchg
call
sbb
pop
lcall
idiv
or
ret
add
add
and
and
mov
lret
testl
fmuls
lea
pop
cltd
pop
lods
fildl
fidivs
mov
xor
mov
testl
sbb
loope
flds
sbb
mov
add
mov
loop
mov
mov
loopne
into
fisubl
pusha
xor
lock
mov
sub
dec
fdivr
cltd
es
int3
into
insb
sbb
ss
push
popa
lods
nop
jmp
or
xor
inc
loopne
lret
data16
add
mov
inc
ret
shr
sub
push
in
pop
pop
lcall
fmull
fdivr
xor
movsb
mov
xor
loope
dec
mov
and
or
xchg
or
inc
add
in
inc
add
adc
mov
fstp
loopne
mov
out
dec
cs
inc
mov
adc
mov
sub
sub
mov
out
dec
add
pop
into
adc
pop
cmp
xchg
xchg
pop
cmp
nop
es
dec
loope
pop
mov
cld
fstpt
mov
sbb
push
rorb
into
xchg
ret
scas
pop
dec
ljmp
cmova
into
outsb
add
or
pop
call
xchg
fildl
mov
cld
sbb
sti
ja
sti
daa
xlat
mov
cmp
jne
mov
icebp
add
ja
mov
jmp
loopne
andl
inc
sysexit
fistps
xchg
pusha
movsb
not
stc
mov
movsb
mov
pop
test
push
adc
cmc
jmp
fisttps
out
xchg
stos
inc
xor
sbb
dec
hlt
mov
inc
pop
nop
stos
or
and
inc
sbb
or
loop
push
dec
arpl
push
in
test
mov
icebp
notb
loope
fcomp
into
mov
daa
repz
sbb
mov
inc
inc
cmp
shll
mov
sbb
out
mov
in
mov
jp
ljmp
inc
aam
sbb
mov
mov
das
nop
sub
ret
cmp
push
es
mov
in
sub
add
aam
pop
in
cmp
xchg
sbb
cltd
sub
movsl
dec
fists
dec
xor
in
arpl
out
mov
add
push
rclb
pop
mov
icebp
lcall
xor
jae
add
xor
mov
xchg
pop
jno
stos
adc
push
clc
fbld
aad
or
ljmp
dec
inc
clc
jecxz
sub
lret
sbbl
scas
sbb
out
or
loope
mov
push
rclb
mov
push
cld
lods
cmp
or
cs
rcrl
mov
adc
dec
jnp
call
sbb
sbb
push
shl
mov
push
repz
mov
repnz
push
not
pop
inc
push
push
sub
das
pop
popf
jo
pusha
mov
cmp
fldt
mov
adc
lahf
push
jl
jl
mov
sbb
pop
dec
fwait
pusha
scas
or
in
pop
clc
lock
jo
shll
ret
xchg
call
repz
cwtl
adc
je
movsb
pop
aam
dec
xor
inc
sbb
add
das
dec
add
imul
mov
add
xor
call
mov
sarb
and
sub
es
in
pusha
mov
sub
sti
cwtl
adc
aas
add
sub
mov
sbb
loopne
mov
push
cmc
add
xchg
cmp
xchg
inc
dec
aam
cwtl
adc
ss
push
cmp
sub
adc
mov
sub
aam
aam
iret
rcll
or
mov
or
or
je
adc
div
adc
loopne
addr16
loop
outsl
push
fcom
lcall
mov
lret
test
lidtl
push
jmp
shlb
push
data16
loop
jle
add
outsl
push
outsl
lret
xor
mov
mov
adc
loopne
add
push
add
enter
cmpsl
xlat
mov
dec
xchg
pmaddwd
or
std
addr16
jge
and
cld
xchg
in
and
push
pusha
add
popf
jle
add
push
jmp
cmp
ja
lea
popf
cmpsl
xchg
sub
or
add
ss
loopne
loopne
add
add
loop
aad
adc
sub
loopne
sub
sbb
fstpt
add
add
inc
shrl
test
rcll
xlat
neg
sbb
push
neg
mov
jns
aad
aam
mov
add
push
insb
mov
sub
push
push
push
frstor
fistl
aas
aas
fxch
push
outsb
add
adc
out
mov
mov
outsl
ss
cld
push
push
lea
ret
push
adc
sbb
add
test
lock
fiaddl
xor
and
xor
dec
push
jmp
lret
loope
clc
inc
and
rcr
ret
xor
pop
push
out
loopne
push
jge
aam
push
stos
stc
and
and
add
ret
and
out
dec
loopne
mov
mov
loope
push
inc
stc
xlat
out
clc
or
leave
ret
neg
xor
sbb
sbb
sbb
bound
pusha
and
inc
andb
cli
ja
add
inc
sub
mov
xchg
push
inc
sti
in
es
xor
add
sbb
pop
fidivrs
push
adc
je
clc
ja
mov
into
shll
mov
pushf
lods
add
cli
sub
xchg
enter
dec
jne
inc
flds
pop
mov
jle
mov
xchg
fistl
iret
loop
inc
addb
lock
cli
daa
and
xlat
mov
inc
sub
pop
scas
sbb
jmp
cmpsl
add
inc
addb
pop
lock
dec
mov
cs
stos
popf
add
or
adc
outsb
inc
push
jns
test
bnd
push
push
aas
call
in
sar
mov
mov
rcrl
push
jmp
dec
inc
aas
add
fadds
rorl
ss
adc
adc
push
fistps
stos
ret
jne
stos
mov
fisttps
icebp
das
dec
inc
sbb
sbb
stc
icebp
sbb
in
cmp
aas
sub
mov
incb
loopne
stos
inc
add
into
jmp
add
and
aad
addr16
add
popf
jno
xor
xchg
mov
fsubrs
inc
push
cmp
fisttpll
pop
rclb
gs
pop
jmp
daa
mov
inc
pushf
dec
adc
ret
int3
xchg
or
dec
test
cmc
clc
adc
add
stos
sahf
enter
lock
cmp
lock
adc
fcmovnb
add
jp
push
add
adc
pop
mov
mov
aam
pop
add
gs
jmp
addr16
loope
or
and
xor
loope
icebp
test
aaa
mov
pusha
dec
jbe
jnp
jo
jl
fcomp
fsubl
les
jge
mov
jne
popa
add
ret
inc
out
or
jnp
dec
je
loopne
or
mov
cmpsl
aas
sbb
cli
int3
pop
loopne
clc
loop
xor
movsl
incl
push
jecxz
add
pcmpeqb
daa
scas
popa
lret
lcall
pop
xchg
push
jle
shrb
cmp
jne
dec
aas
scas
add
jmp
mov
subb
or
xor
lcall
mov
sub
pop
adc
and
pop
icebp
rolb
sti
jmp
mov
add
add
lds
enter
sbb
test
adc
inc
popa
incl
jae
mov
int3
movsl
andb
adc
cmp
adc
pop
pop
fdivrs
inc
sbb
cli
mov
add
pop
mov
or
sub
push
imul
jmp
in
and
xor
add
adc
jae
aam
sbbl
clc
out
jle
out
mov
adc
mov
cmp
ja
cmp
push
pop
or
cld
out
inc
mov
add
shlb
pop
lcall
call
dec
lods
mov
ret
loope
fchs
loopne
idivl
pop
mov
repz
ret
jge
out
add
dec
ret
outsb
push
push
test
push
xlat
ljmp
sub
aam
scas
pop
outsl
pop
ss
add
clc
adc
inc
cwtl
rolb
les
data16
sub
pushf
ficoms
mov
inc
bound
arpl
imul
ljmp
repnz
sub
inc
rorb
sbb
dec
sbbb
je
pusha
and
stc
jecxz
cmp
xchg
lods
jbe
mov
xor
icebp
movsl
dec
daa
jo
jge
fmull
not
pop
hlt
mov
mov
pusha
or
shll
jmp
je
add
mov
dec
add
and
fiadds
fiaddl
mov
push
add
pop
and
fwait
outsl
bound
fsubrl
testb
dec
fcomi
test
pusha
rorb
in
adc
nop
xor
dec
shlb
sarb
ret
fisubs
scas
mov
nop
add
inc
inc
jl
je
dec
fistpl
std
das
xor
mov
xor
dec
xor
pop
inc
stc
test
jne
scas
xor
aas
dec
jp
mov
iret
icebp
out
out
cmp
dec
xchg
push
inc
cmpsl
lea
stc
xor
incb
cmp
mov
call
xchg
inc
je
dec
and
std
lods
add
jecxz
add
ret
out
pop
jecxz
cld
adc
push
inc
pop
jne
fimull
test
and
sbb
push
pop
mov
push
lds
scas
mov
repnz
test
inc
add
mov
pop
add
outsb
mov
jp
mov
adc
push
and
xchg
sbb
mov
inc
xlat
ljmp
add
loope
es
and
std
vmread
repnz
aad
jmp
cmp
jb
add
and
add
jmp
jbe
jne
inc
push
fsubs
jo
pop
outsl
sbb
lret
bound
inc
lea
lods
scas
call
dec
push
push
les
lock
loopne
sub
mov
ret
mov
fldenv
sbb
xor
jmp
and
popf
push
jmp
and
cli
out
scas
xchg
mov
add
repz
adc
test
outsl
nop
stos
xchg
mov
jo
ret
mov
cmp
test
add
xlat
in
repz
cmc
jp
xlat
dec
and
out
dec
inc
adc
scas
sar
test
out
xor
lock
xchg
xor
push
inc
std
jge
test
imul
push
dec
jmp
or
inc
sbb
push
add
adc
ret
lods
imul
mov
loop
sub
jg
fsubl
sahf
bnd
mov
cmp
push
cmpl
add
js
out
push
mov
push
sbb
add
lock
adc
lock
xor
push
pop
arpl
sub
mov
fdivl
push
rorb
popf
or
notb
test
sarb
aam
xchg
add
mov
inc
add
loop
roll
ret
addb
mov
mov
mov
loop
fcom
mov
add
imul
fstp
scas
xor
sbb
movsl
mov
or
cmovne
mov
push
aam
xor
rolb
pop
pop
js
dec
pushf
rclb
mov
aas
xor
ficoml
or
js
mov
scas
loopne
mov
or
xchg
xchg
mov
dec
push
cld
and
cmp
fcmove
pop
mov
jo
lcall
inc
and
xchg
pop
mov
gs
ret
sub
movsb
rorb
in
call
sbb
mov
and
push
insb
insb
sbb
xchg
fcoms
pop
mov
or
add
mov
sbb
add
ret
mov
push
sbb
cmp
or
jns
and
dec
imull
shr
test
xchg
shrb
aam
das
add
lcall
push
sbb
shlb
sub
fisttps
aam
mov
jl
jb
dec
push
inc
jbe
and
loopne
fidivrl
mov
push
out
mov
sbb
minps
lock
repnz
inc
jo
pusha
clc
add
stos
adcl
mov
push
call
adc
mov
push
jecxz
dec
pop
aaa
or
xor
xor
pop
call
dec
mov
jno
int
xchg
nop
push
jnp
push
fmull
mov
fsubrp
shlb
ret
jnp
mov
js
f2xm1
xlat
add
xorb
outsb
cmpl
mov
inc
dec
loop
xor
dec
sub
mov
mov
jmp
jb
mov
add
test
lds
pop
std
jmp
dec
add
push
data16
or
in
dec
inc
dec
add
mov
mov
fcoms
xor
xchg
add
and
lea
and
sbb
xor
mov
fildl
push
lret
ficoms
push
ss
cli
iret
add
jo
outsb
mull
data16
push
pop
cmp
shrl
push
adc
fsubrs
cli
fcoms
loope
jge
add
filds
mov
leave
rcrl
dec
inc
adc
subb
pop
mov
in
sbb
mov
inc
ja
lahf
sbb
ficoms
lcall
cmp
and
push
mov
push
repz
clc
sbb
xor
lea
or
shlb
or
call
sbb
mov
lock
and
shll
mov
jne
rclb
rorl
loopne
clc
enter
movsl
int
test
mov
js
sub
sub
loop
fdivp
ljmp
loop
mov
std
push
mov
test
out
add
fdivp
or
push
out
push
push
push
addr16
call
stc
pop
daa
loope
lods
shl
scas
mov
inc
ljmp
dec
sbb
nop
pop
lock
lock
and
or
mov
xchg
add
add
xlat
xchg
jae
sbb
fstps
xorl
sahf
and
out
or
insl
cmovg
lock
test
inc
stos
sbb
jp
mov
jge
mov
lret
sbb
push
mov
enter
push
cmpsb
adc
clc
daa
add
cmp
xor
dec
and
mov
nop
sub
add
rol
sbb
sbb
adc
psllq
dec
rcll
sti
lock
neg
orb
stc
pusha
fmul
clc
aad
fwait
adc
push
scas
out
icebp
jno
les
xor
push
ljmp
ja
psubd
adc
jg
sbb
js
add
inc
push
mov
pop
loope
adc
push
rcl
lahf
shl
mov
add
dec
mov
jl
cmp
mov
mov
sbb
dec
roll
pop
inc
pusha
or
sarb
pop
mov
roll
sub
mov
rolb
or
in
dec
mov
enter
adcl
adc
jmp
add
mov
xor
sub
add
lock
add
sbb
lea
cld
lahf
arpl
xchg
mov
into
xor
mov
mov
jns
ret
cmpsl
out
rolb
push
jne
push
ljmp
loop
dec
inc
cmp
pop
sub
jae
mov
arpl
movsb
add
loopne
dec
push
xor
lea
sub
jecxz
mov
fiadds
imull
cmpsb
aam
and
sub
and
add
push
and
add
or
mov
lcall
mov
pop
outsl
inc
adc
out
xchg
or
cmpsl
mov
fcomp
sbb
clc
push
push
push
xchg
shlb
jg
adc
cmp
jbe
add
movsl
or
mov
das
clc
adc
cld
jmp
jno
test
cmc
je
arpl
sbb
test
cld
repz
sub
add
pop
jae
jge
dec
shrb
cwtl
fdivl
mov
add
sbb
call
xlat
enter
pop
mov
out
push
test
mov
cmp
add
xorb
popa
mov
sbb
icebp
roll
jns
shrb
mov
and
in
nop
push
jo
and
add
outsl
push
lock
dec
testb
jae
gs
js
js
adc
dec
repnz
add
lcall
bound
pop
cmp
test
cli
jmp
fsubr
xor
ret
add
pop
xorl
pusha
inc
mov
test
outsb
or
adcl
inc
fdivs
and
nop
xchg
jnp
sti
call
cld
sbb
adc
mov
aam
inc
pop
lock
adcb
add
test
mov
push
call
push
and
bound
mov
sbb
and
add
add
pop
inc
shrb
xor
lods
inc
sub
cmp
jo
mov
rorb
aas
cmp
add
jno
popa
lret
ficoms
adc
icebp
fwait
adc
mov
sub
ret
daa
jg
add
add
mov
insb
or
mov
stos
cld
fcompl
loope
add
xor
add
stc
push
jge
imul
push
jne
push
dec
movsb
pop
mov
mov
cmp
add
inc
pop
push
xor
and
push
xor
mov
lds
sub
fistps
sarb
cs
xor
pop
jmp
jmp
mov
sub
jmp
lods
idivb
les
push
jp
sbb
pusha
mov
aaa
mov
hlt
inc
mov
pop
xchg
mov
shrb
adc
sbb
dec
sbb
push
lods
add
jg
push
push
insb
dec
insb
or
subl
aad
add
add
sbb
add
xor
xlat
adc
and
and
add
rcr
add
fsub
sbb
jo
sbb
pop
and
sbb
test
jle
faddl
and
or
les
push
outsb
add
roll
xor
add
fstpl
addl
mov
inc
stos
adc
in
add
or
add
push
mov
push
add
add
push
xor
or
mov
or
mov
add
and
repz
cmc
pop
lahf
inc
xor
inc
inc
push
mov
ss
push
xor
test
xor
jecxz
cmp
jbe
filds
lods
and
mov
nop
pop
clc
or
or
inc
mov
les
test
cmp
aas
pop
sbb
xchg
or
jno
cmpsb
mov
fcoml
jmp
pop
dec
dec
cmp
jae
aas
add
rclb
mov
lret
cmp
inc
daa
mov
cltd
xor
cwtl
popa
sub
dec
mov
push
rcrb
test
jne
add
stos
js
pop
xchg
out
jge
or
cmc
ss
add
rcrl
mov
cmp
cmp
popl
jno
add
or
jnp
mov
mov
testb
jg
push
in
imull
in
mov
aas
mov
out
pop
or
addl
icebp
cmp
sbb
jmp
pop
in
and
cmp
add
aas
sbb
adc
rolb
add
and
jmp
dec
fsubl
enter
sbb
and
or
jmp
lret
decb
mov
shrb
adc
xchg
dec
jae
inc
push
push
movsl
jo
xchg
jno
mov
xlat
rol
sbb
sbb
cmp
icebp
mov
fldl
jecxz
add
inc
cli
add
pop
test
test
roll
sbb
add
fcmovu
mov
inc
push
call
cmp
fstl
je
xor
or
mov
mov
xor
push
xor
push
inc
or
rol
pop
mov
mov
mov
mov
push
sbb
add
faddl
loope
les
jnp
push
or
mov
nop
or
pop
lods
mull
loope
das
fdiv
mov
adc
adc
cmpps
sbb
lock
push
icebp
outsl
in
xchg
sbb
addb
adc
pop
pop
adc
sbb
adc
mov
pusha
ret
inc
xor
aam
xlat
lock
adc
push
push
push
adc
fdivl
xchg
rorl
les
add
aam
sbb
sahf
or
loop
cmp
jne
inc
rcr
loopne
call
es
shrb
jle
xchg
push
xorl
xlat
mov
js
pop
sub
adc
outsl
inc
cmp
and
lods
icebp
insl
or
adc
cld
fimuls
daa
push
js
mov
adcb
scas
adc
dec
jb
sti
lock
or
aaa
xor
pop
cld
sub
lret
jmp
xchg
cmp
sbb
or
adc
push
addl
dec
cmpb
dec
ret
jge
adcl
mov
sub
inc
xor
push
mov
xchg
sbb
movsb
iret
mov
push
call
add
sbbb
jge
scas
lock
pop
xor
icebp
addl
scas
or
ficompl
or
jo
in
es
scas
fisubl
mov
xlat
mov
outsb
inc
clc
idivb
dec
lea
push
lea
push
push
loopne
je
and
nop
cmpsl
dec
movsb
push
shl
xchg
cmp
add
inc
add
in
sbb
dec
test
sbb
in
fsubl
cld
lea
out
or
sbb
shll
and
jae
xor
outsl
xor
sar
add
sbb
aaa
ljmp
mul
fwait
mov
mov
inc
in
aam
pop
gs
icebp
sub
pusha
mov
sbb
and
notl
aam
sbb
fimull
mov
adc
hlt
dec
neg
inc
hlt
pop
lock
jns
inc
and
ret
or
mov
mov
bound
fisubrs
dec
loopne
add
ljmp
mov
fnstsw
add
add
push
cmpsb
dec
out
imul
hlt
inc
hlt
push
pop
cmpsl
inc
cltd
dec
stos
in
push
xor
or
roll
xlat
xchg
nop
out
mov
js
stos
loope
mov
jns
mov
pop
out
xchg
cmp
sub
mov
cmp
adc
movsb
sub
call
inc
in
add
loope
jno
pop
testl
lods
bound
xchg
sbb
call
push
push
addr16
hlt
pavgw
out
add
add
cmp
lock
mov
xor
aad
mov
sub
mov
add
mov
add
lahf
push
adc
ror
enter
mov
sbb
out
loopne
out
xor
sahf
and
adc
mov
and
cmpsl
pop
or
mov
sub
add
add
mov
cmpsb
jno
adc
hlt
loopne
xchg
xchg
and
out
mov
xor
aam
add
pop
jno
lock
cmp
jmp
and
jbe
or
rcll
mov
sti
les
icebp
ret
in
add
ss
sti
add
pop
ljmp
int3
loopne
insb
or
pop
int3
fiadds
and
enter
mov
std
xor
pop
ret
push
std
imul
sbb
fisubrl
push
xor
push
cmp
int3
jge
rolb
dec
iret
repnz
scas
add
fs
call
mov
jmp
add
add
inc
loope
mov
and
aas
es
add
jo
cmc
std
xchg
testl
xchg
xchg
push
vmread
ja
mov
lock
jmp
and
pushf
decl
les
cwtl
sbb
sar
icebp
inc
incl
add
xchg
jecxz
sub
mov
clc
add
push
test
or
addl
add
jmp
push
fsubrs
add
dec
loopne
push
call
arpl
jae
or
imul
jecxz
inc
jmp
mov
outsb
mov
add
sbb
bound
mov
push
mov
ljmp
cmp
jbe
xchg
nop
lods
adc
sub
sbb
xchg
mov
je
inc
subl
add
inc
rcrl
sbb
pop
jle
mov
mov
push
scas
jmp
xchg
xlat
pushl
daa
jmp
daa
cwtl
mov
or
mov
mov
add
negb
call
add
inc
out
rol
inc
and
push
sub
sub
xor
push
inc
sbb
jmp
clc
or
out
mov
mov
outsl
xorl
bound
popa
add
sub
gs
cmpsb
cmp
testl
or
dec
stc
sub
sub
mov
cmp
hlt
fidivrs
sub
or
sbb
imul
mov
adc
add
or
add
mov
sbb
mov
shl
pop
in
jnp
fimull
fidivs
and
in
jb
cmp
loop
sbb
shr
add
mov
add
dec
test
push
cmpsb
lret
std
adc
sbb
shll
nop
movsl
mov
push
lock
popa
cwtl
movhps
add
inc
lods
pop
fidivs
adc
pop
pop
lock
inc
jg
jbe
inc
mov
adc
inc
lock
sahf
push
mov
rcl
mov
loope
ret
adc
or
fistl
push
sub
sub
rolb
pop
dec
loop
mov
cmpsb
xchg
test
notb
push
or
pushf
mov
aad
push
xchg
or
subb
ljmp
xlat
mov
shr
xchg
pop
loope
sbb
shrl
and
xor
imull
jmp
pop
push
push
mov
lods
sbb
fimuls
rolb
or
inc
sarb
inc
jle
imul
loope
xorb
adc
xor
push
mov
fisubrs
adc
sbb
es
jo
cmp
and
mov
out
imul
jbe
ss
xor
mov
enter
dec
cmp
jno
outsl
jnp
fmuls
daa
jne
xor
fdivrl
cmp
or
in
je
dec
icebp
jmp
loope
xor
in
rcrb
cmpsl
xor
flds
and
sahf
enter
sarb
movsl
shl
push
dec
adc
cmp
push
inc
adc
daa
fucomip
jno
xchg
xor
sbb
shl
pop
add
movsl
hlt
dec
loopne
inc
cmp
ud2
sub
xor
test
jmp
shlb
outsl
push
inc
push
shlb
lods
mov
mov
sbb
js
loopne
fs
xchg
ds
or
sbb
leave
mov
mov
adc
push
jmp
sbb
out
add
call
into
ljmp
sbb
gs
and
sub
xor
jg
addr16
jne
xor
sub
push
lret
add
arpl
test
addl
sub
out
popa
dec
mov
aas
nop
adc
cld
ret
lods
repz
jae
lcall
cmpsl
aaa
xchg
sbbb
orl
add
xchg
sbb
repnz
aas
xor
mov
insb
and
sbb
adc
cmpsl
adc
adc
imul
push
or
test
dec
adc
loopne
xchg
push
add
push
and
adc
paddq
test
aaa
sbb
jo
loopne
inc
xchg
nop
lret
std
pop
adc
add
add
xchg
push
aam
jno
faddl
aam
inc
sbb
cld
xor
lcall
jl
add
faddl
mov
pop
fildl
mov
adc
fstpt
and
push
sbb
and
dec
stc
push
push
shll
cmp
cmp
cmp
xchg
dec
in
adc
inc
cmp
das
add
mov
add
jle
cmpsl
jmp
mov
jg
into
adc
xor
sub
test
ljmp
mov
and
mov
fucomi
sub
adc
and
lock
das
lds
cmp
add
sbb
dec
lcall
xor
or
jbe
daa
or
adc
addb
mov
pop
dec
inc
cltd
mov
test
sbb
cvtps2pi
push
adc
vpextrw
lds
pushf
imul
cltd
push
sbb
lods
adc
xor
xor
movsb
roll
test
cmp
jb
or
mov
leave
sbb
fsub
adc
xor
rorl
mov
mov
dec
jmp
add
mov
sbb
repnz
and
add
add
in
cs
insb
push
dec
add
adc
pop
jns
mov
arpl
out
or
sbb
add
and
sub
std
pop
add
test
jo
pop
loop
sub
bound
dec
repz
bound
out
push
out
clc
js
inc
fsub
sub
push
outsb
dec
test
or
xchg
mov
lods
loope
add
sub
in
push
pushf
mov
jmp
or
aas
mov
mov
add
clc
pop
mov
pop
addl
and
sbb
cmp
incl
push
addb
xor
xor
ja
ret
js
in
subb
hlt
xchg
outsb
add
js
inc
inc
stos
mov
aam
clc
repnz
test
das
clc
inc
into
xchg
cmp
adc
mov
fisubrl
fisttps
or
and
lcall
scas
iret
sub
inc
adc
loope
call
adc
push
imul
loopne
pop
sbb
push
cld
pop
clc
dec
repnz
or
mov
cmp
in
stos
inc
cld
enter
loope
into
add
hlt
cmp
jb
test
fdiv
lock
pop
maxps
dec
mov
mov
sbb
bswap
nop
ret
pop
lods
test
and
and
dec
sbb
xor
call
sbb
add
dec
movsl
adc
pop
sbb
fwait
popa
loop
xlat
push
sbb
int
syscall
dec
dec
push
or
lock
push
cltd
insb
mov
nop
movsb
ret
adc
in
enter
loop
mov
and
movsb
arpl
fadd
data16
les
loopne
dec
movsb
test
mov
adc
inc
test
mov
mov
push
cltd
xor
test
pop
call
lods
test
push
loopne
shl
inc
push
daa
mov
pop
push
outsl
call
push
add
cs
sub
push
adc
push
ret
movsl
inc
stos
icebp
push
mov
sub
fistpl
jmp
inc
xor
fnsave
jo
fnstsw
dec
xor
xor
lock
inc
lods
enter
cmp
lock
imul
cwtl
inc
sbb
popa
xor
push
call
loop
cmp
rol
sbb
lea
fadd
enter
and
cmp
pop
or
into
inc
sbb
mov
lods
pop
sbb
sub
push
lods
loopne
jecxz
cld
pop
psubsw
cmpb
loope
inc
cli
test
loop
in
call
push
pusha
test
cmc
pop
push
add
pop
loopne
adc
dec
adc
push
add
gs
stos
mov
addl
push
scas
pop
jae
call
mov
xchg
leave
call
inc
int
fiadds
add
mov
fldl
add
jne
push
add
dec
pop
call
cmp
adc
aam
cld
clc
jecxz
divl
or
add
faddl
pop
inc
and
mov
stos
mov
rcr
sbb
arpl
lods
sbb
push
and
pop
cld
cmp
inc
fnstcw
movsb
xchg
add
jecxz
mov
aas
and
jl
sub
xchg
pusha
ret
inc
xor
loop
out
clc
pop
sahf
imul
adc
mov
and
negb
cmp
idiv
shlb
pop
mov
fiadds
jo
ret
call
fsts
cmpsb
imul
fdivrs
pusha
in
or
mov
stos
sbb
lock
or
pusha
mov
push
cmp
xor
xlat
int3
rclb
pop
mov
icebp
adc
ret
cmpsl
inc
in
inc
xchg
push
xor
loop
push
add
in
jbe
fists
jle
jne
push
movsb
lcall
and
pop
movsb
add
scas
sbb
jl
lea
roll
in
mov
ja
icebp
leave
pop
mov
adc
shr
out
xor
or
pop
or
mov
sbb
rcrb
sbb
push
xor
inc
movsb
mov
push
and
xor
xor
mov
sub
lahf
call
lea
lret
pop
mov
push
loop
aaa
pop
sbb
pop
sub
sbb
and
aam
jo
xchg
ds
inc
lcall
ret
in
out
dec
movsl
into
jnp
jns
clc
and
ljmp
mov
add
sub
pop
xlat
or
mov
xor
push
inc
sbb
lock
sarl
jecxz
cmc
fldt
cmp
popf
loopne
into
cmpl
sbb
pop
lock
jecxz
adc
sarl
ljmp
hlt
sbb
dec
dec
lock
rcrl
add
fcomip
test
pop
add
sbb
pop
pop
and
js
xor
push
add
ja
shl
aam
mov
adc
repnz
sbb
cmp
dec
jecxz
push
scas
rcr
loope
cmp
inc
add
stos
push
adc
sub
hlt
push
push
and
lock
push
pop
fsts
int
rolb
add
ja
das
pop
leave
in
sub
test
dec
in
sti
inc
jne
xor
std
inc
or
push
or
pop
ss
aas
and
loop
lods
jle
enter
push
jmp
sti
xchg
loop
add
aaa
pop
loop
inc
xchg
dec
call
sub
mov
fisttpl
shrl
decl
cld
adc
addr16
out
pop
jbe
dec
jp
sbb
inc
xor
pop
pop
out
mov
and
ret
clc
adc
push
stos
mov
out
dec
fwait
es
scas
pop
test
ds
ret
cltd
scas
fiaddl
es
and
mov
mov
xlat
pushf
push
cld
clc
lods
inc
sub
inc
dec
loopne
or
out
movsl
aas
loop
push
shl
dec
jecxz
repz
or
lods
sub
add
mov
add
inc
ja
jo
andb
ss
arpl
fwait
jne
jle
mov
cwtl
nop
dec
fwait
ja
push
ret
add
ret
jae
mov
out
lea
mov
add
push
dec
sbb
inc
mov
pop
hlt
adc
addb
add
cmc
test
cmp
and
addr16
mov
test
adc
movsb
xchg
inc
fptan
cld
add
dec
push
or
cmp
cmc
add
inc
outsl
sub
and
xchg
movsb
lret
shll
add
inc
cmp
adc
and
popa
mov
push
icebp
scas
add
dec
jno
das
out
dec
mov
andb
sub
lea
ret
pop
jne
mov
fsubrl
imul
pop
inc
popa
aam
sarb
cmp
inc
inc
add
hlt
mov
addl
es
sub
insl
popf
jmp
shlb
out
loope
shlb
sarb
add
test
ret
dec
mov
xchg
pop
sbb
dec
inc
dec
and
inc
mov
adc
push
sbb
lret
ficoms
cltd
shlb
in
adc
sbb
je
cltd
icebp
adc
les
pop
cld
add
jge
dec
mov
shl
cli
gs
imul
sar
sbb
xor
jge
pop
outsb
and
dec
bound
sahf
call
adcb
shrb
push
jl
pushf
test
rolb
add
jle
popf
jns
shrl
shrb
jecxz
frstor
and
stos
cmc
push
pinsrw
loop
out
push
jb
and
pop
dec
mov
popa
insb
mov
cmp
and
fiaddl
les
mov
sbb
ljmp
mov
inc
inc
and
push
div
dec
sub
and
xor
xchg
adc
dec
dec
inc
fidivrl
js
lods
sub
mov
add
or
push
push
imul
sbb
pop
loopne
xchg
fcmovnb
add
data16
xorl
mov
movsb
mov
iret
mov
fmull
sti
and
mov
xchg
xchg
lock
fimuls
scas
sbb
test
arpl
rcl
cltd
inc
call
gs
sbb
fstl
shll
sahf
xor
sbb
mov
jle
push
cwtl
loop
fsubrp
sub
popa
into
lock
shlb
ret
and
std
push
cmp
out
or
push
adc
fnstcw
jmp
faddp
adc
mov
pop
dec
lea
enter
or
pop
cmc
cmpsb
das
and
lods
mov
dec
hlt
xlat
or
push
mov
andb
adc
dec
or
loop
popa
rolb
xor
or
xchg
ficoms
nop
nop
fdivl
push
loopne
stc
lret
test
dec
cmpsl
xchg
mov
jmp
ljmp
sub
push
add
add
stos
adc
jbe
add
inc
les
cwtl
inc
jmp
sbb
lock
outsl
xchg
into
inc
add
cmp
stc
inc
mov
lea
jbe
xor
cmp
inc
adcl
mov
pop
popf
mov
dec
out
aam
lds
iret
js
jbe
addl
push
aad
sub
and
mov
pusha
insb
cwtl
rcl
stos
les
sub
add
xchg
and
jno
lock
sbb
xchg
or
lods
jno
fadd
dec
fwait
or
ss
lea
dec
fstpt
or
out
dec
sbb
mov
jne
sub
shrl
test
mov
xchg
and
adc
stos
inc
arpl
dec
andl
neg
xchg
add
imul
adc
dec
adc
cmpsl
jo
or
xchg
sbb
xchg
mov
stos
jo
daa
cmp
sbb
adc
mov
out
mov
adc
xor
jno
or
dec
push
dec
and
fstpl
test
jp
stos
xchg
add
icebp
pop
xchg
fnsave
adc
popa
mov
jl
daa
jns
enter
mov
cmp
xchg
decb
push
dec
daa
jnp
fsubl
cmp
xor
inc
das
jge
les
std
cmp
push
in
add
or
inc
adc
arpl
mov
pop
inc
dec
dec
shl
add
les
lods
fwait
test
cltd
test
lock
xchg
jb
jecxz
les
cli
in
mov
xorl
xchg
stos
push
sub
lods
fstl
ds
pushf
addr16
pushl
push
hlt
adc
sarb
enter
sbb
je
mov
mov
outsl
cmp
ja
scas
add
and
mov
lret
popa
outsb
rclb
push
adc
push
pop
dec
ljmp
outsl
fdivrl
shr
inc
rcrl
inc
mov
test
adc
loope
jae
or
ja
sbb
inc
loopne
xor
loop
dec
and
in
lock
orl
ds
mov
das
adc
jp
scas
pop
dec
mov
aaa
jecxz
inc
xchg
jmp
add
sbb
mov
fwait
mov
pop
cltd
mov
enter
sub
mov
jmp
cmp
aas
jge
fcoms
sarl
mov
xor
adc
lret
or
push
lock
push
xchg
inc
into
clc
dec
and
add
xchg
jno
js
adc
mov
add
and
bound
rolb
in
cmp
inc
mov
adc
pusha
push
dec
js
mov
adc
mov
jle
ljmp
out
add
orb
jg
aaa
sahf
push
push
jb
xchg
mov
dec
inc
dec
hlt
cmp
adc
add
pop
jl
push
jle
cwtl
inc
aam
lods
scas
arpl
pusha
xlat
lods
aad
xor
insb
les
sub
sub
out
daa
roll
jl
inc
and
ds
mov
push
xor
pop
mov
add
testb
add
sub
push
out
inc
incb
lcall
test
ja
loopne
cmp
or
test
outsb
mov
daa
test
in
xchg
sub
addr16
jecxz
or
cmp
pop
mov
imul
pop
popf
xchg
ja
pusha
sti
scas
lock
xor
test
mov
jle
jb
xor
push
out
sbb
inc
mov
adc
ja
faddp
sub
loopne
ret
ja
inc
xor
test
adc
mov
sub
loop
ficompl
shll
stos
push
stos
icebp
inc
add
push
adc
out
inc
loope
sub
movsb
ss
inc
inc
cltd
scas
ja
push
push
pusha
ret
mov
sbb
pop
clc
xor
push
jns
test
xor
add
pushf
and
out
sarb
or
cmpsl
out
jge
add
mov
and
cmpl
loope,pt
ficoms
pusha
iret
or
stos
xchg
sbb
cli
sbb
mov
je
lods
orl
adc
insb
adc
mov
sub
add
fistpll
or
xor
enter
pop
outsb
or
jp
push
imul
add
cmp
adc
loope
sbb
fwait
add
int
sbb
fisubrl
adc
arpl
and
ret
out
or
pop
pop
pop
jbe
in
lds
out
inc
neg
xor
push
dec
repz
xor
das
js
jle
addb
outsl
lret
push
xchg
int3
insb
cmp
lds
pop
movsb
mov
sub
in
add
jne
or
cmp
incl
addl
sbb
jecxz
stc
jg
jmp
xchg
lahf
mov
arpl
test
sbb
les
dec
nop
aas
movsb
lret
je
xchg
mov
je
or
push
inc
sub
std
inc
into
ja
sbb
ret
or
outsl
pop
pop
add
push
sti
cmpsl
js
std
loope
dec
push
xor
out
repnz
into
popl
inc
mov
jbe
add
mov
push
or
inc
scas
xor
sbb
pop
mov
sti
adc
in
or
add
mov
inc
or
and
nop
pop
lods
push
popa
add
adc
ror
clc
sub
push
jbe
xor
or
push
cmp
jle
inc
int3
add
xor
insl
shrd
int3
dec
xor
adc
jne
inc
sbb
xchg
in
dec
imul
hlt
mov
ror
in
dec
push
or
sub
clc
add
imul
adcl
sbb
sbb
add
cwtl
aam
rolb
dec
aam
add
sbb
push
test
sahf
arpl
addb
rol
sub
les
rcrb
outsb
jb
les
jbe
fbld
arpl
push
inc
mov
ret
lret
je
jecxz
xor
xor
add
push
cmp
fwait
stos
add
loopne
clc
js
dec
pop
jge
adc
loopne
xchg
cld
add
jp
dec
shl
clc
sar
fcom
cmp
data16
loopne
addb
xchg
jge
jp
popa
push
dec
pop
shlb
nop
mov
addb
dec
sbb
and
paddusb
push
dec
enter
jg
push
ret
push
sbb
add
stc
fnstenv
add
pop
cmp
popa
adc
outsl
shlb
sub
xor
mov
and
movsb
add
or
cmpb
sbb
or
inc
pop
dec
push
enter
mov
add
leave
js
or
mov
push
xchg
jno
dec
mov
mov
mov
and
xor
test
loopne
shll
arpl
pop
jbe
and
incb
dec
and
shll
sub
push
jp
sub
shll
sub
incb
cmpsl
repz
lods
mov
lcall
push
mov
add
mov
test
mov
mov
and
mov
jecxz
mov
or
je
pop
adc
sbb
jecxz
nop
adc
neg
dec
mov
aaa
adc
inc
push
ret
cmp
xlat
pop
push
mov
add
xor
sbb
jne
inc
sub
aas
xchg
push
xor
sahf
add
and
add
imul
xor
enter
push
ret
js
imul
or
popf
add
xchg
inc
int3
outsl
xor
outsb
fistps
or
push
inc
xchg
loope
xor
mov
sub
cmp
or
loop
add
sub
adc
nop
jo
idiv
in
aam
jl
fisubl
add
fmul
mov
mov
rcll
push
dec
dec
and
mov
pop
mov
sbb
push
mov
in
jns
sub
cmp
call
or
mov
cmp
loopne
pop
sarb
dec
sbb
repz
push
pop
icebp
or
mov
jnp
gs
int
clc
cld
out
xor
je
dec
xchg
pop
test
pop
inc
sub
aaa
pop
mov
and
push
jle
inc
orl
fsubp
lock
js
inc
cmpsl
push
push
or
mov
mov
add
dec
sbb
push
add
movb
and
add
out
pop
repz
stc
add
adc
lods
les
mov
pop
xchg
into
xchg
sub
cmp
adc
or
out
add
movsl
fsubs
push
cli
fs
fcoms
sbb
mov
in
aaa
jbe
in
inc
xlat
adc
cmp
les
cmp
ljmp
ret
loope
iret
pop
or
test
or
ljmp
cmp
add
leave
sbb
add
add
or
adc
stos
popf
adcl
jnp
popf
add
sbb
rep
cmp
ljmp
mov
push
cmpsl
popa
cmp
cld
rcl
out
lea
in
jnp
sub
xchg
aaa
mov
clc
inc
mov
sub
notb
sbb
xchg
shrl
xor
and
popf
nop
sbb
pusha
decl
adc
push
pop
mov
movb
mov
push
out
aas
dec
fdivr
cld
lods
dec
orl
xor
push
xor
sbbb
subl
cmpsb
test
aad
lock
ss
lock
shrb
jmp
inc
mov
in
and
push
inc
shl
paddusw
mov
xchg
es
adc
orb
add
addl
testl
stos
fwait
mov
stos
pop
ljmp
fdiv
in
fmuls
cmp
jo
cld
aaa
test
mov
cmpsb
adc
rcrb
cmp
add
inc
pop
js
and
es
jne
inc
pusha
and
lds
cld
jmp
sbb
into
pusha
dec
pop
mov
fcmovnu
fdiv
add
mov
and
mov
daa
in
add
shlb
nop
cmp
dec
clc
test
or
xor
cld
xor
nop
addb
adc
xorb
xchg
inc
sub
es
fs
andl
dec
add
cli
add
push
invlpg
add
les
cmovg
xsaveopt
es
mov
mov
push
rorl
je
jmp
lahf
add
mov
test
jb
sub
pop
and
dec
inc
fisttps
clc
sbb
mov
ss
push
jmp
cmp
pop
add
pop
push
dec
addr16
fidivl
mov
push
scas
cmpsb
pop
dec
shlb
push
sbb
sbb
imul
fiaddl
mov
sti
mov
loopne
outsb
lea
lret
mov
insl
adc
push
rolb
mov
popa
add
cld
xchg
daa
mov
scas
add
inc
loope
cmp
push
repnz
pop
shl
mov
out
loope
mov
push
add
int
and
adc
adc
mov
aam
cmpsl
add
jmp
mov
jbe
xchg
cmp
pop
fiadds
push
cmpsl
loopne
aaa
cmp
pop
fmull
cld
xor
pop
push
mov
jg
nop
jb
pusha
dec
adc
roll
rcll
jmp
gs
and
outsl
test
mov
shll
and
jnp
push
mov
aam
fs
xchg
push
or
mov
sbb
push
jge
mov
sbb
cmp
push
rcll
lret
icebp
es
push
clc
push
jne
rcr
or
add
jne
shl
test
and
push
clc
cwtl
adc
sbb
clc
sbb
mov
fsubr
cmp
cmp
mov
ss
ja
ret
jl
loopne
js
outsl
add
in
enter
arpl
movsl
pop
ljmp
loopne
mov
adc
enter
sbb
es
mov
cmp
icebp
aas
shll
push
inc
xor
outsl
sbb
test
sbbb
jbe
inc
cmpb
add
xor
clc
add
add
imul
push
sub
jnp
out
dec
push
sbb
sbb
push
xor
aad
aam
fsubs
aam
and
lods
movsl
dec
sub
dec
loope
pop
push
or
lock
addb
add
imul
stos
mov
mov
push
push
push
mov
push
inc
arpl
jns
sbb
mov
pop
mov
js
mov
fmuls
cmpsb
scas
mov
sbb
xchg
adc
bound
pop
sub
mov
idivl
lea
aaa
fsubr
lar
ret
test
js
xchg
sub
out
addb
fcmove
scas
aas
outsb
shrb
pop
or
push
fadd
xor
ret
dec
int
loope
mov
mov
and
xor
push
or
push
rorb
movsl
arpl
inc
sbbb
shll
mov
ret
loopne
fidivs
xchg
lret
pop
cli
and
or
cltd
sbb
dec
cmp
jae
fidivs
inc
leave
adc
insl
sub
pop
sysexit
adc
sbb
dec
imul
dec
aaa
hlt
sub
or
jns
es
mov
pop
lock
cld
test
in
mov
xor
test
sbb
jo
outsl
loope
lcall
or
inc
pop
movsb
imul
mov
nop
cmpsl
jle
mov
sahf
push
pop
inc
and
outsl
nop
in
sbb
lahf
call
inc
and
mov
mov
xchg
insb
popa
inc
ljmp
enter
pop
xor
xchg
add
xchg
sbb
mov
repz
ja
or
stos
mov
and
add
add
addb
add
add
lods
or
mov
lds
insb
sub
cmpsb
push
aam
mov
cld
aas
adc
push
call
repz
mov
shrl
loopne
test
cwtl
inc
test
sahf
mov
add
mov
inc
hlt
dec
jae
test
push
dec
push
aad
out
jb
cmp
enter
les
and
pop
roll
and
mov
orl
outsl
insl
and
imul
cld
adc
mov
and
mov
jne
fsubrs
push
adc
test
outsb
add
aaa
sbb
cmpsl
loopne
aam
fnstsw
int
imul
les
xor
les
cltd
add
mov
xchg
xor
inc
mov
dec
or
and
adc
ret
shld
ss
sub
das
aam
int
outsb
mov
dec
push
js
mov
lods
xor
and
or
xor
mov
sarb
or
mov
pop
adc
cmpsb
sub
imul
dec
out
adc
inc
loop
aas
pop
or
fisubs
inc
sub
dec
mov
inc
rclb
clc
xchg
repz
ret
or
sub
negl
pop
pop
push
cmpsl
imul
adc
or
insl
sub
fidivrs
in
inc
sbb
or
nop
or
mov
movsl
xor
sub
jecxz
js
pop
imul
mov
mov
mov
roll
xor
shr
out
aam
or
mov
push
leave
test
rcr
or
push
jbe
cmp
jo
shl
inc
sub
addl
adc
jmp
in
xor
dec
lods
jl
and
das
js
cmp
pusha
cmpsl
or
push
add
ret
sbb
jnp
or
shll
adc
mov
inc
push
mov
sub
andb
dec
xor
sbb
xor
test
ret
pop
inc
ret
fnstsw
out
add
outsb
jmp
add
popf
xor
ret
mov
mov
daa
mov
popf
dec
add
sub
ret
mov
sub
neg
cli
clc
iret
add
fldl
mov
ret
push
push
decl
jnp
push
or
add
mov
neg
scas
sbb
mov
xor
xchg
add
iret
push
or
test
outsl
fiaddl
test
js
adc
nop
sub
sbb
gs
sub
or
add
inc
pop
jge
js
inc
test
adc
mov
pop
imul
add
in
push
pop
push
icebp
and
pop
pop
add
and
add
mov
adc
fidivrl
cmc
call
mov
je
or
pop
std
adc
adc
and
ja
pop
adc
xor
rcr
popf
or
xor
push
insl
cmp
cmp
dec
mov
push
lods
mov
xor
xchg
lods
xor
ja,pn
add
sub
add
xor
xor
cmp
xorb
push
adc
mov
push
mov
dec
sbb
sub
js
push
call
add
inc
push
ja
icebp
xor
cwtl
sbb
xchg
lods
jne
mov
js
pop
rclb
test
arpl
sbb
pusha
sbb
jecxz
jnp
adc
xlat
xor
nop
push
xchg
fcoml
roll
mov
jae
push
push
lods
data16
ret
push
insl
jno
sbb
adcb
add
and
xor
rcrl
sarb
mov
shrb
mov
popf
pop
mov
jb
rclb
fadd
cmp
loop
xchg
scas
push
movsl
rolb
cld
mov
arpl
in
push
ljmp
shll
push
jo
jge
xchg
and
inc
imull
outsl
scas
lock
inc
cltd
add
sbb
sbb
dec
cmp
sub
add
aas
jo
mov
addl
mov
nop
insl
mov
aam
cld
out
jns
imul
mov
jp
mov
fists
icebp
fiadds
aaa
in
sub
jo
pop
cltd
jmp
mov
test
pop
jmp
ja
into
jo
add
out
mov
loope
aam
adc
sbb
adc
mov
dec
inc
rolb
sbb
jmp
divl
lds
lock
shrb
popa
loopne
or
xchg
and
adc
jae
adc
inc
mov
push
enter
test
inc
push
sarb
add
popa
sub
aas
cmp
ficoml
inc
insl
sbb
jbe
adc
xor
std
out
sub
nop
mov
loop
push
aam
lods
pop
lock
lock
add
xchg
jmp
inc
test
mov
sbb
lods
or
cmp
pusha
cs
push
lret
mov
and
sub
mov
jmp
cmp
jb
pop
loop
jne
stos
shlb
scas
aad
sub
and
mov
ret
js
inc
movb
jl
lock
jmp
or
add
arpl
neg
push
dec
mov
or
dec
cmpsl
iret
sub
sbb
adc
mov
out
les
daa
arpl
jb
cmpsb
and
cmp
rcrl
inc
in
mov
mov
pop
call
xchg
jbe
enter
sbb
add
mov
sbbb
add
push
dec
add
dec
jg
clc
or
mov
scas
jl
or
xchg
add
jmp
add
push
inc
adc
or
fcmovu
push
loope
fs
and
jmp
push
dec
mov
jo
jle
xor
test
les
fistl
adc
imul
aaa
in
addr16
xabort
rorb
pop
into
add
mov
pop
pop
fadds
and
dec
or
jbe
subl
adc
add
dec
xchg
sub
js
loopne
xchg
ret
mov
inc
in
add
push
push
push
push
or
sub
in
pop
dec
cld
push
adc
test
pop
xchg
jnp
test
sbbl
out
inc
out
in
jbe
add
mov
into
inc
pop
es
test
dec
popf
mov
and
fsubs
shrb
inc
xor
mov
add
cmpsb
aam
jnp
fcmovnbe
cs
repz
lods
or
mov
add
sbb
jp
sbb
fwait
or
inc
mov
pushw
pop
dec
out
stos
or
enter
push
inc
mov
hlt
dec
push
fcmovnb
or
test
or
jbe
jno
jl
or
dec
push
bound
mov
imul
push
shl
jo
sbb
movsb
cld
mov
push
or
push
push
pop
mov
xchg
in
in
add
enter
push
rclb
dec
pop
insb
pop
addl
aam
loop
aad
push
push
out
lret
adc
cmpsb
ljmp
out
or
sbb
cmp
sub
neg
les
add
sub
xor
fstpl
jge
and
add
aas
in
call
fcoms
push
add
or
adc
sbb
adc
cmp
out
test
call
xchg
clc
pop
or
push
les
sbb
cltd
test
xor
sub
sbb
inc
ret
loope
mov
inc
cmp
int3
pop
mov
shrl
and
mov
jp
std
sub
or
mov
js
xchg
ret
je
pop
lods
rcrb
fcoml
inc
mov
xor
mov
push
mov
loope
stc
cld
ljmp
dec
pusha
xor
aad
ret
hlt
cli
lea
mov
out
add
pop
pushf
jne
loopne
fmuls
jo
inc
aaa
repz
mov
adc
sti
xor
add
dec
xlat
push
pop
inc
and
xor
sub
and
sbb
push
int
xor
out
pop
repz
fisttps
imul
lcall
rolb
cmp
jb
pop
fimull
js
jno
in
add
in
mov
les
jp
lcall
std
mov
lods
adc
sub
cmpsl
daa
xchg
pusha
inc
push
sbb
or
shlb
jns
cwtl
lods
int
mov
popf
shll
cwtl
cld
pop
and
lods
repz
insb
or
jae
dec
inc
cld
jne
por
add
mov
in
mov
or
fbstp
mov
jne
cmc
xor
xchg
ljmp
adc
xor
mov
sub
aad
aam
add
mov
add
gs
call
inc
out
int3
xchg
mov
mov
fstpt
shlb
pusha
jp
pop
enter
in
pop
gs
cmp
outsl
hlt
pop
pusha
out
out
daa
dec
fisttpl
add
cld
lods
sbbl
inc
inc
xchg
sub
sub
mov
mov
xor
and
fildl
mov
mov
mov
orl
lret
fiaddl
adc
rcll
cmp
dec
aam
dec
les
add
daa
cmp
fists
mov
sub
add
mov
mov
xor
inc
cmp
mov
leave
and
in
jbe
sbb
jmp
outsl
in
add
xor
and
xor
pop
addr16
add
cmpsb
sbb
aaa
test
out
mulb
mov
sahf
mov
in
outsl
shrl
dec
ret
xor
xorb
or
sub
shlb
and
xchg
ret
push
cld
inc
xchg
test
out
jno
push
jo
loopne
stos
push
dec
imul
lock
clc
push
testl
adc
fdivs
sub
mov
dec
rcrb
jns
mov
mov
pop
repz
insb
sbb
addr16
sbb
pop
dec
pop
testb
mov
xor
arpl
dec
or
sub
and
fsubr
sbb
cli
sbb
mov
dec
add
add
test
or
out
inc
sar
js
jo
test
dec
mov
test
add
add
subb
cmp
pop
das
je
add
sbb
test
cmpsl
nop
adc
dec
mov
add
cltd
cld
bound
ret
and
cwtl
sub
cltd
js
jbe
data16
xor
int3
outsl
popa
sub
sbbb
test
cmpsl
idivl
adc
sbb
xor
push
add
shl
lods
add
in
sbbb
cmpsl
lods
sahf
mov
cmp
lahf
repz
clc
out
adc
mov
xor
lret
or
jmp
mov
aas
mov
inc
dec
pusha
outsb
push
adc
sbb
adc
add
pusha
aad
jb
push
cmovno
mov
jmp
sub
sub
pop
cmp
xor
lods
stos
cmc
sub
int
inc
and
ds
and
push
jg
xor
adc
xor
pop
out
jmp
adc
dec
cmp
dec
cmp
cld
insb
cmp
add
fistpll
lcall
cmpl
in
dec
insb
cmp
aas
cmp
inc
inc
adc
or
xchg
cmpl
jle
sub
test
dec
shll
xchg
imul
mov
test
mov
aam
sbb
jp
sbb
mov
lock
adc
adc
andb
clc
push
xchg
pop
mov
lcall
jbe
and
push
pop
addl
xorl
ror
mov
cmp
subl
xchg
rcr
jle
loope
push
test
cmp
sub
sub
insl
or
or
fildll
cmp
out
jnp
out
xor
sub
xchg
cmpsl
adc
pop
sub
jne
sub
xchg
daa
xor
or
push
push
sbb
int
arpl
aam
sarb
aad
xchg
int3
cltd
jmp
push
jo
add
repz
getsec
add
mov
xorb
pop
mov
inc
shll
pop
mov
js
test
out
xor
out
scas
lods
dec
push
clc
and
pop
repnz
scas
lock
jb
repnz
dec
out
in
ret
sub
lret
sti
ljmp
or
pop
add
je
mov
mov
aam
add
jne
enter
rcrl
push
add
enter
cmp
cmp
addl
std
call
add
or
push
xchg
das
aas
inc
add
mul
xor
add
mov
loope
add
add
inc
or
cmp
xor
push
cld
pushl
and
or
outsb
adc
lods
adc
add
push
fcomi
decl
ret
cmp
js
gs
push
fiadds
add
inc
add
dec
jmp
sub
incl
push
adc
roll
xlat
ljmp
jmp
add
jle
push
add
shll
sbb
sbb
push
push
mov
lea
dec
adc
sub
or
mov
stos
mov
add
pop
test
push
inc
imul
mov
xor
call
out
inc
int
pop
outsb
and
mov
ret
movsb
addr16
pop
adc
cli
inc
push
or
test
fprem
outsl
ret
sahf
mov
inc
add
cmc
lret
cmp
or
xchg
repnz
add
fldl
popf
outsl
icebp
add
add
xor
fsubrl
enter
mov
icebp
faddp
push
loopne
xor
sub
push
mov
ret
and
push
or
pop
push
jge
xchg
pop
push
mov
insl
cmp
test
add
adc
xor
mov
mov
mov
mov
xor
add
xchg
cs
and
xor
adc
addr16
add
and
nop
lret
mov
push
xor
es
jns
add
fsubrl
jb
or
out
out
outsl
sti
lret
mov
pop
out
inc
sarb
or
xchg
and
repz
lret
loopne
cmp
inc
dec
push
call
inc
push
rcrb
cmp
int
inc
es
fcom
xor
call
add
inc
sbb
add
pop
xchg
xorl
dec
dec
imul
hlt
jae
repz
jbe
jmp
add
mov
xorl
mov
mov
xor
push
mov
and
int
sub
aad
xor
mov
lret
inc
test
inc
jb
std
push
or
ror
jae
lds
not
mov
clc
sbb
sarl
adc
daa
ret
pop
and
xorl
js
and
or
loope
dec
pop
cld
xor
into
add
xor
mov
sub
xchg
mov
call
jbe
jno
inc
add
mov
sbb
std
jmp
push
lods
fdivs
xor
cmp
dec
stos
xor
xchg
or
fistl
cmpb
nop
push
dec
or
cmp
jo
inc
test
mov
mov
or
rcrb
push
mov
les
lods
frstor
push
mov
mov
imul
jb
add
in
and
fdivs
jae
dec
cld
or
out
mov
insb
adc
clc
add
adc
adc
filds
cld
sub
jb
adc
shrb
cs
pop
add
dec
push
pop
adc
clc
push
out
mov
ret
mov
mov
xor
je
mov
out
and
out
xchg
or
outsb
mov
mov
stos
orl
jle
fs
aaa
mov
std
inc
push
push
sub
aam
sbb
inc
cmp
rorb
in
xchg
in
xor
inc
push
pop
or
pop
jo
push
push
dec
inc
push
fcoml
and
icebp
jmp
sub
dec
push
mov
add
or
fbld
or
fdivl
jne
sub
or
cmpsb
insb
mov
shl
addr16
add
or
rcll
lock
jmp
lret
out
adc
call
inc
sub
add
or
xor
iret
inc
inc
lret
data16
jl
dec
daa
pop
jecxz
or
xchg
inc
cli
add
cmp
push
xchg
test
jp
push
jp
jg
loope
cmpl
outsb
add
sbb
dec
shrb
jae
adc
lret
fsubr
hlt
add
push
mov
jge,pn
popa
lahf
es
mov
test
nop
inc
push
jo
loope
shl
pop
bound
push
loop
mov
out
cmp
daa
adc
add
fcoml
out
por
lods
sbb
or
shrb
cmp
leave
cmp
or
cli
sub
inc
cmp
hlt
cmpsb
in
aam
int3
push
jmp
or
inc
inc
dec
inc
cmp
ja
adc
sub
xor
clc
xchg
add
and
push
adc
fnstenv
dec
stos
stc
cmp
dec
push
clc
loope
inc
xchg
adc
enter
mov
sbb
cld
jp
jae
enter
cld
inc
push
xchg
mov
pop
pop
add
loopne
stos
icebp
adc
push
out
xlat
xchg
and
and
loop
jecxz
mov
faddl
sbb
xchg
add
lea
incb
ss
in
add
subb
xor
mov
aas
out
mov
add
sub
add
cmp
xchg
and
inc
jecxz
add
std
pop
sbb
cmpsl
pop
and
enter
pop
into
cmp
mov
sub
out
pop
addb
push
ss
or
std
rolb
not
mov
jmp
push
cmpsb
nop
aas
inc
stc
dec
inc
jmp
jmp
jns
adc
xchg
xchg
addb
fildll
inc
in
pop
addr16
in
les
add
sub
dec
sub
ret
icebp
in
push
out
data16
xchg
repz
xor
in
pushl
hlt
adc
sbb
add
ljmp
addr16
dec
sbb
lea
fidivrl
sbb
jmp
dec
stos
add
decl
xor
mov
pop
cmpsl
sub
sbb
mov
pop
gs
notl
fcmovb
testb
fcompl
ret
adc
sub
or
sub
fildl
push
add
popa
loope
pop
jbe
clc
test
xor
addr16
mov
pfcmpge
mov
rclb
test
fidivs
and
or
stos
push
aam
mov
lock
add
push
nop
pop
or
mov
pop
pop
mov
jmp
shlb
out
gs
sarb
xor
pop
dec
loope
sarb
bound
pop
add
adc
mov
fwait
mov
addr16
push
sub
adc
clc
mov
out
lea
xchg
jns
xor
adc
rcl
add
or
xor
aam
xchg
pusha
repz
call
fiaddl
mov
jns
mov
push
inc
sbb
dec
sbb
mov
and
test
fmuls
das
rclb
adc
xor
ds
popf
mov
pusha
cmc
sub
inc
bound
jnp
pusha
lock
scas
addl
xor
dec
sti
cmp
jg
andb
mov
arpl
mov
cmpsb
or
and
pop
jns
inc
jmp
das
xor
je
mov
mov
cmpsl
aad
or
in
pop
xchg
cmp
or
test
add
sub
jp
or
ljmp
call
pop
push
jecxz
fdivl
dec
cmp
cltd
adc
and
stos
or
pop
hlt
xor
xor
add
push
pop
cmc
ret
or
push
sbb
mov
lds
call
pop
enter
mov
push
xchg
std
mov
push
sahf
add
lea
shlb
loopne
icebp
fists
dec
xchg
jmp
or
mov
add
dec
sbb
fistpl
sahf
xchg
fs
outsb
or
or
or
lret
mov
sub
jmp
xor
daa
xlat
sbb
push
xor
cwtl
jp
mov
sub
test
xchg
cmp
add
out
test
and
mov
sbb
loope
lcall
xchg
add
mov
dec
mov
mov
sub
loope
xchg
push
mov
pop
pusha
add
inc
test
xchg
loopne
and
push
mov
xor
lock
push
sub
dec
adc
mov
pop
sub
pop
std
ret
push
mov
fists
lahf
xor
shlb
pop
subb
cld
popa
or
subl
add
mov
dec
add
popf
sub
imul
push
fisttpl
gs
cmovnp
xorl
dec
pop
rolb
fdivrl
fdivl
adc
sbb
andl
in
outsl
lcall
jmp
adc
fld
jae
sub
xor
fiadds
rorl
gs
push
sbb
lock
or
shll
adcl
sub
adc
leave
daa
cmpsb
pushf
movsb
aaa
ret
rol
mov
stos
jno
jmp
jmp
xchg
adc
pop
jns
lret
mov
andl
mov
fcmovu
jl
mov
adc
mov
js
popf
minps
push
sbb
jecxz
aaa
call
or
in
icebp
xor
push
jp
push
paddsw
jl
std
int3
pop
sbb
fstpl
cmp
add
sub
jp
lock
lods
int3
dec
shrl
xor
add
fs
mov
bound
inc
sbb
add
out
push
jne
mov
or
and
adc
xor
mov
push
enter
push
out
or
pop
add
jo
dec
cmp
or
mov
xchg
push
mov
cmp
shrl
arpl
cltd
pusha
dec
ret
mov
test
daa
pop
jbe
out
sbb
xchg
dec
xor
out
outsb
out
sbb
xlat
mul
sub
push
pop
stos
les
dec
sbb
pop
adc
sbb
inc
add
mov
and
rcl
and
add
adc
ja
sbb
test
lret
arpl
mov
mov
dec
mov
jne
pop
or
fldenv
mov
mov
push
repz
mov
outsl
mov
movl
stos
js
cld
popf
add
push
call
mov
out
mov
adc
push
cs
pop
jmp
xlat
mov
and
mov
push
pop
or
xchg
jmp
and
sbb
adc
add
or
fsubrs
and
mov
mov
and
inc
ret
mov
sbb
scas
and
adc
movsl
add
mov
push
add
mov
add
aas
cmpsl
loope,pn
lods
or
testl
inc
inc
dec
sub
push
jg
inc
stos
inc
test
add
or
inc
lods
jb
sub
or
mov
dec
sub
jmp
xor
addb
rcr
or
scas
adc
fistl
lock
push
and
push
inc
cmp
dec
push
and
enter
test
andl
push
cmpsb
jno
gs
cmc
sub
sbb
iret
adcl
adc
dec
xchg
sbb
push
adc
aam
add
xchg
outsl
push
in
aaa
decl
inc
xor
inc
sarl
push
add
orb
cmp
outsl
mov
jnp
lock
sti
movsl
iret
cli
movsl
jle
xchg
add
mov
sub
test
loopne
add
and
pop
dec
mov
xchg
ss
mov
add
xchg
lock
xchg
sti
and
sbb
addr16
daa
movsb
pop
jb
test
xor
leave
and
dec
jnp
pop
dec
hlt
icebp
xchg
pop
int
int3
ss
mov
rclb
data16
adc
lea
mov
enter
pop
add
or
fcmovnbe
pop
cmp
add
popa
pop
sbb
add
les
mov
dec
testl
mov
or
and
push
cld
mov
mov
jae
subl
fcmovu
add
dec
xor
pusha
push
shl
aas
push
pop
jo
pop
cmpsl
loop
mov
into
jmp
jp
xor
dec
dec
cltd
loopne
jbe
cmpsb
inc
mov
mov
sub
dec
mov
xchg
jo
cli
dec
jmp
sub
adc
into
dec
mov
js
and
test
dec
and
test
sbb
sub
sbb
xlat
and
mull
jecxz
add
adc
test
xor
or
inc
popa
jp
cmp
xor
cli
sbb
and
cmc
test
ja
push
daa
addl
jne
ret
inc
mov
movsl
sbb
pop
dec
add
jmp
sub
pop
mov
ret
push
sbb
pop
sbb
dec
jmp
mov
mov
adc
cmp
call
loope
push
xchg
dec
xchg
dec
mov
sub
pop
mov
loop
clc
ret
ljmp
aas
add
fldt
adc
not
add
imul
mov
popf
sti
les
jecxz
xchg
sbb
push
jl
insb
cltd
xchg
dec
adc
iret
dec
int3
push
xlat
push
jl
mov
rcr
and
jl
and
pop
adc
sbb
jmp
jge
and
ficomps
inc
cld
push
outsl
lods
jnp
adc
xor
push
lock
or
lahf
into
xlat
add
arpl
push
repnz
xor
xorl
fwait
pop
adc
inc
stc
call
stos
stos
cmp
mov
dec
dec
cmp
popf
jae
pop
hlt
jne
dec
mov
xchg
nop
push
sti
jno
enter
repz
loop
add
stos
rcll
cwtl
pop
lahf
in
add
add
xor
sti
jecxz
jo
mov
repnz
push
fsubl
add
sbb
or
xchg
and
inc
mov
add
fcoms
push
les
test
push
sbb
pop
mov
js
cld
push
or
stos
je
cmp
dec
test
test
or
in
sbb
daa
mov
and
or
dec
or
addl
sbb
mov
pusha
dec
in
xor
insb
pop
or
jnp
scas
shrb
scas
lods
call
and
cmp
push
mov
rcl
movsb
fstpl
sub
loopne
mov
mov
sub
jmp
out
sub
mov
test
cmp
les
cmp
or
mov
mov
adc
pop
dec
or
cli
stos
jp
out
imul
clc
bound
push
fisubs
in
xor
sub
sub
icebp
jno
gs
sub
sbb
jecxz
dec
xchg
shrb
outsb
ret
xor
into
call
pop
pcmpgtb
xor
loope
arpl
lea
push
dec
aam
adc
aam
and
jmp
mov
and
adc
pop
push
fs
mov
push
mov
lods
jp
out
out
pop
stc
push
lcall
shr
cwtl
insl
and
xchg
inc
add
or
adc
mov
ss
mov
ret
mov
xchg
sub
or
mov
ret
js
sbb
lcall
sbb
cmp
cmp
push
adc
in
arpl
pushf
add
es
loopne
mov
test
and
movl
add
adc
ret
inc
lds
lcall
sub
mov
mov
and
loop
insb
adc
cmpsb
adc
fstpl
les
pushf
dec
or
adc
adc
idivl
mov
pop
aad
ds
lcall
or
add
adc
jp
inc
int
jo
pushl
xchg
push
inc
test
pushf
in
pop
aaa
mov
add
into
dec
sub
and
and
rcll
rolb
add
and
fadd
addr16
jge
xchg
push
pop
sub
sub
jecxz
out
adc
js
bound
aam
setns
cmp
outsl
sbb
xchg
pop
outsb
adc
fisttpll
fmuls
scas
fnstenv
pop
dec
and
xchg
and
rolb
cmp
rsqrtps
subb
or
out
loopne
out
call
rclb
add
fmull
cmpsl
add
pop
inc
sbb
fsubrl
adc
xchg
outsb
scas
lods
cmp
enter
popa
loop
add
add
push
xor
push
sub
and
adc
dec
push
les
cld
cmc
mov
sub
fsubrp
mov
mov
xor
cmp
push
and
push
test
cmpsb
or
cmpsl
je
repnz
cmpsb
cli
cmpsb
jmp
or
add
mov
and
sub
into
xor
lret
inc
or
pop
mov
sub
cmp
ja
fisubs
jo
add
fsubl
jb
out
jno
pop
mov
inc
test
or
scas
int
ficoms
dec
push
jge
cmp
ss
or
repz
xchg
jo
push
fistpl
xchg
push
roll
push
and
sbbl
jae
loopne
xchg
rorb
in
inc
adc
icebp
daa
leave
or
push
in
jae
jecxz
popf
cltd
gs
test
lock
andl
enter
adcl
fadds
jbe
cli
lock
push
loopne
mov
ss
fcomps
push
add
fadds
dec
cmp
popa
jmp
adc
or
test
inc
xor
fadds
scas
cmp
sub
and
out
mov
adc
mov
add
lock
loope
jno
fsts
bound
mov
leave
clc
adc
fisttps
add
roll
iret
mov
inc
inc
mov
fbstp
pop
pop
mov
and
pop
cmp
clc
xor
in
loopne
mov
dec
add
add
xchg
popa
nop
xchg
mov
cmp
add
les
pop
sarb
adc
cmc
inc
xlat
es
call
dec
xor
add
enter
gs
xchg
ds
lods
pop
cmp
sbb
jno
mov
cmp
jmp
or
shlb
or
xor
test
pusha
inc
adc
js
jg
or
clc
cwtl
jo
sub
xchg
pop
pop
movsb
ja
aam
loopne
imul
scas
sahf
repz
xchg
push
push
int3
fimuls
dec
mov
into
lret
lds
clc
incb
lahf
push
mov
repz
push
mov
add
fldt
or
jb
incl
cmp
xchg
or
or
xor
aad
pop
cmpsb
daa
push
mov
repnz
jecxz
push
negb
sbb
adc
negb
inc
xchg
jmp
cli
je
aam
inc
mov
icebp
aaa
out
mov
mov
arpl
into
jle
xor
loop
aam
lods
mov
push
inc
adc
push
jmp
push
mov
add
ret
pop
push
dec
pop
xor
add
xchg
sub
pop
enter
sub
dec
sub
leave
jecxz
mov
xchg
aas
pop
add
mov
jp
add
cmp
ret
loope
pop
add
inc
sub
test
shrb
adc
sbb
add
sub
sub
xchg
jecxz
test
xchg
cmp
jns
and
adcl
inc
adc
out
inc
les
scas
dec
add
movsb
jo
pop
jae
pop
xor
and
and
int
xchg
push
pop
in
sub
add
mov
xchg
repnz
sub
sysexit
ffree
add
pop
and
sbb
fmul
adc
sub
and
movsl
mov
icebp
aas
shll
in
insb
ja
pop
hlt
inc
xor
imul
pop
jno
stos
xlat
or
fst
pusha
add
cli
add
jp
insb
iret
loopne
pop
mov
scas
jp
out
scas
fcom
dec
and
jbe
jmp
xor
or
es
mov
mov
jmp
mov
out
and
sub
xchg
sbb
out
lcall
add
stos
in
dec
push
jne
out
inc
movsl
fwait
and
test
jne
xchg
std
hlt
mov
loopne
rclb
mov
dec
sti
movsb
push
or
mov
mov
fisubl
cwtl
mov
push
inc
adc
mov
das
std
push
sub
std
and
push
inc
inc
sarb
popa
cmpsl
mov
rcr
push
xchg
jo
in
lods
mov
outsb
xchg
and
adc
dec
test
int
or
xor
inc
push
dec
mov
in
ret
out
xor
nop
popf
mov
push
add
lahf
int
xchg
das
lods
dec
mov
push
pop
xchg
orl
outsl
andl
pop
mov
and
sbb
out
sub
and
lcall
add
fmull
and
mov
or
push
aam
lahf
and
add
sbb
add
mov
jecxz
or
test
loop
adc
mov
mov
sbb
imul
dec
push
mov
daa
icebp
mov
lahf
adc
push
push
or
dec
sbb
sbb
push
jbe
mov
push
adc
xchg
mov
lock
pop
fs
pop
lock
push
inc
adc
xchg
loopne
test
cmpsb
mov
ret
pop
ret
adc
testl
mov
xchg
int3
out
and
icebp
call
add
sbb
fcoms
in
lahf
adc
mov
sbb
sti
pop
movsl
sbb
inc
dec
sbb
adc
aas
push
add
inc
mov
xchg
push
mov
mov
mov
push
mov
jl
mov
sub
outsl
les
dec
add
and
or
cs
adc
push
fs
add
test
test
push
bound
adc
pop
idivb
pop
cs
or
test
cli
push
imul
scas
or
jle
push
test
and
dec
cmpl
sbb
add
pushf
cld
nop
test
shlb
cli
inc
mov
dec
outsl
adc
pop
add
sahf
inc
and
adc
mov
and
jge
push
xor
nop
xor
popl
call
jo
repnz
repnz
dec
dec
add
pop
pop
pop
daa
ss
jg
lock
jbe
clc
sbb
into
inc
sub
jp
or
add
idiv
popa
dec
xchg
inc
addb
sub
mov
add
rcrl
int
xor
mov
popa
adc
imul
push
sbb
mov
mov
lds
xor
lret
pop
jae
call
ret
add
das
dec
add
adc
and
jg
lods
nop
loopne
fstpl
test
xchg
fsubrs
sbb
ss
adc
jl
cmpsl
fsubp
jns
test
jbe
jnp
xor
add
push
imul
sbb
cmpsb
jecxz
push
adc
int
fsub
and
test
pop
hlt
adc
mov
aas
cmp
push
pop
in
xor
daa
imul
loope
sbbb
add
jne
test
pop
sbb
xlat
cmp
in
mov
movsb
popf
daa
add
andb
daa
adc
xchg
cmp
adc
fcompl
inc
adc
cmpsl
jmp
fdivrs
mov
sub
adc
or
pop
ja
push
mov
rorl
pop
mov
xchg
inc
mov
sahf
push
adc
mov
pop
test
inc
dec
add
pusha
call
out
mov
jmp
cld
xor
cld
add
jecxz
scas
sub
or
push
aas
mov
call
push
push
adc
in
cmp
pop
inc
xlat
cld
push
inc
cli
and
sbb
js
xchg
add
jbe
mov
xchg
call
and
pusha
add
das
daa
or
dec
fmuls
loopne
loope
popf
inc
mov
notl
jne
lfs
imul
addl
clc
xchg
sbb
and
rcll
push
into
aam
call
pop
or
sub
push
pop
dec
inc
sarl
xchg
fst
in
mov
adc
jl
rorl
sub
mov
inc
not
mov
or
xchg
sbb
cs
fisubs
mov
sbb
and
daa
ret
dec
fs
pop
push
pop
or
adc
in
jecxz
push
push
cmp
inc
adc
mov
addl
push
pop
pop
xor
lock
add
xchg
sub
push
orl
std
fmul
jns
pusha
inc
inc
xor
xchg
sarb
daa
mov
fsubrs
inc
push
daa
mov
movsb
push
call
cld
repz
add
sbb
movb
and
aam
xor
clc
fnstcw
loopne
rorl
push
insb
fcompl
loopne
js
pop
movsb
cltd
out
dec
xchg
lret
jns
pop
xorl
jmp
jmp
sub
jg
fwait
lock
xor
je
pop
xchg
sub
sarb
pop
out
push
mov
jb
push
push
mov
xchg
mov
add
xor
push
sbb
xchg
outsl
jecxz
iret
mov
adc
dec
loop
fisubl
xor
jge
jle
imul
push
cmp
or
adc
insb
ret
adc
repz
daa
mov
and
cmpsb
dec
mov
jae
jmp
and
lahf
lret
incl
inc
dec
inc
sbb
jmp
shlb
scas
imul
jg
and
loopne
or
test
adc
daa
mov
lcall
xor
xlat
dec
adc
adc
loope
xchg
movsl
test
subb
les
dec
sti
movsl
pop
cmp
insb
xor
or
add
in
sbb
and
mov
jo
ret
inc
inc
dec
jo
loope
out
or
add
xchg
pop
cld
aas
push
mov
in
sbb
mov
mov
mov
push
cmp
sub
mov
addl
out
add
mov
subl
ret
sbb
push
jmp
dec
aam
popf
shll
jl
mov
je
inc
jecxz
mov
push
rol
call
jg
fcomi
ficoms
or
sbb
ja
lret
jb
xor
mov
rol
add
dec
push
jo
inc
fs
sbb
cmpps
xchg
push
pop
andb
inc
shlb
adc
pusha
int
sub
dec
sbb
or
push
lock
jns
xlat
pop
mov
inc
push
mov
test
push
adc
mov
clc
push
push
jg
les
shl
scas
xor
or
or
out
fcomps
cmpl
pushf
lods
insb
ret
cli
add
sub
jns
ljmp
insb
cs
add
adc
xchg
xor
pop
in
push
js
dec
mov
xor
or
dec
popa
push
sub
mov
and
popa
xchg
jo
add
stos
testl
mov
add
add
cmp
mov
add
stc
int
mov
in
push
cmc
push
or
jge
fsubrs
push
cmpb
lds
cmp
xor
sahf
das
outsl
rcll
pop
xchg
arpl
xchg
xor
xchg
in
add
cld
and
xor
std
jecxz
cs
das
cltd
or
inc
mov
cs
roll
mov
adcb
adc
loop
xchg
sub
add
adc
ljmp
pushf
dec
hlt
das
sahf
rsqrtps
mov
or
mov
aaa
cld
jmp
out
inc
aaa
movl
stos
call
scas
xchg
add
shlb
inc
jmp
lcall
or
pop
dec
push
and
lds
loope
add
cli
jmp
rcl
test
dec
repz
xchg
add
enter
add
std
stos
fs
and
lock
xchg
push
pop
ljmp
xor
inc
ljmp
ffree
sbb
push
mov
jo
adc
aam
pop
in
add
add
mov
xor
mov
pop
mov
setle
xchg
cmp
pusha
sbb
js
xchg
xlat
aaa
pop
ss
mov
xchg
adc
clc
or
or
xor
push
adc
inc
out
xor
hlt
popf
test
loope
loopne
mov
shlb
in
ds
ret
mov
mov
js
popa
inc
gs
sti
daa
and
sub
aam
test
sub
aam
mov
enter
popa
icebp
bound
push
negl
xchg
jno
enter
sbbl
and
adc
pop
cltd
push
add
std
push
dec
pop
add
cmp
mov
in
enter
push
cmp
add
ret
push
and
xor
pusha
and
jl
xor
jae
lret
ds
pop
pop
popa
movsl
xchg
outsb
xor
or
or
dec
adc
add
mov
xlat
and
stos
int3
stos
xorb
and
test
in
mov
cmpl
jb
ljmp
ret
jecxz
fwait
pusha
dec
or
xchg
push
pop
ljmp
test
iret
mov
shrb
inc
xchg
lea
popa
lea
enter
jne
xchg
lret
inc
std
pop
and
xor
and
sbb
sbb
pop
or
fldl
imul
push
movl
push
imul
js
push
js
insb
mov
inc
xchg
push
ds
daa
inc
sbb
outsl
push
pavgb
pop
fsubrs
jo,pn
mov
jmp
movsl
adc
aas
loopne
bound
adc
adc
hlt
mov
hlt
inc
push
or
cwtl
jge
sbb
lret
xor
mov
push
mov
lods
mov
inc
dec
into
outsl
add
xchg
dec
sbb
push
call
jmp
adc
sub
pop
repz
or
jmp
inc
sbb
in
loopne
pop
or
pop
inc
xor
jnp
dec
enter
and
fcoml
out
xchg
pop
adc
fcoml
loope
rcrl
notb
sub
shr
fcmovu
sbb
pusha
mov
mov
imul
xchg
inc
adcl
adc
std
inc
inc
nop
pop
sbb
les
dec
iret
xchg
sbb
inc
xchg
xorb
mov
add
adc
inc
jmp
mov
out
mov
push
rclb
pushf
je
loopne
cmc
sub
aaa
aam
adc
mov
sub
lock
pop
pushf
shlb
push
iret
inc
leave
aas
test
inc
xlat
push
jae
dec
jnp
fs
imul
cmp
dec
loop
movb
iret
test
imul
lcall
in
aam
jbe
loopne
cmpl
or
sbb
js
pop
aam
mov
sti
dec
lret
cmp
inc
enter
sub
jmp
shlb
and
jl
fiadds
dec
fiaddl
adc
andl
lods
ds
clc
in
in
in
inc
jnp
arpl
scas
xchg
ficompl
sarl
adc
out
push
int3
adc
sbb
testb
adc
adc
mov
faddl
lcall
dec
push
leave
rcrb
sarl
iret
loop
sub
gs
sbb
push
inc
scas
mull
pop
pavgb
pusha
outsb
arpl
icebp
jecxz
sahf
mov
mov
femms
cli
int
jno
loopne
rol
pop
inc
push
imul
dec
or
add
adc
scas
mov
lahf
and
es
sub
ret
insl
jmp
out
sbb
inc
out
movsb
call
dec
adc
jg
clc
icebp
push
shll
dec
add
leave
mov
sub
shlb
adc
lahf
and
fwait
jne
mov
cs
lcall
pop
dec
jbe
cmc
xchg
push
cmpsl
mov
add
in
sbb
fidivrs
or
xor
inc
stos
push
jecxz
into
icebp
cltd
repz
jae
roll
pop
mov
faddp
push
stc
dec
inc
cmp
js
jbe
cmp
pop
xchg
stos
and
icebp
popf
cmc
imul
cli
test
je
jecxz
es
mov
mov
push
cmp
sub
mulb
mov
xor
sbb
subb
or
inc
pop
cmpl
pop
jb
push
cmp
sub
add
cmpsl
into
rorl
rclb
mov
and
push
pop
loopne
test
cmp
movsl
sbb
jnp
pop
aam
adc
adc
pop
ljmp
cmp
add
jecxz
and
adc
inc
loopne
std
sub
pusha
sti
or
dec
lahf
clc
sub
jo
cltd
dec
loop
jnp
inc
fisubrl
push
pop
scas
sub
popa
adc
mov
dec
sbb
add
inc
lock
sarb
lea
stos
add
push
xchg
loopne
iret
xchg
andl
pop
inc
push
les
pop
pop
dec
shr
pop
movq
sbb
pop
icebp
xchg
stc
sub
pop
jns
lock
pushf
jae
push
and
mov
sbb
xor
lock
cmp
dec
inc
lcall
sahf
pop
xor
dec
outsl
or
call
cmp
dec
jmp
daa
jns
dec
fmull
add
jl
xchg
xor
xor
ja
mov
cli
ds
mov
jbe
jbe
jo
sbb
stos
xor
cmp
pop
stc
add
jge
push
nop
loop
pop
xchg
jmp
sub
pop
adc
lahf
dec
sub
fcomps
mov
dec
jl
xchg
sbb
pop
jmp
in
jecxz
addl
push
mov
jle
push
mov
add
push
js
icebp
fdivs
xchg
and
mov
push
outsl
xlat
adc
lret
popa
or
xor
and
pop
xchg
xor
sbb
or
adc
dec
mov
out
fiadds
mov
or
sub
imull
add
pop
cmpsb
cmp
cmp
rcrl
xchg
dec
loop
and
inc
jb
adc
jns
cmp
mov
adc
fstps
insb
add
faddp
les
and
shr
mov
loope
lock
iret
xchg
push
inc
jp
ss
adc
clc
lea
xor
repnz
mov
ja
sbb
fiadds
aam
fisttpl
hlt
jae
daa
cld
jns
roll
notb
cld
push
ret
ja
aas
loop
mov
aas
aad
loop
or
dec
jmp
hlt
rolb
cmp
jp
xchg
ficomps
ret
js
dec
insl
mov
and
cltd
xor
ja
jo
pusha
outsb
xlat
cmp
shll
ss
xchg
mov
cmpsb
sti
cwtl
lods
mov
adcl
mov
or
sub
pop
in
cmpsb
push
and
addb
repz
pop
jo
popf
cmp
cmpsl
add
sti
je
lods
pop
xchg
lcall
adc
mov
call
xchg
mov
xorl
data16
xor
add
mov
pop
or
add
cmp
js
enter
loope
push
xor
ja
cmp
pop
or
pop
loop
mov
int3
out
mov
dec
outsb
rsm
inc
imul
cmpsl
in
cmp
lahf
add
jb
mov
imul
insb
iret
pop
mov
mov
or
jo
lods
adc
xorb
lock
jmp
jle
js
pop
sahf
aam
in
or
insl
add
adc
cmp
iret
mov
testb
adc
jno
dec
scas
push
and
pop
xchg
fcomip
daa
or
out
xchg
sbb
adcb
pop
sub
shll
out
adc
jae
xchg
mov
and
mov
pop
aam
nop
lock
mov
fwait
sub
data16
push
pop
addl
xor
jb
sbb
xchg
es
or
std
ljmp
xor
xor
sbb
cmpl
fdivs
push
outsb
mov
jl
ds
jmp
xor
pop
mov
movsb
jb
add
and
mov
adc
xchg
bound
test
adc
lds
das
jbe
imul
inc
sub
push
test
je
jmp
push
fiadds
mov
dec
sub
xchg
cmp
nop
inc
ljmp
xchg
xor
sub
aam
je
and
enter
xor
icebp
sub
mov
cmp
mov
popa
pop
repz
add
rcll
adc
inc
jne
push
rclb
mov
adcl
ja
push
dec
std
mov
stos
sbb
sbb
test
jno
das
jecxz
jp
pop
fldcw
andl
mov
sti
adc
lock
push
mov
mov
and
add
adc
test
scas
sub
push
sub
and
xchg
jae
sub
mov
and
mov
add
andl
cltd
cmp
daa
add
test
data16
or
out
andb
filds
push
lea
adc
cwtl
cld
lock
inc
jb
pop
movsl
add
es
fstps
jbe
lock
sbb
lcall
jmp
add
cmp
xorb
fwait
in
shr
call
imul
inc
popf
mov
add
mov
fmuls
pusha
xchg
aad
mov
push
mov
cmp
cs
push
dec
stc
loopne
pop
lock
mov
pop
xor
pop
mov
fs
or
iret
mov
lods
mov
dec
imul
sub
add
mov
cwtl
imul
mov
or
loopne
je
push
andb
jl
jg
jae
and
or
cld
insb
pop
loopne
push
jb
mov
xor
hlt
xchg
xor
cmp
dec
test
xchg
ss
add
sub
in
inc
jge
adc
xor
push
or
shlb
sbb
sub
ret
hlt
cmp
pop
xchg
and
icebp
sahf
push
aad
popf
stos
mov
sub
in
out
out
sub
les
xor
sbb
inc
hlt
sub
lret
add
arpl
mov
dec
cmp
ret
cli
cmp
cmc
js
test
and
cmp
loope
shlb
stos
rcl
shll
popa
ret
or
jmp
popf
stc
lock
push
js
out
sub
adc
and
sarb
pushf
test
ja
hlt
or
inc
addr16
push
fnstsw
add
sbb
test
cmp
sbb
mov
hlt
mov
mov
aaa
mov
js
jecxz
cmpl
out
inc
inc
adc
cmp
mov
popa
add
or
pusha
loopne
test
ja
pop
and
sbb
dec
xchg
add
dec
mov
fcomi
or
test
cltd
mov
pop
push
push
ret
push
aaa
loope
and
push
add
mov
adc
enter
lret
add
cmc
xor
sbb
sub
adc
pop
lahf
cmc
push
sbb
mov
fidivs
les
mov
lret
pop
lock
hlt
fstps
ljmp
add
xor
cs
bound
rorb
js
dec
test
adc
out
pop
loope
loope
adcb
int3
lea
cmp
pop
enter
fmuls
outsl
jmp
sub
adc
pop
and
dec
dec
lds
or
pop
push
xor
jecxz
fimull
xor
cmp
cpuid
rol
test
je
and
xlat
pop
mov
xchg
cld
fimuls
pushf
nop
sub
andb
out
add
jne
stc
outsl
jmp
imul
je
dec
jl
out
sbb
out
ret
mov
addb
push
sti
pop
shll
jae
adc
sbb
rorl
and
les
notl
jnp
or
pop
add
xlat
mov
mov
jl
inc
cmp
addb
cli
xchg
imul
jb
jg
dec
popa
xchg
roll
sbb
and
fwait
test
loopne
add
or
xor
sub
cmc
dec
popf
or
ret
mov
mov
aad
or
cmp
sub
rcr
leave
cmpxchg
out
xor
inc
scas
pop
cmp
push
mov
adc
xlat
cmp
push
aam
mov
pushf
cmp
jno
lock
ja
mov
fs
add
lods
sub
imulb
xchg
scas
ljmp
add
sub
xchg
xor
jno
or
mov
inc
adc
loop
fidivs
leave
xchg
shr
cmc
bound
mov
add
mov
movsb
adc
addr16
push
push
jmp
add
pop
jae
fwait
push
mov
not
push
scas
add
adc
and
push
cmc
dec
adc
fwait
ret
sahf
in
test
jecxz
sub
jg
clc
mov
or
mov
repz
jne
loop
dec
sbb
mov
loopne
rol
jge
movsl
add
push
stos
dec
in
inc
ret
mov
cwtl
xor
out
push
xor
mov
test
test
lock
add
js
adcb
mov
sarl
add
stos
sbb
xor
test
arpl
pop
addb
jge
ljmp
push
ret
mov
out
test
add
aam
subb
stos
rorl
iret
rcrb
stos
les
push
sbb
fimuls
ljmp
inc
lret
nop
jge
ret
dec
das
daa
push
xchg
mov
mov
and
fisubrs
push
jno
mov
gs
push
lock
sbb
cmpsb
mov
aad
es
fcomps
adc
add
mov
push
lods
or
cltd
sbbl
sbb
in
mov
cmp
mov
adc
sbb
dec
xchg
cmp
fidivl
cmc
cmp
stc
andl
dec
pop
paddusw
iret
int3
push
hlt
add
sbb
add
test
das
lahf
les
push
sbb
test
icebp
aas
mov
push
xor
jge
xlat
jb
xchg
cwtl
push
jmp
test
mov
les
ficoms
dec
dec
fidivl
xor
pop
lock
data16
repnz
addr16
pop
mov
pop
cmp
sbb
xchg
imul
pop
xlat
cmp
or
and
fidivs
outsl
pop
cmp
xlat
mov
lahf
mov
push
add
icebp
loop
mov
pop
mov
or
int
call
sub
add
mov
sahf
mov
xchg
lahf
rcr
int3
cmp
mov
add
or
hlt
push
dec
mov
jbe
sbb
cmp
sahf
adc
sub
add
xlat
adc
inc
fstps
xor
aas
add
xchg
add
xor
pop
inc
pop
ja
xchg
push
test
cmp
adc
dec
push
aas
and
call
fcmovnbe
pop
mov
fadd
dec
jecxz
lods
ja
stos
ret
jns
sub
or
dec
jne
or
or
cmp
cmc
mov
lods
enter
shlb
adc
inc
dec
jge
pushf
push
cmc
mov
and
jmp
adc
out
mov
ss
add
cmp
repnz
cmpsl
or
push
loopne
push
xchg
sbb
xor
or
aad
syscall
lock
push
cmp
lock
dec
pop
test
lahf
add
mov
adc
xlat
testl
or
ds
mov
orb
iret
mov
sub
iret
fs
sub
std
add
mov
push
mov
or
jae
inc
sub
xchg
dec
pusha
out
xchg
or
enter
incb
inc
mov
cmp
xchg
jbe
jb
xor
sub
jecxz
or
mov
fwait
js
add
mov
inc
or
sbb
bound
data16
cs
int
lock
lret
orb
and
mov
adc
and
push
ret
sbb
arpl
sub
loopne
push
stos
scas
mov
mov
cmp
jmp
add
add
rorl
inc
push
cmpsl
adc
icebp
cs
xchg
pop
sub
jbe
cmp
jbe
xchg
shll
xor
lods
jbe
jecxz
add
sbb
inc
in
idiv
inc
pop
jle
shll
adc
xchg
dec
jb
sahf
test
dec
xor
popf
call
sbb
js
rolb
sbb
sbb
int3
inc
add
inc
sti
and
sbb
enter
pop
or
sbbb
mov
lock
scas
xor
jnp
fcmovu
rorl
pop
and
into
fbstp
push
stos
jle
cli
fildll
andl
je
fucomp
aaa
add
jns
adc
into
js
or
lea
or
lcall
scas
in
scas
mov
xor
aad
or
test
mov
repnz
pop
sbb
ret
test
fst
mov
mov
inc
push
test
push
jmp
pop
mov
mov
int
cmpsl
bound
add
lods
xor
sub
cmp
pop
call
add
je
xlat
out
mov
aaa
ror
out
and
jmp
xchg
aaa
cmp
mov
lds
ret
pusha
xor
pop
imul
xchg
sbb
adc
je
cmp
jmp
aaa
xchg
aaa
addr16
bound
and
inc
adc
in
sub
out
sub
xchg
adc
or
mov
test
imul
das
mov
push
cmp
adc
aam
leave
popf
adcl
cli
daa
scas
push
xor
sbb
fldl
pop
lods
or
or
jo
adc
or
bndldx
push
adc
dec
cmp
and
test
repz
enter
mov
cmp
std
cmp
xchg
add
jp
adc
xor
mov
pushf
cmp
aam
into
add
lret
mov
or
pop
fcomps
in
push
or
lods
dec
jg
jg
iret
jae
inc
jp
adc
pop
repz
xor
stc
push
add
adc
ret
fsubrs
dec
cld
jmp
sti
or
mov
sbb
add
adc
push
inc
cld
repz
inc
fs
mov
push
int
push
stos
mov
aad
cld
clc
sbb
push
sub
or
push
call
shlb
mov
popa
inc
fsts
push
sbb
push
mov
mov
jl
mov
and
sti
clc
aas
aaa
shr
add
sbb
cmp
dec
cwtl
inc
and
and
clc
jmp
cmp
mov
pop
test
dec
and
mov
lods
push
xor
dec
mov
fsubs
aaa
nop
arpl
mov
or
fwait
out
icebp
lock
cmpsl
xchg
sub
testl
call
popf
add
mov
xchg
push
incb
or
data16
fstpt
fistps
jge
add
or
xorl
scas
loopne
mov
pop
fidivrs
test
xchg
fwait
mov
arpl
lock
add
decb
add
mov
lret
in
add
addr16
les
push
cli
sub
fs
sbb
testb
pop
movsb
inc
push
xchg
push
sub
xor
sbb
or
mov
jne
jl
cmp
jne
sub
test
push
loop
clc
out
push
add
jle
movsb
and
add
test
aas
cmp
pop
lods
and
es
jmp
xchg
add
fcompl
adcl
lock
pop
lret
shlb
jno
xchg
aaa
adc
mov
add
dec
pop
leave
sub
out
inc
movsl
dec
push
cmpsl
sbb
dec
sub
sub
lods
popa
push
add
fcomip
adc
fstpt
xlat
sbb
mov
daa
loopne
adc
and
adc
testl
add
shr
inc
out
mov
push
icebp
loope
je
lret
ror
add
xchg
ret
test
push
repnz
inc
into
call
sub
js
fs
insl
dec
or
loopne
ss
test
cmp
mov
pop
push
and
sti
lock
jo
pop
dec
add
sbb
add
add
xor
push
dec
xor
ret
ffree
xor
inc
cmp
sub
sbb
test
add
and
test
icebp
dec
or
push
inc
rcr
pop
hlt
iret
int3
jo
shl
sub
addb
xor
xchg
mov
xchg
lock
jo
add
inc
insl
xor
rorl
cmp
or
mov
into
ret
mov
fwait
shll
repnz
mov
loopne
sbb
and
in
arpl
cli
pop
rorb
loope
adc
scas
cmpsb
pop
xor
and
test
loope
lret
push
jle
jae
mov
inc
arpl
andl
rclb
rclb
push
adc
addb
jmp
mov
rorb
orb
mov
mov
xchg
mov
arpl
jmp
cmp
push
icebp
mov
jle
mov
int3
or
adc
add
arpl
add
je
push
cs
pop
cmp
mov
mov
jne
loop
js
pop
mov
shlb
lock
jg
lock
nop
sub
in
dec
loopne
push
in
mov
sbb
popa
push
ret
jae
pop
pushf
push
in
sbb
xor
push
jae
xor
cmp
je
pop
aas
in
sbb
and
ss
mov
sbb
lcall
push
mov
ficomps
and
lahf
imul
int3
orb
push
adc
add
fmuls
mov
je
add
les
xchg
cli
add
push
scas
add
add
outsl
sbb
sub
and
fldcw
leave
test
ficompl
add
jb
adc
xchg
or
push
sbb
movsl
mov
pop
popa
add
mov
and
xlat
xlat
ss
outsl
inc
xor
roll
mov
xor
push
mov
lds
adc
pop
test
aam
imul
sbb
filds
push
in
pop
sbb
cmp
or
adc
push
add
inc
movq
aaa
jnp
mov
add
lcall
mov
mov
cmpsl
cmp
mov
popa
push
push
aad
rclb
in
lahf
push
sbb
and
adc
pop
ret
jno
popa
sbb
ja
ret
popf
movsl
pop
pop
cmc
push
aam
cwtl
add
loopne
loope
sysexit
jmp
addr16
shlb
mov
xchg
cmp
pop
mov
jb
adc
test
aas
jne
cmpsl
jl,pn
mov
mov
add
mov
out
pop
js
clc
jae
pop
ds
sub
or
sbb
dec
lcall
pop
lds
mov
sbb
ffreep
push
jnp
in
sar
jbe
mov
jns
xlat
dec
cmc
sarb
aas
test
loopne
and
inc
movntps
xor
adc
test
cmp
mov
lock
outsb
filds
mov
pop
inc
mov
push
sub
fiadds
aaa
push
cld
or
pushf
movsb
sub
jle
fs
sub
fwait
or
add
mov
jno
sub
xor
adc
add
loope
rorb
and
push
dec
and
mov
inc
sub
jo
not
bound
xor
sub
and
jmp
rol
push
div
mov
in
or
or
fisubl
pop
lahf
inc
cs
lods
insl
mov
xor
add
and
ds
xor
pop
cmp
jb
lods
inc
sub
xchg
and
xor
adc
xchg
sub
jle
aas
loope
dec
jmp
sahf
cmpsb
cli
clc
mov
sub
mov
rol
decl
jo
out
cli
sbb
mov
fildl
int
mov
cmpsl
and
jnp
jmp
jbe
in
or
or
rolb
and
add
mov
call
and
ret
fimull
mov
clc
sub
loop
in
loopne
or
jo
adc
sbb
push
adc
jno
jle
jno
and
mov
pop
jne
xorb
test
pushf
mov
add
and
shrl
mov
pop
sti
push
add
jmp
mov
ficompl
jb
sub
fs
lock
lret
sbb
dec
add
inc
pop
push
pop
adc
dec
inc
loopne
push
imul
leave
bound
sub
mov
lahf
out
dec
mov
mov
and
pop
lcall
push
jne
xor
inc
jmp
or
jmp
push
inc
or
adc
or
movsl
shl
jg
cld
scas
push
inc
call
mov
jp
std
maskmovq
fwait
mov
adc
add
jecxz,pn
push
and
push
outsb
adc
push
out
add
out
inc
xchg
das
jle
xchg
xchg
in
pop
in
call
scas
icebp
out
cmp
int
mov
mov
scas
push
icebp
negl
mov
daa
mov
xor
hlt
xchg
sarb
icebp
push
mov
adc
in
mov
popl
jno
cld
xor
push
and
mov
pop
cwtl
push
je
push
add
aaa
pusha
sbb
loopne
xchg
loopne
test
loope
pop
mull
loope
lret
sbb
cli
or
pop
pop
cmpb
orl
stc
ret
sbb
ss
loopne
push
fadd
inc
add
test
xor
fidivs
sbb
stc
add
gs
xor
fsts
push
insl
sub
adc
xchg
cmc
inc
enter
loopne
sbb
fstpt
mov
mov
fbld
jno
adc
sbb
push
sub
inc
adc
adcb
mov
jmp
adc
popa
cmp
pusha
or
sub
test
loopne
push
xchg
add
cwtl
sub
sub
sbb
ljmp
xchg
xlat
sub
mov
ror
cmovs
fcomps
xor
sbb
mov
icebp
lea
push
jns
rorl
call
add
add
sub
sub
test
or
inc
pushf
cmp
rcrb
cltd
mov
ror
inc
dec
and
sub
or
push
icebp
icebp
call
mov
mov
and
sbb
test
or
push
ret
dec
enter
clc
xchg
mov
icebp
loope
inc
rcl
adc
push
or
push
js
jno
inc
cmp
out
add
mov
shll
mov
inc
ret
imul
jne
mov
test
mov
shlb
movsb
or
sub
mov
lock
adc
ret
push
mov
stos
sub
arpl
mov
jno
cmc
cmp
jmp
push
test
xor
xchg
adc
adc
test
inc
leave
cwtl
out
loope
xchg
ljmp
add
shrb
aam
inc
mov
movsb
add
mov
shl
cmp
or
in
push
dec
mov
lcall
add
aaa
lcall
loope
fstpl
xchg
ficoml
inc
adc
enter
cmp
repnz
push
fcoml
dec
mov
in
ds
aam
mov
xorl
arpl
lds
xchg
aaa
out
hlt
pop
and
mov
ret
push
mov
aas
movsl
or
loope
jo
jno
mov
pop
sbb
jecxz
gs
or
lock
or
sub
adc
adc
cs
or
repnz
and
fwait
jne
cld
or
cltd
inc
jl
jnp
std
add
mov
xchg
mov
rclb
aam
xorb
out
rorl
enter
js
push
push
pop
neg
xor
and
lret
inc
inc
movsl
sub
push
fstp
sbb
cli
es
sti
add
test
enter
mov
sbb
add
add
daa
out
xor
sub
cld
adc
aas
add
mov
xorb
mov
push
push
cmp
dec
push
pop
mov
and
adc
in
movsl
jecxz
dec
mov
add
adc
lea
dec
ja
fs
sbb
and
inc
jp
mov
rdmsr
sbb
aas
or
inc
iret
or
mov
add
aad
pushf
adc
push
xchg
adc
rolb
addl
fisubrs
dec
push
push
push
jne
push
adc
or
pop
loopne
inc
test
js
aas
sbb
add
xor
push
bound
pop
inc
aas
imul
pop
xlat
mov
xchg
sub
sub
jecxz
test
or
or
aaa
ret
inc
mov
push
pop
mov
rol
ljmp
push
push
lret
xchg
outsb
dec
adc
add
loop
jne
inc
cld
adc
nop
mov
mov
movsl
sbb
and
sub
add
scas
cmp
cmp
and
test
aad
clc
add
inc
xorb
rcl
dec
cs
and
mov
addb
or
and
xor
das
pop
sub
fstpl
push
imul
les
xor
add
fstl
outsb
jmp
cmp
mov
loopne
push
adc
mov
adc
test
lahf
loopne
adcl
dec
sarl
add
lea
mov
loop
or
mov
nop
pop
and
xor
push
pop
and
add
dec
or
insb
adc
add
xor
movl
add
test
inc
push
fldcw
add
pop
add
dec
sub
sbb
or
jmp
push
aas
dec
adc
or
addr16
lret
jmp
pop
dec
and
and
dec
scas
push
rcr
pop
pop
mov
jne
rcrl
out
sub
xchg
sbb
add
movsl
das
pop
pop
jp
and
push
clc
adc
pop
adc
mov
jmp
mov
mov
les
and
jnp
xchg
jmp
jb
insb
pop
outsl
mov
arpl
push
dec
fldt
jno
dec
outsl
clc
sarb
cld
or
xor
dec
xor
xchg
daa
repz
addl
cltd
mov
mov
mov
xor
rorb
test
iret
call
divb
pushl
lods
add
xchg
pop
sbbb
pop
sbb
cmpsl
subb
dec
push
or
inc
mov
add
mov
xor
imulb
sbb
cmp
outsl
add
adc
push
xchg
lret
sbb
mov
add
adc
cmp
and
mov
sub
orb
popf
les
ja
xchg
sub
in
xchg
cwtl
or
mov
and
std
mov
pop
divl
inc
pop
mov
jg
jnp
xchg
call
je
push
inc
push
pop
les
mov
sbb
jg
outsl
andl
jl
arpl
sbb
xchg
int
pusha
push
cwtl
jmp
out
hlt
pop
aam
mov
mov
jg
lahf
or
pop
push
jne
arpl
adc
idivl
sbb
andb
push
push
lahf
mov
jns
push
mov
pop
or
push
out
mov
shl
bound
push
jno
push
pop
sub
jbe
jmp
movsb
mov
roll
inc
cs
pop
pop
pop
clc
out
inc
mov
lds
add
dec
loop
mov
jb
ljmp
jl
sbb
sub
movsl
and
add
push
clc
loopne
inc
rcrb
jmp
adc
mov
shlb
adc
mov
adc
or
inc
enter
dec
mov
cmp
sbb
xchg
adc
dec
ja
and
sbb
xchg
in
adc
shll
add
sub
add
loop
xorl
sub
test
adc
sub
push
cmpsb
in
mov
push
and
add
or
in
or
xor
inc
sub
outsb
insl
lods
sarb
jmp
addr16
cli
clc
push
adc
jno
test
xchg
mov
rcll
mov
les
roll
mov
cld
or
adc
add
movsb
dec
inc
enter
dec
sbb
dec
dec
dec
dec
scas
popf
jns
sbbl
xor
pop
inc
lds
inc
mov
movsb
aad
std
out
pop
orb
sbb
jo
ret
lock
repnz
push
sub
jae
sub
shrb
jmp
call
ljmp
lock
add
mov
ficomps
dec
ret
ret
mov
enter
clc
adc
ret
adc
daa
adcl
popa
popa
adc
and
flds
orb
xor
pop
and
int3
in
xlat
push
sbb
hlt
jl
mov
popa
add
push
aam
or
mov
xor
popf
and
cmpsl
aam
add
xor
repnz
loope
rclb
cmp
out
adc
call
stc
mov
iret
xor
xchg
adc
filds
adc
popl
add
dec
and
mov
mov
jp
pop
and
jo
fmul
xchg
pop
popa
mov
pop
add
inc
jb
subps
dec
jecxz
push
dec
inc
and
lret
and
ljmp
and
xlat
scas
cmp
cltd
imul
add
inc
and
lea
pop
adc
rcl
and
sub
xchg
xchg
test
gs
adc
or
mov
adc
movsl
mov
cmc
cmp
xchg
or
sub
aam
loop
in
int
fiadds
or
sbb
hlt
mov
out
jae
xchg
sub
xor
pop
mov
and
add
ret
push
ret
pop
fcoml
xlat
enter
dec
in
jp
imul
mov
cmp
gs
push
lret
lret
inc
aam
out
push
jns
test
add
adc
sub
out
or
and
add
sub
sbb
aaa
aaa
inc
add
fistl
in
mov
push
leave
or
adc
das
inc
sbb
cmp
dec
sub
fildl
mov
pop
pop
add
dec
aam
inc
inc
div
sbb
push
cmc
jmp
aam
push
rorb
pop
and
fldcw
clc
ficompl
dec
lods
adc
scas
push
inc
sub
mov
mov
stc
xor
xor
loopne
pop
int3
leave
ret
mov
test
sub
inc
dec
iret
xor
ret
xor
xor
or
jbe
mov
inc
lcall
fst
shlb
inc
les
jne
dec
pop
es
int3
pusha
xor
xor
sbb
xor
cmp
popa
bound
inc
or
loop
lret
cmp
dec
dec
int3
inc
sbb
add
loop
insl
mov
inc
cmp
adc
and
xor
in
addl
or
add
test
push
push
lret
jae
jmp
lods
das
adc
jbe
loope
add
lea
sub
ficomps
repz
fdiv
push
inc
popa
popf
xor
inc
cmp
test
inc
int3
pop
sahf
sub
shll
and
adc
jne
pop
inc
loopne
into
int3
mov
inc
inc
lret
lock
out
lea
fisubrs
iret
xor
dec
add
rolb
jle
push
xchg
ret
mov
int3
and
fnstcw
adc
cmc
es
fs
add
insb
dec
xchg
out
or
pop
inc
add
pop
cmp
add
std
adc
inc
mov
add
sarb
in
mov
inc
in
hlt
lret
fcoml
sbb
cmp
mov
and
sub
push
adc
xlat
sbb
bound
faddp
mov
jae
and
and
add
cmpsb
mov
aam
adc
xchg
jno
mov
cmp
or
mov
sahf
jae
stos
pop
andb
icebp
test
and
adc
inc
push
inc
sbb
loop
mov
or
jbe
in
fwait
or
or
mov
push
enter
insb
and
xorb
lock
mov
mov
mov
add
add
dec
dec
es
notb
rorb
test
ljmp
test
notb
xchg
gs
xchg
imul
test
loope
dec
hlt
clc
shrl
lcall
push
imul
sub
xchg
or
mov
add
inc
sub
icebp
dec
inc
nop
inc
mov
sub
lock
xchg
jmp
xlat
out
push
pop
xor
cmpb
mov
cmp
aad
jmp
sbb
movl
or
inc
pop
ficoms
dec
out
movsb
lcall
imul
adc
data16
repz
pop
adc
xchg
dec
test
sti
add
mov
sbb
daa
fcoms
sub
push
push
adc
xchg
leave
lcall
jne
mov
sub
imull
jne
lahf
xlat
mov
roll
scas
lods
inc
cmp
test
shlb
fcomi
sub
insl
ret
test
dec
push
xchg
pop
out
adc
in
mov
lds
out
ficoms
jns
pop
lock
aaa
and
and
add
and
sbb
push
push
sbb
push
push
mov
fsubrs
inc
ds
jp
ds
xchg
cmpsb
mov
cmp
xor
sbb
ffreep
js
adc
jo
scas
jb
aam
dec
lahf
mov
rol
out
rolb
notb
rolb
fwait
rcrb
out
xor
test
jo
xor
lds
fwait
xchg
mov
sbb
faddl
add
add
cld
sub
sub
lea
mov
loop
push
cmpl
loopne
pop
cmp
xor
add
push
push
jle
ss
lret
cmp
push
adc
mov
adc
gs
adc
add
sahf
orb
jne
test
outsb
and
or
jne
push
add
sbb
sbb
sbb
inc
cli
pusha
push
sbb
inc
je
mov
aam
int3
lds
sbb
sar
out
cltd
mov
sub
jo
leave
nop
jmp
adc
mov
aas
sbb
add
lds
inc
in
xchg
fsubr
xchg
pop
cmp
or
ds
jae
sbb
inc
imull
push
pusha
scas
pop
cmp
jae
jno
lods
scas
or
lods
dec
xlat
adc
movsb
loopne
js
jmp
jb
call
push
cmp
mov
bound
mov
mov
inc
cmp
insl
push
std
arpl
es
fistl
or
sarb
into
fidivrs
daa
mov
jae
add
hlt
sbb
into
pop
dec
shrb
add
or
test
lcall
shlb
inc
sub
dec
ds
inc
sbb
and
mov
mov
or
aaa
push
call
sbb
repz
or
mov
add
xor
add
shll
mov
sbb
outsl
sub
andl
mov
jmp
add
jg
lock
addb
jmp
ret
push
mov
sbb
ret
pop
mov
rolb
movb
add
inc
rorb
push
rclb
fdivl
xlat
inc
outsb
add
push
mov
add
or
xchg
add
pop
dec
scas
xchg
inc
sub
in
xchg
inc
ret
add
outsl
or
dec
inc
sbb
notl
fbld
or
in
cmpsl
and
cmpb
cmp
outsb
pop
mov
push
inc
aas
xchg
sub
fdiv
ja
js
lcall
addb
xor
fisubl
sub
gs
lock
movsl
inc
or
inc
sbb
les
rorb
jb
lret
or
inc
push
clc
pop
xchg
out
mov
cld
notb
imul
daa
test
jge
mov
push
mov
mov
cmp
cmpsl
lods
js
orb
or
lcall
int
push
add
iret
mov
or
inc
sbb
xrelease
je
cmp
pushf
and
out
mov
or
push
or
jge
andb
mov
xor
mov
mov
cmp
cmpl
daa
inc
daa
jp
movsb
sbb
xor
cmp
test
ds
adc
sub
daa
mov
shl
cmp
pop
pop
dec
or
xor
xchg
aad
or
rcrb
pop
out
sarb
rclb
ret
adc
xor
dec
sahf
fmul
cli
inc
push
mov
jmp
or
xchg
jne
dec
lahf
jmp
dec
xor
jle
pop
dec
adc
pop
adc
pop
mov
sbbl
scas
ret
adc
sbb
mull
mov
mov
jbe
insb
rcrb
xor
xlat
sub
jne
out
and
or
subb
mov
aad
ret
pop
mov
ret
sub
xor
les
pop
in
add
movsb
lds
push
jle
jp
les
add
sbb
shlb
mov
bound
orl
movq
div
sbb
cmpsl
add
imul
xor
test
push
push
insl
out
add
lret
out
adc
sbbb
aam
xor
inc
mov
test
stos
jmp
ljmp
mov
pop
jmp
adc
cmpsl
shlb
js
xchg
mov
mov
rcll
xchg
adc
xor
rorl
add
and
rorl
fucom
lods
mov
loopne
repz
add
cmp
sbb
mov
sub
shrl
add
lock
rcrb
and
shlb
xchg
inc
push
loopne
and
push
addr16
mov
or
imul
xchg
inc
xchg
movsb
das
loope
dec
pop
mov
xchg
or
in
or
xchg
mov
rcl
daa
push
movsb
inc
push
hlt
and
mov
xlat
sar
lock
idivb
js
sbb
arpl
and
add
mov
sub
pop
inc
xlat
or
arpl
add
lcall
sub
cmp
popa
hlt
mov
and
fstpt
fisttpl
inc
rcrl
sbb
mov
aas
cwtl
hlt
sub
or
and
xchg
repz
scas
push
aas
test
faddp
or
loope
jl
or
fiadds
outsb
cmp
push
test
push
add
or
dec
mov
dec
pop
fwait
in
insl
in
xchg
push
xor
jno
adc
sub
pop
inc
mov
mov
fmul
rclb
clc
push
push
push
xchg
repz
sub
mov
popf
and
xor
and
dec
cmp
test
mov
or
mov
std
sbb
push
clc
mov
and
push
mov
or
ret
push
pop
dec
add
mov
daa
push
int
dec
inc
pop
or
sbb
addl
xchg
pop
xlat
push
aam
sbb
ss
push
pushf
mov
ret
mov
dec
movups
fdiv
outsb
adc
adc
or
popf
cmp
out
div
bswap
sbb
add
sub
adc
mov
ljmp
adcl
mov
xchg
lock
and
xor
sub
inc
sbb
cs
aad
jmp
mov
add
cmc
cmp
mov
adc
add
rcl
les
mov
mov
add
mov
xchg
mov
jle
subl
les
push
sub
inc
adc
int3
jae
jno
test
jmp
mov
movsb
cmpsb
pop
mov
js
hlt
insb
negb
or
lcall
mov
loop
mov
loope
cmp
addb
arpl
fdivl
add
push
add
cmp
xchg
aaa
jbe
mov
fcoms
repz
cmp
dec
out
les
lret
sub
out
mov
inc
add
cmpsl
fld
mov
and
outsb
loope
pop
and
test
jo
sbb
shr
cltd
xor
mov
mov
add
test
lds
jno
or
jle
ds
push
int3
pop
adc
or
dec
pop
dec
xorb
shll
xchg
pusha
sub
mov
sbb
jmp
fistpl
pop
inc
cmp
imulb
into
mov
div
mov
jp
cmp
sub
cmpsl
xchg
mov
xchg
cs
jle
stos
add
mov
fiadds
fwait
sub
mov
sbb
pop
sub
int3
sbb
addr16
xlat
add
cld
mov
xchg
clc
adc
xchg
jae
loop
cmp
dec
ss
xlat
xor
addb
int3
cmp
sub
pop
inc
in
jo
sub
neg
sub
je
outsb
sub
lods
bound
xor
push
dec
sbb
aad
iret
movb
xchg
dec
and
xchg
mov
sbb
push
lea
and
adc
subl
fistl
jmp
js
in
jne
gs
xchg
jne
inc
jns
dec
mov
mov
shlb
adc
mov
jne
lds
lock
push
add
mov
cmp
int3
jmp
pop
fsubrp
or
out
mov
imulb
pop
adc
cmp
jnp
shlb
add
data16
stos
ret
fbld
push
xchg
add
push
out
addl
aad
decl
cmpsl
btr
add
lds
inc
xchg
bound
mov
jno
push
arpl
mov
dec
xchg
sbb
push
jo
fnstsw
movsb
shlb
mov
cltd
int3
hlt
mov
cmp
push
mov
insl
lock
xor
pop
add
inc
jns
push
or
lods
xchg
mov
mov
mov
mov
push
xchg
in
mov
ds
lods
cmp
fs
adc
lock
sbb
xor
jne
popf
jp
ret
inc
pop
xchg
in
call
xchg
nop
xor
out
test
add
insl
mov
icebp
add
loop
cmp
pop
pop
adc
jecxz
mov
inc
xchg
rolb
andl
cmc
icebp
xor
dec
mov
lret
lds
or
outsl
das
aam
inc
or
in
sbb
add
push
mov
inc
xchg
sub
into
xor
data16
mov
adc
cmp
dec
sbb
ja
popf
hlt
hlt
or
push
out
enter
pop
add
lahf
mov
adc
fucomip
xchg
add
pop
packssdw
leave
mov
sbb
in
addl
add
sub
inc
jae
push
add
insl
cwtl
adc
lods
sub
in
dec
or
out
lea
adc
ljmp
mov
pop
sar
shll
mov
rolb
add
sbb
es
std
xor
add
adc
es
mov
sahf
add
push
cmpsb
mov
push
mov
test
mov
lds
add
dec
dec
loop
pop
ljmp
mov
adc
shrb
jno
test
cmp
adc
and
jecxz
push
sbb
xor
cmp
rol
xrelease
dec
aad
or
pop
and
cmp
fmul
pusha
push
test
scas
and
add
cltd
or
or
add
lods
sar
add
ficompl
cli
sub
xchg
add
jne
mov
arpl
push
inc
adc
adc
cs
stos
daa
test
xor
nop
push
pusha
mov
es
loop
mov
and
and
pop
test
dec
push
orb
lret
sbb
cmpsl
stos
and
pop
sbb
outsl
adc
pop
sahf
dec
jne
lahf
std
loopne
push
aam
jmp
addl
cld
dec
cmc
rorb
insb
div
in
stos
loope
inc
loope
loopne
lea
pop
pop
dec
pop
dec
stos
mov
adc
sub
shlb
pop
jle
ljmp
pop
rclb
pusha
xchg
xor
add
xchg
or
mov
out
jecxz
in
icebp
test
sub
push
inc
adc
jecxz
outsl
test
lds
mov
shlb
in
test
or
addl
ret
sub
inc
adc
push
popf
jnp
dec
decl
das
jo
dec
and
add
adc
pop
or
andb
in
pop
outsb
sub
iret
pop
rcrb
xor
icebp
mov
or
jbe
clc
add
insl
popa
bound
lock
das
mov
pop
add
popa
aam
shl
cwtl
loopne
jp
into
sahf
xchg
adc
nop
or
loopne
lods
jno
test
sub
pop
xchg
jae
outsl
loopne
in
or
and
ret
sarb
jo
cmc
and
jnp
dec
arpl
add
addb
push
dec
int3
xor
pand
sbb
sbb
adc
call
imul
pop
outsb
xor
jbe
mov
neg
or
cmpsl
cmp
lahf
and
xor
add
mov
mov
inc
push
addr16
cmpsl
mov
sbb
fsubl
out
or
aam
sub
lock
outsb
loopne
dec
cli
fdivr
add
repz
mov
cld
cmp
fwait
mov
dec
mov
pop
xchg
push
aam
neg
idiv
xor
outsb
jae
cmp
adc
mov
rcrb
add
lea
dec
xchg
jne
inc
fwait
dec
add
arpl
lods
mov
js
add
cmp
lods
pop
push
loop
les
adc
das
ret
out
shld
movsb
cld
pop
fisubl
aaa
mov
inc
mov
enter
sbb
movsl
fcmovnu
cmp
push
les
mov
fucomp
jge
cmp
dec
cmp
pop
bound
push
push
mov
jp
ret
into
scas
hlt
or
jecxz
mov
xchg
xchg
scas
incl
ret
cmpsb
and
loope
rcr
adc
mov
call
inc
sbb
int
cld
sbb
stos
insl
inc
js
aam
ds
inc
daa
out
leave
xchg
pop
inc
pop
mov
mov
movsb
push
inc
repz
mov
mov
call
sbb
in
ljmp
aas
or
adc
push
das
aam
inc
and
insb
adc
test
not
push
dec
sarl
add
xlat
mov
jecxz
push
jmp
sbb
popa
pop
out
inc
lea
test
sub
popa
or
xchg
xchg
out
pop
or
dec
lods
dec
in
sti
xchg
in
bound
dec
movsl
inc
add
ficompl
fnstsw
cmp
andb
xchg
imul
rclb
ret
out
loopne
inc
lret
xor
repnz
add
mov
lock
inc
sbb
lcall
mov
rep
or
add
or
inc
js
and
pop
and
cli
dec
setb
inc
pusha
je
mov
and
les
add
and
add
push
dec
adc
and
lcall
xor
add
ret
pop
adc
punpcklwd
jae
sbb
sbb
subl
jmp
popa
mov
fldenv
insl
jmp
jle
in
test
rolb
and
push
inc
add
sub
jle
cmp
rcl
add
scas
push
icebp
add
stos
gs
loopne
cmp
shrb
push
inc
cltd
decb
cmp
jnp
ret
inc
inc
and
mov
push
add
loope
or
int3
xor
fmulp
js
push
push
fisubrs
sub
fs
in
pop
and
adc
cmpsb
push
sub
sub
js
xchg
lahf
fbld
jle
into
push
ds
cmp
inc
rcl
sbb
or
jle
mov
dec
ret
jmp
pusha
inc
pop
test
in
mov
or
cmp
push
movsb
fstps
mov
and
dec
push
inc
inc
jmp
push
outsb
xor
add
loop
or
fnstsw
je
out
inc
or
ret
adc
cli
mov
xlat
xlat
outsl
push
xchg
pop
jmp
jne
add
pop
stos
mov
add
xor
and
mov
xchg
ret
imul
orb
adc
rolb
sbb
cmp
fwait
mov
icebp
adc
cltd
dec
lcall
jl
in
cli
add
dec
jge
in
rorb
scas
or
xchg
mov
sbb
lret
inc
sbb
es
push
mov
test
or
in
lock
xchg
adc
add
outsl
enter
sbb
mov
add
inc
sub
add
mov
mov
jmp
mov
add
sub
icebp
add
sub
repz
and
aas
dec
popa
movsl
jnp
xchg
push
dec
sub
loopne
mov
mov
mov
dec
mov
push
sub
lcall
dec
out
mov
into
rcr
ljmp
pop
cmpsl
dec
and
inc
xor
and
inc
ret
in
pop
nop
js
mov
andnps
cmc
icebp
or
and
mov
sub
push
mov
sub
test
stc
inc
push
idiv
jg
sbb
add
imul
dec
addr16
xorb
incl
xchg
and
jmp
cmp
mov
in
jae
loop
fildl
inc
add
cmp
jge
push
add
repnz
fwait
rolb
les
imul
push
add
shll
push
xor
add
call
xchg
jo
aas
in
jp
enter
and
add
dec
cmp
lods
aam
push
ficoms
dec
or
add
out
pop
movsb
dec
ljmp
lds
add
dec
fildll
or
add
or
inc
mov
add
popf
add
xchg
add
call
xlat
sub
mov
loopne
jg
jg
or
pop
loope
ret
adc
add
add
push
pusha
jno
gs
add
push
pushl
add
mov
maxps
cli
xchg
xor
sbb
push
cmp
std
sahf
repz
shr
mov
add
hlt
add
call
sarl
inc
dec
inc
push
idiv
xor
fbld
fistps
jnp
push
cmpb
inc
jbe
daa
xchg
bound
mov
jl
daa
add
call
dec
or
mov
pushf
add
adc
mov
jo
sarb
mov
dec
add
outsl
xchg
mov
divb
cmpl
push
push
push
fucomi
lcall
fsts
xchg
std
add
aad
mov
frstor
scas
bound
or
jmp
adc
andb
aam
shlb
push
cmpsl
xor
stos
aad
xor
inc
xchg
adc
sbb
mov
das
clc
mov
shll
push
add
xchg
sub
fists
mov
or
add
outsl
ret
inc
cltd
add
or
dec
mov
rolb
mov
sub
pushl
cmpsb
lods
adc
pop
cmpsl
add
dec
add
stc
add
add
lock
clc
and
or
jcxz,pt
mov
and
aam
jmp
adc
shll
iret
in
add
dec
jns
mov
add
in
ret
xor
es
push
pop
imul
push
jge
jnp
das
xor
mov
adc
add
out
mov
cli
jecxz
jge
add
in
dec
or
nop
cmp
cmp
pop
mov
jb
mov
jmp
add
or
movsb
add
arpl
or
xchg
mov
loop
pop
ret
rclb
pop
icebp
fistl
fldenv
scas
mov
cmpsb
fists
je
aaa
call
jl
add
outsb
pop
jp
jns
add
or
pop
mov
inc
mov
add
or
mov
out
clc
push
pop
fistpll
add
out
mov
cli
les
mov
fwait
or
lahf
hlt
fs
fbstp
cmpb
and
add
rcrb
add
cmp
add
cmpsb
or
push
lea
fstpt
filds
rcll
mov
mov
fcomip
call
mov
inc
cmp
adc
mov
je
pop
jo
bound
and
pop
ficoml
pop
add
test
cld
add
test
mov
mov
push
add
mov
jbe
mov
mov
adc
icebp
repz
push
in
add
out
pop
mov
cmp
or
xchg
mov
mov
fimull
dec
adc
pop
sub
jmp
incl
inc
lcall
stos
add
ret
ljmp
pop
mov
push
ljmp
aad
dec
sbb
and
ja
aam
mov
mov
not
mov
int
or
fisttps
add
inc
xchg
xor
scas
repnz
js
push
inc
sti
mov
roll
and
cmp
pushf
jge
les
push
mov
test
mov
jp
out
addb
pop
and
mov
popa
ljmp
je
pop
mov
stos
push
inc
push
add
into
xchg
inc
into
add
xchg
stc
add
push
mov
push
and
jg
jmp
or
push
popa
push
dec
cmp
popf
loope
decl
sahf
fwait
sahf
add
cs
cmpl
or
test
mov
lret
sbb
dec
ret
jmp
cltd
insb
sti
push
add
ljmp
std
pop
add
pushf
decl
jle
in
cmp
and
lret
movsb
sub
inc
inc
pop
in
cli
mov
imulb
inc
movsb
es
aad
cmpl
push
fildl
xchg
sahf
stos
notb
mov
loop
and
cmpl
clc
sbb
and
in
add
outsl
das
clc
fsubs
je
jmp
lcall
jg
incl
or
aam
add
adc
jmp
or
pop
cs
push
loop
jno
inc
add
dec
fdivl
dec
push
les
xchg
insl
inc
stc
push
or
imul
scas
jp
loope
cmp
fs
dec
cwtl
mov
pop
fists
popa
mov
and
lea
subl
add
push
mov
add
and
add
cmp
push
inc
mov
js
test
xchg
mov
mov
movsl
xchg
push
nop
cmpsb
aam
mov
jns
cmp
subl
lcall
arpl
xor
cltd
fadd
call
dec
push
fucomp
insl
insl
xchg
adc
pop
pop
ret
rcl
mov
add
insb
aam
xchg
or
std
int
hlt
push
add
dec
mov
lods
loope
inc
mov
add
je
fstl
lds
std
mov
mov
sbb
xchg
xchg
ret
mov
int3
jg
xorb
inc
xor
mov
pop
sub
cmc
pop
push
jmp
cmpsl
pop
add
es
and
inc
dec
testb
pop
in
add
mov
jo
xor
add
cmp
xchg
push
notl
fwait
ljmp
clc
fadds
scas
xchg
add
dec
sub
xchg
mov
add
and
dec
clc
mov
sarb
or
fisttpl
out
mov
add
sub
push
sub
aaa
sub
inc
out
cmp
in
xor
push
repz
pop
adc
inc
jecxz
lds
es
ljmp
loopne
adc
push
shr
mov
add
and
ud1
push
push
lods
xor
add
or
mov
scas
scas
es
outsb
push
dec
mov
addb
stos
enter
adc
xchg
push
pusha
mov
mov
inc
ret
std
or
pop
xchg
rcrl
jp
cli
mov
add
adcb
cmpsl
mov
mov
cltd
mov
movsb
mov
sbb
faddl
out
int3
xchg
loope
rolb
fisubrl
ss
sti
cwtl
push
adc
push
mov
stos
sbb
std
insb
jnp
mov
add
or
cs
mov
daa
and
cmp
jno
inc
mov
sbb
clc
outsl
movsb
nop
xchg
add
push
ljmp
adc
or
ret
mov
andb
pop
add
mov
out
decl
in
jl
int3
mov
mov
lcall
jnp
shrb
adc
mov
loopne
out
dec
addl
lret
cmpsl
addl
lock
mov
ljmp
add
es
push
mov
add
ja
inc
push
or
push
pop
subb
push
mov
sbb
sub
jno
loop
or
icebp
mov
and
add
test
add
push
add
sbb
sbb
adc
pusha
adc
adc
pop
mov
add
call
cld
mov
mov
notb
jne
es
mov
or
pop
push
arpl
xor
cmc
cmpb
lock
add
sbb
nop
aaa
fucomip
push
rolb
outsb
enter
clc
mov
idiv
mov
mov
and
pushw
fcompl
jp
lock
mov
mov
rorb
or
mov
pop
loopne
jnp
add
inc
add
mov
push
push
sahf
mov
dec
lock
fistpll
and
popl
and
push
std
xchg
sub
xor
lock
loopne
mov
dec
mov
lea
fimull
mov
inc
ds
loopne
daa
xor
test
mov
pop
or
loop
ret
sub
aas
jo
out
scas
sahf
fdivrs
xchg
cld
aam
mov
add
mov
test
add
call
cmp
dec
push
cmp
ret
fbstp
shrl
lds
mov
int3
sub
cmpsb
push
clc
cmpsl
daa
lds
add
add
inc
add
push
xchg
push
cmp
sbb
pop
jp
dec
clc
iret
out
mov
mov
inc
dec
add
push
add
add
popa
inc
decl
pop
inc
add
push
and
cmpsb
jle
adc
fcomip
pop
push
stos
pop
std
jns
icebp
subb
adc
dec
adcl
inc
jp
add
xchg
movsb
pusha
push
imul
sti
jne
and
movb
mov
add
and
inc
les
mov
mov
dec
mov
adc
adc
cld
jmp
clc
aaa
push
xor
scas
imull
bound
icebp
jl
push
sbbl
stos
jne
inc
push
or
into
jno
pusha
fistpl
sbb
pop
xor
xchg
inc
aad
test
aam
sbb
and
insb
mov
orb
jmp
in
mov
xchg
arpl
sbb
arpl
es
std
sbbb
add
dec
stos
in
int3
iret
cmp
stos
js
push
cmc
pop
push
mov
dec
push
and
fwait
pop
add
aaa
xor
jo
test
push
push
jo
sti
cmp
loop
lahf
shlb
xchg
cmp
xor
xor
sub
and
jg
ja
int3
cmp
cld
pop
add
push
dec
mov
push
ja
sub
or
inc
sbb
mov
sbb
xchg
bound
mov
stos
sub
add
adc
rclb
mulb
mov
out
pop
or
cmp
and
and
add
enter
add
bnd
sub
mov
dec
shlb
jg
insl
lcall
xlat
fs
cmpsb
negb
ss
sbb
pusha
mov
lds
sbb
mov
nop
fsts
pushf
xchg
adc
jb
lahf
mov
mov
cmpsb
bound
jg
jne
xor
fcompl
lea
stc
popf
sbbl
jmp
int3
mov
push
rolb
shrb
fld
inc
add
enter
aad
mov
aaa
mov
add
pop
shl
and
adc
sbb
push
les
jmp
mov
stos
mov
out
add
nop
test
xor
jg
ffreep
mov
cmpsl
adc
mov
test
xchg
or
in
outsb
cli
jg
inc
lea
push
mov
jmp
jnp
popf
add
in
shrb
orb
popf
sarb
std
adc
push
adc
mov
or
push
lods
push
mov
icebp
cli
sarb
lods
cli
stc
pop
icebp
das
sar
cld
xchg
les
pop
cs
pop
jmp
je
and
rcr
icebp
mov
add
scas
call
mov
mov
add
fcmovnb
sub
cld
incl
test
ret
cmp
dec
or
mov
stos
cmp
jb
add
rcl
ljmp
lea
into
ficoms
sti
add
clc
add
lcall
mov
idivb
int3
hlt
push
pushf
daa
decl
insl
aaa
scas
xchg
cmp
cmp
sub
inc
jg
mov
xchg
lret
inc
cmp
pop
es
inc
out
cmpl
add
and
shrl
jmp
outsl
push
ret
inc
in
add
cmc
jg
cltd
ss
fisubs
scas
mov
aas
push
or
cmp
xor
jg
data16
rorb
data16
adc
pop
or
hlt
jbe
fidivs
inc
push
inc
lea
loopne
mov
movsb
pop
sub
leave
divb
test
loop
xchg
push
mov
lret
pop
mov
pop
jne
mov
popf
add
jg
push
lock
inc
decl
xchg
cmp
push
movsb
call
out
mov
cmp
xchg
stos
les
push
loope
leave
or
rcrl
stos
pop
inc
adc
aaa
push
test
mov
or
jg
pop
sbb
mov
mov
ja
adc
add
pop
incb
pusha
adc
xlat
jo
adc
add
mov
stos
lcall
or
adc
push
add
dec
mov
xchg
or
mov
incb
fstp
xorb
mov
movsl
sub
sbb
or
cmpsb
push
cmpsb
cmp
jo
outsl
mov
pushf
cli
ret
decl
rorb
cvtps2pd
ret
cs
mov
xor
das
es
xor
push
dec
sbb
jle
fsubl
push
and
or
fadds
jmp
inc
js
test
divl
add
ret
add
jmp
inc
lock
ja
inc
popf
pop
cmc
jg
filds
xor
adc
ret
adc
lds
addb
dec
push
inc
fs
jo
mov
mov
or
mov
inc
sbb
mov
inc
and
loopne
out
idivb
add
and
out
mov
lock
push
inc
fnsave
lea
aad
push
xor
mov
pop
push
pop
xor
ljmp
mov
jmp
add
dec
outsb
insl
inc
or
js
nop
and
popf
jmp
mov
pop
jp
cmc
lock
insl
push
lods
inc
out
mov
insb
and
lock
lods
ficomps
rorb
jo
add
push
cld
aas
jo
xchg
pusha
subl
inc
add
pop
std
sub
mov
sub
pop
rorb
repz
sbb
xchg
push
scas
dec
nop
ja
and
call
jp
and
and
andb
fidivs
jmp
dec
hlt
adc
xchg
and
inc
nop
aad
ljmp
inc
outsl
dec
add
adc
or
outsl
cmp
and
andb
repz
mov
cli
jmp
gs
pop
pop
andb
lret
xchg
and
xchg
std
pop
jg
jmp
mov
push
sub
in
ss
pop
mov
mov
int
imul
mov
ja,pt
sbb
xor
in
dec
icebp
lods
push
bound
lret
call
add
mov
lock
add
or
test
push
dec
orl
push
dec
ds
push
inc
bound
xchg
test
push
xor
or
push
mov
push
jle
test
cli
jo
dec
mov
fnsave
push
or
xor
jns
mov
jmp
mov
pushl
and
add
movsl
xor
cmpsl
cmp
test
push
add
jbe
jg
lcall
xor
test
mov
js
push
lret
and
xchg
inc
sub
push
add
sbb
mov
cmpsb
pop
outsl
inc
repz
daa
push
cmpsb
jne
xchg
testl
pop
mov
or
pop
jae
xchg
cmp
cmpb
outsb
jp
push
pushl
and
nop
push
adc
sbb
xchg
and
dec
xor
out
clc
scas
xor
jg
pop
std
shl
and
scas
es
fwait
popa
adc
sbb
lcall
add
xor
or
in
cli
fbld
mov
pop
push
je
clc
push
icebp
mov
mov
clc
mov
pop
mov
mov
add
notb
rorb
sar
pop
push
add
xor
mov
sbb
mov
das
pop
jo
xchg
cmp
cmp
adc
arpl
stos
or
lea
mov
daa
mov
mov
sub
outsl
sub
add
hlt
cmp
mov
and
cmc
sub
adc
loop
adc
cmp
or
pop
add
or
push
in
sahf
push
shrb
cli
push
ja
mov
fimull
push
inc
fdivs
adc
lret
ret
fwait
scas
cli
pop
test
add
imul
cld
pop
ja
jmp
add
loop
push
lods
push
or
add
inc
aaa
jno
sar
outsl
pop
adc
pop
adc
jmp
dec
inc
sbb
in
outsb
adc
ret
test
subl
loopne
mov
pop
push
shl
push
pop
jo
jae
ljmp
push
and
pop
fidivrs
dec
pop
loopne
sub
insb
xchg
adc
pop
daa
jle
loope
sahf
mov
mov
inc
pop
js
fcom
jno
jbe
xchg
dec
sbb
pushf
sbb
sbb
jle
adc
push
mov
sbb
mov
hlt
cmc
add
add
sbb
cmp
sbb
es
sub
popf
fsubs
outsl
sub
add
filds
pusha
xchg
shll
mov
fiaddl
mov
jl
mov
lcall
and
xchg
les
adc
mov
loop
imul
push
mov
loop
movsl
cs
ljmp
jle
mov
xchg
cmpsl
lock
add
jmp
imull
imul
add
nop
stc
in
dec
inc
neg
sbb
adc
cltd
das
cwtl
cmpb
aaa
mov
addr16
std
mov
adc
pop
sbbb
cwtl
jbe
dec
outsb
fstps
lcall
js
cltd
add
das
adc
faddl
idivl
cmp
stos
fldcw
lds
add
jl
sahf
repz
lods
push
inc
orb
and
incl
pop
jl
pop
sahf
lcall
inc
in
sar
pushl
push
pop
idivb
adc
fnstsw
imul
add
jno
push
xlat
push
cld
int
cmpsl
lods
cmc
es
aad
push
mov
and
les
movsb
jmp
sti
imul
std
mov
shll
sbb
add
in
push
in
call
add
call
xchg
or
jo
jo
pop
lea
inc
pop
sub
shrl
rcrl
nop
fildll
jmp
and
cmc
sbb
stc
or
sbb
jno
das
pop
or
sbb
adc
xchg
dec
adc
or
xor
arpl
adc
push
mov
in
lret
test
push
sbb
mov
filds
push
inc
push
pusha
cmpsb
orb
dec
cld
or
dec
and
cli
push
sarb
clc
dec
cmp
lret
daa
push
lock
js,pn
nop
cmp
sub
aam
push
fmul
and
adc
xchg
add
fnstcw
jmp
cwtl
bound
push
fs
jae
add
or
add
mov
popa
sarl
mov
inc
push
dec
testl
push
mov
jmp
pushf
jle
rcl
mov
sub
and
and
push
cmp
add
xor
stos
add
xchg
sub
xchg
out
cli
push
mov
cli
pushf
mov
scas
aam
nop
stos
add
shrb
mov
js
mov
cli
orb
xor
push
dec
iret
inc
xor
sbb
lods
sarb
adc
addb
and
inc
cld
andps
and
xchg
xor
or
loope
jecxz
dec
icebp
fsubrl
lds
das
add
jg
mov
mov
faddl
add
jge
mov
dec
pop
adc
mov
hlt
push
cmp
in
in
mov
push
add
les
adc
xchg
sub
lcall
mov
ss
ljmp
push
xchg
mov
xchg
mov
pushf
mov
inc
stos
hlt
mov
mov
fidivrs
add
iret
in
mov
inc
xor
cmp
lcall
mov
pop
jns
movsb
call
mov
push
pop
je
xchg
call
mov
jb
dec
add
pop
dec
cmp
imul
movsb
stos
or
loope
testb
push
inc
lret
jbe
subb
jb
insb
xor
ss
stos
imul
out
push
jp
pop
and
mov
mov
and
aaa
or
pushl
jge
mov
ss
push
xchg
ret
dec
mov
xchg
std
xlat
xlat
es
push
daa
movsb
cs
adc
jl
add
xchg
jge
add
loop
aad
jge
mov
stos
out
js
pop
cli
mov
out
cmp
mov
js
je
ds
push
and
pop
lds
push
ret
adcb
fnstsw
icebp
fcom
push
sub
lahf
cmp
cld
or
xorl
xor
or
ja
cwtl
mov
int3
mov
jbe
stos
outsb
pop
push
insb
pop
hlt
mov
add
pop
lret
dec
call
les
sub
aam
push
divl
and
pop
hlt
call
cltd
in
sbb
adc
inc
mov
lret
xchg
xchg
call
adc
out
add
imul
lea
incl
add
jne
divb
cmp
dec
or
aas
add
push
or
adc
mov
iret
jmp
sub
sub
sub
fbstp
jnp
es
cmp
fiadds
insb
lcall
iret
cmpsb
fucomi
push
cs
or
call
and
jbe
call
rcrl
mov
push
mov
bound
and
jb,pn
hlt
stos
add
dec
outsb
loopne
add
shrb
or
cltd
xor
jb
ss
ds
je
xor
mov
sbb
add
lret
xor
loop
jbe
sub
sbb
jae
inc
xchg
push
push
movsb
mov
adc
sub
mov
sub
filds
push
ret
test
ss
lret
sbb
push
dec
sti
xchg
fs
push
push
daa
push
mov
add
ret
push
in
mov
xor
std
in
sbbb
mov
add
decl
fucomip
pop
add
jmp
inc
sti
add
push
cmpsb
add
xor
fs
cmp
pushl
jmp
nop
add
mov
sahf
dec
aaa
cmp
pop
lret
jecxz
fiadds
pop
add
inc
insl
cmp
jbe
mov
popf
push
mov
push
popf
push
jb
xor
mov
outsl
test
or
xchg
rcrb
pop
inc
sti
mov
cmp
cmp
testb
sub
les
xchg
pop
lock
adc
addr16
adc
xchg
lods
adc
shrl
jbe
dec
shl
xchg
mov
mov
mov
xchg
mov
adc
push
in
outsl
fcompl
movsb
or
xor
push
or
lret
mov
dec
cltd
loope
icebp
icebp
mov
movsl
pop
cmp
call
insb
sub
adc
sbb
add
in
mov
js
mov
cmpsb
adc
add
ss
pushf
cltd
lret
int3
cld
or
xor
decb
adc
pop
add
cltd
xor
stos
adc
inc
out
pusha
nop
adc
sti
jmp
aas
or
stos
or
add
jge
inc
cmpsl
add
aad
mov
mov
lret
outsl
add
loope
sti
call
addl
shrl
and
movsl
jmp
or
call
xchg
icebp
lds
or
mov
test
xchg
add
scas
ljmp
add
and
lods
std
outsl
in
int3
cmc
sub
cmpb
inc
nop
xchg
push
das
fdivr
in
xchg
inc
or
cmp
mov
jle
cwtl
ljmp
je
mov
adc
in
push
call
popa
xchg
jbe
adc
sub
jecxz
pop
sbb
or
or
cwtl
or
pop
pop
push
lock
scas
push
je
shrl
jne
adc
fbstp
loopne
mov
idivb
add
dec
mov
sar
jg
dec
vaesdeclast
cmp
stc
add
std
aaa
inc
adc
inc
cs
or
gs
enter
js
mov
and
xor
and
cmp
mov
scas
push
add
push
lds
mov
jbe
inc
fwait
incl
hlt
insb
sarb
push
outsb
jbe
dec
sbb
cltd
cmpsb
add
mov
pop
test
cmpsl
add
fwait
sahf
or
pop
pop
shlb
fldcw
pop
je
mov
add
hlt
popa
xor
shl
icebp
push
mov
jne
andb
cmpsb
ja
scas
jmp
call
lcall
mov
lcall
dec
out
shr
mov
mov
cmp
jle
jmp
shlb
push
in
mov
pop
dec
fstps
out
fs
push
imul
mov
sub
leave
jne
sub
xchg
fstpt
lock
xchg
lock
lahf
jl
sbb
jbe
xchg
fstl
dec
add
mov
lea
imull
out
pop
add
out
xor
inc
and
push
sti
divb
cmpsb
sub
jle
shrl
and
movsl
loope
test
sub
out
jle
dec
xchg
lods
xor
inc
jb
movb
or
cmpsb
jl
or
dec
call
cld
lds
enter
xchg
mov
cmp
push
les
jmp
mov
add
fbstp
or
add
lcall
add
xorb
sbb
push
das
push
jle
sbb
sub
xchg
mov
clc
stos
sub
fcomps
jl
jmp
xchg
mov
jno
scas
sbb
jle
loop
add
fists
subb
notl
insb
nop
cmpsb
mov
push
add
sub
mov
cld
lea
adc
pop
pop
ret
add
fildl
testl
mov
test
aam
pusha
fsubl
mov
push
cmp
mov
test
sbb
jle
pop
jb
mov
push
inc
push
xor
mov
into
rcrl
sbb
filds
clc
test
add
mov
jns
and
sub
jb
sar
add
test
ss
inc
mov
push
addb
lods
xor
lea
lea
insb
cwtl
aad
mov
fiadds
inc
mov
lea
xchg
sub
call
inc
data16
sti
scas
cwtl
repnz
xor
and
pushf
add
sub
pusha
lock
rcrb
lret
jno
inc
sbb
jle
jge
fistl
sbb
xlat
fs
out
mov
and
jo
lret
stos
or
cwtl
mov
mov
addb
lret
out
push
ret
or
scas
cld
sbb
mov
and
push
mov
lods
scas
push
jnp
test
mov
fadds
push
sub
cmpsb
ret
outsb
mov
or
and
adc
xor
ficoms
fldl
xchg
dec
imul
xor
test
sub
shl
mov
push
sar
push
dec
fistl
jge
sub
mov
imul
popf
sub
out
or
push
movsb
pop
std
mov
cli
pop
insb
iret
jmp
mov
mov
mov
out
cmp
or
bound
mov
push
dec
data16
pop
or
cmp
jbe
jg
lcall
pop
sbb
sti
push
outsb
test
push
es
outsl
jmp
cmpsb
xor
aam
in
in
clc
sahf
loopne
aad
pop
lock
icebp
adc
lods
andb
aas
push
scas
or
scas
or
and
pop
push
mov
mov
dec
inc
insl
repnz
lock
shrl
inc
popa
subb
pushl
cld
mov
gs
mov
sub
fstpl
ret
mov
pop
jge
cmp
scas
mov
mov
lock
shrb
ss
pop
mov
adc
xchg
jmp
mov
adc
jg
loope
or
aaa
mov
dec
mov
decl
icebp
ret
sahf
loop
sub
xchg
test
inc
bound
add
dec
daa
dec
pop
xor
sbb
xor
xchg
push
les
jmp
adc
cmpsl
adc
fsubr
push
add
mov
sbb
mov
mov
mov
mov
adc
and
shll
stos
clc
decl
je
push
decl
stos
repz
pop
jl
sbb
pushf
lock
jno
or
xchg
and
cmc
or
fidivrs
inc
push
test
sub
fisubrs
mov
xor
mov
fldl
push
out
pop
sbb
mov
mov
push
jnp
call
or
sbb
adc
clc
add
outsb
sub
imul
mov
adc
mov
cmc
ja
inc
insb
mov
jnp
inc
out
dec
flds
sahf
mov
dec
mull
outsb
ljmp
add
imul
jle
add
sbb
mov
add
into
pusha
mov
push
pop
into
sbb
out
inc
mov
mov
adc
dec
cmp
mov
and
jge
test
jnp
es
call
sub
test
hlt
fdivl
pop
mov
jno
ffreep
out
sub
add
push
mov
lret
aaa
rcll
inc
cli
adc
sub
xchg
imul
lock
sub
jno
sub
cwtl
call
and
mov
or
sub
sub
scas
cli
cmp
mov
or
and
vmread
scas
jbe
push
add
es
arpl
repz
das
fldcw
xchg
js
cs
inc
sar
sub
mov
jl
int
int3
shrl
mov
sbb
cld
add
sbb
dec
or
and
sub
mov
xchg
sbb
scas
test
arpl
or
dec
lods
xchg
ss
shlb
fmuls
add
add
hlt
lcall
xchg
push
mov
clc
mov
mov
push
ds
xor
cld
into
jmp
hlt
cmpsb
mov
jnp
lds
cmp
lock
or
mov
mov
xlat
push
xchg
sbb
fisttpl
adc
out
arpl
mov
rcr
adc
aaa
cld
int
dec
add
jno
nop
mov
loopne
sbb
xor
xor
adc
mov
add
inc
mov
cli
mov
xchg
xor
repnz
cli
nop
loopne
ljmp
push
dec
test
out
push
or
xlat
or
push
add
or
xchg
xchg
add
sbb
bound
push
and
adc
pop
rorl
sub
rorl
fucom
outsl
push
cmc
mov
shlb
orl
mov
lcall
add
lahf
imulb
call
pop
icebp
in
pop
add
dec
pop
xchg
loope
jnp
mov
cli
cmpsb
inc
fldt
fisttpll
int
stos
jmp
pusha
out
movsl
cmp
add
in
cs
lock
mov
or
clc
push
pop
repnz
mov
push
adc
mov
jp
mov
sbb
xor
pop
inc
adc
xlat
loope
rcrb
mov
cld
cli
sbb
sub
lock
or
mov
fmul
adc
pushl
add
cmpsl
mov
ljmp
loope
mov
filds
mov
outsb
movsb
cmpb
les
or
outsl
add
jo
out
push
mov
rcl
inc
xor
xor
clc
stos
xor
xorb
mov
clc
pop
mov
js
or
in
sbb
scas
mov
add
jne
push
testl
pop
fsts
sbb
push
loopne
and
roll
sub
sahf
jmp
sbb
mov
bound
jg
bound
and
imul
adc
push
lret
in
pop
lea
mov
xchg
movsb
jnp
sbb
pop
mov
fs
cwtl
stos
je
scas
cmp
je
and
in
sub
pop
gs
loopne
enter
jmp
push
mov
das
push
add
push
mov
xor
add
mov
mov
or
loopne
mov
inc
push
jmp
mulb
test
fists
mov
add
xchg
mov
int
jecxz
adc
pop
and
fwait
mov
mov
test
push
cmp
out
psubq
dec
imul
adc
pop
js
sbb
pushl
popa
lock
dec
fidivs
shl
dec
adc
fnstcw
loope
adc
and
mov
mov
jb
inc
clc
mov
mov
push
pop
mov
xchg
fnstenv
xchg
fbstp
inc
mov
movsl
or
pop
xor
push
shl
pop
add
and
ss
ds
adc
add
jg
fildl
sbbb
mov
incl
out
or
stos
inc
fwait
dec
in
cwtl
cwtl
inc
addb
or
mov
sbb
push
test
fidivrs
jecxz
cli
test
imul
test
cli
jg
sbb
dec
hlt
or
cmpb
push
popf
fidivs
stc
or
testl
ret
push
fs
lcall
bnd
loopne
mov
mov
sub
cs
cltd
mov
popa
subb
fimuls
nop
in
scas
inc
push
push
mov
lods
add
push
mov
out
or
mov
inc
xchg
or
cmc
add
sarl
jl
loop
and
call
push
imul
enter
push
arpl
add
sahf
adc
int
xchg
add
sbb
cld
and
stc
sub
fwait
into
movsl
rorb
in
push
fistpll
or
mov
inc
mov
movsb
out
inc
ret
aaa
add
call
or
inc
stc
or
hlt
mov
xchg
dec
push
aas
jg
idiv
scas
ds
cmpb
mov
dec
add
xor
add
das
pop
sub
int3
or
in
clc
push
push
fcomps
inc
pop
add
rcrb
cwtl
lea
mov
pop
inc
mov
add
cmp
movl
loopne
sbb
imul
cmpb
mov
push
mov
incb
data16
mov
xor
int
rolb
or
clc
call
movsb
xchg
xor
cmp
mov
push
jg
add
add
mov
in
cltd
xor
add
add
xchg
lods
inc
sti
xchg
sub
mov
in
in
lret
mov
push
ret
jp
idiv
cli
lock
daa
repnz
push
loope
jle
outsb
into
lret
mov
les
test
rorb
cld
inc
fiaddl
inc
mov
push
mov
adc
push
nop
mov
pop
adc
pop
in
cmp
scas
jo
ss
dec
test
and
xor
movswl
jno
inc
jb
mov
cwtl
xor
inc
hlt
fucomi
adc
and
roll
fidivrs
punpckhdq
adc
sub
ss
mov
lds
addr16
std
popf
clc
jp
mov
sub
jl
xchg
xor
lcall
xor
ja
mov
js
pop
outsl
das
mov
mov
scas
mov
xor
lods
dec
xor
loopne
fildl
jb
lret
sub
add
cmc
add
lods
loopne
cmp
xor
xchg
dec
push
lock
orb
push
in
inc
pusha
clc
int
ja
push
daa
addl
lock
ljmp
xor
add
jno
jne
add
adc
ret
testl
stos
push
mov
call
outsl
add
pop
and
inc
enter
gs
or
lcall
test
sarb
and
xchg
or
xor
add
insb
sub
mov
in
push
dec
sahf
data16
or
pushf
mov
add
out
mov
inc
idivb
outsb
fcoms
fiaddl
out
pop
inc
sbb
lret
xor
or
or
cwtl
repnz
cli
enter
clc
jg
les
mov
lea
xchg
out
or
xchg
mov
and
cmp
add
push
insb
movsb
mov
sub
sahf
push
sbb
lgs
jbe
mov
mov
inc
or
push
and
cs
xchg
lods
xor
cmp
pusha
mov
dec
stos
testl
lcall
lods
mov
fsubrl
mov
fcoml
aaa
or
loop
dec
add
into
movsb
je
and
xor
jo
outsl
push
jle
sub
cld
mov
mov
fmull
cmp
ret
cmp
aaa
adc
sbb
outsb
aaa
xchg
push
push
add
mov
lods
fwait
test
insl
js
daa
les
adc
adc
add
sbb
xor
sub
add
mov
add
xor
scas
adcb
leave
xor
stos
jle
cwtl
js
inc
insb
dec
stos
repnz
push
lcall
push
int
arpl
pushf
aam
pushf
inc
cmp
sbb
mov
push
dec
xchg
rolb
les
jo
iret
sbb
aas
push
mov
ja
jbe
or
std
mov
out
mov
mov
sar
es
sbb
fs
shlb
test
push
out
aad
test
or
xchg
ret
lock
loopne
in
mov
outsb
pop
std
and
or
sub
adc
out
pusha
stc
pop
jo
clc
pop
dec
add
jo
cmp
call
xchg
jle
scas
test
into
mov
fists
scas
sbbb
stos
cmp
pop
lock
in
sbbl
adc
sti
ja
std
or
xchg
test
in
xchg
pop
xchg
add
pop
inc
sbb
aaa
push
mov
mov
dec
in
pusha
inc
mov
pop
test
sarl
push
cs
push
mov
outsl
fsubrs
les
leave
jl
popf
jmp
sub
shlb
pop
push
push
mov
adc
dec
sub
aaa
loope
push
clc
adc
movsb
and
inc
jg
roll
xchg
sub
lock
lods
or
or
and
xor
jno
rolb
sub
add
cmp
subb
imul
pop
mov
add
out
nop
jle
fimuls
xor
xchg
adc
push
incb
dec
and
cmp
fcmovnbe
push
pop
aad
in
cmp
add
mov
cltd
xchg
nop
je
iret
pop
cmpsb
add
lret
subl
aad
imul
jp
in
sbb
jae
sub
jnp
les
rolb
cwtl
insl
clc
push
mov
push
xchg
push
ficomps
imul
xchg
sbb
mov
xor
and
in
and
test
outsb
dec
fbstp
jle
loope
fsubr
insl
les
lock
sbb
pop
jecxz
xchg
add
test
xchg
push
adc
test
jo
or
cld
push
addb
shl
xor
out
iret
jle
jmp
mov
mov
and
in
lock
addl
pop
xor
lods
push
ja
xchg
mov
addr16
xchg
and
enter
decb
ror
mov
push
sub
push
add
movsb
add
movsb
or
push
and
xchg
push
adc
push
loope
inc
xchg
ss
and
and
dec
cmpb
js
ja
mov
or
mov
push
inc
adc
loop
jo
pusha
xor
push
adc
dec
cmp
push
push
movsb
jp
dec
call
jne
fistpll
pop
inc
mov
and
lods
out
inc
fucom
out
mov
mov
mov
dec
shlb
movsb
in
xchg
mov
pop
cmp
jo
xor
add
les
mov
cmp
mov
sahf
test
add
imull
and
fldenv
inc
adc
movsb
inc
fisubrl
lds
mov
pushf
sti
push
xor
xor
sub
mov
ja
into
mov
jp
xchg
popf
rol
ret
cmp
push
jmp
jb
inc
push
jp
jmp
jmp
icebp
jmp
call
pop
out
out
clc
cmp
sbb
mov
gs
inc
push
loopne
adc
xchg
cmp
inc
and
sbb
mov
or
jp
push
fs
jg
inc
incl
push
in
xchg
test
movsl
push
dec
add
std
or
call
cmp
pop
bound
aas
pop
out
adc
ss
xchg
pop
adc
lret
push
mov
cs
je
fucomi
lods
add
je
outsl
js
in
inc
mov
add
pop
cmp
mov
dec
jg
icebp
call
fistps
loopne
mov
mov
int
or
inc
xchg
cmp
or
shlb
test
jno
xor
lret
lds
sub
enter
push
mov
mov
jg
ljmp
mov
xchg
lahf
fs
icebp
push
mov
add
dec
sub
insb
call
jo
popa
out
lock
fadd
jge
outsl
mov
ljmp
or
mov
jg
lret
mov
cld
stos
mov
repz
add
adc
mov
push
push
inc
add
call
xchg
ljmp
mov
push
movsl
shrl
jne
ficoml
nop
add
jmp
ret
cmpl
pop
mov
ja
adc
cli
dec
cmp
movsl
lahf
dec
or
push
fcomps
pop
sbb
or
push
jbe
sub
mov
mov
inc
and
mov
adc
lret
xlat
jae
add
inc
stos
cmpsb
or
mov
ljmp
pop
inc
xchg
enter
or
jo
je
xchg
mov
cmpsb
inc
clc
dec
call
leave
mov
jnp
push
call
push
cmpsb
pop
ljmp
in
add
adcl
outsl
hlt
aas
dec
jo
pop
out
andb
aad
dec
mov
je
aad
adc
and
or
fwait
mov
and
popf
cmp
and
out
stos
call
or
fisubrs
pmaxub
jg
sar
filds
and
ja
les
cli
lahf
mov
call
popa
add
pop
loopne
push
shll
enter
jge
cmp
inc
jo
sbb
jbe
adc
pop
mov
jle
and
or
push
xchg
roll
jg
or
and
test
stos
pop
je
push
inc
ds
adc
inc
je
add
jb
scas
or
mov
test
cmc
mov
pop
cltd
fwait
dec
outsl
xchg
ljmp
push
repnz
outsl
jp
cmpsb
bound
into
dec
and
xchg
adc
fildll
add
stos
xchg
bound
push
mov
xchg
mov
clc
fcompl
add
decl
mov
rcll
out
bound
sub
ja
cli
outsl
loope
sbb
pusha
cld
mov
xor
add
sbb
mov
call
xchg
mov
mov
and
fstpl
int
push
inc
les
sarb
jmp
mov
push
jg
jo
mov
add
sahf
xchg
sbb
stc
or
push
xchg
out
inc
inc
mov
stos
lcall
push
xchg
rcrb
into
mov
cmp
xchg
cmpsl
and
mov
cmp
loop
call
pop
aas
inc
cmp
lods
jns
pop
mov
imul
ljmp
mov
aas
notl
lret
fildll
jmp
push
fildll
dec
in
dec
loopne
mov
orl
out
dec
mov
dec
pop
xchg
cmc
mov
jnp
or
cld
aaa
add
jns
shl
lods
xor
mov
or
mov
jb
xchg
or
mov
je
flds
pop
xor
add
mov
ja
sahf
xor
je
xchg
inc
faddl
cmc
pusha
insb
or
push
adc
push
movl
mov
cmp
cmp
pop
adcb
out
mov
cmpsb
inc
test
scas
clc
cmp
mov
data16
pop
decb
mov
rorb
fsubrs
add
js
mov
push
ljmp
mov
pushf
xor
into
xchg
int3
xchg
jbe
data16
cmp
xchg
pop
jl
and
mov
ljmp
add
call
add
call
xor
and
cmp
scas
pop
loope
add
pop
das
sahf
sub
add
test
cmp
cmp
jbe
dec
es
fs
lods
dec
fsubs
rolb
dec
mov
push
cmp
out
mov
mov
push
cmp
inc
sub
test
sti
cmp
pop
ss
sti
test
inc
add
bound
je
mov
inc
cmp
pop
and
and
jne
push
cld
out
mov
movsl
mov
xor
rcrb
sbb
cmpsb
lods
rclb
out
xchg
xchg
ret
mov
lret
inc
cmp
xor
outsl
addr16
ret
decl
push
push
pop
mov
mov
cmp
loop
sub
push
jge
les
inc
dec
push
mov
mov
pop
lods
push
jns
add
fxch
pushf
sbb
mov
jge
mov
and
sub
insl
pop
fnstenv
adc
ds
je
daa
test
lret
dec
out
sub
push
ja
push
sarl
pop
popw
adc
flds
and
xor
inc
pop
loopne
adc
aam
jae
bound
ret
push
inc
negb
mov
repnz
outsl
mov
call
cmpsl
lock
mov
lods
insl
xor
test
imulb
sbb
jmp
in
clc
je
cmc
cmp
inc
and
lock
jle
lds
cmp
xchg
sub
js
mov
scas
jl
cld
inc
pop
cmp
mov
loope
das
ret
negl
mov
pop
ret
xor
cmp
add
pop
es
xorb
cmp
fisubl
inc
roll
aam
push
sar
lret
and
adc
cwtl
pop
pushf
repz
outsb
pop
js
imul
add
loope
mov
pop
fimuls
cmp
outsl
mov
aam
fwait
imul
jecxz
test
ds
mov
lods
aaa
das
in
out
add
popf
ljmp
outsl
out
jp
cmp
mov
lahf
fdiv
adc
mov
jmp
mov
shl
xchg
xor
lcall
popa
emms
gs
ret
clc
inc
sub
loop
mov
mov
enter
add
pop
xor
fisttpll
imul
adc
ret
add
cmp
mov
mov
push
inc
cmp
or
sub
test
sahf
cmp
notb
cli
test
lods
xor
or
cwtl
cmpb
sbb
aam
push
mov
lods
inc
cmc
cmpsl
mov
xor
add
or
cmp
sahf
mov
add
lods
cli
cmp
aas
arpl
mov
or
push
aaa
mov
sub
lock
push
fistps
xor
dec
or
test
add
mov
push
dec
into
add
cs
jp
inc
pop
add
mov
or
stos
jge
mov
je
js
and
add
mov
stos
jmp
xchg
xchg
xor
or
adc
pop
jle
inc
jmp
mov
stos
fbld
sub
mov
push
shll
imul
add
pop
test
jg
fbstp
lods
pop
push
aas
adc
rolb
xor
jp
xchg
outsb
cmc
push
mov
cmp
dec
cmp
fs
leave
test
test
mov
dec
ljmp
push
jb
sbb
shl
sbb
addr16
cld
shrl
and
cmp
arpl
cmc
xchg
xchg
add
mov
lret
shl
out
mov
adcl
jnp
xor
out
push
add
lods
cli
jl
dec
icebp
xchg
jb
mov
pop
jo
xchg
mov
ret
jl
cld
int3
inc
scas
clc
aam
bound
mov
stos
add
sbb
or
lods
add
pusha
adcl
cld
pop
lret
inc
nop
les
cli
or
pop
into
push
std
pop
faddl
ret
pusha
punpckhbw
hlt
ss
test
pop
inc
fdivl
stos
jne
addr16
rcll
cmc
jg
sarl
push
inc
jecxz
fisttpll
jge
bound
test
cmp
std
cld
test
push
or
mov
jge
xchg
push
xchg
xchg
outsb
fisttps
cmp
cli
jmp
dec
jg
ss
mov
push
pushl
loop
aam
sub
test
pusha
daa
stos
cmc
cli
mov
and
lret
ja
mov
repz
jge
add
mov
fisttpl
les
ljmp
mov
push
xchg
sub
dec
gs
sub
add
inc
xor
addr16
sbb
xor
xchg
cmp
xor
clc
fistpll
or
jno
add
pushf
lock
cmp
fwait
cli
fwait
or
cs
pop
cmp
enter
mov
ljmp
sbb
or
jl
push
jmp
rcll
incb
pop
mov
insb
mov
mov
pop
pop
in
sbbl
jle
outsl
jne
cld
push
mov
sub
or
lcall
dec
inc
pop
mov
sub
push
pop
cmp
lock
sub
ud0
in
cmp
lods
pop
ja
scas
dec
cltd
lcall
rcr
ljmp
les
adc
add
testb
xor
sbb
pusha
mov
cmp
push
sub
mov
sarl
cli
xor
cs
insb
shl
jnp
pop
and
inc
ds
mov
xchg
imul
out
cmc
aad
or
pusha
pushf
sbb
xchg
xchg
jle
cmc
jg
jg
add
movl
fnstcw
or
mov
cmp
jg
mov
mov
pusha
adc
sbb
outsl
js
xchg
cmp
aam
imul
orb
shl
lcall
pop
sub
pushf
cmp
cs
movsl
cmpsb
ret
mov
inc
mov
mov
mov
and
lods
cli
jg
fdivs
lcall
sub
cmpsb
mov
mov
cmp
data16
lcall
add
and
jbe
imulb
jo
test
and
push
aaa
mov
sub
sub
and
scas
clc
sub
add
imul
stos
mov
mov
push
cwtl
jbe
das
clc
mov
cwtl
xor
mov
jb
xor
sub
int
sbb
fsubrs
pop
andl
nop
leave
emms
pop
mov
mov
mov
aad
cmpsb
add
or
scas
lods
jge
sub
jmp
mov
mov
std
pop
ret
and
xor
xor
fildll
pop
ja
sub
pusha
fs
mov
test
jb
push
stos
mov
or
out
aaa
lods
mov
fisubrl
push
shrb
sbb
mov
push
xor
add
in
adc
pushl
je
insl
fcomi
pop
scas
mov
mov
and
clc
call
or
jl
push
cmc
add
add
imul
rclb
and
adc
in
loop
es
mov
add
sub
mov
lods
jg
and
pop
cmpl
and
xlat
stos
cmp
mov
push
xor
mov
pop
lock
aaa
loope
ret
cmp
or
xchg
and
or
movl
pop
mov
stos
pcmpgtw
pop
clc
sub
repnz
mul
nop
push
cli
inc
or
push
nop
add
int3
inc
jne
scas
inc
aaa
loope
in
es
xlat
mov
cmc
jmp
jl
sti
lock
add
pop
movsl
fbstp
dec
or
and
cwtl
mov
bound
jb
pop
mov
inc
jle
pushf
lods
mov
jbe
push
mov
push
mov
cmpb
inc
dec
pop
ret
dec
fimuls
ljmp
sub
cs
adc
xchg
insl
push
ss
xorb
je
ficomps
in
inc
aas
loopne
stos
sub
daa
into
sub
dec
loope
add
dec
adcb
sti
mov
xor
sbb
cs
pop
popa
ret
pop
push
test
incl
insb
adc
sbb
cltd
lea
or
push
fwait
push
fsubl
sub
ljmp
cmpsb
push
sub
outsl
xor
inc
xor
add
mov
sub
pop
enter
xor
and
and
mov
dec
cmp
into
fwait
mov
push
dec
jmp
dec
push
aam
mov
fistpll
sar
hlt
sub
inc
fdiv
push
js
test
sbb
stos
mov
inc
rcrb
lret
cmp
fbstp
fwait
mov
dec
aam
pusha
jge
insl
mov
dec
cltd
fwait
lret
sub
mov
lock
mov
lods
push
ss
mov
fidivrl
mov
es
mov
dec
jns
les
xor
insb
into
pop
loop
mov
jno
dec
xor
int3
pop
adc
and
loope
icebp
test
or
sarl
outsb
mov
jecxz
mov
lock
jg
mov
inc
je
rorb
ja
int
fldcw
mov
and
adc
movsb
pop
mov
sbb
jl
cli
decl
pop
sub
mov
dec
addb
push
ss
xchg
test
test
xchg
pop
in
or
imul
sbb
fadd
add
add
add
cmp
inc
mov
imul
cld
inc
hlt
adc
test
push
scas
aam
mov
popa
pop
filds
inc
call
lods
arpl
iret
clc
cli
xchg
mov
dec
lock
sub
jo
mov
add
mov
daa
jnp
js
test
inc
inc
mov
leave
sbb
mov
sub
shl
jns
mov
sub
pop
mov
in
lea
adc
in
jg
adc
call
repnz
cmp
mov
sbb
push
pusha
test
ret
call
fs
add
mov
or
adc
movsb
adc
push
fiadds
hlt
test
add
lcall
sbb
popa
jb
add
xor
lret
fists
jne
cmp
out
inc
out
dec
adc
decb
sahf
push
fs
iret
or
and
cmp
call
xchg
bound
push
test
dec
js
or
sbb
push
sti
daa
mov
mov
add
mov
mov
ljmp
fistpll
sarl
cmpsb
lock
push
jns
es
mov
les
out
rcll
aad
pop
sbb
int
inc
mov
lock
cli
daa
xor
push
sbb
dec
sub
loope
adc
mov
aam
cld
or
jge
adc
imul
int
ret
xor
imul
sbb
push
outsw
jecxz
lods
ljmp
push
jle
stos
mov
addb
jg
mov
loopne
pop
ror
out
ds
push
jle
jl
inc
jne
jae
pusha
clc
cmp
cmp
dec
mov
sti
cmpsb
mov
lret
icebp
sub
mov
jnp
lret
loope
jl
add
cmp
jmp
cmp
pop
mov
add
sar
cmp
jg
insb
roll
inc
mov
add
mov
mov
add
or
fcompl
pop
int
fists
pushf
outsb
cmp
test
cwtl
push
add
jo
inc
hlt
xchg
push
or
clc
pop
jecxz
and
push
out
shll
jne
in
sub
ss
pop
adc
dec
inc
cltd
inc
mov
sar
arpl
or
cmp
call
dec
ret
int3
adc
add
jnp
pop
xchg
lcall
fdivp
add
push
mov
popa
xlat
decl
mov
test
mov
mov
cmp
or
or
jg
pop
xor
lahf
dec
add
sahf
insl
push
sbb
mov
iret
jo
mov
outsl
mov
jg
or
sub
sub
sbb
xor
loope
jmp
cld
jp
push
mov
adc
test
rcll
and
lock
inc
iret
aad
decl
jb
xchg
mov
nop
pop
dec
push
xchg
pop
shr
pop
dec
xchg
jo
cmc
pushf
inc
into
lods
ds
insl
xor
mov
or
sar
sub
dec
mov
icebp
xor
jae
xor
push
mov
ljmp
add
mov
jmp
jecxz
jbe
xlat
pop
mov
push
or
mov
fimuls
fidivrl
inc
add
cmp
test
and
add
push
lock
adc
ffreep
scas
iret
dec
sub
push
dec
add
rcrb
jl
xor
popa
jno
mov
data16
movsl
cmp
lret
movsb
loopne
lock
clc
inc
cmpsl
add
pop
add
sbb
call
mov
and
int3
cmp
xor
test
loopne
and
les
adc
xchg
cmpsb
xchg
in
icebp
in
jle
iret
testb
outsb
int3
call
test
sub
xchg
das
jmp
mov
or
mov
xor
sub
inc
add
js
test
aaa
xor
push
stos
call
mov
cmpsb
mov
add
loope
mov
sbb
add
adc
lock
adc
inc
push
ja
mov
push
xchg
mov
je
xchg
outsl
sbb
pop
aam
into
add
mov
pop
xor
lahf
ret
cmp
lea
mov
push
lahf
into
mov
add
push
mov
pop
decl
and
and
add
ja
and
cmp
or
stos
push
xchg
das
mov
add
jnp
sbb
inc
jmp
lds
fsubrl
mov
les
inc
fwait
dec
and
lods
addb
lahf
cli
and
or
or
lcall
pop
jmp
jmp
add
loop
lock
shll
or
adc
cmpl
roll
out
mov
inc
aaa
add
ljmp
sbb
sub
enter
ja
imul
stos
push
loope
ror
pop
movsb
xor
cmovg
jl
test
outsl
fdiv
lret
xchg
mov
xor
add
enter
dec
add
iret
jo
aaa
mov
inc
popf
mov
popa
jg
lock
jle
and
movb
and
rorl
sahf
jp
inc
pop
mov
mov
inc
mov
jecxz
inc
xlat
push
adc
mov
inc
mov
dec
outsb
add
add
cld
mov
or
jecxz
cmpsb
and
js
mov
dec
es
push
insl
test
or
dec
jae
mov
test
push
mov
leave
in
repnz
daa
std
adc
or
sub
mov
cmc
jnp
mov
sub
aaa
fcomip
xchg
sahf
loope
pop
dec
sahf
lahf
add
ret
mov
mov
cmpl
push
pop
xor
test
pop
inc
cld
fwait
inc
xchg
and
insl
cs
enter
lcall
lea
icebp
cmp
enter
cli
lock
sbb
jl
sbb
dec
or
sub
out
test
xor
add
cmpsb
pop
push
mov
or
loopne
xor
in
cmp
push
xor
push
adc
pushf
sbb
test
xor
push
cmp
add
fmull
sbb
add
ret
jge
clc
outsl
mov
js
adc
test
adc
sarl
add
lock
inc
cld
or
lods
clc
sbb
xchg
add
push
sbb
lods
in
push
cli
or
mov
sbb
fwait
add
sbb
test
pop
mov
sti
xchg
cwtl
cmp
dec
mov
roll
outsl
push
xor
mov
stc
push
nop
imul
test
push
std
inc
sbb
mov
pop
fsubl
pop
outsb
std
outsb
repz
incl
ret
dec
cmp
jmp
xchg
sar
mov
mov
mov
and
push
lret
sbb
lods
add
scas
cli
mov
and
icebp
subb
cmp
and
outsb
pop
add
cmp
outsl
scas
and
ds
cmc
repz
xor
mulb
shr
cli
int3
into
ret
fwait
hlt
mov
shr
scas
jp
mov
cmp
push
outsl
test
roll
push
fs
sbb
call
sarl
inc
rsm
dec
push
mov
and
pop
cld
pop
dec
in
ret
sub
cwtl
nop
jge
cmp
movl
jmp
shrb
jo
jl
cmp
inc
mov
loopne
aaa
in
inc
imul
add
or
lret
jg
hlt
jl
aam
dec
rorb
pop
mov
sbb
out
pusha
fdiv
mov
pusha
sub
cwtl
push
ret
xchg
test
mov
in
xchg
jbe
call
push
lock
and
push
jb
dec
jp
jl
pop
fsubrs
cmpsb
adc
pop
push
mov
shrb
out
sbb
push
sti
fld
or
int
mov
lcall
inc
fsubrs
push
mov
adc
sahf
xchg
stos
leave
aaa
dec
sub
es
jmp
mov
les
ljmp
pusha
push
add
sub
shrb
pop
jbe
cli
sbb
mov
hlt
sbb
sarb
mov
inc
inc
ret
pusha
inc
pop
xor
push
test
sarb
out
repnz
push
jmp
fistps
adc
jae
pop
fcomi
test
push
xor
pop
pop
lcall
pop
xchg
jo
mov
cs
mov
push
sbb
jmp
xor
or
sub
sub
add
mov
pop
loop
sbb
mov
mov
add
jmp
ds
mov
add
inc
xor
lock
cld
in
outsl
and
or
loop
sbb
push
lods
mov
cmpsb
push
fiadds
add
push
push
push
cmp
out
sub
loopne
sub
test
add
sub
decb
pop
ret
dec
dec
shlb
dec
mulb
mov
loop
push
push
adc
mov
pop
lahf
pop
dec
cli
adc
fwait
cmp
aaa
adc
xor
mov
aas
cmp
psubw
shrb
fldcw
into
out
adc
add
fwait
pushl
fwait
xor
in
adc
call
pop
std
jo
out
dec
push
sub
push
sbb
fstps
mov
inc
sub
pusha
es
add
sti
shrb
incb
dec
and
js
mov
mov
fwait
jbe
fdivs
adc
sub
rol
inc
and
adcb
push
adc
xchg
mov
and
push
mov
clc
jp
lret
mov
push
push
rolb
roll
aaa
pop
pop
mov
ljmp
sbbl
add
orb
push
test
enter
jg
add
cmpsl
mov
testb
and
add
jbe
pop
sbb
decl
imul
cwtl
sub
movsl
popf
repnz
sar
xlat
push
addb
push
pushl
dec
add
popf
jns
pop
push
pop
pop
insb
inc
cmp
add
and
sbb
aam
push
hlt
push
fdivl
loop
mov
and
outsl
push
mov
insb
stc
call
hlt
xchg
fisubrl
inc
xor
stos
add
mov
adc
mov
dec
sub
pop
andb
mov
stc
jno
mov
and
cmc
in
jg
pop
xchg
lods
jmp
push
ret
loop
cmp
mov
out
aam
cwtl
mov
std
js
sbb
xchg
rcrl
leave
lcall
push
push
push
dec
xchg
and
fsts
mov
hlt
adcb
push
ljmp
das
cli
das
pop
enter
lods
call
push
fadds
adc
add
adc
inc
shrl
pop
scas
test
or
hlt
adc
repz
nop
pop
xchg
or
mov
push
enter
and
ja
mov
or
nop
cld
das
je
mov
inc
rol
sahf
lahf
add
loopne
ljmp
push
inc
sarl
cwtl
movntps
lret
jnp
xor
pop
cmpl
fbstp
cmp
mov
cmp
incl
jno
outsl
pop
or
mov
sub
in
inc
sar
jg
push
ss
call
cmp
sub
and
mov
pop
ljmp
pop
in
setbe
insb
mov
xlat
mov
gs
sbb
imul
mov
dec
jmp
xchg
mov
xor
roll
rolb
jne
mov
add
dec
cmp
jne
call
repz
aam
insb
sub
add
lods
sub
inc
mov
jge
rcrl
mov
test
movsl
sbb
xchg
lcall
xor
dec
push
fsubrl
jno
push
test
push
sarl
lcall
imul
daa
adc
inc
outsb
sub
imul
lret
add
daa
xchg
add
adc
sti
es
mov
lock
add
push
call
lret
adc
loope
sub
jmp
and
sub
cs
fwait
rcrl
into
xchg
add
dec
cld
das
push
ds
push
ss
cltd
rolb
add
sub
jl
xchg
xor
dec
mov
jge
lret
jg
subb
outsl
jo
fucomip
cwtl
shll
add
pop
aam
or
mov
push
imul
daa
mov
jno
sbb
in
outsb
adc
jg
scas
xor
inc
or
fnsave
dec
mov
icebp
incl
mov
add
xchg
and
push
fadds
je
mov
pop
dec
dec
pushf
sub
fstpt
mov
jb
out
add
add
add
fbld
sub
sahf
push
mov
jo
pop
pop
ja
lahf
gs
jle
push
rolb
add
cmpsb
fcmovnb
into
mov
lock
mov
sti
bound
data16
xor
call
cmc
sbb
xor
fs
mov
and
adc
mov
add
jo
add
movsb
in
mov
incl
fstpt
and
ss
adc
loop
rolb
mov
ret
add
add
test
out
mov
in
xor
aaa
loop
push
mov
arpl
into
out
jbe
pop
inc
bound
push
sub
and
mov
out
adc
js
push
insl
aas
loop
add
jp
push
outsl
shl
lds
div
xchg
sub
push
icebp
cmp
mov
mov
scas
pop
loopne
leave
test
dec
sarl
cmp
xor
cmpsl
sub
mov
lock
int3
sub
test
jmp
mov
leave
lret
adc
pop
inc
ret
or
shl
pusha
mov
adc
mov
and
and
dec
lret
addr16
xchg
shlw
lock
xor
fs
mov
pusha
push
fstp
sti
mov
xchg
ret
add
inc
or
andl
aad
fsubl
leave
mov
pop
dec
fidivrs
outsl
jbe
push
xchg
out
stos
mov
xchg
push
sbb
in
outsb
cld
incb
loop
cmp
es
es
or
ja
incl
jg
and
push
ljmp
pop
xchg
and
test
scas
popf
rcrl
jmp
and
add
jae
out
cmc
xor
pop
das
clc
lock
push
shrb
or
cmpsl
data16
xor
mov
lret
jne
data16
xlat
out
decl
lods
add
jb
js
jae
lods
shll
sbb
inc
add
hlt
sub
imul
scas
jo
fsubrs
mov
fldl
xchg
lcall
jecxz
sub
pop
cwtl
repz
sub
ds
mov
call
subb
add
add
cmp
loope
xlat
mov
xchg
rclb
cmp
mulb
mov
testb
rcl
bound
sbb
enter
push
dec
int3
or
and
mov
aaa
sbb
into
jae
dec
pusha
inc
lcall
shrl
ret
jecxz
xchg
stc
lods
add
decl
mov
mov
xor
pushf
aam
add
iret
dec
xor
std
adc
mov
call
jb
mov
push
inc
cli
in
arpl
data16
sarb
sub
or
xchg
xor
pop
lods
js
pop
cli
mov
pop
cli
hlt
hlt
adc
mov
stos
sbb
clc
sbb
pop
push
push
inc
jne
pop
subb
cld
aaa
sbb
dec
das
jl
hlt
xor
sub
mov
add
dec
jnp
cmp
fisttps
hlt
cmp
xchg
les
outsl
mov
push
lcall
rolb
loopne
xchg
jne
jbe
nop
xchg
adc
pop
add
test
outsb
loop
cmpsb
mov
out
dec
jo
aam
cld
aas
push
cmp
fidivl
cmpsl
ret
sbb
pop
fstp
add
sahf
push
stos
std
add
mov
inc
call
sbb
xor
ret
sub
jge
lcall
inc
call
addr16
int
in
sbb
pop
and
loop
xor
xchg
xchg
rcrb
cmc
push
jne
and
fdivr
stos
incl
add
ss
daa
add
lds
and
inc
cld
adc
sbb
insl
push
cmp
mulb
fsubrl
in
inc
leave
js
sbb
rcrb
aas
rcrl
dec
mov
cmc
xor
fadds
aas
aam
dec
jbe
gs
push
test
test
or
jg
adc
mov
pop
sub
out
fldl
pop
lret
push
cmp
stos
hlt
fcmovne
fistpl
pop
xor
nop
sbb
mov
sub
pusha
loop
js
jg
xor
xchg
jns
pop
adc
sub
xchg
in
ret
sbb
cmpb
adc
dec
std
push
out
cmp
mov
insb
adc
jno
nop
cwtl
mov
add
and
in
mov
cmp
jns
bound
icebp
cmpsl
shr
orb
add
mov
xor
insb
mov
repz
fimuls
cld
push
jge
fnstenv
jle
scas
jb
cmc
fcmovnu
enter
arpl
adc
and
mov
idivl
xorb
adc
mov
pop
int3
pop
xor
sub
push
call
mov
mov
movsb
mov
stos
decb
jo
push
jb
push
jae
cmp
fcompl
sub
pusha
and
shrl
leave
pushf
call
xlat
mov
mov
loope
mov
push
popl
xchg
adc
addl
sahf
lahf
and
out
gs
jb
push
dec
push
in
sub
jp
add
fcmovbe
pop
jne
sub
sbb
sbb
adc
cmpb
fcomip
jno
jnp
movsb
cmpsl
dec
test
popa
push
decl
jo
mov
cmpsb
push
outsl
cmp
popa
les
popa
inc
push
lret
stos
cld
fdivr
pop
add
movb
stos
push
mov
out
push
test
sub
cmc
test
pop
clc
pusha
popl
fdivp
push
add
dec
and
mov
sahf
cmp
and
pushf
mov
jp
mov
stos
stos
or
mov
mov
sti
aaa
jmp
je
sbb
adc
fsubr
clc
jo
insl
push
ljmp
sub
or
ss
mov
mov
repnz
mov
dec
repz
mov
sbb
add
push
pop
sub
decb
in
pop
inc
bound
jg
add
inc
rcl
or
fisubl
fisttpl
cld
sbb
sub
push
jle
push
inc
xlat
pop
ret
dec
xchg
or
cmpsb
push
mov
lret
mov
aad
insl
stc
cwtl
test
push
cmp
jo
cltd
pop
dec
or
dec
mov
sarb
out
add
movsb
in
data16
stos
fadds
and
add
call
lock
sbb
aad
pop
loop
xor
or
add
jp
mov
and
xchg
xor
mov
out
jl
idivl
gs
xor
sbb
inc
data16
hlt
and
lods
addb
mov
leave
cs
cli
pop
clc
dec
or
enter
jecxz
add
push
xchg
test
lret
pop
push
inc
or
lods
and
sub
pop
stos
rclb
inc
int3
cmc
inc
int
mov
nop
scas
shlb
movsb
in
in
loop
lcall
add
bound
shl
inc
jmp
dec
out
sbb
add
or
shll
ret
das
xchg
lcall
or
lret
subb
sbbb
fidivl
popa
lock
mov
pop
lret
push
jb
fwait
add
rolb
xor
lcall
cli
inc
pop
call
mov
mov
addb
inc
push
sbb
mov
ds
fsubrl
pop
add
stos
int3
pop
push
and
hlt
mov
push
cmp
es
push
add
decl
orl
sti
push
dec
push
xor
lock
test
jmp
insl
leave
xor
cmp
inc
mov
jle
call
push
push
gs
inc
pop
sbb
push
cmp
sub
inc
sub
stos
pushl
add
movsb
mov
pop
and
or
cs
sar
incl
sbb
sbb
imul
enter
cmp
sahf
out
jg
mov
mov
pcmpgtb
into
sbb
stos
mov
lea
adc
jmp
out
mov
imul
icebp
push
icebp
in
aam
xlat
lret
nop
mov
mov
dec
dec
sbb
or
aad
push
inc
aaa
jmp
fiaddl
stc
lahf
inc
ds
add
lret
or
pop
jmp
rolb
add
mov
ret
add
pop
push
dec
xchg
cwtl
cmpsl
sub
icebp
dec
dec
fs
mov
pop
pusha
test
outsb
xchg
daa
and
test
or
lret
in
jnp
mov
mov
pushl
outsb
lcall
jns
hlt
or
add
test
cmp
clc
pop
fstpt
jo
xchg
nop
lea
ljmp
movl
adc
call
repz
inc
sbb
push
and
repnz
and
jecxz
xor
movsb
mov
rorb
loope
js
into
adc
and
xchg
cs
rcpps
fdivrl
add
mov
push
and
scas
inc
lcall
push
aam
mov
rorb
sahf
ficompl
incl
fwait
pop
lock
inc
sub
sub
push
movsl
ret
hlt
pop
push
cld
fidivs
xchg
test
and
imul
sub
ret
ljmp
sahf
and
clc
int3
mov
mov
inc
jp
cmp
loop
loop
jmp
dec
and
jo
mov
sti
sbbb
vmaxsd
sub
and
lcall
movsb
cwtl
cmp
int
lcall
mov
mov
mov
pushf
insl
inc
fcomps
out
push
inc
pushl
ss
pop
push
add
sar
inc
add
jge
xchg
jo
mov
lods
push
and
mov
fs
xchg
mov
ds
xchg
fsts
dec
lcall
mov
ljmp
fidivl
or
xor
add
dec
cmpl
bnd
or
lcall
int3
xor
iret
push
stos
test
insb
push
mov
mulb
filds
scas
hlt
pop
sbb
div
push
dec
insb
mov
xchg
cld
jecxz
sbb
jbe
repz
outsb
incb
sahf
int3
stc
stc
add
sbb
jg
out
scas
stos
push
add
out
add
out
mov
aam
xchg
xchg
mov
stos
add
add
dec
ds
adc
push
inc
fisubl
daa
mov
push
icebp
jb
or
dec
mov
or
or
pop
inc
inc
mov
xor
jl
std
jg
je
dec
daa
sbb
xchg
push
mov
movsl
add
jg
out
mov
flds
in
fiadds
adc
jmp
jno
push
jg
push
ret
cmp
aam
mov
cs
push
call
sti
jg
outsb
nop
mov
add
popl
lea
imul
das
push
movsl
xor
mov
push
pushf
shll
add
push
pop
pusha
rorb
mov
adc
mov
dec
stos
sub
call
lock
mov
sub
xchg
add
mov
clc
outsl
adc
lea
popf
mov
in
es
xor
jle
rolb
mov
enter
pop
enter
outsb
xchg
sbb
scas
adc
iret
add
push
loop
add
push
loopne
sub
inc
pop
sbb
jecxz
jg
data16
xchg
pusha
jbe
push
cld
aas
jp
pop
dec
push
out
popa
inc
out
xchg
mov
cmp
or
loop
mov
inc
adc
dec
decl
push
mov
and
sbb
popa
pushf
rclb
outsl
and
ret
sahf
jmp
cli
pop
movsb
cmpsb
sub
xor
push
rcr
out
fldenv
lods
xchg
xchg
cmp
mov
movsb
loop
push
sub
sti
mov
push
scas
push
out
cmp
movsl
inc
xchg
lods
pushl
jmp
outsl
pop
inc
mov
shrb
cmp
ret
jmp
add
movsb
xchg
inc
sub
pop
cli
pop
mov
inc
add
jmp
mov
mov
inc
mov
ret
jne
or
jge
lods
loopne
push
mov
or
aas
mov
jo
mov
xor
adc
or
je
cmp
shll
xchg
stos
or
cltd
stos
mov
xchg
jg
cmp
add
stos
test
sub
xor
mov
cld
sub
loop
add
aas
add
rolb
decl
sbb
add
test
or
incl
push
insb
and
dec
adc
pop
rcr
das
pop
icebp
or
inc
xor
xchg
ljmp
pop
insl
vpsubb
es
add
popf
jno
inc
cmp
test
es
stos
or
stos
add
cltd
out
std
ja
cmp
scas
imul
test
lea
sub
mov
inc
xor
pop
push
push
mov
add
fisttpll
rcl
jbe
enter
push
mov
mov
jle
lock
lock
xor
lcall
dec
cmp
cld
mov
sbb
cmp
mov
mov
lea
mov
mov
cwtl
jmp
or
fwait
or
push
mov
lock
jnp
lcall
sbb
test
dec
inc
jmp
fisttpl
jl
mov
push
jge
adc
out
push
lock
pop
inc
inc
jmp
popw
xchg
in
jg
push
outsl
adc
lods
aaa
test
xor
mov
loopne
mov
leave
fidivrs
ret
fcompl
sahf
loopne
inc
sahf
call
push
nop
rcr
pop
ret
add
sbbb
rcll
cmpsl
or
gs
loope
mov
jb
icebp
mov
je
push
inc
sti
adc
enter
jb
and
rcrb
shl
ror
out
jbe
into
mov
rolb
fidivs
or
fsubrl
ljmp
loopne
std
fbld
push
sbbl
enter
ds
mov
sbb
inc
dec
bound
lods
rorb
pop
fildl
int3
aas
movsb
or
adc
call
movsl
pop
test
mov
mov
add
xor
scas
push
jmp
jecxz
lret
test
xchg
jp
fcompl
xor
cli
scas
push
lock
leave
mov
mov
call
hlt
lea
outsb
cmp
sbb
inc
popa
repnz
shlb
in
cli
negl
xchg
jp
pop
push
push
jecxz
cmpsb
push
push
mov
mov
push
fmul
jo
clc
add
fiadds
push
out
cmc
jbe
push
nop
call
sub
inc
cld
cmp
std
fists
push
pop
loopne
adc
outsl
adc
mov
or
adc
mov
sahf
add
repnz
inc
add
ret
push
push
add
rol
fcoms
enter
fdivrl
loop
gs
push
hlt
jmp
adcl
outsb
add
lret
add
and
adc
aad
std
sbbl
push
and
test
jge
jmp
inc
loopne
xchg
sub
and
cmpsb
les
jle
jp
sub
enter
addr16
push
push
cmp
popf
shlb
in
adc
pushf
nop
test
mov
js
mov
leave
xlat
fiaddl
fsubrs
dec
cmp
or
pop
pusha
add
sub
les
mov
je
jnp
incb
cmp
sub
mov
aam
imul
push
shrb
add
xlat
lcall
pop
dec
jo
ret
add
rcl
out
fstpt
ret
push
mov
mov
mov
aam
or
mov
je
push
hlt
sub
push
rolb
cs
or
mov
cs
pop
fisubs
test
xor
cld
pop
sbb
sub
dec
add
decl
aad
mov
mov
aaa
add
cmp
sub
sbb
iret
hlt
adc
pop
add
hlt
decl
and
inc
je
loope
repnz
test
jecxz
sub
push
test
nop
outsb
push
in
shlb
test
cmpl
cmc
popf
pop
mov
test
cmp
mov
xchg
sahf
mov
in
cltd
sbb
add
xchg
fisubrl
and
or
pusha
ss
cmp
push
or
mov
mov
adc
aaa
xchg
loope
adc
xchg
mov
pop
lea
mov
fs
bswap
incl
mov
insb
adc
sbb
fsubs
adc
icebp
movb
cmp
add
js
inc
mov
and
xor
lcall
adc
jbe
add
fimull
loop
mov
int3
in
and
fldenv
add
mov
sub
test
loopne
test
cmp
cmp
push
loopne
or
mov
loopne
icebp
loopne
add
push
mov
or
pop
je
and
add
fdivs
dec
das
fistpll
test
cwtl
fnsave
iret
inc
jne
jle
pop
inc
push
je
insl
mov
outsb
add
out
mov
fdivs
clc
cli
push
js
mov
or
clc
and
cmc
dec
push
test
dec
int3
pusha
pop
sarb
mov
imul
mov
xorb
sar
out
jp
movsb
fimuls
inc
sbb
jb
mov
mov
pusha
sub
pushf
stos
cmp
arpl
out
int3
sbb
cmp
inc
loopne
rcr
sbb
sarl
stos
dec
or
dec
sbb
cmp
fisttps
test
in
imul
pop
push
adc
movsb
jo
lret
mov
sub
push
popa
dec
pop
ss
stc
push
scas
or
mov
lods
mov
mov
stos
mov
sub
popa
xchg
mov
pop
adc
inc
cld
es
je
and
scas
clc
adc
jp
or
mov
jmp
pop
iret
bound
mov
out
inc
or
fstpl
xchg
incl
es
jo
icebp
mov
add
dec
sub
fdivp
mov
sti
mov
lods
mov
sbb
xor
outsl
out
test
cs
and
jno
xor
sub
jge
cmc
ds
mov
insl
aam
hlt
mov
dec
call
adc
outsb
loopne
sub
pop
jno
out
fcom
fiaddl
shlb
test
xchg
lret
add
ret
sub
imulb
xchg
enter
mov
ja
and
insb
bound
and
dec
inc
xorl
add
sub
mov
add
cmc
xchg
mov
jae
cmp
push
sbb
dec
mov
mov
in
gs
jnp
push
cmp
pop
aaa
xor
shrl
sarb
jo
loop
dec
out
mov
add
ljmp
cmp
mov
lods
mov
icebp
jo
add
push
ror
scas
test
aaa
cwtl
adc
mov
dec
inc
dec
xor
outsl
ljmp
cmp
jmp
fwait
xor
fcomps
and
inc
inc
pop
pop
push
inc
mov
xchg
push
js
dec
fistpll
adc
pop
and
mov
or
pop
mov
mov
pop
pop
fxch
jnp
shl
cmp
pop
push
mov
bound
xor
lock
lahf
int
insl
jl
mov
sar
mov
jo
mov
repnz
es
cmp
pop
sbb
insb
nop
movsb
mov
les
in
inc
movsb
add
inc
cltd
cmc
sbb
cmp
aas
xchg
xchg
lret
mov
sahf
fwait
test
ss
outsb
xor
jbe
cwtl
lods
xchg
and
pop
icebp
pushl
inc
sbb
and
sahf
sub
mov
or
mov
and
lods
inc
sbb
subb
pop
loopne
xchg
addl
std
idivl
add
loope
sbb
push
push
pop
jnp
aas
and
enter
mov
jle
cld
call
add
and
add
or
mull
mov
add
je
push
fsubp
adc
ljmp
lock
loopne
push
add
ror
push
fwait
shrb
push
dec
out
into
push
or
adc
push
add
pushf
fwait
adc
mov
nop
shlb
enter
push
jle
in
popa
push
mov
out
outsb
jae
add
xor
mov
adc
mov
push
pop
movsb
mov
push
std
js
and
push
insl
pop
pop
lock
mov
nop
add
bndldx
jmp
adc
xchg
enter
aaa
and
mov
fwait
aaa
shll
mov
popa
in
loop
das
loop
sbb
aaa
cld
sub
xlat
sub
pop
movsb
inc
iret
out
sub
sbb
je
decl
cmpsb
inc
push
mov
clc
push
lods
or
push
js
aad
mov
jne
push
outsl
ficompl
adc
add
mov
fimull
dec
adc
or
outsl
incb
add
mov
stos
jle
xor
icebp
repz
mov
xchg
add
push
std
push
out
xchg
mov
dec
cmp
lock
pop
xor
mov
ret
add
xchg
xchg
dec
add
cmp
sbb
aam
pushf
sbb
mov
ret
add
push
data16
lret
sub
call
jo
cmpb
jmp
addr16
call
inc
jno
mov
cld
push
cld
mov
repz
pop
dec
clc
sub
jecxz
sbbl
adc
fildl
push
cmpb
int3
push
sub
popf
push
or
or
sub
pop
push
sbb
pusha
or
add
je
sub
cs
scas
test
test
lock
shr
sbb
pop
rclb
xor
xor
xchg
push
fs
or
orb
lds
fsubr
mov
adc
xor
adc
aaa
fprem
xlat
int
movsb
je
lret
aam
pop
je
jg
mov
lds
lcall
xor
add
imull
clc
or
push
cmpsb
or
insb
bound
jo
mov
incb
int
xchg
or
add
testl
cld
mov
lcall
xlat
sub
decl
insb
sbb
outsl
add
movsb
cmp
iret
pop
mov
add
cld
out
call
ds
daa
sub
mov
jecxz
fdivl
xor
add
int
insl
mov
out
subb
inc
xlat
shlb
dec
imulb
dec
mov
mov
add
or
orl
adc
xor
sub
jecxz
xchg
mov
or
mov
jnp
leave
xor
cmp
movsb
das
mov
ficomps
sub
fnsave
inc
cmpsb
xor
jmp
mov
inc
dec
out
inc
cmp
ljmp
incl
dec
mov
cltd
popf
inc
sub
pop
adc
cli
adc
fisubrl
dec
ss
cld
push
push
add
fisttpll
jg
sahf
sbb
fisttps
in
iret
je
sbb
test
push
cmc
popa
jno
stos
sahf
mov
add
incb
cwtl
movsb
adcb
in
xchg
or
mov
push
adc
in
call
pop
test
mov
sbb
lods
add
int3
xor
jo
nop
xchg
pop
nop
mov
icebp
or
leave
mov
add
fwait
mov
nop
add
das
movsl
cmpsb
shrl
jae
add
stos
enter
add
mov
ss
pop
or
pop
sbb
cmp
add
push
jbe
mov
js
jl
incb
inc
fldt
add
jae
jle
or
sbb
icebp
jmp
push
pop
add
mov
ret
ds
sahf
mov
cmp
and
pop
je
ljmp
icebp
sbbb
adc
iret
ret
gs
outsl
mov
fimull
addb
add
push
add
mov
ds
jg
add
jbe
push
out
mov
divl
or
mov
ret
sbb
inc
jmp
inc
xchg
out
mov
pusha
divl
arpl
sbb
mov
sbb
idiv
cmp
in
adc
pusha
pop
test
add
xchg
add
sbb
clc
adc
add
push
out
loop
ja
shl
cli
xor
fisttpl
add
scas
out
out
or
inc
mov
insb
test
dec
push
and
fiaddl
add
test
add
cli
js
jo
js
sub
test
push
mov
rcrb
cli
loopne
push
scas
lcall
jmp
pop
addb
loopne
jge
enter
clc
outsl
ljmp
xor
pushf
inc
lret
lods
push
mov
bound
ja
es
es
cmpl
outsl
ret
mov
jle
or
push
jnp
inc
cmpsb
push
lods
divb
movl
dec
and
xchg
mov
sub
jl
sbb
lods
fbld
roll
cmc
lret
and
lock
lock
xchg
inc
mov
lock
stos
sbb
add
cmpsl
mov
pop
stos
shll
daa
stos
loope
pop
fildl
insb
jnp
jo
mov
imul
cmc
insb
stos
in
or
inc
add
or
pop
and
mov
std
test
jmp
in
mov
adc
lods
xchg
insl
std
jg
mov
pushf
std
mov
xchg
mov
mov
cmp
aaa
dec
sub
jb
and
sub
addb
push
jl
sbb
dec
adc
js
shl
push
popf
add
aas
mov
and
jg
icebp
aad
or
cmp
test
push
add
xor
ror
adc
repnz
or
sti
dec
rcl
es
iret
ret
into
cmp
ja
inc
add
out
js
push
inc
std
mov
pop
popa
out
dec
mov
ret
clc
incl
jnp
movsb
xor
out
mov
jl
stos
inc
cmp
xchg
movb
mov
rorb
xchg
mov
dec
add
mov
sarb
addr16
cli
and
and
sbb
pop
jg
dec
cmpb
xlat
enter
or
call
inc
jno
push
insb
mov
dec
test
pop
lock
rcrl
pop
push
lock
nop
aam
xchg
jl
cmpsl
test
adc
mov
cmpsb
or
mov
addb
inc
cmp
ja
xor
pop
ret
sbb
inc
or
inc
mov
divb
jae
nop
in
int3
mov
pop
add
fldpi
outsb
push
pushf
xchg
mov
mov
stos
push
sub
mov
mov
push
adc
add
ljmp
pushl
loop
das
jne
inc
loope
sbbl
push
fldl
incl
or
dec
mov
jg
pop
call
in
xchg
pushf
xchg
cld
clc
nop
mov
out
std
push
jo
xor
mov
dec
pop
aaa
xor
push
mov
gs
stos
add
fsubl
enter
ret
mov
call
repz
or
jge
inc
jg
imul
add
subb
stos
or
add
jo
mov
into
inc
pushf
stos
daa
jl
mov
xor
push
dec
int3
mov
test
mov
add
adc
sahf
inc
sbb
dec
mov
call
nop
stc
pop
pop
sub
or
loope
ret
arpl
or
jecxz
divl
shrb
sub
jecxz
movsb
repz
js
xchg
sub
nop
adc
stos
test
and
jecxz
scas
jg
stos
mov
add
cmpsb
jl
mov
ret
mov
decl
dec
mov
les
inc
xor
call
das
cmp
fldcw
lock
add
add
push
pop
adc
sub
aad
xchg
push
loopne
aam
mov
daa
push
movsl
mov
sbb
es
xchg
out
clc
out
mov
xchg
or
xlat
icebp
inc
inc
jo
scas
sar
out
lock
roll
and
xchg
dec
aas
mov
pop
mov
mov
fbstp
jbe
add
stos
xor
jbe
and
push
push
roll
bound
mov
test
cmp
adc
clc
das
js
inc
es
mov
je
test
jno
mov
cmp
incb
inc
mov
adc
rcrl
add
inc
clc
mov
mov
push
aas
cmp
das
push
imul
jg
inc
or
cmc
sbb
stos
jb
in
ljmp
inc
inc
cltd
cmp
xlat
pushf
movsb
outsb
sub
add
insl
call
mov
hlt
cmp
clc
or
sti
cmpsl
add
push
rclb
lret
adc
cmp
call
nop
out
add
mov
dec
je
fcompp
rcrb
lock
xor
in
das
push
andl
fsubrl
jne
aaa
cmpb
and
xor
pop
or
adc
test
mov
add
pop
xchg
jbe
scas
push
xorb
std
daa
sub
pop
xor
sti
mov
mov
movsb
cmpsl
pop
aam
lret
mov
je
dec
stc
aam
or
mov
mov
inc
divb
ja
shlb
fbstp
push
cmc
mov
and
and
int
out
aam
mov
sub
cs
mov
pop
jmp
fists
mov
cmpb
xor
into
cmpsb
or
fwait
mov
mov
sub
xor
jle
xlat
aam
rcll
push
aas
clc
add
adc
push
inc
jbe
fimull
rolb
add
loop
sub
adc
fmul
mov
pop
cld
idivl
xor
and
lods
adc
mov
cmp
add
lods
inc
lock
data16
insb
cmp
push
adc
addr16
scas
jle
call
js
push
dec
inc
jbe
outsb
shlb
lods
sahf
sbb
adc
sub
mov
lret
adc
jns
addl
mov
mov
push
cmp
jbe
inc
arpl
and
add
adc
mov
mov
push
imul
lods
rcrb
pop
data16
inc
mov
xchg
sbb
push
sub
push
sarl
push
pusha
xlat
cmp
fnsave
sub
push
mov
aad
cs
lret
dec
mov
and
loop
push
out
ret
sbb
test
add
pop
mov
xchg
pop
les
add
pop
mov
mov
cmc
add
push
repnz
insb
adc
mov
pop
pop
mov
mov
push
adcl
push
lods
lods
call
mov
xchg
inc
dec
inc
cli
pop
cs
in
nop
lret
jno
jge
aad
loopne
and
mov
clc
mov
sbb
popa
lahf
push
sbb
stos
mov
mov
outsl
mov
std
mov
adc
mov
rcrl
das
mov
mov
or
add
adc
mov
adc
stos
fstps
js
fwait
insb
xchg
mov
cmp
mov
jno
sbb
or
roll
sub
mov
jb
push
jo
xchg
add
loop
or
and
int
data16
or
repnz
inc
mov
xchg
sarl
aam
sahf
jl
filds
push
bound
sbb
loopne
or
out
mov
push
cmp
adc
loop
mov
sbb
jmp
imul
mov
adc
test
int
mov
push
ds
xchg
cld
movsb
xchg
cli
and
mov
add
inc
sbb
mov
test
push
into
insb
xorb
movsb
movsb
sub
out
add
into
or
sbb
in
outsl
iret
add
ret
add
pop
adc
pop
pop
sahf
add
mov
in
xchg
jecxz
hlt
sub
push
movsl
fiadds
add
test
data16
jecxz
mov
mov
arpl
cmpsl
or
or
lods
mov
ljmp
mov
cmp
cmp
inc
cwtl
and
push
or
std
mov
inc
pop
cmp
xchg
divl
mov
add
aaa
aaa
xorl
test
push
cli
scas
inc
or
and
fimull
and
outsl
fcoms
out
push
xchg
cmc
mov
jbe
mov
cli
ljmp
mov
lods
mov
and
pop
jmp
test
xor
inc
dec
mov
aas
std
inc
rolb
adc
xchg
inc
mov
pop
push
add
xchg
push
or
fs
cmpl
ret
adc
adc
loope
or
cmp
cmp
lahf
xchg
ret
pop
inc
jb
cmpps
jecxz
sarb
lret
push
jle
cwtl
and
data16
mov
and
aad
adc
push
sbb
sti
sbb
xor
sahf
insb
dec
call
inc
mov
cmpsb
fiaddl
in
push
mov
aas
insb
pop
xor
sahf
lahf
xor
xchg
jmp
movsb
mul
lcall
mov
arpl
push
cs
mov
mov
inc
add
fistps
aaa
add
sbb
and
icebp
dec
mov
mov
pushf
jg
add
xchg
imul
ja
pop
sub
ljmp
inc
pop
sbb
ficomps
inc
sarb
stos
lods
test
mov
pusha
xchg
and
ds
fdivrl
add
lcall
aad
sti
mov
or
ret
fwait
cli
jp
mov
add
cmp
dec
cmp
out
push
xchg
lock
jnp
push
inc
stos
out
cli
xchg
std
pushf
add
add
hlt
inc
sahf
xchg
push
pushf
clc
inc
fwait
in
cs
jo
jb
pop
xchg
mov
out
and
js
loopne
lahf
jg
loopne
xor
in
xlat
shlb
push
add
stos
jl
cmc
pop
mov
popf
testl
mov
and
push
pop
aaa
cwtl
lret
and
mov
mov
xor
clc
fisttps
xchg
imul
inc
push
test
daa
add
dec
ficomps
xchg
ljmp
cmp
rorb
mov
fildl
dec
in
scas
loope
movsb
and
adc
fildll
push
mov
mov
jmp
dec
insb
jle
hlt
inc
es
and
mov
call
mov
mov
test
push
in
mov
inc
stos
loop
adc
je
imul
insb
ret
cli
xchg
gs
adc
scas
pop
push
dec
les
pop
sbb
mov
jb
mov
add
mov
mov
mov
ja,pn
adc
bound
nop
decl
loope
sub
push
es
in
adc
jo
cld
call
push
hlt
nop
pop
mov
mov
jl
add
dec
cli
loopne
in
mov
dec
je
lahf
lea
inc
sbb
lea
jns
outsb
pushl
sar
xor
mov
mov
add
jmp
jecxz
xchg
sbb
cld
jg
dec
pop
mov
hlt
je
es
add
loope
into
cmc
adc
cmpsb
fildll
or
insb
fwait
mov
test
push
pop
mov
test
inc
and
cmp
mov
lods
lds
aad
push
out
and
push
cmp
xlat
movb
enter
insl
out
lods
jecxz
dec
dec
add
add
jecxz
xor
pusha
ja
pusha
aaa
cmp
mov
push
push
sbb
xchg
lds
push
add
mov
jbe
jp
call
out
inc
xchg
or
hlt
inc
or
push
jns
mov
adc
and
loope
jo
cmp
push
arpl
mov
std
dec
adc
mov
cmp
adc
xchg
inc
sub
adc
sub
incl
test
pminsw
cmp
andb
sbb
out
push
fsubr
dec
add
loopne
push
push
cmp
mov
ret
roll
xchg
int
inc
pop
popl
es
cli
decl
sbb
mov
test
stc
loop
sub
pop
xchg
pop
sub
aaa
cmp
jmp
pop
push
lret
push
mov
dec
pop
enter
push
ss
pop
cmp
das
mov
cmp
add
jle
cmp
test
in
dec
in
test
aas
fs
sbb
in
push
fisttpl
in
daa
adc
std
insl
adc
and
stos
cmp
jnp
mov
adc
xor
mov
sarb
cmp
std
add
bound
xchg
mov
push
dec
lret
dec
push
loop
push
fwait
decl
in
rclb
mov
pop
sub
cmp
call
shl
or
daa
bound
lcall
xor
xchg
clc
jg
jae
inc
movb
gs
inc
test
mov
sbb
rol
mov
push
cmp
nop
incb
fsubs
adc
gs
movsb
jbe
sar
jb
je
push
aaa
insb
push
shll
cwtl
pop
mov
mov
and
in
mov
sub
in
shrb
ss
nop
shlb
mov
movsb
and
ds
fistpll
seto
dec
mov
dec
les
sub
cmpsb
mov
stos
imul
push
xchg
adc
xor
or
into
adc
jge
lea
push
or
repz
cmp
arpl
dec
adc
mov
test
or
add
inc
dec
xchg
call
mov
add
rcll
mov
outsb
into
jbe
inc
je
add
movsb
imul
ja
int3
inc
dec
push
jmp
aam
test
xlat
xor
sbbl
pop
dec
or
dec
mov
xchg
dec
add
xchg
fcmovb
lods
test
sub
sbb
test
add
stos
add
imul
xchg
jle
mov
lds
pop
mov
push
je
ljmp
decl
mov
jge
push
add
pop
mov
push
mov
cli
push
in
ret
hlt
and
cmpsl
pop
push
out
movsb
add
xor
inc
scas
js
push
mov
inc
sarb
add
movsb
std
xchg
cmpl
subb
std
xchg
cld
mov
lock
lea
test
repnz
push
sub
push
sbb
fcomip
inc
cmpsb
or
add
ss
mov
sbb
push
cmc
xchg
fiadds
cmovge
sbb
enter
mov
jne
shrl
pop
divb
dec
add
aam
sbb
fwait
jg
call
cmp
dec
mov
push
pop
xchg
sub
outsb
jge
mov
bound
mov
push
rorl
sahf
mov
punpcklbw
sbb
insb
movb
jnp
nop
pop
enter
mov
dec
add
pop
pop
cmp
sbb
pop
sar
jo
aaa
jle
add
cld
mov
pop
adc
scas
or
sub
fcoms
clc
in
inc
std
pop
insb
jbe
mov
pop
repnz
scas
stos
dec
arpl
sub
pushl
dec
shlb
pop
aaa
mov
sub
jno
cmp
ljmp
pop
js
pop
hlt
xchg
push
sti
sbb
test
or
push
push
lods
sahf
inc
lea
test
or
les
ljmp
outsl
jb
add
pop
fmuls
push
or
rcrl
cld
mov
or
clc
inc
or
push
and
add
sub
shl
shl
and
xchg
jmp
pop
push
loope
push
popf
rclb
push
adc
test
rclb
mov
cld
stos
lcall
gs
xor
data16
lcall
and
outsb
inc
mov
jno
sbb
sub
jl
enter
incl
or
adc
int
js
jb
mov
sub
sub
fbld
push
loop
mov
movsl
addr16
xor
aas
out
mov
and
cld
cmp
ret
mov
adc
add
fucomip
imul
movsb
rolb
dec
mov
cmp
fsubl
adc
nop
inc
adc
jp
and
mov
add
push
mov
filds
mov
and
cmp
decl
push
pop
cmc
adc
mov
lret
cs
pop
arpl
mov
push
or
jg
lock
cltd
mov
or
lahf
std
je
sub
dec
xlat
adc
sub
push
mov
inc
xor
clc
pop
dec
fildl
cmp
mov
mov
inc
xor
sub
in
ss
hlt
shl
out
mov
push
pop
or
sbb
sysexit
lock
xchg
rcl
test
push
and
cld
sub
mov
push
sbbb
jo
in
inc
lods
pusha
sarl
hlt
subb
push
adc
subb
pop
fdivrs
xchg
add
out
push
sbb
rorb
xchg
es
pop
data16
jae
pop
mov
push
fiadds
shlb
outsb
or
or
ret
and
ja
add
add
mov
lcall
clc
sub
subl
cmp
jp
jo
jp
lea
popf
shll
dec
pop
stos
and
repnz
sbb
arpl
mov
and
sub
push
call
rclb
xchg
ss
cmp
or
sbb
icebp
adc
stos
pop
add
rolb
pusha
adc
sbb
jbe
xchg
loop
inc
add
aas
push
lock
call
in
daa
xchg
mov
das
les
dec
stc
popf
lcall
cld
gs
add
inc
inc
dec
add
cld
cmp
iret
or
hlt
push
test
inc
dec
cmpl
mov
test
pop
lea
mov
fsubrs
or
idivb
dec
insl
ljmp
test
push
and
jnp
fildll
add
decb
int
repnz
xchg
cmp
pop
lock
add
inc
je
mov
jae
xchg
pop
jp
inc
jo
add
inc
lret
xchg
dec
inc
sahf
in
cmp
push
mov
push
fidivl
testl
mov
mov
test
mov
xchg
loopew,pn
js
and
fdivr
sub
fidivl
lret
rclb
rorb
mov
rclb
adc
and
pushl
jle
std
push
out
cli
dec
add
inc
sbb
ret
xchg
xchg
shrb
xchg
enter
adc
mov
dec
adc
adc
inc
pusha
popa
jo
mov
lret
inc
shll
bound
sbb
out
xchg
jo
imul
outsb
pop
cld
lods
xor
inc
xchg
bound
stos
pop
add
cld
jb
hlt
jg
ds
sub
mov
push
sbb
xchg
es
jecxz
push
ret
daa
call
les
jne
call
lock
adc
loopne
cmpb
or
sub
jne
jg
add
or
xchg
ljmp
cs
fcompl
jmp
add
es
jp
arpl
cwtl
add
insb
icebp
push
mov
xor
out
jp
jns
xchg
jb
fwait
push
dec
lcall
push
or
cmp
or
out
int3
arpl
mov
cs
or
sub
adc
jmp
push
lods
add
and
pop
push
and
jnp
into
in
inc
idivb
sarl
xchg
push
shlb
or
jns
daa
jne
push
stos
insl
cmp
xchg
rclb
mov
pop
jle
fincstp
rcrb
jmp
sbb
nop
mov
outsb
mov
inc
and
and
mov
dec
and
mov
jle
jb
mov
sub
add
xor
inc
mov
fdivs
in
sbb
inc
mov
push
push
lea
mov
and
jmp
lcall
pushf
mov
or
in
adc
lahf
push
jl
push
arpl
or
lcall
mov
daa
adc
push
aam
ljmp
sbb
add
int
xor
fiaddl
pop
insl
xchg
xchg
mov
jp
rcrb
pop
adc
scas
sbb
lods
or
lock
jge
lock
inc
bound
mov
jns
call
push
sbb
inc
xchg
clc
cmpsl
sub
push
ljmp
lahf
lods
sti
movsb
jns
sub
fs
filds
in
mov
jno
or
cmp
pop
mov
test
jae
adc
and
or
pop
sahf
push
inc
cmp
or
mov
add
int3
repnz
lods
adc
xchg
mov
movsl
xchg
fists
sbb
daa
push
jb
fs
sub
fistpll
imul
stos
sub
pop
cmc
cmp
icebp
daa
add
iret
jmp
sahf
jmp
xor
dec
sub
dec
jecxz
add
fisttpll
cld
cmp
sbb
icebp
pushf
fucomip
mov
dec
xchg
pusha
pop
adc
in
and
cmp
push
scas
cmp
fmull
sbb
insl
cmpsl
or
andb
lods
add
jmp
xorl
mov
mov
dec
add
out
xchg
push
decl
or
test
pop
mov
jo
push
jp
dec
jo
push
pop
jg
adc
int
mov
stos
add
cmp
hlt
mov
mov
sbb
push
mov
rorb
shlb
sbb
sbb
sbb
push
lds
adc
jge
push
or
inc
pop
or
outsb
mov
imul
adc
dec
inc
push
jp
sar
pusha
ss
jbe
inc
outsb
dec
mov
enter
in
clc
scas
sbb
js
jl
int3
sbb
or
or
imul
testl
movsb
add
sub
pop
aaa
cli
scas
jbe
jmp
jb
adc
pop
sub
aaa
lods
aam
into
sub
pop
mov
stos
add
xchg
inc
mov
hlt
aaa
adc
out
adc
mov
sbb
cli
adc
push
jg
in
adc
sbbb
adc
cmp
dec
je
pop
test
in
cwtl
or
jb
ljmp
mov
jb
mov
test
psubusw
inc
movsl
ljmp
ret
inc
cld
or
add
nop
mov
ret
jle
loope
rcrl
push
sub
scas
sub
pop
in
push
movsb
js
pop
rolb
push
jle
jmp
push
push
jns
addl
cmp
cld
pop
push
mov
ret
in
xchg
data16
pop
andl
sbb
hlt
add
pop
fiadds
bnd
roll
xchg
ret
cmp
lcall
std
mov
ret
sub
mov
pop
shlb
mov
cmp
cmpsl
adc
inc
sbb
cmc
mov
cmp
push
sbb
xor
mov
test
test
mov
mov
and
je
loope
ljmp
add
sub
add
leave
ds
adc
lods
push
std
test
outsl
cwtl
sbb
imul
sti
popf
je
push
iret
push
dec
jne
push
xchg
push
adc
fimuls
push
add
add
dec
cmpl
call
sahf
in
aad
xor
repnz
jle
setns
outsb
in
js
cltd
adc
bound
inc
sbb
pop
adc
iret
ss
addl
sbbb
rolb
lods
mov
call
bound
sbb
xchg
mov
nop
int3
push
out
je
cmp
push
adc
rclb
sub
sub
loopne
mov
push
icebp
out
cmp
add
add
ds
imul
mov
cs
test
adc
inc
add
mov
xor
fdivs
sarl
repnz
sub
in
pop
aas
pop
je
pop
sbb
incl
js
mov
add
inc
fwait
mov
subl
aaa
arpl
mov
enter
sub
incb
idivb
xchg
adc
divb
mov
std
and
sbb
push
loopne
cli
or
cmpsb
mov
scas
mov
jbe
jo
jmp
ss
je
loopne
xchg
mov
vfmsubps
ss
jle
xor
loope
nop
sub
jae
shrl
inc
jo
add
lock
or
push
add
loopne
ds
lcall
jbe
aam
xchg
mov
lahf
adc
clc
cmpb
loope
scas
or
loopne
enter
mulb
add
pop
add
in
out
jo
scas
test
ja
sbb
sar
pop
sbb
fdiv
mov
cmpsb
jb
push
mov
dec
test
jns
push
jmp
jmp
aad
les
push
dec
add
pushl
mov
outsb
insl
js
rclb
cmp
repnz
and
mov
orb
popa
ss
jno
or
fstpt
hlt
mov
cwtl
int3
leave
frstor
pop
add
decl
dec
cmp
jl
test
fstpt
add
hlt
jbe
loope
sarb
fisubs
mov
outsl
rclb
lock
dec
xor
decl
loop
inc
xor
repz
push
pop
mov
cmp
popf
xchg
mov
shll
insb
or
cmc
adc
rcrl
cmp
lcall
loope
test
sbb
daa
rclb
fmull
lods
jge
bound
and
js
mov
repz
lods
mov
clc
push
push
add
pop
mov
inc
insb
sub
notb
test
xchg
pop
jmp
jo,pn
xchg
stc
enter
je
inc
xchg
decl
xor
adc
sbb
mov
fcmovne
or
cmp
inc
pop
dec
push
repnz
lds
dec
sbb
dec
mov
addb
mov
and
pop
push
push
outsb
outsb
cld
int
and
filds
xor
mov
xor
push
push
add
int
stc
les
mov
xor
mov
or
loop
push
cmp
sbb
adc
add
repnz
jle
cwtl
jb
mov
or
sub
cld
ja
mov
push
cltd
sbb
sbb
loope
jge
insl
xorb
push
mov
cld
sub
dec
mov
xchg
mov
mov
ljmp
and
lods
lea
test
testl
push
mov
out
ds
push
adc
jmp
xchg
mov
xchg
add
add
mov
and
mov
scas
mov
adc
or
jl
push
movb
jl
pop
and
sub
cmpsb
ret
sar
repz
fcmovu
aaa
xor
enter
mov
call
icebp
cmpsl
sub
push
sbb
add
mov
and
lret
cmc
es
lret
mov
rorb
mov
or
or
gs
sub
loop
pop
lea
jb
add
dec
pop
sbb
or
clc
imul
fdivs
xor
clc
sbb
into
xchg
or
sub
cmp
sub
jmp
mov
lock
cmp
das
das
xor
cli
inc
popl
ret
push
pop
orb
mov
loopne
rorl
mov
or
xchg
or
sbb
xor
lock
push
push
xchg
and
add
aad
mov
mov
movsb
aam
inc
repz
adc
fcomip
push
adc
add
xor
xor
rcrb
jns
mov
or
pop
movsb
mov
or
mov
jl
jns
inc
inc
loope
je
hlt
lds
jno
sub
lahf
or
or
or
mov
cld
mov
jle
in
pop
pshufw
jne
cs
call
lods
or
jge
out
xchg
gs
xchg
and
pushf
fisubl
push
inc
push
gs
and
add
icebp
fdivp
mov
ljmp
fwait
loope
mov
mov
mov
pop
bound
jle
push
pop
sub
dec
jmp
adc
and
sahf
ds
mov
inc
rol
pop
lahf
dec
icebp
cmp
xchg
sbb
and
pop
ficompl
cmp
mov
aaa
std
lcall
jne
je
fchs
hlt
or
mov
or
ja
fwait
das
mov
pop
pop
test
sbb
cwtl
mov
test
and
add
dec
mov
sub
xchg
push
scas
pop
in
lcall
cs
mov
mov
cld
or
adc
mov
or
rcrb
and
ds
add
mov
sbb
or
cmp
adc
cld
mov
push
adc
shlb
jge
in
push
xchg
pop
cs
lock
cli
pop
inc
and
push
jns
loopne
cwtl
sbb
test
jne
out
cs
out
cli
dec
add
mov
xor
push
mov
shrl
clc
das
add
lcall
sub
test
and
cmp
faddl
xchg
jecxz
lods
out
adc
fisubl
inc
es
jbe
cs
cmp
mov
scas
loop
xchg
pop
pop
aam
mov
or
push
xchg
popf
push
xchg
fiadds
cmp
or
mov
pop
jg
push
and
in
jo
adc
and
xchg
add
out
ljmp
sbb
rcl
xchg
ret
and
xchg
add
or
add
push
lret
cld
mov
sbb
aad
clc
pop
push
push
movsb
lcall
jo
mov
jp
popa
test
and
lock
insb
adc
mov
lock
sbb
jno
or
and
lcall
push
stc
adc
rcrb
movsl
aam
fstpl
adc
mov
stos
lods
stos
je
sub
sub
sbb
leave
test
adc
mov
add
data16
adc
sub
sub
and
dec
xchg
jecxz
inc
imul
data16
add
outsl
clc
call
jnp
xchg
into
in
jle
xchg
es
loop
sbb
mov
mov
sahf
bound
icebp
and
jae
pushf
icebp
jg
pop
mov
bound
sbb
ret
xorb
add
xor
jbe
out
lret
inc
dec
ret
sub
mov
mov
ret
lods
mov
or
sub
insl
jg
dec
rcr
in
dec
jns
incl
xlat
mov
push
mull
test
addr16
test
pop
sbb
shl
push
adc
pop
test
and
inc
je
xchg
call
jmp
cwtl
push
fwait
push
pop
add
push
out
add
sahf
mov
adc
push
inc
addw
cld
testb
jp
stos
pusha
ljmp
xor
test
pop
dec
loopne
xlat
ja
push
cmp
xchg
bound
mov
rol
incl
or
jge
inc
test
stos
lret
repz
mov
mov
mov
es
push
or
loop
ja
dec
stos
int3
fcomi
cwtl
inc
or
push
out
stos
or
cmpsb
and
push
into
call
clc
cmp
jl
push
ljmp
mov
lahf
or
mov
cmp
ss
ret
xchg
add
xor
imul
pop
mov
push
mov
arpl
or
popf
rorb
call
mov
dec
je
push
or
scas
cmp
push
shrb
jne
jns
adc
sub
pop
pushf
mul
inc
sti
and
add
mov
xor
nop
push
cld
outsl
and
decl
and
inc
and
inc
je
mov
test
cli
jl
in
dec
jg
jnp
jl
sbbb
ljmp
push
out
inc
lahf
inc
icebp
xchg
push
pop
push
ljmp
lahf
xor
dec
xor
sahf
loop
jle
xor
incb
or
pop
mov
cmp
add
mov
inc
cmpsl
mov
add
into
mov
aam
and
sbb
add
cmpsl
mov
ja
dec
sub
jns
int
aad
jo
add
mov
jg
sbb
and
add
int
test
ror
inc
clc
outsl
das
xchg
xchg
pop
hlt
mov
or
mov
aas
and
stc
dec
pop
fs
pop
xor
lcall
fdivr
dec
add
sbb
sbb
clc
mov
push
mov
mov
call
sbb
loope
into
push
cmp
sbb
inc
pop
add
xlat
inc
shll
ret
rolb
pop
fnstsw
cmp
fwait
pop
adc
add
cmpsl
jp
adc
mov
adc
xor
sub
pop
pop
adc
gs
push
cmp
push
cmpsb
loopne
fstl
sti
xchg
add
cli
movsl
call
jmp
arpl
orl
mov
dec
out
test
loopne
xor
or
aam
outsl
mov
int
xchg
mov
aas
pusha
cmp
adc
mov
add
mov
call
imul
jne
jo
jmp
fwait
in
sahf
lods
mov
xchg
das
fdivr
or
aad
inc
push
rcll
andb
dec
insb
fwait
lcall
ss
xor
popf
xor
in
pop
scas
repnz
jb
or
mov
cmp
insl
addr16
dec
stos
xor
sub
and
add
dec
cmc
jl
jmp
jo
and
push
cld
ret
add
adc
test
jmp
cld
loop
cmp
and
adc
daa
repnz
push
insb
mov
push
add
add
fsubr
aaa
sbb
and
xchg
sbb
sub
shrl
push
out
or
mov
and
mov
mov
pop
or
inc
arpl
add
mov
outsb
dec
dec
test
or
mov
cld
or
adc
fstl
mov
ret
andb
js
out
cmp
movsb
fs
push
sar
push
xor
incl
pusha
sub
or
in
test
xorb
stos
fcomip
int3
mov
sub
cmp
icebp
daa
jo
add
icebp
jp
test
pop
add
loop
imul
lods
jp
push
lock
push
subb
clc
ja
mov
fs
popa
std
inc
pop
mov
or
dec
subb
sbb
lcall
sub
test
scas
ret
lods
mov
ficomps
test
xor
ljmp
mov
pop
sbb
aad
lds
scas
ret
add
mov
mov
mov
test
cmpb
mov
jo
shl
push
jecxz
add
jp
icebp
dec
loopne
inc
jne,pt
fcoml
sub
adc
mov
cmp
mov
jg
and
jmp
and
fiaddl
mov
fdivrs
pop
xor
test
leave
jne
ljmp
adc
pop
pop
clc
daa
push
out
stos
icebp
add
icebp
sbb
push
lds
mov
test
jp
mov
lret
dec
or
inc
popa
dec
mov
inc
cs
popf
sub
inc
push
faddp
add
jnp
xlat
sbb
sbb
adc
lcall
in
pop
pop
dec
inc
add
inc
and
push
add
lcall
pop
bound
dec
push
dec
mov
or
mov
jo
lock
lock
test
add
xchg
dec
or
sub
push
and
aad
sbb
sti
xchg
mov
xor
aad
lcall
incl
pop
lret
add
subl
movsb
in
jnp
adc
or
mov
into
inc
movsl
ljmp
push
dec
push
es
mov
sub
mov
sti
xor
sahf
orb
push
std
pop
push
stos
fstps
adc
add
pushf
sbb
fcomip
fcmovnbe
push
inc
insl
cwtl
test
scas
push
into
push
mov
lret
pushl
or
out
add
out
mov
icebp
loopne
sbbb
sbb
pop
jp
out
push
loop
jne
add
mov
cmp
iret
std
add
cmp
pop
cli
pushf
addr16
loopne
cmpsb
mov
ret
icebp
pop
incl
adc
xchg
push
pop
lret
xor
jae
inc
popa
pop
enter
dec
add
sbb
push
jbe
xor
pop
test
scas
jb
or
sar
daa
or
cld
ljmp
gs
ret
adc
add
sub
or
mov
mov
loopne
mov
sbb
pop
loop
fcomip
test
loope
xchg
sub
and
pop
icebp
mov
testl
test
mov
jbe
inc
loop
add
test
test
sti
fsubrs
xchg
call
out
clc
xchg
mov
mov
mov
or
test
pop
rorl
mov
rolb
mov
pop
inc
xchg
hlt
dec
shl
xrelease
inc
js
add
scas
test
mov
clc
js
test
sub
das
pushf
dec
or
jbe
cmpb
or
insl
addb
clc
push
pop
mov
mov
push
lods
aam
sub
mov
mov
dec
add
add
stos
decl
adc
pop
pop
jne
jnp
rorl
push
push
adc
adc
pop
or
pop
cmp
rclb
or
cmp
mov
inc
pop
push
in
xchg
or
stos
jo
rcrl
dec
dec
cs
pop
ljmp
pop
and
mov
push
xor
sahf
inc
and
cld
adcb
lcall
dec
out
mov
nop
fbstp
mov
push
push
mov
mov
fldt
inc
lods
addb
push
adc
mov
add
nop
mov
cltd
and
push
xor
add
mov
add
push
sbb
adc
jge
dec
adc
xor
notb
and
lock
imul
dec
dec
popa
inc
clc
test
cmpb
mov
dec
push
add
ret
pop
lret
pop
leave
ds
out
std
jo
aaa
dec
bound
sub
mov
xchg
lds
stc
inc
dec
sub
mov
push
pop
addr16
cmp
scas
sub
inc
and
mov
and
jg,pt
mov
cmp
xlat
cmpb
push
cmp
push
jl
xchg
add
popf
popa
out
lock
or
insl
jne
in
xchg
adc
inc
nop
inc
aad
js
mov
pusha
jge
pusha
fcoms
and
loopne
ret
cmp
clc
and
ss
cmp
pushl
loope
mov
push
or
mov
ljmp
dec
add
cwtl
add
pop
outsb
or
mov
arpl
pop
test
sar
mov
and
add
and
bound
inc
hlt
pushl
pop
cli
inc
lcall
jns
jno
in
sub
pop
into
imul
mov
jo
push
mov
push
push
sbb
inc
adc
add
test
test
lds
or
icebp
rorl
pop
xor
pop
and
add
mov
nop
xor
inc
cs
or
stos
pop
sbb
add
pop
mov
fwait
test
out
xchg
bound
and
sbb
lds
mov
xchg
repz
and
rcrl
rcr
xchg
or
out
mov
imul
leave
ret
and
decl
in
lock
push
push
hlt
sub
int3
shl
push
cmpsl
add
mov
rcll
sbb
add
fs
jmp
inc
or
orb
jmp
bound
into
push
xor
hlt
lock
add
or
sbbl
push
mov
test
pop
jg
push
jbe
mov
rolb
cmpsl
sub
insb
aam
mov
mov
add
inc
nop
or
mov
mov
xchg
jg
inc
in
xor
or
ljmp
inc
sbb
inc
mov
stos
lock
inc
adc
shr
lret
add
and
shll
inc
pop
and
sbb
xor
ljmp
int
inc
mov
pop
pusha
sarl
or
pop
mov
sub
sub
std
mov
popa
sbb
pusha
adc
or
lcall
imul
add
ljmp
daa
jg
push
out
xor
add
fsubrl
xchg
or
cli
sahf
and
jg
push
rolb
ljmp
dec
cmpsb
outsb
mov
sbb
inc
clc
hlt
test
ret
push
enter
lcall
in
andl
addr16
subb
push
and
add
std
or
iret
add
faddp
pop
push
inc
push
mov
sbb
aam
lcall
ret
pop
xchg
out
call
rorl
or
pop
push
jp
loop
add
sbb
imul
jp
insb
stos
mov
and
cld
push
jne
into
dec
enter
mov
xorl
pop
cmp
push
xchg
or
fbstp
std
jge
dec
ja
outsb
notl
jp
pop
movsl
inc
push
inc
fdivrs
xor
add
pop
mov
xor
sub
fidivrl
pop
cmpsl
sub
shll
rcll
mov
aad
sbb
xor
sub
clc
into
push
pop
lea
rcrl
cmp
sbb
mov
jnp
mov
cmc
rolb
xlat
add
jmp
mov
dec
xchg
mov
xchg
jg
ss
filds
add
test
dec
inc
ds
xor
les
incl
cmp
add
lock
fdivs
jb
sbb
dec
jb
pushf
ss
add
lret
push
jl
lods
cmp
push
jge
in
pop
add
mov
push
jns
pop
test
and
jmp
scas
add
outsl
pop
popa
std
aaa
stos
xor
and
adcb
mov
cmpsb
stos
repnz
jp
jmp
pop
push
push
mov
pop
pop
pushl
and
inc
inc
add
pop
outsl
add
add
mov
cld
hlt
test
lock
pushf
add
jmp
inc
add
xor
cmp
add
dec
pop
icebp
push
pop
lcall
xor
mov
adc
mov
popa
or
xor
cmp
adc
xor
insl
xlat
aaa
inc
push
mov
jle
pop
idivb
xchg
subl
sbb
sti
pop
mov
test
in
leave
sbb
js
mov
sti
push
mov
adc
pop
mov
xchg
cmp
test
pop
inc
cmp
mov
incl
jno
mov
sub
cmp
rolb
testl
xor
adc
jg
dec
xor
in
fimuls
jecxz
cld
mov
adc
jecxz
es
cmc
or
jle
adc
clc
outsb
std
sub
clc
or
mov
jno
test
cmp
jl
rcrb
mov
or
add
pop
add
icebp
xchg
test
xchg
add
add
jo
or
xor
js
out
lock
mov
xlat
rolb
xchg
sti
mov
add
sbbb
add
dec
xor
pushf
xor
mov
mov
or
rolb
add
pop
push
into
pop
shr
inc
out
fldl
test
das
stc
gs
xor
mov
or
add
setbe
iret
pop
cmc
dec
outsb
lods
lcall
enter
sahf
sub
add
daa
inc
insl
cwtl
nop
lret
data16
divl
xor
ret
dec
mov
cmovo
iret
inc
gs
stos
cli
xor
inc
fisttpl
adc
leave
mov
mov
mov
inc
or
in
mov
pop
enter
adc
mov
add
sbb
movsb
jmp
or
lock
divl
xchg
add
ljmp
cmpsb
xor
sbb
lds
pushf
mov
cmp
inc
leave
mov
sub
or
test
nop
repnz
or
fwait
push
cmp
test
clc
add
aam
fisttpll
sarb
mov
test
jp
push
mov
inc
rolb
dec
push
xor
push
sub
add
mov
insl
enter
push
jno
mov
clc
test
mov
mov
sbb
movsl
insb
or
cld
dec
sbbb
shrb
fldenv
flds
pop
sbb
fdivr
icebp
mov
incl
xor
shll
insb
adc
pop
add
test
mov
mov
aad
cli
scas
nop
or
pop
pop
sti
rcr
mov
jl
jo
gs
adc
push
fidivrl
in
fistps
pushf
roll
add
dec
add
insl
call
rolb
shlb
sub
scas
xchg
sub
hlt
adc
xchg
imul
ja
je
filds
add
sbb
and
divb
mov
popf
ja
orl
cs
or
and
loopne
in
scas
ss
call
add
mov
pop
rorb
imul
push
int3
cmp
hlt
fisttps
or
mov
jle
pop
aad
ffreep
dec
mov
pop
mov
cmp
sbb
xchg
nop
xor
jbe
add
dec
pushl
jnp
push
std
xor
cmpsb
rorl
pop
cmp
push
aam
mov
fsub
rolb
xor
cltd
inc
enter
ja
mov
loopne
out
test
and
repnz
cmp
cmpsl
sub
cli
lods
mov
jg
out
adc
and
imul
hlt
push
push
cmp
and
jg
inc
pop
out
roll
fcomi
decl
jecxz
pusha
dec
in
add
daa
and
jp
cmp
add
xor
bound
jno
pop
cmpb
add
mov
ljmp
movsb
cld
mov
pop
mov
icebp
inc
mov
add
jns
sub
jge
add
shll
mov
adc
sub
sahf
jne
fidivrl
pushl
fwait
push
je
ret
out
aas
mov
dec
lcall
icebp
loop
and
and
xor
fbstp
les
je
ficomps
xor
cmp
fwait
push
inc
test
sub
fdivl
sbb
mov
loop
mov
fsub
inc
adc
aad
pop
lock
inc
sub
mov
clc
inc
fistpll
push
inc
dec
test
ss
addr16
adc
adc
les
dec
inc
movd
xorl
jb
mov
loopne
inc
sbb
sbb
lock
jle
insl
inc
jg
repnz
jge
fs
movsb
das
inc
add
jmp
adc
andl
push
mul
dec
mul
fs
xor
jo
subb
incl
mov
ret
mov
adc
mov
push
jl
adc
pusha
and
add
mov
into
aam
in
call
mov
int3
insl
jnp
mov
pop
ss
cmp
xchg
lcall
lock
adc
addr16
push
and
mov
std
out
cs
cltd
or
test
mov
cld
push
jb
push
and
je
mov
cmp
add
lods
mov
push
aam
pop
cmpsb
dec
outsl
cs
xchg
cmc
xor
out
call
pop
or
cmp
je
outsl
pushf
adc
cmpsl
sbb
inc
negb
jmp
add
std
in
lret
jge
add
fwait
call
scas
mov
xchg
dec
inc
lods
or
mov
push
add
repnz
mov
mov
adc
add
bound
add
jp
or
js
jne
std
out
lret
adc
jmp
adc
or
lahf
rcrb
add
push
cmc
push
data16
push
cmp
xchg
iret
push
jmp
inc
data16
xchg
es
sbb
mov
xor
fs
out
add
sub
ljmp
xchg
add
and
aam
add
scas
adc
adcb
pop
xor
mov
add
aad
mov
std
sub
rolb
cs
xchg
std
mov
or
popf
add
mov
stos
push
and
jge
jg
add
outsl
push
add
scas
je
mov
xchg
loopne
cmp
and
pop
inc
pop
sti
dec
jmp
xorb
jge
jle
stos
and
in
aas
or
ljmp
or
xor
call
rorl
pop
sbb
lahf
sub
call
scas
or
mov
mov
aas
sar
daa
jp
mov
scas
shrb
dec
sbb
or
add
push
jnp
inc
das
movsb
mov
movsb
es
mov
sub
and
scas
add
lret
rorb
in
aas
lock
popa
mov
cmp
ret
fcomps
jge
or
pop
mov
push
add
test
xor
mov
pop
pop
and
mov
fistpll
rolb
fs
add
ret
lea
adc
fidivrs
test
stos
ja
lock
push
sbb
lock
inc
and
shrl
sub
add
pop
ljmp
leave
pop
cmpb
jp
fwait
rolb
mov
or
xor
push
mov
and
mov
pushf
stos
mov
test
jnp
sbb
cltd
fcoms
mov
mov
xlat
inc
int3
add
flds
and
cwtl
and
cmp
iret
dec
pushf
jno
mov
mov
fmull
push
bnd
test
ret
pop
rcll
popa
push
shrb
pop
ret
ficoms
aam
cwtl
adc
hlt
lea
shlb
icebp
out
aam
pushf
fwait
xchg
add
inc
int
adcb
pop
rorl
rcrl
pushf
lock
test
sub
xor
cli
sbb
adc
cmp
pop
xchg
sar
mov
dec
add
ds
mov
xchg
mov
xor
adc
mov
decl
fcomps
cmp
dec
sub
repz
inc
mov
pushf
test
add
lret
mov
push
sub
adc
inc
mov
jl
ficoml
add
std
mov
icebp
jecxz
cmp
xchg
loope
sbbb
sub
sarl
mov
or
mov
dec
fildl
push
mov
loope
pushf
in
mov
dec
rcrl
les
mov
inc
repz
jecxz
cs
add
xchg
and
es
sbb
mov
jle
loopne
jecxz
fbstp
mov
mov
loopne
sbb
adc
popa
push
mov
outsl
jb
pop
mov
add
sbb
fwait
outsl
loop
sbb
add
out
xchg
sbbb
push
and
mov
push
or
pop
push
add
cmp
jp
pop
cli
sbb
cmp
dec
xor
popf
std
cwtl
les
xor
mov
shlb
mov
lcall
and
loopne
mov
popa
push
cs
test
mov
sarb
push
or
icebp
je
clc
and
mov
add
sbb
add
add
inc
aam
inc
pushf
push
rorl
or
mov
mov
ret
pusha
pop
shl
cmp
mov
in
out
lret
jl
test
dec
sub
out
xor
dec
scas
lock
cmp
imul
mov
rol
jle
enter
or
xor
pop
jbe
pop
cmp
mov
mov
push
inc
rorl
shlb
into
xor
ret
mov
cmp
outsb
cld
sub
mov
ss
jne
xchg
push
mov
sub
orb
push
or
outsb
mov
mulb
fsubl
ds
clc
iret
sahf
inc
mov
outsl
or
adc
mov
testl
and
push
xchg
out
aad
fildl
loopne
aad
outsb
aam
adc
cwtl
inc
loope
mov
pop
inc
fmull
sub
insl
dec
and
xor
mov
or
lock
inc
adc
flds
add
or
faddl
inc
hlt
call
sub
mov
mov
pushf
lods
push
cmp
testl
ljmp
jp
fst
out
mov
xchg
pop
pop
xor
mov
add
add
cwtl
cmp
mov
xor
sahf
inc
xchg
fwait
add
push
push
add
fnstenv
adc
cmpsl
push
adc
ljmp
add
or
mov
mulb
test
mov
xor
or
mov
jp
fdivl
adc
movups
pop
cltd
aam
jmp
push
div
fs
inc
sti
aam
inc
movb
and
ret
adc
add
loop
bound
outsb
lods
inc
mov
roll
sbb
mov
xchg
push
popf
mov
push
rorb
and
nop
loopne
fsubl
popa
js
fs
out
std
fsubp
xor
push
and
or
xor
xchg
dec
hlt
mov
add
mov
xchg
sbb
ret
js
into
mov
into
xchg
fs
js
fbld
and
dec
lahf
push
xchg
push
push
add
mov
test
pop
xor
leave
and
cld
mov
in
in
inc
sar
push
pop
adc
sbb
and
xchg
roll
and
pop
bound
and
lahf
stos
fiaddl
pop
inc
out
adc
cmp
push
clc
clc
add
dec
add
xlat
les
pop
test
movsb
cmp
in
add
mov
dec
jnp
ja
pusha
pop
pusha
sbb
iret
push
jge
das
in
popf
pop
push
push
cmp
sub
sbb
inc
mov
xor
stos
aad
jle
jae
inc
or
adc
jae
fwait
sbb
push
jne
loope
ljmp
ss
daa
stos
xor
ror
es
adc
push
cmp
jb
adc
pop
lahf
push
sub
dec
pop
sub
decb
clc
xchg
sub
add
or
clc
cwtl
in
in
scas
es
test
divl
pop
test
jne
push
mov
pop
int
flds
cmpb
push
test
mov
ds
mov
adc
sub
bound
adc
lcall
lret
dec
push
xchg
dec
inc
mov
mov
jp
inc
neg
push
test
add
sbb
ret
adc
mov
cmpsb
das
mov
fidivs
ljmp
repnz
insb
dec
incl
push
adc
jbe
popl
loopne
pusha
mov
and
dec
add
or
dec
fimuls
loopne
push
dec
into
test
push
sbb
std
add
xchg
cltd
or
cs
frstor
inc
iret
add
aas
sbb
ja
negl
shll
adc
push
push
popa
cmc
add
xchg
dec
daa
adc
sbb
je
rclb
test
mov
aas
shrb
cli
push
addl
sbb
mov
out
pop
jp
cmp
or
mov
pop
pop
push
cli
and
sub
jae
mov
hlt
mov
add
mov
pop
push
dec
add
dec
stos
cli
dec
loope
mov
out
fdivl
call
xchg
stos
fsubrs
jp
pop
aaa
cmp
incl
ljmp
or
sub
lea
pop
push
std
outsl
adc
jb
bound
add
bound
adcb
jp
aas
shl
add
mov
lock
jno
out
xor
sbb
jecxz
pop
icebp
fsts
xchg
mov
std
jmp
hlt
sub
aas
mov
lock
xor
jbe
jb
xor
inc
insb
push
addb
push
stos
inc
cwtl
pop
jo
adc
push
mov
ja
push
push
xor
mov
andl
jmp
push
or
std
xchg
ret
xor
pop
jg
mov
test
scas
jecxz
jle
ds
lahf
cmp
popf
xor
push
jl
pop
dec
movsl
inc
movsb
inc
lds
xor
xor
daa
pop
ret
int3
jl
hlt
vmread
inc
fstl
sub
mov
imul
fwait
push
and
jp
out
xor
sub
pusha
insb
pop
mov
sbb
out
pop
xor
sbb
inc
inc
xchg
imul
loop
test
dec
imulb
lea
loopne
lock
mov
fcmovnb
inc
jae
and
sbb
add
movsb
sub
mov
outsb
sahf
fcoml
lcall
jo
test
xchg
test
adc
cli
dec
mov
das
add
movl
jg
ja
xchg
test
in
sub
leave
add
rolb
outsb
sbb
scas
stc
mov
ja
cmpsb
stos
lahf
and
add
je
or
aaa
adc
mov
jns
or
testb
xchg
mov
mov
les
test
add
mov
and
shr
sbb
dec
mov
jmp
mov
movsb
xlat
fcoml
clc
je
test
inc
mov
clc
fwait
xchg
cmc
test
shl
stc
push
sub
inc
mov
or
loop
lock
mov
xchg
rcrl
into
and
insl
cwtl
mov
sub
dec
xchg
lret
push
xchg
adc
insl
clc
add
jb
hlt
shll
cmp
jge
jmp
and
popf
int3
decb
loop
xchg
je
push
roll
xor
or
jbe
js
pop
xchg
cmp
push
stos
push
lea
cltd
outsl
sbb
cmp
mov
sahf
jg
mul
scas
push
xor
mull
insb
cmp
and
cs
lahf
add
mov
test
add
or
push
jle
pop
mov
sahf
and
adc
ss
aaa
ljmp
inc
imul
cmpsl
adcb
push
lds
dec
hlt
fbld
outsb
fs
add
sub
push
mov
jg
cmpb
and
pop
mov
lock
adc
or
pop
sub
aam
add
jmp
sbb
push
sbb
lock
cld
mov
shrl
sub
lds
cmc
mov
fs
in
or
inc
xor
pusha
and
and
enter
test
sbb
cld
call
test
push
add
jne
dec
lret
incb
mov
outsb
nop
aam
lods
sub
mov
scas
push
and
out
or
cmp
pop
mov
nop
push
fcompl
loopne
push
mov
adc
xor
loopne
mov
andl
cli
jp
or
mov
jecxz
add
aam
mov
cmp
mov
jmp
aad
insb
sbb
test
roll
cmp
push
add
push
jne
xor
mov
mov
repz
lret
xchg
inc
xor
stos
rcrb
push
add
sarb
mov
jle
push
mov
fs
mov
add
loope
inc
inc
jo
nop
out
sub
pop
sub
popf
in
jge
loopne
daa
mov
shll
clc
sbb
lods
fisttpl
lret
cs
inc
adc
mov
push
jg
das
inc
mov
pop
jb
dec
loope
dec
push
in
rcl
xchg
int
cmp
push
in
dec
jmp
cwtl
adc
xchg
sub
xorb
xchg
movsl
xchg
sub
data16
jo
sub
mov
mov
xor
clc
sbb
movb
mov
push
lods
mov
mov
cwtl
xchg
sbb
jle
xchg
ljmp
push
sub
pushf
popf
adc
push
je
jo
clc
decl
imul
sti
cmp
clc
ret
aas
es
ss
or
icebp
or
lea
sbb
sub
jb
xchg
hlt
adc
inc
sbb
jno
dec
xchg
enter
adc
mov
pop
add
add
pop
mov
sbb
add
ss
sub
sub
lods
sub
iret
xchg
out
fadds
std
pushl
lods
xor
dec
pop
pop
loope
add
pop
push
mov
sub
mov
or
mov
cmp
jmp
dec
clc
push
rorl
sub
mov
pop
cmc
jg
xchg
push
jg
sbb
test
pushf
jg
cmp
and
or
jbe
push
jg
fwait
cmpsb
mov
lret
aaa
jmp
lods
mov
rclb
add
inc
push
shrl
push
mov
test
jns
ss
pop
imul
insb
hlt
lret
sub
pop
sbb
pop
mov
cmp
xor
and
mov
test
out
mov
jo
xor
adc
in
inc
mov
adc
add
int
sbb
es
xlat
inc
pop
push
dec
mov
sbb
mov
jle
mov
inc
or
mov
imul
inc
int
jge
mov
stos
test
notl
inc
repnz
jno
jbe
sahf
call
mov
mov
mov
je
leave
push
es
lcall
mov
pop
or
out
fwait
jo
or
pop
xchg
shrb
add
push
push
jecxz
push
or
pushf
jae
aas
adc
mov
insl
cli
mov
ljmp
add
in
and
decl
sbbb
mov
mov
sarb
sbb
pop
add
cld
outsb
dec
fcoms
lcall
or
loop
and
xchg
sarl
loopne
xchg
std
incb
jnp
xchg
dec
sbb
out
hlt
jge
loope
jno
and
dec
es
pop
xchg
cwtl
fadd
cmp
orl
js
outsb
lock
adcb
pop
inc
xchg
push
fisttpl
and
add
dec
or
and
mov
repnz
in
pop
je
addl
fsubr
jg
clc
or
fdecstp
js
testb
mov
mov
movsb
sub
pop
mov
pop
lods
rorl
and
lcall
jle
pop
inc
mov
push
sub
insl
adc
mov
pop
cli
push
cld
lret
and
orl
mov
cmp
sahf
in
loope
adcb
push
dec
outsb
in
or
fwait
std
jl
pop
xchg
cwtl
cwtl
and
mov
mov
loopne
pop
or
fdiv
jmp
jmp
mov
push
call
divb
mov
insb
js
push
nop
xor
andb
or
and
pop
enter
popf
adc
jne
clc
mov
enter
sbb
out
lock
in
cs
jge
fbld
test
mov
or
rolb
das
sub
addr16
sbb
cwtl
jb
xor
push
mov
jmp
pop
lods
lds
sub
mov
mov
mulb
jl
cmpsl
clc
lahf
lods
aad
jo
push
xchg
sbbb
lds
sahf
test
into
push
movsb
jae
mov
fwait
xchg
add
imul
xor
ds
add
cld
jns
nop
les
cmp
sub
movsl
lock
adc
lcall
push
stos
std
inc
cld
rorl
adc
fs
pusha
or
cld
lea
push
adc
lret
xor
xchg
push
mov
scas
orb
mov
push
xchg
push
push
jae
cmp
jmp
sbb
call
es
movsl
mov
pusha
mov
jg
test
aaa
out
inc
movsl
mov
push
scas
add
push
pop
lea
pop
das
sub
in
dec
pop
add
mov
xchg
outsb
mov
cmovbe
jo
cmpsl
stos
js
loop
int
aaa
icebp
add
xlat
icebp
sub
add
xchg
fcom
jmp
pop
cmp
fimuls
pop
and
xorl
mov
das
and
dec
dec
add
cmp
call
andb
and
mov
incb
mov
aad
jbe
add
xor
repnz
iret
push
clc
sub
addr16
fisubrs
jo
push
ss
outsb
sub
inc
stos
mov
adc
cmp
adc
push
js
in
pop
cmpsl
ljmp
jb
mov
xchg
sbb
shr
ret
add
push
pop
xchg
xor
aaa
sub
clc
pop
add
jle
mov
mov
xchg
xor
movsb
clc
aam
jmp
mov
daa
dec
fcom
leave
dec
xlat
adc
dec
in
cwtl
enter
adc
pusha
add
loop
push
mov
cmpb
push
mov
mov
shll
adc
adcb
mov
scas
xchg
sub
jno
push
add
inc
jg
push
mov
jo
mov
add
popa
sbbl
cmpb
sbb
ljmp
sbb
mov
mov
xor
and
repz
jl
adc
insl
sbb
mov
jge
sar
mov
mov
aad
xor
xchg
mov
fs
adc
ret
call
mov
cwtl
push
inc
je
int
xchg
inc
cmp
scas
mov
sub
cmp
fstl
loopne
daa
ffreep
imul
jb
mov
push
rolb
add
dec
imul
pop
daa
test
loope
push
addb
jmp
in
daa
pop
pop
cli
call
out
fimull
out
pushl
mov
push
push
xor
insb
sbb
hlt
loop
addb
adc
arpl
jle
and
shll
decl
lock
add
xchg
ljmp
roll
ret
mov
popf
jbe
jle
scas
fwait
outsb
and
push
out
ret
sbb
je
adc
cmp
push
mov
push
mov
adc
fstpt
push
mov
testb
mov
orb
ja
sahf
cld
jmp
in
inc
mov
adc
insl
push
orl
sahf
push
shll
rcll
sbb
mov
xchg
mov
incl
pop
fstpl
lods
push
sahf
adc
sub
ds
cmp
andps
addr16
add
outsb
or
das
inc
dec
mov
int3
or
stc
cmp
or
mov
push
sbb
pop
jle
nop
dec
add
mov
sub
xchg
test
not
xor
loopne
pop
lods
js
push
mov
sub
fwait
sub
int
add
push
sbb
push
cltd
out
loopne
lcall
ret
ds
or
sub
cwtl
jb
insl
adc
sbb
dec
or
jmp
mov
sbb
icebp
mov
jmp
testb
dec
pop
jmp
inc
mov
stos
mov
add
cwtl
mov
loop
push
or
outsl
cmp
inc
out
xchg
add
std
dec
fidivs
add
pop
jl
test
sbb
rolb
pop
mov
lods
lods
cs
sarb
dec
lahf
push
xchg
xor
jge
loopne
das
lcall
mov
xchg
data16
cmp
pop
cmp
jp
loopne
das
addr16
cmpsb
out
jecxz
mov
sarl
mov
call
adc
jns
xchg
data16
xor
and
jmp
or
dec
sub
jmp
adc
lcall
jno
fwait
push
sbb
push
mov
dec
ds
sbb
jl
jg
dec
add
sub
add
cmpsb
dec
lds
in
std
js
add
lock
mov
sbb
leave
stc
sub
std
mov
js
shll
out
mov
stos
and
jbe
lret
lahf
inc
pop
stc
jmp
lret
mov
xchg
blcs
xor
pop
cltd
push
or
add
jmp
mov
aam
fcomps
dec
roll
ficoml
dec
cld
mov
into
xchg
cltd
daa
push
int
or
mov
sbb
cmp
cmc
pop
clc
ljmp
jo
repz
mov
mov
fisttps
lcall
or
add
or
sbb
jno
scas
inc
xchg
std
into
mov
mov
test
dec
cld
rcrb
lods
jecxz,pt
jmp
dec
clc
int
les
cld
inc
or
js
sahf
mov
xor
repnz
adc
jle
mov
popa
push
or
pusha
inc
mov
jo
add
xor
cmp
lea
adc
push
adc
mov
xorl
add
lock
aad
int3
js
out
inc
outsl
xor
out
jmp
mov
fsub
andb
xlat
fnstsw
in
repnz
add
lock
and
addb
cmp
pop
icebp
dec
cld
jg
ds
enter
sub
je
add
mov
push
dec
and
pop
mov
cli
mov
xchg
xchg
or
aad
add
lahf
jno
fdivr
loop
mov
sbb
jecxz
imul
sbb
xchg
mov
xlat
add
test
mov
add
lret
cmp
push
add
inc
dec
mov
jecxz
xchg
cmpsb
add
data16
and
mov
test
inc
mov
sbb
sti
lock
js
pushf
jge
xchg
add
or
stos
jbe
std
rcrb
or
repz
and
jbe
idivl
or
mov
stos
test
cmpsb
jbe
js
sub
ret
mov
adc
xchg
mov
outsb
clc
shlb
inc
pop
int3
xor
adc
pop
popa
jne
pop
sub
xor
add
adc
mov
cmp
xchg
add
fdivrl
out
mov
cmpsb
aam
push
pop
inc
dec
pop
cmp
inc
mov
sub
ret
fs
decl
mov
xor
dec
movsl
idivb
push
idivb
pop
sbb
jp
add
sbb
stos
shll
in
adc
inc
in
sub
lock
cmpl
movsb
lahf
dec
daa
mov
mov
add
push
daa
cli
xor
xor
and
fs
mov
decl
pop
cmpb
call
mov
scas
mov
pop
test
xor
add
incl
mov
xor
stc
call
push
jge
sti
inc
push
sub
out
loop
loop
std
cltd
in
pop
add
cli
sbb
ljmp
fisttps
xchg
mov
dec
mov
jae
sti
aaa
std
push
add
aam
mov
imul
pop
jo
cld
rolb
rclb
iret
sub
pusha
lock
call
xchg
mov
cmp
notl
rorl
outsl
inc
std
push
push
mov
outsb
imul
dec
xchg
lods
insb
pop
cmc
mov
incl
cmpsb
fcomip
jo
cmpsl
and
rcll
outsl
xchg
or
adc
loop
out
pop
aam
mov
inc
jo
adc
sti
mov
jmp
mov
sti
stos
xlat
sub
mov
and
mov
loopne
adc
aam
sti
aaa
shrb
add
fimull
and
loope
out
mov
jne
ja
jecxz
ss
mov
call
add
mov
mov
test
mov
mov
orl
decb
std
pop
add
and
sub
xor
dec
test
stos
outsb
gs
mov
rcl
outsl
sbb
dec
cld
dec
or
add
push
lea
sahf
mov
in
bound
ret
push
cltd
jmp
andb
mul
lcall
pushf
and
and
cs
popa
cmp
add
mov
call
cmp
adc
cmp
enter
cwtl
test
sbb
push
decl
xor
in
add
mov
shlb
mov
sbb
add
push
and
fcomip
das
cmp
test
mov
push
xor
mov
fimuls
pop
mov
sbb
dec
nop
xor
ret
jg
sbb
pop
andb
cmp
pushf
lods
inc
ds
lods
ljmp
push
sub
jnp
pusha
cmpsl
push
mov
imul
jne
and
in
or
sti
adc
jg
jle
and
pop
adc
int3
xchg
pusha
call
jg
jg
sbbb
sbb
sbb
mov
and
sbb
bnd
add
data16
push
test
adc
xor
std
push
mov
inc
test
ds
sub
in
mov
cli
push
jno
cmp
stos
icebp
and
add
push
pop
lock
std
sub
jl
in
push
adc
or
les
pop
lods
fmull
out
dec
mov
sub
xor
push
pop
fimuls
cmpb
pusha
adc
mov
jp
ret
cmp
jns
xor
pop
mov
fcomps
enter
not
add
pop
pop
int3
or
pop
mov
cltd
rol
mov
cmp
mov
sub
sahf
add
pop
add
pop
add
test
popa
daa
and
test
adc
rclb
mov
test
lret
mov
ret
mov
insb
dec
jbe
xor
mov
adc
fsubs
dec
test
adc
push
pop
sbb
add
dec
or
push
ss
aas
aad
or
or
das
sahf
fidivl
test
pop
or
pop
test
out
jae
push
outsb
pushl
jns
hlt
push
jecxz
js
call
ss
outsl
xor
add
push
dec
scas
ret
dec
pop
scas
xor
les
mul
inc
cmpsb
xor
sub
gs
cmp
out
sub
fldenv
fiadds
cmp
jmp
adc
add
push
sbb
add
andb
inc
push
push
pop
sub
pop
jo
je
fldenv
nop
push
mov
add
arpl
loop
lods
ljmp
dec
insb
call
inc
jns
arpl
jno,pn
add
jne
add
or
cmp
jmp
roll
add
bound
jbe
jg
sbb
mov
lret
movl
xorb
mov
jg
clc
adc
inc
insl
rsqrtps
adc
ret
add
adc
ljmp
fcmovu
add
testb
out
dec
stos
pop
cli
mov
pushl
incl
mov
cmc
jbe
pop
sahf
push
aas
clc
or
jl
inc
push
xor
clc
sub
cmp
rclb
jecxz
jnp
cmp
mov
icebp
inc
fstpt
repnz
shrb
ss
cmp
cmp
call
loop
ss
js
jg
mov
add
xchg
cli
cmp
adc
enter
dec
les
fdivs
push
sbb
pop
in
enter
add
xchg
lret
lret
xchg
and
push
enter
mov
dec
mov
test
lcall
jle
lock
mov
repnz
ds
mov
mov
cmpsb
xchg
lock
cwtl
add
mov
mov
sti
cwtl
pop
inc
fs
push
jns
cmpsl
pop
ljmp
adc
dec
fisttps
idiv
xchg
mov
in
or
mov
movsl
fs
pop
test
mov
addb
mov
sbb
out
cmp
mov
ret
sub
push
sbb
ret
mov
pop
adcb
popa
xor
add
pop
lods
xchg
mov
and
mov
xor
pop
add
jbe
loope
dec
lret
add
nop
stos
jmp
sub
adc
shlb
sub
inc
in
add
push
ja
insl
xchg
fidivs
jle
xor
fbstp
fimull
ljmp
mov
aam
adc
xor
jo
push
jo
std
or
push
fwait
xchg
pop
pop
add
push
daa
and
pop
mov
fcoml
or
js
insl
orl
loopne
or
jbe
sub
ret
xor
out
orl
cmp
lods
xchg
imul
out
or
lcall
cli
mov
rcll
inc
sub
ds
test
mov
inc
push
scas
inc
and
jns
add
xor
xchg
sbb
iret
sbb
mov
sarb
and
cmp
xchg
mov
pushl
movsb
xchg
arpl
mov
aam
push
jo
imull
jo
shl
or
mov
stos
aam
sbb
mov
sahf
addb
sarb
jo
loopne
out
std
dec
jno
jp
sub
je
adc
xchg
xchg
cmp
jl
push
fbstp
mov
cs
loop
adc
movsb
xor
push
std
push
movsb
add
es
mov
pop
out
test
cmp
std
push
clc
cmp
cmpsb
repz
shlb
pusha
rcrb
arpl
in
dec
insb
lret
imull
xor
adc
stos
push
mov
inc
adc
data16
push
xor
ret
mov
adc
mov
aad
jne
inc
sahf
mov
jle
jo
add
stos
mov
push
hlt
push
cmp
aaa
and
push
mov
lds
or
insl
shrl
aaa
or
mov
and
pop
add
ss
arpl
aam
test
adc
loop
dec
jo
xchg
insb
subb
sbb
add
cld
jle
and
push
xor
test
lret
jo
iret
jecxz
pop
push
enter
out
daa
dec
fldcw
pop
xor
call
cld
cmp
add
jg
push
push
sub
fcomps
aas
inc
enter
stos
cmpsb
push
sti
hlt
pop
sbb
jp
push
adc
pop
loop
dec
push
mov
cmc
shrl
xchg
inc
mov
push
and
mov
je
mov
cltd
ret
mov
push
pop
shlb
xchg
pop
jnp
imul
push
ss
ret
lahf
das
pop
inc
sub
sbb
add
insb
in
out
push
decl
cmpsl
addr16
mov
push
sbb
lcall
lock
in
iret
vpunpcklbw
dec
jl,pt
lods
ret
inc
push
es
mov
lock
incl
dec
lock
inc
in
ret
mov
jg
scas
stc
orl
mov
pop
mov
rcll
sbb
xchg
mov
mov
inc
test
sub
test
sub
add
loope
aam
ljmp
lods
cmp
clc
cltd
push
or
hlt
mov
clc
sub
mov
jle
sub
inc
sub
dec
xor
jl
mov
add
rcrb
lock
outsl
adc
cmp
lea
loop
inc
xor
mov
fisubrl
pop
cwtl
xor
pop
dec
cmp
add
push
mov
mov
mov
cmp
cwtl
pop
call
jnp
clc
add
call
sarb
inc
dec
pop
lahf
faddp
leave
sti
sub
and
outsb
sub
push
jmp
jg
fdivrs
mov
dec
or
and
ret
rorl
pop
push
les
leave
lret
loope
clc
fisttps
adc
pusha
jne
dec
push
lods
or
sub
xor
in
aam
push
pop
jl
jle
xchg
and
jmp
bound
add
pop
mov
andl
pop
je
das
inc
mov
pop
repnz
mov
and
mov
add
movsb
mov
cwtl
push
imul
mov
jl
pop
data16
mov
adc
inc
inc
and
aas
movsb
data16
dec
or
xchg
cs
push
dec
lret
cmpsb
push
incb
adc
adc
jp
orb
cmpsl
sub
inc
std
adc
aaa
pushf
mov
mov
rorb
fs
jge
in
mov
js
push
mov
cmp
mov
cld
fnsave
or
jmp
xchg
push
outsl
jge
mov
sbb
add
mov
pushf
ret
es
mov
add
cmp
push
push
loop
jae
incl
sub
fidivrs
sub
jp
add
fwait
pusha
testl
add
pop
adc
or
mov
das
push
mov
je
shll
icebp
outsb
push
les
push
loop
sahf
push
mov
pop
js
and
mov
xchg
jmp
cmp
outsb
je
mov
sub
pusha
mulb
popa
repz
rcrl
adc
lcall
and
pop
insl
sti
xor
mov
movsb
test
mov
movsl
scas
add
enter
xor
inc
das
push
insl
xchg
mov
mov
je
push
sahf
lahf
cmp
jge
repnz
mov
mov
xor
fcomps
clc
jg
dec
sbb
jecxz
std
mov
or
mov
mov
outsb
xor
iret
aad
sub
mov
or
inc
xor
loop
lock
xor
or
in
add
sarb
mov
jbe
mov
pop
enter
pop
inc
jl
cmp
bound
pop
add
ds
xor
roll
movsb
leave
rorl
bt
lock
in
sbb
sahf
sub
push
jnp
and
push
add
mov
aaa
lods
add
test
cmpsb
ljmp
pop
loopne
fbstp
call
pop
bound
jmp
imul
mov
jnp
pop
push
jo
xchg
adc
or
push
mov
popf
pop
aam
pop
mov
out
mov
add
or
in
idivb
jl
ret
mov
in
in
enter
fsubs
jne
ror
and
je
xlat
call
push
test
push
ss
pusha
arpl
or
pop
sub
and
icebp
jnp
jp
pop
lahf
pop
push
scas
add
and
pop
stos
add
mov
test
orl
jp
mov
adcb
mov
pop
jns
add
dec
add
mov
lcall
sub
jecxz
adc
cltd
cwtl
pushl
rolb
jne
jle
into
xor
xchg
sarl
fs
xchg
stos
jmp
mov
test
push
sbbb
mov
loop
insl
addb
xchg
cmc
loope
pop
cmpsl
or
aam
movsb
mov
inc
mov
rcr
pushf
adc
pop
scas
jg
shll
xlat
mov
out
movsb
movl
mov
js
pop
nop
xchg
mov
mov
add
imul
xchg
dec
sub
xchg
mov
add
fildll
jp
jbe
xchg
xchg
ret
inc
and
push
jl
pusha
out
lret
xlat
mov
push
js
push
cld
push
movsb
in
add
inc
add
mov
or
mov
cmc
mov
pop
add
xchg
shrd
nop
dec
sbb
mov
enter
nop
and
cltd
loopne
xor
test
xchg
lock
pop
std
inc
ficoml
xorl
xor
add
cmpsb
cli
mov
pop
negb
sub
mov
pop
mov
sbb
and
std
xor
xlat
and
add
clc
inc
sub
sar
adc
lret
int3
sub
out
fs
negb
or
pop
sub
insb
add
mov
ss
andl
cwtl
mov
daa
xchg
xor
aaa
sbb
lcall
inc
mov
lds
pop
pop
inc
scas
inc
mov
xchg
aam
out
cwtl
xchg
and
lcall
sub
push
movsl
ljmp
mov
xor
mov
dec
mov
mov
aam
adc
dec
fucom
add
addr16
mov
pop
xchg
dec
fsubl
xchg
cs
dec
filds
sti
xlat
sub
pop
mov
add
xor
mov
shrl
xor
outsb
fstpl
jl
and
inc
scas
addr16
bound
cwtl
jg
std
sbb
ss
out
andb
sti
or
and
push
add
je
sub
push
aad
scas
pusha
cmc
std
fwait
pop
or
cmpsl
push
repz
outsl
pop
out
mov
lcall
jbe
in
pop
rolb
xchg
aam
jmp
pop
jg
fimull
pushf
cli
push
push
push
xchg
push
pushl
outsl
test
les
mov
rcr
fcomip
inc
mov
or
jle
sbb
xor
sar
mov
fcompl
push
aad
jg
sbb
push
push
cmp
mov
or
xchg
loopne
scas
cltd
aam
add
addb
incl
mull
dec
js
out
in
xor
call
push
movsb
jp
es
push
outsl
dec
dec
adc
push
notl
push
inc
jmp
leave
inc
fbstp
pop
cmp
mov
jl
stos
add
insb
cld
sbb
je
shrl
sahf
arpl
xor
inc
clc
mov
adc
inc
outsb
inc
sub
scas
popf
pop
mov
in
mov
out
shrl
dec
xor
xchg
ret
xchg
clc
call
bound
xchg
cmpsl
xor
cli
push
push
add
lahf
cmp
push
mov
scas
add
xorl
test
push
into
pop
pushf
mov
push
ss
in
sub
mov
cld
mov
les
out
and
add
sub
test
aaa
out
cmp
movsl
ret
push
mov
add
push
mov
sub
shrb
and
push
pop
add
jl
dec
sbb
addps
sti
mov
je
push
std
std
dec
enter
loop
int3
and
inc
mov
imul
clc
aad
pop
pop
sbb
xchg
lds
mov
push
cmp
push
loop
add
mov
stc
or
sbb
divl
and
inc
in
pop
and
inc
sbb
jp
mov
push
aam
xchg
push
fwait
jecxz
fwait
push
jbe
in
xchg
lea
add
mov
sbb
sbb
or
lea
jmp
add
into
sub
and
inc
dec
jns
add
aaa
jbe
ret
or
jl
ja
xor
clc
push
adc
add
je
push
sbb
mov
aad
mov
mov
test
lcall
imul
mov
push
push
mov
andb
xchg
add
push
aam
mov
push
push
test
clc
loopne
or
stos
cmp
aaa
imulb
inc
fsubrs
adc
mov
clc
dec
xor
sbb
orb
add
fisttps
paddb
mov
popa
cmp
add
jle
in
cmpl
push
pop
inc
and
fisubrl
fdivs
out
push
xor
je
xlat
inc
stos
cli
inc
sub
aas
xchg
in
push
cmp
cs
push
pushf
fiaddl
inc
add
clc
jg
mov
and
loopne
fs
add
and
add
xor
cs
out
rcll
notb
add
mov
pusha
and
cmp
push
fisubl
adc
inc
mov
rdmsr
and
icebp
and
fnstenv
inc
jmp
out
out
mov
cmc
iret
jnp
mov
daa
add
fistps
enter
je
xchg
out
dec
js
sarl
je
cmpsb
adc
stos
push
test
sti
dec
hlt
add
pop
mov
andb
test
adc
xor
loopne
outsb
clc
notl
add
xor
add
xor
pop
add
xchg
dec
or
inc
sub
jno
adc
pop
jo
mov
mov
jle
cmpl
lock
mov
xchg
lahf
inc
int3
adc
push
divb
mov
stc
or
lret
push
shrb
sbb
jne
or
mov
cs
jle
lods
or
fildll
and
repz
pop
add
icebp
add
add
les
mov
cmc
cltd
insb
test
inc
cmpb
dec
mov
pushl
cs
ret
adc
jge
xchg
subl
sbb
hlt
fbld
or
and
add
rcl
dec
inc
mov
push
mov
cmc
xchg
les
push
and
add
jl
stos
in
sbb
andl
stos
dec
jno
pop
js
cltd
sub
ss
add
inc
xchg
je
ss
add
or
or
shrl
mov
sarb
popf
cmp
xchg
mov
jnp
cli
xchg
and
add
push
xor
cwtl
xor
movsl
cmp
jne
xor
or
aaa
dec
mov
pop
std
popf
rolb
orl
in
mov
ret
lds
add
sub
int
pop
sub
push
rcrb
cmp
mov
repnz
bound
neg
lock
imul
push
add
xchg
or
out
bnd
jle
iret
scas
inc
jmp
in
lock
cmp
sbb
mov
loopne
jnp
add
xchg
call
sbb
ja
std
dec
or
mov
out
cmc
inc
and
pop
push
jne
and
xorb
inc
decb
lea
mov
loopne
mov
push
arpl
pop
lea
adc
adc
mov
inc
xchg
jno
outsb
je
mov
or
test
cld
mov
add
adc
mov
shlb
mov
inc
jb
mov
int3
clc
pop
pushf
add
mov
inc
incl
push
fmuls
nop
push
mov
or
push
add
ljmp
shll
add
aad
mov
repnz
and
dec
dec
mov
outsb
adc
add
roll
mov
adcb
add
jle
stos
dec
sbb
cmp
adc
jp
pop
dec
push
repnz
mov
call
add
aas
movsb
in
add
pop
clc
pusha
inc
push
or
lock
mov
inc
decl
add
xchg
xchg
fidivrl
mov
mov
push
lods
rorb
push
xchg
pushf
mov
push
popa
sbb
pusha
pop
or
mov
jecxz
loop
mov
add
rcrb
inc
pop
mov
pop
push
aam
pushf
shrb
xor
fnsave
xor
in
add
mov
movsl
mov
jo
sub
pop
cmp
push
sbb
sbb
jnp
int3
xlat
xchg
call
aam
jo
mov
push
dec
dec
imul
sbb
js
and
stos
inc
cwtl
mov
jnp
sbb
mov
adcl
adc
fs
andl
push
and
mov
js
xchg
and
test
add
jmp
jecxz
js
ds
inc
orl
jne
jne
dec
out
xchg
adc
loop
jp
xchg
cmp
xor
xchg
outsl
xor
pop
mov
bound
sub
pusha
xor
mov
sub
call
push
pushf
add
mov
ret
add
mov
incl
insl
loopne
pop
cmpsb
fwait
add
mov
test
clc
push
cld
les
adc
xchg
jns
cmp
fdivrs
dec
in
aaa
adc
or
add
mov
js
loop
daa
or
push
lods
dec
xchg
addl
push
les
pop
shrb
inc
jbe
scas
adc
pop
test
fwait
pop
mov
fnstcw
jmp
add
inc
iret
div
xchg
push
lea
xchg
inc
xchg
lret
faddl
and
enter
movb
out
cld
xchg
aad
mov
movsb
sub
pop
jb
push
mov
xchg
testl
cmpsb
nop
sbb
sub
xabort
add
sbb
addb
push
std
cmp
stos
cmpsb
test
jecxz
and
sbb
fcoml
les
ret
pop
xor
out
cmpsl
cld
inc
out
ficompl
xor
jbe
stos
pusha
cli
repnz
cmpsl
pop
sahf
sub
mov
call
push
enter
outsl
mov
pop
adc
sub
sub
dec
pop
lcall
or
inc
test
clc
push
add
loop
jbe
sbb
pop
int3
call
ffreep
addb
roll
push
decl
sub
xchg
jb
daa
fisubs
pop
ljmp
push
frstor
dec
outsb
xchg
ss
pusha
roll
loopne
mov
shlb
sti
xorl
std
ljmp
and
jb
add
gs
mov
or
pop
sub
pop
xor
xor
mov
into
xchg
mov
mov
pop
dec
stos
clc
jmp
jo
push
pop
sbb
push
ja
pushf
cmp
rcrb
dec
scas
mov
jl
xchg
xchg
xor
adc
int3
lret
adc
xorb
mov
pop
mov
ss
test
mov
fisubrl
out
push
jp
out
loope
dec
sbb
nop
push
out
cmc
add
mov
add
je
mov
and
mov
mov
xor
xchg
add
jmp
hlt
push
cmp
sarl
xor
in
xor
sbb
push
les
and
pusha
fadd
mov
dec
cmpb
fcmovbe
mov
xchg
and
sbb
mov
mov
ss
pop
stos
les
adc
lea
add
es
and
outsl
aaa
jge
add
hlt
fmull
add
loope
int
std
hlt
incl
push
lods
dec
insb
push
fadd
mov
rorl
lods
adc
movhps
cwtl
unpcklps
jecxz
js,pt
je
js
fldenv
cs
xchg
sub
arpl
das
inc
loop
and
xchg
pushf
outsl
fbld
inc
add
notl
inc
cmp
subl
clc
push
inc
cmp
int
push
add
add
pop
fdivl
outsb
cld
pop
xchg
cli
dec
dec
sbb
ds
dec
push
repz
cmpps
aaa
and
mov
jg
mov
lahf
adc
push
or
adcb
jg
test
mov
cmp
and
mov
sbb
push
sti
data16
pop
jle
popf
cmp
insb
rorb
jb
pop
enter
xchg
jecxz
sarb
rcrb
jge
das
les
or
or
aas
movsb
add
push
fmulp
jno
enter
call
pop
subb
nop
sub
mov
jecxz
adc
jle
ret
fst
psraw
cmp
jbe
lahf
insl
mov
pop
add
and
stos
fldcw
leave
clc
sub
aas
or
xor
and
test
inc
aas
pop
jle
das
lods
adc
out
push
push
out
lret
and
sahf
rorb
add
inc
dec
adc
ret
cs
push
aad
add
sbb
or
mov
nop
adc
out
push
lret
lea
fs
inc
rclb
sbb
and
push
test
mov
xlat
ss
scas
clc
or
xchg
in
jmp
gs
mov
out
adcb
mov
jp
pop
sbb
scas
mov
add
dec
mov
je
adc
xor
cmc
push
nop
push
sub
bnd
xchg
add
xor
jg
fwait
jno
dec
cld
vmread
out
es
loopne
inc
inc
mov
mov
mov
mov
push
mov
ja
xchg
push
or
mov
dec
fdivrs
add
mov
dec
and
decb
pop
test
pop
mov
mov
sbb
movsb
sub
mov
mov
jno
fisubrs
add
and
out
fildl
je
loop
push
fiaddl
subb
cld
and
andl
insb
push
ds
pop
cli
pop
dec
shr
jmp
fsubr
and
cld
pushl
xor
push
and
add
cltd
cs
shl
push
pop
mov
arpl
lea
aaa
cmp
lcall
cmp
adcl
dec
sti
fstpl
pop
int3
les
cmpsl
and
std
fucomip
and
jmp
dec
rclb
or
add
hlt
test
mov
lock
cltd
cmp
scas
ret
clc
add
cmp
or
add
push
pusha
jecxz
jbe
out
xchg
cmpsb
aaa
jge
pop
jns
adc
mov
rcl
push
add
lcall
lock
fstpt
sub
int3
fdivr
add
xor
mov
roll
ret
enter
and
adc
in
xchg
out
loop
fdivl
xchg
std
mov
dec
and
and
sbb
inc
leave
mov
ret
and
pop
mov
sub
outsb
jl
je
scas
cmc
pop
std
std
add
int3
insb
or
out
mov
call
or
test
ljmp
dec
insl
fimuls
sub
jno
aaa
imul
call
and
xchg
adc
sbb
ret
mov
sub
loop
xor
inc
test
icebp
inc
std
aas
jbe
dec
jp
lret
testl
ljmp
mulb
test
mov
sub
pop
mov
in
add
inc
sub
xlat
jns
add
decl
pop
lcall
push
cmp
pop
sub
scas
fisubs
lock
arpl
mov
mov
add
push
dec
jecxz
mov
jp
clc
inc
push
xchg
fidivl
mov
push
mov
push
js
test
sub
jo
mov
jge
jne
nop
je
pop
adc
adc
and
decl
ret
and
mov
test
fsubrs
xchg
pushf
jb
push
leave
mov
or
lods
scas
movsl
call
xlat
ret
ret
sti
iret
sub
ljmp
dec
aaa
scas
xchg
xor
add
push
push
xchg
sbb
xor
ds
jnp
and
inc
orl
or
sbb
pop
dec
in
push
xchg
pop
aad
xor
test
jle
jmp
or
sti
xor
scas
dec
fidivrl
out
mov
jbe
pop
cli
push
pushf
emms
popa
in
movsb
mov
aad
rolb
lret
int3
adc
push
push
idivl
out
inc
imul
lds
mov
xchg
xor
int3
mov
out
sub
push
les
jno
shrb
sbb
je
add
push
dec
cmpsl
jbe
lret
in
xchg
pop
sbb
out
jbe
sbb
xchg
or
pop
sub
jge
cli
inc
lcall
fs
bound
gs
loop
cmp
pop
adc
jmp
inc
push
mov
cmpsb
rclb
out
decl
inc
pop
dec
ret
fcmovnb
cli
mov
icebp
jecxz
cmc
mov
call
sbb
lods
das
loopne
pusha
or
icebp
adc
into
shr
jl
mov
mov
out
fisubrl
popl
nop
lea
cmp
sti
aas
or
loopne
int
dec
les
or
cld
into
inc
arpl
sub
mov
aaa
insb
scas
and
mov
mov
movl
sbb
mov
mov
call
loop
mov
cmp
rcll
mov
fwait
inc
popa
cld
jmp
adc
xchg
inc
js
decl
inc
lods
jge
and
sbb
std
addr16
add
cltd
add
test
cmp
mov
cmpsl
ret
bswap
sub
xor
xor
cli
rcr
ret
cmpsb
lcall
add
inc
icebp
lea
ja
test
adcl
icebp
pop
mov
sbb
mov
addb
cmp
cld
or
aas
es
jb
std
jmp
int
loope
ret
mov
jns
cmp
jp
out
push
in
sahf
mov
decl
add
or
test
adc
dec
push
sub
push
mov
pusha
das
shlb
ret
vsubpd
bound
mov
sub
or
test
aad
sbb
mov
mov
cwtl
lcall
mov
jmp
test
insl
and
push
jp
xor
and
sbb
push
push
adc
lret
cmp
faddl
cld
call
cltd
fists
pusha
lcall
imul
sub
or
jecxz
mov
inc
jl
fwait
or
jl
in
adc
jo
adc
push
xchg
push
sbb
jmp
gs
lret
xchg
fidivl
inc
pop
out
stc
pop
push
mov
call
cmp
scas
jecxz
jecxz
loopne
sti
ja
push
push
lock
adc
mov
dec
shll
insl
dec
or
add
out
mov
loopne
adc
clc
ret
lods
or
out
clc
sub
push
mov
xchg
test
lahf
pop
fs
fmuls
stos
std
sub
test
lret
lods
pusha
or
sbb
inc
pop
push
cmp
sub
and
jg
lods
test
mov
push
adc
js
pop
fs
or
add
push
call
and
cmp
ret
popa
stos
add
stos
popa
pop
and
pop
sub
stos
pop
lahf
loope
loope
out
adc
jno
xor
test
test
inc
loop
test
dec
std
push
fdivrl
ret
sub
mov
dec
lea
and
and
adc
test
jo
pop
scas
into
or
push
ja
fcmovbe
add
call
or
mov
je
es
dec
aad
add
mov
psubd
add
jg
sub
jg
or
pop
hlt
adc
jmp
push
sarb
subb
push
adc
sbb
add
cmp
adc
int3
pop
xor
mov
je
adc
pop
out
add
adc
dec
sahf
jb
out
mov
enter
fcompl
loopne
adc
aam
fisubl
pusha
into
hlt
xchg
push
insb
lock
frstpm(287
pusha
pop
mov
lcall
test
sahf
test
and
push
movsl
xchg
xchg
in
mov
push
cld
lock
jp
mov
je
add
cwtl
sbb
jae
aas
in
pushf
dec
fadds
mov
lcall
sub
or
sub
add
es
rcrb
fildll
cmp
xchg
add
add
mov
pop
inc
loop
dec
mov
mov
jecxz
mov
jge
inc
test
jns
adc
inc
jo
sub
cmpsl
scas
adc
and
imulb
inc
inc
mov
pop
xchg
enter
idivl
or
addw
cltd
enter
popf
lahf
out
dec
cs
movzwl
xor
inc
pop
jno
int
les
outsb
bnd
sti
xor
scas
ficompl
inc
inc
inc
or
clc
test
mov
imul
cld
jmp
adc
push
adc
sub
adc
fs
call
sbb
cmp
or
xchg
jge
int3
call
aam
out
out
popf
es
mov
push
cmp
mov
pusha
scas
mov
pop
aas
push
push
xor
imul
mov
add
sbb
aam
sbb
loop
xor
add
inc
pop
cwtl
lock
icebp
cmp
cmp
outsb
std
pop
jne
inc
mov
cmpsb
add
aaa
mov
pusha
mov
push
add
sub
jno
pop
icebp
or
les
fwait
lret
push
daa
jp
rcl
jbe
and
movsl
int
lret
inc
out
fbld
sbb
pusha
lds
shlb
push
add
mov
pop
push
mov
cmp
fidivl
cmpsl
sub
mov
fidivl
inc
in
adc
add
std
notb
jg
mov
leave
mov
inc
adc
ret
outsl
mov
pop
mov
ds
xor
mov
cwtl
lahf
mov
add
ret
mov
roll
mov
pop
pop
loop
mov
out
idivl
xor
fmul
scas
push
cld
pop
jae
ds
test
pop
rorb
icebp
push
data16
cmp
sbb
decb
jo
dec
cmp
pop
sub
incb
outsb
jmp
add
sub
mov
outsb
inc
gs
clc
dec
push
jge
cmp
ret
xchg
shl
icebp
push
dec
lret
and
ficoml
js
outsb
add
in
inc
arpl
xor
sub
push
mov
nop
nop
mov
and
out
adc
mov
out
repz
dec
xchg
fs
add
sub
test
fdiv
dec
imul
fiadds
fdivr
iret
sbb
and
pop
adc
or
sbb
cmpsl
fsubrp
scas
test
jns
cs
xchg
test
or
add
ret
in
adc
mov
inc
and
out
shlb
or
clc
xor
orb
mov
stos
or
aam
xchg
adc
aaa
add
mov
lods
mov
jno
jmp
push
and
mov
pop
shrl
inc
cmp
test
outsl
test
mov
xor
push
mov
rclb
sub
add
cmp
aam
sub
pusha
jg
stos
rcl
pop
pop
pop
aaa
dec
dec
push
inc
ja
add
loopne
push
mov
or
into
dec
cvtpi2ps
adc
int3
test
add
mov
inc
negl
adc
cs
sbb
leave
out
xchg
loope
test
push
lods
lahf
push
dec
inc
andb
jns
inc
or
leave
les
mov
push
and
add
xor
push
enter
movsb
fsubrp
movl
mov
sub
inc
jg
clc
lds
sbb
mov
push
fsubl
cmc
dec
les
jbe
push
xchg
ds
ret
push
daa
xchg
xchg
mov
sbb
xchg
xchg
mov
xchg
push
add
adc
push
xchg
push
adc
call
cmp
mov
cmp
inc
in
dec
loop
sub
std
in
inc
cli
notb
sbb
mov
add
adc
inc
test
popa
test
hlt
rorb
pop
rcr
sub
adc
sbb
mov
fstl
ficomps
stos
arpl
add
test
call
jecxz
lcall
add
mov
jmp
lock
je
shlb
lock
lea
xchg
add
psubq
jne
mov
lods
jp
pop
pop
sbbl
nop
cs
ja
mov
enter
adc
sbb
insb
clc
add
imul
stc
ljmp
push
nop
adc
add
pop
mov
sbb
adc
add
imul
dec
scas
xchg
sahf
or
lret
lock
aaa
ljmp
sbb
inc
pushf
loop
fimuls
addb
loopne
int3
int3
lahf
and
pop
rcl
push
popa
pop
nop
xchg
lods
mov
cmp
jb
fstpl
cltd
aam
mov
xor
dec
cmp
jmp
aam
addb
cld
push
lods
lahf
dec
dec
fldt
clc
fidivs
test
jecxz
hlt
stc
fsubr
icebp
jno
roll
mov
in
mov
and
jne
test
cmpsb
nop
lcall
jg
jbe
push
mov
jnp
jae
icebp
jg
add
or
popl
stc
fisubl
add
pop
adc
sar
cmp
push
std
ljmp
movsb
lods
test
xchg
mov
mov
in
add
adc
movq
mov
inc
dec
cmc
mov
mov
hlt
outsl
incl
push
roll
xor
add
pop
hlt
fildll
xchg
orl
or
inc
fmuls
inc
add
and
push
rorl
push
push
fmull
in
mov
xchg
ror
notl
cmpsl
adc
cmp
rcrl
dec
popf
rcrl
inc
dec
jo
in
lods
sbb
inc
sarb
ljmp
lods
stos
mul
jno
or
loopne
mov
adc
cli
out
pushf
or
outsb
nop
icebp
sahf
mov
or
xchg
lods
pushf
cli
xchg
add
adc
std
cmp
mov
mov
jmp
mov
stos
cmpl
pop
lock
lds
jo
mov
sub
bound
xchg
pop
push
jbe
jmp
or
or
or
push
std
cmp
js
ja
lcall
push
ret
pop
mov
mov
bound
call
nop
sar
insb
mov
jmp
and
xchg
adc
mov
rolb
cmp
and
cmp
dec
ret
xor
decb
push
aad
popa
jge
les
jge
shll
mov
xor
repz
rol
pushl
sbbb
sti
xor
cmp
xor
mov
aaa
mov
adc
lock
sahf
adc
popa
rcl
inc
push
ficoml
mov
add
xor
inc
dec
adc
pop
mov
inc
push
mov
scas
stc
dec
call
scas
jl
mov
pop
sbb
adc
fsub
pop
aas
aas
mov
in
adc
aas
cmp
fs
arpl
mov
push
add
mov
scas
ljmp
inc
je
clc
push
jns
or
outsb
stc
mov
mov
adc
call
push
inc
je
clc
mov
push
lret
mov
add
dec
lds
dec
sub
sti
push
aaa
je
data16
jnp
pop
lret
jo
add
xchg
dec
out
push
fcoms
dec
xchg
lahf
dec
add
mov
into
out
in
push
pop
sbb
aam
sahf
dec
push
imul
shlb
pop
dec
sbb
jnp
jle
cltd
stc
mov
bound
cmp
jns
cs
pop
sub
repnz
xor
sbb
rcrl
push
lock
sub
and
sahf
test
xchg
mull
out
sbb
push
mov
push
jbe
mov
sti
cltd
adc
push
in
or
inc
adc
pop
jb
cmp
fdivs
jp
das
pop
test
cs
outsl
mov
adc
mov
out
mov
lcall
test
push
dec
mov
sti
cmp
inc
pusha
and
mov
das
mov
xor
jae
dec
mov
and
ret
xor
jp
orb
ja
clc
jg
in
lods
mov
push
xorl
xchg
and
push
sbb
outsb
test
jecxz
outsl
inc
xorl
pop
leave
cld
out
pop
ret
jns
cs
aam
jg
xor
leave
jnp
mov
loope
cmc
mov
enter
insb
add
mov
mov
mov
mov
mov
mov
loope
or
lret
in
outsl
adc
mov
sub
add
pusha
cmp
andb
mov
add
aam
pop
loop
ja
push
pop
nop
sub
cmp
les
mov
dec
daa
movb
pushf
repz
dec
loop
sti
sahf
add
movsb
mov
ja
add
cli
xor
pop
daa
es
push
inc
stc
or
add
out
je
inc
sub
loope
decb
jle
dec
or
or
rclb
and
ret
shll
mov
xor
rcll
inc
pminsw
jmp
mov
add
add
push
mov
imul
insb
test
mov
gs
fwait
add
jb
idivl
test
pushf
push
pop
mov
mov
ljmp
or
dec
je
push
push
xchg
sub
jmp
fwait
add
lcall
pop
lock
inc
ret
and
xor
cmp
mov
add
cmp
int3
out
aas
mov
pushl
jl
notb
adc
js
idiv
cmp
test
jne
and
aad
mov
lea
push
cld
sbb
mov
xor
adc
enter
aaa
dec
jns
push
push
scas
or
clc
pop
or
push
stc
shr
aad
lock
mov
xchg
lret
es
bound
sub
or
jl
cmpsb
outsl
xor
std
sbb
ja
clc
aad
dec
mov
cs
lea
pop
pop
dec
add
pop
adc
jle
adc
sti
inc
fsubrl
sarl
ss
fistps
loopne
adc
test
int
out
fcomip
pop
inc
stos
je
or
add
adc
sub
add
ret
inc
das
fwait
aam
aam
test
pop
mov
testl
inc
andl
cwtl
adc
stos
cwtl
ffree
sahf
out
add
or
stos
sahf
mov
aad
lods
mov
jnp
cvttps2pi
dec
lods
les
das
sub
xchg
iret
out
cwtl
insb
inc
cmp
push
mov
mov
sub
cs
dec
cmp
sbb
jnp
add
xchg
fadds
js
movsb
dec
mov
add
pop
jg
push
cld
es
out
stos
xchg
push
call
or
decl
popf
loop
dec
popa
bound
pop
in
jns
add
mov
hlt
bound
or
and
movsb
push
dec
and
mov
pop
xor
shlb
loopne
fwait
test
add
enter
jmp
fisttpll
adc
inc
adc
scas
clc
stos
mov
mov
mov
mov
loopne
or
roll
rorl
fs
dec
sbbb
push
cmp
hlt
dec
call
negl
scas
add
loope
add
inc
inc
xchg
fidivs
cld
mov
push
mov
adc
add
out
push
adc
repz
ss
pop
mov
cld
pop
xchg
add
aaa
addb
and
std
nop
mov
mov
push
fs
mov
js
push
and
test
push
push
pushf
mov
sbb
xchg
and
adc
inc
add
add
sub
push
mov
mov
aas
nopl
push
leave
lcall
mov
xor
mov
cmpsb
sbb
cli
negb
ret
fld
loop
inc
mov
jmp
mov
sub
inc
xor
add
test
push
ja
add
test
cs
test
pushaw
push
xchg
xchg
es
stos
mov
add
lahf
jl
xor
fiadds
clc
mov
outsl
fsubs
add
cmp
mov
cbtw
jnp
xchg
xor
incl
aad
sub
cmp
and
xchg
cmp
in
fs
in
sahf
stos
call
inc
jl
adc
or
bound
jb
out
push
clc
xchg
fcoms
add
jmp
inc
scas
adc
mov
in
pusha
out
test
mov
add
int3
xchg
dec
nop
mov
fbld
mul
addr16
add
fs
push
loop
fdivr
in
dec
mov
aas
jnp
addb
and
and
add
jle
add
mov
xor
dec
dec
lcall
sbb
mov
mov
or
mov
je
and
outsl
inc
rorl
xor
shrb
clc
add
cmp
adcl
or
add
pop
test
pusha
ret
in
or
xor
or
jp
jo
xor
stos
sbb
data16
in
xor
jmp
mov
and
and
rcl
daa
test
sub
dec
adc
sbb
jmp
jp
push
test
cwtl
xor
pop
data16
xor
icebp
inc
cwtl
bound
xchg
mov
int
inc
out
and
in
dec
stc
or
mov
add
add
ja
ljmp
stos
cmp
js
jmp
mov
inc
in
inc
mov
incb
adc
cli
inc
hlt
sbb
and
loop
insl
sub
dec
aas
cmpsb
cltd
rcll
je
mov
adc
xorb
xchg
dec
mov
mov
xchg
pop
cmp
xchg
add
inc
pop
jae
cli
dec
imul
lds
xor
mov
loopne
loop
dec
or
aam
iret
add
or
enter
in
je
lret
loop
rcr
cmc
xchg
imul
push
mov
jle
nop
mov
xlat
dec
jmp
lret
jl
aaa
jge
add
push
hlt
xlat
repnz
rorb
adc
fistpl
and
inc
insl
xchg
mov
cld
add
ret
addr16
sti
cmp
xchg
shlb
mov
mov
std
cwtl
jp
pop
mov
xchg
sbb
cmc
incl
shl
inc
and
mov
iret
adc
fcompl
jle
adc
sub
xchg
andb
dec
stos
jne
xchg
push
pop
push
popa
call
sub
mov
inc
das
cli
cmpl
dec
std
or
jecxz
arpl
ljmp
mov
xchg
lret
icebp
xchg
fcomi
xchg
fidivrl
stc
lock
adc
sub
pop
inc
mov
call
dec
jge
inc
nop
lret
fmuls
mov
mov
sti
inc
push
and
insb
cmp
xchg
ret
jo
popa
mov
mov
inc
inc
xchg
add
sahf
adc
mov
adc
adc
mov
jg
mov
or
push
sbbb
pop
loopne
test
cmp
jge
mov
out
enter
mov
jle
in
call
push
pop
and
push
sub
mov
jo
add
in
dec
mov
js
cmp
mov
add
lea
jge
ret
pop
pop
cmp
jp
fistps
or
add
jp
jb
cmp
test
adc
pushf
loop
mov
hlt
addr16
lods
cwtl
sub
cmp
adc
xor
mov
or
fistl
add
adc
or
add
push
mull
ss
cmc
push
call
adc
sub
ss
outsl
js
adc
lret
sub
push
mov
dec
data16
test
shrl
fdivr
lock
jns
sub
add
pop
fnstenv
pop
pop
test
mov
jp
ret
movsl
popl
popf
loope
addb
idiv
add
sub
ret
or
xor
rolb
or
pushl
dec
mov
and
stos
ss
pop
es
fisubl
shlb
mov
mov
repnz
ss
cld
xor
shll
insb
fists
loope
mov
mov
sbb
push
loop
js
js
insl
cmpb
pop
out
fdivs
into
pop
cmc
add
and
pop
xchg
or
mov
adc
sub
mov
adc
stc
in
scas
lea
mov
push
mov
add
ljmp
inc
mov
out
push
inc
and
fistps
dec
xlat
pop
xchg
fdivrl
rcl
adc
into
jmp
shl
aad
aam
cld
sbb
cmp
jo
stos
add
sbb
push
dec
int
ja
push
dec
jmp
loope
wbinvd
cmp
mov
rcrb
xor
mov
out
jge
mov
xchg
pop
cmc
aas
xor
add
hlt
mov
mov
and
das
or
inc
ss
roll
pushf
in
in
andl
jo
xorb
inc
and
fstpl
cwtl
add
cmpsb
push
jb
pop
adc
fcmove
sub
adc
xchg
rorl
sbbb
call
inc
add
and
aaa
push
or
xchg
orb
xor
std
push
in
push
fistl
cmp
decb
or
pop
sub
clc
jg
add
fists
stos
fwait
in
popf
push
inc
push
jp
hlt
sub
lock
push
popf
jecxz
sbb
or
lods
das
add
mov
pop
repnz
sbb
clc
push
add
sub
bswap
pop
xor
mov
xor
push
lock
inc
outsb
push
js
ja
jge
pop
movl
or
js
push
clc
add
fiaddl
inc
lds
add
or
ja
jecxz
mov
pop
repnz
and
cwtl
push
and
add
call
rclb
adc
or
lea
pop
call
add
cmp
push
fiaddl
rcr
push
or
jne
add
jbe
push
mov
fstpl
xor
orb
cli
fwait
mov
or
jp
push
aaa
insb
and
pop
sbb
cmp
icebp
lods
add
push
pop
cmp
decl
xor
sbb
ret
loopne
test
inc
cltd
jbe
je
fdivl
cmpsl
sarl
adc
mov
jno
inc
je
out
arpl
lcall
loop
mov
inc
rorl
fstl
push
or
mov
cli
test
out
ss
enter
aam
subl
fmuls
xor
inc
or
mov
dec
cli
add
lock
cmp
ds
ljmp
cmp
or
leave
call
jmp
mov
in
push
dec
add
scas
lods
add
sbb
insb
outsb
movsb
aam
sbb
fistps
pop
sbb
cmp
adc
pop
movsl
jg
pop
push
mov
sbb
push
push
shl
push
filds
enter
fdivs
mov
pop
mov
push
sub
jns
push
push
push
jecxz
push
outsb
imul
jbe
clc
ja
jno
dec
movsl
xor
ds
lcall
add
aad
fbld
sub
cmp
inc
clc
add
add
sarb
jp
pop
cs
call
mov
sarl
pop
cmp
shr
xor
out
fs
mov
ss
push
dec
dec
xchg
xchg
out
push
out
jae
adc
enter
jp
inc
xchg
mov
sbb
inc
sub
or
in
fiaddl
outsb
ficoms
test
mov
les
pop
mov
test
cli
ret
and
clc
push
jp
inc
jnp
cmc
or
mov
push
adc
mov
adc
pusha
sarb
js
jle
incl
add
and
mov
aaa
insl
push
cmp
popf
push
inc
sub
in
pop
fcoms
xor
mov
notb
lret
lret
in
mov
incl
dec
mov
std
or
ret
push
xor
movsb
jge
and
mov
sub
add
ja
jb
mov
mov
lret
loope
or
jmp
sti
mov
enter
shl
dec
inc
mov
xlat
scas
push
pushf
or
outsb
xor
inc
inc
mov
add
push
sub
test
mov
adc
cmpsl
mov
push
pusha
jecxz
push
and
je
call
lock
clc
sbb
les
js
rolb
incb
repz
into
int
xchg
mov
mov
outsb
out
sar
add
inc
xor
int3
jno
ds
add
cmp
mov
cmc
js
sbb
nopl
arpl
es
int3
push
and
sub
and
inc
ds
movsb
jp
sub
mov
rcrb
lds
ss
das
sbb
shrl
xlat
push
push
stos
movsb
pop
nop
dec
dec
mov
inc
or
cltd
enter
mov
fdivrs
mulb
orb
and
fcmovnbe
mov
ljmp
mov
out
mov
mov
mov
sbb
fbstp
push
cmpsl
cmpsb
or
in
or
xchg
add
add
mov
mov
xor
push
loope
fwait
and
dec
ss
decb
sbb
pop
ret
jecxz
xor
dec
out
push
and
pushf
jbe
sub
mov
inc
mov
and
cmp
inc
cmpsb
ss
subl
mov
inc
cmp
loop
cli
je
test
add
adc
or
aaa
fisubl
dec
jp
pop
outsl
push
pushf
pusha
aad
sbb
inc
xor
or
es
push
rclb
jecxz
ret
cmp
and
lret
add
adc
dec
and
test
adc
data16
cwtl
push
gs
jmp
out
aaa
pop
mov
das
sarb
or
add
lret
movsb
dec
mov
push
mov
aad
pop
fisubl
xor
test
jle
je
js
rorl
dec
xor
mov
fcomps
xor
call
add
cld
sub
das
mov
xor
out
or
sbb
aam
inc
dec
out
cmpsb
fs
and
inc
sbb
and
cmp
fwait
inc
fwait
push
popf
test
les
out
int3
xor
inc
cmpl
or
fisttps
out
cli
push
incl
decl
js
pop
cli
jmp
dec
aaa
andb
ljmp
in
pushf
dec
push
ss
pop
push
subb
in
sub
inc
fmulp
sub
dec
fbstp
mov
rolb
pushl
jp
add
sub
pop
ffreep
xorb
adc
outsl
add
jo
aad
xchg
lea
pop
sar
inc
cld
jbe
dec
and
scas
push
lcall
test
dec
and
test
fiadds
fwait
inc
jl
icebp
inc
shll
mov
rcr
or
xchg
or
rol
mov
ljmp
xchg
inc
cmp
js
sub
shrb
push
movsb
orl
pop
jbe
rorb
sbb
xchg
push
sbb
push
hlt
push
pop
imul
mov
ljmp
jns
dec
sbb
sub
add
and
mov
mov
mov
xor
test
push
pop
and
fisubl
ljmp
in
pop
sub
sti
jae
jo
dec
movsb
clc
ret
jg
mov
pop
test
ret
les
xor
repz
shrb
push
xchg
mov
pop
test
rorl
sub
mov
sbbl
pop
add
insb
add
cld
push
push
pop
cmp
mov
out
xchg
adc
adc
jmp
xor
xchg
or
subl
and
jno
xchg
push
push
lret
out
xchg
inc
lret
movsl
negl
jge
out
cmpsb
or
and
cld
mov
push
xor
push
mov
mov
loop
sbb
arpl
mov
daa
ljmp
jl
inc
fildl
jns
out
clc
mov
call
cwtl
loop
add
fdivr
xor
push
adc
out
cmpsb
aaa
mov
add
insb
and
xor
add
je
insb
fldt
sbb
jns
or
add
dec
add
mov
cmc
shrb
cmpb
mov
push
add
push
das
mov
cltd
xchg
insb
xor
and
push
movsb
addb
mov
mov
cld
nop
out
test
mov
cld
push
into
ror
cmpsb
out
sbb
test
push
rolb
aas
fcoms
andl
cwtl
iret
in
or
fistps
jb
xchg
pop
adc
mov
stc
mov
sub
mov
call
testl
add
push
dec
cmc
push
cmc
aam
sbb
or
aaa
icebp
mov
cmp
movq
add
hlt
cmp
out
nop
mov
adc
fisubrl
dec
sbb
xchg
fsts
lds
xor
jp
pop
sub
jl
push
inc
mov
sbb
std
dec
in
daa
fistpll
sar
cmp
lret
or
jnp
pop
sub
clc
sub
pop
pop
mov
out
push
add
mov
in
mov
dec
loopne
insb
jecxz
push
or
test
fimull
cwtl
xchg
inc
into
pop
push
sbb
jbe
fiaddl
je
fnsave
dec
ljmp
subb
or
fsubs
out
push
add
lret
fisubrl
inc
ss
fdivr
scas
das
xchg
pop
xchg
js
subl
testb
push
jle
cmp
out
jae
cmpsb
test
ljmp
mov
clc
out
sub
test
lcall
ljmp
pushl
inc
loopne
xor
outsl
inc
mov
aam
pop
mov
mov
dec
sbb
mov
pop
sub
addr16
dec
call
sarl
clc
mov
int
push
adc
sub
adc
fcoml
test
or
movsl
in
mov
mov
loope
in
pop
lock
sbb
shl
jo
js
lock
sbb
lds
push
repnz
jle
push
sarl
push
je
push
ret
sub
rolb
mov
xchg
sub
mov
arpl
cli
xchg
sbb
jns
ret
push
fbstp
pop
cld
cmp
pop
cmp
in
jo
fcmovnbe
pop
popf
loopne
sub
xchg
js
sbb
mov
cmp
cmp
dec
cmp
mov
or
adc
adc
xchg
mov
adc
sbbb
and
push
mov
je
ficomps
push
push
inc
add
adc
jbe
out
clc
scas
icebp
or
adc
push
call
repz
inc
xchg
sbb
outsl
cmc
sub
pop
mov
cli
inc
lock
xor
mov
imul
push
jle
cli
mov
adc
or
mov
testb
clc
in
fs
jp
sub
or
fcmovbe
and
mov
xchg
lods
js
cmp
jbe
jb
ljmp
decb
pop
divl
cmpsl
add
sub
inc
mov
or
ficoms
mov
and
std
jns
repz
and
mov
nop
dec
or
adc
pop
dec
xor
cld
mov
dec
xchg
fcomps
push
js
call
repz
sarb
fisttps
xchg
mov
xchg
daa
clc
cltd
jge
or
mov
jmp
sub
and
enter
adc
lcall
test
xchg
pop
test
sarl
mov
add
addb
cmp
decb
push
in
es
cmp
decl
and
xor
xchg
test
cmp
sbb
pop
test
cmpsb
push
icebp
sub
sbbb
decl
xchg
or
mov
cld
pop
jecxz
das
inc
cmc
inc
mov
xor
sub
pop
mov
lret
outsb
inc
jg
and
jl
mov
adc
inc
jg
xchg
pushl
lock
adcb
mov
jo
and
sub
vshufps
inc
in
adc
fisubrl
xchg
dec
xor
mov
push
aaa
fsubs
or
fwait
les
cmc
outsl
stos
inc
test
jbe
sbb
popa
hlt
jmpw
push
icebp
pop
pop
jge
fidivl
xchg
bound
mov
callw
mov
fdivrs
xor
cld
or
sbbl
fidivl
movsl
int
ss
out
jle
sub
mov
je
cmp
sbbl
add
in
stc
pop
jg
ret
adc
add
xchg
movmskps
mov
push
inc
add
sub
pop
push
in
inc
pop
fmull
xchg
inc
sub
jno
loop
fbld
sub
pop
lds
cmpsl
pusha
imul
dec
add
test
xor
cmp
adc
pop
and
sbb
xor
pop
je
loopne
ss
inc
mov
mov
std
or
jbe
rolb
clc
xchg
adc
aad
test
ss
lret
jmp
push
push
hlt
lock
jo
inc
mov
mov
rcll
xorb
jb
orl
jge
cmc
jp
mov
mov
lock
adc
cmp
negb
add
add
lods
sub
imul
loop
inc
sbbl
add
xlat
popa
mov
mov
outsl
jg
mov
inc
sarl
cmp
xlat
mov
call
mov
push
inc
push
mov
cltd
test
sbb
bound
int3
lahf
and
mov
ret
cli
add
push
icebp
scas
pop
push
mov
ret
test
rorl
add
and
adc
inc
fdivs
fidivs
jg
mov
jg
in
push
scas
xor
xchg
test
ss
int
test
sti
inc
loop
cmp
dec
xlat
xorb
push
jo
ljmp
pop
outsl
iret
xchg
and
mov
mov
out
sub
fisubrl
add
sub
dec
adc
inc
nop
mov
enter
orb
cld
adc
std
sbb
insl
icebp
lahf
insb
std
dec
mov
cwtl
loopne
add
jbe
cmpsl
in
pop
dec
add
push
pop
mov
add
fdivr
incl
lock
es
int3
jno
jmp
mov
push
cmp
aaa
xchg
loope
push
enter
inc
adcl
add
add
mov
lods
push
inc
nop
outsl
inc
outsb
loop
push
add
jo
fstpl
xorb
adc
hlt
stos
dec
mov
std
aaa
cld
sbb
push
sarl
cld
sub
inc
pop
mov
jo
lret
push
ja
pop
or
mov
adc
dec
inc
add
inc
inc
les
jo
test
orb
add
push
aam
pusha
pop
inc
aam
push
xchg
pushf
jne
fwait
mov
mov
sbb
cmp
dec
ss
call
or
lds
jl
loop
incb
cli
add
rcrl
out
lahf
or
xor
mov
mov
imul
add
jp
dec
inc
sub
fsts
pop
push
sub
cmc
or
sub
dec
loopne
sub
inc
xchg
mov
push
adc
xchg
jg
and
shrb
xor
push
adc
add
inc
dec
lea
cmp
and
and
push
mov
sub
shlb
mov
xor
es
push
mov
jle
jge
enter
enter
adc
dec
call
mov
sub
mov
imulb
mov
ss
add
shll
imul
sub
paddusw
subl
push
fwait
cmp
inc
loopne
add
push
xchg
adc
xchg
call
sbb
mov
mov
test
adc
lock
rclb
gs
add
sbb
int3
push
sar
mov
stos
push
inc
push
faddl
int3
and
mov
cmp
divb
mov
in
jo
jno
mov
push
jp,pn
sbb
and
sbb
inc
jnp
std
fcoml
or
ret
cwtl
iret
test
sbb
fists
repz
inc
lcall
hlt
push
lcall
add
leave
lock
mov
scas
xchg
xor
mov
jne
test
dec
adc
mov
cld
jbe
add
inc
push
sbb
mov
hlt
ss
xchg
dec
sbb
dec
aaa
cs
gs
pop
sahf
test
out
cmp
add
sahf
lcall
cld
mov
pop
dec
fwait
sbb
dec
mov
mov
push
shrb
jnp
incl
sub
iret
fnstsw
loope
pop
stos
call
dec
mov
imul
xchg
pop
roll
mov
fwait
sbb
popa
jmp
insl
xchg
sti
and
cmpsb
out
fmull
test
mov
out
xorb
and
orb
lret
mov
in
mov
rclb
add
push
ret
ret
pop
add
push
test
or
int3
push
sub
mov
jne
dec
aas
dec
jmp
insb
mov
pusha
xorl
ljmp
or
test
add
std
and
sbb
jecxz
cmpsb
mov
inc
sub
fcomi
add
into
jg
in
mov
sbb
pop
jnp
sbb
inc
pavgw
call
dec
in
js
lret
sbb
mov
fisubs
pop
add
repnz
out
and
or
pop
pop
mov
jae
cmp
push
push
pop
shll
hlt
fwait
test
pop
popa
xchg
and
push
stos
fcom
mov
push
out
and
inc
xor
xchg
add
pop
cmp
stos
aas
jp
mov
dec
out
clc
add
sbb
nop
test
jmp
or
sbb
nop
push
loop
out
shr
test
lods
gs
jl
pop
out
xchg
adc
shll
add
mov
pusha
sbb
xlat
imul
mov
ret
ret
and
sbb
mov
sub
into
psubusb
nop
xchg
cmovp
add
mull
leave
negb
pop
jecxz
xchg
lea
loope
pop
xor
or
aad
and
loopne
mov
daa
jo
push
or
scas
stos
mov
dec
cltd
in
or
test
in
add
mov
and
cmp
aaa
lcall
jl
push
cmp
sahf
inc
stos
pop
out
les
xchg
or
lock
pushf
xor
mov
ljmp
mov
mov
ret
mov
je
sub
aaa
movb
mov
sub
mov
sub
rcll
lret
outsl
in
jmp
push
pop
jp
adc
fsubrs
pushl
xor
or
loopne
mov
jno
fwait
cs
sar
inc
mov
nop
idivl
test
add
and
fcompl
rcrb
push
data16
int
hlt
les
sub
mov
rorb
mov
pop
and
stos
or
adc
mov
cs
mov
adc
repz
mov
inc
mov
pop
and
jmp
pushf
add
mov
sbb
mov
sub
inc
pop
ficoms
lret
cs
mov
je
aam
movl
inc
daa
cs
cwtl
adc
sub
cmovl
lcall
in
mov
adc
xchg
hlt
fisttpl
aam
xor
sub
xor
jbe
jbe
fisttps
sub
cmp
sub
mov
push
sbbb
js
test
jno
fldl
sbb
insb
mov
test
add
pushl
and
cld
dec
adc
mov
mov
xlat
cmp
xor
daa
adc
dec
in
mov
cmp
mov
jb
mov
inc
add
xor
jg
test
or
xchg
add
sub
mov
add
pop
ja
mov
mov
dec
pop
sar
or
mov
add
clc
scas
mov
mov
xor
out
int3
cmp
add
pusha
rorb
and
xor
inc
cmpsb
jle
fstpl
loope
out
rorb
inc
test
sbb
lods
cld
mov
or
shrb
or
outsl
pop
rorl
lds
mov
mov
xor
inc
pop
dec
int3
stc
add
and
cmc
push
cmc
inc
sbb
sar
jecxz
jbe
xor
add
mov
dec
lods
push
jb
push
add
sub
jl
inc
int3
xchg
and
clc
sbb
dec
fisubrs
sar
fs
mov
adc
stos
insb
das
clc
xlat
adc
out
adc
add
repz
scas
insl
fsubs
fmulp
mov
push
outsl
cli
sti
add
mov
add
and
pop
icebp
lds
fcoms
dec
push
mov
and
pop
jbe
push
mov
imul
pop
pop
lock
mov
andb
mov
std
sbb
pop
xchg
arpl
inc
xor
jg
js
and
xchg
fadd
lock
pushf
cli
inc
stos
sbb
jo
shr
rcrb
jle
stos
add
lods
iret
pop
mov
test
test
inc
xor
js
popa
test
dec
dec
sub
jg
mov
push
and
lods
insb
test
jne
in
mov
jmp
mov
in
xlat
push
push
jns
idiv
mov
xchg
cmpsb
hlt
mov
ljmp
stos
popf
rorw
inc
out
icebp
add
cs
icebp
mov
adc
xlat
lret
rorl
push
pop
fdiv
inc
jg
mov
sahf
add
xchg
xchg
add
xchg
arpl
mov
xchg
add
lock
sub
movl
popf
sbb
cmp
mov
xchg
and
sbb
inc
pusha
sbb
ljmp
and
jecxz
ja
loop
popf
rolb
xchg
in
out
ret
mov
icebp
aas
dec
cmc
cs
popa
int3
sbb
sbb
add
dec
call
xlat
movsl
cwtl
mov
test
or
cld
orb
mov
lcall
shl
leave
xorb
into
add
pop
cmpsl
cmp
test
pusha
bound
xor
mov
hlt
xchg
in
adc
das
sahf
adc
dec
stc
cmc
sbb
subl
sbb
sbb
roll
lock
jle
mov
lock
in
notb
add
inc
sbb
push
sbb
test
out
and
dec
jl
arpl
inc
add
inc
jg
dec
ljmp
jno
push
loope
call
mov
xor
mov
out
cmp
loop
mov
xchg
loope
test
pop
mov
xor
xor
dec
mov
jmp
sub
jnp
sahf
in
cmp
pop
inc
filds
sbb
mov
inc
and
mov
push
mov
mov
ret
sub
cmp
push
push
mov
add
jg
dec
sbbl
push
jnp
lock
xchg
mov
push
jb
xorb
inc
jle
and
sahf
inc
cmp
sbb
jmp
popf
sbb
rorb
cmpsb
loope
dec
cs
jb
loopne
push
test
and
lods
iret
in
push
loopne
push
cld
sub
xor
cmp
std
inc
xchg
cs
mov
inc
inc
dec
test
scas
test
rcll
mov
jbe
add
fimull
pop
and
sub
cmpsl
mov
mov
xchg
js
movsb
fneni(8087
mov
lods
data16
iret
test
test
push
shlb
mov
xchg
or
call
mov
cvttps2pi
loopne
rcrl
jp
mov
stc
rcl
xor
rolb
sbb
push
or
lds
cwtl
leave
or
or
adcb
addb
xor
or
add
cmp
add
adc
push
xor
xchg
add
movsl
adc
xchg
jl
cli
das
pop
jno
push
in
xchg
mov
push
loope
filds
inc
mov
jb
inc
clc
sbb
in
add
outsb
inc
aas
test
pop
fs
mov
lcall
rcll
pusha
xchg
and
cli
add
mov
mov
dec
pop
aam
push
pop
lock
mov
adc
adc
jle
or
repnz
stos
adc
jle
jbe
xchg
add
push
pusha
mov
cmpsb
lret
add
decl
add
cli
xor
pop
enter
adc
adc
and
incl
lcall
es
shll
in
add
and
js
xor
inc
mov
push
mov
sub
adc
xchg
cmpl
mov
cmpsb
xchg
xchg
jle
nop
fisubrs
cmp
inc
or
jg
adc
and
jl
jae
sahf
cli
ljmp
xchg
sti
xlat
inc
xchg
cmp
mov
or
scas
mov
fwait
mov
fmul
inc
pop
stos
xchg
adc
je
sub
xor
cs
pop
mov
jo
pop
cmp
pop
cltd
cmp
into
cmp
xchg
icebp
sub
pop
mov
push
lock
push
cmp
into
mov
lret
rcrl
jle
clc
cmp
jp
mov
test
or
in
ljmp
mov
mov
pushf
icebp
fsub
je
addl
lock
fs
mov
jl
std
ret
insl
push
xchg
inc
push
outsb
andb
cs
out
sub
push
lock
ja
sbb
mov
addb
hlt
xor
int3
imul
dec
add
mov
push
es
pop
and
js
pop
jecxz
mov
fistps
dec
adc
jnp
add
jno
xchg
jp
popa
js
cmp
xor
insb
loope
leave
and
mov
aad
cwtl
nop
push
push
dec
movsb
call
mov
fisttps
jg
sbb
ljmp
xor
or
cmp
aam
or
cmp
jl
ror
test
push
sarl
rolb
and
loope
and
ja
mov
dec
push
xor
push
dec
fists
mov
xor
enter
or
sarl
mov
outsl
mov
push
mov
xchg
cmp
cmp
in
jns
idiv
inc
shl
xchg
xor
loope
into
adc
movsb
jg
adcb
ljmp
and
add
std
dec
mov
pop
ds
mov
push
ds
cltd
xor
movsb
jecxz
add
out
sub
xchg
adcl
push
lods
fadds
pop
jecxz
jg
jp
sbb
inc
cmp
adc
add
ljmp
jno
cmp
add
xor
cs
mov
pop
fiaddl
repnz
mov
pushl
sar
jo
add
fs
call
pand
aam
in
xor
popl
repz
pushf
xchg
and
pop
incb
cli
adc
lock
call
push
mov
ret
xor
adc
fdivrs
pop
and
push
andl
mov
shl
mov
and
hlt
pop
add
adc
xor
mov
repz
push
cmc
jg
or
pop
mov
sbb
jmp
das
mov
hlt
adc
stos
cli
insl
dec
add
pop
hlt
pop
sub
fisubs
push
iret
in
sub
xor
adc
aad
in
stos
clc
in
pop
daa
loope
or
pop
data16
mov
push
outsl
rolb
ljmp
inc
stos
shlb
push
loopne
stos
mov
adc
xchg
or
xor
jo
sub
into
adc
xor
xchg
dec
xchg
das
shrb
cltd
popf
xchg
fs
xchg
in
icebp
pop
stos
jge
loopne
push
mov
jl
insl
jmp
inc
cmp
divb
iret
sbb
shrl
jbe
add
aaa
mov
jne
bound
out
xchg
sbb
adc
mov
fbstp
pop
call
mov
imul
mov
add
mov
fsub
add
pop
test
out
aas
fisubs
aas
cmpsl
es
clc
fwait
sbb
mov
imul
test
push
lods
add
pminub
pop
mov
add
mov
test
lods
js
outsl
aam
or
sbb
push
cmpb
loopne
push
cld
fwait
jo
jl
decl
jo
pop
and
test
push
hlt
xchg
add
mov
mov
shl
test
mov
jl
sub
add
dec
pop
cmp
sbb
movsb
xor
sbb
mov
rcrb
lret
enter
roll
pop
mov
stos
or
outsl
mov
and
sbb
call
jg
sti
int3
pusha
js
push
add
mov
cmp
add
jb
inc
sbb
out
aam
adc
test
loop
push
mov
aam
repnz
repz
add
loopne
addr16
xchg
and
stc
test
pop
test
xchg
jl
icebp
nop
adc
mov
dec
jle
cmpsb
adc
movb
es
fistps
sbb
dec
pushf
xor
callw
mov
xchg
jb
stos
insl
push
addr16
call
xchg
aas
push
jl
inc
jp
sub
pop
into
or
pop
pusha
insb
jecxz
std
adc
test
xchg
add
cmp
out
sarb
mov
ja
hlt
mov
pusha
ds
xorb
ror
std
add
mov
test
movsl
add
inc
push
inc
cmp
push
or
cmp
cld
sti
movsb
frstor
cli
je
rcl
ret
cwtl
dec
fisttps
les
sub
sahf
out
adc
mov
or
ret
scas
sar
aas
mov
lret
push
dec
rclb
clc
sub
cmp
clc
xchg
jbe
daa
cmp
nop
jo
cli
add
mov
sub
adc
and
sbb
outsb
or
dec
sbb
pop
and
sub
pinsrw
add
sub
cs
mov
adc
aad
lock
int3
sub
lea
xchg
push
push
idivl
psubq
ret
sbb
shlb
inc
jmp
test
enter
das
mov
aad
nop
cmp
pop
nop
into
sti
and
and
or
addr16
outsb
push
ljmp
test
hlt
mov
fsubr
aaa
mov
add
call
movsb
outsb
mov
repz
jae
pop
adc
int3
or
mov
xadd
inc
test
inc
pop
out
lret
xchg
add
push
xor
inc
pop
push
lar
bound
aas
jo
mov
jns
lret
cmp
push
mov
sbb
incb
pop
cld
sub
inc
test
pop
jmp
mov
push
jg
fildll
lcall
fdivrl
sub
std
mov
lcall
sbb
insl
in
push
sbb
loope
inc
mov
sbb
xor
pop
pusha
hlt
mov
mov
cld
lcall
hlt
scas
cli
push
in
sbb
fisttpl
mov
jmp
lret
inc
sbb
sbb
push
ret
jmp
add
xchg
fsubr
sbb
mov
adc
lock
cmp
ds
sti
inc
jmp
ret
mov
xchg
inc
jg
push
data16
enter
into
rcrl
sbb
jle
jecxz
sbb
inc
dec
das
adc
dec
outsb
mul
dec
mov
aam
loop
dec
gs
pop
or
pop
test
mov
pop
fsubrs
outsb
clc
movsb
arpl
xor
into
pop
xor
into
add
cmc
jo
int3
pop
jle
jnp
out
xchg
sub
or
jo
mov
push
push
push
inc
les
push
sbb
lock
shrb
ret
jno
mov
add
add
sub
sti
xor
jl
inc
xchg
and
loop
push
inc
stc
dec
add
xor
add
scas
xchg
test
call
pop
bound
int3
mov
push
les
in
das
fidivs
int3
jns
cmp
out
xor
sbb
sub
cmpsl
test
push
loop
add
arpl
mov
fisubrl
in
mov
inc
scas
lods
imul
add
jge
push
mov
out
mov
js
inc
jbe
xor
fs
popa
nop
xor
adc
pop
xor
sbb
ret
call
inc
in
xor
jnp
push
loopne
add
add
xor
aas
mov
fcomps
add
test
adc
fs
mov
scas
incl
jo
pop
movl
cmp
stc
vcomiss
mov
push
mov
push
inc
fidivs
and
jge
orb
cld
aaa
mov
xchg
inc
jbe
mov
and
aam
jne
mov
in
pop
stc
movsb
add
aam
sti
enter
push
lcall
cltd
jb
or
xchg
call
shrb
and
shll
sub
or
sbb
and
mov
mov
paddsw
mov
cmp
xlat
ja
mov
mov
cmp
lods
js
pusha
mov
pusha
jmp
nop
inc
xor
loopne
jg
mov
mov
jp
or
test
mov
in
sub
int
imul
xchg
stos
dec
and
test
xor
lock
cli
cmp
adc
je
cld
push
test
dec
divb
cmp
jno
push
jo
cmpsb
mov
insl
mov
stos
testb
adc
clc
adc
ret
lcall
push
add
add
add
cmpsl
mov
cmc
mov
sub
lock
hlt
mov
aam
and
dec
loop
push
loop
dec
mov
add
decl
pop
hlt
pop
adc
lds
push
outsl
or
sbb
mov
cmp
outsl
mov
inc
adc
scas
jb
pop
pop
jmp
imul
mov
sub
jp
mov
out
cmpb
inc
arpl
push
and
sub
add
sbb
add
or
aad
push
push
movl
sarb
xchg
add
jmp
fists
add
fimuls
incl
fwait
es
jmp
arpl
adc
fsubrl
xor
cmp
aaa
add
scas
cmp
dec
adcb
sbb
cld
int3
add
cmp
pop
or
dec
adc
push
mov
decl
ret
mov
mov
fcmovb
sbb
xchg
insl
xbegin
lods
int
push
sbb
shll
cwtl
push
ficompl
sbb
adc
aas
arpl
cli
adc
aaa
or
adc
mov
sbb
jp
pop
or
adc
loopne
outsb
fidivl
add
xor
sub
mov
call
jbe
mov
decl
add
push
cmp
dec
sub
fdiv
mov
and
movsb
lea
jg
inc
jne
ljmp
mov
xchg
outsb
xchg
fldenv
js
icebp
mov
dec
xor
mov
adc
and
test
xor
xor
fsubr
movsl
mov
popa
shl
aaa
ds
mov
pop
and
adc
repnz
add
scas
jb
add
cmp
inc
push
dec
mov
xchg
add
test
xlat
lcall
fbstp
shl
mov
push
out
push
add
inc
and
push
jg
lret
cmp
pop
fildll
std
adc
jecxz
mov
cmpsb
test
mov
divb
xor
or
push
pop
lahf
repnz
mov
mov
push
dec
lds
xor
sbb
or
sbb
dec
adc
mov
in
test
pop
add
dec
inc
call
sahf
jae
scas
lds
dec
test
push
mov
mov
shrb
mov
scas
add
xchg
xor
add
fmul
data16
add
imul
and
sar
lods
mov
sbb
mov
and
xchg
jl
enter
lret
inc
cld
cmp
std
jl
xor
std
not
add
add
outsb
sub
insb
test
jmp
clc
stos
rorb
jmp
and
fsubl
ljmp
shll
jnp
or
mov
loop
jmp
dec
shll
imul
mov
dec
add
enter
cld
arpl
lods
pop
aaa
add
lods
sub
out
cltd
sub
js
or
into
add
dec
lcall
setb
sahf
int
push
cmp
mov
sbb
ret
sbb
cmp
out
ret
mov
push
mov
sbb
in
cmc
xlat
dec
push
dec
sarl
decb
cld
cmp
filds
inc
or
loopne
out
decl
sbb
push
arpl
inc
and
mov
inc
lret
subl
pop
pop
add
adc
fbstp
jle
or
adc
or
adcb
inc
aaa
lock
shll
sti
xor
repz
mov
aam
mov
stos
inc
mov
ljmp
xchg
cmp
pusha
add
mov
cld
fists
dec
enter
inc
mov
shr
incb
stos
jo
lock
mov
push
mov
push
dec
loope
das
xchg
lea
jecxz
insb
xchg
sbb
or
out
fldt
sbb
in
push
add
ret
inc
cli
jl
aam
jne
mov
pop
aam
iret
sahf
xor
and
push
inc
jg
inc
pop
mov
mov
inc
enter
cmc
jg
dec
sbb
in
add
sbb
jg
lods
sbb
push
adc
fcom
dec
or
lret
jnp
inc
clc
sub
mov
adc
push
popa
dec
sbb
jecxz
add
bound
imul
icebp
mov
pop
jl
mov
jge
push
fwait
scas
cli
shlb
movsl
jp
fdivrp
fwait
popa
push
into
je
pop
loopne
push
rorb
test
cli
add
push
push
fsubs
sar
mov
mov
lahf
or
mov
adc
push
sub
mov
add
add
pop
push
sbb
std
test
sub
dec
std
and
cltd
pop
push
lods
sbb
fisttps
push
inc
dec
and
out
push
shl
sbb
aas
aad
rorl
or
das
sub
xchg
outsb
and
and
ds
add
xchg
pop
insl
in
push
fsubrs
push
sbb
fwait
dec
xchg
add
mov
js
adc
stos
lret
scas
adc
dec
movsl
or
fs
bound
in
es
lret
pop
dec
fcoml
inc
pop
sub
test
mov
pusha
jecxz
cmc
ret
mov
sub
aas
nop
cmc
mov
outsb
sahf
or
inc
in
shlb
enter
jg
mov
sub
push
push
push
cwtl
add
jp
leave
mov
int3
mov
inc
jbe
hlt
push
xor
mov
mov
or
idivb
lods
add
ficomps
cmp
mov
cmp
cltd
mov
xchg
flds
dec
add
xor
cmp
cmpsb
cwtl
data16
flds
test
cmpsb
adc
push
and
mov
inc
jmp
sub
mov
call
sarb
loop
push
mov
addb
out
lret
sarb
adc
aam
incl
scas
pop
lret
push
mov
xchg
mov
pop
xor
neg
xchg
or
adc
adc
fadds
add
jle
xorb
sbb
mov
fbld
out
add
stc
pusha
jnp
addb
shrb
jg
lods
lret
xchg
or
cmp
subb
cmpsl
or
mov
or
sarl
test
add
xlat
pop
adc
fisubrl
shrb
adc
inc
pushf
cmp
inc
push
imul
fstpt
out
pop
sub
test
das
pop
jo
pop
sarb
inc
in
adc
mov
mov
and
push
adc
int3
inc
pop
mov
shrb
add
jp
fisttps
add
push
in
push
das
and
and
add
add
fiadds
sahf
cmp
orb
cmpsl
mov
lret
ljmp
jp
jecxz
push
daa
ljmp
call
lret
push
cmpsb
mov
std
pop
mov
xor
cmp
push
cmp
je
push
jge
icebp
bound
stos
sbb
mov
xchg
lret
and
cli
hlt
stos
jle
pop
cmp
mov
pop
ss
loop
dec
cld
mov
insb
xor
cmp
lcall
psubb
and
xor
mov
in
addr16
fbstp
loop
push
insl
in
inc
sbb
xchg
iret
pop
loope
fcompl
push
sbb
inc
enter
pop
faddl
pop
mov
adc
mov
fsubrl
das
jne
cs
jo
sbb
jmp
loope
jo
outsb
popa
xchg
adc
pop
sub
add
je
push
xlat
mov
jo
and
xchg
xor
imul
sbb
incb
jo
inc
andb
js
pop
sarb
cmc
adc
loope
mov
ret
imul
and
mov
cmp
mov
jge
add
inc
xor
repnz
call
mov
subb
cmp
ret
call
xchg
and
sub
pop
xorb
xor
push
pop
sub
xchg
fiaddl
pop
cmc
arpl
sub
js
cmp
fmuls
push
fsubr
push
cmpl
pop
xor
sahf
out
adc
sbb
popa
jbe
xor
cmp
dec
add
or
es
aas
push
decl
add
inc
inc
data16
add
clc
out
clc
push
das
and
loopne
add
and
dec
dec
sbb
in
mov
lds
gs
aad
mov
sub
and
mov
cmpsl
sbb
cmpb
addb
push
dec
mov
std
cs
push
test
notb
jl
mov
shr
inc
call
mov
aaa
scas
mov
adc
cmp
add
loope
cmpsb
out
inc
pop
ljmp
pmullw
mov
popf
nop
pushf
ret
mov
sub
mov
aam
icebp
inc
and
nopl
hlt
fisttps
nop
shrl
adc
pop
mov
push
push
inc
adc
sbb
mov
jp
mov
sub
cmp
and
iret
lods
push
and
aad
lcall
cmp
add
mov
lock
and
filds
xchg
repnz
js
inc
mov
arpl
and
mov
hlt
xor
and
adc
push
sbb
add
xchg
dec
adcl
mov
andb
out
clc
mov
fwait
adc
push
out
jl
mov
std
push
lods
fiadds
sbb
fcomip
dec
ret
xchg
push
add
mov
scas
cmp
mov
add
imul
orl
int3
and
movb
stos
icebp
jge
pop
sbb
xchg
movsb
mov
inc
sub
xchg
shl
jecxz
dec
bound
adc
das
mov
inc
push
fisubrs
inc
inc
jmp
sbb
int
ja
jg
add
jb
popa
out
or
inc
inc
clc
jg
cmc
adc
sbb
test
imul
mov
and
mov
xor
sar
sbb
int3
gs
add
add
divb
fldt
mov
fcmovbe
add
push
jmp
ja
dec
push
in
mov
adc
ret
mov
sub
and
dec
push
cld
mov
sub
add
mov
dec
fisttpl
jg
jle
cmp
movsb
inc
syscall
push
bound
xchg
clc
push
mov
xlat
fwait
jge
ja
mov
inc
sub
ss
xchg
sbb
inc
sbb
cmp
fdivr
push
mov
pop
push
inc
lcall
dec
push
shll
cwtl
inc
mov
mov
outsb
inc
incl
cld
ljmp
xchg
fcmovnu
sub
and
dec
pop
hlt
add
bound
push
test
push
add
sub
add
add
bound
mov
jp
aam
test
pop
jmp
xchg
jo
pop
mov
add
inc
jo
clc
in
and
jnp
and
and
jno
scas
mov
sbbb
mov
add
popf
ret
sbb
xor
idiv
jbe
or
js
movsl
mov
jge
hlt
fnstsw
movsl
add
inc
sti
aaa
es
cmp
pop
int3
cmp
in
jecxz
aas
leave
lock
pop
ss
bound
jg
movl
les
xor
fs
jg
dec
dec
or
sub
push
cmpl
fwait
out
or
push
in
repnz
test
insl
push
loopne
inc
and
leave
dec
sbb
les
nop
push
add
incb
add
sbb
jb
inc
xor
outsl
and
cli
cmp
loope
mov
fs
inc
lock
push
pop
repz
popl
mov
mov
mov
push
movsl
cmp
ds
push
push
in
sub
mov
jb
mov
jl
pop
pushf
or
xchg
pop
inc
xchg
xchg
adc
mov
andl
mov
jle
subl
out
jl
fstpl
flds
sahf
inc
ficomps
lcall
pop
aad
and
push
xor
or
scas
scas
loopne
cwtl
aaa
pop
lcall
or
or
inc
and
mov
cmp
dec
lea
mov
outsb
jl
popa
pushl
sbb
or
push
stc
loopne
pop
std
fwait
sarl
add
data16
pop
xchg
pop
scas
pushf
adc
std
mov
pop
out
or
ret
mov
pop
and
and
mov
add
mov
mov
jp
bnd
and
and
call
icebp
adc
inc
and
jle
jmp
add
stos
and
pop
mov
push
lods
dec
xchg
push
xor
decl
pop
out
adc
or
into
lahf
jp
dec
cmp
stc
or
scas
aam
loope
test
add
push
push
cmp
push
aad
stos
aas
fs
loope
sbb
push
cmpsb
les
insl
cld
and
jl
cmpsl
add
sub
fs
ss
mov
loopne
add
mov
jns
test
or
imull
aad
jp
lock
add
push
les
aaa
pop
icebp
das
lretw
leave
neg
mov
icebp
add
cmp
add
add
adc
push
rcrb
lock
mov
cli
or
loopne
stos
mov
sbb
nop
sub
cmp
cmpsl
shl
mov
filds
adc
fnsave
add
cmp
inc
push
push
pop
mov
stc
rorl
in
jo
incb
xor
lds
loop
or
and
jno
cmp
arpl
jbe
cld
sbb
imul
stos
mov
hlt
mov
sub
xchg
push
imul
and
call
test
decl
pop
add
aad
dec
or
adc
jp
xor
push
or
pushf
pusha
hlt
pop
adc
shrb
lcall
dec
add
sub
rcr
add
sub
scas
inc
lahf
hlt
in
clc
call
and
rcrb
cmp
sub
outsl
adc
outsb
mov
push
sbbb
push
orb
or
dec
sub
sbb
mov
push
cmp
stos
mov
push
jno
dec
ds
jo
pop
add
push
es
adc
hlt
jb
sub
test
push
js
mov
repnz
divb
inc
sub
jmp
insb
pop
lods
push
push
jl
or
inc
hlt
cs
stos
jle
xlat
sub
fsubl
jo
fisttps
cmp
xchg
xor
lods
fcomps
pusha
pop
mov
or
stc
xchg
insb
outsl
mov
in
jne
popa
loop
scas
pop
pop
cmp
add
lods
shlb
pushf
sub
xor
data16
outsb
fs
xor
xchg
lods
stos
aam
cmp
xchg
lds
inc
mov
jmp
jge
mov
inc
popf
pop
int3
pop
popf
enter
adc
pop
mov
lret
cwtl
cmpsb
lods
in
inc
inc
lds
jmp
dec
inc
ja
dec
data16
fwait
sti
push
dec
pop
popf
mov
or
mov
hlt
cmp
inc
cli
adc
aad
sub
adc
dec
jnp
dec
test
fsubrs
mov
mov
ror
imul
loopne
jmp
add
js
xor
ja
aad
decl
mov
test
pop
xor
dec
mov
lcall
test
loope
mov
add
aad
sub
xchg
add
mov
aad
jle
ret
testb
rcll
mov
jl
xor
push
push
fisubrl
xchg
or
cmp
push
mov
adc
in
int
pushf
icebp
scas
push
sub
mov
addl
push
mov
inc
mov
test
inc
std
das
call
mov
push
daa
jno
sbb
cmp
jmp
and
fcomip
decl
mov
jbe
js
pop
or
add
cmpsb
inc
adc
lods
adc
daa
std
xchg
sub
cld
push
sbb
pop
movsl
and
xchg
add
lret
sti
int3
lods
mov
test
test
or
push
out
xor
push
imulb
or
rclb
or
inc
ret
sbb
adcb
mov
xorb
dec
jo
call
pop
jbe
das
rorb
sbb
xchg
mov
outsl
adc
call
dec
adc
mov
inc
push
ret
xor
lock
add
fcomp
and
mov
jne
push
lods
push
cld
jg
mov
mov
add
call
adcb
cmpsb
loope
aas
fidivrs
mov
push
pop
sub
jno
pop
pop
loop
decl
xor
sbb
sbb
fisttpll
mov
cvttps2pi
mov
bound
adc
and
pop
out
mov
xor
fcmovu
movsl
pop
in
jg
push
imul
test
pop
xchg
fiaddl
lods
nop
push
xchg
mov
out
in
pop
mov
or
fisttpll
add
jo
scas
ljmp
jae
lods
inc
cmp
sub
out
adc
inc
sbb
stos
popa
rcrl
lods
jmp
adc
movsb
sbb
enter
jnp
aam
inc
stos
pop
cs
inc
inc
or
data16
xor
in
adc
mov
inc
dec
mov
mov
test
mov
pusha
loopne
jmp
jno
aaa
cwtl
shlb
xor
jnp
leave
pusha
stos
dec
test
jl
outsb
sbb
rcrb
add
ss
cmpsb
and
xchg
shlb
and
pop
add
repz
add
shlb
movsb
sbb
sbb
mov
ret
push
mov
xor
js
gs
sbb
pop
or
scas
mov
ljmp
ss
movsb
sbb
movsl
mov
xchg
mov
pop
push
loopne
and
push
out
cltd
repz
adc
stos
test
xchg
mov
incb
nop
jp
dec
push
push
es
mov
add
xor
lock
mov
std
pop
andl
and
pushl
imul
insl
jg
xor
movsb
cmp
jne
mov
pop
mov
out
gs
call
push
jg
sbb
stos
outsb
sub
out
adc
add
jg
pusha
xlat
in
in
or
loop
pcmpgtw
sub
push
mov
int
and
mov
lret
inc
pop
sbb
in
sub
div
pop
xchg
push
xor
insb
data16
pop
movsb
out
cmp
lcall
stos
imul
mov
mov
and
jg
loopne
mov
cmp
jb
sub
inc
stos
fistps
call
pop
or
inc
repnz
movsl
xchg
add
or
stos
mov
pop
mov
les
push
inc
outsl
xlat
outsb
sub
rorl
or
hlt
push
jle
xchg
xchg
inc
decl
dec
pop
pop
cmp
test
xchg
js
push
inc
or
adc
lret
lret
mov
rorl
test
mov
incl
jbe
add
xchg
xchg
add
bound
push
add
insb
loopne
push
fwait
das
add
jo
mov
dec
and
lds
fs
cmp
cmc
push
rcrl
cmpsl
xchg
sub
dec
inc
idivl
dec
sbb
push
decl
dec
das
cli
jge
push
xchg
cmp
xorb
adc
dec
das
aam
mov
xor
and
jg
pop
xchg
mov
push
sbb
shlw
mov
push
stos
mov
adc
lods
lods
inc
or
sti
filds
mov
dec
cwtl
cltd
rcrb
and
xchg
dec
and
test
stos
sti
xor
nop
push
jb
lods
ret
decl
xchg
adc
and
mov
push
sub
jns
mov
aad
pop
js
or
pop
sarb
rclb
dec
pop
ret
push
jle
movsb
int
mull
pop
insb
sbbl
rolb
pusha
lock
call
add
mov
pop
mov
push
frstor
mov
push
adc
popl
fcoml
or
pop
icebp
into
and
rcrb
or
mov
pushf
les
idivb
sbb
add
jno
or
adc
mov
imul
jle
mov
cmp
jmp
cli
or
mov
stc
decl
test
test
sti
cmc
mov
adc
or
dec
push
sub
fsubr
mov
orl
data16
xchg
xchg
add
mov
out
sbb
mov
xchg
test
clc
icebp
push
outsl
insb
add
dec
jns
pop
testb
fwait
or
jecxz
xorb
sahf
ficompl
sbbl
movsb
clc
push
inc
dec
int
inc
call
fistpl
add
inc
add
sub
call
cmp
or
push
shr
mov
lds
sahf
inc
mov
jl
xchg
add
lret
or
out
sbb
ss
mov
lods
mov
jl
sbb
aam
je
daa
lods
push
insl
sub
xor
push
imul
cwtl
push
cltd
mov
inc
push
shld
mov
lret
sbb
adc
mov
jp
pop
dec
jge
dec
or
addr16
xchg
jg
or
inc
add
sbbl
and
enter
push
xchg
jmp
or
push
rol
xor
test
jecxz
ss
jb
sbb
inc
in
cmp
cmp
xchg
pop
mov
mov
mov
inc
lcall
aad
add
movsb
sarl
and
push
loopne
cld
mov
cli
mov
fcmovnbe
loopne
and
and
xchg
inc
push
push
pop
add
add
jo
mov
mov
fsubrs
xlat
jp
dec
add
data16
mov
mov
sbb
adc
and
aad
inc
and
pop
pop
out
push
notb
mov
icebp
xchg
les
les
push
jb
push
ret
sbb
jg
iret
cmp
lods
scas
outsb
dec
xlat
aam
lahf
std
mov
lods
adc
jb
insb
and
stos
inc
add
push
pop
test
dec
rcrb
inc
mov
dec
jmp
mov
fsubl
in
or
cwtl
hlt
arpl
ljmp
lret
mov
sub
shrl
inc
lods
in
jg
add
add
mov
movsb
pop
imul
and
sub
sbbb
lahf
sub
lods
jo
outsb
add
shlb
shl
jae
call
xor
aas
clc
mov
jmp
movsb
js
xchg
addr16
mov
out
negl
cwtl
cmp
scas
cld
jmp
xchg
cld
cmp
xor
cmp
jp
repnz
ror
fwait
aaa
insb
jbe
add
xor
add
fwait
mov
or
ficoml
gs
mov
lcall
cmp
push
je
clc
data16
push
sar
push
push
sbb
scas
cltd
dec
mov
orb
sub
xchg
or
fiadds
out
cmc
mov
inc
mov
je
jmp
sbbb
pop
les
xor
pop
pop
xor
clc
add
aaa
decl
ss
pushf
in
dec
sar
xchg
mov
mov
mov
inc
adc
fldt
push
adc
decl
lret
xchg
iret
call
loop
inc
xchg
test
adc
jg
jg
jno
jl
inc
mov
in
jb
jb
lods
push
in
ret
fwait
lock
cltd
and
stos
xor
add
lret
inc
cmpsl
sbbl
mov
sahf
rorb
jg
sub
sub
inc
cld
or
xor
xorl
scas
dec
sti
mov
push
mov
mov
sbb
lds
incb
add
dec
pop
xchg
call
mov
rcrb
lds
inc
pop
sahf
js
push
pop
adc
incl
sahf
cmpsb
mov
push
mov
mov
jg
cmp
movsb
fbld
outsl
andl
notb
call
aad
sarb
pop
or
jecxz
jne
xchg
push
mov
int
shll
stos
push
adc
loope
dec
mov
scas
mov
rorl
icebp
movsl
sbb
pop
inc
fs
sbb
loopne
inc
cmpsl
mov
in
add
incb
xorl
pusha
clc
mov
push
loope
movsb
pop
xor
mov
idiv
xchg
lock
add
dec
jae
hlt
sbb
adc
mov
sbb
es
lods
lret
sub
lock
xor
cmpb
inc
adc
pushl
rcl
je
cmpsb
pop
fsubrl
xor
je
dec
cmp
ds
pop
pusha
call
inc
pop
rolb
notb
test
sti
inc
sar
or
pop
xchg
and
pop
aaa
xchg
cli
lock
xchg
movsl
and
cmp
cmp
clc
and
les
mov
lahf
mov
loop
push
add
fcmovu
gs
or
and
inc
xor
loopne
insl
loope
pop
nop
add
push
jge
and
mov
xor
jb
lds
mov
jb
rcrb
xchg
and
ljmp
rorl
insb
adc
mov
xchg
into
outsb
jmp
jbe
out
loope
cli
pop
dec
shrl
jl
add
adc
std
mov
xchg
sbb
in
bound
fcomip
sub
add
push
mov
stc
or
aam
test
mov
pop
xlat
stos
bound
fisubl
sub
loopne
popw
sbb
jno
ja
lahf
insb
xchg
pop
fldl
push
mov
lock
dec
scas
xor
enter
lea
rorl
and
cmpsb
aam
inc
adc
bound
inc
push
jge
sar
sub
inc
inc
fmul
pop
lock
ljmp
dec
inc
aam
decl
or
pop
cmp
ja
add
adc
add
sti
pop
rcrb
cli
mov
push
mov
lea
mov
data16
ljmp
and
lea
sbb
push
jp
pop
and
add
mov
out
test
jmp
jp
push
push
inc
fidivrs
ljmp
repz
pop
inc
pop
xor
ljmp
in
push
pop
dec
jmp
inc
pusha
and
cmp
das
pop
mov
int3
push
insl
loopne
add
dec
mov
dec
add
inc
outsl
bound
or
jmp
mov
std
cmp
aad
scas
das
mov
inc
sar
repnz
stos
mov
sbb
lock
lcall
shrl
repz
cmp
andb
xchg
rcrl
or
test
sub
pop
jne
xchg
lcall
add
mov
pop
push
push
fadds
js
cld
jl
sub
imul
bswap
mov
movl
lcall
jne
lcall
dec
cmpsl
in
jp
mov
mov
dec
push
decl
ret
pop
loop
stos
mov
push
and
fmull
mov
cmc
es
testb
std
popl
popf
in
outsb
inc
pmulhuw
mov
add
xchg
scas
inc
sbb
outsl
repz
jne
fimuls
shlb
inc
mov
xor
cs
push
negb
ret
mov
popa
push
insb
stc
xchg
decb
in
add
popl
jbe
adc
pop
xor
std
and
xchg
cs
push
lods
adc
mov
gs
mov
es
aam
fnsave
or
js
inc
mov
outsb
pusha
cltd
mov
loop
pop
fidivl
clc
rcr
out
call
scas
pushf
sub
mov
jae
mov
js
xchg
hlt
jg
inc
mov
test
pushl
mov
das
push
out
pop
and
test
jle
popf
pushl
add
fcmovb
and
orb
loop
jbe
fdivl
jecxz
adc
and
pushl
or
test
and
cli
idivb
in
push
mov
jnp
test
rol
scas
lret
fmuls
dec
push
cmp
push
lcall
or
pop
rcrl
das
shlb
pop
cmp
sub
xchg
add
xor
shlb
mov
shlb
cmp
inc
cmp
dec
pop
inc
in
mov
sahf
mov
enter
lock
or
std
cmp
das
mov
push
pop
sbb
add
adc
scas
out
lock
stos
out
mov
pop
and
jo
inc
inc
test
inc
orl
xchg
push
inc
xor
mov
pop
jecxz
and
js
adc
shlb
lock
jbe
bound
pop
inc
inc
cmp
push
cld
shll
cmp
rcrb
jmp
hlt
mov
call
pop
or
fidivs
inc
ja
pop
inc
pop
hlt
sub
pop
jg
and
mov
push
insl
mov
mov
dec
js
fcmovne
or
mov
inc
data16
mov
jg
call
jp
ds
sarl
in
jne
add
mov
adc
nop
pop
mov
mov
or
adc
mov
add
adcb
nop
outsl
inc
cmc
int
fildll
repz
es
mov
test
clc
enter
sar
or
mov
scas
jae
add
lahf
aam
pop
roll
rclb
test
icebp
rcrl
loope
cld
push
xor
lcall
aam
iret
ret
xor
jl
push
jno
jne
sar
lock
sbb
cmp
sbb
sub
or
jl
sbb
outsl
sbb
add
fsubrp
mov
push
fldenv
fadds
jnp
int3
dec
cmpsb
cli
sbb
pop
jp
andl
nop
orl
out
xor
dec
xor
adc
sbb
out
cmpsl
jmp
out
xchg
sub
lahf
push
xorb
xor
and
adc
mov
add
add
xorb
outsb
ljmp
movsl
mov
lret
xchg
sbb
and
add
movsl
sbb
loopne
jl
cmp
rclb
xchg
std
ja
outsb
jp
adc
aam
or
dec
popf
test
lcall
cmc
push
add
dec
fnstenv
andb
shr
fdivl
into
fdiv
es
je
inc
sub
and
or
sbb
arpl
dec
sub
hlt
ljmp
and
xchg
fs
std
jg
test
lcall
pop
add
jle
out
jbe
jl
add
sbb
mov
out
int3
jbe
jp
jmp
test
push
stos
lahf
fs
mov
in
jl
xchg
add
and
inc
popl
xor
fidivrl
push
fwait
lret
add
out
push
dec
movsl
pop
pop
or
mov
jge
jle
cmp
sub
iret
mov
inc
push
and
push
nop
pop
daa
loop
stos
xchg
sub
jle
pop
adc
mov
ja
lcall
mov
dec
jmp
mov
sub
outsb
fstps
mov
push
icebp
push
xchg
add
jl
xchg
pushl
lea
lods
sbb
push
sbb
sub
mov
loopne
push
jg
mov
das
dec
daa
sti
stos
dec
loop
ljmp
mov
outsl
std
mov
jne
or
dec
gs
inc
cld
jecxz
jbe
sub
in
in
mov
cmpsl
les
xchg
aam
cmp
test
xchg
std
imul
dec
outsl
adc
jge
mov
jb
jle
lods
jg
push
mov
pushf
out
push
iret
dec
inc
in
loope
push
push
dec
mov
sub
add
lock
call
sub
aaa
test
orl
push
and
push
jp
mov
stc
jp
ljmp
inc
ja
dec
add
add
push
clc
cmp
push
mov
sbb
sbb
add
rcll
cld
adc
mov
push
or
xchg
rorb
and
jae
inc
adc
lea
sub
mov
mov
add
inc
or
iret
jmp
mov
mov
pop
jno
add
adc
xor
add
mov
cwtl
in
adc
movsl
dec
mov
je
pop
push
pop
add
add
loopne
inc
mov
add
lcall
push
std
enter
fcmovnb
fildll
mov
mov
xor
fistps
lcall
mov
push
fcomps
pop
add
mov
or
sbb
nop
dec
cli
aad
or
add
sbb
xchg
sbb
rdmsr
lock
cmp
jno
ret
sub
cmp
int3
daa
and
outsl
pop
sti
mov
jg
push
push
adcb
call
shl
in
push
in
xor
fisubrs
ja
sbb
cwtl
test
sbb
out
cs
add
cmp
jle
lods
mov
pop
sbb
adc
xlat
jge
fisttps
ljmp
mov
lods
loop
xor
jbe
js
jecxz
insl
mov
push
int
adc
ret
xchg
loop
jmp
es
orl
icebp
pop
mov
cmp
cmp
and
pop
scas
les
xchg
push
adc
or
pop
xor
cld
mov
insl
iret
mov
cmp
outsb
roll
mov
movsb
and
and
add
in
sub
mov
push
mov
decb
sub
daa
push
insl
neg
inc
mov
scas
cmpb
push
mov
and
in
decb
int3
and
add
pushl
lods
decl
in
ret
rcrl
loope
sub
inc
out
loopne
pop
xchg
test
sarb
dec
loopne
adcl
ja
pop
call
loopne
rorb
mov
subl
test
cmpsb
movsl
je
cmp
add
enter
mov
adc
jge
rorl
sarb
jmpw
mov
ljmp
dec
lds
push
repz
ror
addr16
or
outsb
xchg
cmp
mov
mov
sbb
nop
cmp
inc
outsl
jbe
or
leave
pop
adc
push
jo
imul
or
or
fs
or
ljmp
and
add
stos
mov
push
ljmp
push
add
rclb
sub
hlt
inc
lcall
inc
shll
sub
xchg
lods
pop
ret
jmp
rcl
adc
push
pop
and
xchg
xchg
sbb
mov
fidivrs
or
pop
movsb
mov
lcall
mov
dec
inc
add
aaa
pop
pop
adc
xor
jg
dec
loop
aam
pop
test
fimuls
mov
subl
push
add
std
inc
cld
fwait
add
xchg
shlb
cmc
adcb
into
or
xor
and
mov
in
mov
sub
mov
push
insb
addl
lods
repz
mov
aaa
std
xchg
xchg
aaa
iret
sub
mov
jne
std
push
xor
xchg
xchg
add
push
mov
xchg
ds
and
hlt
mov
stos
cmpsb
popa
xor
in
pop
leave
xor
add
push
sbb
call
mov
insl
sbb
inc
adc
pusha
mov
adc
negb
add
loope
repnz
clc
mov
incb
repnz
imul
ss
add
call
insl
and
ljmp
inc
and
aam
mov
movsl
test
fildl
out
add
outsb
imull
jo
adc
outsl
movsb
mov
js
jmp
dec
mov
call
dec
and
or
test
jbe
repz
hlt
mov
push
loope
loopne
pop
mov
ret
stos
and
mov
fdivs
lret
or
shlb
or
test
add
imul
xor
fucomip
push
jmp
rolb
loopne
push
ficompl
out
xchg
nop
dec
hlt
sub
test
mov
subb
fisubs
pushl
mov
push
pop
jge
jae
add
jnp
test
add
pop
sar
in
outsl
clc
sbb
mov
popf
sbbl
add
push
push
or
xchg
fmuls
hlt
jmp
js
pop
enter
mov
mov
dec
std
cwtl
rcrb
cmpsl
out
ljmp
xor
xor
pusha
jl
bnd
mov
jle
jle
and
sub
cmp
ds
push
add
pop
fcompl
nop
in
adc
xorb
mov
add
xchg
lds
test
test
mov
cmp
scas
cmp
cld
mov
add
out
and
xor
data16
aas
push
aam
das
push
cmp
pop
xchg
pop
stc
push
or
in
sahf
add
incl
ljmp
stos
push
mov
dec
mov
jne
negb
shrl
add
sti
aam
push
ret
or
test
mov
sub
xchg
ja
clc
in
add
leave
xlat
and
add
scas
div
js
test
mov
into
jns
sbb
fadds
fiaddl
adc
dec
jo
push
and
hlt
or
add
adc
push
fsubl
dec
inc
xchg
adc
mov
xchg
dec
cmp
lock
and
xchg
xor
push
incb
xor
mov
aad
mov
cmc
lds
push
and
loopne
jno
iret
push
ficomps
mov
pop
xchg
data16
add
inc
jo
pusha
nop
fcmovu
ret
pop
enter
inc
flds
mov
int3
inc
mov
jg
cmp
sub
lods
mov
or
repz
lds
sub
mov
clc
inc
push
xchg
xchg
loop
xchg
mov
or
push
out
popl
lods
sbb
sbb
shl
push
push
pop
add
leave
imul
mov
outsb
xchg
ja
add
int
lock
jmp
or
clc
ss
xchg
sub
lcall
inc
sub
mov
jmp
mov
mov
mov
leave
jg
lock
and
outsb
jge
ljmp
add
scas
adc
call
mov
or
ds
mov
or
or
decb
mov
add
inc
rorb
lret
adc
adc
mov
cmp
add
adc
push
sti
test
inc
es
ds
pop
iret
xchg
mov
lret
mov
add
or
push
loop
jne
test
decl
outsb
cmp
sti
or
mov
pop
jo
sub
adc
test
dec
mov
inc
mov
aam
mov
int3
or
adc
testl
int3
cmp
push
xlat
jle
xor
movsl
dec
mov
pop
cwtl
sub
ss
ljmp
xor
dec
cmc
andb
sbb
loop
sub
lods
add
xchg
adc
js
mov
dec
ret
fisttps
int3
push
xchg
sub
xor
dec
jb
jl
popa
xchg
and
imul
mov
push
jbe
mov
mov
mov
adc
mov
jo
movsb
jae
scas
fidivl
fwait
repnz
pop
fildl
cmp
call
xchg
fwait
ljmp
bound
les
loope
jl
or
xchg
pop
dec
lahf
add
mov
ja
insb
les
push
pop
push
outsb
std
add
lods
lock
std
xor
std
inc
cmpsb
ja
test
jb
in
cmp
xor
into
jle
les
ret
cltd
sub
cli
ja
adc
data16
lcall
je
jle
test
push
cmp
add
mov
dec
mov
sub
xorb
lret
sbb
clc
and
mov
out
in
inc
lcall
fnstsw
dec
inc
cwtl
sub
add
daa
add
dec
mov
mov
pop
pusha
shr
int3
in
aam
data16
fdiv
orb
std
icebp
mov
mov
lcall
add
fimuls
sbb
jg
aad
imul
lea
andb
cli
dec
and
and
jecxz
inc
stos
orl
shll
or
loopne
add
test
int3
inc
scas
mov
mov
or
cmp
mov
or
or
jmp
loopne
int
movb
push
and
fidivl
nop
and
add
xchg
arpl
or
and
cmp
arpl
cld
pop
jo
jecxz
add
cmpb
adcb
test
and
mov
cmp
mov
inc
xchg
mov
adc
pop
call
divb
adc
lahf
mov
pop
pop
imulb
cmp
test
imul
ja
mulb
sbb
repz
xchg
test
mov
out
call
shrl
cs
out
lods
xchg
test
rclb
mov
sbb
jb
push
push
mov
and
repnz
push
fbld
out
aam
mov
adc
or
mov
sub
enter
inc
cmp
sarb
xor
cwtl
maxps
or
cmc
adc
lea
aam
das
xchg
insb
xor
cld
idivb
sarb
orb
andb
add
mov
out
pop
mov
fimuls
clc
ljmp
add
ret
fs
pop
in
xchg
jp
mov
clc
mov
inc
out
pop
mov
in
xor
in
out
or
push
mov
lock
and
ret
adc
fbld
adc
or
push
lods
ja
add
cmp
dec
cmp
test
jbe
clc
and
dec
xchg
out
cmpsl
sbb
xchg
add
pusha
mov
andb
nop
ret
bound
sub
dec
or
loopne
int
add
andb
lahf
inc
cwtl
adcl
aaa
jo
dec
insb
out
stos
ss
xchg
sar
cmp
xor
mov
sbb
and
inc
loopne
call
add
sub
fstpl
mov
in
pop
jne
cmc
shrb
sbbb
and
or
sub
push
mov
sbb
pusha
jge
cmc
cmp
sub
cmpsb
jmp
pop
lock
jp
add
adcl
popa
mov
cltd
sti
add
xor
jmp
inc
in
jle
mov
ljmp
fsubrl
fsubrs
daa
add
test
mov
enter
xor
bnd
roll
testb
in
inc
gs
out
fs
jg
jge
outsl
dec
lcall
xor
cmp
push
jle
sbb
xchg
stos
fisttps
adc
sbbb
sub
jle
cld
push
cmp
fistpll
leave
mov
xchg
pop
mov
xchg
mov
cld
push
insb
xchg
push
sub
inc
mov
jmp
imulb
lods
testl
xchg
stos
push
xchg
fisubrl
jmp
clc
mov
push
stos
jb
add
addr16
rol
pop
movsb
xor
fs
mov
or
cmpsb
adc
loopne
jne
div
inc
imul
std
bound
mov
loop
or
or
mov
push
aas
push
jg
rclb
mov
leave
cmp
sub
clc
push
decl
mov
iret
jmp
adc
bound
add
sub
jge
mov
subl
fidivrl
jle
or
movsl
sbb
pop
test
inc
testl
pop
sub
cli
xorl
into
or
mov
rorb
push
pop
sar
jb
test
pop
or
push
pop
mov
call
xorb
sti
mov
pusha
mov
into
push
push
mov
adc
rolb
nop
aam
push
mov
cli
dec
lret
cmp
dec
jge
xchg
iret
ljmp
nop
cmp
iret
inc
loop
pop
les
loope
jge
test
fiaddl
dec
lcall
fs
scas
xchg
push
lock
sub
sbb
stc
cmpsl
mov
test
outsb
and
inc
push
mov
mov
and
mov
mov
dec
xchg
clc
add
addl
pop
pop
inc
push
js
sub
mov
add
loope
outsl
fwait
rorb
enter
or
adc
pop
arpl
movsb
mov
cmpsb
mov
stos
fstl
mov
or
into
inc
sub
mov
mov
sub
sbb
call
mov
pop
mov
ljmp
and
xor
or
or
sbb
cwtl
mov
push
movsl
gs
outsb
call
clc
and
sti
adc
mov
daa
icebp
mov
popa
adc
cmp
ss
arpl
dec
dec
dec
stos
cwtl
ds
mov
pusha
ret
sbb
sbb
add
inc
and
pop
pop
gs
or
inc
sbb
enter
das
addr16
lock
and
xchg
add
mov
iret
inc
out
pop
jecxz
xchg
cmpsb
inc
cmp
xor
sub
js
dec
add
mov
aas
mov
ja
xchg
and
mov
adc
notb
add
stos
adc
xchg
jecxz
fnstcw
adc
call
jnp
decl
cmp
fidivrs
xor
pushf
pop
adc
or
pop
mov
loope
ds
ss
incb
stos
xchg
cli
scas
vmovdqu
jns
int
incl
test
in
mov
aad
mov
sbb
xchg
adc
test
aam
enter
lds
adc
jl
lahf
push
movsb
inc
fbstp
cld
jmp
and
dec
loope
push
sti
ret
pushf
testl
mov
pop
stos
pusha
ret
dec
mov
mov
and
xchg
lret
add
jl
fisubrs
fstpt
sbb
subb
xor
fmull
outsl
jb
push
lahf
xchg
sub
add
hlt
pop
cmp
into
or
lock
call
stos
jle
cld
hlt
xlat
loope
fisttpl
cld
mov
sbb
stos
push
inc
mov
and
sbb
movsb
push
mov
or
xor
dec
cmpl
sub
xchg
jo
fistps
cld
call
mov
dec
rcl
mov
mov
test
notb
jl
mov
ds
into
dec
xor
sbb
loope
or
cmpb
in
mov
xchg
push
mov
gs
ret
xor
push
and
mov
xor
xlat
gs
clc
push
dec
ror
fs
inc
stos
and
es
jmp
xor
push
loope
add
dec
add
stos
add
adc
inc
or
sbb
pop
push
dec
icebp
fwait
lock
cmpb
nop
adc
sahf
in
cli
or
pop
fdiv
cmpsb
or
lock
add
shrl
jg
cli
sub
dec
jle
enter
push
xchg
call
mov
sti
add
inc
dec
add
or
sub
adc
jbe
lret
fiaddl
cmp
les
cmpsb
fdivrs
dec
aas
in
pop
hlt
cmpsb
push
sti
xchg
inc
clc
mov
mov
sarb
sbb
call
xor
or
clc
test
sbb
cld
xlat
addr16
dec
xorl
xor
in
lcall
dec
xor
jne
mov
fcmove
cmc
ljmp
adc
aas
xor
add
mov
ffreep
das
fldt
inc
clc
or
scas
push
mov
and
pop
cmp
push
xor
rcr
pop
lock
add
pushl
dec
push
test
clc
adc
xchg
xlat
mov
fisubrs
adc
cmpsb
push
repnz
nop
push
roll
cld
cmp
pop
add
cs
xor
sub
or
leave
cmc
aas
add
cmp
mov
or
pusha
call
repnz
cs
mov
fs
jle
ret
cmp
jmp
movsb
mov
call
inc
out
fucomip
add
pop
or
adc
adc
xor
outsl
jg
inc
ljmp
loop
mov
mov
sub
lock
adc
mov
clc
negl
cld
mov
jecxz
fidivrl
jo
cld
aad
mov
pop
adc
decl
pop
inc
je
inc
sub
out
xchg
in
inc
rcr
hlt
mov
mov
sahf
jne
mov
inc
xor
scas
adc
js
test
push
mov
fildll
fimull
lret
or
in
sub
std
add
sti
mov
mov
test
test
ljmp
in
out
lock
shl
sbb
in
imul
inc
je
sahf
cwtl
dec
shlb
pop
or
xor
fisubrs
push
pop
cld
lods
lods
ss
or
js
test
loop
adc
sti
dec
cmpb
nop
xchg
mov
cmp
sarb
cmp
inc
lahf
mov
mov
lret
jae
test
sbb
pushf
decl
xor
sub
jbe
fdivrp
pop
push
rclb
and
adc
and
xor
cltd
inc
ljmp
xchg
add
sub
arpl
sub
sbb
mov
or
repnz
in
lret
mov
sub
sahf
mov
and
mov
in
mov
adc
jbe
jp
and
mov
xor
ret
subb
add
rclw
xchg
xor
pop
pop
cmp
cmpsb
lock
insb
ljmp
add
mov
icebp
sub
cmp
inc
fiaddl
cltd
ds
adc
pop
ja
xor
test
and
inc
sub
mov
jbe
sub
les
lret
inc
inc
scas
pop
jmp
test
addb
mov
mov
mov
sar
ja
out
sbb
movsb
pop
mov
and
xchg
mov
xchg
push
mov
ds
sbb
shrb
push
xchg
call
push
int
repnz
add
push
push
clc
xchg
jg
in
icebp
and
cmp
outsb
shl
je
stos
mov
test
sub
cmp
mov
mov
inc
adc
mov
xchg
mov
jmp
xchg
stos
inc
outsb
sysret
add
hlt
out
and
shl
mov
xchg
mov
iret
cmp
pop
arpl
into
mov
pop
push
mov
icebp
and
or
push
ret
scas
test
iret
in
pop
inc
in
cwtl
and
xor
push
ja
push
loopne
xor
adc
test
into
sbb
test
jp
ljmp
add
lcall
negl
mov
xor
jae
mov
loopne
roll
inc
cmpsl
pop
add
mov
and
movsl
pop
mov
cld
leave
pop
enter
gs
scas
inc
xchg
lods
adc
shlb
inc
mov
icebp
out
negl
pop
xchg
cmp
mov
and
cwtl
inc
jo
xor
pop
aam
movsl
xchg
in
pop
jle
or
in
dec
and
or
pop
jno
jns
clc
fcompl
push
loope
mov
sub
fisubrl
jmp
les
adc
mov
mov
adc
mov
dec
xor
das
jo
dec
sahf
imul
daa
inc
js
add
call
mov
rolb
gs
into
mov
add
pusha
loope
scas
xchg
xchg
cmp
xor
dec
mov
or
shl
f2xm1
outsl
lea
add
cli
inc
aaa
jle
in
xchg
stos
pushf
test
mov
ficoms
jmp
pop
dec
in
push
lock
jg
clc
mov
hlt
loope
xchg
cmp
mov
mov
sbb
add
cmpsl
sahf
or
lock
lcall
ja
adc
ljmp
test
dec
mov
lods
add
adc
mov
or
xor
clc
xchg
out
or
push
push
mov
call
outsl
inc
and
add
aad
cs
daa
into
pop
mov
sbb
inc
pop
rol
scas
sbb
decl
insb
jmp
push
loopne
sub
mov
mov
into
pusha
jle
and
data16
rcll
mov
jecxz
movsb
mov
ss
int
pusha
xchg
nop
dec
or
fbstp
dec
loope
jae
sarl
test
fidivl
stos
dec
rcll
out
ret
loopne
std
inc
pop
sbb
mov
jb
mov
xor
ss
mov
mov
stos
insb
fstpl
add
xchg
mov
sub
jb
mov
out
call
loop
into
and
outsl
mov
pop
sbb
pushl
push
add
jae
ret
mov
test
cli
jle
jecxz
es
mov
pusha
icebp
in
inc
pop
mov
fwait
mov
in
loopne
arpl
mov
cmp
or
or
mov
pop
pop
rcrb
dec
call
and
call
fisttps
jno
outsl
pop
fwait
cmpl
pop
sbb
and
test
add
push
jp
jno
sub
loopne
mov
mov
nop
mov
add
cmp
pop
leave
loope
push
dec
in
sbb
add
sti
test
xor
push
or
loope
imul
scas
sub
sub
ficompl
and
and
pop
inc
in
add
les
xchg
ret
jg
movsb
xlat
cwtl
jp
or
mov
sbb
push
lret
lret
mov
sub
pop
xor
rcr
mov
mov
adc
dec
and
scas
je
rcrl
dec
imul
ljmp
ret
xor
or
sbb
jae
sbb
call
insb
into
mov
aaa
arpl
fcmovu
add
test
mov
jge
fisubrs
aas
dec
add
neg
movsl
frstor
or
stos
and
icebp
and
movsb
dec
push
aam
adc
outsl
push
jbe
mov
std
pop
xor
lcall
and
lret
push
ficomps
out
xchg
ss
push
adc
pop
mov
push
insb
fcmovnu
sub
pop
inc
mov
add
sub
call
outsl
adc
fs
test
loopne
push
mov
mov
test
cmp
dec
es
mov
or
dec
ljmp
loopne
int
push
cmp
arpl
dec
adc
out
jp
inc
mov
or
les
fdivrs
mov
add
push
repz
push
cmp
push
push
mov
xlat
cmp
fcmovnb
pop
add
cmp
add
sbb
mov
ds
loop
pop
push
mov
jecxz
push
pop
addr16
insb
ret
ss
mov
pop
push
cmp
add
jg
mov
add
cmp
mov
fwait
ja
sub
xlat
lock
inc
ljmp
icebp
imull
add
ljmp
sub
sbb
mov
sub
jl
jns
dec
adc
xorl
pop
dec
hlt
xor
or
pop
fdivl
je
add
push
aam
add
xchg
out
shrl
fwait
add
jns
add
mov
add
mov
stos
jecxz
cli
fists
js
add
fs
mov
mov
jmp
mov
adc
movsl
jne
fcoml
and
int3
imul
mov
ror
cmpsb
mov
mov
cmpsb
insb
or
insb
inc
mov
lea
rep
pushl
add
xor
test
lcall
dec
dec
and
js
xchg
inc
or
xlat
sub
icebp
mov
int3
inc
xor
ficomps
cmp
cmpsl
jge
mov
mov
jmp
add
dec
adc
fisubl
or
or
fadds
mov
movsb
jns
and
add
or
rcl
adc
mov
mov
dec
outsb
cmp
insb
ret
sub
sub
int3
mov
mov
xor
mov
push
jbe
repnz
mov
jg
fldcw
jnp
add
xchg
mov
pop
jl
add
add
or
and
mov
aad
jo
into
and
outsl
loope
in
in
xor
mov
fdivrl
pop
arpl
clc
sub
inc
js,pn
ljmp
lret
jae
and
call
push
mov
inc
cmp
test
adc
pushf
aaa
pusha
mov
cmp
in
mov
push
pop
sub
mov
sub
aam
std
add
fdivs
push
call
cld
inc
fmuls
jge
out
or
out
ror
test
je
xor
inc
nop
bound
into
fnsave
push
or
cmp
pop
sarb
push
jg
scas
pop
push
mov
insl
inc
mov
dec
jg
test
insb
out
insb
sbb
add
add
mov
jmp
xchg
fsubrl
push
dec
pop
in
fsubrs
sub
int3
adc
adc
test
call
push
or
sti
sub
cmpsb
mov
outsb
movsb
push
cmc
mov
adcb
ret
push
lock
int3
pop
sbb
lods
adc
in
adc
cmp
mov
icebp
aaa
fmull
sub
sub
add
add
pop
mov
jp
rol
add
push
or
mov
pop
inc
ljmp
or
in
aas
shr
xor
sub
test
mov
sahf
std
jbe
push
adc
dec
pusha
mov
and
push
mov
sbb
add
jno
stos
push
mov
addr16
jg
lock
insb
movsl
pop
or
mov
fcmovnbe
pusha
pop
mov
and
sbb
xor
rcrb
dec
pop
xor
rorl
test
lcall
ret
mov
fcoml
es
test
pusha
dec
jne
inc
mov
into
mov
fistl
lcall
pop
js
adc
adc
mov
xchg
xchg
testb
inc
inc
xchg
add
add
sub
push
pop
sub
add
adc
dec
add
in
cld
cs
fnstsw
cmp
cmpsl
test
in
adc
jb
mov
dec
jno
aas
clc
push
int
and
out
rcrb
mov
add
sarl
das
pop
jl
cmp
lods
push
and
imul
outsb
xchg
into
mov
xlat
or
xchg
mov
add
dec
jg
lock
outsb
push
in
addl
sbb
cmpb
sub
cli
cmp
ss
pop
xchg
jnp
lods
fisubrl
or
repz
orb
push
mov
idivl
mov
adc
aad
fisubl
inc
test
jg
adc
lret
test
sub
js
pop
mov
rorb
cmpsb
outsb
data16
iret
lcall
xchg
add
xchg
fidivs
and
adc
aaa
aad
int3
stc
add
or
inc
ficompl
scas
push
sub
out
shlb
cmp
lcall
mov
enter
push
jns
aam
sbb
mov
adc
test
loope
cmc
adc
add
dec
les
rcl
push
and
fcomps
ret
pop
lret
nopl
shrl
in
rorb
loop
add
mov
xor
pop
adc
dec
mov
jns
cmp
psrlw
jp
add
lea
rorl
adc
aaa
mov
in
xor
xchg
lds
repnz
clc
scas
add
xchg
add
popa
data16
or
jbe
adc
mov
test
or
adc
jle
mov
lahf
repnz
js
dec
sub
push
loopne
das
push
stos
sub
jg
jg
xor
push
fildl
fsubr
inc
fsubr
negl
push
jbe
pop
cmp
pop
xchg
lcall
jo
adc
mov
jns
fldl
imulb
aam
pop
fadds
inc
add
or
ss
add
mov
push
es
mov
test
pop
or
out
in
adc
dec
repz
and
sti
hlt
fidivrl
pop
xchg
pop
push
dec
jecxz
mov
mov
mov
fwait
insb
in
sub
rolb
mov
pop
push
loope
fs
jmp
mov
xchg
test
mov
scas
lock
rorl
sbb
xchg
inc
in
push
orl
mov
adc
decl
inc
fidivrs
lahf
cmp
push
js
cmpb
iret
stos
aad
cwtl
jp
mov
sbb
xlat
movsb
sbb
adc
inc
movsb
or
inc
ss
push
jb
push
outsl
les
add
jmp
shll
cmp
in
cwtl
inc
push
fdivl
mov
mov
ret
adc
lcall
cmpsl
jge
or
mov
fidivl
push
popl
mov
xlat
jo
loopne
pop
fwait
sbb
shrb
ja
mov
sub
ljmp
ud0
stos
cltd
mov
cmp
add
outsl
cld
orb
data16
fnstsw
repz
mov
loop
fdivl
sbb
das
dec
lods
movsb
push
mov
sbb
fwait
and
stos
or
shl
add
ljmp
xlat
mov
popa
sahf
pop
jmp
js
push
or
add
xor
insb
xchg
test
jecxz
add
or
ficompl
outsl
das
imul
push
subl
int
outsb
dec
xorl
pushf
cli
xchg
cs
mov
or
push
clc
sbb
or
jo
sub
in
mov
or
subb
and
inc
and
add
stos
jnp
popa
inc
pop
stos
adc
cli
jp
cmp
mov
fadd
mov
inc
sbb
mov
cwtl
nop
mov
lcall
in
movd
xchg
in
jge
jge
cmc
fnstsw
mov
fs
or
lds
mov
adc
js
es
jbe
daa
sbbl
adc
imul
cmp
lcall
or
xor
push
sub
shl
fs
jg
push
mov
cmp
out
movsl
inc
mov
cmpsb
fxch
stos
inc
jnp
jno
cmp
xchg
jp
or
xor
stos
fucomi
xchg
out
xchg
fs
mov
out
add
aaa
mov
cmp
mov
and
ds
pop
in
adc
icebp
push
xlat
add
outsl
push
jns
sbb
ljmp
ljmp
or
loope
adc
push
lods
sahf
sbb
mov
loope
leave
inc
xlat
jbe
mov
stos
rcl
xchg
clc
out
movsb
mov
std
pop
sbb
push
xchg
test
push
sbb
out
or
or
jae
cmp
adc
adc
xchg
daa
clc
mov
push
jl
fbld
fmul
sub
neg
js
mov
mov
xor
mov
js
sarb
fwait
hlt
loopne
inc
adc
mov
push
adc
mov
add
sbb
mov
cli
inc
movsl
add
outsb
insl
mov
jne
in
add
push
cmp
int3
out
cmp
mov
dec
rolb
push
decl
aad
into
cs
icebp
loopne
nop
call
sub
push
mov
inc
push
pushf
cmpsb
push
add
imul
pusha
std
pop
push
iret
cmp
mov
aam
jmp
call
xorl
fs
inc
inc
lods
mov
cli
mov
testb
ljmp
pop
call
insb
sbb
js
jno
scas
lock
xchg
iret
inc
cmp
stos
divl
addr16
repnz
daa
mov
sbb
out
jnp
leave
push
and
mov
mov
jmp
pushl
aaa
jl
cmp
cltd
test
jmp
fwait
ds
bound
loope
mov
outsl
clc
adc
or
das
or
nop
mov
sbb
in
stos
push
adc
les
fisubrl
adc
out
std
or
sbb
bound
ret
jp
xchg
xchg
call
ffreep
scas
xchg
xor
outsl
jnp
loop
push
jle
mov
sahf
call
mov
popa
in
sbb
sahf
out
lods
inc
incl
jecxz
loopne
scas
jle
lea
or
pop
jne
lahf
loopne
div
mov
add
inc
jbe
addl
hlt
sub
sbb
jp
or
daa
fisubl
loop
push
call
jmp
sahf
out
icebp
cli
aas
cs
adc
rclb
jne
outsb
push
sar
push
lea
cld
jns
or
mov
cmc
scas
xor
mov
push
add
je
sbb
popa
sub
loope
mov
dec
xchg
into
shll
jle
shrb
fsubs
pushf
sbb
jle
ds
push
adc
popf
adc
xor
pop
add
fcoml
sbb
clc
ljmp
inc
sbb
pop
nop
fwait
sub
adc
mov
sarl
dec
adc
mov
pop
mov
add
pushf
and
xchg
call
mov
subb
ljmp
enter
fs
sbb
loopne
mov
in
sub
sub
pop
mov
mov
inc
cmp
push
sbb
fcomip
testb
mov
lret
cld
gs
mov
cltd
sbbb
pop
inc
add
testb
cmp
and
in
loop
cmp
lock
pushl
pop
sbb
xor
jbe
xchg
or
jle
int3
mov
or
cli
das
lea
mov
aas
add
sti
push
push
shlb
subb
stos
cmp
jecxz
pusha
stc
xchg
pushf
subl
mov
or
out
lock
popf
or
add
inc
fadds
cmp
je
clc
push
push
pop
fbld
aaa
aam
pop
nop
dec
push
jmp
stc
mov
jbe
cld
or
sub
mov
loopne
push
push
rcrb
and
rcr
fcomps
pop
mov
xor
outsb
xor
pop
outsl
jl
cmp
je
pusha
insb
sbb
call
out
jmp
dec
sub
cld
incl
and
dec
pop
push
sbb
add
cmp
imul
lock
stos
rorl
fadd
cwtl
in
lret
lret
xor
mov
dec
mov
xor
mov
mov
add
pop
push
lods
mov
push
mov
sub
jo
sqrtps
loopne
lcall
add
adc
add
pop
and
and
cmovl
jl,pn
pop
push
lock
incb
lods
inc
shrb
add
pop
add
jg
push
es
xchg
cmc
shl
decl
mov
or
cmp
add
dec
imul
out
ficomps
popw
sbb
ja
or
cmp
out
xchg
and
pop
clc
push
add
and
jmp
pop
popa
dec
test
xchg
sbb
movsb
insl
sub
push
add
sbb
and
sbb
aam
add
fsubs
pushl
cmp
dec
dec
add
mov
movb
ljmp
push
pushl
shll
inc
rcll
pushf
and
xchg
das
cltd
pop
out
inc
pusha
sbb
add
fidivrs
sub
inc
sets
test
cli
mov
out
mov
pop
mov
cmp
inc
adc
test
mov
lock
dec
push
lret
outsl
mov
push
adc
ljmp
or
idivl
xchg
imul
and
shlb
adc
or
pop
add
pop
xor
int
outsl
scas
scas
es
dec
js
mov
jp
repz
out
cmc
sar
cli
dec
mov
xchg
jg
fcomps
fs
test
js
fildll
pop
adc
mov
mov
sub
fs
cltd
xchg
lods
adc
test
cmp
inc
jge
pop
push
adc
enter
jl
stos
pop
loope
fdecstp
or
push
inc
mov
and
mov
stos
mov
cmp
adc
push
mov
ds
icebp
push
pushf
pop
and
push
cs
sub
cmpsb
push
add
lret
sbb
push
out
shr
or
insl
movsb
jle
push
cmp
inc
incb
xor
mov
xchg
call
or
push
rcrl
fimull
test
jnp
mov
pop
adc
and
nop
scas
add
sbb
mov
xor
add
clc
inc
call
outsb
mov
movsb
into
pop
call
scas
mov
mov
fcoms
add
cmpsl
pop
cmp
clc
orb
cli
add
ret
ret
push
shlb
lea
jp
cmpsb
mov
xchg
test
add
xor
ds
pop
scas
push
sbb
jl
dec
stos
ss
sub
dec
pop
mov
adc
dec
in
into
in
jno
les
cli
pop
adc
add
scas
adc
pop
test
cld
aas
and
loope
fadds
or
add
inc
or
sbb
cmp
cmp
pushf
addr16
ret
mov
out
add
aaa
cltd
mov
movsb
mov
fisttps
out
jle
adc
xorl
add
mov
xchg
add
stos
nop
pop
or
jl
hlt
mov
xor
push
jb
cmp
push
cld
sbb
imul
pop
xchg
out
cmp
xchg
outsl
pop
lock
bound
mov
pop
adc
rcrb
sub
lods
rorb
int3
push
pop
mov
add
cli
std
and
adc
add
stos
mov
int3
fcomip
mov
jg
dec
mov
inc
xchg
lea
fwait
lea
popf
sub
push
or
out
sbb
adc
mov
mov
push
notb
xor
add
or
fnstenv
ss
xor
add
insl
enter
mov
adc
pop
aam
fsts
mov
cmp
mov
in
push
push
popa
scas
mov
inc
sbb
ror
push
pop
rorb
ljmp
movb
mov
lock
sbb
and
inc
cltd
jmp
bound
addb
mov
adc
jb
or
test
lret
icebp
out
inc
insb
sbb
ds
cmp
add
xchg
outsb
xchg
pusha
movl
idiv
fiaddl
ret
scas
fisttpll
cmp
and
mov
je
stos
mov
adc
mov
jle
out
movsl
mov
inc
adc
and
xchg
outsb
pop
push
inc
jp
inc
fistpl
icebp
fs
add
adc
sahf
std
add
dec
xor
pop
mov
mov
add
cmpb
insb
cmove
sub
std
jecxz
loope
aam
adc
add
call
jmp
ja
inc
lret
hlt
add
mov
inc
aam
add
call
into
movsl
dec
lods
xchg
push
add
pop
imull
sbb
jmp
incb
loope
add
and
mov
cli
mov
jnp
lods
push
xor
inc
add
pushl
aad
add
add
mov
or
sbb
movsb
loop
jbe
add
ds
jl
repnz
mov
cli
mov
cltd
sub
add
lahf
aad
adc
pop
mov
movsb
push
imul
push
popa
bound
test
in
jo
cmp
mov
test
sbb
sbb
stos
adcl
adc
mov
lea
in
push
addr16
loope
add
lea
and
pop
cmp
test
jmp
push
hlt
mov
push
xor
adc
mov
mov
mov
mov
movsb
test
pop
xchg
shrb
jmp
out
xchg
jg
pop
or
pop
mov
mov
xor
push
mov
sbb
cwtl
sub
ja
add
xor
fs
insl
imul
sbb
mov
dec
or
data16
ds
lock
jle
sub
ja
shrb
icebp
repnz
sti
in
xor
mov
pop
xchg
test
mov
sub
mov
popf
add
mov
aam
bound
aad
cli
adc
test
sbb
mov
jp
and
xor
int3
dec
mov
mov
pop
dec
jne
mov
rep
test
mov
arpl
inc
xor
loop
inc
mov
sbb
clc
bound
pop
ficoms
dec
jae
jg
sbb
pushf
pop
xor
cmpsl
and
pop
mov
push
push
push
les
enter
mov
mov
mov
movsb
movsl
push
lods
push
or
jmp
adc
fwait
jo
add
jge
jbe
fnsave
xor
loop
mov
or
add
dec
xchg
outsb
sub
fisubs
popf
xchg
les
lea
and
push
inc
aaa
inc
js
stos
aaa
push
jmp
je
pop
pop
adc
aam
adc
jp
pop
add
cli
test
call
sbb
adc
stos
pop
push
mov
lods
push
and
and
shrb
adc
xor
cmp
mov
test
add
and
test
mov
xchg
sub
jmp
cmp
test
inc
clc
jecxz
push
adc
adc
in
cmpsl
scas
aad
aas
stos
lret
adc
mov
jns
sub
outsl
pop
shlb
mov
xchg
scas
notb
popf
ss
in
push
cmpsl
stos
stc
clc
cli
mov
loopne
aas
dec
fcmove
insb
cmp
rcr
add
mov
push
insl
jb
add
movsb
push
inc
and
jne
loope
fidivl
mov
jl
add
sub
cmpsb
mov
mov
insl
orl
mov
sahf
out
cmp
out
jnp
movb
incl
xchg
push
test
add
sub
daa
cmpl
out
std
fwait
mov
push
sbb
jge
loopne
xchg
push
inc
sahf
mov
scas
mov
or
repnz
cmpsb
mov
mov
mov
pop
xorb
xchg
fistpl
push
clc
test
je
dec
xchg
fldl
repnz
sbb
sub
dec
ss
scas
leave
dec
or
scas
xorb
in
xchg
cli
pop
data16
fwait
or
jae
std
hlt
into
call
push
mov
add
stos
xor
push
xchg
movsl
iret
push
sub
lock
pop
pop
les
in
adc
xchg
push
nop
jmp
pop
lcall
jnp
fistpl
mov
sub
mov
inc
or
ficoml
xorb
add
stos
mov
in
push
nop
xor
push
sbb
clc
popa
adc
iret
call
sub
mov
inc
jmp
pop
jl
icebp
xor
std
mov
push
bound
add
aaa
mov
jg
sub
add
mov
jmp
out
mov
mov
and
mov
push
imul
sbb
add
push
cmp
gs
xchg
cwtl
push
adcl
mov
jg
pop
std
adc
jno
pop
aas
inc
mov
add
imul
push
movsb
push
fists
xlat
push
cmpsb
out
jnp
jbe
outsb
in
adc
dec
loopne
or
mov
jno
js
add
inc
xor
mov
add
and
fmul
dec
xchg
cli
ljmp
mov
ljmp
xchg
jb
out
mov
mov
shlb
stc
pop
pop
mov
std
cmp
jo
inc
insb
fcmovnu
xchg
add
incl
push
dec
adc
push
pop
sti
adc
shlb
in
jmp
test
pop
add
ljmp
dec
push
std
rsm
xchg
fmul
out
stos
add
sbb
fchs
scas
inc
adc
xchg
sbb
pop
add
adc
stos
jo
inc
sti
sbb
pop
or
sub
add
push
pusha
xor
outsb
jae
bound
les
inc
test
fildl
mov
jo
push
nop
in
cld
xorl
inc
mov
push
lds
push
mov
mov
dec
add
roll
and
daa
mov
nop
xor
cmp
ljmp
aam
pop
pushf
cmc
sbb
fimuls
repnz
mov
fisttps
mov
jmp
push
filds
aam
lods
es
sub
mov
ret
push
and
jae
or
add
jae
jg
incb
mov
into
add
es
shlb
sbb
sti
push
inc
sbb
hlt
and
pop
mov
inc
mov
dec
pop
test
xchg
xchg
sub
sub
pushl
lea
cmc
repnz
jmp
mov
outsl
push
fs
sti
and
pushf
add
sub
mov
sub
loop
and
out
out
rclb
movsl
lock
pop
imul
cli
mov
mov
add
fbstp
rcrb
fsubrp
insl
sbb
jne
scas
mov
jp
adc
das
clc
cmpsb
and
pop
pusha
call
sarb
add
pop
push
fdivr
fwait
gs
vpslldq
mov
icebp
push
adcl
es
pusha
sbb
shlb
rcrl
incb
lock
pop
jmp
ds
ljmp
sbb
ds
mov
cmp
in
mov
cmpsb
adc
dec
mov
adc
insb
jecxz
mov
mov
add
enter
bound
ret
jb
xor
lret
stos
dec
sbb
lods
and
mov
lods
inc
mov
mov
push
addr16
nop
push
sbb
sbb
lcall
cld
or
mov
aad
pop
insl
push
xor
pusha
movl
enter
sahf
jecxz
icebp
mov
mov
sbb
loop
sahf
sbbb
push
in
xchg
iret
in
mov
ljmp
sub
call
js
in
outsb
les
adc
dec
sub
mov
mov
pop
ds
ss
and
iret
mov
js
mov
adc
push
pop
xchg
or
iret
bnd
lret
xchg
mov
cmc
mov
icebp
mov
lret
out
push
loope
aad
subb
add
push
jecxz
jecxz
sbb
and
movsb
jno
cmpb
pusha
int3
mov
repz
in
inc
jge
stc
lret
into
lcall
and
stos
das
or
push
mov
dec
bound
push
fnstsw
rcrb
sub
pop
incl
push
mov
popf
cmp
ret
mov
dec
jecxz
and
push
add
dec
sbb
outsl
cmp
pop
mov
jae
sbb
loop
xor
inc
sbb
mov
mov
shlb
lock
loopne
fwait
pop
fcmove
popl
jle
test
push
stos
add
lock
aas
mov
dec
pop
and
adcb
mov
jl
testb
sub
in
or
cmp
push
pusha
cmp
mov
pop
cs
popa
movb
lret
push
lock
xchg
add
mov
inc
jl
mov
jl
adc
nop
inc
movsb
les
adc
les
jae
mov
push
mov
and
decl
push
sub
cli
mov
push
aaa
into
jne
jmp
test
decb
icebp
int
xor
push
orb
cmp
xor
mov
push
cmpsb
rcrl
push
pop
push
in
cmp
add
or
push
stos
xchg
and
ja
push
jae
or
push
cmc
add
pop
push
adc
data16
adc
cmpsl
bound
mov
or
loopne
cwtl
push
jecxz
add
mov
adc
ljmp
test
sub
inc
or
hlt
jbe
add
fcoml
call
jb
xchg
inc
ds
or
cmp
mov
lahf
inc
dec
pop
scas
mov
mov
inc
jnp
cmovb
sti
test
movsb
push
xor
mov
in
test
jp
fisttpl
jle
call
cs
fldenv
jl
cbtw
stos
dec
mov
sbbl
outsl
rorb
dec
js
adc
fsts
repnz
push
mov
inc
decb
sbb
inc
test
shrb
movsb
je
sub
inc
inc
sub
shlb
push
jnp
jecxz
xor
inc
push
decb
xor
xlat
add
pop
je
sbb
dec
clc
add
int3
mov
div
out
outsb
inc
add
adc
add
and
dec
mov
mov
dec
mov
nop
xor
fisttpll
sub
in
data16
ss
inc
dec
jg
mov
inc
scas
mov
cmp
cmp
xor
test
push
in
inc
mov
lock
lcall
ds
push
into
sbb
or
pop
add
add
xlat
xchg
and
in
adc
dec
divb
sarb
xlat
lret
fildll
cmp
add
or
mov
pushl
testl
xlat
jmp
and
lock
mov
ret
mov
aam
mov
ret
push
in
add
clc
imul
sbb
mov
or
add
ret
adc
pop
cs
cs
fistl
mov
sbb
jb
push
push
mov
test
pop
mov
sbb
add
popf
mov
ret
mov
dec
mov
iret
inc
rolb
js
dec
xchg
dec
clc
pop
sbb
js
dec
jmp
aam
call
inc
add
push
call
test
cs
pop
pop
push
mov
sub
cmp
xlat
testb
sbb
cli
bound
in
rclb
push
cld
pusha
jg
jmp
mov
ret
xchg
push
les
mov
adc
ljmp
cmp
xchg
fstpl
mov
out
fs
cld
mov
cwtl
outsb
inc
mov
adc
sbb
out
mov
das
jp
xchg
ret
addb
int
fisttpl
cmp
data16
mov
rclb
test
div
add
rolb
inc
call
and
scas
imul
test
mov
fisubs
push
mov
loope,pt
add
cs
jno
icebp
mov
xchg
sbb
loopne
sbb
inc
fadds
loop
inc
inc
and
add
jg
pop
jo
add
inc
ret
pop
imulb
add
mov
jmp
in
adc
inc
jnp
les
mov
mov
mov
cltd
jns
jle
add
cli
add
xchg
movsb
into
clc
xor
in
push
xor
push
add
hlt
addb
xor
int
mov
dec
xor
in
sub
cmpsl
add
push
mov
popa
dec
push
lods
cmp
pop
cld
adc
cmp
xchg
aad
jmp
icebp
pop
xor
rcll
sub
cwtl
pop
lret
lret
pop
cwtl
shll
push
jmp
out
sbb
sub
jbe
pusha
push
jbe
icebp
lahf
scas
add
sti
push
sbb
aam
mov
pop
scas
xor
push
mov
lods
add
xchg
or
ret
mov
xchg
std
leave
sbb
and
aaa
or
sub
push
mov
xchg
dec
add
and
dec
bound
in
add
push
sub
adcb
lods
cli
xor
cmp
jmp
scas
inc
mov
push
push
add
sub
xchg
scas
sbb
adc
loopne
addb
adcl
xchg
movsl
test
push
cmpsl
fists
jbe
lock
cmp
inc
jl
adc
sti
andl
jg
decl
xchg
dec
idivb
inc
fisubrs
xor
ficompl
add
cli
pushf
xor
mov
mov
ss
rorb
sti
and
sub
rcpps
lcall
dec
sub
pop
xor
int3
sub
call
cld
jg
clc
pop
aad
aam
or
cmp
addr16
incb
or
imul
adc
pop
rclb
movsb
aad
cli
add
insl
jmp
ret
lods
add
test
add
mov
pop
gs
pop
andl
push
shrb
sub
pop
aaa
push
inc
mov
and
dec
push
fcomps
jno
mov
jl
pop
inc
sub
fiaddl
push
test
or
test
push
xchg
mov
sahf
test
mov
test
es
inc
jl
fdiv
loopne
mov
add
push
outsb
jbe
jecxz
and
or
fcompl
push
push
cli
and
add
les
push
clc
insb
outsl
ja
pop
xchg
push
push
sahf
mov
loop
bound
xchg
movsb
xchg
movsl
dec
push
push
fs
sub
mov
pop
jp
add
pop
inc
sbb
fwait
movsb
inc
xchg
rorb
jmp
mov
out
xchg
sbb
jnp
mov
xchg
and
jo
xchg
dec
ljmp
ret
push
or
pop
inc
je
rcl
and
xor
aam
repnz
test
cmc
dec
dec
xchg
jp
push
adc
leave
es
add
jbe
cmpsb
pushl
push
xchg
popa
pop
int3
js
cmp
sub
decl
ret
lcall
imul
jl
or
and
into
push
mov
add
fimuls
lods
arpl
sub
sbb
mov
das
mov
dec
ljmp
xor
out
ret
inc
add
mov
jns
jbe
jge
xor
pusha
push
jl
and
lock
xchg
adc
cmp
inc
test
lods
pop
shl
inc
mov
test
push
jbe
in
dec
sbb
popf
xchg
aam
sbb
add
mov
add
pop
gs
sub
inc
cmp
fistps
ds
nop
dec
jp
cmpsb
and
aaa
mov
pop
js
dec
inc
sbb
jg
scas
jg
mov
test
mov
loopne
add
aas
scas
cmp
in
cmp
loope
les
mov
sub
inc
cmpsb
pop
jg
shl
in
fldl
clc
add
out
adc
push
mov
xchg
push
push
mov
fistl
mov
or
xchg
mov
scas
lcall
bound
jge
pop
inc
leave
lock
insb
lea
stos
sbb
js
sub
add
insl
sub
mov
pop
dec
pushf
imul
loop
mov
adc
fisttpl
lock
push
sbb
inc
push
dec
fs
ret
test
jmp
fldl
jae
push
mov
mov
xor
testl
ret
loop
mov
out
repnz
fisttps
inc
cmp
pop
sbb
mov
sbb
rolb
dec
aam
insb
jg
cmpsb
add
outsb
movsb
xorl
mov
lods
pop
push
mov
test
mov
xchg
nop
mov
fcoms
enter
pop
sahf
mov
scas
inc
mov
xor
pushf
sarb
ljmp
cmp
xchg
outsb
cltd
xchg
sbb
sbbl
jae
xor
lahf
jmp
mov
jle
ret
pop
icebp
std
out
xchg
mov
fldl
mov
push
dec
add
es
mov
sub
loopne
imul
push
xor
flds
sub
subb
mov
ljmp
movsb
out
jae
daa
add
aam
in
outsl
mov
mov
pop
push
jmp
mov
das
adc
mov
adc
mov
data16
loop
mov
je
add
jb
jle
sti
push
dec
stos
orb
and
push
adc
js
out
cmp
mov
in
gs
sbb
out
pop
mov
mov
cwtl
jmp
adc
mov
popf
mov
add
cwtl
jo
addr16
fdivr
dec
dec
fbld
ds
filds
iret
mov
cmpsb
lcall
xchg
push
sub
inc
adc
fnstcw
mov
add
cwtl
pushf
mov
jle
fadds
mov
test
mov
out
push
add
pop
cs
pusha
inc
dec
hlt
cs
loopne
ljmp
xchg
and
call
mov
outsb
fwait
aas
popf
pop
pusha
orl
adc
cmpsb
lods
lock
sahf
xchg
xchg
decb
ret
test
mov
or
or
call
rclb
add
lea
push
adc
jnp
pop
adc
or
stos
rclb
fidivrs
and
jnp
fists
outsb
popa
pushf
divl
mov
ficoml
lds
dec
or
pop
neg
push
out
xchg
test
push
or
inc
repz
into
jle
mov
jl
rcll
push
or
or
push
les
jne
push
pop
test
xchg
loope
aam
rcrl
mov
mov
jle
test
les
pop
xchg
or
sub
or
jge
cld
inc
lret
and
xchg
pusha
sti
notb
fiadds
ss
das
pop
add
or
into
aas
mov
ret
dec
inc
mov
scas
shlb
arpl
cld
and
sub
neg
xchg
push
mov
push
pop
icebp
sbb
ret
adc
test
outsb
xchg
or
sbb
sbb
call
and
add
ret
scas
sub
inc
cld
in
aaa
sbbl
push
mov
push
mov
fsubl
dec
xor
push
or
xchg
push
in
xor
aam
insb
sub
mov
jmp
pop
fidivl
hlt
dec
add
cmc
jae
int3
ja
push
fxch
cld
out
fs
addb
ret
inc
faddl
dec
add
repnz
mov
cmpl
mov
push
cmp
mov
sbb
mov
mov
xor
sbb
mov
lds
lock
les
es
adc
xor
scas
and
fldcw
adc
lock
js
rcl
xchg
cmp
mov
ds
mov
sti
and
mov
sub
push
pop
inc
jmp
mov
cld
add
icebp
adc
and
jmp
cwtl
jecxz
cmpsb
push
mov
dec
push
cmc
push
push
sub
aad
adc
fdivrl
mov
sbbl
add
data16
xchg
in
mov
sbb
inc
cmp
ds
clc
push
and
inc
mov
into
jne
jmp
jl
movsl
add
push
mov
dec
fbstp
ja
ljmp
push
mov
out
push
xchg
or
add
sbb
dec
mov
dec
orps
es
dec
adc
repnz
mov
sub
cwtl
icebp
mov
push
iret
ftst
pop
jnp
mov
push
and
or
hlt
andb
jp
add
inc
repz
inc
jecxz
lods
dec
mov
sbb
jl
pop
pusha
mov
jmp
fadd
mov
dec
mov
hlt
stos
cmp
mov
out
lret
into
add
loop
pop
movsb
mov
or
icebp
mov
xor
inc
adc
jle
data16
int
add
push
aad
mov
dec
in
push
mov
mov
push
sub
and
lds
xor
mov
push
mov
sbb
rclb
inc
and
sarb
inc
lret
jmp
mov
ss
stos
or
popf
inc
xor
dec
fwait
xor
xchg
mov
and
in
pushl
sub
jg
roll
sub
sbb
ljmp
out
lock
movsb
sub
mov
out
imul
je
and
adc
push
jg
and
push
jno
icebp
xchg
mov
clc
lock
and
in
add
mov
push
mov
adc
clc
mov
inc
repz
ret
cmp
js
or
mov
shll
roll
popa
and
pop
push
call
adc
pop
test
insb
lcall
push
rcr
int
lock
inc
add
stos
aas
dec
outsl
fimuls
std
sbb
add
jecxz
je
mov
xlat
fwait
push
scas
les
mov
cmp
mov
xor
pop
icebp
jg
testb
call
pop
sub
jmp
jle
mov
mov
mov
pop
push
outsl
addb
out
xchg
pop
or
cmp
les
and
mov
mov
inc
or
pop
shrb
loope
in
js
dec
sbb
xchg
pop
in
cld
aad
cli
or
push
mov
in
aaa
dec
lods
fiaddl
inc
or
dec
int
push
les
or
and
sub
mov
mov
pop
pushl
mov
lods
sbb
les
adc
or
xchg
test
sbb
out
popa
adc
push
xchg
loope
cmc
cmpl
daa
ret
pop
jne
ss
adc
movsl
xor
pop
mov
cmp
aam
movb
cli
dec
lods
mov
mov
adc
roll
mov
pop
hlt
pop
lret
mov
push
fwait
add
add
fmull
pop
mov
lcall
sahf
mov
fnstcw
in
lahf
and
adc
adc
cmc
jb
push
idiv
pop
push
or
dec
loopne
cmpsb
cmpsb
outsb
pop
addb
jnp
adc
dec
lock
inc
and
dec
sbb
and
cmp
inc
loope
and
lods
xchg
sbb
jb
sub
mov
xchg
xchg
sub
outsl
dec
jmp
sahf
es
add
idivl
call
sbb
orl
mov
lcall
sub
xchg
mov
aaa
orl
andb
inc
fst
jg
xlat
add
cmp
lcall
inc
aad
jecxz
ja
mov
or
sbb
stos
adc
or
push
jge
cmp
mov
inc
in
push
xorb
add
jp
xchg
ret
aas
pop
xchg
mov
or
xor
mov
arpl
push
inc
push
mov
add
pop
push
or
mov
inc
jo
or
push
and
jns
inc
xchg
stc
add
fs
insb
les
mov
dec
inc
ljmp
xor
sbb
jne
or
lcall
xlat
push
rclb
push
pop
int
sub
jle
push
jg
stc
outsl
les
dec
test
jae
pop
ret
or
push
in
cmpsb
push
aam
sub
bound
add
jmp
cmc
xor
adc
stos
adc
or
sbb
lcall
icebp
les
bound
repnz
sbb
loopne
sahf
lock
addr16
and
push
dec
sbb
push
icebp
imul
orb
bound
pop
add
add
sub
test
push
mov
lock
jle
sbb
repnz
push
ja
jg
cli
pop
and
inc
mov
imul
sbb
add
dec
ficomps
push
fsubrl
or
into
test
cmp
jae
or
iret
xor
popf
pop
pusha
jl
sbb
push
test
mov
aam
push
hlt
cmpb
dec
sub
lcall
pop
sbb
and
rcll
mov
push
subl
fmuls
sub
add
scas
out
jo
in
jo
sub
ljmp
push
mov
cwtl
mov
xchg
mov
or
push
sbb
test
loopne
inc
pop
shlb
dec
je
test
lods
shrl
pop
or
mov
loopne
push
sbb
scas
mov
hlt
rcrb
mov
xchg
sbb
jo
sub
shll
xor
nop
jno
mov
loop
pop
cmp
clc
mov
int3
inc
imul
xchg
mov
fadds
aam
xchg
mov
hlt
leave
aaa
outsb
shrb
xchg
fistl
data16
mov
adc
cmc
scas
out
mov
xchg
mov
and
stos
and
aas
cmpsb
and
je
add
fldt
cmpsl
clc
rol
cmpl
test
xchg
or
xlat
dec
sub
jg
xor
popf
mov
cs
push
or
mov
jbe
sahf
push
adc
mov
mov
add
aas
std
loopne
sub
cmp
shrl
adc
or
xlat
jmp
sbb
insb
and
mov
push
pushf
enter
pop
xchg
dec
xchg
sbb
jg
lret
fs
lds
pop
jmp
nop
mov
xor
inc
insb
shrb
ret
push
lock
jb,pn
fildll
mov
inc
dec
inc
pop
add
mov
rolb
inc
xor
sahf
mov
sahf
jg
push
jo
mov
je
jl
jl
loopne
rclb
movsl
jge
nop
loop
push
hlt
pop
xchg
push
or
push
inc
sti
aaa
dec
jbe
dec
test
xchg
rcll
pop
cld
cli
xor
sti
adc
pop
or
sbb
pop
adc
jo
mov
add
dec
fdiv
insl
mov
sbb
shll
sub
sub
mov
lock
fsubp
add
enter
clc
aaa
test
xchg
sub
push
popa
jns
pop
mov
cmpsb
or
dec
test
jo
js
mov
mov
jmp
into
push
push
das
call
pop
test
jb
pop
popl
cmpsl
jo
stos
js
sbb
outsb
mov
jecxz,pn
test
push
pop
push
in
jbe
fs
mov
push
and
push
and
insl
test
jecxz
xchg
rorb
mov
test
fdivr
stos
dec
aad
push
xor
push
popl
add
mov
fnsave
lods
popf
mov
pop
xor
add
test
je
adc
ret
movb
sarl
lock
inc
push
insb
pop
jmp
mov
stos
pop
fists
addr16
or
mov
and
or
fs
sub
fcmovu
aas
fcoms
jle
fdivp
push
cmp
data16
pop
cmp
adc
mov
jmp
xchg
mov
inc
dec
test
das
popf
add
hlt
das
cli
mov
add
cmp
and
adc
lcall
push
in
and
mov
or
popf
pop
bnd
mov
sti
ret
fs
cmp
xor
addr16
je
jo
inc
ljmp
jle
fsubrs
sahf
mov
xor
dec
dec
inc
cmp
ja
sbb
cwtl
mov
cmc
in
and
test
shl
xor
adcb
ja
pop
mov
mov
push
adc
outsl
jg
add
push
mov
movsl
adc
fwait
xchg
out
ret
mov
cmp
std
or
mov
push
insb
shlb
jno
arpl
sbb
das
imul
xchg
cli
and
pop
ret
ficomps
mov
mov
mov
inc
jl
jecxz
loopne
repnz
lds
filds
mov
adc
stos
cmp
pop
imul
bound
pushf
roll
mov
call
jbe
add
pop
loopne
jo
ret
xchg
call
test
in
aaa
std
mov
dec
decl
mov
out
test
sbb
lea
pop
mov
cwtl
add
mov
lea
fcomps
push
sub
ljmp
ret
mov
push
push
sbb
or
loope
mov
repnz
adc
mov
cmp
vmovaps
sub
int3
cli
dec
jmp
test
addl
ret
inc
and
mulb
std
or
aaa
push
pop
jmp
test
xor
clc
jg
cmp
xchg
jo
xchg
add
jno
shll
enter
add
mov
sub
sub
xor
sub
incl
insl
aam
fildll
dec
cld
das
js
dec
cwtl
imul
add
ja
mov
adc
aas
xor
add
loope
in
punpckhdq
shll
mov
test
mov
pop
test
and
mov
loope
sbb
sub
push
sub
cli
or
movsl
dec
xchg
daa
or
mov
cli
push
lcall
sbb
loop
dec
mov
pop
fcmovnbe
in
mov
mov
push
ljmp
mov
jbe
pop
lock
test
clc
idivb
push
cmp
and
bound
mov
mov
sub
stos
mov
mov
ljmp
out
sub
adcl
clc
push
push
xchg
pop
mov
cmpsb
aaa
cld
subl
int
cmp
outsl
add
sbb
sbb
fwait
xor
aam
sbb
jae
or
test
imul
sbb
fstpt
cmpsb
and
loope
sbb
pop
icebp
mov
xchg
sub
out
mov
ret
dec
cltd
mov
xchg
xor
out
sbb
and
xchg
leave
shll
out
xchg
cmpsb
jne
add
jp
push
shrb
cmpsb
add
scas
hlt
pop
cli
out
cli
aas
in
jbe
shrl
mov
mov
sbb
in
mov
addr16
lcall
push
add
add
mov
inc
clc
mov
repnz
rorl
clc
sbb
sbb
rcll
aas
dec
in
cmpb
mov
imul
push
loop
push
or
or
insl
add
lcall
lock
xchg
jg
jecxz
movsl
sub
aam
xchg
and
inc
jnp
add
cmp
mov
jmp
fisubl
and
ffree
mov
cld
add
cmc
mov
mov
jg
pop
movsb
popf
push
and
mov
stos
xchg
adc
ljmp
xchg
sub
sub
sub
in
shrl
add
sub
xlat
push
jmp
and
xor
mov
and
dec
dec
scas
cmpsl
repnz
cmpsl
cmp
mov
xor
out
pop
pop
jne
pop
mov
out
ja
call
mov
xchg
out
lods
push
adcb
jno
sub
incb
pop
or
xchg
ljmp
mov
xchg
pop
sbb
sti
es
ss
scas
test
std
push
adc
and
push
enter
push
fdivrl
sub
aam
dec
movsb
mov
aad
cmp
and
xor
fmuls
push
fcompl
add
clc
or
aaa
ret
out
addb
lods
popa
mov
mov
or
stos
push
cwtl
sbb
mov
sub
in
in
jbe
mov
cmp
incb
cld
xchg
mov
sbb
xor
loopne
rcrb
mov
lock
adc
mov
cld
dec
iret
and
or
in
icebp
xchg
xchg
pop
dec
jo
add
inc
mov
or
sub
scas
arpl
sbb
ljmp
push
scas
clc
aad
lea
sbb
rcll
pop
fadd
inc
cli
adc
outsb
xchg
or
pop
andb
push
mov
xchg
data16
popa
mov
cmp
xchg
test
aaa
rcrl
mov
jge
cli
enter
jle
sbb
xchg
add
clc
mov
dec
stos
add
inc
or
inc
cmpsb
lret
push
xlat
mov
sahf
lcall
fistl
add
mov
pop
loope
adc
xor
nop
lods
inc
and
xchg
pop
mov
inc
lret
add
add
clc
sbb
loope
cmpsb
out
cmp
cltd
pusha
jmp
ljmp
shrb
jmp
out
arpl
mov
dec
loopne
lea
or
loop
call
dec
xor
mov
cs
lock
imul
lock
and
nop
push
pop
add
jbe
sub
insb
ja
xor
loop
or
pop
test
je
dec
outsb
sub
insl
push
popa
add
cmp
push
xor
jg
pop
sub
xor
bound
jg
std
push
pop
jg
and
jbe
andb
repz
loop
sbb
jns
incl
pop
adc
clc
mov
sub
jne
shrb
fisttpll
mov
insb
or
pop
jp
add
sub
pop
adc
jg
mov
popa
add
fldl
mov
hlt
xorb
scas
es
mov
xor
decl
cld
mov
pop
add
rcrb
test
and
jg
out
push
lret
xorb
fstl
aas
divb
fistps
out
inc
cld
cmp
pushl
inc
out
subb
push
std
shrb
pop
inc
adc
jl
imul
jo
pop
mov
dec
xchg
lcall
fnstsw
pop
sbb
insb
outsl
and
push
aam
insb
or
push
jp
jmp
or
xor
jmp
fcmovbe
ds
sub
or
outsl
fmuls
adc
push
sub
stc
add
sub
push
rolb
add
fiaddl
push
lahf
pop
rol
push
test
mov
adc
push
loope
push
xchg
loopne
and
inc
sbb
inc
push
mov
inc
cli
aam
les
dec
inc
addb
test
fs
mov
xor
inc
add
decl
imul
std
xlat
shrb
mov
or
insl
sbb
or
mov
mov
fwait
gs
sahf
jns
cld
mulb
mov
call
bound
out
add
xor
mov
pop
adc
loopne
test
test
jecxz
jno
add
fs
fists
int
cmc
repz
lcall
push
adc
lock
mov
ret
inc
std
test
add
sub
shrl
jge
pop
sub
cmp
jmp
pop
inc
add
mov
inc
and
repz
mov
in
fxch
in
cmp
jp
or
push
sar
mov
gs
jle
xor
and
je
xchg
iret
and
push
mov
jbe
xchg
aam
decb
and
mov
int
aas
js
inc
icebp
mov
hlt
jp
push
add
mov
icebp
xor
outsl
xchg
mov
xor
sarl
pop
mov
dec
nop
sarb
add
or
or
push
fidivs
mov
pushf
pop
ret
xchg
aam
mov
inc
loope
mov
in
jb
sub
fisubrs
into
xor
add
push
pop
insb
xchg
xor
jb
add
pop
cmpl
jge
in
ljmp
loop
sti
iret
test
loop
dec
cld
xchg
jl
clc
jne
sub
repnz
shl
js
xchg
js
inc
add
xchg
jbe
outsb
pop
ljmp
dec
bound
cmpsl
lea
xor
leave
loopne
incl
jg
imul
lea
add
loopne
add
icebp
xchg
test
add
mov
inc
xchg
inc
lea
pop
cwtl
xchg
mov
adc
jne
mov
xor
and
mov
ljmp
mov
icebp
mov
incl
ljmp
inc
mov
dec
fists
roll
add
mov
insb
and
gs
daa
cmc
pop
cld
bound
imul
mov
sub
pushf
inc
test
xor
loop
imul
sub
mov
jo
orb
lret
inc
lock
or
orl
daa
nop
sbb
inc
movsl
push
inc
bound
call
fnsave
jle
lods
mov
mov
adc
jg
and
push
sahf
or
or
add
and
mov
movsb
jmp
xorb
push
jbe
arpl
pop
add
adc
pop
or
xchg
out
add
ja
add
jnp
push
fildll
incl
iret
jae
xor
add
and
aam
mov
xchg
out
mov
mov
push
leave
cmp
call
pop
call
test
test
and
xor
push
enter
mov
lea
les
popa
sbb
sbb
pop
rorb
sub
test
mov
pop
cwtl
add
cld
add
mov
test
xchg
test
mov
cmpsb
pushf
jg
mov
sarl
std
pop
pop
in
fwait
cmp
dec
inc
clc
aad
ret
popa
imul
out
mov
jmp
cmc
add
cwtl
xor
nop
jl
faddl
sahf
add
push
dec
rorb
ret
inc
sbb
push
call
cli
popf
add
mov
add
lds
or
std
data16
mov
aam
push
test
clc
inc
test
fistps
mov
loope
lcall
fsubl
mov
nop
ret
add
inc
mov
pop
mov
pusha
bound
inc
dec
cli
icebp
ja
sbb
lret
mov
push
and
or
adc
in
adc
cmp
negb
dec
insl
repnz
adc
sbb
add
pop
sbb
hlt
jg
cmpsl
push
sbb
xor
mov
js
jo
mov
ret
les
mov
scas
mov
cwtl
inc
fnstsw
jo
shrl
push
add
fdivrl
mov
and
rorb
mov
ss
inc
test
adc
sub
loopne
push
sbb
xor
clc
pop
repnz
shl
sbb
mov
popf
testl
cld
ljmp
lods
mov
inc
mov
out
adc
lock
ret
mov
inc
pop
ret
sub
pop
push
data16
or
or
fsts
sub
sti
lds
mov
out
nop
cmp
nop
stos
xchg
pop
fs
cltd
mov
push
loopne
pop
push
pushl
xchg
add
sbb
lahf
xchg
mov
pop
add
aaa
inc
xchg
mov
loope
sub
clc
rcrl
aad
pop
add
or
fsts
inc
and
mov
push
mov
adc
sbb
test
jg
pop
call
fisubs
insb
dec
push
or
push
lcall
push
fcmovbe
jl
push
mov
mov
add
jp
push
or
add
jmp
mov
out
mov
leave
mov
addl
mov
xor
aam
pop
mov
aam
loope
inc
pop
pusha
xor
adc
ret
jo
aaa
lods
sub
and
inc
and
andb
ljmp
bound
sub
push
mov
lcall
or
lea
or
fwait
rcrb
push
xor
inc
fisubs
shrb
push
mov
mov
mov
inc
mov
ds
lods
pop
test
push
mov
fadd
sbb
pop
mov
xchg
push
pop
in
ret
mov
jp
mov
or
test
jg
dec
sbb
sbb
js
mov
sub
pop
pshufw
cmpsl
clc
loope
mov
ljmp
sbb
pop
xchg
pop
fs
mov
dec
or
sarb
push
cmc
mov
in
add
movsl
fmul
ficomps
jp
push
xor
dec
int
in
sub
or
ljmp
cmp
adc
inc
add
jl
inc
pop
lods
inc
dec
aas
jo
mov
call
ret
jo
mov
int3
orl
notl
mov
or
push
idivb
jmp
loopne
je
icebp
push
sbb
sbb
out
out
test
les
adc
enter
sbb
push
cmpsl
cld
xor
sbb
test
popl
pop
enter
add
test
std
jo
xchg
mov
int3
insl
cmp
or
stos
cmpsb
mov
in
outsl
xchg
and
adc
fcmovbe
loopne
jp
push
xchg
cs
inc
sarb
les
ljmp
jb
enter
sub
xchg
xchg
add
push
pop
or
dec
pop
and
pop
lcall
pop
sti
loope
or
repnz
das
fimull
inc
jb
lock
sub
jmp
push
dec
incl
mov
cmp
mov
sub
sahf
vaddsubps
loop
or
inc
or
lahf
decb
fwait
inc
mov
fdivs
rorl
bound
shll
sub
ss
test
and
cld
outsl
cs
movsb
inc
lahf
shrb
and
mov
adcl
add
or
int
mov
iret
outsb
bnd
sub
adc
dec
int
xor
test
call
inc
xchg
out
jno
std
pop
stc
push
inc
cmc
push
pop
push
rcr
shrl
pop
cs
add
mov
test
in
mov
cwtl
add
mov
pop
mov
xor
mov
in
sarb
aad
push
cmp
add
repnz
or
clc
fwait
popa
sub
lcall
hlt
inc
sar
mov
add
mov
mov
jecxz
lcall
add
jbe
pop
pop
cli
pop
es
pop
shl
add
loopne
adc
mov
dec
or
cmpsb
jecxz
dec
mov
push
add
pop
mov
jle
or
adc
fisubs
sbb
outsb
lret
xor
add
pop
and
sahf
add
shrb
sti
pushl
lcall
orb
or
mov
or
mov
fs
xchg
xor
or
push
orl
xchg
inc
loopne
ja
clc
inc
or
sbb
lock
jle
and
orb
call
pop
mov
dec
shrb
inc
add
insl
sti
fildl
push
ret
mov
ss
add
or
hlt
sub
js
sti
sbb
sub
icebp
add
inc
les
push
mov
dec
mov
xor
jae
mov
scas
jno
out
sub
std
sidtl
inc
cmp
xchg
add
rolb
jne
push
sub
sub
mov
out
test
add
and
mov
or
and
fimuls
push
inc
outsb
les
mov
pop
mov
ss
dec
lahf
cmp
ss
jno
pop
push
sbbb
jno
mov
lock
inc
mov
ret
clc
loopne
ret
shll
movsb
fs
or
and
pushf
ljmp
and
ret
cmpxchg
ds
jecxz
test
dec
je
les
cmpsb
mov
add
jg
pusha
push
push
pop
pop
les
push
in
popa
orl
cmpsb
mov
pop
gs
push
out
test
jecxz
lods
cmp
adc
leave
push
lods
in
sbb
or
push
push
roll
add
jmp
mov
les
or
aaa
add
xchg
jo
movsl
inc
std
mov
gs
fs
bound
cmc
sarb
mov
and
lret
cmp
cmpsl
add
sbb
inc
sub
jb
outsb
call
dec
jb
pop
mov
loop
mov
cmp
xchg
test
jno
aas
ja
int
cli
and
sbb
outsl
mov
popa
shll
data16
mov
and
or
ljmp
or
mov
xor
sub
fcmovnb
mov
loop
add
jg
sub
sbb
sub
inc
icebp
setb
xor
and
into
roll
clc
adc
jle
jne
and
xchg
loopne
cs
ljmp
sbb
push
jmp
xor
lret
add
mov
push
pop
insl
fisubl
cld
stos
outsb
push
lods
and
cmp
fs
fdivl
fwait
cwtl
mov
pop
test
daa
jl
lret
push
outsb
lock
and
sbb
dec
pop
sub
or
push
cld
push
shl
popa
mov
fcmove
mov
push
add
rclb
fbld
data16
xchg
es
pusha
in
jle
lea
jb
jmp
xrelease
test
sbb
or
mov
pop
adc
sub
mov
xor
outsl
add
nop
into
pop
sbb
movsl
fisttpl
inc
sbb
rorl
mov
sub
sbbb
xorb
dec
cmp
inc
jb
hlt
cld
and
ljmp
data16
lcall
mov
dec
xor
dec
orb
out
sub
mov
cmpl
jmp
jmp
dec
mov
push
mov
inc
add
pop
data16
push
mov
push
dec
lods
xchg
push
xor
cs
sbb
sub
adc
inc
cld
push
jp
or
push
jno
rcll
and
mov
clc
andl
mov
cmp
or
xor
mov
xchg
mov
mov
xlat
ficoml
pop
mov
inc
js
outsb
push
push
fdivr
dec
adc
aam
jo
lcall
dec
shrb
outsb
ss
xor
dec
sub
mov
xor
fsubs
movlps
and
sub
pop
sbb
push
jecxz
inc
inc
data16
xchg
test
adc
call
movsb
jne
xchg
inc
or
decl
fsubs
xor
mov
mov
add
cmpsb
xor
fdivrs
or
inc
cmp
ljmp
pop
push
je
aam
andl
insb
aaa
sub
sti
mov
pop
or
push
xorl
xchg
mov
mov
lock
dec
filds
add
adc
and
mov
mov
push
es
add
jmp
pop
inc
mov
lcall
stc
cmp
push
mov
add
mov
add
ljmp
xchg
fisttpl
mov
cmp
sbb
cmp
jo
adc
inc
out
std
mov
lock
call
out
sub
test
push
inc
push
mov
xor
sbbb
cmp
or
mov
mov
jo
stc
fs
rol
cmp
fs
idiv
mov
loopne
inc
jae
jb
cltd
push
add
jo
out
lock
push
inc
lds
and
js
push
data16
cmp
das
enter
sub
scas
sub
pop
sahf
pop
jle
mov
xchg
add
jae
out
sub
mov
add
add
sbb
clc
pop
addr16
stos
mov
dec
jg
mov
cwtl
jg
pop
nop
mov
jecxz
je
mov
sub
push
fs
sub
cmp
xor
push
mov
dec
and
or
fmull
pop
inc
cmp
push
dec
cmp
dec
jmp
or
cmpsb
xchg
cs
outsl
xchg
cmpsb
xchg
sbb
ds
mov
pop
lcall
jle
lret
add
outsl
mov
int3
test
cld
cmpsb
das
cmp
lahf
sub
xchg
push
add
pop
add
pcmpeqb
push
jl
cli
pusha
pop
in
aam
pop
mov
push
push
pusha
clc
mov
sub
add
and
dec
xor
add
rcrb
xor
pop
sbb
xchg
xchg
xchg
fwait
add
fldl
inc
xchg
icebp
ficoms
inc
orb
ret
or
mov
or
js
leave
xor
fildll
jmp
pop
xor
jl
pop
mov
sbb
sub
dec
clc
or
movsl
jae
dec
push
sub
inc
jmp
rcrb
je
sarb
push
clc
inc
adc
adc
mov
pusha
xor
or
cld
jg
cmc
pop
mov
cmpsb
mov
adc
mull
xor
pop
arpl
dec
mov
add
or
call
cmp
cmp
cli
pop
xorb
popf
cltd
aam
sub
outsb
std
dec
lods
or
mov
inc
mov
jg
xchg
or
sub
sahf
jp
inc
aam
int3
stos
pop
fwait
popl
and
add
jbe
ljmp
and
lret
pop
add
iret
adc
leave
add
xchg
jp
bound
std
jnp
push
popf
cltd
cmp
push
jmp
sub
int
inc
cmc
or
enter
aam
or
and
pop
aam
adc
sbb
pop
sub
shlb
pop
sbb
aaa
test
daa
cmc
add
mov
pop
mov
andb
xor
inc
jle
cmc
sub
mov
fdivr
out
cli
dec
jge
ljmp
or
sti
dec
lea
ret
or
jp
sub
jo
shl
xchg
add
in
loope
jl
sbb
int3
and
outsb
daa
ljmp
repz
cmp
or
pop
jg
adc
lss
aad
jl
fsubp
lea
push
or
divl
movsb
mov
xlat
xor
jmp
or
mov
push
mov
int3
nop
mov
cltd
ds
adc
ret
mov
xchg
xchg
mov
add
push
jns
xor
les
sub
xchg
out
mov
dec
iret
sahf
sbb
inc
cmp
jo
in
xor
jge
mov
add
jecxz
jecxz
imul
pop
repz
cld
scas
test
sahf
insb
test
scas
pop
ficoml
aaa
in
xchg
ja
push
insl
xchg
sbb
jge
mov
and
shl
sti
mov
aam
adc
fucomp
xchg
arpl
inc
test
ficompl
gs
cmp
adc
imulb
mov
daa
xorb
cltd
call
mov
jnp
in
lock
ss
leave
cmp
add
push
adc
adc
call
aam
mov
leave
or
push
fistl
xchg
int3
int
scas
aaa
call
add
clc
add
lahf
jecxz
arpl
int3
aaa
adc
icebp
jbe
add
mov
and
out
popa
rol
lret
shrb
xorl
and
xchg
arpl
xchg
nop
aas
jnp
stc
insb
add
xlat
add
push
arpl
xchg
mov
fiadds
push
or
or
inc
xchg
mov
add
cli
cld
jmp
ret
outsl
and
xchg
push
insb
xchg
and
lret
inc
ret
xchg
adc
aaa
add
dec
xor
pop
xchg
mov
jp
pushf
or
pop
and
jl
icebp
insb
jns
mov
stos
add
push
fwait
scas
scas
add
icebp
add
push
movsb
std
jle
jb
and
call
mov
faddl
cmp
orl
xchg
jl
push
out
adc
add
add
or
inc
adc
mov
xchg
decb
xlat
push
and
mov
fchs
inc
sub
je
test
scas
dec
or
sub
cmpsl
mov
jmp
xchg
push
clc
adc
xor
ds
cltd
inc
add
push
xchg
pop
ds
mov
shl
sub
loope
sbb
dec
imul
cmp
fnstcw
adc
je
mov
arpl
das
cli
and
scas
xor
pop
sahf
sbb
push
mov
lods
mov
fcomps
decl
pusha
pop
ret
aam
in
add
aam
jbe
addr16
adc
pop
rcrb
push
scas
inc
add
jg
sbb
outsl
push
dec
dec
iret
xlat
loop
dec
cmp
jmp
outsb
add
arpl
cmp
sarb
mov
out
lock
call
divl
nop
xor
fistl
dec
decl
push
call
sub
outsb
sahf
call
pop
mov
push
mov
enter
jl
in
jecxz
fldl
mov
lret
test
add
mov
jp
cmp
push
stos
lret
xor
add
mov
and
dec
or
mov
aam
xchg
add
sub
and
xchg
incl
popl
mov
push
add
aaa
sbb
stos
mov
movsl
rcl
movsb
or
and
push
hlt
dec
das
pxor
lahf
cmc
cli
add
adc
outsl
std
push
xor
and
cmp
rolb
das
add
hlt
lods
mov
clc
orb
popf
outsb
in
add
and
cld
add
jl
ljmp
xchg
jg
loopne
fs
jb
adc
add
xor
dec
mov
popa
pusha
push
add
imul
shrb
inc
shl
mov
pop
fwait
lcall
adc
mov
adc
jge
fistl
and
xchg
aad
pop
movsb
sbb
aam
sbb
and
add
lods
sbb
lcall
cmp
punpckhbw
inc
mov
adc
push
pop
cwtl
cld
adc
mov
js
cmp
addr16
and
mov
in
pop
out
call
add
pop
jmp
stos
loopne
sahf
fbstp
bound
cmpsb
mov
stos
imul
js
bound
cmp
push
add
scas
inc
sub
sbbl
mov
aad
add
and
add
adc
add
xchg
js
mov
push
mov
and
add
sbb
add
adc
outsl
xchg
add
and
xorl
into
repnz
fcmove
sub
or
and
push
xchg
xchg
nop
insl
cmp
shll
or
inc
pusha
inc
js
push
or
inc
jno
sub
push
jne
or
mov
inc
dec
mov
icebp
pop
mov
push
fs
push
aas
xchg
aaa
cmp
mov
ret
fnstenv
adc
in
adc
fistl
add
jne
ficomps
call
cmp
pusha
stc
mov
clc
pusha
sahf
sbb
xchg
mov
mov
in
mov
cmp
or
xor
or
aad
cmpsb
mov
and
incb
or
add
push
je
js
cmp
add
outsl
jbe
xchg
shlb
inc
shr
xchg
andb
inc
cmc
sbb
xchg
mov
sahf
decb
lret
mov
pop
lock
mov
fdivp
loopne
xor
push
stos
or
push
mov
xor
xlat
lds
pop
ror
loop
ss
push
lods
mov
cmp
xchg
add
sbb
lcall
jmp
mov
adcl
or
jne,pn
sbb
incb
mov
jle
xchg
rorl
push
jmp
sub
push
aad
jecxz
mov
and
sbbl
cld
mov
mov
pop
cld
popa
lret
jg
notl
mov
stos
fmuls
fdivs
xchg
adc
and
dec
test
sub
mov
jnp
jle
xor
or
stos
jae
pushl
mov
inc
lret
testb
pop
inc
inc
add
int3
add
add
stos
psrld
fimuls
loope
add
dec
insl
pusha
or
adc
int3
arpl
stos
negb
push
mov
lea
xor
push
jbe
test
paddd
xor
aaa
and
inc
mov
ja
mov
pop
lods
pop
andl
out
hlt
repnz
dec
je
insb
mov
push
pushf
mov
inc
push
popa
add
mov
in
mov
mov
cmpsb
pop
xchg
mov
test
jle
pop
push
and
or
push
pop
add
pop
in
xchg
out
ja
jmp
subb
dec
pop
cmpsl
mov
lret
cli
ficompl
dec
call
inc
cs
cmp
sbb
popf
xor
adc
rcrb
lods
sbbb
push
inc
pop
ds
es
fldl
roll
add
scas
test
insb
add
les
mov
jbe
sub
mov
sahf
faddl
ss
inc
mov
jb
loop
mov
daa
test
in
clc
out
adc
sub
mov
or
mov
add
jb
cmp
xorl
mov
jp
sbb
inc
jmp
fcomps
div
push
outsl
fcoms
jecxz
or
call
adc
stos
jmp
cmp
and
mov
call
lods
or
xor
sub
add
das
and
ljmp
daa
pop
mov
mov
lcall
jmp
add
sbb
push
test
add
jg
mov
icebp
add
ljmp
pop
pop
scas
mov
sub
cmp
mov
ret
sub
stos
mov
je
pusha
roll
or
fsubrl
add
aad
push
cli
inc
jl
and
fdivs
hlt
imull
mov
insb
pop
sbb
mov
or
fcoms
insb
loop
cmp
in
cmc
ljmp
add
adc
fiaddl
pop
mov
or
add
add
jb
and
jge
sbb
pop
or
ljmp
or
scas
mov
cs
or
lcall
jecxz
xor
dec
inc
mov
inc
xchg
sub
ficomps
inc
call
sub
fadd
xorb
mov
jo
sub
inc
push
ret
push
test
lock
mov
lods
adc
xchg
jo
sub
stos
bswap
leave
ljmp
nop
shlb
rorb
jbe
incb
cmp
mov
or
dec
sub
inc
sti
das
shlb
inc
jge
fisubl
xor
fisttps
mov
pop
es
jg
inc
sub
dec
cwtl
call
inc
or
sbb
ret
nop
mov
xchg
mov
sub
movsb
adc
push
jnp
jmp
mov
movsb
jg
xchg
push
data16
rcrl
aam
insb
and
pop
pop
call
outsb
ljmp
lods
adc
xor
push
rorb
stos
inc
and
push
xor
add
les
inc
mov
incl
xor
pushf
lret
or
add
cmp
add
push
mov
xchg
fistpl
ja
mov
bound
clc
ljmp
in
lods
movsl
outsl
loope
cmpsl
mov
rolb
orb
shl
hlt
setbe
bound
rcrb
inc
push
adc
adc
repnz
ret
or
ljmp
ds
js
inc
shrl
push
ljmp
hlt
sbb
xor
fists
mov
pop
and
cmpsb
xor
cmp
rcll
and
sub
inc
fxch
lods
inc
js
or
mov
adc
ret
inc
pop
hlt
xchg
jb
movsb
fmuls
and
jp
insb
test
cmp
enter
outsl
adcb
out
hlt
repz
add
iret
loop
add
scas
loop
add
pop
xor
xor
and
aas
xchg
and
stc
pop
popf
inc
pop
cmp
jecxz
incl
xor
inc
addl
adc
adc
data16
pushl
push
ljmp
mov
cltd
and
roll
out
insl
add
je
mov
fmull
push
pop
push
adc
fcoml
fdivrl
cmp
mov
lret
pop
lcall
hlt
imul
adc
inc
lods
xor
fwait
mov
dec
mov
or
adc
js
call
push
stc
fnstenv
cli
pop
mov
mov
sub
mov
push
pop
loopne
mov
nop
pop
mov
enter
pop
or
push
sub
stos
call
xlat
inc
in
std
pop
mov
addr16
mov
fisubrs
or
jg
mov
or
popa
or
jo
daa
mov
sbb
sub
stos
call
add
pop
push
jno
mov
jbe
adc
jae
cld
jmp
hlt
mov
push
leave
dec
jns
push
jecxz
cli
jb
adc
jle
pusha
aam
filds
mov
aam
arpl
aaa
pop
or
mov
pop
push
dec
jmp
out
and
in
repz
push
inc
mov
mov
sbb
loop
push
or
mov
in
push
sbb
loopne
push
inc
pop
push
popf
jb
clc
movsl
imul
hlt
xchg
bnd
and
jg
decl
cmpsl
data16
cs
push
dec
lods
out
jmp
inc
dec
mov
fbstp
insl
scas
pusha
fstl
push
jbe
and
xchg
xor
inc
xchg
cmp
and
inc
dec
inc
test
rolb
insb
lods
negb
inc
js
sub
je
adc
push
clc
sbb
push
cmp
mov
leave
mov
scas
imul
add
push
push
sbb
or
xchg
xchg
push
pop
push
mov
mov
mov
popf
mov
pop
pop
jo
lea
add
inc
or
mov
and
pop
sub
push
jo
cmpsb
cmc
mov
enter
sbb
imul
inc
and
in
cld
out
xchg
jbe
sub
mov
mov
xor
push
loope
sub
pop
push
addr16
push
add
inc
rorl
sbb
cwtl
or
clc
xchg
test
dec
in
pop
faddl
pop
inc
cld
add
adc
mov
cwtl
lret
ljmp
pushf
or
push
mov
fcmovu
and
ret
mov
xor
mov
lret
pop
test
xchg
std
sub
incl
mov
cmc
push
adc
or
push
in
imul
jl
imul
in
fbstp
addb
loop
ret
inc
aaa
int
cmp
cld
pop
cmpsl
scas
jbe
dec
cmp
call
ja
sub
pop
add
movl
cld
das
push
xor
insl
ljmp
icebp
popf
add
jl
cmp
xchg
mov
ljmp
aaa
jge
mov
jno
je
in
sbb
xchg
mov
mov
lock
pop
test
sahf
jbe
inc
aad
mov
insl
jb
add
pushf
sbb
or
sar
sbbb
stos
jg
mov
incl
dec
jbe
lcall
nop
pop
sbb
and
push
test
fsts
insb
div
mov
add
inc
lahf
jle
clc
and
jbe
int3
push
test
mov
jbe
push
mov
mov
lods
sub
int
add
jmp
loope
xchg
or
das
mov
cwtl
push
inc
xor
movl
and
and
bound
jp
enter
or
int3
ficomps
mov
fcomps
xlat
inc
outsl
pop
sti
imul
xchg
jp
into
push
cmpsb
add
pusha
pop
dec
lods
cli
xor
loop
stos
into
fistps
inc
lcall
lcall
aad
lea
movb
cld
push
push
and
sbb
xor
mov
sub
hlt
push
or
data16
repz
cmp
jg
leave
ss
int
mov
or
je
paddd
dec
adc
cld
jae
sub
loopne,pt
adc
test
hlt
aas
outsl
in
cli
lcall
xor
push
pop
call
jno
cld
pop
or
jmp
sarl
cwtl
aad
xor
push
cmpb
das
xor
adc
push
loopne
shr
or
testl
sti
decl
mov
and
adc
mov
lds
push
popa
jecxz
mov
push
fstpt
pop
leave
mov
popa
test
cld
ljmp
nop
push
jp
mov
shll
and
int
idivb
int
push
jp
ret
or
out
sub
mov
dec
jp
push
cmpsb
ffree
insb
xlat
ds
or
mov
popa
std
fcmove
test
je
mov
add
mov
cmp
or
shr
in
sub
dec
std
mov
popf
cli
push
cltd
ret
jb
add
mov
xchg
and
push
out
or
jle
pop
cld
test
jbe
shr
push
or
js
pop
test
aam
insl
xor
sbb
rorb
enter
pop
mov
dec
jns
pop
fnstenv
or
inc
jbe
cmp
stos
test
mov
add
cmpsb
sub
movsl
push
repz
ljmp
or
orb
mov
lret
jnp
add
mov
adc
hlt
popa
fwait
sahf
aam
add
lock
jns
insl
and
sbb
push
pop
clc
ljmp
mov
jne
sbb
call
lcall
add
mov
add
inc
mov
sbb
push
fidivs
jmp
mov
ljmp
fsubrl
xlat
cli
in
add
mov
jae
rolb
pop
add
push
mov
or
add
jecxz
sbb
push
push
test
cmp
mov
push
push
gs
jle
push
jne
sub
pusha
not
adc
mov
mov
mov
sbb
out
xor
dec
fildll
inc
icebp
outsl
mov
pop
xchg
add
insl
inc
in
mov
sbb
or
xchg
adcb
or
jne
cmpsb
push
push
mov
jbe
test
scas
sahf
daa
jo
mov
adc
dec
or
push
fstl
movsb
push
ljmp
add
out
mov
leave
mov
pop
push
pop
rclb
add
sbb
jecxz
jbe
mov
orb
fidivs
stos
cmc
insl
inc
mov
pusha
xor
sub
loopne
js
push
or
clc
sub
sbbl
or
pop
pop
bound
outsl
and
push
inc
rolb
leave
sti
push
mov
ljmp
mov
loopne
cmp
xor
iret
and
adc
les
xor
mov
jecxz
pushl
mov
pusha
push
or
push
lret
in
mov
pcmpeqb
fsub
ljmp
xchg
mov
cmc
popl
pop
xor
inc
inc
call
pop
negl
pop
es
pop
hlt
sbb
imull
into
add
shrb
push
xchg
mov
nop
add
cli
sbb
cmp
inc
cwtl
sbb
or
cmp
je
repz
push
inc
clc
dec
jnp
inc
ja
or
xor
dec
push
into
sbb
push
push
rcl
inc
lcall
sbb
add
mov
fsubrl
cltd
push
loope
test
push
insb
jle
fnsave
addl
ret
push
mov
push
ljmp
mov
and
mov
adc
jbe
rorb
mov
xor
jb
jno
daa
sbb
lock
clc
mov
xchg
mov
lods
jo
and
dec
dec
cli
pop
hlt
pop
mov
sbb
jmp
inc
cmp
ljmp
xor
mov
test
xchg
faddp
jl
test
int3
adc
aas
add
pushf
inc
mov
and
cmp
leave
sbb
or
lods
cld
xchg
pushl
jmp
dec
loope
inc
push
iret
mov
es
and
dec
imul
push
stos
popa
enter
fisttps
inc
ljmp
outsb
sub
push
add
adc
in
call
and
cmp
mov
push
mov
pop
mull
xlat
inc
sbb
sub
ljmp
divb
lret
sub
sbb
mov
adc
incb
dec
es
mov
xchg
dec
mov
cmc
mov
aas
cmp
push
adc
shl
dec
add
fidivrl
add
ja
mov
ret
mov
test
cld
pop
adc
cmp
xchg
inc
aas
ss
push
or
lock
jnp
push
addl
insb
cmpsl
loope
fiaddl
lret
mov
stos
je
xchg
inc
fiadds
xor
mov
hlt
lahf
int3
sahf
pop
mov
dec
orb
sbbl
out
push
adc
push
data16
push
pop
dec
pop
mov
incb
mov
sub
push
or
cli
add
pop
mov
pop
sub
out
rcrl
add
mov
andb
imul
push
fsts
inc
jbe
and
fs
fildll
add
cmp
dec
dec
out
xchg
loopne
flds
jl
and
sahf
shr
or
aas
and
or
subl
mov
testb
repnz
js
push
loopne
aam
cs
adc
rcr
mov
pop
mov
sub
inc
stc
nop
movsl
add
or
xchg
decb
or
jo
call
cli
clc
lret
fstpt
xorb
add
fistpl
sub
mov
in
imul
cltd
xor
jo
mov
fsubs
dec
push
add
cwtl
adc
sub
call
aam
arpl
mov
sub
pop
jns
push
dec
fildll
push
xchg
shl
or
mov
aas
pop
fmuls
test
xchg
lods
nop
inc
cmp
int3
loopne
decl
adc
popa
pushl
xchg
decl
jmp
ljmp
add
jmp
cmp
mov
sub
es
andb
and
add
cmp
dec
inc
xor
or
enter
push
cmp
inc
inc
dec
sub
cmc
js
mov
inc
lcall
jbe
fildl
pop
movsl
testb
aam
push
jl
js
lock
incl
jb
mov
push
scas
add
cs
lea
xchg
and
add
dec
add
push
xchg
mov
adcb
push
mov
lcall
stos
pop
idiv
test
or
add
subl
rorb
mov
mov
ret
and
loop
mov
mov
sbbl
test
pop
sar
mov
ljmp
shlb
sub
pop
sub
xor
jnp
inc
and
lret
ss
mov
stc
jo
mov
leave
je
mov
out
push
add
jne
icebp
lds
dec
insb
pop
test
outsl
into
xor
mov
mov
push
mov
sub
in
aaa
mov
das
or
cmp
sbb
stos
push
and
mov
ret
cli
sbb
es
xchg
xchg
push
loopne
dec
loopne
add
jo
mov
loop
push
add
push
dec
andl
incb
call
dec
mov
and
mov
cmc
lret
push
fadds
clc
int
xorb
adc
shlb
push
lods
add
sbb
cli
push
loopne
dec
fs
and
jl
scas
test
xor
bound
mov
xlat
aas
add
shr
sbb
icebp
mov
testb
and
xlat
cmp
lods
or
fdivr
cmp
scas
pop
mov
sbb
in
adc
data16
add
cmpsb
pop
xor
test
xor
lcall
push
pop
add
or
test
fistps
lcall
add
inc
inc
jnp
add
jecxz
xchg
sbb
inc
into
lods
xchg
mov
addr16
roll
cltd
push
and
js
add
call
pop
xor
les
mov
hlt
mov
rcrb
xchg
sbb
adc
ret
mov
mov
mov
inc
and
bound
pop
jmp
mov
push
adc
adc
xor
mov
mov
add
scas
stc
test
repz
fs
adcl
push
clc
pop
scas
push
pop
les
outsb
push
jge
pop
int
xchg
adc
mov
push
cltd
xor
add
movd
test
cmp
out
addr16
push
sbb
and
addl
mov
mov
or
add
jl
mov
ss
arpl
add
add
xchg
dec
data16
fs
add
movl
jo
add
cmpsb
add
add
mov
in
pop
das
lock
js
lds
add
inc
dec
xor
ljmp
add
mov
mov
enter
add
int
sahf
or
std
out
inc
aad
inc
loope
pop
mov
fisubrs
scas
fbld
aas
push
pop
aam
sub
and
incl
jbe
stc
sbb
push
mov
sbb
aaa
pusha
ljmp
add
jno
cs
popf
mov
jg
cld
ljmp
ss
add
mov
shl
jns
or
inc
outsl
cli
fwait
mov
out
popf
pushl
or
pop
push
insl
sub
push
pop
lret
mov
fldl
cmp
test
cmp
ljmp
or
dec
adc
subb
cwtl
ret
mov
stos
call
dec
cmp
inc
pushl
loopne
push
arpl
or
call
out
hlt
push
mov
sub
cmc
mov
push
ret
loopne
xor
xor
xorb
enter
outsl
lret
mov
inc
bound
mov
outsb
push
mov
xchg
mov
and
add
ljmp
aam
fnstcw
jecxz
sub
cmc
iret
xchg
les
cmpsl
xor
jle
fbstp
adc
outsl
sbb
jne
adc
xchg
dec
cmp
cwtl
adc
pop
adc
fildl
jg
outsb
pop
dec
mov
jo
xorb
call
pop
dec
add
mov
imulb
mov
add
push
out
test
fadds
out
fmull
mov
mov
push
enter
inc
lret
sti
add
cmp
cmc
adc
pop
fwait
push
push
lods
mov
call
and
cltd
lcall
pop
mov
pop
orb
mov
push
add
lcall
in
sbb
fs
or
cli
pushf
adc
dec
dec
scas
mov
jp
and
mov
call
sub
cltd
jp
cli
mov
push
loopne
js
and
mov
push
insl
call
or
adcl
or
push
inc
rclb
push
ds
and
cwtl
push
int
xchg
loope
cli
pop
mov
xchg
sbb
push
movsb
inc
or
push
pop
sbb
ljmp
dec
cmp
fmuls
cld
or
aam
movsb
mulb
mov
push
inc
push
scas
cld
scas
cmpsb
push
jb
push
movsb
cld
loopne
push
mov
dec
add
dec
cmp
cli
in
and
xchg
in
mov
jge
sbb
dec
enter
fistl
fisttps
cmp
roll
sub
rolb
fsubl
lods
mov
movsl
in
test
push
bound
push
movsl
stos
dec
sub
dec
jl
dec
scas
push
mov
pop
rclb
inc
mov
es
sbb
mov
popa
adc
and
add
push
test
call
fcompl
mov
mov
cmp
popf
push
aad
or
cltd
xor
lods
aaa
add
mov
test
movsb
out
cwtl
mov
push
pop
cmp
jno
or
pop
fcoms
inc
pusha
jmp
push
mov
and
mov
sbb
xor
pop
pusha
les
jb
add
imul
adc
sarb
push
inc
jg
sub
add
ljmp
add
std
jg
cmc
das
and
xor
imul
outsb
inc
sbb
cli
daa
pop
xor
sub
xchg
add
push
cld
and
out
mov
das
shlb
test
iret
pop
xchg
dec
shlb
add
test
fwait
xor
mov
je
inc
sbb
or
add
add
inc
add
aaa
add
jo
imul
inc
iret
out
fidivrs
mov
adc
cmp
out
inc
inc
mov
inc
pusha
fists
xor
cmpsl
add
pop
gs
add
push
into
xchg
dec
lods
jae
stos
and
imul
mov
jnp
xchg
les
add
lock
mov
filds
sahf
lahf
lar
mov
dec
sub
sbb
lea
adc
push
notb
jmp
ja
inc
cld
cld
lods
mov
aaa
ret
adc
into
mov
je
xor
dec
int
test
scas
pop
insl
icebp
jge
dec
fcomps
mov
loopne
mov
jmp
dec
or
test
or
je
adc
test
std
and
push
push
cli
add
icebp
cld
dec
mov
xchg
add
xor
int
lahf
jg
push
in
push
or
jmp
mov
add
mov
cmp
jns
popa
jae
ljmp
push
adc
pushf
xchg
arpl
mov
daa
sbb
cmp
fdiv
xchg
stos
lret
push
mov
push
ret
test
dec
adc
icebp
push
lods
mov
xchg
sub
sbb
mov
cmc
sbb
dec
dec
clc
sbb
je
inc
mov
aam
jl
or
outsb
imul
arpl
mov
and
ljmp
mov
es
jbe
out
rclb
xor
dec
adc
push
or
call
pop
push
jecxz
mov
das
mov
mov
shl
sbb
jl
jge
in
or
fistpll
repz
gs
fwait
fs
pop
or
push
js
in
sbb
testb
xchg
cmc
ja
add
pop
arpl
mov
inc
xlat
or
inc
or
sbb
lcall
mov
shlb
add
inc
std
inc
insb
icebp
push
stos
push
and
outsb
std
shlb
outsl
js
test
shl
sub
push
xchg
rcll
loop
cli
dec
js
je
pop
mov
inc
hlt
decl
mov
push
shlb
xchg
or
arpl
inc
faddl
sbb
shl
mov
pop
gs
shrb
jbe
fmuls
cmp
sbb
xor
pop
xchg
aad
sub
lods
or
add
call
nop
mov
dec
xor
jl
dec
subb
jl
push
pop
adc
pop
jne
ss
pushf
movsb
cmpsb
sub
or
mov
add
js
push
inc
jecxz
call
out
out
orb
jb
or
jo
mov
mov
and
mov
fisttps
jo
jo
fidivs
shr
adc
pusha
inc
sub
icebp
mov
aad
push
sub
cwtl
push
imull
lcall
or
cld
popf
jbe
lret
adc
fistpl
outsl
std
xor
je
sti
push
loop
addb
jno
ljmp
mov
je
xchg
ljmp
pop
xor
xor
push
add
sub
add
sbb
jl
imul
pusha
xor
pop
push
mov
fcomip
jmp
xchg
mov
mov
and
xlat
out
fisttps
cmpsb
mov
mov
xlat
out
mul
jno
add
cmp
incl
push
stc
jb
lret
popf
cmc
adc
aaa
scas
push
sbb
cmp
mov
dec
pop
push
jmp
xchg
add
clc
or
sbb
out
dec
mov
push
enter
ss
divb
dec
add
lret
push
cmpsb
pop
das
add
bound
mov
inc
fldenv
mov
bnd
mov
fcompl
push
lret
cmpsb
dec
pop
or
adc
or
maxps
rol
je
xchg
add
in
adcb
cld
add
pop
xchg
mov
out
add
xchg
fdivl
cltd
pop
test
aad
cli
adc
dec
loope
adc
adc
xor
and
leave
std
add
cmpsb
add
jge
popf
mov
push
rcrb
and
fwait
loop
mov
cmp
xor
cmp
loope
ret
jbe
xchg
orl
jne
stc
push
lock
into
test
es
fistpll
push
xchg
dec
test
stos
mov
sub
xchg
push
jnp
popa
push
call
dec
out
aaa
add
xchg
mov
jnp
add
out
inc
or
fldcw
lods
sub
xor
cmp
and
call
inc
push
add
jb
pop
mov
insl
mov
mov
or
push
std
das
ret
int
sbb
in
imul
pop
les
insl
sub
xor
outsb
js
out
int3
jl
push
pop
xchg
mov
out
inc
add
aaa
arpl
mov
and
push
add
mov
push
jecxz
and
xchg
dec
sbb
rclb
lods
das
xchg
hlt
inc
movsb
mov
stos
outsl
cli
push
hlt
sahf
cmp
sti
add
adc
add
ja
mov
hlt
add
in
lahf
test
std
or
mov
jge
add
inc
cmp
movl
mov
jnp
xchg
mov
incb
outsb
stos
clc
insl
lret
mov
mov
scas
hlt
mov
stos
movsb
mov
movsb
sub
dec
and
aad
incl
dec
jg
pusha
pop
push
xor
fiadds
loop
adc
pop
insl
ret
mov
lahf
ja
lds
cmpsl
insb
inc
movsl
movsl
ret
push
lcall
and
or
imul
mov
dec
lock
sbb
lcall
xchg
bound
jle
push
out
lcall
stos
pop
test
jo
mov
pop
repz
mov
sbb
inc
inc
pop
clc
rol
sbb
sbb
pop
stos
scas
dec
xor
inc
out
cmp
es
add
xor
and
jmp
cmp
fisttps
or
aam
int
int3
dec
jg
cmc
and
ret
aam
mov
xlat
lds
decb
cs
cld
decl
jl
xchg
ljmp
mov
push
lea
cmp
hlt
inc
dec
add
mov
inc
adc
sarb
bnd
ret
clc
mov
pop
pushf
nop
pop
pop
and
inc
mov
out
rolb
adc
pop
xchg
pop
mov
leave
push
sbb
scas
pop
shrl
inc
lcall
or
jae
inc
outsb
popf
nop
pop
ret
mov
xchg
dec
std
das
popaw
and
inc
mov
sub
inc
xchg
sub
xor
in
or
and
jnp
and
push
adc
fcom
sbb
sbb
xor
ficompl
stos
and
jns
pop
and
nop
or
movsl
and
sbb
sbb
andl
jno
sbb
or
sbb
fcomp
xchg
call
js
add
imul
or
jl
mov
sbb
int3
pop
or
pop
push
sbb
sahf
inc
add
pushf
add
pop
pop
in
push
pop
push
shrb
mov
mov
sahf
out
das
ss
mov
fldt
clc
pop
jg
adc
jmp
inc
movsb
adc
cmpsl
aad
or
or
add
or
or
cmp
adc
dec
add
repnz
je
ljmp
add
mov
bound
adc
add
es
sahf
lahf
ja
add
push
mov
add
sbb
nop
stos
outsb
addl
mov
or
sub
sbb
scas
inc
call
pop
dec
orl
inc
pop
repnz
sbb
sarl
add
das
push
jae
cli
les
rep
or
jg
inc
fists
pusha
ffreep
cmp
inc
repz
or
mov
xchg
cwtl
aad
or
mov
popf
mov
out
mov
add
mov
push
cmp
test
rcrb
add
ja
lcall
push
cli
fcom
mov
jecxz
in
add
test
or
das
ret
pusha
adcl
insl
inc
inc
add
loop
add
and
jg
icebp
ja
dec
push
lcall
jbe
out
jbe
pop
insb
or
xor
pop
inc
scas
or
dec
dec
push
sbb
adc
push
jae
inc
js
xchg
negb
mov
xchg
fcmovnbe
fldenv
aam
nop
leave
cmp
icebp
movsl
cmp
lret
cmp
test
xchg
jnp
pusha
mov
push
cld
outsl
inc
jmp
rcrl
scas
xor
sub
mov
outsb
dec
lods
inc
lods
xor
jmp
mov
inc
add
sbb
add
pushf
add
jmp
or
mov
cld
xlat
add
sub
lea
je
pop
add
mov
push
adc
add
mov
cld
pusha
into
dec
cmp
sub
and
xchg
xchg
xchg
addb
cmp
sti
pop
adc
adc
cs
xor
jne
bound
fadd
in
mov
fistps
stos
cmp
add
js
int3
add
fsubl
lcall
pop
imul
add
inc
ret
sbb
mov
push
sbbb
cmpsl
lret
js
cld
pop
xor
rorl
lahf
outsl
faddl
push
imul
cli
mulb
ret
jle
jg
sbb
push
mov
rcrl
mov
xor
test
xor
mov
push
int3
and
les
pop
das
shlb
sbb
mov
cmpsb
mov
jp
add
mov
add
pop
xor
xor
push
mov
lods
inc
incl
mov
inc
sub
popa
jle
lods
jg
das
fcompp
cmp
or
repnz
fidivs
icebp
add
inc
sbb
pusha
frstor
add
sbb
xchg
es
pop
push
xchg
js
cld
das
cli
iret
pop
xchg
add
mov
xor
push
mov
pop
adc
cmc
int
cs
js
xlat
pop
push
pop
loopne
stos
mov
data16
sub
popa
xor
push
cmp
or
rolb
xor
mov
ljmp
daa
ds
mov
push
xor
scas
jo
insl
into
adcl
shr
push
addb
add
sbb
mov
clc
hlt
cs
lock
mov
fists
pop
iret
inc
fnstsw
mov
incl
mov
jmp
jns
ret
xchg
and
mov
pop
addr16
mov
lcall
xchg
or
push
enter
xchg
test
mov
add
outsl
jo
ret
pop
fs
push
cwtl
inc
ret
mov
add
jne
dec
push
inc
sbbb
adc
sbbb
test
cld
out
mov
mov
fcoms
roll
push
jmp
pusha
push
cli
sti
aaa
icebp
popa
sbb
jp
jle
cmpsb
in
pop
xchg
mov
mov
push
or
imul
lock
ret
cmpb
sub
pop
fmul
mov
or
mov
adc
fldt
xor
push
dec
xor
jo
arpl
adc
sub
push
push
push
or
ljmp
outsb
mov
aad
push
outsw
andb
aam
push
hlt
jbe
mov
xor
scas
icebp
or
mov
aaa
xchg
inc
pop
ret
add
ljmp
add
repz
xlat
pushf
andl
lahf
mov
mov
inc
add
ljmp
sub
ret
adc
mov
aam
cmc
pop
dec
int
or
call
fiaddl
out
and
pushf
outsl
rclb
mov
iret
loopne
sbbl
mov
shr
sbb
movl
jle
pushf
xor
mov
sbb
sti
jb
pop
enter
cld
aaa
jb
pop
or
pop
xchg
mov
fadds
and
sar
add
daa
mov
out
clc
xchg
push
mov
out
sar
stos
xorb
jl
dec
mov
sbb
and
cmp
push
arpl
in
mov
sub
data16
rolb
mov
in
scas
scas
sbb
test
mov
lock
mov
jae
stos
mov
inc
pop
outsb
sub
insb
movsb
mov
call
roll
or
push
shl
add
jb
aam
or
lods
add
and
mov
ficoms
xor
cmp
lahf
mov
mov
stc
repnz
mov
adc
pop
popf
rcl
adc
fisttps
or
je
add
in
mov
rcl
push
imul
call
lock
adc
call
mov
dec
lods
rcr
push
notb
mov
sub
jg
lock
xchg
and
cli
incb
add
aad
sarl
adc
hlt
mov
mov
es
js
inc
icebp
jl
add
cmp
mov
pushl
sbb
add
inc
adc
movsb
adc
data16
sub
inc
test
xlat
mov
pop
jno
int3
outsb
pop
adc
test
cmp
inc
jp
inc
mov
lcall
jle
cmp
shrb
jne
or
mov
pusha
push
movl
push
push
and
gs
dec
mov
decl
mov
or
icebp
loopne
sahf
stos
dec
sub
adc
push
cld
call
lret
ret
imul
lret
test
es
jle
inc
cmc
dec
adc
cmp
push
hlt
pushl
dec
andl
loop
jg
mov
es
and
ror
daa
xchg
adc
lock
mov
sbb
shlb
or
push
rorb
pop
push
or
ss
dec
inc
stos
fadds
addl
outsb
mov
pop
push
mov
out
cld
add
into
cli
xchg
add
cmp
icebp
push
push
movsb
daa
inc
push
fsubrl
ret
sub
sti
incl
lock
add
or
clc
or
jle
mov
xor
cmp
sbbb
loope
pop
scas
jp
sbb
push
pop
stos
cmp
pop
xchg
add
into
mov
cs
or
rol
int3
int3
roll
sbb
into
shlb
mov
cs
jg
aam
mov
lods
mov
jg
push
push
cmc
mov
mov
cld
aaa
adc
sarl
pushl
ja
js
int3
sbb
insb
sub
mov
dec
push
sbb
stos
lcall
pop
imul
repnz
fldl
outsl
pop
push
or
mov
scas
into
jbe
sbb
dec
push
xchg
lock
mov
out
fs
lcall
sti
je
add
addl
insb
pusha
pop
push
pop
jge
sbb
dec
add
dec
mov
mov
divl
push
inc
call
ret
lcall
xor
pop
xor
mov
cmp
icebp
std
jnp
add
inc
fwait
pop
adc
and
mov
lcall
lea
iret
xchg
enter
out
test
mov
mov
outsb
je
js
sub
and
adc
arpl
mov
adc
jno
jl
jns
loopne
inc
xor
cmp
push
add
popf
push
dec
add
or
sub
daa
ficompl
lret
add
pop
push
add
lods
or
mov
xor
cmp
inc
scas
or
clc
xchg
filds
icebp
out
pop
sbbl
clc
pop
and
adc
mov
sbb
imulb
pop
scas
call
lods
mov
mov
sbb
adc
mov
mov
pop
cld
inc
out
notl
xor
das
testb
adc
mov
inc
fbstp
add
inc
xlat
arpl
fisubs
mov
loop
fistpl
in
ficoml
or
or
pop
add
jg
pop
rorb
mov
clc
mov
add
fwait
mov
test
jne
icebp
lret
sbb
shll
fs
cs
mov
pop
cmpsl
mov
and
xor
mov
push
or
out
mov
inc
mov
cmpsb
xorb
adc
add
pop
pop
or
iret
jae
inc
xlat
or
and
sarb
mov
imul
pusha
xor
gs
fwait
cmpsl
push
lret
sub
mov
std
pop
mov
inc
ja
add
bound
add
adc
ret
popa
cli
jae
mov
je
adc
push
aad
push
sub
mov
xchg
call
es
and
jne
adc
lcall
pusha
aam
into
and
fidivl
cltd
xchg
mov
lcall
mov
cmp
jmp
roll
dec
mov
or
push
mov
inc
mov
and
lcall
jnp
dec
pop
adc
scas
inc
repz
mov
fdivrl
cli
cmpsb
in
arpl
push
inc
movaps
cmpb
sbbl
xchg
add
jle
jno
cli
out
adc
enter
cmp
dec
lods
pop
out
and
add
jp
cmp
mov
mov
jmp
in
sbb
mov
dec
aaa
pop
add
and
xchg
mov
push
xlat
out
stos
or
int3
rclb
aam
sbb
fmuls
or
je
xlat
adc
pushf
div
aas
xchg
lret
mov
or
divl
or
jae
lahf
pop
jbe
add
roll
mov
xor
jae
pop
clc
scas
je
sbb
xchg
je
dec
es
dec
push
cltd
cmp
imul
inc
incl
sub
in
adcb
movsb
cmp
mov
add
cmpsb
sub
or
mov
mov
inc
loopne
adc
cs
sbb
add
test
call
and
stc
push
int
sahf
push
ss
outsb
lock
and
sub
addr16
mov
pop
andb
mov
mov
push
imul
in
lea
scas
jb
mov
cwtl
mov
or
aas
push
jbe
movsb
jmp
call
int3
add
sub
pop
add
roll
dec
or
aad
xchg
out
cmp
or
jp
js
add
mov
cmp
or
push
movsb
es
cmpsl
stc
insl
add
mov
mov
xor
les
adcl
jno
push
repz
xchg
lea
insb
int3
je
es
mov
rsqrtps
fnstcw
add
shll
lds
sub
inc
mov
cmp
and
or
enter
aad
je
mov
cli
mov
jb
mov
scas
aad
or
shlb
pusha
stos
test
hlt
mov
add
ljmp
aas
roll
jno
and
dec
in
jo
dec
cli
or
xchg
push
or
into
or
mov
test
test
push
or
push
mul
jo
cmp
fcomip
aas
cmpsb
loop
mov
pusha
xchg
nop
outsl
inc
test
xchg
js
jl
jle
adc
shrl
je
lret
mov
mov
pop
scas
or
clc
push
sarb
or
mov
out
inc
or
in
sub
inc
call
and
mov
pop
add
dec
jns
cmp
jle
fstl
pop
push
xor
inc
lret
jg
or
jno
adc
cmp
add
lea
mov
mov
cld
inc
sub
mov
ficoml
pop
and
push
xor
push
aam
aaa
jge
fisttpll
xlat
loop
push
sbb
in
sub
cli
xchg
push
out
add
cmp
stos
adc
out
push
les
inc
inc
dec
add
add
and
lahf
std
out
fidivl
pop
orb
inc
js
jne
and
push
imul
popa
outsl
jl
pop
mov
mov
add
shrb
ret
fdivr
bound
aaa
add
fisttpl
jns
aas
push
pop
addl
inc
jmp
scas
test
inc
sbb
cli
fnsave
nop
mov
and
imul
cmp
mov
fisttpl
fadd
mov
aad
adc
lods
shrb
pushf
lods
decl
nop
bound
fidivrl
lock
push
adc
fidivs
mov
popf
xchg
pop
xor
clc
test
inc
pop
xorl
jle
out
xchg
repnz
pop
hlt
dec
jbe
test
adc
sbb
shll
sub
enter
push
mov
jne
cld
incl
mov
stc
push
imul
push
js
or
stos
inc
pop
sub
add
mov
mov
dec
push
js
aad
add
daa
and
cmpsb
jno
loope
cmpsl
add
and
in
xor
mov
call
jecxz
out
sub
sub
mov
sahf
pop
add
xorl
sub
xor
pop
xchg
jl
and
cmp
jbe
push
sub
add
sbb
mov
pushf
jns
pop
ret
hlt
sbb
sub
fiaddl
clc
lret
dec
cmpsl
and
decl
scas
enter
or
inc
stos
lcall
jnp
ret
mov
test
shlb
imul
scas
jle
mov
jp
adcb
in
jl,pt
aas
xchg
inc
mov
pop
add
fcomps
pushf
imull
jmp
push
scas
xchg
sbb
xlat
out
js
nop
dec
add
je
adc
bound
stos
mov
push
inc
cs
cld
mov
roll
pop
or
scas
add
ret
in
jmp
sbb
lret
shrb
es
repnz
push
sub
cld
aad
mov
adc
icebp
test
aam
adc
ret
cli
outsl
aam
push
cmp
pop
cld
int3
and
cltd
pop
lods
and
adc
pop
push
xor
mov
shll
sub
push
mov
sbb
mov
adc
inc
push
sub
push
adc
or
insb
push
ficompl
pop
sub
xchg
jo
shl
loope
int3
inc
sti
inc
int3
pop
mov
cmp
filds
jp
adc
enter
or
dec
stos
outsb
fsubl
fdiv
sub
pusha
jmp
mov
and
xorl
jmp
jecxz
sbb
push
xor
xchg
test
in
jl
xchg
es
icebp
dec
repnz
and
inc
sarb
cwtl
testb
mov
or
in
ljmp
movsl
ret
xchg
add
mov
divb
mov
jle
test
pop
cmp
daa
inc
xor
adc
pop
out
xor
jl
or
inc
pop
out
inc
add
adc
inc
pop
ss
mov
or
ret
push
fisubrs
and
push
shll
jecxz
jmp
pushf
add
sbb
cwtl
clc
push
mov
ficoms
sbb
and
lock
popa
jl
xchg
inc
pushf
divb
out
mov
aam
cmpsb
sbb
sbb
and
clc
sahf
sahf
sti
fisttpl
hlt
mov
das
cmp
push
mov
fidivl
pop
je
xchg
imul
je
sbb
xchg
stos
jmp
getsec
insl
pushf
arpl
sub
inc
out
scas
outsl
nop
mov
cmp
xchg
lea
daa
lret
gs
or
pusha
inc
mov
cmpsb
or
pop
aas
add
int3
sbb
jmp
in
dec
or
and
das
mov
out
pop
sbb
jecxz
shrl
mov
out
cli
xorl
movsb
cli
sarb
mov
mov
icebp
xchg
imul
insb
daa
cmp
inc
jo
test
inc
adc
xorl
int3
dec
or
jo
inc
adc
bound
push
fnstcw
rclb
sbb
loopne
and
andb
js
test
jecxz
sub
lock
mov
and
jmp
sbb
dec
outsl
inc
inc
add
js,pt
or
cs
leave
sbb
jl
pop
inc
xchg
cli
sti
pushl
mov
movsl
adc
les
adc
outsb
or
dec
addr16
into
fwait
add
push
dec
or
dec
fistpll
add
bound
dec
repz
push
jno
inc
sub
test
rcll
adc
add
inc
aaa
pop
out
test
add
and
cmp
loop
xchg
test
bound
add
adc
pop
gs
jb
sbb
ja
pusha
scas
and
fs
cld
jae
pop
mov
sarb
push
jo
xor
inc
inc
or
loopne
add
in
fcmovu
mov
jg
scas
rolb
mov
sub
iret
cmp
dec
push
pop
je
lea
ret
bound
mov
fadds
add
inc
fisttps
call
push
mov
lret
sbb
fbstp
lret
adc
lods
in
push
out
popa
cli
pusha
std
lcall
cld
jg
rorb
cmpsb
mov
out
sbb
mov
add
adc
add
std
out
add
fbld
in
dec
inc
and
fwait
mov
sub
cltd
jg
std
xchg
pusha
dec
decl
push
fucomp
jo
pop
pop
mov
pop
xchg
xchg
jecxz
les
mov
scas
pop
cmc
lcall
fsubs
cmp
sahf
daa
or
cli
and
movsb
sbb
pushf
push
pop
adc
mov
sbb
lock
fnstcw
bound
cmp
push
push
dec
in
gs
in
jmp
adcl
out
int
sbb
dec
xchg
ror
dec
addb
outsb
mov
lock
js
lret
or
call
jl
xor
mov
arpl
idivb
cmp
cli
push
xchg
and
sbb
xor
jb
shl
insl
shlb
cs
out
ja
mov
xchg
pop
cli
in
lea
mov
jno
aam
add
dec
cmp
test
add
fwait
rolb
inc
add
nop
fidivrs
xorb
push
test
or
inc
mov
jg
pusha
sub
shrb
clc
sbb
cld
or
mov
sar
add
cmp
add
out
dec
or
dec
out
data16
xchg
add
std
idivb
or
cmp
ja
xor
cmp
les
das
call
add
fld
push
pop
test
jp
sub
or
pop
mov
jg
jecxz
lahf
xchg
push
shll
loopne
mov
dec
dec
mov
mov
mov
lds
xchg
enter
sub
decl
insb
inc
lcall
or
push
mov
sbb
jecxz,pt
andl
mov
mov
jg
add
add
shll
aam
ficoml
bound
xchg
outsb
dec
cmpsb
call
jg
jp
subb
out
out
mov
push
xor
inc
ja
imul
das
clc
inc
call
jle
add
xor
mov
jle
dec
cmpsl
pop
xor
jmp
ret
scas
jg
shl
inc
push
ljmp
mov
mov
sub
mov
divb
and
lcall
inc
sbb
jle
ret
or
test
in
xchg
pusha
clc
jg
cmpsb
pop
sarb
loopne
add
daa
fsub
fists
push
inc
and
lods
loope
mov
cmp
and
int3
jl
or
adc
orl
cmc
push
mov
jb
shll
jp
xlat
inc
mov
adc
pop
jg
test
daa
lret
repnz
adcb
push
int3
push
lock
pusha
neg
sbb
xchg
fmull
jg
std
sbb
dec
test
push
cmp
dec
out
cmc
xchg
call
adc
mov
or
inc
sbb
addr16
aaa
sbb
sub
jp
jge
nop
mov
aad
leave
xchg
dec
test
popa
out
popf
mov
sub
repnz
jb
xorl
out
jmp
add
sbb
leave
lods
movsb
inc
and
movsl
fldl
inc
xor
enter
push
sbb
rcll
inc
xchg
ret
and
and
mov
movsl
dec
sub
inc
shrb
xor
add
add
pusha
xor
mov
xor
pop
lcall
mov
test
inc
jg
mov
fst
mov
adcb
add
xchg
xchg
add
push
cli
fwait
lods
lcall
sahf
pop
push
add
add
xchg
fstpt
into
incb
in
aad
rclb
fmul
bound
push
and
inc
push
jae
adc
add
mov
mov
mov
push
jno
add
mov
fstpt
loop
aas
cwtl
dec
pushl
fs
or
sar
in
add
or
mov
js
mov
add
pusha
cmp
mov
push
adc
lods
jp
in
or
cmp
xor
call
dec
jle
adc
rol
fcompl
add
hlt
callw
sub
ljmp
adc
sbb
xchg
mov
mov
and
pop
scas
cli
xchg
xchg
dec
cli
mov
test
lahf
test
mov
mov
xchg
ss
jnp
jl
xor
jmp
lcall
sbb
or
inc
data16
aas
push
std
pop
js
pop
outsl
fadds
into
push
js
fwait
add
mov
repz
inc
clc
sub
push
pop
xchg
repnz
out
ljmp
sbb
lods
xor
shl
add
xchg
pusha
icebp
xchg
lock
bound
sarl
mov
imul
fcomp
fs
loopne
or
and
mov
mov
sbb
cs
jp
dec
xlat
jbe
or
cld
xchg
mov
jg
mov
push
out
jl
or
add
inc
sub
das
adc
and
jp
add
cwtl
sub
pusha
vmovq
rorb
mov
or
mov
pop
xchg
jecxz
adc
test
jp
jo
adc
or
pop
aad
xor
inc
pop
push
repz
jg
in
ret
test
fiadds
cli
push
test
cmp
decb
dec
xchg
cwtl
mov
pop
sahf
mov
or
hlt
ret
shrl
test
jge
cmpb
js
adc
sbb
outsl
sahf
outsl
dec
out
cmpsb
lret
xchg
inc
mov
dec
ds
stos
ljmp
icebp
mov
inc
pop
jo
add
dec
xorl
rclb
xchg
std
jo
rcl
out
mov
adc
xchg
push
mov
cmp
sub
and
xchg
mov
es
pusha
stos
loopne
and
mov
jb
lods
add
cli
push
sub
ret
ret
adcb
xchg
inc
ret
je
inc
test
test
shrl
shrl
into
loopne
es
movsb
mov
push
sub
push
pop
mov
xor
loopne
sti
sub
push
call
loopne
stc
jae
inc
adc
cmp
test
stos
push
movsl
mov
add
dec
loop
add
pop
mov
call
mov
aaa
repnz
fimull
loop
mov
and
fimuls
les
fnstsw
cli
sub
xor
fimuls
stos
and
paddusb
inc
rcl
xchg
jno
cmpb
xor
outsl
pop
aam
clc
add
pop
je
cmp
ret
add
xchg
aas
in
pop
ljmp
sub
loop
lods
mov
les
add
cwtl
cmpsb
shl
shlb
xorb
lret
xorb
incl
mov
jg
push
mov
imul
push
loop
loop
sub
call
out
push
data16
movsb
push
mov
dec
scas
cmpsl
das
sbb
je
jno
inc
in
and
test
sbb
scas
orb
test
push
and
dec
pusha
mov
in
adc
sub
int3
jle
mov
shll
js
pop
xlat
xor
and
in
sbb
ficomps
cs
icebp
adc
inc
mov
filds
sbb
stos
and
jmp
mov
popa
sbb
mov
mov
cli
mov
pop
out
xor
das
sub
push
mov
push
mov
pop
add
mov
mov
jecxz
jnp
adc
cmp
stos
adc
loop
lret
pop
lock
push
es
jo
ss
sub
dec
jbe
fildll
es
push
dec
jbe
inc
aas
scas
sbb
test
lret
add
fldl
or
out
xchg
mov
inc
add
sbb
jecxz
lock
and
mov
mov
push
add
jnp
jg
inc
add
cmpsb
rclb
fisttpll
pop
add
aaa
or
inc
std
sub
pusha
dec
mov
sbb
xor
scas
nop
lods
add
lods
jle
push
mov
mov
cltd
lock
pop
cwtl
cli
incl
cmpsb
add
pop
inc
js
xor
jbe
cmc
fildll
mov
fbld
lds
call
lods
fdivrl
sub
roll
cs
sbb
aam
push
inc
sub
mov
jne
inc
xor
testb
test
lods
sbb
outsl
lret
fs
push
cli
mov
adc
push
jl
outsl
jae
inc
push
popa
mov
add
shrb
and
clc
sbb
sbb
xchg
loop
pop
mov
or
inc
data16
cs
adc
dec
imul
mov
mov
push
mov
and
sbb
xchg
into
call
mov
adc
add
insb
cmp
cmpb
fistpl
bound
aad
hlt
movb
jbe
inc
and
cld
add
andb
aaa
loopne
std
mov
jnp
scas
out
xor
pop
push
std
outsb
add
sbb
cwtl
mov
fists
push
pop
into
cmp
out
sahf
movsl
mov
pop
pop
cmpsb
push
testb
pop
inc
adc
cmp
push
std
mov
and
fwait
cwtl
iret
and
jecxz
lret
clc
or
out
jne
lea
mov
jl
sub
rcrb
push
pop
jecxz
ljmp
sbb
jmp
shlb
enter
insl
pop
dec
mov
sahf
xor
mov
inc
push
mov
xlat
das
ficompl
inc
add
pop
adc
sti
jle
popa
aas
shrb
or
shlb
gs
pop
add
dec
jg
cmp
ss
push
add
inc
rcrb
mov
and
nop
adc
mov
sbb
push
xchg
add
sar
outsl
jg
inc
mov
push
ret
int3
fs
jne
cwtl
mov
mov
push
add
push
andl
scas
andb
mov
jecxz
test
addb
and
ucomiss
or
pop
clc
movsb
jge
jp
push
adc
cmpb
pop
in
and
clc
sub
sub
adc
add
aam
mov
test
push
imul
cmpsb
fcompl
loopne
pop
jmp
movsb
dec
lret
adc
iret
cmp
out
stos
repnz
ds
gs
and
and
mov
inc
add
enter
jbe
xor
adc
loope
sub
or
lret
fistl
push
push
ja
les
cld
jnp
ret
mov
and
fistl
cld
lds
loope
ljmp
loope
add
xchg
jge
ja
sub
jbe
xor
or
push
cmpsb
js
sbb
jo
cmpsl
out
jne
push
sub
pop
mov
mov
testb
filds
lahf
xor
scas
xor
shr
add
mov
adc
out
mov
test
mov
mov
xchg
sub
push
ret
out
mov
sti
mov
add
jmp
jg
cwtl
cmp
and
ja
or
and
mov
xchg
jp
rorl
call
mov
jns
enter
movsb
lock
sbb
ss
or
adc
fucomi
sar
mov
popf
clc
mov
mov
add
jl
ja
cmp
in
stos
pslld
pop
push
adc
pop
or
inc
fistps
push
fidivrl
and
inc
fs
lea
ucomiss
jmp
or
lahf
sbb
outsb
fcmovnb
push
or
cli
jl
inc
mov
arpl
outsl
jmp
lea
add
adc
add
decl
cmpsb
icebp
jp
lret
ret
dec
cli
pop
cmp
jg
ret
adc
test
push
out
stos
inc
clc
add
pop
cltd
xor
adc
ret
push
push
add
dec
sub
inc
cmp
cwtl
cmp
and
dec
mov
mov
aas
mov
call
xor
lret
inc
js
insl
ljmp
inc
mov
mov
sub
outsb
jmp
sbb
mov
clc
ss
mov
jb
sbb
pop
sbb
ret
rcll
pushf
std
mov
push
incb
loop
fists
xor
andl
mov
add
pop
mov
add
xor
lods
jmp
pop
mov
dec
mov
sbb
filds
lods
dec
dec
mov
inc
push
and
ret
movsb
fsubrs
faddp
mov
jmp
loope
xchg
mov
dec
cmpsl
adc
push
cld
stos
mov
or
xchg
cmp
rcl
or
shl
jbe
add
inc
inc
es
dec
mov
hlt
cwtl
inc
mov
pop
cmp
xlat
and
push
cmpb
outsl
test
xor
push
les
hlt
hlt
push
out
push
pop
rcll
aas
pop
ljmp
lcall
test
or
mov
clc
mov
lods
push
dec
and
push
lcall
icebp
xor
imul
push
sub
cmp
scas
or
fwait
sbb
aad
cmp
rolb
cmc
enter
push
mov
push
je
iret
mov
fs
inc
push
lods
xchg
sub
ss
add
mov
js
xor
negb
adc
into
sbb
pop
aam
xor
add
xor
and
cltd
movsl
ret
inc
xchg
mov
dec
ffreep
or
jge
inc
or
pop
icebp
sbb
fdivr
dec
into
cld
loop
add
xchg
push
jb
xor
rolb
les
clc
sbb
std
loop
push
sub
xor
divb
daa
mov
sub
and
addr16
cli
or
and
pop
in
inc
dec
push
bound
pop
jp
pop
mov
jg
arpl
push
mov
xor
cwtl
cmp
rolb
add
outsb
xchg
jl
aad
rcr
idiv
xor
mov
adc
cmpsb
dec
pop
or
dec
mov
popa
divl
add
push
decb
pop
int
mov
imul
lahf
bound
hlt
and
out
push
push
mov
fsubrs
pop
pop
dec
and
inc
iret
xlat
and
or
pusha
pop
loope
mov
dec
cmp
loopne
mov
jmp
dec
pop
pushl
adc
adc
sub
pushfw
xchg
popa
mov
jg
call
fsubr
cmp
mov
insl
mov
xor
inc
int
scas
mov
into
add
data16
adc
jg
mov
in
push
xchg
xor
test
push
jge
fmulp
insb
lret
xorw
adc
ss
in
sub
sub
xor
sahf
pop
cmp
mov
xchg
rcll
push
cwtl
push
cmpsl
pop
sub
or
add
push
fwait
lods
push
xchg
arpl
sbb
out
das
clc
pop
add
mov
jl
inc
add
pop
mov
scas
addl
xchg
sub
push
dec
sbb
pop
jb
pop
divl
leave
pop
sti
cli
mov
xor
xchg
repnz
sti
decl
adc
dec
adc
and
ja
mov
rcrl
bound
inc
js
fcoms
pop
add
nop
fistl
loopne
fildll
inc
test
test
jbe
jno
jne
sti
dec
jmp
pop
dec
inc
loopne
ror
inc
mov
add
call
inc
push
add
dec
add
add
sbb
xor
jl
int3
ret
mov
lcall
mov
sub
xor
outsl
push
sbb
test
mov
dec
lds
lock
fdivrl
lcall
stos
loop
dec
hlt
loope
int3
pop
mov
test
mov
packsswb
sbb
mov
dec
test
push
bound
movsb
jno
add
jnp
jle
inc
ja
mov
ret
and
dec
cld
push
sbb
ds
jnp
push
subl
test
popa
arpl
sub
xchg
mov
aad
mov
pop
mov
repnz
decl
lods
ds
rcll
test
fcmove
xchg
add
scas
push
call
in
gs
sub
lret
adc
shlb
sbb
sti
enter
bnd
mov
bound
jg
daa
in
lock
push
add
lods
cmp
scas
call
mov
fmull
mov
mov
adc
add
xchg
inc
mov
lock
cltd
jl
data16
adc
push
orb
cli
flds
test
and
rolb
jecxz
mov
push
out
mov
dec
aam
jae
mov
dec
jp
fistpll
gs
ss
hlt
inc
sbb
sub
dec
insl
pushl
push
std
push
fildl
xor
inc
pop
roll
ret
pushf
cmpsb
jmp
hlt
scas
adc
pop
mov
fiadds
aad
inc
ret
push
and
xor
fdiv
mov
pushf
jp
or
rorb
adc
hlt
loopne
mov
and
stos
fisttps
movzwl
jle
aam
fs
ret
lea
cmpsb
add
mov
adcb
aad
out
pushf
loope
ret
cmp
cmpsb
je
clc
mov
mov
lcall
cmpsl
add
in
lret
or
add
xor
cmp
cs
pop
xorl
adc
int
cmp
mov
add
adc
fiadds
aad
and
or
fwait
in
lret
add
ficoms
lods
fdivrp
int
mov
pop
or
insb
lods
xchg
stc
insl
and
pop
scas
ret
aam
mov
mov
sbb
mov
mov
cmp
lcall
xor
or
rorl
mov
ja
jp
push
mov
push
mov
jns
jno
inc
push
insb
cmp
clc
lahf
ss
adc
mov
lock
ret
loopne
ja
inc
push
push
aas
mov
cmp
jl
sbb
fnstenv
nop
cld
mov
sbb
sbb
stos
mov
stos
xchg
push
push
jmp
out
daa
les
inc
jne
scas
rolb
roll
xor
orl
ljmp
or
out
outsl
sbbl
adc
pop
add
out
push
sbb
xor
inc
js
xor
mov
repz
insb
mov
lcall
test
leave
push
jae
les
jnp
loop
push
mov
lds
pop
inc
popf
pop
sar
fbstp
flds
cmc
nop
in
lods
lods
fs
sub
pusha
xchg
movsb
push
icebp
jg
mov
jge
mov
js
mov
pushw
and
mov
xchg
xchg
mov
add
sub
imul
jle
lea
push
gs
jl
and
fs
mov
cwtl
or
pushf
inc
lahf
test
pop
test
je
cs
mov
xor
stos
sbb
and
cmp
push
jl
sahf
jp
ss
mov
xor
or
mov
pushl
push
fisttpl
es
mov
inc
fisubs
mov
sub
xchg
cwtl
inc
cs
cmpsb
dec
lahf
into
pop
xlat
and
aas
aad
inc
fstpt
dec
sarb
sbb
jle
adc
xor
mov
sub
loope
sahf
jle
pop
lea
xchg
add
insb
mov
jl
push
cmp
cld
inc
clc
push
repz
add
pop
cs
pop
stos
rcr
and
hlt
cli
xor
fisttps
xor
mov
shrb
inc
cmp
jle
fists
mov
sbb
icebp
loopne
scas
ret
push
jo
mov
and
ret
fwait
jo
cmpsb
aad
jae
or
jne
test
lds
ds
aas
mov
addl
pushf
pop
dec
add
jbe
ret
xchg
sub
dec
out
clts
jmp
fildl
test
xchg
stos
in
adc
lret
out
mov
xchg
les
and
and
loopne
testl
out
lds
inc
and
fucomip
jge
ss
lds
cmp
mov
ret
dec
insb
or
push
sbbl
and
scas
cli
sub
daa
aam
loop
testl
and
movsl
shll
adc
fcmovbe
not
inc
xor
ret
lret
repnz
push
mov
or
lock
lock
sub
xor
out
xor
xchg
pop
xchg
out
or
jmp
sub
outsl
test
daa
dec
loop
pop
adc
insl
es
pop
loop
scas
mov
pop
jb
jb
sbb
jo
jb
bound
inc
mov
fdivr
sub
add
mov
pop
es
add
jg
jecxz
cmc
das
xor
or
dec
fildll
mov
add
dec
out
sub
jg
lods
or
mov
dec
inc
sbb
adc
jp
xchg
hlt
incl
cmc
dec
cmp
scas
mov
add
and
or
inc
inc
dec
adc
enter
push
mov
jl
shll
mov
push
adc
into
push
outsb
je
shll
fsubrl
push
jl
jp
cmp
mov
clc
xorl
sbb
loope
add
or
push
push
mov
lcall
faddl
fimuls
rcl
rorb
sbb
outsb
enter
and
mov
fcomps
push
lods
ss
jl,pt
mov
lods
adc
les
imul
cmpl
pusha
or
je
pusha
mov
mov
fwait
jno
jmp
repnz
rclb
nop
jo
rolb
sti
sub
push
out
iret
fs
inc
mov
ret
cmp
adc
and
sub
mov
ret
ljmp
call
xchg
xor
int3
mov
push
mov
mov
cld
pop
xor
call
fnsave
add
arpl
int3
add
jns
mov
mov
idiv
mov
sub
dec
mov
arpl
ret
sub
int3
and
inc
ja
outsl
stos
incl
loopne
leave
dec
iret
lea
test
pop
sub
hlt
jmp
lea
jp
pop
sub
lcall
pop
add
adc
or
push
add
mov
cld
jl
dec
cli
cmpsb
mov
lret
subl
pusha
pop
adc
das
ljmp
stos
mov
andb
insb
xchg
leave
mov
pop
rclb
icebp
repz
sub
dec
jle
out
cli
push
cmpb
adc
xor
sbbl
lret
dec
shll
lds
stos
xchg
xchg
iret
adc
imul
mov
adcb
ss
decl
fdivrp
in
mov
mov
mov
popa
mov
orb
mov
inc
jg
cmpsb
scas
jbe
cmp
push
xor
jl
stos
lea
insl
andb
je
or
leave
call
pushf
out
fbstp
pushf
dec
scas
jg
push
les
popa
adcl
cmp
clc
adc
mov
divb
jl
inc
push
shlb
lea
data16
es
jp
mov
dec
sahf
add
mov
sub
enter
cli
inc
mov
sahf
sub
les
sti
and
stos
push
adc
xor
je
push
fwait
in
xor
outsb
lock
mov
adc
loopne
dec
pop
add
mov
push
daa
js
sub
xchg
cmpl
mov
in
mov
jle
push
aam
mov
inc
sti
jge
lahf
mov
or
negb
psubb
mov
gs
cwtl
andl
mov
jg
mov
sub
loopne
paddq
fwait
loope
dec
inc
pop
ljmp
and
hlt
inc
or
mov
outsl
cmp
xchg
add
pop
mov
mov
cmp
cli
adc
rclb
sub
adc
mov
das
inc
or
add
inc
icebp
sbb
out
inc
sbb
adc
and
mov
adc
mul
shl
leave
out
scas
pop
cli
mov
jb
sbb
negl
int
inc
inc
sbb
pop
or
pushf
sbb
call
sbb
fbld
mov
mov
jl
or
and
aad
insl
mov
js
in
fisubrs
xchg
add
jae
xchg
sbb
and
mov
sbb
jmp
andb
pop
shl
fstl
shld
mov
pushf
jl
sahf
fidivs
inc
mov
arpl
add
mov
mov
xchg
mov
dec
push
pop
jg
sub
dec
adc
rolb
cmp
jp
or
xor
je
in
xor
push
mov
jne
ror
push
dec
ret
sbb
xchg
movsb
fdivr
adcb
lds
push
sbb
inc
loope
call
out
je
call
andb
pop
mov
xchg
mov
subl
nop
pop
roll
sbb
in
xchg
push
mov
dec
push
ja
fsubrs
cwtl
push
clc
pop
jg
mov
stos
and
add
xor
in
add
or
adc
js
out
call
lcall
gs
inc
loope
xor
pop
cs
test
jo
out
mov
test
adc
jecxz
add
das
sub
idiv
std
add
jg
aam
clc
outsl
scas
cmpsl
rolb
jmp
pop
dec
outsl
push
xorb
insl
scas
inc
jne
cmp
pop
addr16
test
jp
mov
test
rcrl
sub
pushf
imul
push
jp
and
adc
push
ss
rorb
ljmp
mov
xor
cwtl
add
mov
ror
in
inc
inc
push
dec
xchg
push
cmp
adc
adc
pop
pushf
sbb
sti
mov
ss
mov
cld
in
sti
jo
cld
daa
ret
popa
gs
push
push
sub
and
sub
hlt
or
sub
jg
adc
or
hlt
rcll
ret
cmp
add
sub
hlt
push
rcl
sbb
incb
dec
jbe
xchg
clc
adc
mov
sub
xchg
fisubs
out
lock
out
jns
aam
add
inc
push
push
test
bound
push
aad
adc
xchg
test
leave
add
inc
cmpsb
stos
pop
orl
pushf
or
mov
inc
pop
icebp
push
shr
mov
movsb
ljmp
inc
inc
push
inc
and
cmpsb
cmp
jl
xchg
shrl
jo
shrb
lea
shll
mov
add
ret
add
mov
mov
fistl
in
adc
mov
sbb
addb
jns
xor
xor
inc
call
add
dec
adc
xor
or
scas
jb
add
js
sbb
stos
outsb
outsl
xchg
pusha
aad
mov
testb
add
adc
xchg
sbb
push
fistpll
adc
call
push
or
xlat
adc
xor
jmp
imul
cld
incl
xorl
rcrl
cltd
and
dec
sbb
mov
aam
out
xor
dec
ljmp
inc
cli
sub
sbb
xor
movsl
add
inc
fucomi
xchg
nop
adc
call
mov
push
lret
dec
add
cmp
adc
xor
test
mov
jmp
sub
inc
bound
fcomip
scas
push
cmp
adc
ja
cmpsb
les
mov
mov
icebp
sub
adc
xor
mov
shll
inc
movsl
loopne
fistl
lock
mov
mov
gs
fistps
mov
sub
sbb
inc
shrl
ret
add
mov
add
mov
add
pop
mov
sarl
jg
or
pop
jno
jge
scas
decl
testb
shlb
mov
daa
cmc
call
pop
sub
dec
bound
incl
push
daa
jle
jmp
mov
popa
xchg
and
xchg
inc
mov
pop
pop
test
add
cli
scas
lock
adc
push
sub
pop
inc
xchg
inc
mov
push
clc
fistpll
add
shl
add
call
cmp
or
dec
into
les
cli
jg
ljmp
add
outsl
out
cmp
lods
push
sbb
add
inc
lea
xchg
stos
mov
jl
xchg
orl
sub
mov
jo
ljmp
in
pop
sti
lret
lock
fisubs
add
ss
scas
mov
mov
xchg
inc
add
pop
repnz
cmp
push
mov
mov
cmp
mov
add
sahf
cmpb
outsb
lahf
or
inc
addr16
es
cmc
jnp
clc
add
push
insb
and
add
outsb
in
xor
add
cmp
idivb
clc
pop
pop
out
in
fistl
cltd
stos
mov
mov
push
push
imul
cmc
add
adc
sbb
inc
lret
mov
lock
subb
pop
inc
or
jl
mov
out
add
adc
cmp
mov
fidivrs
adc
and
fidivs
inc
outsl
nop
hlt
push
es
pop
stos
popf
aam
sub
dec
call
ret
xlat
mov
xor
dec
cmpsb
stc
shll
cli
call
jo
les
xor
mov
push
ljmp
shrb
cmpsb
mov
fdivl
sbb
sbb
push
lock
xchg
adc
add
out
xor
add
push
outsl
mov
jl
pusha
js
scas
and
bound
push
jmp
stos
insb
mov
and
pop
adc
outsl
decl
adc
clc
jo
dec
adc
int3
gs
xlat
test
mov
sub
aam
mov
cli
in
mov
loope
sbb
shrl
adc
xchg
or
push
pushf
ret
and
cli
test
bound
mov
ljmp
int3
bnd
and
mov
push
pop
jae
adc
fwait
push
call
push
repz
sahf
dec
orl
cmpsb
mov
cmp
pop
pop
dec
ljmp
dec
dec
mov
sbb
or
or
push
inc
add
jnp
roll
or
mov
lds
dec
or
fcom
mov
pop
inc
xchg
addb
shlb
addr16
ficoms
xor
mov
add
fcoml
lcall
lods
gs
sarb
dec
mov
std
lods
clc
in
arpl
xor
lcall
ljmp
in
adcl
outsl
dec
sub
and
xor
stos
mov
in
cmp
mov
and
fcoms
push
jg
push
push
mul
cltd
fdivrp
sub
pop
imul
jne
mov
add
pop
je
test
cmpsb
sub
cmp
lcall
cmp
mov
orl
mov
pop
push
dec
push
cmpsb
inc
fidivrl
push
scas
std
lcall
push
and
push
add
fs
dec
loop
pop
cmpsl
xor
cld
add
push
std
ljmp
jnp
mov
push
mov
enter
adc
jmp
xchg
mov
push
aaa
in
fdivrp
push
mov
jbe
xchg
test
mov
xor
jp
fsubrl
jl
inc
push
add
mov
jg
sbb
ret
push
add
dec
xor
leave
movb
jle
iret
int
sub
push
mov
call
popa
out
into
add
js
test
push
ret
dec
decl
lods
xchg
mov
movsl
mov
inc
fstpl
stos
or
inc
addl
push
lock
enter
scas
ljmp
fsubrp
pop
and
ret
pop
inc
pusha
pusha
xor
movsb
cmpsb
inc
aaa
or
loopne
pop
pusha
mov
push
dec
dec
lret
or
repnz
xlat
imulb
cld
and
test
inc
and
outsb
push
hlt
inc
aas
sbb
mov
xor
xlat
mov
cld
dec
jbe
xchg
test
ret
int
push
shrl
jne
sarl
mov
cmpsb
mov
fildll
mov
push
dec
decl
pop
mov
dec
push
lea
xor
mov
mov
cmp
sbb
rolb
pop
pop
jg
cmp
jg
and
cs
fsqrt
data16
je
shl
adc
es
mov
and
loope
mov
movsl
xchg
adc
stc
sbb
mov
or
divb
jb
ret
add
mov
xchg
jbe
sbb
inc
and
jecxz
xchg
rcll
aas
push
push
cmpsl
add
push
xorb
test
sbb
jg
in
inc
in
int3
jp
and
push
jbe
xchg
movsb
stos
mov
xchg
out
dec
loop
cld
aas
and
push
lret
push
testb
mov
popf
mov
test
xchg
or
adc
test
pop
add
int3
pop
pop
out
inc
mov
lcall
push
or
add
sub
push
jle
pop
lret
add
das
push
decb
mov
in
lods
dec
push
ljmp
out
or
in
sbb
lea
sbb
and
sbb
mov
mov
in
adc
cli
shl
ret
sub
inc
mov
cli
sahf
push
shrl
mov
jmp
dec
cmp
out
test
inc
jmp
push
lea
mov
test
test
mov
stc
push
int
add
cwtl
aad
cltd
sbbb
stos
mov
pop
xchg
push
mov
pushf
adc
inc
int
rorl
int
mov
sbb
pop
cmp
pop
mov
add
addl
cmp
aas
dec
out
ficoml
test
adc
cmp
in
inc
enter
push
mov
pop
pop
sbb
inc
std
xor
cs
mov
lods
mov
or
into
je
dec
pop
mov
add
movsb
test
push
mov
mov
inc
mov
aam
nop
jo
adc
adc
stos
xchg
or
lods
ds
pushl
inc
cmp
shl
into
pop
mov
mov
push
cmp
shrl
loopne
or
push
fsubs
mov
mov
xor
sahf
clc
ljmp
clc
add
lcall
push
xchg
cmp
fldcw
xor
mov
mov
fcmovnbe
mov
aas
lret
fcoms
les
inc
cwtl
into
mov
jg
pop
lods
js
sbb
repnz
push
ljmp
mov
push
mov
pop
sti
add
inc
gs
in
test
mov
shlb
sub
test
mov
test
inc
shl
fsubrs
dec
push
es
inc
jg
sti
cmp
fsubrs
or
jl
mov
push
mov
jmp
jmp
lock
adc
nop
or
xchg
aas
add
xor
cs
adc
aam
test
jle
fnsave
ljmp
xor
add
negb
leave
call
insb
jns
inc
test
icebp
mov
pop
in
add
xor
add
out
sub
or
xor
es
jge
lock
or
fisttpll
in
push
add
push
cwtl
or
sarl
outsl
cmp
sbb
outsb
mov
inc
push
push
or
loopne
je
add
ja
push
jae
or
gs
inc
outsb
outsl
out
test
cwtl
or
aam
fsubs
les
push
cli
adc
aam
sahf
mull
inc
dec
push
das
mov
aaa
add
adc
loop
es
cli
pop
adc
add
mov
das
aaa
or
push
push
ljmp
icebp
mov
orb
xor
cltd
sub
loope
sarb
and
icebp
xchg
push
inc
arpl
sub
fs
lcall
test
add
jp
xchg
add
jns
arpl
push
xchg
test
xchg
cmp
fildll
bound
fs
pop
pop
jp
in
stos
sahf
lcall
aam
or
jns
cmp
inc
jno
adc
pop
mov
fnsave
xchg
ja
mov
xor
ljmp
mov
lds
idivb
add
jbe
push
aam
repnz
adc
ja
ret
lcall
adc
out
hlt
mov
cmp
pop
xorl
mov
and
and
adc
pop
sti
sub
sbb
movsl
xchg
aaa
mov
out
lcall
decl
adc
or
lcall
add
ljmp
sub
push
jle
mov
andb
pop
lds
and
fidivs
cmpsl
aam
test
cmp
ja
stos
push
fdivrs
mov
mov
mov
mov
aad
cmp
pop
adc
scas
xchg
sub
or
int3
stos
sub
aas
stos
nop
mov
lock
jno
push
sub
adc
inc
aam
pop
xchg
pop
add
clc
aam
stos
jo
adc
push
lret
dec
push
popf
icebp
cmc
lock
imul
sahf
les
jp
add
add
mov
push
incl
sbb
xchg
scas
inc
inc
push
loopne
pop
jp
or
test
jg
fists
std
push
sub
sahf
mov
int3
add
push
add
std
sbb
out
xchg
insb
loopne
mov
adc
pop
stos
cwtl
imul
mov
pop
push
scas
movsl
lock
fbstp
add
xor
or
pop
stc
cwtl
leave
jle
js
mov
push
dec
aaa
in
dec
sar
movsb
push
pusha
sti
mov
mov
imul
insl
ljmp
dec
pop
sub
scas
outsl
les
dec
std
pop
dec
mov
gs
inc
loop
hlt
nop
cmp
call
shlb
lods
ljmp
or
mov
jmp
loop
incl
fnstsw
scas
jns
lret
imul
pop
lods
xor
out
call
push
dec
iret
lret
test
ljmp
lahf
add
mov
fisubrs
in
aaa
or
push
cwtl
int3
test
mov
cmp
insl
cmp
pusha
cltd
mov
jno
mov
jns
aam
das
inc
scas
ss
orb
adcb
adc
bound
xchg
sahf
cmp
ss
sub
fdivrl
outsl
jp
xor
ljmp
lock
mov
add
mov
call
lret
pushf
arpl
sub
out
cli
push
and
jge
setno
jbe
cltd
push
scas
xor
inc
ss
cmp
and
mov
adc
dec
mov
loopne
mov
fwait
leave
push
and
pop
loopne
xchg
or
mov
xchg
mov
pop
mov
inc
decl
xor
test
xchg
xchg
ss
cmp
push
shrb
js
std
mov
shll
dec
insl
mov
sti
fwait
mov
jo
ljmp
loopne
add
js
sbb
out
cmp
sub
lahf
push
sarl
and
xchg
icebp
cmpsb
fidivs
subb
xor
push
mov
outsl
push
insl
out
cwtl
bound
jecxz
dec
call
loope
mov
mov
cmp
sub
enter
dec
scas
inc
add
cmc
pop
xchg
mov
fs
test
outsl
cmp
popl
fcompl
das
ret
pop
adc
adc
mov
notb
sub
stc
push
dec
testb
or
sub
test
xchg
inc
jg
or
les
xchg
add
sbb
lea
mov
dec
hlt
or
xchg
lods
ja
clc
lock
xchg
cmpl
add
shrb
out
add
or
lea
adc
shlb
ljmp
push
hlt
aad
xor
push
popa
xchg
inc
clc
cltd
insb
mov
pop
cld
pop
loopne
and
push
jnp
mov
push
sbbl
fidivs
inc
inc
sbb
dec
lcall
add
lcall
popa
sahf
insb
lock
push
ljmp
jmp
clc
fdiv
jg
pop
into
fs
inc
fs
es
add
mov
out
cmpsb
test
enter
jb
les
cs
adc
sub
es
je
call
std
and
or
jmp
xor
sbb
loope
lea
mov
adc
and
add
mov
add
add
cwtl
hlt
in
sub
fwait
lcall
and
cmp
scas
push
cld
test
sbb
int3
movsb
add
or
mov
pushf
pop
fbld
pushf
loope
pop
stos
pushf
movsb
xor
push
jl
fs
hlt
movsb
jg
mov
mov
sub
ss
pop
mov
in
mov
inc
jl
fidivs
push
mov
cmc
mov
shlb
sub
sub
dec
jp
add
xchg
es
mov
inc
rol
xchg
js
scas
icebp
jle
inc
insl
dec
repz
sub
add
repnz
das
adc
mov
jg
and
hlt
xchg
ficoms
cli
ret
add
mov
call
inc
dec
adc
loop
inc
adc
mov
push
fidivrl
xor
fnsave
std
andl
mov
sub
lds
shll
adc
mov
fimull
push
aam
sahf
mov
inc
pop
xchg
mov
test
add
aas
loopne
mov
push
sub
add
inc
decl
adc
add
and
add
imul
ror
ficompl
add
inc
cld
test
and
mov
decl
aaa
outsb
cmp
sbb
or
icebp
std
cmp
or
dec
pop
lock
sbb
push
into
cmp
sub
inc
outsl
and
and
mov
cs
lcall
jmp
dec
call
sahf
les
xor
add
aas
inc
mov
mov
sbb
push
pop
mov
pushf
into
pop
ret
cmpsb
mov
repnz
mov
mov
enter
lea
push
jl
xor
mov
aas
xchg
insl
ja
mov
pop
scas
pop
sub
inc
iret
inc
add
xor
test
adc
movsb
sub
out
xchg
adc
inc
mov
mov
adc
je
add
inc
mov
imul
loope
das
mov
xchg
aam
lods
out
clc
ret
fs
pop
fidivrs
cmpsb
lock
pushl
dec
inc
pop
dec
pop
aad
mov
push
push
xor
and
std
int
movsl
add
push
nop
std
cmp
js
loope
xchg
push
outsl
and
sub
mov
adc
pop
push
pop
and
mov
mov
mov
out
pop
push
decl
sub
ss
cwtl
dec
cmpsb
fcmovne
sub
std
test
pop
jne
adc
cmp
insb
pop
rorb
jne
adc
jp
dec
shlb
push
inc
movsb
push
mov
fisttps
cmc
outsb
xorl
mov
jbe
sub
inc
lea
mov
cwtl
inc
pop
xchg
jo
call
pusha
mov
xchg
sti
pop
inc
imul
loop
aam
insb
cs
jp
or
sbb
arpl
dec
mov
mov
outsb
pushf
nop
sbb
or
nop
in
sub
mov
nop
or
fistps
in
jp
stos
or
jno
test
outsb
inc
sub
or
sub
mov
xor
lcall
push
mov
hlt
add
addr16
nop
jne
sub
push
add
sub
sbb
les
data16
out
rol
fildl
mov
repnz
cmp
mov
testb
mov
push
mov
int
pop
cltd
push
addr16
int
ret
mov
movsb
sub
loopne
push
push
fsub
incb
in
xor
les
jp
lds
lods
cmp
decb
mov
sub
cwtl
push
or
std
jl
rcl
mov
dec
or
pop
push
adc
mov
idivb
rorb
inc
mov
xor
mov
js
mov
mov
pushf
jg
xorb
sbb
pop
adc
iret
add
or
in
sahf
add
sub
inc
xor
sbb
call
popa
dec
loop
test
lods
add
fisubrs
mov
arpl
push
lcall
and
lods
sbb
int3
nop
inc
jp
fwait
std
xor
add
sub
cs
pop
inc
imul
and
or
mov
pop
shlb
push
inc
dec
cmp
adc
fdivp
pop
dec
xchg
xchg
incl
push
cmp
dec
mov
or
mov
pop
loope
sarb
in
pop
jae
insb
popf
ret
add
mov
incl
dec
mov
jae
mov
cmpsb
mov
inc
mov
and
pusha
inc
add
jmp
xor
std
or
inc
push
add
mov
sub
je
jp
add
add
mov
gs
xor
lcall
pop
arpl
aad
or
or
mov
mov
subb
mov
mov
out
idivb
mov
cmpsl
pop
jns
xor
add
xchg
mov
test
jecxz
fcoms
into
dec
outsb
sar
insl
fistpll
dec
xchg
pop
adc
or
cmp
sub
js
shl
movsb
mov
shlb
scas
scas
push
jnp
les
xchg
in
outsl
ljmp
mov
fiaddl
xchg
push
add
sahf
add
jae
mov
je
insb
mov
push
mov
add
pusha
ljmp
cmp
shll
lcall
dec
adc
ja
stc
pop
xor
mov
imul
ret
sbbb
mov
movsb
repz
mov
mov
repnz
scas
adc
push
ds
fwait
and
test
mov
inc
adcl
and
cmp
mov
or
punpcklbw
orl
jbe
fisttpll
cmp
cmp
adc
xchg
pop
adc
adc
xor
jb
or
push
mov
mov
clc
sbb
cmp
add
ds
mov
test
in
popa
je
inc
cmpsl
mov
lds
aam
push
push
rorb
jne
sub
in
out
cwtl
sbb
push
add
lret
or
dec
or
std
nop
into
push
push
aas
out
lds
addl
dec
add
fidivl
test
jl
lods
test
sbb
or
mov
popl
lcall
and
dec
xchg
add
jecxz
sub
and
mov
jge
push
jo
add
clc
hlt
xor
sbb
mov
fidivrl
cmpsb
aam
ficomps
jg
push
push
das
in
sbb
incl
mov
pusha
fcmovne
test
dec
movsb
jg
cmc
mov
stos
pop
adc
or
inc
pop
sbbl
shlb
mov
shr
pop
mov
cli
and
sbb
test
add
adc
call
jae
cli
lahf
sbb
mov
xorb
adc
jo
int3
inc
pushf
mov
enter
data16
sbb
mov
inc
xor
mov
hlt
dec
mov
add
mov
inc
mov
test
jb
fmuls
inc
dec
cmp
insl
inc
jae
mov
mov
jnp
jp
adc
sbb
mov
pop
push
dec
out
test
mov
adc
pushf
pushf
adc
test
scas
fldt
pop
das
adc
clc
shr
jg
push
jl
add
push
ja
mov
jb
cmpsb
sub
inc
push
add
into
add
aam
inc
mov
lods
add
inc
push
test
out
clc
lcall
mov
fwait
add
test
sbb
scas
inc
jmp
inc
or
std
push
inc
dec
xor
push
loope
jno
stc
xchg
outsb
int3
push
cmpb
add
lcall
xorb
loopne
xchg
into
xor
xchg
push
pusha
ret
loope
mov
cmpsb
xor
mov
aaa
cmp
fmuls
fdiv
jmp
sti
ljmp
mov
mov
add
and
and
adcl
ja
push
push
cmp
pop
sarl
out
pop
popa
mov
push
in
mov
outsl
jp
jl
sbbl
call
cmp
add
stos
pop
sbb
add
sub
fmuls
inc
aam
mov
cltd
mov
sub
lods
lock
jno
fsubrl
cwtl
fldl
sub
mov
movsl
or
fwait
mov
dec
fadds
jl
jmp
xor
mov
mov
lahf
mov
ja
loopne
sub
movsb
mov
je
push
sub
movsb
pop
lea
mov
dec
dec
mov
fwait
push
dec
loopne
adc
xchg
cmp
push
mov
or
lea
rcrl
xor
push
jb
cli
insl
rcl
mov
pushf
cs
pusha
hlt
testb
lods
pop
pop
loopne
dec
shll
in
stos
cli
inc
add
sti
ret
add
mov
dec
loop
pop
mov
pop
jnp
leave
xor
into
adc
or
clc
jb
ficoms
inc
das
cld
negb
inc
popa
add
adcb
inc
les
fbstp
pop
add
dec
xchg
ljmp
lock
push
sub
lds
cmc
pop
dec
pop
mov
shlb
inc
add
js
ss
push
popa
cli
and
decl
les
xchg
ss
in
mov
jl
out
mov
lods
and
and
iret
pusha
and
add
mov
push
pushl
out
add
add
repnz
rol
mov
push
fadds
loopne
int3
call
push
or
movsb
cmp
xor
inc
push
mov
and
fdivrl
add
cmp
int
add
icebp
pusha
dec
cmp
push
jp
lock
imul
mov
or
fidivrs
mov
addr16
cmp
idivl
push
aam
addr16
repz
push
push
jl
aas
aam
faddp
pop
adc
xor
push
dec
mov
out
dec
sub
add
mov
dec
mov
enter
pop
outsb
adc
je
cld
test
or
mov
push
shlb
sbb
add
and
add
and
add
adc
push
add
cmp
pop
xor
js
adc
mov
fstps
xchg
add
cld
scas
movsl
cltd
mov
or
cmp
adc
mov
jecxz
adc
hlt
pop
jo
nop
mov
sbb
lds
sahf
jge
test
add
and
mov
shrl
sahf
call
xchg
pushf
rol
adc
rcll
cmp
call
cmp
ljmp
xchg
pop
pusha
add
or
jne
fisttpll
jbe
call
xchg
push
clc
mov
push
inc
xlat
insb
les
push
popf
test
loope
fcompl
push
hlt
add
pop
popf
push
push
push
aas
nop
mov
push
sub
mov
add
jl
mov
sbb
mov
jecxz
js
xchg
je
test
sbb
or
repnz
pop
inc
xor
mov
adc
clc
les
xor
cmc
lret
cmp
push
pop
sti
out
mov
inc
pop
adc
add
dec
push
sbb
jmp
mov
xchg
xchg
aad
cmp
xor
clc
adcl
push
clc
cmp
add
test
repz
xchg
in
mov
icebp
pop
ret
mov
fs
push
mov
es
mov
push
add
cmp
fs
mov
dec
pop
sub
pop
or
int3
xchg
hlt
ljmp
inc
scas
mov
inc
ljmp
jnp
dec
scas
sldt
cld
out
ja
sub
adc
mov
out
xchg
add
ss
pop
mov
popf
fs
jg
xor
imul
mov
cmc
add
hlt
daa
or
pushf
in
hlt
add
jecxz
fisubs
cmp
jle
adc
push
icebp
or
lock
pop
aam
pop
popa
mov
ljmp
out
add
jg
inc
push
test
xor
ret
sti
subb
and
lret
jo
fistpl
loop
pusha
test
clc
cltd
ja
sbb
negl
or
ror
dec
inc
scas
add
fwait
cmp
movsb
imul
sbb
push
mov
adc
sbb
outsb
cmp
pop
lock
popa
loopne
out
cmp
mov
jl
mov
in
test
shl
clc
outsl
jo
jmp
in
mov
out
xchg
or
std
mov
add
cwtl
adc
scas
xchg
insb
fucomip
xchg
push
dec
mov
enter
es
add
and
add
sub
xorb
inc
or
mov
mov
pop
dec
xor
mov
or
movsl
cmp
mov
add
and
es
decl
rorl
sbb
adc
mov
push
jle
xchg
push
lods
pushl
cltd
and
xchg
leave
outsl
setae
adc
jl
xchg
inc
adc
mov
les
mov
scas
pop
jl
mov
add
mov
dec
out
adc
ret
lds
test
lock
les
aam
les
cmp
daa
je
push
out
mov
ffree
dec
pop
jno
shlb
xchg
cwtl
jmp
jecxz
mov
mov
jbe
dec
sbb
addr16
fldcw
mov
loopne
cmp
mov
push
cwtl
scas
lock
ja
xor
ljmp
mov
mov
orb
xor
test
aam
pop
and
cmp
inc
jmp
test
and
sti
lcall
jmp
call
lcall
inc
mov
loope
push
sub
sbb
pusha
pop
push
data16
jno
jg
loope
add
fidivs
arpl
out
cmpsl
lock
add
sbbb
mov
test
sbb
ds
int3
jle
jg
mov
xchg
mov
and
push
clc
pop
lock
aas
add
dec
inc
ljmp
jne
pop
lret
lods
pop
mov
adc
ljmp
inc
add
dec
pop
xchg
pop
xorb
inc
sbb
sub
and
and
pop
mov
rep
std
sbb
lret
mov
add
or
jecxz
sarb
lcall
aaa
in
ret
int
fs
inc
cli
in
sub
test
call
push
mov
mov
and
cmp
fwait
add
or
sub
imulb
and
pop
in
push
dec
rclb
pop
fdiv
pop
add
and
adc
in
xorb
add
jge
add
outsl
mov
adcl
and
pusha
in
xchg
fisubs
fst
test
push
add
stos
and
popa
inc
sub
mov
ja
jo
rorl
push
lods
mov
fwait
xchg
or
dec
mov
mov
inc
test
mov
stos
sub
nop
sub
ret
mov
mov
test
jmp
in
ljmp
scas
outsl
test
jge
insb
and
or
cltd
jmp
mov
sub
data16
lcall
pop
aaa
add
pusha
xorb
add
call
in
je
or
popa
push
fidivs
adc
adc
xchg
repz
es
loop
inc
push
push
mov
or
shlb
jp
std
sbb
jns
jns
ficompl
xchg
xor
pop
mov
movl
pop
adc
push
repnz
mov
pushf
lock
mov
push
stos
add
shrl
inc
push
push
out
into
mov
mov
push
dec
pop
inc
adc
dec
stos
cld
pop
adc
xchg
push
rcll
in
mov
stc
in
lods
insl
call
shlb
add
rorb
xchg
xchg
sub
ljmp
jle
push
jo
fidivl
sub
push
out
jmp
add
cmp
jbe
xor
fcom
mov
mov
adc
popf
dec
jecxz
shrb
push
push
cmpl
je,pt
imulb
mov
or
jp
call
lcall
fcoml
push
add
shlb
insb
mov
loopne
ja
jp
jmp
mov
andb
pop
mov
adcb
insl
and
add
or
mov
jge
mov
mov
mov
and
jmp
dec
adc
testb
cmp
rorb
jle
cli
xor
enter
mov
push
or
std
mov
iret
push
pop
mov
jecxz
sub
das
pop
dec
adc
fdiv
test
test
fmull
addr16
aad
daa
pop
rclb
clc
push
scas
lods
js
fsubrp
dec
mov
or
or
sub
mov
adc
cli
mov
in
push
sbb
jle
sub
rol
sarb
jecxz
or
push
dec
xchg
jg
mov
sub
stos
fcmovu
push
addb
std
mov
pop
mov
adc
mov
in
dec
jle
inc
mov
xor
add
fs
jmp
loop
bound
enter
mov
jecxz
xor
push
icebp
outsl
pop
sti
adc
xchg
int3
test
sbbb
andb
decl
icebp
sub
dec
jo
or
or
test
mov
pushl
orl
xchg
stc
jmp
iret
pop
stos
push
lock
push
lea
mov
nop
push
hlt
mov
mov
jg
mov
mov
adc
jl
test
outsl
fwait
ds
add
movsb
test
aas
clc
mov
add
mov
enter
jbe
aam
imulb
inc
pushf
or
fsubrs
loope
jo
mov
adc
jnp
add
mov
jl
push
testb
push
inc
push
mov
call
jmp
lcall
sub
mov
pop
add
pop
fcomps
cs
icebp
scas
cli
cmc
or
sti
pop
push
pop
cwtl
add
out
aam
jmp
pushf
or
loope
xchg
adc
stos
jp
je
insl
shll
dec
fisubl
dec
mov
push
fucomi
subl
das
int3
sbb
test
sbb
mov
sbb
xor
and
cs
push
cmpsb
xor
and
sbb
fsts
jle
sbb
ja
fildl
push
inc
loopne
add
push
sbb
out
mov
cmc
insl
fmull
or
lret
add
xchg
test
cld
sub
fs
ja
movl
add
fistps
cwtl
in
mov
pop
dec
lock
les
neg
mov
out
testl
adc
xchg
cmpsl
out
mov
mov
jg
in
adc
mov
xlat
cmpsl
adc
mov
enter
mov
insb
rclb
xor
mov
daa
movsb
mov
mov
ficomps
imul
inc
xchg
push
xchg
psrlw
decl
loopne
pop
addb
dec
xor
int
push
jge
notb
adc
mov
rorb
add
fildl
mov
cmpsb
jae
dec
out
cli
scas
rcrb
lahf
xchg
push
mov
add
repnz
mov
adc
nop
sub
push
pop
cmp
sbb
lcall
adc
in
mov
mov
test
mov
je
xchg
push
lock
pop
cli
data16
gs
dec
mov
push
jl
mov
aaa
ljmp
sub
xor
cmc
or
sar
or
negb
addr16
cwtl
loope
hlt
xchg
jmp
or
add
mov
fldt
or
pop
mov
mov
shrl
mov
lock
scas
aam
popa
inc
dec
into
incl
shll
mov
inc
mov
add
pop
in
clc
cltd
das
mov
jo
adc
add
mov
add
dec
add
lret
repnz
cld
mov
clc
jecxz
mulb
in
mov
push
xchg
add
test
filds
divl
adc
push
in
cs
ds
sbb
popa
test
inc
xchg
adc
and
jp
push
loopne
and
or
loope
das
mov
ljmp
scas
xchg
cmp
xchg
xchg
imul
lret
into
sbb
push
or
outsb
adc
add
ss
outsl
xor
push
pop
rorl
xor
js
pop
adc
adc
jmp
test
ss
mov
sahf
fbstp
ljmp
mov
inc
jno
xor
pop
loop
xchg
bound
dec
pop
fstps
cmc
pop
sarb
add
loop
subb
push
fwait
and
clc
inc
and
cmpsb
pushf
ret
xor
std
cs
xchg
or
int
enter
ljmp
inc
jo
mov
into
sahf
or
dec
mov
push
data16
cmpl
xor
mov
mov
aad
mov
pop
adc
movsb
cmp
popa
out
mov
addl
sbb
decl
fcomps
in
adc
and
sub
mov
inc
es
xchg
loope
fistl
and
push
bound
pop
mov
pusha
pop
iret
mov
ret
cvtpi2ps
push
popa
mov
fs
in
sbb
ja
and
lods
push
mov
xchg
clc
cwtl
mov
aam
mov
in
lret
out
test
mov
push
clc
jne
imul
fstpt
mov
stos
rorb
rorl
dec
pop
or
scas
sbb
pop
test
loop
push
cld
ja
loope
add
addr16
sbb
add
adc
pop
scas
dec
add
ljmp
adc
add
add
test
adc
jno
je
clc
jg
xor
scas
add
xor
imul
inc
ss
mov
sub
loope
mov
cmp
cmp
add
lods
inc
pusha
rorl
test
mov
mov
sbb
fwait
pushf
sub
mov
pop
shlb
aad
fisttpll
push
in
shlb
test
jl
dec
push
pop
lea
add
cwtl
xor
push
push
rcrb
bound
mov
pop
inc
cmovo
xor
or
xorb
fadds
in
mov
adc
lds
or
or
imul
lcall
jmp
jle
push
sub
cwtl
mov
sbb
xchg
es
lea
lods
add
mov
stos
std
sub
cmp
lods
mov
hlt
pushf
jns
cmp
push
outsl
gs
pop
add
shrb
add
pusha
push
adcl
insl
sub
test
ja
or
lret
add
ljmp
add
cmp
jmp
cmp
sarl
mov
decl
mov
mov
mov
fs
jp
aaa
ljmp
push
popa
mov
adc
icebp
pushf
pop
movsl
je
mov
test
jae
lahf
mov
insb
and
data16
xor
sub
outsb
mov
sub
aam
sbb
mov
push
pop
xor
push
dec
popf
push
test
sbb
popa
loopne
inc
dec
inc
icebp
dec
sbb
sbb
call
jp
cli
dec
pop
popa
mov
jp
aaa
adc
push
in
outsl
scas
mov
rcrl
jae
ds
xchg
insl
imul
movsb
inc
jle
mov
add
dec
loopne
or
inc
mov
pop
mov
pusha
call
dec
popa
push
push
or
lock
inc
ret
pop
xchg
shl
inc
dec
inc
dec
mov
add
sbb
pop
mov
ud2
jnp
hlt
sti
jg
cmpsl
outsb
fcoml
push
outsl
rol
push
inc
pop
cld
insl
movsb
adc
lea
int3
into
stos
aaa
sbb
adc
cld
ss
push
dec
stos
sbb
sub
pop
add
scas
lcall
add
or
dec
jmp
add
sbb
adc
orb
sbb
add
scas
jmp
inc
mov
decb
add
and
pop
xchg
sbb
in
dec
or
lock
pop
nop
and
xchg
xchg
add
ss
add
sub
and
inc
outsb
inc
add
or
pop
sub
xchg
xchg
pop
test
aas
bound
or
out
mov
inc
in
add
pop
xor
inc
inc
jnp
aam
pop
push
mov
aaa
loop
push
enter
and
fxch
or
push
lea
loopne
adc
outsb
mov
mov
es
mov
movsl
or
inc
sub
cmp
stos
pop
sbbb
cli
imul
lock
aas
aas
ds
dec
es
aaa
loope
std
xor
mov
push
mov
lret
cmp
cli
stos
jnp
mov
or
ret
xor
dec
nop
aaa
loope
fs
decl
test
xchg
mov
xor
lcall
mov
sarb
das
insb
cmpsb
and
das
into
rcrl
jo
int3
xchg
mov
push
clc
and
enter
push
test
rclb
push
les
add
mov
lcall
inc
adc
scas
and
add
jns
sub
rorb
adc
fcomip
popf
mov
adc
sbb
and
ja
jmp
fld
push
jb
cmp
cltd
std
out
or
add
pop
mov
aad
rol
push
mov
jae
icebp
sbb
pop
jg
sbb
pop
jp
add
mov
sbb
mov
ja
add
push
rcrl
femms
jl
mov
jae
arpl
shlb
iret
hlt
cmp
mov
and
mov
add
fadds
movsb
nop
and
mov
dec
clc
and
icebp
pusha
inc
mov
lock
xor
ror
dec
and
dec
lods
test
mov
cmpsb
sbb
and
jl
stos
and
jmp
lds
cmp
int3
idiv
mov
dec
mov
xorb
fs
sahf
divb
rorl
sarl
ss
mov
jae
sub
test
adc
lret
inc
xchg
imul
sarb
jge
outsl
in
fmuls
cmp
lret
cmpl
icebp
outsb
adc
and
sti
or
mov
out
mov
and
and
mov
xchg
jmp
sbb
jge
dec
movsb
and
sahf
or
pop
pop
pop
mov
xor
test
pop
stc
sahf
mov
and
xchg
loopne
add
lcall
out
xor
ljmp
sbb
add
pop
js
pop
movsl
scas
jb
movsl
loop
not
insb
addr16
mov
mov
shll
adc
add
dec
xchg
aad
dec
sti
xchg
andb
int3
cmp
or
dec
subb
push
pop
mov
subb
jnp
adcb
cltd
push
and
and
lock
rolb
xchg
int3
jns
incl
fwait
into
lock
dec
jecxz
insl
psubusb
call
xchg
inc
add
sbb
cld
sbb
outsl
fdivr
jg
sub
add
add
xchg
aas
xchg
add
push
fdivp
jnp
rolb
pop
or
into
movsb
cmp
mov
lods
pop
xchg
jl
stos
push
xlat
adc
nop
push
insl
std
mov
imul
mov
jp
testb
ds
test
fwait
push
mov
iret
sbb
in
and
jns
push
inc
pusha
adc
lods
or
jecxz
jae
pop
cli
inc
push
mov
adc
or
adcl
mov
push
push
hlt
insl
sub
mov
adc
jmp
sbb
pop
leave
mov
lock
dec
dec
cmp
mov
adc
fisubrs
xchg
or
pop
cld
aaa
sbb
fimull
cmpsb
mov
xor
sub
bound
stc
sarl
ljmp
mov
clc
jecxz
test
pop
add
jno
mov
pop
jo
mov
les
aas
adc
clc
or
pop
mov
pop
or
ret
ret
cmp
add
cmp
or
cli
fwait
outsb
push
cmpsb
ljmp
dec
and
sbb
out
and
movsl
mov
outsl
and
mov
push
sahf
pushl
lcall
dec
dec
loope,pn
add
sbb
call
dec
xorl
and
scas
in
dec
sbb
sbb
or
adc
dec
or
or
sub
inc
stos
mov
push
xlat
push
jo
fbstp
sub
cmpl
xchg
scas
mov
ret
lcall
cwtl
xchg
mov
ljmp
loope
pop
mov
lock
or
addr16
fbstp
push
add
sbb
lret
lods
cmc
mov
push
rcrl
fs
aas
stos
inc
push
imul
inc
aaa
hlt
pop
mov
ss
pop
and
add
xchg
cs
xorb
lods
mov
mov
inc
mov
jo
movsb
sub
push
mov
sub
sub
mov
ret
cld
mov
cld
xchg
and
or
nop
mov
div
imul
enter
daa
cmpsb
pop
mov
adc
and
mov
ljmp
addb
test
ret
jecxz
adc
inc
inc
pop
jp
fs
or
adcl
xor
mov
cmp
lret
or
les
test
lock
test
subb
ja
sub
aam
movb
add
or
add
sub
icebp
rorb
and
mov
or
popa
pop
stos
push
mov
dec
cmp
pop
divb
mov
push
lock
inc
cmc
outsb
shlb
incb
jae
sub
std
jg
inc
sbb
loopne
mov
popa
lds
imul
int
imul
mov
inc
mov
je
cmp
and
aad
and
mov
ret
add
je
mov
fwait
xchg
sub
hlt
movsb
ds
fcoms
es
lock
mov
jp
add
push
es
dec
sbb
out
sbb
xchg
adc
xchg
ret
dec
fsubl
and
aas
sub
mov
cld
mov
je
jecxz
or
shlb
loope
ds
mov
les
adc
xor
bound
or
add
xchg
fs
jne
and
enter
insb
data16
dec
rorb
lds
call
and
pop
push
das
shl
ss
inc
pop
lock
push
xor
jmp
icebp
add
pop
scas
jb
jb
inc
xor
inc
or
adc
fimull
inc
loopne
fsubs
das
add
loope
xchg
je
rcrl
es
push
mov
hlt
addb
hlt
cmp
dec
dec
je
movsb
jae
jno
lret
std
lods
push
sub
outsl
xor
mov
mov
inc
shlb
sub
add
sub
add
adc
sub
mull
xchg
lock
or
pop
push
ret
out
push
loope,pn
out
out
cmp
arpl
test
gs
add
and
mov
or
inc
cmp
mov
mov
sbb
lret
push
xor
pop
inc
pop
ds
sarl
mov
test
add
and
lods
jmp
pop
fcoml
xchg
add
lcall
dec
pop
push
dec
loop
mov
xlat
clc
add
ljmp
xchg
jne
lods
and
iret
addb
scas
add
inc
sub
insb
aam
xor
mov
es
xlat
ret
popa
sub
inc
arpl
jmp
dec
test
pushf
out
shlb
mov
bound
hlt
nop
jne
and
jno
inc
test
adc
fmul
pushf
xchg
loop
outsb
jl
and
xchg
icebp
xor
cli
mov
lods
pop
pop
add
xchg
cmp
mov
fs
and
pop
mov
inc
repz
lret
pushf
jecxz
sub
call
icebp
and
bound
shll
dec
push
ds
out
push
cmp
mov
mov
xor
xlat
and
add
mov
mov
dec
jno
pop
shll
clc
lds
jae
cmp
int3
dec
inc
pushf
and
dec
insb
cmp
dec
enter
add
sub
cmpsb
pop
mov
outsl
cli
ds
test
fstpt
pop
xor
ds
in
enter
out
call
stos
dec
adc
push
in
dec
rorl
push
mov
cmp
sbb
data16
cmpb
shr
icebp
bound
jecxz
mov
loopne
ficoms
xlat
push
or
test
fdivrs
js
out
pop
aas
dec
add
cmc
fildl
test
loop
mov
pop
popf
or
out
lcall
imul
sub
and
cmc
cmc
sbb
mov
into
lret
sbb
popa
clc
std
xor
enterw
dec
orb
fiaddl
icebp
xchg
incb
popf
inc
adc
xchg
mov
cld
test
mov
add
mov
loopne
outsl
adc
call
adc
js
icebp
mov
das
clc
pop
add
loope
roll
add
cld
or
xor
mov
cmp
push
imul
repz
mov
test
dec
fmulp
xor
xchg
hlt
outsl
mov
add
cld
repz
xor
pop
dec
scas
ds
xchg
xorl
bound
xchg
push
add
nop
add
mov
and
ja
test
nop
dec
lcall
bound
xor
push
jno
leave
push
mov
dec
popa
dec
shrb
dec
or
cli
or
push
in
adc
add
or
sbb
cs
adc
imul
mov
xor
jmp
sbb
imul
cmc
imul
out
test
daa
xorb
add
adcb
adc
xchg
test
fidivl
pop
sub
adcl
push
mov
adc
imul
test
mov
cmp
clc
sbb
out
and
addb
xor
pop
sbb
pushf
aad
js
add
pop
movsl
out
aad
add
add
sub
add
adcl
data16
jns
and
push
add
pop
add
mov
clc
rcll
xor
or
js
adc
xchg
sbb
adc
in
push
xchg
adc
inc
xor
and
inc
cmc
rclb
or
fwait
cmp
fsts
scas
mov
ljmp
push
adc
hlt
add
push
js
sbb
lock
cmp
shrl
push
je
xor
xchg
fsubrl
mov
clc
mov
ret
jb
xor
loopne
xor
pop
scas
or
xchg
mov
dec
inc
sbb
sbbl
sub
in
xor
mov
and
lret
push
adc
mov
and
lods
arpl
xor
sti
pushw
sbb
cmpsl
adc
aam
mov
mov
dec
fdivl
xor
xor
ss
stc
notl
adc
xor
mov
addb
test
mov
mov
push
pop
dec
pop
sbb
ss
xor
add
mov
popa
cwtl
loopne
test
sti
xlat
repnz
fsubl
dec
shrb
cmpsb
pop
ret
fs
xchg
push
pop
dec
stos
fisubl
dec
or
xchg
inc
cmpsb
push
inc
mov
imulb
std
je
or
icebp
xchg
jp
inc
pop
add
ds
jne
data16
add
dec
or
ret
test
fsubs
sub
int3
and
jb
dec
xor
icebp
fbstp
cmp
incb
ljmp
roll
call
jp
int
sbb
jnp
push
dec
mov
stos
mov
scas
loop
add
clc
add
orb
sahf
daa
jbe
cltd
xchg
and
mov
inc
sub
xlat
or
mov
sub
cmp
add
push
es
sub
jb
push
and
or
add
aas
ret
push
daa
lahf
adc
xorb
js
sarl
lods
jno
xchg
in
inc
mov
dec
mov
adc
stos
in
and
data16
and
aam
jns
inc
in
add
cmpsl
and
fisubl
fs
fisubl
sbbb
ret
mov
mov
gs
mov
in
pop
mov
mov
flds
or
stos
or
cmp
mov
push
fstl
insb
mov
rcll
pop
aam
push
jmp
ljmp
pop
popf
mov
ja
test
sub
mov
test
incl
pusha
add
rcll
js
pop
mov
mov
lret
inc
xchg
fs
pushl
loop
dec
aaa
push
aad
inc
cmpsl
mov
add
add
sarb
cmpb
add
dec
ret
dec
fcompl
in
mov
add
aas
push
pop
ss
mov
outsb
mov
lea
and
lret
aam
ret
pop
sbb
js
int
push
adc
cwtl
sahf
lods
and
mov
or
xor
out
mov
cld
cmpsl
pop
cmp
or
fldcw
push
scas
shlb
pop
lret
jo
cld
mov
push
add
mov
enter
xchg
inc
cmpsb
and
repz
pusha
and
push
and
dec
dec
mov
outsb
movb
addr16
adcb
mov
xor
clc
inc
xor
mov
sub
sub
adc
inc
mov
xor
pushf
sbb
jmp
cmpsb
scas
add
or
mov
fcomps
fbstp
dec
clc
cmp
enter
scas
push
xchg
sub
cld
ss
fdivp
mov
mov
dec
mov
push
sbb
xchg
mov
dec
and
mov
mov
lods
push
mov
pop
push
sbb
add
jne,pn
pop
pop
inc
inc
add
sub
inc
iret
fdiv
lds
xlat
jbe
xchg
pop
push
cwtl
mov
jbe
movsb
adc
fbstp
divb
mov
pop
movsb
push
mov
mov
mov
pusha
lods
faddl
push
xchg
out
rcr
add
inc
in
push
aaa
jecxz
jbe
sbb
push
or
hlt
fbld
fdivs
scas
push
push
fwait
pushf
dec
pop
lock
in
add
cld
ffree
pop
data16
fdivl
cmp
dec
xchg
sbbl
and
pop
xor
and
outsb
xchg
out
xor
in
loope
sub
mov
or
pop
xchg
adc
push
cmp
test
xchg
jbe
lea
dec
cli
xor
addr16
sbb
lds
inc
or
cmp
dec
cmpsb
movsb
cmp
lods
cmp
popa
pop
adc
hlt
dec
shlb
cmp
repz
xchg
and
clc
mov
dec
xchg
cmp
inc
scas
out
add
mov
clc
push
adc
jae
ljmp
inc
mov
xlat
in
out
inc
mov
push
push
mull
in
cs
in
lcall
push
jle
filds
xchg
shrb
mov
ja
lods
pop
rorl
or
sar
inc
js
aad
aas
mov
add
test
sbb
aam
data16
xor
rorb
outsb
add
sub
sahf
pusha
ret
xchg
sarb
aas
jns
pop
pop
enter
mov
and
sar
mov
daa
xor
and
into
js
test
in
inc
les
push
aaa
mov
or
mov
sbb
inc
adc
js
push
sbb
push
pop
in
insb
push
daa
cld
push
cmpsb
lcall
add
add
xchg
and
mov
adc
ja
cli
mov
cld
add
adc
adc
fidivrl
mov
ss
inc
ret
call
call
fimuls
pop
mov
mov
subl
mov
mov
fsubrs
adc
push
xor
int
in
pushf
ficompl
outsl
cli
pop
fwait
add
stos
cmp
lret
cmp
addb
stos
dec
ljmp
and
or
dec
popf
sbbl
adc
mov
sub
fs
or
xchg
loope
outsb
cs
es
pop
or
mov
pop
push
xlat
das
and
fs
pop
popa
sub
pop
pop
clc
dec
push
pop
stos
xor
test
je
push
cmp
in
xor
dec
clc
adcb
and
or
scas
jb
cmpl
mov
push
lcall
adc
js
iret
lcall
jl
or
add
ja
xor
xor
sub
mov
sbb
pop
pop
or
dec
pop
scas
mov
jne
loopne
ss
inc
sub
xchg
or
xchg
mov
mov
and
jo
mull
scas
mov
sub
scas
mov
mov
aam
mov
pop
stos
popf
bound
and
cli
mov
pop
add
sar
addl
cli
fsub
cmpsb
cmpsl
add
adcb
sbb
and
xor
jnp
fmull
lret
xchg
bound
jle
xor
sbb
jnp
add
fldl
icebp
or
inc
jb
cld
ret
sub
push
lods
jge
jle
xor
inc
popf
xchg
xor
test
in
pop
cltd
mov
fisttpl
jle
subb
ret
movsl
sahf
or
andb
push
dec
cmp
jp
sahf
mov
arpl
push
and
or
cmp
adc
sbb
sub
xchg
jle
sub
mov
mov
loopne
jge
stc
in
dec
sbb
push
jecxz
hlt
add
jecxz
add
jne
stos
jp
sbb
test
add
jns
lds
and
shlb
push
ja
adc
aad
ret
inc
frstor
frstor
pusha
out
fsubs
jge
and
mov
xchg
adc
mov
or
push
shlb
sub
mov
and
push
bound
jp
mov
pop
mov
adc
mov
rep
xchg
in
das
movsb
mov
leave
xchg
filds
fadd
mov
iret
mov
shlb
mov
inc
in
inc
clc
cltd
jecxz
cmp
rcrb
cmp
out
decl
les
call
mov
jle
insb
movsl
js
mov
mov
mov
popa
or
int
enter
popf
enter
xchg
xor
scas
jl
lods
jno
adcb
push
xchg
jbe
xchg
lcall
xlat
mov
and
pop
jmp
or
andb
outsl
jge
mov
insb
mov
jle
cld
mov
je
cwtl
pushf
inc
push
jg
cmp
dec
sub
and
jle
addb
aas
stc
sub
movsw
xor
adc
aas
push
lahf
adc
push
sub
sbb
jecxz
outsb
lods
cmp
mov
loope
les
or
xchg
test
inc
dec
sahf
std
pop
stos
pop
daa
xchg
bound
adc
push
and
rolb
int
in
add
xlat
cmpsb
loopne
mov
jle
push
cli
mov
cld
nop
xorl
outsb
sbb
mov
pop
jns
or
or
ret
pop
and
push
inc
repnz
in
adc
sbb
pop
lods
gs
cmp
cld
dec
shlb
and
fs
add
imul
loopne
ljmp
xor
ds
and
test
arpl
inc
xchg
mov
lock
js
add
dec
call
in
or
cmp
std
add
cmp
hlt
or
dec
call
mov
or
aas
and
fs
xchg
in
cld
fwait
sbb
cmpsb
dec
movsb
sbb
or
add
xor
xor
rcr
cwtl
fsubr
mov
dec
in
cs
fistpll
pop
mov
sbb
inc
add
mov
push
sub
nop
sbb
and
adc
negl
push
cmp
cmp
adc
loop
movsl
or
jo
aas
dec
dec
inc
dec
shlb
clc
fistps
lock
movsl
popl
add
xorb
or
fdivr
jg
repz
stc
add
leave
out
cmp
jo
les
xchg
fists
adc
jbe
testl
inc
xor
int
sub
out
dec
jae
xor
mov
sbb
pop
inc
inc
mov
push
push
andb
inc
lret
lds
pop
fwait
push
inc
jns
negb
cmpl
mov
daa
xor
addr16
inc
cld
inc
dec
and
adc
into
pusha
adc
mov
mov
add
dec
sub
mov
out
push
incb
dec
mov
ficoms
les
mov
scas
outsb
out
imul
sub
inc
jns
movsl
loopne
cmp
or
cs
inc
xor
sbb
loopne
out
ret
add
mov
cmpsb
leave
dec
test
bound
pop
mov
xchg
lahf
inc
inc
int3
pushf
adc
fxch
sub
insb
test
adc
rolb
shll
sub
ret
xor
xchg
fidivrs
mov
movzwl
push
sbb
push
jnp
gs
outsl
adc
add
addr16
mov
adc
jmp
sarl
testb
sbb
sub
enter
shrb
adc
hlt
mov
sub
das
out
scas
fstpl
fdivrl
sub
fsubrl
and
inc
ret
xlat
cmp
daa
outsl
mov
or
mov
aaa
ret
xchg
aas
push
dec
cld
push
lds
adc
aad
mov
enterw
mov
and
in
push
loop
fsubl
test
push
and
test
shr
lea
mov
mov
sbb
aad
ret
roll
mov
mov
pop
in
test
xor
nop
aas
pop
sub
dec
out
in
jle
sti
cli
xchg
imul
das
adcb
lahf
jb
mov
aaa
lcall
cli
jb
cmpsb
aaa
orb
adc
fisubl
mov
fcmovnbe
push
add
push
add
inc
sahf
add
movsb
add
icebp
movsb
jbe
clc
std
hlt
fistpll
imull
mov
or
adc
daa
cmp
push
icebp
scas
into
push
inc
inc
std
add
xor
adc
fs
and
mov
mov
dec
cwtl
xchg
pop
clc
test
sbb
or
lock
pop
mov
mov
xchg
and
int3
mov
jnp
mov
into
and
sbb
scas
orb
adc
sub
sub
lods
push
pop
mov
mov
int
mov
les
cltd
mov
add
es
ljmp
mov
aaa
push
icebp
jg
std
sub
jp
sbb
cwtl
cmp
aaa
inc
sbb
inc
sub
loop
or
mov
clc
int
in
subl
jp
loope
lock
mov
or
mov
dec
sub
push
sbb
xchg
and
aaa
mov
into
inc
pop
or
dec
in
int3
andb
rcrb
mov
jb
aas
data16
sbb
fsub
jle
sbb
lret
hlt
clc
mov
lock
in
add
xorl
shll
pushf
ljmp
je
cmp
cmp
pop
mov
add
inc
adc
jg
mov
mov
mov
pop
and
xchg
inc
xchg
adc
stc
mov
mov
les
ret
cmp
je
in
mov
sbb
lods
pop
insb
mov
mov
jle
or
pop
out
repnz
xchg
and
dec
std
jl
movsb
pop
mov
jo
dec
mov
adc
jmp
nop
sub
add
add
pop
iret
jmp
mov
cmp
jge
lds
ror
cwtl
pushf
aam
adcl
ret
aam
adc
or
jge
mov
fdivs
or
sbb
outsl
mov
push
mov
mov
inc
and
insb
dec
dec
fwait
js
in
mov
pop
call
pop
push
sbb
xlat
nop
or
mov
andl
cmp
jbe
mov
fnstenv
pop
dec
leave
sti
cwtl
dec
aad
fstpt
jne
mov
xchg
into
ds
pusha
jae
imul
call
inc
cltd
mov
add
imul
popf
add
int
lea
je
sbb
test
and
mov
std
dec
jecxz
mov
aad
jb
es
mov
nop
mov
jb
mulb
lcall
push
xor
testb
andb
pop
or
stos
mov
jle
pusha
inc
adc
incl
insb
aaa
adc
and
sbb
jno
mov
testl
ret
movsb
jmpw
push
or
cmpsb
pop
pop
data16
cli
incl
imul
or
ret
sahf
jns
sbb
ds
fwait
ljmp
sbb
sub
cmpb
xchg
and
inc
adc
shrl
aaa
fwait
xchg
push
stc
pusha
incb
sub
adc
and
nop
push
add
xchg
bound
hlt
xchg
leave
ljmp
mov
fisubl
and
adc
sub
push
xor
mov
mov
xor
add
adc
mov
or
adc
adc
push
sahf
outsl
mov
pop
in
roll
jo,pt
push
out
fwait
lods
adc
cli
mov
jne
test
insl
cld
das
imul
fisttps
mov
add
stos
inc
out
and
mov
and
insb
cmp
insl
mov
shrb
les
inc
sub
pop
loop
jg
and
cmpsb
lock
fcoms
popf
cld
pop
mov
or
dec
xor
push
cmp
dec
or
push
xchg
xchg
xchg
jp
imul
insb
cmp
das
mov
mov
mov
cld
add
in
mov
aad
xchg
ret
fcmovne
or
mov
xor
adc
push
sub
dec
cmp
les
add
mov
movsb
jmp
loop
vpmacsdql
test
popa
mov
mov
inc
add
dec
add
cmp
jle
push
dec
addb
fwait
insb
or
xor
imulb
cmp
cmpsl
push
and
ficoml
test
jecxz
and
mov
xchg
dec
insb
mov
inc
incb
clc
and
xor
mov
mov
pop
adc
repnz
and
lcall
enter
lea
inc
add
pop
fisubrs
fstps
shrb
stc
sub
sub
les
lret
sti
dec
test
push
pop
cli
cmpb
lods
loope
add
sub
adc
and
lahf
jo
fadd
xor
mov
enter
js
mov
rcl
in
data16
adc
lods
sbb
call
mov
lret
inc
push
push
and
ds
add
sbb
pop
jecxz
mov
sti
xchg
loopne
dec
hlt
ds
fstpt
mov
jg
test
cmp
cmp
cli
lahf
aaa
or
sbb
sbb
cmpsl
ficompl
and
pop
je
cmp
cmp
cmpsb
scas
mov
add
cmc
jo
pop
outsl
in
or
rorb
fcmovbe
adc
mov
je
jg
pop
test
pusha
mov
push
cwtl
and
add
test
and
movsb
notb
mov
cmp
push
or
in
push
jne
testb
ja
push
adc
aad
mov
lcall
push
inc
jg
fwait
jne
std
inc
sbb
lds
lods
sbb
ret
aaa
pop
jne
or
ss
lods
push
mov
out
xorb
cmp
enter
inc
clc
js
and
aaa
add
fs
jo
stos
js
mov
xor
xchg
cmp
popf
sbb
push
cmp
jg
push
inc
repz
xor
pop
cld
out
repnz
insb
loopne
test
mov
push
or
inc
in
cs
pop
or
sti
ror
ljmp
xor
jne
rol
mov
cmp
mov
push
cmp
mov
stos
lods
mov
mull
and
mulb
mov
ret
adc
mov
sti
aaa
jecxz
pop
sub
push
shl
popa
fs
push
outsb
adc
mov
lcall
add
add
inc
pop
js
enter
cld
push
push
cs
aam
lcall
pusha
jl
pshufw
jns
pushf
fildll
imul
xchg
pop
dec
mov
push
or
xchg
sbb
outsl
dec
jp
int
inc
add
mov
dec
pop
pop
adc
out
loope
dec
mov
stos
cmc
push
scas
lds
mov
inc
into
in
jbe
pop
mov
xchg
movsl
fwait
cs
jnp
arpl
cs
clc
aad
sbb
jae
inc
adc
hlt
pusha
test
inc
mov
popf
aam
and
jmp
mov
nop
outsl
and
test
jns
sarl
fsubrs
or
or
push
sub
and
jg
inc
lock
ds
pop
sti
mov
xchg
ljmp
adc
hlt
sbb
data16
and
rolb
push
dec
bound
adc
and
jl
insb
sub
idivl
aaa
or
lret
es
incb
add
fwait
mov
mov
imul
notl
stc
loopne
push
std
pop
xchg
add
pop
push
mov
mov
enter
sub
clc
mov
xchg
out
ss
pop
add
mov
aaa
mov
add
rorb
sbb
out
test
jmp
xor
insl
add
ss
jbe
jno
adc
jae
push
or
les
mov
sub
push
xchg
sahf
fs
scas
mov
xchg
pop
pop
nop
jp
adc
popa
push
mov
and
cmp
ret
dec
pop
and
push
mov
mov
and
push
pushf
xchg
jecxz
adc
aaa
imul
inc
dec
loope
add
add
int
xchg
push
cld
sub
mov
jle
add
dec
outsl
lcall
mov
adc
sbb
data16
std
lea
pop
rcll
xlat
test
jne
stos
ljmp
pop
add
add
ret
add
shlb
stos
and
mov
gs
mov
adc
scas
mov
xchg
outsl
test
push
push
test
mov
adc
ret
push
je
jecxz
add
xchg
mov
cli
sbb
or
pop
lock
aad
jne
test
mov
pusha
clc
fildll
mov
adc
or
inc
cs
mov
push
adc
xor
add
push
dec
jmp
fisubrs
cmp
push
cmp
lods
inc
push
sbb
scas
jno
cmp
and
test
divb
js
or
inc
mov
pop
pop
notb
add
insl
outsl
push
ds
aad
push
push
mov
inc
ret
pop
rclb
imul
mov
sub
add
bnd
mov
xchg
in
adcb
and
mov
and
xor
js
bound
mov
das
dec
pop
in
cmc
xor
scas
orl
mov
cmp
popf
js
jle
gs
sub
daa
xchg
push
pop
inc
sub
adc
dec
sbb
sub
inc
ljmp
lret
push
repz
ffreep
add
push
aas
sar
or
cmpsb
orb
adc
test
dec
xchg
inc
scas
add
xor
dec
pop
es
cs
xchg
dec
inc
rorb
into
mov
lcall
shl
pop
push
daa
jle
push
xor
mov
les
mov
xchg
stos
cmp
rcll
addb
paddd
and
sub
scas
xor
mov
or
hlt
fmuls
jp
push
mov
fisttps
flds
icebp
and
insl
jnp
jbe
or
test
or
aaa
add
call
mov
test
inc
adc
gs
fbld
and
mov
aaa
roll
add
mov
pop
xlat
neg
scas
cli
add
loope
and
je
pop
xchg
push
out
es
movsl
jge
shll
stos
mov
add
pop
xchg
add
cmc
pop
aad
sub
loopne
fidivs
aaa
pop
hlt
aas
bound
pusha
xlat
mov
clc
subl
push
xor
xchg
cmp
push
dec
pop
dec
add
add
lea
stos
sbb
or
nop
ret
loop
sbb
jle
dec
sbb
push
sub
popf
mov
xlat
sub
mov
mov
je
mov
or
and
pushl
jne
xchg
dec
adc
repz
imul
dec
in
std
xchg
cli
inc
xchg
push
push
mov
pop
sub
cmp
sarb
push
push
sbb
sbb
cld
in
aas
lock
mov
or
arpl
pop
mov
das
test
pushf
jle
lods
jl
aam
mov
int3
in
xchg
iret
jb
add
cli
cmp
sbb
and
mov
dec
int
mov
notl
sbb
icebp
pop
scas
lcall
or
push
insl
inc
sbb
push
mov
sub
sahf
imul
add
jg
mov
adc
jecxz
add
inc
jae
out
lcall
cmc
cmpl
stc
fists
inc
dec
cmp
lret
in
andl
cmp
imul
push
stos
sub
js
rcrl
nop
ret
add
and
pop
jl
or
shlb
mov
dec
adc
in
lret
in
lahf
inc
xor
mov
mov
mov
mov
or
mov
mov
cmpb
sub
fisubrl
push
call
decl
lret
jb
sbb
add
movsl
shrl
mov
mov
hlt
jg
adc
aam
fs
and
leave
push
push
adc
or
fbld
dec
fldenv
adc
ss
jle
push
test
mov
loop
push
sbb
stos
mov
bound
push
add
xchg
lods
xchg
sub
xchg
js
sti
sbb
cli
sbb
mov
pop
mov
cmpsb
mov
test
fwait
clc
or
lret
sbb
or
stc
lods
dec
or
jb
and
xlat
or
sbb
je
fwait
jbe
push
and
or
cwtl
call
ret
jl
fmuls
pop
xor
les
imul
push
lea
add
pop
test
sbb
std
or
loop
popa
mov
or
jmp
pop
mov
out
aaa
mov
int
scas
call
inc
ja
into
shll
or
or
mov
pop
ljmp
sbb
mov
shl
into
out
sub
jae
or
mov
rcr
js
cmp
jno
and
push
fldt
lret
push
pop
insl
add
rol
stos
adcb
je
call
adc
mov
push
pushl
jg
or
scas
data16
add
xchg
sbb
aad
nop
push
repz
lcall
ljmp
jbe
jo
int
and
inc
inc
or
mov
inc
fists
adc
scas
shrl
xchg
push
nop
lcall
addb
mov
jl
ljmp
jp
lds
mov
mov
push
cld
adc
adc
xchg
stos
adc
pop
xor
add
xchg
fwait
sbb
dec
sahf
add
push
sti
test
loope
rolb
add
lock
dec
outsb
pop
cltd
adc
pop
scas
mov
in
adc
out
and
fldt
hlt
inc
mov
shrb
xchg
fisubl
mov
add
out
push
xchg
test
loope
adc
mov
outsb
leave
push
mov
aam
push
cmpsb
inc
pop
sub
sub
xor
xchg
xchg
xchg
xor
sbb
icebp
mov
pop
mov
add
cwtl
add
adc
mov
js
daa
lds
or
test
leave
hlt
jg
enter
mov
mov
inc
cmp
xor
inc
sbb
cmp
les
mov
adc
pop
add
dec
or
mov
lret
inc
pop
push
shl
loop
insb
or
fcmovne
aam
sarb
std
pushf
add
fdivr
out
fwait
insb
icebp
mov
pop
cmp
xchg
loopne
sti
inc
push
mov
cmp
aad
push
jl
jo
jbe
push
das
fdivr
pop
aas
add
push
decb
add
je
clc
sar
inc
mul
test
pop
nop
inc
xchg
inc
decl
incb
mov
fmull
out
fidivl
pop
lods
into
cmp
in
in
push
mov
mov
mov
shl
lret
jle
stos
jbe
mov
mov
inc
shl
pop
add
cmp
pop
repnz
xchg
xchg
ds
cli
lahf
fimuls
ljmp
bound
inc
nop
fcoml
scas
and
xchg
push
ret
or
mov
bound
call
push
and
xor
mov
adc
incl
adc
lcall
sbb
es
dec
dec
outsl
pop
adc
xchg
sahf
stc
inc
pop
sahf
xor
dec
fdiv
int3
lods
popf
aad
ja
repnz
repz
fbstp
mov
dec
jb
or
pop
adc
cmpsb
push
add
mov
sub
mov
int3
nop
inc
fsubr
jmp
lcall
mov
rol
mov
adc
lods
cs
insb
xchg
icebp
add
imul
inc
aad
pop
test
dec
mov
pop
push
dec
jmp
in
sub
and
push
push
inc
mov
ret
rclb
mov
scas
and
fmul
sbb
sbb
and
push
dec
push
shr
into
mov
mov
mov
or
sar
filds
xchg
and
cmpl
sub
mov
cmc
jns
pop
fsubl
popa
pusha
jns
icebp
clc
pop
mov
and
lret
int3
dec
mov
push
or
xchg
call
dec
push
lret
dec
lods
jp
loopne
xchg
cmp
mov
add
add
ljmp
jg
adc
xorl
call
mov
das
inc
xor
push
dec
mov
mov
call
push
fldl
adc
add
mov
js
and
xor
pop
fs
mov
pop
repz
adc
dec
int3
test
fisttpll
adc
sbb
jns
push
sub
fucom
cli
ret
out
rcl
dec
adc
or
xor
mov
jle
nop
push
cmp
cld
filds
repnz
fsubrs
sahf
push
sbb
inc
ljmp
mov
inc
inc
movsb
sbb
es
xchg
pop
and
xor
je
sarb
and
repz
dec
mov
push
rolb
setnp
ret
mov
rorb
xchg
js
or
add
fistl
add
push
mov
or
or
pop
sarl
mov
ret
in
adc
mov
ljmp
in
pop
sub
in
mov
icebp
inc
lock
out
sarl
call
push
and
shlb
fisubrs
fistpll
sti
sub
lahf
movsl
insl
xchg
lods
mov
adc
pusha
repz
jge
enter
les
rcr
xchg
lods
inc
jg
mov
xchg
call
adc
inc
in
mov
divl
sbb
mov
lods
pop
mov
insb
mov
inc
lock
ljmp
lock
mov
xchg
stos
mov
ret
inc
jmp
push
push
ds
addr16
push
notb
inc
dec
push
mov
test
mulw
mov
sbb
cmc
cmp
and
bnd
fdivrp
fwait
mov
aas
cmpsl
faddl
iret
dec
repnz
mov
fs
shl
les
dec
js
add
adc
dec
dec
outsb
scas
rolb
mov
cld
jnp
mov
pop
pop
push
sub
data16
jae
push
fisubs
and
test
ljmp
and
add
fildl
into
aaa
add
xchg
arpl
cltd
or
inc
sbb
sti
dec
pusha
mov
loop
jp
lret
mov
adc
movsb
or
cmp
push
int
jl
pop
loopne
faddl
xchg
mov
ja
jo
dec
mov
scas
cmp
sbb
or
sbb
pushl
push
xor
mov
adc
add
xor
xchg
movsb
outsl
sbb
xchg
jmp
sbb
lahf
sub
sbb
ja
or
xchg
lret
adcb
dec
add
bound
shlb
je
inc
cmp
dec
dec
les
add
and
shlb
sbb
add
push
dec
push
lea
dec
adc
jp
in
cld
add
xchg
push
mov
adc
mov
outsl
fcoml
xlat
pop
das
clc
mov
movsl
ss
or
mov
inc
dec
xchg
sti
dec
pop
scas
sub
jnp
mov
je
or
mov
cltd
xchg
dec
addb
repz
sub
in
test
sbb
jp
jl
inc
sbb
lock
test
push
mov
and
add
sti
sub
or
or
xchg
cmpsb
add
jmp
mov
lahf
jmp
fdivr
pop
insl
pop
push
sahf
lock
das
push
dec
leave
notb
push
in
rcrb
sbb
pop
pop
add
adc
pushl
mov
ret
decl
mov
xchg
test
cmp
cwtl
jl
pushf
js
xchg
dec
push
and
mov
aad
push
sub
pop
shrl
enter
clc
inc
cmp
gs
mov
adc
xchg
gs
xor
push
hlt
mov
mov
leave
bound
jnp
out
mov
push
sbb
lcall
test
pop
or
fdivrp
jbe
ljmp
push
pusha
inc
mov
shll
add
mov
mov
pushf
negb
arpl
lahf
or
xor
push
in
dec
pop
cmp
add
mov
test
cmpsl
dec
add
mov
sbb
mov
sub
push
pop
jno
lcall
ja
dec
cmc
add
xchg
jb
dec
push
add
aam
xchg
mov
sbb
ja
dec
xorb
sbb
out
es
pop
and
dec
decl
loop
dec
mov
shlb
inc
aas
popf
mov
xor
aas
xor
pushl
out
lods
jg
inc
sbb
subl
outsb
pop
pusha
inc
movsl
cli
decl
or
add
jge
xlat
mov
test
push
mov
adc
inc
sub
add
sbb
push
mov
test
mov
pop
rorb
je
push
subb
mov
xor
sti
cmpl
ljmp
inc
add
popa
fwait
lods
out
scas
adc
cltd
mov
aam
pop
mov
mov
sub
mov
nop
xor
jle
mov
adc
add
loope
lea
mov
imul
cwtl
sub
sbb
push
hlt
sbb
jle
test
pop
push
sub
add
cmp
mov
jb,pn
push
dec
or
mov
test
ret
jmp
jb
adc
movsl
cmpb
sbb
fildll
or
scas
pop
and
ret
push
sahf
mov
test
dec
xorb
push
jg
loope
movsb
cli
sbb
cmp
imul
xor
sbb
inc
push
stc
or
jmp
push
loopne
cmp
mov
cmc
and
jle
hlt
mov
int
in
cmp
sbb
iret
cmpb
inc
lcall
in
fldl
mov
push
popa
cmp
mov
adc
mov
dec
popf
andl
out
insl
insl
mov
aad
mov
test
loop
add
adc
loope
pop
cmp
jg
push
push
in
stos
lds
xchg
cmp
hlt
in
ja
jg
dec
push
adcl
add
lods
call
std
adc
xchg
mov
xchg
dec
push
dec
sub
lods
fnsave
fwait
mov
adc
mov
dec
cltd
das
clc
call
ret
inc
inc
or
mov
mov
jo
icebp
jecxz
mov
sbb
mov
or
xor
in
imul
push
jae
xor
andl
clc
dec
insl
mov
pop
xor
push
call
pop
inc
add
loopne
push
mov
and
jge
jle
mov
sub
mov
cmpl
repz
cmp
pop
ljmp
lret
xchg
fidivrl
insl
xor
movsl
out
jb
cmp
xchg
push
push
je
mov
mov
iret
inc
xchg
cmp
dec
cmp
push
les
push
bound
hlt
lods
push
cmp
inc
testl
lcall
addb
jmp
mov
mov
sub
sub
sub
pop
xlat
cmp
or
jecxz
pushl
cltd
je
test
push
lret
lcall
das
or
and
jp
shll
pop
mov
xor
add
pop
ss
lods
inc
mov
es
mov
les
inc
or
mov
jmp
aad
mov
pop
pop
pushf
clc
push
insl
je
add
outsb
cmp
adc
mov
pop
sub
mov
fwait
dec
je
sub
fimull
adc
inc
or
xor
jnp
push
lock
and
aaa
adc
fcoms
sarb
fsts
in
add
int3
test
sarb
lcall
push
je
shr
mov
or
dec
icebp
mov
int3
cmp
xchg
ret
xor
push
je
pop
fidivrl
hlt
and
pop
dec
xor
lods
pushf
adc
jae
or
mov
inc
pop
push
test
mov
or
in
adc
jbe
pop
popa
pop
loope
inc
add
cli
out
loop
popa
or
xor
pop
pop
sbb
and
das
pop
icebp
inc
adc
sti
bound
push
xorl
pop
and
pop
cs
fwait
inc
inc
into
sbb
out
mov
aaa
sbb
into
xchg
adc
sub
std
decl
cli
andl
decl
rorb
popl
ds
mov
or
les
adc
sahf
fiaddl
mov
mov
dec
push
jno
fwait
test
fcmovnb
rcl
pop
cli
test
and
stos
cmp
shll
xor
add
and
sub
psubw
loope
cs
inc
into
mov
incl
movsl
jbe
negl
lea
mov
loop
inc
enter
xor
fisubrs
insb
out
fcoml
mov
adc
jb
push
mov
enter
mov
mov
or
cmpsl
fwait
cmpsl
lods
dec
jle
mov
sub
enter
in
scas
clc
cmp
divps
call
imul
loopne
rorl
je
int3
popl
movsb
sbb
ja
xchg
xchg
rorb
cmp
sar
outsb
mov
xor
les
frstor
lcall
icebp
pop
mov
or
out
rolb
lods
adc
pop
jge
dec
xlat
addl
stos
mov
xchg
clc
pop
jp
negb
push
call
pop
ret
jb
scas
mov
adc
sbb
mov
std
lods
rol
cli
in
cmp
in
inc
enter
dec
jmp
jbe
loop
lss
lock
ret
je
push
xor
jbe
push
lock
in
add
push
push
mov
xchg
add
lods
dec
add
outsl
stos
push
xchg
cvtps2pd
lret
add
pop
loope
or
jg
push
fs
fwait
lea
rcrb
andl
mov
adc
add
bound
dec
xor
lock
popa
xchg
xor
lret
xchg
pop
nop
sbb
aaa
mov
sti
push
adc
sbb
or
pop
push
ret
dec
xor
or
es
and
mov
rcrb
mov
pop
push
mov
icebp
sub
ja
mov
addl
dec
sbb
adc
movsb
pop
add
mov
test
aam
movsl
inc
cld
pop
imull
adc
push
fimuls
shrb
sub
dec
push
inc
fadd
daa
es
lcall
pop
jle
sbb
push
mov
idivb
divb
or
jae
stos
inc
scas
fisubrl
lods
dec
outsl
insb
and
mov
leave
fcoms
shll
ret
add
lods
pop
pushf
fbstp
mov
and
xor
cwtl
add
dec
fstpl
adc
dec
addl
loopne
sbb
mov
push
sub
adc
jmp
jecxz
pop
mov
cmpsl
nop
jge
sarb
ret
push
push
cmp
xor
jb
aas
jmp
and
cmp
or
inc
add
pop
and
xlat
sbb
dec
imul
jb
push
aaa
mov
and
fadds
push
aad
cmp
ss
push
jo
rcrb
loopne
or
mov
scas
push
jmp
inc
fimull
add
mov
mov
inc
adc
inc
jge
mul
inc
jge
and
add
fimull
nop
push
fmulp
inc
lahf
or
mov
adc
les
shl
mov
test
mov
jp
push
dec
test
std
js
inc
js
shl
xchg
mov
jb
inc
pop
adc
jbe
mov
jp
mov
rorb
test
xchg
mov
outsl
and
xor
mov
mov
or
push
mov
mov
push
adc
inc
pop
cli
push
sbb
pop
jmp
cld
cmp
xor
sub
push
sbb
movsl
in
outsl
xor
sub
or
inc
pusha
add
ljmp
test
stc
add
push
les
fdivr
pop
mov
fisttpl
mov
xchg
or
loop
jmp
xor
sub
movsb
addr16
mov
test
inc
lea
add
ret
cmp
sub
or
or
adc
xchg
and
mov
ds
jne
popa
lret
push
filds
mov
dec
into
fwait
inc
test
fstl
sub
das
push
ret
add
add
into
pop
nopl
shl
and
xor
iret
rol
stc
or
loope
lock
roll
fdivrs
jo
add
push
or
adc
sti
fst
mov
notb
cmp
and
flds
push
mov
add
adc
jo
push
inc
les
adc
pop
repnz
pop
add
push
mov
outsb
push
out
mov
pop
mov
xchg
mov
aam
cs
icebp
add
mov
stc
sbb
shlb
xor
jmp
sbb
xchg
add
ret
cmp
mov
adc
and
cli
push
or
xor
or
xorl
xor
mov
pop
fnstsw
dec
or
push
call
movsl
je
addl
shr
jge
orb
and
or
cmpsb
dec
aam
scas
fidivs
sarb
ss
cmp
js
mov
pop
inc
lea
in
lea
clc
cmp
xor
inc
shrb
sub
lods
in
mov
lock
arpl
jge
cmpsb
xchg
sarl
adc
mov
mov
mov
loope
add
inc
jo
inc
dec
das
or
es
mov
jmp
shlb
cs
mov
mov
and
mov
fidivs
sbb
sbb
mov
sbb
out
add
dec
les
pop
mov
push
sbb
add
mov
andb
mov
lret
mov
sbb
jo
cmpb
fdiv
mov
sbb
jbe
push
std
sarb
dec
push
fsubrs
cltd
push
mov
test
xchg
push
xchg
movsb
ja
pop
push
add
and
enter
sbb
sbb
aas
clc
push
aaa
pusha
mov
ss
sub
xchg
iret
lcall
test
loope
and
into
fmul
jmp
dec
in
shrl
clc
inc
loopne
test
mov
push
das
adc
lcall
movsl
xor
pop
into
loopne
sub
mov
dec
das
and
push
add
ja
xchg
movl
dec
pop
jecxz
lods
jp
push
and
ret
outsl
cmp
or
fxam
push
call
pop
add
xchg
xor
jecxz
test
push
fidivrl
cli
ljmp
pop
mov
or
cmpsl
jnp
cld
cmpsb
in
pop
dec
inc
jmp
nop
push
cli
test
sub
xor
cmp
inc
lds
lock
mov
popf
mov
add
inc
mov
js
mov
ret
push
popf
popa
into
mov
loop
xor
mov
and
push
xor
or
xlat
xchg
test
mov
incl
imul
and
pop
mov
es
incb
inc
mov
jo
mov
aam
xor
test
dec
jns
pushf
enter
jo
and
xchg
mov
mov
push
dec
adc
rolb
loopne
cld
das
adc
out
popa
ret
scas
ret
adc
adc
lock
cli
movsb
add
push
fimull
sub
ficomps
xchg
test
push
ret
outsb
mov
sub
aad
fcompl
lcall
incl
gs
arpl
lret
mov
into
mov
scas
jecxz
in
mov
mov
cmp
pop
bound
add
nop
pusha
xchg
dec
outsl
mov
call
pop
arpl
pushf
addb
icebp
mov
pop
dec
je
sbb
xor
test
sbb
lods
les
xor
pop
test
mul
or
mov
jmp
cli
negb
lahf
repnz
dec
aaa
mov
pop
stos
jp
xor
sub
dec
push
or
pop
orl
into
pop
fisubrs
xchg
mov
jmp
pop
cmp
xchg
mov
cmp
rcl
jb
inc
mov
ljmp
sarl
jnp
inc
loop
xchg
mov
push
pusha
xchg
sbb
xchg
mov
pminsw
lcall
insl
stos
cmpsb
push
imul
aam
leave
fstpt
aaa
je
mov
js
sahf
jb
in
mov
mov
fs
cmp
leave
push
mov
xorb
and
cmpsl
test
inc
stc
jmp
popa
jb
mov
xchg
push
pop
dec
movsb
dec
testb
jp
jl
dec
mov
xorb
pop
jl
mov
inc
out
pop
pop
mov
cwtl
fbld
inc
loop
inc
rolb
sub
cmc
mov
lods
call
cmpb
fisubl
sti
fs
cmpl
daa
and
xor
xchg
and
fimull
mov
add
cmpsl
cmp
fiadds
test
inc
sub
inc
and
int3
insl
fistpll
test
clc
lea
pushl
aaa
hlt
add
scas
shlb
mov
add
push
inc
xchg
push
sub
add
push
sub
fsubrl
or
and
lret
dec
and
rolb
notb
xor
cld
sbb
shrb
sbb
rclb
jg
repnz
or
jecxz
jecxz
insb
out
mov
and
test
js
jbe
fcmovb
inc
push
sbb
sti
add
fcoml
dec
fldl
lods
les
imulb
lods
mov
add
sbb
dec
sbb
ds
lock
mov
ljmp
fsubl
fnstsw
jmp
aas
sahf
out
adc
add
imul
dec
mov
iret
enter
insl
or
bound
jl
push
push
push
mov
sbb
sbb
loopne
mov
repz
and
jnp
inc
cmpsl
pop
sbb
lcall
push
add
jns
lret
cwtl
or
inc
rorl
mov
adc
pop
pop
je
scas
pop
icebp
push
inc
sbb
or
mov
lods
jns
mov
scas
xor
loop
cmp
xor
rcrl
out
cli
push
cli
lods
mov
inc
mov
cmc
out
ficoml
fwait
fs
int
stos
repnz
aam
pushf
insb
pop
dec
adc
pop
shll
dec
push
clc
mov
je
cwtl
jle
add
lock
aas
test
js
xlat
mov
xchg
push
jne
loope
inc
lea
jmp
hlt
dec
clflush
push
xchg
outsl
stos
lahf
cmp
add
cltd
push
cmc
pusha
sub
jo
scas
add
lea
sub
mov
leave
pop
dec
pop
mov
add
clc
push
adc
addr16
add
xor
lret
push
dec
jb
mov
adc
aam
out
xor
push
fimuls
outsb
aad
fistpl
decb
push
add
std
mov
cmp
jp
clc
dec
ss
hlt
test
xor
push
movsb
stos
xor
mov
stos
stos
push
or
push
into
or
ret
pop
xchg
add
dec
in
ljmp
or
call
sbb
insb
les
sbb
lods
and
es
cld
cwtl
imul
pop
jp
pop
xor
mov
out
adc
outsl
mov
sub
cmp
addr16
ret
lea
jno
fisttps
inc
inc
push
xor
add
pop
andb
shl
add
das
xchg
subl
xor
adcb
lods
mov
cli
push
sub
ror
out
cmp
and
cmpsl
hlt
int
pop
push
inc
stos
inc
sbb
stos
mov
lret
adc
cmp
mov
ljmp
hlt
or
loopne
dec
pop
mov
js
imulb
lock
add
xchg
dec
lcall
mov
push
sbb
mov
xor
subl
add
pop
or
or
add
pop
shr
mov
dec
cmp
ljmp
adc
mov
pop
outsl
pop
shlb
add
dec
add
sub
add
adc
sub
ffree
push
inc
and
dec
stos
push
dec
shrl
push
mov
mov
jecxz
mov
adc
push
mov
add
nop
or
ret
je
sti
jle
lcall
loopne
xor
aaa
cld
lods
iret
jl
pop
cmpl
mov
jp
sbb
ds
pop
les
fildll
or
inc
shl
xor
mull
es
pusha
call
rcrl
cmp
or
push
or
mov
fldl
push
jns,pt
hlt
inc
dec
cmpsl
icebp
add
adc
popa
jmp
mov
cli
add
xchg
push
ds
aad
cmp
cmp
mov
or
adc
aaa
mov
sbb
popa
pop
faddp
jmp
repnz
jo
mov
data16
insb
cmp
call
lods
pop
lahf
mov
ja
jge
inc
inc
add
jecxz
aam
push
adc
jne
add
stos
push
ss
shlb
fisubl
movsb
gs
jle
inc
jge
ja
xor
or
das
clc
cmovns
cmp
ret
cmpl
mov
ss
jae
mov
fwait
mov
add
loopne
sbb
xchg
lock
int3
pop
adc
xchg
push
mov
xor
xor
aad
sbb
push
sarb
and
test
sub
mov
rorb
jbe
leave
sarb
xchg
pusha
in
rcrl
pop
int3
dec
std
sbb
sbb
and
sub
sub
lcall
pop
mov
jno
and
dec
ljmp
insl
dec
add
std
mov
int3
sbb
mov
jnp
push
adcb
test
sbbl
jl
jns
mov
add
sbb
sub
loop
sub
and
xchg
mov
push
in
or
popf
mov
outsl
xor
xchg
inc
inc
jnp
sub
hlt
shlb
push
jp
cltd
pop
lods
sbb
test
mov
xor
clc
push
push
ljmp
notb
pop
sahf
add
stc
insb
daa
inc
pushl
add
loopne
pop
hlt
mov
jl
lods
xchg
gs
test
ljmp
pop
cmp
or
mov
mov
push
test
xchg
inc
rolb
xchg
movl
push
js
test
fiadds
push
notl
push
mov
jg
adc
gs
mov
jae
mov
cmpsl
test
add
jmp
pop
imul
popa
mov
decl
sti
xchg
xchg
gs
mov
ljmp
mov
pop
js
add
cmp
mulb
pop
js
repnz
xchg
scas
add
sub
icebp
lcall
push
sbb
ret
cmpsl
lds
or
mov
pop
dec
sbb
inc
or
aam
inc
pop
push
clc
arpl
cmp
cltd
call
mov
mov
sub
mov
and
dec
mov
dec
and
mov
add
loop
inc
ljmp
inc
stos
out
testl
mull
fistpll
insb
fidivrl
lods
mov
cltd
and
push
ret
out
rcrb
aaa
add
fidivrl
inc
es
xchg
fcom
sub
xchg
mov
fdivp
or
fcomip
push
pop
pusha
out
int3
nop
and
jp
mov
cltd
call
add
lock
nop
fisubrs
cmpsb
cmpsl
adc
scas
mov
jecxz
adc
jg
mov
add
mov
lcall
test
lahf
loopne
mov
add
mov
add
clc
inc
jb
into
inc
lret
sbb
mov
dec
std
mov
inc
insl
or
cs
mov
scas
rcl
push
mov
test
std
push
mov
pop
rol
orb
mov
pop
ss
inc
jecxz
jg
aam
fidivl
adc
and
loope
mov
push
xor
cmp
sub
xor
movb
out
inc
push
in
cmp
mov
movsl
jmp
and
aad
push
dec
add
push
jmp
push
inc
add
enter
out
xor
and
adc
and
lock
mov
inc
sti
xchg
xchg
sahf
aad
std
enter
aas
insb
test
inc
mov
or
xchg
ret
mov
clc
mov
fldt
bound
inc
movsb
and
mov
pusha
into
dec
in
sbb
je
and
call
leave
sub
fidivl
sahf
stos
inc
std
addb
inc
mov
mov
ja
mov
mov
jle
mov
jecxz
inc
ja
aam
insb
shlb
mov
add
test
clc
call
fisttpl
repz
jmp
xor
in
jge
in
xor
pop
imul
loope
mov
imul
xchg
push
mov
mov
outsl
or
add
or
jae
mov
cmc
xchg
add
sarb
mov
out
jp
push
xlat
orb
inc
rcrl
mov
lret
fldpi
adc
sahf
mov
test
inc
push
or
jmp
xor
ret
fidivl
into
sbb
xchg
mov
jnp
shrb
aam
dec
xor
lret
push
outsl
mov
jp
sbb
les
push
daa
adc
cmp
and
dec
sub
mov
cld
enter
call
xor
add
pop
clc
push
xorb
addb
fisubl
xchg
jl
pop
xor
cs
lock
pop
cli
arpl
dec
xchg
adc
xor
lcall
rcr
nop
pushf
xchg
test
test
inc
push
add
aaa
push
arpl
mov
adc
mov
add
fimuls
pop
mov
sbb
jno
cmp
mov
ja
adcl
mov
out
pusha
or
adc
xor
mov
jo
loopne
in
fs
fldt
lcall
sub
add
mov
adc
jbe
or
enter
jp
sbb
loop
push
pop
rorb
mov
mov
adc
sbb
or
in
push
mov
mov
pushf
in
mov
cld
xor
sbb
fimuls
lcall
lds
js
lcall
mov
push
xchg
pop
inc
fs
sub
lahf
push
and
test
stos
mov
nop
jns
outsb
test
test
add
js
push
stos
jnp
adc
mov
mov
data16
int
mov
rol
dec
popa
mov
mov
jbe
xchg
rolb
fidivl
movsl
cmp
pop
xor
popf
cmpsb
and
je
xchg
xor
xor
or
lock
mov
mov
or
cmpb
add
movsb
cmpl
add
addb
mov
scas
into
cmpsl
cmpsb
sub
sub
dec
mov
xchg
shlb
rol
mov
sahf
xorl
adc
out
cmovs
jbe
push
jge
std
cs
popf
idiv
cmp
sbb
aam
sbb
inc
ficoms
in
testb
pop
inc
push
mov
adc
mov
addb
in
jle
or
je
pop
mov
sbb
or
add
test
test
push
and
and
or
or
xor
or
pop
ret
mov
add
or
jmp
test
adcl
xor
aas
cmc
dec
stos
jne
outsb
ds
mov
lock
ljmp
xchg
repnz
loopne
push
ret
cmp
mov
scas
ljmp
imul
add
jbe
femms
pushf
cld
stos
outsb
ds
dec
mov
unpckhps
and
mov
mov
add
and
mov
xor
mov
in
ja
stos
neg
or
pop
cmp
push
sub
and
xchg
or
add
xchg
mov
out
ljmp
add
insb
jmp
pop
inc
dec
pop
or
ret
push
xchg
insl
icebp
jmp
cld
shlb
fs
cmc
or
call
cmp
ret
stos
sti
and
xchg
lret
cmp
inc
xor
inc
rcr
hlt
adc
xor
aad
sub
jp
mov
cmpsl
xor
push
popa
fs
out
ds
arpl
incl
pop
inc
cmpsb
xor
insl
sub
sbb
fs
xor
xor
jo
stos
fwait
test
adc
test
fimuls
cmp
adc
dec
or
data16
rolb
jno
popa
and
pop
inc
shl
shr
ja
test
or
insl
cs
ds
loope
dec
stos
int3
mov
data16
dec
xor
ficoms
enter
sahf
jle
aas
sbb
sbb
add
cltd
adc
ret
xor
adc
xchg
push
xorl
ja
pushl
adc
stc
int3
inc
mov
in
ss
push
jnp
rol
lcall
mov
push
leave
and
popf
test
mov
ss
jae
je
jo
pop
hlt
ljmp
jp
aaa
jle
jle
test
and
xchg
add
mov
jg
add
or
push
ds
imulb
dec
loop
rcrl
lods
mov
add
cli
xchg
rolb
xor
pop
call
popf
add
jle
aam
push
push
inc
fnsave
jle
xchg
bound
mov
xor
inc
mov
add
notl
les
pop
dec
xchg
xchg
mov
repnz
std
sbb
sub
loopne
jl
hlt
lock
mov
movsl
das
push
fists
sbb
cmc
leave
pusha
lcall
add
inc
inc
inc
dec
loope
notb
cld
decb
sub
jle
icebp
ss
or
cmpsb
repnz
gs
xchg
xchg
hlt
incl
test
dec
push
inc
or
sti
mov
es
idiv
sub
cli
inc
je
adc
push
or
int3
sub
xorb
cli
dec
shlb
adc
bound
add
popa
decl
push
ds
push
stos
jmp
sbb
mov
pop
stos
add
arpl
pop
cli
into
lds
out
and
clc
clc
xchg
dec
daa
dec
or
mov
mov
fcomip
mov
inc
push
sub
cld
rol
fldz
fstpt
stc
popl
ret
dec
push
hlt
stos
adc
jle
movsl
or
pusha
cbtw
xor
movsl
inc
adc
mov
sub
cmp
andl
adc
stc
test
lea
lret
push
mov
push
outsb
adc
add
dec
dec
xor
ss
mov
adc
js
imull
push
or
loop
adc
pop
dec
fnstenv
dec
mov
mov
or
jp
fdivs
orps
add
and
ljmp
mov
jp
mov
iret
or
push
loop
pushl
clc
cli
dec
mov
nop
push
pusha
scas
ffree
pusha
pop
rcrb
into
mov
mov
add
dec
cli
incb
bound
lods
inc
pop
dec
push
je
mov
in
xor
sbb
orl
xchg
push
fadds
dec
push
or
mov
xchg
or
in
mov
jg
dec
test
imul
dec
mov
popa
mov
mov
out
dec
sarl
jmp
and
mov
ds
mov
sbb
sbb
fiadds
pop
ret
inc
sub
or
xchg
jecxz
pop
sub
dec
xor
fwait
andl
push
popa
push
or
mov
pusha
inc
aas
lock
xor
cmpl
push
call
inc
daa
xor
adc
loopne
mov
int3
mov
xchg
clc
sub
popa
clc
xor
and
inc
pop
mov
mov
test
imulb
pop
rcrb
aaa
pop
fbld
cwtl
dec
jbe
and
inc
lret
fdivs
xchg
inc
rorb
test
in
pop
xchg
xchg
cmp
mov
dec
daa
aad
dec
negb
push
push
inc
sub
icebp
and
shrb
and
or
add
mov
incl
lea
cmp
in
js,pn
fnstsw
hlt
sub
out
ljmp
push
outsl
jl
shll
and
movd
pop
dec
insb
mov
cmp
push
cmp
and
mov
loop
ljmp
or
rorb
stc
outsl
jg
rcr
add
cmp
pusha
add
pop
in
cmpsb
or
cwtl
int
push
aaa
adc
adc
inc
std
cmpsb
adc
popa
scas
mov
pop
push
bound
ljmp
movsl
xchg
adc
fs
pop
mov
out
es
jmp
add
dec
incl
cli
jle
push
addl
incl
sti
clc
xor
lods
shlb
add
push
pushf
orl
insl
adc
dec
xor
jbe
pop
hlt
mov
clc
inc
push
mov
imul
push
adc
xchg
or
sar
fstpl
sbb
add
cmpsb
lea
add
mov
mov
sub
cmp
out
push
pop
inc
push
icebp
push
sbb
mov
sub
adc
pop
or
mov
adc
lcall
mov
add
das
mov
jbe
rclb
cmp
lcall
sub
stos
fstpl
mov
rorb
flds
cli
mov
xorl
je
push
pop
mov
rcl
lcall
fisttps
xor
inc
mov
js
cmpl
cld
cwtl
das
sti
pop
ret
pusha
and
xchg
loop
xchg
cmpsl
mov
stos
cmpsl
pop
js
out
loopne
dec
dec
sbb
pusha
sbb
push
add
loopne
dec
enter
repz
and
repz
insl
fidivrs
jbe
lods
in
in
outsl
mov
stc
pop
je
fisubs
mov
sarb
pop
mov
push
mov
test
loop
and
out
out
pop
bound
out
out
lock
push
adc
hlt
jo
cld
mov
movsl
popa
roll
rolb
fisubs
lock
cmpsb
je
inc
call
addb
cmp
ja
inc
pusha
push
ds
push
cld
loopne
dec
sar
hlt
lea
ret
inc
outsl
ficompl
push
jg
in
cmp
sub
xchg
mov
xor
aaa
adc
and
mov
cld
mov
sub
adcb
dec
jl
sbb
dec
pop
or
insl
xchg
lock
scas
hlt
fistps
cmp
pop
mov
mov
mov
cld
xchg
faddp
aam
adc
adc
xchg
push
lods
xchg
push
dec
jl
mov
divb
or
mov
mov
push
mov
adc
inc
or
pop
clc
outsb
lcall
int
dec
push
xor
inc
adc
mov
mov
fidivrl
xchg
test
sub
ds
sub
adc
and
mov
or
outsl
andb
test
jbe
jp
jns
int
mov
add
lret
and
jl
xchg
mov
insb
dec
lahf
add
dec
fidivrl
adc
xchg
mov
dec
sbb
pop
mov
hlt
mov
std
mov
cmp
mov
dec
adc
push
adc
inc
mov
in
xchg
fimull
ljmp
add
movsl
add
sub
ljmp
addr16
cli
repz
ret
and
cltd
out
mov
es
pop
mov
frndint
add
sbb
xchg
stos
hlt
add
enter
outsb
imul
mov
push
inc
and
je
sar
mov
int
sub
stc
xor
mov
lcall
lcall
sub
pop
adc
xor
sub
mov
mov
jmp
rorb
lcall
scas
pop
xchg
cmp
xchg
testl
movsb
mov
into
sub
sub
lret
and
mov
xor
in
xor
repz
fcom
sbb
and
and
lret
push
or
and
xorb
mov
push
pusha
dec
in
mov
or
push
jl
aas
clc
and
adc
or
call
sub
notb
mull
pop
inc
fprem1
add
adc
or
scas
or
hlt
cmp
pushf
cmp
cmp
aad
jp
add
add
ljmp
stos
aas
gs
ds
push
into
or
incl
xchg
ds
imul
rcll
cmp
jle
adcb
xor
aaa
outsb
or
sti
inc
lods
push
fcoml
cmp
ret
ss
pop
mov
inc
addb
pop
mov
add
test
jg
mov
sub
rolb
and
cmp
xor
or
mov
add
rorb
and
dec
cs
xor
orb
icebp
arpl
dec
ja
mov
or
lcall
sbb
xor
xchg
mov
jecxz
aas
or
fcoml
nop
adc
adc
ss
adc
dec
cmp
mov
test
xchg
push
pop
and
in
lret
and
pop
mov
call
aas
inc
aas
fistpll
xchg
cmp
jmp
xchg
mov
or
fadd
cmp
outsl
adc
sbb
inc
sub
clc
or
inc
pop
mov
orb
sub
decb
add
mov
mov
leave
lods
mov
push
mov
dec
push
rorl
pop
movsl
jle,pn
cmp
fsubrs
push
mov
out
call
xor
aad
mov
inc
testl
xchg
sbb
test
movsb
push
mov
rorl
jb
pushf
and
cmc
mov
push
fwait
out
mov
lds
test
sahf
aad
notl
push
mov
andb
lret
data16
js
lock
pop
cmpl
cs
jo
add
bound
popf
sub
subb
shll
je
emms
ret
adc
sub
data16
sahf
mov
pushl
pop
push
add
jecxz
push
xchg
add
inc
loop
mov
jo
ds
sbb
fidivrl
dec
pop
cmc
add
adc
fstp
and
nop
insb
cwtl
jno
fsubrp
cmp
sbb
call
jne
dec
loop
aas
dec
call
stos
scas
ret
rorl
mov
into
das
into
nop
sbb
cltd
add
orb
pusha
mov
dec
mov
cltd
sbbb
dec
stos
or
loopne
fldt
icebp
lcall
mov
incl
fildll
test
and
enter
stos
or
xchg
push
sbb
dec
xlat
mov
xor
xor
or
mov
pushl
jae
out
out
xlat
addr16
mov
sub
jb
push
sub
mov
movsb
dec
inc
std
pusha
add
or
scas
fsts
ret
jle
stos
push
and
and
test
shrb
lret
out
cli
xor
xor
pushf
test
lcall
or
add
outsl
push
mov
or
push
mov
xor
jo
push
roll
push
cmc
cmp
and
hlt
push
addl
test
pop
test
dec
inc
xor
sub
sub
loopne
rolb
adc
aad
imul
lock
loope,pt
sahf
sub
testb
jge
xor
pop
ficomps
sbb
outsl
push
cwtl
push
outsb
cmp
je
pop
ds
cmpsb
outsb
ljmp
sub
and
xchg
pop
and
nop
mov
pushf
mov
dec
sub
jle
push
sub
repnz
xor
mov
fyl2x
xchg
adcb
add
mov
std
inc
cmp
cmp
lds
mov
adc
icebp
mov
cld
cmp
or
pop
xor
arpl
fwait
hlt
lret
or
push
sub
push
mov
and
pop
gs
xor
gs
jb
lods
popf
mov
adcl
sbb
jg
ret
lret
stc
xor
push
mov
mov
or
mov
sbbl
mov
sub
outsl
ja
mov
in
hlt
icebp
ljmpw
push
shrl
rcl
mov
pop
sarb
dec
mov
fisubs
xor
test
jbe
mov
jge
sub
nop
or
push
adc
les
pop
inc
cmpsb
inc
sahf
out
push
mov
pop
push
roll
xchg
insb
aaa
jg
daa
ds
mov
pop
stos
jne
sbb
icebp
bound
lods
insl
adc
repnz
cwtl
imul
jle
push
inc
inc
shrl
movsb
lret
xor
mov
outsl
push
pop
xchg
fwait
dec
inc
mov
arpl
jno
sbb
mov
jl
sub
pop
loope
bound
xorb
mov
jmp
nop
imul
and
lods
scas
clc
push
jo
je
xchg
cmp
ret
mov
fsubrs
call
jbe
cli
adc
push
cmc
aam
rcll
push
pop
daa
mov
cmpsb
out
sbb
xchg
jmp
sub
fisttps
das
dec
dec
xor
cmc
sarb
in
add
ret
sub
gs
and
lods
xchg
push
add
nop
add
push
push
movsb
idivl
lods
push
test
loop
sbb
lods
push
push
mov
cli
jg
inc
ds
call
add
sub
mov
jl
pop
test
dec
adc
cld
in
ja
in
pop
xor
or
hlt
mov
pop
cwtl
push
jge
lahf
adc
and
popa
scas
xchg
cmp
nop
inc
add
xchg
icebp
mov
add
ljmp
mov
pop
xchg
inc
cli
pusha
inc
sti
mov
xchg
mov
fcmovnb
push
test
and
jno
push
sahf
xorl
mov
aam
sbb
popa
and
jno
push
lret
jnp
lcall
pop
inc
add
mov
lds
dec
dec
cmp
fstps
xlat
mov
adc
mov
push
mov
pop
sub
lret
mov
cli
sbb
cmc
enter
xor
mov
adc
leave
mov
add
push
shll
rorl
dec
xor
ds
or
sbb
cmpsb
add
repnz
mov
mov
rolb
pop
insb
xor
pop
sbb
pop
andb
arpl
mov
ret
out
idiv
push
adcb
dec
sahf
std
jno
jb
clc
insb
push
dec
pop
loope
inc
mov
shll
frstor
mov
outsl
add
push
jg
pop
inc
aad
add
shrl
adc
cwtl
out
in
inc
pop
rorl
push
andl
into
mov
pop
push
les
aas
xor
mov
aam
add
ja
dec
pop
loop
into
sbb
test
mov
sbb
jbe
imul
ds
mov
adc
loop
adc
loope
jle
ljmp
or
fcompl
scas
pop
xchg
insl
add
and
mov
cltd
scas
inc
cld
sub
add
clc
xchg
mov
hlt
push
inc
jge
ss
lret
repnz
add
cmc
add
mov
out
pop
inc
lods
ja
rol
addb
dec
sti
aad
clc
decb
push
lock
cmp
jmp
pop
call
ret
mov
and
mov
into
xor
mov
jnp
addb
push
mov
sub
mov
mov
jge
inc
subl
cs
cmp
add
push
loopne
xor
add
mov
mov
sub
sbb
or
aas
ss
insl
jmp
jnp
out
sub
mov
lcall
and
ret
dec
push
ja
inc
fists
stos
leave
add
clc
clc
imul
pushf
rcr
out
sbb
sub
cmp
pop
xchg
jae
sbb
aam
pop
jmp
call
xorb
sub
sub
test
fdivrl
cmpsl
lock
mov
fldlg2
aam
xor
mov
insb
sbb
outsl
and
in
lock
int
adc
cmp
xchg
pushl
inc
adc
stos
nop
js
dec
pop
addb
repz
decl
cld
cld
push
push
sbb
pop
in
daa
add
stos
push
lahf
lock
sahf
ds
outsl
adc
cltd
pop
push
adc
inc
nop
cmp
jne
scas
dec
enter
mov
pop
fwait
sub
dec
add
loope
int3
js
dec
or
dec
lret
lods
ja
addr16
adc
add
xchg
aad
add
pop
scas
adc
ret
daa
outsl
push
imul
jecxz
mov
jge
xchg
mov
cmp
mov
cli
adc
lock
sbb
std
sub
adc
sub
cmpsl
dec
enter
ds
sub
add
adc
xchg
jae
or
inc
movsb
insb
pop
xchg
imul
popa
and
mov
pusha
and
pop
jo
repz
pop
test
call
fstps
or
lods
dec
xchg
out
sbb
loopne
cmp
or
push
je
sub
loop
adc
rcll
ret
add
mov
cmp
mov
cmpsb
mov
js
jbe
sahf
outsb
push
mull
xchg
shll
jl
dec
sbb
orl
push
jb
adc
cmp
es
movsb
xor
or
sub
or
push
pop
push
cwtl
in
bound
data16
add
push
jl
or
adc
movsl
adc
fsub
loope
imul
bound
test
inc
sahf
add
mov
pop
std
mov
cwtl
and
add
mov
movsb
or
add
outsb
sarl
and
jecxz
xor
pop
mov
sbb
out
mov
clc
push
hlt
mov
jmp
decl
lods
xchg
jg
sub
jle
das
stos
push
pusha
push
fcomip
inc
test
fiadds
sub
ss
and
jge
add
jmp
ret
push
daa
dec
lods
dec
cmc
int
xchg
xor
lods
dec
xor
cmpsb
adc
mov
xchg
jp
add
dec
jno
stc
adc
sub
pop
mov
dec
incl
jle
insl
dec
cmpl
out
das
xchg
incl
mov
lahf
cli
sahf
xchg
jle
cmp
mov
jne
push
shrb
sti
inc
shrl
sahf
xor
dec
pop
jg
bound
icebp
sar
jbe
decb
movsl
fisubrl
test
test
std
repnz
lret
xchg
xor
inc
pop
push
sub
add
lds
sbb
lods
and
pop
xchg
int
jbe
adc
enter
inc
fsubs
imulb
cli
inc
or
je
pop
jle
arpl
test
fs
or
cmp
mov
shlb
or
push
fs
hlt
dec
lcall
aam
xor
cli
je
pushfw
addl
inc
mov
subl
cmpsb
or
test
insb
sahf
aad
mov
out
loope
xchg
adcl
mov
test
repnz
nop
jle
jp
add
mov
or
mov
or
push
mov
sbb
jp
mov
cmp
in
or
mov
xchg
sbbb
out
lcall
repnz
sbb
dec
fildll
hlt
jbe
flds
push
mov
in
rorl
aad
pusha
adc
adc
mov
mov
int3
sub
xchg
sub
cmpsl
push
ret
jl
nop
inc
js
push
stos
scas
incl
lcall
mov
mov
and
sbb
xor
sub
jg
xchg
and
inc
jo
ljmp
stos
xor
icebp
adc
aas
loopne
iret
testb
push
inc
add
pop
clc
cmp
fcomip
gs
repnz
jne
mov
fadds
or
test
or
and
push
hlt
sub
xor
push
jecxz
mov
push
mov
testb
mull
jecxz
add
push
je
xorb
imul
mov
pusha
out
ror
mov
mov
psubd
bound
jl
sbb
das
mov
lods
adc
and
incl
sbb
outsb
add
fcom
jae
adc
clc
sub
nop
inc
leave
add
ret
lock
mov
pop
mov
mov
cmc
mov
mov
sub
push
mov
dec
mov
cmp
add
ret
movsl
push
fsubrl
fwait
pop
into
add
inc
int3
stos
test
mov
test
add
push
xor
jbe
in
add
mov
cmp
add
aas
hlt
hlt
dec
mov
fucomip
clc
adc
pusha
incb
insl
push
cmp
cltd
inc
pop
sar
js
cmp
adc
jbe
cld
cmp
mov
xor
cmp
ret
nop
int
pusha
sti
sarb
cld
add
or
das
push
fcmovb
in
shrl
movsb
cmove
sbb
jo
mov
pop
dec
das
aam
stos
xor
lahf
imulb
das
clc
fwait
inc
sub
lret
ljmp
arpl
jno
loope
cs
and
push
bound
mov
pop
mov
inc
adc
mov
cmpb
sbb
sarb
imul
enter
dec
xor
dec
loop
inc
jo
std
cmpsl
mov
pop
jle
mov
out
push
push
loope
lds
pop
fsubrl
mov
adc
fdiv
and
inc
inc
dec
jecxz
push
dec
es
movsl
inc
xchg
mov
inc
ljmp
inc
mov
test
imul
pop
xor
inc
std
add
sbb
sub
sub
orl
xor
and
fwait
ja
loopne
lods
lret
mov
icebp
inc
mov
sub
lcall
lea
movsb
xor
xchg
sub
or
mov
incb
or
fdivl
mov
sti
push
data16
pop
mov
add
jne
cld
mov
fmuls
push
lock
mov
insl
lret
pop
cmp
shl
sbb
jns
inc
scas
push
loope
ret
push
pop
pop
test
loop
insb
cmp
inc
call
or
lahf
fwait
xor
add
xchg
cmp
cmpsb
or
cmp
or
push
clc
cmp
xchg
sbb
jmp
imul
int3
add
or
mov
test
inc
movsb
test
sub
aas
and
cmp
fsts
clc
aas
clc
and
jl
jae
mov
negb
loope
movl
or
jg
xchg
ret
mov
std
mov
inc
repz
add
lret
cld
cwtl
inc
lret
out
add
sub
add
dec
lock
xor
loopne
add
xor
add
mov
test
insb
dec
sbb
or
testl
jno
pop
test
loopne
dec
icebp
cs
cs
dec
adc
das
and
sub
repnz
sbb
sub
mov
or
mov
push
rorb
mov
fdivp
mov
push
mov
push
cmp
icebp
mov
outsl
std
jnp
mov
or
push
pop
rcrl
cmp
inc
call
mov
clc
or
ficoml
dec
arpl
jnp
pop
and
in
into
in
add
mov
sbb
inc
inc
and
lods
shr
pop
loopne
pusha
iret
daa
loopne
shlb
inc
inc
ret
pop
sti
cmpsb
ret
cli
in
imul
or
mov
cld
mov
mov
fwait
xor
or
cld
fmuls
cmc
orb
ljmp
addl
and
adc
sub
outsb
in
push
sarl
ljmp
pop
mov
addr16
or
add
jne
stos
out
add
sub
pop
cmp
mov
js
call
mov
cltd
mov
inc
jb
sbb
call
mov
pop
dec
nop
inc
inc
and
fimull
push
sbb
mov
mov
ja
add
or
pusha
dec
call
lods
or
pop
ljmp
mov
xchg
cmpsl
add
std
add
cli
dec
sub
xchg
aaa
pushl
test
add
icebp
inc
jl
dec
dec
std
dec
loopne
add
jne
dec
inc
js
and
es
adc
push
adc
cmc
push
inc
loopw
xor
pop
and
lds
sub
test
cmp
out
xchg
dec
jb
push
aaa
sar
data16
out
dec
dec
mov
fmull
lahf
pop
sahf
dec
xor
dec
rcll
fistpl
push
fiadds
testb
or
jae
jge
add
cmp
and
es
jne
cmp
mov
int
cwtl
nop
fucomi
jo
jnp
movsl
fisubs
xor
movsb
fcoml
out
xchg
ret
lahf
push
mov
or
lock
push
push
jecxz
mov
mov
bound
test
cltd
and
test
sbb
test
cs
aaa
fsubl
fisubl
jns
aaa
cmc
sub
and
movsb
sub
scas
xchg
int3
mov
push
jle
into
push
dec
mov
cld
push
dec
stc
xor
sub
push
in
mov
mov
int3
push
inc
jbe
test
jne
subb
fs
pop
lea
sbb
add
mov
lahf
mov
push
push
orl
out
add
inc
inc
outsb
push
add
stos
hlt
mov
cmc
jmp
popa
das
or
mov
mov
mov
or
jl
leave
loope
and
insl
test
jb
push
sbb
add
roll
xchg
or
lods
fists
add
and
clc
popf
sbb
sub
loop
add
mov
incl
aaa
inc
mov
push
std
mov
setl
mov
je
xor
out
mov
pop
mov
cmp
xor
cs
push
mov
je
and
sub
push
inc
outsl
clc
sub
xchg
lret
sahf
mov
xorb
push
ficomps
orb
mov
sahf
enter
in
xor
xor
add
inc
jb
mov
pushf
cli
sub
nop
int3
mov
shrb
outsb
mov
pop
jg
mov
pop
add
inc
shlb
daa
cmp
jg
or
and
bound
lret
rorl
clc
xchg
push
xchg
pusha
js
lds
pop
mov
push
adc
aaa
cmp
lcall
jg
add
mov
mov
lods
jle
adc
scas
imulb
add
push
divb
roll
lret
ret
xchg
push
add
ret
add
hlt
gs
enter
in
lret
stc
test
nop
sub
imulb
in
sbb
in
in
stc
mov
cmp
call
shrl
cli
cmp
xchg
lret
insb
ret
shl
js
mov
mov
stos
cli
mov
or
jg
push
xor
in
and
dec
fwait
add
aaa
push
or
addps
inc
or
cmpl
orb
enter
push
mov
jnp
lret
fcmovb
movsl
pop
sub
or
sbb
sar
sub
mov
add
or
inc
cli
mov
add
dec
cmp
add
into
mov
incl
or
cmpb
xchg
scas
push
add
and
and
repnz
sbb
ficoml
jo
outsl
pusha
dec
out
jne
jge
cmpsl
add
insl
in
ds
cmp
push
inc
mov
pop
add
mov
movl
leave
clc
adc
xor
in
in
sub
add
rorb
mov
outsl
xchg
mov
inc
adc
lods
pop
mov
push
pushf
xor
and
rcrb
shr
jns
inc
xchg
hlt
mov
push
ret
fidivrl
les
mov
push
mov
outsb
jle
adcb
add
pop
cmp
je
pop
pop
hlt
cmp
add
push
mov
pop
pop
test
pop
xchg
cmp
sub
mov
add
pushf
movsb
adc
cmp
sbb
mov
mov
and
sahf
adc
xchg
xor
xchg
movsl
push
xchg
fdivs
sub
insl
into
pop
clc
arpl
scas
add
xchg
pushf
jno
scas
les
inc
and
rcrb
ss
xchg
pop
push
jb
pop
mov
pop
mov
xchg
fidivrl
aaa
jne
mov
dec
aam
xchg
or
ret
call
aam
pop
ljmp
add
push
nop
insb
xlat
cmp
loop
jmp
clc
mov
jne
xor
sub
in
ja
icebp
outsl
movsb
adc
pop
add
jnp
pop
fs
mov
xchg
adc
jle
jecxz
imul
faddl
mov
pop
add
sub
cmc
fidivl
or
test
icebp
jg
loope
lahf
mov
and
sub
ret
cwtl
mov
imul
pop
loopne
movsl
pop
enter
jp
xlat
and
adc
fisttpll
lds
out
fimull
cld
push
xchg
add
shrl
imul
add
add
insb
push
lcall
sbbb
loop
arpl
and
fists
xchg
test
jl
inc
lcall
sub
mov
push
lcall
xchg
xchg
sbb
dec
aas
js
enter
ja
jecxz
inc
pop
out
lock
pusha
xchg
pop
out
sahf
mov
mov
mov
fdivrl
sbb
outsb
jmp
xchg
push
addr16
add
pop
jmp
push
jae
pusha
ficompl
aad
jno
outsb
mov
lcall
mov
call
aam
popf
jno
jmp
repnz
js
add
sbb
sbbb
ss
or
mov
mov
jecxz
ja
and
pop
cld
push
es
jecxz
add
shl
sub
iret
dec
mov
call
aad
sahf
sub
or
std
lock
dec
fnstsw
xor
cmc
fdivl
pop
inc
je
xchg
xor
add
mov
push
shrl
and
sub
cmp
inc
push
and
inc
cmp
test
stc
jbe
lea
das
or
rolb
mov
rcrb
mov
add
in
sub
das
pop
push
pop
loope
mov
push
dec
in
inc
or
stos
mov
clc
dec
adc
pop
add
sbb
cmpb
call
fiadds
xchg
sbb
into
push
cld
test
cmp
adc
scas
lcall
cmp
shrl
lods
inc
shrb
sbb
or
imul
into
cmp
fisubl
jg
loop
and
outsb
int3
mov
xchg
das
rclb
inc
pop
mov
inc
mov
cwtl
frstor
add
push
mov
dec
fs
pop
sahf
mov
in
cwtl
push
subb
test
inc
pop
addb
mov
lock
je
mov
clc
xor
dec
pushf
xchg
out
repnz
dec
adc
adc
jle
mov
fsubrs
aas
adc
adc
adc
push
adc
cmp
pop
es
xor
inc
clc
push
adc
clc
jb
outsb
loopne
inc
ret
mov
adc
shrb
mov
nop
and
imulb
lcall
jg
push
xor
mov
test
and
ret
xchg
bound
in
adc
out
pop
call
aam
or
cmp
arpl
adc
lock
pop
mov
dec
lret
mov
adc
gs
aas
sbb
sub
adc
pusha
jl
or
pop
std
int
push
dec
pop
cmpsb
ret
cs
in
repz
mov
out
shll
sbb
push
or
mov
orb
mov
pop
xchg
xor
mov
sarb
mov
scas
sub
pushf
xchg
rcll
aam
mov
sti
mov
push
call
push
mov
push
test
inc
test
hlt
movsl
cld
or
arpl
mov
rolb
and
pop
add
int3
into
pusha
daa
mov
cmpb
insb
or
add
fidivs
stos
test
stos
out
push
mov
cmp
loop
repnz
pop
fsubl
loope
xor
lea
insb
sbb
fdivrs
sbb
aaa
aas
or
jbe
pushl
mov
test
ds
push
sbb
cmp
aam
inc
data16
push
aas
adc
add
and
inc
adc
push
dec
cmp
or
fadds
sbbb
push
popl
or
out
and
movsl
shl
dec
aam
fimull
or
add
repnz
mov
or
orb
jge
mov
mov
xor
jo
mov
pop
rorb
insl
test
fiaddl
sbb
and
mov
data16
cmpb
push
mov
push
hlt
jo
sbb
sub
jmp
in
mov
shlb
sub
mov
fisttps
aas
das
dec
add
movsb
jb
adc
addb
xchg
rol
push
lods
mov
in
cmp
xlat
mov
int3
cmp
movsl
mov
int3
sub
dec
sbbl
add
idivl
adc
adc
cli
testb
fwait
pop
add
js
inc
insb
add
cld
test
leave
sbb
xor
pusha
sub
and
js
js
jno
outsb
sarb
push
add
inc
push
repnz
mov
out
insl
hlt
add
xchg
or
sahf
mov
inc
sub
stos
xlat
add
leave
shll
mov
sub
dec
mov
cmp
xchg
pop
fsubs
add
mov
cmp
fldl2e
fistpll
loope
andl
pop
test
mov
orl
addl
hlt
push
and
sbb
push
pop
scas
stos
clc
rcrb
cli
mov
inc
mov
roll
cltd
cmp
mov
pop
push
fs
ss
lcall
xchg
fs
mov
sub
pop
int
add
aad
aas
not
adc
fcom
inc
movsb
mov
fdivrl
xor
testl
les
popf
hlt
xchg
jo
nop
loope
and
jmp
or
and
pop
xchg
ljmp
or
out
nop
jne
jle
sbb
and
je
or
movq
das
sbb
repnz
ljmp
adc
pop
in
pop
jmp
test
dec
push
mov
push
call
or
jnp
movsl
push
fldl
sub
popf
shrb
and
ret
sbb
lea
jb
test
je
push
frstor
bound
sbb
and
pop
jno
popf
mov
sbb
sub
add
lds
gs
test
mov
or
sbb
loop
pushf
fisubs
ss
xchg
inc
and
enter
fisubl
lock
shrl
movsb
and
nop
xor
pop
aad
sbb
stc
lods
push
ret
sbb
adc
movsb
js
fidivl
adc
flds
cmc
outsl
loop
das
popf
add
sub
sarl
loop
mov
das
rorb
lcall
jmp
jecxz
jnp
fs
sbb
inc
rorl
sahf
aaa
stos
jecxz
shlb
mov
iret
inc
jmp
imul
loop
jb
xchg
jo
xchg
into
add
pop
xor
add
or
sub
imul
xor
aaa
je
push
cli
test
addl
add
out
pop
pop
call
insb
mov
fsub
xchg
xor
dec
push
aad
cmc
mov
hlt
pop
add
loopne
iret
sbb
mov
mov
fmul
add
cmp
cwtl
add
sbb
jecxz
pushf
sub
sbbb
mov
fstl
cmpb
lret
or
cmc
test
dec
and
int3
fdivr
inc
jecxz
clc
jae
test
jne
pop
fdivrl
xchg
add
scas
adc
mov
jp
mov
in
popa
and
dec
and
daa
roll
pop
and
pop
add
aad
inc
sbb
cmp
mov
insl
rolb
fdivr
pop
mov
jecxz
stos
ljmp
cli
and
dec
push
test
push
or
mov
test
pop
rclb
inc
lods
dec
xor
sub
pushl
cmp
sbb
cmp
ja
dec
or
daa
pop
push
cmp
add
sub
jmp
jmp
push
in
test
cmp
jb
jg
sub
in
outsl
jg
dec
xor
sub
push
ss
mov
dec
ljmp
mov
xor
push
xchg
mov
inc
xor
ss
icebp
sub
mov
fimuls
mov
push
add
pop
ljmp
imul
push
pop
lods
add
dec
arpl
sahf
stos
loope
jle
lea
sahf
mov
jecxz
icebp
fisttps
add
xchg
adc
jbe
nop
pusha
push
push
mov
xchg
ds
push
or
inc
stos
mov
adc
pop
mov
pop
mov
and
push
cmpsl
jbe
aam
ja
into
mov
add
xchg
popf
xchg
pop
mov
xor
sarb
ljmp
xchg
mov
popf
dec
insb
sub
insl
mov
push
scas
xlat
pusha
mov
jl
cmpsb
adc
clc
add
subl
in
xor
adc
dec
out
pushw
mov
jbe
lea
pop
icebp
js
mov
std
pop
add
dec
test
mov
clc
xchg
mov
sub
cwtl
imul
fildl
aam
push
scas
sub
ss
sbb
lock
pop
mov
pop
push
aas
dec
fsub
inc
inc
dec
cmpb
jmp
hlt
dec
mov
adcb
xor
or
add
inc
push
inc
fsubrp
push
mov
jo
lcall
in
pop
xorb
lock
out
ss
xchg
jmp
fdivl
push
fwait
in
movsb
les
jg
andb
push
lods
aas
xor
lcall
insl
ljmp
in
mov
call
pop
mov
cmpsl
and
adc
jl
add
cli
adcb
outsl
call
and
fs
loopne
leave
rorb
cld
fildll
dec
cmp
ljmp
sub
xchg
mov
add
test
or
adc
shlb
add
ds
and
mov
testl
fdiv
mov
lock
pop
mov
testb
xchg
js
pushf
inc
fcmovnbe
xor
pop
adc
mov
fstpl
add
mov
aas
push
data16
lods
xchg
push
inc
inc
mov
jmp
push
or
add
decb
test
cmp
dec
xorb
jle
mov
jbe
mov
lea
cmp
push
or
add
add
cli
push
lds
subb
js
clc
out
push
xchg
fs
inc
or
mov
push
push
inc
ja
or
push
or
cs
adc
cld
ds
arpl
mov
jo
hlt
pop
pop
cli
lds
shrb
or
xchg
adc
lret
enter
out
ret
jp
inc
push
rcrl
jle
sub
lods
stc
adc
xchg
lcall
shll
cmp
lret
mov
hlt
push
jns
hlt
add
rolb
aad
mov
imul
mov
sbb
push
outsb
sbb
bound
gs
push
outsl
ret
aam
insb
xchg
cmc
add
ja
insb
lcall
add
pop
mov
jne
sub
icebp
xchg
xchg
cli
divl
insl
xor
sbb
enter
inc
mov
or
call
out
pop
ret
sub
aaa
pop
adc
or
add
pop
jno
out
lahf
sbb
scas
mov
dec
add
outsl
or
es
loop
daa
pop
repnz
xchg
add
pop
fisttpl
sahf
or
inc
incb
cmp
mov
adc
unpcklps
sbb
dec
jle
cmpsb
faddl
push
adc
inc
js
clc
scas
or
push
loopne
xchg
xor
ljmp
sub
out
pop
pop
sub
inc
mov
pop
sar
lock
cld
fists
sub
jge
xchg
lods
into
jb
add
cmc
sysexit
or
adc
dec
daa
inc
das
xor
test
stos
mov
mov
xchg
bound
negb
sbb
arpl
add
std
cs
ret
jno
movsb
cs
mov
pop
incl
xor
out
shl
or
pop
xchg
jp
push
jg
andb
scas
inc
inc
test
inc
lods
and
aaa
cmp
js
or
mov
push
ljmp
es
or
jecxz
mov
scas
dec
stos
loopne
cld
inc
icebp
decl
out
pop
iret
sti
xor
rcll
sub
adc
in
xchg
test
push
pop
hlt
or
and
je
shlb
push
push
push
ret
push
leave
lret
mov
in
ss
adc
xorb
add
fiaddl
clc
dec
mov
in
popa
sub
jge
out
mov
push
inc
cld
fildll
sti
in
mov
and
leave
mov
and
xor
std
mov
cmpb
pop
sbb
lock
in
mov
adc
jp
ljmp
adc
addb
inc
or
and
cmp
mov
fsts
mov
sub
push
dec
ret
aam
push
add
pop
es
aaa
cmc
pop
dec
out
rcrb
call
fwait
mov
es
pop
push
xchg
aas
lea
and
fwait
jbe
scas
hlt
nop
xchg
cmc
mov
mov
or
sbb
add
sub
enter
repnz
data16
ja
add
bound
jecxz
mov
popa
jge
xchg
data16
mov
add
pusha
mov
mov
cmc
pop
push
xchg
or
adc
jb
stos
pop
pusha
jbe
cmp
pop
popa
mov
inc
repnz
out
and
dec
iret
adc
pusha
xchg
hlt
pushl
add
mov
xlat
mov
jb
or
xchg
test
jmp
test
subb
lods
xlat
and
add
xor
jno
add
push
mov
jne
mov
sub
push
push
mov
scas
xchg
hlt
and
push
fistps
pop
ljmp
shll
cmc
push
cld
imul
mov
xor
push
add
lods
outsl
rorb
lcall
cmp
mov
rorl
incb
cmpsb
adc
pop
leave
pop
lods
js
push
cmp
or
dec
lock
movsb
pop
ja
jg
insl
jl
test
iret
jns
shlb
xlat
sub
xor
subb
dec
loope
xor
decb
mov
cmp
jbe
push
fs
lea
xchg
mov
das
rorb
ror
test
and
dec
sbb
lret
call
hlt
movsl
or
or
and
or
push
ficomps
cld
in
mov
and
jg
xor
stos
dec
or
inc
sub
or
mov
je
pop
js
push
push
fimull
sarb
nop
xchg
xchg
idivb
dec
sub
fdivl
out
add
inc
ljmp
or
cs
sbb
stos
div
inc
movsl
dec
jge
mov
fsubl
clc
fbld
adc
xchg
dec
adc
rcrl
xor
add
inc
fdivrs
es
fbld
mov
xor
sub
bound
fucomip
jae
or
inc
mov
stc
ficoml
in
call
and
adc
cwtl
sub
push
push
pusha
scas
pop
add
jbe
inc
fbstp
fwait
sub
adc
xor
xor
sub
mov
rorb
ljmp
roll
mov
and
clc
or
loop
mov
out
pop
roll
popf
js
sbb
pop
call
push
xor
add
loopne
jecxz
cld
ret
pushf
mov
decl
sbb
or
pop
cmp
iret
popa
add
xchg
xchg
sub
inc
cli
xor
adc
aaa
jl
mov
lock
clc
insl
call
xor
push
and
rcl
add
or
sub
add
add
sub
pop
and
orl
incb
push
pop
cmp
dec
jo
jl
ret
fnstsw
js
test
inc
ret
nop
inc
jbe
xor
or
mov
stos
fisttps
add
daa
in
or
aaa
pop
inc
xchg
xor
xor
ds
stos
sbbl
mov
movsb
mov
pop
nop
xor
or
mov
adc
push
mov
ret
je
ret
push
sub
lock
sub
test
cmp
repz
xor
push
inc
mov
cmp
clc
cli
jne
mov
mov
inc
push
sbb
aam
push
loopne
or
ds
fcoms
into
push
inc
pushf
imull
push
adc
incl
andb
push
aad
adc
push
push
nop
cmp
insl
stos
aaa
rorb
lret
movsl
push
adc
lods
jns
test
es
das
push
iret
ljmp
rcl
xchg
out
xor
sub
adc
std
dec
cltd
lea
push
mov
jp
loopne
stc
pop
aam
or
pop
enter
pushl
or
aas
pop
mov
fldt
pop
leave
fdivp
outsl
xor
popf
popa
mov
scas
pusha
and
das
cld
adc
imul
mov
or
scas
or
fisttpl
ficoml
xchg
lock
and
stos
dec
cmpl
dec
cmp
push
lcall
mov
inc
ja
jno
sbb
adc
imul
add
inc
or
mov
lock
mov
cmp
lcall
sbb
es
into
jle
cmp
sub
pop
jns
lock
push
aaa
inc
icebp
cmpsl
add
mov
fs
jp
add
add
incb
in
test
test
mov
call
cmp
sbb
add
or
loope
cmpb
pushw
rorl
in
hlt
mov
scas
xchg
rorb
test
sbb
push
cmc
cli
or
add
fwait
jg
add
ljmp
add
push
fstl
sub
sbb
ret
lock
mov
mov
std
int
jns
mov
xchg
xchg
pop
cmp
call
inc
es
adc
mov
adc
mov
add
out
add
cs
sar
sbb
pop
jne
jmp
gs
push
outsl
loop
scas
xchg
inc
adcb
add
push
notl
insb
or
jno
scas
jecxz
push
mov
es
and
lds
scas
and
mov
repz
pop
and
fnstsw
inc
inc
ret
jne
ljmp
mov
push
pop
or
jns
out
sub
jae
pop
lea
sub
push
fldenv
daa
push
pop
cli
add
cmp
xchg
add
mov
je
sbb
push
lods
mov
mov
hlt
inc
dec
sub
movsl
iret
lahf
movsb
mov
pop
inc
daa
icebp
mov
xchg
and
push
jle
shrb
dec
or
loop
shrl
fcoms
mov
push
sarl
shlb
ljmp
jb
mov
mov
lods
scas
fimull
inc
push
sahf
mov
in
and
lods
mov
in
push
in
mov
add
or
popa
vpaddw
jle
sbb
push
aam
bound
std
aad
outsl
ret
pushf
bswap
inc
inc
mov
jnp
add
incl
adc
xor
add
call
mov
pop
inc
clc
fists
and
pop
jge
xor
push
xchg
dec
or
sti
icebp
andl
std
jmp
subl
fsubp
mov
xchg
into
add
jmp
or
jo
sub
repz
inc
test
xor
in
ja
in
push
lcall
mov
mov
dec
sub
rcrl
mov
or
or
das
or
push
adc
shll
pop
cmc
pop
inc
pop
pop
jne
add
or
jmp
dec
clc
pop
and
shrb
mov
adc
xchg
cli
fldenv
and
inc
ficomps
out
and
lock
movsl
call
jb
mov
xor
out
fimull
push
cmp
enter
ljmp
cmpsb
jmp
fcmovu
mov
inc
inc
lock
inc
and
xchg
or
pop
pop
and
sub
pop
test
pop
popf
insb
nop
pop
arpl
add
lods
stos
test
ret
cltd
lea
fsubs
mov
stos
std
in
rolb
gs
sub
aad
mov
ficoms
add
fnstenv
leave
enter
icebp
mov
mov
sbb
inc
shl
movsl
icebp
ret
mov
mov
movsb
mov
and
sahf
mov
and
test
out
pusha
clc
cwtl
push
sbb
mov
xchg
mov
sbb
dec
mov
insl
mov
jmp
xchg
pop
cltd
icebp
and
or
xor
push
fstpt
push
add
push
cld
lcall
and
mulb
push
push
xor
loope
outsl
jg
and
cmp
adc
pop
inc
add
les
xchg
add
mov
mov
and
popf
and
jle
sbb
imull
sarb
add
cmc
sub
ret
mov
outsl
and
mov
mov
push
jne
iret
sahf
and
fiadds
popa
xlat
ljmp
clc
lret
add
dec
sbb
mov
movsb
aaa
dec
mov
lock
inc
xchg
xchg
jl
pop
movsl
adc
mov
lock
scas
xchg
mov
test
xchg
push
fbld
outsl
add
loopne,pn
or
jp
and
push
xor
and
clc
pop
cmp
js
pop
js
icebp
incl
mov
call
dec
mov
or
push
inc
scas
sbb
cmp
pop
and
push
adc
add
movsb
or
stos
outsl
xchg
xlat
mov
mov
pop
dec
sbb
or
push
jp
loopne
adc
sbb
cwtl
push
xor
xchg
sbb
mov
incl
out
int3
hlt
das
pop
insl
jge
cld
pop
in
sub
out
adc
pop
jmp
adc
push
pusha
mov
popa
push
pop
adc
push
mov
xchg
pop
cli
sbb
loop
sbb
jl
invd
shlb
insl
adc
insb
dec
fdivs
lea
lret
mov
sub
imul
movb
ljmp
fsubrs
shlb
lock
jg
cmovae
xchg
push
cli
add
icebp
test
and
push
cld
insl
loope
or
pop
js
push
lret
and
and
out
lock
shlb
dec
faddl
mov
mov
js
xlat
pushl
xchg
filds
js
cltd
jmp
push
aaa
push
call
and
es
mov
mov
jge
xor
mov
les
adc
rcll
pop
inc
es
adc
stos
out
insl
or
pop
push
xchg
jp
adc
adc
xlat
push
inc
mov
sub
sbb
jl
dec
enter
push
lods
push
dec
cmp
lcall
movl
icebp
hlt
movsl
dec
sub
js
fisttps
ljmp
lret
mov
pusha
or
subb
mov
xchg
pop
mov
jmp
sbb
clc
and
sahf
test
loopne
sub
adc
adc
xor
shll
shll
jp
push
clc
out
sahf
out
fiaddl
testl
cltd
in
daa
mov
cwtl
adc
orl
pusha
jb
adc
lods
ja
or
mov
pop
push
bound
sub
mov
inc
outsl
test
out
shrl
adc
sbb
js
mov
mov
lods
cmp
pop
xchg
aam
mov
es
dec
int
xor
add
hlt
addr16
adc
rclb
pop
iret
push
repnz
fsubrl
int
xchg
xchg
rcl
pop
push
adc
jl
jb
std
jecxz
mov
mov
xchg
mov
pop
pop
call
mov
addb
test
dec
stos
or
imul
fcmovbe
push
outsl
lahf
mov
mov
mov
push
jbe
mov
xchg
mov
xlat
xchg
add
icebp
out
jno
push
and
nop
dec
pushl
fcomps
pop
mov
ror
mov
pusha
pusha
push
mov
repnz
jo
xor
int
add
xchg
es
in
inc
pushl
or
add
inc
jg
xor
incb
xor
nop
add
push
and
imul
jl
shlb
test
frstor
push
push
nop
xchg
push
cwtl
jo
je
orl
jae
adc
jmp
inc
dec
push
mov
loopne
loop
sub
mov
aam
jg
add
rorb
movb
imul
or
dec
add
jo
or
sbb
fwait
xchg
loop
sbb
sti
or
aaa
xor
scas
add
pushf
cmp
and
inc
xchg
cwtl
xchg
sub
inc
push
push
and
inc
inc
lds
add
sbb
or
jno
mov
dec
adc
out
push
popf
xchg
fcmovbe
push
sub
or
mov
adc
push
les
into
rcl
mov
repnz
andb
adc
das
enter
inc
and
movsl
sbb
xor
push
adc
jle
aas
aas
jb
out
ret
clc
mov
scas
pop
cmp
sub
and
push
or
pop
jmp
mov
xchg
sub
es
adc
push
jnp
call
aam
cld
mov
dec
push
cwtl
bound
xchg
aam
cwtl
into
inc
pushf
call
add
cmp
inc
xchg
lods
and
loopne
es
lret
ljmp
pop
jb
push
out
dec
test
aaa
outsb
adc
sbb
xchg
jmp
test
rclb
test
call
push
inc
inc
loopne
incb
fwait
movsb
inc
movsl
fmul
js
dec
ss
xor
aaa
outsl
mov
xlat
ffreep
ret
cli
adc
add
and
sub
and
pop
add
shlb
pop
shlb
pop
cmp
arpl
incl
or
or
or
cmpsb
cmp
sahf
sarl
xor
stos
clc
fs
rcl
jl
add
mov
in
pop
cmp
cwtl
insl
pop
insl
loope
pop
into
xchg
mov
mov
loope
lret
sub
pop
push
rol
ds
cmp
fdivs
enter
cld
dec
loopne
inc
push
iret
push
cmc
cmp
add
cmp
mov
clc
mov
ffreep
push
fs
adc
test
outsb
rorl
adc
inc
cmpl
push
mov
push
lahf
dec
shlb
rcr
test
xor
rcl
jmp
mov
adc
sbb
pop
sub
sub
sbb
mov
sub
les
cli
fcomps
xor
ret
mov
cmp
das
mov
push
cwtl
scas
adc
jl
incl
pop
mov
mov
ret
inc
mov
icebp
les
add
iret
push
xchg
pop
xchg
ret
mov
mov
shll
call
or
lcall
add
or
bt
filds
ret
sub
xchg
push
and
mov
pop
pop
sbb
add
mov
fsub
arpl
out
pushf
xchg
adc
les
jne
ljmp
xchg
je
or
pushf
icebp
repz
cltd
or
test
scas
nop
cmp
mov
and
jle
lock
push
out
xchg
jg
cmp
enter
push
mov
push
jmp
clc
nop
cmp
mov
and
cmp
sbbb
insb
cmp
mov
pop
shlb
std
mov
mov
xchg
xchg
in
test
jmp
inc
test
les
add
dec
pushf
aam
mov
sahf
push
add
sbb
mov
add
dec
mov
mov
ljmp
add
dec
pop
cmc
dec
sub
test
imul
xor
jns
jo
mov
and
nop
adc
je
mov
mov
push
push
or
js
ljmp
push
out
sbb
jbe
jle
fsubrp
dec
push
and
jecxz
adc
mov
leave
ret
push
arpl
mov
icebp
loope
js
loopne
xchg
mov
or
popf
and
imul
adc
push
mov
cmp
and
iret
xchg
xlat
mov
rorb
and
or
das
pop
push
stos
inc
add
jp
or
inc
je
ljmp
sbb
mov
push
sbb
xchg
mov
mov
int3
xor
xor
pop
add
fsubr
cmp
inc
ss
sbb
mov
test
pop
inc
cmp
jo
out
dec
mov
lret
rorl
xchg
stc
mov
loop
dec
mov
mov
mov
fwait
inc
pushl
sbb
jmp
dec
lahf
rcll
mov
aam
or
jp
out
fsubrl
mov
roll
adc
aad
adc
loop
push
sti
out
jg
std
sub
adc
data16
xor
shl
fdivrs
add
stc
jg
adc
aaa
pop
outsl
add
jg
inc
mov
lock
nop
mov
jle
sti
jge
aad
ss
out
mov
loop
lock
mov
mov
movsb
pop
push
mov
test
mov
dec
xor
or
mov
mov
jecxz
imul
loope
add
and
cld
mov
xchg
pop
mov
xchg
mov
outsl
sarb
cwtl
mov
stos
outsl
adc
jmp
pop
dec
fwait
cs
pop
jbe
adc
cmp
jge
imul
xchg
stos
lcall
cltd
cmc
push
insl
mov
jb
xor
loope
xor
push
clc
mov
dec
mov
adc
add
in
sbb
cmpsl
out
inc
ret
lret
ret
iret
inc
in
rcrb
out
push
xor
push
pop
dec
enter
push
addl
imul
xor
lock
mov
ljmp
inc
jbe
flds
inc
popf
rcr
add
inc
adc
cmp
dec
cmp
push
shll
ja
leave
fimull
or
dec
mov
ds
xchg
mov
fbstp
shll
push
mov
sub
fbld
out
pop
add
mov
test
loopne
cmc
cmp
or
push
imul
pop
sub
data16
mov
pop
or
push
movsb
xlat
pop
test
jmp
sbb
mov
outsl
jl
mov
pop
cmp
lds
jo
pop
mov
shll
push
bound
add
int
inc
push
popa
add
std
rcrl
jl
mov
push
lock
cmp
jl
sbb
ror
pusha
push
adc
aaa
icebp
lret
bnd
lods
cmpsb
mov
cmp
jecxz
or
hlt
sbb
repnz
cmp
pop
jne
decl
dec
loop
imull
lds
scas
push
add
test
mov
cmp
std
cmp
push
sbb
cmpsl
add
cmp
mov
popf
in
dec
movsl
mov
jo
loope
push
mov
rol
pop
push
arpl
sub
imul
add
into
icebp
dec
push
loopne
lds
push
adc
inc
inc
add
in
mov
inc
inc
test
bound
mov
xchg
mov
add
pushf
jb
xor
pushl
and
cli
push
sbb
add
outsl
insl
movsl
nop
and
enter
icebp
or
pop
push
xor
xchg
lods
inc
push
rorl
mov
out
icebp
out
xor
and
cmc
and
adc
out
aas
adc
mov
jb
leave
fdivrs
mov
and
inc
cmp
in
cmp
fwait
out
xchg
fists
adc
add
push
cmp
arpl
or
add
jl
cs
movsl
das
nop
mov
adc
in
ret
aad
xchg
mov
fists
pop
icebp
inc
xchg
mov
or
lahf
add
push
add
lods
repnz
ds
mov
pop
cmp
scas
sarb
lods
test
sbb
mov
and
inc
cld
jmp
or
ret
out
icebp
push
repz
icebp
push
mov
aam
mov
and
mov
fldcw
test
jo
mov
les
push
dec
xor
mov
out
das
ss
sub
sub
jle
jo
test
test
and
mov
movsb
mov
addl
stc
incl
xor
add
push
fadds
insb
fldl
pop
out
pushf
iret
sbb
inc
adc
inc
repnz
adcb
mov
or
mov
mov
outsb
xchg
xlat
popa
xchg
jp
stos
sbb
enter
jmp
jl
push
mov
pop
movsl
ret
jge
cld
cmp
pop
push
mov
aam
nop
lock
mov
lret
cwtl
cmp
pop
xor
inc
pop
in
stos
pop
arpl
pop
adc
inc
fsubp
cs
scas
cwtl
sti
inc
pop
sahf
or
shr
aaa
int3
add
xchg
add
pop
pop
jmp
add
push
imulb
cmpb
enter
xchg
clc
jecxz
icebp
push
pop
cmp
dec
lret
mov
insl
dec
popf
ds
pushf
mov
jns
loopne
test
pop
xor
mov
loopne
mov
and
pop
xchg
loopne
out
in
cmp
movsl
add
dec
cltd
cld
outsl
jp
lahf
pop
outsl
outsb
push
addb
jb
jecxz
jae
xor
in
rcrb
iret
cmp
mov
jb
inc
push
mov
dec
repz
inc
cld
and
stc
lock
lahf
inc
push
mov
pop
rcrl
mov
jnp
fldl
push
movl
push
inc
jnp
sub
out
xor
and
daa
mov
or
sbbl
rorb
aaa
lock
scas
lds
je
and
xchg
xchg
rolb
xchg
mov
xor
jg
popa
divb
adc
jno
orb
adc
repz
mov
xchg
jmp
or
adc
adc
pop
sbb
adc
cmpl
faddl
push
lock
shlb
mov
mov
jge
xor
scas
outsl
pushl
std
or
popa
fidivrl
vmulsd
xor
xor
inc
rorl
xor
pusha
adc
cmp
inc
popa
xor
xor
jle
push
js
popa
clc
adc
mov
sbb
sub
outsl
clc
jg
lods
cmp
xchg
pop
pop
dec
popf
cmp
dec
sbb
sub
jl
jmp
push
arpl
mov
aam
mov
push
xchg
add
adc
ds
cmp
cmp
push
loope
inc
popa
stos
pop
fwait
and
mov
xor
int3
fwait
mov
xor
lcall
sub
nop
jecxz
push
test
or
inc
das
adc
loope
jmp
scas
cmpsl
mov
mov
lods
or
repnz
xor
insb
mov
mov
and
jne
mov
fstpl
jo
xchg
imul
jg
outsb
das
nop
dec
enter
add
rol
push
mull
cvtdq2ps
sarb
or
push
cmp
sbb
aas
xchg
fnstcw
jg
jbe
incl
rolb
gs
add
in
cmp
ret
clc
scas
lods
repnz
loopne
pop
sbb
inc
jl
inc
dec
pop
dec
pop
or
sbb
jg
test
addr16
sti
sahf
iret
aad
add
adc
adc
ja
xchg
inc
add
add
xor
test
sbb
push
sub
rorb
jns
loopne
adc
cmpsb
pop
pushf
ljmp
xor
sub
fbstp
test
adc
ret
arpl
jmp
push
pop
sbb
jg
jns
push
xlat
mov
adc
sub
mov
pushw
shrl
out
xchg
loope
inc
jecxz
mov
dec
fbstp
gs
inc
lcall
pop
sub
callw
pop
ljmp
add
inc
jecxz
jl
sub
xchg
dec
shrl
test
add
cli
ljmp
imul
add
outsl
and
push
scas
scas
loop
aaa
lahf
or
test
pop
mov
ja
lods
pop
inc
lret
inc
in
or
add
pop
sub
inc
aam
out
cmp
push
imul
mov
cmc
or
test
mov
jmp
cmp
shll
adc
inc
mov
mov
popa
add
xor
and
mov
roll
cmp
lret
jno
lahf
icebp
inc
dec
fcomip
sbb
inc
push
or
mov
pop
sub
mov
enter
int3
imul
leave
mov
out
mov
mov
lds
inc
or
in
orb
cmc
push
fsubl
repz
xor
push
mov
mov
xor
and
or
pop
mov
lahf
lcall
test
push
push
lods
pop
dec
ret
cmp
mov
sbbl
push
jmp
out
xchg
loope
lds
lds
int3
mov
or
fnstsw
sub
xor
std
popf
sbb
pop
mov
repnz
mov
push
stos
cmpl
pop
pusha
inc
xchg
mov
mov
pop
dec
nop
sub
add
xchg
mov
and
test
cld
xchg
pop
xchg
and
push
mov
or
filds
pop
fcmovnbe
or
xorl
push
and
and
mov
and
shll
imul
ret
sbb
pop
movsl
fs
stc
gs
push
cld
or
in
xor
jmp
lret
cmp
pop
fnsave
and
and
sti
push
push
and
ljmp
loopne
in
xchg
call
sti
mov
sub
jl
or
xchg
ss
shlb
aaa
jle
xchg
mov
add
inc
cmp
add
dec
andl
std
mov
cmc
jle
out
stc
je
sahf
pusha
es
test
gs
add
arpl
lods
push
push
sub
addr16
test
mov
and
xor
push
push
sub
adc
push
jo
push
js,pn
scas
stos
mov
popa
sub
fs
dec
stc
push
cmp
inc
pop
cmpsb
mov
mov
cmp
mov
add
inc
jl
jg
cmpl
nop
vandnps
xor
sub
mov
shrb
insl
stos
xor
and
in
xadd
xchg
ljmp
cli
test
pop
mov
lret
je,pt
sbb
cmc
icebp
xchg
mov
ret
test
inc
add
mov
aad
test
lcall
or
insb
fiaddl
add
leave
add
sub
arpl
mov
sub
jmp
out
out
and
ss
xor
imul
aas
aad
icebp
push
sub
rolb
inc
add
inc
sbb
xor
mov
xchg
push
test
jb
loope
stos
inc
mov
mov
outsl
js
lea
rorb
jbe
jne
dec
adc
fldcw
cmc
adc
xchg
aam
mov
insl
and
jo
and
xor
mov
clc
mov
fidivrl
ret
pop
cmpl
cli
jmp
lods
pop
ret
ljmp
mov
data16
and
xor
dec
dec
rcrl
cmp
call
popa
loopne
outsl
pop
xchg
stc
or
xchg
mov
dec
out
call
mov
and
sbb
scas
ss
and
test
ja
shrl
cld
or
addr16
aam
es
fdivs
cmp
rolb
sub
or
and
in
jle
xor
mov
jmp
int
dec
pop
cmp
icebp
scas
push
adc
pop
out
push
sub
jle
hlt
sub
inc
fwait
dec
clc
enter
popa
hlt
clc
mov
ret
test
inc
mov
in
dec
dec
data16
and
or
in
push
dec
jg
cltd
imul
movsl
and
or
push
test
xchg
mov
das
xor
and
pop
ds
mov
adc
fsubr
xor
aas
add
and
pop
xor
add
dec
loope
clc
mov
inc
cmp
push
in
popa
sbb
add
mov
push
cwtl
inc
cmp
into
lahf
sar
js
push
mov
dec
xor
jbe
adc
push
sub
cwtl
xchg
lea
cld
in
in
pop
ret
sbb
dec
jmp
mov
mov
scas
jp
iret
outsl
scas
mov
adc
ror
add
lods
test
clc
loop
cmp
adc
mov
mov
mov
dec
push
notb
test
sub
out
aaa
rcrb
jg
lock
cmp
sbb
mov
fimuls
cli
in
sbbb
xchg
ret
int
loope
out
pop
mov
pop
xor
pop
mov
stos
cs
mov
arpl
add
cmpsb
imul
nop
sbb
fcoml
jp
push
adc
movsl
add
ljmp
or
xchg
aas
gs
jecxz
inc
push
mov
push
sbb
mov
or
jp
add
inc
mov
std
mulb
and
lret
adc
mov
or
dec
or
pop
pop
jl
cli
decl
mov
ret
and
jle,pt
imul
jb
mov
xchg
add
sbb
push
das
dec
js
stos
inc
adc
cld
inc
and
int
outsl
push
daa
out
cli
aad
stos
iret
push
push
insb
fsubrl
adc
add
gs
inc
cmp
mov
fildl
pop
dec
push
outsl
add
pusha
in
mov
push
adc
aaa
sub
pop
test
xor
bound
sub
js
repnz
xchg
orb
dec
cs
jb
rclb
jecxz
mov
loopne
push
ja
in
pop
push
bound
mov
pushf
popa
ret
in
shll
ss
dec
xchg
dec
pop
sbb
sub
cli
hlt
ljmp
les
cmp
cld
dec
mov
imul
mov
js
movsb
xchg
imul
jl
pop
cs
hlt
out
inc
adc
jge
adc
mov
pop
test
out
cmp
push
out
pusha
inc
es
in
push
mov
bnd
stos
test
movsb
fisttpl
out
pop
jl
rcl
in
xor
mov
adc
and
add
loop
mov
jecxz
sahf
push
test
mov
push
sub
insb
movq
sub
daa
add
int
pop
cmc
pop
cmp
fsubl
jecxz
lock
adc
leave
shll
add
nop
sub
inc
lea
ja
sbb
inc
les
add
mov
inc
mov
cmpsb
and
fs
aaa
loop
imulb
push
into
mov
adc
into
lds
and
mov
mov
xchg
fs
mov
arpl
mov
rcr
dec
mov
jo
jo
add
js
stos
aad
or
xlat
push
adc
dec
jp
mov
jg
mov
std
push
pop
stos
mov
mov
xchg
pop
in
xorl
push
out
fcoms
test
testl
xchg
cmp
int3
add
sbb
imul
arpl
sbb
add
mov
repnz
sub
insb
pop
icebp
ds
data16
xchg
dec
mov
adc
cmp
ss
adc
sbb
decl
fstpl
mov
cmp
notb
mov
mov
mov
aam
rorb
cmp
ret
loope
push
mov
jg
add
and
pop
loope
dec
dec
icebp
or
add
pop
cwtl
adc
je
fidivl
js
les
insl
nop
rorb
jo
add
and
std
test
jle
add
push
mov
mov
aas
cmc
mov
outsl
sub
xchg
cmpsb
lock
cmp
and
mov
arpl
insb
add
mov
and
clc
cmp
in
pop
mov
cli
xor
or
loopne
rcl
sbb
aaa
pop
jno
cmp
je
mov
repz
mov
aam
jae
stos
scas
sub
mov
xlat
test
xchg
cltd
add
ret
cmp
jne
and
js
stc
or
adc
sahf
pop
or
dec
push
nop
push
sbb
lock
ret
inc
pop
mov
cvtps2pi
push
push
imul
dec
mov
rcl
adc
ja
sub
out
je
je
imul
sarb
int3
or
jp
aad
dec
aaa
jle
dec
lock
add
clc
add
add
push
lahf
sarl
loopne
das
ds
fcomip
insl
ficompl
jle
stos
sbb
subb
jb
inc
aaa
pop
pop
outsl
jo
fs
push
add
mov
inc
inc
add
shlb
call
faddp
or
mov
mov
dec
push
jbe
dec
inc
jle
in
daa
mov
ds
mov
lds
test
fdivrp
push
loopne
add
rol
test
pop
push
mov
inc
in
adc
push
cli
and
adc
std
in
mov
push
cmp
pop
and
nop
sub
mov
cmc
mov
cld
push
jmp
mov
push
clc
arpl
or
dec
ficoms
fs
adc
cli
push
das
sbb
loop
mov
push
pop
sahf
dec
pop
or
add
inc
xchg
mov
loopne
call
shl
mov
sbb
jl
sub
in
pop
ss
inc
cmpsb
sarb
cs
addr16
cs
add
xchg
test
mov
xchg
mov
pop
inc
or
dec
lods
repnz
xchg
pusha
xchg
in
out
cmc
mov
sub
sbb
mov
scas
xchg
rcr
sbb
ja
dec
les
adc
xor
gs
and
inc
lods
mov
pop
decl
and
aam
mov
push
repnz
inc
push
call
das
aam
sbb
xchg
and
jmp
sub
xchg
adc
cmp
movsl
inc
jmp
adc
call
loope
mov
push
ficomps
mov
mov
inc
int3
mov
mov
adc
pop
shrb
sbb
pop
loopne
loope
pusha
adcb
gs
jmp
popf
mov
xchg
xchg
lods
inc
mov
mov
fisubrl
add
sar
rclb
inc
adc
add
mov
sbb
xor
push
mov
push
lock
add
dec
inc
fiaddl
aaa
and
add
mov
add
mov
adcb
out
mov
lds
dec
jmp
dec
cmpsb
ret
mov
pop
js
mov
loop
push
adc
xchg
and
inc
push
jo
loopne
sbb
loope
mov
les
les
lock
test
test
add
stos
dec
or
out
jle
add
fdivl
cmp
add
clc
lock
fistl
push
xor
data16
or
jecxz
js
sbb
outsl
add
movsl
scas
xchg
pop
dec
and
ljmp
mov
jmp
aas
pop
in
xchg
xlat
mov
xchg
testb
in
ljmp
fadd
add
add
add
mov
sub
push
dec
lret
adc
pop
mov
test
idivl
cs
inc
jp
xor
insb
enter
rol
mov
push
mov
mov
add
or
jle
hlt
sahf
lret
fcmovnb
adc
bound
jp
ds
fildl
cld
sub
lock
scas
adc
push
in
test
and
push
push
add
sbb
nop
arpl
scas
fcom
outsl
outsl
movsb
rol
xchg
fsubrp
inc
push
add
scas
mov
xchg
push
out
push
scas
inc
mov
in
pusha
pop
ja
fcomps
rcrb
testl
stc
fs
fistpl
leave
mov
cmp
jmp
into
lds
rcrb
push
jae
add
lods
inc
lcall
lock
mov
decb
mov
mov
sub
popa
fdivl
jbe
scas
cli
and
adc
mov
icebp
push
lea
arpl
fildl
push
xchg
icebp
pusha
out
push
out
cli
push
fdivrl
xchg
add
les
outsl
ret
mov
jbe
push
mov
adc
inc
add
add
push
add
jle
add
sub
adc
and
fdivrl
repz
jp
outsl
or
test
fwait
lret
mov
mov
jo
inc
stc
xchg
pop
add
ret
xchg
xor
push
inc
adc
push
mov
pop
leave
sbbb
or
int3
inc
sbb
mov
rclb
xor
mov
cmp
lret
xlat
daa
incl
dec
sbb
out
dec
mov
and
mov
cmp
fidivl
mov
push
adc
mov
setnp
cmc
insl
adc
mov
loopne
mov
or
ret
sub
ss
add
cmpsb
rclb
pop
es
sub
inc
add
int3
lds
mov
pop
add
xchg
std
inc
bound
pop
sbb
inc
xor
decb
inc
lock
adc
lret
in
xchg
into
sub
daa
or
or
es
sbb
mov
insb
adc
popa
rolb
or
in
sub
nop
je
xchg
in
aaa
lods
dec
mov
decw
mov
jnp
test
fistpl
xchg
std
mov
movsb
xchg
pusha
dec
add
lods
inc
clc
sbb
cmp
in
bound
fidivrs
movsl
rcl
into
sub
stc
pop
add
das
fcomp
push
add
arpl
out
clc
push
mov
fcmovnb
jg
adc
out
rcrb
and
xor
push
daa
adc
fimuls
add
jle
inc
aad
mov
aas
test
jb
cli
clc
mov
push
push
push
jo
jmp
scas
dec
lock
rol
cmpsl
mov
mov
xchg
outsl
stos
test
sub
jl
adc
out
mov
mov
in
inc
xchg
jbe
adcb
test
adc
hlt
mov
out
lea
inc
loope
push
loope
and
sbb
sbb
add
cmp
xchg
movsb
and
popa
jg
adc
dec
repnz
outsl
cli
mov
test
sub
xor
out
add
and
or
lcall
inc
lcall
cld
out
sub
mov
or
scas
cld
invd
ja
cmp
cmp
shl
push
push
push
inc
add
nop
push
push
adcl
dec
loope
pusha
divl
and
sbb
arpl
ljmp
test
cmp
insl
xchg
mov
mov
xchg
or
add
orl
mov
or
inc
orb
dec
adc
loopne
push
add
hlt
cs
loopne
xor
das
adc
or
dec
rorl
mov
sbb
ljmp
or
inc
add
je
aam
mov
sbb
outsl
sbb
add
mov
sub
jg
decb
ss
add
rcll
movl
fiadds
adc
mov
add
leave
cmp
nop
js
incb
test
jmp
aas
or
pop
dec
xor
pop
adc
hlt
mov
inc
aaa
mov
data16
and
jge
jmp
mov
out
icebp
imull
inc
mov
xor
in
in
cmp
aam
cmp
add
mov
cld
aas
in
xchg
stc
cmp
add
nop
and
xor
or
cld
mov
add
inc
push
and
jg
or
add
sar
cli
out
test
add
test
je
inc
push
shlb
and
ss
pop
shlb
repz
add
fildl
out
aaa
push
mov
dec
mov
sbbb
int
fwait
or
lcall
rorl
push
adc
rclb
leave
insl
adc
inc
jns
push
inc
js
mov
inc
lock
and
push
push
jo
inc
xor
add
xchg
shll
pop
aad
icebp
push
js
dec
add
les
cmp
aam
push
cld
and
xor
jbe
mov
testb
inc
frstor
add
add
pop
inc
pop
fidivrs
leave
inc
loopne
mov
scas
movsb
aaa
adc
lret
inc
int3
lcall
sbbb
popf
flds
iret
enter
mov
xor
dec
call
adc
stc
and
inc
cli
fistpl
xchg
cs
fbld
add
inc
pop
add
movb
push
decl
js
jne
sub
dec
inc
push
jno
decl
mov
outsl
jp
or
sahf
repnz
fwait
jle
pop
es
insl
lcall
mov
jle
insl
loope
add
inc
or
push
mov
sbb
cmp
pop
jo
push
data16
mov
push
pusha
sbb
ret
jp
or
stos
or
fs
adc
adc
xchg
sub
ret
ss
mov
or
mov
inc
shl
dec
cmp
adc
and
call
cld
push
aaa
inc
popa
lret
or
scas
mov
xchg
push
loopne
idivb
cmp
sub
mov
test
test
mov
xchg
xchg
data16
cmc
add
cld
in
outsl
das
js
jo
push
push
adc
stos
fstpl
or
push
mov
adc
xlat
jg
ds
xor
aaa
mov
push
aas
aam
jne
add
lods
xlat
clc
bound
push
mov
fnsave
and
stos
push
add
imul
and
stos
js
sub
ss
divb
mov
push
pusha
cmp
sbb
xor
icebp
sub
sub
clc
cs
outsb
or
call
call
hlt
sahf
mov
lods
sub
adc
push
sub
or
out
add
fsubs
mov
inc
bound
mov
ja
ljmp
lret
fmull
inc
sub
ret
inc
mov
and
sbb
imul
mov
ss
jmp
mov
mov
subps
sub
mov
sbb
pop
jmp
mov
adc
ret
cmp
pushw
jb
sub
jb
in
xor
mov
mov
mov
lret
pop
cmp
xor
pop
mov
mov
es
hlt
repz
sbb
inc
mov
test
loop
jmp
mov
jo
xchg
gs
mov
es
lods
push
add
or
fnstsw
nop
sbb
pop
mov
adc
mov
adc
inc
fstps
orb
jbe
and
stos
lock
pop
mov
push
insb
push
jno
push
loop
fs
into
scas
push
sub
ret
lods
inc
adc
lods
lock
test
dec
sbb
jno
punpckldq
lock
sbb
push
push
icebp
jbe
pop
mov
add
sub
add
lret
adc
and
mov
sti
adc
jb
add
pop
sbb
icebp
sbb
cld
mov
cmp
cmpsl
pop
out
inc
outsl
jb
or
lcall
test
pop
je
out
xor
icebp
cwtl
pop
sub
adc
call
outsl
mov
mull
outsl
and
jbe
cltd
add
add
cmp
sub
mov
pop
out
cmp
and
push
pop
fisttps
dec
mov
ret
fs
popf
daa
push
jg
shrl
sbb
ss
loop
sbb
jg
ret
sbb
mov
movsl
sub
sub
add
ucomiss
add
mov
push
mov
ret
adc
mov
orl
pop
cld
stos
push
mov
inc
andl
sbbb
mov
adc
repnz
outsb
or
add
jno
aam
bound
jg
cli
pop
dec
jl
inc
adc
push
xchg
adc
add
xchg
mov
inc
ret
test
int
nop
cmpsb
xor
xlat
lock
nop
add
cwtl
push
fadds
xchg
or
fimuls
test
ret
leave
pop
aad
pop
or
mov
mov
rol
mov
rorb
fcomps
or
insl
lock
inc
ds
cmp
iret
sbb
imul
mov
addl
les
adcl
or
negl
mov
je
clc
cs
cpuid
mov
scas
or
adc
rcrb
jg
shr
pop
sub
add
lret
mov
adc
inc
dec
or
bound
aas
add
loopne
cli
jbe
push
aad
mov
lcall
cmpsb
mov
fstpt
lods
in
icebp
cmp
xor
movsb
adcl
jmp
out
add
loope
stos
pusha
or
cltd
insb
sbb
and
mov
or
lock
jecxz
fsubl
and
fisttps
cld
push
fmuls
jl
decb
fildl
shll
mov
xchg
push
xchg
cmc
inc
or
and
fistps
in
orb
add
sbb
in
sbb
xor
pop
adcb
sahf
lret
xchg
lret
add
push
jbe
aam
ret
xchg
push
rcrb
negb
cmp
cmp
loope
push
or
or
jge
sarl
clc
cmp
xor
or
adc
gs
rcrl
int3
pushf
push
ss
push
and
shr
adc
ss
testb
mov
rcl
ret
cli
xor
orb
pop
xor
ret
outsb
cwtl
popa
jo
pop
je
pop
or
dec
mov
jecxz
mov
and
pop
or
mov
mov
jle
cs
pop
lret
pop
adc
push
arpl
and
jge
pop
push
mov
js
std
inc
mov
orl
pop
or
adcb
or
and
sub
xor
xor
insb
jp
inc
cmp
je
pop
popa
stos
call
frstor
xchg
decb
pop
in
push
or
xor
js
mov
xor
xchg
fwait
dec
xchg
or
cmp
inc
xchg
mov
cmp
rorb
pusha
gs
cmpsl
pushl
jp
mov
std
pop
xchg
dec
and
mov
enter
adc
or
add
pop
jne
repnz
or
cmp
imul
dec
pop
lret
xor
inc
mov
dec
inc
lds
insl
jp
lret
shlb
mov
out
xchg
sub
mov
jmp
add
jbe
xor
jl
mov
lret
dec
push
pop
add
stos
cmc
cmp
adc
lock
push
push
lds
fstps
and
mov
nop
and
pusha
add
pop
sahf
insb
lcall
lods
sub
adc
mov
outsb
cmovne
stos
jp
out
adc
jp
or
xchg
push
and
pop
add
dec
scas
mov
pusha
loopne
adc
mov
xor
ja
jg
aaa
fidivs
shrb
cmpsb
ret
js
lock
jg
mov
insl
out
jb
iret
adc
popf
pop
xchg
out
sbb
jl
mov
jp
lret
and
sbb
addl
stc
or
mov
add
repz
stos
js
sub
push
and
fs
ret
repz
jl
nop
popa
mov
orb
dec
in
cmp
mov
xchg
je
xor
sub
push
mov
arpl
clc
xchg
inc
cmp
xchg
jecxz
xor
xchg
nop
cmp
mov
js
push
sbb
arpl
sub
or
in
sbb
add
push
ret
in
mov
adc
insl
test
sub
dec
mov
mov
fcoml
pop
cmpl
adc
test
mov
cmpsb
fcmove
pop
add
dec
pop
icebp
push
mov
or
addr16
or
negb
sbb
dec
sbb
rcrl
sub
sub
hlt
sub
and
fcmovu
cmp
lcall
rclb
pusha
or
pop
mov
ljmp
popf
xchg
cmpsl
out
jo
dec
dec
sub
jbe
xor
dec
push
cmp
icebp
bound
lea
stc
add
jbe
jmp
jg
push
inc
mov
add
fildl
fdivrl
mov
mov
dec
cmp
pop
inc
cwtl
mov
loopne
add
into
xchg
mov
sbb
sub
in
lods
adc
or
cmc
mov
pushw
test
jo
cmp
lock
hlt
fstpl
push
andb
pop
lahf
xor
pop
inc
ficomps
aas
push
imul
xchg
hlt
adc
inc
loopne
les
jb
mov
insb
fstl
mov
xor
cli
xchg
lcall
je
pushf
loope
test
in
xor
fnstcw
movb
stos
push
lea
into
push
add
jecxz
push
in
mov
test
and
fldl
imul
ror
fcos
jg
mov
orl
add
add
mov
and
mov
inc
or
out
or
dec
sub
lcall
sahf
xor
pop
and
fwait
inc
push
icebp
dec
mov
and
movsb
and
adc
adc
pop
js
ljmp
into
enter
stos
int
cmp
minps
cmpsl
loopne
call
ret
xchg
popa
insb
outsl
cwtl
mov
mov
push
sbb
rcrb
and
cmp
ds
pusha
fcmovnb
shlb
pop
movb
jae
add
sub
xchg
xchg
or
icebp
dec
aam
mov
or
cmp
add
call
fiadds
adc
in
pushl
test
loopne
xor
out
dec
loope
aad
and
add
rorl
lods
sub
add
leave
ja
cmp
jno
jge
sar
jg
inc
lcall
jp
xchg
mov
add
xor
inc
xchg
dec
dec
mov
sbb
jg
fs
nop
sar
adc
xchg
jge
push
loop
cmpb
fidivl
jg
aad
sbb
sub
sub
das
or
cmp
enter
fldt
loop
data16
cwtl
test
cmp
call
inc
ror
ret
add
push
adc
xchg
push
add
mov
xor
mov
pusha
and
push
push
mov
lock
rorb
pop
mov
sub
call
mov
lcall
or
push
adc
push
test
jecxz
xor
movsl
sbbl
mov
mov
into
mov
popa
and
push
movsb
mov
xor
das
mov
inc
dec
sub
push
ror
xor
popa
mov
in
lock
jns
mov
and
leave
filds
dec
pop
fidivrl
jge
dec
cli
sub
lds
std
sbb
cmp
repnz
push
outsl
add
in
das
and
cltd
aam
sbbb
push
in
push
lock
int3
push
push
add
daa
loope
push
pop
add
and
pop
push
jb
push
sub
imul
aam
mov
js
cmp
cs
hlt
mov
mov
nop
stos
jmp
add
idiv
dec
daa
mov
out
mov
xchg
cmp
lock
jl
movsb
loopne
jmp
fsubl
dec
add
arpl
mov
sbb
mov
push
in
add
nopl
sbb
hlt
sets
cmp
jo
lea
cs
das
rol
mov
sub
mov
xchg
aam
pop
rcrl
jmp
jo
outsb
xlat
repnz
push
sbb
push
jl
jo
loopne
paddusw
mov
push
insl
movsb
scas
push
loop
or
int3
inc
jle
in
mov
lds
pop
lods
clc
mov
pop
and
nop
xchg
xor
xor
pop
outsb
jecxz
push
outsb
outsb
and
add
data16
mov
lods
cli
or
dec
or
add
push
adc
mov
xchg
dec
test
jnp
aaa
dec
and
lds
aas
dec
jg
inc
test
fs
std
ds
and
or
push
pop
je
dec
xor
push
xchg
mov
loopne
pushf
xchg
idivb
pop
pop
aad
outsl
arpl
icebp
mov
std
pop
sbb
mov
cmpl
nop
int3
add
dec
ret
push
lret
sub
jo
push
push
add
xor
loop
ret
ret
imul
mov
mov
rcrb
pop
xlat
test
mov
iret
dec
js
cld
imul
cmc
jecxz
ljmp
xor
cmpsb
xchg
mov
fcomip
notb
jmp
adc
pop
lret
bound
imul
inc
inc
add
push
cli
icebp
ja
mov
fsubs
and
add
mov
inc
mov
dec
jle
mov
adc
pushl
cwtl
push
ljmp
add
out
mov
sub
loop
out
jbe
stos
inc
out
pop
sub
inc
mov
add
mov
vmwrite
mov
mov
test
out
jp
mov
push
ja
adc
adc
mov
repz
mov
mov
mov
shll
aad
cli
inc
jl
imul
es
push
or
mov
ror
adc
and
mov
jmp
xchg
mov
pop
popa
shl
pop
xor
dec
push
subb
dec
inc
aaa
cld
fsubrl
add
mov
je
enter
pop
and
adc
lods
mov
fwait
ss
into
mov
in
add
scas
test
mov
or
dec
add
add
outsl
cmp
enter
push
hlt
push
sub
mov
sbb
fistps
test
lea
xchg
pop
fists
sbb
dec
shrl
outsb
jne
push
inc
test
jge
js
fsubrl
outsb
dec
mov
js
out
add
push
insl
fs
imul
mov
fs
sbb
pop
add
pop
scas
sar
sbb
sub
add
out
add
inc
cmpsl
call
lahf
xlat
testl
mov
insb
sbbl
sbb
mov
test
scas
xorb
out
nop
adc
xor
jle
rolb
mov
cltd
scas
sarl
adc
int
jl
and
sub
add
sti
orb
fadds
fwait
xor
mov
mov
lret
jle
or
add
mov
shll
pop
ja
xorb
mov
sbb
scas
add
and
sub
aam
ljmp
aad
data16
out
and
clc
push
adc
sub
js
adc
pop
in
mov
loopne
dec
or
lds
push
cs
xlat
aam
add
sti
stos
jb
and
repnz
jne
push
fmuls
loopne
cmpsl
bound
movsl
lahf
and
adc
in
xchg
clc
sbb
mov
lcall
add
cmova
mov
not
sub
sbb
test
movb
xchg
decl
mov
jecxz
loop
hlt
fnstenv
iret
add
pop
ret
cmp
and
stos
call
jne
fistpl
scas
aam
mov
in
fmull
int3
mov
sub
icebp
popa
cltd
cmp
outsb
pop
sbb
mov
aad
mov
rcrb
das
adc
incl
cmp
and
hlt
std
decl
sahf
movsl
popaw
and
insl
adc
mov
ds
ret
loopne
test
mov
cltd
cmp
js
inc
cmpsl
out
icebp
jge
dec
jecxz
ds
sub
pop
jmp
sub
aas
sbb
mov
pop
sbbb
push
in
xor
fs
mov
push
push
call
pop
cmpsl
add
adc
add
andl
adc
inc
mov
and
add
mov
out
jmp
pop
and
inc
daa
int
adc
cmp
add
mov
sbb
pop
lret
pop
inc
xchg
xor
sub
add
and
pop
push
cmp
pop
inc
pop
jnp
ljmp
xor
scas
test
ljmp
mov
ds
in
push
lods
repz
mov
popa
in
jg
icebp
pop
xchg
xlat
xor
test
fiaddl
jl
repnz
push
inc
out
aad
inc
adc
jbe
icebp
jp
sti
jmp
cmp
into
inc
shrl
jnp
mov
push
push
push
call
fucomip
cmp
loope
dec
sahf
sti
xor
jle
mov
ja
or
fcomi
repz
cmc
jbe
in
test
in
mov
dec
xchg
clc
push
bound
xor
or
into
leave
and
scas
js
add
push
negl
jbe
mov
lcall
inc
shr
jb
dec
pop
and
push
adc
addb
sarb
pop
shr
xor
lea
nop
xor
icebp
shll
insb
insb
xor
lea
ss
inc
sub
pop
dec
bound
pop
fdiv
pop
jne
outsb
inc
cmp
les
inc
ret
push
jp
cld
mov
sbb
xchg
xor
negl
clc
pop
push
mov
gs
adc
aaa
or
pushf
xor
cmp
mov
mov
pop
jg
jl
push
loopne
retw
out
mov
imul
lret
sbb
push
adc
mov
sbb
imul
xor
xchg
xchg
sbb
add
push
int
mov
lds
stc
fwait
sbb
jb
mov
add
repnz
add
dec
imul
mov
sbb
push
insl
inc
mov
or
add
outsb
lds
addb
lahf
lcall
push
lcall
mov
in
push
fcmove
bnd
pop
or
inc
mov
sbbb
fwait
mov
adc
add
xchg
add
pop
pop
mov
or
dec
xchg
add
das
aaa
gs
out
jl
inc
push
arpl
or
cwtl
push
and
js
frstor
clc
pop
inc
xor
bound
or
mov
mov
out
push
sub
mov
add
dec
scas
in
outsl
jo
push
adc
dec
lret
sub
mov
adc
mov
ljmp
stos
mov
or
jecxz
xchg
lods
decb
push
pushf
mov
sahf
repz
cmp
and
lods
push
push
add
fistps
inc
addr16
loop
mov
mov
cli
or
aaa
pop
lret
mov
or
movb
insb
sarb
mov
add
or
mov
add
jge
xchg
dec
push
xorb
push
lods
or
sub
jecxz
shl
push
jg
aas
hlt
jecxz
cmp
xchg
adcb
mov
push
shlb
outsl
arpl
or
ret
inc
sub
mov
push
cltd
clc
jmp
cmpsb
cmpsb
aas
test
jmp
lcall
out
ret
cmp
loope
insl
out
push
and
inc
xor
sub
mov
bound
push
fsub
mov
xchg
stos
or
mov
add
adc
nop
es
xchg
mov
popa
hlt
rcr
push
pusha
mov
and
roll
ja
clc
push
or
dec
pop
add
inc
lock
scas
push
mov
imul
dec
lcall
jae
dec
sub
push
adc
jp
sbb
xor
test
icebp
ret
test
cmp
or
mov
aad
cmpsb
test
in
sub
jge
ret
adc
sbb
adc
mov
adc
cmp
jg
movsb
js
pop
mov
inc
add
mov
mov
icebp
sub
rcrb
pop
inc
ds
inc
jno
cltd
cmpsl
lods
fmull
cmpb
addl
decb
ret
sub
loopne
push
or
loop
pop
adcb
and
xor
test
sbb
inc
mov
adc
adc
push
call
adc
pusha
push
sub
fnsave
ret
loope
fimull
xor
test
imul
mov
sti
and
push
iret
cs
rcll
test
sbb
jae
std
jg
xor
stos
int3
mov
mov
fmuls
jl
vmread
mov
mov
and
push
lds
in
cmp
push
adc
imul
add
and
jmp
push
jo
mov
add
gs
cmpsb
xor
sbb
test
test
bound
movsb
jg
lea
mov
jmp
test
test
mov
mov
rcrb
dec
sub
jg
sbb
inc
add
pusha
es
shr
lret
in
mov
push
mov
adc
mov
mov
inc
adc
fprem
add
test
imul
adc
sub
inc
cli
push
fsubrl
ja
ret
pop
sbb
fs
and
cwtl
dec
jge
jb
lock
fadd
lock
nop
mov
test
add
jge
cmp
jp
and
fimuls
push
pop
cli
push
arpl
inc
jp
mov
shll
inc
enter
or
push
or
jmp
add
ret
and
out
add
jnp
stos
inc
out
mov
and
jmp
add
loope
adcl
lret
insl
push
xlat
mov
ret
decl
push
sbb
add
repz
lods
andl
rorb
and
fisubrl
pusha
xchg
and
iret
lock
mov
push
cwtl
mov
cwtl
adc
adc
rcrb
sub
pop
lock
fnstsw
mov
or
mov
dec
jg
mov
and
xor
mov
loop
dec
add
enter
pop
or
aam
dec
xchg
and
sub
andb
add
or
ja
or
push
push
rorb
fcmovbe
int
add
cmp
test
lret
aad
sub
std
mov
and
add
adc
out
rclb
cwtl
and
and
test
rcr
fcmovnbe
addr16
sub
sbbb
lret
mov
loop
jo
mov
test
mov
mov
jge
out
js
sbb
das
mov
sbb
push
shr
imul
inc
pop
lea
xchg
ret
dec
xor
pushf
nop
lods
shrl
adc
in
jo
pusha
fs
outsl
adc
das
pop
std
add
inc
sbb
jns
lcall
xor
call
icebp
mov
rclb
enter
cmp
rcll
test
popf
or
add
das
sahf
cmp
mov
ud0
nop
outsl
enter
shlb
movsb
insb
cmp
lcall
out
sub
lods
scas
insb
xchg
add
std
lret
xchg
loop
jle
sbb
jecxz
add
sub
in
clc
outsl
incl
imul
fsubrs
xchg
movsb
add
sub
jmp
push
repz
inc
adc
loopne
push
sub
sub
or
jbe
xchg
cmp
cmpsb
rcl
insl
addb
lea
inc
sbb
cmp
lret
icebp
lds
cli
mov
rcrb
incl
add
push
stos
cmp
mov
jp
sahf
call
hlt
inc
jno
ret
testl
rorl
inc
cld
push
repnz
push
pop
add
or
dec
push
mov
int3
in
ss
mov
xor
rolb
sub
mov
ss
xchg
mov
fadds
mov
xchg
std
fs
mov
mov
cmpsb
dec
and
icebp
in
call
jmp
movsb
xchg
or
shlb
popa
push
mov
mov
das
fidivs
test
decl
lret
inc
lock
imul
cmp
fistpll
pop
ja
add
ljmp
sbb
bnd
incl
push
xor
mov
cltd
inc
mov
fwait
icebp
imul
jle
je
fwait
push
push
dec
or
inc
inc
push
jp
divb
push
pop
and
dec
dec
mov
or
push
xor
ret
and
jg
shlb
push
and
fiaddl
xchg
jnp
adcb
and
loop
xor
or
ret
mov
stos
mov
xor
scas
icebp
ret
fidivrl
dec
push
or
or
sbb
idivb
push
aam
rolb
jbe
mov
roll
insb
push
sbb
fwait
jl
inc
or
cmpsb
scas
scas
out
pop
pop
js
movsl
mov
popa
jnp
mov
ja
cmpsl
mov
or
les
add
incb
pushl
into
lcall
iret
sbb
ljmp
push
sbb
lcall
fiadds
or
fwait
call
aas
push
mov
pop
mull
aam
insb
mov
dec
loop
xorb
lahf
xor
xchg
lock
add
fcmovb
sar
jge
adc
mov
cmp
add
push
cmp
mov
sbb
mov
cmp
xor
pop
push
or
or
clc
and
xor
xchg
add
shrl
mov
xor
fcomps
xor
xlat
lods
cmp
sbb
or
xchg
lcall
and
inc
dec
lods
jmp
pusha
add
fsts
lea
popa
arpl
push
movsb
sub
movsb
lock
add
mov
loope
push
pushf
cmp
mov
pop
mov
dec
nop
fldl2e
hlt
add
inc
mov
stc
cmp
cmp
and
adc
mov
push
xchg
xor
push
ret
test
and
fs
or
mov
das
mov
push
xor
or
cld
xchg
xor
cmp
loope
jo
clc
jnp
push
out
bound
inc
mov
jle
mov
icebp
push
in
jne
mov
xchg
test
insl
notb
jp
std
outsb
icebp
filds
sbbb
sbbb
pusha
xchg
call
icebp
in
test
lods
aaa
sarb
clc
adcb
sbb
push
add
cltd
xor
sbb
mov
pop
bound
lods
add
xchg
mov
pushf
xor
bound
movsl
movsl
ljmp
cmp
std
int3
and
cmp
push
xor
mov
inc
add
mov
int
pop
lret
pop
add
fildl
mov
ljmp
pop
mov
popf
push
mov
mov
int3
push
cmpsl
inc
test
fcoms
aas
add
mov
dec
fwait
rcll
in
add
xor
mov
xor
shrb
js
ret
cmp
ja
adc
mov
loop
out
add
scas
xchg
push
lahf
mov
xor
movsl
sbb
adc
dec
pop
pusha
push
cmpl
adcb
mov
push
xor
in
push
xchg
mov
mov
cmp
pusha
in
ljmp
mov
lock
dec
mov
adc
xor
insb
sub
adc
adc
push
nop
fnstenv
sbb
xchg
aam
ss
and
insb
add
pop
push
dec
jno
movl
nop
call
dec
pusha
xchg
jo
call
orl
xchg
push
sbb
xchg
dec
sbb
cli
lcall
or
push
ljmp
movl
mov
mov
adc
inc
nop
pop
andb
push
dec
sbb
adc
pop
add
mov
mov
js
or
lea
mov
adc
sub
aas
fisubrs
sti
adc
or
pop
push
aam
ret
mov
xor
pop
cmp
cmc
add
aas
fdivrp
sbb
rolb
in
jns
add
sub
dec
mov
add
dec
mov
cmp
dec
mov
or
sar
push
fnsave
mov
out
leave
mov
lret
rclb
xchg
fisttps
mov
ret
les
jno
jecxz
aad
cmp
mov
inc
psubsw
cmp
push
and
jmp
cmp
or
mov
jmp
jo
dec
or
jmp
xchg
jmp
stos
push
cmp
push
shr
mov
or
jp
aaa
dec
adc
out
addr16
fstpl
cs
sbb
cmp
stos
rorb
cmp
lock
fsubp
filds
sbb
adc
iret
add
fisttps
outsb
cmp
aaa
std
fstpt
cli
fcmovnb
out
popf
or
dec
sub
xor
pusha
cmp
aas
xchg
jmp
mov
je
js
sub
loope
bound
imul
std
and
mov
dec
adc
cli
adc
cmp
rorb
jge
rcr
ljmp
stc
rcll
ss
push
or
and
int3
outsl
mov
mov
notl
inc
test
sti
push
shrl
jmp
rcll
sub
dec
jl
hlt
or
arpl
cmpsl
mov
mov
add
cmp
and
sub
fs
and
fisubrl
ret
sbb
or
adc
mov
add
fcmovnb
cmp
pop
pushf
xor
ds
xchg
pop
inc
adc
push
movsl
std
fildl
and
push
add
pop
xor
cmp
lods
mov
cmp
rcll
ret
icebp
or
dec
mov
mov
jae
adc
lret
sbb
dec
outsl
lret
cmp
ljmp
clc
pop
add
dec
adc
lods
aaa
daa
incb
pop
mov
cmp
std
xor
cmp
dec
add
inc
cs
add
pop
ss
shll
pop
mov
cmp
sub
addl
mov
mov
lcall
idivl
lahf
dec
cmp
and
jb
cli
pushf
sbb
cmp
ret
pop
adc
cs
rcrb
add
fadds
loopne
cmc
and
in
xchg
icebp
gs
test
fstps
pop
or
mov
push
lcall
iret
movsb
rolb
outsb
popa
push
or
lds
pushf
movb
inc
out
rcrl
push
sahf
jp
or
imul
jbe
or
jbe
add
adc
ds
mov
les
add
js
lock
mov
test
enter
adc
mov
mov
mov
sbb
cmp
or
cs
mov
mov
cmpsl
es
and
sbb
pop
jp
xor
mov
std
mov
add
dec
cmc
stos
push
push
pushf
mov
aam
pusha
cmc
xorl
inc
aad
shlb
rcrb
add
fmuls
inc
jge
mov
repz
hlt
dec
pop
jmp
dec
inc
jle
cmp
mov
fcoms
mov
nop
and
cld
jg
push
mov
jecxz
jmp
bound
aam
cld
lods
das
addl
ljmp
cvtps2pi
ja
negb
incl
js
push
sub
in
ss
pop
cmp
add
movsb
fistps
and
and
lock
xor
scas
ficompl
xchg
push
scas
jl
cmp
mov
push
cmp
ret
notb
insb
lods
aas
xor
lcall
pop
xor
ljmp
sub
or
or
jnp
pop
scas
daa
or
mov
nop
xchg
fs
je
ljmp
push
ja
clc
int
add
repnz
or
xor
sub
xorl
mov
or
sbb
aaa
jo
cltd
loop
in
adc
mov
fcos
dec
and
push
std
and
dec
push
test
mov
pop
cmc
mov
mov
scas
inc
test
cmpsb
outsb
or
clc
gs
cmpsl
std
sbb
lcall
add
push
dec
insl
lcall
loopne
mov
mov
ret
mov
jl
inc
fcoml
in
mov
pusha
cmp
sbb
test
scas
test
decl
fadds
sub
cmc
mov
push
inc
push
sub
faddl
rcrb
loope
mov
enter
or
and
jmp
push
enter
xor
int
lock
mov
cltd
xorl
adc
shlb
scas
ret
lock
stc
fwait
cltd
jae
stos
inc
xchg
mov
test
mov
scas
inc
cmpsl
fs
and
bound
into
push
lret
rorl
sahf
loop
mov
sub
aad
sub
insb
mov
leave
imul
xor
insl
push
xor
xlat
mov
jg
loopne
jbe
sbb
lock
int
hlt
pop
shlb
sbb
pop
or
call
out
mov
lret
loopne
lahf
shll
inc
mov
pop
jb
or
or
sbb
sub
push
cli
shr
in
mov
daa
scas
mov
xchg
shll
and
and
mov
rclb
insb
ret
adc
dec
adc
cmp
lock
inc
lret
adc
pop
push
rcrb
xchg
pushf
loopne
mov
clc
mov
add
mov
mov
outsb
mov
and
add
hlt
push
adc
rclb
sbb
out
pushf
add
dec
sahf
insl
xchg
pop
add
jo
sbb
popl
adc
call
push
mov
inc
pushw
dec
cmp
shl
lahf
jle
je
xor
add
movsb
sbb
xchg
dec
aad
xor
mov
imul
jp
enter
adc
adc
pop
mov
adc
nop
cmpsb
push
clc
inc
sub
mov
pop
mov
dec
mov
mov
lods
test
stos
inc
lea
jbe
incl
int
pusha
mov
pop
loope
test
shlb
sti
cmp
inc
xchg
push
icebp
loope
adc
jl
fstpl
and
adc
or
mov
mov
fistpll
xor
pop
sub
pop
pop
fwait
mov
mov
or
ja
cs
add
rcrl
sahf
aam
dec
pop
add
inc
ljmp
sub
in
in
cs
cmp
sub
dec
jmp
ljmp
xor
adc
ret
shr
push
add
xor
idiv
mov
pop
outsl
inc
gs
sahf
sbb
outsl
and
outsb
inc
adc
inc
push
test
les
mov
cs
xchg
push
imul
mov
adc
sbb
xchg
outsb
stos
ja
xchg
jg
aam
cwtl
in
jle
fcomps
movsb
cmpl
rolb
mov
nop
push
testl
cld
test
lods
insl
cmp
cwtl
dec
ret
dec
pop
incl
push
dec
pop
into
mov
or
mov
mov
xor
clc
push
int
mov
cmp
or
lods
mov
stos
scas
add
push
pop
mov
add
shll
or
lock
inc
or
dec
and
call
sub
adc
xor
cmpsb
loopne
pop
std
or
and
add
in
out
jmp
cmpsb
cld
outsl
or
in
mov
filds
lret
mov
jbe
js
inc
xchg
out
js
neg
push
insb
push
mov
sti
mov
cld
out
sar
mov
fsubs
add
jb
icebp
adc
inc
sbb
mov
outsb
inc
add
lea
sbb
jbe
stos
scas
or
cmp
or
push
pop
lcall
aaa
dec
ret
mov
pop
sbb
inc
xor
dec
add
xor
lds
mov
add
pop
incl
mov
and
andb
lods
stos
sub
test
hlt
fcomps
add
sub
fcomps
outsl
nop
sub
out
out
jl
dec
jg
cwtl
cmp
test
rol
outsb
lea
jg
and
aam
test
stos
lock
rolb
out
sbb
popa
aad
sub
pop
xchg
movsb
nop
loope
adc
movb
lahf
lret
cmc
insl
int
adc
and
scas
ljmp
sbb
aas
jo
std
cmpsb
or
mov
jg
pop
icebp
push
adc
push
std
jmp
sar
cmc
fbld
ss
mov
adc
movl
fnsetpm(287
rorb
cs
decl
lahf
add
rol
fwait
cmp
lret
sub
in
aad
mov
int
stos
out
cli
pop
shrb
add
fsub
leave
dec
leave
out
jp
push
js
mov
and
cmp
push
sbb
mov
pop
mov
fcomip
add
cmp
or
pop
inc
sbb
stos
push
mov
sub
adc
ljmp
mov
rcrl
mov
mov
iret
mov
in
dec
ret
jg
jno
aas
lea
rcll
loopne
adc
push
mov
call
scas
std
ljmp
xor
xchg
add
jns
lock
stos
ret
lock
push
das
nop
jle
inc
jl
shll
and
pushf
test
std
push
mov
es
jl
and
cmp
cmp
mov
push
mov
cld
add
mov
cwtl
pop
mov
xlat
mov
clc
xlat
rcrb
jp
jne
mov
loop
xchg
roll
mov
jo
imul
ret
adc
xchg
ljmp
ficomps
mov
sarl
loop
pop
inc
nop
pusha
dec
ja
fsubrs
or
dec
inc
dec
ret
scas
push
jecxz
mov
mov
push
sbb
ficoml
dec
lods
sub
jg
js
jns
adc
and
jle
fdivrp
inc
or
mov
mov
out
ljmp
dec
aas
clc
inc
out
push
leave
repz
daa
mov
das
outsl
call
inc
push
inc
adcl
data16
mov
ljmp
mov
xchg
movsb
bound
pusha
cld
lock
jge
es
bound
xchg
add
cld
daa
je
or
xor
test
mov
cwtl
int3
nop
and
arpl
xchg
out
cmpb
movsl
and
cmpb
ret
mov
mov
insl
lret
mov
cmpsb
clc
rcl
test
bound
sub
jno
stc
push
add
pop
aam
stos
inc
xchg
fs
or
dec
out
pop
sub
sub
loop
cmpsb
shll
cmpsb
cli
sbb
ret
lock
ds
lods
add
les
mov
lret
fcomip
xchg
xchg
lea
clc
pushf
out
iret
mov
mov
ljmp
jmp
inc
mov
sbb
cmp
xchg
sub
mov
mov
pop
ret
pusha
push
push
lds
out
xchg
pop
je
into
add
filds
cmpsb
xchg
and
sbb
add
es
jl
mov
movsl
inc
adc
dec
mov
clc
push
popa
xchg
or
cli
inc
adc
xor
inc
ss
fnstsw
rolb
adc
fidivl
iret
mov
xchg
icebp
add
rclb
clc
or
jle
jg
out
xor
ret
ficomps
ds
cltd
clc
outsb
pop
les
mov
jnp
add
cmp
or
xorb
inc
outsl
cmp
dec
pop
mov
inc
push
ljmp
mov
ret
mov
mov
in
fdivrl
xlat
outsb
jecxz
mov
sub
dec
es
mov
jo
adc
push
push
fsts
cmp
clc
mov
call
fwait
adc
shlb
jp
inc
inc
je
fisttpll
add
add
movsb
ds
test
in
aam
fiaddl
sub
inc
pop
fs
sbb
adc
add
xchg
lea
into
sbb
ja
push
std
dec
rcrl
sbb
mov
jo
les
sub
gs
loope
pop
mov
pop
into
js
push
dec
pusha
lds
mov
xchg
not
xchg
insb
and
lock
jnp
xchg
lock
adc
mov
or
pop
jbe
in
push
call
pushf
mov
loop
enter
push
dec
pop
xorl
je
bound
mov
pop
mov
mov
adc
mov
pop
rclb
cs
push
popa
fs
loopne
out
push
mov
int
daa
in
and
push
cmpsb
inc
push
push
mov
lds
lea
lods
rcll
in
cmp
je,pt
ljmp
out
nop
sub
in
fldcw
lock
xchg
out
js
jb
popl
push
push
and
mov
inc
std
incl
je
push
lods
mov
sti
bound
insl
mov
fsubrs
or
ficompl
call
xchg
scas
call
push
insb
push
mov
sbb
lock
cmp
add
add
pop
dec
sbb
dec
push
mov
mov
mov
incb
loop
push
rolb
lcall
sub
fcomip
xchg
icebp
and
test
es
movsb
js
incl
stos
jg
mov
push
dec
push
pop
mov
insb
xor
mov
int
addl
mov
cmpsb
hlt
and
xor
dec
aam
and
into
inc
add
mov
add
add
xchg
or
sub
sbb
cmp
jp
stos
add
sbb
cs
test
pop
orb
or
jmp
jl
outsb
xchg
add
xchg
fbstp
cmpsb
add
push
loopne
aas
lcall
mov
jl
sahf
sbb
mov
jno
add
loope
lds
mov
dec
test
push
dec
testl
sub
and
or
push
cmpsl
xchg
aad
cmpsb
xchg
jbe
call
adc
out
addl
or
sub
jb
mov
add
mov
inc
inc
aaa
mov
inc
call
or
adc
cmp
add
sbb
rorb
mov
xor
lods
movsb
es
arpl
mov
cmp
lea
mov
or
add
stos
push
inc
adc
loopne
js
sub
push
mov
shrb
cltd
and
mov
sbb
cmp
ljmp
mov
add
dec
push
rorb
out
inc
addr16
push
mov
leave
js
mov
test
sbb
adc
xor
mov
rclb
aad
pop
mov
inc
xor
addl
dec
insb
cmp
inc
sub
idivb
sbb
mov
movsb
pop
stos
aaa
cld
pusha
movsb
and
out
lea
in
cmp
xchg
andb
cmc
dec
nop
add
xchg
mov
in
or
sub
popf
xor
into
outsb
arpl
or
movsb
jb
inc
loop
add
sbb
xor
pop
inc
aam
in
call
orb
stos
lods
sub
jne
mov
test
fstpt
xchg
push
loopne
jmp
aad
sahf
cmp
jecxz
and
add
xchg
std
add
dec
out
mov
adc
sub
dec
jecxz,pt
xorb
cwtl
inc
dec
rorb
xor
mov
adcl
adc
pop
dec
cld
imulb
dec
push
jnp
scas
and
dec
ljmp
or
cmpl
add
push
aad
pop
imul
add
mov
outsb
negb
andb
mov
pusha
mov
add
xor
into
mov
movsl
clc
mov
sbb
nop
je
and
in
dec
lcall
cmp
or
add
stos
lods
shr
rorl
pop
data16
and
jl
lret
bound
dec
push
jmp
das
push
xor
scas
add
ljmp
jo
lods
ret
aaa
adc
fsub
jp
inc
xor
mov
xor
insw
and
push
sub
push
cmc
mov
test
xor
repz
loop
loopne
and
adc
adc
inc
fistpll
rcpps
outsb
pusha
lret
jmp
gs
push
int3
push
dec
fcmovu
sbb
add
inc
sti
scas
mov
mov
stos
mov
jnp
add
jmp
imul
mov
add
and
icebp
push
xchg
push
je
jmp
sub
dec
and
pop
cmpsb
mov
outsl
sub
fldl
test
xor
sub
call
inc
push
adc
aas
data16
popa
or
or
cli
pushf
cli
sbb
ja
fcom
scas
in
jge
pop
adc
shl
imul
lcall
push
pop
call
popa
mov
jb,pn
loopne
add
cmc
push
inc
dec
cmpsb
jl
out
in
sub
mov
in
mov
insl
xor
jmp
jg
add
incb
mov
sbb
jo
cwtl
sbb
mov
ds
pop
les
xor
stos
mov
pop
outsb
xchg
fiadds
lods
imul
sub
test
pusha
add
aaa
pop
mov
push
jle
bound
enter
es
loope
and
cmc
outsl
mov
inc
push
cwtl
clc
cld
imul
push
rcl
les
and
mov
sahf
mov
aad
jb
sarl
mov
in
ss
push
sbb
loop
cld
mov
adc
sub
adc
mov
clc
fs
or
loop
mov
sbb
mov
pop
push
sbb
xchg
sub
clc
cmpsl
aas
xchg
mul
jl
adc
cs
dec
mov
out
jne
cmp
pop
gs
mov
lahf
dec
mov
ret
test
adc
outsl
add
mov
push
nop
cli
in
aaa
daa
mov
adc
mov
test
add
push
enter
test
mov
sbb
jb
adc
hlt
add
fisubl
mov
daa
push
add
mov
sub
mov
in
lcall
sbb
push
pop
and
cld
sbb
enter
sbb
mov
orb
cwtl
mov
icebp
addb
push
ror
cmp
subl
dec
add
insb
aaa
mov
pop
ss
or
rclb
push
push
inc
into
mov
xchg
jo
mov
adc
int3
sbb
pop
std
aaa
push
pop
adc
stos
lods
sbb
fwait
xchg
fcomps
xchg
mov
mov
pusha
pop
mov
test
enter
sarl
xchg
mov
lock
cs
fdivs
outsl
test
and
rolb
in
mov
mov
repnz
mov
jb
sbb
or
andb
in
jg
push
out
iret
adc
mov
cmpb
push
xchg
jge
mov
lods
out
push
stos
adc
add
das
push
gs
ret
out
mov
adc
dec
mov
push
sub
jo
adc
das
pop
pop
mov
testl
cli
mull
lret
and
lock
test
das
mov
mov
popf
subl
out
jne
in
les
loopne
ret
cwtl
push
or
xor
or
adc
ficomps
push
xor
push
das
sub
mov
cmp
sti
inc
in
adc
iret
mov
and
mov
mov
ss
mov
xlat
inc
pop
xchg
cmpsb
sbb
aad
add
push
ds
add
xchg
dec
mov
enter
lret
idivb
dec
sbb
std
xor
xor
clc
les
lret
push
cmp
jmp
push
add
xor
xor
mov
mov
movhps
jmp
jmp
and
pop
stos
testb
cmc
test
push
addb
sub
mov
fsubs
movsb
lret
clc
test
sub
hlt
clc
xor
shll
xlat
mov
cmpb
mov
cmp
or
mov
bnd
es
dec
inc
mov
ds
aas
xchg
in
jo
mov
jl
add
pop
roll
push
test
loope
jle
call
movsb
or
les
mov
mov
movsl
add
dec
lret
push
push
mov
sub
add
mov
dec
in
notl
add
cli
das
cmpsb
cmc
sbb
and
cmp
clc
push
pop
mov
cmp
insl
imul
shrb
lock
ret
lods
lea
rcll
mov
pop
adc
bound
fwait
loopne
arpl
push
test
and
cli
fdivrl
inc
jbe
fidivrs
int
xchg
out
xor
dec
pop
lea
ljmp
popl
xchg
lahf
in
sub
adc
les
and
lahf
pop
addb
icebp
push
test
dec
push
xchg
sbb
shlb
prefetch
in
push
mov
xchg
mov
fisttps
test
aad
sub
or
aaa
cmp
ret
fwait
lds
inc
xchg
mov
add
add
or
and
aas
add
add
adc
jecxz
xor
in
lock
call
sub
movsl
adcl
xchg
pop
imul
ds
cld
movsb
dec
into
dec
clc
jb
lcall
shlb
cltd
lahf
ficompl
out
and
push
xchg
out
nop
pop
inc
subl
add
clc
mov
fcomip
sahf
dec
inc
mov
mov
xchg
inc
jmp
cmp
mov
sbb
popa
cwtl
dec
mov
fldcw
test
cld
mov
roll
cmp
cmpsb
enter
or
ljmp
mov
fisttpl
sub
cltd
sub
add
lock
or
rcl
pop
popa
lods
cmpsb
jns
pop
scas
or
xor
or
xor
sub
fists
js
cmc
movups
lret
add
push
and
cmpl
pop
lret
sbb
add
sar
scas
adc
cmovs
mov
push
sbb
sub
test
inc
sti
mov
adc
fmuls
jno
inc
outsl
jno
nop
cmp
mov
cmc
adc
jl
into
movsl
sahf
mov
inc
xchg
ljmp
push
aad
add
pop
pop
xor
xchg
mov
mov
pop
mov
xchg
and
add
cmp
mov
call
add
push
push
inc
mov
or
inc
xabort
push
cmp
setg
xchg
pop
cmc
int
dec
jne
ss
add
mov
lods
cmp
loope
add
cltd
ds
aam
push
push
mov
ret
shll
xor
ljmp
adc
cmp
xchg
in
fwait
clc
jecxz
stos
mov
pop
lds
sbb
sbb
pop
int
js
sbb
mov
ss
add
jmp
mov
mov
mov
inc
or
push
sbb
inc
or
ja
aaa
xchg
repnz
dec
scas
jp
lret
or
lcall
and
rcll
sbb
ret
cmp
test
test
sub
mov
add
mov
pop
xchg
jno
fbstp
mov
es
ljmp
insb
dec
int
dec
and
jl
mov
gs
xor
pop
or
nop
nop
lds
xchg
clc
pop
pushf
sub
add
mov
lret
in
arpl
xor
mov
clc
outsl
pusha
adc
repz
or
push
aam
dec
add
fisubrl
sbb
inc
test
loop
add
push
dec
sbb
cld
push
or
sbb
stos
jno
rcl
gs
adc
sbb
std
lea
jb
data16
outsl
or
push
mov
push
test
adc
mov
adc
clc
addb
sti
ret
les
outsl
mov
shl
add
dec
mov
pop
jl
clc
rol
inc
repnz
jbe
jecxz
add
ljmp
lea
arpl
out
ds
pop
sub
lock
mov
push
inc
sbb
fsubrl
mov
inc
mov
sub
sahf
add
sub
out
push
movsl
mov
movl
nop
outsl
ss
and
testl
scas
pop
das
mov
cltd
sub
xor
lods
adc
push
cmp
add
mov
cld
cwtl
cmp
jle
ret
cmp
clc
in
fisubrl
mov
adc
sbb
dec
jl
sub
dec
scas
sahf
sar
adc
push
outsb
aas
loopne
jmp
cmp
xor
push
sub
fcmovnu
jb
mov
in
pop
dec
adc
sbb
and
ret
xchg
clc
sarb
adc
dec
add
pop
lret
mov
and
data16
adc
and
into
sub
sahf
lods
inc
mov
sbb
imul
stc
cld
inc
test
popa
jmp
into
out
jle
jg
mov
fiadds
xor
sahf
sbb
pop
push
repnz
inc
in
loope
dec
push
or
mov
push
push
mov
pop
sbb
lea
ss
lcall
adc
inc
mov
inc
and
pop
sub
fldl
insl
mov
mov
int3
or
sub
mov
imul
dec
dec
sbb
sbb
and
pop
je
mov
sbb
mov
cmpsb
jmp
arpl
inc
xor
leave
inc
mov
outsb
push
mov
test
add
add
cmp
xor
out
push
mov
cmc
push
push
std
push
inc
cmp
ret
or
push
inc
mov
pusha
int3
jo
rorl
shrb
mov
rcr
cld
stc
or
jmp
hlt
or
cmp
push
in
jno
fdivrl
test
add
rclb
lods
and
sahf
test
adcl
mov
or
jo
imul
insb
clc
add
push
das
ja
gs
int
xchg
adcl
add
lret
call
rorb
push
xchg
or
add
repz
mov
insb
mov
fwait
mov
fwait
xchg
add
enter
fsubl
mov
ret
fistpl
daa
pop
pop
jp
inc
push
xor
ret
stos
iret
push
flds
jp
aas
push
inc
mov
pop
jbe
and
jl
fidivrl
sarb
pop
movsl
inc
je
xlat
add
ror
rcrb
std
and
add
arpl
lock
mov
cmp
cld
outsl
jecxz
inc
mov
in
aam
cmp
loope
cwtl
xabort
xchg
ljmp
sbb
hlt
cmp
mov
jge
mov
cmp
in
xchg
push
dec
sahf
push
hlt
push
cld
xchg
into
push
stos
testb
or
sbb
outsb
adc
sbb
cmc
jmp
mov
mov
sbb
pop
mov
mov
shll
sbb
test
inc
xor
sbb
lea
mov
and
shrl
xchg
idivb
mov
mov
mov
ljmp
cmp
ficomps
mov
addr16
mov
call
cmp
push
cmp
loope
add
dec
scas
test
mov
test
stc
add
jno
push
loopne
pushl
push
js
adc
imul
fistps
cld
mov
cltd
add
dec
push
fsub
jnp
pop
inc
test
lock
jl
lds
xor
in
xor
mov
add
stos
xchg
cmp
in
out
out
sub
icebp
popf
fisubs
dec
inc
inc
loop
aas
jo
cmp
fs
mov
loope
jbe
and
and
push
js
push
add
sub
fimuls
adc
cli
sub
sti
fbld
icebp
incl
fisttpll
in
loopne
icebp
fwait
js
aam
or
mov
adc
add
mov
push
mov
adc
pop
add
push
or
frstor
mov
pusha
hlt
and
xchg
and
cmp
out
iret
xchg
adcb
push
jl
and
pop
mov
inc
ds
int
xchg
xchg
adc
inc
insl
ljmp
sub
in
fwait
sub
aad
inc
add
adc
sbb
insb
dec
push
sbb
cmp
aam
jb
mov
das
jle
push
les
and
add
xor
cltd
popa
mov
sbb
cwtl
ss
and
sti
shll
mov
adc
push
pop
dec
loope
lea
in
lock
das
jl
fists
adc
xchg
rcrl
incb
dec
inc
rorb
popf
jb
inc
jmp
dec
xor
jp
ljmp
scas
sbb
inc
cltd
jbe
push
xchg
lcall
jp
repnz
xor
fnstsw
loopne
loop
movsl
outsb
data16
dec
ret
addb
cmpsb
pop
xor
jle
scas
cs
or
adc
lds
inc
outsb
int3
sbb
call
cld
ret
aam
pushf
mov
add
andb
loope
jp
loopne
stos
cwtl
adc
and
jle
sub
iret
out
rorl
adc
dec
inc
xchg
and
mov
inc
repnz
clc
sub
push
adc
xchg
andl
orb
mov
mov
push
sar
das
js
cmp
cmp
sti
sti
or
pop
push
push
loope
ret
push
push
jns
scas
int
or
sbb
loope
sub
jecxz
lret
insl
push
xor
xchg
pop
inc
or
pushf
xor
or
mov
imul
into
mov
dec
xor
mov
add
pop
mov
mov
push
aam
nop
mul
cmp
adc
mov
xchg
in
filds
cld
push
sbb
idivb
xor
aaa
dec
sarb
xor
andl
sbb
fwait
add
push
scas
mov
xor
fistps
jb
mov
pop
or
push
adc
loope
sub
cmp
inc
clc
cs
adc
cld
mov
pop
cwtl
dec
es
fiaddl
pop
cs
ss
add
daa
cld
adcb
xchg
push
outsl
push
jne
loopne
dec
or
out
dec
pextrw
dec
pop
fcoml
cld
mov
stos
and
mov
je
lea
inc
and
inc
mov
sub
cmp
mov
inc
cli
stos
or
sbb
xchg
inc
cmp
adc
dec
out
adc
mov
push
aaa
sub
fbld
inc
inc
cmc
push
jg
mov
fdivrl
sub
ror
push
mov
adc
nop
xchg
and
add
filds
fwait
mov
ja
add
ja
sbb
cmpsl
aad
enter
ror
fwait
incb
arpl
cli
mov
bnd
jecxz
ret
xor
ja
mov
cmp
add
test
cmpsb
or
imul
aam
pop
sub
xchg
out
fwait
or
rolb
clc
xor
test
test
stos
lea
js,pt
dec
xor
mov
popa
icebp
add
jb
inc
add
cld
or
popa
hlt
filds
repnz
loope
das
push
mov
sti
mov
scas
and
adc
sbb
jl
sbb
std
addr16
mov
or
push
out
add
in
out
xchg
dec
popa
fildl
lret
jg
add
cmp
xchg
dec
pusha
enter
add
and
pop
dec
fcmovnbe
scas
mov
sub
scas
jp
in
shrl
stos
scas
sub
popa
inc
sar
inc
es
or
xchg
mov
pop
pop
mov
push
xor
mov
xchg
dec
sarb
loop
filds
push
out
cmpsb
push
sbb
xor
and
sbb
xchg
cli
jmp
mov
and
xchg
mov
idivb
xchg
test
push
fnstcw
in
lret
xor
js
push
leave
cmp
sub
sbb
add
adc
ror
cld
sub
stos
sbb
adc
mov
mov
es
lret
lcall
push
out
leave
adc
ljmp
incb
add
ds
inc
es
pop
xchg
or
push
xchg
inc
jecxz
mov
fwait
mov
nop
imulb
sbb
sti
mov
mov
outsb
int3
decl
data16
shll
add
sbb
mov
andb
imulb
sahf
and
inc
js
nop
lret
push
adc
aaa
or
test
mov
shlb
hlt
stos
jne
dec
fadd
pop
js
add
or
cmc
inc
testb
loope
mov
scas
lods
mov
fists
ljmp
sub
ljmp
cmp
lcall
mov
adc
imul
mov
xchg
mov
scas
inc
or
mov
adcb
out
xchg
mov
inc
aad
push
xor
in
in
ret
cs
aam
xchg
pop
mov
mov
jle
sub
stc
hlt
jg
add
push
decl
sub
hlt
popa
xchg
out
das
cwtl
pushf
out
jg
movsb
add
sbb
popa
dec
cmp
sub
sbb
imul
jmp
push
lock
into
out
add
int
dec
mov
pop
cld
xchg
ret
add
incb
xor
pop
mov
jo
and
adc
mov
mov
inc
push
inc
or
les
out
insl
mov
mov
or
test
insb
xor
adc
cli
notb
mov
or
jne
imull
xor
push
jo
pop
ret
and
and
lock
pusha
into
ja
clc
ja
cs
out
cmp
sbbb
jle
adc
loopne
pop
in
shlb
sub
dec
call
pop
mov
push
cmp
and
mov
cs
hlt
push
mov
outsb
push
call
inc
mov
punpckhwd
cltd
hlt
add
push
pop
fwait
icebp
inc
ficoml
in
and
adc
inc
xchg
es
sub
or
scas
add
add
icebp
es
jmp
pop
gs
daa
and
xor
push
or
pop
adc
loop
pop
adc
mov
add
daa
icebp
and
icebp
sbb
cli
ja
mov
xor
mov
mov
push
out
inc
cvtps2pd
mov
and
repnz
cwtl
rolb
jae
xor
jmp
push
aaa
push
push
dec
sub
add
mov
dec
adc
icebp
mov
push
push
mov
lret
adc
or
mov
mov
mov
mov
in
cmp
jl
push
scas
stos
clc
iret
mov
jo
js
in
test
dec
inc
adc
ret
lret
add
xchg
clc
dec
mov
hlt
roll
xchg
pop
mov
push
mov
or
cld
outsb
fdiv
inc
xor
pop
inc
stos
inc
sub
adc
popf
movsl
dec
std
dec
ljmp
ja
es
adc
movsb
mov
cwtl
fnstenv
add
jge
stos
mov
ds
ret
xchg
rclb
arpl
add
push
add
or
inc
std
daa
test
aaa
fisubrl
mov
and
aad
jb
daa
mov
mov
shlb
dec
mov
inc
push
ret
jg
fcoml
jle
sub
cmc
pop
cld
into
add
adc
cwtl
mov
push
adc
pop
fisttpl
add
dec
pushf
repz
xor
add
orb
pop
aam
inc
mov
jp
int3
jo
sub
or
dec
int3
imul
daa
sbb
ljmp
and
mov
scas
push
mov
sarl
popa
pop
sbb
or
cmpsl
insb
mov
sbb
mov
stos
lock
and
cmc
insb
js
ret
popf
fldt
cli
sub
xor
inc
adc
push
jp
xor
fdiv
mov
jmp
dec
sbb
shrb
dec
cld
adc
or
xlat
ds
ljmp
clc
mov
jb
sub
scas
xabort
or
in
lods
int
mov
testb
icebp
fstpl
js
add
aam
aas
rclb
ljmp
jp
add
xchg
fwait
sti
cmp
ja
leave
adc
ljmp
jns
cmp
lods
adc
cld
mov
or
mov
and
cmp
push
les
inc
dec
inc
adc
push
cli
inc
ret
jle
cmp
mov
fmull
and
nop
sub
orb
test
lahf
imul
xor
pop
mov
mov
mov
in
fisttpll
mov
pop
sbb
pop
sbb
loopne
loopne
xlat
jg
popf
cmpl
jp
ljmp
sub
and
push
jecxz
repnz
movsb
shr
nop
xor
inc
in
aam
jmp
sar
dec
lahf
jbe
mov
cwtl
data16
imul
xchg
sbb
test
cld
cs
xor
or
sbb
fadds
fisttps
inc
mov
fs
xlat
and
add
cli
push
push
loop
in
cld
fwait
ss
adc
je
dec
inc
cwtl
into
adc
rclb
stos
insl
pop
cmp
xchg
and
cwtl
fdivrs
jg
test
add
sub
int3
push
and
mov
xchg
jo
hlt
in
mov
push
hlt
pop
cmp
cwtl
leave
shrb
aaa
enter
lret
test
add
xchg
es
cld
notb
lret
push
add
xchg
mov
mov
cli
pop
mov
xchg
and
inc
lret
inc
clc
fwait
ljmp
pushl
sti
arpl
mov
or
jno
add
or
or
jle
pop
pop
insl
shr
push
or
sbb
mov
inc
mov
adc
ficoms
jno
pop
xchg
hlt
mov
jns
out
lahf
rolb
push
sti
adc
loop
movsb
ficoml
xchg
sbb
add
sbb
mov
scas
in
cmpsb
add
mov
jmp
xchg
addb
aaa
enter
bound
mov
ret
pushf
sub
pop
or
popa
hlt
sub
pop
sbb
adc
dec
aam
and
sbb
fwait
mov
stos
mov
mov
ret
out
outsl
xor
jge
xchg
and
fwait
out
or
ret
sub
aad
adc
scas
mov
inc
add
adc
lcall
push
add
mov
stos
add
add
imul
dec
xchg
sbb
xchg
lods
jno
pushf
out
outsl
decb
dec
adc
mov
push
out
adc
push
adc
cmp
mov
jnp
or
out
shll
std
push
arpl
repz
mov
xchg
cmp
sbb
or
inc
pop
adc
shr
add
inc
adc
mov
or
sub
test
adc
fdivs
icebp
test
sub
lods
pop
cmpsb
ds
sbb
lret
pop
pop
div
mov
dec
xor
add
scas
mov
or
and
loope
inc
pop
fs
add
or
mov
mov
mov
je
mov
mov
sarl
fldl
lcall
icebp
jo
jb
push
mov
sbb
test
lcall
add
je
sbbb
mov
cld
data16
mov
push
jp
push
outsb
xchg
out
decb
sub
jo
test
xor
dec
inc
sbb
xchg
mov
jge
jne
add
mov
lea
pusha
push
insb
inc
or
add
push
jno
je
jl
mov
jle
or
les
adc
pop
lods
mov
ret
insb
es
add
sbb
add
add
cmpsb
xor
jg
rcrl
jl
das
mov
sub
mov
xchg
cltd
xor
dec
cmp
pop
push
pop
lock
mov
jmp
add
jo
adc
es
loope
fistps
or
jne
in
mov
xlat
inc
andl
out
sbb
pop
ret
cli
shll
and
sbb
lcall
pop
pop
aad
addl
jg
cs
sub
fwait
stos
xchg
mov
enter
jmp
in
js
shrb
lock
ljmp
sub
or
push
mov
jns
xor
jecxz
imul
pushf
in
pop
ret
les
mov
roll
fdivrl
into
push
adc
out
testb
sub
jmp
jg
or
repnz
or
test
sbb
ret
sbb
or
pop
lret
inc
cmpsb
inc
scas
jb
sbb
push
mov
inc
mov
fld
iret
shrb
adc
or
fdivr
push
adc
aam
sbb
push
xor
mov
test
ljmp
imul
mov
sbb
jns
dec
mov
es
mov
jno
ret
or
movsl
jecxz
inc
cmp
push
lcall
or
pop
or
jmp
fbld
paddq
es
or
jge
add
sti
fnstcw
out
jle
mov
popa
push
jmp
inc
loopne
fcomps
roll
inc
fstpt
sbb
dec
arpl
mulb
sbb
mov
pop
pop
mov
push
mov
in
popa
popa
mov
push
in
jmp
js
mov
rcrb
fmuls
mov
fs
pop
popw
ja
pushl
lcall
fsubl
das
pop
outsl
ret
out
adc
mov
cmpsl
mov
inc
addr16
enter
jle
push
adc
sbb
mov
xchg
pusha
test
ljmp
sbb
inc
rorl
gs
pop
enter
jle
arpl
pop
in
or
pop
testb
insl
push
push
push
test
loopne
decl
fistpll
loopne,pn
xor
pop
mov
ret
loopne
mov
xlat
loopne
mov
inc
mov
xlat
mov
adc
sbb
mov
mov
sbb
outsl
loopne
shlb
sbb
shrb
mov
ret
add
and
int
push
mov
movsb
pop
pop
inc
test
out
arpl
movb
add
pushl
ret
cmp
int
rorl
mov
incl
lea
inc
fdivrl
aam
dec
test
adc
jb
cmpsl
adc
xchg
ret
mov
inc
rolb
pop
xchg
jmp
aas
popa
leave
jno
arpl
loop
out
rorb
scas
adc
mov
xor
inc
ret
xor
inc
inc
xchg
ss
xor
push
pop
stos
push
xor
lret
xchg
mov
mov
jnp
add
mov
sub
jecxz
shlb
dec
cmp
cmp
or
push
mov
sbb
pop
jmp
rol
out
lcall
jbe
push
add
imul
adc
cld
sub
add
lock
rol
cmp
add
lock
xor
ret
std
or
cmp
adc
or
in
out
ljmp
dec
jbe
lahf
push
jo
mov
adc
sub
out
idivl
dec
enter
push
pusha
insb
push
data16
mov
mov
mov
pop
hlt
aaa
jp
push
inc
mov
das
sbb
adc
addr16
xchg
test
clc
outsb
and
cmc
or
xlat
dec
pop
cmp
mov
sbb
mov
dec
xchg
add
stos
scas
call
js
xchg
lahf
xor
scas
lock
jne
or
xchg
or
xchg
cli
pop
test
lret
imul
in
sub
lods
dec
dec
jae
shrb
xor
inc
fbld
mov
sbb
adc
add
pop
dec
ret
jmp
adc
test
or
add
js
jl
fistpl
ljmp
es
test
shlb
fsubl
mov
andl
or
ret
in
add
testb
fnsave
popa
pop
stos
mov
js
outsl
cwtl
pop
adc
movsb
xor
jp
cli
inc
jmp
push
add
sub
lret
pop
aas
xchg
cmp
dec
mov
testb
loopne
and
imul
out
add
les
xchg
dec
sti
mov
ljmp
mov
mov
enter
rol
scas
in
mov
loopne
sbb
icebp
sbb
sbb
lods
mov
call
int
xchg
mov
test
inc
sub
adc
lret
in
push
mov
xchg
adc
and
dec
jl
jo
shlb
adc
sbb
dec
or
mov
aam
inc
outsl
sbb
xor
movsb
test
loopne
mov
divb
aad
mov
aam
ljmp
in
mov
mov
or
or
faddp
add
clc
push
insl
lds
mov
and
or
cmpsb
in
add
xchg
xor
divb
cmpsb
inc
jge
pop
inc
lods
cwtl
out
xor
icebp
and
out
clc
add
jg
pop
fwait
pop
je
xor
aam
mov
ss
mov
pop
ljmp
or
or
mov
and
fisttpl
xor
andb
sbb
sub
or
cmp
fisttpl
xchg
cmpsw
stc
mov
sbb
pop
inc
loop
je
rol
and
pop
push
mov
inc
jo
cltd
xchg
loopne
incb
dec
cmpsb
add
add
sbb
faddl
and
add
pop
ljmp
je
sub
or
xchg
scas
pusha
pop
js,pn
mov
hlt
test
mov
sub
or
push
shl
mov
ss
aam
rorb
sub
shlb
cmp
sub
pop
fisubl
cmp
dec
dec
popa
imul
stc
jp
scas
and
aam
pop
sbb
sbb
push
std
sub
sarb
std
xor
xchg
xchg
cmp
into
cmpsl
je
push
lods
sbb
stos
sti
inc
or
mov
cli
aaa
cli
pusha
push
loope
add
in
jmp
xor
clc
mov
loop
mov
das
pop
add
out
sbb
mov
sub
mov
xor
sbb
lret
es
out
std
outsl
sub
push
push
dec
lret
divl
add
int
dec
cs
je
add
pop
or
scas
push
lock
ljmp
aad
cmp
push
outsl
sub
aam
scas
xchg
mov
icebp
push
mov
cld
pop
notb
xor
cs
mov
sub
jno
push
fisubrs
push
movsb
pushf
nop
les
js
add
iret
mov
insb
and
sarb
rolb
ljmp
jb
xor
fsts
and
dec
push
xchg
pushl
cmpsl
xor
repz
incl
xchg
cmpsb
aad
or
xorb
or
xchg
insl
pop
insl
les
mov
loop
or
and
ljmp
rolb
and
repnz
adc
test
lcall
in
pop
cmp
andl
fisttpl
or
inc
test
cli
call
push
shrb
scas
or
stos
fildll
cmp
add
outsb
jp
mov
js
sbb
adc
add
cli
jmp
add
sub
mov
pop
lret
push
pushf
cmpsb
xor
inc
xchg
cld
or
dec
mov
shlb
and
ja
dec
pushf
hlt
jle
mov
test
jg
add
stc
and
scas
loop
xor
sub
jg
xchg
mov
mov
cmpsb
cmpsl
test
loopne
mov
in
into
aaa
add
sub
add
les
inc
repnz
pop
mov
fistpl
push
int
pop
rcl
pop
test
movsl
mov
inc
test
mov
add
test
adc
repnz
les
loopne
pop
push
js
les
push
jno
pop
arpl
insb
mov
lcall
or
jae
adc
xchg
sbb
adc
xor
lock
jecxz
aaa
cmp
push
es
sbb
sbb
jmp
out
call
cmpsl
in
rorb
insl
ljmp
xor
inc
push
xchg
dec
test
dec
xor
and
es
stos
xor
xlat
sub
dec
cmp
cs
lods
push
inc
mov
fdivs
shr
add
pop
adc
dec
add
mov
or
push
dec
add
sub
or
incb
test
dec
push
and
mov
jne
push
mov
hlt
sub
popf
stos
adc
inc
push
cwtl
push
clc
cmp
add
loope
aad
cmpsb
cmp
xor
push
fstl
ljmp
call
jnp
pop
aas
mov
hlt
insl
adc
inc
scas
add
sahf
incl
outsl
pop
and
mov
into
xor
or
mov
pop
clc
dec
sub
jmp
xor
lds
jb
shrb
jno
fidivrs
pop
inc
sub
in
bound
xchg
out
and
inc
lds
cs
ljmp
loope
mov
popa
and
push
loope
pop
or
xchg
cmp
fucom
hlt
sbb
add
or
jbe
and
test
pop
mov
sbb
insb
aad
adc
addr16
call
cld
pop
sub
sahf
sbb
mov
mov
dec
mov
lcall
aaa
sbb
xor
mov
pop
mov
inc
adc
mov
popf
sbb
mov
mov
adc
outsl
les
dec
xchg
mov
cld
inc
inc
cmp
dec
orb
jl
cmpl
int3
xchg
out
push
cs
push
ret
pop
aas
add
movl
lcall
cwtl
or
imul
data16
outsb
out
push
mov
adc
jle
push
cmp
fsubs
jle
sar
add
negb
dec
call
jge
add
fwait
push
lret
jle
mov
jo
mov
adc
mov
inc
mov
sub
sub
insb
jmp
or
pop
pop
cmp
rclb
sbb
add
sbb
stc
rolb
or
sbb
dec
mov
ret
mov
pop
and
xchg
pop
jg
stos
fiaddl
pop
sbb
clc
sbb
notb
jl
xchg
outsl
popa
test
sub
pop
bound
xchg
popa
mov
fs
jl
movl
pop
sub
aaa
pusha
out
jmp
subb
mov
or
or
ljmp
cmp
incl
fwait
add
enter
mov
cmc
nop
add
mov
aaa
sarb
xchg
vcvttps2dq
clc
push
ja
fsubs
push
sbb
mov
push
xchg
sarb
mov
or
xor
add
cmp
out
or
jo
xchg
in
add
jle
add
jno
xorb
push
fnsave
and
pop
xor
jl
ljmp
jecxz
pop
inc
lret
scas
push
inc
mov
xor
stos
mov
add
out
and
mov
cmpsb
ja
cwtl
inc
aas
xchg
sahf
push
adc
incl
sbb
fsubr
out
shll
in
dec
cmpsb
sti
xchg
das
xchg
jns
mov
int3
imul
cltd
loope
cmpsb
cmp
xchg
mov
adc
cmpb
or
bound
shrb
fst
xchg
decl
stos
leave
push
sbb
test
inc
outsb
dec
add
dec
adc
sub
mov
ja
jecxz
fs
add
add
pusha
stos
pop
ret
out
pop
add
push
call
insl
jns
outsb
mov
push
jge
dec
ds
shr
loope
loopne
xor
and
test
out
rol
outsl
mov
fisttpl
out
addr16
stos
ss
adc
ja
mov
popf
aaa
into
adc
cmp
cli
neg
pop
test
pusha
jbe
insl
pop
cmc
adc
mov
mov
sbbb
mov
addr16
sbb
pushf
xchg
push
insl
mov
jne
inc
xchg
cli
scas
popa
push
xchg
lods
push
cmp
enter
push
pop
push
sti
cmp
stos
fildl
je
hlt
shrl
mov
mov
cwtl
mov
pop
hlt
call
and
pop
add
call
std
decl
cmp
call
hlt
adc
cs
mov
xorb
dec
out
mov
lock
pop
nop
sbb
sbb
dec
inc
mov
out
adc
xchg
cld
add
and
stc
add
stos
push
cmc
sub
fists
add
mulb
cwtl
sub
movsl
jg
add
sub
fistpl
mov
cmpb
mov
aaa
mov
je
loope
pop
test
sub
std
sub
mov
xor
jle
mov
je
arpl
jp
jbe
and
mulb
and
mov
push
mov
idivb
shrl
xor
decb
fistps
sbb
les
cs
pop
or
sub
cld
xor
adc
push
or
mov
mov
push
shll
sar
ljmp
xchg
mov
pop
adc
pushl
sub
adc
push
pop
add
fsubrs
pop
pop
jg
int3
push
sbb
addr16
xor
mov
loope
rcll
shll
mov
or
enter
iret
repnz
popf
clc
lcall
add
pushf
icebp
pop
in
cli
popa
mov
push
dec
dec
or
rorb
sti
leave
les
jno
fisubrs
or
lret
mov
sub
cmp
sub
mov
sarl
add
in
jb
add
aaa
test
mov
notb
jae
pushf
add
jae
push
pop
add
cli
into
and
add
es
insb
out
inc
lods
rcl
sub
aad
mov
rcl
adc
push
call
arpl
jle
mov
aam
lcall
push
sub
les
lret
add
scas
fstp
inc
push
cmp
sbb
jbe
das
mov
sbb
jmp
push
mov
xchg
xchg
add
bound
mov
ret
clc
sub
int
add
incl
mov
or
push
push
or
sub
push
add
push
sub
push
outsl
stos
cmpsb
orl
xor
mov
mov
xor
into
xor
adc
add
jg
sub
jmp
mov
out
movsb
lock
cmp
out
test
pop
push
pop
cmp
mov
jg
fwait
mov
xor
push
mov
mov
out
es
dec
outsb
repnz
rcrb
cmp
pop
add
or
leave
fldenv
adc
mov
js
loop
push
sub
pop
push
es
dec
cltd
xor
enter
ljmp
cmp
lret
loope
inc
mov
cs
xor
jg
mov
sahf
jo
lahf
pop
or
inc
or
andb
decl
push
or
push
dec
cld
jg
out
inc
jbe
dec
fmull
loopne
and
pushl
adc
popa
dec
mov
insl
sub
insl
pop
fs
scas
movsb
fucom
adc
add
testb
orl
loopne
ljmp
sub
pop
pop
fcoms
push
aas
test
repnz
subl
imul
dec
pop
pushf
xor
orb
inc
mov
fstl
cli
push
xor
in
dec
cld
aas
cli
cmp
clc
insb
sbb
fildl
push
jmp
adc
inc
xor
push
cltd
sub
mov
pop
dec
outsb
into
out
mov
shlb
push
xchg
dec
aas
or
xor
aad
mov
ljmp
or
mov
mov
push
in
out
cmp
out
jp
cmp
jne
inc
mov
mov
shlb
jge
jmp
xor
testl
or
icebp
pop
lock
fnstcw
cmp
mov
cmp
adc
pop
cwtl
repnz
dec
lahf
outsl
test
ljmp
punpckldq
mov
loopne
push
or
push
ret
push
cmp
mov
inc
ret
fsubs
outsl
rcl
fidivs
decl
daa
jg
test
jp
enter
adcl
inc
jg
xchg
adc
pop
jno
mov
push
ljmp
cmp
add
jmp
fucomip
xchg
enter
or
jp
std
xchg
cmp
test
dec
push
mov
scas
add
ret
lret
shlb
std
push
imul
insb
jmp
xchg
xchg
cmpsb
mov
cli
sti
jnp
or
xchg
mov
loopne
add
adc
lcall
jo
and
dec
test
in
pop
sub
or
lret
or
jg
dec
mov
xchg
mov
inc
scas
idivb
out
adc
pushl
mov
aad
or
cmpl
shlb
fs
call
inc
cld
lds
cli
enter
shlb
jp
in
rol
rcrb
std
imul
adc
jp
mov
add
sbb
addr16
pushf
loop
popf
cli
pushl
mov
or
jecxz
jle
inc
adc
xor
pop
out
pop
jecxz
lret
loopne
inc
fists
ret
jmp
pop
sub
push
jle
sbb
lret
sar
mov
test
inc
fadds
shl
popf
iret
fwait
and
xor
adc
pusha
xchg
in
cli
ljmp
movsb
and
data16
sti
leave
push
imul
dec
loope
dec
cmpsl
pop
jl
inc
incb
or
sub
jecxz
dec
inc
test
frstor
push
sbb
adc
rorb
inc
icebp
mov
xchg
adc
inc
divb
orl
push
lods
repnz
dec
rcrb
ljmp
dec
mov
in
pop
or
mov
inc
cmp
fstl
mov
xchg
push
push
push
push
xchg
mov
cwtl
mov
adc
loopne
add
or
push
test
call
movzwl
or
jle
orl
adc
push
or
pusha
mov
add
aaa
fidivl
jb
jp
hlt
ja
push
inc
mov
sbb
addl
cli
sub
roll
push
test
sub
jo
sbb
je
shll
stos
sbb
les
ss
scas
push
sbb
dec
scas
sub
add
xor
mov
arpl
jnp
lods
inc
inc
push
lretw
sbb
and
sbb
lcall
cmpsb
xor
xlat
or
push
push
or
loopw
jl
mov
fadd
mov
cmp
mov
add
movsb
jl
jmp
or
jg
addb
add
sbb
test
pop
or
inc
xchg
or
mov
jo
mov
cwtl
ficomps
cld
or
fildl
leave
stc
js
loop
add
pushf
add
dec
pop
cmp
dec
mov
mov
pop
test
cmc
aas
repz
mov
jg
sub
imul
cmpsb
mov
jo
push
cmpsl
jne
rclb
fimull
xor
ss
push
mov
int
movsl
lock
faddl
jg
shlb
adc
and
xchg
xchg
lret
call
out
fstps
mov
cmc
fwait
sbb
in
in
mov
add
inc
inc
mov
data16
push
je
mov
insb
lods
and
lock
add
push
and
sbb
repnz
xor
stos
jo
and
in
aam
and
or
xchg
jo
ret
js
sahf
popa
mov
adc
mov
push
cld
and
pop
test
popf
mov
js
sbb
loope
popf
add
add
subb
mov
cmp
sub
mov
out
movsb
cmpsl
cs
scas
jecxz
adc
and
out
ret
fcomp
pop
das
lock
xor
rorb
loope
add
movsl
pop
jle
xchg
inc
sub
push
add
xor
subl
or
dec
pop
pop
mull
xchg
popl
or
or
xor
fistpll
clc
sbb
sbb
mov
adc
inc
jp
pop
icebp
pushl
jg
les
xchg
icebp
clc
cmpsb
push
pushl
outsl
xor
inc
out
ror
jne
shll
sahf
aaa
dec
ret
lcall
sti
or
lcall
pop
aaa
mov
xchg
fdivl
and
mov
cmp
push
push
jecxz
test
lcall
test
add
jo
fistpl
clc
inc
mov
fldenv
inc
loope
shll
nop
insb
add
cmpsb
divl
push
inc
data16
lock
scas
ret
negb
in
ret
clc
sub
aam
out
hlt
out
scas
ds
imul
mov
adc
stos
xchg
or
push
add
mov
aam
cld
sub
sub
dec
test
jle
pusha
push
push
mov
jo
push
notb
cli
clc
xchg
pop
lret
in
jnp
mov
sub
imul
mov
test
or
mov
imul
insl
cltd
test
test
les
xchg
inc
loopne
sti
jno
mov
out
add
and
out
sub
and
hlt
call
mov
into
out
dec
dec
mov
shlb
inc
into
lea
cs
add
sub
jle
stos
dec
test
ret
mov
sbb
mov
mov
pop
lods
shlb
fnclex
shrl
jmp
repz
xchg
ja
push
in
xchg
adc
ljmp
cld
out
jl
jle
inc
pop
sbb
js
pop
add
inc
outsb
push
mov
inc
xor
pop
xchg
mov
leave
cli
fisttps
adc
push
decl
out
stc
pop
mov
es
outsl
or
insb
in
fimull
adc
nop
add
jp
sbb
jns
mov
adc
jo
sub
pop
push
mov
or
mov
push
mov
adc
aaa
sbb
pop
jl
and
ljmp
data16
andb
fwait
cmp
nop
inc
adc
mov
sti
adc
lea
cmp
fmull
push
loopne
pop
add
dec
inc
pop
cli
out
push
outsb
ret
dec
js
push
or
in
jl
adc
fwait
test
sbb
push
and
out
pop
dec
pop
cmc
sarb
out
xor
fs
out
scas
adc
fimull
jg
add
xchg
xchg
shrb
push
out
pop
pushf
das
je
stos
out
and
stos
xor
adc
inc
call
out
dec
mov
and
arpl
imul
divl
outsb
das
mov
ror
add
movsb
int
je
lock
cmpsb
dec
fmuls
mov
pop
adc
subb
dec
call
stos
adc
fsubrp
aas
pop
jg
icebp
cmp
push
insb
fildl
push
inc
cmp
ror
mov
test
lret
mov
jb
push
repnz
sbb
movsb
or
subb
mov
inc
mov
xlat
and
adc
das
add
stos
outsb
adc
shlb
and
bound
incl
xor
sub
shrb
cs
inc
inc
test
jmp
imul
shll
pop
push
pop
xchg
repnz
push
jbe
cwtl
lahf
jmp
pop
out
fdivs
loop
sbb
pop
loope
lret
inc
adc
pop
fnstsw
mov
and
jecxz
push
sbb
leave
and
xchg
adc
xor
loope
pusha
push
and
lea
lcall
and
xchg
or
outsb
andb
sbb
push
xor
fsubrs
jo
or
push
cwtl
call
sbb
gs
sub
jecxz
roll
out
das
jle
push
inc
insb
movsb
xchg
rcrb
shlb
sbb
xchg
mov
fs
fnstcw
or
dec
mov
jg
repnz
pushw
push
ljmp
aam
nop
adc
in
xchg
sub
push
or
jmp
sub
orb
adc
pop
faddl
add
hlt
inc
sub
repnz
and
cmp
mov
dec
daa
add
push
or
jae
mov
and
fbstp
or
dec
jl
add
add
push
popf
testl
mov
lock
inc
loopne
mov
cmp
loop
jnp
add
out
push
orb
sysret
cmp
loope
push
popf
cld
push
mov
adc
mov
lock
sarl
popf
push
push
sub
pop
mov
hlt
sbb
jo
pop
pusha
sub
adc
idivl
fucomi
sbb
pop
add
outsb
sbb
jns
test
xor
loopne
shlb
pop
pop
out
xor
mov
jle
bswap
call
adc
pop
add
jno
cltd
sub
shrb
lcall
loop
orl
fisubrl
or
add
pop
add
clc
xchg
or
dec
imull
adc
femms
inc
aam
push
jmp
add
pop
in
sbb
jmp
xchg
in
fcompl
or
add
xor
jmp
push
jb
jmp
xor
xlat
lahf
std
notb
push
stos
mov
aam
clc
aas
mov
popf
jnp
stos
push
xchg
and
je
lcall
and
cmp
out
jne
adc
lock
orl
aaa
cmp
ficompl
mov
and
test
decl
out
jno
loop
add
fidivrl
pop
pop
pop
xchg
fisttps
and
inc
cltd
sbb
es
and
clc
mov
addb
aam
mov
fimull
out
xor
testb
bound
mov
pop
push
fidivrl
xor
push
rclb
jmp
push
lds
lods
cmp
cld
pop
adc
mov
sbb
les
pop
addb
fnstcw
daa
dec
mov
ret
mov
or
cmc
lret
inc
xchg
sarb
xorl
enter
outsb
jo
lcall
fidivs
push
loopne
pop
test
or
nop
dec
cltd
or
push
cmp
divl
test
ffreep
xchg
leave
xlat
out
sbb
mov
xor
push
mov
sbb
es
jmp
xchg
adc
mov
fs
enter
xchg
sub
fistps
ds
lock
std
jbe
mov
insl
and
lods
ret
in
fldl
call
sub
add
adcb
iret
scas
pushf
call
test
pop
call
ja
dec
cmc
test
inc
ja
shlb
stos
xchg
test
sti
pusha
adc
and
movsl
cltd
test
inc
insb
hlt
fstpt
std
or
push
sub
icebp
mov
dec
and
xor
mov
mov
dec
roll
adc
dec
jg
pop
in
dec
xchg
push
icebp
xchg
in
and
out
mov
mov
je
scas
imul
pop
or
mov
in
imul
mov
pop
aad
xchg
push
mov
fwait
mov
call
test
jecxz
add
loope
pop
ja
fmull
out
or
jp
adc
ljmp
xlat
outsl
pop
fmuls
es
cmpsb
bound
mov
dec
or
add
in
xchg
jmp
ret
dec
push
push
ret
jmp
mov
dec
fcmove
xchg
mov
jp
je
or
xchg
das
nop
mov
cmp
and
out
xchg
inc
dec
or
clc
push
sbb
ljmp
adc
dec
pop
jo
push
cli
test
bound
jg
and
fcmovb
sbb
data16
sbb
clc
xorl
cs
dec
pushl
add
repnz
repnz
ret
cmp
outsl
mov
inc
dec
ljmp
loopne
aaa
mov
ficoms
gs
fiaddl
mov
and
aaa
lcall
xchg
mov
inc
call
jno
mov
es
xor
mov
jmp
and
clc
sbb
jno
int3
dec
cmp
sbbl
sahf
adc
negb
fldl
sub
mov
and
sbb
pop
add
xchg
cmp
pop
fsubrp
sbb
mov
and
mov
mov
int3
dec
cmp
sbb
sub
push
test
xchg
mov
or
jp
ljmp
mov
test
ljmp
lea
and
test
inc
dec
inc
jb
xchg
adc
pop
ret
stos
inc
rcrb
aam
fisubrl
fistpll
push
cmp
add
push
cli
ja
outsl
outsl
std
xor
dec
pop
lret
loopne
sub
enter
inc
ret
inc
or
fs
shlb
fcom
jo
js
lods
jg
scas
xchg
cwtl
bound
mov
add
ljmp
or
sub
mov
stos
andl
incb
dec
decb
sub
lods
add
imul
hlt
mov
mov
scas
xor
cmp
mov
dec
add
mov
cmpsl
adcl
mov
clc
xchg
orl
ret
cld
inc
push
aaa
mov
scas
rcrb
shlb
adc
xorb
add
jg
add
sahf
lcall
cld
movsb
rcrb
push
push
test
insb
sub
pusha
sahf
paddb
adc
xchg
jae
jnp
sbb
inc
xor
jbe
outsb
pop
and
adc
and
adc
int
jo
cmc
or
sahf
pop
aam
js
pop
sub
xor
mov
xchg
sub
fst
insb
cli
push
or
cli
adc
test
enter
fistl
sub
dec
xabort
push
jg
adc
ja
nop
rcrb
enter
or
xchg
pushl
push
sub
jl
xor
sbb
xchg
lods
mov
sti
pop
mov
cld
jb
dec
add
mov
push
adc
inc
mov
rclb
repnz
add
and
mov
enter
xor
outsl
rolb
and
or
jle
les
cmp
pop
sarb
inc
cmp
sbb
mov
push
loope
mov
mov
in
lret
aam
outsb
add
test
dec
in
bound
mov
ret
inc
add
inc
repz
xchg
mov
loope
mov
out
cmp
pop
shlb
sahf
mov
cmpb
adc
xchg
std
lea
fstp
cld
call
std
pop
and
popf
push
jp
pop
inc
loope
xorb
xor
jge
sti
cmp
inc
aam
shrb
shlb
test
cmp
adc
ljmp
add
cmp
orl
movsb
outsb
fwait
mov
push
push
push
push
pop
sbb
mov
std
jo
jge
orb
sbb
icebp
jecxz
pop
sub
push
xor
jo
enter
and
xor
test
out
or
fs
filds
es
mov
imul
or
mov
fisttpl
fs
jp
jge
xchg
inc
std
xor
ljmp
hlt
inc
xchg
inc
jp
aad
sarl
or
lods
adc
int3
subb
clc
lods
fwait
xor
xor
jecxz
hlt
sti
mov
dec
cmpb
cmpsl
xor
mov
lcall
add
popa
out
mov
ja
outsl
test
add
test
lds
add
mov
ret
mov
or
rorl
mov
mov
sbb
xor
cli
sarb
add
scas
sbb
rclb
imul
decl
stos
push
push
daa
mov
mov
std
xor
inc
lock
lret
mov
loop
xor
mov
sub
ret
cmp
js
stc
call
sbb
jecxz
or
jp,pn
sbb
adc
xor
jo
mov
cwtl
add
and
insl
mov
sub
call
mov
mov
adc
pop
call
data16
jle
and
push
mov
pop
rolb
pop
out
rcll
ss
fimull
mov
add
push
mov
cmpsb
popa
jnp
mov
mov
cld
call
adc
jp
ljmp
repnz
pop
add
cmp
inc
add
adc
mov
cmp
sub
adc
jno
adcb
mov
pusha
rcl
and
push
cmp
fidivs
cmp
pop
push
fiaddl
mov
inc
pop
sbb
lods
movsb
push
mov
sti
test
test
inc
decb
and
xchg
pop
mov
clc
sub
lea
shll
fbld
adc
into
xchg
repnz
popf
add
dec
xchg
and
jmp
xchg
xchg
fisttps
outsl
xor
push
jmp
fcompl
incl
lods
jmp
fwait
mov
shrl
and
mov
jge
es
pop
sarb
aad
movsb
loopne
js
fisubrl
inc
jns
pop
sub
mov
pushf
ljmp
js
push
nop
insl
pusha
sahf
inc
jbe
sub
sbb
icebp
cmpl
cmp
test
pop
and
or
nop
js
push
mov
call
fs
add
pusha
fiaddl
ret
sahf
mov
push
outsb
imul
sub
bound
mov
pusha
outsb
movsb
mov
pop
inc
lock
fldcw
outsb
xor
inc
pop
dec
or
cli
dec
push
jmp
jb
jnp
call
cmp
cld
mov
lods
adc
cmp
mov
in
xor
insl
push
xchg
push
or
lods
sbb
lea
adc
cmpsl
daa
lock
add
pushf
pop
sub
jmp
rol
lahf
inc
sub
cmpsb
pop
and
xchg
ret
insb
fimuls
je
ret
stc
and
daa
aas
gs
nop
mov
adc
mov
mov
int3
and
andb
in
mov
adc
inc
daa
mov
sub
mov
pop
sbbb
or
incb
add
cmp
mov
sub
mov
imul
cmp
add
push
imull
mov
push
pop
sub
incl
pop
dec
fnsave
int
fs
ds
shrl
mov
vmovsd
insb
mov
push
push
sbb
es
add
cmp
or
cld
mov
sbb
iret
nop
mov
jg
push
ret
ret
inc
pop
insb
cli
sub
jl
rolb
mov
lahf
mov
lock
movsl
mov
pop
ror
loop
xchg
pushl
in
pop
mov
stos
sbb
aam
pop
inc
sbb
dec
out
lret
lret
sbbl
inc
ja
rcrb
pop
clc
lcall
cmp
pop
mov
mov
add
jae
jle
add
test
pusha
inc
data16
out
dec
sbb
test
mov
rorl
push
add
cmc
fcmovnbe
int3
mov
rolb
out
push
fsubp
decl
inc
mov
fcomps
add
cmp
into
popf
mov
fcom
das
inc
ret
loope
jge
lcall
add
pusha
cmp
int
add
jge
aam
xor
lcall
mov
sbb
and
pop
insl
call
xchg
sub
aad
cli
ljmp
dec
or
imul
jmp
mov
out
pop
lock
repnz
jp
cmc
adc
cmpsb
shlb
cmp
push
mov
in
stos
mov
bound
xor
add
add
mov
test
add
fldcw
sub
das
add
adc
std
aas
mov
inc
inc
adc
test
mov
pop
imul
pop
or
loop
lock
outsl
cld
xchg
jle
adcl
and
mov
pop
xor
lret
mov
inc
xchg
push
dec
mov
or
in
jmp
sti
in
mov
aas
into
int
or
jns
rdpmc
cs
push
subl
ret
mov
scas
sub
into
arpl
ja
pusha
into
call
decl
mov
mov
or
push
mov
adc
adc
cmp
cmp
out
outsb
je
std
cmp
and
cmc
add
inc
rorb
lahf
int
int3
pop
adc
dec
ret
adcl
cmp
data16
cmp
mov
incl
mov
dec
js
jo
xchg
mov
jmp
xchg
sub
js
or
push
inc
shlb
add
sbb
fistpll
mov
dec
xlat
mov
push
sbb
call
jg
add
mov
mov
jl
fdiv
das
lret
xor
xor
and
dec
mov
lock
ljmp
repnz
xor
jno
js
cwtl
into
jg
ret
jnp
add
pop
xor
lods
es
and
push
push
test
dec
jbe
bound
sti
pop
or
cmp
mov
rorl
in
ret
mov
push
jbe
dec
outsl
or
daa
mov
gs
mov
hlt
inc
pop
dec
or
daa
and
xchg
sbb
or
push
clc
aaa
jecxz
lock
push
jno
dec
jecxz
orb
push
sub
fwait
or
popf
mov
aad
clc
int
insl
push
and
pop
movsl
outsb
push
hlt
push
cmpsl
outsl
test
mov
add
les
stos
fists
jno
mov
mov
xchg
loop
scas
jle
mov
jmp
sbbb
aaa
sbb
mov
cld
add
mov
inc
ror
pop
into
fiaddl
mov
in
out
incb
gs
push
pop
xor
push
adc
push
icebp
push
ljmp
xor
jmp
jbe,pn
out
shll
icebp
es
fwait
dec
jl
push
sbb
mov
fists
add
jg
adc
pop
push
ss
inc
xchg
xchg
xor
add
xchg
inc
stos
pusha
fimull
jmp
cmpsb
sbb
lock
push
mov
gs
test
cmp
mov
lods
orb
scas
adc
add
mov
ds
mov
xorl
sbb
dec
adc
jnp
sub
ljmp
xor
in
jmp
in
or
xchg
cmp
push
xlat
or
pop
lret
notl
adc
nop
pop
sbb
push
movsb
aad
fiadds
int3
adc
test
movsl
aad
rorb
xor
push
push
push
mov
pcmpeqw
push
cs
sbbl
xor
pop
mov
mov
arpl
cwtl
inc
pusha
lock
dec
or
addb
lds
jle
insb
cmp
sbb
adc
mov
adc
lds
mov
out
nop
test
in
add
jg
cltd
mov
sbb
jbe
mov
data16
imul
int
js
ret
ficomps
popa
jne
or
jnp
aad
mov
push
xchg
shl
hlt
mov
ficoms
rcrl
mov
inc
inc
sub
ret
dec
dec
mov
sub
xchg
and
lods
sbb
or
test
dec
jne
mov
xor
mov
fs
inc
cli
hlt
adc
push
cmp
inc
decl
dec
lods
cmpsl
shll
sahf
cmp
mov
loopne
pop
push
lcall
add
fwait
aas
inc
cmp
rol
outsb
xor
stos
pop
idivb
sub
adc
icebp
jo
adc
inc
cld
pop
mov
insb
bound
pop
fs
xor
add
scas
mov
mov
xchg
std
mov
xchg
clc
call
xchg
adc
pop
mov
sbbl
pop
push
mov
out
jp
xchg
loopne
jne
fcompl
adc
pop
pop
dec
mov
sbb
pop
stos
push
je
adc
lods
jmp
subb
push
mov
dec
sub
adc
out
fistps
add
scas
sbb
cmp
fidivrs
fs
push
in
adc
jl
loop
cli
or
adc
mov
mov
sub
sub
xchg
hlt
pop
popa
stos
imul
pop
and
clc
das
push
aam
push
mov
inc
mul
rclb
cwtl
fs
sbb
inc
push
mov
fwait
mov
mov
rolb
push
jle
jg
and
push
jo
sbb
push
lds
decl
mov
xor
mov
notb
add
dec
cvtdq2ps
in
in
adc
ss
push
add
mov
sub
and
jo
pop
jbe
imul
lcall
sahf
mov
call
inc
test
or
lea
dec
out
xchg
sahf
mov
sahf
je,pn
notb
cmp
sub
test
lahf
jge
movsl
out
out
push
add
and
inc
data16
pop
je
fwait
adc
jae
scas
clc
dec
std
xchg
call
ror
loopne
fcomps
jns
pop
cmc
xchg
shlb
bound
std
push
inc
mov
clc
pop
xorb
dec
and
mov
dec
sbb
loopne
jle
inc
push
adc
seto
mov
jmp
loopne
dec
fcompl
fs
xor
or
movsb
cmp
jae
pop
jl
inc
roll
xor
cmp
sbb
popf
cli
call
cmp
mov
clc
push
mov
push
stos
int
cs
movsl
test
push
call
push
mov
adc
mov
enter
or
or
jno
and
and
push
xchg
test
sbb
push
cmp
jle
call
jge
sbb
lock
adc
inc
loopne
jbe
inc
mov
or
pop
xor
pusha
lret
adc
ficoms
movsl
add
das
lcall
insl
call
mov
push
insl
loop
fbld
call
mov
mov
or
mov
rorl
andl
filds
popa
int3
popf
dec
les
pop
ja
inc
fdivrs
cltd
inc
sub
and
and
add
push
jb
mov
xchg
mov
pop
fmull
cmp
sbb
xchg
mov
inc
adc
cmp
jne
xor
sbb
add
xor
enter
sti
stos
pop
aam
pop
or
sub
dec
dec
jo
adc
shlb
decl
mov
ret
cs
mov
mov
jmp
dec
pop
test
lahf
inc
push
roll
nop
sarb
jl
jmp
jo
push
movsl
scas
pop
shl
daa
and
clc
jne
imul
pusha
xchg
loopne
movsb
cmp
mov
call
fisttps
adcb
int
test
pop
inc
jnp
popa
dec
inc
jns
cmp
in
ljmp
add
xchg
stos
or
add
sbb
push
xchg
cmp
mov
movsb
mov
jle
mov
ljmp
out
ljmp
test
push
cwtl
xor
sub
jbe
mov
or
in
push
in
insb
aaa
shrl
or
adc
xor
sub
jbe
xchg
or
add
or
adc
rcrl
data16
push
mov
add
or
std
out
dec
inc
cltd
pusha
mov
xchg
data16
ljmp
filds
add
push
mov
mov
and
push
inc
into
or
adc
xor
add
pusha
mov
je
fiadds
nop
fidivrs
pop
add
sub
in
das
fdivrs
popf
cmp
mov
lds
or
push
mov
pop
xchg
add
xchg
xor
and
mov
rorb
adc
add
sbb
fsubl
sbb
les
push
in
je
jo
sbb
ret
inc
xor
or
out
in
add
lahf
imul
das
sub
mov
nop
xor
or
sbb
arpl
dec
pop
insb
pushf
push
clc
mov
sub
loop
adc
jo
add
cmp
mov
mov
into
stos
fdivrp
iret
iret
jno
cmc
aad
mov
and
test
mov
sub
dec
push
adc
fucom
icebp
or
inc
incl
or
dec
mov
mov
xor
inc
mov
loop
mov
or
mov
add
test
fdivs
pop
xchg
mov
sub
sub
popf
repz
mov
ret
xchg
dec
fdivrp
sub
dec
sahf
fcmovnb
push
dec
sbb
test
orl
dec
adc
pop
dec
imul
push
out
push
and
mov
jge
add
jbe
sub
cmp
cmpsl
push
push
out
inc
inc
adc
ficomps
fs
cwtl
dec
push
jns
pop
mov
and
jo
test
outsb
push
cld
in
and
test
mov
mov
int
shll
inc
lret
lock
fucomi
aaa
adc
mov
add
lods
jo
mov
movsb
xchg
out
xor
sbb
mov
fcmovnb
shrl
xchg
mov
and
scas
idivb
add
ret
pop
mov
movsb
adc
mov
inc
xor
pop
lcall
add
rcr
fdivrl
lcall
cmc
lds
cli
jnp
xchg
cmp
cmp
aam
mov
sbb
mov
mov
fistps
cmp
in
mov
in
jecxz
and
loopne
mov
pop
xchg
sbb
mov
mov
lock
insl
dec
jl
mov
xchg
jmp
or
ss
or
sub
mov
sub
pop
jg
add
call
fsubs
call
sarl
jbe
inc
cwtl
ljmp
push
or
jl
mov
sbb
jbe
push
rclb
xchg
fidivrl
pop
int
jecxz
and
fsubs
ss
loopne
scas
ret
mov
movb
and
xchg
rolb
adc
and
ds
loop
pop
outsb
xchg
inc
out
add
imul
mov
xchg
add
clc
xchg
movsb
inc
and
mov
adc
cs
push
cmpb
mov
or
jp
cmpsb
imul
mov
movsl
aaa
aad
cmpsb
mov
lea
xchg
jp
push
pop
test
mov
mov
mov
hlt
push
sbb
add
or
js
insl
out
cmp
mov
and
insl
add
jae
loope
push
add
add
mov
mov
push
popa
and
adc
je
xchg
sbb
adc
shrb
xor
fdivp
and
cmp
loopne
push
dec
je
adc
mov
test
and
fsts
mov
push
mov
xor
es
fadds
outsb
xchg
call
shll
jge
pop
jo
jg
shlb
mov
add
mov
xchg
in
sub
sub
add
shr
and
push
stos
mov
xor
xor
dec
ret
test
aad
rcrb
mov
imulb
adc
fists
das
jecxz
dec
fidivrs
int3
jl
sti
outsb
add
pop
add
cs
ljmp
testb
jl
mov
dec
hlt
rorl
jne
cmp
or
pusha
add
je
out
adc
imul
adc
enter
or
shll
inc
pop
push
adc
pop
cwtl
popf
js
in
mov
in
in
std
rclb
add
std
fucomip
fnclex
pushaw
lahf
movsb
mov
or
push
lret
pop
nop
adc
add
insb
ljmp
push
add
cmp
mov
aas
test
mov
xor
cmpsb
sarl
hlt
mov
das
movsb
test
add
movsb
push
jl
inc
xor
sub
fisttpl
mov
imul
loop
ss
mov
nop
adc
sar
stos
adc
pop
mov
jb
sbb
push
sbb
mov
test
mov
sub
rolb
push
ret
dec
mov
fdivrl
xchg
loopne
dec
cmp
aas
je
mov
sbb
andb
rcrl
sub
mov
add
lahf
xor
pop
jmp
jo
pop
inc
ss
nop
add
adc
dec
mov
mov
popa
pop
fists
outsl
push
xchg
pop
xchg
out
adc
clc
ds
sti
or
adc
push
les
rorb
xchg
insb
jecxz
movsb
shlb
fbstp
inc
leave
lahf
jb
cmp
mov
cmp
pop
push
lds
or
cli
das
aam
push
pop
lret
fldenv
cltd
ljmp
lods
fcomps
loope
call
cmp
jp
xchg
xchg
cmpsb
sub
pop
mov
popf
ds
divb
pusha
scas
fiaddl
out
shlb
out
ljmp
mov
xchg
inc
lcall
test
push
icebp
mov
dec
dec
or
test
sar
push
sub
cmp
and
adcb
clc
aad
rcrl
rcrb
sti
incl
push
add
mov
and
push
adc
pop
fsubp
or
mov
sbb
add
push
push
mov
aad
test
xchg
ds
jecxz
adc
inc
clc
jbe
xor
fdivrp
les
mov
pop
stos
mov
in
std
subb
sbb
int
or
mov
orl
cld
lcall
loopne
movsl
ret
xor
mov
push
fistl
stos
addl
sbb
xchg
sbb
clc
push
cwtl
mov
insb
pop
cmp
sbb
data16
mov
inc
fisttps
call
out
testb
mov
xchg
mov
cwtl
insb
fsubr
jne
call
xor
setb
xor
test
lock
cli
out
dec
data16
ljmp
incl
xchg
mov
inc
fs
or
filds
jb
push
cmp
jg
add
xor
out
movsb
mov
mov
jns
lret
stc
xor
jp
incb
fstl
fwait
daa
push
xchg
movsb
dec
andb
ret
lock
jle
dec
mov
jmp
xchg
testb
fadds
lock
shlb
mov
pop
jmp
sub
xor
mov
xchg
adc
ret
push
sub
or
out
cltd
inc
pop
sub
jl
inc
mov
inc
sub
std
bound
stos
push
add
cmp
lret
push
sarl
out
je
repnz
ljmp
testl
mov
js
and
call
fwait
sbb
cmc
cmp
loope
pop
mov
xlat
mov
mov
mov
rorb
adc
subb
loop
sub
lea
xchg
xor
and
and
loopw
cmp
std
ret
and
lock
jb
sbbb
sbb
outsl
adc
push
daa
mov
stc
dec
incl
xchg
dec
bound
dec
push
mov
mov
in
cmpl
fs
in
incl
enter
dec
pop
mov
testb
inc
dec
jg
fsubr
es
subb
enter
insb
add
mov
sbb
add
je
bound
pop
add
push
mov
push
mov
mov
shll
lcall
push
pop
out
mov
and
clc
inc
icebp
jg
jp
je
int
push
pop
mov
leave
xchg
sbbb
pcmpgtw
or
jnp
loope
add
lds
mov
sub
adc
lods
sub
jp
loope
fwait
clc
ds
mov
pop
cmp
test
stos
inc
outsl
pop
fcoms
js
and
cmp
pop
inc
inc
xor
clc
mov
mov
idivb
jb
test
or
outsl
push
push
and
shll
cmpb
stos
add
cmp
sti
stos
adcl
call
aaa
out
dec
push
jg
das
dec
jbe
insb
scas
aam
or
xchg
inc
sub
sbb
mov
mov
incl
sub
sub
dec
int3
int
jno
adc
rorb
lea
aas
mov
mov
sub
call
push
insb
add
adc
arpl
xchg
test
dec
pop
inc
xchg
incl
inc
jmp
mov
mov
lcall
mov
push
bound
ret
gs
adc
adc
dec
icebp
inc
repz
mov
push
scas
inc
aaa
dec
or
add
and
repnz
fsubrs
pop
or
popa
jmp
push
dec
jmp
enter
inc
mov
add
sub
mov
lea
cmp
add
jno
jle
clc
lcall
add
mov
pop
mov
repz
shrb
faddl
cld
test
add
xchg
adc
and
cmp
pop
sub
xchg
faddl
and
and
jo
mov
rcl
sahf
push
mov
sbb
or
sbb
adc
sub
ljmp
mov
mov
arpl
sti
add
jo
mov
cli
pushl
sbb
xchg
das
dec
rcr
mov
xor
mov
and
call
ja
push
bound
push
add
mov
test
neg
pop
and
mov
sub
add
push
jae
outsl
adcl
cmp
or
in
xor
fincstp
leave
cmpsb
fcom
push
xchg
push
xor
inc
cmp
pop
xor
lods
and
mov
xchg
lods
enter
fsubl
push
popa
dec
push
dec
cld
pop
and
sarb
and
dec
ds
xor
or
js
in
cmc
and
or
repz
add
pop
lds
add
add
add
adcl
pop
rorb
cmp
jo
arpl
inc
sar
push
std
in
test
movsb
je
sbb
cwtl
dec
and
and
jle
add
cmpsb
mov
ljmp
or
stos
dec
sub
sub
pop
mov
mov
insb
mov
shr
outsb
push
movsl
push
lock
andl
push
or
xor
add
and
iret
add
outsl
push
pop
mov
sbb
push
outsb
fimuls
dec
sbb
jo
sbb
stos
fisubrs
add
js
ljmp
mov
cli
cmpsb
add
mov
cli
sbb
cmpb
enter
mov
mov
mov
sbb
and
pop
fsubrs
std
xor
sbb
cld
cli
adc
push
shll
cld
arpl
icebp
sahf
inc
cmp
out
add
pop
in
mov
mov
jl
pop
inc
cmc
jge
xchg
dec
inc
mov
and
arpl
push
mov
dec
inc
rolb
adcl
adc
rcrb
in
jo
push
out
jb
mov
inc
ljmp
fstpl
ss
and
adc
xlat
adc
jbe,pt
insb
popa
in
dec
pandn
sarl
mov
mov
and
xchg
scas
aam
xor
pop
inc
push
jp
rorl
jno
xor
arpl
insl
add
fbstp
or
mov
xchg
jo
lods
sar
pusha
mov
xchg
or
bound
icebp
adc
in
das
dec
loop
pop
add
sarb
xchg
fs
jno
call
add
mov
scas
jge
xchg
loopne
adc
sarb
jge
jb
mov
test
loopne
pop
lds
xchg
loopne
jge
cltd
arpl
decl
cld
dec
cs
std
and
xchg
out
xor
mov
inc
sbb
lock
pop
xchg
ljmp
inc
xchg
outsb
cli
mov
mov
lcall
cmpsl
call
rcrl
xor
data16
pop
fs
ss
ljmp
cmp
lds
xchg
xlat
pusha
mov
cmp
dec
inc
sub
mov
mov
push
sahf
iret
rclb
inc
js
mov
jno
movsl
and
mov
outsb
ljmp
mov
xchg
push
sub
push
pop
mov
aam
fldl
adc
ja
mov
mov
rcrl
push
les
jb
leave
test
cli
shll
mov
outsb
mov
cld
mov
daa
add
push
pop
gs
inc
ljmp
jne
xor
pop
push
xor
push
xor
mov
sbb
cld
gs
xchg
pop
shlb
push
ljmp
sbb
add
adc
push
fnstsw
mov
inc
loop
mov
jo
fcomi
jo
sub
xchg
xor
mov
adc
addr16
call
jg
mov
push
lock
jmp
addl
add
das
fs
sbbl
cmpl
daa
sub
push
push
pop
lods
leave
sbb
sub
cmp
pushf
mov
dec
rolb
jmp
ja
and
in
lods
adc
pop
xchg
sub
clc
ljmp
cmp
ret
push
fsubs
jo
stos
addr16
loop
mov
leave
mov
push
aam
sub
inc
fnstenv
es
jg
mov
xchg
or
pushf
and
jg
addr16
dec
cld
addb
push
sbb
push
addr16
lock
xor
cmp
jge
dec
add
lock
mov
cmpl
sahf
xor
push
ss
mov
daa
sub
dec
incl
sti
adc
or
imul
or
inc
jmp
push
scas
in
add
cld
dec
lods
cltd
imul
mov
lret
fsubrp
push
in
icebp
call
push
jnp
jl
cmpsb
push
push
mov
and
xchg
subb
add
insl
popa
inc
mov
aaa
lods
add
leave
das
push
gs
les
cmp
push
push
cld
sub
jns
xchg
imul
jp
int3
rolb
adc
loope
add
cli
bound
jg
lods
push
jecxz
sbb
iret
in
push
xchg
cmpsb
adc
test
adc
xorb
outsb
push
add
add
cmpsl
lret
shrb
mov
pop
pushf
add
les
mov
mov
lods
test
cmp
fldenv
out
shl
stos
loop
incl
fdivr
mov
fildll
lret
xor
or
std
or
xor
add
imul
pop
stc
fiadds
jmp
mov
int
ss
pop
out
je
mov
xchg
testl
testb
or
incb
cmp
push
add
cwtl
insb
movsb
add
mov
js
loop
push
sub
dec
cs
and
popa
sbb
loope
clc
xlat
pop
incb
adc
mov
push
hlt
or
cmp
sbb
movl
nop
adc
aam
call
xchg
sbb
aam
add
jo
in
cmp
mov
mov
push
ds
jo
push
mov
clc
ljmp
out
aam
sti
pop
loopne
dec
mov
addr16
xor
das
loopne
lret
adc
sub
in
add
mov
mov
clc
xor
rcl
sbb
mov
push
sbb
pop
push
pop
nop
dec
mov
decb
icebp
sub
ljmp
mov
mov
cmp
push
cld
sti
loopne
cld
cmpl
je
data16
pop
xor
adc
inc
xor
aad
cwtl
inc
jnp
test
push
in
call
push
or
cmp
pushf
fs
xchg
push
sbb
jmp
fisubrl
or
popf
xchg
js
icebp
and
nop
fimuls
sti
and
call
adc
push
xor
subb
daa
negl
lret
inc
jnp
xor
ljmp
repnz
add
sbb
xchg
xchg
cltd
adc
stos
loop
mov
cli
mov
mov
or
inc
stos
jnp
or
roll
ja
mov
dec
std
jne
out
or
test
mov
jbe
mov
lods
sti
repz
inc
mov
out
mov
jmp
mov
xor
ret
mov
add
das
sub
inc
clc
xor
cmc
test
mov
mov
outsl
or
inc
jmp
mov
and
or
lods
push
addr16
mov
bound
fsubrs
jmp
mov
mov
sbb
gs
movsb
das
add
les
mov
xchg
js
mov
repnz
sbb
xchg
scas
cmp
jne
imul
out
sbb
mov
jo,pn
or
aad
and
inc
aas
xor
les
xor
movsb
fistpl
sbb
sub
sub
sbb
push
jl
jl
rorl
test
repz
fadd
aas
adc
subb
or
push
mov
cmp
nop
stos
clc
mov
cmp
add
xchg
push
inc
jae
pop
lcall
and
xchg
push
lock
sbb
adc
loope
pop
stos
popf
aam
loopne
inc
aam
test
mov
adc
dec
in
sti
orl
xchg
add
movb
cmpl
pop
popf
das
cmp
jmp
inc
leave
lds
repz
fidivl
data16
in
sti
int3
xchg
fs
incl
xor
les
or
add
adc
cld
lods
sbb
decb
push
or
xor
jge
rcl
movl
add
dec
jle
jg
sbb
mov
ljmp
fldcw
dec
or
lcall
inc
xlat
mov
and
les
fisubrl
mov
out
add
dec
add
movsl
sub
movsb
jne
dec
cmp
push
push
lcall
or
adc
pushw
add
in
mov
xor
jle
mov
dec
or
into
stos
hlt
jge
ret
andb
xor
xchg
addb
cmp
adc
cmp
and
fistps
jbe
mov
scas
pop
fisubl
je
ja
leave
push
insb
in
inc
push
or
shrl
sbb
ja
sbb
push
cld
ljmp
aaa
mov
jbe
and
frstor
fstl
xchg
jno
rolb
adc
rorb
mov
incl
jo
mov
std
movsb
loop
je
test
cmp
dec
movsl
or
loopne
mov
clc
leave
call
xchg
sbb
and
pusha
dec
cmpsl
mov
repz
xchg
mov
fistps
sbb
hlt
andl
addb
mov
push
ffreep
movsl
xchg
push
dec
and
in
mov
add
xlat
mov
lea
and
shl
xor
jecxz
test
mov
andl
lcall
loope
sub
call
pushl
xor
call
orb
mov
dec
xchg
in
xchg
xchg
and
orl
jns
lret
cld
push
pushf
rolb
int
mov
clc
inc
cmp
sbb
into
xor
pop
or
xor
add
sbb
popf
int3
and
sbb
mov
cmpsl
inc
ret
outsl
pop
add
push
lahf
dec
xlat
cs
push
gs
gs
pop
dec
mov
test
data16
popa
jbe
inc
test
inc
mov
ljmp
push
pop
cmc
xchg
popf
push
cmpl
sti
push
cli
inc
sub
pusha
loop
and
add
jnp
pop
stc
outsb
inc
pop
lods
js
mov
les
adc
std
dec
push
mov
push
add
mov
loopne
adc
or
jecxz
out
repz
xor
pcmpeqw
ja
or
idivb
dec
cli
xlat
outsl
pop
sbb
jne
ljmp
cmpsb
jg
hlt
test
mov
lock
add
mov
mov
push
jmp
test
scas
sbbb
jl
aad
movl
pop
rcrl
xchg
mov
jbe
jmp
imul
push
inc
out
clc
sbb
ret
outsl
hlt
add
fadds
pop
movsl
inc
mov
and
out
mov
loopne
dec
aaa
loope
sbb
lret
inc
pop
cmc
sub
aam
xchg
mov
fdivs
popa
jg
add
das
adc
dec
xor
jge
mov
int
xchg
mov
arpl
jo
inc
xchg
or
hlt
cmp
push
stc
mov
popa
ljmp
jg
lock
lret
popa
cmp
cmpsl
mov
insb
inc
lds
push
xchg
test
das
dec
dec
test
pop
pop
push
incl
jge
and
jne
or
xor
inc
xor
adc
push
jbe
bts
sbb
mov
cli
pop
stos
mov
idivb
lret
inc
mov
mov
cmc
cltd
sbb
fs
lds
js
cwtl
dec
lret
mov
sub
pusha
repz
popa
stc
inc
jbe
rolb
push
push
test
xlat
ja
stos
je
dec
xlat
pop
addb
jp
mov
push
push
add
icebp
sub
nop
mov
aaa
fcoms
rcll
pushf
lcall
jae
cltd
int
cmp
inc
mov
fsubrs
cmpb
iret
lods
loopne
rolb
inc
jp
or
rol
sbb
jo
in
mov
sub
fs
insb
jb
pop
or
and
outsb
pop
jge
mov
mov
or
fdiv
mov
xchg
xchg
cmpl
es
or
scas
jb
in
shrl
mov
out
xchg
xchg
clc
pop
add
in
idivb
iret
adc
cmpsb
xor
out
subl
sub
or
mov
mov
cld
cmp
add
push
push
je
imul
fisttpll
lock
decl
xchg
xor
add
xchg
cmc
insb
mov
jg
mov
push
or
icebp
push
add
out
mov
mov
idiv
xlat
test
mov
scas
sub
and
fcompl
and
cld
xchg
ret
mov
add
mov
push
cld
push
fs
decl
push
and
mov
inc
jecxz
outsl
mov
shl
nop
jge
xor
pusha
ss
fisttps
loopne
xchg
call
andb
push
xchg
xor
fists
lahf
adc
lds
jnp
lock
lods
inc
rcrl
or
pop
lcall
in
stos
jg
or
sub
into
xlat
rcl
out
mov
jb
cmp
mov
dec
lcall
cwtl
push
add
mov
adc
andl
ljmp
add
pop
cmpsb
mov
xor
or
cld
fxch
leave
add
dec
xchg
cwtl
push
inc
fildll
loopne
or
hlt
sbb
push
mov
std
in
sbb
rorl
test
inc
rclb
idiv
sub
sbb
sti
fadds
repnz
mov
push
sbbl
in
sbb
push
out
outsl
pop
dec
sub
pushf
cltd
jge
out
leave
repz
aam
jge
mov
sub
cmp
and
ja
or
dec
cmp
test
pop
call
pop
adc
addb
cmp
jg
jbe
loopne
mov
mov
ds
dec
dec
inc
inc
in
dec
fs
outsb
sar
mov
movsl
mov
out
jecxz
xchg
leave
inc
aam
push
jle
rolb
sub
stos
jmp
ret
pusha
pop
mov
jae
add
push
pop
cmp
fcmovbe
and
sub
xchg
in
xor
sub
and
jbe
and
test
cmp
std
push
leave
sti
mov
fwait
lea
sbb
cwtl
fs
xorb
lds
mov
cld
out
fwait
adc
out
cwtl
cli
mov
jb
push
mov
push
cli
incl
lcall
popa
mov
and
popa
aam
jge
call
cmpsl
jne
push
adc
sub
cmp
adc
add
sub
je
fisubrs
or
and
and
pop
subl
scas
in
shl
aas
cmp
cmp
mov
pop
scas
je
pop
fisttpl
es
insb
jns
cmp
xchg
mov
push
mov
adc
mov
hlt
fisubrs
notb
add
mov
cmp
clc
pop
push
xlat
mov
ret
into
imulb
xchg
sbb
movb
cmp
fbld
lahf
sub
mov
cli
fsubl
jno
decl
popf
sbbb
or
insl
mov
ja
cs
sbb
test
add
xor
pop
hlt
ljmp
xchg
add
mov
stos
ljmp
scas
loopne
scas
cmpsb
sub
jg
bound
add
int
add
ret
shlb
push
cli
jbe
cs
inc
push
lcall
mov
mov
repz
pop
add
and
out
mov
and
xchg
xchg
pop
arpl
mov
test
xchg
push
shll
idiv
sbb
push
lods
and
out
pushl
cmpsl
sbb
ret
sub
popf
adc
jecxz
jb
sub
movb
outsb
cli
and
or
add
lock
cli
xchg
cltd
xor
cmpsb
das
stos
dec
mov
and
inc
pop
subl
mov
stos
pusha
cld
mov
cvttps2pi
pop
leave
mov
inc
dec
inc
mov
pop
pusha
hlt
jg
test
push
cmp
xor
mov
adc
xchg
mov
pop
xchg
and
mov
ds
push
outsl
or
pop
jle
push
testl
adc
cmpsl
xor
outsl
in
ret
jmp
or
mov
ss
or
leave
jae
pusha
pop
leave
ja
paddd
jmp
and
push
or
imull
call
shll
insl
aas
push
inc
push
sub
and
xlat
sbb
outsb
cmp
jg
sub
pop
add
mov
or
inc
cmp
sub
cltd
cli
jne
or
mov
and
push
cld
sbb
dec
xor
xchg
pop
xchg
icebp
in
add
and
dec
jmp
mov
cld
sub
pop
icebp
sub
adc
int
jmp
test
push
push
xchg
ja
push
incb
pop
or
inc
inc
mov
pop
mov
adc
pop
or
mov
dec
mov
sbb
incl
inc
add
and
ffreep
jo
pop
fildl
test
add
sbb
loope
or
cmpsl
push
ret
int3
roll
or
push
push
push
aaa
jmp
mov
cli
testb
mov
xchg
andl
ja
data16
jb
jmp
push
aas
pop
inc
lods
sti
xor
dec
sub
fs
pop
in
das
sahf
jg
mov
sub
inc
mov
add
je
jl
mov
lods
xor
std
outsb
ljmp
pop
jno
jp
imul
iret
xchg
jge
cwtl
mov
jle
movsb
add
jge
mov
out
loope
jg,pt
das
out
sbb
fldl
add
sub
sub
decb
stc
mov
push
mov
inc
push
pop
subb
lods
sbb
cmpsl
hlt
dec
and
adc
das
jle
loopne
cmp
stos
pop
inc
mov
xchg
hlt
mov
xchg
xor
not
push
add
jl
add
lret
dec
push
adc
ljmp
sub
mov
sahf
pushl
sbb
rorb
cwtl
push
mov
xor
dec
adc
sbb
pop
add
rcrb
stos
or
xor
add
dec
mov
jl
incl
pop
ret
or
negb
outsb
pop
outsl
cld
dec
adc
or
loope
fs
imul
mov
mov
mov
dec
test
js
loop
idiv
pop
mov
scas
mov
pop
push
out
fcom
inc
pop
and
and
push
pop
lods
mov
jo
sbb
imul
cli
ss
mov
adc
push
xchg
ljmp
ljmp
pushf
arpl
shrl
decl
stos
in
arpl
inc
sar
dec
and
mov
lock
std
int
cmp
sbb
push
loopne
push
sti
clc
into
inc
xchg
test
or
fdivr
push
xor
aad
adc
pop
lods
clc
or
les
lock
xor
test
or
mov
adc
adc
outsl
lcall
rorl
lcall
jl
mov
mov
xor
pop
mov
cmpsl
fcomps
mov
adc
fidivs
push
scas
mov
incb
test
xor
bound
fcmovbe
in
ljmp
fs
lock
sbb
out
mov
or
or
pop
sbb
fs
mov
or
scas
push
fwait
test
int3
add
xchg
push
push
pop
push
jp
add
xor
adc
into
pop
sbb
inc
mov
ss
test
lock
mov
scas
in
orl
scas
mov
or
es
add
rorb
shl
dec
push
xchg
test
mov
fadds
orb
mov
fsubs
test
adc
je
cwtl
stos
int
dec
mov
popa
lret
inc
add
ljmp
in
adc
push
pop
jmp
iret
fistpl
sub
xchg
mov
add
push
add
hlt
jg
mov
cmp
add
mov
and
push
std
lcall
xor
add
nop
popa
or
sbb
insb
je
lret
or
cmp
mov
or
push
adc
test
outsb
sub
and
fadds
test
fnstsw
push
inc
pushl
sbb
or
mov
lock
out
notl
into
lea
sub
mov
xchg
sbb
out
sbb
or
lods
mov
push
sbb
jle
push
and
aam
mov
pop
fiadds
inc
cltd
add
pop
cmp
fnstsw
xlat
jb
lock
lods
mov
cmp
push
mov
je
or
sarb
gs
and
pop
xor
xlat
mov
or
adc
es
dec
sarl
mov
mov
cmp
adc
dec
push
jp
push
scas
ds
push
push
jmp
pop
xor
mov
add
mov
stc
test
mov
rcll
testb
pop
sahf
mov
loop
and
jp
cs
scas
jp
lahf
push
cmp
cltd
add
inc
lret
aaa
cwtl
into
clc
out
mov
add
shl
bound
fcomip
cmpsb
nop
faddl
outsl
jne
inc
and
shlb
sbb
push
sahf
aam
jae
mov
orb
cmp
ja
sub
ret
dec
stc
pop
pop
and
fistps
sbb
mov
mov
jecxz
mov
out
add
les
incb
xchg
insb
push
addl
mov
bound
mov
rorl
jae
pop
and
lahf
add
jb
cs
push
mov
xchg
call
lock
test
mov
shrb
inc
insl
add
pop
jl
pop
stos
clc
inc
pop
add
test
aas
call
jo
sbb
mov
mov
pop
shl
js
push
add
loopne
lahf
push
test
mov
or
xor
and
and
xchg
push
loopne
mov
pusha
push
jmp
fdivrs
int3
in
jge
mov
ljmp
fidivrl
add
pop
xchg
xor
scas
inc
faddp
jg
jae
aad
in
and
stos
mov
adc
or
call
mov
js
arpl
push
lret
and
xchg
add
pusha
test
or
or
xor
mov
cmpsb
mov
cmp
add
es
decb
push
mov
clc
sbb
jae
iret
lock
cltd
adc
push
jnp
push
add
push
push
ja
lahf
sub
jle
xchg
sub
faddl
shll
pop
sbb
aas
or
sbbb
icebp
xchg
jmp
je
jmp
and
xor
push
inc
pop
fs
imull
cmpsl
scas
add
add
jecxz
cli
clc
outsl
push
ret
mov
pop
lcall
mov
scas
lahf
les
mov
ds
xchg
mov
fs
cmpsl
xchg
fs
jo
ljmp
mov
bound
icebp
stc
xor
sub
cmp
xor
fdiv
call
std
imul
or
push
subb
sbb
adc
in
inc
xchg
jo
imul
push
in
sbbl
mov
stc
jns
pop
push
mov
icebp
aas
les
cmp
or
mov
jne
or
data16
or
clc
nop
outsb
cmp
xchg
outsb
jg
xlat
adc
push
pop
add
xor
in
dec
jmp
adc
ret
lahf
pushf
scas
cs
adc
sahf
xlat
cmp
imull
outsb
inc
dec
sub
int
je
out
and
movsb
mov
cmp
shll
loop
mov
jp
mov
ss
dec
jmp
inc
pop
cmc
dec
int3
ret
inc
xorb
mov
cmp
clc
sub
add
lods
faddl
and
shl
mov
mov
dec
popa
push
outsb
popl
data16
ficoms
add
mov
adc
fndisi(8087
aam
mov
mov
add
mov
jp
sub
inc
sti
lds
scas
mov
or
xchg
mov
xchg
jle
in
mov
jb
and
jp
push
dec
add
ret
mov
fistpl
testl
leave
loopne
scas
subl
mov
ljmp
pop
nop
jge
test
xor
push
test
pop
cmp
jae
sbbb
jo
xchg
add
sbb
mov
test
jns
data16
adc
mov
or
loop
jmp
or
pop
loop
adc
add
and
mov
dec
mov
loope,pt
sbb
out
xorb
enter
mov
mov
xor
xor
fldenv
jmp
xlat
daa
scas
pop
and
mov
add
sbb
movsl
and
in
addr16
call
xchg
or
mov
add
cwtl
mov
in
add
xor
out
aaa
in
xchg
mov
pop
adcl
or
aaa
xchg
lock
push
mov
push
adc
out
out
sbb
rolb
xchg
pop
jb
pop
jle
lock
test
jae
mov
sbb
xchg
stos
adc
insl
xor
lods
loope
clc
inc
pop
or
inc
dec
adc
push
mov
and
gs
adc
fbstp
add
jne
jl
sahf
sbb
dec
mov
fmull
sbbl
push
push
aas
add
call
adc
stc
push
xchg
clc
rcll
popf
mov
pop
fs
int3
sbb
push
mov
sub
cli
add
pop
and
mov
mov
mov
mov
push
cmp
add
mov
mov
jne
and
jae
mov
insb
sbb
jmp
xor
lds
push
sub
cmp
icebp
jnp
adcl
and
push
jb
or
lods
and
rcrb
cs
push
sti
pop
repnz
stos
dec
insl
sbb
dec
sbbb
sti
ret
nop
fimull
lret
sbb
aam
lods
nop
fiaddl
inc
ss
rol
mov
cmpsl
fld
pop
lds
cmc
push
sub
lods
test
cmpb
dec
andb
cmc
sub
jmp
lcall
test
pop
jecxz
test
fistps
rcl
call
pop
and
xor
gs
inc
xor
mull
push
cs
mov
mov
jecxz
roll
jbe
push
sub
es
pop
and
mulb
mov
pop
push
add
add
dec
xchg
pop
inc
shlb
cld
dec
push
and
dec
or
lcall
mov
jmp
adc
and
fisubrl
out
push
fwait
outsl
or
inc
inc
pop
in
stc
insb
stos
data16
mov
pop
push
jg
call
sub
xchg
mov
sbb
aam
or
add
cmp
mov
cmpsb
fsubrl
xor
decl
sbbl
movq
icebp
movsb
orb
and
mov
hlt
imul
fnop
push
hlt
or
nop
test
xchg
adc
jmp
testl
dec
rcrb
popf
aas
xor
cld
decl
int
ret
mulb
cmp
outsb
in
outsb
test
cld
fcomps
or
out
int3
push
sti
jg
ljmp
sub
out
jp
int
pop
add
xchg
dec
jae
dec
ss
or
into
inc
mov
xor
loope
out
fiadds
ficomps
outsl
loope
ljmp
and
adc
adc
push
inc
or
jbe
jp
test
push
lock
cli
iret
scas
inc
adc
addl
xor
sub
mov
sahf
cli
cli
int3
lret
mov
pop
std
insb
jp
fmuls
dec
cld
inc
rclb
or
add
cmpb
dec
loope
mov
mov
dec
cwtl
lock
xor
jno
call
mov
cmp
cmp
inc
cld
sub
mov
mov
and
sbb
divl
in
test
adcl
and
ret
in
jb
jb
pop
mov
sbb
outsb
mov
jge
jmp
loopne
gs
das
pop
incl
aaa
jl
or
cmc
ficoms
push
pop
aaa
pop
or
mov
loop
stos
sarl
outsb
in
mov
push
pop
lret
ret
inc
in
pop
pusha
shrb
lea
idivl
add
mov
ret
in
pop
shl
hlt
jmp
loopne
inc
inc
subb
xor
jl
mov
add
aam
adc
sbb
jmp
cmp
test
rcl
dec
mov
dec
adc
push
push
cmp
rcrb
and
and
mov
add
lock
cld
jb
test
mov
mov
fisubs
cmp
add
outsb
add
and
std
mov
xchg
les
cmp
and
adc
mov
loopne
test
sbb
iret
xchg
or
popf
xlat
int3
mov
dec
jl
mov
mov
dec
bound
mov
mov
jbe
cmpb
in
mov
dec
xlat
cmp
and
sub
push
shlb
loop
lds
popa
repnz
sbb
cmp
stos
sbb
push
add
push
xor
add
test
popa
xchg
lea
inc
cld
shlb
stos
push
push
xchg
fs
out
inc
adc
cmp
mov
push
scas
daa
test
dec
dec
and
movsb
cmc
sahf
jbe
rclb
lret
test
adc
int3
cmpsb
and
test
stos
ljmp
dec
push
xchg
cmp
sbb
inc
out
jno
push
pusha
mov
aam
addr16
and
inc
sub
call
std
sub
ljmp
inc
push
lret
mov
mov
pushf
pop
push
fmull
mov
fisttps
into
ret
insb
lret
int3
sahf
push
ret
lds
imulb
xor
decl
inc
sub
xor
test
xchg
pushf
mov
inc
add
pop
dec
jle
pop
in
push
dec
or
lods
daa
dec
adc
ror
mov
js
adc
fisubs
cli
aad
pop
testb
cmpsb
loopne
adc
mov
jg
mov
sbb
enter
stc
lock
imul
test
push
xor
bound
sti
push
push
sbb
je
stc
movsl
xchg
call
mov
dec
and
mov
dec
inc
and
xor
push
adc
iret
add
pushf
adc
lret
cltd
and
mov
push
mov
sub
fcmovb
nop
aam
jbe
adc
and
lock
xchg
push
dec
mov
ret
cmp
push
add
cmp
mov
or
add
out
push
pop
stos
aam
cld
push
add
movb
lock
stos
jg
outsl
test
xchg
mov
xor
loope
fisttpl
outsl
mov
sbb
pop
jecxz
ret
cmp
mov
ljmp
mov
xor
push
popa
mov
push
sbb
test
ljmp
push
adc
mov
mov
scas
mov
mov
push
jnp
das
or
outsl
jl
jl
sbb
lcall
insb
push
and
idiv
ja
pushf
dec
pop
adc
out
pop
push
push
and
fdivrl
inc
inc
scas
movsb
aad
mov
jle
bound
cli
insb
mov
ret
jl
cmp
jmp
mov
fisttps
pop
mov
xlat
push
cli
out
mov
je
scas
mov
inc
lds
insb
out
icebp
push
pop
ds
cmc
shl
and
testl
outsb
outsb
sub
stc
out
shlb
add
ja
es
mov
and
pusha
test
enter
and
fwait
loopne
or
cld
push
sbb
test
jnp
and
lcall
enter
pusha
add
add
fwait
adc
inc
push
sbb
repnz
enter
pop
cmc
dec
sbb
insl
jb
sbb
add
pop
ret
mov
dec
mov
aaa
mov
push
adc
add
inc
outsl
pushf
sbb
inc
push
repnz
and
lret
insl
repz
ds
stos
pop
jo
jns
inc
xchg
push
clc
aaa
dec
out
ret
dec
xchg
and
movsl
mov
imul
std
or
jbe
cmp
mov
inc
les
xor
add
xchg
sub
mov
add
adc
ljmp
fwait
outsb
rolb
push
jo
pushf
lods
mov
insb
and
and
lock
add
jno
mov
cmp
adc
adc
sbb
js
xor
xchg
ret
negb
jbe
out
ret
test
call
lea
add
shufps
mov
sahf
sbbl
or
push
in
ret
adc
std
push
push
dec
jno
push
call
imul
xchg
movsb
notb
and
push
pop
pop
lea
adc
add
clc
pop
fcoms
decl
dec
push
daa
hlt
lock
test
ss
or
adc
push
imul
inc
jp
sbb
fwait
icebp
outsl
pop
loopne
push
pop
and
fwait
lds
xor
sbb
fwait
pop
lcall
add
jbe
repz
repz
mov
cwtl
mov
adc
push
lds
lret
mov
push
adc
mov
jae
stos
sub
mov
mov
xchg
hlt
jp,pn
les
cs
pop
or
sub
mov
ss
xchg
push
lock
mov
test
inc
mov
xchg
mov
out
das
rcr
sub
fbld
in
jne
add
mov
into
cmp
jnp
pop
sub
jg
inc
and
pop
lahf
or
push
jle
das
push
xchg
aas
cmp
stos
push
jl
aaa
das
mov
jne
mov
aas
push
dec
cld
xor
and
mov
lcall
mov
pop
mov
adc
mov
mov
jmp
mov
lret
mov
mov
cmc
xor
loopne
mov
ficompl
adc
adc
jmp
js
jne
popa
add
lcall
rorl
stos
popa
cmc
loop
mov
inc
push
pop
xlat
mov
cmc
daa
rcl
cmpsl
add
dec
mov
shll
movsb
mov
inc
pop
jl
cld
daa
adc
pop
xchg
mov
mov
fcmovu
out
jecxz
push
sub
dec
inc
les
divps
fcoms
aad
inc
jmp
js
xor
test
mov
cmp
std
push
mov
data16
mov
mov
add
sub
or
mov
loopne
ficomps
pop
int
ljmp
push
lcall
std
mov
inc
add
ljmp
jo
dec
pop
je
push
pop
mov
arpl
xorb
add
clc
call
repz
cmc
and
ret
enter
push
mov
push
inc
cli
dec
sub
jmp
lods
pusha
jb
or
lods
clc
inc
sahf
adc
sub
test
or
movsl
test
cmp
out
jo
add
les
adc
sarb
inc
jg
pop
scas
in
pop
call
mov
mov
or
dec
jbe
enter
stos
lret
lock
inc
cld
pop
xchg
cli
fbld
push
mov
pop
add
or
lods
in
cmc
fwait
mov
rcll
xchg
adc
and
mov
lods
fs
loop
push
loope
adc
and
add
cmp
fnstcw
fidivs
pop
gs
mov
fcmovbe
shll
inc
loopne
lods
scas
mov
ret
hlt
clc
pop
fadd
les
xchg
subb
mov
and
cwtl
or
cmpsl
adc
lock
dec
pop
ss
xchg
jb
movsl
dec
das
cmp
push
sbb
ja
pop
xor
add
jmp
subl
repz
sub
push
pop
fwait
imul
mov
pusha
cld
outsl
mov
repz
inc
sbb
push
lcall
dec
mov
loopne
pop
jl
out
lock
or
enter
xchg
mov
mov
loop
sti
push
test
lock
sbb
sub
mov
js
in
mov
fcmovnbe
adc
mov
xor
stos
dec
cltd
insb
stos
hlt
push
cmc
fwait
repz
gs
jno
xchg
subl
xchg
inc
mov
addb
sub
popl
incl
cwtl
clc
movsb
std
inc
mov
imul
inc
inc
loop
push
ret
imul
push
js
mov
imul
dec
mov
xchg
stos
cmp
add
xchg
sarb
cs
cmc
lock
push
xor
or
int3
mov
add
pop
add
hlt
cld
mov
test
jl
xchg
dec
dec
and
pop
lock
andb
je
out
cli
inc
push
sbb
inc
xchg
loopne
pop
mov
in
data16
jo
and
fbld
xchg
sub
sarb
add
xchg
fs
push
andl
cmpsb
jmp
int3
loopew
pusha
mov
sbb
sub
mov
xchg
pushf
pop
xchg
jge
shrb
or
aas
rolb
iret
rolb
sbb
adc
fwait
add
xchg
xor
and
mov
inc
jecxz
mov
add
and
add
push
movsb
cmp
sub
mov
mov
jo
test
jnp
jbe
mov
hlt
enter
es
jbe
push
call
shl
dec
jae
dec
push
mov
icebp
psraw
adc
push
fbld
ss
test
inc
sub
test
mov
rcrb
loop
fidivrl
andb
int
orl
jae
jns
push
push
add
push
faddl
push
ja
pusha
gs
and
mov
mov
pop
push
mov
add
lahf
or
jg
push
mov
pop
xor
adc
or
sub
dec
xchg
add
add
daa
subb
aas
add
jne
loopne
out
es
js
mov
add
pop
or
cmp
clc
rcrl
fdivl
je
sub
cli
ds
xor
adc
and
xorl
ljmp
dec
mov
push
push
push
rcrb
dec
xchg
pusha
push
es
imul
or
enter
testl
adc
xor
mov
push
xor
movsl
push
mov
jmp
mov
pop
icebp
add
pop
cmp
bound
clc
or
das
mov
outsl
sbb
mov
lret
push
sub
ud0
and
cltd
dec
test
xchg
imul
pushf
xorl
jl
imul
adc
dec
mov
jbe
jb
mov
lret
mov
add
mov
pop
inc
pop
fmul
and
fildll
fdivrl
stos
mov
scas
add
mov
pop
inc
and
jo
repnz
dec
and
push
pop
sbb
fdivrl
or
push
and
inc
push
mov
mov
and
add
test
inc
push
scas
lods
sub
cmc
mov
hlt
int3
pop
sbb
lea
fs
in
pusha
adc
scas
mov
test
mov
xchg
xorl
adc
fisttps
cmpsl
pushf
scas
push
sbb
inc
fiadds
outsl
decl
shll
ljmp
xor
or
adc
mov
add
xchg
cmpsb
xchg
inc
add
mov
or
adc
bound
stos
cmpsl
pop
sub
xor
cmp
ljmp
push
ret
xor
fildl
shl
aam
and
jge
pushf
xchg
test
add
lods
inc
mov
loop
xor
xchg
fbld
loopne
fwait
add
incb
adc
loopne
js
fwait
inc
cmpsb
push
xor
adc
inc
mov
ja
jle
pop
jo
clc
mov
sub
scas
mov
mov
cld
mov
into
pop
sahf
jo
sbb
mov
or
cld
bnd
aaa
je
sub
dec
int
dec
push
push
shll
xor
or
inc
scas
mov
dec
xlat
mov
test
push
inc
mov
adcb
inc
pop
push
sub
std
xchg
js
or
fcmove
out
test
std
add
out
cli
xlat
pusha
xchg
xor
push
je
jnp
push
stos
add
in
mov
push
xor
popf
dec
cwtl
hlt
push
push
aaa
sbb
sbb
sbbb
inc
cld
mov
mov
mov
pop
pushf
fsubp
orb
mov
pop
add
add
lods
jp,pn
sub
mov
pop
mov
dec
adc
mov
pop
call
pop
xor
leave
js
enter
push
jmp
les
push
pop
shl
push
push
ss
fsubrl
fwait
sub
repz
or
mov
mov
adc
adc
aas
stos
jae
test
sahf
pop
loope
scas
adc
in
jns
xlat
sbb
mov
je
xchg
icebp
cmpsb
mov
sti
dec
inc
fbstp
loopne
xchg
add
mov
pop
pop
ret
cmpsb
push
loope
add
xchg
mov
ds
xchg
inc
clc
mov
adc
in
xchg
bound
mov
clc
sbb
adc
push
pop
sub
mov
or
insl
pusha
andl
add
mull
fbld
xor
cmp
sub
push
mov
std
push
push
jno
call
nop
cmc
pop
add
arpl
push
pop
add
lock
lock
int
inc
sub
repz
pop
cmc
xor
or
mov
cmp
sub
mov
nop
cmp
idiv
jb
aas
loopne
pop
fwait
or
adc
cmp
adc
sahf
pop
sbb
mov
push
aaa
inc
insb
cmp
mov
pop
dec
jge
hlt
jle
cmp
add
ret
movl
adc
pop
and
mov
xchg
mov
mov
inc
inc
inc
jo
xor
inc
imul
cmpsb
bound
mov
sub
cmp
mov
fldenv
icebp
inc
andl
and
outsl
call
add
subl
inc
pop
mov
mov
jge
ret
mov
scas
ljmp
dec
fldcw
adc
mov
adc
adc
add
loope
push
repnz
daa
into
aaa
xchg
sub
cld
int3
sbb
mov
les
loope
mov
xchg
leave
pop
cld
pop
inc
push
xor
rclb
orb
xor
repz
push
cmp
clc
sti
mov
jl
fsub
roll
bound
jo
sub
xchg
push
xchg
cmc
jge
inc
lret
inc
add
fisubl
inc
jg
in
mov
les
jbe
sub
pop
add
mov
std
or
dec
cmp
adc
xchg
lods
loop
mov
rorb
cmpsb
add
sub
test
fisubl
psubusw
cmpsb
je
sbb
insb
xchg
call
dec
insb
adc
xor
mov
xchg
mov
jmp
push
sahf
stos
and
das
xchg
movb
push
roll
cli
jmp
ja
in
jne
adc
int3
test
and
adc
or
cld
mov
cmp
mov
mov
dec
xor
stos
adc
jbe
movsl
mov
or
test
leave
jnp
mov
std
mov
jae
fdivp
xor
shrl
dec
mov
inc
mov
push
sbb
and
xor
out
ds
mov
jge
and
and
ret
popa
cmc
push
scas
scas
jmp
rorl
mov
movsb
roll
ljmp
and
lcall
mov
push
xor
sbb
cld
shl
sti
mov
incb
pushl
clc
decb
addr16
adc
movl
xchg
adc
loopne
imul
pusha
xor
push
idiv
inc
sub
and
popa
stc
jnp
mov
push
cs
add
inc
xchg
push
or
fsts
or
std
mov
std
pushf
cltd
add
sub
sar
jl
pop
xchg
cmp
mov
add
add
ss
rcrb
or
xor
inc
insb
out
ret
mov
inc
mov
xor
aaa
xchg
daa
loopne
push
inc
add
aas
jne
dec
jmp
das
sbb
pusha
ficoms
out
jge
jg
pop
out
int3
xor
push
loope
mov
fcomip
jecxz
aas
test
lds
dec
gs
sbb
push
cs
mov
mov
icebp
cmpsb
xchg
pusha
or
in
add
cld
insl
ror
mov
mov
int
clc
jne
adc
push
sub
inc
hlt
movsb
out
sahf
push
jg
clc
dec
pop
jae
push
mov
daa
aaa
cld
sti
mov
aam
mov
clc
add
outsb
mov
ret
cmc
mov
add
pop
sahf
mov
lret
leave
mov
push
cmp
aad
push
pop
or
dec
jae
or
push
outsb
push
cmp
je
cmp
jle
lea
fwait
xchg
std
leave
andb
fistpl
push
std
xchg
push
mov
repnz
xchg
cs
out
mov
pop
bound
sub
or
js
mov
sub
inc
mov
mov
imull
mov
sbb
xchg
movl
mov
dec
jecxz
jecxz
aam
or
ss
stos
mov
mov
dec
lods
incb
cli
cmp
outsl
or
ret
lea
out
push
add
int
cwtl
cmp
inc
stos
int3
int3
arpl
sub
loop
dec
test
mov
in
pop
inc
sub
jmp
push
cmc
shlb
sub
in
push
push
stc
in
dec
mov
add
push
sti
pusha
cmpsb
fcomps
fistl
cld
dec
mov
sub
cld
or
dec
scas
pop
not
pusha
outsb
cwtl
repnz
fcomps
ret
ret
rcl
sbb
out
add
je
mov
sbb
jbe
jno
sub
add
decl
sbb
jae
ret
push
outsb
sbb
dec
mov
push
inc
pushf
rcll
stc
jmp
xchg
adc
ljmp
test
fildl
lea
xor
sub
les
jbe
and
sbb
pop
cmp
push
int3
jg
jl
out
mov
cmp
mov
pop
imul
mov
je
es
xchg
outsl
xchg
mov
push
mov
add
popf
adc
adc
lret
ss
sub
mov
mov
scas
mov
jl
xor
sub
lret
pop
loope
subl
push
lret
test
mov
fbstp
pop
inc
xchg
cmp
clc
stc
xor
scas
dec
or
lret
hlt
pop
sub
pop
icebp
lret
mov
inc
mov
adc
adc
pop
xor
ud0
loopne
add
sub
sbb
cwtl
fnsave
sub
enter
xchg
clc
daa
cmp
cmp
or
ljmp
arpl
xchg
add
iret
mov
inc
add
xor
dec
push
adc
pop
jo
les
lods
mov
sbb
out
rcll
iret
mov
add
test
dec
sbbb
call
aam
popf
mov
add
xchg
pop
or
fwait
clc
cmp
sar
cmpl
mov
cmp
mov
aaa
test
jo
test
and
ja
mov
clc
pop
nop
mov
push
xchg
pop
or
outsl
ljmp
mov
loope
loop
push
incl
add
mov
in
mov
aam
lds
imul
inc
adc
adc
cmp
mov
adc
cwtl
popf
mov
jge
push
adc
call
sbb
dec
ficomps
decl
push
push
mov
ret
jo
and
jle
push
sub
je
adc
sahf
sti
mov
mov
sbb
insl
outsb
adc
add
push
pop
and
int3
dec
aam
es
inc
mov
or
dec
push
jl
fmul
ds
adc
sbb
mov
pop
pusha
shlb
sub
inc
cwtl
add
mov
xchg
test
aam
insb
jecxz
addr16
das
push
xchg
mov
shlb
mov
js
mov
adc
ret
fbld
rcrb
push
or
push
ret
aad
dec
push
roll
repnz
cs
add
and
sub
addb
cli
out
std
mov
call
and
addr16
scas
push
and
xchg
or
cltd
repnz
rclb
mov
sbb
xchg
adc
lcall
jo
aam
cltd
pop
icebp
rol
scas
add
fisttpl
mov
stos
push
pop
je
add
sub
mov
or
sub
mov
insl
mov
sub
cmovbe
inc
pop
pushf
inc
repz
insb
cmp
mov
cli
mov
pop
lret
pop
aaa
std
scas
add
iret
dec
stos
pop
cmp
or
nop
adc
cmp
and
dec
hlt
es
dec
and
cmp
inc
adc
and
sub
cmpsb
dec
mov
das
dec
cs
sub
jge
insl
dec
mov
sub
mov
dec
test
cwtl
call
incl
in
sub
stos
inc
xor
push
out
sar
lahf
add
scas
and
push
cltd
mov
or
test
shlb
cmpsl
rcll
je
cmp
lcall
and
aas
push
mov
mov
fldl
jle
int
sub
add
adc
push
addr16
sbb
jb
xor
outsl
inc
sub
cmpxchg
inc
mov
cmp
xchg
lcall
adc
clc
clc
jg
push
dec
rclb
ret
loopne
aas
test
xchg
cld
jecxz
and
mov
jnp
shlb
push
ret
cmp
adc
sub
sub
and
fisttpl
js
clc
mov
std
add
jge
pop
out
ja
fs
cmp
movsb
sub
jp
into
addr16
adc
adc
mov
dec
hlt
mov
inc
pusha
push
lcall
scas
dec
imulb
jle
inc
mov
add
xor
mov
mov
add
push
sbb
pop
pop
push
mov
sbb
push
add
hlt
mov
addr16
push
pop
pop
or
mov
aam
push
fisttpl
pop
mov
inc
mov
or
mov
mov
mov
pushf
mov
push
push
testl
add
cmp
js
ret
sahf
push
into
sub
insb
enter
xchg
jb
cld
pop
sbb
push
mov
cli
andl
fs
cmpsb
mov
mov
add
into
mov
adc
lret
sub
hlt
out
jo
out
in
cmpsb
and
mov
jno
test
outsl
incl
fxch
enter
int
int3
shlb
add
cmp
test
cli
lcall
add
fisttps
xchg
pop
or
jle
test
ja
mov
mov
or
jg
adc
sub
sti
or
mov
push
adc
dec
jecxz
mov
xor
shrb
inc
xor
hlt
das
push
adcb
inc
mov
inc
inc
loope
cmpsb
jbe
inc
push
hlt
inc
lret
dec
mov
je
xor
ret
ret
mov
insl
clc
xchg
pop
or
and
cmc
cld
add
dec
mov
mov
or
jecxz
adc
and
adc
rcl
jo
sub
push
sbb
and
lcall
mov
pushf
dec
cld
adc
mov
xor
in
adc
inc
dec
push
inc
jp
pop
inc
push
and
sti
xor
adc
sub
js
mov
insl
pop
mov
rorl
fcomps
mov
sbb
and
ss
pop
cltd
ficompl
cmp
push
mov
push
daa
push
mov
inc
mov
rcrb
and
sbb
sar
gs
in
mov
movsb
adc
enter
sbb
aam
push
add
rorb
dec
rcrb
std
adc
jo
test
and
lret
mov
mov
fdivrl
clc
jns
pop
je
daa
sub
push
inc
inc
lcall
add
xchg
js
stos
cmp
mov
add
and
scas
stos
sub
scas
sub
jle
xor
jg
cmpb
pop
sbb
lcall
rcrb
xchg
out
jg
lock
rcrb
jno
pop
mov
sbb
jg,pn
cmpsb
add
pop
je
cltd
lods
pop
lea
push
daa
std
outsb
daa
jo
add
mov
aas
sarb
fwait
xchg
add
xchg
ret
pop
in
ds
popf
pop
jg
jmp
xchg
sbb
add
lea
jns
adc
test
imul
adc
repnz
movsl
mov
or
mov
push
push
mov
in
lock
xchg
fs
mov
add
divb
daa
negb
scas
clc
mov
mov
outsl
lcall
scas
js
sbb
push
xchg
pusha
enter
mov
ss
decb
std
mov
xchg
jmp
stos
in
dec
sahf
push
cs
push
add
outsb
mov
pusha
sbb
pop
aam
jno
fbstp
das
mov
mov
fcomps
stos
add
xchg
in
jmp
sub
xor
stos
imul
loopne
insl
ljmp
call
out
test
movsb
jg
sub
movsl
ret
out
add
ret
outsl
or
in
pusha
out
sub
push
pushf
and
adc
xchg
test
add
rclb
arpl
cltd
sahf
sbb
push
addb
adc
aas
pop
stc
cmp
ja
out
mov
mov
mov
add
jne
cld
push
daa
or
mov
fstl
adc
aam
lea
push
mov
fmuls
stos
test
add
adc
mov
maxps
pop
mov
imulb
loop
aad
aas
sarb
pusha
xor
jmp
xchg
into
shll
push
out
xchg
sub
push
or
testb
dec
lods
mov
xchg
aas
cli
rolb
sub
pop
jno
clc
xor
or
fisubs
gs
or
cmp
insl
xor
in
lds
or
ret
ss
js
pop
pusha
pusha
cmpsl
sbb
or
or
ss
xchg
fidivs
iret
shlb
mov
mov
jg
xchg
sbb
add
insb
add
xlat
pop
sbb
scas
push
pop
loope
mov
push
xor
icebp
jmp
mov
mov
pop
gs
jle
lret
rorl
aam
pop
or
cmpl
movb
sbb
or
pop
mov
dec
push
mov
aas
sbb
adc
push
jbe
and
outsl
sbb
cmp
test
push
pop
loopne
pusha
insb
lds
movsb
push
mov
dec
add
ss
movsb
loop
loopne
push
cmp
dec
lcall
aas
inc
mov
cmp
jb
adc
loop
jmp
lds
rcll
stos
into
stc
enter
cmc
ljmp
xchg
pusha
cltd
jl
push
inc
mull
popf
add
jb
pop
std
xlat
cmp
xchg
or
sbb
ljmp
in
cmp
popa
shll
into
cmpl
and
cs
add
enter
cld
outsb
xchg
push
jbe
mov
xchg
mov
stos
in
lods
hlt
jo
push
mov
adc
cmc
inc
sub
hlt
pop
outsb
int3
mov
xchg
xchg
sub
jl
pop
dec
xor
jbe
xor
push
clc
mov
mov
jo
dec
das
sbbb
lret
ss
sub
sub
pop
inc
or
pop
mov
dec
lcall
mov
outsl
les
sub
mov
pop
hlt
jg
inc
enter
stos
bound
dec
mov
push
fnstcw
call
push
or
addr16
into
or
sbb
out
fcmovb
scas
fcmovbe
test
push
jg
or
and
sti
aaa
mov
dec
dec
repz
int
or
insb
shlb
jl
xorl
ficompl
mov
sbb
add
add
decl
pop
lret
xchg
adc
pop
jl
ds
cmpsl
arpl
jno
fidivrs
incl
das
pop
jmp
adc
test
push
pop
nop
repnz
push
lcall
mov
cmp
jno
loop
xchg
test
mov
cmpsb
push
mov
adc
popf
sub
je
insl
or
push
xchg
xor
icebp
fildl
jne
cmp
outsb
incl
ja
fildll
movq
or
push
lock
sub
jb
push
dec
shrb
shrb
out
mov
push
or
shll
adc
and
clc
jno
test
cmpsb
fcmove
cmpsl
mov
call
lods
adc
inc
mov
cmpsl
fldl
clc
jmp
loopne
xor
fisttps
add
adc
shrl
dec
mov
lods
add
dec
push
cld
jle
push
arpl
das
pop
push
cltd
jle
adc
or
mov
or
rolb
or
js
lret
mov
or
shlb
outsl
mov
mov
adc
jne
mov
jmp
sub
es
adc
jp
fwait
inc
inc
decl
xchg
mov
test
mov
pop
dec
push
movsb
cmp
jae
sub
add
sub
adc
aam
sub
andb
xchg
cltd
push
popa
inc
mov
cmp
push
int3
cmpsl
loop
jo
test
push
enter
out
icebp
aaa
add
push
add
pop
jl
movsb
push
lret
call
leave
or
das
push
jbe
pusha
adc
lret
pop
das
iret
pop
aaa
jge
cmp
rolb
mov
jnp
fdivp
inc
xchg
call
inc
movsb
adc
mov
pop
push
xchg
mov
pop
call
push
mov
mov
nop
push
dec
std
mov
mov
pop
aad
xor
testl
mov
rolb
mov
or
cmp
mov
loop
jo
ret
decl
outsb
add
pop
test
cmp
les
adc
add
gs
std
or
adc
adc
aad
aam
push
movsl
jl
add
dec
xor
push
add
add
outsl
pop
push
lds
pop
in
jbe
add
jae
mov
sub
test
ss
mov
sub
cmpb
inc
mov
inc
call
mov
sub
adc
outsb
scas
ds
rcll
or
and
pop
jo
sbb
add
dec
loop
pop
out
clc
cs
ljmp
add
dec
mov
mov
inc
cmp
jge
cs
adc
call
jno
jl
jmp
out
xchg
mov
add
sub
jo
incl
divb
in
in
xlat
das
js
loope
mov
leave
fadd
ret
push
loop
call
iret
repz
cmc
dec
in
scas
cmc
or
jecxz
fidivl
lcall
or
xchg
push
cli
fwait
or
pop
movsl
lcall
mov
add
inc
sbb
and
pop
hlt
sar
add
call
mov
fcomps
push
lods
sub
mov
pop
sbb
and
dec
cmpsb
lds
lods
xchg
fwait
gs
test
inc
mull
jge
dec
in
add
inc
mov
push
adc
ret
sahf
push
mov
lock
sbb
sub
data16
stc
shrb
jmp
mov
mov
iret
dec
xor
fdivs
mov
add
nop
idivb
or
and
decl
pop
or
mov
out
jl
mov
insl
test
es
xorl
fidivl
mov
and
dec
mov
mov
add
in
fadd
mov
js
and
xchg
sub
sbb
je
sub
mov
or
mov
push
jae
dec
mov
inc
stos
dec
and
into
jb
sub
popf
cmp
or
aas
and
push
adc
pusha
mov
inc
pop
jl
pop
imul
jo
mov
in
out
mov
adcb
pop
fnstenv
ret
ret
ljmp
sbb
sub
sub
add
inc
ret
ret
test
push
mov
fildl
sub
xchg
inc
movsb
out
sbbb
adc
sbb
xor
mov
or
push
or
mov
jmp
sbb
stos
cmpsl
sub
or
lret
mov
idivl
pop
sahf
lahf
fdivl
cmc
adc
adc
adc
push
or
lods
sbb
ja
push
hlt
daa
jg
pop
pop
sub
jp
jbe
orb
aaa
pop
fbstp
add
repnz
jae
pop
adc
or
or
popa
call
push
xchg
xchg
adc
pop
xrelease
push
fisubrs
inc
call
sub
ds
jl
fbld
insb
dec
pushf
cli
inc
ss
push
cltd
mov
scas
or
pop
cmp
cmp
andb
cmp
int3
inc
jl
ljmp
fdivrl
push
jl
mov
or
sti
inc
adc
inc
pop
call
pop
mov
cmp
loop
adc
sub
adc
jp
sbb
dec
test
les
aaa
adc
jo
push
lcall
outsb
mov
push
push
mov
xor
cmp
push
xor
jp
icebp
incl
mov
inc
ds
mov
mov
jo
xchg
or
mov
adc
inc
inc
push
push
scas
or
ret
pop
push
add
push
ret
pop
popa
add
and
xchg
add
aaa
shrl
cmp
daa
fdivrp
scas
es
mov
fsubs
div
and
mov
ret
pushf
jbe
fdivrp
decl
cmp
push
xor
jns
test
sahf
leave
inc
cmp
sub
icebp
ja
cmp
inc
fldt
outsb
clc
jecxz
xchg
in
or
call
push
ret
pop
pop
cltd
nop
dec
test
clc
sahf
out
rcrb
subl
fists
clc
fisubs
or
pop
mov
or
scas
enter
rorb
lock
jbe
lahf
add
sbb
call
enter
pop
repnz
mov
fcomip
pop
pop
pusha
pop
loope
into
test
xor
sub
xchg
mov
es
popa
test
mov
cmp
and
inc
sub
mov
ljmp
sub
pop
cmc
push
mov
push
lods
movb
push
pop
sub
shrl
pushf
pop
sarl
xor
mov
cmpsl
test
arpl
sbb
mov
call
aas
movsb
testl
lcall
pop
inc
sbb
xorb
loop
mov
push
test
pop
gs
fnstenv
xchg
ret
push
in
add
dec
push
es
pop
dec
dec
lock
cld
xchg
jg
sub
in
sub
loopne
mov
jle
fdiv
push
add
jp
jmp
cmp
cmp
add
inc
push
mov
cltd
jo
incl
mov
pushf
orl
inc
lcall
pop
dec
std
adc
pop
mov
mov
je
fisubs
pusha
fs
inc
fcom
pop
ljmp
adc
push
dec
lock
push
xor
icebp
imul
jbe
mov
loop
xor
cmp
imul
loopne
movsb
pop
xlat
push
ja
out
sub
mov
es
mov
int3
cmp
cli
fildl
or
cmp
ficoms
jecxz
mov
repnz
jo
lea
pop
lock
adc
in
cmp
adc
cmp
jge
push
sub
jo
mov
lock
xor
cmp
or
ret
mov
movsb
in
and
jbe
pop
clc
cmpsl
pop
repz
adc
jnp
xor
and
stos
stos
add
aaa
mov
and
pop
clc
sbb
out
push
sbb
loopne
adc
shll
push
dec
xchg
dec
rolb
hlt
inc
dec
jl
shrb
jecxz
ror
sbb
decb
rcl
mov
add
or
loopne
and
inc
push
pop
shlb
aam
pop
fiaddl
mov
or
sbb
jo
std
mov
pop
pop
push
xlat
or
xchg
add
mov
out
jbe
imul
rclb
cld
mov
ret
jae
add
mov
dec
xor
push
ret
or
sti
push
inc
add
mov
es
add
or
add
andb
fdivl
mov
outsl
cwtl
shlb
pop
jbe
aaa
cld
dec
sbb
negb
adc
and
popa
add
nop
adc
add
xlat
ja
mov
add
add
jge
getsec
add
mov
xorb
inc
in
loopne
cs
inc
rolb
fstl
andb
test
shrl
pop
es
das
push
push
das
lods
roll
mov
and
pop
adc
call
ficoml
mov
nop
fimuls
xchg
or
pusha
es
mov
push
mov
push
adc
dec
dec
imul
or
cwtl
sbb
pop
insb
adc
imul
inc
cmp
stos
adc
shrl
xor
dec
push
repz
ljmp
adc
call
stos
int
pop
add
movsb
or
pushf
fsubr
imul
adc
fwait
mov
dec
loope
sub
jne
cmp
int3
subl
or
mov
cwtl
mov
xor
popf
mov
pop
mov
and
pusha
cs
and
jg
je
add
jg
test
cmp
aad
repnz
mov
stos
cmp
fwait
pusha
pushl
data16
mov
pop
stc
push
divl
cli
mov
xorb
inc
mov
mov
lcall
in
popf
add
adc
add
popa
jg
je
loope
into
mov
cmpsl
xchg
inc
add
push
in
stos
js
subl
and
add
lret
or
and
data16
mov
dec
jp
adc
adc
ret
rclb
sbb
aad
adcl
insl
enter
ljmp
xor
add
je
sahf
push
xor
inc
je
push
fs
sbb
test
mov
adc
add
insl
jecxz
add
das
add
sbb
pop
jge
loopne
pop
repnz
and
rclb
mov
into
and
repz
adc
ljmp
mov
dec
cmp
jnp
push
pushl
sbb
mov
es
inc
dec
cmp
loopne
into
mov
xor
aas
pop
inc
mov
jmp
push
inc
mov
dec
fs
or
xor
xchg
inc
dec
sbb
xchg
imul
cmp
inc
popa
sbb
adc
cmp
cli
fildll
pop
outsb
decl
aaa
pusha
decb
push
xchg
mov
cmp
sbb
test
pop
pushf
push
adc
in
js
sbb
incl
xlat
psllq
add
ret
dec
xor
loopne
push
repz
jle
pop
inc
inc
and
test
pop
sar
bound
outsl
push
and
or
test
jne
or
jmp
sub
imul
rclb
mov
dec
hlt
imul
mov
inc
aaa
cld
lcall
jmp
jno
pusha
jno
adc
jnp
sbb
add
stc
jmp
adcl
mov
idivl
mov
je
xchg
lcall
sbb
or
jmp
jbe
pop
cs
sbb
clc
push
cld
decl
cwtl
inc
push
sub
or
mov
icebp
inc
ljmp
shl
cmp
loope
jl
stos
jmp
push
mov
pushl
or
testb
pop
idivl
cmpsb
mov
xor
or
pop
lea
lods
add
incl
dec
fidivrl
les
xchg
ret
dec
ds
adc
push
cmp
xchg
sub
ljmp
and
or
ds
scas
or
aas
sti
sbb
lret
int
stos
into
add
call
leave
xchg
inc
out
and
add
inc
push
int3
aas
cmp
ret
iret
out
cmp
pop
scas
xchg
and
ljmp
shll
in
leave
ret
sub
push
stos
push
mov
test
mov
pushf
repnz
mov
mov
rcll
leave
mov
jne
fidivs
dec
mov
cmp
call
insl
or
loop
dec
mov
xor
dec
pop
push
shr
pop
test
xchg
jmp
xlat
outsl
jmp
push
xor
leave
lock
sub
adc
pushl
inc
mov
push
cmpsl
lcall
filds
andl
mov
pushl
adc
das
cltd
xchg
hlt
negl
mov
cmp
lock
mov
imul
out
and
decl
add
outsl
jp
jb
mov
mov
ret
sbb
inc
mov
fcompp
mov
call
fprem
rclb
jnp
mov
and
pushl
mov
mov
cmp
test
outsl
setns
inc
xor
test
fcoms
in
xchg
insl
idivb
out
push
mov
mov
aaa
mov
loopne
mov
stos
push
shrb
push
jp
test
lahf
sahf
push
mov
stos
or
dec
dec
fldenv
xchg
int3
cmp
push
repz
nop
lods
jne
xor
loopne
pop
mov
jle
mov
popa
jecxz
pop
fadds
xor
fwait
jp
aas
in
decl
add
aas
lret
pause
lock
cs
mov
addb
add
ljmp
andl
insb
or
jnp
xor
inc
popf
movsl
dec
std
pop
movb
mov
jmp
test
cli
bnd
jecxz
call
adc
mov
pop
insb
xchg
xchg
int
or
fidivrl
test
mov
ss
fwait
xchg
mov
pop
xchg
aad
ret
std
sub
mov
push
dec
jns
bound
adc
pop
fwait
mov
insl
js
sbb
aam
fcomip
pushl
loope
push
imul
ds
enter
mov
imul
cmp
inc
jmp
xchg
jge
cmp
jle
outsb
xchg
pusha
push
jg
imul
call
xchg
pop
int
mov
cmp
pop
xor
sub
xorb
sub
adc
xor
mov
fsubs
ficompl
sbb
add
repz
cmp
xchg
call
lock
leave
out
jmp
inc
pusha
mov
cs
test
jne
mov
and
decl
and
stos
ror
dec
inc
mov
out
xor
decl
roll
aas
mov
es
and
sub
pop
call
int
xorl
lcall
push
sub
push
fstpl
cmp
jnp
xor
pop
xchg
aam
idiv
fidivl
js
dec
pop
ljmp
insl
popa
push
jl
cmp
xchg
dec
insb
add
push
imul
lds
ja
in
movsl
iret
ja
sbb
dec
fsub
adc
adc
jg
jmp
inc
jmp
push
ja
adc
sti
push
nop
xchg
jecxz
out
addl
jp
fwait
mov
or
xor
insl
cmp
repz
dec
sar
decl
xor
dec
mov
enter
jecxz
pop
mov
jno
shlb
add
or
icebp
adc
inc
test
mul
sbb
fcom
sarb
sub
hlt
xchg
int
call
ljmp
daa
addr16
out
xchg
test
repz
int3
imul
pop
adc
add
js
mov
or
adc
push
xor
xchg
in
adc
out
xor
xchg
decl
mov
test
jnp
or
xchg
aaa
popf
lea
mov
sbb
or
outsl
xor
jne
add
mov
mov
pop
outsl
dec
faddp
cs
mov
mov
cltd
jns
iret
sub
jbe
cmpb
mov
cmp
and
arpl
pop
call
loopne
out
les
xor
add
iret
inc
mov
cmp
add
js
cmp
aaa
sbb
cltd
mov
or
jl
sbb
inc
outsl
xchg
das
or
das
mov
cli
dec
call
test
pop
aam
sar
loopne
sub
or
pop
repnz
pushl
dec
ror
dec
aas
sbb
pop
stos
cli
xchg
jg
jg
je
jp
pushf
sar
int
shrl
push
fcmovnb
lret
in
sbb
jmp
mov
jmp
sbb
mov
int
shlb
sahf
aad
pop
jg
punpckldq
adcl
mov
push
adc
dec
pusha
pushl
or
mov
xor
dec
push
sub
std
call
stos
cld
imul
cld
xor
in
mov
push
arpl
test
out
aaa
std
call
mov
mov
aaa
xor
push
push
fldenv
loope
xor
mov
sahf
pusha
pop
in
out
push
lcall
pop
jnp
inc
adc
xchg
andl
mov
pop
mov
push
push
cmp
mov
incl
jnp
xor
lds
data16
loopne
in
jg
loopne
decl
pusha
xor
addr16
mov
aad
test
dec
pop
push
outsb
addr16
add
imul
dec
adc
orb
sub
dec
es
fstcw
mov
cmp
lcall
lods
out
jns
shlb
mov
jb
xchg
jl
negb
xchg
js
test
mul
pop
pop
outsb
adc
incl
leave
cltd
sbb
cmp
jno
mov
sbb
popf
jne
mov
xchg
pop
popl
cs
cmc
jle
call
outsl
xchg
push
js
push
or
xlat
shll
and
insb
push
sub
pushl
fsubs
cmp
add
imul
stc
cs
mov
mov
decl
movsl
out
divb
xchg
rclb
or
rcl
dec
pop
decl
popf
sub
andl
lahf
pop
cs
push
push
mov
jecxz
aaa
push
sbb
pop
call
fsubp
mov
pop
push
push
pop
pop
loopne
insl
adc
mov
inc
mov
push
pop
daa
lcall
pop
mov
pushl
sti
adc
ss
xchg
leave
mov
iret
mov
fdivrs
shll
dec
je
pop
dec
dec
add
popl
out
jmp
pop
add
cwtl
addl
imull
push
roll
or
call
adc
dec
fwait
sbb
pusha
iret
mov
push
pop
xchg
pop
test
jg
decl
in
adc
and
dec
dec
dec
sbb
pop
pop
fld1
cmp
push
aad
jmp
cmp
mov
into
inc
cmp
cld
movsl
xchg
int
pop
mov
out
test
or
dec
mov
adc
rorl
cli
xchg
cmp
mov
aaa
lods
mov
lock
incl
cld
sbb
out
mov
adc
fisubrl
adc
jns
xor
push
jb
ret
incl
sbbb
dec
xor
dec
lret
ficomps
addb
pushf
push
inc
cld
jg
pop
dec
shr
orb
test
pop
insb
lods
mov
add
testl
sub
addr16
jl
xchg
scas
in
in
mov
outsl
clc
les
out
push
pusha
sbb
int3
rol
out
ud1
mov
fdivrs
fwait
mov
add
fdivl
xor
call
lahf
enter
pop
lcall
mov
mov
cmp
cmc
cmp
mov
mov
jle
xchg
jg
sbb
fs
popf
mov
sbb
jp
mov
in
in
scas
cli
cmp
pop
std
fs
popf
adc
arpl
add
lcall
jp,pn
add
push
pop
push
adc
push
shrl
sbb
loope
fnstsw
cmc
mov
xchg
incl
cmc
push
inc
fidivrl
cld
mov
ss
popa
popf
repnz
lcall
push
cmp
je
add
mov
jns
lods
cmp
je
out
add
jne
mov
idivl
jge
lcall
adc
push
lret
inc
mov
aad
push
or
cmp
or
dec
out
fisubrs
phsubd
popa
scas
test
loopne
das
cli
mov
xor
cmpsl
ss
xchg
jle
pushl
aas
push
aaa
cltd
cwtl
in
xor
mov
aad
movsb
das
sub
sti
es
mov
pop
call
and
aaa
push
in
cmpsl
imul
xchg
jae
rcrl
push
mov
clc
fwait
test
repnz
into
arpl
jg
pop
mov
xchg
xlat
incl
pushf
sti
rclb
mov
cltd
int
rorb
rcl
idiv
decl
mov
out
iret
xlat
cmp
push
dec
rclb
jg
jmp
lret
mov
xor
lock
jmp
push
xor
das
mov
lods
lods
sbb
push
or
scas
and
and
lcall
cmpsb
aas
mov
jns
aam
sbb
fdivl
stos
cltd
mov
mov
xchg
mov
aad
lcall
stos
mov
aam
imul
push
push
mov
sub
mov
lret
mov
jae
jle
adc
popa
test
inc
stos
clc
or
decl
sbb
test
push
jb
rorl
outsl
shll
sbb
out
adc
jecxz
das
xchg
or
lods
add
push
paddusb
pushl
gs
js
arpl
mov
mov
fwait
and
xor
lcall
sbb
iret
mov
pushf
mov
out
repz
jo
xchg
mov
mov
xor
je
lds
fbld
push
cwtl
cmp
lods
ja
imul
cmc
and
xchg
incl
cmc
test
into
xlat
dec
push
push
hlt
lahf
mov
or
stos
dec
cmc
pop
movsb
jo
fistpll
rclb
or
mov
outsb
jae
out
jg
jmp
in
dec
mov
aas
inc
jno
sbb
push
xchg
mov
mov
mov
incl
dec
aam
dec
loopne
mov
jb
and
int
jmp
push
pop
cmovle
cli
decl
xor
popa
push
pusha
rorb
xchg
pop
pusha
mov
ljmp
add
dec
dec
jle
cwtl
inc
mov
jns
in
mov
mov
lret
out
lcall
pop
sahf
sbb
out
fwait
and
sahf
push
movsl
bound
repz
dec
push
cmpsl
outsl
add
mov
xlat
dec
xchg
mov
out
inc
stos
cmp
jns
shll
lret
test
mov
stos
je
mov
out
decb
gs
mov
mov
mov
push
push
xlat
dec
sar
call
jne
jb
psrld
adc
dec
sub
sub
repz
jg
mov
cmc
xor
adc
test
es
dec
loope
test
dec
ja
ret
inc
inc
pop
shrb
dec
jo
inc
push
gs
icebp
jg
test
mov
daa
mov
sar
decl
std
and
test
mov
decl
xchg
mov
fistps
clc
lock
jo
lods
call
xor
cwtl
and
decl
in
daa
mov
jecxz
es
xor
out
adc
jg
inc
stc
jp
insb
jno
pushl
enter
dec
lods
inc
mov
cmp
mov
add
mov
shlb
inc
push
imul
imul
test
or
dec
call
loopne
and
fldcw
fsubr
sub
or
ja
test
push
repnz
pop
hlt
mov
jle
rclw
pop
js
sub
jg
and
adc
cmpsb
pushf
ljmp
ljmp
dec
repz
in
addr16
popa
mul
inc
xchg
xchg
clc
sarb
into
push
jne
fistps
inc
aam
ljmp
lds
bnd
or
test
ds
call
inc
aaa
shlb
add
sbb
in
xchg
xor
orb
lcall
scas
mov
daa
mov
mov
popa
arpl
push
cmc
data16
push
cmp
incl
hlt
cmpb
inc
jmp
icebp
jge
push
mov
shll
daa
cli
test
add
jl
cmp
cmpsb
out
pop
push
pop
pop
mov
mov
fsubrp
daa
jmp
cltd
jmp
lock
jle
in
movsb
gs
out
mov
daa
aam
mov
jg
sbb
mov
xor
cmp
fdivp
lahf
and
xchg
fdivrp
incl
jno
std
out
cmp
sub
sub
popa
lret
rclb
push
sub
pop
icebp
fs
aaa
inc
pushl
test
adc
jge
push
out
sbb
int
pop
cs
imul
call
pop
dec
pop
gs
push
mov
jns
and
pop
inc
jnp
and
mov
call
sub
dec
lret
into
ja,pt
roll
sub
int
call
sub
icebp
cmp
dec
divl
cmpsl
imul
pusha
mov
clc
filds
lret
sub
pop
mov
inc
cmp
mov
test
ljmp
jb
fwait
movsb
jno
ljmp
pop
js
mov
outsb
jne
mov
mov
out
cld
das
pop
scas
cmc
lret
test
jmp
push
add
ljmp
pop
xchg
add
jo
cmp
mov
mov
fcmovu
mov
stos
mov
push
pop
roll
out
out
ds
mov
in
call
cwtl
mov
xchg
mov
out
cmpsb
push
pop
ss
es
ljmp
xor
jns
cld
xor
out
or
popf
mov
jne
mov
fs
pop
idivl
pusha
xchg
xchg
mov
push
rcrl
inc
sbb
pop
mov
lret
je
pop
or
push
pushl
aas
xor
inc
loope
sbbb
ret
and
mov
pop
daa
inc
dec
lcall
jge
mov
mov
or
sahf
je
cld
incl
out
adc
jl
lods
add
xchg
daa
lcall
aaa
mov
scas
fwait
push
or
loop
mov
loopne
pusha
jns
call
es
fdivs
popa
pop
aaa
cwtl
mov
jo
mov
and
ljmp
fldt
arpl
aas
fidivs
int
fbld
mov
pop
jmp
test
gs
sub
scas
inc
push
mov
add
pop
icebp
dec
incl
and
stos
out
push
xlat
push
jo
jno
xchg
js
mov
dec
xchg
shrb
dec
sub
xor
pop
es
call
xchg
sub
imul
push
cmp
push
inc
dec
aam
cmp
arpl
lods
test
aad
mov
in
pop
or
pop
ret
ljmp
cmpps
fwait
jg
test
push
and
test
lods
jg
dec
adc
inc
xor
dec
inc
pop
outsb
movsl
ds
jne
add
and
leave
int3
ljmp
pop
insb
test
mov
jle
push
lret
mov
mov
stos
or
pop
sub
push
jnp
jno
mov
and
scas
lods
or
pop
inc
cmp
das
mov
xor
call
jle
mov
dec
jo
scas
stos
xor
push
imul
shll
jmp
mov
fidivrl
stos
mov
fstpl
pop
lret
push
call
mov
hlt
mov
loopne
mov
or
and
mov
adc
into
cld
sti
incl
sbb
in
idiv
cmp
or
ljmp
or
sbb
adc
mov
or
sub
mov
test
rorl
cmp
pushl
pop
jnp
mov
push
and
xchg
add
cmp
repz
lret
pushf
and
cmp
addr16
pushf
push
cli
adc
dec
leave
mov
lcall
imul
pushl
repz
add
sbb
push
stc
arpl
mov
or
fnsave
xchg
lds
aas
lods
push
push
push
mov
push
inc
xor
and
or
adc
ficompl
mov
repnz
sbb
pop
negl
jg
in
xchg
mov
out
pusha
sbb
xor
les
cmp
mov
pushl
sub
add
jnp
xor
jnp
pop
mov
sbb
mov
fstpt
jle
test
mov
popf
daa
insb
shr
cmp
test
sub
in
out
out
adc
jnp
mov
lods
mov
add
push
imul
int
lret
clc
inc
fildll
pop
push
addr16
bound
mov
incl
inc
test
out
movsb
fldl
int3
xchg
fdivl
mov
lcall
ja
les
add
jbe
scas
ja
xchg
sub
cmpb
pop
dec
xchg
sbb
cs
jmp
cli
lods
adc
cmp
mov
scas
pop
adc
aad
xor
mov
dec
imul
mov
hlt
lcall
dec
scas
mov
lcall
mov
xor
sarl
fimull
fstpt
mov
insb
mov
stos
andl
stc
ret
stos
pop
inc
fnstenv
inc
jb
jecxz
pop
out
mov
das
rcrb
jge
push
push
push
enter
mov
jmp
jmp
test
cltd
pop
pop
stos
push
lods
jmp
jbe
movsl
sub
arpl
fbld
mov
std
out
adc
je
inc
nop
push
add
std
call
imul
gs
xor
add
test
adc
jp
mov
mov
mov
cmpsb
les
loope
not
scas
divb
insb
jmp
pop
ds
cmp
pusha
int3
mov
mov
pop
scas
sbb
push
scas
lret
jnp
rclb
xchg
movsb
popl
lcall
into
les
in
cmp
shrb
or
imul
jb
jl
jne
pop
inc
cmp
insl
push
into
jmp
jmp
mov
cmp
dec
push
and
cmc
stos
push
push
setne
dec
or
lcall
lds
inc
hlt
mov
jmp
jno
divb
inc
pop
jne
inc
ud0
ljmp
push
lea
addr16
les
pusha
jle
jns
xchg
push
pop
jecxz
rcrb
ljmp
cwtl
mov
jb
into
stos
lea
pop
xchg
fdivr
add
push
movlps
mov
fcmovbe
outsb
loope
je
xchg
je
and
sub
add
pop
jl
out
subb
sarb
mov
in
mov
addb
imul
test
popf
es
call
orl
and
and
inc
xchg
in
cmp
rolb
lcall
sbb
notb
call
dec
xor
inc
mov
faddl
ds
shll
es
ljmp
mov
push
aaa
xchg
popa
fdivrs
push
xor
inc
ret
call
mov
inc
mov
lret
push
xlat
mov
sbb
ds
out
cmp
jmp
adc
cmp
adc
mov
xchg
hlt
add
call
loopne
mov
test
sub
iret
iret
sub
pusha
in
gs
jmp
in
cmp
push
int
sbb
orl
or
js
push
cwtl
test
mov
add
test
shl
push
xchg
shrb
adc
psrld
cld
dec
dec
cs
incl
mov
cmp
shlb
adcb
mov
cs
xchg
pop
mov
fcomip
ljmp
movsl
aam
std
jl
mov
adc
jbe
jae
mov
jge
fistps
pushf
adc
aaa
test
sarl
cli
pushf
orl
xchg
jg
scas
cli
mov
add
adc
push
adc
cmpb
push
in
jmp
dec
mov
mov
stos
leave
sbb
ret
jecxz
incl
enter
insb
or
xor
add
popa
loopne
or
test
mov
or
repz
leave
cmp
outsb
aaa
dec
and
sub
imul
clc
xorb
arpl
xchg
cmp
jecxz
xor
or
mov
sbbb
subb
pop
movl
mov
push
es
lods
pushf
add
leave
mov
mov
add
in
xlat
decl
jne
jne
dec
ljmp
ret
cld
out
mov
mov
pop
cmc
incl
xchg
in
mov
sub
and
scas
or
or
add
lcall
aad
dec
and
push
lret
mov
loop
cmp
imul
jmp
into
or
lods
push
xchg
pop
punpckhdq
call
punpckhwd
pop
xlat
adc
sarb
pop
aaa
jb
sub
jbe
icebp
sub
ret
or
and
int3
mov
xchg
mov
fs
loope
ja
jg
pushl
cmp
adc
pop
fstl
lret
int3
and
popf
sbb
pop
loopne
add
mov
daa
add
fisubl
ljmp
add
ja
adc
mov
sbb
sti
shl
rcrl
push
jmp
mov
mov
pop
fcoms
test
inc
pop
mov
pop
repz
icebp
daa
mov
call
xor
repnz
stc
mov
sub
pusha
cmp
xlat
imul
mov
imul
loopne
dec
aas
icebp
pusha
imul
sarb
inc
sbb
xchg
cmpsb
xchg
mov
call
inc
decl
inc
test
jge
clc
imul
sbb
lret
pop
or
jbe
imul
cmc
cmc
jnp
pop
xchg
cwtl
clc
sahf
mov
lock
dec
dec
jle
dec
nop
push
dec
push
fidivrl
incl
imul
decl
cmp
jns
js
mov
insb
dec
mov
imul
mov
adc
mov
sbb
arpl
daa
mov
stc
add
mov
lock
test
cs
fdivs
push
mov
lcall
mov
jns
jl
insb
test
or
mov
jno
ficoml
in
pushl
cmpsl
outsl
hlt
fsubr
js
ja
xchg
push
or
loop
data16
push
xor
scas
js
mov
lcall
mov
mov
addr16
pop
inc
jbe
mov
aad
push
or
pop
fwait
xchg
ss
cmpsb
jp
loope
xchg
icebp
jmp
jle
xchg
pop
inc
dec
popf
jns
dec
push
movsl
inc
fwait
pop
pop
rcrb
stos
test
cmpsl
mov
or
push
push
je
inc
scas
das
cmpsl
int
daa
mov
jg
in
dec
fldenv
pop
scas
add
inc
dec
fidivrl
lcall
push
push
pop
inc
mov
mov
call
xor
call
mov
push
inc
add
jl
out
jbe
out
fists
incl
sub
cmpsb
mov
push
cmc
pop
jge
les
loopne
push
jg
xor
jg
mov
push
arpl
and
pusha
jmp
xlat
dec
out
xchg
mov
stc
stos
cltd
push
iret
cmp
rorl
ljmp
clc
incl
mov
ljmp
inc
mov
mov
lret
lret
lods
enter
or
adc
lcall
mov
imull
dec
shl
repz
scas
mov
pop
pushl
call
mov
mov
es
dec
push
out
addb
lret
pushl
xor
test
lret
and
sti
imul
pop
push
test
xor
decl
pop
bound
ljmp
dec
adc
les
xchg
sbb
pop
inc
pushl
dec
dec
xchg
out
jb
movsb
js
push
mov
mov
icebp
negb
mov
mov
es
fucomi
adc
fld
incl
mov
jp
addr16
mov
mov
mov
pop
sbb
ljmp
xchg
movsb
pop
xchg
push
shrb
cli
das
out
or
sub
jo
sub
call
loopne
ljmp
pop
stc
jp
xor
add
and
mov
testb
or
or
push
inc
cmpsl
out
hlt
mov
or
fucom
pop
sbb
decl
inc
or
lret
mov
cs
cmp
sub
lahf
cmp
jmp
pop
rcrl
pushf
call
out
fcompl
sti
add
in
cmc
sbb
add
mov
adc
push
pushaw
ds
ljmp
jle
lahf
cmp
fucom
int3
mov
cmp
add
mov
loop
mov
lods
push
cmp
xor
into
lea
push
out
shll
lods
mov
call
push
mov
adc
mov
sub
and
pushl
inc
push
insl
and
adc
int
mov
iret
push
sti
pushl
add
push
dec
mov
jmp
jp
les
mov
daa
xor
mov
mov
mov
xor
push
push
xor
jbe
cltd
inc
sbb
inc
cld
jg
sbb
and
dec
lcallw
pop
adc
lret
sbb
lcall
mov
ja
outsb
and
xor
mov
pop
mov
or
jmp
xchg
lock
sub
pusha
push
push
mov
inc
cmp
decl
sbb
bound
movd
andl
pop
scas
mov
leave
outsb
arpl
insb
inc
mov
insl
mov
int
push
lcall
lcall
jns
loopne
push
rorb
xchg
adc
xor
roll
push
jb
sbb
jge
sub
inc
insl
sbb
push
jae
pop
test
mov
lock
ljmp
in
lods
and
push
adc
enter
sti
mov
or
je
push
mov
push
xchg
cmp
jg
inc
xchg
popf
aaa
arpl
cmp
pushf
jo
inc
test
xor
les
push
sub
jl
cmpsl
mov
fisubrs
scas
push
lods
jae
jle
data16
fimuls
test
jp
sub
mov
mov
and
sbb
lds
incl
xchg
adc
outsb
mov
dec
shl
std
mov
jmp
stc
fwait
inc
push
roll
inc
lret
sbb
push
and
addr16
int
mov
push
sbb
fstpl
decl
pop
icebp
and
sub
int3
xchg
mov
mov
xchg
sbb
decb
or
test
fldt
dec
and
bound
pusha
add
adc
push
cld
ljmp
sub
sbb
inc
jbe
test
aad
cld
inc
out
and
nop
xchg
fisubs
xor
lock
fisttps
xchg
repnz
scas
push
in
inc
aas
cmp
aaa
jle
arpl
lods
cwtl
cmp
mov
pop
lcall
sub
mov
sbb
mov
data16
and
push
fcomip
cmp
xchg
jno
test
sub
mov
lcall
hlt
push
pop
or
out
mov
test
jl
dec
inc
dec
xchg
mov
and
ljmp
adc
cmp
cmp
loop
mov
movsl
clc
mov
repnz
stos
ror
mov
or
fdiv
subb
and
lcall
jmp
dec
pop
mov
push
pushl
sub
shl
jmp
aam
aam
push
sub
ljmp
dec
add
lret
or
rol
inc
jle
pop
push
rorb
add
lcall
pop
adc
mov
ljmp
sub
inc
xlat
mov
sahf
sub
scas
mov
imul
adc
movsl
jle
mov
fcompl
clc
mov
pop
or
das
push
xor
adcl
push
andl
jecxz
xchg
out
out
push
stc
divl
call
daa
jecxz
or
or
in
pushl
sti
pushw
sbb
int3
rolb
sbb
in
sahf
nop
rcrb
pop
and
pushl
xchg
hlt
jp
out
sbbb
adc
or
dec
loope
mov
into
ret
in
decl
in
mov
and
push
dec
out
lret
dec
in
arpl
test
jg
popa
fcomip
decl
jne
out
xchg
in
jg
pop
mov
das
fcoml
jle
pop
imul
cmpsb
jno
bound
push
xor
incl
xor
subl
cmp
call
call
js
test
pusha
cld
and
xor
adc
mov
jmp
or
cs
scas
mov
int3
sub
movsl
fcomi
sbb
xchg
das
add
pop
xchg
cmc
outsb
ret
mov
sub
add
adc
and
js
decl
pop
ficoml
adc
xchg
pop
mov
movsb
in
mov
cmp
jp
inc
add
pushl
and
dec
cs
push
pusha
mov
push
jae
cmp
notb
xchg
in
adc
or
mov
xor
push
xor
lcall
cmp
lods
push
repnz
mov
xchg
jbe
incl
test
rcl
cmpsl
jmp
cmp
loope
mov
push
loopne
lcall
jg
ljmp
pop
ret
mov
mov
ficoml
aas
add
inc
enter
lcall
ret
subb
jne
pop
sbb
sub
push
les
flds
insl
and
inc
mov
cltd
mov
clc
cmc
mov
mov
dec
inc
fnstenv
lds
movsb
ljmp
cmp
out
hlt
scas
shr
dec
daa
aam
mov
insl
ljmp
lods
popf
fsubs
cmp
push
push
xor
sbb
faddl
incl
jmp
push
inc
in
imull
dec
push
mov
fisubrs
pop
sub
mov
imul
jl
mov
jp
pop
mov
dec
lea
pop
bound
inc
jb
jecxz
sbb
into
sbb
mov
cmp
add
lret
pop
push
inc
inc
xor
je
outsl
push
sti
popf
dec
ljmp
clc
jp
push
fwait
mov
mov
sti
into
addb
stos
sub
add
orl
pushl
sahf
insb
ja
lock
stc
dec
insl
xchg
add
dec
inc
or
dec
and
push
std
ljmp
cmpl
jg
fiaddl
lea
mov
faddl
pop
dec
imull
inc
or
inc
ret
lea
mov
pushl
movl
xchg
lds
jg
pop
push
fdivs
push
lea
ret
xchg
lcall
incl
cltd
mov
jle
pop
inc
fstpl
xlat
jae
out
loopne
sar
ljmp
and
xchg
lock
adcl
sub
mov
add
mov
test
sub
and
sbb
decl
sbb
dec
mov
insl
or
jae
mov
or
pop
mov
fisttps
adc
je
or
jb
and
lcall
and
aaa
add
les
shll
pusha
xchg
fwait
aaa
cmp
lods
xor
or
lea
mov
xchg
test
pop
jb
and
jmp
xchg
jmp
cld
adc
fldl
mov
pop
pop
pop
jns
jecxz
fnsave
call
dec
xor
mov
xlat
movsl
scas
repnz
push
loop
push
mov
and
lds
pop
icebp
loopne
in
daa
add
xchg
and
mov
repnz
pop
imul
test
shrl
push
mov
loopne
and
ljmp
shrb
xchg
sbb
in
addr16
push
sub
ljmp
dec
push
pop
adc
jno
adc
imul
jne
out
mov
stos
inc
lcall
decl
enter
cmpsb
sbb
push
es
push
sti
lods
fs
shll
mov
out
sub
je
and
and
ljmp
push
adc
jl
pop
xchg
insl
test
lds
adc
lret
lods
sub
rolb
jmp
pushf
xlat
pop
jle
stos
iret
jne
call
mov
imul
mov
mov
fdivrl
out
imul
inc
shlb
cmc
cmc
jo
call
add
in
divl
push
out
clc
nop
rcrb
add
das
jo
in
mov
std
call
or
sub
mov
push
inc
fstpt
sti
dec
fsubs
call
mov
enter
jl
pop
or
mov
mov
sbb
pushl
sbb
xchg
xchg
lock
pop
jecxz
rol
mov
dec
dec
mov
sub
lods
cmp
test
lahf
rorl
aad
and
sbb
clc
cmp
pushf
or
sub
adc
lcall
adc
lret
pop
movsb
sub
testb
scas
and
sbb
and
mov
cmpsb
pop
mov
mov
mov
or
mov
xor
push
cld
jmp
add
arpl
out
aad
ret
xlat
mov
xor
daa
dec
inc
push
mov
inc
scas
out
lds
fcmovbe
xor
sti
imul
cmp
out
mov
adc
mov
out
push
pop
cmc
mov
sahf
ljmp
rol
mov
stos
shrl
arpl
dec
test
push
cs
xchg
in
jmp
fiadds
pop
nop
jp
push
pop
ja
jae
ja
jnp
mov
sub
pop
in
lods
push
dec
mov
in
int3
push
test
cmp
pop
push
es
sbb
pop
loopne
inc
mov
ja
sbb
pop
mov
fbld
rolb
inc
mov
pop
mov
shl
in
sbb
mov
out
or
jp
sti
mov
jle
mov
cmpl
jge
scas
push
cmpsl
or
push
addl
sbb
int
xchg
mov
jne
jne
dec
and
lahf
adc
xor
outsl
mov
mov
jnp
dec
mov
pop
sub
mov
xor
fs
jmp
addr16
jbe
into
js
lock
pop
shlb
pop
lret
lahf
dec
test
fdivrp
movsb
pop
push
sub
jbe
mov
inc
dec
mov
call
out
pop
enter
lea
ds
jb
sbb
mov
jl
jg
push
incl
cld
fistps
mov
adc
mov
pop
push
bound
inc
psubd
decl
pop
fldcw
jbe
xchg
data16
mov
push
popa
into
pop
xchg
pushf
pop
add
push
fdivs
call
jnp
xchg
pop
mov
pop
pop
and
sub
push
call
cmpsl
loop
mov
mov
push
xchg
cmp
js,pn
cli
mov
pop
xchg
push
lcall
push
lcall
jle
into
int
jle
ljmp
xor
mov
add
xchg
das
pop
test
cwtl
inc
aas
cmp
mov
hlt
xchg
pushl
cld
mov
mov
into
dec
int
mov
jbe
sahf
pop
pop
xor
call
lds
sbb
xchg
mov
dec
or
popf
inc
mov
or
outsl
jne
js
and
decl
bswap
push
repz
fldt
add
cvtps2pd
inc
pop
jo
adc
test
cmpsl
add
js
or
lds
jmp
cs
push
jnp
cmp
cmpsb
mov
mov
iret
pop
dec
arpl
jnp
xchg
mov
mov
mov
fsubr
sbb
or
or
fisttps
mov
or
incl
das
cmpb
cmc
adcb
mov
sub
inc
fst
adc
stos
movsl
hlt
dec
shrl
xor
lock
call
inc
jecxz
inc
sahf
repnz
mov
cld
cmp
lds
jne
push
lahf
push
adc
pop
mov
jns
sbb
pop
push
leave
push
cld
std
mov
push
in
ss
jbe
push
or
mov
pushl
loopne
push
sbb
clc
icebp
jb
sbb
shl
je
mov
mov
xchg
sub
add
lcall
sub
ljmp
inc
jnp
and
mov
cmp
out
daa
dec
jno
inc
or
repnz
in
ja
add
inc
je
mov
loop
lods
adc
add
ljmp
sub
adc
ror
xor
mov
push
or
cwtl
cmp
repnz
cltd
into
xor
cli
call
ret
xchg
shll
fmul
lret
dec
pop
mov
jbe
js
std
out
adc
cmp
test
inc
outsl
insb
sub
pop
jmp
dec
mov
movsl
jg
xlat
jno
scas
pusha
and
into
fisubl
mov
and
scas
xchg
negl
or
scas
notb
js
fs
lcall
stc
stos
pop
mov
pop
ja
outsb
jle
jge
mov
sbb
lret
pop
fnstenv
decl
xor
js
add
adc
mov
mov
shll
repnz
jmp
mov
mov
push
dec
mov
aad
xlat
adc
aam
jne
dec
into
dec
jg
or
jmp
roll
in
adc
inc
dec
add
sbb
mov
push
mov
mov
aaa
sahf
lret
jp
pop
mov
lods
jmp
dec
or
lods
das
pop
lret
xchg
push
dec
sbb
call
pop
ret
dec
adc
clc
adc
mov
jnp
adc
pop
mov
xor
mov
inc
dec
ret
jge
outsl
sub
and
dec
pop
cmp
jb
pop
popf
ja
pop
pop
in
cmpsl
mov
pop
loop
jns
jge
push
popf
fdivrs
popa
and
mov
scas
fcomip
jmp
into
add
adc
xchg
jb
dec
jo
xchg
inc
xor
frstor
mov
lods
data16
add
push
repnz
push
pop
dec
clc
lcall
in
xchg
ret
dec
aaa
adc
and
xchg
add
push
sahf
nop
pop
out
pop
scas
popl
xchg
sbb
stos
loopnew
ljmp
cmp
pop
xor
jno
insb
inc
decl
inc
cmp
push
jnp
jp
sahf
mov
incl
sub
push
cmp
push
mov
mov
sbbl
mov
enter
movsb
movsb
repnz
insl
push
sbb
jbe
sbb
lcall
push
and
jae
les
sub
loopne
stc
daa
mov
jg
cmp
mov
arpl
icebp
xor
popa
cmc
das
xchg
std
jne
mov
mov
cmpsb
sbb
xor
xchg
stc
and
jae
fs
mov
pop
clc
ljmp
mov
push
pop
js
push
decb
lcall
mov
out
and
aas
lods
or
les
popl
decl
jb
push
adc
dec
pushf
addb
call
or
dec
pop
add
push
jno
orl
in
sub
lcall
aas
jle
sub
cmpsl
cltd
lret
pushf
arpl
loopne
arpl
testl
jnp
add
mov
out
pop
fisubrl
jg
mov
mov
in
lret
lret
and
mov
pushf
push
popa
mov
add
scas
cmp
addb
lret
jnp
xor
mov
xlat
ss
jmp
aas
add
cmpb
xor
mov
mov
lret
mov
sbb
cmp
movsl
mov
mov
outsl
filds
int3
xchg
fldl
sbb
daa
stos
jl
pop
fcompl
lea
or
int3
add
adc
jmp
in
shrl
cmpsb
push
iret
iret
lods
push
pusha
push
call
mov
sub
popa
incl
jecxz
xor
xchg
inc
sahf
jb
daa
movsl
insb
pushl
cld
push
je
xor
sarl
sbb
push
pop
inc
cmpsb
lret
andb
std
jmp
xchg
clc
fldt
sbb
sbb
and
out
cs
push
daa
push
mov
sbb
jb
pop
jecxz
mov
xchg
mov
push
mov
cwtl
push
icebp
in
in
add
ret
xchg
jge
in
in
fs
mov
pop
jp
loope
or
mov
xlat
jmp
jge
add
pushl
or
pop
add
aam
mov
ret
mov
push
cmp
rorl
mov
mov
repnz
fsubrs
cli
sbb
clc
inc
std
xor
fisttps
and
orl
in
jmp
inc
sbb
icebp
mov
jmp
outsl
jbe
and
cmpsl
loop
negl
cmp
push
ljmp
ret
pop
push
clc
or
ret
aaa
pop
jmp
ds
decl
sbb
lret
ljmp
ja
xchg
push
sahf
pushf
add
bound
pop
adc
aad
call
mov
insl
add
int3
call
adc
outsl
or
rcr
fwait
mov
mov
and
mov
lods
aam
jg
mov
rcr
sti
int3
gs
into
decl
jnp
mov
mov
enter
sub
cmp
lcall
sub
pop
inc
inc
aas
pop
scas
xlat
mov
cmp
cli
aaa
clc
outsl
xor
out
or
mov
pushl
repz
pop
pop
test
outsl
xor
jmp
je
sbb
cmpsb
cmp
xor
mov
int3
and
mov
mov
adc
lcall
mov
dec
stos
dec
test
sti
sbb
and
dec
dec
cmc
mov
and
jbe
mov
xor
jno
pop
push
pushf
mov
jg
jg
jp,pn
cli
ljmp
lcall
outsb
rep
inc
mov
lcall
out
pop
mov
xor
pushf
outsb
jnp
fcompl
enter
dec
gs
pusha
jmp
xchg
je
sub
cmp
fimull
pop
push
cmp
push
cmp
push
jp
in
shrl
call
negl
fldl
jecxz
push
jle
ficomps
adc
imul
loop
clc
jmp
punpcklbw
icebp
sbb
gs
cmc
mov
jns
addr16
and
je
jmp
repz
ljmp
mov
or
sarb
cwtl
cmp
enter
aaa
fstpt
sbb
mov
std
add
insl
dec
and
and
inc
mov
lds
push
loopne
rorl
bound
fidivl
shll
or
or
mov
xor
sbb
jmp
mov
pop
inc
call
pop
mov
dec
xor
lea
stos
out
inc
jecxz
incl
pusha
loopne
mov
jl
push
out
jns
or
add
pusha
mov
and
jmp
rcrl
dec
cmp
jg
pop
mov
inc
or
dec
sbb
xchg
clc
pop
sahf
fistl
and
cltd
arpl
lcall
pop
jno
xchg
dec
sbb
inc
lods
imul
cmc
push
cs
stos
cmpsl
in
test
sbbl
or
les
cmp
and
sar
ja
sti
push
fdivl
loopne
lcall
inc
jp
jg
lock
pop
xor
into
adc
insb
and
adc
inc
rcrb
sub
in
cs
mov
pop
or
mov
dec
stos
push
add
push
mov
lods
mov
stos
jmp
les
sub
xor
mov
int3
cmp
es
call
iret
out
push
pop
inc
ret
lods
cmpsb
xor
xchg
cltd
stc
jae
mov
pop
mov
ljmp
dec
movsl
mov
adc
inc
cwtl
adc
call
and
pushl
add
inc
aas
mov
sbb
mov
xchg
loopne
popf
mov
imul
jmp
insb
dec
cld
ret
adc
push
rcrb
adc
mov
cmc
or
mov
aas
aam
test
call
subl
pop
sbb
pushf
lret
mov
rcrb
mov
scas
movsb
sbb
jmp
sub
cmp
into
add
push
fcomip
out
movsl
pop
lock
cmp
scas
sub
aaa
std
dec
or
out
sub
cwtl
mov
andl
das
cli
jmp
add
ds
rcr
push
push
or
test
push
add
decl
movsl
rcll
push
sahf
fmul
cmp
js
stc
cmp
rcrb
divl
movl
xor
pop
ljmp
xchg
xor
insl
dec
cmpsb
jmp
addl
pushl
into
inc
add
lret
adc
je
and
insl
int3
mov
ljmp
lcall
mov
cmpsb
jl
out
push
out
lods
test
cld
xor
sbb
sbb
xor
lcall
test
and
push
adc
push
pushf
adc
add
cli
mov
add
sbb
dec
repnz
cltd
aas
fisubrl
orb
movb
subb
ljmp
popa
or
mov
adc
outsb
lret
cmp
ljmp
call
test
xchg
jbe
mov
rorl
or
push
inc
clc
mov
adc
add
mov
adcl
addr16
mov
mov
loopne
fwait
xchg
fildll
jmp
or
sbb
sti
xchg
push
andl
scas
mov
push
aaa
mov
push
jb
xor
xor
and
test
test
adc
ljmp
mov
leave
leave
mov
das
cmpb
adc
les
es
mov
sub
xor
mov
sbb
sar
inc
lea
xor
add
nop
sahf
imul
add
movsb
ja
sbb
jecxz
lret
repz
cmpb
mov
ds
adcl
js
scas
adc
repnz
loop
ss
mov
xchg
test
arpl
mov
ljmp
fsubrs
and
mov
scas
push
mov
dec
stc
out
cmp
jecxz
daa
movsl
sahf
xor
adc
aad
pusha
call
push
popl
pop
stos
push
push
incl
and
push
mov
mov
mov
jb
lock
ret
aaa
dec
pop
cmpsb
fdivr
xchg
in
or
sub
sub
insb
fidivrl
mov
fiadds
mov
and
addr16
lock
xchg
dec
and
xor
dec
bound
ret
sarb
loopne
xor
ret
mov
rolb
loope
add
jle
scas
shrb
test
fstl
out
push
add
ljmp
fdivrs
into
faddl
add
cmp
jp
je
sti
and
jo
std
jo
xchg
inc
cli
es
push
add
stc
mov
dec
xor
je
push
jb
movq
lahf
pop
lahf
das
sbb
and
fsubr
inc
in
push
cs
fiadds
rol
subb
adc
inc
popa
sub
push
fs
add
and
cmp
shlb
dec
nop
jge
xor
sub
js
mov
mov
rcrb
mov
mov
pop
popa
adc
fbld
pop
jo
add
jne
ljmp
mov
lock
mov
addl
xchg
int3
sub
sub
test
cmp
xchg
mov
sbb
fsubl
push
sbb
sbb
and
cmpsb
mov
sub
push
jo
or
add
insb
inc
and
movsb
mov
sub
pop
xchg
lock
add
jl
xchg
sub
mov
stos
test
cs
xchg
push
dec
push
mov
mov
add
cmpb
xor
int3
cmp
sar
aam
in
add
inc
xor
or
push
and
bound
push
dec
add
in
and
sbb
fcomps
addr16
shlb
cmpsb
icebp
rclb
rorb
add
rorb
pop
sub
mov
test
pusha
mov
add
mov
xor
xor
jp
bound
pushf
movsl
es
sti
outsl
adc
cmc
xor
jp
mov
jae
xchg
sub
bound
dec
stc
or
mov
jmp
or
xchg
jle
enter
push
add
add
pop
loopne
test
loope
shrb
or
in
decb
mov
push
and
pop
fsubr
jge
push
scas
bsf
xchg
mov
adc
mov
adc
hlt
fsubr
in
or
jg
test
sub
cmp
stos
add
pop
adc
jp
add
push
ljmp
jmp
and
insb
or
dec
andb
jle
and
inc
enter
push
add
dec
insb
xchg
pop
adc
push
push
pop
int3
aaa
xchg
adc
dec
and
clc
in
cltd
mov
bnd
jl
mov
cltd
push
push
das
push
icebp
mov
or
fwait
mov
xor
gs
sbb
movsb
pop
and
aam
sahf
shld
clc
ss
mov
jg
out
jl
xor
pop
insl
inc
sbb
call
addr16
mov
cmp
inc
test
adc
adc
mov
mov
and
mov
pop
int
ss
fdivrl
add
imul
pop
jecxz
sbb
xor
pop
sub
xchg
ljmp
data16
cs
push
cmp
je
outsl
arpl
movsb
pop
push
in
adc
mov
jmp
mov
out
adc
fdivrp
pop
pop
xor
mov
push
fcompl
stos
test
ret
fisttpll
inc
stos
ds
aas
hlt
pop
out
unpckhps
lret
lods
insl
jge
adc
xchg
outsl
lret
cmp
push
nop
or
cmp
cmpl
jmp
or
les
push
scas
mov
pop
xor
jl
jb
dec
orb
pusha
lret
push
insb
pop
cmp
add
adc
imul
jp
and
gs
fnstcw
mov
pop
fisubs
clc
adc
inc
loopne
adc
sbb
sub
dec
js
jmp
pop
xor
divb
lcall
movsb
or
test
add
in
cmpb
pop
lret
cwtl
xlat
fs
sbb
pop
push
push
push
roll
or
sbbl
fsubp
lods
jmp
icebp
inc
hlt
test
in
push
insb
jecxz
cmpsl
pop
clc
adc
data16
fnstenv
jl
scas
loop
pop
mov
fldl
inc
aaa
push
out
ljmp
and
sub
pop
ret
dec
or
scas
frstor
ja
add
jmp
je
cmp
mov
lods
cli
cmp
icebp
bound
xchg
mov
pop
movsb
notb
inc
lods
ds
rorl
xchg
inc
jp
xchg
ret
aad
pusha
nop
fs
lgs
ljmp
xor
mov
fs
fwait
mov
movl
repnz
adc
adc
hlt
flds
ss
mov
xor
clc
ljmp
adcb
mov
or
lds
sub
mov
data16
sbb
and
jmp
cld
push
imul
mov
lods
stos
adc
mov
std
push
and
movsb
fdivs
cld
sub
adc
mov
sub
mov
inc
cld
sub
mov
mov
es
incl
outsb
xor
mov
push
mov
icebp
ret
gs
sti
jb
and
fs
ljmp
mov
and
cmp
in
lds
push
mov
push
gs
dec
cmpsb
or
ret
adc
or
and
sbb
push
mov
add
add
or
add
repz
ljmp
sub
sbb
inc
mov
add
jle
out
push
hlt
and
push
out
cmp
add
inc
mov
dec
popa
sbb
fidivs
lods
fdivr
push
sbb
insl
xchg
jl
data16
add
notl
aam
or
push
adc
decl
add
adc
dec
scas
clc
xor
add
jl
jmp
lahf
lods
lods
or
mov
mov
jne
popf
ss
add
mov
xor
mov
in
loope
sub
cmp
mov
fisttpll
lahf
and
shl
push
fstpl
add
pop
enter
dec
sub
lcall
mov
sbb
jg
push
add
test
movsl
mov
dec
sub
cld
jg
and
add
or
jnp
lds
pop
or
xor
mov
cmpl
mov
in
fldcw
js
orb
pop
inc
mov
arpl
imul
push
test
das
bound
inc
fcoms
inc
mov
invd
jge
or
cmp
fidivl
sub
shrb
dec
jbe
jne
push
add
pop
cmp
jbe
clc
pop
cltd
adc
lret
fsub
shll
dec
test
mov
daa
les
addr16
imul
sub
iret
xchg
lds
ror
xchg
xor
and
lcall
inc
adcb
aad
inc
repz
dec
lock
cmpb
ficomps
xchg
sub
and
mov
pop
mov
lahf
stc
cltd
mov
inc
das
jnp
add
or
inc
and
pop
lret
js
sbb
mov
sbb
js
and
xchg
cs
out
data16
xchg
mov
sbb
flds
and
sbb
xchg
or
ljmp
jp
or
sar
mov
push
rcr
add
mov
mov
cmp
fpatan
pop
push
outsl
jmp
inc
add
or
xor
sbb
jne
std
sbb
stos
push
es
add
or
sbb
mov
fistl
lcall
mov
aaa
loopne
mov
jle
out
cmp
scas
inc
out
leave
icebp
ljmp
add
push
incl
and
ljmp
cmc
inc
test
add
xor
xor
aaa
js
inc
sahf
mov
add
insb
lock
je
pop
jb
sub
add
test
and
push
fcmovnu
or
jge
lret
cmp
cld
push
cs
in
fstpt
stos
ljmp
jp
fdivp
addl
cli
and
jl
loopne
dec
push
inc
in
sti
outsb
xor
or
fsubrs
bound
ret
mov
xor
push
cmc
pop
cmpl
jnp
jnp
mov
jg
adc
mov
lods
dec
add
push
jg
or
jmp
adc
loop
push
subb
inc
adcb
dec
aad
push
and
fsubr
add
mov
or
vpavgb
add
adc
push
push
lock
fidivrl
jbe
add
ja
jg
in
cmp
add
push
sub
lock
or
pop
shrb
adc
int
ret
pop
flds
push
outsb
sbb
inc
pop
adc
scas
inc
stc
popa
adc
inc
stos
or
imul
ds
in
in
int3
js
cld
stos
or
pop
bound
push
mov
sub
mov
enter
cmpsl
mov
fsubrs
adc
pop
or
add
pop
nop
add
stos
mov
std
mov
rorl
pop
push
pushl
imul
jle
push
mov
inc
insb
pop
add
push
or
insb
add
mov
inc
test
adc
push
cmp
imul
cmpsb
cmpb
pop
mov
mov
int3
in
add
mov
cli
mov
dec
sbb
mov
pop
sbb
xchg
fdivr
sar
fistpll
insb
xchg
pusha
js
jge
in
dec
mov
pop
xchg
add
arpl
negl
add
sbb
pop
in
mov
jno
loop
pop
jl
dec
xor
inc
enter
sub
inc
repz
ljmp
cmp
mov
jecxz
add
cmp
jge
add
imul
mov
dec
loop
adc
ja
into
nop
test
pushl
jnp
icebp
sbb
mov
push
fildl
xchg
popa
mov
sbb
imul
jle
mov
pop
stos
cmp
pop
call
lock
pop
lret
or
pop
jae
xor
mov
cld
stos
mov
xor
or
mov
call
xchg
or
adc
sbb
push
icebp
inc
es
and
rolb
in
imul
sub
and
lret
fsub
into
mov
mov
xor
test
or
outsb
add
and
xor
push
fsubs
or
mov
or
inc
adc
andb
fnsave
mov
cld
inc
js
dec
jb
les
pop
add
push
adc
shlb
and
rorb
sbb
popa
adc
or
test
xchg
add
cmp
imull
fs
call
push
fisubl
fs
cmpb
arpl
jo
xorb
pop
sbb
cli
sbb
add
fimuls
mov
add
je
cwtl
and
aam
cmp
push
xor
dec
hlt
mov
inc
add
lcall
testb
push
jp
cmp
lds
cli
bound
jmp
sub
lods
and
notl
mov
inc
gs
fldcw
fsubl
add
mov
inc
js
nop
xor
mov
or
mov
sub
add
dec
xchg
pop
imul
adc
popf
nop
push
decl
mov
cli
inc
aad
jbe
jo
jle
and
lds
pop
lock
idivb
fldl
sub
imul
loope
inc
stos
incb
sbb
cmove
mov
xchg
fldt
icebp
mov
aam
call
xchg
lret
mov
pop
cmp
dec
adc
lods
scas
stos
icebp
push
xor
dec
data16
sub
cmpsb
push
mov
loope
or
cs
adc
lahf
insb
jno
push
sahf
add
push
aad
xor
popf
push
inc
jle
call
adc
decb
test
mov
aam
loop
arpl
lods
and
fildll
in
aam
mov
jmp
inc
xor
add
jb
and
loopne
lods
mov
push
xlat
outsl
movsb
pop
mov
jge
imul
bound
int
xchg
loopne
and
incl
jmp
lcall
outsb
pop
int
or
roll
hlt
xor
mov
fs
mov
mov
roll
ret
movsb
imul
movsb
or
bound
push
pusha
lds
and
sarl
mov
cltd
xlat
aam
rolb
test
movl
dec
add
mov
ret
xor
mov
inc
sbb
jl
pop
aas
adc
out
dec
or
and
rcl
push
aaa
es
pop
mov
out
pop
inc
inc
sbb
iret
movsb
sbb
call
sbb
popf
imul
aam
mov
mov
add
xor
icebp
pusha
pop
fsin
push
insb
scas
dec
scas
loop
inc
xchg
es
imul
pushf
and
cli
inc
xor
push
pop
clc
xchg
push
adc
mov
push
mov
out
popa
insb
mov
add
js
xorb
clc
xchg
ret
xlat
shl
sar
mov
cltd
fisubrs
sbb
dec
popf
xchg
mov
mov
andb
mov
cld
fs
mov
int3
mov
fmull
jp
test
push
cld
add
jle
cmp
lock
fmul
mov
xchg
ret
jp
loopne
hlt
shr
inc
xor
jne
lock
and
dec
cld
mov
xor
std
mov
adc
pop
adc
xchg
les
leave
rcr
cmp
dec
es
push
repz
adc
adc
dec
jmp
jb
sub
mov
add
fldenv
push
add
lea
jbe
sub
or
jge
pop
xor
sbb
mov
subb
repz
int
clc
push
ret
xlat
or
orl
fildll
hlt
lods
shll
add
pop
jae
fcmovnb
roll
decb
adc
mov
sbb
imul
push
add
inc
inc
testb
ds
imul
fwait
in
or
cmp
mov
das
aam
and
xchg
insl
pusha
push
and
dec
cwtl
inc
sti
cld
or
mov
push
rcrl
mov
insb
ds
dec
shr
pop
stc
add
push
stc
jp
adc
std
jmp
loopne
jno
fsubrl
or
adcb
cmp
rcll
nop
mov
mov
mov
cmc
push
adc
pusha
adc
add
out
out
pop
sbbb
xchg
push
xor
ret
clc
ja
hlt
out
test
lcall
or
pop
orb
dec
je
mov
movsb
and
inc
fstl
fisttps
jbe
push
mov
mov
cmpl
fmull
or
adc
dec
subb
test
gs
fisubrl
sar
je
in
iret
dec
mov
movsl
push
mov
dec
add
int3
popf
sarl
andb
inc
sbb
sbb
or
js
fists
fstpt
loop
jb
inc
fimull
arpl
fdivl
roll
mov
sbb
pop
insb
fstpt
push
adc
inc
cmp
and
mov
sahf
dec
stos
negl
out
mov
int3
mov
mov
dec
rolb
lock
clc
push
adc
pop
aam
insb
out
pop
adc
mov
or
movsl
bound
gs
out
mov
or
int
push
cld
incl
pop
adc
ljmp
add
in
cmc
inc
adc
sub
cs
sub
push
jp
popf
sub
or
ud0
dec
or
jne
mov
xchg
stos
hlt
stos
push
and
loop
add
sub
aam
sub
fiadds
mov
mov
mov
jg
ret
and
jo
cmp
lcall
add
jb
rol
test
test
add
push
sub
jae
jno
mov
xlat
cld
cmp
pop
xchg
pop
cli
in
ret
mov
mov
icebp
and
les
outsl
insb
jmp
out
repz
testb
mov
add
movsb
sbb
insl
jge
add
push
add
scas
and
rclb
popa
pop
enter
mov
push
sti
mov
outsb
jnp
adc
std
clc
and
inc
cmp
ret
fbstp
xchg
jl
std
hlt
outsl
int
adc
jl
pusha
push
jg
mov
inc
sti
push
call
sub
add
stos
popa
jo
fcomip
mov
jmp
roll
cli
les
fisubrl
lret
jbe
cmp
pop
adc
fwait
je
std
fs
jge
leave
insl
xchg
inc
enter
sbb
and
shlb
outsl
js
or
cmp
mov
push
scas
inc
fdivr
cltd
adc
lahf
addl
ret
push
mov
add
or
xchg
mov
xor
push
mov
sar
inc
add
incl
lcall
adc
hlt
js
or
mov
clc
jg
cmp
mov
push
cmc
sbb
xchg
fdivs
mov
push
aam
adc
in
idivb
pop
cmp
int
enter
lret
adc
cmp
rclb
add
push
test
lock
mov
pop
xchg
pop
mov
xlat
push
jle
push
adc
int
sub
sub
lret
inc
js
mov
scas
data16
lods
ret
shrb
lods
xor
lret
imul
mov
rol
lcall
stos
fwait
cmp
fdiv
pop
mov
outsb
mov
cmp
fndisi(8087
jne
inc
sub
xor
and
and
rcr
aaa
cld
mulb
pop
call
xor
cmp
pop
mov
cmp
mov
inc
fmul
lea
push
xchg
rcl
fistpl
and
mov
jb
pusha
add
add
inc
jae
push
xchg
fimuls
xor
jbe
mov
add
jp
movsb
pop
push
jb
mov
mov
lahf
mov
sbb
inc
les
orb
shrl
hlt
adc
dec
insb
and
ret
std
aad
sub
incl
pop
inc
call
rcr
push
pusha
mov
mov
xor
pop
mov
mov
pop
shl
xor
adc
add
js
repnz
inc
sahf
inc
stos
and
lock
loop
jg
aad
fsub
test
call
mov
pushf
loopne
fildll
add
dec
fstl
fadds
outsb
aaa
addb
decl
loop
insb
dec
jp
adc
push
xor
push
fwait
or
xchg
adc
sbb
jns
sarb
nop
mov
push
in
arpl
or
xchg
call
xor
stc
iret
roll
xor
mov
addl
lret
imul
xor
imul
lcall
ljmp
pop
and
and
lock
push
xor
xlat
call
ret
push
add
movsb
push
in
mov
cmpsl
test
sbb
xchg
ficoml
pop
add
inc
mov
mov
mov
inc
jecxz
call
scas
pop
mov
jle
adc
add
fst
push
jb
xor
or
cs
push
nop
mov
ret
movsb
sbb
cld
int
mov
cli
into
jp
add
mov
divb
movsb
mov
hlt
sub
cld
dec
cld
int
cmp
cmp
mov
ret
jmp
les
daa
mov
inc
xor
jo
xchg
add
neg
sub
cmp
sub
imul
xor
loopne
into
sub
mov
and
insl
imul
mov
add
or
mov
cs
add
repz
ljmp
or
xchg
dec
push
fldl
loopne
cld
sbb
out
adc
les
jge
mov
add
clc
loop
enter
addb
mov
stos
mov
sub
addb
fistps
test
xor
add
push
push
xor
mov
sbb
push
stos
xor
sbb
test
xor
lock
ja
xchg
push
lds
cli
fucomi
adc
mov
sbb
push
test
fisubs
aaa
mov
test
jbe
call
cwtl
fs
sbb
mov
push
jmp
mov
pop
cmc
pop
add
test
mov
shlb
push
fwait
mov
mov
into
adc
stos
mov
mulb
mov
insb
add
pop
insl
movsl
popf
lcall
dec
mov
ljmp
cmp
jo
outsl
and
xchg
xchg
stos
lret
or
sbb
add
in
mov
ret
dec
incb
sbb
add
push
xor
add
gs
imul
imul
leave
cwtl
outsl
mov
ja
or
mov
xor
or
pop
pop
xor
lock
cltd
adc
ret
pop
mov
insl
mov
incl
mov
fwait
jg
movaps
jnp
jo
inc
clc
test
shr
push
dec
xchg
dec
xor
dec
mov
jb
addb
mov
outsl
mov
jecxz
mov
test
mov
insb
inc
xchg
xchg
loopne
pop
mov
sti
outsb
imul
inc
cld
int
mov
pusha
add
leave
add
int
ljmp
sbb
xchg
cmpl
cmp
loope
enter
cmpsb
push
dec
jmp
fcmovnb
cmc
and
jmp
mov
xor
scas
sbb
inc
loope
imul
jl
or
outsb
test
imul
inc
cld
sub
mov
iret
pushf
cmp
int
outsb
mov
sub
inc
sbb
and
iret
add
sbb
sub
cmp
outsb
push
lock
fidivs
clc
into
out
js
fcoml
test
pop
addb
fwait
clc
fucomip
fists
sbb
subl
data16
adc
xor
add
les
movsb
push
daa
outsl
xchg
adc
push
push
pop
mov
mulb
lods
inc
inc
leave
aas
push
mov
ss
lret
sti
incl
jns
out
cmp
inc
filds
cld
and
adc
pop
push
cmpsl
rcrl
loop
and
cli
cmp
mov
fidivrs
mov
idivl
xor
lret
mov
lahf
outsb
shll
jmp
mov
adc
ss
out
sbb
cltd
adc
push
cli
and
push
int
lahf
or
js
decl
xchg
adc
lcall
xchg
xchg
cwtl
shlb
scas
inc
scas
inc
inc
mov
or
and
pop
dec
imul
lock
inc
insl
xor
add
mov
rol
inc
mov
push
mov
mov
or
stos
add
or
and
or
xor
mov
aaa
lods
loop
cltd
add
repnz
mov
inc
or
cmp
inc
cmp
lret
mov
xchg
mov
jg
aas
mov
ret
inc
cltd
mov
xor
dec
lahf
fcomip
inc
or
pop
push
stos
push
test
push
sub
stos
inc
mov
add
movsl
decb
add
sub
jp
xor
je
add
xchg
aam
push
inc
sbb
sbb
inc
pop
leave
and
ds
pop
dec
imul
lea
out
or
inc
js
hlt
push
dec
and
pop
mov
xor
aas
pop
mov
mov
add
adc
pop
out
into
test
in
sbb
push
sub
mov
das
into
mov
jle
cmp
cmpsb
push
in
jg
or
call
and
sbbl
ret
sarb
fildll
add
and
js
xchg
push
push
bound
loopne
pop
sub
popa
inc
adc
mov
mov
sarb
out
sahf
loopne
fldt
and
in
cmp
jno
je
push
xchg
adc
sbb
sub
mov
mov
lahf
xchg
inc
lcall
push
lcall
stos
cli
sbbb
inc
jle
popa
out
and
shll
imul
scas
pop
xchg
ficompl
test
pop
or
inc
sub
cmpsb
rcrl
xor
push
lods
jmp
lahf
loope
inc
call
mov
lock
and
mov
mov
dec
test
jp
jo
push
cltd
mov
add
out
sub
out
jo
lret
aas
mov
fisttps
lods
xchg
arpl
jecxz
sbb
les
xor
insl
cmp
sub
xlat
dec
xchg
jle
pop
cmp
pop
clc
outsl
adc
cmp
adc
xchg
gs
enter
xchg
and
aaa
imul
adc
sarl
push
cmp
into
jbe
nop
enter
aas
scas
aad
fistpll
popf
mov
incb
jmp
dec
xchg
cmpsl
mov
fisttpll
mov
imul
negl
outsl
push
popa
ss
bound
loope
ljmp
call
or
shlb
std
adc
cld
ljmp
fwait
dec
shlb
sub
dec
sub
and
mov
loopne
mov
popa
leave
aam
out
repz
mov
ret
sbb
jecxz
fistps
adc
gs
xchg
loopne
jno
lcall
jno
dec
jecxz
pop
mov
aam
out
mov
add
add
call
and
dec
push
or
or
xchg
js
jmp
mov
stos
dec
pop
inc
and
popa
enter
sbb
jmp
jg
add
repnz
scas
add
add
cmc
push
call
mov
mov
mov
loopne
cmp
mov
sarb
idiv
in
loop
xor
fcomps
adc
ljmp
or
hlt
stos
inc
fcomi
and
mov
cmp
mov
loope
jg
mov
scas
loopne
pop
loopne
cmpsb
mov
push
xchg
and
das
xchg
rcl
lea
push
aam
inc
mov
and
ret
shll
aam
or
fiaddl
cwtl
mov
xchg
xchg
loopne
imul
xor
daa
orb
push
sub
or
pop
sub
sahf
jbe
adcl
xchg
sahf
test
push
mov
data16
fisttpll
push
cld
jmp
sahf
cmp
jg
cli
push
rolb
jns
out
mov
sub
leave
sbb
fwait
cli
mov
and
rcll
xchg
jno
or
loop
or
scas
lods
xchg
adc
fiaddl
repz
loop
xor
xor
push
push
pop
add
jp
mov
rorb
mov
cmpsb
cld
xlat
xchg
push
xchg
or
and
jns
loopne
es
mov
movsl
mov
mov
push
cs
sbb
mov
mov
cmpsb
notb
je
movb
filds
or
outsl
mov
cmpsl
je
jmp
mov
push
add
inc
fistps
adc
in
xchg
mov
pushl
test
add
ret
mov
out
cli
add
cmp
daa
push
lods
xchg
mov
cmpsl
outsl
lahf
or
int3
cs
stc
and
mov
inc
mov
call
ja
jno
adc
inc
pusha
sbb
jmp
mov
mov
pop
adc
push
shrl
pop
cmp
sub
cmc
push
int3
fs
jecxz
add
ret
rorb
push
cld
pop
add
nop
sub
rcll
icebp
or
or
pop
or
xor
jne
or
mov
push
ret
je
fwait
cli
insb
push
mov
cmp
nop
sarl
mov
push
xor
loop
xor
dec
repz
inc
xor
mov
ljmp
in
inc
lods
fists
xor
cmp
mov
cmpsl
mov
fldcw
dec
lock
in
hlt
testl
mov
push
cli
xlat
pop
add
dec
push
and
pop
jp
dec
popf
dec
cmp
fs
xor
popf
pop
std
popl
mov
dec
add
pop
push
rcl
jae
add
mov
sti
cmpsb
add
dec
and
mov
pop
cmp
enter
mov
call
out
ja
dec
jp
icebp
aad
add
sti
xchg
xor
popa
add
andl
addl
dec
add
inc
cmp
xchg
ljmp
mov
sub
fsts
cmpsb
cmp
xchg
pop
addr16
inc
add
dec
or
dec
adc
fidivrl
mov
and
pop
pushf
clc
add
popa
shlb
loopne
pop
xchg
mov
jbe
push
lods
aam
call
dec
out
add
imul
mov
dec
or
xor
cltd
scas
mov
add
into
call
stos
adc
jno
cmp
add
ja
or
leave
xchg
dec
test
mov
xchg
fwait
nop
jno
push
or
mov
lods
and
pushf
cmc
arpl
and
push
sub
add
add
jmp
sub
mov
in
push
jecxz
jge
lret
or
dec
addr16
shrb
movsb
iret
scas
or
lcall
cs
jg
sbb
jns
sbb
mov
inc
shll
int
das
jecxz
or
mov
ljmp
cmp
or
adc
jmp
sub
jecxz
cwtl
adcb
or
icebp
popl
xchg
push
mov
xchg
faddp
add
inc
je
inc
jg
orl
outsl
addb
push
inc
mov
adc
mov
aad
mov
and
dec
push
arpl
or
ficompl
aas
mov
sub
mov
loopne
call
scas
fcoml
lods
inc
cld
cmp
mov
xchg
lds
push
pop
pop
shlb
mov
mov
dec
inc
mov
insl
mull
adc
xchg
xorl
pop
loop
jecxz
xchg
cwtl
dec
icebp
cmp
test
fistpll
and
pop
cmp
enter
add
xchg
nop
clc
incl
jbe
or
divl
inc
loop
jbe
adc
push
ss
add
mov
insb
add
movsl
stos
cmp
pop
add
inc
or
inc
cwtl
add
pop
rorb
test
fwait
sub
es
jp
rcr
pop
pop
in
jg
les
test
mov
sbb
adc
add
jl
mov
stos
cmp
and
lret
cmc
mov
or
out
roll
movsb
sub
xcrypt-ofb
cmpsl
out
aas
aam
aam
cmc
sbb
in
test
add
cld
aad
cmp
pushf
fsub
pop
xchg
orl
xchg
movsb
ffreep
mulb
jae
mov
inc
sbb
out
mov
in
xchg
mov
mov
incl
fcmovbe
inc
inc
jg
sbb
cltd
inc
aad
jle
sti
sbb
cs
adc
test
push
lcall
adc
lea
outsl
or
cwtl
es
out
or
leave
daa
cmp
clc
shrb
or
ja
leave
mov
add
inc
sub
in
scas
jecxz
stc
je
push
pop
lods
lret
gs
es
xlat
mov
push
pop
rcrb
mov
das
stos
adc
cmp
pop
sbb
stos
dec
sub
lret
fiaddl
ljmp
mov
les
cmp
pop
push
out
mul
push
fsub
push
sarb
dec
sub
xor
jge
lahf
add
js
and
jp
ss
clc
lock
jne
sub
xlat
jns
push
daa
mov
test
adc
push
imul
mov
xor
aam
clc
mov
test
repnz
orl
ljmp
cli
pop
xor
int3
bound
sbb
push
loopne
add
out
adc
incl
je
push
dec
cmp
xor
dec
or
dec
cld
jmp
or
decl
xor
insl
cmc
ja
xor
or
xchg
adc
mov
cmpsl
mov
push
lret
lods
cli
xchg
inc
push
sar
sbb
mov
xor
adc
jne
in
jae
mov
shl
sbb
jne
or
aaa
or
fwait
or
je
add
scas
movsb
into
jmp
adc
jno
sbb
cmp
or
and
adc
sahf
xor
stos
scas
cs
out
leave
fimull
pop
jno
icebp
cld
add
es
adc
ret
leave
mov
lock
movsl
xchg
fistps
lret
mov
shrb
pop
mov
jno
add
xor
lret
hlt
xor
or
sahf
mov
pushf
mov
sbb
decl
xor
add
popa
mov
das
fisubs
xor
xor
lock
sub
xor
push
push
fwait
cmp
dec
sub
xchg
jl
std
dec
js
loope
jp
mov
inc
sub
notb
add
pop
mov
mov
jg
test
loope
rolb
movsl
aam
mov
push
jbe
shrb
rcr
cld
addr16
sarl
lock
push
xchg
outsb
inc
jnp
adc
push
out
cmpsb
hlt
sbb
push
add
rcll
lret
cmp
and
js
xchg
mov
jl
out
pop
cltd
sub
pushf
push
pop
xchg
mov
mov
rcll
xchg
jns
push
push
sahf
add
lock
stos
inc
jbe
imul
xor
clc
aad
mov
mov
insb
sbb
outsl
mov
cmp
cs
stos
enter
pop
xor
add
into
add
movsl
loope
lret
inc
arpl
loopne
cmp
push
fisubl
or
or
sarb
dec
scas
xor
cli
push
das
sbb
add
enter
cwtl
add
add
or
fstpl
mov
sbb
push
add
repz
jg
push
cmp
xor
cmpsl
sahf
xor
mov
jl
pop
dec
sub
mulb
xchg
rcr
and
push
pop
mov
popa
shrl
fs
pop
pop
cmp
mov
cmpsl
sbb
nop
popf
outsb
std
inc
pop
mov
nop
notb
and
and
rolb
cmpb
xchg
xlat
roll
leave
gs
sub
cwtl
fcmovu
lock
push
fbstp
popa
lret
xor
das
xor
lret
jmp
es
add
ljmp
inc
int3
int3
cmpsl
sub
outsb
mov
sub
push
fs
mov
fidivrl
mov
std
adc
fcomip
testl
ds
jp
push
loopne
inc
inc
and
pop
mov
ret
cmp
dec
insb
push
jne
push
lds
sbb
push
out
mov
mov
or
adc
inc
incl
cld
smsw
popa
scas
mov
jne
jp
sub
fs
icebp
cmpsb
stos
fcmovb
cmp
fidivrl
ficoms
inc
dec
xor
lret
cmp
dec
fiadds
sub
inc
inc
cmpsl
add
mov
aam
cmp
mov
mov
and
ljmp
adc
and
popl
mov
sbb
and
push
mov
pop
pusha
test
fcomip
push
mov
or
xchg
aad
cmpb
cmpsb
mov
mov
cwtl
xor
adc
outsb
shlb
jae
ljmp
push
or
ds
sub
jbe
mov
inc
cmp
jl
dec
jno
loopne
out
pusha
inc
addr16
in
into
ljmp
scas
fadds
sbb
nop
cmp
or
movsl
fcoms
cltd
or
iret
clc
inc
or
int
adc
xor
icebp
sbb
xchg
xor
rclb
lock
lock
ret
lock
push
outsl
je
jo
mov
ljmp
inc
dec
pop
xor
mov
call
pop
insl
or
add
arpl
stos
movsl
xchg
sbb
push
aaa
pop
sbb
sahf
jp
lcall
cmpsl
fbld
roll
jne
fadds
sti
stc
repz
dec
mov
adc
cmp
jmp
js
sub
sti
and
mov
push
cli
loope
pop
jge
sub
sbb
iret
js
push
sub
pushf
xchg
or
les
sbb
pop
ljmp
dec
loop
shlb
dec
cmp
adc
data16
add
pop
mov
sahf
cs
fwait
cmpsb
cmc
push
shlb
adc
daa
clc
push
popa
popa
and
decl
inc
pop
js
ss
lods
add
xor
lods
dec
and
fistl
cwtl
lahf
es
mov
sbb
enter
push
mov
inc
mov
loopne,pt
or
iret
fcmove
add
ss
xor
and
mov
adc
adc
cmc
outsb
cmp
cwtl
cltd
mov
adc
dec
cmpsb
adc
frstor
lods
ret
ja
ret
jle
sbbl
out
clc
add
insb
and
mov
mov
jge
adc
sbb
mov
es
jge
pushf
cmp
mov
xor
orb
add
sub
adc
je
lock
cli
outsl
repnz
rcrb
mov
cmp
inc
jnp
jle
adc
shl
je
pop
insl
xchg
sbb
call
add
dec
out
pop
and
jo
out
and
push
loope
stos
mov
dec
test
insl
cli
lahf
push
sub
lcall
out
xor
mov
push
mov
mov
mov
or
fs
stos
pop
loopne
or
cli
out
sub
inc
mov
rclb
nop
or
cmp
into
cwtl
inc
imul
mov
fcompl
pusha
test
dec
imul
xchg
jae
add
outsb
cmp
xchg
push
sbb
insl
and
ds
jnp
pop
clc
data16
add
insb
cld
or
or
mov
or
aad
xor
rep
push
or
mov
sub
in
add
pop
lock
or
imul
push
shlb
xlat
mov
push
lock
mov
push
hlt
add
lock
je
add
and
incl
loop
cmp
or
test
cld
inc
mov
sbb
dec
fistpl
xacquire
sub
pop
sub
in
xor
xchg
sti
jg
mov
pop
pusha
adc
dec
and
jno
pop
inc
bound
clc
adc
idiv
push
enter
fbld
mov
aas
inc
movsb
das
dec
push
dec
xchg
jo
bound
push
jecxz
sti
add
mov
mov
scas
cli
and
fs
sbb
movsl
push
add
andb
in
sbb
outsl
add
fadd
sub
hlt
mov
pop
lds
push
push
jge
loopne
ljmp
test
pop
mov
sub
sbb
bound
push
push
popa
xchg
mov
sub
scas
push
pop
stc
fldt
mov
call
out
in
lcall
pop
push
inc
pop
insb
les
mov
cmp
xor
xlat
test
rol
jno
test
push
mov
insl
shrb
mov
js
icebp
xchg
repz
add
adc
xchg
dec
mov
jb
sbb
jle
pop
icebp
cmpl
sub
sbb
shl
xlat
mov
ret
pop
xor
in
push
cld
inc
popa
mov
into
test
ss
add
lods
xchg
push
sbb
mov
and
add
sarb
lahf
bound
lock
xor
push
push
arpl
and
sbbb
dec
mov
xchg
mov
xlat
and
push
sti
pushf
bound
and
inc
mov
push
pusha
pop
fbld
mov
cmp
xchg
or
adc
or
bound
push
pop
test
inc
mov
js
and
andb
fwait
scas
sbb
sbb
bound
popf
and
adc
sub
push
call
or
mov
fnsave
add
movhps
shr
lods
push
sbb
xchg
inc
nop
loopne
out
fsubs
push
loopne
aas
adc
mov
pop
push
dec
lret
lods
mov
fxtract
and
cs
xor
nop
jl
pop
add
mov
andb
fcomps
in
or
stos
fcoms
xchg
testl
sbb
adc
push
hlt
insl
loope
push
pop
sbb
inc
movsl
push
and
popl
outsb
xor
es
jl
jg
add
jo
dec
pop
shll
mov
or
adc
cmpsb
push
pop
and
sub
jge
mov
cmp
test
xor
pop
mov
je
lods
mov
mov
ret
cmpsl
insl
sti
pusha
fisttpl
adc
dec
adcb
cmp
into
scas
push
dec
jmp
sub
loop
inc
sub
sbb
xor
xor
sbb
push
divb
xor
aas
cld
inc
add
push
jbe
cmpsb
jge
lcall
jl
ret
clc
arpl
arpl
movsl
push
mov
inc
shlb
dec
mov
jnp
dec
dec
mov
mov
jmp
xchg
push
or
shrb
push
dec
pop
and
jl
inc
pop
das
insb
lods
ljmp
add
test
orl
jne
lds
movsb
cmp
mov
fbstp
mov
and
pop
in
inc
enter
pusha
aaa
or
fildl
push
jne
dec
sahf
leave
fisttps
outsl
test
dec
jp
scas
std
pop
pop
adc
and
xor
std
call
scas
or
jp
inc
mov
dec
mov
pop
jle
sbb
cmp
jle
cmovge
icebp
fcoml
pop
fdivrp
insb
and
mov
dec
pop
mov
push
push
sub
movsb
dec
push
fsubrl
mov
and
cmpsw
jmp
push
xor
aam
mov
mov
mov
sar
clc
or
push
jbe
fmull
fcmovnu
out
lock
push
ret
xchg
mov
cmp
enter
mov
movsb
out
mov
or
xchg
ss
clc
or
adc
shrl
xchg
mov
cltd
mov
pop
ljmp
jnp
out
xchg
jbe
hlt
es
mov
push
sbb
ret
push
cli
cltd
cmp
push
jnp
popa
movsl
and
add
push
outsb
icebp
loopne
jno
xchg
fidivl
mov
adc
sub
bound
fsubrl
dec
push
xchg
pop
push
xchg
and
outsl
sbb
jle
push
adc
sub
aam
sbb
push
adc
stos
dec
bound
push
mov
mov
cwtl
mov
out
lret
sbb
sub
and
icebp
fucomi
int3
jl
jl
or
sarb
ret
stc
jle
dec
adcl
cmp
jmp
or
clc
cwtl
inc
add
in
push
and
mov
cmpsb
and
pop
loopne
pop
insb
test
jo
out
xchg
xor
push
mov
mov
cmpsb
add
lahf
sbb
fisubl
ds
shlb
roll
sbb
and
popf
dec
test
or
rorb
scas
or
movsb
pop
subb
pop
out
scas
not
jp
bound
xchg
mov
cmp
loopne
in
adcb
mov
testb
lods
push
into
push
push
daa
sarl
mov
aaa
sbb
or
mov
push
sbb
mov
add
sbb
add
dec
subl
or
pop
fidivs
adc
jle
popa
adcl
sub
cld
ds
cmc
insl
sub
push
xchg
cmpsb
sub
setns
ljmp
notl
sbb
cmpsb
rcl
lret
xor
and
das
and
adc
outsb
fsubrl
and
lock
out
ja
jb
rolb
xor
mov
out
mov
push
jl
fisttps
dec
sub
in
shll
mov
fwait
jo
mov
mov
loopne
jo
cmpsl
ja
and
cmpsb
xor
push
cs
hlt
daa
jecxz
fidivrs
ljmp
movsb
fwait
sbb
hlt
adcb
stc
movsl
and
adc
mov
sub
pop
xor
xor
or
add
pusha
aaa
mov
fimull
jb
ret
xchg
xor
pop
push
inc
std
ror
sub
sub
sbb
sbb
shl
adc
hlt
xor
mov
movb
push
in
ja
mov
mov
jl
mov
push
xor
dec
pop
out
add
rcl
call
cwtl
sbb
ja
jo
testb
fidivs
shlb
jl
pop
mov
enter
mov
or
inc
dec
push
subl
mov
or
repz
clc
and
sbb
insl
inc
sub
jae
mov
lds
sub
mov
push
cs
mov
mov
or
jl
pop
sbb
sbb
add
lcall
rcr
scas
shlb
pop
push
xorb
mov
xlat
les
push
xchg
push
ficoms
ret
xchg
mov
dec
int
push
dec
mov
orb
lods
sub
mov
mov
jmp
pop
dec
lea
sbb
mov
out
cld
ja
ret
ret
pop
or
mov
or
inc
mov
pushf
xor
xchg
mov
and
add
aad
mov
dec
rolb
lods
rcl
mov
xchg
fdivrs
adc
xchg
aaa
mov
insb
out
mov
dec
or
push
inc
std
mov
adc
pop
mov
pop
xor
ljmp
push
stc
icebp
inc
std
cwtl
pop
cld
fs
lea
fistps
mov
filds
dec
xor
cmp
fildll
pop
adcb
pop
xchg
int3
dec
sbb
dec
and
push
hlt
cmp
out
push
lods
mov
lret
push
add
ret
ss
pop
dec
jecxz
je
or
dec
les
mov
sbb
dec
pop
add
mov
xchg
dec
call
mov
enter
jns
jl
mov
out
pop
cmp
add
sub
add
adc
testl
and
mov
add
sub
jle
and
xchg
add
add
sbb
aaa
std
aas
adc
inc
mov
ss
and
nop
int3
jle
outsb
or
fs
ficoml
dec
or
outsb
jp
mov
pusha
stc
subb
add
pop
cmp
jmp
in
pop
mov
jle
hlt
add
popa
sbb
daa
test
sub
mov
int3
sti
pushf
aas
insb
mov
ljmp
adc
push
rcr
mov
or
add
push
rcl
pop
cld
xchg
incl
mov
mov
lds
lea
mov
outsb
cmovg
push
cmpsl
fwait
pop
icebp
add
cmc
inc
mov
lods
mov
or
idiv
fiadds
leave
das
mov
fisttpll
incl
aam
jl
clc
push
mov
out
jmp
mov
jecxz
ljmp
push
pop
popf
or
fstl
je
popf
in
jmp
int3
xchg
jg
pop
mov
dec
inc
push
stos
lret
push
cmp
adc
pop
or
xlat
dec
nop
adcl
dec
repnz
add
mov
lahf
pop
add
lcall
hlt
push
imul
fdivr
sub
das
fldenv
adc
sbb
cmc
adc
test
cmp
into
loop
adc
leave
push
lcall
cmc
mov
xor
xchg
ds
jne
pop
xchg
sbbl
lock
roll
inc
cmp
sbb
or
add
inc
mov
icebp
lds
or
stos
pop
add
scas
stos
int3
std
add
add
lahf
xor
roll
mov
pop
imul
push
leave
ror
jge
out
pop
sbb
shl
test
int
data16
loopne
pop
std
push
sbb
sbb
ja
jecxz
xor
push
insl
jne
outsb
xor
cmpsb
mov
and
leave
fbstp
and
sbb
mov
pop
cmp
mov
sub
outsb
jp
cs
cmp
fisubrs
ret
lock
push
test
jno
mov
test
in
and
cltd
add
test
xchg
jg
std
addr16
sbb
mov
fcomip
std
jae
sahf
mov
or
add
mov
cmp
lods
icebp
bnd
enter
xchg
push
repnz
orb
pushf
and
and
clc
cmp
xchg
jne
jo
bound
jecxz
dec
in
lret
outsl
outsb
sub
aaa
inc
push
lahf
insb
nop
lret
sbb
or
incl
test
pop
mov
cmp
and
out
clc
rcll
add
cmp
popf
mov
or
jmp
aaa
ret
jg
or
fldz
mov
cld
cwtl
fiadds
fildll
aad
ja
test
cmp
mov
adc
ror
out
mov
outsl
idivl
pop
push
mov
rcr
cs
bound
jle
nop
sbb
cmp
ljmp
push
aas
pop
mov
nop
mov
inc
or
je
sbb
test
mov
pushl
dec
bound
lcall
sbb
or
xchg
clc
push
shr
lcall
cli
mov
or
add
inc
test
xchg
or
cmp
fbld
int3
ljmp
lods
push
push
icebp
jg
jbe
pushf
and
popa
rolb
pop
mov
std
das
xorb
sahf
dec
scas
inc
je,pt
jno
jecxz
pushf
cmp
jl
mov
fcompl
or
inc
stos
cmc
into
in
cltd
sub
mov
or
add
pop
xor
xor
dec
ret
adc
lods
fsubs
jecxz
inc
jno
xlat
push
jl
lret
xor
mov
je
mov
push
pop
popa
outsb
mov
push
in
dec
cld
outsb
push
cwtl
cmp
orb
inc
ljmp
sub
or
lods
rcrl
push
jg
scas
stos
cmp
lock
ss
clc
inc
pop
mov
inc
sbb
push
push
mov
inc
jmp
inc
xchg
xor
dec
enter
xorb
sahf
fildll
sarb
in
cmp
and
test
inc
out
insb
cmp
cmpsl
loope
pop
test
mov
lds
dec
lock
cmp
mov
and
mov
cld
mov
mov
mov
sbb
xor
sbb
mov
mov
stos
js
mov
pusha
addr16
dec
mov
mov
outsb
fidivrl
sub
cmp
fcmovu
cmpb
sbb
cmp
js
pushl
ret
lahf
and
and
loopne
pop
int
push
nop
movaps
rcrb
and
jne
mov
fsubs
fcomi
sub
dec
mulb
daa
js
and
cltd
rorb
cli
push
loopne
inc
mov
ret
ret
mov
xor
sbb
or
sub
mov
loop
ss
or
and
ljmp
mov
push
add
imul
adc
outsb
cmp
les
dec
fimull
fsubr
xchg
into
or
add
outsl
aas
mov
repnz
fwait
cmpb
jmp
les
add
jo
lcall
das
push
jp
data16
cmp
sub
mov
mov
inc
or
adc
and
ss
and
loopne
and
test
popf
pop
fs
out
add
repnz
xchg
es
mov
movsb
loop,pn
repnz
sar
adc
imul
stos
add
mov
aad
sbb
add
mov
push
inc
and
or
pop
fmull
pop
mov
test
das
ja
inc
push
xchg
push
repz
or
inc
sbb
repnz
push
mov
scas
inc
jp
cmpsb
insb
and
jp
cmp
out
xchg
aam
sub
arpl
push
mov
gs
pusha
popa
add
inc
test
mov
mov
and
cmp
push
std
jmp
xchg
test
shrl
mov
add
cmp
xchg
mov
filds
mov
mov
or
xor
fisttpl
or
movsl
call
cmpsl
push
inc
sarl
insb
and
sub
or
push
and
dec
add
pop
in
cwtl
clc
mov
in
jge
loope
out
xor
clc
movsl
jmp
adc
pop
mov
in
add
test
mov
andb
sbb
ret
dec
pop
and
mov
outsl
outsl
or
jg
mov
and
mov
or
push
ret
mov
popf
arpl
sahf
icebp
mov
push
ret
outsb
jl
xchg
stc
shll
cmpsl
fcmovne
adc
dec
jo
dec
xchg
jmp
scas
and
or
std
add
mov
jo
inc
adc
jmp
mov
cmc
repnz
and
mov
add
mov
lock
add
pop
call
jl
push
cli
adcb
push
xchg
mov
sub
xchg
mov
and
or
sbbb
andb
mov
push
popa
dec
inc
ficomps
repz
cmp
dec
sub
xor
imul
inc
mov
fbstp
dec
cld
fst
popf
jl
clc
shrb
push
test
popf
xor
dec
xor
shl
fbld
dec
adc
fcomp
dec
mov
cmpb
or
outsb
push
ds
jge
insl
andb
pop
mov
and
inc
test
sbb
mov
imul
xchg
cmp
shl
sbb
movsl
test
push
push
xlat
pop
insb
out
test
xor
push
adc
sar
adc
or
add
mov
sbb
js
xchg
movsl
arpl
inc
xor
sub
mov
movsl
ds
add
push
jge
test
gs
dec
ficoml
push
mov
scas
fisubrl
jno
mov
push
call
fsubrs
add
dec
mov
decl
jnp
repz
xor
add
xor
das
aaa
push
lods
cmpsl
ret
mov
loop
push
lahf
mov
les
mov
sub
mov
push
cmp
push
inc
cwtl
adc
negb
mov
lcall
mov
or
push
push
and
daa
pop
into
cs
or
pop
fsub
pop
out
ds
mov
addb
push
add
bound
and
outsl
jo
mov
icebp
movhps
xchg
lods
outsb
push
dec
shrb
add
mov
sbb
sahf
fsubrs
push
and
xchg
pop
push
jmp
pusha
int
add
adc
mov
sbb
mov
mov
insb
loop
dec
loope
bound
test
leave
jb
ljmp
outsb
inc
and
mov
jnp
jne
ja
lcall
mov
jmp
mov
sub
and
xchg
sbb
jg
or
xchg
fidivl
decl
push
lods
inc
or
popf
daa
sbb
inc
lret
lds
cmp
loop
jp
data16
sbb
pop
pushf
sbb
pop
or
jnp
push
and
inc
push
not
or
jp
push
mov
mov
filds
or
aas
adc
popa
insl
mov
fcomip
mull
or
mov
loope
jp
pop
je
pop
jae
push
sub
cli
or
cltd
cmp
dec
shlb
add
push
jb
int3
jle
sti
rorb
adc
mov
mov
xor
mov
dec
mov
divl
bound
push
add
and
mov
adc
jb
dec
test
sahf
xor
inc
xchg
pushf
xchg
dec
call
add
stos
sub
imul
jnp
inc
jae
jnp
cmp
xor
sbb
push
cmp
bound
loopne
js
in
xchg
or
repnz
ss
jns
es
les
sbb
inc
pop
xchg
dec
mov
pop
inc
cmp
in
in
cmc
add
sahf
iret
jno
mov
mov
insb
js
shlb
sub
mov
ret
test
push
in
xor
sbb
cmc
add
bound
xor
or
mov
dec
shlb
or
shrl
push
mov
sub
fcompl
adc
fnstsw
insl
mov
aas
jno
insb
mov
and
mov
cwtl
jo
adc
ljmp
int3
orl
pushf
cmpsl
ds
aaa
stos
push
dec
std
rclb
mov
jno
sub
lahf
dec
loope
je
mov
das
test
xor
jl
les
cltd
shl
leave
cld
hlt
adc
cmp
adc
sbb
sbb
data16
jns
push
mov
push
js
cmp
pop
sbb
push
dec
leave
inc
movhps
loop
xorb
cmp
sar
fistl
or
clc
aam
int3
inc
outsl
or
scas
add
daa
sub
push
lret
jg
out
adc
mov
jge
pop
lcall
loope
dec
stos
sbb
xlat
or
out
sbb
cli
sub
test
mov
mov
int
sbb
sbb
adc
cmp
fimuls
pushf
je
push
sahf
dec
push
and
std
aaa
jl
push
fisubl
imull
xor
push
dec
jge
push
sahf
imul
insb
test
decl
push
mov
pop
cmp
mov
mov
jecxz
mov
sub
mov
jbe
in
cli
sbb
ds
and
sbb
in
xchg
loopne
imul
and
mov
mov
sub
or
xchg
sarb
test
out
icebp
loopne
incb
mov
inc
fnstsw
lods
jle
les
inc
notl
sbb
lret
adc
repz
push
fwait
mov
xchg
pop
js
leave
jecxz
mov
aad
xchg
leave
dec
or
cmp
or
inc
dec
sub
sub
xorl
adcl
add
orb
push
fcom
cmpsl
jmp
iret
add
and
fs
pusha
mov
xchg
dec
mov
lock
mov
movsl
idivl
add
cltd
pop
xchg
in
xor
pop
scas
sarl
mov
test
xchg
push
xchg
add
test
js
push
add
pop
mov
and
add
enter
sub
addl
inc
xorb
mov
loope
dec
std
pop
pop
lods
test
lods
movsb
xchg
add
mov
sbb
ja
js
push
es
ja
sub
outsb
mov
push
mov
inc
xor
mov
outsl
mov
pop
loope
push
or
pop
and
xor
out
js
ljmp
mov
clc
jb
pusha
fs
fisttps
scas
cmp
mov
add
test
mov
fldl
fdivl
lret
push
cld
pop
es
adc
cmc
mov
or
cmp
jmp
outsl
push
leave
cli
pop
cmc
outsl
repz
lods
sub
pop
jge
daa
pop
test
or
mov
add
sub
pop
jecxz
mov
loop
push
sub
mov
and
sbb
pop
inc
inc
stc
sub
in
sbb
cltd
sub
pop
outsl
mov
and
jp
mov
icebp
dec
ja
cltd
mov
jge
push
nop
ret
pushf
mov
frstor
push
adc
push
jge
push
xchg
mov
fcmovb
test
pop
shl
push
adc
cmp
aaa
cli
andb
insb
cmc
sbb
push
mov
push
mov
push
sti
add
sar
or
cwtl
aam
repnz
push
adc
inc
xchg
fidivs
inc
lds
push
es
dec
ss
cmp
lahf
cmp
jmp
or
call
mov
push
pop
aad
aas
imulb
cmpsl
sub
adc
mov
shlb
decb
dec
add
loope
outsb
cmp
loopne
and
add
lock
scas
idivl
push
mov
cli
sbb
add
sub
bound
jbe
ss
test
jle
adc
mov
pushl
jge
lods
adc
inc
pop
cli
es
mov
or
cmp
movb
cmpsb
adc
dec
sahf
jnp
jl
add
mov
loopne
push
cmp
mov
push
mov
insl
sub
jle
std
inc
sub
and
outsl
loope
in
loope
push
int3
mov
cltd
dec
or
outsb
mov
out
ret
rorb
and
or
pop
sub
je
and
filds
push
adc
out
inc
pushf
add
rcrb
loop
mov
or
sub
xor
jo
mov
lcall
test
dec
or
push
sub
dec
sub
fcomip
xchg
xchg
sbb
jl
cmpsb
rcrl
inc
and
add
lret
shl
add
fimuls
cmp
dec
rolb
mov
data16
pop
xor
push
ljmp
sub
movl
and
inc
fistl
mov
sub
pop
or
mov
lret
pop
data16
xchg
popa
and
lds
sub
mov
push
hlt
mov
test
or
push
push
lock
xchg
push
jno
lret
push
ljmp
mov
xor
adc
inc
jmp
mov
fidivrs
sbb
fistpll
ficoml
mov
cmpl
insb
jmp
lods
pop
pop
or
or
mov
pushf
add
jne
pop
cmpsl
ljmp
mov
mov
ljmp
scas
ss
mov
je
inc
leave
incl
jl
mov
aaa
cli
notb
adc
dec
push
clc
ljmp
loopne
push
rclb
rolb
adc
bnd
popf
les
cmc
dec
jmp
lods
test
jg
push
push
sub
lods
mov
sbb
push
fists
ror
push
iret
push
xchg
and
in
jmp
mov
mov
aad
popa
scas
jb
in
cmc
inc
in
or
in
sbb
pop
mov
xor
adc
loop
push
daa
mov
lret
jl
lret
mov
xor
jmp
in
dec
test
outsb
ret
out
sar
leave
push
dec
packsswb
test
mov
clc
cli
cmp
lcall
imul
sub
mov
xchg
inc
mov
jmp
xor
or
sbb
mov
sbb
add
hlt
icebp
lret
sarl
ljmp
dec
pop
pop
pop
fildl
sbb
loope
roll
push
sub
jg
inc
jmp
mov
fwait
push
scas
pushw
test
les
repz
std
imul
sub
sbb
dec
fsubr
jno
or
adc
add
cmc
sbb
sahf
mov
mov
int
add
inc
or
push
adc
testb
movsb
insb
mov
adc
jbe
push
sub
stos
cli
jmp
subb
push
xchg
mov
test
jl
fpatan
pusha
mov
mov
outsb
sub
sbb
mov
pop
or
sbb
dec
sbb
pop
inc
push
repz
add
push
imul
mov
sub
xor
pop
sarl
cmc
iret
push
mov
call
mov
inc
jecxz
lods
xor
mov
aad
sbb
mov
stos
ss
or
sbb
js
inc
sbb
test
add
ljmp
mov
or
cmpsl
push
ljmp
mov
dec
aam
and
jmp
xchg
ficoml
sti
decl
movsl
shl
mov
clc
add
out
enter
arpl
xchg
out
cwtl
fisubl
adc
arpl
decl
adc
popa
sbb
fadds
cmp
pop
pop
decl
or
add
adc
cmp
jp
cld
aaa
frstor
push
cwtl
push
es
add
lret
rcr
add
ret
outsl
ljmp
addr16
in
jnp
incl
adc
cmp
dec
dec
loope
sti
push
pop
mov
push
cmp
pop
repz
push
aaa
cli
pop
mov
dec
rcrl
es
lahf
xchg
sarl
incl
int3
outsb
fwait
mov
int
adc
or
test
scas
inc
lret
push
and
stc
mov
mov
stos
xchg
pop
add
push
out
sub
xor
cli
mov
pusha
xor
cld
adc
and
mov
mov
mov
jle
inc
les
pop
ja
out
subb
dec
add
in
jg
pop
cld
insl
out
cld
push
lret
mov
pop
sti
nop
adc
lods
push
ss
lret
or
push
hlt
sbb
lock
jl
xor
xorl
sarb
xchg
dec
lcall
xor
out
in
and
std
das
stos
gs
add
adc
dec
xor
and
mov
rolb
mov
sbb
pop
je
push
inc
gs
or
call
xchg
fcmovb
rcl
sbb
sub
arpl
out
adcb
outsl
adcb
adc
add
xor
icebp
adc
xor
jmp
popa
mov
sarl
push
push
inc
inc
leave
cwtl
push
lea
pop
jge
jg
lret
cld
pop
sbb
sbb
xor
pop
mov
xchg
lcall
adc
inc
in
paddd
push
fisubrl
mov
or
xor
das
lods
add
lods
inc
test
lcall
lock
cmp
push
and
sub
inc
cld
dec
sbb
add
push
jbe
xor
and
rorb
out
dec
aaa
sarl
cmp
jge
rcll
call
int
clc
mov
in
or
dec
in
push
int3
iret
inc
push
adc
pop
hlt
xlat
jp
mov
pop
inc
add
push
inc
cld
push
and
xor
or
notb
je
inc
xchg
clc
add
adc
iret
xchg
xor
pop
adc
mov
lcall
add
mov
add
fistpll
lahf
cwtl
cmp
inc
sub
scas
dec
jo
dec
outsl
gs
ret
adc
mov
aaa
pop
js
sahf
xchg
push
andl
push
or
sub
xchg
sub
movsb
mov
incb
inc
ja
cwtl
mov
sti
cmp
ss
xor
cmpsl
xchg
mov
loope
cli
or
jp
je
fdiv
pop
push
loope
aaa
sub
imul
lds
sahf
mov
cld
and
dec
add
xor
jl
in
pop
cmp
ror
add
jmp
jp
repz
add
and
mov
or
insb
sub
jne
lret
jg
stos
xor
sbb
neg
sahf
adc
rolb
jecxz
loope
daa
out
sub
movb
imul
adc
ret
cmp
mov
mov
pop
mov
xchg
out
push
inc
aas
ljmp
or
mov
aam
xor
daa
fsub
call
inc
push
out
push
scas
test
inc
pop
pop
cmpsl
sbb
xchg
push
cmc
pop
jle
call
adc
cmp
mov
inc
add
mov
mov
subb
adc
test
dec
jo
adc
mov
std
dec
pop
stc
stos
stos
movsb
add
outsb
push
cmp
imul
jnp
popf
pusha
aad
in
cmp
sub
testl
daa
bound
dec
insl
clc
push
push
rolb
mov
subl
jae
sub
sub
mov
sahf
sub
addr16
repz
push
cmpsb
insl
add
cmpsb
push
sbb
popa
scas
xor
test
je
adc
subb
es
mov
mov
cmpsb
xchg
ss
or
or
test
jl
jg
stos
cmp
sarb
jp
loopne
int3
test
les
sub
pop
inc
call
ljmp
push
das
mov
jg
hlt
scas
push
dec
jbe
dec
aas
add
imul
popf
adc
jno
sub
enter
pop
mov
pop
dec
and
sbb
xchg
mov
fwait
push
loop
adc
and
enter
push
and
sub
fadds
cmc
pop
je
or
test
add
fistpll
add
cwtl
sbb
enter
subb
adc
icebp
call
cmp
add
popf
outsb
lods
mov
add
push
xor
mov
outsl
incl
xor
jo
push
data16
jmp
sbb
das
and
mov
lcall
sbb
cmp
lahf
xchg
push
mov
mov
cld
push
pop
fs
push
mov
ret
aad
pop
pop
in
pushl
push
add
pusha
sub
pop
add
call
cmp
lods
xchg
jecxz
and
sahf
xor
cli
rcr
cmp
cmpsb
mov
mov
mov
push
adc
ljmp
pop
hlt
loop
push
lcall
test
ss
aam
push
cmpsb
jl
lcall
push
lock
fsqrt
and
les
sub
push
inc
dec
pushf
pop
clc
iret
and
jae
in
into
xchg
mov
shl
jbe
xchg
dec
jo
das
ret
outsb
and
dec
dec
dec
insb
clc
shll
sub
mov
lret
mov
js
popa
leave
mov
add
xchg
cli
jnp
cld
shrb
std
sbb
xchg
test
js
lock
mov
ja
out
and
movsl
clc
and
das
fsubs
adc
in
popa
adc
pop
outsb
test
pusha
inc
xchg
mov
je
and
pop
xchg
xchg
je
push
stos
inc
stos
mov
into
imul
add
nop
jne
or
or
nop
call
sub
cmp
aas
xlat
stos
ljmp
jecxz
rcrb
stos
jno
iret
and
mov
sub
outsb
inc
fimull
add
jo
xacquire
stos
xchg
out
push
sahf
icebp
data16
into
push
les
test
orb
or
es
pop
dec
subb
mov
push
mov
add
shlb
andb
push
insb
outsl
push
jg
jl
inc
jp
xor
push
lods
in
and
lret
mov
mov
add
setge
or
cmp
sub
push
mov
xchg
pop
pushf
fildll
mov
loop
out
xor
pop
test
sbb
add
and
loope
rol
int
lea
lea
xor
sarl
aam
cmpb
push
adc
call
dec
pop
push
add
dec
add
cmpsb
dec
mov
jmp
cmpsb
cmp
push
les
push
add
push
sbb
jecxz
aaa
ljmp
mov
push
movsb
xchg
das
pusha
insb
shl
inc
inc
dec
sub
mov
xlat
add
cwtl
mov
das
or
fisttps
xor
aam
or
cmove
cmpsl
aad
push
shrb
and
repnz
mov
outsl
call
insl
dec
xchg
sbb
xor
push
mov
lods
in
sub
fdivs
loopne
lret
cmp
xor
push
fisubrs
test
mov
pop
sub
push
dec
cmp
pushf
mov
push
xchg
xor
or
mov
mov
pop
xor
dec
inc
xchg
xorb
lock
fimull
mov
adc
add
ds
dec
pop
xchg
and
pop
sbb
mov
add
pop
and
mov
pop
lock
dec
dec
fwait
or
es
push
sub
push
rclb
sbb
sbbb
jle
mov
in
jecxz
fstpl
mov
cli
or
push
aad
lret
mov
and
sub
mov
adc
cmpb
jl
xor
ret
inc
lret
xchg
mov
add
int3
mov
fs
fs
ret
pop
add
dec
fwait
mov
jns
jo
mov
popf
or
enter
lea
adc
mov
sti
daa
test
mov
sub
xchg
mov
out
jecxz
cld
lds
push
cld
insl
add
pusha
enter
xor
push
repz
jb
or
jmp
jg
sti
subb
pop
or
aad
add
and
test
cli
add
mov
push
push
adc
out
mov
jb
lahf
lahf
fsts
cwtl
lcall
test
push
mov
xchg
cli
cmp
data16
enter
cmpsb
out
test
sbb
or
inc
sbb
iret
aam
ds
push
xor
fst
movsb
test
icebp
xchg
ret
enter
mov
pop
push
ljmp
stos
and
mov
cmc
mov
and
inc
mov
into
pushl
pop
pop
sub
call
sub
jecxz
es
sbb
aaa
inc
bound
pusha
test
adc
jae
sarb
cmpsb
fdivl
dec
fcmovu
in
adc
mov
cli
aaa
cld
dec
and
jl
pusha
rcll
lods
pushf
inc
idiv
aas
mov
idivb
arpl
cmp
jge
insb
lods
inc
lods
dec
cmpsb
lret
push
movsl
adc
leave
and
mov
cmp
fildl
imul
sbb
ss
incb
mov
mov
add
rorl
fisubrs
cs
pop
mov
ret
ds
inc
xlat
stos
xchg
subb
shr
and
cld
sub
jb
push
mov
fdivrs
push
sti
ljmp
inc
jge
bound
daa
mov
cmp
js
scas
pop
push
pop
pop
xchg
adc
movb
dec
inc
cmp
fdivs
sub
push
mov
dec
mov
adcb
int3
or
shl
push
dec
push
in
mov
push
mov
lea
jo
dec
dec
sbb
mov
test
mov
mov
ljmp
jb
pop
rcrl
popf
sar
outsl
mov
je
sbb
inc
and
ret
xor
stos
push
mov
and
push
mov
insb
cmp
add
and
jl
loopne
fiadds
dec
aam
sub
lds
and
push
mov
cli
stos
ficompl
xchg
lock
push
dec
cld
scas
mov
push
xchg
ror
sbb
loopne
mov
sub
lea
rcrb
jmp
jbe
notb
push
pop
lea
mov
add
cmpl
mov
addr16
adc
lret
and
pop
xchg
sarb
mov
bound
jmp
std
jg
loopne
aaa
hlt
xor
repz
icebp
sub
clc
popa
jnp
mov
outsb
push
cmpsb
loopne
xchg
add
push
fcomi
xchg
mov
fs
test
adc
pop
inc
ret
hlt
ffree
cmp
push
or
add
adc
xlat
xor
repnz
fdivp
call
mov
or
add
or
push
adc
cld
fidivl
mov
cmp
jl
sbbl
add
cld
aad
mov
dec
xor
add
add
cwtl
das
cli
and
cmp
jp,pt
out
jno
pop
or
pop
loop
ficomps
sbb
fs
pusha
loop
mov
or
pop
loopne
dec
stos
lcall
adc
mov
jle
ljmp
mov
pusha
or
add
stos
mov
mov
adcl
pop
or
or
aas
mov
call
test
dec
dec
mov
stos
rcr
js
outsb
add
fcomip
sub
mov
es
lahf
rcrl
jg
add
rol
fmuls
icebp
mov
sbb
nop
pop
icebp
lcall
cli
movsl
inc
call
dec
je
sahf
xor
cmp
push
push
call
int3
repnz
test
sub
pop
adc
jns
insb
xchg
bound
add
div
int
lods
scas
ret
mov
cmp
hlt
roll
jl
lret
mov
lods
into
sub
fwait
add
out
bound
jmp
mov
or
fmull
mov
pop
jmp
outsb
jg
sub
xchg
dec
mov
push
push
aad
fimull
mov
jno
mov
sbb
fs
dec
pop
shlb
push
sub
inc
rolb
or
fstpl
addr16
fidivrs
or
aaa
lock
std
aam
incb
lret
fisubs
xchg
sbb
inc
adc
rcrb
fistpl
js
mov
jmp
fwait
cmp
jo
es
ret
divb
addr16
mov
negb
insb
mov
jmp
push
bound
xchg
je
cmp
scas
add
call
bound
mov
daa
jmp
dec
inc
or
xchg
add
call
push
xlat
rorl
stos
dec
sbb
ja
inc
sbb
test
jo
mov
icebp
ret
mov
jne
xor
jl
ds
jp
in
and
adc
nop
and
ja
hlt
sbb
pusha
cmp
shrl
push
bound
aas
add
or
jns
jo
push
dec
stos
and
jecxz
dec
or
mov
fistps
int3
clc
and
cmp
aas
test
adc
add
hlt
sub
pop
and
sti
jmp
push
daa
sub
js
jmp
cmp
jo
push
pop
ret
imul
fdivr
cmp
sub
popa
std
and
add
xchg
or
aaa
call
mov
mov
scas
lcall
dec
shlb
and
outsl
shlb
test
mov
inc
pop
fs
movsb
movb
xchg
jmp
nop
jo
stos
idivl
adc
sub
add
nop
insb
out
dec
jo
sbb
mov
lret
mov
lock
cmp
call
in
jno
lahf
push
xchg
aad
cmp
pop
lahf
rolb
test
adc
out
mov
in
fcomip
pop
jle
lods
je
out
and
inc
adc
int
bound
xchg
sbb
sbb
xchg
cmc
cmp
jb
push
sbb
out
mov
sub
push
mov
ja
or
rorl
inc
push
pop
insl
push
jb
or
mov
sahf
or
pop
add
adc
loop
mov
jl
stos
fidivrs
loop
int
lcall
decl
mov
mov
mov
xlat
hlt
mov
pop
je
inc
jb
test
xchg
cmpsb
mov
and
int
movb
mov
sub
and
mov
mov
jbe
add
inc
loop
adc
xchg
inc
scas
test
orl
js
jae
add
dec
push
jp
add
push
clc
imul
adc
xchg
dec
shll
fdivrs
mov
xchg
mov
mov
stos
add
mov
ljmp
aam
and
mov
mov
loop
scas
mov
sub
xchg
insl
jo
pop
push
sub
jmp
lcall
subl
jne
lcall
lret
and
add
adc
mov
stos
imul
add
mov
dec
ljmp
adc
cmpsl
out
mov
sub
inc
dec
and
jg
in
roll
repz
push
mov
adc
cmp
add
jecxz
inc
or
dec
shll
adc
adc
pop
in
lods
jno
and
xor
es
int3
movsb
add
sub
aad
mov
movaps
in
adc
clc
inc
add
fstl
ja
jb
popf
dec
mov
cmp
jge
rorb
std
pop
or
das
xor
negb
sub
dec
je
clc
push
out
js
aad
rol
sub
or
ja
out
and
aaa
xor
sti
mov
lcall
into
scas
movsl
out
add
mov
repz
roll
pop
add
push
xchg
pop
iret
inc
stc
bound
loop
add
aaa
rcrb
mov
cmpsl
push
sub
cmovo
sbb
addb
aaa
mov
push
jbe
sub
inc
outsl
mov
popa
in
and
xchg
mov
adc
sub
aam
cs
sbb
add
daa
adc
push
divl
aas
clc
add
repz
adc
pop
cmp
ss
cmp
ljmp
clc
ds
daa
mov
push
lods
shll
mov
xorb
mov
cmp
mov
inc
loop
inc
push
inc
jmp
cwtl
leave
add
cmpl
xor
icebp
sbb
add
shrb
stos
rcr
sub
jle
pop
jmp
ja
xor
or
inc
xchg
push
mov
outsl
cli
adc
aam
cmp
and
insb
gs
add
or
out
and
cmpsb
ss
leave
xchg
jg
jg
or
ds
stos
je
mov
push
sub
mov
mov
push
dec
sarb
mov
mov
mov
fs
xor
mov
cmp
mov
xchg
cmpb
pop
push
inc
or
int
call
loope
cmpsb
cs
or
in
push
adc
push
int
ret
icebp
sub
ret
sar
loop
xor
xchg
jle
incl
popf
mov
outsl
inc
mov
xchg
out
lea
hlt
mov
shlb
bound
xor
gs
dec
hlt
cwtl
dec
push
mov
pop
push
inc
cmp
sbb
lock
cltd
fdivrs
inc
test
pop
xor
cmp
and
inc
mov
pop
mov
es
pop
shl
xor
leave
ds
push
mov
or
rorb
push
or
sbb
add
loopne
stos
cmp
lods
and
or
sub
dec
jle
mov
sarb
ficoml
cs
cmp
dec
fmuls
in
jb
mov
xlat
or
mov
popa
xchg
pop
loopne
cli
push
cwtl
xorb
inc
adc
stos
popf
dec
pop
dec
pop
sbb
jne
loopne
sahf
lods
nop
int3
sub
ja
mov
sbb
xchg
push
or
xorb
aas
and
or
fld
scas
test
jne
mov
aaa
add
xchg
movsb
or
dec
inc
in
mov
addl
ds
cmc
sbb
lcall
ss
jo
movsl
in
sub
jb
orl
or
cmp
adc
xor
ja
test
adc
dec
inc
sbb
cmp
gs
data16
sbb
and
xor
push
cmpsl
lock
insl
pop
push
dec
clc
push
push
outsb
pop
pushf
iret
push
nop
pusha
sbb
xchg
add
and
inc
xor
sub
fidivrs
dec
pop
sbb
fsubs
push
add
mov
dec
insl
rclb
std
jbe
out
xchg
mov
jne
pop
call
cli
inc
inc
scas
jp
dec
inc
fisubrl
inc
lds
and
mov
movsb
ret
add
adc
xchg
ret
in
push
jecxz
mov
jecxz
xchg
lds
cmpsb
icebp
xlat
outsb
fs
and
jg
jo
push
popf
mov
mov
pop
mov
push
pop
pop
repnz
push
xchg
pusha
sub
testb
or
xchg
mov
push
xchg
fisubrs
enter
xchg
pop
push
jle
or
cltd
sub
movsl
js
jb
adc
outsb
call
popa
leave
xor
fsubs
dec
xchg
incl
scas
mov
add
shrb
push
cli
out
pop
fs
idivl
xchg
adc
xchg
xor
sbb
add
mov
or
sbb
pop
xchg
enter
jmp
mov
sahf
inc
bound
add
iret
fs
test
data16
enter
xor
not
add
ja
fsubs
adc
cs
add
test
hlt
jbe
cli
cld
pop
push
pop
popa
xchg
ss
aas
adc
or
sar
fcoml
sbb
pop
ja
dec
push
repnz
dec
shlb
loopne
into
mov
sub
push
clc
xlat
push
dec
push
or
mov
sti
jb
xor
jg
pushl
sbb
push
cmp
cmp
or
jmp
icebp
decl
cmpsl
stc
jbe
jle
sub
stc
ret
nop
cld
loopne
mov
mov
cmpsl
sub
xor
aad
push
ds
clc
mov
fs
inc
push
mov
jo
jo
js
mov
test
leave
push
add
loopne
ss
xor
and
xor
adc
clc
out
aam
sbb
jecxz
popa
loop
cwtl
mov
dec
inc
aas
push
test
add
mov
pop
movsl
in
xor
outsl
cli
hlt
xlat
call
add
and
orl
xchg
int
int3
pop
inc
shrl
call
sahf
pop
xchg
sarl
ja
sub
jl
mov
cmp
imul
repnz
or
sub
lret
or
stos
shl
mov
and
subl
cmp
push
mov
inc
jb
cld
add
cmp
sbb
push
fcoml
or
pop
mov
inc
es
jl
stos
js
incl
cmp
mov
or
xchg
push
sbbb
jl
cmpl
dec
movsb
mov
add
scas
sbb
jg
ficoms
rcll
ja
pop
inc
shr
shr
lret
js
jbe
jnp
imul
xor
jp
sbb
imul
push
shlb
add
fidivl
inc
and
xchg
mov
xchg
hlt
jno
into
pop
xor
add
loop
add
shlb
fwait
into
or
fcom
add
pop
jmp
das
mov
or
les
add
mov
cmpl
cmp
cli
cmp
push
jne
push
dec
add
js
xor
shlb
cs
loop
mov
lcall
xlat
aaa
movsb
ret
fbld
xchg
in
sub
lods
loopne
cld
dec
mov
enter
and
dec
sahf
enter
loop
mov
lds
movsl
push
mov
pop
adc
mov
pop
clc
pop
cmpl
sub
sbb
inc
pop
mov
stos
cmpsb
call
cmpsl
cmpsl
pop
xor
adc
out
ds
scas
ret
je
xor
cmp
add
sbb
jo
adc
or
mov
inc
in
in
mov
push
xor
addr16
or
cli
outsl
xorb
out
push
cwtl
ror
inc
push
and
repnz
mov
cmpsb
jg
addb
and
negb
mov
orb
scas
in
xor
and
add
adc
leave
push
cli
xlat
fucomip
out
cmp
rcl
loop
ljmp
jl
ret
add
outsb
adc
or
loope
push
sbb
inc
repnz
inc
addr16
incl
int
push
inc
aaa
xorb
cltd
mov
sbb
ds
aaa
mov
add
pop
andb
lret
mov
scas
pushl
jo
cwtl
push
cld
push
popa
pushf
push
insl
xchg
jp
gs
stos
lcall
add
mov
arpl
inc
xchg
clc
ret
xor
jmp
push
xchg
dec
nop
ret
lcall
lcall
leave
hlt
mov
sub
mov
rcr
add
jmp
add
cmp
pop
sub
insl
test
sbb
jp
sti
or
loopne
mov
dec
push
pop
mov
rcrb
clc
cli
imul
shlb
sbb
ret
sub
add
add
push
popa
mulb
out
cwtl
inc
xor
mov
gs
sarb
sbb
push
test
adc
aad
std
xor
lcall
andb
lea
pop
out
jae
push
clc
pop
fwait
in
jecxz
push
dec
pushf
cmp
fisubl
pop
insb
xchg
mov
push
fildll
mov
ljmp
insl
and
cmp
test
xor
pop
pop
add
or
fs
pop
fadds
shrb
outsl
rclb
incb
movswl
scas
and
mov
repnz
pusha
dec
popf
xor
int
test
sahf
add
xchg
or
and
cmpsb
std
add
shl
pop
and
cli
dec
dec
jo
je
mov
cwtl
mov
fldenv
into
cmpsb
daa
dec
jl
loopne
pop
rsqrtps
js
or
adc
addr16
push
je
rclb
sbb
lods
outsb
dec
ret
aaa
push
mov
cmp
insb
ror
mov
into
ss
lcall
pusha
and
pop
cltd
int3
cmp
ss
sbbb
add
in
frstor
ret
aam
jg
outsb
cmp
inc
leave
push
imul
cmpsb
pop
rclb
int
xchg
or
pop
adc
into
jp
or
xor
mov
pushf
nop
push
push
aaa
pop
push
cmp
inc
cmp
cmpsl
xchg
jg
incb
scas
xchg
xchg
jge
cli
mov
imul
imul
lret
inc
fsubr
popl
aad
mov
and
mov
add
mov
and
roll
adc
add
jle
add
jno
inc
stos
lcall
mov
pop
out
and
loop
add
dec
int
imul
aas
jne
clc
mov
xor
pop
test
and
and
sti
jp
xchg
loop
push
mov
or
xchg
lahf
bound
mov
decb
sub
inc
xchg
dec
xchg
rclb
mov
xor
xlat
sub
push
pop
fstl
jecxz
sub
mov
imul
sub
sbb
shlb
pusha
add
mov
pop
in
out
pop
mov
add
lock
pop
test
jecxz
pop
imulb
xor
lret
mov
jecxz
jbe
rclb
lods
adc
sbbl
xchg
mov
decl
pop
pusha
jb
call
or
xor
ret
push
adc
xchg
notb
inc
mov
ret
adc
or
mov
xor
push
ret
insb
dec
orl
out
adc
jb
pushl
dec
add
push
adc
mov
js
sbb
sub
inc
insl
or
add
daa
out
in
cld
sbb
jmp
movsb
incl
add
inc
inc
mov
adc
in
pop
sbb
pop
cmpsl
push
and
xchg
push
cld
mov
rorl
pop
add
inc
jge
dec
outsl
stc
sbb
xchg
aaa
popa
pop
lods
mov
fstps
lods
addb
es
cmp
fs
cmp
outsb
aam
sub
rcrb
fmulp
mov
dec
stc
xor
lcall
js
and
mov
push
jae
adc
ljmp
fadds
dec
add
push
or
dec
xor
pop
pop
fdivrl
and
orb
and
jno
add
cs
push
add
es
adc
ss
aaa
mov
xor
push
insb
les
clc
inc
fwait
clc
das
mov
sbb
jl
push
mov
test
xor
cmp
scas
xor
mov
xchg
xor
jle
mov
ret
cmpl
or
es
mov
xchg
xchg
addl
mov
repz
inc
jne
xchg
xchg
lods
and
stos
enter
cmpsb
xchg
stos
scas
dec
jmp
sarl
jnp
or
jmp
outsb
adc
call
nop
int
push
ja
push
sbb
clc
andb
orl
or
mov
cmp
mov
cwtl
fwait
push
orb
jne
hlt
cmpb
jno
insl
and
roll
cltd
stos
and
jo
cmp
adc
mov
add
lods
pop
or
mulb
xchg
mov
or
jg
dec
lock
je
outsl
and
mov
xchg
pop
in
arpl
jmp
push
repz
push
popf
xchg
pop
out
popa
js
arpl
adc
fdivr
ljmp
stc
dec
add
adcb
or
inc
leave
div
cs
cli
maskmovq
add
lods
jbe
andb
clc
xchg
add
scas
add
push
and
insl
int3
mov
sub
in
clc
cmp
aad
ja
shll
rcrb
aam
push
mov
jecxz
leave
mov
arpl
cmpsb
mov
shll
and
inc
rcrb
push
loop
rcrl
dec
testl
out
dec
shlb
pop
dec
clc
mov
fists
cltd
mov
lcall
add
mov
mov
mov
dec
cli
cwtl
push
popa
mov
lock
ret
mov
ds
push
leave
bound
inc
pusha
mov
fadds
out
fadds
pushf
sbb
in
xor
and
test
xchg
and
or
js
or
das
xor
sbb
sub
jl
cmp
rol
mov
daa
clc
add
mov
mov
std
pop
xchg
adc
ds
xchg
push
std
subb
mov
mov
push
jmp
pop
mov
jae
add
xor
pushf
sbb
push
mov
test
jl
mov
mov
xor
cmp
adc
dec
nop
stc
cmp
iret
mov
dec
dec
stos
adc
ret
scas
xchg
loope
adc
mov
jno
mov
pop
add
inc
sar
cwtl
mov
push
lds
jnp
jno
into
mov
add
iret
aaa
pop
test
push
shrb
jg
dec
xlat
aaa
sub
push
or
adc
sub
and
xlat
lret
xor
push
xor
xor
jl
popf
and
addr16
movsb
mov
xchg
mov
cmpb
call
in
ret
nop
sbb
test
xlat
ret
repnz
dec
cmp
or
in
movsb
outsb
mov
gs
clc
jge
and
bound
jo
das
cltd
jmp
add
add
outsb
or
cli
shll
and
mov
xchg
add
mov
enter
fsubp
dec
sbb
mov
mov
xchg
mov
xchg
imull
dec
and
push
dec
mov
jmp
rcrl
add
dec
lcall
cmpsb
add
cld
jmp
adcl
pop
stc
xchg
inc
out
push
in
adc
xor
cmpsl
jl
loope
dec
test
pop
dec
mov
lcall
or
jmp
xchg
jl
ret
mov
xlat
outsb
inc
jg
cmc
adc
inc
test
test
sub
lcall
mov
mov
sbb
clc
in
add
mov
jne
inc
and
push
ds
cwtl
pop
mov
mov
jg
and
fists
imul
mov
icebp
mov
lods
call
fadd
sub
fisubrl
cli
mov
in
js
rcrl
in
dec
add
popf
xchg
ror
pop
push
dec
dec
xchg
sub
dec
and
mov
movsb
out
adc
je
push
scas
jo
xor
adc
insl
sub
adc
loopne
test
lret
incl
inc
xchg
and
and
cld
jecxz
mov
enter
add
jo
popf
shlb
iret
daa
cld
incl
or
push
sbb
cmc
pop
loope
movsb
jo
xchg
sbbb
adc
xchg
clc
mov
fs
jae
add
pop
sbb
push
pop
xchg
fbld
std
adc
add
jg
jge
sarl
mov
pop
movsb
hlt
pop
cli
sub
jbe
add
or
dec
add
cltd
and
je
pop
inc
adc
mov
fstpt
mov
mov
andb
push
jg
outsl
test
adc
push
fidivl
rolb
hlt
inc
dec
out
mov
and
mov
fbld
mov
lret
mov
clc
dec
clc
xchg
adc
icebp
into
fisubl
loope
sbb
out
cmp
mov
mul
xchg
les
cld
push
mov
lds
add
out
mov
rolb
cmp
ficoms
loope
fstpt
jo
out
test
in
pop
cmp
mov
mov
mov
std
mov
in
inc
adc
inc
jb
or
mov
or
pop
jb
dec
cmpsb
scas
push
out
inc
enter
dec
gs
xchg
jg
push
mov
push
aam
jmp
and
push
mov
jmp
cli
lcall
cmpb
scas
push
xor
test
test
push
test
sbb
jp
mov
es
and
mov
xchg
rcrb
xor
leave
subb
pop
pop
mov
adc
jmp
cmp
std
test
or
fs
adc
and
imul
and
lock
sub
sbbb
and
addr16
adc
cmp
jbe
sbb
fs
sub
inc
popa
mov
je
insb
sbb
mov
inc
cmp
push
pop
cltd
lods
add
shlb
fisubl
inc
loop
lcall
shll
mov
mov
scas
push
adc
je
and
negl
aam
cmpb
push
dec
pop
push
leave
fcomp
adc
lea
mov
nop
push
pop
inc
pushf
and
xchg
mov
test
dec
adc
popa
pushf
les
pop
xor
negl
fld
jmp
add
adc
add
popa
fadds
out
sbb
push
popf
cmp
dec
test
xorl
mov
leave
mov
adc
mov
mov
push
sbb
adc
mov
mov
aad
loop
insb
mov
add
mov
fdivrs
lahf
je
jo
or
xlat
mov
and
stc
int3
punpcklbw
pop
call
add
cwtl
push
mov
rorb
aas
mov
jno
push
sbb
mov
mov
cmpsl
aaa
ds
adc
clc
das
decb
out
or
hlt
xor
scas
sub
mov
imul
xor
enter
cmp
lret
ljmp
adc
fdivs
loope
int3
adc
test
push
sbb
xor
insb
es
adc
incl
adc
gs
sbb
mov
in
jg
cs
add
mov
mov
inc
cld
bound
sub
int
add
les
add
pop
les
clc
test
mov
std
mov
adc
ret
leave
pusha
mov
pop
mov
es
out
adc
cmp
out
ret
test
add
imul
subl
pop
dec
xor
std
icebp
movsb
loop
xor
mov
hlt
shrb
lahf
mov
push
mov
adc
adc
std
ja
or
das
adc
lahf
mov
or
cmp
mov
xchg
jno
cmp
cmp
aam
push
or
inc
push
lcall
test
mov
fdivrs
cmp
mov
add
mov
fiaddl
fdivp
aad
test
sbb
cld
inc
mov
cli
popf
or
mov
and
subb
ror
arpl
and
sbb
xchg
jl
dec
rcrl
push
loop
shll
jo
sbb
fstl
inc
filds
insb
out
pop
cs
jg
movsl
add
or
scas
push
mov
push
and
leave
adcl
test
cli
sub
push
adc
add
adc
inc
imul
aas
mov
test
bnd
xchg
push
das
cmp
ljmp
lahf
cmc
jnp
add
dec
or
push
mov
std
out
adc
loop
mov
inc
jle
mov
icebp
aaa
mov
aad
adc
jecxz
insl
inc
jge
mov
call
aam
hlt
jle
add
jnp
xchg
shr
nop
or
in
sub
add
ss
jge
lret
or
mov
and
rclb
in
jl
inc
ds
and
mov
dec
mov
sub
push
int3
out
rclb
rorl
and
push
sub
jo
scas
daa
test
call
sbb
push
push
adc
push
test
and
mov
sub
mov
fidivrl
cmp
lcall
lock
insb
pop
sbb
inc
mov
ret
in
movsb
xor
mov
and
add
push
cmp
add
xchg
addb
add
dec
adc
dec
and
clc
xor
clc
or
ret
dec
xor
out
inc
notl
cmp
cs
push
ds
addb
mov
cmp
dec
inc
xor
push
jmp
mov
pop
lods
pop
or
mov
sarb
dec
jl
cli
dec
sbb
cmpsb
stos
repnz
call
decl
push
sbb
or
aas
sub
inc
add
mov
movsb
sbb
pop
fidivrl
jmp
ficomps
aad
call
incb
or
test
add
push
xor
rcrl
pusha
or
or
add
or
add
push
clc
dec
push
xchg
sbb
xchg
ret
loope
push
jnp
adc
inc
stos
test
aad
mov
xchg
lahf
fwait
clc
jmpw
out
and
cltd
cld
ljmp
sub
jmp
subl
mov
sarb
jge
lods
adc
cli
js
adc
outsb
xchg
add
xor
int
enter
insb
loopne
fimull
and
stos
aas
jl
sahf
icebp
cmc
dec
fdivrl
lahf
push
dec
adc
mov
icebp
mov
ja
pop
jbe
movsb
sbb
mov
mov
fdivrs
aam
adc
sbb
shrl
enter
or
mov
add
adc
mov
or
mov
ret
repnz
nop
lods
add
dec
or
inc
adc
pop
lods
and
push
push
dec
and
and
subb
js
scas
aaa
add
cld
jmp
gs
or
or
xchg
outsb
cwtl
sub
xchg
push
mov
mov
and
mov
sbb
mov
lods
cwtl
adc
xchg
pop
bound
pop
cmp
push
or
repz
shrl
jmp
je
adc
xchg
xor
cld
push
sti
into
sub
rolb
sbb
and
cmp
rclb
cmp
mov
in
mov
push
scas
xor
leave
fiadds
push
mov
movsb
ljmp
add
push
mov
adc
jae
pop
mov
mov
cmp
clc
pusha
jp
jb
int3
out
sti
dec
inc
jg
add
dec
jl
mov
mov
add
and
idivl
in
lock
add
or
xorl
pushf
mov
add
inc
lds
push
test
les
push
dec
ret
ss
pusha
mov
out
inc
sub
lods
call
orl
add
jmp
mov
xchg
xor
adc
inc
push
es
xor
mov
and
dec
push
push
orb
pusha
out
insb
mov
add
enter
cmp
ja
pop
sub
cli
mov
sub
mov
das
and
cs
stos
push
sub
clc
ja
mov
and
sets
add
sub
pop
lock
xor
shll
xor
jp
push
decl
shl
loop
dec
mov
pop
rcrb
icebp
call
dec
push
icebp
test
pop
jno
scas
adc
inc
mov
push
sbb
jp
stos
int
out
sub
sahf
add
sub
fbld
fbld
jle
and
jg
jno
aam
int
xchg
movsb
and
mov
inc
rolb
test
push
test
mov
in
xorb
mov
sbb
andb
push
outsl
das
and
mov
sub
pusha
aaa
cwtl
outsb
shlb
fmulp
dec
jbe
push
js
xchg
mov
sub
push
inc
orb
add
cmp
je
inc
mov
xor
addl
mov
subl
jbe
xor
push
push
jo
xor
pusha
outsb
mov
or
mov
sarb
jo
push
or
sub
mov
xchg
scas
mov
xchg
lds
mov
lea
mov
inc
outsb
adcl
outsb
mov
cld
mov
dec
loopne
dec
adc
clc
adc
add
cmp
adc
loopne
mov
ret
mov
push
xchg
pop
clc
and
cmc
dec
rolw
fcoms
inc
mov
dec
pop
mov
jl
ret
bound
mov
mov
call
jbe
mov
scas
dec
mov
inc
out
out
outsb
aad
ficoml
sti
js
fstpl
mov
lods
add
or
inc
jo
imul
mov
jae
and
orb
jbe
movsl
jmp
out
cmpsb
push
fsts
cs
and
xchg
jne
pop
fildll
enter
push
pushl
xor
sahf
add
xchg
pusha
pop
lods
fbld
add
lcall
in
xor
add
push
repnz
add
lret
dec
mov
fcoml
mov
pushf
into
int3
adc
pop
cmp
inc
scas
cmc
xchg
test
int3
sbb
add
stos
ret
lahf
push
in
bound
lods
ret
hlt
loop
push
or
shlb
mul
push
push
add
sub
xchg
sbb
inc
push
mov
inc
mov
sbb
ss
insl
test
sub
call
cs
xor
pop
add
cmpsl
test
lods
inc
pop
inc
mov
outsl
cmpsb
xchg
fdivs
mov
andb
lcall
fbstp
xor
pop
stos
mov
notb
dec
mov
jne
enter
cmpsl
sub
xchg
inc
std
push
adc
push
sbbb
sahf
xchg
and
add
repz
lret
push
imul
jb
jl
inc
and
popa
jnp
xchg
rclb
in
push
stos
jle
cld
sti
push
push
dec
nop
or
movsl
fists
lds
cmp
out
mov
mov
arpl
std
push
std
test
cmp
pop
movsb
jmp
movsl
sbb
leave
mov
aad
stmxcsr
push
xor
cmp
aas
dec
or
pop
xchg
nop
xor
xlat
fbld
ret
incl
in
insl
in
scas
jle
sbb
nop
loop
add
in
and
adc
cmp
xor
add
push
in
sub
jge
push
arpl
jge
jns
mov
shlb
cwtl
aam
mov
pop
push
ss
aam
mov
aaa
sbb
bound
loopne
ja
xlat
bound
sbb
hlt
push
cmp
dec
push
je
push
cmp
push
mov
push
add
push
outsb
nop
jns
or
les
sahf
pusha
mov
sbbb
jl
add
sysenter
jecxz
movsb
das
jp
mov
mov
std
xchg
adc
jae
cmp
xlat
pop
out
add
pop
xor
xor
and
adc
out
test
mov
jge
aas
mov
mov
pushf
arpl
or
ljmp
aam
js
test
mov
add
adc
jle
daa
cli
add
and
fimull
bnd
pop
jbe
pop
hlt
aad
mov
pop
fimull
push
test
add
and
sub
adcl
mov
add
push
ljmp
push
xor
xor
add
je
xchg
jg
mov
cmp
or
pop
jmp
clc
lret
xor
and
adc
cmp
pop
push
mov
mov
into
mov
push
add
xor
fldenv
xor
add
cli
and
inc
ss
js
bnd
aas
xchg
outsl
je
push
ret
out
sahf
icebp
push
popa
pop
in
incb
int3
ljmp
out
push
pop
inc
push
fldpi
push
inc
adc
dec
mov
xor
lcall
dec
pop
ret
rorb
into
jb
xor
inc
int3
adc
push
shlb
ljmp
push
out
lock
pop
xchg
fmuls
mov
loop
ret
pop
vucomiss
jmp
pop
adc
inc
jg
andb
das
lcall
lds
sub
aad
cmp
xor
adc
popa
push
dec
sub
aas
rorb
call
fmul
mov
cli
mov
roll
les
loop
xchg
add
decw
ljmp
inc
sbb
aam
mov
ds
fs
icebp
iret
cmpsb
rcl
add
mov
mov
adc
shll
pop
rcrb
loopne
shrb
inc
pop
aam
mov
cmp
push
loope
and
pusha
gs
je
adc
stos
and
mov
call
sub
mov
imulb
pop
cmp
jnp
pop
fdivrs
push
mov
dec
mov
in
xchg
push
stos
add
or
decb
adc
mov
pop
fsubl
adc
mov
mov
and
out
cli
imul
rorl
lcall
mov
mov
jp
movsl
inc
jb
dec
sar
cmp
fldt
pop
xchg
lret
pop
pop
in
adcl
pusha
cmp
into
push
and
clc
pop
subl
js
call
outsb
mov
mov
loope
inc
and
sbb
dec
mov
xor
sbbb
int
sub
clc
lret
fistpll
cmp
mov
sub
insb
roll
xor
mov
enter
dec
test
sbb
sarb
pusha
push
mov
in
adc
dec
pusha
xchg
dec
xchg
sub
clc
hlt
pop
adc
fs
out
sbb
pop
mov
bound
inc
lahf
mov
lret
sbb
das
inc
jg
jl
mov
xlat
xchg
adc
adc
add
mov
or
sbb
adcl
out
pop
shrl
pusha
stos
sbb
movsb
adc
adcl
outsb
sub
lods
or
mov
pushf
std
and
add
mov
sbb
jae,pt
mov
gs
pusha
add
jg
jno
sahf
sub
ret
adc
loopne
dec
daa
push
call
push
imul
add
je
shlb
sarb
es
jne
sub
mov
and
stos
push
inc
adc
or
sbb
and
push
call
cmp
xorl
aas
cmp
pop
shlb
inc
and
das
sbb
sarb
test
push
loope
push
shll
js
pop
mov
loopne
mov
or
push
stc
pop
mov
clc
aaa
mov
loopne
in
pop
xchg
inc
movsl
lods
in
and
test
or
adc
mov
sub
pusha
cld
cmpsl
jg
lcall
cmp
ja
ficoml
pushf
pop
lret
add
mov
loope
pop
mov
sbb
push
inc
push
nop
lcall
or
test
mov
dec
icebp
xchg
stos
leave
push
and
insb
xor
scas
mov
and
xor
push
cmc
push
jnp
push
les
out
mov
movsb
or
daa
jp
pop
inc
xor
dec
pop
or
subl
xor
sbbb
pop
sbb
fcoms
adc
movsb
jl
inc
mov
loop
xor
sbb
dec
mov
adc
ficoms
xor
jl
stos
dec
test
pop
add
cwtl
and
daa
outsl
inc
jo
pop
mov
sbb
jecxz
push
push
movsb
ss
incl
std
dec
jmp
inc
or
cmp
mov
cmc
jbe
lcall
dec
call
call
stos
push
clc
fwait
mov
sub
arpl
and
cltd
stos
incb
testb
pop
push
and
lea
lock
xchg
jo
rcrl
loop
es
loop
add
mov
sbbl
cmp
decl
mov
sbb
addr16
xor
xchg
mov
aaa
push
xor
fwait
push
push
jp
and
outsl
mov
add
jge
xor
or
jg
sbb
mov
pop
add
push
xchg
xchg
mov
sub
faddp
cli
decb
stos
insb
push
stos
pop
sub
cmc
xorl
mov
pusha
aaa
push
xor
cli
clc
mov
xchg
adc
sbb
scas
imul
dec
lds
mov
mov
sahf
mov
pop
test
movsb
xchg
inc
scas
ss
div
jecxz
sbb
enter
es
jo
mov
testb
test
mov
dec
or
pop
popa
fadds
or
push
push
jg
xchg
int3
add
inc
sbb
or
les
in
mov
push
and
lcall
push
shrb
jle
inc
mov
xchg
mov
inc
mov
xchg
ret
outsl
pop
stos
cli
inc
pushl
dec
js
clc
out
or
addb
cmp
repnz
jp
xorb
xchg
push
mov
mov
cmpsb
fldenv
sti
pop
aaa
dec
adc
add
es
icebp
or
and
jle
mov
inc
adc
inc
sbb
std
scas
push
fildll
adc
cli
out
es
xchg
mov
test
out
cwtl
or
pop
or
lods
mov
rcr
push
je
test
movsb
jl
pop
ficoml
cmp
adc
das
jbe
add
push
enter
ss
cs
sub
mov
cli
push
in
mov
test
mov
add
cmc
orb
jg
outsl
jbe
repz
mov
dec
mov
fldl
je
dec
jmp
add
out
mov
jge
mov
mov
in
xchg
hlt
dec
es
stos
es
mov
fdiv
call
lods
add
movsl
loop
inc
dec
rol
pop
mov
or
aaa
fistpl
sub
andl
sbb
push
and
inc
addb
stos
mov
imul
arpl
adc
push
xlat
sub
add
push
jp
sbb
jmp
sbb
test
lcall
add
lret
or
aaa
ljmp
jns
decb
mov
cmpsb
insb
sub
jl
jno
cwtl
mov
jl
minps
fnstenv
cltd
push
and
out
fcoml
push
aam
lock
fsts
jbe
or
adc
mov
mov
sub
jg
fisttpll
inc
xor
inc
push
sub
je
mov
in
adc
aad
jnp
sarb
aad
std
testb
sar
mov
mov
mov
xchg
jle
cs
or
cmp
jl
xor
gs
mov
push
inc
mov
dec
lods
mov
les
add
pop
and
xchg
test
test
rolb
sub
ficoms
sahf
cmp
jg
in
push
inc
test
lea
and
lock
or
mov
mov
push
pop
lods
push
and
mov
and
loopne
in
dec
dec
aad
loope
fsubs
in
cwtl
ret
push
add
dec
lock
aam
add
push
pop
add
mov
aam
std
pop
mov
fwait
sub
cld
and
and
adcb
push
insl
adc
push
fcoml
or
mov
pop
mov
inc
test
cld
xchg
in
es
dec
aam
sub
out
mov
call
js
into
je
inc
jmp
or
fcomps
mov
lock
lea
adc
sub
sarb
jp
outsb
sub
movsb
sbb
shl
sbb
out
das
push
rol
das
loope
inc
andl
mov
jo
or
js
jecxz
jmp
lods
std
into
add
push
inc
out
divb
or
repnz
gs
lahf
inc
pop
jb
adc
pop
fisubrl
lds
sub
iret
pusha
pop
scas
imul
and
push
pushl
adc
push
mov
dec
pusha
js
jmp
dec
cmp
mov
decl
add
push
incb
insl
sbb
repnz
je
jbe
lahf
stos
mov
mov
leave
dec
pop
dec
mov
mov
ja
imul
sub
loop
cmc
xchg
test
and
lea
je
movsb
mov
shrl
and
mov
ret
aam
mov
mov
dec
imul
push
pop
fwait
shl
test
push
movsb
mov
lea
sahf
adc
mov
adc
push
inc
mov
mov
cmp
mov
mov
icebp
sub
push
outsb
mov
inc
pop
and
push
sub
xchg
mov
stos
add
imul
mov
js
mov
inc
dec
cmp
into
push
or
ljmp
xor
pop
mov
push
lcall
loope
clc
loope
pop
test
lret
shrb
clc
sbb
lret
movsb
adc
cmp
lret
jp
scas
movsb
incb
jl
push
add
arpl
bound
repnz
sub
add
call
aam
cld
sub
jns
test
sub
inc
lods
lret
int
mov
roll
xor
sahf
adcb
ror
lret
add
rclb
cmpsl
pop
inc
add
mov
push
test
data16
jg
mov
xchg
mov
lds
icebp
xor
or
mov
jno
rclb
jle
gs
testl
xor
cwtl
pusha
cmpsl
jp
or
jle
les
mov
push
sbb
pusha
add
jnp
push
addb
xlat
in
push
add
out
or
sub
dec
repz
jo
insl
ror
sub
out
dec
mov
dec
inc
lea
mov
inc
cmp
and
in
inc
lcall
add
add
das
lcall
cs
inc
fmull
add
xlat
xchg
loop
test
movsb
cmpsl
pop
and
mov
js
hlt
inc
add
lds
dec
cmp
loope
jno
or
mov
movsl
or
mov
or
mov
sbb
adc
add
jbe
ret
in
hlt
popa
add
loop
movsb
inc
fdivrs
and
sbb
pop
dec
push
push
mov
mov
xorps
clc
jg
or
and
xchg
sbbb
jmp
lahf
add
fildll
pop
mov
inc
add
ret
cwtl
dec
cmpsb
outsb
cmp
pop
sub
dec
std
imul
xchg
mov
push
jb
clc
lahf
or
pop
rolb
sub
cmp
and
cmp
test
adc
imul
adc
fidivrl
lods
mov
fadd
push
inc
or
cli
lcall
push
in
test
adc
xchg
sbb
in
mov
push
std
pushw
jno
fisttpll
mov
sbb
icebp
inc
mov
data16
sub
aas
mov
mov
hlt
add
cmpsb
xchg
idiv
fistl
xor
testl
inc
mov
scas
dec
ss
push
pop
cmc
out
addl
call
ds
into
addb
sahf
fldcw
add
outsl
push
fcmovnbe
sub
rcrb
add
xlat
out
fisubs
test
cmp
filds
jne
outsb
and
fwait
call
push
hlt
sti
and
or
lods
push
adc
call
add
sub
call
pushf
jmp
popa
sti
test
insl
pop
dec
dec
or
push
leave
sub
or
sub
cmp
mov
adc
xchg
loopne
popf
xor
shll
dec
mov
dec
shlb
call
add
jno
xor
scas
jno
je
sti
cmp
cmp
sub
movd
ficompl
inc
je
jp
mov
push
shlb
cmp
mov
dec
fnstcw
je
incl
sub
arpl
movsl
mov
or
xchg
sti
or
lods
std
or
xor
pop
inc
mov
subl
std
sbb
nop
pop
data16
xor
shl
push
pop
pop
cli
and
fsubl
pusha
xchg
xchg
mov
push
fistl
sbb
sbb
jmp
hlt
push
inc
fs
add
lods
clc
stos
in
push
inc
outsb
add
mov
mov
cli
out
inc
push
ret
aad
xor
fcmovb
xchg
test
je
sbb
cld
in
adc
push
adc
lods
cmp
scas
lock
mov
dec
clc
pop
adc
adc
sbb
cld
pop
add
push
dec
dec
movsb
adc
ja
lock
cwtl
lcall
pop
dec
scas
mov
or
sbb
loope
sar
add
mov
dec
sarl
arpl
cld
mov
add
jg
fldcw
cmpsb
mov
test
dec
fwait
cli
push
jmp
and
loopne
scas
call
mov
mov
pop
add
sbb
mov
inc
dec
mov
lods
iret
leave
js
pop
loop
xchg
sbb
add
or
mov
cmpxchg
or
rol
adc
outsl
cmpsb
fiadds
cwtl
ds
dec
cld
and
sti
jmp
mov
insl
push
vpand
mov
pop
push
lcall
hlt
inc
adc
movsb
inc
cmpsl
add
sbb
clc
inc
nop
stc
xchg
daa
add
sub
xchg
adc
les
dec
inc
aas
push
jge
dec
sbb
pop
add
outsl
xorb
gs
mov
cmc
cmp
add
movsb
and
inc
inc
adc
jb
add
ds
sub
clc
insb
out
popa
mov
or
sbb
and
rcrb
add
popw
push
shlb
subb
mov
in
or
and
ds
testb
sub
aaa
inc
mov
in
mov
cmp
pop
clc
cmp
daa
lret
hlt
push
and
dec
mov
gs
add
jle
sbb
add
mov
fcmovbe
sub
push
scas
inc
push
shll
cmp
ss
dec
movsl
jle
rolb
std
shl
das
mov
dec
nop
push
nop
dec
out
sbb
mov
rcrb
dec
ret
cli
jle
add
add
arpl
loop
shrl
jle
jg
push
in
int3
xchg
mov
add
mov
stc
adc
stos
sti
shlb
or
rol
fcomip
push
rcll
push
out
or
xchg
subl
jns
ror
mov
inc
lcall
sahf
mov
or
push
mov
dec
sbb
je
mov
push
push
cmp
js
mov
sbb
cmp
pop
popa
dec
push
inc
pop
insl
add
cmc
shlb
jo
test
add
insb
int3
pop
inc
pop
inc
push
shll
mov
jmp
mov
shlb
inc
negl
dec
cld
mov
mov
and
and
cli
cmp
divb
std
jecxz
ljmp
add
js
shl
jae
or
test
mov
sub
fmulp
sub
hlt
and
inc
sbb
add
jl
mov
or
xlat
xor
pop
jb
mov
or
fmuls
iret
aam
fcmovbe
jl
nop
dec
nop
outsl
orb
push
mov
add
fnsave
out
mov
fwait
movsl
mov
push
sbb
test
out
loop
aam
aam
stc
push
iret
ljmp
or
push
cmp
inc
repnz
cs
orl
arpl
test
push
lods
xchg
cmp
cld
loop
push
mov
outsb
nop
repz
add
out
dec
pop
subl
push
mov
mov
and
ss
push
mov
ljmp
xor
cli
mov
ret
ja
lret
in
fwait
add
pop
xor
jae
sub
and
xor
cmp
cli
mov
es
push
test
sbb
dec
filds
dec
xchg
ljmp
mov
xor
lret
dec
ror
aad
filds
pop
inc
imul
out
imul
xlat
xchg
mov
loopne
adc
pusha
lock
dec
push
add
mov
arpl
add
mov
decb
pop
pushf
sbb
ljmp
mov
xchg
enter
sub
pop
jl
add
and
cmpsb
or
pop
mov
in
mov
iret
mov
lds
mov
inc
test
or
jecxz
pusha
mov
push
loop
mov
lret
sbb
and
sbb
nop
pop
add
scas
icebp
mov
xlat
fcomip
mov
insb
push
sti
cmp
lret
push
sub
lods
into
stc
jmp
loop
mov
and
daa
add
scas
inc
aad
aam
sbb
incb
push
lods
mov
and
jmp
jne
sub
mov
mov
mov
push
das
js
push
out
mov
pusha
mov
push
lret
cmc
cmp
les
lods
insl
test
adc
scas
xor
je
test
xor
mov
cmp
aas
xchg
shll
popa
xor
js
mov
ficompl
pusha
enter
push
icebp
ss
decl
ds
hlt
jle
mov
add
test
push
mov
popa
cmp
cmp
mov
inc
sub
add
mov
cmp
fsubs
mov
mov
call
push
scas
sub
inc
mov
fcmovb
add
testb
pusha
inc
add
test
add
cmp
ficoml
pop
dec
in
pushf
sub
enter
cs
insl
or
add
mov
mov
insb
ret
mov
cli
insb
pop
xchg
push
ja
dec
sub
xorl
aam
xchg
loopne
mov
out
mov
and
loopne
or
sub
hlt
stos
outsl
mov
out
lret
repnz
lahf
int3
mov
lcall
mov
icebp
mov
sarb
negb
xchg
xor
push
add
mov
aam
addl
in
shr
jb
ss
cmp
push
test
shlb
insl
mov
fstps
add
ret
std
dec
push
and
adc
and
sbb
sbb
repnz
adc
mov
jnp
fildl
shll
add
add
jge
mov
adc
pop
icebp
aaa
mov
inc
into
addb
adc
or
es
loop
fstl
cmp
sti
inc
outsl
insb
ljmp
push
xor
mov
mov
insb
mov
push
xchg
cmp
adc
lods
jo
cwtl
add
mov
xor
mov
outsb
cs
ret
sbb
loop
jg
pop
inc
adc
cmpsl
push
pop
sbb
sub
sti
jl
insb
xor
iret
ja
rclb
stos
dec
movhps
mov
inc
mov
pusha
test
outsl
or
insl
push
adc
sti
mov
aas
and
mov
data16
in
movsb
adc
mov
cmp
or
mov
aad
xlat
adc
sub
ljmp
add
in
call
ds
icebp
cwtl
mov
mov
jmp
push
inc
or
out
jl
or
dec
xor
or
inc
mov
arpl
ret
dec
inc
jg
pop
hlt
nop
nop
arpl
ret
lcall
mov
inc
inc
fdiv
fstpt
stos
outsl
mov
sbb
mov
push
scas
jb
je
xchg
movsl
mov
xchg
lods
cmpb
mov
mov
clc
scas
test
enter
in
sbb
add
mov
movsb
cmp
xor
lock
into
jnp
jg
cmc
aaa
rclb
jb
adc
mov
icebp
dec
inc
repz
inc
inc
xchg
icebp
jp
or
mov
aam
sub
add
mov
rcr
shl
repnz
fcomps
out
mov
dec
sub
add
cli
or
int3
push
insl
add
add
adc
push
sbb
in
sub
push
daa
icebp
sbb
lods
shlb
bound
lcall
inc
push
inc
fsub
mov
in
dec
lods
outsb
je
cmp
lods
inc
fdivrp
cli
je
in
sub
ss
lock
rolb
cli
pop
out
es
test
cltd
mov
stos
adc
sbb
push
call
clc
mov
fstpt
mov
dec
sbb
repnz
and
xchg
sub
adc
push
dec
flds
ja
mov
jmp
das
dec
lock
fs
sbb
hlt
notl
adc
add
mov
mov
jg
gs
add
lahf
lods
mov
or
test
dec
mov
xchg
fwait
sbb
xchg
pop
outsl
dec
mov
jg
inc
jmp
or
fcomip
aas
sahf
js
or
rcr
push
sub
sub
adcl
xor
adc
pop
or
pop
lea
push
dec
shlb
insb
lods
xchg
loop
sbb
sub
cmc
fbld
test
and
inc
or
jmp
in
fimull
pop
out
pop
insl
pop
test
enter
pop
sub
cmc
pop
inc
imul
je
cmp
nop
imul
fstl
inc
cld
lock
lcall
inc
jle
mov
and
mov
add
js
aam
push
scas
lcall
push
rcrb
mov
hlt
adc
pop
call
pop
inc
fsubs
js
imul
jg
jl
test
ret
dec
or
pusha
les
mov
mov
cmpsb
adc
or
mov
inc
std
mov
loope
push
xor
xchg
int3
cmp
or
fcoms
or
inc
add
cmp
orb
fbld
mov
int3
icebp
push
bound
sub
sub
mov
fistl
xor
andb
popa
inc
es
ljmp
push
insl
mov
dec
inc
clc
jno
cmpsl
outsb
or
adc
pushf
in
fisubl
nop
jmp
sub
movsb
and
outsb
bound
fisubrs
mov
add
pop
sarb
inc
testl
adc
sub
mov
xchg
pusha
or
es
xor
xor
ret
int
xor
sbb
mov
std
mov
jecxz
jg
decb
outsl
in
aas
jp
outsl
test
push
xor
and
cld
aaa
push
pop
jle
jmp
mov
dec
push
js
ljmp
cmpb
inc
loop
dec
adcb
test
ficoms
adcl
fwait
dec
std
leave
mov
lea
popa
push
or
call
aam
test
js
test
addr16
clc
push
cmp
lods
inc
xor
xchg
xor
andb
adc
xchg
repnz
mov
or
xchg
cmp
push
clc
push
sub
pop
cmp
jg
cmp
imul
add
out
xchg
and
lods
out
lret
xchg
bound
inc
loope
or
xor
cmc
inc
jl
add
mov
xchg
sbb
pop
pushf
call
aad
add
mov
pop
outsl
pop
ss
je
mov
cld
add
in
orb
js
and
pop
sbb
stos
test
js
or
add
hlt
mov
clc
add
ja
rorb
pop
ss
stc
data16
insl
loopne
mov
pop
inc
aam
lcall
cld
lods
mov
loopne
mov
sahf
or
addb
rorl
push
movsl
pushl
mov
adc
data16
int
mov
insl
adc
loope
lods
pushf
rclb
loop
addl
in
lods
dec
std
xor
mov
add
ret
ds
sbb
sub
mov
in
test
std
mov
iret
pop
pop
mov
popf
mov
sbb
adc
sbb
loope
das
xor
mov
sbb
fisttpll
call
dec
mov
cmp
xchg
js
mov
xchg
sbb
int3
jb
aam
lret
push
jge
enter
testb
ret
jle
pop
movsl
mov
push
push
lcall
xor
sub
add
pushf
pop
lea
repz
mov
cmp
sbbb
in
in
cli
daa
add
sub
adc
mov
inc
mov
sbb
fldcw
inc
or
imul
repnz
in
dec
jbe
cs
adc
loop
ljmp
adc
fcmovnu
and
mov
mov
pop
push
pop
lcall
push
add
je
inc
jmp
xor
fadds
push
xor
jle
cs
or
cmc
mov
fistpll
xor
adc
insl
clc
outsl
and
and
out
push
mov
or
lcall
mov
aaa
and
popf
and
popa
or
es
aaa
or
or
test
sbbl
out
mov
fisubrs
or
xchg
out
mul
push
mov
inc
popf
andl
jb
mov
cmp
lock
xchg
ds
dec
aaa
std
pop
cmpsb
les
mov
popf
cwtl
dec
xchg
and
lret
push
pop
or
inc
out
add
mov
mov
js
subb
scas
clc
test
jg
js
dec
rcll
pop
cs
bound
scas
add
testb
jg
hlt
rclb
leave
scas
push
sub
lea
inc
push
pop
jae
mov
ds
out
pusha
pop
outsl
rorb
sahf
add
add
and
dec
inc
sti
es
jnp
scas
pop
iret
std
in
aas
in
add
bound
std
bound
mov
jg
loope
icebp
pop
inc
and
cmp
lahf
dec
and
cli
and
xor
sbb
lret
cmpb
je
sub
fwait
xor
ret
pop
pushf
adc
sbb
loop
xchg
pmuludq
ds
loope
mov
aaa
and
lcall
pop
test
nop
lea
cld
call
push
xchg
loopne
cmp
jbe
lods
sbb
js
js
call
push
mov
cmpsb
jae
loope
mov
mov
sub
aas
jbe
scas
icebp
pop
push
jb
ret
pop
pop
xchg
sar
or
cmp
aam
inc
push
adc
adc
push
loope
mov
push
out
sti
mov
ds
mov
pop
dec
out
mov
xchg
push
lcall
mov
cs
cld
in
lods
in
pop
jg
pusha
jl
fdivr
fidivl
adc
ss
ficoml
jl
std
inc
pushf
adc
shlb
push
rcrb
xor
jecxz
mov
jg
shlb
or
xchg
jo
dec
rolb
or
xor
icebp
fwait
incl
mov
cmp
mov
rcr
xor
pop
js
das
pop
fdivr
mov
pushf
xchg
cltd
mov
or
sbbb
add
fistps
shll
push
xchg
lea
mov
js
or
int
in
xchg
aaa
movsb
loope
pop
push
inc
inc
std
push
adc
out
push
insl
loopne
mov
sbb
xor
xor
jo
fildll
adc
xchg
xchg
jbe
jo
mov
fwait
sub
push
movsb
pushl
in
jge
pop
sbb
incl
stc
aas
push
xor
andl
ret
ljmp
lock
loope
outsl
mov
hlt
ds
jmp
xor
lods
cmp
push
inc
ret
daa
stos
dec
jecxz
test
sbb
test
pop
incb
lahf
jle
pop
mov
outsb
inc
mov
xchg
lods
mov
pop
outsb
add
push
pop
mov
addb
adc
push
push
push
adc
jo
cwtl
out
dec
cs
push
mov
loopne
push
fsubrp
enter
or
push
xlat
lahf
xor
mov
mov
mov
nop
shl
incl
mov
call
pop
std
dec
add
adcb
sbb
loopne
push
fidivrs
push
push
jno
mov
lock
mov
xor
add
pop
push
mov
loop
stos
mov
jecxz
frstor
cwtl
fidivl
sub
push
mov
aas
pop
push
xchg
sub
pushf
add
xchg
add
mov
inc
sub
push
subl
mov
lods
mov
and
xchg
dec
and
mov
sub
push
scas
loop
sub
jbe
cmc
cmpb
mov
jmp
dec
push
roll
or
nop
data16
bound
dec
nop
loopne
or
std
cltd
nop
rclb
mov
push
std
mov
es
loop
inc
jb
or
and
xor
int
or
mov
dec
out
and
shrb
jg
adc
scas
or
dec
stos
lret
je
popa
pop
aad
int3
ffree
adc
sub
mov
popa
test
orl
cmp
mov
sub
ds
jg
add
adc
dec
mul
inc
je
sub
aam
inc
scas
mov
fmull
int3
pop
in
jo
pop
pop
fs
jp
nop
dec
outsb
ficoml
xor
negl
adc
mov
add
nop
and
sub
sbb
ds
rorl
mov
js
adc
push
add
decl
loop
nop
sub
jnp
jp
and
xor
shl
inc
sar
std
pusha
and
jp
out
xor
push
daa
pusha
cmpsl
xchg
outsl
pop
xor
cmp
into
mov
loopne
das
aam
lret
test
sbb
das
push
jne
xor
insb
xchg
test
lcall
and
jp
mov
lods
xchg
imul
adc
mov
outsb
mov
inc
ret
ljmp
cmc
cld
popf
xchg
sub
lds
mov
sub
jl
xor
adc
rolb
xchg
sub
mov
sahf
ret
out
or
lock
mov
jne
loopne
fadds
adc
jb
mov
cs
int
push
out
xchg
sbb
movsb
stos
test
int3
jbe
mov
stos
mov
push
xchg
repnz
cwtl
loopne
jbe
sub
outsl
xchg
mov
jb
jp
sti
test
test
or
xor
push
rolb
test
in
inc
add
push
lea
add
rcrl
call
jns
loopne
add
ja
xchg
push
adc
xchg
add
push
xchg
outsb
push
or
pushf
fiadds
outsl
clc
shlb
add
fidivrl
fisttpl
les
cmp
add
test
loop
movsl
jg
adcl
adc
dec
sahf
stos
or
xchg
insb
loopne
sbb
push
dec
jge
or
mov
ljmp
das
stos
mov
fistl
je
mov
mov
aam
dec
add
ja
xor
add
fisubl
movsl
cs
sbbb
inc
cmpsb
fwait
add
ret
fdivp
or
push
sbb
shlb
test
jecxz
scas
rolb
lea
leave
mov
xor
adc
lcall
fsubrl
cs
sub
push
pusha
ss
push
pop
and
aam
in
out
lods
dec
cmpsb
adc
cmpsl
es
rorb
or
xchg
push
insl
add
insl
scas
push
fmull
popa
int3
mov
pop
add
ss
dec
and
push
mov
mov
push
outsb
les
cmc
aad
jl
pop
je
loop
pusha
call
adc
in
stos
les
inc
mov
popf
ss
fcoms
or
sub
std
xor
push
mov
mov
repnz
in
inc
jmp
lret
ljmp
sahf
insb
movsb
bound
inc
mov
xor
lds
inc
std
adc
cmpsb
mov
icebp
fisubl
dec
int3
push
xchg
mov
inc
add
push
clc
dec
mov
or
mov
cmpsb
neg
cli
popa
xlat
arpl
rcll
sbb
test
out
xchg
add
xchg
xchg
xor
sbb
cmp
loope
adc
pushf
mov
cwtl
mov
sti
je
repz
nop
enter
mov
add
inc
mov
mov
cli
fildl
dec
push
imul
icebp
sub
out
mov
adc
in
call
insb
popw
out
add
sub
mov
dec
scas
clc
dec
xchg
mov
arpl
bound
mov
outsb
inc
sbb
dec
cli
pop
sub
or
das
sub
push
push
ljmp
cmc
daa
sub
jmp
js
cmc
jp
cmpl
xchg
cs
cmpsb
sbb
ret
sub
sbb
xchg
in
sbb
xor
flds
dec
sub
movsb
shr
clc
and
xchg
addb
push
push
das
pop
adc
lds
adc
lock
lds
push
xor
xor
xlat
add
mov
push
mov
pop
data16
inc
int3
rclb
dec
fdivrs
ss
fsubrl
add
dec
inc
xorb
icebp
fildl
mov
adcb
xor
xor
ds
pop
cmp
dec
jle
call
cld
and
add
faddl
ja
insl
call
pop
xor
cmpb
pusha
adc
lods
sahf
mov
inc
inc
ret
enter
lcall
repnz
scas
fld
sub
sub
jg
es
cmc
add
mov
and
and
bound
pop
ds
ja
inc
filds
orl
addb
enter
push
out
sbb
rep
sti
xchg
daa
sbb
mov
pop
shr
pop
popa
sub
and
mov
movsb
ret
adc
ret
push
popa
outsb
test
push
popa
pop
movsb
lcall
or
inc
xchg
fs
ljmp
pop
mov
mov
mov
hlt
fstp
pop
stos
adc
mov
outsb
sarb
je
sub
jns
inc
loop
mov
gs
rcl
inc
cmp
mov
mov
and
mov
pusha
bound
push
divl
jno
and
loope
mov
sub
push
mov
inc
sbb
outsl
pop
mov
cmpsb
bound
xchg
test
cmc
and
rorb
or
dec
scas
jp
popa
stc
mov
jbe
testl
sbb
movb
hlt
sbb
lock
xor
mov
xor
jo
ds
pop
pop
into
fistps
fwait
add
imul
pop
pop
inc
inc
loopne
imul
cmc
outsb
ds
and
fstl
push
incb
dec
and
shlb
xchg
andb
sub
add
xor
ror
and
insl
jne
sar
enter
mov
es
pop
lahf
add
xchg
adc
xor
pop
dec
mov
clc
push
sub
js
add
jl
iret
adc
xchg
aam
add
and
and
mov
add
in
cmpsb
jbe
out
or
cmp
mov
jmp
and
mov
sarl
mov
xlat
adc
test
xorl
cmpl
movsl
adc
cmpsl
add
aaa
push
leave
lahf
sbb
out
pop
xor
out
xor
mov
sub
fmuls
enter
jmp
outsl
mov
add
inc
scas
ret
clc
xor
lahf
xchg
shlb
sbb
cmpl
xlat
pop
push
adc
mov
and
jo
orps
shr
add
into
popf
std
mov
dec
adc
adc
ljmp
sbb
js
jl
add
mov
sub
mov
orl
fstpl
rolb
mov
repnz
pushl
adc
dec
outsb
mov
push
xchg
sub
and
push
or
sti
and
shlb
xor
mov
ja
sbb
test
ds
cmp
and
loopne
pop
add
push
xchg
pop
sahf
int
ret
cmp
push
adcb
xchg
into
add
sub
call
or
mov
add
inc
cs
lock
adc
loope
mov
and
jae
addl
mov
jecxz
std
das
loope
cmc
add
sub
lock
scas
or
lret
inc
push
das
stos
add
dec
cs
xchg
sbb
vcmpps
add
movsb
movl
pop
dec
mov
ror
mov
push
idivb
mov
mov
inc
cmpsb
or
dec
pop
and
lods
fcoms
push
jg
roll
bound
add
fs
add
mov
xchg
rcr
cmc
dec
mov
xor
push
inc
adc
or
dec
add
xor
sub
outsl
sub
scas
popl
outsb
and
inc
hlt
sahf
in
cmp
or
inc
clc
jmp
and
filds
sbb
cmp
xchg
pop
mov
xor
jno
sbb
dec
add
push
addr16
xchg
pushf
fadds
sbb
pop
add
rcll
lcall
jno
mov
jg
test
inc
cmp
imul
clc
push
sbb
cs
call
inc
xorl
sbb
push
ret
cltd
sarb
das
add
xchg
fdivl
inc
dec
jmp
xor
jge
bound
inc
dec
pusha
pop
stc
lret
adc
add
push
jmp
mov
mov
out
pop
imul
sbb
pop
out
clc
add
rol
fdivrs
inc
pop
adc
mov
and
icebp
adc
aas
cmp
les
test
mov
aaa
cmp
push
loopne
decl
cmp
push
add
jle
jge
ficomps
in
cwtl
std
adc
in
dec
push
add
mov
and
add
stos
cwtl
clc
sub
cwtl
inc
inc
daa
rorl
add
and
out
jb
mov
bound
mov
pop
nop
int3
mov
push
mov
mov
jl
add
cli
into
lock
fcomip
sbb
xchg
adc
push
pop
or
sub
stos
jo
aas
lcall
xor
les
insl
push
movb
loop
cwtl
adc
pop
xchg
mov
nop
mov
sub
popa
repz
popf
hlt
push
lock
and
jmp
lds
cli
bound
xchg
test
loopne
pusha
in
js
sub
incb
mov
nop
mov
dec
or
scas
and
int3
dec
fwait
inc
fcoml
filds
fcompl
cld
add
pop
stos
pop
push
push
mov
push
or
mov
movsb
pop
ds
xchg
mov
sub
addr16
or
cmp
subb
sub
cli
aas
roll
mov
bound
fst
dec
push
pop
or
int3
adc
push
push
xor
loope
cwtl
rclb
shll
inc
and
inc
ds
nop
xor
inc
popa
and
inc
xchg
adc
lods
scas
out
inc
clc
lds
adc
ret
bound
je
incl
adc
inc
sbbb
mov
orb
push
aaa
jle
lcall
test
add
sbb
popa
adc
scas
std
cmp
ja
jno
add
movsl
add
fsub
xor
scas
push
or
push
sub
adc
jl
mov
rorb
movsb
stos
inc
loopne
mov
and
inc
stos
rclb
lcall
push
jnp
subb
pusha
dec
add
push
mov
pop
addr16
mov
mov
sarb
call
jl
add
or
or
imul
clc
push
and
or
push
dec
cmpsl
or
ljmp
xlat
cli
stc
push
mov
fst
xchg
xchg
or
cld
sbb
mov
js
cmc
dec
lods
mov
add
sbbb
ljmp
inc
sbb
scas
sahf
xchg
xchg
rcr
decl
aas
test
andl
repnz
xor
js
or
and
popa
loop
mov
or
ret
test
shlb
dec
into
jp
mov
mov
dec
bound
mov
add
xor
add
mov
pop
push
lret
jns
mov
lock
test
pop
or
push
jp,pn
push
mov
loope
and
xlat
test
popl
les
or
or
mov
iret
jbe
mov
les
jecxz
add
sbb
or
xchg
loopne
sub
call
not
or
or
cs
mov
adc
cmp
mov
inc
jl
jae
nopl
arpl
xor
lea
cmp
xor
mov
popf
sbb
jp
lods
in
lcall
lret
stos
mov
sahf
addl
in
cmp
lret
loope
or
fidivl
aas
test
mov
mov
int
or
fbld
adc
pop
fcomi
inc
push
or
fmuls
fidivs
int3
jmp
lcall
sbb
inc
push
adc
inc
outsl
pop
mov
push
dec
ret
push
sbb
repnz
or
or
lahf
mov
insl
clc
mov
adc
push
and
pop
je
mov
out
and
pop
mov
xchg
and
push
push
test
rorb
dec
jbe
adc
movsl
cmp
add
test
add
cld
jae
jne
fcompl
clc
sbb
rcll
ss
mov
int
aam
cmpsl
push
arpl
es
arpl
jo
dec
scas
cmc
sbb
arpl
pop
jge
mov
pop
lods
aam
jmp
and
xor
test
mov
pop
cmp
mov
int3
sbb
scas
sbb
mov
ret
mov
pop
fidivl
mov
insl
cld
arpl
cmp
pop
or
std
pop
das
aam
jmp
sarb
or
push
aaa
add
pop
mov
jle
imull
nop
js
shr
or
xlat
mov
sarb
jecxz
and
lcall
mov
fidivl
or
std
addb
fwait
mov
push
sub
inc
jg
mov
dec
dec
push
xlat
mov
cmp
add
and
mov
pop
loopne
hlt
insl
sar
outsb
push
aam
xor
or
test
push
ljmp
orl
mov
or
out
fdiv
cmpb
cmp
mov
xor
cmc
outsl
jp
imul
cmpsl
sub
mov
adc
aad
jbe
sub
dec
js,pt
push
push
fdivrs
andl
and
add
cmp
cld
xchg
or
or
jne
cwtl
andl
ss
and
cmpsl
add
jecxz
mov
cmp
lods
hlt
push
addr16
cmp
imul
icebp
mov
cmpsl
xchg
sub
fs
dec
push
mov
or
pop
mov
mov
push
scas
jge
in
js
test
sbb
enter
dec
in
das
dec
push
jp
pop
arpl
fcos
pusha
adc
jo
push
jo
testl
mov
jmp
push
test
in
jmp
mov
rcrb
jbe
adc
sub
dec
xchg
outsb
in
hlt
dec
aas
push
es
pop
jg
loopne
xchg
sbb
mov
inc
movl
fstl
dec
pop
sub
roll
imul
insb
neg
push
add
std
push
in
dec
outsb
or
mov
pusha
pop
inc
loopne
fisubs
loope
jp
adc
sub
aam
cmp
jmp
add
push
mov
rcrb
mov
push
push
push
mov
push
enter
jecxz
out
or
ljmp
or
test
popf
fstpt
xchg
cmpsb
and
cli
cmp
addb
bound
fadd
iret
or
loopne
sub
out
aam
fldl
lret
mov
sahf
and
push
movsb
pop
test
add
rcll
int3
jl
mov
push
decb
imul
ljmp
pushf
inc
mov
les
xchg
push
push
sar
mov
or
push
call
call
aaa
js
rcll
inc
mov
push
outsl
repz
lods
lea
jg
scas
les
push
inc
mov
scas
popa
jl
loopne
dec
adc
flds
js
xchg
fidivrl
incl
lahf
and
mov
scas
test
movsl
loopne
mov
cmp
scas
inc
rcrb
mov
mov
adc
sub
negl
mov
mov
mov
adc
xchg
xor
ret
fildll
rorl
sub
push
in
pop
mov
addr16
adc
push
jb
jnp
and
scas
mov
pop
imul
lods
test
mov
push
add
data16
enter
xchg
mov
testb
lea
loopne
sti
std
xchg
add
sub
in
mov
les
mov
or
ljmp
aad
lret
mov
lret
cltd
cmp
jmp
xlat
das
add
es
inc
dec
ss
out
maxps
js
adcb
pop
pop
rol
cwtl
imul
cltd
pop
in
loope
into
adc
clc
movsl
sbb
cmc
test
cmp
dec
nop
loopne
movsl
sub
and
aaa
cmp
add
cwtl
lret
pop
dec
mov
and
dec
js
bound
add
cmp
cld
inc
ret
and
pop
pop
imul
out
xor
jne
mov
ret
or
icebp
dec
push
subb
andb
jge
aas
dec
scas
loop
mov
std
jbe
cld
fmull
xor
shlb
sti
xor
mov
stos
mov
xchg
mov
rcll
adc
je
mov
mov
loopne
sbb
movsb
mov
outsl
out
jl
mov
in
xchg
and
loopne
jno
rol
add
dec
jne
xor
std
mov
test
cld
add
mov
cmp
inc
cmp
xchg
dec
fwait
inc
mov
add
test
imul
jge
mov
push
jecxz
jo
inc
pop
imull
es
jp
jae
enter
lret
adc
push
popa
jp
mov
je
and
push
shl
cmc
xor
push
xchg
les
sub
jp
jae
cmp
adcb
aad
pushf
add
and
std
add
and
pop
int
adc
mov
xor
mov
addr16
mov
ret
sbb
push
jmp
mov
cli
lods
popf
xchg
ret
jne
jle
and
sbb
imul
xchg
pop
pop
sbb
inc
imul
sbb
cmpsl
lret
dec
mov
stos
repnz
push
push
bound
mov
insb
test
sarb
sub
add
sbb
or
lods
or
jbe
clc
cmpsb
inc
add
repz
adc
fdivrl
leave
test
inc
pmaxub
pop
push
jl
xor
ret
cmpsb
push
add
xor
push
ds
enter
jbe
sbb
xchg
hlt
mov
sub
addr16
mov
ljmp
and
imul
pop
add
das
insb
lea
sbb
stos
es
repnz
cwtl
inc
cwtl
push
icebp
ffreep
cmp
cwtl
es
jne
sbb
test
sub
jno
and
shlb
sbb
mov
push
inc
dec
pusha
pushf
pop
or
aaa
xchg
outsl
jbe
std
jg
adc
push
cmp
jecxz
and
push
mov
xchg
push
cld
mov
in
ret
clc
fwait
jbe
push
test
repnz
cmp
sbb
inc
inc
in
jg,pt
mov
into
clc
xchg
push
mov
lds
add
and
pop
ret
push
jns
es
ret
mov
sbb
adc
mov
clc
pop
and
in
and
sbb
rclb
fsts
xor
stos
icebp
lea
sub
popf
xchg
pusha
add
in
loope
sbb
lock
lock
cmc
ljmp
or
adc
xchg
and
push
and
clc
icebp
ret
mov
adc
adc
or
mov
fwait
mul
outsb
push
inc
inc
pushl
fildl
aad
or
pop
or
push
sub
ljmp
lea
sahf
push
push
loope
clc
pop
hlt
adc
loopne
lods
jmp
iret
out
mov
dec
jmp
faddp
fstpt
adc
xchg
push
sub
outsb
push
and
std
loopne
es
out
popa
sarl
lret
ljmp
sbb
pop
dec
mov
add
lds
mov
add
fdivp
dec
testb
ds
mov
jl
or
inc
and
inc
fmull
mulb
jg
outsb
or
xor
inc
in
dec
and
rol
das
inc
lret
and
jne
adc
rcl
cld
jmp
dec
jp
lcall
mov
mov
jmp
push
scas
add
pushl
mov
aam
and
cmpl
les
ret
shrb
push
xchg
mov
adc
xchg
decl
sbb
mov
inc
jmp
add
xchg
adc
add
push
cmp
sub
ljmp
leave
inc
bound
xchg
pop
scas
pop
andb
ret
add
stc
or
rcrb
das
dec
fcmove
decb
fistpll
ja
movsb
ds
xor
and
sub
add
mov
out
bound
mov
adc
or
mov
adc
add
or
push
add
arpl
and
pop
push
decl
xchg
xchg
adc
adc
jne
push
cwtl
push
sbb
push
fcompl
mov
je
jne
pusha
rclb
pop
clc
and
add
inc
bnd
sbb
xchg
fsub
mov
insb
pop
xor
cmp
scas
js
adc
sbbb
mov
stos
pop
jmp
fsubl
lds
mov
xchg
inc
outsl
je
mov
lcall
add
and
mov
out
xor
or
hlt
stc
xchg
pop
aad
aam
dec
cmp
stc
dec
add
popa
fcoml
and
lds
pop
jge
xor
xchg
dec
push
aaa
inc
decb
pop
or
out
xor
ret
fdivrs
pop
fmuls
mov
jns
cmp
lds
adc
sub
xor
adc
add
fcoms
jp
icebp
cmpsl
mov
pop
pop
xchg
push
add
mov
mov
or
and
testb
mov
pushf
jle
outsb
jne
xor
dec
dec
data16
sbb
pusha
pop
add
iret
jmp
pop
mov
xor
js
or
inc
mov
dec
dec
mov
and
add
mov
popa
imul
inc
or
ret
fidivs
test
test
jno
std
pop
push
inc
ss
xchg
cs
add
mov
stos
mov
sbb
xor
hlt
out
pop
inc
rcrb
out
les
jmp
xchg
add
sub
incb
les
or
xlat
fists
cld
pop
mov
xchg
clc
add
stos
adc
clc
mov
jne
push
sbb
fildl
addr16
jne
add
hlt
nop
jle
pushl
loope
repnz
out
in
std
mov
cmp
fidivl
nop
add
into
std
jge
mov
inc
push
inc
cli
adc
out
js
rcrb
cld
bound
and
fbstp
push
push
xchg
icebp
call
mov
pop
pop
ljmp
jbe
mov
dec
push
jno
fwait
adc
test
jmp
out
adc
jp
adc
push
mulb
leave
mov
ja
dec
add
inc
add
xor
andb
lahf
loope
scas
pop
je
outsl
xor
lods
xchg
sarb
adc
push
lock
bound
je
lock
xchg
sub
or
js
rol
and
jle
stos
push
std
add
add
mov
inc
fs
out
js
mov
dec
roll
sub
decl
mov
sahf
daa
sbb
push
rclb
or
out
push
fiaddl
inc
js
in
test
mov
mov
movsl
fnstenv
dec
bound
fcom
imull
and
fcom
pop
movsl
pop
js
scas
fiadds
mov
shrb
inc
and
scas
push
push
push
adc
aam
cwtl
inc
adc
clc
imul
xchg
test
in
inc
push
jmp
push
or
pop
mov
xchg
and
fcomip
sbb
and
and
add
or
cmp
cmp
cltd
out
mov
inc
dec
push
mov
jne
in
testb
aam
clc
sbb
insb
ss
push
mov
mov
filds
dec
cmp
scas
shll
sub
lcall
dec
clc
sbb
dec
inc
push
push
loop
aaa
repnz
adc
jp
shlb
xor
outsb
in
cs
sub
xchg
scas
sub
cmp
data16
dec
jne
fdivrl
out
push
sub
pop
mov
push
dec
cmpsb
test
xchg
sub
orl
mov
popa
sti
dec
rorl
lock
or
add
mov
push
std
mov
adc
cli
div
inc
adc
sbb
clc
incl
pop
ret
out
mov
stos
mov
js
mov
pop
push
out
cltd
insl
cmp
jle
movsl
mov
sbb
fsubs
cmpsb
add
adcl
scas
jb
adc
cmc
mov
mov
pmaxsw
adc
cmp
push
pop
icebp
sub
das
and
cwtl
and
and
test
adc
adc
or
push
mov
movsl
or
xchg
lahf
sbb
je
pop
subl
and
xchg
inc
je
fsts
data16
mov
mov
popa
orl
xchg
jp
popa
inc
aaa
mov
movsl
sbbb
in
jg
xor
in
ret
in
and
mov
pop
sbb
jle
stos
in
adc
rorl
mov
sub
ffree
adc
fnsetpm(287
jecxz
imul
jge
notb
outsl
cli
mov
es
rorl
dec
jge
cmc
loop
xor
mov
dec
push
jne
pop
fstps
jno
ret
xor
mov
pop
test
dec
xorl
mov
aaa
push
in
jp
and
pop
xchg
xchg
sub
dec
cli
jnp
test
lea
pop
clc
fmull
cmp
icebp
dec
jns
mov
inc
inc
das
cmpsl
nop
lcall
hlt
xchg
cmp
ljmp
dec
push
out
aam
dec
push
movsl
faddl
add
sub
xor
into
mov
loop
dec
ljmp
mov
cmp
fists
rclb
iret
pop
cwtl
push
ss
cs
mov
mov
sub
sub
or
cli
jo
invd
imul
fadds
xor
sub
ret
loop
dec
outsb
sub
repnz
arpl
mov
out
lods
push
scas
stc
add
call
pop
fisttps
call
cwtl
jno
aaa
out
enter
fisubrl
push
test
or
sar
js
cltd
or
testb
add
hlt
push
push
sbb
push
fistps
lock
mov
jbe
es
sub
inc
int3
retw
cmp
or
and
push
xchg
jle
xlat
icebp
inc
adc
movsb
mov
mov
jo
loopne
jp
pusha
fsubrl
loop
pop
add
rorb
fmull
int3
pop
mov
sbb
xor
jecxz
xor
negl
fistps
cld
sbb
loopne
popf
and
les
jl
insb
cmp
mov
push
aas
loope
add
out
adc
xchg
mov
sub
sbb
fsubrl
loopne
mov
dec
push
aaa
movsl
sarl
shl
inc
push
dec
test
push
je
movsb
cmp
bound
mov
add
ss
add
fcmovnbe
bound
inc
adc
cli
add
ss
jg
push
sub
adc
loope
jg
and
mov
pop
jl
in
fs
fildl
jno
out
and
fstl
jge
jl
data16
hlt
bound
ret
pop
mov
and
inc
inc
aad
jp
stos
lods
test
xchg
lcall
xlat
pop
movsb
push
pop
or
mov
sbb
add
or
gs
cmp
inc
mov
arpl
std
subl
mov
mov
fiaddl
pop
std
rolb
loop
hlt
iret
imul
mov
inc
enter
jbe
test
fwait
sahf
out
call
inc
mov
xchg
cwtl
push
icebp
outsl
pushf
push
lds
hlt
sub
sub
jno
adc
sbb
mov
stos
inc
push
sub
dec
call
aaa
pop
fistl
cmc
sbb
sub
rorl
mov
pop
jo
fidivrl
lock
rorl
and
fwait
cmp
fcompl
movsl
push
fcoml
stos
adc
int3
jg
out
test
inc
sub
imull
jnp
mov
movsl
popf
and
mov
negl
xchg
mov
or
lret
fistps
or
cld
loope
push
mov
ds
mov
add
fcomi
sbb
pop
add
inc
adc
sbb
data16
or
xor
xor
in
push
add
insb
out
loop
push
inc
mov
jnp
or
xchg
cmpsl
into
mov
mov
stos
aaa
fstps
arpl
cmp
sub
mov
add
or
ljmp
aad
sub
cli
aad
std
loope
mov
sub
lods
shll
fnstcw
mov
push
callw
mov
mov
sub
sti
outsl
jo
bound
das
mov
adc
inc
adc
push
push
scas
xor
nop
les
inc
cmp
sti
filds
jb
int3
daa
jp
mov
cs
mov
and
push
and
adc
stos
push
pop
pop
push
jo
push
cwtl
dec
xchg
push
repz
mov
and
pusha
cmp
js
clc
and
jno
sahf
movsb
mov
enter
mov
mov
ljmp
adc
or
and
mov
outsl
rclb
jp
adc
lea
sahf
jbe
inc
cli
adc
sub
int3
int3
cltd
jae
xor
movmskps
add
adc
xor
ffree
sub
or
les
jg
fwait
inc
adc
lcall
push
mov
scas
cmp
test
and
push
xor
push
aaa
xor
icebp
pop
jbe
bound
mov
mov
inc
aas
sti
scas
push
push
push
add
loope
cltd
jnp
in
jbe
and
orl
add
test
adc
xchg
add
js
pusha
gs
cmp
xchg
inc
int3
jecxz
in
imul
dec
fwait
mov
pop
push
ja
out
bound
test
lcall
add
cmc
add
jecxz
ds
mov
mov
dec
call
jmp
icebp
fwait
cld
nop
pop
test
shl
pop
ljmp
pop
cmp
insl
add
ds
inc
lcall
cmp
loop
or
sbb
mov
pop
rcrl
inc
cmc
or
into
loope
or
or
pop
cmc
pop
insb
xor
std
add
fisubl
push
pop
adc
cmp
fnsave
std
jg
bound
add
pop
jg
add
sar
and
es
sub
pop
ljmp
mov
ret
mov
inc
call
ficoml
cmp
rorb
add
imul
std
mov
cmp
shll
sub
sarb
pop
dec
call
mov
call
push
outsb
ljmp
sub
sub
adc
mov
imul
inc
cld
fwait
sar
mov
mov
mov
aad
adc
scas
cs
jp
add
push
push
sub
sub
inc
push
cmc
inc
clc
cmp
mov
movsl
push
gs
subb
push
xchg
push
stos
dec
les
lahf
loopne
add
adc
sub
jg
into
push
in
sarb
sub
imul
ds
scas
test
adc
testb
icebp
inc
inc
cmpl
inc
mov
jmp
lcall
cmp
outsb
es
stos
pop
decb
sbb
cmp
fwait
add
add
enter
loop
std
mov
movsl
and
pusha
clc
frstor
mov
and
ja
out
add
sub
das
fisubrs
sbb
mov
inc
xchg
adcb
aaa
shlb
int3
or
mov
lods
xor
fidivl
out
jp
int3
ret
pop
xor
mov
jle
ljmp
mov
out
sbb
sub
push
rcl
adc
repnz
insb
xor
bound
and
xor
cmp
loop
sub
pop
mov
sbb
dec
adc
sub
xchg
aam
cli
test
in
iret
loop
imul
dec
cmpsb
push
scas
loope
test
xor
xchg
sub
cmp
add
sti
int
xor
hlt
pop
jg
fdivp
jle
sbb
fucomip
decb
pop
jl
rcll
movsl
mov
ret
in
mov
lcall
and
arpl
out
mov
mov
js
fists
test
aam
in
pop
and
adc
inc
negl
insb
lds
mov
adc
pop
ds
xchg
and
gs
mov
mov
xchg
pop
bound
xchg
jo
mov
adc
push
mov
call
loopne
xlat
cltd
add
pop
lods
mov
push
insl
rolb
into
int
add
or
jne
cld
xchg
jae
orb
jmp
sub
dec
incl
xor
pushf
addl
sbb
mov
push
dec
pop
add
cmp
cmp
pop
fadds
push
ss
loopne
test
cld
add
push
sbb
jg
cwtl
in
dec
fdivp
shrb
sub
push
add
xchg
hlt
es
mov
sar
xchg
xchg
jmp
and
jle
sahf
inc
mov
sbb
push
xchg
push
in
frstor
enter
int3
aam
inc
pop
pop
push
adc
es
lret
adc
push
or
xor
and
push
lods
jp
test
xor
add
dec
push
xor
aas
cmp
lcall
cmpsb
adc
insb
add
jno
fsubr
and
pop
lock
or
add
xchg
add
incb
cli
ljmp
jmp
cld
mov
sarb
inc
inc
mov
sub
ljmp
std
or
inc
pop
enter
push
pop
insb
xchg
and
jp
ret
adc
or
xor
add
or
imul
xchg
jl
mov
cmp
decl
jns
mov
stc
jo
aad
pop
clc
rcrb
or
push
popa
xor
ret
idivb
lock
xor
faddl
xchg
test
and
and
push
dec
call
mov
xor
lcall
mov
test
les
jbe
jle
sbb
cmp
sub
mov
mov
cmp
in
fistpl
jg
xlat
inc
xchg
inc
mov
les
mov
push
clc
xor
aaa
mov
es
icebp
and
repz
cld
add
push
xchg
and
popf
mov
mov
xchg
xor
int
mov
sarb
movsl
jo
push
jns
loopne
xlat
icebp
pushl
testb
adc
test
mov
dec
les
mov
ljmp
adc
ds
mov
mov
jle
jle
dec
ds
fidivrl
xchg
xchg
sbb
inc
test
and
xor
mov
outsl
mov
cwtl
jp
xchg
addb
push
aas
jg
jg
outsl
push
test
pusha
sub
pushf
xlat
test
pop
cmpsl
mov
movsb
jp
lods
cs
inc
std
or
sub
push
push
popa
nop
dec
outsl
clc
adc
das
sub
test
cli
lcall
mov
add
icebp
pop
jo
or
add
sbb
loope
adc
mov
adc
enter
stos
dec
lods
xorl
xor
mov
cmp
cld
mov
add
adc
or
mov
fsubs
jle
inc
xchg
fs
popf
and
int3
js
push
fcomps
inc
xchg
push
xor
push
pop
lcall
mov
clc
ljmp
dec
popf
int
mov
push
xchg
mov
jle
nop
jo
xor
mov
hlt
jno
negb
lds
jge
das
inc
stos
pop
sub
and
scas
add
les
aam
dec
stos
inc
and
into
jle
adc
sahf
repz
or
adc
cmpl
push
rcll
outsl
and
arpl
lods
pop
shlb
cmp
mov
test
adc
adc
scas
pop
mov
subb
test
and
mov
mov
xor
scas
out
jno
jnp
out
and
sub
xchg
cs
nop
xchg
adc
arpl
ja
mov
shlb
cwtl
cli
bound
inc
testb
shrb
jo
jle
push
dec
ret
in
ss
push
je
jbe
jns
push
sbb
in
cmp
scas
cli
inc
add
mov
and
mov
xor
test
sbb
aam
dec
or
lcall
lds
inc
jl
mov
push
mov
les
adc
movsb
inc
jge
add
mov
int3
addr16
jp
sbb
push
lds
push
dec
cld
sub
rcll
lcall
mov
ljmp
jg
mov
jl
mov
xlat
mov
inc
fs
push
sub
scas
push
mov
loop
mov
pop
aaa
outsb
clc
pushl
out
cmp
stos
mov
sub
movl
sbb
ret
push
in
test
dec
xor
xchg
mov
mov
je
out
push
xlat
movsb
jecxz
cld
push
movsl
gs
xorb
jmp
decb
cmpsl
jno
ljmp
sbb
call
in
jmp
sub
mov
xchg
fwait
sub
rclb
xchg
clc
out
cwtl
lods
sar
lret
push
test
add
in
push
xchg
enter
repz
or
pushf
inc
push
cmpsl
add
sbb
cmp
dec
adc
fmull
popf
mov
add
push
mov
insb
push
inc
addb
es
pop
push
sahf
pop
in
add
pop
adc
loopne
loop
mov
cli
xlat
into
and
and
data16
dec
or
nop
cmp
sub
outsl
add
or
or
pop
jle
cmp
xor
push
test
pop
pop
nop
repz
negb
mov
mov
add
popa
jno
lldt
stos
jp
xchg
stos
lahf
mov
dec
out
es
push
lret
aas
add
mov
cli
adc
fildl
add
push
xchg
mov
add
pushl
in
into
jp
testb
subb
inc
adc
js
push
pop
mov
stc
sub
push
js
dec
or
aas
cwtl
inc
or
and
dec
imulb
push
cmp
sahf
rol
adc
pop
int
push
and
dec
int3
adc
jp
push
pop
add
push
std
mov
cmp
js
jo
push
push
dec
icebp
popa
out
aam
lcall
ret
hlt
outsl
mov
pop
rcr
push
or
add
or
subb
inc
nop
sbb
orl
ret
data16
ds
inc
pop
call
loop
lcall
sbb
push
out
dec
insb
pop
cmp
mov
mov
cwtl
mov
xor
xor
out
and
daa
lock
leave
clc
mov
add
mov
pop
add
adc
cld
add
push
cli
fwait
ret
jo
subb
sub
test
pusha
adc
and
push
nop
ret
mov
in
jg
sarb
mov
in
pop
mov
les
cmpsb
clc
loope
sub
or
out
and
stos
dec
imul
std
pop
sub
mov
adc
add
gs
cmp
mov
mov
rcrb
dec
cld
scas
inc
cli
cmp
pusha
aad
cmpsl
and
adcb
lods
fidivrl
faddl
xchg
out
lret
insl
lcall
sbbb
cmc
mov
popa
add
mov
mov
pop
add
inc
dec
inc
addl
shll
test
sbb
add
cmp
sbb
idivb
jmp
xor
and
dec
fidivs
or
ljmp
or
push
insl
lods
outsl
pop
cmpb
add
stc
and
insl
add
shlb
jge
lea
push
cli
inc
mov
std
and
js
push
ljmp
push
adcl
pop
lods
jbe
sbb
adc
adc
cmc
jg
dec
fwait
aas
inc
or
sbb
push
jb
test
insb
jle
mov
mov
out
push
sbb
mov
push
nop
adc
pop
dec
sbb
loopne
cmp
adc
add
cwtl
les
mov
push
outsl
pop
testl
out
add
pop
dec
loope
jo,pn
test
sbb
cs
or
dec
clc
sbb
popa
dec
mov
adc
mov
dec
mov
push
push
out
adc
cmpsb
pop
or
mov
xchg
inc
rcl
mov
loopne
out
adc
test
mov
jp
fidivrs
inc
jb
sbb
lret
test
mov
push
pushf
or
sub
decl
int3
or
loop
int3
or
inc
or
jl
mov
xor
fcom
pop
push
sub
mov
sub
loop
cltd
into
push
es
or
pop
lret
pop
test
sbb
xor
sub
sub
mov
sbb
stos
data16
push
sub
add
jbe
cmp
lods
cmp
xor
mov
dec
in
ds
fdivr
cmc
mov
lea
fldenv
adc
inc
je
and
mov
jle
aas
add
cld
rclb
imul
push
inc
sbb
out
jg
insb
pushf
test
pushf
or
aam
ss
mov
scas
mov
mov
hlt
xor
xlat
dec
push
ja
movsb
inc
mov
andl
mov
aad
scas
aad
xor
mov
lock
pmuludq
xor
cmp
cs
aas
addr16
add
cltd
and
out
or
cmp
add
fsubr
dec
das
adc
iret
subb
adc
pop
xchg
or
and
outsl
into
es
cmc
js
pop
ljmp
lock
decl
dec
jne
inc
pusha
je
xor
es
adc
xchg
adc
adc
xchg
and
bound
notb
push
mov
cs
add
mov
inc
in
cwtl
mov
fwait
push
pushl
fildll
loopne
jae
push
jns
xor
dec
aam
movsl
sub
jo
pop
mov
and
enter
xchg
lods
xor
mov
fcoms
inc
repz
stos
lds
stos
xorl
cmpl
inc
inc
imul
xchg
nop
adc
push
mov
ret
loop
cmpb
ja
cli
add
mov
pop
inc
in
push
mov
sbb
jae
push
mov
fdivl
into
shll
out
and
and
and
mov
dec
ss
sbb
ljmp
pop
outsl
mov
inc
and
in
xchg
mov
loopne
insl
dec
in
mov
jne
mov
or
fsubs
orb
or
shll
sub
adc
add
or
bound
cmc
idivb
push
push
dec
dec
jo
fucomip
js
cli
or
pop
sub
or
add
clc
filds
jle
sbb
or
es
js
leave
dec
xchg
mov
fucomp
clc
and
test
movsb
dec
inc
cmp
adc
cmp
xchg
out
imull
enter
ja
xor
jg
push
or
out
add
movsl
mov
rcr
push
fsubs
push
andb
ficoml
dec
nop
sub
and
gs
cmp
mov
mov
pop
je
fsubrs
xchg
js
xlat
lret
cmc
sbb
lock
jle
mov
or
loopne
mov
inc
fdivl
pusha
sbbl
cltd
push
or
lods
or
data16
pop
sbb
cli
lock
mov
add
pop
lock
in
call
punpcklbw
cmp
mov
fucomip
dec
addb
add
pop
cmp
or
into
ret
and
and
xchg
jbe
xchg
mov
adc
fucom
push
mov
inc
push
xor
aad
repz
aad
dec
rolb
push
cmp
cmpb
insl
out
push
xor
rcr
fs
ss
pop
loopne
rcr
imul
pop
xchg
into
mov
add
orb
ljmp
push
push
fs
mov
xchg
call
or
jmp
add
cmpsb
scas
les
and
or
push
add
call
mov
mov
lahf
mov
push
or
add
xlat
inc
pop
jl
sbb
scas
fisubrl
lcall
jg
shlb
push
ja
arpl
arpl
or
popa
adc
lods
int
mov
sub
rorb
cli
subb
mov
sub
pop
mov
or
pop
push
fsubr
in
push
mov
test
jae
jmp
jnp
xchg
xor
xor
push
sbb
sti
scas
js
sub
add
add
xchg
test
sbb
lahf
sub
cmp
scas
mov
ljmp
in
push
cwtl
add
jo
movsb
js
xor
orl
dec
cmp
pop
push
dec
notl
cmp
jo
push
inc
cmp
popf
jl
adc
ror
rorb
mov
arpl
jl
xor
imul
movsb
idiv
pop
test
push
or
jne
lret
ja
call
insl
push
mov
dec
dec
dec
js
cli
sub
clc
ja
xlat
mov
mov
adc
jl
sahf
stos
sub
pop
push
xlat
je
jb
add
pushf
push
cltd
jb
pop
mov
les
mov
scas
lsl
xor
xchg
xor
rcrb
xor
clc
mov
mov
fwait
push
rolb
xchg
mov
fiaddl
xor
out
outsb
inc
hlt
adc
gs
rcrb
clc
outsb
xor
mov
data16
mov
mov
pop
adc
fsubrl
fcomps
lret
mov
jg
add
sbb
out
repnz
sbbl
daa
les
xor
decb
mov
call
mov
cmpsl
scas
int
cs
xchg
dec
subb
mov
lea
push
fcoms
mov
popf
dec
ss
pop
icebp
test
or
fwait
mov
popa
or
adc
sub
dec
dec
push
leave
cwtl
sub
call
push
or
mov
icebp
pop
mov
nop
cmp
shrb
adc
cld
imul
gs
dec
les
mov
jmp
xor
add
jo
push
mov
nop
mov
xor
mov
int
test
out
addr16
out
and
jmp
jbe
leave
ret
xchg
or
insl
xchg
pop
ds
mov
jp
orb
outsb
and
pop
cltd
push
mov
je
inc
movsl
jo
mov
jle
adc
push
stos
mov
ds
sub
xor
sbb
call
sahf
xor
lahf
je
ret
push
sub
test
xchg
sub
cmp
mov
adc
xchg
adc
xchg
add
in
push
add
sub
cli
pop
inc
mov
push
insb
fdivs
adc
add
pop
cltd
call
mull
inc
ljmp
sbb
imul
adc
jmp
or
test
and
test
cmc
mov
jns
jp
imul
lock
ja
test
in
test
addl
call
mov
fsub
mov
orb
add
and
lcall
push
cmp
shl
pop
cmove
jb
sarb
dec
iret
cmp
mov
fldenv
inc
rep
ss
mov
loop
fs
or
rol
push
and
in
xchg
test
add
jb
bound
ret
push
rol
stos
cmpsb
dec
dec
loop
fldt
jne
out
ljmp
sbb
sub
ljmp
bound
cld
outsl
mov
push
clc
push
aaa
lds
call
sbb
adc
mov
lods
jb
mov
js
das
enter
mov
rclb
cmp
mov
pop
mov
test
fildl
sti
inc
movsl
inc
rcll
mov
icebp
adc
sub
cs
fwait
push
push
xchg
cmp
inc
int3
pop
jle
mov
or
stos
in
aas
mov
fwait
push
je
loopne
push
pusha
dec
repz
jbe
or
ds
inc
loop
mov
daa
push
inc
imul
sub
out
adcl
sbb
or
jmp
cmc
in
inc
fbld
sub
icebp
mov
and
loop
push
dec
addr16
or
sbb
push
pop
dec
adc
cmp
dec
sahf
test
sub
cmp
mov
test
fisttpl
call
les
mov
leave
add
std
sub
adc
fstpt
xor
and
inc
dec
inc
insl
inc
shl
xchg
push
fsubs
and
into
ja
sbb
cli
insb
clc
xor
and
aam
stos
loopne
insb
sbb
push
int3
adc
push
hlt
mulb
mov
xchg
inc
repnz
ja
je
or
add
fcomip
lcall
mov
or
mov
sbb
or
shll
mov
inc
jp
shrb
jl
or
inc
mov
xchg
sbb
or
sub
pushf
pop
and
cmp
xor
sbb
pop
iret
push
mov
arpl
jg
addr16
stos
call
int3
rol
mov
je
add
sbb
stos
pusha
dec
loopne
in
mov
decl
movsb
test
push
sub
xchg
adc
loop
xor
or
in
inc
pop
std
enter
push
inc
test
mov
clc
pop
notb
xchg
inc
cmp
icebp
in
pop
cwtl
add
stos
cmpsb
pop
or
sub
pop
add
cld
cmp
cs
ss
jb
popa
or
dec
lods
dec
push
mov
pop
mov
pop
sbb
ror
fdivr
push
jg
mov
popa
xchg
jl
fcoms
pusha
mov
dec
xor
icebp
call
adc
xchg
jb
adc
push
les
mov
loope
rolb
fsubrp
iret
and
aad
out
outsl
add
test
insb
pusha
mov
mov
or
lret
mov
std
hlt
aaa
adc
push
pop
sub
pop
cmp
adc
cwtl
add
stos
xor
mov
cli
xor
inc
inc
jnp
scas
call
inc
dec
push
lcall
push
push
shl
movsb
jo
jmp
dec
jb
sbb
btr
mov
daa
add
int
cmp
hlt
loope
insb
shlb
sbb
dec
sbb
in
aas
decb
test
bound
stos
xchg
and
xchg
rcll
dec
decl
loope
out
scas
loopne
xchg
add
push
arpl
sbb
divl
mov
xor
cmp
int3
jno
iret
mov
test
sti
and
imul
sarb
rolb
loop
into
inc
inc
addr16
pop
sbb
push
mov
dec
loop
outsl
xor
outsl
sub
xor
ja
adc
stos
sub
push
jae,pt
in
cmpb
loope
pop
jmp
clc
adc
incl
imul
xchg
mov
cmc
rolb
das
or
mov
scas
push
mov
push
push
adc
shr
add
fcomp
clc
cmp
pop
adc
scas
mov
test
mov
lods
jno
into
and
sbb
push
shrb
fwait
aam
ds
mov
test
push
cmpsb
or
mov
cwtl
fistpll
scas
mov
mov
push
or
bound
add
aad
stos
rcll
cltd
cli
aad
dec
arpl
jnp
xchg
int
inc
adc
clc
adc
mov
sbb
add
call
mov
cmpsl
ja
fwait
cmp
dec
mov
je
jecxz
sub
dec
arpl
loope
pop
dec
ljmp
xor
lret
lret
mull
mov
mov
insl
lods
daa
lea
mov
sub
or
sub
std
or
int3
mov
repnz
outsl
xchg
adc
or
ja
inc
ja
xchg
popa
mov
pop
test
lret
adc
outsb
sbb
push
out
jg
dec
mov
cmp
cli
cli
ljmp
and
xchg
cmp
fimuls
cmp
popf
mov
testb
cmp
xchg
ss
sub
outsb
stos
aas
add
fdivl
pop
push
lock
push
imul
mov
scas
add
push
aam
xchg
sahf
dec
push
xchg
push
lods
cmp
sub
lret
ss
xor
stos
das
pop
sub
filds
fsin
rcl
pop
xor
cld
dec
clc
push
sub
ss
sub
ljmp
sti
xlat
adc
jae
or
aad
xlat
pop
pop
cmp
mov
push
arpl
cmp
xor
lea
lods
sbb
adc
imull
push
lahf
pop
fdivl
ljmp
dec
cs
pusha
lock
jo
sbb
push
out
push
add
mov
sbb
mov
and
rolb
pop
dec
rorb
test
sbb
jg
arpl
dec
pop
subl
icebp
sbbb
and
jb
mov
jb
fadd
jecxz
lds
jecxz
out
add
mov
stc
addb
test
psubd
fmulp
xchg
cmp
xchg
and
push
cmpsb
loopne
shll
pop
fisttpl
add
cmp
push
data16
jbe
push
ret
and
ror
add
push
xchg
push
shrb
mov
mov
pop
aad
lret
clc
scas
sbb
cltd
add
xor
jmp
sbb
mov
pop
cmp
movsb
jnp
stos
sub
imul
scas
xchg
test
imul
mov
call
dec
dec
pusha
aad
jl
or
and
push
daa
sbb
xor
push
rol
bound
lcall
shll
xor
cwtl
les
adc
cmpb
aam
push
or
js
sbbl
sbb
cmp
decl
mov
mov
clc
push
mov
lahf
hlt
fldl
clc
add
cltd
add
jmp
sbb
pop
std
or
loop
cwtl
push
mov
and
dec
xchg
pop
movsl
andb
ss
cmp
sub
sbbb
xchg
or
int3
loop
inc
je
es
js
push
and
xor
into
xchg
fisttpl
inc
sub
jg
xchg
loop
lcall
or
inc
xlat
push
outsw
inc
adc
mov
sbb
push
and
fldl
push
push
out
jo
jbe
dec
les
jle
jg
xor
adc
jmp
idiv
sub
or
lcall
rol
imul
cld
jmp
push
stos
repz
js
add
xor
loop
les
sahf
or
mov
decl
xchg
add
pop
out
ret
cmpsb
and
sbb
jo
mov
fcomi
ss
add
fisttps
test
jo
lods
push
pop
loopne
out
pop
std
cmp
jp
rolb
test
mov
mov
or
dec
adc
jo
mov
or
jp
jg
push
or
ficoms
popf
stos
clc
add
xor
fcoml
adc
jnp
and
mov
imul
stos
hlt
jmp
jmp
fwait
sub
movsb
popf
repnz
cli
scas
xor
loopne
push
jbe
fdivr
decl
inc
test
mov
sbb
adc
rorb
movsl
pop
and
jl
inc
push
sbb
dec
data16
fldenv
mov
sarb
or
ds
orl
sub
adc
test
hlt
or
js
test
ds
cmp
inc
inc
stc
sahf
push
sbb
nop
sbb
add
insl
mov
lods
pop
fmull
cmp
mov
adc
sub
jle
test
pop
jge
jle
pop
mov
add
mov
adc
push
pop
out
ret
fcomip
jno
movsl
jo
cld
add
mov
out
or
out
dec
lret
outsb
bound
jb
in
neg
and
sub
aaa
test
mov
jg
and
ficompl
lcall
add
and
loope
nop
inc
lock
inc
mov
adc
dec
push
shrl
insb
call
push
cli
adc
mov
pop
push
or
and
pop
pop
add
add
add
dec
pop
mov
sbb
idivb
ja
jg
nop
inc
insl
loope
ret
loop
sub
cmp
mov
add
xor
lret
js
scas
mov
int3
inc
cmc
mov
fcmovb
push
shll
sbb
outsb
push
mov
loope
lcall
add
insb
mov
inc
or
pop
or
add
insl
out
subl
rorb
mov
test
fidivrs
jp
int
mov
loopne
cmp
rcrl
pop
adc
in
into
loopne
mov
xor
add
sbb
push
aaa
inc
pushf
sbb
ds
mov
sub
stos
or
in
fmull
sub
fdivl
xchg
shll
loopne
sarl
scas
les
les
adc
or
je
rorl
dec
imul
add
dec
sbb
sub
fs
adc
mov
pop
js
jae
mov
pop
and
fdivr
imul
fs
dec
ret
sar
mov
leave
in
and
pushl
cmp
adc
cmp
lret
or
scas
xchg
cli
aam
push
aad
add
cwtl
imul
lea
daa
or
fs
push
push
mov
dec
lock
push
or
mov
int3
push
js
push
xchg
add
fiaddl
push
rol
dec
mov
xchg
inc
or
out
lock
push
jo
and
fildll
daa
push
lcall
aas
dec
call
mov
mov
xchg
sbb
mov
pop
decl
xor
dec
push
mov
outsl
ret
test
xchg
mov
scas
dec
cld
cmc
mov
sahf
stc
clc
xor
mov
xchg
imul
mov
mov
test
rol
adc
add
roll
and
cmp
iret
pop
divb
call
stos
inc
jae
ret
lcall
sbb
add
mov
movb
js
fsts
or
and
cmp
ljmp
mov
idivl
and
cld
fdivl
flds
mov
mov
pop
cwtl
repz
fisubl
hlt
sbb
mov
lea
push
fcomi
sahf
cmp
push
ja
stc
adc
rolb
rolb
mov
adc
cmp
loopne
cmpsl
mov
cmp
mov
movsb
or
and
sub
mov
jb,pt
sbb
movsb
dec
lahf
lds
pop
cmpsb
popl
mov
and
rol
aaa
push
js
into
xor
and
decl
push
in
push
push
push
xchg
xchg
push
incl
je
popa
xchg
decl
mov
icebp
and
jb
jne
xchg
mov
loop
mov
mov
push
loopne
lds
xchg
addr16
cmp
xor
add
rolb
and
mov
cmpsb
sub
inc
mulb
mov
aad
das
outsb
stc
and
add
xor
jb
adc
jb
jp
popa
cmc
mov
imul
xor
call
or
pop
cld
sbb
fidivl
mov
cmp
loopne
mov
push
sub
packssdw
sbb
pop
aaa
int
inc
cs
sub
dec
testb
sbb
jl
dec
fbstp
sub
add
lods
andb
hlt
imul
inc
imul
push
xchg
or
lods
jo
pushf
jae
fsubrs
push
and
aaa
enter
xchg
push
dec
call
shrb
jmp
negb
pop
sbb
js
or
scas
sub
shrl
sbbb
cmp
jg
cmp
insl
jne
inc
push
dec
mov
xor
mov
cmp
mov
ret
sub
and
sbbb
hlt
or
cmp
push
and
repnz
mov
adc
cmp
push
mov
nop
test
lea
lock
xor
mov
or
add
mov
sbb
xchg
mov
test
or
adc
mov
sarl
sub
jg
adcb
or
lret
out
mov
pushw
adc
clc
and
lret
test
cs
add
sahf
ljmp
push
test
add
popf
rcrb
adc
sbb
or
jecxz
cld
xor
mov
sub
rcrl
lock
aam
incl
dec
or
adc
lahf
xchg
xlat
fcmovnu
stos
lea
std
push
mov
inc
push
push
lret
sbb
lcall
adc
inc
repnz
inc
fiaddl
fbstp
imul
aas
sqrtps
mov
notl
popa
sub
add
inc
scas
jo
lea
sbb
test
mov
incl
shl
jo
daa
xor
lds
push
sbb
stos
shll
test
outsb
adc
mov
pop
push
stos
mov
mov
pop
inc
push
mov
mov
mov
pop
xchg
movsb
lret
push
inc
add
sbbb
add
movsb
dec
jp
or
das
jp
into
xor
int
test
mov
add
lods
sbb
in
push
test
push
iret
notb
ljmp
xchg
aas
inc
push
ret
les
pop
xor
pop
call
and
xchg
xchg
cmc
das
jp
dec
pushw
xorb
cmpsb
insb
ljmp
sbb
outsl
mov
repnz
lods
jmp
inc
insb
aad
pop
adc
je
xchg
jg
sub
cmp
xchg
xor
jle
rclb
fwait
add
or
sub
jp
lret
adc
mov
push
and
adc
xchg
mov
ss
hlt
into
fucomp
ret
xchg
xchg
inc
jae
or
sahf
gs
inc
dec
push
adc
and
icebp
aad
lods
mov
push
outsb
out
adc
adc
pop
loopne
leave
add
ljmp
add
adc
das
loope
out
cs
mov
sar
xchg
dec
add
push
push
pop
xchg
cmpsb
push
arpl
test
xor
pop
rcrb
jecxz
scas
movsb
ret
int3
hlt
jecxz
sbb
std
or
mov
cld
ficoml
adc
push
outsb
aaa
jns
icebp
mov
xor
mov
outsb
sbb
sar
mov
fwait
mov
sub
mov
stc
sub
das
xchg
imul
xchg
inc
or
and
in
in
inc
jle
dec
pop
cwtl
pop
adc
cmp
pop
sbb
cwtl
inc
and
sub
aam
loop
xchg
stc
iret
sbb
daa
jg
dec
in
cmpl
inc
clc
rcll
cld
and
jo
cli
je
call
sbb
insl
mov
ret
jp
scas
cli
outsl
adc
bound
sub
mov
clc
mov
add
jecxz
ljmp
push
cmp
inc
sub
repnz
inc
stos
push
aad
decb
sahf
mov
add
in
cmpsb
push
aam
mov
push
jno
pop
hlt
mov
popa
sub
sbb
cwtl
test
xchg
inc
cmp
pop
add
ljmp
scas
jle
shll
inc
cmpsb
mov
stos
mov
mov
cli
fwait
inc
es
out
mov
dec
shl
and
ret
inc
jge
mov
cld
inc
mov
push
jp
jg
cmp
adc
jns
jl
xchg
loopne
mov
mov
xchg
icebp
adc
ss
xlat
add
add
push
inc
popf
es
pop
sub
int3
jmp
mov
pusha
sub
jg
add
int3
push
out
or
cmp
mov
mov
inc
mov
push
push
call
js
dec
decl
dec
popw
xchg
sub
sub
cmp
adc
adcb
in
dec
repnz
pop
decl
scas
or
lds
jo
test
adc
fwait
push
repnz
mov
leave
push
and
jl
movl
xor
jmp
loope
jge
addr16
or
jae
sbb
clc
hlt
pop
es
iret
cltd
int3
loop
int
nop
out
mov
pop
sbb
pop
aas
sarl
pop
cmp
out
outsl
mov
jne
xor
test
or
or
adc
sub
mov
lcall
push
jge
jmp
stos
push
das
movsl
sub
insb
xchg
mov
incl
adc
loopne
add
je
pop
add
or
xchg
int3
ss
xchg
sub
push
btr
add
sub
push
sbbl
or
mov
push
in
sbb
inc
jl
fdivs
cmp
jae
cmpb
push
jp
sbb
ljmp
fistps
pop
dec
outsl
fiaddl
sbb
pop
push
pop
mov
call
cmc
aaa
pushf
lret
repz
je
andb
pop
xchg
mov
roll
loopne
ret
cs
xchg
mov
psubd
mov
filds
push
mov
mov
lcall
push
lret
and
xchg
stos
aam
add
push
inc
add
push
mov
pop
bound
sbb
sbb
jmp
stos
mov
cmc
push
ret
inc
sub
inc
data16
dec
dec
cmpsb
fistpll
sahf
cmp
setno
jb
mov
add
test
inc
push
and
inc
icebp
sbb
std
addr16
xor
scas
nop
mov
stos
adc
sbb
mov
jbe
xchg
push
adc
mov
push
push
dec
insb
mov
xchg
les
jg
pusha
clc
loope
ljmp
js
pushl
fsub
sbb
adc
sub
jp
fistl
insl
fstpt
sarl
dec
lea
subl
icebp
adc
add
adc
cmp
inc
push
rcrl
pusha
jmp
pop
adc
lret
aam
inc
insb
inc
pop
jo
sub
pop
out
clc
test
js
add
sub
sarb
test
mov
fsqrt
add
das
clc
sahf
add
lahf
xor
mov
inc
shll
adc
test
inc
into
cmp
insl
outsl
adc
movsl
int3
movsl
cmpsl
mov
xchg
outsb
adc
jle
in
outsl
dec
lahf
and
and
pop
push
or
mov
or
inc
sar
jl
mov
push
call
js
add
insb
mov
js
mov
mov
scas
mov
jo
cli
add
or
sbb
and
andnps
sbb
test
xor
test
lods
add
cmp
dec
in
pusha
ficomps
rclb
push
cld
push
shrb
pusha
lret
xchg
xchg
fcom
into
xor
push
xor
ret
jb
cli
or
and
xchg
enter
bound
fimull
dec
mov
push
in
dec
mov
mulb
lcall
fildll
jle
sbb
jbe
xor
cmp
pop
adc
add
sbb
inc
es
xchg
xor
push
adc
mov
fdivs
cmc
inc
push
test
mov
ja
xor
xor
pop
lods
cltd
mov
and
lcall
inc
loopne
push
cmpsb
cmpsl
scas
ds
rcll
ret
jl
cli
mov
push
or
iret
pop
mov
insb
testl
cmpsl
mov
repz
xchg
hlt
pop
daa
inc
or
jo
movsb
or
sub
inc
das
clc
fwait
loope
xor
decl
mov
inc
and
sbb
cld
in
outsl
inc
jmp
movsb
mov
addr16
jmp
sub
icebp
dec
push
jne
mov
outsl
add
pop
add
jle
add
or
and
and
mov
cli
and
stos
and
mov
add
or
push
cmpsb
cli
icebp
add
enter
mov
xchg
ss
repnz
rcrb
incb
icebp
dec
clc
cmp
cmc
push
shlb
inc
rcr
push
sbb
out
sbb
rolb
test
add
sarb
dec
lods
xchg
adc
mov
pop
pop
popf
sub
cmp
and
hlt
dec
in
js
cld
lock
mov
addr16
frstor
or
push
lret
cmpsl
mov
push
mov
ljmp
std
mov
or
push
mov
pushl
repnz
popa
add
and
loop
xchg
mov
mov
daa
push
rcr
lods
jmp
js
xchg
sbb
and
xchg
movsl
ja
push
rcrb
pop
outsl
add
pop
outsb
jo
push
cmp
adc
cmp
or
or
push
fsubl
mov
fstp
jno
add
and
lahf
mov
sub
mov
repnz
cmpsl
or
cli
stos
sbb
bound
bound
pop
sbb
arpl
lds
cld
add
or
insb
sub
sbb
xor
xor
fwait
mov
add
pop
aas
je
repnz
mov
cmc
cmp
mov
push
testb
mov
jl
add
and
fwait
add
leave
cmp
jge
xchg
or
mov
sub
pop
sbb
stos
insl
and
mov
adc
push
or
int
loop
xor
seta
and
xchg
sub
sti
in
mov
inc
cmpsb
int3
add
popf
jle
mov
insb
loope
and
daa
mov
bound
push
je
jg
or
and
bound
mov
adcb
cld
rcrb
inc
jg
add
mov
push
pop
add
jg
rcrb
mov
and
inc
movsl
lds
lock
add
push
add
sub
add
xlat
in
xor
adc
mov
insb
cmp
mov
inc
sub
mov
inc
adc
push
test
xlat
mov
aam
enter
adc
cmp
das
es
mov
jecxz
outsl
outsl
cli
call
push
in
adc
std
jae
cmp
mov
in
mov
jno
sarb
rcl
push
cmp
mov
stos
mov
outsl
cmpsb
add
fnstcw
pop
sub
shll
pop
popf
test
outsl
adc
mov
mov
adc
and
jecxz
je
dec
mov
pushf
pop
push
lds
cmp
sub
mov
or
xchg
shrw
mov
lds
rorl
pop
js
jge
lahf
mov
loopne
mov
inc
leave
xor
test
jp
out
nop
ds
sub
xchg
push
mov
rcl
jp
push
jne
js
es
sub
sbb
rclb
aas
xor
jl
pop
add
or
cmc
adc
add
adc
loop
xor
add
pop
adc
in
inc
mov
mov
sbb
je
fcompl
outsw
incl
mov
xor
or
ja
and
cli
inc
clc
fs
insb
ror
pop
mov
lock
aaa
cmp
test
and
inc
inc
mov
mov
inc
dec
mov
data16
or
es
lds
leave
inc
pop
cmpb
cs
mov
dec
sub
fcomip
daa
rcrl
mov
and
sbb
subb
inc
mov
pop
sar
pop
enter
or
pop
cmp
in
jno
stos
mov
pop
dec
xor
sbb
push
imul
dec
outsl
jmp
sub
lea
outsb
outsl
jle
jg
cld
icebp
add
lret
mov
int
or
aam
add
clc
sbb
mov
cltd
mov
popa
adc
xor
lds
or
les
push
inc
loop
add
les
mov
cmpsb
or
cmpsb
mov
les
test
sahf
and
es
je
adc
clc
xchg
sub
out
sbb
and
sbb
das
adc
mov
add
and
cwtl
push
lods
mov
add
push
loopne
xchg
push
movsb
into
repnz
cltd
mov
cmp
sub
push
pushl
insb
mov
mov
ret
add
sarl
pop
bound
sbb
cmp
inc
cmp
je
add
ret
fwait
add
jl
sbbl
pop
push
into
lcall
sbb
clts
aam
dec
fdivs
mov
pop
inc
dec
sub
ret
pop
lret
sbb
sbb
sbb
jb
or
ljmp
adc
rclb
repz
bnd
ljmp
jo
add
push
push
cli
es
adc
test
not
mov
pushf
filds
fistl
inc
ja
add
mov
add
outsb
shll
out
shr
es
test
sbbb
scas
mov
sti
ljmp
adc
inc
leave
lahf
mov
test
inc
lcall
and
mulb
je
shr
add
ss
inc
cld
dec
jnp
movsl
lea
es
mov
xchg
xchg
fwait
mov
xchg
inc
sbb
in
sub
dec
jp
push
popf
sub
mov
xchg
loop
cwtl
and
and
xchg
jno
sub
bound
jmp
add
adc
cmpsb
push
push
or
bound
pop
insb
inc
mov
lcall
fimull
adc
adc
cmp
dec
and
mov
ret
push
xor
xchg
dec
insb
and
subb
jmp
mov
cmp
jge
hlt
and
cmpsb
movsb
lcall
test
ds
cmp
push
mov
mov
fadd
int3
lods
and
inc
into
lret
decl
test
int3
sbb
dec
rol
adc
test
sbb
addr16
lar
rclb
jl
jle
xchg
lcall
or
call
cld
aas
in
mov
mov
adc
mov
filds
std
inc
inc
fs
sbbb
jecxz
arpl
fcomip
lcall
mov
imul
mov
inc
out
mov
inc
or
mov
push
fsub
cli
mov
adc
das
xchg
cs
add
pop
cli
sbb
jle
inc
test
xchg
loopne
scas
sbb
lcall
add
into
loop
fmuls
ret
inc
inc
xor
sub
jbe
test
lret
sub
and
pop
ret
xlat
pop
rcll
fcoml
cmp
out
mov
mov
scas
push
jmp
mov
gs
ljmp
xor
cmpsl
fiaddl
dec
cmp
push
dec
mov
insb
addb
aam
ficompl
test
push
jb,pt
push
mov
mov
mov
cld
mov
arpl
xchg
xchg
inc
adc
inc
nop
or
clc
and
inc
cli
ja
xor
xchg
popa
shrb
jg
sub
outsb
cmpsb
fstp
data16
sub
cmp
dec
pop
hlt
jmp
sbb
adc
cmpsb
fisubrs
std
xor
insl
inc
ret
push
lea
lds
inc
fcomip
jnp
test
mov
xchg
cwtl
dec
fisttps
cld
push
add
test
cli
cmp
pop
or
xchg
mov
push
cmpsb
jno
inc
int3
sub
fucomi
or
jp
pop
push
fcomi
pop
or
jae
jg
mov
mov
pop
jle
fimuls
popf
movsl
hlt
inc
xor
popa
xlat
xchg
nop
dec
mov
sbb
mov
or
xor
popf
and
xor
in
cmp
lret
popf
loopne
fwait
jg
add
push
in
fistps
sub
xchg
lods
js
cmp
sbb
sbb
pushf
into
jb
jl
fdivrp
fsts
js
push
je
stc
mov
add
xchg
xchg
cld
dec
scas
pop
cmp
adc
rorb
outsl
sub
jle
dec
mov
loope
lods
js
lock
sbb
mov
jmp
jno
sbb
inc
adc
jg
in
scas
shrb
int3
or
movsb
xchg
popa
call
lcall
pop
test
or
je
sbb
push
cwtl
shlb
adc
addb
xchg
or
cwtl
test
jo
cld
out
ds
xor
daa
test
mov
sbbl
shll
mov
push
jno
test
incl
mov
xor
pusha
std
inc
push
loopne
inc
xor
in
inc
test
and
outsl
xchg
add
sbb
faddl
push
scas
jb
xchg
sub
out
mov
xchg
fs
stos
sahf
jmp
out
push
mov
and
mov
or
fsubrs
sbb
add
addb
dec
or
jle
pop
dec
pop
out
leave
push
jbe
cld
lret
inc
repz
mov
ljmp
lock
pop
stos
add
or
jo
fsubl
xor
push
lock
out
dec
call
nop
rolb
cmpsl
test
mov
hlt
ljmp
mov
mov
xchg
or
mov
mov
adc
xor
jg
andb
xchg
cmp
clc
xchg
das
inc
mov
inc
dec
das
fldenv
sti
jp
mov
ds
loop
xor
and
sub
mov
pop
pop
inc
clc
lret
test
jnp
test
xor
mov
or
cli
cmpl
out
loopne
adc
inc
xlat
add
fwait
loope
or
dec
push
xchg
pop
pop
je
pop
fcmovbe
cmp
sbb
adc
mov
shll
psadbw
inc
push
and
testb
fistps
xor
fdivl
mov
dec
mov
push
dec
jno
add
mov
sbb
adc
or
mov
test
pop
inc
cld
pop
inc
int
sbb
cmp
dec
std
xor
dec
sahf
fsubrl
dec
xchg
mov
ficoms
cltd
add
mov
inc
push
cmp
out
jmp
mov
push
pop
xchg
pop
in
dec
mov
lods
int
subb
fsubl
push
cmp
mov
test
sahf
adc
pop
add
push
and
pop
add
testb
mov
jmp
sub
xor
add
decl
arpl
arpl
inc
inc
dec
int3
xchg
sub
push
iret
or
cmpsb
or
mov
loop
inc
mov
sbb
rcr
into
mov
add
adc
and
or
loop
pop
shlb
xchg
lods
out
or
pusha
pop
or
daa
sbb
sbb
sbb
xor
out
call
pop
cltd
testl
push
test
mov
mov
inc
jno
add
les
xchg
dec
pop
pusha
cmp
loopne
inc
lcall
test
pop
push
sbb
or
notl
mov
aam
pop
or
cmc
xchg
mov
mov
shl
jmp
pop
xor
cli
stos
sti
pop
leave
test
and
add
out
jmp
adc
push
or
jae,pt
insl
push
pop
push
pop
test
popf
dec
loop
fsubrs
add
sub
aad
jb
clc
xorb
divb
mov
hlt
xchg
aaa
push
xor
add
and
ret
sub
push
jbe
inc
mov
xlat
into
pusha
push
pop
add
push
icebp
pop
rcrb
sub
add
jecxz
data16
sbb
jb
bound
sti
mov
xor
xor
arpl
orl
xchg
call
jle
insl
mov
sub
stos
lret
ret
call
and
shlb
push
or
or
cmc
and
add
insl
add
lcall
add
sbb
lds
ret
add
xchg
mov
or
adc
and
or
and
popaw
mov
add
loopne
pop
or
lds
scas
sbb
adc
xor
icebp
mov
out
mov
add
xorb
pusha
or
inc
sti
decl
call
cmp
pop
cmpsb
xchg
and
insb
or
decl
dec
pop
sub
cmp
xor
fsubp
daa
stos
add
hlt
push
push
cmpl
push
mov
loope
call
push
adc
pop
inc
stos
lea
cmpsb
jo
fildl
out
push
mov
and
test
push
cmp
scas
les
incl
xchg
in
push
mov
and
pop
icebp
mov
enter
cld
xchg
jb
inc
dec
xor
add
lods
shlb
mov
dec
push
add
mov
or
xor
dec
or
test
popa
rolb
adc
jno
xor
sbb
imull
adcb
sbb
lea
aam
call
cltd
js
sbb
pop
bound
or
jg
sbb
leave
sub
xor
xor
mov
inc
lahf
dec
hlt
sbb
adc
das
clc
js
ret
add
mov
mov
pop
icebp
enter
jo
push
arpl
outsb
push
push
es
gs
addr16
call
push
inc
je
xor
dec
repnz
adc
mov
das
sbbl
jp
sub
jecxz
push
aad
outsb
xchg
es
aad
decl
scas
sahf
and
out
add
pusha
and
mov
inc
js
insb
jo
adc
push
mov
mov
pop
fs
lock
mov
lods
in
nop
decb
mov
insb
mov
mov
add
shlb
fisubrs
enter
imul
xchg
sbb
xchg
pushf
subb
push
push
bound
mov
cmp
cmp
rcl
xor
cmp
iret
and
fimuls
mov
pusha
fmuls
dec
inc
lods
mov
adc
cmp
subb
or
jl
fcomps
inc
mov
adc
inc
idivl
mov
fnstcw
mov
loopne
jge
ljmp
add
inc
sbb
notb
dec
flds
dec
mov
icebp
lcall
es
inc
decl
fadds
xor
fiaddl
adc
rolb
ja
mov
pusha
loopne
sub
dec
xchg
aad
fadds
clc
add
pop
subb
adc
xor
xor
jl
hlt
dec
mov
bound
rclb
add
sbb
xor
mov
push
mov
insb
sub
hlt
hlt
fists
jle
pusha
subb
ret
popf
test
pop
add
cs
popf
into
decl
push
rcrl
in
in
push
push
and
out
push
out
sbb
mov
inc
or
testl
fdivrp
mov
push
stc
xchg
ret
jno
scas
pop
push
test
enter
mov
into
xor
xchg
pop
push
add
push
jmp
push
rclb
dec
jmp
out
inc
movb
sub
pop
stos
mov
loop
jl
test
or
sub
cs
mov
push
sbb
push
inc
mov
and
lcall
mov
sub
shl
mov
sbbl
sbbl
sub
inc
xor
push
sub
mov
jg
mov
pop
jl
xor
data16
add
jp
add
add
push
mov
scas
sub
sbb
sub
sub
pop
hlt
orl
testl
int3
adc
add
mov
mov
mov
and
in
inc
add
push
xor
out
lock
ds
mov
aaa
cld
and
adc
cmp
inc
push
push
and
or
lods
push
inc
cmp
cmpsb
add
and
sbb
mov
xchg
mov
or
inc
adc
push
sub
push
mov
loop
sbb
sbb
imul
or
pop
stos
cli
aas
cmp
clc
ja
add
popf
adcl
jne
push
push
out
push
mov
sarl
jmp
jge
mov
push
addb
lahf
or
cli
aad
sub
icebp
push
push
push
push
scas
fs
ret
jg
inc
cmp
jae
lret
sbb
and
push
dec
lock
pusha
mov
xchg
stos
mov
or
xchg
jno
inc
jp
fbld
mov
and
sti
dec
scas
outsb
mov
fcmovbe
jae
cmpsb
push
insb
scas
jmp
shll
sbb
jg
fdivs
in
xor
insl
popa
and
pop
or
in
es
icebp
mov
push
jmp
adc
cli
cmp
ffree
jecxz
ret
xor
cld
add
insb
sbb
lock
mov
lock
ret
out
ljmp
xchg
mov
xchg
les
add
fisttpl
loopne
cmp
dec
pop
cs
push
xor
js
xor
daa
push
cmpsb
popf
or
push
shrl
out
cli
mov
dec
fdivrl
or
cs
lods
jg
xchg
adc
pop
mov
xchg
mov
or
loop
mov
scas
xor
add
or
mov
inc
xlat
sub
fdivs
lahf
mov
faddl
or
or
jle
mov
mov
xlat
test
push
div
test
outsl
jl
sbb
xchg
mov
and
inc
and
jmp
xchg
or
adc
aaa
mov
test
inc
push
insb
ret
psubb
in
fs
push
andb
repnz
scas
sub
push
cmc
adc
mov
push
add
ds
movsb
jb
int
pop
sub
xchg
lock
mov
test
nop
push
lock
xchg
sahf
mov
cli
push
xor
dec
mov
xchg
ds
add
adc
ss
mov
mov
push
xchg
pop
test
add
ds
bound
gs
pusha
daa
inc
das
cli
gs
adc
repz
ret
test
mov
sbbl
mov
cwtl
mov
sahf
push
idiv
in
jmp
dec
pop
dec
sbb
lock
int
test
mov
inc
xchg
inc
idivb
insl
fsubl
or
rcll
jg
jp
cs
cs
jp
and
dec
mov
outsb
mov
mov
cmp
gs
push
movsl
pop
aam
rcrl
repnz
test
sahf
inc
rorb
insl
call
outsl
js
dec
jb
mov
cld
push
xchg
sbb
sti
call
lock
data16
sbb
scas
pushl
ret
mov
mov
add
xchg
out
sub
pop
hlt
test
sbb
je
mov
sub
sub
pop
mov
xchg
mov
lods
ret
inc
lods
nop
and
dec
mov
hlt
lahf
in
outsb
xor
test
mov
rcrb
popl
mov
mov
push
jbe
test
pop
movsl
jg
lods
add
push
and
or
pop
hlt
add
mov
sbb
pop
push
cmp
cld
dec
push
ljmp
mov
aam
lret
in
adc
aas
sarb
add
lcall
test
jle
jb
inc
adc
and
int
out
es
testb
outsl
xor
sub
stos
outsb
sahf
mov
dec
movsb
mov
inc
cmpsl
lcall
xlat
jmp
sub
cmpb
fsts
xor
and
inc
in
fisubs
mov
and
jle
mov
aaa
loopne
cmp
out
dec
test
jb
in
mov
out
push
or
rorb
pop
mov
stos
fs
mov
orl
jmp
clc
mov
iret
movsb
jmp
lret
dec
cmp
xor
insb
mov
movsb
rcl
icebp
add
shll
test
andl
in
mov
sarb
shlb
jp
popa
loope
loop
in
jnp
rorl
sub
push
imul
fnstcw
adc
fsubrs
add
adc
xor
lods
mov
outsl
das
inc
sub
test
push
idiv
or
inc
pushf
push
sub
xor
shrb
lret
cmpsb
ss
sahf
and
mov
dec
pop
pusha
clc
mov
mov
push
xorb
pop
xchg
mov
mov
fcomps
pop
cs
mov
push
dec
sub
dec
orl
add
sbb
sbb
in
cld
and
lea
and
add
or
js
repz
ljmp
aam
fsts
ret
jo
dec
or
sbb
scas
mov
mov
out
xor
mov
inc
pop
pop
sbb
push
inc
adc
out
gs
xchg
test
out
mov
xchg
je
aaa
or
add
nop
arpl
jge
adc
into
jp
mov
sti
stos
shrb
add
inc
pop
mov
jno
outsb
ret
daa
cmc
or
outsl
test
cmp
mov
jno
incl
test
popa
test
insb
addr16
aam
jnp
loopne
mov
out
push
daa
sub
fidivrl
push
pop
pusha
add
je
push
push
int3
jae
push
cli
stos
aaa
xor
mov
xchg
add
cmp
or
cs
xlat
mov
test
jl
dec
mov
insl
ss
push
sti
lock
push
aam
add
sub
dec
in
clc
pop
incl
or
and
fsubs
fwait
subl
cmp
and
mov
xor
lahf
loopne
inc
adc
add
fnsave
ret
stos
scas
push
mov
pop
jo
mov
xor
lods
mov
jbe
aam
fadds
xor
jbe
or
and
pop
in
or
out
push
mov
jb
mov
dec
lcall
adc
sub
xor
xchg
cmp
and
icebp
xchg
inc
add
mov
inc
and
jle
pop
inc
sbb
filds
insb
inc
mov
cmp
call
xchg
fs
fcmovb
outsb
mov
in
lock
movsl
mov
jecxz
and
pop
xchg
mov
popa
pop
inc
cmp
cmp
lcall
pop
and
mov
icebp
push
imul
outsl
adcb
mov
jmp
out
into
dec
aaa
push
jmp
pop
leave
inc
add
mov
dec
inc
mov
adc
jo
cwtl
lock
aam
sbb
fisubrs
cld
pop
insb
rcrl
shlb
and
ja
lea
aas
add
test
or
clc
sbb
push
rep
sbb
icebp
mov
push
data16
inc
pop
xor
ficomps
mov
add
xor
inc
add
mov
inc
dec
cmp
pop
push
add
ljmp
cmc
jecxz
xchg
sbb
cli
aam
sbb
call
push
cli
fisttpl
push
push
mov
pushf
fdivl
addb
je
data16
mov
inc
cmpsl
rcrl
and
cli
mov
cmpsl
xchg
push
popf
push
push
and
arpl
xor
icebp
sysenter
dec
mov
push
imulb
adc
add
mov
xchg
pop
paddb
outsb
test
or
add
inc
arpl
mov
pop
loope
rorb
push
ret
jbe
out
pop
or
fs
mov
jno
ljmp
push
cld
add
int3
adc
adc
adc
cmp
fistl
sbb
out
push
div
decl
and
cld
dec
aaa
adc
inc
xchg
push
and
icebp
stos
or
push
out
movzwl
rolb
movsb
sti
sbb
or
cmp
idivb
jnp
mov
andb
test
loop
jle
mov
xor
shlb
jmp
lahf
mov
lock
mov
pop
inc
mov
movsl
and
inc
test
movsl
inc
loop
xchg
jl
add
orb
stos
xor
xchg
lock
xchg
mov
add
aas
cli
jae
xor
dec
xor
push
je
inc
ja
inc
mov
and
push
push
addl
cmp
lcall
sub
stos
daa
sub
cmp
and
dec
mov
outsb
fmuls
or
fcomps
mov
inc
mov
fisubrs
add
popl
sub
pusha
sub
push
lods
adc
clc
mov
add
ficompl
inc
push
push
pushf
add
mov
shr
popa
lahf
jae
adc
add
xor
int
je
es
fcmovnu
scas
lcall
addl
cli
jae
and
lock
sbb
xchg
sbbb
mov
aas
xor
or
inc
mov
int3
inc
sbb
inc
xchg
push
pop
or
loope
loop
js
mov
adc
mov
scas
insl
xor
ljmp
cmp
je
scas
pop
push
ljmp
and
sbb
and
stos
and
popa
stos
test
outsb
add
adc
pop
mov
into
mov
pusha
mov
add
push
adc
rcr
xor
hlt
ds
push
fldcw
cltd
sub
fs
jg
inc
cmp
loopne
shll
rcrb
adc
cld
or
add
inc
dec
aaa
add
test
js
movsb
pop
dec
push
cli
xchg
sub
jbe
pusha
rorb
cmp
jmp
or
jne
adc
outsl
out
mov
jg
test
cld
fcmovu
adc
pop
dec
adc
ja
in
mov
sbb
mov
pop
push
add
pop
das
inc
ss
push
cli
cmpsl
stc
pusha
mov
push
insl
xlat
and
inc
inc
lods
jns
scas
add
push
cld
lods
out
xor
xchg
lret
push
or
xchg
xchg
lahf
push
icebp
iret
adc
cltd
or
jne
stos
outsb
adc
les
pop
push
mov
icebp
dec
add
sbb
mov
or
pop
add
sub
in
stos
mov
mov
push
adc
sub
sub
sbb
cwtl
jecxz
or
fdivr
sarl
shrl
or
lahf
push
mov
add
inc
sub
mov
fistl
jbe
fwait
or
cwtl
and
fs
adc
data16
pop
idivl
pop
dec
loop
add
cmpsb
repz
fiaddl
leave
mov
stos
cltd
cwtl
mov
fwait
mov
fsubl
adc
sbb
mov
or
mov
jnp
shrl
cmpsl
icebp
cmp
mov
xor
adc
push
push
stos
sbb
mov
fcoms
push
in
or
test
mov
dec
aaa
mov
mov
orb
rorl
test
cmp
dec
sar
inc
mov
inc
call
jmp
mov
mov
std
lret
call
sbb
cli
rolb
insb
loopne
mov
cs
movsl
enter
aam
enter
mov
xchg
loopne
lea
and
lods
and
sub
icebp
mov
fcomps
push
imul
jmp
xor
jl
pop
cmp
imul
aaa
sti
push
std
jo
jle
lea
xchg
jl
push
mov
cwtl
popa
or
je
sub
andl
mov
jno
xor
cmpl
lock
inc
stos
dec
gs
or
xlat
aas
dec
lock
xchg
or
fimull
cmc
sub
ds
sbb
rorb
mov
mov
lods
fisttps
push
cs
insb
insb
push
inc
lcall
inc
pop
mov
and
es
add
out
or
adc
movsb
test
stc
in
stos
mov
cmp
sub
pop
dec
les
mov
pop
outsl
add
sbb
aad
popa
xchg
inc
das
add
add
outsb
cmp
imul
mov
clc
jl
sbb
push
xor
jl
cmpsb
ret
add
loope
ss
andl
xchg
adc
inc
inc
rorb
imul
dec
rolb
arpl
cmpsb
mov
push
dec
mov
cmp
xchg
loopne
or
cmp
push
lock
ss
into
jb
stos
and
clc
pop
or
test
loope
pusha
imul
cmpsl
lret
je
xor
lcall
outsl
aad
xchg
pop
jmp
es
fdivl
xchg
ret
loope
mov
push
cmp
pop
ret
xchg
prefetchw
push
xor
push
xchg
mov
push
xchg
jle
cmpl
adc
loopne
loopne
add
loopne
lcall
std
js
xchg
sub
inc
dec
adc
xchg
addl
aaa
daa
repz
and
jmp
and
es
jle
dec
jo
sbb
lahf
xchg
test
push
xchg
ret
int
lcall
dec
sbb
mov
lock
dec
std
in
into
mov
adc
jo
sub
and
mov
dec
pop
scas
adc
push
nop
jae
lea
add
jmp
xorb
mov
adc
cld
loope
add
sbb
xor
jo
in
xchg
sub
test
pusha
stos
and
pop
outsl
cmpsb
and
mov
dec
sbbb
add
repnz
add
xchg
repz
push
daa
mov
cli
jecxz
cmpb
loopne
call
inc
loopne
insl
in
xor
xchg
cmc
jl
cwtl
push
cmp
adc
jmp
inc
push
pop
arpl
jb
pop
cmp
idivb
aas
mov
add
add
cmc
xorb
xor
push
xchg
push
ja
push
nop
loopne
adc
aad
and
sbb
jle
jge
jae
test
nop
adc
sbb
or
insl
inc
inc
dec
xor
jge
dec
ja
sub
mov
ja
decl
adc
ds
negb
imul
das
sahf
stos
aaa
add
into
cmp
inc
xchg
push
test
sbb
or
dec
xorl
cli
mov
aas
xor
push
test
ret
jg
push
orb
cmp
mov
lea
adc
test
fcmovbe
lea
dec
cmp
jecxz
fdiv
stc
mov
ficoml
dec
cltd
adc
cs
or
out
push
addr16
or
adc
pushf
add
cwtl
jbe,pn
lcall
adc
pop
incb
rolb
adc
adcb
loope
clc
dec
daa
gs
incl
ret
dec
ret
dec
rcll
ja
into
cwtl
push
rol
jbe
ljmp
push
mov
xchg
pop
or
mov
add
push
mov
popa
or
cwtl
xchg
lret
cmpsl
mov
cmpsb
add
xor
call
aam
lea
int
ret
rolb
mov
pop
mov
es
xor
ljmp
fs
inc
mov
add
insl
cmpsb
or
fcomp
int
add
sti
fimuls
inc
insl
inc
lods
pop
cmpsb
sahf
lods
xchg
stc
mov
or
fisttps
lea
nop
add
movsb
mov
and
inc
xchg
mov
bound
testl
push
push
outsl
inc
aad
cmp
popa
scas
mov
pop
les
std
fcomp
mov
pop
test
inc
xor
xor
push
dec
xor
cwtl
insb
hlt
push
adc
lret
or
xlat
ds
mov
pop
pop
das
jmp
cmp
mov
loop
aas
jnp
ret
jbe
pop
movsb
sub
adc
aam
nop
sbb
mov
push
mov
push
clc
daa
shlb
and
xchg
cmc
lods
lea
mov
into
or
ljmp
nop
mov
fistps
jbe
jmp
loope
shll
inc
ret
jl
pop
icebp
fists
pop
outsb
mov
bnd
lahf
sbb
aad
and
movsb
clc
add
ret
fcmove
sti
lea
aad
clc
xchg
mov
sbb
push
fmull
insb
sahf
dec
xor
push
mov
push
in
lret
pop
jl
stos
test
cmp
push
mov
sub
mov
jmp
push
inc
push
shlb
pop
cltd
push
jmp
dec
call
mov
je
dec
add
aad
rorb
test
ja
xchg
ss
xchg
shlb
xchg
inc
nop
or
pop
inc
cmp
test
les
mov
add
push
xchg
dec
add
pusha
mov
mov
adc
pushf
dec
inc
aam
sub
push
mov
andb
jbe
cmp
pop
jae
sub
fsubp
xor
inc
push
ss
xchg
gs
mov
clc
mov
mov
or
jns
les
push
lock
xchg
adcb
orl
outsl
jg
xor
jnp
cmpsb
setle
testl
jge
mov
mov
and
dec
jp
add
test
jo
mov
push
addr16
or
mov
mov
ss
push
sbb
shl
dec
adc
xor
pushf
inc
cmc
mov
jp
xorb
add
shrb
and
and
cmpsb
int
cs
xchg
push
dec
push
in
imulb
cmp
sub
jns
jae
mov
add
mov
out
cmpsb
ds
jecxz
mov
and
gs
cltd
sub
add
sbb
mov
xor
push
fdivrp
pop
push
mov
xor
data16
mov
mov
bound
and
mov
into
or
in
or
push
orb
ror
outsl
into
cmp
lcall
xchg
jns
enter
and
lret
xchg
jbe
stos
pop
add
sub
daa
jecxz
js
add
push
jnp
fcoml
xchg
sub
xchg
xchg
xor
sub
negb
mov
cmpsb
add
cmpsb
mov
inc
push
je
push
add
cwtl
scas
cwtl
cmp
push
lea
frndint
inc
mov
ja
loop
lea
jae
mov
inc
pop
pop
fs
mov
rcrb
sub
pop
push
or
dec
dec
repz
test
xorl
lock
xchg
repz
xor
scas
ljmp
cmp
imul
lret
pop
xchg
add
iret
fstl
sahf
dec
loope
out
test
fistps
add
loop
cmc
out
sahf
call
std
xchg
adc
dec
pop
add
add
js
push
or
pop
gs
add
fwait
js
and
sub
aas
into
inc
test
jle
popf
aas
push
or
inc
add
mov
pusha
xlat
les
add
add
imul
and
loop
add
shlb
shrb
cmp
inc
push
addl
push
test
adc
cmpsb
call
lock
arpl
mov
adc
dec
dec
pop
dec
fdivl
mov
outsb
jo
pop
push
out
cmpsl
outsb
jmp
sbb
cmpsb
insb
mov
ljmp
fistl
sbb
mov
mov
aas
lock
mov
stc
data16
ss
add
scas
and
fiadds
test
rclb
pop
leave
cld
cwtl
cli
inc
loope
psubb
mov
cwtl
cmpb
test
loope
and
adcl
inc
mov
fisubs
outsl
xchg
inc
mov
ret
dec
out
jno
test
lret
shrb
and
bound
sbb
lret
xor
lock
popf
lods
push
fisubrs
lea
cmovo
cmp
cld
aas
mov
faddl
lret
daa
mov
rolb
push
sub
mov
lock
and
jmp
data16
pushw
fmuls
faddl
clc
push
adc
stos
xor
push
xchg
test
pop
adc
test
inc
jg
xor
es
addb
into
test
hlt
int
xchg
mov
negb
sub
test
mov
push
or
mov
decl
and
sub
lea
add
jecxz
jg
mov
sub
jmp
pop
pop
xor
dec
dec
addl
and
jg
lock
push
push
sbb
out
jb
js
rclb
int3
cltd
fdivs
loopne
inc
add
ret
loope
adc
dec
aaa
or
iret
jg
xchg
pusha
mov
xchg
push
xlat
dec
push
popf
add
or
mov
xor
jge
cltd
cmp
adc
imul
xor
jno
adc
cld
lds
mov
xchg
jge
xor
mov
xor
sbbb
ja
js
ljmp
inc
out
lock
mov
sub
pushf
scas
lock
clc
fadds
sub
std
pop
fwait
in
xchg
or
imul
data16
rcrl
mov
add
div
out
rcr
jl
cmp
hlt
sbb
cwtl
enter
lock
and
adc
mov
push
jmp
xchg
push
stc
sub
repnz
movsb
jg
repnz
add
jg
push
cld
xchg
cmp
jg
sbb
fs
aaa
sub
mov
sub
js
pop
cmp
mulb
mov
mov
adcb
inc
clc
in
enter
add
sub
cli
mov
xor
ret
fs
icebp
or
cmpl
and
fs
sbb
or
sub
push
insb
jp
jnp
test
hlt
and
xor
sub
ret
ficoms
call
mov
add
shrl
mov
mov
mov
sarb
adc
mov
insb
pop
xchg
dec
jge
fs
push
sbb
es
je
lea
aam
stos
sub
lea
mov
setp
fimull
sti
test
inc
imull
mov
testl
adc
or
pushl
xchg
fnsave
scas
movsb
int3
ss
dec
or
bswap
subl
inc
out
cltd
jno
sbb
or
stos
pop
or
xchg
loop
jecxz
push
sbb
les
adc
push
cli
jmp
inc
mov
push
jge
mov
out
jns
dec
pop
sub
or
jae
or
sarb
adc
push
sbb
test
add
xor
adc
ljmp
es
pop
frstor
cwtl
xchg
mov
and
adc
call
mov
sbb
xchg
orl
fstp
mov
sahf
pop
push
in
jg
mov
stos
sub
shl
adc
outsl
imul
add
aas
add
add
xor
sbbl
fiadds
and
mov
in
lret
push
pop
into
jmp
add
dec
mov
sbb
mov
loope
ret
cmpsl
es
imul
addb
push
nop
and
and
es
enter
push
xor
or
inc
ljmp
sbb
inc
ljmp
jmp
cmp
imul
call
pushl
inc
add
pop
jl
mov
lahf
loopne
jns
std
sbbl
jno
sbb
cmp
loope
or
add
xchg
add
gs
jmp
xor
and
xchg
test
out
sbb
jnp
dec
or
addr16
inc
icebp
pop
ljmp
sbb
lret
or
mov
lea
imul
test
in
stos
sub
add
pop
jl
popf
inc
movsb
jecxz
mov
rcl
dec
hlt
cmp
add
negb
push
ret
pop
adc
cltd
icebp
lcall
movsl
xchg
mov
sub
xor
mov
int3
push
add
ret
lock
inc
insb
xchg
or
add
adc
aaa
or
sbb
inc
adc
decl
fdivs
pushl
hlt
cmp
adc
hlt
loopne
sub
dec
add
mov
jno
adc
cwtl
add
js
push
iret
js
sub
mov
cmp
popf
call
das
inc
mov
push
jmp
jmp
out
push
xor
add
pop
jg
sbb
int3
rorb
pop
or
cwtl
xor
and
std
jge
xchg
mov
les
or
add
lret
jg
add
scas
or
jb
ficompl
std
adc
pop
or
pop
or
movsb
mov
decl
ljmp
scas
or
lcall
out
decl
xchg
ljmp
out
sbb
mov
dec
out
stc
pusha
inc
inc
and
jmp
jns
mov
dec
add
mov
mov
mov
add
loope
push
sbb
aam
cmpsb
ss
fidivrs
cld
lret
loopne
cli
xchg
and
or
scas
pop
or
aas
pusha
hlt
jg
mov
clc
fdivrl
or
inc
mov
stos
dec
lods
pop
mov
mov
cli
clc
popf
pop
xchg
imul
insb
loopne
inc
adc
test
ret
sbb
jbe
xor
xor
roll
push
inc
inc
dec
sbb
xchg
cmp
xor
adc
outsl
bound
cld
arpl
mov
jecxz
xor
aaa
ljmp
test
or
push
inc
jl
daa
incl
xlat
out
clc
adc
cmp
lea
dec
or
or
dec
sub
lret
call
incl
lahf
aas
imul
pop
es
cmp
jno
cmp
fistps
push
cmp
stos
mov
shr
popa
sbb
stos
xchg
notl
or
pop
cmc
sbb
fidivs
or
fbstp
sbb
or
pop
dec
leave
adc
loopne
mov
aad
adcl
sub
subl
jmp
faddl
inc
and
ret
inc
inc
dec
andb
lods
jp,pt
push
jl
pop
loope
add
lcall
dec
cmpb
adc
jne
sub
fnstsw
daa
shl
push
aaa
jo
lahf
ds
mov
popf
cmp
dec
rolb
loop
mov
add
rol
mov
pop
xchg
jg
dec
and
adc
mov
lidtl
pop
ja
xchg
adc
les
dec
inc
pop
mov
in
call
sbbl
shll
mov
push
inc
pusha
add
in
repnz
fcomps
mov
xchg
fstpt
scas
jge
movb
push
inc
std
loope
or
js
add
xchg
mov
push
dec
or
mov
dec
dec
ss
test
push
adc
mov
rclb
lcall
lock
jmp
push
addl
adc
xor
sbb
sub
mov
pushl
add
iret
fcompl
and
adcb
xchg
rolb
mov
mov
repz
decl
cmp
adc
mov
jg
inc
pop
and
pop
mov
dec
or
sbb
adcb
in
js
inc
les
and
out
ljmp
mov
push
dec
aam
mov
out
adc
push
jg
das
subb
sbb
cmovnp
fs
dec
clc
sub
jecxz
cli
add
cmc
mov
loop
mov
sub
xlat
enter
push
loopne
mov
sbbb
fimull
mov
sub
js
cli
cmp
xor
or
inc
cld
cli
addb
jnp
shr
and
sub
sbb
push
adc
or
imulb
sbb
xchg
jbe
jl
mov
lcall
push
xor
or
mov
add
add
xchg
ja
out
dec
mov
addl
rcrl
dec
test
push
aas
ljmp
sub
bound
mov
mov
mov
dec
rcrb
push
pushl
clc
stos
aaa
jmp
test
in
stos
and
test
sub
lods
push
push
adc
dec
xor
inc
mov
les
cmpsb
push
jecxz
rcl
sub
push
jbe
add
lret
inc
add
js
popa
jnp
mov
sub
unpcklps
in
cmc
ret
lods
add
lods
lahf
lcall
mov
iret
shlb
pop
dec
mov
mov
adc
and
scas
testl
shl
xchg
jl
push
mov
fwait
notb
test
mov
aam
xchg
clc
and
mov
ds
add
std
aam
jge
jb
fstpl
push
dec
mov
fdivs
decl
mov
addl
push
inc
jnp
or
sbb
adc
test
ss
xor
lock
sbb
xchg
mov
inc
mov
ja
je
fisttps
jo
dec
es
jne
fwait
pusha
shl
test
hlt
jno
ljmp
dec
xchg
js
ds
ret
mov
std
mov
aam
and
add
insb
sbb
out
aam
add
mov
adc
sub
adc
fbstp
mov
addl
popf
xor
inc
adc
or
cmp
rclb
or
cli
and
jbe
add
loopne
dec
fimull
stos
pusha
cs
cmp
cmpsb
jp
fiaddl
sbb
test
cmpsl
call
add
jne
es
sbb
xchg
les
cs
js
mov
in
add
jle
sbb
adc
xchg
lret
lods
sbb
add
int3
arpl
jns
xchg
pop
lahf
loopne
adc
dec
movb
hlt
jmp
loopne
mov
add
sub
mov
lcall
xor
mov
push
out
jg
push
cwtl
push
insl
mov
or
cwtl
in
lahf
push
out
and
push
mov
das
dec
scas
mov
jl
jno
dec
mov
aad
pusha
inc
shlb
lcall
inc
mov
push
imul
bound
aas
cmc
inc
add
push
and
aad
mov
jmp
sti
dec
sbb
sbb
add
aas
add
nop
jl
test
xchg
sub
mov
icebp
insl
cmp
jbe
jp
fildll
jg
lea
out
inc
addr16
mov
push
jl
inc
mov
push
pop
cmp
lods
xchg
push
xlat
les
push
inc
mov
popa
into
fistpll
lock
or
in
jne
cld
es
pop
stos
outsl
jp
xchg
test
cmc
xchg
dec
int3
out
cli
pop
mov
add
pop
stos
mov
stos
dec
cld
int
sbb
mov
or
sar
xlat
mov
adc
push
xor
inc
adc
cli
pop
out
mov
mov
or
pop
inc
add
test
test
push
orb
outsl
insl
pop
lock
push
lcall
push
and
adc
adc
pop
dec
xchg
or
sub
xchg
lods
or
pop
inc
call
lahf
dec
sbb
add
push
mov
lret
pop
mov
loopne
out
repz
pusha
sahf
add
push
and
mov
ljmp
add
mov
test
sarb
and
cmp
ret
clc
int3
fstpl
cs
inc
pushf
xchg
test
jnp
insl
xchg
loopne
inc
pop
cmpxchg
jno
cmpsl
inc
in
or
cmp
icebp
stc
ret
mov
movsb
mov
cmpsl
pusha
or
out
add
mov
xchg
pop
xchg
xchg
inc
cwtl
lcall
out
push
daa
cmpsl
push
loopne
xor
ljmp
clc
push
sbb
push
nop
pop
imul
and
xchg
orl
push
loop
jbe
stos
sbb
jg
mov
sub
push
jge
stos
jne
add
test
inc
insl
stos
loop
push
add
leave
push
stos
shlb
insb
loop
decl
orb
incl
inc
addl
add
test
push
test
push
add
sub
in
adc
add
adc
mov
divb
xor
sar
and
sbb
outsb
pop
add
out
adc
inc
jo
andb
adc
mov
xor
and
add
and
or
mov
sbb
cmp
lahf
pop
sti
scas
pushf
add
and
jle
cmpsb
add
cwtl
and
or
pop
sbb
push
nop
dec
mov
and
and
sub
pusha
xor
xorl
int3
push
ss
and
int
xor
nop
and
scas
bound
mov
addl
and
in
push
adc
push
mov
push
addb
call
addb
lcall
lock
fldenv
push
and
and
lods
push
pusha
dec
testb
push
adc
cmp
add
mov
fiadds
sbbl
push
inc
add
sbbl
add
cmpsb
fildl
rorb
adc
xor
flds
sbb
int3
inc
cld
jbe
andl
outsb
adc
and
pusha
data16
or
cs
fsubrp
popf
adc
and
push
and
sbb
push
lods
outsb
add
js
call
lods
or
and
mov
adc
xchg
sbb
xor
cmp
fs
sub
lods
sbb
bound
repnz
pusha
xor
incl
mov
inc
push
sub
pushf
es
sbb
addb
xchg
mov
cwtl
mov
and
push
add
inc
jp
cli
mov
jo
insb
out
sub
add
sub
out
orl
push
sub
test
icebp
popa
add
push
add
or
loopne
push
cmp
addl
sub
adc
add
add
push
data16
dec
out
cwtl
add
and
mov
xor
int3
mov
test
cld
push
jp
out
mov
xorl
mov
or
enter
cmp
add
push
cmp
xchg
test
ret
pushw
cmp
and
adc
or
data16
inc
js
sarb
xor
int3
jo
movb
mov
call
or
or
add
test
or
xchg
rcr
js
insb
hlt
jo
pushf
add
call
in
sbb
mov
mov
inc
pusha
pop
lret
test
mov
pusha
pushw
jnp
sbbb
rorb
addb
sbb
add
je
push
cmc
jl
add
or
shll
loop
shlb
jno
xor
test
cltd
mov
and
cs
xchg
mov
dec
subl
sbb
sub
push
addb
push
and
cmp
xor
xor
jle
pushf
rolb
mov
dec
add
pusha
inc
ljmp
add
pop
inc
pusha
xchg
cmp
or
lcall
add
leave
push
or
pop
bound
xchg
fsubs
xorb
fiadds
mov
or
cmp
inc
xchg
jb
mov
inc
mov
add
sub
adc
call
in
pushf
and
loop
sub
data16
adc
fsubrl
mov
inc
pusha
ds
jp
mov
sbb
and
in
and
xchg
loope
jo
faddl
loopne
sub
shlb
ret
lock
shl
bound
sbb
add
lcall
cmp
cs
mov
push
insb
gs
or
adc
lock
in
into
jp
or
jle
push
fmull
cmp
xor
or
jb
or
arpl
and
ljmp
push
outsb
sbb
push
adc
test
rorb
test
xchg
mov
rcl
mov
lcall
pop
push
sbb
je
mov
out
inc
addb
imul
adc
or
push
jo
loopne
mov
xchg
pop
cmpsb
daa
sbb
mov
cli
push
cmp
lods
push
int3
mov
ret
push
and
dec
sbb
cmp
sbb
pusha
call
outsb
out
mov
dec
cli
push
mov
push
and
dec
andl
push
addr16
outsb
push
cwtl
fadds
cmp
js
xor
insb
fs
les
ret
pop
mov
stos
xor
es
addb
mov
xlat
dec
popa
and
stos
rolb
ret
enter
adc
push
push
pusha
ss
sbb
sbb
add
push
jle
fimull
sbb
inc
cli
rolb
xor
pushf
hlt
add
cld
xchg
inc
push
ret
ja
cmp
or
imul
outsb
and
orl
pop
xchg
push
mov
mov
inc
xor
lods
in
or
int
inc
inc
in
sbb
push
inc
and
mov
mov
stos
lods
jmp
xor
stos
mov
add
outsl
rcrb
movb
push
mov
add
dec
ss
and
jo
lock
leave
and
sbb
pusha
orl
inc
hlt
loopne
or
pop
dec
mov
stos
or
out
adc
push
fadd
sub
fadds
dec
xor
inc
jnp
stos
or
or
or
and
mov
je
jl
addb
outsb
ss
jne
out
in
jb
mulb
shr
call
pop
js
imul
jbe
xlat
ret
test
es
bound
mov
xor
pop
jp
decl
or
adc
mov
add
pushf
push
pop
mov
sbb
lods
sub
out
sbb
xor
push
hlt
push
add
jo
add
enter
pushf
lods
test
mov
pusha
addb
push
data16
je
shr
adc
dec
hlt
mov
sbb
test
lock
cs
adc
mov
stos
ret
push
cmpl
add
ss
mov
jl
popw
shrl
dec
mov
mov
repnz
push
dec
inc
push
cmp
add
mov
xchg
mov
add
add
mov
adc
push
insb
push
in
add
add
dec
adcl
loopne
add
fldcw
xchg
mov
push
inc
popa
call
mov
loope
sbb
shr
out
rclb
clts
jb
or
cmp
add
or
mov
popa
xor
push
ljmp
cmp
lret
data16
push
in
push
pusha
ds
xor
mov
dec
push
or
sbb
inc
call
mov
sahf
add
pop
push
jnp,pn
sub
mov
inc
mov
xor
push
mov
sbbl
and
je
or
xchg
push
push
xchg
or
xchg
rcrb
push
roll
mov
cwtl
pusha
test
cli
repnz
push
jge
mov
inc
nop
aad
pusha
test
push
inc
inc
rcrb
adc
inc
subb
and
lock
add
clc
sub
mov
rorl
add
pushf
in
jb
adc
or
add
and
mov
ljmp
and
cmp
add
pusha
inc
inc
push
or
sbbl
mov
pop
data16
mov
pop
in
adc
pop
cmp
fs
ret
or
xchg
adc
xchg
bound
sub
scas
push
pusha
adc
fsubrs
add
nop
inc
testb
insb
movsl
shlb
leave
jl
lcall
mov
in
shlb
orb
push
subb
loope
lea
loop
or
mov
xor
inc
pusha
sbb
sbb
nop
push
mov
or
xchg
add
lods
cmpsb
les
sub
enter
sbb
fs
jbe
or
les
out
mov
pushf
ljmp
repz
pop
add
xor
jb
movb
aaa
push
das
and
jo
int
pop
adc
jle
sarb
pop
and
xchg
mov
ret
inc
adc
insb
aad
adc
jo
push
test
sbb
cs
add
fimull
jo
xor
push
cld
push
or
ss
xor
rol
js
sarl
pop
int
in
mov
ret
push
ss
dec
les
movb
mov
mov
sub
and
mov
adc
inc
mov
test
ret
mov
mov
inc
push
push
xor
adc
popa
ror
neg
cmp
add
push
xchg
mov
je
incb
sbb
sbb
pusha
inc
call
push
ret
stos
es
pop
mov
inc
mov
cwtl
enter
dec
lahf
inc
cmp
xor
dec
push
jle
int3
push
pop
push
add
push
xchg
mov
ficompl
rcrb
push
mov
mov
loope
ljmp
inc
add
jbe
ret
data16
cli
int3
popa
push
cmp
sbb
xor
cmp
pop
stos
mov
sbb
mov
les
hlt
xchg
mov
mov
xor
push
andb
data16
mov
add
cmp
fadds
jbe
pusha
adc
xchg
pusha
mov
test
insl
daa
insb
cmpsb
push
enter
mov
ds
popa
adc
insb
push
cld
dec
xor
sbb
sbbb
and
adc
test
out
mov
call
add
cmp
shrb
lcall
cmp
in
xor
pushf
mov
push
clc
push
pusha
inc
inc
ficompl
cmpsl
inc
add
xorb
shrb
aam
cwtl
xor
jo
icebp
pusha
push
sbb
pusha
add
inc
mov
xor
push
xchg
xor
and
sbb
add
loopne
push
or
fs
in
or
ret
add
js
add
aad
addb
fxam
and
or
mov
mov
push
inc
xlat
inc
xchg
or
inc
data16
ret
in
inc
lret
or
cmp
sbb
ret
mov
rcrb
int3
popl
mov
jg
int
xor
or
pusha
lods
shlb
or
ret
loopne
into
lcall
or
mov
jp
sarl
and
adc
mov
sbb
dec
add
test
xor
scas
scas
loopne
icebp
xor
pop
mov
fsubrs
xor
add
nop
adc
fmull
cmp
bound
stc
mov
bound
mov
shrl
rcrb
adcb
dec
or
loope
sbb
push
test
push
enter
es
dec
add
adc
enter
or
lods
mov
pusha
pushf
in
xor
push
ror
shrl
movsb
ficoms
je
and
add
jo
js
movsb
cmp
mov
decl
aam
pop
inc
xor
push
mov
or
xchg
inc
data16
imul
ss
add
add
and
fadds
or
and
js
add
hlt
push
and
adc
xor
jp
dec
xor
adc
pusha
data16
sbb
jle
sbb
mov
cwtl
enter
enter
out
mov
adc
add
xchg
inc
push
push
rcrb
inc
or
ds
bound
in
add
cmpsl
sub
dec
xor
add
rolb
inc
or
dec
mov
add
or
xchg
mov
inc
rolb
adc
sbb
daa
add
sub
fildll
add
cmp
xor
inc
sar
cmp
sub
add
jg
aaa
mov
cmp
dec
push
ss
push
cmp
or
pop
add
dec
pop
add
inc
push
insl
xor
incl
and
add
push
pop
add
push
add
fldcw
mov
insb
add
push
jle
add
outsl
jg
pop
push
inc
add
inc
add
push
add
push
push
push
add
mov
add
pop
pusha
pop
add
inc
add
dec
add
dec
add
push
add
lods
lret
pop
js
push
popa
pushw
data16
out
jmp
add
insb
insb
outsb
add
dec
add
cmpsb
cltd
int
fidivs
add
jge
subl
push
mov
jo,pn
push
jns
add
or
cld
jl
add
lea
cmpsl
popf
fwait
stos
popa
shrl
push
adc
sub
les
rolb
into
xlat
push
nop
push
add
add
in
iret
outsb
sub
add
test
add
outsl
push
popf
xchg
add
pushf
add
lods
cltd
add
stos
add
mov
mov
test
push
xchg
stos
push
xchg
lods
mov
fwait
lods
in
out
mov
mov
add
mov
push
mov
mov
mov
ss
sahf
mov
scas
mov
mov
outsb
jbe
mov
add
ds
push
mov
fistpll
insl
mov
add
add
lret
lds
movsl
push
pushf
int3
es
fstpt
rorb
lds
lret
rolb
scas
into
push
test
mov
push
iret
aad
iret
fcmovnbe
fimull
rcr
add
mov
fadds
mov
fcoml
fiadds
mov
cs
mov
filds
mov
cmpsl
loope
xlat
loope
mov
mov
ljmp
push
fabs
fucomp
mov
push
in
fimull
mov
fldl
mov
stc
in
mov
mov
out
fucomi
add
scas
pusha
mov
mov
mov
out
imul
out
cli
pop
out
data16
out
lods
fldcw
mov
hlt
add
mov
stc
call
insl
mov
dec
mov
push
in
in
std
add
mov
mov
push
mov
enter
add
mov
cmp
ss
frstor
jecxz
fcomi
xor
push
in
out
out
lret
fcmovnbe
mov
dec
jmp
call
add
jmp
add
jmp
ss
jmp
lret
int
pop
mov
fcmovnb
jmp
in
stc
in
push
rcr
mov
decb
push
in
int
in
das
fcomps
int3
out
push
shr
testl
icebp
icebp
ds
iret
fcoml
hlt
sti
push
rcll
cmc
repz
fnstenv
hlt
int
lret
data16
xor
int
enter
stc
ds
cmpsl
cltd
out
aam
cli
add
rcl
push
hlt
es
fistpll
fptan
push
inc
in
in
in
add
add
dec
ficompl
and
sub
cmpsl
mov
pusha
sbb
outsb
sar
outsb
push
push
mov
cmp
sbb
add
cmp
pop
or
or
or
cmp
cmp
mov
mov
andl
cmpsb
stos
dec
and
lahf
fmuls
pop
cmp
shlb
call
bound
mov
fsub
jmp
mov
xor
outsl
pop
cmp
stos
orl
into
jmp
fstps
add
jg
jg
cmpsl
in
xlat
pop
push
sbb
inc
dec
dec
pusha
xchg
mov
sbb
adc
das
subb
inc
push
popf
jle
pop
mov
mov
iret
loope
and
ja
popa
add
movlps
push
sub
clts
fcmovbe
or
add
repnz
sub
decl
adc
sub
and
dec
dec
sbb
pusha
sbb
loope
pop
pop
cmp
sbb
xchg
shl
out
fistpll
jo
insb
nop
shl
lock
ror
pop
adc
sub
cmp
and
sbb
push
mov
pusha
jle
aad
cld
ficompl
sbb
insb
fwait
mul
aas
nop
fsubrl
in
lock
sar
add
adc
sub
sub
adc
fs
pusha
mov
fdivp
out
lahf
add
lcall
mov
bound
inc
inc
push
inc
inc
dec
jg
sar
iret
out
lods
int3
popf
sbb
push
inc
bound
test
stos
popa
fs
fcmovu
int3
sbb
clc
mull
pop
or
fdivr
fsubrs
imul
insb
lahf
cld
idiv
fidivrs
jne
mov
movsb
in
sti
cli
cli
sti
hlt
pusha
or
pusha
xor
pop
sub
test
lods
sbb
cmc
fdivr
fistpll
cmp
cmp
mov
call
xchg
lret
hlt
incl
std
hlt
loop
or
jns
mov
fsubr
out
inc
mov
sbbb
xchg
test
pop
add
sti
ljmp
xchg
xchg
cltd
mov
call
test
fwait
test
jb
arpl
pop
outsl
std
add
pusha
fdiv
loopne
iret
fiadds
cmp
xor
add
and
mov
mov
fucomi
jmp
repnz
aad
push
push
dec
dec
inc
lods
loopne
sbb
mov
mov
in
mul
loope
repnz
in
xor
pop
mov
jnp
mov
out
ret
xor
ja
and
mov
out
pop
mov
ffreep
ljmp
xor
fldt
mov
mov
jmp
icebp
lock
push
mov
mov
mov
jmp
in
repnz
jecxz
shlb
pop
mov
ljmp
add
repnz
xor
pop
bound
iret
pop
dec
lcall
add
adc
mov
aas
xor
adc
xor
es
insb
fcmovnu
add
adc
add
inc
push
adc
adc
mov
int3
outsl
dec
dec
add
dec
dec
jle
push
push
mov
in
mov
pop
push
inc
inc
push
dec
inc
add
pop
pop
cs
pop
add
gs
add
stc
pop
add
insl
push
dec
dec
add
dec
dec
ds
insl
aas
mov
es
push
jp
add
add
add
push
add
idivb
je
fwait
fwait
jns
dec
jl
ds
call
xchg
xchg
cs
add
add
mov
outsb
nop
mov
jne
neg
cld
testb
xchg
mov
lcall
cwtl
add
mov
pop
mov
call
ret
add
roll
or
in
sti
incb
pushf
xchg
add
cmpsb
sahf
push
lahf
nop
jle
lahf
mov
fwait
mov
xchg
mov
mov
add
xchg
push
nop
ss
xchg
dec
xchg
add
movsb
mov
mov
add
scas
test
adc
testb
mov
mov
mov
mov
jbe
inc
imulb
mov
cmpsb
mov
fwait
inc
mov
rolb
fs
leave
or
lcall
push
int3
aad
add
ds
inc
add
push
mov
ret
add
mov
ror
sub
rolb
mov
aad
pushl
lret
dec
xlat
int3
xlat
into
ds
add
ror
add
ror
fnsave
fcoms
fcom
push
rcl
sar
lahf
outsl
mov
leave
fxch
add
iret
add
divb
add
push
out
pop
loop
xchg
aam
add
fld
push
lods
insl
mov
push
std
fcomi
fists
xor
loope
fwait
idivb
in
in
out
in
add
loope
add
call
loopne
mov
js
out
lock
push
in
std
mov
mov
ds
jecxz
cli
jecxz
in
repnz
add
out
insl
ret
scas
ds
inc
cmc
out
in
in
ss
fs
stc
outsb
lock
jmp
data16
inc
rcrb
icebp
xlat
out
outsb
not
loopne
fidivl
fwait
and
jmp
push
fucomip
imulb
jecxz
ss
pop
mov
add
ljmp
out
call
outsl
fcomi
loopne
mul
ds
loope
add
ljmp
push
mov
fcomi
out
push
stc
jmp
out
outsb
call
sahf
mov
insl
aas
pop
call
scas
out
push
out
es
fstps
call
mul
repnz
mov
cli
lock
repnz
icebp
out
cmpsb
mov
adc
xchg
push
cli
repz
lcall
cld
push
cmc
sti
ss
sti
jl
xor
idiv
into
clc
out
sti
xchg
push
jmp
fldl
push
shr
out
jo
cmc
hlt
outsb
lods
fnsave
lock
push
std
hlt
push
cld
div
ds
push
hlt
div
stc
fadds
clc
mov
insl
divl
lock
push
cld
clc
ss
stc
imull
dec
cli
ljmp
stc
add
div
cli
cld
call
push
cli
sti
ss
push
push
ds
std
cld
sti
push
addr16
mov
jmp
std
std
add
xlat
add
sbb
add
pop
sahf
push
mov
cmp
out
xlat
clc
out
incl
mov
loopne
idiv
rolb
add
lret
decl
or
cli
xchg
mov
rol
lcall
or
aaa
pop
incl
push
or
and
sbb
push
or
mov
rol
xchg
addl
push
sbb
pop
and
or
sub
dec
xor
dec
dec
add
fwait
cmpsl
test
jecxz
lret
sahf
xchg
cltd
add
xor
aas
inc
pop
dec
js
push
push
fs
mov
lret
fnsave
lahf
out
pop
pop
xor
pop
jmp
lahf
push
lods
je
arpl
mov
out
jecxz
loope
repnz
clc
stc
daa
mov
jbe
lods
push
pop
popa
sarl
jns
in
lcall
cwtl
ret
repz
lock
ljmp
mov
icebp
stos
xchg
in
mov
xchg
popf
ret
rcl
into
aas
mov
repz
sar
scas
xor
gs
ja
shrb
rcr
imul
push
pop
pop
pop
pop
outsl
jo
jae
decl
pop
test
sti
or
push
inc
inc
inc
mov
incl
inc
ds
aas
inc
inc
inc
inc
push
pop
or
xor
test
mov
sbb
adc
xor
loopne
bound
sbb
add
xor
scas
cmp
pop
and
and
dec
sbb
sbb
mov
fiadds
negb
inc
rcr
xor
push
shrb
mov
dec
loopne
in
jns
push
dec
xor
cs
adc
pop
out
pusha
fistps
push
je
je
stos
lods
add
mov
jp
xor
xor
sub
icebp
mov
ss
fbstp
sti
testl
xor
mov
mov
pop
and
pop
dec
bound
cmp
addr16
aaa
mov
or
pop
sub
es
das
bound
into
dec
dec
pop
xor
push
addr16
stos
daa
mov
das
test
push
xor
and
ja
push
push
fs
push
and
mov
push
and
decl
xchg
add
fs
xchg
mov
fs
popa
outsb
call
jle
sbb
add
ret
pop
cmp
ss
testl
mov
das
fcompl
lea
aad
mov
lcall
dec
sub
push
jle
jl
fmuls
adc
in
push
jnp
pop
pushf
add
repnz
faddl
adc
pop
pop
pop
adc
pop
repz
cmp
mov
pop
mov
and
cmp
add
or
insb
pop
es
inc
cmp
lods
pop
mov
pop
push
pop
pop
push
insl
mov
pop
mov
iret
push
xor
dec
dec
push
adc
add
sbb
fcmovnu
and
add
daa
cmp
cmp
push
shlb
sub
cmpsl
out
push
shlb
scas
push
cmp
push
inc
in
cmp
cmp
push
test
inc
push
push
add
cmp
int
pushl
ds
add
cmp
add
dec
xchg
pop
fnsave
pop
xor
insb
mov
pop
push
insb
es
jae
pop
push
and
and
daa
pop
fildll
push
aas
pop
imul
outsb
add
popa
jbe
ja
jp
or
mov
fwait
jnp
jge
je
jg
arpl
inc
mov
add
inc
inc
inc
das
inc
dec
inc
push
dec
inc
aaa
dec
jae
push
dec
push
dec
push
push
push
push
push
push
or
add
pop
push
aas
pop
fs
inc
push
mov
insb
mov
push
push
arpl
out
push
pop
insb
add
int
pop
push
push
push
add
fs
cld
data16
push
imul
jb
jae
je
je
jp
mov
flds
jg
jnp
jnp
jae
out
jp
push
mov
push
fs
add
jb
push
jl
divb
add
or
pop
mov
fwait
and
outsb
shlb
mov
cmpsb
sub
xchg
movsb
into
lahf
scas
mov
mov
orl
xchg
jbe
mov
xchg
mov
jnp
cltd
movsl
add
mov
push
fsub
ja
les
or
leave
rcl
mov
jns
cmc
add
mov
outsb
mov
mov
mov
mov
xchg
add
xchg
cltd
cmpsb
xchg
push
push
pushf
cwtl
sub
rclb
add
mov
mov
mov
scas
add
add
mov
add
push
lods
es
fsubrl
mov
add
or
add
mov
fwait
testb
mov
mov
mov
mov
data16
push
add
mov
mov
dec
les
shll
test
test
add
fnstsw
cmpsb
mov
les
movl
insl
aaa
cs
enter
ret
into
into
shrl
in
into
movb
lret
add
into
int
push
rorb
imul
ror
push
ror
ror
cs
jl
int3
not
aam
rolb
add
push
aam
xlat
roll
rcr
add
aam
aam
insl
xchg
cmpsl
push
inc
fcmovu
mov
flds
add
push
add
mov
jbe
add
fiadds
push
fninit
dec
fucom
frstor
fistl
repz
aam
add
loope
jecxz
fstps
add
in
out
dec
sti
xor
jmp
in
call
in
xor
std
outsb
out
out
jmp
jmp
in
mov
in
add
out
negb
ror
mov
push
lock
repz
hlt
int
repz
hlt
add
hlt
div
add
add
add
add
test
cwtl
sti
push
pop
jg
in
inc
cmp
pusha
cmp
sbb
pop
insb
pop
stc
jg
in
sbb
pop
or
or
pop
incl
push
pusha
push
sub
call
data16
decl
sbb
xor
xor
psubsw
or
pop
xor
push
iret
push
and
adc
or
xchg
inc
xor
jl
push
cmp
xor
mov
mov
cmp
mov
in
sub
adc
popa
push
sbb
pop
cmp
dec
adc
xchg
out
xchg
js
dec
inc
cmp
xor
sbb
or
sahf
xor
inc
lock
mov
inc
xor
xchg
xor
pop
adc
dec
pop
or
testl
pop
sbbb
adc
sahf
mov
js
lods
dec
add
xor
adc
out
jg
pop
xchg
lret
xchg
jne
lcall
incl
in
or
pusha
or
rolb
dec
xor
lcall
stos
lcall
add
pusha
add
mov
dec
pop
scas
mov
orb
test
dec
cmp
jge
cmp
ljmp
jl
mov
cltd
scas
mov
out
shlb
mov
push
pop
push
cmp
jge
xchg
popf
mov
loope
loope
mov
cwtl
xchg
idivb
pop
push
jg
dec
or
mov
mov
lock
mov
cld
xchg
mov
jns
pop
in
outsl
dec
shlb
ja
call
scas
in
jge
dec
xor
cmovns
out
inc
jmp
dec
cmova
in
add
inc
dec
jno
xlat
lock
lock
jno
outsl
and
ljmp
pop
pop
fwait
mov
shll
sub
jecxz
fwait
pop
lea
jmp
pop
sub
mov
mov
pop
sub
decl
stc
aas
cmpsl
mov
inc
dec
jle
xchg
mov
dec
sub
add
lcall
sub
ds
mov
inc
aaa
xor
adc
add
std
jg
adc
and
sbb
adc
sbb
add
pop
push
push
sbb
test
and
outsb
push
sub
pop
das
pushw
pop
cs
adc
es
dec
push
imul
sub
and
add
lahf
jmp
mov
mov
dec
mov
add
or
data16
jbe
loop
loopne
mov
adc
mov
pop
or
leave
ficoms
jnp
cld
out
lret
stos
outsl
or
movsl
xchg
ljmp
aaa
or
pushf
mov
into
in
mov
dec
jle
and
pusha
or
dec
jbe
push
mov
xchg
add
add
test
dec
inc
cmp
or
loop
call
xor
cmp
jns
mov
lock
cmp
xor
xor
clc
pop
add
xor
inc
add
add
mov
insl
or
or
adc
mov
adc
push
sbb
or
add
adc
add
ljmp
sbb
and
adc
sub
nopl
es
pop
cs
add
and
add
sub
add
sub
add
push
cs
cmp
ss
test
and
push
xor
es
push
push
inc
ds
inc
outsb
arpl
add
in
outsl
cmp
sbb
push
add
dec
inc
add
push
push
aas
pop
add
dec
jo
inc
scas
adc
dec
outsb
add
inc
xor
add
cmp
outsb
dec
push
pop
dec
inc
jo
dec
je
jge
add
pop
pop
push
clc
scas
std
out
pop
es
dec
add
push
pop
add
jo,pn
imul
inc
pusha
xchg
pop
jbe
add
sub
data16
mov
mov
pop
fs
add
jns
inc
add
sahf
jl
dec
call
cld
in
add
add
push
imul
stc
idivl
je
addb
fs
insl
bound
bound
jp
imul
data16
jne
js
imul
push
jo
outsl
in
repz
jle
jge
mov
add
ja
sub
fucomip
mov
cmpl
jg
add
and
testb
rcrb
add
ds
jge
add
mov
test
jg
cltd
cltd
ss
mov
xchg
jle
nop
xchg
push
xchg
xchg
push
mov
add
cltd
jle
mov
mov
adc
lahf
popf
push
mov
subb
flds
popf
mov
add
mov
insl
mov
mov
mov
push
and
pop
jg
decl
lds
push
test
push
sahf
mov
add
into
add
insl
mov
inc
mov
mov
add
cmc
add
lcall
add
mov
push
test
adc
in
cmpsl
mov
lods
sahf
cmpsb
lods
mov
fisubl
test
aam
ret
cmpsl
mov
push
xlat
in
fnstenv
sahf
push
mov
pop
mov
fbld
lods
movsl
add
mov
push
test
mov
mov
divb
outsb
mov
mov
lock
mov
mov
mov
fnstsw
mov
mov
enter
leave
leave
vcvtpd2dq
insb
push
leave
into
ret
push
mov
push
aam
test
fadds
rcl
out
loope
cmpsb
in
add
mov
fcmovb
cmpsb
int
adc
mov
iret
rcr
mov
inc
add
rcr
rolb
jmp
ficompl
fcmovu
push
loop
loop
fmulp
out
ss
ss
loop
insb
pop
push
in
dec
fsub
cs
push
add
push
in
data16
scas
fdiv
out
add
lock
out
in
push
stc
shlb
jmp
repz
jmp
push
sti
fsubs
repz
dec
mov
fidivs
lcall
push
loopne
div
cmp
popf
loopne,pt
call
sbb
sti
pop
cs
jo
ja
cli
push
decl
cli
cli
fstpl
addb
mov
push
dec
cmp
ficomps
pop
push
sub
or
cmp
cmovg
add
add
push
push
jge
jl
jns
adc
cmp
add
and
fstpt
push
stos
shrb
scas
add
shr
pop
repz
rol
cmp
jle
add
mov
push
scas
ret
ret
int3
ret
ret
lds
ret
push
adc
push
mov
fcomp
fstp
div
hlt
je
cli
or
cli
sub
fst
faddp
rcrb
icebp
hlt
sub
fcmovnu
and
into
ret
add
into
aad
aad
push
mov
mov
add
into
int3
iret
fcomp
fbld
hlt
add
mov
inc
insb
js
in
jbe
js
add
or
jae
push
je
jp
add
mov
and
jb
jb
pop
pop
pop
pop
pop
insl
outsb
jae
mov
sub
int
outsl
lahf
xor
jnp
add
jle
mov
into
insl
fdivs
mov
pop
cs
push
out
inc
scas
jp
jp
mov
mov
int3
enter
jg
lods
outsl
adc
inc
jns
push
xchg
call
xchg
xchg
mov
mov
int
repnz
cld
add
incb
cld
cmpl
adc
or
cld
hlt
stc
repnz
lods
push
out
cmpsb
mov
loope
xchg
ja
imul
outsl
xchg
cltd
lods
mov
in
idivb
cld
int
lret
stos
pop
adc
jae
dec
add
dec
add
mov
dec
dec
push
dec
dec
dec
push
push
push
add
dec
dec
ss
ss
ss
dec
sbb
jbe
loopne
push
push
sbb
sub
sub
sub
sub
int
filds
dec
dec
push
push
pop
pop
imul
insl
push
mov
push
imul
jbe
jne
jnp
je
jbe
xchg
jg
jge
incl
movsl
xchg
xchg
jnp
jp
cmp
pop
pop
pop
push
add
pop
fdivp
pushl
imul
xor
ds
arpl
in
or
cld
sti
cmp
loope
sti
push
sbb
into
sub
std
mov
call
or
out
out
sarl
ds
cmp
ljmp
xchg
xchg
cltd
mov
mov
jnp
jge
push
insb
inc
mov
insb
enter
inc
push
ss
call
test
inc
dec
or
and
out
insb
push
sub
push
xor
dec
out
outsl
in
push
push
add
gs
push
insl
in
push
xchg
add
push
addr16
and
xchg
jp
loopne
jp
xchg
xchg
xchg
mov
insl
push
je
jbe
xchg
mov
fisubl
mov
mov
mov
leave
add
outsl
mov
ror
push
mov
cmp
mov
and
and
mov
mov
ljmp
adc
hlt
test
icebp
or
and
and
clc
cld
int
shll
cli
outsb
cmp
div
imul
ljmp
nop
push
movsl
mov
arpl
mov
stc
mov
pop
jns
adc
inc
dec
inc
inc
inc
sub
orl
sub
xor
add
xor
sub
sbb
mov
inc
ss
repnz
jo
adc
sbb
outsb
insl
push
add
push
xchg
nop
adc
ret
loope
outsb
gs
or
jle
out
jg
xchg
xchg
movsb
cli
cmpsb
lods
lods
mov
mov
cmpsl
lods
lods
cmpsl
cmpsl
sar
jmp
and
adc
cmp
cmp
fwait
mov
out
test
xor
inc
stc
lret
cld
clc
les
jmp
repnz
or
clc
cld
arpl
mov
clc
repnz
imul
cmp
out
imul
out
add
or
add
lret
mov
push
or
lock
aaa
dec
and
lret
fs
sbb
xor
fadd
out
adc
pop
pop
sub
pop
add
dec
out
xor
inc
dec
ss
dec
xor
dec
mov
pop
push
push
push
dec
sbb
jecxz
cmp
dec
jno
inc
push
jnp
push
lock
pop
fs
addr16
pop
jnp
outsl
fs
dec
dec
cmp
pop
ret
push
sbb
xchg
mov
cs
push
cmp
insb
ja
sbb
adc
cmp
cmp
cltd
mov
rcr
fucomi
idivb
inc
lds
add
negb
or
imul
adc
repz
out
ljmp
loop
mov
inc
sbb
push
push
sub
push
rorl
inc
inc
lock
in
sub
inc
clc
or
mov
fisttpl
push
push
and
and
jo
inc
jl
sub
dec
or
not
data16
push
sbb
je
sbb
xchg
dec
xchg
and
pusha
and
cs
jb
dec
fs
jb
je
mov
xchg
movsl
movsl
stos
sbb
insb
jb
inc
lods
mov
mov
xchg
imul
mov
addl
mov
out
sub
xchg
or
clc
clc
out
loopne
add
sti
std
and
ret
leave
in
push
das
inc
and
mov
out
xlat
enter
mov
mov
std
mov
imul
popf
mov
mov
dec
lock
mov
lods
push
clc
aas
pop
adc
mov
cmovge
adc
adc
je
inc
or
or
inc
inc
pushf
sub
cmp
and
jge
pop
add
push
push
dec
dec
ss
aaa
dec
dec
dec
aam
xor
inc
pop
pop
add
inc
jo
out
xor
jb
outsl
cmp
inc
gs
push
daa
sti
push
push
popa
outsb
adc
jl
sbb
push
jg
adc
lods
scas
lods
add
pop
xor
xchg
push
xor
daa
cmp
mov
cmp
mov
fdiv
adc
shl
mov
push
mov
in
lock
in
lock
popf
cs
or
cmc
push
pusha
or
iret
stos
stos
or
loop
std
movsb
and
sarb
xchg
cltd
mov
mov
lock
es
sbb
dec
jl
inc
push
mov
es
add
add
inc
sub
test
push
movsb
sbb
push
cs
cmp
xor
xchg
fisubl
inc
push
call
sbb
sbb
sbb
cs
pop
lods
jmp
pop
inc
pop
adc
push
cmp
add
xor
addr16
xchg
cmp
mov
sub
cmp
dec
dec
jp
xchg
jbe
push
aaa
xlat
mov
test
jb
mov
push
sub
jl
pop
or
xlat
xlat
jecxz
in
xor
mov
dec
cli
dec
cmp
hlt
or
call
js
sub
mov
cmpsb
movsb
cli
psubq
movsl
xchg
mov
hlt
jg
mov
mov
stos
movsl
pop
fidivrs
pop
dec
inc
dec
inc
inc
imul
or
push
sbb
dec
dec
xor
in
aas
out
sbb
mov
sub
cmp
ss
mov
cmc
jg
push
dec
xor
cmpb
mov
adc
and
outsb
dec
outsb
mov
ds
sbb
or
pop
loope
pop
cmp
ficompl
cs
adc
outsl
pop
jo
mov
mov
xchg
or
cmp
pop
mov
cmp
je
pushf
call
lret
test
mov
fstp
jecxz
push
fidivl
cmp
add
inc
inc
cwtl
loopne
push
xor
lods
jecxz
push
out
add
pop
int
or
cli
shr
mov
mov
xor
in
or
movsl
cmp
adc
jmp
adc
mov
repnz
inc
mov
call
es
inc
xor
ja
cmp
sbb
cmp
ss
shrb
loop
dec
inc
sub
sbb
jo
imul
adc
outsl
cli
and
add
dec
push
push
xor
and
ss
dec
dec
dec
pop
sbb
push
cwtl
lcall
or
filds
add
mov
je
outsb
fs
call
jle
pop
mov
or
lcall
push
pop
adc
jmp
xchg
xorb
insl
add
cmp
enter
dec
xchg
test
fnstenv
fucomp
lcall
ljmp
out
fcmovnu
lret
rcl
fldz
and
fs
add
ss
int
xor
sub
into
movsl
cmp
push
scas
mov
or
out
or
je
ret
iret
insb
prefetcht2
and
inc
sub
pop
sarl
sbb
inc
xor
xor
inc
pop
aas
cwtl
sbb
cmp
add
sub
sub
xor
and
dec
fisubl
push
dec
inc
xor
and
dec
dec
fdivr
ds
xor
fisubrs
je
push
cmp
pop
pop
inc
pop
aaa
or
or
cli
xchg
call
push
push
push
dec
dec
push
filds
pop
loopne
mov
jnp
outsl
lock
sbb
or
mov
xchg
cmpsb
cltd
sbb
pop
push
int
leave
les
leave
out
mov
clc
pop
repz
cld
rcl
ror
leave
add
outsl
jg
in
int
fstps
inc
cltd
mov
es
pop
cmpsb
jne
inc
fsubl
sbb
bound
stos
cli
movsl
mov
mov
push
iret
jae
pop
inc
inc
add
pusha
add
add
popa
xor
sub
sbb
shl
cmp
lock
pop
ja
addl
dec
inc
mov
add
mov
dec
jo
icebp
mov
or
add
adc
js
cmp
dec
xor
ljmp
stos
loope
adc
pop
dec
xor
xor
or
gs
je
jg
jnp
push
nop
addr16
xchg
and
jbe
pusha
push
bound
xchg
xchg
xchg
mov
or
pop
or
sbb
repz
mull
ljmp
xchg
insl
or
lret
push
cwtl
outsb
lods
sbb
sarl
jo
push
les
pop
outsl
mov
ss
push
jl
mov
add
mov
in
push
mov
inc
inc
add
or
add
inc
adc
cmp
or
add
pop
push
add
adc
push
mov
cmp
lcall
xchg
dec
pop
cmp
push
xor
adc
fdivl
jmp
and
xor
sbb
insb
dec
gs
pop
push
xor
and
xor
dec
pop
sbb
je
push
sub
das
cli
incl
cmp
outsb
xchg
ja
xor
cs
les
idiv
cmpsb
lret
ds
aam
fstp
lret
cwtl
imul
cmp
lcall
mov
mov
andl
sti
or
sbb
fimull
mov
and
or
mov
and
push
xchg
adc
push
jns
xor
lcall
inc
add
xor
inc
inc
inc
sar
bound
push
adc
and
add
and
sub
ds
lock
sub
or
mov
adc
push
adc
cmpb
and
in
mov
push
in
inc
mov
dec
sub
andl
push
push
or
and
daa
scas
cmp
push
xor
pop
pop
pop
cli
push
dec
and
or
push
jae
and
push
sti
pop
icebp
aas
lahf
mov
scas
pop
xchg
imul
and
push
xor
mov
ret
lret
mov
push
aam
enter
sbb
and
add
cmp
cmp
ja
andl
push
scas
int3
ljmp
pop
movsl
pop
jbe
scas
jg
or
test
cli
mov
or
gs
icebp
lock
push
push
push
inc
add
sbb
cmpsl
ret
sub
inc
sub
cmp
orl
lods
jmp
pop
or
push
and
jbe
jg
flds
dec
inc
inc
sub
in
pushf
and
inc
pop
push
add
mov
cmp
call
sub
inc
pop
rolb
addb
insb
outsb
ljmp
xor
orl
adc
ds
push
xor
je
mov
adc
pop
cs
add
push
and
lret
push
lret
fadds
int3
mov
cmp
cmpl
push
push
push
ds
stos
add
xor
fwait
cld
add
mov
nop
fsubl
outsl
stos
scas
stos
lods
stos
lods
stos
test
or
mov
insb
comiss
inc
add
inc
lcallw
cmp
sbb
seto
mov
sbbb
and
mov
mov
or
push
sub
or
call
pop
adc
mov
dec
inc
pop
push
sub
mov
jmp
dec
inc
xor
test
mov
inc
clc
addr16
push
add
aaa
sbb
popf
test
or
or
cmp
and
push
jnp
mov
cmp
adcb
js
push
mov
adc
sbb
mov
adc
daa
daa
and
and
stos
mov
xor
test
pop
jno
ja
divb
and
movsl
push
scas
dec
andb
pusha
pop
jp
sbb
sbb
sbb
mov
pop
pop
or
add
sbb
add
sub
pop
push
sbb
or
mov
mov
mov
pop
sub
add
in
or
or
sub
out
inc
inc
push
sahf
cmc
mov
sub
dec
dec
sbb
push
and
test
mov
cmpsb
xor
or
in
mov
add
loop
or
cmp
sbb
add
jno
sbb
xor
mov
and
xor
testb
mov
les
xchg
scas
xchg
ja
outsl
imul
scas
mov
fcoms
lea
outsb
daa
es
int3
iret
push
sti
in
pop
ss
outsl
xor
pushf
movsb
and
scas
pop
or
mov
movsl
ds
push
mov
rolb
adc
insb
xor
xchg
xlat
sbb
aas
push
add
popa
aaa
mov
add
sbb
adc
sbb
jo
sub
imul
lcall
jl
or
adc
push
adc
inc
inc
inc
add
or
or
sahf
lret
cmp
pop
or
hlt
lahf
in
sub
je
mov
sbb
lcall
xor
aaa
xor
adc
sub
sbb
pop
and
xorb
ljmp
fsubrl
add
or
jg
pop
aas
mov
xor
outsl
add
xor
push
imul
or
mov
mov
adc
shrl
and
pop
sbb
inc
ret
pop
cmpxchg
pop
cmp
sub
jno
adc
rcrl
shll
or
or
and
call
sbb
mov
xor
sti
push
mov
pusha
popf
adcl
sbbl
push
out
or
fwait
xlat
ljmp
mov
add
sub
adc
push
inc
lock
or
lret
jmp
push
xor
test
xor
xor
subb
insb
pop
dec
sub
xchg
and
cld
mov
add
test
imul
adc
outsl
aaa
or
pop
and
imul
pushf
mov
lods
fcomps
in
pop
sbb
fmul
iret
fadd
ja
mov
or
pop
std
add
scas
test
xor
and
sub
mov
pop
jge
jnp
inc
das
sbb
test
or
or
and
rolb
fists
call
sbbl
sbb
mov
mov
popf
test
push
test
pop
jne
pop
inc
add
cmp
sti
and
add
mov
xor
pop
ret
stos
push
das
dec
mov
pop
jno
cld
mov
pop
dec
sbb
lea
xor
and
mov
lock
mov
pop
or
loopne
mov
mov
xor
imul
cmp
xor
ds
popf
cmc
lcall
push
fdivrs
cwtl
test
sbb
sub
imul
mov
into
mov
inc
jg
outsl
sub
aad
push
sub
ljmp
shll
sbb
or
negb
push
mov
loopne
sbb
adcl
scas
scas
incl
push
sub
push
js
jbe
inc
pop
sbb
cmp
sbb
pop
sti
pop
pop
xchg
nop
and
xor
movl
inc
cmp
dec
addb
push
and
jmp
loopne
data16
jg
scas
add
ret
sbb
adc
cmp
in
mov
aas
cmp
popf
ljmp
fcomip
mov
fadd
xchg
cmp
movsl
push
pusha
push
inc
push
lcall
scas
adc
sbb
jns
jno
inc
inc
inc
sub
js
and
sbb
dec
insb
out
or
mov
sub
lods
mov
sub
mov
add
call
xor
pop
jl
mov
or
push
pop
push
xor
and
lods
clc
cmp
mov
pop
dec
clc
add
cs
cmc
call
or
push
and
push
xor
je
or
push
add
add
lock
incl
fimuls
lcall
mov
arpl
mov
out
lock
call
lcall
ss
lret
push
mov
and
loope
pop
stos
or
mov
and
fidivs
movsl
movsl
mov
iret
pushl
les
pop
sbb
push
inc
inc
inc
inc
inc
test
or
push
mov
sbb
xor
adc
xchg
lcall
lcall
jge
xor
sub
clc
mov
out
call
ss
mov
mov
pop
gs
dec
sub
call
lock
imul
mov
or
cmp
adc
rorb
push
cs
push
enter
mov
data16
filds
push
mov
in
mov
imul
cmp
test
jg
nop
lcall
xchg
fdivr
lock
fdivrs
sbb
cwtl
pop
mov
push
or
lret
sub
or
lods
adc
shll
add
jnp
aaa
loop
arpl
insb
lock
orb
aas
adc
mov
sub
adc
fildll
lahf
fwait
and
scas
inc
inc
sub
and
and
mov
add
xor
aaa
lcall
adc
daa
mov
push
mov
push
push
adc
pop
sbb
fdivs
notb
es
dec
out
add
cmp
sbb
jb
in
sub
push
pop
js
jmp
test
int
cld
lock
mov
lock
icebp
int3
int3
lret
mov
xor
sbb
arpl
stc
mov
xchg
xchg
fprem
std
sbb
add
fst
cwtl
ds
sbb
jg
movsb
aas
mov
or
aam
int
les
mov
mov
adc
lea
adc
pop
cmp
xchg
push
push
test
inc
inc
movsb
ret
shrb
sbb
orl
movsb
and
popf
mov
stos
outsb
jp
add
sub
pop
decb
mulb
mov
cmp
push
dec
add
xchg
xor
push
addb
test
and
jo
push
aaa
push
lea
inc
shl
mov
insl
dec
and
cli
fwait
push
mov
cld
ja
mov
aas
pop
outsl
lods
or
mov
xor
fmul
pop
adc
in
in
stos
lret
fstp
fildl
mov
push
out
xchg
cmpsb
fnstenv
std
push
sti
pop
out
popa
xchg
fisttpl
xor
movsb
lcall
mov
int3
cwtl
enter
lret
push
xor
inc
mov
leave
push
ret
stos
stos
adc
xchg
push
mov
inc
push
sub
or
inc
and
sbb
pop
mov
push
xor
mov
mov
and
dec
push
test
jne
lcall
dec
dec
dec
sub
in
xchg
and
setae
movsb
adc
push
jmp
or
and
push
xor
test
jg
jb
aas
push
push
adc
push
js
hlt
shl
call
add
mov
leave
enter
rcr
aam
orb
and
mov
lock
fnstsw
popf
in
shlb
jg
add
add
std
pop
and
rcrl
imul
pushf
sahf
jmp
mov
xor
es
or
push
lods
or
sbb
ficomps
pop
jno
xor
add
call
mov
mov
mov
pop
add
push
sub
addl
xchg
cli
fbstp
dec
push
push
push
xor
cmc
mov
xor
dec
xor
pop
adc
mov
cmp
and
and
or
dec
cs
pop
xchg
adc
jg
outsl
push
cmp
jecxz
loope
lock
push
xchg
push
cmpsb
adc
leave
out
shr
fcom
fcom
rcl
mov
cmc
xchg
out
lock
pop
mov
mov
sbb
stc
out
dec
or
pushf
into
insb
hlt
add
divb
cmp
mov
call
cmpb
or
push
test
mov
dec
jge
insb
dec
lods
adc
xchg
aad
or
pop
jge
push
sbb
sub
cmp
cmc
inc
adc
aas
sbb
dec
add
cmp
adc
xor
cmp
add
adc
ljmpw
fstl
sbb
pop
pop
push
xor
fwait
loop
sahf
mov
mov
das
fmull
je
xchg
sbb
sub
push
pop
push
aaa
das
jbe
loope
loopne
pushf
jp
xchg
jnp
push
int
mov
mov
loopne
loop
mov
mov
out
cmc
in
test
bound
outsl
pop
jl
ror
xlat
adc
jecxz
xchg
fucomi
xchg
out
clc
out
mov
ljmp
scas
imul
das
movsb
fwait
sar
jmp
or
mov
mov
jno
cmpsb
xchg
push
data16
mov
mov
add
in
sub
jno
pop
aas
push
dec
inc
dec
sbb
xor
jle
sub
clc
fwait
hlt
rcrl
push
dec
sub
loop
lahf
popf
and
add
sbb
push
xor
or
sub
add
push
push
pop
pop
xor
subb
pop
pop
add
push
clc
add
mov
push
loopne
mov
ja
hlt
out
ds
lahf
mov
shlb
popa
aaa
xor
lahf
fsubrp
call
mov
dec
and
popf
xchg
add
push
lcall
loope
xor
sbb
sarl
mov
fistpl
cmp
fnstenv
sbb
icebp
decb
jecxz
jo
adc
pop
lret
in
clc
fistps
movsb
or
mov
ljmp
in
or
popf
outsb
idivb
cltd
mov
lret
sarb
ss
mov
mov
mov
fisubrs
mov
pusha
and
xor
mov
and
sbb
test
add
or
mov
or
cmc
cmp
and
push
inc
rorb
pushf
cmp
dec
and
mov
add
pop
popa
and
dec
pop
sbb
std
dec
xor
mov
cmpl
decb
dec
and
nop
outsl
mov
jmp
sub
lea
jne
mov
cmpsb
xchg
pusha
aas
adc
mov
xor
adc
data16
push
ror
xlat
fstp
insb
out
out
mov
mov
add
mov
push
out
stc
enter
orl
stos
repnz
mov
cmp
xchg
mov
lret
mov
loopne
popf
and
cwtl
mov
mov
add
enter
push
adc
mov
arpl
adc
pop
jae
int3
adc
mov
sbb
and
push
pop
or
orb
push
fs
out
cwtl
stc
sbb
out
push
add
push
pop
add
add
andl
mov
jo
mov
xor
or
mov
add
popa
jle
adc
je
pop
pusha
xor
ja
push
aam
cld
jne
popa
das
sbb
push
lods
xor
mov
outsl
cmp
or
rolb
push
jecxz
loop
out
lock
add
cwtl
push
jmp
addr16
jno
lahf
loopne
fstpl
pmuludq
sar
loopne
fstp
in
xor
push
and
mov
cwtl
push
cmp
rcl
xlat
rcl
push
iret
jo
adc
adc
mov
pop
mov
clc
jg
test
dec
push
mov
out
in
shll
push
cmp
lcall
dec
ss
jecxz
shl
outsb
xor
pop
pop
ret
add
add
movaps
jo
add
jbe
sbb
aaa
test
outsl
push
xchg
jbe
mov
popa
dec
jbe
aas
addr16
loopne
cmp
lds
cmp
or
das
xchg
lea
loop
sahf
or
sbb
out
or
mov
test
mov
and
xor
popa
lcall
cld
hlt
icebp
fmul
jl
cmpsb
pushl
cmp
cwtl
fucomi
out
adc
mov
fstp
aaa
xor
movsb
rcrl
sarb
push
mov
and
imul
movups
push
push
add
sbb
cmpsl
add
sub
adc
fbstp
mov
pop
sbb
push
adc
orl
gs
popa
adc
sbb
pop
add
cmpb
xor
add
cmp
outsb
or
in
popa
push
push
data16
ja
xchg
lcall
mov
jbe
push
xchg
ja
outsb
imul
push
aaa
xor
das
and
pop
and
xchg
es
mov
and
or
dec
xor
cmp
mov
shrb
scas
outsl
push
pop
sbb
or
fidivl
shr
mov
mov
hlt
sbb
push
mov
cmp
cmp
xor
mov
fwait
push
and
sbb
rol
loop
mov
lock
notb
jo
rcll
arpl
ss
dec
repnz
or
jbe
mov
push
dec
test
jl
dec
and
sbb
iret
je
pop
push
fs
mov
and
imul
mov
or
adc
sbb
call
in
sub
add
arpl
cmp
mov
dec
decl
add
sub
cmp
sbb
je
push
cltd
jbe
add
out
add
jnp
or
cmc
lock
cmp
cmp
popf
in
mov
xchg
pop
dec
hlt
aam
xchg
sbb
fdivr
test
movsl
test
mov
fcmovnu
or
clc
je
and
mov
shl
rclb
sar
xchg
ss
mov
les
lods
outsb
mulb
pop
xor
sub
inc
sar
sbb
dec
dec
aaa
sub
es
pushf
call
dec
fwait
and
or
setno
sbb
or
mov
rclb
cmp
dec
push
mov
jb
outsl
je
jp
jle
mov
push
sbb
xchg
ja
inc
push
or
xchg
lret
fs
loopne
mov
jl
add
rorb
pop
nop
xchg
cltd
or
ret
jmp
es
lahf
in
lcall
or
adc
out
push
cmc
ljmp
fwait
xor
loop
cmp
mov
pcmpeqd
lcall
jmp
decl
and
cwtl
xchg
aas
and
and
jb
cmp
in
shl
add
xor
adc
adc
jle
rcrb
mov
mov
hlt
xchg
xor
jno
adc
popf
lock
xor
pop
add
mov
inc
ds
ret
hlt
in
and
adc
mov
popa
xchg
push
call
mov
and
pusha
xor
push
jne
add
cmpsb
jnp
xchg
xchg
jne
add
push
add
or
xor
das
cmp
nop
mov
mov
adc
cld
arpl
arpl
data16
mov
push
rol
or
loop
ljmp
cwtl
cmc
push
shll
fwait
bound
sbb
imul
mov
pop
mov
inc
jl
lock
cwtl
nop
push
inc
es
inc
movsb
fwait
out
mov
loop
roll
add
mov
lods
imul
rclb
jns
clc
jg
push
pop
cli
push
adc
and
sbb
adc
fcomip
dec
lahf
jp
xor
pop
adc
or
repnz
dec
or
gs
mov
cmp
cmp
cld
jne
je
push
xchg
adc
inc
mov
cs
xchg
or
movsb
emms
fsubs
add
cmpsb
or
xchg
std
add
mov
nop
arpl
jp
aaa
push
mov
lock
lahf
mov
adc
adc
or
in
cld
decl
or
leave
cwtl
pusha
fwait
loop
cmc
mov
stc
std
and
or
push
ja
outsl
es
mov
cmpsb
movsb
push
push
adc
orb
daa
xchg
shl
stos
inc
xlat
popa
xor
and
add
sub
imul
pop
sbb
jg
cmp
mov
mov
test
mov
mov
sbb
push
test
mov
data16
adc
sahf
mov
ljmp
outsb
push
xchg
push
or
mov
loope
or
xchg
xchg
add
test
add
xchg
cmpsl
movsb
shll
cltd
mov
mov
xor
mov
xchg
mov
xchg
or
jo
pop
sbb
jl
filds
nop
aas
hlt
test
decl
add
lods
stc
repnz
out
fxch
mov
mov
adc
mov
mov
cwtl
repz
jmp
loop
rcll
loopne
mov
mov
nop
hlt
stos
pop
jg
push
inc
repnz
sub
out
xor
push
mov
mov
add
daa
call
andb
addr16
sbb
and
xor
inc
sbb
sbb
lahf
pushf
fwait
outsb
sbb
sbb
pop
add
mov
or
mov
mov
push
mov
mov
nop
nop
out
sahf
test
pushf
mov
lcall
sub
pop
or
es
ljmp
clc
loope
push
in
aaa
mov
pop
popf
popf
cld
sbb
or
loopne
cli
ret
repnz
movsb
imul
cmp
adc
in
sbb
hlt
push
outsb
adc
loope
daa
mov
xor
repnz
pop
retw
mov
dec
aaa
dec
aaa
ss
aaa
xor
add
mov
or
sbb
add
and
test
or
sub
adc
push
push
pusha
popa
sbb
jmp
and
cmpsb
and
and
xchg
push
inc
test
mov
pusha
inc
jmp
push
xchg
xchg
nop
add
xchg
and
bound
push
je
jo
orl
sbb
in
out
push
push
cmp
and
sahf
test
repz
incb
cmpl
test
pop
or
cli
push
cltd
mov
cs
mov
insb
or
in
loope
push
and
loopne
loopne
rolb
cli
cltd
setae
outsb
les
sbb
xor
pop
data16
xor
push
push
push
pop
adc
xor
data16
add
lods
add
sbb
xor
jne
mov
add
outsl
jne
sub
and
bndldx
clc
jno
syscall
xchg
add
adc
clc
sbb
xor
mov
sub
sbb
sbbl
loopne
dec
pop
loope
cmp
or
in
in
push
sar
cmc
jecxz
cmc
sbb
out
inc
imul
shlb
push
cld
or
jg
push
les
rorl
cwtl
add
lret
sbb
sbbl
ljmp
lods
fidivl
daa
cmp
sbb
mov
pop
pop
data16
clc
jo
rorb
push
or
sbb
mulb
icebp
adc
addr16
mov
es
jb
jb
outsl
xchg
cmp
cmp
add
jbe
je
mov
xchg
push
or
xchg
xchg
push
cmp
pop
xchg
mov
add
mov
ret
mov
mov
xor
loope
je
rcll
nop
jmp
shl
or
lock
scas
jb
push
pusha
shl
testb
cld
inc
jl
cmp
int3
adcb
mulb
sbb
add
or
cmp
xor
in
mov
adc
jle
dec
push
hlt
mov
rcrl
popa
icebp
push
data16
sbb
imul
test
cld
add
insl
or
xlat
aaa
fmuls
outsl
outsl
clc
add
xchg
lret
cmp
pop
adc
or
cmp
notb
mov
pop
or
mov
mov
cmp
add
mov
or
xchg
mov
rorb
xchg
out
fimull
cmpsl
ljmp
out
notb
add
pushf
push
push
int
repz
out
cmp
and
cmc
or
jmp
data16
adc
or
jae
lret
sahf
xor
inc
xchg
cli
pop
sbb
mov
stos
mov
mov
push
movsl
sub
xchg
lods
movsl
cwtl
inc
testb
stos
add
stos
into
push
imul
bound
mov
add
add
call
mov
push
mov
or
jb
pop
fimuls
lcall
out
testl
incl
or
sti
std
or
add
dec
decb
sti
push
outsb
push
jbe
fcmovnu
push
xor
pop
cmp
cmp
mov
and
lcall
decb
sbb
sub
xor
xor
xor
or
rdpmc
xor
std
imul
xor
dec
ss
dec
or
dec
dec
int
fistpl
dec
pop
dec
push
dec
push
add
jnp
jle
add
dec
xor
ds
sahf
or
push
add
push
add
sbb
fnstenv
push
push
pusha
add
jmp
mull
push
push
imul
imul
das
add
pop
push
or
out
dec
add
add
xor
out
into
pop
pop
into
adc
adc
adc
add
pop
push
adc
mov
sbb
push
push
push
add
push
add
pop
push
cmp
add
sti
out
mov
add
add
and
add
add
xor
or
xor
xor
add
push
aaa
dec
add
inc
mov
pop
push
add
dec
gs
jnp
add
add
aas
pop
je
mov
push
sbb
movl
fidivs
add
fmuls
or
fadds
jge
lahf
cltd
add
icebp
or
repnz
clc
push
movb
add
stos
pusha
ret
sahf
dec
or
incb
push
adc
cmc
fstps
ljmp
adc
mov
push
addb
or
mov
cmp
add
pop
pop
add
jnp
add
cmp
mov
lea
push
pushf
test
add
ret
add
inc
int
rcr
add
or
testl
incl
and
xor
mov
lcall
decl
mov
rorb
fiadds
push
in
fucom
pcmpeqd
lock
and
xor
es
or
jbe
jl
lret
shrb
or
js
ja
push
sub
push
pusha
iret
iret
xchg
dec
sarl
mull
adc
dec
add
dec
addb
mov
movsb
mov
add
nop
mov
add
jo
add
enter
aaa
pushl
add
mov
jg
js
xor
js
ja,pn
subb
sbb
or
mov
mov
sub
subb
ds
out
jo
mov
dec
jb
add
push
in
daa
jns
jg
pop
aaa
jae
sub
cmpl
push
add
xor
jnp
add
pop
xor
les
stos
inc
imul
adc
xor
push
pop
mov
cmp
cmp
cmpsb
dec
push
dec
add
iret
insl
sti
cmpsb
pop
xchg
jo
add
ljmp
inc
pop
test
push
ret
hlt
jno
ror
fbld
stos
add
sbb
sahf
in
out
dec
push
xor
mov
das
mov
mov
lret
push
mov
in
outsl
pop
or
inc
pop
add
mov
mov
adc
repnz
push
stc
rolb
add
movsl
push
stos
pop
add
insl
pop
movsl
cmpsl
adc
add
or
pushw
inc
gs
jo
push
jbe
fcomi
jg
int
adc
fildl
push
push
add
cld
inc
add
subb
loopne
jae
sub
adc
adc
nop
addr16
pop
out
addl
orl
add
adc
push
mov
add
cld
movswl
sti
sti
lock
adc
ud0
movups
lea
mov
iret
mov
xchg
fdivr
mov
cltd
xor
pusha
pop
mov
mov
sbb
into
mov
shll
das
mov
pusha
fistpll
cmp
fnstsw
adc
call
call
xor
push
sti
in
out
jg
jg
adc
cmc
hlt
cmc
icebp
add
and
rcpps
ret
xchg
jbe
add
cmpsb
out
int
sarb
nop
outsl
mov
add
shl
loopne
mov
leave
xor
add
daa
pop
in
add
addr16
push
inc
mov
aaa
pop
mov
and
enter
and
push
lret
cs
int3
push
pushf
in
jae
add
pop
mov
sbb
cs
insl
notl
das
add
inc
pop
fcomps
enter
rcrb
mov
dec
addl
inc
loopne
or
add
add
sahf
and
ffree
das
xor
add
add
add
or
xchg
or
push
add
sub
daa
mov
fsubr
stos
add
adc
add
fstps
sub
add
mov
pop
mov
pusha
and
pusha
scas
mov
xchg
mov
xchg
daa
xor
sub
jb
cmpb
sub
xor
push
filds
or
ds
mull
std
mov
mov
add
sub
stos
or
sub
mov
clc
sarb
aad
push
mov
inc
or
or
out
add
sbb
out
pop
lcall
push
push
add
and
adc
add
pushl
adc
xor
xor
add
add
ds
aas
fnstsw
push
dec
and
dec
ds
push
pop
pop
outsl
aaa
pop
jnp
push
jbe
push
add
push
pusha
push
add
or
mov
add
adc
outsb
jno
jl
je
call
push
and
inc
cmpsb
inc
dec
add
jg
stos
push
inc
adc
add
pop
addr16
fbstp
add
dec
inc
into
inc
dec
dec
add
dec
add
dec
add
stos
ss
inc
inc
dec
push
dec
orb
push
pop
insl
fistl
mov
push
push
push
pop
sub
push
ljmp
pusha
push
pop
bound
popa
pop
popa
add
mov
sub
fs
popa
gs
push
push
add
jo
jo
sbb
add
jp
jle
mov
jnp
test
repz
in
push
mov
add
stos
jg
cmp
mov
push
or
imul
push
jae
jp
pop
mov
push
sbb
jp
xor
mov
add
int
or
fwait
in
adc
mov
push
or
in
adc
pmuludq
add
and
add
mov
sbbb
mov
mov
add
mov
pop
mov
add
mov
and
nop
fcomp
mov
into
or
mov
push
fldt
push
sahf
push
pusha
test
jg
dec
push
lahf
lcall
stos
out
mov
adc
ret
scas
or
divb
and
shlb
addl
push
mov
pop
push
adc
out
add
xlat
call
and
jmp
in
repnz
push
xor
push
cmp
sub
dec
sahf
push
out
or
outsb
push
add
sti
add
jl
idivl
mov
orb
fdivs
pushf
xchg
ds
cltd
sahf
fisubrs
insb
push
mov
mov
add
push
popf
xor
scas
or
popf
movsb
jbe
stos
add
ficomps
mov
out
or
push
mov
mov
mov
mov
mov
mov
cwtl
add
sarl
cwtl
mov
xlat
fwait
insl
fsub
push
jecxz
mov
movb
subl
lret
insl
mov
push
mov
aad
rcr
notb
fsubrs
in
es
rep
jmp
mov
lret
push
mov
fidivl
fidivs
mov
mov
lret
push
enter
mov
fucomp
shrb
in
push
xchg
jmp
lock
push
or
lock
ret
fisttpll
push
lock
in
push
loop
enter
into
ljmp
insl
jnp
icebp
scas
jmp
add
in
lock
out
mov
out
repnz
push
aad
decb
push
fdivrp
mov
lods
frstor
out
out
repnz
jmp
jecxz
ljmp
out
xor
in
idivb
jecxz
ljmp
mov
scas
add
std
scas
enter
cmp
cmp
add
xor
cs
add
aas
ss
orb
cmp
add
pop
imul
or
mov
and
sub
lcall
add
mov
or
pop
or
push
adc
cmpsl
or
sti
push
add
lods
lods
test
or
push
cmp
mov
or
lds
ret
push
ret
shrb
lods
stos
jbe
or
push
mov
testl
or
jbe,pn
scas
pushf
sarl
lods
cmp
fcompl
fisttps
out
or
mov
shr
pusha
lds
fadd
cmp
mov
adc
dec
jecxz
out
call
mov
push
loop
or
lods
or
fadd
cmp
out
jbe
es
pop
ljmp
cltd
in
out
imul
push
daa
fadd
cmp
mov
mov
ret
std
ss
call
cmp
dec
sbb
sti
mov
daa
out
pop
or
int3
mov
mov
push
lret
mov
add
daa
pop
negb
sbb
repz
jae
leave
cmp
push
stc
jg
or
or
or
or
sub
daa
clc
sub
or
jmp
mov
dec
inc
xor
xor
aaa
inc
cmp
out
test
stc
das
clc
or
sub
xor
cmp
lahf
decl
pop
push
mov
mov
nop
or
xor
xor
sub
or
jg
out
cmp
jo
pop
orl
into
or
daa
into
das
jmp
jae
incl
div
cld
cld
cmp
xor
jb
or
mov
out
add
lea
inc
fwait
pushf
cld
add
adc
xor
xchg
push
pop
pusha
loop
or
vmwrite
ds
inc
popf
into
mov
cld
lahf
popf
inc
xchg
jnp
js
or
cmp
dec
push
or
or
sub
cmp
popf
cld
mov
lcall
or
adc
dec
into
incl
icebp
jg
rorl
aad
flds
mov
test
daa
mov
sub
pop
fs
aad
fldcw
repnz
scas
cld
hlt
inc
cli
mov
loopne
int3
pushf
inc
aaa
repnz
cmp
sti
call
jg
or
or
sub
inc
cli
mov
icebp
pop
mov
hlt
aaa
fsubl
cmp
gs
sbb
sub
inc
mov
sti
fcomi
scas
mov
fistpl
cmp
add
in
dec
push
fisubrl
fildl
mov
fdivl
fistpl
fidivl
dec
sbb
mov
fidivrl
fcompl
cmc
inc
fldt
fimull
or
iret
pop
addr16
push
mov
xor
cmp
xor
mov
pop
pop
pusha
add
push
mov
fsts
pop
decl
xor
fisttpll
das
in
hlt
lds
dec
push
add
pop
ja
mov
arpl
add
pop
mov
bound
or
jl
or
mov
cmpb
mov
cmp
loope
add
lret
add
jne
daa
movsb
or
mov
push
inc
sarb
ret
pop
outsl
orb
or
bound
or
xchg
ljmp
dec
xchg
insl
push
inc
mov
scas
lods
jge
add
pop
mov
cmp
pop
notb
bound
sub
cmp
adcb
dec
in
out
add
inc
or
test
adc
arpl
fidivrs
mov
jo
push
adc
out
out
aaa
iret
filds
fadds
imul
fcomp
out
jbe
repz
add
mov
leave
mov
pop
mov
in
loopne
push
aad
mov
sarb
xor
int3
stos
jl
push
loopne
cs
ljmp
pop
fcmovnu
stc
addr16
sub
in
das
inc
add
dec
fisttpl
enter
fldl
xor
test
imul
inc
push
inc
push
xor
dec
xor
outsl
pop
das
xor
inc
inc
sub
sbb
cmp
xor
jnp
cmp
mov
and
ret
xor
fistpll
lcall
aas
pushl
pop
xor
inc
push
push
add
cmp
stc
mov
pop
mov
pop
aas
xchg
or
inc
bound
stos
scas
and
push
ds
xlat
or
pop
or
or
dec
movsl
jns
jae
je
call
dec
dec
add
fdivr
ja
decb
pusha
add
insb
jae
adc
adc
add
or
divb
in
aaa
cmpl
rclb
test
xchg
and
test
mov
sub
mov
mov
ret
movsl
mov
mov
push
inc
push
shrl
dec
inc
aam
dec
pushl
add
andb
lret
fs
or
sahf
and
and
xor
fldl
xor
mov
ds
sar
ss
les
dec
aad
push
inc
pusha
jnp
loopne
jecxz
jnp
es
out
mov
fiadds
mov
lcall
aam
jmp
push
ret
add
les
add
flds
fsubp
or
repz
add
call
mov
pop
and
and
jp
sub
push
add
outsb
mov
add
pop
dec
xor
inc
dec
dec
mov
jmp
bound
push
lds
inc
pushf
add
jge
push
inc
pop
push
dec
pusha
inc
bound
scas
std
call
pop
sbb
and
es
sub
xor
repz
shr
sbb
sbb
and
fldcw
xor
xor
sbb
sbb
fdivrs
fcmovnb
pop
pop
push
es
dec
pop
in
idivl
and
popa
addr16
inc
pop
pop
sbb
shl
imul
pop
or
shll
shll
sub
subb
and
pusha
add
outsb
fildl
add
loop
mulb
roll
push
icebp
mov
shlb
sub
rcrb
and
or
insl
mov
pusha
push
dec
pop
pop
or
sbb
ret
fs
adc
shlb
insb
les
shlb
sub
iret
dec
jae
and
ret
pusha
and
arpl
fcomps
bound
rorb
es
xchg
iret
mov
and
dec
add
fisubl
arpl
and
push
rcrb
popa
popf
adc
lahf
dec
bound
and
aas
push
fstps
in
adc
push
pop
rorb
lods
inc
sti
sti
in
les
arpl
dec
push
dec
pop
jnp
popa
out
pusha
ret
fs
fsubs
popa
les
sbb
mov
outsb
mov
or
fcmovnu
lods
testb
dec
adc
popa
push
xchg
push
stc
decl
or
sbb
sbb
sbb
or
sbb
push
cld
cmpsl
aas
mov
pusha
or
pop
and
sbb
sbb
cmp
pop
pusha
add
loope
pop
or
ds
cmp
xor
or
or
sarb
xor
cmp
adc
or
sbb
and
fildll
pop
add
xor
push
fistpl
pop
pop
addr16
popw
add
dec
pop
add
mov
insl
insl
popa
push
pop
add
adc
insl
outsl
add
pop
mov
ret
or
add
push
push
add
adc
int
fistpl
jo
or
push
or
mov
or
add
inc
push
sub
fldcw
cs
xor
push
cmp
fwait
push
cmp
pop
add
dec
push
add
dec
push
push
push
jo
sti
cld
aaa
pop
ja
and
insb
add
push
popa
jge
fs
ss
popa
je
pusha
jns
inc
add
dec
add
fwait
in
xor
add
add
add
mov
insb
add
add
je
int
insl
jbe
addb
test
outsb
xchg
add
js
mov
xchg
add
jl
sbbb
mov
frndint
outsl
ss
mov
mov
and
mov
ret
aaa
mov
mov
cmp
inc
push
mov
push
adc
notl
fldcw
add
ss
daa
or
add
lods
add
outsl
mov
add
add
mov
sbbb
add
into
int3
outsl
mov
jmp
cmpsl
cmc
pop
ja
add
or
dec
enter
mov
insb
ss
add
add
add
xchg
mov
scas
add
shl
rolb
add
push
add
fcmovnu
sbb
js
sbb
mov
mov
and
jmp
outsl
in
add
out
dec
xor
dec
icebp
add
repnz
adc
fcomip
add
cmc
push
adc
inc
cli
pop
mov
sub
popa
adc
cmpsl
dec
bound
and
pop
adc
add
pop
jnp
push
add
idivb
add
outsb
dec
inc
das
das
inc
add
adc
pop
jbe
push
dec
dec
out
push
add
jl
push
sub
xchg
sbb
inc
cmp
inc
inc
mov
add
dec
nop
ja
jl
je
jl
jge
xchg
das
and
testb
jge
jl
pop
push
add
dec
jl
nop
pop
je
jbe
jbe
cmpb
cmpl
decl
jb
test
jge
jle
jne
popa
adc
cmp
lcall
jle
cmpl
imul
out
sub
pop
pop
pop
pop
popl
ja
js
mov
pop
jbe
addb
sub
xchg
popa
add
je
and
cltd
and
bound
test
outsl
mov
mov
jle
sub
adc
jne
ja
addb
std
decl
cmpb
cmpl
adc
rolb
mov
imul
jle
ja
pop
inc
adc
jbe
shll
out
imul
jp
dec
sub
jp
jns
fisttps
jbe
imul
ja
inc
adc
add
cmp
jb
imul
imul
sub
pop
push
cld
mov
push
pop
pop
cmp
pop
dec
and
mov
dec
push
jbe
dec
daa
push
sbbl
insb
xor
dec
push
bound
pop
pushl
jb
inc
adc
jl
dec
push
push
mov
stc
mov
pop
sbb
pop
mov
push
mov
push
es
je
or
xchg
outsb
xchg
mov
cmp
adc
ljmp
and
nop
pop
test
orl
loopne
mov
popa
push
push
or
jg
or
sbbb
incl
pop
push
dec
es
push
pop
ja
nop
lea
mov
mov
jg
push
xchg
imul
adc
outsb
jge
mov
ja
sbb
sbb
xor
mov
dec
outsb
jl
xor
cmp
aaa
sub
xor
insb
jnp
lret
xor
loopne
mov
mov
sbb
cmp
sbb
mov
or
jno
ss
imul
gs
push
pop
gs
pop
repz
mov
push
daa
push
xchg
adc
push
push
imul
push
mov
and
pop
inc
cmp
sub
shrb
push
cmp
jl
scas
inc
xor
mov
clc
fistps
jle
mov
push
sub
cwtl
addb
inc
fildl
ja
je
jle
sbb
stos
or
outsb
lea
jg
insb
push
mov
push
xchg
lret
pop
andl
cmp
jl
cli
je
dec
push
mov
cmpsb
dec
cmpsl
pop
fildll
bound
jge
sub
cmp
and
push
jle
xchg
cltd
call
push
ja
ss
fnstcw
jle
subl
lcall
loop
bound
cltd
popw
add
jge
cmpsb
xchg
inc
jne
xchg
push
lret
push
shlb
mov
je
divb
mov
push
jle
out
outsb
sub
mov
or
jg
or
add
sahf
and
jbe
out
cmp
sub
sti
mov
inc
mulb
sbb
imul
jle
je
and
push
arpl
dec
add
and
aas
cmp
pop
pop
or
push
in
call
test
sbb
call
add
pushf
sbb
pusha
add
clc
add
push
jmp
outsb
dec
or
or
cltd
cltd
stos
jmp
or
into
test
or
out
out
or
cmp
cs
cld
cld
sbb
inc
inc
push
iret
iret
cld
cli
cltd
jns
cld
out
mov
ja
cld
hlt
mov
dec
iret
iret
or
setge
mov
lock
or
cld
sub
scas
or
stc
jmp
in
int3
int3
stc
push
out
iret
iret
int3
push
xchg
cmp
cld
out
das
aam
pop
stc
dec
fildl
sahf
out
stos
cltd
xchg
inc
push
pusha
add
cltd
lcall
add
add
xor
xor
outsl
adc
incl
nop
push
maskmovq
aaa
sbb
rorb
and
cmpsb
outsl
inc
pop
add
pushl
lea
inc
xchg
and
and
mov
pop
ja
js
in
in
cmp
add
xchg
or
push
jbe
and
cltd
xor
imul
nop
stos
adc
nop
outsl
pop
xor
mov
dec
xchg
push
push
mov
cmp
sub
repz
js
daa
or
mov
aaa
aas
and
rcrb
sbb
mov
pop
iret
repnz
pop
out
xor
pop
jns
out
shrb
push
add
pop
aaa
cmp
lock
test
pusha
aas
bound
push
or
ds
mov
add
ret
insb
aaa
xor
cmp
jb
cld
out
pop
add
sub
or
insl
lds
pop
dec
or
aas
repnz
lds
dec
inc
add
int
dec
movsl
decl
mov
sti
mov
pop
dec
scas
xchg
cmp
push
in
dec
mov
inc
sub
dec
dec
pop
mov
bound
mov
aas
scas
outsb
lods
mov
sub
into
push
push
push
dec
mov
add
pop
call
ja
and
push
jo
jno
push
test
das
test
lret
std
movsb
in
mov
pop
push
xor
sub
lret
sub
mov
je
add
mov
pop
lret
cltd
cltd
test
in
mov
mov
mov
pushf
cltd
jne
pop
leave
inc
mov
in
push
xchg
mov
mov
xchg
cmpsl
dec
lret
cwtl
xlat
xor
xchg
aaa
mov
lods
int3
sbb
add
inc
ja
stc
nop
pop
adc
lret
add
add
sub
imul
fcompl
push
cmc
test
andnps
cmc
nopl
test
inc
les
les
out
std
sub
dec
inc
les
psrlw
or
sub
ret
mov
inc
inc
sub
add
int
data16
inc
inc
loopne
add
adc
dec
bnd
out
add
mov
inc
or
xchg
out
les
insb
pop
popl
xchg
divb
adc
mov
pop
add
jle
inc
and
inc
fs
test
loopne
fmull
xchg
mov
adc
sbb
es
lahf
repnz
push
xor
add
ss
sub
sbb
repz
xlat
je
jae
es
push
push
push
shrl
arpl
jae
inc
push
cmpl
mov
dec
push
mov
mov
xchg
fs
arpl
dec
shl
jae
cmpsl
push
call
pop
inc
arpl
jecxz
fwait
int
jge
adc
inc
mov
jae
push
jns
add
ret
lods
mov
mov
mov
mov
aaa
dec
push
test
aam
ret
xchg
into
in
xor
and
mov
aam
in
jae
sahf
cmpsb
jecxz
jmp
in
sahf
mov
repz
out
mov
sti
cld
inc
xor
mull
inc
inc
pop
pop
add
add
add
dec
adc
cmp
outsl
xchg
cmp
pop
add
add
or
pop
xor
inc
inc
inc
dec
dec
dec
dec
dec
dec
inc
inc
inc
cmp
idivl
push
popa
ds
xchg
notb
inc
push
push
popa
inc
imul
xor
cld
int
sbb
add
sbb
pop
adc
and
mov
lock
shrl
xor
call
fiaddl
daa
sub
sub
pop
or
dec
cmp
ss
push
pop
pushf
loopne
xor
fildl
push
sub
mov
or
dec
pop
cmp
pop
xchg
test
out
xor
xor
and
mov
dec
xor
mov
inc
sbb
and
xor
mov
sbb
mov
and
out
mov
pushf
cmp
inc
in
and
cmp
dec
and
adc
sbb
idivb
and
aas
inc
andb
push
mov
cmp
loopne
sbb
add
or
sub
repz
sbb
or
pop
js
sub
cmpsb
pop
sti
pop
mov
add
inc
cmp
sbb
push
and
add
in
mov
push
push
adc
or
pop
mov
loopne
pop
sbb
push
and
pop
cmp
xor
cmp
and
fbld
lds
subl
mov
pop
push
push
pop
push
push
pop
pop
ja
cwtl
pop
mov
ret
fidivrl
pop
xor
insb
roll
inc
inc
repz
inc
inc
iret
xor
xchg
rorl
add
or
sub
push
sbb
pop
aaa
add
aas
add
and
adc
repz
adc
dec
add
sub
add
ss
cs
add
aaa
push
add
cmp
dec
add
pop
add
cmp
dec
mov
outsb
add
push
and
fdecstp
incl
push
inc
popa
add
ja
dec
jle
push
and
add
push
outsb
pop
fldt
and
push
dec
jns
push
cs
jge
mov
push
jns
jnp
mov
dec
test
push
addb
mov
xchg
ret
pop
nop
add
pop
mov
xor
add
pop
xchg
add
pop
fdivr
divb
bound
arpl
sub
outsl
mov
lcall
lcall
push
add
jno
add
jns
xor
add
jp
ss
int
jge
add
test
inc
jno
js
inc
jge
jle
mov
jle
cs
cmp
neg
mov
push
jg
mov
sbbb
cs
mov
jg
in
inc
xorl
mov
dec
xchg
mov
add
pushl
rolb
dec
xchg
lds
into
push
lahf
int3
add
add
roll
scas
test
push
stos
fnsave
les
cmpsb
mov
or
popa
test
add
ficoml
mov
push
loopne
add
mov
jmp
add
out
push
rcr
add
in
add
adc
lcall
add
repz
push
ja
addl
dec
push
mov
xor
mov
xchg
push
xchg
xchg
push
nop
cltd
push
xchg
xchg
push
xchg
cld
mov
aaa
xchg
xchg
xchg
add
push
xchg
xchg
popf
add
fcompl
cmpsb
lahf
or
pop
test
add
mov
movsb
or
cmpsb
test
lods
xchg
cmpsl
push
stos
test
lret
fadds
lods
lods
es
adc
mov
cmpsb
pop
lods
scas
jbe
dec
mov
push
push
mov
ret
push
outsb
enter
mov
fildl
push
iret
mov
sarl
jns
lcall
movsb
add
mov
insl
imul
mov
lods
jbe
sahf
lret
mov
mov
mov
ret
test
fildll
mov
leave
mov
fcmovb
fcmovne
mov
sar
fistps
pusha
push
int
rolb
aam
add
rolb
pop
adc
fiadds
jecxz
insb
fildl
push
mov
xchg
sahf
cli
aas
iret
jnp
pop
stos
push
mov
mov
in
out
lret
lret
leave
out
enter
int
fsubrl
out
iret
push
ror
lret
rcr
shlb
ror
push
aam
add
std
mov
fcmovu
xlat
rcll
flds
in
outsb
out
roll
loop
jecxz
push
jmp
mov
fstl
hlt
fdivrp
loopne
in
dec
in
fbstp
fstp
add
loope
add
loop
jmp
push
jecxz
in
stc
in
out
jmp
loop
add
jecxz
in
hlt
mov
add
out
imul
aad
in
es
add
orl
out
push
repnz
pop
les
aaa
add
insl
mov
pusha
xchg
in
in
in
jecxz
loop
loopne,pn
jbe
ljmp
repz
ss
and
clc
repz
push
in
cli
out
lock
or
idiv
cs
pop
insb
fcoml
fists
or
clc
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
aam
lods
insl
jbe
xchg
xchg
xchg
add
adc
xchg
xchg
ss
push
jge
sub
and
xchg
xor
jl
add
or
fistpl
and
out
out
cmp
sub
adc
fsts
out
adc
rcr
rcl
jecxz
jecxz
fcomp
sub
ja
cmpsb
push
sub
fcom
rcr
rcll
add
scas
test
push
test
fcmovnbe
ror
and
test
cmpsl
mov
test
std
xor
scas
test
add
insl
movsl
std
jnp
fwait
test
lret
sub
jnp
imul
xchg
mov
xchg
imul
push
std
mov
outsb
jbe
lahf
scas
fdivrs
jbe
jne
mov
cli
in
pop
pop
scas
pushf
jge
imul
and
and
mov
jge
scas
ret
sub
fucomip
dec
jl
loop
std
ljmp
sub
pop
sub
or
jns
jbe
aas
outsb
jl
sarb
mov
mov
inc
outsb
mov
pop
int
or
int3
testb
adc
mov
in
mov
adc
das
sub
cwtl
std
lods
mov
or
sub
and
aaa
cmp
xor
sbb
pop
mov
or
test
xor
aas
je
lods
std
stos
orb
in
incl
ds
sbb
aas
rcrb
cmp
jmp
stos
xchg
std
stos
jo
adc
outsl
pop
hlt
nop
fcomps
in
popa
pop
push
or
lahf
jo
in
decb
ucomiss
push
pop
sbb
push
sub
fs
sti
in
sti
mov
mov
ds
stos
stos
sub
mov
jmp
pop
sti
jmp
mov
pop
sbb
sbb
dec
pop
pop
jae
repnz
jmp
pop
pop
pop
addr16
inc
cmp
dec
pop
ljmp
dec
adc
cwtl
loope
adc
sbb
cmp
icebp
incl
inc
xor
sub
cmp
cmp
cld
pop
nop
sub
sub
and
xor
sub
stos
call
insb
pop
dec
push
daa
mov
mov
ret
fnstcw
sub
loope
stos
ret
std
pop
dec
sti
imul
pop
in
ret
inc
jle
stc
xor
lea
lds
stos
mov
call
stos
mov
jmp
pop
jmp
sub
in
ret
loope
scas
jl
mov
mov
rcr
into
add
jecxz
mov
xchg
pop
xor
shll
pop
addr16
aad
sub
aaa
rol
in
pop
mov
loope
mov
or
rol
jle
fwait
cld
mov
icebp
out
mov
lds
mov
rcr
fstp
fstp
mov
aad
mov
jmp
les
mov
push
sub
jecxz
mov
insl
jbe
sub
mov
js,pn
xor
cmc
out
sub
push
mov
mov
data16
lds
les
mov
loopne
out
into
into
aad
out
or
outsb
addr16
add
fistpll
jmp
mov
ret
vpunpckhbw
pop
sti
fwait
mov
iret
mov
adc
sub
gs
mov
mov
shll
stc
mov
mov
mov
sarb
lahf
push
cmpsl
pop
adc
fs
mov
push
std
jmp
jb
movsl
fucom
out
mov
cmc
pop
std
iret
add
push
movsb
mov
mov
jae
push
push
inc
jae
ret
fstp
fsubrl
stos
testb
mov
lock
movsb
andl
ja
push
sub
push
insl
ja
mov
jnp
sub
mov
idivb
std
add
andb
and
sub
push
xor
js
mov
or
dec
enter
clc
mov
in
incl
ja
ja
xchg
inc
ljmp
lahf
mov
push
or
sub
movsb
leave
in
mov
or
loopne
mov
mov
test
mov
pop
dec
push
add
add
mov
xchg
mov
mulb
outsl
mov
mov
pop
adc
or
or
cmp
insb
mov
mov
push
adc
leave
pop
stc
clc
outsl
jg
lock
loop
cmp
mov
push
mov
gs
push
add
cmp
fdivp
adc
stc
in
fcmovnu
pushl
dec
data16
arpl
mov
mov
push
mov
push
adc
sbb
notb
cmp
cld
stc
insb
or
out
mov
not
mov
add
repnz
aaa
mov
in
jbe
repnz
clc
cld
sarl
out
add
mov
pop
sub
mov
shll
cmpsb
pop
clc
std
outsb
add
add
imul
leave
movb
jnp
or
aas
int
push
add
jg
mov
and
les
sub
in
push
push
dec
and
add
gs
pop
std
cmp
sub
out
out
pop
add
push
das
cmp
sbb
push
and
std
cltd
jnp
into
outsb
cld
or
or
out
mov
inc
adc
fidivl
cld
xor
mov
pop
add
std
or
pop
jne
mov
mov
push
mov
xchg
or
adc
sub
pop
or
push
push
adc
sbb
movb
cmp
es
repz
cld
push
push
pop
sub
pop
addr16
and
ss
outsl
mov
push
das
imul
inc
jae
xor
jne
push
push
jbe
push
jl
or
pop
pop
pusha
mov
dec
ds
add
pop
fcomi
lcall
daa
ja
data16
add
jp
and
fcomi
arpl
xor
mov
sahf
cmpl
pop
test
or
cmpsb
call
add
arpl
xor
imul
inc
jecxz
push
or
lcall
int
lcall
outsl
fistl
js
sbb
adc
add
sbb
scas
imul
movsl
pop
jle
push
jo
jge
mov
pop
jl
jl
jg,pt
mov
aam
or
popf
push
or
subl
fcoml
sbb
mov
lea
scas
mov
scas
dec
xchg
mov
adc
mov
xchg
mov
adcb
pop
push
and
cltd
mov
sub
and
mov
sub
cmp
mov
fwait
insl
repz
movsb
ss
lods
push
inc
push
imul
dec
mov
push
stos
push
mov
rcll
ret
cltd
lds
add
mov
mov
int
mov
mov
and
mov
outsl
fldt
cmp
ret
lods
ss
data16
xor
int
mov
inc
aas
mov
cmp
fidivl
lods
mov
push
mov
add
inc
mov
pop
mov
inc
dec
mov
push
mov
push
imul
inc
mov
rcr
insl
jmp
mov
inc
mov
pop
mov
insb
xor
push
mov
imul
push
mov
add
leave
fldl
push
iret
sbb
xlat
in
ret
call
add
fucomip
add
rolb
mov
cmpsb
pop
rcl
push
les
add
imul
js
int
leave
aad
jne
push
jns
filds
dec
ret
loope
jecxz
data16
push
enter
pop
roll
hlt
add
add
fcomi
sti
push
in
jle
out
shr
add
push
inc
je
idivb
outsb
je
mov
rcr
in
dec
fistpl
gs
sahf
fdiv
es
add
inc
push
lcall
push
movsb
fwait
xchg
add
inc
xchg
out
push
mov
test
lret
ret
or
pop
insl
imul
iret
xlat
add
fbld
int
adc
lea
mov
push
fiaddl
into
xchg
fdivrl
mov
rcl
insb
out
xchg
jecxz
test
fimuls
inc
mov
test
out
call
insl
mov
mov
mov
sarb
aad
filds
push
loope
mov
lea
fidivl
int3
jecxz
shrl
lds
push
enter
leave
hlt
xlat
repz
call
lret
inc
fcmovne
stc
repz
dec
std
cld
add
sbb
icebp
aas
add
js
xor
xor
inc
fwait
std
das
and
cmp
push
pop
inc
inc
inc
push
push
aas
xor
pop
sti
data16
adc
or
adc
cmp
push
push
push
fs
xchg
stos
or
jg
fmull
gs
push
push
push
inc
cmp
lcall
mov
jp
test
pop
pusha
sbb
in
in
mov
lods
es
jge
pop
dec
cmp
push
inc
dec
dec
pop
push
push
bound
out
inc
clc
decl
aad
xchg
jb
insl
insb
arpl
dec
dec
jmp
cmp
sub
pop
pop
pop
bound
addl
loopne
fnstsw
jmp
out
fidivl
subb
dec
aaa
sub
insl
test
pop
sbb
cltd
cltd
pop
les
jmp
loopne
mov
mov
movsl
pop
push
pop
dec
dec
cmp
xor
pop
mov
inc
push
sbb
pop
call
mov
xchg
push
add
adc
pop
pop
jns
pop
pop
sbb
out
and
sub
mov
pop
jl
popf
scas
nop
andb
sub
pop
jnp
in
aas
incl
popf
mov
ljmp
mov
je
cmpsb
mov
or
jbe
inc
xor
sbb
sbb
jg
aaa
sti
aas
fcmovu
loopne
loopne
and
ret
ja
mov
sub
push
pop
sbb
pushl
pop
or
pop
mov
mov
imul
pop
pusha
xchg
add
push
push
or
pop
add
pushl
adc
add
stc
out
and
pop
jne
push
bound
jg
fwait
cmp
mov
and
jo
or
xor
or
out
cli
sti
lock
addr16
rcrl
jg
mov
and
outsb
push
sar
jmp
pop
inc
sub
or
pop
std
std
icebp
pop
push
dec
nop
std
jne
pushf
mov
mov
loopne
cmp
cmc
jae
rcrl
pop
adc
mov
mov
loope
sbb
out
clc
sbb
push
les
ds
jo
sbb
sbb
jle
enter
add
pop
push
mov
gs
cld
sbb
push
adc
or
mov
jl
out
sbb
sti
xor
out
pop
cld
stc
sbb
lods
adc
pop
sti
sti
cli
lock
mov
pop
mov
mov
out
pop
pop
and
push
sbb
sbb
pop
and
mov
clc
xchg
adc
mov
add
iret
push
jg
jno
outsl
sti
mov
lahf
cmp
rcrb
cli
mov
sbb
adc
pop
std
into
stc
rcrl
and
inc
cs
hlt
mov
or
pop
std
testl
int
pop
mov
mov
mov
xchg
push
and
into
push
into
idiv
aas
notb
sub
movsl
movsb
mov
jbe
push
dec
aaa
btl
negb
and
add
int3
and
cmp
pop
popa
sti
ljmp
das
das
cmp
push
mov
clc
mov
jle
dec
ss
stc
mov
push
int3
pop
adc
enter
idiv
mov
cltd
mov
pop
std
pop
cli
in
int
jbe
xor
outsl
leave
popa
lods
stos
pop
lea
inc
jo
sbb
sbb
inc
and
test
pop
push
loopne
adc
movsl
mov
mov
mov
pusha
ds
adc
aad
minps
jg
or
add
sub
cmp
sub
aaa
add
jl
xchg
call
jo
fwait
ljmp
js
xor
cmp
jae
add
dec
jnp
outsl
fwait
call
add
das
add
add
add
aas
add
sbb
insb
xchg
shlb
sbb
xor
aaa
or
mov
outsl
add
aaa
add
or
insl
add
add
push
inc
push
ds
add
add
push
and
add
dec
dec
dec
dec
pusha
cmpsb
xchg
pop
pop
add
dec
push
push
inc
insb
push
dec
jb
mov
jae
dec
adc
add
jbe
push
outsl
add
pop
jle
add
push
push
jbe
inc
inc
inc
add
inc
call
dec
xchg
add
or
jno
push
pop
add
outsb
add
out
addr16
pop
mov
imul
or
add
pop
cld
lea
pop
add
push
add
push
cmp
jle
stos
inc
pushf
mov
sbb
movsl
dec
sub
mov
mov
ss
cmp
mov
dec
loop
or
push
pop
add
pop
rcrb
push
and
adc
push
shrb
mov
mov
pop
xchg
push
mov
jnp
enter
jae
push
outsb
dec
iret
jae
jp
fildl
addr16
jp
adc
push
cmp
pop
insb
cmpsb
jnp
push
bound
push
add
outsl
fildl
outsb
jge
push
mov
sub
andl
fdivr
xchg
popf
jnp
mov
jecxz
cmpsb
fldl
mov
jb
test
test
sub
mul
mov
in
xchg
push
icebp
xchg
outsb
add
mov
mov
outsl
adc
movb
add
pop
fdivrl
adcb
es
ja
add
fs
xor
push
push
fs
lods
fsubr
movb
xchg
push
push
jb
outsb
jns
lods
mov
add
jnp
dec
dec
jle
push
mov
pop
nop
fisttpl
xor
inc
arpl
jbe
insl
or
jb
jnp
adcb
outsl
push
faddl
stos
jnp
add
mov
insl
add
mov
and
daa
shrb
mov
into
mov
or
cmpsb
jle
mov
pop
test
sub
dec
xchg
ficoms
or
add
jg
inc
mov
fdivrs
mov
push
add
test
and
fildll
sub
add
lcall
fnstenv
push
inc
stos
push
pop
mov
mov
jecxz
mov
leave
push
pop
add
add
loop
pop
int
fistl
imul
je
aad
ret
inc
push
ljmp
orb
push
jbe
shlb
scas
add
cmpb
mov
add
adc
movsl
data16
int
mov
mov
out
icebp
popf
push
rep
push
roll
mov
push
jmp
enter
mov
mov
into
add
fsubp
xor
xor
faddp
movsb
flds
aad
jmp
mov
jo
lret
repz
roll
sub
mov
leave
lret
pop
sahf
fcomp
fsubrl
not
add
fcoms
fneni(8087
fbld
jmp
add
cs
push
fs
sti
fistps
mov
cmp
push
jmp
inc
inc
xchg
inc
dec
push
pop
bound
pop
dec
cmp
std
push
dec
inc
inc
inc
push
lds
loopne
sti
aaa
sbb
mulb
push
dec
dec
dec
inc
inc
pop
inc
je
bswap
or
arpl
pop
dec
inc
sti
ljmp
aaa
xor
ror
mov
add
pop
jmp
inc
pusha
aaa
fs
pop
ja
pop
dec
dec
inc
inc
adc
xor
imulb
cmpsb
scas
lret
pop
push
aaa
mov
fs
dec
inc
inc
inc
or
incb
ja
or
into
scas
pop
dec
cmp
inc
dec
pop
fwait
jae
rcrb
xor
sub
xchg
sub
cmp
flds
insl
aaa
lds
dec
or
sub
pop
add
mov
dec
pop
sysenter
inc
inc
adc
mov
sub
nop
pop
or
mov
add
mov
pop
loop
and
jo
aas
xchg
or
sub
xor
mov
lea
pop
jo
fst
inc
pop
push
mov
pop
xchg
lods
lods
pop
lret
mov
push
lds
fst
pop
imull
add
add
mov
pop
sbb
push
repnz
repnz
pop
or
jg
sbb
xchg
mov
sub
xchg
xor
sbb
rcl
pop
xchg
div
mov
push
fdivl
sub
pop
ret
adc
incb
sbb
shll
cld
cmc
test
outsb
das
std
jo
mov
pop
ret
shrl
pushl
rcl
xor
mov
in
hlt
sti
out
fidivl
and
fldt
pop
shr
xchg
adc
cmp
ret
or
jbe
in
clc
popf
ja
loopne
lahf
cwtl
add
mov
stc
pop
lock
pop
or
sti
fcomps
jmp
xchg
pop
mov
pop
adc
jno
je
idiv
mov
fistpl
pop
pusha
mov
rcrb
jg
mov
adc
jae
jecxz
cli
stc
ljmp
cld
rolb
mov
adc
xchg
and
insl
stos
pop
ss
loop
pop
cld
pop
inc
rcrl
les
aaa
push
and
loope
adc
jg
addr16
adc
out
mov
push
adc
bts
pop
and
jg
fistpl
add
pushf
cmp
sub
lock
mov
mov
cmp
pushl
and
add
cmp
mov
jbe
fucomp
and
mov
pop
add
aas
fcoml
adc
imul
add
push
orb
mov
add
pop
pop
mov
sbb
and
pop
adc
inc
es
sub
ja
addb
xchg
inc
daa
jg
stos
leave
stos
xor
subb
push
pop
push
add
push
push
adc
xor
lods
jg
movsb
fistpl
enter
pop
pop
pop
int
fwait
cmpsb
insl
pop
movsl
mov
cld
push
fidivl
pop
add
jl
popf
aas
movsl
adc
push
sbb
or
mov
outsl
push
pop
adc
imul
mov
jbe
cmp
push
push
inc
push
push
and
test
push
js
or
sub
push
imul
lcall
js
adc
jb
sbb
jge
push
cmp
sub
data16
sub
xor
bound
add
lahf
pop
outsb
inc
fsubl
arpl
cs
fs
cltd
int
add
insb
sahf
jae
xor
pop
sbb
pop
add
movsl
mov
jp
lock
jge
test
add
add
push
mov
jo
mov
xchg
add
insl
sbbb
jbe
xchg
push
insb
cmpsb
adc
push
int
mov
xchg
cwtl
cwtl
cmpsb
test
add
test
test
add
mov
inc
push
arpl
icebp
ljmp
mov
adc
test
pop
inc
add
xor
test
mov
inc
sbb
add
add
xor
push
inc
mov
or
cwtl
dec
aaa
in
push
int
jbe
push
or
xchg
cmp
sbb
mov
sbb
push
inc
push
push
inc
popf
mov
incl
sbb
add
push
nop
push
ss
fdivr
fstpl
jbe
fisubs
sub
sub
fldt
xchg
add
dec
cltd
dec
dec
push
cs
dec
add
mov
sub
sub
sub
push
sahf
mov
movsb
add
dec
mov
push
das
push
mov
insl
push
push
pop
pop
ss
push
xor
mov
rcl
pop
lret
cmp
stos
xchg
out
pop
test
fcmovne
outsl
pop
popa
cmp
cmp
test
cmp
out
push
outsl
cs
mov
pop
jl
dec
insb
cmpsl
add
dec
inc
imul
jae
pop
jge
inc
push
add
jg
in
mov
inc
insb
push
inc
outsb
mov
push
push
imul
fwait
pushl
add
mov
push
jae
dec
repz
add
mov
ja
push
js
add
mov
repz
add
jne
add
push
jl
push
jge
shl
filds
pop
push
pop
jle
add
add
pop
mov
rol
es
outsb
mov
mov
fwait
es
add
orl
enter
arpl
mov
lds
popa
xchg
xor
mov
int3
push
mov
imul
push
je
xchg
into
pushfw
push
jge
iret
mov
in
fisttpl
je
rcrl
xlat
add
es
push
test
lcall
dec
fsubrs
xchg
add
lret
fistpl
loopne
outsl
xchg
push
add
data16
mov
xchg
lods
mov
mov
push
dec
mov
mov
mov
mov
mov
mov
xchg
push
lock
push
cmpsb
test
push
movsl
fisubs
mov
push
test
xchg
mov
lcall
mov
mov
subb
mov
mov
mov
cmpsl
shl
es
ljmp
mov
mov
add
push
jmp
fldt
sub
in
push
ljmp
mov
out
cs
repnz
add
rolb
outsb
dec
mov
xchg
kxnorw
aad
xchg
fdivs
fsubr
dec
or
add
mov
push
adc
lcall
je
jl
xchg
movsl
lcall
bound
pop
cld
ljmp
pop
outsl
mov
call
fcmovbe
mov
popf
xorb
aas
test
test
int3
ss
shl
in
fnstcw
incl
pusha
pop
push
jae
push
mov
lds
sub
repnz
stc
out
fnstcw
lods
xchg
xorl
sbb
sbb
xor
or
pop
in
iret
test
mov
outsl
mov
out
xor
push
enter
pop
push
dec
or
das
jns
push
cmp
jmp
add
xchg
xchg
repz
inc
or
ljmp
sbb
aas
inc
cmpb
nop
fdivr
out
loopne
sub
push
sbb
aas
addl
sub
out
xchg
inc
push
fwait
incl
mov
into
faddl
cld
out
cmp
jle
std
xor
xchg
xor
in
cmc
sbb
and
lea
outsl
add
das
out
push
cld
pop
and
lcall
test
shrl
push
pop
adcl
mov
add
out
shl
aad
stos
xchg
subl
adc
test
sahf
call
pushl
fs
dec
jg
mov
repz
fdivrs
jb
pop
sbb
pop
xor
add
push
push
dec
add
push
aad
jbe
add
inc
inc
cmp
cmp
inc
inc
pop
out
shrb
lret
mov
mov
not
lret
pop
adc
or
or
pop
mov
adc
add
adc
push
pop
sbb
jle
mov
inc
mov
adc
not
and
les
mov
pop
xchg
and
mov
xchg
cld
cld
pop
testb
adc
mov
sbb
and
movb
and
lret
les
add
mov
and
std
idiv
std
or
push
pusha
pop
std
pusha
movlps
ret
and
pushf
sbb
jle
idiv
add
lret
and
mov
pop
es
sbb
sbb
rcrb
fstl
pop
push
rcrl
mov
mov
add
pop
out
mov
add
pop
add
adc
cltd
fwait
add
lret
and
mov
sysenter
repz
rcl
pop
add
loope
scas
rcrb
adc
into
add
xchg
stos
or
sbb
pusha
loop
or
add
addb
loopne
sub
fsts
cld
mov
inc
push
dec
and
push
add
adc
mov
or
pusha
add
adc
push
and
andb
rolb
rorb
add
outsl
lcall
add
test
or
and
test
test
and
push
add
dec
xor
sti
mov
sub
pusha
and
inc
add
and
inc
adc
sub
add
dec
add
adc
inc
and
or
ljmp
outsl
cmpsb
sbb
sub
shll
rcll
adc
inc
push
pop
sub
test
insb
and
sub
dec
addb
sti
inc
mov
and
addb
adc
xchg
pop
or
adc
adc
rcr
add
inc
or
push
sbb
push
adc
es
add
or
add
adc
add
or
dec
xchg
mov
xor
lods
fdecstp
or
adc
dec
push
sub
fadd
lcall
roll
jg
or
sar
shll
and
sub
mov
es
adcb
adcb
mov
and
or
aam
or
ljmp
call
sub
rorl
and
and
addl
xchg
dec
out
xor
add
das
adc
dec
or
add
cmpl
dec
sub
decl
inc
adc
adc
or
dec
adcb
rolb
pusha
and
or
nop
mov
addl
mov
ss
push
cld
or
add
in
insl
cmpl
inc
addb
and
adc
sbb
mov
xor
adc
or
xor
adc
xor
nop
popa
test
mov
mov
js
add
xor
and
push
sbb
push
or
test
mov
addl
add
sarl
mov
flds
sbbb
push
inc
sub
andb
inc
or
addb
push
and
or
cli
xchg
pusha
gs
mov
inc
pop
cmp
ds
cmc
ret
pusha
test
push
adc
in
sbb
xor
push
lods
ret
fs
jbe
sub
lcall
xorb
or
shll
in
dec
push
enter
insb
xor
pop
cmp
push
enter
scas
push
sub
push
in
sbb
inc
inc
stos
mov
push
sub
adc
sub
add
mov
dec
lods
bound
inc
test
and
dec
jge
addb
rolb
dec
aam
fistpl
add
pop
inc
or
or
sahf
and
dec
xchg
lock
ds
mov
xchg
push
or
cmpl
ljmp
aad
lods
clc
add
or
rolb
inc
imul
not
push
sub
dec
subb
pop
and
xchg
outsb
or
adc
mov
xchg
rclb
add
and
adcb
xor
xor
insl
addb
inc
movsb
xor
add
push
int
add
sbb
and
insb
and
mov
dec
cmpsb
mov
dec
adc
adc
push
sub
or
and
int3
lcall
or
test
int3
dec
fistl
or
adc
mov
loope
cmp
sbbl
pusha
rolb
rcrb
dec
mov
cmp
sbb
sahf
or
push
in
mov
int3
or
pop
or
push
push
pop
push
addb
add
sub
shrb
push
xor
pop
inc
cmpsb
in
cld
jle
les
and
roll
sbb
jb
add
insb
rclb
pushf
sbbb
aam
sbb
mov
and
mov
test
fcmovne
pusha
movsb
pushaw
push
jmp
outsb
add
cmpsl
inc
mov
pusha
dec
mov
add
out
test
and
rcrb
push
mov
dec
popa
jbe
xchg
mov
dec
and
mov
sub
dec
lcall
xor
fiaddl
nop
loop
rcrb
mov
add
sbb
adc
ljmp
push
xor
rolb
push
xchg
pop
movb
jo
or
rol
or
out
shrl
add
xlat
mov
in
adc
shlb
xor
nop
je
scas
adc
xchg
or
push
mov
inc
cmp
mov
sub
push
xchg
or
es
rorb
add
adc
test
hlt
push
and
cld
out
dec
push
jno
jne
es
test
popa
sbb
xor
cmp
cld
mov
enter
subl
push
add
mov
mov
scas
cwtl
popf
ret
shlb
push
popa
xor
xor
and
cwtl
sbb
rolb
xchg
enter
js
je
mov
add
xorb
xor
pusha
add
and
jbe
add
les
cmp
cmp
xor
cwtl
sbb
lock
sub
mov
jb
xor
into
adc
inc
into
cmp
inc
mov
hlt
and
sbb
divb
insb
daa
orl
or
inc
add
or
jo
mov
cltd
loope
sbbb
cmpsb
xlat
inc
idivb
push
jmp
les
sbb
sub
movsb
inc
push
fs
push
pop
fcompl
ret
cmp
pop
popf
ret
add
scas
mov
rcl
rcrb
push
mov
and
sub
int3
xchg
mov
test
mov
dec
out
fs
sub
mov
loop
dec
pop
fdivrs
rcll
or
and
xorl
add
outsb
aad
mov
sub
bnd
push
jbe
cmp
mov
and
xor
jo
mov
insb
pop
mov
adc
or
jl
sub
push
lret
lret
or
fimull
outsb
push
adc
out
cld
push
fiadds
add
pop
dec
push
es
fst
out
mov
outsb
pop
or
imul
fidivl
mov
lea
mov
mov
push
sbb
add
fwait
aam
stos
lret
or
pusha
adc
push
mov
fsubl
leave
xor
in
inc
pop
mov
inc
pusha
fs
jb
xor
xchg
ret
push
pusha
cltd
add
scas
xorl
scas
fadd
cmp
jbe
lcall
aam
sbb
mov
lds
mov
push
data16
cli
adc
and
mov
pusha
push
or
gs
push
in
push
loopne
ljmp
xor
push
pop
sar
sbb
lcall
mov
outsb
or
and
into
dec
pop
fucomp
pusha
stos
jl
sub
movsb
xor
sub
mov
out
pop
push
adc
adc
cmp
mov
cltd
dec
in
inc
es
addb
add
inc
mov
jb
xchg
push
push
movsb
int3
int3
lret
mov
cmc
pop
cmp
cmp
sbb
inc
cmpsb
ficoml
xor
dec
inc
negb
mov
mov
xor
shll
pusha
push
push
or
insb
cwtl
cli
add
dec
gs
test
xor
out
pop
add
lret
add
dec
sub
dec
lock
mov
dec
lret
lcall
push
cmp
add
cs
mov
fsub
hlt
add
adcb
jo
js
fs
xor
sbb
out
add
repnz
ret
add
jle
fcmovb
push
pop
push
insb
mov
les
xchg
lcall
scas
mov
push
or
orb
inc
mov
add
inc
cmpb
cwtl
add
rcrb
andw
dec
flds
cmpsl
adc
mov
xchg
test
cs
fimuls
or
ss
pop
xor
add
loop
and
mov
adc
fchs
lock
movsb
cs
pusha
add
ss
aam
inc
ljmp
or
or
shrb
mov
ljmp
clc
mov
rorb
inc
pusha
data16
push
push
hlt
push
push
cli
inc
mov
or
pop
sub
addb
cmp
add
add
pop
idivb
in
mov
dec
in
or
or
jp
mov
pop
das
jae
test
push
pop
mov
mov
xchg
and
mull
or
and
sub
rorb
adc
lods
and
cmp
out
add
jnp
mov
sbb
and
int3
xor
pop
movsb
sub
dec
mov
stos
xorb
enter
cltd
loopne
into
test
stos
pop
add
pop
out
pushf
inc
mov
inc
nop
add
push
movsb
jb
stos
shlb
cmp
xor
pop
sbb
add
xchg
adcb
mov
shlb
out
xchg
xor
mov
test
data16
inc
test
pusha
sahf
or
ret
xchg
jb
pop
mov
add
mov
and
pop
lret
fwait
mov
loope
in
inc
out
cwtl
call
and
fiadds
xor
stos
jl
shll
xchg
enter
mov
and
and
xor
les
clc
add
gs
test
cmp
adc
sub
inc
inc
adc
add
pusha
and
inc
gs
mov
fs
gs
popa
outsb
fs
gs
inc
js
je
jb
arpl
cmp
inc
jnp
in
imul
dec
xor
dec
outsb
outsw
push
dec
outsb
push
jg
imul
push
imul
insb
outsl
bound
sti
xor
sbb
inc
push
push
dec
gs
jo
insb
std
push
xlat
xor
push
jns
je
insl
sbb
lea
les
jb
insl
cmp
add
push
jmp
or
inc
dec
cltd
push
adc
jbe
add
push
jp
jne
xchg
lea
sbb
inc
mov
mov
inc
imul
push
divb
dec
push
je
push
outsb
ja
out
popf
mov
rcll
insl
xchg
push
push
inc
xor
jae
jle
mov
adc
dec
inc
dec
adc
inc
sub
push
clc
shlb
jo
dec
dec
nop
add
jge
test
arpl
jns
push
jo
pop
or
std
dec
sub
cmp
movsl
push
gs
push
lock
aad
imul
fwait
cmpsl
gs
bound
adc
dec
ret
dec
push
push
call
je
imul
dec
pop
inc
push
push
loop
fcomps
enter
push
sbb
js
inc
jae
xor
sub
outsb
inc
dec
popa
inc
fldt
push
dec
popa
push
xchg
inc
sbb
sub
addl
and
cs
sub
or
xchg
cltd
int
push
or
adc
inc
arpl
fidivrl
bound
jns
movsl
stos
mov
cs
sbb
cmpsl
roll
imul
jns
add
das
dec
insl
call
jne
push
sub
inc
jb
push
insb
in
loope
sti
or
push
roll
gs
aad
lcall
inc
inc
pop
outsl
pusha
ja
insb
insb
jo
xor
pushf
call
ret
jge
push
in
dec
push
cmpl
jo
mov
fldcw
or
mov
jno
imul
mov
push
js
insb
subl
mov
jb
roll
outsb
sub
ljmp
xor
add
push
dec
push
mov
pop
sub
jmp
dec
dec
loopne
add
inc
dec
mov
fwait
jg
je
ret
pop
mov
inc
pop
cmp
or
inc
cmp
dec
push
xor
dec
jnp
push
and
add
xor
cmp
sub
add
pop
xor
adc
je
inc
add
push
and
add
pushf
mov
add
fidivrl
in
inc
inc
lahf
lret
sahf
or
pop
jle
sub
sarb
add
in
jge
cmp
pusha
cs
lock
sbb
negl
push
pop
add
xchg
lret
adc
lock
mov
aam
mov
repz
add
into
push
aas
in
enter
icebp
cmp
and
faddl
dec
dec
js
sbb
mov
sbb
xchg
and
add
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
sub
add
cmp
add
js
add
add
and
or
add
add
addb
add
pusha
add
addb
add
mov
add
mov
add
fadds
add
add
add
sub
add
push
add
addb
add
js
add
mov
add
add
add
cmp
add
lock
cmp
add
sbb
add
inc
add
cmp
add
push
add
add
add
add
add
add
add
xor
add
or
xor
add
xor
xor
add
pop
add
xor
add
addb
repnz
add
add
add
add
xor
add
clc
add
sub
add
and
add
dec
add
add
jo
add
cwtl
add
add
rolb
add
add
add
adc
add
add
add
or
add
add
mov
or
add
add
add
add
add
add
mov
or
add
add
add
add
add
sub
add
or
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
outsb
pop
add
or
add
add
add
add
add
add
add
jns
add
add
add
add
add
add
lock
add
add
add
add
add
add
js
pop
add
add
add
add
add
jl
add
add
add
add
add
jge
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
addb
mov
add
or
add
add
add
or
add
add
add
add
add
add
push
add
add
add
add
add
add
mov
add
or
add
add
add
add
add
cltd
pop
add
or
add
add
add
add
add
add
add
movsb
pop
add
or
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
mov
add
add
add
add
add
add
mov
add
or
add
add
add
lret
mov
add
or
add
add
add
add
add
add
add
add
add
add
pop
add
or
add
add
add
add
add
add
pop
add
or
add
add
add
add
add
add
lock
add
or
add
or
add
lock
add
add
add
add
add
icebp
pop
add
or
add
add
add
add
add
add
pop
add
or
add
add
add
add
add
push
add
jo
or
call
add
add
add
add
push
add
pop
adc
add
add
add
add
add
add
add
add
or
add
add
mov
add
add
add
add
add
nop
push
add
add
add
or
add
push
or
mov
add
add
add
add
adc
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
adc
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
dec
add
add
insl
add
dec
add
add
add
adc
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
jb
imul
add
add
add
add
and
inc
add
outsl
add
add
add
sub
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
cmp
add
add
add
adc
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
add
jo
and
push
add
add
jae
and
inc
add
ja
outsb
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
push
add
jae
add
and
inc
add
jns
and
dec
add
popa
add
imul
imul
add
jae
and
xor
xor
xor
xor
sub
add
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
dec
add
jae
add
add
js
add
add
add
adc
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
popa
add
add
add
jne
insl
add
jns
and
inc
add
push
add
add
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
cmp
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
pop
or
int3
pop
or
std
pop
or
call
add
add
pop
or
adc
or
and
or
xor
or
inc
pop
or
push
pop
or
add
add
pop
pop
or
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
imul
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
imul
