cs
inc
add
add
add
pop
xor
add
jp
add
mov
add
mov
xor
add
mov
add
mov
add
lods
xor
add
pop
add
jp
add
add
add
push
add
add
add
call
add
add
add
add
inc
mov
xor
xor
or
add
js
inc
add
xor
push
xor
mov
mov
mov
lods
mov
pop
ret
push
mov
mov
xor
test
je
cmp
je
inc
cmpb
jne
pop
ret
push
mov
push
mov
test
jne
cmp
je
or
jmp
push
mov
test
jne
xor
inc
jmp
xor
jmp
mov
push
mov
cmp
jne
cmp
jne
mov
movsbl
movsbl
sub
jne
mov
sub
test
je
inc
mov
movsbl
movsbl
sub
je
jmp
push
call
pop
mov
cmp
jne
push
call
pop
mov
cmp
jne
test
je
test
je
xor
test
jle
movsbl
movsbl
sub
jne
inc
inc
inc
cmp
jl
jmp
sub
xor
test
setg
mov
neg
sbb
pop
lea
and
pop
pop
pop
ret
push
mov
push
mov
andl
push
push
mov
add
cmpl
jbe
mov
add
test
je
mov
push
push
add
push
pushl
call
add
test
je
incl
mov
add
cmp
jb
xor
pop
pop
leave
ret
mov
mov
lea
movzwl
mov
lea
mov
add
jmp
push
mov
sub
mov
xor
mov
push
movl
movl
movl
movw
movb
movl
movl
movl
movw
movb
call
mov
xor
xorb
inc
cmp
jb
xor
xorb
inc
cmp
jb
lea
push
call
mov
lea
push
call
pop
pop
mov
xor
mov
pop
call
leave
ret
push
mov
sub
mov
xor
mov
mov
push
mov
mov
mov
push
push
mov
xor
xor
mov
inc
cmp
jl
xor
xor
mov
divl
lea
movzbl
add
add
and
jns
dec
or
inc
mov
mov
lea
mov
mov
movzbl
inc
mov
cmp
jl
xor
cmp
jbe
add
and
jns
dec
or
inc
lea
mov
add
and
jns
dec
or
inc
lea
mov
mov
mov
movzbl
mov
mov
mov
add
and
jns
dec
or
inc
mov
xor
inc
cmp
jb
mov
mov
pop
pop
xor
pop
call
leave
ret
push
mov
push
push
mov
mov
mov
cmp
jne
xor
inc
jmp
mov
mov
sub
test
je
push
push
add
jmp
lea
shr
movl
je
lea
mov
mov
movzwl
mov
shr
and
movzwl
jns
dec
or
inc
movzwl
test
je
cmp
jne
add
add
incl
addl
cmp
jb
add
mov
test
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
push
mov
push
push
mov
mov
mov
test
jne
inc
jmp
push
push
lea
jmp
add
push
call
mov
test
jne
mov
add
push
call
mov
test
je
mov
test
jne
mov
add
andl
jmp
mov
add
cmp
jae
lea
cmpb
je
push
jmp
movzwl
push
pushl
call
mov
test
je
add
mov
jmp
mov
add
addl
cmpl
jne
add
mov
test
jne
inc
pop
pop
pop
leave
ret
xor
jmp
push
mov
sub
andl
push
mov
test
je
mov
cmp
jne
mov
lea
add
cmpl
mov
mov
jne
push
push
pushl
push
call
mov
test
je
mov
push
push
push
pop
mov
mov
rep
mov
push
pop
mov
add
rep
movzwl
mov
imul
add
push
push
mov
mov
lea
push
call
mov
add
cmp
jbe
add
push
lea
push
mov
add
push
call
add
mov
xor
xor
cmp
jae
mov
jmp
mov
lea
mov
mov
pushl
add
mov
mov
mov
add
add
push
push
call
movzwl
add
inc
cmp
jl
mov
push
call
pop
test
je
push
call
pop
test
jne
push
push
push
call
andl
jmp
mov
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
sub
mov
xor
mov
or
push
xor
push
mov
mov
mov
mov
push
movl
movl
movl
mov
movl
movb
movl
movl
mov
movl
movl
movl
movw
movw
movl
movl
movw
movl
movl
movl
movw
mov
movl
movl
movl
mov
movl
movl
movl
movw
movl
movl
movl
movw
movl
movw
xor
xorb
inc
cmp
jb
xor
xorb
inc
cmp
jb
lea
push
push
push
lea
push
call
push
call
mov
xor
xorb
inc
cmp
jb
lea
push
push
push
lea
push
call
push
call
mov
xor
xorb
inc
cmp
jb
lea
push
push
push
lea
push
call
push
call
mov
xor
xorb
inc
cmp
jb
lea
push
push
push
lea
push
call
push
call
mov
xor
xorb
inc
cmp
jb
lea
push
push
push
lea
push
call
push
call
mov
xor
xorb
inc
cmp
jb
lea
push
push
push
lea
push
call
push
call
push
mov
call
push
mov
push
push
call
mov
push
push
call
push
call
push
push
mov
call
push
push
call
mov
cmp
jne
push
call
xor
xorb
inc
cmp
jb
lea
push
push
push
lea
push
call
push
call
push
lea
push
push
mov
call
push
push
lea
push
pushl
movl
call
add
lea
push
push
call
mov
cmp
je
push
mov
mov
pop
mov
mov
mov
mov
mov
mov
mov
add
mov
call
mov
pop
pop
xor
pop
call
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
push
mov
sub
mov
xor
mov
push
xor
push
movl
movl
movl
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movw
movl
movl
movl
movl
movl
movl
movw
mov
movl
movl
movl
movl
movw
mov
movl
movl
movl
movl
movl
xor
mov
xor
inc
cmp
jb
xor
xor
inc
cmp
jb
xor
xor
inc
cmp
jb
xor
xor
inc
cmp
jb
xor
xor
inc
cmp
jb
xor
xor
inc
cmp
jb
xor
xor
inc
cmp
jb
lea
push
push
push
lea
push
call
push
call
mov
lea
push
push
push
lea
push
call
push
call
mov
lea
push
push
push
lea
push
call
push
call
mov
lea
push
push
push
lea
push
call
push
call
mov
lea
push
push
push
lea
push
call
push
call
push
push
mov
call
mov
push
push
call
push
call
mov
cmpl
jne
push
call
push
call
xor
jmp
xor
push
call
mov
pop
xor
pop
call
leave
ret
push
mov
sub
mov
xor
mov
push
lea
push
push
push
call
test
je
push
call
mov
call
call
call
push
call
call
call
call
call
pop
mov
xor
call
leave
ret
push
mov
sub
mov
xor
mov
push
mov
push
lea
push
push
call
add
lea
push
mov
call
call
call
call
call
xor
push
call
call
inc
mov
cltd
cmp
jl
jg
cmp
jb
mov
xor
pop
call
leave
ret
push
mov
push
call
mov
call
call
call
push
pushl
call
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
add
add
xor
xor
mov
mov
dec
mov
jmp
ret
leave
ret
push
call
call
mov
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
xor
push
push
push
push
push
call
pop
ret
int3
int3
int3
mov
mov
test
je
xor
mov
test
jne
cmp
jb
cmpl
je
jmp
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
cmp
jne
repz
jmp
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
cmp
jb
cmpl
je
push
push
and
and
cmp
pop
pop
jne
jmp
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
inc
add
inc
add
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
pop
sub
add
sub
in
sub
in
inc
add
sub
aam
inc
add
sub
les
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
and
add
sub
add
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
shrb
in
inc
add
add
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
pusha
sub
inc
add
inc
add
inc
add
sub
inc
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
sub
inc
add
sub
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pxor
push
push
mov
and
test
jne
mov
and
shr
je
lea
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
dec
jne
test
je
mov
shr
je
jmp
lea
movdqa
lea
dec
jne
and
je
mov
xor
shr
je
mov
lea
dec
jne
and
je
mov
inc
dec
jne
pop
pop
ret
mov
neg
add
sub
xor
push
mov
and
je
mov
inc
dec
jne
shr
je
mov
lea
dec
jne
pop
jmp
push
call
mov
xor
ret
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmpl
jne
push
call
pop
push
call
push
call
leave
ret
push
mov
and
test
jne
mov
and
shr
je
jmp
lea
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
lea
dec
jne
test
je
mov
shr
test
je
lea
movdqa
movdqa
lea
lea
dec
jne
and
je
mov
shr
je
mov
mov
lea
lea
dec
jne
mov
and
je
mov
mov
inc
inc
dec
jne
pop
pop
pop
pop
ret
mov
sub
sub
push
mov
mov
and
je
mov
mov
inc
inc
dec
jne
shr
je
mov
mov
lea
lea
dec
jne
pop
jmp
andl
ret
jmp
jmp
add
add
add
add
fidivl
add
inc
xor
add
add
add
and
add
dec
adc
add
xor
add
add
add
add
cs
inc
add
add
add
pop
xor
add
jp
add
mov
add
mov
xor
add
mov
add
mov
add
lods
xor
add
pop
add
jp
add
add
add
push
add
add
add
call
add
add
gs
inc
add
je
jb
arpl
fs
jae
add
cmp
dec
outsl
popa
fs
imul
add
adc
dec
outsl
fs
gs
popa
outsb
fs
gs
add
in
add
imul
jb
gs
add
imul
insb
insb
outsl
arpl
add
add
imul
jae
xchg
add
je
imul
je
add
push
gs
imul
dec
inc
push
dec
inc
dec
xor
cs
insb
add
jmp
push
jns
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
add
outsl
ja
imul
and
inc
gs
gs
je
jo
imul
push
push
inc
push
xor
cs
insb
add
add
inc
push
dec
inc
insb
gs
jb
insb
imul
add
add
dec
inc
imul
inc
push
dec
inc
dec
dec
xor
cs
insb
add
add
dec
jae
jb
arpl
jae
jb
gs
je
jb
push
jb
jae
outsb
je
rolb
jb
imul
outsl
arpl
jae
add
add
je
jne
jb
outsb
je
jb
arpl
jae
roll
fs
gs
js
gs
imul
gs
add
push
outsb
push
gs
js
gs
imul
gs
add
dec
jae
bound
addr16
jb
jae
outsb
je
.byte
cs
add
add
add
or
add
add
push
add
addb
add
add
nop
add
addb
add
mov
add
add
add
orb
add
add
adcb
add
adc
add
sub
add
add
add
add
add
add
add
add
add
inc
add
addb
add
pop
add
addb
add
jo
add
add
add
add
add
add
add
insl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
pop
add
add
add
addb
add
add
add
add
add
add
add
insl
add
add
add
addb
add
add
add
add
add
add
add
push
add
subb
add
add
subb
add
add
add
add
add
add
add
add
add
add
pusha
add
addb
add
add
add
add
add
add
add
add
add
js
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
jo
add
xor
add
in
add
add
add
movsb
push
add
xor
add
in
add
add
add
fcoms
add
add
in
add
add
add
or
add
dec
add
add
add
add
add
add
add
add
add
in
add
add
add
pop
push
add
sub
add
in
add
add
add
adcb
pushf
add
add
add
add
add
add
add
xor
add
in
add
add
add
push
push
add
adc
add
in
add
add
add
pusha
push
add
adc
add
in
add
add
add
je
add
adc
add
in
add
add
add
mov
add
add
in
add
add
add
pushf
push
add
xchg
add
add
add
add
add
add
pop
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
incl
add
add
add
add
add
add
add
add
and
add
add
add
add
add
rolb
aas
addb
aas
add
add
or
add
add
cmp
add
xor
add
add
add
add
or
add
aas
pop
pop
cld
aas
mov
jg
decl
incl
pop
incl
jg
incl
jecxz
incl
cmp
pop
lcall
idiv
incl
add
add
add
add
add
add
add
add
add
add
add
addb
add
incl
add
add
add
add
add
add
add
add
and
add
add
add
add
add
rolb
aas
addb
aas
add
add
add
add
add
cmp
add
xor
add
and
add
aas
pop
pop
cld
aas
mov
jg
decl
incl
pop
incl
jg
incl
incl
decl
decl
add
add
add
add
add
add
add
add
add
add
add
addb
add
incl
add
loopne
add
sbb
add
add
add
add
mov
add
adc
addb
inc
addb
mov
inc
adc
inc
and
inc
inc
inc
add
inc
add
add
add
add
add
addb
xor
add
add
and
add
sbb
add
loopne
clc
pop
jmp
pop
inc
add
incl
loopne
decb
sarb
cmpb
add
cld
ds
cld
cmp
aas
cld
cmp
cld
xor
add
aas
incb
clc
jg
add
jg
add
incl
add
jmp
pop
clc
pop
incl
add
add
add
add
imul
add
addb
add
add
imul
nop
add
add
add
add
add
add
bound
outsl
add
je
and
add
add
add
add
jl
pop
nop
int3
pop
fstpt
lahf
cld
xchg
adc
jl
shr
sub
les
in
mul
dec
mov
mov
push
test
jbe
pop
jo
push
mov
adc
repnz
xchg
and
stos
shrb
xchg
fnsave
and
loop
pop
xor
jae
testl
sahf
jne
mov
ror
pop
in
popf
rcll
repz
test
cli
adc
lahf
popl
pop
ja
mov
xchg
xor
into
dec
mov
mov
hlt
xchg
in
daa
jmp
cwtl
in
imul
mov
fwait
push
mov
movsl
lods
and
out
test
out
mov
sub
add
xor
pop
jmp
jge
xor
mov
cmp
and
hlt
and
aaa
or
xchg
enter
adc
dec
push
pop
dec
bound
mov
mov
push
out
aaa
in
add
fidivrl
push
leave
jne
leave
fmull
jmp
into
inc
nop
cmpsb
push
mul
adc
cmp
je
fs
mov
jmp
cmp
inc
sbb
outsl
ficomps
hlt
clc
cmp
cmp
xchg
pop
or
sub
sub
in
ret
xchg
insb
lret
popf
mov
lret
loop
out
pusha
sbb
push
xchg
stos
fstpl
into
or
xchg
shll
loope
sahf
xchg
jo
push
test
jmp
pop
mov
lret
fwait
add
ja
imul
cmp
adc
xchg
divb
out
dec
aaa
jmp
and
and
sub
xor
inc
popa
inc
emms
into
fwait
mov
xor
fdivrs
cmp
adcl
cld
pop
into
sahf
sub
add
bound
xlat
test
addr16
lret
mov
fs
adc
in
test
repz
sti
cld
dec
mov
push
xor
and
pop
hlt
leave
ljmp
inc
rclb
das
inc
xlat
jp
int3
enter
lret
nop
xchg
out
imul
cmp
push
fnsave
jge
mov
testl
imul
push
or
sbbl
mov
pop
nop
push
xchg
mov
mov
sub
mov
and
mov
sbb
dec
movsb
mov
les
push
push
sbb
xor
xchg
orb
and
xchg
push
sti
and
pushf
pop
jnp
rorl
jb
mov
and
push
data16
mov
shrb
mov
mov
pop
pop
dec
insb
fsubrs
add
cmp
andb
ss
mov
lock
inc
sbb
rol
inc
sbb
mov
dec
or
outsl
mov
pop
jecxz
lahf
xor
mov
or
and
jo
outsl
sbb
add
mov
or
pop
aaa
push
xor
in
push
aas
pop
mov
inc
push
clc
in
test
es
mov
sahf
push
loope
dec
imul
or
inc
push
add
mov
sub
sarb
inc
rcrb
in
dec
mov
outsl
inc
inc
add
jecxz
and
push
lret
mov
xor
daa
popf
icebp
fwait
sbb
jge
xor
scas
add
dec
in
adc
push
inc
pop
je
fwait
add
out
and
int
fwait
cmp
mov
mov
or
and
pushf
les
iret
test
test
add
rcrb
int
and
inc
arpl
rcrb
mov
inc
jl
enter
shlb
or
sbb
into
jb
adc
in
mov
adc
call
into
inc
repnz
and
fwait
adc
jbe
adc
test
lds
js
xchg
int3
add
cmp
and
push
fldl
mov
cmc
ret
ja
jle
jne
push
lahf
mov
in
and
cmp
sub
fwait
mulb
push
adc
jl
mov
into
fcompl
stos
xchg
loop
or
es
xchg
mov
xor
aas
popa
jo
push
test
test
or
les
xchg
or
push
in
mov
loopne
aaa
cmp
xchg
mov
adc
or
mov
push
xor
jle
icebp
pop
fwait
inc
insl
pop
add
mov
jg
add
inc
cmp
cmp
lds
ds
xor
pop
cli
fdivl
mov
pusha
sbb
ds
iret
in
pop
je
inc
fiadds
cmpsl
and
sub
insb
mov
call
cmp
xor
mov
push
out
fdivrs
aas
xchg
imul
lods
test
push
loop
sub
xchg
lret
pop
lret
fisubrl
xchg
mov
mov
or
icebp
jmp
andb
stos
addb
dec
cmp
push
rclb
shrb
mov
into
mov
push
push
daa
push
sbb
sub
jno
and
push
xchg
xchg
idivl
aam
push
icebp
into
push
shll
test
sub
mov
mov
cmpsl
inc
loopne
stos
jns
dec
test
sub
cli
jns
insb
loop
xchg
jl
and
mov
sub
xor
mov
cmp
dec
js
out
pop
data16
push
pop
mov
sub
lret
int
pusha
or
mov
mov
dec
ljmp
lds
jp
push
jbe
orb
adc
dec
sub
sarl
cmp
negb
imul
xlat
mov
jo
jbe
outsb
in
push
fwait
lret
sub
lds
jno
add
ffree
add
and
adc
movsl
mov
daa
xlat
xchg
daa
hlt
dec
cs
or
cwtl
addl
les
les
lret
loopne
fwait
xor
aad
inc
mov
ds
mov
push
icebp
jmp
cmc
mov
adc
lea
ds
lret
add
lcall
jnp
cmp
lods
cmpsl
repz
imull
sbb
insb
shlb
scas
mov
mov
ficoml
sti
imul
shlb
push
push
cmpsl
pop
or
cs
ss
test
fcomps
js
scas
scas
test
inc
imul
jmp
popf
out
out
xor
imul
sbb
aam
dec
data16
dec
lods
cmpsb
inc
andb
fmuls
fcoms
and
std
lcall
dec
fs
dec
or
mov
das
cmp
push
in
sbb
orl
lret
adc
fcmove
push
or
pop
lret
js
and
shll
adc
pop
repnz
dec
push
pop
mov
jecxz
mov
sub
aaa
test
or
add
inc
add
jge
push
jno
aas
xor
dec
dec
and
dec
pop
repz
popf
or
jg
stc
movaps
xor
sub
stos
call
mov
sub
add
and
aas
mov
mov
xchg
dec
pop
cld
xchg
imul
cmpsb
imul
imul
inc
xchg
mov
test
cmp
add
jmp
jne
lret
cwtl
ss
push
lcall
or
ror
pop
mov
mov
push
or
xchg
jecxz
jae
inc
pop
mov
or
fisubs
enter
arpl
rcrl
push
pop
push
js
in
ud2
gs
andb
mov
test
adc
mov
or
push
cmp
xor
xchg
sub
aam
or
pop
cs
jmp
hlt
aam
enter
xor
inc
add
adc
insl
pop
mov
push
fcomi
clc
or
sbb
inc
push
cmova
fisubrl
sti
out
inc
or
jo
call
sub
inc
xchg
pop
pop
xlat
xor
lods
rclb
xchg
shl
jg
stc
icebp
cmp
xchg
mov
add
jo
repz
cmp
cmc
loopne
mov
lret
dec
fldl
js
add
in
insl
test
nop
sbb
fsubrl
fsubl
movsl
add
pop
jno
jmp
aas
mov
sub
out
test
cli
addb
push
add
lods
aas
cmpsb
stos
outsb
jnp
and
rcll
das
pop
cmp
lret
inc
das
popa
jno
dec
mov
or
mov
dec
pop
inc
mov
cmc
loope
sub
jnp
jge
repnz
dec
imul
bound
lahf
gs
sub
sub
sub
pushf
xor
push
dec
inc
sahf
add
outsl
imul
dec
js
xlat
cmpsb
and
ret
in
imul
pop
mov
inc
je
fdiv
sub
pop
jge
lahf
inc
cmp
lds
push
repz
ret
inc
ret
clc
mov
dec
andb
scas
adc
test
pop
dec
pop
mov
dec
push
movsb
jne
and
stos
mov
mov
in
adc
cmp
out
pushf
call
dec
divl
out
add
and
mov
xchg
in
adc
cmp
jne
xor
mov
and
enter
or
dec
push
add
jo
test
and
fstps
imul
xchg
add
in
xor
mov
lahf
mov
insl
rorl
scas
sub
addb
and
dec
jle
cmp
cmpsl
sbb
dec
or
inc
outsl
insl
inc
fstp
insb
das
mov
je
flds
pop
mov
add
inc
inc
addl
popf
mov
cmpsb
aas
dec
or
and
cltd
pushf
pop
or
xchg
ds
subb
mov
out
dec
ds
jecxz
or
sub
cltd
inc
movsb
js
test
cmp
lea
int
push
int3
bnd
lods
mov
ficoml
cmpsb
dec
xchg
or
mov
and
test
mov
bound
fisubrl
hlt
das
cld
push
data16
xchg
arpl
and
cmp
jb
ret
push
jg
fstpt
iret
ljmp
ljmp
lods
xchg
ret
adc
xor
imul
sub
xor
pop
movl
test
out
mov
cmp
out
xor
div
and
in
pop
fiaddl
mov
test
out
adc
scas
nop
lods
mov
mov
packsswb
sbb
out
lock
cmp
cmp
pop
mov
scas
call
jle
test
fsts
loope
test
lea
outsl
out
cltd
sahf
xchg
pusha
xchg
dec
pop
lcall
jb
repnz
lret
repnz
cmp
pop
lods
mov
mov
adc
sbb
mov
aaa
daa
push
rcr
pop
divl
je
into
mov
jae
sbb
int
pop
fdivs
mov
ret
test
pop
jmp
mov
lock
jno
mov
xchg
mov
into
sub
test
jno
stos
fisubrs
push
jle
pinsrw
pop
outsl
xor
mov
push
test
xor
in
jbe
jns,pt
je
ret
xchg
mov
sahf
sub
pusha
and
scas
sbb
out
jns
mov
push
popf
and
shll
fwait
shrl
mov
daa
aas
jo
cltd
xchg
jae
add
sbb
scas
call
rcrb
cmp
pop
dec
push
pop
push
jmp
add
add
or
mov
lret
mov
push
les
cmp
sub
and
popf
negb
adc
sti
push
sbb
scas
in
inc
add
dec
jbe
mov
xchg
add
add
inc
cmc
out
pop
push
adc
divb
xor
jmp
mov
mov
pop
and
pop
xor
mov
xchg
and
js
daa
adc
xchg
or
dec
sti
mov
add
mov
xchg
stc
cmp
aaa
pop
hlt
out
js
loopne
inc
in
daa
and
pavgb
ss
sbb
cmp
iret
stc
pushf
and
sub
imul
fstps
subl
dec
mov
mov
cmp
and
jnp
enter
pop
dec
out
add
push
nop
jno
imul
nop
jmp
cli
jmp
scas
ret
lds
sub
test
mov
mov
push
daa
push
mov
adc
mov
mov
inc
mov
sub
pop
inc
mov
mov
outsl
and
inc
adc
test
jb
sbb
loope
sbb
sub
out
icebp
in
or
sbb
add
push
cwtl
mov
or
addr16
inc
xchg
pop
sub
fsub
or
or
movsl
adcl
dec
clc
imul
stos
jbe
pop
lds
cld
jae
icebp
push
mov
or
xor
aam
or
fdivl
cmp
pushf
pushf
xor
data16
jno
fldenv
fs
mov
mov
lcall
lods
loop
push
andb
or
lods
iret
xchg
inc
xor
rolb
outsb
addr16
xchg
subb
push
outsl
push
cmpsb
movsb
or
fcomps
and
fsubr
pop
lret
xchg
loopne
je
ds
inc
pusha
push
shlb
ds
mov
daa
xor
outsl
dec
sbb
pop
das
insl
mov
or
adc
pop
cld
xchg
sub
adc
or
or
pop
in
adc
ljmp
jno
subps
or
cli
adc
int3
loop
lds
fcoms
or
rclb
cltd
dec
les
fistpll
pop
cltd
lret
jb
test
add
movsb
push
push
mov
jge
int3
push
mov
lods
add
sub
repz
xchg
sbb
and
sub
mov
cmp
mov
sbb
inc
pop
mov
mov
sahf
movsb
lods
pushf
lcall
cwtl
in
mov
outsl
pop
xchg
movsl
dec
and
sbb
data16
adc
scas
lods
cs
adc
sub
push
imulb
sti
xlat
popl
adc
jecxz
ds
jns
aam
fistpll
lds
xchg
and
sub
jnp
rep
orl
mov
repz
push
lahf
inc
or
dec
pop
jg
and
push
sbb
loop
outsl
std
and
cltd
lock
addl
clc
jnp
out
add
lahf
mov
incb
movsl
std
inc
pop
in
das
in
enter
pushf
mov
ret
adc
jl
lock
or
cli
lcall
fstps
test
les
xor
shl
inc
mov
sbb
mov
les
inc
sbb
xchg
addb
aas
das
mov
xchg
sbb
mov
jge
sbb
pop
arpl
dec
mov
jmp
repnz
sbb
mov
inc
jns
rcr
mov
mov
cmpsl
dec
cmp
clc
add
loopne
pop
arpl
jo
and
test
and
repnz
xor
xchg
mov
dec
mov
lret
lahf
in
jno
hlt
loope
mov
and
popa
xchg
mov
or
cmp
aad
ficoml
pop
inc
sub
push
mov
dec
xor
mov
fs
adc
and
mov
mov
les
xchg
das
orb
rol
jns
in
and
jne
loopne
es
shl
jo
jne
flds
xchg
jae
fstl
lds
dec
add
lods
popf
cmpsl
stos
jbe
test
cmp
punpckhdq
jbe
or
xor
pusha
sbb
xor
mov
cmpsl
in
xchg
stc
std
nop
out
sub
js
adc
push
sub
adc
jbe
dec
lret
push
dec
and
jp
sahf
cld
loop
daa
sub
cltd
inc
lcall
pop
mov
mov
pusha
cmp
dec
sub
lods
shl
loop
cli
or
ja
nop
and
fcoms
loope
mov
dec
lret
mov
or
sahf
pop
jae
xchg
adc
fs
into
mov
or
ljmp
mov
movb
stos
jno
dec
mov
sub
xlat
xchg
sub
mov
add
jl
mov
fwait
arpl
movsl
cmpsl
jge
pop
jno
mov
lds
xor
pop
jb
sbb
test
test
sub
mov
test
mov
cwtl
in
in
js
sarb
les
cli
jle
call
lret
or
notl
dec
std
test
adc
ljmp
add
out
or
dec
inc
jns
lret
sub
sahf
aaa
scas
mov
pop
add
stos
pusha
cmp
pop
stc
xor
adc
push
pop
ss
cli
je
gs
sub
clc
xchg
in
inc
mov
in
js
cmp
adc
je
rcl
pop
mov
inc
pop
pop
mov
xor
icebp
jno
sti
jg
mov
sbb
sub
in
inc
adc
cmp
loopne
cmp
hlt
adc
fmull
xor
push
imul
lcall
and
lods
in
mov
bound
out
mov
sti
repz
mov
pushf
popa
pusha
or
loopne
movsb
adc
lods
push
and
jl
stos
fcmove
cmp
lods
push
not
in
incb
and
das
mov
lock
dec
xor
jl
sbb
das
cmpsl
jle
in
cmp
and
out
sbb
sub
cld
cmc
cmpsb
hlt
dec
dec
cmp
je
lds
rep
push
in
pop
dec
add
mov
or
ret
pop
push
stos
inc
loopne
psllq
rcr
orb
out
jb
pop
int
cwtl
outsl
call
pop
xchg
addb
xchg
sbb
movsl
jb
cmpsl
adc
xlat
shl
inc
lahf
push
pop
cwtl
pop
push
stos
jp
test
push
in
aaa
mov
aam
scas
scas
and
jae
ljmp
jnp
fisttpl
movsb
insl
ljmp
cmp
adc
test
jne
cmpsl
push
xor
loopne
mov
add
mov
adc
in
rclb
push
pop
cs
mov
fs
jge
sbb
mov
and
out
jl
movsb
sub
xchg
shr
cld
dec
push
dec
adc
or
adc
shll
cmp
lods
add
mov
sahf
daa
pop
and
mov
sub
ficoml
fcomi
pop
mov
sub
xlat
push
nop
and
mov
rolb
jbe
fisttpl
xchg
or
inc
jl
add
fmul
ror
mov
in
test
dec
movsl
and
lods
js
frstpm(287
add
cmp
out
cli
je
sbb
and
or
xor
in
js
jle
cwtl
mov
xchg
cwtl
add
or
arpl
mov
scas
pop
cmp
pop
jmp
fnstcw
or
pop
rol
leave
xchg
jnp
mov
sbb
sahf
outsl
arpl
sbb
rcll
sahf
imul
lods
mov
mov
out
lods
movsb
rolb
mov
mov
repz
xchg
fsubrs
jno
call
lret
repz
push
mov
cmp
jae
mov
cmpsb
clc
test
scas
icebp
jl
call
xor
push
pop
out
inc
adc
push
mov
xchg
dec
push
xchg
insl
sub
imul
sub
mov
fisttpl
mov
outsl
mov
outsb
or
sarl
outsl
pop
insb
clc
sub
push
mov
orb
fiaddl
mov
repz
mov
inc
hlt
dec
sub
pop
push
jmp
adc
push
jl
or
mov
fdivr
mov
js
repnz
or
jle
aad
jne
out
and
aas
cmp
popa
mov
rolb
xor
mov
xchg
fwait
ss
dec
notb
je
and
cwtl
sbb
adc
mov
popa
ds
mov
mov
push
inc
adc
movsb
call
mov
dec
push
lds
in
sub
aaa
dec
mov
arpl
lret
mov
cltd
or
repz
mov
cmp
xchg
and
mov
inc
mov
in
jl
daa
scas
lret
sub
jp
lcall
imul
outsb
into
repnz
cmp
lock
shlb
test
cs
push
arpl
mov
pop
icebp
xchg
mov
adc
aam
jge
ja
in
jmp
loop
test
in
push
stos
dec
pushf
and
imul
dec
and
jle
xchg
mov
and
xchg
push
negb
in
pop
jnp
lods
push
sbb
or
cli
sub
lret
sub
fidivrl
shl
stc
xchg
pop
and
cmp
imul
pushf
adc
icebp
hlt
adc
and
jg
xchg
inc
sub
or
adc
adc
imul
cmp
add
xor
adc
loop
cmp
jnp
sbb
pop
sub
lahf
xor
cmp
pop
hlt
mov
into
pop
ja
jl
adc
xor
popa
add
and
jge
out
xchg
cmp
sarb
in
xchg
scas
shll
pop
ss
leave
jnp
lods
mov
in
or
call
out
aaa
dec
inc
imul
arpl
mov
adc
add
in
cltd
xchg
lods
in
popf
push
std
mov
les
xchg
lret
push
cmp
mov
inc
jge
fsubrs
xor
cmp
cmp
dec
xor
jae
mov
jo
inc
out
cld
add
addr16
movsb
xchg
inc
lock
sub
fstpl
adc
data16
mov
xor
mov
addr16
mov
leave
jbe
push
rclb
xlat
dec
popa
orb
sub
push
push
sbb
jnp
sub
add
jne
inc
lea
inc
mov
dec
mov
push
nop
inc
push
lret
loopne
mov
lods
pop
aad
cwtl
inc
mov
popf
inc
loope
xchg
insb
roll
cmp
mov
push
xchg
mov
mov
andl
push
jns
repnz
cmpsl
xchg
xchg
icebp
loop
icebp
xor
cld
sbb
lock
sbb
scas
in
jmp
int3
es
and
sbb
xor
ljmp
js
pop
sbb
insb
jae
pop
imulb
dec
xor
dec
fisubrl
int
cwtl
dec
popf
imul
lea
xchg
xchg
das
xchg
and
mov
mov
in
insl
xor
or
test
je
std
sar
addl
out
mov
push
mov
jbe
inc
add
jb
scas
mov
sbb
mov
lock
jno
xlat
cmpsb
mov
repz
lret
push
cs
add
std
jmp
fnstsw
inc
movsb
movsb
icebp
decl
xchg
mov
out
ljmp
pop
add
mov
pop
inc
arpl
movsb
loope
lahf
stos
sbb
xor
fsts
test
mov
push
mov
lret
or
or
cli
and
std
lods
insl
dec
dec
fisubs
pushf
dec
test
sbb
sahf
in
jne
mov
jae
ss
mov
fdivs
pop
sbb
fldcw
dec
fsubrl
jmp
mov
mov
cmpsb
gs
call
mov
mov
xor
ret
jne
and
jge
push
sub
jb
loopne
ss
pop
aaa
fs
or
mov
jnp
pop
cmp
xchg
sbb
idiv
test
push
insl
loopne
mov
int
inc
jns
aam
jnp
add
out
xchg
sbb
mull
pop
adc
xchg
iret
cltd
pop
lea
jb
cld
add
sbb
sub
addl
mov
insl
xor
jmp
inc
testb
pushf
mov
cmp
fidivl
rcl
and
mov
dec
push
dec
pop
push
or
repnz
fadds
fsubs
movups
sbb
std
jb
out
insl
push
inc
or
and
repnz
test
shlb
sub
mov
jnp
pushf
testl
faddl
add
jb
pop
inc
xor
adc
dec
xorb
arpl
mov
imul
mov
push
pusha
data16
jge
movsb
or
inc
les
ss
shll
xor
adc
int
cmp
pop
addr16
stc
cmc
pop
subb
stc
mov
sbb
sbb
push
sarl
push
push
pop
daa
test
popa
xchg
loopne
dec
mov
xchg
cs
and
sub
push
dec
test
loop
insl
sbb
scas
dec
aaa
insb
xchg
in
aas
cmp
int
popl
cmp
mov
in
xchg
push
aaa
insl
cmp
ljmp
mov
adc
push
sbb
scas
outsb
js
ret
in
in
jg
dec
sbb
test
enter
arpl
push
mov
inc
push
popf
pop
or
pop
enter
leave
sub
mov
or
mov
xor
mov
daa
popa
data16
in
sbb
jecxz
cmpsl
call
push
mov
clc
das
fcoms
jae
xchg
mov
pusha
cs
sbb
cld
push
xchg
movb
mov
js
mov
cmp
bnd
pop
mov
cmp
in
mov
jle
ret
insl
xlat
jecxz
js
lahf
adc
dec
dec
loopne
mov
sub
nop
adc
fnsave
mov
mov
xchg
mov
add
ja
add
lret
and
jp
shlb
rolb
pop
cmp
lahf
add
cld
pop
mov
or
sub
mov
sahf
push
outsb
shll
mov
insl
xlat
sub
dec
cmpsl
sbb
sbb
call
test
push
in
mov
add
or
mov
mov
and
xchg
loop
pop
icebp
adc
xchg
cwtl
cmp
lahf
cmpsl
push
push
and
rcll
mov
nop
std
cli
cmp
fiaddl
mov
fnstsw
push
fcomps
les
jae
shrb
mov
daa
aam
xor
movsb
mov
call
in
test
int
scas
or
dec
push
sub
repz
fisubrs
and
push
jmp
and
jg
lret
loop
mov
cltd
jp
dec
repnz
int
sbb
imul
pop
or
movsl
int
inc
xchg
or
add
cmp
jle
imul
xor
jp
ss
outsb
jp
mov
and
push
sbb
push
push
adc
pop
or
mov
pop
mov
pusha
sbb
xor
cmp
add
out
out
mov
or
jo
js
shrb
cmc
out
mov
out
sub
fdivl
and
loop
mov
in
popf
out
add
out
or
pop
in
add
inc
add
xor
mov
in
iret
adc
pop
push
mov
fcompl
and
jecxz
xor
mov
sub
sub
sub
sar
xchg
and
lds
mov
lds
jle
les
cmp
jb
pop
insl
popf
call
xor
inc
lcall
xor
insb
xor
shrl
fadd
jo
xchg
jl
push
dec
cmc
mov
lods
sub
fbstp
je
ret
repz
ja
lret
and
lea
rclb
mov
outsb
pop
jmp
movsb
out
sahf
mov
enter
insb
mov
pop
inc
fcoml
inc
test
test
and
inc
iret
mov
inc
mov
bound
loopne
cmpsb
jo
cmpsb
jae
push
ret
push
add
jp
mov
or
cwtl
and
pop
jo
les
lds
mov
addl
and
jmp
stos
add
sbb
mov
mov
fimuls
adc
jmp
add
inc
sti
adc
cmp
stc
and
cli
int3
and
insl
aad
mov
adc
sub
dec
ret
cmp
xor
in
out
int3
sub
out
aam
in
jmp
sub
mov
movsb
mov
cmp
add
jno
push
xchg
je
mov
addr16
nop
xchg
inc
adc
dec
cmp
mov
inc
add
sub
sub
into
mov
mov
adc
sub
in
sbb
sti
aas
mov
cmp
dec
pop
dec
inc
xor
pusha
rorl
dec
aas
mov
popa
mov
rcrb
mov
mov
mov
or
cmp
inc
aam
cmp
push
fsubl
mov
sbb
xlat
mov
push
in
out
push
shll
fstpt
addr16
push
fisubrl
xchg
imul
cmp
cmpsl
shrl
and
add
and
or
loope
inc
pop
cmc
mov
in
mov
sbb
je
and
dec
lret
mov
shll
xor
movsb
pop
es
les
mov
iret
cwtl
clc
xor
ljmp
mov
sti
cmp
xchg
fsubl
scas
or
xchg
les
inc
dec
mov
add
aaa
mov
cmpb
es
sub
add
clc
mov
mov
push
fnsave
pushf
jle
ss
dec
popf
sarb
aam
and
stos
mov
addr16
mov
add
nop
imul
xchg
lret
mov
xor
jp
pop
icebp
cmc
fildll
test
std
mov
imul
fsubs
inc
std
jecxz
jb
push
jmp
mov
push
cmp
xchg
mov
mov
mov
dec
pop
jo
dec
push
sub
xor
pop
adc
arpl
push
imul
mov
sbb
xlat
addl
cmp
xchg
into
inc
pop
cmpsb
loope
mov
loopne
loop
mov
dec
mov
rcll
scas
lods
mov
sub
cwtl
sub
ljmp
jg
lods
mov
and
add
insl
incl
insb
nop
adc
sti
cmp
jae
call
inc
rorb
sbb
xchg
mov
ret
sbb
sbb
bound
loope
or
repnz
mov
movsl
icebp
push
and
xlat
stos
inc
int3
std
jmp
ret
fwait
aad
out
push
sbb
insl
jmp
imul
imulb
mov
xor
ss
in
xor
sbb
mov
test
jns
fldenv
int3
cmp
iret
xchg
shll
push
lea
sub
and
mov
jp
and
or
mov
jb
lea
pop
jge
cmp
dec
add
sbb
or
inc
in
add
shr
xchg
push
cmp
in
out
movsl
push
jge
ja
push
rcll
fbstp
in
fcomps
lods
xor
pop
jno
lahf
and
jbe
insb
rorl
adc
popf
pop
xor
mov
aaa
stos
sub
mov
sbbl
sub
sbb
dec
rcrl
stos
cs
int3
and
lcall
xchg
xchg
cs
movsb
repnz
cs
mov
enter
dec
pop
mov
pushf
shll
xor
inc
cmpsl
notl
sub
sbb
add
and
pop
lock
dec
cld
mov
and
xchg
pop
daa
jl
out
or
in
cltd
shl
push
cmc
sarl
push
push
scas
arpl
inc
fwait
xchg
xchg
push
or
jnp
pop
pop
popa
dec
mull
in
mov
xchg
xchg
jo
out
das
lcall
dec
arpl
or
jb
repnz
outsb
jp
inc
mov
and
in
inc
xchg
stos
test
popf
push
ret
dec
mov
mov
or
je
ljmp
mov
pop
xor
pop
jle
dec
push
das
cwtl
or
call
popa
scas
lds
dec
xlat
bound
mov
scas
lock
pop
ss
xor
and
adc
and
xchg
jp
dec
enter
das
add
arpl
cmp
mov
push
mov
cmp
adc
sbb
xchg
scas
gs
pop
test
movsl
enter
adc
popf
fucomp
cltd
adc
pop
mov
rclb
mov
sti
in
pop
je
movsl
ror
es
ss
push
loope
data16
sbb
dec
addr16
inc
mov
push
sti
xor
xchg
xor
dec
scas
pop
mov
mov
cmp
clc
dec
pop
adc
int
fistps
xchg
jne
movsb
imul
push
hlt
push
popa
inc
imul
pop
push
sbb
outsl
adc
rcrl
jns
mov
into
inc
jae
clc
out
aam
dec
or
mov
add
inc
add
cmc
dec
daa
nop
mov
lcall
mov
aas
lods
xor
inc
mov
mov
mov
push
je
mov
in
adc
aad
data16
xor
mov
pop
out
mov
add
in
iret
sahf
xchg
mov
data16
nop
popa
inc
outsb
jo
lcall
mov
lods
mov
lds
push
incl
mov
xchg
aas
xchg
inc
int3
fwait
pop
data16
mov
and
adc
pop
test
shr
push
sub
mov
pop
in
fst
out
mov
dec
push
test
jnp
pushf
aaa
or
insl
xor
jle
jp
or
idivw
out
fldt
xchg
push
xor
jmp
arpl
and
or
fiaddl
sub
xchg
mov
and
mov
xor
pop
test
jge
jns
test
sbb
push
ljmp
jp
in
sub
js
and
sahf
cmp
or
or
jne
cs
and
mov
sub
movsl
ret
adc
hlt
pop
push
mov
popa
sbb
repnz
imul
mov
mov
es
ja
cmc
addl
mov
cwtl
mov
pusha
ljmp
lock
mov
rcrb
shl
mov
pop
fwait
testl
pop
nop
pop
dec
mov
std
jnp
mov
sti
pushf
clc
hlt
sbb
mov
or
aad
jnp
pop
mov
pop
rolb
jl
cltd
push
add
dec
loopne
lret
mov
je
rorb
push
stc
mov
ss
shll
or
xor
outsl
mov
mov
inc
xchg
xchg
int
sti
mov
jge
adc
shrl
push
or
iret
mov
adc
sub
adc
mov
je
xchg
cmpsb
cmpsb
icebp
ret
andl
and
push
addr16
out
inc
pop
inc
shrb
xchg
pop
dec
sarb
lcall
add
pop
sbb
cli
or
dec
sub
push
pop
mov
stos
aas
add
push
xchg
ljmp
ds
movsb
sbb
pop
push
out
or
mov
cmp
mov
push
dec
sbb
and
jns
lcall
push
ficoml
push
adc
dec
insb
mov
mov
sub
cmp
aam
dec
and
mov
sbb
mov
sub
aaa
xchg
or
cmp
jge
int3
and
cmp
popa
fwait
cli
mov
inc
lods
add
dec
scas
inc
loopne
rolb
mov
unpcklps
lret
sub
fwait
pop
push
xor
fsubl
sti
jecxz
lret
lret
call
les
popf
mov
fisttpl
fcmovne
pop
and
jbe
sarl
popa
xchg
and
enter
mov
fisubrl
loope
jb
iret
orl
jmp
xchg
push
fdivs
inc
lret
ret
or
mov
adc
adc
ja
inc
mov
sbb
loope
or
mov
cli
jmp
mov
cmp
cmc
imul
es
cmpsb
in
or
push
imul
mov
mov
and
lea
call
je
loope
pop
ret
mov
fimuls
fwait
adc
loope
xchg
mov
popa
push
dec
lea
push
in
stos
mov
or
jnp
add
cmp
add
aam
dec
and
sar
inc
loope
ret
pop
lods
mov
repnz
loop
or
mov
fdivr
mov
cmp
rcll
popa
cmc
imul
sub
jns
sub
stos
mov
or
xor
insb
push
inc
ret
adc
push
stos
out
loop
fisubs
fidivl
test
pop
testb
lret
in
inc
dec
jo
hlt
push
cltd
jb
daa
inc
dec
les
push
lret
lea
call
jae
rcll
and
mov
sub
or
inc
shlb
fisubrs
cmp
xchg
int
sbbb
shrb
cmp
push
xchg
rcl
xor
mov
fcmovnbe
rcr
in
fs
fstp
or
mov
lret
test
into
mov
in
popf
fisubs
sbb
jnp
and
insl
inc
cs
lods
out
filds
adcb
ljmp
adc
inc
cld
loope
pushf
emms
add
jo
adc
mov
inc
cmp
out
and
push
fwait
repz
jge
lods
push
out
push
mov
cmpsl
je
std
push
jbe
lret
lcall
iret
inc
into
push
adc
inc
cmpsb
add
inc
gs
scas
push
loop
pop
inc
aad
aaa
push
cwtl
cli
mov
pop
icebp
sub
iret
jmp
stc
or
mov
fwait
gs
inc
push
adc
ljmp
and
pusha
xlat
rolb
sub
inc
xor
call
inc
cmpsl
jo
mov
loope
lock
inc
rorl
sub
xor
pop
inc
iret
sbb
inc
sbb
dec
adc
and
add
ja
int
push
lahf
stc
add
movsl
lods
xor
subb
mov
or
ficoms
add
or
movsb
cli
clc
prefetch
xor
pushf
push
call
lods
and
cwtl
pop
mov
insl
sahf
jge
neg
push
test
out
insb
cmp
insl
add
sahf
ss
pop
mov
outsb
mov
subb
and
aam
inc
jmp
or
ds
lret
cmpsl
icebp
ss
adc
inc
fcompl
xor
pop
out
repz
pop
pop
popf
dec
filds
adc
subb
nop
fdivs
out
loope
ja
sbb
rolb
jge
inc
pop
mov
cli
movsb
subl
pop
dec
std
addb
push
and
cmp
pop
mov
lret
or
inc
mov
sub
adc
pop
fbstp
xchg
sti
push
sub
jae
jno
fidivrl
push
lret
xor
pusha
xor
cwtl
xchg
les
loope
sbb
les
jg
enter
jl
icebp
in
aas
popl
arpl
ss
pop
adc
iret
sub
fadd
and
mov
push
imul
subb
out
or
mov
and
ljmp
dec
mov
mov
cli
mov
out
fmull
scas
test
mov
push
repnz
mov
fwait
push
sbb
fnstsw
gs
out
push
cmp
sbb
add
pop
jl
ret
inc
jp
sbb
sarb
mov
cwtl
add
mov
stos
out
jae
jae
dec
adc
movsb
lret
jbe
mov
jmp
and
movsb
mov
out
add
enter
add
xlat
jg
adc
xor
xlat
sbb
jae
fsubrl
aam
js
lods
movsb
pop
inc
fnstcw
sbb
jl
test
push
pop
lods
in
sub
cmc
inc
xchg
hlt
dec
jns
mov
mov
sbb
mov
pop
inc
fidivrl
test
xor
shl
jbe
add
ljmp
stc
jns
adc
aaa
repz
lea
std
lret
test
mulb
push
int
cmpsl
and
add
mov
shll
insl
leave
xor
icebp
or
mov
call
fstpt
lret
sbb
andb
cmp
or
or
mov
in
pop
inc
mov
push
movsl
js
inc
hlt
bound
mov
adcl
cmc
push
or
pusha
std
rorl
sub
cltd
fistpll
inc
sub
jecxz
jge
add
fstps
outsl
push
add
or
adc
push
insl
mov
adc
in
lahf
inc
sub
out
xchg
jo
jb
fldl
andl
xchg
fisttps
rcll
mov
sbb
test
ret
adc
inc
pop
mov
pop
push
sub
mov
push
stos
push
adc
cmp
and
shr
adc
outsb
call
and
mov
cli
cmp
cld
pop
mov
sub
xchg
xchg
aas
inc
insl
adc
addr16
hlt
push
dec
sub
lods
mov
push
and
add
cmp
push
mov
push
fwait
insb
push
mov
mov
jecxz
xchg
sub
dec
xor
in
jns
into
jno
loopne
adc
das
imul
xchg
rorb
pop
mov
xchg
arpl
cmc
jno
sub
jno
out
xchg
into
push
or
pop
cmpl
mov
insb
add
call
clc
movsb
es
insl
add
movsl
mov
insb
cmp
aam
insl
xchg
mov
cmp
aas
push
inc
mov
test
test
jnp
repz
ficompl
das
jecxz
push
xorl
dec
gs
popf
xchg
stos
or
mov
add
cld
or
xor
mov
jge
in
add
clc
cmc
dec
movsl
mov
mov
pushf
jmp
xchg
push
out
out
adc
jbe
and
dec
push
jb
adc
and
hlt
mov
outsb
sbb
divl
mov
mov
repz
xor
xchg
test
mov
test
ret
push
dec
ds
das
stc
cltd
stos
ret
adcb
das
add
dec
fmull
out
sbb
imul
js
in
out
movsb
sti
cmpb
xchg
xchg
int3
dec
mov
inc
add
mov
and
cmpsb
jb
xchg
popa
jle
cmp
cmp
das
orl
cmp
mov
push
stc
rorl
xor
sub
repnz
mov
dec
pop
cmp
addr16
test
mov
xchg
sti
aam
lahf
sbb
subl
adc
xor
push
lea
jnp
repnz
xchg
repnz
push
jae
mull
sbb
jg
jo
and
add
aas
fmul
jmp
adcl
mov
arpl
push
pop
gs
imul
out
mov
cltd
enter
insb
sbb
pop
and
inc
negb
mov
pop
adc
mov
scas
mov
inc
xchg
dec
push
and
xchg
push
mov
cmp
into
cmp
dec
xor
lahf
jle
shr
pop
fwait
in
repz
mov
je
cmp
mov
daa
gs
mov
negl
stos
mov
adc
jmp
lcall
popf
rclb
clc
mov
sbb
movsb
jle
gs
bound
scas
test
fwait
mov
mov
js
mov
rcl
sbb
iret
ret
lahf
inc
add
jle
push
in
jae
pop
hlt
imul
cmp
rolb
jge
xchg
dec
lcall
jge
in
xchg
lcall
loope
sarl
sbb
fistl
icebp
xor
xchg
xor
ss
inc
push
mov
inc
or
cli
imul
xchg
inc
xchg
cmp
rclb
orb
pop
dec
loope
imul
je
das
inc
hlt
jecxz
fmull
add
mov
int3
lret
inc
fisttps
pop
pop
fisttpll
add
xor
lcall
clc
gs
data16
rcll
rorb
sbb
xchg
lods
adc
sbb
sub
dec
incl
roll
pusha
cmc
dec
mov
dec
mov
int3
mov
pop
sbb
ja
sub
call
mov
sub
cmp
cltd
out
cmp
push
pop
popf
testl
xor
add
mov
xchg
and
push
jmp
add
jg
in
mov
mov
xlat
and
call
jge
lea
shrl
lds
mov
mov
mov
push
adc
xor
mov
loopne
outsl
jns
sub
in
gs
cwtl
adc
into
dec
push
movsl
out
jecxz
mov
clc
ds
cmp
aaa
lods
push
rcrb
xchg
push
out
dec
jo
dec
mov
int
mov
or
fdiv
scas
insl
iret
push
cld
mov
cld
orb
fistpll
pop
icebp
xchg
mov
xchg
ret
pop
jle
cmpsl
mov
loope
cs
xchg
inc
gs
adc
movsb
pop
loope
xor
pusha
das
pop
mov
and
push
ds
mov
mov
int3
mov
push
popf
fs
idivl
pop
lods
fdivrs
push
nop
lahf
in
in
sub
setp
rorb
enter
mov
adc
js
fs
and
iret
loop
sbb
movsl
mov
pop
pavgw
iret
repnz
or
jmp
jle
dec
xchg
loope
lahf
das
cld
lret
data16
mov
test
and
xor
lock
out
in
sbb
cmp
punpcklwd
push
je
lods
and
loope
sbb
pop
imul
xchg
fildll
gs
iret
cmc
sub
popf
pop
jno
xor
rclb
lock
xlat
loopne
pop
sub
mov
mov
push
adc
jnp
add
loopne
lahf
mov
jmp
les
xlat
fidivs
inc
and
stos
lahf
hlt
xor
sahf
test
cmpsb
xchg
out
mov
mov
mov
cmc
adc
mov
fists
add
mov
orl
adc
cltd
pop
xor
sub
push
icebp
out
sbb
xchg
jg
mov
aas
leave
out
dec
add
push
int
jg
sbb
icebp
out
jo
mov
lret
jae
idivb
jmp
divl
pushf
dec
dec
push
mov
pop
arpl
stos
incb
mov
jge
mov
insl
sbb
sbb
cmp
sbb
loope
jg
addl
jmp
test
jns
mov
ljmp
clc
insb
scas
fldl
xchg
outsb
sub
jns
ss
lret
xor
xchg
adcl
adc
mov
hlt
pushf
and
xor
mov
jbe
mov
dec
adcl
add
scas
ljmp
cwtl
lcall
test
mov
mov
inc
out
out
add
inc
test
sub
lret
cli
adc
inc
in
cwtl
out
lret
xor
lock
test
xor
enter
mov
fistpll
daa
pop
xlat
or
movsl
cmpsb
jo
ljmp
pop
adc
and
jge
rcl
push
rclb
shll
xchg
dec
xchg
sbb
sti
xorb
dec
inc
mov
sub
xlat
add
clc
pop
stc
aaa
inc
nop
push
inc
push
jg
cwtl
shl
leave
movsb
ss
fadds
adc
cmc
mov
xor
inc
cmp
jmp
rcr
orl
xor
mov
lock
mov
in
add
push
jle
sub
cmp
xor
out
mov
insb
outsb
mov
sub
xor
and
jne
out
add
inc
dec
inc
add
push
cmp
hlt
add
mov
push
in
sub
icebp
jg
test
push
and
xchg
pop
and
push
mov
and
fsubl
or
push
mov
jbe
bound
adc
xor
pushf
lret
fstps
push
pop
mov
leave
xor
cmp
mov
mov
xor
imul
aaa
daa
sub
jp
xchg
ss
inc
mov
and
xchg
pop
or
mov
daa
rcr
xor
addr16
or
jnp
sbb
and
or
ret
jno
mov
fstl
mov
mov
pop
jnp
xchg
xor
jns
xchg
arpl
popa
pusha
or
scas
pop
mov
adc
xchg
mov
test
das
cmp
lods
bound
xor
dec
cld
push
adc
leave
popf
out
or
insb
imul
cmp
icebp
aam
mov
jae
test
pusha
ret
insl
pop
pushf
aad
ljmp
inc
dec
rol
mov
jno
ja
cmpsl
cmp
push
pop
mov
sbb
ret
jg
push
jl
shlb
popa
int3
loopne
sbb
mov
stos
adc
jb
push
cli
jle
mov
repnz
dec
clc
negl
or
pusha
adc
dec
sahf
daa
idivb
cltd
cli
ret
lods
rorb
lret
negl
dec
out
push
or
sub
jmp
sbb
mov
hlt
jo
inc
rcrl
in
sarb
cli
and
push
sbb
cmp
mov
mov
mov
jecxz
es
lret
mov
sub
cmp
in
sub
fldl
rorl
repnz
scas
scas
push
dec
fnsave
add
jno
add
push
ret
int3
out
lahf
fnstsw
pop
jo
xor
cmp
inc
cltd
xor
xchg
aad
lock
or
sahf
push
in
shufps
in
inc
pop
or
addr16
sbb
mov
pop
scas
pop
xlat
sbb
push
xchg
xorl
xchg
imul
stos
daa
popa
xlat
rcl
or
sbb
and
mov
pop
xchg
loopne
push
inc
mov
jae
pop
in
lods
test
pop
mov
xor
lods
clc
xor
push
mov
cwtl
cltd
in
pop
inc
sub
outsl
shrb
pop
jnp
imul
mov
inc
cmpsb
push
jbe
insl
push
aad
mov
sbb
dec
jl
outsb
fbstp
pop
daa
outsb
mov
xor
cmc
test
mov
hlt
ljmp
jecxz
cmc
ss
cwtl
sbb
insb
mov
mov
inc
and
push
adc
jne
enter
lock
mov
pop
pop
push
push
jno
jnp
adc
filds
push
lods
jo
stos
or
sub
mov
fsubrs
jmp
fstpl
rcrl
js
adc
out
scas
daa
cli
mov
je
out
addr16
leave
lea
stc
pushf
loop
aaa
mov
js
sbb
shrl
call
loopne
mov
sahf
mov
incl
jl
sbb
test
jmp
and
lock
imul
lods
pusha
cmp
repnz
sbb
sbb
fadds
pop
jmp
push
adc
add
pop
jge
push
dec
lcall
cmpsb
decl
les
cld
je
fstpt
in
sbb
mov
adc
stc
dec
mov
lods
lock
je
dec
mov
movsb
jg
mov
or
jecxz
es
ja
mov
jnp
hlt
fnstsw
xor
lods
rdmsr
mov
xchg
stos
lret
xchg
add
push
sbb
pop
and
xor
out
add
push
xchg
sahf
into
stc
push
xchg
pop
mov
dec
negb
inc
dec
xchg
jmp
add
imul
pause
add
push
insb
mov
test
in
pop
ja
dec
aas
test
xchg
mov
fldenv
add
in
sbb
arpl
push
mov
jecxz
mov
in
scas
shrl
add
loop
outsl
sbbb
mov
lret
xchg
and
xor
mov
or
xchg
cs
dec
mov
sahf
adc
inc
paddw
in
je
jno
jle
js
lds
mov
sbb
cmp
rcrb
adc
dec
jmp
push
scas
or
addr16
leave
or
and
test
jns
les
into
xchg
adc
aas
adcb
dec
adc
pop
rolb
pop
addb
mov
ficompl
pop
add
rolb
xchg
movsb
push
cmp
ljmp
pop
jmp
adc
bound
push
cli
jno
data16
lea
out
adc
pop
roll
hlt
aam
sbb
adc
pop
in
repnz
arpl
das
scas
cld
or
ficoml
mulb
jns
outsb
mov
inc
xchg
pop
pop
das
sti
jns
repnz
test
in
out
adcl
jecxz
popf
fnstsw
xchg
leave
outsb
inc
pop
sbb
and
movsb
mov
xchg
or
xchg
pop
out
call
into
xchg
test
hlt
pop
pop
mov
inc
or
mov
adc
mov
stos
jmp
and
pop
insl
fimuls
scas
mov
lret
jne
popa
movsl
mov
rcrl
imull
xor
dec
jmp
ret
xor
push
push
out
aam
insl
xchg
out
test
pop
ret
jo
arpl
inc
pop
cmp
mov
and
mov
mov
in
or
stos
or
mov
pop
daa
jb
mov
adc
mov
dec
sub
jp
xchg
scas
enter
pop
aaa
int
icebp
loope
mov
sub
dec
push
mov
sti
xchg
dec
sahf
test
adc
mov
xor
and
cld
xorb
shlb
adc
outsb
jecxz
inc
xchg
int3
mov
sbb
mov
lods
lret
fdivs
sahf
lea
sbb
xor
mov
aaa
xor
mov
in
mov
imul
pusha
mov
mov
rolb
xor
cmc
push
adcl
fldenv
add
sub
sub
mov
xchg
iret
into
cmpsl
add
outsl
in
mov
ret
imul
imul
inc
fnstsw
sub
cmp
inc
or
jnp
pop
ljmp
testl
mov
lcall
lods
popf
es
repz
mov
jns
push
rcr
int
pop
fisubrs
and
mov
jmp
xchg
jl
pop
mov
loopne
inc
pushf
fstps
pop
fidivrs
jl
xchg
inc
mov
jnp
push
shll
fidivl
jbe
lret
xchg
xor
pop
pusha
sbb
cltd
insb
imul
dec
enter
out
mov
add
dec
outsl
jb
xlat
enter
xlat
lea
je
out
xor
movl
cmp
inc
out
mov
shrl
push
lret
push
mov
enter
inc
xor
in
incb
or
pop
and
mov
xor
insb
mov
cltd
cmp
bound
int3
lods
cli
repz
ljmp
movsl
incb
loopne
mov
dec
mov
je
cmp
mov
push
adc
cmp
dec
mov
cmp
jns
mov
xor
lret
in
sbb
mov
jecxz
add
mov
fnstenv
idiv
icebp
push
pop
push
bound
iret
mov
mov
cmp
mov
scas
add
fildl
or
sub
sub
mov
decl
in
jp
push
rcrb
add
popf
mov
or
outsl
cmpb
dec
lds
mov
lcall
cmp
in
out
xor
add
jl
sub
test
sub
int3
sbb
pop
adc
xchg
leave
push
je
xchg
push
and
jae
ljmp
inc
lahf
pop
pop
inc
dec
cmpsl
xor
movsl
sub
mov
ss
test
cmpsb
mov
xchg
outsb
fisttpl
add
loop
push
mov
int3
push
dec
loop
inc
repnz
pop
out
inc
xor
ret
and
aam
jecxz
or
jne
xchg
ja
inc
popf
rcl
cwtl
aas
adc
inc
add
sti
jnp
or
fildl
pop
adc
frndint
jns
add
dec
mov
jecxz
je
sahf
test
out
xchg
sbb
inc
inc
cld
fwait
mov
rolb
or
aaa
lock
mov
mov
out
out
add
jne
xor
or
and
push
sar
clc
outsl
mov
push
scas
movsb
arpl
jo
std
jns
shlb
and
xchg
sarb
in
rorl
orl
arpl
mov
out
adc
in
shr
fs
and
call
mov
push
adc
or
lret
cmpsl
pop
popf
roll
rclb
dec
xor
subb
sbb
pusha
cmc
test
inc
xchg
lea
inc
push
xchg
jmp
mov
movsb
aaa
aas
stos
push
pop
aas
sub
rcll
scas
lods
or
push
xor
add
mov
mov
aaa
dec
fdivs
mov
int3
cld
mov
test
sbbb
out
inc
repz
int
sbb
aad
mov
lahf
sbb
stos
mov
repnz
jp
jae
xlat
pop
pop
enter
stc
xchg
loope
jno
push
cmp
inc
lcall
mov
mov
push
xchg
mov
bound
lahf
inc
std
test
cltd
dec
adc
cmp
leave
xchg
mov
add
pop
lock
dec
cmp
sbb
pop
sarb
fldl
jb
mov
sbb
lcall
and
sti
or
mov
sahf
loope
sub
fsts
dec
sbbb
repz
mov
mov
pop
aam
daa
jnp
cmp
inc
inc
push
andl
jle
sub
jp
flds
dec
or
std
insl
bound
ds
sub
rcl
jmp
gs
jge
insb
pusha
mov
inc
xchg
xchg
xorb
xchg
pop
push
sbb
dec
aas
mov
push
lcall
sub
add
inc
dec
push
xor
mov
inc
add
sub
xor
jecxz
icebp
mov
lret
fldenv
push
jmp
pop
shl
inc
xchg
push
shrl
aas
fists
popf
pop
sbb
push
mov
in
xchg
or
rcll
and
out
ret
dec
pop
mov
jp
dec
dec
out
add
xor
into
sarb
pop
xor
daa
dec
push
xchg
in
sahf
cli
jbe
int
push
test
dec
fsubs
mov
sbb
popa
mov
popa
clc
imul
inc
dec
popa
imul
push
mov
fwait
les
push
xchg
addl
add
inc
aaa
dec
jp
cmp
sub
mov
cmp
jo
add
stc
in
addr16
mov
es
iret
jne
movsb
or
ret
pop
xor
bound
adc
out
cmpb
daa
pop
loopne
repz
js
ss
es
inc
jge
popa
lahf
jns
or
ja
bound
out
aad
loopne
sbb
xchg
xchg
popa
fcompl
or
push
inc
aam
jecxz
cmp
das
pop
pop
cmp
test
mov
push
stos
xor
sbb
push
push
orb
xchg
int3
lret
shl
add
sbb
mov
jecxz
aas
push
lahf
jae
adc
in
je
xchg
iret
in
sarl
in
dec
cli
adc
mov
inc
jl
sub
pop
sahf
mov
cld
outsl
fwait
jg
cld
mov
adc
ss
mov
scas
in
ljmp
es
cld
fadds
mov
sub
outsb
jl
adc
cs
xchg
inc
cmpsb
lcall
mov
or
jne
daa
pop
pop
std
jno
fidivrl
aas
pop
mov
mov
cmp
shlb
lret
scas
addr16
dec
inc
inc
dec
sbb
out
jmp
gs
out
lods
push
jmp
pop
aam
and
or
mov
popf
sub
xor
ds
data16
jo
gs
test
shlb
push
pop
fwait
jp
sbb
inc
cmpl
dec
and
scas
jb,pn
mov
out
mov
sbb
dec
mov
cmp
repnz
pop
stos
sbb
and
adc
dec
push
add
mov
mov
push
mov
popl
jmp
stos
clc
call
inc
lods
divb
push
push
mov
fisttps
xor
inc
pusha
mov
lahf
and
cmpsb
movsl
cmp
inc
jae
stos
sbb
add
jb
lea
aad
sub
sub
cltd
dec
add
and
adcl
cli
daa
mov
loop
pop
shrb
pop
adc
out
adcl
cmp
loop
pop
inc
je
in
fimull
cmpsb
push
das
cmpsl
mov
pop
pop
and
aad
add
shrl
xchg
push
adc
push
js
ljmp
add
int
push
mov
inc
sti
pop
add
push
shrl
scas
icebp
fs
adc
mov
or
ja
sbb
int
push
mov
sarb
dec
cmp
sub
xchg
dec
rep
ja
jno
mov
xor
sub
sbb
scas
add
lods
sahf
test
mov
and
jp
xchg
lock
or
stc
pusha
mov
xlat
jmp
movsl
push
pushf
jmp
cmp
in
mov
fdivs
add
dec
out
mov
popf
sub
mov
ret
in
cltd
adc
stc
in
mov
repnz
adc
push
cmp
sub
cmp
mov
sub
dec
cld
mov
push
les
inc
push
pop
push
dec
lcall
clc
xchg
mov
cmp
sub
fsubrs
pop
and
enter
fdiv
xchg
xchg
aaa
ficomps
decl
popf
incb
fildll
ret
fidivl
popa
pop
pushf
inc
mov
xchg
dec
insb
mov
jle
xor
mov
jno
adc
and
mov
cmpsl
je
cwtl
mov
and
in
enter
push
fucomip
enter
in
xor
fs
pop
xor
mov
adc
adc
push
mov
loopne
aas
pop
aad
in
addb
inc
sub
xchg
shrb
push
xlat
ja
add
jae
add
inc
in
push
adc
dec
jp
std
test
arpl
call
dec
loop
lods
cwtl
cmp
jle
test
add
inc
sbb
iret
pop
jne
or
or
frndint
movsl
dec
xor
iret
or
dec
mov
fxch
xchg
or
lods
add
loope
dec
xchg
and
repz
cmpsl
rcr
add
das
dec
adc
mov
cltd
mov
sets
push
int
bound
aas
mov
inc
imul
outsl
arpl
cmp
imul
es
and
mov
xchg
mov
nop
cmp
test
nop
jbe
add
adcb
scas
mul
add
cmp
push
mov
pop
jbe
push
jns
sub
sub
loope
pop
arpl
and
pusha
mov
xlat
out
popa
or
xlat
ljmp
in
jmp
push
adcl
sub
sub
test
mov
mov
push
andb
aas
dec
adc
sbb
xchg
sbb
mov
jle
icebp
pop
push
ja
mov
jl
data16
or
in
add
pop
ljmp
test
inc
or
sub
rcl
arpl
fidivrl
inc
repnz
loopne
xchg
mov
and
subb
in
nop
popf
cmpb
sub
sahf
bound
sub
pop
or
emms
arpl
and
dec
sbb
nop
or
mov
fisttpl
les
int
cmp
aam
into
dec
std
imul
mov
in
push
mov
xchg
jg
shl
push
int3
dec
and
loopne
out
add
stc
mov
shl
ja
cmp
lock
mov
mov
pop
lods
xchg
mov
rolb
inc
push
ds
pop
mov
cmp
or
lods
not
in
pop
andl
dec
aad
adc
dec
xchg
cmp
jbe
lcall
mov
dec
add
loop
cs
add
mov
add
push
stc
fwait
mov
sub
ret
pop
in
std
adc
mov
add
stos
mov
jmp
dec
lods
mov
xchg
mov
push
xchg
lcall
repz
add
jmp
std
push
xor
xor
pop
stos
nop
dec
dec
mov
xchg
xchg
ret
cs
hlt
jno
or
mov
inc
ret
cs
pop
outsb
stos
test
hlt
xchg
jge
and
call
xlat
jae
iret
fnstsw
xor
popa
mov
pop
outsb
out
cmp
jle
pop
adc
aam
xchg
push
and
mov
aas
push
cmovo
pop
rorb
sbb
or
hlt
xor
mov
enter
push
in
in
mov
aas
jecxz
inc
add
sub
mov
adc
pop
pop
das
loop
xacquire
popf
fistps
cmp
mov
pop
pop
push
adc
pop
inc
movsl
scas
sub
push
push
mov
add
add
aad
push
mov
stc
and
xor
out
mov
jbe
sbb
pop
cmp
pop
mov
xor
mov
filds
jle
cmp
mull
pusha
mov
movsl
sub
push
mov
push
rcll
add
adc
pop
or
into
sar
add
inc
jo
adc
push
xlat
test
pop
pop
xor
push
cmp
xor
mov
fdivl
adc
mov
and
add
loopne
push
lock
jb
outsl
xor
clc
cmpsl
fdivrl
ficompl
mov
fnstsw
fs
cmp
pop
jbe
push
das
dec
sahf
movsb
dec
add
jl
das
mov
mov
pushf
loop
insb
test
into
gs
jecxz
dec
jns
sbb
ja
in
push
lds
or
xor
jg
jg
outsl
cwtl
in
xchg
pop
dec
test
mov
and
and
xor
shrl
aad
loop
popa
je
lret
and
push
or
popf
aad
fsubp
push
insb
dec
xchg
push
ret
dec
fidivs
cli
sub
xchg
jge
xchg
mov
adc
cli
mov
cmp
mov
daa
mov
sub
adc
outsl
xchg
cmp
inc
push
and
aad
adc
pop
dec
ja
push
cmp
mulb
pop
popf
mov
repz
cld
add
mov
xchg
push
xlat
mov
mov
xor
jo
stos
push
jmp
ret
ss
pop
stos
push
loopne
das
fdivrs
sub
pusha
rolb
add
rcr
push
lods
movsl
lret
pop
push
mov
fidivs
mov
into
cmpsl
jb
adc
sub
and
mov
jns
mov
add
mov
xor
out
insb
or
pushf
adc
cltd
jns
jmp
mov
inc
xchg
push
mov
sub
test
fsubs
cmp
mov
cmc
test
je
inc
mov
loop
mov
push
jp
pop
sti
sub
mull
aad
data16
in
loope
test
dec
push
add
std
dec
dec
addr16
xor
test
push
mov
inc
js
sub
loop
in
xchg
sub
mov
mov
xchg
jne
mov
xor
das
jae
inc
out
adc
push
cltd
or
dec
jae
clc
cmp
out
adc
jge
or
mov
out
pop
mov
icebp
int
mov
mov
je
cwtl
sbb
pop
sub
cld
add
jb
push
pusha
lds
xor
jle
addl
pop
enter
lea
or
call
push
mov
ret
fwait
cmp
inc
cli
test
cmc
fbstp
notl
sub
idiv
lcall
cmp
mov
dec
iret
dec
mov
mov
add
shl
popa
xchg
sarl
jg
bnd
mov
mov
jne
fldl
add
in
push
push
dec
idivl
fldl
call
scas
push
decl
std
xchg
xor
or
rcl
pop
sub
xchg
test
fwait
mov
sti
jle
sub
testb
jns
cmp
dec
mov
xor
daa
ret
inc
dec
push
fsubl
ds
outsb
in
pop
lods
mov
push
fs
gs
xlat
adc
arpl
sti
inc
sub
push
dec
dec
push
dec
sbb
push
jl
ficoml
dec
nop
adc
test
mov
and
mov
addr16
push
xchg
rcrb
jp
in
mov
ret
mov
sub
jl
bound
lret
jge
inc
shll
adc
in
rorb
pop
cmp
dec
jo
or
pop
inc
inc
xor
jge
jg
add
mov
pop
into
sbbb
scas
dec
imul
aad
add
xchg
xorl
jns
pop
ret
inc
ret
push
es
add
leave
sbb
sub
jbe
add
or
push
stos
scas
outsl
xor
cmp
aaa
sub
sub
mov
add
shrl
add
incl
faddl
push
push
gs
push
pusha
ja
ret
rorl
and
jbe
das
in
inc
inc
dec
mov
sbb
aas
xchg
gs
mov
jl
js
test
mov
cmp
pop
jb
mov
notb
xchg
ret
hlt
push
mov
and
jp
shl
inc
mov
aaa
mov
les
fcomi
cmp
xor
ljmp
scas
pop
push
and
hlt
ljmp
cli
adc
push
or
push
icebp
dec
cmpsl
enter
outsl
pop
nop
xlat
add
in
jmp
xchg
push
test
pop
shlb
push
icebp
clc
in
ret
and
out
mov
pop
rclb
xor
add
mov
imul
fisttpl
ret
inc
mov
jns
inc
dec
jbe
enter
enter
loope
insb
push
mov
xor
loop
and
xchg
dec
aam
push
iret
cmp
fistpl
cmpsl
cmp
or
jmp
or
jge
mov
mov
mov
lds
sbb
out
xchg
push
rclb
jge
or
xchg
inc
cld
xor
or
bound
insl
fs
mov
sbb
jp
into
gs
les
dec
mov
arpl
jne
sbb
inc
es
xchg
jo
loope
outsl
shlb
test
cli
cmp
je
scas
xorb
int3
xlat
or
xlat
scas
pop
jns
push
ja
or
insl
into
mov
shl
in
xchg
jne
sbb
cmpsl
std
sti
pusha
rclb
cltd
jbe
lret
push
jmp
lahf
jl
roll
pop
adc
mov
lret
fisubrs
mov
adc
ja
call
pop
pop
sub
aas
mov
outsb
mov
ds
cmp
sub
jmp
and
push
or
in
mov
es
add
vcvttps2dq
stos
mov
xor
push
add
mov
push
dec
push
push
dec
std
cli
and
or
pop
xchg
lea
pop
add
out
jb
add
stos
jne
cli
aaa
sub
lods
mov
mov
xchg
push
add
push
subl
mov
lret
push
jae
jp
add
jp
outsl
mov
mov
xorb
mov
cmp
sbbb
cmp
mov
int3
add
decl
insl
ljmp
jo
add
cmp
xor
in
lods
sbb
rclb
std
and
out
xchg
stos
jo
insb
or
rclb
inc
outsl
pop
sub
jecxz
scas
aas
ret
xchg
cmpsl
pop
sub
mov
mov
jne
es
pushf
xchg
lret
rcrl
jns
insb
dec
pusha
inc
mov
ret
mov
adcb
ds
add
mov
loop
es
pop
movsl
lock
daa
gs
pushw
add
outsl
pop
cmpsb
daa
mov
push
jp
xchg
test
in
outsb
xchg
out
adc
pop
add
dec
inc
push
call
cmp
mov
xchg
xor
add
imul
movsb
das
faddp
cmp
into
test
aad
and
sti
mov
or
cmp
adc
cmp
sbb
sbb
jno
scas
fstpl
out
xchg
lahf
cmp
inc
ret
mov
jge
imul
sub
out
pushf
mov
rol
das
scas
cmpsl
push
push
mov
xchg
push
loope
lock
in
ss
in
sub
xchg
les
pop
pop
mov
bound
and
rcrl
cld
sub
lds
fidivrl
mov
push
xor
adcb
scas
and
sbbl
push
mov
mov
add
jg
ljmp
les
stc
xor
enter
arpl
lahf
pop
fstp
push
dec
xchg
pop
and
adc
ret
push
xchg
jmp
loop
popl
mov
js
and
aas
fwait
pusha
data16
xchg
je
test
leave
movsl
xlat
xchg
sar
pop
mov
mov
arpl
mov
ss
dec
sbb
sarl
xchg
xor
sub
outsl
cltd
xchg
aam
mov
mov
dec
inc
mov
aaa
and
ret
push
pop
jge
testb
sub
repz
xchg
mov
xchg
xor
into
aam
bound
cld
xor
jne
push
push
sub
fadd
cmpsb
aad
cmp
push
les
fwait
push
xor
add
mov
movb
outsb
data16
xchg
jle
push
movsb
lret
jp
rclb
popf
lea
inc
dec
sbbb
pop
das
pop
rorb
dec
cli
pushf
cmpsl
ss
addb
pop
add
push
fstps
lret
inc
leave
outsb
aaa
and
mov
inc
into
dec
xchg
fnstenv
pop
loop
mov
fcmovne
sbb
jle
cli
clc
pop
pop
popa
icebp
fildll
pop
sar
outsb
push
cltd
cli
or
ror
mov
mov
adc
xor
push
nop
leave
and
xchg
mov
cmp
push
stos
add
stos
cmp
ss
add
adc
xchg
adc
jecxz
lret
lock
inc
imulb
testb
test
movsb
xlat
in
xor
mov
cmp
dec
in
out
sub
ljmp
adc
dec
sbb
mov
xlat
test
mov
mov
in
stos
lds
stos
inc
cltd
lds
unpckhps
ss
xor
stos
push
xorl
lcall
addl
js
imul
xchg
pop
jle
mov
nop
subb
push
cltd
data16
fnsetpm(287
push
shlb
hlt
push
les
sahf
lds
sbb
push
mov
jl
mov
fwait
je
int3
rcl
cwtl
and
sub
jo
fisubs
sahf
cmp
pop
inc
inc
int3
fcoml
scas
push
add
popf
add
cmp
jmp
aad
out
cmp
xor
out
sbb
mov
mov
jnp
dec
dec
jl
xchg
mov
clc
xor
jle
leave
in
das
testl
sub
mov
mov
ja
into
cmp
lods
add
cmpsb
inc
out
cmp
mov
jne
add
sbb
inc
leave
pop
jns
and
sbb
xchg
sub
xor
pop
mov
pop
jg
pop
cltd
shll
cmp
xor
lea
cmp
pop
js
bnd
cmpsl
stc
inc
rcll
xor
adc
mov
fimuls
mov
sbb
scas
xor
repz
sub
test
shl
sbb
mov
add
movsb
mov
xchg
pop
notl
popf
ret
fwait
scas
dec
sbb
shlb
sti
jb
mov
fs
inc
jbe
push
mov
xchg
mov
push
lret
pop
int3
enter
pop
add
xchg
mov
push
or
insl
lahf
jg
inc
js
xchg
in
lods
stos
in
cmc
lret
cmc
es
fucomi
lods
adc
pop
fmul
test
sub
mov
mov
push
jae
call
or
sbb
fidivrl
sarb
repnz
int3
pop
or
adc
shlb
pop
mov
cmp
jge
sub
out
out
and
adc
rorb
fs
push
and
push
jecxz
and
addr16
push
out
ds
inc
pushf
mov
out
and
std
ljmp
or
sbb
sahf
idiv
imul
jge
sbb
in
sbb
sbb
js
popf
cmp
test
adc
iret
sbb
mov
add
jb
adcb
lret
rorb
mov
enter
inc
cmc
mov
cmp
in
flds
mov
mov
ljmp
scas
addr16
push
sub
mov
sub
in
filds
jl
push
xor
sub
push
adc
mov
outsl
je
cmpsl
shrl
pop
lods
stos
mov
xchg
mov
xor
testb
mov
jne
movsl
cmpsb
sub
or
cmp
test
adc
jle
jo
fimuls
fldenv
ljmp
sub
insl
lret
xchg
mov
cs
leave
jmp
xor
cmp
inc
sub
cmp
add
push
cmp
xor
cmpl
sahf
push
fs
add
ljmp
int
movsl
bound
fadd
add
push
iret
sete
push
cmp
lea
pop
cld
shlb
fwait
xor
xchg
repz
mov
aas
push
lret
aas
cmc
jmp
xor
xchg
mov
sbb
mov
mov
jns
jg
ror
icebp
out
in
sbb
mov
and
mov
mov
mov
mov
pop
adc
sarl
arpl
icebp
stos
aaa
sbb
jp
xchg
inc
sub
inc
mov
scas
fcomps
movsl
push
lods
fsubp
and
xchg
push
jp
sub
pop
in
cmp
pavgw
inc
mov
cwtl
mov
lret
in
out
out
pusha
in
lods
sbb
cmpsb
ljmp
inc
xor
jno
dec
xor
aas
adc
cmp
je
into
popf
fstpt
adc
pop
push
mov
add
and
jns
dec
inc
ret
les
jne
xchg
mov
cmpsl
cmpl
pushf
stos
mov
rorb
jae
addr16
xchg
push
ja
sub
mov
fdivp
push
pop
mull
mov
repz
add
xor
push
out
mov
mov
mov
mov
cmpsl
loopne
push
mov
cmpb
lea
and
loope
incl
mov
leave
sub
sbbb
test
aas
les
add
ljmp
cmpsl
jb
or
outsl
mov
lock
lahf
test
js
add
fwait
sub
pop
pop
mov
sbb
or
faddl
aas
rcrl
dec
nop
mov
aad
cwtl
mov
and
push
cmp
loopne
fisubs
and
rorl
and
adc
xor
and
sub
cltd
loopne
dec
lret
or
aam
rorb
xchg
je
pop
hlt
jo
test
xchg
push
pop
faddp
dec
push
pop
aad
out
sbb
push
pop
ffreep
arpl
and
loop
push
sbb
std
nop
jg
sbbb
and
movsb
sti
cmc
cs
jg
loope
mov
or
rcll
push
mov
cmc
xchg
dec
mov
ja
push
xor
mov
pop
dec
sub
bound
lock
imul
es
popa
sub
std
push
fidivrl
dec
ds
movsl
cwtl
mov
sub
lahf
test
stc
inc
pmaxsw
push
out
jmp
enter
out
mov
lods
jno
or
sarb
xchg
and
dec
or
or
lahf
jno
sbbl
jecxz
aad
aaa
out
ss
or
inc
adc
ljmp
sti
sub
adc
jo
ja
add
and
nop
fstp
pop
popa
push
loop
mov
aaa
insb
hlt
mov
dec
xor
cltd
pop
push
mov
js
sbb
add
aad
loopne
dec
xchg
mov
sub
es
cmp
enterw
mov
adc
push
sbb
cmp
in
sub
insl
fldenv
mov
pop
dec
int3
repnz
pushf
fcmovu
mov
inc
lock
test
sub
jle
lahf
dec
pop
mov
mov
mov
pushf
push
dec
scas
push
or
js
and
mov
pop
cmpsl
aas
dec
jmp
scas
dec
adc
fimuls
sarl
gs
cmp
pop
mov
test
push
adc
nop
jecxz
iret
leave
lahf
sub
or
mov
in
frstor
push
adc
push
mov
cs
scas
xor
pop
cmp
pop
lahf
mov
xchg
jns
dec
fdivl
decl
sub
xor
ds
pop
scas
xor
fmull
cwtl
adc
dec
test
setb
jge
mov
jp
push
andb
lret
mov
push
ja
loop
cmp
sbb
dec
xchg
fsub
aaa
js
jp
dec
pop
jno
sbbb
mov
out
rclb
mov
jp
mov
into
das
faddl
cmp
adc
xlat
lret
stos
in
loopne
sbb
das
cmp
and
inc
arpl
mov
lahf
stos
aaa
enter
add
cltd
lahf
dec
mov
les
or
scas
adc
pop
pop
jb
and
mov
mov
pop
mov
repnz
sub
or
sub
outsb
mov
lret
or
jl
xlat
push
dec
push
aas
jecxz
pop
mov
ficomps
loop
sti
shll
pop
orb
push
aaa
xchg
data16
movsb
mov
leave
ja
cltd
mov
je
pop
test
mov
and
push
push
jle
jo
cmpsb
inc
xchg
sbb
aad
sbb
stos
dec
xor
mov
roll
in
mov
dec
testb
out
mov
jge
js
aad
out
jmp
data16
and
pop
xchg
inc
sbb
adc
ret
xor
fs
aad
testb
push
jg
es
ja
jmp
decb
push
mov
mov
inc
sub
outsl
cld
and
mov
cmp
or
bound
loopne
lods
les
adc
mov
inc
cld
ret
cmp
inc
sub
je
dec
stos
and
xor
fwait
xchg
push
or
bound
ljmp
ret
xchg
cmp
cmc
fstps
and
enter
mov
adc
xchg
push
xchg
call
adc
pop
push
inc
lods
add
sti
ljmp
mov
jle
test
and
add
movsb
iret
icebp
test
pop
nop
pop
xor
mov
sub
movsb
ret
push
xchg
daa
ljmp
sahf
mov
scas
cmp
xchg
or
sbb
inc
mov
jl
pop
sub
shrl
rcr
ret
sbb
dec
sbb
jge
jle
test
xor
leave
lock
test
jae
cli
movsl
inc
ljmp
sbb
cltd
stos
gs
ds
addr16
push
mov
xor
call
and
cmpsl
jle
push
mov
pop
fs
sbb
push
movsb
cld
shll
scas
repnz
inc
insb
inc
or
movsl
test
sub
xlat
arpl
fdivrl
adc
leave
add
movsb
mov
ret
lret
in
jno
jge
add
repz
and
dec
shlb
mov
icebp
pop
pop
add
inc
pop
mov
aaa
test
lds
pop
mov
mov
popa
inc
xchg
iret
dec
mov
sahf
lea
xchg
sub
frstor
cltd
clc
cmpsb
adc
adc
popa
decb
push
dec
shll
push
shlb
adc
pusha
enter
push
dec
sbb
cmp
xorb
push
leave
pop
jbe
sbb
xorl
testl
adc
fldenv
adc
repnz
into
fld
cmp
adc
pusha
jne
inc
call
jl
unpckhps
pop
jp
dec
lods
xchg
mov
mov
xor
lea
ds
sti
sub
lods
lret
ret
rorl
jl
lock
adc
mov
pop
ret
enter
add
push
popf
mov
addr16
repnz
mov
lods
inc
push
pop
test
test
aaa
fdivrl
add
hlt
stos
dec
jae
and
inc
xor
jno
dec
ss
pushf
pop
lcall
mov
scas
jp
sbb
jp
and
insl
fstpt
ret
sbb
mov
aam
lea
rol
adc
jecxz
loopne
push
scas
mov
cmp
pop
push
mov
test
xchg
mov
mov
adc
decl
push
pusha
outsb
dec
cmp
mov
pop
mov
xchg
adc
cwtl
aas
pop
or
testl
idiv
insb
in
and
test
sarl
adc
sbb
inc
cltd
mov
sub
jns
sub
cmp
inc
mov
les
add
add
daa
stc
loope
lods
fstpl
push
shll
sub
call
test
in
int
adc
dec
popa
into
in
fwait
imul
mov
push
out
mov
sub
and
adc
xchg
rorl
or
dec
mov
and
addr16
imul
push
dec
cmp
arpl
inc
repnz
xor
cmp
mov
or
pop
pop
jo
test
testl
mov
rorb
out
pop
xor
test
clc
data16
inc
int3
int
push
cmp
cli
inc
mov
mov
mov
mov
std
pop
lahf
xor
adc
and
lahf
xchg
inc
test
inc
jo
into
fs
cwtl
jl
pop
movsl
mov
scas
fiaddl
or
pusha
jns
dec
lret
mov
loope
out
xor
sbb
sti
fwait
outsb
and
lret
fs
cmp
sub
int3
xor
fdivrs
mov
cmpsl
fbld
adc
jmp
jmp
pop
lds
adc
sahf
adc
or
icebp
std
std
int3
xor
xchg
cmp
jo
xchg
adc
lea
in
dec
jecxz
dec
dec
sahf
lea
ljmp
or
or
js
lcall
jecxz
mov
int
push
pop
cmpsb
xchg
sarl
in
fmul
test
ljmp
in
and
cwtl
je
sbb
sbb
sub
mov
adc
movsb
add
sbb
jecxz
xchg
adc
repz
xor
lea
lods
out
adc
adcl
jae
pop
push
mov
repz
jbe
fsub
mov
mov
jp
adc
aam
out
stos
xchg
shll
or
xchg
inc
and
das
adc
and
out
cmp
aam
sub
and
divl
cmpsl
mov
cltd
roll
sub
and
stos
pop
repz
sti
ficomps
outsl
pop
mov
out
pop
fsubrl
inc
in
lret
enter
jno
adc
mov
nop
daa
inc
rorl
mov
ljmp
inc
or
mov
rclb
iret
and
cmp
lods
inc
adc
fcoms
push
stc
outsb
rcrb
ds
fcmovu
out
sbbb
aaa
add
and
jbe
data16
pop
xchg
in
push
in
es
xchg
push
in
icebp
xchg
pop
mov
daa
arpl
pop
testb
lret
jb
aam
dec
int3
jp
pop
mov
pop
scas
scas
outsl
xor
pusha
pop
jl
dec
lds
cwtl
xchg
in
jns
ss
js
gs
bound
pop
cltd
cmp
xor
xor
std
and
lods
clc
mov
push
and
xor
out
and
pushf
xchg
jge
popa
lret
sbb
cmp
movl
mov
mov
cmp
popf
sbb
cltd
xchg
je
daa
xchg
orl
sbb
es
aad
insb
adc
xchg
mov
sbb
out
dec
jmp
leave
xor
test
or
adc
cmpsb
loope
negb
mov
pop
dec
cmp
push
mov
popa
add
in
lock
mov
fisttpl
imul
sub
or
pop
cmp
inc
mov
int
int3
andb
mov
dec
dec
or
sti
rorl
sub
mov
push
push
std
sbb
rol
push
repnz
int
rorl
test
push
pop
xchg
pop
jne
add
pop
mov
mov
dec
or
pop
sub
mov
xchg
shll
inc
and
inc
mov
dec
and
mov
or
out
pop
xor
and
push
sbb
push
mov
popa
xor
jle
add
aas
mov
out
std
mov
in
int
hlt
add
jae
shr
icebp
les
addr16
adc
cmc
mov
xchg
jae
mov
sbb
scas
fisttpl
outsl
rcl
mov
aas
rclb
jo
repz
arpl
jbe
adc
roll
sbb
dec
adc
sub
rdtsc
psubq
mov
es
adc
and
mov
test
cmp
inc
fbstp
test
pushf
inc
testb
outsl
movsl
es
ja
imul
data16
sarb
jecxz
jmp
idivb
jne
and
lcall
sarb
mov
mov
add
aas
lahf
inc
adcb
lret
pop
mov
dec
iret
test
movsl
mov
xchg
mov
sahf
lock
mov
lcall
mov
jg
ljmp
mov
stos
jl
lret
mov
sub
fldenv
jbe
in
and
xchg
xor
sahf
lods
test
mov
inc
std
out
pop
bound
hlt
das
xlat
test
orl
jl
or
mov
inc
push
pop
adc
insb
adc
sti
sub
push
jno
outsb
lds
xchg
loope
insl
cmp
out
scas
jmp
aad
jnp
repz
lock
dec
mov
imul
or
jl
fcmovne
sub
mov
aad
hlt
lods
add
mov
cmp
inc
push
xor
mov
sub
iret
sub
mov
popf
add
mov
push
lcall
push
fwait
cmpsb
jecxz
ja
enter
fadds
ljmp
loopne
jl
xchg
and
sub
sub
test
pop
loope
inc
mov
push
or
imul
movsb
lea
ljmp
inc
and
mov
mov
fdivl
pop
scas
into
dec
cs
rcr
fcomps
push
xor
push
mov
jbe
push
pop
leave
cwtl
push
sbb
cmc
mov
lods
jg
sbb
add
in
fcoms
stos
in
movsb
add
push
xchg
push
cwtl
cmp
popf
out
mov
nop
fstpt
pop
mov
leave
adc
or
push
xchg
lcall
inc
inc
or
repz
cmp
or
imul
jecxz
dec
inc
pop
clc
push
xchg
push
sbb
pop
xchg
js
jb
repz
jbe
pop
in
jo
rol
ret
lods
sti
int3
lods
gs
xchg
inc
fwait
loopne
xchg
ficoml
out
mov
ss
push
mov
sahf
sbb
notb
cmp
xchg
sbb
or
leave
ret
ss
aaa
adc
jle
pop
fdivs
test
add
dec
jp
xchg
gs
int
mov
push
pop
in
mov
aam
andb
sbb
add
xchg
andps
sbb
imul
mov
and
mov
mov
jbe
stc
pop
cmp
lret
popa
iret
and
sti
inc
imul
cmp
pop
jae
add
ror
ret
xor
movsb
dec
jno
outsb
arpl
std
fwait
xchg
pop
mov
into
mov
subl
mov
ss
repnz
in
andl
xor
shr
and
dec
aam
mov
loope
lods
xchg
addr16
out
hlt
pushf
fwait
sub
aad
insb
jp
jbe
sbb
loop
push
mov
in
jno
dec
add
cmp
xor
dec
dec
ss
shlb
jnp
addr16
cmpsb
insl
or
mov
fldt
enter
inc
daa
loop
adc
bswap
pop
mov
imul
xor
adcb
cmpsb
movl
fmuls
test
or
jecxz
cmp
xchg
ss
clc
jp
imul
imul
jo
add
push
lock
roll
lret
daa
push
mov
and
dec
mov
jmp
mov
mov
dec
rorb
repz
dec
and
pop
xchg
rorb
iret
sub
test
popa
xchg
or
iret
dec
ljmp
iret
cs
outsl
push
dec
push
inc
add
or
xchg
popf
jecxz
jae
xor
push
fsts
test
sub
jl
mov
rorb
clc
cld
sbb
popa
data16
and
incb
inc
lds
xchg
pop
sbb
testb
pushf
andl
or
enter
or
stos
dec
pop
test
cmp
loopne
sub
call
push
stc
je
push
lds
mov
jns
mov
out
mov
aam
and
push
mov
xor
inc
inc
popf
jno
adc
xchg
pop
push
xchg
mov
fcomps
jle
mov
xchg
mov
lods
sbb
jmp
pop
fdivl
add
lret
xor
test
xchg
nop
mov
outsl
jg
push
movsl
aad
lods
mov
jne
test
insb
adc
add
das
loopne
pop
sub
mov
lahf
sbb
fisubrl
dec
xchg
loopne
roll
ret
outsb
fimull
xchg
add
insl
dec
mov
xor
add
xor
fxch
push
lcall
mov
inc
dec
add
inc
movsl
add
mov
add
aam
add
xchg
inc
es
in
stos
ljmp
pop
out
mov
in
adc
test
push
xor
outsb
scas
push
push
push
in
roll
xchg
push
dec
pusha
push
xor
pop
jl
fs
jo
mov
jle
and
jae
hlt
stos
xchg
or
mov
sbb
stc
out
ja
cmp
jge
cmp
scas
lea
xchg
je
imul
push
pop
call
pop
or
inc
xor
arpl
or
push
icebp
dec
lods
push
push
pop
subl
sub
push
mov
adc
xchg
scas
fnstsw
or
test
out
adc
sub
inc
incb
xchg
xor
imul
pmaddwd
or
stc
into
xor
or
mov
xor
clc
cmp
xchg
inc
adc
sahf
jo
aas
adc
mov
mov
or
shll
cmp
cs
aam
or
pop
cmpsb
push
mov
inc
sub
and
fdivl
test
testl
push
out
cwtl
enter
or
bound
and
adc
aam
push
jae
mov
inc
pop
lods
mov
or
aaa
cmpsb
sahf
inc
sub
jmp
jne
clc
test
xor
aaa
inc
push
dec
scas
or
jl
loope
mov
int3
lods
das
iret
jge
stos
mov
daa
ret
pop
xor
push
pop
jo
mov
sub
and
cmc
xchg
dec
mov
or
jmp
lock
and
inc
in
arpl
loop
mov
xchg
mov
cmpb
pop
cwtl
adc
cmpsl
mov
mov
dec
mov
jns
dec
dec
mov
cmpl
sarb
rcrl
and
or
add
cmp
leave
jl
mov
pushf
outsb
sbb
xchg
fadds
in
xchg
jge
test
popf
cwtl
jecxz
push
mov
adc
rorb
sub
imul
xchg
add
adc
int3
shrl
and
dec
aad
sti
mov
push
loope
xchg
mov
loope
push
xchg
arpl
mov
mov
shrb
mov
rcrb
sub
aaa
mov
mov
jne
inc
fildll
loopne
sbb
push
loop
sub
pop
sahf
addb
fstl
or
fnstsw
fsubs
cmpsl
mov
nop
xchg
jbe
push
inc
out
mov
push
ljmp
dec
loopne
fstl
nop
or
cmp
add
pop
repz
xor
adc
sub
pop
cmpl
out
dec
enter
dec
cmp
addr16
add
jb
popa
arpl
icebp
xor
sub
loopne
sbb
mov
aas
rclb
test
add
dec
xchg
xchg
cli
pop
test
xchg
mov
icebp
iret
sub
cs
push
out
add
cmc
adc
pusha
shlb
ja
ss
int
ljmp
repnz
or
cmpsl
xlat
shll
inc
loop
lcall
or
ficompl
cwtl
xor
addl
and
pop
lret
sti
or
jo
push
mov
mov
lret
mov
inc
push
pop
sub
clc
ffreep
xchg
cltd
or
xchg
sbb
hlt
or
dec
xor
push
sbb
xor
jnp
pop
pop
mov
dec
jg
add
sub
nop
push
ljmp
enter
jle
dec
outsb
lret
in
fisttps
xchg
and
dec
adc
addb
pop
insl
popa
push
test
and
test
mov
je
std
sub
mov
mov
pushf
dec
and
je
cltd
inc
push
and
mov
jg
jl
movsl
sub
xchg
inc
xchg
sbb
sti
sti
pop
and
int
pop
push
sub
fiaddl
cmp
dec
ret
ss
sbbb
jbe
sub
inc
imul
jns
pop
xlat
jo
test
sar
lds
mov
push
fnsave
sahf
xchg
repz
loop
inc
fs
fs
popa
push
jmp
xor
int
subb
lock
jb
es
jle
test
in
dec
mov
cmp
or
fbstp
fimuls
push
loope
fnstsw
jns
lea
lds
xchg
mov
push
push
lea
arpl
int
mov
lret
dec
scas
adc
and
or
mov
xchg
mov
in
sbb
std
xor
add
pusha
vpsllw
fs
adc
jge
mov
mov
mov
push
push
or
sbb
out
xchg
fsubs
add
or
pop
out
and
daa
adc
fnsave
xchg
mov
jmp
push
lcall
sbb
popf
lret
inc
mov
loopne
cmpl
cmp
and
and
lcall
ljmp
setg
inc
loop
addr16
or
out
xchg
pushf
cs
sbb
jns,pn
lcall
test
inc
ss
mov
nop
into
or
inc
cltd
sub
int3
jge
movsb
iret
cmp
insb
outsb
pop
dec
insl
outsb
mov
pushf
mov
jns
cwtl
push
stc
popf
imul
dec
jp
and
and
stos
pop
jmp
xor
adc
fbld
lea
jmp
add
nop
fucomp
pop
jb
push
daa
add
cmp
sub
or
dec
clc
xchg
mov
ret
aas
inc
icebp
dec
divl
fs
out
pop
das
arpl
xor
adc
call
aaa
mov
mov
data16
and
daa
jnp
xchg
ret
xchg
pop
addr16
addr16
hlt
cmp
sarl
dec
pop
xchg
lahf
or
mov
ja
push
mov
orl
repnz
inc
enter
mov
xchg
dec
in
mov
fstpt
iret
cli
or
or
push
xchg
pop
roll
cwtl
orl
imul
mov
or
rcrb
std
ds
fstpl
push
cmpb
lods
cmc
adc
xchg
and
or
or
fdivs
and
inc
scas
popa
jns
test
lcall
or
dec
imul
aas
push
sub
out
lods
pop
adc
popf
mov
pop
mov
aad
addr16
testb
mov
in
fstl
bnd
mov
mov
inc
inc
jle
sarb
jnp
dec
and
lods
push
sti
cmp
imul
iret
xchg
call
mov
pusha
and
xacquire
pop
mov
imul
mov
aaa
push
cli
and
imul
clc
cmpsl
loop
fs
rolb
cmp
mov
out
loop
ss
and
xor
xchg
mov
fnstenv
cli
or
and
movsl
add
jnp
mov
cmpsb
add
out
jne
lds
sub
dec
in
idivl
mov
fwait
adc
xor
clc
cmp
mov
pop
jecxz
sarl
shl
test
mov
cmp
fs
inc
adc
push
or
push
js
adc
ret
call
ds
add
push
pop
lahf
rol
pop
je
scas
sub
bound
add
mov
lcall
dec
dec
lret
push
rolb
aad
inc
mov
pop
jmp
lock
es
into
adc
xchg
adcl
loop
mov
loop
imul
roll
mov
int
sahf
jno
mov
mov
loop
test
es
xchg
js
insl
cwtl
shl
mov
jnp
sub
in
nop
or
cs
and
notb
mov
mov
inc
stos
pop
into
push
mov
mov
push
sahf
repnz
in
mov
sub
fmuls
push
aam
in
test
nop
xchg
ja
xor
mov
sbb
cmp
sub
enter
jmp
adc
idivb
xchg
repnz
sub
addps
sbb
aam
or
ret
imul
decb
or
mov
in
bound
sbb
fisttpl
outsl
and
scas
xor
inc
in
inc
mov
or
mov
cli
jp
mov
jo
mov
adc
and
pop
adc
xchg
mov
jg
dec
sbb
jecxz
lods
pop
and
xchg
sti
fimuls
sbb
addb
stos
out
jmp
push
inc
out
pop
mov
in
out
mov
lods
sub
xchg
arpl
stos
fs
rcr
sub
push
mov
imul
fmull
add
sbb
mov
xor
imul
push
sbb
int3
mov
xchg
inc
adc
fimull
loop
jg
das
int3
inc
test
adcb
andb
pushf
aaa
xchg
and
and
ret
stos
cmpsl
idivb
or
pushf
mov
bnd
mov
fidivs
pop
test
test
lds
cmp
adc
js
cmovp
insb
pop
and
loopne
xor
rorb
rclb
and
cmove
pop
xchg
adc
bound
jle
mov
push
adc
loope
movsl
repz
xchg
mov
jge
mov
std
sbb
mov
sahf
push
xchg
sub
mov
addr16
dec
push
add
jg
lods
setbe
mov
dec
jp
iret
test
jbe
adc
lcall
or
dec
jnp
mov
ret
shl
push
sbb
ljmp
add
mov
std
mov
sub
mov
insb
mov
jns
mov
stc
mov
testb
or
inc
mov
loopne
push
loopne
cmp
adc
fpatan
loopne
rcll
xchg
leave
int
jnp
lret
sbb
mov
cli
nop
pop
mov
cli
push
jmp
test
push
sub
movsl
cli
sbb
lock
int
push
jle
lods
ss
popf
xor
inc
mov
mov
sbb
mov
in
sar
je
push
mov
movsl
cpuid
mov
aam
cmpsb
out
insl
sub
jbe
sarb
aad
enter
stos
test
lods
loopne
pop
sub
mov
jg
sub
or
push
es
sbb
in
and
cmc
loope
iret
jg
into
and
mov
dec
pop
icebp
inc
or
cmp
cmpsb
shrl
jns
sahf
and
and
xchg
xor
xchg
jb
jae
xchg
lods
xor
sbb
dec
sub
add
mov
push
xchg
dec
jge
movsl
stos
lock
sub
test
add
adc
or
shlb
mov
ret
or
mov
jno
pop
addr16
push
scas
fcmovu
fxch
dec
push
out
lods
je
inc
inc
adc
int3
ds
jns
mov
ds
std
adc
mov
add
test
or
std
push
or
out
sub
inc
jnp
cmp
jge
scas
mov
xchg
data16
or
adc
das
in
jbe
lret
adc
in
push
cmpl
pop
jns
lock
pop
pop
lret
std
insb
push
testl
sbb
std
adc
mov
sub
popf
and
adc
dec
jmp
jge
jb
and
lods
fisubrs
mov
mov
outsl
cmp
inc
jne
outsl
cltd
outsb
popa
mov
test
shrb
lods
mov
popf
iret
inc
adc
cmc
aas
or
lret
sahf
sbb
aam
push
repz
in
lcall
lahf
xchg
add
push
sub
pop
repz
mov
pop
imul
pop
pop
or
mov
pop
xchg
ja
push
inc
cmpsl
lds
rclb
fs
sub
lods
jmp
dec
and
dec
xor
mov
outsl
mov
and
mov
and
add
jne
xlat
clc
push
dec
bnd
js
and
in
add
cld
lahf
dec
pop
enter
movsl
outsl
hlt
mov
or
mov
das
and
test
xchg
xchg
sahf
mov
lahf
jecxz
sbb
roll
call
jl
stos
jmp
popf
into
adc
aas
mov
mov
jl
dec
stos
loopne
loope
mov
xlat
pop
bound
test
cs
mov
cs
out
mov
and
xlat
jecxz
inc
pop
scas
dec
pop
jge
add
inc
jle
dec
test
out
in
cmpsb
xor
xchg
pop
sub
sbb
jbe
icebp
adc
loope
jle
jno
pop
cs
cmp
xchg
jbe
mov
adc
xlat
out
pushf
mov
fwait
arpl
mov
loope
inc
call
dec
scas
dec
mov
int3
cmpsl
mov
push
mov
ficomps
lea
or
xor
stc
jl
inc
inc
cmp
aam
ljmp
jae
cmpsb
push
int3
jno
dec
xchg
lds
shrb
sub
sub
sub
cmp
out
push
loopne
cmc
gs
adc
std
outsl
rcr
or
push
mov
mov
popa
push
xchg
rcrb
mov
cmp
jb
mov
xor
ja
roll
aas
jl
xchg
shlb
inc
or
jp
lret
jle
sbb
movsb
dec
sbb
push
adc
cmp
das
ror
mov
lcall
imul
ljmp
push
jne
sub
imul
imul
test
and
xchg
pop
mov
js
inc
xlat
sbb
adc
or
mov
pop
mov
xlat
xchg
adc
mov
mov
movsl
dec
ljmp
sub
adcb
push
add
push
sbb
or
addr16
mov
mov
push
ja
stc
dec
lret
xor
and
orb
ljmp
mov
popa
adc
ficoms
mov
xchg
sti
lds
in
adcl
jmp
pushf
es
push
sbbl
icebp
loop
jo
xor
ss
push
cmpsl
stos
popa
mov
pshufw
lret
inc
mov
outsb
divb
or
xchg
outsb
mov
xchg
and
lea
mov
int
insl
cmpsl
insb
int3
stos
mov
xchg
inc
sub
dec
jo
jmp
popf
cmp
mov
or
mov
or
cmpl
inc
js
imul
fidivs
cmc
les
fimuls
pop
pop
ret
jmp
pop
data16
ja
adc
cmpsb
cwtl
cltd
xor
mov
insb
or
cmp
xor
jbe
or
fnstenv
push
insb
sbb
rorb
mov
rolb
add
pop
loopne
mov
addr16
pop
inc
test
or
clc
in
push
ljmp
inc
jbe
test
push
out
add
push
test
xor
add
popa
push
aaa
push
or
movsb
loope
cmpb
outsb
arpl
jne
lds
jmp
or
decb
inc
fisttpll
jl
and
jo
push
into
insb
mov
push
stos
int3
sub
xor
adc
xor
inc
cmp
out
bnd
jp
imul
add
scas
movsl
xchg
aam
mov
pop
sbb
sub
testl
xchg
add
outsl
sbb
repnz
add
lcall
data16
cmpsb
xchg
subl
fildll
iret
and
mov
sub
call
out
adc
out
dec
xchg
cltd
ja
inc
fsts
das
enter
mov
imul
dec
shl
loopne
js
xor
sub
xor
jae
xor
repnz
jmp
out
in
in
lods
mov
cld
mov
call
popa
leave
add
repnz
pop
inc
inc
outsl
jl
and
sahf
xor
xchg
and
sbb
out
test
arpl
pop
lahf
cmpsl
addr16
sbb
add
in
jae
aad
into
in
sub
out
mov
leave
sbb
es
lea
and
push
fidivrs
cmp
cmpsl
arpl
aaa
icebp
cmpsl
jo
icebp
ja
sbbl
iret
add
pop
lds
inc
cwtl
add
mov
nop
mov
jle
scas
arpl
stc
cmc
stos
xchg
xor
sub
into
pop
jmp
lret
mov
mov
mov
cmp
mov
mov
add
jp
adc
sub
lea
mov
jne
dec
out
shl
mov
in
inc
pop
pop
rclb
std
shrb
fistl
or
mov
icebp
jp
cmpsb
sub
out
int
and
xor
xchg
mov
int3
in
fmulp
cmp
push
push
fsubrs
pop
jo
jmp
ss
dec
mov
nop
testb
sbb
pop
jle
popa
jge
and
sub
rolb
in
shrl
sub
enter
inc
mov
mov
test
leave
pop
frstor
fsts
inc
repz
ss
scas
leave
scas
aad
mov
xchg
mov
ljmp
popf
or
ljmp
pop
mov
mov
mov
je
add
stos
sti
cmp
pop
and
xchg
icebp
imul
push
xchg
mov
es
xlat
xor
xor
and
or
mov
sarl
fwait
scas
or
adc
sbb
mov
pop
ss
xor
push
xor
outsl
fiadds
cmp
in
xor
std
lret
xor
aas
scas
lods
ds
and
into
les
fsubrl
inc
into
fisubrl
inc
lcall
mov
sbb
fcoms
sbb
loop
jmp
in
adc
movl
xchg
jae
jb
mov
xchg
test
data16
xor
mov
cs
adc
sbb
mov
insb
or
mov
fildll
mov
dec
sbb
mov
out
out
jp
mov
sbb
mov
outsl
lret
cmp
push
add
icebp
enter
dec
xor
add
jns
rolb
aas
pop
xor
push
popa
xor
or
dec
push
je
xor
jmp
mov
mov
xlat
movntps
shll
fbstp
inc
push
jmp
cmp
sbb
mov
popf
sarb
mov
mov
jo
ficoml
pop
and
xchg
xchg
push
cmpsb
lret
mov
adc
iret
int
in
test
cmc
push
cmp
xchg
sbb
xchg
push
cmp
pop
or
sub
add
pushf
sbb
stos
stos
sti
cmp
cmp
mov
xchg
sti
loop
add
dec
pop
cld
push
pop
sahf
fistps
outsb
pop
adc
test
pop
mov
outsl
mov
jg
push
sarl
adc
pop
dec
jae
and
and
scas
xchg
aas
xchg
hlt
jo
inc
pop
mov
sbb
bound
or
xchg
sub
lds
sub
and
je
and
ljmp
lret
sbb
xchg
lret
adc
movb
orl
fstp
lods
inc
test
mov
mov
or
test
inc
dec
add
jmp
stos
xchg
jb
fiadds
js
adc
repnz
sub
push
imul
pushf
push
pop
dec
loop
stc
push
push
stos
test
pshufw
outsl
adc
pop
cs
mov
into
xor
fsts
cmpsb
outsl
cltd
sub
mov
arpl
mov
js
adc
scas
lcall
pop
mov
xor
push
pop
notb
pop
adc
fisttps
clc
jb,pn
ja
dec
jns
out
addl
xchg
add
pop
jl
pop
stos
mov
add
jae
jp
in
ds
loope
pop
mov
into
mov
imul
insb
cmp
fwait
jge
ret
fldenv
push
js
test
pop
add
inc
imul
loopne
jno
adc
les
or
cltd
in
jl
int
lea
aaa
push
sbb
jg
popf
repnz
pop
into
add
mov
les
dec
stos
jmp
cmp
insb
adc
movsb
push
sarl
inc
inc
inc
cmp
pusha
cmp
je
dec
and
loopne
xor
cwtl
cmp
cmp
jge
js,pt
pop
rcl
jb
add
call
xchg
or
es
sbb
lods
aaa
gs
lods
bound
push
mov
fmuls
pop
pop
xor
sub
adc
loope
out
push
mov
aaa
push
push
lret
call
sbb
mov
jnp
mov
bound
inc
mov
mov
pop
ret
fsubl
mov
jl
mov
popf
popa
fisubrl
jae,pn
mov
iret
push
mov
or
enter
mov
add
lds
insl
aas
or
in
and
mov
sbb
stos
and
sbb
xor
jns
mov
push
aam
add
inc
inc
aam
xchg
cmp
sbb
mov
fs
mov
sub
mov
mov
je
ret
cmpsb
mov
push
push
fdivrl
js
jp
loope
in
or
inc
leave
sbb
mov
and
stc
in
call
pop
mov
cld
pushf
mov
mov
cli
repz
int3
cmp
or
or
jb
scas
xor
test
xchg
sahf
cld
ret
jg
adcb
push
out
mov
dec
lret
mov
bound
mov
popf
mov
pop
incb
shrb
repnz
ret
cmp
fsubrs
into
sub
out
xchg
jecxz
cmpsb
adcb
cmc
loopne
or
pop
aam
bound
cmp
js
push
cmp
loopne
lahf
push
lahf
movsb
dec
mov
jmp
xchg
pop
shr
andl
repnz
rcl
sarl
pop
aas
in
inc
pop
aad
lea
cmp
outsl
arpl
inc
cld
jbe
shrl
mov
arpl
arpl
pusha
lcall
int3
movsb
sbb
xchg
out
and
insl
nop
loopne
test
out
lock
hlt
mov
or
nop
stos
scas
lcall
sbb
xorl
jnp
pop
pop
pop
and
outsb
jne
sub
popf
add
das
shll
aam
mov
insb
fisubs
aaa
jg
add
mov
in
cmp
mov
shll
out
aaa
jg
add
mov
xchg
push
or
jae
mov
push
ret
sbb
xor
add
clc
repnz
mov
int3
test
mov
test
rcrl
and
clc
jns
movsl
push
jl
jmp
pushf
mov
mov
bound
test
jmp
mov
mov
mov
ja
jecxz
pop
pop
out
lret
movsb
repnz
xor
hlt
sub
test
es
cmp
mov
mov
outsl
jg
and
xor
les
pop
pop
xor
aas
push
lds
imul
push
call
jmp
inc
mov
jp
lcall
dec
push
mov
push
mov
pop
sbb
adc
sub
push
jge
scas
mov
mov
jno
fwait
test
mov
and
xchg
lahf
leave
pop
mov
dec
jecxz
add
dec
leave
lret
xchg
scas
push
ljmp
push
inc
mov
jmp
fists
lret
add
movsb
mov
mov
xor
dec
jb
clc
lret
mov
sub
fistpll
jbe
bndldx
mov
add
mov
lahf
enter
pusha
inc
inc
mov
cmpsb
xchg
shrb
test
sub
sbb
les
inc
int3
lret
cmp
loop
in
rcrl
inc
jbe
xor
stos
sub
pop
cmpsb
loopne
ficomps
orl
mov
loopne
xorl
inc
loope
out
bnd
xor
addr16
push
in
inc
cmp
push
jns
fcoml
mov
inc
inc
ss
repz
pop
cmpsl
sbb
sbb
out
rorb
ja
xchg
jns
ret
daa
pop
push
push
pop
sbb
out
movsb
sahf
enter
jge
sbb
movsb
jae
pop
mov
cmp
pop
cmp
sti
or
arpl
imul
in
dec
movsb
mov
push
inc
out
or
xlat
imul
lret
xchg
and
xor
sub
jne
pop
dec
or
dec
push
jno
and
push
fs
mov
cli
scas
jnp
push
xor
pop
jo
mov
daa
dec
lds
ffree
fiaddl
dec
jmp
mov
bound
rcrl
andl
out
movsl
repz
jmp
outsl
or
out
adc
sub
je
divb
mov
and
mov
faddl
sub
inc
loopne
pop
and
cmpl
jmp
iret
inc
dec
bound
jmp
sbb
mov
int3
dec
inc
xlat
je
jb,pn
pop
sub
adc
icebp
lahf
les
in
scas
rol
xlat
mov
aad
repnz
bound
inc
shlb
or
sbbb
xor
and
jb
jg
test
sub
imul
mov
mov
and
icebp
sti
jmp
mov
out
add
mov
mov
or
pop
movsb
pop
fcmovnu
orb
mov
mov
mov
jne
xchg
add
test
push
std
mov
cmpb
dec
popfw
mov
mov
in
imull
lock
popa
es
sub
rcr
insb
xchg
addr16
sbb
iret
add
sbbl
push
rcrl
jmp
push
push
jns
pop
repz
lods
rorl
mov
stos
push
cmp
fcompp
jb
test
cmp
orb
mov
cmp
loope
push
xor
addr16
fidivrs
fsubr
in
jae
lods
mov
sub
adc
jbe
mov
lock
test
cs
mov
xchg
xchg
outsb
int
mov
lea
dec
in
sahf
enter
or
je
cmp
out
ja
ds
mov
lds
stc
stc
xchg
inc
jne
in
insl
push
mov
sub
jp
xchg
pushf
sbb
jg
daa
jns
frstor
popa
xchg
repz
and
daa
mov
fs
inc
push
inc
mov
or
jp
cltd
lods
inc
fstl
data16
pop
sub
add
sub
dec
rcll
lea
rcll
inc
outsl
and
vmptrld
mov
cmp
push
popf
decl
int3
xchg
mov
jp
mov
test
cltd
sbb
daa
popf
ljmp
shll
std
sub
jb
loop
mov
add
inc
jo
outsl
inc
ss
cmp
inc
xor
jg
fildll
scas
mov
ljmp
push
sarl
or
fwait
adc
bound
iret
loope
ds
jo
outsl
pop
fwait
sub
fisubs
pop
mov
stos
xorb
mov
fistpll
jecxz
cwtl
cltd
orl
mov
xchg
cltd
outsl
inc
mov
gs
out
dec
mov
pop
push
adc
mov
add
mov
mov
movsl
inc
sub
mov
popa
shrb
cmp
pop
mov
or
sub
popa
sahf
fwait
jge
mov
fildll
jl
pop
push
mov
pop
sarb
pop
push
aaa
cmp
ja
mov
or
pop
mov
divl
add
adc
xor
dec
push
hlt
js
lahf
jge
mov
rorl
pushf
dec
ret
dec
xcrypt-ctr
cmpsl
pop
jae
pusha
scas
popf
push
cs
pushf
mov
mov
movsl
jge
sbb
bound
mov
xor
shld
enter
cmpsb
stos
jge
jecxz
fwait
sbb
xchg
pop
sahf
adcl
out
mov
outsb
pop
xchg
mov
xchg
inc
shrl
push
cmp
push
push
mov
mov
mov
push
adc
imull
aaa
enter
ret
adc
mov
xchg
sbb
sbb
out
pop
mov
imul
mov
xor
xchg
pop
test
push
hlt
mov
cs
outsb
xchg
and
cmp
mov
pop
mov
mov
and
fildl
lock
sbb
xchg
lods
xchg
sahf
loopne
push
icebp
imul
mov
adc
push
jecxz
shl
sti
cmp
les
cmp
and
lods
jo
sahf
push
mov
das
lods
jle
sti
push
fidivrl
jo
test
mulps
pushf
adc
xchg
fadds
mov
adc
stos
sub
mov
je
jns
scas
lret
enter
xchg
cmp
inc
outsl
jmp
mov
pop
fwait
dec
cld
and
je
adc
outsb
xor
cmp
sbb
ret
repnz
daa
push
dec
bound
jg
xchg
sahf
dec
sub
dec
stos
shl
sbb
ficompl
or
add
xchg
or
cmpb
addr16
sbbb
dec
roll
lret
ret
inc
cmp
ja
push
inc
mov
add
int
pushf
hlt
push
jb
inc
sbb
int3
lds
pop
stos
call
pop
stos
lret
pop
lods
loope
stos
je
push
inc
arpl
shlb
movl
leave
cmp
out
sub
jns
nop
jns
mov
out
mov
mov
in
iret
jo
fwait
adcl
sbb
fwait
sub
inc
int3
adc
lcall
imul
mov
inc
outsb
movsb
mov
add
mov
sub
push
loopne
addr16
cmp
push
mov
into
test
mov
lods
sbb
pusha
and
xor
movl
out
rorl
pop
xchg
add
cmp
hlt
lods
clc
lock
fwait
aaa
imul
pop
mov
mov
sub
dec
fistpl
jle
or
fsubr
stos
sbb
jmp
test
xor
ffree
sti
pop
addr16
adc
xchg
lret
inc
test
push
jecxz
mov
xchg
imull
and
ljmp
rorl
lods
loopne
pop
hlt
movsb
loop
rolb
in
mov
test
add
cmp
out
iret
sbb
pop
add
test
fmul
pop
loopne
test
mov
jecxz
mov
outsb
sub
jp
jmp
enter
mov
xor
mov
leave
xchg
mov
push
and
jle
dec
cmpsw
and
jbe
and
jp
sbb
in
leave
sbb
jne
push
leave
testb
mov
push
int3
sub
rclb
cmpsl
xor
jg
push
pushl
push
decl
es
mov
pop
lret
sahf
fwait
mov
and
test
lret
mov
mov
mov
jns
xchg
mov
push
pop
adc
and
inc
sub
inc
adc
sbb
sbb
pushf
js
and
insb
lds
inc
in
cmc
insb
add
loop
stos
es
nop
or
ss
jge
lods
enter
or
sbb
out
rorb
pop
push
outsb
xor
sbb
pop
divl
mov
mov
out
dec
mov
pop
cmp
outsb
dec
les
sbb
cli
push
movsb
jae
and
push
or
and
pop
jo
orl
jmp
notl
and
mov
ret
out
cmp
lods
cli
and
push
cmp
cmp
push
mov
add
ds
and
xor
cmp
mov
jg
nop
adc
mov
ficoml
loope
pop
int3
xchg
js
or
loope
aaa
lea
in
lods
imul
push
pop
push
je
mov
adcb
push
fadd
imul
or
cmpsl
lcall
sahf
add
and
aam
test
clc
nop
sbb
in
popa
sbb
push
sarb
into
push
dec
push
mov
in
out
sbb
inc
jns
in
adc
xor
mov
and
loop
sub
push
aas
xor
insb
or
mov
xchg
pop
mov
cwtl
and
add
repz
aas
stos
into
movsl
mov
test
mov
xorb
mov
lret
repnz
fs
add
mov
inc
loop
shrl
cmp
ret
push
push
xlat
ljmp
scas
jbe
ret
ja
sarl
shrl
xchg
mov
movl
fwait
adc
dec
xor
cmp
cmpsb
mov
pop
or
scas
les
push
xchg
pusha
and
insl
inc
or
addr16
cmpsl
pop
pop
push
pop
in
popf
and
pop
popa
pop
jle
lods
or
cli
mov
sub
cmp
adc
pop
popa
xchg
inc
dec
out
adc
das
jl
mov
mov
hlt
out
or
cs
repz
js
stc
es
add
aaa
inc
jno
mov
cs
cltd
jbe
mov
ja
xchg
push
arpl
sub
cs
mov
loop
int
cmpsl
enter
xlat
ret
inc
bound
scas
outsl
jg
dec
out
jge
or
int
cmc
ret
loop
lcall
sub
popf
xchg
lds
loop
sub
add
pop
xor
repnz
mov
ret
jmp
inc
push
push
sbbb
xchg
imul
insl
gs
pushf
insl
sub
gs
cld
int
inc
cmp
sbb
inc
or
jo
movb
fisttpl
add
sbb
ds
pop
lret
inc
add
sahf
cmp
jns
jbe
or
lods
scas
xor
clc
jne
fnstsw
push
lock
mov
xchg
aam
cmpsb
xor
mov
mov
pop
lahf
mov
fisttps
xor
cmp
test
sbb
int3
idivb
negl
leave
jp
ljmp
popa
xchg
or
push
xchg
inc
mov
sbb
push
out
fs
mov
test
jbe
mov
lahf
or
mov
dec
adc
sar
cmp
mov
or
fisubs
push
out
loopne
stos
inc
jne
jns
jp
jnp
cmp
loop
jp
adc
out
int3
sub
scas
ret
lret
dec
or
mov
xchg
xchg
dec
cmc
cmp
ret
xchg
imul
sub
inc
shll
ret
vpunpcklwd
lret
data16
aas
loop
cmp
test
cmp
scas
movsl
repnz
in
incl
divb
mov
mov
es
std
aas
ss
leave
insb
js
pop
dec
iret
cmc
rolb
or
adc
xchg
mov
imul
in
imul
jle
inc
lds
rorb
mov
adc
jno
adc
push
xchg
cmpsb
cld
mov
and
inc
cmc
push
idiv
movsl
xor
xchg
cs
push
xchg
xchg
les
jne
push
cmpsb
daa
or
dec
sbb
mov
loopne
ja
icebp
mov
push
push
movsb
cmpb
aaa
daa
adc
outsl
mov
inc
fcmove
shll
cli
ret
ds
das
arpl
addr16
adc
add
push
mov
jp
int
fisubrl
out
stos
push
jbe
std
push
mov
negl
pop
mov
add
cmpsl
mov
jb
clc
add
es
mov
aad
sub
or
and
les
out
in
and
cwtl
insb
sub
dec
arpl
fldl
lea
mov
jnp
mov
nop
jg
push
jo
mov
add
addr16
or
sti
fimull
jmp
xor
mov
xor
dec
movups
pop
and
sub
fprem
ret
out
and
sub
cmc
mov
dec
lret
cmpsl
popl
xor
or
or
out
dec
cmpsl
lods
rolb
jg
clc
xlat
std
andl
cmp
mov
dec
lcall
push
insb
adc
orl
fisttpl
push
loop
fcmovu
mov
mov
jne
and
insl
jle
loopne
lcall
push
xor
cmp
flds
lret
mov
xchg
out
ss
xor
ss
cmpl
or
or
xchg
addl
sbb
fdivrl
insl
inc
push
bound
lcall
pop
jl
stc
testl
ficoms
sbb
negb
lock
lcall
aad
imul
in
inc
repz
or
mov
adc
lahf
test
jns
pop
fsubr
cld
xchg
mov
push
dec
dec
dec
adc
and
jmp
ds
repnz
inc
push
sub
pop
outsl
push
out
adc
mov
fisubl
popa
mov
add
idivb
test
jmp
stos
xchg
mov
jno
fcmovnb
ljmp
out
or
and
pop
or
enter
test
push
inc
sahf
or
push
rcll
and
adc
mov
cmp
imul
or
xor
jb
or
bnd
xor
xchg
lods
es
pop
add
subl
std
mov
dec
jbe
jns
pusha
sti
fsubrl
add
lea
sub
pop
hlt
lahf
repz
jnp
insb
or
push
aam
push
mov
cmp
push
leave
pop
add
rorl
sbb
pusha
ds
mov
les
lods
lock
out
cmc
mov
cmp
mov
pop
cld
push
jne
repnz
clc
scas
xor
mov
mov
mov
and
inc
int3
jns
jp
inc
cmp
popa
pop
xchg
loope
sbb
dec
sahf
lcall
mov
fwait
pop
rcr
pop
out
push
jbe
fistl
xchg
adc
or
aas
cmp
fldt
mov
lea
es
dec
push
lret
xchg
pop
std
xchg
pusha
mov
fnsave
ret
scas
and
and
cmp
aam
inc
ret
pop
lea
adc
pop
orb
test
sub
shl
nop
add
jle
pop
lods
xor
inc
jl
rol
mov
daa
clc
jne
push
inc
add
call
adc
add
sti
shlb
ret
lods
push
jnp
ret
inc
add
lret
leave
cwtl
cmp
fildl
inc
mov
addr16
cmc
mov
scas
out
jb
jb
ficoms
or
bound
shll
cmp
pop
mov
test
and
xchg
hlt
dec
loop
rorb
out
imul
aam
fadds
and
jl
lods
and
push
outsb
mov
dec
jg
fisubl
gs
inc
xchg
push
dec
mov
mov
sahf
xchg
dec
xor
dec
cli
and
xchg
js
pop
or
jo
jmp
lret
sub
stc
add
jmp
imul
jecxz
lahf
jnp
mulb
lock
cltd
clc
push
inc
shrb
in
adc
cltd
fisubs
icebp
cwtl
sub
mov
cmp
and
enter
inc
repz
rdtsc
ljmp
jae
pop
or
inc
and
decb
stos
mov
lahf
in
int
mov
sub
jp
movsb
out
inc
ret
and
loopne
sahf
int3
sbb
jns
inc
imul
enter
test
jnp
aas
scas
aam
test
mov
scas
pop
sahf
inc
inc
and
dec
ror
pop
adc
hlt
push
mov
mov
shlb
aad
es
fcomp
sub
rolb
lret
fdivrl
lahf
pop
and
pop
and
inc
lahf
bound
mov
add
lock
fcoml
xchg
pop
stos
xor
dec
adc
dec
test
lret
push
cmp
adc
into
pusha
cmp
js
xchg
aas
jne
push
fadds
arpl
sbb
push
and
xor
mov
xor
cld
lds
xor
rorl
pop
push
jns
movsb
popa
cmp
and
hlt
bound
bound
dec
test
dec
cmpsb
outsl
das
aas
in
push
insl
ret
push
jmp
lods
and
jecxz
or
jno
mov
xor
jno
popf
pop
mov
pop
and
dec
into
cmp
mov
test
mov
imul
repnz
mov
add
sub
stc
jg
into
xor
mov
adc
xor
push
fnstenv
adc
mov
vpaddb
scas
lret
pushf
jp
daa
pop
cmp
cmp
aaa
and
dec
cltd
fmull
mov
cmp
dec
pop
xor
lock
xorb
and
sub
sbb
out
jnp
outsl
pop
mov
fsub
call
mov
lds
mov
sub
incl
jg
jg
mov
dec
gs
mov
fldpi
test
lret
je
dec
cs
cli
mov
sub
dec
pop
mov
int
mov
add
or
jge
cltd
sub
addr16
xchg
xchg
outsl
lahf
clc
mov
idiv
negb
outsl
dec
cmp
xor
jmp
cmp
mov
or
cld
rorb
aad
cmp
pop
inc
push
xor
or
cltd
push
xchg
scas
and
sub
xor
or
adc
xor
pop
xlat
clc
out
adc
lods
push
movsb
sbb
mov
pop
sahf
sbb
out
mov
loope
dec
adc
arpl
xchg
mov
rorl
or
ja
xchg
xchg
fstl
or
cwtl
cmpsb
into
in
aam
mov
cli
mov
stc
in
sub
mov
pop
xor
les
loope
sar
or
push
adc
out
xchg
sub
sub
jecxz
imul
popf
lret
or
das
sub
and
xor
in
mov
cmp
sub
arpl
xchg
mov
lods
xchg
repz
mov
lods
int
mov
push
imul
frstor
mov
and
xchg
pop
fldenv
pusha
mov
push
push
sbb
and
jns
cmp
add
cmc
and
test
gs
sarb
sahf
rcrl
mov
dec
pop
cltd
faddl
int
sbb
repz
mov
insl
push
cmp
test
cmpsl
push
dec
sbb
mov
inc
orl
jmp
mov
dec
push
pop
cltd
inc
or
sbb
fst
xchg
pop
cmp
fstp
and
xchg
inc
jns
clc
int3
mov
mov
pop
mov
xor
add
dec
jecxz
pop
dec
sbb
cmp
xor
mov
mov
shrb
or
scas
das
test
mov
in
loop
jle
mov
ret
lea
sbb
loopne
test
jp
cwtl
icebp
jbe
addb
jmp
and
xor
das
add
imul
in
mov
cmp
sahf
fcmove
add
enter
bound
mov
outsl
outsb
jne
sub
cs
cmp
adc
jbe
popa
or
or
iret
xchg
pop
dec
pop
mov
test
not
popa
jo
out
pushf
sub
cmp
jae
outsl
fisubrl
sub
popf
adc
arpl
and
cs
mov
jo
jp
pop
sub
add
getsec
fistpl
and
mov
mov
les
jge
outsl
mov
xchg
xchg
xor
jne
lock
sti
sub
adc
xchg
xor
xchg
pop
popf
pop
xlat
fdivrl
ja
and
mov
fstp
sub
sbb
aas
pop
dec
subl
and
push
lret
loopne
insb
std
pushf
and
jge
fmul
mov
fs
out
mov
pop
rcll
push
mov
mov
mov
mov
lds
sahf
in
in
data16
xchg
test
inc
push
lret
and
inc
sub
or
jle
sahf
jmp
mov
andl
neg
mov
pop
decl
xor
test
cli
ljmp
sbb
and
jp
stos
mov
mov
fldt
js
sub
cmpsb
mov
mov
js
jne
cmpsb
add
pop
adc
popa
adc
cmp
push
les
ja
pop
pop
leave
pop
aaa
mov
je
sbbb
jnp
dec
xor
sub
aas
pop
and
push
mov
inc
cmp
lret
mov
mov
xor
inc
xor
popa
mov
out
out
movsb
cli
sub
repnz
mov
mov
loop
jp
dec
and
add
add
cmpsb
into
push
cmp
test
and
xchg
adc
pop
mov
fmul
sub
inc
cmp
rorb
mov
cmpsb
push
pop
inc
xchg
dec
push
pop
pop
std
movsb
test
push
mov
lcall
stos
fimuls
fsubl
or
test
push
loop
xchg
je
xor
xchg
sbb
pushf
aaa
aas
shrl
js
mov
addr16
int3
dec
repnz
jle
jge
jmpw
jecxz
pop
xor
mov
sub
cmpsl
sub
mov
imul
push
imul
fwait
cld
push
mov
sub
movsl
push
cli
mov
cmc
push
jne
fnstsw
fsubs
lahf
push
aaa
sbb
scas
in
mov
fs
int
push
test
imul
aas
cmpsb
divl
lahf
decb
movsb
mov
xchg
ja
or
jnp
dec
movsb
jecxz
std
sub
mov
jne
loopne
jne
mov
rolb
std
arpl
iret
roll
and
lds
pop
out
push
jns
cmpsb
pop
mov
jb
arpl
fidivrl
repnz
pop
inc
jl
jmp
pop
test
xor
aad
movsl
xchg
sub
xor
cmp
js
push
jns
enter
jno
repz
sub
pop
insb
push
insb
insb
scas
cmpsb
test
pop
xor
dec
std
xchg
xchg
imul
mov
test
test
hlt
lahf
fldcw
stc
mov
cmpsl
sub
jno
movsb
sub
xchg
es
sub
stos
cmp
lret
aam
mov
or
push
sub
faddl
fadd
andl
xchg
cmpl
push
sti
mov
rclb
cmp
repnz
mov
sbb
push
add
inc
lret
push
int
push
out
dec
aam
xor
lds
in
es
ret
fildll
aas
and
mov
call
dec
xchg
xlat
orl
out
jge
aam
xchg
ds
repz
mov
or
add
les
ja
push
sbb
inc
out
sbb
pop
lods
lahf
movsl
xchg
repnz
mov
insl
dec
ret
add
adc
je
and
and
ljmp
ljmp
lcall
ret
cltd
dec
mov
iret
aam
bound
mov
or
pop
mov
or
push
in
or
pop
sub
cmp
ret
movsb
pusha
sub
das
int3
scas
dec
jbe
inc
xchg
jmp
dec
jle
mov
leave
adc
xchg
jmp
sbb
pop
xchg
xchg
daa
adc
cwtl
pop
pop
hlt
int3
inc
cmc
dec
ja
sub
cld
fcompl
outsl
and
cmp
lods
ss
jno
push
adc
adc
sub
repz
mov
cmpsb
jnp
mov
arpl
inc
or
push
mov
inc
stos
je
fidivrs
loopne
cmp
xlat
imul
arpl
and
push
cmpsl
pop
mov
ficoml
or
sarl
inc
call
dec
jb
lock
push
insb
popa
sub
sti
ljmp
xor
mov
mov
xchg
sti
je
int3
pop
loope
rol
or
push
jb
cwtl
cs
repnz
inc
xchg
dec
pushf
push
inc
lcall
iret
lahf
lcall
pop
in
push
xchg
mov
push
push
shll
inc
adc
pop
mov
dec
ror
sti
push
cwtl
adc
clc
cmp
ficoms
cmpsb
ja
adc
mov
enter
gs
push
push
sub
inc
in
add
into
rcrb
adc
cmp
aas
gs
ffreep
icebp
jnp
aam
jnp
mov
adc
xor
jbe
push
mov
jo
in
inc
test
jl
pop
icebp
ds
mov
adc
mov
insl
or
stos
lret
insb
xchg
fstpl
cmp
dec
jae
fcom
or
adc
in
and
insb
aad
loop
stc
inc
push
jo
stc
cld
sub
and
sbb
rorb
in
shrl
or
in
dec
shlb
fnstsw
out
pop
xchg
jge
in
call
mov
dec
repz
cmp
mov
js
inc
add
in
loopne
test
xchg
mov
lds
js
mov
jge
jo
push
out
inc
jmp
jno
cmp
inc
mov
inc
std
mov
push
fdivl
jge
pushf
xor
sub
mov
cmp
xorl
scas
cltd
je
sbb
xor
push
aam
jecxz
dec
cmp
jmp
mulb
dec
dec
mov
movsb
push
dec
mov
test
cli
push
mov
xchg
xchg
mov
cmp
mov
dec
pop
mov
in
push
adc
sub
mov
xchg
push
pop
xor
jns
es
and
repnz
jnp
cs
mov
push
xor
div
scas
xchg
add
je
mov
rcll
pop
mov
loope
jg
mov
adc
jo
mov
aaa
jb
mov
jge
inc
push
or
fldcw
or
or
cmp
rcr
clc
xchg
sbb
mov
xor
sbb
cmp
stc
mov
aad
inc
add
cmp
dec
adc
jns
sub
les
pop
lds
dec
fs
mov
sar
add
pop
or
cmp
notl
data16
jo
sbb
aad
fcoms
cmp
and
sub
dec
mov
aas
cmpsl
shl
lcall
pop
imul
xor
popa
jge
call
sub
data16
mov
push
insl
push
sbb
or
xor
mov
icebp
xlat
int3
mov
outsb
adc
fiadds
fs
lret
stc
imul
lods
outsb
mov
or
mov
das
adc
cli
sub
std
ret
sti
cld
push
xchg
mov
test
xchg
stos
and
fnstcw
das
mov
mov
and
add
out
jns
mov
sahf
call
imul
push
repnz
inc
into
lcall
sbb
loopne
mov
mov
jle
call
xor
imul
mov
cltd
out
addr16
lock
daa
jecxz
aam
pop
fildl
cmp
push
js
cld
sub
cmp
cmpsl
dec
arpl
in
daa
das
repnz
dec
cmp
pop
fiaddl
and
adc
ss
xchg
lods
xor
and
mov
push
leave
pop
stos
or
loope
lcall
repz
lret
loop
mov
mov
xor
jnp
dec
mov
pop
sbb
outsl
jb
popa
push
inc
lds
xchg
cmp
pop
or
adc
imul
mov
cwtl
into
das
xchg
fisubl
jnp
mov
cmc
insb
mov
or
cmc
addr16
mov
lods
gs
pop
dec
cmpsl
gs
dec
inc
fiadds
or
sbb
xchg
rol
int
mov
mov
inc
lahf
and
mov
outsl
xchg
push
xor
sub
ljmp
push
jae
mov
incb
inc
sbb
lret
cmovae
jle
cmp
ffreep
push
xrelease
mov
mov
sub
stos
inc
sub
test
out
mov
roll
add
sub
cmpsl
rolb
lret
dec
lea
mov
mov
fwait
das
jmp
mov
pop
xor
ret
mov
add
aad
jns
faddl
sti
scas
sub
inc
int
imul
fs
in
in
out
xor
ds
imul
es
inc
lea
movsb
int3
je
sub
pop
fcompl
mov
pop
fcomi
dec
push
adc
out
and
cmp
bound
out
lret
add
mov
cmp
mov
out
lret
adc
cmpsb
test
add
mov
outsl
adc
in
int3
mov
dec
rcl
cmpsb
push
daa
fcomi
outsb
sbb
lret
cmp
rclb
lods
adcb
sbb
sbbl
shl
or
in
lods
push
or
cmp
call
pop
mov
test
sti
inc
xchg
in
out
xor
xor
data16
inc
jo
xlat
jb
scas
mov
lret
into
std
cld
push
lret
xlat
mov
out
push
rcr
fmull
mov
stc
pop
test
dec
add
push
pop
dec
pop
push
ret
outsb
jns
mov
mov
lock
pop
ret
nop
xor
adc
xchg
popf
cmp
jo
inc
sub
sub
mov
aad
ror
insb
jno
cmpsl
cltd
push
xor
sub
rcrl
add
stos
jp
inc
test
fs
mov
xor
and
add
mov
and
jae
pop
mov
mov
in
add
push
iret
lcall
int3
addb
xor
fimull
popa
pop
fwait
jmp
lock
cmp
and
icebp
pop
cmpb
pop
fcomps
sub
xchg
pop
xor
aaa
neg
gs
xchg
xchg
jbe
jnp
dec
jo
jno
scas
inc
xlat
cmc
and
push
sbbl
gs
imul
sbb
cltd
cld
movsb
mov
and
popf
adc
push
or
xchg
adc
push
mov
xchg
pop
sbb
jecxz
pop
mov
mov
popa
cltd
pop
out
xchg
push
sub
aam
add
aam
and
faddl
add
iret
jno
lahf
cmpsb
xchg
aam
loop
js
clc
jbe
dec
jb
in
sub
loopne
imul
leave
icebp
sub
add
pop
mov
xchg
mov
pop
sub
int
lret
idivb
fbld
fisubrs
int3
xor
pop
push
mov
popf
mov
push
xor
mov
adc
sbb
dec
imul
mov
arpl
stc
cmp
sub
pop
rclb
dec
jns
cltd
fstpl
dec
mov
mov
push
repz
iret
jmp
xchg
and
pop
push
jne
fs
hlt
sub
dec
dec
stos
or
aad
mov
cmp
inc
mov
push
cmp
dec
shlb
mov
aaa
in
fildll
dec
fldenv
addr16
and
aam
ficoml
imulb
gs
cmp
lahf
lcall
negb
ja
dec
movsl
ficompl
bound
aam
inc
out
xor
dec
sbb
sub
stc
aas
or
callw
outsl
cmp
inc
push
pop
cmp
ss
out
cmpsb
cmp
out
mov
and
es
pushf
leave
mov
inc
jg
and
sbb
jl
cmpsl
push
test
jo
jae
out
or
test
adc
adc
orb
imul
cmpsb
ljmp
adc
and
xchg
test
dec
and
xchg
rcl
jl
adc
or
dec
push
jbe
mov
mov
push
test
lea
out
movb
inc
outsl
out
fsubl
jbe
hlt
jnp
dec
scas
in
jl
cs
xchg
jb
push
popa
adc
aad
cwtl
enter
rolb
bound
insb
push
and
ficompl
ljmp
daa
xor
ja
jne
mov
push
repz
int3
xchg
addb
cmp
mov
cs
dec
cmp
sbb
push
fadd
mov
xchg
cmp
daa
or
xor
outsl
mov
jmp
outsb
cmpsb
sub
cmp
add
outsb
mov
mov
movsb
sbb
mov
mov
adc
sub
push
mov
xchg
push
mov
stc
and
test
popf
dec
jae
ja
lds
inc
scas
outsb
dec
jge
jbe
enterw
fcomp
add
in
cmp
cmp
in
push
jecxz
nop
jo
mov
hlt
movsl
inc
iret
add
xchg
cmp
push
add
out
adc
mov
rol
adc
dec
jo
pop
xchg
mov
dec
sbb
iret
mov
icebp
xchg
andb
push
stos
xorl
cltd
cmp
stos
cmp
and
arpl
lock
lret
in
jae
aaa
mov
ret
and
add
jmp
insl
mov
push
lret
xor
mov
in
mov
in
pop
pop
insb
xor
lods
cmp
sbb
mov
rorl
fst
adcl
jns
jne
push
movsb
push
inc
fmuls
stos
mov
loope
sbb
pop
fnstcw
push
sti
dec
xchg
lods
jp
jo
js
out
ss
sahf
mov
imul
and
push
insl
test
add
sub
push
jg
add
cwtl
jns
adcb
in
les
dec
test
cmp
ror
xchg
fs
jno
mov
movb
lret
pop
out
xchg
sti
jae
aam
xchg
int
push
fsubr
out
mov
cltd
adc
cmc
or
pop
cmc
jge
add
ja
mov
mov
sahf
loop
xorb
jno
aaa
jne
aam
mul
inc
mov
sbb
mov
fildll
fldl
mov
notl
mov
shlb
inc
xor
stc
sbb
push
push
mov
shlb
hlt
dec
enter
insl
mov
std
pop
lahf
sub
and
ficomps
jle
movsl
lret
xorl
cwtl
add
jne
pop
sub
lahf
std
call
decb
movsb
mov
pop
pop
movsb
mov
clc
outsl
mov
leave
in
jg
jmp
movsb
outsl
fsubrl
xor
loop
mov
test
outsb
flds
in
inc
push
push
and
stc
adc
je
dec
lods
movsl
sbb
in
shl
cmp
in
loope
add
fsin
pop
mov
dec
mov
or
scas
dec
adc
jg
and
jns
pop
pop
and
addr16
ds
ret
xor
lcall
int3
lea
ds
sbb
lret
pop
push
push
and
xchg
out
dec
jecxz
jne
mov
fimuls
push
mov
dec
or
and
fcmovnb
test
xchg
notb
mov
mov
popf
sbb
test
ret
mov
lret
dec
pop
mov
adc
mov
mov
dec
mov
dec
cmc
int3
sbb
dec
nop
push
jo
inc
push
into
mov
in
movsb
std
test
add
or
insl
das
dec
mov
jne
and
idivl
sahf
add
movsl
daa
add
loop
sbb
or
xchg
xchg
sbb
repz
test
mov
jbe
lcall
push
lods
mov
icebp
inc
daa
push
mov
mov
and
cmc
jg
test
push
fisubrl
out
mov
lds
fwait
sub
sbb
pushf
daa
sub
sbb
loop
mov
enter
or
in
movsl
jp
addl
sbb
xchg
dec
enter
sub
rcrl
inc
inc
inc
inc
in
mov
pusha
enter
ja
xchg
push
std
les
sub
mov
mov
sti
nop
mov
sbb
jp
popf
outsb
insl
repnz
cli
cmp
lods
push
or
or
pop
cmpsl
cmp
cmp
inc
ljmp
add
cli
mov
or
sbb
call
cltd
xabort
pop
sbb
dec
lods
pop
pop
mov
pop
in
mov
insb
aas
test
dec
sbb
add
xor
call
mov
int3
sahf
sbb
loopne
ret
int3
sub
push
mov
inc
aad
xchg
jp
dec
adc
pop
pop
lret
pop
push
das
jb
mov
mov
ret
mov
jl
fxch
lock
sbb
rorl
ret
dec
lods
pop
fstps
sahf
cmp
push
mov
cmp
lds
fnstenv
mov
push
mov
ss
or
add
inc
and
sti
xchg
pop
inc
push
push
sahf
mov
aaa
fs
dec
dec
push
imulb
lret
and
test
xor
cmp
sbb
dec
fdiv
rcll
fmuls
popf
imul
stos
jg,pn
mov
xor
xchg
pop
or
in
pop
sbb
adc
hlt
mov
lods
inc
sbb
and
inc
mov
sub
ficompl
dec
nop
test
fstpt
jbe
jecxz
je
cmp
push
punpckhwd
xchg
ljmp
xlat
add
les
xor
jle
test
xchg
jno
lahf
mov
faddl
jmp
lea
push
and
push
inc
lods
lods
jb
lods
push
es
rcl
mov
mov
xor
and
adc
push
pusha
push
inc
push
adc
mov
xlat
mov
out
push
or
in
fwait
sti
bound
sub
mov
jge
ret
mov
sub
jb
std
mov
push
mov
int
fstl
gs
insb
movsb
and
into
push
loop
dec
test
mov
dec
mov
add
mov
push
into
call
cmpb
sbbl
inc
fsts
aad
and
mov
inc
cmc
enter
pusha
inc
imul
add
aad
add
iret
xor
mov
mov
dec
out
fs
fwait
sub
jl,pn
mov
mov
jo
notb
dec
or
cmp
and
lret
fidivrs
ret
hlt
shlb
add
mov
push
repnz
movsb
mov
outsb
cmp
pop
pop
xor
testl
pusha
jl
dec
jnp
mov
imul
movsb
sbb
xor
loop
sub
arpl
pop
xor
in
push
pushf
arpl
outsl
out
xor
and
cmpsl
cld
mov
or
cwtl
jle
jge
test
sar
xchg
fldpi
push
mov
stos
pusha
pop
mov
ds
popf
cmp
js
es
dec
pop
mov
cld
cld
hlt
adc
arpl
test
in
cmp
push
xlat
add
iret
or
stc
jmp
fldenv
push
cmp
inc
repnz
stc
adc
push
adc
xor
scas
add
cmc
sbb
mov
jo
pop
icebp
push
inc
push
push
cmp
xchg
mov
call
push
inc
rol
push
adc
mov
xlat
push
jne
jns
sbb
js
add
scas
push
push
fisttps
sbb
push
out
adc
iret
jne
sub
sbb
stos
leave
sub
repnz
or
mov
cld
les
mov
jmp
pushf
pushf
hlt
mov
cmp
negl
sub
lea
out
ljmp
xcrypt-ctr
cmpsl
sbb
mov
add
lds
pop
cltd
ret
es
xchg
push
mov
iret
xchg
lcall
scas
xorb
pushf
add
mov
bound
xchg
and
inc
setbe
cmp
repz
adc
push
cli
sub
lds
jg
sbb
out
push
imul
xchg
pop
rorl
in
bound
pop
outsl
push
scas
das
ja
pop
mov
hlt
mov
mov
fmuls
dec
xor
push
aas
inc
mov
stc
mov
xlat
sub
cmp
pushf
gs
sbb
sbb
loop
push
adc
lods
jbe
icebp
hlt
xchg
test
aas
out
insl
in
jg
jnp
test
push
cmp
subl
adc
push
sub
dec
testl
or
mov
cmpsl
push
stc
mov
fmulp
sbb
sbb
popa
shll
push
sub
popf
rcll
pop
test
cld
dec
mov
jp
les
pavgw
add
arpl
ret
in
in
jns
pop
lock
test
ret
fstpl
out
sbb
sahf
adc
lock
xor
icebp
mov
ret
fiaddl
adc
sub
push
add
cmp
jl
ret
fimuls
mov
push
subl
pop
inc
daa
pop
cmpsl
xor
inc
lahf
mov
loope
add
xchg
inc
mov
jp
push
pop
je
pop
addr16
ja
loope
sbb
jb
pop
mov
add
xor
mov
daa
cmp
xlat
push
xchg
add
stc
arpl
mov
mov
jge
push
inc
mov
leave
cwtl
add
aam
aas
inc
add
jmp
adc
mov
jecxz
cmp
loopne
adc
dec
xchg
inc
mov
sub
mov
dec
cld
in
xor
or
mov
xchg
push
pusha
arpl
xchg
rcrb
or
jns
pushf
aad
cmpl
push
jp
add
adc
pushf
scas
jbe
mov
sub
gs
shll
pop
outsl
cmp
lods
sbb
out
in
or
popa
in
pop
js
mov
gs
adc
jnp
js
jae
pop
sub
sbb
test
cmp
cmp
and
out
push
iret
fnstsw
outsb
mov
push
jne
fs
cmpsb
adc
das
sub
xor
cmc
xor
xor
or
mov
pop
add
xchg
add
pop
scas
sti
dec
ds
mov
fnstsw
lods
cli
leave
out
jbe
loopne
fs
pop
add
leave
sti
mov
jbe
and
inc
inc
pop
sub
inc
mov
dec
pop
loopne
das
jl
sbb
sarb
insb
ss
mov
fisubs
inc
je
pop
push
test
mov
jo
outsl
mov
mov
or
loop
mov
push
and
jmp
mov
dec
out
mov
mov
fdiv
notl
inc
and
popa
add
xchg
dec
cmp
mov
cmp
inc
and
sub
nop
lods
pop
je
xchg
hlt
jo
jecxz
adc
mov
stos
je
jne
nop
jne
sbb
nop
pop
and
in
imul
pop
inc
and
lods
mov
popf
sub
fldl
aam
sub
jle
mov
fs
jbe
push
add
add
mov
sub
arpl
mov
daa
andl
test
aaa
jg
cwtl
rcrl
lock
mov
sahf
gs
mov
rcrb
inc
mov
aad
aad
test
push
jne
add
add
call
push
aas
clc
lods
cmpsb
rol
mov
sub
inc
xlat
jne
jnp
stos
jbe
cmp
ja
dec
repnz
out
pusha
imul
or
pushf
jnp
or
repz
stc
fucom
fcompl
test
ljmp
insl
das
notb
into
mov
or
jb
sahf
mov
jno
pusha
mov
imul
aad
xchg
pusha
fwait
test
adc
das
fcom
adc
xchg
lods
repnz
loopne
adc
shll
add
add
out
mov
cmpsl
js
cmpsb
inc
jbe
add
clc
push
push
xor
jl
aad
addr16
add
cmp
loop
sahf
cltd
sbb
in
mov
push
mov
roll
mov
test
fdivrl
xor
jb
or
sti
aaa
icebp
cmc
ds
xor
push
rcrb
xchg
fdivrl
jno
mov
or
xor
je
pop
clc
push
pop
aad
xchg
mov
roll
xor
std
outsb
pop
push
lret
int
xchg
mov
scas
out
das
sub
fs
inc
push
pop
imul
xchg
ja
cmp
cmp
lock
jg
mov
xlat
xchg
lahf
lea
xchg
mov
push
pop
int
aad
push
cmp
push
sub
adc
mov
stc
xchg
or
in
xchg
stos
outsb
adcl
dec
jmp
or
fs
cli
movsl
enter
dec
lret
in
jns
lret
repz
shlb
push
shll
js
pop
lret
inc
jmp
in
out
lret
js
mov
xor
js
addr16
mov
sahf
mov
cmc
lret
fucomp
popa
push
jp
dec
pop
pop
dec
jg
cmp
dec
dec
sbb
or
or
xchg
in
sub
fisttpll
jecxz
push
nop
and
mov
clc
xor
xchg
in
jg
sbb
push
popf
sbbb
and
and
push
push
rcr
arpl
mov
fninit
dec
pop
jmp
jecxz
or
inc
sub
xchg
and
insb
push
push
pop
mov
test
insl
sbb
fwait
mov
or
jg
xor
push
sbb
nop
or
in
add
cwtl
jno
shl
je
mov
and
orb
pop
orb
xor
in
sahf
mov
jae
js
fbstp
adc
in
dec
iret
leave
mov
and
std
cltd
ja
lods
lahf
outsb
scas
arpl
insb
pop
aas
icebp
scas
pushf
dec
adc
inc
jbe
xchg
addr16
out
js
pop
push
imul
in
push
shll
mov
lds
leave
cmpsl
cmpsb
xor
push
dec
jo
subb
push
scas
push
mov
push
mov
and
mov
in
inc
aad
bound
inc
ja
in
lret
xor
sbb
stos
jl
orb
les
push
in
pop
outsb
adc
cmp
push
popa
mov
xor
lea
int
aad
orl
mov
icebp
inc
movsb
push
push
pop
jae
data16
sbb
pop
mov
fs
mov
adc
mov
sahf
rcll
push
imul
shl
fucomp
sahf
cmp
insb
loopne
xor
out
insl
clc
add
fdivrp
ret
rolb
stos
repnz
pop
xchg
flds
cld
or
cmpsb
rolb
pushf
pusha
ret
mov
cs
les
loope
jmp
sbb
in
imul
or
insb
pushf
imul
test
lret
andb
out
mov
or
sbb
push
adc
js
popa
subl
xchg
dec
pop
stos
dec
xor
cmc
or
push
lahf
rolb
frstor
xchg
pop
and
or
mov
sbb
jnp
dec
pop
movsl
jae
xlat
push
loope
imul
mov
push
adc
jno
push
out
cmc
pop
loope
insl
jl
jp
bound
adc
mov
test
mov
stc
fldl
mov
sub
mov
cmc
lcall
adc
mov
scas
sub
pushf
or
notb
scas
pop
addr16
adc
in
lock
mov
and
adc
mov
mov
rorb
cld
push
and
data16
ret
in
mov
xchg
pop
test
xchg
shrl
adc
movsb
and
and
xor
inc
dec
push
fdivrl
mov
divb
mov
mov
out
push
clc
mov
jne
scas
xor
mov
sub
scas
sbb
adc
push
test
and
dec
xchg
cmp
test
cmp
add
inc
in
int3
mov
sahf
adc
in
sub
std
pop
testl
push
or
daa
imul
negl
cmp
cmp
sbb
jecxz,pt
icebp
in
mov
ret
imul
insb
mov
cld
mov
jge
in
and
adc
lcall
adc
mov
stc
sub
fbld
fldlg2
enter
pushf
call
ja
dec
movsb
dec
movsl
test
sbb
jg
cld
xor
les
dec
pop
mov
rcrb
and
and
push
fildll
mov
cli
mov
jae
cmpsb
cmp
and
adc
icebp
flds
xchg
xor
cmp
cmpsb
sub
xor
cmpsl
or
dec
mov
jns
out
in
es
fwait
jne
dec
inc
jle
add
jl
mov
and
movsl
fcompl
jae
repz
mov
inc
jge
fcoms
pop
lcall
mov
pop
pop
jae
lahf
std
lock
push
lds
inc
mov
mov
rolb
mov
dec
lret
arpl
movsb
inc
cwtl
fmuls
aas
dec
cwtl
mov
mov
jecxz
icebp
mov
insb
or
pusha
out
stos
into
xor
bound
mov
sbb
lea
sub
or
ffree
jg
mov
mov
in
js
hlt
fs
inc
arpl
or
bound
jle
mov
insl
shlb
jae
mov
cs
sbb
xchg
inc
icebp
pop
jne
fwait
pop
adc
cwtl
icebp
pop
mov
mov
nop
jns
adc
mov
add
push
and
xchg
imul
cmc
ficomps
push
lock
xchg
mov
pop
shrl
or
lds
idivl
in
mov
or
aaa
sub
push
stos
fcoml
sub
sbb
pop
xchg
out
mov
sub
jmp
cld
and
push
je
adc
es
into
divb
xchg
xchg
lods
repnz
es
xor
cmc
mov
movsl
out
fucomi
shlb
popa
lret
xor
xchg
and
cmp
jb
pushw
outsb
push
add
push
subl
in
push
push
add
pop
or
and
and
jo
jne
fs
pop
test
push
js
or
mov
js
dec
arpl
xlat
mov
mov
cmp
fsubrs
shl
push
stos
into
iret
jae
adc
rclb
mov
add
pop
xlat
sar
test
scas
adc
faddl
sbb
xchg
lret
mov
or
sbb
xchg
mov
shrb
adc
test
dec
repz
movsl
loopne
lret
or
or
dec
loop
mov
mov
lcall
inc
fcoml
jns
fs
dec
sbb
lahf
xor
inc
lcall
int
test
fidivs
mov
pop
inc
add
aad
out
mov
xchg
xchg
cltd
jno
les
aad
add
push
lahf
adc
jno
fisttps
pop
xor
pop
sti
lahf
pushf
bswap
test
pop
inc
dec
cli
cwtl
in
mov
pop
arpl
mov
cli
push
inc
push
jbe
sub
shr
addb
pop
sahf
loopne
and
jno
mov
adcb
xor
mov
stc
sbb
xor
negb
or
add
push
pop
das
jnp
cmc
mov
loope
sarl
adc
iret
je
repnz
mov
inc
repnz
fdivrl
cltd
roll
in
xor
gs
popa
daa
add
inc
shll
push
mov
add
or
push
es
fiadds
fwait
inc
repz
lods
fisttpl
pushf
leave
mov
and
adcb
aas
scas
inc
dec
stc
jbe
scas
mov
adc
cli
out
sbb
pop
paddsb
or
repnz
leave
push
cmp
pop
adcb
add
test
add
mov
movsl
xor
add
sti
pop
xlat
fcoml
mov
call
dec
cld
dec
inc
sbb
and
mov
adc
scas
fwait
sahf
out
pushw
dec
xor
mov
cltd
sub
mov
fisubrs
adc
push
mov
jle
xor
bnd
out
es
mov
orb
ss
mov
pop
sbb
test
xchg
inc
dec
out
push
repnz
xchg
jge
sub
shl
mov
pop
mov
lea
xlat
mov
push
mov
clc
rorb
mov
or
xchg
sub
mov
jl
ja
clc
scas
add
mov
imul
add
popa
insl
ljmp
repnz
cli
pop
shr
sbb
mov
mov
imul
mov
sub
and
loop
fldcw
mov
adc
pop
and
repz
adc
mov
loope
lret
and
pop
sbb
ficomps
out
fcoms
add
adcb
inc
push
mov
inc
imul
test
push
lea
xchg
nop
test
fidivs
lods
out
xchg
lcall
dec
adc
sbb
pop
mov
loop
mov
frstpm(287
push
in
outsb
and
push
and
mov
mov
mov
and
ss
xchg
std
test
mov
mov
dec
adc
dec
bound
cmp
mov
and
nop
inc
hlt
mov
fcoms
stc
mov
push
stos
sub
xchg
pop
cmp
inc
fsubs
cmpsl
pop
lcall
jno
out
sti
popa
jns
xor
cld
mov
add
xchg
pusha
sbb
pushf
add
pop
repnz
pop
ret
cmp
out
sbb
stos
or
or
fwait
mov
bound
jecxz
or
in
testl
rolb
in
testb
push
and
cmp
pop
dec
or
fadds
aad
cmc
jae
xchg
imul
out
loopne
pushf
mov
adc
ret
iret
xchg
xchg
mov
iret
repz
sbb
cmp
push
push
jmp
addr16
jnp
jecxz
dec
insb
push
pop
scas
adc
fdivrs
ds
xor
loope
xor
imul
mov
push
sbbb
cli
je
cli
pop
push
mov
and
adc
jnp
or
or
andl
enter
je
popa
mov
xor
outsb
push
jp
sbb
inc
xchg
ror
clc
mov
mov
decb
test
mov
push
pusha
fcoms
adc
jb
sbb
sub
inc
push
add
js
jno
or
pop
sbb
sbbl
ds
ret
pop
not
fwait
and
nop
cmp
or
test
cmp
cli
mov
mov
or
nop
ljmp
out
sbb
dec
jmp
mov
arpl
ja
roll
das
insb
sbb
xadd
dec
dec
and
pushf
loopne
mov
ljmp
push
addr16
cs
jmp
sbb
test
dec
aam
adc
adc
scas
icebp
dec
mov
jmp
dec
sbbl
fisubs
dec
test
add
arpl
or
push
adc
fimuls
adc
lds
xor
rcr
or
xchg
adc
push
bnd
faddp
jns
add
ds
or
out
jmp
lret
out
leave
mov
sarw
sti
cmp
and
inc
or
loop
mov
pop
sbb
xchg
test
orb
ficomps
movsb
and
or
out
jb
push
xor
mov
fdivl
out
aas
or
push
js
mov
add
cld
cltd
ljmp
add
mov
pop
adc
sub
gs
pop
ret
scas
push
mov
add
je
in
xor
gs
vpmullw
mov
cli
shlb
xchg
dec
aad
lcall
sub
jge
push
test
inc
ja
push
and
cmp
jecxz
cmc
enter
mov
roll
jno
daa
dec
ret
test
mov
inc
pop
dec
dec
stos
sub
push
adc
cmp
xchg
lahf
xchg
daa
inc
xor
dec
nop
lret
outsl
fwait
jns
dec
xor
sahf
sub
int3
pop
stos
inc
jnp
orb
jp
scas
mov
adc
pop
jle
sbb
in
sarb
dec
jb
xor
inc
repz
scas
mov
fists
fdivs
add
jmp
or
insb
push
and
push
mov
sbb
inc
push
mov
fxch
hlt
xor
adc
dec
inc
push
sbbl
mov
int3
cmp
cmp
ds
sbb
aad
sbb
mov
leave
xor
xor
cmc
pcmpgtd
neg
cmp
sub
lcall
je
adc
mov
out
fcoml
sub
dec
cmp
ret
mov
pop
das
mov
test
notl
lock
lea
hlt
stos
jae
cltd
push
adc
je
mov
jg
cmp
jo
test
addb
pop
and
daa
lea
jns
in
subb
and
mov
xchg
scas
repz
pop
cli
sbb
adc
out
mov
jle
push
leave
cltd
sub
jmp
push
mov
ss
dec
xor
lods
leave
sbbl
dec
xchg
mov
cmp
je
and
ret
loope
repz
jnp
in
push
ja
insl
dec
and
mov
int
out
in
mov
ret
cmpsb
test
xor
mov
push
in
add
imulb
movsl
mov
fnstcw
sub
xchg
mov
test
and
js
fdivs
push
rorl
dec
int3
jb
mov
mov
cld
xchg
lahf
xor
lret
cmp
data16
jecxz
or
ffree
dec
jns
imul
mov
cmp
push
or
movsl
test
inc
jge
xchg
cmp
int3
adc
je
jo
cmp
sub
push
lcall
sub
pop
mov
in
sarl
push
push
sub
or
int3
pop
in
mov
and
pusha
inc
add
push
ja
out
fwait
ss
mov
mov
lods
mov
or
fsubl
inc
and
mov
aam
test
push
jo
inc
stos
sub
outsb
mov
jle
mov
jg
js
stc
and
jg
fldenv
in
push
sub
mov
and
mov
pop
insl
popa
rolb
stos
stc
lds
or
jge
in
movhps
or
pop
mov
lods
lds
loopne
xlat
int
fdivrs
loop
jns
mov
mov
mov
fbld
mov
iret
addb
repz
mov
sbb
je
jbe
inc
clc
add
ret
stc
and
cmp
adc
mulb
push
and
mov
dec
sarb
cmp
pinsrw
mov
push
iret
xchg
jle
nop
jne
xor
xlat
repnz
fsubrs
xor
sub
call
mov
xchg
incb
lcall
add
loopne
fwait
pop
rorb
xor
rol
push
cmpsb
push
pop
xlat
add
jp
popa
pop
popa
in
cli
les
fistpll
add
fwait
lret
test
lret
push
movsb
aam
js
xchg
sbb
cltd
mov
xchg
cld
mov
pop
js
movsb
cmpsl
xor
test
cmc
pop
push
out
fsts
lret
xchg
xorb
cmp
sub
pop
mov
push
jns
cltd
adc
xor
data16
dec
xorl
push
push
les
adc
push
mov
aaa
and
dec
xor
sub
xchg
sti
shrl
xor
enter
fcomp
jnp
out
add
mov
sahf
mov
daa
repnz
aas
jbe
call
push
add
mov
mov
inc
cmp
jbe
cmp
das
and
mov
mov
outsl
iret
daa
or
inc
ret
daa
sub
imul
testl
test
or
and
insl
push
push
ret
clc
mov
cmc
xlat
adc
cmp
inc
jl
jns
in
js
insl
xor
rol
push
pop
jbe
xor
add
sub
mov
mov
dec
stos
out
fstl
in
push
mov
xor
adc
inc
push
loope
lea
test
stos
inc
outsb
movsb
rolb
and
mov
fidivl
push
adc
add
sub
add
addr16
adc
loopne
mov
or
push
jl
mov
pop
cli
sub
inc
es
lods
xchg
xor
mov
insb
je
sub
add
loopne
and
sub
adc
mov
push
cmp
and
cmp
dec
sbb
pusha
pop
bound
das
sbb
and
jp
and
sbb
aas
in
mov
xchg
mov
sahf
push
sbb
in
jg
std
insl
pop
xchg
jmp
andl
push
jns
shrb
mov
jno
or
add
push
sub
popa
jmp
aad
mov
inc
mov
mov
sarb
dec
clc
test
adc
cmp
inc
mov
dec
jno
mull
orb
mov
jge
ret
rcrl
push
or
movsb
adc
jmp
ljmp
push
or
cwtl
imul
lods
imulb
cmp
cmc
out
imul
push
and
adc
jle
test
xchg
shlb
aas
cmpb
movsl
or
push
mov
loop
xor
or
aam
mov
mov
and
add
ret
mov
aaa
cwtl
mov
push
inc
dec
pop
lods
push
add
out
fwait
dec
pop
loopne
jae
adc
mov
idiv
sub
xchg
fnstsw
test
mov
das
add
ret
std
popa
pop
inc
and
shlb
inc
mov
rcrb
cli
jge
push
dec
cmpsb
xorb
fdivrl
jo
loope
out
push
sbb
adc
sbb
jbe
or
sub
push
sti
outsl
push
cmp
fcompl
push
lock
and
mov
or
imul
fmul
xlat
lret
add
clc
mov
hlt
lcall
push
pop
mov
mov
sub
das
mov
dec
or
ds
mov
cmp
and
add
ror
pusha
mov
into
sbb
fwait
adc
mov
gs
out
or
push
xchg
cmpl
mov
fsubrs
push
push
add
and
adc
fcmovu
hlt
add
lods
push
ret
mov
dec
add
xchg
cmp
and
leave
inc
add
and
jge
cmp
jmp
inc
adc
enter
pop
sbb
mov
lret
scas
jbe
xor
sbb
push
add
lret
stos
outsb
xchg
inc
movsb
lcall
iret
adc
aas
in
xor
into
mov
rolb
out
loopne
jp
jle
mov
lods
es
sahf
clc
icebp
into
jp
inc
sub
sub
push
or
ret
int
and
mov
sbb
adc
stos
and
mov
pop
hlt
mov
cmc
loop
push
and
adc
push
andl
mov
call
stos
jp
add
test
insl
add
cmp
mov
adc
push
out
lock
stos
add
jnp
fcomps
and
mov
mov
test
test
mov
sub
add
cmp
stos
add
clc
or
xor
push
jno
cmc
pop
imul
dec
xchg
subb
sbb
xor
sbb
push
aas
pop
shlb
push
inc
ja,pt
sbb
sbbb
sub
lret
in
jl
jne
sbb
xor
add
adc
jmp
mov
xor
cmpsl
fwait
sbb
out
aas
or
mov
sahf
mov
pop
aam
loopne
cwtl
imul
dec
add
or
jne
loop
hlt
cmpsl
insb
dec
loope
es
data16
cmp
aaa
sbb
mov
push
cmpb
jae
xchg
push
jnp
sub
mov
mov
add
enter
aas
lret
pop
outsl
ja
push
daa
lahf
mov
mov
pop
sbb
inc
loope
scas
mov
xlat
sbb
sub
xchg
stc
pop
jne
inc
and
outsl
ret
out
mov
stos
xlat
in
jne
insb
add
or
lds
stc
rcll
mov
lea
fmul
jle
fwait
insl
mov
push
mov
mov
dec
and
das
mov
adc
lods
std
stos
xlat
mov
hlt
ret
imul
inc
mov
inc
jno
xchg
test
or
sbb
push
cli
scas
ljmp
pop
add
adc
test
mov
ret
and
stos
pop
mov
fdivrs
hlt
pop
dec
push
jae
mov
push
stc
xchg
sbbl
cmpsl
push
adc
jne
jecxz
movsl
lret
neg
les
bound
sbb
add
adc
or
adc
ja
sub
mov
mov
mov
sbb
repz
cld
xor
test
push
es
cmpsl
pushf
sti
xchg
test
jns
inc
mov
inc
andb
ja
adc
loopne
lea
push
nop
pop
add
push
mov
adc
xor
sub
and
sub
popf
mov
add
bound
lret
jmp
pop
loope
cs
mov
bound
adc
cmpsb
andb
fdivrs
xchg
loop
mov
sub
sbb
inc
leave
fwait
enter
and
jns
lods
mov
push
xchg
xchg
mov
jp
popa
and
sarl
or
addr16
cmc
pop
filds
insl
adc
test
mov
je
push
notl
inc
xchg
cmc
inc
push
int3
mov
dec
jne
mov
popa
pop
mov
sbb
fs
sub
adc
stc
in
xor
mov
fwait
jo
in
sbb
jns
xchg
xchg
lea
adc
or
stc
add
cmpb
add
and
imul
pop
pusha
pop
add
sub
das
mov
xchg
mov
push
lret
push
call
and
sbb
in
cmp
xor
cmp
lods
pusha
dec
inc
mov
xchg
xchg
inc
xor
aam
adc
stos
jne
and
dec
mov
fxch
jge
or
xor
or
stc
and
iret
sbb
cs
lret
add
in
jl
push
test
insb
sbb
dec
outsb
mov
mov
stos
lea
jl
sbb
cmp
or
adc
cmp
or
rclb
test
mov
mov
cmp
jmp
rolb
pop
aam
pop
mov
out
mov
icebp
lds
mov
in
lods
mov
das
aad
pop
sub
aas
arpl
loop
ret
loop
push
aam
in
mov
inc
lret
movsb
push
arpl
jecxz
gs
aas
fistl
jmp
imul
dec
or
mov
jp
mov
sub
ljmp
mov
dec
push
std
ds
or
sbb
in
jo
push
incl
jns
fcompl
mov
scas
mov
dec
sbb
push
xchg
sub
push
sbb
nop
fwait
enter
dec
cltd
test
outsl
bound
loope
fldcw
or
int
dec
sub
sbb
adc
sbb
out
xor
add
mov
xchg
and
push
xor
xlat
loope
push
leave
mulb
fs
test
mov
mov
jae
repnz
das
pop
jne
mov
dec
mov
mov
sub
or
std
mov
jns
adc
ficomps
push
loop
mov
push
adc
lea
imul
sarl
sub
jne
out
loope
divb
lods
pusha
adc
inc
ds
std
sub
scas
mov
pushl
inc
outsl
rcll
aaa
loope
in
nop
xor
mov
xchg
int
jb
test
cmp
in
es
jg
xlat
lea
jns
adc
and
lods
inc
inc
cmp
mov
lock
insb
je
shll
cltd
mov
xor
push
in
lds
pop
lahf
mov
mov
jb
into
add
add
sti
inc
jge
test
sub
cmp
bound
fcomps
add
pushf
ja
into
pop
sahf
in
mov
cmp
loope
dec
jo
test
cmp
mov
in
or
mov
and
jmp
sub
inc
cmp
frstor
lcall
mov
mov
xor
imul
repz
add
cmp
lods
push
pop
lock
xchg
fprem
dec
ja
aas
add
mov
mov
mov
mov
and
lods
lcall
and
nop
lods
rolb
jae
mov
lods
xor
aas
mov
int
mov
ss
orl
xorb
jl
mov
add
cmpsb
cld
popa
or
lret
jmp
test
or
pop
cmc
push
add
xlat
mov
cmpsl
int3
outsl
lock
imul
addb
sahf
leave
mov
enter
cld
mov
rdmsr
xchg
and
rorb
jne
jmp
scas
pop
in
daa
and
and
leave
jl
sbb
dec
movsb
jg
popa
outsb
sub
xor
xchg
mov
mov
jae
sbb
add
int3
int
push
scas
push
xor
ret
popa
xor
in
cvtps2pi
std
pop
mov
outsl
shll
xor
cmp
cmpsb
dec
sbb
test
pop
mov
ja
mov
cmp
dec
ret
xor
jb
gs
cwtl
sub
sub
sub
add
mov
stos
cmp
fwait
shr
js,pt
xchg
movsb
pop
sub
xchg
cwtl
sub
cmp
inc
or
mov
cmp
cmp
adc
xor
mov
dec
mov
lods
out
mov
popa
or
push
mov
bnd
cmp
data16
mov
jno
cmp
andb
leave
ja
int3
or
dec
aas
xlat
in
or
jmp
inc
dec
out
sbb
mov
cltd
sbb
xor
jne
xchg
jl
ljmp
clc
pop
nop
and
loope
call
sub
xchg
dec
fwait
xchg
mov
out
push
mov
adc
mov
xchg
jmp
idivb
inc
jae
xor
dec
fcoml
jae
and
sbb
hlt
flds
dec
push
xchg
push
lock
adc
gs
or
faddl
dec
xor
pusha
movsl
jp
test
pop
aas
cmp
repz
mov
lds
push
push
pop
inc
dec
sub
sbb
es
xchg
aas
xor
inc
inc
mov
push
inc
cmpsb
test
sub
inc
adc
lods
fisubrs
xorl
inc
mov
daa
rolb
ret
ret
mov
fnstsw
cltd
dec
into
hlt
mov
ja
adc
push
cmpsb
adc
add
lcall
inc
sub
xor
xchg
dec
insb
lret
mov
fisubs
adc
scas
int3
jns
inc
jge
mov
test
lahf
xchg
dec
rclb
es
mov
repz
movl
jo
mov
cmc
pop
xor
xor
mov
push
stc
mov
dec
mov
pop
and
mov
and
icebp
xchg
pop
popa
mov
mov
sub
sub
ja
fisttpl
sbb
ret
test
jb
sub
or
inc
lods
sub
lods
adc
inc
in
cwtl
push
mov
adc
stc
pop
adc
jo
lds
fisubs
fisubl
ja
push
lahf
push
or
mov
xorb
lahf
cli
scas
jp
or
pop
xchg
mov
add
cld
push
cmp
sbb
daa
testb
test
ret
mov
iret
sahf
inc
addr16
dec
mov
ja
outsb
std
shlb
decb
mov
xor
sbb
std
and
inc
js
adc
into
xchg
ss
or
clc
mov
inc
es
call
fisttpl
push
xchg
cmpsl
loop
fildl
mov
insb
adc
mov
mov
add
inc
stos
jb
push
cmp
scas
inc
les
mov
fcmovne
cwtl
jecxz
push
aas
sub
cmp
lea
push
test
pop
sub
sbb
mov
ss
and
cmp
fwait
cltd
stos
mov
mov
das
xor
pop
cwtl
or
iret
or
jb
cmp
xchg
or
adc
daa
pop
pop
add
mov
inc
les
and
inc
push
or
sub
mov
pop
mov
mov
std
jmp
and
push
cmp
sub
xor
std
push
movsb
mov
dec
in
or
loope
sub
mov
in
std
mov
sub
xor
repnz
add
or
pop
aas
scas
fstpl
xor
and
fwait
mov
fstpl
adc
sbb
test
test
cmp
jmp
stc
hlt
xchg
leave
ds
shl
jl
mov
xchg
adc
mov
adc
out
push
add
xor
fwait
push
pop
fimull
icebp
mov
sub
xor
aam
lods
push
dec
inc
aam
xchg
adc
xchg
call
repnz
pop
in
sub
fmuls
icebp
add
cmp
sbb
out
std
mov
dec
ret
sbb
mov
adc
jb
add
popa
jne
mov
leave
insl
fldcw
and
enter
pop
xchg
into
and
xchg
cld
lock
mov
mov
mov
aas
mov
inc
push
pop
js
test
push
rcrb
dec
dec
mov
lock
inc
out
inc
cmpsb
mov
dec
icebp
fidivrs
push
lods
outsb
ret
jmp
add
cli
inc
icebp
mov
aad
and
aad
pop
test
xor
push
repz
aas
rorb
lret
lods
jge
les
out
add
std
mov
mov
dec
into
call
insl
addr16
jb
sbb
into
push
bound
stos
sbb
mov
dec
outsl
pop
insb
es
pop
jnp
mov
mov
cs
shrb
pop
or
jecxz
pusha
pop
jp
jnp
cli
lock
and
or
sbb
inc
nop
pop
sub
push
push
inc
dec
sub
add
ds
push
mov
pop
mov
or
int3
cmpb
dec
cmp
sbb
jo
and
icebp
aaa
sub
sbb
jp
jmp
pop
dec
sub
cmpl
filds
imul
or
push
test
and
popa
jns
jns
mov
cmp
sahf
jge
jnp
rol
or
inc
xchg
test
sbb
push
adc
cwtl
fdivrs
xchg
mov
inc
lcall
jl
out
push
xor
dec
into
xchg
stos
sub
push
xor
dec
or
ret
mov
icebp
xchg
fdivr
shll
cli
insl
test
data16
sub
xchg
push
sbb
aas
pop
mov
inc
push
push
mov
lods
lahf
adc
test
push
mov
sbb
pop
mov
test
sub
clc
test
add
xchg
jno
adc
pop
mov
jg
mov
add
test
mov
fiaddl
xchg
jo
std
add
xor
push
jae
push
jecxz
sub
jne
mov
or
xchg
cltd
dec
pop
out
jo
gs
movsb
xchg
lret
adc
scas
std
add
mov
cmp
jp
call
outsl
scas
lea
clc
mov
ret
stos
adc
add
mov
xchg
test
cmp
xchg
jne
jle
popf
in
xor
jg
into
xlat
jl
cmpsl
sahf
in
xchg
adc
inc
pop
xor
dec
movsl
or
cs
mov
mov
out
adc
mov
add
or
divb
sbb
leave
popa
fistl
and
shll
out
cmp
xor
ljmp
jecxz
loope
in
stos
mov
stos
push
xchg
hlt
xchg
fnclex
insl
mov
nop
push
test
jmp
rorb
insl
js
out
push
inc
dec
pop
fsubrs
pop
sbb
jno
push
dec
xchg
cmp
pop
inc
lds
cmpsb
fmuls
inc
ss
outsl
repz
pop
or
sbb
imul
adc
in
enter
movsl
test
and
pop
and
ficoms
or
mov
dec
fistpll
adc
jle
and
and
cmpsb
pusha
add
call
jo
insb
adc
into
dec
into
mov
jne
pop
cmp
sarl
cmp
xchg
sti
scas
pop
sbb
jo
pop
push
mov
aam
push
cld
incb
jae
mov
push
sub
xor
cltd
pop
pop
dec
cmp
sahf
shrl
js
ja
jae
pop
sub
repz
or
push
mov
icebp
addb
lret
or
sub
test
jmp
scas
add
xor
mov
pop
jnp
xchg
jns
push
cs
pop
adc
lods
dec
or
xchg
xchg
push
movsl
sbb
pop
push
aam
in
inc
push
pop
dec
lds
lcall
push
jp
sub
push
mov
jne
testl
sarb
cs
mov
inc
add
lea
jns
and
in
cmp
lock
pop
adcl
sbb
ret
sbb
mov
mov
xchg
cmp
xor
mov
mov
mov
dec
faddl
mov
hlt
call
jmp
loopne
dec
shl
jo
inc
add
mov
mov
fbstp
push
inc
sub
adc
or
jb
lret
sbb
mov
movsb
hlt
xor
inc
rdpmc
mov
std
fisttps
and
cmp
push
popf
test
jne
int3
cmp
cltd
cmp
xchg
dec
jg
arpl
sub
xor
hlt
xchg
stos
movsl
je
cmp
test
test
hlt
movsl
test
xchg
or
jbe
movsl
adc
lret
shl
popf
jns
test
mov
push
in
adc
jno
nop
test
movsl
add
jmp
push
lret
add
and
rclb
rclb
or
sub
mov
or
das
iret
push
movsb
cmpl
test
sub
pop
adc
xchg
outsb
or
pop
push
pop
jo
jmp
mov
outsl
out
push
cld
js
sbb
repnz
mov
sub
hlt
add
mov
cmp
stos
movsl
aam
shr
pop
dec
in
or
int3
or
addr16
lea
adc
jnp
push
jo
add
insb
cld
jbe
mov
inc
dec
jecxz
jg
in
xchg
and
fcoms
add
mov
repz
xor
mov
mov
fcoms
test
add
mov
shlb
xchg
fnstsw
jge
pop
lods
sbb
dec
popa
jecxz
lret
test
int3
inc
les
jg
ret
cld
sbb
xlat
mov
pop
fnstenv
cmp
shl
jg
test
in
lds
pop
or
inc
imul
hlt
sbb
sbb
out
cli
mov
dec
fsubrl
pop
sbb
lret
ja
into
fnsave
popf
in
lret
cmp
mov
adc
ds
mov
pop
jno
fs
dec
jb
lcall
xchg
xchg
mov
mov
fidivs
aas
add
popa
push
mov
pop
mov
sbb
jb
dec
scas
ficoms
push
or
lret
cmpsb
push
scas
fsubrs
fimuls
iret
mov
pop
test
cmp
outsl
jge
mov
push
add
xor
xor
jecxz,pt
scas
mov
jecxz
in
xchg
xchg
mov
sbb
imul
sbb
xor
je
leave
loope
sbbl
dec
pop
jecxz
lea
in
into
mov
lods
fnop
fstp
jp
jbe
js
lret
call
lahf
cmp
or
lcall
pushf
sti
lds
lods
add
ds
push
cli
jns
dec
xchg
in
and
jecxz
leave
cwtl
mov
push
mov
insb
inc
sub
pushf
in
adc
mov
push
popa
sub
shrb
hlt
aaa
rcll
mov
aam
pop
testb
cmp
fwait
cmc
cmp
sbb
int3
xlat
cmpsl
in
or
lret
adc
adc
mov
push
jns
ds
mov
dec
bound
mov
pop
sbb
cs
dec
sub
nop
pusha
aam
mov
aaa
jb
adc
inc
pop
push
cmp
mov
lret
lret
into
inc
test
jl
test
lods
sbb
shrb
sarb
sbb
jbe
incl
imul
pop
and
inc
adc
imul
mov
nop
push
notb
xchg
dec
addl
pusha
pop
push
pop
mov
mov
add
leave
adc
aam
jnp
clc
lret
mov
cmp
out
popa
pop
mov
sub
rolb
cli
fisttps
mov
stos
loopne
cmpsb
mov
sbb
das
xchg
mov
inc
scas
loopne
lock
lock
fldcw
cld
dec
iret
add
bound
ret
push
jae
adc
push
stos
pop
imul
enter
fistps
xor
jl
lods
add
lcall
xor
ljmp
jg
cld
jge
es
lea
push
adc
into
movsl
decb
rcll
addr16
mull
push
stc
call
rolb
ret
out
bound
inc
xor
stc
int3
jmp
add
stc
inc
dec
and
sbb
data16
mov
sub
and
pop
xor
adc
popa
pop
inc
int
test
pushf
shlb
sbb
dec
iret
cmp
rcr
scas
and
js
aad
xor
jae
dec
sarl
adc
int
scas
repnz
inc
inc
inc
sti
add
daa
addr16
fisubl
lcall
lods
lcall
xlat
loop
xor
ds
je
jle
shlb
pop
mov
mov
test
les
or
fwait
push
std
and
adc
or
out
sub
cwtl
jbe
mov
jo
sub
data16
jmp
and
je
fcompl
data16
pop
or
add
sbb
outsb
pop
enter
enter
sbb
jns
xchg
test
iret
push
leave
pop
jns
out
je
and
cli
mov
mov
and
sahf
and
push
dec
push
mov
jne
outsl
daa
fcoml
pop
mov
add
bound
rorb
sub
jne
mov
mov
push
xchg
push
dec
jns
sbb
sub
jne
xor
mov
dec
iret
std
fnstsw
or
out
add
lcall
inc
dec
ljmp
inc
jo
leave
mov
jmp
mov
jecxz
pop
inc
int3
inc
pop
sub
ja
cmp
loop
mov
out
cmpsl
stos
jno
jbe
fistpl
pop
dec
pop
sahf
sub
push
or
or
in
int
pop
jns
shl
mov
lea
sbb
mov
decl
lock
in
cwtl
dec
xchg
adc
adc
cmp
icebp
dec
in
or
and
dec
pop
cli
dec
sar
mov
or
test
cmpsb
xchg
movq
dec
pusha
fiadds
outsb
dec
sbb
xor
push
xchg
adc
dec
out
push
pop
pop
mov
inc
cmp
mov
or
mov
inc
in
mov
lcall
test
ds
mov
fdivrp
adc
mov
inc
les
xor
add
repnz
mov
push
scas
stos
xchg
jae
adc
mov
outsb
insb
inc
jle
imul
jno,pt
stos
or
shlb
push
adc
clc
scas
lahf
jl
pop
icebp
pop
cli
sub
jp
inc
cpuid
adc
sub
gs
cltd
push
pop
nop
pop
cwtl
test
mov
cmp
push
and
mov
roll
sub
mov
adc
and
mov
xor
cmpsb
adc
sub
std
adc
mov
xchg
sub
and
dec
or
rcll
or
sbb
out
into
cmc
cmp
xchg
cwtl
into
jg
xor
sbb
sub
je
push
push
and
add
out
notb
in
adc
push
dec
inc
cmpsb
or
insb
test
and
jg
push
and
sub
jns
mov
push
jmp
add
mov
test
repz
dec
adc
in
and
popf
cmc
aas
xchg
cmpsl
push
loopne
mov
xchg
push
xchg
dec
or
hlt
icebp
sbb
inc
cli
clc
in
andb
xor
inc
hlt
cmp
rorb
iret
icebp
or
and
xchg
mov
jnp
test
inc
int
push
not
scas
mov
push
cmp
gs
stos
jecxz
cmp
dec
shrl
jno
mov
mov
xor
pop
dec
and
sub
adc
sub
push
mov
jns
lret
cs
adc
or
ret
aaa
pop
mov
addl
testl
and
es
out
sbb
push
push
jp
jne
mov
dec
xchg
xorl
xor
bound
pop
cld
andb
ficoms
and
lahf
into
dec
xor
and
int
aad
and
ffree
shrb
mov
ds
lret
imull
pop
rcl
scas
or
and
roll
xchg
add
stc
xchg
mov
ss
add
jle
push
mov
pop
iret
add
shr
mov
mov
jp
test
adc
pop
jge
jmp
in
ret
jnp
cmp
and
mov
mov
and
gs
ljmp
add
call
daa
push
xor
dec
add
mov
push
fistl
dec
les
or
push
out
jae
sbb
divl
xchg
call
sub
pop
mov
or
sbbb
arpl
ss
xor
sub
lret
insb
fwait
mov
cmp
cmp
add
mov
xchg
lods
adc
push
sarb
out
or
orl
cmp
jmp
jg
ret
mov
jne
popf
jns
and
xchg
sub
push
and
sbb
dec
xchg
mov
stos
and
sbb
pop
cmp
jg
mov
push
mov
das
jmp
clc
pusha
shlb
loope
int3
or
out
mov
ret
pop
outsb
mov
orl
jmp
push
cmpsb
scas
push
sub
push
lcall
jmp
fiaddl
push
pop
fs
testb
xchg
push
push
jl
cmpsl
push
mov
or
adc
ljmp
gs
clc
jae
rcll
je
aam
add
xor
jne
pop
inc
pusha
mov
dec
dec
mov
push
pop
pop
imull
loope
xchg
stos
stos
adc
pop
insl
inc
mov
mov
jmp
sub
scas
loop
add
fwait
mov
cmp
call
mov
std
jge
rcrl
clc
outsb
call
add
sub
adc
clc
add
sbbl
cwtl
dec
filds
add
arpl
outsw
cmc
mov
jp
mov
mov
mov
lock
fdivp
std
add
mov
outsb
xor
push
jnp
push
push
xchg
mov
test
out
jo
orl
inc
es
jno
push
mov
stos
jp
xchg
rorb
jg
movsb
pop
xchg
test
mov
cld
pop
shl
and
jmp
mov
mov
loop
outsb
jo
pop
sbb
xor
sub
insb
mov
jnp
inc
jne
js
jns
inc
pop
mov
add
sahf
cmp
into
inc
lods
xor
cmc
pop
mov
int3
mov
mov
icebp
in
xchg
inc
jno
and
mov
repnz
pop
fidivl
and
cmp
sub
stos
push
add
cmp
dec
rcrl
or
shlb
mov
gs
inc
push
mov
sub
ror
shlb
and
out
mov
ret
hlt
mov
mov
lea
pop
pusha
push
rcrb
adc
popf
and
push
mov
rolb
xchg
gs
loopne
arpl
dec
adcl
sbb
fstl
mov
cmp
xchg
aam
rcrl
in
xor
shlb
add
call
dec
sub
shll
notl
shlb
lret
lock
idivl
imul
or
pop
or
aas
adc
xchg
jg
adc
hlt
lds
adc
mov
xor
cltd
lds
out
or
aas
in
add
jle
aad
shlb
pop
mov
movsb
loop
push
int
pop
dec
stos
sti
pop
cmp
cmp
pop
inc
jl
dec
sti
or
mov
icebp
xor
icebp
pop
cmp
daa
mov
dec
mov
in
mov
js
xchg
iret
mov
clc
sbb
mov
jecxz
jmp
sbb
inc
inc
lea
scas
sbb
aad
pop
jge
daa
xchg
movsl
loop
cmp
jo
mov
mov
pop
dec
data16
adc
adc
push
in
jecxz
scas
mov
aas
es
xchg
lea
adc
fucomip
mov
inc
mov
test
jae
mov
xchg
outsb
xor
pop
repnz
jae
push
cmp
xchg
dec
test
pop
fiaddl
jmp
mov
ja
inc
js
push
out
in
push
lret
subl
push
mov
xchg
xor
push
in
repnz
int3
mov
sub
dec
mov
stos
jae
sbb
add
ud0
jo
scas
fimuls
rcrl
lret
mov
push
jo
das
test
out
rcl
mov
sti
sbb
in
inc
xchg
sbb
cmpsb
aas
cli
push
into
inc
fs
out
outsb
loop
rolb
xchg
dec
jg
xor
fstps
adc
clc
adc
jecxz
fs
xor
jno
loop
xor
sidtl
inc
push
jmp
pop
pusha
jmp
push
test
cwtl
lock
jbe
scas
shl
jge
out
cmpsl
repnz
test
call
or
in
sbb
imul
dec
sub
mov
or
sub
js
ret
aaa
jnp
pop
jmp
jb
mov
sar
in
call
pop
pop
mov
pop
dec
xchg
int
jge
insb
mov
cmp
cld
dec
es
jno
inc
or
inc
dec
roll
sbbb
shr
pop
push
iret
adc
out
mov
jbe
xchg
cmp
iret
lock
xchg
lods
popf
adc
icebp
fidivrs
into
xor
xlat
and
imul
dec
rcl
inc
xchg
test
iret
cli
or
jl
pusha
jmp
sbb
aaa
mov
call
mov
jg
xchg
iret
mov
push
sub
fwait
stc
add
imul
data16
lret
mov
and
jae
fcmovne
int3
int3
adc
test
dec
mov
in
adc
in
xorb
add
sub
insl
pop
or
out
pop
lds
cli
xor
jbe
adc
push
ret
test
dec
movsl
jge
jo
inc
test
pop
and
out
dec
decb
int
add
pop
push
mov
mov
cmp
push
or
dec
mov
xchg
cmpsb
rcl
mov
sarl
cmp
out
sub
fsubrl
aam
pop
xor
sti
dec
sbb
add
fnstsw
int
das
push
or
scas
orb
xchg
stc
xor
pop
ja
inc
dec
mov
in
fidivl
adc
dec
push
popf
in
pop
xor
sbb
cs
test
js
hlt
divb
push
jp
sbb
fsub
dec
push
jbe
xchg
arpl
popa
cmc
adc
or
mov
push
cmp
movsb
fldenv
mov
es
mov
mov
icebp
fxch
sbb
ss
js
daa
and
cmp
xor
sbb
bound
imul
pushl
xlat
fidivl
sahf
jg
loopne
dec
push
aam
out
or
mov
push
mov
sbb
dec
xor
push
pop
mov
jb
aam
lret
xchg
add
addr16
mov
push
add
mov
mov
bound
cmp
popa
arpl
and
mov
cmp
test
fisttpll
lock
inc
addl
jb
inc
dec
stos
and
movsb
pop
xor
xor
add
or
sub
in
mov
and
xor
pusha
cmp
sahf
rcrb
mov
fidivrs
add
fwait
or
test
dec
fnstenv
rcrl
out
mov
push
mov
push
xchg
lret
scas
rcr
outsl
sbb
dec
jge
jnp
dec
shlb
dec
adc
adc
pop
ficomps
aaa
adc
xchg
mov
lret
pop
push
sub
loope
cmp
int3
loope
or
cmpsl
js
inc
sbb
xlat
push
add
adc
std
xchg
xor
insl
xlat
adc
scas
push
and
ds
mov
inc
popf
testb
mov
adc
daa
dec
stc
mov
sub
ss
fisubrs
jnp
mov
les
loop
pop
xchg
fstps
stos
or
add
loopne
es
jle
outsl
adc
fcompl
or
lcall
imul
add
sbb
push
dec
push
lea
dec
es
ret
add
cli
in
dec
ljmp
daa
in
xchg
cwtl
data16
inc
lods
jl
adc
jns
xchg
inc
repz
push
pop
add
add
les
pop
mov
pop
or
sub
pop
das
jae
imul
ds
int
jns
add
loop
stc
sub
and
adc
mov
addr16
sub
dec
stos
adc
xchg
leave
push
cmp
and
arpl
inc
jne
add
lret
shl
shufps
xchg
xchg
cwtl
xchg
movsl
mov
push
out
out
rcrl
gs
mov
or
decb
add
jae
lods
or
mov
jecxz
xor
es
mov
and
shrl
pop
hlt
loopne,pn
shlb
decl
add
in
dec
or
cld
loopne
jmp
inc
dec
dec
mov
pushf
movsl
push
out
mov
imul
xchg
sbb
add
cmpsb
mov
and
xchg
scas
or
aad
sub
xchg
in
pop
push
repz
sub
out
mov
ss
das
pop
shl
leave
sbb
nop
std
xchg
mov
les
dec
jmp
dec
aas
loop
xchg
dec
pusha
lahf
inc
pop
cmp
std
mov
movsb
cltd
mov
xlat
xlat
cmp
pop
push
push
aad
or
sub
clc
lods
call
add
jb
cmpsl
int
es
scas
sub
or
xor
ja
inc
cmp
adcl
mov
call
jecxz
add
xor
pop
or
mov
mov
inc
cmpsb
iret
inc
xor
int3
aad
dec
out
lds
adc
adc
jle
push
inc
mov
lahf
test
pop
and
outsb
mov
andl
enter
xchg
stos
iret
fistps
push
xchg
push
mov
call
lahf
or
dec
sbb
xchg
sub
out
add
addl
inc
aaa
xor
popf
jae
pop
gs
mov
popa
fwait
outsb
arpl
fimull
and
adc
lret
inc
and
mov
sub
pushf
cmpb
dec
mov
aad
sbbb
or
xor
or
cmp
inc
std
sbb
mov
cs
lods
mov
subb
mov
inc
lret
js
loope
jae
test
int
xchg
push
mov
cmp
idivb
jne
mov
sti
mov
scas
and
mov
mov
mov
sub
sbb
jno
or
cmp
jae
fsubs
and
in
das
cmp
nop
cld
mov
enter
push
xor
jns
stc
hlt
and
arpl
jl
mov
pushf
jbe
sbbb
xchg
pop
dec
and
and
lcall
inc
add
shl
shr
add
cmpb
pop
in
jnp
pop
mov
jo
mov
mov
push
pop
jge
stc
ss
cmpsl
cmp
rorb
cld
sahf
ret
imul
dec
outsl
repnz
test
sbbl
lahf
jge
adc
jmp
arpl
in
jns
les
arpl
loopne
outsb
test
ds
jno
mov
mov
xchg
fimuls
enter
jne
inc
pop
cmp
scas
ret
inc
cld
mov
lea
dec
stos
lret
test
adc
and
test
gs
enter
lds
mov
xchg
hlt
sbb
popf
mov
xchg
add
fiaddl
xor
cmp
test
inc
cli
hlt
mov
add
mov
mov
daa
mov
xchg
jb
shlb
xlat
cli
mov
dec
insb
and
and
add
push
mov
stos
leave
sbb
jne
in
aaa
mov
sti
lcall
add
mov
and
fdiv
mov
xlat
dec
jo
lahf
test
jae
push
sub
arpl
add
das
push
lret
push
lcall
pop
push
divb
xor
xor
les
mov
add
sar
mov
dec
xchg
cs
nop
xchg
inc
pop
decb
inc
or
push
insb
out
pop
adc
push
ret
xchg
pop
scas
jge
jmp
pop
out
shl
push
imulb
in
cmc
outsb
lock
or
out
xor
js
stos
jmp
jnp
fcoml
pop
mov
cmpsl
and
je
outsb
lods
cmc
pop
mov
popa
inc
stc
addr16
add
ror
lahf
and
fdiv
cmpsl
lret
imul
sub
mov
mov
test
add
xor
inc
sbb
mov
mov
mov
or
jo
rorl
add
sub
mov
notb
loop
xor
push
hlt
xchg
out
mov
sti
push
clc
ret
ja
sar
popa
cmp
andl
jb
iret
inc
in
aam
mov
lcall
mov
std
enter
mov
imul
xlat
or
rcrl
jl
test
shll
movzwl
xchg
hlt
cmpsb
fisubrs
rcrl
or
lea
add
outsb
je
lret
adc
loop
xor
or
push
mov
inc
lahf
sbb
ja
ss
push
inc
aad
mov
mov
or
xchg
mov
push
out
xchg
mov
imul
fstpt
fdivrs
out
gs
push
sbb
cwtl
rcrl
add
in
rolb
loop
push
cld
pop
mov
rclb
xlat
jbe
js
fsubrl
push
stc
xor
push
ljmp
inc
scas
sbb
and
adc
xor
dec
mov
stos
mov
lahf
mov
jg
addb
mov
inc
mov
mov
dec
xchg
push
jmp
cmpsb
fldl
insb
pushf
rcrb
negb
inc
xchg
outsl
fdivl
xchg
out
push
popa
data16
add
xor
adc
fwait
dec
fdivs
dec
loopne
clc
dec
xor
pop
push
jnp
into
jno
xorb
insl
scas
cmpsb
jle
jne
adc
mov
cmp
mov
les
je
cmp
roll
shlb
pop
and
pop
inc
pushf
es
adc
movups
add
in
dec
and
xor
and
mov
shll
ss
or
mov
pop
js
loope
xchg
inc
jno
jmp
and
inc
cmp
leave
lods
inc
add
xlat
pop
inc
xchg
and
jle
push
sbb
jecxz
into
pop
pop
mov
push
hlt
mov
gs
jns
scas
and
adc
out
sbb
push
sbb
mov
push
fisubrs
pop
mov
and
mov
xor
pop
outsb
addr16
pushf
pop
out
imul
cmp
ret
lahf
lods
adc
les
rolb
rorb
jg
xchg
xor
push
in
jmp
iret
xchg
subb
pop
mov
cltd
adc
imul
mov
ja
cmp
and
cmp
out
insl
mov
jmp
xlat
stos
jecxz
sub
sti
repnz
shll
jbe
inc
repnz
test
jmp
lcall
push
enter
leave
test
clc
mov
popa
add
jne
inc
sbb
add
pop
imul
mov
rcr
sbb
xchg
adc
jmp
sbb
fistps
cmp
pop
mov
insb
cmp
inc
mov
imul
mov
scas
das
cld
xor
ja
bound
mov
sub
adc
and
movsl
in
xchg
lods
or
mov
das
cmp
adc
sahf
pop
ja
mov
rclb
cmpsl
scas
mov
xor
xchg
xor
mov
push
pop
ljmp
jnp
sub
jns
ret
fistpl
dec
inc
in
fcompl
into
ja
test
or
inc
icebp
push
lret
out
pop
in
mov
lods
mov
rorb
or
dec
repnz
pop
loop
aas
push
gs
arpl
fbld
arpl
ljmp
hlt
dec
lods
mov
jb
push
jno
lcall
dec
icebp
sub
inc
jmp
add
sbb
loopne
xchg
fsubl
nop
dec
mov
imul
outsl
mov
jecxz
mov
mov
add
add
xchg
jle
push
jp
mov
jmp
in
sbb
nop
mov
pop
xor
xor
cmp
data16
dec
or
sbb
or
pop
mov
xorb
roll
sbb
pop
mov
xchg
mov
mov
cmc
jg
and
imul
mov
jle
or
push
ret
rep
hlt
mov
xchg
jmp
sbb
inc
push
shlb
jne
cmpsb
es
sbb
push
pusha
push
loope
and
fbstp
pop
pop
pop
jl
sbb
dec
int
mov
imul
into
pop
imul
sub
jp
sub
xor
je
dec
aad
jnp
add
fwait
mov
cmp
iret
adc
push
aaa
sub
mov
in
xchg
xor
insl
cwtl
out
jno
push
mov
ret
test
hlt
ja
icebp
or
mov
inc
push
fisttps
inc
mov
mov
jecxz
jns
insl
adc
out
sti
lea
xor
pop
mov
daa
xchg
repnz
out
aam
inc
pop
pop
mov
push
sub
stos
or
repnz
insl
ja
adc
jne
or
stos
inc
push
sub
sub
clc
aas
add
out
fdiv
imul
leave
sub
orl
adc
sub
jae
clc
shrb
int
sbb
ret
pop
add
cmp
aam
and
inc
xchg
fisttps
adc
fldenv
sti
js
pop
inc
rcr
inc
jmp
xchg
mov
loope
xchg
arpl
sbb
cmp
addr16
fwait
sub
add
push
dec
movsl
iret
in
je
jne
add
or
aaa
clc
jbe
sbb
sbb
inc
loop
dec
sbb
jnp
sbb
imul
outsl
movsb
sub
lds
xor
rolb
inc
sahf
jp
mov
movsb
popa
notb
push
addr16
mov
dec
push
pop
pop
and
jl
pop
lret
jo
adc
xchg
sti
int3
mov
xor
dec
push
enter
ror
push
mov
jg
push
xchg
mov
leave
jp
add
pop
mov
jae
xchg
adcb
or
dec
or
and
jne
fs
xchg
add
mov
std
jns
xor
fwait
jbe
loope
addr16
nop
xchg
jno
jno
stos
fsub
or
or
jmp
call
popf
push
call
loop
push
or
sbb
inc
mov
xchg
popf
push
xor
je
mov
push
xor
xchg
fwait
aas
mov
xor
lock
adc
xorl
xor
dec
mov
stos
mov
adc
dec
add
jge
sbb
lret
xchg
insl
in
cmpl
not
fcompl
inc
outsb
pushf
out
out
cwtl
pop
int3
shlb
adc
cmpsl
jns
push
inc
lret
scas
fiadds
xchg
sub
aaa
and
pop
pushf
jp
adc
cmp
pop
dec
shrl
imul
das
and
test
scas
ret
nop
je
push
in
inc
adc
andb
je
imul
jmp
inc
and
xor
and
lock
dec
xchg
hlt
push
cmpsl
sbb
xlat
leave
push
pushf
mov
fisttps
repnz
clc
leave
aas
addr16
js
pop
mov
outsl
add
stc
movl
arpl
js
cmpsl
cmpsl
mov
andl
push
cld
add
mov
lods
mov
or
jecxz
jp
dec
js
in
cmp
mov
push
fcoms
lret
lods
mov
popa
mov
push
adc
pop
fdivrs
mov
dec
push
cld
push
pop
ror
sub
adc
or
xchg
adc
xchg
xor
dec
dec
movsb
sbb
shlb
push
sub
xchg
jecxz
sub
mov
and
cmp
pop
cmc
lock
sbb
jae
nop
inc
inc
into
mov
and
daa
xor
insl
outsb
ds
cmpsl
sbb
mov
test
push
push
in
inc
xor
out
push
lods
daa
int
pop
popa
insb
cmpsl
loope
sbb
or
push
xchg
rcrl
mov
push
cld
adc
xchg
dec
mov
jp
bound
add
pop
popl
jecxz
cltd
push
mov
js
jne
dec
ficomps
idiv
xor
dec
icebp
nop
mov
push
pusha
xchg
sbb
sbb
sbb
mov
and
lods
dec
mov
mov
mov
cmp
mov
mov
in
jns
fsubrl
int
hlt
cmpsb
jb
insl
mov
ret
sub
mov
loopne
paddw
fidivrs
loop
sbb
mov
iret
mov
jp
lods
mov
cld
xor
jne
mov
setge
jae
add
cmp
push
pop
or
cltd
add
clc
lret
and
leave
mov
sbb
inc
movb
ficompl
xor
mov
ds
and
pop
push
mov
rolb
inc
inc
bound
adc
imul
push
mov
or
test
mov
add
jl
mov
test
sub
xor
dec
popf
sahf
shrb
and
inc
ljmp
fmuls
popf
adc
and
pusha
adc
mov
mov
popf
pop
cmpsb
enter
or
cltd
movsl
jecxz
stos
mov
inc
pusha
test
je
mov
dec
ja
inc
jbe
add
addl
leave
inc
jne
in
imul
je
lahf
xor
mov
mov
pop
stc
push
cmp
cmpb
xor
mov
mov
and
scas
out
mov
xchg
and
jbe
pop
jno
leave
jnp
inc
in
jmp
push
loopne
lea
add
icebp
push
lret
or
cmp
and
xchg
into
nop
pushf
mov
out
imul
jp
add
cs
jns
stc
test
sub
loopne
loopne
cmp
lods
js
cmp
test
adc
popa
add
push
mov
inc
push
pop
push
push
jns
lea
mov
jb
push
mov
test
mov
lock
sahf
rcr
outsl
ror
movsb
fimuls
jle
xor
jno,pn
lea
movsb
add
mov
js
adc
call
rcrb
and
ret
stc
lret
dec
xchg
and
and
fsubrl
xchg
cs
int3
and
cmp
pop
mov
movsl
test
popf
jle
mov
xlat
inc
mov
in
das
out
or
jbe
mov
mov
xchg
pushl
pusha
popf
add
stc
into
sbb
outsb
nop
jle
fldcw
cli
ret
pop
bound
add
das
sahf
mov
cmp
shll
cltd
dec
dec
rcrb
into
pusha
or
xor
es
add
in
and
mov
lret
xor
fs
cmp
imulb
das
test
xchg
pop
es
or
jae
mov
pop
pop
sbb
inc
cmc
aas
adc
ror
cmpb
scas
xchg
xor
mov
push
mov
xchg
es
test
aam
ljmp
mov
int
mov
cs
lahf
fidivl
cltd
rcl
mov
mov
push
fisubrl
mov
inc
jb
cmc
in
ja
mov
mov
insb
and
jp
in
sbb
test
mov
les
into
push
loopne
push
cmp
test
ja
and
cs
mov
xchg
inc
or
push
add
repnz
jecxz
mov
sub
mov
adc
fcoml
pop
jecxz
cmpsl
std
loopne
jns
and
push
fistpl
sbb
lods
or
mov
jb
clc
mov
sarb
arpl
pop
dec
int
out
int
ds
and
lcall
mov
ja
testb
outsl
and
mull
pop
pop
xchg
gs
push
mov
sbb
mov
ja
sbb
dec
int
push
add
ret
paddusw
lea
or
sbbb
add
cli
movsb
cmp
push
fs
push
or
and
insb
xchg
sti
adc
xor
icebp
mov
pop
imul
xchg
jg
mov
fldt
xlat
jle
add
sub
out
cmpsb
push
sbb
pushf
test
lock
arpl
sub
pop
incl
push
add
inc
mov
movsl
rcll
lret
shlb
push
sbb
insl
aam
cmp
aad
mov
mov
jne
jmp
sbb
in
inc
jns
push
sub
into
test
xchg
or
mov
mov
repz
addr16
fbld
jl
icebp
xor
call
js
int3
mov
sbb
sarb
xlat
dec
jg
pop
jne
test
xchg
or
sbb
mov
pushf
mov
sub
dec
pop
pop
jne
es
dec
xlat
loope
adc
movsb
fistpll
cmpsl
in
ds
inc
xchg
adc
jb
xor
add
lret
xor
scas
out
and
ret
dec
cmpsl
adc
or
mov
cmp
adc
xor
push
lock
cli
xor
insb
and
push
outsb
movsb
lock
movsb
fbld
test
mov
call
outsb
loopne
sbbl
dec
adc
push
push
pop
cmpb
xchg
mov
cltd
in
lods
in
lret
dec
mov
pop
or
mov
sbb
sub
addr16
xchg
loop
lds
push
fwait
cmp
adc
pop
ret
fwait
movsl
iret
lcall
inc
lock
shl
push
sarb
add
test
lea
cmpsl
xor
push
adc
push
mov
xor
cmc
sbb
lods
and
sbb
push
jp
sub
add
push
hlt
scas
xchg
jno
mov
mov
push
les
cwtl
int
test
mov
mov
and
jp
pushw
test
xor
adc
mov
cmp
ret
mov
dec
loop
mov
xchg
mov
bound
pop
imul
jle
mov
mov
out
dec
int
out
xchg
sub
enter
shr
cmp
aam
ds
inc
xchg
scas
loopew
lods
loop
scas
sub
leave
sbb
mov
or
xor
push
lock
mov
int
cli
xor
push
pop
into
stos
sbb
popl
pop
imul
lock
or
jns
jg
out
idivl
cld
lock
sahf
out
push
fdivrl
scas
pop
jl
imul
mov
aaa
arpl
cs
pop
xor
inc
fs
inc
jg
push
daa
sub
lods
adc
out
push
sbbb
push
pop
bound
and
cmpl
add
je
pop
push
mov
ret
pusha
inc
inc
mov
es
outsb
data16
or
fcmovnbe
lods
mov
adc
adc
ljmp
mov
inc
and
mov
cmp
xchg
test
mov
fdivs
mov
mov
fwait
push
mov
subl
mov
ret
and
repz
stc
gs
jmp
fst
fildll
les
inc
fisubrl
jp
orb
jl
jae
mov
and
test
popf
sub
int3
lods
lds
in
mov
push
jecxz
out
or
mov
fwait
leave
imul
xchg
add
add
add
cmp
mov
inc
push
sub
ret
std
enter
cmpsl
inc
sbb
jae
pop
pop
rcll
cmp
sbb
lods
sub
add
test
rorl
mov
jecxz
mov
scas
aaa
lret
cmp
lahf
out
xor
cmpsl
in
addr16
arpl
jle
push
ret
mov
std
or
shrb
sbb
mov
call
lret
scas
dec
mov
jecxz
pop
or
leave
sbb
aad
mov
lds
mov
jno
sti
test
nop
pop
sbb
push
and
mov
or
xchg
ds
jno
or
push
and
flds
fld
inc
mov
fsubl
pushf
jnp
or
fdivl
in
daa
das
imul
dec
insb
jp
ss
pop
jmp
ja
xor
test
sbb
popf
push
pop
icebp
in
jg
sub
inc
sti
fcomps
hlt
cld
mov
in
loopne
jbe
icebp
inc
popf
fsubrs
sbb
jg
in
sarl
insl
xor
mull
cmc
jns
mov
cmpsl
ds
shr
fwait
dec
add
or
pop
lods
push
mov
adc
cmp
lock
test
mov
andb
mov
mov
lods
mov
test
push
scas
in
push
jne
cmpsb
mov
add
dec
sub
jecxz
lcall
mov
jo
test
push
gs
out
pusha
pop
cmpsl
pop
pop
rorl
movb
in
jnp
bound
mov
insl
scas
pop
testb
orps
xchg
test
sbb
sub
adcb
fidivs
or
push
push
adc
pop
std
cltd
sub
cmc
sub
lods
movsb
dec
xchg
jns
pushf
test
xchg
push
jmp
scas
add
not
inc
mov
and
clc
xchg
sub
nop
push
and
loop
lds
xor
inc
dec
mov
inc
es
jle
add
stos
icebp
inc
xchg
js
bound
testb
push
xor
mov
fildl
jp
and
jle
jno
sbbl
stc
imul
mov
or
adc
jg
push
mov
cmp
jge
mov
cli
insl
orl
mov
cmp
mov
sub
mov
cmpb
testl
lret
into
repnz
jle
pop
sbb
loop
fcomps
lcall
adc
sbb
mull
lcall
mov
mov
lock
jae
adc
and
xchg
sar
or
sub
or
dec
sbbl
add
cmpsl
cld
mov
rorb
push
sarb
enter
ret
push
in
lret
mov
les
jge
mov
mov
aam
xor
lock
outsl
xchg
rcrl
jnp
add
test
out
mov
and
jae
cld
fisubs
cmpsb
sbb
push
outsl
sub
pop
out
fucomp
ja
sub
push
aam
mov
andb
jmp
adc
sub
pop
fcoml
cwtl
push
fisttpl
pop
shr
lahf
es
xchg
js
dec
push
add
cmpsb
xor
test
add
sub
xchg
jle
sahf
sbb
icebp
cmc
aam
add
cmpsl
bound
or
pusha
mov
sbb
jb
test
adc
jns
jae
mov
lods
push
ficompl
scas
mov
nop
and
divl
dec
and
xchg
outsb
std
sbb
addr16
pop
mov
pop
rclb
enter
in
stos
jg
inc
jmp
jle,pt
add
icebp
jp
or
shlb
hlt
out
loop
push
cmp
pop
leave
test
push
insb
shrb
sti
mov
test
xchg
adc
push
ljmp
ds
sub
sub
pusha
sub
les
in
adc
pushw
inc
repz
xchg
daa
jne
add
icebp
loope
test
iret
mov
xchg
lock
insl
sahf
es
mov
imul
jmp
pop
cmp
lret
pop
mov
jb
adc
xchg
mov
cltd
adc
push
sarl
cli
stos
je
adcl
mov
and
vpaddd
sub
cwtl
sarl
inc
sub
xchg
mov
lcall
adc
inc
rcll
test
dec
xchg
add
add
dec
shrd
test
pop
ss
aam
pushf
sarb
cmp
mov
popa
xchg
add
sub
daa
inc
pop
sbb
lret
fstl
out
mov
push
mov
shl
call
sub
or
pusha
inc
push
pop
jge
mov
fimuls
pusha
int3
adc
xlat
shrl
mov
enter
xchg
adc
popa
imul
cmp
loopne
inc
pop
mov
mov
sub
in
lret
cmpsl
jo
fcmove
adc
in
das
and
bound
push
test
aad
xchg
cmp
pop
or
dec
test
dec
fdivrl
pusha
clc
push
add
pusha
addr16
or
sahf
push
lds
jb
idiv
dec
iret
push
mov
cmpsb
pop
sti
outsb
sbb
aaa
push
and
mov
sub
add
push
mov
mov
jp
xchg
fnsave
sbb
xlat
adc
mov
jno
xlat
push
mov
repnz
std
fdivrl
inc
cmp
mov
push
push
sub
push
lods
mov
popf
dec
lcall
mov
out
imul
xor
push
and
and
lods
jmp
hlt
fcomps
ret
pop
dec
in
mov
push
mov
jg
loop
fcmovnbe
xor
ds
scas
mov
pop
fisubs
push
icebp
cli
testl
popa
ret
out
jg
dec
stos
mov
dec
sahf
dec
sub
xchg
pop
mov
movsb
into
push
ss
xchg
bound
pop
mov
mov
clc
mov
loope
in
imul
lahf
adc
xor
or
mov
mov
fbstp
cmpb
pop
adc
fcmovu
adc
or
scas
in
clc
dec
inc
mov
jno
sbb
stos
lods
adc
sbb
movb
addr16
inc
jnp
jge
pop
adc
push
outsl
outsb
aas
jge
int
jg
adc
daa
sub
jge
or
addl
jge
add
and
and
pusha
xchg
cld
and
ret
in
xchg
dec
dec
xor
mov
arpl
fstps
jo
ret
cmpsb
stc
push
add
inc
movsb
push
and
sub
mov
xor
inc
iret
icebp
and
fwait
sbb
cltd
test
sub
push
inc
jb
sbb
nop
stos
je
adcl
and
gs
push
dec
adcl
sub
aas
cmp
pop
jae
add
outsl
xchg
mov
outsb
int3
out
repnz
pushf
jle
hlt
rcll
xor
mov
lcall
lret
icebp
adc
xchg
jp
idiv
push
xchg
jno
pop
mov
xor
jbe
sbb
jecxz
mov
cmp
addr16
in
in
xor
enter
fldenv
mov
jbe
mov
dec
outsl
mov
mov
add
pop
pusha
xorl
mov
mov
jecxz
mov
fistpl
ret
lock
pushf
lcall
in
mov
push
shlb
sahf
xchg
push
imul
bound
adc
mov
add
out
push
inc
daa
mov
jecxz
lcall
inc
es
mov
cmp
stos
cwtl
sbb
mov
lds
fs
cmp
jecxz
push
imul
dec
sbb
adc
inc
fdivs
dec
scas
mov
pusha
or
loope
pop
daa
xor
imul
cmp
nop
lods
inc
ljmp
scas
lods
pop
out
or
dec
sub
add
fxch
test
test
or
scas
xchg
sahf
out
sahf
ljmp
jg
outsl
dec
push
loop
insb
xor
cmp
loopne
mov
sub
in
ficoms
jl
and
pop
pop
xchg
fs
jb
mov
movsb
fwait
int3
aaa
dec
icebp
fs
sbbl
cmp
mov
mov
mov
in
rclb
add
xchg
jae
inc
js
sub
mov
enter
and
mov
scas
mov
push
fdivs
dec
add
mov
out
jb
es
jp
push
and
xor
scas
lds
pop
sbb
cmp
shlb
and
pop
adc
jp
aas
mov
push
daa
cmp
fwait
aas
outsl
push
test
cmp
pop
jp
push
or
mov
lds
out
lods
insl
xlat
popf
jae
mov
push
or
pop
sbb
dec
ljmp
leave
pop
push
dec
pop
xchg
scas
push
adc
lret
sbbl
stos
pop
mov
adcb
xchg
push
jns
test
ret
mov
and
push
mov
stos
xor
cmp
roll
and
cmp
arpl
aas
int
jmp
xchg
decl
test
lods
lcall
pop
pop
xor
or
imul
shlb
shll
scas
mov
in
xchg
pushf
imul
jecxz
in
mov
popf
mov
inc
or
jbe
pop
shl
cli
mov
pusha
sub
add
mov
clc
ss
and
rol
mov
cmp
mov
test
pop
cmp
adc
adc
pushf
or
adc
jecxz
andb
dec
aaa
mov
sbb
mov
cmp
call
std
stos
ret
adc
cmp
outsb
mov
shlb
adc
and
je
loop
cmp
lret
pop
jecxz
repnz
xor
stos
sahf
shll
jl
and
enter
sahf
lds
jno
in
call
ficoml
adc
popf
inc
dec
mov
je
add
sti
add
in
sti
inc
hlt
mov
dec
popf
fldl
lret
cmc
stos
mov
adc
mov
lcall
test
outsb
andl
rol
fs
jge
mov
gs
push
push
push
int
adc
mov
xchg
cmpsl
adc
pop
fidivrs
scas
rcll
add
shrb
cs
int3
insl
adc
dec
dec
xchg
add
xchg
outsl
sub
repz
dec
xor
cmpsl
sbb
cmp
out
mov
sbbb
mov
pop
jno
dec
pop
dec
and
mov
jmp
or
fdivl
mov
inc
pop
jle
jmp
sbb
jmp
pop
mov
pushl
cmp
cmp
outsb
out
std
je
xlat
pop
ds
roll
repz
and
xchg
out
add
cld
out
addb
and
sub
out
stos
pop
dec
inc
mov
xchg
repnz
repnz
or
stc
int3
in
cs
fists
pop
hlt
sub
leave
pop
test
inc
aam
adc
imul
std
sbb
das
pop
aad
outsb
scas
or
enter
cwtl
mov
ret
pop
insb
negl
xchg
lock
jo
fstl
shrl
sbb
cmp
repz
jb
loope
xchg
data16
jbe
das
mov
xchg
int
mull
sbb
daa
jp
sti
or
dec
jg
pop
rcr
pop
dec
fldt
ds
push
mov
sub
js
sbb
popa
dec
sub
adc
xor
pop
add
inc
in
sbb
mov
pop
jl
cmc
divb
push
orb
outsl
inc
pop
in
pushf
sahf
mov
sub
pop
jmp
aam
pop
push
xorl
push
pushf
shlb
push
hlt
fs
or
xchg
sub
fwait
dec
sarb
sub
int3
jb
adc
jne
jge
imul
jns
rclb
xchg
inc
rclb
xchg
cmp
jne
nop
fldl
xor
jne
pop
in
mov
ljmp
pop
cmp
jge
jbe
xor
loop
js
ljmp
push
testb
sbb
dec
push
repnz
sarl
dec
or
push
test
cs
stos
push
movsb
test
inc
js
cmp
ljmp
mov
js
test
stc
mov
jl
jns
add
pusha
out
cltd
push
mov
add
test
sub
imulb
pop
lcall
leave
mov
or
jnp
fs
xchg
dec
and
addl
nop
mov
xchg
lds
and
or
pop
sarl
in
inc
xor
rcr
into
inc
fidivrl
inc
push
cwtl
xlat
sub
lret
jns
inc
mov
sti
cmp
cltd
les
cmp
mov
sbbb
xchg
jno
pushf
jno
std
idiv
or
ljmp
push
xchg
lock
mov
loop
leave
jo
fisttpll
add
lret
fsubs
and
test
sub
lret
jmp
sub
add
mov
pushf
xchg
lret
mov
pop
mov
andb
add
pop
addb
mov
ss
mov
mov
jle
or
push
neg
loop
xor
enter
pop
xchg
stos
pop
mov
xchg
lea
dec
rol
movsl
xor
add
and
int
jl
fsubrs
xor
jecxz
xchg
xchg
mov
popa
les
jle
cmp
out
push
fisttpl
subb
jne
sti
lret
push
notl
cltd
xchg
dec
in
or
aad
adc
test
ficoms
adc
ljmp
cmpsb
mov
test
stos
push
or
adc
xor
aas
push
iret
rorl
inc
ret
inc
adc
push
faddl
adc
shr
inc
cli
test
push
out
mov
dec
aad
sbb
or
sub
fmuls
mov
int
shrb
in
pminsw
shl
cmpsl
das
jp
adc
dec
adc
mov
cltd
xchg
jns
mov
sarl
pop
push
scas
shl
add
push
jg
mov
fildll
xchg
andl
test
les
and
es
mov
jb
and
pop
pop
das
adc
in
mov
aam
sub
pop
or
xchg
mov
je
ja
test
imul
loope
inc
inc
pop
cmp
push
jmp
test
sbb
sub
jnp
pop
jl
sahf
je
mov
add
mov
cli
ds
sbb
or
adc
mov
jbe
jns
mov
loope
jns
sbb
jne
scas
xor
jae
iret
mov
mov
nop
add
dec
cs
popf
stos
outsb
or
push
jns
cmp
stos
repz
dec
mov
js
lds
inc
ja
not
cmp
xchg
cmp
dec
insl
jl
scas
lret
mov
test
cmpb
mov
cmp
fidivrs
shrb
cmp
sbb
enter
shl
and
addl
sub
out
int3
imul
mov
sub
out
jb
or
push
or
les
mov
fdivrs
arpl
dec
cmp
mov
movsb
lds
in
cmp
jns
aaa
cmpsb
xor
adc
mov
lret
arpl
enter
ficompl
rorl
loopne
imul
inc
dec
push
xchg
adc
mov
jae
xor
das
adc
or
aam
mov
das
push
and
and
pop
pop
push
add
cld
push
int3
stos
inc
hlt
sub
aaa
insb
iret
pop
push
inc
jbe
daa
lret
arpl
fsubrl
fld
mov
jg
xchg
cltd
mov
xchg
rolb
jo
ss
negl
or
xchg
in
xorb
push
cmp
fisubrs
push
aad
fisubl
popf
popf
mov
jne
mov
mov
mov
cmp
mov
and
cmpsb
inc
icebp
es
push
pop
jge
ljmp
iret
into
arpl
mov
testb
rcrb
xchg
inc
popa
repz
jg
or
adc
cmc
jbe
ret
mov
xchg
rcll
mov
pushf
sbb
dec
aam
mov
jg
sbb
aad
mov
dec
cwtl
jns
stos
jb
sub
mov
pushf
pusha
mov
sarb
mov
mov
xchg
inc
testb
adc
jmp
adc
and
shl
sbb
subl
jmp
sub
test
mov
in
sbb
xchg
xlat
mov
fistps
jge
ret
mov
dec
mov
imul
repz
mov
jnp
xchg
push
scas
inc
scas
jmp
push
push
out
dec
aaa
js
cmc
mov
adc
inc
mov
je
mov
sbb
mov
jns
sbb
lods
mov
ss
mov
push
dec
sub
xchg
jmp
push
clc
out
into
std
aaa
fwait
into
imul
imul
add
xor
xchg
cmp
fstps
sbb
orb
jo
fdivl
insb
push
add
out
push
mov
js
out
mov
add
ss
es
imul
pop
mov
sbb
pop
outsl
pop
sti
or
mov
stos
scas
cmp
jle
inc
pusha
sarl
cs
adc
inc
pop
inc
je
add
sbb
mov
sbbl
xor
jno
adc
xor
mov
push
fwait
and
xchg
mov
lods
sub
daa
sbb
mov
dec
daa
in
into
push
or
cmp
xor
xchg
push
sub
out
jecxz
jg
push
mov
arpl
icebp
xchg
test
repnz
cmp
lea
mov
sti
aaa
clc
jb
outsl
fstpt
jp
cmp
loopne
xchg
jnp
add
ret
int
inc
stos
dec
imul
xor
fs
insb
aaa
pop
jmp
test
xorb
xchg
ficomps
pop
or
adc
and
inc
add
cmc
out
adc
sub
fcoml
lock
call
inc
stos
int3
jl
pop
movsb
loopne
test
loope
cmp
out
mov
inc
cld
xchg
cs
ds
push
mov
push
out
cmp
adc
sahf
push
push
out
push
cmp
incb
add
rclb
or
jne
test
pop
pop
push
jns
icebp
je
cmc
dec
cmp
int
in
cwtl
jmp
movsb
xor
jbe
aaa
fists
lds
mov
fsts
or
fs
cmp
sbb
sbb
adc
dec
in
inc
sbb
xlat
lods
lret
jge
je
mov
sub
mov
data16
int
sub
leave
loop
xchg
push
xor
notb
std
testl
adc
in
and
add
ja
loopne
pop
outsb
add
xor
or
cmp
mov
les
test
jo
loop
loope
push
imull
adc
lods
xchg
fs
testb
fsubs
mov
aaa
pop
sub
fs
xor
sub
in
or
rcl
ja
hlt
lahf
in
popa
inc
test
mov
mov
mov
dec
push
mov
add
call
jge
in
fsubs
inc
aad
add
outsb
xchg
mov
outsl
es
cmc
push
pop
push
mov
jbe
aaa
mov
and
push
loopne
fdiv
daa
stc
fnstsw
hlt
push
adc
movsb
sub
mov
adc
jmp
xor
mov
mov
pusha
mov
pop
call
idivl
fcmovu
data16
cli
adc
in
pop
js
xchg
loop
test
xchg
outsb
out
pop
jno
dec
imul
pop
sbb
sub
xchg
sub
sbb
push
mov
lret
mov
mov
xchg
jns
repnz
sub
pop
push
mov
cmp
xchg
xchg
dec
xor
ds
push
push
cmp
mov
out
pop
popf
aaa
loop
mov
adc
test
loop
and
sbb
cmpsb
outsl
push
in
arpl
lret
pop
push
test
sub
clc
jecxz
mov
sbb
fistpll
push
cmc
inc
inc
pop
fcomi
daa
adc
push
push
add
js
fcompl
icebp
push
orb
add
cltd
lods
or
push
xchg
leave
jge
test
jb
popf
test
jle
adc
stos
outsl
inc
outsl
or
xchg
mov
sbb
ja
push
inc
subb
sub
pop
bound
pop
push
leave
or
xchg
out
jg
mov
fs
enter
mov
jge
jb
mov
shll
xchg
sub
pop
add
aas
xchg
inc
fucomp
dec
ja
add
inc
imul
xchg
dec
cmp
add
repnz
lea
sub
aad
and
fisubrs
mov
out
dec
or
fists
push
dec
jg
leave
imul
inc
dec
mov
cs
lret
jne
and
pop
or
outsb
idivb
push
test
cmp
fs
scas
or
push
testb
mov
mov
pop
dec
sbb
stos
cmp
lods
and
or
stc
sbb
clc
xchg
fs
jne
add
roll
fsubrs
fs
sbb
xchg
ljmp
push
cmp
addr16
xor
lods
outsl
cvtdq2ps
pop
or
pop
arpl
adc
pushf
out
clc
mov
or
int
xchg
stc
mov
jae
test
out
pusha
adc
leave
dec
les
xchg
jl
mov
add
mov
in
ficompl
aaa
add
aam
dec
mov
mov
sub
jb
movsl
out
cmpsl
fldt
scas
pop
pop
shlb
xlat
or
mov
mov
adc
pushf
sahf
cli
xchg
das
sub
push
push
push
mov
mov
jmp
in
jecxz,pn
pop
mov
fiaddl
add
fmul
push
arpl
and
jl
iret
adc
js
inc
push
push
lret
mov
popa
lahf
push
pusha
fcomp
ret
xchg
lret
repz
jb
and
jl
addb
fisttps
frstor
je
dec
outsl
jns
pop
mov
sbb
insb
aam
xchg
push
int3
ret
and
out
jae
or
xchg
pusha
fisubl
notb
mov
push
pop
bound
mov
mov
xor
or
js
mov
and
jl
cmp
loope
mov
ja
insl
jb
out
sub
cmp
pop
test
test
add
pusha
xlat
jae
sbb
ljmp
clc
inc
sub
test
outsb
push
out
sti
inc
dec
mov
xlat
repnz
ret
jl
dec
jne
jo
push
pop
mov
jo
nop
les
mov
adc
mov
daa
lods
and
pop
inc
cli
cwtl
xchg
ret
stos
icebp
jae
and
mov
mov
pop
fsubrs
push
stos
adc
or
inc
in
add
mov
xor
jns
cmc
xor
or
out
mov
jmp
pop
imul
xor
inc
test
fdivrl
cmp
push
bound
test
jecxz
and
iret
pop
sbbb
add
cwtl
cmpsb
sub
cmp
push
pop
pusha
mov
mov
pop
popa
ljmp
mov
adc
test
loopne
sahf
xor
mov
shlb
jbe
mov
xor
shrl
fcoms
jnp
ljmp
setbe
pop
movsl
jnp
aad
nop
xchg
in
push
mov
cmpl
cmp
jnp
push
mov
hlt
dec
add
shrl
push
xor
mov
cwtl
adc
cwtl
jl
in
imul
cmp
hlt
xor
cmp
inc
outsb
mov
inc
clc
mov
cmp
cmpsb
xchg
pop
xor
sub
push
xor
mov
fxam
lods
xor
mov
push
test
push
dec
stos
and
scas
and
repz
pushf
ret
int
mov
add
jecxz
mov
es
sbb
in
ret
ds
mov
pop
push
inc
sub
jae
dec
adc
sbb
mulb
out
dec
ja
adc
pusha
aaa
jecxz
int3
adc
out
cmp
cs
test
pop
fists
xor
jo
pop
popf
iret
mov
shll
jb
sub
add
enter
repz
sbb
push
popa
std
sub
sti
mov
call
stos
push
pop
mov
mov
popa
cli
dec
ret
dec
pop
xor
gs
inc
negb
data16
mov
ficoml
mov
cmpsl
aas
or
sub
rclb
loop
insb
lods
mov
mov
xor
mov
mov
pop
clc
mov
shll
into
inc
ljmp
jle
push
mov
add
scas
mov
stc
mov
push
call
call
fnsave
xchg
mov
adc
mov
fcomp
aas
sub
addb
and
rclb
sub
ljmp
sbb
pop
cmc
mov
fcmovne
repnz
nop
mov
in
add
xor
sub
cmpsb
mov
iret
rorl
mov
sbb
icebp
sbb
jg
add
jg
jno
add
mov
stc
cmp
inc
stos
pop
xchg
movsl
test
stos
fwait
add
ret
cli
ss
inc
lret
repnz
pop
jmp
roll
and
adc
mov
fstps
push
mov
loopne
std
insl
mov
out
sbb
aad
repz
add
pop
cmp
add
push
outsb
push
fidivl
jae
jne
je
movsl
pop
xor
sub
xchg
dec
pop
inc
jl
arpl
cmp
inc
cmp
mov
cld
jl
and
insl
pop
enter
daa
xchg
sub
mov
in
xchg
adc
mov
sub
lds
lods
inc
in
sub
test
pop
adc
inc
cmp
cmpsl
jmp
test
cli
in
push
sub
jno
int
ret
sarb
sbb
es
push
hlt
fyl2x
push
aas
lds
idiv
pop
push
pop
or
xchg
xor
push
inc
mov
testb
cmpsl
nop
ds
cmp
clc
insl
insl
aam
bound
xchg
xor
cwtl
arpl
inc
push
les
push
leave
pop
sbb
dec
call
jmp
sti
sub
int3
sub
cmp
pop
cmp
cmpsl
inc
ret
cmpsl
in
add
bound
mov
push
xchg
sahf
je
aas
les
jmp
pop
cmpsl
fwait
aas
dec
pop
inc
adcb
popa
xor
push
xorl
mov
mov
mov
pop
ljmp
orl
dec
inc
mov
cmpsb
push
imul
jle
adc
iret
faddl
push
jnp
cmpl
sahf
clc
cwtl
insl
cmp
fwait
add
sbb
push
sub
bound
jp
fcmove
add
sub
pop
mov
lret
sbb
lods
mov
xor
jne
repnz
mov
sahf
in
or
int3
inc
jno
test
or
aad
stos
mov
xlat
add
repnz
inc
das
loope
xchg
sub
push
xor
mov
enter
adc
lret
and
pop
sti
lret
or
adc
sbb
inc
insb
in
lahf
and
inc
loop
push
ljmp
cmp
mov
pinsrw
fdivr
fucomip
in
xor
pushf
out
movsl
clc
stc
inc
push
leave
xchg
adc
into
mov
adc
leave
inc
loop
in
pop
inc
and
sbb
sti
dec
adc
jp
popa
rolb
movsl
sub
sbbl
outsl
and
xchg
rcr
pop
inc
movsb
pop
fnstcw
sub
jae
gs
push
push
sbb
loop
cmpsl
jnp
int
mov
pop
jns
sub
push
ficomps
out
ss
ret
popa
inc
test
out
lock
int3
loop
lock
cltd
int
movsb
jno
fs
mov
mull
movsl
mov
xor
add
shrb
or
mov
push
adc
jg
dec
jne
jns
sbb
in
movsb
and
adc
pop
aaa
ljmp
jo
cmp
pop
out
test
inc
jae
outsl
mov
xchg
push
mov
rolb
fdivl
mov
es
cmp
inc
dec
jae
cmpsb
addl
or
xchg
iret
push
scas
psubq
cmp
ss
shrb
sub
mov
mov
xor
movsb
jo
cli
es
or
push
xchg
icebp
std
push
xchg
outsb
psubusb
and
or
adc
scas
push
mov
pop
iret
scas
arpl
jnp
insl
out
mov
in
into
data16
icebp
ljmp
jb
mov
sbb
test
inc
std
mov
cmc
lods
outsl
sahf
xor
mov
jg
scas
push
jb
lds
clc
jne
ret
add
scas
jae
repz
out
ficoml
jp
mov
push
mov
dec
stc
adc
pop
fs
or
xchg
push
sub
jle
js
xchg
and
insb
scas
pop
fidivl
inc
and
shrl
inc
jb
outsb
sbb
pop
jmp
addr16
add
dec
jnp
nopl
in
cmp
clc
inc
repnz
mov
pop
setg
icebp
jo
test
dec
and
mov
lods
sbb
lods
mov
leave
ss
std
aam
dec
out
mov
mov
lds
rorb
sbb
das
dec
inc
jbe
pop
inc
pop
test
test
add
repz
fprem
fdiv
adc
mov
jne
shlb
xor
and
lock
or
xor
push
add
divb
push
movsl
sahf
outsb
pushl
mov
lahf
pop
out
dec
mov
mov
scas
loope
nop
aas
ss
mov
and
add
lds
lret
in
ja
pop
orl
int
arpl
adc
add
jns
aaa
int
fnsave
lods
std
vdivss
inc
and
pop
adc
ss
mov
filds
mov
xlat
mov
ret
cli
sub
mov
adc
lods
movsb
imul
jbe
mov
lea
xor
iret
sbb
mulb
rcrb
aam
rclb
aad
mov
les
sbb
pop
stos
cs
cmp
fs
mov
pop
into
adc
je
insl
and
cmpl
out
mov
cltd
ret
push
ljmp
inc
in
cmp
dec
mov
int3
insl
cli
xor
and
push
lea
xchg
mov
test
hlt
mov
icebp
push
add
lea
icebp
out
fidivrs
rolb
aaa
ja
mov
js
pop
mov
into
inc
pop
inc
rorl
lds
mov
mov
repnz
mov
imul
mov
int3
mov
cmp
adc
mov
jo
inc
inc
cmp
xchg
adc
lock
push
jnp
iret
inc
add
and
or
sub
jbe
xchg
add
mov
jmp
aaa
fcomps
jg
mov
cmp
cmp
push
outsb
cwtl
xchg
jmp
sub
shrl
mov
mov
ja
push
fidivl
jle
fsts
mov
lret
jmp
aas
fsubl
fimuls
ret
or
ja
and
or
or
movsl
jmp
icebp
shrl
jmp
or
cmc
inc
fcmove
sbb
leave
sub
xor
dec
and
call
dec
test
ficompl
add
sub
out
xor
push
pop
stos
jnp
inc
inc
sub
mov
adc
insb
fs
mov
jo
hlt
out
lcall
xor
cmp
int3
xchg
int3
sbb
jmp
xlat
mov
pop
adc
push
dec
rclb
sbb
add
ss
inc
cwtl
inc
push
add
mov
push
sub
adc
and
add
faddp
popf
inc
xchg
jnp
cltd
shrb
enter
cmpsl
fcomp
adc
jecxz
jbe
out
sub
int
sti
cld
ja
and
loop
push
stc
dec
enter
push
mov
into
adc
lret
mov
leave
push
nopl
ss
add
mov
xchg
dec
xor
adc
pop
adc
aas
or
sbb
aas
scas
cmp
xchg
ja
out
mov
adc
mov
or
sbb
inc
pop
sub
and
add
mov
fwait
adc
out
mov
arpl
adc
fidivl
sbb
inc
mov
adc
and
pushf
divb
stos
aas
in
or
fidivrl
dec
cmp
cmpb
mov
scas
ret
mov
jmp
or
mov
gs
sub
mov
jo
mov
jo
mov
cmc
pop
cmp
mov
xchg
jnp
push
xchg
mov
ret
rolb
mov
sar
lahf
mov
mov
or
les
add
jecxz
mov
jnp
insl
mov
gs
cmp
fdivrs
inc
adc
jp
repz
imul
enter
int3
rclb
cmp
xor
test
push
adc
movsb
cmp
lahf
lcall
test
dec
or
xor
mov
in
jb
cmc
cwtl
out
sub
inc
xchg
inc
out
jo
mov
movsl
outsb
clc
mov
rorb
aad
inc
push
pop
sub
or
stc
adc
mov
sbb
cmp
adc
mov
cmp
inc
mov
push
mov
bound
dec
sub
pushf
mov
pop
dec
pop
aad
mov
mov
pusha
sbb
mov
and
push
pop
test
andb
cmp
cmp
mov
add
jecxz
notl
mov
lret
aam
mov
lods
cli
push
jge
js
hlt
js
lret
aaa
dec
outsb
cs
sbb
sub
add
int
repz
xchg
jg
cltd
jb
xor
popa
xchg
mov
inc
lcall
sbb
faddl
incl
sti
negb
lods
daa
push
ljmp
fildl
pop
add
xor
cmpsl
sub
dec
mov
leave
sbb
lret
lret
adcb
cmc
nop
std
cwtl
xor
pop
les
xchg
test
inc
pop
push
pusha
dec
sbb
mov
dec
or
inc
testl
sarl
jbe
data16
cmpsl
or
mov
jnp
pop
inc
jge
sar
cmpsb
data16
cltd
cmp
cmp
pop
sbb
inc
icebp
loop
fsub
dec
dec
dec
push
outsb
movsl
mov
push
cmp
enter
sbb
es
ljmp
ret
pop
clc
jno
jne
dec
mov
nop
daa
orl
stc
mov
jns
and
cmpsb
dec
or
stos
pop
pop
cmc
insb
test
dec
cmp
xchg
push
aam
pop
loope
pop
mov
sub
cmp
mov
fs
addr16
xchg
fadds
push
cli
inc
xor
push
mov
pop
pop
push
daa
loop
pop
test
jbe
das
roll
xor
lds
stos
adc
add
pop
dec
mov
cmp
icebp
sub
add
mov
movsl
js
push
sti
add
loope
jg
lods
arpl
sub
lea
pop
mov
ja
addr16
daa
stos
xor
push
lret
hlt
insb
ret
cmpsl
ss
cli
inc
lods
enter
insl
cmpl
mov
sub
add
push
pop
call
dec
outsb
or
or
cs
push
mov
ljmp
jae
push
in
adc
mov
dec
inc
mov
addr16
sub
cmp
or
out
mov
pop
push
scas
movsb
lahf
repnz
and
mov
popf
arpl
cli
int3
sub
mov
sub
jmp
mov
loop
mov
popa
in
testb
aaa
and
fwait
adc
pop
jmp
test
cmp
mov
mov
lret
mov
test
addr16
dec
xor
out
rcrl
mov
xchg
ja
inc
pop
cmpsl
mov
mov
lcall
jge
in
mov
loop
inc
mov
and
xor
mov
scas
sub
push
dec
cltd
in
add
popw
ljmp
cmp
xor
repz
jns
and
sub
lret
into
sub
adc
shlb
mov
and
mov
jle
push
pop
jno
out
pop
out
jae
test
xor
sub
mov
cmp
inc
adc
push
fstpl
pop
adcb
insb
or
inc
lods
inc
push
sbb
sub
pop
aad
inc
add
dec
jae
push
and
aaa
lods
xchg
mov
div
or
mov
in
sarl
pop
pop
sarb
aaa
inc
sbb
push
lods
data16
and
dec
dec
adc
fldcw
out
pushf
insl
mov
lret
mov
mov
mov
or
add
sar
rolb
xorl
gs
xor
je
jle
out
mov
and
mov
adc
pop
xchg
imul
fistpll
les
and
xchg
mov
bndstx
sbb
jge
lods
lods
bound
out
data16
int
test
pop
sbb
jb
fcompl
rcl
ljmp
ret
pop
lods
mov
mov
jns
adc
data16
push
pop
lods
xorl
pop
inc
adc
push
cmp
xchg
add
push
popa
divb
add
repnz
imull
sti
mov
mov
sub
or
or
mov
stos
xor
aas
shll
jl
adc
imul
int3
adc
xchg
bound
dec
pop
icebp
bound
mov
inc
jg
cmpsl
add
in
adc
jno
jb
cltd
repnz
cltd
into
bound
movsb
jae
adc
inc
inc
xor
and
arpl
mov
dec
xchg
sub
arpl
push
push
in
jae
ret
xor
or
jmp
das
push
push
xchg
mov
push
stos
addl
mov
je
inc
inc
fldt
lret
ljmp
in
fnstcw
xchg
out
lret
faddl
jmp
lcall
sub
sub
pop
sub
arpl
stc
shrl
jae
mov
shlb
xor
addr16
dec
sbb
out
loopne
test
ret
inc
and
test
cmp
arpl
sar
xor
jle
push
movsl
jle,pn
xlat
push
fsts
sbb
jae
pop
fistpl
mov
fwait
adc
inc
imul
sub
lret
inc
ds
lret
mov
dec
mov
pop
outsb
push
or
shlb
arpl
mov
push
push
mov
cmp
lahf
dec
adc
add
aam
outsb
adc
sarl
mov
gs
and
ror
sbb
add
stos
sbb
lods
aad
fstps
or
mov
mov
sub
jle
mov
jo
dec
repz
data16
jecxz
sbb
push
imul
shlb
insl
cmpsl
add
fisttps
push
lock
shlb
push
jl
dec
xchg
mov
xchg
lock
mov
es
call
sbb
mov
sbb
cmp
sub
add
mov
in
adc
adc
out
aaa
andb
mov
out
mov
cmpsl
cmp
mov
rclb
mov
pusha
sahf
pop
mov
stos
mov
out
pop
int3
int
mov
or
fadd
jl
in
lcall
xor
and
xor
jne
in
in
mov
dec
sar
cmpsl
jecxz
and
sti
inc
and
arpl
jno
cmp
or
cmp
insl
and
inc
popa
jnp
outsl
jmp
repz
dec
jae
pop
jge
sbb
pushf
sub
xlat
ds
int3
jno
iret
jle
pop
outsl
xor
xchg
lods
pop
js
jne
fwait
and
dec
mov
dec
or
aaa
xchg
popa
in
jle
sub
and
and
jae
sbb
fwait
decb
xor
cli
push
add
and
adc
sub
add
push
adc
scas
push
pop
mov
popa
cli
bound
or
xor
fmulp
loop
es
cs
adc
nop
negl
paddsb
pop
testb
out
je
xchg
leave
scas
dec
fimuls
cmp
mov
add
test
and
adc
lock
repnz
push
addb
xor
in
lea
fs
int
or
cs
inc
lcall
in
pop
jp
dec
cld
data16
jge
sub
lods
mov
je
cmp
popf
dec
and
fwait
out
pop
jmp
test
adc
pop
out
mov
add
mov
sbb
adc
gs
cld
mov
aad
dec
xor
adc
outsb
inc
leave
dec
jp
mov
xchg
das
int
dec
repz
clc
shll
mov
xchg
xor
xor
cltd
enter
xchg
out
cmp
mov
dec
data16
push
pop
das
cwtl
in
in
cmp
xor
pop
cmp
mov
sub
mov
call
xor
enter
push
push
adc
fs
add
jmp
loop
addr16
inc
lret
pop
jbe
push
cwtl
and
mov
mov
add
pop
test
loopne
xor
jae
jns
test
mov
gs
or
fcmovb
xchg
jp
fldenv
pop
sub
inc
test
arpl
adc
pop
lahf
mov
movsl
mov
or
leave
pop
inc
loopne
mov
in
stos
or
jbe
cli
or
sti
xor
fidivl
adc
test
lret
pop
popa
hlt
inc
lea
and
scas
sbb
hlt
pop
repz
cmp
mov
mov
xchg
ret
leave
and
sbb
lret
adc
imul
negb
test
mov
pop
xchg
push
pop
mov
ja
cmp
mov
mov
fwait
mov
loopne
and
cmp
pop
mov
mov
or
aad
je
cmp
xchg
lret
push
pushf
mov
cmp
pop
popw
inc
cmp
lea
adc
mov
mov
or
push
popf
int3
cmp
xor
sub
inc
xchg
loop
pusha
and
xor
pop
in
mov
add
negb
and
insb
loopne
jnp
fmull
fisttpll
push
push
vmovq
push
mov
fldl
and
pop
repz
insl
push
jmp
mov
fdivrl
jecxz
adc
inc
push
or
push
jl
mov
cmp
and
ficompl
pop
adc
jl
mov
sub
jne
arpl
iret
mov
gs
mov
add
lret
fmuls
hlt
xchg
mov
inc
idivb
arpl
imul
push
in
outsb
call
popa
loop
or
femms
fwait
or
mull
sahf
adc
dec
pushf
dec
dec
sahf
fcoms
cmp
repz
rcl
insl
push
sbb
lret
sub
movsl
add
es
pop
jp
aaa
cmc
outsb
fists
or
std
lock
outsb
addb
iret
in
add
jbe,pn
aaa
push
mov
adc
mov
and
mov
jle
dec
pop
daa
push
jae
clc
jmp
mov
xchg
inc
fisubs
cmp
iret
sbb
aam
icebp
popf
movsl
arpl
xchg
mov
test
mov
jmp
test
pop
inc
cld
in
or
decb
std
es
add
adc
cmpsb
loopne
outsl
popa
xchg
in
sbb
or
cltd
add
or
jge
sbb
imul
push
cmp
je
aaa
mov
or
sahf
sbb
scas
pop
inc
lea
incl
hlt
mov
xor
data16
xlat
loopne
test
jb
add
adcl
std
sbb
xor
jl
lods
lcall
aaa
js
sub
fcmovnbe
jmp
cmpsl
cmp
movsb
fucomi
push
cmp
add
add
insl
xchg
addb
mov
int
jnp
leave
ret
insb
aam
adc
cmc
aas
lods
leave
cmp
in
test
in
outsb
cmpsb
sar
nop
push
iret
test
in
or
mov
cmpsb
stos
adc
mov
fisubs
mov
lea
cmp
jge
std
stos
scas
clc
icebp
pop
lock
fnstsw
adc
fwait
push
cmpsb
stos
out
es
in
inc
jl
mov
loop
or
popf
xor
int3
imul
pop
leave
arpl
push
jmp
dec
sub
out
dec
ljmp
fcomps
and
xchg
ljmp
fildl
in
pushf
sbb
jbe
test
sub
loop
xchg
rol
and
mov
xor
adc
iret
ss
push
dec
out
roll
dec
int3
cltd
iret
fisttps
push
fildl
sbb
mov
add
push
dec
outsb
movsl
jmp
int3
jp
test
imul
inc
adc
and
int3
lock
mov
popf
in
jno
adc
nop
push
ja
das
and
int3
cmpsb
popf
stos
dec
dec
loopne
scas
xchg
arpl
xchg
movsb
gs
xchg
and
add
mov
stc
inc
add
enter
dec
pop
xor
movsl
je
and
cmp
popa
cmp
lds
xor
inc
cmp
pop
xor
inc
xorl
cltd
cld
fistps
shll
cmc
loope
pop
mov
mov
mov
pop
jp
mov
mov
jmp
fists
jnp
pop
leave
ja
sbb
xchg
dec
pushf
xchg
insl
xchg
dec
in
cmp
mov
adc
cmovs
inc
sub
push
mov
test
xchg
rolb
nop
loope
push
repnz
popl
mov
pop
stos
out
loop
lods
cmp
jbe
push
imul
fwait
jbe
mov
push
stos
test
mov
xor
adc
stos
xorl
movsl
cmp
aas
jmp
add
je
orb
sbb
test
fiaddl
sbb
cltd
jns
pop
subl
dec
data16
int3
jns
push
outsb
xchg
or
cmovne
ds
push
lahf
cmc
movsb
mov
and
sub
and
cmpsb
push
or
or
and
pop
sbb
movsl
xor
push
jl
jae
mov
or
push
enter
adc
addr16
enter
hlt
fnstcw
and
push
ja
dec
mov
imul
adc
into
insb
jae
test
insb
mov
xchg
lea
mov
fs
xlat
in
or
cli
lret
ds
dec
aam
inc
cmc
int
insl
lods
in
das
or
enter
lods
cmp
mov
mov
std
les
fbstp
mov
cmpsb
dec
lea
or
pop
push
fcompl
in
lock
imul
popa
mov
mov
and
cmp
fucomi
nop
cltd
dec
and
mov
mov
insb
icebp
mov
rorl
pusha
imul
repnz
mov
xor
int3
shll
cmp
pop
mov
xor
push
out
xchg
movsl
dec
pop
push
repz
lea
xchg
mov
push
pop
sbb
cli
into
adc
stc
out
dec
adc
mov
cltd
arpl
or
pop
mov
and
loopne
add
out
into
jp
xor
inc
adc
mov
int3
push
mov
sub
outsl
jle
test
inc
dec
push
sub
or
sub
mov
adc
add
pop
mov
xor
or
mov
int3
and
mov
into
push
dec
test
inc
push
repz
add
scas
je
in
xchg
js
mov
jbe
clc
xor
push
divl
adc
jle
jl
push
ret
mov
cltd
frstor
mov
xor
out
in
aad
xchg
mov
aaa
pushw
rcrl
pusha
jnp
or
mov
mov
push
push
and
jo
mov
orb
mov
pushw
stc
add
call
popa
jge
lret
std
push
pusha
dec
add
sub
sub
imul
call
jecxz
push
push
negb
add
out
sarb
nop
pop
pop
sbb
jo
dec
fs
lret
jae
imul
adc
cmp
pop
push
popa
rorl
jnp
adc
mov
orb
push
and
and
lret
jbe
out
test
mov
outsb
fldl
jg
add
hlt
orl
xchg
stos
xor
stc
cltd
and
in
ljmp
lret
and
mov
stos
mov
sbb
outsl
push
lds
fiadds
jge
addr16
jmp
rcl
jge
mov
out
push
mov
cmp
mov
push
int3
and
cmp
xchg
mov
pop
stos
mov
pop
lods
push
mov
mov
frstor
adc
dec
in
pop
out
lret
mov
push
fstps
mov
fsubrs
pop
dec
js
mov
divb
inc
std
sbbb
sub
shrl
out
jne
sbb
ljmp
test
lcall
sbb
mov
mov
xchg
mov
xor
lret
fs
sbb
push
push
lahf
sbb
xchg
sti
xchg
adcl
xor
mov
cwtl
sahf
ljmp
add
push
cmp
ja
mov
popf
jl
scas
mov
cli
mov
push
and
lcall
add
pop
aaa
push
and
mov
dec
aam
or
sub
imul
insb
mov
lds
imul
xor
stc
adc
pop
dec
and
sbb
ds
movsb
mov
cmpsl
std
pop
xor
lcall
mov
repz
mov
fisubrs
and
pop
mov
mov
popf
stos
inc
mov
cld
and
xlat
ret
adc
pop
fcompl
sti
sub
push
cmc
cmp
push
xchg
loop
test
pop
push
sub
mov
xor
jmp
dec
scas
out
ljmp
cmp
out
mov
mov
dec
cmp
sub
mov
int3
add
cmp
xor
xchg
iret
push
call
shlb
pop
jae
sti
call
pop
cmp
xchg
mov
inc
popf
cmp
mov
call
cmp
jo
fldenv
ljmp
jge
mov
mov
push
jle
fwait
mov
xorb
cmc
cmp
repz
loopne
cltd
push
xor
addl
push
roll
xchg
clc
dec
mov
mov
or
cmp
fadds
jp
pop
cmp
hlt
cmp
dec
repnz
arpl
jne
push
je
push
cld
leave
xchg
cmp
cli
dec
test
inc
pusha
cli
or
outsb
push
xor
scas
in
scas
pop
mov
cltd
xor
loop
cmp
lahf
in
pop
dec
cmp
sub
mov
mov
sti
sahf
adc
aas
jae
xor
addr16
inc
insl
dec
or
in
mov
movsl
xchg
cmp
or
xchg
jno
cmpsl
pop
xor
dec
in
push
push
adc
fidivs
push
xor
idiv
jmp
add
packuswb
mov
cld
xor
jge
sub
imul
notl
movsb
cmp
push
fisubrs
ja
push
pop
mov
jle
jne
jne
pop
hlt
mov
xorb
mov
int3
inc
add
ljmp
iret
in
sub
les
shl
scas
pop
sar
imul
hlt
cmc
movsb
lahf
gs
push
mov
cltd
xchg
jbe
mov
dec
aad
cltd
je
jle
mov
mov
or
pop
cmp
ret
sub
pop
sarl
mov
decl
mov
rolb
psubb
loop
rolb
clc
sbb
xor
int
or
in
and
insb
test
aaa
dec
mov
pusha
inc
insb
sbb
fstpt
jb
mov
xchg
xchg
out
movsl
pop
jl
std
dec
xor
cmp
lret
adc
loop
mov
cmpsb
pop
lret
push
subb
inc
lock
js
xor
pop
cmp
stos
out
xchg
sub
inc
cltd
lret
jae
push
fdivs
mov
xchg
shrl
loopne
mov
inc
pop
fsts
sbb
xor
ret
sbb
mov
leave
insb
add
lret
inc
insb
mov
adc
push
ljmp
dec
mov
aaa
sbb
iret
mov
inc
push
scas
icebp
cmp
sub
popa
mov
insl
pop
pop
and
xchg
decl
imul
aad
pusha
mov
inc
rolb
jb
mov
mov
mov
outsb
ret
fcoms
pop
cwtl
sahf
movsb
pop
test
mov
ret
rorw
rorl
sub
xchg
stos
jo
and
add
pop
iret
and
subl
sbb
out
and
dec
test
jbe
jp
jbe
std
jno
jg
pop
xchg
pop
ss
std
cmp
arpl
xchg
into
mov
inc
sub
pop
inc
fsubrl
mov
xchg
dec
lahf
mov
dec
jae
fistpl
mov
xchg
mov
sub
loopne
mov
jbe
push
dec
xchg
push
or
push
sub
in
inc
sbb
mov
mov
jp
lea
jno
dec
or
xchg
loop
lods
xorl
pusha
in
mov
sbb
xorb
stos
mov
push
out
xchg
pushf
add
js
mov
xor
faddl
sti
mov
push
arpl
push
daa
xor
jmp
jno
pop
out
jb
mov
in
cmp
arpl
sub
fidivs
dec
and
dec
jge
out
inc
inc
nop
call
pop
dec
lcall
push
je
push
jl
mov
push
or
testb
iret
dec
add
dec
in
daa
das
xlat
sub
stos
xchg
sub
test
adc
sbb
jecxz
je
adcl
sarl
dec
push
mov
cmc
or
pusha
add
loope
fbstp
ret
mov
mov
mov
out
xlat
mov
mov
aaa
or
pop
jbe
jb
pop
sub
aaa
xor
jns
and
das
arpl
or
add
add
insb
sbb
cmp
scas
dec
in
jns
iret
lret
les
loopne
push
test
dec
mov
xchg
jl
mov
pop
test
testb
or
inc
dec
sar
call
adc
sbb
mov
xchg
enter
loope
jecxz
sbb
test
mov
shrl
in
cmp
and
inc
or
in
push
inc
jge
icebp
pop
add
insb
sbb
cmp
sbb
insb
stc
shll
insl
push
and
and
pop
jb
std
cmpsb
repnz
push
lea
leave
leave
or
movsb
sub
xchg
in
jl
xor
repnz
dec
jns
pop
sub
sbb
or
pop
mov
inc
inc
in
lcall
cmp
push
dec
pusha
push
dec
enter
mov
lds
aaa
and
out
pop
jae
and
or
mov
or
jb
lock
inc
jbe
mov
inc
xchg
dec
push
int3
inc
inc
jl
cmpsb
sbb
mul
mov
xchg
into
xchg
jo
mov
cmp
xchg
inc
aam
pop
jle
not
mov
aam
enter
dec
xorl
add
jb
dec
subl
adc
xor
sahf
into
xchg
xchg
ficompl
inc
adc
mov
xlat
sbb
jecxz
push
sbb
gs
xlat
or
fcomp
xor
lds
xor
dec
push
mov
dec
test
cwtl
mov
cld
push
scas
and
adc
sub
jne
push
lahf
imul
imul
cmpsl
sahf
push
mov
sub
aam
enter
in
jne
or
movsl
sbb
adc
sbb
test
sbb
or
and
jae
xor
add
add
inc
jecxz
mov
push
arpl
add
pop
int3
js
mov
jl
ret
sbb
push
mov
shrb
mov
in
pushf
mov
add
pop
and
popa
cltd
aad
jo
sbb
xchg
in
mov
cmp
fmul
xchg
xor
pop
cmp
lret
inc
das
jecxz
mov
or
xchg
shlb
in
sub
ds
xor
cmpsl
sub
jb
mov
adc
mov
ret
out
int3
lcall
or
ret
pop
mov
cwtl
push
pop
xchg
das
stos
cld
jl
lcall
cmp
aad
decl
cmc
test
sbb
inc
jl
clc
cmp
test
mov
xor
movsb
imul
dec
cmp
cmp
outsl
add
inc
add
mov
add
mov
mov
lds
inc
cltd
sbbl
cwtl
sbb
or
std
clc
or
jnp
dec
in
adc
in
aad
and
or
es
lcall
inc
adc
fisubrl
mov
push
cmp
add
ljmp
fcomp
sub
jecxz
movsl
pop
or
rcr
out
movsb
or
test
addr16
arpl
insl
sub
cltd
push
cmp
xor
mov
jg
push
mov
icebp
mov
les
push
push
data16
push
pop
inc
inc
lahf
dec
daa
shlb
mov
cmp
cmp
mov
fcmovnbe
enter
mov
mov
inc
jno
mov
ds
mov
in
loop
pop
and
adc
mov
sbb
xchg
cmpsb
enter
jl
stos
cmc
xor
cmp
imul
fldl
xchg
addr16
std
je
cmp
mov
xor
jp
repz
xchg
dec
jg
lods
mov
gs
fadds
fs
out
mov
out
frstor
mov
cmp
xor
inc
jno
adc
out
and
adc
jg
adc
xchg
cmpsb
mov
test
xchg
jle
cmpsb
adc
movsl
in
fmull
icebp
inc
cmp
xor
cmpb
sbbb
fldcw
xchg
xchg
inc
cmp
mov
sub
je
mov
mull
push
inc
je
adc
adc
dec
fdivs
pop
pop
sbb
lods
mov
aas
pusha
cmpsb
or
and
push
inc
js
lods
push
xchg
mov
mov
jg
sbb
fsubr
call
dec
jno
cld
cs
cmp
lods
out
or
push
cs
push
and
mov
mov
inc
cmp
lds
pushf
ja
cmpsl
cmc
sbb
push
push
dec
je
xchg
daa
xchg
shll
xchg
mov
mov
xor
push
punpckhdq
add
pop
lods
sarb
repnz
and
mov
push
test
add
test
jle
enter
ljmp
pop
add
mov
int3
mov
xchg
adc
inc
and
subb
adc
fcompl
inc
xor
mov
or
adc
movhps
mov
rcrb
mov
adc
push
daa
cmpl
and
dec
push
in
in
mov
shlb
test
clc
insb
adc
ljmp
mov
int
stc
aad
sub
push
out
cli
int3
push
dec
bound
or
fisttps
and
cmpsl
cmpsb
rclb
mov
jl
lds
xchg
mov
inc
rcrb
out
clc
add
es
ds
inc
and
lea
out
pop
add
add
cmc
mov
cwtl
fs
loop
outsl
mov
shl
adc
xor
pop
inc
fsubrl
movsb
test
es
mov
rcr
aas
fdivrs
sbb
mov
or
je
mov
pushf
xor
mov
jge
push
fchs
jnp
mov
lcall
fstpt
ret
stc
leave
xlat
add
mov
and
movsl
pushf
cmp
cmp
jmp
daa
movsl
fs
es
aaa
test
cmp
and
lock
cmp
int
daa
jbe
sub
mov
jg
mov
mov
push
xchg
cmp
es
or
xchg
jge
outsb
fidivrl
fdivrl
adc
dec
enter
jge
or
ljmp
xor
nop
adc
sbb
add
dec
jns
das
inc
cmp
fists
push
in
adc
push
jno
push
and
dec
cld
sub
lret
or
fcmovu
test
sbb
das
iret
mov
push
pop
add
cmp
leave
xchg
ds
jns
pop
adc
shrl
xchg
mov
lock
jb
mov
cmpsl
mov
incl
aam
push
or
test
sub
add
add
mov
lret
lret
test
jg
loope
out
in
sti
jns
stc
jbe
addr16
into
lret
pop
jnp
mov
inc
fmulp
shll
loopne,pn
jb
pusha
je
xor
mov
in
test
mov
xor
mov
fwait
lcall
push
push
jns
in
mov
xor
adc
mov
fwait
dec
adc
xor
scas
cmp
stos
inc
lock
adc
dec
shll
push
sub
xchg
dec
dec
hlt
push
imul
stos
jecxz
icebp
lahf
fwait
xor
dec
mov
add
dec
jmp
ret
xor
insl
sub
hlt
add
inc
jg
das
leave
push
repnz
dec
enter
inc
mov
in
jecxz
sub
cmc
or
lcall
cmc
lock
bound
call
xchg
clc
push
mov
jge
mov
mov
jno
mov
mulps
pop
aas
jne
xor
ret
and
or
nop
pop
lea
fistps
cwtl
or
adc
ret
imul
orb
in
int
xchg
in
mov
insb
push
das
jmp
rol
pusha
pop
jl
jae
das
dec
clc
pop
pop
pop
dec
inc
pop
loopne
roll
mov
movsl
enter
sub
mov
push
or
paddsb
fldz
ffreep
mulb
add
movsl
jge
mov
xchg
jg
and
test
sub
cmpsb
cmp
jnp
xchg
pushf
mov
subb
push
shll
push
ljmp
popa
in
sub
xchg
cmp
gs
xchg
aas
add
xchg
mov
outsl
jl
push
adc
clc
cmp
xor
movsb
mov
pushf
rcl
mov
cmp
and
ljmp
fmul
and
out
and
ret
addr16
mov
mov
cmc
notb
inc
stc
insb
hlt
int
add
or
xchg
imul
cmpsb
dec
mov
adc
mov
or
jp
lahf
loope
sbb
pop
dec
mov
xchg
mov
dec
fisubs
aad
xadd
or
fs
lcall
imul
test
mov
lret
jnp
xchg
inc
stos
jecxz
add
in
leave
jmp
xchg
adc
pop
adc
mov
test
or
sbb
adc
outsl
xor
pushf
andl
lods
xor
movsl
das
add
fimuls
orl
pop
insl
dec
jno
push
or
inc
push
or
jg
cmpsl
xchg
pop
dec
push
add
pop
popf
inc
push
iret
decb
into
mov
dec
jmp
insl
sbb
out
cli
sbb
cli
jae
xor
shrl
repz
pop
fwait
mov
shll
xlat
dec
mov
ret
cltd
jb
mov
or
int3
mov
fildl
out
jbe
jmp
adc
testl
nop
xor
aaa
mov
jmp
or
mov
and
xchg
aad
sub
jmp
fidivrl
aaa
push
mov
inc
sub
ljmp
das
pop
mov
xchg
fstpt
ss
aad
add
dec
cmpb
xor
mov
adc
pop
sub
enter
ds
sub
jbe
adc
cmp
inc
xor
lods
sbb
repz
or
std
fdivrs
std
cmp
push
add
add
ret
mov
and
loope
test
add
mov
cmpsl
sbb
adc
xor
or
popf
dec
mov
ret
cld
mov
mov
push
ds
jne
ds
mov
lret
shrb
xchg
jecxz
xor
adc
mov
pop
mov
repz
je
xchg
dec
xchg
testl
jge
add
test
or
pop
std
ss
sti
fisttps
adc
xchg
jg
cli
adc
pop
mov
psubb
lock
sbb
cwtl
not
push
push
in
mov
ss
aaa
std
jp
faddl
inc
push
jl
jmp
or
std
xor
cmp
xlat
lock
pop
mov
mov
test
pop
sbb
dec
cwtl
jb
nop
add
bound
mov
mov
and
ja
ds
xor
inc
or
or
in
xor
sub
jl
pop
add
mov
cmp
sbb
repnz
push
test
lods
xchg
adc
inc
int
add
jno
or
push
dec
sbb
pushf
sbb
sahf
roll
mov
sub
js
sub
push
shl
mov
or
jmp
push
shll
leave
int
inc
inc
ds
stos
icebp
adcl
je
push
iret
inc
or
and
lods
outsl
out
test
sahf
out
fwait
push
insb
push
es
xor
sbb
ljmp
insb
movsl
push
sbb
test
ja
lret
insb
iret
sub
clc
out
or
cmp
and
dec
fsts
mov
in
clc
sub
xor
addl
cmp
shlb
mov
je
sarb
and
lock
jns
test
push
lea
xchg
and
pop
outsl
fisubrl
shrb
mov
mov
xchg
xor
lret
dec
outsb
and
mov
clts
cmp
outsl
insl
into
gs
and
cmp
pop
cmp
fildll
movsb
and
adc
test
js
adc
push
inc
mov
ret
mulb
cmpsb
sbb
frstor
and
push
fwait
xchg
xor
enter
insl
addb
jmp
movsl
push
inc
mov
cs
pop
xchg
out
or
shlb
mov
data16
jae
lret
push
jmp
xor
movl
mov
mov
les
mov
mov
dec
sar
pop
mov
cmpsl
aas
lods
push
gs
es
loope
sbb
jbe
jp
rorl
xchg
dec
ret
or
loopne
mov
fs
cld
dec
push
movsl
inc
jmp
popa
sbb
lods
aas
ljmp
out
add
scas
pop
cltd
add
push
push
ficoml
lea
es
push
mov
fwait
and
outsl
je
aaa
push
fsubrp
mov
mov
inc
cmp
mov
std
dec
mov
pop
cmp
mov
insb
leave
loope
addr16
outsb
daa
fnstsw
push
sub
call
mov
add
sub
and
jo
fmuls
sub
fiaddl
mov
sub
mov
dec
mov
les
jge
mov
lret
sbb
repnz
mov
addb
push
adc
push
mov
sbb
pop
and
jg
push
aad
fidivrs
addr16
std
add
dec
and
pop
sub
inc
xlat
jno
pusha
flds
add
fnstcw
inc
nop
ds
inc
xor
ret
mov
pop
sbbl
ljmp
mov
pushf
sti
add
push
das
xlat
xchg
movsb
xchg
int
push
fistl
xchg
movsl
push
mov
cmpsb
jb
out
scas
adc
inc
mov
cmp
inc
fisttps
adc
push
out
in
push
pop
ret
xchg
lcall
mov
or
push
add
dec
pop
popf
cmp
or
pop
cmp
insb
bound
xor
daa
xchg
mov
xor
repnz
jl
ret
add
std
cwtl
je
mov
stc
cmpl
hlt
xchg
sub
mov
mov
sbb
mov
les
mov
insb
xor
call
rorb
ficoms
xchg
scas
adc
fcompl
or
lahf
inc
ret
xor
repz
fmul
data16
ss
sbb
sbb
popf
push
sub
sub
cmp
xor
push
sub
and
mov
lret
cmpsl
in
sub
xlat
push
inc
mov
and
outsb
cwtl
into
aam
sub
fcoms
dec
mov
loop
pop
push
mov
ret
pop
mov
and
xchg
cmpsb
orl
inc
pushw
lahf
and
js
push
pop
mov
mov
or
sbbb
aad
jo
jge
cmc
add
mov
push
adc
push
data16
lods
dec
pop
int3
lods
cmp
inc
xchg
mov
scas
cmp
ret
mov
jnp
js
sahf
lds
lods
mov
or
lret
mov
push
mov
sti
cmpb
outsb
and
enter
jmp
dec
dec
in
add
mov
test
imul
sahf
sarl
mov
in
mov
mov
mov
test
push
into
adc
cwtl
dec
notb
jle
rcrb
inc
popa
js
jmp
push
or
lea
sub
push
aaa
out
ja
inc
iret
fcmove
pop
mov
mov
mov
push
pandn
pop
lcall
push
adc
inc
xor
pop
out
lret
cmp
ret
sahf
fsubrs
sub
icebp
fwait
dec
xchg
dec
jb
sbb
gs
xchg
sub
pop
dec
in
pop
pushf
pop
mov
mov
pop
xor
dec
sub
rorl
fdivrl
or
and
pushf
fcmovbe
out
loope
mov
add
mov
mov
fstpt
xor
sub
orb
jecxz
mov
pop
dec
mov
fwait
xor
ficoml
jge
inc
cmp
mov
in
adc
inc
loopne
mov
out
popa
call
cmc
jo
cmc
dec
or
cmc
add
or
or
cmc
mov
mov
lcall
xchg
mov
mov
mov
mov
cmp
int
push
sbb
inc
pop
or
jecxz
sub
cmp
int3
rol
or
mov
and
das
enter
xor
xchg
inc
arpl
cmp
add
sbb
jecxz
dec
mov
int
sbb
adc
stc
mov
enter
outsl
pop
scas
ret
mov
sbb
out
sbb
inc
jo
pop
rorl
mov
stos
inc
cmp
push
jb
cltd
je
or
jmp
xchg
jp
shll
mov
popf
ficompl
int3
in
inc
dec
in
lock
push
scas
out
stos
mov
hlt
mov
ja
insb
sub
fistl
sahf
adc
sahf
shlb
shll
sub
roll
sti
popf
incl
fimull
fstpt
pop
cmp
mov
test
dec
in
push
mov
push
jle
or
es
insl
lahf
cmp
xchg
lea
repz
mov
js
adc
push
mov
frstor
and
lret
mov
repz
inc
jnp
jge
push
adc
insl
in
mull
and
jne
sbb
and
push
repnz
mov
mov
sub
add
sub
fmuls
mov
js
icebp
aad
adc
les
shll
sub
jb
mov
rolb
add
test
lea
std
pop
sahf
pop
xchg
test
je
dec
int
mov
lcall
lret
mov
sarb
dec
idivb
push
sbb
add
mov
add
cmp
sub
jne
lret
lret
fwait
test
mov
loop
push
lds
xchg
lcall
int3
jp
subl
jl
and
xchg
add
push
ss
call
bound
insl
jl
in
imul
jle
mov
mov
sbb
pushw
cmp
ljmp
sub
aas
aad
mov
mov
iret
sbb
in
rclb
cmp
push
daa
jnp
rcl
shrl
lock
pusha
cmpl
les
mov
jl
cmpl
mov
hlt
clc
lcall
notb
fildll
xlat
dec
fnstsw
xchg
je
xlat
sbb
mov
or
adc
movsl
xlat
mov
ret
out
in
pop
and
out
xor
psllq
ficomps
or
idiv
in
xor
mov
das
push
enter
test
dec
xchg
inc
mov
jl
xchg
movsl
sub
mov
sbb
pop
sti
dec
ret
push
aaa
adc
sahf
loope
lcall
sti
cs
add
ret
pop
pop
push
incb
xchg
inc
rol
stc
lods
fdivs
scas
insl
mov
orb
or
pop
pop
xor
fcmovne
xchg
xchg
insb
or
aas
divb
jge
mov
das
adc
in
movsl
add
or
xchg
jp
fnstsw
add
xchg
testl
and
push
mov
loopne
std
push
pop
cmc
cmpsb
shll
add
je
clc
imul
sbb
inc
ja
pop
pop
pop
sbb
mov
mov
out
loopne
sbb
lahf
lcall
and
xlat
mov
jle
scas
dec
mov
or
scas
pop
dec
stos
xchg
lret
pop
mov
dec
jno
add
sub
outsb
insl
xchg
push
xchg
movsbl
push
inc
inc
mov
scas
into
push
push
cmpsl
mov
fcoml
lcall
inc
js
fiadds
ljmp
mov
pop
push
push
mov
inc
pop
or
push
loop
scas
movsb
flds
dec
lods
fwait
add
inc
sbb
out
pop
outsb
or
and
mov
adc
scas
mov
scas
cmp
lods
pop
pop
call
and
add
ret
sbb
jbe
add
xlat
aaa
out
jecxz
lods
aad
push
sbb
dec
pop
sub
mov
xlat
clc
cmc
inc
or
xor
adc
addr16
insl
dec
and
outsb
sahf
movsb
not
sub
push
mov
popa
add
ja
cmpsb
push
jge,pn
sbb
jl
push
push
ret
xor
add
pushf
lock
loopne
pop
and
mov
push
pop
sbb
adc
xchg
push
mov
jg
ficompl
push
mov
lods
loope
mov
mov
mov
mov
xchg
jmp
int
ljmp
mov
cwtl
test
leave
imul
dec
xlat
adc
xchg
push
mov
mov
push
mov
mov
andl
or
push
fistl
cmpsl
push
in
es
nop
ret
push
jae
mov
jmp
dec
sub
bound
in
in
xchg
push
pop
test
jne
test
jl
ss
in
fists
inc
std
sub
pop
out
popa
jge
adc
jecxz
mov
bound
jo
add
push
nop
int
adc
add
push
or
sub
mov
inc
push
mov
pop
aaa
iret
dec
jp
add
or
aam
cmpsl
lahf
outsl
xchg
dec
in
push
adc
es
call
imul
sbb
fstp
sarb
and
mov
pop
mov
aaa
xor
sbb
jl
mov
add
push
mov
fwait
and
adc
or
add
ret
mov
add
mov
mov
addb
sbb
add
outsb
lods
add
leave
rclb
add
sub
sub
test
or
push
sbb
fbstp
nop
imul
int3
mov
lds
inc
arpl
fsubs
addr16
cli
sahf
sahf
out
das
lret
fs
mov
xor
dec
xchg
ret
enter
rcll
cli
out
in
mov
pop
bound
cmpl
mov
test
adc
clc
push
mov
or
cli
sti
mov
mov
or
std
cmp
loop
into
push
inc
pop
fidivrs
mov
repz
adc
cld
cwtl
imul
arpl
sti
sbb
mov
int3
mov
lock
dec
dec
ficoms
aas
enter
lret
adc
jmp
int3
inc
ljmp
jmp
pop
mov
sub
adc
and
loope
or
divl
movsb
pop
xor
jo
mov
cwtl
jns
or
out
gs
in
mov
stos
idivl
fistl
loop
div
arpl
mov
stos
test
xchg
and
mov
xor
inc
mov
sub
xchg
aaa
stos
add
xor
scas
sbb
sbb
sbb
loop
push
xor
mov
pop
push
lret
ret
mov
push
movsl
daa
sti
sbb
inc
hlt
out
cmpsl
and
es
data16
movsl
mov
adc
dec
popa
in
aaa
test
and
and
lods
jne
mov
sub
popa
jnp
pop
sbb
add
pop
jmp
jg
bswap
repnz
and
popa
dec
mov
clc
sbb
adc
imul
cmp
loope
fildll
sub
lea
inc
xor
inc
mov
fs
inc
push
dec
pop
mov
or
inc
mov
xor
mov
in
inc
xchg
jp
mov
stc
ljmp
call
pop
jge
in
imul
sbb
mov
mov
jle
insl
std
testl
cmpsb
dec
les
in
in
xchg
jne
push
sahf
iret
and
lods
mov
push
inc
test
sbb
idivl
mov
jmp
and
rorb
add
push
push
push
sarb
pushf
xchg
stc
loopne
adcl
or
cmp
clc
fucomip
stc
xor
cmpsb
movsb
movsb
pop
cmc
sub
hlt
add
lods
mov
mov
xor
lcall
stc
cmpsb
ljmp
fucomip
xchg
add
pop
je
stc
dec
mov
mov
out
or
shll
dec
mov
pop
aad
lock
hlt
ja
pushf
xchg
push
andb
notl
mov
sbb
cmpsb
pop
lcall
lea
je
insb
mov
into
jle
cmpsl
sub
lds
mov
adc
loope
loopne
lea
xchg
lods
sub
lahf
sub
push
adc
lds
xchg
sub
xchg
lds
clc
ss
and
inc
and
mov
cwtl
and
cmp
mov
mov
cmp
jmp
leave
divb
outsl
ljmp
fwait
ss
stc
xor
pop
inc
lods
push
mov
jp
adc
mov
test
aam
and
enter
inc
pop
shll
xor
cs
aaa
inc
fsincos
jl
cmc
jne
popf
xor
xchg
into
out
iret
popf
cmp
mov
aaa
ret
mov
test
js
jns
rclb
lock
mov
xchg
adc
aam
fildll
insb
pop
popf
jmp
push
popa
or
xor
movnti
sbb
push
cmp
test
in
cli
leave
mov
sub
cmp
inc
sub
imul
or
rcrl
pop
icebp
data16
sbb
pop
add
popa
data16
cs
leave
xchg
pop
jmp
xor
jno
push
mov
xchg
xor
inc
push
nop
popa
jnp
xchg
xchg
xchg
in
or
sbb
imul
movaps
je
xchg
js
inc
ja
insl
push
jb
into
ret
dec
insb
mov
push
lods
cmp
jg
js
aad
test
dec
sti
aaa
lods
insb
jecxz
iret
leave
addr16
ss
cmp
divb
or
pop
fidivl
or
dec
cmp
clc
int
fisubrl
pop
and
insb
in
lret
shlb
sub
cmp
jmp
scas
outsl
mov
pop
test
inc
sub
mov
fsubrs
xchg
out
popf
iret
popf
add
mov
divb
xor
stc
rorb
mov
data16
pushf
pop
jns
enter
pop
fistpll
test
cs
sub
mov
add
sbb
ror
loopne
inc
push
cmpb
mov
xchg
lods
pop
add
lds
outsl
or
pop
gs
push
lea
inc
cmp
loope
cmp
mov
loop
push
decl
in
xor
and
inc
jge
xchg
mov
outsl
jmp
cmp
add
mov
out
fidivl
add
jo
fdivl
clc
outsb
and
cmpsb
sub
arpl
sub
mov
jns
call
xchg
sub
push
sub
movsb
mov
stos
das
adc
jnp
aam
mov
sub
popl
add
or
lds
fnstsw
lret
out
js
pushf
cmp
push
andb
shrl
jecxz
nop
mov
adc
shlb
in
aam
divb
mov
lahf
cmc
jg
pop
fnstsw
lea
jmp
pop
gs
xor
inc
add
inc
add
aas
fists
xorl
test
insb
mov
or
lock
fdivrs
test
mov
jo
mov
test
test
jp
xchg
fwait
pop
and
fs
pushl
xbegin
dec
push
inc
mov
sub
pop
add
cmpsl
lahf
test
jb
add
in
sbb
out
sub
and
das
test
push
repz
or
pushf
push
in
int3
ljmp
mov
ficoms
lock
mov
pop
and
lcall
or
jae
outsb
dec
insb
and
aad
mov
test
xor
jbe
mov
inc
jb
sbb
lret
jmp
push
fbstp
jae
aad
dec
jno
mov
fwait
in
push
sub
dec
mov
mov
sub
mov
lods
je
pop
push
imul
xchg
pop
push
outsb
mov
fcomps
cs
or
push
mov
cmpsb
lahf
inc
cmpsb
xor
push
or
jmp
fstp
mov
iret
cmp
rorl
cwtl
lahf
test
outsb
cmpsb
sbb
rol
je
ss
pop
xchg
mov
int
bnd
lea
pop
or
add
repz
jge
iret
movsl
mov
shlb
xchg
neg
and
push
dec
dec
icebp
xchg
adc
loop
xchg
mov
inc
pop
stos
xchg
stc
leave
mov
xor
or
fildll
lret
nop
es
dec
pop
sub
stos
int
rol
xlat
addr16
pop
mov
push
xchg
pop
dec
add
out
aad
sbb
sub
sub
sub
xchg
gs
lock
inc
pusha
mov
sbb
pop
xchg
shr
or
mov
notb
fucomip
mov
jg
add
es
mov
ds
sub
je
decl
sub
xchg
and
ss
mov
mov
jp
pop
clc
mov
push
int
dec
or
jecxz
pop
mov
iret
dec
test
mov
sbb
mov
add
xchg
xchg
add
das
xor
loope
sub
out
push
mov
js
or
and
lods
sbbl
in
fwait
sbb
dec
sbb
pop
pop
call
jb
stos
and
pop
aad
xor
cmpsl
nop
nop
sub
push
xor
popf
ficoml
sub
mov
fstpt
dec
xorl
mov
xor
icebp
imul
and
repnz
aad
jl
sbb
enter
lods
jno
cmp
fwait
add
sub
adc
not
or
pshufw
pop
fbld
fidivl
push
add
inc
cmpsb
popa
cld
add
aaa
cmp
and
mov
clc
jno
lock
js
mov
xchg
int
cmp
cld
or
shrb
les
daa
mov
clc
sbb
jne
add
push
push
and
sub
mov
inc
jge
and
mov
gs
xchg
divb
shlb
pusha
fiadds
cld
mov
fcmovnb
loope
xor
scas
addr16
lret
fmull
iret
mov
aas
inc
stos
xor
movsl
insb
mov
mov
fbstp
push
sbb
repnz
fcoms
cld
sub
adcl
xchg
outsb
xor
out
ja
sub
pop
shl
repnz
or
xor
dec
add
sub
xor
dec
loope
mov
mov
sarb
add
cs
lock
cwtl
leave
aam
pop
call
repnz
int3
cmp
push
xchg
push
cmp
xor
push
inc
outsl
into
fiadds
stos
pop
pop
lods
mov
pop
inc
mov
xlat
repz
pop
sbb
lret
pop
test
shll
push
fiadds
inc
mov
cli
push
dec
adc
pop
jns
movsb
cmp
jo
add
sub
ljmp
xchg
pop
out
mov
adc
xor
ljmp
push
adc
sub
jl
sbb
jle
rcll
jecxz
adc
cmpsl
out
ret
sarb
pop
mov
stos
xlat
xchg
clc
enter
push
fcmovnb
jp
arpl
cmp
popa
out
les
xchg
sbb
fxch
jecxz
xchg
je
enter
pushf
dec
mov
xchg
dec
and
cmp
rolb
out
lcall
dec
lock
out
je
std
mov
inc
cwtl
scas
sbb
dec
pop
fdiv
xchg
stos
sbb
inc
in
ds
imul
js
cs
jnp
int
roll
adc
push
int
addr16
sub
out
and
rcr
rol
inc
in
fldt
jecxz
or
mov
jne
jl
sub
cmp
jbe
jg
push
scas
insl
lods
ficoms
enter
scas
and
cld
cmp
add
cltd
scas
sbbl
add
jmp
or
add
add
push
lods
cmpsl
fnsetpm(287
jbe
lcall
inc
bound
cli
stc
test
test
scas
sub
jbe
sbb
cwtl
jl
es
lret
cmp
jae
or
pop
in
pop
repnz
xor
inc
cltd
push
outsl
loop
mov
pop
and
sarl
leave
outsb
aad
mov
test
mov
out
aad
loope
lods
xchg
xchg
cmpsb
imul
xchg
jge
pop
inc
mov
pop
mov
xor
cmp
pop
sbb
mov
add
cld
push
dec
movb
dec
es
les
je
aas
or
inc
mov
jmp
dec
movsl
out
fs
imul
cmp
rcrb
cmpsl
adc
cmpsl
or
mov
popf
sbb
pop
push
dec
pop
pop
cli
sahf
pushf
push
lods
push
sahf
cmp
int
gs
lret
push
stos
pushf
mov
addr16
mov
xor
sbb
out
ret
pushf
add
mov
mov
or
in
or
insl
inc
mov
mov
dec
cmpsb
fisubrl
and
add
jb
movl
cli
mov
or
sbb
lahf
cmpsl
mov
xchg
and
xchg
inc
imul
loope
fwait
and
bound
push
fisttpll
outsl
adc
cmp
pop
mov
and
push
shr
mov
lcall
out
iret
and
test
test
sub
mov
shl
mov
int3
movsb
dec
sbb
cmp
mov
imul
out
cwtl
aaa
push
test
push
movsl
mov
mov
lock
sbb
daa
shrb
dec
sbb
inc
mov
cmp
stos
notl
xchg
adc
pushf
mov
aaa
loopne
movsb
jb
inc
push
lret
mov
mov
addb
adc
mov
lods
aam
pusha
es
cmp
or
lods
fisttpll
sbb
push
ljmp
popa
loop
clc
mov
fcomip
loope
jns
cmc
adc
mov
mov
aas
mov
inc
lods
jno
mov
pop
dec
call
in
mov
shlb
add
sbb
addb
pop
gs
out
cmp
mov
mov
repnz
stos
ljmp
out
push
adc
jne
jmp
push
fsubrp
inc
cmp
sub
jle
pop
pushf
sub
or
in
es
cltd
inc
pop
in
push
adc
and
sub
aas
add
push
lret
jl
sbb
cltd
gs
adc
pop
fwait
dec
out
scas
loop
lahf
in
ss
outsl
push
iret
dec
fdivs
xchg
push
dec
or
inc
xor
sbb
jno
dec
add
daa
mov
out
lcall
xchg
fisttpll
mov
jg
cmp
mov
js
xor
clc
and
pop
pop
inc
push
mov
insb
shlb
jmp
sbb
cmp
shld
test
fiadds
fsts
fdivl
mov
and
ret
jns
std
ja
fadds
dec
xchg
stos
int3
jp,pn
decl
jne
xchg
mov
adc
pusha
fwait
dec
push
nop
cmp
lock
fs
jp
push
add
cld
or
cmp
out
mov
push
mov
xor
pusha
push
loop
pop
xchg
negl
mov
repnz
pop
pop
insertq
jns
pop
fists
mov
iret
out
ret
sbb
jne
xchg
sbb
xchg
adc
pop
les
icebp
sub
xorb
pop
adc
push
pop
stc
xchg
shrl
sti
mov
jnp
fst
push
mov
sti
adc
cmpsl
mov
pop
in
mov
xchg
and
neg
or
pop
out
cmp
loop
sahf
push
ret
mov
popf
leave
test
js
fdivrl
push
in
shrl
enter
pop
into
stos
ja
stc
loop
adc
lret
pop
dec
push
nop
sti
adc
push
rcr
inc
cwtl
push
inc
out
fsubrs
mov
xchg
and
sbb
aad
mov
cltd
fsubrp
mov
in
jae
cmp
push
into
jge
jp
jg
fiadds
mov
and
sbb
sub
mov
cmpsb
xchg
lret
enter
filds
cltd
sbb
stos
jg
fwait
cmpsb
outsb
xlat
jl
xchg
data16
cmp
bound
pop
in
nop
adc
lret
cli
test
pusha
test
ret
fsts
and
push
inc
dec
loop
mov
addl
movb
in
or
test
clc
jae,pt
jp
jle
fstp
pop
aam
stos
xchg
es
sbb
sbb
pcmpgtd
xchg
sbb
or
jl
pop
fdivr
pop
stos
inc
stos
imul
imul
test
sbb
jg
mov
mov
pop
dec
fistpll
pusha
hlt
cmp
and
cmp
inc
mov
pop
cmp
adc
lods
mov
addr16
rolb
xchg
xchg
cmp
ret
adc
leave
mov
mov
cmpsl
cli
pop
insl
pop
dec
test
outsl
cmp
add
mov
and
lea
cmp
in
cmp
push
jmp
sarl
movsb
sarl
push
aas
stos
xor
shlb
inc
jg
inc
ljmp
jmp
mov
push
sbb
or
test
lcall
mov
or
lods
sub
lds
mov
inc
movsl
enter
xor
pop
aad
outsb
inc
add
in
cmp
jecxz
inc
mov
shlb
arpl
dec
mov
sub
inc
mov
fcompl
dec
rcr
popf
jmp
sbb
pop
pop
call
pop
dec
mov
arpl
xchg
push
leave
addr16
push
push
inc
xchg
cmp
clc
cmp
sub
nop
lcall
test
das
dec
pop
popf
sar
nop
inc
xchg
movsl
or
pop
rorl
pop
jle
ljmp
push
add
sbb
sub
cltd
fstpl
xor
ss
std
xchg
loope
sub
sbb
test
sub
push
add
mov
xchg
adc
ret
pop
gs
in
sbb
dec
cmpsb
mov
jg
shrb
dec
out
das
movsb
or
cmp
mov
pop
idivb
stc
and
popf
sub
movsl
setb
pop
push
pop
repz
push
xor
sub
pop
lods
sub
js
adc
test
fs
add
call
in
xchg
jb
jp
or
jl
aam
or
ret
cmp
push
mov
loop
notb
or
imul
mov
sbb
outsb
insl
inc
popf
inc
ja
int3
xchg
cmp
sub
cmpsb
ds
lock
jnp
jmp
jl
dec
mov
mov
cmp
outsl
shr
ret
daa
dec
data16
adc
inc
inc
nop
cmp
loop
pop
into
icebp
mov
call
push
sub
mov
push
sub
leave
fldcw
out
mov
stc
xchg
leave
loopne
mov
lods
fmuls
mov
mov
push
aaa
call
or
fmull
adc
sub
sub
or
lods
or
dec
mov
and
mov
outsb
aam
test
adcl
sub
outsb
aaa
inc
insb
lcall
inc
add
add
ds
cmp
lret
add
lret
and
jl
dec
pop
adc
in
jge
call
xlat
xchg
out
or
sub
push
lret
in
aam
xchg
pushf
loope
xlat
mov
or
loope
add
lcall
movups
sbb
jo
das
adc
adc
lcall
cmp
outsl
leave
cmp
movsw
testb
mov
cmpsl
fistpll
ret
movsl
enter
call
push
mov
cmp
mov
pop
call
xchg
imul
sahf
test
fisubrl
lret
push
fdivrs
cmc
and
repnz
aad
in
or
mov
adcb
rcr
mov
cmp
call
push
lods
or
mov
and
lds
mov
dec
mov
outsb
repnz
lea
sub
mov
pop
aam
test
adc
cmp
int3
xor
xchg
pop
or
cmp
mov
scas
call
inc
pop
and
aaa
sbb
es
xchg
push
mov
ret
and
clc
add
aam
adc
pop
fisttps
sub
push
fdivs
std
scas
sbb
test
addr16
js
or
xor
add
push
pop
cmp
arpl
jg
cld
sub
popf
pop
mov
inc
push
mov
movsb
movsb
repz
int3
xchg
das
xchg
shlb
in
stos
in
mov
adc
xor
popf
jmp
aam
dec
add
jae
addr16
dec
repz
jo
int3
pop
xor
sti
cmp
or
vpsrld
or
ret
push
sbb
dec
pop
jnp
cmp
popl
stos
xchg
jle
fstpl
decl
push
cmpsb
data16
pop
shlb
outsl
inc
push
rorl
or
jo
aad
imul
outsl
add
add
inc
enter
mov
lret
adc
je
add
cli
sbb
lret
iret
add
outsl
ds
frstor
xchg
nop
fstl
insb
mov
popa
cli
xchg
push
cltd
pop
lods
add
cmpsl
int
mov
bsf
add
test
push
test
cmc
rorl
jg
mov
xor
pop
push
lds
loop
sbb
jns
xchg
addr16
mov
mov
cltd
mov
jp
js
xor
xlat
fs
and
xchg
mov
dec
lret
lret
push
cmc
mov
push
inc
or
sbb
ficompl
sbb
insb
xchg
scas
adc
jb
sub
cltd
sbb
push
sub
mov
xchg
jmp
jb
ja
sub
cmp
cmp
and
test
nop
mov
lahf
cmp
fisttpl
inc
sbb
jae
repnz
stos
scas
cmp
fnsave
mov
test
jmp
inc
sbb
aas
testl
mov
push
mov
xchg
or
into
xor
test
mov
clc
cmp
fists
loop
mov
lods
jge
xchg
mov
and
or
mov
jp
sub
and
and
push
jecxz
jbe
sbb
aad
aaa
cmp
jle
cmp
imul
rcrb
test
mov
adc
add
mov
mov
scas
inc
pop
insl
fisttps
mov
xchg
ds
sbb
test
call
lock
jle
js
dec
xchg
and
push
xchg
jg
or
jns
decl
orl
imul
mov
fsubrs
rclb
adc
sti
pushf
xor
push
adc
out
sub
cwtl
or
xchg
addr16
push
xchg
lret
pop
mov
and
add
mov
jo
insl
cmp
cs
orb
jns
scas
pusha
adc
sbb
test
repz
test
dec
outsb
cmp
dec
and
push
jnp
dec
and
xchg
lcall
add
mov
xor
dec
dec
push
xchg
add
jle
jmp
outsl
push
cmpsb
out
xchg
sub
dec
push
xorb
aad
dec
int3
mov
test
into
aas
mov
mov
sbb
aaa
xchg
mov
mov
xor
das
cltd
add
mov
icebp
jmp
je
mov
shll
in
ljmp
or
lret
add
test
mov
gs
xchg
jno
or
sbb
mov
sarl
shrb
iret
xor
push
repnz
xor
addr16
cmp
aad
sub
testl
xlat
mov
sbb
repnz
or
xchg
shr
xchg
pop
frstor
xorb
xchg
pushf
xor
rcl
addb
jecxz
gs
popa
xchg
rcrb
xorb
mov
sbb
dec
mov
dec
nop
mov
cmp
dec
sub
mov
cmp
add
das
ds
rcrl
cmp
adc
adc
push
int3
packsswb
mov
sarl
fisubl
jecxz
push
xchg
mov
int
push
mov
inc
incb
cwtl
mov
mov
push
mov
sub
imulb
mov
cmpsl
ret
sbb
lret
mov
sub
mov
lds
scas
popl
fimull
xor
jo
jbe
cld
push
jae
clc
adc
xor
loopne
xchg
xor
popa
mov
das
out
sub
sub
out
mov
inc
test
popf
test
push
xor
lds
lods
mov
jnp
aam
test
aaa
xor
loopne
xchg
mov
sbb
adc
popf
in
cmp
out
cmp
pop
outsl
sub
push
repnz
push
xor
jle
out
lret
pop
lahf
mov
push
push
enter
sbb
jae
jnp
lret
sub
popa
shld
shr
sbb
gs
push
movsl
push
inc
ret
add
jbe
pop
mov
aad
test
negb
pop
inc
stos
mov
push
out
cmp
jp
jp
mov
jae
pop
imul
jl
xchg
movl
dec
lret
mov
lea
in
mov
xlat
in
not
fiadds
into
mov
lcall
or
pop
ret
hlt
dec
in
popa
stos
adc
dec
pop
pusha
xchg
outsb
cmc
ret
aad
pop
xchg
lods
inc
xchg
xchg
das
cltd
getsec
lock
flds
int
insl
notb
dec
mov
addl
pop
mov
inc
lcall
adc
insl
pop
mov
divl
sbb
cmc
lea
call
dec
xchg
into
cmp
mov
shr
or
jbe
jbe
inc
ret
repnz
pop
cmp
xchg
sbb
pop
sub
xor
jo
ret
les
int3
xchg
sbb
mov
test
push
push
scas
ss
cmp
mov
dec
aad
dec
inc
xor
test
adc
lods
imul
cltd
mov
idivl
in
fmulp
rorb
xchg
dec
mov
lock
mov
mov
dec
insl
clc
orl
lret
addr16
mov
lret
push
ret
pop
sub
repz
enter
xchg
add
cs
fidivrl
out
adc
xor
aad
fildll
or
mov
cld
pop
hlt
lret
sbb
xor
jo
mov
sbb
fucomi
jne
loop
xor
daa
push
jno
ljmp
dec
cmp
les
repnz
fwait
and
adc
out
sub
mov
nop
jle
inc
and
jecxz
add
dec
cmp
lahf
repnz
xchg
es
std
in
add
out
jecxz
adc
loop
jg
pop
push
scas
sbb
sub
roll
ds
add
adc
push
dec
ja
push
iret
test
and
xor
std
cmp
test
ret
sub
jmp
push
insl
lahf
inc
xor
fs
xor
xor
loope
mov
add
push
sbb
sub
inc
es
ljmp
xchg
push
xlat
stos
pop
aaa
dec
scas
pusha
dec
xchg
inc
daa
ret
mov
sbb
inc
dec
xor
or
mov
aad
je
sub
adc
mov
arpl
mov
sahf
jecxz
je
hlt
mov
inc
xlat
imul
js
das
mov
adc
inc
jp
bound
push
cli
mov
mov
dec
adc
mov
xchg
js
scas
xor
sti
outsb
fcmovb
idivl
or
push
adc
mov
sbb
cmp
and
xor
dec
pushf
shl
sub
sub
jne
mov
mov
jne
xrelease
sub
stc
add
cli
xchg
inc
xor
lahf
les
cmp
out
fsub
aam
jle
dec
fwait
sbb
xchg
adc
jecxz
mov
sub
adc
cltd
inc
ja
bound
sbb
jle,pn
add
cmp
out
cltd
pop
test
enter
xor
addr16
dec
das
pop
dec
test
das
in
into
cmc
cmovge
mov
mov
loopne
addb
jmp
mov
loopne
sbbb
mov
loope
inc
shr
insl
daa
lock
gs
ds
xchg
add
inc
mov
lods
repnz
pop
push
aad
pop
in
add
shll
push
insl
div
lods
add
ja
bnd
sbb
enter
test
mov
fs
mov
imul
shl
sarl
dec
cmp
fnstcw
jmp
mov
xlat
mov
jmp
pop
lcall
data16
in
push
dec
add
pop
xchg
out
test
or
and
std
inc
mov
push
mov
addb
mov
sub
sub
lds
dec
xor
mov
mov
xchg
jae
push
scas
push
mov
rol
fwait
mov
inc
aad
int3
mov
push
pop
or
sti
ret
test
push
cs
sbb
adc
iret
dec
imull
mov
add
loopne
loope
ret
cld
sbb
imul
mov
and
mov
pop
dec
xchg
and
mov
scas
mov
test
movsb
iret
test
mov
ss
out
lock
ja
or
adc
pop
and
push
je
cmpb
adc
dec
sbb
ret
fdiv
mov
fdivl
or
add
jb
aam
imul
push
nop
pop
jne
stc
and
test
push
push
jo
xor
pop
cltd
sbb
popa
fidivs
ds
or
pushf
out
mov
je
jle
add
insl
jge
aam
bound
cmp
data16
cmpl
xchg
jmp
mov
imul
shrl
aaa
cmp
cmp
cmp
add
pop
lods
gs
pop
in
dec
lcall
xor
int3
or
mov
repnz
mov
push
lret
in
cld
cld
pop
shlb
lcall
sub
lcall
popf
cmpsl
movsl
push
sti
std
inc
jmp
pop
ljmp
lock
pop
add
mov
push
pop
jg
and
loope
inc
jb
or
iret
leave
clc
vmwrite
jo
cmp
adc
aam
out
fcmovu
dec
out
sbb
cltd
jl
fcomps
arpl
stos
xor
in
mov
pop
sbb
or
in
hlt
mov
nop
xlat
jmp
inc
insl
fistpll
loope
nop
ret
adcl
testb
inc
dec
xor
fldcw
out
std
dec
ror
hlt
or
arpl
jmp
shll
mov
xor
mov
add
aas
jns
add
inc
ss
sub
dec
jns
insl
popa
hlt
mov
aaa
call
push
cli
addr16
cld
loopne
fnstsw
push
jle
int
xchg
aad
or
gs
mov
lcall
jg
inc
add
add
es
pop
push
and
inc
loopne
adc
in
mov
sbb
popa
repz
push
icebp
mov
adc
and
sbb
test
pop
xor
into
cs
sahf
mov
fists
sbb
mov
mov
gs
push
fstl
cmpsb
dec
adc
mov
mov
fnstenv
sbb
inc
xor
mov
shll
xor
mov
cmp
mov
add
aaa
stos
adc
cwtl
adc
aad
fdivl
and
mov
mov
lcall
dec
or
imul
insb
sbb
xor
push
jg
add
and
es
pop
mov
and
cmp
sub
aaa
mov
jb
push
jle
inc
sbb
js
aaa
mov
jne
or
xor
and
addr16
push
insl
mov
xchg
adc
sbb
adc
lea
lods
out
sbb
cli
ss
fsts
mov
fidivl
adc
cmp
lahf
xchg
aaa
mov
notb
mov
push
xor
insl
cmc
cld
jg
and
xchg
lea
cmp
cmpsb
xor
mov
push
jecxz
outsb
jne
jl
ja
xchg
lock
mov
xchg
dec
mov
sti
jno
lea
push
push
repz
sub
in
dec
jnp
cmc
pop
add
adc
movsb
mov
sub
xor
test
sbb
pop
push
xchg
imul
nop
cmp
jecxz
mov
and
xorl
ret
in
pop
pop
mov
push
adc
popf
push
dec
icebp
dec
xor
push
scas
push
jp
out
jmp
jne
pop
adc
js
cli
sub
imulb
add
sahf
adc
push
jne
mov
mov
adc
mov
cmp
cmp
ss
sub
mov
into
aas
fiaddl
mov
in
pop
jle
add
mov
mov
xchg
fiadds
cs
mov
inc
call
mov
roll
test
pop
sbb
jle
ret
sub
dec
out
popf
lcall
xlat
idivb
inc
mov
xchg
mov
or
inc
dec
pop
xchg
leave
into
mov
jle
jge
call
test
lock
addl
or
into
fisttpl
fnsave
les
sub
lcall
outsb
add
push
mov
lahf
adc
repz
rcr
sub
push
and
xchg
enter
pop
lahf
sub
insl
cmp
jecxz
test
int3
push
int
or
sahf
xor
mov
jae
insl
jnp
mov
jnp
shl
scas
xchg
and
mov
popa
lds
cmp
xchg
bound
in
cmc
adc
popa
hlt
or
xchg
mov
dec
adc
inc
cltd
repnz
cltd
les
aad
ret
dec
push
mov
or
jns
add
xchg
mov
inc
xchg
cs
outsl
mov
sbb
jl
or
pop
push
mov
mov
inc
cli
sahf
sti
daa
xorl
dec
movsl
in
enter
xor
sbb
or
pop
mov
add
lods
and
mov
setns
pop
out
pop
or
addb
aam
pop
xchg
xor
xchg
mov
je
push
rcrl
cmp
mov
dec
xchg
push
pop
dec
adc
mov
mov
adc
push
xchg
out
ja
in
hlt
mov
insb
adc
sub
pop
aaa
add
lcall
sbb
sbb
in
sbb
rcll
js
js
sub
or
jo
ljmp
cmp
outsl
dec
push
adc
std
es
add
pusha
insb
dec
sub
and
lcall
inc
inc
clc
sti
jle
pop
cli
pusha
push
scas
mov
jge
pop
loopne
repnz
aaa
sub
imul
mov
mov
adc
push
sbb
dec
xchg
xchg
xchg
jns
jle
push
es
adc
das
cmpsl
fxsave
cmpsl
mov
mov
imul
out
adc
mov
shl
mov
scas
mov
int3
outsl
inc
ds
mov
daa
add
mov
push
pop
rorl
testb
mov
jle
hlt
mov
push
and
mov
fwait
popl
ja
mov
call
inc
add
xchg
inc
pop
inc
adcl
ljmp
mov
loopne
out
pop
add
cmp
lea
int3
shlb
dec
gs
fwait
and
fbld
cltd
dec
out
hlt
arpl
sub
ret
xorb
mov
sbb
jecxz
dec
push
xchg
fcoms
sbbl
dec
mov
pop
pop
lods
mov
sbb
stc
rol
jge
adc
out
shrl
or
inc
pop
sbb
push
xlat
xchg
pushf
shlb
inc
mov
push
pop
jl
rcl
mov
or
or
jle
jb
dec
cmp
mov
jg
aas
adc
call
cwtl
lea
and
jmp
xchg
jb
jae
outsl
scas
fdivr
jae
gs
fs
cwtl
js
xor
enter
in
cmp
mov
in
inc
jns
mov
lds
lcall
imul
je
sahf
in
cli
mov
outsb
lods
std
shl
mov
push
add
or
push
push
xchg
sbb
cmp
gs
fs
ljmp
stos
mov
fdivrl
notb
mov
jl
add
lds
test
add
xchg
pop
fdivrl
inc
jb
das
add
add
popf
and
movsl
pusha
je
lods
fwait
jge
or
mov
lock
clc
add
hlt
cmpb
rcll
sbb
fldl
lret
and
clc
es
leave
inc
sub
add
cmp
pushf
sbb
scas
scas
inc
xchg
pusha
dec
imul
xchg
sti
pop
in
dec
pop
scas
cmp
sahf
les
sbb
and
scas
sub
or
inc
pop
in
jno
inc
xchg
scas
add
and
or
iret
in
xchg
leave
pushf
cmpsl
cwtl
std
ret
xchg
sub
xchg
mov
mov
sbb
fldenv
cwtl
sbb
adc
cli
pop
xor
out
mov
divb
push
lret
aad
dec
jne
mov
xchg
insl
xor
filds
jmp
push
xchg
andb
call
ret
xchg
cmc
arpl
and
xor
repnz
jge
push
push
popf
roll
or
fisubrs
std
ss
push
adc
mov
scas
mov
insb
xchg
orl
sbb
cmc
or
arpl
mov
jge
fisttpll
mov
icebp
adc
jns
inc
fsubl
in
adcl
mov
stc
or
clc
cli
js
loop
test
aad
jnp
btc
pop
dec
xchg
call
popa
and
lods
cmpsb
stos
mov
adc
mov
testl
cmp
jle
jns
cli
cmp
dec
dec
insl
pop
out
jo
sbb
xchg
loopne
js
pop
jmp
jge
mov
xchg
sub
adc
shrb
add
push
xchg
stos
fiaddl
es
inc
xchg
jp
sahf
pop
mov
es
adc
jle
push
or
mov
jle
jl
add
jns
jno
mov
pop
xchg
fwait
adcb
xor
lods
js
leave
negl
jp
cwtl
outsl
mov
add
scas
mov
mov
push
maskmovq
adc
ficoms
rep
shr
leave
mov
jae
mov
sbb
pop
or
mov
mov
pop
sahf
mov
icebp
jp
sub
inc
cmp
lret
pop
ja
and
popa
adc
leave
cmp
adc
movsl
jp
lahf
pop
pusha
dec
xchg
clc
iret
sub
sub
ss
out
xchg
mov
gs
xor
stos
xor
add
cs
sbb
punpcklbw
dec
cmpsb
sbb
cmp
mov
lret
sub
cmpsl
sub
jne
stos
int3
cmpsb
xor
out
mov
mov
sar
shlb
and
jle
xorl
push
sbb
add
sub
and
imul
fcomps
test
xor
pop
jecxz
adc
cmp
jmp
and
out
sbb
shll
cwtl
sbb
mov
push
inc
lret
or
mull
xchg
xchg
pop
adc
dec
xchg
push
push
fisubl
aaa
sub
test
ret
push
fwait
lods
sahf
jo
notl
hlt
jbe
jg
arpl
ss
sub
mov
mov
lea
jno
jno
push
cmp
sbb
push
mov
mov
add
add
popf
xor
sbb
insl
outsb
mov
ljmp
sub
xor
jbe
adc
aad
mov
mov
or
ja
gs
sub
inc
test
stc
inc
and
shl
adcb
push
cli
or
add
xchg
mov
xlat
shlb
inc
and
sub
jmp
icebp
jl
cmp
sti
pop
inc
push
mulb
add
mov
jl
adc
scas
out
mov
jle
lods
sub
or
or
cli
mov
mov
or
adc
ds
and
mov
push
cwtl
mov
jl
jg
and
ja
mov
pop
cli
sub
fwait
std
sbb
push
pop
fidivl
cmp
lret
dec
pusha
mov
test
mov
sarl
dec
fcmovb
cld
cmpsb
cmc
inc
pop
add
push
mov
cmpsl
mov
xor
cmp
idivb
jmp
outsl
mov
or
inc
loopne
jp
push
xchg
repz
mov
mov
xchg
inc
jecxz
xor
mov
lret
pop
mov
ret
aam
pop
pop
fidivl
dec
call
das
jmp
sbb
jne
sub
adc
imulb
dec
adc
adc
sbb
cmpsl
and
inc
clc
xlat
andb
xor
arpl
xacquire
shrb
or
pop
ja
dec
lret
stos
xor
ss
sbb
push
gs
outsl
subb
stc
mov
data16
stc
sbb
xchg
mov
fstps
test
adc
data16
pop
lcall
shrl
dec
pop
push
stos
inc
call
mov
sbb
push
mov
fstl
stos
inc
add
cmp
iret
sbb
sub
subb
jns
mov
dec
pop
mov
mov
scas
add
or
adc
push
cmp
jns
hlt
inc
ret
xor
add
shlb
imul
fmuls
cmpsl
inc
ljmp
jbe
lret
mov
adc
in
cmpxchg
and
movsb
mov
add
in
jae
sub
xchg
sub
xchg
dec
mov
repnz
daa
jae
xchg
icebp
mov
or
sub
xchg
mov
test
or
mov
sub
or
ljmp
mov
push
jle
jge
pop
test
inc
loope
xchg
data16
stc
add
mov
pop
inc
push
aam
mov
js
lret
sub
mov
aas
movsb
add
shrb
and
jg
jnp
lret
pusha
jbe
jp
jno
subb
jmp
sbb
sti
jo
addb
out
or
xor
cmp
popf
push
out
xchg
or
das
rorb
dec
scas
stos
inc
push
and
subb
push
mov
in
lea
or
je
add
inc
mov
mov
mov
xor
mov
loope
pop
sub
std
jl
mov
add
cli
mov
adc
sar
inc
call
dec
mov
ljmp
fadd
mov
sahf
aad
cltd
push
cmp
pop
jns
or
scas
xchg
pop
fs
scas
aad
stos
or
loopne
xor
test
fnstsw
rorl
mov
mov
leave
pop
inc
cmp
nop
cwtl
cwtl
add
xor
dec
out
loop
mov
xor
mov
stc
add
or
mov
add
or
rcrb
pop
mov
enter
fidivrs
into
sbb
hlt
cmp
xchg
inc
pop
and
int3
push
or
ret
das
jg
xchg
adc
add
cmp
fsubrp
cmc
cmp
pop
pop
xor
aas
rorb
in
ja
movsl
outsl
jmp
adc
stos
mov
les
sbb
jle
fldl
sti
fcmovnb
mov
cli
mov
inc
test
cmpsl
xchg
sbb
push
xor
xchg
test
loop
popa
daa
jbe
roll
and
xchg
push
add
mov
inc
addr16
out
lret
mov
jge
and
mov
mov
inc
jmp
clc
cmp
in
sub
popl
mov
loope
adc
add
adcl
inc
mov
out
sub
pusha
xor
lret
les
ss
insb
push
dec
mov
popa
xor
pop
push
xor
mov
mov
insl
arpl
idivl
xor
aam
js
popf
repz
jg
adc
mov
ror
lods
loope
dec
add
test
je
pop
repnz
cmp
xchg
xchg
push
lods
mov
fs
add
out
push
push
lods
out
sti
in
inc
or
or
repnz
inc
pop
fwait
jle
mov
jns
lock
aam
push
fs
cmp
sub
add
mov
mov
mov
loope
inc
mov
adc
int3
pop
xchg
push
xchg
push
sub
lahf
sbbb
movsb
data16
jecxz
xchg
and
das
adc
ret
adc
cld
cmp
sub
jns
in
cmpsl
sub
rol
inc
pop
icebp
jne
xchg
imull
fistl
jp
andb
icebp
pop
fistps
inc
cmpl
cltd
insb
mov
test
xor
mov
cmpsb
sub
inc
stos
dec
aam
ja
push
pop
inc
push
daa
insb
test
sub
jo
orb
sbb
shl
xor
in
nopl
iret
and
mov
sub
loopne
jle
sahf
stos
pop
xchg
or
outsl
divb
jge
or
and
lcall
adc
hlt
push
addr16
jns
shll
xor
xchg
inc
cmc
into
xor
fiaddl
mov
xorb
pop
inc
fidivl
xor
mov
jae
xor
push
arpl
int
fmull
je
lret
pop
xor
fcoms
js
add
repnz
ss
fld
out
lcall
stos
or
xchg
call
mov
dec
push
orl
sahf
inc
inc
xchg
sub
mov
push
rolb
decl
or
dec
ljmp
add
daa
dec
in
lods
gs
cmpsb
xchg
mov
fs
dec
faddl
add
nop
or
rorb
or
push
fwait
sti
std
fsqrt
fs
inc
or
jae
pop
mov
sbb
push
repnz
orb
subb
push
sbb
push
cmp
cmp
mov
aaa
xchg
lds
pusha
imul
repz
ss
mov
push
in
and
mov
mov
pushl
xor
cmp
lea
lods
pop
xchg
in
test
mov
inc
mov
shll
das
or
aas
sbb
jp
repnz
mov
add
scas
bound
fmul
push
push
lcall
xor
mov
add
jae
test
ret
and
mov
jg
rcll
xchg
inc
dec
lret
sbb
and
sahf
xchg
jle
cmp
stc
int
orb
xchg
sti
mov
adc
adc
loope
dec
dec
into
sti
pop
and
ljmp
pushf
inc
neg
mov
fdivrp
aam
or
add
into
mov
scas
add
sbb
xor
xchg
push
add
jl
adc
xchg
inc
out
jns
mov
adc
jle
xor
insb
xor
pop
jae
outsb
and
mov
imul
dec
cmp
in
daa
pop
xchg
inc
leave
into
or
jl
stos
frstor
outsl
pop
lret
or
fcoms
call
mov
repnz
and
outsb
jb
int
or
mov
push
in
lds
or
pop
out
fxch
pop
test
inc
and
mov
in
xor
or
dec
test
repz
insl
xchg
mov
add
in
imul
xchg
into
dec
mov
adc
xchg
jmp
push
ret
test
xor
jb
push
andl
scas
lea
cmp
cld
jno
ljmp
insl
xchg
mov
lock
arpl
mov
cmp
outsl
pusha
in
lahf
xchg
adc
and
movsl
jg
fcmovnu
lea
leave
repz
cmpsl
cmp
test
pop
data16
mov
add
push
in
jns
std
jg
xchg
mov
data16
and
stos
sbb
shll
pop
mov
das
mov
jmp
cmp
adc
cmpb
xor
push
add
inc
addl
stc
jnp
xor
popf
stos
sbb
push
or
or
jnp
dec
pop
adc
and
mov
inc
jge
adc
push
adc
mov
nop
pop
subb
aaa
add
iret
mov
dec
xchg
cmp
cmp
movsl
mov
push
js
and
ljmp
mov
mov
mov
xor
sti
sbb
dec
add
cmp
cmc
mov
icebp
ljmp
pop
add
lods
pushf
daa
sub
lds
movsl
aam
adc
xor
fs
or
inc
xchg
arpl
loop
jb,pt
iret
aad
test
jne
testl
ljmp
mov
ss
jnp
imul
loopne
mov
and
mov
orl
inc
push
bound
lds
lret
jo
dec
jb
call
jo
icebp
xchg
xor
in
lahf
push
mov
andb
pusha
dec
fcomps
pop
push
xchg
push
cmp
lds
inc
mov
mull
dec
repz
in
push
cmp
jmp
cld
loope
fisubs
dec
or
scas
roll
out
jl
pop
negl
pop
xorl
or
xor
rcrb
jmp
push
mov
pop
pop
xchg
mov
jnp
movsb
mov
hlt
lods
sti
sub
lds
jb
sub
out
incl
pushf
sbb
bound
cltd
scas
or
stos
outsl
cmp
push
mov
stc
sub
shll
mov
push
hlt
imul
sbb
jl
cmp
stc
push
mov
lds
sbb
mov
in
test
add
and
popf
loope
cltd
sahf
sqrtps
int
push
pushl
rcll
adc
dec
lahf
add
dec
repnz
lret
inc
dec
or
lret
and
inc
pusha
in
sti
imul
std
sub
pop
push
sbb
push
xor
cli
jo
xor
xchg
cmpsl
test
and
adc
test
movsb
sub
rcl
push
pop
dec
scas
adc
mov
lahf
jle
hlt
lea
jp
mov
mov
inc
mov
mov
jp
sub
lock
dec
add
stc
loope
insl
jbe
mov
jns
sbbl
lcall
or
or
std
insl
test
push
pop
push
adc
into
sub
stc
into
outsl
rcrl
fcomps
in
std
push
insb
pushf
std
icebp
mov
xchg
inc
mov
cmc
and
sbb
les
mov
out
popf
sub
inc
sbb
lock
xor
clc
jmp
inc
insl
adc
aam
xchg
sub
out
test
xlat
rcll
jmp
scas
loope
arpl
hlt
cld
mov
mov
lea
inc
fwait
mov
ja
in
int3
or
inc
mov
jg
nop
je
jg
test
mov
stos
jbe
xchg
jbe
push
cmp
pop
aad
adc
in
mov
hlt
jb
repnz
push
push
movsb
je
out
imul
xor
inc
mov
mov
pop
dec
cmp
pop
sbb
jno
pop
cli
out
dec
jge
pop
sbb
out
out
rcr
xchg
adc
mov
je
ljmp
mov
jmp
pushf
pop
jno
sti
push
fsub
inc
mov
cmp
movsb
call
sbb
insl
mov
loope
cmp
push
cli
test
test
scas
jne
dec
sbb
fnsave
push
out
popa
in
or
mov
or
xor
outsb
xchg
jge
fstpt
dec
aam
sub
or
aas
shlb
push
fsubrl
sub
mov
imul
or
xlat
testl
mov
enter
sub
popa
mov
insl
jb
lahf
push
jo
jge
cmp
ror
jmp
movsl
mov
fst
xor
mov
ljmp
in
or
lea
sbb
sbb
mov
rcr
mov
call
out
jb
stos
adc
lea
mov
out
movsb
xor
jbe
inc
clc
addr16
enter
aam
cltd
cltd
in
jns
adc
mov
mov
cltd
adc
loopne
ret
mov
pop
and
dec
mov
test
pop
dec
scas
pop
push
int
lret
dec
mov
insb
test
clc
mov
pop
push
std
fcoms
and
das
jo
cmp
jno
lcall
stc
rcll
mov
sti
repnz
insb
aas
xor
pop
jg
dec
mov
xor
pop
shl
ret
pop
bound
test
aaa
xor
out
dec
jle
imulb
scas
cmpsb
sahf
jecxz
sbb
mov
call
inc
sub
xor
lods
int3
sub
test
das
fcmovne
add
data16
imul
aad
sub
outsl
jne
mov
dec
xor
nop
xor
fwait
cmp
stos
test
pop
adc
loopne
mov
jne
adcl
xchg
sti
xor
sbb
add
ljmp
fs
and
shl
inc
push
pop
and
xchg
or
cwtl
popf
mull
pop
int
repz
adc
call
jno
sbbl
inc
push
iret
push
adc
call
adc
or
mov
and
sbb
cs
out
add
adc
dec
pop
sub
sbbb
lds
sub
outsl
lret
popa
add
fwait
dec
addr16
and
fcomps
repz
aas
xor
mov
scas
add
mov
in
push
into
fs
in
cmpsb
inc
repz
out
into
popa
dec
insl
stc
sbb
or
pop
mov
ja
test
loope
insb
sti
cmc
lods
cmpsb
mov
mov
cli
sub
sub
push
mov
add
fs
test
fdivr
xor
sbb
fsubl
lret
lret
cmpsb
dec
fidivs
push
fiadds
push
sub
and
movsb
jae
ljmp
jae
xchg
xchg
mov
push
fwait
jo
mov
mov
cmp
arpl
jns
sub
add
mov
or
xor
cmpsl
cmp
sbb
mov
shll
repz
andb
lret
cli
mov
loope
hlt
jo
jbe
mov
addr16
sub
mov
sbb
sti
mov
push
add
mov
cmc
fdivs
jns
int
cmpsb
pop
lahf
cmp
dec
xor
adcb
jo
mov
and
inc
push
fidivl
insb
jne
mov
jne
test
popf
sti
xor
out
pop
push
mov
daa
pop
xor
push
jae
and
mov
and
jno
ret
mov
outsl
adc
rcll
jg
aaa
in
sub
or
or
mov
sti
add
subb
cli
mov
push
and
or
jno
imul
rcl
pop
cld
fwait
inc
or
lret
xchg
mov
cmp
scas
into
out
pushf
xor
mov
out
dec
or
leave
stos
lods
sbb
ds
sti
mov
loop
cmp
fdiv
cmpsl
fsub
sbb
mov
xchg
loop
fstl
outsl
comiss
push
rorb
push
fdivrs
pop
andb
out
or
ljmp
jbe
inc
outsl
fisttpll
adc
push
insb
fisttpll
jne
xchg
dec
mov
add
mov
rorl
jmp
fs
sub
jae
imul
fmul
sahf
adc
jno
insl
sub
dec
add
bound
jae
xor
inc
ret
add
pushf
xchg
lock
inc
cmp
jb
push
xor
jmp
mov
dec
xchg
xchg
cli
push
fs
push
add
pop
adc
or
ljmp
cmp
xor
addr16
inc
ret
outsb
out
inc
mov
mov
mov
clc
or
jmp
imul
inc
sub
outsl
mov
loopne,pn
jbe
inc
push
aad
fldcw
fwait
test
add
insb
adc
jbe
inc
sub
xchg
push
xchg
xlat
cmp
mov
aas
fs
xchg
xchg
lret
ja
sub
sub
pop
pop
sub
lock
call
insl
inc
mov
mov
inc
pusha
imul
gs
cmp
jge
sbb
rcrb
ljmp
call
sub
add
cmp
lock
js
mov
popf
aaa
mov
stc
mov
ja
les
xchg
xchg
and
cli
aam
addr16
enter
mov
loopne
xchg
enter
xchg
into
outsb
fwait
and
mov
push
pusha
insl
adc
dec
mov
enter
sbb
insl
dec
cmpsl
popf
shrb
call
aad
jge
mov
mov
leave
pop
in
jle
jg
aam
outsb
dec
leave
rol
or
push
cwtl
jbe
mov
sbbl
mov
sbb
jge
mov
pop
into
jb
mov
out
pop
rcrb
pop
sub
xchg
or
mov
adc
adc
lods
imul
jle
ret
aaa
shl
dec
outsb
inc
movsl
sub
push
sub
sbb
xchg
cmpsb
popf
popa
push
sub
pop
loope
pop
xchg
js
lret
fiadds
mov
add
mov
xchg
mov
xor
ret
lods
repz
sqrtps
lahf
test
imul
movsb
cmp
sbb
pop
outsb
jp
pop
mov
jne
insl
imul
push
xorb
push
in
mov
cmpsl
mov
jno
jns
scas
rcr
pop
sbb
lcall
xchg
ljmp
sbb
popf
ds
push
test
push
add
popa
scas
ss
fcoml
out
and
jecxz
push
xor
xchg
stos
cmc
cltd
scas
sbb
cmp
mov
inc
jp
fxam
xchg
js
into
lods
sbb
pusha
or
mov
stos
out
lds
pop
xchg
lods
jo
sbb
xchg
subl
dec
out
in
or
imul
call
mov
sbb
loopne
push
xor
sbb
mov
sub
lcall
into
clc
inc
sarb
fisubrs
sbb
adc
out
nop
lcall
jmp
xchg
xchg
cmpl
cwtl
and
daa
int
and
lea
test
imul
mov
inc
fisubrl
inc
rclb
fwait
lret
fstpt
pop
sti
or
jle
cmpsb
xchg
stc
push
cmp
sub
xchg
ds
divl
or
scas
jecxz
and
ja
or
loopne
jo
out
inc
xchg
movsl
aam
leave
popf
pop
xlat
and
pop
int3
xchg
adcl
sub
js
mov
cltd
imul
fisttpll
sub
lods
sub
movsbl
mov
cmp
cmpsb
mov
sbb
inc
jne
ss
dec
lock
mov
pusha
xor
sub
xchg
push
jne
repz
or
out
aas
dec
incl
fldt
jp
mov
dec
dec
lods
incl
pop
sbb
adc
lock
push
popl
or
push
mov
ret
idivb
dec
ja
imul
sub
xor
adc
fdivs
ffree
aam
push
xor
push
arpl
inc
mov
and
scas
or
rolb
test
push
cld
sbb
push
out
jle
fldt
adc
mov
dec
mov
pusha
push
data16
or
cmpsb
cmpsb
jg
stos
cs
adc
and
xchg
sbbb
aaa
js
insb
lock
iret
mov
jno
fucomi
add
popa
sbb
dec
cli
and
idivl
aad
sbb
inc
std
in
ljmp
sbb
or
fists
mov
dec
mov
cmpsl
sub
xor
add
arpl
aaa
cmpsl
movsb
pop
or
nop
outsb
mov
icebp
and
mov
dec
jmp
pop
dec
jnp
data16
pop
cwtl
adc
mov
sub
xor
sub
fildll
dec
pop
xchg
mov
fdivl
cmp
daa
ret
dec
mov
test
test
sti
test
xchg
daa
ja
movsb
imul
es
lods
mov
ret
xlat
sbb
inc
scas
or
jb
call
pop
mov
adc
inc
mov
add
cmc
fadd
aas
sub
add
inc
movsb
mov
repnz
fs
xchg
sbb
icebp
dec
movswl
rcll
ss
cmp
roll
inc
dec
ss
andb
xchg
adc
gs
xor
add
ds
popa
loop
scas
xchg
or
add
cltd
aad
jb,pt
je
aaa
add
jge
scas
push
cwtl
test
jmp
cmpsb
in
pop
mov
imul
inc
push
out
xchg
adc
jae
pop
ret
xchg
mov
and
movsl
and
js
cltd
arpl
and
mov
ret
xchg
xchg
jno
jg
push
fsubl
or
mov
sti
incl
or
lods
cmpl
clc
jno
add
pusha
mov
inc
fwait
jmp
adc
and
shlb
jl
out
jno
icebp
arpl
push
xchg
dec
mov
data16
xor
jbe
pop
sub
dec
idiv
lcall
lcall
cmp
shlb
sub
and
and
je
dec
sar
push
dec
inc
sub
dec
outsb
dec
insb
adc
adc
xchg
js
in
dec
stc
mov
stos
sub
gs
dec
or
add
out
mov
sarb
pop
repnz
dec
out
push
cmp
pop
addr16
xor
push
rcll
pop
test
jbe
hlt
sbb
add
in
mov
andl
pop
pop
inc
aad
sti
test
fstl
dec
adc
sti
push
ds
push
push
in
enter
jmp
pop
pop
loopne
mov
int3
xchg
shrl
lcall
or
jo
jge
sbb
cmpsl
sub
adc
push
add
loopne
fcoms
repz
popa
pop
push
in
xchg
adc
jle
push
or
stos
lret
cmp
mov
jmp
push
shll
lods
mov
test
stc
mov
inc
inc
test
insl
lret
mov
stos
ret
add
jg
xchg
pop
add
jg
push
jno
or
movsl
test
inc
dec
add
insl
arpl
lds
xchg
jle
inc
orb
rcrl
mov
sbb
dec
push
dec
nop
loope
dec
call
rorb
pop
pop
shrb
mov
adc
push
in
cmovb
stc
ficoml
mov
orl
push
xchg
xchg
ljmp
jl
push
pop
add
mov
push
push
push
bound
mov
push
lds
sahf
aas
lret
test
test
loope
cmc
sub
fwait
xchg
std
ror
icebp
aam
pop
pop
insb
repz
cmp
in
ja
ja
fstps
sub
cmpsl
scas
orps
mov
scas
xor
lret
pop
jbe
lock
adc
or
into
notb
jecxz
pop
adc
cltd
xchg
add
fmul
dec
in
scas
lret
rcl
jo
push
mov
std
or
into
subb
jl
or
dec
fs
mov
movsb
sbb
shrl
sub
pop
test
rcrb
es
pop
dec
or
aam
or
xchg
and
addr16
xlat
filds
ds
xchg
fadd
out
mov
add
cmc
xchg
or
imul
and
pop
mov
sbb
push
pop
pop
in
push
mov
jno
fmul
pop
sub
add
nopl
into
mov
jle
jge
andl
add
out
xchg
jecxz
xlat
mov
roll
loopne
xchg
rcrb
leave
jge
xor
outsb
push
cmpsb
inc
jno
pop
mov
pop
clc
mov
mov
shlb
jae
fiadds
lret
xchg
mov
rorl
mov
fists
pop
adc
jbe
jl
insb
dec
sbbb
cmp
aam
clc
nop
cli
cli
imul
insl
xor
add
or
sub
shll
int3
xchg
loope
cmp
sub
sub
push
insb
mov
mov
pop
and
out
jae
ds
movsb
ds
mov
xlat
adc
or
mov
push
xchg
movsl
lock
push
ret
xchg
test
push
pusha
insb
xor
test
repz
dec
xchg
mov
jg
sbb
inc
les
xor
dec
sub
addr16
mov
sub
add
cmc
jb
push
mov
xchg
fs
scas
stos
xchg
xchg
leave
mov
scas
lcall
mov
repz
push
leave
aad
icebp
jmp
cmc
push
xor
ljmp
inc
outsl
lds
sbb
test
mov
push
aaa
in
sbb
lds
xchg
cmp
mov
enter
cmp
call
test
fisttpl
or
xchg
add
or
aad
cmc
cs
mov
je
jno
stos
push
push
gs
mov
dec
mov
or
inc
stos
movsl
insb
repnz
sub
loopne
inc
and
mov
inc
out
cmpsl
mov
aad
out
mov
pop
lahf
movhps
mov
cld
cmp
sbb
in
ljmp
sbb
xor
lahf
pop
pop
sub
sub
and
dec
cs
clc
pop
add
pop
sbb
dec
addl
mov
mov
dec
push
mov
rorb
xor
das
mov
lcall
mov
add
xor
adc
shll
lods
and
addr16
cmp
aad
scas
fdivrl
cwtl
push
shlb
add
pusha
sbb
add
or
and
cmp
loopne
mov
fld
cli
icebp
inc
xchg
mov
gs
int3
inc
jae
ljmp
sub
movsl
jb
stos
mov
jle
inc
sub
jno
push
icebp
jg
sbb
jbe
sahf
imul
add
mov
push
pop
mov
or
rcrb
or
divl
inc
pusha
adc
stc
movsl
pop
out
addr16
push
mov
js
xlat
dec
push
adc
jecxz
or
aad
in
mov
ds
add
insb
dec
jmp
xor
test
scas
movsb
pusha
mov
fsin
aam
cs
fs
mov
jp
push
leave
out
mov
and
aam
sub
imul
cmp
add
fldcw
adc
mov
push
into
jnp
stc
pop
repz
les
int
dec
inc
sbb
js
fldl
cwtl
pop
repz
lcall
cmp
popf
mov
mov
adc
fbld
or
cmp
mov
cwtl
fmulp
push
sarl
daa
gs
push
outsl
repz
scas
ds
jp
out
jge
push
add
mov
lahf
mov
ret
daa
push
mov
fcom
rcll
std
cmp
pop
enter
ficompl
outsb
lret
sbb
mov
cmp
lret
int3
xor
mov
clc
mov
test
rorl
shr
test
or
push
js
insb
daa
iret
lods
test
mov
pop
loopne
push
shl
outsl
xor
int
pop
adc
fcmovu
in
fisubs
shll
stc
fwait
dec
cmovae
dec
dec
or
cmp
sbb
or
or
push
aad
cmpb
mov
xchg
xchg
sub
movb
push
xor
inc
xchg
or
roll
or
lahf
mov
xchg
rcr
adc
lods
out
fwait
inc
xchg
das
sub
push
add
inc
orb
dec
das
jg
add
dec
add
int
xchg
and
sar
pop
push
sbb
or
xchg
sub
or
mov
repnz
sub
inc
xor
jns
rcrl
jns
jno
scas
js
or
dec
jns
and
push
mov
xor
ss
push
xabort
jg
push
nop
xchg
cld
sti
or
jb
ss
mov
out
and
nop
loopne
lahf
shrl
sub
or
mov
cmp
xlat
pop
mov
lods
mov
xchg
cmpsl
mull
insl
dec
mov
sbb
mov
in
dec
sahf
push
push
mov
dec
aam
jmp
xor
nop
pop
aad
dec
lret
lret
jmp
adc
rorb
fstpl
andl
cmc
popa
fisubrl
mov
xchg
adc
insl
mov
jle
inc
dec
jg
shl
add
imul
mov
lds
and
add
xchg
mov
inc
aas
mov
cmp
cmp
subb
lds
pop
jg
sbb
pop
jmp
sub
pop
clc
shll
or
sub
push
mov
stos
insl
mov
addr16
pop
andl
jp
test
mov
in
sbb
sbb
nop
int3
pop
arpl
repz
fimuls
push
sbb
loop
add
add
inc
les
imul
iret
or
inc
or
cwtl
push
adc
paddusw
cmp
adc
call
insl
dec
outsl
mov
stos
rclb
dec
addl
lods
sbb
xlat
loop
lods
movsl
mov
aaa
and
lahf
enter
jne
std
inc
lcall
dec
outsl
inc
sahf
iret
nop
or
int
jne
ds
push
pop
int
cmp
loope
sub
stos
sbb
dec
fwait
cld
inc
push
cmc
leave
in
pop
sbb
ror
pop
sub
xchg
jo
cwtl
repz
push
sub
lret
mov
ja
in
dec
andl
push
lds
xor
es
jbe
test
pop
addr16
movsl
push
testl
mov
cmc
fmuls
shl
das
loope
mov
mov
inc
aad
addb
sub
ds
sub
insl
mov
lahf
mov
mov
in
pop
out
adc
cmc
outsb
sbb
lods
push
mov
jns
jb
and
repnz
mov
jnp
add
xchg
test
jbe
repz
scas
push
sub
out
shll
dec
xor
mov
movsb
or
cmp
movsl
repnz
nop
sbb
xchg
lock
bound
loop
or
mov
fcompl
inc
adc
xchg
pusha
dec
sub
xchg
gs
nop
sub
mov
loopne
jl
je
xchg
popf
ret
bound
jb
jge
pop
xor
jo
xchg
pop
lock
jbe
fistpl
mov
das
jge
arpl
lods
data16
inc
rcrl
out
xchg
jle
xchg
icebp
std
das
ror
and
mov
inc
loop
xchg
into
jne
pop
js
lock
js
xchg
nop
cmc
jno
mov
cmp
leave
call
sub
push
dec
inc
int
loop
outsl
xchg
int
inc
adc
rcrl
lcall
sbb
mov
pop
test
sbb
dec
xchg
push
insb
cmp
mov
in
inc
jae
push
in
outsl
rclb
dec
lret
adc
jae
test
rol
mov
das
push
test
sahf
xor
jmp
push
popa
jg
and
cmp
fsub
mov
and
std
imul
inc
jno
mov
or
mov
cmc
sub
push
jb
pop
jmp
mov
push
leave
pop
jp
dec
jb
mov
push
push
pop
adc
nop
repz
push
xlat
push
sub
add
dec
jecxz
jp
pop
popf
icebp
jge
scas
dec
or
sub
push
lea
dec
movsb
aam
repnz
lods
ds
mov
dec
dec
mov
and
fnsave
arpl
pop
cmp
aas
ret
pop
push
sub
ljmp
negl
mov
arpl
mov
sub
imul
std
or
dec
mov
cltd
lods
bnd
sarb
mov
jl
push
call
test
add
cmpl
popf
inc
gs
gs
loop
enter
and
xor
pop
addr16
mov
cmp
ja
outsl
or
push
sub
and
pop
jg
xchg
int
push
lahf
mov
dec
pushf
cltd
aaa
in
add
mov
ja
pushw
pop
cmp
xchg
dec
mov
pusha
bnd
call
mov
adc
ss
jbe
out
mov
push
or
or
mov
sar
mov
dec
pop
push
xor
push
addr16
es
xchg
push
xchg
fsubrs
test
js
sbb
ret
lock
das
xchg
dec
push
sub
jmp
ds
or
sbb
xchg
adc
js
jbe
in
xchg
mov
or
bound
xchg
aad
jbe
push
shr
push
mov
cmc
dec
mov
subb
lods
repz
xor
mov
inc
mov
push
inc
xchg
pop
and
repz
shl
fcoml
sarb
roll
rolb
push
js
jnp
inc
push
sbb
aaa
loopne
jne
rcll
and
loopne
dec
shlb
cmpsl
jbe
jns
scas
in
push
pop
or
sub
sub
inc
aad
loop
cld
hlt
in
bound
sbb
mov
fisttps
fdivrl
adc
insl
push
shrb
fs
mov
loope
mov
inc
mov
pop
fldl
das
stos
or
mov
lea
sub
mov
and
inc
fdivrl
lods
mov
push
xor
cmpsl
pop
jno
sarb
addl
mov
repnz
pop
test
adc
dec
mov
mov
shr
and
fildll
psubw
orb
jne
shll
stc
dec
lcall
push
popf
cmpsb
js
xorb
call
xchg
sub
lods
jne
mov
insl
and
ljmp
insl
dec
sti
enter
cwtl
push
ds
shrb
test
jmp
xchg
xchg
pusha
push
mov
subb
pop
ja
mov
sbb
mov
sub
sub
inc
fwait
cmp
les
sbb
imul
int
cs
push
movsb
cmp
add
xor
xchg
mov
push
add
xor
out
or
call
jb
addr16
ss
pusha
pop
jl
or
push
gs
xchg
mov
dec
push
leave
inc
mov
dec
dec
jle
push
mul
nop
loope
xchg
jnp
jecxz
push
shlb
arpl
in
sub
sbb
rclb
cld
rolb
jp
dec
cmpsb
and
lods
fldcw
push
fdivrl
push
mov
xlat
sti
mov
add
add
adc
shlb
add
incl
jp
jmp
decl
push
mov
push
lock
mov
aam
pop
lret
fcmovnu
cmc
push
pop
dec
xchg
inc
fcomps
test
imul
fsincos
pop
cmc
xchg
aam
fisttpl
mov
fs
sbb
data16
aad
test
add
aas
pop
pop
stos
fildll
cld
mov
pop
sbb
es
addl
jge
mov
cs
fstl
pop
dec
sub
stc
insl
sub
adc
or
les
loopne
mov
mov
leave
mov
dec
stos
add
insb
mov
sub
dec
xchg
push
mov
dec
xor
xchg
inc
push
jno
sbb
mov
aaa
dec
scas
daa
data16
aad
add
stos
lods
jmp
fadd
mov
repnz
hlt
mov
xor
adc
lcall
xchg
mov
dec
cmc
mov
mov
xchg
mov
adc
ss
je
imul
js
mov
mov
insl
xchg
push
cmpsl
pop
dec
fcoml
mov
scas
icebp
push
mov
xor
sti
aas
mov
xor
jp
inc
jbe
cmpsb
xorb
fisttpl
packuswb
test
adc
sbb
pop
mov
loopne
outsl
les
pop
xor
ds
ret
out
pop
out
or
js
je
popa
shlb
pop
pushf
adc
and
pop
xchg
mov
sub
lods
lock
sarb
add
sbb
sbb
std
enter
xor
xchg
and
daa
fs
stc
sub
jmp
push
mov
imul
mov
or
mov
sub
inc
adc
fisttpll
mov
and
mov
mov
daa
fists
and
popa
push
das
je
sub
add
sub
loop
and
sbb
ret
imul
lods
testb
ja
jnp
lahf
rolb
enter
adc
jnp
cld
dec
inc
push
xchg
mov
das
cmc
jmp
push
repz
push
mov
les
hlt
aad
xchg
movsb
cmp
cmp
mov
inc
push
push
push
subb
add
adc
mov
lds
and
cmpsb
in
dec
cmpsb
xchg
sbb
cmp
lret
aad
int3
aad
pusha
cmpsb
jmp
push
es
outsb
shr
in
or
sbb
outsb
jno
xchg
into
das
or
inc
es
lods
xlat
mov
xorb
adc
and
and
fsubrl
call
mov
inc
add
in
or
pop
imul
xchg
pop
imul
xchg
push
and
ret
clc
add
push
shll
cli
xchg
cmp
je
in
pop
mov
push
sub
lret
adc
ret
fdivl
rcl
jl
ret
rclb
scas
push
pop
dec
int3
clc
cmp
fdivs
cmp
ret
mov
push
test
sub
sbb
pushf
dec
mov
int3
push
fbstp
mov
in
ret
aad
xchg
or
push
xor
mov
shrb
cmp
add
sub
and
imul
cmp
inc
clc
fldln2
sbb
inc
les
int3
jb
aaa
bound
adc
and
adc
cld
sahf
fisttpll
lahf
inc
fsts
fsubl
data16
jae
inc
sbb
int3
shll
adc
add
addb
push
and
adc
lods
pop
pusha
and
jb
repnz
lds
repnz
jo
and
xor
movsl
cwtl
add
cmp
icebp
jne
add
movsb
fsubl
repz
push
jg
dec
pop
rcl
lock
das
jmp
sub
shrl
icebp
pop
and
cmc
aad
sti
or
jl
mov
jo
jae
rcrb
punpckhwd
gs
or
outsl
cld
dec
std
cmp
fimull
out
ja
out
imul
sbb
xchg
xchg
int
leave
lcall
imul
mov
inc
add
icebp
mov
mov
and
mov
jno
mov
jb
testl
nop
repz
jg
mov
jmp
inc
loopne
lds
xor
adc
loopne
push
adc
mov
xor
cmc
clc
cmp
sarl
lret
or
cs
fists
dec
mov
mov
stos
jne
adc
fistps
inc
sti
pop
inc
xrelease
sbb
xlat
test
push
std
sbb
xor
xchg
pop
jae
sub
xchg
push
in
lret
sub
aas
push
mov
lret
jnp
lds
or
jnp
test
mov
in
push
sti
inc
imul
inc
xchg
enter
fucomip
push
cmp
loop
shll
pusha
loopne
daa
add
rcll
mov
xchg
pop
int3
arpl
adc
inc
sahf
xchg
jge
sbb
bound
mov
push
add
sbb
rcll
loope
fcoml
push
insb
mov
int
mov
mov
mov
icebp
dec
jle
rol
cmpb
out
movsb
pop
cmp
sar
and
sahf
adc
insl
push
jns
and
das
jecxz
add
jle
mov
xor
mov
ss
cmp
in
fwait
daa
cmp
jo
mov
or
mov
ret
pop
jg
mov
mov
pop
sti
cmp
call
js
pusha
int
mov
outsb
aaa
out
xor
cmp
int3
aad
enter
lret
push
dec
pop
lods
aas
lods
cmp
pushf
lock
xchg
and
outsl
xor
shll
jbe
sub
into
sub
in
or
mov
add
jno
gs
aaa
push
cmp
stos
shll
in
fmuls
incl
lods
jle
fwait
jecxz
mov
divl
daa
adc
fistps
enter
je
ss
and
pop
mov
loop
sub
popf
push
dec
test
or
loopne
mov
push
xor
dec
pop
int
push
jmp
insb
cmp
adc
xchg
mulb
pop
lds
mov
sbb
sahf
pop
dec
push
mov
jg
test
mov
les
and
repnz
shrb
mov
cmp
es
xlat
mov
das
pop
add
cmpsb
leave
or
mov
scas
xor
data16
in
sub
sbbl
cmp
ja
movsb
rcll
dec
shll
cmp
in
pusha
mov
adc
enter
cmp
fwait
add
into
pop
dec
inc
mov
je
das
sub
push
es
lcall
cmpsl
leave
rcrl
mov
mov
inc
mov
jne
in
fsubs
lea
add
stc
rolb
cmpsb
pop
popf
ret
fnstenv
mov
mov
insl
push
jg
divb
test
dec
push
ja
nop
add
mov
mov
push
jmp
sub
in
lahf
sbb
rcr
rclb
sbb
pop
push
sbb
lcall
dec
cltd
dec
mov
inc
mov
inc
out
inc
sub
jns
xchg
fbstp
bound
pop
aaa
add
in
push
sbb
mov
push
dec
cmpsb
shr
mov
xorb
jecxz
jae
jmp
jb
jb
mulps
shrl
adc
test
inc
cmp
popa
xchg
or
xor
shrl
aam
mov
pop
rol
mov
xchg
mov
cmpsl
jg
or
movsl
cli
das
popa
fisubs
jns
in
pop
fstps
push
jle
sbb
fisttps
stc
outsl
jp
inc
lret
jecxz
pusha
into
add
jo
lock
pop
push
pop
push
xchg
scas
mov
gs
cmp
cmpsl
sarl
mov
sub
dec
add
cli
pusha
or
cmp
cwtl
cs
inc
and
and
mov
ret
mov
jecxz
sbb
movsb
pop
cli
adc
lret
fwait
jns
subb
xchg
push
sbb
pop
in
bound
orb
mul
or
dec
in
adc
aad
jo
fs
mov
mov
popa
jmp
sbb
lcall
mov
mov
ljmp
jbe
rol
lret
in
inc
test
mov
icebp
jnp
in
adcl
les
out
mov
shll
jecxz
cmpsl
inc
push
push
adc
pop
xchg
dec
jp
jmp
fucom
jl
cmpsb
and
das
arpl
adcl
jnp
mov
lea
inc
mov
mov
call
fmuls
xchg
repnz
movsl
jno
call
or
push
xor
mov
sub
jbe
sti
xor
xor
in
hlt
aaa
jb
pusha
or
and
xorb
cmpsb
lods
mov
subb
rorl
and
cmpl
sbb
mov
push
loop
push
xchg
inc
std
dec
jecxz
ljmp
push
jp
test
repz
push
ljmp
adc
vmovdqu
or
mov
loop
cmp
jb
les
jb
fwait
movsl
or
js
mov
dec
push
arpl
cs
lret
and
cmc
icebp
add
pop
jae
xchg
push
data16
dec
loope
sub
xchg
dec
pop
in
dec
popa
in
popf
lahf
insl
cld
pushf
shrl
push
ficoml
bound
mov
mov
jns
repnz
add
xchg
data16
sub
in
pop
mov
xchg
outsl
mov
popf
jne
xchg
arpl
aas
fs
mov
or
cmpsl
lods
push
fs
xchg
cmp
sub
mov
sbb
cmp
ds
or
pop
jp
jo
pusha
adc
shll
inc
shlb
sbbb
cli
and
dec
loopne
ret
jo
dec
pop
xor
sub
lods
fstl
pop
dec
lret
call
lret
imul
ret
in
adc
sub
push
jae
and
jl
les
rcll
or
bound
out
pop
stos
xor
mov
add
notb
test
pop
loop
clc
inc
cmpsb
xor
inc
mov
sbb
daa
rcr
cwtl
jne
je
mov
in
stos
cmpsl
jecxz
negl
idivb
dec
div
test
mov
pop
rcr
mov
pop
pop
push
cmc
xchg
push
dec
das
jmp
rcr
aam
mov
xchg
adc
test
out
repnz
push
xchg
sub
inc
mov
sahf
enter
jnp
fcmovu
movsl
mov
mov
add
out
stc
cmp
lret
cmpsl
jmp
inc
fimuls
mov
cmp
out
das
fstpl
nop
xor
xor
or
ljmp
mov
ss
dec
test
fimull
notl
jno
jmp
sarl
sub
pop
in
mov
adc
and
ret
pop
and
cmp
sbb
xchg
mov
xor
sub
jbe
mov
or
or
repz
fdivs
nop
adc
dec
xor
mov
mov
inc
push
add
ja
inc
mov
out
outsl
mov
mov
cmp
popf
mov
lock
pop
xor
push
les
sbb
add
movsl
dec
js
stc
push
adc
loope
mov
repz
xor
sub
adcl
stc
aas
or
push
and
cmpsb
jns
xlat
ret
mov
add
sti
mov
into
mov
paddsw
sub
pop
adc
enter
test
cs
mov
movsb
xchg
movsl
pushf
faddl
negl
fistpll
fnstsw
inc
addr16
push
pop
sub
insl
push
dec
push
cmp
clc
fucomp
jb
push
mov
mov
push
push
jmp
ljmp
lods
adc
out
xchg
aad
xchg
fwait
mov
mov
mov
or
push
pop
std
icebp
ljmp
loope
hlt
dec
es
cmp
fst
loopnew
rcrb
popw
mov
int
jo
push
inc
es
int3
mov
sbb
xlat
cmp
sub
fisubrs
xor
sub
sub
xchg
les
fnstenv
sbb
les
imul
scas
aaa
add
mov
nop
bound
scas
in
testl
push
xor
in
lret
jae
dec
ffree
add
push
cmp
idivb
les
les
pop
push
mov
lock
adc
les
clc
jns
lods
or
sbb
mov
adc
mov
mov
stc
in
inc
ljmp
sub
lds
sbb
in
or
jg
imul
xchg
xor
or
fiadds
jp
push
ss
sahf
jbe
dec
inc
cmp
or
clc
or
xor
stos
add
xchg
incl
ds
xor
and
sbb
int3
fildl
div
addr16
addb
shrl
lods
inc
mov
hlt
cmpsb
xchg
pop
mov
xchg
sbb
pop
add
push
lods
dec
rclb
hlt
popa
mov
cmp
adc
xacquire
shlb
testb
bound
scas
ljmp
sub
dec
and
movsb
pop
push
shrl
mov
inc
push
pop
ja
xchg
mov
jnp
or
pop
aas
adc
jns
pop
sbb
add
sbb
pop
dec
mov
lret
hlt
mov
fsubrl
pop
out
cmp
xor
xor
or
sbb
in
cmpsb
jg
ret
fcoml
roll
nopl
mov
out
leave
fisttpll
popa
clc
xlat
stos
and
pusha
mov
mov
cltd
inc
mov
out
inc
in
push
sub
cmc
div
test
stos
jp
sub
jp
int3
adc
sbb
push
dec
push
or
xchg
and
inc
jp
test
jmp
nop
bound
jae
es
sar
or
and
fldl
pop
rolb
sti
aad
adc
es
push
das
mov
test
adc
call
jmp
mov
in
leave
mov
or
inc
xor
dec
dec
push
lea
add
pop
mov
or
cmp
cmc
popa
mov
pop
popa
and
cmpsl
les
sti
inc
movsb
cmc
fcmovb
xchg
mov
sbb
stos
js
bound
mov
xchg
es
shrb
xorl
jle
xor
sbb
jnp
repz
add
lock
mov
lea
push
sarl
adc
loopne
clc
cmp
fs
add
imul
add
shrb
popa
out
movb
lea
xor
test
mov
mov
pop
sbb
sbb
rcr
loopne
jp
inc
sbb
fmull
das
or
cmpsl
add
setbe
outsb
pop
sub
int3
int
and
rclw
pusha
popa
shll
jle
cmp
aad
push
shrb
std
repz
cs
sbb
lret
sbb
ljmp
inc
loop
gs
sbb
loop
cmp
adc
jnp
add
push
sub
mov
mov
jle
or
sbb
aaa
mov
les
repz
mov
cltd
mov
mov
cmp
sub
lahf
inc
dec
mov
insl
or
add
sub
cli
cmp
call
inc
xor
imul
loop
orl
fisttps
cmpsl
sub
roll
stos
inc
ficoms
adc
lea
and
test
fisttpl
pop
sub
push
xlat
jecxz
jg
test
les
in
pushf
into
sarb
cmp
push
scas
shrl
mov
adc
sub
and
lods
das
push
jae,pn
popa
inc
mov
push
test
stc
incl
fxrstor
icebp
dec
pusha
popf
or
adc
js
and
sbb
sbb
hlt
insl
loopne
lret
xchg
loopne
cli
xchg
add
rcrb
adc
dec
mov
dec
xchg
mov
aam
int
stos
fiaddl
das
xchg
or
and
mov
into
scas
or
sbb
in
hlt
and
sahf
outsl
lfs
xchg
and
inc
pop
push
jne
or
punpckhdq
outsb
fsts
insl
out
cmp
sbb
bound
rolb
aam
mov
les
mov
sti
ja
jnp
jne
push
imul
fwait
lods
inc
xor
iret
out
out
cmp
bound
dec
and
add
cmpsl
inc
lahf
sti
mov
mov
xchg
in
iret
lcall
negl
adc
outsb
inc
pop
pop
negl
mov
pop
negl
or
xchg
add
xorb
jae
js
popa
xchg
mov
sbb
cmp
push
lock
into
dec
decl
jge
pminub
push
or
popf
jmp
mov
mov
push
lahf
movsl
and
imul
bound
xchg
ljmp
jle
sbb
imull
cmpsl
sub
xchg
push
ds
sbb
aad
cs
xlat
xchg
lahf
push
aaa
inc
nop
pop
les
or
xchg
lret
push
xchg
mov
pusha
leave
fs
mov
icebp
pop
mov
jb
es
or
aad
pop
loop
cmp
icebp
or
nop
cld
jmp
mov
xchg
jle
stos
dec
mov
xlat
or
fisubl
jnp
or
into
in
and
repz
inc
jp
and
mov
inc
iret
popf
pop
jno
and
jp
and
push
out
ja
push
or
cmp
in
adc
and
xchg
jnp
ror
outsb
lods
fdivp
pop
jns
inc
jl
shll
adc
xchg
adc
cmp
jne
xor
int3
gs
in
jge
or
inc
dec
outsb
mov
sbb
jns
push
fldpi
sbb
sub
movsl
mov
jg
repnz
fcoms
loop
push
or
adc
mov
in
xor
cs
dec
call
jmp
lahf
rcr
mov
nop
jg
es
lods
jecxz
dec
add
xor
jae
jmp
fstl
sub
insb
fcmovu
pop
sti
mov
lahf
jo
call
pusha
insl
push
or
rcl
add
pop
pop
jp
jno
mov
mov
iret
in
inc
sti
in
pop
mov
fcmovu
loope
inc
jns
xor
data16
inc
inc
sbb
inc
pop
jge
in
xchg
jo
mov
bound
pop
imul
sub
fs
addb
repnz
mov
cli
mov
imul
mov
mov
dec
sub
pop
pusha
pop
test
push
jnp
fwait
sbb
sti
inc
xchg
rcl
xchg
jb
push
xchg
cli
sar
fs
adc
dec
pop
inc
pop
jno
sbb
mov
ficompl
mov
jg
call
dec
push
pop
cmpsl
jle
hlt
lock
mov
inc
dec
pop
mov
pop
rclb
lds
adc
je
std
add
cmpb
sub
scas
pop
pop
popf
aaa
daa
mov
mov
xchg
mov
xchg
bound
adc
pop
sbb
lds
dec
jno
fwait
cmp
xchg
push
hlt
fcompp
repz
sbb
sub
xchg
pop
add
test
popa
lds
sub
xchg
fsubrs
add
push
shll
test
fcomps
inc
mov
dec
mov
pop
xchg
inc
aas
sarl
in
adc
imul
cmpsl
repz
fst
fcoml
lea
shrb
aad
clc
lcall
xor
or
pop
dec
jb
repnz
or
loopne
jmp
adc
int3
jno
faddl
insl
sbb
aas
jg
mov
sub
lds
out
push
jecxz
mov
pop
fcoml
ja
pop
dec
test
loopne
std
lods
out
aam
imulb
fnstsw
jle
and
jp
push
jnp
add
notb
dec
jae
mov
test
mov
jae
or
lock
pop
lea
xor
adc
jge
pop
negb
jb
jmp
pop
loop
xlat
lcall
xor
inc
icebp
xchg
pop
cld
pushf
inc
xor
xchg
into
pop
mov
inc
rorl
sub
dec
sub
and
shrb
out
mov
inc
inc
fs
sahf
xor
mov
pushl
je
mov
xchg
adc
inc
push
stos
or
fidivrl
rorb
cltd
pop
lea
jnp
outsl
repnz
lahf
or
inc
push
nopl
pushf
arpl
adc
subl
xor
add
lea
jmp
xchg
test
daa
rclb
or
push
inc
inc
loopne
imul
rcrb
jge
xchg
lret
adc
pop
mov
mov
xor
mov
fisubrs
dec
xchg
lret
arpl
aad
imul
push
push
push
mov
mov
mov
cs
jl
jae
loopne
insb
loopne
sub
imul
mov
outsl
in
xchg
push
aam
xchg
je
lea
orl
arpl
sub
mov
test
mov
xor
and
stos
in
lcall
in
xchg
test
mov
jnp
pop
adc
cli
test
xor
jo
ret
cmc
stos
pop
push
mov
nop
pop
xchg
cmc
outsb
dec
in
fwait
addb
mov
mov
push
mov
sbb
mov
jge
aas
xor
push
mov
pop
ret
pusha
aam
cmp
mov
inc
mov
aad
sub
in
pop
and
sub
or
mov
shll
xor
mov
push
jmp
lcall
inc
pop
popa
mov
rolb
jge
and
aaa
add
dec
cmp
imul
les
out
popa
mov
mov
lahf
pop
sahf
dec
push
and
mov
sti
rep
jnp
js
shll
outsl
aas
add
cmp
das
scas
pop
aam
in
pop
sub
sbb
insb
mov
cmp
cmpsl
pop
movsb
jo
add
push
pop
cmp
mov
mov
jmp
inc
shlb
xchg
jl
or
movb
dec
je
cli
jmp
sub
lcall
mov
lods
mov
and
inc
aad
ljmp
test
in
mov
xor
sbb
icebp
inc
lret
adc
adc
out
mov
inc
rcrb
jbe
aam
dec
mov
daa
and
call
ret
enter
int3
clc
stos
mov
xrelease
add
ficoms
mov
mov
insb
repnz
xor
ljmp
cmc
and
nop
out
jle
nop
fiadds
add
sub
lret
xor
pop
lret
fwait
jg
push
cmp
and
into
xchg
jnp
sarl
push
xor
out
push
add
cmpsl
or
mov
push
dec
jl
in
lahf
mov
nop
sbb
ljmp
mov
lret
out
aaa
enter
push
out
dec
cmp
sbb
dec
mov
aad
out
mov
push
leave
fisubl
push
jle
and
dec
inc
decl
std
cmpsb
nop
ret
or
pop
inc
dec
iret
inc
movsl
mov
in
repz
fists
sahf
and
dec
sbb
out
adc
outsl
cmp
xchg
fcmovb
imul
fisttpl
pop
or
mov
aas
sub
xchg
and
mov
adc
add
aam
popa
jns
push
pop
jae
xor
idivb
out
arpl
fidivrl
xchg
push
pop
out
jle
loopne
xchg
movsb
push
cmpsl
icebp
sub
stos
pop
and
das
and
fxch
negb
xor
cs
dec
mov
gs
aad
in
mov
sbb
test
jns
jl
aad
xor
jle
cmp
dec
gs
popf
jmp
rcl
ljmp
sub
stos
sets
xchg
and
enter
aas
mov
jl
cmp
adc
cmpsb
mov
push
lock
mov
mov
and
cs
lods
mov
push
mov
sti
mov
add
fs
leave
sub
shrl
push
ret
push
push
and
mov
hlt
lcall
mov
and
push
dec
xchg
cmp
jl
outsl
add
cmpsl
sti
idivl
jmp
xor
jno
lret
cmp
and
xor
sbbb
dec
sub
data16
cs
or
mov
adc
sub
cwtl
stos
jae
gs
scas
mov
out
push
and
dec
in
addr16
pushl
rclb
rorb
mov
jg
add
fstpl
sub
pop
xor
mov
sti
or
movsb
ds
mov
outsl
repz
xor
jecxz
scas
in
jmp
xchg
fcompl
aam
ret
les
push
inc
xchg
cli
popf
adcb
in
xlat
mov
cmp
push
sbb
pop
test
pop
inc
push
xchg
addl
xchg
cwtl
shrl
and
xchg
push
jmp
fbld
stos
std
int
lods
xchg
xchg
sbb
ret
cmpsl
call
cmpsb
mov
pop
insl
lock
cmp
dec
jge
pop
pop
movl
test
xlat
les
jbe
mov
or
shll
lret
lcall
test
dec
and
mov
mov
xchg
in
sub
add
dec
shl
clc
fnstsw
jnp
iret
into
add
jl
movsl
mov
xacquire
xor
pop
les
int
sbb
sar
xchg
cmp
sbb
jle
cmp
cmpsl
jmp
pop
test
clc
lahf
pop
test
hlt
mov
add
divl
aaa
jmp
add
pop
jle
andl
scas
ja
mov
pop
jae
addr16
adc
xor
imul
push
push
in
xor
pop
sahf
inc
and
pop
loopne
push
adc
mov
fldcw
popf
ds
and
mov
pop
movsb
pop
repz
cmp
and
fwait
loope
fisttpl
cmp
mov
in
shl
cmp
inc
shll
xchg
int
bound
push
add
insl
push
dec
adc
mov
push
mov
mov
cmp
pop
jecxz
in
iret
fcmovu
mov
jmp
clc
divb
and
sub
dec
mov
mov
cli
pusha
test
stos
and
add
iret
sub
xor
adc
jo
std
loope
mov
cltd
sub
mov
sahf
jno
jp
adc
imul
mov
aam
jbe
jbe
push
xchg
call
popf
jne
pop
ret
out
sahf
mov
into
or
cmp
mov
add
pop
sti
mov
fcmovnb
cmp
fidivl
cmc
cwtl
push
sub
repz
inc
mov
jl
cmpsb
lahf
lods
imul
mov
sahf
movsl
lods
dec
pushf
rcrl
mov
jns
or
daa
mov
rcr
jle
out
jle
xchg
int
insl
jns
xor
xor
lods
pop
rcr
mov
adc
mov
arpl
test
mov
sbb
in
xor
mov
lret
mov
adc
lcall
into
push
jge
loop
mov
dec
mov
jb
inc
sti
xchg
pusha
lcall
mov
sub
jns
mov
popa
call
call
mov
mov
add
jo
adc
sub
mov
lahf
cwtl
sbb
das
arpl
push
lea
adc
mov
mov
pop
nop
je
int3
mov
inc
push
jl
std
mov
pop
cltd
fistl
jp
data16
mov
jb
imul
pop
rcrl
cld
jmp
jne
mov
movsl
rcrb
rclb
cwtl
cmp
scas
cltd
in
and
pop
jecxz
sti
movsb
xlat
or
jl
mov
adc
sub
outsb
and
xor
fsub
xor
lret
sub
push
jns,pt
roll
iret
pusha
sar
pop
sbb
cmpsb
fnstsw
pop
or
xor
inc
cmc
popa
mov
jae
int3
push
sbb
push
jle
xchg
sahf
cmpsb
lahf
xlat
sub
xor
dec
pushf
ds
and
js
inc
fldcw
movsb
ds
inc
in
aaa
data16
rclb
sbb
inc
adc
xor
jp
push
dec
adc
pop
fmull
dec
mov
lock
sub
add
sti
sub
mov
cs
cmpl
cmp
adc
and
in
daa
out
push
fstps
cld
mov
mov
cmp
mov
out
xlat
cmp
out
into
push
out
jp
xor
jmp
out
aaa
pop
pop
push
mov
dec
test
into
in
aas
fcoml
mov
fbstp
cmpsb
sub
sub
inc
test
out
add
lods
sbb
xchg
jl
xchg
adc
xchg
sti
fmuls
sub
or
jne
fadds
shl
mov
or
cltd
xor
imul
jecxz
inc
jo
mov
imul
pop
sub
fwait
jle
loop
iret
mov
aad
jo
push
popa
jno
pop
and
jmp
mov
inc
inc
sbbl
and
add
aam
xchg
inc
lds
test
lret
fnstenv
cmp
mov
aam
out
ret
cmp
adc
inc
adc
std
cmp
nopl
cmpsb
jg
sbb
jge
lods
push
cltd
xor
mov
lea
jns
pop
mov
js
pop
or
je
stos
das
mov
jl
aam
leave
sbb
xchg
out
inc
test
or
dec
mov
mov
pop
xor
pop
lret
scas
jmp
jle
add
add
sahf
adc
jnp
adc
pop
inc
pop
inc
xchg
xchg
jo
stos
jmp
arpl
jmp
pop
xor
xchg
or
pop
or
sbb
sti
sub
mov
aam
sti
enter
xor
or
xchg
inc
sbb
inc
push
lcall
inc
add
jo
fmull
and
jge
push
setno
xchg
inc
int3
and
sbb
hlt
jl
stos
or
fadd
push
and
adc
int3
sar
je
in
test
cltd
or
add
fidivrs
jl
push
sarl
sahf
inc
mov
push
es
inc
mov
in
in
pop
mov
ret
sbb
inc
pop
daa
rcrl
nop
repnz
dec
addl
jge
gs
fsubs
lods
es
inc
shlb
cld
out
and
lahf
mov
push
xchg
mov
cmp
mov
loopne
mov
cmp
jo
sahf
push
test
xor
or
in
mov
clc
xchg
add
jne
ss
sbb
inc
ficoms
addr16
mov
aas
adc
fcoml
std
int3
mov
dec
adc
xchg
xchg
ss
pop
xor
mov
jl
popf
mov
lods
mov
les
mov
in
cld
in
outsb
adc
sub
pop
lcall
cmp
sbb
sar
dec
nop
push
adc
iret
push
rorb
inc
addl
loop
inc
pxor
push
push
dec
or
inc
cs
lahf
inc
mov
aas
pop
int
mov
addr16
sub
test
pop
mov
cmp
mulps
push
pand
and
loop
jg
mov
rep
or
movsb
push
pushf
fwait
andb
sahf
scas
movsl
dec
int3
adc
scas
and
jo
je
jmp
inc
insb
or
xchg
xor
fstpt
adcb
addr16
loop
xor
inc
negb
xor
call
jge
test
fcmovu
jle
adc
sbb
pop
adc
xlat
lret
js
jle
fsub
cwtl
aam
loop
pop
adc
out
cmp
test
ret
sub
jecxz
lods
jns
dec
xor
cmpsl
inc
andb
subl
mov
lcall
jecxz
mov
dec
imul
stos
daa
pop
sub
jle
lods
icebp
jg
xchg
lahf
cli
out
addb
imul
pop
mov
pop
jo
xor
pop
arpl
dec
sub
mov
adcb
loopne
loop
test
popf
lea
mov
adc
adc
adc
mov
sbb
mov
jbe
dec
scas
les
repz
push
jnp
hlt
jne
cmp
arpl
xor
idiv
dec
cli
outsb
xchg
out
movsb
xor
daa
inc
ss
inc
mov
lods
xchg
inc
outsb
mov
in
cmp
leave
test
xchg
cwtl
inc
mov
push
mov
mov
icebp
lcall
push
out
sub
jle
aaa
mov
xchg
rcrb
hlt
loop
ja
pusha
repz
clc
mov
fldcw
push
xchg
xchg
decb
rcl
inc
out
into
incb
cwtl
jp
dec
sub
xor
addb
or
xchg
jbe
jmp
mov
mov
sbb
or
push
ror
sahf
adc
inc
xor
jne
push
or
cmp
jno
lea
es
dec
inc
push
gs
enter
push
shrl
cmpl
in
xchg
mov
int
pushf
inc
cmp
ret
adc
xchg
add
enter
jg
shrb
jle
movsb
or
or
hlt
stc
mov
lock
pop
stos
ljmp
mov
ret
mov
test
movl
shr
sahf
dec
push
fidivrl
mov
data16
flds
and
fucomi
mov
cmp
jo
xor
cwtl
gs
xchg
sbb
pop
dec
jae
popl
and
orb
test
pop
pop
aaa
mov
shrl
jnp
sbb
repz
cmp
ljmp
sub
ljmp
pushf
jae
or
rolb
xor
ret
lods
movsl
mul
xor
cwtl
sub
add
pop
aas
mov
repz
hlt
mov
jnp
pop
fld1
scas
jp
or
cmpsl
movsl
ds
ss
adc
and
dec
pop
leave
fmull
xor
mov
lea
sub
inc
or
nop
mov
sub
pop
cltd
imul
lret
cvtps2pi
pop
icebp
jg
jp
mov
dec
push
ds
pop
outsl
js
sbb
loopne
adc
mov
jnp
aaa
clc
add
cld
in
xchg
icebp
mov
adc
into
pop
dec
xor
jb,pt
mov
pop
add
xlat
adc
ljmp
push
movsb
or
and
inc
dec
jb
inc
or
dec
frstor
xchg
mov
dec
xchg
frstor
xor
add
mov
lea
subl
shrl
mov
addr16
hlt
fisubrs
scas
outsb
mov
push
inc
pop
fs
movsl
fstpl
jl
xchg
data16
xor
add
push
mov
lods
cwtl
add
adc
insb
jmp
rcl
and
mov
cwtl
cmp
orb
mov
ret
cltd
xor
dec
mov
jb
and
push
lods
and
int3
xchg
ret
movsl
in
mov
aaa
inc
mov
jb
pop
xchg
enter
lds
ret
cmp
mov
jnp
int
mov
outsl
dec
ja
sbb
lods
call
adc
jo
arpl
repnz
xor
pop
push
ja
cld
bound
xchg
dec
loope
mov
nop
fstpl
test
out
addr16
jg
mov
mov
fs
es
xlat
stos
in
out
push
daa
cltd
mov
cmovo
jmp
cltd
inc
outsb
jb
fidivs
add
inc
fs
push
cwtl
enter
int
addr16
loop
or
std
jg
push
stos
outsl
dec
mov
loop
push
sub
pop
fists
cmp
xor
inc
outsb
gs
push
jp
fptan
cmp
push
fs
sti
adc
adc
out
add
je
lock
sbb
jb
sbb
mov
xor
lcall
pushf
stos
sub
cwtl
adc
ds
imul
pushf
mov
cmp
jmp
rol
mov
mov
in
mov
aad
out
lcall
cli
jno
dec
int3
pop
lods
jp
pcmpeqb
in
aas
movsb
popa
mov
add
rol
cs
cmp
gs
lret
mov
and
adc
jle
lods
imul
mov
sahf
insb
pop
mov
dec
mov
push
cs
xchg
imul
mov
mov
jb
xor
xchg
decb
jbe
shrl
adc
and
dec
push
test
adc
lods
cmp
enter
out
lcall
sbb
lret
out
and
pop
add
mov
push
pop
push
mov
adc
les
shrb
jo
adc
mov
scas
mov
adc
pop
push
jecxz
jecxz
inc
mov
mov
out
mov
sbb
outsb
call
aad
jne
mov
cmp
fcmove
mov
mov
pop
jo
arpl
jns
xchg
icebp
inc
mov
pop
push
cwtl
lods
ja
pop
insb
sub
fnsave
dec
dec
mov
frstor
loop
mov
jle
nop
push
mov
mov
cmp
scas
sahf
fcomi
fisubrl
mov
out
jne
dec
mov
jge
mov
jnp
pop
pop
lret
xchg
arpl
imul
jbe
cmp
std
mov
jo
fisttps
dec
mov
push
push
pop
jp
sbbb
js
test
out
mov
mov
inc
pop
push
out
loope
inc
xor
push
and
lds
jmp
and
repz
pop
or
fcmovu
xchg
push
hlt
jo
mov
push
mov
test
jae
fidivrs
mov
or
adc
pop
fsubr
add
jns
adc
mov
int
rcrb
push
inc
xor
jno
add
add
ljmp
pop
dec
stos
scas
ret
fwait
mov
faddl
or
out
sarb
xchg
ret
addr16
sbb
sbb
mov
cmp
push
push
push
sub
aad
movl
cmp
pop
push
mov
inc
scas
and
dec
mov
fbstp
xor
inc
xchg
mov
sub
in
fwait
insb
add
push
ss
fsubrl
mov
push
jb
inc
mov
cli
push
push
pop
mov
dec
xor
push
pusha
push
hlt
push
push
hlt
jle
sub
xor
dec
or
pop
xor
ret
pop
jbe
pop
mov
and
inc
jb
mov
pushw
dec
lcall
sti
xchg
adc
or
dec
and
out
bound
push
xor
mov
jb
push
dec
scas
jbe
pushf
les
dec
push
js
fldt
mov
pop
xchg
push
mov
aas
testl
in
push
into
push
mov
adc
dec
inc
jb
fmuls
pop
mul
push
cmp
pop
pop
jns
imul
and
jns
aam
js
push
mov
ffreep
mov
xchg
fistl
adc
lods
adc
and
or
pop
frndint
pushl
pop
mov
ror
out
cs
cwtl
xchg
jbe
mov
rcrl
jno
push
dec
sbb
jns
scas
sub
mov
shlb
add
dec
aaa
sub
xchg
jl
push
dec
sti
lret
add
out
mov
adc
std
and
test
mov
cmp
aam
pushf
inc
cli
cmp
adc
push
ja
pop
imul
cltd
mov
stos
es
fdivrs
add
icebp
addr16
lods
popa
jecxz
inc
push
xchg
mov
push
sbb
push
in
fisttpll
mov
hlt
rclb
xchg
cld
jae
jbe
out
cltd
mov
inc
pmaxsw
inc
xchg
mov
mov
push
cmp
cmp
adc
sub
int
lods
adc
xor
inc
lds
push
pop
xor
lahf
ret
push
rcrb
aaa
les
insl
mov
das
call
jmp
mov
jo
das
enter
fists
lock
in
mov
jne
shll
test
dec
out
test
xor
ss
pop
mov
test
and
lret
mov
call
test
shr
in
daa
pop
ja
test
adc
pop
sub
test
xchg
ficoml
std
addb
sbb
fdivrl
mov
and
lods
lret
xor
push
lods
sub
cli
test
je
es
scas
aam
jp
jl
mov
icebp
pop
es
dec
in
shrb
fisttps
fstpt
js
es
outsb
jg
jge
pop
lret
shll
jo
je
test
fdivs
xchg
push
fdiv
sti
adc
adc
xchg
cmp
sub
adcb
xor
add
adc
adcb
mov
sbbb
pusha
mov
dec
test
jbe
repnz
sub
pop
jbe
rol
xor
inc
pop
or
jo
mulb
scas
and
loopne
stos
clc
lea
push
out
cmp
test
inc
dec
fsubrl
shlb
mov
repnz
dec
xchg
dec
fdivs
jnp
mov
cwtl
in
cli
fisttpl
fisttpl
rclb
push
pop
gs
jp
daa
iret
or
dec
insl
or
mov
or
and
add
sarl
sub
xchg
cmpsl
mov
fwait
mov
into
inc
data16
leave
repz
push
mov
popa
ds
movsb
sbb
sub
not
adc
xchg
adc
add
cmp
bound
push
sub
cwtl
movsl
xchg
arpl
stc
lea
and
jge
mov
negl
imul
repnz
scas
add
andb
push
leave
jns
stos
pop
leave
jle
push
inc
xor
xlat
mov
or
pop
outsb
loope
gs
ss
test
push
insl
pushf
jno
lret
lods
and
rclb
incl
xchg
testl
jb
jns
lds
xor
bound
bound
or
clc
pop
cmp
sbb
movsb
mov
les
add
push
push
sub
jmp
mov
mov
mov
mov
icebp
mov
out
xchg
out
xchg
stos
dec
cs
test
push
mov
push
idivb
out
js
lret
repnz
xchg
repz
push
sub
insl
test
fistl
or
incl
movsb
or
jo
outsl
out
xlat
hlt
bound
xlat
shrl
loopne
push
gs
jl
pop
nop
pop
cltd
pop
nop
xchg
lahf
push
call
push
lods
subb
out
cmpsb
lahf
or
mov
add
outsb
cwtl
inc
lods
bound
sub
sahf
repz
xor
sub
jg
xchg
and
push
scas
adc
call
and
out
divb
jne
push
out
xchg
push
in
adc
sub
adc
mov
pop
mov
into
int
sbb
js
popf
sub
jbe
add
push
data16
adc
mov
xor
xchg
aad
pop
cmp
jmp
imul
das
repz
test
jo
mov
subl
sub
xor
mov
sti
mov
into
gs
jmp
popa
xor
adc
test
mov
inc
lods
loopne
rolb
lock
jae
xchg
in
repnz
in
aam
mov
daa
test
roll
or
scas
popf
icebp
sub
lods
pushf
dec
filds
and
xor
icebp
sub
test
cmpb
pop
jl
jl
sbb
andb
mov
fists
mov
xlat
imul
jae
fnstsw
mov
fisubs
jb
fwait
es
cmp
mov
test
mov
dec
mov
scas
and
sbb
subl
cmp
insl
mov
pop
cmp
cld
xorb
inc
inc
jl
test
pop
add
and
sub
fbstp
loop
inc
cltd
in
mov
pushf
fadds
xchg
gs
add
inc
push
sbb
mov
pop
and
xorb
loope
xor
adc
sub
sub
shll
dec
jnp
xchg
pop
aad
je
inc
and
stos
imull
cli
aaa
daa
or
mov
pusha
repz
hlt
in
out
pushf
lcall
xlat
pushf
movsl
pop
pop
xchg
int3
add
dec
fnsave
int
xor
dec
push
int
aaa
div
adc
leave
imul
mov
pinsrw
adc
aas
movsl
mov
jno,pt
fwait
cli
cli
in
push
cmp
int
aas
loope
adc
test
sti
mov
mov
lahf
push
push
inc
das
in
push
cmpsb
jge
fs
inc
sahf
xchg
out
adc
and
incl
sub
mov
dec
push
dec
pushf
or
add
cld
and
cmpsb
push
mov
sub
mov
xchg
push
movsb
add
arpl
lcall
add
loope
ljmp
out
pop
dec
inc
push
cmp
pop
pop
js
sub
pop
pop
dec
lods
xor
cli
imul
pop
dec
fs
mov
inc
stc
test
pop
inc
pop
daa
into
sahf
sahf
jb
inc
lret
mov
or
dec
sbb
xchg
sbb
sarb
shlb
add
mov
mov
stc
jno
inc
cmp
outsb
lret
test
out
jns
popa
cli
cmc
int3
or
add
ret
addr16
movsb
pop
jge
xchg
scas
jo
and
stos
push
adc
aaa
sub
mov
rclb
inc
inc
cli
fiaddl
sbb
leave
cmp
dec
sub
aas
pop
mov
mov
jo
or
cmpsb
movsb
add
pop
inc
repnz
lret
in
mov
lcall
arpl
das
dec
pop
sbb
pop
xor
add
sbb
mov
mov
call
add
fidivrl
rcrl
lods
mov
or
mov
inc
inc
jl
lock
lea
pop
push
leave
sbb
in
fsts
jo
cmp
xor
lods
cmp
mov
sub
les
inc
dec
jb
mov
test
add
add
push
lahf
mov
or
mov
mov
xchg
in
mov
outsb
push
xchg
enter
inc
jle
or
push
sbb
cmpsb
cld
sub
push
jg
xor
fildl
mov
insl
ds
test
call
mov
test
jp
ds
inc
mov
lods
jg
cmp
insl
divl
xchg
sub
pop
into
and
inc
sbb
push
inc
inc
popa
mov
dec
sbb
lock
je
inc
mov
sub
ret
sub
ljmp
pop
push
add
dec
ret
stos
add
fcomps
sbb
insl
scas
js
add
in
shrl
xchg
scas
imul
js
mov
mov
cwtl
xchg
mov
cmc
jge
stos
cwtl
scas
outsb
out
jbe
xchg
push
and
pop
dec
add
inc
pop
aas
js
mov
dec
icebp
stos
outsl
push
fistps
sub
xor
dec
sub
mov
adc
rolb
in
xlat
data16
jle
inc
inc
push
dec
dec
pusha
shrl
leave
repz
data16
negl
fyl2xp1
add
jge
or
xor
loop
mov
pop
pusha
nop
inc
ret
sub
or
stos
jae
inc
mov
adc
dec
sar
or
out
push
lret
aam
scas
movsl
inc
sub
lock
inc
sub
jp
sti
jae
xlat
das
push
adc
mov
or
repz
outsl
divl
in
mov
leave
adc
cmp
mov
ljmp
push
jno
mov
roll
or
lahf
inc
adcb
gs
mov
mov
bound
mov
jno
adc
mov
test
xchg
adc
cltd
dec
mov
or
jae
push
inc
and
cs
daa
inc
repnz
dec
lds
adc
shlb
pop
push
adc
push
jmp
int3
icebp
jae
popa
sbb
std
xchg
adc
icebp
aaa
jae
or
nop
inc
mov
daa
push
xor
mov
inc
mov
or
data16
or
fs
out
pop
adc
pop
push
or
dec
inc
icebp
jbe
arpl
sti
outsb
mov
test
fbstp
xchg
mov
test
ja
mov
pop
mov
or
mov
jg
ja
push
test
cmp
pop
cli
add
fmul
sahf
mov
addr16
jecxz
sbb
inc
daa
dec
and
xlat
lea
loope
stc
adc
stc
sbbb
arpl
jne
ljmp
sub
adc
push
mov
add
dec
fnstcw
imul
mov
fs
stos
xchg
adc
ljmp
sub
ret
add
adc
inc
sub
mov
movsb
dec
test
sub
xchg
pop
mov
and
push
orb
test
push
xchg
and
sti
pop
cltd
jnp
sub
xor
pop
mov
pop
and
fiaddl
mov
jp
jnp
cmp
in
xchg
mov
call
inc
adc
subb
pop
add
mov
icebp
icebp
inc
mov
xor
mov
shrb
stc
rcll
pop
jo
xor
inc
sti
dec
inc
xchg
push
sub
xor
cmpsb
jb
mov
jb
dec
call
pusha
mov
and
pop
fst
mov
adc
lcall
inc
in
fdivrs
iret
sbb
data16
mov
jle
ret
jb
je
pop
loop
inc
push
cli
addb
and
and
jecxz
in
imul
fwait
and
inc
in
xor
mul
jp
xchg
in
es
and
fadds
pop
xor
mov
mov
push
insl
mov
in
pop
lods
and
xchg
xor
or
in
and
inc
pusha
sub
sbb
lcall
push
jno
sub
and
hlt
rcll
dec
out
loopne
push
dec
pop
push
xchg
stc
loope
test
push
lock
mov
mov
inc
mov
shr
cmp
jg
pushf
jmp
inc
pop
pop
add
sub
inc
ja
lret
test
push
jge
mov
in
hlt
xchg
sbb
mov
test
dec
test
sbbb
je
je
lods
inc
mov
mov
mov
dec
in
adc
or
mov
or
mov
push
insl
aaa
push
sub
les
mov
les
jl
pop
popf
xlat
cmp
sub
adc
push
or
cmp
call
inc
cmp
aam
sbb
stos
cmp
pop
sub
inc
jg
cmc
in
mov
jmp
mov
inc
xlat
mov
fwait
sub
xor
cmpb
or
mov
or
sbb
pop
cmp
push
stc
fnstcw
mov
cwtl
jl
mov
add
mov
mov
lods
and
stos
pop
sub
inc
ret
pop
subb
aad
clc
fucomp
call
int3
sbb
stos
and
ret
inc
movsb
aad
jl
cmpsl
jle
inc
sar
xchg
ret
lcall
dec
scas
mov
dec
sub
push
adc
mov
ficoml
mov
xlat
mov
mov
cmp
add
cwtl
push
test
sbbb
fwait
xlat
ss
daa
xchg
push
jb
cmpsl
data16
dec
shl
stos
sahf
mulb
faddl
pop
imul
sub
outsl
mov
pop
imul
jnp
pop
xchg
mov
repnz
jbe
mov
xor
add
dec
mov
aas
shrl
cld
lods
dec
mov
pusha
xchg
jnp
cs
sbb
sbb
xchg
dec
insl
mov
pusha
mov
mov
test
push
aaa
insb
popa
sbb
pop
int
push
pop
dec
lcall
sbb
xor
lahf
push
adc
cmc
lods
and
mov
adc
mov
mov
repz
jl
jge
into
sbb
inc
rcrl
adc
fs
push
push
pop
jl
and
divb
or
mov
stos
adc
dec
jl
push
outsb
fucom
adc
dec
cmp
je
pop
gs
adc
in
dec
xor
iret
lds
test
jg
push
lock
loope
idivb
pandn
into
lock
dec
adcl
cmp
inc
nop
jmp
mov
jbe
adcl
out
mov
pop
pusha
cmpsl
sub
push
sbb
es
cmp
ret
mov
cltd
and
int3
out
add
jl
or
js
pop
lahf
sti
pop
in
popf
gs
sub
mov
jge
mov
push
outsb
inc
adc
jae
insl
lods
movsl
pop
mov
js
bound
add
add
xor
mov
daa
mov
fisttpl
mov
dec
push
dec
jnp
and
outsb
icebp
cs
sbb
mov
xor
aam
stos
add
push
int
adc
in
roll
mov
fadds
sbb
ja
fidivl
dec
xchg
shlb
xor
clc
adc
out
hlt
pop
movsl
in
lcall
ret
lods
cmp
dec
stos
xchg
js
pop
pop
nop
incb
pop
popa
jp
ljmp
lods
xchg
add
lods
in
dec
loop
mov
adc
push
push
mov
insb
adc
mov
clc
and
xor
or
aaa
jge
mov
rcll
movsb
push
adc
dec
js
jns
xchg
cmp
cmp
xor
pushf
xor
dec
sar
mov
mov
mov
cwtl
sub
popf
sbb
sbb
nop
mov
insb
std
pop
out
push
cmpsl
in
mull
dec
cli
lock
out
sbb
ljmp
push
arpl
pop
push
cmp
das
adc
inc
fs
shrl
iret
je
inc
in
cwtl
dec
mov
lcall
and
icebp
stos
and
shlb
xchg
xor
out
push
lods
ljmp
xchg
lock
hlt
in
imul
sti
push
lret
and
push
add
dec
xlat
lods
dec
xor
loop
inc
test
sar
mov
jnp
and
daa
je
imul
xchg
jmp
int
adc
mov
negb
and
add
js
mov
or
mov
aad
cld
push
lcall
mov
mov
pop
cld
mov
insl
outsl
in
stos
pusha
daa
pop
lods
inc
cmc
pop
movmskps
mov
inc
sbb
cld
inc
outsb
jl
sti
sbbb
nop
fistpll
fistpl
mov
mov
cwtl
inc
push
cmp
cmpsb
lods
lcall
xlat
lcall
push
mov
aas
mov
jno
pop
orb
mov
daa
xchg
ss
mov
les
sub
mov
into
pop
out
mov
js
xchg
adc
adc
and
test
mov
pushf
dec
ljmp
jbe
popf
push
outsb
lea
inc
dec
xchg
xchg
jl
scas
int3
shr
pop
pushf
idivl
mov
sbb
mov
or
dec
push
jle
mov
jo
add
popf
sub
out
aad
dec
fisubl
stos
or
std
je
inc
mov
xchg
pop
inc
xor
xor
xor
dec
or
jno
push
sahf
cmp
mov
jbe
cmp
push
mov
hlt
mov
xchg
scas
mov
push
xor
mov
dec
test
out
add
lahf
aam
fisubrs
xchg
sub
dec
pushf
xor
add
scas
repnz
lock
hlt
push
out
mov
adc
movsb
ror
pop
outsl
pop
inc
repnz
add
cld
xchg
cmp
nop
inc
fcmovu
inc
je
cmp
adcl
lret
ja
psllq
dec
inc
adc
lahf
mov
and
or
lahf
or
fdivrs
jp
test
fmuls
adcb
mov
xchg
mov
mov
xlat
idivl
inc
jp
rcr
jae
stos
ljmp
xchg
dec
jae
stos
ret
loop
ljmp
outsb
ja
lock
jno
int3
pop
sbb
ficomps
xchg
mov
dec
and
fldl2e
inc
jmp
mov
dec
sbb
add
sbb
rorb
mov
or
inc
repnz
mov
insb
dec
test
into
leave
ror
insl
inc
jb
dec
dec
jb
ret
dec
or
pop
movsl
outsb
mov
lahf
xchg
lods
test
out
sbb
sbb
pushf
or
mov
xor
or
shlb
xchg
jle
shr
jp
addr16
lods
add
mov
fisubl
inc
pop
jae
and
pop
imul
pop
sub
arpl
out
out
jg
cmp
addr16
adc
movsb
mov
test
or
test
jp
jnp
fnstcw
mov
shll
and
adc
ds
push
sbb
shrl
and
je
dec
test
outsl
mov
imulb
mov
dec
or
push
ret
mov
dec
sbb
sbb
lea
pop
pop
add
push
xor
mov
inc
ret
mov
pop
aaa
test
scas
ljmp
dec
dec
fimuls
mov
cld
ss
out
lock
inc
xor
xlat
fwait
ret
sbb
cs
inc
adc
inc
push
mov
sarl
mov
insl
mov
rolb
push
aaa
jae
sarl
cmc
mov
and
outsb
and
sahf
adc
push
cmp
test
movl
xchg
push
inc
mov
dec
lock
jb
data16
inc
repnz
xor
jmp
pop
cmp
stc
das
cmp
movsl
jns
je
add
ret
pop
cwtl
mov
cli
mov
into
cld
lcall
xchg
les
add
cltd
or
sub
xchg
loop
cmp
push
mov
loop
dec
dec
sahf
arpl
fcoml
push
dec
inc
ret
lock
js
in
mov
cltd
scas
pushl
jmp
jmp
hlt
int
push
cli
cmp
xchg
xor
fldcw
mov
in
and
or
inc
pop
mov
dec
movsb
jbe
mov
inc
adc
pusha
xchg
shrl
jae
mov
sub
test
lods
sarb
shlb
enter
xchg
and
fwait
imul
pop
out
movsl
dec
mov
cmp
or
pop
adc
adc
inc
push
test
hlt
scas
sbb
jp
mov
movsb
hlt
arpl
icebp
and
jl
mov
gs
gs
mov
divb
inc
test
adc
pop
rcrb
or
add
xor
or
jbe
adc
mov
mov
lea
addb
xor
cmpsb
push
adc
out
cmp
mov
mov
js
lea
xor
pop
les
loop
pop
add
mov
out
xchg
aaa
cmpsb
xor
or
sbb
push
xchg
adc
lcall
imul
adc
aad
adc
sbb
jns
mov
cmpb
cmc
adc
cmp
xchg
push
xchg
sbb
addr16
jge
xchg
xchg
push
inc
xor
inc
lods
xor
lcall
ds
jo
push
xchg
jae
aaa
cld
aaa
clc
push
or
lahf
leave
popa
or
loop
sbb
fnstsw
xchg
test
xchg
pop
ficoml
inc
cmp
stc
nop
mov
imul
xchg
sub
sahf
sub
aas
or
iret
lret
xchg
mov
add
mov
jl
call
inc
icebp
pushf
cltd
cwtl
add
inc
hlt
mov
jns
movsb
mov
pop
pop
sub
enter
cmp
mov
clc
pop
xchg
stos
add
mov
orl
push
push
sti
xor
cmovb
ret
pop
and
sub
adc
dec
imul
pop
jg
mov
mov
jge
ljmp
dec
lea
aad
sbb
repnz
dec
sub
fstpl
inc
mov
sbb
mov
je
jae
xor
imul
ds
dec
lds
pusha
inc
inc
lret
enter
repz
sub
out
jge
fxch
or
inc
fs
jge
lds
js
pop
in
addl
sbb
xor
and
pushf
jbe
test
jle,pt
dec
push
sub
mov
or
sti
xchg
push
leave
cmpsb
addr16
mull
sub
aam
add
gs
push
call
shll
mov
dec
adcl
cmpsl
adc
sub
sub
xlat
bound
mov
dec
sub
scas
and
test
inc
xor
addl
loopne
lods
cmp
fidivs
mov
xor
jle
dec
fistps
sub
jne
adc
jns
sti
pop
mov
es
xchg
sub
push
push
pop
mov
xor
cli
pop
pusha
xor
call
sbb
mov
adc
aad
rcll
push
mov
movsb
bound
or
xchg
jo
inc
cmp
movsl
or
fwait
les
out
inc
out
gs
push
xor
rcrb
out
mov
fnstcw
imul
jle
xor
dec
pop
loopne
rcrb
loopne
in
mov
lret
xorb
ds
jno
inc
ret
repnz
mov
cmp
and
adc
test
cltd
cmp
xchg
out
dec
fcmovnb
aas
mov
add
incb
mov
mov
cwtl
mov
sahf
push
xchg
filds
push
out
mov
pop
mov
mov
adc
inc
dec
cmp
imull
sub
lock
pop
int
jmp
xor
push
lods
fs
repz
sub
fdiv
daa
add
sbb
out
push
or
mov
pop
pop
mov
mov
pop
jmp
cmc
loop
fmull
mov
cld
insb
pop
outsb
es
push
dec
fwait
pop
dec
mov
push
daa
add
es
add
mov
xor
dec
scas
sbb
mov
arpl
xor
xor
cmp
out
sub
dec
dec
push
jle
shrb
xor
dec
lea
stos
addr16
test
repz
inc
out
push
stc
and
jg
in
pop
mov
xchg
sub
xchg
adcl
dec
aam
jae
popf
add
dec
inc
in
jo
into
pop
into
xchg
sahf
xor
mov
xor
cltd
arpl
cmc
pusha
in
addr16
inc
mov
rcl
mov
sub
pop
adc
cmpsb
mov
xor
cmpsb
add
inc
sbb
xchg
scas
mov
and
cltd
pop
jb
push
daa
jmp
pushf
push
out
hlt
cmp
cmp
in
or
push
mov
or
jmp
pop
inc
test
push
sahf
push
add
sub
mov
sbb
sub
adc
loope
xor
movsl
xchg
push
pop
inc
push
mov
bound
insb
pop
jnp
inc
mov
push
mov
mov
dec
xchg
fists
and
insl
pop
push
and
push
lods
js
popl
enter
mov
int3
nop
or
or
gs
xchg
bound
rol
push
sub
filds
or
inc
test
add
jnp
lods
xorl
or
mov
xor
call
pop
test
lea
loope
mov
push
neg
sbb
aad
mov
movsb
xchg
dec
aaa
add
add
inc
imul
pop
dec
pop
mov
jb
dec
out
push
int
xor
repz
sub
cs
out
xchg
pop
loopne
adc
jbe
test
scas
je
sbb
cwtl
mov
pop
iret
jb
icebp
dec
inc
lcall
fbstp
hlt
jbe
frstor
imul
iret
jo
and
xchg
push
pop
or
cmp
sub
ds
xchg
mov
xchg
xchg
lret
outsb
outsb
out
shlb
jg
cmc
and
pop
pop
loop
lcall
ds
inc
push
push
dec
sbb
out
arpl
mov
je
push
fbstp
adc
jmp
popf
mov
inc
jge
cmpsb
fs
repz
dec
mov
sbb
das
sub
ret
ja
push
push
inc
out
xor
outsl
pop
aas
or
push
daa
enter
inc
bound
outsl
cmpb
pop
dec
stos
push
gs
clc
jg
fwait
mov
jle
icebp
push
mov
cs
scas
or
or
dec
cmpb
jge
call
inc
pushf
cmp
sbb
inc
and
imul
mov
sub
insb
adc
lret
addr16
or
out
rcrl
fidivl
jg
pop
sbb
dec
mov
ss
addr16
or
add
inc
insb
xor
xor
lea
adc
mov
jbe
add
pop
sub
jmp
cwtl
dec
jmp
ds
adc
movsb
popa
mov
adc
sbb
sbb
ss
adc
mov
mov
ss
andb
mov
into
and
xchg
sbb
mov
jge
push
inc
lea
sub
lcall
scas
mov
add
ljmp
in
test
loope
in
mov
jne
rorb
adc
push
dec
jne
outsl
mov
sbb
rcll
adc
sub
cltd
or
arpl
adc
pop
mov
xchg
sbb
jo
lea
fisubrs
mov
mov
testl
inc
xor
jmp
lea
pop
sub
insl
lods
xchg
in
lahf
cmp
cltd
mov
mov
movsb
adc
pop
jae
call
js
gs
hlt
out
mov
out
aaa
sbb
stos
scas
push
leave
ss
outsb
outsb
pop
or
into
iret
int3
mov
lret
out
mov
add
xor
mov
pop
cmpsl
dec
lds
lea
testb
into
dec
push
fucomi
mov
in
mov
popf
xchg
mov
add
out
out
pop
loope
push
out
daa
mov
mov
push
mov
cmp
hlt
lods
jle
cmp
jne
in
outsb
cmp
pop
loop
int3
dec
mov
cmpsl
and
dec
jge
mov
scas
jb
xchg
jb
lcall
aaa
adc
and
loopne
dec
jecxz
dec
or
es
jnp
sbb
pop
pop
mov
je
pop
adc
js
xchg
insl
sub
aas
out
ljmp
test
adc
sub
push
loope
push
cmp
dec
ficomps
inc
out
mov
pop
pop
imul
push
lret
adc
mov
sub
loope
fsubr
adc
sub
shlb
add
fistl
sbb
js
cltd
push
cmpsb
pop
inc
or
loop
hlt
filds
push
pop
inc
fcom
lds
repz
lcall
add
test
test
jg
cmc
and
ljmp
imul
fiaddl
cmp
pop
sbbl
pop
sti
fsubl
cmp
hlt
das
push
cwtl
xor
sbb
pop
ja
adc
or
or
pop
xchg
lcall
jnp
or
pushf
ret
movsl
and
popf
or
sbb
pop
iret
mov
xchg
pop
push
popf
xor
das
sbb
xor
pushf
pop
in
rorb
fdiv
pushf
js
pop
push
push
sub
pushf
or
ss
jecxz
into
iret
aaa
dec
inc
sti
mov
daa
mov
pop
xchg
cmc
outsl
aaa
push
pop
jp
sbb
mov
or
xor
xchg
push
lcall
addl
int3
pop
test
push
adc
pop
stos
out
movsb
ljmp
inc
ss
push
fs
push
mov
jg
adc
mov
testb
imul
adc
fdivs
cld
add
and
and
je
sbb
cmc
dec
push
popf
jge
mov
add
dec
pop
lds
and
fdivs
push
jmp
push
push
ficoml
and
jle
es
loopne
pop
enter
mov
xor
fimull
outsl
cli
jo
fnsave
pop
push
sbb
sbb
mov
jecxz
adc
test
pop
cmpsl
shll
mov
sti
lret
pop
xchg
out
nop
fs
and
inc
jp
cmc
cltd
push
jbe
sti
test
movsb
pop
fwait
je
mov
loop
dec
fadds
rorl
jo
loop
and
dec
imul
push
adc
cmpb
ja
adc
fs
xor
xorb
add
ja
mov
pop
jg
add
nop
andl
push
adcb
frstor
ja
push
inc
inc
mov
mov
dec
ret
mov
fisttps
lods
orb
pop
outsb
mov
add
ja
enter
mov
or
mov
inc
sub
sub
cli
iret
pop
popf
add
add
cmpsb
les
dec
andb
push
pop
add
add
test
insl
fstps
sub
rorl
mov
xchg
jl,pn
mov
and
test
xchg
push
mov
push
adc
fsubl
in
jns
ficoml
leave
outsl
pop
xchg
xor
bound
pop
shlb
pop
sub
decb
fs
push
lcall
add
aad
data16
std
push
test
mov
mov
imul
jle
mov
cmc
xor
outsb
cltd
out
shll
jno
mov
and
push
popa
stc
dec
fstl
sbbl
fxch
imul
imul
lcall
and
enter
lcall
sbb
xchg
inc
or
push
xor
negl
mov
xchg
dec
adc
into
mov
push
xorl
lret
sub
push
ds
lods
jo
xchg
into
adc
sbb
xor
pop
ss
add
mov
and
test
jmp
daa
xchg
sub
or
cmp
inc
mov
js
out
insb
dec
stc
dec
or
xchg
mov
insl
in
repnz
ds
push
repnz
mov
jp
out
leave
fwait
dec
pop
pop
jecxz
bound
mov
add
imul
mov
or
dec
shlb
and
movsl
and
mov
pop
xchg
push
sbb
out
mov
mov
ss
mov
test
adc
test
xlat
xor
cmp
popa
es
mov
and
lock
lods
mov
jecxz
pop
sub
stos
andl
addl
ljmp
notl
mov
add
and
jb
adc
push
out
leave
in
rcll
or
adc
push
or
xor
sti
pop
nop
and
imul
inc
cmpl
pop
sbb
mov
enter
sbb
out
add
testl
popa
lret
xchg
inc
jo
and
mov
gs
mov
add
leave
jl
mov
out
pop
and
nop
sub
lahf
sarb
fisubrl
aam
cmp
aad
add
in
sti
sub
es
jp
cltd
push
jae
shl
iret
add
mov
mov
xchg
mov
push
int
cli
xor
shll
sub
hlt
std
out
sbb
xor
cmp
lea
cmc
push
add
cmp
pop
pop
cmpsb
hlt
loope
jbe
addr16
sbb
jbe
mov
ss
sub
in
scas
adc
sub
or
mov
xchg
push
and
jle
mov
pop
movsb
out
pop
push
pop
pushf
and
arpl
ficoms
jecxz
mov
lret
insl
inc
out
std
fnstcw
bound
xchg
xchg
cmpsl
cwtl
mov
lret
cs
sub
shlb
sub
cmp
out
adc
in
mov
push
push
mov
nop
cmpsb
push
mov
pop
and
xchg
fistpl
jb
mov
sbbb
mov
xor
movb
test
mov
adc
and
sub
es
in
scas
lea
sarb
aam
sti
xchg
jp
ret
push
out
outsb
dec
xor
fists
shrb
out
or
out
sub
pop
xchg
inc
push
push
sahf
fdivrp
mov
add
das
scas
xchg
ja
sbb
push
add
int3
outsb
mov
inc
cmp
lock
int
popf
jae
sub
add
popl
xchg
or
je
repnz
dec
push
lret
lcall
stos
rorl
popf
rol
fisubrl
loope
mov
repz
inc
out
mov
xor
push
add
roll
outsl
mov
movsb
scas
out
inc
or
or
sbb
insl
scas
xor
mov
jbe
pop
fdivrl
ffree
loope
push
orl
ret
imul
scas
das
movsl
cmpsl
std
test
lret
inc
or
push
sti
cmp
imul
aas
sub
cld
fstps
sbb
cmc
cmp
movsl
and
jns
mov
inc
pushf
lret
jmp
mov
pop
xor
mov
cmp
push
mov
out
jmp
in
dec
pusha
push
ss
aaa
addr16
js
ds
push
pushf
lret
inc
add
push
pop
std
jg
mov
test
mov
and
xchg
cmpsb
ljmp
xchg
mov
pop
shlb
xchg
lret
dec
cmp
add
imul
mov
std
mov
scas
pop
lods
mov
xchg
cmc
cs
popf
loopne
shl
add
dec
or
cmp
jmp
mov
pop
mov
or
dec
pop
adc
fsubr
iret
repnz
fs
sahf
sub
stos
sahf
loopne
push
loope
ds
iret
shll
cwtl
mov
jecxz
daa
and
lcall
push
push
jb
mov
mov
jb
pop
icebp
decl
push
gs
aas
adc
lods
bound
ret
pop
subl
mov
mov
xor
pop
jg
aad
push
jl
aad
incl
jnp
cmp
inc
daa
add
filds
jbe
sub
push
jecxz
push
jb
xchg
xchg
push
imul
or
xor
mov
pop
jo
mov
les
repnz
pop
outsb
push
loopne
sahf
in
rcr
cmp
fisttps
arpl
xchg
sub
push
sub
inc
testl
and
icebp
xchg
pop
aad
pop
data16
jo
jp
movsl
push
roll
jl
mov
stos
xchg
xchg
pop
jne
jmp
xchg
adc
push
cmpsl
and
popf
stc
or
push
inc
mov
je
sbbb
das
push
mov
cmpsl
test
jmp
outsb
xor
xlat
adc
mov
push
push
mov
ret
les
xchg
ficoml
sti
xchg
push
xchg
dec
sbb
pusha
adc
shll
mov
ss
inc
sub
push
adc
jge
loop
dec
cmp
mov
dec
arpl
mov
xchg
fistps
pusha
jge
lods
mov
dec
xor
pop
lret
iret
cwtl
daa
xor
xchg
stos
stos
pop
sbb
jbe
pop
les
loopne
xchg
cmpsb
sub
pop
ja
ljmp
lds
test
jnp
fistpll
addl
sub
jg
dec
sub
shrl
fisubrs
and
test
ja
sbb
and
push
rorb
or
fldl
sub
aad
jb
mov
inc
adc
dec
aam
lods
mov
fstpl
rorl
or
sub
outsb
nop
ss
clc
adc
dec
leave
js
jns
repnz
arpl
xorl
stos
test
int3
fs
scas
mov
out
mov
call
mov
subl
out
in
push
push
ret
inc
xchg
incl
add
sti
xor
lcall
xchg
bnd
call
push
mov
cmp
xchg
psubb
js
icebp
int3
pushl
jb
pop
jb
and
into
hlt
fcomi
fucomp
and
popf
add
mov
mov
push
sbb
dec
fimuls
ss
out
stos
xor
jp
add
inc
add
lahf
push
stc
pop
pop
sub
mov
test
push
imul
mov
sahf
jmp
pop
add
xchg
xchg
sub
test
sbb
add
maskmovq
imull
repnz
cmp
rclb
xchg
xor
pop
inc
cs
mov
jns
in
adc
cmp
mov
pop
and
sbb
mov
dec
fldcw
int3
xor
mov
or
out
sub
movsl
push
aas
out
lea
adcb
in
pop
aam
xchg
cmc
scas
idivl
or
pushf
jg
xchg
aas
orl
jbe
xor
mov
gs
cmpsb
aad
dec
mov
add
adc
scas
insl
hlt
push
xchg
cli
cmpsb
jno
inc
mov
sub
xchg
rcr
test
and
push
mov
jbe
dec
xchg
nop
cwtl
mov
jno
lods
imul
iret
xchg
pop
fcompl
inc
fs
and
inc
imul
out
sub
cmp
in
popa
lods
xchg
and
repnz
sbb
sub
adc
test
add
fwait
leave
or
jo
addl
rcl
les
adc
dec
mov
push
xchg
pusha
out
loop
add
add
gs
mov
xor
pop
xor
inc
cs
jae
pop
lea
pop
test
push
add
push
scas
enter
sbb
outsb
adc
xor
dec
popa
cmp
push
mov
cmp
scas
incb
or
cli
mov
pop
inc
mov
ret
and
cmp
mov
sbb
add
sub
pop
mov
inc
sbb
insb
inc
dec
push
aaa
and
scas
mov
mov
xor
shl
das
fwait
inc
je
mov
ret
iret
adc
sbb
imul
pop
pusha
pusha
popa
mov
ficomps
cs
xchg
insl
mov
push
or
lret
mov
add
add
scas
shl
ret
outsb
negb
arpl
gs
adc
sbb
inc
std
xor
test
inc
test
cld
pushf
or
aaa
into
inc
rcll
mov
iret
cmp
in
add
dec
sbb
add
push
cmc
push
and
out
test
inc
std
adcl
aad
xchg
mov
lea
sub
fsubrs
jl
pop
mov
fsubr
cld
gs
scas
mov
pop
mov
bound
mov
fisubs
xchg
jmp
pop
or
and
mov
jnp
sbb
xlat
popa
fmull
or
push
dec
fistpl
cs
push
jecxz
push
repnz
fs
jno
mov
cld
mov
negb
divb
dec
imulb
push
cld
fistps
imul
or
int3
jle
sbb
cmpsb
xor
push
jnp
roll
adc
gs
test
mov
jl
xchg
xchg
lret
dec
iret
stos
cld
or
or
pusha
jno
int
mov
rcl
mov
jne
mov
rclb
loope
and
dec
add
jle
and
and
lods
leave
fdivrs
inc
fnstenv
mov
jb
add
js
mov
push
inc
cmc
scas
mov
push
mov
cs
pop
call
mov
mov
mov
test
sub
int3
xchg
xor
mov
mov
adc
mov
addr16
dec
pop
in
dec
shr
and
std
xchg
jl
andl
lret
mov
pop
mov
pop
loop
sub
pop
cmc
inc
jmp
inc
fwait
pop
push
jo
xchg
pop
xchg
aaa
dec
sahf
aaa
jne
xor
rorb
mov
aam
mov
jnp
fstp
jb
cmp
jle
inc
test
imul
mov
pop
test
add
xchg
iret
enter
scas
inc
fucomp
add
lret
cltd
repz
jp
xor
data16
xorb
xor
mov
push
imul
test
std
jge
pop
cmpsl
pop
push
jno
dec
inc
inc
prefetcht1
sbb
jl
cmp
mov
inc
out
dec
fcomps
or
xchg
stos
sti
push
shrl
sbb
mov
sbb
push
add
insl
ret
xchg
adc
test
or
xchg
mov
insl
lds
push
fnstcw
and
stos
xchg
or
stos
decl
mov
sbbb
stos
out
mov
aaa
stc
inc
ret
add
mov
mov
fwait
mov
inc
aam
cmp
adc
inc
mov
jmp
dec
dec
dec
pop
cli
xor
scas
cli
cli
sub
fdivr
and
fsubrl
inc
js
std
arpl
xor
jo
jbe
test
inc
out
shl
das
pop
fisttpl
jp
jg
fs
mov
pop
lock
mov
mov
dec
sar
lret
popf
stos
and
jae
ror
iret
daa
pop
mov
nop
lahf
out
and
sbb
fstpt
jmp
cltd
inc
push
lret
fcomps
cld
adc
test
test
push
es
mov
jno
pop
sub
xor
lods
es
into
das
test
ja
jp
outsl
outsl
adc
push
stos
cmp
and
movsl
cwtl
fdivl
je
adc
std
out
sbb
inc
in
dec
mov
mov
pusha
push
push
mov
push
popl
stos
mov
jno
mov
das
in
and
cmp
dec
in
pop
nop
cmc
das
in
lods
cmc
aad
sbb
cwtl
and
xor
hlt
movsl
and
lock
lods
jg
and
pop
sbb
clc
jns
outsb
icebp
xchg
jle
out
fcoml
stc
xlat
jecxz
cmpsb
add
pop
cmp
dec
push
pushf
sbb
out
mov
sbb
push
hlt
xchg
cmc
popa
cmp
push
sti
and
test
and
clc
xlat
outsb
outsl
fdivl
mov
push
adc
mov
or
inc
hlt
arpl
cmp
pusha
outsb
inc
pusha
out
std
sbb
nop
xor
in
mov
lock
fwait
mov
jp
lret
mov
popa
push
push
sarb
loop
mov
loope
mov
loopne
pop
cli
dec
lret
pop
repz
adc
cmc
cmpsl
lret
subl
jae
sub
sbb
and
test
adc
jp
fiadds
lock
add
repnz
mov
sbb
inc
cld
jmp
jle
and
imul
rclb
insb
mov
test
cmp
push
repnz
popa
dec
mov
fstp
cwtl
setns
fcoml
sbb
sti
lea
les
notl
pop
mov
ja
push
shrl
dec
xchg
aas
adc
lods
shl
pop
inc
stos
or
leave
push
insb
sbb
sbb
jns
fistpl
inc
xor
stos
adc
mov
and
xchg
pusha
div
jae
std
pop
clc
xchg
test
stc
cmp
mov
pop
arpl
mov
jp
add
loop
fisubrs
jle
insb
cmp
fwait
push
mov
cmp
imul
adc
out
lock
and
mov
subb
or
push
and
movsb
fsub
sbb
das
sbb
or
pop
push
daa
push
roll
fbld
sub
xchg
out
dec
addr16
leave
sbb
sbb
push
dec
cmpsb
lods
mov
fidivs
repnz
mov
xchg
mov
lods
imull
push
std
std
lcall
push
push
mov
pop
xchg
mov
cld
pop
xor
jp
push
es
adc
leave
repnz
rcl
cli
inc
mov
clc
push
and
and
fsts
xchg
cmp
jnp
push
xor
sub
lret
mov
sarb
repnz
push
lock
push
jns
jge
out
and
js
sbb
adc
enter
mov
add
rcrb
lcall
rcr
sub
push
mov
and
jns
xor
or
fistps
fimull
stc
test
arpl
popf
mov
notl
leave
pop
cmp
movsl
nop
cltd
and
or
scas
lea
or
inc
dec
xorb
ror
mov
dec
ja
mov
xchg
icebp
orb
bound
dec
inc
xchg
jg
idivb
jae
enter
lods
inc
push
testl
pop
into
adc
arpl
pop
pop
jmp
add
dec
lret
sub
mov
stos
jne
movsl
mov
flds
inc
pop
lea
scas
cmpsb
xor
into
adc
dec
lret
pop
cltd
aad
ret
stc
pusha
aaa
mov
insb
push
lcall
jle
sbb
call
xor
push
and
xor
popf
loop
cmp
sbb
inc
ret
pop
test
mov
mov
push
decb
cmp
fstps
les
xor
jmp
pop
or
push
dec
xchg
push
popf
cmp
or
mov
sahf
jo
mov
nop
cmp
xor
or
mov
jne
mov
jmp
and
push
mov
pushf
dec
aas
lahf
mov
mov
lahf
pop
xchg
inc
fidivl
push
notb
pop
push
mov
decb
ss
ds
xor
aaa
and
and
rcll
jae
pop
adc
or
sbb
gs
inc
cmpsl
sahf
sbb
jnp
into
or
cmp
lods
js
xchg
xchg
dec
outsb
sub
sbb
lods
lahf
mov
daa
push
cmc
inc
call
ds
mov
fwait
pop
dec
mov
mov
jne
in
sahf
imul
cmp
mov
divl
and
scas
mov
inc
xor
pusha
sub
movb
jg
mov
das
push
out
xorl
sbb
je
adc
stc
insb
inc
mov
out
mov
dec
sbb
ret
les
mov
xchg
rol
ljmp
mov
inc
scas
sbb
mov
dec
jmp
cli
cmpsl
xchg
dec
sbb
test
imul
imul
jb
and
insl
sti
inc
or
sbb
xchg
or
call
mov
daa
stos
dec
int3
ret
pushf
fwait
lahf
sbb
pop
fdivp
rolb
sbb
movsl
lock
stos
inc
jns
testl
leave
inc
dec
pushl
daa
pop
into
test
cmp
aaa
xchg
enter
mov
adc
adc
ja
mov
or
aas
jno
imul
inc
out
aad
adc
adcl
es
sbb
jbe
sti
mov
scas
fdivl
adc
test
mov
in
jp
inc
xor
pop
and
xor
stc
lea
sarb
ljmp
ds
pop
mov
cmp
pop
sti
or
add
addr16
and
fimuls
scas
sub
test
push
std
xchg
cmp
out
test
inc
xlat
fwait
psubq
cmp
clc
test
pop
cmp
add
addr16
test
mov
mov
sbb
cmp
jle
xchg
push
mov
cmp
call
xor
mov
dec
call
mov
push
ljmp
ja
mov
xor
daa
jg
add
daa
pop
dec
push
int
or
lcall
mov
jg
mov
sub
js
ljmp
dec
fistl
mov
sbb
addr16
xchg
push
testl
hlt
cmpsb
dec
loopne
imul
jecxz
les
xor
xchg
divl
rolb
inc
test
test
lds
pop
hlt
insb
push
mov
cmc
in
inc
cld
rclb
mov
inc
hlt
add
loope
in
push
cmpsb
loop
fwait
pop
loopne
adc
xchg
in
push
lcall
or
mov
xchg
cmc
xor
pop
arpl
ds
jp
lods
mov
pop
roll
jno
push
jecxz
out
es
sahf
les
and
mov
aad
mov
mov
fsubrs
fnstsw
mov
push
lods
xchg
cld
stc
jg
in
pop
aas
dec
and
imulb
aad
aaa
lret
push
pop
jecxz
cmp
mov
fs
mov
outsl
ret
cltd
out
jle
repz
dec
inc
repnz
xchg
xor
mov
add
adc
jnp
scas
pop
test
int
int3
cli
push
fnsave
bound
and
dec
push
adc
push
scas
negb
dec
and
add
cmp
popf
loop
push
mov
shr
pop
inc
mov
cmc
xchg
pop
xchg
sub
jecxz
insb
sub
fsub
psubq
pop
cmp
fstpt
pop
push
sbb
dec
mov
repz
adc
stos
sbb
pop
or
push
sarl
and
sub
out
push
je
dec
lret
jmp
addb
jmp
and
inc
divb
notb
xor
xor
push
fistpll
stos
in
adcl
testb
push
iret
into
mov
sbb
call
loop
out
dec
ret
jb
jmp
xor
jb
rcrl
sbb
das
push
mov
xchg
hlt
fnstcw
into
loop
add
mov
jecxz
loopne
mov
mov
scas
inc
pop
sahf
xchg
push
sbb
into
leave
stos
pop
mov
push
inc
mov
div
es
sub
cmp
fcmovnb
dec
cmp
out
outsb
insl
push
adc
mov
es
push
lods
cmpsb
mov
shl
out
data16
xchg
int
sub
pop
cmpsl
push
lret
jg
mov
aad
aam
stos
cwtl
xchg
jns
mov
xchg
movsl
hlt
jl
dec
mov
and
fstpl
jge
push
divb
out
and
jae
pusha
xchg
cs
jo
cmp
jg
pop
aas
inc
push
in
mov
and
loopne
test
insb
adc
push
popa
mov
xchg
mov
hlt
pop
cmp
add
scas
dec
and
jmp
in
sub
jb
inc
push
jle
sbb
lods
addr16
adc
jbe
mov
test
inc
imul
sub
mov
into
jno
test
outsl
lods
or
or
into
imul
xor
insl
dec
push
xlat
pop
dec
sar
xchg
add
mov
jo
movsb
or
icebp
ds
adc
jae
divb
repz
push
idivl
iret
pop
mov
pop
inc
in
js
jl
jge
jnp
scas
fcoms
mov
outsb
sub
inc
xor
fldt
and
les
xor
jle
call
out
fwait
cmp
add
dec
pusha
push
fxch
lret
xchg
nop
aad
xor
js
cld
xlat
clc
or
sub
xor
test
shrb
outsb
cmp
xor
mov
inc
push
in
in
data16
lea
cmp
push
jb
je
push
dec
imul
mov
sub
pop
fsin
push
cltd
push
mov
inc
lahf
test
dec
scas
hlt
pushf
nop
ljmp
inc
mov
mov
jo
out
cmp
mov
jp
dec
mov
pop
jmp
cmp
fwait
pop
lods
ret
mov
lret
arpl
loop
lods
pop
mov
lock
fisubrs
movsb
dec
aam
mov
sbb
or
pushl
mov
sbb
out
push
in
add
les
pop
outsb
mov
and
jg
rcrb
lds
out
stos
bound
gs
sarl
xchg
insl
inc
mov
pusha
scas
mov
dec
lods
sub
mov
pop
addr16
fstpt
push
push
scas
and
int
aam
in
js
mov
sub
xlat
sub
adcb
pop
sbb
sarb
sbb
cmp
jno
adc
gs
arpl
cmp
or
shr
xlat
xchg
jl
out
dec
das
movb
or
cmp
xchg
inc
mov
ljmp
mov
daa
xchg
push
in
dec
adc
dec
imul
sarb
mov
call
js
cmp
add
dec
fs
mov
pop
clc
sub
mov
test
neg
adc
aaa
push
rorl
add
sub
and
arpl
outsl
cltd
js
mov
movsl
jmp
cmpsb
or
stos
cmpsl
test
or
or
add
sub
insl
cmp
jns
mov
aam
dec
jge
jne
out
in
sbb
outsl
pop
xchg
xor
xabort
xchg
pop
mov
test
into
insb
sbb
inc
popf
cltd
filds
sbb
out
lret
lds
dec
rcrb
aaa
je
inc
aaa
jecxz
mov
insb
jp
jno
and
fs
xor
push
daa
in
es
and
dec
hlt
pusha
sbb
adc
dec
adc
lods
stos
in
out
adc
rcl
popa
loop
or
mov
xor
stos
sbb
or
jecxz
rolb
enter
lods
or
push
scas
xchg
rorl
mov
pop
js
testb
mov
test
fcoml
and
sbb
loopne
out
add
inc
fisubrl
push
mov
ljmp
arpl
popa
sahf
iret
add
lret
and
xor
mov
mov
xchg
nop
jmp
xchg
xchg
bnd
test
mov
adc
jbe
lock
dec
pop
add
mov
lods
imul
std
popa
cmp
mov
cmp
lods
jle
push
or
xor
xchg
inc
je
inc
je
fisubrs
add
push
jb
call
pop
jp
imul
cmp
dec
in
arpl
inc
jno
jge
in
pop
pop
mov
lret
xor
xchg
outsb
popa
mov
lcall
dec
bound
ret
or
test
jno
xchg
addb
cmp
das
push
es
adc
jp
pop
push
in
je
cmc
adc
mov
add
dec
int
xchg
xor
test
push
loopne
inc
enter
push
adc
enter
jmp
mov
in
mov
dec
test
loopne
sub
push
cmp
and
iret
dec
hlt
and
mov
lcall
fsubr
test
fmuls
mov
push
lahf
pop
out
jp
xor
rol
or
inc
xchg
ret
inc
insl
outsb
and
mov
loopne
nop
sbb
jg
test
push
ret
dec
adc
pop
inc
sbb
or
pop
scas
xor
popf
outsl
xor
pushf
jbe
xor
jle
pop
hlt
and
lods
dec
mov
adc
xor
pusha
jne
insl
adc
jle
sub
sub
aad
je
dec
push
clc
sbb
je
sbbb
test
xlat
mov
jge
orl
push
and
dec
and
lods
jge
pop
sahf
jnp
adc
mov
push
shlb
loopne
pop
ljmp
lret
mov
push
cmp
hlt
push
shrb
xchg
test
aas
mov
push
inc
and
pop
lret
add
loope
fidivrs
mov
sbb
pcmpeqb
mov
sub
mov
push
inc
dec
leave
rcll
out
jp
testl
and
mov
aam
push
out
adc
adc
pusha
mov
mov
pop
xchg
test
call
repnz
loopne
clc
xor
pop
xor
mov
loope
cltd
pusha
in
dec
adc
push
push
sbbb
outsl
fcmovne
jl,pt
push
jnp
insl
cmp
aaa
loop
into
inc
inc
and
sbb
std
jbe
jecxz
push
inc
imul
imul
sahf
pop
push
sub
adc
mov
mov
out
arpl
lock
out
fidivl
or
pop
ds
lods
loop
sub
pop
pop
sbb
pushf
inc
addr16
outsb
xor
lods
dec
adc
sbb
mov
xor
rcrb
movsl
cmp
xchg
add
jge
xchg
cmp
flds
ret
pop
into
mov
sub
sbb
test
sahf
int
dec
scas
test
loop
sub
jg
orl
pushf
or
out
repnz
jp
lea
xchg
decl
cmp
imul
repz
js
push
iret
dec
mov
add
pop
arpl
mov
adc
xchg
std
xchg
das
or
xchg
xor
sbb
cmpsb
icebp
mov
add
bnd
aaa
outsl
mov
xor
hlt
sbb
inc
sub
pop
movsb
push
lahf
js,pn
inc
pop
addr16
lahf
movsb
scas
test
push
clc
int
fs
pop
pop
mov
lods
insl
loop
ss
stos
mov
fildll
lcall
fstps
fcompl
pop
xchg
xchg
rcr
das
test
lea
mov
inc
jmp
int
pop
push
xor
jmp
popf
out
aad
loopne
cmpl
fcmovbe
cs
out
push
xchg
fwait
add
es
sti
into
out
lock
and
sti
adc
pop
clc
out
sbb
stos
cmc
mov
ret
and
js
int3
inc
pushf
pop
data16
je
lcall
jl
cmp
xor
ret
into
jno
or
scas
sub
mov
enter
inc
add
fistpll
ret
bound
xchg
testb
lock
add
unpckhps
dec
or
and
das
sub
pusha
enter
mov
and
pop
nop
iret
mul
jmp
inc
push
mov
stc
pop
xchg
push
ja
rcll
ss
sub
add
into
cmp
add
mov
out
lcall
dec
dec
push
xchg
xchg
dec
call
std
mov
shll
imul
xchg
dec
in
testl
pop
push
push
xchg
and
push
bound
lea
dec
popa
mov
pop
jl
pop
test
xchg
repz
ljmp
add
push
mov
inc
test
adc
leave
xchg
int
fwait
pop
mov
jno
bound
aaa
addb
scas
cmpsb
mov
dec
mov
sub
lcall
jmp
mov
std
movsb
cld
repz
cld
push
cwtl
scas
loopne
stos
fcoml
jge
and
sub
mov
mov
add
dec
xor
ficompl
inc
andb
and
outsl
in
gs
inc
pop
enter
mov
mov
cmpsl
sub
ret
clc
jmp
cmp
mov
shl
cmp
mov
mov
shlb
xchg
add
into
ds
cmpsb
mov
lcall
and
dec
mov
xchg
adc
ljmp
push
dec
push
loopne
cmp
clc
arpl
xchg
cmp
sti
jo
sbb
and
add
jns
adc
sub
inc
or
pop
jne
ljmp
movsb
aas
add
out
sbb
icebp
push
xchg
xchg
push
lret
cltd
inc
add
inc
push
mov
loope
mov
aad
xchg
fwait
and
sahf
push
mov
mov
sbb
sub
test
push
pop
cmp
loopne
and
adc
lods
adcl
sub
sti
icebp
mov
inc
repnz
mov
aaa
repz
je
loop
ja
add
icebp
lods
inc
ret
or
mov
dec
popf
dec
sbb
test
pop
and
sbb
cmp
ljmp
stc
sub
frstor
jb
out
es
lret
std
xchg
pop
shrb
or
shrl
fnstsw
inc
sbb
cld
mov
in
fwait
adc
aam
cld
and
adc
movsb
jae
aaa
lock
cmpsb
jle
lahf
add
jl
out
test
mov
jo
pop
in
add
jae
out
pop
and
arpl
lea
cmp
cmc
pop
test
insb
push
int3
lods
lods
mov
and
cmpsl
sub
xchg
jle
movsl
mov
std
imul
loop
imul
aam
mov
jmp
mov
cmp
es
psrld
fwait
inc
pop
or
xor
or
push
in
or
addr16
xlat
cmp
pop
sbb
je
iret
jno
inc
popa
mov
inc
mov
out
jp
pop
out
inc
mov
jb
test
or
mov
ljmp
adc
add
ja
adc
mov
and
fstl
es
ret
push
or
adc
addl
xchg
inc
pusha
fnsave
clc
xchg
sub
mov
scas
fcomp
std
test
jecxz
loopne
inc
mov
cmp
bndldx
scas
pop
clc
test
ret
loopne
ljmp
pmullw
and
cwtl
movd
jp
test
xor
jae
dec
popa
jle
out
scas
or
aas
sbb
loope
cwtl
insb
into
sub
pop
das
sub
sbb
sahf
incl
and
jnp
lret
or
jns
in
leave
jae
divl
push
pop
add
loope
icebp
dec
gs
cmpsb
mov
xchg
stos
mov
ljmp
cld
imul
and
iret
sub
aad
outsl
xor
push
fdivs
or
aas
sub
movb
mov
or
mov
cs
rorl
mov
add
iret
push
pop
sbb
outsl
loopne
es
lcall
mov
mov
jo
and
mov
and
and
mov
jecxz
outsl
stos
jne
push
sti
sub
in
loope
xchg
pop
and
push
pushf
inc
not
or
cltd
adc
fildll
sbb
stos
or
mov
test
inc
jnp
adc
bound
icebp
jne
enter
std
loope
dec
cli
maxps
xchg
and
out
les
test
add
adc
cmc
mov
imul
jmp
dec
mov
fwait
jno
lock
mov
jo
mov
xor
ret
mov
cmp
jle
fldcw
pop
adc
sbb
and
ret
shrl
fidivrs
ficompl
ss
xor
adc
adc
sub
xchg
xor
xchg
push
add
movsb
push
dec
xchg
adc
roll
sbb
add
adc
jae
jnp
sub
int3
je
cwtl
xorb
push
movsl
mov
repz
sbb
cmpsl
mov
nop
adc
sbb
add
icebp
in
out
jns
mov
in
sbbb
decl
inc
daa
push
shlb
in
lods
inc
cmp
mov
fisubl
or
push
mov
stc
outsb
clc
ret
push
fsubrs
sbb
stos
ja
jno
pop
xchg
cli
or
push
add
and
mov
dec
out
pop
iret
ja
mov
mov
orb
xchg
xchg
in
or
xor
inc
ret
and
jno
cwtl
mov
inc
push
adc
inc
fisttps
jb
inc
cli
idivl
fcmovnb
jo
jae
jnp
out
sbb
sti
pop
repz
pop
lods
insl
add
fbstp
in
js
mov
lea
mov
and
js
fstpt
sub
out
outsl
inc
xchg
jo
or
insb
orb
xor
add
arpl
int3
sbb
pop
punpcklwd
call
mov
movsw
pop
jmp
push
stos
in
cmp
mov
daa
imul
xor
dec
dec
int3
xor
mov
pop
or
shl
pop
mov
fidivs
push
into
adc
clc
dec
sbb
ds
adc
loope
mov
shrl
les
in
test
int
repnz
xor
fwait
jne
cld
or
clc
call
mov
and
imul
insb
arpl
sub
ret
out
mov
popa
sbb
jb
xor
fdivl
push
adcl
je
xchg
xchg
sub
xor
call
add
loopne
daa
out
add
into
jp
jmp
xchg
xchg
test
jno
fidivrl
fsubl
inc
je
loop
mov
xorb
cli
decl
fidivs
jnp
xor
pop
xor
je
mov
call
lcall
lret
int
out
xor
mov
xchg
lcall
lret
xor
addl
mov
popf
data16
xchg
bound
mov
xchg
or
jmp
mov
in
add
jo
xor
into
lahf
add
jl
cmc
je
fwait
ss
dec
jg
sub
jge
fwait
mov
and
xor
xchg
xlat
mov
jl
mov
jno
outsl
mov
test
loop
jl
push
push
pusha
fldcw
inc
sbb
loopne
or
cmp
aaa
imul
movsl
daa
mov
sti
or
arpl
dec
xchg
ds
aas
sub
int3
loope
sbb
mov
test
loope
cmpl
lods
test
cld
rol
test
scas
bound
aad
stc
icebp
loop
arpl
mov
mul
or
dec
sbb
hlt
mov
popa
or
sarb
dec
lcall
xchg
sarl
xchg
in
icebp
cmpsb
scas
je
mov
cmpsl
js
gs
out
adc
jno
int
sbb
or
cmp
sub
out
iret
mov
pop
fisttpl
cmpl
mov
loope
hlt
mov
lcall
or
push
adc
add
inc
repz
push
jbe
jl
push
sbb
or
cmp
xor
insb
xor
and
dec
scas
dec
and
jecxz
or
xchg
test
sbb
jp
aas
sahf
in
mov
inc
popa
xchg
orb
cli
adc
cwtl
push
lods
cs
push
jns
push
jno
imul
int
xor
mov
jecxz
adc
testb
int3
sbb
into
call
inc
mov
cmp
jl
mov
ljmp
mov
xor
jbe
scas
dec
jecxz
ss
jmp
jp
xor
mov
sub
mov
add
sub
jge
inc
xchg
xchg
jae
rcrl
mov
jg
je
push
outsb
pushf
fwait
xchg
and
pop
test
jbe
and
int
dec
aam
inc
lods
xor
dec
pop
stc
nop
cmp
clc
lret
scas
ds
dec
pusha
cltd
std
test
and
jge
push
pop
push
jo
into
xchg
sbb
jns
stos
test
adc
orb
jecxz
add
and
loope
xchg
fwait
mov
roll
scas
mov
jnp
repz
mov
jns
nop
clc
and
es
stos
gs
mov
dec
out
stos
pop
test
cld
sub
std
filds
push
and
dec
test
pop
mov
insb
outsl
adc
mov
xor
popa
hlt
roll
or
push
sahf
cmp
and
ljmp
test
es
xchg
repz
xchg
cmp
xor
mov
jl
repz
mov
jle
mov
fidivl
mov
xchg
fwait
ret
mov
dec
and
sub
shll
stos
imul
sub
dec
pusha
nop
sub
or
inc
mov
loope
jecxz
jae
pop
add
lahf
dec
test
add
add
dec
mov
xor
fcompl
sbb
dec
sub
shll
mov
push
sbb
xchg
xchg
sub
ja
sub
xorl
pop
dec
sbb
pop
xor
xchg
shrl
sbb
shl
add
mov
adc
pop
cmpb
pop
pop
enter
in
cmp
loopne
vrsqrtss
les
xchg
shr
in
xchg
jp
insl
int3
insl
jo
inc
mov
ret
movsl
loope
iret
lock
mov
rclb
lods
fst
ret
adc
xchg
xor
push
cmpsl
mov
ret
in
sub
xchg
cmpsl
add
pop
pop
xchg
aaa
jno
xchg
and
jnp
movlps
adc
insl
daa
test
mov
mov
cs
add
fimuls
int3
mov
xchg
adc
jae
pop
jnp
loope
mov
lock
clc
mov
testb
push
fsubrl
mov
pop
sbb
out
imul
aaa
roll
inc
xor
xor
rorl
pusha
out
dec
mov
push
or
mov
mov
sahf
cwtl
popf
loop
mov
sbb
dec
or
enter
xor
in
mov
fimull
lods
cmpsl
push
aam
mov
test
ds
je
inc
cmp
mov
push
test
incb
xor
pushf
mov
mov
into
inc
mov
mov
stos
pop
fsubl
push
push
xor
dec
xchg
mov
mov
and
dec
fstpt
insb
push
and
enter
hlt
cs
out
nop
lcallw
hlt
int3
rolb
insb
ss
mov
dec
jecxz
xor
es
sub
aaa
daa
orl
sbb
xchg
imul
es
repz
popf
test
push
fwait
in
sbb
xor
mov
enter
pop
pop
xchg
push
cltd
pop
sub
faddl
mov
jne
dec
iret
dec
jo
xchg
pop
das
mov
fadd
aaa
dec
bound
dec
shlb
push
xlat
xor
dec
movsb
adc
sbb
and
inc
cmp
pop
push
xchg
pop
hlt
push
nop
out
cmpsb
pop
jl
in
pusha
ret
dec
adc
mov
popf
test
sbb
adc
lahf
shr
pop
push
jno
lea
arpl
and
decl
out
inc
dec
fs
sub
jns
in
mov
aam
xchg
xor
xchg
push
jnp
and
stc
push
in
stc
leave
inc
push
test
mov
fildll
or
lcall
cld
mov
test
pop
lock
xlat
andb
clc
enter
adc
pop
les
pop
stos
int
imul
out
lock
stos
pop
in
inc
out
test
dec
sbb
mov
out
mov
push
mov
push
mov
cmpsb
push
leave
setle
cli
inc
and
clc
sbb
pop
loope
out
inc
rclb
jae
push
ds
call
push
sbb
mov
xor
jne
dec
and
jbe
mov
xor
stos
mov
hlt
jne
push
out
leave
mov
outsb
sbb
cs
lcall
sbb
aaa
xchg
rcl
pusha
mov
push
or
mov
clc
loope
dec
fldl
xchg
rolb
xor
xchg
dec
cltd
and
sub
dec
sti
stos
fmull
adc
imulb
sub
lcall
or
push
inc
fldl
fs
sub
jbe
jmp
lret
fadds
bound
push
xchg
jecxz
sti
jb
pop
lods
xor
les
xchg
in
ds
fimuls
mov
sub
pop
insb
adc
out
lret
xor
fstpl
jnp
jl
popf
cmp
adc
lret
addb
frstor
je
repnz
mov
or
and
or
xchg
cmpsb
into
jp
xlat
and
sbb
fcoml
mov
stos
bound
pusha
dec
or
mov
or
jl,pn
test
mov
pop
and
cmpsl
lcall
and
sbb
xlat
dec
push
mov
cmc
fcomps
cmp
adc
setae
testb
stos
xchg
mov
push
jge
jb
jmp
pop
cmp
inc
ja
mov
iret
mov
and
out
jle
jbe
or
xchg
outsb
arpl
pop
stos
adc
shll
sub
das
shll
add
fucomp
adc
pusha
cmp
jg
divl
push
adc
adc
adc
divl
js
xor
add
rcl
mov
and
or
push
or
sahf
loope
jp
mov
mov
ds
fistps
and
sub
xchg
mov
cmc
js
push
mov
shl
or
pusha
std
rol
and
int
test
scas
inc
out
mov
mov
xchg
stos
xchg
ret
xor
aas
mov
sub
add
icebp
ja
scas
xor
aaa
mov
cli
iret
lret
adc
cmpsb
mov
xor
stos
xor
rorb
adc
mov
inc
dec
cmp
scas
nop
shll
fdivs
cmp
insb
or
push
lret
incl
xlat
shlb
push
mov
ds
jmp
pop
xchg
ss
insl
test
cmpsb
dec
sbb
and
lret
xchg
je
dec
fwait
in
mov
cmp
lret
xlat
das
setbe
xchg
andl
inc
push
repz
arpl
scas
or
inc
jns
in
or
xchg
mov
das
adc
adc
and
xor
call
cmp
loope
mov
out
push
enter
imul
mov
mov
stc
pop
add
popa
sbb
stc
cmp
and
xchg
fdivs
mulb
push
inc
add
inc
roll
ficompl
aam
fs
mov
mov
xlat
scas
inc
xor
jl
jo
jb
imul
lods
dec
pop
pop
in
jae
lea
push
jl
adc
add
dec
js
sbb
mov
imul
std
sbb
inc
dec
add
jnp
mov
mov
sbb
sti
ret
dec
cmp
dec
jmp
mov
stos
cmp
push
cld
test
adcl
xor
fxch
lret
dec
fsubrs
js
and
jns
mov
sub
and
nop
cmp
inc
cltd
imul
mov
add
fwait
lods
les
add
bsf
push
lret
mov
pop
inc
pushf
cmp
ljmp
cli
icebp
jae
icebp
mov
cmp
sbb
pop
in
nop
inc
mov
cmpsb
outsl
cld
add
test
push
jge
mov
xchg
push
push
aad
jae
cld
repz
das
icebp
mov
std
push
push
and
loopne
fisubl
mov
imul
adc
adc
push
inc
cwtl
add
out
mov
xorl
cmp
ret
sbb
movsb
add
mov
pop
and
adc
popf
fsts
fs
and
fstpl
sbb
movsl
add
push
mov
pop
bound
and
sbb
in
ss
sbb
xchg
js
jp
mov
push
into
mov
push
push
stos
cmp
push
enter
inc
pop
dec
mov
fsubl
fsts
push
pop
aas
xchg
push
stc
cmp
sub
insb
lea
xchg
int3
mov
inc
lcall
jb
leave
cmpsl
jnp
repnz
adc
sub
adc
js
int3
popa
push
in
ds
mov
lock
loopne
inc
inc
aaa
jg
mov
orl
dec
dec
inc
lcall
cli
mov
jmp
insl
and
dec
clc
sahf
outsl
mov
add
les
adc
push
inc
jns
xchg
or
iret
sub
stc
push
pushl
mov
mov
sbb
bound
aas
divps
add
xchg
repz
dec
sahf
clc
jge
test
call
nop
mov
fisttpl
push
and
jmp
xchg
mov
mov
dec
mov
sub
or
mov
insb
push
sbb
mov
shr
cld
mov
insl
sub
fs
fdivl
push
jl
mov
lea
stc
push
jmp
mov
xor
xor
inc
hlt
or
pop
jmp
push
xor
sbb
cmp
decb
scas
xchg
mov
rclb
ret
push
xor
in
sbb
mov
pop
insb
fbld
add
jne
jb
xor
adcl
push
dec
jb
pop
mov
lds
xchg
xchg
ljmp
stc
fwait
inc
mov
inc
fmuls
inc
call
inc
cmp
cltd
cli
mov
sbb
stos
cmpl
pop
mov
adc
xlat
push
cli
pop
xorl
lahf
cmpsl
daa
push
dec
mov
mov
sbb
dec
outsb
lods
pop
mov
pop
aaa
add
je
mov
cmc
mov
adc
dec
fidivrl
pop
add
sbb
sbb
in
xchg
cmp
ss
push
arpl
lea
in
or
dec
cld
and
push
repz
imul
sub
inc
outsl
inc
add
jge
in
pop
pop
stos
sbb
pop
cmp
sbb
jb
test
pop
xchg
xchg
or
dec
lds
cmpsl
mov
aam
lds
add
mov
mov
inc
or
mov
sarl
push
pushf
in
ret
shrb
bound
jo
lret
nop
repnz
ret
inc
rcl
push
insb
movsl
pop
xlat
sbb
fs
cmpsb
lods
imul
imul
call
add
mov
and
je
pop
push
dec
ffree
rep
clc
jo
sub
pushf
sbb
mov
sub
or
sbb
mov
adc
sub
inc
inc
int
cmp
fisubrs
xlat
iret
sbb
mov
bound
cwtl
out
shl
jo,pn
movsl
jmp
rclb
in
jnp
stos
cli
adc
jns
sahf
shl
loopne
call
mov
cmp
sbb
outsb
add
cmp
dec
mov
sub
xchg
mov
sbb
ja
push
xor
leave
std
and
mov
mov
fcoml
popf
mov
bound
mov
fcmovu
repnz
cmpsl
fdivl
fimuls
fcomps
cmc
add
lock
jae
jno
mov
ja
jle
sarl
clc
pusha
mov
leave
imul
xchg
imul
cmp
jbe
add
sbb
jecxz
sbb
cmp
lock
cli
push
lds
mov
jl
insb
inc
adcb
fs
lods
ret
je
aas
repnz
fst
test
adc
dec
pop
cmp
mov
leave
xor
loopne
sbb
ret
mov
mov
loope
in
jmp
and
adc
adc
movsb
lret
ret
sarl
lcall
daa
outsl
idivb
mov
add
mov
and
xchg
and
das
pop
mov
jge
lcall
lock
cli
mov
sti
pushf
cltd
add
inc
add
and
jns
ss
fnstenv
push
fsubrs
add
adc
cwtl
cmp
sbb
push
jmp
xorl
fadds
push
pop
add
jne
cmc
mov
mov
mov
outsb
add
jne
test
add
xchg
in
fucomp
and
push
in
arpl
arpl
push
dec
loop
adc
sarb
xlat
std
cli
fdivp
hlt
jle
clc
mov
cmp
push
jge
mov
sub
testl
cmp
cmp
fnstenv
pop
inc
xchg
stos
test
jns
jmp
jnp
xchg
stos
cmpsb
out
adc
dec
jl
das
mov
stos
lds
push
push
out
add
cmpsl
mov
les
add
adc
pop
insb
mov
loopne
out
fsubr
dec
mov
fdivrs
test
adc
aaa
push
in
pop
xor
dec
mov
leave
pop
push
insb
cmp
fdivrs
repz
xor
fwait
cmpsb
jae
in
xor
push
mov
push
cmc
ficoms
js
popa
ja
loope
test
ja
ficomps
pusha
cmp
or
adc
pop
mov
mov
sbb
add
mov
pop
fsubl
neg
cmp
into
push
lods
ja
push
xchg
in
stos
test
jle
push
in
repnz
mov
out
enter
inc
rcll
pop
les
lea
mov
cltd
andb
mov
pop
mov
and
addb
xor
add
mov
add
scas
cmp
push
mov
sub
lods
clc
and
pop
das
mov
jnp
adc
pop
pop
sub
and
push
jl
cmp
adc
testl
sbb
jnp,pn
mov
fs
sbb
xchg
orb
shlb
push
es
mov
lods
cwtl
scas
in
out
sbb
mov
mov
adc
inc
mov
push
movsl
repnz
js
rclb
lea
sbb
pop
push
mov
xchg
das
xchg
lods
mov
into
lods
fimull
or
jbe
or
mov
lahf
movsl
cmp
cmp
mov
jns
idivl
push
xchg
push
fnsave
stc
sbb
addl
leave
cmp
ret
cmp
mov
push
out
loop
mov
lds
mov
xor
push
mov
je
jecxz
rcr
gs
push
std
jle
ret
aad
sub
jnp
sbb
lods
or
not
faddl
in
rorl
je
fldt
add
mov
pop
pushf
pop
icebp
mulb
enter
shll
sahf
aas
les
rorl
mov
addr16
bnd
mov
dec
mov
inc
scas
testl
jns
push
xor
fdivrs
push
dec
push
shlb
aaa
sub
xchg
push
ljmp
adc
mov
pop
cld
adc
cs
pop
ret
pop
out
incl
lds
sahf
jo
jns
addl
lcall
addr16
dec
imul
push
and
dec
or
lret
and
cwtl
pop
mull
sahf
divl
int3
jmp
jne
jo
imulb
in
and
jno
repz
mov
ret
sbb
mov
xchg
test
sbb
loop
lds
cmp
loopne
mov
cwtl
popa
xor
inc
rcll
je,pt
add
in
bound
inc
pop
fdivrl
mov
mov
les
sub
int3
mov
xchg
mov
pop
push
aam
sbb
mov
roll
push
loopne
mov
insl
and
rcrb
repz
clc
push
adc
sti
dec
push
fsubs
fsts
cli
mov
push
lods
das
jnp
adc
xchg
test
scas
dec
mov
sbb
fwait
out
loopne
jmp
mov
lret
stos
in
mov
add
sti
in
lock
xchg
mov
andb
sbbl
and
mov
sub
gs
and
orb
mov
adc
scas
xor
jmp
in
stos
xchg
out
pop
hlt
push
icebp
cmp
cmp
xor
push
xor
outsl
inc
aam
jmp
mov
cltd
loope
pushf
pop
xchg
adc
adc
aad
aam
stos
aam
jne
dec
scas
mov
xchg
and
fsubp
pusha
dec
ficoms
insl
inc
dec
mov
in
orl
mov
cmp
daa
cld
mov
xor
adc
fs
scas
push
sbb
andl
mov
sbb
pop
and
add
leave
aam
ljmp
js
jecxz
mov
fmuls
popf
cmpsb
mov
xor
mov
lods
arpl
les
pop
push
sbbb
sbb
xchg
stc
test
mov
add
clc
mov
mov
leave
or
adc
ficomps
mov
lahf
leave
scas
mov
flds
cmpsb
sub
in
or
in
inc
mov
data16
inc
call
aas
lahf
pop
sub
mov
aam
dec
add
enter
data16
scas
les
cs
pop
scas
ljmp
std
fwait
push
mov
cmpsb
and
dec
int
stos
mov
pop
fs
xor
push
pop
mov
clc
popa
gs
dec
mov
xchg
mov
out
add
push
dec
cmp
cmp
mov
vprotd
mov
push
ret
loop
pop
mov
movsl
dec
add
lret
jnp
rcrl
hlt
aam
mov
xchg
fisttpll
mov
push
cmp
push
ret
adc
mov
int
mov
shll
sti
mov
rorl
ss
lea
mov
pop
mov
jecxz
je
mov
mov
mov
shll
out
outsb
push
data16
mov
add
aaa
shl
sbb
insl
nop
add
pusha
push
int3
insb
scas
cld
pop
pop
daa
add
xor
inc
outsb
adc
gs
pop
push
pop
sbb
stos
sub
jns
jge
cwtl
popa
movb
or
add
pop
mov
mov
inc
out
cwtl
pop
jb
and
clc
outsb
or
test
pop
mov
lcall
insb
mov
or
dec
jg
into
cmp
popf
dec
addb
mov
inc
jns
xchg
gs
pusha
and
popa
rorl
stc
add
mov
mov
xor
repnz
mov
sahf
push
jg
lahf
mov
fmull
das
sub
mov
adc
adc
inc
xchg
popa
sbb
sbb
push
jno
in
and
jno
push
mov
in
sub
mov
mov
dec
xchg
pop
adc
push
cmp
fstp
sbb
mov
daa
sti
xchg
pop
bound
jle
xchg
fsubs
scas
or
or
shlb
jmp
push
mov
sub
jbe
ret
lds
jno
pop
mov
faddl
inc
add
sbb
test
dec
enter
outsb
jmp
xchg
and
push
shll
mov
dec
and
mov
aad
sub
and
sub
cmp
loop
ljmp
pop
arpl
cmpsb
jnp
adc
insw
movsl
arpl
inc
lret
pop
xor
cmpsl
stc
outsl
cmp
inc
mov
or
lret
dec
icebp
fs
shrl
addr16
ret
ret
fisubrs
xchg
xchg
stc
rcrb
lahf
jp
ss
out
pop
xor
in
dec
pop
daa
jp
fucompp
out
mov
movsl
and
mov
lea
in
imulb
or
ret
daa
dec
cld
repnz
add
push
std
inc
jno
cmp
jns
jle
out
xchg
rorl
mov
push
xchg
ljmp
push
xor
push
xor
mov
jbe
push
push
pop
dec
shl
xor
add
cli
inc
int
cmp
sti
sbb
stos
lret
or
out
addr16
or
pop
or
mov
push
pop
xchg
and
ss
inc
jmp
enter
lods
push
sub
aad
out
mov
push
fldenv
mov
gs
dec
sub
orl
push
test
push
lcall
push
insl
bound
es
jl
jg
pushf
sbb
ret
clc
mov
leave
cmp
cmp
data16
imul
shll
cmp
incl
mov
js
push
aas
mov
add
or
in
into
xchg
mov
repnz
stos
jo
push
pop
add
das
sub
sbb
fdivl
sub
sub
inc
mov
roll
xchg
imul
stc
mov
pusha
jbe
mov
das
fsubrs
std
stc
or
movsb
repz
push
into
call
sbb
rorl
mov
add
mov
cmp
dec
xchg
addps
or
sti
je
pop
ss
mov
mov
repz
cwtl
mov
dec
cmp
in
add
test
in
pop
jae
mov
xchg
mov
cmpsl
mov
push
mov
cli
jecxz
int
hlt
insb
loopne
into
dec
aaa
pop
cmpsl
jno
pop
sbb
sbb
inc
ss
dec
js
je
push
mov
sbb
repnz
jl
jl
jecxz
mov
sahf
jl
pop
mov
outsl
adc
out
ljmp
insl
xlat
in
and
push
and
add
inc
push
mov
imul
cmp
lock
fdivl
jl
xchg
mov
mov
loop
fistl
es
cmp
mov
fnstenv
lcall
push
dec
out
push
in
int3
push
loop
sbb
arpl
push
sar
adc
js
jl
jb
cmp
call
jecxz
idivb
scas
insl
lea
adc
adc
inc
ret
mov
fwait
cli
movsb
xchg
cmp
xchg
pop
pop
mov
aaa
test
adc
fbld
inc
add
cld
jl
or
sub
mov
fiaddl
xlat
imul
cs
dec
fsubrl
jge
cld
cmpsb
add
repz
mov
mulb
push
dec
push
dec
orl
mov
mov
popa
cmpl
test
adc
fistl
add
adc
aad
lock
lcall
jo
in
push
outsb
cmp
adc
mov
and
aad
lret
ljmp
lds
fiadds
sub
cmc
adc
mov
ss
pop
pop
mov
jbe
ss
adcb
in
push
scas
das
xlat
loope
jnp
jle
outsb
jo
ret
and
pop
inc
mov
push
sub
test
addl
mov
pop
jp
xor
cmc
sbb
fwait
push
push
cmovne
ret
arpl
imul
inc
out
pop
gs
jmp
jns
push
mov
adc
js
mov
or
ret
mov
adc
test
add
jb
cmp
out
out
sub
test
lea
mov
cmpsb
sub
xor
aas
pop
leavew
sub
repnz
fnstcw
lock
mov
cmp
je
adc
imul
lret
and
xlat
xor
lods
jg
daa
lcall
in
stos
sti
or
inc
sti
push
adc
nop
dec
arpl
sub
push
fistpll
dec
pop
sarb
xorl
icebp
or
jmp
jne
imul
push
lret
js
ljmp
scas
mov
or
mov
icebp
mov
jecxz
xor
xor
adc
sub
aas
xchg
mov
and
jle
inc
inc
push
rolb
sub
adc
test
adc
push
leave
pop
test
inc
lock
pop
jl
popa
lcall
lds
xlat
daa
lods
inc
orb
cmp
pop
mov
mov
push
fldpi
mov
movsl
in
bnd
pop
loope
nop
or
fnstsw
mov
inc
push
and
fwait
jle
push
test
pop
sbb
inc
clc
test
cmpsl
xchg
out
xor
adcl
dec
push
das
inc
js
imul
push
xor
in
hlt
subl
push
fsubrl
mov
mov
mov
je
cmpsb
addr16
and
lds
mov
dec
and
xor
bnd
in
inc
loope
movsl
insb
and
mov
sbb
jns
jg
add
dec
outsb
stos
xchg
add
mov
popa
in
and
jne
scas
mov
add
push
xor
adc
xchg
mov
mov
bound
add
leave
out
xor
jmp
cmp
sbb
inc
cmpsl
push
adc
loope
mov
cmp
pop
dec
icebp
lcall
imul
ror
xchg
movsl
popa
shrl
shrb
gs
nop
lret
and
xor
adc
inc
ss
cmp
test
lods
push
push
lret
imull
jp
mov
dec
cs
cmc
push
into
lcall
jecxz
fstpt
push
pop
andb
movsb
cli
or
lret
inc
mov
clc
and
mov
movsb
aaa
xor
aad
mov
shll
aad
popf
mov
hlt
outsl
push
ljmp
ret
xlat
push
lds
mov
jge
xchg
lahf
enter
in
or
aas
or
sti
or
cwtl
out
out
dec
subb
in
inc
push
xor
or
loope
adc
xor
lock
aam
mov
repnz
mov
sahf
dec
rcll
cmp
cld
sub
mov
not
fmul
ljmp
mov
sbb
out
mov
lcall
repnz
icebp
or
loope
mov
jle
cmp
int
icebp
icebp
int
mov
sbbb
sahf
jno
sbbl
in
mov
push
add
aaa
lret
inc
add
pop
rcll
test
repz
pop
test
ss
out
mov
jno
fwait
or
cli
add
cltd
inc
xorb
jmp
jbe
add
mov
sahf
orb
movsl
sti
lds
mov
dec
xchg
sub
call
ficomps
push
add
jecxz
xor
add
pop
ja
shlb
push
es
cld
scas
mov
rcll
call
sbb
pushf
mov
jp
call
fimuls
fidivrs
aam
xchg
push
icebp
xchg
push
sar
inc
inc
in
jg
in
xor
dec
mov
adcl
bound
lods
sbb
adc
repz
rol
xchg
dec
imul
jnp
in
stos
pop
cmp
mov
into
out
jne
fidivrl
or
cwtl
addb
pop
les
jno
push
cmp
jae
fdivr
push
repnz
pop
mov
dec
movsl
lret
push
mov
in
sub
add
ds
add
adc
out
pop
add
mov
ja
mov
jno
bound
rcl
dec
mov
aad
ficomps
enter
xchg
pushf
adc
nop
fwait
rcrl
nop
divb
cmpl
scas
mov
fnstsw
or
es
dec
ja
pop
jp
cmp
scas
rorb
iret
mov
xchg
or
pop
or
sub
outsl
xchg
xor
rorb
mov
sub
inc
xchg
ljmp
shl
fs
outsb
ljmp
bound
or
sbb
jge
xchg
jo
lret
dec
push
repnz
sbb
push
arpl
fcomi
jge
scas
lcall
sbb
scas
mov
fisttpl
repz
shrl
fcoml
outsb
mov
sbb
addb
jg
lcall
outsl
jp
rcr
push
add
iret
mov
lahf
mov
in
mov
sbb
fisubrl
dec
adc
jnp
lcall
in
cmp
lret
add
adc
daa
push
ds
fistpl
jge
into
mov
dec
out
divb
jge
aas
jle
lret
cwtl
mov
push
mov
pop
and
ds
xor
add
xchg
pop
mov
int
repnz
outsb
cmc
adcl
mov
rcrl
jbe
sbb
pop
ja
scas
push
das
orb
dec
sub
jge
mov
xor
dec
xchg
mov
sub
jmp
mov
lret
adc
jno
repz
pop
daa
xor
test
jns
popa
push
mov
add
inc
in
fnstcw
add
jbe
inc
lret
xchg
xchg
mov
fisttps
jecxz
push
lea
js
push
out
fmull
fdivl
pop
mov
popa
mov
fnstcw
add
aas
xchg
or
sbb
xorl
jge
jle
out
pop
rcrl
dec
mov
mov
cmpsb
pop
sbb
xlat
faddl
cmp
stos
jmp
or
sub
mov
hlt
nop
out
fdivs
aaa
stos
mov
push
aas
in
pop
lcall
or
ds
aam
idivl
or
add
gs
adc
xchg
inc
das
in
lds
xchg
jnp
xor
mov
xor
roll
loopne
ds
cmp
xor
push
dec
lahf
orb
xchg
out
add
mov
fnstenv
and
xor
fwait
lahf
loop
sbb
pop
mov
out
ja
addr16
imul
fsts
fidivl
adc
mov
and
int
stos
adcb
out
pop
fldt
dec
mov
out
push
lret
imul
xor
cmp
insb
pop
jbe
xor
loopne
popf
cmp
fs
sbb
cmp
jb
xchg
test
rol
js
add
fsubl
out
push
sbb
xor
sbb
pop
js
mov
lret
mov
sbb
pop
xor
sbb
mov
pushl
clc
mov
mov
xchg
int3
cmp
fcompl
popa
adc
dec
cmc
adc
int
pop
cmp
mov
repz
sub
sub
dec
sub
and
jl
push
in
mov
andl
fstl
mov
in
pop
divb
je
cmp
xchg
sbb
sub
out
out
cwtl
jmp
mov
sbb
fsubs
xchg
jge
mov
lods
mov
shll
out
test
or
cltd
and
popf
push
mov
ficompl
mov
jmp
mov
out
ja
pop
mov
sbb
in
adc
imul
cmp
dec
mov
cmp
or
cmp
mov
lock
mov
and
or
jmp
mov
cmp
int
push
imul
jge
fcmovne
sbb
push
adc
sub
out
xchg
sub
cli
jae
mov
pop
cli
jno
out
lock
loopne
pop
repnz
dec
scas
mov
scas
pusha
pop
pop
add
in
cs
rolb
call
imul
pop
mov
xlat
sbb
insb
ficomps
xor
or
or
sub
or
scas
inc
add
outsb
add
pop
cmp
jb
insb
fwait
movb
xchg
neg
fimull
test
cli
mov
gs
xor
shll
cmp
adc
sbbl
outsl
lods
fs
jecxz
cli
sub
popf
mov
lcall
mov
xchg
lods
or
cmp
add
jmp
scas
bound
mov
movsl
cmpsl
int
pop
test
push
test
inc
push
dec
hlt
aas
xor
xor
jecxz
pop
subl
xlat
hlt
xchg
mov
mov
cwtl
sbb
ret
test
xlat
call
pop
pop
loope
sub
cmpsb
mov
and
repz
ljmp
or
loop
mov
fsqrt
bndldx
add
outsl
sub
shrb
push
in
or
cli
xchg
in
sahf
cmp
push
sub
inc
adc
or
xchg
std
xchg
notb
sbb
js
ljmp
mov
or
test
sbb
inc
sbb
dec
and
test
adcl
scas
mov
and
in
dec
xchg
cs
or
adc
mov
lods
mov
in
cmc
push
fisttpll
mov
stc
jne
in
in
sub
movsl
mov
push
push
pop
int3
sar
hlt
or
das
pop
push
ret
mov
jae
mov
movsb
fwait
addr16
out
dec
or
movsl
loope
shlb
mul
fsubr
adc
cs
andb
imul
add
loop
adc
add
jp
pop
loopne
and
mov
dec
lods
ficoms
test
mov
les
mov
scas
push
inc
stos
das
push
sbb
adc
shrl
and
in
push
cmp
sbb
lret
repnz
mov
imul
mov
call
xchg
or
fs
cmp
test
in
cs
aam
or
lret
jl
fisttps
pop
int3
add
fsubp
fcomi
pusha
jnp
das
pop
jae
dec
pop
aas
dec
push
mov
int3
jg
je
pop
cmpsl
bnd
mov
pop
test
insl
js
jb
cwtl
icebp
scas
xorb
fldenv
pop
sbb
adc
in
xchg
fs
inc
ja
cli
scas
sbbb
dec
stos
xchg
sti
rorb
loope
jo
in
idiv
mov
xchg
loopne
in
test
xchg
pop
sti
pop
fadds
test
add
mov
mov
jg
or
mov
call
add
and
mov
lods
into
push
cmpsl
inc
xchg
pop
aaa
mov
imul
sbb
jg
ret
mov
adc
jmp
aad
dec
mov
cld
je
sub
les
aaa
call
dec
gs
add
scas
jmp
inc
test
push
cmp
mov
test
loope
mov
hlt
fcmovnbe
test
lock
loop
adc
pusha
inc
js
mov
and
jecxz
push
xchg
leave
outsb
sbb
lds
ds
mov
mov
insl
inc
movsb
sahf
jmp
mov
mov
loopne
aas
fucomi
imul
in
sbb
ds
lea
jmp
jecxz
enter
inc
fbld
add
pop
pop
mov
push
out
ss
pop
fsubs
xchg
lahf
js
inc
xlat
sbb
add
int
stos
push
or
fsubrl
jge
aaa
jne
sub
fsubr
cmpsl
sub
inc
mov
jmp
pop
mov
out
shll
test
fidivrl
jecxz
pop
aad
cmp
icebp
mov
dec
pop
push
or
loop
adc
push
mov
not
sbb
push
jle
ds
out
in
faddl
cld
bound
inc
and
xchg
sarl
inc
int3
fisttpl
rolb
push
add
mov
xchg
cmp
pop
into
mov
dec
or
mov
out
pop
iret
movsl
add
stc
pop
decb
mov
xchg
into
loope
test
sub
add
push
sahf
ret
xor
mov
fildl
aas
sti
xor
jne
mov
add
arpl
or
mov
arpl
mov
xor
roll
push
xchg
mov
xlat
mov
inc
jno
movsb
push
pop
out
inc
pop
mov
xlat
in
imul
fs
pop
jb
lahf
in
adc
push
inc
enter
lahf
xor
std
lcall
test
cmpsb
xor
push
je
pop
lret
call
mov
sub
ja
sub
ret
adcb
sub
es
xor
pop
pushf
lock
cltd
sbb
fcoms
cltd
dec
cmp
daa
dec
cmp
fwait
test
fwait
sbb
inc
stos
fstpl
pop
jl
and
xchg
pop
mov
int
aas
pop
cmp
cmp
jbe
rclb
pop
fwait
adc
mov
pop
and
in
adc
mov
sub
js
xor
outsb
ja
jecxz
rorb
xchg
push
or
repz
jp
push
sbb
mov
or
test
inc
jns
cmp
push
leave
dec
lea
mov
xchg
cmc
cmp
mov
adc
out
mov
test
arpl
push
out
mov
decb
test
fiaddl
add
sbb
in
and
xor
lock
lea
mov
dec
into
inc
dec
xor
or
cmpsl
movl
cmpsl
dec
push
int3
test
repz
jbe
pop
lods
pop
pop
lock
and
dec
ds
xor
and
xchg
roll
xlat
sahf
dec
lds
push
mov
ljmp
jmp
mov
push
jle
or
or
inc
xorl
mov
int
fwait
ret
iret
call
ret
cmpsb
pop
push
jmp
insb
sub
jle
cwtl
cmpsl
mov
xor
das
shrl
call
adc
mov
rcr
pop
dec
in
test
pop
sbb
pushf
jnp
imul
and
pop
clc
cmp
movsl
lock
ja
mov
inc
xorl
into
mov
push
push
pop
addr16
cmpsb
mov
cmc
add
inc
mov
in
or
xchg
cmp
jne
pop
repnz
or
je
gs
out
into
jecxz
addr16
adc
xor
lret
stc
sbb
fldenv
fndisi(8087
fcomps
outsl
lods
mov
jle
inc
cmpsl
imul
je
fadds
jo
les
mov
aaa
and
adc
adc
lods
dec
fst
stc
arpl
popa
xchg
mov
xor
mov
xor
or
adc
sbb
or
xchg
in
fadd
fisubrl
ret
sti
mov
pop
out
ret
dec
fs
aas
inc
dec
aaa
test
mov
pop
cli
and
jbe
test
pop
sbb
push
sbb
cli
pop
pop
iret
mov
sbbl
or
rcll
push
lret
xor
icebp
jbe
shrb
fs
scas
xchg
cmovge
xchg
icebp
mov
ficoml
stc
fists
mov
idivb
lret
addr16
cli
xchg
jecxz
push
in
inc
dec
jb
inc
das
add
mov
adcb
mov
loope
insl
lods
mov
pop
test
outsl
sahf
pop
mov
sub
lea
push
pop
adc
test
push
push
sahf
mov
in
cmp
in
insb
aad
inc
mov
cmc
jg
mul
clc
cmc
aaa
clc
cld
lods
pop
movsb
inc
push
push
xor
push
and
lods
imul
aaa
test
sahf
test
and
arpl
ljmp
insb
xchg
xor
rcll
pushf
cmc
fnstsw
push
sarl
mov
hlt
pop
or
outsl
xchg
dec
sbb
add
xor
jnp
daa
dec
mov
cmp
fs
imul
jle
inc
fidivl
pop
xor
lods
lds
shrb
inc
es
or
mov
push
orl
movsb
fdivrs
sbb
mov
es
pop
push
mov
loop
test
imul
fistpl
mov
sbb
pop
pop
push
fs
in
cmpsb
out
test
clc
sbb
mov
inc
cwtl
add
push
shr
fcomi
and
dec
sub
lock
jbe
pop
push
jle
int3
mov
popa
fbstp
xor
insb
xchg
jg
or
stos
test
xchg
mov
push
pop
pop
xor
push
jge
sub
popf
in
loope
sbb
xor
pop
loopne
mov
or
stos
push
mov
jae
pop
ds
sub
xchg
jg
clc
test
jno
daa
and
sbb
aas
xor
int
push
fdivl
fwait
je
cli
pop
jnp
xchg
inc
clc
int
ds
insb
aad
cli
mov
nop
pop
push
pop
cmp
xchg
mov
cmpsl
add
cmc
negl
cmc
in
jp
sbb
jge
xlat
insb
inc
jmp
xchg
inc
push
jno
popf
inc
push
into
pusha
sbbl
jge
cmpsb
call
push
out
hlt
ds
xchg
pop
dec
iret
out
lea
scas
cmp
shl
mov
inc
mov
mov
je
inc
pop
jge
scas
gs
push
daa
adc
jne
inc
dec
and
clc
cmp
mov
movsl
repnz
or
inc
cli
pop
add
xchg
push
jge
push
out
ret
outsb
inc
movsb
mov
lret
pop
xchg
cli
jne
cli
pop
fnstenv
fs
or
ds
stos
pop
mov
jecxz
adc
cmpsb
push
scas
icebp
gs
xor
bound
cmc
fidivl
sub
adc
pop
add
pop
sbb
pop
sarl
insl
cmp
test
fdivr
fsts
inc
roll
jb
xor
jnp
dec
cmp
or
dec
ljmp
lock
dec
outsl
in
add
js
or
mov
jge
insl
test
mov
sbb
xchg
stc
mov
xchg
push
cmp
dec
sbb
inc
hlt
lret
xor
mov
std
or
addb
repz
jp
adc
popf
mov
outsb
fistpll
pop
add
mov
and
add
insl
imul
clc
adc
lock
xor
fnsave
mov
in
js
pop
lock
push
imul
pop
ja
mov
mov
sub
mov
int3
out
add
ret
ja
arpl
ror
add
cmp
mov
leave
mov
fstpt
shll
lock
dec
leave
lret
testb
mov
addr16
cmp
je
mov
in
xchg
loopne
insb
sahf
sub
or
fdiv
das
out
cmp
test
xor
xchg
aaa
mov
jbe
fsubrl
sub
pop
inc
push
pop
mov
add
xchg
lea
ss
push
mov
push
mov
inc
fistl
jmp
mov
rclb
xlat
jle
outsl
clc
xchg
out
pop
dec
repz
sub
arpl
scas
repz
daa
outsl
cmpb
xchg
xlat
fisubl
cld
ret
aaa
cld
cmp
lea
cmpsl
cmp
sub
ret
mov
cmp
mov
xchg
dec
jp
cmp
fwait
push
mov
dec
ficoms
pop
or
divb
out
sahf
mov
push
repnz
outsl
xchg
xchg
jmp
mov
mov
cmpsb
into
iret
adc
fbstp
popf
int3
and
mov
pop
jl
pusha
loop
sub
iret
mov
shlb
add
in
pop
xlat
lret
cmpsb
aad
sbbb
push
adc
xor
push
inc
push
int
leave
push
jge
and
dec
stc
pop
mov
add
sbb
add
js
sbb
mov
sbbb
test
push
shll
lods
sarb
push
mov
insb
inc
cltd
push
jno
enter
test
nop
jmp
scas
sarb
out
inc
test
leave
dec
mov
jnp
pop
arpl
mov
add
loope
imul
arpl
jns
scas
sub
js
shr
or
scas
xchg
add
pop
pop
shll
inc
push
add
cmpsl
mov
mov
rol
sub
push
adcb
push
cmp
sbb
leave
aaa
pop
stos
mov
lods
add
and
and
mov
shl
sub
adc
sub
enter
into
lcall
cmpsl
pusha
push
mov
maxps
cwtl
cs
pop
aam
add
push
push
ljmp
inc
jl
insb
js
xchg
jl
andb
push
iret
add
push
jl
int
and
jno,pn
movsl
or
push
xor
sar
sbb
add
and
and
sbb
lods
mov
shl
call
adc
xchg
add
adc
cmp
test
rolb
inc
pushf
cli
xchg
addr16
leave
daa
aam
cmp
fnstenv
sbb
lods
add
add
iret
jp
jo
repz
and
mov
mov
fstp
hlt
addl
or
sub
mov
sar
push
or
mov
es
out
push
xor
dec
jae
lahf
ret
sub
shl
rcll
sub
adc
mov
mov
and
ljmp
or
push
push
pop
test
insl
jo
cmp
mov
push
fsubr
outsl
outsb
xchg
nop
fimull
sub
es
fwait
adc
test
subb
stos
add
jge
dec
add
aaa
arpl
inc
pop
mov
or
test
jp
xchg
pop
xchg
xlat
adc
push
sbb
mov
enter
mov
sub
stos
iret
xchg
or
in
jbe
cmp
jne
nop
mov
pop
sarb
enter
push
inc
sub
jmp
insb
je,pt
mov
xchg
pop
rcl
mov
int
jl
xlat
xchg
cmpsl
mov
lret
xor
fldt
aaa
cmp
ret
hlt
dec
push
lahf
aas
addr16
in
dec
and
mov
add
jge
dec
adc
add
cwtl
testb
sub
insb
cmpsb
pop
push
icebp
adc
iret
mov
loope
cmp
outsb
addr16
mov
fistpl
enter
test
gs
pop
inc
test
jp
sahf
sti
pop
sub
xchg
adc
out
dec
jnp
das
pop
lret
lods
inc
or
rclb
and
adc
in
push
ds
mov
sbb
pop
sub
mov
in
cmp
out
pushf
fsubrs
popa
sub
into
js
xchg
ja
push
add
lret
adc
and
dec
add
sub
cmp
push
cwtl
sbb
pop
jle
cli
cli
in
adc
mov
push
jb
outsl
inc
inc
daa
cmp
stc
push
lcall
mov
and
mov
daa
push
push
push
ja
pop
adc
and
or
jl
mov
jae
mov
bound
jno
popa
inc
xor
add
dec
cmp
movsl
xor
mov
and
mov
divb
sbb
push
sbb
push
inc
mov
inc
movsl
addl
mov
mov
push
jp
add
je
in
xor
scas
mov
cwtl
add
xor
cs
movsb
xorb
call
add
and
adc
lret
daa
xlat
adc
xchg
inc
jnp
rol
cmp
ret
ja
repnz
jbe
fstpt
push
push
movsb
mov
loope
outsl
data16
adc
lds
dec
jmp
icebp
sbb
and
test
lret
cmpsl
test
in
xor
repnz
rcrl
fistps
mov
mov
mov
adc
into
jmp
mov
push
pop
sbb
mov
push
add
jns
sbb
out
or
or
popa
int3
in
lcall
movsl
mov
push
stos
sub
sub
pop
jp
pop
sub
test
mov
add
outsl
dec
cmp
iret
daa
sbb
sub
out
insb
lret
jo
addr16
inc
lods
push
xor
lret
insb
sub
push
add
lds
repnz
or
mov
pop
imul
sub
lds
pop
mov
ljmp
dec
adc
js
pop
dec
push
push
inc
inc
mov
neg
sarb
out
movsl
cld
and
push
clc
lahf
sub
das
nop
mov
cmp
adc
popf
add
bound
outsb
popa
test
outsb
jge
sub
add
mov
or
nop
xor
das
mov
imul
jecxz
xchg
mov
int3
cmp
aam
in
jae
fistpl
push
repnz
int
pop
sti
rcl
gs
lret
aaa
dec
popf
push
push
mov
shrl
bound
push
sahf
into
jnp
lret
sbb
mov
call
ror
outsb
xor
sbb
add
inc
in
push
daa
ret
pop
xchg
lea
jb
push
add
sbb
sbb
movsl
push
jne
pop
nop
incl
inc
pop
fstl
mov
stc
stc
repnz
push
mov
pop
cmpsb
inc
or
ret
lods
add
outsb
jl
int3
xchg
ds
mov
jbe
sub
push
dec
sbb
shlb
cmp
rcrb
xchg
sahf
sbb
mov
mov
jne
insl
lods
pushf
movsl
inc
lock
stos
jle
or
lea
xchg
fnstenv
imul
xor
cmpw
fdivrp
inc
pop
add
in
xor
xchg
push
sahf
and
les
push
icebp
push
add
test
data16
and
jg
std
iret
jnp
iret
and
adc
xchg
xor
pop
pop
loopne
pushf
cmp
add
addr16
clc
mov
pop
lret
adc
jno
dec
push
ss
fdivl
cwtl
pop
jb
inc
mov
cld
stc
lea
stos
repz
add
out
push
mov
xchg
push
dec
mov
push
test
inc
xchg
or
jae
in
pop
bound
enter
and
push
ja
inc
loopne
je
cmpsb
mov
inc
scas
das
icebp
xchg
jle
sub
mov
cs
jg
sub
mov
jp
mov
int3
pop
aam
cmovl
imul
js
repz
jg
sbb
push
add
mov
inc
call
call
mov
out
loopne
int
inc
cmp
int
cmp
cltd
mov
jge
xchg
subl
adc
or
outsl
sub
lcall
inc
and
aam
push
push
lock
pop
adc
jnp
stc
inc
in
xor
push
add
mov
xchg
mov
ds
and
pusha
push
mov
sbb
sub
inc
cmp
rol
sbb
and
loopne
cmp
stos
mov
mov
imul
xchg
es
xchg
adc
sbbb
lcall
shlb
add
imul
xchg
testb
mov
rcr
out
call
insl
xchg
pop
mov
inc
jle
lret
pop
stos
push
insl
fwait
and
dec
lea
sbb
lock
ret
mov
sbb
mov
adc
pop
aaa
jg
push
mov
mov
xchg
nop
mov
mov
nop
and
int
ss
pop
dec
fcoms
jae
pop
pop
push
inc
lcall
and
in
int3
int3
scas
inc
iret
push
jo
mov
xchg
or
into
es
sub
aaa
fnsave
test
cmpsb
dec
push
pusha
cmp
push
nop
cli
push
fisttpl
mov
pop
dec
mov
add
xor
push
adc
mov
sbb
cmpb
scas
xor
pop
ficomps
roll
mov
aam
lret
lret
xchg
cwtl
adc
mov
cmpsl
sub
jle
mov
outsl
sub
shrl
mov
cmp
mov
ja
shrl
sbb
adc
lock
lods
or
xchg
adc
mov
stc
addr16
jae
or
jg
call
int3
push
cltd
mov
add
jno
cmp
pusha
aas
jb
ljmp
call
je
sbb
add
pop
jecxz
jbe
sub
cmp
loopne
ret
and
fiaddl
cmp
adc
sub
push
xor
gs
pop
lods
mov
dec
pop
faddp
push
sahf
xchg
sbb
sti
add
fldl
leave
mov
in
popa
push
out
movsb
je
pop
mov
adc
and
notl
icebp
nop
sub
xchg
std
popa
mov
fcompl
pop
enter
jnp
mov
dec
lcall
adc
out
test
push
je
mov
and
lds
icebp
pop
out
mov
loope
lods
push
cmp
iret
in
pop
pop
and
mov
push
sbb
popa
and
lea
xchg
mov
loop
arpl
pop
mov
mov
je
nop
sbb
pop
hlt
mov
pop
movsl
cltd
movsb
mov
mov
pop
xlat
sbb
je
mov
out
xchg
mov
repz
in
in
lds
pop
sub
es
leave
stos
xor
ret
ljmp
cld
push
lods
orl
rolb
icebp
gs
cmp
sbb
lret
das
in
cmp
div
imul
cmpsb
cmp
mov
lods
mov
imul
fwait
aas
jns
insl
stos
aas
mov
dec
xchg
leave
and
push
mov
ds
les
cmpsl
jb
mov
lahf
xor
fidivl
test
enter
dec
repnz
push
pop
sub
adc
pop
cmpsb
imul
inc
stos
in
pusha
aam
outsb
inc
cmp
ja
lods
es
lock
outsl
lret
bound
ficompl
movsl
stc
repnz
dec
cli
xchg
pop
pop
movsl
xlat
add
aaa
int3
jo
pusha
movsl
inc
pop
mov
jmp
outsb
arpl
push
hlt
and
cltd
dec
add
sarl
mov
xlat
or
pop
out
movsb
and
sti
daa
icebp
add
cmp
movsl
movsl
enter
push
iret
jno
adc
sub
in
push
data16
movsl
cwtl
push
sahf
fadds
sbb
cmp
and
mov
mov
cwtl
scas
push
je
sub
out
and
xchg
sarb
mov
xor
sysret
mov
mov
loop
mov
xor
out
loope
stos
sbb
push
xor
sub
es
or
aas
jge
movsl
in
push
scas
outsl
sub
fsubrs
or
test
stos
or
ds
pop
mov
adc
in
getsec
jecxz
jne
outsb
mov
loope
out
sti
repnz
repz
jl
movsb
shrb
push
popf
pop
sbb
mov
movsb
pop
outsb
sub
and
sub
jns
mov
or
xlat
les
nop
std
bound
pop
push
aaa
mov
pusha
adc
dec
test
dec
mov
xlat
sbb
xchg
mov
lea
shll
leave
dec
xchg
and
mov
pop
push
or
fisubrl
xchg
icebp
dec
mov
incb
stc
int
adc
out
and
pop
adc
or
rcl
out
sbb
xor
inc
xchg
jno
push
outsb
pop
push
and
fwait
aas
imul
insl
loop
mov
movsl
dec
inc
cmp
in
stc
mov
sbb
mov
inc
mov
aad
cmp
inc
and
and
add
subl
shl
rclb
xor
js
fwait
inc
sub
loope
sbb
in
dec
ret
or
test
daa
mov
in
xorl
push
push
iret
mov
pop
fidivrs
pshufw
mov
mov
cmp
dec
add
lea
pop
call
push
movups
or
cs
daa
js
inc
inc
imul
or
pop
push
mov
pop
fisubl
sbb
je
imul
or
jg
scas
mov
and
lret
mov
repnz
or
push
rcl
lea
in
jmp
xor
pop
subl
iret
inc
jnp
les
push
mov
xor
int
pop
cld
sbb
mov
push
test
cmp
push
xlat
fcoms
inc
push
fisttpll
cmc
sahf
cli
pop
mov
fiadds
cmp
rcrb
fsubs
push
sub
cmpsb
js
imul
push
shlb
out
xchg
sub
lahf
cmc
push
cli
or
into
fisubrl
push
and
sbb
into
add
push
pop
sbb
clc
fdivl
xchg
adc
sbb
aad
mov
iret
adc
dec
scas
and
adc
pop
pop
ficompl
pop
or
xchg
add
or
dec
out
lret
xorb
out
loope
pop
out
sahf
sbb
pop
out
hlt
outsl
mov
sbb
orps
imul
daa
js
and
or
outsl
or
fistpll
loop
clc
ficompl
bndldx
popf
fisttpll
mov
cmovl
xor
mov
push
bound
out
sub
lds
add
insb
sub
stos
push
arpl
add
push
out
fwait
jmp
push
idivb
jmp
sub
push
sar
and
adc
mov
call
mov
xchg
sti
push
pop
ds
xchg
push
lcall
pop
mov
xchg
and
sti
scas
aaa
addb
subl
fistl
inc
out
xchg
and
add
aad
and
jmp
sub
fld1
nop
add
jno
mov
mov
aas
pop
pop
jge
xchg
mov
test
pop
mov
js
shr
scas
sub
inc
ret
ja
stos
sub
sbb
jne
jp
push
and
int
pop
out
fwait
xchg
and
add
insl
in
mov
sti
pop
jae
push
andb
xchg
andl
bound
dec
lret
and
dec
push
mov
jmp
fwait
je
xor
addl
pop
jmp
push
sbb
xor
into
pop
aam
adc
orl
mov
jae
jge
ret
push
pushf
lret
dec
cmp
adc
lret
push
loopne
add
mov
adc
pop
push
ja
gs
ficoml
sbb
cmp
neg
dec
fwait
inc
movsb
jno
dec
es
or
insb
or
xchg
mov
xchg
pop
sti
pop
push
mov
push
call
pmulhw
jnp
jae
sahf
fwait
sbbb
test
mov
adc
mov
jae,pt
inc
mov
loop
mov
push
jmp
scas
xor
fdivl
or
les
xor
adc
xor
mov
sbb
nop
sbb
adc
test
pop
dec
cmp
andb
pop
lods
lock
dec
push
pop
idiv
mov
ret
loopne
fwait
xchg
push
out
xchg
xchg
mov
sarl
push
mov
mov
scas
mov
in
mov
xor
push
mov
sbb
shl
adc
adc
enter
bswap
sub
jnp
imul
mov
pop
jmp
mov
pop
jne
iret
pop
cmp
repz
mov
mov
mov
in
add
xlat
rorl
lock
je
lods
aam
or
adc
mov
xlat
lret
push
jnp
or
xor
inc
mov
fidivrl
faddl
mov
clc
ret
sub
dec
jb
inc
or
jns
sbb
xchg
or
and
cli
cmp
push
pop
inc
into
mov
sub
es
scas
pop
adc
adc
outsb
push
outsl
mov
inc
adc
clc
adc
fdivrs
dec
sbb
pop
xchg
add
dec
or
loopne
mov
pop
xor
mov
out
mov
jno
cmpsb
dec
jnp
push
movzwl
lcall
lahf
je
movsl
sbb
push
aam
inc
lcall
stc
sahf
inc
sub
jmp
xchg
mov
pop
jbe
cli
pop
wbinvd
add
and
shr
jmp
rorl
into
add
mov
mov
push
jp
push
rcrl
and
adc
je
out
dec
int3
je
mov
insb
loope
sbbb
sets
jo
add
push
out
adc
into
dec
out
mov
push
pushf
adc
aad
fistpll
bound
sub
push
jl
fbstp
leave
mov
inc
jp
dec
dec
mov
or
popf
pop
sbb
cltd
fsts
shr
sbb
scas
sub
pop
push
sbb
lcall
adc
sti
insl
outsl
push
pop
push
sub
sub
lret
orb
pop
lret
insb
pop
in
xor
cwtl
mov
mov
xor
in
rcll
scas
adc
mov
insl
inc
test
lds
lcall
and
daa
movsb
int
fcomi
test
mov
add
or
jle
xor
inc
dec
push
or
and
jmp
xlat
and
mov
lods
mov
mov
and
rcl
mov
inc
jge
inc
fwait
xor
push
dec
movsl
and
mov
repz
in
adc
inc
jns
out
daa
fstpl
nop
scas
push
mov
inc
gs
bound
fbstp
mov
scas
and
jmp
mov
imul
stos
jne
inc
dec
sub
rcl
adc
enter
jecxz
jg
fidivs
scas
lea
stos
pop
mov
jbe
pop
pop
pop
shrl
nop
mov
inc
mov
adc
dec
mov
sub
adc
cmp
cmp
xchg
in
mov
mov
jle
sarl
sbb
mov
or
pusha
add
mov
scas
js
lods
jne
adc
push
cmpsb
dec
cmp
jle
popl
imul
lcall
shlb
push
cmc
pop
sub
leave
cld
mov
xor
inc
jmp
and
movsl
nop
cmpsb
push
js
sbbl
ficomps
mov
mov
repnz
push
jns
lds
int3
clc
mov
ss
mov
popf
enter
xchg
xor
inc
dec
push
outsl
mov
sub
ret
fisttps
inc
sti
push
outsl
mov
frstor
push
xchg
inc
mov
cmp
test
mov
imul
dec
mov
mov
mov
lods
pop
pop
ret
xor
inc
mov
xchg
into
or
jae
jnp
lret
iret
std
push
mov
xor
popf
xor
dec
mov
mov
mov
repz
and
or
in
pop
ret
push
add
test
jl
xor
test
gs
xchg
std
lret
and
jle
test
dec
loope
push
xchg
les
ds
out
aam
inc
jb
arpl
mov
adc
into
pushf
pop
and
inc
les
imul
jae
cmp
aas
dec
es
repz
push
sbb
inc
fwait
out
jo
add
jns
dec
lds
add
sub
push
mov
sbb
sti
cmp
sbb
inc
outsl
add
les
jmp
push
push
cmp
aad
xchg
arpl
jmp
jb
test
jno
popa
and
in
xchg
or
mov
int
mov
aad
iret
repz
icebp
insb
mov
xorl
in
cli
fwait
jno
repz
cmpsb
dec
and
lcall
testl
in
mov
rorl
icebp
lds
mov
pop
ret
in
sahf
test
test
lret
lds
push
add
push
insl
xchg
aas
push
pop
stos
push
add
jbe
cli
gs
mov
jo
cmpsl
jns
add
fcmovnbe
cmp
in
and
push
pop
push
ror
and
mov
mov
xchg
inc
mov
inc
xorl
icebp
or
mov
pop
stos
push
test
inc
int
enter
push
sbb
xchg
out
and
dec
popf
mov
cmp
mov
xchg
jno
pop
addl
rcr
mov
pushf
inc
out
and
adc
fs
call
insb
sub
adcb
jne
js
jae
jb
dec
pop
dec
out
js
iret
adc
pop
insl
rorl
xchg
loopne
push
jl
enter
inc
mov
xchg
sub
ljmp
movsl
jmp
xlat
fwait
shlb
xchg
fadds
cld
loopne
xorb
loopne
nop
je
pusha
popa
push
sbbl
in
orb
and
add
loope
sub
inc
push
jmp
aad
fmull
mov
das
pop
push
aad
dec
insb
inc
test
jmp
jecxz
push
pusha
jno
lds
jge
push
push
sbb
mov
jb
les
ljmp
movsl
fwait
mov
iret
arpl
addr16
cmp
mov
aaa
xor
idivl
or
inc
fnstenv
icebp
clc
cmpl
int
rcll
push
je
mov
sbb
or
mov
icebp
cmp
pop
mov
imul
cmpsl
clc
adc
pop
dec
loope
lret
and
nop
repnz
rclb
lds
mov
mov
mov
cmp
mov
test
ret
mov
xor
add
adc
or
push
add
into
jno
outsl
or
fmull
mov
in
jmp
popa
lods
movsl
mov
and
sub
dec
loope
icebp
cmc
popf
and
leave
notb
lcall
push
ljmp
sub
xchg
jno
mov
aad
sbb
inc
call
mov
loop
pmullw
sub
xchg
stos
je
ficompl
lcall
cmp
test
push
dec
or
jg
in
inc
lahf
pop
stos
mov
divb
std
scas
nop
fisttpl
gs
jmp
pop
inc
xchg
mov
ja
adc
mov
pop
rol
or
lret
shll
jecxz
jo
icebp
pop
fistps
imul
xor
jl
outsb
push
daa
push
jmp
xor
or
mov
scas
lcall
fs
mov
pop
adc
rcll
and
out
jmp
jns
aas
inc
sub
xlat
aas
sub
addr16
adc
sub
jp
daa
jp
mov
mov
stos
mov
push
and
dec
xchg
test
negb
xor
cltd
fcmovne
int3
aas
shlb
js
mov
add
cltd
sbb
cltd
lock
xchg
push
sub
add
xchg
cld
cmp
int3
jle
cmp
cmc
xor
add
push
or
lret
mov
outsl
ds
dec
jbe
fildl
scas
movsb
lea
movsl
movsb
sarb
int
xchg
push
pop
sub
pop
inc
test
adcl
loope
push
push
add
lods
push
outsl
inc
sub
mov
xchg
stos
adc
rcrb
adc
mov
dec
aad
push
push
sub
loopne
push
aad
in
sbb
repz
adc
test
outsb
push
ds
cli
hlt
inc
or
and
mov
imul
and
xor
mov
mov
mov
xchg
daa
imul
aas
xor
lock
cltd
push
pop
fcoms
cmpsl
push
sbb
mov
push
loop
push
out
pop
stos
out
rclb
pop
ja
mov
fdivrl
loop
push
cmp
not
loope
cmpsl
mov
decb
push
add
jo
rcrl
or
or
add
jns
push
arpl
inc
add
icebp
xor
rcl
jmp
das
addr16
add
lock
and
outsl
data16
shll
shrl
imul
out
cmp
insb
push
xchg
inc
fmull
mov
adc
jne
mov
push
pop
test
inc
cmpsb
fistpll
push
scas
and
aad
xor
jecxz
add
xor
dec
cmc
jns
and
cmc
std
push
sub
jbe
xchg
inc
fstpt
mov
fisttpll
sbb
push
lcall
jg
insl
in
imul
insb
cmp
pop
movsb
mov
sub
imul
jo
mov
frstor
test
and
leave
outsl
push
dec
lods
loope
jmp
divb
insl
lock
jbe
and
fisubrl
jnp
or
jecxz
xchg
fstl
or
mov
frstor
mov
jo
push
mov
aas
movsb
sub
repnz
mov
out
or
add
lock
xor
inc
add
in
mov
jg
cmp
aaa
jns
es
ljmp
into
lock
les
out
sbb
sbb
pop
mov
movsb
mov
inc
insb
fdivrs
dec
adc
out
test
testl
cmpsl
inc
pop
pop
pop
pushf
pop
xchg
and
dec
xor
shll
adc
enter
push
push
data16
jl
fbstp
andl
sub
in
inc
push
test
xchg
subb
sub
xchg
add
lods
dec
sar
xchg
repnz
stos
cmpsb
jno
and
pop
mov
dec
jbe
mov
xor
outsl
outsb
repz
mov
jg
sbb
outsl
loop
adc
or
das
mov
ljmp
dec
stc
mov
dec
lods
mov
add
pop
fdiv
adc
xor
inc
jmp
daa
movsb
cmpsl
jno
test
rolb
adc
jne
push
inc
orl
jp
lret
add
sub
js
inc
pop
sbb
cmc
fmul
pusha
test
and
inc
push
mov
mov
lods
xchg
mov
in
sub
outsl
jle
dec
ja
mov
in
xchg
cltd
mov
pusha
rclb
pop
testb
sahf
and
xchg
pop
fcoms
add
and
imul
jg
mov
int3
shll
jno
ljmp
nop
lret
cmpsb
movsb
fsubl
jb
dec
or
mov
jecxz
xchg
inc
int
mov
xchg
push
jae
out
jle
sbb
out
or
xor
mov
repz
imul
fiadds
cmc
pop
lret
sbb
cmc
adc
cld
aad
xchg
test
pop
pop
int3
jl
sbbb
and
mov
sahf
cmp
push
sub
mov
addr16
dec
shrb
lcall
out
push
dec
fimull
icebp
testl
dec
cmp
xchg
repnz
mov
sbb
aaa
jnp
iret
cmpsl
test
inc
jb
mov
aaa
aas
test
pop
daa
adc
ja
mov
pop
aas
in
mov
sahf
sub
lcall
dec
int3
xchg
and
inc
cltd
add
or
je
push
ljmp
pushf
jae
cwtl
test
icebp
push
xor
add
xor
add
fstp
lahf
push
shr
popf
cmp
jne
pop
inc
orb
push
fisttpll
adc
add
cmp
mov
inc
call
lret
adc
pop
or
xchg
push
sbb
imul
xchg
pop
mov
mov
push
pop
push
or
xor
mov
dec
je
cmp
xchg
fildl
scas
mov
adc
dec
dec
shll
mov
add
push
jns
fdivrs
mov
jo
push
add
repz
sarb
adc
or
inc
std
cmpl
gs
inc
mov
aaa
inc
out
je
test
and
enter
and
cmc
xor
sub
ljmp
loop
mov
imulb
rorl
cltd
xor
mov
mov
adc
out
dec
mov
lock
adc
cmc
lcall
scas
fsubrp
ds
sbb
adc
test
mov
mov
inc
mov
gs
mov
mov
aad
insl
lods
ret
jmp
fisttpl
ljmp
or
pushf
dec
sub
js
dec
shlb
jmp
pop
popf
dec
and
dec
cmc
rcrl
iret
pop
push
mov
xchg
jne
inc
fmuls
cmpsb
aad
xor
fmul
inc
fs
sbb
push
pop
add
xorb
cmpsl
in
cmpsl
aaa
imul
dec
clc
mov
jge
repnz
lods
cli
daa
mov
cld
lret
mov
push
cmp
data16
xchg
je
jnp
dec
ret
sub
jae
push
imul
adc
mov
out
dec
jns
lret
sub
mov
push
jge
mov
rcrl
jae
xor
iret
in
inc
or
test
pop
je
push
cmp
adc
lret
xor
sbb
bound
ja
inc
xor
xchg
pushf
lret
insb
sahf
jp
ss
or
popa
mov
mov
mov
ds
xor
in
mov
xlat
outsb
das
loope
jb
addr16
sbb
js
stc
sbb
cmc
inc
int3
mov
fwait
mov
int
sub
sub
xchg
orl
adc
jb
rcll
cmc
arpl
lret
jns
jl
popf
icebp
xchg
ds
pushf
imul
inc
pop
jae
cltd
leave
insb
sti
mov
daa
mov
aad
and
inc
jb
xchg
test
lahf
outsl
test
inc
pop
fwait
je
push
add
ficompl
movsb
movsl
xchg
xor
jo
and
xor
push
ljmp
push
insb
push
xchg
jno
andb
mov
mov
pop
in
xor
in
jae
cmp
aaa
dec
adc
mov
shll
mov
das
sbb
add
and
sbb
es
lea
cmp
das
xor
cltd
sahf
shrb
rolb
pop
jmp
stos
outsb
sbb
in
pusha
test
pop
lods
dec
jns
pop
mov
xchg
sub
push
sti
cwtl
sub
cmpb
mov
mov
pop
scas
dec
int3
daa
add
cmp
bound
adc
es
push
jbe
aad
mov
xchg
jb
int
pop
fsubl
ret
or
jne
cmpb
sub
pop
fsts
out
jecxz
pop
in
out
sub
stos
dec
xor
daa
push
ja
cwtl
push
jne
mov
push
int3
mov
int3
mov
sbb
xchg
fisubrs
pop
mov
pop
ret
pushl
stc
xor
imul
mov
mov
fucom
shlb
mov
mov
adc
fistpl
cmp
mov
push
and
lods
pop
flds
aas
or
xor
ret
lea
xchg
sub
cmp
in
mov
sbb
mov
add
push
stos
loopne
je
push
lods
adc
sub
pop
inc
cmpsb
dec
dec
adc
mov
cli
jecxz
add
int3
or
pop
ljmp
sub
popa
jnp
js
sub
push
add
mov
and
pop
xor
sub
leave
adc
loopne
pop
mov
sbb
dec
pop
ljmp
inc
ds
sbb
inc
jg
lret
filds
jmp
mov
jae
adc
or
push
out
and
js
outsl
ret
push
leave
and
shll
mov
aaa
dec
sbb
cmp
ror
jns
popf
rcl
fldcw
inc
push
imul
fmul
adc
dec
xchg
std
xchg
ffree
cwtl
push
xchg
int
push
out
mov
sbb
mov
fadds
jno
mov
bound
sbb
dec
and
testb
cs
loope
std
aam
js
scas
lret
imul
adc
cmp
lods
sarl
test
mov
mov
push
aas
xorb
cwtl
divl
or
add
push
xchg
pusha
push
sti
mov
les
mov
arpl
popf
es
arpl
sbb
xchg
cli
adc
fwait
pop
mov
out
mov
cmp
out
jbe
das
lcall
mov
or
enter
mov
mov
sarl
jmp
test
stos
inc
inc
xlat
das
pop
xorb
scas
add
xor
cmp
ficomps
gs
mov
inc
fistps
sti
jbe
jo
jno
jo
outsl
fwait
mov
and
xchg
xorb
sbb
pop
sub
pop
les
test
bound
sub
aas
pop
arpl
aad
mov
mov
or
cmp
in
inc
sarb
aad
pop
push
mov
pop
and
cmpsl
jecxz
imul
cltd
mov
mov
cmp
pop
xchg
xlat
add
out
add
sub
jge
mov
int
scas
mov
call
adc
sahf
out
xchg
mov
adc
ljmp
xchg
sbb
xor
mov
or
xchg
mov
mov
jo
das
dec
inc
adc
cmp
bound
mov
cld
add
sub
sub
jae
xor
bound
mov
push
dec
ret
repnz
xchg
scas
cmp
mov
push
push
ds
orl
in
pop
arpl
std
mov
in
leavew
lret
inc
nopl
ss
jbe
jne
add
orb
daa
clc
cmp
xchg
jne
pop
sub
jl
inc
inc
push
jb
popf
mov
add
xlat
jbe
and
in
lahf
or
push
lds
pop
sub
outsl
mov
rcrb
mov
roll
repz
lock
aad
mov
loope
rol
mov
push
xchg
pop
pop
into
dec
adc
mov
inc
or
loop
xchg
aam
pop
xor
fiaddl
jle
out
daa
xor
aam
stos
imul
lds
mov
insl
or
fwait
inc
aad
xor
or
pop
lret
icebp
fwait
sub
xchg
stc
pop
movsb
xor
aam
sbb
adcb
test
cli
pop
or
pop
sbb
add
xchg
lcall
aas
cmpsl
xlat
cmp
push
cmc
or
movsb
into
outsb
sbb
jg
pusha
in
xlat
push
and
sbb
mov
pop
push
push
and
mov
pop
inc
pop
cmpl
out
dec
sbb
ja
sbb
jge
arpl
inc
pop
dec
or
cli
or
jns
leave
mov
fidivs
out
jle
shlb
ret
sub
pop
inc
loope
fdivrs
out
pop
into
or
insl
sbb
mov
mov
fs
test
ret
out
aam
jp
pushf
xchg
or
testl
dec
addb
in
xor
pop
inc
lret
xchg
stos
push
aas
fcoml
push
iret
repz
add
sbbb
add
mov
xchg
in
jae
sbb
lcall
jnp
push
sub
das
or
mov
cmp
adc
test
fstl
add
xchg
mov
sarl
jl
and
outsb
xchg
daa
and
cmp
push
das
or
cmp
insl
mov
fsubp
mov
addr16
sub
sahf
sub
lods
pop
mov
or
jno
rolb
movsl
and
fnsave
lcall
adc
loop
popf
idivl
xor
mov
cmpsb
jmp
lret
push
add
iret
insb
inc
fcoms
push
fucomip
pop
js
fsub
jp
push
jae
mov
sub
pushl
cmp
outsl
sbb
inc
xorb
mov
out
cmpsl
push
adc
and
adc
aaa
sbb
into
jns
negl
stos
push
pop
sbb
or
popa
repz
add
xor
ret
mov
add
fistl
pop
xchg
enter
dec
or
mov
mov
add
insl
push
arpl
push
outsl
sbb
dec
adc
mov
mov
rcll
sub
rep
sbb
test
cmpsb
mov
or
fstp
sub
fidivl
testl
push
daa
fidivrs
fdivrs
lods
bswap
pop
mov
dec
ljmp
ja
adc
xor
mov
shrb
std
jecxz
bound
pushf
movsb
inc
ss
lods
insb
pop
arpl
int
adc
sbb
in
push
std
les
dec
adc
add
in
jae
fs
cmp
add
cmp
dec
jno
cwtl
ljmp
imul
bswap
mov
jb
fsubp
xchg
cmp
lret
repz
lods
dec
gs
push
repz
aaa
scas
bndldx
mov
push
int
push
sub
clc
mov
insl
stos
xchg
shrb
cmc
sbb
mov
sarb
shr
pop
pusha
lahf
in
mov
push
test
cmpsl
cmp
es
jo
and
enter
lods
es
jo
stos
jae
xchg
roll
fstpl
pusha
in
or
fucomp
inc
cmp
out
inc
xchg
pop
jo
sti
stos
mov
inc
jnp
push
pop
xchg
and
pop
inc
add
mov
fchs
int
xchg
stos
dec
cmp
dec
insl
push
int3
inc
xlat
mov
xor
dec
and
popf
rol
cmp
add
data16
and
jno
xor
push
ror
test
cmp
ds
mov
mov
jp
outsl
aaa
push
idivb
cs
outsb
pop
inc
xchg
and
es
sarb
enter
ljmp
lock
jns
dec
fimull
pop
xchg
bound
outsb
sub
fwait
jp
nop
das
iret
das
push
dec
test
sub
cmp
leave
lcall
sbb
fs
ret
movsl
mov
cli
testl
and
data16
inc
repz
lea
mov
dec
jns
push
jno
pop
xchg
mov
jno
ret
insb
dec
cmp
mov
inc
pop
cmp
repnz
push
jne
dec
mov
pop
mov
push
xchg
addr16
xor
mov
and
imul
aad
add
cld
pop
repz
imul
outsl
js
ljmp
movsb
hlt
inc
shl
xchg
mov
stos
mov
mov
dec
inc
add
push
adc
fs
inc
not
dec
das
push
jle
cmpsl
sahf
loop
xchg
sahf
sbb
sub
sahf
jmp
es
rcl
jae
jo
pop
jno
cltd
clc
sbb
daa
jmp
add
lret
outsb
cmc
inc
dec
pop
lahf
mov
jle
dec
les
push
add
inc
lock
pop
leave
sbb
cmpb
bound
or
imul
dec
dec
xchg
insl
sbb
ret
dec
hlt
mov
pushf
mov
pushf
fimull
rclb
add
aas
mov
aas
push
mov
xor
into
or
sahf
jno
and
mov
pushf
or
and
xchg
outsb
mov
adc
xor
or
cmp
outsb
jo
cmp
jb
into
arpl
lea
dec
outsb
mov
cs
stc
daa
in
imull
sti
push
adc
adc
sbb
aad
stos
cmp
aam
xorl
inc
repz
dec
mov
xchg
or
aad
jp
sub
push
cmp
ret
xor
imul
and
sub
xor
xor
leave
xchg
push
shrl
lahf
fnstenv
inc
repz
jo
or
dec
or
jecxz
mov
sub
push
hlt
loopne
mov
xchg
mov
mov
and
ljmp
sarl
and
fnstsw
mov
xor
ret
ret
ret
xlat
lods
sbb
mov
insl
inc
push
jae
cld
out
lret
les
icebp
out
lock
mov
mov
dec
mov
pop
aad
mov
das
dec
aas
fucom
jo
push
aas
push
jge
sub
jge
gs
scas
mov
fnsave
cmp
pusha
shlb
repnz
sbb
js
jle
fstpl
jo
imul
mov
clc
fadd
push
jnp
and
scas
dec
add
cmp
push
mov
fistps
xchg
pop
or
iret
outsl
rcrl
loop
jae
pop
lds
bound
mov
lock
lock
jl
lods
inc
jge
push
movsl
inc
cmpsb
xchg
aam
rcll
xlat
push
push
cmp
mov
inc
push
cmc
cmpsb
out
xor
rolb
mov
cmp
rorl
adc
stos
data16
rcll
lcall
mov
aas
dec
sub
mov
dec
lret
cmp
repnz
lcall
call
shll
sbbl
inc
adc
mov
stc
jl
lret
rolb
adc
push
adc
scas
mov
push
or
adc
sub
xor
add
or
nop
bound
add
xlat
inc
jno
dec
pop
xchg
xchg
dec
inc
out
adc
inc
call
pop
imul
lahf
ja
aad
shr
xchg
in
mov
jp
lea
scas
aas
cmp
add
add
dec
jg
aaa
cmp
push
jp
popa
popa
fcmovb
jae
sti
xchg
and
std
cmp
sub
add
sbb
mov
push
and
in
sbb
push
cmp
xchg
push
sub
add
rcrl
mov
mov
xor
push
mov
xor
adc
xchg
pop
movsl
sub
aas
shll
sti
push
pop
test
lret
ljmp
xor
xor
orb
mov
push
jns
jb
lods
mov
aas
push
and
dec
fcoml
out
xchg
fstpt
lods
mov
fs
sbb
insl
pop
pop
add
fcomps
int
outsb
push
push
push
push
cmp
push
fistl
insb
xlat
sbb
jmp
xchg
mov
mov
cltd
dec
jecxz
jg
mov
dec
xchg
xchg
push
stos
xchg
push
scas
loopne
adc
dec
sub
xchg
lret
mov
pop
cmp
pushf
jne
mov
xor
pop
sbb
bound
ja
adc
loope
sbb
or
clc
dec
adc
scas
ss
xchg
jmp
xor
int
jge
pop
sub
rcrl
ret
add
push
dec
or
xchg
sub
xchg
loopne
xchg
push
lods
push
out
adc
cmp
xchg
out
fdivrl
or
inc
or
js
lea
iret
leave
jo
cmp
sub
lds
rcrb
sbb
scas
pop
cmp
adc
lgs
jg
bound
pop
lcall
and
jno
shrl
fucomip
cmp
sbb
dec
and
adc
mov
cmpsl
jno
aam
popa
ret
mov
and
mov
xor
adc
lret
addb
loope
daa
push
push
roll
dec
iret
rolb
jns
ja
dec
fistpll
pusha
push
loop
xor
mov
mov
push
mov
push
scas
icebp
dec
imul
je
xor
xchg
nop
push
sbb
mov
or
lods
jecxz
jo
pop
test
xor
inc
adc
mov
xchg
xchg
mov
imul
mov
mov
push
and
scas
imul
jno
js
fldl
sub
push
cmc
xlat
jg
rclb
or
sub
mov
pop
push
inc
imul
xchg
xchg
inc
stos
xor
scas
in
push
sbb
dec
sub
pop
ret
cmpsb
mov
dec
fsub
or
sub
xchg
xor
out
dec
add
aaa
mov
xchg
shrl
ret
or
das
imul
icebp
aad
loopne
dec
mov
mov
mov
stos
and
stos
pop
sub
mov
dec
adc
cmc
sbb
adc
sub
pop
adc
push
loop
inc
hlt
aaa
in
sti
adc
push
ret
test
fsubrl
sbb
sub
mov
mov
outsb
iret
je
adc
adc
push
jmp
fnsave
or
scas
or
mov
xchg
pop
push
mov
loopne
lods
inc
mov
negl
or
pushf
xor
xchg
out
fs
movsl
inc
cmp
and
cli
lock
scas
adcl
aas
fwait
mov
and
push
xor
mov
loope
push
sbb
mov
clc
popf
sub
adc
lods
adc
test
shlb
ss
pop
std
push
loopne
jno
sbb
add
dec
add
jbe
gs
mov
and
ret
sbb
sbb
xchg
rcrl
mov
fcmovne
fstpl
lahf
test
mov
push
test
lret
jmp
orl
add
mov
inc
jns
aam
inc
ljmp
js
lret
cmp
sbb
cmp
add
mov
mov
or
das
and
cmpsl
mov
call
imul
xchg
mul
lret
stc
sbb
dec
sbbl
pop
testl
push
push
pop
icebp
jge
xor
pop
sbb
and
sub
jmp
cmpsb
fisubl
gs
int
add
jl
mov
lret
in
je
es
fdivrs
xchg
or
mov
subb
movsb
in
sahf
pop
dec
xchg
xchg
rcl
sbbb
and
test
mov
push
in
mov
xorl
mov
pop
test
jmp
in
or
pop
inc
loope
nop
sbb
imul
sar
lds
stos
mov
movsl
shlb
xor
adc
add
dec
add
arpl
les
leave
fsubrs
inc
lretw
pop
xchg
adc
mov
das
fs
sbb
enter
dec
fisttpll
clc
hlt
popf
fdivrs
insb
xor
jge
sbb
ret
insb
lret
xchg
movsl
pop
jb
xchg
jl
and
adc
jb
pop
cmpsl
inc
xlat
lods
aas
or
cmpsb
out
into
push
mov
push
iret
test
fcomps
rcrb
int3
adc
ret
xchg
fnstenv
jp
nopl
mov
inc
cs
or
inc
test
add
push
shlb
jl
pop
push
xor
pop
scas
es
jg
fsubrl
insl
aad
xchg
dec
push
jmp
dec
fcoms
aas
pop
fistpl
mov
mov
jns
mov
jno
out
jge
pop
test
xchg
sbb
mov
clc
inc
lds
roll
ret
in
scas
dec
dec
push
iret
xchg
fbld
lret
lea
imul
lea
les
or
cltd
jne
jns
push
fstpl
outsb
mov
scas
dec
cmp
aas
inc
fsubl
jne
test
inc
mov
cmc
push
ds
std
push
daa
dec
sbb
loopne
xor
jo
es
mov
cmp
xor
lds
mov
and
ja
outsl
faddl
aam
sub
mov
into
ficoml
push
shrb
push
fcmove
andl
fdivr
cld
es
xor
pop
popf
and
hlt
stos
aaa
lea
data16
pop
push
decl
and
js
imul
xchg
sbb
and
adc
add
daa
mov
repz
pop
dec
jnp
mov
imul
pop
cmpsl
popf
mov
inc
imul
addr16
mov
popa
mov
adc
mov
outsl
cs
bound
jbe
call
loope
cli
mov
adc
fldcw
loope
xor
repnz
inc
dec
pop
repnz
push
pusha
shlb
mov
add
mov
xchg
lea
mov
lea
mov
ret
sub
push
dec
stos
and
clc
adcb
cld
xchg
sub
xlat
push
lods
push
xchg
test
rcrl
pop
and
je
inc
sub
xchg
scas
cmp
imul
jno
leave
xchg
pop
loop
movsb
test
pushf
xchg
inc
popa
cmpsl
fistl
and
cmpb
sub
jecxz
dec
daa
int
nop
repnz
loop
aad
popa
ror
push
movsb
push
aam
jo
xor
out
pop
jp
out
cmp
rolb
mul
sbb
pop
jmp
xor
ret
xorb
mov
clc
sbb
lock
enter
mov
rcrb
or
pop
scas
adc
inc
sbb
mov
les
fdivl
add
sub
cmp
arpl
lahf
push
mov
or
mov
fsubrs
adc
cmp
cmpsb
mov
test
rcll
mov
imul
popa
or
subb
repz
arpl
je
cmp
dec
sub
fidivrl
into
test
add
test
sub
addr16
and
lret
fcoml
pop
shr
cld
mov
aas
pop
push
mov
and
xchg
cmp
or
sarb
push
cs
arpl
bnd
xchg
sysexit
scas
aaa
and
test
test
outsl
and
or
pop
gs
adcl
mov
mov
insl
arpl
daa
adc
adc
leave
add
hlt
and
or
adc
or
mov
mov
sub
js
adc
add
idivl
dec
or
cld
bound
pop
addr16
mov
push
int
fbstp
xor
inc
loopne
andb
pop
ret
lods
scas
cltd
adc
cwtl
in
xor
mov
xor
cltd
mov
cmpsl
push
cmp
cmp
mov
or
jmp
mov
sbb
sbb
les
ds
mov
mov
seto
fistl
insl
hlt
mov
rorb
pop
jge
inc
sti
test
jno
inc
mov
loope
push
fwait
and
push
sbb
mov
mov
sbb
push
and
or
dec
int
mov
cmp
and
xor
mov
ss
clc
adc
jb
and
mov
sbb
cmp
pop
and
fmull
clc
add
pop
in
test
scas
mov
gs
mov
mov
xor
les
lcall
test
sbb
mov
push
jge
scas
cld
adc
inc
out
pop
fisubrl
mov
fbld
addr16
lcall
and
add
cwtl
jge
and
icebp
mov
cmp
xchg
mov
or
xchg
add
jae
jb
daa
loope
cmp
roll
or
mov
mov
scas
repnz
lret
jecxz
shlb
inc
sub
adc
das
add
push
loopne
mov
lret
sbb
cs
test
pop
cmpsl
roll
repz
mov
or
insb
int3
scas
sub
scas
cltd
adc
stos
das
outsl
pop
mov
dec
xchg
xchg
imul
lods
sbb
stc
mov
stos
dec
push
push
xchg
lea
sub
gs
xlat
jbe
sti
out
ret
push
std
sarl
scas
add
inc
jno
mov
pop
mov
mov
fwait
add
shlb
lahf
in
mov
sub
ret
insl
mov
push
adc
cmp
mov
cmp
enter
repnz
sbb
mov
add
cld
push
mov
inc
jmp
fmuls
adc
mov
fs
adc
sub
xor
pop
outsb
shrb
jbe
xchg
xor
popf
loopne
cmp
in
add
js
mov
pusha
scas
imulb
je
mov
jno
mov
int3
cwtl
mov
jl
cs
test
mov
xor
mov
mov
out
imul
jae
rclb
outsb
fnstcw
sbb
mov
stos
loopne
scas
hlt
shlb
inc
addl
stc
sbb
pop
insb
mov
push
cltd
jecxz
adc
dec
fsubl
jle
push
ret
mov
addr16
sbb
out
div
gs
push
push
shrb
ret
jne
mov
cmp
scas
into
xor
clc
xchg
cmp
xchg
imul
push
popf
push
les
cli
adc
xchg
and
mov
push
add
cmp
xchg
cmpl
lret
dec
jge
icebp
and
sub
xor
and
xchg
push
mov
ret
jne
adc
aas
stos
mov
lods
jge
loopne
xorb
leave
lock
call
push
movsb
jbe
fwait
and
pop
mov
mov
call
sbb
dec
add
mov
rorl
js
sarl
xor
imul
in
aas
in
imul
mov
stos
test
shr
mov
mov
test
aaa
fldenv
jae
data16
sbb
dec
and
jne
repnz
int
adc
adc
sbb
in
ret
in
or
cmpsl
lods
jl
movsb
cmp
push
xor
sub
mov
xchg
out
push
popa
xor
mov
lret
push
repz
stos
ss
push
jo
push
lods
add
jbe
iret
insb
xor
push
or
lahf
lea
paddsw
xor
cli
adc
inc
pop
push
pop
dec
jne
mov
jmp
into
das
mov
dec
pushl
test
frstor
jmp
sub
addb
sub
sub
in
cmp
ja
mov
mov
mov
lds
jbe
push
inc
add
sbb
jecxz
fnstenv
rorb
and
sahf
jmp
sti
subl
jb
inc
fldt
in
std
mov
data16
cmp
push
fwait
in
loop
xor
into
hlt
add
adc
mov
and
adc
add
out
adc
shl
or
push
mov
mov
loopne
into
fs
ja
incb
cmc
je
adc
pusha
mov
xor
mov
mov
pop
aam
sbb
add
xchg
pop
xchg
mov
lods
out
loop
test
ret
cmp
mov
aad
dec
ja
out
cs
adc
rcrl
sub
scas
lods
pop
add
jbe
test
jb
xlat
in
pop
xchg
in
push
and
in
or
cwtl
and
lret
jne
cld
jnp
add
xor
out
jno
rorl
loope
lods
dec
andl
mov
aas
mov
repnz
push
adc
test
movsl
jae
lods
adc
jnp
cmp
rorb
clc
loope
dec
cmc
mov
dec
mov
mov
xchg
ja
jne
dec
clc
mov
mov
mov
loopne
cmp
ljmp
sbb
cmp
lods
cltd
mov
or
sub
roll
sbb
pop
std
jmp
xchg
into
or
popa
mov
mov
fmul
jmp
movsb
mov
adc
jae
push
or
sbbl
out
pop
jo
jns
popa
xor
ljmp
or
dec
daa
push
mov
pop
sbb
fs
in
ret
or
or
or
shll
in
test
fbstp
xor
setns
pop
xor
add
mov
sub
or
and
xor
xor
test
in
pop
int
push
stos
mov
sarl
pop
or
push
test
fs
stos
add
scas
lahf
rcrl
mov
iret
adc
pop
sub
mov
es
sbb
sub
cmpsb
in
lods
add
sub
mov
dec
stc
inc
mov
cli
xor
scas
cmp
out
push
cld
push
jae
daa
xchg
or
mov
or
mov
out
ss
fwait
jp
cmp
adc
movsb
mov
or
cmp
cmc
ds
pop
pop
sarb
add
push
xchg
sbb
push
loopne
negl
xchg
out
rolb
mov
pop
stos
mov
cmpsl
clc
xorl
fcmovnbe
ds
mov
sub
outsb
or
add
daa
cmp
jp
cltd
dec
insl
fwait
lock
and
imul
scas
into
sarl
xchg
popf
jae
aad
pop
xor
xchg
inc
lods
mov
pop
inc
mov
jp
pop
xchg
pop
adc
mov
push
push
lock
inc
inc
test
xchg
mov
sub
lods
xchg
xor
popf
pop
fdivrs
aam
out
push
lods
jmp
insl
pop
jne
dec
into
enter
hlt
dec
pop
sti
mov
mov
scas
jae
jae
sub
in
test
sbb
xchg
push
xchg
adc
in
xor
ja
mov
mov
std
inc
and
mov
dec
and
mov
xorb
jl
or
mov
push
adc
sbb
mov
push
imul
mov
es
dec
shrl
adc
cli
std
mov
ja
pop
movsb
sub
add
fcmovnu
cmp
enter
cli
xchg
insb
xchg
or
xchg
push
jb
mov
add
push
mov
sbb
stos
fucomip
and
loop
cmp
add
fsubl
xor
inc
lcall
leave
push
arpl
xor
and
mov
or
out
push
xchg
push
xor
push
out
mov
insb
jge
ret
and
lods
iret
pop
cmp
sub
ljmp
test
rol
xlat
dec
dec
movsl
adc
dec
mulb
mov
sarb
int3
cmp
xchg
jae
and
decb
stc
mov
add
jb
pushf
jno
pop
fiadds
push
xor
cmpl
idivb
push
sbb
clc
fsts
mov
sbb
in
orl
sub
jmp
inc
ficomps
inc
jl
loopne
inc
mov
xchg
dec
sbb
into
out
push
adc
dec
mov
mov
xchg
popa
into
cltd
cs
es
push
mov
cld
mov
nop/reserved
add
jne
insb
push
je
clc
push
push
or
mov
and
orb
push
bound
xor
inc
pop
addl
xor
pop
xor
or
lcall
push
push
dec
and
sub
push
sub
mov
fbld
push
mov
out
sub
dec
mov
in
ljmp
insb
enter
insb
call
mov
push
xor
mov
shr
fisubl
test
movsl
jle
loop
loop
fwait
loope
xchg
jmp
add
sti
popa
dec
stos
cmp
and
enter
cmp
mov
cmp
xor
sub
pop
or
xor
add
adc
pushf
test
xchg
lds
or
fidivl
add
cli
pusha
adc
xor
push
inc
mov
dec
rcrb
je
mov
xchg
mov
aas
mov
push
and
jbe
shl
inc
push
or
or
push
fiadds
dec
sti
lret
lret
ljmp
and
ret
mov
jb
xchg
imul
test
es
orb
jg
inc
test
push
xchg
jle
lock
jg
or
cmp
movlhps
mov
insb
xor
pop
lock
push
cbtw
ret
jmp
mov
cs
fmul
in
pushl
xchg
cmp
mov
arpl
fbld
out
mov
je
mov
imul
inc
dec
lods
outsl
sbb
inc
or
cmp
in
ja
js
mov
inc
xor
cltd
test
sub
mov
cltd
out
fsubl
inc
test
mov
ret
pop
dec
ja
push
out
bound
andb
xor
lea
dec
mov
daa
xchg
loope
ds
insb
mov
inc
repz
in
inc
cmc
sbbb
push
xorb
clc
js
ljmp
icebp
les
jae
xchg
imul
xchg
out
lds
js
js
mov
push
push
pop
aaa
cwtl
dec
repnz
inc
sub
fists
mov
cli
cmp
cli
pop
mov
lret
dec
fcmovu
jbe
hlt
xor
scas
in
mov
cmp
icebp
sbb
push
divl
arpl
test
shl
ret
test
loopne
outsb
mulb
test
loopne
jns
inc
pop
ret
jbe
hlt
pop
imul
gs
popf
cmp
push
adc
fiaddl
pop
mov
in
insl
sub
hlt
test
test
cmp
push
push
or
adc
inc
call
cld
cltd
imul
xchg
scas
push
mov
into
fs
jb
push
dec
std
jl
inc
fsubs
dec
mov
loop
or
cmp
pop
fisubrs
out
cmp
xchg
aad
mov
getsec
push
lds
pusha
or
sbb
mov
jns
mov
push
mov
sub
mov
stos
into
lods
xlat
mov
orb
push
cs
adc
xor
fdivs
sbb
dec
xchg
xlat
cwtl
jae
out
js
mov
push
pop
data16
stc
inc
hlt
mov
pop
dec
jo
mov
xor
push
or
push
lahf
enter
into
mov
ljmp
cmp
mov
jbe
adc
xchg
sbb
sbb
or
mov
jnp
sbb
fxch
addr16
hlt
sub
mov
xchg
das
sbb
imull
pop
fadds
js
xchg
xchg
jb
xor
sbb
aas
sub
pop
pop
sub
xchg
pop
movsl
shll
fisubrl
xchg
aam
mov
push
into
int3
dec
dec
imul
push
call
sub
lock
cltd
fwait
arpl
xchg
mov
iret
sbb
fwait
scas
enter
mov
dec
mov
jae
fdivrs
jmp
enter
or
inc
and
nop
push
lahf
xchg
incl
rcrb
adc
xor
pmaddwd
dec
pop
dec
inc
nop
jno
mov
dec
loopne
jl
pop
pop
mov
mov
jecxz
fdivs
adc
add
pop
int3
popa
insl
pop
sub
jle
cli
jnp
xchg
fldcw
dec
xor
add
addb
push
jg
movsl
pop
data16
scas
mov
imul
xor
jp
les
shr
dec
fwait
out
add
add
sub
xchg
scas
mov
testb
pop
sbb
jns
call
faddp
icebp
push
xchg
push
jb
cld
and
lahf
addr16
arpl
push
imul
push
daa
lea
cli
punpcklwd
mov
aas
lahf
jmp
xchg
dec
imul
icebp
inc
out
push
cmpb
push
mov
dec
iret
xchg
mov
int3
jl
popf
cmp
lret
pop
movsl
std
inc
mov
loope
jne
jns
imul
pop
pop
aad
ret
ljmp
and
jno
lret
roll
sub
cmpsb
inc
loopne
push
cmpl
inc
xchg
mov
std
sbb
mov
nop
stos
xlat
movb
stc
imul
jae
jno
in
icebp
cmp
shll
das
pop
add
rolb
cmp
imul
js
mov
push
daa
mov
sbbb
push
xor
outsl
sbb
push
stos
filds
arpl
adc
sti
xchg
sbb
sub
adc
fdivrs
inc
xchg
pop
sub
add
mov
add
mov
mov
add
sbb
jge
shll
mov
jg
loope
popf
repz
hlt
cmp
pop
pop
xor
xchg
push
cmc
leave
jbe
loope
sub
dec
jmp
mov
cli
outsb
or
sub
sub
into
mov
sub
xchg
cmpsb
add
cmpsl
sub
pop
cltd
imulb
stos
push
lods
movsl
or
imul
icebp
sti
and
lcall
jne
jne
jmp
jp
aaa
sub
lahf
imul
push
stos
pop
sarb
stos
xchg
in
lock
call
sub
outsl
dec
gs
jge
aad
addr16
ret
or
das
es
dec
ds
pop
xchg
cli
pop
shl
pop
jl
sbb
inc
push
inc
adc
jb
pop
lret
scas
hlt
in
out
pop
cmpsb
call
pop
mov
hlt
movsl
inc
xchg
shll
ficomps
push
enter
mov
mov
clc
inc
test
cmp
jo
dec
cmp
lret
push
fwait
cmp
shl
fisubl
sub
xchg
jecxz
in
call
push
mov
mov
out
or
cmp
out
add
repz
out
lock
mov
adc
rorl
push
and
sarb
sub
adc
mov
sbb
dec
fdivr
stc
aaa
xor
dec
inc
in
addr16
mov
cmp
mov
sbb
jl
popa
jle
movsb
repnz
jecxz
sbb
pop
mov
and
xchg
mov
lods
aam
push
into
scas
out
push
mov
pop
inc
cmp
sub
imul
xchg
inc
mov
ret
out
div
sbbb
mov
sbb
out
insl
mov
pushf
cmp
hlt
xor
adc
jp
rolb
sub
std
fs
jg
mov
xor
or
xchg
mov
data16
push
sbb
rorl
sub
add
scas
or
cmp
pop
aas
cmp
fistpl
mov
pop
push
outsl
xlat
das
inc
call
and
ffree
jp
jo
push
mov
push
loope
inc
sahf
mov
fsubrl
xlat
ss
push
es
push
outsb
loopne
ljmp
sub
dec
sarl
cwtl
mov
mov
xchg
in
dec
int3
dec
ficomps
push
mov
pop
add
negb
outsl
sbb
out
inc
pushf
fsubl
sbb
inc
cmp
shrb
push
aaa
idivb
rclb
add
and
ret
adc
sbb
inc
cmc
or
adc
jle
daa
xor
cwtl
push
inc
adc
push
mov
mov
inc
in
adc
mov
and
jnp
mov
or
sub
stc
sbb
cltd
cmp
pusha
lahf
aaa
cli
in
pop
jnp
jge
mov
dec
aam
pop
or
pop
mov
fistl
jns
adc
inc
mov
fucomi
or
aam
popa
adc
push
xor
push
push
loopne
sar
les
les
push
fabs
and
loopne
loopne
ret
sub
cld
lds
int3
test
or
test
in
pop
jno
jno
xor
push
std
xchg
mov
and
divl
stos
in
mov
or
scas
mov
dec
clc
dec
hlt
xor
fidivrl
ret
lds
outsl
mov
lds
mov
xor
imul
pop
sub
idiv
outsl
add
and
jge
pop
cwtl
sub
cmp
cmc
out
sub
aaa
or
leave
fst
jne
adc
idivl
cmp
popf
lcall
fidivl
jl
adc
or
pop
lods
roll
sub
out
mov
jae
push
je
mov
lret
repz
sub
hlt
add
add
adc
cmp
js
mov
shll
jle
arpl
xchg
cltd
sbb
movsb
sbb
mov
adc
sub
pop
js
or
cmp
subl
pop
push
and
mov
xor
into
add
mov
adc
sub
jg
test
or
sub
bound
xchg
pop
jne
shlb
fisubrs
clc
sti
hlt
add
xor
add
xchg
js
sbb
cmp
mov
dec
jl
pop
lret
xlat
mov
mov
pusha
and
stc
or
stos
out
dec
lock
outsb
jl
xor
and
inc
out
jge
inc
loop
pop
int
push
sub
out
sbb
sahf
inc
and
xor
mov
push
mov
imul
inc
outsb
push
pusha
sub
enter
aad
insb
or
lcall
sub
lods
xor
sbb
adc
mov
subb
cltd
pop
xchg
adc
sub
add
pop
cmp
arpl
or
sbb
jg
bound
mov
sub
push
lcall
into
cltd
fs
movsb
pop
lret
fnstcw
jecxz
push
xor
sub
sub
mov
movsl
dec
xor
lret
cmpsl
xchg
jns
xchg
cmp
mov
icebp
test
adc
mov
jl
movsb
jns
hlt
wrmsr
mov
sarb
test
cmpsl
call
mov
mov
sti
pop
in
push
addr16
das
repnz
xor
insl
jecxz
mov
aas
sbb
xor
iret
loope
inc
loopne
js
repz
addr16
stc
mov
sahf
mov
or
loopne,pt
cmp
ret
aas
xchg
sarl
jno
addr16
cmp
jb
mov
mov
rorb
pop
xchg
fmuls
xchg
into
jle
mov
jp
or
cmc
mov
icebp
jbe
loop
dec
pop
enter
sub
rcl
dec
mov
int
mov
cltd
std
push
adc
repnz
push
pop
mov
xchg
popa
xchg
adc
inc
dec
lods
mov
rcrl
fsubrp
cli
xchg
push
xchg
test
hlt
fldt
aas
dec
stos
sti
and
cmp
jle
add
out
std
xchg
pop
and
xchg
inc
mov
jae
scas
jecxz
jbe
inc
aaa
xor
or
movsb
xchg
imul
out
lea
adcl
mov
adcl
inc
mov
mov
aas
shll
push
xchg
or
aad
inc
mov
test
mov
lcall
mov
lret
sbb
and
daa
nop
mov
stc
cld
adc
repnz
and
mov
mov
sub
sub
sub
push
aas
push
insl
cmc
stos
loopne
add
fmull
xchg
mov
fisubl
sti
add
dec
pop
xlat
jp,pn
pop
xchg
cmpsb
mov
mov
push
sahf
adc
sub
sbb
sub
int3
xor
or
lret
jo
je
jge
mov
and
cwtl
loope
jg
cmp
sti
negl
bound
sub
leave
pop
mov
out
stos
test
out
not
fwait
or
jnp
nop
jecxz
dec
popa
xchg
aaa
insb
mov
repnz
lock
test
mov
sar
xor
stos
sbb
dec
std
add
dec
adc
ja
icebp
fsubp
aaa
push
movsl
icebp
mov
add
std
test
fldt
push
cmp
or
gs
es
push
sub
lcall
push
shl
movb
push
adcl
pop
push
pop
pushf
cmp
cwtl
dec
addr16
clc
pop
and
or
lea
sub
popf
outsb
pop
ss
xchg
pop
dec
cmc
fs
bound
fdivs
adc
in
ret
mov
inc
mov
lods
lahf
pop
push
xchg
inc
adc
idiv
jae
jp
cmc
lods
imul
inc
icebp
sub
and
cltd
lods
and
lret
cmp
xchg
fstpt
jle
fs
inc
fdivrs
aaa
orb
cli
push
aaa
movsl
in
mov
lcall
mov
mov
dec
mov
mov
xlat
sub
movsb
xor
out
pop
jg
imul
pop
pop
int
xor
mov
or
lods
std
and
xchg
out
jge
adc
mov
fimuls
jns
jns
sahf
cli
jne
push
inc
mov
sbb
mov
repz
data16
mov
pop
mov
addr16
dec
or
cmp
loop
dec
nop
add
cmpsb
inc
out
loope
push
sub
cmp
fildll
mov
dec
cmpxchg
loopne
das
sbb
negb
fcompl
mov
subl
xor
fdivrp
jo
cmpsb
cli
aam
xchg
cmp
mov
cli
pop
sbb
jae
es
movsl
aaa
and
dec
arpl
cld
int3
scas
jp
out
jl
hlt
xor
outsb
into
fidivl
cmp
insb
mov
cmp
mov
jns
and
hlt
mov
pop
jp
icebp
bound
push
out
add
inc
mov
hlt
jno
pop
in
aas
insb
rolb
data16
dec
jp
cltd
es
std
hlt
xor
cmp
inc
inc
dec
push
xor
daa
out
loop
rorb
or
mov
jae
pop
jmp
xchg
outsb
sahf
jb
fwait
cld
push
xor
inc
aaa
jmp
aaa
hlt
in
cld
adc
cmp
shrl
jle
ljmp
jae
dec
es
push
cwtl
dec
arpl
mov
mov
ret
jo
ret
dec
popa
mov
xor
shrl
push
ficomps
rorb
mov
pop
lods
mov
shr
cltd
mov
movsb
into
or
xchg
cltd
out
push
lds
jns
push
cmp
mov
mov
loop
mov
neg
lcall
xor
imul
fwait
int
pusha
test
jne
rolb
mov
or
mov
aas
enter
dec
je
add
jle
stos
jno
sahf
lret
aas
loope
pop
ja
pop
rcrl
cmp
jle
and
popf
xchg
fdivrl
into
jge
test
xchg
adc
ja
lods
int3
dec
repnz
and
adc
out
xchg
test
loope
repnz
stc
pop
ret
gs
adc
and
xchg
jns
xorl
jmp
iret
xor
lret
popa
ret
loop
add
sub
das
jge
or
cmpsl
xchg
mov
imul
sbb
in
sbb
leave
ja
loop
movsl
scas
insb
xchg
and
cmp
mov
push
ret
pushf
mov
orl
rol
sarl
enter
cmp
or
cmp
mov
inc
dec
std
inc
inc
cmp
popf
add
cs
and
dec
cmpsl
dec
xor
jae
arpl
pop
aam
pop
mov
rcrl
in
push
shll
mov
test
ss
cs
cli
dec
and
jo
jecxz
push
fs
mov
xchg
xor
mov
lods
scas
loop
cs
aaa
mov
pushf
or
inc
sub
mov
mov
xchg
sbb
sub
aaa
jns
stos
dec
pop
lds
pop
push
test
jecxz
cmp
std
mov
das
jnp
std
inc
nop
scas
insl
sbb
mov
rcll
add
push
ja
enter
lea
insb
jb
ret
inc
int3
and
imul
add
mov
arpl
cmpsl
arpl
push
dec
test
imul
lods
testb
pop
les
mov
bound
ret
testl
push
cmc
push
sub
into
mov
inc
stc
pop
adc
inc
stc
mov
fdivs
dec
sbb
mov
lods
sub
adc
xchg
cmc
pushf
out
cmpsb
push
hlt
inc
notl
mov
subb
daa
mov
ss
cmp
or
test
cli
and
out
mov
icebp
jle
inc
imul
jp
sbb
jle
fsubp
into
hlt
out
inc
fwait
loopne
mov
mov
pop
push
sub
inc
jmp
inc
cli
mulb
mov
outsb
jmp
leave
outsb
ja
testb
cmc
push
mov
inc
inc
fdivs
lahf
inc
jmp
adc
mov
ljmp
dec
ret
sbb
cltd
cld
std
fiadds
dec
aas
mov
cltd
add
std
dec
xchg
or
pop
and
sub
push
or
xlat
dec
inc
and
mov
ja
and
outsl
add
insb
mov
mov
out
lahf
cmc
pop
dec
push
aaa
imul
sbb
repnz
outsb
dec
mov
ficompl
into
push
mov
add
aam
and
jae
test
bound
loopne
sub
data16
add
addr16
imul
push
fmuls
xor
jae
mov
lea
repnz
cmpsb
xchg
jne
cwtl
into
mov
mov
in
mov
cmp
jecxz
pop
jno
bound
jmp
outsl
mov
adc
jns
xchg
xchg
xchg
cmp
sub
negl
xor
pop
in
incb
pop
inc
pop
scas
insl
add
dec
cwtl
sarl
mov
int3
es
sbb
push
mov
loopne
add
outsl
enter
cmp
mov
mov
inc
je
push
add
xchg
mov
fidivrl
and
xchg
andb
loope
out
bound
iret
push
jecxz
mov
pop
cld
or
mov
movsb
cld
fildl
mov
rclb
mov
sub
movsl
into
call
inc
shlb
fstp
xor
jl
sahf
jmp
mov
adc
mov
dec
inc
mov
push
push
ja
push
pop
test
jns
dec
in
jle
clc
in
aas
lods
xchg
xor
lret
pop
faddp
ret
xchg
cmpb
flds
lahf
pop
xchg
mov
dec
sbb
ds
push
mov
add
pop
lret
xchg
adc
and
fcomps
rclb
and
std
mov
mov
shlb
push
jle
push
sar
mov
in
data16
enter
dec
ficomps
mov
lret
fprem
push
mov
sub
fwait
jmp
and
jns
mov
or
pop
jmp
pusha
inc
mov
pop
xchg
test
daa
cs
es
jbe
insl
ret
jecxz
dec
pop
lea
lahf
push
data16
jns
ffreep
stc
pusha
dec
cmp
lea
incb
test
adc
inc
lods
xlat
roll
fs
in
jnp
mov
push
xor
dec
out
pop
sub
test
aad
jnp
dec
sbb
and
adc
inc
mov
test
pop
lret
xchg
xchg
out
clc
sbb
pop
add
xchg
jge
test
into
loop
inc
jb
mov
notb
add
mov
stos
jne
lcall
sahf
test
pop
xlat
js
dec
xchg
xchg
sbb
push
test
add
clc
mov
ret
fildl
mov
mov
xchg
push
out
aad
out
xchg
sbb
xlat
adc
in
adc
jge
mov
test
xor
xchg
out
nop
pop
adc
inc
adc
jg
lcall
nop
push
stos
mov
ds
stos
xchg
adc
gs
mov
fcmovbe
xor
mov
dec
pop
shll
je
push
icebp
shrb
arpl
mov
in
lret
nop
dec
mov
xlat
push
fistl
xchg
xchg
inc
push
jae
lock
adc
pusha
mov
shl
gs
and
adc
repz
js
jbe
jge
xor
xchg
das
inc
test
pop
or
jae
or
xor
dec
mov
or
std
int
mov
or
outsb
lock
push
mov
cmp
dec
hlt
pushf
dec
xor
xchg
xor
divl
in
mov
aaa
fnclex
inc
ret
lds
sbb
nop
mov
orb
movsb
jno
pop
add
test
add
sbb
cltd
jns
hlt
xor
or
mov
out
adc
stos
je
push
sub
ds
and
xor
push
jmp
mov
aad
fisttpl
and
xor
lods
shlb
leave
jne
cmp
sub
push
pop
cld
adc
test
fstp
mov
and
ds
repz
push
xchg
and
sahf
fsubl
xchg
inc
cwtl
cltd
arpl
dec
inc
mov
dec
pop
push
stos
cmp
sbb
xlat
imul
fsubs
out
loope
mov
jns
enter
lret
inc
inc
sar
jecxz
dec
std
shr
jg
sub
lea
jle
inc
mov
xchg
popf
mov
scas
shlb
xchg
fidivl
adc
inc
pop
sarb
xchg
insl
and
and
cwtl
lret
sub
push
cld
cld
int
stos
std
fwait
xchg
out
push
xchg
or
push
xchg
imul
leave
inc
popa
lock
negl
dec
cltd
ja
cld
es
insb
pop
out
hlt
scas
cmpl
in
push
aad
jne
fs
and
jg
mov
mov
xchg
mov
inc
jle
dec
dec
jae
mov
jae
xlat
aam
adc
sub
mov
add
lcall
jne
or
negl
pusha
or
fs
mov
dec
xchg
mov
push
jb
pushf
mov
test
mov
jg
inc
sahf
dec
movntq
inc
mov
pop
lahf
notb
addr16
int
jmp
popa
inc
push
cmp
in
das
notb
lock
or
repz
add
sub
add
mov
jle
inc
fcmovu
inc
jnp
lds
jnp
and
mov
push
repnz
pop
dec
outsb
mov
or
sub
lret
call
icebp
ss
mov
jae
cs
dec
in
mov
mov
sbb
and
add
mulb
and
jmp
push
xor
push
or
notl
sub
repnz
ret
add
lock
and
jo
or
jbe
xor
into
fistps
lods
negl
cltd
push
js
inc
cmp
or
lcall
fucomip
fmuls
push
fldenv
sub
adc
dec
flds
jg
gs
lret
daa
xlat
enter
int
mov
dec
mov
push
and
jmp
sbb
lods
insl
mov
pop
pop
inc
ja
mov
pop
test
sub
add
cmpsl
and
mov
push
xor
inc
loope
cmp
nop
cmpsb
or
loop
es
jmp
adc
cmp
and
test
enter
cs
jae
jp
icebp
movsb
pop
adc
and
push
loop
inc
scas
insb
mov
aas
sub
pop
lock
mov
xor
xor
imull
add
sbb
sub
out
mov
fisttps
xlat
push
push
out
jge
inc
cmp
cmp
insb
adc
cmpb
fwait
add
push
add
cltd
lahf
mov
enter
sub
pop
and
lods
add
xchg
pop
ret
or
ret
cmc
push
lods
inc
xchg
or
ljmp
ljmp
les
xor
cmc
cmp
imul
movsb
jns
ret
mov
sti
iret
adc
in
pop
push
push
aaa
mov
shrb
mov
fs
push
sbb
out
push
or
pop
push
xchg
fwait
push
dec
push
pop
insb
std
dec
sahf
xor
xchg
mov
mov
xchg
bound
add
fldcw
pushf
fisubrs
icebp
jge
jg
loop
aaa
or
push
xchg
sbb
ds
mov
sub
add
fs
sub
sarl
sub
mov
xor
xlat
mov
loop
sub
test
sub
pop
mov
and
jnp
adc
add
stos
daa
push
push
add
rolb
into
jb
stos
lahf
dec
rcll
and
rcll
cwtl
lods
mov
nop
add
jbe
insl
adc
jge
add
lods
stos
or
shll
lods
push
pop
pop
inc
test
ret
into
js
movsb
sub
cmp
test
in
pop
out
jg
adc
push
es
mov
xchg
and
out
jo
imul
sbb
sub
lcall
jmp
adc
movsl
mov
jmp
sub
ret
sbb
mov
jo
sti
call
sub
and
adc
sbb
scas
sub
jbe
je
int
mov
dec
scas
add
xchg
cmc
pushf
ror
movsl
xchg
mulb
inc
xchg
ljmp
mov
or
dec
and
add
call
jecxz
ja
jle
or
out
popa
pop
test
add
and
shrl
or
mov
lods
mov
nop
shlb
fbstp
test
or
dec
dec
mov
outsb
fistl
dec
or
inc
mov
scas
xchg
pop
mov
add
jge
sti
leave
xchg
adc
es
cli
lds
in
or
aaa
and
aad
mov
imul
cmpsl
fs
sub
pop
subb
movsb
ror
ror
int
mov
pop
xlat
rorb
loopne
jp
sbb
test
push
sti
xor
dec
sbb
push
stos
mov
insb
out
cmp
mov
scas
push
mov
lahf
out
iret
xchg
ss
push
das
rcrb
aas
cmp
push
notl
movsb
mov
push
cmc
mov
push
sbb
mov
pop
and
push
push
xlat
les
ret
xor
or
stc
sahf
sub
mov
out
movsb
jge
xor
out
sahf
mov
cmpsl
push
arpl
sbb
cmp
jp
mov
imul
int3
or
shr
test
shlb
push
pop
shl
in
adc
mov
andl
addl
jne
add
adc
dec
andl
outsb
and
dec
mov
rorl
jo
push
pop
sub
aaa
cmp
and
lret
or
data16
ljmp
and
and
lahf
or
inc
in
lods
dec
out
and
mov
cmpsl
dec
mov
xchg
insb
lea
mov
es
fnstenv
dec
stc
mov
leave
mov
mov
xor
movsl
adc
mov
insl
xchg
movsl
rcrl
popa
or
das
add
jae
fsubp
int
dec
xchg
mov
jae
or
push
inc
mov
push
rcrl
rcl
in
cmp
gs
cmpb
loope
jae
inc
jne
aad
rorb
dec
push
mov
push
dec
icebp
call
pop
fidivl
mov
cmp
aas
mov
mov
ljmp
push
cmp
jns
push
xor
mov
test
test
sub
xor
push
jge
popf
adc
pop
pop
cmpsb
pop
call
adc
dec
mov
or
cmc
stos
negb
mov
adc
push
jb
clc
pop
add
sar
jp
fstp
mov
xor
pop
add
pop
aas
into
xchg
push
sbb
scas
add
dec
fdivp
inc
imul
jno
sub
call
fnstsw
pop
in
in
mulb
push
and
leave
pop
mov
mov
adc
push
out
sub
pop
leave
les
das
aam
jl
jo
dec
mov
aam
cmp
xchg
repz
mov
push
in
call
jg
and
ds
and
sub
ljmp
mov
cld
dec
insb
pusha
cltd
add
mov
pop
les
movsb
xchg
fisttpll
fisttpll
mov
pop
sahf
jl
movsl
mov
movsl
std
fwait
push
inc
in
push
add
shrb
ljmp
mov
stos
xor
das
xchg
mov
push
imul
dec
add
inc
shl
sbb
pop
ja
push
data16
insl
or
mov
jl
pop
mov
iret
test
sub
mov
push
mov
out
mov
xor
mov
cmp
mov
pop
aas
cmp
movsl
mov
cltd
enter
ds
out
jne
pop
ss
add
mov
lret
call
pusha
mov
lret
into
imul
mov
xchg
and
and
loop
inc
inc
and
not
popf
rclb
push
adc
stos
push
test
fcoml
in
sbb
pop
int3
je
jb
and
mov
lret
xor
inc
mov
cld
sbb
aaa
movsl
xchg
inc
subl
push
jnp
icebp
sbb
and
push
ret
fisubrl
add
scas
xor
add
mov
mov
jne
lcall
mov
mov
pushf
test
mov
or
adc
add
pop
pusha
xor
out
arpl
repnz
adc
stos
pop
je
icebp
std
inc
xchg
je
xor
ret
enter
test
fidivrl
imulb
mov
inc
faddl
add
arpl
cwtl
sub
loop
inc
xchg
jo
loope
mov
cmp
insb
and
push
xchg
jns
add
xchg
jbe
pop
jmp
cmpsb
jmp
mov
ss
or
lds
pop
jbe
pop
dec
xchg
dec
aas
jo
test
and
mov
mov
push
ss
and
pushf
lds
jge
popf
popl
je
stos
push
sti
inc
fldenv
dec
pop
leave
nop
into
les
popa
and
orb
stc
rorb
ljmp
jns
int3
ja
stc
inc
aad
mov
jns
fidivrs
int3
call
mov
push
incb
pop
jl
in
inc
iret
imul
push
aaa
das
mov
negb
loope
jnp
mov
xor
push
xor
push
xlat
stos
repz
sub
xchg
xlat
inc
sbb
or
add
mov
push
dec
lea
cmc
sub
jmp
and
call
mov
rcrb
mov
es
js
ljmp
pop
fstp
add
jecxz
icebp
push
pop
adcb
push
pop
inc
jne
outsb
cmp
ljmpw
sub
xchg
xchg
scas
rcr
pop
lods
sbb
cmp
xchg
call
fldcw
fs
jge
jmp
jnp
sbb
mov
arpl
mov
pop
insl
iret
mov
add
xchg
mov
mov
mov
ret
into
push
xchg
and
jl
xchg
shlb
stos
clc
clc
mov
add
xchg
hlt
dec
imul
nop
sahf
lea
std
jle
sub
mov
in
in
sub
jge
ss
inc
fwait
lods
out
jmp
rorl
and
lods
jle
cmp
js
fs
out
xchg
mov
jb
clc
jge
test
xchg
xchg
lds
and
jne
push
push
sbb
ret
jmp
jecxz
mov
add
jns
xchg
jnp
adc
push
call
inc
repnz
shlb
push
loopne
aad
rep
push
stos
xchg
add
jnp
dec
int3
inc
and
adc
aam
adc
add
mov
jle
scas
mov
std
test
inc
dec
jp
stos
fistpl
ds
into
fists
cmpsl
pop
inc
outsl
in
stos
fidivrs
pop
lods
pushl
push
mov
into
fisttpll
jl
repz
std
outsb
push
xchg
mov
sbb
fdivr
daa
loope
jmp
xchg
push
xchg
cmp
loopne
cmp
mov
push
mov
add
xchg
or
fcmovu
sub
push
push
aaa
mov
stos
xor
ficompl
callw
mov
or
mov
push
mov
les
inc
push
insl
lret
sbb
into
shl
adc
jecxz
arpl
mov
ror
sub
add
jmp
mov
addr16
rorb
pop
cmp
sbb
jmp
into
sub
loop
and
mov
negl
lcall
and
or
sub
sbb
adc
and
xchg
mov
adc
insl
cmp
ret
inc
xor
or
iret
out
rolb
xchg
std
jo
cmp
push
fsub
cmc
push
or
push
imul
stc
lret
cmpsl
jb
outsl
in
add
pop
bswap
out
jo
mov
in
es
push
push
arpl
pop
dec
enter
arpl
lds
pusha
cmovbe
lret
ret
insl
xor
pop
push
jae
cwtl
mov
sub
pop
fidivrs
dec
mov
inc
in
popa
outsb
jnp
mov
xchg
or
ja
inc
jae
rorb
out
pop
and
xor
or
and
lods
pop
jle
adc
lret
das
mov
je
pop
arpl
pop
sub
imul
push
cwtl
jge
pop
mov
stc
outsl
test
arpl
push
sbb
daa
insb
dec
or
in
inc
mov
aas
or
pop
iret
xchg
jno
mov
jl
adc
inc
xchg
test
out
add
std
xchg
jle
rcr
sahf
inc
and
jp
cmc
cld
icebp
sub
imul
pop
add
cmp
test
ljmp
xchg
imul
cltd
movsl
mov
mov
fstps
test
shlb
sub
jle
xchg
das
xor
gs
adc
xchg
dec
lret
gs
insb
adc
cld
clc
ret
sti
or
jno
adc
push
dec
mov
mov
cmp
xor
pop
bound
push
dec
mov
mov
jge
call
rcrl
sub
idivl
cmpsb
push
adc
paddusb
fwait
mov
mov
fwait
jb
dec
cmp
bound
inc
sarb
scas
pop
mov
jmp
shl
loop
test
cli
lret
mov
iret
sub
lret
sahf
add
mov
aam
xlat
sub
icebp
adcl
movsb
xchg
insb
and
sar
mov
jp
mov
pop
pop
pop
dec
pop
fld
subl
xchg
pop
ja
jl
and
jno
jge
and
inc
lret
inc
std
int
rorb
mov
pop
loope
clc
add
xlat
rcrl
subb
jae
dec
sbb
fwait
pop
pop
cs
xor
cmp
pop
jge
or
sbb
into
std
dec
mov
loop
mov
ret
xchg
dec
xor
pcmpgtd
cli
loope
mov
push
test
shll
inc
stos
xchg
jmp
mov
call
xor
inc
dec
inc
dec
call
aaa
push
mov
sub
mov
add
lds
cmp
mov
mov
jecxz
push
ffree
fildll
in
xor
aaa
and
leave
or
or
lock
xchg
add
and
imul
lahf
xchg
jmp
neg
mov
shlb
icebp
outsl
lcall
mov
pop
mov
jo
and
mov
repz
loop
mov
cltd
mov
inc
mov
and
jp
xlat
scas
pop
lcall
mov
pop
popl
fisubl
addl
out
rolb
stc
fisttps
sti
jp
or
pop
in
jo
subb
sub
imulb
stc
arpl
bound
inc
insl
jmp
cmp
js
adc
in
cmp
sbb
loope
or
dec
inc
xchg
sub
out
adc
popa
pop
mov
cmp
adc
mov
jecxz
inc
cmpl
mov
movsl
daa
push
je
js
cmp
mov
push
xchg
jb
rolb
enter
std
iret
or
popf
loopne
cli
aaa
inc
pop
scas
mov
jmp
mov
pop
imulb
and
sub
or
adc
in
jo
cltd
lods
inc
cmp
in
mov
jnp
bound
mov
fnsave
movsl
ffree
xor
dec
jg
int
clc
inc
push
sbb
add
out
shrl
rcr
mov
cwtl
out
or
dec
xchg
aas
fcmovu
std
add
or
or
pop
int
cwtl
inc
ljmp
sbb
add
movsl
cwtl
ss
out
lea
loop
clc
dec
dec
hlt
inc
xor
mov
mov
nop
addl
lods
adc
pop
daa
inc
mov
in
mov
mov
lods
aaa
adc
lcall
pushf
xor
inc
jns
ret
xor
lcall
mov
jp
push
mov
jg
insb
comiss
and
sti
sub
pop
scas
or
cld
inc
neg
cs
not
pop
add
and
xchg
sbb
xchg
xor
adc
sbb
pusha
sahf
aam
imul
jae
dec
leave
cli
ljmp
popf
pusha
dec
xor
xchg
xor
fs
inc
sub
lcall
jno
mov
push
cltd
add
clc
pop
in
jp
es
data16
dec
pop
mov
ljmp
xchg
pop
ret
cld
xor
mov
mov
xor
test
lret
dec
fcoms
jge
mov
jge
push
jb
dec
or
fidivrs
add
sub
inc
loop
xchg
dec
xchg
cwtl
aaa
fdivl
out
pop
fiaddl
loop
mov
add
pusha
mov
or
das
mov
and
lcall
shlb
jl
and
mov
cmp
pop
in
sbb
ja
and
and
or
or
inc
clc
add
nop
jle
mov
lods
mov
in
mov
ret
daa
gs
adc
test
push
cmp
inc
scas
mov
and
imul
mov
lret
fisubrl
repnz
fisubl
mov
iret
jecxz
push
add
inc
das
arpl
add
xchg
fsubrs
fs
sub
mov
xchg
andl
out
push
xlat
jns
in
dec
cli
adc
loopne
pop
in
cwtl
loop
sarl
cltd
jne
add
sti
fbld
dec
push
inc
rorl
popf
jmp
das
mov
call
mov
icebp
push
jne
stos
cmp
dec
into
rcrb
and
adc
pop
push
fdivrl
mov
sub
adc
mov
negl
enter
insl
fisubrl
adc
subb
pop
push
in
xor
xchg
arpl
sbb
divl
push
add
imul
sub
jle
imul
inc
or
sahf
cs
in
mov
mov
or
jb
push
mov
inc
fisubrs
nop
test
mov
mov
cmp
scas
iret
adc
cmp
popa
mov
test
imul
daa
or
test
rcr
xor
xlat
roll
mov
das
out
sub
jp
mov
inc
out
mov
andl
cmp
xlat
push
addr16
xchg
pop
scas
gs
loopne
inc
mov
xor
rcrb
in
repz
push
loopne
xor
sbbb
xchg
sub
mov
insb
mov
lds
xlat
insb
sub
jbe
repnz
test
mov
xor
call
dec
out
mov
jmp
push
lahf
sub
sbb
imul
outsl
lret
jp
pminsw
inc
fstpl
sub
mov
insl
inc
call
sarl
jns
call
adc
cmp
out
jne
filds
pushf
clc
xor
mov
and
popl
dec
jmp
inc
ss
popf
jno
shrb
rolb
stos
xchg
mov
xchg
add
mov
inc
jp
mov
repnz
sbb
clc
cld
cmp
add
shll
scas
ljmp
es
in
and
stos
push
inc
dec
pop
jecxz
imulb
in
pushf
dec
fucompp
and
mov
inc
fmul
or
mov
or
cltd
cmp
ds
cmp
sbb
ljmp
ret
lret
iret
push
pop
xchg
dec
insb
add
mov
movsl
mov
mov
inc
call
jmp
pop
mov
sbb
in
test
out
jp
in
rorb
scas
push
xchg
xor
mov
out
repnz
push
lds
sbb
shrl
cmpsb
inc
pop
int
or
leave
and
adc
jns
or
lea
out
cltd
bnd
jb
iret
pop
or
lret
inc
mov
rorl
aam
xchg
xor
ja
and
sbb
fnstenv
idivb
adc
stos
cs
pushf
mov
mov
dec
or
fwait
test
mov
sbb
in
jl
ljmp
leave
imul
scas
push
and
stos
dec
les
sub
inc
ds
fnstcw
call
push
pop
push
das
jns
ja
push
push
xlat
pop
rcl
sub
imul
fcoml
cli
jno
or
push
sbb
nop
popa
test
cmovb
shl
ret
add
test
sbb
xchg
fistpl
xor
outsb
into
lcall
test
xchg
sub
imul
pop
sarb
cmc
xchg
xor
jbe
cmpsl
pusha
jmp
dec
dec
aad
mov
into
pop
cmpsb
ss
mov
test
jo
ja
ret
mov
sbbb
sahf
ss
jp
push
ds
mov
ret
jno
lods
shlb
mov
pushf
leave
add
insb
movsb
xor
jl,pt
je
pusha
in
popa
xchg
jno
mov
imul
pusha
sbb
mov
push
jge
iret
sbb
lcall
inc
pop
sbb
cmp
loope
push
add
mov
popa
cmp
pop
testb
pop
cmp
adc
cmp
push
xor
jns
cmp
sub
pop
stos
add
rcrb
push
jnp
mov
mov
jmp
movsb
mov
dec
cmp
sub
lret
cmp
lea
push
scas
sbb
ds
in
lahf
in
sbb
xchg
popf
test
push
jns
cmp
popa
fstp
paddb
or
or
scas
rcrb
bound
sbbl
outsb
and
inc
imul
dec
aad
mov
jbe
mov
aas
add
inc
and
and
pop
inc
mov
mov
mov
sub
push
popf
mov
inc
into
pop
outsb
mov
adc
repnz
inc
mov
xchg
inc
jecxz
shll
lods
mov
ficomps
pushl
fildll
jge
aam
lret
xor
mov
dec
adc
mov
shl
popa
add
jnp
xor
sbb
pop
je
push
imul
mov
pop
mov
xchg
xor
sarl
or
mov
push
lahf
nop
jnp
dec
jle
xor
sbb
std
push
push
or
mov
lods
jge
cmp
aad
or
dec
out
ljmp
fstpt
xor
add
loop
mov
les
aam
scas
nop
aam
xchg
add
imulb
insb
pop
and
sbb
hlt
js
aam
stos
arpl
pop
cltd
push
xor
xorb
hlt
repnz
lock
add
add
and
iret
or
mov
lock
adc
jecxz
aad
imul
mov
iret
push
and
jb
or
pop
push
daa
ja
sarl
bound
mov
lea
lea
cmpsb
std
push
outsl
xchg
cmp
jbe
mov
rcrb
push
mov
jg
jle
inc
and
out
lods
push
sbb
add
lcall
leave
leave
sbb
enter
or
outsl
jne
test
std
in
mov
mov
cmpl
gs
cmpb
lahf
ss
xchg
aad
cmp
mov
cmp
or
fs
sbb
mov
repnz
adc
mov
rcr
pushf
fcoms
jne
ret
pop
pop
dec
jne
push
insb
xchg
or
ficomps
fistps
push
scas
dec
sbb
loop
cltd
aas
sub
xor
pop
cmc
xchg
or
cmpsb
xchg
mov
mov
scas
arpl
dec
jp
add
inc
inc
or
cld
cmpsb
movsl
push
push
popf
stos
js
adc
pusha
adc
out
cmp
dec
sti
lock
xor
and
cwtl
nop
pop
lret
add
sub
mov
in
mov
jb
push
add
mov
adc
int
cmp
stc
mov
in
mov
pop
insl
scas
imul
push
lcall
jbe
jl
fdecstp
fsubrl
jp
add
xchg
adc
fdivs
and
jge
popf
test
loop
add
lahf
jmp
clc
insl
adc
loope
jmp
mov
loop
data16
inc
mov
out
mov
add
and
inc
mov
add
push
mov
xor
scas
in
cmp
in
inc
out
mov
xchg
xor
call
into
decb
loope
jecxz
pop
sbb
dec
pop
mov
cmpsl
call
mov
es
sbb
fisttpl
shrb
pop
jle
cmpb
outsb
adc
bound
sbb
dec
fwait
mov
push
in
jae
jne
movsl
xor
jae
mov
lea
repnz
in
sbb
pop
test
lcall
mov
mov
jbe
lret
fistps
je
lock
pop
xor
mov
add
pop
add
filds
je
std
jecxz
testb
and
outsl
dec
jne
jle
add
fcomps
mov
lods
and
sub
or
push
fwait
scas
cmc
mov
aad
xor
cmp
mov
xchg
jno
cmpsl
inc
push
xor
or
pusha
push
dec
in
out
jge
cmp
xlat
xor
jg
dec
fs
add
lret
mov
int
sti
mov
jl
lods
push
repz
sub
rorb
push
out
mov
pop
mov
mov
xchg
into
sti
inc
shr
pop
sub
popf
xchg
cltd
in
mov
add
and
and
fwait
jg
mov
push
andl
lahf
ljmp
cmp
pop
adc
lea
push
mov
push
movsl
movsb
xor
out
cmp
std
and
lret
mov
adc
pop
shll
imul
cs
nop
in
sarl
rolb
lcall
mov
xor
push
clc
mov
fs
cmp
leave
cmp
push
fcmovb
pop
pop
cltd
addr16
outsl
rorb
jl
test
add
or
push
fsubrs
mov
sahf
jp
jno
mov
xchg
je
stos
insb
add
inc
xchg
add
push
xchg
inc
push
cmpsb
cmpsb
outsl
xchg
sbb
nop
out
scas
mov
std
dec
adc
repnz
and
std
loop
inc
jo
xchg
and
nop
shlb
cmp
mov
dec
push
mov
out
cmpsb
int
and
out
insb
sbb
adc
push
xor
mov
leave
mov
out
adc
jo
push
lea
dec
fdivs
es
mov
mov
daa
xchg
jmp
aam
sub
dec
data16
sbb
and
mov
add
cld
inc
notl
inc
in
insl
push
ds
add
jl
pop
or
loope
sub
es
push
jns
stc
ja
jno
jge
mov
sar
xchg
das
push
sbb
or
test
aas
adc
dec
xor
lcall
mov
xchg
std
add
loope
clc
and
out
shlb
bound
ja
push
orb
outsb
inc
mov
jae
jmp
cmp
adcb
sub
cmp
bound
jno
inc
add
clc
xor
dec
call
in
movsb
jno
jecxz
sbb
sahf
push
popa
cmpb
sar
cmp
fs
mov
dec
xchg
jne
jb
dec
sub
fs
roll
inc
lds
mov
dec
push
push
pop
lcall
outsb
fsubr
mov
mov
cmpsl
rcl
int3
mov
xor
insb
bound
lahf
cld
mov
cmp
fs
icebp
push
push
sarb
mov
fwait
jle
adc
sahf
cli
or
sbb
jno
ss
sub
pop
daa
outsl
cmpsl
data16
mov
mov
adc
mov
call
outsb
push
shlb
stos
std
outsl
push
es
leave
or
stos
je
int3
sbbl
push
test
push
pop
rorl
inc
mov
mov
outsb
jbe
dec
xor
out
xor
sub
inc
fsts
xor
mov
divl
push
dec
inc
std
shrb
adc
pop
into
xchg
cli
pop
dec
or
in
adc
cmp
xor
lds
sub
lret
repz
iret
leave
sarl
stos
enter
mov
cmp
dec
ljmp
adc
enter
pop
outsb
adc
jle
in
leave
insb
pxor
xor
das
jbe
enter
sub
and
sbb
push
add
ret
cmp
fistpl
push
insb
inc
outsl
inc
lods
lds
loopne
jle
jne
mov
cmc
sbb
sbb
rcll
adc
insl
inc
jae
cmp
adc
lret
push
cmpsl
das
jne
xchg
jge
and
ret
pop
jb
mov
rorb
ret
xor
push
mov
outsl
nop
cmp
es
ret
imul
mov
sbb
inc
pop
push
arpl
rorl
lcall
xchg
scas
sbb
mov
sahf
add
cmpsl
inc
xchg
mov
rcpps
cmp
cs
shlb
dec
jae
cmp
cld
scas
jmp
les
inc
jg
jae
add
jno
pop
ret
inc
cmp
scas
inc
push
dec
adc
push
fwait
jne
xchg
pop
push
js
jno
xchg
lock
xor
xchg
or
adc
out
adc
jae
mov
inc
mov
leave
imul
in
mov
dec
sub
inc
or
xchg
adc
fcomi
addb
push
sbb
jne
outsl
jp
stos
loop
inc
sbb
mov
mov
rolb
inc
sub
mov
aaa
push
and
pop
arpl
fcoml
clc
xor
fnstenv
mov
in
scas
push
js
scas
cmpsl
dec
cs
shrb
xlat
push
mov
repz
cmp
jecxz
insl
pushf
mov
movsb
mov
ja
xorl
in
lock
dec
out
jo
loopne
sub
mov
imul
lea
adc
shlb
pop
bound
inc
mov
pop
push
adc
out
fs
xchg
push
out
sar
lret
push
pop
scas
or
inc
rorb
sbb
xor
inc
jb
imul
das
test
cmp
std
push
mov
dec
je
psraw
jle
ss
scas
popf
das
out
xchg
sub
adc
xchg
sbb
jecxz
pop
fcomps
movb
test
pop
mov
rcrb
xor
test
imul
aam
cwtl
shl
add
mov
lahf
je
mov
xor
cmp
add
push
or
pushf
xchg
bound
movsb
mov
mov
push
xchg
mov
xor
cmp
xchg
rcl
xchg
out
outsb
inc
and
movsb
xor
test
jl
mov
push
in
sub
pop
lret
test
cmpsl
pop
call
pop
jge
mov
aas
cmp
clc
insb
sbb
gs
test
inc
ds
inc
call
insb
mov
mov
orl
push
rcr
jno
and
adc
cmp
push
mov
arpl
dec
mov
inc
dec
dec
adc
or
adc
mov
int3
leave
clc
pop
and
fwait
inc
outsl
cmc
loope
cltd
in
sti
insl
cmp
cltd
iret
cmp
fldl
dec
or
dec
leave
sti
shrb
dec
das
hlt
jo
inc
inc
mov
jbe
or
out
int
insb
sbb
ret
aad
or
mov
in
dec
sbb
adc
mov
bnd
xor
push
pop
icebp
outsl
push
in
push
fs
mov
xor
ja
gs
sbb
cmc
adc
mov
addl
pop
cmp
data16
fwait
or
sbb
inc
in
sub
inc
shrl
inc
jnp
lcall
shl
push
cmp
ljmp
xlat
shrl
jecxz
xchg
push
imul
gs
test
jecxz
fildl
aad
xor
jo
loop
mov
repnz
lea
mov
fistps
lods
fisubrl
out
and
jmp
pop
add
aad
pop
sbb
arpl
pminsw
jl
aas
sbb
loopne
sub
pop
xor
pop
fbstp
fldl2e
mov
push
xchg
xrelease
dec
push
mov
or
adc
adc
sub
ret
cmp
jle
ret
pop
into
outsb
jg
es
mov
das
cmp
pushf
enter
sub
ljmp
push
mov
cmp
cmp
addr16
cltd
and
adc
lods
cli
jbe
lock
xor
pop
sahf
test
cwtl
sbb
fisubs
loopne
out
xchg
xchg
pop
aad
leave
pop
sar
lock
and
out
call
in
inc
add
pop
test
or
xchg
icebp
jae
mov
jno
sarl
data16
repz
inc
inc
mov
loopne
icebp
or
movsl
cwtl
call
lcall
xchg
sbb
pop
mov
cmp
sar
stos
dec
push
gs
imul
and
shrl
cmp
push
insl
jle
jbe
repz
inc
sbb
sbb
push
inc
mov
or
popa
push
movsb
lcall
xchg
pop
mov
mov
pop
popa
ljmp
mov
outsl
mov
repnz
dec
dec
pop
add
hlt
pushf
pop
jne
imul
lret
sub
xor
loop
repz
clc
lret
fists
sbb
ss
gs
iret
sub
out
add
or
test
mov
jns
notl
rcll
stos
stos
push
aaa
mov
shl
dec
lea
mov
mov
jmp
sub
inc
lods
mov
stos
ljmp
andl
inc
stos
mov
xchg
mov
and
mov
popf
jge
inc
mov
mov
xchg
adc
mov
andl
aaa
popa
cmpsb
and
adc
inc
dec
mov
loopne
mov
pushf
push
push
cli
insl
inc
lcall
out
xor
sbb
sbb
dec
inc
jge
dec
mov
adc
pop
mov
pop
shlb
sub
mov
pop
lea
outsl
adc
cli
sbb
stc
sub
sbb
and
cmp
jl
or
lock
pop
lock
std
cmpsb
cmp
js
std
cmp
je
stos
pop
in
aam
pop
bound
sub
stc
aaa
lcall
jl
mov
cmc
xor
jns
shl
mov
mov
aaa
imul
pop
movsb
andb
mov
clc
xor
pop
push
dec
jbe
aaa
xchg
imul
les
xchg
jb
enter
popf
pop
loop
xor
add
dec
cmpsb
out
adc
dec
sub
mov
mov
or
mov
mov
mov
fcmovb
jne
ret
mov
movsb
cmc
sbb
push
sub
and
fwait
in
or
imul
cmp
jmp
xor
fcmovne
mov
pusha
and
fcomps
cmp
fildll
add
sahf
lea
fistl
andl
imul
cltd
fists
push
imul
jg
loope
mov
mov
lods
jae
aas
jge
mov
hlt
jno
ss
jae
shufps
jne
cmp
loop
sahf
repnz
xchg
je
push
push
inc
andb
adc
shl
imul
jmp
and
lods
pop
sbb
push
or
xchg
shll
insl
jae
fadds
pop
ljmp
mov
call
fcom
mov
and
sub
cmp
mov
roll
push
cmp
push
inc
mov
jne
pop
inc
xor
je
xchg
in
push
or
ds
dec
jg
pop
pop
add
sub
mov
divl
data16
dec
jmp
xchg
mov
sbb
ds
dec
ret
and
lds
mov
aam
add
sub
rcrb
cmp
out
sub
neg
loop
sbbb
std
lods
psubsw
pusha
into
pop
push
pop
das
mov
lods
push
jns
xor
sbb
lea
xchg
ds
push
fmul
lret
xor
rcr
xchg
icebp
mov
imul
mov
adc
fildl
repnz
push
repnz
sub
div
mov
add
dec
out
jno
loop
push
adc
pop
jle
std
pushf
mov
mov
imul
imul
pop
aam
lods
popa
fs
sbb
shr
sub
xchg
jmp
test
or
andb
mov
add
push
sahf
cmpsl
pop
jo
jns
scas
out
pop
jl
mov
push
out
loop
mulb
jbe
adc
mov
std
popa
pop
mov
je
adc
enter
lods
dec
xor
pop
ja
orl
xor
cld
mov
inc
sbb
and
js
fwait
xor
push
cli
js
das
jns
lahf
inc
xchg
divl
xlat
dec
mulb
rcpps
lods
leave
popf
cmp
fbld
adc
mov
loopne
mov
mov
scas
fcomps
ss
cmp
jle
stos
or
add
nop
gs
add
or
mov
dec
jae
mov
cmpsb
dec
das
test
dec
inc
jo
mov
data16
enter
jle
fldenv
out
rcrl
xchg
ljmp
inc
gs
inc
adcl
ja
out
push
or
cwtl
jge
int3
sbb
and
out
sbb
xor
imul
lcall
lds
mov
mov
mov
xchg
mov
add
mov
pusha
outsb
outsb
mov
je
xor
pop
addr16
dec
sarb
cmp
and
mov
das
hlt
fmul
mov
mov
ljmp
push
imul
aam
xor
cmpsb
repnz
in
dec
aam
or
xchg
xchg
xor
add
gs
shlb
dec
out
popa
add
pushf
pop
icebp
sbb
test
adc
imul
sbb
sar
mov
lret
xchg
sbb
rolb
adc
mov
pop
xlat
mov
pop
sub
cmpl
cmp
cmp
and
jl
push
sahf
jae
jo
xchg
dec
pop
sub
ficomps
jae
arpl
xlat
xor
pop
dec
leave
and
repnz
sbb
xchg
das
xor
xchg
out
add
mov
shlb
and
ficoml
mov
inc
movsb
pop
pop
xchg
gs
hlt
fidivrl
push
movsl
mov
rcrb
inc
sbb
jno
dec
inc
mov
mov
test
or
into
sbb
adc
in
lret
fisubl
cmpsb
sbb
jmp
push
mov
fstl
dec
in
lds
mov
gs
addr16
adc
int
stos
cmp
jmp
loope
daa
adcb
push
mov
lret
jo
adc
push
lock
das
cwtl
psubb
xchg
sahf
ror
cltd
in
fstp
mov
out
pop
movsl
lret
cmp
dec
cwtl
xchg
pop
ret
icebp
in
vrsqrtss
jo
hlt
movl
mov
scas
ret
mov
pop
fidivrs
add
loopne
ljmp
ret
sub
xchg
js
popf
xor
lods
stos
xlat
pushf
pusha
inc
jle
cmc
add
loope
stos
mov
lds
xchg
sub
mov
or
lcall
movsl
ljmp
addr16
lock
pop
mov
daa
imul
jle
data16
xor
inc
add
cmpsb
xlat
repnz
andb
push
lret
xchg
outsl
rcll
mov
outsb
fucompp
push
ljmp
or
sbb
lcall
push
dec
push
addl
ret
loop
lods
jl
and
and
fldt
push
jnp
jne
cli
fmull
xlat
sti
nop
test
mov
into
call
jo
xor
sub
mov
push
jg
lods
or
or
out
mov
sbb
cmp
jno
stc
or
pusha
sub
in
shr
mov
cmp
scas
insb
bound
enter
pop
outsb
or
jle
adc
gs
insb
aam
sub
out
icebp
mov
stc
adc
mov
lcall
cmp
lcall
popl
mov
rcl
js
test
cmpsl
inc
out
jmp
push
lcall
stos
loopne
cmp
xor
push
mov
inc
sub
pop
xor
xchg
mov
sbb
test
xchg
out
call
repnz
popa
lea
out
out
adc
cmp
push
and
repnz
jb
mov
and
mov
pop
or
sub
and
inc
lea
add
cmp
sub
aaa
flds
inc
fbstp
mov
aad
addr16
dec
dec
xor
pusha
movsl
sbb
inc
jp
mov
shl
adcl
push
out
lcall
jbe
pop
lds
popf
shrl
sbb
cli
xchg
sub
in
mov
pop
outsb
jle
or
retw
xor
fucomi
iret
mov
pop
xor
test
jne
ficompl
jle
je
lds
sub
pop
int
sahf
stc
mov
test
mov
mov
sbb
insb
ret
push
aaa
inc
cmpsl
mov
jo
cmpsb
popf
mov
negl
cmp
mov
jae
pop
jmp
mov
inc
cmp
push
cmp
pusha
out
pusha
adcb
rcll
cltd
or
loopne
xchg
out
pushl
test
rorl
push
jno
mov
mov
cmp
insl
fistpll
mov
sbb
mov
push
fistpll
push
lcall
add
add
pop
adc
sbb
xchg
sbb
or
mov
adc
cmpl
jne
add
xor
mov
cwtl
ficompl
aaa
xchg
dec
dec
mov
adc
fcmovnu
jae
std
enter
and
mov
lahf
leave
xor
dec
call
jl
es
xor
in
mov
or
inc
mov
movl
push
jp
insl
cmpb
xor
jle
mov
lock
jecxz
int
hlt
xor
xlat
lret
arpl
icebp
mov
jle
pop
cmpsb
arpl
mov
jp
iret
jle
stc
push
xchg
push
vcvttss2si
into
mov
and
jo
mov
mov
sti
adc
jbe
arpl
mov
mov
mov
lea
int3
mov
mov
arpl
lds
call
pop
mov
les
mov
adc
xchg
xlat
pop
xor
adc
jnp
dec
and
shl
and
outsl
iret
sti
movsb
les
fbstp
fstpl
loop
ds
sbb
out
push
divl
es
mov
push
mov
push
mov
mov
push
or
sar
cs
mov
js
in
adc
mov
fldt
ja
jl
sub
mov
push
sub
notb
pop
cmp
pop
lds
or
lock
pop
clc
cltd
xor
or
sbb
jo
ds
xor
fisubl
out
es
sbb
or
lcall
in
mov
mov
sub
pop
mov
mov
or
aam
sub
mov
imul
adc
mov
js
ficoms
xor
lods
adc
cmp
ret
iret
mov
xchg
xorl
lods
bound
out
sbb
xchg
cmp
xchg
pop
push
shll
outsl
mov
stc
inc
mov
push
mov
pop
mov
lret
stc
inc
inc
xchg
fcomps
sbb
lds
xchg
dec
jno
jecxz
sub
xchg
arpl
push
js
lret
ljmp
cmp
or
js
mov
fs
xchg
ljmp
in
lret
xor
pop
add
sub
xchg
dec
fbld
es
popf
xchg
call
shrb
lret
imul
fstps
int3
notb
push
adc
lahf
jg
mov
shll
mov
fsubs
push
mov
add
clc
and
dec
lds
fwait
sbb
outsb
add
mov
leave
mov
and
mov
sbb
fldcw
mov
jo
jecxz
sbb
xchg
xchg
fdivr
cmp
fwait
push
xchg
in
push
sbb
or
pushl
aas
cmc
mov
pop
dec
push
sbb
cmpsl
inc
scas
xor
jbe
jnp
pop
mov
dec
repnz
xchg
test
lret
lahf
and
test
aaa
pushf
cmp
jo
adc
das
cmp
xor
cmpsb
cld
dec
popf
jecxz
arpl
fdivr
and
iret
dec
sub
dec
mov
in
call
daa
adc
or
fucomi
push
push
shrb
xor
lret
mov
imulb
decb
cltd
lahf
sarb
ds
sub
jbe
xor
cs
lret
cmp
dec
cmp
add
mov
sbb
jne
pop
mov
adc
or
in
clc
xlat
cmpxchg
pop
movsl
push
mov
push
fsubrp
mov
aas
shlb
pop
aaa
rclb
push
xor
arpl
addr16
xchg
shrb
adc
out
ficoml
loop
decl
lds
or
adc
repz
xlat
mov
and
pop
pavgb
out
rorl
fcmovnb
movsb
shlb
jo
fnstsw
jo
pop
jnp
jae
xchg
rcl
aas
inc
xor
int3
sbb
sub
pop
ret
leave
insb
and
cwtl
mov
push
repz
pushf
iretw
or
mov
sahf
and
cmpsb
pushf
jecxz
and
adc
xchg
and
jp
shll
push
cmp
lcall
inc
sbb
cmc
in
pop
fmull
jne
xchg
in
in
cmpb
stc
out
jp
popf
or
cwtl
cmp
sub
pop
sub
mov
movsb
mov
xchg
scas
stos
in
mov
loope
sbb
xchg
or
and
sbb
ljmp
loope
or
mov
pop
sahf
sub
rorb
mov
jl
add
lret
fs
xchg
xchg
dec
xchg
push
jo
push
insb
aas
fcoml
adc
and
jns
push
mov
adc
push
adc
pop
add
inc
inc
mov
stc
jge
jmp
std
addr16
xchg
push
pop
lcall
sarl
std
push
lock
clc
xor
scas
mov
out
mov
mov
loope
rclb
and
push
sub
sbb
lcall
loope
xchg
shll
scas
gs
lods
sbb
push
cmp
jns
lret
insb
pop
rcr
inc
xorl
mov
je
xlat
jle
or
scas
push
sahf
into
rcrb
test
jbe
lahf
lret
scas
in
jno
jl
jns
rcrb
adc
bound
adc
sbb
cmpsb
jb
cmp
and
dec
or
in
xchg
mov
ds
cli
jns
lods
push
mov
lcall
dec
cmc
adc
cmc
test
ja
addb
xor
insl
mov
lea
lret
in
nop
rcl
jmp
adc
pop
mov
mov
cli
in
add
adc
jmp
adc
push
bswap
pusha
mov
sbb
sub
shrb
xor
jbe
adc
cmp
pop
jmp
cld
dec
pop
sarb
mov
jne
cli
insl
imul
out
scas
pop
aaa
xchg
jmp
pop
xor
or
pop
mov
std
jns
add
dec
jecxz
bound
xlat
out
cmp
inc
lock
sbb
pop
xchg
ja
sbb
lds
cmpl
cmp
fnstenv
ljmp
sub
push
sub
push
imul
fildl
scas
cli
jne
mov
push
mov
loopne
fidivl
jnp
sahf
pop
mov
dec
adc
outsl
mov
add
scas
pop
fsubrl
jae
push
in
mov
int
daa
ja
sti
pop
adc
push
jae
jbe
pop
mov
rolb
push
jne
inc
adc
jp
push
or
cld
mov
mov
adc
icebp
adc
pop
jno
push
loop
and
pushf
mov
jne
lret
int3
xor
ret
in
and
jb
or
jmp
cld
and
push
mov
iret
adc
in
mov
shlb
pushf
inc
shll
mov
jecxz
push
and
add
fwait
jae
fadds
xchg
push
repz
jge
sub
cmpsb
dec
add
scas
movl
push
outsb
and
cwtl
ja
mov
fwait
test
sbb
and
mov
sbb
mov
inc
xchg
mov
mov
out
addr16
sub
mov
iret
mov
cli
mov
mov
inc
add
in
mov
repnz
and
ret
sub
jae
or
repnz
sarl
pop
inc
or
test
cld
or
movsb
dec
or
subb
cwtl
clc
loope
cmc
xor
add
sarl
stos
out
cmc
arpl
cmc
mov
push
push
movsl
jp
push
int
or
adc
test
fsubrs
int3
arpl
adc
sub
shrb
dec
sti
insb
jl
xor
ds
fcomps
in
pop
dec
sbb
or
cltd
loop
sbb
mov
xchg
and
mov
sti
push
and
push
pop
cmp
lret
mov
pop
jne
mov
adc
call
sbb
add
mov
push
add
daa
xchg
fnstcw
in
sub
push
push
push
bound
and
inc
rol
fiadds
pop
adc
add
iret
mov
xor
iret
inc
cmpsb
or
std
xor
xor
ljmp
xlat
xchg
sarb
add
mov
jge
andb
fyl2x
lahf
fsubs
mov
dec
mov
cmp
dec
hlt
sbb
aas
outsl
cmpsb
push
jle
xor
cmp
std
inc
push
in
lret
jge
or
push
out
aas
aas
inc
add
test
dec
push
aas
test
push
dec
sbb
popf
popa
imul
clc
xchg
cmpsb
cs
cli
aam
adc
add
loope
adc
fs
sbb
fisttpl
es
aam
es
mov
jle
test
jmp
incl
or
fbld
and
arpl
push
pop
adc
mov
filds
cmp
pop
xchg
sbb
lock
pop
call
adc
mov
testb
add
test
inc
orl
xor
pusha
sbb
fs
mov
pusha
out
in
sarl
inc
push
jns
pop
int3
and
gs
sbb
cmc
mov
stos
xor
ja
in
push
rclb
mov
sub
push
and
lock
xor
mov
das
xor
insl
cmp
pop
push
mov
outsl
popf
adc
ror
xchg
je
pop
in
inc
stos
orl
aaa
adc
push
lds
xor
test
sbb
push
lock
xchg
and
sub
xor
cmp
xchg
pop
insb
aad
dec
or
subl
bound
pop
test
jns
xor
inc
fs
cmp
mov
mov
mov
jne
mov
mov
popf
jb
xor
inc
mov
or
sub
cmc
sbb
cld
push
xchg
popf
pause
adc
cmpsb
mov
loope
xor
dec
cmpsb
dec
xlat
adc
xor
leave
fstpt
pop
and
sub
jb
stos
scas
in
mov
jns
fwait
and
dec
jle
cmp
in
push
mov
mov
fldcw
insb
xor
jecxz
mov
mov
test
adc
cmp
cltd
push
lcall
adc
mov
sub
icebp
inc
cmp
test
add
repnz
mov
push
and
xlat
sub
insb
outsl
in
xchg
sbb
adc
out
sub
stos
mov
stc
lock
mov
repz
adc
and
lret
push
sub
inc
cltd
enter
adc
jnp
fldl
roll
mov
rorb
or
loop
xor
nop
push
add
mov
sbb
xchg
jns
jne
mov
call
mov
inc
push
mov
les
dec
in
or
pop
sbbl
scas
scas
jne
and
cwtl
incb
xchg
test
daa
sub
je
pop
cmc
xor
es
jmp
cmp
or
shlb
xlat
mov
and
cmp
int3
das
sahf
jb
mov
cmpsb
mov
lahf
and
add
mov
fldl
rclb
push
into
pop
mov
adc
or
pop
fimuls
gs
dec
mov
lcall
mov
push
cmp
aaa
je
adc
xor
lock
addb
and
jae
cwtl
jmp
into
in
out
mov
fwait
jbe
sub
imul
stos
pushf
orl
or
add
xchg
addl
andb
call
rorl
mov
stos
inc
rorb
mov
outsb
mov
in
pop
mov
bound
add
pop
ss
mov
push
out
fdivr
cmp
iret
stc
jns
in
in
sbb
out
jo
shlb
inc
jg
insb
outsl
sti
insb
test
inc
jl
and
sub
fidivrs
mov
jp
ja
int3
cltd
in
fcmovnbe
sub
ror
push
test
inc
orl
cmp
jg
mov
push
idivb
fs
mov
insb
loope
rorl
inc
mov
cmpsl
push
sbb
fistps
into
iret
pop
daa
leave
clc
adc
adc
pop
sbb
fimuls
fmul
ss
push
pop
in
sub
push
push
xchg
push
mov
stos
mov
inc
scas
add
fimuls
cmc
adc
adc
inc
mov
push
pusha
jnp
jl
xor
xor
aad
mov
pop
out
push
das
rclb
or
movsb
jnp
shll
sbb
xchg
jnp
cmp
push
sbb
sahf
shrb
rol
push
roll
add
imul
movsl
cmp
call
lds
or
iret
jl
and
in
cld
push
mov
inc
mov
cwtl
lret
fld1
sub
jp
push
sbb
pop
push
lret
or
ljmp
test
les
xchg
pop
mov
mov
xchg
xor
subl
add
and
mov
pop
pushf
fucomip
fldcw
out
aas
loope
mov
movsl
push
adc
loopne
dec
mov
iret
pop
notl
cmp
insb
pop
sub
mov
shrb
das
dec
int3
leave
xchg
mov
ret
jbe
add
out
popf
inc
add
jle
fcoms
sub
dec
jmp
xor
sub
mov
mov
outsb
mov
imul
add
jns
aam
hlt
xchg
inc
test
fwait
mov
inc
cmp
inc
jmp
cmp
jge
popa
and
sbb
sub
mov
andl
sbb
sar
lods
jo
in
inc
jne
xor
jge
sub
in
addr16
xor
fs
aas
inc
cmp
or
pop
hlt
dec
clc
xor
push
ret
sub
fldenv
inc
dec
fs
push
jg
shrb
sbb
dec
xchg
jbe
loop
pop
cld
repz
incl
or
sbb
int3
xchg
mov
lods
ja
jae
call
out
loopne
in
fcoml
hlt
and
inc
iret
cmpl
andl
out
cwtl
lods
pop
push
add
or
rcrb
or
mov
dec
in
cmp
lret
mov
xor
jnp
daa
mov
push
or
fnstsw
popf
je
cmp
out
rol
and
addr16
cmp
flds
sub
sahf
test
push
push
adc
add
mov
jl
loopne
or
inc
dec
jp
pop
test
insl
xor
icebp
dec
pusha
mov
push
lcall
sub
jp
icebp
mov
add
xor
lea
cmc
jp
add
incl
cwtl
push
pop
ret
cmpxchg
push
std
cmp
xchg
adc
push
cmpsl
testl
imul
mov
dec
ret
mov
lods
mov
cmpl
imul
inc
adc
mov
mov
scas
xor
mov
and
mov
fldt
icebp
in
lock
cwtl
or
insl
dec
xchg
and
lahf
shrl
imul
mov
enter
push
cmp
push
mov
nop
cltd
mov
das
adc
xchg
clc
test
arpl
pop
dec
or
jne
rcrb
repz
hlt
fbstp
mov
nop
inc
das
adc
lcall
mov
sbb
push
adc
insb
pushf
into
xor
jmp
shrl
scas
adc
cmc
and
or
shrb
popa
into
stc
lret
loop
ror
les
inc
scas
cmp
inc
fidivl
out
sti
jae
clc
cs
add
dec
orl
inc
out
enter
cld
lret
shll
jecxz
in
arpl
cmp
pushf
push
push
or
sbb
and
pop
iret
fisubrs
xchg
lret
outsl
or
fadds
add
pop
inc
pop
adc
cwtl
lock
mov
push
insl
dec
adc
dec
fwait
inc
xor
iret
mov
jo
pop
mov
adc
ficoml
enter
nop
xchg
out
xchg
pop
dec
mov
loopne
add
and
mov
or
out
push
sbb
jbe
dec
stc
int3
jbe
add
movsb
xor
mov
rcr
sbbl
adc
out
ss
ljmp
test
jp
push
xchg
add
pop
inc
or
xchg
sbb
jle
call
out
or
sub
lret
pop
inc
inc
add
std
xchg
nop
add
in
xchg
loope
inc
cwtl
xlat
ja
xchg
xchg
je
sub
into
pop
arpl
jge
jp
sbb
daa
pop
xor
xchg
push
cmp
sbb
movsb
ds
icebp
lcall
dec
jmp
cld
pop
je
enter
loopne
push
data16
fsubs
add
xor
jmp
stos
imulb
and
jb
dec
xchg
aas
mov
pop
cld
pop
packsswb
lods
fcoml
shll
test
cmp
aas
xchg
pop
pop
mov
fbld
add
idivb
push
or
sbb
inc
cmpsl
loope
add
add
add
adc
clc
daa
clc
cmpsl
pmullw
cmp
or
or
xorb
jg
inc
stc
jp
dec
and
jge
xchg
dec
ss
jmp
lock
or
mov
inc
or
in
xor
xchg
cwtl
sbb
out
jno
ljmp
push
mov
adc
add
sub
fisubrs
lret
lods
inc
lahf
clc
std
cmpsb
call
rcrl
fsubl
pop
lock
dec
cmpsl
out
dec
or
data16
in
add
not
scas
xorl
mov
fbstp
xor
stos
outsb
add
mov
jmp
std
add
stos
ja
cltd
add
fisubs
adc
pop
rorb
lock
adc
jle
mov
lahf
aaa
jmp
popf
mov
adc
lds
loop
pushf
inc
mov
dec
lock
repz
pusha
mov
push
mov
enter
jp
xchg
icebp
addb
sti
inc
cmpl
jns
ja
cmp
xor
or
mov
daa
sbb
cmpsl
jecxz
outsb
je
ret
pop
jae
dec
xchg
in
repz
enter
sbb
cs
shlb
ds
add
test
and
dec
ljmp
xlat
jbe
pextrw
cmovns
ss
idivl
pop
popl
je
xor
lahf
or
jb
out
pop
fstpl
mov
lret
xchg
ljmp
aas
in
dec
stos
pop
cwtl
insb
sub
and
shlb
stos
movsb
or
xor
adc
and
dec
movsb
xchg
insl
sub
test
mov
xchg
or
mov
addr16
adc
xchg
adc
pop
pop
fwait
add
insb
xlat
cmp
sub
or
fdivrs
nop
jmp
aas
test
in
jno
pop
mov
popa
add
dec
fisubrs
stos
orb
test
aam
std
dec
pop
in
aad
push
push
dec
das
push
jbe
mov
push
pusha
dec
lea
mov
andl
sahf
adc
into
lcall
mov
lock
lods
sbb
rcll
mov
insl
and
je
stos
fsubrl
mov
and
out
xor
sarb
xchg
push
call
lods
sbb
outsb
cmp
jno
cs
xchg
jge
stos
cmpsb
decb
xchg
sub
sbbb
adc
push
pusha
xchg
aas
push
xchg
sbb
xor
xchg
sub
in
je
les
jp
jbe
ss
ret
sarl
in
jns
sub
idiv
or
push
sub
mov
push
roll
adc
fcompl
mov
scas
repz
or
iret
in
mov
inc
jge
lahf
push
mov
icebp
or
loope
ljmp
pop
xor
push
into
hlt
ret
daa
adc
pop
xor
mov
adc
ljmp
or
jne
push
mov
aam
sti
pusha
arpl
adc
movsb
jg
fidivrl
lods
fmul
cmp
add
inc
push
jo
jmp
sbb
in
inc
mov
repz
push
jge
and
outsl
or
cmc
pop
rcr
push
ja
iret
hlt
test
push
xchg
adc
shr
test
in
cmp
xchg
cmp
xor
pop
dec
push
mov
xchg
sbb
aam
mov
sbb
sub
mov
inc
roll
loope
mov
inc
inc
cmpsb
jne
jg
adc
aad
pop
sub
call
mov
push
arpl
pushf
cmove
cmp
xor
dec
pop
movsb
subl
lcall
test
mov
das
ja
lods
lcall
mov
addr16
mov
popl
dec
mov
loope
inc
loope
push
je
ss
mov
and
ss
cmp
adc
or
cmp
imul
orl
andl
cmc
lret
jp
mov
add
fistpl
aas
push
cld
lods
outsl
rcl
icebp
pop
push
movsl
xor
clc
addr16
push
inc
hlt
cltd
push
xor
cmp
daa
pop
aaa
jns
inc
in
outsl
add
xlat
rclb
mov
aas
and
inc
mov
jle
xlat
outsb
pop
test
pop
push
mov
mov
push
fstps
xor
adc
stc
mov
sbb
in
gs
or
ret
jae
and
insb
loope
or
aaa
sbb
xchg
std
or
test
es
or
fldt
pop
les
aad
mov
in
dec
xchg
out
les
pop
push
mov
adc
sub
pusha
push
fadds
mov
push
cld
mov
sub
xchg
jae
sahf
add
lods
push
cs
adc
imul
add
stos
dec
push
jl
sbb
and
ss
clc
out
pop
adc
fwait
cmp
leave
test
js
les
and
iret
push
dec
push
mov
jno
and
or
mov
jns
sub
lock
fwait
xchg
repnz
enter
mov
repnz
sbbb
jmp
xchg
lock
sub
xchg
mov
add
mov
push
cmp
popa
jle
adc
aad
fistl
aam
cld
xlat
cli
xor
cmp
popa
inc
adc
or
cli
iret
sbb
and
out
lds
repnz
imul
xchg
decl
andl
add
mov
mov
lahf
add
inc
les
in
inc
into
in
cmp
repz
cmpsl
xchg
fidivrs
ret
repz
std
lret
imul
imul
jecxz
repnz
adc
insb
mov
lods
cmp
loopne
cwtl
lock
jne
in
jne
lahf
popf
sbb
int3
lods
cld
loopne
int
xchg
or
notl
xorl
sbb
lret
out
mov
out
lea
fsubl
aad
mov
mov
lahf
mov
call
addl
fwait
iret
inc
sahf
test
fildll
mov
aaa
inc
out
call
jecxz
je
or
lock
dec
es
inc
cmp
sbb
call
cmp
cwtl
add
mov
inc
in
ret
ja
aam
cmpsb
pop
xchg
sub
sti
testl
push
dec
sub
or
sub
das
xor
subl
jge
repnz
inc
cmp
and
push
scas
pop
call
push
lods
push
in
test
jecxz
mov
mov
scas
and
xchg
jns
pop
pop
inc
imul
shrb
and
insb
sub
sbb
out
push
add
sub
sarb
mov
jecxz
xor
push
inc
xchg
xlat
mov
outsl
aaa
sbb
unpcklps
or
les
xchg
lods
or
jl
or
jns
mov
fildl
pop
lret
inc
stc
popf
test
add
xchg
imul
inc
dec
aad
xor
aam
ds
xchg
sub
scas
inc
lds
jae
mov
xchg
cmp
mov
clc
xchg
mov
jecxz
xor
int
inc
or
add
jno
or
pop
jb
mov
aas
cmp
mov
pop
popf
xor
fistpll
cs
mov
push
mov
xchg
jle,pt
lea
jae
xchg
xor
adc
mov
jae
popf
mov
cmp
imul
loopne
push
mov
cmpl
and
sub
adc
xchg
je
push
int
xchg
lock
out
daa
lods
faddp
flds
test
aad
sub
xor
and
cmp
mov
scas
shlb
insb
cmp
cmc
ds
push
divl
add
and
pop
hlt
mov
mov
in
sbb
jbe
inc
inc
mov
cmp
dec
int
xchg
sub
add
data16
in
flds
add
insb
into
nop
sarl
lahf
adc
sub
enter
adc
inc
fisttps
mov
in
dec
sub
loop
sbb
xchg
lea
xor
or
add
scas
adc
rclb
lods
aam
iret
aam
xchg
mov
popf
pop
xor
pop
lret
adc
pop
push
push
pop
mov
mov
sarl
cmp
sarl
setb
jno
xchg
mov
or
test
test
out
sub
cmp
bound
adcb
bound
out
fdivrl
jbe
int3
adc
shl
sub
ljmp
mov
rcrl
lods
mov
mov
push
cwtl
outsb
cmc
push
xchg
pop
lahf
jecxz
ret
clc
test
test
push
repz
pop
and
pop
rolb
les
jnp
fsubs
add
xchg
add
fsub
pushf
loop
pusha
dec
sub
sti
out
ficoms
xchg
ss
fbstp
push
xchg
cltd
lcall
aad
add
ljmp
lock
imul
daa
mov
xor
repz
dec
fsubs
jge
rclb
push
add
push
jae
sub
sbb
rcrl
lret
cmp
mov
inc
mov
xor
lock
cmp
sbb
push
adc
inc
push
xchg
sbb
xchg
into
push
jo
insl
xchg
call
inc
iret
mov
mov
mov
out
push
repnz
sahf
or
dec
sbb
push
pop
flds
mov
mov
or
jle
fucompp
push
cmp
push
jae
aam
pop
adc
xlat
adc
xor
int3
cwtl
xor
pop
add
dec
inc
in
bnd
js
pop
mov
mov
jge
mov
iret
dec
jg
xchg
adc
push
popf
popa
and
call
or
aaa
fadd
pop
xor
push
jbe
mov
dec
les
cmp
je
add
aas
cmp
filds
int
mov
cwtl
dec
test
fbstp
mov
push
sbb
in
leave
sahf
mov
lea
sbb
mov
xor
addr16
mov
or
mov
insb
mov
lret
je
into
pusha
loopne
inc
push
sbb
cmc
aaa
out
add
loop
insb
mov
push
pop
cmp
adc
vmaxss
test
mov
push
xchg
fwait
sub
mov
dec
out
dec
sub
imul
addb
sub
jno
arpl
popf
xchg
leave
ljmp
fsts
and
ja
pop
jae
aad
lods
les
jecxz
mov
jno
shr
fsubs
rorl
jo
daa
dec
aaa
inc
orb
test
inc
lods
cs
fsubrs
xchg
pop
lds
inc
cmp
hlt
pop
mov
fistpl
cmp
test
in
ljmp
fisttpl
add
cmpsb
xchg
push
jne
ja
mov
dec
mov
out
cld
roll
lock
mov
fwait
adc
mov
sub
mov
and
sub
and
test
cmp
insb
lea
cmp
cwtl
xchg
repz
inc
or
cld
mov
jge
cld
push
xchg
in
pop
mov
in
cmp
pop
into
ret
or
daa
push
notl
hlt
pop
dec
or
fwait
sbb
mov
pop
add
pop
cmpsb
mov
mov
xchg
adc
cs
scas
in
add
or
icebp
inc
rcrl
or
js
adc
insb
mov
mov
jmp
test
jp
je
mull
dec
mov
out
sbb
add
pop
outsb
dec
sbbb
icebp
push
dec
mov
test
test
jp
jo
data16
into
aad
xor
sti
movsb
into
add
lcall
adc
push
scas
jle
imul
adc
loope
inc
mov
or
dec
shll
cmpsl
push
dec
push
mov
pop
adc
pushf
sbb
push
pop
in
inc
repnz
mov
loopne
ds
data16
fbld
lods
xor
add
in
nop
mov
sbb
out
out
push
mov
sub
lcall
repz
fidivrl
dec
push
pop
pcmpgtd
mov
or
cmp
or
mov
inc
pusha
cmp
lods
outsb
ds
mov
popf
enter
sahf
pop
jmp
dec
pushf
cmp
cld
sahf
mov
into
and
push
cltd
jmp
lock
sub
mov
push
mov
daa
jp
stc
in
mov
test
mov
ret
mov
dec
jmp
nop
and
xchg
push
push
into
xchg
inc
hlt
add
mov
daa
sti
scas
sub
push
cli
imul
mov
mov
mov
hlt
mov
fsubrs
xchg
or
std
cmp
sarb
sub
ficompl
pop
push
roll
aad
mov
mov
fildll
in
hlt
inc
ret
decl
xchg
dec
cmc
and
shr
mov
pop
pop
outsb
mov
and
xchg
mov
inc
rcrb
imul
loope
repnz
mov
mov
scas
push
shlb
pop
fists
jmp
aaa
cmp
xchg
movsl
or
movsb
xchg
in
adc
sahf
jge
outsb
dec
inc
and
mov
je
mov
xchg
push
testb
or
mov
lcall
adc
xor
lahf
mov
lahf
fdivrs
xchg
inc
and
mov
nop
pop
in
ret
in
mov
mov
mov
flds
xchg
cmpsb
andl
jg
inc
pop
je
push
inc
mov
xor
mov
movsb
mov
shll
mov
xor
lret
jecxz
aaa
sbb
xchg
push
les
sbb
dec
push
iret
lods
scas
testb
sbb
xlat
sarb
fisttpl
push
lcall
jmp
pop
std
loop
jmp
dec
cmp
pop
in
or
shrb
rclb
xlat
push
fsubs
lock
shl
xchg
arpl
popa
ret
pusha
sbb
test
jl
imul
arpl
jmp
sub
out
jns
mov
inc
or
in
mov
push
ret
add
pop
lahf
cmpb
in
or
and
shrb
int3
pop
xchg
mov
push
jo
jb
fisubl
jl
push
es
popa
cli
cmp
incl
outsb
fisttpll
jb
das
xchg
xchg
ret
outsl
push
push
movb
adcl
cmp
dec
popf
cld
xlat
enter
lea
hlt
insl
insl
xchg
lret
lds
or
pop
leave
cmp
push
fwait
loop
movsb
lret
fstl
and
xchg
xchg
add
and
or
xor
add
test
mov
and
lret
push
loope
lahf
jg
sbb
es
adc
movsb
outsb
inc
mov
in
mov
sbb
jmp
cmp
lds
scas
pop
xchg
xlat
lret
push
frndint
pop
pandn
cmp
in
and
ret
scas
and
jnp
jnp
dec
test
push
cmpsl
frstor
inc
lahf
fsubl
aaa
xlat
sbb
movsb
js
dec
jecxz
mov
xlat
mov
pop
aas
jbe
lcall
lahf
mov
cmp
inc
jno
andl
pop
int3
js
or
sbb
leave
push
pop
sti
ljmp
mov
jge
loope
cld
sub
fnstenv
testb
inc
leave
dec
repz
rorb
insl
pop
mov
pop
aaa
std
loop
int
add
push
mov
mov
inc
xor
mov
shll
js
sbb
cmovno
or
mov
in
cmc
lret
and
dec
int3
xor
mov
and
jnp
jno
jb
movsl
push
mov
test
dec
push
ljmp
mov
ret
xor
mov
fdivs
ss
leave
addl
or
mov
mov
es
or
lret
sub
mov
insl
add
sub
popa
out
push
sub
test
push
mov
jbe
fnsave
cmp
sarl
seta
test
mov
xchg
mov
dec
into
mov
mov
insb
add
xchg
cli
cs
xchg
rcl
pop
cmp
cmpsb
fidivrs
mov
mulb
push
insl
push
mov
fistps
sbb
dec
xchg
pop
sbb
xchg
or
es
mov
pop
fwait
xor
scas
add
cmp
dec
and
fldl
and
xor
mov
aam
xchg
sti
xchg
and
xchg
ja
scas
add
cmpsb
mov
sbb
repnz
mov
fildl
mov
fiadds
jg
iret
lret
mov
test
es
fildl
insl
clc
leave
dec
and
jmp
in
aad
jns
xor
je
mov
imul
mov
je
fstl
into
dec
mov
hlt
xlat
adc
or
iret
jns
mov
mov
xor
mov
xor
and
dec
xchg
sbb
or
jbe
or
lret
mov
gs
cmp
pop
xchg
pop
push
xor
cmc
lock
fs
cmp
test
rcr
lds
adc
inc
dec
pop
stos
sbb
add
rorl
rclb
call
imul
push
or
add
adcb
out
ss
jo
xchg
mov
inc
jge
loop
decb
outsb
scas
cmp
cmp
loopne
sub
pop
cmp
or
movsb
loope
fbld
popa
ret
xor
js
es
imul
jnp
movsl
sti
cli
xlat
dec
out
sahf
and
ljmp
lods
adc
jl
popa
inc
jmp
ficomps
sbb
jle
fildll
aam
fwait
xchg
push
push
ss
lock
lock
loope
dec
aad
loope
inc
ret
loope
mov
fcomps
jo
push
mov
mov
testl
clc
jns
push
cmpsb
push
cmp
incl
cmp
aas
in
add
jle
sbb
xchg
outsb
lods
das
mov
stos
sbb
dec
jg
push
lret
jmp
int3
jg
cmpsb
stc
cli
push
sti
std
sub
or
mov
xor
xchg
xlat
jle
inc
imul
pop
pop
lods
popa
ljmp
xchg
fnsave
mov
and
inc
sub
insl
add
push
sub
pop
mov
add
jg
adc
xorb
pop
testb
xor
mov
cld
jns
out
lahf
push
xor
xor
push
mov
sbb
pop
rcll
rorl
inc
mov
gs
fwait
stos
cltd
imul
pop
sarb
jge
mulb
fsub
inc
std
sti
pop
jl
cmp
adc
jle
gs
jo
xchg
mov
movsl
subl
call
shll
lahf
cmp
xlat
jmp
xchg
and
pushf
add
bound
sbb
mov
enter
mov
push
add
out
ret
cs
jne
sbb
movsl
outsb
xor
sub
nop
add
sbb
cmp
fsubrp
mov
int3
and
adc
mov
dec
jl
mov
add
cmp
cmp
lret
mov
and
inc
xchg
pop
cmp
pusha
gs
cmp
addr16
sbb
aas
dec
dec
cs
xorl
lcall
std
mov
lahf
lock
lret
cmovs
inc
movsb
dec
pop
cmp
aaa
and
inc
repnz
out
sbb
xor
inc
and
ds
cmp
cmp
xor
sub
sub
dec
pop
inc
shll
rcrb
ss
push
pop
adc
aas
push
xor
xor
xchg
stc
dec
or
icebp
jo
out
push
aad
insl
insl
sbb
scas
add
cld
xchg
mov
sahf
push
cmp
add
ret
pusha
leave
outsl
int3
lret
jg
jecxz
jbe
xchg
mov
out
lock
push
cmc
int3
ja
push
insl
jmp
jno
inc
jp
pop
scas
test
and
arpl
ds
adc
sti
js
fidivrs
call
xlat
sub
pushf
out
fldl
mov
mov
icebp
sbb
mov
fs
pop
stc
inc
shlb
int
loope
lea
jle
jmp
sub
add
mov
cmp
fwait
xchg
pop
sti
movb
sub
cs
push
in
lret
sbb
pop
xor
mov
addr16
lahf
jae
mov
je
jne
aaa
cmp
nop
lret
adc
add
gs
sbb
and
xor
arpl
imul
push
fucomp
dec
aam
push
es
push
mov
movl
inc
inc
pop
aas
and
adc
mov
sbb
dec
sbb
or
jno
nop
mov
pop
repz
es
push
xchg
cmp
in
subl
push
mov
fmull
pushf
pop
sub
leave
out
add
arpl
imul
insb
xchg
cs
lock
pop
in
movsl
scas
jmp
or
rcrb
imul
mov
cmc
fimuls
sbb
push
in
lds
adc
sbb
fstl
hlt
or
cltd
dec
push
stos
adc
shrb
ds
push
insl
popa
push
movsb
rcrb
js
adc
push
aad
push
push
push
aas
subb
pushf
out
fildll
lods
jmp
sar
loop
add
xchg
mov
adc
lods
mov
mov
pop
shr
movsb
inc
sub
neg
or
cld
dec
jecxz
je
add
dec
sarl
das
add
push
xchg
insb
ffreep
data16
jno
and
sbb
or
xchg
test
sub
dec
sbb
fidivrl
xchg
stc
mov
lea
leave
pop
lods
insl
aam
aad
or
mov
mov
arpl
push
out
in
mov
iret
adc
lea
jp
or
mov
adc
pop
sahf
jge
xchg
lds
push
scas
push
arpl
stos
aas
xchg
adc
inc
addr16
loopne
test
mov
cltd
sub
push
jne
stc
push
in
or
and
popf
mov
clc
mov
stos
inc
sbb
jge
lds
ret
jbe
jne
shld
repz
cmp
sbb
cmp
outsl
jecxz
and
or
mov
or
jg
dec
dec
sti
aad
push
imull
test
push
in
push
mov
idivb
inc
and
or
xchg
adc
and
les
jae
je
cwtl
dec
xor
ror
xchg
mov
out
pop
cmp
push
pop
rcrl
lds
and
add
clc
dec
inc
cmpsl
xlat
cmp
pop
daa
stos
jmp
and
outsl
jnp
shlb
repz
cmp
xor
leave
mov
lds
dec
inc
dec
loope
dec
inc
jne
mov
hlt
sbb
int
mov
xlat
xor
or
xchg
push
inc
dec
xor
mov
xlat
call
sbb
stos
dec
jmp
rcrl
xchg
cmp
cmp
lahf
pop
in
orb
cmp
pop
imul
mov
std
push
fwait
cmp
jo
pop
mov
mov
pop
movntq
mov
pop
ret
popa
int3
loop
pop
idivl
stos
shll
pushf
push
sbb
popl
jae
add
mov
cld
sbb
cltd
in
in
xchg
inc
cmp
push
ret
mov
sbb
push
lahf
xor
dec
sbb
jo
dec
and
ror
out
lahf
xlat
pop
mov
stos
pop
sbb
and
mov
push
inc
fnstsw
jo
faddl
div
push
fbld
pop
rcrl
xchg
push
mov
rcrl
test
sbb
jne
insl
jno
movsl
pop
xchg
push
mov
sbb
das
add
lock
pushf
mov
stos
xchg
iret
mov
int
int
out
push
sub
cli
dec
wrmsr
dec
nop
pop
frstor
sbb
cmp
rol
add
mov
test
push
arpl
push
movsb
repz
and
fsub
pop
sub
jmp
insb
and
jecxz
pop
sbb
mov
ljmp
fcomp
pop
mov
fs
xchg
or
adc
lahf
dec
mov
adc
loope
stos
bound
adc
xchg
inc
xor
ja
push
dec
adc
mov
in
clc
cmpsl
daa
xor
imul
xor
pop
in
push
fldt
mov
out
sbb
xchg
mov
repnz
adc
or
bound
sub
jg
popa
mov
jle
xchg
sbb
addb
push
add
xor
add
mov
outsb
add
jle
paddw
dec
xor
adc
outsl
pop
mov
xor
sbb
enter
test
aaa
lods
xor
dec
jno
hlt
sbb
popa
pop
pop
jle
sbb
fisubrs
in
in
jp
cmc
ljmp
fldt
test
xchg
adc
cmc
loop
loop
pop
sbb
xchg
test
adcl
xor
pusha
pop
mov
mov
xchg
jns
icebp
adc
inc
pop
cmp
sbb
les
shrb
std
mov
xchg
fwait
hlt
js
pop
cld
std
mov
push
add
push
sub
mov
push
jno
push
loopne
cmp
sub
jecxz
mov
add
addr16
fisubl
mov
sbb
scas
jb
xorb
out
jne
mov
push
fnstcw
pop
push
cwtl
fildl
adc
js
jmp
pop
mov
movsl
mov
mov
xor
enter
xor
mov
adc
shlb
sub
icebp
loopne
lret
jo
xlat
cmpsl
stos
add
xchg
pop
sbb
int
xlat
push
test
add
pop
adc
ret
into
cmp
rcrb
ret
cmpsb
push
push
icebp
fldcw
cmp
jg
xchg
lret
movsl
mov
nop
mov
or
testb
in
andl
inc
fcomp
and
cs
xchg
sbb
int
mov
add
add
push
movsl
cmc
cmpsl
mov
data16
test
pop
imul
push
push
push
stc
bnd
test
push
rclb
adc
mov
xor
lock
push
dec
jns
push
inc
dec
xchg
mov
xor
pop
add
gs
ss
inc
cmc
sub
and
movsb
push
inc
scas
mov
dec
dec
and
push
jbe
xchg
outsb
xrelease
mov
sub
int3
iret
iret
and
jmp
lea
fnstenv
pusha
xor
dec
mov
cmp
and
sub
cltd
jge
push
lcall
add
aas
xchg
push
mov
imul
repnz
ret
mov
push
scas
mov
cmpsl
sbb
loopne
out
lahf
in
outsl
or
mov
inc
shll
and
std
lock
xchg
movsl
sub
lret
cmpsb
sbb
es
stos
push
cmp
fwait
addr16
mov
cmpsb
inc
dec
jbe
pusha
std
dec
mov
jecxz
pop
pop
pop
stos
dec
add
std
sub
js
icebp
test
sbb
xchg
dec
aad
hlt
xchg
push
out
movsb
ja
js
mov
cli
dec
ljmp
mov
cmpsb
push
psubb
cmp
mov
test
mov
lods
xor
lods
mov
add
dec
loopne
inc
xchg
add
das
repnz
cli
xchg
test
repnz
xchg
jge
into
arpl
daa
xchg
pop
xor
mov
cmp
jbe
cmpsl
dec
pop
fwait
dec
mov
out
sub
jle
pop
jmp
aas
enter
push
adc
xor
adc
jae
xchg
lods
add
xor
xor
inc
pop
or
out
call
in
push
sarl
sahf
daa
stc
imul
xor
nop
lret
sbbb
dec
sbb
mov
bound
jne
adc
inc
jae
cmp
pop
push
mov
sahf
mov
jb
pop
fwait
mov
xchg
push
pop
mov
inc
sbb
xor
add
stc
pop
mov
adcl
xor
loop
add
and
pop
sbb
dec
pop
sub
in
jo
sahf
pop
dec
insl
popa
in
mov
repz
test
xor
ja
adc
call
mov
inc
fcmovu
fnstenv
mov
mov
add
xlat
out
adc
xorl
repz
pop
mov
pop
lret
pop
push
mov
jb
add
mov
addr16
pop
dec
add
std
adcl
mov
scas
push
lcall
mov
mov
xchg
es
jecxz
xchg
xchg
push
push
xor
dec
lea
and
mov
mov
ficomps
inc
push
mov
lods
cs
sbbb
sub
aam
adc
call
push
xor
add
out
pop
xchg
mov
and
imul
add
xchg
or
sbb
jmp
mov
mov
dec
xor
nop
mov
out
pop
fldcw
aaa
jno
sbb
imul
pop
bound
mov
jno
inc
cmpl
out
pop
sar
inc
lds
pop
adc
jns
mov
mov
adc
sbb
lock
mov
xchg
testb
mov
icebp
mov
les
fdivrl
lock
dec
mov
or
fwait
sarl
pop
inc
mov
dec
sbb
lods
mov
add
loopne
dec
lea
test
pop
add
mov
das
insl
mov
in
cmp
iret
pusha
fldt
mov
mov
pop
pop
subl
call
out
dec
pop
ljmp
cmc
shr
add
inc
mov
mov
imul
ss
cltd
xor
jne
ja
out
xchg
and
mov
fiaddl
add
push
xor
int
je
cmp
xor
js
divl
xor
jp
jle
push
cltd
dec
mov
adc
fucomp
dec
adcb
ja
dec
into
push
mov
icebp
xchg
and
andl
sbb
cmp
xor
fiadds
ret
sbb
pusha
inc
test
lock
mov
bound
cmc
test
add
jl
fisubrs
jmp
xchg
or
mov
push
in
test
sbb
jae
or
in
in
dec
ror
divl
popa
cmp
mov
add
fsubp
jmp
adc
test
int
stc
adc
nop
adc
push
addr16
mov
pusha
jns
cmp
xchg
mov
sar
insb
test
mov
push
hlt
xor
push
scas
pop
inc
psraw
push
mov
sti
pop
popa
outsl
mov
call
and
shlb
inc
fucomp
fucomp
clc
pusha
xor
lret
and
insb
in
addr16
daa
mov
lea
inc
cmc
jecxz
sbb
or
outsb
fisubrl
push
push
cmp
jns
fmul
scas
out
sub
dec
fs
mov
dec
cmpsl
pop
fildl
jle
int3
fwait
dec
inc
stos
lock
mov
int3
cmp
data16
cld
mov
sub
jl
lock
hlt
mov
fsubrp
mov
add
push
int3
imul
dec
les
push
fstl
xor
inc
adc
arpl
mov
lahf
mov
xchg
shll
fnsave
cmp
xchg
xor
push
xor
rolb
sbb
popa
inc
test
test
cmpb
mov
arpl
pop
sub
sub
cwtl
cmpsb
lods
or
pusha
inc
inc
jns
das
inc
outsb
sbb
leave
or
stos
sbb
sbb
inc
mov
xor
cmp
jp
mov
scas
cmp
push
ss
jmp
cmp
ds
pop
jp
inc
fdivrl
cltd
rcr
sub
xlat
into
push
loope
dec
mov
push
call
iret
push
fs
popa
add
into
dec
scas
inc
inc
lods
xchg
mov
mov
cmp
fsub
jne
lods
stc
dec
je
es
addr16
rorb
sub
fstpl
shr
cmp
fwait
lods
repz
leave
mov
sbb
xchg
div
call
xor
pop
dec
push
flds
cmp
cmp
rorl
sub
ret
cmp
fbld
adc
and
je
and
jge
fs
push
int3
out
pop
sub
cmp
xchg
cmpsl
outsb
mov
xchg
cmp
pop
inc
jecxz
adc
pushf
add
stos
loopne
lcall
add
push
testb
push
mov
movsb
xchg
adc
orb
lds
sbb
sub
push
mov
pop
in
add
sub
mov
aad
xchg
xor
pushf
dec
das
inc
cld
outsb
sahf
loopne
cmpsl
pop
dec
icebp
repz
bound
add
dec
push
popf
inc
jg
fimuls
mov
push
add
add
add
test
hlt
or
cmp
xchg
mov
jne
push
fnstsw
add
adc
push
stc
ljmp
fisttpll
aas
arpl
push
push
into
mov
decb
test
xor
movsl
stos
mov
mov
sbb
add
and
fsubs
bound
lds
das
xchg
push
mov
idiv
jne
rcl
push
std
out
add
mov
ja
mov
in
ljmp
leave
movsb
jb,pn
ja
xlat
add
inc
adc
xor
jmp
jge
out
into
outsl
cmp
fisttpll
call
fistps
mov
mov
mov
mov
pop
cmp
sub
or
les
cwtl
pop
mov
mov
cmpsb
mov
fwait
or
push
loopne
orl
imul
dec
mov
sub
add
dec
aam
movl
mov
or
rorb
cld
and
das
scas
mov
pop
sub
and
sbb
pop
pop
xchg
push
imul
mov
mov
jp
cmp
lods
daa
sub
add
jecxz
or
cwtl
shrb
rol
inc
rcll
addr16
ds
mov
jne
aas
movsb
sbb
push
sbb
add
nop
out
lds
sbb
inc
xchg
adc
rorb
push
jmp
adc
test
adc
push
je
pop
cltd
aas
and
mov
mov
xor
out
std
xor
in
pop
jne
ljmp
xchg
or
add
adc
pop
xor
sbb
lret
shrl
notb
pop
mov
add
inc
add
fiaddl
mov
inc
sub
arpl
cmp
sbb
sbb
lret
add
aam
ds
sub
xor
mov
fdivs
xor
xor
cmpsb
pop
sub
sbb
fbstp
push
jmp
mov
jb
mov
or
les
mov
fmulp
jne
enter
lock
cmp
jle
stos
adc
xor
in
xchg
add
dec
ss
dec
insb
es
movsb
and
mov
out
in
mov
fidivrl
sub
xchg
push
in
fimuls
gs
add
xor
pusha
mov
cmp
fiadds
mov
aad
fcom
adc
test
mov
sbb
sahf
int3
pop
test
das
xor
add
fistpl
cld
les
cmp
lret
jp
movsl
les
inc
insl
daa
movsl
inc
mov
inc
pop
and
pop
mov
nop
sti
mov
mov
dec
nop
mov
test
test
fildl
iret
ja
push
push
mov
call
enter
mov
ffreep
jb
mov
insl
jmp
mov
stos
mov
adc
outsb
jae
pop
dec
xchg
dec
in
popf
push
out
inc
fists
mov
lods
dec
mulb
push
and
outsl
add
mov
mov
push
mov
pusha
push
lods
repnz
cwtl
push
out
xchg
and
lcall
test
aaa
nop
in
in
pop
enter
cs
and
imul
mov
mov
addb
jae
pop
and
leave
push
push
pop
cmp
inc
sbb
insb
fsubrl
push
mov
loope
sub
push
fadds
adcl
and
repz
stc
cs
fcompl
lret
mov
hlt
test
int3
pop
clc
cmp
mov
shll
pop
test
outsl
push
mov
inc
fisubl
cmp
data16
pop
fsub
xor
fidivrs
pop
jo
mov
xchg
adc
and
outsb
mov
lock
test
movl
xchg
movsb
push
sahf
and
testl
jae
xchg
in
pop
rolb
adc
cmp
pop
jmp
lock
test
cmc
rcll
imul
adc
cmp
xchg
cltd
xchg
push
lock
xchg
lahf
xchg
dec
fstps
mov
or
lods
clc
jnp
sub
cmp
ret
popa
push
sbb
adc
sub
in
in
in
fldt
out
fisubrs
jle
loop
and
mov
inc
jp
push
mov
xchg
add
in
inc
rclb
imul
push
pop
sbb
dec
jmp
jnp
aas
jle
in
lea
loopne
push
inc
ja
jmp
mov
add
cwtl
jnp
pusha
scas
dec
pushf
jne
sbbb
mov
in
loopne
push
in
addr16
out
das
add
xchg
adc
jp
push
in
or
jle
lods
adc
dec
fisubrs
icebp
jae
cwtl
repnz
fsubrl
or
lea
or
pop
lret
rclb
movsl
dec
es
mov
movsb
mov
sarb
mov
test
push
sbb
jns
cmc
and
imul
and
jecxz
push
sbbb
or
xchg
pop
mov
das
testl
andb
add
sbb
call
insl
cwtl
insb
or
test
das
pop
pop
into
jne
or
and
out
add
or
push
push
or
into
ljmp
clc
in
in
jbe
dec
pop
cs
cmp
cmc
frstor
in
push
hlt
xchg
fwait
add
loopne
push
ja
into
out
xchg
test
mov
jmp
cmp
jb
pop
imul
mov
stc
mov
dec
xchg
repnz
xchg
aam
and
sbb
test
mov
cmp
rcl
mov
push
test
lods
jno
fs
or
call
or
sahf
dec
mov
movl
inc
cltd
out
loopne
movsb
dec
stc
xchg
ficompl
fsts
test
mov
test
mov
iret
pop
mov
bound
repz
scas
int3
cltd
or
mov
popf
je
lcall
loope
add
test
mov
sub
divl
adc
loope
sub
push
xlat
sub
sub
pop
jmp
or
stc
or
rcr
out
in
xor
fnstcw
jns
sub
push
sub
insl
ljmp
dec
jl
outsl
pop
or
jns
sbb
repz
jl
jmp
stc
mov
adc
inc
gs
test
mov
fs
lea
inc
mov
fsubrp
jg
fstpl
or
lret
sbb
jp
push
mov
dec
jo
in
cmpsl
dec
std
test
int3
in
mov
pop
jno
ret
jo
pusha
xchg
dec
jne
xchg
xorb
movsb
cmpl
pop
test
ss
pop
shl
stc
test
push
dec
mov
mov
lcall
sub
inc
inc
mov
addb
icebp
outsb
imul
dec
push
mov
mov
and
sti
dec
js
mov
sbb
gs
loop
sub
xor
scas
jnp
sbbb
popf
icebp
sbb
jae
fsubrs
rcll
dec
mov
pop
inc
aad
sub
adc
xor
test
mov
outsb
pop
xlat
sahf
popa
and
push
mov
inc
pop
repnz
mov
fdivrl
sbb
cmp
pop
sahf
push
inc
pop
or
sarb
cs
adc
in
or
pop
insl
punpcklwd
shl
jl
mov
push
pop
push
pop
lods
arpl
cmp
dec
sbb
jmp
mov
pop
and
out
hlt
mov
pop
outsb
or
mov
adc
cmp
mov
mov
mov
test
shl
lcall
or
icebp
aad
adc
jecxz
lea
push
nop
xchg
mov
cld
mov
sub
test
xor
jge
rcrb
jg
mov
addb
dec
or
pop
jge
push
ds
push
mov
mov
iret
add
mov
lds
in
test
out
dec
repnz
sub
inc
cmovle
pop
push
jae
je
imulb
int
cmp
fldt
aaa
cmpsl
ficompl
mov
cmp
fstl
sub
in
data16
dec
int
iret
mov
mov
jbe
xchg
add
scas
push
fsubl
iret
mov
jb
pop
sbb
pushf
nop
call
sti
test
mov
test
in
xor
cmpsl
lds
adc
or
add
xchg
icebp
inc
je
mov
adc
lds
adc
mov
xchg
sbb
inc
mov
dec
ss
lods
push
sub
mov
dec
lcall
or
sbb
jmp
or
test
xchg
jmp
fwait
mov
aam
mov
clc
push
cli
jnp
mov
jbe
push
aas
sub
mov
lods
xor
es
xchg
lea
xor
in
lds
xchg
and
movl
push
mov
and
jl
shll
rcr
movb
pusha
loop
pop
test
test
xchg
jne
int
insl
pushf
mov
pop
add
cmpsb
adc
jo
jne
movsl
sahf
mov
scas
pop
pop
shll
aaa
xor
add
stos
adc
movsb
aad
mov
mov
pop
inc
xchg
or
and
dec
add
sarl
adc
popa
and
mov
sub
aaa
int3
repz
mov
fstpl
pop
sbb
jl
es
dec
and
xor
popf
mov
mov
pop
mov
sub
bound
push
pop
nop
fnstenv
and
int3
sub
out
dec
sti
inc
movsb
leave
cmpsl
sub
mov
lcall
scas
mov
in
ret
pop
sbb
xor
mulb
sarb
mov
inc
ficoml
dec
stos
ja
ds
fldl
or
js
xor
and
adc
int
pushf
push
lock
int
ss
imul
lahf
dec
dec
enter
out
lahf
xchg
sbb
sub
mov
imul
shll
dec
sti
jg
rcrl
shrl
pusha
cs
out
pop
psraw
adc
xchg
and
mov
pop
std
das
aam
and
pusha
incb
ret
jno
mov
jbe
mov
into
and
jmp
push
repz
cmpsl
inc
adc
or
mov
movsl
xor
and
mov
js
mov
rcll
and
sub
icebp
xor
push
addl
rcrl
sub
stc
adc
pop
xor
cmc
mov
ja
fwait
xor
cmc
es
mov
cmp
int
inc
xchg
bound
fsubrs
cmc
ret
lock
push
inc
outsb
aaa
cmp
jg
or
sbbb
mov
xchg
repz
push
pop
insl
push
mov
pop
imul
roll
call
or
and
inc
pushf
adc
inc
cltd
sbb
int3
aam
sarl
xchg
push
pop
pop
mov
in
xchg
repnz
enter
jb
mov
inc
call
ja
add
pusha
xchg
je
fwait
jb
fsub
popf
jl
outsb
xlat
aad
rolb
mov
ja
les
jg
add
and
pop
pop
popf
imulb
test
aas
jns
test
sbb
fidivl
sar
jl
div
cmp
aas
in
cmp
and
xchg
fwait
icebp
jb
test
pop
or
test
push
in
pop
fdivrl
jg
fisubrs
clc
popf
cmp
data16
cmp
mov
and
jg
loop
mov
fwait
inc
mov
icebp
loope
into
mov
adc
dec
divb
sub
inc
cs
or
out
int3
pushf
jb
cmp
inc
test
pop
jmp
push
inc
cmc
inc
dec
inc
pop
sar
or
das
cmpsl
push
aas
insl
adc
data16
or
lcall
mov
sbb
ror
bound
nop
add
fsubl
cmp
push
mov
ret
int
sub
inc
or
cmp
pop
dec
mov
rolb
inc
les
mov
or
or
xchg
enter
add
mov
sub
mov
fs
fisttpl
adc
ud0
ret
lea
mov
and
fwait
cmp
frndint
jmp
jecxz
ret
insb
ss
or
ret
cmp
fisubrs
ds
push
in
popa
mov
shl
clc
add
call
or
stos
push
test
cwtl
test
in
leave
xor
mov
out
in
jne
arpl
inc
orl
adc
insb
sahf
ja
rol
js
negl
dec
mov
sbb
add
adc
out
cmp
cwtl
rorl
and
dec
in
mov
or
ss
das
shll
addl
sub
mov
stos
add
fldl
js
cmp
xor
xchg
stc
aas
fs
mov
bound
push
and
int3
loop
enter
jbe
icebp
pop
mov
fmul
imul
dec
mov
mov
sub
test
popa
lock
lcall
stos
add
jge
or
outsb
and
xor
cmp
mov
push
shll
or
sub
or
sub
jl
popa
test
xlat
mov
incl
ret
mov
adc
scas
cli
ret
scas
out
fnstcw
nop
mov
addr16
pop
sbb
nop
jb
call
fcmovnu
sub
adc
or
inc
inc
pop
add
lahf
imul
sbb
pop
dec
xorl
jae
pop
pop
pop
aam
lcall
out
jmp
movsl
ret
mov
mov
sahf
sbb
xchg
loope
cli
mov
mov
lods
loop
and
jecxz
stc
mov
push
jge
and
mov
add
jns
movups
stos
adc
mov
push
add
dec
push
cmp
repnz
movsl
je
addr16
lahf
mov
xlat
shl
and
xchg
mov
pop
push
xchg
sub
sbb
das
inc
inc
nop
loopne
mov
mov
int
dec
outsb
push
ds
addb
testb
xor
leave
adc
or
xor
xor
fwait
out
mov
or
imul
repnz
popa
fcompl
jg
sub
mov
int
popa
aam
pop
add
es
lret
inc
xchg
xchg
dec
fldenv
mov
imul
popf
gs
enter
or
movsb
lods
mov
fwait
ja
test
lods
cltd
cmpsb
aas
push
cmpsl
lea
pushf
into
das
jae
xchg
shl
repz
jl
insb
sub
jge
jbe
movsl
ret
pop
pop
cmc
jae
cltd
movsb
dec
out
mov
jl
xchg
or
lds
rol
jge
inc
stos
cmpb
jle
mov
loope
or
sub
mov
jnp
adc
add
daa
jmp
sti
dec
out
adc
repnz
sub
es
dec
dec
orl
sahf
and
jle
jae
daa
lret
mov
cmp
adc
jo
cmc
and
in
pop
movsb
push
and
not
out
test
in
mov
add
mov
les
mov
aam
dec
xchg
les
add
push
jmp
stc
ret
xor
push
sahf
int
and
repz
push
mov
imulb
inc
movsl
into
sbb
xor
test
divb
pushf
lret
sbb
push
mov
aad
xlat
push
outsl
xchg
cmp
inc
push
sub
int
fistpll
ret
cmp
pop
rdpmc
xchg
inc
imul
loope
inc
mov
lret
xor
mov
adc
rcll
sbb
mov
in
xchg
fnstcw
pop
mov
arpl
jb
mov
aaa
icebp
pop
jecxz
jecxz
jb
or
sub
scas
cs
push
push
imul
cmp
xchg
ret
inc
int3
xchg
push
stos
xchg
cmp
dec
adc
sahf
mov
fwait
pop
nop
xchg
mov
fdivrs
sbb
imul
fidivrl
fistpl
es
xchg
xchg
nop
test
stos
cmpsb
mov
outsb
xor
cmp
lds
cmp
sbb
lahf
inc
jne
push
mov
enter
sub
pop
lret
cld
inc
cmpsl
jl
dec
mulb
nop
jae
push
out
test
xor
pop
stos
and
mov
testb
js
mov
jo
idiv
xor
mov
ret
and
pop
dec
sbb
dec
push
dec
cmpsl
push
xorb
std
cmp
jbe
addr16
jg
push
in
mov
subb
int3
sub
mov
fdivrl
ja
stc
sbb
rcrl
push
mov
inc
stos
rolb
inc
cwtl
rcr
cmpb
stos
xor
je
mov
aaa
out
xlat
int
fists
jae
add
sub
rcr
sbb
jl
cmpsb
aad
lock
mov
xor
mov
xchg
jb
pop
cmc
jp
les
dec
cmp
and
push
inc
cmp
insb
rcrl
cwtl
sbb
cmp
pop
addb
sbb
mov
sub
int
lcall
jno
lcall
lock
pop
fsubl
push
jge
mov
not
sbb
sarl
adcl
icebp
cwtl
addr16
repnz
and
adc
xor
dec
pop
dec
rclb
scas
xchg
pop
xor
testl
and
aas
mov
mov
add
sbb
or
xlat
subl
xor
enter
les
or
cmp
sub
or
cltd
jmp
cli
cmp
lcall
mov
pop
dec
imul
mov
ret
or
rol
pop
push
pop
cmpsl
jns
dec
adc
add
ret
mov
int3
fmuls
decb
int
or
adc
imul
mov
jp
inc
xchg
inc
add
data16
cmpsb
inc
ds
call
push
and
adc
jb
out
or
bound
lock
je
sbb
cs
xchg
dec
xor
pop
push
scas
mov
mov
pop
and
cmp
jbe
inc
pop
jnp
mov
mov
push
jge
in
addr16
rclb
xlat
mov
sub
pop
jae
dec
mov
xor
sbb
in
and
push
sbb
push
out
shrb
adc
add
sub
xor
mov
pop
hlt
mov
push
adc
mov
fucomi
xchg
push
inc
imulb
lods
hlt
add
lods
aaa
dec
stos
test
xor
xchg
or
shll
mov
cmpsl
sub
nop
jb
push
sub
hlt
pop
pop
loope
lods
sbb
pop
mov
or
xlat
mov
xor
shl
cwtl
cmp
into
inc
sarb
mov
push
cmp
jl
lret
addr16
pop
pop
movsl
sbb
ret
jae
pusha
mov
sti
inc
pop
movsl
push
jmp
mov
popa
pop
jnp
or
je
xchg
dec
or
scas
mov
mov
lret
push
add
pushf
jae
test
adcb
mov
int
in
adc
loopne
out
mov
mov
adc
mov
das
cltd
out
and
push
cwtl
sub
add
mov
imul
popf
xchg
in
int3
ljmp
add
out
jnp
sub
cmp
lcall
lock
aaa
jmp
xor
in
js
xchg
imulb
into
xor
adc
in
std
adc
pushf
and
inc
inc
jo
xlat
insl
push
adc
xchg
and
stos
addb
iret
iret
stos
arpl
dec
or
push
xchg
cmp
push
jns
rorl
sub
clc
mov
rcrl
mov
or
ss
adc
popf
inc
or
data16
insb
sti
inc
xchg
pop
jno
ljmp
fimuls
pop
nop
in
and
xchg
lods
inc
mov
mov
mov
cmp
stos
pop
push
dec
sbb
push
mov
or
cmc
jmp
test
sbbb
add
fcmove
jmp
lret
push
push
pop
inc
lds
xchg
not
daa
ljmp
and
mov
add
mov
fs
push
jno
or
xchg
pushf
fnsave
lods
jp
dec
sbb
dec
sbb
inc
push
xor
jbe
and
sub
xchg
aam
sbb
jp
repnz
dec
clc
xor
ret
mov
mov
addr16
xor
add
mov
mov
rcrb
lcall
stc
test
loop
lcall
xchg
movsl
push
test
push
dec
or
adc
cmp
mov
lret
outsl
aas
mov
cmp
stos
sbb
mov
aad
and
repz
fs
mov
sbb
or
xor
mov
cmpb
stc
popa
andb
leave
jg
or
gs
sub
pop
xlat
adc
push
test
xor
and
adc
cld
pop
sbbl
repz
push
lea
mov
ret
hlt
sbb
mov
jle
loopne
jmp
inc
negb
fldcw
lret
les
out
xchg
mov
xchg
in
es
call
call
dec
push
js
xlat
subb
push
xor
push
inc
sub
push
sbb
imul
lds
or
hlt
dec
or
xor
push
bound
add
scas
jge
out
out
in
mov
movsb
pop
adc
daa
jbe
stos
sbb
or
xchg
xor
loop
xor
daa
add
jnp
inc
jg
xor
addr16
ret
std
movsl
xchg
jbe
leave
inc
adc
aas
inc
addr16
lock
dec
inc
push
int3
add
or
xchg
inc
mov
adc
pushf
xlat
jnp
dec
pop
jmp
rcr
jmp
pop
rorl
pop
sub
loope
inc
fcomp
gs
and
xor
xchg
je
repz
or
pop
cmp
sub
jne
push
ds
mov
cmp
cmp
test
ljmp
lock
jbe
mov
inc
jge
out
add
fisubrs
jae
ja
sarb
mov
xor
icebp
int3
arpl
cmpb
xchg
imull
mov
or
dec
leave
pop
iret
aad
or
xchg
push
push
cld
xchg
cmp
pop
jle
aam
jno
imull
jbe
lea
mov
sahf
mov
add
loopne
xchg
add
ja
push
fs
cs
xchg
pop
dec
fadd
jno
mov
insb
xchg
push
dec
and
xor
iret
in
lods
rorl
ret
sub
aas
mov
lahf
ss
pop
and
aad
cltd
sbbl
repnz
ja
mov
into
xchg
loope
adc
push
out
push
sub
outsl
dec
jae
pop
fldt
ficomps
cwtl
or
push
aaa
adc
and
adcb
shlb
push
mov
lcall
push
xchg
nop
test
mov
pop
iret
jmp
lods
call
pop
loopne
lods
call
jle
fsubl
lret
jae
loope
cld
daa
das
subb
inc
jno
cmpsb
cmpsb
in
loop
mov
aaa
add
dec
das
pop
ljmp
or
mov
inc
lea
dec
xor
add
fs
sbb
jmp
lcall
fdivl
aas
ret
add
out
jnp
cltd
ret
push
and
popa
jl
cmp
or
pop
lcall
pop
mov
test
push
mov
add
lock
int
cs
mov
lret
sarb
xchg
lds
nop
scas
dec
or
mov
sub
lret
pushf
cmp
out
das
lock
jecxz
add
bound
sahf
outsb
into
sarb
xchg
in
pop
cmp
loop
fcoml
in
sbb
rorl
into
mov
dec
popf
jae
xchg
xor
push
repz
adc
and
shll
jbe
outsl
sahf
and
insl
sbb
pop
repz
mov
sub
adc
add
adc
add
insb
popa
mov
pop
sarl
add
mov
fnsave
mov
mov
in
add
sub
ja
ds
jmp
into
jno
popaw
dec
push
mov
mov
xor
jo
popa
add
jnp
les
lcall
pop
sar
test
and
fistpll
mov
insb
hlt
jle
adcl
leave
push
fxch
fsubs
cmp
lods
mov
push
inc
ficoms
push
and
and
adc
gs
xchg
daa
sbb
mov
arpl
fisubl
rol
sbb
sarb
lods
repnz
test
pop
add
popa
sub
loopne
fadds
xchg
outsl
stos
lods
in
lds
mov
data16
scas
xchg
test
dec
inc
addb
mov
mov
push
jmp
fs
ficomps
cld
out
ds
and
inc
push
iret
mov
into
jecxz
xor
mov
jecxz
add
push
mov
add
cs
rcr
pop
sbb
call
repz
lock
sbb
jno
out
push
pop
cs
daa
pop
push
inc
mov
or
fimuls
sbb
data16
out
or
mov
dec
and
xchg
jl
outsb
xor
push
out
pop
xchg
sbb
mov
and
xchg
arpl
mov
mov
jg
mov
pop
add
xchg
xchg
jge
xchg
sub
cmp
add
aas
in
push
jge
mov
mov
pop
pop
adc
pop
cmp
insb
xchg
inc
mov
and
lret
shr
add
dec
loop
sti
or
mov
imul
xorb
and
mov
cld
outsl
cmp
xor
mov
pop
push
and
stos
cmp
insl
push
sti
les
in
aam
mov
mov
call
jl
dec
pop
sub
add
fisubs
shlb
lret
xchg
ret
mov
loope
outsl
pop
dec
or
jbe
jl
faddl
addr16
and
fwait
cmp
mov
cli
sub
cmp
xor
loopne
xor
decl
cmovs
int
mov
inc
ss
jns
ret
and
fildll
mov
test
in
sub
mov
rcll
nop
shrl
cmp
mov
dec
dec
jo
mov
roll
dec
push
pop
sar
in
dec
mov
sub
dec
inc
xchg
mov
add
adc
leave
lahf
test
pushf
mov
cmp
cmp
test
into
sub
jo
fmul
pop
jbe
sub
aas
mov
decl
rorb
mov
jae
std
cmp
mov
and
sbb
ja
push
add
pop
push
sub
in
or
push
mov
sbb
lods
pop
mov
mov
cmp
pop
into
int3
loop
clc
mov
aad
add
and
sarb
jnp
sub
pushf
movsl
push
ds
loop
or
add
inc
shrb
sahf
outsl
pop
jl
into
sbb
cmpsb
adc
sbb
push
mov
stos
dec
sbb
ja
iret
pop
xchg
faddl
test
in
scas
stos
aaa
adc
lea
or
mov
xor
add
mov
scas
cli
mov
shrl
pop
mov
cmp
mov
push
sub
shr
xor
bound
rcll
adc
mov
xor
shll
int3
cmp
shlb
push
fsubs
sti
inc
sahf
iret
push
push
or
cmp
int3
pushf
sub
mov
jns
pop
inc
push
stos
dec
add
mov
xchg
pop
cmp
in
aas
push
jp
inc
push
movsl
xor
mov
mov
dec
jb
ret
lret
subl
stos
pop
xor
pop
stos
das
cmpsl
aad
mov
call
mov
push
sbbb
ffreep
popa
jno
mov
pusha
lret
xchg
imul
stc
lret
sbb
inc
cmp
and
pop
loopne
dec
mov
sub
xchg
xchg
sub
int3
stos
aam
lds
out
cmp
cmp
dec
cmp
jge
jg
out
rcrl
push
jns
lods
enter
jecxz
xlat
loopne
addr16
in
pop
jne
inc
imul
mov
mov
mov
mov
outsb
mov
cli
movsb
sahf
jle
add
shll
push
arpl
jle
mov
sub
cmp
mov
cmp
fisubl
sbbl
lret
aad
jo
pop
popa
ss
mov
insl
add
outsb
push
push
jg
arpl
xchg
cmp
jmp
lods
ret
es
push
repnz
stc
push
shrl
mov
xor
add
insb
push
cmp
clc
test
cmp
daa
pushl
sbb
push
adc
and
xor
clc
popa
iret
and
mov
mull
sub
jge
jo
ficoms
cld
lcall
mov
js
xchg
add
push
iretw
inc
inc
flds
jl
repnz
and
movsb
sub
adc
push
mov
jae
daa
inc
cld
add
icebp
xlat
repz
in
loope
and
inc
mov
jle
sbb
dec
ret
rol
pop
cld
jmp
jp
xlat
mov
pop
in
mov
ds
bnd
sub
ljmp
mov
andl
repnz
insl
or
ret
cmc
pop
testl
or
xchg
push
jb
sbb
push
dec
push
pop
pop
outsb
in
xor
int
and
inc
das
cmc
fsubr
cmp
les
mov
js
jmp
or
enter
and
lret
dec
jnp
inc
pop
rol
cli
out
lcall
sub
cld
stos
mov
fwait
outsb
movsb
cmpsl
out
into
icebp
add
dec
pop
rcrb
inc
jno
xor
pushf
mov
mov
inc
orl
mov
addr16
imul
mov
mov
mov
rorb
inc
inc
stc
xchg
das
fmul
pushf
mov
and
fs
fs
jno
mov
mov
dec
mov
hlt
stos
push
push
inc
nopl
xor
push
out
mov
pop
or
mov
out
sarb
outsb
std
adc
mov
test
cmpsb
xor
mov
shlb
push
out
lret
sub
xchg
push
test
sbb
mov
pop
out
imul
ja
cmp
mov
test
jb
cmp
jg
jmp
sti
inc
in
sub
sub
jo
cld
int3
mov
test
mov
int3
xchg
xor
or
insl
jo
sub
imulb
icebp
jp
mov
aad
adc
mov
xor
xorb
mov
push
mov
iret
stc
mov
sub
cli
insb
pop
pop
inc
pop
js
lcall
dec
mov
fsts
dec
imull
imul
fcomip
je
fwait
pop
adc
xchg
filds
mov
cwtl
mov
inc
js
or
inc
inc
clc
fcomp
repz
and
cmp
sub
in
lret
ljmp
jb
out
nop
hlt
gs
lea
pop
filds
in
mov
iret
rsqrtps
ficompl
push
cli
fdivl
add
mov
pop
mov
rorb
jno
loope
dec
cmp
test
or
jg
mov
mov
xchg
test
pop
fistps
popa
xor
movl
pop
push
loop
or
lock
push
inc
add
lahf
dec
xchg
xchg
movsl
or
xor
sbb
pop
int
inc
mov
pcmpeqb
ljmp
adc
orb
jecxz
lret
pop
cli
jo
hlt
sbb
jle
adc
mov
mov
fmulp
sbb
inc
dec
negl
jbe
push
cmc
mov
push
push
cmpl
jmp
lods
fdivl
dec
xchg
sub
aas
gs
jnp
sar
ret
std
mov
xchg
mov
pop
add
movsl
neg
xchg
ja
inc
aaa
dec
shr
add
sub
sbb
fcomi
pop
jbe
pop
imul
pop
cmp
bswap
bnd
ficoml
jo
pop
cmpsb
sbbb
gs
xchg
mov
pop
in
xor
data16
add
out
dec
mov
cmc
cmpsb
pop
sbb
out
andl
sub
shl
xor
xchg
sbb
push
faddl
cmpsl
add
in
outsb
cmp
lds
mov
lock
dec
mov
pop
ljmp
jl
inc
pushf
xchg
pop
subl
dec
xor
jmp
je
pop
cmp
xchg
push
subb
pop
faddp
pop
cmpsl
insl
in
push
in
lea
cmc
sarb
test
jne
les
hlt
mov
out
xchg
lcall
push
mov
sbb
add
pop
sar
xchg
xor
mov
addb
inc
gs
jno
pop
in
sub
push
std
sub
fs
repz
scas
xchg
mov
rol
aad
lea
icebp
out
in
es
iret
push
ret
insb
cmp
jle
or
cltd
jecxz
fsubrs
insb
pop
nop
add
inc
mov
adc
push
mov
pop
sub
shl
in
mov
dec
pop
insb
xchg
fldt
stc
into
popa
add
xor
xchg
mov
dec
mov
lea
mov
lcall
sbb
or
cmovp
hlt
or
push
sub
popa
rol
stos
es
hlt
dec
ficompl
jge
imul
test
mov
inc
inc
out
repz
sub
repnz
mov
lcall
push
xor
dec
xor
aam
or
arpl
rcll
jmp
pop
inc
mov
nop
test
test
in
cmpsb
xor
mov
jle
loop
std
and
roll
rcrb
dec
addr16
insb
cmove
mov
sub
sar
aaa
xchg
cmp
pop
imul
jl
cmp
push
insl
xchg
iret
cmp
or
fiaddl
jbe
mov
filds
addb
fldl
std
ss
cmpsl
xor
sub
adc
mov
sbb
test
shll
push
xchg
push
movsl
scas
enter
push
in
stc
lcall
test
sub
xor
add
xorb
aaa
dec
or
leave
cmp
jnp
cmpl
push
adc
add
inc
icebp
test
push
in
scas
push
xor
leave
or
dec
in
gs
aad
mov
jb
pop
sahf
int
out
xor
sbb
stos
mov
push
in
push
xchg
push
mov
mov
test
mov
inc
push
jbe
sub
or
jecxz
cmpsl
insl
mov
lods
push
shrb
pop
push
pop
insl
fcompl
popf
add
sbb
push
insb
mov
inc
dec
xlat
mov
sbb
jmp
jno
dec
push
jmp
in
xor
sahf
cmp
or
out
jne
ror
pop
push
sbb
fcoml
mov
movsl
and
inc
cmpsb
lods
mov
call
jmp
sub
decl
or
cmpsl
in
add
sub
data16
rcr
vunpcklps
cli
jo
mov
das
mov
stos
aam
push
jnp
jno
sub
pusha
adc
int
cli
jmp
or
and
fcom
loopne
xor
nop
and
icebp
or
sbb
and
xchg
imul
fptan
orb
jno
popa
inc
inc
pop
out
orb
dec
mov
jmp
test
fsubl
sarl
and
mov
adc
mov
sbb
fsts
stc
rorl
adc
fimull
mov
fildl
sbb
outsb
daa
adc
scas
xchg
xchg
xchg
dec
aas
aas
inc
stos
push
xchg
ret
das
les
scas
jne
mov
sahf
dec
loope
in
or
or
and
iret
adc
into
fidivl
sub
aam
je
pushf
mov
aam
jecxz
mov
jbe
mov
jmp
cmp
or
mov
cmp
adc
push
lret
mov
icebp
out
jne
xchg
ljmp
xchg
sub
cmpsb
test
bound
dec
add
sbb
aad
test
push
or
inc
add
iret
stos
cmp
dec
jmp
mov
daa
jb
in
sub
clc
push
test
arpl
scas
lret
repnz
inc
leave
xor
subb
insl
inc
fbstp
call
inc
and
push
xchg
es
mov
loopne
cli
sarl
sub
into
test
xor
push
jp
push
stos
fidivrs
mov
and
stc
sub
fisttpl
in
sbb
jmp
js
mov
sbb
and
xchg
test
fidivrs
pop
data16
push
inc
notl
add
subl
inc
cltd
mov
fs
mov
add
mov
pop
cmp
xchg
mov
inc
mov
dec
cmp
fs
and
push
sub
cmp
xchg
sbb
test
jne
clc
push
daa
es
int
jno
cmp
pusha
ljmp
dec
orb
pop
mov
dec
iret
fcoml
push
pop
loopne,pt
pop
inc
mov
sti
jg
seto
cmp
notb
inc
repnz
mov
fstps
clc
popa
sub
fldt
sub
sbb
add
fstpt
js
lcall
cli
pop
or
xchg
fildl
in
lods
adc
sbb
popa
ret
shlb
pop
sahf
nop
mov
mov
cmp
daa
hlt
cld
test
es
cmp
sbb
pop
push
popa
push
fstpt
je
popa
mov
sar
cmp
dec
add
filds
push
or
add
clc
jp
leave
adc
sub
mov
sbb
dec
rorb
mov
loop
es
jbe
add
mov
mov
sbb
jecxz
in
cmp
cmpsl
or
lods
in
and
iret
hlt
dec
jle
shr
pop
add
ja
xor
cli
dec
or
cld
clc
xchg
xchg
imul
push
xchg
ret
clc
lea
fisubrl
push
add
inc
inc
mov
adc
mov
outsl
clc
mov
pop
jle
cmpsl
sbb
add
mov
mov
add
ret
mov
arpl
xchg
rolb
jns
movsb
popf
dec
jle
mov
aas
cwtl
leave
and
movsl
inc
xor
mov
xchg
mov
add
fidivs
sub
fsubl
fbstp
xchg
lock
mov
cmpsb
sti
pushf
rcrb
fwait
ja
and
je
or
mov
stc
and
mov
sbb
in
sahf
push
imul
mul
jge
hlt
mov
repnz
or
iret
je
arpl
cmp
and
sbb
ja
sub
sub
movsb
xchg
daa
jmp
cmpsl
iret
sbb
dec
pop
popa
sahf
xchg
xchg
xor
sub
xorl
push
bnd
cmpsb
ror
mov
push
aas
test
sbb
pop
lock
and
out
fsubrl
dec
mov
xchg
xor
stos
adc
outsl
push
jno
inc
mov
data16
add
iret
inc
jecxz
cmp
je
adc
movsl
pop
fmull
pop
ss
shlb
push
aad
jg
xchg
add
mov
lock
dec
fildl
mov
lret
fcompl
inc
cli
mov
pop
mov
shl
push
pop
inc
out
and
push
in
inc
xchg
mov
mov
fsubs
inc
jp
and
fs
adc
lods
in
xor
mov
jp
adc
push
xor
push
inc
hlt
fsubs
ljmp
xor
cwtl
push
out
mov
in
push
jle
push
add
in
lods
adc
test
repnz
negb
aaa
cmp
mov
cltd
cmc
fstl
dec
shll
mov
je
jmp
cmp
and
outsl
sbb
push
xor
xor
push
pusha
push
pop
rcll
lahf
pop
sbb
clc
jnp
pop
imul
cmp
push
add
popf
lret
imul
sub
add
add
faddp
xchg
popf
dec
inc
xchg
lret
jbe
int3
fildl
testl
movsb
scas
or
repnz
rorl
adc
aad
aaa
loope
mov
cltd
lods
push
mov
int
cmp
xor
add
lea
mov
add
push
add
sub
mov
fstps
nop
popa
cltd
inc
and
mov
mov
sbb
mov
sbb
mov
xchg
pusha
popa
fnstenv
sbbl
es
mov
inc
jmp
popa
cmp
jo
mov
lods
mov
jmp
into
adc
and
adc
scas
cmpl
sbb
aas
add
dec
notl
cmc
bound
jno
xchg
pop
hlt
roll
or
data16
faddp
pop
fidivs
inc
pusha
mov
aas
xor
rcr
dec
int
push
jae
in
push
mov
ljmp
lsl
push
jge
add
int3
xchg
shll
xor
mov
lahf
lret
pop
and
test
add
insl
in
sub
jp
cltd
test
adc
dec
push
fyl2xp1
or
lea
std
ds
loopne
sbb
out
pop
pushf
mov
and
pop
jp
ja
sub
lret
inc
mov
jo
clc
sub
mov
xor
mov
out
or
into
jle
pushf
adc
add
out
rep
je
gs
push
cmp
in
fisubrs
pop
xchg
xor
fisubs
call
mov
mov
push
inc
cmpsb
stos
test
rcl
lcall
and
pusha
lret
rcrb
pop
pop
shlb
mov
push
les
loope
mov
aam
xchg
out
sub
mov
push
jmp
xor
fnsave
cmp
mov
jecxz
stos
leave
add
xsave
ret
inc
adcl
int3
push
test
mov
outsl
and
xor
fcompl
notb
pop
ljmp
loop
push
dec
sub
or
push
jmp
push
add
pop
mov
mov
jp
orb
loop
insb
mov
mov
test
sub
aam
add
dec
cwtl
out
xchg
jae
xchg
int
arpl
lds
inc
jp
in
push
xor
and
mov
pop
lret
sub
in
xor
push
lods
jl
jle
or
fdiv
jo
mov
movsb
xchg
inc
dec
sbb
dec
and
push
scas
cmp
lea
mov
addr16
arpl
xchg
mov
xlat
jno
adc
xor
fmul
out
mov
fwait
cmp
sbb
fiaddl
pop
xchg
adc
xor
pop
xchg
xchg
rcll
mov
xorl
xor
outsb
mov
nop
mov
cltd
mov
flds
push
int
mov
xchg
pop
push
fucomp
add
or
pop
sub
je
xor
outsl
rol
ds
movsl
mov
push
sahf
inc
jle
in
jb
ljmp
and
inc
and
hlt
sub
add
popa
out
add
mov
sub
arpl
arpl
outsb
inc
lret
movl
xor
insl
fld
cmp
idivb
outsb
aaa
pop
jns
ljmp
shl
fwait
hlt
arpl
cmpsb
outsl
adc
iret
push
mov
mov
icebp
enter
ret
pop
add
insl
and
movsl
jp
sarb
push
dec
out
sub
dec
imull
imul
push
push
out
mov
fldenv
test
imul
shll
popf
xor
imul
adc
test
into
push
rolb
or
xchg
out
push
and
test
inc
cmc
add
mov
stos
dec
mov
and
imul
and
xor
sub
add
push
sbb
cli
cld
adc
xchg
loope
insb
aad
and
or
xor
rorl
jmp
xchg
push
loopne
outsb
nop
ret
orb
iret
hlt
movsl
pop
sub
adc
cmpl
fdivs
fcmove
adc
mov
adc
inc
cs
or
inc
fdivrs
movb
inc
mov
push
inc
repnz
insb
mov
repz
push
imul
cli
daa
sub
and
mov
sub
lods
push
mov
xchg
inc
jg
call
pop
fwait
mov
dec
mov
mov
mov
add
dec
lods
adc
ss
divl
jnp
and
stos
int3
xor
jnp
xchg
jecxz
ret
cltd
cmp
stos
cltd
adcl
push
imul
push
les
pop
add
ss
sub
adc
pop
insl
fnclex
js
cmp
in
mov
mov
xor
cmpsb
jo,pn
adc
lcall
cmp
xor
xchg
aas
mov
shl
sub
hlt
add
divb
inc
inc
xchg
or
and
arpl
add
imul
mov
push
pop
sbb
popf
incb
push
mov
cli
fsubs
sbb
mov
sbb
enter
or
testl
daa
scas
jge
jo
out
dec
in
or
inc
imul
xor
jno
jmp
fdivr
repz
insb
sub
mov
cmpsl
insl
in
js
cmc
push
gs
jne
jmp
mov
stos
sahf
and
int
or
inc
insb
inc
hlt
in
xor
sti
adc
imul
inc
nop
sti
ss
std
rep
ds
sbb
out
inc
sbb
push
popf
cmp
xchg
ss
iret
addr16
loope
insl
add
out
rep
aad
fcompl
sbb
jmp
inc
cli
adc
into
push
xor
sub
lock
insl
inc
leave
outsb
sub
clc
push
jp
ss
cmp
ror
rorb
pop
dec
stc
add
jbe
xor
mov
jns
mov
dec
or
mov
std
add
cmp
add
ja
inc
lods
enter
fwait
test
sub
outsl
or
pusha
aaa
dec
xchg
or
xor
push
jmp
xor
cmpsb
into
ret
pop
pop
pushf
ret
out
fdivrl
insb
mov
ret
xchg
xchg
xor
mov
out
or
and
mov
std
roll
pop
push
jbe
outsb
mov
scas
mov
sbb
ss
shl
sbb
jae
lock
imul
lock
movsl
push
mov
jl
orb
fs
inc
fidivs
fwait
fnsave
mov
push
cltd
cs
sub
lret
cmp
mov
or
loop
iret
sbb
pop
sbb
xor
xchg
push
das
adc
inc
inc
in
dec
jmp
adc
dec
aaa
xor
and
vcvttps2dq
dec
fwait
xor
add
inc
imul
jo
xor
mov
adc
movsb
ljmp
mov
xor
add
movsb
stos
loopne
xor
jle
fst
adc
pop
enter
jb
sbb
rcr
rcl
sub
inc
inc
pushf
mov
cld
pop
dec
and
scas
int3
and
je
cmp
or
push
pop
mov
mov
jmp
lret
les
or
mov
les
repz
movsl
andb
cmp
ja
mov
lds
cmp
bound
lock
cmpsl
inc
mov
sub
test
xchg
mov
shrl
xchg
and
icebp
clc
fmull
out
gs
das
movl
and
xchg
js
test
and
xor
rcll
and
loope
popf
popa
sbbl
add
pop
out
mov
cmpsl
xor
mov
fndisi(8087
lret
fbld
dec
push
xor
popf
cwtl
sbbb
mov
jae
aad
aam
hlt
pop
xchg
jg
out
add
pop
xor
test
xor
and
jo
std
int3
sub
lds
sub
cmp
push
add
ja
sub
mov
in
gs
push
inc
and
mov
daa
and
lods
lods
sbb
cmp
fdiv
xchg
sub
sbb
test
pop
mov
movsb
loope
mov
inc
push
inc
mov
dec
cmp
loop
pop
jmp
cmp
inc
mov
or
loope
aam
sbb
in
jne
popa
stos
repnz
pop
aas
inc
xor
imul
cmp
jecxz
jne
fcompp
jae
das
xchg
notl
movsb
push
jo
dec
sub
fisubl
mov
pop
mov
test
add
mov
pop
jo
push
jb
sub
jbe
enter
xchg
and
jns
call
out
test
stos
xchg
push
add
inc
ror
push
mov
dec
adc
inc
je
cmp
inc
addb
cmp
ret
and
cmc
andb
ss
lahf
sub
sbb
jno
dec
cmp
inc
mov
lret
pop
push
imul
lock
sbb
jbe
pop
ror
sub
daa
scas
cltd
sub
aas
mov
xor
push
dec
or
and
inc
push
lods
std
add
stos
and
jnp
mov
lahf
jle
pop
shrb
mov
fwait
adc
aas
fcoms
xchg
jecxz
js
adcb
fwait
mov
or
xchg
shlb
cmp
mov
nop
in
aad
std
mov
sub
insb
jne
pop
aad
and
stos
jp
in
out
pop
and
jbe
xor
jp
sbb
test
pop
push
xchg
sbb
fisubl
notl
fisubl
inc
xchg
bswap
stos
sahf
daa
ficoml
sub
addl
ret
xchg
or
pop
jl
mov
fcmovnb
fwait
pop
mov
loop
mov
ret
mov
pop
jae
xor
cmc
push
jl
add
in
in
xorb
jle
cmp
ljmp
int
popa
or
push
pop
fimull
add
lock
rcrl
mov
addl
sbb
sub
cmp
cwtl
and
mov
adc
stc
xchg
arpl
jbe
aam
sbb
stos
cmp
jmp
push
ja
ror
leave
lahf
jnp
pop
lock
jae
sub
cmp
mov
mov
cwtl
mov
aam
les
adc
xchg
orl
mov
test
lods
aad
or
and
adc
pop
push
jbe
pop
jp
add
and
add
cmp
lock
mov
lds
jo
inc
xchg
cli
mov
inc
iret
adc
adc
mov
lock
lods
aam
mov
or
xchg
lods
shl
cld
adc
lret
xlat
jo
divb
fimull
nop
push
insb
dec
es
or
cmp
testb
or
sub
push
add
xchg
out
sbb
sub
push
pop
ss
lret
in
add
hlt
ret
es
cmpsb
or
xchg
cmp
cmp
test
dec
mov
xlat
sub
push
adc
sub
nop
or
mov
enter
cmp
jg
ljmp
push
lds
xchg
test
push
into
aam
mov
imul
mov
fcom
push
sbb
fs
pop
lock
bound
cli
pop
pop
hlt
call
int
jle
mov
mov
sub
jmp
xor
mov
fidivl
mov
dec
and
cmp
push
in
sbb
xchg
sti
fimuls
inc
lcall
movsl
sbb
adc
insb
arpl
mov
xorl
aad
scas
sbb
stc
mov
es
fs
ds
pop
mov
fs
dec
push
repz
inc
popl
fwait
mov
andb
and
add
inc
aaa
test
popf
jle
and
lds
arpl
out
sahf
mov
iret
pop
push
ret
mov
add
popf
leave
xor
push
orb
out
loopne
dec
shrb
mov
sbb
add
mov
inc
xchg
or
dec
dec
loopne
das
nop
sbb
mov
dec
lcall
stos
lret
shlb
pushf
pop
jp
lahf
sbb
pop
sahf
sbbl
pop
mov
sbb
lret
mov
iret
jns
push
pusha
push
inc
and
stc
sbb
repnz
cli
jno
xchg
test
xchg
mov
push
sarb
daa
and
jno
fadd
imul
add
imull
mov
cltd
fdivr
lret
iret
mov
lahf
and
and
sub
cmc
inc
sbb
lods
int
repz
jb
int
movsb
cs
and
sbb
dec
push
mov
mov
fnsave
cmp
cmpsl
mov
or
inc
dec
sub
aaa
cli
mov
add
leave
cmp
cwtl
stc
mov
mov
subb
dec
int3
add
dec
mov
testl
cmp
add
icebp
sub
xor
iret
ds
push
stos
cmpsb
cltd
jge
sarb
cltd
clc
adc
inc
dec
hlt
movsl
ja
test
mov
dec
inc
inc
mov
imul
push
addr16
fnsave
mov
dec
xchg
testb
jmp
loopne
or
clc
push
jg
add
mov
cltd
xor
fldenv
xor
fwait
leave
mov
hlt
push
xchg
and
push
jecxz
and
imul
and
repz
test
dec
pop
mov
pop
push
cmp
xchg
fnsave
leave
ljmp
or
xor
out
jecxz
or
jb
inc
cmp
add
adc
xchg
mov
or
and
mov
push
insb
mov
push
add
cmp
out
sbb
cwtl
fidivrs
xlat
ja
out
lret
push
inc
leave
adc
push
in
push
pop
rcl
lret
cmp
xchg
jbe
pop
out
inc
push
out
cs
sub
add
xor
mov
hlt
test
les
cmp
cltd
jge
cmc
pop
cld
push
xor
cmp
jae
push
pop
repnz
fnstsw
mov
repnz
pop
sub
das
mov
jp
xor
mov
mov
and
or
or
cmp
cli
in
pop
mov
cli
sub
repz
movsl
dec
pop
insl
push
sbb
shl
js
insb
test
pop
shl
sub
jecxz
cld
or
int3
jnp
test
inc
sbb
hlt
mov
jns
lret
mov
stos
scas
dec
iret
dec
dec
push
sarl
mov
mov
pop
enter
mov
leave
ret
dec
mov
sahf
xor
mov
movsl
jns
lds
push
dec
js
popa
pop
adc
pop
add
cmp
pushf
data16
add
in
loopne
cmp
pop
add
lret
fistl
sbb
out
push
xor
popa
inc
push
mov
popa
in
ja
loope
aad
xchg
je
cmp
add
mov
sbb
xchg
xor
xchg
mov
mov
jno
mov
xor
mov
xor
imul
lret
adc
out
xchg
xor
fistpl
and
lahf
out
mov
ja
xor
sub
int
les
iret
mov
sahf
aas
mov
iret
add
mov
fstpl
pop
cmpsb
flds
xchg
pop
and
jg
out
inc
xchg
aas
sub
jle
push
repnz
out
pop
loopne
push
rcl
int3
insb
add
xchg
into
and
out
sbb
pop
int3
jmp
inc
stos
add
je
dec
xchg
sub
push
stos
repz
in
sub
cmp
cmp
push
or
aas
cmpsl
movsb
adc
int3
mov
pusha
mov
clc
pop
mov
and
loope
subb
and
push
jo
subb
shlb
adc
inc
jge
fnstcw
je
lret
test
sti
and
xor
push
jnp
addl
test
ret
data16
out
lret
test
pusha
cmp
add
sbb
sti
shll
and
lret
jne
and
outsl
imul
sbb
fiadds
mov
xchg
mov
push
shlb
adc
sub
or
fdivrs
dec
xchg
xchg
les
xor
std
lods
shrl
push
mov
shlb
outsl
pusha
or
mov
cli
add
outsl
mov
mov
dec
pop
test
mov
jge
dec
aaa
cmc
lods
mov
je
adc
xchg
lcall
inc
sbb
clc
lretw
pop
int
jb
je
addr16
lcall
ret
pop
mov
jne
sub
loope
jo
jno
mov
sub
inc
lock
push
js
sub
dec
adc
stos
jecxz
cmp
enter
ds
jg
mov
cmc
xchg
pop
xadd
int
mov
out
and
adc
ds
xchg
jp
xor
dec
xor
add
add
mov
cltd
jmp
pusha
in
rclb
push
xchg
scas
scas
decb
inc
xchg
loop
sbb
and
add
inc
sub
adc
lds
xchg
jmp
mov
mov
mov
add
push
fidivs
sbb
stos
sub
test
ss
notb
or
adc
outsb
sahf
jecxz
ret
jmp
mov
mov
cmc
mov
decb
ficompl
dec
jno
sub
jb
push
shll
inc
in
mov
push
pushf
pop
mov
test
add
push
pop
cli
loopne
inc
nop
sbbb
jecxz
fistpl
movsl
or
arpl
mov
shlb
cli
fadd
into
out
insl
imul
cmpsb
push
pop
xlat
jnp
int
push
xor
jbe
add
das
ds
dec
sbb
jno
push
mov
xor
fidivrs
shl
outsl
lea
inc
jecxz
adc
pop
cmp
cmp
je
negl
out
ficoms
or
cmpb
ja
add
jp
xorb
cmp
mov
mov
sub
jnp
cmp
xchg
mov
stc
es
dec
in
out
lahf
mov
sbb
mov
scas
les
mov
jb
bound
cmp
pop
into
sysret
repnz
push
mov
adc
pop
test
and
jp
or
xor
pushf
popa
or
push
inc
shll
mov
inc
fadd
add
dec
ficomps
aas
stos
push
push
sbb
leave
and
hlt
jo
pop
cmp
gs
xchg
pop
dec
imul
push
dec
cltd
lods
hlt
loop
dec
pop
mov
pop
out
imul
cli
jo
inc
dec
idivb
or
xor
xlat
push
fwait
sbb
loope
mov
jecxz
in
negl
mov
sub
jo
sbb
xchg
movb
adc
fsubl
out
jmp
out
push
int
nop
adcb
cli
mov
or
and
ret
xchg
mov
xlat
xor
or
and
cmp
lret
push
inc
ss
aas
xchg
jne
popf
dec
cmp
lds
xchg
es
xlat
or
roll
movsl
dec
cmp
or
jl
rclb
sub
xrelease
aam
add
sub
lds
popa
cmp
mov
xor
repz
add
xchg
sarb
fsts
ficompl
imull
mov
xlat
sub
shll
mov
push
clc
test
jbe
ds
loope
xchg
xchg
cmp
cmp
lock
or
xchg
sbb
push
loop
sub
mov
mov
enter
push
addr16
xor
fwait
lock
pop
or
add
fwait
es
out
sti
daa
cmp
orb
jae
icebp
lods
ficompl
imulb
and
sbb
insl
sbb
pusha
out
stos
imul
fdivr
bound
out
in
dec
es
imul
adc
roll
fcompl
jl
lret
jecxz
fucomip
mov
push
ja
adc
xchg
and
je
test
cmpl
dec
xchg
push
fnstenv
jb
xlat
mov
iret
dec
cwtl
aam
lods
or
sarl
les
push
into
mov
movsb
jecxz
xchg
hlt
mov
mov
call
sbb
xchg
repnz
cmp
jns
mov
xchg
loope
and
nop
push
pop
test
shlb
shrb
pop
fsub
std
insb
push
push
mov
xchg
push
fs
add
lea
lea
and
push
or
out
dec
mov
pusha
les
add
and
ja
shld
sbb
pop
dec
cmpsl
outsl
clc
adc
psubb
fnsave
and
fldl
or
mov
fistl
sbb
dec
fisubrs
mov
sbb
sbb
cmpl
ds
dec
arpl
xchg
push
iret
push
cwtl
shrl
fnclex
movsl
stos
cwtl
xchg
shlb
xchg
movsb
pop
add
sub
in
or
and
loopne
xchg
push
movsl
dec
or
push
adc
mov
mov
mov
notl
scas
dec
int
scas
cmpsl
mov
jbe
test
mov
fildl
fwait
in
inc
and
sub
jg
fimuls
out
arpl
push
mov
push
cmp
imul
mov
out
pop
cmc
dec
add
int
scas
cs
testl
imulb
pop
xchg
mov
dec
loope
xchg
cmc
adc
inc
mov
jge
test
imul
sub
xchg
fwait
push
adc
aaa
cmpsl
lcall
test
cmp
or
xor
cli
repnz
mov
mov
xchg
mov
jle
sti
sub
mov
mov
jg
pusha
push
push
sbb
in
ds
mov
mov
inc
scas
stc
push
xchg
fwait
arpl
scas
push
xchg
sar
jp
jb
jnp
lret
out
in
mov
push
or
pop
inc
shrl
ret
inc
mov
in
jnp
cwtl
add
mov
cld
fcomps
call
pop
rcrb
and
push
mov
bound
adc
push
stos
jne
add
push
mov
lods
or
cmp
sbb
mov
dec
mov
push
lods
or
dec
adc
xchg
or
sub
mov
repz
mov
lods
jp
xchg
lea
push
adc
pushf
shlb
cmp
push
push
pop
pop
stc
mov
jg
bound
mov
sub
movsl
push
sub
cmp
adc
jb
xchg
mov
pop
in
lahf
or
inc
xchg
dec
test
jmp
aad
mov
int3
dec
cmpb
mov
push
jnp
pop
sub
adc
stos
mov
adc
xor
js
mov
xchg
sbb
insb
sub
dec
aam
test
mov
dec
pushl
cmp
pop
pop
hlt
xchg
dec
es
stos
mov
int
add
out
les
adc
jmp
jge
cmp
icebp
pushf
outsb
andl
or
je
push
push
sub
sarl
popa
ret
test
mov
jmp
or
imul
mov
lahf
cmp
mov
cs
in
and
jnp
push
or
xchg
je
push
fucomi
shll
ret
pop
fidivl
sub
mov
mov
sbb
stos
cmpsl
inc
inc
das
ja
movsl
dec
repnz
scas
pusha
loop
sar
test
jl
mov
sbb
cs
mov
lahf
jle
movsl
cltd
xor
cmp
arpl
fcoms
push
test
xorb
data16
or
push
sbb
cmp
mov
push
bound
sahf
mov
pop
adc
ds
xor
dec
sbb
in
jg
and
mov
sti
xchg
sub
or
scas
hlt
scas
inc
xor
mov
jg
and
pop
cmpsb
mov
jbe
xchg
popf
adc
xchg
xchg
das
cmp
lahf
pop
dec
jns
sub
pop
cwtl
cmpsl
inc
sbb
aad
dec
inc
mov
cmp
stc
les
fnsave
or
mov
mov
in
addl
into
xor
xor
addr16
dec
iret
push
xchg
sub
rclb
nop
mov
lds
shll
mov
xchg
imul
xor
mov
and
xor
hlt
cmpsl
push
rcll
dec
add
rclb
cmp
aas
push
jecxz
sbb
xchg
iret
pop
mov
sbb
call
out
jle
inc
sbb
punpckhbw
mov
pop
or
push
jge
cmp
xchg
inc
jb
pop
sbb
sbb
or
leave
fdivrl
or
sbb
inc
and
sub
je
movsb
repnz
add
je
mov
sbb
mov
addr16
das
or
add
stc
or
pop
je
lea
lods
cs
jmp
pop
lret
icebp
out
sarl
jmp
inc
add
cld
push
push
movsb
inc
int3
scas
shll
xchg
pop
xor
jmp
fwait
fs
fidivrs
push
cmp
xchg
add
aas
ret
pop
sbb
repz
and
ficomps
jmp
aam
out
gs
sub
aas
mov
stos
idivl
mov
mov
and
cmpsb
call
push
loopne
pop
push
sbb
xor
cmc
rorb
or
inc
scas
jns
add
cmp
sub
stos
or
sub
sub
add
divb
cltd
js
call
jmp
cmp
or
fistpll
xchg
jae
andb
fsubr
mov
sahf
in
jg
je
cld
ret
roll
lahf
xchg
mov
adc
dec
mov
out
pop
push
push
popa
insl
int3
xor
cmc
jnp
out
mov
xor
add
ljmp
push
addr16
or
les
jle
std
outsl
adc
outsl
adc
fs
int3
stos
sbb
xchg
or
or
adc
in
xchg
jne
lods
imul
je
xchg
xor
inc
cmpsl
loop
pop
cwtl
push
cli
mov
dec
inc
inc
jb
dec
cmp
pusha
jp
enter
or
lods
aaa
sub
inc
ret
faddp
xor
ret
fwait
xchg
inc
xor
add
aas
xor
push
mov
test
inc
jecxz
jl
jae
inc
out
imul
push
aas
sbb
fisubl
jmp
nop
jp
dec
sbb
pop
adc
ficompl
gs
push
push
mov
int
mov
push
pop
loopne
scas
fisttpll
xchg
enter
fs
clc
add
pop
xchg
jp
roll
js
mov
jbe
mov
das
mov
pop
xor
pop
std
pop
repnz
pop
ret
fwait
out
roll
cmpl
addr16
mov
ss
pop
je
dec
pop
pop
add
lret
or
les
inc
fimuls
inc
sbb
lods
loop
orb
outsl
int3
sub
test
sti
aaa
mov
clc
mov
clc
adc
imul
cmp
mov
adc
pop
andb
or
pushf
idivl
push
leave
cmc
push
mov
mov
stos
lcall
ljmp
scas
fdivl
add
sbb
fstpt
xchg
sahf
pop
jl
sub
xor
or
inc
cmpsl
daa
cmp
dec
cmp
push
or
imul
cmpsl
sbb
adc
add
add
xchg
cmp
movsl
repz
fnstsw
mov
repz
int3
xchg
sub
jle
loopne
lock
push
mov
jecxz
and
adc
mov
bnd
je
mov
dec
xor
xor
sbb
shrb
add
stos
sub
push
in
in
sub
adc
and
movsl
in
arpl
mov
ja
jno
dec
and
mov
and
and
xchg
inc
lds
lds
lret
cmpsb
xor
stc
daa
pop
mov
sbb
mov
iret
repnz
outsb
ja
push
insb
inc
int3
negb
pop
fxch
pop
fbstp
push
mov
xor
mov
jno
mov
mov
jmp
fmulp
xadd
cmp
aam
decb
jmp
es
aaa
adcb
rol
dec
enter
adc
imul
pop
loop
imul
sub
sbb
int3
fnstcw
mov
jmp
mov
cmp
and
lods
rol
filds
sbb
dec
jns
cwtl
adc
pop
inc
popl
addr16
mov
add
dec
daa
cmc
sbb
fistpl
aaa
leave
mov
and
inc
xchg
cli
scas
xchg
adc
sbb
outsl
push
arpl
push
lahf
mov
js
sub
mov
lcall
and
stos
sub
aas
lods
clc
mov
mov
ja,pn
mov
sbb
xchg
es
mov
add
xchg
lods
shlb
xchg
rorb
pushf
setbe
sarb
sub
rolb
pushf
sbb
pop
cmpsl
ss
jo
popa
pop
stc
dec
fisttpl
add
lock
xchg
adc
sub
mov
int3
jno
xchg
imul
js
sub
popa
pop
dec
out
jnp
pop
cmp
loop
push
testb
xor
repz
fidivrl
jecxz
filds
fs
pop
and
mov
cltd
outsb
sub
pop
out
outsl
fwait
jle
pusha
adc
fists
loopne
sub
fsubs
mov
cmc
mov
lods
jb
push
pop
cwtl
dec
popf
outsl
push
cltd
pop
inc
clc
jp
lahf
dec
xor
adc
enter
sub
cli
mov
sub
mov
pushf
dec
imul
aad
xchg
mov
in
mov
pop
sti
mov
mov
js
dec
lea
fcmovnb
insl
inc
push
jge
inc
fldenv
lods
movsb
aaa
je
pop
test
pop
dec
pop
mov
arpl
cmp
push
mov
sub
and
xor
or
scas
or
pop
sbb
fwait
cmp
inc
sahf
and
ficoms
xor
mov
cmc
out
fcmovnbe
inc
jle
dec
cli
aaa
inc
rcll
adc
inc
rclb
idivl
or
imul
dec
mov
aad
or
insb
inc
and
jp
jecxz
not
push
imull
adc
or
inc
inc
mov
pop
dec
jno
jmp
push
push
mov
jno
jmp
xchg
loopne
sub
test
je
sub
add
pop
push
cmp
add
mov
aam
xor
arpl
ds
sub
fcoms
imul
pop
dec
stos
jno
adc
mov
adc
pop
addl
test
or
in
aaa
sar
cmpb
inc
and
in
xor
push
sbb
mov
mov
push
adc
lret
jmp
add
pop
and
inc
cmp
stc
inc
mov
cmp
push
dec
les
pusha
outsl
inc
cmp
daa
xor
outsl
xor
inc
push
dec
incl
mov
sti
leave
and
sub
add
fstpl
cmp
sbb
dec
scas
cs
imul
out
testl
jl
dec
mov
xchg
push
mov
sbb
jno
mov
or
lock
fistpl
and
ds
scas
sub
add
sub
sahf
aad
and
adc
mov
lods
clc
lds
das
inc
popf
xor
pusha
cmp
mov
sub
jge
sbb
prefetch
cltd
inc
and
cmpsb
ja
lock
jbe
mov
push
int
inc
or
repnz
decl
lret
xlat
push
cli
mov
xor
xor
cmc
pop
lret
test
and
jp
nop
push
add
movsl
sbb
arpl
cmp
cmp
aas
ss
push
add
test
cmpsl
in
xor
jno
popa
mov
stos
arpl
int
sub
jbe
mov
int3
jae
mov
pusha
std
mov
push
fnstenv
repnz
sub
push
dec
xchg
and
dec
repz
mov
pop
imul
fdivrs
jnp
cltd
and
stc
sbb
and
jae
mov
pop
arpl
jl
mov
or
cltd
pop
lcall
push
filds
aas
call
mov
sti
daa
sahf
mov
movswl
in
imul
xor
sarb
inc
adc
shlb
xchg
imul
sbb
sarb
lock
std
and
addb
and
enter
pop
int
js
movsb
dec
ss
cmpsl
xor
xchg
arpl
imul
shr
sbb
stc
xor
jnp
mov
out
fst
push
pop
jnp
popa
in
jne
mov
jno
push
in
fisttpll
dec
jns
xchg
mov
pop
mov
mov
dec
arpl
pop
jg
cmp
dec
mov
mov
or
jp
popf
jmp
jbe
in
xchg
jg
sbb
lds
xchg
xchg
les
sahf
push
or
int3
das
jmp
dec
inc
jb
push
mov
pushf
je
push
outsl
xchg
lret
pop
mov
testb
test
jecxz
shr
lcall
cmpsb
xor
mov
xlat
adc
adc
fldenv
mov
pushf
nop
test
shrb
add
rorl
outsb
sarb
pop
cli
push
push
lret
loopne
imul
add
mov
inc
dec
sahf
or
ss
jns
out
push
sbb
adc
push
sbb
clc
cmp
add
and
fwait
mov
mov
mov
xchg
aaa
xchg
loop
adc
or
das
jecxz
sarl
in
outsb
pop
or
sbb
push
dec
pop
pusha
mov
jb
shlb
jmp
cmp
add
loop
sub
out
sbbb
in
xor
jp
mov
jbe
ljmp
mov
cli
adc
dec
mov
call
sbb
cwtl
in
dec
lock
movsb
les
call
or
jmp
iret
les
adc
je
in
cmc
cmp
lds
sbb
rol
jno
mov
repz
adcb
je
jbe
inc
leave
cmp
movsl
aad
dec
cmpl
jg
mov
inc
or
xchg
out
push
rcrb
mov
dec
fiadds
mov
add
sub
in
sbb
adc
in
rcr
mov
lea
adc
adc
data16
inc
adc
or
insl
out
cli
pop
push
pop
fcmovne
lods
adc
cmp
push
mov
push
fmuls
pop
loopne
outsl
pop
lret
test
jno
mov
cmp
popa
adc
icebp
and
leave
rcl
in
sbb
inc
pop
mov
add
lahf
jo
pop
push
in
mov
xor
xchg
jnp
pop
push
xor
cmpsb
jmp
push
pop
mov
daa
lods
push
mov
inc
data16
hlt
adcl
std
cmp
cwtl
in
rcrb
mov
add
mov
iret
stos
mov
mov
push
dec
and
inc
push
lret
jmp
fsub
mov
enter
pop
stc
inc
cltd
cmc
mov
in
ret
dec
ljmp
imul
sub
and
movsb
xchg
sbb
mov
cmp
jmp
pop
xor
xor
rorb
pushl
lcall
popa
psubusw
sbb
rcrb
fdivrs
sbbb
pop
data16
leave
imul
mov
inc
je
add
test
pop
addr16
popa
cld
cli
add
or
mov
sbb
pop
in
test
test
jmp
scas
lret
lahf
iret
jmp
into
mov
js
fprem
aas
jno
ljmp
jno
cltd
aam
mov
cmp
roll
pop
pop
loopne
ret
sub
add
jp
pop
in
jge
push
mov
mov
xor
pop
and
cmp
mov
adc
sarb
adc
mov
aas
pop
push
cmp
dec
mov
mov
jno
gs
iret
jnp
in
sub
cmp
out
enter
ljmp
lret
adcb
jge
or
xchg
sub
push
pop
xchg
mov
and
mov
mov
mov
and
mov
pop
xchg
and
pop
popf
or
jl
fistl
inc
ljmp
and
sbb
push
sub
sbb
sbb
pop
sbb
inc
out
out
mov
movsl
ffreep
sbb
and
shlb
mov
outsl
xchg
enter
loope
std
push
xchg
js
mov
mov
popa
push
leave
mov
pop
xchg
test
stos
fnstcw
mov
testb
mov
sub
and
fdivrl
arpl
lahf
ss
xchg
add
imul
adc
push
jne
lods
sub
push
jp
insl
jb
cmp
sbb
jmp
dec
loopne
push
gs
inc
jbe
push
xlat
sbb
test
mov
mov
icebp
or
xchg
je
imul
push
dec
das
sbb
dec
sub
xchg
stos
jl
push
in
cld
add
imul
ss
mov
xor
dec
xor
xlat
sbb
popa
xchg
sub
pop
mov
imul
dec
jnp
pop
pop
sbb
test
daa
jecxz
mov
jge
jae
aam
adcl
out
xchg
adc
fstpt
pop
popa
in
jge
test
add
stc
ljmp
cli
inc
sbb
nop
mov
sbb
inc
pop
data16
sub
pop
mov
cld
leave
xchg
pop
mov
xor
mov
jecxz
jns
xor
roll
sti
fdivrl
mov
out
pop
je
aaa
inc
jge
xor
adc
cmp
add
es
jl
sahf
out
mov
lods
outsb
pop
lods
add
or
dec
add
and
pop
mov
xchg
push
jl
mov
fisttpll
aaa
jge
je
imul
andl
loope
jo
fidivrs
stos
push
outsl
aas
lret
push
and
sub
xchg
lcall
sahf
sub
test
ret
mov
flds
aas
fadd
jl
push
int3
pop
sbb
lea
lcall
ret
add
mov
in
cmp
movsl
cmp
incl
fs
jo
cmp
filds
lcall
insl
cmc
xlat
cmc
cmp
daa
jnp
sbb
push
popf
xorl
inc
xorb
aas
xchg
jl
push
ja
mov
push
jecxz
gs
push
aam
cmp
mov
sbb
mov
push
or
rcl
xchg
cmc
add
ret
insb
push
lret
pushf
sub
mov
or
loop
lret
icebp
dec
jb
add
adc
pop
shll
jbe
mov
int
mov
pop
jp
or
aam
out
mov
xchg
push
andl
push
mov
push
stc
test
sub
rcl
aad
or
mov
mov
pop
adc
lret
xchg
clc
mov
loop
stos
rcrb
scas
fwait
dec
sbb
sarb
dec
faddp
movl
jmp
fs
je
int3
test
sbb
mov
arpl
das
mov
sahf
xchg
imul
clc
shll
imul
jle
lock
sub
mov
notb
shrl
mov
sub
aas
jl
jo
lds
addr16
cmp
addb
pop
popf
enter
sub
popa
push
mov
ret
shll
and
and
or
lock
movsl
jo
sbbl
repnz
push
mov
sub
movsb
imull
rolb
inc
inc
inc
add
or
fadds
mov
sti
pop
mov
xchg
repnz
add
into
pop
pop
push
xchg
test
mov
add
push
fcoml
icebp
loop
cmp
outsb
mov
jge
jb
sbb
jle
lret
push
stos
xorb
popa
and
dec
shll
icebp
mov
cmp
xor
xor
sbbb
call
pop
cmp
imul
add
mov
add
or
and
bound
mov
pop
lahf
out
lcall
push
int3
lods
lret
sbb
nop
nop
out
cltd
es
sbb
xchg
push
lret
stc
mov
int3
sbb
inc
lret
fistpl
imul
or
xor
lods
xchg
mov
mov
test
ss
and
cld
stos
xor
inc
in
dec
sbb
inc
adcb
lret
aaa
pop
icebp
arpl
cli
or
cmp
mull
mov
loope
sbb
push
push
lcall
mov
stc
adc
dec
sbb
xor
out
jg
jge
mov
dec
inc
faddl
bound
add
stos
push
or
mov
sbb
jmp
js
jo
pop
xchg
je
inc
jo
aam
jp
in
nopl
in
aad
loope
arpl
mov
mov
add
mov
leave
xchg
sub
insb
jns
inc
sub
mov
mov
mov
dec
jge
pop
xor
stc
cmp
pop
push
stos
dec
daa
data16
jmp
daa
xchg
fwait
movsb
pushf
mov
jmp
add
add
cmp
lcall
sahf
loope
ss
loop
mov
push
xchg
xor
cmp
adc
push
mov
addr16
mov
sub
xchg
push
jge
add
adc
xor
rcl
loop
call
sbb
cltd
jmp
mov
or
dec
lea
outsb
fldenv
sbb
push
movsb
js
imul
scas
filds
hlt
xchg
leave
cmp
jecxz
adc
push
push
ret
cwtl
ds
inc
jp
push
add
dec
sbb
fnstenv
fwait
loope
push
fiadds
je
shrb
aad
or
lret
mov
mov
addb
push
je
subl
lods
jnp
std
test
cmp
into
dec
cmp
imul
in
jb
mov
sbb
aaa
jb
aad
jnp
push
add
inc
out
push
test
or
repnz
jo
pop
aam
inc
adc
xchg
cmp
ret
int
mov
dec
sahf
fs
xor
ja
pusha
mov
and
mov
leave
cld
pop
dec
xchg
and
xchg
mov
insl
enter
mov
cmc
cmp
and
jne
fidivl
movd
ds
inc
in
push
popa
mov
lret
repz
jg
shll
jne
test
add
outsl
rorb
mov
std
sahf
and
xchg
jbe
jmp
add
and
repz
xchg
movsl
add
and
adc
mov
and
icebp
sahf
ljmp
sbbl
add
jnp
xchg
popa
lea
fdivl
dec
jne
push
jne
lret
popl
mov
xchg
cmpsb
shll
push
fldcw
aam
popf
fcmovbe
cmp
pop
imul
int3
cli
inc
xchg
fisttpl
popf
mov
and
test
mov
roll
jg
cmc
add
lret
je
xor
jnp
add
push
ds
repz
test
xchg
in
subb
imul
sub
push
aad
sub
int
stc
outsl
outsl
pusha
sub
push
sbb
sub
or
pop
dec
jnp
int
out
or
mov
in
inc
dec
repz
das
lock
repnz
in
pop
enter
adc
repz
in
push
test
adc
mov
fs
clc
jno
jmp
lds
inc
test
add
adc
popa
cld
aas
rcrb
jle
mov
fisttpll
push
testb
shl
cmpsl
stos
arpl
repz
sarl
cwtl
pop
mov
mov
or
mov
rcl
sub
push
aas
fisttps
mov
inc
int
or
mov
xchg
lods
or
shlb
and
and
mov
mov
gs
mov
sbb
pop
scas
lret
adc
adc
xchg
xor
push
stos
add
cmpsl
and
out
aad
lahf
test
cmp
dec
lret
gs
xchg
out
cld
aas
sbb
xchg
lock
pop
jnp
fstpl
pop
shrl
ret
jle
imul
add
mov
loopne
lea
rorb
adc
jno
aam
imul
inc
pop
xor
sahf
or
insb
xor
cmc
sub
divl
pop
add
add
dec
les
sbb
cmp
cmp
cmpsb
sti
push
pusha
mov
inc
pop
sub
xor
jl
repnz
ffreep
pop
and
push
mov
xor
gs
inc
inc
mul
arpl
test
scas
icebp
stos
lea
sub
add
lahf
cmpsb
add
dec
pop
addr16
sti
inc
dec
movsb
pop
daa
mov
or
jmp
dec
push
lds
loop
lock
add
stos
subl
cmp
adc
bound
and
mov
fldl
cmp
es
imul
sub
rorl
sbb
scas
mov
dec
clc
out
out
push
xchg
fcom
or
adc
fwait
cmp
and
repz
sti
fwait
repz
int3
sub
popa
xlat
inc
push
jle
sbb
xor
pop
std
xchg
arpl
rcrb
lahf
rolb
jmp
xchg
push
iret
mov
mov
int
or
sti
outsl
pop
leave
mov
push
roll
push
mov
xchg
int
test
cwtl
pop
ss
xchg
xchg
and
pop
shll
mov
push
mov
push
or
cmc
xchg
mov
mov
cmpb
pop
int
bound
cmc
cmp
or
xor
and
push
test
or
sbb
adc
xor
xor
xchg
imul
out
testb
push
stos
mov
shr
aas
pop
cmp
scas
xor
add
pop
and
push
mov
hlt
daa
sub
push
xor
cmc
cmp
iret
add
imul
ss
push
mov
rorb
lock
rcrb
fwait
xor
cwtl
addr16
ret
sbb
mov
jl
mov
cli
rorl
in
xchg
imul
inc
mov
add
mov
mov
add
mov
xlat
cmp
pop
sbb
or
cmp
mov
add
dec
dec
xchg
inc
or
jb
std
aas
gs
or
dec
mov
mov
mov
out
or
and
sbb
imul
les
push
cmpsb
push
jmp
outsb
sub
aam
shrb
pop
sub
or
arpl
ss
pop
cmpsl
mov
rorl
scas
nop
js
enter
jmp
daa
add
sbb
pop
in
cmpsb
adc
sbb
push
pushf
test
xor
add
add
mov
js
mov
and
out
roll
jp
mov
nop
in
test
add
mov
mov
data16
iret
shl
xor
mov
stos
jmp
js
dec
add
repnz
aas
inc
lock
cltd
dec
inc
xchg
call
ret
push
mov
outsl
adc
pusha
sub
outsb
pop
ds
sbb
mov
daa
jbe
leave
jno
testl
ss
sbb
mov
ret
push
pop
sub
mov
xchg
aam
out
cmp
mov
dec
sub
sti
mov
mov
shrl
inc
and
or
jae
xor
sbb
cli
jl
and
xorb
xchg
mov
mov
xorl
mov
push
xchg
ss
out
das
mov
mov
sbb
xor
js
call
xor
mov
aam
fcompl
adcl
sub
movsb
in
jg
subl
cwtl
sub
sub
pop
lret
pop
xchg
fidivs
rcll
mov
adc
imul
jg
ret
push
mov
ss
push
mov
sbb
push
es
div
add
dec
mov
mov
pop
push
ljmp
sbb
cltd
xor
dec
das
mov
add
es
ret
mov
pop
aaa
cwtl
mov
pop
sub
push
shll
push
cmp
insl
mov
sub
sti
push
sub
push
sub
icebp
mov
add
stos
clc
mov
pop
sbb
pop
mov
stos
xchg
xor
mov
xchg
out
xchg
pop
push
mov
and
push
ret
pop
push
les
cmc
push
sbb
xor
sub
aad
mov
add
shll
push
dec
jecxz
dec
sub
int3
icebp
fstpl
mov
push
adc
jle
test
pop
cld
scas
enter
hlt
icebp
dec
mov
jbe
inc
mov
push
sbb
loopne
test
sbb
out
xchg
push
lds
fsubrs
movsl
mov
ja
lret
mov
sbb
inc
adc
jmp
push
push
adc
push
loop
stos
sbb
push
daa
xor
mov
mov
aad
push
and
mov
nop
outsl
xchg
xchg
bound
push
rclb
and
ds
xor
jmp
or
out
aam
cs
test
mov
add
push
mov
aad
adc
insb
in
add
inc
decl
insb
push
adc
pop
cmpsb
out
call
and
cmp
or
stos
jge
aam
sbb
pop
push
pop
inc
push
lret
dec
cwtl
stc
cwtl
pop
xchg
movsb
mov
into
mov
add
loopne
fcmove
je
mov
movb
mov
lods
aad
popf
push
pop
inc
vpminsw
add
sbb
in
xor
sbb
int3
adc
mov
pushf
ret
dec
mov
rcll
out
fcmovu
pushw
out
shlb
dec
adc
xor
mov
sti
jl
jo
push
into
inc
inc
or
pop
xchg
xor
mov
jo
in
mov
call
outsl
and
push
daa
ret
jecxz
sahf
test
lcall
scas
mov
cmpsl
sbb
jbe
shrb
sbb
pop
testl
inc
and
sub
inc
repz
sub
loope
hlt
loop
test
add
cli
repz
cwtl
scas
in
mov
push
sub
mov
pop
les
inc
scas
sahf
dec
push
and
lock
fdivs
lcall
or
insl
pop
rcll
test
lret
mov
or
xchg
ret
test
stos
aad
loop
dec
xor
lods
jle
xor
ret
call
mov
arpl
jl
sbb
jg
cmp
faddp
in
mov
add
sbb
mov
or
mov
shlb
mov
mov
inc
aad
addl
mov
mov
add
das
js
xchg
adc
ds
out
in
pushf
jne
or
movsb
add
mov
fs
jo
icebp
mov
aad
fisttps
xor
call
mov
mov
pop
lret
testb
movsl
cmc
clc
inc
insb
dec
lahf
clc
xor
in
sarb
fnstsw
loope
clc
ret
lea
mov
add
add
inc
pop
xchg
fstpt
xchg
add
mov
fnstsw
nop
xor
sbbl
aaa
and
mov
lods
lcall
dec
pop
mov
mov
inc
in
push
stc
fmulp
addr16
and
outsb
jmp
sub
and
dec
mov
mov
ficompl
stc
sahf
jmp
mov
fstps
inc
aam
mov
mov
arpl
xlat
enter
xchg
mov
add
outsl
and
rorl
cwtl
test
test
or
shr
sub
mov
adc
stos
xor
cmp
xor
loop
adc
jg
cmp
cmpsb
or
and
xchg
dec
mov
sub
out
push
and
cmpsl
jecxz
repz
xor
jge
inc
imul
scas
push
imul
or
pop
ds
js
js
hlt
mov
jge
cmpsl
xchg
stos
mov
orb
xlat
push
xchg
xchg
loopne
xchg
mov
pop
pop
inc
sub
mov
loopne
js
je
jb
xchg
cld
jecxz
add
sahf
sbb
and
jecxz
sbb
push
push
sub
int3
jge
std
dec
clc
cld
jno
sub
jg
xchg
jg
test
mov
cwtl
inc
mov
mov
or
aam
inc
in
push
sub
mov
daa
mov
jne
mov
cmp
inc
push
fwait
sbb
mov
mov
mov
fwait
insb
lahf
jecxz
cli
adc
inc
jmp
push
sbb
xchg
popf
loop
out
jecxz
cmpsl
mov
sbb
jbe
call
inc
push
stos
dec
mov
pop
test
outsb
fbstp
jp
jp
xchg
mov
imul
scas
aad
push
cwtl
pop
insl
in
lahf
inc
lahf
sti
mov
lret
sbb
ja
dec
and
pop
add
sub
inc
xor
test
fs
out
mov
js
jb
fs
andl
loop
imul
pop
adc
adc
dec
sar
xchg
jl
mov
sbb
push
push
jnp
roll
test
frstor
ret
fdivrs
xchg
in
sub
lgs
push
arpl
mov
add
fs
test
scas
insb
ljmp
mov
xchg
das
inc
repnz
pop
xchg
clc
dec
sub
push
into
inc
jno
inc
push
iret
adc
jns
repz
inc
std
fildll
repnz
popa
scas
mov
aam
pop
cmp
jnp
cmp
out
add
ds
es
xor
pop
sbb
pop
cld
dec
arpl
pop
jmp
xchg
aas
andb
and
add
xchg
fimull
popf
xchg
rcrl
int3
stos
push
aas
outsb
cmp
arpl
jnp
cmpsl
cmpsb
jnp
dec
xchg
fdivrs
fwait
pop
push
insb
dec
cmp
pop
jae
clc
les
xchg
shr
mov
mov
push
inc
lret
xchg
mov
mov
xor
ja
fiadds
not
fwait
inc
xchg
mov
mov
sbb
push
loopne
les
adc
adc
mov
adc
cs
lock
jb
mov
mov
add
mov
fidivrs
fildll
in
mov
pop
mov
cmp
and
or
imul
pop
pop
faddl
mov
jge
adc
lock
sbb
andl
das
subb
push
pushf
sub
mov
lcall
fmulp
lret
lds
push
lea
dec
sub
jmp
out
das
jne
xchg
push
sbb
std
popa
pop
ret
roll
mov
or
mov
mov
xchg
mov
fsubs
movsl
outsl
mov
insb
popf
insl
test
adc
dec
xlat
in
or
adc
fidivl
andb
sub
push
les
call
add
popf
sbb
xchg
inc
mov
push
fistpl
popf
add
jmp
xchg
sti
notb
arpl
imul
in
aam
sarl
lahf
jnp
inc
scas
push
dec
dec
jo
js
ja
push
mov
or
stc
xor
sub
movsb
fldenv
cmp
in
scas
outsl
stc
jp
push
push
pusha
jg
movsl
repz
and
aam
mov
sbb
fs
pop
xchg
xchg
mov
xor
sarb
and
popa
xchg
bound
std
xor
mov
pop
aad
ljmp
push
iret
mov
cmpsb
xor
xchg
pop
sahf
sbbl
sbb
mov
je
xchg
sub
pop
out
or
xor
push
cmp
push
mov
mov
mov
loop
xor
jle
pushf
cmp
pop
pop
fsubs
stc
jl
cmp
shll
xchg
lcall
add
ror
cmp
lods
sbb
mov
add
mov
arpl
je
lock
aad
in
sub
loopne
cld
jne
pusha
sub
stos
jo
inc
ss
mov
insl
test
inc
and
mov
push
pop
or
out
fimuls
sub
push
pop
jo
add
cmpsl
sti
dec
dec
xor
or
mov
add
push
clc
js
repnz
jae
iret
addr16
fsub
pop
mov
jae
bound
imul
or
cwtl
dec
stc
xlat
push
xchg
repnz
lds
cmp
xor
bound
test
adc
daa
inc
mov
xlat
xlat
cld
arpl
or
pop
fstpl
and
cmc
cli
movsb
test
fmuls
dec
in
mov
mov
cld
dec
push
add
mov
aad
insb
lea
or
arpl
into
inc
push
pop
sub
jmp
add
lods
push
mov
xchg
ss
stc
outsb
xchg
int
mov
inc
cmp
dec
sub
jnp
dec
das
sub
call
dec
push
mov
push
mov
xchg
dec
data16
nop
mov
dec
repz
jne
pusha
movsl
mov
or
sub
xor
sub
es
and
pop
mov
fwait
inc
aas
mov
int3
fwait
xor
ljmp
push
mov
or
loope
dec
data16
bound
cmc
pop
xchg
mov
inc
fnsave
cwtl
jp
fldcw
pop
add
xlat
push
les
xchg
inc
lods
pushf
cwtl
and
add
xchg
in
or
mov
push
and
aaa
movnti
ret
jmp
push
inc
ret
fisubl
lock
les
dec
orl
lahf
out
mov
std
es
pushf
mov
add
dec
jle
or
pusha
lcall
jo
leave
adc
pop
es
push
dec
push
mov
js
jb
adc
and
xor
divb
xchg
orl
hlt
dec
push
lcall
nop
ret
idivb
lds
or
add
xor
arpl
sarl
out
les
jnp
fwait
cltd
dec
fistl
add
and
scas
fdivrs
test
xchg
pusha
int
imul
out
xor
scas
das
mov
imulb
mov
push
loop
pop
lea
cld
or
jmp
out
int
push
pop
xchg
mov
repnz
movsl
xor
into
or
cs
jne
xchg
jecxz
mov
add
cltd
mov
cmp
into
fs
sub
inc
icebp
lahf
shlb
mov
out
inc
or
cmp
nop
cmp
mov
iret
push
enter
sbb
sbb
mov
mulb
rorl
mov
arpl
call
mov
idiv
sbb
dec
inc
jecxz
icebp
div
jnp
mov
cld
xor
fidivs
adc
xchg
jb
inc
addr16
lahf
and
cwtl
jecxz
xor
add
insl
cmp
bound
jae
adc
mov
cltd
mov
ficomps
push
dec
outsl
sub
sub
inc
xchg
xchg
add
xor
gs
pop
inc
push
movsb
emms
xchg
out
aas
sarl
out
inc
dec
es
daa
add
icebp
add
lahf
and
fldcw
hlt
jecxz
pop
xchg
ds
inc
insb
mov
sub
lock
cmp
add
xchg
call
jg
dec
jp
push
mov
testl
stos
ljmp
inc
jbe
push
and
mov
adc
dec
push
cmp
cmp
inc
push
cli
xor
dec
mov
adc
mov
jns
cli
adc
or
sbb
sti
cltd
or
dec
pop
sbb
push
xchg
xchg
add
mov
ja
pop
int
shll
mov
mov
pop
jo
std
jb
movsb
daa
and
or
cmp
imul
loopne
lock
call
jb
lret
add
scas
ret
mov
out
sbb
xchg
inc
jl
and
xchg
mov
jmp
shl
jbe
jle
ljmp
sub
std
cmp
enter
rcrl
pop
add
xchg
out
adc
inc
dec
mov
push
imul
in
push
outsb
cmpsb
xchg
inc
or
fucom
mov
loop
cs
fs
sahf
mov
mov
fisubrs
notb
stos
mov
or
jb
negl
add
insl
or
cwtl
jl
sub
imul
pop
xchg
jae
push
jns
mov
in
cmp
jbe
mov
in
test
cmpb
pop
mov
rorb
and
sub
dec
enter
outsl
out
or
out
fs
rorb
nop
xor
pushf
cmp
nop
dec
cmp
jb
xor
or
dec
andl
stos
push
mov
mov
lahf
in
push
add
jae
mov
push
push
or
addr16
data16
ljmp
cmpsb
and
pop
mov
das
push
xor
lret
xor
xchg
add
jbe
enter
push
mov
mov
dec
jns
jno
add
xchg
cmc
fcmovnbe
sbb
jbe
scas
add
sub
cwtl
into
inc
jbe
pop
andl
pop
les
and
sbb
or
movsl
shl
add
xchg
adc
ljmp
xor
rcl
add
adc
dec
sub
or
jno
mov
shlb
cmp
pop
addr16
jno
adc
inc
test
mov
aas
sbbb
add
mov
aas
add
pop
aad
cwtl
xchg
push
pop
pop
or
cmpsb
mov
mov
mov
enter
scas
sub
or
iret
inc
aaa
lock
js
xchg
insb
xor
aad
out
fisubs
test
push
mov
js
jecxz
jecxz
rorl
and
lea
out
fcomip
jecxz
xor
les
xchg
insb
pop
ds
and
lahf
pop
push
mov
rcrb
mov
ljmp
out
jp
test
xor
mov
sti
dec
std
add
add
mov
nop
pushf
clc
xchg
outsl
xor
cwtl
inc
and
and
adcb
jb
add
dec
jne
adc
and
mov
jo
mov
jno
jg
jnp
std
push
or
fldl
pop
sub
pop
or
mov
pushf
movsl
gs
aad
sahf
insb
sub
jl
js
add
sbb
sbb
daa
mov
mov
lret
insl
jle
and
enter
pushf
test
jp
mov
pop
pop
inc
xor
push
xchg
scas
in
and
xchg
lds
js
in
inc
repz
icebp
adc
arpl
test
int3
popa
push
pop
cmpsl
xchg
add
js
out
xor
add
cmpsb
ret
ss
loope
popa
into
mov
scas
add
fists
push
jne
int3
rorl
and
push
gs
pop
pop
nop
in
lcall
push
sahf
cmpsl
mov
dec
inc
xchg
jmp
popf
mov
pop
loopne
jecxz
mov
dec
pop
negl
loop
pop
xlat
mov
icebp
enter
movsb
pop
and
in
mov
dec
rolb
icebp
mov
iret
movsl
inc
inc
lods
push
push
jle
jb
fldt
loopne
ret
cmp
test
mov
ja
xchg
sub
jmp
fisttps
shl
sbb
mov
mov
into
insl
cmpsb
stos
sarl
xchg
hlt
xchg
data16
cmpsl
push
add
sbb
cmp
fisttps
stc
cmp
dec
push
icebp
lahf
test
shrb
xchg
stc
mov
add
cmp
cmp
std
loop
sbb
out
int3
enter
jg
adc
stos
ret
out
cmp
mov
hlt
xchg
clc
adc
ds
or
test
jbe
jg
mov
dec
hlt
pop
cmp
adc
mov
cmc
vpsubusw
lock
sbb
test
std
jl
test
mov
dec
push
mov
lds
inc
cmp
std
add
stos
inc
in
sbb
mov
adc
cmp
outsb
fcomps
xor
mov
xchg
mov
rorb
xchg
adc
mov
ljmp
in
xor
xor
xchg
rorl
or
arpl
xlat
in
mov
cmp
add
dec
xchg
dec
iret
js,pn
cmp
lods
xchg
sbb
cmc
pop
stos
xchg
cmpsl
push
xchg
jae
mov
int
jnp
loope
lods
sub
sbb
xchg
inc
ret
push
mov
inc
jp
mov
cmpb
xchg
mov
das
mov
dec
faddl
sub
lods
adc
add
cltd
or
pop
aad
push
add
cmp
lcall
cwtl
sub
push
cmpsb
aam
mov
inc
and
jns
jle
lods
cmp
jmp
mov
cmp
cwtl
insl
mov
notl
js
inc
push
pusha
lcall
pushf
int3
jno
in
or
push
test
lcall
mov
test
push
into
jg
fstpl
or
insl
out
lret
jge
cmp
fucomi
ret
and
pop
daa
sub
mov
cs
sbb
daa
push
mov
inc
testl
or
inc
popa
imul
sbb
cmp
dec
add
sub
fistpl
jmp
push
mov
fs
jg
mov
xchg
and
xlat
inc
mov
mov
movsl
imul
jmp
shll
pop
das
xlat
adc
mov
lcall
cmpsl
fcmovne
mov
push
sbb
stos
add
and
mov
sahf
xchg
sti
mov
mov
pop
int
fs
pop
int3
jle
and
adc
ret
inc
stos
adc
jno
push
fiadds
mov
and
fidivrs
lock
leave
push
js
add
mov
and
xor
jge
lock
dec
mov
jo
orl
aas
jge
jb
pop
jmp
mov
inc
bound
and
jb
jle
pop
int3
or
xor
imul
ss
movsb
lea
lods
push
pop
xor
sub
mov
dec
mov
pop
jge
sbb
mov
ret
mov
sarb
test
lret
xor
jno
out
sbb
jno
xchg
sbb
ret
pop
in
mov
int
sub
icebp
and
pop
inc
push
mov
loop
mov
test
dec
pop
rorl
dec
ret
loope
cmp
pop
into
out
or
or
mov
mov
movsl
push
inc
push
scas
mov
cmp
mov
int
shll
jns
lods
leave
loop
and
in
add
popa
test
iret
xchg
jge
xchg
jle
out
jbe
mov
fyl2xp1
inc
adc
movsl
xchg
out
inc
iret
aad
fisttpl
adc
test
rcrb
mov
mov
call
test
xor
mov
sbb
loope
fsts
cmpsl
and
ror
mov
scas
xchg
and
xchg
jae
cmp
out
inc
inc
mov
vmulps
cmc
mov
sub
andl
jecxz
pop
lea
das
les
ds
popf
leave
mov
add
stc
add
mov
popf
insl
push
scas
les
xor
fsts
jl
jb
push
jp
mov
lock
cmp
xchg
adc
inc
xchg
jnp
and
xor
insl
adc
leave
insl
cs
mov
add
rcr
sbb
adc
es
loope
push
inc
fmuls
cmpsl
or
and
sub
stos
push
pusha
js
ss
lea
jge
aaa
out
jns
icebp
xchg
push
xchg
jno
xor
and
repz
ja
test
jl
into
mov
out
xchg
outsb
je
insl
push
cmp
in
dec
loop
and
iret
aam
inc
pop
fnstcw
mov
adc
cwtl
mov
inc
sbb
dec
aaa
inc
int
pop
add
xor
xorb
pop
scas
aas
inc
dec
mov
into
or
cmpsb
cmpsb
mov
or
stos
xor
cld
jg
inc
in
lods
mov
jge
cmpsl
jo
mov
sub
sub
das
ja
lds
out
sahf
cwtl
add
stos
add
push
xchg
fisubs
js
addb
arpl
push
cmc
inc
test
sbb
test
fcoms
inc
inc
pusha
stos
ljmp
mov
xchg
or
mov
mov
jbe
mov
je
adc
and
or
out
neg
dec
push
mov
mov
adc
xor
dec
sub
mov
dec
jnp
add
in
inc
cmpl
inc
push
aaa
sarl
imul
or
sti
out
fwait
rep
aaa
negl
jae
adc
sub
call
mov
shrl
lcall
mov
dec
insb
push
pushf
pop
pop
dec
sub
lret
cltd
cmp
adc
jmp
ds
push
inc
aaa
pop
scas
cmp
mov
inc
outsl
sbb
lret
pushf
mov
sbb
jg
and
or
fwait
lahf
pop
aam
bound
mov
or
iret
lds
pop
sarl
cmp
shlb
icebp
cmove
outsl
sub
cmp
adc
rcrl
sahf
cmpsl
push
mov
test
mov
in
ljmp
mov
es
add
pop
imul
and
repz
xor
dec
loope
int3
sub
push
push
mov
out
test
stos
scas
mov
fldenv
xor
or
jmp
call
xchg
and
jle
in
add
int3
popf
leave
jecxz
pop
mov
xchg
xorl
push
pop
dec
roll
insl
xchg
push
sbb
insl
divl
jle
jg
loopne
lods
sub
jae
adc
sub
loopne
out
jmp
hlt
ret
jl
out
or
mov
insb
insb
dec
and
sbb
clc
cltd
mov
sub
mov
sysexit
adcl
mov
int3
jb
dec
fs
xchg
in
flds
ret
pop
xchg
test
pop
xor
cld
cwtl
int
lcall
or
adc
add
dec
test
xchg
std
gs
sbb
loopne
jne
repz
cmpsb
sub
out
outsb
lock
insl
negb
cmp
je
gs
aas
decb
les
cmp
push
or
pop
sbb
inc
jle
xor
mov
push
out
and
mov
mov
dec
fistpll
lret
add
sub
inc
sub
jo
repz
shl
push
pop
mov
sbb
push
call
fdivrl
mov
ret
inc
ljmp
out
gs
mov
dec
jns
xlat
sbb
and
and
dec
push
sahf
jbe
xor
sti
movsb
xlat
outsl
ds
xor
jge
rorl
jno
test
lods
mov
adc
insl
mov
call
stc
sbb
data16
das
lret
and
popa
pop
and
rcll
lods
ss
mov
movsb
cli
cmpsb
add
cmc
dec
cmp
test
mov
popf
lock
in
mov
into
dec
mov
lods
adc
outsb
sbb
iret
mov
test
sbb
insl
test
mov
lret
mov
adc
in
pop
pop
jecxz
dec
out
sub
push
aaa
inc
stc
ficomps
inc
out
pusha
mov
test
je
push
out
xor
mov
mov
mov
test
mov
lock
xchg
inc
push
inc
clc
push
inc
lea
les
ret
or
stos
xor
or
inc
icebp
test
int
mov
cwtl
push
mov
mov
mov
fs
into
out
movsb
adc
ret
test
cwtl
cmp
sub
and
mov
cmp
xchg
insb
decb
mov
sub
test
jmp
jb
mov
push
ficoms
outsl
fcomps
pop
push
ljmp
cs
xlat
and
or
cmp
nop
insl
push
push
dec
add
push
mov
pop
mov
pcmpgtw
lret
insb
lcall
xchg
scas
ds
lcall
fidivrl
sbb
add
push
out
outsb
mov
int3
mov
push
or
nop
scas
insl
or
push
mov
cs
in
add
mov
add
clc
push
push
and
push
adc
push
mov
imul
mov
lret
dec
pop
lock
sub
ds
ja
xchg
sub
jl
push
std
sub
insl
add
cmp
lahf
fnstsw
cmp
lock
add
mov
mov
scas
and
xchg
mov
repnz
lods
ret
iret
aaa
sub
ret
and
mov
xchg
fs
or
push
fsubrl
inc
rorl
pop
jge
outsb
ds
stos
jne
inc
jbe
mov
xchg
clc
fistpl
repz
fisubrs
mov
shll
mov
lret
stc
pop
push
mov
push
mov
test
dec
add
pop
xchg
and
mov
xor
sbbl
cmp
and
aaa
hlt
pushf
xor
inc
pushf
roll
fnsave
dec
adc
subl
cmp
push
mov
adc
jp
xchg
adc
cld
out
lret
xchg
sub
sub
sub
push
push
sbb
xchg
in
ret
inc
push
jg
test
aad
fsts
popf
fwait
lods
stos
jb
cmp
cmpsl
insl
jg
add
fs
sbb
fistps
sbb
enter
ret
int
sub
insl
push
mov
ds
push
dec
jl
inc
popf
pop
pop
mov
aaa
into
jl
jecxz
shl
test
lock
pop
push
push
push
test
clc
aam
subl
pop
and
int
add
jle
leave
jmp
mov
inc
cmp
fs
and
xchg
fnsave
lods
divb
xchg
mov
push
shrb
jle
leave
mov
pop
cld
cld
pusha
jb
pushf
push
inc
sbb
sbb
xor
jmp
pop
nop
push
loop
push
or
lock
ret
inc
mov
or
jne
jne
rolb
ss
lret
out
sbb
jecxz
mov
inc
dec
inc
fnstcw
inc
mov
pop
cmp
lahf
out
pop
loope
adc
loope
repnz
xor
in
dec
icebp
scas
and
repz
jl
cmc
push
push
lret
mov
push
cmp
pushf
repnz
mull
pop
arpl
cli
inc
push
test
fldcw
fld
into
mov
adc
nop
iret
daa
xchg
push
mov
hlt
insb
mov
ret
cmp
clc
out
mov
adc
rcr
cmp
aaa
insb
scas
lods
cmp
insl
xchg
insl
lock
shr
outsb
push
mov
and
adcb
fistps
pop
sbb
out
dec
xor
ss
scas
push
ret
stos
out
ljmp
xchg
mov
adc
fs
out
fldt
mov
shl
mov
das
push
adc
and
aaa
xor
push
pop
fs
insb
std
sub
outsl
pop
adc
adc
je,pn
push
js
out
lret
rcl
ds
out
aaa
lods
fsubrp
jno
pop
mov
dec
pushf
cmpsl
subl
jo
out
add
mov
cltd
jns
sub
jp
mov
jnp
and
adc
mov
fs
dec
lods
or
xor
pop
icebp
dec
adc
add
pop
and
fisttps
pop
inc
in
test
cli
pop
sbb
stos
mov
pushf
jp
and
aad
adc
jge
sub
push
xchg
pusha
jge
sahf
rol
imul
roll
lods
cmp
mov
loop
inc
ficoms
cwtl
jnp
mov
lock
inc
cmp
and
xor
bound
addr16
dec
xor
loop
movsb
jle,pn
xor
in
mov
iret
sbb
sbb
jmp
imul
and
mov
mov
sbb
xchg
adc
xchg
movsb
into
mov
push
fimuls
dec
lahf
inc
es
and
add
rcll
mov
pop
repnz
ja
inc
adc
jb
inc
mov
cmp
lods
lret
jae
lds
std
sbb
in
jecxz
pop
pop
repnz
adc
sbb
push
adc
leave
mov
xchg
aad
sub
lea
pop
ud1
mull
loope
ja
and
clc
or
clc
push
cmp
mov
hlt
pop
imul
js
jp
fcomp
push
cmp
jl
dec
inc
push
adcl
and
sub
inc
mov
out
mov
fsts
pop
adcl
in
mov
in
pop
xor
xor
andl
imul
sub
outsl
sub
js
fsubs
lock
push
cmp
dec
mov
repnz
cmp
jb
ja
mov
or
in
adc
rclb
xor
adc
js
xchg
push
sbb
jno
xlat
and
sbb
out
aad
movsb
nop
mov
jecxz
movsl
test
and
or
test
ljmp
or
add
xor
sub
mov
push
xlat
repnz
cs
jo
dec
or
incb
or
shrl
mov
andb
hlt
xchg
pusha
ja
bound
and
and
push
inc
cmp
xor
stos
fwait
shlb
jns
jle
adc
sub
xor
and
jp
loope
push
pop
sub
push
das
imul
pop
and
adc
jmp
xor
cmpsb
cs
lahf
out
mov
mov
xor
call
popa
inc
cmpsb
adc
sbb
das
mov
movsb
jl
and
imul
and
sahf
into
mov
lds
mov
push
aaa
das
nop
sbb
mov
dec
jnp
stc
into
push
ds
imul
pop
popf
fstpt
nop
inc
fcoms
or
xchg
mov
int
lock
ljmp
dec
pusha
cmp
mov
in
pusha
outsl
and
and
sub
xor
loope
push
lret
hlt
insl
xchg
imul
add
add
sbb
push
hlt
cmp
xorl
mov
dec
mov
sahf
cmp
std
andb
lea
sub
jmp
stos
pop
push
cwtl
add
xor
or
dec
aam
nop
fildll
cmp
mov
insl
pop
testl
iret
adc
leave
cmp
fldcw
inc
pop
add
or
and
scas
fcmovu
incb
xor
sbb
push
mov
fst
ss
xchg
add
test
cmp
lds
loopne
dec
sbb
xor
mov
test
outsl
mov
ljmp
mov
inc
gs
xlat
mov
enter
xorb
cmpsl
frstor
dec
adc
lods
fld
lds
cld
add
fidivrs
fwait
jp
xchg
fstps
push
cwtl
repnz
in
xchg
dec
scas
insb
in
iret
faddl
mov
cmp
lret
pop
andb
add
or
mov
mov
cld
pushf
sti
sahf
add
dec
cmp
lahf
sub
sbb
test
xchg
xchg
inc
das
cmp
ja
rolb
jp
repnz
test
jmp
inc
enter
inc
inc
jmp
or
xabort
lods
arpl
pushf
cmpb
test
daa
je
xor
jge
inc
lahf
xchg
sbb
pushf
pop
sub
mov
cmpsl
in
pop
das
xchg
xchg
jo
stos
push
fadd
mov
js
jae
jae
aas
pushf
fsts
push
sub
mov
and
dec
adc
aas
lahf
push
mov
push
lret
addl
lods
pop
sarl
insl
fimull
jo
fistl
lret
shlb
adc
test
or
xchg
xlat
push
lahf
jg
xchg
js
aaa
loope
std
out
or
sahf
xchg
jl
or
sub
mov
in
aaa
adc
pop
or
in
xor
scas
data16
out
jp
mov
add
mov
aaa
dec
mov
sbb
jno
adc
cmp
xor
pmaddwd
scas
add
sub
lahf
lock
ljmp
fucomp
imul
pop
js
cmc
in
lods
enter
dec
rcr
int3
add
scas
repz
int3
lea
icebp
testl
std
repnz
push
mov
idivl
aas
lret
mov
out
fucom
cmp
repnz
push
popa
bnd
pop
nop
leave
mov
lcall
and
jg
add
sbb
xchg
inc
je
fstl
xchg
mov
divl
aaa
xchg
addr16
loopne
adc
mov
cmpsl
sub
dec
jb
andl
scas
cmp
sar
lcall
js
pop
jle
jo
leave
push
cmpl
pushf
pop
cmc
in
icebp
xor
insb
in
xchg
push
sbb
orb
jmp
das
add
cmp
cmpsb
and
xchg
mov
inc
cmc
sbb
pop
mov
push
push
repz
dec
sub
mov
jle
mov
xchg
pop
push
lcall
movb
mov
or
icebp
dec
les
adc
push
gs
inc
sbb
add
sub
insb
dec
xchg
mov
pop
inc
or
scas
fsubrl
scas
mov
pop
in
pop
lods
cmp
fidivrl
mov
mov
xchg
out
test
in
xlat
push
pop
incl
push
inc
mov
loop
rcl
fcomp
mov
sti
out
jge
mov
popa
xchg
fcmovne
pop
frstor
shlb
arpl
in
dec
inc
pop
jge
mov
fdivs
adc
push
loop
jg
cmp
leave
cli
adc
outsb
xchg
add
out
cwtl
dec
ljmp
aad
push
ja
xor
sub
das
sub
scas
inc
fstl
push
gs
nop
mov
xchg
cmp
cmpl
loop
xchg
sbb
daa
or
mov
sub
jnp
das
push
xchg
orb
mov
cwtl
rcl
add
and
ljmp
shrl
pop
sbb
fdivrp
cmp
sbb
inc
inc
push
xchg
int
leave
movsl
mov
jmp
adcb
and
test
stos
and
jb
adc
xchg
add
or
xchg
lahf
stos
iret
sub
xchg
ret
ret
cld
stos
sbb
xor
popf
jo
in
sub
sub
push
in
adc
imul
jne
ljmp
stos
test
jp
mov
jno
insl
sub
or
popf
sub
mov
push
fcmovu
popf
cmp
sbb
je
sahf
jmp
push
jnp
sbb
sub
sti
das
mov
mov
sub
mov
pop
fs
ja
cmp
shrb
ss
jge
xor
mov
mov
cld
es
sub
add
xor
daa
adc
shlb
pusha
dec
in
pop
add
sub
xor
test
xchg
xchg
bound
pop
dec
sub
in
andl
push
pop
inc
bound
mov
adc
push
cmpsl
push
xchg
in
cmpb
cmp
sub
jle
xchg
sub
mov
test
pop
add
fidivrl
dec
in
xchg
mov
xchg
gs
aad
insb
shlb
add
and
and
fptan
push
lods
xchg
mov
in
rorb
lret
pusha
in
mov
dec
cmpsb
push
insl
push
or
ja
nop
push
cmp
mov
and
mov
jle
scas
push
stos
in
dec
pop
sbb
push
pop
xor
push
sub
jmp
adc
mov
stc
jae
pop
inc
pop
addr16
lret
mov
lods
add
mov
sahf
sub
mov
lods
pop
or
lahf
jmp
aad
push
mov
or
mov
pop
arpl
pop
test
mov
int
adc
xor
push
add
les
jmp
repnz
dec
jbe
jbe
mov
nop
push
and
imul
sub
mov
pop
xchg
scas
push
orb
dec
loopne
pop
stos
test
shlb
mov
fcomip
lea
aad
xchg
and
mov
sbb
push
xchg
in
in
xchg
imul
cmp
cmp
dec
adc
loop
pushf
and
daa
cltd
std
xor
jge
sub
aas
movsl
iret
je
loope
fst
xor
mov
jg
imul
sub
loopne
xor
lcall
aas
clc
imul
ret
mov
add
out
dec
ljmp
xor
andl
icebp
inc
pop
push
leave
clc
outsb
xorl
imul
push
inc
call
inc
iret
ret
leave
adc
loope
mov
in
cwtl
xchg
jle
and
roll
xor
jbe
mov
ss
ret
push
arpl
stc
or
add
cltd
sti
jmp
out
mov
js
dec
addr16
pop
je
push
sub
push
adc
cs
add
cmp
daa
or
xor
imul
add
sub
xor
sbb
jne
testl
push
das
pop
sub
cld
pop
pop
sub
loopne
pop
shrb
ljmp
cmp
add
ss
out
dec
movsl
call
xchg
push
shrl
adc
cltd
scas
repnz
jmp
pop
stc
test
and
xchg
jno
ja
inc
imul
adc
addl
ror
and
xchg
xor
pop
mov
addl
xorb
aaa
dec
push
pop
xor
push
jnp
or
les
lea
ljmp
mov
cmp
mov
insl
or
cmp
fwait
pop
cmp
clc
movsb
mov
test
mov
inc
fwait
dec
repz
pusha
push
rorb
into
fs
mov
mov
scas
clc
dec
mov
lods
aaa
xchg
imul
jp
call
movsl
shll
arpl
je
push
add
sub
or
add
movsb
and
mov
popf
push
mov
nop
insb
nop
push
outsl
add
mov
sti
pop
adc
jg
clc
stos
outsb
cmp
je
pop
push
sbb
pop
push
dec
int
in
fwait
divl
sti
mov
xchg
es
or
xchg
rcl
into
xlat
sbb
fwait
hlt
pop
xor
in
xchg
inc
mov
sub
cwtl
js
les
das
into
add
pop
jne
out
outsl
adc
out
mul
std
cltd
sbb
pop
sub
push
negl
xchg
xchg
inc
cs
cmpsb
inc
push
cmc
dec
outsb
test
test
scas
cmpsb
mov
sbb
push
insl
sar
jl
sar
and
mov
mov
and
push
xorl
push
leave
xchg
mov
inc
or
push
jge
dec
add
pop
mov
fwait
rorl
aaa
jns
scas
test
cmovns
jle
iret
sbb
dec
mov
pop
cmc
inc
pop
xorl
out
lods
mov
and
sbb
movsb
cmp
push
mov
ret
adc
push
dec
call
out
mov
xchg
xor
add
mov
mov
cwtl
inc
and
cmp
lods
mov
rorl
pop
fsubp
or
dec
loope
sbb
pop
test
bound
add
daa
mov
sti
test
sbb
cwtl
jo
mov
aas
xchg
leave
mov
movsb
in
inc
imul
call
push
xor
outsb
push
mov
xor
adc
das
loopne
add
or
popf
add
or
outsl
xorl
cmp
leave
fdivrs
repnz
repnz
jnp
nop
jne
insl
sub
mov
aam
loope
push
cmpsl
inc
test
arpl
ljmp
sbb
dec
xor
repnz
or
addr16
lret
dec
mov
or
mov
xchg
out
push
xchg
push
inc
mov
adc
cltd
and
pop
push
mov
mov
pop
fmuls
dec
mov
adcl
lods
bound
dec
cmp
mov
add
push
mov
inc
xorb
in
or
enter
mov
jbe
sbb
lea
bound
scas
and
scas
daa
stc
movsl
jle
cmpsb
jb
pop
ljmp
popf
sbb
xor
cltd
repz
push
js
mov
sub
or
push
jmp
adc
out
stos
cmp
bound
daa
aaa
popa
push
or
aam
gs
jne
push
out
mov
lods
mov
xor
sbbl
and
add
mov
jmp
lret
shll
out
add
aas
andb
sub
push
mov
call
leave
faddp
push
int3
dec
sbb
movsl
jbe
dec
add
add
sub
push
lret
out
bound
int3
sbb
in
scas
cmp
out
and
jge
add
xchg
push
sub
or
jecxz
jl
loope
mov
jle
mov
xlat
movsb
cmc
inc
in
xor
push
aas
and
jno
or
imul
pop
popf
lcall
jecxz
cmp
jecxz
cltd
jl
xchg
sub
adc
sbb
add
sbb
lret
mov
cmpb
std
xor
jp
mov
insb
and
xor
fiaddl
loop
jb
mov
xchg
dec
sar
and
loopne
dec
pop
fucomip
addb
sahf
add
pop
cmpsl
pusha
outsb
ret
lret
mov
mov
xor
movsb
xor
scas
jb
xchg
push
shlb
lahf
sbb
aaa
sub
cmp
dec
fwait
dec
sbb
jmp
inc
mov
pop
rcrb
xor
imul
insl
js
pop
sbb
fisubrs
xor
jmp
lret
fadds
adc
adc
xchg
add
fmul
and
aas
jecxz
cmp
inc
jnp
add
add
in
mov
push
lods
and
in
inc
cmp
mov
aad
sub
out
clc
push
cs
out
pop
xchg
sar
add
adc
adc
xlat
addr16
dec
adc
xchg
out
ja
lahf
imul
fisubl
pushf
adc
xchg
pop
adc
cmpsb
mov
call
shl
lcall
and
stos
gs
xchg
icebp
in
ds
gs
jp
fcoml
cltd
mov
fwait
push
aad
sti
outsl
aas
xor
inc
sub
faddp
add
dec
sbb
int
repz
mov
or
jnp
in
andl
jns
bound
sbb
inc
sub
pop
add
arpl
ja
jle
cmpsl
jg
jg
daa
in
bound
pop
sbb
mov
lock
or
fwait
xchg
lret
inc
popa
push
rcr
mov
fs
ret
push
adc
jb
out
dec
mov
adc
or
fmull
or
outsb
test
out
adc
sub
jno
mov
out
aaa
jg
mov
rcr
push
ds
int
std
loope
cs
push
in
inc
paddusb
sub
cwtl
jmp
stos
or
cmp
les
cmp
mov
aaa
lcall
and
in
sbb
mov
ljmp
or
mov
sbb
xlat
outsl
sbb
push
out
out
int
and
repnz
add
jns
or
xchg
sbb
sub
pusha
imul
xchg
incl
std
push
or
jnp
xor
movsb
jne
jmp
mov
xchg
adc
xlat
nop
bound
and
rorl
xor
push
out
insb
in
jo
das
std
aas
pop
rolb
cli
stos
js
push
mov
loope
dec
prefetch
xchg
xchg
cmpsl
loope
mov
or
cltd
jne
or
pop
inc
jno
jmp
out
inc
jno
push
insb
dec
cmpsl
cltd
xchg
xor
jle
pop
loop
shll
mov
rolb
xchg
std
sub
inc
fisubs
lock
or
rolb
mov
jae
jmp
ss
sbb
fldt
jmp
je
mov
imul
jne
push
dec
mov
cld
mov
mov
idivb
movsl
out
clc
jo
jmp
ret
xchg
inc
mov
in
dec
mov
lds
dec
sbb
ja
sub
std
shl
adc
lea
stos
dec
inc
je
fbld
lret
jecxz
adc
add
enter
loope
outsb
jg
rcrl
es
inc
mov
inc
adcl
pop
nop
repz
xchg
mulb
bound
into
aas
lcall
icebp
dec
xor
and
push
cwtl
dec
dec
jge
inc
jo
stos
sub
rorb
sub
sub
loop
dec
idiv
test
xor
pusha
dec
push
inc
fcompl
fimuls
enter
and
hlt
inc
in
je
adc
push
and
mov
cmp
iret
sub
icebp
push
push
cmpb
push
cmpsb
daa
sub
add
es
shlb
sub
in
cmp
outsl
fsubr
xor
aam
shlb
or
imul
adc
inc
subb
adc
jmp
pop
stos
cmpsb
mov
cs
mov
hlt
push
sub
int3
dec
or
in
ds
mov
clc
in
or
int3
pop
adc
popf
xchg
out
or
push
add
fidivl
movsl
movsb
lods
mull
pop
loopne
xchg
pop
inc
sbb
lock
ljmp
xchg
jle
and
movzwl
inc
push
adc
mov
push
popf
scas
mov
add
xchg
or
inc
mov
sub
stc
popl
xchg
inc
pop
cmp
ret
mov
shll
aas
repnz
stos
movb
inc
jle,pt
adc
mov
push
add
pusha
sub
cmp
pusha
push
imul
adc
pop
ja
ror
imul
cld
lods
jns
sbb
jnp
xchg
or
js
and
and
push
or
inc
mov
cmp
sbb
stos
stc
adc
imul
in
mov
add
fs
cmp
mov
push
stc
and
sti
dec
aam
and
test
and
test
pop
gs
inc
cmp
push
in
mov
inc
cltd
in
mov
in
shll
cwtl
daa
sbb
push
mov
es
pop
arpl
adc
test
push
cmp
jg
lret
sub
rcl
cmpsl
pop
jnp
int
lahf
sub
mov
jns
fadds
inc
mov
and
inc
movl
sahf
mov
addb
jo
or
inc
or
push
lea
jnp
jecxz
dec
cmp
mov
sub
out
andb
imul
enter
cltd
jg
mov
fsubrp
xor
mov
xchg
call
outsb
add
push
mov
or
add
loopne
movsb
dec
dec
test
negb
jne
fs
jne
mov
jmp
mov
sbb
and
icebp
iret
outsb
mov
jecxz
into
xchg
xchg
push
cs
sbb
repz
cwtl
adc
cmpsl
lds
pop
test
lret
gs
out
or
pop
mov
adc
test
arpl
dec
aad
hlt
scas
fs
pop
test
push
or
jno
push
mov
sub
dec
or
pusha
or
xlat
mov
push
dec
inc
adc
iret
xchg
mov
add
mov
pusha
fdivrl
pop
add
popa
jne
xor
into
or
les
add
aad
adc
pushl
or
sbb
cli
add
sub
jae
push
repz
pop
xor
xchg
or
std
or
xor
or
jmp
lahf
test
pop
idivl
and
push
icebp
xchg
dec
loop
lock
sbb
push
hlt
jecxz
and
mov
sahf
and
or
xchg
mov
push
add
ffreep
sbb
mov
jl
aas
outsb
jecxz
test
pop
loopne
push
sub
mov
or
adc
pop
jmp
in
push
fnstsw
dec
jmp
es
adc
jb
shll
lods
mov
pop
pop
inc
lret
cmpsb
in
mov
mov
inc
cli
gs
nop
push
jp
mov
mov
ss
jns
out
sub
and
sbb
and
sub
pop
add
adc
lock
add
sub
call
rorl
push
dec
movsl
push
test
test
lcall
push
xor
clc
cmpb
ljmp
pop
xor
push
mov
bound
aam
lcall
fnsave
lret
mul
or
stos
mov
ja
mov
testb
mov
repz
inc
jb
inc
inc
sar
les
sbb
leave
sbb
xor
iret
push
mov
xchg
lcall
arpl
ret
pop
or
nop
movsl
int3
stos
inc
cs
and
lret
mov
pop
sub
dec
hlt
dec
jo
jmp
sub
mov
ret
push
dec
or
dec
push
or
pop
in
stos
pop
lcall
jno
xchg
sbb
sub
mov
xchg
sub
call
inc
loop
in
jl
rcll
and
push
sahf
xchg
loop
jge
pop
adc
es
adc
sub
mov
clc
pop
fucomp
cs
mov
cltd
inc
adc
inc
and
mov
jecxz
scas
out
inc
or
sub
jp
ror
or
jp
adc
loop
pop
push
out
dec
out
mov
insl
movsl
adc
fimuls
pop
dec
sub
pop
sub
jmp
adc
aad
jb
loop
jae
movsl
or
adcb
ljmp
inc
in
mov
cs
lods
pop
jmp
inc
pop
fcoms
add
negb
loop
fnstsw
push
fwait
rol
popf
icebp
pop
cmp
dec
rclb
lret
fcoms
mov
xor
and
push
sub
ja
lahf
paddb
scas
ja
inc
inc
fcomip
xchg
push
sbb
paddsw
stos
dec
std
or
cltd
daa
jo
mov
push
add
sub
lods
jl
icebp
jmp
lods
aam
loop
jne
add
sbb
or
push
into
stc
pop
xchg
cmp
ja
fwait
sbbb
push
ret
jns
lret
jb
dec
and
or
scas
in
and
fsubrp
push
inc
push
orb
mov
and
andl
add
push
aam
xor
nop
andb
movsl
cmp
xor
fisubrs
mov
jmp
movsl
addr16
in
stos
xor
sub
inc
cmp
loope
loope
ljmp
sbb
int3
pushf
lret
sti
cwtl
mov
data16
out
jp
fsts
push
call
and
inc
fs
pop
sbb
mov
scas
mov
lcall
loop
mov
sub
dec
inc
stos
int3
mov
push
fdivs
fists
lret
pusha
xchg
xchg
inc
jnp
mov
adc
mov
push
inc
ss
push
add
push
test
mov
into
mov
sbb
sub
out
dec
in
push
or
stos
jbe
xor
cwtl
or
sub
lock
stc
mov
mov
pop
cmpsl
xchg
pop
scas
xchg
push
sub
mov
aad
sbbl
arpl
insl
insb
dec
cmpsl
int
jecxz
sbb
ja
xchg
cwtl
and
std
leave
mov
ljmp
adc
pusha
pop
in
mov
lret
ret
or
scas
adc
mov
mov
mov
repnz
push
inc
rcll
lods
test
pusha
lock
push
orl
fidivs
pusha
lahf
imulb
push
sub
dec
mov
or
mov
adc
leave
inc
ss
mov
jb
popf
xchg
sub
jg
adc
lcall
mov
add
mov
mov
mov
lods
adc
stos
and
xchg
ret
add
inc
dec
testl
aad
int3
lea
add
jb
fwait
lock
add
inc
cli
mov
or
loopne
mov
lods
test
jno
shrb
dec
dec
xor
cmpsb
jp
sub
clc
in
incl
fdiv
das
dec
fwait
movsl
stc
jne
test
ds
jnp
jb
lahf
mov
cmp
inc
sub
jle
hlt
fisubs
mov
push
arpl
int3
jns
mov
cmp
testl
push
xchg
xor
or
jecxz
test
pop
add
dec
jne
jmp
hlt
je
sahf
dec
arpl
xchg
sbb
sbb
gs
push
mov
jge
and
xor
jmp
aaa
idivl
jno
mov
pop
lods
into
push
movsl
mov
or
lcall
mov
test
sbb
fistpll
movsl
and
dec
cmp
adc
loopne
enter
xor
inc
popl
insb
in
xor
adc
mov
hlt
ss
cmp
andl
push
outsl
mov
mov
cwtl
jge
adc
out
fistl
push
jge
call
inc
outsb
jmp
loopne
jge
andb
fidivrl
jp
shll
aad
shrl
mov
push
inc
cmp
pop
lret
test
jb
sti
aaa
cmp
sub
rcl
icebp
mov
or
rcrb
fbld
stos
loope
pop
xor
mov
sbb
js
xchg
mov
fildl
cltd
rcrb
push
aam
test
xlat
adc
cmpsl
jnp
insl
paddusw
stos
int
inc
mov
leave
jecxz
add
cmp
fidivl
lcall
stos
mov
insb
pop
mov
push
mov
push
xchg
mov
pop
sbb
push
cmc
loop
mov
cwtl
fcompl
pop
cld
push
dec
icebp
pop
adc
inc
mov
or
enter
mov
jl
cld
das
dec
decl
scas
in
loop
push
xlat
push
addr16
lahf
inc
sar
mov
sahf
in
aaa
out
pop
jl
and
sub
fsubrl
xor
in
sbb
sub
mov
xor
mov
cld
scas
aad
push
sarb
adc
or
testb
test
enter
std
sbb
fisubrs
mull
aas
ljmp
ficoms
mov
jg
sub
cli
or
push
mov
add
add
lock
push
cmp
lahf
ljmp
mov
and
and
dec
popf
cs
jl
jae
add
in
inc
scas
push
add
es
sub
ret
or
je
pop
dec
mov
adc
mov
sbb
xlat
mov
ret
cmpsb
sbb
frstor
fists
aas
andb
mov
jnp
mov
icebp
lahf
xchg
push
cmpsb
push
jo
jb
cmp
adc
clc
add
clc
dec
pop
das
in
shll
shrl
inc
fisubs
cmp
cmp
mov
ds
lea
xchg
add
es
mov
lods
push
mov
lret
pop
outsb
out
shll
add
testl
fimuls
mov
xchg
int
lock
jge
mov
pop
test
das
adc
call
adc
ljmp
cld
popf
mov
nop
xor
aad
lret
ja
ljmp
pop
mov
jb
add
fbstp
sbb
jp
push
std
nop
scas
xorps
mov
adc
mov
in
rcl
or
das
mov
jne
std
sub
into
out
rorl
pop
sbb
data16
mov
jno
pop
callw
xor
xchg
xor
pop
mov
ret
pop
mov
add
je
mov
add
jmp
jecxz
jbe
les
or
hlt
jo
imul
inc
jle
mov
and
mov
push
jl
push
sbb
fldt
imul
and
hlt
sbb
push
push
andb
cmpsb
ret
fidivs
mov
stc
rorl
shll
and
mov
fidivs
andb
leave
inc
add
inc
xor
or
es
out
sahf
enter
mov
mov
je
xor
fdivrp
imul
clc
and
pushf
nop
mov
sbb
cmpsb
dec
shrl
or
xchg
roll
sbb
sti
inc
shll
aam
dec
inc
sub
sbbl
stos
xchg
fdivl
mov
sub
mov
adc
add
mov
das
or
in
sbb
xor
repnz
movsb
add
icebp
std
mov
roll
loop
sahf
xchg
repnz
sbb
data16
inc
or
popf
push
push
sahf
cmc
sbb
loop
in
add
imul
in
fs
mov
xchg
jnp
jae
cld
fs
xchg
jns
scas
and
adc
shl
movsb
mov
jo
sbb
push
pop
test
cs
lds
lahf
enter
pushf
or
pop
pshufw
xchg
xor
nop
cwtl
shrb
push
dec
ljmp
aad
insb
push
popa
or
adc
enter
sub
lods
jge
xor
adc
clc
fidivrs
icebp
cmp
xchg
inc
out
arpl
mov
stos
shlb
repz
mov
outsl
mov
add
shll
pusha
sub
rcrb
cmp
mov
aam
pop
xor
testl
js
pop
inc
insb
sub
and
sub
loop
xor
das
push
adc
jae
or
outsb
daa
push
pop
imul
sub
and
int3
inc
cmp
inc
stc
inc
jns
pop
cmp
sahf
sbb
ss
and
sti
in
jl
cmc
sub
xchg
iret
pop
sub
pop
fsubrs
cmp
imul
loop
notl
jl
lahf
out
adc
mov
push
or
fcomi
sbb
jne
outsl
sbb
js
sub
push
sub
cmp
or
cmp
dec
popf
jecxz
sbb
jp
jmp
jo
stc
test
mov
jl
pop
cmp
jbe
imulb
divb
mov
pop
push
shrb
push
orl
and
cmp
inc
add
loope
mov
push
inc
xlat
push
shll
cmp
and
js
inc
jl
and
jp
jbe
pop
xchg
push
push
mov
fiadds
lds
js
cmpsl
out
push
push
mov
jno
shlb
mov
shll
out
cmp
cs
sub
push
jno
shll
in
int3
outsl
xchg
or
xchg
aam
mov
cmp
daa
or
xlat
mov
and
mov
add
mov
xlat
pop
rorb
push
das
jae
int3
xlat
fistps
or
xor
loop
lret
insb
mov
inc
push
fstpl
jmp
cmpsb
and
sub
loop
ds
subl
repnz
cmp
into
push
mov
adc
popf
das
repz
mov
ss
mov
aaa
push
and
stos
and
cmp
xchg
daa
mov
ljmp
ret
fwait
cmpsb
negl
mov
dec
pop
shl
fildll
xor
mov
dec
cwtl
adc
popf
imul
jne
xchg
stc
ljmp
xor
mov
dec
dec
les
std
int3
cmpsl
mov
daa
add
sub
bound
push
jno
mov
add
aad
dec
pusha
push
stos
mov
lret
adc
pop
push
addr16
or
jno
cmp
cmp
sbb
pop
out
stos
mov
pop
xlat
scas
fdivl
adc
shll
lods
jl
xor
inc
jbe
sahf
fildl
bound
test
add
mov
jle
jnp
lahf
jns
cmp
push
and
inc
test
xor
pop
loopne
test
push
shlb
mov
shrb
lds
inc
mov
pop
cmp
jp
js
popf
sahf
jmp
sbb
xchg
and
or
xchg
lock
cmp
ret
test
pushl
iret
xor
insb
sar
jmp
sbb
dec
and
push
into
jne
leave
ret
fsubrs
push
loopne
add
xlat
pop
jnp
in
std
aas
push
jae
adc
mov
or
data16
cmp
je
xlat
or
lahf
xchg
aad
dec
out
or
xchg
mov
imul
push
inc
notl
dec
cmc
fwait
cltd
xchg
mov
jp
xor
addr16
push
in
xlat
sarb
rclb
jae
scas
sti
ljmp
pop
xchg
sub
inc
mov
dec
jecxz
jmp
cld
call
sbb
xchg
sbb
push
adc
rcl
movl
mov
push
dec
pusha
mov
movb
loopne
nop
popa
mov
aas
iret
rolb
mov
adc
mov
inc
or
add
das
and
aas
and
cmp
rorb
pop
dec
std
xchg
mov
and
mov
rcrb
mov
dec
lea
int3
pop
mov
fnstsw
cmp
insl
and
jp
dec
xchg
sub
cwtl
jno
ljmp
adc
stc
arpl
mov
outsb
ljmp
jnp
xlat
mov
mov
stos
aam
push
mov
data16
pop
cmpsb
push
xchg
aas
aad
sbb
push
sbb
inc
adc
orl
gs
mov
or
fwait
sub
xchg
fmull
and
cmp
pop
push
pop
mov
ljmp
xchg
xchg
dec
cmp
dec
outsb
enter
les
and
pavgw
mov
lock
fcomps
sbb
les
xchg
or
shlb
mov
jg
cmp
jbe
inc
inc
fwait
sbb
sti
inc
pop
cmp
xchg
decl
enter
jne
daa
scas
test
push
out
fisubrl
lods
pusha
int
mov
jb
int
loop
jnp
cmc
add
and
inc
fnstsw
test
add
xchg
mov
movsl
inc
test
jmp
aas
push
pop
sub
mov
cmpl
js
xor
call
test
mul
movsl
int3
lock
ljmp
aas
mulb
aas
into
in
pop
push
and
mov
mov
inc
push
leave
int3
fdivrs
ret
xorb
test
xor
xchg
iret
cmp
hlt
into
fnsave
lods
xchg
adc
bound
rcr
test
rcll
imul
iret
rorb
lock
adc
addr16
sahf
jge
inc
xchg
repnz
push
sbb
test
cmc
mov
fiadds
cli
mov
sbb
clc
adc
loopne
xchg
clc
adc
mov
lret
ret
push
sub
lret
pop
dec
test
adc
pop
pushf
loope
imul
mov
xchg
out
out
insb
movsb
mov
lods
iret
push
enter
pop
dec
adc
cwtl
outsb
push
enter
aaa
enter
pop
int3
fs
arpl
aad
aam
or
jns
xlat
clc
mov
cmpsb
in
cmp
movsl
cmpsl
mov
xchg
push
popf
dec
arpl
cmpsb
xchg
pusha
mov
and
lods
add
pop
jae
or
mov
mov
sub
mov
lds
addps
sub
and
pop
sti
add
mov
xor
lds
adc
sub
xchg
cmp
movsl
testw
fadd
and
pop
aad
push
mov
jo
pusha
lret
in
adc
pop
cmpsb
push
xchg
mov
scas
xchg
add
pop
sbb
lock
cltd
outsl
fwait
jns
add
cmpsb
std
pop
or
mov
in
xchg
pop
dec
add
push
cmp
pushf
adc
std
push
mov
xorb
mov
add
gs
mov
mov
jns
cli
movsl
out
dec
daa
fmuls
or
sub
lds
add
and
cmp
mov
push
aaa
test
mov
fwait
push
xor
xchg
push
dec
sti
jo
mov
inc
or
xchg
lock
cmp
dec
cmpsb
das
aas
sbb
sub
dec
mov
mov
adc
aaa
stc
adc
stos
or
dec
jecxz
push
and
cmp
lods
pop
in
mov
outsl
and
ret
or
push
mov
or
clc
test
outsb
fwait
sub
mov
jo
bound
aas
lds
sbb
mov
jge
lea
inc
ret
sbb
add
repnz
xchg
pop
jns
pop
cmpsl
and
add
cmp
js
fidivrs
mov
mov
and
or
dec
inc
mov
test
aas
adc
nop
notb
inc
mov
or
ret
inc
icebp
inc
mov
mov
adc
or
mov
outsb
and
sbb
je
push
out
shrl
pop
jmp
test
jecxz
daa
shlb
dec
scas
gs
std
xchg
jmp
xchg
pop
mov
dec
mov
xchg
scas
sti
mov
scas
mov
sbb
cmp
add
fsubs
les
js
xchg
jo
mov
ret
emms
loope
push
sahf
rorl
int
stc
out
pop
sub
fxam
repnz
in
data16
pop
add
lret
sub
jecxz
fiadds
dec
jp
pop
fstpt
in
cmp
rolb
sub
int3
inc
rcrb
jbe
xchg
sarb
inc
xchg
mov
clc
je
adc
add
insl
pop
xchg
xor
adc
xchg
ret
adc
lods
jns
pop
in
pushfw
das
add
mov
es
xchg
cmp
push
and
es
dec
addr16
pop
mov
inc
mov
out
insl
lahf
inc
aaa
filds
lods
dec
jge
imul
and
jnp
mov
fnsave
and
loop
push
lods
sub
xchg
xor
mov
leave
and
jmp
scas
hlt
or
dec
test
jle
cwtl
ret
jbe
repnz
popa
jg
sahf
inc
push
divl
orl
ret
xlat
rolb
sub
or
fldcw
lret
mov
or
pop
xchg
xchg
xor
pop
and
adc
xor
test
idivl
xor
icebp
stos
in
sub
cmp
cmp
icebp
pop
jo
scas
mov
mov
loopne
stc
xchg
inc
lods
dec
test
ljmp
or
cld
or
cmp
shlb
xchg
bound
dec
pop
mov
xor
pop
fwait
adc
fistps
test
aad
rol
fsts
fcoml
mov
ds
pop
in
dec
les
or
dec
ret
inc
jae
adc
dec
lea
aaa
movsb
ljmp
jecxz
movsl
inc
dec
les
or
xor
int3
mov
inc
js
adc
mov
or
push
mov
outsb
pop
dec
mov
rclb
cmc
hlt
addr16
aam
sub
or
loop
stos
xor
xchg
fs
add
popa
adc
push
pushf
fucomp
fwait
mov
daa
adc
mov
mov
cmc
idiv
sub
rolb
jae
jecxz
pop
stos
jg
scas
fadds
pushf
rolb
cmp
sub
in
push
scas
xor
add
insb
pop
adc
les
je
pop
push
adc
or
sbb
nop
push
jp
outsb
imul
dec
pop
jbe,pt
xchg
jecxz
insl
sahf
aam
hlt
rolb
test
ret
cmp
adc
mov
push
adc
mov
or
pop
xchg
dec
ret
add
sbb
das
or
loope
lcall
nop
sub
ds
mov
cmp
jl
les
pusha
dec
cmp
sub
push
xor
mov
and
inc
pop
out
fsubrl
shll
stc
leave
push
lods
inc
int
xor
inc
jmp
mov
dec
movsl
sarl
mov
jno
sar
dec
into
cld
fcoml
inc
mov
rcll
les
test
lods
sahf
ret
xchg
cltd
popf
mov
aaa
and
inc
push
xchg
addr16
lea
imul
pop
xchg
adc
xchg
mov
pop
jb
and
les
or
push
dec
cwtl
hlt
jecxz
rcrl
sub
or
cmc
lahf
daa
jge
add
popa
rclb
movsb
out
stc
pushf
iret
addl
push
outsl
and
mov
cmpsb
sub
cmp
iret
dec
stc
dec
mov
aas
inc
ret
js
pushf
inc
daa
mov
ja
cmp
dec
repz
adc
and
or
scas
ffree
stc
fimuls
inc
jbe
pop
popfw
roll
sbb
rcl
sti
aam
test
dec
loope
xchg
cmp
scas
rcrl
movsl
push
popa
fadds
orl
and
push
divb
outsb
cmp
add
mov
imulb
xlat
mov
in
add
mov
fwait
fisubrs
mov
sar
pop
stos
xor
rclb
insb
sub
insb
sbb
scas
pop
xor
jp
andl
mov
aam
add
xacquire
or
and
nop
cmp
adc
sar
in
fs
out
or
mov
xchg
jnp
mov
add
cmp
dec
inc
jne
mov
mov
push
pop
das
dec
int3
cmp
ja
jo
fidivrl
xor
or
inc
jns
in
jno
mov
xor
sarb
or
int
add
pop
dec
movsl
in
or
adc
ljmp
add
ljmp
sbb
sbb
test
movsb
jecxz
adc
cwtl
dec
mov
cld
lret
adc
pop
and
and
jo
int
sub
loopne
cli
pop
rorl
mov
xor
push
js
push
in
cli
sub
jl
push
inc
or
pop
mov
add
and
jbe
imul
cli
pushf
mov
loopne
push
addb
in
mov
cmp
scas
dec
roll
into
ret
cs
hlt
outsl
cmp
iret
cmpb
aad
sbb
out
flds
pop
mov
and
incl
mov
adc
arpl
add
push
loop
cmp
rorb
push
cmc
ret
fisubs
les
dec
sub
lods
inc
movsb
mov
mov
mov
xchg
inc
dec
xchg
fldt
in
stos
xor
les
pop
test
inc
sub
jne
mov
shl
imulb
cmp
mov
mov
sub
push
in
es
inc
mov
dec
loop
cmp
xchg
aas
mov
repnz
dec
into
loope
dec
adc
push
pop
nop
dec
mov
xchg
adc
xchg
adc
adc
bound
push
mov
inc
icebp
out
cld
inc
in
add
xchg
push
loop
mov
add
jmp
jbe
cltd
and
mov
imul
lcall
stc
scas
push
dec
into
mov
sub
shrl
outsb
bound
jp
mov
movsb
int3
aad
or
push
rclb
leave
std
test
xor
rolb
jle
sbb
ljmp
sahf
cmp
mov
jbe
sbb
mov
cmpsb
or
pop
addr16
inc
add
jl
nop
jns
xlat
adc
sar
sub
sahf
jle
and
mov
push
lods
cwtl
loope
jg
jnp
cltd
inc
inc
sbb
inc
cs
inc
mov
pop
pop
push
xchg
pop
aaa
push
xor
xor
push
push
fwait
inc
inc
fsubl
std
cmp
stc
jl
gs
mov
popf
test
sbbl
mov
hlt
subb
pop
push
cmp
sub
cwtl
imul
push
adc
enter
cltd
add
fidivrs
dec
test
adc
cld
loope
jl
mov
cs
lcall
pushf
xor
push
ljmp
pop
loope
cmp
fwait
mov
push
subb
adc
jle
or
push
sub
hlt
outsl
and
mov
movsl
jge
pop
lock
xor
enter
xchg
mov
pop
mov
sarb
mov
gs
inc
insl
addr16
adc
sub
mov
jnp
xor
push
mov
cs
jno
jmp
push
mov
inc
lock
imul
or
lock
in
pop
mov
icebp
mov
jge
dec
xchg
mov
ret
and
push
int3
add
xlat
jns
adcb
lods
hlt
xorb
inc
push
or
leave
sub
add
imulb
mov
xor
mov
xchg
add
xlat
mov
rcrb
dec
add
dec
pop
xchg
xchg
fs
push
jecxz
pop
or
or
jl
fs
and
adc
imul
roll
mov
push
mov
shrl
cmp
ss
push
arpl
sarb
push
orl
pop
filds
call
test
filds
aad
jne
fistpll
mov
xlat
jae
mov
xor
pop
nop
cld
outsl
mov
jecxz
mov
sub
sti
enter
mov
call
shll
sub
jge
sti
push
dec
mov
lcall
shl
cmp
test
jb
fists
add
lret
fsub
lea
adcl
dec
add
jno
insb
pop
jb
icebp
push
pop
xchg
pop
xor
pop
stos
mov
cmc
mov
int3
lahf
mov
xor
push
push
cmc
int3
fsubs
push
jle
xor
or
or
add
jl
popl
mov
mov
mov
and
inc
insl
subl
movsl
dec
mov
dec
push
into
mov
test
hlt
pop
jmp
daa
daa
out
stos
fnop
jp
jb
pusha
xor
shll
rcrl
fldcw
fs
sbb
lret
ss
test
shll
pop
add
mov
add
inc
jl
std
test
jbe
sarl
sub
and
dec
inc
jp
in
outsl
aam
or
imul
sub
addr16
pop
stos
data16
enter
add
inc
int
jae
bnd
out
lods
add
mov
mov
push
pushf
popf
pushf
icebp
ret
lods
das
fists
mov
je
push
pop
xor
scas
fistps
loop
and
cmp
dec
pop
scas
jmp
push
ja
add
loopne
jle
loopne
push
repz
or
icebp
and
je
mov
fildll
movsb
imul
and
dec
add
xchg
and
push
mov
push
daa
lcall
xor
loop
cwtl
adc
inc
call
cmp
popa
and
cld
stos
sbb
subl
cmpl
flds
ret
je
stos
imul
xchg
pop
mov
pop
shll
sti
adc
cmp
mov
outsb
sahf
jecxz
sbb
test
mov
scas
emms
sub
sbb
and
out
jp
or
sbb
in
in
jl
cltd
popa
lock
std
push
and
test
cmp
xchg
jl
jg
or
adc
xor
push
leave
xchg
movl
jmp
call
dec
loopne
les
dec
fnstenv
scas
jo
test
rol
sbb
cli
mov
scas
mov
lret
jae
adc
repz
movsl
aas
sbb
sub
mov
sub
adcb
sbb
fstp
jp
es
mov
movsl
sub
mov
xor
notl
cmp
xchg
cmp
pop
jecxz
repz
iret
adc
in
fsubrl
jp
pop
movsl
push
rorb
jnp
jge
flds
call
xor
test
in
add
dec
sub
aam
sub
xchg
pusha
mov
and
push
sbb
inc
mov
sub
mov
insb
jmp
mov
mov
loopne
fs
out
std
sbb
fisubrs
sbb
xchg
push
mov
push
mov
xor
add
adc
dec
sti
and
jae
shrb
sbb
dec
les
adc
inc
movsl
out
popf
in
add
or
and
ss
add
xchg
das
mov
ss
outsb
pusha
into
pop
out
xor
pop
sub
or
mov
push
imul
sti
lcall
jnp
outsb
popf
push
imul
pop
mov
sub
inc
das
adc
mov
rorl
out
cmc
and
stos
cmp
and
mov
icebp
push
cld
jb
pop
sti
shlb
pop
mov
sbb
insl
mov
and
loop
adcl
add
imul
mov
xchg
sub
dec
jg
and
mov
and
andb
pop
call
ljmp
mov
in
xchg
bound
mov
out
pop
push
or
test
add
insb
sbb
pop
or
xorb
ret
xchg
xchg
inc
ljmp
out
cmpb
fisttpl
adc
and
fnstenv
mov
and
pop
addl
xor
mov
xor
push
cs
mov
out
clc
lea
xchg
fidivs
mov
fisubs
mov
out
push
jl
adc
popa
adc
xchg
xchg
adc
jmp
adc
xor
add
push
xchg
sarb
dec
jbe
das
lret
out
sbb
push
mov
lahf
dec
pop
iret
dec
mov
push
imul
loop
test
mov
into
adc
ret
in
scas
je
fdivs
adc
cmp
addb
popf
lahf
cmp
sbb
add
mov
push
mov
loop
pop
jmp
outsl
fstpt
jo
or
test
in
lret
mov
adc
mov
lods
xor
in
mov
mov
pop
sbb
mov
cmp
xchg
mov
test
xor
ret
or
jle
sub
sub
ret
xor
lock
arpl
fbstp
rclb
imul
in
pop
stos
ret
bound
sbb
fiaddl
dec
testl
xlat
cmp
loopne
pop
ja
jae
adc
mov
add
mov
push
nop
daa
shlb
sub
in
jg
cmc
xor
repz
into
jg
fs
es
or
psadbw
clc
dec
call
jne
lret
xor
std
sahf
mov
pusha
add
push
mov
mov
jl
add
stos
jl
mov
sbb
cmpw
cmp
je
pop
negl
nop
ss
rorb
xor
push
lds
scas
jns
lcall
pop
mov
ss
test
dec
add
push
jne
dec
fnstenv
imul
stos
mov
ds
mov
leave
loope
in
push
cmc
fiaddl
add
lods
outsb
sub
pop
adc
rcll
and
jae
sub
jb
dec
sbb
imul
outsl
jmp
lock
or
fsts
cmp
adc
scas
sbb
jmp
int3
jge
loope
mov
cld
add
jmp
icebp
fstps
lret
mull
pusha
push
jae
scas
or
cs
jbe
pop
and
sbb
or
mov
xchg
mov
xor
pop
out
jmp
jo
xor
push
test
adc
cltd
adc
imul
sti
lods
xor
cmp
jbe
cmp
cmpsl
test
adc
stos
fistpll
mov
mov
pop
jne
bound
pop
mov
dec
cld
jl
or
stos
mov
cmc
mov
push
mov
addr16
xchg
mov
mov
add
in
inc
gs
sbb
aas
sahf
dec
movsl
inc
iret
mov
js
stos
leave
shrl
fdivr
popf
movsl
lock
xchg
cmp
xchg
addl
adc
cmp
jb
int
adc
sub
int3
shr
inc
vcvtps2dq
pop
cmp
sbbb
and
inc
sub
jecxz
mov
int
sub
dec
push
mov
rclb
and
add
jle
jne
das
mov
fbld
push
dec
jbe
cmp
sbb
inc
bound
cmpsb
adc
mov
xor
outsl
mov
inc
shll
in
jg
and
inc
fnstenv
pop
xchg
imul
cmp
adc
mov
push
pop
push
stos
jo
adcl
movsl
pop
hlt
ljmp
and
leave
cmp
pop
pop
arpl
jno
fisubrl
push
cmp
lea
jb
xchg
xor
out
insl
push
cmp
dec
mov
and
xchg
test
adc
and
sti
cmp
aad
pop
adc
dec
inc
jnp
xchg
xchg
or
mov
pop
aaa
push
inc
in
sbb
into
adc
out
xchg
or
repnz
mov
sbb
or
inc
repnz
icebp
and
ror
mov
call
xchg
lcall
xchg
pushf
sub
repnz
pop
inc
popf
cmp
xchg
adc
jne
and
stos
push
pop
and
repnz
xchg
mov
xor
add
sbb
adc
cld
outsl
and
xor
xchg
dec
xor
xchg
lods
daa
cmpl
popa
jge
cmp
test
out
sbb
shrl
ds
inc
xor
and
test
nop
sarb
das
and
inc
push
div
psubusb
push
or
lret
adc
sbb
cmpsb
iret
sbb
push
jl
and
xchg
je
or
add
mov
dec
aam
jmp
sbb
pop
jge
add
adc
lcall
dec
mov
mov
push
add
roll
aam
push
test
jnp
mov
movsb
cmpsl
ret
push
fsubrp
sbb
adc
mov
or
movsb
inc
nop
orb
cli
into
shll
jg
aad
inc
jnp
xor
add
push
rol
adc
mov
sbb
cmp
jo
inc
and
pop
mov
cmp
imul
cld
mov
mov
mov
xlat
jecxz
arpl
mov
dec
cli
sub
or
test
sbb
lods
fnstcw
ficomps
xchg
imul
mov
lods
sub
cmp
mov
test
cmpsb
mov
add
adc
loop
xor
push
mov
ret
cmp
out
xchg
sbb
in
test
add
mov
xor
mov
aaa
ret
nop
rorb
xchg
into
cmp
call
int
stos
sub
popw
repz
mov
aad
bound
dec
out
jbe
push
sub
dec
dec
sbb
testl
jge
addb
inc
mov
jno
xchg
xor
lea
sub
cmp
inc
mov
shlb
jl
add
lods
loop
sti
mov
ficompl
lret
push
cmp
imul
clc
push
add
xor
xor
imul
mov
dec
fistl
sar
jle
xchg
push
popf
loopne
imul
push
aas
dec
cmp
gs
call
pop
stc
insb
xor
ja
mov
push
mov
out
fisttpll
aad
sub
out
sub
rclb
ror
adc
sub
cld
push
arpl
in
lahf
imull
xlat
adc
mov
mov
std
mov
je
aaa
mov
jnp
sarl
insl
xchg
mov
pusha
popa
mov
push
shr
movsb
push
adc
cltd
adc
pop
outsb
dec
mov
jno
mov
repz
sub
ja
les
imull
push
pop
xchg
lret
xchg
push
sbb
cmpsl
hlt
mov
sub
shr
xor
lret
inc
shll
xor
test
mov
shr
mov
sahf
xor
test
aad
adc
add
insl
lods
movsb
fldl2t
ficomps
push
add
cmpsl
rol
js
adc
mov
mov
enter
inc
or
pop
out
fnstcw
lahf
shr
pop
cwtl
dec
pop
lods
and
ss
pop
mov
and
outsl
mov
and
jne
mov
jg
xor
mov
incb
cli
cli
xchg
dec
aas
xchg
lret
ds
mov
push
pop
into
arpl
enter
push
mov
mov
xlat
cmpsb
jg
clc
mov
out
cmp
cmp
mov
int3
push
jae
fwait
div
incl
push
sarb
lea
mov
fidivrs
push
lret
mov
arpl
loopne
mov
pop
test
mov
xor
xor
std
popl
int
add
jmp
xchg
dec
pop
jnp
mov
pop
pushf
sti
push
iret
mov
rcll
mov
out
pop
out
sbb
rcl
add
lret
adc
and
xchg
out
pop
sub
cmp
imul
sub
jo
jmp
sbbb
xchg
fnstsw
xor
cmp
xor
pop
xchg
test
xor
int3
xchg
gs
gs
mov
mov
pop
mov
not
and
cmp
pop
insb
movsb
add
movq
inc
inc
adc
sahf
sbb
inc
fiaddl
mov
jno
repnz
out
pop
pop
pop
lods
sub
fldt
int3
test
test
divl
outsb
lret
or
lods
ss
inc
out
mov
lds
sub
repz
adc
test
cmpsl
pop
pushf
xchg
xchg
divl
outsb
push
jmp
inc
xchg
gs
mov
in
mov
jns
pop
mov
cmp
sbb
rep
push
adc
or
fmuls
sbb
xchg
sub
call
sub
jl
subb
aas
cmp
mov
enter
bound
dec
jmp
cs
icebp
jns
stos
adc
add
mulb
jnp
xor
hlt
and
and
pop
xor
int3
ss
dec
inc
enter
jnp
inc
xor
ret
mov
sbb
xchg
inc
pop
add
pop
shl
sbb
jg
insl
fsts
lods
rorb
fs
or
rol
ds
pop
or
mov
std
lret
adc
repnz
fildl
dec
xor
cltd
gs
pusha
stos
dec
push
shll
js
sub
loope
mov
fwait
je
daa
dec
push
arpl
mov
xchg
ja
repnz
xor
data16
ss
cmp
movsb
aad
addr16
mov
shl
fwait
test
jne
add
push
xchg
ja
sub
push
inc
stc
ja
ljmp
push
mov
rclb
sub
cmp
mov
sub
cmp
sarl
insl
pop
subl
sti
out
fwait
xor
mov
out
jno
std
dec
out
pop
mov
bound
sub
pop
jne
clc
loopne
daa
push
cmp
ret
sbb
dec
push
xor
inc
mov
and
push
cli
out
fisttpl
outsb
fsts
pop
or
mov
or
loope
jmp
adc
js
inc
pop
xchg
mov
jg
imul
sbb
mov
je
dec
add
loop
mov
imul
and
mov
adc
fstpt
shrl
add
sub
pop
pop
xchg
rorl
push
mov
leave
es
jl
adc
out
addr16
or
clc
lret
jle
xchg
aas
into
cmp
dec
cmpl
jb
ret
xor
pop
xchg
movsb
push
sar
push
es
xchg
inc
movsl
mov
leave
adc
test
and
jge
lcall
push
jno
in
jg
xchg
sub
jmp
add
xchg
shr
adc
out
rorb
stos
out
or
pop
mov
pop
enter
sbb
adc
pop
ljmp
xchg
and
das
cmp
dec
pushf
mov
jnp
jb
cmp
lea
cmp
jns
mov
test
pop
sub
test
sub
fwait
cmp
xchg
call
pop
push
sbb
pushf
push
or
inc
test
push
push
dec
inc
sbb
pop
jo
mov
adc
inc
inc
push
pop
repnz
mov
orb
mov
mov
pop
sbb
inc
aas
jge
xchg
jb
ret
shl
mov
push
mov
hlt
test
in
sbb
stc
xchg
pop
xchg
mov
cmpsb
dec
inc
or
jecxz
sub
stos
push
imul
rorb
pop
pop
imul
pusha
aas
popa
cmp
adc
loop
adc
mov
js
xchg
or
out
push
test
sub
jmp
and
pop
cmp
adc
sub
mov
dec
out
dec
xchg
sub
repnz
scas
arpl
fcoms
or
bound
lds
outsl
jg
call
xchg
xchg
jmp
pop
xorps
popf
fsubl
sqrtps
lock
and
inc
addr16
jne
cmp
lods
call
dec
fistl
cmp
sub
xchg
add
stc
mov
daa
js
std
xchg
push
ss
xchg
hlt
or
inc
jbe
jle
push
stc
scas
cld
into
fnsave
dec
or
test
outsb
cmp
push
lret
or
and
les
sub
xchg
rorb
lret
sub
addr16
mov
decb
and
leave
aas
xor
mov
fs
sbb
cltd
es
jbe
outsl
pusha
aam
cmc
stc
jo
mov
in
adc
add
les
arpl
adc
or
aas
das
xchg
call
push
adc
cs
inc
xor
mov
daa
addr16
xor
outsb
pop
jg
dec
cmp
mov
ss
test
jnp
mov
ljmp
scas
sbb
push
rcrb
add
and
pop
jnp
sbb
xor
jmp
jle
pop
out
icebp
scas
xchg
push
sbb
out
lock
fstp
xor
cmpsb
mov
pop
in
testl
add
lcall
pop
ret
and
push
popf
mov
mov
inc
subl
loop
rcrl
cmp
push
or
ficoms
and
cmp
mov
dec
xor
aaa
jg
xor
mov
rcrb
adc
aam
popf
dec
add
stc
push
sub
mov
xor
mov
jo
inc
push
xor
mov
ds
lds
rcrb
fs
imul
push
inc
push
cmp
mov
adc
sbb
dec
sub
sarl
jbe
push
mov
sub
movsb
xchg
xor
add
incl
add
add
add
add
add
addb
add
add
add
add
bound
outsl
add
je
and
jae
je
jne
bound
xor
add
or
add
add
dec
add
and
push
add
add
add
add
add
add
add
add
add
incl
add
add
add
or
incl
add
bound
xor
sub
and
push
add
jb
jae
imul
and
xor
add
add
add
push
sub
sbb
jb
or
incl
add
jns
jb
imul
je
and
sub
inc
add
add
add
add
add
add
add
add
push
jno
sub
xor
push
add
add
add
incl
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
push
add
add
add
add
add
add
add
add
or
incl
add
add
add
add
add
outsl
add
je
and
dec
add
add
add
jb
outsl
add
add
je
jns
and
jo
popa
add
add
add
add
bound
xor
add
add
add
inc
add
add
add
add
add
add
add
nop
add
add
add
add
add
add
and
inc
add
add
add
add
add
add
add
add
and
inc
add
add
add
add
add
add
add
add
and
inc
add
add
add
add
add
xchg
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
hlt
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
rolb
add
add
xor
xor
xor
cmp
xor
xor
bound
xor
add
xor
or
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
add
cmp
or
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
add
xor
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
outsl
add
popa
add
add
add
add
adc
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
sub
inc
add
add
add
add
add
add
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
outsb
add
outsb
add
insl
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
outsb
add
outsb
add
insl
add
add
add
xor
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
popa
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
je
jne
je
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
arpl
imul
and
and
cmp
gs
gs
gs
jb
jbe
insb
gs
or
and
and
and
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
and
and
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
jae
arpl
imul
cmp
je
jne
je
outsb
outsw
ds
jae
gs
bound
push
inc
add
add
pop
add
add
jl
xlat
xor
pop
xor
inc
xor
xor
xor
xor
cmp
inc
aaa
inc
aaa
fs
imul
aaa
lea
xchg
aaa
cltd
aaa
mov
mov
aaa
out
jmp
or
cmp
cmp
cmp
cmp
cmp
dec
cmp
cmp
and
add
add
add
aaa
das
aaa
aas
aaa
inc
aaa
dec
aaa
pop
aaa
bound
addr16
jp
xorl
popf
aaa
movsb
aaa
stos
aaa
mov
mov
aaa
call
cmp
cmp
cmp
cmp
pop
cmp
xor
mov
lret
cmp
sbb
and
sub
sub
xor
pop
cmp
popf
cmp
mov
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
push
cmp
pop
cmp
mov
mov
mov
xlat
fnstsw
jecxz
jmp
ds
add
or
adc
sbb
pop
aas
es
cs
ss
ds
dec
aas
push
aas
pop
aas
pop
aas
push
aas
mov
lea
popf
aas
mov
aas
les
lret
aas
add
add
add
adc
add
xor
xor
xor
add
inc
add
or
add
add
add
add
add
add
fidivl
add
inc
xor
add
add
add
and
add
dec
adc
add
xor
add
add
add
add
lock
add
ja
add
jno
add
ja
add
jno
add
addl
xchg
jae
add
mov
fdivrl
add
add
add
add
add
mov
add
add
jae
add
add
add
cld
jae
add
add
inc
jp
add
jbe
add
add
inc
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
add
sbb
add
jle
add
jle
add
add
add
add
cmpb
xchg
jle
add
add
add
jle
add
jle
add
jle
add
jg
add
add
sbb
add
jg
add
add
push
jg
add
add
add
jg
add
jg
add
jg
add
jg
add
jg
add
add
push
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addl
add
add
inc
addl
push
add
jle
add
mov
add
mov
addl
hlt
addl
sbb
add
inc
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
test
sbb
add
test
inc
test
pusha
test
jb
add
test
add
test
test
call
test
add
add
sbb
add
inc
test
push
test
jo
add
addb
add
test
loop
add
repnz
add
add
sub
add
push
xchg
bound
add
addb
add
xchg
fiaddl
add
or
add
sbb
add
cmp
add
pop
xchg
insb
xchg
jle
add
mov
add
rolb
add
xchg
clc
xchg
or
add
push
mov
xor
add
pop
mov
je
add
test
add
scas
mov
mov
mov
in
mov
add
add
sbb
add
sub
add
push
mov
mov
jb
add
test
add
movsb
mov
add
add
into
mov
mov
fimuls
add
repnz
push
mov
adc
add
add
add
xor
add
add
add
outsb
mov
xchg
add
stos
mov
mov
mov
loopne
add
lock
push
mov
push
mov
inc
mov
pop
mov
insb
mov
add
add
xchg
add
stos
mov
mov
mov
out
mov
cli
mov
or
add
mov
xor
add
add
add
add
mov
cmpsb
mov
mov
add
ret
add
mov
fimuls
add
lea
push
lea
and
add
cmp
add
push
lea
insb
lea
jp
add
mov
add
lods
lea
mov
lea
fmuls
add
repnz
or
add
mov
dec
mov
push
mov
insb
mov
orb
add
mov
mov
mov
in
add
hlt
mov
or
add
sbb
add
cmp
add
pop
popl
jb
add
mov
add
stos
popl
rorb
add
popl
hlt
popl
push
nop
add
push
nop
add
xor
add
dec
nop
add
pop
nop
add
jo
add
adcb
add
nop
add
mov
nop
add
fcoml
add
notb
add
sbb
add
ds
add
push
xchg
add
xchg
add
je
add
test
add
sahf
xchg
add
stos
xchg
add
mov
xchg
add
loop
add
out
xchg
add
add
add
and
add
xor
add
push
xchg
add
pusha
xchg
add
insb
xchg
add
jle
add
mov
add
lods
xchg
add
mov
add
into
xchg
add
ficoms
add
xchg
add
push
xchg
add
push
xchg
add
sub
add
inc
xchg
add
push
xchg
add
xchg
add
js
add
mov
add
mov
add
lret
add
xchg
add
out
xchg
add
or
add
xchg
add
inc
xchg
add
pop
xchg
add
outsb
xchg
add
jl
add
mov
add
xchg
add
fcoml
add
xchg
add
or
add
es
add
xor
add
inc
xchg
add
push
xchg
add
bound
add
adcb
add
xchg
add
ret
add
xchg
add
loopne
add
repnz
add
add
add
sbb
add
dec
xchg
add
pop
xchg
add
push
add
jl
add
nop
xchg
add
sahf
xchg
add
scas
xchg
add
les
add
out
add
notb
add
push
xchg
add
and
add
dec
xchg
add
pop
xchg
add
insb
xchg
add
js
add
test
add
test
add
mov
xchg
add
ficoml
add
cld
xchg
add
adc
add
sub
add
pop
cwtl
add
insb
cwtl
add
mov
add
scas
cwtl
add
les
add
out
add
clc
cwtl
add
adc
add
es
add
ss
add
inc
cltd
add
add
add
mov
add
jge
add
jge
add
jge
add
jge
add
add
sbb
add
jle
add
jle
add
add
add
add
cmpb
xchg
jle
add
add
add
jle
add
jle
add
jle
add
jg
add
add
sbb
add
jg
add
add
push
jg
add
add
add
jg
add
jg
add
jg
add
jg
add
jg
add
add
push
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addl
add
add
inc
addl
push
add
jle
add
mov
add
mov
addl
hlt
addl
sbb
add
inc
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
test
sbb
add
test
inc
test
pusha
test
jb
add
test
add
test
test
call
test
add
add
sbb
add
inc
test
push
test
jo
add
addb
add
test
loop
add
repnz
add
add
sub
add
push
xchg
bound
add
addb
add
xchg
fiaddl
add
or
add
sbb
add
cmp
add
pop
xchg
insb
xchg
jle
add
mov
add
rolb
add
xchg
clc
xchg
or
add
push
mov
xor
add
pop
mov
je
add
test
add
scas
mov
mov
mov
in
mov
add
add
sbb
add
sub
add
push
mov
mov
jb
add
test
add
movsb
mov
add
add
into
mov
mov
fimuls
add
repnz
push
mov
adc
add
add
add
xor
add
add
add
outsb
mov
xchg
add
stos
mov
mov
mov
loopne
add
lock
push
mov
push
mov
inc
mov
pop
mov
insb
mov
add
add
xchg
add
stos
mov
mov
mov
out
mov
cli
mov
or
add
mov
xor
add
add
add
add
mov
cmpsb
mov
mov
add
ret
add
mov
fimuls
add
lea
push
lea
and
add
cmp
add
push
lea
insb
lea
jp
add
mov
add
lods
lea
mov
lea
fmuls
add
repnz
or
add
mov
dec
mov
push
mov
insb
mov
orb
add
mov
mov
mov
in
add
hlt
mov
or
add
sbb
add
cmp
add
pop
popl
jb
add
mov
add
stos
popl
rorb
add
popl
hlt
popl
push
nop
add
push
nop
add
xor
add
dec
nop
add
pop
nop
add
jo
add
adcb
add
nop
add
mov
nop
add
fcoml
add
notb
add
sbb
add
ds
add
push
xchg
add
xchg
add
je
add
test
add
sahf
xchg
add
stos
xchg
add
mov
xchg
add
loop
add
out
xchg
add
add
add
and
add
xor
add
push
xchg
add
pusha
xchg
add
insb
xchg
add
jle
add
mov
add
lods
xchg
add
mov
add
into
xchg
add
ficoms
add
xchg
add
push
xchg
add
push
xchg
add
sub
add
inc
xchg
add
push
xchg
add
xchg
add
js
add
mov
add
mov
add
lret
add
xchg
add
out
xchg
add
or
add
xchg
add
inc
xchg
add
pop
xchg
add
outsb
xchg
add
jl
add
mov
add
xchg
add
fcoml
add
xchg
add
or
add
es
add
xor
add
inc
xchg
add
push
xchg
add
bound
add
adcb
add
xchg
add
ret
add
xchg
add
loopne
add
repnz
add
add
add
sbb
add
dec
xchg
add
pop
xchg
add
push
add
jl
add
nop
xchg
add
sahf
xchg
add
scas
xchg
add
les
add
out
add
notb
add
push
xchg
add
and
add
dec
xchg
add
pop
xchg
add
insb
xchg
add
js
add
test
add
test
add
mov
xchg
add
ficoml
add
cld
xchg
add
adc
add
sub
add
pop
cwtl
add
insb
cwtl
add
mov
add
scas
cwtl
add
les
add
out
add
clc
cwtl
add
adc
add
es
add
ss
add
inc
cltd
add
add
add
inc
inc
push
inc
push
dec
xor
cs
insb
add
add
push
gs
gs
popa
insb
jne
push
add
add
push
gs
outsb
jne
dec
gs
js
add
add
je
jae
jb
popa
insl
gs
add
add
push
gs
outsl
je
data16
push
dec
gs
popa
insb
jne
add
add
addr16
outsb
jne
push
popa
insb
jne
push
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
add
push
gs
jo
outsb
dec
gs
js
add
add
addr16
outsb
jne
dec
gs
add
add
addr16
insb
outsl
jae
dec
gs
add
push
gs
jb
popa
je
dec
gs
add
add
addr16
jne
jb
dec
outsb
outsw
dec
gs
add
add
push
gs
jo
outsb
dec
gs
js
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
add
push
gs
jb
popa
je
dec
gs
js
add
add
addr16
gs
popa
insb
jne
inc
js
add
add
push
gs
gs
gs
push
popa
insb
jne
push
add
add
addr16
jne
jb
push
popa
insb
jne
push
add
inc
inc
dec
xor
cs
insb
add
add
je
je
arpl
bound
arpl
add
inc
jb
popa
je
push
popa
je
gs
inc
jb
jae
add
add
dec
data16
je
imul
dec
jb
inc
js
add
inc
gs
popa
jns
jne
add
add
insl
bound
gs
outsb
add
add
inc
jb
popa
je
inc
dec
inc
push
arpl
outsb
add
add
inc
gs
gs
inc
js
outsb
je
outsl
imul
add
push
je
gs
push
add
add
gs
je
push
arpl
outsb
dec
outsb
imul
add
gs
je
push
arpl
outsb
add
add
je
insb
imul
add
dec
outsb
je
jb
arpl
imul
add
inc
gs
imul
dec
jb
inc
js
add
add
je
imul
dec
jb
inc
js
add
add
insb
arpl
imul
add
je
insb
je
add
add
je
imul
outsl
jb
add
add
gs
je
inc
outsl
insl
jo
je
bound
inc
add
add
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
imul
add
data16
je
imul
addr16
js
add
inc
gs
gs
inc
inc
add
add
push
gs
imul
outsl
jb
add
add
je
insb
je
add
add
je
gs
dec
jne
push
add
add
je
gs
inc
js
outsb
je
outsl
imul
inc
gs
insb
imul
add
inc
gs
bound
arpl
add
add
je
gs
inc
outsl
insb
outsl
jb
add
add
je
imul
add
add
gs
je
inc
outsl
outsb
je
outsb
imul
add
inc
gs
gs
dec
bound
arpl
add
inc
gs
gs
dec
gs
imul
push
gs
arpl
push
arpl
add
inc
gs
gs
arpl
popa
jo
add
add
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
add
push
gs
je
gs
push
outsl
fs
push
dec
inc
dec
xor
cs
insb
add
add
inc
gs
jns
je
insl
inc
imul
jns
add
add
gs
je
push
push
add
add
inc
jb
popa
je
dec
outsl
bound
push
arpl
add
add
imul
jae
add
push
gs
jb
arpl
jae
push
ja
push
popa
jb
insl
gs
jb
add
add
push
gs
gs
jae
dec
jne
gs
add
add
gs
je
dec
jne
gs
add
add
push
gs
jb
outsl
jb
je
inc
insb
popa
jae
add
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
inc
gs
je
jb
jne
dec
outsb
outsw
push
add
add
je
outsl
insl
insl
popa
outsb
fs
imul
push
gs
jb
outsl
jb
outsl
fs
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
add
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
add
push
gs
je
jbe
outsb
je
add
add
fs
imul
js
add
add
inc
outsl
insl
jo
jb
inc
imul
add
inc
gs
jns
je
insl
push
imul
insb
gs
imul
gs
push
push
jb
outsl
jb
je
add
add
je
jne
jb
outsb
je
push
dec
add
add
inc
gs
push
push
jb
outsl
jb
je
add
add
je
jne
jb
outsb
je
push
add
add
inc
gs
jae
jb
gs
jne
je
popa
outsb
addr16
inc
add
add
push
insb
gs
add
inc
gs
imul
jo
push
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
js
add
add
push
jns
je
insl
push
imul
insb
gs
imul
inc
gs
outsl
arpl
push
imul
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
add
je
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
add
jb
imul
imul
outsl
bound
inc
gs
je
insl
dec
popa
insl
gs
add
add
inc
gs
imul
bound
gs
add
add
dec
outsl
jbe
inc
imul
jae
jb
insl
jo
add
add
dec
outsl
popa
fs
imul
js
add
add
inc
imul
add
add
outsb
fs
gs
inc
imul
imul
je
imul
insb
jae
jb
insl
jo
inc
add
add
je
jbe
outsb
je
add
add
jae
outsb
push
jb
arpl
jae
outsl
dec
outsl
bound
push
arpl
add
inc
gs
popa
je
inc
outsl
jb
popa
je
add
add
inc
gs
imul
popa
je
add
add
inc
insb
jne
push
jb
arpl
outsb
inc
popa
arpl
add
add
jb
jo
outsb
push
add
add
je
jns
je
insl
push
imul
imul
jns
add
add
push
gs
popa
jae
inc
jb
outsl
jb
add
add
je
jb
arpl
jae
gs
jo
add
add
popa
jo
jb
add
add
dec
gs
jo
gs
insb
insb
outsl
arpl
add
dec
gs
jo
imul
dec
gs
jo
insb
insb
outsl
arpl
add
inc
gs
jae
jb
gs
jne
je
inc
dec
inc
add
add
push
gs
fs
jb
arpl
jae
gs
outsl
jb
add
add
outsb
push
jb
arpl
jae
add
dec
outsb
je
jb
outsl
arpl
fs
outsl
insl
jo
jb
inc
js
push
add
add
dec
outsl
popa
fs
imul
add
add
push
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
add
push
outsb
push
gs
js
gs
imul
gs
add
add
je
outsb
push
gs
js
gs
imul
gs
add
push
imul
jb
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
add
jae
insl
gs
push
add
add
push
gs
imul
outsl
arpl
jae
add
add
insl
imul
jb
popa
add
add
je
jns
je
insl
inc
gs
jne
je
inc
dec
inc
add
add
inc
gs
outsl
arpl
gs
outsb
outsw
push
add
add
inc
jb
popa
je
inc
jbe
outsb
je
add
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
add
outsb
inc
jbe
outsb
je
add
add
inc
gs
popa
jns
outsl
popa
fs
popa
imul
imul
add
push
popa
imul
insb
gs
bound
arpl
add
je
imul
je
add
add
jo
outsb
fs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
je
outsl
fs
gs
imul
add
add
inc
gs
jb
jbe
je
push
jb
imul
imul
add
jb
insl
jo
push
add
add
gs
je
push
jb
arpl
jae
add
add
inc
jb
gs
imul
add
inc
gs
imul
imul
jns
add
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
add
gs
je
inc
imul
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
add
popa
insb
inc
jb
add
add
je
jne
jne
fs
outsl
insl
jo
gs
outsl
outsb
push
je
je
jae
add
inc
jb
popa
je
dec
outsl
inc
outsl
insl
jo
gs
outsl
outsb
push
outsl
jb
add
add
push
gs
outsb
outsw
jb
popa
je
outsl
outsb
dec
outsl
bound
push
arpl
add
outsl
jae
dec
popa
outsb
fs
add
add
fs
imul
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
arpl
popa
je
inc
arpl
js
add
add
arpl
popa
je
inc
arpl
js
add
add
je
imul
bound
gs
js
add
add
inc
gs
jb
arpl
fs
jae
add
add
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
gs
je
inc
jbe
outsb
je
add
add
dec
gs
jo
gs
jb
jns
add
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
add
insb
inc
imul
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
inc
outsb
fs
jo
outsb
inc
outsl
jne
je
add
insb
jae
jb
outsb
push
add
add
dec
outsb
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
add
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
add
outsl
bound
inc
insb
insb
outsl
arpl
add
dec
outsb
je
jb
outsl
arpl
fs
js
push
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
gs
imul
add
inc
insb
outsl
bound
inc
jb
add
add
inc
gs
jb
arpl
jae
imul
insb
jae
jb
jo
push
add
add
inc
gs
outsl
outsb
addr16
popa
je
dec
popa
insl
gs
add
add
push
imul
imul
insb
gs
bound
arpl
jae
arpl
cs
insb
add
add
pop
imul
jb
add
add
insl
gs
insl
outsl
jbe
add
add
popa
insb
insb
outsl
arpl
add
pop
gs
gs
pop
push
gs
add
add
insl
popa
insb
insb
outsl
arpl
add
add
je
insb
add
add
jae
ja
jb
outsb
je
add
fs
insb
cs
insb
add
add
insb
dec
je
je
je
jae
outsl
inc
outsl
jae
jb
outsl
jb
add
dec
je
jne
jb
dec
outsb
outsw
jb
popa
je
outsl
outsb
push
jb
arpl
jae
outsl
insb
xor
cs
insb
add
add
inc
jb
gs
outsb
jne
gs
imul
jae
add
push
imul
popa
addr16
jb
jo
add
add
gs
je
inc
imul
add
push
gs
imul
popa
addr16
jb
jo
add
add
dec
outsb
imul
inc
js
add
add
push
outsb
imul
imul
dec
insb
gs
outsb
imul
add
add
push
gs
imul
popa
jae
dec
bound
arpl
add
push
imul
popa
jae
dec
bound
arpl
add
dec
popa
jb
push
je
jb
push
dec
outsb
je
jb
popa
arpl
outsb
push
je
gs
insl
add
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
add
gs
outsb
imul
imul
outsl
inc
jb
addr16
jb
jo
add
inc
push
xor
cs
insb
add
add
push
imul
ja
add
add
je
outsl
jne
insb
gs
insb
imul
add
add
inc
gs
jns
je
insl
dec
gs
imul
inc
gs
jns
inc
outsl
insb
outsl
jb
jb
jae
add
add
inc
insb
insb
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
add
dec
outsl
popa
fs
outsb
jne
add
add
je
jne
dec
outsb
jne
add
add
insl
outsl
jbe
dec
outsb
jne
add
add
je
popa
jb
outsb
je
add
inc
gs
gs
popa
addr16
outsl
jae
add
inc
push
insb
addr16
jne
je
outsb
add
add
inc
outsb
popa
bound
imul
add
inc
gs
insb
addr16
je
insl
dec
outsb
je
add
push
gs
insb
addr16
je
insl
dec
outsb
je
add
inc
outsl
jo
dec
arpl
add
add
inc
fs
jae
push
imul
arpl
add
add
inc
jb
ja
outsl
arpl
push
arpl
add
ja
fs
add
inc
js
je
imul
js
add
push
imul
outsl
insl
push
outsl
imul
gs
arpl
add
jo
outsb
fs
outsb
jne
add
add
fs
arpl
insb
gs
je
jb
push
add
add
fs
imul
add
outsb
fs
outsl
je
data16
gs
popa
addr16
add
add
push
gs
imul
popa
arpl
outsb
je
add
add
arpl
outsb
jne
je
insl
add
add
fs
imul
add
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
add
jae
popa
addr16
gs
add
inc
gs
arpl
gs
imul
add
jae
push
jne
je
gs
popa
add
add
jbe
push
imul
add
inc
gs
insb
addr16
je
insl
add
add
push
gs
outsl
jbe
push
jb
jo
add
add
je
insb
popa
jae
dec
popa
insl
gs
add
add
je
inc
inc
js
add
push
gs
jne
jae
jb
outsl
jae
add
add
imul
ja
jb
insl
push
outsl
imul
inc
push
inc
imul
gs
imul
add
push
imul
je
gs
add
add
jb
imul
je
gs
add
add
je
jne
jae
jb
add
push
outsb
fs
gs
popa
addr16
imul
add
add
je
imul
popa
arpl
outsb
je
add
add
fs
insl
popa
addr16
add
add
push
gs
imul
outsb
add
add
dec
outsb
je
jb
arpl
arpl
add
data16
je
arpl
add
inc
outsb
jne
inc
imul
outsl
outsb
imul
push
gs
ja
imul
add
push
jne
je
popa
arpl
arpl
add
push
jb
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
add
imul
add
add
data16
popa
je
push
arpl
add
insb
insb
push
imul
outsl
arpl
add
inc
gs
insb
addr16
je
insb
dec
inc
add
add
push
gs
popa
jo
jne
add
add
dec
outsl
arpl
gs
outsl
jb
addr16
jne
fs
imul
add
jae
gs
push
popa
jb
insl
gs
jb
dec
outsb
outsw
push
add
add
outsb
fs
imul
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
add
inc
gs
outsb
jne
gs
jne
je
je
insl
add
add
inc
gs
jb
jns
outsb
jne
add
inc
gs
push
imul
add
inc
outsb
jne
inc
push
imul
add
add
je
imul
outsb
addr16
add
add
push
outsb
fs
gs
popa
addr16
add
add
push
imul
outsb
outsl
ja
gs
popa
addr16
add
add
inc
gs
gs
je
je
add
add
jo
push
arpl
add
dec
outsl
outsb
imul
push
arpl
add
outsb
imul
push
outsl
imul
push
imul
popa
jae
push
add
add
push
gs
jb
jo
add
add
inc
gs
imul
outsb
addr16
add
add
push
gs
imul
outsb
addr16
add
add
inc
imul
add
add
je
jne
jae
jb
outsl
jae
add
add
jae
popa
addr16
outsl
js
add
add
fs
je
imul
push
gs
gs
jae
inc
inc
add
add
je
inc
add
add
jne
inc
imul
gs
imul
add
add
inc
outsb
jne
inc
imul
gs
arpl
push
add
add
jae
dec
gs
popa
addr16
add
add
inc
imul
dec
gs
popa
addr16
add
add
push
jb
outsb
jae
popa
je
dec
gs
popa
add
add
inc
gs
gs
popa
addr16
add
add
imul
jae
addr16
add
add
push
je
outsb
push
arpl
add
inc
imul
add
add
inc
outsb
fs
popa
imul
push
gs
imul
js
push
add
add
inc
gs
jae
outsb
arpl
jns
je
je
add
add
dec
outsb
jbe
insb
imul
je
add
add
je
imul
add
outsl
ja
imul
jns
arpl
add
push
jb
arpl
outsl
jo
jo
outsb
jne
js
add
add
fs
je
push
imul
add
inc
gs
jb
jns
arpl
add
add
push
arpl
jo
jns
add
push
gs
arpl
gs
imul
add
je
jns
inc
outsl
insb
outsl
jb
add
inc
jb
ja
gs
push
add
add
dec
jne
addr16
jo
push
imul
add
je
imul
add
je
outsb
jne
je
insl
dec
inc
add
add
arpl
outsl
jo
jo
outsb
jne
add
add
fs
popa
jae
add
add
outsb
fs
gs
popa
addr16
popa
insb
insb
bound
imul
add
inc
gs
insb
popa
jae
dec
outsl
outsb
addr16
add
add
fs
arpl
push
add
add
outsb
dec
outsb
jo
je
gs
je
jo
add
add
outsl
jae
inc
gs
je
jo
add
add
je
arpl
insb
insb
push
outsl
jae
add
add
outsl
ja
imul
add
inc
jb
outsb
addr16
imul
push
outsl
jo
add
add
je
gs
je
jo
imul
add
inc
popa
jae
popa
fs
imul
add
add
popa
jb
jo
gs
jne
push
add
add
push
ja
je
push
imul
ja
add
add
je
jb
popa
insb
inc
gs
imul
js
add
add
je
arpl
insb
insb
dec
outsb
outsw
add
add
je
outsb
jne
je
insl
inc
outsl
jne
je
add
add
gs
je
push
imul
push
add
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
add
addr16
popa
imul
je
jo
gs
bound
arpl
add
inc
push
js
inc
add
add
imul
imul
inc
outsl
jb
popa
je
add
add
inc
outsb
fs
gs
imul
jae
add
inc
gs
imul
jae
add
add
imul
push
imul
jae
add
push
jb
outsb
je
imul
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
add
je
jb
jo
add
add
inc
gs
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
add
je
gs
inc
insb
addr16
popa
bound
gs
add
add
imul
ja
jb
insl
push
outsl
imul
add
dec
jae
push
add
dec
outsl
je
data16
imul
add
add
push
jb
arpl
outsl
jne
gs
jbe
outsb
je
add
inc
gs
popa
jo
jne
add
add
inc
gs
outsb
arpl
je
jb
add
inc
push
jo
jb
add
add
push
gs
imul
outsb
addr16
add
add
inc
jb
ja
popa
jo
imul
outsl
imul
push
add
add
jae
jb
dec
outsb
jne
add
add
push
imul
popa
bound
add
add
je
outsb
jne
je
je
add
add
dec
outsl
popa
fs
jne
jae
jb
add
add
je
popa
jb
outsb
je
add
dec
jae
insb
addr16
jne
je
outsb
inc
push
add
add
inc
gs
jb
jns
imul
add
jne
push
imul
add
dec
jae
imul
jae
bound
add
inc
gs
insb
imul
je
add
push
outsb
imul
add
add
jne
insb
push
arpl
add
je
imul
jb
popa
fs
jb
arpl
jae
add
add
inc
gs
outsl
jb
addr16
jne
fs
imul
add
insb
insb
push
imul
inc
gs
insb
popa
jae
dec
outsb
outsw
inc
js
add
add
push
imul
outsl
arpl
add
add
imul
popa
jae
inc
js
add
add
inc
gs
arpl
dec
outsb
outsw
add
add
je
arpl
insb
insb
dec
outsb
outsw
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
add
je
outsl
jb
addr16
jne
fs
imul
add
push
imul
add
inc
gs
jns
je
insl
dec
outsb
jne
add
dec
jae
arpl
imul
jae
outsl
outsl
insl
gs
add
inc
outsb
popa
bound
outsb
jne
je
insl
add
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
add
dec
outsl
outsb
imul
push
imul
add
je
outsl
outsb
imul
push
add
add
je
imul
outsw
add
add
je
outsl
arpl
add
add
push
gs
outsl
arpl
add
add
dec
popa
jo
imul
imul
push
arpl
outsb
push
outsl
inc
insb
imul
add
imul
arpl
outsb
add
add
inc
gs
imul
arpl
add
je
imul
jae
add
add
gs
dec
outsb
jne
add
add
je
outsb
jne
je
insl
dec
outsb
outsw
push
add
add
push
gs
outsb
jne
je
insl
dec
outsb
outsw
push
add
add
inc
push
js
push
add
push
push
fs
insb
add
add
je
push
popa
arpl
jb
jne
fs
outsl
outsb
je
outsb
je
arpl
add
je
push
outsl
outsl
insb
add
add
inc
gs
push
popa
jb
push
imul
inc
jb
ja
push
popa
jb
outsb
je
popa
arpl
jb
jne
add
add
outsb
push
push
popa
je
add
add
ja
push
popa
arpl
jb
jne
add
add
je
push
gs
inc
js
outsb
je
add
add
ja
push
gs
add
add
outsl
jae
push
push
popa
je
add
add
push
gs
imul
gs
add
add
inc
gs
push
popa
arpl
jb
jne
fs
imul
inc
gs
push
popa
jb
imul
gs
push
outsl
insb
outsl
jb
add
inc
gs
push
outsl
outsb
je
add
add
je
push
arpl
