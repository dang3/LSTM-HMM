stos
lahf
add
mov
add
add
sahf
add
push
lahf
add
sbb
add
cmp
add
call
lahf
add
push
mov
add
fcompl
add
aam
add
ficompl
add
add
add
xor
add
bound
add
jle
add
mov
add
mov
mov
add
add
add
push
mov
add
dec
mov
add
je
add
andb
add
add
mov
mov
add
hlt
mov
add
sbb
add
dec
mov
add
jl
add
xchg
mov
add
shlb
add
mov
add
or
add
push
mov
add
cmp
add
dec
mov
add
add
add
xchg
add
dec
pop
inc
add
jp
add
inc
add
add
add
add
add
jb
js
je
jb
arpl
jae
add
jae
arpl
outsl
add
add
add
add
add
jne
outsb
add
add
add
add
jb
jb
outsl
add
and
add
add
or
add
add
add
push
add
and
add
jb
outsl
add
or
add
dec
add
inc
add
add
jb
jb
outsl
add
or
add
add
add
inc
add
dec
add
add
jb
jb
outsl
add
or
add
add
add
add
add
add
add
add
add
add
je
je
add
jo
je
and
je
outsl
add
add
jae
add
add
push
add
dec
add
add
outsl
add
add
add
jb
outsl
add
and
je
push
add
add
jae
jae
add
bound
insb
add
and
add
jb
imul
and
outsb
add
je
imul
and
arpl
outsl
add
add
add
outsb
add
je
imul
imul
je
imul
or
push
add
imul
imul
imul
je
add
and
popa
add
add
jne
add
add
outsb
add
add
outsl
add
jb
and
popa
add
jo
insb
add
arpl
popa
add
add
outsb
add
add
add
je
and
imul
insl
add
jae
je
and
insb
add
imul
add
add
add
add
and
jb
add
jne
insb
add
add
data16
add
popa
add
add
outsb
add
and
popa
add
and
dec
add
dec
add
add
outsl
add
jo
imul
add
add
add
add
insb
add
sub
and
data16
outsb
add
je
imul
and
data16
outsl
add
and
popa
add
add
popa
add
add
add
add
outsl
add
jae
je
jb
jne
arpl
je
outsl
add
and
outsl
add
and
data16
outsl
add
and
inc
add
add
popa
add
outsb
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
insb
add
arpl
popa
add
add
add
outsb
add
outsl
add
insl
add
je
imul
or
add
add
add
add
add
add
add
add
je
je
add
jo
je
and
je
outsl
add
add
outsb
add
je
imul
imul
and
je
push
add
push
add
add
outsl
add
add
add
add
outsb
add
add
outsb
add
add
add
add
add
jae
and
imul
imul
je
add
and
popa
add
add
jne
add
add
outsb
add
add
outsl
add
jb
and
popa
add
jo
insb
add
arpl
popa
add
add
outsb
add
add
add
add
add
add
add
add
add
add
push
add
add
outsl
add
add
outsb
add
je
imul
imul
add
add
add
add
add
add
add
add
add
outsb
add
bound
insb
add
and
je
outsl
add
add
outsb
add
je
imul
imul
and
push
add
or
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
insb
add
ja
imul
imul
je
imul
imul
je
imul
or
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
jae
je
add
outsl
add
add
outsb
add
je
imul
imul
je
imul
or
add
add
add
add
add
add
add
add
add
jb
add
add
imul
jne
popa
add
add
jne
outsb
add
je
imul
and
arpl
popa
add
add
add
add
add
add
add
add
or
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
pop
add
outsb
add
js
imul
popa
add
add
imul
je
popa
add
insb
add
or
add
add
add
add
add
add
add
add
add
add
outsb
add
bound
insb
add
and
je
outsl
add
add
jo
add
and
arpl
outsl
add
jae
outsl
add
add
add
add
imul
or
add
add
add
add
add
add
add
add
add
add
outsb
add
js
jo
add
je
add
add
add
jo
and
add
jb
outsl
add
or
add
add
add
add
add
add
add
add
add
add
outsb
add
js
jo
add
je
add
add
jne
insb
add
add
add
add
add
add
add
imul
add
jb
jb
outsl
add
or
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
je
push
add
add
add
add
add
add
add
add
add
add
add
add
bound
outsl
add
je
sub
sub
and
push
add
add
add
outsb
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
add
jbe
imul
outsb
add
add
je
or
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
popa
add
add
insl
add
outsb
add
add
add
add
add
add
add
add
add
add
add
insb
add
popa
add
add
add
add
outsl
add
outsb
add
add
jne
jo
jo
outsl
add
je
and
outsb
add
je
and
insb
add
popa
add
add
add
add
add
add
add
add
sbb
or
add
fcomps
inc
add
add
add
add
add
sbb
adc
add
fcoms
inc
add
add
add
add
add
pop
inc
add
add
add
push
inc
add
add
add
inc
add
add
add
push
inc
add
add
add
add
add
inc
add
add
add
adc
add
inc
adc
add
add
add
adc
and
add
call
add
add
adc
jns
add
test
inc
add
add
mov
inc
add
add
add
add
adc
dec
add
arpl
jb
outsl
add
outsl
add
je
and
push
add
jae
jne
popa
add
add
sub
sub
and
push
add
outsb
add
add
add
add
add
jb
popa
add
jns
add
add
or
or
add
add
add
add
add
add
jo
jb
outsl
add
jb
popa
add
and
outsb
add
insl
add
and
jne
outsb
add
outsb
add
ja
outsb
add
add
add
add
jne
outsb
add
add
add
add
jb
jb
outsl
add
and
or
or
push
add
outsl
add
jb
popa
add
cmp
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
or
add
add
add
add
add
or
add
nop
add
add
add
add
add
dec
add
push
add
inc
add
add
add
add
add
add
add
jae
jb
add
jae
gs
popa
insb
jne
add
jae
gs
popa
insb
jne
add
jae
insb
insb
outsl
arpl
add
add
je
jb
arpl
jae
imul
popa
je
outsl
outsb
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outsl
js
add
push
add
push
add
add
add
add
add
add
add
dec
add
add
insl
add
add
jae
add
add
add
add
add
add
dec
add
dec
add
add
add
and
jns
jns
jns
jns
add
dec
add
das
add
add
add
jns
add
add
push
add
add
add
inc
add
add
add
inc
add
arpl
add
bound
add
add
add
dec
add
jbe
add
bound
add
add
add
dec
add
je
outsl
add
add
add
push
add
jo
je
add
bound
add
add
inc
add
add
jae
je
add
add
dec
add
insb
add
add
add
dec
add
outsb
add
add
add
inc
add
jb
imul
dec
add
jb
arpl
push
add
bound
jb
jne
popa
add
jns
add
add
dec
add
outsb
add
popa
add
jns
add
inc
add
arpl
add
dec
add
jbe
add
dec
add
je
add
push
add
jo
add
inc
add
add
add
jne
insb
add
add
jne
outsb
add
add
popa
add
add
inc
add
jb
add
dec
add
jb
add
inc
add
bound
add
dec
add
outsb
add
add
popa
add
add
add
jns
add
add
inc
add
imul
jns
add
add
push
add
jne
jb
jae
add
jns
add
add
push
add
add
add
add
jns
add
push
add
add
add
jns
add
dec
add
outsb
add
add
add
add
push
add
outsb
add
add
add
add
push
add
je
add
inc
add
imul
push
add
add
add
add
add
dec
add
outsb
add
add
jne
outsb
add
add
cmp
cmp
add
add
fs
dec
dec
dec
dec
and
and
jns
add
das
fs
jns
add
add
push
dec
add
inc
dec
add
inc
arpl
bound
add
add
dec
outsl
jbe
insl
bound
add
add
dec
arpl
gs
push
gs
gs
bound
add
add
addr16
je
add
insb
jns
add
add
outsb
add
add
inc
jo
imul
arpl
add
inc
bound
popa
jb
add
add
dec
popa
outsb
jne
jb
add
add
jbe
dec
arpl
gs
inc
jne
add
insb
add
outsb
add
jns
inc
jo
add
jb
inc
bound
dec
popa
outsb
add
je
jb
popa
jns
add
add
imul
jne
jae
popa
jns
add
add
outsb
gs
popa
jns
add
push
jne
jae
popa
jns
dec
outsl
outsb
fs
jns
add
outsb
fs
jns
add
je
inc
jb
add
add
add
add
outsb
add
outsb
add
les
cmp
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
test
test
test
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
jnp
jge
jg
addl
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
decl
add
adc
inc
add
add
add
lea
add
add
push
mov
pushl
push
call
push
call
test
jne
push
call
jmp
pop
ret
push
mov
pushl
push
call
push
call
pop
ret
push
mov
cmpl
je
mov
mov
sub
mov
decl
mov
inc
cmpl
jne
mov
pop
ret
push
mov
mov
mov
mov
push
push
mov
cmp
jbe
lea
cmp
jae
dec
lea
test
je
mov
mov
dec
dec
dec
jne
jmp
test
je
mov
sub
mov
mov
inc
dec
jne
mov
pop
pop
pop
ret
push
mov
cmpl
je
pushl
pushl
pushl
call
add
mov
pop
ret
push
mov
cmpl
jne
xor
pop
ret
mov
mov
decl
je
mov
cmp
jne
inc
inc
jmp
movzbl
movzbl
sub
pop
ret
push
mov
mov
xor
cmp
jbe
mov
xor
inc
cmp
jb
pop
ret
push
xor
mov
mov
mov
lods
mov
pop
ret
push
mov
mov
xor
test
je
cmp
je
inc
cmpb
jne
pop
ret
push
mov
push
mov
test
jne
cmp
je
or
jmp
push
mov
test
jne
xor
inc
jmp
xor
jmp
mov
push
mov
cmp
jne
cmp
jne
mov
movsbl
movsbl
sub
jne
mov
sub
test
je
inc
mov
movsbl
movsbl
sub
je
jmp
push
call
pop
mov
cmp
jne
push
call
pop
mov
cmp
jne
test
je
test
je
xor
test
jle
movsbl
movsbl
sub
jne
inc
inc
inc
cmp
jl
jmp
sub
xor
test
setg
mov
neg
sbb
pop
lea
and
pop
pop
pop
ret
push
mov
push
mov
andl
push
push
mov
add
cmpl
jbe
mov
add
test
je
mov
push
push
add
push
pushl
call
add
test
je
incl
mov
add
cmp
jb
xor
pop
pop
leave
ret
mov
mov
lea
movzwl
mov
lea
mov
add
jmp
push
mov
sub
push
push
movl
movl
movl
movw
movb
movl
movl
movl
movw
movb
call
mov
push
mov
lea
push
push
call
push
lea
push
push
call
lea
push
call
mov
lea
push
call
add
pop
mov
pop
leave
ret
push
mov
sub
push
push
push
xor
xor
mov
mov
inc
cmp
jl
xor
xor
mov
divl
mov
lea
movzbl
add
add
and
jns
dec
or
inc
mov
mov
lea
mov
mov
movzbl
inc
mov
cmp
jl
xor
cmp
jbe
add
and
jns
dec
or
inc
lea
mov
add
and
jns
dec
or
inc
mov
lea
mov
mov
movzbl
mov
mov
mov
add
and
jns
dec
or
inc
mov
xor
inc
cmp
jb
mov
pop
pop
pop
leave
ret
push
mov
push
push
mov
mov
mov
cmp
jne
xor
inc
jmp
mov
mov
sub
test
je
push
push
add
jmp
lea
shr
movl
je
lea
mov
mov
movzwl
mov
shr
and
movzwl
jns
dec
or
inc
movzwl
test
je
cmp
jne
add
add
incl
addl
cmp
jb
add
mov
test
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
push
mov
push
push
mov
mov
mov
test
jne
inc
jmp
push
push
lea
jmp
add
push
call
mov
test
jne
mov
add
push
call
mov
test
je
mov
test
jne
mov
add
andl
jmp
mov
add
cmp
jae
lea
cmpb
je
push
jmp
movzwl
push
pushl
call
mov
test
je
add
mov
jmp
mov
add
addl
cmpl
jne
add
mov
test
jne
inc
pop
pop
pop
leave
ret
xor
jmp
push
mov
sub
andl
push
mov
test
je
mov
cmp
jne
mov
lea
add
cmpl
mov
mov
jne
push
push
pushl
push
call
mov
test
je
mov
push
push
push
pop
mov
mov
rep
mov
push
pop
mov
add
rep
movzwl
mov
imul
add
push
push
mov
mov
lea
push
call
mov
add
cmp
jbe
add
push
lea
push
mov
add
push
call
add
mov
xor
xor
cmp
jae
mov
jmp
mov
lea
mov
mov
pushl
add
mov
mov
mov
add
add
push
push
call
movzwl
add
inc
cmp
jl
mov
push
call
pop
test
je
push
call
pop
test
jne
push
push
push
call
andl
jmp
mov
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
sub
push
push
or
push
mov
push
xor
mov
mov
mov
mov
lea
push
push
movl
movl
movl
mov
movl
movb
movl
movl
mov
movl
movl
movl
movw
movw
movl
movl
movw
movl
movl
movl
movw
mov
movl
movl
movl
mov
movl
movl
movl
movw
movl
movl
movl
movw
movl
movw
call
push
lea
push
push
call
add
lea
push
push
push
lea
push
call
push
call
push
mov
lea
push
push
call
add
lea
push
push
push
lea
push
call
push
call
push
mov
lea
push
push
call
add
lea
push
push
push
lea
push
call
push
call
push
mov
lea
push
push
call
add
lea
push
push
push
lea
push
call
push
call
push
mov
lea
push
push
call
add
lea
push
push
push
lea
push
call
push
call
push
mov
lea
push
push
call
add
lea
push
push
push
lea
push
call
push
call
push
mov
call
push
mov
push
push
call
push
push
mov
call
push
call
pushl
mov
push
call
pushl
push
call
mov
cmp
jne
push
call
push
lea
push
push
call
add
lea
push
push
push
lea
push
call
push
call
push
lea
push
push
mov
call
push
push
lea
push
pushl
movl
call
add
lea
push
push
call
mov
cmp
je
push
mov
mov
pop
mov
mov
mov
mov
mov
mov
mov
add
mov
call
pop
pop
pop
leave
ret
push
mov
sub
push
push
mov
push
xor
lea
push
push
movl
movl
movl
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movw
movl
movl
movl
movl
movl
movl
movw
mov
movl
movl
movl
movl
movw
mov
movl
movl
movl
movl
movl
call
push
lea
push
push
call
push
lea
push
push
call
push
lea
push
push
call
push
lea
push
push
call
push
lea
push
push
call
add
push
lea
push
push
call
add
lea
push
push
push
lea
push
call
push
call
mov
lea
push
push
push
lea
push
call
push
call
mov
lea
push
push
push
lea
push
call
push
call
mov
lea
push
push
push
lea
push
call
push
call
mov
lea
push
push
push
lea
push
call
push
call
push
push
mov
call
mov
push
push
call
push
call
mov
cmpl
jne
push
call
push
call
xor
jmp
xor
push
call
pop
pop
leave
ret
push
mov
sub
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
call
mov
call
call
push
lea
push
push
push
call
test
je
call
call
call
push
call
call
call
pop
leave
ret
int3
mov
mov
test
je
xor
mov
test
jne
cmp
jb
cmpl
je
jmp
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
cmp
jb
cmpl
je
push
push
and
and
cmp
pop
pop
jne
jmp
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
inc
add
inc
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
negl
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
adc
add
pop
inc
add
inc
add
pop
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
inc
add
pop
inc
add
pop
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
push
pop
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
pop
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
lods
pop
inc
add
inc
add
pop
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
mov
push
mov
cmpl
jne
call
pushl
call
push
call
pop
pop
pop
ret
push
push
call
lea
push
call
xor
cmp
jne
push
push
push
push
call
mov
cmp
je
mov
jmp
mov
cmpl
jne
mov
cmp
jne
cmpl
jbe
xor
cmp
setne
mov
call
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jns
push
call
pop
call
mov
call
mov
call
test
jns
push
call
pop
call
test
jns
push
call
pop
push
call
pop
cmp
je
push
call
pop
call
testb
je
movzwl
jmp
push
pop
push
push
push
push
call
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
mov
cmpl
jne
push
call
call
movl
mov
call
ret
call
jmp
pxor
push
push
mov
and
test
jne
mov
and
shr
je
lea
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
dec
jne
test
je
mov
shr
je
jmp
lea
movdqa
lea
dec
jne
and
je
mov
xor
shr
je
mov
lea
dec
jne
and
je
mov
inc
dec
jne
pop
pop
ret
mov
neg
add
sub
xor
push
mov
and
je
mov
inc
dec
jne
shr
je
mov
lea
dec
jne
pop
jmp
push
call
mov
xor
ret
push
mov
and
test
jne
mov
and
shr
je
jmp
lea
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
lea
dec
jne
test
je
mov
shr
test
je
lea
movdqa
movdqa
lea
lea
dec
jne
and
je
mov
shr
je
mov
mov
lea
lea
dec
jne
mov
and
je
mov
mov
inc
inc
dec
jne
pop
pop
pop
pop
ret
mov
sub
sub
push
mov
mov
and
je
mov
mov
inc
inc
dec
jne
shr
je
mov
mov
lea
lea
dec
jne
pop
jmp
mov
push
mov
mov
mov
cmpl
jne
cmpl
jne
mov
cmp
je
cmp
je
cmp
je
cmp
jne
call
xor
pop
ret
push
call
xor
ret
mov
push
mov
push
call
test
je
push
push
call
test
je
pushl
call
pop
ret
mov
push
mov
pushl
call
pop
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
push
call
mov
push
call
push
call
push
call
push
call
push
call
push
call
add
pop
ret
mov
push
mov
push
mov
xor
jmp
test
jne
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
cmpl
je
push
call
pop
test
je
pushl
call
pop
call
push
push
call
pop
pop
test
jne
push
push
push
call
mov
mov
pop
mov
cmp
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
pop
test
je
push
push
push
call
xor
pop
ret
push
push
call
push
call
pop
andl
xor
inc
cmp
je
mov
mov
mov
cmpl
jne
pushl
mov
call
mov
mov
test
je
pushl
call
mov
mov
mov
mov
sub
mov
cmp
jb
call
cmp
je
cmp
jb
pushl
call
mov
call
mov
call
pushl
call
mov
pushl
call
cmp
jne
cmp
je
mov
mov
mov
mov
mov
mov
jmp
movl
cmpl
jae
mov
mov
test
je
call
addl
jmp
movl
cmpl
jae
mov
mov
test
je
call
addl
jmp
movl
call
cmpl
jne
movl
push
call
pop
pushl
call
cmpl
je
push
call
pop
ret
call
ret
mov
push
mov
push
push
pushl
call
add
pop
ret
mov
push
mov
push
push
pushl
call
add
pop
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
mov
push
mov
call
pushl
call
pop
push
call
int3
mov
push
mov
xor
mov
cmp
je
inc
cmp
jb
xor
pop
ret
mov
pop
ret
mov
push
mov
sub
mov
xor
mov
push
push
mov
push
push
call
mov
xor
pop
mov
cmp
je
push
call
pop
cmp
je
push
call
pop
test
jne
cmpl
je
cmp
je
push
push
mov
push
call
add
test
jne
push
mov
push
push
mov
call
mov
test
jne
push
push
push
call
add
test
je
xor
push
push
push
push
push
call
push
call
inc
pop
cmp
jbe
push
call
lea
mov
sub
push
sar
push
sub
push
push
call
add
test
jne
push
mov
push
push
call
add
test
jne
pushl
push
push
call
add
test
jne
push
push
push
call
add
jmp
push
push
push
push
push
jmp
push
call
mov
cmp
je
cmp
je
xor
mov
mov
cmp
je
inc
cmp
jb
push
lea
push
lea
push
mov
call
pop
push
lea
push
push
call
mov
pop
pop
xor
pop
call
leave
ret
push
call
pop
cmp
je
push
call
pop
test
jne
cmpl
jne
push
call
push
call
pop
pop
ret
mov
push
mov
push
call
mov
test
je
mov
mov
mov
push
cmp
je
add
lea
cmp
jb
add
cmp
jae
cmp
je
xor
test
je
mov
test
jne
xor
jmp
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
push
mov
mov
mov
cmp
jne
push
pop
mov
andl
add
cmp
jl
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
pop
mov
pop
or
pop
pop
pop
ret
mov
push
push
xor
cmp
jne
call
mov
test
jne
mov
mov
cmp
ja
test
je
test
je
cmp
jne
xor
test
sete
mov
movzbl
push
call
pop
test
je
inc
inc
jmp
cmp
ja
inc
mov
test
jne
pop
mov
pop
ret
cmpl
jne
call
push
mov
push
xor
test
jne
or
jmp
cmp
je
inc
push
call
pop
lea
mov
test
jne
push
inc
push
call
mov
pop
pop
mov
test
je
mov
push
jmp
push
call
cmpb
pop
lea
je
push
push
call
pop
pop
mov
test
je
push
push
push
call
add
test
jne
add
add
cmpb
jne
pushl
call
andl
andl
movl
xor
pop
pop
pop
pop
ret
pushl
call
andl
or
jmp
xor
push
push
push
push
push
call
int3
mov
push
mov
push
mov
push
xor
push
mov
mov
mov
movl
cmp
je
mov
addl
mov
mov
cmpb
jne
xor
cmp
mov
sete
inc
mov
jmp
incl
test
je
mov
mov
inc
mov
mov
movzbl
push
inc
call
pop
test
je
incl
cmpl
je
mov
mov
incl
mov
inc
mov
mov
test
je
cmpl
jne
cmp
je
cmp
jne
test
je
movb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
dec
test
je
movb
inc
incl
test
jne
mov
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
movsbl
push
test
je
call
pop
test
je
mov
mov
incl
mov
inc
incl
mov
mov
incl
mov
jmp
call
pop
test
je
inc
incl
incl
mov
inc
jmp
test
je
movb
inc
mov
incl
mov
jmp
mov
pop
pop
test
je
andl
incl
leave
ret
mov
push
mov
sub
push
xor
push
push
cmp
jne
call
push
mov
push
push
mov
call
mov
mov
cmp
je
mov
cmp
jne
mov
mov
lea
push
push
push
lea
call
mov
add
cmp
jae
mov
cmp
jae
mov
shl
lea
cmp
jb
push
call
mov
pop
cmp
je
mov
lea
push
add
push
push
lea
call
mov
add
dec
mov
mov
xor
jmp
or
pop
pop
pop
leave
ret
mov
push
mov
sub
push
push
call
mov
xor
cmp
jne
xor
jmp
cmp
je
add
cmp
jne
add
cmp
jne
push
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
pop
mov
cmp
je
push
push
pushl
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
push
call
mov
jmp
push
call
xor
pop
pop
pop
leave
ret
mov
push
mov
sub
push
lea
push
call
push
push
pop
push
call
pop
pop
xor
cmp
jne
or
jmp
lea
mov
mov
cmp
jae
add
orl
movw
mov
movw
movb
mov
mov
mov
add
lea
add
cmp
jb
push
push
cmp
je
mov
cmp
je
mov
add
mov
add
mov
mov
cmp
jl
mov
cmp
jge
mov
push
push
call
pop
pop
test
je
addl
lea
mov
cmp
jae
add
orl
andl
andb
andl
movw
movw
movb
mov
add
add
lea
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
cmp
je
mov
mov
test
je
test
jne
push
call
test
je
mov
and
mov
sar
shl
add
mov
mov
mov
mov
mov
mov
push
lea
push
call
test
je
incl
addl
inc
incl
cmp
jl
xor
mov
shl
add
mov
cmp
je
cmp
je
orb
jmp
movb
test
jne
push
pop
jmp
lea
neg
sbb
add
push
call
mov
cmp
je
test
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
push
lea
push
call
test
je
incl
jmp
orb
movl
inc
cmp
jl
pushl
call
xor
pop
pop
pop
leave
ret
or
jmp
mov
push
mov
mov
push
mov
cmp
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
mov
push
mov
cmp
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
call
ret
call
ret
mov
push
pushl
call
mov
test
jne
pushl
call
mov
push
pushl
call
mov
pop
ret
mov
cmp
je
push
pushl
call
call
orl
mov
cmp
je
push
call
orl
jmp
push
push
call
push
call
mov
movl
andl
xor
inc
mov
mov
movb
movb
movl
push
call
pop
andl
pushl
call
movl
call
push
call
pop
mov
mov
mov
test
jne
mov
mov
pushl
call
pop
movl
call
call
ret
xor
inc
mov
push
call
pop
ret
push
call
pop
ret
mov
push
push
call
pushl
mov
call
call
mov
test
jne
push
push
call
mov
pop
pop
test
je
push
pushl
pushl
call
call
test
je
push
push
call
pop
pop
call
orl
mov
jmp
push
call
pop
xor
push
call
pop
mov
pop
ret
mov
push
call
mov
test
jne
push
call
pop
mov
pop
ret
push
push
call
mov
test
je
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
cmp
je
push
call
pop
push
call
pop
andl
mov
test
je
push
call
test
jne
cmp
je
push
call
pop
movl
call
push
call
pop
movl
mov
test
je
push
call
pop
cmp
je
cmp
je
cmpl
jne
push
call
pop
movl
call
push
call
pop
call
ret
mov
push
call
pop
ret
mov
push
call
pop
ret
int3
int3
mov
push
push
call
mov
test
jne
call
xor
pop
ret
push
mov
push
push
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
cmpl
mov
mov
je
cmpl
je
cmpl
je
test
jne
mov
mov
mov
movl
mov
mov
call
mov
cmp
je
pushl
push
call
test
je
call
pushl
mov
call
pushl
mov
call
pushl
mov
call
pushl
mov
call
mov
call
test
je
mov
push
pushl
call
call
mov
cmp
je
push
push
call
mov
pop
pop
test
je
push
pushl
pushl
call
call
test
je
push
push
call
pop
pop
call
orl
mov
xor
inc
jmp
call
xor
pop
pop
ret
push
push
push
call
xor
test
setne
mov
mov
ret
int3
int3
int3
push
pushl
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
pushl
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
sub
push
mov
push
mov
xor
push
mov
movb
movl
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
testb
jne
mov
lea
mov
mov
mov
mov
cmp
je
lea
lea
mov
lea
mov
mov
mov
test
je
mov
call
movb
test
js
jg
mov
mov
cmp
jne
cmpb
je
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
movl
jmp
mov
cmpl
jne
cmpl
je
push
call
add
test
je
mov
push
push
call
add
mov
mov
call
mov
cmp
je
push
push
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
mov
cmp
je
push
push
mov
call
jmp
mov
push
mov
sub
mov
andl
andl
push
push
mov
mov
cmp
je
test
je
not
mov
jmp
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
cmp
jne
mov
jmp
test
jne
mov
or
shl
or
mov
not
mov
pop
pop
pop
leave
ret
push
push
call
call
mov
test
je
andl
call
jmp
xor
inc
ret
mov
movl
call
call
ret
push
call
mov
ret
mov
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
mov
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
mov
push
mov
mov
pushl
call
pop
ret
push
push
call
xor
inc
mov
xor
cmp
jne
call
push
call
push
call
pop
pop
mov
lea
cmp
je
mov
jmp
push
call
pop
mov
cmp
jne
call
movl
xor
jmp
push
call
pop
mov
cmp
jne
push
push
call
test
jne
push
call
pop
call
movl
mov
jmp
mov
jmp
push
call
pop
movl
call
mov
call
ret
push
call
pop
ret
mov
push
mov
mov
push
lea
cmpl
jne
push
call
pop
test
jne
push
call
pop
pushl
call
pop
pop
ret
mov
push
mov
mov
mov
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
push
cmp
je
mov
imul
add
add
cmp
jb
imul
add
pop
cmp
jae
cmp
je
xor
pop
ret
pushl
call
ret
push
push
call
xor
mov
mov
mov
cmp
jg
je
mov
push
pop
sub
je
sub
je
sub
je
sub
jne
call
mov
mov
test
jne
or
jmp
mov
mov
jmp
pushl
mov
call
pop
lea
mov
jmp
mov
sub
je
sub
je
dec
je
call
movl
call
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
movl
push
call
mov
xor
cmpl
je
cmp
jne
push
call
cmp
je
push
call
pop
xor
mov
cmp
je
cmp
je
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
movl
cmp
jne
mov
mov
mov
add
cmp
jge
mov
imul
mov
mov
incl
jmp
call
mov
movl
call
cmp
jne
pushl
push
call
pop
jmp
mov
mov
cmpl
je
push
call
pop
ret
push
call
pop
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
xor
call
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
sub
mov
xor
mov
push
mov
push
cmp
je
push
call
pop
andl
push
lea
push
push
call
lea
mov
lea
add
mov
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
lea
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
lea
push
call
test
jne
test
jne
cmp
je
push
call
pop
mov
pop
xor
pop
call
leave
ret
mov
push
push
mov
push
push
call
add
push
call
push
call
pop
ret
mov
push
mov
pushl
call
test
je
pop
jmp
pushl
pushl
pushl
pushl
pushl
call
int3
xor
push
push
push
push
push
call
add
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
pushl
call
test
je
pushl
call
pop
test
je
xor
inc
pop
ret
xor
pop
ret
mov
push
mov
mov
xor
cmp
je
inc
cmp
jb
lea
cmp
ja
push
pop
pop
ret
mov
pop
ret
add
push
pop
cmp
sbb
and
add
pop
ret
call
test
jne
mov
ret
add
ret
mov
push
mov
push
push
push
mov
push
pushl
call
pushl
mov
mov
call
mov
cmp
jb
mov
sub
lea
cmp
jb
push
call
mov
lea
pop
cmp
jae
mov
cmp
jae
mov
add
cmp
jb
push
pushl
call
pop
pop
test
jne
lea
cmp
jb
push
pushl
call
pop
pop
test
je
sar
push
lea
call
mov
pushl
mov
call
mov
add
push
call
mov
mov
jmp
xor
pop
pop
pop
leave
ret
mov
push
push
push
call
pop
pop
mov
push
call
mov
mov
test
jne
push
pop
pop
ret
andl
xor
pop
ret
push
push
call
call
andl
pushl
call
pop
mov
movl
call
mov
call
ret
call
ret
mov
push
mov
pushl
call
neg
sbb
neg
pop
dec
pop
ret
mov
push
push
xor
pushl
call
mov
add
cmp
jb
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
cmpl
jne
xor
mov
cmp
sete
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
add
movzwl
push
push
movzwl
xor
push
lea
test
je
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
movl
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
movl
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
xor
cmpl
sete
mov
ret
mov
movl
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
mov
push
mov
sub
mov
xor
mov
mov
push
mov
mov
push
push
mov
call
andl
cmpl
mov
jne
push
call
mov
test
je
mov
push
push
call
test
je
mov
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
mov
test
je
push
push
call
push
call
mov
mov
mov
mov
cmp
je
cmp
je
push
call
pushl
mov
call
mov
test
je
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
orl
jmp
mov
cmp
je
push
call
test
je
call
mov
test
je
mov
cmp
je
push
call
test
je
pushl
call
mov
pushl
call
test
je
pushl
pushl
pushl
pushl
call
jmp
xor
mov
pop
pop
xor
pop
call
leave
ret
mov
push
mov
push
mov
push
test
je
mov
test
jne
call
push
pop
mov
call
mov
pop
pop
pop
ret
mov
test
jne
xor
mov
jmp
mov
cmpw
je
add
dec
jne
test
je
sub
movzwl
mov
add
test
je
dec
jne
xor
test
jne
mov
call
push
pop
mov
mov
jmp
mov
push
mov
mov
push
mov
push
push
test
jne
test
jne
cmp
jne
xor
pop
pop
pop
pop
ret
test
je
mov
test
jne
call
push
pop
mov
call
mov
jmp
test
jne
xor
mov
jmp
mov
test
jne
xor
mov
jmp
mov
cmp
jne
mov
sub
movzwl
mov
add
test
je
dec
jne
jmp
mov
sub
movzwl
mov
add
test
je
dec
je
dec
jne
test
jne
xor
mov
test
jne
xor
cmp
jne
mov
push
mov
pop
jmp
mov
call
push
pop
mov
mov
jmp
mov
push
mov
mov
mov
add
test
jne
sub
sar
dec
pop
ret
mov
push
mov
push
mov
push
test
je
mov
test
jne
call
push
pop
mov
call
mov
pop
pop
pop
ret
mov
test
jne
mov
jmp
mov
sub
movzwl
mov
add
test
je
dec
jne
xor
test
jne
mov
call
push
pop
mov
mov
jmp
mov
push
mov
mov
test
js
cmp
jle
cmp
jne
mov
pop
ret
mov
mov
pop
ret
call
movl
call
or
pop
ret
cmp
jne
repz
jmp
mov
push
mov
mov
push
mov
movb
test
jne
call
mov
mov
mov
mov
mov
mov
cmp
je
mov
test
jne
call
mov
mov
cmp
je
mov
mov
test
jne
call
mov
mov
testb
jne
orl
movb
jmp
mov
mov
mov
mov
mov
pop
pop
ret
mov
push
mov
sub
pushl
lea
call
movzbl
mov
mov
test
jne
cmpl
je
mov
mov
movzwl
and
jmp
xor
test
je
xor
inc
cmpb
je
mov
andl
leave
ret
mov
push
mov
push
push
pushl
push
call
add
pop
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
push
push
mov
push
xor
lea
push
push
call
xor
movzwl
mov
mov
mov
mov
shl
or
lea
stos
stos
stos
mov
add
lea
sub
mov
mov
mov
inc
dec
jne
lea
mov
mov
mov
inc
dec
jne
pop
pop
ret
mov
push
mov
sub
mov
xor
mov
push
push
lea
push
pushl
call
mov
test
je
xor
mov
inc
cmp
jb
mov
movb
test
je
lea
movzbl
movzbl
cmp
ja
sub
inc
push
lea
push
push
call
add
mov
add
test
jne
push
pushl
lea
pushl
push
push
lea
push
push
push
call
xor
push
pushl
lea
push
push
push
lea
push
push
pushl
push
call
add
push
pushl
lea
push
push
push
lea
push
push
pushl
push
call
add
xor
movzwl
test
je
orb
mov
jmp
test
je
orb
mov
mov
jmp
mov
inc
cmp
jb
jmp
lea
movl
xor
sub
mov
lea
add
lea
cmp
ja
orb
lea
jmp
cmp
ja
orb
lea
mov
jmp
movb
inc
cmp
jb
mov
pop
xor
pop
call
leave
ret
push
push
call
call
mov
mov
test
je
cmpl
je
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
andl
mov
mov
cmp
je
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
mov
mov
mov
push
call
movl
call
jmp
mov
push
call
pop
ret
mov
push
mov
sub
push
xor
push
lea
call
mov
cmp
jne
movl
call
cmp
je
mov
andl
jmp
cmp
jne
movl
call
jmp
cmp
jne
mov
mov
movl
jmp
cmp
je
mov
andl
mov
pop
leave
ret
mov
push
mov
sub
mov
xor
mov
push
mov
push
mov
push
call
mov
xor
mov
cmp
jne
mov
call
xor
jmp
mov
xor
cmp
je
incl
add
cmp
jb
cmp
je
cmp
je
movzwl
push
call
test
je
lea
push
push
call
test
je
push
lea
push
push
call
xor
inc
add
mov
mov
cmp
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
lea
push
push
call
mov
add
imul
mov
lea
mov
jmp
mov
test
je
movzbl
movzbl
jmp
mov
mov
or
movzbl
inc
cmp
jbe
mov
add
cmpb
jne
mov
incl
add
cmpl
mov
jb
mov
mov
movl
call
push
mov
lea
lea
pop
mov
mov
add
add
dec
jne
mov
call
jmp
orb
inc
cmp
jbe
add
cmpb
jne
lea
mov
orb
inc
dec
jne
mov
call
mov
mov
jmp
mov
xor
movzwl
mov
shl
or
lea
stos
stos
stos
jmp
cmp
jne
or
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
orl
call
mov
mov
call
mov
mov
call
mov
cmp
je
push
call
pop
mov
test
je
mov
mov
mov
rep
andl
push
pushl
call
pop
pop
mov
test
jne
mov
pushl
call
test
jne
mov
cmp
je
push
call
pop
mov
push
mov
call
testb
jne
testb
jne
push
call
pop
andl
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
pushl
call
test
jne
mov
cmp
je
push
call
pop
mov
push
call
movl
call
jmp
push
call
pop
ret
jmp
cmp
jne
cmp
je
push
call
pop
call
movl
jmp
andl
mov
call
ret
cmpl
jne
push
call
pop
movl
xor
ret
mov
push
mov
cmpl
je
pushl
push
pushl
call
test
jne
push
call
mov
call
push
call
pop
mov
pop
pop
ret
mov
push
mov
mov
push
push
test
je
mov
test
jne
call
push
pop
mov
call
mov
jmp
mov
test
jne
mov
jmp
mov
sub
mov
mov
inc
test
je
dec
jne
test
jne
movb
call
push
pop
mov
mov
jmp
xor
pop
pop
pop
ret
mov
push
mov
push
push
xor
pushl
call
mov
pop
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
xor
push
pushl
pushl
call
mov
add
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
xor
pushl
pushl
call
mov
pop
pop
test
jne
cmp
je
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
mov
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
lea
movl
cmpl
je
mov
test
je
push
call
cmpl
je
mov
test
je
push
call
add
decl
jne
mov
add
push
call
pop
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
push
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
lea
movl
cmpl
je
mov
test
je
push
call
cmpl
je
mov
test
je
push
call
add
decl
jne
mov
add
push
call
pop
pop
mov
pop
pop
ret
mov
push
mov
push
push
mov
mov
xor
push
cmp
je
cmp
je
mov
cmp
je
cmp
jne
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
mov
sub
push
call
mov
mov
sub
push
call
mov
sub
push
call
pushl
call
add
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
lea
movl
cmpl
je
mov
cmp
je
cmp
jne
push
call
pop
cmp
je
mov
cmp
je
cmp
jne
push
call
pop
add
decl
jne
push
call
pop
pop
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
test
je
push
mov
cmp
je
push
mov
call
pop
test
je
push
call
cmpl
pop
jne
cmp
je
push
call
pop
mov
pop
jmp
xor
pop
pop
ret
push
push
call
call
mov
mov
test
je
cmpl
je
call
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
andl
pushl
add
push
call
pop
pop
mov
movl
call
jmp
push
call
pop
mov
ret
int3
int3
int3
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
pushl
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmpl
jne
push
mov
call
mov
mov
call
jmp
popl
add
pop
pop
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
pushl
pushl
pushl
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
pushl
pushl
pushl
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
pushl
call
add
pop
ret
call
test
je
push
call
pop
testb
je
push
push
push
call
add
push
call
int3
mov
push
mov
mov
test
je
sub
cmpl
jne
push
call
pop
pop
ret
andl
ret
mov
push
mov
cmpl
jne
call
movl
call
or
pop
ret
pushl
push
pushl
call
pop
ret
push
call
pop
ret
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmpl
jne
push
call
pop
push
call
push
call
leave
ret
mov
push
mov
sub
mov
xor
mov
mov
push
xor
push
push
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
mov
sub
dec
cmp
jge
inc
mov
mov
cmp
jne
mov
mov
mov
mov
mov
xor
cmp
push
push
pushl
setne
pushl
lea
push
pushl
call
mov
mov
cmp
jne
xor
jmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
call
pop
cmp
je
movl
add
mov
jmp
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
mov
push
push
push
pushl
pushl
pushl
call
mov
cmp
je
mov
test
je
mov
cmp
je
cmp
jg
push
pushl
push
pushl
pushl
pushl
call
jmp
mov
cmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
movl
add
jmp
push
call
pop
cmp
je
movl
add
mov
jmp
xor
cmp
je
pushl
push
pushl
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
pushl
push
push
pushl
call
mov
push
call
pop
pushl
call
mov
pop
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
pushl
lea
call
pushl
lea
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
call
add
cmpb
je
mov
andl
leave
ret
mov
push
mov
push
push
mov
xor
mov
push
xor
push
push
mov
cmp
jne
mov
mov
mov
mov
mov
xor
cmp
push
push
pushl
setne
pushl
lea
push
pushl
call
mov
cmp
jne
xor
jmp
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
call
pop
cmp
je
movl
add
mov
test
je
lea
push
push
push
call
add
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
push
call
mov
pop
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
pushl
lea
call
pushl
lea
pushl
pushl
pushl
pushl
pushl
push
call
add
cmpb
je
mov
andl
leave
ret
mov
push
mov
push
mov
cmp
ja
push
push
cmpl
jne
call
push
call
push
call
pop
pop
test
je
mov
jmp
xor
inc
push
push
pushl
call
mov
test
jne
push
pop
cmp
je
push
call
pop
test
jne
jmp
call
mov
call
mov
mov
pop
pop
jmp
push
call
pop
call
movl
xor
pop
pop
ret
mov
push
mov
mov
test
je
push
xor
pop
div
cmp
jae
call
movl
xor
pop
ret
imul
push
mov
test
jne
inc
xor
cmp
ja
push
push
pushl
call
test
jne
cmpl
je
push
call
pop
test
jne
mov
test
je
movl
xor
jmp
mov
test
je
movl
pop
pop
ret
mov
push
mov
cmpl
jne
pushl
call
pop
pop
ret
push
mov
test
jne
pushl
call
pop
xor
jmp
push
jmp
test
jne
inc
push
pushl
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
je
cmp
jbe
push
call
pop
call
movl
xor
pop
pop
pop
ret
call
mov
call
push
call
pop
mov
jmp
call
mov
call
push
call
pop
mov
mov
jmp
mov
push
mov
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
pushl
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmpl
je
cmp
jbe
lea
mov
mov
mov
cmpl
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
and
add
sbb
or
pop
jmp
push
lea
sub
and
add
sbb
or
pop
jmp
int3
int3
int3
int3
push
lea
sub
sbb
not
and
mov
and
cmp
jb
mov
pop
xchg
mov
mov
ret
sub
test
jmp
int3
jmp
jmp
jmp
int3
int3
incl
add
add
add
add
decl
inc
add
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
insl
inc
add
incl
add
add
insl
inc
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
ljmp
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
incl
add
add
incl
add
add
incl
add
add
jnp
add
add
add
incl
add
add
incl
add
add
decl
jl
add
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
popf
add
js
add
or
add
int3
sahf
add
sahf
lahf
add
add
add
int3
popf
add
int3
lahf
add
add
add
stos
lahf
add
mov
add
add
sahf
add
push
lahf
add
sbb
add
cmp
add
call
lahf
add
push
mov
add
fcompl
add
aam
add
ficompl
add
add
add
xor
add
bound
add
jle
add
mov
add
mov
mov
add
add
add
push
mov
add
dec
mov
add
je
add
andb
add
add
mov
mov
add
hlt
mov
add
sbb
add
dec
mov
add
jl
add
xchg
mov
add
shlb
add
mov
add
or
add
push
mov
add
cmp
add
dec
mov
add
add
add
xchg
add
mov
push
insb
gs
lret
add
popa
jo
insb
insb
outsl
arpl
dec
add
je
jb
arpl
jae
gs
jo
add
add
popa
jo
jb
add
inc
add
je
jb
arpl
fs
jae
add
cmp
dec
outsl
popa
fs
imul
add
adc
dec
outsl
fs
gs
popa
outsb
fs
gs
add
in
add
imul
jb
gs
add
imul
insb
insb
outsl
arpl
add
add
imul
jae
xchg
add
je
imul
je
add
push
dec
inc
dec
xor
cs
insb
add
jmp
push
jns
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
inc
push
xor
cs
insb
add
add
inc
push
dec
inc
insb
gs
jb
insb
imul
add
add
dec
inc
imul
inc
push
dec
inc
dec
dec
xor
cs
insb
add
xchg
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
dec
gs
jo
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
arpl
inc
gs
je
jb
jne
dec
outsb
outsw
push
add
dec
jae
jb
arpl
jae
jb
gs
je
jb
push
jb
jae
outsb
je
movsl
add
gs
outsb
push
gs
js
gs
imul
gs
sbb
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
lret
arpl
gs
outsl
imul
add
gs
imul
je
je
dec
popa
outsb
fs
add
adc
inc
gs
outsl
fs
gs
imul
add
adc
inc
gs
outsl
fs
gs
imul
add
popa
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
inc
push
dec
jne
je
inc
jns
gs
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
outsl
add
gs
popa
outsb
fs
gs
outsl
jne
je
add
add
imul
inc
jb
je
arpl
push
arpl
outsb
inc
outsb
fs
jo
outsb
inc
outsl
jne
je
repz
je
imul
roll
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
arpl
gs
outsl
imul
add
insb
jae
insb
insb
outsl
arpl
add
add
insb
jae
gs
popa
insb
jne
add
add
insb
jae
gs
popa
insb
jne
add
add
insb
jae
jb
gs
add
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
push
gs
popa
jae
inc
jb
outsl
jb
add
add
je
jne
jb
outsb
je
push
dec
add
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
add
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
add
popa
jo
jb
popa
je
add
cmpsl
add
gs
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
roll
gs
jne
jb
outsb
je
jb
arpl
jae
add
inc
gs
jns
je
insl
push
imul
insb
gs
imul
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
out
add
je
jb
jb
je
arpl
push
arpl
outsb
add
aas
add
fs
imul
add
roll
fs
gs
js
gs
imul
gs
add
add
inc
bound
addr16
jb
jae
outsb
je
rolb
jb
imul
outsl
arpl
jae
add
add
je
jne
jb
outsb
je
jb
arpl
jae
jb
inc
gs
push
dec
outsb
outsw
add
inc
gs
inc
push
add
aaa
add
je
inc
dec
inc
push
add
or
dec
jae
popa
insb
imul
add
add
je
push
outsb
ja
outsb
fs
add
popa
jo
imul
dec
inc
dec
popa
jo
je
imul
add
insb
je
inc
jns
gs
outsl
push
imul
imul
je
imul
push
add
rolb
dec
gs
jo
gs
insb
insb
outsl
arpl
add
add
add
add
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
or
add
insb
add
add
add
add
add
add
add
sbb
add
jb
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
cmpsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
or
add
or
add
or
add
xor
inc
add
popl
xor
inc
add
popl
xor
inc
add
popl
xor
add
add
add
dec
out
mov
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
add
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
add
add
add
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
add
arpl
addr16
insl
outsb
outsl
jo
jb
je
jbe
js
jp
add
add
add
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
add
mov
add
add
movsb
add
add
jns
and
add
add
add
cmpsb
filds
add
add
add
add
add
add
add
cmp
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
in
call
add
add
add
add
mov
add
add
push
ficompl
and
pop
fisubrl
xor
adc
add
xor
incb
add
add
add
add
add
or
inc
add
and
add
inc
add
and
cld
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
inc
add
add
add
pop
inc
add
pop
inc
add
inc
add
pop
inc
add
inc
add
pop
inc
add
inc
add
push
inc
add
push
inc
add
add
add
add
add
add
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
sbb
inc
add
sbb
inc
add
sbb
inc
add
sbb
inc
add
sbb
inc
add
sbb
inc
add
inc
add
inc
add
inc
add
sbb
inc
add
sbb
add
sbb
add
sbb
add
add
add
add
add
mov
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
mov
add
add
add
add
and
mov
daa
inc
add
inc
add
add
add
add
add
ljmp
add
add
add
add
enter
enter
enter
enter
enter
enter
enter
enter
enter
jg
jg
jg
jg
mov
inc
add
enter
enter
enter
enter
enter
enter
mov
inc
add
and
add
add
and
add
add
add
push
add
add
add
add
pop
add
addb
add
jo
add
mov
add
mov
add
add
add
add
add
add
add
add
add
add
add
rolb
add
add
add
add
add
add
add
addb
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
addb
add
add
add
add
add
add
add
imul
add
add
add
add
add
add
add
add
add
dec
add
addb
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
jo
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
roll
add
add
in
add
add
add
hlt
rolb
add
add
add
add
add
add
add
xlat
add
add
add
in
add
add
add
add
pushf
add
add
add
add
add
add
add
adc
add
in
add
add
add
mov
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
incl
add
add
add
add
add
add
add
add
and
add
add
add
add
add
rolb
aas
addb
aas
add
add
or
add
add
cmp
add
xor
add
add
add
add
or
add
aas
pop
pop
cld
aas
mov
jg
decl
incl
pop
incl
jg
incl
jecxz
incl
cmp
pop
lcall
idiv
ljmp
add
add
add
add
add
add
add
add
add
addb
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
sti
inc
popf
xchg
push
cmp
xchg
push
mov
mov
cmp
or
pop
mov
or
jp
jne
sub
shl
mov
adc
cld
lcall
mov
jecxz
inc
int3
xchg
hlt
inc
jge
out
or
popa
fstpt
jbe
mov
jae
push
jle
rcrl
data16
fdivr
ret
addr16
mov
add
xchg
cmp
pop
jp
cld
push
sub
shrb
xor
aaa
mov
jle
or
xor
push
popa
cmp
xchg
jle
sbb
test
fisubrs
mov
fs
cmp
push
cmp
mov
push
jp
sub
jb
loop
int3
sub
test
lea
adc
mov
push
pop
mov
movsl
aas
push
inc
stc
jle
inc
dec
addr16
mov
jae
adc
mov
xor
cld
sbb
xor
popa
aad
push
sbb
fildll
pop
gs
pop
xchg
inc
pop
dec
fadds
sbb
clc
rcrb
dec
adc
mov
fidivrs
xor
push
inc
xor
mov
sub
inc
orl
loope
jne
and
push
or
mov
sbb
jle
jae
fists
idivl
cli
xorl
mov
inc
fs
leave
xor
aad
sbb
fnstcw
pop
cmp
test
push
arpl
pop
push
cmpsl
fstps
iret
sub
icebp
xor
jge
mov
or
cmp
or
xchg
cld
in
shrl
push
push
cs
xor
xchg
adc
xlat
in
jnp
es
idivl
cmpsl
mov
jns
mov
fdivrs
popa
fisubrl
mov
jae
in
rorb
lock
inc
sub
lret
add
cwtl
in
int3
cmp
cmp
mov
sbb
mulb
data16
mov
sub
inc
lret
into
mov
ds
cmp
pop
ret
test
outsl
pop
xlat
mov
adc
xbegin
pop
pushf
push
mov
mov
inc
dec
inc
mov
mov
jl
inc
pop
jno
lock
fistpl
rclb
mov
enter
bound
stc
jno
shrb
subb
xor
daa
fists
jns
sti
xlat
push
ret
sahf
sbb
aad
xor
jg
cmp
mov
data16
mov
pop
mov
outsl
icebp
fwait
lcall
and
jmp
pop
aad
mov
leave
dec
cmp
mov
sbb
mov
dec
dec
xor
xchg
call
adc
fcom
and
xlat
movsl
call
js
xor
rclb
shr
aam
mov
inc
insb
test
scas
add
inc
mov
ss
dec
daa
ss
mov
push
inc
ficompl
les
rcll
js
jmp
fiadds
inc
cmp
in
dec
data16
outsb
mov
push
inc
pop
mov
jnp
push
je
jg
es
jbe
mov
enter
xor
idivl
movsb
mov
xchg
xchg
push
hlt
inc
jae
sbb
jp
pop
mov
daa
mov
cmp
mov
testb
push
cmpsl
idivl
inc
insl
cltd
jns
cmp
pop
jne
cld
dec
negb
int
sbb
movsl
fcmovnu
cld
hlt
icebp
stos
popa
add
jle
in
call
jbe
clc
ret
fs
fs
fs
cmpsl
aad
and
jnp
into
bound
and
dec
dec
out
nop
fidivrl
aad
mov
pop
add
push
xchg
jp
outsl
fnstsw
in
loope
js
insl
cltd
shll
fucomip
out
jno
shrl
xchg
adc
dec
xchg
lds
arpl
fucomi
call
ret
push
push
cmp
popa
fnsave
in
insl
leave
or
cltd
mov
ds
pop
push
mov
xchg
dec
pop
ficompl
in
mov
mov
dec
jge
push
xor
mov
inc
sahf
lcall
cmc
or
rcrl
lds
sub
and
in
pop
fiaddl
pop
dec
lcall
enter
mov
ficoml
lret
cs
aas
pop
and
mov
add
jo
stc
or
inc
lret
lods
arpl
outsl
or
mov
and
rorl
andl
in
jo
cmp
loopne
xchg
loope
andl
mov
push
push
int3
sbb
cmp
push
lods
outsl
shl
dec
pusha
mov
fwait
dec
pop
fildll
mov
xchg
push
xor
gs
mov
and
xchg
pop
pop
aas
int
ljmp
xlat
pop
pushf
je
or
inc
rclb
mov
pop
dec
pop
mov
xor
cmpsl
xchg
mov
pop
mov
mov
xchg
dec
pop
insl
aam
adc
push
xchg
lret
das
or
jno
mov
push
dec
sub
cs
pushf
jecxz
mov
cltd
in
push
jno
mov
mov
pop
mov
mov
rcrl
push
cmc
jg
push
sub
xor
stos
dec
mov
clc
sbb
fbstp
push
gs
pop
aam
pop
popf
jl
shll
dec
and
push
test
test
adc
inc
daa
les
jle
inc
pop
push
jecxz
inc
add
jo
hlt
inc
or
add
in
ljmp
fstpl
lods
cwtl
mov
inc
dec
mov
sti
cmpl
loope
sbb
dec
jecxz
loope
ret
push
or
ds
adc
cmp
subb
jg
push
pop
and
push
xor
loopne
jae
push
or
mov
into
outsb
mov
xor
mov
sub
inc
hlt
pop
mov
or
and
sahf
int3
add
repnz
pop
xchg
adc
movsl
mov
push
ss
mov
jno
hlt
popa
arpl
inc
mov
into
dec
jbe
jnp
sar
jle
shrb
dec
mov
xlat
daa
cmpl
push
sub
jmp
pop
test
loope
scas
cmp
sarb
xchg
iret
stc
xor
xchg
mov
or
sahf
mov
vpmacssww
add
fisubrs
lods
insl
or
xor
scas
adc
inc
xor
enter
mov
enter
mov
pop
adc
dec
filds
jnp
xchg
ret
xchg
leave
push
mov
add
gs
ret
cwtl
add
inc
adc
out
std
mov
ljmp
aas
les
jecxz
inc
in
pusha
xor
repz
dec
cmp
sbb
das
sub
fidivl
aad
dec
mov
aad
repnz
jns
lea
fwait
lcall
jbe
push
daa
adc
fidivs
and
dec
rol
push
add
push
mov
mov
and
orb
jmp
in
mov
arpl
or
movsb
fcompl
insl
data16
lcall
mov
jmp
pop
pop
mov
mov
stc
mov
adc
mov
popa
movsl
sub
fisttpl
adcl
into
stos
or
push
cmp
jecxz
popa
cs
or
cmp
aam
mov
mov
or
mov
fnsave
mov
mov
push
pop
mov
movsb
jns
mov
ja
mov
inc
frstor
mov
xor
or
lock
push
cmp
add
sub
and
dec
adc
add
jne
adc
lds
adc
pop
sarb
mov
into
sub
lock
shlb
jle
xor
push
dec
or
out
push
shl
sbb
mov
pop
sub
inc
dec
shll
andl
xchg
mov
jle
mov
aas
inc
ljmp
popa
aam
cltd
stc
or
mov
jmp
test
cmpsb
test
push
sbb
dec
mov
xchg
dec
les
xlat
test
adc
test
push
test
push
and
addr16
stos
in
xlat
sub
jbe
adc
sub
push
cmpsl
rcll
lret
out
xlat
leave
pop
nop
xchg
mov
imul
lcall
ds
dec
dec
adc
and
fisttpll
mov
pop
dec
inc
in
sub
or
and
rcrb
cltd
jmp
iret
push
jp
cmpsl
mov
outsl
stos
cwtl
mov
and
hlt
push
lea
pop
dec
adc
adc
add
xor
stc
pop
cmp
dec
ljmp
into
or
pop
dec
rep
or
xor
pusha
sub
pop
jne
dec
insl
adc
mov
jge
sahf
test
loope
sahf
nop
loopne
das
iret
aam
hlt
jnp
cld
movsl
xlat
out
popa
lods
dec
aas
cmp
sub
pop
lret
data16
xlat
shll
or
pop
cmp
insb
lret
jbe
push
lods
pop
pushf
call
incl
xlat
fwait
jl
movsb
mov
mov
sbb
lock
sbbl
repz
inc
jns
inc
cwtd
inc
sahf
outsl
mov
cmc
jne
or
sbb
mov
ret
mov
mov
mov
cmp
scas
dec
dec
and
or
cmp
xchg
movsl
sbb
adc
sub
addl
add
cmp
bound
mov
int
hlt
sahf
inc
test
es
mov
stos
out
fidivl
mov
pop
inc
sbb
push
mov
pop
cmc
in
movsl
outsb
in
repnz
in
movsb
mov
faddl
and
fcoms
push
imulb
or
cmc
inc
int
push
cmp
lock
lahf
lock
mov
or
jl
sub
add
jl
sbb
mov
loope
cmp
or
sbb
sbb
mov
dec
add
or
jne
mov
or
push
out
in
dec
inc
in
push
outsl
imul
in
inc
into
pop
push
mov
scas
mov
mov
test
xor
bound
in
sub
and
fs
cmpsl
bound
je
ss
nop
jns
mov
shl
mov
push
das
movsb
mov
pushf
xchg
xchg
push
dec
mov
inc
mov
shlb
mov
lods
scas
hlt
pop
add
cmc
outsb
cmp
add
test
jecxz
enter
inc
add
int3
insb
cmp
mov
adc
xchg
push
inc
xor
hlt
add
push
cmp
mov
inc
test
roll
out
push
fucomp
mov
mov
push
xchg
cmpsb
dec
out
in
cwtl
icebp
sub
mov
lods
bound
jb
mov
pushf
int
notl
mov
je
scas
xlat
jl
fadds
lahf
lahf
enter
sub
pop
das
pop
cmp
xor
sti
push
xor
push
add
push
xchg
incb
lcall
repnz
jmp
xlat
lahf
and
pop
cmc
adc
sub
stos
jg
orl
test
fsubs
popf
or
jnp
push
sahf
mov
xor
popa
sbb
sti
out
cmpsb
lcall
fbld
mov
lods
insl
lret
int
sbb
ret
frstor
aad
cmp
sub
inc
mov
push
jecxz
mov
fstpl
push
popf
or
lods
outsl
mov
prefetch
je
aad
xchg
out
xchg
and
jl
lds
push
jg
mov
fwait
jb
and
ljmp
rorb
call
fistpll
aaa
mov
mov
push
xor
shll
xor
imull
std
pop
sbb
aad
jno
mov
dec
mov
lea
shlb
mulb
xlat
sub
movsl
push
fimuls
fstps
scas
mov
sbb
mov
inc
pushf
out
dec
lret
inc
push
mov
fwait
negb
cmp
mov
or
fimull
jle
sub
cli
mov
pop
dec
cmp
sbb
sub
lret
lock
lret
push
adc
xor
pushf
pop
mov
pop
jmp
push
nop
mov
dec
int
mov
cmp
ds
aam
fwait
push
push
dec
out
sub
push
movsb
mov
pop
mov
jl
loop
fidivrs
and
xor
cwtl
dec
mov
and
fbstp
in
xchg
sbb
in
in
aam
inc
testb
and
mov
push
cs
stc
jnp
out
lods
mov
inc
mov
clc
and
mov
jno
dec
test
or
stos
sar
sub
dec
fs
pop
pop
das
and
std
pop
push
iret
les
repz
cmp
subl
sti
cmp
push
sbb
jmp
and
sub
cmp
fadds
std
and
mov
scas
inc
incb
es
or
pop
ljmp
dec
jp
mov
es
push
iret
and
out
shlb
call
sahf
pop
aas
movsb
mov
inc
test
and
adc
pusha
cltd
sub
sub
imull
mov
iret
or
shr
xor
aad
ret
inc
mov
pop
or
mov
lcall
lcall
outsl
movsb
fimuls
xchg
or
in
fs
movsb
sti
decl
sub
mov
ficoml
xor
scas
pushf
inc
or
push
rol
out
rolb
in
xor
arpl
and
ret
lods
sbb
mov
xchg
xchg
imul
movb
cmpsl
jl
ror
fdiv
adc
fs
outsb
cmp
outsl
jns
testl
jecxz
idivb
stos
jne
push
xchg
sbb
shll
xchg
or
aas
je
arpl
push
fwait
jno
mov
out
mov
add
jno
cmpsl
aam
adc
or
subl
mov
out
icebp
mov
loope
fldt
or
cmp
dec
decb
dec
mov
xor
aam
cmp
jb
pop
int
cmc
adc
orl
add
ret
js
push
popa
dec
shrb
dec
loopne
push
inc
shl
push
fildl
mov
push
sti
dec
adc
jno
cli
adc
ficoms
adc
fisubs
in
sarb
add
mov
cmp
jb
popf
xchg
in
hlt
adc
lea
scas
sti
or
mov
jge,pn
loope
mov
js
popa
dec
or
loope
mul
mov
inc
mov
fsts
pop
ss
dec
dec
inc
add
push
lock
pop
push
jg
xchg
sub
mov
daa
dec
fs
and
sub
xor
in
lds
xchg
pop
mov
mov
jecxz
xchg
stos
out
call
pop
lock
frstor
push
loope
lret
jbe
jo
mov
rorl
inc
insl
or
pop
xchg
mov
pop
je
adc
aam
pop
scas
fidivl
and
push
pop
pop
and
mov
rcrl
pop
inc
test
inc
enter
sub
sarl
mov
ljmp
dec
fidivs
xor
mov
pop
xor
mov
dec
sbb
and
insb
inc
nop
ds
xchg
repnz
fdivs
test
dec
fldl
scas
jbe
pop
movups
mov
or
adc
cmp
add
mov
sbb
xor
jno
aas
lock
cmp
jl
mov
push
mov
faddl
pop
ss
push
mov
jmp
inc
dec
or
cmp
call
mov
cmpsb
fadds
das
lods
add
fs
testl
loopne
lcall
sahf
movsl
inc
mov
dec
rolb
or
push
jb
shrl
into
jmp
js
mov
cltd
dec
int3
cmp
arpl
adc
pop
xchg
sbb
pop
addr16
pusha
push
add
mov
lds
ja
pcmpgtd
in
mov
xor
sti
xor
call
mov
jle
cmp
pusha
adc
mov
push
aad
popf
pop
sbb
or
inc
insl
loop
mov
out
fmulp
jge
mov
push
cmc
in
js
xchg
inc
std
mov
xchg
sub
sahf
ja
cmp
pop
push
dec
add
ficoml
sbb
int3
ret
decl
gs
xlat
push
ja
xchg
cmp
outsl
clc
cmp
dec
inc
aas
int
jmp
mov
ja
and
dec
les
adc
jne
test
call
fnstenv
or
add
dec
sub
xchg
les
nop
adcb
test
je
xchg
enter
inc
xor
mov
add
ror
rol
adc
sbb
add
movsb
jo
inc
xchg
inc
jmp
clc
test
mov
movsl
cmpsb
mov
daa
xlat
fsts
mov
aaa
xchg
add
gs
es
mov
push
fists
shll
jge
mov
mov
adc
sbb
rcrb
stc
xchg
test
int
mov
jb
push
sbb
call
dec
out
pop
jo
jno
add
bound
push
lods
mov
fsubl
jno
push
call
or
sub
xchg
int3
int3
mov
pop
mov
add
xchg
inc
ret
in
push
add
test
xor
and
sub
scas
pop
inc
adc
and
mov
int
xchg
xlat
addr16
push
xchg
clc
das
loope
pusha
lret
lea
mov
lret
jecxz
out
adc
adc
mov
adc
xlat
sbb
dec
cmpsb
dec
pop
lds
push
shlb
add
mov
cmp
xchg
in
xchg
stos
xor
aas
enter
xchg
popf
sti
inc
sti
mov
jb
aas
cmpsb
out
mov
aam
cli
aam
rcll
pop
nop
jns
add
out
xor
cmp
add
jle
fstpl
push
mov
sub
daa
mov
stos
push
cmpsl
and
mov
jmp
aam
add
dec
pop
adc
mov
pop
mov
idivb
stos
lcall
rorl
pushf
cmp
sbb
pusha
inc
jmp
outsl
sub
repz
add
nop
pop
in
mov
push
mov
add
movsb
scas
adc
movsb
xchg
fmul
and
orb
aas
mov
cmc
into
mov
push
xchg
sarb
jle
add
sub
or
dec
rclb
push
jno
mov
sbb
pop
inc
mov
call
xor
pop
inc
sbb
pop
leave
and
daa
sarl
icebp
jb
sahf
sub
push
or
pop
gs
aad
scas
popa
add
test
dec
cmovp
sbbl
inc
adc
xor
jne
inc
sub
dec
test
dec
mov
sti
in
pmulhw
inc
ss
jne
mov
test
xor
icebp
xor
dec
adc
gs
mov
sbb
sahf
lods
dec
inc
lret
ss
scas
mov
jne
js
je
xchg
xor
push
shrl
out
push
icebp
jno
xlat
adcb
aad
dec
jns
pop
fsubrp
ds
xor
jo
fbld
sub
cmpsb
subb
incb
inc
in
int
lods
and
mov
dec
pop
add
js
jae
out
and
xchg
inc
outsb
shll
adc
lret
out
inc
insb
jae
pop
mov
jp
lock
mov
aam
out
mov
repz
adc
sbb
addr16
inc
push
sbb
push
pushf
adc
stos
loopne
insl
mov
in
push
fwait
stc
das
movsl
dec
push
pop
fiaddl
cwtl
mov
icebp
sahf
imul
outsb
lods
jae
pop
cli
jb
outsb
insl
xchg
pop
push
sti
out
xlat
and
mov
iret
mov
lods
or
lcall
push
pusha
sti
gs
jno
pop
setne
xchg
jle
fdivrs
test
mov
or
addr16
dec
or
cmc
inc
loop
pop
pop
push
add
movsb
les
sub
insb
cmp
stos
data16
add
dec
nop
mov
jge
or
lret
inc
xchg
and
lcall
xchg
cmpsl
jge
cmp
hlt
bound
xor
fnstsw
nop
lret
bound
fisubrs
imul
mov
stc
aam
mov
cwtl
pusha
mov
insb
into
je
ja
jp
xchg
in
xchg
loope
jle
sub
sar
in
lret
ss
and
shll
mov
dec
mov
aaa
jle
insb
shrb
ljmp
or
push
jmp
out
cmp
cmpsl
imul
in
or
repnz
sub
cwtl
jns
mov
xchg
outsb
dec
adc
or
stc
in
jecxz
cmpsl
pop
inc
or
inc
insl
mov
push
push
in
ja
cli
lea
jl
and
inc
or
add
bound
lret
cld
ljmp
insl
fdivrl
push
out
mov
aaa
lods
jmp
popa
and
xchg
int3
jg
xlat
and
adc
mov
xchg
pop
test
movb
dec
iret
pusha
pop
insl
outsl
xchg
mov
clc
mov
aas
and
sti
add
test
xchg
js
and
shl
add
mov
and
mov
mov
or
push
mov
call
xchg
aas
test
sbb
xor
rcll
stos
add
sti
push
push
aaa
inc
and
and
pop
xor
sub
mov
aas
lret
jg
mov
add
sbb
je
imul
rcr
dec
fsubr
imul
pop
or
push
jno
jnp
loope
dec
push
jbe
inc
and
fdivr
mov
cwtl
xchg
adc
push
mov
xchg
shrb
out
add
jle
js
pop
inc
jnp
call
subl
daa
push
xchg
hlt
das
in
aas
imul
into
mul
cmpsl
loop
movsl
cli
ror
push
jmp
es
and
pop
sub
cld
loopne
arpl
fwait
inc
pop
out
inc
jbe
mov
arpl
imul
and
xchg
push
and
pop
dec
and
lock
or
shl
pusha
inc
sbb
aam
sub
adc
cmp
jecxz
out
std
mov
notl
ror
ficoms
inc
adc
repz
repz
movsl
cmc
and
xchg
xor
push
jmp
out
ret
and
xchg
add
adc
lods
dec
adc
lods
inc
sbb
lcall
cld
inc
negb
test
mov
push
andl
movsl
rcr
ss
pop
sbb
mov
sub
and
mov
mov
shrb
adc
mov
mov
sar
push
pop
ja
push
outsl
inc
movsl
sbbb
adc
jb
cld
mov
cmp
add
inc
cmp
test
mov
cmpl
lds
push
push
lds
mov
push
mov
sub
fwait
add
cmp
fisubrs
push
push
sar
jge
add
inc
dec
fdivr
js
decb
pop
test
fcomip
add
sahf
push
rcrl
popf
aaa
sbb
push
or
outsb
xchg
lods
stos
outsl
xor
aad
in
xorl
lret
jl
push
xchg
pop
push
outsl
ds
paddusb
add
jne
inc
pop
adc
popa
xor
lahf
mov
scas
push
test
aam
daa
sub
stos
mov
icebp
mov
push
xorb
sbb
xor
mov
lock
test
push
popa
into
xchg
imul
jo
loope
std
je
fstps
dec
in
in
jo
bound
jns
pop
int
nop
aad
popa
iret
aad
push
pusha
movsb
fdivs
sbb
movsb
jae
ret
scas
fildll
sbb
sbb
xchg
adc
stc
push
jge
fbstp
push
aaa
gs
add
hlt
outsl
mov
sahf
and
add
shlb
fisubrl
pop
jno
cmpsb
lret
popf
sbb
jbe
jg
jmp
push
pop
insb
in
pop
mov
mov
pop
push
mov
or
mov
push
mov
jns
push
inc
mov
jae
out
insl
or
and
and
inc
test
mov
cli
jecxz
pop
loope
mov
and
shrb
mov
xchg
mov
xlat
xor
jmp
and
enter
popf
push
iret
outsb
sbb
mov
or
mov
test
leave
fstl
push
je
in
sarl
sub
ficoms
lret
insl
mov
and
insb
popl
dec
ret
pop
sbb
dec
push
jae
adc
mov
mov
add
push
mov
leave
lea
dec
ja
xchg
mov
cli
sub
addr16
inc
mov
mov
add
adc
mov
cmpsl
mov
in
stc
aaa
mov
jne
ret
jb
cmp
lret
inc
jmp
std
sub
stos
test
xchg
mov
pop
inc
jo
out
orl
andl
pop
in
rcl
fcoms
xlat
cmpsb
cmp
shll
jecxz
pop
xchg
leave
inc
mov
push
sarl
sbb
push
mov
daa
pop
fsubrs
jecxz
jmp
sub
mov
add
push
xor
stos
jge
ficompl
mov
mov
adc
lods
call
rolb
jp
scas
rorl
jg
adc
sti
movsl
jl
insl
insb
into
push
popf
in
fists
pop
jle
xchg
lahf
lods
mov
pushf
mov
push
xor
jne
popa
stos
jmp
mov
aas
insl
mov
or
xchg
adc
mov
inc
push
mov
sub
outsl
repz
testl
shlb
das
lock
test
inc
inc
cmp
mov
repz
mov
sbb
cmp
push
mov
jne
pop
test
mov
xlat
adc
rorl
or
and
mov
lea
adc
xchg
ret
scas
dec
sub
pusha
pop
inc
adc
xor
iret
ficoms
sahf
mov
or
mov
sub
loop
jno
xchg
js
xor
pop
in
imul
mov
std
sub
or
shrl
sahf
cmp
inc
cwtl
jmp
push
xlat
mov
test
rcrl
les
insb
flds
jae
and
lock
fisubrs
outsb
pop
dec
hlt
mov
add
lock
in
fbstp
leave
dec
gs
jbe
lret
sbb
fadds
addr16
fwait
rolb
xor
adc
adc
xor
xchg
mov
int
jns
jo
lret
lods
lods
adc
sub
xchg
fldl2e
and
xchg
repnz
jae
jbe
sbb
xchg
pushf
jae
pop
data16
scas
mov
fistl
cmp
movsb
dec
sbb
loop
das
stc
mov
jecxz
scas
pop
rorb
movsl
add
push
pop
cmpsb
adc
inc
mov
out
cmp
mov
pop
add
push
in
scas
movsb
lock
dec
mov
decl
lock
lcall
xchg
ret
inc
pop
leave
xor
leave
cli
lock
lods
or
xor
mov
adc
pop
ja
sbb
push
xor
add
jmp
push
pop
data16
mov
push
nop
add
sbb
xor
push
mov
sbb
cli
js
imul
clc
cmp
outsl
mov
mov
sub
es
sub
adc
bound
dec
cltd
jle
add
jnp
or
inc
xlat
enter
ret
xchg
loop
mov
loop
mov
adc
or
push
lahf
jb
loopne
icebp
or
lret
mov
in
aam
mov
mov
xchg
lret
inc
ds
mov
or
xchg
loop
pop
inc
aad
mov
leave
mov
fiadds
inc
adc
jg
and
cmp
ds
push
add
stos
pop
xchg
jnp
pop
std
jge
push
add
jo
in
popw
jmp
jae
cmp
inc
dec
in
test
pop
orb
xchg
jg
std
mov
jnp
data16
stos
pop
cmp
stc
jp
test
xor
popa
sahf
data16
push
in
clc
lds
dec
ss
xor
push
loopne
hlt
std
jle
fnsave
mov
add
add
in
enter
push
and
insb
or
sbb
cmp
jbe
xchg
lcall
jb
jae
unpcklps
and
mov
sti
inc
pop
fisubl
nop
and
push
rorl
addr16
mov
dec
push
jle
shrl
test
rorl
sbb
add
imul
cmp
xor
add
and
xor
add
inc
rorb
xorl
add
mov
add
gs
pop
movsl
push
add
das
fwait
jmp
outsl
lods
fisubrs
xlat
pop
ret
push
outsb
push
pop
fsubrs
push
aam
dec
adc
or
in
std
mov
cs
jmp
push
dec
imul
xor
jo
sub
push
lret
or
and
push
outsl
cwtl
mov
daa
sahf
shlb
icebp
inc
popf
mov
rorb
negb
addr16
fsubrs
or
cmp
sub
mov
ret
mov
fcoms
mov
sub
lods
paddusb
rcll
jmp
jno
inc
lahf
adc
and
adc
insl
xchg
sub
jnp
or
mov
pop
sbb
out
and
movsl
pop
mov
jp
call
mov
sahf
pop
xor
sti
fidivl
add
inc
ficoml
movsl
ds
aad
movsl
jnp
sub
inc
mov
cmp
sbb
jmp
cltd
test
cs
aaa
nop
cmp
lret
dec
ret
addr16
aaa
aas
sub
dec
add
jmp
jle
scas
or
add
lret
mov
movsb
lret
insb
pop
xchg
pop
nop
xchg
mov
mov
cmp
sub
mov
out
test
js
sahf
inc
mov
idivl
lock
lret
int3
fidivs
mov
mov
mov
sub
adc
popf
xor
jg
hlt
mov
dec
push
loop
cmpsb
adc
xor
push
fsubrp
jno
subl
aas
or
aas
pop
out
or
xor
jo
outsb
cwtl
movzbl
add
sbb
xchg
es
xchg
sti
test
call
cmpsl
in
xor
sub
jmp
sbb
and
mov
and
in
sbb
push
add
subl
jo
pop
das
push
dec
enter
push
fwait
aaa
jg
daa
lret
inc
imul
loopne
dec
cmpsb
cltd
add
movsb
das
stos
mov
mov
stos
pop
adc
mov
mov
pusha
mov
lcall
mov
mov
jnp
push
decl
cwtl
repnz
das
adcl
jns
add
daa
mov
sbb
in
pushf
gs
dec
xor
enter
push
mov
sub
test
and
fmul
jb
xchg
in
fwait
mov
and
xchg
cmp
inc
add
cmp
dec
out
popa
jo
jne
das
sti
cli
push
sbbl
inc
and
out
inc
sub
ja
inc
aam
xchg
cltd
js
popa
mov
in
pop
in
mov
into
mov
adc
jns
shll
jmp
sub
mov
dec
daa
or
or
cmp
out
xor
gs
add
in
jno
insb
push
xchg
pushf
outsl
or
jg
jae
sub
shll
adc
call
xchg
out
and
pop
adc
sub
inc
mov
movsl
jp
ret
test
addb
pop
jp
add
add
adc
jns
mov
cs
or
cmpsl
mov
sub
xchg
xchg
adc
mov
lock
shl
lock
inc
mov
in
loope
cmp
cmp
mov
out
cld
cmp
adc
xchg
mov
fabs
mov
inc
jbe
jnp
push
inc
repnz
arpl
dec
or
test
pop
xchg
mov
jmp
jns
cmp
or
stc
pmaxsw
push
lahf
cmc
pop
adc
adc
jbe
call
jle
jno
and
xchg
mov
xchg
jne,pt
pop
or
mov
ja
or
push
add
and
jp
inc
aas
pop
lahf
jge
cmp
sub
mov
dec
mov
and
push
ficoml
adc
ds
fxch
mov
dec
loope
adc
and
push
xchg
es
mov
icebp
xchg
aam
xchg
imull
incb
fs
lock
dec
mov
ret
icebp
inc
jno
or
mov
data16
in
je
jnp
sar
popf
pop
popf
xchg
push
inc
inc
cmp
mov
cmpsl
adc
lock
lods
push
packsswb
add
sub
stos
xchg
in
cli
push
int3
std
int3
xchg
add
enter
roll
mov
jmp
add
outsb
sti
gs
movsl
daa
scas
iret
lret
pshufw
push
cmp
xchg
fistps
pop
dec
xchg
fcmovnb
cmpsl
fsubr
mov
popf
adc
mov
mov
stos
or
pop
mov
push
or
xor
sub
mov
xchg
cmpl
cld
leave
shll
cmp
inc
mov
xor
popf
sub
pop
dec
dec
stc
jb
dec
out
adc
xorl
xchg
loope,pt
data16
pusha
into
mov
mov
pop
dec
xor
cmpsl
mov
ret
xchg
xlat
adcl
jo
cwtl
enter
pop
pushf
in
sub
xor
jbe
pop
inc
cs
icebp
cmp
into
adc
hlt
mov
psubw
adc
fdivs
out
je
xor
inc
loopne
inc
data16
bound
push
add
or
xlat
pop
in
cwtl
lds
inc
push
stc
in
sbb
add
daa
loop
mov
pop
jmp
ds
add
imul
inc
aas
sbb
js
dec
fadds
movsb
mov
cltd
rorb
cmp
sub
out
out
insl
in
test
imul
mov
inc
sub
ljmp
shrl
push
adc
test
xchg
int
add
mov
add
jo
adc
cmc
dec
xchg
lcall
cmp
pop
xor
ficompl
adc
push
or
dec
push
inc
leave
cmpsl
imul
jecxz
cwtl
std
add
ss
adc
dec
popa
adc
dec
push
xchg
aam
jb
sub
outsl
sti
rcrl
and
xor
sub
loopne
push
insb
enter
lcall
into
lds
or
rcll
ds
cld
adc
mov
sbb
or
ret
xor
outsl
rclb
enter
pop
mov
repnz
mov
cld
jl
xor
push
stos
jl
sbb
mov
mov
inc
pop
cwtl
and
loopne
negb
inc
xor
les
or
inc
jb
lods
mov
and
xchg
or
xor
aas
mov
ficompl
mov
fnsetpm(287
pop
mov
call
clc
sub
lock
sub
push
mov
fdivl
sub
mov
lret
out
sbb
sub
jmp
xchg
cmp
xchg
sahf
pop
out
mov
dec
fs
add
sbb
dec
rcrb
mov
mov
fstl
adc
outsl
je
sub
mov
xor
stc
xchg
cmpb
test
mov
mov
sbb
add
jle
out
and
push
and
shrb
mov
sarl
aas
push
es
xchg
fcmovnbe
cmp
and
jle
das
push
jns
jp
xor
and
sub
ret
and
clc
sub
adc
inc
mov
bound
std
dec
jecxz
in
pop
add
mov
pop
xlat
mov
dec
mov
addr16
fsubl
mov
ja
cmp
sahf
or
jnp
adc
addr16
cmc
and
and
pop
les
ret
shll
idivb
out
cwtl
cmp
icebp
and
jo
and
test
das
cmpsl
push
inc
xchg
cli
adc
outsb
xor
fcmovnu
daa
imul
xchg
fistl
adc
cmpsb
mov
roll
xor
push
fcoml
popf
in
insl
xchg
adc
and
mov
into
clc
adc
xor
mov
or
loopne
hlt
pop
cs
add
pusha
gs
ss
push
aam
cmp
outsl
mov
jmp
xor
add
dec
lea
loop
xchg
ljmp
imul
inc
cmp
adcb
lods
outsl
cs
ja
push
repnz
adc
jle
in
test
stc
ja
scas
test
repnz
push
lock
push
hlt
jl
jae
out
add
xlat
jo
test
mov
aaa
xor
xor
popa
push
sub
cmpl
dec
inc
popl
mov
add
mov
or
in
call
dec
or
shl
out
dec
enter
in
fldcw
push
pop
aam
and
mov
cwtl
push
mov
ss
cltd
leave
lahf
mov
push
rolb
dec
loope
or
rclb
pop
imul
jl
xor
insl
outsl
test
jmp
insb
fdiv
cmpsl
out
or
push
sub
mov
xchg
aam
fdiv
mov
ror
fmuls
enter
loop
pusha
or
lret
mov
xor
pop
dec
fwait
scas
push
lock
into
xchg
pop
mov
icebp
dec
pop
adc
inc
push
pop
pcmpgtw
pop
test
pop
mov
push
or
pop
out
jp
cmp
sub
lods
leave
inc
cmc
push
sbb
xor
out
ss
or
push
sbb
jno
fmul
jb
fbld
pop
out
mov
xlat
ret
and
jge
lods
stos
adc
pusha
and
pushl
cld
imul
rclb
dec
cmp
push
dec
in
cmp
lahf
and
lods
fstl
out
push
es
adcb
arpl
hlt
xlat
mov
sub
in
xor
jns
sbb
inc
mov
push
mov
or
rcl
mov
sub
leave
add
bound
sbb
or
test
adc
es
cli
jge
cmp
clc
popl
dec
ret
push
push
pusha
cli
ret
push
sub
pop
insb
jg
mov
jne
xchg
inc
inc
push
mov
out
andb
dec
leave
rol
mov
fdivr
cmp
mov
idivl
sbb
neg
dec
push
add
cmp
pop
sbb
xor
rcr
and
xorl
es
fwait
scas
fildll
inc
out
mov
pop
out
out
mov
cs
push
lods
mov
or
test
adc
mov
inc
pop
mov
pushf
mov
sahf
or
sbb
or
jne
ficomps
adc
sbb
sbb
inc
xchg
xor
insl
push
cmp
data16
sahf
push
dec
sti
sti
arpl
pop
out
jmp
pop
push
pop
push
xchg
testl
or
pop
stc
mov
mov
mov
sub
ret
mov
and
mov
imul
jns
and
out
fwait
dec
int
jnp
mov
test
push
mov
stc
pop
xchg
scas
xor
shrl
fnstsw
adc
jmp
repnz
sbb
shll
popf
mov
cmc
addr16
xchg
lock
adc
das
fistpl
jle
in
loop
mov
in
out
or
fisttps
xlat
sub
movsb
outsl
imul
xchg
mov
jo
mov
lock
pop
mov
inc
arpl
xor
jb
in
cs
xchg
cwtl
cmp
ret
cmp
cltd
add
cmovo
gs
std
sbb
sub
mov
and
sahf
xor
mov
clc
cli
xor
or
cmp
and
sti
je
xor
jmp
inc
ror
jmp
sbb
jle
pop
lea
ljmp
or
push
sbb
clc
push
xchg
mov
out
add
push
movsl
adc
jl
mov
ret
dec
call
sub
jo
push
sub
cmc
mov
pop
fs
and
scas
xor
ret
popa
test
push
pop
clc
dec
mov
push
fdivrp
mov
ss
sbb
inc
jns
pop
and
daa
pop
xchg
out
mov
cmp
lods
in
cltd
adc
xor
jo
pusha
scas
inc
xchg
add
mov
lds
pop
lret
jmp
mov
mov
add
adc
mov
lret
cmp
inc
stos
test
xchg
and
xor
and
sbb
pop
add
loopne
xor
shlb
mov
or
add
out
adc
adc
push
pop
mov
and
daa
mov
cli
jne
insb
add
ja
iret
std
adc
pop
cltd
sub
adc
sbb
xchg
xor
test
into
mov
jne
test
int
dec
sbb
mov
mov
bound
jmp
rcl
out
imul
outsb
inc
jae
adc
imul
mov
loopne
ffreep
inc
mov
leave
bound
mov
sahf
sub
cld
xor
and
xchg
pushf
cmp
ret
sbbl
sbb
outsb
mov
adc
movsl
cmp
int3
insl
daa
cmp
les
pop
mov
mov
jns
mov
subb
xchg
jbe
cli
lods
fidivl
dec
and
push
jno
js
jp
int
scas
int
push
and
rolb
data16
stc
outsb
adc
and
test
lock
fisubs
ret
adc
ds
int
and
divl
incl
pop
in
jo
data16
pop
mov
and
sar
lret
int3
mov
aas
push
sahf
and
push
das
sbb
jns
dec
jnp
aaa
pop
test
jnp
dec
popl
sub
out
add
addl
jle
iret
push
aad
pop
movsb
rcrl
repnz
and
xchg
aam
das
pop
or
cmc
push
mov
add
xchg
movb
leave
mov
xor
pop
adc
aas
ret
add
insl
fsubs
je
cli
pop
idivl
js
push
sbbl
scas
dec
mov
imul
or
cmpsb
adc
cmp
or
pop
or
jne
sub
xchg
dec
jp
stc
mov
lods
int3
data16
clc
cmp
cmp
cmp
test
jmp
out
or
cmpsl
and
cmp
adc
in
es
scas
or
add
xlat
sbb
jecxz
jne
add
pop
mov
cmp
loope
pop
pop
data16
pop
hlt
and
fs
cmp
orb
inc
in
outsl
hlt
cmpsl
jle
es
and
dec
ret
loopne
push
mov
insl
jns
xor
int
cmp
cmp
xor
add
add
xchg
fwait
enter
adc
cld
pop
jle
in
jmp
aam
daa
cmpl
xchg
icebp
adc
push
rolb
xchg
es
mov
mulb
cmp
insl
cmpsb
mov
int
mov
arpl
pushf
jg
mov
cmc
push
outsl
push
mov
mov
xchg
push
lahf
jecxz
jle
es
mov
mov
xchg
stc
into
mov
mov
jmp
outsl
aam
mov
xor
and
imul
pop
clc
iret
adc
push
xchg
jns
shlb
out
popa
je
pop
adc
sarb
cmp
data16
loope
fdivrs
mov
outsl
xchg
dec
shrb
andb
or
shrb
lret
xchg
icebp
pusha
cmp
lret
push
xchg
shrb
daa
pop
inc
inc
imul
mov
mov
mov
mov
jmp
pop
cmp
rolb
arpl
mov
fisttpll
push
movsb
pusha
jo
stos
cmp
rclb
sub
in
fbld
test
xchg
push
gs
sbb
inc
dec
mov
loope
add
pushf
mov
mov
aaa
and
or
pop
mov
imul
testb
rol
mov
cmpb
push
iret
mov
mov
sub
outsb
clc
xor
adcb
push
cmp
cmc
sbb
cmc
cmp
stos
cmpsb
iret
pusha
pop
adc
in
mov
rcll
jg
pop
pusha
jne
loop
or
bound
jne
pushf
repnz
xchg
xor
cwtl
shrb
xor
idivb
mov
loopne
mov
push
mov
imull
cmp
sub
pop
scas
lods
push
xchg
mov
xchg
std
scas
jp
loope
cmp
pop
pop
lods
mov
jae,pt
testb
bound
sub
mov
aas
cmp
jb
fsubl
jl
sub
repz
cli
dec
jmp
cli
arpl
pushf
stos
mov
cmp
in
sub
and
jp
lods
xchg
dec
cwtl
mov
lods
xchg
test
andb
mov
out
adc
push
cmp
sub
clc
mov
shrl
test
aaa
dec
aam
dec
bound
push
arpl
add
pusha
repnz
popf
mov
popf
aas
sbb
insb
lea
testb
sub
ds
mov
lahf
pushf
xchg
inc
dec
test
iret
insl
mov
cwtl
jno
gs
dec
shll
sub
xchg
xchg
mov
mov
ret
lock
jmp
test
push
jle
jge
test
dec
jnp
mov
xchg
sub
sahf
inc
add
dec
add
rorb
add
sub
inc
jnp
xor
aam
negb
pop
stc
inc
stos
std
xor
fsts
addr16
out
push
test
sbb
dec
xchg
mov
popa
jl
jbe
mov
cmp
xchg
jnp
fldl
push
loop
sub
sti
pop
mov
push
jge
lods
lea
and
mov
jne
xor
mov
idivb
xchg
into
adc
lods
repz
addr16
sahf
lret
sbb
mov
sub
and
or
sahf
jnp
test
stc
push
fidivrs
add
testl
dec
stos
push
dec
or
mov
cli
popf
mov
std
and
std
test
lahf
mov
gs
mov
ja
inc
push
ret
fcmovne
inc
xchg
outsl
test
pop
imul
fmull
and
shl
sub
imul
out
stos
dec
jle
fadds
roll
pop
aad
pop
push
or
xor
pop
inc
inc
movsl
push
or
cltd
inc
lret
ss
cmpsl
and
outsb
lds
imul
cmp
dec
rcrb
adc
jg
add
sbb
and
mov
lcall
fisubrs
pop
jb
push
ljmp
jge
mov
test
push
leave
push
mov
push
iret
fwait
stc
lds
ljmp
in
mov
ret
hlt
fisttps
inc
lea
adc
mov
or
mov
cs
mov
popf
inc
dec
in
out
je
jecxz
dec
sub
mov
sbb
call
sti
in
lock
dec
push
dec
outsb
dec
push
or
adc
fucomp
cld
and
ret
roll
mov
add
or
scas
es
mov
fnstcw
mov
mov
xchg
inc
or
pop
inc
clc
loope
iret
test
daa
xor
xlat
dec
pop
test
adc
aad
ljmp
mov
das
xchg
shlb
xor
stos
and
add
ja
rorl
test
bound
icebp
aam
adc
mov
push
add
mov
mov
sub
push
jmp
mov
mov
aad
push
lcall
mov
arpl
hlt
insl
fisubrs
jno
and
imul
jmp
sbb
xor
fstps
shl
pop
adc
xchg
fs
inc
pop
and
int
jecxz
insb
lock
sbb
in
arpl
stos
stos
xchg
popf
mov
jecxz
je
jecxz
movb
fistpll
rcrl
fsts
imulb
xchg
adc
xchg
pop
cwtl
push
rcrb
and
fcmovnu
je
push
mov
mov
or
sub
insb
sub
sti
call
pop
in
push
xor
dec
push
or
xchg
sub
icebp
xchg
xchg
mov
fisubrl
test
sbb
mov
rorb
dec
dec
hlt
pop
js
fcompl
insb
mov
mov
jo
push
nop
sbb
shrl
jge
test
pop
adc
jp
lods
lret
outsb
push
mov
int3
mov
leave
mov
mov
outsl
xor
aaa
movsb
popa
xchg
mov
js
xchg
call
sbbl
mov
in
jns
lret
push
call
or
inc
sub
insb
fimuls
mov
std
dec
cmp
or
sub
out
fisttpl
test
fsubs
sub
push
mov
mulb
xlat
sbb
scas
add
adc
xor
dec
into
jo
mov
adc
in
jns
and
fisubrl
jae
pop
lahf
mov
jl
xchg
rcl
mov
xchg
push
clc
int3
xchg
daa
pop
push
sub
fdivrp
ficompl
jp
push
cmpsb
ja
push
inc
fnsave
inc
mov
out
xor
cmp
add
mov
daa
repnz
pop
pop
lret
repz
mov
add
xor
xchg
push
xchg
lret
aad
lods
jg
cmp
mov
testl
js
js
loope
incb
xor
sbb
mov
dec
bound
nop
add
pop
inc
add
stc
mov
mov
xor
add
fistps
frstor
movb
lea
xlat
clc
mov
out
sub
and
es
lea
lret
push
xchg
dec
push
lahf
jne
xor
adc
nop
outsl
or
popa
loopne
pop
popa
cs
int3
popa
nop
sub
pop
pop
mov
shrl
fdivr
push
jmp
loope
xchg
pop
pop
pop
cmpsb
scas
leave
iret
sbb
xor
pop
mov
inc
ss
das
sub
idivb
push
or
rorb
cwtl
out
jl
mov
cmc
ja
pop
shrl
out
bound
jmp
xchg
or
ret
rorl
movsl
scas
xchg
cmp
mov
cltd
icebp
into
adc
in
stos
hlt
test
scas
xchg
or
add
incl
lea
add
jmp
inc
outsl
decb
sahf
sbbb
and
pusha
mov
jno
add
xor
test
and
scas
xor
lret
pop
add
xor
in
into
je
pusha
push
lcall
call
adc
out
iret
or
and
mov
dec
xlat
in
sbb
inc
mov
pop
fstl
adc
and
insb
push
jle
push
rorl
aaa
mov
popf
cmp
sbb
or
rol
pop
mov
cs
sbb
xor
outsl
jb,pt
mov
lea
and
rolb
imul
addr16
or
pushf
into
js
loop
jb
repnz
arpl
sbb
adc
hlt
daa
push
lods
inc
pop
pusha
xor
mov
adc
add
iret
inc
daa
outsl
loopne
iret
pop
dec
push
test
cmp
aad
nop
sbb
mov
push
mov
rorb
pop
jmp
imul
sub
mov
dec
jl
fsqrt
outsl
lret
fsubs
std
jge
and
mov
insl
cmp
xor
mov
sub
lret
inc
jb
mov
cmp
insb
orps
lret
fiadds
dec
lret
inc
insb
xor
mov
sti
ret
loope
mov
sbb
add
std
rcrb
out
add
add
lcall
adc
add
out
lret
pushf
mov
ss
loope
aam
test
popf
test
shlb
ss
sbb
lea
mov
je
jle
mov
loop
push
xor
and
lcall
aaa
repnz
roll
das
dec
mov
dec
cmpsl
jns
inc
push
imul
add
mov
or
aaa
push
and
test
pop
inc
xor
dec
in
jmp
jne
daa
push
out
or
jp
das
in
pop
push
ror
mov
xor
ret
xchg
pop
sub
fwait
aaa
stos
shl
data16
cmp
arpl
in
int3
mov
std
mov
push
mov
xchg
dec
seta
mov
cmpsl
add
les
cld
icebp
sub
jmp
mov
test
xor
aam
sub
sub
and
aam
mov
push
mov
andl
pop
arpl
mov
jno
mov
inc
push
push
sbb
imul
add
shlb
insl
fbstp
clc
adc
cmpsb
push
fs
ret
sbb
push
movb
dec
jecxz
mov
addb
inc
in
pop
inc
xchg
cld
sahf
orb
pop
inc
push
jl
pusha
stos
sbb
sti
mov
dec
and
lret
mov
sbb
stos
adc
loope
sub
adc
icebp
jns
adc
cmpsb
inc
push
adc
clc
das
cmp
movl
aad
imul
mov
and
fiaddl
adc
pusha
in
add
mov
cmp
loopne
outsb
pop
jne
xchg
sbb
mov
sti
jmp
in
add
inc
std
mov
cmp
add
add
add
repz
inc
jb
push
lock
sarl
push
add
jo
pushf
mov
mov
aad
jae
or
xchg
inc
inc
dec
xor
xchg
std
pushf
push
xor
imul
jne
sbb
testb
adc
mov
jno
int3
aaa
and
cmpsl
adc
cltd
cmpsl
xchg
jmp
pusha
in
xor
insl
ljmp
jns
out
fwait
cwtl
mov
fiaddl
enter
scas
ret
scas
dec
imul
int
jnp
hlt
mov
rcrb
inc
adc
or
test
insb
ja
and
push
aad
dec
mov
xor
mov
in
lds
lret
jns
stos
mov
ret
dec
or
mov
mov
or
sbb
push
dec
jp
mov
mov
aad
cmp
out
sahf
pushf
mov
lods
mov
mov
dec
mov
mov
aas
ds
mov
pop
add
jp
mov
test
jnp
pop
shrl
and
adc
sub
ljmp
and
xchg
adc
jle
xor
ficoml
hlt
mov
cmp
lods
cld
lock
orb
data16
dec
arpl
cmp
adc
push
scas
daa
out
adc
push
stos
xchg
sti
stos
or
dec
movsl
clc
out
mov
xchg
mov
fstl
push
cld
int3
aad
popf
pop
xchg
lods
fsubr
in
andb
shll
enter
mov
or
enter
inc
aam
sub
ja
mov
mov
arpl
clc
cmovle
lds
mov
or
nop
mov
add
push
cltd
mov
mov
in
aam
sub
dec
cmpsb
dec
ss
ljmp
push
push
xchg
sahf
cmpl
arpl
mov
and
push
lahf
std
ret
sahf
xchg
mov
jg,pt
inc
mov
cmp
cmp
pop
jg
fisttpl
stc
jb
xchg
inc
sbb
sbb
or
lcall
pusha
lret
xchg
mov
lds
mov
nop
cwtl
in
adc
mov
xor
rorb
ret
pushf
dec
push
adc
je
cmp
insl
scas
or
sub
test
xchg
outsl
bound
dec
enter
arpl
das
add
fisttpll
call
mov
xchg
push
filds
hlt
add
adc
test
iret
push
in
or
adc
outsl
test
incb
add
jns
adc
mov
cwtl
jl
movsl
sub
ret
stos
mov
jb
lahf
sub
and
xchg
test
cmp
add
cmpb
daa
sbb
pop
or
sbb
mov
or
scas
pusha
and
in
popf
pop
mov
mov
loop
push
push
fcoms
test
sti
xchg
cmp
add
mov
xchg
or
lret
xlat
test
call
and
mov
ror
dec
mov
inc
nop
push
jle
lock
inc
gs
mov
jl
jl
icebp
pop
shr
dec
push
in
cmp
insl
dec
pop
nop
pop
loope
xchg
mov
push
inc
pop
mov
fs
add
data16
aam
adc
lea
sub
out
sarb
mov
mov
push
in
mov
data16
jle
pushl
jo
adc
iret
aam
arpl
cwtl
jns
pop
sbb
sbb
cmc
or
ret
lret
inc
popa
and
hlt
push
pop
push
adc
out
sub
mov
cmp
pop
orb
pusha
ficompl
add
test
add
jecxz
cmp
xor
dec
shlb
mov
xlat
negb
cltd
pop
jne
out
push
mov
stos
mov
jne
push
push
xchg
cli
repz
add
ret
js
cli
stos
loope
loope
sub
pop
popf
sub
push
imul
mov
ds
mov
mov
icebp
lret
dec
cwtl
std
cmp
fistpl
push
incb
out
lahf
push
mov
mov
dec
gs
clc
jmp
pop
ror
sbb
out
pop
int3
pop
mov
pop
pmulhuw
sbb
add
xlat
ret
and
push
dec
stos
clc
cmp
sub
push
lret
stc
das
lods
enter
push
mov
gs
iret
jbe
push
out
push
call
mov
and
adc
and
call
cmp
xchg
loope
sub
cltd
lcall
mov
jo
push
in
or
xchg
icebp
arpl
fisttpll
int
pop
loope
mov
mov
inc
cmc
test
call
repnz
into
ficomps
sti
and
xor
rcrb
mov
faddp
sbb
and
mov
imul
repz
pop
jg
mov
sub
ret
pop
push
mov
ja
cltd
cmpsb
sbb
jnp
ret
lock
adc
stos
inc
sahf
test
mov
stos
jg
into
xchg
roll
movsb
push
cmp
pop
mov
sub
jbe
adc
mov
ss
js
jne
lea
test
out
jmp
mov
push
in
pop
hlt
roll
sahf
jns
loope
mov
dec
packsswb
xchg
shl
push
cltd
out
mov
movsl
mov
xchg
arpl
sbb
push
xor
sbb
insb
mov
unpckhps
jge
adc
sti
add
ss
stos
icebp
sti
mov
sahf
jmp
ja
loope
or
sbb
out
mov
pop
repnz
push
es
and
nop
out
dec
dec
popf
lds
cmp
ds
sub
stos
inc
icebp
xchg
mov
ret
shlb
icebp
cmp
mov
enter
cs
cli
jnp
dec
jge
in
add
das
pop
outsl
dec
pushf
push
or
mov
xor
cwtl
mov
xor
xchg
pop
hlt
add
or
out
movsb
out
movsb
push
out
mov
push
xlat
repnz
add
xchg
test
push
enter
mov
add
sarl
or
xor
cli
mov
sbbb
mov
cmc
ljmp
xor
push
pop
les
or
adc
push
jl
adc
xchg
and
loopne
sub
out
dec
dec
push
xchg
xchg
cmp
pop
or
insl
loop
lds
fucomip
ljmp
cmpb
popf
xor
sub
lds
shrl
adc
lret
add
leave
mov
ret
nop
sub
loope
mov
stos
vstmxcsr
mov
notb
add
push
cmpsl
dec
enter
das
inc
mov
xchg
mov
jnp
mov
or
xor
int
pop
out
add
adc
mov
in
dec
jo
fstpl
mov
mov
xchg
xor
inc
mov
mov
xchg
adc
mov
adc
rclb
jnp
pop
push
mov
mov
xor
and
pand
dec
cld
cltd
nop
mov
push
mov
jmp
dec
jae
insb
enter
shl
mov
pop
sar
add
mov
mov
add
aam
test
mov
sub
adc
imul
sahf
or
xor
pop
xor
push
pop
fs
psrad
push
fildll
push
aaa
fwait
push
xor
out
mov
lcall
mov
xchg
pop
mov
es
xor
pusha
sub
js
outsb
mov
insl
pop
repnz
cmpsl
enter
loop
ljmp
push
scas
fsubr
lahf
outsb
sbb
jge
dec
out
mov
dec
ljmp
jl
loopne
jmp
pop
jbe
and
mov
popa
cmp
cld
cwtl
sbb
jbe
or
decb
cld
mov
mov
jle
push
movb
dec
and
cltd
sub
jb
repz
xor
mov
adc
sub
jno
sbb
fwait
cwtl
add
ja
aas
mov
test
jg
test
pop
inc
test
sub
mov
inc
jb
pop
pop
mov
adc
ss
bound
push
aas
mov
rol
outsl
or
xor
lods
dec
int3
or
sub
lret
push
aaa
mov
in
or
fistpl
pop
mov
or
popa
mov
movsb
inc
adcl
sub
mov
sti
mov
jle
or
pop
sub
in
mov
push
xor
adcl
std
dec
mov
pop
pop
push
ret
lock
inc
xchg
scas
lds
enter
cmc
sbb
xchg
mov
sub
cs
sub
and
popa
and
repnz
enter
pushf
cmp
inc
cwtl
pop
ss
cli
fstps
icebp
shll
jbe
mov
sub
fists
inc
push
inc
shrl
data16
and
jmp
inc
inc
repnz
xor
pusha
and
dec
jecxz
aad
dec
arpl
jg
aad
in
push
int3
jmp
xor
jl
jl
hlt
sub
int3
fwait
lret
xor
cmc
addr16
jge
xlat
ja
cwtl
mov
push
sbbl
mov
insb
aad
popf
movsb
or
and
push
xchg
xor
stos
sahf
fcoml
xchg
xchg
out
dec
xchg
je
mov
jae
jecxz
out
cmp
out
mov
xor
mov
fcompl
aas
lea
jnp
xlat
lock
aaa
loope
pop
into
cmp
jbe
mov
mov
and
popa
and
popa
rolb
jbe
and
xlat
arpl
sti
push
repnz
mov
jp
and
or
mov
scas
pushf
roll
xchg
divl
das
iret
and
mov
gs
push
aaa
mov
jnp
hlt
arpl
mov
cmpsb
scas
dec
cmpsl
pop
das
adc
add
pop
adc
fbld
xchg
cmp
aad
mov
xor
jecxz
push
push
xchg
mov
dec
out
mov
pop
ja
push
pop
jp
inc
fistl
pop
xchg
pusha
inc
jno
stc
cmpsb
xchg
adc
inc
inc
and
pop
cmp
dec
push
jbe
cmp
cmp
inc
jecxz
pop
sub
cmpsb
je
mov
in
popf
cmpsb
repnz
ljmp
cmp
or
cmp
dec
add
cmp
insl
pop
sub
scas
sbb
mov
push
and
stos
aam
sub
cmpsl
jmp
jecxz
xchg
aaa
cld
imulb
and
sbb
iret
orb
loope
test
pop
daa
add
xchg
bnd
in
and
sahf
sbb
in
jl
lods
sub
call
ja
stos
xchg
and
xchg
cwtl
jo
inc
mov
outsb
mov
mov
jb
inc
loop
ret
sbb
or
add
and
into
mov
pop
add
in
xlat
inc
mov
das
daa
pushf
jb
rorl
test
pop
xchg
push
dec
mov
sbb
mov
cmp
stos
pop
adc
or
xor
and
inc
push
sub
int3
rorb
arpl
negb
js
mov
loop
lock
lahf
movsb
push
clc
adc
addl
push
jb
test
push
dec
xlat
push
clc
mov
enter
ljmp
cli
jb
pop
jo
xor
in
sbb
mov
sbb
pop
mov
pop
jg
fildll
repnz
add
out
sbb
pop
or
sbb
ret
lret
xor
pop
xchg
dec
push
push
mov
leave
test
pusha
pop
andl
or
jo
dec
xor
sbb
sar
lock
dec
insl
mov
adc
push
adc
data16
or
jae
cmp
lods
jns
int3
call
jg
loopne
into
fdivr
jns
pop
jb
xchg
stos
fmul
inc
xor
es
xchg
mov
mov
popa
int
jle
pusha
rcrb
lcall
lret
outsl
jmp
xorl
add
aad
jl
cmp
or
pop
ficomps
mov
and
xchg
fcmovne
aam
xor
mov
xor
stos
push
lock
shll
imul
orb
flds
ja
std
mov
sarl
push
sub
push
ret
stos
pop
lret
fistpl
push
sub
pop
mov
in
push
xor
xorb
mov
ja
gs
xor
ror
inc
inc
gs
xchg
fcmove
test
mov
arpl
push
test
xchg
cli
icebp
or
jge
inc
or
cmp
xchg
lret
or
rclb
add
cmp
jge
iret
push
push
and
adc
xor
jp
flds
stos
mov
out
inc
cmp
aaa
push
push
les
div
flds
mov
in
orl
in
cmpsl
popf
add
dec
adc
push
and
inc
call
out
jbe
test
mov
ficoms
ret
dec
dec
loop
add
mov
mov
add
pop
or
cmpsb
pushf
sarl
lods
xor
es
push
inc
mov
sub
xor
add
pop
fidivl
lret
cs
fdivl
mov
or
jne
cmp
add
out
and
pop
mov
xlat
mov
push
mov
xor
in
test
mov
pusha
sbb
pop
gs
or
mov
rorb
dec
into
cmp
jmp
pop
inc
les
out
jbe
ret
mov
or
in
mov
cmc
lahf
sub
movsb
inc
cwtl
cltd
inc
movd
sbbb
jnp
ret
movsb
mov
jmp
jp
push
hlt
lret
test
cmpsb
push
shrb
mov
fimuls
pop
stos
jno
inc
call
jnp
adc
or
mov
lock
test
daa
push
mov
insl
cld
mov
scas
mov
push
jnp
insb
and
inc
push
jbe
pop
xlat
inc
xor
bound
jmp
xchg
popa
mov
lret
sbb
mov
add
outsl
xor
adc
jp
mov
xor
repnz
push
pop
sub
mov
inc
sub
pop
or
adc
push
hlt
aas
stc
les
mov
into
fstps
lret
icebp
popa
rcll
pushf
ja
bound
add
shl
lret
mov
lea
pop
pop
sub
dec
sub
mov
lret
lcall
enter
ret
movsl
fdivrl
cmp
sub
decb
sarb
adc
insb
nop
dec
dec
bound
pop
in
mov
dec
mov
test
jbe
popa
inc
repnz
xor
out
pop
jno
adc
insb
xchg
mov
xchg
inc
leave
cmp
idivl
lret
xchg
or
lock
push
jo
xchg
rcll
push
mov
lds
jbe
aad
pop
ret
jle
xlat
push
push
mov
and
xchg
xchg
xchg
mov
cmpsl
dec
test
test
das
je
ss
cmpsb
jo
sub
dec
aad
testl
xchg
in
inc
xlat
andl
lea
dec
mov
mov
enter
movsl
pusha
mov
stos
mov
mov
pop
clc
pusha
push
mov
cmp
movsb
call
jl
xchg
add
call
push
add
mov
push
and
mov
cmp
scas
jo
stc
aaa
addps
rcll
negl
mov
and
jns
xlat
or
mov
std
inc
push
pop
dec
dec
pop
pop
and
scas
cmp
lahf
aam
adc
sub
sub
addl
fdivrl
lock
adc
cld
mov
nop
sub
fldcw
aam
add
fwait
xor
dec
mov
data16
loope
andl
xchg
insl
ficoms
mov
or
std
es
push
and
mov
cld
std
andb
dec
rcrb
lods
xor
dec
lcall
push
sar
ss
adc
dec
adc
mov
outsl
pop
mov
ds
lods
sub
pusha
or
lock
shlb
je
and
outsl
sub
pop
subl
or
lock
movsb
neg
movsl
or
xor
and
cmp
popf
fildll
shrb
pop
jl
sbb
je
imul
push
sbb
sub
lods
pusha
pop
sbb
mov
dec
sub
sbb
xor
mov
icebp
in
push
aad
shll
es
subl
loop
cmpsl
xchg
push
adc
dec
push
bnd
sar
test
sbb
adc
mov
jae
jb
hlt
repz
fdivrl
inc
out
negb
nop
ljmp
sbb
pop
aaa
movsl
inc
dec
fwait
mov
lahf
scas
out
sbb
hlt
lret
ds
ja
xlat
adc
andl
hlt
in
pop
ret
sbb
xor
inc
push
sahf
mov
das
rclb
and
add
sbb
lods
in
dec
pusha
adc
sbb
jno
add
xstore-rng
cmpsl
add
push
xchg
dec
pop
bswap
pop
xorl
imul
or
inc
aas
pop
sbb
in
inc
sbb
mov
fnstcw
pop
mov
test
jne
dec
pop
aaa
loopne
pushf
push
cmpsb
mov
movsb
xor
sbb
fcomps
adc
dec
insb
lea
mov
mov
iret
mov
push
ljmpw
addl
cmp
xor
mov
fcompl
fisttpll
push
imul
push
ljmp
dec
in
pop
aas
ja
cli
adc
cmp
xlat
lods
lret
mov
into
int3
rcrl
aas
aam
insb
out
cmp
inc
outsb
shl
pop
js
mov
data16
int3
movsb
out
and
dec
mov
mov
pop
fisubl
lock
insl
arpl
mov
fiadds
into
es
or
mov
int
popa
aad
mov
xor
arpl
or
adc
call
je
inc
ljmp
test
pop
mov
add
fdiv
xor
push
dec
inc
pop
rcrb
jnp
dec
push
xchg
and
clc
inc
xor
inc
adc
push
pop
and
pop
push
or
clc
inc
aaa
or
and
imull
lock
inc
test
movsb
sbb
jne
dec
test
inc
sti
add
ror
mov
stos
test
fnsave
sahf
cmp
lret
or
and
dec
xor
mov
add
cwtl
daa
mov
sbb
push
inc
outsb
into
push
jecxz
in
sbb
out
ds
std
hlt
out
mov
xchg
daa
adc
aaa
push
pop
imul
shlb
sbbb
pop
mov
lahf
adc
cmp
dec
fmul
and
dec
xor
daa
mov
mov
iret
clc
pop
inc
test
fldl
jl
scas
mov
pop
push
cmp
lahf
xchg
repz
and
cli
pushf
nop
nop
dec
aas
add
in
fdivrl
sbb
pop
clc
sbb
and
imul
mov
push
xchg
dec
push
mov
push
std
repnz
fstpt
push
mov
xchg
insb
in
jbe
push
mov
bound
and
push
data16
lret
inc
popa
dec
aas
in
and
pop
jmp
ret
and
neg
sub
addr16
xchg
sarb
push
push
push
mov
add
mov
pop
popa
inc
fsubr
inc
cld
jg
xor
aam
mov
ret
je
test
lcall
add
call
inc
scas
adc
pop
sti
jae
cmp
scas
adcb
add
sarl
xor
pop
icebp
xchg
lret
and
mov
add
xor
jns
lret
xchg
insl
js
mov
int3
in
mov
inc
pop
jae
int
fsubrs
mov
and
and
into
cltd
fs
mov
out
shlb
or
pop
les
mov
sahf
xor
jbe
and
xchg
lods
shll
loop
pop
movb
adc
sbb
in
jle
fstps
mov
jp
xor
cmp
jl
popl
pop
rorb
int
out
repnz
aad
les
and
or
rclb
mov
adc
adc
shll
add
dec
repz
scas
xchg
cmpsl
xor
jns
pop
cmp
jne
sbb
mov
pop
call
xchg
pusha
dec
or
out
dec
aad
pop
xchg
or
dec
mov
add
rcrl
dec
jl
ja
lods
or
andps
inc
jae
dec
sbb
std
sub
xor
pop
pcmpgtw
imul
movl
lock
orl
pop
data16
push
rcll
je
clc
lahf
jbe
xor
cmp
cmp
lock
lods
pop
test
bound
movsb
inc
push
jne
sbb
shrb
xor
dec
cmp
push
lods
imul
xchg
inc
jnp
push
nop
jbe
popf
or
xor
fisttpll
mov
inc
or
adc
in
lods
pop
xlat
jmp
mov
mov
cli
js
dec
je
lahf
enter
bound
and
sbb
rclb
jno
add
add
mov
in
jle
out
xchg
or
jl
sbb
mov
inc
mov
cmp
dec
jge
add
shlb
xchg
lock
lahf
test
cwtl
insl
or
sarb
add
pop
dec
fnstcw
jbe
pushf
outsl
sbb
idivl
les
mov
push
lret
cmc
jmp
lods
int3
addr16
cmp
insl
dec
add
cltd
jne
push
cltd
loop
xchg
and
adc
cmp
mov
and
sti
test
ljmp
das
out
mov
int3
in
pop
ljmp
add
jle
xchg
pop
addr16
cmpsl
out
xor
fs
inc
popa
mov
inc
adc
daa
scas
cmc
xchg
cmp
pop
bound
in
rcrl
dec
dec
cmp
jg
arpl
xchg
lea
sbb
bnd
sarl
imul
jmp
out
inc
mov
imul
xor
shlb
jl
add
pop
push
dec
mov
leave
stos
mov
jbe
push
pop
test
cltd
cmp
std
dec
inc
fidivrl
push
daa
js
mov
addr16
xorb
jecxz
or
in
lret
out
cltd
inc
jb
rorl
or
cmp
sbb
xlat
add
cmp
push
imul
inc
out
and
jp
fcoml
fcoml
out
lds
xchg
bound
lock
push
out
jo
dec
dec
cli
sbb
add
pop
int
adc
jmp
fwait
clc
mov
or
in
dec
js
in
sbb
mov
xchg
mov
repz
imul
stos
xchg
out
xchg
in
inc
and
pop
push
roll
test
jp
and
mov
fnsave
dec
or
sahf
fdivrs
rcl
dec
mov
push
mov
xorl
or
fcomps
adc
jle
push
push
bound
push
lcall
add
aam
lea
sub
test
bound
sahf
mov
pop
jne
pop
adc
aas
cmp
xchg
sbb
mov
rcrl
sub
inc
ret
bound
lret
lcall
repz
and
xchg
sarb
fcompl
out
or
or
imul
jmp
dec
stos
enter
fsubs
mov
fldt
pop
int
repz
jno
iret
shrl
xchg
mov
cmp
mov
out
push
repz
push
mov
sbb
jb
jp
dec
xorb
add
stos
xchg
mov
push
mov
pushf
xor
shl
sub
test
std
and
mov
mov
test
ror
cmpsb
enter
or
out
insb
cmp
pop
inc
ret
sub
dec
test
xor
inc
add
in
dec
mov
cmp
imul
pop
stc
inc
sbb
mov
wbinvd
aas
test
ds
mov
das
xchg
sbb
cmp
fistps
mov
mov
pushf
in
sbb
fmul
lods
jbe
arpl
in
dec
nop
sub
sbb
out
add
xchg
aam
xchg
adc
mov
gs
bound
sbb
cltd
jbe
inc
adc
dec
add
sbb
clc
aas
mov
xorb
ret
mov
dec
nop
or
push
sub
lcall
loope
or
gs
ljmp
pop
sub
shll
or
ljmp
xchg
repz
in
into
mov
push
and
add
icebp
ja
lock
mov
roll
je
cmp
cld
outsb
push
and
mov
add
icebp
pop
push
filds
loop
lret
test
sahf
xchg
or
ljmp
inc
cltd
mov
and
cmpsb
loopne
cmp
movsb
mov
xchg
adc
stos
cld
pop
cs
mov
dec
add
xchg
xchg
out
shrb
mov
cmp
fildll
jge
daa
and
aad
in
xchg
popf
aaa
xor
mov
enter
test
cmp
or
les
pusha
lods
mov
sub
add
sbb
push
mov
ds
push
in
int
lods
aam
lahf
das
adc
std
and
dec
add
lret
ds
cmp
xchg
fwait
sbb
cmp
stos
pop
nop
sti
repnz
and
sbb
mov
mov
mov
pop
roll
or
pop
outsb
je
xor
scas
clc
movsb
aas
test
rcr
cmp
jmp
mov
inc
mov
push
jmp
xor
xchg
pop
leave
lods
push
addr16
xchg
adc
repnz
mov
push
inc
fwait
cld
xchg
ret
lds
aas
mov
in
mov
adc
stos
or
cs
jne
or
into
add
pop
add
pop
lcall
jge
jl
sbb
sub
mov
aas
add
in
arpl
sub
adc
pop
mov
aas
test
sub
fmul
int
ljmp
mov
scas
test
sbb
nop
hlt
in
popf
inc
mov
sbb
xchg
frstor
xchg
sub
je
rclb
mov
enter
lcall
daa
fcompl
les
xor
sbb
push
negb
and
xchg
popf
movsb
mov
mov
inc
dec
pushf
inc
jb
hlt
pextrw
jp
push
mov
cld
xor
cmp
scas
jl
push
push
cmpsl
fisttps
aaa
jbe
xchg
sub
sub
out
xchg
mov
lods
xchg
pop
mov
loop
not
cmp
test
sbb
int
or
and
insl
lcall
insl
sbb
xchg
filds
adc
shrl
leave
fistps
insb
sbb
pusha
dec
mov
mov
inc
aam
cld
fisttps
mov
xchg
dec
cmpsb
and
jmp
sbb
xlat
ret
test
xor
add
adc
cmpb
orb
cmp
lret
adc
jnp
insl
test
js
adc
push
mov
mov
repnz
loopne
addb
and
mov
shrd
fistpll
lea
and
inc
adc
xor
cld
fcmovnb
xchg
mov
das
and
mov
push
add
fstp
leave
fiadds
sub
rorl
push
inc
lcall
add
mov
lods
fimuls
push
sub
cmpsb
jg
push
and
repnz
dec
or
push
sbb
sub
sbb
stc
ds
stos
cltd
repnz
sbb
fisttps
mov
mov
xor
push
sbb
and
cmp
pusha
add
push
cli
mov
jne
iret
dec
fbstp
dec
xor
sub
and
mov
flds
fwait
mov
test
js
lcall
int3
mov
fdivrs
fs
cmpsb
jae
pop
pusha
sub
inc
lahf
adc
jmp
cmp
repnz
sub
cmp
mov
cld
popf
or
hlt
jo,pn
bound
sbb
dec
jg
shll
lcall
jne
inc
push
cs
lcall
push
and
movsb
dec
decl
pop
stos
add
cmp
out
adc
lea
mov
rep
sub
lock
jle
popf
inc
mov
insw
push
push
lahf
pop
sub
mov
aaa
xor
jl
outsl
mov
and
cmpsb
icebp
inc
out
xor
scas
stos
cmp
dec
test
shrb
enter
pop
fnsave
popa
mov
inc
pop
mov
or
lock
jecxz
xlat
pop
scas
jb
jns
adc
lea
sbbl
js
sub
push
dec
pop
sbb
out
loopne
repz
adc
mov
jnp
add
and
outsl
hlt
mov
jle
lret
adc
push
fidivrl
mov
pop
sbb
std
clc
adc
stos
shll
xor
mov
sub
das
les
sbb
xor
adc
icebp
ja
xlat
pusha
out
loop
aad
cwtl
lret
sbb
xlat
fsub
sti
jns
mov
shl
lds
xchg
push
push
testb
inc
rcll
xor
in
push
xchg
inc
stos
lret
imul
mov
repnz
jp
fmulp
dec
xchg
xchg
mov
xor
mov
push
sbb
jecxz
cmp
cmp
push
mov
lret
adc
decl
aad
pop
mov
stos
mov
mov
fisttps
outsl
add
add
cmc
scas
popa
test
mov
sahf
sub
mov
divl
cwtl
ds
cmp
outsl
js
push
notl
push
push
jmp
jnp
xor
mov
xor
fistpl
jecxz
pop
fs
les
xor
dec
gs
or
inc
xor
mov
sub
cmc
rcr
adc
js
sub
mov
add
orl
inc
popa
out
xchg
xchg
rcll
pop
xor
adc
mov
inc
mov
cmp
mov
push
imul
adc
mov
nop
stc
xor
pop
mov
aad
test
xor
leave
mov
fistpll
cwtl
mov
add
mov
fcoms
xlat
out
out
sbb
dec
je
pop
xlat
or
stos
xchg
es
fcmovu
pop
or
jle
idivl
xchg
mulb
or
mov
push
cmpb
fsubrl
mov
and
pop
ret
scas
mov
aad
iret
mov
movsl
cli
push
shll
lds
lock
pop
cmpps
pop
outsl
data16
cwtl
shrb
pop
mov
je
or
addr16
pop
dec
es
mov
pop
cmp
or
imul
xchg
outsl
sarb
jle
inc
xlat
repnz
add
mov
cltd
stos
mov
xchg
rorl
mov
xchg
lea
jno
xchg
hlt
arpl
mov
mov
sub
dec
cmp
xor
shl
in
andb
stos
pop
inc
or
sbb
inc
inc
jle
es
sbb
push
sub
adc
push
lret
addr16
mov
pop
cmc
mov
push
inc
faddl
data16
inc
sub
in
mov
jo
jnp
xchg
inc
xchg
adc
sbb
sti
ja
fimull
fisubrs
fwait
clc
or
mov
pop
jne
cld
aas
pop
or
push
aam
push
sub
imul
andl
mov
outsl
mov
push
popf
jp
ljmp
and
cld
cli
mov
int3
cmc
cli
mov
xchg
cmc
inc
cmpsb
dec
and
mov
mov
xor
in
mov
pop
lods
js
sahf
ret
mov
dec
mov
adc
pop
adc
push
insl
pop
sub
jne
cmp
sbb
adc
pushf
jb
sbb
xchg
incb
imul
or
push
mov
cli
das
cmpl
stc
lcall
fwait
arpl
rcll
sub
jle
mov
jle
jle
mov
je
sti
jl
js
jl
orb
jge
sbb
repnz
pop
adc
mov
ret
pop
movsb
adc
pop
rolb
push
push
int3
dec
lods
cmpsl
loopne
adc
push
cmp
xchg
movsb
outsl
stos
cs
lret
jmp
jle
imul
sti
mov
cli
dec
jl
and
add
out
push
gs
mov
adc
gs
mov
pop
jbe
in
xor
xor
xor
out
inc
cmp
cmp
mov
add
dec
mov
stc
decb
test
gs
lret
test
bnd
mov
cmpb
mov
jl
mov
jb
or
xor
test
outsl
std
jbe
push
out
cmpl
fucom
adc
jg
push
lods
jae
xor
jmp
sbb
sub
dec
jb
int
add
or
jmp
inc
xchg
xor
les
enter
xor
lea
sub
jo
popf
stos
xor
sbb
adc
and
addb
sbb
adc
dec
jmp
xchg
aam
cmp
push
sub
daa
xchg
xor
notl
sbb
adc
pop
sarb
test
and
add
push
adc
add
loop
mov
je
jg
jle
lahf
in
mov
xor
inc
das
shrl
mov
push
jnp
add
shll
cwtl
jmp
cmc
cmpsl
mov
jg
ret
cmp
popf
sub
sub
sbb
imul
pop
lcall
xor
xchg
adc
ljmp
loop
adc
sbb
gs
and
ds
rol
xchg
jle
cmpsb
in
dec
pop
sub
lahf
mov
add
sti
sbb
jmp
pop
sbb
lcall
gs
iret
out
out
ret
sub
xchg
inc
dec
xchg
pop
int3
mov
ja
das
or
and
jge
sbb
dec
adc
push
xor
mov
and
fcoms
push
stos
loopne
cmp
xchg
mov
or
pop
or
mov
push
test
pop
cld
sub
mov
jo
loope
mov
daa
or
xorb
xchg
loope
and
and
pop
imul
push
sub
lcall
rolb
lods
or
sub
and
int
or
test
xor
mov
add
jne
pushf
hlt
movsb
pop
mov
sti
push
test
mov
insb
shrb
jmp
fnstsw
pop
lcall
fists
sahf
or
xchg
pushf
xlat
cmp
ljmp
repnz
into
adc
adc
out
pop
adc
out
mov
inc
test
pusha
arpl
push
inc
cli
popa
lcall
cmp
pop
jnp
mov
push
dec
mov
xor
xchg
pop
jbe
fistl
push
pop
jnp
cli
jmp
lock
inc
iret
jo
loop
xchg
std
stos
xchg
in
and
lods
cmpsb
jae
icebp
fmull
cmp
sub
cmp
sbb
aad
testb
ret
lcall
out
push
inc
cld
dec
loop
pop
lock
sahf
mov
shll
mov
aad
xcrypt-ecb
cmpsl
dec
adc
adc
xor
xor
js
jp
xchg
pop
cltd
in
rcrl
dec
cmpsb
mov
mov
rorl
cmp
jge
mov
push
hlt
pop
mov
cmc
out
test
mov
jae
in
sub
sbb
xor
add
out
dec
int
adc
and
test
test
fcoml
sub
loope
movsb
mov
std
sbb
jae
jecxz
push
orl
inc
bound
or
gs
lcall
pop
out
inc
xchg
sbb
add
xchg
dec
push
mov
jl
push
ss
cmpsb
loop
mov
sub
sub
xchg
or
into
clc
dec
sbb
loopne
inc
xor
daa
ss
in
insl
sbb
scas
lret
mov
stos
repz
fsubs
cltd
ret
mov
int3
bound
out
jle
xor
mov
push
mov
int
jmp
push
sub
jecxz
in
jg
add
sub
stos
les
fimull
stc
ret
loop
add
jbe
xor
inc
cltd
mov
aad
dec
xor
jno
daa
pop
jecxz
test
sub
pop
ret
test
pop
xchg
pop
mov
xchg
push
mov
pop
stos
repnz
or
repnz
mov
and
cmp
inc
imul
pop
xlat
inc
loopne
or
std
divb
push
in
mov
push
pop
movsb
sub
lods
or
mov
dec
rcrb
lds
ja
nop
lods
pop
je
scas
clc
lret
dec
mov
test
push
jmp
mov
jg
xor
imul
fdivrl
sub
dec
loope
movsl
sbb
mov
jge
rolb
cmp
insb
cmp
adc
pop
push
fldcw
or
outsl
pop
loop
gs
xchg
pusha
out
cmpsl
test
cmp
mov
adc
iret
sbbb
jp
xor
into
mov
or
pop
fidivrs
ss
test
sbb
jb
or
outsb
add
out
pusha
adc
xchg
dec
xchg
inc
jmp
cwtl
arpl
dec
call
xchg
movsb
test
xchg
adc
mov
inc
rcrb
mov
test
das
inc
dec
shl
aam
ljmp
pop
or
add
in
je
inc
xchg
jnp
aam
sbb
mov
mov
fcom
inc
or
inc
xor
ja
pop
test
and
mov
sbb
add
jle
dec
inc
std
push
and
or
dec
jb
dec
push
into
scas
popa
jns
addl
and
mov
out
sub
loop
sti
xchg
insl
inc
outsb
add
sahf
int
ja
dec
cmp
sahf
popa
jl
lahf
sub
icebp
sub
hlt
call
outsl
mov
fs
sbb
mov
sub
mov
push
orl
cmp
mov
insl
and
inc
mov
mov
inc
mov
out
movsl
andb
lds
inc
ljmp
mov
mov
in
aam
pop
dec
push
gs
icebp
cs
mov
loopne
inc
icebp
enter
mov
jge
cmp
leave
aam
daa
fs
jecxz
or
lods
lcall
xchg
out
sub
loop
mov
adc
adc
lds
sbb
lods
inc
mov
jae
jne
dec
jmp
leave
mov
in
cld
adc
mov
adc
sub
lds
jbe
test
fdivrl
jo
scas
cmp
ret
pop
std
add
pop
test
movsb
lea
or
adc
js
pop
sbb
mov
loop
shll
stos
outsl
xchg
inc
es
push
xor
add
inc
loopne
mov
lcall
jno
or
jmp
loope
push
dec
xor
jbe
jp
mov
rcl
lret
sti
daa
cmc
dec
mov
and
and
and
ret
push
xor
stos
pop
shll
ds
movsb
daa
add
shrb
lods
in
jns
inc
xor
add
nop
dec
add
fdivrp
cmp
and
xor
jae
cli
rcl
les
push
std
xor
cmp
xlat
push
dec
dec
pop
mov
inc
lret
lods
test
xchg
adc
mov
mov
lds
inc
inc
sahf
imul
adc
les
addr16
add
add
xchg
push
xchg
push
rcll
cs
pop
sbb
add
push
icebp
ss
mov
mov
xchg
sbb
mov
addr16
cli
ficompl
adc
popf
aad
push
pop
lods
nopl
and
test
loope
mov
xchg
mov
leave
xor
mov
sub
test
sbb
mov
jp
pop
lret
loopne
jae
sub
gs
cmc
cs
mov
pop
push
test
fldl
xchg
addr16
sub
sbb
xor
daa
add
lret
xor
or
mov
or
sbb
stc
cmp
scas
mov
cmp
xor
sahf
mov
or
sub
test
call
mov
inc
sub
mov
leave
stc
inc
inc
into
cmp
xor
insl
pop
pop
aam
inc
push
clc
rcrl
int
mov
aaa
movsb
jmp
call
je
add
mov
xchg
std
das
jns
insl
sbb
addb
shr
cli
dec
sub
add
imul
xchg
popa
mov
jb
icebp
xor
subps
sbbl
call
dec
call
xlat
stos
in
loopne
mov
jnp
movsl
dec
fldenv
push
mov
data16
gs
lds
icebp
inc
mov
aam
out
mov
xchg
xorb
mov
pusha
ljmp
in
cmp
pusha
lea
xchg
movsb
ret
sahf
ret
push
aaa
sub
mov
ljmp
sbb
nop
adc
ret
popf
into
jp
mov
out
std
lret
fwait
or
into
int3
mov
cmpsb
jp
lret
and
hlt
or
dec
mov
jb
adc
inc
mov
popf
jecxz
iret
call
cs
test
push
lds
inc
pop
push
popf
inc
xchg
test
testb
cltd
add
sub
mov
cld
rcl
daa
ds
ret
sub
loopne
fld
pop
xor
dec
cmc
dec
inc
pop
mov
dec
aam
cld
lds
ja
addr16
xchg
mov
inc
std
in
imul
scas
lahf
and
shlb
jae
cmp
mov
cmp
jle
jl
cltd
mov
ret
fmulp
lcall
or
hlt
xchg
jmp
lods
rcrb
pop
sbb
jne
and
fwait
ret
pop
or
mov
int3
or
movsl
ret
addr16
xchg
cs
inc
loope
insb
fbld
cltd
popw
xchg
in
clc
ss
out
lcall
mov
shlb
or
xor
in
mov
mov
orl
push
movsb
fistl
cli
outsl
sbb
fldenv
pop
push
cmp
dec
incl
sar
movsb
pop
mov
ja
into
shlb
fwait
and
ret
test
fnstsw
stc
pop
mov
shlb
fsubrl
adc
sbb
iret
cld
pop
cwtl
cmpsl
fwait
clc
nop
add
pushf
cmc
call
jp
sbb
jle
xchg
pop
test
sbb
data16
ret
mov
std
pushf
pop
mov
jge
sti
or
mov
sar
inc
dec
loopne
xchg
cmp
mov
fsts
inc
add
pop
jp
test
adc
push
push
mov
shrl
pop
cmp
or
cltd
sbb
dec
sbb
mov
ja
scas
mov
cmp
seta
int
pop
sbb
adc
sub
mov
adc
pop
test
cmpsl
loope
enter
loopne
sub
ss
shrb
enter
stc
out
sbb
out
shrb
mov
inc
jno
outsb
push
sbb
jae
lahf
mov
sub
fidivrs
aaa
test
dec
in
in
xchg
xchg
mov
mov
xor
jo
pushf
pop
xchg
stc
in
dec
mov
in
mov
jbe
loop
rol
xchg
dec
jne
notb
lods
mov
sarl
sahf
lcall
insb
xchg
xchg
inc
fists
push
mov
xlat
cld
testl
fcomi
push
outsb
sub
cmpb
inc
pusha
icebp
mov
fistps
push
loop
ret
fwait
sbb
push
cmp
jnp
sbb
cmp
gs
cmp
mov
cmp
dec
mov
movsb
mov
dec
inc
sbbb
pop
inc
outsl
jmp
mov
pop
scas
imul
mov
jae
sbbl
subb
push
lock
orb
push
icebp
sub
fisubs
mov
sub
shlb
adc
sub
movsb
dec
dec
adc
out
jmp
cwtl
mov
repnz
popf
ljmp
add
setl
cmc
xchg
mov
or
push
push
lods
jge
sub
pop
and
adc
adc
mov
dec
int3
mov
dec
or
dec
jno
pop
pushf
sub
les
mov
mov
xchg
xor
addr16
pop
pop
push
sarl
addl
pop
aaa
and
or
dec
std
rcrb
jp
push
push
push
aam
int3
nop
sti
pop
sbb
pop
idivl
inc
push
push
or
pop
xchg
ret
dec
add
hlt
stos
ss
jo
push
out
sbb
in
in
adc
lods
psrld
jne
push
stc
into
cmp
dec
add
add
into
fidivl
je
les
mov
mov
jbe
mov
mov
sub
cmp
inc
fsubrp
jmp
mov
icebp
sbb
inc
jns
cwtl
fcomps
xchg
ja
les
xor
adc
sub
cli
sub
fs
inc
mov
pop
sbb
outsl
fbstp
icebp
add
sbbl
add
iret
jno
jge
sub
insl
pop
jecxz
xchg
in
mov
mov
cld
sub
jae
cmpsb
pop
push
pop
cmpsb
xchg
shll
xchg
inc
inc
inc
inc
test
cmp
fdivrs
cmovbe
movsl
sub
lds
ds
dec
xor
pop
mov
dec
pop
clc
or
iret
ret
add
push
ret
xchg
sub
or
mov
jae
adcl
cltd
xor
mov
fistpll
xor
cmp
insb
mov
xchg
hlt
jl
lcall
push
add
andl
mov
loop
mov
cmp
and
wrmsr
push
mov
xchg
shrb
sti
or
jne
jae
movsl
mov
cld
mov
push
aas
push
cmpsb
xchg
sahf
dec
and
dec
sub
scas
rclb
out
mov
cmp
jg
cmpb
insl
mov
movsb
jne
loopne
pop
movb
push
fucomip
das
bound
cmpl
hlt
lds
mov
push
or
xlat
addr16
jne
or
mov
sahf
mov
and
fstpt
pcmpeqb
js
gs
or
inc
daa
cmpl
dec
inc
lods
aad
je
sub
aam
fcompl
xchg
adc
xchg
pop
pop
fldt
pop
repz
xor
cld
in
stos
pop
pop
jl
push
jmp
xchg
pop
sarb
mov
arpl
pop
push
arpl
jnp
xchg
test
shl
xor
jmp
dec
in
scas
xchg
push
flds
sub
xor
push
pop
push
arpl
test
jo
lcall
in
arpl
sbb
add
mov
adc
out
mov
popf
push
mov
mov
int3
xchg
nop
inc
icebp
pushf
lods
lcall
cmpl
aas
sbb
add
ss
adcl
js
sarb
loopne
jg
in
mov
or
out
ficoms
inc
jmp
sub
lods
std
sub
test
xor
add
pop
out
int
add
adc
cmpsl
add
subl
push
inc
imul
enter
cmp
lret
add
imulb
ret
lock
repz
out
leave
xchg
pop
test
mov
hlt
sbb
leave
idivl
jmp
dec
inc
xchg
push
mov
and
xchg
stos
xchg
push
cmp
xchg
sub
repz
pop
jns
xchg
gs
inc
cs
sbb
jb
mov
mov
loop
sub
adc
cltd
xchg
jge
or
mov
nop
mov
and
mov
pop
sub
cmc
shrl
ror
sub
sbbl
fucom
inc
push
dec
adcb
pop
add
push
xchg
inc
xor
dec
je
in
mov
rorb
fimuls
movsb
add
movb
cltd
pop
xchg
mov
enter
sub
ds
mov
rcrb
adc
iret
xchg
imul
jecxz
pop
movsl
arpl
mov
push
daa
inc
cli
mov
fcompl
fcomps
pop
stos
dec
mov
add
arpl
xchg
fisttps
movsb
or
ja
push
xor
ret
pop
lret
or
in
cmp
push
das
pop
mov
outsb
in
iret
daa
pop
iret
push
cmp
int
mov
dec
imul
fldenv
sub
pop
fstpl
inc
pop
stos
call
dec
add
popf
lahf
xor
sub
adc
dec
stos
in
push
jo
pushl
fdivrp
mov
mov
repnz
enter
cltd
xor
sbbl
push
lret
dec
lcall
inc
and
cmp
or
xor
cs
sti
test
gs
jmp
push
mov
dec
stos
iret
into
sbb
shlb
pop
aam
shrl
adc
mov
scas
lods
xchg
data16
jmp
fcompl
push
add
adc
and
push
jno
mov
pmulhuw
repz
out
sub
xchg
push
push
sbb
or
lret
xchg
nop
in
mov
ror
out
xchg
pop
notl
or
cmp
pop
loop
adc
sub
or
scas
fcoms
cmp
adc
test
or
cmp
jbe
xchg
sbb
fadds
lahf
jne
iret
dec
aad
test
xlat
cmc
add
push
adc
out
popf
xchg
movsl
pop
icebp
pop
in
pop
xor
loopne
jbe
jno
add
mov
xchg
push
push
fwait
xor
mov
push
push
fisubrs
outsb
call
pop
xchg
xchg
lahf
test
pusha
or
ljmp
cwtl
lods
popf
xchg
xor
jp
ds
ret
dec
xchg
jns
in
mov
push
xor
mov
add
fwait
jne
or
pop
jnp
popf
inc
pusha
pop
repnz
addr16
adc
sub
rorb
mov
xchg
xor
dec
push
sub
decl
cmp
mov
and
loopne
adc
sbb
daa
mov
pushf
and
or
add
or
or
loope
add
push
jmp
bnd
and
test
lods
pop
fwait
lods
push
xor
and
or
xor
nop
mov
xchg
aad
ss
scas
add
sbb
adc
outsl
shrl
fwait
outsb
scas
jecxz
loope
stos
or
fildl
inc
xor
in
insl
pop
add
push
sub
add
xor
ljmp
psrld
sub
xchg
mov
mov
es
xor
movsb
fildll
pop
les
sub
pop
sub
or
mov
jl
push
ds
cmp
xchg
sbb
add
or
sub
jnp
test
test
lock
movsb
cs
xor
iret
add
adc
sahf
push
repnz
xor
lock
pop
xchg
jle
push
ljmp
ds
sarb
loop
adc
or
loope
mov
inc
adc
mov
push
lret
out
adc
mov
xchg
hlt
and
mov
inc
imul
push
xchg
cmc
push
fstpl
mov
in
mov
ja
mov
dec
cmc
xchg
je
and
push
rorl
or
mov
pop
repz
inc
or
lds
and
lret
rcl
inc
jne
fcoml
iret
mov
in
inc
aad
push
aad
scas
inc
out
mov
out
or
push
add
jae
test
fidivrs
fcmovb
aad
sub
pop
popf
dec
adc
leave
sti
andb
cmp
rorb
or
addr16
pop
dec
rcr
inc
or
lcall
loop
hlt
or
aam
or
inc
loop
lcall
inc
into
and
insl
adc
movsb
mov
adc
leave
sub
lcall
mov
mov
dec
fs
pop
sbb
stc
pop
js
out
mov
mov
xor
xor
int3
scas
ds
testb
pop
sbb
jge
subl
pop
inc
insb
sub
hlt
out
dec
insb
push
scas
xchg
mull
into
out
adc
dec
or
cmp
xor
gs
jp
sbb
jo
repnz
je
add
pop
lea
lret
add
mov
sahf
mov
lea
cmpsl
xor
push
push
iret
daa
or
mov
test
jbe
shll
mov
out
fdiv
stos
cld
sub
xor
sub
dec
sub
out
inc
inc
pop
mov
lods
lret
adc
negb
fiadds
nop
test
mul
inc
mov
dec
das
sub
test
sub
daa
mov
mov
mov
cwtl
testl
adc
or
wbinvd
inc
loope
in
out
dec
mov
pop
shl
std
sub
mov
xchg
mov
int3
hlt
xchg
sbb
pop
enter
loopne
xchg
cmpsb
fs
pop
aad
mov
jp
pop
mov
mov
scas
cltd
ss
pop
shlb
clc
popa
cmpsb
cmpsb
mov
fisttpl
cltd
jmp
je
dec
outsb
in
imul
jmp
lods
jge
insl
out
mov
sti
aad
scas
adc
bound
jl
mov
mov
mov
xchg
insl
scas
mov
jns
adc
mov
fidivrl
lea
jl
push
jmp
sub
push
inc
imul
pop
inc
sbb
mov
in
loope
xor
mov
call
out
ja
in
clc
sub
pushf
add
ret
aam
lea
mov
cmc
clc
pop
arpl
dec
fwait
push
or
in
xor
add
xor
mov
lret
and
xchg
push
stc
inc
test
lcall
imull
and
iret
xor
xor
xchg
or
xchg
or
movsl
cld
shll
bound
dec
or
fisubrl
xchg
scas
xor
xchg
lods
sub
jnp
mov
or
xlat
out
ljmp
cli
pop
icebp
xchg
stos
imul
push
mov
ja
stos
xor
xchg
call
jmp
or
dec
dec
outsb
test
sbb
repz
cmp
bound
push
or
mov
jns
insl
jecxz
in
mov
je
xchg
out
push
cltd
and
push
ja
xchg
mov
sub
push
sbb
aad
adc
add
xchg
stc
push
stos
cmp
fs
lods
mov
mov
xlat
push
or
jl
cltd
sub
test
loop
scas
push
pop
mov
and
mov
sub
inc
test
loopne
push
or
lea
inc
mov
jae
push
pop
jmp
gs
loope
mov
mov
fildl
insb
mov
outsl
mov
xchg
loop
movsb
int
mov
sub
dec
push
dec
lods
inc
mov
pop
movsb
adc
sub
dec
sub
popf
ror
cmp
or
je
mov
stc
mov
inc
pop
mov
dec
mov
fldt
cmp
mov
sub
mov
fistps
jg
mov
sub
cltd
dec
xor
xchg
jo
in
fcom
or
lea
insb
movsl
xor
xor
cmc
or
aad
and
call
lock
loope
fsubp
xchg
enter
std
mov
and
icebp
mov
inc
lods
pushw
push
and
stc
pop
dec
test
lods
iret
ficoms
xlat
mov
rcr
enter
push
push
add
jno
stc
mov
stc
dec
lahf
cltd
mov
sbb
mov
test
jno
xchg
xchg
pop
xchg
fwait
inc
cli
lcall
call
xchg
sub
rorb
daa
pop
in
gs
fs
mov
push
xchg
je
rcr
shll
mov
pop
mov
mov
fwait
add
or
dec
test
push
push
sbb
leave
inc
out
out
icebp
mov
fildl
add
lods
or
sub
hlt
clc
out
sub
push
pop
hlt
xchg
cli
jg
add
testl
xor
fneni(8087
in
mov
in
and
jo
xchg
fsubl
jne
or
lcall
jge
imul
inc
hlt
lds
and
call
andb
sub
add
movsl
adc
aad
jp
add
stos
mov
xlat
dec
enter
pop
icebp
push
push
add
fdivs
dec
test
js
push
push
jp
push
xchg
xchg
cli
mov
imul
out
rep
and
test
cmp
out
sbb
pop
sbb
jb
add
out
or
push
sub
stc
popa
sti
ja
dec
loop
shl
xchg
or
mov
fnstenv
jg
sbb
scas
ds
out
aad
push
repnz
test
pop
or
sub
cmp
mov
push
cmp
mov
pusha
cld
daa
cmp
add
jno
test
adc
in
arpl
stos
lahf
pushf
xchg
inc
xchg
inc
icebp
add
aad
jg
pop
dec
bnd
cmp
dec
stos
cmp
in
sub
lds
inc
addl
mov
dec
fndisi(8087
push
mov
rclb
push
lahf
or
arpl
mov
out
and
cmpsb
add
or
paddusb
stc
shll
ffree
and
sub
xor
adc
adcl
int3
sbb
rclb
ljmp
ffreep
popf
bound
cwtl
xlat
jno
xchg
mov
outsl
add
mov
jnp
in
or
add
add
mov
lahf
mov
sub
add
mov
push
lret
cli
mov
out
xor
inc
add
sbb
sbbl
jb
xchg
iret
xchg
fcomi
mov
jg
mov
or
aaa
insl
int
ds
mov
xor
pop
mov
in
push
xor
fwait
dec
into
pop
push
insl
ror
xor
jl
xchg
cld
bound
push
mov
iret
jmp
push
push
aas
pop
iret
and
outsb
pop
mov
sub
mov
mov
mov
hlt
repnz
and
mov
mov
fimull
cwtl
add
mov
ds
mov
xchg
lahf
xor
cmpsb
mov
mov
xor
and
cltd
adc
es
jo
xchg
xchg
les
or
or
jp
mov
pop
pop
cmp
imul
jg
cs
mov
fldcw
addr16
fldt
cmpsb
fwait
mov
ret
add
jno
jg
mov
fildl
mov
xchg
shl
dec
popf
mov
pop
push
push
aam
pop
repz
add
dec
and
fstps
xor
xchg
inc
mov
fsubl
cmp
rclb
mov
pop
sti
add
sub
stos
inc
adc
mov
jnp
pop
pop
imul
cli
stos
data16
popf
imul
pop
xor
test
loopne
push
xchg
int
pop
lcall
cltd
lcall
shrb
sbb
cmpsb
sbb
fs
jmp
icebp
aaa
push
test
sub
mov
inc
movsb
add
dec
bound
dec
lahf
lcall
jae
icebp
inc
sahf
stos
out
adc
ss
movsb
mov
leave
and
cmpsb
jecxz
js
das
or
inc
orb
mov
lock
and
aaa
mov
in
orb
jns
loope
pop
pop
cs
rorl
sbb
movsl
or
dec
sub
rcl
mov
and
xlat
pop
mov
adc
icebp
test
sahf
and
xlat
cmpsb
clc
sbb
mov
pop
xchg
fcomi
mov
orb
push
add
sbbl
dec
test
xchg
lret
dec
mov
lcall
sub
pop
aad
xor
fnstenv
aas
jne
cmp
add
ret
sbb
into
mov
mov
sbb
ret
xchg
scas
cmp
pop
call
add
insb
fstpt
test
and
sub
mov
dec
sahf
fnstsw
xlat
lret
push
inc
dec
bnd
mov
pushf
cmpsb
outsl
popa
aam
jp
lds
and
add
int
jb
xlat
scas
sahf
fisttpll
dec
mov
mov
mov
mov
pop
dec
mov
popa
mov
loopne
divl
stos
add
dec
pushf
hlt
and
out
pop
into
fnsave
ret
mov
inc
dec
xchg
fnstcw
xchg
movl
add
adc
xor
xchg
sub
push
int3
bnd
xchg
or
mov
into
push
adc
mov
push
fldenv
jae
clc
jp
push
out
in
fbstp
and
fidivl
movsb
dec
jae
out
dec
cld
aas
dec
and
sbb
xor
cwtl
mov
sub
xchg
add
mov
pop
pop
lcall
cmp
push
cmc
scas
insb
xor
ss
add
cmp
xchg
out
mov
js
jb
sbbl
fdivl
cmp
lahf
cmp
ljmp
and
js
repz
and
mov
xchg
scas
mov
jnp
ss
add
push
das
adc
lods
sbb
and
add
pop
ss
iret
hlt
aam
shr
sub
jge
jnp
test
dec
jns
jge
ja
enter
les
cs
xchg
pop
scas
je
push
fmul
mov
data16
scas
pusha
push
adc
movsb
loopne
aaa
pop
dec
cmp
push
nop
sub
xchg
test
mov
xchg
sbb
mov
repz
pop
dec
pop
push
cmp
std
inc
xor
adc
xlat
sub
sbb
xlat
cwtl
cmp
or
or
shrl
add
divb
mov
lds
jne
sub
loopne
push
ja
push
sub
add
and
aad
stos
daa
or
mov
mov
std
mov
push
rorl
lahf
cmp
sub
in
in
jp
mov
push
sub
pop
mov
in
or
xor
popa
xchg
lods
cld
rcrb
movsl
aam
xchg
gs
push
ficoms
daa
push
mov
sub
inc
jne
jmp
repz
xchg
loopne
cmp
xchg
mov
jb
rorl
push
popw
dec
cmp
pushf
push
lock
test
stos
testb
enter
mov
ss
hlt
andl
sbb
repnz
movsb
idivl
scas
cltd
aam
adc
stc
and
scas
out
and
out
addb
cltd
scas
test
pop
shr
repnz
inc
mov
inc
testl
cld
icebp
jb
mov
pop
cmpsb
aaa
and
leave
push
int
jo
dec
clc
shr
inc
stc
add
cld
mov
faddl
sub
adc
das
pop
jecxz
mov
cmpl
sbb
and
nop
mov
data16
fcmovb
xchg
adc
inc
rcrl
dec
push
popf
xor
jmp
incl
mov
sbb
je
scas
lods
push
or
cmp
cmp
in
add
ss
fbld
int
lret
pusha
dec
pop
addr16
cmpsb
cmp
sub
sub
push
sbb
shlb
enter
pushf
adc
mov
imul
andb
add
pusha
lock
xchg
dec
pop
stc
and
mov
pop
xchg
dec
aaa
and
ja
leave
sbb
bound
mov
mov
and
js
repz
pushl
xchg
das
cmp
mov
ljmp
jmp
std
aad
xor
ficompl
inc
sub
out
je
pop
repz
aas
mov
mov
negl
fidivrl
mov
dec
roll
mov
cmp
jns
insb
shrb
insl
subb
mov
loop
loope
je
iret
or
movsb
cmp
mov
ret
nop
movsl
mov
dec
pop
mov
test
dec
mov
mov
mov
out
imul
orb
mov
sub
cmp
cs
sub
xchg
cmp
push
inc
ret
pop
pop
inc
sub
jmp
push
fwait
jb
dec
inc
push
fistpll
stos
ficompl
loopne
sbb
cmp
push
test
xlat
mov
jle
sbb
popa
fs
stos
xor
and
or
inc
push
adc
insb
pop
push
mov
scas
jecxz
pushf
jb
paddd
ret
fadds
jb
into
popa
push
fldl
sahf
scas
jns
test
std
push
in
into
sbb
pop
repz
in
push
lahf
adc
cli
or
pushf
cltd
pop
mov
subb
push
in
arpl
mov
in
sbb
loop
pop
cs
sbb
xchg
mov
cmp
movsl
out
xor
lods
cmc
jg
cmp
mov
add
add
push
pusha
daa
jp
or
hlt
jno
bound
lcall
jle
dec
mov
pop
push
mov
pop
dec
inc
xchg
pushf
mov
sub
ret
mov
push
stos
mov
ret
rolb
adc
stos
mov
lcall
rolb
sbb
jg
stos
int
sbb
cmp
add
call
cmova
jge
or
inc
pop
mov
dec
bound
inc
ljmp
jae
out
pop
cmp
xchg
ss
pushf
arpl
xchg
jmp
adc
mov
int3
mov
mov
adc
jnp
pop
arpl
cmp
in
xchg
ret
mov
sub
dec
scas
xor
xacquire
bound
lock
mov
fcomip
fs
cmp
cmp
shrl
aas
dec
scas
insb
pop
xchg
pop
mov
pop
fucomp
insl
in
ds
fwait
in
insl
pop
fidivrl
mov
test
cld
sub
xchg
mov
jmp
sub
mov
aam
jnp
sahf
test
push
cmp
mov
out
out
and
repz
mov
insl
pushf
nopl
add
pop
fwait
add
or
in
adc
scas
pusha
jecxz
fnstcw
add
jp
je
dec
jmp
xor
push
imul
mov
sub
mov
mov
inc
push
pop
aas
xor
es
in
lahf
jle
mov
das
std
in
into
jns
cmp
adc
push
cld
subl
cltd
cli
stos
stos
movsb
pop
sarl
sub
call
sti
sub
mov
and
jle
add
sbb
sub
mov
push
jp
scas
fnstcw
ss
mov
movups
pop
lds
lods
fxch
mov
sti
xchg
out
lds
out
xor
sbb
into
pop
stos
outsl
xchg
sahf
daa
pop
popf
lock
es
and
lds
push
arpl
mov
imul
lock
push
inc
jl
xor
movsb
pop
scas
lret
sti
adc
push
cmpl
es
jp
insb
xor
in
loopne
cmc
jecxz
pop
or
or
add
imul
les
fmul
imul
and
int3
outsb
popa
inc
sub
shr
xor
mov
cmp
sbb
jne
pop
mov
std
movsb
icebp
dec
push
ret
aam
jmp
cld
lock
pop
mov
sub
dec
inc
jmp
sarl
xchg
loope
dec
cmc
loop
adcl
xlat
stos
imul
mov
loope
popf
aad
and
lcall
pop
les
loope
lahf
imul
add
xchg
loopne
sbb
lret
push
inc
jmp
push
out
pop
mov
iret
lods
cmp
cmc
adc
int
enter
cmp
cmp
popf
aas
ljmp
xchg
push
add
test
out
mov
rorb
add
fbstp
push
das
std
rcr
add
inc
mov
pop
ret
add
hlt
gs
jo
mov
nop
inc
pop
mov
in
lret
test
inc
pop
test
stos
lcall
adcl
xor
pushf
or
test
or
mov
push
mov
inc
mov
add
lret
ret
repz
subb
fdiv
adc
out
fidivrl
jmp
and
popf
add
pop
mov
sti
fnstcw
repnz
adc
xchg
imul
mov
subb
sub
outsl
lock
push
lods
adcl
mov
iret
inc
or
sub
nop
fwait
jae
ret
dec
mov
mov
or
out
movsb
jecxz
push
push
jne
xchg
jnp
decl
stos
push
and
inc
iret
out
lods
das
push
fsts
xchg
add
mov
cli
mov
or
arpl
dec
mov
lahf
jo
loope
push
jno
imul
sahf
popf
inc
add
daa
hlt
pop
mov
cld
jl
loop
push
leave
sbb
and
out
je
hlt
fstpl
push
cmp
xlat
add
andl
negb
xchg
arpl
jge
loopne
aam
pop
cmp
loopne
test
idivb
mov
sub
daa
aaa
scas
sub
scas
push
lcall
loop
pop
cmp
pop
insb
scas
outsb
push
inc
mov
test
sub
std
cmp
jne
mov
inc
xchg
out
sbb
and
divps
cvtps2pi
lahf
dec
popa
sbb
and
aas
sbb
pop
inc
push
cmp
out
mov
push
push
fcmovu
or
xchg
pop
push
loop
popa
cmp
push
dec
or
cli
bound
mov
pop
cltd
xor
into
adc
xor
outsl
xchg
int
dec
fimull
in
add
pop
bound
or
shlb
inc
movsl
fmull
mov
dec
sbb
fsubl
out
iret
in
ret
sbb
ljmp
popa
push
hlt
orl
out
outsl
and
mov
ss
push
testl
iret
ja
xchg
out
sbb
aas
mov
adcb
add
pop
fiaddl
out
and
jp
shll
inc
mov
or
mov
dec
icebp
rol
pop
rcl
jp
add
or
es
dec
lahf
xchg
jge
into
sbbb
data16
lods
ja
ja
addr16
pop
int3
xor
mov
cld
rcrb
mov
ljmp
pop
dec
add
pop
lret
cmp
pop
into
ds
mov
and
xchg
mov
and
out
add
loopne
inc
mov
xlat
lahf
mov
pop
inc
ds
ljmp
or
sub
mov
adc
push
mov
pop
inc
shl
clc
mov
sbb
test
stos
arpl
mov
hlt
clc
sbb
inc
xor
xchg
mov
mov
test
popf
subb
sub
repnz
pop
daa
pop
inc
push
xor
fs
or
pop
xchg
or
sbb
inc
pop
lcall
out
call
cli
fists
mov
out
outsb
das
sub
icebp
xchg
jne
adc
push
dec
cltd
push
rcr
daa
jb
lahf
rcr
movl
sbbb
add
add
cld
negl
fcomps
sub
mov
sbb
adc
cltd
or
adc
push
adc
cmp
cmp
jmp
into
frstor
sub
lds
adc
pop
arpl
clc
push
cltd
sub
mov
adc
cmp
mov
mov
mov
xchg
pop
pop
mov
ljmp
jae
mov
iret
mov
pop
or
enter
aaa
push
aaa
push
xchg
xchg
add
cmpsl
lods
add
call
stos
jecxz
add
aaa
xor
ljmp
mov
lcall
sbbb
loopne
inc
shlb
inc
int
pop
inc
inc
imul
in
xchg
movsl
sti
flds
test
mov
add
push
jge
push
mov
rorl
or
xlat
fldt
imul
jp
jg
cmpsl
lret
sahf
dec
mov
inc
add
leave
jge
fwait
add
cmp
mov
push
fimull
fistl
stos
mov
mov
mov
psrad
or
mov
fisubrs
push
fwait
and
xchg
push
lea
sub
aad
add
jbe
or
je
xor
or
or
imul
data16
ss
pushl
mov
fistpl
outsl
cmc
adc
enter
cmc
dec
mov
or
in
jge
cmp
mov
add
sbb
push
fdivs
push
mov
push
push
jecxz
cli
sahf
pop
jb
jg
inc
test
xchg
lret
bnd
cs
jb
mov
shll
enter
test
sbb
mov
mov
push
pop
mov
mov
push
movsl
testb
gs
push
cmp
mov
pop
test
sti
ss
aam
repnz
arpl
outsb
jnp
fidivs
sub
repz
mov
int
je
shrb
mov
enter
adc
stc
xchg
leave
dec
mov
pop
xor
adc
je
sti
ret
xchg
mov
inc
and
push
inc
sbbb
add
push
pushf
lret
fsubs
ret
pop
movsb
pop
jne
or
fisttps
loope
lahf
and
ds
sub
insb
push
xchg
push
mov
jl
dec
das
and
je
mov
push
jbe
xor
push
imul
push
xor
lds
add
mov
outsb
mov
mov
scas
cmp
cli
ret
fistps
and
fidivrl
mov
jns
sub
les
jnp,pt
dec
mov
inc
data16
pop
xchg
mulb
fdivrs
push
lds
leave
or
out
mov
stos
jno
repnz
in
jp
push
and
out
into
adc
iret
lea
xchg
sbb
mov
cmpsb
and
dec
rcrl
sahf
fisubrl
orl
into
push
dec
xor
jecxz
cwtl
movb
imul
lods
movsb
jmp
cmpsl
pusha
mov
add
outsb
rcr
or
adc
out
popf
cmp
push
movsl
stos
xor
imul
mov
mov
xor
repnz
inc
cmp
adc
imul
jmp
stc
cmp
rclb
ds
mov
fsubs
test
mov
mov
cmp
test
stos
pop
sub
xor
pop
and
adc
and
cmc
jmp
ficompl
mov
fbstp
mov
dec
notl
hlt
stos
aaa
lcall
jnp
or
test
jbe
mov
pusha
cmc
aam
decb
shll
int
movsb
sbb
inc
lret
pop
jno
sub
push
out
pop
adc
and
mov
jo
notb
xlat
dec
sbb
xor
xchg
imul
xchg
popa
mov
dec
js
xorb
fs
pop
lcall
mov
test
fadds
arpl
pop
loopne
fldenv
gs
test
sub
test
sub
or
inc
mov
pop
out
mov
push
mov
iret
pop
inc
cwtl
jl
inc
jecxz
adc
and
lret
mov
sti
or
lret
mov
mov
cmp
repnz
cmp
movsl
mov
jle
jmp
pusha
lea
sbb
sbb
mov
daa
cmpsl
movsb
and
rorb
or
sbb
lret
add
imul
xorb
mov
fldl2e
inc
cld
inc
lods
add
stos
out
cmc
ljmp
push
mov
imul
out
dec
insl
loop
insb
por
mov
push
or
mov
mov
cwtl
cmp
push
mov
mul
lcall
in
xor
fistpll
out
jo
jmp
cmp
rorl
inc
xchg
insl
mov
inc
call
sbb
fstps
xchg
les
scas
rclb
aaa
out
mov
outsb
aas
mov
outsb
lret
cmp
jmp
and
pop
jne
mov
add
rorb
cmpb
adc
and
dec
push
clc
jp
outsb
mov
and
push
sbb
sub
lret
jo
pop
fldl
push
hlt
mov
or
push
push
add
and
lret
clc
add
daa
test
and
xor
jo
add
je
icebp
sub
dec
call
jb
js
test
stc
fwait
cmp
daa
dec
mov
pop
aaa
sub
bound
lock
int
pop
dec
sbb
fmul
out
ret
or
rclb
push
fidivrs
push
inc
popf
mov
sti
gs
lret
scas
divl
jo
rcll
je
cmp
leave
lahf
pop
idivl
push
in
push
jb
test
fcoml
rclb
adc
test
cmp
pushf
adc
ret
sbb
jp
sahf
cmp
jbe
in
rcll
aad
cmp
cmp
mov
in
inc
out
outsl
pop
mov
pusha
and
push
orl
mov
sbb
dec
mov
stos
icebp
popa
xor
mov
cmp
cld
lock
lods
add
in
jns
mov
jle
mov
nop
and
push
xchg
dec
rorb
insl
xchg
negb
fs
test
iret
lcall
into
insb
loopne
cmp
aaa
lods
xchg
and
cmp
popa
pop
mov
lods
fldl
mov
shl
xchg
out
lcall
ret
and
xor
repnz
push
jmp
bound
test
mov
mov
daa
jmp
pop
mov
test
aam
aaa
dec
negb
inc
scas
sbb
das
ret
mov
rclb
mov
and
les
sub
fidivrl
mov
cmp
out
push
jno
addl
cmp
xchg
mov
push
outsl
jle
out
addr16
add
mov
sti
jmp
mov
inc
fs
xchg
sub
xor
aad
loope
cmp
dec
enter
aas
fiadds
jl
jg
stc
mov
push
cltd
cld
mov
rcll
cld
test
stc
imul
dec
sbb
xchg
fdivr
mov
fcmovu
jle
inc
or
movsl
add
pop
sub
jne
in
sbb
lods
in
cld
dec
notl
mov
jnp
aaa
mov
jnp
mov
movsb
jmp
cmpsl
and
fcomps
or
jmp
push
mov
pop
or
sub
inc
ja
and
sahf
scas
neg
jno
mov
ret
ror
adc
scas
lret
cld
dec
inc
xor
sbb
and
das
adc
in
jecxz
int
jle
push
xchg
and
ljmp
sub
cmp
aaa
call
repnz
rclb
sbb
fwait
mov
sti
jmp
and
and
cmp
xor
inc
cltd
lcall
test
sbb
mov
call
cmpsl
jo
mov
pop
loopne
pop
push
mov
hlt
mov
xchg
or
popa
hlt
inc
aaa
dec
pop
das
adcl
mov
jge
stos
sbb
or
out
push
lcall
cmp
sub
xchg
mov
lcall
jno
add
xor
mov
insl
sbb
mov
js
inc
incb
lahf
ret
inc
dec
ja
int3
stc
cmp
sbb
add
inc
xchg
mov
add
andb
dec
lret
fadd
arpl
sbb
ret
jnp
xchg
and
cmpsl
mov
or
fstpt
or
outsl
xlat
push
push
and
sbb
adc
jge
loop
sbbb
jp
add
and
xor
or
inc
movsb
fnsave
js
pop
fwait
xor
mov
mov
fdivp
test
lods
mov
dec
add
jae
cmp
mov
sbb
loopne
sub
fnstcw
xchg
inc
lods
cmc
jl
pop
les
ret
xor
sbb
mov
popf
jbe
adc
mov
lcall
or
int
mov
fcmovb
mov
test
into
cmp
data16
mov
lock
test
gs
xor
jp
sti
cmp
nopl
leave
int
cmp
cmpsb
mov
inc
cmp
or
xor
push
adc
cmpsb
mov
sub
adc
mov
mov
sub
dec
pop
in
dec
and
cli
enter
das
push
insl
shlb
lret
xorl
icebp
aas
inc
xorl
add
addb
insb
sbb
lds
inc
mov
add
ljmp
cwtl
xchg
mov
xchg
mov
mov
out
push
lods
cmp
add
movsb
jge
add
in
cmp
inc
sbb
stc
dec
inc
ret
aaa
fsubl
stc
mov
pop
mov
repz
fdivl
push
fwait
mov
leave
sub
sar
lahf
jnp
insl
into
inc
xchg
ficoms
and
dec
aaa
fsubrl
outsl
push
pop
fwait
rolb
mov
jl
xor
div
xchg
jmp
jle
lock
outsl
xchg
xor
xorl
mov
into
xchg
mov
test
push
mov
mov
sbb
jl,pt
pop
jns
dec
sti
push
dec
mov
xor
fsubrp
sub
es
pop
mov
cwtl
mov
pop
fs
or
lahf
pop
shlb
sub
xchg
push
into
inc
lds
add
out
xchg
testb
push
jle
je
or
mov
lods
mov
xchg
and
jp
or
pop
xor
xchg
and
or
movsl
rclb
mov
xchg
ljmp
jp
fdivs
or
mov
pop
rcr
mov
mov
test
cmp
push
push
loope
mov
cmp
fsubr
and
dec
pop
stc
mov
mov
cmp
fwait
cltd
enter
jno
mov
push
jo
add
mov
xor
mov
and
cld
std
xchg
mov
push
jge
stos
dec
push
and
inc
testl
fildl
iret
or
lahf
lahf
ret
and
jnp
inc
out
test
jns
sbb
test
insb
loope
cmc
sbb
test
lret
std
in
mov
mov
std
rcr
sub
fisttpl
shrb
movsb
jle
stos
xor
mov
cmc
adc
sbb
movsb
clc
jns
add
mov
and
adc
fsubrl
out
pop
push
ss
jmp
mov
imul
push
test
xor
fcmovnb
pop
je
mov
inc
data16
ljmp
int3
jge
rorb
lods
out
mov
gs
add
repnz
and
scas
push
data16
fdivl
cmp
int
jae
ljmp
xchg
add
loopne
nop
xor
lret
insb
dec
es
popf
sub
inc
sarl
lods
ds
jecxz
nop
adc
into
cltd
nop
dec
push
fidivl
les
andb
mov
xchg
jge
mov
das
les
or
test
jmp
mov
xchg
cmp
fadds
clc
mov
ret
jne
sbbb
cmp
xor
dec
aam
pop
jno
scas
icebp
push
fnstcw
mov
add
mov
and
pop
insl
jle
jno
mov
adc
and
and
jne
in
test
loope
and
mov
cmp
and
sub
add
orb
fs
mov
jl
push
inc
sub
out
jo
mov
mov
jge
addr16
xchg
mov
dec
push
dec
push
fisubs
cmpsl
hlt
and
cli
sub
nop
rcll
xchg
mov
std
in
sub
xor
adc
int3
loop
xorb
mov
stos
divl
adc
sbb
pop
xchg
cli
mulb
mov
inc
pop
sub
inc
test
jae
movsb
push
icebp
lods
sbb
test
cmp
mov
lret
lods
and
jb
arpl
and
pop
pop
sbb
or
bound
loopne
hlt
shl
jmp
xor
rcrl
mov
adc
enter
faddl
dec
loopne
push
push
hlt
mov
dec
inc
test
pop
mov
and
lods
or
xor
mov
mov
enter
bound
pop
sub
inc
fs
mov
lds
push
and
jl
popf
mov
loop
jae
push
movsl
adc
in
cmpsb
mov
out
dec
push
int3
scas
add
mov
lret
fimull
lods
in
sbb
dec
aaa
pop
jg
cmp
mov
cli
out
insl
subl
pop
cmp
mov
or
cmp
xor
mov
bound
ret
stos
sbb
add
sbb
fidivrl
jge
push
or
add
ss
sbb
or
or
ljmp
jp
in
push
mov
sti
mov
xlat
insl
fistpll
adc
inc
push
fisttps
cmpsb
out
hlt
cwtl
adc
ret
sub
dec
or
fistl
shlb
std
jmp
adc
jo
fcmovb
cwtl
sbb
mov
jnp
hlt
lods
jl
in
add
stc
or
mov
cmp
adc
add
in
cmp
adc
and
mov
mov
aam
das
out
inc
test
in
fcoml
mov
jnp
add
out
inc
jno
mov
cltd
jp
push
imul
jp
int3
ja
into
add
mov
dec
movsb
out
jp
cmp
mov
mov
push
and
dec
fbld
push
mov
mov
lds
dec
cmpsl
push
xor
jmp
jnp
addr16
dec
outsl
sub
adc
dec
sahf
shr
sbb
dec
lcall
adcb
test
add
test
stos
test
js
xchg
mov
mov
or
ret
push
std
js
push
lea
fstps
push
std
insb
inc
cli
and
repz
xor
sub
call
add
mov
out
rorb
inc
xchg
xchg
jmp
in
test
into
test
out
sbb
cltd
jle
xor
rolb
int
push
cmp
jl
xchg
out
ljmp
inc
adc
sub
adc
dec
nop
pop
push
sbb
push
insb
push
mov
dec
out
ftst
clc
mov
mov
inc
outsb
sub
leave
popf
pop
xchg
inc
xor
jno
inc
xor
cmp
sbb
add
pop
dec
sub
dec
jecxz
jg
jns
out
daa
dec
and
mov
imul
test
add
push
ja
repnz
rcll
xor
loop
call
jb
sub
mov
jo
or
mov
rol
dec
jae
jno
popf
rclb
ds
cld
nop
add
lea
and
pop
inc
iret
sbb
mov
pop
cmp
icebp
lds
out
hlt
loope
jle
inc
pushf
add
cmpsb
inc
cwtl
fwait
xlat
fistpll
testl
cmpsb
mov
sbbl
mov
sahf
or
stos
popa
repz
jecxz
test
stos
or
mov
mov
inc
rolb
jnp
scas
shll
xchg
inc
call
sub
cmc
xchg
mov
shrb
or
adc
out
test
out
add
leave
xor
dec
xor
xchg
pop
push
mov
jle
es
stos
mov
inc
ljmp
inc
pop
xchg
rolb
js
push
cmp
xor
leave
cwtl
idivl
fwait
and
outsl
sub
in
out
cld
arpl
push
jecxz
fisttpll
adc
iret
pop
scas
jne
pop
aam
jb
call
jns
pop
dec
pop
int3
push
movsl
xor
imul
push
dec
gs
cmpsb
arpl
or
outsl
pop
sub
jl
inc
and
sbbb
inc
adc
xchg
xchg
inc
ja
jbe
cmpsb
pushf
xor
push
lock
xor
sti
mov
testb
sub
fsubs
out
cmpsl
iret
loopne
pop
iret
push
cmc
pushf
cmp
ret
lret
xchg
gs
push
xchg
add
stos
mov
cmc
sarb
adc
psrld
in
scas
sbb
adc
test
sub
adc
inc
enter
pop
imulb
jmp
xchg
pop
and
or
shlb
ret
mov
inc
xchg
push
inc
mov
jmp
scas
cmp
fnstcw
sub
in
and
sub
jb
push
adc
cld
iret
inc
push
or
or
mov
ret
sbb
mov
mov
fmull
xorl
sahf
xor
fincstp
jb
mov
sbb
inc
shrl
jns
adc
jne
mov
push
cmp
insb
lret
push
lods
sbb
movsb
pop
fldcw
dec
pop
rdpmc
cli
sub
xchg
pop
fimuls
clc
and
mov
in
push
mov
lcall
and
inc
es
inc
je
and
loopne
xor
fisubrl
mov
cmc
mov
incb
ja
push
mov
mov
or
je
rcll
movl
fcomps
jb
js
push
repnz
es
cmpsl
int
js
sahf
mov
loope
loop
scas
mov
mov
shlb
nop
xlat
xchg
adc
imul
ja
out
add
dec
fsubrs
test
add
lods
mov
jb
mov
iret
xchg
int3
call
mov
mulb
mov
scas
xchg
daa
rcr
pop
shll
pushf
outsb
mov
mov
leave
fidivs
xchg
add
jne
and
push
inc
dec
cmpsb
add
es
call
lock
daa
dec
rcrb
cmp
je
jne
sub
jle
xchg
jmp
lret
sub
and
mov
or
jmp
xor
fidivrl
shlb
and
jne
xchg
mov
dec
cmp
lds
mov
jbe
es
lods
mov
pop
pop
int3
xchg
lretw
loopne
das
mov
sahf
and
pop
in
jle
adc
xchg
dec
or
test
out
jle
mov
cmp
aas
lcall
ds
push
xchg
stos
stos
test
xchg
add
orl
xorl
aaa
fsubs
xchg
fmuls
xor
or
pop
jle
adcl
daa
js
xor
adc
out
daa
jge
cmp
inc
dec
cmp
xchg
xchg
dec
add
sub
pop
push
xchg
aas
gs
xlat
mov
or
mov
cmp
sbb
add
fs
push
add
xchg
imulb
mov
push
dec
loop
and
in
rcrb
jns
fs
add
incl
test
inc
rorl
mov
lds
in
shl
xlat
mov
mov
lods
and
or
inc
and
dec
pop
shlb
push
pusha
jbe
pop
and
adc
in
leave
dec
aas
loope
push
sbb
push
out
or
ja
push
mov
add
jmp
popa
stos
mov
add
inc
mov
xchg
mov
fldt
mov
adc
pop
divl
mov
pop
push
rclb
loope
cli
cld
insl
cmp
pop
cmp
lcall
jno
js
dec
test
mov
push
mov
cwtl
lret
adc
cmp
int3
add
cmp
push
or
js
in
jl
test
sbb
shll
lret
in
out
movsb
jb
and
sbb
pop
push
lahf
iret
push
sub
cmc
pop
add
inc
adc
mov
icebp
push
cmp
fldt
and
lret
loopne
inc
sub
mov
out
adc
dec
add
icebp
gs
aas
and
jmp
jge
jns
xchg
xchg
in
xchg
into
cltd
dec
cmc
mov
adc
hlt
or
push
and
int3
imul
scas
push
fsubrp
and
scas
inc
negl
fldt
xchg
adc
inc
data16
jp
shlb
js
insl
adc
mov
ja
mov
cmp
cmc
rolb
mov
mov
pop
push
pusha
mov
push
add
lea
je
dec
jo
push
in
addr16
mov
into
xlat
popf
add
xchg
daa
setbe
or
sbb
lea
cltd
call
lahf
mov
into
push
adc
mov
push
fldenv
icebp
jecxz
iretw
mov
js
scas
mov
mov
mov
or
outsl
sti
loope
mov
lods
and
aam
outsb
or
adcl
jge
sub
ret
ljmp
test
cmp
cmpsl
sti
pop
cs
dec
mov
stc
xchg
add
xchg
adc
adc
xor
xchg
ds
imul
lock
adc
ja
pop
mov
divl
jnp
and
push
xor
popa
test
fwait
add
mov
sti
fsubs
stc
mov
pop
aad
dec
and
rclb
xchg
movsb
rorb
sahf
pop
pop
test
push
leave
and
dec
cmp
stc
add
push
loopne
xor
mov
repz
jne
adc
mov
xchg
cmp
insl
sub
lea
jecxz
add
add
or
aad
pusha
cmp
lock
add
pop
rol
cld
xchg
mov
test
mov
fwait
scas
int3
inc
pop
dec
test
xchg
mov
mov
dec
and
aas
inc
sub
cmp
js
mov
push
adcb
rcrb
and
ljmp
call
inc
push
adc
jns
sti
xor
push
in
neg
mov
mov
enter
scas
sbb
rorl
ja
mov
outsb
mov
sbb
dec
rcll
lret
cmc
lcall
xchg
dec
pop
jle
jg
daa
pusha
scas
mov
and
movsl
rorb
pop
lods
enter
inc
insb
and
shlb
hlt
clc
orl
mov
sub
stos
mov
inc
aam
fnsave
dec
sub
ret
inc
pop
cltd
clc
cmc
mov
xchg
dec
jl
mov
shrl
loop
ror
loope
mov
fadds
jmp
rcrb
cmp
insl
mov
jnp
pusha
outsl
sbb
outsl
bound
cmpsb
lods
cmc
gs
jecxz
push
or
sub
lds
mov
loope
popf
clc
movsl
addr16
out
lock
repnz
xchg
aam
subb
dec
xor
fildl
pusha
popf
push
pop
mov
mov
std
pop
popa
ret
sar
aad
cs
insb
testb
mov
lahf
sarb
adc
push
and
arpl
mov
sbb
and
jnp
dec
adc
adc
or
movl
mov
inc
out
push
sub
lcall
push
rcrl
cltd
ret
icebp
pop
fidivs
xchg
sbb
aad
sbb
jle
mov
mov
inc
jo
inc
mov
xorb
mov
mov
pop
mov
push
je
cmpsl
push
pushf
addr16
std
push
cltd
adcl
cmp
addb
cmp
jecxz
enter
imul
adc
mov
insb
or
cmpsl
push
rclb
lods
stc
jns
ss
dec
push
xchg
xchg
popf
xor
jge
or
mov
leave
dec
cs
fisubrl
out
pop
mov
xor
pusha
jp
push
scas
push
rorb
test
icebp
and
fidivrl
mov
mov
mov
maxps
and
dec
fsubl
cmp
mov
std
arpl
imul
test
mov
push
jo
hlt
pop
in
nop
cltd
es
daa
bound
sub
ss
adc
mov
sub
push
jns
icebp
shr
div
push
mov
push
sbbl
repnz
xlat
lret
push
fcomi
push
je
pop
pop
mov
rcrb
jbe
cmpsb
mov
aad
or
mov
addb
mov
sub
add
sbb
and
adc
cmp
jp
sbb
pop
sub
push
xchg
mov
jp
jmp
ja
shrd
out
sahf
mov
xor
push
out
mov
jle
xchg
and
idiv
shll
cs
and
fdecstp
imul
flds
xor
rol
push
fs
cmp
rcrl
mov
mov
mov
mov
push
lret
mov
scas
sbb
cltd
sarb
mov
incl
xor
xor
xor
cmp
cmp
movsl
test
aam
lock
xchg
js
or
pusha
cmp
addb
dec
in
inc
and
out
mov
xchg
fdiv
nopl
mov
jne
es
adc
push
stos
addr16
pop
adc
cmpsb
inc
lret
cli
inc
push
xor
and
xor
scas
inc
into
push
push
mov
outsb
fisubrs
push
cmp
jecxz
ret
addb
jno
adcb
pop
push
jno
inc
sarl
cmp
sahf
cmp
aaa
pop
mov
imul
push
dec
outsb
int
mov
mov
cltd
and
jns
pop
push
loope
push
add
loope
shl
arpl
xor
sub
test
test
iret
pop
loope
add
mov
fisttpl
mov
pop
pop
imul
loope
push
dec
xchg
mov
sbb
and
cmpsb
sarl
rcl
pop
rcrb
mov
lock
xor
mov
inc
mov
sbb
xor
shr
stos
mov
add
lahf
mov
popf
lret
movsb
cli
dec
or
test
jno
push
jo
fidivrl
sbb
fcom
aaa
jb
test
imul
movsl
imul
inc
push
pop
xchg
xor
decl
aad
out
out
cmpsl
mov
sbb
ffreep
cld
fadds
call
push
mov
test
ret
add
fsubl
adc
lret
in
ror
push
andb
dec
pop
mov
push
call
pop
fcomps
mov
daa
sbb
or
mov
mov
clc
jp
dec
movsb
dec
add
pop
pop
icebp
int
and
mov
inc
dec
outsl
js
sub
pop
dec
add
cmp
out
repnz
xchg
fnsave
js
mov
stc
sub
cmp
clc
fidivrs
inc
fs
mov
xlat
xor
push
inc
xchg
adc
xchg
push
jg
sub
adc
stos
icebp
enter
xchg
push
sbb
cmp
mov
enter
sti
aam
test
xchg
xor
js
jg
sub
jp
dec
rolb
inc
insb
mov
add
mov
cltd
jl
or
fwait
leave
popl
ficoms
dec
jae
adc
lret
jns
cmpsl
add
loop
loopne
cmc
and
js
out
sti
idivb
xlat
xor
jle
mov
subl
addr16
mov
sub
and
out
cmp
sbb
mov
sub
pop
xchg
dec
sub
fisttpll
testb
jne
mov
pop
cmp
aad
out
lret
hlt
adc
push
xor
cld
ja
pop
dec
jne
out
mov
sub
mov
rolb
sbb
and
movsb
inc
pop
ja
shlb
mov
adc
sbb
xchg
jp
fldlg2
adc
and
add
shll
test
xchg
mov
fisttpl
lret
jb
jnp
imull
sub
flds
fcoms
mov
push
cmpsl
push
push
push
jo
push
pop
sbb
xchg
call
test
addr16
sub
mov
push
push
add
enter
out
mull
jns
dec
mov
push
or
xchg
mov
inc
outsb
adc
repnz
test
outsl
aaa
xor
jge
out
cmpsl
stos
jbe
outsl
inc
negb
xchg
or
and
mov
test
sub
or
js
jp
jns
jae
pop
and
pop
cli
push
pushw
jg
scas
ja
jns
mov
mov
std
inc
and
sarl
xchg
pop
mov
xchg
scas
test
popa
sub
pop
std
bound
pop
xor
add
adc
insl
push
sub
and
cmp
orb
sahf
pop
xor
pop
jae
js
xor
call
ljmp
sub
lods
or
dec
inc
mov
jmp
shl
lret
out
aad
repz
ljmp
ss
jg
enter
mov
jle
cmp
sub
mov
popf
ss
push
cmc
lahf
aaa
rcl
xchg
xchg
icebp
movsl
push
xor
or
je
push
mov
leave
clc
fdiv
rclb
data16
ja
test
in
in
xor
push
ss
mov
push
bound
clc
in
aaa
aas
dec
fs
jnp
pop
lods
jmp
mov
jno
popf
jge
negb
fwait
bound
sub
and
dec
pop
pusha
jle
popa
push
xor
insb
insb
stc
sti
imul
sarl
rol
cmpl
jnp
sbb
jg
cmp
aam
mov
js
in
enter
push
and
es
incb
cwtl
das
lds
dec
leave
sub
xor
sahf
sysexit
cs
add
dec
in
adc
mov
in
mov
mov
je
push
imul
dec
mov
aad
loopne
or
imul
mov
xchg
aaa
and
outsb
xchg
in
jb
and
rcll
fisttpll
push
insl
clc
mov
insb
push
stos
pop
mov
cltd
pop
push
or
ja
test
out
add
in
lret
adc
rcl
dec
sub
add
in
loop
mov
xchg
adc
mov
mov
mov
push
scas
aas
scas
sub
mov
xchg
fstpl
out
or
in
inc
jbe
popf
mov
xchg
test
push
inc
sub
fsubrp
ret
int3
mov
testb
mov
jge
jle
imul
enter
popf
or
adc
sbb
mov
imul
loope
ds
adc
jecxz
sahf
mov
in
repnz
and
sub
add
xor
pop
xor
xor
mov
adc
mov
aam
pop
xchg
mov
in
xchg
fsubr
mov
xor
leave
pop
lods
stos
or
adc
jecxz
fsubr
or
imul
jno
lock
mul
jbe
mov
cmp
pusha
outsb
sbb
mov
inc
sbb
out
pop
and
sbb
push
popa
push
outsb
adc
outsb
shlb
xchg
mov
xor
mov
pop
pop
jg
add
aad
mov
fisubl
nop
sub
and
fs
cs
push
adc
or
pop
incl
mov
shrl
sbb
adc
mov
std
lret
cmp
shl
push
out
iret
push
pop
push
popa
mov
push
incl
jbe
addr16
jmp
mov
in
sti
loope
addl
repz
out
fs
xor
aam
cld
es
push
add
cmp
lcall
and
or
icebp
push
stc
push
pop
in
mov
pmaddwd
mov
iret
jnp
inc
and
pushf
push
out
dec
jo
sahf
xchg
xor
leave
sbb
and
das
jmp
negl
xchg
outsl
jbe
sub
push
out
push
nopl
dec
inc
xor
pop
ds
incb
mov
addr16
or
ljmp
add
jae
sbb
fidivrs
or
in
add
push
nop
fcompp
fidivrl
icebp
jmp
imul
add
jne
movsb
sti
mov
neg
mov
das
mov
jmp
cmp
and
add
shr
and
addl
jp
push
sbb
xor
jle
xor
jl
call
pop
dec
fldenv
outsb
sub
dec
mov
sbb
es
pop
inc
jg
ja
jae
push
push
and
xor
leave
test
mov
loope
adcl
sub
jbe
js
mov
jae
dec
mov
dec
and
cmp
mov
cmp
or
in
xor
xor
inc
pop
cmc
lea
rep
sbb
inc
les
popa
imul
pop
popf
push
jae
movsl
adc
sarl
out
xlat
sbb
add
cwtl
pop
mov
push
fidivrl
mov
cmpsb
push
push
popf
inc
mov
cmpl
inc
dec
in
pop
gs
fdiv
sub
add
and
pop
cmc
ret
lods
pop
stc
mov
mov
das
repnz
rcr
testb
sub
push
and
int3
ljmp
repz
jle
mov
dec
addb
dec
cmc
pop
jle
in
xchg
add
lea
das
js
ror
imull
lods
data16
pop
push
sbb
cmpb
int3
and
add
fsubl
pop
inc
mov
sub
movsl
cmp
bound
cmpsl
stc
or
jge
mov
fists
dec
add
rcrb
adcl
sahf
cmp
movsb
aas
jo
pop
sub
sbb
mov
in
cmp
xchg
loope
cli
cmpl
fstp
loop
cmpsl
js
sbb
mov
clc
push
out
cmc
test
sbb
ja
icebp
push
dec
shrb
mov
or
out
rclb
pop
push
fidivl
dec
jnp
xor
jge
cmpsl
xor
shlb
out
into
cmp
stos
pop
cmc
mov
adc
sub
dec
cmpsb
mov
test
insl
and
dec
ffree
jle
adc
imul
lret
mulb
mov
xor
xor
in
pusha
popa
inc
mov
notb
cld
imul
xchg
mov
test
stos
scas
and
shrl
mov
leave
fxch
inc
pushf
shr
mov
push
insl
rcr
push
test
pop
mov
out
div
rorb
leave
fbld
sbb
xchg
mov
frstor
lods
nop
push
arpl
dec
dec
hlt
cmpsl
and
nop
sbb
sub
fstpt
mov
jl
add
insb
std
adc
inc
xchg
in
cmp
sub
sarb
dec
xor
sbb
cmp
aaa
pop
add
sub
sub
je
inc
ja
dec
je
xchg
pop
hlt
lret
or
sub
or
sub
adc
mov
mov
rolb
ret
flds
mov
js
sti
enter
xchg
scas
fs
xchg
jle
in
jnp
jns
cmp
andl
mov
xchg
jecxz
dec
scas
push
mov
dec
jnp
lock
aaa
mov
mov
jno
fstpt
hlt
adc
xchg
push
stos
and
in
and
loop
adcl
outsl
mov
dec
mov
sub
lock
push
cmc
mov
pop
movb
mov
pop
or
add
mov
divb
push
sbb
dec
je
cli
faddp
ret
sub
idiv
or
int
pop
dec
add
add
ret
aam
in
fldcw
push
mov
xlat
adc
cmpsb
fistpl
xor
clc
push
cli
xchg
jmp
lods
mov
jbe
add
jnp
sbb
push
in
sbb
push
int
pop
mov
and
mov
cld
in
lods
repz
scas
xor
insl
cmp
mov
xchg
mov
xchg
loop
lret
insb
dec
rorb
mov
adc
push
imul
mov
das
testl
mov
sarb
clc
adc
sbb
fildll
push
sbb
xlat
xchg
inc
xlat
xor
sub
xchg
insb
push
jne
es
pop
mov
dec
loope
cltd
push
jp
in
repz
inc
push
lret
pop
dec
movsl
ret
jle
sub
leave
lahf
sbb
pop
in
ss
and
lret
xchg
or
int3
popa
pop
movsl
popf
pop
jbe
and
pop
mov
mov
xchg
or
faddp
add
leave
jno
out
js
dec
adcb
dec
notb
push
sub
cmc
add
xchg
push
sarb
or
pop
outsl
dec
jmp
out
std
fs
jecxz
xor
jp
dec
mov
adc
jl
jns
jns
push
inc
shr
push
enter
fisubrs
push
xchg
insl
inc
pop
mov
fwait
ljmp
mov
sub
sbbl
dec
negb
mov
fistpl
pop
aas
fbld
cmp
out
add
jae
outsl
sbb
addl
sub
sbb
mov
jle
mov
xor
ret
cmp
cmpb
or
push
xor
sub
lods
adc
xchg
scas
scas
scas
aaa
sbbl
sbb
jns
imul
push
inc
push
mov
xor
push
cmp
sahf
push
cmp
mov
adc
cmp
nop
pop
ffree
out
stc
add
sub
roll
data16
sahf
xchg
in
pop
nop
inc
ss
ja
push
jl
mov
fmul
jge
dec
ss
cmp
mov
lahf
sti
fcmovb
inc
or
fldcw
cmovns
fwait
push
pminub
mov
ss
lds
inc
rcll
sti
data16
jns
xchg
addr16
out
jae
in
repz
cmp
scas
mov
into
decl
fdecstp
das
mov
jl
mov
jo
imul
loop
inc
xchg
aas
pusha
fldl
arpl
repz
or
add
ret
mov
mov
sbb
insb
xchg
pop
stos
rclb
pushf
mov
push
xor
push
and
jo
bound
cld
mov
push
jnp
iret
lcall
sbb
xor
sti
mov
cmp
mov
addr16
fcompl
movsl
cwtl
iret
cmp
adc
mov
in
cmp
hlt
mov
push
pop
adc
sub
xor
cmpsl
push
or
pop
jno
or
in
dec
push
jne
rcrl
and
sti
jmp
or
loop
stos
xor
push
scas
idivb
lods
cmpsb
test
sbb
mov
stos
arpl
xlat
insl
das
or
xchg
arpl
scas
fists
push
rolb
add
push
push
test
jo
mov
notl
push
add
inc
in
sbb
cmpsb
loope
fsub
adc
push
cmp
add
xchg
or
fsub
cmp
enter
dec
movsb
push
add
mov
enter
call
scas
dec
outsb
les
pop
add
push
das
outsl
mov
inc
jp
push
mov
decb
jnp
sbb
push
fstpl
and
and
fsub
mov
nop
inc
das
stos
sub
dec
std
cs
xchg
mov
adc
push
jbe
push
inc
dec
and
sarl
insl
and
js
in
cmp
mov
mov
dec
fimuls
stos
nop
mov
mov
mov
inc
ss
jnp
loopne
xor
mov
popa
sub
jl,pt
in
xchg
roll
les
pop
dec
imul
rolb
sbb
iret
xchg
stos
mov
mov
cmp
iret
insl
shr
lret
and
push
je
or
fidivrs
adc
cs
or
and
enter
sbb
and
mov
pop
pop
xchg
repz
add
dec
cs
cmp
mov
test
jno
mov
enter
inc
cltd
aad
jo
movsb
cmp
mov
and
mov
cwtl
jl
sub
or
mov
xor
jne
mov
xor
sbb
jnp
rorb
scas
or
sub
arpl
jae
cmp
paddq
clc
scas
push
xor
xor
jmp
cmp
repz
movsb
sahf
dec
pop
ret
xorl
add
ret
iret
push
sahf
aad
dec
out
fwait
call
mov
lahf
adc
jno
faddl
lods
sub
push
repnz
out
repnz
sub
imul
or
cmp
jns
mov
xor
ret
cmp
addr16
popa
lods
mov
ja
mov
add
dec
mov
lock
addr16
hlt
sub
and
xor
movsl
bound
and
in
imul
jne
mov
xor
mov
xlat
xchg
nop
cltd
mov
pop
or
sub
sarl
pop
das
aad
push
push
fisubrl
int
and
dec
sarl
jae
add
outsl
outsb
iret
add
fisubl
clc
aad
jbe
repz
repnz
jecxz
push
and
lods
dec
in
daa
imul
into
mov
lret
xor
lahf
hlt
xor
dec
cmpb
mov
add
push
outsb
int
jmp
ror
pop
outsb
aas
add
test
lods
sbb
pop
xchg
xor
testb
cmp
aaa
or
outsl
fnstenv
jecxz
add
fists
lret
sbb
add
iret
inc
jne
sbb
test
ss
popf
orl
test
std
pop
roll
jle
fs
inc
stos
das
ficomps
insb
int
sbb
dec
mov
dec
pop
adc
stc
setle
pusha
iret
sub
les
xchg
and
in
mov
in
adc
cmp
cmc
lods
xchg
mov
push
xchg
xchg
es
fbstp
sti
loop
andb
dec
jmp
push
adc
popa
out
jns
mov
or
loope
mov
xchg
sbb
lock
and
lahf
xchg
sbb
sbb
pop
popf
push
mov
loop
cs
testl
pop
call
mov
xchg
mov
sbb
gs
push
push
xchg
inc
inc
repz
cmp
subl
mov
mov
push
in
loop
xchg
sbb
adc
xor
iret
push
mov
pop
push
sbb
add
ljmp
icebp
mov
mov
pop
imul
mov
dec
rorb
negb
outsb
jno
and
sbb
add
push
iret
and
arpl
jne
pop
and
repnz
fldcw
cwtl
jmp
or
lret
sbb
adc
xor
jae
hlt
arpl
sub
lods
and
bound
jecxz
inc
mov
cmpsl
push
loope
in
roll
jae
pusha
push
dec
inc
andl
xchg
orb
push
jp
pop
in
loopne
pop
je
aaa
sub
loopne
out
pop
xor
xchg
bound
adc
cmp
ss
push
out
or
stos
imul
cwtl
mov
lahf
xlat
and
test
sub
cmp
push
popf
cmc
pop
pop
add
int3
jno
xchg
mov
mov
inc
cmpsb
pusha
jo
pop
jg
test
arpl
movsl
sbb
cmp
jns
ja
lock
mov
sbb
out
lcall
scas
push
mov
and
xor
in
in
rcrb
inc
pop
mov
jbe
daa
lahf
inc
jmp
leave
popa
lret
xchg
mov
aaa
rolb
packuswb
push
mov
in
lods
les
jnp
pop
mov
sbb
mov
sbb
je
inc
xor
test
sbb
es
mov
rcll
out
or
jne
out
xor
xor
je
pop
lods
pop
in
sahf
xlat
bsr
mull
lret
jge
loop
inc
bound
arpl
or
cs
push
push
xchg
fnstsw
add
fmulp
filds
jb
shl
stos
shr
xchg
scas
mov
adc
pop
xorl
aaa
xor
scas
pop
out
insb
pop
icebp
in
clc
pop
adc
jmp
mov
out
push
inc
sahf
push
ds
cmpsb
dec
or
jmp
pop
nop
inc
test
js
fisubrs
mov
pop
mov
or
inc
cwtl
aad
sbbb
cwtl
or
imul
sbb
xor
call
call
push
pop
fdivrs
lret
ret
ss
in
fwait
icebp
int
nop
sbb
and
adc
push
hlt
or
cmpsb
mov
sbbb
inc
movsl
cmpsl
lods
jb
lds
lahf
and
fcomi
adcl
mov
imul
and
xor
pop
int3
divl
cmp
mov
iret
imul
popf
repz
mov
jecxz
mov
mov
mov
ret
and
psubusw
imul
sbb
jecxz
xorb
push
int
lods
cmp
inc
push
ljmp
and
inc
xchg
cwtl
test
xor
imulb
jae
bound
inc
sub
loopne
xchg
stos
outsb
xchg
and
sahf
push
push
insl
add
stos
jmp
cwtl
inc
inc
mov
lods
leave
fistps
inc
dec
dec
mov
movsl
jge
rcrl
mov
xchg
nop
pop
dec
sub
xchg
sub
push
sub
jnp
std
pop
aaa
cld
jl
pop
adc
adc
insb
mov
mov
enter
ljmp
out
jmp
and
dec
or
iret
dec
stc
ljmp
mov
adc
insl
out
add
and
cli
imull
xlat
pusha
in
mov
popf
xchg
cmpb
mov
push
es
in
int
fcompl
xor
mov
mov
cli
xchg
out
addr16
push
repz
insl
cmp
ror
mov
in
xchg
lahf
jge
dec
pop
in
push
pop
in
iret
loopne
xchg
cmp
dec
aam
aas
lret
lret
mov
adc
lret
push
out
cs
jnp
adc
mov
shll
adc
lret
aas
adc
xchg
cs
dec
scas
pop
mov
jns
push
add
dec
enter
loope
out
xchg
xchg
mov
jno
popa
lea
loop
adc
inc
and
mov
sub
pop
xchg
pushf
pop
lods
jae
xchg
cli
cmpsl
dec
push
test
in
mov
lock
push
cmpsl
push
push
in
les
rol
ja
mov
pop
dec
pop
divb
and
cmp
mov
mov
inc
loopne
sub
dec
mov
lds
lds
ja
call
insb
inc
push
shrb
inc
mov
inc
lock
sub
pop
lret
add
sbb
or
movsb
enter
rorb
xor
clc
adc
adc
inc
out
cmpsb
inc
icebp
add
neg
lock
test
std
jp
cmp
sub
dec
hlt
jmp
in
adc
cmp
sub
mov
dec
popf
aas
and
sub
inc
lods
cmp
adc
imul
imull
or
stos
imul
jno
ljmp
shl
adc
out
sbb
stos
mov
lds
dec
add
test
cmp
mov
mov
mov
jbe
test
cmp
in
inc
notb
loope
cld
out
imul
mov
hlt
rcll
rolb
sub
cld
add
dec
dec
pop
mov
xlat
or
stos
jne
icebp
mov
pop
pop
inc
or
mov
pop
sub
jbe
xor
mov
lea
mov
cmp
std
sbb
or
pop
xchg
mov
add
sahf
ja
xor
rorl
cmp
lods
subl
mov
xlat
xlat
mov
push
test
cli
jmp
sub
out
pushf
cmp
mov
je
adc
das
lods
repz
cmpsb
inc
push
sarb
sub
in
xchg
out
xchg
rcll
aam
scas
aad
push
jo
or
mov
std
and
stos
test
out
sarl
xchg
xor
mov
ds
xor
les
cmp
cld
lahf
rclb
pop
lods
test
inc
std
and
mov
test
mov
addr16
push
ret
jnp
aaa
movsl
mov
xchg
add
cli
jnp
mov
fmulp
out
paddw
xchg
xchg
scas
sti
dec
es
and
sbb
mov
jb
in
outsl
sbbl
clc
ret
rol
in
stc
jmp
lock
shl
xchg
addb
insb
jg
fcomi
sbb
add
xchg
and
adc
stos
sub
mov
in
push
les
stos
movl
sbb
inc
test
iret
and
xchg
fxch
inc
sbb
sub
or
pop
xchg
jp
inc
arpl
aas
ljmp
dec
push
jg
mov
and
mov
jns
mov
xor
and
adc
adc
cs
jns
or
nop
out
jno,pn
imul
lock
jge
dec
iret
leave
add
int
pop
lods
cs
or
push
or
addr16
ss
jg
jno
pushf
rolb
xchg
jo
xchg
push
sbb
movsb
dec
stc
stos
rcll
dec
shlb
jnp
sub
mov
sbb
xor
or
lea
cmp
in
jp
jne
int
mov
aas
cmp
scas
mov
sub
lcall
arpl
inc
jmp
cwtl
loopne
push
sahf
and
addr16
cmc
dec
push
inc
shrb
les
sti
mov
in
mov
xchg
clc
xchg
outsl
add
dec
fcmovnb
insb
repz
out
popf
es
lret
adc
mov
popf
ror
loop
adc
ret
pop
insl
sbb
pop
mov
enter
and
jae
mov
pop
mov
mov
mov
pop
xor
int
mov
das
sub
sbb
les
mov
scas
pusha
cmp
and
sarl
pop
aad
mov
add
xchg
rcrl
sahf
mov
in
in
push
xor
pushf
outsb
sbb
xlat
or
or
les
or
cmpsb
call
pop
and
adc
ja
cltd
orb
jg
test
push
pop
cmp
mov
mov
enter
arpl
cmp
sub
popa
mov
or
dec
scas
pop
mov
add
movsb
scas
xchg
add
sahf
sbb
add
push
sub
xor
mov
dec
das
mov
dec
popf
imul
mov
sbb
push
dec
pop
pop
call
adc
dec
lahf
xchg
fmulp
adc
and
or
push
mov
aas
fistpl
dec
pop
es
jns
push
sbb
sahf
movsl
mov
into
sub
mov
mov
outsb
pop
sti
outsl
mov
mov
imul
cmc
mov
xor
xchg
cmpsb
lcall
add
mov
sbb
lock
push
lds
pop
jmp
test
or
les
mov
push
int3
push
inc
push
ljmp
out
or
pop
or
pop
dec
rcll
fadd
push
lret
sahf
push
cmc
xchg
call
cmp
shll
sete
lret
sub
cmp
push
mov
sti
push
fcomps
cmpb
cmp
push
mov
in
mov
mov
add
nop
mov
add
movsb
adc
std
pushf
jb
push
xlat
lods
jmp
ds
and
mov
mov
pop
or
shlb
inc
push
jecxz
outsb
inc
jne
pop
sbb
mov
sub
rcr
xor
cltd
jmp
adc
cmc
lret
pop
pop
test
push
xchg
insl
and
xchg
sub
add
xchg
mov
fstp
jnp
push
mov
push
and
pushf
sbb
sbbb
insb
lret
inc
scas
mov
pop
and
shl
hlt
mov
lahf
cmpsl
or
cmp
push
addr16
lret
inc
mov
push
push
sub
mov
repnz
cmpsl
mov
insb
out
xor
jecxz
mov
addl
int3
aam
push
repz
jo
dec
test
pop
icebp
jg
outsb
js
adc
cwtl
into
jl
test
popa
and
arpl
push
and
dec
movswl
inc
add
mov
inc
loop
bound
mov
sbb
cmpl
leave
std
sub
arpl
mov
pop
cmp
xchg
dec
push
imul
clc
dec
test
in
pop
jne
stos
dec
jl
pop
push
lret
sbb
int
mov
push
lret
lahf
or
mov
cmp
pop
xor
adc
lock
xor
sbb
call
mov
xchg
add
nop
pop
xchg
cmpsl
cmp
push
sub
mov
ss
mov
inc
mov
jle
xor
mov
mov
dec
jp
ja
pop
out
jg
jmp
call
add
addb
pop
mulb
mov
mov
sbb
push
push
addb
mov
lods
and
dec
int
je
ds
xchg
adc
and
add
sbb
inc
nop
aad
mov
pop
aad
gs
aam
xchg
movsb
fcoms
jns
cmpsb
imul
in
shrl
mov
xor
cmpsb
xchg
test
lret
adc
shlb
push
xchg
dec
lcall
fsubs
cmpsb
sti
adc
movsl
hlt
xor
xchg
sahf
enter
pop
repnz
xor
ret
out
pusha
sbb
mov
mov
sbb
jno
fistpll
add
es
xchg
data16
mov
xchg
cmpb
ret
xchg
ja
rep
popf
pop
notb
jno
dec
ficoms
test
lods
cmpsb
fwait
mov
iret
push
add
and
mov
sub
adc
dec
jb
inc
lcall
aam
fs
jmp
scas
clc
pop
push
add
jle
mov
repz
inc
mov
lock
jo
cmpsb
popa
mov
pop
enter
fwait
mov
in
test
mov
outsl
cmpsb
insl
sahf
insb
ja
aas
dec
aam
dec
mov
sbb
xchg
xchg
imul
out
adc
loop
xor
movl
xor
mov
cmp
cltd
cmc
ljmp
adc
popw
sbb
or
dec
mov
orl
mov
push
xchg
sar
popf
add
and
insb
stos
fnsave
imul
test
push
pusha
xchg
push
orb
jl
fwait
mov
pop
movsl
movsb
nop
jg
lds
imul
push
xchg
push
jo
test
jecxz
je
xchg
adc
xchg
mov
jp
and
mov
iret
inc
stos
jo
sub
pop
sbb
lds
mov
bound
xchg
inc
popf
jbe
je
shrb
sbb
insl
and
rclb
sbb
imul
lods
mov
or
out
mov
sub
push
push
cmpsl
jl
sbb
cmp
inc
jl
inc
and
popf
arpl
into
inc
mov
sbb
xchg
cmp
mov
rorb
add
sbb
lret
mov
jns
dec
dec
scas
pop
xor
mov
in
and
es
ret
sahf
mov
mov
pop
cmc
scas
jne
xchg
mov
sbb
push
inc
rcr
fwait
add
sub
and
scas
cli
dec
std
mov
movsl
ficomps
mov
mov
adc
xchg
pop
cmpsl
dec
lea
dec
push
jno
sub
stos
loopne
fdivrp
add
sub
mov
rcll
inc
cmpsl
and
insl
ja
cmp
call
pop
push
lock
push
push
es
adc
mov
js
jne
dec
pop
pop
pop
or
ljmp
mov
and
mov
or
scas
jl
sub
test
les
fwait
and
setae
push
jp
lods
test
sub
shll
jecxz
fnstenv
add
rorl
test
jno
pop
sub
pop
int
adc
out
decb
xchg
arpl
js
lret
xor
int
mov
pop
add
sbb
stos
lea
mov
mov
mov
ja
dec
push
repz
loop
lods
dec
sub
mov
jge
imul
ret
mov
addl
mov
addb
orb
int
fisubl
add
aad
cmpsb
aam
xor
inc
dec
lret
jno
xchg
lret
aaa
inc
or
or
lds
pop
pop
lcall
pop
inc
les
xor
inc
dec
jbe
xor
cmpsb
adc
dec
pop
addb
lds
out
mov
and
xchg
popf
addr16
call
mov
nop
hlt
call
repnz
test
in
pop
pop
ror
int
add
adc
add
cmp
push
insl
in
push
sub
pop
pop
xchg
es
mov
xchg
fmuls
mov
xchg
jmp
inc
mull
int3
mov
adcl
leave
cmp
adcl
push
fisubl
adc
and
outsb
imul
dec
lret
mov
in
sbb
ds
paddsb
mov
xchg
insb
sar
and
fsts
imul
sbb
jl
xor
scas
mov
push
ret
cmpsl
inc
cltd
pop
xorl
inc
and
push
push
mov
shld
xchg
mov
sti
sub
cwtl
pusha
shrl
xor
gs
nop
sub
dec
sarl
add
cmp
imul
xchg
push
aam
push
mov
sub
ss
dec
sub
imull
in
push
push
mov
jnp
popa
das
jne
pop
fyl2x
mov
into
inc
xlat
scas
sub
les
sbb
sbb
and
test
out
sbbl
out
xchg
jbe
mov
jbe
mov
fdivr
sub
loope
push
ljmp
mov
xor
mov
pop
fnsave
xor
lcall
lea
xchg
popf
leave
mov
mov
sub
mov
ds
adc
pop
cmp
fyl2xp1
arpl
outsl
or
fdivrl
add
ja
add
sti
adc
push
jmp
stos
sub
bound
jb
inc
imul
cs
lods
jg
cli
inc
stc
fwait
xorl
shrb
sbb
jp
lea
fwait
xchg
imul
dec
xchg
adc
or
lcall
inc
out
add
mov
pop
xorl
dec
pop
fistpll
lds
sti
lret
cmp
cmp
mov
adc
bound
jae
pop
jae
and
lahf
sbb
fisubrl
in
vpsubq
pop
mov
insl
pop
cli
or
test
xor
imul
inc
sahf
add
mov
outsb
fwait
jle
lahf
cmp
jnp
adc
pushf
mov
bound
int3
ds
jg
push
lea
mov
push
push
add
pop
fiaddl
cltd
loop
fbld
cmp
xor
xor
jl
cmp
or
mov
pop
out
and
es
out
jns
idiv
mov
das
jle
sub
and
or
inc
inc
adc
cld
js
and
xor
test
cwtl
mov
jle
fmull
cmp
pop
imul
cmp
ret
push
jae
lds
xchg
inc
movsl
cmpsl
jnp
mov
out
pop
shll
add
out
pop
aaa
cmp
pop
sarl
inc
xchg
ret
subb
mov
cmp
mov
imul
sbb
and
inc
add
jmp
or
sbb
cmp
add
lock
xor
in
push
dec
sarl
xchg
dec
mov
fidivs
xor
insb
ret
test
sub
mov
or
or
out
icebp
xchg
xchg
out
imul
adc
xor
aas
ds
fdivs
mov
test
mov
cmc
inc
hlt
xchg
xlat
lret
push
shlb
das
inc
andl
out
test
nop
pop
out
inc
xchg
push
xor
push
scas
or
stc
rclb
loope
jmp
movsl
mov
inc
and
movsb
or
jnp
inc
psubsw
push
ret
es
sub
xchg
inc
adc
xor
in
xchg
test
scas
add
xchg
mov
addl
orb
das
or
imul
sub
xchg
js
or
and
fdivl
xor
rcrl
mov
sub
or
pop
or
xor
xorb
je
pushf
into
out
pop
sbb
cmp
insl
lods
xchg
cld
ret
stos
pop
sti
xor
pop
xchg
fst
lods
bound
aad
push
cwtl
cltd
lds
push
out
xor
or
daa
push
mov
mov
movsb
cmc
xor
cmp
mov
mov
jmp
icebp
lcall
test
xor
dec
hlt
or
xorl
dec
lds
adc
dec
or
sarl
push
arpl
push
out
out
sbb
aad
test
add
mov
and
mov
xchg
sbb
scas
pop
and
xchg
aad
pop
jp
call
push
adc
jne
mov
cmpsb
in
mov
sub
mov
pop
mov
in
and
lods
mov
addr16
ja
repnz
sbb
popa
aaa
dec
xor
push
pop
lret
arpl
enter
inc
sub
cmp
xchg
out
push
dec
sbb
out
xor
sub
nopl
sarb
jbe
test
pop
pop
test
push
mov
mov
arpl
mov
inc
das
jne
jo
inc
inc
ret
push
sbb
cs
xor
xor
call
je
addr16
sti
call
xchg
add
push
shll
push
arpl
adc
fldt
push
data16
cmc
mov
jg
mov
sbb
sub
xor
ja
mov
aam
sti
loopne
mov
push
mov
pop
jl
xor
mov
movsl
xchg
sbb
sub
loop
push
cmpsl
inc
enter
rcrl
inc
or
adc
daa
sbb
sub
fdivs
mov
or
rcrb
xchg
fdivrs
repz
sahf
stc
fnstcw
scas
ljmp
loop
iret
xchg
pop
jbe
out
test
shrb
nop
inc
test
cwtl
sub
sub
inc
mov
in
inc
ficompl
xor
test
sub
leave
lret
and
sbb
pop
dec
push
sar
cmp
outsl
cli
aas
mov
mov
xor
pop
test
mov
sub
jo
popf
cmp
lock
inc
mov
es
fbld
pop
out
gs
lcall
cli
cmp
cmovae
jle
mov
inc
mov
aas
xorl
xor
push
arpl
out
nop
jl
xchg
adc
insl
stc
add
cli
stc
adc
fmuls
cmp
int3
xor
ret
imul
repz
add
xor
scas
xchg
xor
mov
std
sub
adc
stos
xchg
sub
inc
push
mov
sub
jl
addb
mov
sarl
subb
fiadds
fildl
jecxz
shlb
sub
enter
sbb
pop
out
mov
fsubrs
fstpl
pop
rorb
mov
adc
adc
mov
test
xchg
out
icebp
bound
mov
rcrl
negb
or
addr16
loop
ffreep
jb
in
mov
ret
cmp
outsl
xor
fldcw
ss
inc
sbb
arpl
clc
adcb
repz
mov
arpl
call
pop
mov
inc
add
inc
jne
mov
jnp
push
arpl
jnp
jmp
add
adc
mov
outsb
data16
inc
shll
push
xchg
push
int
stc
bound
xor
sahf
mov
loopne
std
testb
mov
xchg
orl
outsl
aam
bound
push
mov
xchg
sbb
jmp
clc
add
jnp
add
dec
mov
call
inc
push
dec
cmp
cmp
push
mov
ljmp
icebp
pop
dec
xor
sbb
inc
dec
scas
out
or
cs
xor
int
dec
and
popa
pop
mov
loop
rclb
test
icebp
cmp
cmp
lock
sub
adc
jmp
fistps
jle
pop
pop
fisttps
enter
lret
fsts
or
push
popf
mov
xchg
mov
rorl
sbb
push
sub
fwait
daa
out
lock
mov
aas
xchg
sbb
stos
add
adc
dec
mov
ret
inc
cli
mov
insl
cmc
xchg
pop
lods
mov
mov
and
lods
popf
push
mov
and
scas
mov
mov
arpl
dec
xchg
mov
gs
xor
dec
rorl
pop
dec
xor
adc
mov
xor
icebp
and
out
and
lahf
push
pop
hlt
hlt
rcr
frstor
lock
rcll
inc
std
jne
int
out
pusha
mov
aas
enter
clc
mov
fdivs
loope
orl
sahf
sub
or
inc
cmp
icebp
sub
dec
mov
gs
fnsave
icebp
push
push
mov
data16
lret
fdivrp
mov
fidivrs
sbbb
cmp
mov
cld
scas
in
test
cld
cli
mov
xchg
mov
aad
sub
sbb
sbb
pop
sub
in
sar
adc
fcmovne
inc
mov
xor
ljmp
popf
paddq
dec
adc
push
mov
test
and
call
mov
sub
sbb
jae
in
cmc
push
aaa
mov
jno
mov
dec
popf
dec
pop
mov
sbb
repnz
outsb
das
pop
shlb
lods
loopne
xchg
add
imul
adc
orb
mov
sbb
dec
or
jecxz
inc
in
xchg
insb
pusha
jns
mov
push
xor
in
dec
test
aam
or
imul
inc
jns
leave
add
test
mov
inc
pop
adc
push
icebp
push
dec
js
or
in
xchg
lods
jbe
jb
subb
aad
push
mov
mov
popf
sbb
pushf
dec
mov
adc
jne
mov
pop
leave
hlt
in
push
xor
pop
out
jmp
or
sbb
pop
jle
xor
rcr
shll
push
mov
pushl
test
std
repz
gs
imull
push
in
clc
fidivl
into
and
mov
adc
cmp
stos
sarl
dec
cmpsl
mul
es
movsb
jmp
pop
jle
fcmove
or
adc
lahf
addl
fdivs
push
dec
pusha
bound
shrb
in
les
cmpsl
and
sbb
cmp
xchg
adcb
xor
clc
mov
cwtl
loope
repz
pop
outsb
mov
inc
xchg
ja
leave
sahf
data16
and
cmp
push
sysexit
inc
sbb
pop
ljmp
inc
ffreep
es
mov
and
cltd
cmp
shll
test
jge
jns
cmp
push
xchg
xchg
fistps
xor
addb
and
jp
stos
sarb
mov
les
mov
daa
xchg
shrl
ja
jb
inc
movsb
sahf
sbb
mov
adc
rcr
cmpsb
cmpsl
inc
mov
mov
les
mov
xor
aas
lods
aad
pop
ret
sarb
xlat
data16
xor
in
movsb
insb
adc
mov
scas
dec
push
stc
adc
add
adc
sub
inc
xor
ret
mov
xchg
sbb
inc
adc
push
jmp
mov
cwtl
out
jns
es
and
adc
cmp
decl
cmp
xor
adc
icebp
dec
ror
mov
js
test
jnp
lahf
sti
sbb
push
fs
and
cmp
mov
sahf
add
je
cs
jb
ljmp
push
nop
lods
add
push
sbb
cmpl
sbb
test
mov
leave
inc
fstl
js
xchg
ret
pop
addl
xor
mov
or
scas
cwtl
add
jns
pop
xchg
push
lods
inc
cmp
and
pop
add
pop
xlat
std
dec
mov
scas
mov
fstpt
cmp
mov
inc
fiadds
cmp
fadd
inc
cli
pusha
movd
sub
and
scas
mov
inc
sbb
and
test
insb
frstor
insl
loopne
xor
shrb
jle
xchg
fsubrl
xor
rorb
mov
imul
sub
jg
ss
jnp
scas
ja
leave
jmp
lahf
jbe
jne
mov
mov
scas
jne
xorb
xchg
mov
xchg
fsts
inc
push
std
adc
fdivr
lock
xor
mov
sub
dec
ffree
inc
pop
pop
jecxz
mov
pop
stos
adc
aas
je
mov
mov
cli
jae
addr16
jnp
cltd
pop
push
pop
loop
in
dec
adc
or
loop
shll
cmpsb
sbb
roll
mov
mov
mov
sahf
add
push
jmp
repz
data16
into
jnp
and
into
ss
add
sub
fs
hlt
xchg
cmp
push
sti
xor
fsubrs
push
or
sub
mov
cs
jl
xchg
mov
ret
pop
sar
push
ja
sub
bound
sti
jmp
mov
sti
in
into
sbb
fdiv
ds
sti
repnz
sub
push
push
mov
mov
shl
test
sbb
flds
rol
repz
cmpsl
rol
pop
xchg
ret
mov
or
pop
xor
push
fcmove
js
jecxz
stos
xor
clc
divl
enter
dec
push
in
sahf
in
test
stos
or
cs
cmp
jge
jle
inc
xchg
ret
fisubl
test
and
dec
jg
add
or
into
mov
fwait
xchg
out
in
jno
mov
push
popf
lcall
jmp
xchg
mov
xchg
xchg
leave
scas
cld
xchg
js
xchg
bound
and
add
rcrb
shlb
inc
inc
mov
xchg
xchg
pusha
ror
adc
aad
mov
xchg
adc
mov
xchg
cs
cmpsl
scas
sti
mov
ret
data16
imul
xor
push
in
sahf
mov
in
ror
jg
pop
stc
mov
xor
pminub
clc
push
mov
push
mov
mov
es
mov
inc
stos
xchg
mov
je
lods
pop
andnps
les
inc
imul
data16
jne
ds
or
sahf
ds
ret
pop
int3
out
fs
outsl
xchg
mov
arpl
rcr
test
sbbl
in
aam
loopne
cmove
aaa
mov
test
cmp
aaa
out
popf
ds
insl
cmp
jb
mov
in
or
in
cmpsl
dec
or
pop
shrb
not
cmpsb
pop
js
int3
jne
sub
scas
stc
push
rolb
adc
cld
sub
es
xchg
dec
jg
mov
xchg
stc
inc
push
mov
popf
repz
cmp
lcall
notb
movsb
sbb
std
jl
xor
orb
cmc
mov
test
dec
sar
out
std
ror
and
addr16
push
jbe
mov
xchg
int
imul
push
mov
les
jmp
jmp
cld
mov
out
leave
add
xor
outsl
sub
adc
out
mov
adc
mov
sbb
xchg
lock
push
call
out
xchg
mov
out
inc
out
cwtl
orps
cmp
dec
cld
cmpsb
call
pop
or
jne
sub
push
aaa
push
stc
adc
jns
gs
dec
iret
mov
mov
and
pop
movsb
jl
fnop
push
ss
inc
dec
lea
push
xchg
and
adc
add
subps
shrb
cmpsl
std
jo
popf
std
mov
sub
push
inc
or
push
xor
cwtl
pop
sbb
inc
jae
mov
ret
fbld
fdivrl
fwait
loope
andl
cmp
cmc
popf
inc
popa
lods
test
dec
xlat
sub
xor
pop
jmp
add
mov
sbb
inc
adc
jb
lods
mov
js
cmp
push
dec
inc
je
lock
rorb
xor
adc
dec
xor
loopne
ja
rcr
and
lea
jge
insb
sub
mov
push
xor
sarl
pushf
test
push
cmp
mov
xlat
adc
insl
cmpsb
mov
xor
mov
in
fidivrl
shrb
mov
enter
pop
dec
xor
jge
and
xor
in
dec
incl
push
mov
sub
aam
pushf
popa
imul
xchg
ja
aaa
dec
test
jmp
xor
push
adc
xchg
in
xchg
xor
or
insb
adc
cltd
jmp
test
cli
ss
pop
icebp
daa
jo
fmulp
shrb
push
jb
out
adc
adc
dec
cmp
mov
sub
cmp
mov
sahf
lock
in
popf
mov
loop
mov
testb
cmc
fistpl
pop
out
or
imul
fistpl
xor
lea
fldl
or
jo
sbb
pop
rcrl
jge
jecxz
insl
fsubrp
lods
std
or
sub
push
dec
hlt
fisttps
rcr
enter
xor
repnz
mov
or
es
cmp
dec
inc
aam
dec
inc
mov
addl
sub
fdivl
sub
bound
dec
pop
mov
pop
pop
adc
or
push
test
or
xchg
in
push
les
adc
dec
test
loope
adc
pop
aam
gs
pop
or
sub
mov
fnstenv
jl
sbb
pop
stos
jae
jno
mov
jae
pop
fistps
vpsllq
mov
stos
cmc
sub
outsl
xchg
scas
popa
mov
inc
jg
sarl
xchg
add
mov
sbb
xchg
sti
push
sbb
mov
push
outsb
call
xchg
dec
mov
ljmp
in
orl
rcll
fwait
rcrb
pop
dec
pop
outsb
pop
inc
lea
jno
in
adc
xchg
jecxz
jle
mov
xorb
fs
gs
fwait
ljmp
arpl
sahf
pop
mov
adcl
xor
dec
mov
ja
mov
sub
lcall
jecxz
lcall
movsb
adc
pushf
scas
xorl
sbb
fisubrl
mov
push
div
inc
fistpll
cwtl
sub
outsl
adc
pop
cmp
fwait
xor
scas
cs
mov
pop
jle
insb
push
cmp
inc
jno
scas
nop
test
insl
sti
pusha
inc
mov
mov
loop
mov
loope
ret
jns
cmp
jmp
loop
pop
int
daa
sbb
cwtl
stos
imul
call
mov
sbb
mov
cs
mov
addb
jnp
mov
pop
xchg
jb
mov
ret
cmp
xchg
push
inc
lret
adc
shrb
in
add
pop
iret
cmp
or
xchg
cmpsb
ret
sbbb
or
fcomps
fisubs
pop
fnstsw
sbb
pop
sbb
shrb
xchg
or
fistpl
xor
xor
mov
test
out
int3
add
or
ja
mov
call
cmp
mov
xorl
aad
jno
inc
push
fistpll
xchg
xchg
icebp
ss
gs
mov
push
movsb
sbb
mov
in
int
leave
add
sub
cmp
sub
shrl
in
jge
jnp
das
fists
pop
and
xchg
and
nop
stos
fs
loopne
pop
cmp
dec
outsb
sub
js
jnp
cmp
mov
mov
outsl
push
mov
inc
jl
xchg
dec
test
in
scas
mov
sbb
mov
outsl
or
push
mov
adc
jl
adc
jbe
inc
xchg
btc
bound
fcompl
dec
add
or
sbb
mov
lahf
inc
sbb
imulb
lcall
jmp
sub
data16
pop
add
dec
outsb
mov
mov
xchg
inc
mov
push
pop
ja
mov
sub
sbb
outsl
adc
mov
testl
xchg
and
mov
mull
arpl
mov
lods
mov
xchg
js
cs
out
push
xchg
mov
dec
dec
jp
shlb
pop
cmc
lods
in
ret
dec
xchg
cld
call
adc
add
je
sbb
fs
jmp
adc
cmp
xor
in
inc
add
xor
push
enter
xchg
inc
call
xor
subl
cmp
or
push
cmp
adc
in
clc
pop
dec
fistps
pop
inc
addl
dec
test
push
xchg
stc
jae
adc
sbb
dec
lea
push
or
cld
push
rcll
xchg
and
fidivrs
cld
adc
divb
lods
test
xchg
mov
ljmp
mov
dec
test
loopew
ficomps
adcb
rcl
xchg
cmp
dec
es
mov
adcw
jae
adcb
xchg
jns
jns
adc
sub
in
mov
cmc
aad
mov
lods
bound
insl
sub
fidivrs
imul
push
pop
f2xm1
leave
jne
sub
adc
sbb
pop
pushf
add
pop
int3
insl
inc
mov
push
movsl
repz
shrb
or
cmp
popa
or
inc
jmp
pop
mov
cmpsb
sarb
sbb
mov
jbe
adc
sbb
xchg
inc
mov
pop
repz
pop
fnstsw
sahf
dec
jne
xor
push
hlt
addl
push
fcmove
sbb
jmp
cltd
leave
push
xor
inc
mov
shlb
aad
dec
inc
cld
jnp
sub
push
aaa
sbbb
dec
mov
and
push
push
or
gs
push
icebp
int3
jns
adc
je
inc
icebp
out
js
jnp
jo
pusha
xchg
sub
add
inc
push
xor
shll
test
sahf
jae
imul
pop
sbb
dec
dec
fdivr
xlat
popf
pushf
call
pushf
stos
add
pop
dec
push
sahf
push
xchg
mov
mov
jg
add
shr
cmpsl
sbb
add
ret
mov
push
ss
mov
inc
sarb
or
dec
ja
cli
nop
jae
enter
mov
stos
jg
aas
jp
stos
sbb
mov
mov
or
xchg
mov
xchg
ja
mov
repz
aaa
sub
push
ljmp
cmp
ljmp
sub
add
bound
xor
cmp
mov
cmp
loop
rcll
sub
xor
out
push
push
shl
jge
mov
adcb
sarb
xchg
xor
insl
enter
repnz
cmp
jle
pop
pop
out
addr16
imul
insl
fisttps
push
jno
imul
xor
std
xchg
jae
iret
mov
lods
cld
out
push
mov
pop
pop
mov
mov
imul
mov
or
lret
pop
enter
movsl
dec
mov
js
add
js
out
arpl
mov
cld
subl
jmp
les
xor
or
arpl
sbb
mov
jmp
push
stc
aaa
jecxz
lea
pop
or
jge
popa
jo
lods
add
jmp
push
adc
push
jge
adc
jb
lahf
loop
push
pusha
push
iret
imul
inc
and
cmp
repnz
jb
add
cmp
xor
adc
rolb
test
fists
pop
dec
push
push
push
fbstp
movsb
mov
mov
stc
pop
mov
gs
in
mov
inc
mov
ficoms
fs
xor
xchg
insl
mov
pop
mov
and
mov
ficoms
jp
stos
adc
mov
ja
lahf
xchg
scas
movsb
push
dec
inc
ljmp
lds
aam
jmp
in
xor
xlat
fcmovne
and
rorb
lahf
rorl
std
dec
xchg
out
mov
shrl
aaa
mov
mov
push
cmpsl
jno
out
imul
xor
loop
repnz
aaa
daa
nop
imul
cmp
mull
xor
in
icebp
dec
jge
dec
and
out
dec
scas
popa
inc
and
int
mov
cmp
int
imul
add
pop
lock
call
in
cli
dec
inc
rcrb
setg
roll
ds
pop
int
ds
rorl
mov
jge
loop
sbb
bound
sub
inc
shr
and
dec
xchg
aam
mov
mov
lea
arpl
stos
notl
rcr
pop
inc
insl
pop
adc
push
sbbb
cs
daa
int
ficompl
xlat
and
pop
adc
dec
jbe
adc
sub
and
jb
xchg
das
sub
fstl
and
mov
jae
movsl
adc
out
in
pop
pop
push
mov
push
cmp
test
orl
sbb
dec
mov
cmp
aad
xor
mov
xlat
into
xor
loope
and
xor
pop
pop
out
xchg
dec
cmp
std
or
or
bound
pop
and
pop
std
push
push
pop
call
jmp
sub
clc
dec
lds
mov
cmp
hlt
mov
call
enter
bound
aas
mov
push
jo
cmp
stos
es
je
pop
push
aad
add
mov
test
adc
rcll
add
outsb
sahf
add
daa
push
or
xchg
fldcw
adc
fs
adc
xlat
sub
sub
cld
popa
cs
movsb
sbb
ja
add
sub
push
jne
push
jge
sub
fimuls
gs
adc
adc
jg
out
xor
sbbb
mov
sbb
push
sbb
fwait
mov
add
nop
cmpsb
aaa
sbb
outsl
stos
loopne
cld
add
clc
pop
rolb
movsl
push
mov
jp
mov
sti
dec
cmp
push
mov
pop
sub
jns
repz
or
frstor
ss
inc
pushf
cmpl
cmp
lea
jno
pop
ja
test
push
or
lods
xchg
xchg
mov
fst
imul
fnsave
mov
rolb
or
adc
cli
icebp
inc
mov
xor
sub
jbe
sub
xchg
jp
sbb
rorl
repnz
mov
jg
outsb
fadd
ljmp
add
scas
xchg
pop
inc
loopne
ljmp
dec
push
popa
scas
jns
jmp
popf
push
add
cmp
insb
leave
dec
test
dec
aam
inc
push
dec
lahf
scas
fwait
push
fidivrl
popf
inc
jecxz
jg
push
dec
jecxz
push
mov
push
lret
mov
jmp
and
dec
cmp
lock
js
jl
in
dec
js,pn
pusha
mov
and
ret
adc
data16
dec
jp
jo
jp
stos
in
addr16
push
push
mov
subb
jne
fstpl
push
adc
jecxz
xchg
mov
pushf
iret
outsl
cmp
dec
testl
scas
jae
push
out
lcall
pop
pushf
push
xchg
pushf
loop
cmc
push
stc
loopne
push
sbb
xor
jnp
pop
test
out
sub
es
mov
arpl
mov
hlt
dec
cmp
imul
ds
push
cmc
arpl
aad
mov
ss
mov
or
mov
enter
je
push
mov
subl
hlt
dec
inc
push
les
push
mov
inc
fisttps
imul
or
shrl
inc
icebp
fisubl
nop
push
mov
xor
and
pop
faddl
cmp
sbb
adc
dec
push
mov
fwait
xlat
cmp
adc
into
imul
lahf
add
inc
vdivss
cmp
xor
pushf
mull
test
inc
mov
dec
gs
daa
mov
adc
or
cwtl
sub
or
sbbl
mov
loopne
je
lods
sub
fstpl
or
or
cmpsl
adc
clc
in
jnp
pop
xchg
xor
pop
sbb
cld
or
xchg
jecxz
mov
sbb
lahf
mov
pop
push
test
addr16
les
mov
nop
test
sub
mov
dec
xchg
and
repnz
xchg
icebp
and
aaa
pusha
pop
iret
dec
daa
push
mov
imul
fs
mov
aad
mov
xlat
xor
add
stc
inc
xchg
icebp
sub
mov
out
loopne
push
inc
mov
addl
jo
adc
push
bound
sub
push
push
cmp
jb
popa
sub
ret
add
sti
fdiv
sub
hlt
in
mov
sahf
push
mov
repnz
mov
push
out
push
add
mov
pop
sbb
das
jns
mov
aas
loope
cmp
mov
mul
lcall
loope
movsl
dec
adc
mov
mov
jns
dec
ficoms
hlt
movsl
sti
in
xor
mov
insb
andl
popa
in
xchg
xchg
fiadds
popf
mov
dec
add
lods
test
xchg
push
les
das
mov
es
mov
sbb
out
ljmp
pushf
cmpsb
lahf
repnz
dec
fmull
aaa
jmp
rcll
mov
adc
sbb
hlt
ror
or
hlt
mov
sti
movsb
push
and
cmp
movsl
push
lock
pusha
mov
mov
int3
cmovne
or
pop
popf
inc
and
out
add
push
mov
movsb
jbe
sub
aas
inc
inc
sub
mov
divl
out
decb
and
add
shrl
mov
in
mov
icebp
pop
into
mov
mov
jl
xorl
insb
imul
xlat
movsb
jl
add
and
and
mov
in
lds
jae
mov
fsub
and
into
push
mov
sahf
loope
test
icebp
and
es
mov
out
lret
add
in
jae
lret
lret
daa
pop
pop
nop
rcrl
xlat
dec
add
mov
pop
call
mov
repnz
aas
jno
jg
je
jmp
test
push
jle
add
push
sbb
popa
psllw
mov
in
cmp
test
lods
sbb
pop
mov
mov
fcoms
ja
jl
cmpsb
sahf
mov
scas
into
addb
test
rcrl
inc
pop
pop
leave
aad
cwtl
cmp
lret
cmp
xor
ret
movsl
int3
push
jno
mov
clc
add
push
adc
in
lock
mov
add
push
jno
data16
cmpsl
lock
in
pop
clc
adc
xchg
in
adc
icebp
mov
jecxz
jp
pop
inc
and
jns,pn
mov
test
pop
fcomps
cmpsl
rep
adc
iret
rol
addr16
mov
fdivrs
push
fcompl
loope
divl
mov
fcom
test
push
add
in
jecxz
xor
mov
scas
xchg
jb
mov
gs
adc
js
and
sub
jbe
xchg
out
adc
stc
adc
or
or
pop
dec
js
inc
sub
xor
adc
inc
stos
adc
and
cwtl
clc
sub
sub
mov
inc
clc
es
mov
in
inc
shll
pop
fidivrl
sbb
movsb
mov
add
insb
sub
ja
clc
sbb
and
clc
mov
gs
mov
subb
xor
adc
cmp
inc
out
es
cwtl
cmp
mov
lds
push
out
out
cmp
adcl
xchg
std
std
das
sarl
lret
fistl
xor
fmull
jns
ds
aaa
and
inc
sbb
inc
mov
outsl
lods
mov
popf
in
jae
es
xor
push
repnz
cmpsb
fildll
mov
mov
sub
push
jbe
int3
cmp
pop
inc
sti
or
mov
push
sahf
les
mov
xchg
dec
mov
jmp
jecxz
aam
imul
stos
je
mov
jno
xor
and
fstpt
paddb
add
call
inc
clc
mov
popa
xchg
bound
pop
xor
imul
lea
movsl
add
dec
aad
cmp
pop
rcrb
dec
mov
lock
push
call
jecxz
pop
push
sahf
fsincos
shlb
sub
cwtl
xor
push
pop
add
dec
insl
sarb
fdivrp
iret
aam
ret
or
fdiv
push
adc
std
mov
les
push
cmpsl
dec
push
repnz
pop
insl
adc
mov
jl
mov
cmp
shll
popa
jno
ret
pop
les
cmp
fs
jmp
inc
jp
in
mov
cmp
jl
loop
and
xchg
or
inc
sbb
and
lret
jge
push
lret
adc
cmp
ret
adc
ss
je
or
cmc
scas
push
fisubrs
in
jecxz
outsl
add
push
adc
or
out
popf
xchg
xchg
iret
jb
dec
cld
dec
ja
cld
ret
rcl
mov
in
jle
jo
ja
pop
test
mov
sti
xlat
pop
lret
mov
sti
mov
mov
mov
mov
xchg
inc
sub
lock
int3
insl
or
repz
cmpsl
in
add
into
push
loop
pop
mov
jle
pushf
loopne
or
ret
jp
mov
mov
dec
shr
jno
aad
sbb
shl
cmpsl
push
mov
and
jbe
faddl
add
or
mov
out
lahf
lahf
fsubrl
insl
mov
inc
dec
xchg
pop
rcrl
leave
lahf
cmp
or
mov
scas
cmp
push
jno
xchg
std
push
repnz
shl
jne
push
aaa
icebp
mov
xor
sub
stos
bound
ja
icebp
push
add
lods
xchg
xor
mov
je
xor
jns
clc
jae
jmp
mov
aaa
gs
xor
mov
pop
and
sbb
push
movsl
out
jg
adc
push
repz
test
mov
shll
mov
fsub
or
in
xchg
mov
repz
not
sub
add
imul
inc
lahf
in
mov
outsl
jo
adc
adc
xor
add
pop
imul
lock
push
jl
add
xchg
push
jp
mov
and
clc
outsb
sti
shl
aam
adc
ja
pop
jne
test
xor
out
ds
pop
arpl
data16
fwait
gs
xchg
inc
lret
imulb
lahf
or
cmp
add
rcrb
push
mov
loop
mov
sbb
rcll
push
mov
mov
call
pop
xchg
rorl
xchg
je
das
pushf
mov
cmp
mov
mov
stc
inc
xchg
fsubr
xlat
sub
pusha
pop
inc
out
inc
xor
or
add
mov
mov
cmp
lods
shlb
jge
popa
mov
rolb
add
push
subb
dec
insb
pop
inc
add
pop
jle
push
adc
push
ljmp
call
aas
mov
leave
imul
push
movl
mov
bswap
movsl
sub
lods
rorb
loope
xchg
push
push
imul
cli
adc
jb
ljmp
cwtl
sbb
push
jle
in
enter
jmp
icebp
test
pop
je
movsb
push
pushf
pop
push
adc
cltd
push
jg
lcall
movsl
sub
in
push
loopne
dec
jge
dec
mov
jge
xor
pop
pop
jl
xchg
addb
outsb
mov
lret
adcb
push
mov
fldl
sub
aaa
push
mov
daa
xor
shrb
jle
sub
pop
and
jge
pop
xor
addr16
ret
and
stos
fisttps
fiaddl
pop
das
sti
xchg
or
nop
outsl
jo
xchg
mul
ljmp
mov
or
inc
push
addr16
adc
cmp
jbe
leave
pop
sbb
repnz
or
ljmp
pushf
adc
test
fidivs
sub
lods
mov
sbb
fsubr
xchg
add
rcrb
jg
or
out
lods
sub
aad
fdivrs
cli
mov
in
addr16
into
data16
mov
fsubp
or
enter
daa
mov
test
lods
das
sbb
mov
sahf
nop
mov
xor
xchg
in
sbb
gs
cli
jg
jle
shlb
xor
hlt
push
jg
mov
jge
xchg
pop
mov
add
movsb
sbb
aaa
ret
or
dec
popf
push
cmpsl
icebp
cwtl
repnz
pop
dec
push
xor
hlt
pop
mov
jecxz
push
movsl
loopne
inc
add
test
push
adcl
sbb
cmp
loope
mov
push
or
and
pop
lock
sub
nop
jnp
dec
mov
inc
ljmp
add
lds
popf
loop
sbb
sub
shr
shrb
xchg
mov
ds
jmp
adc
cmp
movsb
fcmovnb
mov
nop
cmc
out
pop
sub
shlb
adc
movsl
mov
mov
lret
ljmp
fmuls
xchg
fistpl
xor
lea
jns
stos
xchg
mov
pop
mov
in
or
push
es
repnz
cltd
adc
sbb
dec
mov
mov
leave
adc
jle
divb
jne
or
lock
fildl
sub
test
call
pop
fildll
je
and
aaa
sarl
test
inc
inc
rol
fisttpll
dec
or
mov
inc
je
pop
jne
aad
shrb
lods
in
pop
xchg
jmp
sub
pop
jne
dec
fcmovnbe
fldt
repnz
loop
inc
push
stc
gs
dec
cmpb
or
mov
or
push
and
movsb
pop
cmp
fcomip
push
out
lods
stos
std
ret
sub
js
lods
arpl
test
jno
xor
jns
or
push
repnz
shrl
outsb
jecxz
leave
mov
outsb
mov
mov
mov
js
jp
pushf
push
pop
imul
dec
aas
sub
addl
fisubrs
ljmp
ja
push
and
and
stc
push
mov
jno
or
fimull
outsb
sub
sbb
jo
xor
inc
cmc
push
sub
enter
stos
jae
sahf
jmp
inc
loope
cmp
xchg
out
fs
mov
les
lahf
mov
fwait
jge
xchg
dec
sub
pop
popa
adc
and
xor
popf
pop
mov
es
sbb
mov
sub
jle
pop
push
add
mov
aaa
dec
rorb
nop
stos
cmp
mov
adc
cmp
cs
dec
loop
gs
fsubrs
lea
push
adc
mov
mov
int
push
pop
out
xor
adc
gs
adc
outsl
mov
xchg
nop
loop
fldenv
lock
jno
test
mov
dec
pusha
inc
push
jno
push
popa
pusha
sub
push
aad
sub
fidivrs
pop
sbb
mov
mov
ficompl
mov
mov
inc
scas
mov
subl
xlat
sbb
sti
sti
push
or
sbb
leave
push
cmp
movl
loope
fs
cmpsl
aad
add
sbb
std
cmpsl
ss
adc
xchg
loop
mov
fcmovnu
and
lds
pop
out
imul
js
lahf
mov
add
daa
xor
pop
mov
push
lock
jae
mov
je
scas
mov
or
shrd
in
push
push
xchg
mov
jp
sbb
add
sub
ffree
dec
nop
inc
jg
add
sahf
push
loope
jp
adc
dec
mov
dec
daa
xor
inc
test
pop
test
cmpsl
insb
fisttpll
imul
xor
dec
repz
mov
std
mov
test
clc
inc
cwtl
and
mov
adc
xchg
notl
sub
lahf
and
lret
ret
sbb
xchg
adc
cmp
rcll
loop
mov
push
xchg
test
repnz
test
das
std
mov
iret
aam
push
pop
inc
jno
lock
mov
sbb
shrb
inc
fwait
ss
insl
pop
dec
adc
jne
sub
push
mov
or
ljmp
jb
add
stos
xchg
xchg
jle
test
pop
push
push
daa
dec
cs
push
and
mov
mov
aas
push
jmp
jl
rcr
xchg
push
adc
sub
dec
xlat
cmp
fldt
and
dec
mov
mov
sub
inc
addr16
and
jl
pushf
and
js
jns
or
dec
mov
cmp
jp
out
js
fwait
xchg
add
int3
and
lret
add
dec
addr16
fwait
and
fimuls
pop
sbb
xchg
and
roll
add
mov
inc
les
imul
mov
lods
inc
jnp
das
cmovnp
inc
int
mov
out
jns
das
das
pop
pusha
fs
subl
repz
outsl
repz
and
mov
sbb
gs
ja
sub
stos
aas
add
cld
mov
ds
inc
hlt
pop
adc
mov
pop
sbbl
daa
call
movsl
cmpsl
add
test
mov
imul
cld
pop
lods
lods
mov
xor
jae
dec
push
ds
cmp
loop
inc
gs
ss
fnsave
adc
mov
mov
xchg
repz
insl
rclb
mov
je
sahf
loopne
pop
mov
mov
nop
add
jo
xlat
shll
pop
sbb
inc
stos
add
xor
andl
dec
and
inc
test
xor
adc
nop
test
cmp
sub
insl
sbb
mov
test
cmp
fistps
add
sbb
out
ljmp
adc
dec
roll
jmp
jo
sti
dec
fidivrs
mov
in
pop
cmp
addr16
test
cmpsb
shrl
mov
test
out
aaa
sti
movsb
inc
sub
push
adc
and
adc
mov
out
pushf
lds
mov
imul
int3
int
loop
in
cs
pushf
or
add
pop
dec
shrb
xchg
mov
setne
lds
and
mov
jmp
mov
arpl
mov
jp
roll
incb
push
test
jl
pop
sub
into
pusha
arpl
nop
repz
push
jb
fcoms
cmp
dec
pop
sahf
xchg
jnp
cwtl
fdivr
mov
push
inc
mov
pop
jb
xchg
pop
daa
jl
cwtl
jbe
mov
jl
push
mov
adc
adc
rclb
out
pop
pusha
dec
int3
out
inc
lret
or
inc
xchg
aad
cmp
push
rclb
adc
ss
push
mov
pusha
lret
daa
imul
mov
insb
insl
pop
cmp
pop
imul
in
push
sbb
bound
bound
sub
mov
mov
jle
rcrb
mov
mov
jne
or
cmpsl
in
adc
push
pop
div
out
or
jbe
add
stos
add
add
push
shr
repnz
test
fistpl
cmp
mov
push
lret
sub
adc
and
fsubp
inc
popa
pop
cmc
cmp
repz
mov
out
sub
xchg
mov
and
push
jmp
cli
scas
and
je
sahf
xor
andb
or
stos
nop
xchg
adc
pop
popa
adc
aad
loopne
sbb
jmp
int
addl
je
bnd
and
mov
cs
lcall
mov
add
add
roll
adc
xor
shl
or
and
faddl
stc
push
adc
pop
ss
test
je
test
push
daa
popa
mov
fldcw
push
sub
lds
pop
das
mov
scas
imul
pusha
aas
stos
push
cmc
lret
dec
mov
jge
and
sbb
test
rep
xchg
cmp
mov
sub
cvtdq2ps
aam
push
cmp
pop
cmpsl
test
pop
insl
sbb
adcl
pop
xor
shufps
call
mov
lea
jge
stos
cld
and
fcmovb
push
sbb
lret
rcr
loope
pop
sub
mov
inc
or
pop
cli
ds
dec
das
cwtl
stos
mov
sub
decl
adc
mov
sbb
ror
std
sahf
movsb
out
std
jns,pt
push
fidivl
fxam
sub
dec
inc
fistpl
and
push
je
mov
das
pop
clc
inc
sbb
loopne
cli
lds
pop
shl
fstp
mov
jge
pop
sub
adc
scas
negl
movl
sbb
mov
inc
and
mov
pop
movsl
cs
es
lea
dec
sbb
xor
push
test
fldl2e
dec
adc
sbb
mov
ja
push
jge
pop
popf
inc
mov
nop
add
and
stos
out
mov
pop
mov
lds
clc
mov
cmp
bound
mov
pushw
scas
mov
mov
mov
call
pop
xchg
popa
mov
jmp
pop
xor
jecxz
push
out
in
sti
stos
in
dec
hlt
adc
and
cld
outsb
push
div
xchg
fcom
test
dec
outsb
mov
fstpt
jp
mov
adc
fmuls
je
xchg
push
lahf
dec
cmc
and
jae
xor
sahf
sbb
cld
and
fnstenv
cmpsl
sub
jmp
pushf
loop
pop
add
xchg
imul
add
cmpsb
test
dec
pop
add
sub
push
es
and
jecxz
loopne
sbb
jns
push
lret
adc
movsl
fmull
jg
scas
loop
push
sub
dec
mov
mov
cmpsl
pop
lret
push
out
push
and
and
popf
sbb
loop
sbb
push
sub
push
mov
xchg
xor
ret
mov
ffreep
ficoml
mov
adc
and
cmp
mov
sub
sbb
leave
pop
add
mov
les
sub
test
fiadds
mov
fwait
cmpsb
inc
bound
jns
and
push
mov
dec
sub
mov
sbb
xchg
jno
pop
mov
ljmp
repnz
mov
out
add
or
mov
sub
mov
mov
imulb
rcrl
mov
lods
pop
jle
xchg
add
or
rclb
decl
xchg
jmp
popf
mov
xor
jbe
dec
mov
sub
es
orb
push
lcall
sti
fisttpll
pusha
movsb
sbb
int3
mov
xchg
sub
mov
sbb
mov
test
cmc
enter
icebp
fdivl
cs
dec
lds
mov
je
nop
adcl
jno
arpl
decl
das
lea
fidivl
int3
fwait
mov
out
lods
mov
mov
dec
sarl
daa
pop
cmp
and
insb
scas
imul
int
inc
ror
sub
flds
jg
inc
pop
pop
push
sahf
mov
mov
jns
inc
sbb
ror
jnp
mov
jns
fstpt
cwtl
add
lds
scas
push
push
inc
mov
mov
sub
xchg
es
xchg
adc
push
out
addr16
scas
inc
stc
in
push
cmpsl
or
rcrb
xchg
cmpsb
movsb
dec
aam
fiadds
lret
fcoml
pop
mov
or
call
xorb
pop
scas
xor
cld
ds
insl
cltd
ss
mov
insl
lahf
jbe
in
fldt
sarb
jnp
jbe
addr16
in
movsl
mov
mov
int
fwait
dec
ljmp
sahf
in
sti
jae
mov
mov
xchg
daa
pop
pop
sahf
mov
ss
hlt
es
or
jp
jge
cmp
shl
outsb
scas
es
nop
movsb
cld
dec
sbb
pop
insb
mov
mov
adc
pop
mov
sahf
cmpl
fwait
push
sbb
pop
in
iret
pop
fwait
xlat
and
xchg
xchg
xor
fdecstp
adc
fisubrs
dec
lods
outsb
fisttpl
dec
arpl
ret
pop
inc
daa
cmp
push
je
jnp
addr16
jae
pop
push
dec
test
push
loope
icebp
shll
and
insb
jmp
add
sub
cs
jle
roll
pop
push
lcall
test
pop
inc
outsb
adc
loop
iret
test
jecxz
outsl
mov
add
and
cmp
inc
pop
sbb
mov
cmp
fsts
rcr
mov
cmp
popa
outsl
inc
int3
mov
ret
rclb
cmpsb
outsl
xor
ja
jl
and
je
xlat
xor
sub
sbb
fwait
bound
inc
ljmp
xor
xchg
and
adc
subb
in
jge
pop
xor
add
and
xchg
stos
pop
xorb
lock
lret
xor
lock
lods
mov
pop
mov
lea
push
fdivr
sbb
repnz
cmp
lcall
pop
xchg
and
or
add
cli
stos
std
mov
dec
cld
imul
sub
push
cli
out
or
pop
fdiv
pop
jl
jecxz
or
mov
dec
xchg
jb
ret
imul
sub
insb
sti
loopne
inc
mul
std
fs
and
xchg
jnp
ljmp
mov
shrb
into
mov
push
aas
or
jns
ljmp
scas
scas
not
push
clc
push
pusha
xor
cli
dec
add
xchg
jb
test
mov
mov
push
popa
push
jecxz
xor
jg
in
sbb
inc
mov
adc
jne
js
sbb
ja
aaa
clc
in
mov
push
rcll
jp
cli
inc
or
ss
fcomip
pop
cmp
ljmp
pop
into
movsl
adc
dec
hlt
push
aaa
data16
out
ljmp
in
sti
cmp
stos
jb
mov
inc
pop
and
repnz
inc
xchg
sbb
mov
lcall
mov
pop
movsl
pusha
iret
jl
mov
lea
outsb
lods
enter
jmp
pop
cs
lret
mov
push
and
cwtl
mov
shl
jl
inc
out
movsb
cltd
jl
mov
push
and
dec
repz
ljmp
xchg
movsl
push
outsl
shlb
push
jle
js
stos
add
cld
xorb
pop
jecxz
and
dec
pop
or
jns
outsl
lds
es
mov
adc
dec
mov
jge
in
push
inc
ljmp
push
dec
aad
mov
sbb
lock
xchg
sub
push
gs
inc
mov
insb
int
push
mov
andl
cmp
push
outsl
xchg
lods
test
mov
jae
into
sub
pop
popf
push
out
outsb
mov
movsb
xchg
shll
in
cld
icebp
test
pop
arpl
rorl
imul
mov
inc
out
js
jg
dec
push
pop
push
repnz
add
in
ljmp
bswap
and
pop
pop
ss
push
loope
xor
lret
sbbl
jg
pop
or
in
pop
adcb
sub
outsb
in
dec
jmp
mov
inc
xchg
mov
cwtl
mov
fdivl
push
add
mov
mov
ret
push
out
outsb
enter
pop
mov
xchg
ljmp
fisttpl
inc
push
adc
xchg
xor
lock
push
int
pop
dec
das
lret
arpl
fildl
testl
aam
and
sahf
pop
aaa
ret
add
popa
ja
push
jecxz
sbb
mov
repnz
gs
rcrl
lods
aas
fs
movsl
jg
mov
pop
rorb
daa
xchg
adc
lahf
aas
adc
push
dec
aaa
mov
cmp
stmxcsr
mov
push
dec
loopne
and
std
xchg
dec
leave
inc
pushf
les
pop
mov
adc
cmpsl
leave
mov
push
xchg
jmp
loope
mov
outsb
xchg
push
scas
popa
arpl
jo
mov
pop
push
mov
inc
push
and
mov
test
add
push
lods
popf
mov
jo
mov
enter
adc
icebp
or
xchg
inc
adc
mov
mov
mov
js
movsb
and
mov
pop
hlt
or
inc
fldenv
xchg
xchg
or
lret
aaa
lock
mov
ljmp
sbb
jmp
imul
push
cmpsl
sbb
cmp
pop
stos
xor
push
jne
sbb
popa
enter
xor
push
lcall
xor
xchg
lret
mov
lds
pop
adc
lret
mov
sub
sbb
subl
fidivrl
sub
xor
in
pop
push
fs
jae
es
sub
aad
mov
cmc
test
clc
xchg
push
iret
adc
ret
sbb
subl
adc
xchg
leave
stos
loop
mov
adc
cmovae
add
adc
idiv
push
cmpsb
and
mov
dec
aaa
shl
outsl
movsl
repnz
loope
adc
hlt
fidivrl
ja
pushf
lds
inc
mov
pop
xlat
mov
sub
lret
imul
pop
call
push
movsb
aad
mov
scas
fldt
daa
ss
shrl
sbb
leave
pop
dec
ret
fdivrl
cli
jo
test
gs
mov
es
orb
push
fcom
in
pop
sub
sub
mov
mov
xlat
dec
push
pop
jno
adc
mov
jle
pop
mov
pop
aas
mov
mov
cmpsl
in
mov
ret
xor
sbb
dec
push
xchg
sub
pop
xchg
and
mov
adc
out
mov
enter
repnz
fs
lea
sbb
shll
lret
scas
sti
mov
fs
inc
rcll
les
rorl
mov
test
jmp
ret
pop
movsl
cmpsl
or
pushf
pop
fs
in
xor
mov
xchg
andb
fsubl
inc
sahf
mov
push
pop
mov
dec
cmpsl
iret
fwait
mov
mov
and
xorb
test
mov
mov
dec
loope
xchg
cmc
out
cltd
xor
add
inc
cs
and
pushw
sub
stc
xchg
mov
inc
sbbb
adc
std
xor
out
fs
loop
inc
sub
pop
inc
lds
insb
cli
push
hlt
cmp
jecxz
fdivrs
int3
adc
loope
cwtl
sbb
push
add
push
dec
fidivrs
mov
push
dec
testb
fxch
hlt
popf
pop
mov
jle
lds
stc
es
aam
hlt
ret
cli
jmp
jnp
out
gs
loopne
loope
push
rcl
pop
sbb
sarb
jnp
and
cs
in
cld
jle
in
pop
inc
jecxz
and
cmpsb
xor
repnz
adc
arpl
sbb
test
stos
xchg
push
pop
adc
inc
and
dec
jbe
test
cli
adcb
or
stc
shl
mov
xchg
xor
or
nop
test
flds
lahf
adc
adc
repz
inc
pop
pop
fbstp
sub
packsswb
push
clc
loop
out
ret
jmp
xor
mov
test
leave
bound
and
fsubl
add
mov
xlat
test
arpl
pop
jo
inc
add
in
aad
sbb
cmp
sub
mov
lret
jp
pop
mov
fcomip
push
add
bnd
pop
scas
out
int
test
dec
roll
lret
lahf
pop
cltd
cmp
out
mov
ret
and
js
scas
cwtl
jmp
sbb
inc
leave
mov
inc
mov
ret
imul
cld
push
dec
mov
loop
mov
jg
or
sbb
adc
pop
pop
leave
jecxz
xor
mov
xor
jl
and
pop
and
push
out
mov
jecxz
add
xchg
shl
scas
movsb
loope
pop
iret
or
ja
jecxz
loop
popf
shrl
xor
enter
outsl
cwtl
fistps
and
mov
pop
or
fs
out
lock
xor
pop
jle
dec
jne
ds
lret
jb
sbb
out
adc
xchg
rcl
fisttpl
pop
ss
or
sub
movsb
mov
and
inc
addr16
mov
repnz
dec
and
sbb
fists
push
xor
dec
shl
loopne
repz
jnp
mov
cmp
int3
adc
out
lret
mov
scas
repz
sti
cld
inc
mov
sub
fdivl
push
in
test
int3
mov
in
dec
ja
mov
jmp
std
xor
jb
sub
lea
and
or
and
in
or
inc
sbb
lcall
test
cltd
icebp
ljmp
jle
hlt
jmp
jns
les
addr16
repnz
add
and
popa
inc
outsb
or
sub
daa
xor
mov
or
dec
add
imul
push
adc
in
stos
pop
movsl
loope
sbb
cmc
xchg
data16
mov
xor
clc
push
and
dec
test
pusha
adcl
xchg
add
outsb
pop
inc
iret
dec
test
mov
aaa
gs
cmpsl
sbbb
xchg
call
push
arpl
or
xchg
iret
out
ss
lods
pop
dec
pop
inc
scas
jp
mov
jnp
push
sbb
iret
cmp
inc
and
aaa
and
mov
fld
sti
lret
push
push
sub
and
sbb
mov
mov
sub
cli
ljmp
cmp
xor
pop
cld
shrl
add
jle
outsb
fimuls
sub
jno
and
imul
aam
cli
scas
push
jecxz
jns
int3
mov
enter
push
mov
push
push
cld
mov
repnz
cli
or
jmp
cmc
cmp
pop
pop
icebp
mov
mov
pop
pop
add
lret
push
dec
xchg
insl
fwait
hlt
decl
repnz
aas
mov
xor
sub
fstpt
call
mov
dec
sbb
cmpsb
xchg
push
ss
insl
inc
in
push
gs
sub
lea
cmp
cltd
cmp
pop
dec
pop
or
add
inc
aas
dec
mov
add
int3
rcrb
arpl
out
repnz
xor
test
jbe
dec
mov
testl
push
dec
inc
lret
push
jb
sbbl
xor
test
mov
mov
xchg
mov
lahf
sub
mov
rorl
xor
pop
fwait
in
or
or
mov
pop
pop
pusha
or
cld
lcall
add
mov
das
cwtl
lods
adc
and
or
bound
adc
sbb
js
movb
insb
sub
jae
xchg
out
rcrb
ja
pop
jno
in
xor
icebp
pop
pop
sub
js
leave
push
stc
imul
and
dec
mov
xchg
sub
and
rcl
mov
and
repnz
scas
xchg
adcl
xchg
push
and
outsl
dec
pop
add
adc
push
cld
push
dec
fcomp
fs
adc
mov
xor
sub
jg
loope
mov
movsl
xchg
pop
mov
ljmp
fdivrl
out
dec
dec
mov
clc
sub
inc
rclb
or
out
and
mov
xchg
inc
xor
and
cmp
imul
arpl
pop
into
jmp
movsl
pop
cwtl
out
scas
jl
cmp
jnp
rclb
mov
push
das
clc
jmp
std
scas
pop
mov
and
leave
mov
incl
mov
sbb
mov
in
xor
rclb
xchg
add
test
sub
add
in
pusha
cmpsl
vcvtss2si
gs
mov
popa
in
adc
stos
cmp
dec
call
mov
js
fidivl
jb
fildll
in
mov
sbb
push
sbb
aaa
mov
adc
sub
call
jp
scas
pop
testl
cmp
adc
dec
movsl
xchg
pop
add
and
call
mov
mov
sub
push
sbb
and
daa
ljmp
adc
das
cwtl
mov
sub
mov
das
sahf
out
and
or
push
mov
push
pop
or
repnz
fnsave
outsb
fisttpll
les
fcmovnbe
loope
das
xlat
stos
popf
push
roll
ficomps
adc
sub
push
mov
jle
mov
xor
pop
stc
mov
or
or
cli
sbb
lahf
aam
sbb
xlat
pop
shrb
xor
dec
test
pop
mov
mov
std
mov
cmpsb
dec
arpl
cmp
xor
shl
adc
sbb
lods
arpl
scas
or
test
mov
popf
or
pushf
pop
xor
fucomip
mov
test
cli
mov
movl
insl
jns
and
test
and
popf
sbb
rorl
rorb
or
or
pop
mov
addb
aas
in
sbb
js
sub
xchg
inc
and
call
mov
push
sub
testl
sbb
shl
leave
mov
jg
jne
or
push
add
and
adc
mov
int3
outsl
out
in
xchg
repnz
jns
cmc
sbb
movsb
or
push
fisubs
xchg
fwait
daa
pop
jge
cmp
xchg
lcall
les
adc
int
jo
mov
ret
xor
in
or
push
ljmp
leave
cwtl
adc
add
std
and
xchg
add
hlt
das
add
mov
stos
pop
das
dec
mov
mov
sub
imul
inc
push
add
cmp
or
lock
and
mov
push
xor
daa
pop
mov
add
ret
imul
loop
xor
dec
adc
sahf
pop
cmc
mov
push
lock
lock
repz
push
call
cmpsl
jmp
rcrl
je
out
and
cmc
mov
mov
jae
ja
mov
mov
subb
lods
adc
lahf
xchg
movsb
and
pusha
stc
mov
insb
cltd
lods
cs
sbb
movb
mov
cli
lds
dec
push
iret
data16
loop
pop
rol
fidivrs
sti
daa
in
sbb
sbb
fadds
xor
mov
enter
mov
popa
inc
xor
xor
popf
aam
and
xchg
or
add
test
mov
add
enter
push
out
pop
xor
repz
mov
shl
fnstsw
aaa
and
add
mov
into
fldt
dec
sub
lods
cltd
adc
ljmp
inc
in
mov
pop
sub
rcrl
sub
imull
xchg
dec
pop
ret
jl
je
repnz
mov
leave
xor
in
jno
inc
mov
mov
loop
testb
mov
stos
dec
xchg
in
stos
sub
dec
enter
rorl
xchg
and
xor
outsb
mov
push
or
and
fiaddl
lahf
jbe
inc
sub
repnz
sub
in
lret
push
inc
dec
jp
mov
xchg
mov
push
mov
inc
inc
pop
repnz
incb
ret
outsb
inc
out
pop
ljmp
enter
stos
jmp
cmp
xchg
in
mov
push
inc
mov
mov
add
jno
adc
xchg
mov
xchg
pop
cmp
in
fdivrs
jo
imul
out
push
orl
mov
call
mov
adc
push
dec
xor
add
ja
ret
mov
xor
sbb
mov
or
lods
cmp
cmovne
push
fsubs
mov
lds
cmp
stc
mov
stos
pop
aaa
jne
jle
int3
jo
xchg
pop
lret
mov
push
aas
addl
lcall
pop
scas
lcall
aam
adc
or
mov
inc
mov
insl
mov
or
popf
or
mov
cwtl
dec
pusha
mov
cmp
jns
outsb
scas
sub
icebp
loop
sub
sbb
out
es
pop
cmp
mov
mov
in
sub
cmpsb
lret
loopne
nop
aad
int
inc
es
adc
jecxz
out
mov
aas
pop
sub
int
fwait
test
aas
shrl
mov
int
nop
in
fimull
insl
jmp
lret
xchg
rcll
push
pop
out
push
mov
int3
fsubl
dec
add
mov
add
mov
dec
lods
inc
fucompp
fs
icebp
inc
fnsave
or
sbb
mov
pop
scas
adc
xchg
shll
xor
stos
inc
inc
cmp
xchg
sub
mov
packsswb
inc
outsl
into
cs
stos
mov
test
mov
in
mov
adc
inc
and
ret
outsl
nop
imul
cmpsl
stos
out
inc
enter
movsb
scas
fmulp
dec
inc
gs
cwtl
mov
mov
sub
lods
test
cmp
sbb
jb
or
mov
mov
out
lods
mov
and
gs
xlat
ja
push
mov
and
mov
sub
lods
jmp
scas
jmp
jbe
dec
mov
out
repnz
divb
cmpsb
test
lcall
mov
mov
lods
sub
dec
arpl
mov
mov
cmp
cld
xor
add
sub
jae
lea
pusha
sub
sub
rol
xor
cmpsl
sub
mov
mov
sub
ret
or
std
xchg
mov
dec
imulb
popa
xor
ja
mov
ret
cltd
int3
mov
aad
inc
pop
fld1
adcl
popa
add
push
xlat
dec
push
lret
mov
lock
and
fiadds
pusha
xor
sub
mov
test
inc
fisttpll
gs
dec
lret
push
mov
and
xlat
pop
jmp
shrl
cld
pop
push
icebp
jb
insb
mov
dec
dec
shll
lahf
sub
jb
push
stos
adc
cmp
movsl
and
stos
pop
rclb
sub
or
ficomps
addl
pushf
inc
sub
push
out
lock
popa
or
emms
add
pop
jle
mov
push
jg
mov
popf
divb
into
or
sub
add
or
jl
outsb
push
sbbl
fnstcw
cmc
mov
cmp
cmpb
outsb
dec
and
test
sub
repz
sbb
sub
sub
test
push
fnstsw
dec
dec
xor
sub
add
adc
xchg
enter
out
loopne
dec
in
les
cli
test
idiv
push
test
data16
cmp
cld
xor
lea
cmp
mov
jb
sub
pop
fsubs
jns
push
icebp
test
sub
in
jno
insb
xor
sub
scas
push
lock
sbb
cmp
sbb
stos
adc
mov
xor
popa
push
lahf
pop
jg
enter
bndstx
jnp
or
lock
lahf
into
stc
cmpb
lret
rorb
scas
daa
jmp
lret
mov
xor
or
xchg
rcl
cld
jns
adc
out
ret
dec
int
sub
stos
sarl
push
mov
sbb
pop
pop
sti
fldcw
lea
shrb
push
andb
dec
jns
and
mov
add
xchg
push
sbb
jp
call
stos
pmuludq
cmc
cwtl
mov
push
mov
push
mov
push
sbbl
aam
lea
lret
adcl
cmpsb
shll
je
xor
fistpll
jle
cmp
mov
xchg
in
xchg
dec
push
inc
push
mov
sbb
push
lcall
lcall
xor
xlat
fs
jb
adc
ljmp
dec
std
movsl
loop
lods
call
push
pop
sub
mov
jne
sub
inc
imul
xchg
push
jnp
xorb
push
fdivs
lods
rcll
push
shr
sti
shl
push
push
mov
sarb
divb
push
push
ljmp
push
xchg
mov
insb
cmp
mov
add
xor
sbb
je
pop
inc
add
sbbl
repnz
andl
pop
inc
jns
jl
mov
add
arpl
inc
loopne
sub
jecxz
scas
int
nop
idivb
hlt
inc
dec
sbb
imul
mov
mov
sub
stc
or
cld
dec
adc
fwait
sti
pop
fisubs
ja
add
mov
ss
pop
adc
sahf
cmp
add
mov
sahf
fbld
lds
nop
out
daa
jb
xchg
pop
jbe
add
pop
jmp
xchg
icebp
cmp
adc
into
xorl
test
push
pop
cmp
pusha
loop
jbe
fiadds
rcll
sbb
mov
jb
call
jbe
int3
imul
fcomps
add
shll
loope
push
push
pop
cwtl
mov
ficompl
je
insb
dec
push
je
repz
push
xchg
sbb
adc
scas
dec
inc
mov
clc
lds
adc
mov
lret
inc
nop
jb
xlat
xor
jge
fcomps
or
lods
outsb
inc
jbe
insb
and
or
mov
or
stc
lret
xor
leave
add
sbb
ja
fistpll
push
dec
icebp
ret
and
add
insb
mov
inc
xchg
and
mov
shl
cmc
ret
push
lahf
fs
mov
xor
loop
leave
addr16
cmp
arpl
push
mov
imull
ljmp
push
jb
mov
test
test
and
fiaddl
cmp
dec
mov
idivl
cmp
and
push
mov
adc
ret
dec
enter
cld
shr
sbb
fistps
cmpsb
pop
imul
movsl
or
in
pop
lcall
femms
sti
popa
push
xchg
push
js
xchg
lret
sub
xor
stos
and
mov
mov
lods
out
stc
pop
shlb
add
and
fcoms
inc
aas
mov
pop
stos
or
cmpb
sub
push
adc
pop
gs
push
jbe
cmp
lock
stos
popa
outsl
add
add
sarb
or
dec
adcb
jp
and
push
xchg
call
cmp
imul
dec
cmpsl
xor
cmpb
andl
and
mov
repnz
jae
sbb
cmp
sahf
insb
jle
lret
cli
jmp
test
adc
adc
idivb
loop
iret
dec
jo
sbb
jae
decb
inc
mov
sub
push
pop
sar
jae
repz
gs
mov
js
add
lret
xor
lret
negb
imul
xor
mov
movsb
movsl
xchg
shrl
cmp
lcall
mov
push
mov
pop
lahf
jno
pop
jle
inc
daa
sbb
xchg
adc
in
sbb
fnsave
enter
push
dec
sub
loop
or
scas
hlt
into
xlat
mov
in
gs
mov
lret
mov
jp
xchg
mov
call
je
stc
int3
or
and
add
icebp
dec
pop
fldenv
loope
inc
and
pop
test
fsubs
out
mov
jns
sbb
fidivrl
xor
and
adc
jo
jmp
gs
xchg
imul
xor
sbb
xor
push
push
shll
cwtl
repnz
or
in
mov
jbe
mov
lea
arpl
dec
in
inc
mov
loopne
mov
push
out
pop
or
sbb
in
leave
xchg
jge
addb
subb
jno
cwtl
out
or
lret
int
int3
dec
mov
push
lods
fmuls
int3
sub
cld
xor
sbb
andnps
or
inc
and
in
int3
mov
adc
in
fcoml
ljmp
pop
negb
iret
push
sbb
jmp
xlat
lahf
repnz
inc
push
mov
filds
enter
jg
mov
hlt
jmp
and
push
or
loope
adc
ljmp
test
mov
cmp
in
push
leave
test
pop
and
or
aaa
pushf
lds
mov
test
dec
in
mov
mov
jbe
iret
lock
push
aad
adc
das
xor
enter
sbb
loope
dec
pop
sub
adcb
push
mov
js
aas
jecxz
gs
cmpsl
sarb
push
shrb
xchg
fistpll
xlat
push
pop
aad
in
add
pop
ds
icebp
cmpsb
mov
jmp
inc
nop
hlt
push
push
dec
pushf
push
ss
movsb
stos
out
mov
js
lock
cmp
lods
sub
jg
jb
jnp
xchg
ja
scas
rcrl
sub
lea
addr16
testb
shrb
addr16
sarl
ljmp
push
and
scas
scas
sub
scas
xor
push
adc
das
xchg
adc
add
fcoms
sbb
dec
sti
aaa
sbb
jae
imul
ret
ss
repnz
mov
bound
out
fcoms
enter
push
xor
xchg
loop
jp
movsl
sub
and
sbb
push
xor
cmp
mov
movsb
enter
in
mov
test
xor
aad
cmp
loop
fisubs
mov
mov
jb
inc
sub
inc
neg
lret
ds
insl
call
mov
push
xchg
ss
int3
mov
cmp
nop
jmp
cli
or
pop
mov
pusha
aaa
les
or
aas
xchg
andl
out
push
pop
xor
mov
lock
jae
pop
mov
jb
test
ljmp
pop
in
fisttps
fcomps
mov
hlt
push
xchg
xchg
or
inc
pop
dec
jo
stos
insl
pop
shll
je
nop
cmp
aaa
repnz
pusha
bound
adc
mov
inc
pop
scas
movsb
or
mov
xchg
arpl
gs
insl
mov
sub
call
xor
int3
push
enter
cs
fsubrs
f2xm1
cmc
sbb
xchg
rcrl
sbb
inc
aas
icebp
adc
imull
push
jmp
out
leave
insb
jae
icebp
or
fisubs
xchg
jno
sub
scas
mov
aas
daa
shlb
pop
inc
pavgw
movsb
jbe,pt
inc
in
scas
fmull
andps
sbb
lea
mov
adc
out
and
and
push
in
add
xchg
addr16
nop
cmpb
call
decl
imul
pop
push
loop
inc
addr16
into
or
inc
pushf
sbb
lock
lea
outsb
mov
xchg
dec
sbb
sub
sahf
stos
push
push
dec
inc
aas
stos
xchg
lret
jl
jmp
mov
jge
mov
outsb
push
or
sub
int3
fldcw
mov
cwtl
idivb
xor
clc
je
dec
ljmp
aad
sbb
jb
cmpsb
and
mov
mov
pop
xor
shr
inc
movsb
pop
cmc
fsubrs
push
insb
jo
adc
lods
hlt
and
inc
insl
pop
cmpsb
lret
cmpb
pop
jne
test
sbbb
jp
loopne
pop
test
imul
ds
mov
loopne
adc
add
dec
jle
mov
imul
test
pop
sbb
jecxz
sub
call
rorb
in
addr16
pop
or
les
lahf
mov
or
pop
jg
bound
cmp
lods
sbb
icebp
mov
push
push
push
cmp
pushf
aaa
xchg
mov
inc
stc
mov
inc
insl
or
mov
sbb
add
fs
xchg
hlt
lret
xchg
lret
rol
mov
or
fstl
or
mov
loope
cmp
hlt
ja
inc
jns
test
mov
in
jmp
xchg
xchg
fists
fists
test
mov
fstps
out
mov
push
inc
inc
mov
jbe
call
pop
xor
in
out
aaa
loope
xchg
jae
adc
push
jo
aaa
cmc
mov
sub
xor
adc
icebp
adc
inc
shlb
push
mov
jle
jmp
mov
inc
sti
sub
into
jecxz
xchg
jge
sub
decb
call
ret
sub
ret
hlt
xor
sub
dec
stc
imul
sahf
idiv
pop
mov
mov
jle
mov
les
lds
fimull
bound
call
add
xchg
adc
insb
pop
dec
inc
dec
xchg
xchg
stos
push
movsb
les
lret
test
xchg
pop
insl
sub
xchg
sbb
mov
ja
lcall
rclb
jmp
cmp
aaa
jmp
adc
cmp
pusha
push
mov
jbe
mov
iret
jae
test
jle
loope
pop
xor
cmp
imul
cli
mov
cltd
stc
fidivl
in
and
rol
push
push
dec
cmpsb
cmpsl
xchg
jne
sbb
pop
dec
ret
stos
push
jg
mov
imul
sub
push
loope
js
ret
and
insb
ja
and
es
mov
xor
out
mov
lcall
bswap
or
cwtl
push
pop
shll
cmc
insb
idivl
test
cmc
cmp
bsr
lods
out
jae
pop
lcall
popa
pop
imul
mov
cmp
or
fisubrs
jp
pop
cmp
pop
or
or
add
lock
dec
mov
hlt
test
push
inc
dec
xor
sub
jge
stos
inc
cmpsb
mov
mov
xor
xchg
lea
hlt
pop
xlat
scas
into
outsl
cmpsb
push
adcl
pop
imul
lea
stos
and
lods
ljmp
push
andl
out
jmp
lock
mov
loopne
into
or
cmp
mov
icebp
ror
movhps
es
mov
and
sbb
sub
stc
mov
divb
data16
xchg
lods
int
mov
ds
xlat
push
cmp
mov
clc
cmpsb
mov
loope
lret
lods
test
ss
jo
test
mov
movsb
xchg
mov
int
add
ret
lahf
pop
mov
push
mov
cmpsl
pusha
mov
cld
dec
stos
jle
mov
push
stos
test
push
cmc
dec
inc
pushf
add
and
mull
push
fsubl
js
sub
push
je
lret
jmp
in
inc
mov
mov
fcmovnb
subb
pop
sbb
scas
insl
ficomps
and
leave
jns
mov
imul
bound
or
pop
xlat
shll
shl
aad
inc
xlat
add
push
cltd
dec
lock
push
std
ud0
push
or
aam
addr16
mov
stos
and
enter
pushf
push
jp
cmp
mov
add
xlat
ret
scas
xchg
mov
push
movb
rolb
bnd
adc
adcb
jl
lea
call
mov
in
xlat
lahf
cs
stos
xchg
fidivl
mov
rcrl
mov
adc
mov
mov
out
xor
stos
cmp
inc
xchg
fiadds
out
repz
pop
into
iret
mov
aas
pop
dec
mov
cmp
int
in
repz
cmp
stc
aad
cli
or
ja
and
mov
fs
pop
inc
imul
and
dec
and
sbb
aam
js
and
xor
sbb
xchg
in
add
inc
mov
rclb
push
cmp
lahf
dec
rcl
and
and
mov
lahf
sti
push
push
sub
dec
mov
shl
cmp
dec
pop
push
jae
inc
sbb
nop
iret
outsl
cmp
fimull
jecxz
call
sub
inc
dec
cmp
les
cli
cmp
cs
mov
imul
stos
clc
and
cs
sbb
bound
repz
jl
jp
gs
ds
repnz
or
xchg
mov
vdivss
pop
dec
dec
add
in
sbb
pop
nop
and
clc
cwtl
imul
ficomps
mov
adc
stos
and
out
or
mov
dec
push
mov
push
fbld
shlb
movsb
js
sub
popf
lahf
fistps
inc
stos
adc
lcall
pusha
ds
adcb
dec
inc
fiadds
mov
xor
faddl
jecxz
pop
pop
scas
dec
nop
adc
and
add
aad
loop
cwtl
jae
pushf
movsl
stc
mov
shlb
addr16
stos
jmp
arpl
sub
cs
inc
push
xchg
mov
aas
das
xor
call
std
lods
scas
dec
scas
dec
sbb
mov
in
adc
add
dec
sub
add
jle
lea
push
nop
les
enter
stc
mov
sbb
jl
mov
fistl
int3
imul
imul
or
xor
stos
pop
sbb
dec
mov
rcrl
cs
add
repnz
and
xor
xchg
fs
movsl
fdivl
fsubrl
xchg
push
call
pop
add
leave
enter
incl
mov
fs
lret
popa
ret
sub
cmp
pop
mov
lea
icebp
int
push
lock
gs
mov
xlat
or
hlt
fnsave
lahf
add
ljmp
std
pop
dec
mov
jne
inc
mov
add
adc
imul
adc
popf
jns
pop
into
mov
pop
jb
aaa
movsl
aaa
cmp
jp
cmp
sbb
mov
je
mov
je
or
or
jg
lret
mov
pop
iret
or
push
mov
lcall
add
dec
xor
cmpsb
xchg
dec
lds
push
dec
stos
and
add
loope
xorl
pop
fldcw
cmp
in
xor
inc
into
inc
clc
int3
and
and
addl
pop
or
push
mov
mov
add
mov
mov
jno
mov
shll
mov
int
add
jno
fistps
sti
rclb
xlat
inc
std
dec
test
pop
inc
inc
mov
sbb
push
hlt
addr16
add
and
insl
imul
lret
iret
rcl
push
dec
lock
pop
sub
call
inc
pop
popa
test
and
and
pop
into
adc
sbb
sub
and
and
xorl
test
inc
insb
mov
mov
enter
adc
out
movsb
push
sahf
add
jmp
mov
movsb
adc
imul
or
loopne
aaa
int
movsl
lods
or
cmc
xor
out
dec
push
jp
rcl
mov
and
pop
or
mov
adc
in
sbb
loopne
jnp
lods
or
outsb
loop
push
jbe
and
les
mov
mov
jecxz
iret
clc
add
or
push
inc
cld
les
pushf
loop
ljmp
xchg
xlat
ret
pop
inc
jbe
jp
ret
mov
repz
dec
bound
ret
fisubs
cs
jge
js
jne
std
push
lods
cmpsl
lock
jmp
loope
in
mov
cmc
mov
into
push
jnp
inc
xor
push
clc
jbe
jmp
sub
dec
xorl
movsb
and
pusha
gs
imul
xchg
notb
sbb
dec
lods
lcall
sbb
sub
lds
inc
add
dec
test
cmp
sbb
xchg
mov
loope
cs
imul
mov
rorb
mov
loop
daa
dec
lret
push
inc
cmc
jp
or
add
out
les
nop
mov
loopne
inc
mov
imul
lods
cld
insb
mov
xor
pushf
or
test
cmp
movsb
xchg
mov
mov
xor
jno
xor
repnz
pop
jp
push
sub
dec
cs
stos
rcll
int
stos
pop
cmp
aas
lea
movl
outsb
sarl
loop
mov
std
pop
xor
sub
int
jnp
addr16
sub
insb
jmp
outsl
jmp
ret
shrb
sbb
testb
aam
ja
out
cltd
test
mov
pusha
sbb
loopne
jnp
in
rolb
or
lods
cmp
leave
sub
out
not
pop
mov
sub
push
aam
aam
rcrl
xchg
jmp
mov
shrb
mov
mov
add
or
cwtl
jb
mov
and
add
pop
insb
xchg
out
cmp
rcrl
cmp
adc
outsl
aam
jbe
inc
out
mov
adcb
cmp
cli
xchg
mov
mov
pusha
imul
xchg
mov
ss
test
out
in
hlt
push
pop
popl
push
cmp
je
adcl
call
repnz
lret
dec
push
imul
cmc
aas
adc
pop
add
mov
adc
adc
stos
push
dec
push
out
mov
xchg
mov
inc
ficompl
mov
nop
loopne
fmul
outsb
mov
scas
lea
aam
sub
push
loopne
and
clc
jns
jle
pop
mov
mov
jo
mov
xchg
mov
mov
outsb
jmp
fidivs
out
fbld
sarl
lods
rcrl
shlb
pop
test
call
sbbl
cmp
aam
faddl
clc
enter
arpl
and
inc
pop
add
sbb
sbb
add
mov
adc
dec
mov
in
xor
inc
ror
dec
and
and
out
mov
inc
or
add
insb
dec
imul
adc
add
lahf
add
in
sti
jp
push
and
sbb
push
and
fdivrl
sti
pop
fisttpl
push
ret
push
adc
dec
aas
scas
mov
ds
roll
aad
ror
mov
pop
jno
add
inc
xchg
mov
aam
cltd
mov
out
icebp
dec
orl
test
mov
sub
nop
inc
inc
dec
push
xchg
push
and
js
or
daa
pop
mov
mov
jno
push
xchg
xlat
cli
andb
mov
aad
inc
es
fnsave
add
sub
sbb
and
push
into
jecxz
fcoms
ret
or
cmpsl
in
fimuls
push
and
lahf
xchg
cwtl
jo
loope
and
ja
or
or
mov
cmp
shrl
sub
cwtl
rolb
xchg
sbb
insl
cmp
popa
mov
pop
fcomps
pop
shrb
mov
adc
cwtl
xchg
fmull
fwait
imul
ja
jmp
or
push
and
jp
in
mov
shrb
xor
mov
dec
fcmovne
add
dec
js
xor
pop
shll
into
mov
sub
cmpsl
aam
mov
loopne
adc
or
cmp
and
jns
and
xlat
and
mov
push
adc
mov
js
xchg
adc
jl
out
cmc
int
cld
lcall
adc
daa
outsl
cltd
xchg
lock
push
out
dec
lahf
and
add
fldt
sbb
mov
adc
ret
ret
pop
pop
div
mov
fildl
rcl
or
dec
stc
jnp
pop
mov
mov
pop
or
fmull
xchg
mov
pop
frstor
mov
out
jae
xchg
inc
xchg
insl
in
add
inc
sub
push
std
fstpl
je
js
mov
xor
fadds
adc
lea
out
or
push
xchg
mov
bound
jbe
sub
mov
xchg
jg
push
jl
jno
or
sub
sahf
inc
lods
ljmp
dec
adc
lds
inc
pop
test
stos
cmp
mov
xor
sub
popl
jo
xor
xchg
ljmp
aam
jb
or
fisubs
icebp
es
and
int
sbb
test
loope
adcl
shll
dec
jae
xor
ljmp
push
cmp
es
test
pop
sub
pop
dec
movsb
sbb
pop
or
flds
mov
stos
dec
mov
jl
aad
repnz
sbb
jo
icebp
jle
mov
inc
aaa
pop
xor
xor
jae
adcb
push
xchg
pop
pop
aas
cmp
in
lods
mov
cmp
xor
addr16
js
fbstp
or
loop
in
sub
ret
push
loopne
jp
xchg
sarb
mov
xchg
adc
jnp
das
stos
dec
sub
movsl
jg
pop
push
les
xor
in
lds
xchg
clc
add
pop
pop
stos
pop
neg
push
loopne
pop
sub
stos
mov
xchg
push
mov
lods
std
mov
sub
in
insb
push
fcomi
js
cli
and
mov
int3
test
jns
mov
and
js
jb
dec
add
or
stos
scas
push
push
mov
loope
inc
scas
adc
inc
insb
hlt
std
rcr
daa
and
jp
stc
push
std
sbb
cmp
test
fwait
xchg
pushf
insb
push
call
rclb
and
lock
push
jns
test
imul
inc
pusha
dec
aam
in
imull
orb
add
cmp
cs
out
je
push
sub
sti
push
push
es
mov
sbb
add
dec
js
aad
adc
adc
imul
and
mov
sub
sarb
movsl
or
mov
sub
push
push
and
insb
inc
in
sub
outsb
sahf
imul
ret
xchg
pop
scas
ja
lds
push
dec
adc
add
insl
sti
sub
add
setle
and
aad
mov
xchg
jmp
bound
movsl
or
addr16
mov
push
xchg
leave
dec
inc
shl
fs
lock
out
out
xchg
jecxz
icebp
inc
jmp
push
mov
mov
ret
in
cmc
xlat
nop
lret
add
ret
inc
push
bound
leave
mov
ret
inc
mov
sub
fcoms
adc
xchg
cmc
je
fwait
aam
mov
xchg
push
mov
pop
or
scas
mov
add
out
push
add
loopne
sbb
cmpsb
jnp
dec
adc
jns
inc
xor
push
popa
leave
dec
and
pop
inc
notl
jns
test
mov
lret
int3
cmpsl
push
pop
sub
movsb
mov
jbe
test
pop
out
idivl
stos
adc
cmp
loope
inc
aaa
std
inc
adc
mov
xchg
in
cmp
pop
into
xor
movb
xchg
arpl
jp
xor
add
xchg
pop
cmp
stc
sbb
lds
pop
cmp
adcb
sub
jge
je
mov
cltd
push
ss
loopne
jno
int
aas
repnz
mov
rcl
xchg
orb
mov
arpl
fs
pop
scas
jb
popl
aad
pushl
inc
stos
movsl
ret
pop
sbb
push
shlb
out
xchg
xchg
test
push
dec
adc
add
push
xor
add
add
ror
in
mov
sub
and
mov
test
scas
adc
scas
sbb
fsubl
cs
in
orl
mov
mov
pop
xor
int
add
cmpsb
xlat
sbb
repz
and
imul
bound
or
pushf
call
jno
jp,pn
jb
addl
add
pop
mov
movsl
orb
jl
sbb
sub
pop
lock
cld
ds
inc
enter
jecxz
xchg
sbb
jae
icebp
popf
test
in
addl
loop
pop
xchg
adc
jecxz
and
dec
movsl
xchg
cmp
push
pop
out
sarl
mov
sbb
adc
and
pop
rorb
jmp
jp
dec
out
mov
cmpsl
push
and
pop
scas
cmpsb
fs
in
idivl
cmp
lock
and
mov
test
dec
cmp
push
and
movsb
jo
lcall
movsl
std
cltd
daa
call
loop
mov
sbb
push
loopne
sub
mov
xchg
cwtl
sbb
mov
dec
mov
pop
sbb
sbb
sbb
popf
ret
cmpsl
add
mov
jb
inc
mov
adc
mov
jp
dec
adc
ja
mov
fstpl
loopne
int3
loopew
call
out
mov
mov
in
repz
cmpsb
push
jno
add
mov
mov
sub
ret
data16
cmpsl
insw
cmp
loop
fldcw
rcll
mov
insb
lret
sub
mov
mov
scas
or
pushf
cmp
mov
cmpsl
sbb
sub
call
sbb
xchg
jnp
pop
aad
jae
mov
lahf
jl
jbe
rcrl
mov
inc
xor
adc
add
push
and
popf
movsl
popf
add
loopne
es
sbb
fsubrl
dec
mov
je
push
adc
mov
je
push
mov
in
push
cltd
lods
jg
cmpsl
pushf
movsb
loopne,pn
or
aad
andb
adc
js
xlat
addr16
andb
jo
dec
add
mov
add
and
xchg
jl
mov
sub
loop
leave
cld
mov
xorb
and
lock
pop
shll
mov
loope
xor
jae
mov
push
xchg
mov
rorb
cli
ret
and
sbb
rolb
or
je
int3
test
inc
and
xchg
ljmp
fsts
push
push
mov
out
jo
mov
cmpsb
les
lret
and
testb
fcmovb
jmp
sub
pop
dec
imul
inc
cs
pusha
cld
int
enter
clc
faddl
add
jl
cmpxchg
pop
cmp
mov
std
fildll
xchg
sbb
cmpb
aaa
pop
in
xor
fisubrs
movsb
push
gs
test
jbe
ficoml
mov
rclb
cli
mov
sbb
leave
clc
jne
mov
lods
xor
add
push
jcxz
cmp
sbb
pop
jp
out
mov
pop
loopne
push
cld
icebp
mov
inc
mov
mov
out
mov
sub
pop
jo
loop
jge
popa
lcall
aam
jl
pop
call
test
cld
fsubs
push
addr16
imul
cmp
out
mov
push
int3
inc
rorl
or
out
popf
ret
cltd
and
sub
pop
push
rcrl
xor
dec
rcl
mov
jno
imul
fcmovb
scas
or
stos
jg
sti
push
jge
xor
pop
push
add
sub
mov
mov
mov
cmpsb
fcmovb
lret
lods
sahf
fdivrs
clc
in
mov
in
repnz
or
negb
push
dec
sub
repz
pop
std
jae
jns
test
add
or
cmp
pop
lcall
cmpsl
push
pop
cmpsl
sbb
jle
jge
add
jge
fbld
inc
aam
add
aaa
ljmp
jmp
addr16
test
leave
ljmp
decl
test
jae
jae
clc
lock
push
mov
xchg
sub
cmp
dec
mov
js
pop
push
jb
pop
rorb
push
pop
pop
ffreep
lock
pushf
into
lahf
and
jge
inc
outsl
cmc
sbb
xchg
push
call
out
addr16
aaa
jecxz
mov
enter
mov
pop
jns
mov
xchg
pop
xchg
cli
lds
in
jge
fsubrs
fimuls
pop
mov
repnz
cmpsb
jo
adc
scas
pushl
sub
mov
sub
sbb
and
insl
adc
cli
rcrl
ljmp
fidivrl
mov
jp
orl
nop
mov
out
mov
insb
cmp
gs
sbb
js
xor
xor
test
into
out
jg
in
mov
pop
mov
inc
push
hlt
ljmp
pop
mov
cmp
adc
jbe
sub
add
push
scas
and
mov
mov
adc
dec
dec
add
lods
jp
shrb
mov
hlt
xor
jb
ret
cmp
xchg
or
mov
pusha
add
std
push
pop
in
stc
sub
aaa
dec
or
fiaddl
scas
inc
and
orl
jge
ss
jns
jge,pn
mov
jb
lea
push
sbb
cmp
push
rcrb
fsts
jecxz
push
scas
sbb
xor
or
int
test
fdivs
sub
addr16
outsl
out
sub
ds
lret
jns
or
pop
dec
icebp
jl
jne
leave
mov
push
cmp
imul
jg
cs
mov
sbb
mov
gs
sub
dec
mov
fs
fnstsw
mov
dec
pop
lret
daa
push
xchg
jmp
in
pop
mov
popa
push
mov
cmc
lods
push
dec
dec
out
xor
sbb
jno
rolb
test
mov
mov
cmp
mov
xchg
add
jge
add
notl
out
jmp
hlt
pop
addb
mov
mov
div
sbb
mov
ljmp
inc
fnstsw
xor
lods
pusha
test
or
cmpsb
ds
jmp
cmp
lea
jno
mov
adc
mov
popa
inc
in
pop
pop
mov
arpl
out
scas
ror
sti
cmpsl
ljmp
add
mov
nop
lret
orl
cwtl
movsl
lret
shll
insb
shll
sub
rorb
jbe
or
rorb
cs
push
arpl
push
inc
lds
xlat
xchg
mov
dec
inc
ret
cwtl
enter
xchg
lds
loope
jae
dec
mov
sbb
fisubs
dec
xchg
cltd
mov
test
mov
addr16
mov
or
mov
nop
dec
pop
pop
aad
les
fcmovne
push
gs
xchg
xchg
sbb
fcomps
fiaddl
mov
jecxz
mov
sbb
gs
dec
add
or
mov
sub
mov
add
scas
mov
loope
pusha
sahf
sbb
sti
or
test
jb
out
ret
fidivs
ja
adc
pop
jbe
xchg
fisubrl
test
sbb
es
xor
inc
call
inc
add
test
or
pop
incl
xlat
inc
adc
aam
lock
push
push
out
xchg
adc
xlat
xchg
leave
adc
xor
subb
cs
cmpsl
cmc
movsb
adc
fstpt
cmp
mov
inc
pop
pop
inc
push
cmp
fwait
out
cs
insl
sub
mov
cmpsl
dec
push
in
xor
pushf
nop
xorb
cmp
xor
mov
int3
adc
movb
sarl
gs
dec
outsb
ret
clc
jae
dec
sbb
movsb
push
push
mov
shr
dec
in
loopne
enter
nop
push
or
and
stos
cmp
adc
decb
das
mov
mov
add
pop
or
add
xchg
test
xor
dec
repnz
push
aaa
mov
mov
icebp
jge
dec
sub
dec
cmp
idivb
sbbb
push
xorl
or
popf
sarl
dec
sahf
push
andb
clc
out
std
fldt
jle
fistpll
sbb
mov
pop
mov
xor
xchg
dec
mov
in
sub
push
inc
notl
xchg
add
dec
mov
push
or
in
iret
dec
inc
fidivl
adc
scas
test
pop
pop
pop
add
imul
lret
mov
dec
push
lea
sub
jo
push
jp
hlt
mov
outsl
xchg
mov
adc
xor
into
pop
frstor
jnp
stos
xchg
stc
cmc
in
aas
cmpsb
sbb
test
mov
xchg
pop
enter
adc
sbb
fxch
cld
cmpsl
jl
pusha
cmp
sbb
xlat
inc
ss
and
cmpsb
xor
jno
jg
mov
mov
subb
xchg
and
aam
addr16
inc
pop
xchg
out
or
fisubrl
jl
mov
cli
sbb
cmp
mov
dec
cmc
roll
mov
inc
cmp
xchg
pushf
sub
sbb
fisttps
mov
cmp
icebp
fs
orb
into
cmp
xor
insb
repz
xchg
sbb
adc
xchg
add
adc
jp
dec
cltd
push
dec
ds
pushf
xchg
lcall
mov
pop
and
bound
in
pop
push
mov
mov
jns
pop
loope
aad
add
mov
cmp
test
xorl
subl
test
pop
or
repz
or
ds
lcall
add
daa
ret
xor
inc
cmp
popa
aaa
adc
mov
repnz
xchg
mov
cmp
cmp
sub
adc
or
push
xor
mov
push
dec
pop
cltd
jns
push
pop
or
dec
inc
pop
ja
sbb
sub
jnp
addl
jns
xor
mov
lods
inc
adc
adc
inc
lds
fdiv
adcl
fcoml
cmp
cmp
ret
inc
andl
mov
movsl
ds
cmpsl
mov
fstpl
dec
pop
jnp
push
lret
and
mov
push
xchg
pop
xchg
popf
in
mov
mov
adc
dec
sbb
sbb
mov
stc
mov
mov
and
xor
sbb
xor
out
jge
movsl
mov
sbb
push
loope
push
mov
je
lods
xchg
dec
mov
stos
aam
clc
aas
xchg
in
pop
push
push
dec
inc
call
mov
dec
mov
cmpsl
add
inc
push
loope
lock
nop
jmp
sub
pop
pop
fst
cmp
loope
pop
addr16
out
pop
cmp
jbe
arpl
out
dec
and
stos
inc
sbb
loop
fs
jno
popf
jb
popa
fsubrp
xchg
xor
push
cld
leave
push
aad
ljmp
leave
bound
add
lcall
push
shll
test
mov
lods
out
or
jg
dec
and
lods
mov
and
ret
ret
imul
std
and
add
cmpsl
lods
ss
push
sub
sub
inc
or
stos
shll
xchg
sbb
jl
jmp
cld
ret
xchg
cmp
aas
and
jnp
inc
out
jae
mov
mov
push
les
inc
cmpsl
loop
add
lret
jg
cs
and
jecxz
mov
dec
push
shlb
xchg
jb
lahf
sub
movswl
test
pop
pusha
xchg
pop
lods
les
jecxz
hlt
add
outsl
or
mov
xor
mov
sahf
push
js
adc
and
xchg
mov
mov
mov
cmpsb
cmpsl
loopne
push
out
cmp
mov
aaa
loop
iret
adc
pop
xchg
xor
jg
nop
lret
dec
movsb
rcr
jp
push
int3
jb
call
mov
and
sub
dec
dec
xor
adc
sbb
adc
or
paddb
cwtl
lret
sbb
push
mov
icebp
push
xorl
sahf
lods
mov
gs
shrl
xchg
in
aad
push
sub
imul
push
pop
outsl
ds
push
sbb
les
jo
mov
rolb
popf
fnstsw
rclb
sbb
cmpsl
mov
cmp
mov
inc
pusha
insb
mov
fsubl
pushf
jg
xor
push
mov
pop
roll
icebp
fdivrs
push
arpl
sbb
call
add
ret
mov
fsubp
addr16
sbbl
mull
not
fimuls
push
cld
sti
or
pop
mov
jp
xchg
test
cmpsb
sub
xorb
int
aaa
jbe
popw
jl
test
or
inc
int3
cmp
inc
dec
popa
dec
xor
shlb
adc
or
popa
push
mov
xchg
mov
test
sbb
xor
inc
push
push
xor
push
inc
xor
mov
sbb
sub
add
push
inc
fs
or
mov
js
outsl
inc
cmpsl
fisubrl
les
adc
push
and
jmp
fiaddl
sbb
test
jg
mov
jns
insl
jnp
not
dec
in
mov
dec
pop
sbb
pushf
cli
add
es
in
push
addr16
fistpl
loopne
hlt
jne
push
in
loopne
out
mov
test
xchg
shl
dec
or
hlt
loope
xchg
push
and
dec
lock
mov
or
out
and
and
arpl
fstpl
push
or
outsb
sbb
jge
push
jae
loop
mov
ret
mov
rcrb
fstps
mov
ror
and
sbb
gs
lret
dec
lea
cmc
mov
dec
xchg
repz
dec
cmp
jne
adc
cmc
xchg
pop
push
fnop
and
mov
sub
les
mov
sub
xor
xchg
sub
out
pop
scas
mov
push
and
ffree
cmp
mov
rcr
mov
adc
lret
movsl
sbb
bound
cs
and
out
js
adc
lret
sti
jge
lods
xchg
lds
mov
int
add
loopne
mov
andl
adc
ja
pop
jno
jns
jbe
dec
jne
mov
xchg
push
push
pop
xchg
inc
mov
mov
scas
jmp
jg
add
je
and
arpl
lods
out
cltd
aas
push
xchg
or
push
sbb
bound
js
mov
lret
stos
sbb
sbb
sti
push
fstpl
sbb
pop
ss
mov
aam
pushf
cmpsl
fisttps
icebp
ret
enter
inc
rclb
rorb
xchg
movsb
jle
mov
ret
adc
imul
sub
imul
mov
or
loopne
fiadds
mov
mov
mov
xchg
pop
test
addr16
pop
dec
sahf
lahf
xchg
push
xor
int
mov
push
sahf
je
movsb
stos
cld
imul
rolb
cmc
sarl
aam
sub
repnz
sti
push
pushf
pop
pop
xchg
ja
xor
xor
addl
xor
mov
sbb
add
cmp
dec
push
cld
incb
mov
adc
cld
pop
inc
fxtract
cmp
insb
rorl
push
push
xchg
xchg
dec
push
dec
xor
inc
pop
xchg
movsb
dec
icebp
mov
andb
aam
inc
scas
sbb
sbb
ret
xor
lret
dec
sub
cmp
jno
out
nop
notb
sub
nop
push
sub
shll
stos
mov
cmp
mov
mov
or
mov
pop
hlt
aad
subb
loop
dec
loopne
pop
push
stos
stos
loop
leave
sub
adc
push
mov
cmp
loope
aas
push
dec
fisttpll
push
mov
lock
lret
loop
movsl
jl
stc
fucomp
insl
clc
and
adcl
cvttps2pi
aad
mov
cmp
dec
cs
sub
aas
jle
stc
shl
and
shrl
cmc
push
adc
ljmp
mov
test
lahf
movsb
ret
gs
fwait
movsb
ljmp
mov
scas
lds
or
inc
loopne
cmp
adc
testl
icebp
mov
nop
sub
pop
and
inc
mov
test
add
sub
pop
mov
sbb
int3
sbb
inc
cmp
leave
sub
enter
xor
add
jae
sarb
xor
sbb
dec
adc
xor
movl
jge
cltd
xchg
movsb
adc
jbe
hlt
inc
scas
outsl
inc
cmp
adc
push
jmp
pop
nop
orl
push
sahf
ja
clc
mov
test
dec
jge
cmp
ret
mov
cltd
pop
pop
push
sbb
add
lods
shrl
pop
mov
or
mov
sbb
pop
mov
adc
xor
push
les
out
mov
aam
shll
iret
jg
lahf
xchg
sbb
aaa
lcall
movb
xor
dec
fs
add
dec
test
jnp
mov
into
int3
cmp
sbb
ret
or
imul
pusha
enter
jle
aam
pop
cli
jo
push
out
xchg
adc
add
scas
lds
dec
imul
imul
int
or
mov
mov
leave
into
je
pop
clc
std
scas
mov
jnp
mov
test
leave
js
cld
js
sbb
sbb
mov
stc
pushf
popf
loopne
ret
inc
jmp
loopne
xchg
and
loop
adc
pop
loopne
out
push
mov
test
push
mov
xorl
push
push
imull
pop
mov
mov
fcmove
pop
mov
gs
jp
push
adc
xchg
cltd
pop
mov
ret
jb
shlb
cmp
xchg
add
xchg
mov
and
jne
addr16
movsl
or
push
fcmovb
adc
iret
mov
push
xor
out
sub
adc
mov
pop
imul
adc
mov
push
add
mov
lahf
push
dec
rcr
dec
repz
dec
push
aad
pop
xor
xchg
or
jecxz
fsubs
jl
pop
mov
pop
and
xlat
mov
cmp
add
inc
int3
pop
cmpsb
sbb
or
xor
jo
inc
or
insl
arpl
mov
push
mov
lods
sbb
jg
in
jno
sbb
jle
cmp
clc
jns
dec
mov
mov
dec
push
aad
scas
xor
adc
jg
ficoml
in
jmp
ret
repz
enter
mov
jge
inc
cwtl
sbb
sar
inc
test
mov
lret
out
push
les
pop
jp
out
ja
jbe
and
aam
scas
data16
and
adc
popf
faddl
mov
movsl
loope
mov
jns,pt
ja
xchg
pop
sub
aaa
mov
pop
push
aaa
mov
fsubr
jbe
fsubl
dec
add
mov
push
cmp
mov
mov
jmp
rcl
inc
fstpl
push
mov
in
push
dec
loopne
adcl
xchg
pop
out
lret
sub
sbb
scas
mov
repnz
fisttpl
cmp
cmc
daa
xor
outsl
dec
mov
rcrb
mov
and
das
pusha
idiv
xor
dec
xor
push
int
jecxz
mov
cwtl
xor
push
call
lds
or
in
add
jg
push
lock
xchg
mov
xor
and
dec
xchg
fildll
stos
cmc
pop
in
mov
shrl
jb
xorb
pop
loope
cld
daa
sbb
dec
dec
insb
xor
mov
scas
push
mov
push
addr16
xchg
mov
scas
fwait
mov
fisttpll
sub
push
mov
cltd
jp
ja
jp
adc
mov
mov
and
sub
out
push
cmove
inc
fcomps
lret
iret
lds
into
outsb
mulb
sbb
inc
xchg
xchg
insl
mov
jne
push
sbb
xor
mov
bt
sub
into
mov
loopne
pop
adc
lcall
loope
mov
leave
orl
test
sbb
sbb
dec
xlat
add
shrl
jp
iret
push
push
lock
ljmp
mov
sahf
ljmp
cmc
bound
add
inc
xchg
xor
dec
dec
aam
cli
movsb
out
or
xchg
jecxz
addr16
mov
clc
and
and
sbb
movsl
out
ret
rolb
testl
xchg
xor
and
adc
xchg
xchg
nop
andb
mov
xchg
rorb
fcomps
push
insl
inc
rcrb
inc
lcall
pop
scas
ljmp
and
cmpsb
fidivs
es
sub
scas
ljmp
inc
mov
adc
imul
iret
mov
clc
or
sbb
bound
cli
sbb
aaa
push
outsl
and
pop
xor
mov
pop
dec
loopne
aaa
sarb
inc
faddl
lcall
xchg
jno
dec
and
xor
add
js
lret
fiaddl
stos
bound
cmp
inc
jmp
and
lret
inc
xor
and
cs
push
sbb
test
mov
cli
mov
cld
add
push
mov
lcall
nop
js
mulb
test
inc
sub
push
xor
inc
lock
shrl
or
inc
adc
adc
adc
jecxz
pop
aad
sbb
dec
xor
test
or
mov
pop
lahf
or
push
jnp
into
roll
push
cmp
mov
ds
adc
dec
addl
test
arpl
mov
xchg
faddl
cmpsb
lods
aam
jmp
inc
mov
xchg
or
push
divb
xor
mov
add
ja
je
mov
fwait
dec
dec
negb
es
dec
add
mov
and
cmp
and
jae
xchg
dec
adc
add
cmpsb
jp
out
inc
xlat
xchg
push
lds
cmpsb
xchg
aas
lret
mov
mov
jns
roll
addr16
or
dec
mov
xor
jo
mov
cmp
sahf
jns
xchg
jle
push
fsts
jne
nop
push
lea
popf
rcl
pop
sub
and
loopne
fstps
out
fldcw
cmp
sbb
repnz
push
mov
ret
pushf
fcmove
push
lahf
imulb
xchg
xchg
idiv
test
mov
pop
stos
out
gs
aam
fnstsw
lods
sbb
push
xchg
repz
fs
dec
outsl
out
aaa
shl
push
xchg
aam
pop
or
add
popf
pop
jne
cmp
ficoml
loop
jle
sub
insb
mov
ds
aas
push
into
or
lds
lds
insl
stos
xchg
orb
pop
mov
push
cmp
jl
pop
int
inc
imul
sbb
lds
inc
in
mov
stc
lods
push
int3
ss
outsl
xchg
fsts
adc
cmp
subl
lds
dec
lret
orb
xchg
mov
lea
adc
fldt
push
out
pop
stos
mov
add
mov
enter
cld
out
cmp
cmp
xchg
push
adc
mov
or
add
dec
imul
in
push
cmp
decb
jbe
sub
cvtps2pd
cmove
rclb
adc
push
xor
jmp
mov
add
jle
dec
jmp
inc
inc
nop
or
jge
mov
in
jb
stc
sbb
push
or
mov
sti
cs
xchg
out
call
loopne
jne
or
sbb
movsb
sbb
fisttpl
adc
mov
outsb
fldl
cli
mov
mov
add
fldl
filds
xchg
ret
lahf
adc
mov
add
fidivrl
ljmp
mov
or
or
dec
idivl
pop
pop
cmp
pop
pop
sub
and
imul
cmp
pop
sub
les
mov
cmp
int
scas
call
testl
and
sbb
fmull
std
lds
pop
addr16
xor
sub
test
mov
dec
jmp
or
xadd
in
sbb
popa
jp
cmp
xchg
sub
fnstenv
push
lret
push
in
mov
lods
out
outsl
add
xchg
ja
push
shrl
or
xchg
push
sti
hlt
leave
out
ret
dec
loope
aas
cmpsb
mov
mov
push
jle
cmp
pop
fadd
adc
pusha
mov
lods
push
into
mov
xor
mov
push
add
mov
gs
jb
mov
and
push
push
sub
or
jb
and
dec
fwait
push
dec
xchg
cld
inc
shlb
cmp
jp
aam
jl
mov
pusha
ret
sahf
aas
dec
cmp
pop
mov
int3
mov
aad
sbb
adc
aaa
jns
leave
cmc
imul
add
jno
mov
pop
icebp
jp
xor
fsubrs
clc
add
cwtl
inc
test
int3
out
inc
sbb
rclb
cmp
mov
cs
xlat
nop
cmp
js
sti
fdivp
mov
mov
iret
cwtl
loop
call
ljmp
inc
insb
out
jp
xchg
pop
sub
inc
push
fstpt
ljmp
ss
mov
fyl2xp1
aas
and
dec
sarb
dec
dec
push
fwait
mov
jo
push
mov
add
clc
lods
hlt
jnp
call
inc
cmpsl
pop
nop
leave
mov
fs
and
sbb
lods
mov
cmpl
fwait
xor
std
or
leave
loop
imul
xor
insb
sbb
inc
pop
icebp
xor
push
mov
je
pop
sbb
pusha
in
sbb
lea
ljmp
cwtl
push
addr16
popa
inc
icebp
ret
les
test
loopne
aas
jns
out
flds
test
ret
jmp
add
repz
das
sbb
cmp
icebp
pop
fbld
mov
out
push
mov
movsb
mov
in
xor
popa
shll
add
mov
push
mov
lcall
push
sub
or
and
jnp
sbb
xchg
fwait
aad
mov
or
pop
pop
lea
or
je
mov
sbb
mov
cmpsb
imul
pcmpgtb
fistl
mov
push
pop
mov
push
sbb
jmp
xor
outsb
sbb
and
jmp
fisubrs
pop
jbe
imul
jle
pop
jns
int3
test
pop
fsubrp
pop
mov
movsl
shrb
xor
push
iret
out
xor
cli
in
iret
rcrl
push
std
adc
inc
xchg
scas
sub
test
pop
push
and
inc
in
in
and
jp
xor
dec
cmpsb
repnz
test
pop
and
ja
clc
stos
sub
inc
pop
aas
adc
jecxz
into
outsb
sub
push
dec
and
dec
lds
push
mov
mov
and
jge
add
fsubrl
les
jb
lret
data16
popf
adcl
loop
push
push
push
mov
xabort
ljmp
mov
cmp
aam
jge
and
loop
fstps
or
jno
push
mov
xor
stos
add
hlt
inc
fiadds
outsb
inc
cli
sbb
xor
xor
jnp
adc
clc
cwtl
test
outsb
sti
xor
or
outsb
inc
push
imul
out
mov
ja
mov
push
dec
push
or
jne
lds
lods
cmp
jae
pop
cli
mov
aaa
mov
insb
sbb
int3
lds
pop
adc
cld
clc
push
or
xchg
jne
push
imul
imul
mov
cmpb
pop
popf
sarl
and
mov
insb
xabort
mov
sbb
ja
add
fldt
out
mov
mov
xor
mov
cmp
and
test
push
scas
in
mov
cmp
mov
popa
div
push
mov
xlat
data16
dec
lcall
test
jmp
mov
xchg
mull
dec
mov
pop
lock
jmp
into
aad
sbb
popa
jp
in
aad
pop
jae
sbb
and
jle
mov
jmp
out
adc
rorb
aaa
cmp
adc
or
cmp
std
lahf
push
mov
jno
dec
and
xchg
push
inc
sbb
test
cmp
push
loope
pop
fcompl
jecxz
stc
adc
leave
mov
inc
jle
mov
pop
and
jnp
dec
mov
into
loope
outsb
dec
gs
mov
inc
jnp
movb
jp
jge
mov
or
fimuls
icebp
outsl
lods
icebp
sbb
scas
mov
rcl
out
pusha
cmc
mov
add
push
push
sbb
decb
xor
into
addr16
lods
ret
push
xor
lcall
cmp
imul
fcoms
out
in
xor
adc
jne
dec
adc
leave
sub
cmp
lock
mov
mov
add
adc
xchg
aam
cmp
sub
lcall
mov
aam
lea
mov
sub
loope
fs
push
fildl
pop
popf
test
mov
and
into
call
hlt
out
jl
lret
cmp
aas
in
in
dec
push
cmc
push
mov
das
xchg
adc
lret
ret
cmp
aad
or
dec
mov
in
scas
scas
imul
fldt
aad
icebp
shl
and
mov
addr16
pop
pop
fdivl
repz
mov
pusha
adc
or
dec
nop
pushf
mov
sub
jle
or
fwait
and
sbb
sti
and
push
dec
pop
in
jg
cwtl
push
xchg
xchg
inc
jb
mov
xchg
sub
lods
push
pop
daa
imul
lcall
inc
sbbb
popf
pop
adc
in
leave
cmc
and
bound
mov
inc
sbb
sub
cmp
shll
shl
das
mov
aaa
mov
sub
nop
ss
pop
outsl
adc
bswap
xchg
into
mov
add
movzwl
sub
mov
dec
sub
adcl
ss
fbstp
pusha
sbb
ffreep
dec
jp
aad
fdivs
mov
sbb
xlat
enter
inc
and
insb
clc
lea
pop
push
xchg
incb
scas
movsl
inc
add
mov
lock
xlat
sbb
dec
xor
sarb
xorb
in
stos
sub
ds
mov
pop
jae
hlt
push
mov
gs
dec
and
push
mov
mov
add
daa
mov
sar
and
movsb
lock
jae
mov
mov
jns
adc
push
mov
adcb
out
xchg
cmp
and
xchg
mov
movsb
xor
and
outsb
inc
mov
adc
sarl
dec
pop
popf
push
sarl
aaa
popf
inc
xor
sub
cmp
mov
ljmp
cmp
sub
out
fstl
cmp
mov
pop
adc
es
add
ret
test
mov
aas
or
insb
xor
pop
ljmp
neg
and
jbe
mov
in
repnz
mov
mov
inc
out
test
push
in
fcoms
jp
pop
mov
les
mov
mov
jo
dec
cmp
mov
insb
dec
es
mov
ds
adc
popa
cmp
mov
push
aaa
xor
vzeroupper
cmp
enter
popf
adc
int3
into
lea
xor
dec
mov
push
roll
das
loopne
pop
lahf
push
sbb
and
jecxz
sbb
divb
pop
ret
pop
jns
leave
push
dec
mov
mov
sbb
xchg
xor
loop
jno
das
sbb
jp
test
lods
imul
mov
jp
test
cmpsl
jg
shl
bound
adc
fidivrs
jle
pop
xor
push
adc
xor
cwtl
pop
sub
push
push
jmp
cmp
sub
add
mov
mov
test
scas
push
jp
lcall
adc
or
mov
pop
jp
push
cwtl
dec
mov
fwait
add
inc
out
imul
fdivl
add
push
fisttpl
xor
cmp
in
xor
loopne
pushf
call
loopne
mov
inc
or
mov
clc
mov
or
hlt
out
insl
or
jmp
aam
push
mov
dec
push
in
adc
sahf
bound
xchg
aad
movsb
insb
faddl
push
leave
sub
sub
or
ss
lret
sbb
xchg
into
into
in
fadds
jnp
mov
fildl
cmpsb
adc
push
dec
jecxz
dec
imull
aas
sub
jae
aas
ret
cmp
sahf
imul
ret
xor
sbb
push
jno
mov
sub
out
cltd
jno
add
dec
push
pop
cmp
jne
inc
inc
insb
jmp
insl
pop
std
lock
cmpsb
pop
aam
insb
cld
out
push
lret
and
sbb
jmp
daa
mov
cmp
xor
scas
loop
icebp
lcall
mov
dec
dec
adc
push
rorl
pop
mov
iret
add
and
cmp
xor
jbe
lret
cmp
sbb
jg
dec
jl
jmp
mov
jle
inc
and
mov
jg
jno
push
cltd
add
mov
in
aad
mov
inc
xchg
loopne
imul
push
test
pop
xchg
out
inc
in
mov
ljmp
popa
adc
lahf
jmp
xchg
lea
dec
dec
ret
data16
cmp
cld
daa
jg
cld
sub
dec
pop
aaa
dec
xchg
nopl
pop
push
out
seto
jecxz
pop
xor
push
cmpsl
xchg
xor
pop
aas
leave
insb
subl
pop
pushf
or
leave
pop
mov
xor
loop
dec
xchg
cmc
mov
stos
dec
push
pop
inc
add
jbe
sub
dec
daa
rcrl
cmp
dec
mov
out
pop
xchg
fcmovnu
dec
pop
add
inc
clc
and
ret
cwtl
push
mov
mov
js
and
sti
andb
inc
mov
int3
into
ja
mov
cmc
jo
mov
mov
sbb
push
mov
inc
add
push
add
xchg
sarl
ja
adcb
cmp
mov
cmp
repnz
xchg
cli
xchg
push
fdivrs
test
lock
cli
xor
test
leave
pop
lods
cmc
dec
aad
push
mov
inc
push
adc
ds
jo
test
mov
mov
dec
data16
andl
jmp
mov
cmp
mov
pop
push
sarl
jbe
sbb
lea
ljmp
mov
inc
or
iret
add
sbb
cmpsl
in
scas
lret
jb
nop
out
mov
dec
mov
das
pop
jl
jae
mov
pop
das
movsb
mov
jae
inc
inc
daa
cmp
cmp
mov
rclb
std
jp
and
push
xor
xchg
push
mov
mov
mov
lock
cmp
dec
sti
fwait
ds
push
mov
ss
xchg
cmc
push
insb
mov
loop
aad
stos
push
dec
pop
or
or
rol
shrl
pop
orb
mov
in
cmp
inc
mov
sub
pop
rep
jp
mov
bound
rcr
mov
in
out
cmp
mov
dec
add
sbb
in
pop
fdivrs
or
pop
cltd
cwtl
inc
dec
inc
cli
sub
jnp
mov
xor
push
and
fldcw
mov
push
add
insl
add
out
jge
cmc
push
imul
popf
push
jl
lods
adc
es
jno
add
or
aad
xchg
xor
lahf
scas
jg
add
cmp
daa
xchg
out
cmp
xor
ret
into
shlb
arpl
push
int3
fisttps
xor
xor
and
push
ja
in
jg
fnsave
out
test
sub
add
repnz
jne
inc
or
cmc
sub
in
dec
push
push
push
dec
in
repnz
push
cmp
imul
sbb
dec
mov
mov
divl
add
aad
jo
mov
jge
sub
imul
pushf
adc
adc
mov
int3
out
inc
mov
mov
push
sbb
dec
push
add
ja
sahf
test
pusha
inc
lret
mov
mov
or
ss
in
sahf
hlt
into
sti
out
test
out
jno
test
nop
sbb
dec
divl
cmc
negl
fsubl
cs
imul
jne
jge
test
cmpsb
mov
jge
lds
sbb
push
pusha
movsl
adc
push
xchg
mov
aaa
scas
xchg
les
inc
popf
scas
lods
int
inc
dec
add
dec
lock
rorb
mov
push
mov
and
push
filds
push
int
loop
pop
add
pop
test
dec
lret
pop
jo
mov
push
ret
out
dec
xorl
adcl
mov
xchg
cmpsl
mov
js
sahf
pop
nop
repz
and
fidivs
lahf
enter
push
cmp
mov
mov
lods
sbb
adc
sbb
cmp
jne
jmp
das
in
cmpsb
mov
jnp
mov
mov
loop
mov
mov
dec
push
add
sub
lods
loopne
and
movsl
mov
leave
out
lret
cmp
mov
cmp
lahf
and
cld
or
shlb
jp
push
or
or
mov
inc
cmc
arpl
xchg
and
xor
cmp
jns
xlat
mov
push
mov
in
rclb
test
pushf
add
iret
sub
push
loop
test
cmp
inc
out
bound
xlat
jbe
stos
jge
test
sar
js
pop
ficoms
cmp
or
dec
cmovo
and
mov
ss
mov
insl
lds
push
jno
xorb
lock
xchg
xlat
shl
cli
into
jae
push
stc
pop
jns
jne
add
mov
idivl
cwtl
fidivrs
adc
cmp
mov
push
inc
or
pop
lea
inc
add
mov
pop
xor
fs
pushf
adc
fxch
imul
xor
cmpsl
xor
mull
push
mov
pop
lock
call
mov
mov
into
inc
add
test
lret
push
dec
adc
popf
mov
leave
mov
inc
mov
fnstsw
jmp
jmp
in
pop
sbb
jl
jmp
fbld
cmp
mov
shl
xchg
mov
repz
daa
or
inc
lcall
jae
inc
jl
fdivp
repz
pop
push
aas
stos
movsb
mov
incb
repz
pop
imul
pop
in
push
add
cmp
mov
test
cmpsb
sbb
call
jmp
pop
cli
push
iret
sub
xchg
pushf
sbb
mov
push
dec
sub
pop
test
pop
jge
sbb
fprem
and
add
push
in
fbld
xchg
mov
sar
cld
lret
mov
pop
xlat
shl
ds
loopew
add
sbb
inc
dec
push
mov
in
xchg
inc
adc
fsub
incl
gs
inc
mov
cs
or
cmpsb
scas
lea
mov
call
mov
jnp
ret
cmp
aad
aad
xchg
sub
lods
lods
dec
cmp
outsl
loope
in
fstpt
mov
mov
mov
subl
lea
js
outsl
dec
pop
cmpsl
jno
cmpsl
pop
fprem
xchg
mov
add
and
fwait
pusha
sti
inc
and
push
idivl
xchg
push
mov
test
dec
ljmp
int
mov
push
mov
lahf
movsl
repnz
roll
insb
mov
sbb
or
xchg
adc
sahf
fisubs
shrl
fistpll
push
push
int
mov
xor
add
xchg
jp
fsubs
pop
das
aas
and
adc
fs
mov
cltd
imul
inc
lods
dec
loopne
jmp
test
jecxz
mov
xor
push
jecxz
jb
xor
jecxz
push
jg
sbb
pop
not
jbe
adc
xor
dec
xor
les
pop
sub
cli
jmp
push
add
cs
push
ss
dec
fistpll
out
xchg
dec
shlb
adc
lock
jns
pusha
xchg
or
sub
and
jns
or
loope
cmp
test
popf
cmp
pop
push
sbb
je
imul
stos
call
push
lock
scas
xchg
out
dec
scas
pop
sub
mov
dec
adc
push
jg
pop
cltd
fisttps
adc
insl
cmp
loopne
and
shrb
inc
and
adc
pop
xor
mov
imul
aas
pop
ret
test
jmp
xlat
bound
in
loop
movsl
pop
in
lret
mov
fbstp
in
rcrb
icebp
add
push
sbb
lea
cmpsb
sarl
out
mov
adc
mov
cmpsl
daa
inc
outsl
sysenter
fstpl
pop
xchg
mov
pop
mov
cmpsb
aas
push
js
jmp
loope
sub
cwtl
js
pop
mov
test
addr16
in
and
aas
pop
js
movsl
stos
fbld
sbb
andb
and
js
cmp
popa
add
in
adc
sbb
cmp
add
lea
mov
cld
mov
hlt
stos
xchg
das
iret
push
xchg
pop
mov
fadds
test
sarl
push
lock
outsl
dec
xor
mov
das
ret
popa
and
popf
add
push
push
lea
pop
lock
incb
or
cmp
adc
movsb
and
iret
dec
dec
mov
and
sbb
nop
or
bound
sbb
test
iret
test
cmc
mov
sbb
cltd
out
jo
rcl
ficompl
jp
mov
mov
mov
bound
mov
icebp
movsb
shll
push
outsb
xchg
cmp
inc
xchg
in
or
or
or
xor
and
aam
jne
push
push
and
lea
mov
bound
push
xchg
fldenv
and
lret
jp
push
or
or
pop
mov
and
out
mov
mov
fadds
loop
aaa
mov
out
scas
xor
inc
sub
mov
cmp
jg
mov
test
pop
xchg
mov
dec
fsubl
jmp
aam
mov
xor
inc
inc
inc
loope
mov
sbb
in
or
hlt
push
ja
xlat
pop
lret
mov
xchg
push
imul
js
negb
add
lds
bnd
dec
loope
adcl
or
les
aaa
out
pop
stc
mov
jae
sub
orb
push
scas
mov
ret
lcall
inc
or
push
lret
int
lock
lea
daa
test
test
aad
addr16
jmp
clc
stc
lods
les
xlat
mov
push
pop
test
and
pop
jle
mov
jae
pop
mov
push
fs
xor
fscale
xchg
sarl
cmpsl
lea
xchg
out
addr16
aam
jb
bound
movsb
lcall
rcl
pop
and
xchg
sub
call
out
dec
stc
and
repz
test
dec
jp
add
pop
sbb
cmc
je
pushf
push
test
pusha
push
outsb
add
xchg
and
fwait
ror
dec
xchg
shlb
mov
call
and
pop
mov
arpl
adcl
ja
cmp
dec
outsl
sub
fnstcw
fwait
lea
pop
inc
xor
jns
mov
js
adc
cmc
ret
jge
mov
and
loope
insl
fistps
cmpsl
push
xorb
lds
mov
enter
shll
lcall
je
push
adc
jo
pushf
ret
loopne
push
mov
mov
sub
or
lret
lods
cmp
mov
aam
jae
mov
mov
jbe
push
mov
adc
xchg
push
cmp
lahf
imul
jp
or
or
sti
jl
pop
adc
lcall
and
es
mov
xor
pop
and
sbb
daa
dec
jb
std
xor
mov
sbb
cltd
ret
jns
cmpsb
dec
frstor
lds
enter
push
in
mov
cwtl
push
inc
jmp
pop
jp
pop
scas
leave
mov
push
mov
lcall
xor
pop
icebp
jo
dec
cmp
rcll
dec
mov
push
push
popa
pop
sub
pop
mov
cmpsb
xchg
les
sbb
shrb
mov
xchg
ret
sub
dec
cmp
shll
jge
jnp
cmp
mov
jp
popa
jmp
fs
cld
mov
js
pop
add
inc
jge
push
sub
jmp
lock
dec
push
adc
xchg
dec
jl
push
test
int
xchg
aaa
popf
adc
or
stos
rcr
gs
push
je
push
cmpsb
add
lahf
int3
inc
mov
aad
out
dec
fs
rcrl
addr16
jns
stos
jle
mov
cld
pop
pop
xchg
neg
mov
imul
mov
cmp
add
jb
int3
push
mov
sub
xchg
mov
mov
daa
ja,pn
pop
sbb
scas
out
xchg
aas
pop
das
xor
cmp
pop
sbb
pop
xchg
adc
shl
ss
loop
ja
mov
cld
movsl
push
sti
arpl
cmpsb
fs
fbld
pop
aad
std
xor
mov
ret
and
lcall
sub
cmp
in
xor
xchg
push
xchg
cld
mov
aam
insl
das
mov
or
lcall
testl
shlb
pop
outsb
shll
dec
ret
aaa
mov
nop
js
scas
cwtl
add
jmp
sub
out
inc
mov
je
dec
pop
lahf
clc
mov
pop
movsl
es
cwtl
sbb
stc
xchg
sbb
std
imul
cmpsb
mov
dec
stos
dec
les
push
ljmp
addl
std
sub
add
mov
push
fiadds
sahf
inc
stos
jmp
mov
or
sbb
stos
adc
xchg
insl
xor
js
or
filds
fs
fists
inc
bound
mov
inc
and
stos
add
js
sarl
ljmp
push
je
js
add
push
push
mov
icebp
push
inc
js
push
sbb
or
mov
xchg
scas
data16
ss
in
imul
inc
nop
stc
pushf
xor
push
cmp
dec
cmp
sahf
stc
inc
shl
push
mov
xor
mov
cmpl
cmpsl
push
push
dec
jl
fcoms
iret
mov
aaa
loop
or
and
push
es
add
pop
outsl
push
adc
mov
cmp
in
cmpsl
fstps
pop
mov
nop
mov
int
pop
cmc
adc
lock
in
mov
addb
mov
lret
push
sub
add
xchg
or
aaa
fmull
push
pusha
jl
ss
rorl
lock
sbb
cmpsl
paddb
stos
aaa
jns
or
inc
cmpsb
mov
sbb
rorl
cmc
cmpsl
push
ss
pop
repnz
rclb
sarb
sub
ret
add
and
add
inc
lcall
push
mov
inc
push
out
lock
bound
add
push
cmovae
mov
xchg
xchg
hlt
fisttpll
lock
sub
pop
inc
xchg
xlat
ljmp
xor
shr
lock
jne
jmp
xor
sub
mov
cmpsl
sub
mov
loope
lret
inc
or
cld
pop
clc
jb
pusha
pop
addb
xor
push
push
loopne
xchg
scas
insb
and
cmp
jo
int3
cmp
mov
movb
xor
cmpb
rorb
adc
fnstenv
dec
test
mov
mov
add
jnp
jno
insb
addr16
push
pop
lds
fadds
mov
pop
icebp
jecxz
jl
mov
mov
dec
inc
movsl
add
mov
xor
or
loopne
sbb
add
rol
fs
jbe
inc
cmp
icebp
and
rorl
inc
xor
jle
xchg
xor
movsb
bound
adc
cmpsl
lds
movsl
cld
mov
mov
or
orl
cmpsl
mov
sub
add
lods
movsb
popf
sbb
call
nop
push
add
repnz
cmpsl
push
dec
inc
push
adc
mov
movsb
dec
lret
jp
pop
mov
mov
dec
xchg
je
pop
mov
subb
sub
les
mov
fcoml
roll
mov
add
les
cmp
mov
loopne
add
sub
out
iret
cmp
xchg
out
movsb
jecxz
pop
int3
dec
mov
cmp
mov
lahf
mov
fiadds
rorl
lea
pop
cld
jnp
xchg
cmp
ja
sbb
xchg
or
mul
add
dec
sub
adc
filds
and
pop
xchg
inc
sbbl
jae
mov
aaa
scas
dec
jle
mov
and
ja
mov
sub
inc
aaa
outsl
and
lcall
mov
sub
and
xor
cmp
mov
mov
mov
jno
mov
xor
mov
cwtl
js
in
mov
pop
lea
jno
cmp
orb
jb
jbe
cmp
inc
fwait
pop
cld
in
adc
rorl
pop
jbe
dec
dec
or
push
push
or
xchg
jo
imul
add
fs
mov
xor
jg
add
rcrb
xchg
sub
fadds
fdivrs
pop
std
adc
mov
mov
dec
lods
test
loop
mov
imul
shrl
std
bnd
nop
jae
fdivl
in
sub
xorb
pop
xor
cli
bound
mov
lahf
cli
sub
xchg
rol
js
lock
test
iret
lahf
js
mov
add
scas
fisubl
sub
and
insb
push
aas
and
mov
mov
loop
ss
sub
jb
loop
adc
dec
xor
pop
clc
decl
lahf
std
sbb
push
ret
addr16
movsl
enter
push
mov
push
leave
test
mov
es
mov
mov
or
lret
xorps
repz
pop
or
int3
or
inc
mov
in
ja
xor
pop
outsl
ret
rclb
hlt
scas
popa
and
pop
out
movsb
or
cs
mov
test
add
or
mov
lcall
or
jb
inc
push
test
stos
push
icebp
fwait
adc
testb
repnz
inc
in
outsb
stos
xchg
push
in
je
and
jae
push
and
inc
cmp
test
repz
adc
sbb
sub
jp
fbld
adc
ss
daa
enter
addr16
sbb
or
sti
bt
lahf
jb
insl
mov
lods
dec
add
subl
ja
scas
pushf
stc
scas
or
mov
outsl
jmp
cmp
dec
jno
aaa
je
sarl
jb
push
inc
inc
out
jecxz
pop
mov
or
jno
lods
ficompl
xchg
mov
lahf
daa
cwtl
pop
outsl
sbb
cmpsl
sbb
outsl
stos
push
mov
inc
add
loope
jbe
jge
inc
mov
and
les
sbb
push
sbb
or
mov
xchg
push
jbe
scas
or
push
dec
or
add
hlt
xchg
sahf
int3
dec
mov
dec
ret
add
xchg
sub
cmp
cmp
fsubl
sub
cli
movsl
test
fidivrl
cltd
cld
cmp
test
sahf
dec
mov
orl
imul
je
pop
or
dec
stos
les
out
xor
inc
cmp
jp
mov
xlat
mov
mov
pop
mov
push
loop
pop
repnz
insl
hlt
push
add
pop
or
mov
ret
dec
mov
pop
test
mov
enter
in
mov
inc
outsl
outsb
pop
jl
shl
add
sbb
mov
xchg
sbb
rcrb
mov
mov
dec
sub
in
sbb
iret
jge
xor
xchg
xor
negb
pop
or
xor
mov
sub
lcall
shrb
dec
or
jae
mov
daa
lea
mov
jbe
pop
sbb
xchg
jecxz
mov
xlat
loop
or
xchg
jmp
ljmp
sub
sub
pop
push
push
lods
xor
sbb
xlat
ftst
inc
inc
loopne
jge
mov
jmp
inc
sbb
fwait
lods
push
fsubrs
aaa
mov
into
mov
cmpxchg
adc
push
in
aam
aas
rcrb
mov
inc
lcall
ds
lahf
pop
lret
xor
jp
test
push
push
jne
outsb
pusha
cmp
push
hlt
pop
jecxz
jmp
push
xor
pop
in
jecxz
adc
push
sti
pop
out
icebp
insb
push
out
jnp
outsl
in
ret
sub
pop
sub
add
cmp
push
rorl
fildl
jmp
sbbb
adc
cmp
mov
test
lahf
mov
rolb
pop
pusha
or
cmpsb
push
mov
add
push
shr
pop
sbb
sub
sbb
cld
push
mov
jge
push
shll
cltd
popf
leave
mov
mov
lods
fcomps
or
frstor
rorl
xchg
add
pop
in
mov
pop
jecxz
out
sub
cmpsb
scas
adc
lods
in
or
mov
inc
adc
and
popf
out
sbb
addb
ficomps
jl
shrb
or
pop
mov
das
inc
pushf
xlat
cmp
cmpl
xor
jnp
inc
jle
and
jae
popf
cmpsl
aas
lock
lahf
data16
pop
pop
gs
rcll
sti
in
fcompl
cmc
add
imul
pop
bound
mov
mov
cs
data16
out
xlat
cmp
negb
call
movsl
cmp
repnz
insb
inc
dec
sub
adc
lcall
leave
dec
ljmpw
or
jg
adc
ret
dec
rcr
jp
ds
data16
shrb
js
inc
fisubrl
xchg
inc
test
jl
push
jmp
loopne
jecxz
lcall
lahf
test
dec
add
enter
sub
inc
fistpll
imul
shlb
sub
shr
outsb
jecxz
dec
cmpsb
mov
sbb
jae
push
dec
fiadds
cmpsb
sub
in
push
sub
sbb
or
stos
sub
mov
add
pop
add
pop
roll
push
arpl
je
fsts
insl
ret
jno
out
fdivl
std
ljmp
rcrl
sbb
mov
dec
cli
sbb
push
leave
mov
icebp
imul
data16
sub
es
loop
repnz
outsb
sahf
mov
fidivs
repnz
cvtpi2ps
aas
jne
jg
mov
inc
rcrb
sub
sbb
mov
rclb
jge
aas
roll
cltd
bound
test
mov
test
pop
pop
or
and
aaa
add
xchg
out
and
jp
jl
bnd
jbe,pn
sbb
sti
sub
xchg
and
push
jle
sbb
cmp
das
testl
and
or
loopne
mov
fldcw
inc
dec
mov
push
shlb
lds
rcr
cmp
mov
icebp
cmp
aad
cs
push
daa
movsl
lcall
inc
cs
and
addr16
sahf
loope
adc
mov
jb
mov
stc
push
pushl
inc
adc
sahf
mov
scas
push
decl
loop
test
add
stc
dec
mov
and
or
mov
inc
fldenv
mov
cwtl
adc
dec
jae
cmp
jno
adc
bound
out
mov
sahf
enter
iret
xchg
fstps
call
cwtl
cwtl
jge
imul
inc
ret
aas
cmp
neg
lahf
add
mov
mov
inc
inc
cmpsl
or
mov
or
and
addr16
das
adc
in
enter
arpl
pop
add
fwait
pop
lods
sarl
xlat
add
iret
stc
pop
cwtl
xorb
push
push
add
imul
push
xchg
repnz
int
imul
lock
fdivs
lds
adc
rclb
scas
add
dec
insl
ja
lret
in
or
xchg
xchg
mov
cld
imul
data16
mov
adc
pop
shlb
pop
lea
inc
push
and
sbb
repnz
jmp
mov
mov
movsb
push
divb
pop
push
mov
sub
add
sub
xchg
push
dec
lock
sbb
mov
mov
lds
imul
sbb
movsb
pushf
dec
dec
sbb
imul
mov
or
pop
mov
mov
std
mov
js
xchg
cld
jns
push
sbb
mov
jp
xchg
cmpsb
or
cmp
les
or
scas
testl
testb
add
push
add
pop
mov
mov
xchg
daa
mov
and
xlat
arpl
pop
repnz
xor
sub
sub
mov
mov
mov
movb
sbb
pop
lds
repz
ljmp
push
jg
mov
cmp
out
ds
push
movsb
shlb
movsl
data16
js
mov
aam
pop
sub
in
fistpl
aaa
mov
and
add
inc
stos
cmp
inc
pop
leave
sahf
pop
repz
mov
cli
add
sbbb
push
pop
dec
or
dec
lds
and
push
fdivs
fcomip
js
out
hlt
insb
dec
pusha
mov
ret
mov
loopne
dec
out
cwtl
dec
add
inc
js
and
dec
std
pop
cltd
sub
cmpsl
push
xchg
lods
stos
into
sbb
xchg
popf
in
jle
fidivs
dec
addr16
mov
cld
je
pop
mov
adc
sbb
sbb
bound
lret
js
pop
sahf
fistpll
dec
mov
outsl
mov
pop
add
ret
or
or
outsb
push
repnz
adcl
lock
imul
gs
js
lods
repz
jb
add
rcrb
sub
mov
sar
in
dec
inc
test
mov
inc
aam
out
and
sub
imul
int
xchg
add
imul
cld
dec
and
xchg
jecxz
mov
push
xor
xlat
addr16
enter
push
nop
in
rcll
lds
xor
and
out
std
sbbb
imul
or
jbe
dec
jmp
leave
mov
mov
pop
adc
and
sub
xor
lret
and
out
xchg
cwtl
or
xchg
inc
adc
aas
dec
adc
inc
push
frstor
les
mov
imul
cld
xor
dec
add
push
je
xchg
lock
insl
jbe
jle
pop
add
movsb
cmpsl
scas
insb
scas
mov
in
into
imul
scas
stos
lea
push
dec
mov
pop
repnz
cmp
cmp
jl
add
aad
adc
jne
and
pop
les
out
imul
sahf
cwtl
mov
xor
imul
fimull
add
cli
add
inc
jbe
dec
out
xchg
jecxz
imul
fisubs
mov
es
cmp
ds
or
sub
push
push
popa
aad
xor
fcomps
scas
push
shlb
xor
cmp
sub
aam
in
out
shlb
sbb
and
imul
mov
adc
repz
jae
lcall
dec
fstpl
mov
ja
push
aas
int3
loope
mov
mov
in
xor
pop
or
push
mov
test
cwtl
out
jmp
mov
add
cld
mov
call
imul
jns
push
movsl
loope
xchg
cmpsb
adc
in
stos
imul
push
stos
mov
xchg
sub
fimull
sub
and
push
dec
sub
pop
sub
mov
cwtl
mov
je
jmp
sbb
cs
pop
adc
fucomi
pop
sbbl
cmp
pop
dec
add
aas
nop
jns
imul
dec
jl
xchg
cwtl
stos
shrl
movsl
rcl
or
adc
mov
repz
xchg
stos
and
imul
add
jns
int3
test
jb
jns
xchg
add
cmp
mov
push
int
inc
add
pushf
xor
aas
out
lahf
dec
cld
add
scas
adc
jno
pop
fdivrs
jno
mov
roll
sbb
add
add
sub
ret
ds
fdivs
add
lds
in
pusha
lods
mov
jle
sub
ds
test
outsb
or
mov
lret
shrl
mov
and
push
or
mov
xchg
fwait
pop
or
das
sub
cltd
test
cmp
or
adc
adc
lahf
dec
test
movb
pop
push
pushf
or
jmp
dec
inc
in
xchg
xchg
fimull
lds
xchg
arpl
mov
outsl
movsb
bound
in
push
cmp
and
data16
lret
cmp
ds
jge
loope
int3
sbb
jbe
stc
cli
std
sahf
jne
mov
mov
mov
xchg
push
push
aam
cltd
mov
in
ret
push
outsb
push
mov
ret
int
mov
in
ret
push
cmp
and
dec
jno
adc
xor
cmp
pop
sahf
jb
int
loope
push
shrb
ret
xor
push
adc
dec
sub
pop
push
mov
ss
sbbb
sbb
jno
lcall
push
add
add
popf
add
adc
push
jp
adc
in
lds
push
adc
repz
push
movsl
and
sub
in
out
sbb
mov
jbe
loopne
test
jns
cmc
lock
lahf
push
or
icebp
push
sub
movsb
mov
push
popl
cltd
test
cmpl
mov
pop
mov
shlb
jbe
mov
xlat
mov
inc
loopne
dec
loop
ljmp
mov
pushf
pop
aas
sbb
daa
or
xor
lahf
jmp
push
mov
pop
sub
cld
push
add
pop
or
pop
jo
out
pop
lock
ss
dec
push
cltd
jb
and
cmp
fs
xchg
movsl
mov
mov
jge
ljmp
fwait
aam
inc
jl
sahf
jo
and
jb
mov
push
mov
mov
pop
clc
insl
in
fistl
xor
loop
not
jae
xor
xor
mov
xchg
pop
add
add
inc
add
in
aaa
sub
negb
pop
adcl
push
ret
cwtl
and
xchg
int3
and
insl
push
push
sub
adc
mov
dec
ss
in
stc
mov
cmp
lods
xchg
in
dec
lahf
ljmp
mov
aas
xor
insl
dec
push
push
ja
and
mov
sbb
push
mov
arpl
inc
sbb
stc
sahf
mov
outsl
lea
sub
hlt
bound
movsl
push
dec
out
test
lret
pop
pop
shlb
cmc
pushf
adc
sub
xor
js
adc
push
stos
xchg
in
and
pop
or
jo
push
in
sbbw
mul
cmp
movb
cmc
pop
adc
mov
sbb
rcl
fs
inc
dec
das
jg
popf
pop
xor
pushf
or
push
add
fsubl
scas
out
xchg
in
pop
xor
movsl
lret
hlt
cmp
daa
ljmp
stos
inc
jg
ljmp
cmpb
sub
jae
add
jmp
xchg
and
xor
sbb
lods
testb
leave
jo
call
icebp
clc
or
mov
imul
in
scas
shl
jo
add
scas
test
push
and
push
pop
lret
inc
jmp
lea
or
inc
push
xchg
aam
cmpsb
out
cltd
inc
xchg
pushf
cltd
jno
pop
jns
popa
bound
sub
ja
xchg
jns
loop
push
scas
push
dec
in
test
lret
jecxz
mov
jle
adc
ret
dec
mov
mov
push
loop
adc
mov
fcmovnbe
jge
sti
test
loope
jns
xchg
out
subl
mov
pop
cltd
jecxz
lock
cmp
arpl
pop
pop
pop
mov
sub
mov
dec
shl
push
fcompl
movsl
ds
jae
mov
jno
inc
pushf
loopne
xchg
ret
push
fwait
mov
mov
call
and
mov
cs
or
lret
inc
lcall
cmp
loope
movsl
insl
xlat
xor
xor
lahf
jmp
dec
ja
adcl
xor
lcall
inc
daa
cltd
aad
xor
daa
jecxz
jae
dec
inc
in
dec
movsb
into
jno
in
mov
push
rcr
xor
mov
and
out
das
shrb
jge
loop
dec
mov
push
aad
sbb
inc
or
sub
xor
mov
test
shrb
jmp
inc
cwtl
test
mov
inc
pop
mov
mov
je
adc
jg
popa
inc
lods
add
movsl
mov
sub
xor
hlt
inc
sbbl
jle
test
jae
adc
adc
fidivs
adc
scas
aad
mov
xchg
dec
orl
adc
sti
insl
inc
adc
subl
iret
sahf
push
scas
arpl
lahf
mov
data16
inc
and
mov
mov
sbb
adc
dec
jl
dec
fildl
add
sbb
cmp
sti
mov
jb
rolb
daa
clc
fstpl
sub
fstpt
lea
btr
lods
sub
cltd
in
repnz
jecxz
out
es
pop
ja
out
aas
es
mov
add
loope
sahf
add
sbb
and
loopne
setno
rcrb
mov
icebp
addr16
dec
mov
pushw
xor
xor
xchg
bound
leave
notb
mov
movsb
sbb
xchg
pop
pop
mov
jmp
xchg
nop
out
notb
dec
jmp
out
lods
push
pop
push
sub
mov
out
mov
mov
dec
mov
jmp
adc
jecxz
daa
out
imul
test
inc
js
popa
fwait
shlb
push
les
bound
xchg
or
cld
fnstsw
jns
mov
cmp
cmpsb
ljmp
push
data16
ljmp
std
shr
mov
add
in
sti
jne
shlb
inc
mov
ss
sbb
cltd
or
imul
iret
jmp
add
stos
and
and
mov
jl
sbb
or
lods
or
stc
js
cmp
push
jae
or
pop
push
pushf
jae
lret
int3
adc
push
mov
cmpl
push
test
loopne
test
cmp
pop
and
gs
mov
adc
into
scas
dec
fs
cwtl
sub
test
mov
loop
aaa
and
scas
imul
pop
test
pop
adcb
mov
jae
int3
pinsrw
popf
push
push
add
into
add
sub
dec
xor
adcl
in
cmpsl
in
sbb
sbb
mov
das
icebp
xchg
imul
cmp
pop
xchg
cmp
lods
or
mov
sbbb
jo,pt
insl
mov
imul
ja
in
inc
test
push
js
inc
push
mov
loope
xchg
fistpll
mov
cmp
or
lea
test
sub
clc
jmp
inc
inc
add
cltd
mov
testb
aaa
sbbb
sub
pop
mov
fnstenv
aas
cmc
mov
lods
mov
pushf
in
loopne
sahf
daa
sub
add
xchg
inc
cmc
imul
mov
adc
adc
or
pop
sbb
push
aad
mov
push
enter
pop
loop
lret
xchg
mov
mov
lds
mov
xchg
es
jbe
dec
movsb
int3
jp
stos
vpminsw
cmc
rclb
jae
dec
jae
loop
out
and
std
cmp
fwait
dec
pop
bound
push
negl
cmpsl
jae
adc
or
dec
xor
enter
push
push
mov
mov
jp
mov
pop
lods
push
cmpsl
xor
ds
sbb
jg
aad
xor
inc
insb
ret
xor
cld
dec
inc
mov
xor
xor
repz
inc
mov
testb
jne
clc
push
pop
pop
call
notl
inc
cmp
leave
mov
push
sub
jecxz
pop
dec
add
adc
js
lcall
cmp
mov
sub
sbb
ss
dec
push
shl
icebp
push
or
aam
sbb
pop
inc
mov
stos
or
cmc
popf
sub
lods
lock
cmp
loopne
pusha
shl
mov
repnz
fistl
mov
or
cmp
mov
jne
jmp
rol
jae
sbb
xchg
bound
jnp
mov
clc
pop
mov
fdivl
cltd
shll
xor
sbb
fmull
jne
loopne
lock
pop
jns
fcom
insb
pop
cwtl
sub
push
fidivl
add
repnz
fnstsw
sub
lds
fxtract
xor
xor
jne
dec
adc
dec
in
pop
ja
push
shrb
jmp
jnp
out
aam
popf
mov
jmp
fdivl
stos
cmp
jge
jne
shrl
inc
and
lcall
repz
pop
dec
cmp
push
imul
sbb
dec
and
inc
gs
out
ret
popf
pusha
inc
repz
inc
data16
ja
jb
sub
dec
adc
pop
mov
test
cmp
subl
lods
test
test
mov
add
shlb
in
mov
enter
xor
lods
adc
or
xchg
jae
mov
lea
out
or
lahf
push
shlb
cmp
loopne
adc
addr16
sbb
in
jnp
jne
mov
mov
cmp
adc
jge
mov
push
push
dec
sahf
fs
jno
and
cmpb
jecxz
mov
jl
mov
jecxz
dec
xor
cs
cmc
repnz
mov
dec
and
lret
fwait
xchg
jbe
loop
fistps
adc
push
sub
adc
lret
push
insb
mov
test
inc
dec
or
jae
pop
mov
ja
in
or
xor
jo
xor
jmp
test
push
lock
cmp
aad
mov
jle
imul
or
int
nop
mov
mov
hlt
adc
inc
jne
and
mov
mov
sub
stc
daa
mov
cld
in
aam
outsl
into
jle
into
sub
in
movsl
adc
xor
fwait
inc
gs
stos
jnp
push
jnp
cmp
repz
inc
popf
pop
lahf
mov
cmp
jle
cmpsl
test
rolb
pushf
xchg
test
dec
data16
in
and
lret
push
jo
call
cmp
cli
xchg
in
xchg
pushf
loop
bound
dec
add
mov
adc
cmp
dec
pusha
movsb
lods
ret
leave
add
test
cmpsb
jge
inc
and
pop
icebp
sbb
mov
push
cmpsb
sub
ljmp
shrb
fcoms
mov
std
test
push
inc
fwait
loope
dec
push
cwtl
pop
cmp
xchg
iret
add
jb
lea
mov
adc
ret
cmc
icebp
push
jne
loopne
cli
lea
jns
je
cmc
imull
push
popaw
jnp
int
push
clc
push
mov
sbb
jecxz
mov
pop
jne
pop
icebp
jp
orl
cmpsl
jns
pop
imul
fdivp
mov
jnp
lea
sbb
enter
push
mov
cmp
subb
pusha
leave
rol
mov
fldt
ror
into
cs
decb
leave
add
bound
xchg
mov
bnd
sbb
adc
shll
movb
xchg
and
jmp
push
andb
xor
adc
and
std
arpl
mov
ja
mov
in
and
gs
cltd
movsb
push
xor
dec
xchg
shll
cli
test
pop
jg
outsl
adc
xchg
bound
or
dec
and
aam
call
movsb
inc
pop
stc
sub
push
stos
insb
add
movsl
sub
xchg
movsb
out
movsb
xor
pop
cmp
notb
sti
outsl
jae
insb
rcll
nop
push
call
cmpsl
in
dec
movb
jbe
es
shll
mov
pminub
std
bound
dec
in
add
sbbl
add
arpl
das
add
dec
sub
jg
clc
outsl
pop
roll
leave
fldcw
in
and
or
sub
rorb
xchg
inc
test
int3
shl
movsl
sbb
in
cmp
pop
mov
dec
jb
mov
inc
push
xchg
rorb
ror
mov
inc
inc
add
sbbb
fisttpll
jne
jle
jl
and
ret
xchg
mov
xor
outsl
or
mov
iret
mov
movsl
ljmp
sbb
jg
jne
mov
cmc
adc
jnp
xchg
imul
push
in
pop
push
sarb
incb
into
push
pop
sbbb
and
outsl
sti
mov
js
jg
pop
sti
dec
sahf
xchg
mov
dec
mov
adc
xchg
loop
cltd
or
addl
jne
xchg
insb
inc
or
enter
pop
dec
mov
loope
pushf
lods
vrcpss
in
mov
mov
xor
aad
inc
shl
mov
jbe
pop
sub
lret
mov
xorb
loope
ljmp
repnz
movsl
pop
lock
test
xchg
sbb
and
dec
dec
sbb
clc
sarl
cmp
inc
enter
movsb
mov
mov
mov
outsl
cmpsb
dec
push
icebp
pop
lcall
mov
xchg
lds
cwtl
jo
sub
mov
scas
faddp
lcall
leave
ja
out
addl
jns
imul
fucompp
inc
sub
jnp
pushf
lock
fs
adc
push
into
adc
pop
add
inc
orl
pmaxsw
mov
cmp
and
cltd
ret
in
gs
jno
and
cmpsl
pop
pop
mov
pop
inc
cs
sbb
adc
sub
jne
cltd
add
hlt
push
bound
cwtl
sbb
iret
test
or
and
xlat
xor
lock
fsin
shr
adc
fldt
in
fchs
arpl
sub
jl
shrl
sub
fdivrs
jecxz
lock
and
jns
enter
dec
popa
push
lock
pop
sbb
repz
xor
rcrb
push
and
sbb
int3
and
jmp
inc
add
ret
cmpsb
icebp
add
ljmp
pop
outsl
or
js
jae
fstps
or
clc
mov
and
push
cmc
popf
mov
out
jle
orb
add
inc
pop
pop
or
push
add
into
repnz
rolb
pop
mov
mov
xor
mov
hlt
or
jnp
movsb
inc
fsubrs
xchg
outsl
mov
mov
dec
jb
mov
dec
mov
mov
xchg
cld
in
jg
insl
mov
aas
dec
sub
pop
pushf
fwait
pop
add
sub
popa
dec
add
adc
mov
cmp
mov
popf
testl
cli
jno
rcrb
gs
sbb
int3
mov
xchg
push
mov
cmp
into
stc
addb
adc
sbb
jb
jno,pn
mov
and
loopne
push
scas
cli
lock
sahf
dec
xchg
in
dec
dec
cmp
mov
clc
adc
and
jg
pop
and
dec
jae
mov
dec
repz
xchg
push
jno
mov
mov
xchg
adc
add
inc
cltd
or
imul
mov
inc
mov
call
and
jecxz
jnp
jmp
mov
mov
cli
cmp
mov
rolb
in
and
mov
dec
push
or
xchg
pusha
mov
scas
icebp
js
ret
into
negl
cmp
jge
inc
arpl
fwait
jmp
mov
pop
lret
mov
cltd
addb
inc
sub
jle
in
das
inc
lcall
into
cli
imul
iret
shlb
mov
enter
xchg
xchg
repnz
es
mov
xchg
dec
xchg
fldl
push
sbbl
mov
jle
loopne
push
pushf
test
mov
sbb
fiadds
jmp
and
and
sub
push
pop
or
push
cmp
mov
xor
sbb
cs
lret
adc
xchg
mov
ss
sub
enter
pop
aaa
dec
imul
sub
idivl
das
jbe
mov
and
in
fimull
adc
mov
test
sahf
xchg
test
or
dec
lcall
cmp
int3
push
jle
add
lods
cmpsb
push
mov
inc
insl
jmp
cmpsl
nop
mov
inc
sub
fs
pop
sbbl
xchg
inc
add
push
roll
jns
movsb
icebp
rclb
shll
push
pop
mov
pop
jns
and
enter
and
xor
ds
dec
mov
push
inc
leave
add
mov
push
jmp
mov
mov
sti
stc
lock
mov
xchg
mov
insb
jecxz
adc
lret
and
stc
call
shl
or
nop
ds
stos
mov
lret
popf
jnp
cmpsl
int
lea
cmp
test
out
pop
jb
cmpsb
sbb
das
in
fmuls
dec
test
scas
pop
jb
popa
ficomps
lods
or
push
inc
nop
mov
inc
mov
lea
cmp
add
les
jge
aas
ret
imull
lcall
xor
pushf
ds
or
data16
sarl
adc
lret
lcall
test
iret
loopne
mov
mov
mov
cmp
inc
shlb
xor
cmp
fcomp
stos
out
cmp
test
mov
bound
push
popa
or
and
call
std
sbb
add
mov
es
xchg
dec
mov
outsl
add
loopne
xchg
cmp
adc
mov
pop
fstps
xchg
dec
sahf
mov
es
mov
fucom
mov
and
icebp
sbb
dec
mov
lods
jle
stc
mov
push
ror
sbb
pop
lock
add
cs
es
mov
xor
stos
add
cld
jno
daa
xchg
popa
cmpsl
shlb
hlt
rcpps
or
test
xor
and
dec
jmp
jmp
mov
nop
cwtl
fistl
mov
ret
sbb
mov
subb
add
je
add
stos
jecxz
mov
dec
jne
mov
insb
push
jbe
in
pop
pop
js
cld
fs
inc
aam
push
imul
xor
ret
out
or
inc
adc
sub
frstor
dec
outsb
jno
jge
sub
fs
xchg
pop
cmp
or
push
jp
push
xor
orl
pop
pop
dec
dec
mov
popa
and
pop
movsb
jae
lds
xor
push
jmp
ljmp
sub
mov
mov
pop
bound
leave
push
cmc
adc
pop
out
cli
push
mov
cmp
dec
mov
imul
xchg
xchg
push
sti
adc
bound
mov
add
shr
outsb
insl
push
test
add
das
ljmp
cmp
mov
add
loope
test
fidivl
popa
mov
jns
mov
add
fistpll
pop
outsb
insb
jp
adc
fwait
notl
pop
mov
stos
and
sbbl
pop
shr
inc
push
loop
cmpsl
mov
test
int
or
push
clc
pop
aaa
sahf
ljmp
clc
out
hlt
in
cmc
sahf
cmpsb
sub
in
jmp
add
lret
push
jmp
mov
mov
jb
das
arpl
jmp
cmp
add
pushf
jbe
clc
push
clc
mov
mov
ficompl
mov
pop
cmpsb
mov
lret
bound
lahf
jns
aad
std
pop
push
in
jne
inc
mov
inc
or
or
or
or
out
insl
pop
mov
jnp
sbb
gs
repz
test
push
xor
loope
test
pop
sub
push
cmp
bound
sarb
mov
out
in
loope
lahf
inc
xor
add
js
mov
sub
mov
add
mov
push
icebp
push
lods
push
out
gs
mov
test
sbbl
xchg
xor
scas
and
push
ljmp
rolb
cli
and
jo
cmp
xchg
jae
jno
inc
ds
cmp
dec
pop
fsubrl
int
pop
daa
pop
push
push
push
pusha
fdivrl
jo
cmp
and
scas
loopne
mov
rcrb
push
mov
mov
test
aam
cmp
and
inc
fistl
lcall
outsl
subb
mov
pop
inc
pop
and
ljmp
jl
mov
addr16
sub
gs
jno
bound
jno
ret
sub
aam
xchg
jp
les
sub
enter
out
xlat
addl
push
fldt
xchg
repnz
mov
cli
cld
imul
sbb
mov
pop
out
shl
iret
sub
sbb
add
lds
mov
mov
push
das
loope
negb
arpl
push
in
mov
icebp
push
mov
lret
pop
daa
test
mov
decl
push
stos
xor
sub
jle
iret
cmc
es
xchg
inc
in
aad
subl
psllq
das
rolb
push
cmp
pop
aaa
dec
orl
adc
push
lret
lods
pusha
aam
cmp
nop
cmp
push
sbb
out
pop
pop
loope
dec
inc
mov
test
pushf
inc
push
test
dec
jno
lahf
loope
ucomiss
mov
inc
or
add
ret
outsl
xchg
mov
mov
out
int
lods
adc
bound
fwait
cmpb
pop
mov
addl
pop
int
pusha
adc
lret
xor
pop
cwtl
push
push
movsb
mov
jmp
scas
pop
sbb
inc
cwtl
push
in
addr16
shlb
outsl
xchg
push
dec
scas
pop
repnz
in
pop
and
fildll
dec
inc
and
mov
divps
dec
arpl
in
xchg
insb
jge
inc
inc
out
mov
sahf
sub
lock
jl
xor
push
aad
gs
mov
gs
mov
popf
mov
or
jae
or
cmpsb
and
je
xor
jg
lahf
aas
xchg
xchg
insb
jmp
stc
xor
test
pop
fwait
mov
push
dec
jo
xchg
xchg
pop
jbe
imul
xchg
and
movb
jg
dec
adc
clc
sbb
cmpsb
mov
mov
jnp
add
lahf
mov
fisttpl
jb
rcr
cmp
jne
arpl
shll
or
out
shll
adc
ret
aad
shlb
inc
mov
pushf
dec
or
inc
popf
or
test
dec
push
mov
dec
add
js
imul
hlt
adc
mov
es
movsb
les
cmp
add
push
and
jmp
popf
lods
cli
xor
rorl
sbb
push
lahf
dec
push
cli
loopne
inc
loop
push
fdivrl
mov
in
xchg
dec
pop
psubb
xchg
cmp
lcall
or
fwait
stc
cli
or
cmp
pop
je
sti
cmp
adc
and
nop
ljmp
and
jecxz
mov
ds
dec
add
sub
pop
add
jge
xchg
lret
popa
insb
std
push
cmp
push
test
inc
ljmp
add
mov
lock
stc
mov
repz
loopne
mov
pop
xor
aaa
mov
or
mov
dec
xchg
in
rorb
les
pop
mov
mov
cmp
and
and
in
jl
scas
jno
mov
sti
nop
sub
ss
dec
inc
push
inc
mov
sub
shl
push
je
repz
mov
inc
aaa
sahf
movsl
lea
push
dec
mov
rcll
cmp
loopne
pop
pop
jp
adc
push
pop
xor
leave
aaa
mov
cmp
sbb
mov
je
mov
fbld
loopne
stc
sbb
jmp
and
test
and
and
xchg
push
xchg
xor
mov
cmp
cmp
mov
fisttpl
ja
sbb
jge
popf
out
xchg
add
push
enter
aam
mov
repnz
adc
stc
outsl
out
shll
stc
jle
ret
popa
mov
call
mov
andl
mov
cmpsl
mov
mov
mov
push
repz
mov
inc
xor
in
dec
jl
xchg
mov
int
aas
test
pop
mov
dec
inc
mov
jecxz
dec
lahf
out
aaa
inc
add
ja
insb
mov
add
dec
xor
mov
jbe
testb
inc
push
rol
sbb
test
lods
xchg
push
xor
scas
dec
dec
sbb
add
gs
add
arpl
adc
xorl
xor
andb
in
mov
mov
call
lea
pop
sub
daa
and
mov
ffreep
shlb
nop
xchg
pandn
dec
cmpsb
push
int3
fwait
mov
stos
mov
ja
pop
sti
shll
mov
test
pop
adc
push
xor
dec
or
outsl
xor
fdivl
ret
jo
cmp
xchg
push
inc
add
or
sbb
es
sub
aaa
xchg
jecxz
bound
imul
mov
adc
fstpl
ljmp
repnz
mov
mov
push
iret
rorl
sbb
lods
dec
dec
pop
and
xlat
sbb
mov
dec
adc
add
jo
sbb
pop
xchg
jmp
cld
xchg
pop
jmp
jno
xchg
addr16
daa
jge
mov
push
inc
insl
dec
pop
jae
fs
shll
sub
daa
outsb
inc
add
add
and
sarl
fcoml
loope
sub
imul
iret
cmp
and
mov
mov
xor
dec
pop
mov
cli
movsb
fs
cmp
movsl
cmp
ss
push
or
hlt
pop
aas
out
push
test
push
jecxz
pop
enter
pop
mov
xor
and
push
inc
fwait
ds
cwtl
jl
ljmp
xor
lret
pop
dec
sti
mov
mov
mov
mov
dec
and
in
mov
call
out
clc
rcr
pop
cld
mov
inc
push
sbb
jmp
outsl
xor
or
fidivrs
cli
add
adc
icebp
or
jmp
rorl
xchg
hlt
out
sub
push
call
inc
cld
out
repz
aad
out
xor
cmpsb
notb
add
test
jo
and
push
fwait
mov
ljmp
push
test
push
int
ffree
jb
add
sarb
jp
arpl
and
imul
jbe
test
stos
adc
addl
jmp
fcmovb
mov
loope
push
jnp,pt
jbe
outsl
lret
test
push
test
mov
mov
outsb
iret
and
hlt
test
xor
lds
shlb
adcb
int3
call
push
outsb
sti
xor
cmp
orl
cld
inc
ja
push
adc
lods
cld
shlb
xor
dec
and
push
orl
in
xor
movups
mov
push
imul
xor
add
adc
sub
enter
or
scas
xchg
iret
aaa
or
sbb
cli
jno
jbe
enter
dec
fs
add
ljmp
inc
jg
xor
out
aad
lods
push
nop
dec
addb
sub
mov
mov
inc
mov
outsl
enter
xchg
mov
mov
inc
cld
aaa
sbbb
leave
xchg
in
sbb
xchg
push
push
daa
push
mov
inc
xchg
divl
and
add
mov
jge
mov
and
mov
jl
loopne
in
sahf
cmp
push
pop
mov
push
test
js
lcall
out
stos
ss
xchg
scas
inc
arpl
ds
fucom
add
inc
cmpsl
fstps
clc
lea
je
push
subb
or
or
incb
jmp
jo
fsubl
push
xchg
mov
push
pop
mov
inc
mov
cmp
dec
push
add
jo
pusha
int3
test
push
and
xor
xchg
xchg
pop
jg
pop
jecxz
mov
aas
mov
aam
cli
xor
jne
xchg
int3
push
jo
push
dec
flds
xchg
mov
cmp
dec
and
sbb
mov
dec
je
loop
leave
push
lret
jle
or
mov
fnstsw
adc
push
aas
mov
push
cmp
ja
xchg
xchg
in
scas
add
jge
add
and
ret
mov
push
hlt
xchg
cmpsl
sbb
inc
in
xchg
xchg
rorb
xchg
lock
ss
test
div
xchg
or
jo
cmc
imul
xor
push
jne
daa
cmpsb
pop
push
negb
test
pop
orl
add
rclb
aam
testb
nop
adc
adc
iret
mov
data16
mov
jnp
push
jo
lret
insb
sbb
int
sbb
arpl
jl
pop
std
scas
aam
rorl
and
jl
jnp
popf
fdivrp
test
push
xor
test
addr16
inc
mov
lea
push
pop
pop
sahf
push
mull
pop
mov
cmpsb
mov
xorl
dec
inc
xchg
mov
mov
and
loop
mov
bound
lahf
jmp
dec
xchg
pop
add
or
fimull
cmp
cmp
or
xchg
mov
mov
clc
pop
push
stos
fdivl
lds
push
cmpsb
or
fwait
dec
rorb
into
data16
scas
rorb
incl
iret
in
rcrl
inc
pop
jmp
push
pop
adc
sub
push
sub
xlat
stc
loop
inc
imul
cmpsl
mov
xor
popa
jae
daa
scas
add
dec
xchg
pushf
xor
insb
dec
int3
mov
push
inc
jg
jb
test
insl
cmp
mov
lock
inc
mov
xor
pop
or
insl
cmpsl
addr16
jl
inc
stos
cs
mov
and
ds
cmp
jo
cmpsl
pop
xchg
sub
adc
testl
pop
std
or
xchg
xchg
sbbb
pushf
lahf
cmp
repnz
fbstp
xor
scas
aam
sub
aad
xor
incl
dec
std
adc
dec
rcrb
lret
cltd
cld
movsb
xchg
adc
int
insb
and
push
clc
pop
xor
fs
clc
fsubrs
mov
test
cmc
xchg
mov
gs
setle
fs
or
adc
out
shl
mov
loopne
xorb
or
sti
mov
scas
inc
xchg
in
ret
mov
lds
mov
stc
cmp
testb
sbb
ss
and
testb
and
nop
inc
xchg
in
mov
and
jno
jl
dec
ja
rcrb
sub
outsl
mov
pop
inc
jp
pusha
ret
jmp
push
mov
mov
ss
pop
imul
xchg
adc
int3
mov
aaa
cs
popa
sbb
arpl
push
adc
fmuls
adc
mov
jne
push
sbb
push
push
es
dec
std
pusha
fiadds
jecxz
mov
pop
or
in
data16
inc
inc
mov
dec
mov
mov
cmp
shl
shl
outsl
iret
xrelease
cmpsb
sbb
adc
mov
jno
inc
jp
nop
cmp
arpl
cmp
idivb
addr16
dec
dec
or
jns
fisttps
test
cmp
ss
mov
mov
cmp
shlb
xor
pop
outsb
loopne
inc
mov
sbb
ret
in
cmovle
cmp
pop
int3
inc
jecxz
repnz
popf
jb
cmp
sub
orb
inc
dec
test
dec
outsb
ss
repz
das
jbe
mov
test
cmpsb
mov
inc
insb
outsl
xor
push
scas
cmp
sub
sahf
in
jno
pushf
cmp
mov
jle
rcll
inc
aaa
mov
pop
mov
inc
xor
pop
clc
add
mov
sti
push
in
jo
stos
mov
jmp
mov
movsb
pushl
xor
xor
cmpsb
repnz
scas
ficoms
xchg
out
ds
mov
std
add
jg
loop
aad
xor
pop
ret
cmp
je
fisubrs
adc
test
cwtl
mov
mov
mov
mov
jp
pushf
push
stos
mov
pop
push
add
mov
movsb
add
sbb
jno
inc
sub
rolb
adc
js
or
xchg
lahf
or
mov
js
sub
xor
cltd
std
fstl
jmp
ret
or
jno
or
xor
or
adc
add
inc
incl
fwait
mulb
out
jp,pt
add
shrb
pushf
mov
ss
stos
arpl
mov
aas
and
insb
mov
xlat
loopne
mov
jns
pop
push
clc
cmpsb
movsl
dec
cs
cmpsl
outsb
mov
mov
mov
call
nop
or
inc
call
in
popf
jle
xchg
inc
frstor
imul
lret
popa
lcall
and
xchg
or
sub
mov
xor
lods
in
out
jle
adc
mov
out
lahf
mov
sahf
ret
imul
shlb
addb
data16
mov
xlat
dec
push
test
push
insb
scas
pop
cmpb
adc
shr
int
push
xchg
cmp
push
popf
lock
insl
pop
clc
xor
aas
shll
mov
test
aam
test
cmp
iret
push
orb
lahf
push
in
sbb
and
and
jge
xchg
in
jle
add
bound
imul
jo
lods
mov
dec
shl
rcll
push
leave
addb
push
jnp
inc
lock
add
jecxz
inc
adc
out
jo
addr16
dec
pop
cmpsl
lea
jle
xlat
dec
shl
andl
icebp
jecxz
popa
bound
lea
push
or
and
sbb
out
neg
or
imul
mov
mov
in
xchg
aad
lret
xor
pop
adc
sub
bound
mov
xchg
fmul
mov
leave
insb
cmp
inc
scas
sub
push
int3
add
push
push
mov
xchg
inc
lret
stos
pop
mov
sub
ror
add
mov
xor
sti
lock
sbb
and
jmp
pop
lods
nop
and
orps
mov
das
fisubrl
repz
hlt
xchg
jl
jp
add
pop
push
add
dec
add
cltd
add
fwait
sbb
adc
mov
sub
inc
cmp
mov
add
les
cmp
and
das
out
lods
mov
scas
or
cmp
mov
or
ds
lds
sbb
pushf
nop
pop
insb
daa
int3
cmpl
jb
loope
js
cmpsl
scas
mov
mov
sub
sub
imul
xchg
imul
sbb
xchg
jne
jle
imul
push
jo
cs
push
insb
adc
xlat
mov
lahf
xchg
movsb
sub
les
push
pop
xor
repnz
imul
das
sub
out
jge
movsl
es
mov
pushf
mov
int3
pusha
cwtl
lock
xlat
mov
nop
dec
xchg
add
pop
mov
sub
movsb
in
dec
pop
fwait
inc
cmp
xchg
pushl
imul
jae
mov
mov
mov
push
sub
shlb
lahf
outsl
push
je
or
es
mov
pop
stos
js
mov
inc
fwait
in
stos
arpl
and
jg
mov
mov
cwtl
pop
aas
mov
cmp
sub
adcb
mov
cmp
sub
or
sub
and
gs
addr16
add
popa
mov
push
test
xor
jg
push
cmpsb
insl
loope
aas
xor
scas
push
int3
push
push
adc
out
push
movsl
push
pushf
push
mov
mov
dec
xor
xchg
loop
lcall
aam
inc
pop
lds
int
pop
or
dec
int
stos
pusha
mov
add
aad
dec
or
jecxz
adc
xchg
cmpsl
jne
in
jae
mov
arpl
inc
xor
mov
gs
xchg
push
enter
aad
imul
inc
imul
lcall
mov
scas
xchg
es
mov
sbb
cld
fsub
stos
mov
out
scas
xor
sbb
ficoml
add
int
mov
xor
ss
jl
push
sub
xchg
pusha
push
inc
xchg
push
lahf
sbb
pop
adc
sbb
rcrb
and
mov
jge
int
decb
push
dec
push
loopne
int
lea
xchg
cmpsl
shlb
add
into
js
adc
fldl
push
arpl
aad
jbe
mov
dec
repnz
xlat
lgs
and
fldt
adc
sbb
lahf
mov
test
add
shll
fbld
pop
movsl
mov
lods
mov
push
mov
cli
mov
js
xchg
push
xor
dec
iret
int
ss
inc
int
jno
pop
lock
dec
lods
sub
scas
cmpsb
push
mov
leave
mov
cmp
fwait
inc
orb
stc
dec
pushf
pop
mov
jo
dec
repz
sarb
xchg
rcr
mov
fildl
sbb
cmc
cmp
sub
xchg
sbb
cmp
xor
cmp
out
loopne
ds
or
test
pusha
addr16
out
mov
mov
mov
fsubl
xorb
push
lods
sub
pop
out
jmp
fisubrs
xchg
ljmp
int3
popf
cmp
inc
push
dec
cltd
enter
adc
mov
aam
popa
push
call
dec
fdivr
test
push
adc
into
stos
hlt
fnsave
jmp
cli
ss
out
inc
add
inc
icebp
xchg
andb
cmc
xchg
push
and
adc
dec
add
out
xor
repz
fnstenv
pop
mov
cmp
xor
xchg
clc
or
fmul
jns
mov
mov
outsb
fsubl
sbb
xchg
into
insl
xchg
mov
jmp
jae
lret
xlat
pop
jnp
cwtl
sub
fdivrp
dec
mov
loopne
ds
adc
enter
jmp
addl
repnz
dec
push
rorb
hlt
push
lahf
out
enter
xor
mov
lret
outsl
in
cs
inc
add
cmpl
jl
popa
adc
ljmp
jmp
mov
xor
dec
in
stos
and
jmp
pop
lret
nop
mov
xor
int
pop
negl
filds
xchg
pop
mov
cmc
dec
jmp
jmp
test
inc
pop
jecxz
mul
sti
xchg
add
fidivrl
lock
sub
les
sbb
stos
cli
cld
lcall
test
push
mov
and
out
lcall
hlt
fwait
mov
sub
aaa
mov
xor
rcrb
push
movsl
leave
lret
stos
sarl
lds
gs
loop
negb
outsb
pop
xchg
movsl
jge
pop
cmp
xchg
lret
call
add
movsb
mov
nop
insl
cs
xor
test
cmp
mov
clc
dec
pop
in
ds
lret
mov
cmp
mov
xchg
push
jb
iret
stos
pop
jbe
addr16
xchg
lods
xorb
bnd
insl
or
jl
not
adc
stos
ror
dec
loopne
lret
roll
test
sbb
sti
xor
pop
pop
loope
add
push
pop
mov
aad
les
sbb
or
fsubs
std
cmp
iret
sbb
and
loop
add
enter
addb
sbb
jns
aam
in
sub
scas
push
add
pop
mov
shl
cmp
xchg
aad
sub
mov
or
mov
out
and
pushf
inc
jle
jb
ficoml
xor
ss
or
lods
shll
lock
inc
jecxz
arpl
out
jb
popf
das
mov
notb
jns
pop
movb
xor
adc
roll
imul
mov
or
xor
inc
int
adc
or
push
sbb
data16
aam
xor
rorl
loope
lock
dec
sbbl
or
adc
jle
jnp
dec
sahf
out
call
scas
adc
mov
jb
jmp
clc
cmp
xchg
lret
imul
popf
das
arpl
aad
push
dec
jno
or
sub
pop
lds
fmuls
rcl
push
lds
or
jg
orl
mov
int
dec
pop
xor
stos
aad
xchg
jb
pop
push
cs
rcll
in
pop
dec
or
add
ljmp
mov
xor
mov
sub
xchg
fs
inc
inc
jne
out
push
mov
int
jecxz
sbb
es
test
push
popa
fucomip
in
andl
mov
pop
repz
and
js
fmul
xor
or
xchg
push
mov
popa
xor
aaa
cmp
mov
sahf
test
mov
cmp
cmpl
shrb
inc
mov
jecxz
cmc
sbb
push
dec
test
xchg
jge
pop
mov
sbb
cmp
or
cmp
aaa
lea
andb
pop
out
test
jbe
inc
jg
les
pop
adc
pop
sub
shlb
int
int3
stos
pop
xchg
lret
sub
enter
in
fwait
insl
push
or
subl
xchg
mov
je
sbb
sub
pop
and
cmpsb
cmp
lods
pushf
das
jae
scas
int
arpl
pop
adc
sbb
ret
mov
call
out
sbb
adc
xor
subb
mov
sub
lea
ljmp
mov
enter
icebp
iret
lock
wbinvd
xchg
xchg
out
mov
add
inc
cltd
bnd
sbb
out
cli
fbstp
ret
scas
or
sub
jmp
sub
ficomps
xchg
dec
js
iret
dec
cmp
loope
call
leave
pushl
fadds
addr16
aam
jns
aad
in
adc
mov
inc
femms
sarl
dec
push
imul
out
push
mov
call
pop
or
mov
adc
test
inc
int3
mov
pop
aas
out
imul
adcl
movsl
jne
int
inc
add
cld
push
call
and
jge
scas
js
es
xchg
add
fwait
movsl
pop
push
arpl
nop
cmpsl
pop
rorb
pop
pop
inc
push
lcall
pusha
xchg
mov
stc
cmpl
fsincos
jg
pop
adc
xor
ret
mov
add
in
or
xchg
inc
mov
or
pop
mov
dec
cld
leave
inc
mov
or
adc
aad
mov
mov
mov
cwtl
mov
inc
mov
movsb
js
es
adc
mov
pop
jne
push
inc
std
popf
pusha
ret
dec
lcall
pop
into
lds
inc
add
xlat
xor
testl
test
fst
das
aam
mov
xor
or
outsb
sub
mov
outsb
addr16
mov
ljmp
fdivr
xchg
jae
arpl
jno
adc
dec
getsec
cmpsb
out
fwait
mov
call
pop
lar
push
xchg
lds
mov
aas
sbb
in
int
jb
push
inc
shlb
inc
shrl
les
scas
outsb
stc
movsl
test
mov
stos
nop
pop
lret
mov
xor
subb
shll
dec
divl
mov
test
mov
subl
pop
pop
push
xor
mov
les
jmp
lret
pop
loop
cmpsb
xor
std
out
add
or
pop
adc
push
pop
fistpll
inc
test
nop
jae
in
or
movsl
icebp
cmp
push
imul
add
push
pop
lods
xchg
push
aad
outsb
pop
lahf
and
push
cmp
sub
push
outsl
jns
sub
jmp
in
jne
xlat
cwtl
test
fsubr
cmp
popf
lock
out
mov
xchg
inc
mov
ret
pop
pop
in
std
sub
jg
dec
xorl
sbb
inc
jecxz
fbld
loop
xchg
fsubr
mov
loope
pusha
dec
sub
clc
push
scas
test
divl
pusha
aad
cmpsb
inc
fwait
jnp
cli
and
fmulp
into
sub
lock
xchg
test
call
iret
or
push
pmuludq
hlt
or
dec
jno
jbe
rolb
add
mov
loopne
mov
in
in
popa
scas
fcmovb
gs
jo
stos
adc
in
add
ljmp
push
cmp
sbbl
test
pop
test
push
subb
fildl
sbb
push
in
xchg
mov
ret
jae
or
sbb
loop
out
jae
out
jmp
dec
repnz
sti
mov
lods
negl
fs
pop
pop
xor
adc
jb
push
jns
jb
xlat
jbe
fistpll
out
test
sbb
mulb
jb
pop
jmp
icebp
pop
xchg
or
outsb
stos
ljmp
insl
mov
lock
hlt
xchg
xchg
arpl
test
cmpsl
rorl
into
repnz
jns
mov
bound
add
insl
hlt
ss
imul
push
int
push
push
mov
hlt
add
pop
cmc
pop
add
jle
dec
fldenv
imul
ja
int
test
int3
jg
inc
repnz
sub
sbb
repnz
pop
or
test
jae
jle
xor
es
xor
xchg
push
jmp
jg
sub
push
cmp
movsb
repnz
daa
movntq
scas
jno
jp
daa
arpl
mov
mov
fwait
insl
push
inc
out
pop
adc
negl
stc
and
cmpsl
testl
mov
or
push
mov
jle
xchg
adc
push
jne
lret
and
js
sub
repz
fisttps
and
pop
sbb
jbe
add
rcll
mov
mov
push
cli
stc
daa
pushf
insb
add
out
mov
dec
mov
lret
mov
jle
inc
mov
pop
mov
jle
dec
cs
push
mov
jae
xchg
stos
lods
inc
ss
orb
dec
dec
int
xchg
je
mov
int3
xlat
push
sub
and
mull
lods
into
mov
sbb
sub
lea
mov
push
fdivl
push
adc
fsts
inc
mov
cld
sub
sub
scas
sub
inc
test
mov
mov
pop
enter
enter
das
mov
xor
adc
in
mov
frstor
movb
scas
and
xor
pop
mov
mov
popf
test
pop
sub
in
rcrl
or
mov
or
repz
call
jno
xor
aad
xor
call
jecxz
aas
jne
loop
in
fwait
push
push
hlt
scas
roll
push
sub
jne
push
cld
insb
mov
mov
packuswb
pop
cmp
push
dec
scas
stc
cmp
leave
imul
xor
ficompl
decb
ss
mov
inc
pop
leave
jmp
iret
arpl
lods
pop
cli
push
cmp
sub
mov
outsb
pushw
or
mov
cltd
out
daa
or
out
sub
shlb
jg
cwtl
pop
mov
push
jl
lods
flds
in
jecxz
adc
mov
sub
mov
movsl
sbb
sub
les
push
fwait
hlt
xor
inc
sbb
add
sarb
or
mov
xlat
out
aas
mov
cld
or
test
mov
mov
inc
cmp
mov
fs
sbb
dec
cltd
mov
cmp
jo
push
jns
pop
popf
mov
add
mov
pop
jmp
data16
xor
add
int3
and
cmp
dec
jecxz
test
mov
pushf
sbbb
sub
jp
or
or
repnz
sbb
add
incl
stos
int3
pop
jb
mov
or
loope
xchg
inc
fstps
mov
out
sti
pop
adc
mov
sbb
pop
mov
jo
neg
add
inc
xor
ja
mov
lret
fstpl
push
aad
inc
pushf
and
mov
mov
sbb
mov
cmp
xor
mov
popf
inc
inc
divb
test
xchg
mov
and
push
loop
arpl
cmp
bound
inc
add
test
call
adc
push
mov
xor
mov
sbb
pushf
cmp
jp
ds
pop
or
pushf
bound
inc
and
stc
xor
mov
or
pop
xor
xchg
or
mov
push
test
stos
mov
js
out
adc
push
pop
fcmove
orl
inc
jmp
repnz
call
add
jae
xor
mov
clc
jp
lret
es
adc
outsb
cmpsb
push
xlat
cmpsl
clc
sbbb
outsl
mov
subb
sti
sub
into
insl
test
inc
leave
orb
addl
inc
insb
push
ja
jnp
adc
mov
stos
jle
mov
push
mov
lods
cltd
in
outsb
push
fs
test
xlat
insb
adc
jae
scas
or
xchg
pop
aam
mov
test
clc
pusha
dec
xchg
cwtl
lock
and
lcall
pop
mov
ja
mov
fs
shll
imul
fs
int3
pusha
lock
cmpsl
shl
test
pop
cmp
jb
ficoms
test
call
add
ds
jno
das
cmpsl
cld
inc
outsb
push
das
or
scas
inc
and
fldt
mov
lock
jns
mov
inc
dec
mov
push
fsubl
push
iret
push
jge
mov
in
lods
cmc
dec
adc
add
fwait
dec
xchg
fidivl
out
aas
je
mov
xor
cmp
mov
mov
int3
adc
push
mov
daa
shrl
pop
xchg
sahf
xchg
loop
inc
adc
mov
in
dec
rol
or
arpl
adc
jecxz
lods
dec
lods
out
sub
and
push
mov
inc
pop
sub
call
adc
mov
push
les
xchg
scas
nop
lea
lds
jne
jno
imul
ss
loop
and
enter
imul
iret
jg
inc
push
mov
rcrl
dec
xchg
inc
mov
ss
fiaddl
nop
mov
xchg
test
mov
ja
jb
or
jbe
sbb
mov
mov
repnz
jmp
mov
add
mov
or
xor
push
sub
notb
lahf
add
xchg
mov
xlat
cmp
cli
dec
add
push
or
mov
in
je
adc
fstpl
and
jl
fs
leave
mov
mov
call
mov
push
dec
jne
hlt
jae
xor
sbb
pop
xchg
push
jp
ret
lock
dec
dec
mov
fisubrl
cmc
mov
fisttps
out
popa
sub
push
adc
fidivrl
push
cmp
fimuls
and
nop
pusha
xor
pop
fs
lods
add
shll
cld
or
loope
pop
loopne
mov
das
es
mov
jb
js
push
notb
pusha
dec
out
loopne
inc
xchg
dec
stos
insl
lock
sub
pop
push
mov
mov
out
jbe
jp
idivb
mov
mov
inc
stc
loope
xchg
sub
out
scas
xor
dec
out
movsl
jp
lcall
inc
test
sbb
mov
or
insl
push
popf
jmp
roll
daa
sbb
out
out
dec
frstor
daa
jl
int
mov
xlat
mov
in
jg
dec
adc
cltd
mov
loop
les
in
cmp
cmp
pop
push
dec
inc
adc
pop
out
or
arpl
jp
daa
jmp
int3
mov
repz
mov
sti
hlt
mov
testl
adc
ret
push
add
xchg
jmp
fisubrs
out
dec
xchg
and
cmp
stc
hlt
cmpsl
cltd
pop
sub
ljmp
mov
xchg
mov
aas
lds
lds
mov
jne
sbb
cld
addr16
das
repnz
repz
mov
shl
imulb
fsubs
pop
loopne
lea
movsb
insl
bound
outsl
mov
xchg
pusha
sub
xchg
lret
cmp
lock
mov
or
dec
fsubr
fiaddl
mov
xor
dec
jb
add
cmc
or
jg
stos
push
jmp
lahf
sub
xchg
fidivrs
pop
int
sbb
shll
cmp
cmpsl
fstpt
dec
lods
daa
push
adc
gs
mov
push
sti
xlat
mul
mov
ret
mov
xchg
jg
mov
sbb
es
mov
jns
add
pop
imul
xor
hlt
lret
cld
iret
inc
shr
lock
push
mov
cmp
flds
or
sbb
stos
mov
test
and
pushf
or
push
inc
aam
pop
pop
cmp
mov
lea
pop
push
fwait
and
enter
leave
aas
sbb
push
adc
data16
and
mov
jns
xchg
sub
jns
cs
inc
faddp
shlb
adc
scas
pop
cs
movsb
push
xor
push
and
push
push
jge
and
inc
xor
jl
and
mov
dec
sub
out
les
push
cltd
enter
scas
rcr
push
addr16
xchg
fsubr
mov
and
mov
jp
lds
nop
movsb
xor
xchg
gs
jbe
orb
xor
add
cwtl
and
mov
outsb
outsb
dec
and
add
jp
in
adc
adc
insl
lods
and
adcl
lret
lret
add
cmp
aam
call
cmp
sarl
mov
test
mov
push
cmp
push
ja
out
fs
cli
into
dec
pop
addb
cmpsl
fstpl
pop
or
lret
sahf
lcall
and
popf
pop
stos
add
roll
jge
mov
fldt
jae
ds
sub
mov
in
aas
pop
pop
or
lahf
movsb
int
push
mov
jmp
loope
jge
fwait
ss
sbb
lret
cmp
cld
xchg
inc
cmc
add
out
js
dec
outsl
fsubs
mov
sahf
filds
outsb
xlat
push
xchg
inc
mov
xor
adc
pop
pop
xor
mov
mov
jge
in
xchg
push
int3
movsb
mov
aad
imul
lock
neg
xchg
jnp
jb
xor
cmp
xchg
hlt
cmpsb
lret
int3
cwtl
movsb
mov
daa
lahf
movsl
push
sar
cmp
lods
pop
fbld
into
pop
mov
arpl
push
push
cld
inc
inc
insl
ja
outsl
xor
push
jmp
fs
movsb
and
pusha
jns
aaa
icebp
mov
je
popf
stos
fwait
int
cli
test
sahf
sti
jae
push
inc
test
mov
in
adcb
jl
test
les
xchg
std
push
out
loopne
pop
jo
cmp
add
lret
xorb
xor
jge
aam
bnd
jbe
popa
lahf
or
or
stos
ljmp
jns
push
js
pop
pushf
xchg
mov
imul
lret
dec
lock
shrb
push
call
das
jno
ljmp
xchg
xlat
fisubrl
into
leave
push
into
xchg
add
inc
jnp,pn
cmp
xor
daa
test
jmp
dec
add
push
fisubs
out
mov
adc
jmp
stos
jg
adc
imul
or
xchg
movsb
loopne
add
loop
gs
inc
dec
das
scas
push
loope
dec
jecxz
pop
inc
push
dec
decl
shll
sbbl
xor
sub
rcrl
sbbl
adc
xor
xchg
cmpsl
insl
out
into
xchg
cmp
xchg
inc
pop
mov
outsl
xchg
pop
xchg
adcl
mov
or
mov
add
add
movsl
hlt
frstor
sysenter
xor
mov
add
fisttps
mov
adc
std
xchg
ret
mov
and
pop
popa
jmp
shll
mov
cmp
inc
sbb
pop
xor
icebp
pop
sarb
pop
repnz
pop
jle
sub
cmpsl
jl
aaa
add
inc
mov
mov
mov
sub
leave
loop
jmp
mov
stc
dec
pusha
dec
mov
andl
pop
shlb
and
int3
fwait
icebp
cmpsb
mov
jecxz
dec
hlt
cltd
push
inc
xor
mov
in
orl
adc
clc
mov
push
push
mov
loop
out
sbb
inc
xchg
push
sbb
cltd
je
add
popa
fisubrs
push
mov
pop
xchg
lahf
cld
loopne
idiv
mov
std
jnp
push
stc
adc
cmp
mov
fcom
or
sbb
fwait
mov
cli
cmp
push
mov
sub
mov
mov
push
xor
fists
cmp
cli
adc
pop
xor
lret
lds
push
mov
ret
adc
nop
pushaw
mov
and
cpuid
rorb
jle
cld
push
ljmp
stos
pop
or
cmpsl
loop
cwtl
das
xchg
cmp
sub
sbb
nop
and
pop
or
or
push
sub
push
imul
sub
aam
jbe
roll
int
inc
sub
sub
int
mov
cmp
push
cmpsb
mov
in
mov
stos
outsb
xchg
aam
cli
and
outsb
sub
jg
sar
insb
jbe
cmp
in
or
sbbb
sub
add
aam
repnz
fildll
dec
adc
pop
cmp
mov
mov
cmc
xor
xorl
xor
add
pop
xchg
xor
je
mov
xor
inc
mov
mov
test
sarb
enter
pusha
mov
lret
gs
adc
lahf
push
iret
out
mov
ds
loope
mov
push
adc
mov
dec
imul
and
sahf
lds
jno
jg
xchg
inc
out
aam
cld
inc
xor
or
shrb
and
xorl
adc
add
rcl
ja,pn
in
outsb
ljmp
sub
sbb
sbb
xchg
jmp
cmpsb
lret
push
adc
imul
sbb
cmpsl
icebp
cmp
out
mov
popf
das
or
imul
mov
add
cwtl
xchg
cli
xchg
xchg
jb
add
push
lahf
sti
mov
or
lret
mov
stc
mov
aas
push
frstor
mov
dec
adc
sbb
shll
inc
dec
push
repnz
js
fdivs
cli
sub
fdivs
cli
imul
pop
aas
fnstcw
pop
int3
loope
sbb
or
lock
lahf
mov
mov
xor
or
add
pop
out
lock
xchg
call
std
gs
mov
mov
out
sub
xor
adc
jl
fdivrl
sub
jae
pop
dec
or
arpl
ja
sub
rcrl
xchg
sarl
mov
xchg
cmp
push
lret
repz
inc
or
data16
movsb
das
fnsave
mov
dec
fcmovb
cmp
addb
insl
jno,pn
cmp
mov
xor
xor
std
dec
jmp
arpl
fwait
test
aaa
push
movsb
jno
ret
jl
pop
push
fistpll
pop
lea
jl
outsl
subb
add
xlat
lds
and
push
lds
pop
lret
movsb
add
sbb
add
andnps
dec
mov
jb
imul
mov
push
addr16
dec
test
shl
xchg
and
mov
ret
xchg
pusha
in
popa
xchg
int
xchg
mov
mov
fcomp
mov
sahf
daa
adc
leave
sub
stos
sub
xorb
addr16
push
sahf
fbld
fnstcw
mov
mov
mov
fcomps
pop
das
cmp
dec
mov
fstpl
imul
mov
mov
dec
pop
nop
push
call
iret
sub
lea
mov
mov
xor
shlb
xchg
pushf
push
pop
pop
addl
sahf
pop
adc
push
shlb
lds
push
cmc
jbe
sub
jne
ficomps
xor
lret
loop
pop
test
cmpsb
mov
imul
adc
inc
sbb
adc
fs
sbb
lahf
iret
adc
jmp
mov
pop
mov
sbb
and
shlb
out
mov
int
fcompl
gs
ljmp
jne
rorl
inc
fwait
push
jae
std
jno
aaa
mov
int3
sub
icebp
xchg
xchg
push
rolb
enter
or
enter
adcl
push
mov
ss
daa
addr16
xor
dec
movsl
inc
fwait
mov
jle
xchg
cmpsb
outsl
gs
shrb
dec
xor
mov
lret
aam
jecxz
loope
aam
push
iret
dec
imul
ret
mov
dec
pop
xchg
into
ds
sub
mov
inc
sbbb
add
ja
push
insb
jno
ret
test
lock
loopne
shlb
out
sahf
mov
xlat
cmpsb
enter
in
cwtl
imul
or
dec
clc
sbb
int
jbe
jg
mov
jle
stc
sarl
cmpsl
fs
shll
lea
lock
orl
pop
and
cmpsb
push
pop
imul
xchg
fldt
jg
sub
lock
repz
jbe
lret
sub
lods
gs
fisubs
data16
pop
adc
imul
mov
mov
mov
out
sbb
ja
mov
jae
bound
cmp
stos
aam
xor
pop
xchg
sbb
xchg
das
mov
mov
mov
test
push
daa
mov
stc
mov
ljmp
in
dec
test
dec
push
ds
sbb
outsl
mov
rorb
dec
mov
mov
stc
idiv
dec
mov
int3
mov
inc
or
mov
clc
and
andb
mov
cmp
cmp
es
mov
lret
aas
js
mov
xor
int
inc
mov
mov
mov
xor
pop
fisttpll
dec
pop
fwait
mov
cld
aas
pop
xlat
inc
icebp
popa
sbb
call
mov
outsl
push
cmp
xor
dec
jns
pop
pop
xor
jne
mov
pop
movsb
adc
jo
imulb
test
mov
jecxz
imul
mov
loopne
into
nop
leave
and
movsl
ret
stos
push
paddsb
repnz
jbe
mov
lea
push
daa
pop
lret
nop
mov
cmp
push
mov
arpl
dec
sbb
out
rclb
jns
aam
xchg
dec
dec
jg
clc
das
jge
sarb
xor
mov
imul
pop
mov
sub
popa
pop
int3
fs
or
mov
or
push
insl
pop
jmp
push
inc
sbbb
aam
into
andl
lahf
out
jg
int
cwtl
sahf
inc
add
jbe
inc
rcrb
dec
xor
mov
jle
xor
cmp
fildll
test
mov
fisttpl
int
inc
aad
jnp
imull
rcl
push
popa
cmp
fisttpl
nop
enter
scas
std
loopne
sarl
mov
sbb
sbb
lock
clc
pop
mov
insb
in
xor
test
out
popf
xchg
out
pop
add
data16
inc
adc
outsb
adc
in
insb
pop
pop
ss
mov
lret
jae
rclb
pushf
push
mov
movsl
enter
pop
mov
jmp
xchg
cmp
dec
cwtl
push
sti
inc
hlt
push
pop
mov
or
leave
add
mov
adc
push
pop
pop
jp
xchg
adc
sbb
xchg
mov
dec
fucomp
int3
push
stos
xchg
jbe
adc
mov
push
add
lds
mov
xlat
mov
aaa
cwtl
in
mov
shlb
dec
jl
data16
mov
and
aad
lods
fucomp
shrl
ret
aam
les
repnz
xor
popf
cltd
xor
lret
xchg
cmpsl
mov
add
ljmp
inc
mov
pop
jl
and
mov
xor
mov
or
jge
repz
pushf
xchg
xacquire
data16
add
enter
hlt
mov
push
out
nop
sub
ret
inc
push
nop
push
fcomps
insb
je
xor
lock
cmpsl
pop
cmp
in
je
outsb
mov
sbb
ss
or
lock
jge
into
movl
daa
jp
ljmp
leave
sub
clc
xchg
sbb
int
idiv
inc
inc
ss
outsl
mov
mov
add
push
int3
in
push
cmpsl
inc
std
icebp
xchg
mov
mov
aad
stos
movsl
inc
cli
in
mov
sub
jg
pop
lock
arpl
mov
out
cmp
xor
and
fdivl
pop
jecxz
shll
mov
out
dec
push
fidivs
stc
stc
icebp
dec
rorb
arpl
pop
push
inc
aad
ret
data16
mov
xchg
xchg
mov
int3
sbb
nop
sub
xor
pop
sub
adc
add
cltd
hlt
jno
aam
fists
ljmp
or
adc
cmc
xchg
or
lret
mov
fs
push
out
pushf
shl
mov
int3
and
rol
enter
sbb
mov
testb
fiaddl
sbb
inc
and
xor
ja
stos
mov
push
pushf
and
xchg
divl
sti
mov
and
loope
cmp
insl
rorb
adc
pop
mov
incl
int3
ja
cmp
mov
out
push
sub
xor
push
push
fwait
adc
pop
xchg
mov
stos
xchg
orb
shl
mov
mov
mov
fwait
lret
jecxz
in
test
jg
push
bound
xchg
lods
in
ret
add
pushf
call
inc
scas
in
in
xchg
stc
sub
lret
mov
push
xchg
das
je
mov
inc
mov
icebp
sbb
imul
repnz
mov
mov
dec
in
xchg
jl
pop
xchg
or
mov
std
cmpsb
lds
cli
push
andl
in
dec
jmp
mov
push
mov
adc
inc
mov
and
cmp
ljmp
clc
or
mov
and
dec
and
push
push
mov
or
cmp
cmp
cmp
xor
jae
or
into
jno
cmp
aas
sub
push
push
fs
pop
dec
fiaddl
push
cld
andb
pushf
pop
scas
jmp
cmp
add
fmul
sbb
hlt
jge
cmpsl
cli
idivl
bnd
cmpsb
push
dec
sub
push
xchg
add
clc
sub
cmc
push
subb
cmp
popa
inc
out
sub
mov
or
cmpsb
lods
add
jg
pop
ret
pusha
adc
test
sbb
test
jns
and
xchg
mov
loope
inc
scas
jb
popa
negl
icebp
push
mov
mov
loopne
dec
sbb
add
inc
scas
ja
push
jns
repz
stos
cmp
sbb
adc
mov
sbb
jp
pusha
leave
clts
fwait
cmp
je
fldt
cli
adc
popf
jb
push
and
dec
xchg
push
push
arpl
rcll
mov
mov
adc
mov
mov
aad
pop
imul
pshufw
sub
jge
movsb
xchg
iret
mov
mov
mov
dec
arpl
dec
add
pop
pushf
pop
es
mov
add
in
movsl
inc
out
push
mov
std
iret
ds
mov
adc
imul
push
adc
adc
dec
arpl
in
add
push
push
inc
stos
ret
push
fptan
or
cmp
jb
out
dec
sbb
dec
out
out
adc
sub
stos
jno
add
loopne
pop
addl
pop
loop
xchg
outsl
lcall
je
dec
sti
or
lock
into
into
dec
notb
jp
mov
sub
mov
mov
dec
xchg
faddp
pop
lcall
fidivrs
loopne
out
test
or
cmp
jg
mov
mov
sahf
lahf
push
sbb
jl
cmp
jnp
lcall
clc
xchg
testb
shll
nop
mov
dec
mov
insl
mov
xor
fistl
adc
popa
mov
aaa
push
xlat
pop
mov
inc
sahf
mov
dec
repz
clc
mov
test
pop
inc
repz
adc
sbb
mov
sub
dec
add
pop
rcrb
jg
lock
fidivrs
std
mov
imul
mov
sbb
sub
or
call
dec
lock
imul
cmpsb
call
negl
lea
and
lods
and
xchg
call
adc
or
loopne
jo
in
or
mov
repnz
outsl
aas
jp
push
adc
dec
mov
or
in
xor
les
mov
filds
pop
push
xchg
inc
nop
dec
sahf
mov
push
fildl
testl
mov
repz
imul
mov
addr16
in
hlt
inc
push
pop
xchg
aam
jle
aad
sbb
outsl
cmp
outsb
and
sub
dec
int3
or
dec
mov
xor
lods
or
jmp
mov
or
adc
jmp
dec
sahf
pop
xchg
xor
and
sbb
pop
in
jb
lret
inc
and
fnstcw
sbbl
add
sbb
sbb
sahf
mov
mov
test
inc
and
aaa
inc
push
push
push
cmp
mov
inc
loope
sahf
notl
insl
push
add
cmp
dec
cmpsl
mov
ljmp
mov
sub
ret
xchg
push
adc
and
popa
xchg
mov
outsl
sbb
stc
adc
xchg
mov
jge
sub
cld
cld
in
sti
clc
mov
rcrb
or
mov
jno
in
in
sub
imul
mov
inc
pop
xchg
icebp
mov
mov
push
add
ret
sub
in
dec
add
lret
shll
mov
push
addr16
cwtl
dec
pop
jp
pop
ror
jecxz
mov
fstl
sub
sbb
lods
push
nop
sub
outsb
sub
adc
fisttps
mov
mov
mov
mov
fldt
data16
lret
loopne
js
lods
repz
outsb
iret
mov
jbe
loopne
nop
push
in
xchg
cmpsb
jecxz
les
jg
mov
push
mov
push
pop
pushf
cwtl
insb
mov
dec
jnp
dec
addr16
cmp
push
cmp
enter
adc
cmp
jnp
lea
or
in
dec
cli
divl
rorl
xchg
dec
push
push
imul
mov
aam
hlt
out
and
xchg
shrl
jae
mov
pop
mov
xor
xor
sbb
out
mov
aam
out
pop
mov
mov
and
shrb
and
pop
xchg
dec
scas
sub
sahf
adc
fldcw
add
cli
xchg
shlb
xchg
cmp
add
jo
mov
jb
insl
inc
jne
xchg
mov
test
call
mov
ja
inc
sbb
sahf
mov
jbe
dec
js
jnp
mov
jno
std
mov
cmc
push
lds
inc
xchg
bound
loope
stos
movsb
pop
xchg
out
sarb
repnz
sarb
popa
jno
enter
ror
decb
shlb
stos
cmp
jb
sub
je
int3
lods
cmp
clc
xor
xchg
stos
in
hlt
rclb
xchg
and
fistpl
pushf
mov
popa
add
jmp
dec
mov
arpl
sbb
imul
mov
mov
cwtl
mov
test
mov
xor
pop
sub
dec
pop
jae
lea
xor
jno
fcomp
mov
mov
add
pop
jb
push
jg
pop
xor
repz
xchg
mov
mov
push
int3
jb
xor
dec
mov
out
xor
mov
sbb
xchg
or
xchg
subb
xchg
lcall
cmp
call
stc
sbb
and
subl
test
pop
gs
add
adc
les
mov
xor
xchg
push
dec
sub
pop
in
popf
jo
lea
jnp
cmc
xlat
stos
lods
hlt
pop
mov
das
int3
sub
pop
adc
mov
jnp,pt
xchg
adcb
js
pop
xchg
inc
dec
loopne
das
cmpsl
jnp
sub
ja
mov
cmpsb
fsubp
adc
or
mov
sub
ds
cwtl
das
scas
pop
fmuls
in
jle
icebp
or
dec
adc
or
xchg
sbbb
push
lcall
sbb
mov
mov
sti
aas
jmp
orl
sub
fisubs
into
inc
in
mov
mov
dec
mov
and
rclb
rolb
dec
xor
inc
push
arpl
jmp
icebp
sub
mov
sarb
cld
push
cmp
lods
xchg
shl
fs
xor
mov
stos
fisubrs
pop
and
or
imul
xor
sbb
ss
es
xor
mov
jnp
xchg
rcll
mov
mov
out
lret
push
xchg
xrelease
fildl
js
rolb
enter
jo
fstl
notl
movsb
fstps
aas
pop
cs
adc
jo
pop
push
imul
orb
in
and
cli
pop
lcall
cmp
jge
and
sahf
fistpl
popf
mov
sub
xchg
in
fnstenv
loope
rcrl
or
xchg
fs
sub
jns
out
insb
mov
loop
div
leave
repnz
inc
mov
dec
std
std
xchg
mov
ds
add
jno
xchg
imul
mov
mull
stc
xchg
mov
outsl
jle
cmc
shl
cmpsb
jge
cmpsl
js
push
cs
leave
xchg
push
jmp
stos
sub
xor
std
xor
frstor
xchg
popa
push
nop
test
enter
popa
push
fwait
je
in
mov
data16
or
enter
or
jb
xchg
xchg
and
ret
xchg
nop
mov
sbb
xor
out
xchg
push
mov
xchg
cs
dec
outsl
lret
push
xor
mov
inc
in
adc
pop
add
and
xor
push
cmp
lret
and
mov
mov
inc
ds
roll
ret
aad
jle
sbb
dec
mov
scas
in
gs
movsl
xchg
out
adc
shr
dec
idivl
pop
jecxz
jns
jle
inc
or
jmp
je
xchg
cmp
xchg
es
and
mov
lods
ret
dec
mov
cmp
std
pop
sti
gs
repz
inc
pop
add
inc
aaa
dec
adc
movsl
mov
cs
lea
movsl
and
repz
aad
lahf
adc
in
push
je
stos
mov
lahf
cld
add
fiaddl
push
leave
pushf
cmpsb
jb
sbb
pop
mov
imull
popa
jp
sbb
xchg
inc
and
xchg
adc
or
xchg
mov
in
test
roll
in
cmp
ds
outsb
cmp
jp
adc
mov
cld
mov
pop
cmp
dec
dec
cmp
mov
xchg
icebp
or
xchg
cmp
cwtl
add
stos
pop
fwait
leave
fnsave
and
cwtl
pusha
pop
lods
lea
test
inc
stc
dec
jecxz
dec
movsb
cli
cmp
push
sarl
pop
xor
xor
dec
xor
xor
cmpsb
sub
in
jle
mov
dec
xchg
inc
sbb
lret
xchg
lahf
xor
jo
sahf
sub
pop
stos
cmp
inc
push
mov
imul
and
push
ret
sbb
test
into
pop
lret
stos
lcall
aam
lret
fisttpll
arpl
jp
cmpsb
cmc
dec
mov
cltd
and
and
int3
repnz
mov
push
stos
popf
inc
or
pop
sbb
stos
clc
xlat
sbb
in
sbb
pop
pop
push
xor
jl
test
mov
cmp
mov
pop
pop
mov
bound
fs
fimuls
xor
sub
lcall
inc
fs
ljmp
jbe
adcb
push
mov
out
inc
popf
movsb
insb
xchg
les
cs
sub
popf
sbb
jg
push
into
das
mov
xchg
xchg
jecxz
and
mov
gs
stos
add
jmp
cmc
movsl
cmpsb
ljmp
fildll
stc
cmp
cmpsl
shl
repnz
out
push
call
out
inc
or
outsb
mov
stc
loopne
or
add
and
ljmp
lods
xchg
aam
fs
cmp
adc
enter
out
in
cmpsl
cmp
or
lret
in
pop
clc
inc
xlat
sbb
push
jae
sbb
push
add
lret
lret
xchg
mov
outsb
mov
aad
cmp
stos
fildll
jmp
sbb
jne
and
xchg
dec
movb
std
pop
xor
aad
inc
fnop
pop
jns
imul
or
dec
xorl
xor
lret
loope
icebp
fs
sqrtps
test
or
decb
inc
ret
mov
arpl
fucompp
mov
shl
xchg
fildll
jp
ret
or
ljmp
rolb
sub
bound
sub
mov
int
push
cmpsl
leave
xor
out
and
add
pop
push
or
ficoml
or
out
push
cmp
xor
mov
je
cli
out
lret
inc
pusha
jne
sub
mov
inc
outsb
mov
add
shl
nop
and
repz
mov
jbe
or
dec
xlat
dec
push
pop
es
mov
mov
mov
lds
xor
aam
je
adc
inc
jg
rcll
fdivrl
fs
mov
mov
sbb
add
adc
out
xor
xor
dec
cli
dec
jno
in
add
enter
icebp
ja
js
sbbb
test
jo
xor
fcmovnbe
push
addr16
loopne
inc
orl
cmc
insb
int
stos
and
es
adc
rcl
sbb
sbb
pop
ljmp
and
fs
lods
xor
dec
insb
fldl
in
scas
mov
jo
sbb
jb
leave
adc
int3
mov
sub
push
or
aas
xchg
popa
faddl
es
jo
dec
pop
cmc
mov
inc
imul
push
fisttpl
pop
mov
out
inc
inc
aas
es
add
in
leave
jl
mov
call
inc
sbb
fs
sub
inc
ljmp
cmp
push
daa
out
adc
sarb
test
daa
mov
arpl
test
mov
and
pop
fdivl
mov
push
inc
cmp
test
rcrb
and
dec
xchg
pop
sub
mov
mov
rcrb
inc
push
in
repz
das
aam
or
int
and
jo
into
adc
add
pop
sub
push
test
inc
mov
imul
mov
inc
stos
jmp
push
inc
cmp
into
xchg
mov
test
call
insl
push
mov
pushf
inc
aas
inc
into
jge
jb
cmp
lahf
add
imul
push
mov
sub
fsubs
jge
call
cmp
adc
xchg
dec
mov
sbb
push
jecxz
xchg
pop
jmp
inc
cs
lret
stc
ljmp
int3
rcl
jl
in
rcr
fldt
xor
dec
xor
stos
lahf
pop
or
pop
push
dec
and
push
test
scas
sbb
inc
mov
into
adc
mov
into
sbb
cli
imul
xchg
push
sbb
mov
dec
xchg
stos
mov
dec
stos
das
inc
outsl
rcrb
or
mov
shrl
in
bnd
jp
lea
dec
cmp
push
in
sub
cmp
jmp
push
xorl
in
push
xchg
xor
sarl
fs
mov
pop
inc
in
dec
lods
cmpsb
xchg
ja
arpl
push
mov
pop
jb
popl
lea
jle
xor
cs
cmp
shrl
adc
lahf
fucomip
bound
sbb
into
pop
sub
aad
or
out
inc
pusha
int3
ret
mov
add
sub
ret
inc
stos
cs
jnp
add
or
xlat
mov
in
cmp
pusha
in
mov
lret
int3
dec
test
jmp
and
cli
hlt
js
ss
aaa
clc
cmp
mov
ret
out
inc
sub
cmpsb
sub
mov
jne
lds
dec
cmpsl
xchg
lahf
jle
and
add
movntps
in
jns
jno
mov
add
and
insl
adc
negl
rclb
rep
inc
mov
mov
aaa
adc
inc
aad
cmpsb
mov
dec
mov
andb
arpl
jmp
in
in
add
lods
add
stos
cmp
lds
pop
pop
inc
mov
addr16
lahf
jo
rorl
in
inc
and
arpl
int
pop
jmp
mov
xor
sahf
movsb
push
lcall
mov
call
dec
mov
leave
lock
call
jg
inc
out
jb
mov
sbb
arpl
dec
rcr
data16
jbe
dec
sub
rcr
push
xchg
mov
push
sahf
mov
adc
das
lcall
add
push
mov
pop
scas
sub
adc
incl
push
cmp
andb
inc
mov
sub
jp
adc
push
test
lea
xchg
int3
inc
mov
add
rclb
js
test
sbb
out
jbe
xor
lock
dec
imul
pop
jae
pusha
in
or
out
aam
jnp
js
gs
jbe
roll
cmpsl
or
cmp
sbb
stc
outsl
sbb
inc
cmp
adc
fwait
jbe
and
scas
sbb
xchg
adc
shl
addr16
sub
lock
dec
les
bound
je
adc
aaa
out
add
push
push
jmp
sbb
push
pop
push
loopne
sub
jle
fildll
xchg
pop
movl
xchg
cld
scas
pop
inc
js
iret
jno
cmpsl
dec
icebp
pop
shll
aaa
xor
lahf
pop
pop
pushl
loopne
lret
push
push
jbe
test
dec
mov
push
jp
adc
xchg
mov
iret
dec
roll
xchg
cmp
inc
outsb
insb
sub
push
outsl
rolb
add
cmp
test
cs
ja
cmp
mov
add
cmp
xor
popw
pop
mov
ljmp
cmpsl
cs
pop
adc
xchg
sub
push
mov
jne
cmc
imull
gs
mov
jbe
dec
pop
pushl
xchg
push
cwtl
dec
xor
adc
jb
pop
sub
mov
inc
ss
mov
sub
dec
pop
in
push
stos
mov
xor
mov
xchg
cmp
inc
mov
push
inc
hlt
jp
repz
sti
mov
mov
xor
insl
sbb
mov
pop
mov
inc
sub
pop
mov
adc
or
orl
ds
fwait
int
or
leave
inc
movsb
sub
pop
or
jnp
add
and
movsb
pop
sti
xchg
fistpll
xor
sahf
and
loopne
adc
mov
fisttpll
mov
sbb
orb
fcmovb
xchg
xchg
sarb
cmp
sbb
int
mov
pop
pop
cmp
fcoml
jecxz
lods
loop
test
sub
daa
shlb
xchg
cmp
xchg
mov
lret
push
push
fists
mov
mov
xor
fyl2xp1
mov
sub
and
dec
out
jno
xchg
loopne
loop
mov
pop
pop
lret
or
adcl
mov
fs
repz
cmp
or
pop
or
fiaddl
lret
aaa
pushf
lea
into
adc
clc
dec
cmp
loope
cmp
rcrl
add
in
mov
adc
pop
test
pop
iret
mov
hlt
xor
mov
pop
adc
lea
enter
cld
mov
sbb
push
dec
push
faddp
fwait
shrl
adc
in
loopne
inc
lods
jmp
xchg
mov
arpl
push
jecxz
add
xor
inc
or
jg
subl
sbb
mov
mov
inc
or
popf
mov
mov
push
repz
mov
mov
ss
or
mov
mov
push
cltd
out
out
lea
out
jl
and
pop
or
iret
pop
add
int3
dec
cmpsl
jne
ffree
lret
loope
mov
xlat
aaa
popa
cltd
rcl
pusha
ja
push
and
cmp
push
cmp
jae
mov
daa
pop
mov
xchg
insb
jl
pop
rorl
dec
mov
sub
and
mov
in
out
mov
sbb
sbb
inc
xlat
lock
mov
iret
adc
flds
mov
loopne
lea
jmp
sbb
mov
jo
rcrb
add
inc
les
xchg
mov
roll
lds
lret
sub
sarl
sbb
inc
icebp
mov
call
add
mov
inc
ret
movsb
mov
xchg
adc
dec
mov
insl
call
aaa
or
xor
movsb
push
cld
push
lahf
and
xchg
adc
mov
loop
aam
xor
push
jg
fnstenv
roll
test
imul
jle
lahf
lcall
push
std
loope
cmp
push
mov
add
adc
insl
lcall
mov
ret
imul
pop
xor
and
xchg
push
xorl
jge
xchg
hlt
imull
cmp
sub
lea
pop
pop
in
xor
ret
cs
les
mov
mov
or
bound
sbb
hlt
adc
lods
cmpsl
ret
pop
add
push
jnp
mov
lret
inc
mov
ds
out
not
lcall
sbb
jle
es
jg
orl
imul
mov
popa
jecxz
inc
out
and
je
sub
daa
ljmp
testl
cmp
repz
scas
jo
and
fsubl
adc
or
mov
jp
or
inc
jno
jnp
rcrb
mov
mov
jp
imul
fwait
rclb
xor
mov
dec
add
mov
pop
dec
xor
popf
inc
clc
mov
jge
mov
test
jno
pop
mov
jle
movsl
sub
popa
out
mov
sub
imul
inc
jno
insl
xor
scas
das
jg
jl
push
lods
push
inc
loope
sar
jg
iret
or
es
imul
fmull
cmp
insb
call
pop
arpl
adc
jmp
xchg
xor
inc
cwtl
scas
icebp
sti
sbb
sbb
jp
imul
sub
jmp
cltd
stc
pop
add
inc
add
push
inc
dec
aas
call
sbb
pop
or
mov
xor
push
dec
in
das
sbb
xchg
hlt
insb
imul
pop
sub
sbb
and
mov
imul
add
inc
std
sbb
daa
dec
push
inc
sbb
push
and
cwtl
rcrb
ret
int
fiaddl
sti
add
cwtl
cmpsl
popf
mov
aas
lds
xchg
or
gs
xchg
es
icebp
sbb
imul
out
pop
add
in
inc
cltd
loopne
aad
sub
push
cwtl
mov
pop
sbb
loopne
repz
int3
test
push
fidivrs
xor
movsb
xchg
dec
xchg
pop
fwait
pop
xor
pop
pop
test
cmp
inc
inc
insb
lret
or
jmp
or
ret
roll
std
jmp
das
and
imul
xchg
cmp
adc
or
sbb
aas
cld
lds
daa
js
cmpb
lock
in
or
imul
push
mov
pop
pusha
js
sub
fdivrp
lds
inc
pop
aam
icebp
jg
jne
mov
imul
jae
fisubl
shl
adc
push
sbb
prefetch
add
fisubrl
iret
or
pop
adc
jnp
mov
xchg
sbb
jle
ja
loope
leave
and
cmp
dec
ret
mov
mov
inc
add
pop
dec
cwtl
imul
inc
out
inc
js
push
movsb
fistps
push
mul
jnp
jns
cmp
xor
outsb
lock
and
mov
or
mov
insb
sbb
ficompl
popa
add
adc
imul
pop
mov
jbe
cmpsb
movsl
movsb
push
sub
pop
cld
lret
sahf
or
rorl
cmpl
int3
ret
sub
rcll
scas
lods
mov
pop
fwait
repz
movl
xchg
mov
ljmp
cmp
in
imul
pop
cmpsl
int3
adc
stc
mov
insl
aas
cld
inc
mov
pop
mov
inc
aaa
ja
mov
mov
xchg
jl
icebp
lds
outsb
sub
mov
lret
inc
xchg
sub
cltd
notl
jecxz
sub
push
sbb
or
pusha
inc
dec
addr16
ror
xchg
in
sub
loopne
mov
jne
mov
cmp
out
push
in
ror
adc
dec
icebp
ja
cmc
push
pushf
push
in
loope
mov
std
loope
jle
mov
ficomps
pop
pop
hlt
sub
xchg
cmp
or
pop
mov
inc
or
push
push
mov
cmp
ret
cmp
xchg
xor
cmp
gs
sub
cmp
adc
inc
cwtl
stc
jo
push
test
cmpsb
mov
mov
frstor
cwtl
cmp
sbb
adc
pop
adc
pop
mov
mov
aas
fnstenv
imul
jg
jle
enter
sub
jecxz
and
pop
mov
lock
out
pop
mov
pop
mov
mov
mov
cmp
dec
xchg
das
imul
sub
mov
jbe
sbb
xor
loop
lret
in
dec
mov
mov
mov
jae
push
xorl
inc
add
mov
jns
cli
popf
add
mov
gs
jnp
push
cli
xchg
pop
mov
xor
mov
inc
repnz
xchg
push
sub
xchg
push
mov
jae
in
aam
loope
xchg
ds
mul
cld
cmp
mov
cmp
mov
or
into
mov
push
jae
pushf
sub
sub
jle
movl
sub
cmp
and
mov
and
movsb
mov
cwtl
arpl
fmull
sbb
ss
in
clc
mov
mov
fs
fcoms
pop
gs
insb
xorb
negb
cmp
and
mov
les
aam
dec
adc
int
les
inc
adc
mov
or
sub
pop
dec
xchg
test
push
cltd
jl
call
and
push
cmpsl
insl
cmp
push
or
aaa
add
mov
jmp
sbb
test
movsb
mov
push
cmp
cmpsl
xor
xchg
adc
addr16
outsb
jmp
mov
nop
bound
enter
mov
xchg
cld
out
lret
daa
mov
sarb
add
pop
mov
and
jno
pushf
rclb
out
and
es
out
mov
out
iret
xor
jo
cmp
xchg
mov
cmp
push
pop
outsb
ljmp
dec
and
cwtl
adc
push
iret
pop
mov
fistps
add
xchg
mov
clc
push
out
cmp
or
and
ret
inc
mov
push
mov
into
idivl
movsb
aam
dec
mov
push
mov
xchg
fnsave
cli
cmc
add
or
mov
jecxz
xchg
daa
mov
mov
ficomps
loop
xchg
out
sbb
stos
stc
cli
push
mov
lea
inc
adc
xchg
push
pop
xor
jno
pcmpeqd
popf
xor
insb
sti
out
sub
pop
add
dec
adc
mov
hlt
cltd
int
mov
push
sarb
clc
cmp
testb
mov
rorb
movsl
and
add
out
cmp
and
popf
int3
repnz
or
aam
xorl
lods
rcll
daa
lds
pop
cltd
inc
pop
xchg
lods
lret
test
std
xlat
test
push
les
test
xchg
sub
outsl
pop
popf
insb
test
dec
dec
adc
mov
push
mov
pop
add
jns
pop
xchg
stc
push
cwtl
xchg
test
sbb
lds
in
bound
pop
inc
fnstcw
sbb
mov
out
xchg
inc
mov
or
dec
sarb
fnstenv
les
xchg
mov
stos
sub
loope
push
jne
adc
cli
cld
jge
jmp
mov
add
sbb
mov
push
out
sti
inc
andb
je
mov
mov
scas
testb
std
into
or
pop
mov
loop
movsl
lods
adc
lods
ja
hlt
xchg
int3
xor
stos
mov
or
pop
jmp
add
push
std
js
loope
pop
pop
mov
lcall
mov
test
xor
add
loopne
xchg
in
cmc
or
mov
psrad
adc
hlt
fdivrl
loop
mov
mov
negl
adc
jns
iret
xchg
pop
mov
lcall
xor
shrb
daa
insl
and
stos
mov
enter
pop
lcall
jns
jmp
lret
jae
push
dec
xchg
jp
lods
mov
mov
je
addr16
ror
test
mov
mov
inc
call
mov
push
sbb
sbbb
sbb
shrl
sub
loopne
sbbb
mov
cmpsl
jb
mov
and
adc
dec
xlat
adc
pop
ljmp
sbb
sub
fiaddl
and
adc
xor
inc
fucomp
adc
jge
mov
ss
test
fbstp
cmpsl
pop
push
jle
loopne
sbb
aad
pop
xor
push
enter
sub
lahf
inc
xchg
and
call
aam
pop
sub
pop
mov
stos
mov
push
cmp
rclb
xchg
push
sbb
mov
cwtl
icebp
pop
outsb
dec
inc
loope
arpl
sbb
movsb
sub
add
mov
stos
rcrb
inc
lret
add
outsb
lret
in
clc
pop
ret
adc
pop
leave
pop
add
sub
xor
sub
push
jecxz
out
enter
sbb
shlb
popa
adc
inc
inc
fstpt
pop
or
notl
and
mov
leave
pop
sahf
lcall
dec
in
pushf
jbe
ds
jb
cvttps2pi
push
mov
int
ja
mov
cmpsb
xchg
jb
je
mov
loope
mov
push
scas
aas
mov
add
pushf
sar
jp
pop
pop
or
test
push
movb
jecxz
adc
push
adc
lcall
das
xlat
push
test
or
mov
inc
es
stc
or
adc
dec
mov
push
mov
push
adc
or
cmp
test
push
rcrb
push
xchg
push
pop
insb
jmp
mov
loop
jecxz
mov
sbb
mov
insl
aad
call
cltd
lcall
fidivrs
inc
das
or
xor
dec
adc
sbb
or
pop
inc
or
push
or
mov
xlat
xchg
xchg
test
mov
inc
fcoml
xor
sti
stos
sahf
cmp
inc
or
jmp
das
loop
xor
into
mov
xchg
or
xchg
pop
and
stos
insl
fimull
push
push
out
out
push
and
negl
and
mov
xchg
fdivs
jecxz
mov
imul
stc
push
xchg
movsl
inc
sub
cwtl
mov
data16
stos
lock
mulb
dec
lahf
dec
cmp
lahf
sub
dec
lds
loopne
push
or
xor
sarb
xchg
cwtl
jae
jne
mov
pop
sbb
xchg
test
xor
inc
pop
std
xorb
and
jnp
loopne
pop
repz
jl
rcll
mov
std
jbe
and
sbb
push
add
and
xor
jl
push
cmp
dec
lock
jmp
je
enter
ret
push
vmread
aas
ja
sub
sub
mov
mov
add
xchg
lret
cld
xor
out
xchg
les
sub
or
daa
mov
mov
jg
ja
sub
cwtl
pop
rcrb
ljmp
test
or
add
je
rep
icebp
mov
push
xor
outsb
cmp
mov
mov
das
or
das
fwait
cmp
mov
or
loope
pushf
sbb
mov
leave
popa
jae
test
out
inc
cwtl
loop
jecxz
dec
mov
mov
pop
mov
mov
dec
and
cwtl
hlt
mov
or
jo
sbb
andb
xor
je
das
cmc
cmpsl
mov
es
jle
sub
push
jl
sub
into
add
leave
xchg
fcmovnu
sub
shll
fidivrl
jecxz
adc
jecxz
movsl
idiv
inc
inc
sti
add
arpl
leave
mov
cmp
lcall
data16
pop
pusha
cmpsl
jg
cmc
push
leave
in
fidivl
decb
pmaddwd
push
mov
inc
adc
mov
and
cmpsb
or
mov
push
add
push
jo
add
int3
stos
test
div
lock
cli
cld
packuswb
popa
and
mov
in
mov
mov
int3
cli
ret
mov
fimull
dec
aam
pop
mov
or
scas
xchg
push
int
mov
movsb
inc
sahf
hlt
xchg
jp
xor
enter
pushf
insl
les
cmp
push
into
jg
sbb
sub
fsubrl
pop
adc
adc
movsl
lds
pop
stos
mov
mov
negl
inc
pop
stc
mov
jne
mov
js
push
sub
fildll
iret
enter
jmp
das
push
push
int
outsb
push
or
xorb
dec
lea
adc
loopne
push
jle
ss
andb
or
sub
push
mov
dec
mov
inc
jae
popa
pusha
pop
dec
repnz
idivl
sbbl
push
out
add
mov
jmp
icebp
sbb
cmp
movq
jp
int3
cmp
in
pop
out
cs
insl
cltd
add
pop
inc
xchg
jge
jb
or
lahf
dec
inc
sub
and
cmp
adc
cmpsb
sub
mov
jae
pop
mov
mov
adc
xor
ds
cmc
xchg
mov
sub
push
cmc
sbb
mov
fidivrs
inc
cld
push
push
outsb
cmp
movsb
jg
fistpll
jle
mov
stos
aam
lea
and
and
sbb
add
into
ss
hlt
push
aaa
popa
and
mov
stos
sub
xchg
sti
pop
push
nop
fldt
or
sbb
mov
cmp
sti
xchg
sub
xor
push
dec
add
into
sub
popf
test
ds
lds
dec
dec
push
dec
fistpll
adc
in
scas
jns
hlt
daa
mov
or
in
pop
js
lret
rorl
xchg
es
cld
add
xor
in
sbb
lahf
add
cltd
aas
jne
xlat
cmpsb
mov
add
mov
xor
lcall
jno
xchg
jno
iret
cmove
ret
leave
mov
les
xor
in
sahf
jg
mov
out
ja
mov
mov
xor
scas
sbb
xor
je
addl
test
loopne
push
sti
push
xchg
ss
cs
int
aas
aad
jae
inc
mov
subb
nop
jne
mov
jge
xor
jge
loopne
xor
in
xor
jmp
add
dec
ds
adc
aas
hlt
ret
mov
sbb
int
and
int3
out
cltd
adc
lods
push
in
mov
shlb
dec
cmp
fdivrs
sbb
lods
jne
xchg
mov
les
mov
fisttpll
lret
mov
lcall
mov
addb
and
addl
sbb
scas
lcall
icebp
enter
fisubl
movsl
pop
dec
add
gs
and
and
jge
adc
xor
jb
mov
aaa
inc
push
hlt
mov
jb
stos
pop
cwtl
fsubrl
xchg
xor
mov
dec
xor
subb
int
shlb
add
push
enter
adc
arpl
fwait
aaa
orb
jae
fcomip
sbb
cwtl
mov
sub
iret
imul
adc
adc
das
pop
ficoms
mov
sub
fildl
negb
movsl
dec
and
mov
mov
loop
jp
cmp
cli
outsb
cmp
rcl
sbb
daa
mov
stos
movsl
mov
daa
aad
loope
jecxz
mov
jnp
mov
out
das
ret
in
inc
mov
lret
ret
jo
mov
jnp
movsb
scas
cmpsb
jns
out
pop
mov
call
push
leave
fsubrl
stos
push
cmp
sti
jae
sub
push
or
ret
test
das
aad
insl
imul
jns
pop
xorb
cld
xchg
std
inc
inc
arpl
pop
int3
fidivrl
sarl
dec
and
lcall
mov
jp
mov
movsl
notl
pop
adc
jp
xchg
mov
je
mov
cmp
call
ret
sub
insl
mov
xchg
mov
loopne
and
rolb
lcall
push
nop
mov
insb
mov
xor
pop
out
in
fcmove
sbb
scas
sub
aam
ficomps
sub
scas
lods
mov
loope,pn
lods
popa
push
push
pop
dec
sbbl
and
jg
push
daa
mov
push
stos
cmp
mov
jge
push
imul
insl
arpl
repz
addr16
lea
loop
xchg
dec
jns
xchg
pavgw
bound
xorb
and
mov
in
sbb
aas
cmpsl
out
ret
sbb
xor
jl
jl
pop
and
cmp
nop
and
push
lret
xor
pop
mov
xchg
pop
popf
jg
cmp
xchg
push
dec
inc
movb
shlb
pop
mov
sbb
xor
out
pop
or
pop
dec
out
sbb
xor
adc
pop
xor
push
cs
and
jns
sub
mov
sbb
push
or
fsubrs
in
scas
or
pop
jge,pn
xlat
adc
ror
movsl
mulb
push
fisttpl
stc
sbb
push
sbb
imul
daa
mov
in
sub
sbb
fiadds
or
sbb
pop
add
stos
pop
scas
loopne
mov
xor
das
pop
out
xchg
and
push
xor
jle
adc
push
and
jno
or
push
pop
jle
shl
xchg
mov
sub
mov
loopne
cmp
je
fwait
inc
call
pop
stc
daa
repnz
sub
out
jne
out
hlt
cld
aaa
jecxz
dec
and
or
mov
fcoms
lret
cmp
cmp
lock
lock
das
in
push
shrl
pop
bound
jmp
pop
mov
mov
pop
push
aaa
jmp
cltd
push
mov
cmp
add
xor
fcmove
push
ja
daa
mov
dec
mov
icebp
lds
lock
jae
push
ret
movsl
mov
insb
cs
mov
lods
stc
stos
pop
daa
or
xor
pop
in
lret
sbbb
cltd
ds
cs
leave
aam
inc
gs
hlt
shr
adc
jo
dec
repz
mov
mov
stos
pop
insb
sub
xor
fsubrl
inc
fs
push
mov
xchg
add
gs
bnd
fsubrl
dec
fwait
adc
and
pop
ret
enter
roll
mov
xchg
mov
int3
fisttpl
inc
ds
jae
arpl
jnp
pop
jbe
adc
arpl
push
mov
sub
lea
shll
gs
pushf
or
add
pop
jmp
nop
enter
ds
sbb
mov
hlt
das
insl
fstl
fildll
jo
push
ds
jae
mov
outsb
cmp
int
jmp
mov
mov
cmp
push
jo
faddl
push
repnz
add
icebp
enter
cmc
ljmp
lods
push
mov
gs
mov
mov
rorl
icebp
sbb
jo
andl
cld
jbe
jne
xchg
ficomps
ds
jne
movsl
lahf
add
jns
mov
scas
divb
push
repnz
imul
jle
ds
les
inc
hlt
pusha
push
fsubrs
inc
fcompl
adc
and
dec
mov
imul
push
lock
loope
or
jo
inc
pop
das
adc
mov
jmp
mov
nop
xchg
inc
mov
dec
pop
pop
fstpl
xchg
sub
fcompl
fst
push
iret
xorl
mov
push
sar
stos
lret
jmp
repz
and
sbb
fimull
cmpsb
fisubrs
std
ret
mov
push
dec
mov
sub
or
sub
mov
rclb
fwait
mov
inc
movsb
cmp
sbb
mov
fdivp
fstps
stos
xor
rcll
and
ds
push
mov
aas
stos
jge
push
inc
cmp
mov
fimuls
adc
mul
cmpsb
pop
pushf
les
mov
subb
add
cmpsl
and
adc
daa
cmc
loopne
inc
sub
lret
ret
pop
ljmp
push
xor
rcll
xchg
cli
and
in
push
outsl
cli
cli
xor
scas
mov
repz
add
mov
mov
fstl
pop
dec
popa
movb
xchg
xchg
add
or
daa
in
ret
fstpl
enter
bound
das
fimull
ficoms
mov
lock
push
cmp
test
testl
ret
es
mov
ret
ja
inc
add
or
rcrl
xchg
inc
push
sahf
inc
push
pop
repnz
cli
or
and
bound
adc
into
mov
shll
add
mov
pop
fisubrs
enter
in
add
fsubrl
push
inc
enter
xor
mov
das
pop
movsb
or
fwait
das
adc
mov
jle
sbb
mov
inc
dec
xchg
stos
rcr
and
inc
mov
jae
fwait
mov
push
mov
xchg
push
movsl
fsubrp
xchg
fstpl
adc
jmp
xchg
push
loope
sbb
sub
xchg
in
js
cmp
enter
push
inc
popf
mov
add
push
lcall
push
in
pop
pop
xchg
or
jnp
daa
lds
clc
lea
cwtl
and
cs
push
scas
xchg
sbb
jae
pop
xor
or
call
outsl
negb
fs
dec
and
js
jo
jle
scas
je
nop
decb
lcall
push
mov
add
pop
inc
pop
jle
paddq
jae
jnp
pop
lret
lahf
ret
xchg
add
imul
in
push
mov
or
cmpsl
pop
mov
pop
dec
pop
push
mov
ds
lock
lret
test
insl
push
int3
jp
into
out
push
jno
pop
xchg
call
xchg
pushf
es
mull
daa
insl
add
loope
shr
mov
add
das
cs
jns
sbb
sbb
lods
clc
cmp
pop
adc
loope
mov
ret
std
fstpl
out
xchg
jns
xchg
push
mov
xorl
fnsave
jmp
pop
in
pop
xor
add
xchg
inc
bound
int
sbb
scas
pop
push
jecxz
sbb
iret
mov
push
ret
lret
and
das
int3
sbb
or
adc
lret
sub
pmulhuw
int
jp
sbb
or
push
jle
sbb
mov
roll
xchg
cmp
arpl
stos
cs
fs
or
inc
mov
aam
in
popa
sbb
leave
mov
push
into
std
outsb
push
mov
xchg
in
mov
inc
sbb
stos
iret
mov
enter
sub
jb
xchg
cltd
dec
and
sbb
shlb
cs
xchg
das
stc
sub
xchg
daa
mov
imul
mov
mov
ud0
add
lcall
xchg
std
testb
aas
cmp
mov
push
test
jg
dec
cs
lret
rcrl
xchg
mov
xchg
je
sarl
jo
fdivrl
xchg
ljmp
cmc
dec
fwait
aad
stos
add
cmc
lea
addr16
arpl
mov
pop
sbb
xchg
mov
enter
gs
mov
push
dec
jns
jmp
sbb
jle
decl
jne
and
and
scas
and
hlt
or
repnz
inc
stos
pop
fwait
mov
sub
pusha
cmpsl
jns
cmpsb
xchg
mov
adc
icebp
mov
xor
add
sbb
cli
sub
mov
insl
xchg
leave
outsl
inc
sub
add
dec
lds
dec
mov
stos
jecxz
adc
or
and
xchg
mov
fcomp
scas
in
inc
dec
sti
cmc
test
fucom
fisttpl
stos
pop
mov
pop
push
and
icebp
add
aaa
loop
mov
fmulp
bound
fwait
hlt
jo
cmpsb
and
add
inc
cmp
push
mov
clc
jecxz
mov
pop
stos
mov
adc
scas
mov
in
sbb
ja
mov
pop
mov
sub
sbb
fs
rcrb
inc
cwtl
inc
stos
adc
clc
cmp
les
shrl
or
inc
sbb
pop
xchg
cmp
sarb
add
inc
dec
stos
repnz
and
xor
inc
adc
sbb
in
adc
add
xchg
popa
and
mov
jne
in
cmc
call
inc
sbb
in
mov
sbb
xchg
mov
xchg
push
push
dec
mov
jb
xor
jo
cld
push
loop
push
pop
fidivl
stc
sub
pop
mov
xchg
pop
repnz
andl
cld
inc
add
inc
cmpsl
sbb
pop
cmc
stos
push
push
jg
xor
out
call
sub
adc
loopne
pop
pop
dec
jl
dec
sub
inc
mov
dec
sub
into
mov
fwait
jno
insl
xor
pop
dec
out
iret
inc
sbb
xor
add
jl
aad
sbb
data16
xchg
push
insb
sub
mov
ss
aas
lock
xlat
pop
inc
mov
mov
sbb
jle
fs
mov
cs
aam
sbbl
and
ds
mov
dec
test
mov
push
or
orl
sar
rcr
jae
pop
jbe
sbb
cmp
mov
adc
fs
dec
jno
mov
jg
jae
stos
fldl
dec
mov
xchg
inc
sbb
xchg
inc
sub
cmp
dec
cmp
sbbb
sar
aaa
hlt
mov
inc
rcrl
xchg
scas
mov
jo
mov
xchg
dec
dec
mov
xor
dec
les
sub
ret
sub
xlat
add
or
jmp
mov
int3
orl
std
push
cwtl
pop
inc
aad
mov
xchg
xchg
loopne
insl
sbbl
out
mov
adc
mov
gs
mov
push
cmp
jecxz
imull
mov
sbb
into
push
pop
cmp
xchg
jae
in
popf
rcrl
lret
int
mov
cltd
das
jmp
xchg
sbb
insl
mov
fiaddl
jmp
jns
out
push
or
adc
test
or
lret
push
repnz
add
mov
jge
xor
aam
icebp
cmp
ja
push
xor
in
popa
xchg
es
xchg
mov
xchg
mov
popa
cli
push
imul
je
mov
setne
int3
arpl
and
es
insb
pop
js
cmp
movsb
nop
mov
ret
cmp
pop
cmc
dec
stos
and
cmp
push
cwtl
call
gs
mov
inc
fmull
push
shl
in
pop
out
push
vcvtpd2psy
cmc
adc
xlat
jle
inc
fistps
cmp
ja
popa
dec
xchg
cli
daa
sbb
mov
xor
mov
and
jge
cwtl
std
or
adc
shll
mov
iret
and
call
call
bound
xor
mov
xor
jnp
mov
loopne
jge
int
inc
xchg
lcall
fwait
or
call
xlat
stos
stos
pop
and
mov
sub
lret
pop
scas
fildll
mov
xor
mov
repnz
jmp
jle
xor
sub
testl
repz
push
subl
addr16
xor
jecxz
jmp
push
push
imul
jnp
in
pop
dec
ds
xor
sbb
clc
or
mov
popf
add
icebp
cmpsl
divl
lock
xchg
divb
cli
out
in
mov
sahf
out
cmpsb
and
das
cmp
ret
or
cmp
aaa
cmc
mov
int3
xchg
or
jg
mov
cmp
adc
and
test
movsb
sbb
ret
mov
add
xchg
push
mov
inc
inc
add
pop
adc
psubb
sbb
adc
fwait
repnz
cmp
sbb
xchg
xor
and
cmp
sub
je
add
jnp
jl
mov
cld
cmp
ret
xor
ljmp
push
imul
test
fucomip
sbb
ret
test
cli
dec
aas
xor
lea
dec
pop
int
lock
je
mov
adc
loop
in
xchg
inc
and
movl
in
popf
insl
movsb
and
or
pusha
adc
pop
fwait
cmp
xor
es
cmp
ret
xchg
cmpsb
das
mov
lods
mov
jmp
adc
mov
pop
xchg
cmp
jmp
in
jmp
mov
inc
adc
fnstsw
or
and
lahf
pop
mov
push
jae
mov
jae
lcall
mov
sahf
mov
add
out
cmp
ret
ret
push
movsb
lcall
push
imul
sbb
lea
mov
js
cli
mov
dec
stos
sbb
or
in
test
into
out
clc
xor
mov
pusha
jns
in
pop
sbb
out
rcrb
jae
es
sbb
insb
fbld
outsl
adc
add
out
push
pop
lcall
movsb
push
jg
and
leave
stos
adc
dec
cmpsb
es
out
cmpsb
loope
stos
cli
in
movl
add
jbe
sub
sub
popf
sub
fidivl
xchg
sub
jl
int
loop
leave
push
mov
push
bsr
mov
std
int
icebp
mov
lret
jle
jae
repz
and
or
in
adc
cli
adc
and
int
and
std
in
pop
push
sbb
pop
jmp
xor
aam
push
cwtl
movsb
repz
ja
mov
or
and
gs
out
and
cmp
sub
popf
loopne
add
test
pop
rcrl
push
push
pop
icebp
fisubs
insb
lahf
ret
repnz
mov
fdivs
mov
mov
pop
ret
pop
sub
addr16
mov
mov
test
mov
imul
movsl
stc
repz
shl
adc
cmc
mov
push
dec
cmp
or
fs
inc
dec
stc
in
insb
lahf
bound
or
adc
mov
fmuls
sub
push
rorb
int
dec
pop
mov
std
lods
jb
jmp
sbbl
cmpb
lret
mov
inc
inc
daa
mov
xchg
int3
jb
sahf
adc
in
add
and
addb
adc
popf
int3
cli
stc
cmpsb
jno
lret
mov
push
lret
jae
fsubp
push
mov
sbb
outsb
rol
in
cmp
shll
nop
loopne
mov
popl
aas
lcall
jl
sbb
mov
add
mov
int
sahf
mov
xor
stos
add
fstl
mov
stos
mov
aad
insb
adc
mov
jmp
or
out
test
push
xor
rcrl
sbb
sti
sub
je
inc
jbe
rcr
cmp
fnsave
add
add
dec
sarb
hlt
cmpsb
push
jns
xchg
negb
inc
pushf
rcrl
int
xchg
in
jns
jecxz
jae
push
mov
xchg
out
mov
frndint
xchg
ja
mov
movsl
cmp
push
dec
dec
lret
ja
nop
call
mov
daa
mov
or
repnz
xchg
pop
insl
inc
popfw
push
movsb
cmpsl
push
lcall
xchg
clc
test
mov
pop
ljmp
xchg
adc
dec
sub
adc
sub
fwait
aad
insb
fisubs
sub
cltd
or
rcrl
loopne
adc
roll
ljmp
fisubrs
out
push
push
sbb
lods
lea
lcall
mov
jb
rclb
xor
shll
adc
add
fstpl
stos
mov
push
call
fdivp
lahf
jl
mov
pop
or
ret
aaa
push
xlat
adc
iret
pop
rcll
sbb
mov
sub
dec
add
stos
popf
loop
mov
xor
jg
ret
jns
scas
or
lcall
movsb
sbb
fwait
aaa
repz
dec
arpl
out
sbb
js
mov
cmp
pop
xchg
cmp
jl
xor
xchg
enter
mov
xchg
pop
or
test
rcl
outsb
and
cmpsb
pop
das
rorl
mov
out
sub
jb
and
sti
arpl
in
loope
sub
xchg
inc
inc
inc
pop
addr16
dec
sub
or
xchg
stos
fisubrs
out
xchg
mulb
int3
dec
sbb
cli
xor
cwtl
cmp
loopne
cmp
cmpsl
mov
and
outsl
ror
inc
cmp
std
mov
pusha
mov
cmp
hlt
ret
jecxz
das
and
sti
jns
leave
test
outsb
inc
sbb
addr16
push
sub
insl
cmp
loop
sbb
sub
cli
sbbl
je
sub
loopne
imul
xlat
jmp
push
into
subb
gs
fwait
stos
add
xor
mov
outsb
jg
sbb
push
cmp
push
xor
fs
jecxz
dec
xor
leave
mov
cmp
iret
jecxz
out
mov
mov
mov
je
roll
adc
stc
fstpt
stc
or
loopne
outsb
shrb
or
push
adc
sub
bound
ret
ss
or
xor
shll
cmovl
jle
push
push
jl
push
or
mov
pop
gs
clc
dec
cmp
addr16
lcall
cmp
in
pop
stc
adc
and
push
aas
dec
dec
cld
out
sahf
inc
cmpl
add
ljmp
mov
xchg
pop
das
lock
add
repnz
aam
xor
adc
mov
pop
push
ret
fcmovnbe
xor
fnsaves
inc
fistps
jns
pop
les
testb
add
push
rorl
imul
push
mov
ds
pushf
cmp
hlt
pop
sbb
mov
addr16
loopne
push
pop
cmpsl
cmp
loope
repnz
test
cli
imul
call
mov
dec
dec
jns
addr16
mov
or
and
dec
aam
adc
mov
enter
sub
out
jg
fsubs
adc
pop
mov
mov
lcall
jle
std
out
cmp
xchg
movsb
sub
adc
sbb
inc
roll
test
mov
negb
aas
aad
scas
or
adcl
das
das
dec
mov
inc
and
aaa
add
pop
jb
es
sub
cmpsb
sti
test
and
jp
test
xor
mov
leave
test
or
sub
mov
out
pop
jmp
adc
lods
jecxz,pn
fucomip
stc
jl
lea
xor
pop
or
negb
jmp
xor
jl
rol
pushf
jmp
addr16
lahf
incb
rorb
mov
sbb
lea
cmp
es
nop
lcall
jbe
lds
sub
ss
std
push
add
mov
push
dec
cs
adc
lods
int3
sbb
pop
xor
cs
mov
sbb
jne
loop
add
pop
sub
stos
test
mov
sbb
mov
cmp
adc
pop
or
test
test
jg
mov
pop
jnp
lret
out
lret
mov
inc
mov
fidivrl
fsub
mov
cmpsl
mov
add
cs
mulb
fsubrl
jge
jnp
test
push
dec
adc
js
loopne
in
mov
push
mov
mov
push
insb
cmp
outsl
cmp
xor
mov
jge
fldcw
jbe
xor
xchg
ret
mov
jle
push
aad
pop
lds
xor
adc
inc
push
dec
jp
mov
lods
cmpsb
mov
pop
jmp
les
lock
mov
mov
mov
fcmovbe
aaa
outsl
add
push
mov
xor
mov
call
flds
push
jo
or
jbe
adc
test
cli
inc
push
out
testl
mov
sub
addr16
outsb
sahf
in
adc
inc
sub
outsb
jecxz
cmp
jp
popa
int
push
addr16
pop
out
mov
xchg
pop
push
push
push
inc
cld
adc
pop
pop
xor
xor
out
cmp
lock
out
mov
sahf
fisubs
std
lcall
in
gs
lahf
jp
add
xor
in
jo
mov
stos
out
pop
add
jp
ljmp
fsubs
cmp
inc
dec
scas
scas
add
out
xor
cmpsl
outsb
fdivrl
out
inc
and
mov
es
sub
lcall
test
pop
jno
mov
ret
mov
dec
jns
inc
inc
dec
fdivrl
lahf
jne
enter
add
sti
xor
mov
leave
mov
fcmovbe
stc
mov
idiv
jnp
sbb
pop
test
jl
cmc
enter
push
addb
out
scas
nop
insb
push
xchg
mov
xchg
mov
xor
dec
out
bnd
jnp
and
pushf
mov
movsl
cs
das
dec
imul
pushw
xchg
enter
negb
lock
shll
daa
out
sub
stos
add
inc
cld
icebp
shlb
xor
bound
pop
mov
pop
sub
jo
sub
aam
mov
inc
data16
cwtd
mov
cmp
inc
daa
ror
je
pushf
js
push
cmpsl
adc
in
push
ret
jp
aad
mov
bound
mov
addr16
shr
stc
push
mov
or
insl
pusha
pop
xchg
fsubs
jmp
and
js
xchg
jecxz
push
rorl
fidivrl
ret
ret
cmp
cs
push
ljmp
out
push
jnp
add
push
lea
lret
pop
pushf
mov
test
add
sbb
sahf
pop
scas
cwtl
bound
push
inc
orl
fwait
lock
cs
loopne
aad
xchg
popf
sbb
sub
add
mov
cmpl
add
sbb
cmp
push
cmc
int
fisubl
daa
aas
jne
fxch
sbb
adc
xor
adc
ss
stos
out
push
ss
push
push
insb
js
add
dec
in
and
jp
sub
in
fildll
nop
mov
decb
or
xchg
insb
imul
in
mov
gs
stos
loope
mov
in
mov
ljmp
lret
in
lock
mov
adc
jae
cld
in
mov
dec
ja
mov
jo
addr16
push
push
xor
js
or
jp
iret
cmpsb
rorl
or
sti
xor
das
scas
gs
adc
test
es
pushf
mov
inc
push
aam
js
in
scas
sbb
pop
pop
mov
xorl
cmp
jmp
rcrb
lea
les
setp
mov
push
adc
lret
popa
inc
add
out
xchg
push
mov
cmpsl
les
and
mov
push
outsb
lea
ds
imul
cmp
ret
xchg
mov
test
enter
xchg
rclb
lock
mov
jne
ret
xlat
in
mov
adc
pop
dec
sbb
test
mov
hlt
xchg
xchg
jecxz
in
in
mov
cmp
xor
dec
cmpl
inc
mov
xlat
mov
jg
xlat
mov
add
mov
lds
pop
mov
testl
xchg
lock
adc
dec
aad
imul
leave
jb
inc
dec
sahf
lret
sti
outsb
in
pop
or
inc
sub
xor
mov
aam
mov
clc
out
je
subb
js
pop
inc
cs
and
cli
into
or
dec
adc
addb
nop
add
aad
adc
int3
imul
adc
cmp
popa
out
addr16
shll
or
scas
leave
int
cwtl
cmp
push
call
lret
xor
fstpt
iret
pusha
mov
lret
inc
orb
mov
mov
lahf
mulb
xlat
movsb
xchg
ja
mov
or
out
enter
fbld
fwait
push
push
dec
enter
adc
shrl
fisttps
sub
aam
xchg
test
adc
or
cmp
shl
cwtl
mov
adc
ficoms
push
fcomps
adc
jp
add
lahf
xchg
jns
xor
push
std
jg
aas
and
adc
xorb
adc
testl
std
pop
and
cmpsl
xchg
mov
lods
inc
push
dec
sahf
icebp
cli
xchg
insb
sub
and
xor
xor
push
das
adc
test
gs
test
cmp
fsts
pop
or
dec
popa
ja
cmp
xor
ret
sti
jnp
popa
xor
adc
sub
jle
rclb
push
dec
inc
xor
popa
push
notb
rorb
mov
xchg
jno
mov
sub
cltd
jno
add
xor
jg
aam
rclb
repz
popa
push
out
rcl
and
into
inc
lcall
sbb
sbb
iret
test
aaa
mov
into
or
lods
lret
mov
mov
hlt
rorb
mov
test
test
sub
in
pop
fs
aad
push
xorb
int
addr16
push
sbb
add
gs
sub
inc
fidivrs
ret
mov
and
das
cmp
xchg
push
hlt
sbb
push
mov
jle
fdiv
mov
lret
scas
pop
xchg
es
mov
insl
mov
lock
sbb
jb
popf
jo
push
adc
mov
push
loopne
icebp
add
int
cmpsb
xchg
imulb
movsb
ja
dec
or
idivl
arpl
mov
cli
inc
adc
pusha
daa
clc
es
sahf
and
mov
adc
mov
inc
or
in
and
test
sub
sbb
jno
fcomps
outsl
push
into
cmp
jl
lock
mov
icebp
out
stos
jecxz
notl
jnp
mov
jl
mov
dec
add
inc
stos
inc
xor
or
sub
xchg
and
jns
push
insb
xor
cmp
idivl
sti
xor
daa
rcrl
repz
aaa
jae
ds
movsb
ret
push
cmp
mov
loope
lcall
testl
nop
push
jle
and
mov
popa
scas
int
ds
sub
fidivrs
pop
je
jo
push
xchg
out
add
dec
xor
or
xor
psrld
sbb
add
or
jno
push
loopne
dec
or
fcoms
pusha
popa
ss
and
inc
lcall
hlt
adc
cmp
jmp
and
aad
dec
push
add
sbb
xlat
or
sub
push
push
pop
cwtl
mov
mov
pushf
ds
daa
inc
sti
jb
mov
jg
sub
icebp
xor
aas
cltd
jge
sub
xor
scas
repz
xchg
mov
jmp
sbb
push
cmc
dec
sbb
push
movl
fwait
inc
loopne
push
sub
xchg
mov
jmp
ret
and
insl
cmc
test
outsb
scas
rcr
inc
inc
or
mov
and
cli
inc
daa
jp
inc
cmp
sbb
call
rol
imul
xchg
mov
push
fs
fdivrl
pop
jg
addr16
jg
mov
cmp
pop
sub
or
cmpsb
cwtl
pop
aam
in
sahf
addr16
add
jge
addb
mov
mov
push
push
cmp
sahf
stos
sbbl
and
insb
call
imul
daa
orps
ffreep
aam
and
jge
orl
jb
push
stc
xor
stc
mov
daa
ds
call
mov
jbe
cmp
pop
cmc
mov
insb
xchg
aaa
popf
sbb
test
inc
fisttpl
add
jno
outsb
jo
jno
movsb
int
test
rcl
ss
sbb
shrb
scas
insl
or
sub
push
add
jns
jmp
outsl
sub
push
push
jb
mov
xchg
fisttps
xchg
in
inc
mov
les
sbb
into
adc
fstpt
insb
lds
shl
push
setge
dec
xor
mov
xchg
push
mov
jbe
enter
orb
dec
add
mov
into
sbb
mov
cmc
or
iret
stos
rcrb
jle
push
push
cmp
adcl
imul
lahf
jge
movsl
mov
movsl
jle
shl
cmp
mov
pop
jle
dec
fs
jo
sbb
mov
insl
push
push
int3
inc
xorb
stos
into
add
cwtl
push
aam
mov
dec
jae
scas
pusha
inc
enter
addr16
push
pop
lcall
xchg
sbb
and
test
cmp
xchg
inc
pop
sub
add
adc
or
mov
push
xlat
mov
jne
addr16
adc
mov
jbe
call
pop
cmp
sub
aaa
dec
out
jg
add
scas
xor
xor
fnsave
xor
xor
lods
outsb
mov
das
lret
cltd
xor
push
sar
mov
cmp
sbbl
dec
push
inc
mov
enter
sub
xor
and
fmuls
jo
sbb
bound
ret
int
pop
inc
pop
aas
mov
xchg
add
daa
lahf
test
xchg
orl
push
loopne
pusha
cltd
pop
popf
cmp
aas
cmp
jg
cs
aaa
mov
or
pusha
or
call
das
out
push
add
xchg
pop
stc
jle
mov
jg
sub
cltd
fisttpl
cmp
mov
mov
fmull
or
je
jno
out
jno
lret
and
call
lahf
jbe
aaa
out
xor
push
jb
or
stos
xchg
es
inc
mov
cltd
sar
pop
xor
js
lcall
sub
add
mov
and
outsb
es
in
dec
mov
aad
cltd
sbbb
leavew
popa
fsubrl
and
cmp
rorb
xchg
xchg
int
rcrl
aaa
ds
shr
cmp
imul
outsb
int3
push
push
mov
or
jns
inc
subl
dec
or
push
fisttpll
xor
loopne
cmp
psraw
push
push
pop
or
andb
add
xor
jb
ret
mov
inc
ret
imul
sahf
mov
adc
fidivrs
pusha
or
mov
mov
ss
mov
inc
push
fs
hlt
loopne
jne
mov
mov
jl
lods
add
xchg
daa
xor
push
repnz
mov
inc
push
mov
inc
cmc
jl
pop
je
popl
mov
and
mov
inc
jmp
xchg
xchg
int3
outsl
call
xchg
movsb
xlat
mov
daa
test
mov
mov
lock
xor
or
aaa
xchg
mov
dec
lds
bound
add
push
in
repnz
rcll
mov
push
hlt
adc
aam
cmp
and
jle
call
subb
lock
xor
mov
push
mov
inc
jge
ljmp
outsl
repz
nop
jbe
fwait
pop
leave
push
xlat
pop
mov
adc
mov
inc
cmc
bound
inc
addr16
dec
mov
stos
ds
cmp
cmp
adc
xchg
stos
mulb
movsl
popf
cmp
mov
xchg
ljmp
in
pop
sub
aad
int
repnz
iret
out
sti
mov
jmp
jecxz
and
or
lret
es
push
xchg
dec
sahf
shlb
int
mov
mov
fucomip
loope
and
test
dec
push
movsl
movsl
adc
inc
mov
pop
push
test
pop
xchg
js
mov
loop
push
pop
jmp
or
mov
pop
xchg
test
push
movsb
push
faddl
dec
test
lahf
push
lods
add
jge
stos
icebp
divl
das
aas
test
dec
xor
push
or
cmpl
stos
cmp
xchg
add
xor
mov
je
xchg
lret
inc
cld
push
xlat
mov
scas
hlt
daa
repz
xlat
setns
testb
cmp
outsb
push
cmp
arpl
movq
sub
insl
mov
or
cmp
mov
mov
mov
jmp
in
adc
stos
pop
jl
or
cli
imul
ret
xor
push
push
add
mov
lret
ret
and
out
lea
imull
sbb
mov
sub
dec
enter
sbb
cmpsb
into
out
fbld
fsin
push
jle
xchg
test
daa
xchg
sub
mov
adc
lods
or
ffreep
xchg
test
xlat
inc
loope
cmp
add
pmuludq
cmp
inc
sbb
jno
inc
add
jbe
movsb
aas
fadds
push
and
mov
xchg
adc
jo
xor
mov
jge
int3
xor
pop
lods
add
jp
aaa
inc
adc
xchg
mov
cmpsl
and
xor
inc
test
pop
xchg
stc
jne
es
ret
stos
ret
loope
data16
sub
fabs
jp
add
addr16
clc
pusha
mov
inc
jecxz
adcl
sbb
xlat
ret
pushl
jle
scas
xchg
xor
jo
rcrb
cmp
int
stos
pop
cli
push
imul
cmp
test
pop
add
xchg
pop
mov
dec
mov
cmp
je
gs
xor
adc
jmp
incb
cmp
jl
jno
xchg
mul
cmpsb
ret
loope
sub
cmpsb
nop
mov
cltd
lret
out
jl
clc
dec
mov
je
lret
push
imul
movsl
jp
int
out
sbb
mov
sahf
cmpsb
push
in
fs
push
xchg
data16
mov
rorl
dec
js
repnz
testl
test
fucomip
add
dec
jle
sbb
pop
cmp
mov
xchg
cmp
fcomps
repz
mov
decb
imulb
scas
xchg
jne
or
in
nop
mov
inc
fs
inc
sub
xor
stc
stc
pop
mov
mov
inc
out
in
sub
sbb
in
pop
ffreep
adc
gs
or
cwtl
cmp
fistpll
stos
or
repz
xchg
adc
and
xchg
lahf
and
lret
int
loopne
loopne
pusha
test
cmpsb
data16
fldenv
sub
cmpsb
fnstsw
lods
insl
pop
jecxz
sbb
mov
popa
push
and
test
push
adc
popf
pop
and
jb
or
sub
nop
pop
push
int3
adc
imul
push
sub
fs
or
dec
shlb
loope
shlb
xchg
mov
push
icebp
lret
hlt
pop
push
push
ja
pop
push
out
imul
int
mov
lods
sbb
mov
xor
cmp
icebp
test
mov
fsubrl
cmp
pop
nop
sti
outsl
fbld
jp
add
jnp
pop
xchg
cmp
inc
sahf
ret
rcrl
push
or
lock
jmp
pop
bound
pushf
stos
pushf
nop
cmpb
stc
ret
fwait
jl
mov
stc
push
pop
aaa
xor
test
or
iret
jl
outsl
stos
xchg
mov
xchg
push
loop
int
xchg
mov
jg
sti
pop
and
stc
push
push
sbb
sub
dec
pop
adc
cmp
mov
sub
jg,pn
cltd
mov
push
xor
clc
je
fldl2t
mov
cwtl
xor
pusha
movsb
out
xchg
stos
sub
fs
movsb
push
xor
cmp
mov
and
leave
andb
movsl
std
lret
mov
add
divl
jmp
gs
xchg
xchg
test
cmp
fdivp
cld
gs
or
cmp
adc
jno
loopne
ret
out
cs
aaa
in
add
cli
xor
fbld
mov
iret
push
cmpsb
ret
adc
dec
adc
std
shll
dec
cmp
add
jle
ss
push
mov
mov
and
arpl
out
push
xor
mov
andl
jae
fstpl
rcrb
xchg
jae
rcrl
loopne
aaa
mov
sub
hlt
push
mov
mov
scas
cmp
sub
mov
loope
pop
sbb
imul
jo
ret
sub
popa
js
jp
or
fcmovbe
mov
add
xchg
push
repz
lds
or
pop
ret
sub
popf
mov
bound
ret
inc
mov
popa
outsb
out
aam
and
outsl
mov
test
popf
sbb
or
imul
out
cmp
fsubrs
cmp
loopne
sahf
mov
add
sbb
lods
adc
and
arpl
stos
xchg
inc
sub
insl
mov
imull
stc
sub
test
xlat
push
ror
fdivl
int3
push
int3
fsubs
pop
xchg
insb
into
push
aaa
add
adcb
dec
add
jle
imul
sub
pusha
fs
in
mov
into
jg
sahf
push
add
jle
outsl
mov
mov
add
test
adc
je
jns
jae
and
sbb
shll
sti
mov
inc
push
sub
cmpl
pop
xchg
rorl
sbb
cmp
mov
lods
lods
xchg
adc
notb
call
addr16
movsb
pop
int
xchg
mov
iret
stos
or
loope
lahf
pop
shlb
not
in
nop
jno
jo
cmp
sub
cltd
clc
je
addr16
mov
das
rcr
push
push
adc
ret
out
jmp
outsb
add
cmp
pop
xor
mov
cmpsb
in
sbb
xchg
mov
push
or
stos
xor
dec
jl
scas
movsl
sub
addl
sub
mov
inc
shll
sti
out
push
test
sub
mov
sub
stos
loopne
ss
out
cmp
sub
mov
and
js
sub
mov
or
cli
imul
repnz
xchg
xchg
push
xchg
sbb
inc
cmp
imul
or
jae
aas
or
sub
mov
inc
jnp
fwait
ss
daa
iret
dec
xor
sti
and
xor
mov
mov
ds
mov
sbb
cmpb
lea
fisttpl
and
sub
adc
imul
repz
jle
mov
mov
popa
add
jl
aam
xchg
testb
push
xlat
es
lds
ss
inc
and
cmpsb
or
cmp
sbb
pop
xchg
in
inc
mov
inc
outsl
push
shrb
xlat
push
and
pop
rclb
js
pop
test
adcl
adc
inc
add
push
cmpsl
add
out
cwtl
add
enter
stos
pop
daa
jp
mov
add
add
insl
dec
pop
pop
add
xchg
insb
repz
idivb
dec
sbb
insb
pop
cltd
dec
pop
add
cli
mov
cmp
jl
jne
cmp
std
add
aam
sub
push
xor
andl
push
adc
fsubs
repz
push
push
repnz
xorl
jl
pop
mov
data16
jmp
test
push
mov
xchg
stos
push
cmp
repz
cwtl
add
xchg
ss
loopne
pop
push
into
pop
jns
push
les
test
lea
and
sbb
inc
pop
add
xor
jp
push
adc
or
iret
dec
sti
pop
xchg
push
fsubl
rolb
adc
test
lahf
call
push
out
mov
fs
pop
push
popf
int
dec
mov
adc
pop
mov
adc
repz
and
aas
dec
sahf
mov
push
dec
add
cmpl
nop
lds
clc
leave
bound
jae
jne
cmp
sbb
iret
dec
mov
cld
bound
roll
pop
nop
lods
std
mov
mov
push
add
outsb
fdivrl
sub
inc
lds
dec
popf
fs
inc
inc
lods
xor
or
fistpl
idivb
lds
loop
adc
cmp
push
pop
or
pop
stc
ss
mov
iret
insl
jecxz
fst
ljmp
fnsave
add
push
jl
lock
dec
stos
jp
enter
js
mov
lds
bound
scas
pop
xchg
fs
in
sub
xorl
clc
pop
xor
sbb
xor
icebp
cmpsl
lock
pop
cmp
push
in
iret
aaa
lcall
push
mov
mov
les
xchg
ds
dec
test
push
and
mov
xchg
mov
jo
lret
adc
fadd
ja
jg
loopne
adc
mov
add
scas
xor
push
arpl
loopne
ds
jno
mov
in
fnstenv
mov
push
or
sub
xchg
mov
sti
mov
and
mov
into
js
dec
mov
xchg
inc
testb
shrb
xlat
test
sub
add
out
sub
xchg
mov
in
mov
dec
ds
iret
lods
pop
cs
dec
jnp
fcoml
push
cmp
mov
or
jp
mov
cmp
sub
sub
cmpsb
adc
mov
xchg
mov
in
cmp
xchg
cmp
addl
pop
loopne
cmp
lock
aaa
cmp
adc
mov
and
and
xchg
mov
data16
loope
inc
scas
sbb
xchg
push
xchg
insb
pusha
lret
cld
adc
dec
sub
mov
jno
cs
lcall
xor
addr16
adc
pop
add
inc
lret
into
xlat
sahf
out
mov
xor
pop
jne
int
dec
xlat
cmp
repnz
shlb
push
jp
sub
adc
push
mov
mov
call
push
sbb
cmp
inc
sbb
leave
inc
cwtl
adc
lock
ja
mov
xchg
hlt
lock
in
or
call
pusha
fmuls
xlat
sbb
cwtl
insl
sbb
ret
sbb
ffreep
jecxz
or
jne
jge
pop
es
clc
arpl
lahf
inc
pop
dec
loope
rol
dec
in
cmp
push
cmpsl
stc
inc
sahf
pop
pop
clc
sub
add
mov
mov
sbb
cmp
inc
sarl
mov
data16
daa
xor
or
arpl
and
imul
sbb
cltd
jl
mov
pop
fsubrl
push
jl
icebp
nop
aaa
fwait
imul
in
in
cmp
rcl
iret
and
cli
data16
jmp
mov
push
push
sysexit
pop
inc
loope
orb
mov
sbb
mov
testl
sbb
xchg
out
inc
cmpsl
mov
push
repz
js
pushf
stos
xchg
lock
dec
add
mov
or
stc
dec
cltd
loopne
sbb
aad
notb
aad
outsb
idivb
xchg
sbb
ret
les
mov
mov
out
mov
pop
inc
mov
mov
iret
push
xor
fcmovnbe
mov
arpl
and
dec
jae
loope
or
fidivrl
fcompl
inc
xor
in
adc
jge
jmp
mov
sub
shl
fadd
cmpsb
rcll
rol
xor
arpl
xor
inc
or
jae
ss
fs
mov
ss
xor
and
nop
les
inc
fdivs
data16
bound
mov
arpl
mov
xchg
stos
mov
orb
movsl
mov
mov
mov
adc
inc
cs
xchg
mov
sub
hlt
dec
fidivl
out
sbb
andl
mov
lcall
popa
mov
sbb
scas
es
lcall
sub
push
lods
mov
das
out
push
and
loop
jno
push
scas
xsave
cmp
mov
inc
es
repnz
xchg
mov
in
or
test
not
adc
hlt
push
sub
cs
lret
lret
xor
add
xchg
ret
sub
int3
je
aad
xchg
pop
mov
sbb
dec
cmc
jbe
iret
popa
cmpsb
mov
sbb
in
dec
sub
cltd
jg
jb
push
js
into
call
insb
or
cmp
mov
add
fdivr
shll
fstpl
es
or
ret
jno
mov
fdivp
xor
cmp
rol
pop
dec
pop
mov
lock
js
pop
loop
js
in
push
xchg
int3
es
movsb
mov
jge
add
leave
mov
mov
das
rcrl
mov
inc
sti
xor
jo
imul
mov
gs
dec
adc
adcb
or
repnz
out
hlt
mov
push
cli
and
jle
mov
repz
xlat
shrb
psubusb
dec
das
pop
stos
push
inc
lret
shrb
outsl
nop
and
cmpsb
ja
out
mov
mov
mov
xor
pop
mov
insb
shrl
dec
mov
fildll
and
sbb
xchg
cwtl
xor
fwait
mov
add
sub
pop
inc
popa
inc
mov
sbb
hlt
xchg
dec
mov
sub
xchg
xchg
xor
dec
add
cmpsb
rcl
loop
jno
iret
mov
divb
mov
jmp
ret
arpl
enter
add
jb
mov
push
inc
fistpll
dec
jne
push
addr16
push
cmp
movsb
cmp
inc
lods
aas
cli
xchg
into
int
loope
fbld
mov
xor
out
lods
ret
out
push
fisttpll
pop
inc
xorl
xor
adc
xor
adc
test
iret
dec
xor
in
aad
call
repz
adc
aaa
call
sub
jg
cmpsl
dec
mov
sbb
jns
popa
lods
pop
sarb
sub
movsl
fadds
push
xchg
shll
sub
adc
mov
cmp
dec
rorl
stos
sub
imul
out
xor
cmpsb
xor
mov
mov
ret
lret
jge,pt
push
jb
adc
dec
pop
sub
lods
test
jl
mov
ljmp
xchg
push
rcll
jno
sub
jg
mov
mov
fidivrs
lods
xor
cmpsb
sbb
aam
sbb
popa
imul
mov
das
pop
xorl
imul
mov
sti
push
xor
movsb
iret
adc
mov
xlat
int3
cwtl
lret
push
cmpsb
mov
hlt
ljmp
mov
inc
daa
pop
jp
daa
or
jo
mov
or
loope
mov
in
mov
pop
lock
cmp
jge
xchg
sub
in
adc
lahf
sahf
ss
mov
clc
daa
push
add
gs
lods
sahf
jmp
push
cmp
pop
push
and
adc
pause
aaa
faddl
movsb
add
pushf
sbb
call
jo
stos
add
xlat
push
ret
repnz
aaa
mov
movsb
jne
sbb
ja
push
cld
mov
out
movsl
stc
or
cmp
mov
mov
insl
in
stos
mov
dec
pop
in
sub
repz
mov
mov
in
or
lcall
lds
mov
pop
xchg
mov
and
dec
mov
int3
in
test
fimull
in
jo
and
pop
hlt
mov
adc
aad
int3
fs
pop
jmp
cs
fistl
fists
pushf
ret
aas
aam
mov
stos
sub
sti
cmpsb
addr16
jno
push
xchg
and
inc
in
cmp
test
stos
pushf
iret
shl
xchg
repnz
mov
pushw
int3
push
dec
rcll
jmp
mov
pop
dec
scas
sahf
or
outsl
cmc
aam
aad
fcmovbe
mov
pushf
or
outsb
mov
aas
xchg
fwait
pop
enter
add
cmp
xchg
gs
pop
sub
jp
aam
fisubs
inc
jmp
popf
and
jp
pop
or
mov
mov
sub
add
pop
inc
cmp
mov
pop
ret
mov
and
fldcw
stc
add
repz
sbbb
sub
xchg
sub
pop
test
les
aas
lcall
scas
fdivrl
mulb
xor
enter
dec
int3
fisttpll
sub
mov
adc
push
sbb
jg
gs
not
sub
data16
jae
dec
es
call
lahf
jae
call
mov
add
or
lret
sub
cwtl
mov
stos
cmpsl
cmc
jo
mov
insb
lcall
das
pop
mov
in
xchg
dec
shll
mov
cmpsl
movl
pop
xchg
imul
push
dec
ret
ficoml
adc
xor
jae
pop
inc
xor
dec
or
ja
stos
mov
into
xor
add
xchg
add
adc
push
or
rorl
add
and
jl
pop
clc
mov
sbb
pop
fdiv
scas
pop
and
sbb
int
popf
and
mov
imul
pop
jbe
out
xchg
int3
dec
adc
jb
adc
repz
inc
aad
frstor
in
lret
jl
fwait
mov
pop
out
add
enter
mov
mov
out
sbbb
loop
mov
add
mov
jmp
into
inc
je
push
add
nop
jno
and
sbb
jmp
jb
jmp
out
sbb
les
sbb
dec
lahf
fidivs
sbb
ret
lock
xchg
in
in
xor
pop
pop
popf
sbb
lret
inc
mov
push
cmc
stc
scas
xor
cmpsl
stc
mov
xor
insb
pop
imul
fwait
lea
test
jb
iret
inc
xchg
push
lret
sbb
enter
adc
popf
divb
xor
inc
fmuls
cli
mov
mov
pop
xchg
or
mov
jmp
pop
pusha
popa
incb
or
and
dec
lea
pop
sub
mov
cmp
es
sbb
sti
lea
addl
out
inc
push
sqrtps
std
pop
fistl
xor
adc
dec
call
mov
cmp
mov
mov
cmpb
gs
lock
mov
rcl
mov
push
int3
sti
cmp
inc
movsl
jnp
cmpsb
dec
cmp
jne
mov
push
ret
mov
jmp
inc
out
movsb
lods
aaa
adc
pusha
jp
and
ljmp
or
loope
cs
xchg
cs
roll
cmp
loopne
ja
and
or
push
int
adc
dec
hlt
fidivrs
mov
pusha
or
out
mov
ret
xor
or
scas
leave
push
stos
adc
out
fxch
lahf
push
add
pop
std
test
mov
jae
lcall
cmp
les
arpl
jnp
xor
dec
or
xor
or
pop
or
movsl
jg
hlt
ret
jmp
push
push
xor
out
push
mov
ss
sbb
inc
mov
mov
inc
cmp
ds
mov
and
sbb
lds
cmc
cmc
cmp
fsubl
les
call
pop
das
cs
ja
fcom
fidivrl
push
jno
aam
push
outsl
adc
sub
aas
lods
xchg
ret
xchg
mov
pop
lods
int3
jo
xchg
in
add
fldln2
test
ja
insl
push
pushf
pusha
cs
cmpsl
mov
outsb
pop
test
mov
stc
iret
and
mov
insb
loope
sbb
notb
push
mov
push
sbb
dec
pause
mov
xchg
mov
pusha
xchg
mov
in
dec
pop
or
pushf
outsb
addl
push
pop
pushf
mov
testl
fisubl
and
mov
xchg
mov
jge
outsb
js
ljmp
hlt
jae
rcl
sbb
fsts
xchg
dec
cmpsb
rcrb
lods
xchg
sti
std
scas
scas
jl
mov
jb
sbb
xchg
imul
outsb
xchg
inc
pop
into
in
pop
mov
add
cltd
or
cs
jno
or
sub
inc
loop
dec
push
jg
push
sbb
pop
clc
ljmp
clc
daa
push
insb
cltd
fwait
dec
insl
and
sahf
mov
cmp
in
mov
cwtl
sub
sbb
orb
jae
arpl
pop
shl
sti
cmp
mov
adc
repnz
adc
push
mov
cmp
pushf
add
ja
push
dec
pushf
inc
xchg
xlat
push
mov
xor
pop
out
xor
ficoms
das
mov
cmpsb
mov
add
add
fdivl
rcrl
hlt
mov
sub
pop
cmp
push
inc
nop
test
add
orl
or
sbb
and
mov
andb
mov
or
xchg
mov
or
stos
je
mov
aas
and
jmp
ds
xor
fwait
mov
add
imul
push
ffreep
or
cli
popa
jns
clc
imul
in
in
push
das
shl
mov
mov
add
xor
sub
sub
push
scas
jne
sub
sbb
mov
fs
jnp
in
int3
cmp
cli
mov
test
jo
in
into
adc
repnz
movsl
shl
fisttpll
cmp
ja
xor
mov
out
mov
add
pop
pop
jle
out
mov
or
shl
mov
pop
outsl
das
push
push
clc
jne
sub
gs
xchg
push
xchg
nop
add
mov
mov
and
test
repnz
jl
xchg
out
mov
test
and
mov
dec
mov
adc
inc
fidivs
add
cmpsb
lcall
dec
mov
jmp
nop
push
jp
dec
pop
xor
push
aam
sub
cmc
inc
dec
push
and
add
cld
loop
cmpsl
adc
clc
and
pop
loope
cmp
std
add
fcmove
inc
push
pop
shlb
xor
jp
sub
orb
pop
sub
or
jge
mov
add
jnp
add
orb
stos
lret
imul
mov
and
jmp
xor
repz
bnd
call
inc
sub
pop
addr16
inc
loope
inc
aam
mov
stc
rcr
push
cmp
das
dec
stos
hlt
stos
pop
rorl
mov
in
aad
fsubr
add
sub
xchg
xchg
mov
mov
dec
inc
stc
and
push
aaa
gs
ret
mov
and
daa
inc
loop
sbb
cld
addr16
cmp
cmp
jp
push
mov
ljmp
cmp
orb
pop
dec
xchg
rcrl
adc
sub
jnp
xchg
test
push
test
adc
xchg
in
adc
inc
mov
inc
daa
fisubrs
and
dec
add
mov
sbb
shr
icebp
repnz
ljmp
mov
addb
lret
jae
sbb
xor
iret
arpl
or
push
add
fdivrs
pop
jg
jno
stos
and
lcall
inc
pop
stc
and
cltd
dec
inc
je
xchg
repnz
mov
dec
sub
mov
lods
or
or
inc
scas
scas
adc
or
push
mov
mov
dec
mov
xlat
xor
lods
pop
dec
lcall
movsl
cmp
mov
sbb
fcomp
sub
xchg
lds
adc
xor
and
mov
dec
sarl
mov
test
dec
sub
inc
pop
stos
lcall
cmpsb
mov
test
xor
ret
pop
adc
sub
loop
xchg
mov
sbb
xchg
lds
adc
inc
xchg
sbb
push
mov
mov
inc
shl
enter
scas
loop
fsubs
into
or
in
mov
loop
adc
xchg
lret
adc
aas
lods
cwtl
inc
mov
add
idivl
in
sahf
fstpl
arpl
mov
pop
sbb
pop
les
or
outsl
and
aad
push
out
insl
cld
fucom
add
inc
fcmovnu
pop
lods
jno
and
jge
repz
daa
push
xchg
dec
subl
dec
popf
idivb
stc
push
lds
xlat
mov
push
mov
adc
mov
popf
sub
test
add
or
test
sbb
nop
sbb
cmp
xor
sub
ljmp
iret
imul
in
sub
lods
jg
clc
lods
je
ret
xlat
cmp
clc
cmpsl
divb
xchg
mov
inc
dec
cmp
cmp
cmp
xor
cli
xchg
and
mov
outsl
mov
out
fcmovnu
jp
sub
out
cmp
and
push
test
cmc
inc
out
push
mov
adc
sub
repz
cltd
fwait
stos
arpl
adcb
push
inc
adc
out
adc
imul
test
lods
push
or
out
pop
lods
and
sub
cmp
xchg
loope
inc
mov
jp
adc
mov
repz
nop
pop
outsl
arpl
mov
add
jmp
push
mov
insb
inc
cmp
mov
cwtl
fs
bound
xchg
jge
fs
cmp
rolb
inc
cmp
adc
pop
dec
es
sub
adc
lret
dec
aaa
hlt
leave
loope
mov
out
cmc
add
stos
xor
xchg
dec
push
adc
fisubl
es
cld
xor
sbb
xor
inc
cmp
pushf
rcrl
int3
fs
jg
dec
sub
sub
andb
dec
mov
stc
pop
rorb
dec
jecxz
jge
push
pop
dec
jne
cmpsw
jns
jo
push
fidivs
fldcw
gs
fsubs
add
dec
mull
pushf
scas
mov
push
cmpsb
mov
xchg
lds
jmp
cltd
xchg
inc
stos
cmpsb
adc
mov
stc
mov
push
bound
dec
nop
dec
cmp
outsb
sbb
sub
mov
je
arpl
fwait
dec
jmp
push
push
mov
pop
mov
and
push
arpl
dec
in
dec
aaa
test
sub
lock
dec
adc
or
mov
xlat
callw
sbb
in
jl
and
cmp
imul
sub
adc
add
movsl
pop
inc
mov
jg
and
test
xor
and
jae
push
fstl
insb
stos
stos
dec
push
leave
imul
inc
push
lret
test
test
enter
or
mov
sahf
cmp
sub
mov
stos
cmp
movsb
add
xlat
jb
push
or
xor
outsb
sbb
and
cmpsb
lds
inc
sbb
push
cmpsl
in
call
sbb
push
mov
out
cmp
mov
sbb
rcll
roll
in
popf
orb
and
call
adc
cwtl
dec
stos
or
jo
mov
inc
or
stc
ficomps
xchg
mov
mov
movsl
sbb
mov
mov
test
dec
repz
movsl
fists
mov
repnz
push
jo
das
pop
jbe
jle
fildll
call
inc
xor
or
xchg
inc
cltd
sub
pop
jg
lretw
in
push
outsl
repnz
jg
mov
jnp
mov
xor
pushf
fistl
les
pop
scas
out
nop
call
xchg
pop
imul
lret
lods
jecxz
inc
repz
scas
adc
fdivl
loop
pushf
and
push
aaa
fsubrs
les
out
fsubrl
xchg
push
rorl
adc
loop
push
mov
stos
or
nop
adc
out
sub
mov
pand
fsubrl
sub
dec
sub
pop
out
lods
call
out
out
sbb
cmp
fidivs
pop
pop
inc
push
mov
idivl
test
jle
jp
ret
sub
stc
stos
inc
cwtl
enter
sub
xor
loop
rorl
push
in
push
xchg
icebp
fldenv
push
mov
js
scas
push
push
xchg
outsb
xchg
ret
inc
mov
data16
mov
mov
xor
fimull
int
addr16
push
es
mov
xchg
in
enter
dec
dec
add
adc
gs
push
stc
cmpsb
out
roll
es
es
nop
lret
push
sbb
mov
xor
xchg
lock
and
push
daa
shl
cs
cld
jo
dec
push
add
dec
push
push
incb
sbb
jb
test
test
mov
adc
xchg
push
jb
jne
sbb
dec
push
or
adc
mov
or
imul
repnz
movsb
mov
not
push
icebp
or
push
in
leave
dec
adc
das
movsb
jb
cmp
lret
mov
xor
cmp
xchg
add
out
outsl
in
push
outsb
inc
movsl
inc
inc
pop
pop
xor
inc
dec
mov
jb
stc
adc
loop
inc
ret
cmpsb
int3
loop
lds
mov
mov
mov
outsb
idivl
pop
push
add
mov
push
xchg
adc
dec
clc
add
and
jl
push
mov
mov
dec
sbb
push
or
and
out
jnp
mov
incl
xchg
mov
enter
orl
push
fcomi
pushf
sahf
lea
adc
sti
shrl
add
iret
inc
dec
sub
dec
cld
jb
mov
fsubl
iret
lods
mov
adc
mov
inc
pop
add
push
movsl
sbb
enter
addb
adcl
push
inc
mov
in
jb
add
mov
jnp
dec
cmp
ds
mov
fwait
mov
jmp
mov
jo
sub
push
shrd
loope
cmp
jge
cmpsb
jmp
ds
cmpsl
test
adc
hlt
test
pop
enter
xchg
or
fldl
mov
and
mov
push
lcall
add
sbb
lahf
sbb
mov
push
dec
add
in
popf
cmc
lods
sub
sub
lahf
cmp
push
js
sbb
xchg
adc
in
or
xor
inc
jno
sub
sarl
pop
leave
pop
andl
rol
sbb
sub
aas
xchg
add
clc
pop
data16
jecxz
orl
push
gs
adc
sarl
addr16
xchg
imulb
inc
stos
arpl
inc
xor
scas
test
mov
in
add
pop
imul
ja
sbb
pushw
jb
out
xor
int
lea
dec
mov
inc
nop
mov
adc
sbb
test
imul
pop
int
xchg
xor
pop
adc
out
and
lret
cmp
jmp
pop
fucomip
and
jns
xacquire
push
add
and
xchg
sub
add
mov
mov
addr16
fwait
push
or
daa
stos
jge
ficompl
aas
adc
fistpl
xor
sbb
adcl
lds
adcb
and
xor
mov
sub
mov
adc
imul
xor
cmpsl
pop
dec
xlat
pusha
jno
add
xchg
jae
mov
mov
ss
inc
sub
push
fidivs
lret
xchg
bound
xchg
lods
or
cmp
jnp
pop
mov
popf
icebp
in
xlat
mov
into
or
mov
std
shrl
out
mulb
or
lret
mov
adc
fisubrl
mov
mov
mov
ja
scas
shlb
dec
push
sub
outsb
test
push
out
lods
mov
shl
dec
fsubr
pop
mov
lret
ds
jbe
jecxz
jns
hlt
std
mov
mov
into
push
in
jns
inc
jg
dec
leave
and
and
dec
mov
lret
bound
mov
loop
aad
aas
sbb
and
in
cs
inc
xchg
int
imul
shlb
loope
rcl
add
divl
out
leave
call
mov
scas
mov
mov
or
in
lahf
push
mov
test
mov
pop
xchg
push
inc
mov
cmpsb
insb
mov
cmpsb
sti
dec
repz
pop
test
pusha
int
push
or
lahf
and
jl
and
xchg
mov
inc
test
jb
xchg
aam
jae
sarb
jb
cwtl
stos
ret
cmpsl
jge
sbb
jp
cmp
lods
lret
lea
repz
inc
xor
mov
vpavgw
inc
pop
pop
cmp
test
imul
arpl
mov
sbb
out
push
shl
aaa
int
pop
movnti
pop
das
leave
rorb
add
les
sti
xor
nop
push
shll
scas
es
pop
imul
cwtl
in
cs
loopne
sbb
or
jns
inc
fsts
and
pop
lock
sarb
mov
sub
push
add
aas
xor
popl
jae
sub
ss
fnstcw
rclb
lret
stc
push
call
mov
inc
rorl
idivb
jl
int3
cmp
lds
addr16
jne
loopne
sarl
add
cmc
mov
mov
xchg
and
or
push
push
in
dec
scas
sub
hlt
pop
push
cmp
inc
jno
jo
insl
popl
aad
dec
sbb
out
and
sbbl
popa
call
xchg
ret
imul
sub
mov
aam
xchg
int3
xchg
inc
sbbb
push
xchg
push
and
and
add
call
cmpsb
or
mov
cmovge
or
shll
jo
pop
mov
fs
sbb
and
out
mov
jp
test
and
fwait
push
imul
test
sub
mov
sbb
aam
xor
lcall
les
adc
sti
and
adc
lock
mov
xor
adc
sub
xchg
bound
jle
dec
mov
stc
test
pop
icebp
arpl
dec
mov
outsb
mov
pop
push
nop
pop
loope
jg
adc
out
mov
flds
cmpsl
jb
dec
jl
sbb
test
push
mov
int3
dec
mov
sub
mov
cmp
sub
loop
or
out
mov
rcrl
adc
push
ret
fisttpl
jge
nop
jecxz
pop
cld
jp
mov
pop
push
pop
or
test
jb
mov
sbb
and
movsl
pop
sub
lahf
pop
ja
loop
data16
fbstp
pop
jge
out
loop
cmp
andb
push
hlt
cmp
jbe
sub
cmpsl
xchg
jp
cmp
je
pop
in
cmpsl
in
popa
gs
jp
imul
fs
and
testb
pop
inc
cs
cmp
cmp
and
inc
addl
xchg
adc
test
in
inc
adc
adc
sbb
idivb
imul
outsb
dec
fldcw
push
mov
popf
push
or
jbe
jmp
out
mov
insl
ret
mov
dec
inc
in
xchg
cmpsl
add
mov
jmp
cli
mov
inc
mov
fsts
pop
add
loope
out
adc
mov
in
int3
leave
jmp
iret
xlat
dec
jg
fwait
ds
pop
mov
push
cmc
scas
out
xchg
fcoms
cs
lret
mov
fimull
subl
mov
fneni(8087
in
dec
ds
sbb
aam
outsl
ljmp
or
pop
xor
dec
lahf
hlt
mov
repz
jae
imul
sub
mov
adc
dec
dec
pop
cwtl
rol
or
andl
inc
xchg
xor
dec
shl
das
popa
fcoms
mov
push
fwait
mov
xchg
or
and
sti
pop
lock
enter
dec
mov
aam
inc
and
addl
jmp
fbstp
aaa
add
inc
push
sub
jmp
loop
mov
mov
xchg
das
jge
out
jbe
push
add
mov
out
jne
fwait
jbe
js
clc
xchg
or
imul
add
dec
imul
aam
cltd
dec
push
add
mov
loop
mulb
push
mov
xor
dec
adc
insb
or
add
jg
pop
lock
xchg
test
lods
xor
cmp
dec
fsubs
in
sbb
popa
in
mov
clc
pop
or
clc
enter
lret
lds
ret
cmc
icebp
mov
bound
addr16
mov
sbb
js
pop
stc
inc
mov
push
aam
sbb
jns
je
pushf
lcall
fisubl
test
jle
jp
fadds
lods
bndstx
or
and
mov
cmp
sarb
jle
sub
cmc
sti
test
ss
lcall
xlat
dec
dec
xor
jb
mov
or
dec
insb
add
pop
dec
lcall
add
or
sub
xchg
lods
and
pop
rolb
nop
into
cwtl
cmp
lcall
push
pop
addl
adc
lea
icebp
sub
fs
xor
subl
call
test
sbb
imul
loopne
jae
stos
scas
into
dec
test
sub
push
clc
sub
movsw
shlb
mov
jb
nop
jno
ss
jne
or
jp
ja
loop
test
mov
in
and
add
mov
push
int
test
mov
in
fs
nop
fistl
ficompl
push
xlat
pop
mov
pop
rcrl
sarl
addr16
sbb
int
jg
scas
pop
aam
scas
cmp
add
jno
xchg
mov
test
out
adc
jno
popf
cwtl
pop
repnz
pop
sbb
fcompp
cwtl
push
push
xchg
lock
xchg
stos
cmp
inc
outsl
dec
mov
ret
test
outsb
sbb
mov
outsb
imul
mov
push
aaa
mov
aas
lret
icebp
pop
imul
push
xchg
xchg
sti
enter
xchg
xchg
pop
jae
xor
sbb
inc
jle
idivb
mov
mov
pop
xchg
fdivrs
cmp
mov
popf
mov
sub
mov
call
pop
add
mov
icebp
sbb
pop
fiaddl
popa
out
adc
jnp
sbb
gs
ljmp
xor
in
mov
push
dec
fildll
add
jae
mov
and
xchg
sbb
loope
out
decl
cmp
xor
rolb
sub
out
dec
testb
decb
pusha
loope
pop
sub
fcmovnb
adc
out
sbb
push
sub
cmp
and
jnp
jl
std
je
push
fstp
sub
addr16
push
lods
ret
filds
sub
cmp
scas
cld
rcpps
ficomps
cmp
repz
mov
ds
xor
dec
jmp
xchg
gs
movsb
pop
and
and
ja
cmc
mov
push
movsl
or
xor
xor
cmp
pop
lock
iret
push
scas
in
movsl
ss
mov
sbb
pop
mov
cli
lahf
lods
psllw
dec
mov
outsl
inc
loopne
mov
lcall
push
shrb
sbb
sub
xorl
enter
mov
dec
inc
mov
lods
or
mov
mov
cmp
jge
mov
mov
and
in
enter
add
xchg
sahf
mov
movsb
pop
ds
pushf
call
repnz
adc
mov
mov
pop
add
add
xor
ret
push
sub
out
or
dec
cmp
lds
mov
stos
cmp
rcr
cli
or
lahf
push
sub
cmp
into
sbb
lret
jp
and
les
dec
adc
jbe
rcrl
sub
mov
dec
outsl
jo
lock
test
add
xor
cmp
insl
cmp
jbe
push
xchg
movsb
roll
push
add
sbb
xlat
pop
xchg
push
rcl
aaa
out
cmp
jge
out
in
pop
dec
cmpsl
shrl
cmpsb
mov
fildll
in
dec
or
int
or
shr
xchg
and
jle
jne
xchg
mov
dec
mov
inc
scas
xor
inc
repz
push
adc
outsb
repz
out
lods
mov
pop
or
xchg
fwait
sub
jb
push
push
icebp
add
imul
inc
rorb
cld
gs
xchg
jnp
inc
lea
push
xchg
adc
mov
push
sub
inc
movsb
neg
hlt
imul
push
jl
cmp
cmp
ljmp
cmp
sbb
mov
sub
mov
loop
insb
std
push
fisubrs
or
aaa
push
mov
sbb
leave
push
mov
dec
xor
dec
jl
mov
pop
jo
rcl
into
inc
mov
loop
int
scas
inc
push
roll
add
lahf
xlat
js
int3
leave
std
aaa
xchg
int3
sub
fldcw
ljmp
insb
adc
arpl
mov
movsb
push
pop
dec
je
fs
xchg
jae
sar
cmp
mov
jle
add
or
outsl
mov
and
out
jo
arpl
scas
mov
les
jl
test
fisubl
push
pop
adc
sbb
inc
add
lods
je
fnsave
pop
jl
clc
push
mov
mov
in
lcall
out
add
sub
lret
mov
stos
xchg
inc
leave
dec
sbb
divb
jl
testl
fidivrs
cs
outsb
pusha
out
add
jl
aam
loope
fsubs
cmpsb
inc
and
and
call
fsubrs
jmp
pop
mov
and
xor
xchg
sar
jg
jmp
jg
in
mov
stc
pop
push
movsb
ja
mov
mov
or
adc
lds
mov
mov
fldcw
sbb
pop
lahf
inc
sbb
dec
push
aaa
nop
stos
mov
and
rcll
mov
idiv
and
gs
lock
add
popa
mov
or
adc
shl
push
out
mov
aam
inc
jle
fsts
sbb
mov
repz
repz
mov
sbb
jle
imul
stc
imul
jmp
mov
loop
adcb
fiadds
jo
clc
mov
fwait
mov
adc
add
pop
mov
movlps
inc
aad
lret
mov
xor
lods
int
loopne
lock
sahf
push
out
mov
jle
mov
add
push
mov
es
xor
rol
mov
inc
repz
outsb
xorl
out
mov
xor
call
in
std
mov
ljmp
xchg
out
cld
jecxz
xchg
jo
jo
push
adc
pop
cs
cmp
dec
push
test
movups
or
xlat
or
daa
xchg
sub
enter
dec
jne
mov
mov
lods
ret
fidivl
jns
pop
dec
cld
cmp
add
mov
fnstcw
xchg
ret
rcrl
outsl
sub
arpl
mov
inc
xchg
sbbb
imul
std
out
pop
jl
pop
jg
jb
pop
je
lock
mov
sbb
inc
add
fldl
insl
mov
jp
ljmp
add
xor
pusha
sarl
dec
pop
in
cmpsl
jb
mov
inc
cmp
lock
xchg
add
aas
mov
mov
push
jns
fdivl
mov
push
fcom
cmp
xchg
rolb
adc
rcrb
sbb
shrl
hlt
mov
xchg
jb
inc
add
cld
frstor
inc
push
pop
push
fs
fistps
mov
shll
bound
addr16
and
jle
inc
inc
dec
jmp
enter
mov
ret
xchg
orl
imul
mov
fmuls
lcall
in
and
shll
leave
pop
add
lcall
and
pop
scas
pop
mov
cli
js
sbb
cld
lret
sarb
push
mov
test
loopne
pop
or
data16
inc
pop
cmp
adc
or
pushf
std
psrld
int3
imul
mov
das
adc
dec
xchg
out
fcompl
lods
fwait
outsl
mov
sbb
sahf
inc
cmp
push
imul
mov
orb
test
dec
das
sbb
insl
adc
mov
cmpsl
movsb
sbb
push
pop
and
push
xor
xor
push
in
push
sahf
mov
sahf
xor
pop
loopne
scas
ds
jecxz
push
xor
ds
mov
out
lods
and
mov
jge
ret
inc
movsl
mov
push
fucomi
enter
mov
repz
mov
inc
fdivrl
push
mov
outsl
ljmp
push
add
hlt
xchg
cmpl
gs
lods
test
xor
and
or
dec
ds
xlat
pop
adc
adc
cmp
fsubrl
scas
push
sub
les
cmp
nop
jl
jl
xchg
fstpt
jns
mov
dec
movsb
push
inc
fnsave
sbb
mov
jge
cmp
jge
cmpsb
movl
jecxz
negl
pop
adc
sbb
sti
mov
cli
ljmp
das
idiv
dec
test
ret
jno
adc
add
mov
call
mov
mov
pop
sahf
dec
and
push
or
jmp
dec
nop
sub
inc
lea
xor
pop
cmp
int
gs
addr16
inc
adc
sbb
mov
mov
mov
outsl
adc
loop
cld
in
ret
adc
icebp
push
push
imul
lods
push
cmpsl
xlat
out
lahf
outsb
daa
mov
jmp
insb
pushf
sti
xchg
mov
xor
inc
push
insb
sub
test
mulb
mov
cs
cmpb
pushf
jge
lahf
adc
cmpsb
or
mov
je
pop
inc
movd
mov
push
in
aas
lcall
push
ret
xchg
xor
cld
clc
jecxz
add
int3
jae
lods
and
mov
js
out
inc
mov
mov
inc
and
sbb
cmp
pop
or
push
cli
sub
adc
loopne
arpl
add
rorb
inc
iret
sub
loope
bound
adc
leave
dec
fidivs
pop
adc
cmp
out
cmpsl
stos
push
in
scas
outsb
lea
xchg
push
scas
fcoms
js
sarl
lods
dec
int3
sub
add
xor
inc
loope
xor
or
mov
sub
adc
push
jle
cltd
in
add
or
xchg
push
xor
push
call
enter
iret
sarb
es
inc
enter
or
pop
sub
in
fildll
dec
jle
lea
paddw
push
and
sub
fadds
cmp
lods
xor
repnz
inc
cmp
clc
orl
popf
addr16
push
and
iret
ss
out
xchg
adc
and
or
icebp
cmp
xor
mov
in
or
push
mov
xor
mov
rcrb
out
xchg
push
testl
push
mov
adc
cltd
and
lea
mov
fwait
dec
cmpsl
ret
push
sti
mov
jge
or
stos
dec
movsb
push
es
jne
popa
mov
out
jne
dec
in
int3
push
in
dec
mov
push
xacquire
test
xor
ds
into
inc
sub
inc
out
aad
int3
inc
lret
or
out
sbb
xor
clc
jno
dec
popa
push
xchg
jne
dec
fisubs
mov
popf
jo
jle
fldenv
xchg
out
inc
push
es
es
add
out
mov
cmp
mov
insb
stc
xchg
cmc
sub
data16
add
mov
out
add
repnz
rolb
mov
jb
xorb
xchg
mov
mov
xchg
xor
dec
push
in
insb
mov
add
inc
mov
mov
rdmsr
push
fcmove
inc
sub
xchg
xor
cmpsb
jmp
test
cli
cld
loopne
in
loope
mov
aaa
and
and
adc
add
clc
loope
out
sbb
jns
sti
mov
adc
in
gs
shrl
push
sub
test
cwtl
sbb
movsl
pop
pop
ja
out
into
leave
rcl
inc
dec
into
jne
jmp
dec
mov
push
inc
mov
cmp
pop
push
arpl
and
cmpsl
fwait
cltd
lret
dec
adc
sbb
stos
inc
mov
sub
jno
enter
xor
xchg
inc
xchg
cltd
ljmp
cmpsl
mov
pop
jne
arpl
aam
jbe
mov
outsb
xor
adc
mov
xlat
mov
icebp
jb
pop
cmc
fucompp
jb
stos
popa
fistpll
insl
and
into
and
pop
xchg
xchg
jo
scas
dec
inc
cmp
pop
adc
fimull
pop
mov
fldcw
inc
stos
push
jecxz
loop
rcrb
cmp
aaa
mov
and
cli
mov
mov
cmc
cld
pop
lret
sbb
xchg
fwait
sub
subl
cmc
in
test
pop
push
aad
jo
sub
jns
jmp
movsb
fwait
sti
and
cmp
inc
test
add
jle
test
test
sbb
or
sub
outsb
push
gs
jno
ret
cwtl
and
xchg
jle
test
das
hlt
adc
ret
mulb
out
mov
orl
das
fsubr
mov
daa
sub
mov
sub
cli
jnp
flds
pop
dec
push
testl
loop
test
sbb
jb
dec
cld
pusha
jo
cmp
popa
xchg
push
sbb
in
outsl
mov
mov
stos
mov
mov
test
adc
cmp
and
jo
aad
hlt
leave
cmc
cmc
sub
and
sahf
test
cmp
pop
aam
xor
xchg
and
xchg
cmpsb
rorb
pop
and
dec
shr
mov
pop
dec
mov
ror
fisubs
mov
xor
lods
test
dec
mov
pop
aaa
mov
dec
mov
jns
sub
adc
ds
pop
jecxz
pop
mov
inc
imul
xor
les
cltd
ror
idiv
sbb
out
or
xor
popa
pushf
and
mov
gs
movsl
data16
hlt
cli
lcall
push
fiaddl
inc
jns
lock
ret
jns
push
adc
mov
cmp
dec
xchg
das
cmp
push
lahf
add
xlat
jno
shll
gs
mov
idivb
fdivs
mov
shlb
jns
sti
jnp
inc
gs
dec
xchg
inc
cltd
cmp
or
add
clc
cld
js
add
mov
rcll
cmpsl
xchg
imul
jg
icebp
pop
mov
in
lret
dec
mov
and
push
dec
int3
repz
pop
outsb
inc
pusha
scas
jecxz
add
dec
es
cli
cld
loop
test
xchg
ja
es
pop
ret
xchg
jge
mov
rcl
dec
sbb
scas
mov
sbb
int
mov
push
rol
mov
dec
jno
test
daa
rol
push
sub
aad
adc
loopne
fadd
push
lods
test
add
xchg
mov
pop
add
jno
add
or
daa
cli
inc
fdivl
pop
or
xchg
inc
icebp
cld
clc
testb
cs
fcmovnb
pushf
sbb
je
pop
mov
loop
adc
pusha
aas
das
xchg
xor
lock
jae
xor
xor
mov
movsb
or
ret
mov
scas
push
add
push
fdivrs
and
in
aam
repnz
mov
mov
mov
pop
insb
sub
push
mov
push
call
sub
loopne
outsl
pop
movsl
xor
hlt
data16
fldcw
add
push
mov
lods
test
pop
push
inc
jge
sbb
xchg
sub
jbe
scas
inc
add
xor
jb
fucomip
repz
bound
ret
inc
jg
pushf
std
mov
jp
cwtl
xchg
dec
cltd
adc
adc
or
test
les
inc
push
incb
fisttps
idivb
imul
jae
adc
jnp
inc
and
inc
jg
call
dec
imul
add
xchg
push
xchg
cmp
insl
xor
popa
jecxz
call
outsl
loop
sub
mov
and
cmp
mov
add
into
pop
aam
mov
test
jp
sub
cmp
popa
inc
cmc
xor
and
pop
aam
mov
jle
dec
std
sub
fs
inc
sbb
std
mov
sub
dec
pop
popa
mov
mov
lret
push
outsl
mov
cmpsb
dec
in
mov
mov
shrl
adc
je
addl
add
arpl
xor
mov
mov
fistpll
hlt
sub
addr16
jnp
adc
lahf
or
or
push
sub
jp
int
test
fsubrs
inc
jg
jmp
jbe
push
inc
in
fsubs
xchg
mov
jl
jp
mov
test
rcl
mov
and
xchg
push
jns
cmp
daa
xchg
sub
gs
ret
ret
push
jo
mov
adc
jo
imul
sbb
push
sub
icebp
std
inc
push
negb
sti
xchg
ss
mov
std
add
mov
adc
jns
cs
jbe
cmpsl
inc
dec
xor
stc
rclb
std
mov
pop
rcr
iret
pop
jb
cs
stc
orl
mov
mov
fisubs
push
ret
movsb
shlb
clc
stos
aaa
jp
out
push
xor
scas
dec
add
xchg
stos
mull
jb
out
add
les
pop
and
jge
in
pusha
loope
mov
out
shr
or
fdivl
inc
sahf
stos
cmp
pop
js
lock
and
mov
adc
pop
ror
enter
btr
bound
outsl
in
mov
sbb
adc
and
out
cmpsb
jns
shr
mov
inc
je
lds
loopne
mov
xchg
dec
xlat
ljmp
push
hlt
out
jg
scas
cli
dec
jno
mov
cmp
jae
inc
lcall
xchg
ljmp
sbb
lods
jae
js
inc
jmp
das
out
inc
sbb
xor
jae
jecxz
push
sub
cmpsl
sbb
aaa
mov
sub
aas
mov
js
mov
inc
pusha
loop
add
pushf
pop
lds
mov
and
mov
dec
mov
clc
mov
ret
jecxz
adc
mov
xchg
cmp
jmp
cmpsb
xchg
adc
lahf
pop
cmp
clc
jno
xchg
or
cmp
adc
sbb
push
mov
ja
dec
stos
mov
push
std
popa
adc
push
subps
fidivrl
adc
loopne
sub
addr16
push
push
cmp
mov
mov
pop
mov
sahf
pusha
mov
shlb
ror
fdivrp
dec
or
ds
bound
orl
push
sbb
ret
enter
jmp
lret
xor
arpl
inc
sti
mov
mov
test
dec
cld
xor
lcall
mov
pop
testb
inc
adcl
out
xlat
xchg
hlt
cmp
push
notl
cmp
jnp
xor
sub
push
mov
aas
ja
xor
int3
cmpl
pop
sub
cmp
sahf
shl
xchg
xchg
aas
repnz
mov
pop
mov
or
or
imul
adc
inc
shrl
xor
cwtl
scas
inc
and
lahf
and
jae
and
jecxz
xor
popf
adc
and
or
cmc
sbbl
shrl
xlat
dec
mov
xchg
or
mov
add
rolb
adc
inc
lock
mov
jbe
sbb
cmp
movsb
adc
je
mov
pop
ret
push
test
add
and
aas
push
ljmp
jg
in
mov
pop
adc
mov
inc
mov
mov
cmovg
out
insl
pop
outsl
jmp
xchg
pop
idivl
push
stos
lcall
or
pop
out
cmpsl
or
cmc
inc
js
add
jae
mov
push
sub
xchg
cmove
sub
scas
add
movsl
or
ja
dec
dec
dec
mov
ja
push
bound
mov
sbb
xchg
pop
adc
lods
gs
nop
in
jp
push
sub
inc
fistl
hlt
fldcw
mov
rorb
push
cmpsl
sbbb
testb
lahf
push
iret
mov
repnz
xchg
pop
adc
movsl
pop
sub
int
lods
mov
cmc
sbb
ljmp
aaa
outsb
ja
aad
sbbl
adc
sbb
mov
aaa
mov
iret
adc
aam
dec
lds
push
jae
out
add
xchg
xchg
cld
jbe
cld
cmp
fs
mov
out
or
movsb
fidivrs
add
xchg
mov
daa
mov
jbe
jge
adc
loopne
roll
icebp
mov
cmp
fistpll
ljmp
xchg
ret
cwtl
add
xor
test
add
sub
xchg
pop
cmpsb
sti
dec
mov
lcall
mov
out
cli
dec
out
push
sub
lret
rorb
xchg
mov
stc
adc
mov
and
cmpsb
xchg
sbb
ret
shlb
cmp
cli
mov
sub
idivb
arpl
inc
mov
or
cmp
add
sbb
sbb
lahf
repz
xlat
dec
or
inc
mov
cltd
lret
push
mov
aaa
adc
mov
mov
cmovge
xchg
test
inc
cwtl
or
xor
or
cli
pop
lret
ud1
mov
or
dec
push
cmp
dec
das
xchg
push
test
lcall
cmc
ljmp
pop
cli
sbb
mov
pusha
into
int
sbb
in
pop
mov
adc
icebp
mov
jns
dec
call
mov
cli
or
cli
pushf
dec
mov
mov
mov
push
pop
sub
mov
or
jmp
lock
inc
fsubl
mov
jl
ror
ret
leave
dec
add
in
pop
xor
test
jae
fbld
aaa
inc
mov
add
jnp
sbb
mov
int
mov
imulb
fsubrl
push
aam
pop
xor
xchg
mov
sub
pop
or
test
fdiv
inc
jns
mov
repnz
in
dec
cmp
mov
push
cltd
or
aad
inc
push
ljmp
mov
xchg
aad
cmp
pushf
fmul
movsb
ja
xor
inc
inc
dec
mov
jecxz
lcall
lds
mov
adc
in
repz
cmp
sbbb
lret
jmp
mov
jne
xchg
push
mov
fwait
and
insl
add
mov
xchg
or
movsl
sti
addb
lahf
adc
push
pop
sub
sub
ds
repz
mov
mov
clc
mov
sarl
jb
bound
int3
dec
out
ror
xchg
dec
imul
shl
cwtl
mov
adc
pop
fidivrl
fwait
mov
mov
je
lret
cmp
or
pop
sub
enter
in
cs
jnp
fdivr
dec
cmp
movsb
dec
sub
je
jnp
stos
mov
icebp
out
outsb
lods
out
testb
fmull
dec
lret
and
inc
or
leave
lcall
inc
push
mov
dec
xor
test
xchg
cmp
jle
push
loop
xchg
pop
rcpps
mov
mov
dec
sbb
scas
aas
pop
xchg
es
xlat
stos
pop
mov
gs
pop
push
aaa
and
mov
sub
mov
bsf
xchg
push
cltd
pop
je
jns
aaa
jle
lods
enter
cli
cltd
mov
adc
fistps
std
mov
mov
icebp
push
jbe
aas
adc
je
cmpsl
cmpsl
add
jl
fisubrl
cmovp
pop
cmpsl
stc
ret
xor
iret
cmpsb
icebp
dec
sbb
mov
push
jb
xor
add
jle
imul
in
test
sar
dec
aas
aad
movsb
ljmp
test
outsl
in
js
inc
movsl
xor
cld
sahf
outsb
ljmp
dec
pmaxub
cmp
fwait
jecxz
push
mov
sbbl
push
stos
push
sbb
push
cld
into
das
mov
dec
lock
out
ret
inc
inc
fcomip
sub
jp
push
insl
push
in
iret
rolb
addr16
out
push
rol
pop
inc
xor
mov
lret
xor
into
mov
data16
mov
cld
mov
cld
imul
ret
scas
xchg
add
jb,pn
mov
sarb
insl
lock
sub
push
cld
movsl
outsb
imul
lahf
xor
inc
jb
xlat
std
adc
sbb
lods
jae
adc
cmovle
add
mov
mov
xor
sbb
pushf
fcoml
es
ds
mov
std
nop
popa
add
cwtl
push
scas
in
lods
fmulp
ljmp
cmc
lret
mov
dec
enter
pmovmskb
ljmp
xchg
nop
addl
gs
idiv
into
outsl
push
in
cmp
xor
xor
jle
xchg
mov
xchg
push
mov
and
insb
fistpll
mov
mov
les
mov
repnz
or
mov
mov
mov
out
inc
insl
xchg
or
adc
cwtl
jo
pushf
xchg
les
out
arpl
test
imul
scas
pusha
jo
ret
idiv
dec
adc
mov
imul
or
mov
pop
cmp
xlat
lret
loopne
out
cli
hlt
dec
dec
lds
testb
cmpsl
notb
hlt
aam
loope
and
jae
mov
lcall
mov
pop
add
xor
or
lea
std
scas
xor
stos
enter
lcall
out
or
fistl
dec
outsl
and
mov
pop
push
movsl
sub
jecxz
push
shr
dec
les
mov
inc
push
test
scas
push
cmc
mov
lock
outsl
inc
push
pop
in
fucom
insb
je
pop
fmull
cmpsb
sub
imul
sub
mov
xchg
imul
int
mov
outsb
xor
and
cmpsb
dec
or
into
mov
push
xchg
and
loopne
nop
cmp
xchg
cwtl
mov
ret
adc
xor
mov
lea
and
cmc
int3
ret
sub
lret
or
add
push
jns
cmp
sub
sbb
add
or
mov
dec
repnz
push
inc
mov
rorl
push
xchg
dec
mov
sbb
rorb
scas
call
jns
cmpsb
and
aas
inc
mov
repnz
js
and
popf
jle
mov
aas
je
adcb
mov
fs
add
mov
sub
sbb
xor
outsl
sbb
shr
mov
pop
jg
into
ret
pop
pop
ds
jbe
std
aam
mov
popaw
out
cmp
lret
outsl
lahf
xor
shlb
popa
cli
sub
adc
push
mov
into
call
xchg
sarb
aas
loopne
lock
jge
scas
pusha
test
jle
packuswb
xchg
mov
mov
dec
ja
and
call
mov
dec
sub
adc
push
ret
pop
lret
xor
ret
sub
ret
scas
dec
cmp
add
adc
ss
pop
push
in
fucom
xor
dec
pusha
inc
add
xchg
std
cmpsl
les
aaa
bound
lret
dec
push
fcomip
out
movsb
jl
mov
push
cld
dec
push
push
and
jbe
test
mov
inc
add
bound
imul
and
loopne
push
fstps
push
cld
mov
std
mov
xchg
cmc
or
mov
insb
mov
shrl
sbb
jmp
cmp
push
adc
or
xor
mov
rcrl
jp
xor
xchg
push
in
jg
pop
inc
imul
mov
inc
cld
ljmp
xchg
jno
inc
cmp
loope
xor
mov
sub
out
out
adc
mov
mov
arpl
lock
xchg
daa
shrl
mov
leave
aad
cmpsb
imull
pusha
jecxz
movsb
cmc
mov
mov
dec
js
cmp
lock
xchg
stc
fnstcw
gs
sub
pop
cld
add
daa
push
sbb
sbb
rolb
js
dec
pop
movsl
sbb
stos
cmovnp
orb
mov
arpl
fmulp
call
out
mov
js
popa
test
call
push
sbb
outsb
stc
sti
ljmp
fstl
xchg
imul
iret
sbb
mov
and
add
and
xchg
jle
add
out
sub
inc
ret
lods
mov
pop
outsb
aam
test
loopne
ret
cli
insb
nop
pushf
stos
pop
adc
mov
cld
xor
mov
jg
mov
and
mov
cli
lock
mov
cli
cmp
stos
insb
mov
or
into
adc
into
mov
xchg
inc
mov
inc
xchg
pop
sti
jl
xchg
cli
xor
sub
int3
imul
sbb
in
jae
lods
xchg
mov
mov
and
nop
mov
lds
push
push
loope
sub
das
int
jp
vucomiss
jl
shrb
loop
jecxz
dec
imul
shll
pop
je
int3
imulb
dec
es
and
leave
mov
inc
test
fs
int3
adc
scas
fldt
movsb
xchg
decl
jmp
xchg
sub
out
mov
jp
sbb
insb
insb
mov
sub
xor
add
fcmovnu
fcompl
rcl
cmc
jae
push
clc
and
cmp
insl
sbb
out
xchg
hlt
lcall
orb
and
pop
pusha
lcall
ja
inc
ja
jmp
cmp
into
inc
mov
xchg
adc
pop
or
cmp
mov
dec
loope
dec
lret
test
test
sub
movsl
and
mov
aam
or
test
int3
push
jg
jo
mov
mov
orb
and
push
nop
aam
cmc
mov
inc
xchg
lahf
adc
repz
int3
adc
or
inc
shll
sub
mov
fbstp
mov
lahf
jg
popf
sub
outsb
and
cmp
or
xor
jl
ffreep
negb
mov
loope
daa
dec
pop
dec
movsl
sti
xchg
movsbl
clc
cltd
dec
add
jns
fmuls
icebp
mov
push
xchg
xor
mov
cmp
sahf
orb
pop
sbb
outsb
mov
data16
jns
pop
pusha
dec
xchg
cmp
push
in
daa
sub
or
lret
loopne
pusha
and
jno
mov
inc
dec
push
inc
sarb
or
lcall
lds
stc
push
popa
dec
jb
sub
imul
lods
mov
aaa
sbb
jle
push
xor
test
data16
xor
ret
pop
fstpl
fcoml
dec
std
icebp
in
divb
out
aam
push
ret
sti
lahf
aam
lea
cwtl
mov
js
adc
ss
push
cmp
ja
sti
sbb
or
lahf
test
inc
scas
xor
xor
lret
shl
jne
push
pop
adc
fcomps
bound
jo
sub
fs
outsb
mov
outsl
je
popa
js
inc
jbe
dec
inc
push
es
cmpb
test
loope
jmp
push
aaa
sub
fists
mov
inc
frstor
mov
sbb
sub
add
fyl2x
lcall
cmp
mov
and
cltd
outsl
daa
jbe
in
les
jae
add
mov
ds
out
mov
scas
ss
push
cld
mov
fisubs
mov
aaa
lock
ja
pop
sbb
int3
test
mov
pop
add
push
xor
lods
testl
je
sbb
vpsignd
popa
movsb
add
sahf
pop
test
dec
hlt
and
mov
rclb
mov
lods
shl
or
cmp
push
ret
clc
in
stos
xor
dec
pushf
mov
inc
insl
fcmovnu
mulb
loop
test
shrb
aam
rcll
add
sub
loope
cmpsb
push
aas
jnp
outsb
shll
adc
cmp
mov
pop
ja
jbe
xor
aas
mov
in
jo
jo
sbb
dec
xor
out
ja
out
cmp
sbb
xchg
mov
xchg
adc
ret
jge
int
sbb
lahf
aad
dec
pushf
adc
test
xor
inc
pop
flds
mov
sbb
loope
pop
jnp
test
sub
and
pushf
mov
push
movsb
out
jmp
adc
mov
dec
daa
xor
xor
cmp
xor
movsl
insl
ret
xor
jo
arpl
mov
or
dec
pop
dec
loope
push
xor
add
rcll
and
outsb
push
and
arpl
aaa
fisttpl
push
lahf
inc
fcmovnbe
fdiv
cmp
rcll
scas
vandps
rolb
cs
jmp
dec
stc
cwtl
add
mov
and
cs
fcoms
pop
ss
outsl
cmp
mov
and
gs
mov
pop
test
test
jne
xor
mov
outsb
xor
jge
testb
pop
gs
mov
icebp
shrl
ja
xchg
adc
inc
add
xchg
mov
into
icebp
loope
out
arpl
mov
dec
js
mov
stos
cmp
push
lea
cmpsl
fwait
mov
pop
push
mov
test
push
sbb
jge
jae
dec
push
dec
rorb
inc
pop
enter
xchg
inc
aad
inc
int3
jne
sub
outsl
fnstcw
pop
push
lcall
popa
fidivl
jle
inc
scas
xor
dec
ficomps
imull
imul
push
add
push
push
lock
outsb
fildl
jno
shlb
xchg
out
divps
adc
xor
sbb
fstps
sbb
out
ret
jge
lahf
insb
jg
push
test
popf
enter
repz
xchg
mov
dec
arpl
pop
mov
filds
out
mov
ljmp
mov
aaa
jne
js
mov
xchg
xor
push
flds
cmp
roll
and
pop
and
hlt
mov
inc
enter
clc
test
cmpsb
in
stos
ljmp
rcl
jl
cmpsb
add
ja
jp
mov
pop
hlt
jne
mov
movb
jmp
mov
and
lods
push
xchg
aaa
pop
aaa
and
movb
push
gs
jecxz
dec
imul
data16
mov
cmp
mov
cmp
adc
lods
push
inc
in
les
aaa
cmp
push
xchg
push
push
testb
xchg
aas
daa
mov
sub
int3
hlt
sbb
jno
dec
or
adc
dec
fwait
sbb
pop
ljmp
inc
into
mov
cmpsl
sbbb
mov
add
pop
add
pop
add
mov
adc
js
pop
jbe
loope
les
adc
insb
call
jmp
add
ss
xor
ja
mov
aas
jmp
inc
mov
jb
mov
cli
aad
loop
or
sub
xchg
jl,pn
mov
dec
enter
lcall
scas
mov
pop
mov
cmp
dec
cli
iret
jns
jge
mov
jbe
jno
push
bts
int
repz
dec
fdiv
into
divl
push
mov
xor
lods
scas
xor
mov
mov
iret
mov
xor
adc
notl
lret
sarl
jae
in
mov
mov
dec
mov
cs
enter
std
or
mov
adc
inc
rcrl
mov
jbe
mov
push
pushf
repnz
aam
push
jb
f2xm1
sub
jbe
aad
xchg
mov
lods
shl
sarl
lret
imull
loopne
mov
mov
xchg
or
fisubl
push
in
and
aam
and
pop
icebp
ret
mov
and
mov
sub
mov
jbe
sbb
or
mov
fistps
add
xor
shlb
adc
push
stos
cmp
xchg
repnz
push
mov
lret
mov
mov
adc
add
sahf
xchg
stos
push
mov
int3
loope
inc
nop
cmp
bound
into
sub
out
imul
mov
jge
enter
inc
fnstenv
xor
out
enter
dec
or
loopne
jns
cmpsb
jmp
pop
testb
sbb
dec
lods
call
push
xchg
sub
pusha
mov
dec
adc
stos
test
lret
es
mov
cltd
std
jo
xchg
ds
sbb
adc
ret
add
pop
push
cmpsb
insb
xlat
mov
notb
cmp
jmp
mov
lods
cmpsl
mov
or
jl
and
xor
push
dec
daa
shrb
out
popf
ss
cmp
xorl
dec
xor
dec
sub
scas
shlb
notl
or
push
lock
add
aas
call
dec
enter
add
das
gs
pop
loop
popf
test
cltd
xchg
or
adc
or
stos
add
rorb
mov
stos
ljmp
in
jne
aas
push
pop
mov
add
push
ret
shl
pop
cld
add
cmpb
add
cltd
fistl
shrl
lea
mov
sbb
xchg
out
xchg
popa
cs
xchg
std
or
mov
rolb
mov
mov
stos
xor
push
aam
test
mov
inc
cmp
pop
int
enter
repz
mov
roll
dec
fs
cld
or
ljmp
xchg
add
into
ss
aaa
scas
fs
shlb
inc
push
mov
pop
xchg
pop
das
mov
xchg
aad
pop
scas
movlps
jne
sar
jbe
push
and
mov
add
sahf
aam
adc
inc
inc
test
lret
mov
add
jl
or
jle
push
sahf
repnz
filds
sarl
adc
mov
mull
mov
mov
adc
rcrl
jbe
pop
xchg
xchg
adc
push
loopne
sahf
int3
or
dec
idivl
psrad
lcall
out
in
jecxz
add
data16
ret
addb
fistpll
sbb
mov
adc
adc
shrb
xchg
mov
push
dec
add
data16
mov
fldl
inc
lahf
inc
xor
adc
insb
dec
dec
pop
fiaddl
xor
call
lock
mov
mov
add
mov
xchg
aaa
add
pop
mov
xchg
xlat
lret
fisubs
mov
outsb
mov
cmp
lds
fldl
or
and
xchg
fcomps
lret
loopne
mov
cmp
dec
sti
jg
lds
push
nop
xorl
sahf
movsl
aam
outsb
lret
daa
pop
mov
jnp
movsb
xchg
xchg
sbb
movsb
xor
mov
gs
ret
leave
xchg
stos
fwait
and
lds
out
ret
dec
test
mov
or
and
mov
loopne
lret
inc
in
xchg
outsw
or
das
sub
inc
sbb
pushf
sbbl
mov
and
cmp
daa
rcrb
fidivl
mov
sbb
movsb
sbb
out
fcoms
inc
adc
mov
or
int3
cmpsl
cmc
movsb
cmp
rcrl
push
std
loope
test
jmp
imul
jg
clc
xor
setne
jns
dec
imul
xor
in
jo
sbb
sbb
inc
imul
add
sub
mov
adc
cmpsb
fsubp
cmc
addr16
pop
fcmovne
test
add
fistpl
fstl
xlat
int
or
enter
stos
scas
dec
scas
mov
adc
shll
and
test
movsl
cltd
push
in
sbbl
push
mov
jns
or
inc
push
dec
int3
mov
jl
popa
outsl
jle
push
scas
cwtl
lods
or
mov
push
popa
nop
mov
mov
xlat
out
adc
fnstenv
dec
shlb
mov
sub
loopne
mov
adc
xor
xchg
fsubr
jmp
into
pop
stos
mov
insb
scas
jecxz
rolb
fs
out
stc
xchg
test
sahf
cs
mov
stos
fadd
test
pop
out
sub
add
jl
dec
insl
lods
fcoms
adc
sbb
lret
sub
push
das
dec
nop
inc
lock
xor
popf
ja
mov
out
aad
arpl
mov
aam
add
sub
pop
inc
lods
cwtl
addb
dec
test
dec
jl
dec
xor
jp
lods
cmp
fcoml
das
mov
pop
daa
enter
mov
push
test
cmpsl
sub
push
xchg
mov
addb
inc
add
xor
add
fnstsw
sub
pop
xor
or
addr16
lret
lahf
add
pusha
pop
xchg
mov
push
push
pusha
jmp
outsb
popf
cwtl
adc
in
stos
imul
pop
xchg
sub
scas
fwait
jl
jp
out
test
cmp
pushf
jne
test
mov
push
push
data16
mov
pop
inc
jb
lret
inc
stos
xchg
fwait
mov
sbb
std
fistl
jp
cmp
ret
push
arpl
jg
adc
pop
add
or
lahf
add
mov
es
jne
inc
and
xchg
fucomi
stos
mov
enter
stos
sbb
leave
mov
popf
cmpsl
jb
in
rcll
pop
dec
divl
xchg
in
jns
push
fimuls
xor
jae
push
or
mov
cmp
sub
das
dec
cltd
or
fmuls
mov
shlb
push
mov
cs
dec
inc
test
in
int3
xor
and
xchg
jno
cmp
sarb
cmp
scas
fwait
das
mov
movsl
js
mov
lret
std
inc
mov
jle
shrl
cmp
mov
jmp
sub
std
jecxz
jecxz
push
in
mov
mov
push
jns
and
lret
outsl
mov
sbb
les
push
outsl
dec
and
sar
jecxz
addb
inc
mov
mov
lcall
int
lods
xchg
or
jmp
gs
ss
sbb
push
jecxz
imul
mov
fcoml
pop
pop
jmp
sbb
sub
or
and
mov
fld
in
xchg
push
pop
cmp
sbb
sbbl
cmp
sbb
cmpsl
jmp
cmp
mov
xchg
xchg
mov
xchg
orl
shll
popf
repz
push
scas
aam
fidivrs
into
out
repz
mov
sub
bnd
xchg
dec
and
and
call
leave
push
xchg
and
sbb
mov
fbld
cmpsl
add
dec
std
push
adc
pusha
mov
in
es
cld
xchg
mov
pop
or
test
sbb
push
mov
in
fcmovnu
cmp
mov
in
into
add
std
xor
mov
gs
lret
add
sbb
sub
popf
daa
js
mov
jecxz
push
ds
sbb
jb
fisubs
cmp
ds
gs
xor
in
ret
cmp
cmp
sbb
mov
test
rclb
fsub
push
inc
sbb
lods
hlt
pop
fs
pop
or
jns
xchg
fimuls
into
pop
jns
inc
je
insl
fstps
es
popa
adc
push
push
fists
test
adc
adc
mov
test
gs
inc
and
dec
mov
pop
sbb
mov
or
jmp
lea
cltd
into
enter
push
test
dec
cmp
pop
xor
stc
nop
xor
imul
dec
and
lods
jl
push
sbb
repz
out
xor
lock
and
test
fcomi
movsb
mov
fildll
xor
jbe
jg
fstpt
fstenv
jne
adc
loope
inc
adc
cwtl
dec
add
in
mov
popl
lea
xor
dec
mov
andl
cltd
xor
rolb
out
jg
lods
loopne
jg
sbbb
sbbl
adc
pop
adc
mov
adc
mov
popf
or
xchg
cmp
push
imul
daa
leave
js
pop
jmp
nop
mov
sahf
ret
jb
std
pushf
jecxz
jae
lea
mov
into
cli
clc
pop
daa
mov
sbb
mov
lods
fcmove
loopne
fstps
es
rorl
lods
mov
mov
nop
fs
push
es
lahf
lcall
pop
lods
xor
mov
jo
lods
fimull
lahf
ds
push
xchg
insl
icebp
dec
push
imul
mov
jmp
loop
rcrb
movsb
inc
pop
jb
and
in
insl
pop
mov
dec
mov
and
jl
xor
sbb
add
adcb
outsb
ret
jl
sbbl
stos
call
shlb
scas
cmpsb
fstpl
xchg
adc
shrl
je
pop
sbb
lret
inc
push
jbe
hlt
sti
in
sub
lock
jmp
cmp
stc
and
pop
sbb
dec
add
lret
sub
shrb
xchg
push
pusha
jmp
mov
cmp
dec
xchg
or
mov
xchg
and
sbb
leave
jae
fs
push
popf
insl
std
test
mov
push
jp
stos
test
push
xchg
xor
loopne
pop
xor
js
das
or
call
jl
xchg
mov
les
dec
sub
pop
and
pop
mov
fidivrs
cwtl
and
pop
mov
test
pop
or
nop
ljmp
dec
jno
inc
cli
out
cmp
js
adc
cmpsl
daa
mov
jmp
mov
aaa
mov
out
mov
push
inc
jns
mov
leave
add
jae
ljmp
xchg
out
les
sti
mov
fadds
test
xlat
or
push
jp
adc
into
fstps
test
push
cs
push
insl
add
or
mov
xchg
mov
add
outsb
ret
mov
push
and
inc
xchg
xchg
cmpl
in
aas
scas
cli
dec
aad
lahf
decb
xor
add
imul
in
pop
pop
xor
sar
sbb
loope
lcall
ds
or
pop
fidivrl
sbbb
dec
pop
add
pop
mov
mov
jbe
sbb
mov
inc
pop
adc
fsts
cmp
add
mov
sbb
and
nop
sbb
aaa
fmull
fwait
adc
xchg
inc
cli
insl
ja
cmp
jle
dec
ds
les
lcall
xchg
repz
mov
mull
iret
push
popf
popa
nop
cmc
inc
pop
mov
sbb
mov
and
jae
mov
dec
sbb
rcll
leave
std
lret
stos
xchg
or
adc
mov
inc
aas
das
test
jae
out
push
ret
xchg
test
sti
into
sbb
jg
aas
and
pop
andb
ret
push
adc
in
xchg
pop
xor
lock
mov
xchg
movsl
in
ds
and
dec
lret
xor
aaa
adc
push
mov
xlat
ret
and
pop
cltd
insl
sbb
jns
jnp
iret
pushf
insb
or
inc
fwait
subl
leave
pop
xchg
ret
call
jmp
popf
addb
adc
insb
sbb
cmp
repz
mov
outsb
gs
and
out
fidivs
sub
test
cs
lcall
mov
and
addb
mov
fsub
dec
ret
cmpsl
xchg
popa
inc
add
es
pusha
stc
ret
scas
in
jno
les
pop
sub
fisubs
ja
and
xchg
rolb
out
lods
add
pop
inc
sub
iret
mov
addr16
add
mov
fwait
cmpsl
sbb
je
pop
inc
jns
sbb
into
in
cwtl
insl
ficoms
adc
xchg
xchg
call
fldl
pop
xchg
xchg
and
mov
cmp
insl
xor
test
mov
dec
rorl
xchg
cwtl
les
jecxz
enter
cltd
and
add
pop
lret
sub
mov
nop
adc
mov
sub
xchg
andl
ret
xor
in
std
shrb
sbb
dec
lods
roll
mov
outsl
add
adc
jne
push
mov
in
inc
pop
ret
leave
add
data16
mov
sbb
scas
aam
push
imul
stc
mov
lret
xor
xchg
jmp
sti
pop
lcall
and
mov
xchg
inc
and
aam
sbb
in
xchg
popa
mov
mov
mov
ss
stc
xor
or
jmp
out
dec
sbb
rclb
imul
lahf
lret
lock
dec
movsb
cmp
mov
test
lahf
pop
mov
into
dec
add
ljmp
popf
mov
jl
stos
les
js
int3
sarb
roll
test
push
daa
es
push
jmp
pop
sub
popa
and
das
stc
std
adc
inc
mov
pop
push
xchg
dec
repz
insl
jg
xor
xchg
mov
and
int
lret
dec
push
jae
sahf
mull
popf
popa
mov
and
jae
push
outsb
and
push
daa
mov
jnp
mov
rclb
iret
mov
and
cmpsb
repz
mov
mov
js
in
mov
adc
stos
imul
test
xchg
fstpl
adc
addr16
mov
pop
mov
push
xor
daa
push
push
or
xchg
mov
sahf
cmp
in
lods
sbb
sbb
jp
cmpsl
push
rclb
je
jno
outsb
daa
dec
stos
in
inc
sbb
add
es
jns
ja
push
cli
imul
sbb
mov
cs
cmp
or
lahf
xchg
xchg
cmp
fwait
dec
jb
push
cltd
pushf
push
inc
mov
xchg
ret
push
inc
jo
out
sub
sbb
ret
lods
movsl
scas
mull
mov
jns
push
sub
pop
popf
out
arpl
dec
cmpsl
cwtl
dec
rcrb
sbb
push
inc
mov
roll
in
stc
jmp
daa
inc
icebp
and
js
imul
push
lods
sbb
movsb
sub
cli
rcrb
inc
push
icebp
mov
jb
fldt
jmp
and
out
dec
or
xchg
cmp
fists
cmp
pop
mov
mov
pop
lock
lods
lret
fcomip
sub
and
pusha
sub
inc
aaa
dec
testb
das
and
jmp
mov
jle
repnz
in
mov
out
and
stos
push
xor
push
lock
in
test
aaa
push
xor
dec
xchg
or
inc
sarl
inc
mov
dec
cmp
adcl
cltd
lcall
mov
lahf
add
mov
fdivl
mov
inc
sbb
arpl
nop
jne
adc
jb
pushf
scas
mov
dec
nop
xchg
lret
sbb
mov
mov
popa
ror
inc
xchg
aam
xchg
jno
repnz
stos
xor
outsb
or
cmp
xchg
fcoms
test
ljmp
xchg
jne
push
sbb
pop
not
cmpb
out
jp
in
clc
cltd
mov
les
jno
jns
or
jae
shlb
fwait
sbb
cli
xchg
jae
orb
mov
loope
test
pop
xchg
stos
aad
jb
nop
push
jne
pop
cmc
inc
sub
and
outsb
enter
or
out
inc
mul
add
jl
andl
arpl
push
lea
cmp
and
pop
xchg
or
mov
mov
sub
mov
and
jne
add
adc
rcrl
or
cmpsb
shrl
lret
or
cmp
xchg
push
xchg
cli
adc
cmp
sbb
inc
out
nop
in
fbld
in
pop
dec
lods
jl
sub
xchg
dec
inc
adc
popa
dec
jmp
cli
pushf
jp
xchg
arpl
inc
mov
leave
mov
popf
lret
ss
adc
adc
inc
mov
cmp
subl
push
mov
outsl
outsl
pop
push
xor
sbb
ret
jge
push
std
leave
mov
sub
lock
out
test
pop
mov
add
aas
aam
out
shrl
pop
mov
xchg
push
jb
clc
inc
insl
xchg
mov
adc
push
xorb
adc
jg
daa
push
dec
and
mov
pop
jecxz
mov
jmp
xchg
mov
or
movsb
dec
jmp
shll
mov
fdivl
sub
xchg
adc
into
sar
mov
ss
out
insb
fmull
pop
shl
pop
les
mov
adc
mov
pushf
or
out
outsl
sti
gs
test
stos
fwait
mov
enter
inc
movsb
sub
or
push
xorb
iret
jns
push
ficoms
notl
add
inc
push
imul
hlt
iret
xchg
decb
xlat
mov
daa
rcrl
mov
pop
mov
lret
or
lock
mov
or
aas
sub
xchg
mov
lahf
jmp
popf
sub
rclb
or
ljmp
cmp
jbe
mov
inc
inc
add
pusha
cltd
mov
fldcw
imul
xchg
rorl
or
sarb
ret
mov
xor
mov
mov
jg
popa
mov
daa
dec
pop
jmp
push
cs
adc
fsubl
inc
adc
pop
xor
ljmp
sub
in
or
js
jno
fmull
add
dec
xor
lret
mov
dec
lods
repz
mov
xchg
cmc
mov
sbb
pop
jae
pop
movsl
mov
jbe
gs
cmp
lcall
inc
mov
jo
lret
clc
imul
ja
shrb
outsb
decl
xchg
popf
adc
cmp
xchg
addr16
mov
push
push
mov
cmp
rcll
add
jge
in
xor
pop
mov
addr16
push
icebp
and
pushf
cltd
notb
into
or
sub
adc
and
and
fnstsw
out
jb
cmpsl
in
push
in
hlt
adc
xor
jno
lret
pop
sti
add
mov
sbb
mov
xlat
or
in
faddl
mov
dec
je
cmpl
fwait
or
in
fildl
mov
jle
lcall
bound
sahf
pusha
insl
inc
pop
ljmp
jg
jb
ret
jo
inc
inc
loop
jns
mov
rorb
test
je
push
loope
dec
out
push
push
outsb
out
je
das
insl
adc
xchg
push
push
insl
mov
push
in
dec
lahf
cmpsl
jecxz
jmp
mov
sub
scas
outsb
add
loop
xlat
pop
cld
out
and
push
push
mov
cmc
dec
in
jbe
repz
inc
fidivl
dec
lds
add
lret
gs
mov
out
hlt
add
pop
mov
fidivl
in
mov
xchg
es
dec
xchg
sbb
or
sub
inc
cltd
inc
mov
rolb
popa
inc
sbb
int3
push
and
cmp
imul
sbb
push
cmpsl
jmp
repnz
ss
sbb
sbb
push
jbe
mov
movsl
and
jmp
rcrl
sub
aad
xor
add
sbb
sub
xor
movl
lods
inc
mov
pop
jp
and
cmpsb
or
enter
lcall
and
dec
mov
pusha
clc
out
jbe
in
gs
in
stc
je
pop
add
fndisi(8087
mov
lock
lock
in
movsb
flds
leave
cmpsb
push
sbb
cmc
ficoms
insl
out
jno
add
mov
in
pop
mov
je
fnstsw
or
push
adc
lret
xchg
or
outsl
adc
jnp
aad
pop
arpl
mov
pop
cmc
jmp
rorb
int3
cmpsl
lcall
insb
and
and
movsl
dec
xor
xchg
adc
add
scas
xor
call
xor
test
and
push
mov
hlt
insb
mov
jecxz
aaa
call
in
adc
test
jo
movsb
add
push
xchg
cmp
jl
adc
adc
jg
clc
inc
gs
and
popf
cmp
push
push
jae
xor
fidivl
iret
mov
popf
mov
dec
push
lds
inc
or
lods
push
in
testb
out
mov
jmp
mov
lds
das
pop
les
mov
add
inc
or
movsb
lods
dec
sbb
mov
pusha
in
inc
ret
pop
and
iret
mov
cmp
mov
ds
sbb
mov
xchg
jge
or
test
mov
in
and
xchg
pop
jmp
aam
mov
pop
inc
testl
and
jl
inc
xor
adc
mov
daa
mov
adc
xchg
fisubs
push
or
jno
rcl
out
jno,pt
test
pop
in
fwait
rol
push
cmp
rol
repz
cmpsb
or
out
dec
xchg
scas
frstor
mov
sbb
xchg
or
add
push
outsl
jns
mov
sbb
xchg
aad
add
xchg
add
dec
inc
ret
lea
add
test
addr16
popf
std
in
jg
insl
js
rcr
or
call
ss
dec
test
and
std
cltd
push
sbb
int
xacquire
add
push
and
sub
adc
or
dec
negb
mov
push
mov
ficoms
jg
or
imul
mov
addr16
sbb
pop
dec
xchg
cmpsb
mov
mov
jge
leave
sub
or
add
stos
cmc
xor
shlb
cld
push
and
popa
adc
mov
in
sub
sbb
scas
sar
cmpsl
stos
fildl
sahf
pop
stos
icebp
add
push
xchg
push
rorl
mov
sti
mov
ljmp
scas
jmp
call
jnp
ds
mov
mov
inc
fmull
sub
adc
and
fadds
pop
fmuls
push
aad
adc
shrb
in
dec
arpl
jns
insl
xchg
and
icebp
lods
cmp
cs
adc
pushf
push
scas
aaa
rcl
mov
sbb
jle
test
jb
inc
mov
cmpsw
dec
pop
mov
mov
enter
adc
es
xor
pop
rcrb
push
inc
push
and
scas
push
jns
popa
sub
mov
cwtl
repz
or
in
fadds
jb
jg
movsl
dec
bound
mov
mov
sbb
xchg
outsb
pop
inc
inc
rol
push
enter
adc
lock
push
inc
pop
icebp
fs
loope
ret
push
pushf
pop
xor
sbb
xlat
cmp
pop
pop
xor
mov
jns
jb
mov
icebp
pusha
dec
jnp
out
sub
mov
jp
icebp
dec
lods
test
inc
into
lcall
stos
cmp
sbb
cmp
mov
push
xchg
and
add
decl
adc
xlat
inc
inc
icebp
sahf
and
int3
je
cmp
out
pop
dec
hlt
mov
out
mov
jo
hlt
int
shlb
adc
dec
cmpsb
or
mov
mov
push
lods
rclb
into
pop
xchg
jb
jo
lods
data16
or
loopne
dec
mov
andl
and
mov
mov
in
sub
mov
addr16
movsb
push
cmp
dec
fcmovnb
mov
das
mov
pop
mov
divl
push
int3
insl
movsb
or
sbb
sti
bswap
ret
fnsave
idivl
int
rol
inc
dec
stos
and
lahf
jge
rcrb
sub
or
cli
es
out
jmp
sbb
xor
adc
test
imul
jb
mov
fldl
stos
mov
dec
scas
cwtl
aaa
lods
ds
enter
jno,pt
sbb
test
jg
lods
fistps
adc
add
pop
jns,pt
int3
xor
add
mov
fstpt
stos
hlt
rcr
cli
mov
dec
or
xor
shl
jb
push
dec
mov
push
adc
imul
outsb
push
dec
cwtl
mov
loop
stos
and
insl
psubusw
repnz
in
push
lret
jp
cmp
pusha
cmp
dec
lcall
mov
xor
xor
adc
xchg
jbe
je
js
inc
mov
dec
jne
and
xchg
adc
mov
and
das
imul
clc
outsb
cwtl
pop
loopne
cmpsl
push
pop
sub
xor
sar
or
pop
push
lock
mov
out
cmpsl
xchg
in
add
sbb
cmp
insb
arpl
lahf
and
xchg
jo
daa
inc
ljmp
pop
mov
mov
cmp
outsb
pop
stos
push
mov
adc
jg
push
loopne
cmpsl
bound
mov
xor
cmpsb
and
shlb
lods
stc
adc
stc
jae
out
jle
movsb
mov
in
xor
mov
mov
imull
and
mov
pop
in
mov
xchg
or
cmp
aaa
push
jl
lahf
je
cmp
iret
sub
inc
int
rcl
sub
inc
push
xor
in
lods
jo
add
mov
test
in
aad
rclb
lret
mov
adc
pop
pusha
icebp
push
lods
push
pop
xchg
outsl
mov
loope
push
xor
jo
sub
mov
mov
nopl
cmp
pop
rcl
daa
in
mov
add
out
adc
add
mov
jmp
xor
out
je
sbb
inc
adc
ret
cwtl
cmp
or
pop
sahf
xchg
aaa
jge
es
imul
pushf
lret
fnstcw
xor
mov
xor
jb
aas
dec
cmpsl
into
cld
aam
adc
xchg
xchg
movsl
rcrb
dec
mov
in
cmpsb
cmp
cltd
mov
nop
mov
push
mov
movsl
inc
aad
movsl
xchg
sbb
xor
stc
or
xchg
xchg
mov
adc
sub
insl
mov
fucomp
mov
lods
cmc
mov
jbe
dec
mov
dec
adc
out
mov
sub
repnz
daa
adc
loope
out
mov
jbe
push
lcall
enter
push
test
movsl
aas
and
inc
lret
lret
pop
ds
inc
mov
mov
and
sbb
lret
mov
or
or
lret
mul
and
cmp
cli
cltd
gs
mov
inc
fldcw
imul
push
push
cmp
sar
mov
in
mov
xor
out
xlat
andb
cltd
sub
push
cwtl
addr16
das
dec
test
jp
jne
in
lds
scas
mov
iret
test
pop
adc
fsts
xchg
je
push
push
stos
adc
sbb
xor
into
cmc
testb
lea
ja
ss
rolb
fmuls
lock
cmpsb
inc
sub
or
mov
ret
fwait
iret
mov
pop
fadd
mov
mov
out
mov
mov
jmp
loopne
xorb
sbb
mul
loopne
xchg
hlt
fidivrl
jo
test
shll
add
pop
push
je
outsl
push
mov
jge
mov
and
sbb
inc
pushw
sbb
mov
sub
cmp
popf
mov
icebp
movsl
test
imul
ss
inc
xor
and
jg
mov
push
sbb
xchg
mov
aaa
call
cmp
outsl
jnp
sub
push
cld
sbb
push
push
mov
je
jmp
sbb
adc
std
shrb
mov
sbb
int
ffreep
and
test
xor
icebp
xor
lea
mov
scas
incb
pop
std
sub
shr
scas
mov
push
xchg
sahf
sub
popa
xchg
add
rcrl
test
dec
fxch
push
shll
lods
pop
jne
lock
mov
or
cltd
cmp
push
leave
jecxz
mov
xchg
mov
lcall
push
mov
mov
std
mov
push
pop
scas
adc
or
inc
jae
sbb
pushf
mov
add
ljmp
push
mov
vpmulhuw
int3
ret
mov
lods
cltd
inc
add
sbb
or
mov
inc
mov
and
movsb
pop
icebp
adc
lock
lcall
sbb
push
xchg
push
sbb
cld
jns
in
out
repnz
mov
cmp
sti
in
int
add
mov
or
leave
add
adc
push
shr
loope
mov
push
xchg
cltd
jns
mov
mov
xor
or
dec
fs
in
cld
test
xchg
push
gs
xor
inc
in
jmp
sti
aam
add
out
mov
das
lods
push
mov
in
rcrl
inc
and
inc
out
add
jge
jmp
sbb
push
clc
adc
cwtl
push
lea
inc
pop
adc
ja
inc
popa
daa
cmpsl
cmpsl
pop
mov
lahf
jg
lret
mov
pushf
jns
es
dec
cmp
mov
cld
push
sub
cmp
ja
je
pop
mov
icebp
or
sub
sahf
fbstp
push
jnp
jne
jg
sarl
pop
arpl
int3
pop
and
cmp
jnp
insl
idivb
pusha
mov
in
sbb
in
loopne
dec
insb
subb
or
lock
xor
out
enter
rol
jns
loopne
pop
stc
xchg
cmp
push
fs
mov
jb
pushf
jbe
std
decl
sahf
ja
dec
mov
lret
in
test
pushf
arpl
lea
mov
sarb
lock
cmp
cmp
sub
and
movsl
push
sbb
inc
xchg
mov
outsb
and
lea
cld
aas
jmp
in
push
xchg
jno
iret
out
aad
add
adc
scas
in
lds
shlb
dec
loope
cld
insb
xchg
cmp
cmp
jecxz
test
jmp
inc
dec
lock
call
out
cli
add
sub
mov
or
sbb
cmpl
ljmp
scas
das
or
in
lods
out
mov
shll
lahf
int3
dec
or
xor
int
call
repnz
push
or
ljmp
movsl
mov
shrl
aaa
test
pop
popa
adcl
loopew
mov
leave
fsubrl
lea
or
jae
imul
pop
pop
jae
cmp
int3
inc
test
in
bound
inc
mov
or
sti
mov
packsswb
inc
inc
mov
inc
add
stos
xor
xor
sbb
loop
pop
pop
sahf
adc
lock
and
cs
shlb
push
push
dec
fidivs
ret
jo
pusha
popa
or
cmp
scas
out
fstpl
mov
add
cwtl
loopne
clc
decb
aaa
inc
mov
leave
and
loop
xchg
out
pop
cld
in
mov
jae
call
in
scas
inc
mov
sub
mov
cmpsl
pop
inc
mov
idivl
in
inc
fistpll
aaa
into
dec
pop
lds
inc
jne
outsb
push
in
cmp
push
mov
mov
pusha
data16
xchg
lcall
dec
iret
inc
lcall
idivb
push
jl
out
cmp
leave
jge
sbb
inc
mov
dec
out
stc
sbb
mov
xor
adc
int
sahf
je
and
jns
xor
xchg
jbe
sbb
jecxz
push
ds
sub
icebp
in
or
add
lahf
pushf
sbb
jecxz
stc
cmpsl
push
dec
inc
xor
jae
fs
into
add
add
loope
cmp
imul
je
lret
mov
adc
es
xchg
loopw
adc
je
loop
jno
adc
mov
std
out
sbb
xor
sub
arpl
sti
mov
jne
inc
popl
fbld
pop
data16
xchg
leave
fidivl
pop
add
inc
cmp
push
fisttpl
addb
and
fst
jbe
lea
aad
dec
adc
pop
ja
stos
jae
inc
enter
rorb
movnti
repnz
xchg
adc
int3
pop
fstl
fidivs
jb
ds
std
hlt
inc
out
pop
inc
cmpsl
push
test
mov
pusha
sub
inc
fldenv
bound
lahf
xchg
pop
les
sbb
fcmove
test
out
mov
scas
ja
insb
and
or
cmp
in
push
sbb
sub
mov
imul
xorl
aaa
xchg
test
shr
cmpsl
ret
scas
dec
outsl
pop
pop
push
pusha
lret
push
aam
ss
jno
adc
or
das
bound
dec
mov
cmpsl
mov
cmp
push
loop
movsl
or
iret
rol
jae
mov
nop
fidivs
xor
sbb
jbe
test
mov
push
iret
sub
dec
xor
xor
lea
sbb
repz
cli
test
jo
add
adc
xchg
lods
xchg
push
and
dec
cmp
ret
rorb
lret
push
dec
mov
inc
addl
sub
lock
pop
xchg
or
rorb
add
imul
imul
and
stos
rcrl
adc
cmp
insb
fcoms
ret
mov
push
cmp
mov
leave
jne
out
cmp
ljmp
test
sub
iret
hlt
add
adc
or
stos
push
xchg
xchg
xchg
xor
fildl
mov
aad
mov
scas
sbb
cmpsl
sbbl
xchg
jnp
xchg
ja
add
test
fnstenv
pop
and
out
pop
orps
jmp
aaa
mov
fadd
fnstenv
test
mov
cmc
fcmovnbe
xlat
sub
imul
clc
mov
outsb
xchg
push
jne
inc
fisubl
add
in
dec
jno
xchg
sahf
inc
pop
lret
repnz
push
mov
lock
stc
jle
mov
push
mov
shll
push
popf
lods
movsb
aas
js
jp
aam
dec
mov
sbb
jnp
fisubrl
ret
cmc
cli
push
mov
imul
adc
divb
stos
xor
sbb
dec
mov
ficomps
shlb
sub
adc
sub
inc
push
cmp
or
shr
jno
gs
inc
cmp
mov
jp
jmp
xor
hlt
mov
and
sub
add
insl
inc
mul
fisttps
lret
sub
xor
sahf
fiaddl
push
jle
mov
and
adcb
jb
stc
das
xchg
lods
inc
mov
movsb
and
or
imul
pop
fxch
je
loop
xor
jns
dec
stos
dec
in
dec
adc
inc
outsb
xchg
imul
jbe
arpl
test
push
mov
fisttpll
iret
sub
scas
cs
dec
in
jno
divl
xchg
inc
insb
je
sbb
pusha
call
or
pop
inc
xchg
dec
aaa
mov
in
cmp
jmp
out
in
mov
mov
imul
mov
and
je
inc
push
lods
imul
inc
jmp
lcall
mov
in
pop
hlt
add
jne
das
push
jnp
mov
and
outsl
cmp
popf
aam
jae
push
fdivrs
adc
andb
add
rorl
stos
rcll
push
dec
lret
and
or
sahf
mov
and
or
pop
les
imul
in
sbb
adc
jo
popa
not
pop
jmp
pop
jb
imul
sbb
pushl
inc
pop
adc
adc
cli
push
dec
fdivl
or
call
xlat
arpl
inc
pop
cli
add
xchg
mov
pushl
mov
sbb
addr16
data16
cwtl
jae
xchg
fimuls
sbbb
push
pop
mov
repz
fldenv
test
dec
xchg
lret
xchg
push
pop
pop
add
push
add
test
aas
repnz
dec
subb
dec
pop
mov
cmp
inc
xor
pop
add
cli
mov
xchg
insl
cmpsl
clc
fidivs
loopne
pop
sbb
sbb
push
cmp
lods
cmp
test
aaa
enter
leave
shll
cld
in
mov
out
cmp
sbb
sarl
push
mov
push
loop
les
cmp
sahf
dec
je
adc
jle
cmp
mov
je
dec
pop
movsl
cli
push
fcmovbe
mov
insb
addl
lahf
lods
in
lahf
hlt
loope
sarl
jp
sub
pop
aaa
out
mov
adc
jo
in
add
cmp
jbe
and
cmp
xchg
out
je
iret
scas
ja
and
mov
mov
push
push
jno
shrl
dec
fisttpll
rolb
je
scas
xchg
js
xor
loopne
stos
icebp
add
cmp
pop
sbb
jo
js
mov
dec
push
pop
cmp
aas
pop
xchg
inc
mov
xor
inc
adc
call
mov
mov
add
inc
or
push
and
mov
repnz
ficoms
divb
rcll
fwait
in
nop
jp
push
and
pop
push
sub
cmp
dec
mov
mov
inc
imul
push
inc
fsubrp
ss
rolb
test
xchg
xor
pop
imul
sbb
in
repnz
and
repnz
outsl
cmpsl
movsb
sub
dec
lods
cmp
pop
and
inc
or
iret
ja
gs
inc
mov
andb
bnd
mov
xchg
fcoms
mov
out
sub
add
out
lret
pop
test
and
push
pop
lds
sub
out
repz
loope
cld
fistl
dec
lods
adc
je
pop
repz
call
std
fbstp
or
loop
daa
shrl
pop
mov
stos
ret
push
xor
iret
dec
jl
mov
je
lods
adc
adc
mov
test
push
pop
enter
loope
xchg
ja
dec
dec
cmp
xchg
insl
clc
sbb
in
adc
scas
dec
jns
pop
pop
roll
jl
jbe
pop
sbb
ret
lds
repnz
ds
cld
add
data16
int3
mov
jp
sbb
lret
ror
pop
dec
and
inc
mov
shll
arpl
js
pop
inc
jb
sub
sbb
in
lss
cmp
mov
mov
adc
xor
dec
or
add
lcall
lret
mov
or
dec
or
inc
lock
jnp
xchg
adc
rolb
je
inc
out
push
loopne
pop
gs
sbb
in
inc
or
adc
mov
pop
or
arpl
jbe
cld
lods
lock
gs
dec
shlb
scas
cltd
fsts
cmp
dec
test
xchg
mov
loop
cld
bnd
fsts
jg
jecxz
outsb
aas
test
sbb
iret
inc
ja
fdivrl
scas
stos
movsb
pop
add
mov
pushf
inc
xor
fstpl
jge
cwtl
inc
jne
mov
mov
scas
je
pop
popf
ljmp
push
aam
aam
xchg
xor
sub
int3
cmp
mov
arpl
mov
push
xor
les
loopne
pop
cmp
xchg
iret
roll
inc
add
sti
xchg
out
or
movsb
out
pop
adc
xchg
test
lock
iret
test
lock
sbb
push
dec
loop
mov
add
dec
mov
test
stos
pop
xor
insl
sbb
into
inc
ret
xchg
cmp
orl
adcb
cmc
cltd
fidivl
test
sbb
pop
nop
fwait
inc
sbb
movsl
ljmp
xchg
aam
into
lea
fiaddl
sti
push
bound
and
mov
sti
and
push
inc
lds
sub
test
and
movsbl
mov
aaa
std
or
icebp
js
dec
in
mov
ljmp
xor
lret
jmp
push
mov
scas
imul
cs
push
je
jle
sbb
add
adc
inc
fldcw
loop
dec
lods
dec
aam
iret
loope
sahf
lret
xor
push
dec
stos
test
xor
jle
mov
popf
mov
mov
subb
icebp
cmpsb
sbb
imul
fnop
sub
xlat
mov
xor
push
rclb
fisttpl
into
sbb
jae
add
pop
push
xchg
arpl
mull
lds
adc
mov
ljmp
adc
popf
xor
xorb
dec
adc
dec
xchg
clc
xchg
adc
cmc
mov
repnz
and
mov
js
fildl
test
jl
loope
loop
mov
ja
shrb
sar
test
lret
mov
daa
mov
adc
xor
mov
mov
pushl
sti
push
cmp
ja
mov
xchg
ret
fdivrl
lcall
push
mov
daa
jbe
pusha
imul
mov
test
cmpsl
xchg
cmp
shlb
sbb
inc
out
adc
push
dec
fsubl
or
mov
insb
enter
out
cwtl
and
cmpsl
xchg
in
fisubs
in
dec
add
sbb
xchg
loop
add
mov
mov
mov
lods
xchg
mov
adc
outsl
dec
add
lds
push
int3
mulb
push
mov
iret
inc
fwait
sub
imul
xchg
lret
jg
aaa
addl
pop
xchg
xor
aaa
popa
sbbb
loop
cli
std
pop
loope
shll
add
mov
push
lahf
mov
mov
mov
xchg
mov
repz
cmp
sbb
pop
or
pop
cmp
arpl
or
out
push
in
add
push
mov
das
pop
lds
sbb
mov
stc
xor
fisubrl
rcr
or
movsl
and
mov
scas
movsb
sub
xchg
jbe
in
jo
mov
and
xor
leave
lcall
jne
mov
mov
pop
jmp
and
jo
xchg
xorl
sub
mov
cmc
or
stc
sbb
fwait
ss
jo
arpl
mov
or
leave
imul
cmp
jae
leave
cmp
mov
xchg
fcomip
sahf
inc
mov
or
and
cmp
addr16
setge
adc
and
inc
inc
add
data16
loope
sub
sbb
jnp
addl
mov
enter
dec
pushw
jle
mov
jns
aaa
popa
or
popa
cmp
mov
int3
lods
xchg
sbb
pop
mov
std
mov
enter
xor
test
cmpb
jmp
fs
int3
scas
cld
cmp
js
dec
dec
xor
fidivs
outsl
mov
arpl
ljmp
popa
sbb
mov
mov
jle
push
mov
xor
add
icebp
jmp
mov
and
ja
loope
fistl
int
add
inc
stc
das
lods
inc
not
movl
shll
popf
or
sub
dec
sbb
lahf
mov
rorb
pusha
mov
addl
data16
push
pop
mov
and
daa
sub
mov
push
ret
pop
nop
add
movsl
push
mov
adc
leave
mov
mov
popa
aas
cli
lds
cltd
mov
fucomip
mov
xchg
add
dec
mov
xor
mov
mov
aam
pop
mov
jmp
gs
test
sbb
popa
clc
lret
test
imul
jmp
test
punpckhbw
sub
repz
jg
stc
mov
push
lods
sbb
mov
add
sub
push
out
add
mov
xchg
push
inc
dec
lcall
adc
pop
mov
xchg
mov
icebp
push
aas
stc
test
data16
mov
aad
mov
adc
clc
stc
outsl
rclb
in
sub
test
roll
dec
mov
mov
fisubrl
xchg
jp
int3
sbb
xchg
ja
pop
in
cmpsb
pop
aam
or
lds
mov
test
mov
dec
or
dec
cltd
scas
jae
jmp
sarl
xchg
dec
out
jb
mov
push
cmp
and
dec
stc
push
mov
stc
inc
fsubrs
jb
enter
cmpsb
sbb
in
jle
rcll
addr16
ds
clc
mov
push
cmp
nop
add
xchg
mov
stc
aas
jecxz
frstor
in
mov
cmp
fnstsw
mov
imul
sub
mov
dec
cmp
jb
das
mov
or
or
ret
rorb
cwtl
xchg
nop
fimuls
cmpsb
or
test
je
jp
pop
push
imul
rol
lea
cli
js
ret
out
mov
dec
pop
cmp
pop
nop
xchg
adc
repnz
loop
xor
lahf
inc
push
daa
pop
sub
ret
and
pushf
sub
or
and
repz
mov
mov
testb
jo
or
mov
mov
js
xchg
dec
enter
sbb
xchg
or
mov
xor
clc
push
mov
cwtl
sub
dec
add
xlat
fcmove
adc
lock
cmpsl
pop
or
xchg
test
xchg
xlat
push
or
and
add
dec
cmpsb
clc
lods
insb
out
adc
xor
dec
leave
xchg
xor
sub
jns
dec
mov
xor
sahf
ja
mov
jecxz
lahf
jno
call
das
lods
inc
in
jne
dec
mov
jecxz
stc
adc
mov
dec
jmp
out
mov
repnz
pop
shr
outsb
and
out
fistl
sub
leave
jl
fsts
jb
es
stos
in
out
lret
inc
mov
pop
mov
jo
popf
mov
out
sbb
std
popa
xchg
mov
and
pop
fdivr
cmp
popf
inc
sbb
xchg
and
xchg
adc
in
lahf
push
push
aaa
dec
mov
jmp
cmp
cli
rcll
popl
inc
rcrl
lods
lret
xchg
and
movsl
add
adc
inc
cs
sti
fistps
std
aas
adc
inc
je
xchg
les
inc
je
call
cmc
fadds
ss
idivb
leave
or
fcomi
lret
insl
push
pushf
fmuls
xchg
lret
xchg
jle
push
fisttpll
dec
das
sub
adc
pushf
loop
cltd
iret
bound
jns
cmpsl
das
add
loop
imul
sbb
sbb
push
adc
mov
adc
lock
cmp
call
cmp
dec
push
and
fdivrp
mov
sub
jge
xchg
dec
or
aas
jo
cmp
xor
ljmp
inc
fbstp
cmp
ljmp
mov
or
sbb
sbb
push
xchg
push
and
aas
mov
cld
popl
xchg
add
repz
jmp
adc
jae
adcl
out
dec
and
add
imul
daa
pusha
add
and
and
jmp
frstor
idivl
das
sbb
inc
dec
xor
push
inc
out
xchg
bound
lret
idivl
sbb
jae
aas
cli
lea
or
add
test
mov
aad
dec
test
int3
sub
sti
rorb
pop
fisttpll
clc
in
jae
je
in
lds
filds
adc
dec
or
and
idivb
and
lds
cmp
std
movsb
ret
aam
clc
xchg
push
add
pop
aaa
and
jge
scas
stos
or
sub
jns
push
sbb
addr16
test
sub
pop
pop
in
sbb
movb
cli
cmpsl
insb
cmp
jp
push
push
inc
popl
cli
loop
add
cmp
mov
int3
push
cli
enter
mov
pop
mov
and
mov
add
ds
xor
xchg
sbb
push
out
sub
into
aam
sarb
push
xrelease
xchg
fcomip
pushf
jmp
les
movsl
arpl
lods
ss
scas
pop
pop
outsb
push
push
cmpsl
fdivrs
sti
dec
xchg
daa
in
pop
in
rorl
fisubrl
int
dec
cwtl
push
add
mov
pop
addr16
stos
jmp
cld
mov
or
shlb
dec
ss
jle
loopne
cmp
cmpsl
out
fimull
in
mov
stc
add
xchg
mov
xchg
imul
insb
xchg
leave
sub
das
clc
movsl
xchg
aas
rep
or
jne
push
mov
test
repnz
test
push
in
push
testb
jge
int3
in
xlat
xor
mov
mov
enter
mov
lret
mov
inc
fwait
add
into
xor
inc
pop
iret
into
or
scas
xor
jo
jl
inc
loope
icebp
stos
ds
mov
stos
mov
mov
dec
cs
cmpsb
mov
sub
daa
pop
ljmp
xor
xor
and
ds
hlt
outsl
pop
cmp
call
cmp
test
clc
in
inc
dec
stc
int3
lds
mov
add
push
add
test
xor
test
sbb
ss
out
aaa
xor
icebp
pop
test
mov
popf
pop
and
arpl
shlb
mov
jne
sbbl
mov
or
rclb
shrl
sbbb
pop
das
jp
rorb
mov
push
pop
in
or
cmpsl
ljmp
fwait
and
xchg
jle
xor
aam
mov
outsl
cmpsb
js
pop
jge
mov
lret
sub
leave
pop
fadds
dec
stos
flds
jecxz
mov
jl
dec
stos
enter
sbb
inc
or
pop
sahf
pop
imul
push
push
mov
call
add
flds
mov
ljmp
hlt
mov
rcrl
pop
loopne
sbb
scas
jle
loopne
mov
dec
mov
and
jle
cld
jae
xchg
xchg
lea
sbbl
mov
enter
pop
inc
push
fistpl
mov
ss
push
aaa
mov
mov
iret
dec
mov
cmpsl
sub
mov
fsubl
mov
cltd
xor
ds
fidivrs
ror
add
sub
add
loop
xor
mov
scas
ret
addr16
adc
pushf
mov
mov
push
aaa
imul
mov
jle
movsb
inc
loope
test
ret
pusha
xor
lcall
xchg
dec
push
repnz
imul
cmp
or
add
stos
xchg
iret
sar
cmpsl
or
sbb
sub
sub
or
aaa
stos
negl
cltd
enter
mov
push
je
mov
fwait
out
and
nop
mov
jge
cmp
testl
out
fstpt
cmpsb
stos
mov
enter
add
test
pop
ret
push
fcmovne
push
insb
addr16
add
cmc
insb
and
cld
xchg
push
sub
jmp
adcb
jle
out
js
mov
xchg
int
test
enter
shrb
push
stos
pop
popa
ret
mov
stos
outsb
pushl
repnz
or
mov
pop
jns
dec
or
clc
push
cli
movsl
inc
cmp
mov
iret
inc
insb
jb
dec
jp
and
mov
insb
dec
enter
or
imul
xlat
fcompl
ja
mov
fwait
lea
ss
mov
aaa
add
inc
and
push
sub
push
rcl
or
or
mov
add
cmp
stos
mov
mov
sub
fidivs
incl
or
stos
or
push
sbb
push
fstpl
scas
jns
ret
and
rol
lret
or
mov
or
or
sbb
test
je
ror
in
ret
inc
add
push
cmp
subl
add
stos
pop
and
cmp
fiadds
cld
inc
adc
sub
jae
jl
mov
xchg
ret
in
ja
push
jne
push
test
cmp
orl
xor
fnstcw
jl
int3
mov
jge
fs
push
pusha
push
mov
outsb
sbb
sbb
inc
xchg
test
sub
out
pop
adc
sub
push
mov
inc
mov
imul
movsl
dec
dec
pusha
cmpb
gs
lock
pop
mov
mov
or
gs
cwtl
jmp
cmp
aam
and
out
add
test
scas
inc
fcmovnbe
out
and
fucomp
insl
jb
repz
popf
cmp
test
popf
pusha
sbb
out
push
mov
xchg
ffree
mov
mov
ret
outsb
pop
loop
outsl
jno
iret
push
pop
mov
xchg
in
pop
mov
mov
inc
jecxz
movsl
call
inc
imul
pop
push
mov
outsb
xor
and
inc
mov
sub
dec
inc
jne
fcomps
imul
in
js
push
cmc
sbb
es
cmp
outsl
add
fsubrs
mov
into
jbe
test
dec
fildl
xchg
in
stc
loope
pop
jo
les
xor
cmp
orb
or
adc
dec
push
add
jge
xor
aam
icebp
adcb
les
jmp
popf
add
mov
bound
push
dec
cs
xor
dec
pop
ret
shll
pop
sub
pop
lret
aaa
jnp
mov
push
cmp
jae
loopne
cs
jecxz
pop
out
cmp
movsl
cmp
and
adcl
mov
and
leave
xchg
jne
subl
cmp
xchg
int
inc
movsl
fcoms
fimuls
cli
push
cmpsl
lret
xchg
js
pop
test
mov
scas
inc
xchg
fidivl
out
or
xor
scas
mov
aaa
outsl
push
jbe
mov
mov
pop
fwait
add
aam
push
push
lds
aad
nop
outsb
lahf
fistpl
test
movsb
xchg
mov
dec
mov
mov
cmp
xor
pop
pusha
adc
pop
sbb
xchg
shlb
pop
inc
or
inc
adc
lds
int3
adc
xchg
lods
xor
fidivs
and
sti
jno
jne
add
jbe
js
and
negb
inc
repnz
mov
mov
pop
xchg
jae
lahf
orl
inc
xchg
inc
sbb
mov
dec
sub
adc
push
push
cmc
inc
xor
or
xlat
or
fdivrl
mov
push
dec
jo
negl
stos
push
jb
fistpl
lods
rorb
mov
fisubl
sub
out
push
sbbl
mov
scas
fidivrs
popa
movsb
clc
loope
push
jo
je
pop
xorb
mov
mov
test
and
xor
push
xor
fisubrl
cld
out
sbb
push
out
mov
or
cmp
fmull
jbe
push
inc
aam
jae
push
push
mov
fs
mov
scas
inc
dec
sub
mov
icebp
bound
ja
xchg
and
cmp
dec
or
cltd
add
inc
dec
adc
or
cmp
rcl
sub
lcall
jge
mov
xor
addb
sbb
mov
lods
jns
outsb
push
hlt
leave
adc
jno
fisubl
dec
stos
cmpl
enter
sub
mov
cmp
jmp
mov
movsb
dec
xor
int
mov
jle
xor
mov
add
fbld
lahf
aaa
mov
push
lock
dec
mov
scas
and
test
rcrb
in
pop
enter
jp
add
pop
push
lds
pop
adc
aad
pop
sahf
fiaddl
cmp
testb
enter
jae
data16
popa
inc
dec
lcall
pushf
jmp
in
and
popa
xlat
pop
pop
je
pop
imul
add
sub
movsl
mov
in
fstpt
xchg
movsb
data16
hlt
and
jnp
lods
je
cld
repz
xchg
pop
outsb
mov
test
test
xchg
aam
sbb
push
es
sarl
sti
lods
mov
jecxz
adc
xchg
incl
pop
xchg
addr16
pop
sub
xchg
cli
inc
shr
nop
add
pushf
jge
pop
mov
xor
lahf
xchg
imul
xor
push
cmpsb
pop
inc
xchg
ja
sbb
movsb
int
push
jae
adc
movsl
clc
adc
sub
sbb
popf
repnz
push
leave
push
repnz
mov
or
out
lret
xor
test
inc
xchg
mov
std
jbe
inc
push
xchg
pop
fstps
testb
movsb
test
cmp
lahf
data16
cmpsb
out
data16
aam
push
ficomps
cmpsl
xor
rclb
fucom
jmp
in
ffreep
stos
cmpsl
mov
lcall
jg
dec
out
xchg
and
pop
out
shlb
xchg
xchg
mov
lret
sbb
pop
outsb
jne
xchg
sub
inc
xchg
and
mov
jg
and
cltd
mov
adc
les
mov
movsl
repnz
pop
push
add
or
popf
pop
andl
icebp
lret
add
add
push
and
xchg
test
mov
inc
imul
pop
sti
imul
outsl
xor
cmc
dec
xchg
outsl
lea
xchg
xchg
lret
push
jne
mov
repz
mov
loopne
fdivr
cmpsl
ja
mov
xor
mov
ljmp
xchg
dec
roll
popa
nop
xchg
fwait
inc
aas
adc
xor
push
push
dec
and
stos
or
mov
jge
repz
lods
pop
stos
movsl
cmp
fistpl
xor
hlt
negl
adc
inc
xchg
enter
out
mov
ljmp
rcrl
ljmp
mov
imul
xor
sub
filds
lods
outsb
sub
in
xchg
outsb
xor
movsl
push
pop
sub
xor
nop
mov
mov
inc
cmpsl
cmp
sub
jne
sub
inc
push
ss
xor
shl
add
ljmp
outsl
and
or
std
mov
pop
xchg
in
mov
jp
adc
xchg
ljmp
push
stos
gs
pcmpeqw
xchg
xor
add
mov
push
sub
rolb
rolb
or
pop
add
adc
fnsetpm(287
std
std
mov
mov
dec
shl
aas
pushf
xlat
lahf
mov
dec
out
out
pop
subb
xor
mov
stos
scas
xchg
repz
push
fwait
loop
jmp
lds
outsl
xchg
add
cld
cmp
not
jae
pusha
sbb
setbe
cmp
mov
iret
loop
mov
divl
dec
jg
sub
cmp
or
imul
loope
mov
dec
lahf
std
jl
adc
or
mov
rol
mov
adc
aas
mov
scas
xchg
lcall
dec
cmc
scas
movsb
lahf
or
push
pop
adc
stc
mov
xorb
xor
js
inc
fnstsw
aas
pop
fld1
jno
dec
rcr
test
mov
xchg
insl
xorl
mov
sub
call
jo
mov
pop
scas
xchg
xor
and
test
arpl
out
sbb
sbb
stc
inc
fdivrp
jecxz
push
add
xlat
rolb
cmc
mov
jmp
cmp
sbb
ss
pusha
sbb
cmp
adc
loope
jns
push
sbb
loopne
jo
xchg
js,pt
pop
add
sub
movsl
push
push
or
cmp
mov
test
mov
rcrl
loopne
and
add
xchg
mov
jb
xor
inc
sti
sarb
pop
xchg
popf
ss
loope
rol
loopne
das
inc
or
xor
cmp
jno
mov
fdiv
mov
outsb
xor
mov
xchg
fstl
bound
enter
out
sbb
sbb
gs
repnz
adc
pcmpeqw
mull
xchg
cmp
jno
sahf
lods
cwtl
dec
sbb
push
mov
and
outsl
inc
jno
cmp
dec
cmp
aam
add
mov
mov
je
test
fs
push
xlat
add
push
jbe
pop
mov
int3
in
jae
push
xor
mov
pushf
mov
jle
jp
outsl
and
sarl
dec
jmp
mov
jnp
ficompl
fisttps
sub
sub
cmc
iret
shl
jbe
jns
push
hlt
lahf
cmp
jno
lret
lods
jp
clc
cli
sub
fiaddl
mov
cmc
pop
mov
cltd
shlb
push
scas
and
int3
arpl
jmp
in
sbb
pusha
movsb
mov
xlat
jmp
inc
jo
and
incw
outsl
mov
push
cmc
push
adc
sub
out
sbb
in
inc
cmp
std
jmp
inc
fnstsw
jae
xor
sub
push
or
enter
add
and
dec
mov
bound
movsb
mov
je
pop
fsubrp
aaa
mov
cli
imul
pop
arpl
loop
es
adc
sahf
outsl
cmp
add
lret
out
popa
jmp
sbb
hlt
adc
jbe
scas
mov
aad
movsw
clc
sahf
pop
jmp
add
push
push
adc
out
pusha
stos
xor
jmp
jne
inc
repz
dec
roll
inc
push
mov
ret
int3
pop
xchg
inc
roll
outsl
mov
lcall
movsl
pop
cs
fistps
xor
jno
and
pop
lcallw
pop
pop
mov
mov
rclb
stc
es
add
rcrl
imul
push
dec
adc
mov
aaa
pop
icebp
ret
popf
adc
sbb
dec
sbb
mov
aaa
dec
mov
cmp
fstps
repz
mov
cmc
pop
adc
cmp
stos
inc
mov
mov
mov
ljmp
push
or
scas
jne
cmp
cmc
insl
mov
dec
cli
lret
xchg
jb,pt
lds
fwait
inc
jae
adc
add
cmp
aam
inc
and
pop
pop
xchg
movsl
dec
mov
iret
shl
les
jno
jecxz
pandn
faddl
adc
lcall
and
flds
adc
mov
mov
in
mov
lret
or
add
pop
das
xor
shrb
les
fs
sarb
adc
xchg
frstor
lahf
clc
pop
das
movsb
mov
push
hlt
and
sbb
loop
jb
das
iret
mov
push
lods
les
aam
push
push
push
cli
cmp
outsb
je
imul
aas
mov
mov
out
aaa
leave
dec
aas
add
dec
js
jge
pop
imul
push
push
xor
push
int3
dec
pop
adc
lods
movsb
popf
outsl
addb
icebp
mov
dec
scas
jle
shlb
notl
push
fxch
ror
push
arpl
mov
jl
adc
hlt
mov
aas
aaa
insl
and
jb
mov
fadd
jnp
jbe
imul
out
lret
and
jecxz
and
sahf
and
ret
outsb
loopne
sbb
mov
dec
dec
test
test
pop
mov
sub
xchg
std
jge
push
xor
in
cmp
lret
jno
or
div
ficoml
sbb
jecxz
inc
push
mov
popf
cmp
or
xlat
fwait
je
xlat
aaa
cmp
xor
and
int
lds
jl
imul
popa
orb
imul
gs
push
adc
mov
mov
jae
lret
push
inc
cmpsl
fmulp
xor
aas
jp
aad
pop
mov
iret
xor
test
cmpb
and
leave
shl
dec
fiadds
pop
adc
adc
imul
ret
jge
pop
xor
lcall
inc
mov
int
push
xlat
and
repnz
or
mov
xchg
or
stos
fistl
adc
test
loop
add
pop
scas
or
jmp
sbb
jecxz
dec
dec
gs
mov
pop
icebp
hlt
dec
adc
mov
push
les
jne
out
xor
test
add
fwait
mov
out
sub
sub
jl
sti
mov
das
cwtl
inc
scas
out
outsl
les
mov
sbb
push
xor
mov
xchg
ss
jns
push
jbe
sub
bswap
push
adc
aam
fldcw
push
xor
lret
data16
xchg
clc
outsl
loope
jb
pusha
sbb
xchg
add
mulb
ret
jo
cmp
lahf
loope
push
insl
outsb
out
sbb
stos
lds
mov
adc
sarl
xchg
in
dec
dec
inc
jecxz
imul
dec
in
stc
mov
cmp
nop
mov
fwait
in
shl
int
rorb
into
out
cwtl
test
dec
mov
add
pop
stos
aaa
add
scas
out
cld
pushf
mov
es
mov
cmp
add
test
notb
data16
xor
roll
jnp
ret
pop
push
hlt
push
push
xchg
lret
sbb
jle
inc
dec
scas
fsubrl
cmp
inc
scas
andl
lret
addl
inc
cmc
fbld
xchg
jmp
repz
das
sub
push
je
add
jp
fdivrp
add
mov
pop
mov
cmp
repnz
icebp
out
mov
into
insb
mov
pop
jge
mov
fcomps
add
repz
pop
test
sbb
into
dec
mov
fs
add
loop
jns
loope
add
add
fsts
loopne
lea
sarb
mov
pushf
and
cmp
scas
pop
fisttps
mov
outsl
sbb
imulb
mov
rcll
or
jbe
jmp
out
into
insb
xchg
jmp
xor
rcll
mov
push
push
orl
mov
push
push
es
test
pop
cld
clc
xchg
jo
mov
dec
fcmovbe
pusha
xchg
xor
test
pushf
ds
popaw
pop
movsl
test
sbb
clc
js
push
mov
mov
push
mov
mov
stos
scas
push
cmpsl
dec
neg
dec
movsb
dec
imul
dec
pop
push
out
mov
pop
or
inc
out
adc
ljmp
cwtl
in
push
dec
gs
add
sti
repz
iret
dec
jnp
dec
pop
cmp
mov
arpl
mov
xor
cs
mov
jl
adc
jns
scas
hlt
push
push
cmp
test
insl
scas
cmp
dec
dec
mov
fdivrs
movsl
in
clc
xadd
lods
lret
pop
jg
inc
pop
aad
or
scas
mov
pop
pop
lds
push
inc
inc
mov
pusha
call
fisubl
insb
sub
jle
or
scas
repz
lds
xlat
xchg
das
mov
iret
mov
aaa
test
daa
mov
shll
cmc
cmc
mov
scas
push
jmpw
push
cmp
ret
ja
pop
sbb
cmpsb
mov
push
sbb
or
xorb
jns
ds
into
hlt
jg
in
in
das
dec
xchg
pop
pop
push
sahf
andl
cmp
sbb
adc
dec
repz
call
pop
pop
sbb
ss
loope
inc
ret
cmpsl
aas
push
stos
cmp
arpl
ds
lea
lret
xchg
sub
add
ja
es
int
mov
or
push
jne
fisttps
mov
neg
test
jecxz
rorb
imul
jne
or
xor
fptan
sbb
repz
jmp
or
decl
fs
pop
aad
sbb
mov
mov
xchg
sub
mov
mov
sar
icebp
ljmp
ret
sub
pushf
rcr
inc
mov
lcall
subl
xchg
dec
cmp
mov
addl
add
mov
jae
jl
mov
in
addr16
cmpb
bnd
pop
xchg
sub
mov
add
xchg
hlt
and
mov
push
xchg
loop
mov
dec
mov
or
inc
lds
outsl
or
shr
push
mov
mov
int
xchg
test
je
inc
pop
pushf
pop
bound
mov
sbb
dec
dec
aam
out
ret
outsl
stos
sub
imul
or
mov
divb
mov
insl
sbbb
into
push
push
outsl
cld
out
inc
and
cs
mov
iret
jno
call
mov
add
jg
push
dec
fcmovnb
out
stos
data16
mov
loope
loope
mov
pop
test
mov
cmp
mov
xchg
inc
stos
aam
cmp
add
sub
popa
sbb
xchg
sbb
andl
fiaddl
shrb
dec
inc
sbb
in
sub
lcall
lahf
mov
ds
les
enter
sub
fsubs
dec
push
ret
psubsw
add
cmp
test
mov
loop
outsl
test
nop
orl
jecxz
dec
xchg
dec
in
add
and
adc
pop
inc
add
mov
mov
je
popa
ss
xor
mov
sbb
push
in
push
push
aam
repnz
xchg
lods
js
stc
pushf
out
aam
cmc
push
dec
js
sub
std
mov
popa
mov
fsubr
pop
pop
pop
movsl
psrlq
int3
dec
jle
js
mov
mov
lds
xor
push
int
gs
jge
or
xchg
jns
mov
inc
push
out
lods
dec
sub
or
scas
or
jle
inc
jne
rorb
cmp
or
out
dec
sbb
addb
mov
xchg
stc
jmp
aad
inc
scas
sbb
iret
or
ret
push
xor
or
sub
cwtl
mov
adc
es
push
inc
jge
pop
inc
loope
mov
popl
lea
sahf
call
pop
inc
xchg
push
mov
and
mov
int3
lret
or
jae
dec
stos
sbbl
inc
sbb
jne
pop
or
repz
jp
ss
jb
adc
sbb
insl
mov
push
clc
stos
aam
push
pop
pop
add
cmp
xchg
push
mov
fildll
push
mov
lea
mov
pop
dec
adc
pop
mov
push
mov
lahf
or
cmc
jg
pop
pushf
adc
ljmp
lret
mov
out
xchg
mov
jo
out
inc
imul
incl
lods
outsb
cs
jge
fiaddl
rcr
lcall
and
adcb
ds
data16
push
lahf
jmp
stos
mov
in
sahf
xor
cwtl
je
dec
pop
in
xor
daa
jp
jecxz
add
jne
stc
push
mov
nop
inc
daa
jns
xchg
js
mov
pop
ror
adc
sbb
add
pop
scas
shlb
sub
mov
stc
xor
inc
leave
xchg
adc
std
or
arpl
jl
mov
sbb
cmp
dec
lahf
sti
call
add
mov
cmp
sub
xchg
inc
lock
pop
mov
lods
frstor
jns
mov
pop
inc
dec
jle
sbb
jmp
out
and
cmp
xchg
repz
mov
jp
adc
and
scas
sbb
aas
mov
mov
cmpsl
loop
shlb
xchg
and
fs
pop
faddp
jb
xor
and
dec
lods
or
jmp
inc
hlt
call
cmp
in
or
loope
mov
xlat
xchg
xor
inc
shr
sub
lret
dec
loop
mov
push
jae
push
shrb
mov
mov
leave
pushf
js
lea
aad
mov
test
in
imul
jmp
jbe
sub
mov
outsb
popa
push
cmp
push
lret
cmp
push
xor
mov
mov
fimull
pop
stc
in
sub
and
xchg
imul
aad
std
push
stos
clc
mov
pavgw
aas
rclb
xchg
je
xchg
enter
testl
cli
or
stos
cmp
test
mov
push
jbe
jl
lods
xchg
cwtl
jbe
and
inc
repnz
aam
mov
ljmp
sti
enter
mov
push
sbb
mov
leave
push
jae
fidivrl
daa
mov
das
xchg
mov
inc
ret
pop
xor
testl
jge
pop
or
dec
add
arpl
fwait
mov
in
mov
dec
scas
mov
ds
mov
lret
adc
cmp
jns
dec
outsb
fistpll
cmp
mov
push
lods
bound
pop
push
mov
lret
pop
jge
rorb
mov
jle
imul
mov
add
fs
push
mov
push
pop
xchg
mov
and
fmull
dec
xor
inc
sub
mov
in
sbb
lcall
shrd
push
lcall
aaa
mov
arpl
pop
xor
popfw
int
adc
test
test
pushf
and
add
aad
movsl
aad
int
ficoml
xor
sub
xor
dec
mov
push
arpl
pop
pop
inc
pusha
dec
daa
jns
in
int3
sahf
leave
les
mov
mov
popf
shll
push
push
mov
ret
and
cmpsb
add
mov
enter
mulps
lods
test
ret
stc
mull
xchg
push
orb
mov
repnz
inc
iret
xchg
movsl
pop
bound
inc
mov
mov
mov
pop
enter
dec
adc
mov
pop
jmp
adc
add
arpl
dec
jmp
test
repz
cmp
sbb
add
dec
cmp
jns
ret
mov
or
adc
sbb
inc
mov
lods
jmp
xor
shrl
repz
movsl
popa
lret
mov
rorb
push
stc
and
cmpsb
push
mov
cmpsb
out
leave
addr16
push
test
xchg
aad
loope
fdivs
pop
aaa
jecxz
inc
sub
ss
push
mov
pusha
lods
fdivrs
push
in
pop
test
fs
and
dec
inc
negl
sbb
xchg
iret
ds
arpl
loopne
push
xchg
test
mov
outsl
and
fbld
push
aas
pop
or
mov
jo
xor
rclb
sub
fisttpl
sahf
xor
inc
adc
push
sub
pop
cmp
dec
das
shl
jae
cmp
jae
adcl
fldt
push
xchg
adc
out
rorl
cmp
mov
cmp
sbb
sub
outsb
mov
and
rorl
push
or
outsb
outsl
loop
sub
or
repnz
lea
xor
adc
adc
das
add
sbb
add
add
aaa
jns
jns
mov
xor
lock
mov
xor
into
scas
int3
adc
xchg
dec
jae
popf
pusha
xor
fidivl
bound
inc
mov
popa
dec
aaa
roll
fucom
sub
mov
mov
adc
ret
ds
jb
lods
pop
cmp
sub
ret
pop
cld
outsl
jecxz
sub
fcoms
cmp
cmp
push
cmc
mov
adcl
mov
sub
shll
lock
sub
idivb
cmp
mov
mov
insb
mov
addr16
scas
aaa
mov
pop
shrb
jbe
lock
outsb
mov
ret
jle
xchg
sub
ljmp
sub
in
stos
jb
add
xchg
xchg
test
stos
out
jmp
pop
aam
mov
enter
repnz
imul
mov
mov
not
add
fnstsw
iret
fldcw
jnp
aaa
cli
adc
lea
clc
enter
loope
pop
push
xlat
inc
inc
mov
add
xlat
sti
mov
pop
fwait
aam
inc
add
fcomi
and
xor
sahf
mov
adc
shlb
cmc
aam
ret
ret
int
cmpsl
jno
sti
sub
in
js
dec
lods
and
lret
ljmp
scas
xor
rorb
int3
jg
xor
stc
jbe
mov
dec
rcll
repz
push
addr16
ja
cmp
mov
jmp
outsl
sub
dec
xor
and
add
mov
pop
mov
mov
xchg
aad
enter
sbb
inc
lret
cltd
sbb
add
lahf
shrb
dec
cld
arpl
jbe
cvtps2pd
outsb
outsl
cmpsl
in
jmp
inc
mov
pop
scas
cmp
test
inc
enter
adc
aam
cli
mov
in
test
pop
ficoms
xor
xor
jne
sub
sbb
xchg
out
mov
jo
add
jl
mov
sbb
rorb
jb
mov
inc
dec
mov
add
stos
push
jl
jne
mov
mov
hlt
mov
daa
push
and
or
daa
add
in
and
dec
pop
test
mov
bnd
sbb
nop
aam
add
lods
rorb
loopne
mov
push
or
jp
and
push
pop
movsb
xchg
js
or
jb
fstpt
jecxz
and
mov
sti
sti
or
xchg
rcrb
iret
popa
mov
sbb
jno
nop
and
push
xchg
pop
dec
mov
adc
or
call
ljmp
mov
je
mov
mov
sub
xor
xor
sbb
xchg
sti
test
test
roll
and
add
jle
cmc
add
aas
or
pop
shll
push
pop
movsb
xchg
popa
leave
fldt
sub
jno
int
outsl
xor
xchg
push
je
rorl
rcr
xor
push
inc
push
mov
inc
jge
ljmp
jg
mov
insb
pop
xchg
dec
xor
mov
pop
aaa
adc
bound
js
pop
mov
movsl
and
mov
adc
out
inc
lret
jp
ja
pushf
sbb
aaa
das
lods
push
pop
in
jns
jg
mov
adc
rorb
imul
lret
aam
repnz
imul
mov
and
mov
mov
jb
fsts
or
inc
lea
std
jg
movsb
push
roll
mov
rorl
inc
add
xor
addr16
imul
sub
or
inc
dec
jmp
aam
stc
popa
mov
mov
add
lret
enter
push
jns
xlat
rcl
out
lahf
out
int
or
ss
mov
incl
hlt
inc
out
repnz
jg
sbbb
jle
adc
sti
mov
xchg
daa
adc
or
in
xchg
or
lret
jnp
mov
arpl
call
es
or
pusha
adc
negl
and
sbb
sti
xor
pop
jno
lock
outsb
pop
imul
push
add
inc
leave
sub
push
push
sbb
mov
into
mov
push
bound
out
cmp
scas
adc
and
dec
int3
xor
mov
outsl
cmp
jb
cwtl
js
imul
sti
or
or
ss
les
test
cmpsl
xor
dec
dec
test
shlb
push
mov
lret
mov
arpl
loop
sub
sbb
pusha
jp
or
insb
mov
into
jne
ljmp
sub
xchg
add
jl
adc
cmp
or
mov
or
int
movsb
mov
or
fwait
mov
leave
call
mov
push
push
mov
jbe
add
dec
cmc
push
push
out
mov
sbb
sub
lahf
aas
aad
inc
mov
in
mov
or
jecxz
scas
jle
jne
push
xchg
cmpsl
mov
add
mov
xchg
or
inc
cmpsl
jp
or
dec
pusha
out
gs
fisubl
frstor
xlat
push
insb
add
aaa
sbb
adc
sahf
sbb
test
mov
sbb
push
and
xchg
pop
popf
dec
xchg
dec
lcall
mov
add
jnp
clc
mov
cli
popa
daa
jnp
decb
push
inc
cmp
shrb
in
add
pop
xchg
mov
and
lods
dec
dec
or
stc
ja
and
in
ds
inc
std
push
sahf
xchg
sar
sbb
add
adc
adc
es
icebp
call
scas
pop
arpl
rcl
mov
imul
xor
xlat
imul
cmp
push
pop
sbb
hlt
aas
mov
mov
cld
add
pusha
sbb
lret
data16
jb
dec
int3
and
mov
wrmsr
xlat
ret
jmp
les
clc
repz
mov
ret
sbb
ficoml
mov
push
and
movsb
rcrb
jae
fisubrl
lods
loope
mov
ds
push
add
pop
subb
decb
xchg
aaa
add
xor
adcb
negb
and
or
sbb
and
ficoml
testl
cli
je
lret
mov
das
xchg
loop
test
outsl
push
cmp
push
cmp
notb
stos
test
cmp
jg
cmpsb
sbb
mov
mov
add
lahf
xor
mov
xchg
in
je
sub
ljmp
repz
mov
repnz
lods
or
popf
cmp
clc
lods
pop
test
daa
mov
imul
xchg
loop
test
int3
insb
pop
ljmp
fnstsw
jle
iret
push
jb
or
mov
cmp
add
movsl
out
mov
sub
std
push
cmpsl
pushf
in
xchg
pop
fwait
ret
add
int
mov
stc
lret
mov
push
add
sarl
popf
enter
cmpsb
dec
stc
hlt
dec
test
inc
rcrb
insb
fwait
daa
pop
int3
pop
add
xlat
sub
sub
fnstenv
mov
rcll
or
inc
sub
inc
mov
sub
test
popa
cmp
test
xchg
js
mov
dec
je
aas
adc
mov
imul
shrb
addr16
es
das
push
es
or
pop
icebp
sbb
lock
jns
mov
loopne
or
xchg
daa
mov
test
pop
dec
jb
sahf
pop
inc
repnz
jbe
sbb
xchg
test
pop
fisubrs
mov
rcll
mov
and
pusha
test
xchg
xor
xchg
scas
out
dec
dec
roll
push
xchg
sbbl
jg
test
sub
ret
xchg
lods
pop
jns
pop
cmpsl
fsubp
push
mov
fisttpll
lods
xor
adc
jne
mov
mov
dec
lcall
mov
sarl
out
ret
lret
pop
xor
stos
jns
jne
test
subb
std
sub
insl
add
divb
imul
mov
hlt
fidivl
lahf
pop
cld
and
lcall
bound
ret
jae
xlat
call
or
repnz
insl
xor
ss
aas
jmp
loop
testl
int3
ret
add
jns
inc
sbb
les
lea
mov
or
dec
int
mov
pop
pop
notb
fldt
subl
xlat
jg
xchg
mov
inc
lahf
rep
pop
mov
add
sbb
iret
outsl
pushf
scas
add
add
dec
and
push
scas
mov
jno
aam
cmp
mov
jmp
decl
mov
lock
insb
stos
pop
mov
pop
ret
push
ret
or
cli
dec
push
dec
popa
popa
and
stos
out
jecxz
inc
cld
imul
add
movsb
add
das
shr
inc
cwtl
es
mov
scas
inc
in
fwait
sarb
or
out
into
xchg
jb
jecxz
push
fisttpl
lods
dec
mov
fldenv
pop
in
cltd
mov
jbe
mov
pusha
mov
out
sarl
mov
or
or
ret
push
adc
out
pop
jae
cmp
mov
mov
xor
clc
mov
inc
sahf
inc
dec
loope
fs
xchg
insb
mov
sub
jmp
mov
mov
mov
mov
mov
fdivrs
jp
andl
orb
cmpsb
jbe
adc
jge
ror
mov
xchg
fbld
inc
push
add
add
fld
mov
inc
cmp
insb
jg
enter
cmpsl
inc
movsb
imul
in
push
lds
inc
dec
lahf
cmc
shl
lahf
mov
mov
dec
xchg
sub
inc
mov
cmp
insl
xor
push
ret
push
add
and
hlt
cli
ret
fidivrs
in
popf
aaa
sarb
mov
push
cltd
jae
xchg
jecxz
mov
sbb
nop
jno
jnp
dec
mov
push
sub
fs
jbe
gs
jge
xlat
jnp
ficoms
push
sub
mov
add
jp
add
lods
push
jle
xchg
mov
mov
xor
leave
jge
mov
mov
push
xchg
pop
jns
xor
jmp
and
movb
test
and
es
ss
movsl
scas
push
pop
dec
sbb
pop
lcall
push
popf
or
inc
out
add
cmpsl
js
inc
lret
test
shl
test
stc
fs
clc
add
lods
or
popa
xor
sub
inc
jmp
cmc
lret
dec
das
in
insb
push
ret
es
inc
lock
shrb
pop
daa
stc
add
xchg
negb
mov
in
push
push
insl
ret
fadd
mov
push
aaa
push
push
stos
push
data16
repz
incl
push
in
stc
push
pop
cs
test
push
aas
or
xchg
icebp
fdivrp
dec
filds
fs
pop
inc
push
jo
subb
jmp
popa
jle
inc
xchg
sbb
pop
push
leave
push
je
imul
scas
test
mov
fs
popa
mov
popl
xchg
cld
jo
rclb
mov
sarb
pop
clc
dec
lds
sbb
cmp
cmp
add
push
or
xor
hlt
mov
adc
clc
sub
mov
push
stos
and
stc
cmp
leave
and
adc
into
leave
fs
dec
adc
sbb
lods
adc
dec
test
ds
push
fimuls
stos
stos
jae
sub
fwait
pop
or
dec
clc
jecxz
xchg
mov
xor
push
test
dec
jbe
js
js
mov
fldt
pop
ds
fmuls
movsb
sbb
out
lret
add
jmp
xchg
jnp
mov
nop
xchg
sub
insl
mov
addl
mov
push
adc
loop
pusha
es
cwtl
or
mov
js
mov
movl
pop
mov
mov
out
inc
and
xor
inc
dec
jbe
aam
movsb
aad
push
mov
lock
outsb
mov
sbb
ret
stos
mov
xchg
sub
and
out
or
push
mov
cmp
cltd
stc
jecxz
xchg
andb
out
sub
mov
add
shl
mov
clc
xor
mov
add
stos
sarb
movb
mov
insl
mov
inc
inc
mov
dec
movsb
lods
push
cli
mov
jae
out
les
xor
mov
xor
or
cltd
lret
inc
adc
push
rcl
ja
mov
xchg
arpl
push
lret
pop
sub
sub
fdivrs
data16
lcall
push
adc
mov
cmp
loop
sbb
stc
ja
and
cmpsl
add
dec
inc
jl
shlb
mov
dec
inc
in
das
fwait
cld
addr16
adc
sub
and
push
inc
lock
in
cmp
imul
jno
mov
je
mov
jg
mov
add
testb
pop
and
popa
jne
dec
inc
pusha
inc
out
es
pop
lahf
js
jmp
xorb
pop
jle
inc
add
nop
sbbl
push
data16
das
clc
jge
jbe
cltd
sbb
push
jb
sbb
add
xor
and
jl
es
aaa
sbb
dec
lods
or
ljmp
mov
cmp
jecxz
cmp
clc
stc
mov
ret
sub
out
out
hlt
inc
or
push
xor
rolb
rolb
mov
or
es
cwtl
mov
pop
cld
jecxz
cmpsl
cmc
fcomp
xlat
push
jp
jae,pn
enter
xor
and
lret
fcoms
xor
roll
test
mov
sub
push
or
jnp
sahf
cmpsb
ror
jmp
lcall
iret
hlt
bound
jmp
cmpsl
mov
pop
add
push
sub
and
mov
stc
arpl
push
push
fld
lcall
das
call
mov
adc
enter
inc
not
gs
add
sub
and
cld
test
cmp
jbe
js
cmc
mov
mov
ljmp
xchg
adc
mov
in
adc
push
into
mov
sub
mov
mov
jno
mov
cmc
fcomp
lds
fisubs
dec
xchg
add
jg
inc
adc
sti
sbb
mov
sti
leave
dec
insl
aam
movsl
adc
pusha
out
jge
loopne
mov
push
lret
cmp
cwtl
rolb
xor
ret
cmp
adc
xor
sbb
mov
inc
cli
xor
cmp
rcl
adc
outsb
int
in
into
addr16
je
push
test
aam
mov
lret
cli
xchg
stos
iret
push
adc
xor
push
mov
mov
clc
gs
rorl
dec
icebp
scas
sbb
leave
push
push
or
and
or
or
push
sbb
add
or
jnp
mov
mov
mov
call
xlat
add
out
pop
jno
adc
add
jns
shlb
jno
pop
fs
loopne
jb
sbb
xchg
rcrb
inc
sub
insb
out
adc
jne
jmp
out
inc
jle
xchg
pop
sub
mov
or
jecxz
and
movsb
scas
cwtl
dec
mov
mov
fadds
push
mov
pushf
testl
inc
sub
es
lds
lcall
mulb
mov
xor
or
xchg
popf
push
cmp
movsb
sub
scas
cmpsl
pop
inc
xor
dec
inc
bound
xchg
mov
imul
mov
push
xchg
loope
clc
jbe
clc
mov
sbb
dec
es
scas
xor
add
fbld
fwait
mov
xor
sti
push
mulps
inc
inc
in
dec
sti
jecxz
jns
std
xchg
inc
sarb
adc
jge
sbb
or
lods
jecxz
mov
xchg
mov
xchg
cmpsl
sbb
sub
lcall
or
lods
and
rorl
je
out
pushf
sbb
mov
jecxz
loopne
and
sahf
sarl
insl
icebp
and
pop
lret
cmp
lods
xchg
mov
adc
jns
pop
xchg
mov
je
leave
popa
inc
fldenv
loopne
xor
iret
mov
xor
mulb
test
ds
xor
int
push
outsl
dec
clc
push
and
dec
loopne
lock
dec
pop
and
push
jbe
xchg
lcall
sbb
pop
add
movsb
ljmp
push
push
outsb
dec
in
jno
mov
std
das
inc
push
scas
or
int
icebp
pop
xchg
xchg
mov
push
sti
orb
sti
in
fisubl
repnz
inc
outsb
addr16
and
add
aam
pop
cmp
xchg
and
scas
or
in
scas
nop
cltd
adc
mov
les
imul
dec
lret
xlat
xor
cmp
xor
inc
xchg
xor
mov
movsl
call
cmpsl
add
std
push
shrl
cmp
pusha
push
sub
adc
push
daa
psllq
popf
push
cmp
jle
jecxz
aam
ret
or
arpl
dec
or
pop
sbb
or
movsb
jns,pn
xor
xchg
cmp
add
lock
iret
in
shll
mov
loop
out
subl
aam
cmp
dec
xchg
jp
insb
mov
ljmp
mov
mov
nop
or
and
in
mov
fadds
xchg
shrl
mov
in
nop
sbb
sub
stc
inc
push
jl
inc
xlat
cmpsl
cmpsl
aad
pop
jmp
bound
mov
dec
and
pop
pop
cs
dec
jnp
ss
lahf
dec
aaa
mov
push
xlat
idivl
fisubrl
xchg
and
dec
push
ret
pop
jne
mov
jecxz
mov
jle
and
mov
xlat
jae
inc
stos
or
inc
aam
mov
mov
mov
push
add
mov
ja
test
mov
push
mov
xchg
mov
cmpsl
xchg
in
xchg
shll
cmpsb
es
les
andl
jae
xchg
pop
push
pop
int3
enter
js
test
shlb
fcomps
in
rcll
popa
call
ret
jne
mov
pop
xor
xchg
popf
pop
xchg
addr16
dec
push
xchg
xor
ret
dec
test
xchg
test
mov
leave
push
gs
and
sub
ja
pop
inc
stc
jno
outsl
mov
jb
pushf
xor
imul
dec
popa
and
std
lds
dec
xchg
imul
js
sbb
xor
pop
pop
mov
or
pop
inc
push
in
or
jmp
pop
mov
cmp
jae
cmpsl
cmp
in
jl
iret
sti
inc
jo
cwtl
mov
sub
pop
sub
push
adc
fcmovb
mov
stc
xorl
mov
insb
mov
hlt
daa
std
dec
scas
test
enter
sti
adc
lock
cld
mov
push
mov
cmp
ret
mov
cltd
jbe
data16
mov
mov
aad
cmc
je
pop
sbb
sub
adc
mov
dec
pop
aaa
and
and
inc
loopne
daa
mov
in
pop
mov
push
test
inc
cld
push
sbb
jg
sbb
fdivl
ret
clc
lock
jle
jmp
sub
adcl
add
fwait
push
push
lret
loope
pop
movsl
xor
dec
xchg
idivb
test
hlt
lods
insl
mov
mov
je
xor
aas
and
outsb
int
and
mov
shll
xchg
icebp
cmc
dec
aad
dec
cwtl
ret
scas
ljmp
xor
mov
cld
pop
sub
icebp
mov
arpl
push
fiaddl
inc
ja
add
ficoml
ds
fbld
int
out
clc
aaa
data16
rclb
cld
bswap
repnz
adc
sub
ljmp
lret
outsb
adcl
and
inc
loope
lret
dec
adc
push
ljmp
mov
in
sti
scas
clc
cmp
aas
aam
and
sbb
or
push
mov
daa
fcmovnu
int3
jge
add
out
jmp
pop
push
mov
ret
sub
or
popf
test
in
sub
leave
dec
ja
mov
inc
inc
in
or
std
popf
movsl
xor
jb
xchg
jl
cmc
insl
adc
cwtl
xchg
sbb
in
jg
flds
inc
nop
fwait
clc
aam
pop
mov
inc
ret
adc
aad
fistps
jb
cwtl
imul
push
jne
xchg
lret
cmpsb
insb
in
loope
std
add
aad
mov
inc
and
adc
jge
jg
lcall
ds
stos
lea
lods
icebp
ss
lret
xor
outsl
jo
pop
xchg
pop
scas
or
hlt
mov
iret
cmc
lret
inc
push
jle
jb
jp
add
jmp
les
lret
or
int3
inc
loopne
xor
mov
and
and
adc
sub
ljmp
or
movsb
adc
cmp
push
jb
add
push
pop
lcall
sub
sbbb
sbb
mov
ljmp
daa
inc
add
inc
adc
jge
and
xor
and
push
push
sbb
fsub
adc
adc
adc
and
or
dec
jp
pop
xor
xor
and
pop
push
cmpsl
add
cmpsb
adc
loopne
push
pop
cltd
sbbl
xlat
and
mov
scas
ret
mov
ljmp
mov
dec
shrd
cli
mov
push
mov
ss
mov
pop
adc
mov
repz
lret
jno
sbb
dec
bound
insl
pop
inc
aad
jbe
clc
subl
jo
mov
dec
dec
fmull
push
fwait
push
push
cmp
imul
mov
mov
lods
addb
xor
xor
mov
movsb
mov
cs
pop
jle
push
jle
inc
mov
mov
hlt
clc
jns
out
pusha
pop
pop
dec
in
pop
fnstcw
in
les
fnsave
xchg
addr16
mov
js
ds
fistpll
cwtl
xlat
mov
inc
jecxz
leave
sbb
mov
push
sbb
ss
lods
orb
test
fmull
movsl
mov
jle
jo
lret
inc
shll
add
push
jbe
dec
add
jae
push
cmpsb
ja
ficomps
xchg
push
or
ja
lods
pop
das
pop
insb
inc
xchg
hlt
popa
and
es
repz
out
nop
mov
or
scas
pop
xor
jns
inc
imul
or
xor
push
xchg
and
mov
sti
je
rcll
xlat
lret
cmc
or
inc
insb
into
mov
call
in
lret
sbb
mov
jg
rcl
rcr
iret
dec
inc
xor
or
push
std
pop
lcall
cmp
rolb
mov
or
cmpsl
xchg
cmp
dec
jo
xchg
pop
xchg
xlat
add
xchg
pop
fadd
fldl
mov
addr16
xchg
push
loopne
stos
in
xchg
add
dec
in
xchg
inc
jb
add
cmp
cltd
push
aaa
stos
addr16
lods
xchg
adc
mov
lcall
repz
mov
add
jbe
js
cmp
imul
cmp
sub
outsb
test
lock
and
mov
int3
daa
mov
inc
lods
jle
xchg
cmp
mov
dec
inc
mov
out
lret
sbb
xchg
mov
pop
xor
jg
lea
cmp
out
push
call
rcrb
ret
loopne
ljmp
pusha
movl
inc
testb
icebp
push
aam
adc
cmp
sbb
lods
fcoml
sbb
push
cwtl
pop
mov
shrl
or
lods
cs
inc
inc
aaa
mov
test
xorb
sub
aas
sub
lahf
fcompl
fwait
xor
jb
cs
cmp
clc
cltd
mov
test
movsl
xchg
jns
jmp
clc
enter
and
cmpsb
scas
shlw
cs
pop
xchg
xlat
jle
test
mov
sub
dec
ffreep
add
outsl
mov
jno
push
adcb
adc
mov
add
push
pop
sub
loop
jae
mov
lret
pop
dec
scas
sbb
ss
pop
xchg
xlat
xchg
push
adc
lods
mov
aaa
dec
lods
mov
and
jge
sub
aam
popf
outsb
lret
jmp
in
in
ss
lret
dec
out
pop
inc
or
in
mov
xchg
dec
mov
arpl
xor
mov
movsb
push
loope
fisubrl
and
aas
cld
stos
xchg
xlat
clc
std
and
pop
fsts
pop
sarb
call
xor
cmp
cmp
popa
xor
bound
sahf
sub
into
aam
xorb
lock
les
inc
jge
cmc
xor
adc
jno
mov
ret
xchg
push
enter
out
xchg
sbb
pop
test
shrb
sub
mov
ljmp
and
xchg
cli
adc
jg
fcompl
popl
push
mov
cmp
loop
popf
sbb
gs
aas
push
test
jne
js
xchg
insb
add
jns
pop
inc
fstpl
ret
push
sbb
fisubrs
or
gs
shr
and
jo
cld
mov
push
or
fwait
js
cmpsl
and
mov
lods
jns
popf
mov
lret
inc
fdiv
xchg
or
inc
int
inc
stos
mov
and
pop
pop
sbb
fisttpl
dec
icebp
mov
insl
int3
sub
arpl
lcall
popl
enter
pop
loopne
enter
movsb
ja
js
xor
pop
fmul
jge
dec
out
mov
lds
xchg
int
push
mov
stos
clc
cmp
out
sahf
popa
push
negl
jae
ss
pop
jg
ret
cmp
lahf
inc
xchg
das
movsl
shrb
jg
push
pop
adc
cmp
or
push
aas
call
js
aad
jl
add
mov
sub
sarb
mov
out
loope
out
pop
pop
jno
mov
pop
fstpt
adc
fdivrs
jge
movsb
inc
mov
cmpsb
in
pop
sti
cltd
lahf
repz
lcall
pop
aaa
mov
jge
mov
jbe
in
mov
in
repnz
fdivrl
inc
popa
std
push
sahf
shlb
xor
dec
into
xorl
sbb
adcb
flds
cltd
add
inc
sub
int3
sahf
and
mov
js
rep
js
jl
sub
fcoms
xlat
es
xchg
fsubp
add
inc
std
outsb
lcall
and
lods
push
or
div
cmc
fistpl
popa
movb
mov
inc
out
dec
das
push
cmp
in
adc
jecxz
ljmp
mov
nop
rcrb
lret
mov
rcll
hlt
sub
pop
jp
xchg
dec
jo
sbb
xor
add
mov
shll
movsb
mov
adc
addr16
mov
push
mov
loop
jge
lods
and
sub
hlt
mov
dec
gs
das
fidivrl
jmp
test
mov
inc
and
movsl
stc
aam
clc
imull
xchg
popa
dec
or
or
push
nop
jns
repnz
cmp
mov
add
xchg
adc
mov
in
rorb
pop
adc
mov
jecxz
inc
mov
cld
scas
xlat
cli
stos
outsb
fldt
or
out
insb
pop
add
jae
inc
cwtl
mov
add
mov
cmp
jmp
or
jmp
dec
lea
wrmsr
lock
mov
or
xchg
fdivrs
orb
and
dec
dec
jb
outsb
jp
mov
rcrl
movsb
rol
mov
les
nop
sbb
push
xor
inc
push
lods
mov
xchg
orb
push
sti
add
xchg
icebp
scas
mov
sbb
outsl
adc
dec
jle
or
repz
xchg
push
mov
and
aam
scas
sti
push
sbb
mov
push
sbb
mov
mov
jno
adc
jb
push
xor
push
push
mov
stos
and
mov
jae
in
push
aam
in
stos
sahf
cmp
fdivs
xchg
jns
dec
rcr
cmp
test
aas
pop
cmp
repz
notb
and
shrb
rcll
std
outsb
rcrl
loopne
cmpl
ss
cmpsl
jbe
scas
insb
xchg
hlt
ds
jmp
sub
outsl
xchg
fidivrs
jp
ret
scas
mov
jecxz
cmp
xor
xchg
inc
mov
pusha
loopne
pop
notl
aam
into
inc
mov
and
push
int3
xchg
mov
das
outsb
or
mov
cli
inc
outsb
xchg
enter
jbe
rorl
inc
shll
nop
mov
scas
sub
add
pop
jg
mov
mov
nop
andb
cmpsb
xchg
stos
ds
cs
es
jge
pop
jnp
outsb
subps
mov
pop
imul
in
fstl
lret
cld
das
and
repz
xor
jmp
bound
adc
mov
jle
leave
outsl
stc
push
loope
mov
addb
jle
sbb
sbb
push
cli
mov
insl
pop
testb
scas
lods
jle
dec
aad
scas
push
int3
inc
inc
inc
dec
mov
dec
aad
cmp
sub
cmp
mov
fsubp
dec
out
and
imul
sub
xchg
in
fbld
mov
push
out
xlat
pop
arpl
and
sub
xor
inc
leave
add
stos
call
lret
mov
mov
sbb
pop
in
sub
mov
xchg
jno
fimuls
pop
jl
stos
cmc
inc
mov
shll
adcb
loop
xlat
sub
lea
xchg
mov
mov
rcrl
xlat
cmp
loop
xchg
jo,pn
sub
xor
xlat
cmp
cmpsl
sub
in
gs
jae
add
loope
mov
dec
movsl
pop
mov
add
daa
sahf
jl
mov
aam
das
adc
sahf
mov
cmp
fmull
push
fbld
lcall
push
inc
jmp
pop
dec
push
out
fcoms
int
arpl
sub
int
ret
jnp
adc
inc
ret
stos
fucomi
leave
and
inc
mov
inc
xorl
int
cmp
and
dec
bound
cmp
mov
push
imul
dec
cmova
xor
mov
inc
cmpb
or
mov
jmp
jb
sarb
pop
sub
cmc
xchg
ja
jp
shll
push
sahf
mov
xor
and
loope
jl
mov
shll
inc
push
push
sbb
out
and
test
mov
nop
jmp
faddl
pop
cwtl
pop
in
scas
repnz
inc
filds
imulb
jl
pop
mov
aaa
pop
sarb
cmpsl
outsb
sbb
pop
jne
mov
push
insb
inc
rcl
xchg
sbb
inc
clc
mov
jnp
push
stos
js
sqrtps
int3
dec
cld
cmp
or
adc
add
inc
cmc
imul
sti
or
cmpsl
call
in
int3
pop
in
mov
lock
jecxz
aad
sub
in
sbb
in
cmp
repnz
aad
sub
iret
push
ret
ficomps
or
push
dec
cmc
orl
jb
rcll
cwtl
sub
sbb
movsl
mov
lcall
inc
imul
in
loop
movsl
xchg
es
in
movsl
pop
adc
lret
insb
imul
jne
test
push
mov
fmull
es
shl
and
mov
ficompl
xchg
sub
ret
ljmp
mov
adc
into
sti
rcll
xor
inc
sub
pusha
repnz
enter
pop
inc
es
adc
add
into
sbb
out
hlt
cmp
lods
pusha
xchg
sub
and
add
inc
inc
jp
sub
nop
stc
dec
push
push
ds
push
sbb
push
loopne
stos
xor
aad
lds
mov
mov
jp
mov
xor
and
int
pop
jp
js
pop
push
in
sbb
mov
std
clc
imul
or
sub
dec
sub
add
pusha
sbb
mov
pusha
adc
lods
xor
xor
fists
std
fistpll
inc
js
fnstenv
sbb
fldl
inc
jp
xor
push
stc
or
insl
and
sbbl
xchg
mov
mov
fistpll
nop
sub
push
mov
adcb
insb
mov
ffreep
cmp
cmp
int
insl
cmp
dec
sub
repz
and
mov
fbld
les
das
movsl
or
push
fcom
sub
push
ror
jmp
insb
mov
fidivl
lock
sub
popa
inc
lret
xchg
shrl
mov
mov
dec
mov
stos
cmp
inc
cwtl
scas
cltd
in
pop
pop
je
pop
iret
stos
jnp
movsb
das
sub
iret
lcall
xchg
arpl
push
out
fists
jns
subb
and
push
jb
push
addb
dec
pop
xchg
in
adc
test
leave
cld
mov
and
into
mov
add
orl
dec
movsb
or
insl
adc
jne
and
inc
or
xor
iret
inc
mov
rorb
adc
xchg
jl
enter
mov
pop
dec
popf
stos
push
jnp
lods
bound
mov
nop
clc
pop
cmp
xor
pop
fwait
adc
dec
add
fcmovnbe
test
push
icebp
mov
das
mov
inc
jno
xchg
mov
pop
mov
shl
fs
pusha
sub
dec
jbe
jnp
xor
jae
xor
mov
fisubrl
xchg
imul
xchg
daa
jecxz
shl
fistl
in
outsl
inc
fisttps
xor
mov
sbb
jns
inc
or
fwait
jle
cmp
cmp
push
adc
fs
rorb
sub
cmp
jl
jae
pop
in
in
imul
aaa
push
sub
mov
clc
pop
rclb
rep
insl
orb
mov
or
in
loope
cwtl
negb
imul
loopne
into
inc
sub
jmp
pop
js
inc
loope
pop
xor
sbb
xor
cmp
in
pop
jecxz
movsl
pop
shl
fstps
xchg
mov
cmpsl
xor
mov
or
xchg
add
rcl
rolb
push
cwtl
icebp
jne
dec
or
in
push
sub
sub
add
lcall
enter
jle
jb
fcmovnb
xchg
xchg
std
jb
iret
hlt
out
call
adc
cmpsb
negb
lods
fwait
ja
cld
sub
inc
fbstp
pop
adc
aad
shr
xchg
lds
mov
lds
adc
mov
fisubs
aas
iret
out
pop
inc
aas
hlt
push
push
je
enter
jae
add
sbb
aam
lods
aaa
repz
inc
inc
insb
add
inc
xor
aas
repnz
imul
mov
mov
xchg
xchg
xchg
pushf
aas
jnp
sbb
add
mov
sbb
shrb
sub
add
adc
outsl
sub
cs
xchg
add
or
jl
flds
jge
mov
ret
adc
nop
ja
stc
mov
sbb
mov
mov
fwait
fsubs
cmp
aam
xchg
enter
daa
push
insl
and
dec
fwait
inc
inc
mov
push
mov
push
or
or
stos
pushf
push
jb
fsubr
inc
cmp
sti
push
sub
jle,pn
xchg
testb
out
dec
ljmp
push
mov
jno
mov
cltd
js
add
sbb
or
xchg
or
mov
test
jl
jl
sbb
jg
scas
add
sbb
scas
mov
insl
fstl
cmp
mov
and
add
and
test
jp
repz
jno
lret
push
sub
test
sub
or
std
scas
idiv
rcll
xor
in
sbb
iret
mov
stos
mov
dec
les
mov
pop
test
out
mov
jns
mov
pusha
mov
dec
xor
ja
nop
xchg
xchg
add
pop
andb
sahf
add
xchg
xchg
mov
sti
mov
jns
xchg
aam
adc
call
and
iret
push
rcl
sub
repz
xchg
inc
imul
inc
mov
and
or
mov
leave
fistps
cltd
hlt
imul
adc
call
fcompl
xchg
aam
cltd
ja
add
roll
xchg
psubq
movsl
fs
xchg
repnz
or
push
fsubrl
jmp
movzwl
mov
add
adcl
out
cs
aam
push
adc
xchg
out
pop
sarl
jl
shlb
out
test
or
pop
or
jo
sbb
xor
mov
or
jp
mov
lods
rorl
sahf
adc
mov
shr
jecxz
repnz
push
xchg
lret
xor
filds
call
call
xor
inc
dec
adc
cwtl
xchg
test
sbb
or
in
and
adc
call
in
es
cmpb
add
shl
xchg
mov
jns
xchg
adc
mov
repnz
pop
mov
lods
in
idivl
mov
mov
push
mov
lods
dec
nop
call
cmpsl
je
jg
sbb
cmp
sbb
in
or
aam
in
xor
pop
ret
js
cmpsl
jnp
sub
insl
sarl
shr
insb
orb
pop
jmp
jmp
pop
shrl
jle
sbb
dec
movsl
jle
mov
pop
push
rorl
mov
cwtl
cmc
add
sbb
arpl
adc
cmp
xlat
dec
iret
fnsave
push
mov
movsl
in
dec
inc
cmp
or
rorb
loopne
leave
pop
int3
je
ror
shrb
pop
pop
sub
mov
sub
mov
jbe
lret
mov
xchg
leave
sbb
fldt
jns
jl
xor
or
dec
push
insb
js
push
fsts
das
jl
cmp
cmp
mov
or
push
pop
xor
enter
add
scas
and
pop
xchg
lea
mov
das
scas
fsts
cs
fxam
add
jmp
ret
fwait
movsb
rcrl
fisubrs
into
adc
aas
mov
mov
scas
adc
stos
sub
inc
pop
repz
inc
test
mov
decb
push
and
pop
loope
inc
or
and
loop
dec
lret
xchg
pop
cmp
imul
lods
cmp
int
xor
sbb
leave
add
mov
mov
scas
rcrl
or
jp
add
fmull
imul
inc
test
xor
mov
push
aad
jns
xor
cwtl
cmpsb
pop
jmp
fucomi
mov
pop
cmpsl
sub
pop
cli
push
add
jp
shl
test
sbb
lret
or
and
cs
adc
cmp
or
inc
adc
repnz
lods
add
ja
aaa
icebp
or
leave
sub
or
loop
dec
icebp
daa
jge
ds
cwtl
mov
add
or
mov
scas
mov
push
cli
das
pusha
call
xchg
aaa
cmpsb
mov
leave
test
mov
add
add
pop
mov
adc
jnp
cmpl
outsl
es
mov
cmp
add
and
and
xor
sub
jne
arpl
xlat
shrl
test
int
push
movsl
xor
inc
jnp
jno
mov
in
mov
fnstcw
negb
out
andl
dec
mov
sti
fmull
pushf
pushf
nop
cmp
fdivr
das
faddp
mov
xchg
orps
mov
mov
mov
jne
push
imul
jbe
mov
or
mov
mov
or
xchg
es
nop
lods
out
push
daa
sbb
jge
or
xlat
inc
es
outsb
pop
push
lea
push
clc
xor
es
in
push
lds
stc
pushf
sbb
test
aas
popf
dec
in
in
insb
inc
mov
ljmp
push
out
push
jmp
jno
hlt
insl
movsb
popf
lret
test
adc
cltd
loop
mov
dec
pop
push
fcomi
add
sbb
out
adc
sbb
cmp
in
imul
jo
pop
lahf
sarl
push
popl
sub
mov
mov
inc
sub
movsb
decb
or
xchg
cmpsl
fsubl
mov
push
daa
movsb
cmc
xor
pop
aad
jmp
inc
repz
int3
addr16
cs
outsl
jmp
or
divb
sub
add
jbe
cmp
subl
stos
cwtl
cmpsb
mov
cmp
xchg
stos
aam
cmp
ja
mov
mov
push
dec
xchg
imul
mov
fidivrl
jmp
adc
movsb
fdivr
pop
jbe
inc
popf
stc
aaa
lods
sub
fs
out
lds
mov
insb
mov
aaa
add
jp
in
push
push
mov
mov
maxps
pop
mov
inc
xorl
ljmp
xor
int
ret
js
xor
daa
pusha
lcall
pmaxsw
lods
push
jb
or
lods
cmp
mov
adc
mov
insb
bound
push
mov
test
outsl
loope
outsl
loope
xchg
ds
inc
dec
popf
sbb
push
inc
pcmpgtw
cmpsl
mov
or
movsb
xchg
test
mov
ss
pop
lods
repnz
mov
std
cmp
push
push
jb
nop
sbb
and
mov
stos
aas
push
ret
cmp
push
add
jo
dec
push
pop
lea
ret
aad
leave
xlat
inc
mov
sub
imul
ret
imul
pop
ljmp
pushf
xchg
mov
or
fwait
iret
pusha
lods
fwait
call
scas
in
mov
daa
push
inc
pusha
jno
add
cmc
icebp
outsb
out
and
les
aam
sub
cmp
js
ret
cli
fildl
or
repnz
popa
adc
mov
sub
cmp
sub
cmp
mov
in
rclb
cs
mov
imulb
pop
push
push
xchg
xchg
adc
mov
adc
cwtl
and
mov
xchg
out
fldl
in
popa
push
sar
or
mov
lret
scas
sar
test
xor
pop
xchg
xor
inc
or
pop
fidivrl
addr16
xchg
adc
pop
cwtl
lea
sti
int
xor
mov
inc
stc
push
mov
mov
sbb
icebp
add
or
mov
and
outsb
call
lahf
mov
fcompl
cmp
inc
jno
mov
push
mov
popa
shrb
or
inc
addl
cli
lock
fsubrl
push
loope
sub
mov
mov
mov
push
loopne
dec
pop
scas
adc
mov
or
ret
negb
mov
leave
lret
test
or
lcall
adc
mov
ss
dec
xchg
sub
or
pushl
mov
mov
addr16
and
out
out
push
xor
push
mov
push
add
outsl
das
mov
into
les
and
mov
stos
popa
mov
popa
mov
call
into
insl
sahf
xlat
leave
xchg
ja
lret
jle
push
inc
inc
imul
adc
add
sbb
dec
xorb
push
xchg
push
or
jnp
jmp
xchg
mov
hlt
adc
push
pop
fwait
sub
push
mov
cli
daa
pop
push
sahf
and
jmp
mov
in
xor
call
push
pusha
adcb
lea
mov
sub
leave
cmp
hlt
inc
in
dec
or
dec
xlat
sahf
mov
cmp
mov
testb
gs
shlb
mov
lcall
inc
scas
testl
decb
inc
xor
push
cmp
mov
and
cmc
sbb
in
cld
pop
imul
les
xchg
popa
dec
lods
out
ret
sbb
aam
loope
sbb
icebp
cmp
movsb
shrb
jmp
in
enter
sar
sub
sbb
pop
lea
sub
lcall
ficomps
ljmp
fwait
cmp
push
push
inc
loop
cmp
repz
jns
jbe
mov
shrl
lea
leave
and
dec
dec
pop
pop
pop
cmpb
cltd
adc
bnd
cwtl
addr16
enter
loop
and
enter
dec
ret
mov
jns
sub
pop
fsubrl
ds
sbb
push
sti
out
jle
int3
dec
jnp
inc
add
movsl
inc
daa
dec
repz
je
sar
daa
inc
jae
test
mov
add
push
outsb
fcoms
dec
cli
xor
mov
xor
xchg
cmp
pop
sahf
les
push
out
jae
and
and
shl
sub
ret
les
and
ret
inc
popf
cld
movl
jge
jmp
jmp
fwait
pop
pusha
loopne
arpl
aaa
lock
xor
xchg
dec
mov
or
xchg
sub
mov
pop
and
and
push
and
pop
and
maskmovq
bound
sub
dec
fsts
repz
addr16
arpl
xchg
push
push
pop
jae
lods
pop
inc
in
rcrb
mov
iret
xchg
leave
sbb
je
sub
sbb
loop
les
outsl
scas
xor
sub
push
rcrl
bound
mov
jmp
cmpsl
imul
int3
inc
add
bound
in
jg
mov
sub
adc
imul
es
and
inc
adc
push
jge
mov
or
pop
jmp
mov
mov
add
test
movsb
mov
movsb
stc
aad
outsb
push
into
xchg
ret
xchg
sti
pop
outsb
loopne
lods
cmp
in
ret
sbb
push
mov
stos
jecxz
push
and
sub
out
je
mov
lds
xor
unpckhps
sub
ficomps
push
inc
ror
popa
pop
dec
sbb
xor
daa
mov
add
int
sbb
in
jnp
data16
fsubr
test
lds
fisubs
cmpsl
sahf
pop
inc
pusha
or
jg
jae
out
gs
adc
or
push
repnz
adc
inc
xchg
sbb
test
mov
xor
dec
pop
das
cmp
leave
and
sti
or
inc
xchg
in
cwtl
int
fsub
aad
aam
pop
and
shlb
mov
stos
fs
icebp
mov
fs
sahf
or
popa
loope
dec
adc
push
sub
adcl
imul
ljmp
pop
inc
test
cmp
cmc
clc
push
stc
lock
cli
test
or
dec
fdivr
lret
xor
sub
or
dec
insl
cld
dec
or
xchg
and
push
lret
in
lret
fxch
cltd
inc
loop
fs
neg
comiss
lds
je
enter
or
add
fdivr
or
xlat
negl
xor
jo
addr16
dec
cld
push
movsl
cmp
fwait
lods
inc
cs
sub
sub
aad
dec
push
in
shll
mov
cmp
mov
mov
add
xchg
jns
jo
mov
lahf
push
lcall
movsl
jbe
iret
pop
std
outsb
stc
outsb
push
pop
mov
sahf
sbb
lock
pop
imul
test
add
and
mov
loop
xchg
cmove
xor
dec
mov
mov
fstpl
arpl
ret
cmp
scas
loope
sbb
je
hlt
test
lcall
mov
mov
mov
in
sbb
pop
or
inc
aam
pop
and
fimuls
outsl
aaa
sbb
stos
push
jo
add
jno
rcl
cmp
lahf
jge
jae
adc
aas
roll
sub
mov
je
push
cmc
roll
or
imul
enter
cmpsb
or
jne
icebp
divl
notb
adc
jl
js
ja
jbe
push
jge
fcmovnb
gs
mov
ret
stos
dec
icebp
or
fimuls
pop
imul
jne
mov
pop
aam
cmp
icebp
or
gs
int
jmp
pcmpgtb
js
adc
add
ljmp
rcll
in
sbb
pop
xchg
mov
daa
cwtl
mov
cs
repz
push
sub
or
inc
jl
arpl
xchg
mov
cmp
rcll
aam
mov
dec
dec
push
xchg
test
mov
addb
adc
out
sub
test
jne
movsb
dec
mov
or
and
jnp
push
xchg
jge
iret
or
rcl
sub
loopne
aaa
bound
xchg
sbb
in
das
add
or
pop
vhaddpd
in
inc
jp
xor
ror
loop
inc
xor
mov
jo
mov
fcomps
imul
xor
stc
sbb
mov
mov
and
hlt
int3
mov
ds
cmpsl
xchg
faddl
das
pop
popa
repnz
xchg
pop
cwtl
sub
inc
ja
jae
repz
ficoms
es
push
xor
fmull
add
dec
xor
push
adc
call
pop
outsl
mov
mov
push
dec
cmp
mov
mov
xor
push
sbb
imul
movsb
or
imulb
push
or
sbb
push
dec
xchg
subl
push
cs
cmp
les
xor
lcall
pusha
sub
scas
ljmp
jmp
mov
mov
jb
add
scas
jg
pop
push
je
xor
das
pop
dec
push
stos
in
shll
es
cld
pop
push
or
bound
and
lods
adc
jb
xor
xchg
pop
or
mov
loop
shl
nop
dec
insb
mov
mov
out
es
out
xchg
lret
dec
ss
mov
setne
push
jb
pop
mov
rcrb
inc
pcmpgtb
or
out
xlat
fstl
sub
fdivrp
sub
sub
fstl
ja
jnp
stos
inc
ds
sub
mulb
hlt
pop
xor
imul
loopne
jne
mov
lret
pop
shrb
rcrl
add
cmp
xchg
sbb
pop
rcl
pusha
adc
sbb
imul
adcb
ret
mov
stc
out
roll
cmpsb
pop
int
sbb
pop
adc
mov
out
mov
mov
mov
out
rolb
lahf
add
cmpb
xor
mov
ljmp
mov
pop
mov
insl
sbb
subb
jae
test
cwtl
movsl
imul
aad
dec
je
mov
bnd
hlt
fisttps
mov
add
cmp
movb
pop
jmp
stc
lret
pusha
push
pop
int3
lcall
cmp
dec
ret
pop
aas
pop
mov
cmp
adc
push
lds
or
inc
les
cmp
push
cltd
cmp
inc
or
adc
in
shrl
iret
pop
movsl
clc
mov
mov
add
xor
cmp
push
add
push
pop
push
das
xor
cld
mov
mov
mov
pop
and
inc
shlb
lret
cmp
add
adc
push
sub
cli
jne
add
leavew
sub
outsb
adc
rclb
lahf
push
ficoms
aad
jno
popa
fs
pop
leave
cmp
callw
xchg
into
inc
jmp
lahf
sbb
sub
pop
mov
cmp
jmp
mov
sbb
test
fstps
out
sub
and
sbb
test
dec
or
faddl
hlt
lahf
xor
mov
ss
aas
xor
lcall
aam
sbb
rorl
pusha
ljmp
shr
xchg
in
lret
out
pop
ja
jecxz
xchg
out
sbb
shlb
neg
and
int
dec
loop
rcrb
adc
lods
fiaddl
popf
mov
add
dec
popa
jbe
mov
gs
inc
lret
add
sbb
mov
lea
add
pop
stos
filds
test
out
shlb
pop
mov
jo
stos
cmp
push
jmp
add
adcb
in
stos
or
and
rorl
cs
dec
add
sub
in
pop
and
xor
js
xlat
lods
xchg
mov
icebp
popf
pop
mov
sti
cli
ret
rorb
jb
add
test
insl
jp
in
sbb
addb
cmp
sti
jmp
rclb
ljmp
pop
in
outsl
sub
or
mov
jp
lods
js
xchg
cmp
insb
pop
lds
mov
sbb
xor
pop
xor
test
fldenv
and
pop
inc
sbbb
sbb
push
stc
adc
loopne
mov
mov
test
ljmp
adc
xor
sub
and
mov
cmp
sbb
in
and
stc
push
dec
jp
stos
sbb
bnd
mov
dec
push
xlat
xor
pop
xorb
jmp
push
adc
repz
xchg
mov
xchg
into
mov
pop
mov
ret
pop
jg
fwait
jle
ret
adc
jbe
pop
xor
aas
mov
stos
xor
shrl
pop
dec
lods
icebp
mov
rol
sbb
movsl
dec
bound
jle
js
loop
sub
add
jne
xchg
mov
loop
arpl
iret
jecxz
xchg
pop
lret
mov
cmpsb
add
mov
test
call
aam
into
scas
or
xchg
addb
call
xchg
pusha
push
dec
push
sbb
push
cld
pop
sti
dec
inc
or
adc
stc
xor
lods
fwait
test
or
jecxz
nop
jo
jbe
adcl
stc
or
pop
pop
je
adc
aaa
faddl
xor
jbe
pop
mull
push
ljmp
dec
push
daa
add
movl
in
inc
and
ja
jno
add
add
xchg
mov
mov
test
stos
addr16
fcompl
lahf
lret
dec
xchg
adc
imul
mov
sbb
hlt
pop
sub
jle
clc
inc
das
cmp
test
inc
dec
into
iret
or
test
mov
push
mov
sub
mov
or
sbb
adc
ror
xchg
jno
mov
jnp
cmpsl
int
adc
and
rorb
push
and
add
xor
stos
popa
dec
jno
out
pop
pop
sub
mov
fists
pusha
push
jne
xor
or
scas
jno
sahf
jmp
sub
mov
inc
jbe
or
xor
mov
adc
in
out
pop
loope
int3
push
sbb
cmpsb
mov
xor
ffree
out
lret
into
out
add
lcall
aam
xor
shrb
cld
test
fs
pop
pop
jecxz
push
mov
xchg
imul
cltd
jbe
adc
iret
sbb
sbb
push
pop
orl
adc
in
lea
addb
outsb
xchg
mov
aad
add
jge
sub
and
jecxz
ja
cltd
xchg
add
jl
in
movsl
or
sbb
sti
add
dec
pusha
add
int
lock
and
in
pushf
lods
mov
inc
xchg
cwtl
cmpsl
cmp
cld
mov
mov
add
shr
pop
aad
fidivrs
fisubl
or
repnz
push
enter
pop
sub
lea
clc
cmp
mov
jnp
addr16
and
mov
inc
dec
add
gs
sbb
sbb
mov
mov
sub
int
movsb
push
cmp
inc
xor
orb
jl
ja
pop
mov
bound
xor
dec
adc
xchg
shlb
scas
iret
pop
xchg
inc
lret
jge
fcomi
lods
dec
rorl
movl
sub
jp
jns
or
fwait
and
out
cmpsb
sub
mov
int
out
inc
decb
or
popf
xchg
dec
stc
adc
mov
in
ds
sbb
cmp
xchg
sub
jl
dec
scas
pop
lods
jae
lods
popa
and
pop
clc
and
mov
sti
cltd
sbb
jno
or
ret
add
mov
data16
xor
test
or
xchg
cmp
adc
das
sbb
jbe
pop
loope
xor
outsl
push
cmp
fwait
xchg
in
lret
cmc
out
in
pop
push
pop
hlt
in
dec
test
push
lret
imul
dec
lcall
mov
xor
icebp
sbb
xchg
notl
xchg
icebp
stos
je
pop
or
shll
push
push
inc
push
add
adc
mov
adc
xchg
ss
dec
mov
in
imul
mov
aas
dec
pop
push
mov
pop
fnclex
mov
les
pushl
sti
div
arpl
jp
cld
js
pop
mov
dec
jbe
mov
sub
lea
sub
je
mov
add
lahf
nop
in
add
mov
hlt
faddl
or
push
repz
mov
mov
push
sbb
cmp
inc
sub
hlt
mov
in
movsb
loop
in
push
pushf
clc
mov
loopne
in
mov
mov
dec
call
or
pop
cwtl
and
lahf
pusha
daa
jecxz
add
aaa
xchg
enter
fsubrp
xor
pop
test
inc
mov
loopne
inc
mov
fldt
pop
sahf
cmc
outsb
xor
cld
cmp
in
test
shll
inc
inc
testb
imul
cs
pop
mov
mov
push
shrb
jg
jg
or
roll
mov
fidivrs
js
ss
call
test
jae
loop
test
inc
mov
mov
xor
shr
into
dec
daa
sbb
into
mov
or
xlat
int3
mov
aas
pop
mov
mov
insl
mov
je
test
fs
fcomip
in
add
pop
loop
mov
push
sub
jg
inc
ret
push
out
xchg
mov
test
inc
bswap
mov
iret
movl
jo
sbb
clc
dec
mov
cmp
mov
or
movsl
xchg
jo
xorb
pop
fcomi
push
adcb
out
mov
call
mov
ss
xor
fsubl
cmp
lahf
mov
cwtl
ret
or
repnz
cmp
icebp
dec
cmp
popa
nop
mov
aad
test
cltd
sub
fstpt
sub
or
shrl
inc
mov
mov
rolb
lahf
pop
into
dec
add
jo
add
dec
lret
int
imul
mov
pop
test
cmpl
rclb
cmc
add
sbb
test
cmc
xor
outsb
sub
or
imul
cmovno
mov
repz
pop
add
stos
int
jno
lods
fisubrl
mov
cli
lret
adc
xor
jmp
mov
dec
jle
mov
iret
push
inc
repnz
mov
shll
ficomps
lds
mov
rcll
fbld
lods
mov
shlb
sbb
push
sub
arpl
sub
jecxz
icebp
cmpsb
inc
adc
cs
stc
xor
stos
test
push
iret
cmp
or
mov
sbb
pop
out
scas
pusha
xor
sbb
xchg
aaa
es
add
or
icebp
stos
outsb
repnz
iret
mov
mov
mov
jmp
cmp
scas
pushf
je
push
outsb
inc
out
nop
mov
pop
dec
scas
lods
dec
inc
lret
jbe
or
pop
xor
pop
test
jnp
unpcklps
adc
imul
arpl
loopne
dec
cmpsb
insb
sbb
xchg
or
mov
sbb
jge
out
cmp
mov
inc
lret
bound
mov
divb
movsl
jnp
inc
das
fists
js
cmpb
add
std
and
arpl
mov
stos
test
lods
jns
fmul
lods
mov
sub
aam
cmpsl
jbe
sahf
push
and
flds
nop
cmpsb
dec
jle
ds
sahf
movsl
cmp
dec
jo
push
or
inc
or
or
cmc
aaa
inc
scas
icebp
pop
push
dec
popa
shrl
test
xlat
lahf
push
aaa
std
xchg
out
and
test
or
mov
adc
lcall
xor
add
out
mov
xchg
mov
fucomp
adc
push
jle
lds
push
jnp
mov
dec
dec
inc
mov
insl
mov
stos
je
out
inc
lret
sbbb
out
adc
and
push
test
push
add
insl
dec
out
push
lock
das
xor
adc
in
scas
fs
inc
fs
xor
repz
jno
xchg
stos
les
mov
enter
sub
loopne
pop
mov
sahf
mov
dec
das
add
movsl
pop
push
xchg
jnp
adc
test
mov
iret
insl
imul
add
jmp
xchg
adc
bound
jmp
cmc
adcl
stos
in
ljmp
stc
push
jbe
sti
shrb
xchg
push
cwtl
sub
push
mov
ret
fsubrl
xor
outsb
or
or
inc
rcl
pushf
dec
cmp
daa
ficompl
jmp
jo
cmp
lahf
inc
mov
xor
orl
in
or
push
mov
ret
bound
push
adc
int3
scas
and
xchg
cmp
adc
pop
xchg
hlt
push
gs
enter
xchg
lods
jl
nop
in
adc
lds
shrb
aad
xchg
ja
repz
or
push
testb
fildl
fldenv
xchg
xchg
std
mov
dec
jg
cmp
sub
or
js
loop
stos
aad
out
xchg
neg
or
adc
push
cmp
xor
pusha
adc
sbb
stos
mov
in
outsb
add
popf
mov
arpl
xlat
enter
add
sbb
ds
xchg
cmpsl
push
shll
sub
xchg
jo
out
data16
cmp
xchg
in
and
shrl
scas
jbe
in
je
xor
cmp
push
pop
sub
adc
or
ja
std
xlat
mov
jno
jecxz
lcall
testb
out
iret
mov
adc
in
ror
lahf
sbb
mov
sbb
ret
adc
mov
inc
repnz
add
popa
jo
adc
sbb
mov
icebp
push
fsubs
out
adc
sub
cmp
ret
cli
add
sub
dec
lahf
xor
rcrl
mov
aam
cmp
and
cmpsl
sahf
and
jmp
pop
fnstenv
imull
test
inc
into
pop
add
ss
add
sbb
xchg
adc
jbe
push
stos
or
aaa
out
outsb
test
inc
xchg
cmp
add
ret
movsl
push
cmp
mov
xchg
imul
inc
and
or
addb
mov
pop
add
stos
xor
mov
out
imul
push
int3
mov
fnstenv
in
out
sahf
shlb
and
xor
sbb
inc
addr16
xchg
fs
loop
cmp
pushf
add
or
mov
int
fldl
push
sub
stos
mov
fidivrs
pop
ds
jmp
xchg
test
or
fwait
insb
push
into
add
jno
ds
js
mov
negb
or
notb
jbe
clc
push
inc
add
in
mov
mov
out
sub
lds
push
jns
mov
shlb
cmp
aaa
sbb
inc
movsl
or
leave
mov
mov
lahf
shlb
and
int
rorb
imul
mov
iret
into
mov
xchg
pop
jae
lods
scas
jb
ljmp
inc
cmp
add
or
push
mov
lods
xor
xor
xchg
xor
xorl
jg
fwait
xor
divb
mov
or
sbb
inc
push
sarb
out
sahf
in
adc
cmp
imul
dec
test
stos
mov
cmpsl
inc
inc
scas
lods
sub
out
add
adc
es
scas
fisttpl
fwait
mov
xor
aas
hlt
js
lock
xchg
mov
js
fistpll
popa
adc
loop
enter
inc
xor
push
cld
int3
mov
xchg
loop
inc
or
or
xor
shrl
mul
fdivl
and
sbb
enter
fidivl
push
mov
push
out
lret
mov
mov
sbb
out
sbb
mov
scas
js
jp
xchg
pop
lret
cmp
shlb
push
aaa
test
push
jae
mov
and
sbb
jl
into
scas
insb
jp
push
fsubrs
push
in
dec
mov
lret
inc
out
push
scas
inc
fbld
pushf
xchg
ja
lcall
and
outsl
sbb
in
inc
stos
xlat
insl
add
stc
in
pop
into
adc
jle
cmovo
ret
xor
sub
mov
jge
arpl
pusha
cmp
xchg
std
sahf
ss
mov
xchg
leave
xchg
sbb
xchg
push
cmp
test
cmp
out
and
push
jmp
xor
sub
mov
int
in
push
in
lcall
int
lds
push
das
call
iret
outsl
fisubl
or
lret
jp
test
jle
sbb
jmp
aam
add
arpl
rclb
or
and
add
dec
jae
cmc
dec
mov
mov
mov
fstpt
pop
imul
fimuls
mov
stc
mov
sbb
sub
rorl
lahf
or
faddl
sbb
cmp
dec
inc
data16
pop
cmpsb
push
fdivrs
cmp
adc
out
sti
loope
sbb
mov
aas
mov
mov
push
loop
pop
test
dec
notb
mov
dec
repz
xchg
dec
fsts
xor
daa
gs
fmuls
xchg
mov
xchg
pusha
lret
push
cmp
pop
icebp
dec
fwait
call
pop
fldt
inc
and
sar
aad
and
mov
scas
add
scas
inc
pop
sbb
jae
stos
call
adc
jl
daa
rcll
cwtl
mov
xor
icebp
and
adc
repnz
ja
mov
jl
divb
data16
cwtl
and
cmpsl
mov
mov
add
push
adc
sub
mov
pop
ret
xor
loopne
pop
jnp
or
repz
cmp
pop
leave
sub
aad
adc
in
add
mov
jne
push
fmuls
jge
cwtl
je
rcr
nop
and
adc
xor
jbe
xlat
mov
mov
jp
inc
insb
lock
xor
scas
insl
push
jle
or
lret
hlt
fcoms
push
xlat
dec
jae
xor
add
in
out
shlb
sbb
lods
int3
add
insb
jns
push
rcrb
sbb
stos
and
pop
loope
lret
dec
insb
lcall
das
xchg
pop
cmpb
pop
jp
adc
ds
movsl
inc
jne
addr16
adc
pusha
lahf
pop
negl
inc
push
xlat
mov
pop
sub
mov
sbb
adc
js
mulb
push
sub
cmpsb
dec
insl
pop
dec
test
mov
mov
cmp
push
pop
inc
aad
std
add
sahf
arpl
addr16
shll
and
pop
dec
scas
and
add
outsl
minps
cmp
divb
movsl
in
and
das
icebp
jp
cmp
cmp
mov
xor
push
dec
push
dec
push
pop
bound
test
or
mov
test
mov
lds
in
aaa
ja
cli
scas
bnd
inc
inc
cmp
xor
test
push
push
rolb
push
mov
xchg
popf
imul
pop
icebp
rclb
repz
inc
add
push
sbb
jb
jns
rcll
pop
fs
shl
adc
xchg
inc
gs
pop
mov
popa
cmp
inc
scas
cmp
imul
mov
cmp
xor
xchg
arpl
notl
adc
pop
leave
and
xchg
adc
es
or
outsl
test
or
mov
insl
cmp
test
lock
xchg
push
xchg
mov
pop
notl
push
mov
sub
or
cmp
dec
int
sti
stos
fmuls
mov
pop
pop
arpl
dec
loopne
jge
mov
xchg
and
frstor
inc
sbb
mov
in
adc
sbb
hlt
sub
xor
arpl
jge
scas
fwait
stos
rol
or
pop
xchg
mov
rolb
loop
pop
pop
aas
pop
mov
cmpsl
inc
dec
dec
lods
mov
cli
push
or
pop
test
push
aam
mov
adc
mov
in
inc
aad
subl
pusha
jmp
adc
mov
mov
sbb
xchg
pop
jg
jge
dec
sub
xor
cmp
mov
int
into
and
xchg
iret
sbb
lret
fidivrl
js
rcll
sub
ja
and
sti
sbb
xchg
lcall
mov
test
mov
aas
pop
mov
jle
mov
dec
add
jae
cld
xchg
les
xchg
adc
sbbl
dec
sbb
or
or
test
cmpsl
out
jp
mov
in
outsl
jbe
mov
adc
jecxz
mov
fcoml
cmp
dec
lret
out
scas
jne
xchg
push
pop
inc
repz
in
and
fmul
or
data16
popf
repnz
ljmp
jp
mov
mov
fs
int
outsb
and
movsl
ss
stos
add
movsl
test
mov
js
inc
jae
aad
xchg
cs
or
jo
in
cs
mov
testl
rcl
sub
lahf
fcmovu
shlb
jns
inc
cmpl
push
lock
sub
cltd
lea
es
xchg
push
or
test
incb
add
fdivrl
inc
push
xlat
popa
movsb
mov
mov
enter
ret
lahf
daa
pop
jo
push
popa
dec
aas
push
sub
fnstsw
add
stos
xchg
ss
sbb
cmp
pop
fildll
pop
stc
push
mov
bound
xor
dec
outsl
and
mov
lea
cli
fiadds
in
loop
lret
add
pop
iret
xlat
sub
push
adc
stos
add
mov
lods
cmp
mov
push
call
leave
inc
jnp
jae
inc
into
mov
or
mov
lret
inc
cmpsb
push
mov
cwtl
clc
aam
divb
adc
sbb
sbb
or
pop
sbb
sub
and
inc
test
add
ret
sbb
xchg
sbb
pop
mov
ja
inc
movb
fstpl
mov
sub
mov
xor
or
and
loopne
ss
scas
ror
xchg
and
fs
and
in
rorb
and
ja
sbb
mov
mov
xchg
push
cmpsl
xor
iret
sub
imul
and
out
dec
mov
push
mov
push
jp
jmp
arpl
pop
cmp
adc
sarl
or
mov
inc
inc
mov
lahf
add
int
imul
push
out
in
test
js
mov
pusha
imul
scas
mov
push
pop
cmpsl
clc
push
mov
mov
std
xorb
int3
cmc
push
sarb
pop
cld
imul
lods
xor
mov
pop
ljmp
call
xchg
xor
outsb
insl
pusha
std
test
mov
rcrb
lret
pop
je
fisubl
fisttps
enter
out
sbb
test
leave
lcall
pop
adc
xor
inc
mov
mov
pop
xlat
mov
adc
mov
pop
sti
cmc
push
ds
sub
iretw
adc
aam
ljmp
sub
xchg
jmp
out
jge
xchg
or
jno
xchg
ret
mov
jnp
cmp
and
in
stc
clc
adc
andl
mov
iret
inc
add
cmp
xchg
arpl
xchg
popa
insl
xchg
xor
sar
notb
push
cs
iret
adc
fsubl
fistps
ds
push
mov
fstl
xchg
in
pop
and
inc
push
mov
inc
fs
lods
mov
xchg
xor
js
jle
testl
cmp
jno
inc
add
dec
int3
addr16
xchg
std
mov
jns
lahf
mov
cwtl
mov
int3
push
sbb
pop
dec
and
ret
sub
subl
roll
roll
pop
mov
inc
jp
ds
rorb
aas
push
pop
mov
ja
push
les
es
add
sub
clc
sub
xor
pop
cwtl
aad
jp
push
mov
and
or
loopne
and
stos
outsl
push
and
addr16
sub
imul
pushf
scas
out
js
loopne
cmpsl
rol
cmp
sub
jbe
inc
pop
mov
in
inc
jnp
out
and
jge
roll
stc
popf
mull
loope
xchg
mov
out
sbb
stc
cmpsl
mov
repnz
popf
jne
test
jge
push
mov
cmp
repz
mov
stos
sbb
pusha
or
xchg
adc
lret
aas
cwtl
es
std
or
inc
jns
fistps
mov
sbb
xchg
sti
neg
ret
mov
cmp
mov
dec
jmp
cli
cmc
cmc
add
cltd
xor
into
loop
lea
xor
adc
outsb
stos
xchg
cli
cmp
cltd
or
or
ljmp
xchg
pop
mov
psubq
pop
outsb
pushf
bound
mov
jns
cmpsl
lock
decl
rcrb
mov
cltd
or
arpl
insl
push
push
jecxz
pushf
popa
shlb
or
jecxz
dec
jle
xchg
ficompl
test
into
outsb
call
mov
mov
sbb
sub
and
jle
jnp
fisttpl
fs
sbb
cmp
cmpsl
push
xor
rorb
arpl
ja
push
int
jns
add
jo
scas
xor
mov
add
stc
mov
loope
pop
mov
cmpsl
sub
mov
fisttpll
mov
mov
lds
fld
iret
or
popf
sub
out
fcmovnbe
cs
xchg
sbb
ds
bound
scas
inc
xor
push
sub
in
mov
xor
add
mov
add
ret
je
sub
mov
hlt
dec
outsb
mov
and
iret
pop
in
cmp
rclb
scas
push
sbb
jmp
add
ss
outsb
test
or
dec
shrb
inc
pop
sub
xchg
ficompl
mov
mov
xchg
lret
xstore-rng
cmpsl
inc
push
mov
sbb
sbb
lock
jp
insl
test
cmp
or
jno
inc
add
gs
iret
fdivrl
dec
sbb
call
aaa
popf
add
and
cmp
jns
movsl
inc
jbe
negl
ret
fisubrl
aam
mov
jbe
les
inc
xor
add
popa
fsubs
adc
pop
mov
icebp
and
rorl
je
and
or
imul
xlat
vcvtps2pd
xchg
fs
in
jge
add
out
bswap
sti
and
xor
outsl
xchg
push
aas
inc
mov
pop
jno
jmp
rclb
or
shr
enter
dec
xor
insb
mov
xor
pop
adc
mov
iret
push
mov
iret
cltd
sbb
loopne
stos
inc
mov
push
cmp
mov
movsl
inc
fbld
inc
int3
push
fistpl
add
fwait
or
sbb
sub
aas
std
jb
aaa
push
es
test
ljmp
xchg
fdivr
out
outsb
mov
sbb
dec
mov
cmc
mov
out
jo
call
mov
arpl
mov
adc
repz
dec
in
mov
fs
lcall
addl
xor
inc
xchg
add
imul
pop
aaa
std
push
mov
out
dec
sti
dec
jp
filds
divl
cli
ja
sbb
cmp
divb
xchg
mov
into
scas
testb
lahf
arpl
sbb
xchg
push
popf
lods
call
or
int
int
adc
pop
fs
enter
addr16
icebp
cli
cli
xor
lods
jecxz
clc
in
mov
and
adcb
inc
scas
push
pusha
jae
call
je
lock
call
and
dec
inc
in
jo
xchg
out
xor
jns
inc
test
or
in
rclb
sti
or
dec
bound
cmp
hlt
arpl
add
xor
lcall
push
adc
mov
mov
add
sbb
mov
jno
mov
xlat
xor
andb
dec
into
les
das
sub
sub
adc
add
sbb
mov
das
mov
jmp
push
loopne
gs
dec
movsl
jecxz
pop
sub
cltd
add
scas
loop
insb
mov
cmp
push
mov
enter
dec
jle
adc
mov
pusha
loop
cltd
mov
ss
stc
cwtl
test
outsb
mov
pop
call
in
out
mov
lods
pop
roll
jle
jno
dec
imul
test
arpl
outsb
xorb
pusha
cmp
clc
lret
jne
and
cmp
mov
lods
jb
into
imul
bound
dec
mov
aas
push
pop
fistl
lret
dec
imul
test
sbb
inc
sbb
movsb
insl
pop
jmp
cmp
sbb
jl
rcr
decl
iret
movsb
fcompl
push
mov
xchg
and
push
sub
popa
pop
rorb
mov
repnz
jg
cmpsl
das
or
jno
push
inc
rsqrtps
rorb
xchg
popf
jecxz
adc
lcall
xchg
add
loope
movsl
sbb
loopne
in
jns
push
outsb
hlt
jge
psubusb
pusha
fisttpll
bound
push
inc
loop
sbb
inc
or
xor
cmpsl
dec
loope
das
xchg
movl
or
and
aam
lods
insl
or
sub
inc
sarl
jmp
push
lock
cli
lret
or
ljmp
sbb
push
jg
nop
push
sbb
mov
shrb
lock
pop
push
dec
test
mov
xchg
adc
dec
fisubs
das
or
adc
outsl
sbb
mov
aaa
adc
dec
mov
jp
test
scas
xchg
dec
imul
bound
lahf
shlb
or
inc
cmpsl
sbb
repz
orb
lcall
jmp
push
and
sub
dec
xchg
lcall
inc
inc
sub
rcrb
std
stc
or
inc
jp
outsb
xor
aaa
lret
insl
push
lods
mov
inc
push
in
push
cmc
sbb
aas
pop
iret
mov
xchg
or
andl
in
mov
iret
mov
jp
inc
xchg
repnz
mov
aas
xchg
mov
xchg
jmp
xor
ds
mov
pop
sbb
shlb
mov
sub
sub
rcrb
pop
subl
ds
mov
sbb
out
imul
and
mov
gs
int
faddl
or
adc
jl
bound
xchg
add
mov
jl
cmp
push
sbb
xor
jae
xchg
dec
in
xor
mov
mov
inc
xor
mov
test
fidivl
adc
mov
and
or
mov
scas
fwait
and
mov
int3
inc
loop
ds
sahf
stos
pop
ftst
std
outsl
sub
xchg
push
adc
sbb
mov
aam
mov
nop
mov
jns
testb
lret
mov
outsb
xchg
inc
adc
ja
rorl
dec
adc
push
mov
mov
or
pop
sahf
fcomp
xchg
mov
xor
clc
push
adc
add
xchg
mov
and
cmp
test
xlat
jmp
cmp
push
jno
stc
pop
pop
cmpsl
xor
neg
stos
and
pop
je
pop
outsb
xchg
rcrl
in
cmpb
jnp
out
jge
shl
gs
or
cmp
and
arpl
aam
repnz
pop
mov
and
inc
out
sub
stos
daa
lock
cmp
cli
lock
and
in
sarl
popf
jle
ss
add
inc
ljmp
loopne
pushf
fimuls
sub
das
lahf
cmp
xchg
mov
test
sti
sub
gs
outsb
push
sar
mov
pop
hlt
inc
mov
mov
fidivl
cmc
pop
dec
imul
xlat
mov
arpl
sub
xchg
out
fwait
dec
mov
lcall
add
and
add
popf
leave
pop
into
sub
movsl
jmp
xchg
aad
mov
and
lds
out
sbb
xchg
mov
add
jecxz
adc
imul
push
stc
pop
sub
test
pop
or
dec
sub
icebp
add
lds
sub
jecxz
mov
lcall
loop
adc
inc
xor
adc
or
jne
lods
loopne
std
cmpsb
pusha
jae
pop
xchg
mov
scas
stc
jno
int
outsb
inc
addr16
and
setnp
and
fldt
push
xor
shrb
mov
jb
xchg
cs
pop
je
mov
xchg
or
hlt
les
and
sahf
push
or
cmpl
rcrb
mov
stc
mov
or
call
xchg
mov
mov
add
xor
movsl
daa
call
js
dec
fsts
mov
insl
mov
shrb
lods
pop
testl
test
mov
xchg
es
cmp
enter
movsb
dec
dec
stos
nop
out
in
add
subl
cli
imul
or
push
add
pusha
pop
setns
add
insl
js
div
cmpsl
rolb
imul
push
dec
pushf
dec
sub
popa
cwtl
dec
sub
lahf
test
mov
dec
xor
mov
mov
pop
lret
int3
loop
rcrb
test
jae
mov
loope
in
les
adc
ss
rcr
and
cmc
out
push
inc
and
stc
xor
movsl
out
daa
popf
mov
sgdtl
lcall
leave
fwait
sbb
fsts
fcmovb
inc
insl
lret
icebp
fwait
mov
hlt
mov
jns
clc
enter
daa
ljmp
cmp
mov
pusha
pop
and
loop
das
xchg
pop
loop
sub
rcll
mov
xor
push
or
es
cmp
adc
push
insb
lret
jbe
dec
fldcw
add
int3
pop
add
dec
mov
add
adc
push
mov
mov
jbe
imulb
ret
add
popf
outsb
mov
dec
push
enter
in
sbbb
in
aad
cmp
dec
in
jmp
bnd
add
cmpsb
lea
mov
movsl
popf
jae
mov
repnz
and
pop
std
test
inc
fs
std
cmp
in
jg
movsb
cltd
mov
add
adc
mov
sub
fnsave
aaa
lds
cs
test
std
sbb
fldt
dec
xchg
mov
xchg
clc
cltd
divb
test
push
outsb
jmp
xor
mov
pop
push
adc
in
sub
inc
dec
std
push
cmp
inc
or
pop
dec
aad
inc
add
inc
lods
sbb
mov
jge
repnz
rcrl
xchg
sbb
mov
movsl
xchg
bound
inc
inc
push
mov
mov
sbb
sbb
daa
mov
lock
pop
add
lods
mov
es
loope
addl
pusha
fldcw
mov
cmpsb
icebp
out
leave
cmpsl
pop
cmp
testb
mov
mov
test
push
mov
inc
imul
out
sbb
mov
xchg
in
lret
mulb
and
pop
push
shr
aam
push
roll
push
mov
mov
adc
les
mov
test
insl
or
mov
lock
mov
movsl
test
aaa
jge
loop
inc
aas
or
sarl
jb
roll
and
add
inc
jp
lock
xchg
mov
push
jmp
xchg
imul
jge
xchg
pop
pop
dec
ret
or
cmpsb
stos
xor
mov
int3
call
lcall
insl
sbb
push
sti
add
adc
jo
loop
pop
data16
fisubl
out
rcrl
pop
mov
rolb
xor
jo
pop
mov
mov
ds
mov
lds
mov
xchg
mov
cmp
or
repnz
sub
and
fidivrl
or
test
inc
loop
in
adc
cmp
inc
jbe
jns
lock
movsl
in
dec
scas
adc
or
push
bnd
out
outsb
mov
add
pop
or
pop
lods
test
enter
scas
xchg
in
lret
mov
icebp
xchg
inc
lock
adcl
pop
rcrb
rcrl
sbb
push
push
pop
add
fucom
mov
push
pop
sub
mov
cs
cmc
cmp
call
cs
data16
fidivl
push
out
or
lods
dec
outsl
stc
rorb
xchg
add
inc
xor
mov
out
fsubrs
dec
jmp
ljmp
es
or
out
stos
jecxz
add
adc
adc
dec
mov
xor
test
pop
cmc
mov
in
popf
xchg
and
sub
push
pushf
lods
ja
inc
mov
push
in
das
testb
dec
stos
stos
xchg
xchg
lds
dec
add
xor
jne
inc
das
push
enter
cwtl
loopne
test
imul
nop
push
push
in
pop
notl
test
stos
fadds
dec
pop
cmpb
inc
pop
add
clc
aas
mov
adc
sbbl
gs
lea
in
mov
or
lds
test
or
movsl
lods
xchg
btr
cld
fwait
ss
dec
jne
popf
inc
jl
cld
add
enter
jl
mov
jno
inc
cmp
and
or
push
pop
adc
sbb
test
cli
fidivrs
push
jl
enter
mov
and
adc
adc
fidivrl
mov
test
xchg
fwait
loope
mov
rcrl
outsb
ficomps
stos
call
popf
roll
push
mov
lcall
inc
mov
fcompl
movq
sbb
jne
mov
jb
add
pop
pop
or
xor
and
ss
leave
outsl
push
arpl
call
outsl
cmp
inc
xchg
movsb
testl
xchg
pop
add
cli
clc
rcrb
mov
push
fwait
je
mull
cwtl
inc
sbb
movsl
xchg
rorl
xchg
inc
cmp
fdivl
jle
push
ds
out
xchg
stc
jbe
orl
push
mov
scas
ds
jmp
cmp
adc
outsl
lea
mulb
mov
push
pop
int3
pop
es
repz
ds
and
cmp
fisubs
push
adc
or
mov
outsl
adcb
push
jecxz
push
inc
ret
inc
mov
adc
mov
mov
arpl
sub
push
pop
gs
mov
mov
bound
sbb
out
inc
stos
stc
cmpsb
sbb
leave
sbb
leave
push
mov
loop
mov
shl
sub
loopne
fldl
sub
out
pushl
nop
sbb
ds
clc
xchg
mov
push
ja
sub
daa
sarb
inc
iret
push
bound
shll
test
inc
mov
clc
in
pop
xchg
sti
orl
mov
and
jae
js
add
insb
arpl
loope
das
xchg
out
popa
cs
loope
addr16
scas
ja
pop
scas
mov
repnz
les
jmp
lcall
push
jle
in
aad
sub
cld
sbb
iret
movsl
jo
arpl
int
and
mov
push
rorl
imul
mov
pop
pop
bound
mov
xor
add
icebp
cld
jle
xor
sbb
xchg
sub
add
movsb
sub
hlt
aam
out
repz
sti
in
mull
mov
popf
and
cltd
mov
xlat
out
mov
mov
xor
lahf
lea
push
cmp
jp
stos
xchg
and
dec
add
mov
inc
mov
cmp
or
or
out
ret
fwait
jecxz
stc
cmp
pop
adc
incb
jl
push
jge
inc
dec
xor
js
mov
out
sbb
xor
cmp
pusha
ja
fnsave
ret
xchg
cmc
xchg
repz
and
lret
mov
xchg
inc
or
ljmp
cmp
divl
sub
inc
shlb
mov
xor
fmull
or
jnp
fstl
fdivrs
push
subl
xchg
push
stos
mov
push
cmp
arpl
mov
mov
or
xor
mov
int
jl
xchg
scas
out
sub
pop
xchg
sti
ret
idivl
push
xor
mov
notl
jmp
xchg
out
adc
pop
mov
inc
mov
lret
lods
add
adc
lret
aas
in
or
inc
sbb
inc
ds
cmpsl
sub
sub
inc
add
rorl
cmp
push
jo
pop
jecxz
adc
data16
fstpt
dec
test
dec
fs
std
inc
add
push
arpl
and
pop
mov
iret
mov
jbe
dec
lods
in
js
mov
pop
pop
arpl
ret
call
inc
nop
cmp
push
xor
idivb
scas
jne
ljmp
dec
jl
cld
jg
push
jo
sub
jmp
stos
icebp
ss
icebp
xlat
adc
push
inc
xchg
jmp
mov
jmp
jp
lea
sahf
pusha
inc
sbb
aaa
mov
pop
daa
pop
ss
cmp
inc
cmc
xchg
ret
lahf
sbb
test
xor
neg
and
andl
jmp
pushl
sbb
lret
cmp
xor
ss
leave
mov
inc
push
add
mov
out
pop
jge
and
dec
xchg
lods
test
fmuls
pusha
incl
repz
push
std
xorl
enter
call
push
sahf
jg
ss
lcall
dec
mov
clc
outsb
mov
les
adc
fdivs
jg
mov
addl
xor
jl
sbbb
push
nop
pushf
ficompl
and
sbb
xchg
rcrb
xor
add
mov
sbb
cmp
xchg
popa
repz
lret
repnz
je
aaa
dec
fistpll
inc
repnz
jae
js
icebp
fwait
xchg
popa
pop
and
and
nop
pop
in
adc
jae
inc
insb
pushf
rcrb
cltd
jns
fcompl
mov
nop
mov
sahf
int3
ret
sbbb
bnd
pop
cwtl
cli
push
mov
je
arpl
adc
sbb
sbb
pop
mov
add
mov
xchg
push
ret
out
and
inc
inc
sti
push
shl
insb
arpl
sarl
pop
cmpsb
std
orb
lods
and
jle
inc
scas
aad
loopne
mov
add
dec
loop
lods
test
ret
dec
sbb
lock
mov
mov
stos
push
lea
testl
inc
dec
mov
push
insb
ret
mov
and
jle
call
pop
cmp
arpl
push
xor
adc
cli
arpl
xor
push
jmp
imul
mov
insb
enter
xor
pop
popf
shll
ja
aad
xchg
ss
or
adc
or
and
jmp
or
adc
push
adc
lea
jne
mov
cmp
movsl
ret
mov
and
sub
rcrl
dec
cmpsb
dec
inc
and
rorl
test
xor
in
sbb
mov
pop
pop
add
cmpsb
inc
mov
cmc
popa
xor
shll
mov
les
xor
ficomps
cwtl
pop
in
les
xor
fidivs
adc
lods
sub
and
mov
xchg
or
pop
pop
icebp
or
mov
fldcw
mov
out
mov
xor
popl
push
es
les
test
add
cli
cmp
mov
dec
jo
arpl
into
bound
add
and
or
sub
test
shlb
pop
test
mov
mov
fnstenv
jl
aad
test
test
and
xor
das
fdiv
leave
xlat
jae
packsswb
cmp
mov
je
mov
jle
push
mov
loopne
sbb
xchg
mov
xor
das
mov
scas
mov
addr16
lret
mov
push
or
mov
mov
sti
bound
fisttpl
push
ja
and
jbe
or
into
jp
lods
sbb
test
pusha
rorb
ret
push
insb
lcall
and
out
push
lock
mov
mov
repz
ljmp
jle
xchg
pop
imul
xchg
mov
jl
ficoms
stc
cwtl
lret
inc
mov
mov
or
insb
movsl
and
pop
xor
mov
es
rcr
jae
addr16
sub
sub
out
mov
cld
adc
xchg
xor
in
call
andb
ret
mov
divb
imul
jl
jae
mov
xor
je
mov
daa
cmp
or
or
loopne
aam
and
imull
adc
lock
push
aad
xchg
pop
lds
or
mov
jns
enter
push
fdivr
sub
mov
xchg
loope
shll
stc
ss
jmp
inc
sub
pslld
jns
daa
ret
adc
mov
aam
rclb
add
and
push
jno
add
mov
jecxz
pop
dec
imul
lods
pop
jae
jmp
add
gs
jp
or
gs
pop
adc
xchg
fistpll
mov
push
push
mov
aaa
rcrl
lahf
scas
stc
sub
sbb
fisttpl
pop
mov
neg
arpl
pusha
ret
ds
dec
and
or
psubq
cmp
fwait
inc
mov
out
dec
ret
shlb
aas
pop
or
mov
loop
xor
mov
popa
cld
jecxz
mov
daa
mov
jne
and
mov
pop
push
mov
loop
loopne
jmp
scas
mov
sub
mov
sub
fldz
lcall
pop
ret
test
pmovmskb
rorl
sbb
or
push
nop
aam
or
mov
repnz
rorb
dec
idivl
or
fcoml
push
push
movsl
cmp
xor
lock
sub
mov
fistpl
cmp
mov
insl
ud0
xchg
mov
clc
mov
mov
push
xor
sbb
cwtl
inc
movsl
int
adc
adc
ljmp
lods
push
cwtl
or
icebp
pop
ds
cmpsl
enter
stos
cmp
cmp
insl
cs
arpl
jecxz
pushf
cmp
cs
mov
stos
xor
and
lret
mov
sar
fisubrs
clc
std
loop
fndisi(8087
ja
ds
dec
adc
fs
mov
dec
push
cli
push
mov
das
adc
add
xchg
jb
mov
push
clc
mov
inc
repnz
imul
inc
popf
push
push
andb
test
popf
test
mov
out
insl
jl
stos
fnsave
nop
xor
dec
inc
loope
pop
leave
in
and
push
cltd
lea
shll
repnz
cmp
mov
movsb
push
rorl
push
int3
repnz
enter
pop
ret
popf
jecxz
gs
shrb
mov
ljmp
cmc
cmp
ret
sbb
mov
xor
gs
adc
cs
les
movsb
subb
addr16
jp
push
loop
lods
pushf
jle
cmp
jmp
cli
mov
insb
xchg
sti
into
add
or
repnz
jne
aas
xor
xlat
mov
dec
adc
scas
repz
out
mov
sahf
xor
cmpsl
pushf
adc
mov
ja
xchg
jnp
nop
pop
cmpsb
sahf
clc
jp
jle
adc
dec
xchg
insl
adc
and
xchg
push
and
aas
dec
sub
jge
subl
dec
inc
cmpsl
and
inc
adc
adc
addr16
popf
test
dec
xor
aad
dec
mov
sbb
or
pusha
test
andb
das
sub
fcmovnu
adc
dec
pop
mov
enter
add
daa
and
sub
jg
and
leave
and
into
mov
iret
jo
cmpsl
xor
inc
pop
jmp
lods
ljmp
shll
push
dec
pop
and
mov
adc
push
notl
outsb
scas
insl
subl
mov
test
sbb
js
imul
add
or
bound
pop
sbb
shrb
pop
xlat
mov
cwtl
jle
and
mov
mov
cmp
inc
xchg
pop
lds
sub
adcl
xchg
jne
fidivrs
ret
sub
pushf
push
subl
int
and
inc
test
test
rolb
add
sbb
sub
rcrl
icebp
loope
hlt
and
es
ljmp
into
cltd
fsubr
cmp
inc
or
push
jnp
or
je
in
jge
xor
sub
and
cmp
mov
mov
repnz
dec
popa
call
sahf
ds
mov
push
cmc
lcall
cmp
scas
xlat
ret
xchg
sbb
jl
in
mov
cmc
xchg
xor
sub
mov
sub
pop
push
call
xchg
out
test
adc
sub
je
xchg
jb
fcoms
in
inc
mov
pop
bound
test
mov
push
add
lret
add
adc
add
and
out
inc
xor
xchg
xor
pushf
pop
in
out
xchg
dec
mov
and
xor
mov
test
jne
mov
in
mov
into
jge
mov
out
hlt
xor
fsubs
fs
mov
inc
sub
shll
push
mov
inc
fs
idivb
mov
mov
rcrb
cmpsb
mov
out
cmp
push
xchg
cmp
inc
pop
ss
mov
dec
mov
xchg
sbb
int3
fmuls
sahf
lret
mov
hlt
nop
lret
sbb
rcrl
mov
sub
int
push
push
cmp
pop
and
into
fs
mov
inc
jg
jge
pop
pop
aas
xor
jb
popa
rorl
xchg
pop
inc
insb
dec
push
sub
enter
je
pop
adc
jecxz
lea
repnz
or
sub
paddusw
lret
lea
lods
pop
dec
add
xorl
mov
sbb
insb
sub
xlat
ljmp
fcmovne
pop
fisubl
xor
adcb
js
push
add
inc
and
daa
sub
xor
mov
icebp
mov
xor
out
in
lock
pop
lods
jl
lods
imul
clc
repz
jb
push
or
cmc
into
cmp
les
js,pt
ss
cmp
lret
mov
and
cmpsl
in
sbb
adc
sub
icebp
cmp
out
ss
sbb
pop
hlt
pop
push
loopne
test
test
jno
jno
and
cwtl
stos
fsubs
mov
xchg
bound
sub
cmpsb
pusha
out
lcall
jnp
ret
push
jmp
inc
push
stos
lret
jne
mov
adc
cmp
cmp
mov
lea
ret
and
insl
xchg
into
mov
mov
ja
les
shlb
sarb
or
push
lret
sbb
cmp
nop
push
xchg
divb
cmp
pop
xchg
cwtl
sbb
mov
add
mov
or
hlt
addr16
out
push
inc
pop
shl
mov
lods
dec
pop
push
dec
mov
inc
add
inc
aam
lea
or
loopne
pop
mov
xlat
inc
push
sarb
sti
scas
enter
push
mov
and
cli
sub
sarb
mov
aad
clc
dec
sti
add
loopne
dec
rcrl
mov
insl
cli
cmp
adc
movsl
sub
sbb
xchg
cwtl
pop
cmp
sahf
dec
addr16
lds
mov
push
adcb
fwait
pop
jnp
mov
push
negl
cld
add
repz
add
push
dec
mov
call
mov
loop
dec
sbb
rcl
or
push
ja
in
bound
mov
cld
mov
or
dec
mov
cmp
fs
adc
shlb
in
xchg
in
jecxz
or
and
jne
jno
rclb
ss
and
mov
hlt
mov
rol
push
lods
sarb
xor
loope
jmp
test
push
lcall
pop
inc
add
xchg
arpl
inc
pushf
jle
je
cld
jo
xor
pop
jecxz
mov
adc
sbb
lock
push
push
dec
ljmp
inc
sbb
outsb
mov
imul
sub
jge
adc
push
add
mov
or
sbb
enter
das
test
sub
repnz
sbb
ljmp
cmp
ja
mov
movsb
push
xchg
jns
stos
sahf
adc
ret
jmp
inc
cs
popf
jg
imull
sbb
inc
fstpl
xchg
imul
fisttps
stos
hlt
fstps
dec
roll
jle
movl
mov
dec
jo
xor
mov
subb
filds
pushf
nop
jl
inc
int3
hlt
fld
inc
jp
or
and
mov
lock
cmp
xor
push
sub
aaa
cmc
mov
inc
out
add
sbb
pop
repnz
cli
nop
and
adc
push
xor
or
ficoms
in
loope
mov
mov
pop
das
xchg
lcall
aad
mov
push
adc
or
mov
jmp
xchg
iret
sbb
fwait
testl
or
pusha
gs
cld
add
jb
jne
sbb
xchg
sub
fldenv
testb
repnz
cmp
mov
push
andb
mov
out
jge
and
in
neg
or
mov
shll
pushf
jne
add
xor
dec
xor
or
dec
dec
sbb
das
bound
push
xchg
test
aaa
scas
xchg
loope
je
ficomps
fwait
mov
pushf
pop
sahf
adc
daa
ret
sub
sub
or
cmpsb
mov
arpl
test
scas
movsl
mov
ret
cmp
mov
cmp
mov
mov
jmp
ret
adc
mov
into
pushl
repz
mov
test
loope
cwtl
adc
icebp
sub
sbb
popa
enter
mov
sbb
and
stos
icebp
sub
movsb
mov
fcomip
ja
call
out
into
aad
sbb
ret
push
fildl
in
push
cmp
lret
push
pop
and
aas
or
push
into
mov
insl
xor
sub
data16
mov
mov
xchg
dec
push
dec
cmp
sbb
and
outsl
inc
pop
pop
test
jmp
and
out
lds
add
ret
jecxz
outsb
and
jg
adc
scas
lret
leave
insb
sub
jae
mov
lret
xchg
js
xor
movsl
scas
sbb
in
xlat
pop
ret
mov
rcrl
cmpsb
dec
aad
sub
clc
inc
xor
arpl
lea
jecxz
enter
ja
imul
xchg
jb
loopne
xor
jecxz,pn
scas
test
aaa
cmc
jg
imul
cmpsb
stos
lds
mov
in
xchg
push
jmp
rcll
cmpsb
repz
jno
and
jns
roll
out
in
je
ja
arpl
mov
test
fsubl
sub
shrb
adc
test
push
aaa
icebp
push
push
ficompl
aaa
sbbb
ficoms
mov
cwtl
jne
nop
imul
jmp
inc
rolb
rcll
jge
popf
xchg
sbb
xor
outsb
push
sbb
rclb
test
out
pop
push
push
mov
xchg
nop
int3
mov
sarl
data16
jmp
xchg
cmp
popf
jo
sub
popa
jl
mov
mov
and
shl
in
pop
out
and
dec
mov
jo
inc
repnz
inc
imul
adc
in
fbld
push
test
cmpsb
sarb
mov
imul
in
fdiv
loop
neg
out
aam
mov
int
inc
cmpsb
mov
pusha
out
testb
insl
xchg
cmp
add
aaa
jmp
mov
in
das
mov
fs
outsl
mov
mov
push
sbb
and
std
mov
cmp
push
cmp
dec
out
cmc
mov
ds
mov
adc
push
sbb
ljmp
mov
dec
stos
push
cli
mov
orps
dec
sub
std
inc
rcll
xor
dec
aas
xchg
repnz
int3
push
push
pop
call
pop
mov
xchg
jnp
ja
jns
testl
sbb
xchg
pushf
mov
xchg
jmp
scas
and
add
hlt
pop
push
inc
sbb
push
xor
mov
fadd
ret
mov
mov
inc
jecxz
cmpsb
mov
xchg
mov
out
jl
cmp
jo
push
pop
jb
jp
leave
push
push
jnp
push
insl
js
rol
inc
js
fists
sub
mov
add
lahf
pushf
inc
and
ret
out
pop
pop
insl
adc
lods
push
andb
mov
push
das
dec
fimuls
in
sub
sub
mov
test
or
sbb
in
mov
imul
xchg
mov
sub
mov
ljmp
or
cld
sub
xor
les
mov
out
out
int3
stos
cmc
data16
imul
xchg
mov
jae
cli
cmpsl
pop
push
mov
movb
add
fwait
mov
jle
stc
lock
mov
inc
cmp
int3
push
cmp
push
shl
pop
pop
test
fstl
jno
testl
icebp
mov
movsb
sub
mov
test
gs
repz
mov
xchg
lret
sub
pop
pop
call
out
gs
sub
fistps
cwtl
out
cltd
dec
dec
mov
int
movl
push
rolb
mov
xchg
and
je
ret
rcrl
imul
rcll
xor
xor
cltd
and
cmp
out
adc
add
shlb
pop
ljmp
sarb
cwtl
jmp
sub
das
mov
aad
mov
inc
xorb
pop
lock
std
or
cmp
orb
dec
stc
leave
xchg
sbb
popa
leave
jns
xchg
stos
cmp
push
dec
mov
arpl
loopne
mov
sub
jo
add
dec
test
clc
sbbl
xchg
xor
es
fmull
and
out
rcrl
push
pop
mov
cwtl
fwait
inc
mov
repnz
sub
jl
fists
mov
cmpb
dec
lock
repz
pop
inc
push
pop
mov
arpl
add
mov
not
xchg
aaa
in
popa
or
lds
adc
popf
js
mov
ret
stc
adc
sub
out
setl
sbb
xchg
adc
push
xor
mov
cld
inc
jbe
or
jmp
adc
call
pop
sbbl
push
xchg
shl
pop
popf
xor
test
movsb
xor
sbb
hlt
hlt
mov
mov
sbb
pop
repnz
ja
inc
pop
fmul
repz
lock
dec
inc
mov
xor
cmp
loop
loopne
sub
add
mov
test
mov
fistps
fidivrl
sahf
push
dec
mov
and
mov
sbb
sahf
je
or
cmp
push
inc
out
shrb
mov
push
cmp
fcoms
inc
dec
or
out
pop
cmpsl
loop
sub
addl
cmp
arpl
and
adc
and
fildl
mov
jne
mov
or
xchg
pop
jecxz
popa
adc
and
inc
add
test
es
adc
popa
sahf
xchg
sbb
loopne
mov
inc
out
fcmovne
mov
push
scas
into
or
jae
stc
sbb
pusha
mov
ffreep
mov
inc
in
pop
fisttps
jb
adc
in
sub
pop
mov
cs
addb
jle
cmp
in
lds
pop
inc
pop
imul
inc
and
into
test
out
or
fmull
push
movsb
inc
jp
es
sbb
or
push
and
xchg
inc
lock
mov
cmp
addl
out
fwait
inc
shlb
mov
and
stc
movsl
dec
fidivrs
in
scas
or
pop
inc
lds
fadds
imul
push
jb
arpl
inc
fdivrs
and
mov
xchg
lahf
addl
push
sbb
and
andl
adc
ljmp
movl
and
ret
push
mov
fs
pop
pop
hlt
lcall
xchg
sbb
mov
test
dec
or
inc
mov
fisubrs
fidivl
inc
outsl
dec
aaa
outsl
ss
cmp
cmp
inc
daa
in
into
inc
repz
jmp
loope
lods
clc
add
jmp
or
or
ja
xor
mov
orl
mov
mov
cltd
iret
out
mov
push
mov
mov
stc
fists
xor
nop
pop
jnp
int
daa
scas
adc
sbbl
movsl
add
scas
es
out
psrld
aam
jge
inc
sub
mov
jecxz
xor
in
test
aaa
add
in
push
add
jp
and
xor
sbb
pop
sbb
repz
outsl
mov
pop
ljmp
pop
xchg
fwait
jle
inc
xchg
inc
lahf
push
push
outsb
mov
push
ds
cwtl
mov
dec
pop
adc
push
shl
mov
cwtl
rcrb
jnp
in
xor
ret
fwait
cwtl
adc
daa
xlat
lds
sub
inc
out
push
scas
popa
inc
and
inc
stc
test
rcrb
or
arpl
fidivrs
xor
jg
fnstcw
xor
imul
pop
scas
mov
pop
insb
dec
data16
aaa
loop
fdivl
cmp
xchg
test
jae
cmp
xor
scas
add
lret
lods
ja
mov
inc
cld
inc
mov
dec
imul
and
mov
dec
and
hlt
mov
mov
loope
rcll
mov
mov
xchg
jg
les
mov
dec
out
mov
cltd
test
js,pt
lds
loopne
subl
xlat
pop
or
xchg
fsubrl
imul
sub
imul
mov
cmp
arpl
mov
bound
mov
in
ja
out
ret
push
int
pusha
shrl
lea
insl
inc
scas
add
mov
ret
test
or
cmp
mov
mov
sahf
mov
out
pusha
mov
test
mov
dec
mov
popa
inc
in
repnz
flds
negb
pop
mov
inc
mov
and
cmp
sub
mov
cmpsb
adc
cs
sbb
push
sub
fwait
push
in
mov
dec
adc
mov
imul
loop
addr16
rorl
fstpt
and
iret
mov
and
movsl
xor
xor
mov
cmp
lret
insb
mov
lret
je
xchg
add
xchg
cmpsl
mov
aaa
push
sub
add
lds
mov
stos
int
and
fidivrl
ja
fxam
repnz
test
movsb
mov
xor
jnp
lds
and
mov
jecxz
outsl
sbb
push
adc
xor
jnp
mov
mov
jne
ja
mov
or
dec
jl
push
lods
bound
fstpt
ljmp
pop
dec
popl
dec
add
pop
popa
jb
popf
ljmp
dec
nop
sub
inc
lods
lret
loopne
rclb
das
jae
into
dec
into
pop
je
mov
push
cmpl
bound
out
push
xchg
pop
xor
push
sub
fcmovbe
and
mov
pop
lods
clc
mov
sbb
test
les
dec
cmp
fwait
add
popa
hlt
mov
or
insb
das
out
jmp
mov
mov
imul
pop
xchg
loop
imull
or
lea
sahf
inc
aaa
inc
fs
xor
lds
fwait
and
sbb
xchg
inc
jo
in
inc
in
mov
push
pop
inc
mov
popf
mul
sub
pop
subb
push
divl
shrb
adc
cmc
pop
adcl
mov
add
pop
sub
or
enter
stos
fiaddl
adc
ss
push
pop
pop
jg
push
outsb
cmpsb
pushf
lods
cwtl
mov
fwait
enter
inc
dec
in
fbstp
jb
gs
mov
adc
jb
ljmp
cmpsl
test
call
push
jne
push
jecxz
stos
sub
mov
outsb
hlt
xor
rolb
dec
jle
outsl
cmp
add
pusha
mov
les
lods
jno
xor
pop
push
jb
mov
sti
orb
xor
dec
mov
fstpt
dec
push
mov
out
and
iret
shll
mov
sub
mov
add
jae
rclb
pop
dec
pop
pop
lods
je
xchg
inc
inc
dec
mov
movsb
rcrb
shll
cmc
sub
rorb
pop
test
jbe
adcb
push
jl
sarb
mov
cmp
cmpsb
frstor
mov
adc
loope
dec
cld
fldl
or
lods
jne
push
gs
cmp
dec
stc
cmp
fldl
shrb
sbb
addl
cmp
mov
push
xor
scas
push
jle
push
cwtl
pusha
cmp
adc
clc
ds
leave
iret
adc
add
sbb
fimuls
call
mov
mov
pop
out
in
inc
in
or
inc
out
fs
dec
xchg
test
lods
insl
imul
cltd
outsl
mov
mov
add
jmp
cs
sub
cwtl
mov
xchg
mov
or
cmp
xor
mov
pop
insb
mov
cmp
lahf
inc
outsl
popf
push
dec
jnp
pop
sub
out
jne
lahf
lock
mov
hlt
mov
inc
mov
pusha
lahf
insl
cmp
jp
sub
jae
jnp
ljmp
inc
or
jae
sub
cmc
adc
pop
and
cmp
mov
shl
pushf
xor
mov
sub
or
mov
xor
arpl
mov
aad
fdivl
pop
inc
xor
lods
sub
mov
roll
pop
mov
sbb
dec
addr16
adc
dec
xor
sbb
xchg
dec
fdivp
outsl
or
andl
jae
jge
stos
lret
imul
and
nop
ror
movsl
sub
xchg
lea
adc
jl
out
cmp
inc
in
inc
jge
sub
xchg
xor
xchg
inc
mov
imul
lret
jae
test
push
insl
dec
addr16
in
pop
xchg
jno
ret
mov
pop
jle,pt
xchg
sahf
pop
cld
mov
mov
mov
sbb
and
mov
mov
mov
xchg
aaa
xchg
inc
pop
add
inc
push
mov
mov
sbb
mov
xor
les
add
scas
push
push
testl
xchg
jle
shlb
enter
mov
adc
cmp
lahf
adc
xor
sbb
outsl
inc
rolb
sub
dec
jbe
push
pop
mov
mov
inc
movb
xlat
push
push
push
and
inc
push
push
inc
pop
dec
mov
pusha
insb
dec
push
in
mov
jo
cmp
aas
insb
mov
jns
sbb
push
adc
pushf
sub
lsl
adc
aad
mov
cmc
clc
xor
xor
mov
mov
icebp
ds
jo
test
lcall
lds
jno
jae
push
js
nop
fsub
sub
test
emms
sbb
lret
jp
stc
add
inc
xor
and
imul
iret
jno
inc
popf
dec
cmpsl
ret
pop
negw
lods
sub
test
in
adc
xchg
mov
xchg
repz
jns
orb
ret
xor
dec
sbb
call
dec
insb
and
scas
mov
popf
bound
sub
cli
out
aas
js
push
test
int3
insl
sbb
in
mov
and
decb
and
repz
or
decb
xlat
ficompl
inc
ja
lods
outsl
insb
add
sarb
in
dec
imul
shll
lahf
orl
sbb
sbb
dec
inc
je
out
lcall
xchg
fdiv
fiadds
test
add
std
loop
mov
sbbl
push
dec
cmp
mov
mov
test
mov
into
dec
cmp
pop
or
mov
pop
movsb
jge
mov
add
xor
les
ds
inc
jne
negl
dec
or
scas
jb
lret
sahf
outsb
add
pop
fisubs
scas
jae
popf
sbb
sbb
mov
lcall
movsb
adc
xlat
cmp
push
aas
cmp
push
xchg
pushf
into
push
arpl
fdivl
xlat
xlat
inc
xchg
xchg
fwait
cmp
push
sbb
imul
shlb
sbb
insb
jnp
inc
aam
movsb
jmp
movb
jmp
lret
sbb
sbb
adc
jae
and
mov
loop
push
pop
js
xchg
je
test
mov
icebp
jae
cmp
lds
jg
test
jo
mulb
mov
and
xchg
jg
inc
inc
mov
dec
rol
mov
pop
pushf
and
adc
ror
mov
nop
cltd
in
adc
pop
mov
xor
ljmp
add
fcmove
mov
push
jb
push
cmp
push
cmp
xchg
stos
xor
test
push
mov
mov
test
lcall
push
sub
in
lock
pop
dec
adc
mov
mov
divb
sbb
mov
cmp
xor
mov
aam
adc
sub
pushf
inc
imul
adc
push
add
mov
in
push
sbbl
xchg
arpl
leave
xor
jb
mov
ficompl
pop
mov
inc
adc
or
mov
mov
outsb
test
xchg
aaa
and
ja
jmp
data16
jae
adc
repnz
sbb
in
fs
popa
sahf
insb
aas
mov
push
mov
popa
push
inc
push
lods
adc
push
icebp
adc
pop
xchg
mov
mov
xchg
fiadds
sbb
xchg
jle
or
xor
out
mov
jne
fcomi
or
jae
into
pop
pop
ds
mov
insb
out
adc
in
fdivrl
jecxz
fiaddl
sub
mov
xlat
fs
int3
ficompl
cmp
in
js
jl
pop
inc
pushf
xchg
sbbl
mov
add
xchg
divl
sahf
mov
enter
sbb
lret
jno
fs
pop
lcall
lcall
test
sahf
pop
push
jo
mov
jle
out
lds
jb
pop
aad
jnp
or
pop
inc
inc
mov
inc
insl
lock
cmpsl
cmc
out
test
jmp
inc
jmp
pop
das
sbb
lahf
add
vunpckhps
leave
cmp
or
jmp
aas
push
dec
or
imul
popf
push
xor
jp
cmpsl
movsl
jnp
and
mov
shrb
add
add
test
sub
push
sahf
clc
add
and
dec
xchg
push
outsb
fmull
stos
mov
iret
cmp
cmp
jmp
loope
push
mov
push
enter
insb
cs
cld
sub
xchg
aas
and
popa
push
pop
jnp
mov
outsl
out
mov
cmp
jmp
inc
lret
aad
and
sub
pop
jge
rcl
inc
std
dec
shll
xor
mov
add
neg
mov
and
jp
mulb
sub
mov
lret
add
fcompp
sub
in
sub
push
aad
jg
fldenv
and
subb
inc
push
pusha
cmpsb
mov
sub
icebp
mov
pushf
pusha
xor
sbb
mov
push
mov
mov
pop
dec
cmpsb
mov
outsl
test
jns
scas
inc
aad
cld
loop
cs
cltd
shl
jg
pop
jnp
add
jnp
xchg
rorl
push
cmp
jae
in
jno
cmpsl
push
shl
loope
adc
cli
cltd
movsl
scas
sbb
xchg
mov
dec
dec
push
sbb
pop
call
or
mov
xchg
dec
xlat
mov
xchg
das
aas
mov
mov
aad
dec
sarb
pop
stos
pop
aam
flds
rorb
inc
ds
jne
push
adc
sbb
pop
xchg
push
cwtl
and
mov
call
stos
push
mov
sub
dec
inc
mov
rcrl
pop
cwtl
add
push
movb
adc
leave
push
jnp
add
or
mov
adc
push
or
jp
mov
fdivl
jge
aaa
and
push
mov
adc
popa
push
dec
inc
in
jno
or
enter
mov
fisttpl
or
popf
push
int3
sub
test
ret
jne
mov
xchg
push
jecxz
lret
stos
shlb
push
pop
sahf
icebp
mov
out
mov
loopne
in
dec
rcll
mov
out
cmp
and
cwtl
jmp
jmp
sbb
adc
es
xchg
push
mov
fisttpll
cmp
fcomps
cmp
mov
sbbb
insb
inc
std
loopne
push
sbb
leave
inc
inc
daa
adc
insb
bound
pop
stos
jne
xor
mov
adc
jnp
in
and
mov
push
pop
ret
cmpsb
xchg
sub
aam
jnp
js
fxch
jae
push
cmc
out
dec
or
movsl
jbe
out
pop
arpl
mov
add
pop
std
jl
xchg
loop
cs
push
mov
das
dec
pop
pushl
faddp
pop
jmp
adc
add
mov
and
jne
xor
add
stos
stos
mov
sbb
mov
inc
lods
inc
movsb
sbb
xlat
or
test
loopne
sbb
mov
popw
sahf
cmp
orb
ret
sub
xlat
je
cmp
push
clc
aaa
push
or
sub
adc
mov
repnz
leave
mov
push
add
mov
dec
scas
cmc
cmp
ficompl
xor
cmc
jp
sbbb
sahf
mov
inc
mov
lret
lock
fwait
les
mov
xchg
adc
fbld
pusha
cmpsl
flds
xchg
scas
adc
adc
and
push
gs
out
call
fdivs
cmpsb
es
push
imull
lahf
mov
cmpsl
pusha
scas
ds
push
aam
mov
iret
mov
dec
push
cmpsb
fisubrl
mov
mov
aam
adcl
test
in
adc
lret
or
lret
jbe
lods
mov
jb
aad
mov
mov
mov
leave
push
cmova
imul
pop
ss
icebp
ljmp
movsb
sbb
repnz
or
jo
adc
out
and
and
xor
dec
dec
inc
push
pop
jnp
aaa
imul
sbb
addr16
test
sub
pop
cmp
mov
inc
out
add
or
cmpsb
imul
js
into
push
xor
outsb
mov
or
push
and
sub
aad
inc
das
inc
pop
mov
adc
and
mov
jb
cmc
lahf
bound
popl
int
inc
jnp
inc
lods
sbb
push
lods
xchg
test
aad
xchg
sarl
into
dec
into
jb
enter
out
mov
jg
push
adc
pop
test
loope
dec
sbb
pop
and
xor
pushl
and
int
fdivs
inc
loope
mov
jmp
bound
sub
mov
adc
ja
adc
pop
lea
jbe
mov
dec
or
sbb
inc
sub
shrb
sub
inc
insb
fdivl
mov
loope
ss
outsb
dec
xor
pop
insl
imul
mov
jnp
xchg
out
stos
pop
xchg
mov
and
jns
ljmp
jge
push
movsl
fsubrl
mov
jne
or
loopne
lret
cmc
sub
call
dec
mov
outsb
popf
out
lret
fbld
int
sbb
out
int
into
sub
mov
jns
fwait
scas
mov
shll
push
mov
ficoms
sub
xchg
stc
fstps
fcmovbe
gs
push
xor
or
jp
push
cmp
ret
shl
adc
push
jno
ret
rorl
imul
push
jg
xchg
out
xor
mov
lock
pusha
adc
jle
ret
jge
outsb
mov
shr
xorb
stos
mov
lahf
dec
or
es
neg
jp
iret
xchg
add
fdivl
in
lock
pop
adc
mov
stc
push
in
xchg
cmpsb
test
sub
xchg
sub
ret
jle
stc
es
or
scas
and
clc
push
aam
mov
jl
jne
in
pop
loopne
dec
fiadds
mov
add
dec
fldt
add
arpl
mov
cwtl
adc
mov
dec
jo
xor
xor
cmp
fistps
int3
cmp
lcall
in
push
dec
mov
out
inc
inc
enter
dec
jp
icebp
or
push
out
cmp
sub
dec
in
adc
test
mov
pop
adc
in
aad
mov
hlt
jmp
mov
mov
dec
add
mov
xchg
iret
mov
pop
fidivl
daa
std
mov
cmp
inc
cli
aaa
popf
mov
fucomip
or
or
icebp
xchg
xchg
lds
dec
pop
xor
out
push
mov
imul
dec
fsts
and
and
fdiv
add
insb
dec
sub
leave
in
sub
cwtl
jecxz
jmp
pusha
test
mov
mov
scas
dec
div
sbb
dec
push
and
add
test
cs
jle
mov
push
cmp
add
andl
mov
sbb
xor
orb
jge
add
out
adc
loope
sarl
mov
stc
xchg
daa
xlat
cmpb
push
adc
imul
xchg
aad
fstpt
pop
add
or
push
lds
fmul
insb
pop
adc
cmpsb
xor
repz
test
mov
xor
into
jecxz
enter
imulb
adc
mov
adc
xchg
jbe
in
in
idivb
xchg
pop
iret
jmp
dec
adc
imul
and
and
xchg
scas
xchg
lds
data16
cmp
sahf
jg
mov
bound
push
clc
fsubl
inc
lds
cmpsb
add
and
mov
sbb
fsubr
mov
leave
lret
cmc
jmp
not
pop
pop
xchg
insb
inc
mov
shl
jle
mov
aaa
lret
cmp
and
cmp
je
lret
inc
imul
pop
in
fs
lock
mov
push
jmp
repnz
jns
and
fsubs
rorl
xchg
notl
mov
mov
icebp
mov
imul
or
jb
push
arpl
imul
jge
mul
xchg
push
leave
xlat
jg
xor
outsl
lcall
out
adc
adc
jo
adc
mov
jmp
sahf
mov
cltd
mov
ja
xchg
dec
loop
sub
push
mov
mov
or
mov
sbb
test
filds
out
stc
lods
lcall
stos
dec
cmp
test
inc
fld
mov
and
xchg
mov
xor
adc
jmp
or
js
add
je
addr16
jne
adc
inc
mov
in
mov
mov
ret
stos
xor
fwait
cmp
and
mov
arpl
aas
and
push
mov
dec
dec
inc
dec
fs
mov
loope
rolb
sbb
and
mov
lods
jge
int
jg
jle
pop
cltd
sub
inc
add
jb
test
xorl
out
mov
adc
xorl
cmp
push
push
push
mov
cli
mov
out
adc
cmpsl
sbb
sbb
push
push
insl
sbb
gs
adc
lahf
loop
data16
adc
mov
add
push
scas
inc
mov
push
fistl
xor
and
jp
mov
sbb
sub
bound
enter
pop
mov
movsl
mov
push
stos
pop
aad
gs
cmp
add
adc
push
mov
and
in
negb
ja
je
ret
lret
sub
pusha
or
mov
idivb
pop
int
nop
cmp
push
out
call
and
bound
mov
fists
lods
xor
push
push
popf
ret
inc
push
dec
xor
pslld
mov
fdivrs
mov
cmp
mov
cmp
xor
call
or
cmpsl
lods
mov
std
leave
and
js
xchg
jg
es
outsl
out
ret
in
sqrtps
cmp
sub
jbe
mov
fldl2t
jle
pcmpgtd
add
xor
stos
lcall
repz
mov
jge
aad
ja
addr16
and
lock
pop
sbb
cli
scas
or
push
loopne
jo
fwait
or
or
xchg
cmp
test
or
insb
repnz
or
lcall
cmp
lods
divb
fdivrs
sbb
jo
pushl
int
stos
inc
mov
adc
cmpsb
add
or
adc
xor
xchg
dec
iret
inc
xchg
inc
ficompl
int
or
pop
out
cmp
clc
jl
cmp
adc
cwtl
ret
sti
hlt
mov
fsubp
lock
add
mov
dec
loopne
jg
cs
sbb
pusha
mov
test
or
cltd
jo
ja
jecxz
aam
inc
mov
jl
repz
xchg
adc
imul
cmp
xchg
fadds
cmp
sbb
sbb
pop
in
sub
push
das
ss
add
popf
and
or
or
adc
cmp
cmp
lahf
outsb
movsl
mov
cld
mov
mov
push
test
icebp
or
aam
call
sti
xchg
gs
rolb
shll
sub
or
cmp
jo
push
cmp
mov
mov
push
inc
add
pop
mov
push
shrl
and
ret
or
mov
adc
data16
cs
arpl
ja
push
cmp
push
or
icebp
lea
xor
enter
scas
jo
call
sub
cltd
in
push
xor
aaa
ja
imul
pop
les
or
xor
xchg
adc
add
xor
and
inc
pop
popf
movsb
mov
xor
pop
sbb
adc
jle
js
sarb
adc
leave
push
adc
sarl
sbbb
fimull
aaa
lods
xchg
xor
in
mov
dec
mov
mov
sub
add
sub
adc
orl
add
and
xchg
push
push
clc
test
xlat
mov
push
cmp
pop
insb
nop
mov
sub
rcrb
mov
and
dec
ljmp
push
push
test
fldl
out
xchg
xor
mov
stos
xor
mov
rclb
stc
imul
enter
mov
jge
lods
scas
xor
nop
cmp
pop
fcomps
add
pusha
in
lea
incl
xor
insl
mov
mov
jge
cwtl
icebp
pushl
jne
xchg
adcl
pop
sbb
jp
and
inc
adc
jge
pushf
mov
pop
ljmp
popa
mov
insb
out
push
jb
add
es
sti
pop
fmuls
rol
lods
rolb
test
cmc
out
popa
lds
mov
xor
mov
inc
mov
mov
sub
push
lea
push
mov
stos
mov
dec
pop
lds
enter
inc
jmp
adc
roll
das
sbb
or
cmp
out
les
out
es
loop
out
and
fidivl
mov
test
dec
aad
insl
jno
and
outsb
add
ja
push
pop
sub
cmc
dec
and
push
mov
jp
fsubs
stos
fnstsw
adc
sbb
xchg
lret
das
clc
stos
add
mov
dec
xchg
test
pop
insl
inc
ss
dec
inc
insb
sbb
dec
cmpsl
lahf
aam
inc
sub
sti
add
push
repnz
add
aas
lahf
inc
sub
sub
sbb
cmp
lock
mov
les
cltd
adc
mov
mov
mov
xchg
pop
and
push
cld
dec
or
lret
ret
xchg
jecxz
inc
and
adc
sub
inc
les
and
fists
sub
movsb
rolb
clc
cmp
int3
out
dec
dec
pop
cmpsl
cmp
cmp
mov
shll
loope
jnp
stc
ret
jbe
mov
push
popf
and
inc
jae
or
and
inc
mov
dec
es
sub
xchg
inc
mov
dec
dec
mov
fistps
mov
mov
push
xorb
jmp
and
mov
mov
call
enter
es
imul
movsl
mov
stos
dec
and
movb
pop
popl
loope
stc
and
insl
pop
lods
xchg
ficompl
out
insl
add
pop
scas
adcl
decb
test
sub
lahf
fistl
xor
xorb
rorb
push
dec
sbb
repz
sbb
mov
repnz
lds
xor
aad
arpl
pop
pusha
cmp
mov
hlt
dec
inc
or
adc
lret
cmp
xchg
enter
rcll
outsb
ss
jae
xor
addr16
inc
fistl
enter
movsl
mov
addr16
test
dec
mov
movsb
out
int3
cmp
mov
rorb
cmp
movsb
push
mov
fs
jp
popa
mov
pop
ret
movsb
lret
mov
inc
test
stos
out
sbb
or
push
sbb
or
gs
loopne
sub
sbb
movsl
mov
movsl
xor
cmc
imul
push
loope
xor
es
xor
dec
ja
popa
rolb
sub
fld
repnz
les
sti
shrb
cmpsb
push
test
jl
test
sbb
and
pop
jo
jae
nop
shll
mov
push
and
cmpsb
ficomps
leave
pop
test
aaa
ds
xchg
iret
daa
rorl
cltd
mov
sti
or
add
in
jl
imul
popf
xlat
mov
int3
clc
sub
push
je
jecxz
cwtl
push
fst
sahf
loope
push
jle
sbb
jge
pusha
inc
insb
sar
and
sbb
xor
dec
xchg
pop
inc
pop
mov
test
adcb
lds
mov
inc
and
xor
cwtl
outsb
or
aad
add
xor
data16
xchg
int3
mov
and
jo
addl
sti
sub
jle
test
xchg
or
mov
mov
out
nop
data16
pop
gs
sbb
sub
lock
jae
sbb
sbbl
not
xor
in
add
adc
inc
into
or
jl
pop
and
pop
fcom
out
pop
in
dec
pop
jbe
popf
jge
sbb
mov
out
sub
out
cmpsl
jge
popa
pushf
cwtl
dec
jne
pop
sub
dec
enter
int3
negb
in
rolb
lea
out
push
cmc
aam
push
sub
or
push
mov
mov
push
xlat
sbb
shlb
cwtl
nop
int
push
aad
xchg
mov
cltd
lock
sub
fmul
mov
add
mov
mov
inc
inc
jmp
pop
pop
in
pop
pop
aas
fstpt
pop
cld
sbb
push
jl
inc
out
sti
inc
sbb
cmp
ds
pop
or
mov
jb
pop
mov
lret
sbb
fwait
mov
movsb
inc
jge
mov
inc
xchg
mov
jge
insb
mov
fiaddl
enter
inc
xor
dec
iret
fcmove
mov
fsubs
push
movsl
cmp
test
inc
dec
aas
cli
call
call
cmpsb
popf
xchg
cli
lret
pop
scas
mov
mov
sbb
push
arpl
ds
or
int3
xchg
in
in
and
rolb
mov
cmp
mov
mov
incb
ljmp
test
lea
inc
mov
sbb
jnp
cld
std
and
lret
out
test
sbb
popa
loop
or
xor
mov
push
sarl
xor
mov
movsl
in
popf
pop
sbb
push
ret
or
cld
sub
lret
pop
jbe
cmpsb
repnz
push
repz
test
pop
cmpsb
test
push
xor
push
sbb
lds
repnz
stc
push
push
inc
cmp
dec
rcll
mov
sarb
mov
fs
inc
scas
loop
sbb
cs
cmp
xchg
sub
lds
lock
fnstenv
and
loop
cmp
arpl
mov
out
push
xor
dec
inc
mov
fldenv
jl
pop
or
pop
lcall
cmc
xchg
dec
out
lret
inc
jge
push
out
mov
adc
bound
mov
stos
cmpsb
dec
lahf
inc
xor
pop
xchg
and
repz
mov
or
je
and
fdivrs
adc
cmp
pop
sbb
xchg
dec
mov
arpl
fwait
cwtl
jge
or
or
mov
addl
data16
data16
sub
or
mov
enter
movb
movsb
aad
cmc
pop
lret
call
lock
mov
in
cmpsl
xor
iret
push
sbb
xor
aam
push
inc
xchg
rol
into
push
push
loope
or
fidivrs
imul
adc
jge
loopne
sahf
push
jmp
loope
fimuls
lret
or
pop
xor
xchg
cmpsl
adc
or
sbbb
pop
xlat
xchg
or
je
pop
daa
imul
lret
push
xchg
mov
dec
out
cmp
fdivr
or
and
bound
scas
cld
add
add
dec
jmp
imul
cmc
mov
push
outsl
mov
adc
popa
repnz
ret
xchg
imul
sbb
push
insb
jge
xor
mov
xor
inc
jmp
fdivl
mov
mov
ss
fnstsw
dec
dec
pop
push
fildll
shll
xchg
in
outsl
loope
adc
bound
inc
xor
pop
mov
lock
adc
ja
lahf
adc
hlt
cwtl
fldenv
pop
dec
scas
inc
mov
test
dec
xchg
sbbl
fneni(8087
hlt
sti
sbb
jg
leave
icebp
push
jns,pt
mov
test
jmp
cmc
pop
out
idiv
jb
jl
mov
jg
jp
cmp
cmp
testb
jo
inc
iret
mov
subl
fsubrl
mov
push
cli
jns
test
xlat
rcrl
xor
addl
out
test
nop
jo
jge
add
scas
cmpb
fimuls
or
xchg
xor
lahf
or
adc
clc
push
sub
arpl
sahf
shll
xchg
ret
cmc
jmp
mov
add
cmc
jnp
outsl
mov
clc
fisubrs
popf
pusha
and
xor
sbb
rorl
inc
stc
mov
sub
push
xchg
add
pop
cmp
inc
movsl
loopne
xor
repnz
stc
inc
lock
jo
jp
je
dec
insl
inc
iret
or
movl
sub
push
fwait
gs
popa
lods
ljmp
aad
push
push
adcb
or
lcall
add
negl
call
cmpb
mov
xchg
ljmp
xchg
int3
jne
push
pop
insl
fimull
mov
mov
add
mov
jmp
push
mov
test
ficoml
shlb
xlat
mov
gs
and
or
or
mov
mov
jns
sub
push
lahf
test
mov
mov
test
mov
andb
lods
data16
jb,pn
cmpsl
adc
jp
out
add
ljmp
inc
inc
add
xchg
pop
iret
inc
sub
iret
jg
sbb
or
and
add
arpl
insl
lahf
cs
dec
hlt
push
jo
xorl
mov
push
mov
jne
fists
lea
mov
fiaddl
sub
pop
jb
dec
dec
mov
sub
jbe
mov
jmp
adc
xor
out
push
insb
lret
inc
pop
sub
dec
leave
and
xchg
pop
mov
and
mov
pop
sahf
mov
sub
ljmp
mov
jg
pop
in
inc
sbb
or
cwtl
stos
jo
mov
push
mov
mov
mov
dec
adc
cmpsb
dec
out
jecxz
jnp
out
sti
pop
les
adc
mov
outsl
js
mov
loopne
and
dec
cmp
daa
cmpsl
popa
fwait
sbb
loope
mov
bound
add
inc
repz
test
test
fistl
mov
cmp
aam
pop
cld
sbb
adc
lahf
mov
cli
and
popa
mov
ficomps
test
cmp
lds
or
mov
in
scas
das
mov
lods
mov
fwait
jae
pop
cwtl
dec
xchg
xchg
and
xchg
adc
push
jno
adc
cmpsl
int
out
add
jg
fwait
jnp
repnz
insl
jns,pt
lds
lods
addr16
adc
movsl
fcompl
jl
jne
out
int
mov
or
jbe
rcrl
mov
xor
sti
jle,pt
mov
push
mov
inc
mov
lods
inc
mov
add
sets
mov
mov
lods
xchg
in
pushf
dec
gs
nop
or
mov
js
imul
inc
cmp
xchg
mov
ret
dec
cmpb
lods
repnz
test
hlt
mov
pop
pop
push
mov
icebp
jbe
sub
lahf
arpl
mov
scas
loope
add
int
add
cmp
sbb
in
scas
cmp
mov
lcall
cmp
in
xor
pop
add
push
sbb
ret
fs
pop
sub
mov
out
shll
rorl
out
pusha
sbb
jnp
addr16
sarb
dec
imul
fisttpll
inc
inc
cmc
movsl
pop
pop
push
mov
sbb
mov
xchg
dec
push
jge
mov
repnz
sub
insb
insl
or
jbe
push
fcomi
mov
int
mov
dec
or
int
mov
int3
xlat
sub
mov
mov
mov
fs
or
adc
fidivrl
inc
and
pop
adc
je
xchg
pop
fcomi
xchg
or
mov
outsb
push
and
cmp
inc
fwait
enter
add
movb
xchg
jns
or
pop
fwait
jl
xchg
jns
imul
cs
mov
insl
inc
and
gs
push
cli
pop
mov
jns
xchg
add
mov
test
sub
mov
xor
sub
hlt
test
lods
in
in
sbb
mov
ret
rcr
add
or
into
insb
and
add
dec
nop
inc
stos
sbb
iret
int
fbstp
dec
and
jae
push
addr16
jecxz
arpl
inc
push
add
cmp
add
daa
lcall
pushf
mov
fistpll
sti
mov
pop
mov
cli
jae
xor
inc
sbb
xchg
xor
and
inc
pusha
xor
jl
addps
imul
gs
inc
cmp
mov
or
pop
test
inc
pop
sbb
in
push
arpl
xor
out
stc
jb
cmp
cmpsb
cli
js
call
cmpsl
cld
int3
lea
xchg
dec
sahf
inc
icebp
push
mov
mov
adc
cs
rclb
fdivl
sub
jecxz
mov
pop
cmp
mov
sub
pop
jmp
sub
inc
sub
fisubrl
fbstp
mov
dec
push
pop
leave
mov
dec
mov
add
pop
inc
pop
sub
sub
mov
ljmp
outsb
push
pop
aas
loopne
add
mov
mov
stc
cld
dec
loope
xor
pop
popf
sub
pop
push
es
test
cmp
orb
les
xchg
ret
loope
fsts
lahf
cltd
mov
cltd
pop
xchg
xlat
jae
subl
iret
lahf
inc
mov
push
fsubl
xor
push
dec
xchg
push
mov
or
add
fldt
push
push
bound
adc
mov
scas
xchg
cmp
mov
dec
push
mov
sbb
dec
call
adc
and
mov
jnp
insb
pop
aad
js
jnp
mov
mov
xchg
out
inc
sub
daa
push
inc
mov
sbb
repnz
dec
sub
cltd
leave
test
lods
into
xchg
dec
jbe
and
jmp
pop
scas
add
dec
xchg
sub
fwait
decl
aad
push
pushf
mov
push
xor
or
pop
cld
mov
jne
adc
negb
adc
fisubl
cmpsl
out
rcrb
pop
lcall
nop
add
cmpsl
push
pop
xor
loope
aad
loope
push
xlat
xor
xchg
fnstsw
inc
or
ret
inc
out
and
push
sbb
cmp
xor
xor
cmpsl
push
push
icebp
xchg
jmp
pop
cmp
or
xchg
outsb
cli
ret
adc
mov
xlat
stc
data16
leave
mov
xor
bound
shrl
sti
jge
jecxz
jp
or
out
in
mov
inc
jno
cs
jecxz
ljmp
pop
mov
jmp
subl
adc
mov
sbb
cmc
lea
gs
fisubrs
aam
js
clc
pop
test
test
push
and
xor
pushf
xchg
add
or
add
repz
aad
inc
mov
pop
negl
in
mov
sub
lea
or
sbb
nop
cmc
jns
inc
cmc
aad
add
icebp
hlt
std
lret
push
sub
dec
cmp
nop
pop
xor
ret
das
stos
mov
jge
xor
xor
es
lret
xlat
mov
push
mov
test
test
sub
pop
mov
in
int
pop
mov
and
jno
lock
aas
and
adc
test
fistl
add
sbb
jmp
inc
fistpl
mov
sbb
mov
inc
and
js
pushf
xor
jle
adc
js
push
loope
adc
xchg
cmp
push
push
lahf
cmp
enter
rcrb
or
subb
dec
cmc
sbb
xchg
dec
test
movmskps
inc
lret
test
icebp
hlt
pop
pop
pop
ja
pop
jge
aaa
aad
pushf
sti
ficompl
mov
xchg
andb
mov
jecxz
inc
movsl
push
aas
or
mov
xchg
jmp
pop
dec
pop
repnz
das
rorl
pop
sbb
mov
test
ror
rcl
clc
pop
ret
add
add
dec
cmp
push
sbb
and
out
out
rcrb
outsb
into
xchg
sti
xor
gs
push
sbb
mov
faddl
jmp
lods
push
inc
sub
jmp
jne
rol
leave
sti
mov
outsl
aam
loop
jge
add
cs
push
popf
aam
imul
sub
shlb
gs
mov
std
mov
or
and
rcrl
std
xchg
jnp
pop
dec
outsl
xchg
lea
mov
shll
fldt
popf
sbb
push
xor
data16
aam
jmp
add
addr16
mov
xor
jecxz
adc
negl
jne
out
sub
add
sarb
aam
xchg
addr16
loop
das
pushf
bound
fld1
ret
push
movsl
push
cld
jg
mov
test
addr16
pop
sub
ds
je
icebp
bound
lods
mov
xor
js
push
je
adc
mov
mov
div
int
or
pop
test
xlat
xchg
fistpl
jp
or
fnstsw
push
lcall
or
cs
pop
inc
clc
mov
aaa
jl
jle
sub
dec
xchg
imul
aad
jecxz
push
mov
ret
push
aaa
je
xorb
lock
test
jmp
in
into
or
mov
negb
addr16
cld
outsb
push
outsb
inc
pop
inc
stc
enter
adc
ljmp
mov
pop
jge
in
dec
andl
pop
out
aas
inc
lahf
rorl
das
shll
cmpsb
repnz
fldcw
ret
cmp
dec
test
daa
mov
rcl
lea
test
push
insb
aam
pop
pop
outsl
sbb
in
insb
pusha
xor
daa
mov
fidivs
and
gs
add
adc
lcall
jo
lret
mov
lret
dec
shrb
pop
fcos
lahf
jns
push
sbb
xor
jle
jecxz
es
inc
int3
jno,pt
jnp
repz
shr
in
add
adc
sbb
out
mov
loopne
dec
mov
ss
mov
call
out
adc
fdivr
inc
std
mov
pop
repnz
btrl
or
inc
movsb
fmuls
xor
or
pop
jge
sub
inc
bswap
mov
xchg
dec
lods
aam
or
pop
test
test
imul
ret
roll
mov
into
fidivs
sub
test
addb
mov
mov
movsl
test
ljmp
sub
or
mov
sub
mov
mov
out
pop
jbe
outsb
push
fwait
cmpsl
push
fsubr
repnz
push
mov
pop
inc
cmpsb
sbb
mov
jbe
cmp
lret
in
mov
mov
cwtl
xor
call
hlt
jns
push
cmp
sbb
push
adc
mov
in
lods
add
cmpsb
xchg
mov
aad
push
mov
xor
jne
jnp
aas
adc
push
xchg
push
lret
adc
stc
jnp
sti
stos
out
mov
xor
sub
or
les
add
xchg
xchg
rcrb
out
mov
inc
fld
cwtl
push
push
scas
repz
sahf
rclb
xorb
ljmp
mov
pop
mov
imull
lock
lods
cli
add
mov
mulb
pop
in
fisubs
add
jle
fcom
movsb
popf
push
pop
xchg
or
mov
inc
xchg
mov
cld
ficoms
nop
inc
sahf
xchg
loopne
jnp
sub
test
cmp
shrb
dec
push
push
in
xchg
cmpsl
aas
scas
adc
popf
jbe
xor
jg
cmpsb
jge
pop
pusha
nop
fcomps
clc
sbb
xor
and
nopl
imul
inc
in
repz
fwait
popa
pop
sarl
lea
addr16
sub
fsubr
aaa
dec
out
sbb
scas
push
or
out
xor
out
ja
sti
das
mov
inc
inc
dec
pop
inc
fldl
sub
pop
push
fisubl
dec
pop
push
lret
push
jbe
das
cli
sub
push
lock
rcrb
jmp
aad
js
add
adc
mov
mov
jo
xor
and
aam
and
push
in
inc
out
xchg
push
gs
outsb
outsb
jnp
popf
shll
cmpsb
fwait
pop
dec
and
sub
test
sub
jo
mov
in
jl
subl
pop
jbe
mov
fcom
and
dec
or
jns
and
aam
in
aam
in
bound
mov
sbb
loopne
xchg
sub
sbb
mov
leave
sbb
pop
in
pushf
xchg
mov
jp
adc
roll
icebp
aas
outsb
lea
lock
sub
jp
data16
adc
rsqrtps
sbb
xor
adc
into
cmp
outsl
test
int
negl
push
cli
loopne
roll
pop
imul
mov
inc
pushf
leave
sbb
and
pop
lahf
inc
dec
dec
lds
jno
mov
mov
fsubl
mov
mov
cwtl
rcrb
lea
pop
fdivl
fcoms
mov
adc
sarl
fiadds
div
lcall
mov
lret
out
stc
jmp
pop
fwait
leavew
psubsb
pop
pop
imul
inc
xchg
imul
test
adc
mov
sbbb
leave
lret
js
insl
insb
push
xor
lcall
in
ja
data16
bound
push
xchg
std
jnp
dec
push
xchg
jp
mov
sbb
mov
sti
sahf
fstpt
addr16
xor
shlb
and
int
test
movsl
jmp
ret
out
daa
adc
ja
les
sbb
aam
and
int
add
jnp
adc
pop
dec
pusha
test
xor
repz
divl
or
movsl
xchg
lods
add
mov
xchg
andb
daa
in
jne
mov
popa
addr16
gs
xor
stc
cmc
push
lcall
jecxz
jne
jle
mov
jae
ja
push
inc
mov
xchg
fistpll
xor
lahf
jge
aam
in
add
js
inc
xor
movsb
sbb
mov
inc
inc
inc
sub
jg
mov
jle
adc
jmp
cwtl
dec
ljmp
data16
fwait
ret
and
lds
fistps
fiaddl
mov
lret
jmp
dec
imul
loope
shrl
popf
sbb
lods
mov
imul
dec
dec
adc
sub
arpl
out
cmp
push
std
popf
jno
xchg
sti
push
ljmp
xchg
out
aad
xor
in
jbe
das
xchg
add
dec
pop
adcl
jle
mov
push
cmp
leave
popf
push
sub
jmp
cmp
inc
fs
inc
pop
xchg
mov
sbb
add
fildl
jo
cmpsb
cmp
aad
mov
adc
push
in
xchg
fdivrl
adc
outsb
mov
cli
in
push
jne
les
push
in
ja
adc
pushf
jp
sti
xor
subl
cmp
shlb
mov
mov
rcrl
std
xchg
jno
stos
fstl
stos
cmp
sti
loop
adc
sub
and
stc
and
stc
xchg
or
faddl
int
pop
int3
add
test
jae
xchg
lods
mov
cld
loop
addb
adc
dec
popf
sbb
dec
aas
cli
or
cmpb
mov
icebp
rolb
enter
mov
stos
sbb
fs
faddl
sahf
into
in
arpl
out
and
aam
gs
cld
jg
xor
adc
inc
es
dec
jns
xor
adc
insl
mov
and
adc
push
push
movsl
sahf
out
cld
jl
xchg
mov
pushaw
addl
add
mov
imul
std
les
in
adc
addr16
out
dec
arpl
out
mov
xor
mov
out
out
test
jge
unpcklps
sub
fcmovu
ja
rcl
test
movsb
ljmp
sub
rol
fdivs
and
sub
nop
das
enter
out
cld
pop
sub
lcall
stos
cmp
mov
jge
es
push
ss
outsb
jl
fsubs
push
scas
sbb
push
imul
pop
aaa
mov
stos
jmp
cli
jp
rorb
push
mov
dec
xor
jno
sub
sbb
jns
div
icebp
cmp
mov
hlt
mov
sub
sbb
and
stos
push
push
pop
jns
and
daa
in
push
insb
dec
shl
test
mov
pop
and
popf
fcmovnbe
in
push
xchg
aaa
fildll
cmp
sbb
lods
das
stos
lret
in
push
inc
rol
xor
nop
mov
pop
and
lods
test
pop
mov
js
mov
sti
jecxz
jl
mov
dec
stos
inc
sbb
cmp
fwait
jae
push
dec
cli
jg
mov
jecxz
jne
add
xor
loope
mov
push
mov
jb
sub
jecxz
mov
dec
sub
xor
sbb
cmp
mov
adc
pop
inc
lahf
inc
mov
out
sbb
mov
shrl
sbb
das
mov
fs
adc
mov
mov
xchg
mov
popa
test
sbb
mov
sbb
sti
lods
mov
adc
pop
gs
xor
fwait
ss
jae
dec
xchg
sbb
sbb
add
idivb
lock
pushf
add
lahf
dec
aad
push
popf
imul
sbb
add
mov
xlat
sub
sbb
cmp
loopne
aas
in
mov
mov
nop
test
in
jg
lret
cmpb
not
push
idivl
jle
adc
push
popf
std
jae
fcmovbe
loopne
xchg
jmp
repnz
mov
fadd
xor
jge
sbb
bound
mov
mov
fists
jo
jmp
or
sbb
je
xlat
jbe
stos
mov
inc
in
cwtl
dec
pop
dec
mov
jp
nop
push
leave
and
hlt
mov
jge
mov
push
jge
xor
and
cmp
negb
xchg
jle
push
inc
xor
sbb
movsb
enter
add
inc
jge
lcall
push
mov
addr16
mov
insl
sub
push
shl
aas
mov
pop
pop
xchg
push
xchg
addr16
mov
movsb
js
xchg
xchg
xlat
pushaw
sub
add
aam
daa
iret
into
push
clc
fdivrp
dec
bound
shlb
fstl
test
out
movsl
popf
mov
jnp
mov
movsl
es
xchg
inc
inc
or
daa
lock
adc
mov
push
rcr
pop
sub
add
iret
mov
xlat
mov
mov
stc
xchg
arpl
lock
gs
cmp
dec
shlb
shlb
sub
mov
push
jecxz
jns
mov
xchg
xchg
lret
cmp
mov
loopne
aas
xlat
arpl
push
ret
mov
test
outsb
pop
orb
or
mov
add
xchg
push
aas
fcompl
inc
push
out
lret
test
inc
repz
sub
adc
aam
xchg
dec
xchg
inc
lock
sub
mov
aaa
pop
mov
mov
inc
xor
outsl
jb
out
mov
stos
push
sbb
mov
mov
clc
push
stos
imul
mov
inc
into
adc
mov
popf
xor
not
jns
in
out
out
pop
movsb
add
sarb
test
push
jne
sahf
xchg
jb
xchg
push
mov
and
sub
outsb
mov
or
inc
xor
insb
repz
pop
pop
sarl
cmp
hlt
xchg
fcmovne
subb
aas
not
mov
in
jp
xchg
inc
or
jge
pop
sbb
adc
call
movsl
dec
jns
jbe
push
lahf
dec
xchg
ss
push
mov
stos
cmp
adc
or
mov
push
mov
pop
cmp
hlt
push
inc
xchg
mov
insb
out
dec
adc
and
in
leave
jl
cmc
shrb
rcr
or
jne
push
adc
popf
insl
test
cmp
pop
jle
cld
pop
adc
sub
mov
cmp
and
lds
iret
stos
and
push
jg
cmp
push
push
pop
lret
enter
sbb
and
jle
stos
push
cmp
xchg
imul
jae
arpl
cmp
push
lcall
enter
lds
call
mov
fisubs
out
int
or
cwtl
adc
inc
mov
inc
imul
sbb
push
out
cmp
xor
xchg
jge
sbb
xor
mov
insb
sbb
xchg
inc
cmp
adc
sub
ljmp
inc
loope
adc
push
lea
mov
mov
arpl
nop
push
mov
scas
stos
xchg
push
mov
pop
push
pavgw
or
mov
lea
gs
int
mov
ret
cmp
jbe
mov
push
pop
xorl
lcall
sub
push
mov
or
test
repnz
push
stos
xor
adc
xchg
imul
mov
inc
adc
push
mov
mov
or
adc
in
pop
imul
enter
hlt
or
rorb
cwtl
push
cmp
sarl
or
push
aaa
mov
stc
mov
or
xchg
movb
aaa
flds
dec
sti
ss
mov
xchg
push
jge
xchg
mov
xchg
fwait
or
daa
pop
shrb
mov
es
dec
je
out
and
xor
mov
fdivl
hlt
fildll
jo
fcoms
mov
clc
imul
scas
mov
lcall
outsl
mov
cmp
insb
std
lret
loope
jg
jno
mov
jle
data16
vmwrite
mull
xor
mov
xchg
dec
cltd
pushf
dec
cli
js
fisttpl
xchg
leave
add
cld
jmp
aaa
test
mov
popf
repnz
xchg
xor
loop
in
push
pop
test
and
jp
cmp
ja
cmp
inc
sub
push
cmp
ficoml
or
inc
das
icebp
leave
inc
lahf
outsb
push
ror
pop
out
arpl
and
sbb
add
sub
add
mov
mov
or
xchg
out
or
cmp
xchg
orb
mov
popf
sbb
push
mov
pop
adc
int3
popa
mov
inc
jle
iret
add
sbb
cs
shrb
arpl
test
mov
mov
ds
inc
out
repz
test
xchg
movb
mov
push
popa
stc
repz
or
xor
or
mov
into
ljmp
xor
ret
imul
add
mov
mov
add
xchg
inc
dec
mov
dec
jo
setnp
mov
xor
popf
in
xor
add
mov
push
adc
inc
cmc
push
addr16
sub
and
insl
sub
lock
pop
fistps
outsl
sub
add
xchg
pop
movsl
lahf
out
mov
inc
push
mov
xchg
push
pushf
and
stc
nop
outsl
inc
mov
add
fs
mov
js
js
mov
sbb
jns
or
or
mov
fnstcw
mov
ljmp
xchg
lea
int
stos
mov
lret
test
push
in
test
aas
stos
aam
fstpt
pop
mov
dec
cwtl
stc
std
mov
imull
into
mov
mov
mov
pop
aam
repnz
dec
xchg
mov
leave
cmp
inc
add
mov
fisubs
daa
rol
jmp
shlb
mov
push
ja
sbbl
sub
pop
cmc
inc
out
dec
xor
sti
lret
mov
mov
movsl
sbb
xor
and
mov
push
jnp
addb
out
inc
scas
or
xor
lods
sub
sub
inc
scas
int
ds
shll
and
negl
jae
cli
rcr
sbb
cltd
ret
cli
jno
loopne
je
js
addb
lcall
xchg
arpl
paddq
cs
mov
cmp
dec
sbbl
sub
sti
fisubrl
sub
and
mov
leave
and
xor
roll
xchg
xchg
shll
shrb
pop
pop
xchg
jg
jo
lods
push
bound
dec
sar
pop
cwtl
xor
jecxz
test
xor
sbb
jns
fwait
push
xchg
xor
and
xor
aas
push
push
add
dec
cltd
aas
je
jne
cmp
adc
fldenv
movsl
mov
pop
and
out
add
sub
cmpb
loopne
dec
stos
cwtl
popf
xchg
pop
mov
mov
push
jbe
inc
jl
inc
out
out
cmp
je
jmp
movsb
into
lahf
fimull
imul
insb
xor
xchg
jo
add
push
mov
cld
insl
lcall
dec
fldenv
mov
fiaddl
xor
sarl
adc
fsubrl
ljmp
push
cmp
xchg
mov
dec
add
jle
push
and
xor
nop
orl
aam
push
test
into
mov
arpl
inc
sub
jle
adc
ds
jge
add
stos
decl
dec
jno
fidivs
xchg
subb
mov
xchg
add
cmp
clc
mov
adc
mov
jb
sbb
jecxz
jmp
or
xor
cs
pop
subb
jns
pop
fistpl
popf
repz
shr
ret
jo
jle
jb
imul
adc
xchg
in
les
mov
push
fsubrl
mov
add
rcrb
test
je
pop
and
cld
xchg
data16
mov
sub
pop
sub
stc
xchg
sbb
pop
dec
rol
push
xor
and
push
iret
sbb
fsubrl
outsb
call
ja
pop
and
mov
lods
inc
fstpl
call
xlat
stos
test
stos
pop
push
and
repz
int
inc
and
call
outsb
dec
xchg
movsb
aad
sbb
adcb
cmpsl
ret
push
fisubl
mov
sub
dec
aam
aad
aam
clc
adc
add
jae
adc
lret
mov
add
bound
lcall
in
mov
cmc
push
mov
add
xor
sbb
arpl
std
shl
inc
or
sti
outsb
fsubr
xchg
inc
jl
jae
dec
push
cmp
adc
adc
in
fmuls
stos
jae
lret
fucom
mov
sub
sbb
mov
das
and
xor
jnp
push
call
and
repz
cmp
xor
mov
sub
stos
insl
mov
sub
daa
arpl
inc
call
outsl
test
fsubrs
mov
shrd
jo
shll
testl
hlt
sub
xchg
test
outsl
mov
mov
into
push
push
mov
mov
je
push
xchg
jl
hlt
mov
adc
or
nop
add
jecxz
out
push
dec
faddl
add
mov
xor
jns
cwtl
stos
test
xchg
gs
fimull
push
outsb
and
xchg
jnp
jb
test
daa
repz
outsb
xchg
repnz
stos
mov
lcall
leave
and
rcll
add
jnp
mov
push
mov
enter
stc
ds
mov
jmp
test
lret
shr
inc
dec
test
leave
mov
imul
mov
js
fwait
mov
sbb
stos
fstps
ja
fsub
imul
xchg
filds
push
ds
push
push
adc
or
cmp
cmpsl
jecxz
into
ja
dec
arpl
push
cmpsl
xchg
sub
ds
pop
sub
lea
xchg
mov
fwait
mov
sub
cli
iret
rcrl
leave
dec
mov
in
ficoml
aam
lret
lods
xchg
mov
xchg
push
pop
sbb
shll
clc
xchg
mov
int3
mov
insl
add
rcrb
ja
pop
imul
fsubl
xchg
dec
xchg
pop
cs
in
or
aaa
push
adcl
cmp
adc
pop
stos
test
aas
xchg
in
out
lahf
push
xor
inc
sbb
sub
divb
out
mov
clc
cmp
loop
sar
add
stos
inc
add
test
js
nop
lahf
push
ror
dec
jnp
repnz
es
fs
mov
or
dec
dec
shlb
pusha
sbb
or
stos
mov
arpl
jnp
pop
push
push
and
add
out
ljmp
test
sub
pop
movsb
pusha
popl
pop
xor
fs
or
orl
sbb
mov
and
add
sub
push
adc
mov
nop
or
sbb
rcll
jns
xor
jp
cltd
mov
inc
fadd
inc
lods
lahf
push
add
cs
mov
cmp
jae
mulb
add
mov
add
mov
aas
mov
push
fsts
pop
loop
dec
movsb
rcrb
je
in
inc
addl
push
subb
push
cmc
daa
into
sub
add
pop
cld
mul
or
sbb
xor
or
fidivrl
fnstsw
dec
imull
cmp
push
xor
sbbl
cmp
test
lahf
popa
pop
cltd
scas
pop
orl
out
jle
ja
xlat
mov
divl
xlat
add
dec
cmp
inc
arpl
dec
xchg
sbbb
adc
loopne
jbe
icebp
out
fwait
repnz
ret
push
cli
add
cmpsl
dec
filds
push
idivb
xor
loopne
ds
pop
cs
in
inc
sbb
ret
lahf
add
push
cltd
jl
dec
out
and
ret
rcr
sbb
fistpll
dec
and
pop
cmpsb
push
sbb
sub
mov
and
mov
std
jle
lret
adc
mov
cli
insb
sbb
xchg
aas
pop
stc
push
xchg
mov
cmpsl
adc
pop
test
sti
mov
icebp
push
inc
ljmp
lock
pmaxsw
xchg
cmc
or
imul
mov
xor
cmpl
into
xor
mov
scas
aaa
shll
push
fcoml
adcl
or
repnz
aam
push
cmp
mov
fucomip
ret
cmc
imul
scas
shrl
or
mov
int
push
push
inc
and
cmpsb
or
daa
incb
or
and
loopne
sahf
xchg
and
xor
ja,pn
andl
hlt
insl
aad
shrl
inc
push
sbb
into
mov
add
and
fstl
icebp
pop
std
imul
add
xchg
jbe
std
movsb
or
adc
or
mov
jno
add
and
pusha
mov
in
mov
ja
sub
lock
les
ret
and
sbb
mov
insb
lret
push
mov
and
dec
cmp
test
pop
push
dec
push
mov
shlb
xor
xor
test
mov
loop
cmp
inc
jns
inc
fidivl
test
mov
and
mov
icebp
sub
mov
push
cmpsl
popf
adc
leave
test
and
je
pop
lcall
lock
cmpl
or
or
jl
mov
inc
pushf
push
pop
mov
xor
aaa
jno
jae
mov
fs
inc
jns
add
push
outsb
popa
fldenv
stc
movsb
push
pushf
in
adc
cmpsl
jmp
add
dec
add
push
adc
mov
outsl
mov
push
lcall
pop
leave
les
ja
mov
pop
adc
sub
xor
mov
je
movsb
fadd
insb
push
or
adc
push
sbb
sbb
ss
sbb
xor
mov
mov
aad
je
lret
mov
scas
jae
xor
cli
stos
xchg
mov
test
ret
jp
fistpl
decl
cmp
push
and
sub
iret
imul
rcrl
pop
mov
fmuls
jbe
popf
inc
aam
add
or
jmp
sub
hlt
ja
sub
out
fnstenv
mov
cld
gs
cmc
push
pop
dec
xor
fisttps
mov
pusha
mov
popf
ds
pop
cmp
icebp
mov
ljmp
xor
test
mov
push
pop
xchg
lods
xchg
test
stos
roll
fcomip
int3
inc
jbe
push
sub
pop
fimuls
dec
and
cmpsl
mov
push
rclb
outsb
fistpl
into
out
mov
or
stos
mov
fmull
pop
outsl
sub
jnp
flds
sbb
pop
scas
fcomi
mov
mov
out
pop
fwait
std
pop
aas
insl
xchg
shrl
pop
iret
shll
arpl
je
inc
and
lods
xor
adc
push
mov
inc
fbld
mov
nop
or
pushf
cmp
push
repnz
push
das
lea
jnp
xchg
sbb
lock
imul
lret
jmp
std
lods
jbe
popa
xchg
fidivs
loop
into
and
fs
movsb
out
and
cmp
lea
inc
xor
sub
inc
jle
mov
sbb
jle
dec
in
xor
shrl
pop
dec
insb
out
bound
pusha
test
adc
xor
inc
int3
adc
and
and
cld
icebp
cmpsl
xchg
mov
xchg
call
xchg
jmp
frstor
sarl
or
ficomps
dec
ret
xchg
daa
push
test
notb
rcl
in
lock
adc
push
cmp
push
cli
sub
cmp
sub
into
popf
sub
mov
mov
push
stc
aam
sub
test
loope
in
enter
rol
dec
pop
inc
cmp
jp
loopne
mov
repz
movsb
shll
push
xchg
or
cli
repz
shrl
iret
cltd
dec
sbb
xor
dec
pop
fsubrs
push
popa
idivl
fildl
mov
inc
inc
sub
push
aas
pop
data16
scas
cmp
movsb
subb
das
js
pop
jmp
outsl
movsb
psubsb
les
xor
cli
hlt
xlat
out
icebp
aas
sti
push
xchg
movsb
mov
mov
lret
cmp
and
cmp
popf
pop
ja
inc
fs
out
mov
mov
insl
push
mov
rcrb
pop
or
push
fsubrp
sub
or
icebp
outsb
adc
xchg
sbb
in
inc
fidivs
inc
idiv
fs
and
xor
and
cmp
pusha
xchg
cmpsb
add
loopne
out
sub
out
adc
inc
ds
dec
sub
data16
insb
pop
les
cmp
lcall
stos
mov
nop
les
loope
and
mov
sbb
pop
adc
xchg
pop
orl
xor
sub
jne
jbe
dec
fucomp
mov
inc
mov
dec
add
inc
adc
adc
call
andl
rorl
jl
and
push
xchg
push
out
repz
jg
les
cmp
fldenv
and
xchg
pop
push
lods
inc
mov
pop
inc
sbb
lods
push
cmp
pusha
mov
jle
push
in
rclb
pop
sub
mov
xchg
mov
ss
jns,pn
dec
mov
sbb
nop
cld
push
pop
cmp
scas
xchg
fnstcw
xchg
movsb
mov
fwait
cli
dec
xchg
or
arpl
add
imul
jge
in
or
adc
scas
sub
pop
stc
std
sbb
std
stos
into
push
sbb
stos
mov
movsb
rcrb
lret
push
jecxz
add
pop
pop
and
arpl
inc
shll
stos
jle
push
mov
mov
cmpsb
mov
jns
loopne
sbb
icebp
sahf
loopne
mov
xchg
fcmovu
aaa
test
push
mov
mov
cltd
sbb
filds
sub
push
cmc
mov
movsl
imul
mov
pop
sbb
mov
sti
push
std
sub
lock
push
xor
test
rcr
fmuls
outsb
lret
xchg
js
aam
fs
inc
cs
sbb
mov
sbb
inc
pop
or
jg
inc
mov
dec
add
dec
fidivl
and
cmp
jne
and
or
ficompl
mov
xchg
lcall
into
test
mov
cmpsb
pop
mov
xor
or
popa
or
jns
sub
dec
jecxz
push
mov
add
push
mov
fcomps
push
pop
pusha
pushf
fs
stc
pop
add
sbb
xchg
arpl
sub
push
addb
xor
fwait
adc
fwait
rorb
loop
adc
mov
ret
cmc
inc
and
sbb
jecxz
xchg
leave
sti
push
sbb
cmpsl
push
sub
cmpsl
cmpsl
jns
jae
inc
xor
adc
mov
jge
sbb
mov
or
ss
pop
inc
mov
push
push
out
cmpsl
push
fstl
jmp
dec
sti
jae
and
loop
add
fnstenv
in
std
dec
fisubs
dec
mov
stos
ds
aaa
stos
imul
push
jns
inc
xor
mov
pusha
imul
inc
ss
popa
inc
lahf
out
mov
xchg
movsb
jns
shlb
loopne
jecxz
out
and
icebp
pop
pop
add
stos
rclb
out
jle
cltd
xor
mov
push
arpl
stos
xchg
rorb
in
add
pushf
je
mov
mov
in
in
popa
fwait
pop
cwtl
insl
or
gs
sbb
dec
lock
out
pop
rcrl
dec
mov
test
scas
lods
push
cmp
cmpsb
lods
ljmp
sbb
xor
mov
dec
dec
lea
mov
dec
jg
dec
fstpl
and
sbb
or
xor
jg
mov
repz
lods
dec
jg
mov
pop
inc
push
in
dec
or
out
js
xchg
pop
loope
std
call
mov
push
fdivr
pop
push
sub
movsl
movsl
popf
mov
mov
andb
aaa
cwtl
inc
pop
fsubrl
out
in
and
add
stc
jns
loopne
popa
fisubrs
xchg
inc
fidivrl
dec
cltd
int
scas
out
enter
xchg
cmpsb
jns
xor
pop
sub
lds
std
cmpsb
add
mov
out
mov
jl
xchg
gs
dec
pop
maxps
negb
add
mov
test
and
insb
mov
cmp
dec
sbb
stc
dec
sub
icebp
rcrb
subb
cmpsl
mov
sub
push
mov
mov
mov
repz
aas
pop
jno
xchg
gs
cmp
and
cmp
mov
mov
lret
pop
add
mov
xor
imul
xchg
push
cwtl
das
orl
mov
mov
pop
pop
cmpl
mov
fstpt
pop
xchg
and
cltd
inc
lret
loopne
pop
push
mov
in
jne
lock
sub
call
test
xchg
push
xchg
mov
inc
shlb
lret
push
movsb
sbb
cltd
stos
rcrl
sub
or
pop
iret
pop
jp
into
mul
lods
push
jbe
daa
ret
movsb
out
jae
inc
notb
pop
add
aas
addb
es
xor
cmp
sub
pop
mov
pop
popf
lods
xor
pop
hlt
mov
cmp
ljmp
or
test
mov
sbb
stc
andl
iret
push
mov
xchg
mov
cwtl
pop
sbb
fiadds
shl
fimull
sahf
dec
mov
mov
jbe
xor
dec
jbe
add
inc
lret
ficoml
outsl
mov
dec
jecxz
test
push
xchg
inc
pusha
das
jp
movb
pop
mov
pop
sub
and
cmpsb
adc
sbb
mov
jg
mov
into
aad
hlt
mov
lods
std
and
add
mov
add
mov
fimuls
pop
lock
leave
js
xchg
jns
test
xchg
outsb
jnp
shll
sti
out
cmpl
sub
cmp
data16
sub
shll
pop
rclb
call
dec
andl
sbb
addr16
in
aad
push
xor
nop
sbb
jnp
sbb
out
fwait
xchg
ss
adc
mov
mov
call
movsb
test
push
cmp
mov
add
xchg
gs
fsubs
fcmovu
in
lods
fbstp
sub
movsl
inc
mov
mov
leave
pop
sti
loopne
in
lahf
mov
push
imul
out
comiss
pop
pop
pusha
push
cli
mov
int3
inc
xchg
jmp
cmp
adc
sahf
xorl
aas
mov
and
aaa
xor
arpl
dec
enter
ret
sub
into
pop
or
lods
and
cltd
dec
fnsave
scas
adc
jl
sbb
pop
sub
and
icebp
mov
inc
mov
scas
out
stc
sbb
sub
lock
and
inc
rep
mov
je
and
adc
pop
sti
pop
pop
aas
hlt
sbb
testl
xchg
adc
ret
outsb
mov
inc
mov
notb
mov
mov
pop
add
push
scas
sub
push
out
ret
mov
push
push
pop
sub
rcr
cmp
or
ret
je
push
insl
sbb
shrl
popf
push
xor
push
popa
pop
in
xchg
sub
xor
dec
xchg
lcall
leave
popf
stos
jg
inc
testl
and
fisubs
add
aam
mov
xor
or
daa
daa
lock
cmc
mov
ficomps
inc
js
in
outsb
cli
pop
pop
call
pop
mov
fidivrl
push
pop
adc
adc
cmpsb
jmp
pop
sysenter
mov
out
fistl
cmp
cmc
push
into
mov
push
in
cmpb
mov
push
cmp
nop
int
sub
mov
out
das
xor
lock
push
fbld
cmc
or
hlt
pop
jge
xchg
std
pop
and
int
adc
cmp
push
clc
xor
add
imul
rcrb
jle
fmuls
icebp
addr16
mov
ret
jl
lahf
push
lods
lods
in
shrl
roll
push
or
adc
mov
mov
sbb
push
mov
sub
and
adc
out
fildll
fwait
push
xchg
sub
cmp
pop
and
lock
push
xchg
push
sbb
stc
push
addr16
test
stos
popf
inc
xlat
test
cmp
inc
xchg
insb
push
daa
push
mov
dec
pop
cmp
adc
jmp
mov
sti
in
lcall
punpckldq
xchg
mov
mov
or
rcr
dec
fmulp
stc
and
mov
cmp
fsts
js
and
add
mov
idivb
mov
xor
or
mov
xchg
aas
mov
pop
jp
loope
popf
cmpsl
and
inc
das
sub
xchg
pusha
xor
shrl
push
add
je
mov
scas
aas
push
add
lods
push
mov
rol
lahf
adc
xchg
or
pop
aam
xor
sar
lcall
hsubpd
into
rcrb
lahf
push
cwtl
repz
shl
insl
mov
inc
ds
pop
es
mov
arpl
aad
xor
fnstenv
cmp
mov
sub
xor
out
outsl
fwait
shlb
sti
dec
adc
cmpsb
inc
cmpsb
lcall
aad
dec
add
xchg
add
sbb
popf
jae
push
jecxz
int3
popf
and
dec
push
ja
dec
lahf
cmp
xchg
mov
xchg
sub
and
dec
mov
jne
add
in
and
pusha
das
inc
jle
jo
lods
das
popa
stc
jne
pop
and
lods
push
dec
sub
fidivs
into
xchg
sbb
and
pop
clc
inc
in
cmp
lods
adc
mov
imul
adc
aam
jns
int
cmp
adc
in
in
xchg
xchg
stos
and
in
out
jno
mov
daa
dec
sbb
xchg
test
xor
mov
add
addl
push
rorb
inc
imul
js
pop
and
jbe
sbb
xor
ljmp
sub
mov
je
cmp
repz
jbe
sbb
into
out
das
dec
and
push
push
and
lcall
pushf
mov
das
pusha
sbb
sbb
or
and
or
cld
sbb
mov
lock
bound
xchg
push
lds
rcrb
stos
mov
sbb
iret
daa
mov
scas
inc
mov
inc
shlb
push
push
pop
fbstp
sub
cmp
aas
xor
push
and
outsl
cmp
inc
mov
notl
jnp
aam
imul
pop
ljmp
push
pop
iret
out
bswap
mov
mov
cld
into
or
faddp
mov
and
es
jp
lds
push
sub
test
jle
inc
add
test
mov
lret
push
push
scas
push
adcl
mov
rclb
cld
out
jle
stc
aas
orl
dec
mov
adc
pop
or
and
mov
pop
sub
cmp
and
daa
cli
ljmp
dec
xchg
or
or
push
push
rcr
mov
push
sub
insb
out
in
dec
mov
lock
cmp
ret
dec
add
pop
add
adc
sti
and
lret
pop
cpuid
stos
dec
and
pop
mov
mov
lcall
fs
je
mov
jo
cs
js
push
push
mov
lds
pcmpgtw
stos
adc
xlat
add
pop
mov
leave
inc
pop
xchg
xchg
xor
add
jb
push
xchg
andl
jns
mov
jp
mov
xchg
ljmp
shrb
lock
stos
mov
pushf
adc
ret
shlb
or
pop
pop
jle
fdivrp
divb
das
and
inc
and
je
sahf
mov
sbb
inc
shrb
iret
cli
pop
int
es
outsb
cmpsb
cmp
test
jecxz
rolb
fwait
test
stos
ja
popf
jp
adc
test
out
or
and
cmpb
in
sbb
push
jmp
mov
mov
cmc
jp
leave
xchg
mov
sub
test
xchg
mov
and
jbe
daa
push
movsb
test
fsubs
adc
pop
es
or
fwait
cmp
pop
fimuls
push
imul
rol
jl
ja
stos
adc
push
lock
inc
jge
push
in
shl
jno
hlt
lods
push
ret
movsl
test
test
mov
out
or
cld
push
and
mov
mov
cmp
push
rol
int
imul
sbb
xchg
daa
movsl
mov
cld
xor
arpl
jne
add
fs
in
test
mov
and
fsub
dec
hlt
add
push
enter
mov
jbe
cltd
mov
or
lods
sub
shrl
outsl
scas
cmp
and
lods
insl
mov
leave
rorl
mov
rcrl
stc
pop
cmp
mov
ja
xchg
subb
in
sub
pop
ret
or
ret
inc
push
stc
pop
imul
mov
jnp
ret
add
jp
movsl
xchg
and
fnstsw
aaa
pop
xchg
push
mov
adc
dec
sbb
es
cld
les
imul
fwait
in
out
mov
jb
sar
inc
cli
mov
jge
cs
aad
and
gs
mov
int3
sti
and
jl
subl
xorl
inc
pop
in
ja
ss
jg
jge
aam
clc
mov
push
or
mov
stc
jl
push
add
push
mov
in
sbbl
push
aaa
test
ss
pop
popf
adc
imulb
std
aaa
mov
arpl
mov
movsl
xchg
adc
xchg
adc
daa
bswap
fidivl
or
pop
out
mov
sbb
xchg
sahf
push
sub
jle
mov
xchg
lea
push
xchg
out
in
movb
sbb
ret
in
das
inc
sbb
mov
adc
in
in
movsb
movsb
mov
sahf
xchg
movsb
mov
enter
bound
xchg
rorb
mov
ja
pushf
inc
movsb
and
cmp
and
scas
push
in
dec
in
and
cmp
test
arpl
mov
mov
mov
ds
cld
addr16
arpl
xchg
jmp
repnz
pushf
loope
ret
addr16
or
sub
dec
loop
add
fcmovnbe
in
mov
std
mov
sub
mov
inc
lret
inc
pop
mov
xchg
in
sahf
cmp
in
jae
stc
jle
icebp
cltd
push
sbb
bound
inc
push
xor
adc
or
mov
gs
lods
mov
into
int
mov
jnp
cs
mov
pop
sbb
ss
daa
inc
push
xor
and
scas
repz
jle
leave
jge
outsl
jns
ja
into
sbb
pop
or
ljmp
or
sub
addl
push
inc
leave
out
cli
loope
inc
add
xlat
fstl
iret
cmp
inc
and
jmp
fisubl
clc
rcr
or
ss
std
mov
adc
and
xor
push
mov
or
sbb
cmp
lds
int3
out
cmpsb
fcmovnbe
dec
push
and
movsl
cmpsl
inc
out
xchg
sub
pop
push
imul
into
mov
std
addr16
jno
pop
aad
add
add
add
aaa
sub
daa
js
jns
sub
mov
movsb
jno
pop
lcall
cmp
and
lds
les
imul
push
xchg
ret
jo
clc
xchg
popa
or
cmp
push
out
inc
fnstenv
sub
sbb
int3
rolb
xor
jp
test
jecxz
fsts
ljmp
sbb
push
pop
cmpsb
mov
outsb
and
mov
pop
xchg
fstpt
fsubl
jp
xchg
cld
addr16
in
call
pop
push
js
flds
pushf
scas
xor
stc
aad
jbe
xor
adc
mov
and
outsb
in
sbb
jo
jle
dec
or
push
jae
clc
add
out
enter
inc
aas
popa
outsb
inc
push
jbe
in
cmp
pop
xorb
jbe
add
inc
loop
xchg
mov
sarl
add
and
loop
repz
pop
lods
ret
std
pop
xor
xor
stos
mov
pop
cmp
sbb
stc
jl
pop
and
push
movsl
xlat
sub
push
mov
pop
pop
cmp
push
andb
cmp
fbstp
imul
xchg
and
cmp
xlat
lds
std
addr16
popf
loop
jecxz
addr16
stos
in
shrl
notl
add
mov
fwait
enter
stos
mov
jno
sbb
xor
cmp
xchg
movsb
rcrb
stos
mov
push
cmp
pop
lahf
mov
push
jecxz
add
repnz
cmp
mov
dec
pop
add
sbb
hlt
shll
jb
inc
andb
xor
js
lock
sahf
mov
dec
xchg
ljmp
xor
mov
sub
hlt
nop
mov
mov
push
stos
mov
adc
adc
xchg
and
xchg
pusha
fnstsw
dec
leave
imul
stos
mov
roll
imul
jb
add
fmull
xor
add
sub
or
adcb
cli
test
fisubs
inc
icebp
mov
lods
test
adc
mov
jns
pusha
mov
xorl
lret
push
sub
aam
push
fwait
xchg
dec
and
fucomip
xor
movsb
mov
jmp
or
xorl
notb
inc
arpl
sbb
popa
cmp
mov
ret
mov
sub
jmp
jns
les
les
and
sbb
sub
mov
push
icebp
mov
jbe
ret
and
xchg
lock
cmpsl
scas
push
andl
and
mov
inc
fwait
cmpsl
and
lea
subl
push
and
mov
pop
cmp
cli
cwtl
mov
push
pop
dec
jp
rcll
xorb
pop
jo
aam
cmp
add
pusha
mov
cmc
stos
push
inc
popa
and
rcll
push
int3
push
pop
mov
ja
push
xor
adc
repz
outsb
repz
mov
push
xlat
xchg
pushf
ljmp
ficompl
xor
imul
cmp
negl
jg
add
insl
sarl
mov
or
jne
jbe
aad
jg
dec
stos
sahf
or
mov
in
pop
jo
lret
pusha
pop
pop
sbb
fisubrl
push
sbb
hlt
dec
xchg
dec
inc
int
mov
lock
mov
xor
jg
test
loopne
jmp
out
lcall
stos
add
imul
test
fnsave
ss
pop
or
loop
and
enter
fisubrs
jecxz
mov
out
xor
in
mov
int3
cmpsl
in
mov
ret
mov
xchg
pop
adc
xchg
hlt
enter
hlt
inc
adc
js
xchg
xchg
loopne
hlt
add
xor
cmc
fwait
inc
dec
and
adcb
add
mov
sbb
lahf
cs
push
add
cmp
mov
xorl
jg
mov
hlt
mov
dec
pop
sub
stos
pop
jmp
cwtl
jbe
ds
dec
dec
outsl
jg
xchg
or
or
mov
cli
cmp
push
mov
faddl
in
in
sub
push
movsb
add
cmp
sub
out
xor
sub
mov
or
fucomip
push
push
movsb
push
push
add
lahf
adc
repz
jl
add
pusha
inc
pushf
cld
loop
or
mov
xchg
or
cli
push
xchg
or
push
int3
out
mov
xor
add
rol
sbb
stos
mov
mov
loope
mov
inc
test
and
and
mov
dec
ret
inc
loopne
cmpsb
add
lds
mov
xor
jae
mov
movsb
fmul
or
subl
leave
sub
dec
scas
ret
mov
subl
icebp
jl
out
mov
js
js
or
cltd
dec
xchg
pop
rolb
sub
xchg
and
cmc
imul
sbb
arpl
jne
popa
push
pop
xorb
adc
subl
movsb
mov
adc
stos
popf
dec
cmpsb
and
mov
and
dec
mov
mov
stc
in
icebp
adc
adc
rolb
clc
pop
push
push
push
jo
out
pop
mov
movsb
mov
leave
leave
loope
push
fsubl
mov
jns
rolb
ja
push
dec
repz
push
out
adc
sub
out
pop
dec
push
sbb
push
sbb
hlt
and
push
or
lcall
iret
dec
fwait
jns
cmp
into
or
cltd
adc
lret
ja
int
cld
and
cld
jg
xchg
sahf
out
cltd
repz
add
aam
push
jge
xchg
outsb
mov
cld
push
jmp
lret
pop
out
jb
mov
rol
sub
cmp
pushf
aad
and
mov
in
and
sti
fnstcw
jnp
movsl
dec
imul
ffreep
cmp
arpl
mov
adc
stos
and
dec
cmp
sub
rorl
cli
pop
pushf
fs
out
pop
lahf
and
adc
pop
shlb
pop
stos
jp
js
jg
mov
jne
dec
js
push
xchg
xor
lock
cs
rcll
xor
sbb
test
lock
pop
xchg
adc
data16
xor
aad
xchg
daa
inc
lret
xchg
xor
movsb
adc
div
loopne
cmovne
pop
adc
cmp
mov
out
pop
in
fisubl
pushf
jge
sbb
jnp
inc
add
cmp
into
sarl
sarl
inc
xor
push
mov
mov
push
repnz
pop
iret
jmp
jmp
jge
cmp
jae
mov
jmp
sbb
or
pop
and
repnz
loop
in
stos
push
push
cs
push
pop
lret
movsl
mov
pop
insl
xchg
mov
out
outsb
mov
movsl
test
stc
mov
in
mov
add
ficoml
cmp
pop
ficomps
pop
pop
mov
cwtl
sar
dec
fbld
sbb
jp
mov
loop
pop
mov
xor
or
ret
mov
mov
mov
inc
pop
imul
inc
idiv
add
lret
shl
inc
jle
adc
or
clc
jecxz
shrb
in
pop
fldcw
add
sbb
push
xlat
jbe
mov
push
roll
movsb
sub
add
and
mov
cltd
pop
mov
loop
jmp
pop
es
psadbw
cwtl
iret
mov
push
imul
inc
das
out
rcll
repnz
mov
mov
inc
cmp
add
sbb
sbb
into
lock
out
shlb
in
les
sbb
push
mov
or
outsb
mov
in
insb
fstps
inc
not
jne
mov
jmp
lock
jmp
adc
inc
aas
hlt
imul
push
test
daa
mov
call
stc
in
sub
jne
fmuls
scas
or
loopne
mov
xor
push
subb
mov
test
mov
add
lret
mov
jge
sub
icebp
sbb
stc
jle
xor
jecxz
je
mov
insl
ret
add
loope
jmp
cs
push
jb
sub
daa
pop
mov
int3
bound
adc
sbb
repz
ljmp
xor
jmp
fwait
mov
test
push
ja,pn
pop
or
data16
xlat
and
sbb
mov
xchg
mov
jle
fwait
addl
add
fnsave
outsb
push
sti
bound
stc
pop
or
mov
rcll
in
push
sti
insl
inc
aam
dec
push
cmp
fistl
ds
jns
lret
repz
das
mov
xor
sahf
pop
imul
add
and
mov
pushf
add
mov
xor
lret
inc
mov
jae
ljmp
jmp
add
fsubs
je
add
sub
popa
fistpll
ficoms
mov
or
stc
insb
inc
mov
pop
dec
lods
repz
xchg
in
stos
nop
xchg
sbb
scas
xchg
ljmp
pop
xor
nop
frstor
sub
int
mov
xchg
enter
out
and
je
mov
or
adcl
push
movsl
pop
mov
clc
xchg
lock
cmp
das
loope
push
lods
cwtl
stos
stos
dec
pop
and
jle
jae
pop
inc
das
aad
cmc
sub
stos
out
sbb
sbb
or
xchg
mov
pop
xchg
sub
mov
push
loope
dec
sub
jnp,pt
imul
mov
jle
js
test
adc
mov
scas
bound
inc
pop
jo
xor
outsl
fdivs
pop
iret
pop
fstl
and
sarb
leave
les
jmp
call
mov
sub
sbb
stc
inc
lds
aas
insl
repnz
pop
rorb
imul
xchg
push
cmpl
inc
mov
and
js
inc
adc
jns
xchg
fcomip
repnz
adc
sub
dec
ret
dec
lret
int3
cmp
mov
ret
fsubl
dec
popf
push
fs
aam
jns
mov
icebp
mov
lods
push
ljmp
fcomi
and
mov
lahf
xchg
cmpsb
ds
ss
or
add
scas
jnp
mov
jne
mov
or
add
insl
les
je,pt
add
cmp
and
sub
mov
pop
xor
test
push
and
fwait
mov
jl
dec
mov
mov
pop
adc
xchg
fdivrl
nop
push
mov
movsb
dec
mov
sub
stos
out
adc
lahf
js
sub
or
cmc
push
mov
xchg
in
daa
out
push
pop
adc
push
scas
inc
cwtl
aas
push
jb
test
test
movsl
stos
push
gs
push
clc
bound
pop
pushf
aam
imulb
std
ja
lcall
sbb
icebp
enter
ret
pop
stos
or
andb
dec
sarl
int
or
pop
in
and
insb
jb
cmp
fwait
outsb
pop
add
cmp
adc
daa
xchg
mov
push
mov
and
xchg
movsb
fsubp
gs
or
loopne
xchg
movsl
test
jg
push
sti
fwait
dec
xor
sub
addr16
xor
mov
ds
sub
lods
sub
imul
lret
xchg
xor
lret
add
sbb
ret
nop
sahf
fwait
dec
inc
lahf
dec
jae
stos
cmp
das
cmp
rol
repnz
aas
inc
data16
insl
dec
lods
outsb
mov
sbb
jg
fcmovne
inc
jp
leave
loopne
mov
and
out
cmp
cld
popf
lret
add
inc
pushf
mov
push
iret
ss
fiaddl
and
in
or
dec
rolb
sub
dec
sbb
stos
mov
test
mov
cwtl
sbb
xor
dec
add
fwait
mov
fsubl
bound
adc
out
and
jns
jecxz
push
mov
mov
push
push
xor
cli
loop
mov
and
insl
push
jge
scas
add
in
pop
cmpsb
gs
pushf
cmp
add
dec
cmp
cmp
fwait
sbb
push
loope
das
shll
sub
sub
push
stos
dec
and
mov
pusha
jmp
test
sbb
inc
mov
mov
add
adc
prefetch
xchg
mov
sbb
shrl
shrl
stos
dec
dec
les
mov
jbe
push
mov
adc
pop
or
push
xor
jno
es
stc
or
push
xchg
add
inc
dec
jb
rclb
icebp
push
add
push
push
pop
mov
inc
jge
enter
adc
pop
ds
dec
bound
push
mov
orl
xor
in
fidivrl
enter
test
lea
or
mov
fcmovbe
xor
cmp
push
andl
aad
push
in
fwait
or
scas
adc
pop
orl
sub
mov
mov
ds
jle
push
mov
adc
aas
xor
pop
movsl
push
cltd
jbe
pop
out
xor
mov
lock
repnz
int
sub
add
pop
mov
inc
orb
cmp
dec
xor
and
mov
outsl
jmp
inc
daa
loop
loope
mov
push
xchg
xor
or
into
out
and
pop
outsl
pop
xor
popa
scas
dec
lret
cmp
push
aad
push
sti
adc
mov
mov
mov
mov
fidivl
xchg
add
or
or
push
mov
push
push
cmp
lock
inc
push
inc
jge
mov
push
push
push
ja
cmpsb
outsb
test
inc
push
push
lods
arpl
mov
xor
mov
in
jae
das
dec
jb
push
pop
mov
xor
pop
movsb
lret
add
dec
imul
cmp
mov
and
bound
sahf
lss
inc
rorb
mov
aaa
shlb
mov
and
decl
push
into
adcl
cmp
incb
push
out
xchg
out
daa
or
jg
sbb
xor
xchg
sbb
adc
add
mov
xchg
rol
popf
mov
in
adc
out
out
lret
dec
sub
call
add
sub
cmp
mov
out
dec
mov
mov
pmullw
dec
sbb
in
aaa
leave
cltd
pop
mov
sbb
mov
outsb
add
jns
sub
cwtl
test
test
pop
aas
popf
in
sbb
fiaddl
repnz
or
andb
inc
pop
mov
test
xrelease
pop
add
rcl
fwait
outsl
xchg
addr16
cmp
jne
cmp
jle
xor
pop
mov
xlat
dec
gs
push
sbbl
jmp
inc
add
add
dec
cmp
dec
push
sti
stos
test
jb
pop
sbb
jo
inc
adcl
xchg
shl
push
outsl
les
mov
out
mov
inc
push
adc
lods
jbe,pn
lret
daa
ret
xchg
aam
arpl
inc
adc
mov
push
cmp
xchg
jns
push
iret
mov
xchg
sub
sti
adc
and
cld
ds
lret
mov
lods
dec
jle
adc
std
mov
ror
or
sbb
add
pop
popa
test
jne
pop
inc
sub
pop
push
mov
rcrb
or
xchg
leave
jmp
out
and
daa
sbb
push
pop
dec
cmp
lahf
jo
inc
sbb
ss
imul
add
roll
sub
xchg
and
mov
or
cli
xchg
popf
mov
call
mov
pop
repnz
iret
push
mov
jmp
push
inc
mov
incb
xchg
mov
cmpsb
push
pop
pop
add
push
push
stos
out
and
outsl
push
lret
cmp
jnp
cmc
iret
xchg
aaa
sub
int3
fmuls
xchg
out
adc
mov
test
push
dec
pop
imul
imul
stos
xchg
out
sbb
jmp
nop
xor
inc
mov
ret
xchg
or
mov
mov
pop
push
and
ret
mov
fmuls
inc
add
adcl
pop
add
popa
inc
and
cmp
movsl
lds
cmp
sbbb
pop
adc
sbb
lods
mov
mov
and
mov
fwait
jns
push
ret
xchg
loop
jne
ret
mov
shr
push
jge
push
push
adcl
push
repz
jle
imul
add
mov
xor
xor
in
cmp
lock
aaa
adc
cmpsb
arpl
test
sbb
mov
lret
or
sub
adc
push
dec
xchg
ffree
clc
ss
lret
pop
subb
loope
imul
cwtl
in
clc
shl
rcr
adc
ret
daa
mov
inc
in
daa
or
add
jne
sub
js
xor
in
push
gs
xchg
ret
cmp
and
insl
les
lcall
pop
add
lahf
jne
aad
fdivs
popa
push
add
fwait
aad
stos
xor
aas
js
js
push
inc
inc
mov
push
inc
nop
pusha
jnp
icebp
fidivl
arpl
adc
mov
js
cmp
dec
imul
sub
cmp
out
aas
cmp
pop
sbb
psubd
test
sbb
test
cmp
lea
push
repnz
shl
dec
xor
dec
fdivl
lahf
jo
dec
push
pop
repnz
push
cmpsb
mov
xor
clc
push
out
lds
scas
scas
pop
leave
pop
and
cmp
aam
lock
adcl
sub
xor
test
adc
xchg
xorl
imul
xchg
aas
cmc
into
addr16
jecxz
push
fs
push
or
xchg
jne
mov
adc
in
dec
mov
and
ljmp
inc
dec
lcall
xor
cmp
nop
sub
idiv
pop
jecxz
or
push
push
repz
pop
call
jnp
sub
lods
or
xchg
test
sti
jecxz
adc
aam
gs
es
jl
rcr
in
mov
jg
and
push
inc
jns
scas
jp
mov
dec
push
jg
ret
ljmp
mov
jo
fsubs
pop
and
jnp
sbb
cwtl
cmc
les
addr16
std
sbb
mov
rcrb
fs
or
sbbl
lcall
adc
or
and
jmp
dec
test
data16
scas
repnz
and
xorl
faddl
or
pop
add
test
jecxz
mov
mov
pop
mov
nop
add
ficoml
and
idivl
jecxz
mov
popf
mov
cmc
lock
ret
scas
xchg
add
lock
shll
out
loopne
cli
lds
ja
sub
cmpsl
push
ficomps
add
jge
push
cwtl
clc
mov
rcrl
sahf
add
cmp
push
pop
lds
sbb
stos
adc
xor
push
or
or
xchg
shr
and
aad
jl
cmp
jnp
gs
pop
dec
mov
lock
mov
cmc
stc
in
fsubrs
mov
fnsave
aam
inc
movb
jg
sbb
and
das
xchg
movsb
adc
mov
mov
arpl
daa
xchg
and
inc
pop
inc
xor
jle
jmp
lds
or
sti
and
fildll
nop
fsubr
mov
movb
jae
fs
xlat
xor
and
adc
call
jns
aam
xor
stos
out
ss
jp
ret
push
adc
inc
rcrb
dec
xor
popf
sub
popf
into
popf
sti
lcall
adc
and
pop
pop
mov
dec
ret
adcl
testb
lahf
fwait
mov
fists
inc
call
outsl
scas
mov
pop
mov
xorl
arpl
jge
rclb
mov
addr16
lahf
xchg
push
insb
add
mov
push
fwait
and
sahf
pop
call
mov
cltd
push
pop
cs
lcall
push
mov
jge
xor
nop
bsf
popf
cmp
xchg
and
push
sub
mov
pop
xor
pop
pop
jp
movsb
inc
push
mov
cs
push
arpl
mov
std
rorb
test
jb
push
lcall
data16
dec
iret
test
rorl
cli
shl
xor
and
push
push
push
pop
int3
pop
pushf
sbb
and
dec
nop
or
in
arpl
in
push
and
je
xchg
mov
xchg
cmc
jp
or
mov
std
mov
pop
ret
inc
ss
mov
stc
or
out
repnz
jbe
clc
call
dec
cld
inc
dec
mov
add
xor
or
dec
mov
in
rorl
aas
out
int3
lock
orl
jmp
test
mov
dec
push
jb
jp
pop
in
int3
pop
lcall
mov
hlt
and
mov
inc
dec
js
pop
mov
std
arpl
jge
mov
mov
andl
fildll
in
mov
jmp
mov
jecxz
push
xchg
xor
pop
sub
sub
jb
adc
push
mov
subl
lods
jge,pn
xlat
mov
pop
ret
lcall
les
and
add
shr
sarb
or
xchg
sub
sbb
inc
and
test
push
dec
and
lods
jne
rorl
push
out
fsubr
add
push
mov
mov
mov
push
sbb
out
andb
fimull
gs
mov
shll
mov
mov
mov
add
fcomp
add
insb
jle
fists
jl
pop
push
cld
test
aad
enter
push
pusha
mov
loope
jmp
std
es
imul
cmc
movsl
lock
inc
xor
adc
jnp
mov
pop
fisubrl
push
sub
mov
add
mov
mov
dec
push
pop
out
sub
bound
dec
pusha
cmpsl
cmc
daa
repnz
xchg
cmp
pop
int
dec
pop
xlat
pop
push
leave
inc
bound
adc
rorl
pop
jns
arpl
xchg
sti
inc
cmpsl
add
loop
mov
push
out
add
cli
add
mov
push
jg
ljmp
sbb
inc
out
fs
jmp
mov
pusha
mov
aam
inc
fldcw
mov
rolb
call
sbb
test
or
or
test
push
movsl
mov
cs
push
divl
mov
mov
mov
ss
inc
add
imul
xchg
sub
mulb
scas
cmp
push
gs
out
mov
cmc
icebp
jae
pop
mov
and
loopne
int3
xchg
inc
lods
insl
mov
xor
out
andl
cltd
mov
xor
fisttps
jmp
aam
adc
mov
popf
int
pop
dec
inc
inc
in
jge
pxor
jnp
icebp
out
insl
mov
stos
mov
mov
sbb
jno
sbb
loop
mov
or
push
xor
sbbb
mov
aaa
rolb
and
xor
mov
jno
push
xor
data16
stc
out
addr16
cli
fadds
add
mov
gs
clc
add
sti
sub
inc
shrb
cmpsb
pop
test
push
sub
orb
insl
lock
xchg
adc
jmp
lret
adc
or
je
imul
pushl
inc
sti
mov
std
fisttps
hlt
pop
or
stos
dec
or
xchg
mov
cltd
cmp
xchg
int
mov
push
mov
xchg
xor
popf
leave
dec
loop
stos
leave
xchg
out
ds
sbb
outsl
stos
sub
sub
mov
shrb
and
sub
sbb
add
cs
fld
fwait
push
outsl
xor
dec
inc
dec
stc
es
xor
jl
call
aam
sahf
lock
fbstp
inc
jp
clc
mov
add
lret
xor
add
out
loope
sbb
mov
test
fsub
inc
fcoms
fisttpll
scas
xchg
les
incl
cld
sbb
lock
sub
sub
cmc
jo
dec
xchg
loopne
sti
jnp
popa
js
jae
mov
sub
xor
xchg
or
mov
cmp
out
decl
adcl
aaa
icebp
fbstp
arpl
adc
add
orb
adc
adc
mov
add
mov
cmc
and
mov
lcall
mov
daa
arpl
adc
mov
lcall
outsb
insb
clc
pop
jp
clc
mov
lret
test
sarl
fstpl
je
stos
out
ds
inc
ss
xchg
std
lods
push
jmp
fstpt
repz
lgs
addb
inc
push
repz
call
mov
jbe
inc
adc
dec
xor
cmc
sbb
fs
lret
jmp
insl
pop
ja
xchg
insb
scas
out
add
in
dec
stos
test
mov
xor
nop
dec
or
jo
inc
orb
xor
fists
imul
adc
cmp
push
rorb
jmp
jns
jp
push
jne
outsl
cmp
movups
cmovns
sub
adc
fs
sub
mov
mov
mov
rcrb
mov
jns
iret
fdivrs
pop
mov
sbb
jne
lods
gs
mov
jae
cli
and
mov
ret
add
mov
int3
cltd
adc
mov
fucompp
xchg
add
outsb
imul
and
test
mov
cmp
jecxz
xlat
mov
cmp
pop
rcll
cmpsb
aad
push
mov
cs
mov
sub
stos
pop
sub
aam
push
xchg
mov
dec
mov
call
and
fnstenv
mov
stos
mov
jmp
mov
push
scas
ret
fwait
pop
test
ret
repz
add
mov
mov
jge
mov
push
lods
add
mov
lret
push
push
ret
adc
test
ret
lahf
pop
xor
or
cmp
mov
xchg
cmp
jns
into
nop
daa
mov
cmp
cmp
stos
dec
jb
mov
pop
adcb
push
sbb
jp,pt
dec
xor
lds
enter
popf
xor
cld
mov
cmp
das
movsb
and
clc
aam
daa
mov
jp
sub
jp
push
and
test
inc
cmp
insl
cmc
rcrl
sub
or
jns
cmp
mov
ljmp
xlat
dec
jg
push
xchg
pop
and
jmp
adc
or
fbstp
pop
mov
mov
fadd
push
cmpb
jno
roll
loopne
jl
lcall
jle
rcl
xor
mov
pop
fwait
sbb
stc
arpl
sub
or
cltd
in
or
sub
jl
sbb
adc
ljmp
aas
dec
dec
loop
cld
and
adc
jmp
dec
add
inc
sahf
cmpsl
sub
sbbl
icebp
push
xchg
int
lcall
out
jg
jo
sub
outsl
push
ss
adc
cmpsb
pop
pop
sbb
jo
mov
or
and
nop
subl
sub
and
jb
adc
cvtps2pd
sub
push
jle
imul
pop
xor
sub
sbb
popf
stos
cmp
inc
inc
mov
adc
arpl
mov
dec
jbe
iret
xor
das
pop
aas
popa
push
mov
subl
icebp
sbb
adcb
sbb
ficoms
inc
mov
mov
cmp
test
call
push
pop
call
xchg
movsl
dec
sbb
frndint
lahf
mov
xchg
cwtl
pushf
lods
adc
mov
loopne
xor
sub
add
mov
call
mov
ja
or
movsb
test
int3
stc
pop
xchg
push
rorl
fcoms
testb
push
xlat
fisubl
frstor
pop
push
mul
stos
push
cmp
lds
add
sti
sub
in
xchg
jge
sarb
cwtl
jge
mov
dec
fs
adc
leave
insl
mov
lea
adc
xor
test
movb
std
xchg
jmp
negb
mov
jmp
and
cli
mov
and
std
add
cld
outsb
ret
add
mov
jae
adc
lods
mov
adcl
movsb
xchg
pop
add
out
xor
dec
push
and
xor
je,pt
rolb
movsl
in
jge
pop
and
mov
xchg
mov
xor
inc
mov
out
or
push
aas
out
xorl
data16
xor
xchg
xor
loop
adc
sti
in
push
das
jmp
jns
lods
and
test
in
or
fcomps
cmp
cmp
sbbb
or
mov
lret
pop
outsl
movsl
loop
or
das
pop
repz
sti
je
push
ds
fwait
stos
pusha
lds
sub
in
mov
mov
cli
lods
ds
cmp
movsl
mov
cmp
mov
lea
and
stos
fwait
out
sub
xchg
cmc
jae
xor
sbb
test
sbb
adc
lods
jb
sti
sbb
lds
cmpl
xchg
aaa
int
std
fimuls
xor
cwtl
ret
or
adc
cmpsl
cltd
lret
aad
pop
in
mov
xor
into
add
ja
add
sbb
cmp
leave
adc
mov
test
gs
js
lods
in
mov
imul
mov
leave
jnp
ret
cld
dec
mov
out
push
push
xchg
fs
sahf
imul
andl
cmpsl
lahf
adc
enter
decl
adc
push
je
pop
xor
push
lds
fildll
lock
xchg
xchg
out
push
movsl
movsl
dec
cmp
and
cwtl
xchg
fs
jo
repnz
add
stos
adc
es
mov
stos
pop
xchg
xchg
flds
ret
out
push
xchg
xor
xor
mov
pop
sub
push
push
xor
outsb
in
es
xor
pop
mov
and
sbb
shrb
push
out
push
mov
call
mov
mov
push
cwtl
inc
mov
mov
sub
ret
or
add
sti
jae
loope
repz
lret
push
mov
jne
push
push
imul
pop
mov
divb
jno
push
shlb
cmp
jg
fistpl
ljmp
lahf
pop
mov
stos
popf
in
pop
lock
stos
aaa
enter
and
ret
push
xor
fldlg2
sub
inc
pop
mov
hlt
mov
sub
cli
mov
cmpsl
mov
enter
addr16
fld
push
lock
imul
sbb
es
jle
inc
mov
fmuls
push
mov
shll
fistpll
das
xor
fisubs
mov
add
mov
cmc
mov
sub
das
arpl
mov
jae
add
lret
hlt
movsl
lds
fcmovnu
or
sub
daa
pop
cs
lods
kandw
sbb
cmpsl
repnz
je,pn
jge
sarl
adc
js
cmp
jno
outsl
mov
xlat
xchg
mov
xchg
xchg
dec
outsb
xchg
pushf
sahf
addr16
ljmp
std
mov
push
and
call
adc
das
icebp
mov
cmc
pop
dec
enter
mov
lods
inc
push
and
in
das
mov
lret
jp
pop
push
out
sbb
popf
mov
inc
inc
inc
icebp
call
or
add
push
xchg
mov
adc
jge
aas
or
adc
xchg
bnd
inc
es
or
jns
lock
out
pop
pop
mov
add
loop
cmp
inc
or
mov
pop
sub
outsl
je
in
iret
xchg
dec
lcall
dec
pusha
mov
xchg
cmp
js
cs
rcrl
leave
xor
loope
inc
cmp
add
pop
add
divl
cwtl
push
push
pop
cmp
aas
sbb
outsl
push
cmpsl
mov
loop
add
insl
xchg
jg
mov
adc
or
pop
mov
inc
sarl
xchg
leave
hlt
outsb
jne
lret
dec
popa
sbb
out
stos
cld
push
fisttps
cmp
stc
add
setge
push
mov
xchg
insb
cmpsb
pushf
inc
jecxz
out
fs
mov
sbb
and
lcall
or
int3
lcall
pop
jmp
popa
les
jae
push
and
mov
jecxz
dec
int
inc
in
inc
lods
rcr
loopne
fsubrs
popf
and
jno
cmp
std
jge
pusha
inc
loopne
sbb
outsl
mov
rclb
jbe
std
and
mov
jo
enter
subb
xchg
mov
pop
divb
in
fcmovu
lcall
shlb
testb
sahf
mov
mov
jecxz
jecxz
mov
data16
sbb
fimuls
je
outsb
push
mov
in
mov
xor
loop
ss
add
int3
fnsave
int
dec
xorl
loop
mov
inc
dec
stos
jge
movl
sub
add
xchg
push
or
notl
sbb
and
test
aaa
mov
rorb
test
mov
dec
cmp
leave
xor
sub
fimull
dec
and
pop
mov
jmp
out
xchg
pop
addb
std
insb
or
jnp
mov
pop
orb
push
outsb
leave
mov
sbb
mov
xor
jne
or
xchg
xchg
jge
sbb
repz
loopne
inc
or
mov
je
shll
push
xchg
test
pop
mov
mov
lods
mov
mov
ja
and
iret
jo
es
adc
mov
cld
out
loope
loope
les
jl
sub
sub
imul
mov
dec
push
mov
pop
fidivrs
xchg
fidivs
fistl
daa
sbb
mov
cmp
inc
scas
inc
xchg
jo
mov
sahf
inc
adc
mov
push
adc
leave
inc
jl
sbb
sub
ret
pop
subb
insb
jno
pop
mov
dec
pop
xor
decb
inc
cwtl
cmc
xlat
pop
das
adcl
pop
jo
icebp
das
add
and
into
and
jae
push
outsl
cmpsl
jne
push
push
fildll
xor
cltd
loope
pusha
fsubp
xor
pop
shr
add
xor
icebp
repnz
dec
dec
xchg
mov
outsl
loop
test
adc
outsl
and
xor
and
fs
movsl
jbe
shlb
ljmp
push
sub
add
fbstp
push
test
out
adcb
movsl
movsl
pop
hlt
out
push
iret
lea
pop
into
out
inc
mov
cmp
loop
jae
mov
fcomps
push
or
mov
hlt
movsl
mov
mov
xchg
cmpsl
popa
pop
vpshld
or
js
dec
in
dec
movsb
pop
push
push
rolb
movsl
loop
loop
les
push
sub
xor
sub
mov
cmp
add
push
xchg
cmp
das
orb
push
cmp
pushf
pop
movsb
ret
scas
and
test
dec
dec
jg
test
or
lods
scas
mov
cmp
xchg
fwait
pop
inc
fcmovb
inc
addr16
xchg
mov
in
cld
pop
mov
mov
hlt
mov
add
ljmp
roll
add
lods
jae
fwait
jae
fcoms
and
jmp
aam
mov
decl
jecxz
pop
sub
fimull
sbb
cli
xorl
xor
jbe
mov
sbb
lahf
dec
scas
xchg
das
mov
add
pop
aas
push
and
mov
push
fs
add
hlt
mov
repz
out
jp
pop
lcall
add
jmp
pop
in
out
cmp
je
and
sti
lahf
pop
mulb
out
jae
jns
or
inc
cwtl
pop
cmp
xchg
adc
sarl
xor
jne
test
cmp
enter
adc
cltd
and
repz
pop
rcl
pushf
mov
lcall
imul
cmp
cli
out
push
adcb
pop
pop
push
or
enter
dec
out
fsubrs
add
imul
ds
push
pop
push
adc
cli
js
jl,pt
data16
adc
lock
add
imul
in
enter
mov
mulb
icebp
xlat
fwait
je
popf
loop
leave
in
mov
add
scas
sub
jge
sbb
mov
sbb
sbb
pop
or
aaa
ja
outsl
add
lret
std
or
movsb
push
ret
lock
test
add
shl
adc
imul
pop
sarl
or
cmp
lds
mov
ss
xor
arpl
outsl
xchg
pop
xchg
pop
xchg
mov
ja
or
xchg
xchg
movsl
cmp
fmuls
dec
or
pusha
stc
cmp
fwait
jne
testb
cmp
jl
or
mov
xor
and
fs
or
cs
sub
jp
jp
call
pop
inc
xchg
jp
lods
hlt
xor
cmp
das
jp
shlb
push
shll
jecxz
movb
adc
push
sahf
adc
jnp
icebp
mov
test
inc
rcrb
push
add
and
cmpsb
in
into
loop
in
sbb
dec
mov
sbb
jmp
xchg
cmc
dec
cwtl
pop
jno
xchg
dec
clc
cmp
psubusw
faddl
outsb
push
mov
add
mov
pop
test
in
mov
fwait
xor
out
dec
dec
js
dec
out
adc
iret
nop
sbb
mov
popa
and
and
mov
fisubs
and
loopne
test
cmpsb
iret
scas
cmp
stos
lods
sub
test
mov
outsb
mov
sarb
jns
insl
mov
jl
pop
jo
rorb
mov
add
jge
imul
push
imul
adc
dec
mov
insl
imul
out
sub
fldenv
ret
mov
insl
stc
jo
push
mov
adc
adc
mov
and
rcrl
int3
adc
push
int
pop
repnz
shrl
leave
out
fidivl
repz
bound
scas
lea
addb
sub
mov
inc
jno
xor
out
mov
adc
stc
jo
das
js
lret
pop
movsl
inc
mov
aad
fsts
push
xor
xchg
mov
scas
sti
push
push
sbb
ss
jle
or
xor
out
es
in
movsb
lret
fwait
xchg
outsb
push
mov
pop
aam
or
stos
adc
insb
in
adc
cmp
add
xchg
repnz
imul
mov
cmpsl
out
dec
mov
mov
lods
das
sub
mov
xor
add
or
cwtl
dec
jl
mov
jae
outsl
mov
lock
adc
jnp
adc
pop
xor
movsb
cmp
jp
mov
push
push
push
jp
dec
cmp
jl
pop
mov
js
fldcw
inc
or
pop
xchg
or
sarl
add
scas
hlt
out
push
fcmovbe
push
sub
arpl
cmp
xor
sbb
push
xchg
cld
sbb
cltd
dec
addr16
frstor
lcall
rclb
je
lea
imul
roll
out
out
pop
pop
add
inc
aam
in
mov
or
std
dec
mov
in
push
icebp
in
adc
mov
xchg
fnstenv
nop
mov
insb
dec
mov
pop
pop
arpl
mov
cltd
fucomp
and
popl
sbb
shl
pop
shrb
or
cmp
shll
test
cmp
add
lahf
outsl
pop
cli
push
pop
fnstenv
xor
mov
insl
out
fdivs
imul
inc
jg
clc
outsb
insb
sub
je
xor
mov
mov
imul
lea
dec
lret
scas
es
inc
cmpsl
mov
mov
adc
test
scas
dec
fucomip
dec
push
pop
subl
lea
inc
sbb
xchg
les
insb
push
push
pop
cmp
out
outsb
cld
cmc
push
jl
mov
sbb
cmc
sbb
in
adc
shl
inc
ja
movsb
pop
in
push
cld
xor
pop
mov
insl
movsl
negb
sbb
jne
push
and
dec
xchg
jno
mov
pop
icebp
cmp
or
popf
shrb
fsts
or
arpl
mov
ret
idivl
mov
test
push
rclb
sti
das
jl
or
jp
push
mov
mov
out
repnz
push
xor
lret
pushf
and
test
movsb
xchg
ret
lock
dec
mov
test
imul
mov
cli
rcrb
add
mov
hlt
in
and
xlat
fs
pop
shlb
sub
lods
sub
xor
inc
fwait
sti
inc
in
pop
scas
pop
jns
xor
std
xchg
cmp
aad
xor
jge
xor
jmp
les
shl
sub
out
jae
ret
add
loope
decb
insl
xlat
fnsave
push
inc
popa
mov
popa
repnz
push
dec
mov
iret
lds
xchg
dec
sbb
outsb
lcall
push
dec
mov
sar
cwtl
adc
daa
std
in
mov
pop
mov
push
stos
cmpsl
pop
adcl
or
mov
out
adc
pusha
xchg
cmovae
sub
pop
insl
popf
mov
jmp
lods
iret
repnz
mov
decb
fistps
aam
aam
in
sbb
ja
push
pop
dec
xor
pop
mov
enter
or
jb
xor
pop
or
push
sub
inc
stos
lret
adc
or
mov
mov
in
roll
mov
jno
cltd
adc
mov
mov
sbb
fcomi
aad
dec
xchg
aaa
xchg
lcall
and
mov
imul
dec
into
lahf
sbb
lahf
xor
mov
adcb
push
bound
ficoms
fcomps
iret
jo
fxch
mov
push
sub
sbb
and
jg
cs
add
ljmp
push
or
sub
ret
jl
or
sbb
insb
divb
or
ds
pop
adc
into
inc
or
push
stc
hlt
inc
add
xor
cmp
jnp
jle
shr
sti
sub
lock
mov
test
in
xchg
imul
scas
or
in
jecxz
lods
cmp
add
lret
test
xchg
sahf
loope
lret
push
cmp
xbegin
in
mov
ja
inc
mov
daa
jne
dec
repnz
mov
mov
push
das
fbstp
sub
loop
mov
sti
mov
sbb
xchg
jecxz
fcoms
in
push
jne
out
imul
jnp
arpl
add
stc
cmp
fwait
ret
mov
ret
je
ret
shrl
cmp
outsb
dec
cmp
or
mov
cltd
xchg
sub
mov
jnp
in
jp
int
xchg
xor
cmpsl
mov
or
jmp
in
inc
cmpsb
das
ljmp
sbb
jnp
lret
cmp
fisubl
sbb
xorb
sub
fwait
iret
outsb
lcall
dec
ficoms
incl
repnz
xchg
lcall
icebp
push
mov
add
xchg
push
ja
mov
adc
nop
sbb
fstps
test
mov
cmpb
pop
adc
dec
mov
mov
push
xchg
pop
stc
push
sub
mov
shufps
pushl
fadds
jge
int3
or
inc
sbb
movsl
inc
js
push
sbbl
push
mov
sti
pop
movsb
or
lea
inc
cmp
cmpsl
adc
cli
vpaddusb
xchg
jb
push
and
movsl
jecxz
pop
mov
in
dec
addr16
sahf
fnstsw
aas
mulb
push
loopne
ss
sbb
and
loop
inc
push
jns
mulb
or
lret
adc
sti
pushf
rol
mov
mov
cmpsb
or
adc
leave
push
js
push
aas
invd
jp
mov
cmpsl
or
daa
gs
scas
cmp
add
iret
fidivl
mov
xchg
cmpsl
push
rorb
lods
inc
cmp
adc
imul
andl
mov
sub
jl
and
jge
mov
sti
lret
and
insl
sub
xchg
ret
add
ja
dec
mov
cs
add
insl
scas
and
mov
push
dec
mov
fnsave
or
js
xchg
enter
push
aad
mov
test
or
out
push
jnp
cmpb
sbb
inc
movl
mov
xchg
movsb
out
sbb
add
or
fistpll
enter
mov
xchg
mov
testb
bound
nop
or
in
loop
dec
add
cld
or
sbb
sbb
mov
xchg
cmp
and
fildll
jb
adc
ja
mov
popf
pop
sti
lock
fadds
in
lcall
and
lods
test
sub
test
decl
cli
xlat
inc
std
scas
stc
outsl
push
mov
inc
repnz
jp
xchg
sbb
add
lods
fcomi
cmp
adc
xchg
jo
and
jbe
cmc
adc
sbb
int3
std
pop
stos
jge
jge
xor
mov
out
and
mov
insb
aaa
pop
add
nop
mov
sti
ja
cwtl
popf
hlt
push
xchg
sub
cmp
mov
jo
out
arpl
jb
add
rcl
jo
jae
push
pavgb
lods
cmc
xor
push
pop
lcall
ret
ficoms
cltd
push
add
lock
and
imulb
aad
into
and
loop
mov
rorl
inc
mov
xor
aam
clc
jns
cs
mov
mov
jne
es
out
imul
pop
pop
mov
icebp
jmp
add
mov
gs
push
mov
es
stc
popa
cmpsb
mov
xchg
stc
xor
in
jle
or
fisubrl
dec
aad
icebp
clc
pushf
xor
clc
or
xchg
scas
xchg
jns
adc
rclb
mov
out
inc
push
jg
pusha
enter
or
cmp
bound
dec
mov
jns
xchg
sbb
cmp
xchg
je
push
push
add
pop
xorl
je
fsubl
sbb
inc
repz
add
outsl
int3
mov
mov
mov
lea
xor
das
ljmp
movsl
add
xchg
repz
sbb
xchg
cwtl
dec
pusha
out
mov
loope
jne
bnd
mov
out
aad
mov
loope
pop
jns
outsl
dec
aam
push
xor
lock
mov
ss
pop
dec
sti
loope
pop
add
aad
outsl
mov
lret
shll
cmp
mov
sbb
and
lahf
jle
lock
push
xchg
adc
or
dec
and
leave
inc
pop
inc
es
bound
aas
rorl
movsb
loop
mov
dec
xorl
gs
pop
dec
cmp
cli
and
movsb
xchg
xor
imul
push
inc
jge
xor
or
es
mov
dec
sbb
mov
lret
arpl
rolb
dec
pop
fadds
push
ja
testb
test
push
jecxz
cmpsb
roll
pop
fldcw
cmpb
aas
jecxz
push
in
dec
gs
mov
clc
push
fildl
cli
xor
cmp
mov
push
pop
sub
xor
mov
pop
cld
push
lret
or
inc
fisttpll
mov
lds
lods
jne
push
stos
mov
push
adc
add
pop
cmpsl
mov
push
sbb
loopne
jno
subb
jbe
movsl
pop
aas
ret
popf
mov
lcall
rorl
xchg
jne
inc
loop
dec
xchg
cmc
push
pop
cmp
cltd
xor
or
cs
arpl
rcrb
imul
pop
nop
push
add
lock
jecxz
push
mov
sbb
xor
inc
mov
cs
add
sahf
sarl
incl
sbb
aaa
mov
inc
jnp
imul
dec
mov
in
pop
adc
aam
jecxz
xor
xchg
jbe
iret
bound
mov
icebp
push
xchg
gs
fsub
inc
pop
xchg
xor
jle
test
push
pop
mov
loopne
stos
mov
gs
ljmp
push
xor
arpl
pop
cmp
pop
xchg
xchg
fldt
stos
cmc
jbe
int3
or
dec
pop
push
inc
adc
mov
sbb
sub
test
ret
ja
jnp
pop
insb
movsl
pop
addr16
nop
in
jmp
pushf
mov
jae
ljmp
inc
mov
push
push
lahf
xchg
pop
inc
out
push
pop
push
push
inc
negl
cmpsl
or
push
addb
adc
jge
xchg
add
xor
sarl
out
mov
out
ds
fimull
xchg
adc
xchg
xlat
les
and
mov
cld
insb
movsb
aam
pop
repnz
div
bound
ficomps
repz
es
mov
push
std
push
mov
push
mov
push
mov
scas
subl
mov
ret
inc
sbbb
cmp
jns
imul
push
push
dec
add
cmp
ljmp
cmc
adc
fisubrs
adc
cmpsl
xchg
loope
cmp
push
lods
adc
cmc
cmpsb
pusha
sub
movsb
mov
cli
cltd
cmovo
push
cltd
fistps
sahf
lock
jg
movsb
test
clts
lcall
scas
mov
jb
into
mov
inc
xlat
inc
insl
out
and
fwait
loopne
into
push
imul
mov
push
cli
add
cmpsb
enter
sbb
pop
aaa
cmp
cmp
add
aam
test
enter
mov
cmp
jbe
out
fstpt
adc
cmp
or
iret
sti
inc
sub
repnz
mov
addl
xchg
into
add
rorl
xchg
cs
dec
rorl
dec
hlt
stos
rorb
out
and
xchg
pop
lds
ret
mov
add
xchg
sti
cld
cwtl
cmpl
push
mov
xchg
fbld
xchg
loope
sub
int3
imul
shlb
pop
jecxz
push
lret
adc
outsw
push
movsl
sbb
lock
fsubrs
push
les
mov
sbb
push
push
nop
ja
dec
mov
popw
ja
and
adc
xor
rolb
xor
add
rcll
popa
je
xor
jle
adc
out
mov
aad
subl
pusha
push
mov
ret
adc
cld
lea
fdivrs
loopne
mov
mov
pop
xchg
imul
xchg
fistpll
call
fdivl
mov
hlt
mov
adc
pusha
cs
mov
sar
xchg
shll
jns
mov
xchg
pop
mov
fs
es
pop
or
push
and
push
inc
addr16
movsl
inc
js
test
and
rcl
xchg
push
push
test
cmp
sbb
leave
jns
adc
pop
or
xor
cmp
jmp
dec
test
sbb
xchg
jns
addb
pop
dec
jb
dec
pop
sub
loope
imulb
lret
push
mov
scas
push
xchg
fdivrl
sbb
adc
or
movsl
pop
fcomps
scas
mov
enter
in
push
lods
scas
xchg
cmpsl
subb
add
mov
out
adc
inc
lods
rcrl
lret
shrl
pop
popa
sahf
imull
ljmp
jb
mov
int
jmp
mov
cld
sbbl
fadds
out
aaa
loop
mov
cmpb
cmc
adc
sbb
fistpl
bound
arpl
jg
mov
roll
iret
mov
imul
dec
mov
xchg
dec
lods
in
or
pop
sbb
add
mov
xchg
and
not
mov
inc
jge
mov
inc
pusha
and
inc
aam
push
iret
fmul
add
jl
adc
iret
popf
jl
mov
pop
mov
test
mov
mov
jnp
sahf
ficompl
out
imul
gs
xor
movsb
xorl
mov
jp
mov
lods
xor
idivb
cli
sub
sar
mov
cwtl
push
cmpsb
dec
mov
mov
jp
call
fwait
sub
js
andl
outsl
mov
test
addb
mov
dec
icebp
pop
xchg
mov
xchg
gs
add
gs
nop
xchg
xchg
inc
icebp
leave
insl
mov
push
psllw
sub
dec
or
lock
in
stos
ficoms
push
jg
imul
push
sub
or
mov
and
popf
ret
xchg
enter
cmp
inc
mov
inc
inc
popa
cmp
pop
or
pusha
sbb
sbb
mov
mov
xchg
fsubrp
punpcklwd
imulb
mov
jl
jae
test
fists
dec
cwtl
std
cmpsb
iret
jmp
repnz
mov
cmp
sbb
push
or
pop
out
icebp
xchg
and
xor
xchg
js
add
cmpsl
mov
ss
clc
mov
in
stos
mov
or
stos
aad
movsb
mov
bound
std
mov
mov
es
out
cmp
lret
xchg
int
pop
pusha
js
pop
push
outsl
mov
jno
dec
int3
cmpsl
xchg
stos
cmp
dec
inc
insl
mov
mov
lods
sub
andl
pop
adc
pop
mov
mov
xchg
pushf
cmp
push
fsubs
ret
or
sti
lds
mov
and
nop
mov
jo
pop
pop
xchg
cld
xchg
fcomp
hlt
jno
imul
jmp
pop
dec
cmpsl
jne
ds
fistl
xor
shll
sbb
xchg
mov
or
subb
gs
clc
decb
sub
mov
push
sub
clc
sar
inc
add
jo
pop
xor
gs
mov
inc
cs
xchg
dec
fldt
push
and
and
repnz
mov
clc
fsubrl
jo
and
inc
add
ja
scas
push
jae
inc
enter
xor
repnz
pop
add
sarb
lock
add
aas
fcmovbe
mov
xor
add
push
iret
ds
xchg
out
lock
shlb
mov
mov
into
stos
jne
mov
dec
jae
jo
mov
inc
mov
out
int3
sub
ds
pop
dec
xchg
inc
mov
pop
lcall
pop
imul
cmpsl
cmpsb
int
sbb
pop
mov
inc
dec
int
aas
lock
arpl
notb
lcall
leave
lcall
shrb
mov
lcall
push
iret
leave
fs
js
fisubl
cmp
cmp
push
fisttpll
xor
mov
les
mov
sub
cmpsb
fcoml
fnstenv
xor
shll
cmpsb
loop
mov
lcall
dec
pop
adc
push
repnz
int
sbb
and
push
cmpsl
int
daa
mov
cwtl
and
sub
cmp
mov
stos
inc
mov
dec
inc
ds
sbb
test
in
test
ret
push
or
das
inc
addr16
xchg
fdivrs
in
int3
jne
in
fwait
shlb
flds
add
mov
adc
xchg
xchg
jo
jo
movsl
fs
push
push
sti
sbbb
mov
stos
jecxz
fmul
pop
mov
pushf
dec
mov
pop
mov
push
enter
pop
int3
rcrb
xor
mov
leave
mov
push
pop
adc
push
out
mov
jne
cs
mov
pop
or
pop
jmp
lea
jge
cld
mov
sub
in
leave
inc
rcll
imul
push
adc
sub
mov
dec
jl
pop
xchg
jbe
jae
and
dec
push
sbbb
aas
sub
std
dec
shlb
aas
imul
mov
push
xor
shll
outsl
dec
ss
sub
inc
push
out
shl
mov
mov
hlt
cld
pop
lret
test
in
add
decl
and
out
inc
scas
xchg
fisubrs
sbb
loope
pushf
stos
xchg
mov
mov
rorb
rcr
addr16
mov
pop
sub
push
push
stos
adc
jne
push
faddl
mov
jo
push
and
out
pop
das
push
xor
std
stos
cli
push
push
sub
test
daa
fimuls
mov
dec
jge
or
jno
insl
jecxz
xchg
or
sti
std
pushf
scas
adc
and
and
mov
push
mov
mov
pop
cmpsl
mov
push
jnp
mov
pop
scas
lcall
or
les
adc
insl
xchg
jno
or
adc
pop
arpl
push
sbb
sub
adc
sub
clc
test
push
xchg
in
mov
std
fs
and
loope
hlt
xor
ret
in
jns
call
sbb
subl
mov
mov
jecxz
iret
out
cmp
add
icebp
pop
inc
jno
mov
leave
cli
xchg
xchg
and
not
jg
lea
and
mov
cwtl
pop
rcrl
push
outsl
lahf
out
xchg
cs
add
xchg
adc
fidivrs
stos
push
push
jg
adc
dec
aad
and
or
lahf
in
divl
jmp
popa
andb
xchg
testb
inc
adc
js
dec
aam
inc
das
bound
adc
bound
ja
cs
stos
and
or
mov
sbb
lret
cmp
das
divl
ret
sbb
ss
je
cmpsl
fildll
and
and
push
ret
xor
sbbl
sbb
fwait
loope
cmp
inc
sahf
mov
fwait
jge
test
stc
int
aad
mov
dec
and
ds
ja
and
dec
push
pop
daa
lret
xchg
mov
mov
fwait
rorl
sub
cli
mov
adc
outsl
mov
ret
push
loopne
mov
out
inc
add
daa
sahf
mov
jecxz
sbb
mov
xor
and
rorb
xchg
dec
in
cwtl
dec
inc
cmpsb
movb
pop
jnp
inc
xchg
add
dec
pop
sub
mov
push
push
and
add
out
fidivl
mov
ds
stos
aaa
or
movsl
shrl
pop
clc
out
frstor
cmp
or
xor
xchg
stos
inc
rcl
pop
lods
inc
cmovno
popf
dec
inc
mov
lds
mov
addb
pcmpgtb
js
popf
pop
imul
lahf
inc
mov
fldt
mov
mov
cmpb
adc
mov
sub
sarl
jle
lret
ret
sbb
jne
mov
sbb
push
jmp
aas
fistl
mov
mov
sub
aam
add
test
loop
jns
sahf
dec
pop
pop
mov
fnstsw
icebp
arpl
ds
stos
adc
cmpsb
mov
adc
aas
or
mov
popl
mov
mov
mov
hlt
and
aas
leave
jne
call
sti
ds
jmp
imull
xlat
out
out
add
stos
dec
jge
lcall
nop
sbb
jns
dec
pop
hlt
test
xchg
mov
pusha
xorl
mov
out
xorl
xor
enter
push
xchg
push
ret
dec
push
fildl
xchg
repz
movsb
int3
testl
mov
and
data16
mov
insb
iret
push
xor
jge
iret
sarb
aaa
clc
push
dec
movsl
sahf
xchg
push
push
or
pop
mov
popa
pop
arpl
add
clc
mov
mov
cwtl
or
adc
pop
es
aad
pop
pop
fstpt
cs
sub
mov
leave
movsb
cmc
stc
push
adc
sbb
aam
sarl
lock
sub
scas
leave
test
jmp
js
add
loope
shll
jg
les
push
push
mov
or
sub
xor
fisttps
es
popa
stos
adc
test
xchg
mov
ret
loope
sbb
push
xrelease
cs
std
or
and
pop
mov
sbb
mov
xchg
jo
add
lcall
xor
xchg
mul
insb
scas
xor
xchg
fadd
jo
aam
mov
mov
icebp
sbb
xor
sub
imul
ds
mov
pop
or
stc
lret
cmp
bound
cmpsl
xor
sub
fcomps
mov
or
sub
insb
out
in
xor
mov
inc
aad
mov
jmp
in
mov
shl
loope
stos
jbe
jae
aas
jp
adc
js
xlat
orb
adc
pop
addr16
inc
cltd
sbb
clc
pop
aaa
aad
jp
mov
lds
adc
mov
shlb
dec
sub
fldt
mov
push
cmp
mov
stos
movsl
insl
test
popl
dec
sbb
aam
lret
mov
push
arpl
arpl
test
mov
and
inc
pop
inc
fisubs
cmp
or
and
lea
and
dec
fdivs
xchg
dec
into
and
test
cwtl
stos
xor
add
xor
sub
inc
fdivrl
cmpsl
lret
fisttps
sbb
cmp
xchg
jecxz
mov
adc
sldt
leave
or
fwait
sbb
ja
call
dec
or
sub
fdivp
dec
or
mov
or
js
sbb
pop
jle
jno
imul
or
outsb
imul
fwait
and
mov
in
ret
xchg
xchg
into
enter
mov
jnp
icebp
shrb
mov
xlat
sub
aaa
jb
lods
mov
xchg
mov
mov
outsb
xlat
mov
adc
ljmp
jns
js
push
scas
addl
stos
cmpsl
inc
testl
mov
add
std
sub
sbb
xor
cld
in
adc
dec
push
mov
mov
push
jle
cmp
cmp
mov
test
loopne
sbb
cltd
xchg
int3
mov
jg
pusha
cmc
jae
je
insb
in
ljmp
jp
jp
pusha
and
sbb
dec
lret
and
fs
mov
mov
shll
sub
mov
push
fimuls
out
ret
imul
je
xor
fnstcw
jl
lcall
fistpl
cwtl
into
in
push
fidivrl
sub
cld
or
xchg
mov
aaa
xchg
loopne
daa
and
outsb
sub
and
pop
jge
addr16
sbb
ljmp
divps
mov
popf
xchg
mov
icebp
call
mov
add
in
pop
leave
cmp
imul
jecxz
add
orl
add
rcll
mov
mov
movsb
clc
iret
out
sbb
lods
jp
les
adc
sbb
push
loope
lds
add
fisttpll
decl
lahf
pop
lea
xchg
jecxz
pop
data16
pop
insb
push
ror
xchg
cmc
push
cmp
data16
push
cmp
mov
inc
jbe
movsl
dec
and
hlt
cmc
lds
test
adc
lahf
sbb
test
dec
repnz
mov
in
sub
xchg
test
jne
jae
shlb
aaa
mov
cmpsb
xor
data16
int3
loop
sub
push
adc
cmc
les
rcrl
pop
shrb
leave
rcl
int
aaa
out
xor
adc
adc
adc
fdiv
add
das
cmp
xor
test
iret
or
loop
or
scas
insb
adc
xchg
jb
mov
push
mov
push
iret
rclb
push
xchg
out
and
inc
shll
mov
xorb
bnd
xchg
int
mov
and
mov
ss
xlat
das
repz
sbb
loope
inc
subl
fwait
mov
out
nop
or
dec
scas
sub
push
das
cmp
lcall
das
mov
fimull
adc
mov
movsl
adc
div
or
loopne
mov
fisubrl
jecxz
sbb
jge
imul
popa
mov
add
scas
sarl
or
test
popf
jge
pop
loope
ds
mov
and
jp
addr16
or
mov
cmp
xor
lcall
out
adc
jbe
fsub
cmp
imul
pusha
pop
pop
data16
mov
nop
mov
jb
and
and
inc
xchg
aas
outsb
shr
lret
lds
push
mov
xchg
arpl
xchg
jne
dec
jmp
jbe
outsb
dec
add
cmc
jb
mov
mov
inc
bound
jbe
inc
jno
js
inc
mov
negl
loop
addr16
pusha
mov
into
ljmp
pusha
push
dec
bound
cmc
mov
push
add
mov
or
fisttpl
xchg
pusha
or
dec
push
xor
jp
cmp
inc
xchg
mov
cmpb
ret
mov
push
clc
add
inc
and
test
fistl
jae
je
sub
das
nop
shrl
mov
pop
shl
and
out
mov
and
lahf
scas
mov
mov
bound
sbb
fstps
insb
shlb
xor
inc
fs
cmp
movsl
or
or
adc
scas
add
orb
aaa
xchg
and
out
push
xchg
mov
pop
cmpb
mov
aad
insl
sub
pop
repnz
cmp
arpl
or
cli
fdivrl
push
rcrl
jo
mov
cmp
mov
into
add
aaa
mov
ret
ja
mov
sarl
xchg
out
mov
mov
add
mov
cmp
sbb
xchg
push
sbb
add
in
add
inc
xor
in
dec
adc
inc
dec
push
pop
out
rolb
lret
jge
mov
insl
xchg
hlt
inc
loop
push
pop
addr16
push
push
inc
jmp
jns
mov
dec
push
xor
jl
and
sbb
fcomp
std
pusha
jge
rol
popf
mov
int
stos
bound
insl
xor
sbb
fidivrs
cmp
xchg
push
fidivs
lahf
insl
cltd
pop
or
xchg
sbb
xor
sahf
lahf
sbb
push
ss
sarl
jge
mov
gs
divl
sub
testl
and
sub
mov
call
loopne
jns
mov
aas
lret
jmp
loopne
pop
mov
call
xor
sahf
jg
sub
pop
fnstsw
movsl
test
sti
iret
push
out
ja
jge
push
jno
fcmovnbe
les
xchg
faddp
test
mov
and
and
ds
cmp
add
push
inc
andb
addr16
not
lret
leave
xchg
xchg
push
and
lret
sti
sti
icebp
ret
sbb
sbb
das
movsb
dec
xchg
mov
jne
jecxz
pop
out
lods
xorl
cmp
pop
fidivl
cmc
test
fwait
es
adc
arpl
mov
lcall
sbb
cltd
dec
insl
fnstsw
jae
inc
mov
mov
and
xchg
cwtl
imul
out
lds
aas
and
into
mov
or
dec
pushf
movsb
iret
movsb
mov
dec
sub
cs
pop
sub
push
inc
mov
stos
push
out
int3
aam
das
sub
int
xchg
sub
iret
and
adc
mov
scas
loop
outsl
dec
fcoml
in
adc
stos
lods
fwait
popf
mov
and
mov
cmp
dec
pushl
or
mov
mov
ljmp
pop
call
or
sub
pushf
xchg
adc
loopne
fnsave
ret
cmpsl
sbb
pop
fcmovnbe
shr
pop
addr16
ljmp
rorb
ret
pop
scas
aad
stc
rol
mov
xchg
enter
inc
cmpsb
test
aad
jbe
or
lock
inc
nop
push
jb
andb
mov
and
push
lcall
mov
aaa
mov
lret
sub
aad
or
adc
dec
shlb
shr
mov
cmc
leave
int3
test
or
insl
aam
daa
adc
adc
mov
aad
outsb
dec
jb
mov
jne
sbb
arpl
xor
in
leave
leave
in
mov
movsb
fdivrl
icebp
or
or
lret
idivl
ss
push
stos
out
push
push
mov
aas
insb
sub
arpl
pop
int3
imul
addr16
je
mov
loopne
fiadds
xor
repnz
stos
bound
adc
sbb
cmp
and
xchg
pop
dec
jl
repz
sti
and
sbb
inc
movsl
or
subl
jle
xchg
das
lea
jmp
addr16
movsl
sbb
or
inc
or
les
jne
scas
mov
add
in
aaa
push
movsb
movsb
imul
push
push
dec
add
sbbl
push
rorb
rolb
push
sbbb
iret
mov
in
or
mov
in
jmp
jb
sbb
jle
xchg
xchg
or
rorl
ds
adc
jecxz
scas
scas
mov
cltd
xor
mov
adc
add
cmp
idivb
scas
and
dec
int
mov
addr16
gs
aas
xchg
sub
mov
jnp
jae
inc
enter
inc
sub
jp
sbb
lods
aas
dec
sbb
pop
add
movsb
cmp
jae
popf
cmp
cwtl
aas
mov
push
test
icebp
out
popf
mov
inc
dec
dec
cmp
orb
mov
push
or
mov
pop
das
mov
mov
pusha
rcr
movsb
fisttpll
mov
adc
popf
adc
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
push
add
add
add
add
add
add
add
add
or
incl
add
add
add
add
add
outsl
add
je
and
dec
add
add
add
jb
outsl
add
add
je
jns
and
jo
popa
add
add
add
add
add
add
add
add
add
add
xor
add
add
cmp
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
je
jne
je
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
arpl
imul
and
and
cmp
gs
gs
gs
jb
jbe
insb
gs
or
and
and
and
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
and
and
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
jae
arpl
imul
cmp
je
jne
je
outsb
outsw
ds
jae
gs
bound
push
inc
add
add
cmp
add
adc
sbb
sbb
and
in
cmp
cmp
cmp
or
adc
sbb
and
sub
xor
cmp
inc
cmp
cmp
cmp
cmp
cmp
add
sub
add
adc
adc
pop
cmp
lcall
cmp
cmp
cmp
cmp
in
cmp
add
insb
add
add
xor
xor
inc
xor
dec
xor
je
jp
cwtl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
jo
xorb
xor
mov
xor
loopne
lock
xor
xor
sysenter
push
xor
xor
xor
xor
xor
push
add
mov
aaa
in
cld
aaa
xor
mov
cmp
cmp
cmp
cmp
and
dec
cmp
lea
xchg
cmp
cmp
mov
cli
cmp
cmp
or
or
jb
jge
cwtl
cmp
cmp
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
test
clc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
aas
mov
aas
in
aas
add
add
add
add
popa
xor
jl
xchg
mov
sahf
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xorl
mov
xor
cmpsb
xor
xor
xor
dec
xor
pop
xor
lahf
xor
sysenter
pop
xor
xor
xor
push
ss
ss
mov
ss
or
adc
cmp
cmp
cmp
cmp
cmp
jno
lea
mov
add
or
cmp
jge
ret
cmp
cmp
cmp
nop
cmp
and
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
and
aas
cmp
cmpb
cmp
and
cmp
push
jbe,pt
lock
sbb
aas
test
scas
aas
les
leave
aas
sarl
xlat
aas
fidivrs
in
jmp
icebp
aas
stc
aas
add
add
add
add
xor
xor
xor
xor
xor
xor
inc
xor
dec
xor
jno
ja
jg
test
mov
xchg
xor
xor
enter
out
xor
xor
xor
xor
pop
xor
xor
cmp
pop
xor
je
jl
test
nop
xor
xor
or
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
xor
jmp
ss
ss
lods
ss
mov
ss
xlat
cmp
inc
aaa
inc
aaa
iret
aaa
fidivs
in
aaa
pushl
fistpll
jmp
cmp
cmp
dec
cmp
cmp
cmp
cmp
cmp
sbb
and
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
cmp
cmp
cmp
cmp
mov
scas
cmp
cmp
fdivrl
cli
cmp
adc
sbb
mov
add
add
add
mov
xchg
xor
xor
xor
pop
xor
xor
insl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xorb
ss
ss
pop
aaa
addr16
jp
mov
cmpsl
aaa
scas
aaa
mov
into
aaa
out
add
or
adc
sbb
and
das
cmp
jg
nop
cmp
cmp
push
cmp
lcall
cmp
cmp
cmp
push
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
jl
mov
idivl
and
sub
inc
aas
dec
aas
push
aas
push
aas
pop
aas
arpl
push
jno
js
jg
xchg
lea
xchg
aas
pushf
aas
movsb
aas
lods
aas
mov
aas
int3
aas
aas
fistpll
ljmp
add
nop
add
xchg
add
add
xor
xor
xor
xor
cmp
dec
xor
xor
xor
xor
xor
xor
insb
xor
xor
xor
xor
xor
xor
lock
cmp
cmp
cmp
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
cmp
pop
cmp
cmp
cmp
cmp
or
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
add
add
loopne
in
call
xor
xor
xor
xor
xor
inc
aaa
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
mov
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
mov
cmp
cmp
cmp
cmp
je
js
jl
cmpb
cmp
mov
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
fcomps
add
add
add
js
add
or
add
int3
sahf
add
sahf
lahf
add
add
add
int3
popf
add
int3
lahf
add
add
add
js
add
dec
repz
loopne
add
mov
add
adc
add
sbb
add
push
repz
pop
repz
push
repz
jle
add
mov
add
mov
repz
mov
repz
add
out
add
hlt
repz
push
hlt
add
add
add
and
add
xor
add
cmp
add
dec
hlt
add
push
hlt
add
hlt
add
je
add
mov
add
lcall
add
hlt
add
fdiv
add
call
hlt
add
or
add
sbb
add
cs
add
ds
add
push
cmc
add
pusha
cmc
add
outsb
cmc
add
test
add
xchg
cmc
add
stos
cmc
add
mov
add
ret
add
cmc
add
out
add
add
add
adc
add
and
add
testb
testb
testb
testb
testb
testb
testb
testb
testb
testb
testb
testb
testb
testl
xor
add
inc
testl
testl
nop
testl
mov
add
shl
add
testl
ljmp
add
clc
add
push
clc
add
sub
add
xor
add
inc
clc
add
push
clc
add
pop
clc
add
jo
add
test
add
cwtl
clc
add
mov
add
clc
add
aam
add
loop
add
add
add
push
repz
pop
repz
push
repz
jle
add
mov
add
mov
repz
mov
repz
add
out
add
hlt
repz
push
hlt
add
add
add
and
add
xor
add
cmp
add
dec
hlt
add
push
hlt
add
hlt
add
je
add
mov
add
lcall
add
hlt
add
fdiv
add
call
hlt
add
or
add
sbb
add
cs
add
ds
add
push
cmc
add
pusha
cmc
add
outsb
cmc
add
test
add
xchg
cmc
add
stos
cmc
add
mov
add
ret
add
cmc
add
out
add
add
add
adc
add
and
add
testb
testb
testb
testb
testb
testb
testb
testb
testb
testb
testb
testb
testb
testl
xor
add
inc
testl
testl
nop
testl
mov
add
shl
add
testl
ljmp
add
clc
add
push
clc
add
sub
add
xor
add
inc
clc
add
push
clc
add
pop
clc
add
jo
add
test
add
cwtl
clc
add
mov
add
clc
add
aam
add
loop
add
add
add
inc
inc
dec
xor
cs
insb
add
add
fs
popa
add
add
outsl
jb
inc
outsl
arpl
add
add
fs
outsl
arpl
add
add
gs
inc
inc
add
add
push
je
jb
push
popa
add
add
je
gs
inc
js
outsb
je
outsl
imul
add
inc
jb
popa
je
inc
inc
push
add
add
je
bound
je
jb
arpl
add
add
je
gs
inc
popa
arpl
add
add
push
gs
dec
jne
push
add
add
push
je
jb
inc
outsl
arpl
add
inc
outsb
jne
inc
outsl
outsb
je
push
add
add
inc
gs
je
arpl
bound
arpl
add
inc
gs
bound
arpl
add
inc
push
xor
cs
insb
add
add
inc
gs
insb
imul
je
add
push
gs
jne
jae
jb
add
push
gs
gs
jae
inc
inc
add
add
je
inc
add
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
add
je
arpl
gs
imul
add
je
gs
outsl
popa
jb
dec
popa
jns
jne
add
add
push
imul
outsl
arpl
add
add
je
outsl
jns
imul
add
jae
popa
addr16
gs
add
push
push
outsb
outsl
ja
add
add
je
outsl
jb
addr16
jne
fs
imul
add
dec
arpl
imul
gs
imul
popa
arpl
outsb
je
add
add
popa
jb
jo
gs
add
add
dec
outsl
popa
fs
je
imul
dec
outsl
popa
fs
arpl
insb
gs
je
jb
push
add
add
je
jns
je
insl
dec
outsb
jne
add
push
imul
popa
jae
inc
js
add
add
dec
outsl
popa
fs
insl
popa
addr16
add
add
dec
outsl
popa
fs
jne
jae
jb
add
add
je
imul
popa
arpl
outsb
je
add
add
gs
je
push
imul
push
add
add
je
gs
je
jo
imul
add
inc
gs
outsl
arpl
add
add
dec
outsl
popa
fs
arpl
push
add
add
je
imul
js
push
add
add
push
outsl
jae
push
jne
je
gs
popa
add
add
imul
outsb
outsl
ja
gs
popa
addr16
add
add
push
jo
popa
je
push
imul
add
push
gs
arpl
insb
insb
push
outsl
jae
add
add
popa
jb
outsl
ja
jb
add
add
push
gs
jae
addr16
add
add
inc
outsb
popa
bound
imul
add
inc
jb
ja
gs
inc
js
add
add
gs
je
inc
imul
jb
insl
push
add
add
inc
gs
imul
js
push
add
add
inc
gs
jns
je
insl
dec
gs
imul
dec
outsl
jbe
push
imul
add
dec
outsb
jbe
insb
imul
je
add
add
outsb
dec
gs
jo
add
add
inc
gs
insb
addr16
je
insb
dec
inc
add
add
inc
push
imul
outsl
insl
push
outsl
imul
push
arpl
outsb
push
outsl
inc
insb
imul
add
je
jne
jae
jb
outsl
jae
add
add
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
add
outsb
fs
gs
popa
addr16
add
add
inc
push
js
push
add
add
arpl
outsb
jne
je
insl
add
add
outsl
jae
inc
insb
imul
add
add
dec
jae
insb
imul
inc
outsl
jb
popa
je
jbe
imul
add
dec
jo
outsb
inc
insb
imul
add
add
je
outsb
jne
je
je
add
add
inc
outsb
popa
bound
outsb
jne
je
insl
add
add
inc
gs
jne
dec
outsb
jne
add
add
je
outsb
jne
add
dec
gs
popa
addr16
outsl
js
add
add
je
imul
outsb
addr16
add
add
inc
gs
imul
outsb
addr16
add
add
inc
gs
insb
addr16
je
insl
add
add
push
gs
outsl
arpl
add
add
push
gs
insb
addr16
je
insl
push
gs
push
add
add
jo
imul
add
je
insb
addr16
je
insl
push
gs
push
add
add
fs
imul
add
je
popa
jb
outsb
je
add
push
outsb
push
imul
add
add
inc
imul
dec
gs
popa
addr16
add
add
push
jb
outsb
jae
popa
je
dec
gs
popa
add
add
push
jb
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
add
inc
imul
jae
popa
addr16
add
add
push
outsl
jae
dec
gs
popa
addr16
add
add
inc
gs
gs
popa
addr16
add
add
je
imul
dec
outsl
outsl
imul
